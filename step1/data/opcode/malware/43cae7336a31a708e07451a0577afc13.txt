rcr
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
lock
add
add
adc
add
sub
add
add
or
xor
add
add
add
add
adc
add
add
add
sub
add
push
and
add
jle
add
add
add
add
jae
add
or
add
add
add
add
xor
add
add
add
add
add
outs
sub
push
and
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
jnp
add
add
outs
pop
add
or
add
add
xor
add
add
add
add
add
add
add
add
outs
sbb
add
and
add
sub
jnp
add
add
outs
pop
add
or
adc
add
dec
add
add
add
adc
add
sbb
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
or
pop
sub
push
and
add
or
push
sub
add
push
add
push
sub
xor
add
add
add
add
add
jnp
add
add
add
xor
call
adc
add
or
push
add
add
add
sbb
es
jle
add
add
sbb
es
add
add
push
add
or
adc
sub
add
or
and
add
and
pop
sub
pop
add
push
pop
sub
pop
add
push
outs
and
add
and
outs
sbb
es
jle
add
add
sbb
es
sub
add
or
push
adc
(bad)
push
or
add
outs
add
push
outs
sbb
add
and
add
add
add
xor
push
add
add
add
adc
add
dec
add
add
add
adc
or
push
sub
add
pop
inc
add
add
and
add
push
add
add
add
add
add
sub
pop
xor
pop
add
push
and
sub
push
and
sub
push
and
sub
push
sub
sub
push
sub
add
or
adc
add
add
add
add
add
push
dec
add
add
add
or
add
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
add
add
add
sub
xor
add
add
add
add
add
or
add
add
xor
add
add
add
add
add
or
add
or
pop
add
add
add
add
or
add
add
xor
add
add
add
add
add
add
or
push
pop
jbe
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
and
add
add
add
dec
add
add
push
add
push
add
jnp
add
add
add
jle
add
add
push
add
push
add
add
add
add
jle
add
add
push
add
push
add
or
add
sub
xor
add
add
or
push
pop
add
push
jae
add
or
add
or
add
or
adc
daa
add
or
add
or
sub
add
and
push
add
push
and
sub
add
and
add
add
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
xor
add
add
push
add
adc
sub
add
and
push
add
push
and
sub
add
and
add
or
pop
outs
add
or
popa
push
sub
es
add
and
add
adc
add
inc
add
add
add
adc
outs
xor
add
or
pop
sub
xor
add
and
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
push
pop
outs
xor
add
and
mov
add
add
xor
add
and
add
outs
add
add
add
adc
add
add
pusha
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
add
xor
add
and
sub
or
call
add
and
add
sub
sbb
add
(bad)
(bad)
(bad)
jle
add
add
ficomp
pop
pop
or
xor
sbb
add
add
(bad)
(bad)
call
jle
add
add
pop
sub
add
or
push
add
add
add
add
add
or
jle
add
or
add
add
jle
add
or
add
add
add
add
or
dec
add
add
add
add
jnp
add
add
and
add
sub
sbb
add
add
idiv
(bad)
call
sub
add
add
jge
add
add
add
add
lahf
add
add
pop
add
push
and
add
or
add
add
add
xor
add
add
add
add
add
add
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
jge
add
add
add
add
lahf
add
add
pop
add
push
and
add
or
add
add
xor
add
add
add
add
add
add
sbb
add
sub
xor
push
add
add
add
add
add
add
or
cli
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
and
pop
add
push
and
add
sub
add
add
pop
add
push
and
add
sub
add
add
(bad)
(bad)
(bad)
cmp
jnp
add
add
and
add
add
add
dec
add
add
push
add
push
add
jnp
add
add
add
add
add
add
dec
add
add
push
add
push
add
jnp
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
and
add
add
add
dec
add
add
push
add
push
add
jnp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
push
add
push
add
adc
add
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
and
sbb
add
push
and
add
and
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
add
push
add
push
sub
add
or
add
add
add
xor
add
add
adc
adc
add
sub
push
sub
push
add
push
adc
add
xor
adc
add
imul
add
add
pop
add
push
jb
add
jo
call
and
pop
add
push
and
add
or
add
push
sub
add
or
add
push
adc
add
adc
add
sub
pop
or
push
add
push
and
pop
add
push
and
add
or
add
sub
es
sub
adc
add
add
push
je
sub
add
sbb
add
add
add
adc
hlt
add
add
pop
add
push
and
add
pop
adc
push
add
push
adc
add
or
add
add
sub
push
and
add
jle
add
add
jl
add
sub
push
and
add
call
push
sub
add
or
stc
add
add
pop
add
push
and
add
sub
and
add
sub
push
and
add
jle
add
add
outs
dec
add
push
and
add
sub
push
and
add
and
add
call
push
sub
add
or
sub
add
or
add
or
cmps
add
add
pop
add
push
and
add
or
add
pop
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
adc
push
add
push
adc
pop
add
add
es
sbb
push
add
push
and
add
add
pop
add
push
and
add
or
add
push
sub
add
add
add
adc
add
add
add
push
add
inc
add
add
xor
add
add
adc
adc
pop
add
push
and
add
pop
sbb
push
add
push
sbb
add
xor
sbb
add
imul
add
add
pop
add
push
and
add
sub
push
and
add
or
mov
pop
add
push
and
add
or
add
push
sub
add
or
jle
add
add
inc
add
add
pop
add
push
and
add
sub
push
and
add
and
add
add
pop
add
push
and
add
or
add
push
sub
add
or
push
add
push
sbb
add
sbb
add
sub
pop
and
push
add
push
and
add
add
pop
add
push
and
add
or
add
sub
es
sub
add
add
add
add
daa
add
add
add
xor
add
add
adc
inc
add
add
push
and
add
pop
sub
push
add
push
sbb
add
or
pop
sub
push
add
push
and
add
xor
and
add
xor
push
add
push
and
add
or
pop
xor
push
add
push
sub
add
xor
sub
add
cmp
push
add
push
sub
add
or
pop
cmp
push
add
push
xor
add
xor
xor
add
inc
sub
add
xor
add
or
pop
inc
sub
add
cmp
add
xor
cmp
add
dec
sub
add
cmp
add
or
pop
dec
sub
add
add
add
xor
inc
add
add
push
sub
add
add
add
xor
inc
add
add
push
sub
add
or
add
xor
dec
add
add
pop
sub
add
or
add
xor
dec
add
add
imul
add
add
push
and
add
sub
push
and
add
or
into
add
add
push
and
add
or
add
push
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
pop
sub
add
and
daa
add
add
sub
pop
pusha
sub
add
and
add
add
push
and
add
or
add
sub
es
jle
add
add
dec
push
add
sub
push
and
add
sub
push
and
add
or
fadd
add
sub
push
and
add
or
add
or
and
add
and
sub
add
xor
aaa
add
add
daa
or
add
push
and
push
add
sub
push
or
add
or
add
sub
fiadd
jle
add
add
push
pop
add
sub
push
pop
ins
sub
add
sub
adc
mov
pop
add
push
adc
imul
and
add
adc
and
jo
push
add
push
adc
cmp
and
and
or
add
pop
add
push
adc
or
add
adc
add
pop
add
push
and
push
add
push
outs
cmp
es
sbb
add
add
(bad)
(bad)
call
js
push
add
push
sbb
pop
jl
push
add
push
and
push
add
push
outs
add
or
or
add
pop
add
push
adc
sub
add
or
add
adc
sub
add
or
inc
add
add
idiv
(bad)
call
push
sbb
add
and
test
add
sub
add
pop
adc
adc
adc
mov
inc
(bad)
(bad)
call
inc
add
add
idiv
(bad)
(bad)
jle
add
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
push
pop
add
sub
push
and
push
add
push
sub
adc
dec
or
add
pop
add
push
and
imul
and
add
adc
and
mov
add
sub
add
adc
cmp
and
and
or
add
pop
add
push
and
cmp
add
and
add
adc
and
or
add
pop
add
push
and
add
sub
add
outs
cmp
es
and
add
push
sbb
and
push
add
push
and
add
push
outs
add
or
or
add
pop
add
push
and
cmp
add
and
add
adc
sub
add
or
or
adc
and
push
add
push
pop
adc
adc
adc
mov
dec
(bad)
(bad)
call
inc
add
add
idiv
(bad)
(bad)
fidiv
adc
and
add
push
and
pop
add
push
and
sbb
add
and
add
sub
es
sub
add
push
adc
adc
outs
aas
add
or
pop
pop
add
adc
inc
add
or
and
add
mov
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
or
add
push
and
add
sub
push
sub
add
or
add
sub
push
and
add
and
outs
or
add
pop
add
push
and
cmp
add
and
add
adc
and
add
and
inc
add
add
idiv
(bad)
jmp
test
add
sub
add
and
add
or
and
add
adc
add
push
add
push
and
pop
add
push
and
sbb
add
jae
add
push
sub
es
jle
add
add
and
add
and
add
jle
add
add
or
add
push
and
or
add
pop
add
push
sub
add
or
add
sub
push
sub
adc
and
or
add
pop
add
push
adc
sub
add
or
add
adc
sub
add
or
inc
add
add
idiv
(bad)
jmp
mov
add
sub
add
sub
add
push
sub
add
adc
and
add
push
and
or
add
pop
add
push
and
sbb
add
jae
add
push
sub
es
jle
add
add
and
add
cmp
inc
add
add
idiv
(bad)
(bad)
jle
add
add
or
add
push
and
add
sub
push
and
add
and
add
sub
push
sub
adc
and
pop
add
push
adc
sub
add
or
mov
add
adc
sub
add
or
inc
add
add
idiv
(bad)
jmp
mov
push
add
push
sub
sub
add
sub
adc
mov
push
add
push
and
or
add
pop
add
push
adc
outs
sbb
add
jae
add
push
sub
fiadd
jle
add
add
and
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
or
add
push
and
add
sub
push
and
add
and
add
sub
push
sub
adc
pop
or
add
pop
add
push
and
cmp
add
and
add
adc
sub
add
or
add
add
(bad)
(bad)
jmp
rol
add
push
add
push
xor
add
adc
fisubr
adc
les
add
sub
add
and
add
sub
push
and
sbb
add
jae
add
push
sub
fiadd
jle
add
add
and
add
cmp
imul
add
or
add
push
and
or
add
pop
add
push
and
add
and
pop
add
push
and
add
and
std
or
add
pop
add
push
and
cmp
add
sub
sub
add
or
add
add
(bad)
(bad)
jmp
enter
sub
add
cmp
add
adc
cmp
add
xor
adc
add
push
add
push
and
add
sub
push
and
sbb
add
and
add
sub
es
jle
add
add
and
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
or
add
push
and
add
sub
push
and
add
and
add
sub
push
and
add
and
movs
or
add
pop
add
push
and
cmp
add
sub
sub
add
or
rol
add
sub
add
cmp
cmp
add
xor
pop
and
add
add
push
add
push
and
or
add
pop
add
push
and
sbb
add
and
add
sub
es
jle
add
add
and
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
or
add
push
and
or
add
push
sub
add
or
add
sub
push
and
add
and
dec
or
add
push
and
cmp
add
sub
sub
add
or
add
sub
add
add
add
sbb
fidiv
adc
and
add
add
push
add
push
and
add
pop
add
push
and
sbb
add
and
add
sub
es
jle
add
add
and
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
or
add
push
and
add
sub
push
and
add
and
add
sub
push
and
add
and
add
add
sub
push
and
cmp
add
and
add
adc
sub
add
or
inc
add
add
idiv
(bad)
jmp
loopne
add
sub
add
add
add
sbb
fisubr
adc
and
add
add
push
add
push
and
push
add
sub
push
and
sbb
add
and
add
sub
fiadd
jle
add
add
and
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
or
add
push
and
add
sub
push
and
add
and
add
sub
push
and
add
and
ror
add
pop
add
push
adc
cmp
add
sub
sub
add
or
inc
add
add
idiv
(bad)
jmp
call
push
add
push
or
add
sbb
dec
add
add
xor
sbb
add
push
add
push
and
push
add
sub
push
and
sbb
add
and
add
sub
es
jle
add
add
and
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
or
add
push
and
add
sub
push
and
add
and
add
sub
push
and
add
and
jl
add
sub
push
adc
sub
add
or
add
adc
sub
add
or
lock
add
push
add
push
or
add
push
or
add
adc
and
add
add
push
add
push
and
pop
add
push
and
sbb
add
and
add
sub
fiadd
adc
inc
add
or
xchg
clc
(bad)
call
inc
add
add
idiv
(bad)
(bad)
fimul
adc
push
or
add
outs
add
sub
add
inc
push
add
add
add
das
add
add
add
pushf
add
add
add
add
add
add
add
mov
add
and
add
daa
add
add
add
add
add
dec
add
add
add
lea
add
add
add
add
add
add
repz
add
add
outs
add
add
inc
add
add
add
add
add
add
push
add
add
add
add
add
add
imul
add
loopne
add
sub
add
inc
add
add
add
add
add
add
add
inc
add
add
add
add
pop
add
jne
add
dec
or
add
add
add
add
add
add
xchg
or
add
add
or
add
xor
add
inc
add
add
add
add
add
imul
add
add
add
add
add
add
or
add
jge
add
xchg
add
add
add
add
add
add
iret
or
add
add
dec
or
add
add
add
add
add
add
xchg
or
add
add
add
add
add
add
add
add
add
iret
add
add
add
dec
or
add
add
add
add
add
xor
add
add
and
add
add
push
add
push
adc
add
cld
add
add
push
add
push
adc
add
add
add
sub
add
sbb
add
add
add
sub
add
sub
add
or
or
add
sub
add
sub
add
and
add
add
push
add
push
sub
add
and
add
add
and
adc
add
pop
add
push
and
add
and
adc
add
pop
add
push
and
add
or
mov
add
or
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
or
add
or
and
add
sub
push
sub
add
and
inc
add
add
idiv
(bad)
jmp
adc
add
sub
add
adc
add
imul
sub
add
sub
push
and
add
and
xor
add
sub
push
and
cmp
add
and
add
adc
and
add
and
inc
add
add
idiv
(bad)
call
add
inc
add
or
add
sub
push
and
add
sub
sbb
add
add
idiv
(bad)
jmp
adc
add
sub
add
adc
add
imul
inc
adc
add
pop
add
push
sub
add
add
pop
add
push
and
cmp
add
sub
sub
add
or
inc
add
add
idiv
(bad)
call
add
or
add
sub
push
sub
add
sub
sbb
add
add
(bad)
(bad)
jmp
sbb
add
sub
add
sbb
add
xor
push
and
add
sub
add
and
add
sub
push
and
sbb
add
and
add
sub
es
sub
add
add
fld
add
fld
add
xor
add
inc
add
add
xor
fiadd
add
add
add
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
add
push
add
idiv
(bad)
call
sub
add
add
mov
pop
add
push
outs
inc
add
or
sbb
add
add
(bad)
(bad)
jmp
and
add
sub
add
add
das
add
push
and
add
leave
adc
add
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
popa
sbb
add
add
(bad)
(bad)
inc
and
adc
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
and
add
sub
add
add
das
add
push
sbb
add
not
add
sub
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
pop
pop
inc
add
add
idiv
(bad)
inc
and
adc
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
sub
add
sub
add
add
das
add
push
sbb
add
sub
add
sub
push
and
add
dec
add
add
xor
add
sub
add
add
arpl
idiv
(bad)
inc
and
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
jmp
sub
add
sub
add
add
das
add
push
and
add
push
adc
add
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
pop
sbb
add
add
idiv
(bad)
inc
and
add
pop
add
push
and
add
sub
sbb
add
add
(bad)
(bad)
jmp
xor
add
sub
add
add
das
add
push
and
add
xchg
add
sub
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
push
add
scas
adc
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
xor
add
sub
add
add
das
add
push
sub
add
mov
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
push
sbb
add
(bad)
(bad)
inc
and
adc
add
pop
add
push
and
add
sub
and
add
add
push
add
push
add
das
add
push
and
add
out
adc
add
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
arpl
inc
add
add
idiv
(bad)
inc
and
adc
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
cmp
add
sub
add
add
das
add
push
and
add
and
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
push
sbb
add
add
(bad)
(bad)
inc
and
add
sub
push
and
add
and
inc
add
add
push
add
push
add
das
add
push
and
add
pop
adc
add
pop
add
push
and
add
dec
add
add
xor
add
sub
add
add
pop
sbb
add
add
(bad)
(bad)
inc
and
add
push
and
add
and
inc
add
add
push
add
push
add
das
add
push
and
add
(bad)
adc
add
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
pop
add
mov
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
jmp
dec
add
add
push
add
push
add
das
add
push
and
add
(bad)
adc
add
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
pop
sbb
add
add
(bad)
(bad)
inc
and
adc
add
pop
add
push
and
add
and
dec
add
add
push
add
push
add
das
add
push
and
add
add
add
sub
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
push
add
adc
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
push
add
add
push
add
push
add
das
add
push
and
add
inc
adc
add
pop
add
push
and
add
dec
add
add
xor
add
sub
add
add
arpl
inc
add
add
idiv
(bad)
inc
and
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
jmp
push
add
add
push
add
push
add
das
add
push
and
add
mov
add
sub
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
pop
pop
inc
add
add
idiv
(bad)
inc
and
pop
add
push
and
add
and
pop
add
add
push
add
push
add
das
add
push
and
add
xlat
adc
add
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
pop
sbb
add
add
(bad)
(bad)
inc
and
add
sub
push
and
add
and
pop
add
add
push
add
push
add
das
add
push
and
add
pop
adc
add
pop
add
push
and
add
dec
add
add
xor
add
and
add
sub
add
xor
fiadd
add
add
add
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
or
jle
add
add
push
add
idiv
(bad)
call
sub
add
add
mov
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
pusha
add
add
push
add
push
add
xor
add
adc
add
leave
adc
add
pop
add
push
jle
add
add
dec
add
add
xor
add
and
add
jle
add
add
push
add
jmp
add
and
add
sub
sbb
add
(bad)
(bad)
jmp
add
add
push
add
push
add
xor
add
and
add
not
add
sub
push
and
add
dec
add
add
xor
add
sub
add
add
pop
sbb
add
add
(bad)
(bad)
inc
and
adc
add
pop
add
push
outs
inc
add
or
sbb
add
add
(bad)
(bad)
jmp
push
push
add
push
add
xor
add
and
add
sub
add
sub
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
arpl
inc
add
add
idiv
(bad)
inc
and
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
jmp
ins
add
add
push
add
push
add
xor
add
and
add
push
adc
add
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
pop
sbb
add
add
(bad)
(bad)
inc
and
add
pop
add
push
outs
inc
add
or
sbb
add
add
(bad)
(bad)
jmp
jo
add
sub
add
add
xor
add
and
add
xchg
add
sub
push
and
add
dec
add
add
xor
add
sub
add
add
push
add
scas
adc
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
je
add
sub
add
add
xor
add
and
add
mov
pop
add
push
jle
add
add
dec
add
add
xor
add
and
add
jle
add
add
push
add
in
add
sub
push
outs
inc
add
or
inc
add
add
idiv
(bad)
jmp
js
add
sub
add
add
xor
add
sub
add
out
adc
add
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
popa
sbb
add
add
idiv
(bad)
inc
and
adc
add
pop
add
push
outs
inc
add
or
inc
add
add
idiv
(bad)
jmp
jl
add
sub
add
add
xor
add
and
add
and
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
pop
sbb
add
add
(bad)
(bad)
inc
and
add
sub
push
outs
inc
add
or
inc
add
add
idiv
(bad)
jmp
add
add
push
add
push
add
xor
add
and
add
pop
adc
add
pop
add
push
jle
add
add
dec
add
add
xor
add
and
add
jle
add
add
pop
sbb
add
add
(bad)
(bad)
inc
and
add
push
outs
inc
add
or
sbb
add
add
(bad)
(bad)
jmp
test
add
sub
add
add
xor
add
and
add
(bad)
adc
add
pop
add
push
jle
add
add
dec
add
add
xor
add
and
add
jle
add
add
pop
sbb
add
(bad)
(bad)
inc
and
pop
add
push
outs
inc
add
or
inc
add
add
idiv
(bad)
jmp
mov
add
sub
add
add
xor
add
and
add
(bad)
adc
add
pop
add
push
jle
add
add
dec
add
add
xor
add
and
add
jle
add
add
push
pop
inc
add
add
idiv
(bad)
inc
and
adc
add
pop
add
push
and
add
and
mov
add
sub
add
add
xor
add
add
add
add
add
sub
push
and
add
dec
add
add
xor
add
sub
add
add
pop
sbb
add
add
(bad)
(bad)
inc
and
adc
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
nop
add
add
push
add
push
add
xor
add
and
add
inc
adc
add
pop
add
push
jle
add
add
dec
add
add
xor
add
sub
add
add
push
add
jo
add
sub
push
outs
inc
add
or
inc
add
add
idiv
(bad)
jmp
xchg
add
add
push
add
push
add
xor
add
or
add
mov
add
sub
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
popa
sbb
add
(bad)
(bad)
inc
and
pop
add
push
outs
inc
add
or
inc
add
add
idiv
(bad)
jmp
cwde
add
add
push
add
push
add
xor
add
and
add
xlat
adc
add
pop
add
push
and
add
dec
add
add
xor
add
and
add
jle
add
add
pop
sbb
add
add
(bad)
(bad)
inc
and
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
jmp
pushf
add
add
push
add
push
add
xor
add
adc
add
pop
adc
add
pop
add
push
jle
add
add
dec
add
add
xor
add
and
add
sub
add
xor
add
add
add
add
add
sub
add
push
add
sub
add
add
daa
add
push
sub
sbb
add
xlat
add
add
sub
add
sub
or
dec
adc
add
pop
add
push
and
add
or
add
sub
add
or
add
push
outs
inc
add
or
push
cmp
add
adc
sub
add
and
mov
es
outs
push
add
or
cmp
add
adc
sub
add
or
or
add
adc
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
adc
push
and
add
and
pop
add
push
adc
push
and
add
adc
inc
adc
push
sub
add
push
and
adc
add
pop
add
push
and
adc
add
and
add
and
sbb
xor
add
push
adc
push
and
add
adc
add
mov
add
adc
push
sub
sbb
add
add
(bad)
(bad)
call
add
push
and
add
and
add
sub
push
and
adc
add
and
add
and
dec
adc
push
and
add
and
adc
add
pop
add
push
and
adc
add
and
add
and
sbb
mov
add
push
and
adc
add
and
add
adc
add
mov
add
adc
sub
add
or
mov
push
adc
(bad)
push
or
add
outs
add
adc
sub
add
and
(bad)
(bad)
fimul
adc
(bad)
push
or
add
sub
inc
add
add
add
xchg
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
das
add
add
add
add
add
pop
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
adc
mov
push
add
push
sub
add
and
add
add
sub
or
or
add
push
add
push
adc
push
or
add
or
and
pop
add
push
and
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
add
or
test
add
sub
add
sub
adc
lods
add
add
push
add
push
pop
adc
add
mov
cmps
sbb
add
add
(bad)
(bad)
jmp
sbb
add
adc
add
sldt
adc
add
push
or
outs
jb
add
pop
outs
je
add
and
jae
add
pop
outs
push
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
outs
imul
add
or
retf
adc
add
push
pop
outs
imul
sub
add
or
es
outs
imul
add
push
and
adc
add
push
and
add
push
and
add
and
and
add
sub
push
and
add
push
and
add
or
sub
and
add
and
inc
add
add
idiv
(bad)
dec
sub
add
and
inc
add
add
idiv
(bad)
dec
and
push
add
push
sub
add
and
add
sub
push
and
add
or
and
pop
add
push
and
add
or
mov
add
sub
add
adc
add
add
add
pop
add
inc
add
add
xor
add
add
adc
sub
add
jle
add
add
jle
add
dec
add
or
pop
jle
add
add
fcom
add
sub
push
and
add
and
add
and
dec
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
push
add
sub
push
and
add
or
add
sub
push
pop
add
sub
push
and
add
or
add
and
add
sub
push
and
add
sub
push
or
cmp
add
and
add
sub
add
and
push
add
push
sub
add
push
sub
and
pop
add
push
or
sub
and
pop
add
push
and
add
or
mov
add
or
dec
add
or
icebp
pop
add
sub
push
and
add
or
or
enter
and
sbb
add
pop
add
push
and
add
or
push
sub
add
add
add
in
add
add
add
xor
add
add
adc
mov
push
add
push
sub
add
and
add
push
or
add
add
and
add
sub
push
and
add
sub
add
sub
es
outs
aas
add
or
xor
add
inc
add
or
outs
dec
add
push
or
add
and
add
sub
push
and
add
sub
add
sub
adc
inc
add
or
inc
add
add
idiv
(bad)
call
sub
add
fimul
adc
push
or
add
outs
add
sub
add
add
add
inc
add
add
add
add
adc
add
aad
add
adc
add
add
push
inc
adc
add
add
add
add
add
add
add
add
jl
add
xchg
add
add
add
add
add
add
add
add
add
and
add
add
add
outs
add
add
add
add
add
add
test
add
sub
push
and
add
and
add
add
xchg
sbb
add
pop
add
push
sub
add
or
jle
add
add
movs
sbb
add
pop
add
push
and
add
and
add
add
leave
sbb
add
pop
add
push
and
add
sub
add
add
(bad)
sbb
add
pop
add
push
and
add
and
add
add
jecxz
add
sub
push
sub
add
or
add
add
repnz
add
pop
add
push
sub
add
or
add
add
call
add
sub
push
and
add
and
add
add
push
sbb
add
pop
add
push
and
add
and
add
add
sbb
pop
add
push
and
add
sub
add
add
sub
add
sub
push
and
add
and
add
add
cmp
pop
add
push
and
add
and
add
add
dec
sbb
add
pop
add
push
and
add
and
add
add
arpl
add
sub
push
and
add
sub
add
add
jle
add
sub
push
and
add
and
add
add
cdq
sbb
add
pop
add
push
and
add
and
add
or
add
add
xor
add
add
adc
scas
sbb
add
pop
add
push
and
add
add
xor
add
sub
sub
add
or
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
and
sbb
add
pop
add
push
and
add
add
xor
add
and
add
jle
add
or
jle
add
add
and
add
sub
push
and
add
and
sbb
add
pop
add
push
and
add
add
xor
add
and
add
pop
jle
add
or
dec
add
or
add
sbb
add
add
(bad)
(bad)
jmp
hlt
add
push
or
outs
aas
add
or
ret
add
add
add
inc
add
or
add
outs
dec
add
push
and
add
or
jp
add
sub
push
and
add
and
inc
add
or
dec
add
or
test
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
and
add
sub
push
adc
(bad)
push
dec
add
add
add
or
add
sub
add
sub
es
sbb
add
add
(bad)
(bad)
jmp
int3
sbb
add
pop
add
push
and
add
add
xor
add
and
add
sub
cmp
add
sub
push
and
add
add
xor
add
sub
adc
inc
add
or
xor
(bad)
call
idiv
(bad)
(bad)
fimul
adc
push
or
add
outs
add
pop
sub
adc
add
add
add
test
push
add
add
adc
push
add
add
adc
sub
add
and
add
or
add
add
and
add
sub
push
adc
(bad)
push
dec
add
add
add
or
add
sub
add
sub
es
sbb
add
add
(bad)
(bad)
call
sub
add
and
pop
add
push
and
add
add
xor
add
and
add
sub
and
sbb
add
pop
add
push
pop
mov
add
sub
add
or
mov
add
pop
sub
add
xor
add
add
adc
sub
push
jle
add
or
dec
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
add
push
and
add
add
pop
add
push
jae
add
push
or
add
xor
add
jge
add
add
add
xor
add
jge
add
add
push
jge
add
add
add
add
add
sub
es
sub
adc
push
add
add
add
add
adc
sub
or
jle
add
or
dec
add
or
add
add
add
push
and
sbb
add
pop
add
push
and
add
sub
add
lea
or
aam
add
sub
add
add
xor
add
and
fadd
add
sub
add
add
xor
add
and
fadd
add
sub
add
push
mov
add
mov
add
sub
add
add
add
sub
add
sub
add
push
and
call
push
add
push
sub
add
push
mov
add
mov
add
sub
add
jle
add
add
or
push
add
or
lock
add
push
add
push
sub
es
sub
adc
add
pop
add
add
add
adc
or
inc
adc
add
add
add
add
add
add
add
cmp
add
inc
add
add
add
pusha
add
add
add
jp
add
xchg
add
xchg
add
add
add
add
add
add
int3
add
add
push
sbb
add
push
and
sbb
add
push
and
sbb
add
push
and
sbb
add
push
and
sbb
add
push
and
sbb
add
push
and
sbb
add
push
and
sbb
add
push
and
sbb
add
push
and
sbb
add
push
and
sbb
add
push
sub
jns
add
sub
push
and
sbb
add
push
sub
fwait
sbb
add
push
and
sbb
add
push
and
sbb
add
push
and
add
or
add
xor
add
add
adc
or
inc
adc
add
add
add
or
add
push
add
add
add
sbb
add
and
add
add
add
add
xor
add
cmp
add
add
add
add
add
push
add
add
add
pop
add
add
pusha
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
or
adc
add
test
add
adc
test
add
sub
add
and
add
(bad)
and
add
pop
add
push
and
add
mov
add
sub
add
and
add
push
and
push
add
push
jae
add
or
sub
add
and
add
sub
push
and
add
and
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
and
add
add
push
add
push
and
push
add
push
pop
jae
add
or
sub
add
sbb
add
repnz
add
add
adc
add
or
add
add
sub
add
pop
inc
add
add
add
add
add
add
add
sbb
add
add
or
adc
pop
add
push
and
sub
add
and
cld
add
add
push
add
push
xor
add
idiv
(bad)
call
sub
add
es
sub
add
or
push
outs
push
add
or
dec
adc
pop
add
or
and
add
add
push
add
push
and
idiv
(bad)
inc
and
add
sub
add
xor
sbb
add
(bad)
(bad)
inc
sub
add
push
and
add
or
sub
add
or
add
or
add
and
add
sub
add
add
(bad)
(bad)
(bad)
fimul
adc
push
or
add
outs
add
pop
sub
add
adc
add
add
loop
push
add
add
adc
add
jae
add
sbb
add
add
sub
add
push
and
pusha
pop
inc
add
add
idiv
(bad)
call
sub
add
es
mov
or
add
sub
add
xor
sub
add
and
add
or
add
add
sub
sbb
add
(bad)
(bad)
inc
outs
sbb
add
and
push
add
sub
push
sub
add
jo
add
xor
or
add
add
add
add
adc
sub
add
push
and
push
add
add
add
add
adc
xor
add
and
add
and
sub
add
sub
add
and
push
add
or
mov
add
adc
sub
add
or
add
add
push
add
push
or
add
cmp
add
and
adc
add
or
adc
add
sub
add
pop
or
add
pop
add
push
and
add
pop
add
or
add
sub
add
and
add
jle
add
add
pop
add
or
jle
add
add
mov
add
idiv
(bad)
call
sub
add
adc
sub
add
or
(bad)
call
inc
add
add
idiv
(bad)
(bad)
fimul
adc
(bad)
push
or
add
outs
add
fidiv
adc
sbb
add
pop
add
push
and
push
add
sub
push
and
sbb
add
and
add
and
add
fiadd
and
push
add
sub
push
and
add
push
sub
add
add
add
add
add
add
add
add
xor
add
adc
push
add
add
add
add
adc
sub
add
or
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
cld
push
add
sub
push
and
add
and
add
pop
inc
add
add
idiv
(bad)
inc
and
add
sub
add
(bad)
fld
add
adc
add
sbb
add
sub
add
and
push
add
sub
push
and
and
add
sub
add
outs
pop
add
or
imul
sub
add
xor
add
add
idiv
(bad)
inc
and
add
sub
add
call
add
push
add
push
call
push
adc
sub
es
add
sub
call
add
sub
push
and
pop
add
or
add
sub
sbb
add
add
add
adc
sbb
add
sub
push
and
add
or
add
add
xor
and
add
sub
add
or
adc
add
pop
add
or
add
or
and
add
add
push
add
push
jae
add
or
add
or
outs
pusha
add
or
add
or
outs
popa
add
or
add
sub
add
inc
jne
add
sbb
add
(bad)
(bad)
call
sub
add
or
add
or
add
adc
adc
outs
add
or
add
or
add
add
push
add
push
or
push
sub
sbb
add
add
(bad)
(bad)
inc
push
mov
sbb
inc
add
add
idiv
(bad)
jmp
inc
pop
add
sub
push
and
add
fimul
add
pop
adc
add
ficom
sub
sbb
add
add
(bad)
(bad)
dec
outs
add
or
add
or
add
sub
push
outs
add
or
mov
pop
add
push
and
cmp
add
and
add
adc
or
add
adc
add
pop
add
push
and
add
and
fistp
add
sub
push
and
push
add
add
xor
add
and
add
adc
and
add
sub
add
xor
sbb
add
(bad)
(bad)
inc
add
add
add
push
add
push
pop
outs
imul
push
and
pop
add
sub
push
add
sub
add
or
add
ficomp
adc
and
and
add
pop
add
push
and
xor
add
and
add
fiadd
ficomp
or
jo
add
sub
push
adc
sub
add
or
add
fiadd
push
sub
inc
add
add
add
cwde
add
add
add
call
add
add
add
add
add
add
add
add
add
add
add
or
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
sbb
add
adc
add
sbb
add
add
cmp
add
and
add
push
sub
add
add
(bad)
(bad)
call
sub
add
and
add
push
add
push
sub
xchg
and
add
pop
add
push
push
sub
add
or
add
sub
add
and
push
add
or
add
add
add
or
dec
add
add
push
add
push
or
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
dec
add
add
push
add
push
adc
or
push
add
add
push
add
push
pop
or
add
pop
add
push
and
add
pop
add
or
add
sub
add
and
add
jle
add
add
pop
add
or
jle
add
add
xchg
adc
or
(bad)
call
inc
add
add
idiv
(bad)
(bad)
fimul
adc
add
outs
add
and
add
push
add
push
sub
add
add
add
add
add
push
add
add
add
xor
add
sahf
and
add
pop
add
push
and
add
or
mov
add
sub
add
and
add
or
pop
add
or
add
or
and
and
add
pop
add
push
and
add
pop
and
and
add
pop
add
push
and
add
pop
push
mov
outs
outs
add
or
and
add
sub
add
outs
outs
add
or
outs
jo
add
or
push
and
add
push
add
push
push
mov
jno
add
ficomp
inc
add
add
idiv
(bad)
call
sub
add
or
add
or
pop
outs
pusha
add
or
add
or
add
or
add
or
add
sub
add
inc
adc
adc
inc
add
add
idiv
(bad)
dec
outs
add
adc
adc
add
sub
push
and
xor
add
sub
add
add
push
add
push
adc
sub
add
sub
add
add
push
nop
add
add
mov
adc
add
add
add
add
jmp
sub
add
adc
add
imul
add
add
adc
add
or
add
add
push
add
push
adc
inc
or
add
jae
add
or
or
and
add
push
add
push
das
sbb
inc
add
add
idiv
(bad)
call
sub
add
es
pop
outs
je
add
adc
jo
add
sub
add
pop
adc
add
outs
jne
add
xor
or
xor
add
add
adc
inc
and
add
pop
add
push
and
add
or
add
jle
add
add
sub
add
or
add
sub
add
sub
or
jge
add
sub
push
and
add
or
mov
add
push
sub
add
or
add
les
add
sub
push
and
add
and
add
sub
add
outs
jbe
add
or
and
add
push
add
push
xor
pop
inc
add
add
idiv
(bad)
call
sub
add
es
pop
add
add
or
add
add
push
add
push
pop
outs
imul
sub
add
or
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
and
adc
add
pop
add
push
and
add
and
add
jge
add
pop
add
adc
aas
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
and
add
pop
add
push
and
add
and
adc
add
pop
add
push
and
add
sub
add
sub
add
and
add
add
push
add
push
sub
add
push
sub
add
add
(bad)
(bad)
jmp
movs
add
add
push
add
push
sub
test
add
sub
add
sub
add
adc
add
pop
add
add
add
and
and
add
pop
add
push
and
add
or
add
and
add
sub
push
add
cmp
add
and
add
and
pop
add
push
add
cmp
add
and
add
add
and
add
push
sub
add
sbb
add
pop
add
add
add
adc
mov
add
sub
add
sub
add
or
outs
js
add
and
adc
sub
add
and
pop
add
push
adc
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
fimul
adc
(bad)
push
sldt
sbb
add
or
sub
add
adc
add
add
add
dec
add
add
add
adc
push
add
add
adc
add
add
fbld
add
sub
push
jle
add
add
xchg
sbb
add
pop
add
push
and
add
and
adc
add
pop
add
push
sub
or
xor
add
sub
push
push
sub
add
or
add
push
sub
add
or
add
add
(bad)
(bad)
call
sub
add
es
outs
inc
add
or
and
add
sub
push
and
add
sub
and
add
push
sub
mov
push
add
push
sub
xor
add
add
add
add
add
adc
add
inc
add
push
add
dec
add
push
add
push
sub
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
repnz
add
pop
add
push
and
add
sub
push
sub
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
adc
add
je
add
add
add
add
add
add
add
add
add
repnz
add
pop
add
push
outs
jnp
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
repnz
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
inc
and
and
add
pop
add
push
and
add
and
sub
add
or
adc
add
add
add
adc
add
add
push
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
jo
push
sub
or
add
or
mov
jge
add
or
sub
add
and
add
or
popa
push
sub
xor
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
sub
add
and
add
or
push
add
add
add
add
add
add
sub
add
and
add
or
or
add
add
add
jle
add
add
sub
add
or
or
add
add
add
jle
add
add
sub
adc
push
add
add
add
add
adc
or
add
add
xchg
and
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
xchg
or
pop
pop
dec
add
cmp
add
add
add
xchg
pop
inc
pop
sub
add
add
(bad)
(bad)
(bad)
jle
add
add
xchg
and
(bad)
call
bound
push
jle
add
add
pop
pop
xchg
pusha
or
sbb
or
add
inc
jle
add
add
xchg
and
(bad)
(bad)
call
sbb
push
jle
add
add
pop
pop
xchg
pop
adc
or
jle
add
add
sbb
push
bound
push
jle
add
add
sbb
pusha
or
sbb
or
add
pop
das
or
add
(bad)
(bad)
jmp
jle
add
add
add
push
sub
add
add
or
pop
add
add
add
add
add
add
push
and
add
push
and
add
push
and
add
sub
add
or
adc
add
add
add
and
add
pop
add
push
xor
add
sbb
add
stc
add
add
add
adc
add
or
add
ja
add
sbb
add
add
(bad)
(bad)
call
sub
add
sub
or
outs
test
add
and
xor
pop
sub
and
and
add
pop
add
push
and
add
push
sub
add
or
add
or
add
push
or
add
or
pop
sub
ret
fld
pop
(bad)
push
adc
add
outs
add
sub
add
push
adc
add
aas
add
or
cmp
or
inc
add
or
add
add
pop
add
push
and
inc
add
push
and
add
and
add
adc
push
adc
push
adc
outs
xchg
add
adc
sub
add
and
inc
add
add
idiv
(bad)
(bad)
fimul
adc
(bad)
push
or
add
outs
add
push
sub
add
add
add
add
add
push
add
add
add
xchg
add
push
add
add
sbb
add
dec
add
add
add
adc
inc
add
push
add
inc
add
push
and
add
sub
push
and
add
and
cli
add
push
and
or
jg
add
sub
push
pop
outs
sbb
add
and
add
and
add
fiadd
sub
add
add
add
add
sub
add
add
xor
add
add
adc
hlt
add
add
pop
add
push
and
add
adc
jae
add
or
jle
add
add
sub
add
and
add
cmp
add
and
add
call
or
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
jbe
add
pop
add
jo
call
or
and
add
and
inc
add
add
idiv
(bad)
dec
sub
add
or
add
and
add
add
pop
add
push
and
add
or
add
push
jae
add
or
fisubr
or
add
push
add
push
and
pop
add
push
and
add
or
add
sub
add
sub
add
adc
add
add
add
add
add
xor
add
add
adc
add
add
push
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
jo
push
sub
or
add
or
push
pop
mov
jge
add
and
add
or
add
or
push
sub
xor
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
push
or
add
add
xchg
and
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
xchg
or
pop
pop
dec
add
sub
ja
add
xchg
pop
inc
pop
sub
add
xchg
and
(bad)
call
bound
push
jle
add
add
pop
pop
xchg
pusha
or
sbb
or
add
inc
jle
add
add
xchg
and
(bad)
(bad)
call
sbb
push
jle
add
add
pop
pop
xchg
pop
adc
or
jle
add
add
sbb
push
bound
push
jle
add
add
sbb
pusha
or
sbb
or
add
pop
das
adc
inc
add
add
idiv
(bad)
(bad)
jle
add
or
sub
ja
add
push
outs
jge
add
or
sub
sub
add
xor
push
add
add
add
add
add
or
jle
add
add
leave
add
sub
push
and
add
cmp
add
outs
pop
add
or
add
or
jle
add
add
leave
add
sub
push
jle
add
add
cmp
add
and
add
sub
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
adc
add
add
rol
add
push
add
push
and
add
add
push
add
push
and
add
add
push
add
push
and
add
add
push
add
push
jae
add
or
sub
outs
mov
add
and
add
sub
add
xor
or
add
push
sub
sub
aam
add
sub
add
sub
xor
add
add
add
add
sub
outs
mov
add
and
add
sub
add
xor
add
add
idiv
(bad)
call
sub
add
sub
outs
pop
add
and
add
and
add
sub
add
xor
sub
pop
add
and
add
and
add
sub
add
inc
sub
in
add
sub
add
sub
add
add
or
add
add
add
add
lea
add
and
add
and
add
add
push
add
push
xor
inc
add
add
idiv
(bad)
call
sub
add
sub
outs
pop
add
and
add
and
add
sub
add
xor
inc
add
add
idiv
(bad)
jmp
lea
add
and
add
and
add
and
add
sub
add
inc
sub
hlt
add
add
push
add
push
sub
sbb
add
add
add
adc
clc
add
add
push
add
push
or
cld
add
add
push
add
push
or
add
add
loope
add
sub
push
and
add
sub
add
sub
es
imul
and
add
pop
add
push
and
add
sub
add
sub
es
push
adc
bound
add
adc
push
adc
or
imul
add
cmp
add
jle
add
add
loope
add
sub
push
and
add
sub
push
and
add
sub
add
sub
pop
adc
sub
sbb
add
add
(bad)
(bad)
call
sub
add
adc
jb
add
jo
xchg
add
or
inc
add
add
idiv
(bad)
call
pop
movs
push
add
add
or
add
sub
add
xor
sbb
add
add
(bad)
(bad)
jmp
adc
add
sub
add
or
lahf
add
add
adc
add
sub
add
adc
and
add
add
push
add
push
adc
jle
add
add
sahf
and
add
pop
add
push
and
add
sub
add
sub
cmp
inc
add
add
idiv
(bad)
call
add
add
add
idiv
(bad)
call
add
sbb
inc
add
add
idiv
(bad)
jmp
(bad)
add
sub
push
and
inc
and
add
push
and
imul
and
add
pop
add
push
adc
and
add
add
push
add
push
sub
pop
adc
sub
pop
inc
add
add
idiv
(bad)
call
pop
jb
add
jo
xchg
add
or
inc
add
add
idiv
(bad)
call
pop
movs
push
add
add
and
add
sub
add
xor
sub
add
sub
add
adc
jle
add
add
mov
add
push
and
add
sub
add
sub
es
jle
add
add
mov
add
push
and
add
sub
push
and
add
add
push
add
push
sub
adc
adc
sub
adc
jb
add
jo
xchg
add
or
inc
add
add
idiv
(bad)
call
pop
movs
push
add
add
xor
add
sub
add
xor
sbb
add
add
(bad)
(bad)
jmp
cmp
add
sub
add
adc
adc
sub
push
sbb
add
(bad)
(bad)
call
or
and
add
sub
add
or
clc
add
add
push
cmp
add
add
add
(bad)
(bad)
call
or
loopne
add
pop
inc
add
add
idiv
(bad)
jmp
inc
add
add
push
add
push
or
mov
add
cmp
sahf
add
add
idiv
(bad)
jmp
inc
add
add
push
add
push
adc
and
add
sub
add
adc
imul
and
add
push
and
add
push
add
push
sub
cmp
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
repz
add
push
and
add
sub
push
and
add
sub
add
sub
adc
sbb
add
add
(bad)
(bad)
call
or
jo
xchg
add
or
add
add
(bad)
(bad)
call
or
add
push
add
add
push
add
push
xor
pop
add
add
push
add
push
adc
jle
add
add
outs
add
sub
push
and
add
sub
add
sub
cmp
add
sbb
add
(bad)
(bad)
(bad)
jle
add
add
outs
add
sub
push
and
add
sub
push
and
add
sub
add
sub
or
sbb
add
add
(bad)
(bad)
call
or
jo
xchg
add
or
or
add
add
add
push
add
push
xor
sbb
add
(bad)
(bad)
jmp
push
push
add
push
adc
or
sbb
add
add
(bad)
(bad)
call
or
ds
add
add
idiv
(bad)
jmp
ins
add
add
push
add
push
or
jo
add
sub
add
or
sbb
and
add
push
add
push
inc
or
and
add
sub
add
inc
or
add
fiadd
push
sub
add
add
(bad)
(bad)
inc
and
add
push
add
push
inc
sub
add
add
push
add
push
sub
inc
sbb
add
add
add
add
add
add
add
add
lea
add
add
add
sub
add
add
add
and
add
sub
push
and
add
std
add
sub
push
and
add
push
daa
add
sub
push
and
add
sub
pop
add
push
cmp
add
xor
add
sub
push
and
add
inc
daa
add
sub
push
and
add
pop
add
jo
add
add
xor
add
sub
push
and
add
push
daa
add
sub
push
and
add
gs
add
sub
push
and
add
pushf
daa
add
sub
push
and
add
add
add
sub
push
and
add
dec
sub
add
pop
add
push
add
sub
add
pop
add
push
and
add
fsubr
add
sub
push
and
add
cmc
sub
add
pop
add
push
and
add
sub
add
sub
push
and
add
pop
sub
add
pop
add
push
and
add
add
or
add
add
add
add
sub
jb
add
jo
xchg
add
add
jb
add
jo
xchg
add
add
jb
add
jo
xchg
add
add
jae
add
or
add
add
jae
add
or
add
add
add
add
add
nop
add
add
add
add
stos
cmp
add
pop
add
push
or
add
sub
push
and
add
and
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
add
push
sub
add
or
add
iret
cmp
add
pop
add
push
and
add
lock
add
pop
add
push
and
add
add
add
sub
add
adc
add
add
push
adc
xor
add
add
add
add
add
add
add
jne
add
and
sub
add
add
add
add
add
or
xor
add
add
add
jle
add
add
jle
add
dec
add
or
add
push
and
add
sub
push
and
add
sub
or
add
or
push
add
add
add
add
sub
add
and
add
sub
add
xor
add
add
add
add
add
jnp
add
add
jne
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
jb
add
add
add
add
add
xor
add
add
add
add
add
call
add
and
add
push
and
add
sub
add
xor
add
add
add
mov
pop
add
push
and
add
xor
jne
add
add
add
add
add
add
mov
add
outs
xchg
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
sub
push
and
add
sub
push
sub
or
and
add
sub
push
and
add
or
mov
add
add
jae
add
or
add
add
add
fiadd
add
add
add
add
add
adc
add
add
push
imul
inc
add
add
xor
add
add
add
add
add
add
add
mov
add
outs
xchg
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
ja
add
add
add
add
add
or
inc
add
add
add
add
sub
add
and
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
push
sub
mov
add
sub
add
sub
add
xor
call
add
adc
jnp
add
add
and
jnp
add
add
imul
pop
inc
add
add
idiv
(bad)
call
sub
add
add
push
add
and
add
sbb
add
add
(bad)
(bad)
inc
sub
add
and
add
push
sub
or
jae
add
or
push
and
push
add
push
push
xchg
add
add
push
add
push
outs
xchg
add
or
xchg
add
or
and
push
add
push
push
pushf
add
add
push
add
push
outs
xchg
add
or
or
add
or
add
adc
sub
sbb
add
add
(bad)
(bad)
inc
outs
add
ficomp
push
sub
push
outs
add
and
add
sub
push
sub
xchg
add
add
add
add
add
push
mov
adc
add
add
add
jno
add
add
add
add
add
arpl
add
add
add
add
add
add
xchg
add
add
sub
add
and
pop
add
push
and
add
push
and
add
and
add
and
pop
add
push
and
add
push
and
add
sub
add
or
mov
add
add
sub
add
and
add
add
xor
add
add
adc
shr
add
sub
push
and
add
add
imul
sub
or
cld
sub
add
pop
add
push
and
add
or
add
push
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
push
and
add
or
add
sub
and
sub
add
pop
add
push
and
add
or
into
sub
add
pop
add
push
and
mov
add
sub
add
or
add
pop
adc
and
push
add
push
adc
sub
pop
adc
call
or
sub
add
and
add
sub
sbb
add
add
(bad)
(bad)
jmp
pop
sub
add
pop
add
push
or
sbb
add
sub
push
and
add
push
and
add
sub
dec
add
or
sub
add
adc
and
add
push
pop
adc
adc
adc
mov
mov
inc
add
add
idiv
(bad)
inc
sub
adc
or
test
add
sub
add
adc
sub
or
or
add
add
add
jnp
add
sub
dec
sub
add
pop
add
push
and
add
and
push
mov
lods
add
add
push
add
push
xor
sbb
add
add
(bad)
(bad)
call
add
add
push
add
push
sub
add
adc
and
add
push
pop
adc
adc
adc
mov
xchg
sub
add
xor
add
add
add
add
add
sub
add
and
add
and
add
push
and
add
and
xor
add
add
add
add
add
add
outs
add
push
and
add
sub
push
sub
add
or
add
and
sbb
add
add
add
adc
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
jns
add
and
inc
add
add
idiv
(bad)
jmp
mov
push
add
push
sub
outs
sub
add
pop
add
push
and
add
add
sub
add
and
sub
add
pop
add
push
and
add
or
add
push
sub
add
and
inc
add
add
idiv
(bad)
jmp
(bad)
add
pop
add
push
and
add
push
sub
sub
add
or
add
or
add
sub
push
sub
or
add
or
pop
outs
mov
and
add
sub
push
add
imul
push
sub
or
add
or
and
add
push
outs
mov
and
add
add
push
add
push
outs
mov
movs
add
or
add
or
outs
cmps
add
or
cmps
add
or
and
add
sub
push
and
add
and
add
dec
add
or
mov
inc
add
add
idiv
(bad)
call
add
test
add
and
add
and
add
adc
sbb
add
(bad)
(bad)
jmp
ins
sub
add
push
and
add
or
mov
add
and
add
add
push
add
push
adc
fstp
add
add
add
add
pop
add
push
and
add
push
and
add
and
add
adc
add
add
push
add
push
sub
add
push
sub
mov
add
sub
push
sub
and
sub
add
push
and
add
or
add
and
add
add
push
add
push
adc
fisubr
xor
add
sub
push
and
add
and
add
add
push
add
push
adc
fimul
push
and
add
add
push
add
push
and
add
sub
push
and
sbb
add
and
add
sub
es
and
add
push
sub
add
add
push
add
push
sub
pop
sub
add
add
add
dec
add
add
add
add
add
add
add
add
add
sbb
add
add
add
adc
add
add
fadd
add
sub
add
sub
and
add
sub
push
and
add
or
add
push
sub
add
or
inc
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
sub
or
pop
and
das
add
sub
push
and
add
and
add
xor
pop
add
push
and
add
add
cmp
add
and
add
add
and
add
sub
push
and
add
jge
add
add
sub
add
pop
add
push
and
add
add
enter
sub
push
and
add
add
pop
add
or
add
add
add
add
aad
add
sub
push
and
add
and
loopne
add
sub
add
xor
jnp
add
add
and
add
add
push
add
push
pop
outs
imul
sub
add
or
add
add
(bad)
(bad)
inc
or
add
or
add
add
and
das
add
sub
push
and
sbb
add
and
add
and
add
fiadd
add
jnp
add
add
enter
sub
push
and
add
add
add
or
add
add
adc
add
add
add
xor
and
sbb
add
dec
add
add
add
adc
call
push
add
push
or
sub
add
sub
add
and
add
add
push
add
push
or
sub
and
xor
add
pop
add
push
and
add
or
cmp
add
sub
add
add
push
add
push
or
add
sub
add
add
add
or
sbb
add
inc
add
add
xor
or
add
sub
add
and
add
add
push
add
push
or
and
add
sub
push
and
add
add
imul
add
or
xor
add
pop
add
push
pop
sub
add
or
mov
add
jae
add
push
or
pop
outs
mov
add
add
add
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
ja
add
or
jnp
add
add
clc
add
add
push
add
push
outs
popf
add
push
or
add
push
or
jp
add
sub
push
and
add
or
mov
add
or
add
push
sub
sbb
add
(bad)
(bad)
inc
sub
sbb
add
add
(bad)
(bad)
jmp
xchg
xor
add
pop
add
push
add
add
add
sbb
add
and
add
and
add
add
jnp
add
add
xchg
add
add
cld
add
add
push
add
push
sub
add
add
push
add
push
sub
xor
add
sub
push
and
xor
add
pop
add
push
sub
xor
add
pop
add
push
push
sub
add
or
add
jle
add
or
push
or
and
add
sub
add
outs
jae
add
and
add
sub
add
xor
and
add
sub
add
outs
jae
add
sub
es
sbb
add
add
(bad)
(bad)
call
sub
add
es
and
add
add
push
add
push
outs
jae
add
and
add
mov
add
add
and
add
sub
add
outs
imul
sub
add
or
xor
add
pop
add
push
and
add
or
add
sub
outs
imul
or
or
sub
adc
add
sbb
add
push
add
push
and
add
sub
add
sub
cdq
xor
add
pop
add
push
and
add
outs
and
add
and
pushf
xor
add
pop
add
push
and
cmp
add
and
add
adc
add
add
push
add
push
adc
sub
or
or
add
or
jle
add
add
pop
add
push
outs
xor
add
and
add
mov
add
add
xor
add
and
and
add
sub
add
pop
adc
adc
adc
outs
jne
add
xor
add
pop
add
push
pop
sub
add
or
add
fidiv
adc
and
add
add
push
add
push
and
xor
add
pop
add
push
and
sbb
add
and
add
sub
es
pop
sub
add
add
add
xor
add
add
add
add
add
add
push
add
add
add
add
add
ins
xor
add
pop
add
push
and
add
jle
add
add
sub
push
and
add
sub
push
and
add
push
and
add
sub
add
sub
and
inc
add
add
idiv
(bad)
call
sub
add
and
pop
add
push
and
add
jle
add
add
sub
push
and
add
sub
push
and
add
push
and
add
and
add
sub
add
sub
es
and
xor
add
pop
add
push
and
add
push
and
add
and
add
and
add
sub
xor
add
add
add
adc
sbb
add
push
adc
and
xor
add
pop
add
push
and
add
sub
add
push
and
and
add
sub
push
and
add
jae
add
sub
push
or
adc
add
pop
add
push
and
add
add
push
add
push
sub
add
or
add
sub
push
and
add
and
add
add
push
add
push
sub
add
or
add
sub
push
sub
or
adc
add
push
add
push
adc
jle
add
add
push
sub
jmp
add
add
(bad)
(bad)
call
sub
add
es
add
add
push
sub
adc
adc
adc
inc
add
add
push
add
push
adc
add
sbb
sbb
jle
add
add
and
and
add
pop
add
push
and
add
or
add
sub
push
and
add
and
add
sub
add
outs
mov
add
sub
sbb
add
add
(bad)
(bad)
call
or
add
add
pop
add
push
and
cmp
add
sub
adc
adc
sub
push
sbb
add
add
(bad)
(bad)
call
push
adc
xor
sbb
add
(bad)
(bad)
call
push
adc
adc
add
push
add
push
pop
adc
mov
dec
(bad)
(bad)
call
add
or
xor
add
sbb
add
add
(bad)
(bad)
call
pop
and
add
push
add
push
pop
adc
adc
sub
adc
add
sub
push
and
add
or
xor
add
push
and
cmp
add
and
add
jle
add
add
and
xor
add
push
and
add
sub
add
push
sub
cmp
add
add
idiv
(bad)
(bad)
jle
add
add
and
add
add
pop
add
push
and
add
sub
add
push
sub
cmp
inc
add
add
idiv
(bad)
(bad)
jle
add
add
and
xor
add
push
and
add
sub
push
and
add
push
cmp
add
jle
add
add
and
xor
add
push
and
xchg
add
push
cmp
add
add
inc
add
add
idiv
(bad)
(bad)
jle
add
add
and
xor
add
push
and
add
sub
push
and
add
push
cmp
add
add
add
(bad)
(bad)
(bad)
jle
add
add
and
pop
add
push
and
xchg
add
push
and
add
sbb
add
(bad)
(bad)
(bad)
jle
add
add
and
add
sub
push
and
add
sub
push
and
add
push
cmp
add
add
idiv
(bad)
(bad)
jle
add
add
and
add
sub
push
and
add
sub
push
and
add
push
and
imul
gs
sub
push
and
add
sub
add
push
sub
sub
sbb
add
(bad)
(bad)
(bad)
jle
add
add
and
add
pop
add
push
and
add
sub
add
push
sub
sbb
add
add
(bad)
(bad)
jmp
xor
add
push
adc
or
mov
add
add
ins
add
push
and
imul
push
sub
adc
adc
add
add
push
add
push
adc
adc
adc
and
add
push
add
push
adc
sub
pop
adc
call
add
and
add
or
or
sub
and
add
and
or
add
add
pop
add
push
and
cmp
add
and
add
sub
adc
push
sub
es
adc
adc
xor
push
adc
adc
and
add
sub
add
pop
adc
adc
adc
mov
mov
idiv
(bad)
call
add
or
inc
add
add
idiv
(bad)
call
pop
and
add
push
add
push
pop
adc
adc
sub
add
add
pop
add
push
and
cmp
add
and
add
jle
add
add
or
add
add
and
add
push
sub
and
aaa
add
sub
push
and
add
push
sub
sub
add
push
sub
add
add
(bad)
(bad)
dec
outs
mov
add
and
add
sub
push
and
add
sub
push
outs
and
add
and
outs
mov
add
and
add
sub
push
and
add
sub
push
and
add
and
sub
adc
dec
add
or
add
sbb
add
(bad)
(bad)
jmp
jo
add
sub
add
adc
add
or
add
and
add
adc
adc
jle
add
add
sbb
inc
add
add
idiv
(bad)
call
push
jge
add
jae
add
or
jle
add
add
mov
adc
adc
and
add
push
add
push
xor
inc
add
add
idiv
(bad)
call
push
and
pop
add
push
outs
pop
add
or
push
adc
jnp
add
add
sub
add
or
add
or
js
add
sub
add
adc
add
push
adc
adc
sub
add
add
(bad)
(bad)
call
sbb
push
push
add
push
jae
add
or
sbb
sbb
add
or
adc
jl
add
sub
add
xor
add
add
idiv
(bad)
jmp
sahf
aaa
add
sub
push
and
add
adc
adc
and
push
add
push
pop
adc
jnp
add
add
sub
add
or
add
and
add
push
adc
adc
outs
mov
es
outs
inc
add
or
inc
add
add
idiv
(bad)
jmp
add
pop
add
push
and
add
adc
and
and
adc
outs
mov
es
sub
add
or
add
or
mov
add
push
add
push
adc
jle
add
add
sbb
idiv
(bad)
call
push
jle
add
jae
add
or
jle
add
add
mov
adc
adc
and
add
push
xor
inc
add
add
idiv
(bad)
jmp
test
add
sub
push
and
add
adc
adc
and
push
add
push
pop
and
cmp
add
pop
add
push
and
add
and
add
push
adc
add
add
inc
add
add
idiv
(bad)
call
add
push
outs
mov
sub
sub
test
add
and
push
add
push
(bad)
fld
add
adc
and
pushf
add
add
push
add
push
and
pop
add
push
and
and
push
add
push
adc
jnp
add
add
sub
add
or
and
add
push
and
cmp
add
pop
add
push
and
adc
adc
adc
mov
add
and
add
and
cmp
add
pop
add
push
and
add
or
add
add
sub
push
and
add
and
add
sub
add
and
add
push
jae
add
or
adc
adc
mov
add
jae
add
or
adc
adc
mov
add
jae
add
or
adc
add
or
mov
add
sub
add
push
adc
add
ret
add
or
adc
add
ret
add
or
sbb
add
sub
push
and
add
cmp
adc
xchg
add
or
add
add
xor
add
idiv
(bad)
call
adc
xchg
add
or
add
sbb
inc
add
add
idiv
(bad)
jmp
dec
cmp
add
pop
add
push
sub
and
pop
add
push
and
add
sub
adc
adc
add
or
adc
add
or
add
or
add
and
in
add
sub
push
and
cmp
add
and
add
adc
and
add
push
lea
add
add
and
add
add
push
add
push
and
add
push
popf
adc
add
push
add
push
and
add
add
push
add
push
popf
adc
add
push
add
push
outs
lds
add
adc
adc
adc
and
add
add
push
add
push
adc
cmp
adc
call
ins
add
push
and
add
add
push
add
push
outs
jbe
add
and
add
add
push
add
push
cs
sbb
add
add
(bad)
(bad)
call
sbb
sub
add
and
add
sub
add
outs
jbe
add
and
add
sub
add
and
inc
add
add
idiv
(bad)
jmp
or
add
sub
push
and
add
(bad)
add
add
daa
and
add
add
push
add
push
pop
adc
adc
adc
mov
imul
call
idiv
(bad)
jmp
mov
add
add
push
in
add
sub
add
mov
add
add
xor
add
and
add
and
adc
or
add
sub
push
and
add
push
adc
or
add
outs
mov
or
adc
add
push
add
push
outs
ret
add
or
adc
add
push
add
push
outs
mov
adc
mov
ret
add
or
adc
add
push
add
push
outs
mov
adc
outs
mov
or
adc
add
push
add
push
outs
mov
cmp
add
pop
add
push
and
add
ficom
adc
sub
sbb
add
add
(bad)
(bad)
call
adc
add
or
sub
add
inc
sbb
add
add
add
add
add
add
or
add
add
add
add
add
xor
add
add
add
add
add
and
pop
add
push
and
add
sub
add
outs
mov
add
and
xor
add
add
add
add
add
and
pop
add
push
and
add
sub
add
outs
cmp
sub
add
or
add
add
add
add
outs
sub
push
and
add
or
add
sub
add
sbb
push
add
sub
add
sbb
add
sub
push
and
add
add
sbb
push
add
add
adc
jle
add
or
enter
or
add
add
adc
add
or
add
or
jae
add
or
add
or
pop
outs
mov
or
add
add
adc
add
adc
or
add
sub
add
adc
adc
add
push
add
push
pushf
adc
add
push
add
push
pop
adc
add
add
fldenv
sbb
add
push
adc
and
add
push
adc
sub
add
push
add
pop
outs
jae
add
adc
push
xchg
popa
rcr
add
sub
add
pop
adc
adc
jle
add
add
pop
sbb
add
add
(bad)
(bad)
call
sub
add
and
add
push
adc
adc
and
add
add
push
pop
adc
adc
add
add
or
pushf
sbb
add
add
idiv
(bad)
jmp
sub
add
sub
add
adc
and
add
add
push
adc
sub
adc
push
add
or
add
or
xor
add
sub
add
adc
cmp
or
or
add
or
adc
popf
add
add
or
add
or
or
or
adc
xchg
popa
rcl
or
adc
int3
add
or
or
cmp
add
push
pop
adc
adc
jle
add
add
jne
add
and
inc
add
add
idiv
(bad)
jmp
cmp
add
sub
add
adc
adc
and
add
sub
add
pop
adc
adc
jle
add
add
push
sbb
add
add
(bad)
(bad)
jmp
inc
add
add
push
adc
adc
and
add
sub
add
pop
adc
adc
adc
outs
jne
add
aas
dec
(bad)
(bad)
call
add
(bad)
(bad)
(bad)
jle
add
add
adc
add
adc
add
push
add
push
adc
sub
adc
add
add
push
pushf
adc
and
add
push
add
push
pop
adc
adc
jle
add
add
fstp
add
(bad)
(bad)
jmp
pop
add
add
push
adc
or
add
or
pop
add
add
push
adc
sub
or
adc
xchg
adc
rcr
add
sub
add
pop
adc
adc
jle
add
add
push
sbb
add
add
(bad)
(bad)
jmp
fs
add
push
adc
adc
and
add
sub
add
pop
adc
adc
push
outs
ret
or
adc
or
outs
into
add
or
or
add
or
add
and
and
add
push
add
push
adc
fimul
and
add
sub
add
sub
adc
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
xor
add
add
xor
add
add
add
or
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
add
or
add
pushf
add
add
je
add
sub
add
pop
pop
das
adc
add
idiv
(bad)
jmp
js
add
sub
add
sub
and
cmp
add
pop
add
push
and
add
sub
push
outs
and
add
and
add
sub
or
sub
jle
add
add
imul
or
add
add
adc
add
or
pushf
add
add
adc
add
or
add
adc
add
adc
jl
add
sub
add
adc
add
add
push
add
push
pushf
adc
add
add
push
add
push
pushf
adc
add
push
add
push
pop
adc
add
add
retf
sbb
add
add
(bad)
(bad)
jmp
mov
add
push
adc
and
push
add
push
adc
sub
add
push
push
adc
xchg
adc
push
xchg
popa
rcr
add
sub
add
pop
adc
adc
jle
add
add
push
sbb
add
add
(bad)
(bad)
jmp
cwde
add
add
push
adc
adc
and
add
push
pop
adc
adc
push
mov
pushf
add
add
xor
add
push
add
push
adc
and
add
push
adc
sub
push
push
mov
pushf
add
add
adc
pop
xchg
adc
or
add
add
push
adc
adc
and
add
push
pop
adc
adc
jle
add
add
(bad)
sbb
add
add
idiv
(bad)
call
or
add
idiv
(bad)
jmp
mov
add
sub
add
sub
mov
add
sub
add
adc
and
push
add
push
adc
jle
add
add
or
pop
add
push
adc
adc
or
adc
popa
rcl
or
fwait
add
add
adc
mov
push
add
push
pop
adc
adc
pop
mov
push
sbb
add
add
(bad)
(bad)
jmp
rol
add
adc
adc
and
add
add
push
pop
adc
adc
jle
add
add
push
sbb
add
(bad)
(bad)
jmp
enter
sub
add
adc
adc
int3
add
add
push
pop
adc
or
pushf
add
add
fwait
add
add
aas
pop
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
rol
add
push
adc
and
add
add
push
lea
add
add
lsl
add
or
fwait
add
add
pushf
add
add
adc
cmp
add
add
adc
xchg
adc
adc
push
adc
xchg
popa
rcl
adc
adc
adc
xchg
popa
rcl
adc
adc
adc
or
push
xchg
popa
rcr
add
sub
add
adc
pushf
add
mov
add
adc
outs
push
add
or
add
or
adc
and
add
add
push
pop
adc
adc
pop
mov
push
sbb
add
add
(bad)
(bad)
jmp
loopne
add
sub
add
adc
adc
and
add
add
push
pop
adc
adc
jle
add
add
push
sbb
add
add
(bad)
(bad)
jmp
call
push
add
push
adc
adc
and
add
add
push
pop
adc
adc
jle
add
add
push
pop
inc
add
add
idiv
(bad)
jmp
lock
add
push
adc
adc
and
add
add
push
pop
adc
adc
push
mov
pushf
add
add
aas
adc
(bad)
call
inc
add
add
idiv
(bad)
jmp
clc
add
add
push
adc
sub
or
adc
cs
sbb
add
add
(bad)
(bad)
jmp
cld
add
add
push
adc
adc
and
push
add
sub
add
pop
adc
adc
jle
add
add
enter
add
add
(bad)
(bad)
call
or
and
add
sub
add
sub
or
add
sub
add
sub
add
xor
add
add
add
add
adc
mov
and
(bad)
(bad)
jg
lahf
add
add
add
add
add
jae
add
or
push
jae
add
or
jae
add
or
sub
add
add
or
pop
add
add
add
add
sub
add
xor
xor
add
pop
add
adc
outs
xor
add
and
sub
xor
add
or
push
xor
inc
add
add
idiv
(bad)
call
sub
add
es
push
pop
outs
xor
add
or
sub
xor
mov
add
adc
outs
xor
add
and
mov
push
or
push
das
and
inc
add
add
idiv
(bad)
call
sub
add
es
jb
add
jo
push
or
push
das
nop
add
add
(bad)
(bad)
call
add
addps
push
pop
outs
jae
add
and
and
inc
add
add
idiv
(bad)
inc
pop
outs
jae
add
and
nop
add
add
(bad)
(bad)
call
add
pop
adc
add
or
and
add
add
rol
add
and
rol
add
adc
add
rol
add
adc
add
add
adc
add
add
add
add
sbb
add
and
add
xor
add
jle
add
add
or
aam
add
pop
popa
push
sub
es
pop
pop
sub
add
or
push
sub
add
add
add
or
push
sbb
pop
add
add
sbb
add
sbb
add
xor
add
add
xchg
add
and
es
popa
push
sub
es
add
sub
adc
add
add
add
or
psrlw
add
adc
pop
add
add
add
add
add
adc
pop
or
or
outs
(bad)
add
or
or
pop
or
sbb
icebp
add
add
or
ror
fadd
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
or
add
lea
add
add
add
push
outs
fadd
add
and
adc
or
lea
add
add
push
add
push
push
push
outs
fadd
add
and
pop
adc
adc
push
adc
or
or
sbb
push
pop
pop
adc
adc
adc
sbb
add
add
(bad)
(bad)
call
pop
sub
sbb
add
add
(bad)
(bad)
jmp
sub
add
and
add
and
add
push
outs
fiadd
add
jle
add
add
xor
add
add
(bad)
(bad)
(bad)
jg
adc
add
outs
ret
or
add
or
movd
lahf
add
add
fild
add
jle
add
add
push
fadd
add
adc
fld
add
and
or
add
or
or
add
or
adc
outs
fild
add
and
add
adc
adc
outs
fiadd
add
and
add
adc
outs
les
add
and
sub
adc
outs
fadd
add
and
adc
adc
adc
push
outs
loopne
add
adc
jle
add
add
or
adc
outs
jno
add
adc
or
pop
push
outs
ret
or
inc
add
add
idiv
(bad)
inc
adc
add
add
or
or
fadd
add
and
adc
add
add
or
pop
imul
adc
jle
add
add
movhps
jle
add
jle
add
add
push
push
push
fadd
add
jle
add
add
or
pop
cmp
mov
inc
sbb
add
(bad)
(bad)
(bad)
jle
add
add
add
add
add
add
idiv
(bad)
(bad)
jle
add
add
outs
ret
or
pop
outs
fild
add
sub
jle
add
add
mov
fild
add
jle
add
add
push
fadd
add
push
push
jae
add
or
adc
call
adc
adc
adc
adc
adc
push
adc
outs
fadd
add
adc
adc
push
xor
sbb
add
(bad)
(bad)
(bad)
jle
add
add
adc
adc
outs
jno
add
adc
adc
das
into
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
pop
sub
sbb
add
add
(bad)
(bad)
inc
outs
iret
add
or
add
add
or
add
or
adc
add
adc
adc
adc
imul
adc
add
add
xor
add
add
xor
sub
jb
add
jo
movs
add
add
adc
movs
add
add
jae
add
or
add
add
and
add
jae
add
or
add
push
call
add
or
jnp
add
add
outs
out
add
add
add
add
outs
out
add
add
add
add
outs
call
jnp
add
add
jo
add
sub
add
outs
jmp
add
or
adc
add
add
add
add
xchg
add
push
and
add
and
or
add
add
add
add
sub
add
add
or
push
add
add
add
add
jnp
add
add
adc
add
sub
add
outs
jmp
add
or
push
add
add
add
add
jnp
add
add
jmp
add
and
add
or
sub
add
add
add
add
lea
add
sub
add
add
(bad)
(bad)
call
sub
add
add
jge
add
add
sub
add
add
xor
add
add
add
add
add
add
add
dec
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
sbb
add
idiv
(bad)
inc
add
add
add
in
add
or
add
add
or
push
add
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
sub
add
xor
inc
add
add
idiv
(bad)
jmp
xor
add
sub
push
and
add
push
sub
add
or
add
add
jge
add
add
sub
es
add
add
push
and
xor
add
add
add
add
add
jnp
add
add
in
add
or
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
jnp
add
add
push
add
pop
add
add
add
add
add
add
xor
mov
add
add
adc
push
cmp
add
pop
add
push
and
add
push
sub
add
or
add
and
add
sub
add
or
sub
sub
add
sub
sbb
add
(bad)
(bad)
call
sub
add
add
xchg
add
push
and
add
or
pop
add
xchg
add
push
sub
es
and
push
add
sub
add
or
sub
sbb
add
add
(bad)
(bad)
inc
outs
xchg
add
push
and
xor
add
add
add
add
adc
and
add
sub
add
or
sub
or
sub
es
sub
sbb
add
add
(bad)
(bad)
call
sub
add
or
inc
add
add
idiv
(bad)
jmp
xchg
add
sub
push
and
add
push
and
add
and
add
push
sub
sub
push
add
sub
add
sub
add
add
or
xchg
add
push
or
inc
or
add
pop
add
push
and
add
push
and
add
sub
push
and
add
or
add
and
add
and
add
sub
add
or
add
sub
sub
add
adc
add
add
sbb
add
xor
add
add
adc
sub
or
sub
add
and
fidivr
add
sub
push
and
add
or
add
push
sub
and
push
add
sub
add
or
cmp
add
and
add
add
pop
add
push
add
cmp
add
and
add
pop
and
add
sub
add
pop
or
cmp
add
sub
add
sub
add
pop
and
add
sub
add
xor
add
idiv
(bad)
call
sub
add
add
cdq
add
push
and
inc
add
add
idiv
(bad)
jmp
cmp
add
sub
push
and
add
or
add
add
add
xchg
add
push
sub
and
pop
add
push
and
add
or
mov
add
add
sub
out
add
or
sub
add
or
add
xchg
add
push
and
add
and
adc
add
call
adc
sub
or
out
add
or
push
pop
sub
add
or
add
and
add
or
sub
add
or
add
and
cmp
add
pop
add
push
pop
sub
add
or
mov
add
pop
add
out
add
or
ret
cmp
add
pop
add
push
add
cmp
add
and
add
add
sub
add
or
add
lock
or
sub
add
push
and
cmp
add
pop
add
push
and
add
or
add
sub
add
xor
add
add
add
add
add
mov
add
add
cdq
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
and
pop
add
push
and
add
push
and
add
sub
xchg
add
push
and
add
sub
sub
sub
add
sub
add
sbb
add
add
add
adc
add
xchg
add
push
sub
add
sub
sbb
add
(bad)
(bad)
call
sub
add
add
xchg
add
push
and
add
or
and
add
sub
add
and
add
push
add
push
and
add
sub
add
outs
repnz
or
fimul
and
add
push
add
push
or
and
adc
sub
sbb
add
add
(bad)
(bad)
inc
outs
repz
or
and
add
sub
add
sub
sub
sbb
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
hlt
add
or
add
push
and
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
hlt
add
or
add
push
and
add
sub
xor
mov
add
pop
add
adc
add
push
sbb
add
add
idiv
(bad)
call
sub
add
and
add
push
add
push
sub
sub
sbb
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
jmp
pop
push
add
sub
add
sub
mov
mov
adc
add
idiv
(bad)
jmp
pop
push
add
sub
add
sub
pusha
push
add
sub
add
or
sub
push
xchg
add
xchg
cs
add
idiv
(bad)
jmp
fs
add
sub
add
sub
and
add
sub
add
pop
or
add
inc
add
add
idiv
(bad)
jmp
ins
push
add
sub
add
sub
add
xor
add
add
add
add
add
sub
jb
add
jo
cmps
add
add
add
add
or
sldt
add
add
add
add
add
add
add
test
add
add
xor
scas
add
add
add
adc
je
add
sub
add
or
jnp
add
add
cmc
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
jnp
add
add
add
push
and
add
add
add
jnp
add
add
add
aaa
add
push
or
add
add
add
sub
or
add
pop
sub
sub
es
add
push
and
or
add
pop
add
push
or
xor
add
and
add
and
add
sub
add
or
add
sub
add
adc
add
add
add
and
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
and
pop
add
push
and
add
and
add
jge
add
pop
add
adc
mov
es
sbb
add
add
(bad)
(bad)
call
sub
add
and
pop
add
push
and
add
and
pop
add
push
and
add
sub
add
sub
add
and
push
add
sub
add
sub
add
push
sub
add
add
(bad)
(bad)
jmp
test
add
sub
add
sub
mov
add
sub
add
sub
add
adc
add
pop
add
add
add
adc
add
add
inc
add
add
pop
add
push
and
add
call
cmp
add
push
and
add
or
add
jae
add
or
push
sub
add
or
add
add
(bad)
(bad)
call
sub
add
es
jae
add
or
pop
sub
adc
add
js
add
and
mov
or
and
cmp
add
push
and
add
outs
test
or
add
sub
add
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
cmp
add
push
and
add
and
push
add
push
sub
aaa
add
sub
push
and
add
and
add
push
sub
xor
add
add
cmp
add
and
pop
add
push
and
add
sub
or
outs
inc
add
or
adc
add
inc
add
or
mov
add
dec
add
or
inc
add
add
idiv
(bad)
call
sub
add
fimul
adc
(bad)
push
or
add
sub
add
add
add
add
and
xor
push
add
add
add
or
pop
add
add
add
add
sub
add
xor
add
call
push
add
push
(bad)
fld
add
adc
add
in
sbb
add
push
add
push
and
add
sub
push
and
or
sub
push
adc
add
push
add
push
adc
sub
add
pop
or
hlt
sbb
add
push
add
push
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
sbb
add
push
add
push
sub
add
sub
add
or
and
sbb
add
push
add
push
pop
adc
adc
adc
sbb
add
add
(bad)
(bad)
jmp
add
add
sub
add
sub
sub
add
adc
add
sub
add
add
adc
or
add
sub
add
jae
add
or
add
push
outs
stc
add
or
mov
add
and
sbb
add
and
add
xor
add
add
add
add
sub
cmp
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
push
or
pusha
stos
add
sub
push
and
add
or
add
jp
sbb
add
add
add
adc
sti
add
or
sbb
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
adc
fstp
add
add
aam
add
sub
push
sub
or
and
stos
add
sub
push
and
add
or
sub
sbb
add
(bad)
(bad)
inc
outs
fld
add
sub
pop
inc
add
add
idiv
(bad)
jmp
adc
add
sub
add
adc
fld
add
push
and
sbb
add
push
add
push
and
sbb
add
push
add
push
or
test
add
and
cld
add
or
std
add
or
inc
add
add
idiv
(bad)
inc
and
lods
add
sub
push
sub
adc
add
cmp
idiv
(bad)
jmp
sbb
add
sub
add
adc
add
push
and
add
sbb
add
push
add
push
adc
(bad)
add
add
or
sub
es
and
add
sub
add
adc
and
sbb
add
push
add
push
jae
add
or
cmps
add
push
fimul
and
add
sub
add
adc
fiadd
adc
sub
sbb
add
add
(bad)
(bad)
jmp
xor
add
sub
add
adc
fstp
aaa
lods
add
sub
push
and
add
and
pop
and
add
pop
add
push
and
add
and
or
sbb
add
add
(bad)
(bad)
jmp
xor
add
sub
add
sub
inc
mov
add
jae
add
push
jle
add
or
add
push
and
add
add
sbb
idiv
(bad)
jmp
cmp
add
sub
add
adc
ficom
add
add
fiadd
and
add
sub
add
sub
or
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
outs
inc
add
push
and
add
push
and
add
push
and
add
add
add
or
mov
and
push
add
push
sub
jae
add
or
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
sbb
add
xchg
add
add
add
add
add
add
inc
add
and
add
add
dec
add
push
and
add
sub
push
and
add
and
add
add
or
outs
add
add
and
outs
add
add
and
add
cwde
push
add
sub
add
adc
adc
lods
add
add
outs
add
add
and
add
adc
add
push
add
push
pop
adc
mov
rcr
add
fiadd
add
add
add
add
add
adc
add
add
add
add
lea
add
sbb
add
jp
add
inc
add
adc
add
or
sub
add
push
or
outs
aas
add
or
xor
add
inc
add
or
add
add
sub
push
or
add
push
sub
add
or
add
or
add
push
or
add
or
add
inc
add
or
inc
add
add
idiv
(bad)
call
sub
add
fimul
adc
push
or
add
outs
add
push
sub
add
adc
add
add
add
push
add
add
sbb
add
enter
inc
add
adc
sub
add
and
add
sub
push
sub
or
add
add
or
outs
add
add
and
mov
es
outs
add
add
or
adc
and
push
add
push
adc
sub
adc
adc
call
or
add
sub
push
sub
or
add
cli
add
push
and
and
add
push
pop
adc
adc
adc
mov
mov
add
idiv
(bad)
call
sub
add
fisub
aas
add
sub
push
and
sbb
add
and
add
and
add
fiadd
sub
adc
add
add
add
add
add
xor
add
add
add
add
add
add
aam
add
sub
add
sub
add
adc
add
add
add
add
adc
or
inc
push
add
add
add
add
add
arpl
add
add
add
rol
add
add
add
push
and
inc
add
sub
push
and
add
and
add
add
outs
inc
add
push
and
add
sub
push
and
add
jge
add
add
add
outs
inc
add
push
and
add
sub
push
sub
add
or
add
add
add
outs
inc
add
push
and
add
sub
push
and
add
jge
add
add
add
outs
inc
add
push
and
add
sub
push
and
add
and
add
add
outs
dec
add
push
and
add
sub
push
and
add
jge
add
add
add
outs
inc
add
push
and
add
sub
push
and
add
and
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
sub
add
push
and
add
sub
add
xor
add
add
add
add
add
sub
add
push
and
add
and
or
sldt
add
add
add
sub
add
push
and
add
or
add
xor
add
add
add
sub
add
push
and
add
and
add
sub
add
add
or
sbb
add
add
add
add
and
add
push
sub
add
push
and
add
sub
add
adc
add
mov
add
adc
sub
add
push
or
and
add
sub
push
outs
push
add
or
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
and
add
sub
push
and
add
and
add
or
sub
sbb
add
add
(bad)
(bad)
inc
and
pop
add
push
and
add
sub
sbb
add
add
(bad)
(bad)
inc
and
pop
add
push
outs
pop
add
or
add
or
sub
sbb
add
add
(bad)
(bad)
dec
add
add
push
je
add
add
inc
add
add
idiv
(bad)
dec
sub
add
add
xor
lds
add
inc
add
adc
sub
add
push
and
jne
add
sub
push
and
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
and
add
sub
push
and
add
and
add
or
sub
sbb
add
add
(bad)
(bad)
inc
and
pop
add
push
outs
push
add
or
inc
add
add
idiv
(bad)
inc
and
pop
add
push
and
add
and
add
or
sub
or
outs
sbb
add
and
add
or
inc
add
add
idiv
(bad)
dec
add
add
or
sub
add
push
sub
add
adc
add
push
add
add
add
add
sub
add
push
and
aas
sbb
add
add
idiv
(bad)
call
sub
add
es
and
pop
add
push
outs
sbb
add
and
push
sbb
add
add
(bad)
(bad)
inc
sub
add
or
add
or
adc
(bad)
adc
or
add
adc
add
add
add
add
sub
add
push
and
fiadd
add
pop
inc
add
add
idiv
(bad)
call
sub
add
es
and
pop
add
push
and
add
and
mov
add
sbb
add
add
(bad)
(bad)
inc
sub
add
or
push
add
sub
add
lea
or
mov
add
sub
add
and
aas
add
sub
push
and
mov
push
add
push
or
or
mov
push
add
push
and
aas
add
sub
push
and
rol
add
push
add
push
add
add
sub
add
and
inc
add
sub
push
and
enter
sub
add
add
rol
push
and
or
add
sub
or
add
sub
or
add
sub
push
and
inc
add
sub
push
and
add
push
sub
add
and
add
adc
adc
adc
sbb
add
out
add
add
add
add
les
add
or
and
add
sub
push
outs
push
add
or
jne
add
sbb
add
add
idiv
(bad)
call
sub
add
es
and
add
sub
push
outs
pop
add
or
add
add
pop
sub
pop
and
add
pop
add
push
and
add
sub
pop
inc
add
add
idiv
(bad)
jmp
test
add
pop
add
push
and
add
push
sub
add
or
add
and
push
add
sub
add
or
inc
add
sub
push
and
add
push
and
add
sub
or
outs
sbb
add
and
add
fiadd
and
inc
add
sub
push
and
add
push
and
add
and
add
and
push
add
sub
add
sub
sub
add
adc
add
add
add
add
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
sbb
add
sub
push
sub
add
and
add
or
xor
add
add
add
sub
add
push
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
push
add
sub
add
sub
fadd
add
sub
add
sub
xor
add
add
dec
add
adc
cmp
add
sub
push
sub
push
add
sub
add
sub
add
push
and
or
add
or
adc
add
or
or
outs
fiadd
add
adc
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
fimul
adc
(bad)
push
adc
add
sub
add
add
add
add
sub
xor
push
add
add
add
or
pop
add
add
add
add
add
add
push
and
add
push
and
add
push
and
add
sub
sbb
add
rol
add
dec
add
adc
add
or
add
sub
or
outs
test
add
and
xor
pop
sub
and
add
sub
push
and
add
push
sub
add
or
mov
add
or
add
push
or
add
or
pop
sub
es
pop
(bad)
push
adc
add
outs
add
sub
add
push
adc
add
aas
add
or
or
cmp
or
inc
add
or
add
add
pop
add
push
and
inc
add
push
sub
add
or
add
adc
push
adc
push
adc
outs
adc
add
adc
sub
add
sub
or
push
or
add
outs
add
push
sub
sbb
add
add
add
add
add
add
add
jp
inc
rol
add
add
sbb
add
pop
add
add
add
adc
sub
add
push
or
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
push
and
sti
add
push
and
or
xchg
inc
add
sub
push
and
add
or
cmp
add
and
add
fiadd
sub
add
add
add
add
add
aaa
aaa
add
inc
add
add
xor
add
add
add
mov
pop
add
push
and
add
and
add
add
and
aas
add
sub
push
and
add
or
and
add
sub
push
and
add
and
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
add
add
or
and
add
add
add
sub
add
or
add
and
add
and
add
sub
sub
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
adc
add
jecxz
add
add
add
push
and
add
add
in
add
sub
add
push
add
adc
add
add
add
push
and
add
push
and
add
sub
push
and
add
push
and
add
sub
and
add
jae
add
or
add
jae
add
or
add
add
jnp
add
add
sbb
add
and
push
add
sub
add
sub
add
add
mov
add
add
mov
add
sub
push
and
add
push
and
add
sub
jmp
jnp
add
add
mov
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
sbb
add
sub
sbb
add
add
(bad)
(bad)
jmp
jmp
add
and
add
push
sub
add
or
add
add
add
add
sbb
add
and
push
add
sub
add
sub
add
and
pop
add
push
add
add
add
sbb
add
mov
add
add
xor
add
and
add
sub
xor
add
add
add
add
add
add
add
xor
add
add
add
add
add
outs
out
add
and
add
and
add
sub
push
add
in
add
and
add
sub
call
outs
in
add
push
sub
add
xor
add
add
add
add
add
add
add
xor
add
add
adc
add
or
add
and
pop
add
push
sub
or
push
sub
add
and
outs
out
add
push
sub
add
add
or
add
add
add
add
sub
add
add
or
pop
add
add
add
add
sub
add
xor
add
adc
add
or
jae
add
or
pop
and
inc
add
sub
push
and
add
pop
and
inc
add
sub
push
and
add
pop
and
inc
add
sub
push
and
add
pop
and
inc
add
sub
push
and
add
pop
and
add
sub
push
outs
pop
add
or
and
pop
add
push
and
add
pop
and
inc
add
sub
push
outs
pop
add
or
add
add
pop
add
jo
in
push
add
sub
add
sub
es
adc
and
push
add
sub
add
adc
cmp
or
or
sbb
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
or
mov
pop
add
push
and
add
and
imul
add
add
aaa
inc
add
sub
push
and
add
and
imul
add
add
push
inc
add
sub
push
and
add
and
add
or
adc
add
push
adc
push
adc
outs
sbb
or
hlt
push
add
sub
add
pop
adc
adc
adc
mov
push
(bad)
(bad)
inc
sub
add
xor
xchg
add
add
add
jle
add
add
popa
inc
add
sub
push
and
add
and
push
add
sub
add
or
or
add
push
add
push
adc
dec
or
add
or
and
inc
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
and
pop
add
sub
add
pop
or
add
add
add
sub
add
pop
adc
add
mov
scas
sbb
add
add
(bad)
(bad)
inc
sub
add
add
or
push
add
add
add
add
sub
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
and
pop
add
sub
add
xor
pop
inc
add
add
idiv
(bad)
call
sub
add
add
or
add
sub
add
xor
and
pop
add
sub
add
xor
inc
add
add
idiv
(bad)
inc
and
add
sub
add
inc
and
pop
add
sub
add
inc
sub
sbb
add
sub
add
sub
and
add
sub
add
sub
xor
add
add
add
add
add
add
add
add
sub
add
push
and
add
xor
add
add
add
add
add
add
add
outs
inc
add
and
add
sub
xor
add
add
add
add
add
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
sub
adc
pop
add
push
and
inc
add
add
idiv
(bad)
inc
adc
pop
add
push
and
add
add
push
and
pop
add
sub
add
sub
add
xor
add
add
add
add
add
jnp
add
add
push
add
or
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
and
add
or
adc
add
add
add
add
sub
add
push
and
add
sub
add
inc
sub
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
add
and
add
sub
xor
add
add
add
add
add
add
and
add
sub
xor
add
add
add
add
sub
sub
add
add
(bad)
(bad)
call
sub
add
es
inc
add
sub
push
and
add
jp
outs
jne
add
and
inc
add
add
idiv
(bad)
jmp
sti
inc
add
sub
push
and
add
sub
push
and
add
jp
add
add
add
add
sub
add
add
(bad)
(bad)
jmp
jle
add
add
ret
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
mov
add
adc
add
or
push
and
inc
add
sub
push
and
add
and
jnp
add
add
sbb
push
and
inc
add
sub
push
and
add
add
add
add
aas
and
pop
add
sub
add
or
and
add
add
add
outs
and
add
and
add
es
and
add
sub
add
pop
or
add
add
add
add
or
and
inc
add
sub
push
and
add
and
sbb
add
and
or
or
add
add
add
add
sub
add
or
add
or
adc
add
add
add
jae
add
or
add
push
add
add
add
or
push
add
add
add
add
sub
add
or
add
sub
add
xor
add
add
add
add
add
add
sub
add
and
add
sub
add
or
add
add
add
add
add
push
add
or
sbb
add
(bad)
(bad)
call
sub
add
add
add
sub
add
sub
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
add
or
add
pop
add
or
add
xor
popf
add
add
add
and
adc
add
pop
add
push
and
add
push
dec
add
sub
push
add
add
sbb
add
pop
add
push
and
add
and
add
pop
add
push
and
add
push
push
add
push
and
add
push
add
push
and
add
sub
add
jae
add
or
adc
sub
add
or
add
je
add
sub
add
and
add
sub
add
and
add
push
add
push
jae
add
or
sub
add
adc
add
add
add
add
sbb
add
or
ds
add
sub
push
and
add
add
out
inc
add
sub
push
and
add
and
add
xor
add
add
push
add
adc
jle
add
add
xor
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
or
add
add
add
or
add
and
pop
add
sub
add
push
or
sub
add
adc
add
sbb
add
push
add
adc
add
and
add
sub
add
push
jle
add
add
sub
add
or
sub
xor
add
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
jle
add
add
add
add
or
adc
add
add
add
add
xor
add
and
add
and
or
or
add
add
add
add
add
or
add
xor
add
add
add
add
add
add
xor
add
sub
add
and
or
adc
add
add
add
lldt
xor
add
sub
sub
xor
add
add
add
add
add
add
xor
add
and
add
and
add
or
adc
add
add
add
lldt
xor
add
and
add
sub
xor
add
add
add
add
add
add
xor
add
sub
add
or
or
adc
add
add
add
lldt
xor
add
and
add
and
add
or
adc
add
add
add
lldt
xor
add
and
add
sub
xor
add
add
add
add
add
add
xor
add
and
add
sub
xor
add
add
add
add
add
add
xor
add
sub
add
and
or
adc
add
add
add
lldt
xor
add
and
add
and
add
or
adc
add
add
add
lldt
xor
add
and
add
and
add
or
add
add
add
add
inc
pop
add
sub
add
mov
add
add
add
push
inc
add
sub
push
and
add
and
add
and
add
push
add
push
mov
add
add
das
add
or
add
add
or
adc
add
add
add
add
dec
pop
add
sub
add
sub
add
add
xor
add
add
add
add
add
and
add
push
add
push
sub
sub
xor
popa
add
add
add
add
add
add
add
add
add
add
jne
add
add
push
outs
inc
add
or
push
pop
add
sub
add
pop
inc
adc
add
and
add
adc
add
das
add
add
add
cmp
add
add
add
outs
add
add
add
mov
add
cdq
add
add
add
add
add
add
enter
push
je
add
add
sub
add
and
adc
add
sub
add
push
and
push
add
add
sbb
sub
movs
retf
add
add
sub
add
and
push
add
add
and
add
sub
movs
icebp
add
add
and
add
and
push
add
add
and
add
sub
movs
adc
add
sub
add
push
sub
movs
repnz
add
and
add
and
push
add
add
and
add
and
repz
add
and
sub
movs
fadd
add
sub
add
push
sub
movs
inc
add
add
daa
add
push
and
add
add
sbb
add
and
aaa
add
add
sub
add
sub
push
inc
add
sub
push
add
add
or
add
and
add
jp
add
add
or
or
add
add
add
add
adc
xor
add
and
xor
cmps
add
add
add
sub
add
or
add
or
add
push
or
add
add
sub
add
add
(bad)
(bad)
call
sub
add
and
add
push
add
push
or
sbb
outs
mov
add
add
call
and
add
sub
add
pop
or
add
imul
add
add
(bad)
(bad)
inc
jae
add
push
or
inc
add
add
idiv
(bad)
dec
and
add
push
add
push
outs
mov
or
outs
xchg
add
push
fimul
or
or
add
or
push
outs
sbb
add
and
adc
add
add
daa
xchg
add
add
add
add
or
or
add
add
add
add
sub
sub
add
or
or
add
add
add
add
adc
xor
sub
add
or
or
add
add
add
add
add
add
sub
xor
add
add
add
add
add
rcl
add
sbb
inc
add
or
add
push
and
add
sub
sbb
add
nop
add
add
adc
jae
add
or
jae
add
push
or
add
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
or
sbb
outs
mov
add
add
call
and
add
push
add
push
pop
or
add
imul
add
add
(bad)
(bad)
inc
jae
add
push
adc
adc
outs
mov
add
and
adc
adc
inc
add
add
idiv
(bad)
call
add
add
or
add
add
add
push
push
js
push
add
add
add
or
pop
add
add
add
add
sub
add
xor
sldt
add
add
jae
add
push
or
add
xchg
add
push
sub
add
or
sub
add
add
add
and
pop
add
push
and
add
or
add
and
add
and
add
jp
xor
add
add
jle
add
add
les
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
jo
push
sub
or
add
or
mov
jge
add
and
add
or
add
or
push
sub
es
add
dec
add
or
jle
add
add
jae
add
or
add
or
add
and
adc
xchg
add
or
outs
xchg
add
or
retf
add
add
push
adc
outs
dec
add
or
add
adc
sbb
add
add
(bad)
(bad)
(bad)
fimul
or
or
add
or
sar
add
inc
add
or
sub
add
or
add
push
call
es
add
add
add
adc
add
add
dec
les
or
add
add
xor
add
add
add
add
add
sub
add
xor
add
add
push
add
adc
add
add
or
or
sub
add
and
add
and
add
add
or
or
sub
add
jle
add
add
or
or
sub
add
sub
add
and
mov
add
or
add
(bad)
sbb
and
add
add
add
or
adc
cmp
add
add
or
adc
add
add
and
sub
add
and
outs
push
add
or
add
jb
add
jo
outs
inc
add
or
add
pop
add
or
add
add
add
add
(bad)
(bad)
call
sub
add
es
je
add
add
add
or
adc
pop
outs
push
add
or
jae
add
or
add
add
adc
outs
push
add
or
adc
or
or
push
adc
sub
add
push
adc
pop
adc
sub
or
or
aas
add
push
adc
add
and
adc
add
pop
add
or
add
fiadd
adc
pop
pop
adc
adc
adc
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
sbb
add
add
add
add
inc
add
add
add
ret
add
add
adc
push
add
add
add
jle
add
add
dec
sub
add
and
dec
sbb
jle
add
add
dec
sub
add
or
and
pop
lea
add
add
retf
add
dec
or
pop
sub
or
inc
add
push
or
add
add
push
outs
pop
add
or
and
sub
xor
ins
add
add
add
sub
or
add
add
or
add
and
or
add
or
outs
pusha
add
or
add
or
add
or
outs
arpl
add
and
sbb
inc
add
add
idiv
(bad)
call
sub
add
or
add
or
add
outs
add
or
add
sub
add
add
add
add
push
add
inc
add
adc
push
add
add
add
add
jle
add
add
dec
sub
add
and
dec
sbb
push
sub
adc
add
or
add
add
dec
pop
push
push
sub
or
sbb
sbb
push
adc
jbe
or
jle
add
and
pop
adc
or
add
inc
add
add
add
add
add
add
add
cmp
add
add
or
or
or
jle
add
sub
add
and
adc
outs
add
or
pop
or
sub
add
sub
jb
add
jo
add
or
sbb
adc
pop
adc
add
xor
add
idiv
(bad)
call
sub
add
add
outs
push
add
xor
add
add
add
add
add
and
add
add
pushf
add
and
add
add
arpl
pushf
add
and
add
add
adc
pushf
add
and
add
add
sbb
pushf
sub
add
adc
add
add
add
add
add
or
imul
add
sub
add
add
(bad)
(bad)
call
sub
add
es
pop
pop
or
(bad)
out
add
add
or
add
and
inc
add
add
idiv
(bad)
inc
outs
push
add
or
add
or
sbb
add
add
(bad)
(bad)
dec
push
add
add
or
add
or
or
add
add
or
pop
or
sbb
or
adc
outs
ins
add
or
pop
pop
adc
pop
pop
or
imul
add
add
(bad)
(bad)
dec
sub
add
add
or
pop
add
add
add
add
sub
add
sub
adc
add
mov
add
pop
add
adc
add
add
lea
add
add
add
add
lea
add
add
movs
add
add
inc
add
or
sbb
add
or
add
or
add
or
adc
outs
add
or
add
or
add
jo
add
and
and
add
add
adc
add
add
(bad)
movs
add
add
and
add
pop
and
inc
add
pop
jle
add
add
and
add
add
movs
add
add
and
adc
mov
xchg
sbb
add
add
idiv
(bad)
call
sub
add
sub
add
add
jle
add
add
add
add
adc
add
add
add
rol
add
push
jge
add
add
add
add
or
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
add
add
or
add
add
outs
push
add
or
inc
add
add
idiv
(bad)
inc
outs
push
add
or
add
sub
adc
aam
add
add
add
or
das
add
add
add
add
or
sub
add
and
iret
add
add
jnp
add
add
imul
add
add
(bad)
(bad)
call
sub
add
sub
adc
push
add
add
adc
jnp
add
add
jle
add
or
push
or
sub
add
and
inc
add
cs
add
add
idiv
(bad)
call
sub
add
es
add
add
(bad)
movs
add
add
add
add
sub
add
dec
add
push
and
add
add
(bad)
movs
add
add
add
add
adc
sub
add
and
or
adc
add
adc
add
and
add
and
add
sub
add
ret
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
inc
add
add
into
add
add
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
dec
add
push
and
jnp
add
add
jnp
add
add
outs
jbe
add
and
add
and
sub
add
pop
sub
add
adc
add
dec
add
push
and
jnp
add
add
jnp
add
add
outs
jns
add
and
add
and
sub
add
pop
sub
add
adc
add
dec
add
push
and
rol
add
add
add
add
jnp
add
add
jnp
add
and
add
add
add
add
jl
add
and
push
add
or
add
and
add
and
sub
add
and
add
push
adc
add
dec
add
push
and
rol
add
add
add
add
jnp
add
add
jg
add
and
add
add
add
add
or
add
push
adc
sub
add
and
add
push
adc
add
dec
add
push
or
jnp
add
add
add
add
add
jnp
add
add
add
or
push
add
jnp
add
add
push
outs
jge
add
and
add
push
adc
sub
add
and
add
push
adc
add
dec
add
push
and
rol
add
add
add
add
jnp
add
add
add
or
pop
outs
test
add
pop
and
and
inc
add
add
idiv
(bad)
call
pop
outs
test
add
and
add
xor
sbb
add
(bad)
(bad)
call
pop
jne
add
add
or
jnp
add
add
or
add
or
add
and
add
add
pop
outs
test
add
and
adc
outs
test
add
and
sbb
add
add
(bad)
(bad)
call
pop
jne
add
add
or
jnp
add
add
or
add
or
push
add
or
add
outs
jle
add
and
adc
outs
test
add
sbb
and
pop
jne
add
add
or
jnp
add
add
or
add
or
add
and
push
adc
sub
add
and
add
push
adc
add
dec
add
push
and
adc
sbb
inc
add
push
adc
jb
add
jo
add
jne
add
mov
xor
add
and
add
jp
add
or
sldt
add
add
add
and
add
pop
jge
add
add
add
xor
add
add
adc
jnp
add
add
and
add
or
pop
jge
add
add
xchg
sub
add
adc
add
and
add
pop
add
adc
jnp
add
add
add
add
pop
jge
add
add
jnp
add
add
sub
add
and
add
add
add
add
jnp
add
add
and
add
add
pushf
add
add
add
and
add
add
arpl
pushf
add
add
add
and
add
add
adc
pushf
add
add
add
and
add
add
sbb
pushf
sub
add
add
or
pop
add
add
add
add
sub
add
xor
sub
add
adc
jnp
add
add
push
or
add
xchg
add
and
add
or
jl
add
add
pop
sub
add
sub
xor
sub
add
adc
add
add
add
add
add
add
add
push
or
add
mov
add
je
add
add
jl
add
add
pop
sub
add
sub
xor
pop
inc
add
add
idiv
(bad)
call
sub
add
sub
add
xor
add
add
add
add
add
add
or
outs
mov
add
add
add
or
add
or
push
outs
mov
add
push
outs
scas
add
push
sub
xor
add
add
add
add
add
jnp
add
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
add
add
or
add
add
xor
test
add
pusha
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
and
pop
add
push
and
add
jp
mov
add
outs
pop
add
and
pop
dec
add
push
jae
add
or
dec
add
push
fidivr
add
outs
xchg
add
or
jle
add
or
add
push
add
add
or
inc
add
add
idiv
(bad)
jmp
xchg
dec
add
sub
push
and
add
or
add
add
add
adc
add
add
add
dec
add
add
add
xor
add
add
add
add
add
add
add
push
add
push
sub
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
sub
add
or
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
jae
add
add
add
add
adc
sub
add
sub
push
and
add
jp
add
add
add
and
add
push
add
push
jae
add
push
jge
add
add
and
add
sub
add
jge
add
add
jae
add
or
add
add
and
add
push
add
push
jge
add
add
and
add
sub
add
sub
push
sub
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
outs
xchg
add
or
and
add
test
add
sub
add
pop
jge
add
add
adc
add
inc
add
add
add
add
pop
add
push
or
jnp
add
add
jnp
add
add
xchg
add
or
mov
add
sub
add
pop
outs
cwde
add
or
and
add
mov
add
sub
add
pop
jge
add
add
sub
add
add
or
pop
add
add
add
add
jnp
add
add
jnp
add
add
nop
pop
add
sub
add
pop
outs
cdq
add
or
xor
test
add
bound
add
and
add
push
or
retf
add
jnp
add
add
pop
and
push
add
push
cmp
inc
add
add
idiv
(bad)
call
sub
add
es
and
add
push
cmp
add
pop
and
push
add
push
inc
outs
add
add
sub
add
cmp
jnp
add
add
or
movs
pop
add
sub
add
xor
or
test
add
sub
add
cs
inc
add
add
idiv
(bad)
dec
and
add
push
cmp
inc
add
add
idiv
(bad)
(bad)
cmp
add
add
and
push
add
push
cs
inc
add
add
idiv
(bad)
dec
and
add
push
pop
inc
pop
add
add
add
test
add
pop
add
add
add
add
add
out
add
cmp
add
add
add
add
mov
push
add
push
outs
out
add
cmp
add
add
jnp
add
add
mov
push
add
push
outs
out
add
cmp
jnp
add
add
rol
add
push
add
push
outs
out
add
cmp
fld
add
les
add
sub
add
outs
out
add
cmp
add
add
add
add
enter
sub
add
outs
out
add
sub
jnp
add
add
jnp
add
add
out
add
sub
call
add
and
add
add
xor
add
and
add
jp
jnp
add
add
xor
sbb
add
add
idiv
(bad)
jmp
int3
pop
add
sub
add
or
adc
jnp
add
add
jnp
add
add
out
add
push
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
inc
sub
add
add
(bad)
(bad)
jmp
call
add
add
xor
add
and
add
jp
sub
add
add
rol
add
sub
add
jge
add
add
and
pop
add
sub
add
jge
add
add
add
add
add
sbb
add
and
add
jnp
add
add
fadd
add
sub
add
outs
in
add
add
fld
add
sub
add
jge
add
add
add
add
add
adc
add
dec
add
add
add
adc
jnp
add
add
call
fadd
add
sub
add
cs
add
(bad)
(bad)
call
sub
add
add
sar
add
add
loopne
add
sub
add
sub
in
add
sub
add
sub
add
xor
add
add
add
add
add
jnp
add
add
fwait
add
or
add
sub
add
inc
and
pop
add
sub
add
inc
sub
add
xor
add
add
add
jnp
add
add
fwait
add
or
sub
add
add
or
adc
add
add
add
add
lock
add
sub
add
jge
add
add
add
add
xor
add
add
add
add
sub
add
add
add
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
pop
add
sub
add
sub
sub
add
and
inc
add
add
idiv
(bad)
jmp
clc
pop
add
sub
add
sub
xor
add
add
add
add
add
add
add
xor
idiv
(bad)
call
sub
add
add
pusha
add
push
and
inc
add
add
idiv
(bad)
jmp
cld
pop
add
sub
add
sub
jnp
add
add
push
inc
or
add
add
add
mov
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
add
push
and
add
push
sub
sub
add
cmp
jmp
add
add
sub
add
sub
in
dec
add
sub
push
add
add
add
cmp
add
sub
add
or
add
jp
add
adc
add
inc
add
add
adc
jnp
add
add
push
and
add
sub
add
xor
inc
add
add
idiv
(bad)
call
sub
add
es
and
or
add
push
add
push
cmp
inc
add
add
idiv
(bad)
inc
and
add
sub
add
cs
inc
add
add
idiv
(bad)
(bad)
cmp
and
or
add
push
add
push
cmp
inc
add
add
idiv
(bad)
inc
and
add
sub
add
xor
and
or
add
push
add
push
sub
push
add
arpl
add
and
add
sub
add
sub
and
or
add
push
add
push
sub
push
add
arpl
add
and
add
sub
add
sub
sub
add
and
or
add
push
add
push
sub
sub
add
add
arpl
add
and
add
sub
add
sub
jnp
add
add
pushf
add
or
inc
add
add
idiv
(bad)
inc
sub
add
sub
and
dec
add
sub
push
and
add
add
adc
add
sub
add
or
add
push
jp
sub
add
cmp
(bad)
(bad)
jmp
xor
add
sub
add
sub
xor
add
add
add
adc
jnp
add
add
push
and
add
sub
add
arpl
add
(bad)
(bad)
call
sub
add
es
and
or
add
push
add
push
xor
inc
add
add
idiv
(bad)
inc
and
add
sub
add
xor
and
add
sub
add
sub
push
and
add
push
add
push
sub
sub
add
and
add
sub
add
sub
and
add
push
add
push
sub
push
and
add
sub
add
sub
jnp
add
add
pushf
add
or
sub
add
sub
sub
add
and
(bad)
jmp
push
or
add
push
add
push
sub
xor
add
add
add
add
add
add
push
add
and
sub
add
sub
jnp
add
add
pop
or
add
push
add
push
cs
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
pop
or
add
push
add
push
xor
sbb
add
add
(bad)
(bad)
inc
add
add
add
imul
and
pop
add
push
and
add
add
adc
add
sub
add
or
add
jp
jnp
add
add
pusha
or
add
push
add
push
sbb
inc
add
add
idiv
(bad)
inc
and
add
push
add
push
sub
push
add
push
push
add
push
add
add
add
sbb
add
and
add
add
add
add
ins
or
add
push
add
push
outs
in
add
and
add
sub
add
sub
add
add
or
popa
add
add
add
add
add
add
add
xor
inc
add
add
idiv
(bad)
call
sub
add
sub
jnp
add
add
jnp
add
add
out
add
add
pusha
add
push
and
inc
add
add
idiv
(bad)
jmp
fimul
add
pop
add
push
add
xor
add
and
add
jp
add
add
or
pop
add
add
add
add
jnp
add
add
popf
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
je
add
sub
add
cs
add
idiv
(bad)
inc
jnp
add
add
js
add
sub
add
inc
sub
jl
add
sub
add
sub
xor
add
add
add
add
add
jnp
add
add
jnp
add
add
out
add
cmp
jnp
add
add
pushf
add
or
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
or
add
push
add
push
xor
pop
inc
add
add
idiv
(bad)
jmp
add
jnp
add
add
push
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
jnp
add
add
out
add
sub
daa
dec
add
sub
push
and
add
add
adc
add
sub
add
or
add
jp
sub
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
xor
add
add
add
add
add
add
ins
add
push
sub
add
adc
add
pusha
add
add
add
add
jge
add
add
or
and
add
push
pop
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
into
add
add
and
push
add
push
jge
add
add
and
add
push
sub
push
add
arpl
add
cmp
and
push
add
push
jge
add
add
and
add
push
sub
push
add
arpl
add
cmp
add
add
cwde
or
add
push
add
push
sub
add
add
arpl
add
add
pushf
or
add
push
add
push
jge
add
add
push
add
mov
push
add
push
sub
add
add
arpl
add
add
movs
or
add
push
add
push
jge
add
add
sub
and
push
add
push
jge
add
add
sub
add
sub
add
lods
or
add
push
add
push
jge
add
add
sub
sbb
add
add
idiv
(bad)
call
sub
add
add
add
inc
add
or
add
add
add
sub
xor
add
add
add
add
add
add
add
pop
and
push
add
push
cmp
sbb
add
add
(bad)
(bad)
call
sub
add
es
and
add
push
xor
inc
add
add
idiv
(bad)
inc
and
push
add
push
cmp
add
add
add
(bad)
(bad)
inc
and
add
push
pop
inc
add
add
jecxz
add
mov
add
add
mov
and
or
add
push
add
push
cmp
add
sbb
add
add
(bad)
(bad)
inc
and
or
add
push
add
push
cmp
add
add
idiv
(bad)
(bad)
cmp
and
or
add
push
add
push
xor
inc
add
add
idiv
(bad)
inc
and
or
add
push
add
push
pop
inc
add
add
xchg
add
dec
add
add
ror
add
sub
add
cmp
inc
add
add
idiv
(bad)
(bad)
cmp
add
add
and
or
add
push
add
push
cs
inc
add
add
idiv
(bad)
inc
and
or
add
push
add
push
pop
inc
add
add
cmp
add
or
add
pop
and
or
add
push
add
push
pop
inc
add
add
inc
add
loope
add
xor
fadd
add
add
jnp
add
add
pop
add
push
and
or
add
push
add
push
sub
sub
add
and
or
add
push
add
push
sub
sub
push
and
or
add
push
add
push
sub
sub
add
and
add
sbb
add
add
(bad)
(bad)
inc
sub
add
and
in
or
add
push
add
push
xor
sbb
add
add
(bad)
(bad)
inc
sub
add
sub
and
or
add
push
add
push
xor
sbb
add
add
idiv
(bad)
inc
sub
add
sub
and
add
push
and
add
add
adc
add
sub
add
or
add
jp
stc
dec
add
sub
push
and
add
jp
hlt
or
add
push
add
push
sub
sub
add
and
or
add
push
add
push
sub
sub
add
and
or
add
push
add
push
sub
and
or
add
push
add
push
sub
push
and
add
sub
add
sub
and
or
add
push
add
push
sub
push
and
add
sub
add
sub
and
or
add
push
add
push
sub
push
and
add
sub
add
sub
and
or
add
push
add
push
sub
push
and
add
sub
add
sub
and
or
add
push
add
push
sub
push
and
add
sub
add
sub
jnp
add
add
sub
add
sub
add
xor
add
idiv
(bad)
inc
and
add
sub
add
jge
add
add
xor
add
sub
add
sub
mov
add
pop
add
push
and
add
add
adc
add
sub
add
or
add
jp
jnp
add
add
pushf
add
or
add
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
sahf
add
or
inc
add
add
idiv
(bad)
inc
jnp
add
add
xor
add
sub
add
cs
add
add
(bad)
(bad)
inc
jnp
add
add
cmp
add
sub
add
xor
sbb
add
add
(bad)
(bad)
inc
sub
add
and
add
sub
add
sub
mov
add
pop
add
push
and
add
add
adc
add
sub
add
or
add
jp
sub
add
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
inc
or
add
push
add
push
sub
adc
add
push
add
add
add
and
add
push
add
push
or
adc
dec
or
add
push
add
push
or
sub
add
add
add
add
pushf
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
push
sub
dec
or
add
push
add
push
sub
add
adc
add
mov
add
push
and
dec
add
sub
push
and
add
sub
add
sub
add
and
add
sbb
add
add
idiv
(bad)
call
sub
add
add
push
or
add
push
add
push
sub
add
and
add
sub
add
add
add
jnp
add
add
out
add
add
pusha
add
push
and
fadd
add
lahf
add
or
jnp
add
add
sbb
add
or
jnp
add
add
pop
or
add
push
add
push
outs
in
add
jae
add
or
add
pop
or
add
push
add
push
sub
add
and
fadd
add
pusha
or
add
push
add
push
inc
jmp
sub
add
and
add
pop
inc
add
add
idiv
(bad)
inc
and
add
push
add
push
jge
add
add
sbb
add
add
add
mov
and
add
sub
add
jge
add
add
sub
add
and
inc
add
add
idiv
(bad)
inc
and
pop
add
push
sub
es
add
add
(bad)
(bad)
inc
and
add
push
add
push
outs
mov
mov
es
sub
add
and
jo
add
sub
add
or
ins
add
push
sub
push
pop
jae
add
push
jae
add
push
adc
jnp
add
add
je
add
sub
add
xor
add
js
add
sub
add
adc
ins
add
push
add
pusha
add
push
sub
add
adc
add
pop
add
add
add
and
add
push
add
push
or
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
push
add
push
or
adc
jnp
add
add
jnp
add
add
out
add
push
sub
add
add
(bad)
(bad)
inc
sub
add
and
jnp
add
add
sbb
add
or
and
add
push
outs
xor
add
and
push
add
push
xor
pop
inc
add
add
idiv
(bad)
inc
jnp
add
add
sbb
add
and
add
and
add
and
add
or
mov
add
sub
add
or
fld
add
sbb
add
and
add
and
add
and
add
or
nop
or
add
push
add
push
or
add
xchg
or
add
push
add
push
outs
in
add
add
or
ins
add
push
sub
adc
add
dec
add
add
add
add
pop
add
push
and
sub
push
and
sbb
add
(bad)
(bad)
call
sub
add
and
dec
add
sub
push
and
add
add
mov
add
add
pop
add
or
add
push
jp
adc
add
outs
add
add
add
add
pop
add
push
and
pop
inc
add
add
add
add
adc
add
and
add
sub
add
cwde
or
add
push
add
push
jge
add
add
add
pushf
or
add
push
add
push
jge
add
add
add
mov
push
add
push
jge
add
add
and
pop
add
push
and
add
add
xor
add
jae
add
push
jp
adc
add
push
add
add
add
add
push
and
add
push
pop
inc
add
add
add
add
or
push
and
push
add
push
sub
lods
or
add
push
add
push
sub
dec
dec
add
sub
push
and
add
add
xor
add
and
add
jp
add
xor
add
add
add
sub
add
and
fadd
add
mov
add
sub
add
inc
mov
inc
add
add
idiv
(bad)
call
sub
add
cmp
add
add
add
add
mov
add
sub
add
xor
inc
add
add
idiv
(bad)
inc
sub
add
and
jnp
add
add
mov
push
add
push
cs
add
add
(bad)
(bad)
inc
jnp
add
add
mov
push
add
push
outs
out
add
add
add
add
jnp
add
add
out
add
sub
add
add
add
jnp
add
add
out
add
add
pusha
add
push
and
(bad)
jmp
adc
mov
sub
push
and
add
jp
and
or
add
push
add
push
add
add
add
sbb
add
and
add
add
add
add
les
add
sub
add
outs
in
add
add
arpl
add
sub
adc
add
add
add
add
adc
enter
sub
add
or
jnp
add
add
push
outs
jae
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
and
or
add
push
add
push
pop
or
add
add
or
sub
add
and
inc
add
add
idiv
(bad)
inc
add
add
or
add
xor
add
add
add
adc
add
jbe
add
and
adc
add
idiv
(bad)
call
sub
add
es
sub
sub
sbb
add
(bad)
(bad)
inc
sub
add
sub
sbb
add
add
(bad)
(bad)
inc
sub
add
and
or
add
push
add
push
sub
aam
add
sub
add
sub
xor
add
add
add
adc
jnp
add
add
push
and
or
add
push
add
push
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
and
or
add
push
add
push
cmp
add
add
idiv
(bad)
inc
and
or
add
push
add
push
cs
and
or
add
push
add
push
cs
push
and
or
add
push
add
push
cs
sbb
add
(bad)
(bad)
inc
and
or
add
push
add
push
xor
lock
add
push
add
push
sub
sub
add
and
inc
add
add
idiv
(bad)
inc
sub
add
and
add
sub
add
inc
sub
clc
or
add
push
add
push
sub
jnp
add
add
cld
or
add
push
add
push
xor
sbb
add
add
(bad)
(bad)
jmp
add
add
sub
add
sub
jnp
add
add
pushf
add
or
add
idiv
(bad)
jmp
add
add
sub
add
sub
or
add
sub
add
sub
add
or
pop
add
add
add
add
jle
add
add
or
add
sub
add
sub
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
add
adc
add
sub
add
and
add
sub
add
mov
add
add
ins
add
push
sub
int
add
sub
push
and
add
jp
xor
add
add
add
add
add
add
add
sbb
add
sub
add
sub
add
and
and
add
sub
add
sub
push
sub
push
dec
add
sub
push
and
add
jp
xor
add
add
add
add
add
jle
add
add
and
add
sub
add
sub
add
sub
add
and
add
sub
add
sub
push
sub
cmp
add
pop
add
push
and
add
jp
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
sub
add
and
and
add
sub
add
and
or
add
push
add
push
mov
add
add
ins
add
push
sub
int
add
sub
push
jae
add
push
jp
add
add
or
adc
add
add
add
add
xor
add
sub
add
sub
add
sub
add
add
or
das
add
add
add
add
jnp
add
add
cmp
add
sub
add
cs
inc
add
add
idiv
(bad)
call
sub
add
add
add
jg
add
sub
add
add
jb
add
add
add
add
cmp
add
sub
add
jge
add
add
and
add
sub
add
jge
add
add
adc
fiadd
add
adc
fild
add
jnp
add
add
push
pop
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
cmps
add
or
jnp
add
add
adc
add
idiv
(bad)
inc
jnp
add
add
out
add
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
cli
add
or
add
or
or
add
add
add
add
add
test
add
sub
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
add
cli
add
or
add
or
or
add
add
add
add
add
test
add
sub
add
add
or
pop
add
add
add
add
sub
and
add
push
jge
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
push
or
add
push
add
push
xor
pop
inc
add
add
idiv
(bad)
call
sub
add
add
pop
or
add
push
add
push
xor
and
pop
add
push
and
add
jp
add
add
add
add
xor
add
add
add
jnp
add
add
push
sbb
add
add
idiv
(bad)
call
sub
add
add
add
push
jge
add
add
jnp
add
add
add
add
xor
add
add
add
add
add
add
mov
add
and
xor
add
add
add
add
add
sub
add
sub
push
and
add
jp
outs
add
push
and
sub
add
mov
add
sub
add
xor
jbe
add
imul
adc
add
push
or
dec
add
add
push
and
pop
or
add
push
add
push
cs
inc
add
add
idiv
(bad)
call
sub
add
or
pusha
or
add
push
add
push
xor
push
sub
add
mov
add
and
outs
mov
outs
add
push
and
inc
add
add
idiv
(bad)
jmp
mov
add
pop
add
push
jae
add
push
jp
add
xor
inc
add
ins
add
adc
add
push
or
retf
add
outs
pop
add
push
and
or
add
push
add
push
pop
inc
add
add
and
add
add
and
add
sub
add
cmp
add
sbb
add
add
(bad)
(bad)
call
sub
add
sub
outs
pop
add
push
outs
sbb
add
and
add
push
and
loope
add
sub
push
and
add
jp
outs
pop
add
push
and
add
sub
add
rcr
inc
add
add
idiv
(bad)
inc
add
mov
add
and
or
add
or
es
sub
ss
add
sub
push
and
add
push
mov
xor
add
and
add
jp
outs
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
jmp
loope
add
sub
push
and
add
jp
add
xor
dec
add
add
add
add
add
jo
add
sub
add
pop
jge
add
add
add
add
cwde
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
cmp
add
and
pop
add
push
and
je
add
sub
add
pop
inc
push
add
add
add
add
add
js
add
push
add
add
add
push
add
add
add
je
add
je
add
js
add
js
add
bound
add
push
add
add
jae
add
add
adc
inc
add
add
idiv
(bad)
inc
add
lea
add
sub
add
add
xchg
add
push
and
add
add
add
add
(bad)
(bad)
inc
add
mov
add
and
add
xchg
add
push
and
add
outs
pop
add
push
add
pop
add
and
add
add
push
and
add
and
adc
sub
xchg
dec
add
sub
push
and
add
push
mov
xor
add
and
add
jp
and
add
js
add
sub
add
pop
jge
add
add
sub
add
adc
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
es
add
or
inc
add
add
idiv
(bad)
inc
sub
outs
inc
add
or
cmp
inc
add
add
idiv
(bad)
inc
stos
add
or
outs
stos
add
or
inc
add
add
idiv
(bad)
inc
rcr
add
add
inc
add
or
add
and
sub
add
add
or
or
add
or
add
outs
scas
add
or
jmp
add
add
add
or
add
or
add
jp
sub
adc
xor
add
and
add
or
add
add
xor
pop
add
add
add
add
add
add
push
pop
inc
add
add
idiv
(bad)
call
sub
add
add
add
or
add
add
jnp
add
add
adc
outs
mov
add
sub
sbb
add
add
(bad)
(bad)
inc
sub
add
xchg
add
push
and
test
add
push
outs
mov
add
push
sub
sbb
pop
add
add
add
add
add
jl
add
sub
add
sub
add
push
or
add
push
or
outs
mov
add
and
pop
add
adc
sub
or
or
add
push
add
push
sub
add
and
add
pop
sbb
add
add
(bad)
(bad)
call
sub
add
adc
push
add
push
and
or
add
or
xor
inc
add
or
test
add
sub
add
outs
mov
add
and
sub
add
push
adc
or
cmp
add
and
or
or
add
sub
add
push
pop
adc
outs
loopne
add
adc
sub
gs
(bad)
call
idiv
(bad)
(bad)
fimul
adc
(bad)
push
pop
add
sbb
add
or
pop
sub
add
add
add
add
and
lods
int
push
add
add
adc
add
add
add
add
add
push
and
dec
dec
add
sub
push
and
cmp
add
and
add
jp
add
push
and
add
mov
es
sbb
add
add
(bad)
(bad)
call
sub
add
es
push
add
mov
es
add
push
sub
pop
inc
add
add
idiv
(bad)
jmp
adc
sub
add
push
sub
add
add
(bad)
(bad)
jmp
adc
sub
add
push
sub
add
push
or
add
sub
es
add
fiadd
add
and
add
push
sub
and
add
sub
add
and
add
or
inc
add
add
idiv
(bad)
inc
inc
add
or
add
and
pop
sub
es
je
add
add
add
outs
mov
and
pop
add
push
and
outs
mov
outs
inc
add
or
pop
add
or
add
push
jp
add
xor
cmp
add
jb
add
jae
add
push
or
add
add
add
add
add
add
add
sub
es
add
add
pop
inc
push
add
push
jae
add
or
inc
add
and
add
add
xor
add
add
adc
mov
or
jp
add
add
add
push
and
mov
add
sub
add
and
idiv
(bad)
call
sub
add
or
mov
add
sub
add
cs
sub
add
add
push
and
add
and
push
add
sub
es
sub
add
pop
add
push
add
add
push
and
add
sub
add
or
add
jp
outs
add
push
and
(bad)
jmp
pop
push
add
sub
push
and
add
jp
add
or
push
add
add
add
add
add
add
push
add
xchg
add
push
sub
add
xor
add
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
and
pop
add
push
and
add
jp
sub
add
add
(bad)
(bad)
jmp
or
sub
push
and
add
jp
add
xchg
add
push
sub
xor
inc
add
je
add
add
pop
add
add
push
sub
add
inc
add
or
cwde
add
push
and
add
aaa
add
push
sub
cmp
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
dec
add
add
pop
outs
inc
add
or
nop
or
add
push
add
push
pop
inc
adc
add
pop
add
add
add
add
add
pusha
add
add
add
add
add
push
add
add
add
jp
add
xchg
add
xchg
add
add
add
add
add
add
ret
add
add
pop
je
add
add
add
push
sub
pop
movs
adc
add
outs
int3
add
push
sub
pop
movs
push
add
add
add
push
sub
pop
movs
retf
add
add
add
push
sub
pop
movs
push
add
add
add
push
sub
pop
movs
icebp
add
add
add
push
sub
pop
movs
push
add
add
add
push
sub
pop
movs
adc
add
outs
int
add
sub
pop
movs
repnz
add
add
push
sub
pop
movs
push
add
add
add
push
sub
pop
movs
repz
add
add
push
sub
pop
movs
fadd
add
outs
mov
pop
movs
inc
add
add
add
push
sub
pop
movs
add
add
add
push
sub
pop
movs
aaa
add
add
add
push
sub
add
call
and
sbb
inc
add
add
idiv
(bad)
inc
add
and
pushf
add
push
sub
sub
sbb
add
add
(bad)
(bad)
inc
add
and
add
sub
add
and
add
sub
sbb
add
add
(bad)
(bad)
inc
add
and
add
sub
add
sub
add
sub
pop
inc
add
add
idiv
(bad)
inc
add
sbb
add
outs
rol
push
sub
add
call
xor
add
add
add
add
add
add
ins
sbb
add
add
(bad)
(bad)
call
sub
add
and
add
push
or
cmp
add
outs
mov
pop
add
add
push
and
inc
add
add
idiv
(bad)
inc
push
and
push
add
push
sub
and
add
push
pop
or
add
add
add
rol
or
adc
and
push
add
push
sub
adc
add
ret
add
add
add
add
push
cmp
inc
add
add
idiv
(bad)
call
sub
add
es
add
and
mov
es
outs
rol
or
add
sub
add
cs
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
pop
inc
add
add
add
add
adc
add
xor
adc
(bad)
push
add
sub
push
and
add
jp
and
push
add
sub
push
add
add
add
cmp
add
sub
add
jae
add
or
push
add
sub
add
add
(bad)
(bad)
jmp
add
or
add
add
push
sub
add
xor
add
add
add
add
add
inc
add
or
stos
add
or
pop
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
jne
add
add
add
add
(bad)
(bad)
inc
outs
inc
add
or
xor
add
sub
add
and
inc
add
add
idiv
(bad)
inc
rcr
add
add
inc
add
or
add
or
pop
inc
add
add
idiv
(bad)
inc
pop
add
lods
add
or
add
push
sub
outs
mov
es
mov
outs
mov
add
add
sub
es
outs
ret
add
or
inc
adc
les
add
and
sub
add
push
and
inc
add
add
idiv
(bad)
call
add
fadd
add
and
add
add
fiadd
add
and
fld
add
and
add
adc
arpl
add
and
inc
add
add
idiv
(bad)
(bad)
fimul
add
pop
adc
add
add
add
push
add
add
push
and
add
or
sub
add
add
add
test
pop
add
add
adc
add
sub
add
js
add
add
mov
or
add
or
and
push
add
push
outs
mov
push
sub
xor
add
add
adc
outs
mov
add
and
add
push
or
sbb
outs
enter
and
add
push
and
push
add
push
pop
or
add
mov
or
ficomp
add
(bad)
(bad)
call
sub
add
add
add
push
sub
sbb
add
add
add
add
add
push
add
leave
add
or
pop
outs
retf
or
add
or
adc
sub
add
or
add
and
add
add
adc
sub
add
or
add
pop
outs
arpl
add
and
and
jne
add
add
sub
pop
inc
add
add
idiv
(bad)
call
sub
add
or
add
or
add
add
push
sub
adc
add
add
add
add
add
add
xor
add
add
add
sub
sub
add
sub
push
jae
add
or
add
add
add
and
or
add
push
add
push
jge
add
add
and
or
add
push
add
push
jge
add
add
and
or
add
push
add
push
jge
add
add
and
or
add
push
add
push
jge
add
add
and
or
add
push
add
push
jge
add
add
and
or
add
push
add
push
jae
add
or
add
add
jnp
add
add
cld
or
add
push
add
push
outs
xchg
add
or
and
or
add
push
add
push
jge
add
add
add
xor
add
add
and
add
sub
add
and
or
add
push
add
push
jae
add
or
push
and
add
sub
add
and
or
add
push
add
push
and
add
sub
add
sub
add
or
and
or
add
push
add
push
and
add
sub
add
and
or
add
push
add
push
sub
add
or
and
add
sub
add
and
or
add
push
add
push
and
add
sub
add
sub
add
or
and
or
add
push
add
push
and
add
sub
add
and
or
add
push
add
push
sub
add
or
and
add
sub
add
and
add
sub
add
and
add
push
add
push
sub
add
or
and
add
sub
add
and
add
push
add
push
and
add
sub
add
sub
add
or
and
add
push
add
push
and
add
sub
add
and
add
push
add
push
sub
add
or
and
add
sub
add
and
add
push
add
push
and
add
sub
add
sub
add
or
and
add
push
add
push
and
add
sub
add
and
add
push
add
push
sub
add
or
and
add
sub
add
and
add
push
add
push
and
push
add
push
sub
add
or
and
add
push
and
push
add
push
and
add
push
sub
add
or
and
push
add
push
and
add
push
and
push
add
push
sub
add
or
and
add
push
and
push
add
push
and
add
push
sub
add
or
and
push
add
push
and
add
push
and
push
add
push
sub
add
or
and
add
push
and
push
add
push
and
add
push
sub
add
or
and
or
add
push
add
push
and
or
add
push
add
push
and
or
add
push
add
push
sub
add
or
and
or
add
push
add
push
and
or
add
push
add
push
and
or
add
push
add
push
sub
add
or
and
or
add
push
add
push
and
or
add
push
add
push
and
or
add
push
add
push
sub
add
or
and
or
add
push
add
push
and
or
add
push
add
push
and
or
add
push
add
push
sub
add
or
and
or
add
push
add
push
and
or
add
push
add
push
and
or
add
push
add
push
sub
add
or
and
or
add
push
add
push
and
or
add
push
and
add
push
sub
add
or
and
or
add
push
and
add
push
and
or
add
push
sub
add
or
and
add
push
and
or
add
push
and
add
push
sub
add
or
and
or
add
push
and
add
push
and
or
add
push
sub
add
or
and
add
push
and
or
add
push
and
add
push
sub
add
or
and
or
add
push
and
add
push
and
add
sub
add
sub
add
or
and
add
push
add
push
and
add
sub
add
and
add
push
add
push
sub
add
or
and
add
sub
add
and
add
push
add
push
and
add
sub
add
sub
add
or
and
add
push
add
push
and
add
sub
add
and
add
push
add
push
sub
add
or
and
add
sub
add
and
add
push
add
push
and
add
sub
add
sub
add
or
and
add
push
add
push
and
add
sub
add
and
add
push
add
push
sub
add
or
and
push
add
push
and
add
push
and
push
add
push
sub
add
or
and
add
push
and
push
add
push
and
add
push
sub
add
or
and
push
add
push
and
add
push
and
push
add
push
sub
add
or
and
add
push
and
push
add
push
and
add
push
sub
add
or
and
push
add
push
and
add
push
and
push
add
push
sub
add
or
and
add
push
and
or
add
push
and
or
add
push
sub
add
or
and
or
add
push
and
or
add
push
and
or
add
push
sub
add
or
and
or
add
push
and
or
add
push
and
or
add
push
sub
add
or
and
or
add
push
and
or
add
push
and
or
add
push
sub
add
or
and
or
add
push
and
or
add
push
and
or
add
push
sub
add
or
and
or
add
push
and
or
add
push
and
push
add
sub
add
sub
add
or
and
add
sub
add
and
push
add
sub
add
and
add
sub
add
sub
add
or
and
push
add
sub
add
and
add
sub
add
and
push
add
sub
add
sub
add
or
and
add
sub
add
and
push
add
sub
add
and
add
sub
add
sub
add
or
and
push
add
sub
add
and
add
sub
add
and
push
add
sub
add
sub
add
or
and
add
sub
add
and
push
add
sub
add
and
add
sub
add
sub
add
or
and
add
sub
add
and
add
push
add
push
and
add
sub
add
sub
add
or
adc
add
add
or
sub
add
add
jnp
add
add
push
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
or
add
add
jnp
add
add
add
add
xor
add
add
adc
jnp
add
add
push
inc
or
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
and
push
add
push
sub
mov
push
add
push
sub
ror
add
push
add
push
sub
les
add
sub
add
sub
enter
sub
add
sub
int3
or
add
push
add
push
sub
dec
push
add
sub
push
add
add
add
inc
add
add
xor
add
jae
add
push
jp
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
and
or
add
push
add
push
das
and
add
idiv
(bad)
call
sub
add
and
add
sub
push
and
add
jp
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
aam
add
sub
add
xor
and
or
add
push
add
push
cs
add
idiv
(bad)
call
sub
add
and
pop
add
push
and
add
jp
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
and
add
fmul
add
sub
add
pop
jge
add
add
jnp
add
add
xchg
add
or
add
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
outs
xchg
add
or
add
add
add
jnp
add
add
outs
rol
add
sub
adc
add
and
add
popa
add
adc
sub
or
and
add
loopne
add
sub
add
pop
jge
add
add
sub
add
xor
add
add
add
add
add
add
add
jnp
add
add
cdq
add
or
or
or
add
add
add
add
add
add
rol
add
sub
xor
add
add
add
add
add
sub
jnp
add
add
rol
add
sub
add
xor
add
add
add
add
add
and
or
add
push
add
push
sub
and
or
add
push
add
push
sub
sbb
add
pop
push
add
sub
push
outs
rol
add
sub
add
xor
add
add
add
add
add
and
or
add
push
add
push
sub
add
add
xor
add
add
add
add
add
and
or
add
push
add
push
sub
and
or
add
push
add
push
sub
sbb
add
pop
push
add
sub
push
and
add
sub
xor
add
add
add
add
add
and
or
add
push
add
push
sub
add
add
xor
add
add
add
and
or
add
push
add
push
sub
jnp
add
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
jnp
add
add
aam
add
add
add
add
outs
rol
add
add
add
add
sbb
inc
add
add
idiv
(bad)
inc
jnp
add
add
jnp
add
add
aam
add
add
add
add
add
add
sub
add
outs
aam
add
sub
add
add
or
or
add
add
add
scas
add
push
sub
add
add
xor
add
add
add
add
add
push
inc
add
add
add
add
or
add
sub
add
mov
add
sub
sub
bound
add
pop
add
push
add
xor
add
jae
add
push
jp
add
or
add
add
add
add
push
add
mov
add
add
add
add
add
add
sub
add
xor
pop
inc
add
add
idiv
(bad)
call
sub
add
sub
add
xor
add
add
add
adc
or
and
or
add
push
add
push
pop
inc
add
add
add
add
or
push
and
add
sub
add
sub
adc
add
sub
add
sub
cmps
push
add
sub
push
and
add
add
xor
add
and
add
jp
add
xor
add
add
popa
add
adc
or
inc
add
add
add
add
or
push
and
add
sub
add
sub
sbb
add
sub
add
sub
into
push
add
sub
push
and
add
add
xor
add
and
add
jp
adc
add
test
add
and
add
sub
add
or
and
add
sub
add
or
dec
add
add
add
pop
or
jnp
add
add
outs
cdq
add
or
add
mov
and
inc
add
add
idiv
(bad)
call
sub
add
es
and
add
sub
add
pop
or
and
and
or
add
push
add
push
pop
or
add
add
add
stos
sbb
add
add
(bad)
(bad)
inc
sub
add
add
(bad)
(bad)
jmp
add
add
pop
add
push
and
add
jp
sub
add
sub
add
or
add
add
lods
add
push
and
add
and
jnp
add
add
xor
add
sub
add
cs
inc
add
add
idiv
(bad)
inc
jnp
add
add
xor
add
sub
add
adc
inc
add
add
idiv
(bad)
inc
sub
adc
adc
and
or
add
push
add
push
pop
inc
add
add
add
add
sbb
add
sub
add
add
add
es
add
sub
push
outs
rol
add
sub
add
add
add
sub
add
pop
add
push
outs
rol
add
sub
and
add
sub
push
and
cmp
xor
add
and
add
jp
and
add
sub
add
pop
or
(bad)
(bad)
call
idiv
(bad)
inc
sub
adc
adc
inc
add
add
add
add
adc
add
and
add
sub
add
inc
or
add
push
add
push
jge
add
add
add
inc
or
add
push
add
push
jge
add
add
add
dec
or
add
push
add
push
jge
add
add
and
add
sub
push
adc
add
xor
add
and
add
jp
adc
add
pushf
add
add
add
add
add
add
dec
or
add
push
add
push
inc
xchg
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
aad
add
and
add
and
add
sub
add
or
inc
and
add
push
add
push
or
push
add
add
add
jnp
add
add
aam
add
pop
and
add
sub
add
pop
or
add
add
add
fld
and
add
push
add
push
pop
or
add
add
add
mov
inc
add
add
idiv
(bad)
jmp
adc
add
add
add
add
and
add
sub
add
pop
inc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
and
add
push
add
push
or
add
add
add
add
add
(bad)
add
or
push
push
add
push
xor
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
push
and
add
add
add
or
jnp
add
add
inc
add
add
add
or
add
jae
add
push
jp
jnp
add
add
ins
or
add
push
add
push
cs
add
add
idiv
(bad)
inc
jnp
add
add
jo
add
sub
add
xor
sbb
add
add
idiv
(bad)
inc
and
add
push
add
push
and
idiv
(bad)
inc
jnp
add
add
js
add
sub
add
outs
aam
add
sub
jnp
add
add
jl
add
sub
add
xor
sbb
add
(bad)
(bad)
inc
jnp
add
add
or
add
push
add
push
xor
sbb
add
add
idiv
(bad)
inc
jnp
add
add
test
add
sub
add
outs
aam
add
add
mov
add
sub
add
sub
add
(bad)
(bad)
inc
sub
and
add
push
xor
sbb
add
add
(bad)
(bad)
inc
sub
jge
add
add
add
or
adc
add
add
add
add
mov
jnp
add
add
outs
rol
add
sub
xor
add
add
add
add
add
jle
add
add
nop
or
add
push
add
push
sub
add
add
or
push
add
add
add
add
jle
add
add
xchg
or
add
push
add
push
sub
add
add
or
adc
add
add
add
add
and
push
add
push
sub
add
add
or
sbb
add
add
add
jnp
add
add
sub
pushf
or
add
push
add
push
sub
add
add
xor
add
add
add
add
add
add
and
add
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
and
add
and
add
push
sub
add
xor
add
add
add
add
add
add
and
add
and
push
add
push
sub
add
xor
add
add
add
add
add
add
and
and
add
push
sub
add
add
xor
add
add
add
add
add
add
add
push
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
daa
add
push
and
add
push
sub
add
xor
add
add
add
add
add
add
sbb
and
push
add
push
sub
add
add
xor
add
add
add
add
add
add
and
add
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
and
add
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
push
add
push
and
or
add
push
add
push
sub
add
xor
add
add
add
add
add
add
sub
add
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
sub
add
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
sub
add
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
add
sbb
add
and
add
sub
add
sub
add
add
xor
add
add
add
add
add
fmul
add
sub
add
sub
jnp
add
add
add
sub
push
and
add
add
add
add
outs
rol
add
add
add
add
pop
push
add
sub
push
outs
rol
add
sub
add
add
or
dec
add
add
add
add
sub
sbb
add
(bad)
(bad)
call
sub
add
add
inc
add
push
and
inc
add
add
idiv
(bad)
jmp
or
add
sub
push
and
add
jp
jnp
add
add
outs
rol
add
sub
add
add
or
adc
add
add
add
add
fmul
add
sub
add
sub
add
push
sub
add
add
or
sbb
add
add
add
add
mov
es
or
add
push
add
push
cs
add
mov
add
sub
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
add
cli
add
or
add
or
or
add
add
add
add
add
test
add
sub
add
add
or
add
add
add
add
add
add
add
add
sub
add
add
add
push
add
sub
add
push
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
add
fld
add
and
adc
add
add
add
add
add
fld
add
and
add
and
add
fild
add
and
add
add
fld
add
and
add
and
sub
add
push
and
js
add
sub
push
and
fld
add
and
fiadd
add
and
add
sub
or
add
jp
push
sub
add
or
sub
add
or
add
add
or
adc
add
add
add
add
adc
jle
add
add
add
add
add
add
or
adc
add
add
add
add
adc
add
jge
add
add
add
xor
add
add
add
fs
add
sub
add
lea
add
add
sub
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
adc
add
add
add
adc
jnp
add
add
dec
push
add
sub
add
pop
add
add
add
imul
add
add
(bad)
(bad)
call
sub
add
add
push
push
add
sub
add
sub
add
push
add
add
add
and
add
or
push
push
add
sub
add
pop
jge
add
add
add
add
or
sbb
add
add
add
add
add
add
add
add
and
add
sub
add
jge
add
add
adc
add
xor
add
add
adc
jnp
add
add
and
add
push
add
push
pop
pop
lea
add
add
add
add
add
add
add
add
fiadd
add
add
jge
add
add
add
xor
add
add
add
add
add
add
add
pusha
push
add
sub
add
add
add
add
fild
add
sub
xor
add
add
add
add
add
jae
add
or
add
xor
add
add
add
add
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
or
push
push
add
push
inc
sub
ins
push
add
sub
add
sub
xor
add
add
add
add
add
pop
inc
add
add
idiv
(bad)
call
sub
add
add
add
or
jo
add
sub
add
inc
sub
je
add
sub
add
sub
xor
add
add
add
add
add
sub
es
pop
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
sub
sub
add
sub
add
xor
add
add
add
adc
push
sub
add
sub
add
mov
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
push
and
add
jp
adc
add
or
inc
add
add
idiv
(bad)
call
add
or
or
jl
add
sub
add
sub
pop
inc
add
add
idiv
(bad)
jmp
push
push
add
sub
push
and
add
sub
push
jae
add
or
loopne
add
or
outs
fld
add
and
sub
sub
add
or
add
add
(bad)
(bad)
jmp
or
add
push
add
push
sub
adc
sub
add
or
add
pop
adc
sub
add
or
add
add
(bad)
(bad)
jmp
test
add
sub
add
sub
adc
sub
add
or
adc
adc
sub
add
or
inc
add
add
idiv
(bad)
inc
outs
fld
add
and
or
fiadd
add
and
mov
add
sub
add
xor
add
idiv
(bad)
dec
sub
add
add
or
pop
or
and
add
push
xor
or
or
outs
fld
add
and
or
nop
push
add
sub
add
sub
add
or
add
add
or
xchg
push
add
sub
add
pop
sub
add
or
push
push
add
add
jecxz
add
and
add
adc
pop
adc
add
xor
sbb
add
(bad)
(bad)
inc
sub
xor
cdq
add
add
sub
add
sub
push
and
add
jp
in
add
or
outs
out
add
adc
inc
adc
out
add
and
outs
call
push
or
add
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
add
or
jmp
add
or
outs
in
add
or
add
arpl
add
sub
add
add
(bad)
(bad)
(bad)
ficom
adc
adc
inc
add
add
idiv
(bad)
call
add
add
push
sub
add
add
add
add
and
pop
add
add
xor
add
add
adc
mov
pop
add
push
and
add
jp
sub
add
add
(bad)
(bad)
call
sub
add
sub
outs
in
add
or
sub
pop
outs
out
add
or
add
outs
out
add
or
outs
arpl
add
sub
add
add
(bad)
(bad)
(bad)
ficom
sub
sbb
add
add
(bad)
(bad)
inc
outs
add
sub
adc
add
add
add
add
add
add
xor
add
add
test
add
jae
add
or
add
add
or
adc
sub
add
or
push
pop
outs
repnz
or
inc
add
add
idiv
(bad)
call
sub
add
es
pop
outs
in
add
adc
sub
add
or
inc
add
add
idiv
(bad)
(bad)
fimul
adc
(bad)
push
add
sbb
add
or
push
sub
add
add
add
add
sldt
add
add
add
adc
add
add
hlt
add
or
jae
add
or
add
add
or
cwde
push
add
sub
add
pop
push
sub
add
sub
sub
add
adc
add
add
add
add
or
push
add
sub
add
or
mov
add
add
push
pop
outs
jecxz
add
and
add
add
outs
stc
add
or
mov
push
add
push
pop
xor
loopne
add
or
movs
push
add
sub
add
or
or
add
or
add
or
test
add
sub
add
pop
or
add
or
or
add
or
adc
add
lods
push
add
sub
add
pop
add
sub
add
sub
and
push
add
push
pop
or
push
outs
fld
add
aas
ins
(bad)
(bad)
call
idiv
(bad)
call
sub
add
sub
add
xor
dec
add
add
sub
add
add
(bad)
(bad)
call
sub
add
and
pop
add
push
and
add
jp
outs
mov
or
or
push
and
add
push
outs
mov
fadd
add
sub
xor
add
sub
sbb
add
add
idiv
(bad)
call
sub
add
add
add
add
(bad)
(bad)
inc
sub
add
add
(bad)
(bad)
inc
adc
add
and
push
add
push
sub
outs
fld
add
and
add
or
inc
add
add
idiv
(bad)
jmp
mov
push
add
push
sub
std
add
or
push
add
sub
add
or
ds
add
outs
jecxz
add
and
jecxz
add
and
add
and
inc
add
add
idiv
(bad)
jmp
les
add
sub
add
sub
and
push
add
sub
add
pop
or
add
add
or
inc
add
add
idiv
(bad)
jmp
int3
push
add
sub
add
sub
add
xor
add
add
add
add
add
and
push
add
sub
add
add
or
add
sub
add
xor
add
add
add
inc
add
or
add
add
or
add
add
or
inc
add
add
jae
add
or
or
add
and
add
xor
add
add
add
add
add
and
push
add
sub
add
sub
add
sub
xor
mov
add
mov
add
add
add
or
add
sub
add
xor
add
fmul
add
sub
add
outs
jecxz
add
and
xor
inc
add
add
idiv
(bad)
call
sub
add
add
add
or
inc
add
add
idiv
(bad)
call
add
adc
push
sub
les
add
pop
add
push
rcl
add
sbb
inc
add
or
add
or
pop
add
or
add
jp
add
sbb
add
jp
add
mov
add
add
dec
push
add
sub
push
sub
push
add
add
or
add
or
outs
in
add
or
or
add
or
add
add
outs
add
es
in
add
or
add
or
inc
add
add
idiv
(bad)
call
sub
add
ficom
sub
pop
inc
add
add
idiv
(bad)
dec
outs
add
push
sub
add
adc
add
add
add
add
add
xor
inc
add
add
and
pop
add
push
and
add
add
add
sbb
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
sub
jae
add
or
push
outs
push
add
or
add
add
or
add
add
add
add
and
push
add
sub
push
and
add
rcr
add
add
inc
add
or
push
add
sub
add
lea
inc
add
push
and
add
or
xchg
add
add
add
add
and
push
add
sub
push
sub
push
add
add
or
sbb
add
(bad)
(bad)
call
sub
add
es
push
add
sub
add
sub
and
inc
add
or
add
or
inc
add
add
idiv
(bad)
jmp
call
push
add
push
sub
rcr
add
add
inc
add
or
add
sub
sbb
add
add
(bad)
(bad)
jmp
in
push
add
sub
add
sub
lock
add
sub
add
sub
add
adc
add
add
and
push
add
sub
push
and
add
add
cmp
add
pop
add
push
and
add
and
push
add
sub
add
or
outs
pop
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
add
or
and
push
add
sub
add
or
mov
shr
add
add
inc
add
or
add
sub
add
and
add
sbb
add
add
(bad)
(bad)
inc
outs
jae
add
and
push
add
sub
add
call
sub
add
and
add
sub
add
(bad)
out
add
add
or
or
add
add
sub
add
or
add
push
and
or
add
sub
add
adc
add
and
or
add
sub
add
adc
cmp
add
adc
adc
call
add
or
pop
outs
or
add
and
add
sub
add
xor
inc
add
add
idiv
(bad)
call
add
pop
and
add
sub
add
outs
or
add
and
add
and
add
sub
sbb
add
add
idiv
(bad)
jmp
sbb
add
sub
add
adc
and
add
sub
add
pop
adc
adc
adc
mov
jp
(bad)
call
idiv
(bad)
call
add
add
add
idiv
(bad)
jmp
push
push
add
sub
push
and
sub
or
add
jp
sub
add
push
je
add
add
and
sldt
sub
add
or
pop
shl
inc
add
or
outs
scas
add
or
inc
add
add
idiv
(bad)
inc
sub
add
push
and
inc
add
add
idiv
(bad)
inc
sub
and
sub
and
add
sub
push
and
add
or
add
jp
push
outs
or
add
or
add
add
add
idiv
(bad)
inc
outs
pop
add
or
inc
add
add
idiv
(bad)
inc
je
add
add
sub
outs
or
sub
shr
add
add
inc
add
or
sub
add
and
inc
add
add
idiv
(bad)
inc
and
add
sub
add
lea
or
or
sub
add
sub
add
push
mov
add
or
add
or
sub
add
adc
or
outs
add
add
add
add
add
or
push
add
sub
push
and
add
sub
push
and
add
sub
push
and
add
sub
push
and
add
sub
add
outs
adc
add
and
push
add
sub
push
and
push
add
sub
push
and
add
and
add
adc
or
jp
add
add
add
add
add
or
pop
add
sub
push
and
pop
add
sub
push
sub
add
or
add
sub
push
and
pop
add
push
and
add
sub
push
and
sldt
sub
add
outs
adc
add
and
pop
add
sub
push
push
and
push
add
sub
push
and
add
and
add
adc
add
sbb
add
add
adc
or
and
add
sub
add
pop
inc
push
add
add
add
add
add
add
add
add
inc
add
add
and
sldt
sub
add
cmp
and
add
sub
add
bound
movs
add
add
and
pop
add
push
and
add
sub
and
pop
add
push
outs
rol
add
sub
and
pop
add
push
and
add
sub
and
pop
add
push
and
add
sub
and
pop
add
push
and
add
sub
and
pop
add
push
and
add
sub
add
inc
sldt
sub
add
cs
sbb
add
add
(bad)
(bad)
call
sub
add
es
or
cmps
pop
add
sub
push
outs
rol
add
sub
and
add
push
add
push
xor
sbb
add
(bad)
(bad)
inc
add
add
or
add
sub
add
sub
xor
push
add
pop
add
adc
add
add
idiv
(bad)
call
sub
add
add
aam
add
add
sbb
add
add
idiv
(bad)
jmp
dec
sldt
sub
add
or
sbb
jae
add
and
add
push
push
and
add
push
add
push
pop
or
add
add
or
sub
add
aam
add
sub
add
xor
add
add
add
and
add
sub
add
and
add
push
add
push
sub
sub
add
sbb
add
add
sub
add
and
sub
add
or
pop
sldt
sub
add
sub
adc
sub
add
or
add
or
add
add
add
add
push
outs
sbb
add
and
push
sub
sbb
add
add
idiv
(bad)
call
sub
add
es
outs
add
pop
sub
add
adc
add
add
add
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
and
add
push
add
push
xor
add
pusha
sldt
sub
add
xor
add
sub
add
pop
sub
and
add
sub
add
xor
sbb
add
add
idiv
(bad)
call
sub
add
add
ins
sldt
sub
add
xor
add
jo
add
sub
add
pop
and
add
push
add
push
pop
sub
and
add
sub
add
xor
sbb
add
add
(bad)
(bad)
inc
and
add
push
add
push
xor
add
or
add
push
add
push
pop
and
add
push
pop
sub
mov
add
sub
add
sub
add
or
inc
add
add
add
add
and
add
push
xor
sbb
add
add
(bad)
(bad)
call
sub
add
add
nop
sldt
sub
add
pop
shr
add
xchg
sldt
sub
add
pop
and
push
add
push
pop
shr
add
xor
inc
add
add
add
add
lods
pop
add
sub
push
and
add
add
outs
adc
add
adc
pushf
sldt
sub
add
or
adc
pop
add
sbb
mov
push
add
push
or
add
sub
add
adc
add
add
add
sub
adc
adc
add
and
add
nop
add
adc
add
push
or
add
add
add
inc
pop
add
push
jae
add
or
sub
add
and
adc
add
xchg
add
add
and
pop
add
push
and
add
add
add
add
push
sub
add
or
adc
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
or
add
and
pop
or
sub
es
sub
sbb
add
add
idiv
(bad)
dec
outs
adc
sub
mov
pop
add
push
add
add
or
add
and
add
jp
add
adc
add
add
and
pop
add
sub
push
sub
push
add
add
or
add
or
movs
sldt
sub
add
or
and
pop
add
outs
enter
and
add
and
test
add
sub
add
pop
or
add
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
or
sub
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
and
pop
add
sub
push
and
sbb
add
sub
add
xor
add
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
or
add
xor
movs
add
add
add
add
and
pop
add
sub
push
and
add
add
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
add
or
outs
pop
add
or
inc
add
add
idiv
(bad)
inc
outs
sbb
add
and
sar
add
add
inc
add
or
inc
add
add
idiv
(bad)
jmp
lods
sldt
sub
add
sub
sub
add
and
inc
add
add
idiv
(bad)
jmp
mov
add
sub
add
sub
mov
add
sub
add
sub
add
add
or
ins
add
add
add
add
and
pop
add
sub
push
and
add
add
add
or
inc
add
add
idiv
(bad)
call
sub
add
and
push
add
push
sub
and
add
push
adc
ror
add
push
add
push
(bad)
out
add
add
sbb
add
and
and
sldt
sub
add
inc
sub
add
add
or
inc
add
add
add
add
and
pop
add
sub
push
and
add
add
add
or
sbb
add
add
idiv
(bad)
call
sub
add
add
add
push
and
sldt
sub
add
sub
add
add
or
dec
add
add
add
add
and
pop
add
sub
push
and
add
add
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
add
or
add
sub
add
inc
sub
int3
sldt
sub
add
sub
adc
add
sub
add
xchg
add
adc
sub
add
sub
add
sub
outs
inc
add
or
add
and
outs
xchg
add
or
add
iret
add
add
add
add
and
pop
add
sub
push
and
add
add
add
or
daa
pop
add
sub
push
and
add
or
add
sub
push
and
add
jp
outs
sbb
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
add
or
inc
add
add
idiv
(bad)
inc
sar
add
add
inc
add
or
inc
add
add
idiv
(bad)
call
add
add
or
inc
add
add
idiv
(bad)
inc
sub
sub
stos
pop
add
sub
push
and
add
or
push
pop
add
sub
push
and
add
jp
add
or
add
add
add
add
and
pop
add
sub
push
and
add
add
add
or
add
and
add
sub
add
inc
sub
add
xor
or
add
xchg
add
adc
add
add
sub
add
and
or
xor
add
add
add
add
push
pop
add
sub
push
and
add
add
std
pop
add
sub
push
and
add
add
add
sub
add
and
add
add
add
push
add
sldt
sub
add
sub
pop
add
or
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
or
add
add
(bad)
(bad)
inc
add
outs
pop
inc
add
add
idiv
(bad)
inc
outs
push
add
or
sldt
sub
add
or
call
sub
add
sub
sbb
add
(bad)
(bad)
inc
add
loopne
add
sub
add
or
cwde
add
add
and
sldt
sub
add
pop
or
xor
add
(bad)
(bad)
inc
outs
sbb
add
and
inc
add
add
idiv
(bad)
inc
outs
sbb
add
sub
add
add
(bad)
(bad)
inc
add
add
or
sub
add
and
add
call
push
add
push
sub
outs
pop
add
or
inc
add
add
idiv
(bad)
inc
sldt
sub
add
sub
add
add
or
sub
add
sub
sub
adc
add
rol
add
xchg
add
adc
and
pop
add
sub
push
sub
push
add
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
add
or
push
add
add
inc
add
or
add
sub
add
and
inc
add
add
idiv
(bad)
inc
outs
sbb
add
and
inc
add
add
idiv
(bad)
jmp
or
add
pop
add
push
and
add
or
add
jp
outs
jae
add
and
add
sub
add
call
sub
add
and
add
or
inc
add
add
idiv
(bad)
call
and
pop
add
sub
push
add
cmp
add
and
add
jp
add
xor
mov
add
adc
and
pop
add
sub
push
sub
push
add
sbb
add
sub
add
and
sub
add
and
outs
sbb
add
and
aaa
pop
add
sub
push
and
add
or
add
jp
outs
jae
add
and
add
sub
add
call
sub
add
add
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
and
pop
add
sub
push
add
cmp
add
and
add
jp
add
adc
add
sub
add
xchg
add
adc
and
add
sub
push
and
add
add
add
or
add
and
imul
or
add
sbb
add
add
idiv
(bad)
call
sub
add
es
sub
add
push
and
sldt
sub
add
or
cmp
add
or
add
push
pop
add
sbb
add
or
inc
add
add
idiv
(bad)
jmp
cld
sldt
sub
add
sub
and
adc
add
push
add
push
pop
or
add
add
or
jp
add
push
outs
sbb
add
sub
pop
inc
add
add
idiv
(bad)
jmp
add
add
sub
add
or
outs
jecxz
add
and
add
adc
add
adc
add
idiv
(bad)
jmp
or
add
sub
add
sub
and
add
sub
add
pop
or
add
or
sbb
jb
add
sub
push
and
add
or
add
or
adc
add
sub
add
sub
add
xor
mov
add
adc
and
pop
add
sub
push
and
add
add
add
or
adc
add
sub
add
pop
inc
add
add
cmp
add
dec
add
add
add
add
and
adc
add
push
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
sub
add
add
outs
and
add
sub
je
add
add
add
or
test
add
outs
and
add
and
pop
add
sub
push
and
add
sub
push
and
add
jp
xor
add
add
cwde
add
adc
and
pop
add
sub
push
sub
push
add
add
add
push
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
add
push
and
adc
add
push
add
push
sub
add
add
or
sub
add
add
add
add
in
pop
add
sub
push
and
add
add
add
or
and
add
sub
add
inc
sub
add
add
or
adc
add
add
add
and
add
sub
add
sub
add
and
add
xor
add
and
pop
add
sub
push
and
add
add
repnz
add
sub
push
sub
push
add
add
outs
and
add
or
sub
add
sub
add
xor
rol
add
call
pop
add
sub
push
and
add
add
push
pop
add
sub
push
and
add
add
add
or
and
adc
add
push
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
or
sub
add
sub
add
adc
dec
add
add
add
add
or
mov
add
add
and
es
push
or
bound
add
pop
add
push
add
add
or
cmp
add
and
add
sub
push
and
add
or
lods
pop
add
sub
push
and
add
or
add
and
add
sub
push
jae
add
or
sub
add
add
add
imul
mov
add
adc
add
add
and
pop
add
sub
push
and
add
add
push
pop
add
sub
push
and
add
add
add
or
xor
add
sub
add
cs
inc
add
add
idiv
(bad)
call
sub
add
es
and
add
sub
add
sbb
inc
add
add
idiv
(bad)
jmp
sbb
add
add
pop
add
or
add
add
add
outs
daa
add
or
and
pop
add
sub
push
add
add
or
add
and
add
sub
push
and
add
jp
add
xor
add
add
xchg
add
adc
outs
test
add
and
cmp
add
sub
add
cs
inc
add
add
idiv
(bad)
call
sub
add
es
and
add
sub
add
cs
sbb
add
add
(bad)
(bad)
jmp
sbb
inc
adc
add
push
add
push
sub
je
add
add
add
or
adc
add
push
add
push
sub
add
xor
add
add
outs
test
add
and
dec
adc
add
push
add
push
cs
inc
add
add
idiv
(bad)
call
sub
add
es
and
add
push
add
push
cs
sbb
add
add
(bad)
(bad)
jmp
pop
and
add
sub
add
sub
je
add
add
add
or
and
add
push
add
push
sub
xor
add
add
add
add
add
pop
add
sbb
inc
add
or
sub
add
push
and
xor
add
add
sub
add
or
add
outs
push
add
or
add
push
add
outs
sub
add
and
add
push
sub
add
xor
add
add
add
add
add
and
add
sub
add
sub
add
sub
xor
add
add
adc
add
adc
add
and
pop
adc
add
push
add
push
sub
add
sub
add
xor
add
add
add
add
add
and
pop
add
push
and
add
add
pop
add
sbb
inc
add
or
outs
sub
aaa
add
sbb
add
add
xor
add
add
add
add
add
and
pop
add
sub
push
and
add
add
add
or
mov
pop
add
push
and
add
or
add
or
add
sub
add
or
adc
pop
add
add
adc
and
pop
add
push
and
add
add
add
push
add
xor
add
and
add
or
and
add
sub
add
pop
sub
pop
inc
add
add
idiv
(bad)
call
sub
add
es
adc
add
push
add
push
pop
sub
pop
inc
add
add
idiv
(bad)
inc
push
push
add
push
popa
or
sbb
add
ins
adc
add
push
add
push
pop
add
add
or
add
add
add
or
sub
add
add
(bad)
(bad)
inc
sub
add
xor
add
add
add
add
add
rcr
sub
push
sub
push
add
std
pop
add
sub
push
and
add
add
add
or
add
sub
push
and
add
sub
push
and
add
or
add
add
outs
xor
add
sub
adc
add
add
and
add
sub
add
(bad)
out
add
add
push
and
add
push
add
push
add
add
push
sub
add
xor
cmp
add
adc
and
pop
add
sub
push
and
add
add
std
pop
add
sub
push
sub
add
sub
add
adc
add
and
add
and
sub
add
or
add
xor
jnp
add
pop
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
push
and
add
jp
js
add
sub
add
or
xor
push
outs
jae
add
sub
sbb
add
add
(bad)
(bad)
jmp
jl
add
sub
add
sub
and
push
add
push
pop
or
add
add
or
test
add
sub
add
sub
adc
add
movs
add
add
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
push
jae
add
or
outs
jne
add
sub
add
add
(bad)
(bad)
jmp
mov
add
sub
add
sub
mov
add
sub
add
or
xor
push
outs
jae
add
and
add
and
inc
add
add
idiv
(bad)
jmp
nop
adc
add
push
add
push
sub
and
add
push
pop
or
add
add
or
inc
add
add
idiv
(bad)
jmp
cwde
adc
add
push
add
push
sub
xor
add
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
and
add
sub
push
and
add
jp
sub
add
sub
push
jae
add
or
outs
jne
add
add
add
or
xchg
add
add
inc
add
add
idiv
(bad)
inc
add
add
or
outs
jne
add
pop
add
pushf
adc
add
push
add
push
add
add
or
add
sub
add
sub
add
or
inc
add
add
idiv
(bad)
inc
sub
adc
xor
add
and
outs
jne
add
and
add
or
and
add
push
add
add
or
add
sub
add
sub
add
or
inc
add
add
idiv
(bad)
inc
sub
add
cmp
add
sub
add
xor
add
add
add
add
add
add
xor
es
pop
inc
add
add
idiv
(bad)
call
sub
add
and
add
push
sub
add
add
or
add
and
add
or
xor
add
add
sub
add
or
mov
add
sub
add
sub
sub
push
and
mov
add
sub
add
sub
mov
push
add
push
sub
add
add
or
or
add
add
add
add
adc
dec
add
push
sub
add
add
or
xor
add
add
add
add
and
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
add
outs
aaa
add
or
add
pop
add
outs
aaa
add
or
add
add
xor
add
add
add
add
add
and
add
push
sub
add
and
add
add
pop
add
push
or
add
add
add
add
into
add
add
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
push
and
add
jp
jnp
add
add
rcl
add
push
add
push
xor
sbb
add
add
(bad)
(bad)
jmp
push
add
sub
push
and
add
sub
push
jae
add
or
jae
add
or
jae
add
or
push
pop
or
push
pop
add
push
jae
add
push
sub
push
pop
outs
sbb
add
and
add
xor
push
add
add
les
add
sub
add
or
xor
sub
add
add
(bad)
(bad)
call
sub
add
add
add
or
or
enter
sub
add
or
push
outs
pop
add
push
add
add
or
inc
add
add
idiv
(bad)
jmp
add
xor
add
pop
add
push
or
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
push
and
add
jp
jae
add
or
jae
add
or
or
int3
adc
add
push
add
push
jge
add
add
pop
or
push
pop
add
push
jae
add
push
sub
push
pop
outs
sbb
add
and
xor
add
add
add
add
add
sub
add
or
sub
add
adc
add
add
add
jae
add
or
jae
add
or
and
adc
add
push
add
push
or
and
sub
and
adc
add
push
add
push
or
or
add
add
or
pop
or
add
or
cmp
add
and
rcl
inc
add
add
idiv
(bad)
call
sub
add
es
outs
sbb
add
and
or
or
add
add
add
add
push
add
push
sub
xor
add
add
add
add
add
sub
add
sub
push
and
add
jp
add
push
add
push
and
xor
add
pop
add
push
or
adc
rol
add
sub
or
outs
cmp
add
and
add
jge
add
add
outs
cmp
es
add
or
rol
add
outs
aas
add
or
add
or
outs
arpl
add
and
inc
add
add
idiv
(bad)
call
sub
add
ficom
sub
sbb
add
add
(bad)
(bad)
dec
outs
add
and
pop
add
sub
push
and
add
sub
add
jae
add
or
pop
add
inc
pop
add
push
jae
add
or
add
or
add
adc
add
add
cmp
adc
add
add
xor
add
add
add
add
add
add
dec
pop
add
sub
push
sub
push
sub
add
xor
fiadd
add
and
add
add
and
add
idiv
(bad)
call
sub
add
and
add
pop
add
push
and
add
jp
and
adc
add
push
add
push
xor
pop
inc
add
add
idiv
(bad)
jmp
popa
pop
add
sub
push
and
add
push
and
add
jp
add
jne
add
and
and
adc
add
push
add
push
xor
add
(bad)
(bad)
jmp
iret
pop
add
sub
push
and
add
jp
sub
sbb
add
add
(bad)
(bad)
inc
outs
jne
add
and
sbb
add
add
(bad)
(bad)
inc
and
adc
add
push
add
push
push
outs
xor
add
and
inc
add
or
pop
add
cmp
add
and
add
add
adc
add
adc
add
mov
jae
add
or
push
jae
add
or
pop
sub
xor
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
adc
(bad)
adc
push
sub
outs
jne
add
and
add
sub
add
xor
add
add
movs
add
adc
add
or
push
add
pop
add
push
push
outs
sbb
add
and
push
sub
push
outs
add
pop
sub
adc
add
add
add
sbb
or
add
add
xor
mov
add
adc
and
add
sub
push
and
add
add
call
push
add
push
arpl
in
adc
add
push
add
push
pop
sub
add
push
or
and
adc
add
push
add
push
arpl
hlt
adc
add
push
add
push
pop
sub
add
push
and
clc
adc
add
push
add
push
arpl
cld
adc
add
push
add
push
pop
sub
add
push
and
add
add
sub
add
pop
sub
add
push
and
add
add
sub
add
outs
aam
add
add
or
add
sub
add
outs
aam
add
add
outs
aam
add
add
outs
aam
add
add
outs
aam
add
add
outs
aam
add
sub
add
xor
add
add
add
add
add
add
or
outs
jne
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
push
and
add
or
jae
add
or
add
add
xor
add
add
add
add
add
sub
add
add
inc
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
and
pop
add
push
and
add
or
add
or
add
or
inc
add
add
add
add
and
pop
add
sub
push
sub
push
add
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
pop
add
sub
push
and
add
or
jae
add
or
add
xor
add
add
add
add
add
and
pop
add
push
and
add
or
add
sub
xor
add
add
add
sub
add
or
outs
fld
add
and
add
add
or
add
add
xor
add
add
add
add
add
and
pop
add
push
and
add
or
add
sub
xor
add
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
add
add
or
outs
mov
or
add
add
(bad)
(bad)
inc
jae
add
or
add
or
push
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
add
add
or
add
add
or
cmp
add
add
add
add
or
add
sub
add
xor
inc
add
add
idiv
(bad)
call
sub
add
add
mov
add
and
add
sub
push
and
add
jp
add
add
or
das
add
add
add
add
and
adc
add
push
add
push
xor
sbb
add
(bad)
(bad)
call
sub
add
add
mov
add
add
inc
add
or
add
xor
add
add
add
sub
push
add
add
and
add
and
add
jp
add
add
xor
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
add
mov
add
add
inc
add
or
add
add
xor
add
add
add
adc
push
(bad)
push
pop
add
sbb
add
or
add
sub
add
sbb
add
mov
add
sub
push
and
add
jp
add
add
or
sbb
add
add
add
add
sbb
add
sub
add
xor
add
mov
add
add
inc
add
or
add
or
and
add
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
or
add
jp
add
add
xor
add
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
es
jae
add
or
add
xor
add
add
add
add
add
and
pusha
add
sub
push
and
add
add
jge
add
add
add
cmp
add
add
add
adc
add
mov
add
adc
jnp
add
add
or
movs
add
add
add
(bad)
(bad)
call
sub
add
es
and
pusha
add
sub
push
sub
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
and
add
add
add
dec
add
add
push
add
push
add
jnp
add
add
add
jle
add
add
push
add
push
add
add
add
add
jle
add
add
push
add
push
add
add
add
add
or
add
sub
add
add
add
add
add
add
add
add
sub
add
push
and
add
or
pop
add
add
add
add
sub
add
xor
add
sub
add
and
add
sbb
add
sub
add
adc
add
add
add
dec
add
or
add
or
cmp
push
outs
retf
or
add
or
and
add
sub
add
and
add
sub
add
or
add
or
add
and
add
and
outs
arpl
add
and
sub
push
jne
add
add
pop
adc
sub
sbb
add
add
(bad)
(bad)
call
sub
add
adc
outs
add
adc
add
push
add
push
pop
adc
mov
pusha
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
sub
add
sub
add
or
add
xor
add
sub
add
sub
sub
sbb
add
add
add
add
aam
add
lea
add
sbb
add
test
add
cmps
add
adc
xor
add
sub
add
or
sub
add
and
and
adc
add
push
add
push
adc
ins
or
add
or
sub
sbb
add
(bad)
(bad)
call
sub
add
or
add
or
fiadd
fiadd
or
add
or
mov
adc
add
push
add
push
sub
add
or
add
or
sbb
add
add
idiv
(bad)
inc
and
add
sub
add
pop
or
add
inc
adc
add
push
add
push
pop
adc
add
mov
lea
inc
add
add
idiv
(bad)
(bad)
fiadd
fiadd
push
sub
sbb
add
add
add
dec
add
lea
add
add
or
cwde
mov
add
sbb
add
xor
add
and
add
and
add
sub
add
or
dec
add
or
add
or
add
and
add
jge
add
and
fiadd
push
sub
add
add
add
add
or
and
add
xor
(bad)
add
add
dec
adc
add
push
add
push
or
sub
add
and
push
and
add
sub
add
adc
cmp
adc
call
or
add
xchg
add
and
adc
or
inc
add
add
idiv
(bad)
call
sub
add
ficom
sub
sbb
add
add
(bad)
(bad)
dec
outs
dec
add
or
dec
add
or
mov
adc
add
push
add
push
sub
add
or
add
or
sbb
add
add
(bad)
(bad)
inc
and
add
sub
add
pop
or
add
fiadd
adc
and
add
push
add
push
pop
adc
adc
adc
mov
pop
(bad)
(bad)
(bad)
fiadd
fiadd
push
sub
add
sbb
add
add
add
add
add
or
(bad)
rol
add
xor
add
add
add
sub
add
and
imul
sub
add
inc
or
push
fiadd
and
add
push
add
push
sub
sub
add
add
add
add
sbb
add
lea
add
sbb
add
pop
add
add
sub
add
and
imul
add
push
push
add
push
sub
sub
add
add
add
add
(bad)
sldt
lea
add
sbb
add
push
add
add
sub
add
and
imul
sub
add
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
and
add
sub
add
call
outs
push
add
or
fiadd
fiadd
adc
pop
sub
add
add
add
add
add
dec
dec
add
lea
add
adc
add
push
add
add
dec
add
or
and
add
push
add
push
or
call
or
add
and
js
add
sub
add
pop
or
xor
sbb
add
add
(bad)
(bad)
call
sub
add
sub
adc
add
xor
add
lods
add
adc
sub
add
or
mov
adc
inc
add
add
idiv
(bad)
call
sub
add
sub
and
add
push
add
push
call
int
adc
add
add
add
sub
add
and
imul
sub
add
call
and
add
adc
add
add
add
push
add
or
sub
add
and
add
test
add
sub
add
adc
adc
push
add
or
add
and
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
or
add
or
add
add
push
add
push
pop
adc
mov
scas
sbb
add
add
(bad)
(bad)
inc
outs
mov
sub
sbb
push
add
add
add
mov
add
sub
add
or
jae
add
or
and
push
add
push
and
add
push
add
je
add
and
cld
add
or
std
add
or
inc
add
add
idiv
(bad)
call
sub
add
or
add
or
push
sub
add
and
push
add
push
sbb
idiv
(bad)
inc
outs
sbb
add
and
mov
or
sub
add
and
pushf
adc
add
push
add
push
and
push
add
push
add
je
add
and
cld
add
or
std
add
or
add
push
or
or
add
and
add
and
add
sub
add
xor
inc
add
add
idiv
(bad)
dec
and
push
add
push
pop
adc
sub
add
and
and
add
push
sbb
add
(bad)
(bad)
inc
outs
sbb
add
and
adc
add
or
push
sub
add
and
add
sub
add
inc
jmp
add
add
(bad)
(bad)
inc
outs
sbb
add
and
push
add
or
pop
and
add
push
adc
cmp
pop
adc
call
adc
add
push
add
push
lea
add
add
or
or
mov
push
add
push
and
adc
add
push
add
push
popf
adc
outs
xor
add
pop
push
sub
add
and
add
sub
add
ss
sbb
add
add
(bad)
(bad)
call
add
outs
sbb
add
outs
sub
es
sbb
add
add
idiv
(bad)
call
add
adc
add
push
add
push
pop
outs
pop
add
or
add
and
add
and
xor
or
int3
adc
add
push
add
push
pop
adc
adc
adc
mov
dec
(bad)
(bad)
call
add
(bad)
(bad)
(bad)
fimul
or
jns
add
fdivr
add
or
adc
sub
add
add
add
add
push
add
add
add
test
add
or
add
add
add
add
add
mov
add
add
add
add
add
add
xor
add
jle
add
or
jle
add
or
xor
jle
add
or
and
popa
add
sub
push
and
add
add
sub
add
pop
add
push
and
add
and
add
or
jae
add
or
outs
pop
add
or
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
adc
fstp
add
add
outs
pop
add
or
add
and
rol
add
adc
outs
pop
add
or
add
or
add
push
add
push
(bad)
fld
add
adc
and
add
sub
push
and
aas
add
sbb
add
or
jle
add
sub
push
and
add
and
add
add
add
aam
add
sub
add
call
inc
add
add
idiv
(bad)
inc
jle
add
or
adc
fcom
add
sub
add
call
jle
add
or
fcom
add
sub
add
(bad)
fld
add
adc
add
sub
push
and
aas
add
sbb
add
or
adc
add
push
add
push
call
adc
outs
popa
add
or
(bad)
call
inc
add
add
idiv
(bad)
(bad)
fimul
pop
sub
adc
outs
add
fiadd
es
adc
fiadd
push
sub
push
sub
inc
xor
add
add
add
add
add
add
or
add
sbb
add
outs
add
add
add
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
or
add
push
add
push
push
dec
add
add
add
add
xor
add
add
mov
add
add
popa
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
and
pop
add
push
and
add
or
push
add
or
add
or
add
and
add
and
adc
add
push
add
push
push
add
xchg
add
push
and
add
xor
add
add
add
add
add
add
or
call
push
add
push
push
add
xchg
add
push
sub
sbb
or
sbb
add
mov
add
push
add
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
adc
add
push
add
push
sub
lock
add
push
add
push
or
add
add
add
idiv
(bad)
jmp
hlt
adc
add
push
add
push
or
clc
adc
add
push
add
push
or
add
cld
adc
add
push
add
push
and
adc
add
push
add
push
push
pusha
adc
sub
es
sub
sbb
add
add
(bad)
(bad)
inc
add
add
add
sub
add
adc
or
add
sub
add
and
add
sub
add
push
pusha
and
adc
add
push
add
push
adc
adc
sub
pop
add
adc
add
sub
add
push
add
add
add
push
and
sbb
inc
add
add
idiv
(bad)
jmp
sbb
add
sub
add
adc
and
adc
inc
add
add
idiv
(bad)
inc
sub
and
add
sub
add
sub
add
add
add
add
add
pop
add
add
add
xor
add
add
and
add
sub
add
sub
or
sub
and
add
sub
add
sub
or
sub
sbb
pop
add
add
mov
add
adc
add
add
add
idiv
(bad)
call
sub
add
es
add
push
and
inc
add
add
idiv
(bad)
inc
sub
sub
add
sub
add
or
add
add
idiv
(bad)
jmp
sub
add
sub
add
or
xor
add
sub
add
or
add
xor
add
sub
add
and
adc
add
push
add
push
pop
pusha
adc
sub
or
iret
add
add
inc
add
add
idiv
(bad)
jmp
cmp
add
sub
add
adc
inc
adc
add
push
add
push
adc
add
push
add
push
lea
add
add
push
adc
and
add
sub
add
and
add
push
add
push
sub
add
or
push
adc
add
push
add
push
adc
push
adc
push
or
add
sbb
add
add
(bad)
(bad)
call
add
or
or
push
adc
add
push
add
push
pop
inc
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
and
add
sub
add
ss
add
add
idiv
(bad)
call
push
adc
add
push
add
push
pop
loopne
sub
add
add
(bad)
(bad)
call
pop
and
add
sub
add
pop
adc
sub
add
and
adc
add
push
add
push
adc
outs
jge
add
or
mov
push
add
or
or
push
add
or
push
push
add
push
adc
or
ins
adc
add
push
add
push
adc
adc
and
add
sub
add
adc
outs
data16
or
cmp
or
or
or
or
or
xor
add
outs
pop
add
or
or
je
add
sub
add
pop
adc
adc
and
add
sub
add
adc
outs
data16
or
or
or
mov
add
idiv
(bad)
call
or
add
or
adc
and
add
push
add
push
sub
add
and
add
or
pop
or
sbb
add
add
(bad)
(bad)
dec
sub
fadd
sub
inc
sbb
add
add
add
add
test
add
pop
add
add
add
add
xor
add
add
add
adc
add
push
add
push
lea
add
add
and
add
push
or
add
mov
add
sub
add
push
add
add
add
idiv
(bad)
call
sub
add
es
add
push
sub
add
add
(bad)
(bad)
call
and
add
push
or
sub
sbb
add
add
(bad)
(bad)
jmp
nop
adc
add
push
add
push
or
xchg
adc
add
push
add
push
or
adc
add
push
add
push
and
add
push
or
add
mov
add
adc
add
push
inc
add
add
idiv
(bad)
jmp
mov
push
add
push
adc
add
push
add
push
adc
push
and
push
add
push
and
add
push
sub
add
or
mov
add
sub
add
adc
lea
add
adc
add
adc
inc
add
add
idiv
(bad)
dec
add
add
ficom
or
sbb
add
add
(bad)
(bad)
dec
sub
fadd
lea
add
add
pop
push
adc
pop
sub
add
or
pop
sub
add
add
add
jg
xchg
adc
pop
add
add
add
or
sldt
add
add
add
add
push
je
add
add
add
xor
add
add
add
add
add
add
xchg
add
push
je
add
add
add
adc
add
add
add
push
or
sub
add
add
(bad)
(bad)
call
sub
add
adc
(bad)
adc
pop
sub
sub
add
or
add
sub
xor
add
add
add
xchg
add
push
and
or
add
adc
pop
sub
sub
add
or
add
sub
add
xor
add
add
add
add
sub
or
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
add
or
push
jae
add
or
add
adc
add
xor
add
add
add
add
add
call
push
sub
add
or
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
or
push
jae
add
or
add
xor
add
add
add
add
add
add
mov
add
sub
add
sub
es
and
push
add
push
sub
add
mov
push
add
push
sub
sub
add
xor
add
add
push
and
push
pop
inc
add
add
idiv
(bad)
call
sub
add
es
adc
add
push
add
push
sub
les
add
sub
add
sub
xor
add
add
add
add
add
and
adc
add
push
add
push
sub
es
sbb
add
add
(bad)
(bad)
call
sub
add
es
adc
add
push
add
push
sub
add
rcl
add
sub
add
sub
sub
sbb
push
add
add
add
sub
sbb
add
add
idiv
(bad)
call
sub
add
es
add
push
sub
add
add
(bad)
(bad)
jmp
aam
add
sub
add
sub
fcom
add
sub
add
or
adc
add
idiv
(bad)
jmp
fcom
add
sub
add
or
loopne
add
sub
add
or
in
add
sub
add
or
add
call
push
add
push
and
adc
add
push
add
push
push
pusha
adc
sub
es
inc
add
add
idiv
(bad)
jmp
lock
add
push
add
push
or
pop
pop
sub
pop
inc
add
add
idiv
(bad)
inc
sub
fmul
sub
adc
add
add
cmp
add
add
add
sbb
or
call
add
adc
daa
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
adc
add
push
add
push
sub
clc
adc
add
push
add
push
or
or
cld
adc
add
push
add
push
or
add
add
sub
add
or
add
add
add
sub
add
and
adc
add
push
add
push
push
pusha
adc
sub
or
sbb
add
add
(bad)
(bad)
inc
add
or
add
sub
add
adc
adc
add
sub
add
and
add
sub
add
push
pusha
and
adc
add
push
add
push
adc
adc
sub
or
add
sub
add
adc
and
adc
inc
add
add
idiv
(bad)
inc
sub
and
adc
add
push
add
push
sub
add
add
add
add
dec
add
add
sbb
push
add
add
add
sub
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
sub
sub
add
sub
add
or
adc
add
idiv
(bad)
jmp
sub
add
sub
add
or
xor
add
sub
add
or
xor
add
sub
add
or
and
and
add
pop
add
push
outs
push
es
jo
add
pop
add
jo
add
add
sub
add
xor
add
idiv
(bad)
inc
or
cmp
add
sub
add
pop
outs
imul
adc
and
add
sub
add
or
add
or
adc
add
push
add
push
and
add
sub
add
push
pusha
adc
sub
adc
adc
sub
sub
es
add
add
(bad)
(bad)
jmp
dec
adc
add
push
add
push
or
pop
pop
sub
pop
inc
add
add
idiv
(bad)
inc
sub
fmul
sub
add
adc
add
add
add
add
add
add
sbb
push
add
add
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
push
and
inc
add
add
idiv
(bad)
jmp
push
adc
add
push
add
push
sub
push
adc
add
push
add
push
or
add
add
idiv
(bad)
jmp
pop
adc
add
push
add
push
or
pop
adc
add
push
add
push
or
pusha
adc
add
push
add
push
or
add
adc
add
push
add
push
and
add
sub
add
push
pusha
adc
sub
or
add
add
(bad)
(bad)
inc
add
pop
add
sub
add
add
(bad)
(bad)
jmp
ins
adc
add
push
add
push
or
pop
pop
sub
sbb
add
add
(bad)
(bad)
inc
sub
fmul
sub
add
add
add
ins
add
add
add
add
adc
add
sub
add
adc
add
jo
add
sub
add
sub
push
mov
adc
add
je
add
sub
add
sub
or
sub
add
sbb
or
cmp
add
mov
js
add
sub
add
or
push
sbb
add
add
(bad)
(bad)
call
sub
add
and
add
push
add
push
or
adc
add
push
add
push
or
add
or
sub
sbb
add
add
idiv
(bad)
jmp
xlat
add
push
and
inc
add
add
idiv
(bad)
dec
outs
mov
add
and
add
push
and
push
add
push
push
pusha
adc
sub
or
xchg
add
add
add
(bad)
(bad)
jmp
mov
add
sub
add
adc
nop
adc
add
push
add
push
jae
add
or
add
adc
add
push
add
push
adc
pop
adc
add
add
or
add
or
add
or
push
sub
es
inc
add
add
idiv
(bad)
dec
adc
or
add
adc
cwde
adc
add
push
add
push
pop
adc
outs
jle
add
add
mov
add
idiv
(bad)
(bad)
ficom
inc
add
add
idiv
(bad)
inc
sub
or
add
or
add
adc
add
add
pop
add
adc
add
inc
add
add
add
pushf
adc
add
push
add
push
sub
or
mov
daa
sbb
add
add
(bad)
(bad)
call
sub
add
add
and
push
add
push
sub
or
sub
add
xor
add
movs
adc
add
push
add
push
or
or
test
add
sub
add
or
lods
adc
add
push
add
push
or
add
or
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
push
sub
add
add
(bad)
(bad)
dec
outs
mov
sub
add
mov
add
sub
add
and
add
push
push
pusha
adc
sub
es
add
and
push
add
push
adc
add
push
add
push
adc
and
adc
add
push
add
push
adc
pop
adc
add
or
push
jle
add
or
add
or
pop
jle
add
or
add
or
add
or
add
xchg
add
push
and
mov
add
and
adc
add
push
add
push
jae
add
or
or
enter
sub
add
adc
sub
int3
adc
add
push
add
push
adc
pop
adc
adc
adc
jle
add
or
add
or
add
or
add
or
xchg
add
push
and
sbb
idiv
(bad)
dec
adc
outs
sbb
add
and
add
adc
and
adc
add
push
add
push
pop
adc
adc
push
pop
outs
xor
add
idiv
(bad)
(bad)
fimul
sub
fmul
outs
mov
sub
inc
sbb
add
add
add
add
sgdtd
add
add
or
add
add
xor
dec
add
add
add
aam
add
sub
add
sub
or
add
sbb
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
and
adc
add
push
add
push
sub
or
sub
xor
add
adc
add
push
add
push
or
or
loopne
add
sub
add
or
in
add
sub
add
or
add
adc
add
sub
inc
add
add
idiv
(bad)
call
sub
add
es
add
push
and
inc
add
add
idiv
(bad)
dec
sub
add
call
push
add
push
and
adc
add
push
add
push
push
pusha
adc
sub
es
inc
add
add
idiv
(bad)
jmp
lock
add
push
add
push
adc
jle
add
or
push
jle
add
or
add
or
pop
jle
add
or
add
or
add
or
add
xchg
add
push
and
xor
add
imul
or
or
hlt
adc
add
push
add
push
bound
or
or
add
push
add
outs
pop
sub
add
and
add
or
pop
pop
sub
sbb
add
(bad)
(bad)
inc
sub
fmul
sub
add
add
add
add
push
add
add
add
xor
add
add
add
add
add
add
mov
es
sbb
add
add
(bad)
(bad)
call
sub
add
es
push
add
push
sub
add
add
(bad)
(bad)
jmp
add
add
push
add
add
push
sub
xor
add
add
add
add
test
add
and
clc
adc
add
push
add
push
adc
sub
adc
adc
call
adc
sub
es
add
add
push
adc
and
adc
add
push
add
push
pop
adc
adc
adc
mov
(bad)
sbb
add
add
(bad)
(bad)
call
sub
add
add
sub
adc
and
adc
add
push
add
push
adc
sub
or
or
and
add
pop
add
push
or
add
or
and
and
add
pop
add
push
or
add
or
add
add
push
and
add
adc
sub
or
add
add
sub
add
pop
adc
adc
adc
mov
lahf
sbb
add
add
(bad)
(bad)
jmp
add
add
add
lea
add
add
add
and
add
sub
add
jae
add
or
and
adc
add
push
add
push
jae
add
or
and
add
sub
add
jae
add
or
and
adc
add
push
add
push
jae
add
or
and
add
sub
add
jae
add
or
and
adc
add
push
add
push
jae
add
or
and
add
sub
add
jae
add
or
sub
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
outs
add
or
add
sub
push
and
add
and
add
and
add
sub
add
inc
sub
add
xor
add
add
add
add
add
sub
add
add
xor
add
add
add
mov
add
fiadd
fiadd
and
add
push
and
add
sub
add
and
pop
add
push
and
add
or
add
or
adc
add
mov
add
fiadd
and
adc
add
push
add
push
sub
sub
add
add
add
add
or
add
add
add
or
xor
add
add
or
push
add
add
add
add
outs
sbb
add
and
add
sub
add
xor
add
add
add
add
add
add
add
jo
add
sub
add
add
xor
add
add
add
outs
add
or
add
sub
push
and
add
and
and
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
sub
add
add
and
add
and
inc
add
add
idiv
(bad)
inc
sub
add
or
sub
sub
add
jo
add
sub
add
and
jo
add
mov
add
outs
test
or
inc
add
add
idiv
(bad)
inc
adc
outs
add
or
inc
add
add
idiv
(bad)
jmp
add
push
add
retf
add
pop
add
push
and
add
sub
or
add
or
xor
add
sub
add
outs
jo
add
and
dec
add
or
pop
inc
add
add
idiv
(bad)
inc
jae
add
or
add
and
add
sub
add
push
push
or
add
or
sub
add
and
add
shl
add
pop
add
push
and
add
sub
add
lea
add
adc
add
push
add
push
sub
or
add
mov
adc
add
push
add
push
add
adc
add
push
add
push
jle
add
add
adc
add
push
add
push
sub
add
and
add
mov
add
mov
adc
add
push
add
push
or
adc
add
push
add
push
or
mov
add
and
add
mov
adc
add
push
add
push
add
adc
or
or
add
pop
adc
add
fiadd
fiadd
sub
add
add
add
push
add
add
add
add
add
cmps
add
add
add
add
add
add
add
add
add
sbb
add
add
add
pop
adc
add
push
add
push
sub
add
and
adc
add
push
add
push
and
ins
adc
add
push
add
push
and
add
add
or
add
sub
add
and
sub
add
and
add
and
and
add
push
add
push
push
fiadd
or
add
adc
add
add
add
add
lea
add
adc
add
add
add
adc
add
or
add
js
add
sub
add
lea
add
add
add
add
jl
add
sub
add
and
push
add
push
popf
adc
jge
add
and
add
add
push
add
push
adc
cmp
adc
call
add
push
add
push
lea
add
add
pop
adc
and
add
push
and
push
add
push
popf
adc
outs
jge
add
and
imul
sub
add
xor
add
idiv
(bad)
call
sub
add
es
or
cwde
adc
add
push
add
push
call
and
add
push
call
outs
jg
add
adc
and
push
add
push
pop
adc
adc
adc
(bad)
(bad)
call
inc
add
add
idiv
(bad)
inc
sub
xor
add
add
add
add
add
add
add
push
and
add
push
and
add
push
and
add
sub
sbb
add
cmps
add
add
add
adc
add
or
and
and
add
pop
add
push
and
add
cmp
add
and
add
push
and
aas
add
or
inc
adc
sub
add
and
outs
dec
add
push
adc
imul
add
add
xor
add
sub
push
sub
adc
add
or
or
add
push
outs
add
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
fimul
adc
(bad)
push
or
add
outs
add
push
sub
add
add
add
xor
xchg
add
add
add
add
add
mov
add
add
add
and
add
sub
push
xor
add
rol
add
and
add
adc
add
push
jle
add
add
cmp
add
and
add
fbld
add
sub
push
and
add
cmp
add
and
add
jp
add
sub
push
xor
add
add
xor
add
call
add
and
add
mov
add
sub
push
cmp
add
movs
pop
add
sub
add
cmp
add
test
add
sub
add
cmp
add
lods
pop
add
sub
add
cmp
sub
add
xor
add
add
add
add
add
movs
adc
add
push
add
push
sub
push
sbb
add
add
(bad)
(bad)
call
sub
add
and
push
add
push
sub
lods
adc
add
push
add
push
sub
add
xor
add
add
add
and
add
sub
push
and
add
add
jb
add
jo
sahf
add
push
and
inc
add
or
dec
add
or
add
idiv
(bad)
call
sub
add
sub
add
and
add
add
jb
add
jo
add
push
dec
add
add
add
or
add
sub
add
sub
pop
sub
xor
add
add
adc
xchg
add
pop
add
push
and
add
add
jle
add
or
mov
add
sub
add
sub
and
arpl
add
pop
add
push
and
add
add
xor
add
and
add
jle
add
add
jle
add
or
mov
push
add
push
sub
and
add
sub
push
or
xor
add
and
add
pop
jle
add
or
dec
add
or
pop
inc
add
add
idiv
(bad)
call
sub
add
or
add
or
dec
add
or
inc
add
add
idiv
(bad)
jmp
push
add
or
arpl
add
pop
add
push
and
add
add
xor
add
and
add
pop
or
push
pop
jle
add
or
dec
add
or
add
idiv
(bad)
dec
jle
add
or
dec
add
or
sbb
add
add
(bad)
(bad)
dec
or
push
pop
jle
add
or
dec
add
or
jle
add
or
dec
add
or
pop
or
imul
xor
add
push
dec
add
add
add
or
add
sub
add
sub
jle
add
add
jle
add
or
add
push
dec
add
add
add
or
rcl
sub
add
sub
es
add
sbb
push
add
add
adc
add
jle
add
add
jne
add
jecxz
add
sub
push
and
add
and
arpl
add
pop
add
push
and
add
or
add
push
sub
add
or
sub
hlt
add
push
or
outs
aas
add
or
lahf
add
add
add
inc
add
or
add
add
outs
dec
add
push
and
add
cmp
add
and
add
sub
push
sub
or
sub
add
or
imul
add
add
jecxz
add
sub
push
and
adc
add
push
add
push
sub
es
and
add
sub
push
and
add
or
add
sub
and
pop
add
push
push
sub
add
or
add
push
or
sub
add
cmp
(bad)
(bad)
fimul
adc
push
or
add
outs
add
and
add
sub
push
and
add
jle
add
or
or
add
add
add
push
add
add
add
xor
add
add
ret
add
adc
add
or
sub
pop
add
and
add
and
add
sub
push
and
enter
sub
add
xor
sbb
add
(bad)
(bad)
call
sub
add
or
(bad)
add
sub
push
and
add
or
and
add
sub
push
and
add
or
add
and
add
and
aaa
add
add
push
outs
pop
add
or
add
adc
outs
jne
add
and
add
sub
add
cmp
add
add
add
or
add
push
sub
add
or
inc
add
add
idiv
(bad)
inc
and
data16
sub
push
and
add
or
add
or
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
inc
adc
or
add
pop
add
push
outs
pusha
add
or
add
or
cmp
add
and
rcl
add
push
add
push
xor
inc
add
add
idiv
(bad)
call
add
and
add
pop
add
push
and
add
sub
push
and
data16
sub
push
and
and
add
pop
add
push
and
add
sub
add
or
pop
and
adc
add
push
add
push
das
aas
adc
inc
data16
sub
push
outs
pusha
add
or
and
data16
sub
push
and
inc
data16
sub
push
and
add
and
add
and
outs
popa
add
or
(bad)
call
inc
add
add
idiv
(bad)
(bad)
ficom
adc
sub
sbb
add
add
(bad)
(bad)
call
push
outs
add
pop
and
adc
add
push
add
push
aas
push
add
add
and
add
sub
push
and
add
or
add
and
add
and
cli
add
add
pop
outs
pop
add
or
add
adc
add
and
add
sub
add
cmp
add
add
inc
add
add
idiv
(bad)
call
add
add
add
(bad)
(bad)
inc
sub
add
or
inc
add
add
idiv
(bad)
inc
and
data16
sub
push
and
add
and
and
data16
sub
push
and
add
sub
pop
inc
add
add
idiv
(bad)
inc
adc
add
pop
add
push
and
add
and
add
and
add
and
and
data16
sub
push
and
add
and
inc
add
add
idiv
(bad)
inc
and
data16
sub
push
and
and
add
pop
add
push
and
add
and
add
and
outs
popa
add
or
cli
(bad)
(bad)
call
add
(bad)
(bad)
(bad)
ficom
adc
sub
sbb
add
(bad)
(bad)
call
pop
outs
add
fiadd
fiadd
and
pop
add
push
and
add
or
add
push
sub
inc
dec
add
add
add
jle
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
adc
push
add
add
add
and
add
sub
add
add
(bad)
(bad)
call
sub
add
add
and
add
sub
and
adc
add
push
add
push
sub
outs
mov
add
add
add
or
add
sub
add
add
(bad)
(bad)
jmp
in
add
sub
add
sub
and
adc
add
push
add
push
(bad)
fld
add
adc
or
in
adc
add
push
add
push
and
data16
sub
push
and
and
adc
add
push
add
push
outs
pop
add
or
push
adc
add
push
add
push
adc
cmp
add
add
or
pop
outs
mov
add
add
add
or
add
cmp
inc
add
add
idiv
(bad)
inc
and
adc
add
push
add
push
(bad)
fld
add
adc
adc
and
adc
add
push
add
push
and
data16
sub
push
and
and
adc
add
push
outs
pop
add
or
and
add
push
call
adc
mov
or
add
push
add
add
sbb
add
add
(bad)
(bad)
dec
and
add
push
call
sub
add
adc
and
add
push
adc
or
add
or
add
adc
add
push
add
push
pop
and
add
push
arpl
or
or
and
add
push
xor
add
in
data16
sub
push
and
add
and
or
and
add
sub
add
inc
sub
and
adc
add
push
sub
and
add
push
adc
adc
add
push
add
push
pop
and
add
push
inc
adc
sub
or
push
sub
or
push
adc
adc
adc
add
and
idiv
(bad)
call
pop
sub
adc
sub
and
adc
add
push
adc
fnstsw
add
adc
adc
fidiv
jne
add
and
add
push
xor
sbb
add
add
(bad)
(bad)
dec
and
add
sub
add
call
add
or
inc
add
add
idiv
(bad)
call
or
or
das
adc
and
add
push
add
push
pop
adc
adc
adc
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
dec
adc
add
push
sub
or
sbb
pop
add
add
adc
add
or
push
adc
jle
add
add
push
add
sub
push
and
add
adc
jle
add
add
push
add
sub
push
and
add
adc
jle
add
add
push
add
sub
push
and
add
adc
jle
add
add
push
add
sub
push
and
add
adc
or
adc
add
pop
add
push
and
add
sub
push
and
add
or
outs
pop
add
or
add
and
rol
add
adc
outs
pop
add
or
add
or
cmp
js
add
pusha
add
or
jle
add
add
jle
add
add
pusha
add
or
add
or
add
or
add
add
pusha
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
jle
add
add
jle
add
add
pusha
add
or
add
outs
xchg
add
or
add
add
pusha
add
or
inc
add
add
idiv
(bad)
inc
jle
add
add
jle
add
add
pusha
add
or
add
and
add
push
add
push
and
add
sub
add
outs
xor
add
and
add
adc
outs
popa
add
or
(bad)
call
inc
add
add
idiv
(bad)
(bad)
ficom
adc
sub
sbb
add
add
(bad)
(bad)
call
pop
outs
add
fiadd
fiadd
adc
and
add
sub
push
and
add
sub
push
and
add
adc
add
pop
add
or
add
and
iret
add
add
or
add
or
add
adc
add
add
add
add
pusha
add
or
add
sbb
add
add
(bad)
(bad)
call
add
add
pusha
add
or
add
and
add
sub
push
outs
sub
jne
inc
add
add
idiv
(bad)
call
add
add
pusha
add
or
add
outs
jne
add
and
add
sub
add
xor
add
add
pusha
add
or
add
or
pop
adc
add
push
lea
add
add
or
or
pop
adc
add
push
and
add
sub
add
popf
adc
outs
jge
add
and
adc
outs
popa
add
or
(bad)
call
inc
add
add
idiv
(bad)
(bad)
ficom
adc
sub
sbb
add
add
(bad)
(bad)
call
or
add
or
or
stos
add
add
add
(bad)
(bad)
inc
jle
add
add
fs
add
push
(bad)
fld
add
adc
adc
and
add
sub
add
or
ins
adc
add
push
call
add
sub
add
and
pop
add
push
mov
adc
add
push
or
js
add
sub
add
call
add
sub
add
and
pop
add
push
and
and
push
add
push
or
test
add
push
call
add
and
add
fiadd
fiadd
push
sub
add
add
add
add
xchg
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
rol
add
out
add
add
add
add
add
add
add
add
add
add
add
add
or
sub
add
add
add
and
pop
add
push
and
add
or
add
add
mov
add
push
sub
sbb
add
jp
add
mov
adc
out
add
sub
push
and
add
or
add
jae
add
or
add
dec
add
or
sbb
add
add
(bad)
(bad)
call
sub
add
add
mov
add
and
or
outs
mov
add
and
or
outs
sbb
add
and
add
fiadd
and
push
add
push
push
sub
add
or
add
push
sub
add
adc
add
add
add
push
add
inc
add
add
xor
add
add
adc
add
jo
jle
add
add
outs
dec
add
push
and
add
cmp
add
and
add
sub
push
and
add
and
mov
add
sbb
add
add
idiv
(bad)
call
sub
add
es
outs
sbb
add
and
cmp
inc
add
add
idiv
(bad)
call
add
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
call
add
add
pop
add
push
and
add
and
add
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
jmp
sub
sbb
add
sub
push
and
and
pop
add
push
and
and
adc
add
pop
add
push
and
and
add
and
add
jle
add
add
outs
dec
add
push
jle
add
add
cmp
add
and
add
sub
or
cmp
add
sbb
add
add
(bad)
(bad)
inc
outs
sbb
add
and
add
and
mov
add
sub
push
and
add
or
and
add
push
cs
sbb
add
add
(bad)
(bad)
inc
and
push
add
push
outs
mov
add
and
add
sub
add
pop
or
add
sub
add
xor
push
or
or
xor
add
or
push
adc
mov
pop
add
push
and
xor
add
and
add
fiadd
push
sub
inc
sbb
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
or
add
dec
add
or
pop
adc
pushf
adc
add
push
adc
add
add
add
mov
add
sbb
add
add
(bad)
(bad)
call
sub
add
or
add
or
add
or
pop
inc
add
add
idiv
(bad)
dec
outs
push
add
or
into
add
push
or
add
pop
add
push
and
add
or
add
or
and
add
and
inc
add
add
idiv
(bad)
dec
outs
mov
add
and
outs
lea
add
and
or
outs
push
add
or
add
adc
add
push
add
push
pop
adc
mov
push
(bad)
(bad)
call
inc
add
add
idiv
(bad)
inc
sub
xor
add
add
adc
add
or
add
dec
add
or
add
movs
adc
add
push
adc
add
add
add
mov
add
pop
inc
add
add
idiv
(bad)
call
sub
add
or
add
or
sub
add
and
inc
add
add
idiv
(bad)
dec
outs
push
add
or
iret
add
push
and
imul
add
and
add
or
add
or
and
add
and
inc
add
add
idiv
(bad)
inc
or
add
or
inc
add
add
idiv
(bad)
inc
or
outs
push
add
or
add
adc
add
push
add
push
pop
adc
mov
dec
(bad)
(bad)
call
inc
add
add
idiv
(bad)
inc
sub
add
adc
add
mov
add
leave
add
adc
push
add
or
and
add
push
adc
push
or
add
or
sub
sbb
add
add
idiv
(bad)
call
sub
add
es
outs
mov
add
and
adc
add
push
outs
mov
add
and
outs
push
add
or
add
or
sub
add
mov
add
sub
add
pop
adc
add
mov
mov
add
idiv
(bad)
call
add
add
adc
xor
add
add
adc
sbb
add
pop
add
push
add
xor
add
and
pop
add
or
outs
pop
add
or
outs
pop
add
or
lods
add
add
pop
outs
pop
add
or
add
or
add
push
add
push
(bad)
fld
add
adc
adc
and
add
push
jle
add
or
adc
add
push
jle
add
or
or
ins
popa
add
sub
push
adc
pop
add
or
add
and
add
add
add
idiv
(bad)
call
sub
add
adc
les
add
push
call
pop
add
push
and
enter
sub
add
call
adc
fisubr
adc
outs
popa
add
or
inc
(bad)
(bad)
(bad)
ficom
adc
sub
pop
inc
add
add
idiv
(bad)
call
pop
outs
add
jle
add
or
adc
sub
add
add
add
xor
shl
push
add
add
sbb
add
jmp
add
adc
sbb
add
pop
add
push
add
xor
add
or
jae
add
or
pop
outs
pop
add
or
pop
add
or
jnp
add
adc
outs
pop
add
or
add
or
add
push
add
push
(bad)
fld
add
adc
adc
and
adc
add
push
jle
add
or
or
xchg
add
pop
add
push
and
pop
add
or
add
adc
sbb
add
(bad)
(bad)
call
sub
add
adc
aam
add
sub
add
call
outs
popa
add
or
(bad)
call
idiv
(bad)
(bad)
ficom
adc
sub
sbb
add
add
idiv
(bad)
call
pop
outs
add
jle
add
or
adc
sub
add
add
add
add
xor
call
add
xor
add
add
retf
add
adc
fcom
add
push
or
ja
add
sub
push
and
add
or
add
add
dec
add
or
add
add
push
add
push
adc
sub
add
or
pop
inc
add
add
idiv
(bad)
call
sub
add
or
add
or
add
or
inc
add
add
idiv
(bad)
jmp
scas
push
add
pop
add
push
add
cmp
add
and
add
or
add
or
loopne
add
sub
add
or
push
and
adc
add
push
pop
adc
adc
adc
sbb
add
add
(bad)
(bad)
inc
sub
add
add
(bad)
(bad)
jmp
jmp
pop
add
push
and
add
or
add
fisubr
or
add
pop
add
push
and
add
or
add
and
adc
add
push
adc
add
sub
add
add
add
add
and
ret
out
sub
add
add
xor
add
add
adc
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
push
sub
adc
add
push
sub
add
or
push
add
add
or
add
add
or
add
or
sub
or
adc
inc
add
add
idiv
(bad)
inc
outs
cmps
add
or
lock
add
push
or
loopne
add
sub
push
and
sub
sub
adc
add
push
or
add
add
add
add
aaa
add
sub
add
sbb
or
iret
add
add
add
adc
sub
add
or
and
add
sub
push
and
add
and
adc
add
push
sub
add
add
pop
add
push
and
add
or
add
and
add
sub
push
and
add
or
mov
add
add
cld
adc
add
push
sub
add
push
and
ins
add
sub
push
and
add
add
xor
add
and
add
adc
(bad)
adc
adc
(bad)
adc
adc
or
xchg
add
or
add
add
adc
adc
or
xchg
add
or
add
add
add
or
add
add
sub
add
cmp
pop
add
push
and
cmp
add
sub
push
add
sub
add
adc
or
push
add
add
add
idiv
(bad)
call
sub
add
es
add
add
add
add
and
add
add
add
add
add
sub
add
adc
adc
adc
sub
add
push
and
outs
add
sub
push
sub
push
add
add
xor
add
and
add
and
push
add
sub
add
adc
ficom
pop
and
imul
sub
push
and
pop
sub
mov
add
fiadd
fisub
add
pop
add
push
and
add
and
add
sub
add
or
add
fsub
or
add
sub
add
sub
or
add
add
add
add
and
add
pop
add
add
add
add
add
add
add
add
and
add
js
add
pushf
add
add
add
add
xor
aad
add
int
add
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
push
sub
push
add
sub
add
sub
popa
ins
add
sub
push
add
cmp
add
and
add
add
adc
add
sub
add
sub
add
push
and
ins
add
sub
push
push
mov
add
sub
add
or
mov
add
adc
(bad)
adc
adc
(bad)
adc
adc
or
xchg
add
or
add
add
adc
adc
or
xchg
add
or
add
add
add
add
or
add
add
and
add
sub
push
jle
add
or
add
or
add
adc
cmp
pop
add
push
and
cmp
add
and
add
and
push
add
sub
add
adc
or
push
add
sbb
inc
add
add
idiv
(bad)
(bad)
jle
add
add
add
add
and
adc
adc
adc
and
add
sub
add
adc
adc
adc
sub
add
push
and
outs
add
sub
push
and
add
mov
add
sub
add
or
add
and
push
add
sub
add
adc
ficom
pop
and
add
sub
push
and
sub
or
add
fiadd
fisub
add
pop
add
push
and
add
and
add
sub
add
or
add
fsub
and
add
sub
add
sub
or
add
add
add
add
add
aaa
add
add
add
add
add
inc
add
add
add
add
add
add
add
mov
add
add
add
add
xor
sbb
add
into
add
adc
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
push
and
add
adc
(bad)
adc
adc
sub
add
add
pop
add
push
and
add
or
mov
add
and
add
sub
push
and
add
or
add
add
sub
add
sub
add
sub
add
push
or
ret
add
pop
add
push
and
add
add
xor
add
and
add
adc
(bad)
adc
adc
(bad)
adc
adc
or
xchg
add
or
add
add
adc
adc
or
xchg
add
or
add
add
add
or
add
add
sub
add
cmp
pop
add
push
and
cmp
add
and
add
and
add
sub
add
adc
or
push
add
add
add
idiv
(bad)
(bad)
jle
add
add
add
add
and
add
add
add
xor
add
sub
add
adc
adc
adc
sub
add
push
adc
adc
sub
pop
inc
add
add
idiv
(bad)
dec
add
pop
sbb
add
add
(bad)
(bad)
call
add
add
add
xor
add
sub
add
sub
add
push
adc
jnp
add
add
or
or
add
and
outs
add
sub
push
adc
mov
add
add
xor
add
and
add
adc
jae
add
or
or
push
fisub
adc
and
imul
sub
push
and
or
xchg
add
or
add
fiadd
fisub
add
pop
add
push
and
add
and
add
sub
add
or
add
fcom
or
adc
adc
adc
sub
add
add
add
cmp
add
mov
add
mov
add
inc
add
add
add
add
add
add
add
add
add
add
xor
add
add
iret
add
adc
add
or
push
outs
xchg
add
or
add
sub
add
outs
mov
outs
xchg
add
or
add
sub
add
outs
xchg
add
or
outs
xchg
add
or
add
sub
add
outs
xchg
add
or
outs
xchg
add
or
add
sub
add
outs
mov
outs
xchg
add
or
add
or
outs
xchg
add
or
add
or
outs
cmps
add
or
jae
add
or
cmp
outs
xchg
add
or
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
outs
xchg
add
or
add
and
and
add
and
inc
add
add
idiv
(bad)
inc
or
add
or
call
cwde
add
or
inc
add
add
idiv
(bad)
inc
outs
call
cmp
add
or
add
and
or
add
or
push
outs
dec
add
or
(bad)
call
inc
add
add
idiv
(bad)
inc
outs
xchg
add
or
add
and
(bad)
inc
outs
call
cwde
add
or
(bad)
inc
outs
sbb
add
and
add
xor
add
add
add
add
sub
and
add
sub
add
inc
sub
xor
jnp
add
add
adc
(bad)
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
push
add
push
sub
aam
add
sub
push
and
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
jmp
mov
adc
sub
es
sbb
add
add
(bad)
(bad)
inc
sub
push
push
add
sub
add
sub
adc
add
dec
add
add
add
adc
sub
or
jle
add
or
std
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
add
rol
push
and
add
sub
add
or
and
add
push
add
push
sub
add
xor
add
add
add
add
and
add
sub
add
sub
es
sbb
add
(bad)
(bad)
call
sub
add
and
jno
add
pop
add
push
sub
add
or
add
and
inc
add
add
idiv
(bad)
jmp
aaa
jno
add
pop
add
push
and
add
sub
pop
jno
add
pop
add
push
and
add
sub
add
xor
add
add
add
add
sub
add
push
and
add
dec
add
or
or
adc
add
add
add
sub
add
push
jle
add
add
dec
add
or
add
or
adc
add
add
add
sub
add
push
and
add
dec
add
or
add
adc
add
add
add
jle
add
add
je
add
icebp
xor
add
push
and
add
and
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
push
and
add
cmp
add
and
add
and
add
push
add
push
sub
movs
jno
add
pop
add
push
and
add
cmp
add
sub
push
add
sub
add
sub
add
adc
add
add
add
jle
add
add
jne
add
leave
jno
add
pop
add
push
and
add
and
and
add
and
fs
add
sub
add
sub
and
jno
add
pop
add
push
and
add
sub
add
xor
add
add
add
adc
fnsave
add
pop
add
push
sub
add
push
and
add
and
jb
add
pop
add
push
and
add
sub
add
push
and
sbb
add
push
and
add
and
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
sub
add
sub
add
or
add
dec
add
or
add
sub
push
sub
add
or
jb
add
pop
add
push
and
add
or
mov
add
jle
add
add
je
add
icebp
xor
add
push
and
add
sub
jle
add
add
je
add
jle
add
sub
push
and
add
add
popf
jb
add
pop
add
push
and
add
and
add
push
and
add
add
je
add
mov
pop
add
push
and
add
add
loope
add
sub
push
and
add
and
add
push
and
add
add
je
add
add
add
pop
add
push
and
xchg
add
push
and
add
add
je
add
and
add
pop
add
push
and
add
or
add
xor
add
and
add
and
add
push
es
add
add
je
add
cmp
add
pop
add
push
and
add
add
dec
jae
add
pop
add
push
and
add
push
sub
jle
add
add
je
add
pop
jae
add
pop
add
push
and
add
sub
jle
add
add
je
add
imul
sub
push
and
add
sub
push
and
add
ins
push
add
sub
add
outs
imul
and
pop
add
push
and
add
and
add
push
and
add
add
je
add
mov
pop
add
push
and
add
sub
push
and
add
jo
add
sub
add
outs
imul
add
or
sub
es
add
add
je
add
mov
pop
add
push
and
add
sub
push
and
add
je
add
sub
add
outs
imul
jae
add
pop
add
push
and
add
and
add
push
and
add
add
je
add
(bad)
jae
add
pop
add
push
and
add
sub
add
push
sub
es
add
add
je
add
out
add
sub
push
and
add
push
add
push
push
sub
es
add
add
jne
add
leave
jno
add
pop
add
push
and
add
sub
push
and
add
sub
add
sub
sub
clc
jae
add
pop
add
push
and
add
sub
xor
add
add
adc
loope
add
or
sub
add
or
add
add
(bad)
(bad)
call
sub
add
and
add
sub
push
push
sub
add
or
mov
add
push
sub
add
and
push
sbb
add
add
idiv
(bad)
jmp
mov
add
sub
push
sub
repz
add
pop
add
push
and
add
or
add
pop
or
or
outs
sbb
add
sub
and
add
push
sub
sub
add
adc
add
add
add
add
inc
add
add
xor
add
add
adc
and
add
sub
push
and
add
cmp
add
and
add
jle
add
add
je
add
jle
add
sub
push
and
add
and
jne
add
pop
add
push
and
add
or
add
push
sub
add
or
xor
push
and
add
push
and
add
sub
add
outs
jbe
add
and
mov
add
sub
add
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
and
push
add
push
pop
and
add
push
pop
outs
xor
add
and
cwde
push
add
sub
add
lea
add
add
and
add
push
and
push
add
push
popf
or
movs
push
add
sub
add
and
push
add
push
popf
or
lods
push
add
sub
add
and
push
add
push
popf
or
add
or
jne
add
pop
add
push
push
sub
add
or
add
push
sub
adc
pop
add
add
aam
add
and
pop
add
push
add
xor
add
and
add
add
sahf
add
or
add
or
sbb
add
add
idiv
(bad)
call
sub
add
and
add
push
sub
and
push
add
push
adc
sub
add
and
jbe
add
pop
add
push
adc
sub
mov
add
sub
add
or
mov
add
and
pop
add
push
and
add
and
add
sub
add
or
add
add
fwait
add
add
inc
add
add
idiv
(bad)
call
add
adc
adc
or
xchg
add
or
add
and
add
push
adc
and
push
add
sub
add
and
push
add
sub
add
adc
sub
es
pop
add
push
adc
sub
mov
add
sub
add
or
add
and
pop
add
push
and
add
and
add
sub
add
or
add
pop
sub
sub
xor
jge
add
aad
add
jle
add
or
adc
add
enter
sub
add
sub
add
push
and
aaa
sbb
add
add
(bad)
(bad)
call
sub
add
and
add
sub
push
sub
push
add
add
xor
add
sub
add
or
and
pop
add
push
and
lahf
add
or
add
sub
add
or
add
push
sub
add
adc
add
dec
add
add
add
sub
add
push
or
sub
add
add
(bad)
(bad)
call
sub
add
es
add
push
and
adc
add
(bad)
(bad)
jmp
out
add
push
or
sub
add
add
(bad)
(bad)
jmp
hlt
add
push
or
sub
xor
add
add
add
adc
out
add
or
sub
add
add
(bad)
(bad)
call
sub
add
es
add
push
and
adc
inc
add
add
idiv
(bad)
jmp
jmp
or
sub
add
add
(bad)
(bad)
jmp
jmp
push
sub
xor
call
add
adc
in
add
sub
push
and
push
add
sub
add
lea
push
add
or
pop
add
or
outs
pop
add
or
pop
add
or
push
cmp
add
adc
outs
pop
add
or
add
or
inc
add
add
idiv
(bad)
call
sub
add
or
daa
js
add
pop
add
push
and
add
jne
add
add
add
add
and
add
and
add
inc
add
or
add
add
outs
sub
es
pop
inc
add
add
idiv
(bad)
jmp
rcl
add
sub
add
adc
outs
popa
add
or
(bad)
call
inc
add
add
idiv
(bad)
(bad)
fimul
push
sub
adc
outs
add
and
push
add
sub
add
sub
add
add
add
add
add
add
xor
add
add
add
add
and
js
add
pop
add
push
and
add
and
or
inc
add
add
add
add
cmp
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
pop
add
push
and
add
and
push
add
sub
add
sub
add
or
adc
add
add
add
and
add
sub
push
sub
add
push
sub
xor
add
add
add
add
add
jp
add
sub
push
sub
add
push
and
adc
add
cmp
add
add
adc
in
add
push
and
sbb
inc
add
add
idiv
(bad)
call
sub
add
es
add
push
and
adc
inc
add
add
idiv
(bad)
jmp
out
add
push
or
sub
adc
add
jl
add
xlat
add
adc
mov
mov
es
fcom
add
sub
add
or
call
or
add
sub
add
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
push
add
sub
add
or
sub
and
push
add
sub
add
pop
or
xor
add
idiv
(bad)
jmp
in
push
add
sub
add
sub
sub
xor
dec
add
add
add
and
add
sub
push
and
add
sub
push
and
add
sub
add
and
add
and
add
sub
add
inc
or
push
es
push
add
sub
add
or
add
sub
add
adc
add
add
add
cmp
push
inc
add
add
xor
add
add
adc
mov
outs
mov
es
clc
push
add
sub
add
or
call
or
add
or
add
sub
add
xor
sbb
add
add
(bad)
(bad)
call
sub
add
and
pop
add
sub
add
or
sub
and
add
sub
add
pop
or
xor
add
idiv
(bad)
jmp
or
add
sub
add
sub
sub
adc
add
cmp
add
add
adc
lock
push
and
sbb
inc
add
add
idiv
(bad)
call
sub
add
es
add
push
and
adc
inc
add
add
idiv
(bad)
jmp
repnz
push
or
sub
add
add
pop
add
add
add
jle
add
add
pop
jns
add
pop
add
push
and
add
and
imul
jns
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
or
add
pop
add
push
and
add
and
inc
add
add
idiv
(bad)
(bad)
jle
add
add
cmp
add
and
add
and
pop
add
sub
add
sub
add
or
pop
add
add
add
add
add
add
mov
pop
add
push
sub
sub
add
or
imul
add
jle
add
add
cmp
sub
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
aad
add
sub
push
and
add
sub
add
sub
sub
push
and
add
and
pop
add
sub
add
sub
add
sbb
add
dec
add
add
add
and
add
sub
push
and
add
sub
push
jae
add
or
pop
add
or
add
and
add
sub
add
inc
or
push
and
pop
add
sub
add
or
add
sub
adc
add
add
add
cmp
push
inc
add
add
xor
add
add
add
add
sub
add
push
or
sub
add
add
(bad)
(bad)
call
sub
add
es
add
push
and
add
add
or
sbb
add
add
add
jle
add
add
loop
add
sub
push
and
add
and
add
xor
stos
add
add
add
adc
hlt
add
push
or
sbb
add
pop
add
push
and
add
or
add
sub
add
or
add
push
outs
aas
add
or
adc
sub
add
or
add
add
outs
dec
add
push
and
add
sub
push
sub
add
or
add
and
sbb
add
sub
add
or
aaa
adc
sub
add
sub
add
add
(bad)
(bad)
call
sub
add
fimul
adc
(bad)
push
or
add
outs
add
and
pop
add
sub
add
sub
sub
add
add
add
xor
pop
nop
add
add
add
add
or
pop
add
add
add
add
add
add
xchg
add
pop
add
push
and
add
sub
add
or
dec
add
add
add
add
add
add
(bad)
jge
add
pop
add
push
and
add
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
cmc
jge
add
pop
add
push
sub
sub
and
add
sub
add
sub
add
adc
add
push
add
add
add
jle
add
add
xchg
add
pop
add
push
and
add
sub
push
sub
or
sub
add
or
imul
jle
add
pop
add
push
and
add
sub
push
sub
or
sub
add
xor
add
add
add
add
adc
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
pop
add
sub
add
sub
mov
add
pop
add
push
add
cmp
add
sub
cmps
add
or
add
sub
add
sub
add
adc
adc
dec
add
or
add
fiadd
adc
add
push
add
push
pop
adc
mov
fcomp
inc
add
add
idiv
(bad)
inc
sub
adc
and
add
sub
add
adc
sub
adc
adc
call
push
and
and
pop
add
sub
add
pop
adc
adc
adc
mov
ficomp
inc
add
add
idiv
(bad)
jmp
cmp
add
sub
add
sub
adc
add
add
or
add
add
or
add
xor
add
add
add
add
dec
add
or
add
sub
add
sub
sub
add
push
and
cmps
add
or
add
fiadd
and
add
push
add
push
sub
add
adc
add
add
or
add
add
sbb
add
jno
add
fild
add
and
add
sub
add
sub
add
or
add
sub
push
and
add
and
test
add
and
mov
add
and
add
or
add
and
or
jmp
add
and
add
or
add
fiadd
and
add
push
add
push
sub
sub
add
add
add
add
add
dec
dec
add
add
add
xor
fild
add
fadd
add
and
add
sub
add
sub
add
or
(bad)
jle
add
pop
add
push
and
add
and
test
add
and
add
or
adc
add
push
add
push
adc
sub
add
or
add
or
add
or
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
jg
add
pop
add
push
and
add
or
add
sub
or
outs
pop
add
or
push
and
add
sub
add
pop
adc
adc
adc
push
or
add
or
add
ficomp
add
xor
add
sub
push
and
xor
add
sub
sub
add
add
add
add
mov
add
add
xor
add
add
add
add
adc
jae
add
or
push
rcl
add
add
inc
add
or
add
or
add
or
outs
sbb
add
and
add
bound
add
fiadd
add
sub
or
outs
mov
add
and
add
sub
add
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
outs
pop
add
and
add
and
add
sub
add
inc
fs
add
sub
add
inc
sub
push
push
add
push
sub
add
xor
add
add
adc
lea
add
and
mov
add
and
add
sub
add
xor
add
add
idiv
(bad)
call
sub
add
es
outs
pop
add
and
add
and
add
sub
add
xor
sbb
add
add
idiv
(bad)
inc
outs
pop
add
outs
xchg
add
or
je
add
sub
add
inc
js
add
sub
add
inc
sub
jl
add
sub
add
sub
sbb
add
fiadd
add
fild
add
and
add
sub
push
and
add
sub
add
lea
push
add
or
pop
add
or
outs
pop
add
or
pop
add
or
adc
outs
pop
add
or
add
or
inc
add
add
idiv
(bad)
call
sub
add
or
les
add
pop
add
push
outs
pusha
add
or
add
adc
add
lods
add
or
test
add
sub
add
adc
sub
adc
outs
popa
add
or
inc
add
add
idiv
(bad)
(bad)
ficom
adc
sub
sbb
add
add
(bad)
(bad)
call
push
outs
add
and
push
add
push
sub
add
adc
add
add
push
add
add
sbb
add
cmc
add
add
add
adc
add
push
adc
rol
add
fnstsw
add
pop
add
push
and
add
and
add
sub
push
and
rol
add
cmp
add
and
add
and
add
push
or
add
add
dec
add
or
xor
pop
add
push
sub
pop
add
sub
add
sub
xchg
add
push
sub
add
push
and
add
sub
push
and
add
or
add
sub
add
or
add
pop
outs
scas
add
or
add
sub
add
ds
add
add
outs
scas
add
or
add
and
iret
add
add
push
sub
es
pusha
add
push
adc
add
add
add
add
or
add
or
add
repnz
sub
push
and
rol
add
push
add
add
xor
add
sub
add
add
and
rol
add
cmp
add
sub
inc
popa
add
push
jae
add
or
add
or
add
and
pop
add
push
adc
add
cmp
add
and
add
or
cwde
pop
add
sub
add
outs
mov
add
and
add
add
and
rol
add
cmp
add
sub
sub
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
sub
add
ficomp
adc
(bad)
push
inc
add
sbb
add
or
and
add
push
or
push
and
push
add
push
or
add
sub
add
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
push
add
add
add
add
or
das
add
add
add
add
sub
add
add
add
jb
add
jo
cmps
add
add
jae
add
or
add
add
jae
add
or
add
add
add
xor
jno
add
add
add
and
test
add
pop
add
push
and
add
add
add
push
and
add
cmp
add
and
add
fbld
add
sub
push
jle
add
add
cmp
add
and
add
mov
test
add
sub
push
and
add
and
add
pop
add
jo
movs
add
add
add
add
xor
add
add
add
add
add
jne
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
adc
add
jle
add
add
add
add
xor
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
mov
add
outs
xchg
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
mov
adc
add
sub
push
and
add
and
jae
add
or
add
add
add
fiadd
add
add
add
add
add
adc
add
add
push
push
add
inc
add
add
xor
add
add
add
add
add
add
add
mov
add
outs
xchg
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
adc
add
add
add
add
add
or
bound
add
add
add
add
lsl
push
add
adc
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
sub
push
and
add
and
push
add
push
sub
inc
add
push
and
add
and
add
push
sub
add
xor
add
add
adc
add
add
mov
push
add
push
sub
or
inc
test
add
pop
add
push
push
sub
add
or
add
push
sub
add
or
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
or
and
das
add
sub
push
and
add
and
add
jg
add
sub
push
and
add
cmp
add
and
add
add
and
add
sub
push
and
add
and
add
into
test
add
pop
add
push
and
add
add
cmp
add
and
add
add
add
add
aad
add
sub
push
and
add
and
mov
push
add
push
xor
jnp
add
add
and
pop
add
sub
add
pop
outs
imul
or
add
and
inc
add
add
idiv
(bad)
inc
or
add
or
add
add
and
add
and
add
push
and
sbb
add
sub
add
or
add
fiadd
add
jnp
add
add
enter
sub
push
jle
add
add
add
or
add
add
add
add
add
in
add
add
inc
add
add
xor
add
add
add
add
add
jnp
add
add
jne
add
sub
push
sub
or
add
push
and
add
sub
push
sub
add
or
add
and
add
or
xor
add
add
jnp
add
add
jne
add
sub
push
sub
or
add
and
add
sub
push
and
add
and
add
sub
add
add
or
or
add
add
add
add
adc
add
sub
add
sub
xor
add
add
add
add
add
sub
add
and
add
and
add
and
add
pusha
add
adc
sub
add
push
and
add
ficom
or
outs
sbb
add
and
add
fiadd
sub
adc
add
add
add
lldt
inc
add
add
xor
int3
add
add
add
adc
les
add
sub
add
or
pop
test
add
pop
add
push
and
add
jae
add
push
or
add
adc
add
and
add
add
add
add
and
add
and
sub
add
push
pop
add
add
add
enter
sub
add
outs
popf
add
push
pop
outs
sahf
add
push
and
test
add
pop
add
push
and
add
push
and
add
sub
mov
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
sbb
add
add
(bad)
(bad)
inc
add
add
add
movs
add
add
int3
pop
add
sub
add
sub
rcl
add
sub
add
sub
xor
add
add
add
add
jle
add
add
mov
adc
add
sub
push
add
lsl
push
outs
sbb
add
and
add
sub
add
sub
es
sbb
add
add
(bad)
(bad)
call
sub
add
and
pop
add
push
and
add
sub
add
adc
add
ins
add
add
add
and
add
sub
push
and
add
adc
add
and
add
outs
add
or
add
sub
push
outs
push
add
or
test
add
mov
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
push
add
push
sub
add
add
or
sub
add
add
jae
add
or
add
add
and
add
push
jge
add
add
jae
add
or
add
add
sub
add
add
xor
add
add
adc
adc
add
push
and
add
and
xchg
add
pop
add
push
and
add
or
add
add
sub
inc
add
add
idiv
(bad)
call
sub
add
and
add
pop
add
push
or
pop
outs
sbb
add
pop
sub
add
add
sbb
scas
xchg
add
pop
add
push
and
outs
sbb
add
pop
sub
add
push
adc
and
add
sub
add
push
sub
add
push
sub
add
push
sub
add
push
and
inc
add
add
idiv
(bad)
inc
and
xchg
add
pop
add
push
and
add
jle
add
add
aas
xchg
add
pop
add
push
jle
add
add
cmp
add
and
add
sub
push
and
add
sub
add
add
(bad)
(bad)
inc
sub
add
push
jle
add
add
aas
xchg
add
pop
add
push
jle
add
add
cmp
add
and
add
sub
push
and
add
sub
push
and
pop
add
sub
add
sub
sub
add
and
inc
add
add
idiv
(bad)
jmp
dec
add
push
and
pop
xchg
add
pop
add
push
sub
add
push
sub
add
sub
push
and
sub
add
push
add
inc
and
add
jae
add
or
test
add
test
add
mov
add
jge
add
add
lea
add
push
and
add
push
add
add
xor
add
and
add
push
sub
es
jnp
add
add
mov
es
add
add
(bad)
(bad)
jmp
pop
mov
add
pop
add
push
or
pop
outs
sbb
add
pop
sub
add
push
and
add
add
jnp
add
add
inc
add
push
and
mov
add
pop
add
push
and
add
and
pop
add
sub
add
and
pop
add
sub
add
and
pop
add
sub
add
jae
add
or
pop
add
or
jnp
add
add
adc
add
idiv
(bad)
inc
jnp
add
add
pop
(bad)
(bad)
jmp
lahf
mov
add
pop
add
push
sub
or
ror
add
and
add
or
mov
add
fiadd
and
mov
add
pop
add
push
and
add
sub
add
jl
add
jl
add
sbb
add
inc
add
add
xor
add
add
and
mov
add
pop
add
push
sub
add
add
aas
xchg
add
pop
add
push
and
add
cmp
add
and
add
sub
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
pop
add
push
jle
add
add
aas
xchg
add
pop
add
push
and
add
cmp
add
and
add
sub
push
and
add
sub
add
sub
es
add
and
inc
add
add
idiv
(bad)
jmp
dec
add
push
and
sub
add
push
sub
add
and
add
push
and
mov
add
pop
add
push
and
add
fisubr
and
pop
add
sub
add
and
add
pop
add
push
and
add
or
add
push
sub
es
and
pop
add
push
and
add
sub
add
add
add
add
add
xlat
xlat
add
add
add
xor
scas
add
add
add
add
ret
add
pop
add
push
sub
lock
add
sub
add
jge
add
add
jnp
add
add
inc
sbb
add
add
(bad)
(bad)
call
sub
add
es
mov
add
pop
add
push
and
add
add
add
add
hlt
pop
add
sub
add
and
pop
add
sub
add
outs
mov
es
add
and
inc
add
add
idiv
(bad)
jmp
cld
pop
add
sub
add
and
mov
add
pop
add
push
and
add
sub
push
jae
add
push
sub
es
add
xor
add
add
add
add
add
mov
pop
add
push
and
add
sub
add
sub
add
push
sub
add
sbb
add
add
add
adc
leave
mov
add
pop
add
push
and
add
add
add
add
add
sub
push
and
add
add
sub
add
push
and
add
jnp
add
add
inc
sbb
add
add
(bad)
(bad)
call
sub
add
and
mov
add
pop
add
push
sub
mov
add
pop
add
push
and
add
add
push
add
add
xor
add
and
add
add
and
add
and
add
add
sub
add
lea
add
add
sbb
sbb
add
add
sub
add
and
sbb
add
push
add
push
popf
adc
outs
jge
add
and
mov
add
pop
add
push
push
sub
or
add
sub
add
or
test
add
or
adc
add
sub
add
adc
cmp
add
adc
adc
call
add
or
add
sbb
adc
add
(bad)
adc
add
add
fadd
add
sbb
add
add
(bad)
(bad)
jmp
adc
add
sub
add
jae
add
or
add
pop
add
push
and
add
sub
add
sub
and
pop
add
push
and
add
sub
add
sub
and
adc
add
pop
add
push
and
add
sub
add
sub
and
add
sub
push
and
add
sub
add
sub
and
add
pop
add
push
and
sbb
add
push
add
push
sub
and
pop
add
push
and
add
sub
add
sub
and
adc
add
pop
add
push
and
add
sub
add
sub
and
adc
add
pop
add
push
and
add
sub
add
sub
and
add
sub
push
and
add
sub
add
sub
and
add
push
and
add
sub
add
sub
and
pop
add
push
and
add
sub
add
sub
and
adc
add
pop
add
push
and
add
sub
add
sub
and
adc
add
pop
add
push
and
add
sub
add
sub
and
add
sub
push
and
add
sub
add
sub
and
pop
add
push
and
add
sub
add
sub
and
add
sub
push
and
add
sub
add
sub
adc
(bad)
adc
add
add
sbb
sbb
mov
cmp
or
add
add
(bad)
(bad)
call
sbb
adc
add
add
add
add
add
fwait
add
add
add
xchg
add
clc
add
add
add
hlt
add
add
add
out
add
pop
add
add
addr16
add
fadd
add
push
pop
add
cmp
pop
add
jle
add
add
inc
add
or
dec
add
or
add
sbb
add
add
idiv
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
mov
pop
add
push
and
push
sub
or
mov
add
add
add
add
add
or
inc
add
add
idiv
(bad)
jmp
pop
sbb
add
push
add
push
or
adc
add
or
aas
pop
add
sub
add
push
sub
and
mov
add
pop
add
push
sub
pop
add
jle
add
add
inc
add
or
dec
add
or
add
sbb
add
(bad)
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
push
mov
add
pop
add
push
and
cmp
add
sub
scas
add
add
add
or
inc
add
add
idiv
(bad)
jmp
pop
sbb
add
push
add
push
or
adc
add
or
mov
sbb
add
inc
add
or
dec
add
or
add
sbb
add
add
idiv
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
mov
add
and
cmp
add
and
add
add
add
add
add
or
add
sub
add
or
adc
add
or
sub
add
jle
add
add
inc
add
or
dec
add
or
add
sbb
add
add
(bad)
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
retf
mov
add
pop
add
push
adc
add
or
add
add
add
add
add
or
sbb
add
push
add
push
or
adc
add
or
mov
add
jle
add
add
inc
add
or
dec
add
or
lahf
add
add
add
idiv
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
or
and
add
sub
push
adc
add
or
mov
add
add
add
add
add
or
push
push
add
push
or
adc
add
or
inc
add
add
add
inc
add
or
dec
add
or
add
jg
add
add
push
dec
add
add
add
or
jge
add
sub
push
and
or
pop
add
or
add
add
add
add
add
or
ins
sbb
add
push
add
push
or
adc
add
or
iret
add
add
add
add
inc
add
or
dec
add
or
add
jg
add
add
push
dec
add
add
add
or
fmul
add
push
and
or
pop
add
or
mov
add
add
add
add
add
or
inc
add
add
idiv
(bad)
jmp
jo
add
sub
add
or
adc
add
or
push
add
add
add
add
inc
add
or
dec
add
or
inc
add
add
inc
add
add
idiv
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
xor
add
push
and
or
or
add
add
add
add
add
or
inc
add
add
idiv
(bad)
jmp
je
add
sub
add
or
adc
add
or
rol
add
jle
add
add
inc
add
or
dec
add
or
add
sbb
add
add
(bad)
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
mov
add
push
and
push
sub
or
add
add
add
add
add
or
js
add
sub
add
or
adc
add
or
pop
add
add
add
add
inc
add
or
dec
add
or
add
sbb
add
add
(bad)
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
mov
mov
add
pop
add
push
and
movaps
or
add
add
add
add
add
or
add
sub
add
or
adc
add
or
loope
add
jle
add
add
inc
add
or
dec
add
or
add
sbb
add
add
(bad)
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
adc
inc
pop
add
pop
add
push
and
adc
pop
add
or
add
add
add
add
add
or
add
sub
add
or
adc
add
or
push
add
jle
add
add
inc
add
or
dec
add
or
add
sbb
add
(bad)
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
lahf
pop
add
pop
add
push
and
adc
pop
add
or
add
add
add
add
add
or
inc
add
add
idiv
(bad)
jmp
test
add
sub
add
or
adc
add
or
in
add
jle
add
add
inc
add
or
dec
add
or
add
pop
inc
add
add
idiv
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
cld
pop
add
pop
add
push
and
adc
pop
add
or
add
add
add
add
add
or
inc
add
add
idiv
(bad)
jmp
mov
add
sub
add
or
adc
add
or
pusha
add
add
add
add
inc
add
or
dec
add
or
add
jg
add
add
push
dec
add
add
add
or
gs
add
sub
push
adc
add
or
mov
add
add
add
add
add
or
add
add
(bad)
(bad)
jmp
mov
add
sub
add
or
adc
add
or
jmp
add
jle
add
add
inc
add
or
dec
add
or
add
jg
add
add
push
dec
add
add
add
or
adc
aam
add
sub
push
and
adc
pop
add
or
mov
add
add
add
add
add
or
inc
add
add
idiv
(bad)
jmp
nop
sbb
add
push
add
push
or
adc
add
or
ja
push
add
add
inc
add
or
dec
add
or
pop
inc
add
add
idiv
(bad)
(bad)
jg
add
add
push
dec
add
add
add
or
adc
add
pop
add
push
and
adc
or
add
add
add
add
add
or
add
add
(bad)
(bad)
jmp
xchg
sbb
add
push
add
push
or
adc
add
or
sbb
cwde
sbb
add
push
add
push
pop
adc
adc
adc
mov
mov
inc
add
add
idiv
(bad)
inc
jnp
add
add
mov
outs
mov
adc
sub
adc
or
push
outs
mov
es
add
add
(bad)
(bad)
jmp
pushf
sbb
add
push
add
push
or
sbb
or
sbb
add
outs
add
add
jge
add
add
sub
and
add
push
and
add
sub
add
and
adc
and
push
add
push
and
xchg
add
sub
push
and
sbb
add
jae
add
push
sub
es
and
pop
add
push
and
add
sub
add
add
add
add
pop
or
add
add
add
add
add
add
add
or
add
add
add
add
adc
add
ja
add
add
add
and
xchg
add
sub
push
and
add
jle
add
add
cmp
or
jge
add
sub
push
and
add
or
mov
add
push
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
outs
inc
add
or
add
sub
push
sub
add
and
sbb
add
push
add
push
sub
adc
add
aaa
add
add
add
and
xchg
add
sub
push
sub
add
add
cmp
or
jge
add
sub
push
and
add
or
add
push
sub
add
add
xchg
add
add
add
add
fld
add
and
add
loopne
add
and
add
xlat
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
xchg
add
sub
push
and
in
xchg
add
sub
push
and
add
lea
add
outs
pop
add
and
add
and
push
add
push
pop
sub
outs
pop
add
and
add
and
add
add
cmc
add
push
and
add
add
xor
add
add
add
add
add
add
sbb
add
sub
xor
add
add
add
add
add
or
imul
add
and
xchg
add
pop
add
push
and
add
and
add
add
add
add
and
add
add
add
dec
add
add
push
add
push
add
jnp
add
add
add
jle
add
add
push
add
push
add
add
add
push
add
push
add
add
add
push
add
add
push
add
push
add
add
add
push
add
add
push
add
push
add
add
add
push
add
add
push
add
push
add
add
add
add
jle
add
add
dec
add
add
push
add
push
add
add
add
push
add
add
push
add
push
add
add
add
push
add
add
push
add
push
add
add
add
add
jle
add
add
dec
add
add
push
add
push
add
add
add
push
add
add
push
add
push
add
add
add
push
add
add
push
add
push
add
add
add
add
jle
add
add
dec
add
add
push
add
push
add
add
add
push
add
add
push
add
push
add
add
add
push
add
add
push
add
push
add
add
add
add
jle
add
add
push
add
add
push
add
push
add
jnp
add
add
add
add
add
add
add
sub
add
and
add
xor
jl
add
add
add
add
rcr
add
sub
add
jge
add
add
sub
add
push
sub
add
and
pop
add
push
and
add
or
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
sub
add
jge
add
add
add
fiadd
add
aam
add
sub
add
jge
add
add
and
sbb
add
push
add
push
jge
add
add
add
add
add
push
add
add
inc
add
add
xor
add
add
add
xchg
add
push
and
add
xor
add
add
adc
jbe
pop
add
push
jae
add
push
sub
es
add
add
mov
add
sub
add
jge
add
add
jae
add
push
jge
add
add
jnp
add
add
sbb
add
add
mov
push
add
push
jge
add
add
jnp
add
add
xor
hlt
xchg
add
sub
push
and
add
add
push
add
add
xor
add
and
add
add
add
add
ja
add
sub
and
xchg
add
sub
push
and
add
add
add
add
jbe
(bad)
(bad)
fld
and
add
push
and
add
sub
push
and
add
or
add
sub
push
or
rcr
add
push
add
push
and
pop
add
push
pop
outs
sbb
add
and
add
sub
sub
and
sbb
add
push
add
push
and
xchg
add
sub
push
and
add
or
add
push
sub
es
sub
add
add
add
add
add
test
add
jmp
add
add
add
add
add
add
add
xor
add
add
add
and
sbb
add
push
add
push
jge
add
add
and
pop
add
push
and
add
add
add
add
cmp
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
adc
add
idiv
(bad)
inc
jae
add
push
jge
add
add
jnp
add
add
push
add
push
add
add
add
xor
add
idiv
(bad)
jmp
inc
xchg
add
sub
push
and
add
add
add
add
rol
or
int3
sbb
add
push
add
push
sub
add
sub
add
xor
add
add
add
add
and
add
sub
push
and
add
add
add
add
push
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
push
jge
add
add
jnp
add
add
sbb
add
xor
add
add
add
add
add
dec
add
push
sub
add
xor
add
add
add
add
add
sub
add
xor
push
add
add
add
adc
add
add
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
xchg
add
sub
push
and
add
sub
add
and
add
and
add
or
cmp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
cmp
adc
add
and
add
xchg
add
adc
sub
cs
add
sub
push
jle
add
add
les
add
and
dec
add
sbb
add
xor
daa
add
add
sub
and
pop
add
push
and
add
les
add
and
dec
add
sbb
add
xor
add
add
add
add
add
sub
and
xchg
add
sub
push
and
add
lds
add
sub
add
xor
add
add
add
add
add
sub
add
xor
sbb
add
add
add
and
add
sub
push
and
add
jg
add
sub
add
and
add
and
add
xchg
add
push
and
add
test
add
pop
push
add
sub
push
and
add
outs
and
add
and
push
add
sub
push
and
add
outs
and
add
and
pop
add
push
and
add
outs
and
add
and
add
test
add
pop
push
add
sub
push
and
add
outs
and
add
and
push
add
sub
push
and
add
outs
and
add
and
add
sub
push
and
add
outs
and
add
and
add
sub
add
and
add
push
outs
xor
add
cmp
add
add
pop
push
add
sub
push
jle
add
or
add
or
add
sub
push
and
add
outs
and
add
and
add
sub
push
and
add
outs
and
add
and
add
sub
add
and
add
push
outs
xor
add
add
add
test
add
pop
push
add
sub
push
and
add
outs
and
add
and
add
sub
push
and
add
outs
and
add
and
add
sub
push
jle
add
or
add
or
add
sub
add
and
sbb
add
push
add
push
outs
xor
add
and
add
jg
add
xchg
stos
add
sub
push
and
add
add
add
xchg
add
push
and
add
mov
add
sub
push
and
add
cs
add
sub
push
and
add
add
add
xor
add
add
add
add
sub
add
or
add
and
add
inc
xchg
add
sub
push
sub
add
or
add
and
or
sub
add
add
add
sub
add
or
add
and
add
inc
xchg
add
sub
push
sub
add
or
add
sub
add
xor
add
add
add
add
add
add
or
add
and
add
inc
xchg
add
sub
push
and
add
sub
or
add
add
or
sub
add
add
add
sub
add
or
add
and
add
dec
xchg
add
sub
push
sub
add
or
add
and
or
sub
add
add
add
sub
add
or
add
and
add
inc
xchg
add
sub
push
and
add
sub
or
or
sub
add
add
add
sub
add
or
add
or
add
add
mov
add
sub
push
and
add
sub
or
or
sub
add
add
add
sub
add
or
add
and
add
inc
xchg
add
sub
push
and
add
and
add
sub
xor
add
add
add
add
sub
add
or
add
and
add
dec
xchg
add
sub
push
and
add
and
add
sub
xor
add
add
add
add
add
add
or
add
and
add
inc
xchg
add
sub
push
and
add
and
add
and
add
or
sub
add
add
add
sub
add
or
add
or
add
dec
xchg
add
sub
push
and
add
sub
or
add
or
sub
add
add
add
sub
add
or
add
and
add
mov
add
sub
push
and
add
sub
or
or
sub
add
add
add
sub
add
or
add
or
add
push
xchg
add
sub
push
and
add
and
add
and
or
sub
add
add
add
sub
add
or
add
or
add
arpl
add
push
and
add
sub
or
add
or
sub
add
add
add
sub
add
or
add
jle
add
add
mov
add
sub
push
sub
add
or
add
and
add
or
inc
add
add
add
add
add
add
fcomp
add
sub
add
and
sbb
add
push
add
push
outs
xor
add
and
add
in
add
sub
add
and
sbb
add
push
add
push
outs
xor
add
sub
add
or
sbb
add
add
add
adc
push
add
sub
push
and
add
and
sbb
add
push
add
push
or
cmp
add
sub
add
cmp
xchg
xchg
add
sub
push
and
add
and
add
sub
push
and
add
sub
push
and
add
and
add
and
sbb
add
push
add
push
and
sbb
add
push
add
push
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
and
xchg
add
sub
push
and
add
and
sbb
add
push
add
push
or
and
dec
xchg
add
sub
push
and
add
sub
and
pop
add
push
and
add
sub
add
and
add
and
add
pop
inc
add
add
idiv
(bad)
jmp
in
add
sub
push
and
add
and
add
sub
push
and
xchg
add
sub
push
and
add
and
add
and
add
sub
add
and
sbb
add
push
add
push
sub
add
push
and
inc
cwde
add
sub
push
sub
and
pop
add
push
and
add
sub
and
cwde
add
sub
push
sub
or
es
add
sub
push
and
add
or
add
and
add
sub
add
or
add
sub
sub
add
inc
sbb
add
add
add
add
pop
add
add
add
daa
add
add
add
sbb
add
add
add
adc
imul
add
and
add
and
sbb
add
push
add
push
or
cmp
add
sub
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
and
pop
add
push
and
add
and
add
sub
push
and
add
sub
push
and
add
sub
add
and
add
sub
add
and
sbb
add
push
add
push
sub
add
push
sub
and
call
push
and
add
and
add
sub
add
or
and
pop
call
push
and
add
sub
and
pop
add
push
and
add
sub
add
sub
add
cmp
add
pop
fwait
add
sub
push
and
add
and
add
sub
push
and
add
sub
push
and
add
and
add
and
add
sub
add
and
add
sub
add
sub
add
push
and
push
add
sub
push
and
add
push
or
and
mov
pop
add
push
and
add
sub
and
pushf
add
sub
push
and
add
fisub
add
sub
push
pop
sub
add
or
add
and
sbb
add
push
add
push
or
add
sub
sub
add
inc
sbb
add
add
add
add
push
add
add
add
and
add
add
xor
add
add
add
and
pop
add
push
sub
add
push
sub
add
cmp
add
sbb
add
add
(bad)
(bad)
call
sub
add
sub
sub
add
and
inc
add
add
idiv
(bad)
jmp
aas
add
push
and
add
sub
sbb
add
add
(bad)
(bad)
jmp
cmp
add
and
add
and
inc
add
add
idiv
(bad)
jmp
add
push
and
add
sub
sub
add
sub
add
and
dec
add
push
sub
push
and
add
push
and
add
and
add
sbb
add
(bad)
(bad)
jmp
cmp
add
sub
add
and
add
sbb
add
add
(bad)
(bad)
jmp
cmp
dec
add
or
add
sbb
add
add
(bad)
(bad)
jmp
inc
add
push
and
add
and
add
sbb
add
add
(bad)
(bad)
jmp
cmp
add
and
add
and
add
sbb
add
add
(bad)
(bad)
jmp
add
push
sub
add
and
add
sbb
add
(bad)
(bad)
push
add
push
adc
and
pushf
add
sub
push
and
add
adc
jle
add
or
add
add
outs
mov
outs
mov
or
push
adc
sub
or
or
add
or
add
push
and
sbb
add
push
add
push
and
sbb
add
push
add
push
outs
xor
add
and
mov
or
add
and
add
jge
add
add
or
rol
or
add
add
(bad)
(bad)
(bad)
fimul
adc
(bad)
push
inc
add
sbb
add
or
adc
jnp
add
add
and
add
and
inc
add
add
idiv
(bad)
call
or
add
adc
add
sub
push
and
add
and
add
or
add
sbb
pop
add
push
jle
add
add
les
add
and
add
sub
add
or
add
dec
popf
add
sub
push
and
aad
add
cmp
add
and
add
sub
push
or
mov
add
push
and
add
or
xor
add
sub
scas
add
or
sub
add
sub
add
fild
add
sbb
add
add
idiv
(bad)
inc
outs
scas
add
or
add
adc
mov
add
adc
mov
add
and
dec
add
push
and
out
add
sub
push
and
add
or
add
cmp
arpl
add
adc
add
or
add
add
push
sahf
add
sub
push
and
add
or
mov
add
adc
or
add
or
add
mov
add
sub
push
adc
xlat
add
add
push
add
add
xor
add
and
add
adc
push
add
push
jae
add
or
add
or
add
and
lahf
add
sub
push
and
add
and
add
and
add
or
dec
add
push
and
inc
add
add
idiv
(bad)
jmp
je
add
sub
push
or
cmp
add
and
add
cmp
add
push
adc
adc
adc
jge
add
add
in
lahf
add
sub
push
and
add
or
add
adc
pop
or
add
or
add
pop
mov
add
push
and
fld
add
push
add
add
xor
add
sub
inc
add
push
jae
add
or
add
or
add
add
or
fldenv
add
push
and
add
and
add
and
add
adc
mov
add
and
(bad)
call
inc
add
add
idiv
(bad)
(bad)
fimul
adc
push
inc
add
sbb
add
or
and
sbb
add
push
add
push
adc
fisttp
cmp
add
push
and
add
and
add
sub
add
adc
fisubr
pop
and
pop
add
push
adc
sub
add
or
add
and
sbb
add
push
add
push
adc
fiadd
(bad)
mov
add
push
sub
sbb
add
push
add
push
adc
fisubr
adc
and
add
sub
push
and
xor
add
and
add
and
add
sub
add
adc
fiadd
adc
sub
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
add
sldt
add
add
add
add
add
inc
add
add
xor
add
add
add
add
and
add
push
and
add
jle
add
add
rol
add
and
add
add
rol
add
and
ret
add
(bad)
mov
add
push
and
add
and
add
and
sbb
add
push
add
push
sub
adc
add
mov
add
add
adc
add
add
dec
add
or
and
add
sub
add
adc
jo
adc
or
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
outs
mov
add
and
add
and
add
and
inc
add
add
idiv
(bad)
jmp
int3
mov
add
push
jle
add
add
cmp
add
sub
sbb
add
push
add
push
or
inc
adc
push
sbb
add
push
add
push
pop
adc
add
mov
mov
inc
add
add
idiv
(bad)
jmp
sbb
pop
add
push
and
add
cmp
add
sub
sbb
add
push
add
push
sub
sub
add
xor
add
add
add
add
adc
add
add
(bad)
mov
add
push
sub
add
or
push
sub
add
and
add
pop
sbb
add
push
add
push
adc
adc
inc
sbb
add
add
idiv
(bad)
call
sub
add
or
add
or
add
or
and
add
sub
push
and
add
or
mov
add
and
add
push
add
push
or
and
add
sub
add
pop
adc
mov
cdq
sbb
add
add
(bad)
(bad)
jmp
ret
mov
add
push
push
sub
add
or
mov
add
and
add
push
add
push
sub
sub
add
xor
cmp
add
jmp
add
or
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
sub
sbb
add
add
cmp
add
and
add
jle
add
add
dec
add
or
add
ins
sbb
add
push
add
push
adc
add
add
add
add
add
add
(bad)
(bad)
inc
outs
mov
add
and
add
and
add
and
inc
add
add
idiv
(bad)
jmp
and
add
add
cmp
add
and
add
pop
outs
push
add
or
add
or
add
jo
add
sub
add
sub
add
or
and
movs
add
sub
push
sub
sbb
add
push
add
push
or
and
add
sub
add
pop
adc
mov
pop
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
sbb
pop
add
push
and
add
cmp
add
and
add
and
add
push
add
push
sub
sub
xor
inc
add
add
add
adc
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
and
push
add
push
sub
jae
add
sub
push
and
add
or
add
jle
add
add
(bad)
mov
add
push
and
add
and
dec
add
or
add
add
push
add
push
adc
cmp
adc
call
add
inc
add
add
idiv
(bad)
dec
outs
mov
add
and
add
or
loopne
add
sub
push
push
sub
add
or
mov
add
or
add
or
into
add
push
and
and
push
add
push
sub
add
or
sbb
add
add
(bad)
(bad)
jmp
pop
cmps
add
sub
push
sub
sbb
add
push
add
push
adc
inc
adc
and
push
add
push
pop
adc
adc
adc
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
ret
mov
add
push
push
sub
add
or
mov
add
and
add
push
sub
add
add
xor
add
add
adc
add
or
and
pop
add
push
and
add
and
add
cwde
sbb
add
push
add
push
adc
add
add
add
xchg
add
add
add
(bad)
(bad)
call
sub
add
or
add
or
xchg
add
push
and
add
and
outs
push
add
or
add
and
push
add
push
and
add
or
add
or
and
add
and
inc
add
add
idiv
(bad)
dec
outs
mov
add
and
outs
lea
add
sub
add
add
(bad)
(bad)
inc
or
outs
push
add
or
add
adc
add
push
add
push
pop
adc
mov
inc
(bad)
(bad)
call
inc
add
add
idiv
(bad)
inc
sub
add
xor
add
add
add
add
and
cmps
add
sub
push
sub
add
push
and
add
sub
add
push
and
add
sub
add
push
sub
add
sub
add
push
sub
add
sub
add
push
and
add
sub
add
push
and
add
sub
add
sub
add
jle
add
add
inc
add
push
and
add
jle
add
add
inc
add
push
and
add
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
sub
add
sub
pop
inc
add
add
idiv
(bad)
jmp
inc
add
push
and
cmps
add
sub
push
sub
add
and
add
and
add
outs
sahf
add
or
add
or
inc
cmps
add
sub
push
and
add
or
add
sub
add
push
and
push
add
push
and
add
push
sub
add
push
and
cmps
add
sub
push
and
add
sub
sbb
add
int3
add
add
add
adc
call
pop
add
push
and
pop
add
or
add
add
dec
add
or
add
sbb
add
add
(bad)
(bad)
call
sub
add
sub
outs
enter
jne
add
sbb
push
sub
push
mov
test
add
sub
add
xor
add
idiv
(bad)
jmp
dec
test
add
pop
add
push
and
pop
add
or
add
add
sub
add
or
and
add
pop
add
push
and
add
sub
add
lea
push
add
or
mov
add
ficomp
or
adc
add
push
and
add
or
mov
add
fiadd
sub
adc
add
add
add
add
add
xor
add
add
add
pusha
test
add
push
and
add
sub
add
sub
add
sub
add
push
and
add
sub
sub
add
sub
add
push
and
add
sub
add
and
add
sub
add
push
and
add
sub
add
and
add
sub
push
add
push
sub
add
push
and
add
sub
add
push
sub
add
sub
add
push
sub
add
sub
add
push
and
add
sub
add
push
sub
add
and
pop
add
push
and
add
sub
add
sbb
add
jg
add
pusha
add
adc
into
test
add
push
and
add
or
add
add
dec
add
or
inc
add
add
idiv
(bad)
call
sub
add
and
stos
add
sub
push
and
add
or
add
add
dec
add
or
or
add
enter
fiadd
ficomp
and
stos
add
sub
push
and
add
or
add
fiadd
sub
add
add
add
or
or
add
add
sbb
dec
bound
sbb
add
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
add
enter
sub
add
outs
cmp
sub
add
add
or
pop
add
add
add
add
sub
add
xor
mov
add
in
add
adc
pop
add
add
add
pop
add
push
and
int3
sbb
add
push
add
push
cs
pop
and
sbb
add
push
add
push
xor
add
(bad)
(bad)
call
sub
add
sub
jnp
add
add
jnp
add
add
jnp
add
add
mov
add
and
outs
leave
add
or
add
add
add
add
push
and
inc
add
add
idiv
(bad)
jmp
mov
pop
add
push
and
add
jp
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
jnp
add
or
jnp
add
or
adc
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
jnp
add
add
pop
add
push
and
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
add
jnp
add
add
int3
add
or
add
or
add
rol
add
sub
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
jl
add
add
mov
add
and
add
sub
add
outs
int
add
and
add
add
or
pop
add
push
and
add
add
rol
add
add
add
fcomp
add
sub
add
pop
jge
add
add
add
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
or
adc
add
push
outs
iret
add
or
add
or
add
or
rol
add
add
add
(bad)
(bad)
call
sub
add
es
add
or
add
add
add
outs
sbb
add
and
inc
add
add
idiv
(bad)
(bad)
jle
add
or
add
add
or
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
jnp
add
add
ja
add
sub
push
add
add
add
rol
add
sbb
add
push
sub
add
or
fcomp
add
sub
add
sub
add
push
and
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
jnp
add
add
aas
add
push
and
add
add
aad
add
loopne
add
sub
add
sub
add
push
sub
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
jnp
add
add
inc
add
push
and
add
add
aad
add
in
add
sub
add
sub
add
push
and
in
jmp
add
add
cmc
mov
mov
mov
pushf
test
cwde
jo
jae
adc
js
mov
sub
(bad)
cld
adc
(bad)
cpuid
mov
cli
mov
mov
iret
lods
cmp
test
cmp
jmp
loopne
int
mov
xchg
call
call
mov
adc
cmps
cmp
scas
data16
sbb
mov
dec
(bad)
mov
lahf
retf
sbb
sahf
shr
mov
adc
cmp
cmp
es
imul
and
stc
or
aaa
cmc
sub
sub
push
in
(bad)
test
xor
movs
test
push
jge
sub
pop
hlt
pop
mov
stos
rcr
pop
pop
shl
in
movs
sbb
ret
sbb
popf
inc
and
(bad)
pop
aad
in
popa
pop
or
ficom
xchg
push
jae
cli
sti
test
inc
ret
or
add
adc
mov
icebp
pop
test
jecxz
(bad)
in
adc
scas
add
sahf
nop
or
test
in
sub
xlat
fdivr
lods
addr16
(bad)
adc
out
mov
int
push
pusha
fist
cli
add
sbb
scas
loope
fiadd
jg
in
sbb
and
inc
or
lahf
add
mov
imul
outs
add
das
dec
jge
ds
addr16
popa
daa
in
sbb
dec
jo
or
fsubr
or
jmp
cmp
rol
lahf
xchg
lods
rcl
loop
test
mov
adc
sbb
scas
push
mov
ins
and
inc
or
mov
xor
jne
add
xor
fisttp
mov
push
push
pop
sbb
cs
sahf
lahf
xchg
lods
sub
inc
inc
pop
cs
not
rcl
mov
aad
sub
jo
mov
jbe
aas
push
or
repz
jl
cdq
pop
rcl
push
gs
jmp
xchg
mov
push
xor
inc
lock
lea
loop
sbb
aad
pop
fidiv
stos
fidivr
cmp
mov
xchg
ja
mov
push
movs
test
xchg
push
mov
cwde
in
fwait
sbb
mov
enter
mov
mov
push
sbb
or
inc
ja
mov
fist
and
xor
cmp
stos
ret
popf
push
jno
pushaw
les
dec
call
and
jecxz
xor
repnz
cwde
cmp
in
icebp
ret
mov
xchg
inc
xor
mov
xor
and
jecxz
mov
inc
dec
aaa
adc
sub
inc
mov
push
leave
ss
sbb
jns
int
imul
jmp
std
stos
es
aad
pop
aam
xchg
loop
mov
jns
lock
adc
pop
xor
in
xor
mov
test
adc
(bad)
test
inc
mov
retf
cmp
lods
mov
int3
in
push
jmp
ins
and
xchg
sahf
mov
dec
dec
mov
call
mov
xor
or
loope
cmc
jle
mov
(bad)
(bad)
push
int
(bad)
in
sbb
inc
ins
scas
inc
gs
pushw
jge
cwde
hlt
fwait
or
jp
sahf
fnstenv
add
xchg
or
mov
test
dec
lods
push
mov
(bad)
xor
into
mov
pop
ja
cmc
push
leave
push
je
sub
sbb
test
or
adc
(bad)
fmul
mov
or
mov
push
mov
movs
push
push
push
mov
xchg
retf
std
enter
mov
int
outs
xchg
imul
pop
std
pop
cmp
mov
mov
retf
in
xlat
mov
inc
retf
inc
push
pop
dec
clc
sti
push
jmp
in
in
adc
fwait
jae
sbb
xchg
(bad)
cli
popa
loop
neg
sub
fwait
add
jnp
adc
xlat
mov
mov
mov
inc
adc
jne
cmp
sub
es
adc
popa
push
mov
out
ins
push
push
sub
jmp
dec
and
mov
adc
adc
(bad)
int
mov
popf
mov
dec
retf
out
outs
shl
jmp
push
fist
gs
inc
push
stc
add
or
cmp
pop
cmps
sub
jge
in
xor
test
jecxz
jne
and
inc
adc
push
in
jne
inc
test
sbb
xchg
(bad)
cwde
push
js
pop
xsaves
(bad)
inc
pop
cmp
popf
lods
mov
test
jno
call
sti
enter
int3
addr16
dec
and
mov
xor
push
cmp
int
mov
add
xchg
in
or
lds
jae
jnp
sbb
in
out
loop
sar
movs
cwde
inc
imul
je
xor
movs
retf
call
ins
fadd
mov
jae
test
inc
out
pop
pop
xor
pop
xchg
inc
and
(bad)
repz
pop
outs
(bad)
sbb
cld
mov
xor
push
test
out
rcl
fs
aas
es
into
mov
xchg
lods
dec
stos
xchg
or
rcl
dec
adc
jae
xchg
push
aad
push
ins
push
call
and
inc
cmp
xchg
cld
call
mov
pop
push
dec
mov
or
add
cmp
cmp
mov
je
(bad)
aas
or
(bad)
popf
push
xchg
popa
cvttps2pi
cli
icebp
jb
scas
stos
xor
cdq
call
dec
mov
add
cmp
loop
cmc
jl
lods
test
add
js
leave
repnz
or
inc
pop
add
and
ins
shr
(bad)
xor
add
(bad)
out
or
repnz
mov
mov
inc
and
inc
jg
sub
ins
icebp
mov
mov
push
scas
mov
or
xchg
mov
and
sbb
shl
or
lods
xor
dec
pop
loopne
cli
jo
sbb
loopne
(bad)
aam
mov
shl
sub
cs
(bad)
outs
adc
push
out
mov
pushf
dec
stc
imul
cld
and
jmp
pop
push
add
lds
xor
and
ret
mov
cmp
int3
rol
inc
jb
jno
cmp
inc
push
jne
jl
rcl
inc
mov
fimul
pop
into
je
jmp
ret
les
push
adc
pop
or
(bad)
call
jecxz
sbb
ret
xlat
(bad)
call
add
pop
int3
outs
inc
sbb
xor
mov
shl
rcr
push
xor
xor
xchg
stc
mov
cs
popa
inc
cmc
and
dec
int
jmp
and
dec
in
inc
xlat
pop
pop
push
(bad)
adc
inc
add
jo
loope
add
mov
xor
loope
mov
repz
jmp
ins
inc
in
das
dec
cwde
(bad)
xor
(bad)
ins
fild
cmp
lea
xor
lods
mov
inc
je
adc
sub
(bad)
out
test
cmps
adc
or
cmc
and
movs
in
test
call
xor
loope
sbb
inc
ror
dec
cmc
dec
jae
xor
push
pop
jae
xchg
sbb
adc
sub
mov
js
or
pop
mov
(bad)
jmp
cmp
ffreep
mov
inc
push
idiv
mov
cmps
jp
out
xor
aaa
and
sbb
xchg
shr
adc
dec
(bad)
lea
xchg
pop
cmps
ret
call
dec
idiv
scas
add
ds
int
mov
push
adc
adc
fsub
clc
test
pop
sahf
cdq
rol
mov
fmul
xor
push
and
inc
xlat
je
stos
pop
mov
mov
sbb
in
mov
call
push
inc
mov
inc
rcr
sbb
js
repnz
repnz
(bad)
js
xchg
sbb
cmp
dec
push
or
xor
add
and
push
add
inc
xchg
xor
mov
js
xor
jl
sbb
mov
jl
cld
shl
jno
ret
leave
adc
cmp
mov
inc
or
(bad)
xor
xchg
scas
loope
clc
dec
iret
std
push
(bad)
out
(bad)
dec
dec
xchg
in
sahf
and
loope
push
je
pusha
sub
dec
(bad)
and
push
lahf
jbe
sub
xchg
xchg
adc
repnz
outs
xchg
test
pop
daa
lods
imul
pop
mov
mov
retf
clc
out
call
fwait
das
xchg
mov
call
pop
sar
inc
and
cmc
(bad)
scas
rcl
mov
sub
test
mov
arpl
iret
jmp
sahf
es
data16
cmp
std
or
fs
cld
mov
(bad)
popf
sbb
or
adc
(bad)
cmp
lds
push
jmp
test
or
sub
push
cld
mov
and
enter
pop
xor
add
cli
pop
cmp
sub
fbstp
xor
mov
adc
in
loope
xor
xor
push
cli
ret
pop
loop
stos
lods
adc
into
push
sbb
dec
sahf
rcl
fcompp
jl
jns
mov
mov
(bad)
aad
pop
in
xchg
or
xor
arpl
test
adc
faddp
cmp
aad
push
xchg
dec
ja
cwde
mov
fidivr
mov
mov
push
adc
jmp
jnp
imul
sbb
push
cdq
mov
mov
dec
cmc
lds
outs
aam
fadd
jecxz
aaa
xor
push
mov
sbb
sub
ficomp
fcom
dec
xchg
movs
(bad)
fimul
cmps
inc
sbb
and
mov
sbb
sub
sub
cmp
xbegin
pop
or
ins
in
lods
fnsave
daa
pop
lock
enter
pushf
ds
(bad)
dec
or
push
inc
mov
xlat
jnp
loopne
adc
sbb
rcl
sub
or
fild
inc
xor
push
mov
pop
jmp
push
sub
push
mov
retf
push
adc
mov
jp
in
inc
dec
and
pop
jp
pop
or
and
rol
nop
and
inc
aad
inc
push
cmp
in
and
xchg
inc
inc
fwait
shl
leave
scas
lods
inc
jo
push
cmp
loop
jle
les
mov
mov
rcr
(bad)
loopne
jnp
pop
push
popf
cmp
mov
test
cwde
push
sbb
inc
push
pushf
movs
in
xlat
ret
loopne
mov
lds
popa
jnp
jae
fwait
jno
arpl
test
pop
and
stos
ror
pop
xor
mov
mov
les
nop
mov
maskmovq
idiv
mov
cmp
test
xchg
and
in
sub
retf
movs
mov
lahf
popf
test
jbe
test
pop
pop
int3
enter
aaa
into
lahf
fwait
sub
bound
jns
xor
test
pop
jp
loop
mov
jle
push
push
arpl
scas
test
imul
enter
xchg
jmp
adc
inc
ins
xor
lods
push
aas
pop
das
mov
push
mov
adc
sub
fwait
mov
xchg
int3
pop
pop
outs
sbb
add
mov
xchg
hlt
jb
or
jae
mov
jb
xchg
(bad)
jne
clc
rcl
movs
sbb
div
and
aaa
adc
(bad)
stc
iret
imul
enter
xor
fmulp
in
inc
xlat
in
outs
leave
std
rcl
xor
div
mov
dec
int
fbstp
sbb
mov
pusha
inc
jp
inc
mov
or
xor
cmp
enter
lock
inc
or
pop
mov
pusha
dec
mov
cmp
pop
add
xchg
push
mov
jno
inc
icebp
xchg
fstp
mov
jge
scas
adc
je
push
pop
jmp
ror
retf
adc
stc
sub
push
and
ins
adc
jg
pop
cli
imul
or
sahf
mov
mov
ffree
dec
add
fdiv
jl
mov
cmp
mov
in
aas
call
call
sbb
push
fldenv
xor
mov
jl
sbb
clc
pop
aaa
inc
mov
adc
movs
stos
out
dec
push
inc
jl
es
sbb
movs
inc
jmp
cmc
mov
mov
dec
mov
mov
fcmovnb
popa
aam
dec
aad
daa
jle
adc
adc
inc
jmp
and
jge
push
add
mov
rol
fild
fsubr
sbb
imul
shr
pushf
push
fdiv
jmp
cmp
js
lahf
stos
imul
ret
cmps
push
(bad)
pop
ins
test
sbb
jmp
popa
lock
cmps
rol
add
js
dec
iret
xlat
popf
loopne
xchg
inc
or
xor
mov
outs
movs
bswap
adc
ss
imul
cdq
push
mov
cdq
pop
cs
ins
add
adc
dec
push
xchg
pop
and
cmp
jb
lods
cld
push
push
sahf
aad
leave
pop
aaa
ds
inc
in
shl
inc
fdivr
inc
dec
pop
jmp
lods
mov
pop
enter
jb
clc
xchg
ja
test
or
(bad)
fist
pop
adc
jmp
arpl
adc
mov
hlt
dec
mov
pop
jmp
repz
loop
push
and
xchg
mov
jmp
jmp
xchg
into
jb
sti
lahf
sub
cmps
retf
in
(bad)
out
test
mov
js
dec
xchg
out
fldlg2
pop
add
pop
mov
cmp
out
dec
inc
out
dec
dec
and
test
adc
jb
test
push
ds
xchg
cld
aad
pop
fdivr
cmp
js
push
mov
dec
stc
jbe
cmp
pop
jmp
xor
push
test
push
retf
pop
sub
xchg
xor
test
pop
pop
dec
movs
outs
mov
xchg
xchg
stc
mov
popf
sbb
bound
inc
mov
pop
nop
sbb
bound
mov
into
xchg
popa
cmp
into
lahf
jb
mov
or
or
xchg
retf
lock
lds
sub
xchg
inc
or
rcl
shl
mov
addr16
popa
inc
jge
push
sar
pop
mov
mov
dec
and
fidiv
mov
out
popa
enter
out
mov
dec
mov
xor
add
scas
rcr
stos
mov
daa
cs
xchg
mov
clc
bound
mov
push
sub
sub
sub
jmp
int
imul
fidivr
fwait
mov
aam
push
and
mov
xor
lods
or
mov
lods
pop
gs
mul
and
mul
and
cmp
arpl
neg
push
sahf
clc
xchg
dec
or
cmps
sbb
lds
mov
retf
jno
ins
cmp
add
jg
icebp
pop
repz
inc
xchg
pushf
std
jmp
test
xor
int3
mov
pusha
mov
aas
cdq
movq
not
mov
ret
mov
xchg
out
imul
push
popa
cs
cmp
call
shl
adc
sti
cmps
mov
and
sahf
xchg
ret
push
in
jg
mov
cmp
pextrw
mov
cmp
sub
push
mov
imul
push
in
inc
mov
test
sub
mov
shl
inc
int3
mov
call
lods
retf
popa
pop
add
pop
dec
xor
dec
hlt
lahf
mov
int
loopne
jns
stc
fmul
inc
adc
pop
sahf
movs
cmps
outs
(bad)
retf
sti
fbstp
pop
push
loop
xor
ins
sbb
mov
out
ja
mov
test
add
lea
fcom
test
and
daa
add
mov
push
cmp
iret
ja
cli
loopne
inc
pop
loopne
add
jbe
sub
add
push
data16
dec
push
call
pop
cmp
push
(bad)
xlat
mov
lds
test
leave
sahf
into
rcr
or
in
cmp
fld
mov
rol
inc
gs
int
inc
push
cmp
cli
mov
mov
mov
adc
int
stc
inc
aad
dec
or
sahf
out
rcr
adc
fidivr
loope
dec
mov
ss
inc
push
mov
ret
cmp
or
cmc
xchg
vmmcall
mov
test
shr
mov
lea
fmul
nop
adc
(bad)
fcmovnbe
mov
ins
repz
and
ins
sub
sti
aaa
lods
push
pop
pop
mov
sbb
xchg
add
dec
fbld
mov
inc
test
inc
pop
inc
xor
inc
mov
inc
sub
icebp
hlt
jo
mov
push
cdq
mov
lods
adc
and
ja
mov
mov
cmp
int
int
int3
dec
popf
jbe
jmp
popf
and
sbb
(bad)
movs
arpl
test
(bad)
dec
in
call
cmc
es
imul
sub
push
mov
in
aam
daa
fistp
repz
mov
cmp
(bad)
dec
push
pop
or
push
sbb
mov
dec
aaa
mov
fmulp
lea
push
ret
outs
and
fstp
push
or
sub
mov
sub
(bad)
fistp
jmp
shr
(bad)
cld
int3
or
adc
add
ficomp
adc
(bad)
xor
xor
adc
mov
cmp
inc
fdiv
in
mov
(bad)
xchg
mov
add
je
xchg
cmps
stos
pop
(bad)
mul
pop
retf
push
stos
inc
outs
mov
push
xchg
mov
data16
fisubr
imul
adc
in
pop
ins
sahf
fidiv
or
imul
push
sub
add
push
out
test
xchg
xor
dec
pushf
scas
shr
mov
xchg
scas
mov
hlt
mov
push
shr
mov
(bad)
(bad)
sub
push
jne
xor
loope
or
mov
or
xor
cdq
sub
or
sbb
cmp
jnp
pusha
jnp
fsubr
mov
dec
popf
mov
call
test
pop
sub
(bad)
fs
cmps
sbb
push
(bad)
pushf
aad
in
(bad)
mov
xor
pop
and
jmp
cs
pop
xor
cmp
es
inc
mov
mov
rcr
adc
add
loop
das
cwde
adc
daa
ret
js
cld
inc
out
and
int
loop
or
pop
sahf
pusha
ficom
inc
pop
pop
xor
mov
mov
repz
pop
lds
mov
or
jmp
adc
mov
push
test
mov
pop
jno
(bad)
xchg
or
mov
(bad)
fdiv
imul
in
aad
sbb
add
jns
add
daa
xchg
pop
dec
fadd
dec
xchg
cld
and
out
mul
mov
or
mov
inc
popa
cs
(bad)
pop
in
rcr
icebp
sar
mov
xor
std
pop
leave
outs
inc
js
(bad)
mov
push
jns
aaa
jb
mov
std
(bad)
cmps
or
dec
xchg
icebp
pushf
(bad)
out
daa
retf
fwait
jl
jb
(bad)
cmc
pop
in
test
cmp
fidiv
xor
arpl
test
es
pop
(bad)
dec
and
fmul
mov
or
cwde
mov
cmp
aad
xchg
cmp
into
mov
fisttp
xchg
pusha
enter
pop
data16
add
call
int3
jmp
(bad)
push
or
push
inc
mov
movs
movd
in
xor
lea
data16
mov
cmp
ror
push
inc
ja
sbb
inc
jmp
retf
and
fs
jge
and
out
shl
jecxz
dec
pop
and
and
mov
fst
loop
adc
lahf
dec
daa
fistp
push
(bad)
sbb
mov
sbb
stc
in
and
inc
test
inc
push
ins
lds
mov
fucomp
shl
cmp
movs
(bad)
mov
push
repnz
push
arpl
scas
xchg
cmovbe
nop
mov
out
repz
add
aam
push
imul
push
jmp
je
(bad)
inc
mov
mov
and
lods
mov
mov
xchg
push
jecxz
cmps
mov
mov
in
mov
fidivr
nop
mov
mov
stc
xor
pusha
mov
pop
ins
add
and
popa
pusha
stos
iret
dec
rol
lahf
fadd
cmc
jns
fld
push
nop
es
ja
xor
push
retf
mov
adc
inc
adc
fimul
sahf
cs
dec
cmps
and
jne
ror
pop
icebp
sub
inc
dec
push
loop
movs
stc
rol
cmp
retf
in
in
jp
jbe
pop
and
adc
push
cli
and
mov
repz
adc
lock
lsl
xor
adc
xchg
out
sbb
(bad)
xor
push
sub
xor
pop
pop
lea
mov
inc
lahf
test
jbe
bound
int3
data16
mov
xor
sbb
cmps
add
(bad)
movs
mov
push
sub
in
jno
jnp
add
scas
(bad)
cmp
push
shl
adc
jo
sub
out
les
or
jge
mov
sbb
dec
dec
out
fnstsw
out
aas
in
shl
out
clc
pop
cmp
mul
lods
cmp
aas
ins
xchg
fdivp
repz
aad
mov
push
cmovle
test
dec
dec
fild
inc
sbb
pop
mov
mov
add
add
xor
mov
push
xchg
ret
sub
outs
xchg
mov
rol
sub
xor
jnp
enter
(bad)
pop
jno
adc
scas
fst
ret
add
or
push
and
push
inc
xchg
out
sub
adc
hlt
mov
push
adc
repnz
mov
outs
movs
mov
push
push
jecxz
pop
addr16
sbb
not
push
sahf
fsubr
inc
jo
xor
inc
jns
loopne
aaa
mov
daa
imul
add
test
jge
in
jne
cmps
test
in
dec
mov
cmp
sbb
lods
mov
(bad)
pop
inc
ja
inc
dec
and
jnp
push
adc
add
mov
push
retf
cmp
shl
mov
or
xor
out
fs
push
repnz
cmp
mov
push
push
cmp
adc
out
test
cmp
mov
cmps
mov
jle
fiadd
adc
and
xor
sub
ficom
sbb
pop
xchg
sti
mov
push
and
lock
pop
sub
les
jne
ret
jmp
std
test
sub
rcr
jo
xchg
push
enter
sbb
test
outs
and
hlt
sbb
xor
and
jns
cwde
pop
and
cs
aaa
mov
add
shr
sub
jmp
push
(bad)
loopne
icebp
cmp
loopne
retf
stos
and
or
mov
sbb
and
inc
or
ss
sub
adc
mov
lock
mov
sub
int3
fidivr
movs
fwait
emms
inc
xchg
xor
sub
rcl
sub
cmp
jnp
jle
or
push
ror
mov
not
(bad)
jcxz
mov
sbb
mov
sbb
sbb
fcom
jp
call
jecxz
inc
sar
sbb
fadd
mov
rol
mov
mov
ret
sti
mov
sti
pop
add
inc
and
cmp
sbb
retf
sub
push
push
push
outs
(bad)
xchg
pop
aaa
jno
repnz
ja
mov
jbe
mov
xor
pop
dec
stc
fadd
call
out
stos
mov
ds
rcl
cmp
mov
ins
sbb
mov
xchg
mov
lods
cli
adc
adc
je
outs
fdivr
je
mov
cdq
arpl
aaa
icebp
imul
push
jmp
dec
mov
ficomp
nop
ins
(bad)
stos
call
mov
xor
test
xor
xchg
mov
das
xor
jp
bound
or
pusha
push
xor
sbb
test
push
sub
int
ret
xor
popa
test
inc
enter
mov
sar
xchg
add
mov
pop
gs
jne
imul
pop
jp
mov
mov
dec
pop
push
jl
mov
in
mov
jb
dec
gs
xor
push
mov
rol
inc
push
mov
jl
dec
adc
icebp
inc
fdiv
stos
cwde
loopne
call
clc
mov
nop
mov
inc
push
pusha
jno
neg
jp
fnsave
mov
cmps
jmp
adc
mov
add
or
cmp
or
ror
sub
pop
call
fnstenv
push
es
ficom
xchg
sub
push
sub
in
inc
adc
cwde
stos
adc
mov
xchg
xchg
add
cmp
(bad)
ret
das
pop
rcl
fabs
adc
dec
pop
sbb
cmp
push
aam
sbb
mov
iret
ds
fcmovbe
sbb
outs
jmp
inc
sub
lahf
and
adc
inc
pop
and
xchg
call
and
adc
test
pop
out
inc
stos
mov
jp
cwde
mov
cmp
sub
(bad)
mov
outs
mov
imul
rol
stc
fild
ja
and
lea
push
es
cwde
mov
clc
dec
add
xchg
iret
xor
push
mov
and
ja
xor
fdiv
nop
in
daa
in
mov
mov
dec
imul
addr16
mov
ret
push
inc
pop
in
out
retf
mov
in
pminsw
int
xor
and
addr16
fwait
in
dec
xchg
sub
push
test
mov
(bad)
jecxz
mov
xchg
lock
sub
test
sub
cmp
icebp
stos
out
xlat
test
je
leave
icebp
cld
add
loopne
push
mov
or
pop
inc
sbb
jns
xchg
(bad)
cdq
cmc
std
call
xor
mov
outs
imul
fdiv
sbb
out
mov
clc
cmp
fstp
cwde
sti
xchg
adc
jl
repz
cli
sbb
shr
loop
mov
dec
or
mov
(bad)
loopne
xchg
js
sub
(bad)
pop
xchg
xlat
and
fbstp
(bad)
es
xchg
xor
cmp
loopne
dec
xchg
xor
inc
daa
push
into
test
xchg
push
nop
mov
and
daa
(bad)
clc
les
stos
inc
rcr
jo
int3
ret
cdq
scas
adc
cdq
push
mov
dec
sub
fs
push
mov
fbstp
cs
xchg
inc
pop
popf
mov
retf
pop
shl
rcl
mov
out
aaa
jmp
xor
inc
repnz
add
sub
int
sub
or
jp
add
pop
jnp
dec
xchg
mov
xor
adc
es
add
loopne
test
sbb
mov
and
fsubr
jns
mul
(bad)
leave
pop
test
pop
xchg
into
sahf
lds
ss
cmp
inc
mov
adc
pop
xchg
shr
mov
and
inc
les
ret
iret
jmp
lock
cmp
out
dec
das
add
cdq
out
pop
mov
push
test
or
aad
(bad)
retf
inc
repz
and
mov
not
jno
mov
mov
mov
sub
xor
inc
mul
inc
cmp
xchg
rcl
mov
sbb
cmps
inc
movs
xor
push
fdivr
test
xchg
stc
mov
mov
stos
adc
dec
xlat
int3
out
fisttp
mov
jns
rcl
stos
fisttp
lods
pop
xor
push
(bad)
and
sbb
mov
movs
hlt
add
ret
js
xchg
pop
mov
or
lods
sub
aam
call
pop
das
into
daa
popf
jp
xchg
cmps
fst
cmp
in
cmc
rcl
pop
jmp
pinsrw
cmp
loopne
dec
loope
pushf
jp
mov
daa
out
xor
out
inc
movs
out
or
ja
in
es
dec
mov
mov
fisub
hlt
mov
push
loope
pushf
add
ret
pop
shr
in
in
push
or
jle
es
cmc
ret
outs
add
cmps
rol
cmp
push
mov
inc
or
out
ret
stos
mov
xor
xor
hlt
imul
int3
pop
add
jg
aam
test
xor
(bad)
xchg
pop
loopne
hlt
and
jns
jnp
xchg
in
push
cmp
cmp
sbb
aad
sbb
or
adc
jno
ins
add
jbe
ja
fstp
movs
pop
bound
neg
inc
jmp
cmc
ins
jmp
jne
dec
gs
push
cdq
in
adc
retf
and
cmp
adc
repz
and
sbb
lds
jp
push
fst
mov
movs
shl
adc
mov
inc
dec
arpl
cld
int3
rcl
shl
(bad)
mov
lahf
lods
sbb
out
into
hlt
pop
dec
dec
ffree
rcl
aam
pop
jae
jp
pop
data16
loope
call
adc
sbb
in
ret
dec
repnz
nop
and
add
cmp
mov
stos
test
add
mov
fldcw
(bad)
pop
inc
jne
je
pop
into
push
xor
jae
pop
xchg
call
leave
fistp
mov
pop
(bad)
add
sub
in
test
fidivr
pop
dec
mov
movs
pop
push
aas
xchg
dec
inc
adc
call
fild
dec
outs
call
fdiv
push
mov
popa
push
fs
scas
test
push
xor
mov
xchg
inc
inc
ins
jl
add
js
je
adc
aas
js
cmc
xchg
out
adc
test
sbb
ret
jb
inc
ins
adc
mov
pop
jle
std
ret
cmp
xchg
sbb
xor
retf
push
inc
push
jg
mov
dec
jge
xchg
mov
es
or
inc
pushf
out
xor
push
add
jnp
fwait
add
xchg
and
sub
loope
sbb
inc
(bad)
fdiv
fs
fdiv
push
loop
and
lea
add
xchg
(bad)
out
outs
sbb
or
add
xchg
out
cvtps2pd
fistp
push
ret
cmp
sub
push
pop
dec
imul
xchg
mov
int3
mov
(bad)
in
fwait
mov
mov
mov
imul
loope
(bad)
call
cli
je
xor
adc
adc
sub
mov
out
push
pop
add
adc
aas
sbb
or
outs
xlat
adc
xchg
jg
inc
jnp
movs
push
or
xchg
adc
push
clc
mov
jg
pop
shl
into
fisub
mov
repz
fnstenv
and
push
or
fidivr
inc
int
aas
dec
jecxz
push
push
sub
not
into
fwait
sub
nop
xor
and
leave
mov
mov
mov
lds
adc
xor
mov
addr16
test
retf
popa
xor
fsincos
(bad)
push
pop
and
loopne
inc
lock
fsub
cmps
jne
jb
dec
jle
inc
loop
sub
cmp
pop
adc
add
fsubrp
fnstsw
jmp
adc
jnp
adc
xchg
dec
jp
and
push
jg
inc
aad
adc
scas
movs
pushf
std
mov
in
adc
scas
xchg
sub
inc
mov
dec
les
pop
inc
outs
adc
pop
nop
dec
inc
inc
retf
dec
ret
xchg
in
test
stc
jno
out
jmp
outs
mov
mov
jge
pop
mov
movs
fist
inc
dec
ins
loop
add
xchg
xchg
jne
out
imul
test
mov
dec
push
and
les
rep
js
inc
add
dec
add
sahf
scas
nop
(bad)
movs
cdq
retf
xor
inc
cdq
out
dec
adc
xchg
loope
popa
or
ja
xchg
pop
test
call
and
cld
sub
push
jecxz
push
add
daa
retf
call
xor
push
mov
sbb
dec
lock
rcl
push
bound
retf
aam
push
jns
mov
sub
pop
pop
pop
jmp
(bad)
jbe
scas
xchg
aaa
scas
or
adc
pop
xor
cmp
in
out
cld
xor
in
jg
jmp
adc
daa
inc
into
push
push
test
popf
mov
test
inc
mov
scas
dec
shl
sub
adc
jmp
pop
xor
push
dec
and
jmp
in
(bad)
mov
and
push
add
movs
dec
cmp
out
push
sub
fxam
push
shl
inc
mov
dec
pop
mov
repz
ror
ins
cmp
push
adc
outs
movs
jmp
cmp
repz
or
test
int3
loopne
cs
inc
or
sub
adc
cmc
outs
dec
stos
sbb
sbb
ret
push
outs
(bad)
out
cmc
push
or
sbb
mov
add
pop
aam
iret
loopne
adc
rcr
or
mov
retf
jge
bound
cli
jns
adc
call
push
pop
bound
and
(bad)
push
jbe
cwde
jl
bound
aas
leave
ds
sub
xchg
sub
sub
imul
fidivr
pop
sar
lds
cmp
movs
mov
jge
pop
inc
xchg
inc
aaa
jmp
mov
cmp
sub
mov
sub
inc
adc
fidivr
dec
out
dec
ds
and
mov
jb
add
out
cs
enter
mov
push
rcr
add
ror
push
sbb
jg
mov
(bad)
not
bound
add
(bad)
or
aad
test
mov
(bad)
neg
jbe
mov
pop
fadd
daa
daa
jle
add
add
into
bound
xor
fiadd
daa
mov
or
loope
adc
loope
test
das
push
dec
xchg
retf
loope
js
hlt
xchg
dec
and
cmp
movs
jecxz
out
and
mov
dec
scas
repnz
out
xchg
sbb
sahf
mov
push
cmps
mov
popa
dec
int3
dec
gs
scas
or
rol
mov
mov
test
push
adc
xchg
mov
xchg
jp
mov
fwait
data16
mov
gs
out
sbb
sub
add
cmps
xchg
cmp
leave
leave
ja
push
mov
and
add
loopne
mov
jg
dec
xor
inc
dec
push
jmp
adc
and
jb
xchg
push
dec
out
sub
xchg
jo
cwde
mov
loopne
adc
jmp
iret
add
sbb
dec
and
jnp
movs
pushf
stos
jne
sbb
repnz
jp
mov
push
jp
add
inc
mov
es
jge
sub
push
out
pusha
mov
adc
sbb
aaa
jo
push
jb
cmp
ror
pop
sbb
shr
push
in
das
jne
sbb
mov
adc
ins
xchg
cmc
fsub
jns
and
popf
lds
repz
mov
inc
sahf
ror
in
and
jne
(bad)
out
inc
ss
or
(bad)
mov
xchg
les
cmp
and
adc
push
(bad)
pop
ret
xchg
mov
pop
jb
mov
dec
mov
ins
mov
ja
test
iret
fild
scas
sbb
jo
lahf
jmp
clc
push
stos
xchg
inc
pop
mov
(bad)
loop
mov
sub
mov
dec
int
mov
jbe
xchg
dec
jns
cmp
or
mov
call
dec
mov
outs
lock
push
bnd
xchg
fcomp
lahf
ret
stos
shl
rcr
mov
retf
jae
fnstcw
push
stos
mov
xlat
add
sub
xor
nop
and
loop
hlt
add
ins
lods
adc
or
mov
jge
std
test
mov
ja
icebp
add
and
push
fisubr
inc
das
mov
xchg
fwait
sub
jnp
lods
fsubp
push
out
and
mov
hlt
iret
mov
and
addr16
mov
pop
popa
retf
cli
lea
scas
gs
es
mov
pop
dec
in
xor
fimul
xchg
xchg
rcr
sar
dec
cli
pop
lods
mov
lea
sahf
call
or
repnz
xchg
pop
pop
push
mov
jl
je
neg
xchg
and
stc
fstp
jle
icebp
jnp
lea
add
pop
jmp
(bad)
outs
inc
call
push
or
and
mov
adc
push
mov
sbb
jno
add
xor
adc
xchg
cmp
and
or
mov
sub
sbb
adc
leave
pop
js
lock
push
cwde
push
ret
dec
ficomp
pop
dec
add
adc
pop
sub
cs
jbe
mov
mov
pop
mov
stc
shl
movs
shr
and
repnz
sbb
pop
icebp
in
fiadd
push
push
add
fnstenv
stc
ins
jne
shl
clc
scas
cmp
ret
shr
test
rol
adc
ins
pop
inc
add
or
and
jl
loope
rcr
(bad)
cli
scas
mov
pushf
icebp
mov
adc
lods
xor
add
mov
and
into
xor
dec
inc
add
pusha
push
movs
push
xor
jo
fucomip
dec
daa
adc
stos
aaa
push
mov
bswap
mov
pcmpgtb
fisttp
sbb
lds
pop
mov
out
sbb
jb
mov
retf
call
xor
dec
loop
sti
mov
xor
retf
rcl
mov
pop
hlt
pop
cs
xchg
mov
aad
dec
lock
loope
scas
popf
mov
(bad)
pop
div
cs
cmp
dec
int3
dec
sbb
xchg
add
shl
fs
pop
pop
call
mov
xor
mov
jne
xchg
jg
outs
retf
cmp
fucom
inc
div
bound
out
cdq
sbb
into
add
inc
lock
je
mov
pop
or
gs
(bad)
push
adc
dec
fisub
ds
fdivr
data16
rcr
and
idiv
(bad)
xor
push
mov
xchg
sub
popa
ror
and
xchg
jnp
jb
dec
inc
mov
xor
push
stc
or
ds
repz
mov
mov
dec
inc
or
loope
xchg
jle
mov
jo
cdq
jae
sti
mov
jbe
mov
call
out
mov
xor
popf
sub
sub
jns
or
sub
mov
in
push
dec
in
add
push
add
xlat
cld
jmp
adc
cmp
imul
xchg
stc
jmp
push
fsub
out
cwde
int
lds
aam
mov
cmp
out
out
jo
subps
out
jg
mov
push
call
adc
je
adc
lods
mov
cmps
lods
jecxz
gs
push
jg
mov
cld
jecxz
mov
jp
sub
or
jl
hlt
xchg
cmp
(bad)
in
sti
jge
inc
or
rcr
cmp
inc
repz
daa
fnstenv
jae
ret
repz
dec
call
mov
(bad)
sub
aas
in
xor
add
mov
mov
push
dec
(bad)
mov
stos
mov
pop
or
into
std
or
pop
sub
test
ficom
in
jbe
mov
test
movs
outs
mov
imul
xor
cmp
test
dec
cmp
retf
sbb
popf
data16
rcl
jmp
mov
xor
cld
int3
fwait
push
jp
jne
fisub
cs
push
std
ins
stos
or
pusha
xor
lods
mov
scas
(bad)
fdivr
or
addr16
outs
adc
sbb
aas
jo
ds
imul
ret
loop
call
xlat
pushf
jmp
cmps
cmc
or
xchg
test
inc
cld
mul
inc
cmp
jb
xchg
xchg
add
retf
pop
fnstcw
call
sbb
mov
cmp
stos
in
loope
inc
xchg
dec
retf
popf
sbb
and
sbb
push
hlt
out
in
(bad)
ficom
shr
call
mov
fisttp
mov
mov
jecxz
pusha
adc
jo
movs
cmp
dec
lods
pop
data16
out
aas
or
push
div
pop
mov
cmp
mov
push
push
add
inc
and
jae
sub
jmp
imul
pop
mov
neg
aas
pop
es
mov
push
or
gs
data16
cld
mov
test
mov
push
loopne
dec
icebp
xchg
rol
pop
test
ret
mov
clc
dec
xchg
push
je
pusha
mov
iret
add
sub
or
inc
push
xor
jg
pusha
fwait
not
jb
pop
push
mov
outs
sub
aaa
daa
imul
les
cld
enter
xor
cmps
stos
scas
fwait
push
cmps
movs
or
cwde
(bad)
and
dec
or
lahf
pop
mov
cmp
lods
xchg
push
jno
jae
jnp
mov
sar
pop
xor
inc
and
or
int
push
mov
inc
call
or
push
fsubr
scas
push
lea
pop
cmp
or
(bad)
stc
inc
pushf
xor
xor
scas
or
push
inc
outs
aas
loope
lock
inc
mov
fsub
add
sbb
mov
data16
sub
cmps
ja
xchg
inc
jno
add
xchg
iret
dec
fnstsw
sub
push
mov
dec
and
(bad)
push
push
cmp
jne
mov
jns
cmp
les
loopne
fadd
add
es
int
pop
pop
xor
(bad)
aam
dec
popa
push
jns
gs
xchg
xor
pushf
iret
fisttp
mov
xor
js
fcom
ins
enter
lods
and
mov
stos
popa
xchg
pusha
int
aaa
movs
outs
mov
push
leave
in
ss
pushf
sti
push
pop
sbb
leave
xchg
stos
das
pop
sbb
sbb
std
in
jno
cwde
cmp
wbinvd
push
xchg
aam
repnz
sbb
jmp
fucomi
pop
test
mov
inc
(bad)
cmps
jmp
fnstenv
adc
mov
call
mov
(bad)
sbb
or
std
into
push
fnstsw
data16
in
mov
jp
ins
test
movs
cdq
out
cs
lahf
jnp
ficomp
cmp
sbb
repnz
mov
dec
ror
test
out
lods
vmread
sahf
cmp
xor
mov
and
rcl
mov
and
push
jnp
sbb
sub
jmp
cmps
sbb
test
ret
or
mov
stos
stos
pop
or
retf
test
push
add
add
xlat
sbb
pop
ss
je
mov
cmp
int
shl
fisttp
mov
xchg
jle
repnz
cs
xlat
imul
mov
int3
jle
adc
jns
aad
lahf
ret
pcmpeqw
scas
clc
shl
or
inc
clc
shl
data16
and
mul
adc
mov
mov
inc
or
sar
mov
push
ss
test
jge
stc
ss
inc
cmps
mov
add
sbb
jbe
enter
je
pop
ds
xchg
jno
shl
and
test
dec
(bad)
jp
rcl
les
test
sbb
out
mov
cmp
push
dec
popa
enter
jbe
xor
data16
and
jle
je
mov
out
push
mov
jns
clc
jns
or
imul
(bad)
jo
jl
add
mov
xor
ret
das
test
dec
rol
std
stos
push
cmp
movs
test
pop
imul
cdq
mov
xchg
xor
mov
and
push
and
and
dec
loopne
hlt
sar
sbb
aad
test
shl
jae
rcl
pop
add
fadd
xchg
dec
retf
lea
in
retf
xlat
push
stc
fild
and
push
mov
shr
or
hlt
pop
js
not
xchg
jno
sub
mov
hlt
es
or
jno
aam
push
setle
jp
inc
in
(bad)
sub
pop
mov
adc
cmp
jo
jnp
leave
mov
shl
jmp
bound
add
or
inc
pop
ss
sbb
add
das
out
mov
jae
daa
pop
pop
push
push
adc
and
jmp
cmps
pop
push
xchg
lods
leave
adc
es
push
pop
cli
jns
sub
add
dec
dec
or
mov
mov
int
xchg
pushf
fstp
mov
push
mov
sub
iret
cmps
shr
jmp
(bad)
lods
das
jl
fdiv
jmp
(bad)
repz
ret
adc
xor
test
inc
mov
and
mov
in
sbb
test
(bad)
or
or
ret
(bad)
fidiv
fsubrp
and
inc
sub
aaa
mov
add
movs
repz
cmp
or
pop
or
mov
cmp
and
stos
movs
mov
fs
mov
(bad)
jle
xchg
mov
loop
mov
retf
pop
aas
mov
aad
jl
leave
mov
and
cwde
in
jo
mov
add
mov
aas
and
cs
jne
mov
pop
aas
repz
inc
neg
or
int3
outs
mov
iret
jecxz
jecxz
sub
movs
dec
mov
push
cld
outs
aaa
lahf
xor
add
loope
mov
mov
sub
cmps
and
inc
xchg
jb
mov
xchg
jg
(bad)
cmp
jae
aaa
sti
repnz
outs
dec
xchg
(bad)
dec
cmp
push
(bad)
pop
jno
leave
(bad)
mov
clc
jne
mov
add
adc
cmp
repnz
mov
(bad)
sbb
xchg
mov
or
fist
in
cmp
or
pop
push
jge
mov
add
popf
mov
push
sub
sbb
pop
add
mov
cmp
cwde
test
mov
test
jmp
stos
out
xor
rcl
sbb
push
adc
and
xor
or
movs
add
mov
rcr
imul
cmps
adc
sub
add
lock
inc
push
lea
mov
xchg
(bad)
lock
int
pushf
adc
in
add
xchg
call
pusha
inc
push
jae
xchg
sbb
cld
call
aad
call
fbld
sbb
je
jle
hlt
jo
fisub
inc
cli
pop
enter
and
mov
ins
sub
pop
sbb
pusha
xor
movs
fidivr
sbb
fwait
jge
xchg
sub
xchg
xchg
mov
and
xchg
jns
mov
mov
cs
popa
and
mov
dec
es
xchg
pop
and
cmp
mov
test
xor
pop
and
scas
nop
outs
sbb
and
cs
add
jns
movs
je
scas
ins
rol
cmp
aad
adc
mov
je
or
mov
dec
adc
(bad)
fdivp
pop
push
sbb
inc
mov
idiv
mov
cmp
js
pushf
test
and
pop
and
rcr
cwde
ds
test
mov
inc
inc
mov
push
dec
test
aaa
adc
scas
sbb
push
xchg
(bad)
mov
hlt
popa
sbb
mov
dec
xchg
daa
or
xchg
jle
push
stos
or
dec
pop
in
push
ins
adc
pusha
xchg
sub
dec
jp
push
mov
daa
aaa
pop
fcmove
das
jne
sub
es
adc
test
pop
(bad)
(bad)
fmul
mov
clc
push
sub
fstp
push
dec
adc
mov
pop
rol
fcom
push
div
and
mov
add
and
add
dec
cmp
adc
or
inc
in
aaa
popf
jne
xchg
add
pop
lods
rol
ficom
or
js
sub
mov
sbb
ret
or
lods
nop
hlt
push
cli
retw
(bad)
sub
or
adc
add
fisub
addr16
loop
and
loopne
add
add
cmp
pop
jbe
movs
and
cmp
fstp
sub
ret
test
dec
or
mov
or
and
mov
pop
bnd
mov
fstp
sub
pop
cli
and
sbb
mov
lahf
xor
test
push
(bad)
push
mov
retf
iret
jne
add
movs
fisttp
addr16
fisub
sub
in
sub
sub
ror
bnd
push
add
xchg
jg
rcl
jmp
sar
jne
fnstenv
repz
push
data16
sbb
mov
ret
cmp
xor
rcl
jb
dec
out
ja
mov
cmp
pop
push
pusha
pop
jmp
xchg
mov
retf
and
int
mov
cdq
mov
ret
and
dec
xchg
shr
pop
cdq
jge
xor
ins
jbe
mov
pop
xchg
jle
push
leave
(bad)
aam
(bad)
or
cs
adc
fisubr
pop
outs
fiadd
dec
adc
jmp
icebp
cli
loope
dec
push
int3
scas
pop
mov
sub
cwde
aas
jnp
or
fscale
lods
std
jns
dec
shr
mov
enter
or
mov
jmp
jmp
mov
sub
jmp
pop
loop
push
jmp
add
jecxz
mov
jo
add
dec
inc
sbb
stos
neg
inc
ins
cmp
and
test
stos
adc
call
je
hlt
xor
jp
loop
xlat
mov
test
xchg
shl
jecxz
retw
dec
dec
(bad)
mov
dec
xor
neg
sbb
mov
loop
sub
push
scas
jmp
jnp
call
hlt
cmp
dec
or
jle
test
mov
icebp
and
or
inc
bound
out
stos
(bad)
xor
mov
jle
jo
xchg
fisubr
daa
jmp
into
outs
sub
fst
push
stos
add
inc
dec
push
sahf
dec
aam
(bad)
push
adc
sbb
(bad)
in
mov
cld
inc
out
xor
test
das
ins
adc
je
pop
push
bound
int3
add
cs
add
outs
push
fwait
retf
or
repz
(bad)
push
xor
movs
adc
pop
das
lahf
loopne
icebp
push
and
pop
shl
add
jb
mov
cmp
mov
sbb
rcr
push
dec
rcr
jae
mov
pop
pop
sub
pop
(bad)
pusha
jp
scas
icebp
jl
lods
push
rcr
dec
push
jge
push
push
test
imul
movs
lods
mov
fwait
jecxz
jl
xor
into
cmps
fcomip
arpl
sub
xor
out
cmp
xor
leave
sar
mov
(bad)
fnstsw
fnstcw
mov
(bad)
daa
add
cs
jl
pusha
pop
xor
dec
add
mov
enter
ins
jmp
xor
and
add
jns
or
mov
sub
dec
ja
retf
push
xchg
ficomp
not
je
neg
push
ret
shl
dec
jnp
loopne
pop
jbe
mov
jo
inc
movs
adc
inc
imul
loope
jns
sbb
sub
in
loope
pusha
jne
mov
xchg
in
xor
and
adc
push
xlat
lods
inc
mov
xor
mov
pop
int3
or
add
cmp
dec
ror
dec
mov
test
dec
add
clc
lock
inc
ss
push
(bad)
outs
xor
sbb
mov
es
mov
sahf
out
mov
sbb
popa
mov
inc
imul
cmp
jmp
pop
xchg
mov
rol
cmps
sti
jo
adc
add
mov
mov
and
in
dec
fimul
bound
fisttp
sahf
shl
fucomp
mov
sub
jne
rol
adc
mov
xlat
retf
ins
(bad)
cmp
movs
push
jns
xor
cmp
push
les
jmp
adc
sbb
enter
lahf
les
lods
cli
test
fs
push
outs
test
movs
pop
movs
hlt
mov
adc
jb
jbe
adc
cwde
pop
inc
mov
and
je
xor
lods
fstp
jbe
push
xor
jp
jmp
pushf
mov
in
daa
xor
mov
sbb
mov
mov
mov
dec
pop
and
test
lods
inc
aaa
imul
cmc
div
repz
push
sahf
cdq
xchg
(bad)
imul
or
inc
adc
iret
mov
rol
sub
xchg
fdivr
scas
sub
cli
jo
xchg
daa
mov
lock
ret
nop
jmp
xchg
stc
fild
movs
call
mov
push
adc
(bad)
sahf
xor
xchg
push
jne
sahf
(bad)
js
in
out
call
int
inc
dec
pusha
clc
pop
mov
pop
jae
dec
mov
pop
scas
movs
(bad)
push
or
dec
mov
inc
mov
(bad)
mov
and
push
loop
fisub
pop
mov
push
xor
or
or
ds
mov
sub
in
shl
jbe
in
xchg
test
out
dec
mov
sahf
add
scas
ret
dec
loope
leave
pop
mov
loopne
and
jns
and
(bad)
mov
sbb
sub
ins
imul
test
popa
or
xchg
(bad)
addr16
repz
popa
mov
cmp
and
sbb
xchg
pop
pusha
sbb
iret
cli
add
cli
nop
adc
push
(bad)
repz
cdq
xchg
jbe
dec
jmp
jo
pop
mov
jg
mov
movs
cdq
jmp
(bad)
sbb
mov
aad
pop
cmp
cld
fistp
or
inc
mov
es
jb
and
push
mov
dec
adc
adc
mov
into
outs
(bad)
stos
lods
mov
sbb
mov
cs
push
inc
stos
test
pop
cmps
or
ds
pop
imul
scas
repz
and
stc
movs
ins
loop
push
jne
xchg
inc
mov
cmp
and
mov
mov
xchg
xor
ss
test
movs
push
mov
dec
pop
arpl
nop
call
bnd
pop
aas
dec
ins
adc
and
add
sbb
mov
xchg
enter
outs
mov
or
push
push
jl
repnz
(bad)
dec
arpl
ss
cs
inc
xor
xor
add
xor
mov
outs
lahf
lock
or
retf
jo
leave
loopne
rol
sbb
push
stos
sub
into
mov
or
dec
mov
dec
repnz
fs
into
xchg
inc
or
pop
jno
sub
lds
stos
test
bound
clc
mov
jecxz
xor
out
shl
dec
xchg
je
mov
rcr
cmp
dec
lahf
cmc
xchg
inc
pop
add
ror
pop
mov
push
dec
lahf
mov
fwait
adc
push
cli
sub
hlt
rol
xor
ins
je
mov
xor
mov
cdq
ror
cmp
mov
pop
data16
scas
sub
pusha
push
jmp
ss
adc
add
imul
leave
imul
adc
lds
js
jno
or
jle
mov
xlat
jmp
push
out
hlt
(bad)
movs
cmp
and
in
mov
mov
daa
xchg
out
jle
or
loope
xor
jmp
imul
(bad)
cmc
sbb
cdq
fdiv
xor
cmps
hlt
addr16
xor
mov
mov
call
and
mov
dec
dec
dec
jmp
std
pop
xchg
repnz
arpl
mov
fcmovnb
aam
popf
mov
cmp
xor
cmp
mov
mov
push
push
mov
outs
mov
push
pop
sar
xor
ficomp
sub
bound
mov
scas
ret
or
push
pop
iret
dec
adc
or
sbb
cmps
sub
in
aaa
daa
adc
dec
shr
iret
sar
mov
aad
xchg
jo
jns
stos
adc
dec
push
sub
jae
adc
fidiv
and
xor
ins
xchg
sbb
jecxz
push
push
dec
mov
dec
rcl
mov
mov
cmc
sub
cmps
jecxz
or
jns
test
add
sbb
xor
mov
aad
rcr
xor
sub
aaa
out
jl
add
sbb
fsubr
int3
mov
or
aaa
fldcw
ins
outs
adc
retf
inc
(bad)
(bad)
jmp
ds
mov
or
popa
sub
mov
popa
ins
mov
(bad)
cmp
fdivr
xchg
pslld
ret
ja
mov
(bad)
push
mov
int3
cmp
(bad)
jae
or
push
adc
mov
mov
sahf
jae
and
pop
add
movs
sub
push
sbb
push
push
aam
popf
or
mov
sub
jecxz
in
fcomp
add
xchg
ins
aaa
pop
inc
test
fcom
sti
ja
cmp
int3
mov
xor
ja
mov
inc
cmp
pop
xchg
add
xlat
test
sbb
xor
(bad)
xchg
and
int3
mov
loope
shr
mov
dec
sahf
movs
push
inc
fcomp
or
lock
sar
jb
add
hlt
ja
arpl
inc
out
das
cmps
sbb
mov
imul
rol
pop
mov
jno
sbb
inc
fidiv
cmps
xor
ins
out
test
inc
push
sub
xchg
mov
sub
les
xor
inc
sub
push
sub
lock
xor
out
fild
std
fist
xor
sbb
xchg
or
cmp
jae
ds
imul
pop
dec
cmp
ror
cli
push
mov
cdq
mov
mov
and
pop
outs
dec
shl
rol
data16
test
aad
cmp
lahf
add
sbb
loop
add
add
idiv
pop
sbb
pop
scas
sti
add
sub
mov
pop
mov
or
pop
jecxz
mov
push
push
adc
inc
mov
in
rcr
mov
movs
jecxz
loope
test
fmulp
fmul
xchg
adc
mov
popf
cmp
imul
enter
inc
pop
fstp
enter
enter
adc
arpl
push
call
sar
je
xchg
cmps
xchg
xchg
into
dec
es
mov
dec
(bad)
push
pushf
test
(bad)
mov
sub
shl
mov
test
jns
xrelease
jns
(bad)
shr
retf
inc
inc
or
xchg
cmc
shl
xchg
or
nop
int
dec
dec
pop
sub
mov
xchg
sti
adc
jl
xchg
sub
out
mov
aam
mov
(bad)
jne
xor
mov
mov
pop
cli
and
mov
mov
dec
push
lods
push
adc
cmc
dec
mov
pop
mov
pop
sub
ret
loope
int3
xor
movhps
into
mov
jbe
mov
jecxz
push
xchg
das
pop
sti
into
pop
popf
jno
lock
and
inc
pop
mov
xor
sti
leave
cdq
cmps
mov
xor
sar
pop
call
inc
xor
loopne
push
in
clc
inc
daa
std
jno
shr
rcl
mov
push
lods
mov
xchg
aaa
adc
cmps
in
movs
enter
push
mov
sub
rcl
push
cmc
test
out
pop
ss
data16
out
sub
(bad)
adc
in
call
mov
repz
xlat
push
test
jae
int3
mov
sbb
imul
xchg
sub
pusha
pop
adc
pop
into
add
and
rcr
pop
adc
test
dec
mov
ss
mov
outs
in
pushf
jp
outs
cwde
jmp
inc
ficomp
hlt
xchg
lahf
jp
movs
clc
lea
adc
jnp
add
jl
xchg
or
and
rol
jg
(bad)
dec
(bad)
sub
in
add
(bad)
xor
in
push
inc
dec
sbb
imul
push
ret
cmp
xchg
pop
inc
mov
mov
xchg
jno
data16
call
loopne
(bad)
aaa
retf
adc
xchg
mov
js
sbb
xchg
iret
sbb
adc
xchg
movs
(bad)
mov
push
push
push
(bad)
cmp
pop
outs
add
jecxz
push
out
cld
mov
inc
cmps
jp
pop
xchg
ds
rcr
mov
push
cdq
mov
lock
dec
in
pop
mov
sbb
sbb
push
add
xor
adc
add
mov
ss
ins
lds
stos
push
(bad)
jns
jno
sub
pop
(bad)
ins
sbb
fdiv
movs
or
outs
and
lods
(bad)
pop
clc
std
mov
in
loopne
adc
sahf
repnz
cmp
test
fwait
dec
jmp
jbe
push
fiadd
pop
add
adc
jo
jo
jne
adc
mov
loop
cwde
xchg
inc
loope
fiadd
neg
stos
call
jl
test
xor
jno
mov
sahf
xchg
sbb
jae
jmp
adc
daa
mov
xor
jecxz
in
ret
loope
mov
in
mov
call
jp
mov
hlt
scas
pop
out
pop
in
adc
inc
sbb
ror
(bad)
push
in
rol
mov
(bad)
aad
lock
out
jbe
xchg
inc
jo
xchg
ret
aas
cmp
xor
out
push
jnp
and
sub
or
scas
arpl
or
sbb
inc
std
xchg
scas
mov
pop
or
pop
pop
and
mov
mov
or
push
dec
in
jge
dec
mov
std
jmp
ins
sbb
loope
ficom
sub
ds
fistp
ficomp
and
hlt
and
adc
stos
or
popf
inc
jmp
or
mov
push
sub
ja
movs
gs
in
out
pop
adc
push
or
gs
shr
loopne
dec
adc
cmp
fidivr
stos
in
jmp
xchg
add
and
sub
cmp
xor
pop
(bad)
dec
shl
fstp
add
xchg
mov
in
loope
ss
sbb
xchg
jp
mov
test
in
outs
(bad)
dec
out
add
pop
pop
xchg
push
repnz
sbb
fdivr
out
jmp
jnp
call
xor
mov
jl
pop
add
xchg
repnz
inc
and
mov
shl
cmp
scas
push
cmp
cmp
movs
daa
mov
aaa
iret
mov
jp
(bad)
sbb
jo
or
(bad)
jns
repnz
xchg
sub
out
xor
mov
pop
xor
cmp
(bad)
cmp
cs
aam
adc
sub
mov
cdq
aaa
out
and
mov
sbb
dec
xchg
fst
inc
in
fdiv
mov
aam
xor
test
in
gs
mov
pop
inc
jmp
out
push
mov
jae
adc
jo
(bad)
mov
rcr
out
adc
repz
bound
aam
inc
dec
xchg
xchg
xor
push
cmove
push
push
add
loope
pop
rcl
dec
mov
sbb
(bad)
mov
adc
or
sbb
or
call
aad
out
xor
scas
ret
sbb
push
in
shl
je
shl
or
mov
or
mov
in
cmp
mov
jno
rcl
add
add
or
inc
shl
sub
mov
jle
sub
adc
test
cmp
sbb
iret
xchg
cli
xor
mov
and
adc
ins
popa
adc
es
sub
pop
cmp
dec
push
xchg
add
call
xchg
shl
(bad)
das
xchg
xor
mov
dec
cmps
xor
and
adc
jp
mov
dec
push
shr
mov
cmp
mov
mov
sbb
cmp
std
add
xchg
out
rcl
stos
xchg
ficom
push
lock
ins
and
lahf
stc
dec
gs
nop
aas
fisub
lods
out
fnstcw
popf
pop
fwait
test
(bad)
ja
mov
adc
mov
and
int3
jae
sti
pop
cmp
jg
xlat
pop
ret
pushf
xor
hlt
cli
xchg
je
jne
(bad)
call
add
test
sbb
mov
(bad)
test
mov
shr
fistp
pop
fwait
addr16
sbb
mov
cld
xchg
mov
xchg
sub
mov
repnz
icebp
pop
jge
sbb
pop
retf
sbb
mov
icebp
xor
mov
into
pop
cmc
sbb
loop
sub
mov
adc
adc
push
dec
mov
fadd
cld
mov
xchg
imul
(bad)
les
mov
xlat
adc
push
jecxz
clc
sub
xchg
sub
enter
mov
mov
dec
push
dec
or
xor
pop
popa
outs
and
test
dec
inc
or
pusha
push
ja
bound
xchg
shr
mov
cmp
pop
mov
mov
test
jo
xchg
jmp
xchg
sub
jmp
push
gs
and
in
test
(bad)
push
lahf
inc
xchg
call
xchg
jae
and
and
call
add
mov
(bad)
data16
xchg
sahf
mov
pushf
aad
push
popf
inc
mov
sbb
dec
repnz
xor
sub
call
mov
mov
mov
daa
out
jl
sub
imul
fistp
movs
mov
or
push
inc
scas
cmps
cwde
arpl
das
adc
aas
fisubr
out
scas
mov
js
or
adc
neg
xor
call
sti
pop
aad
sub
pusha
jns
stos
mov
inc
push
stc
ja
(bad)
jg
mov
in
or
sahf
xor
push
dec
jl
or
sbb
xchg
sub
mov
test
outs
adc
cdq
xchg
push
test
outs
sbb
jge
or
in
in
test
aas
push
xchg
pop
rol
scas
adc
js
lock
scas
popf
xchg
push
loop
add
fistp
push
add
sub
dec
cmp
and
test
push
pop
sahf
xor
mov
xchg
mov
mov
push
pop
retf
loopne
scas
cld
inc
je
stos
mov
adc
inc
mov
pop
xor
aas
and
cmp
test
gs
push
cmp
jb
sbb
mov
mov
xor
sub
ds
fisubr
dec
pusha
ret
jno
outs
mov
mov
dec
or
xor
fcomi
adc
pop
push
jge
cld
xor
lea
push
movs
mov
xchg
jbe
rol
jg
or
add
sbb
jmp
sti
lock
mov
mov
jmp
repz
pushf
mov
lods
add
not
mov
cld
mov
int3
mov
int
xchg
or
lock
lahf
loopne
in
and
pushf
cmp
mov
sbb
out
add
mov
push
stos
shl
gs
std
daa
pop
scas
dec
rol
push
lea
(bad)
lods
xor
pop
mov
sub
fst
or
xor
fnsave
lahf
jns
xchg
xchg
shl
push
ret
fdiv
add
cwde
dec
pop
inc
clc
cmp
xchg
jmp
sub
mov
popf
hlt
or
call
lock
push
and
retf
push
jmp
jmp
push
js
(bad)
fbstp
inc
push
push
adc
test
jb
push
mov
popa
and
push
out
jb
dec
pop
sbb
push
mov
fimul
jnp
arpl
push
pop
xlat
jle
sub
out
ja
push
out
add
mov
cs
push
loopne
(bad)
repnz
mov
fisubr
mov
inc
popf
mov
xchg
sbb
test
xchg
xchg
repnz
ja
mov
adc
(bad)
cld
xor
inc
cli
fwait
in
adc
lahf
repnz
adc
in
xchg
adc
daa
inc
dec
jbe
(bad)
fcom
cmps
(bad)
call
cmp
xor
sbb
jo
(bad)
aas
stc
daa
cli
xchg
cs
and
sbb
cmp
call
xchg
fimul
pop
and
xor
sbb
(bad)
aam
mov
and
out
or
add
mov
lods
mov
sub
xchg
xchg
jle
sbb
jb
xchg
xchg
or
inc
dec
mov
adc
cmp
xor
outs
or
xlat
ins
das
cmp
mov
push
les
adc
cld
adc
aaa
(bad)
jno
mov
repz
xchg
push
sub
xor
js
xor
mov
pop
xlat
xchg
cmp
js
jne
adc
mov
repz
add
jle
mov
adc
jmp
xor
mov
scas
adc
pop
mov
setne
adc
call
and
sub
adc
add
push
xlat
(bad)
pop
adc
mov
dec
mov
mov
cmp
push
cmps
cdq
mov
les
inc
dec
inc
xchg
in
mov
lea
lds
out
cwde
jns
scas
add
clc
sub
push
rol
push
sbb
push
inc
mov
cmc
fcmovnu
pop
mov
add
cmp
dec
ror
jb
cmps
dec
es
and
add
mov
jno
mov
jae
loop
or
add
test
cli
mov
ins
shl
out
jbe
leave
mov
xchg
mov
pop
ret
xor
or
dec
aas
pop
sub
mov
shr
xchg
stos
xchg
push
sbb
cwde
pop
mov
xchg
mov
inc
sbb
dec
add
push
out
ror
cmps
movs
js
fcmovbe
jnp
in
imul
lock
pop
jno
lock
pop
jmp
lahf
cwde
imul
xlat
dec
ss
stos
push
push
pusha
stos
ret
push
mov
retf
rcl
ins
aad
je
lds
pop
mov
xchg
retf
jp
mov
mov
sub
mov
shl
or
add
adc
mov
cmp
je
mov
or
jae
rcr
vmovmskps
and
pusha
and
and
ret
sbb
dec
mov
jo
bnd
push
jecxz
xchg
enter
pusha
or
or
daa
in
fadd
sub
jo
push
lock
add
int
xlat
outs
jp
adc
dec
repnz
fstp
mov
lods
mov
cwde
leave
dec
cmp
inc
bound
xchg
das
(bad)
or
sbb
bound
push
ins
rol
out
ja
add
push
imul
stc
or
pop
cmp
xor
push
xor
leave
and
mov
ror
psrad
sti
cdq
test
ss
push
lods
hlt
movs
(bad)
not
(bad)
cmps
sbb
mov
pop
test
mov
cmc
xchg
sbb
popf
add
xchg
cmps
loopne
xchg
jl
inc
sbb
bound
clc
scas
sub
into
cmp
inc
int3
es
and
mov
mov
mov
cmp
adc
mov
pop
mov
xchg
cmps
sti
mov
xlat
call
jbe
inc
cmovle
or
xor
push
test
jp
aaa
(bad)
aaa
movs
cli
xor
cli
pushf
adc
sbb
mov
ss
call
aad
cs
inc
addr16
cmp
pop
mov
pop
bound
sti
ror
add
push
test
retf
sbb
sti
inc
sahf
rol
test
xor
rcl
sub
fdivr
sbb
sub
mov
aad
mov
jnp
push
mov
in
add
outs
movs
mov
fisttp
jns
pop
push
mov
xchg
cmp
call
inc
mov
inc
daa
xchg
fwait
in
or
fidiv
push
imul
mov
inc
sub
outs
xchg
(bad)
out
cmc
clc
mov
jmp
dec
add
pop
popa
cmp
jno
loope
lahf
ins
jmp
push
clc
rol
ds
ins
xchg
cmp
adc
sbb
pop
sub
imul
cli
sbb
mov
cmc
jg
mov
ja
jmp
inc
lock
fnstsw
shr
popa
xchg
adc
sub
into
add
add
adc
mov
pop
sub
cmp
pop
add
fs
xchg
clc
push
mov
addr16
xor
push
mov
add
cs
lahf
int
loope
adc
push
cs
stos
lea
ret
outs
add
scas
sbb
jp
shl
xor
or
pop
xchg
adc
in
jmp
add
cmps
(bad)
mov
jecxz
jno
mov
inc
push
mul
out
popa
jae
popf
and
test
mov
inc
sar
mov
popa
jno
and
retf
retf
shl
in
adc
push
outs
xchg
push
cli
stos
test
mov
sbb
nop
cdq
retf
jno
mov
ds
push
sti
dec
xor
mov
retf
jmp
(bad)
sbb
(bad)
or
push
push
mov
retf
push
mov
jmp
fidivr
inc
cli
and
pop
inc
in
fist
fld
std
and
aad
mov
xchg
add
push
and
and
lods
mov
mov
leave
jle
and
into
lds
es
jnp
fdivr
xchg
mov
ret
inc
test
daa
loope
nop
xchg
rcr
xor
fmul
dec
stos
dec
mov
adc
xor
lea
aaa
test
in
les
cmc
sbb
sbb
jecxz
das
sub
sbb
xchg
out
(bad)
in
add
stos
fld
pop
aam
daa
popa
addr16
imul
or
pop
and
sub
shl
push
pop
repz
jle
mov
iret
loope
inc
xchg
scas
add
jbe
and
sub
mov
mov
push
inc
xor
cld
sbb
adc
sbb
add
jbe
pop
fist
hlt
jne
jne
rol
popf
jne
jo
xor
jge
xor
cdq
stos
retf
in
push
pop
jg
int3
jae
jns
xchg
hlt
inc
mov
lahf
mov
scas
sbb
xchg
and
mov
ror
enter
mov
iret
pusha
psubq
cmps
movs
lods
adc
mov
or
retf
retf
push
xchg
mov
xchg
mov
movs
into
les
push
add
and
or
inc
call
gs
push
mov
mov
push
cmp
push
push
lods
(bad)
inc
and
add
call
cmp
in
fwait
mov
jno
push
xor
dec
fimul
mov
test
test
push
sub
ret
xchg
lods
pop
xor
xor
push
or
fldenv
ins
icebp
pushf
retf
xor
in
(bad)
jnp
int3
popf
push
stc
out
cmps
mov
rol
dec
dec
ror
push
sbb
ret
xchg
mov
xchg
imul
xor
pop
cdq
fsubp
add
mov
dec
popa
dec
call
nop
sub
cmps
leave
push
and
je
pop
sbb
mov
nop
cdq
xchg
push
enter
retf
pop
or
hlt
add
test
shr
ins
sbb
xor
push
inc
inc
cmp
(bad)
sub
pop
addr16
jne
retf
xor
dec
in
je
aam
jbe
sbb
mov
in
pop
repnz
or
push
xchg
in
sti
pop
pop
leave
push
or
jl
inc
push
sbb
push
adc
daa
jo
jb
lock
cli
mov
movs
inc
das
push
jbe
ins
xor
add
mov
adc
add
xchg
jae
dec
into
push
rcr
(bad)
ret
cmp
xor
mov
gs
xchg
aad
imul
mov
nop
fmul
cmc
jp
idiv
and
xchg
pop
dec
dec
xchg
lods
push
cld
sahf
xchg
sbb
mov
push
or
cmps
in
sti
fs
int
xchg
or
push
je
sbb
or
mov
ins
out
pop
rcl
jp
dec
push
dec
fld
lahf
sub
cmp
adc
test
or
sub
add
pop
mov
adc
adc
call
pop
int3
bound
and
popa
sti
cmp
cmp
xor
pop
ret
lock
adc
inc
pusha
or
xor
cmc
test
test
push
sub
out
jp
outs
jnp
clc
fsubr
xchg
xor
stos
mov
add
inc
cmp
mov
and
sar
js
jmp
jne
adc
add
pusha
dec
mov
enter
fld
ins
aaa
cmp
stos
stos
les
scas
sbb
mov
ret
mov
into
data16
ins
cmp
dec
jbe
out
arpl
push
xchg
jb
rol
int3
stos
add
push
loop
dec
mov
dec
inc
enter
push
mov
js
loope
rcl
xchg
ins
jecxz
scas
push
mov
sub
mov
ret
scas
dec
repz
enter
call
push
adc
mov
mov
and
jnp
loop
cmc
push
push
fsub
push
shr
xchg
cwde
in
loop
cmps
pop
pop
pop
int
shr
jl
jno
test
mov
int
adc
mov
add
adc
push
xchg
pop
mov
pop
lea
ret
pop
in
addr16
xlat
pop
cld
mov
scas
mov
and
inc
dec
inc
je
in
push
xchg
sar
add
pop
(bad)
adc
and
or
ds
faddp
rcr
or
stos
add
je
sbb
jno
mov
inc
jge
mov
nop
sbb
scas
cmc
dec
xchg
test
inc
pop
mov
idiv
leave
add
adc
cmp
mov
jmp
jno
add
enter
(bad)
adc
push
aad
pop
cmp
ins
(bad)
in
in
mov
xchg
hlt
or
out
xor
inc
ins
in
or
xchg
jmp
cmp
add
xchg
int
loope
int3
in
jbe
add
lock
mov
adc
jbe
xor
xor
jp
sub
ss
inc
psubusb
les
dec
push
jne
push
fwait
aam
fs
cmp
mov
inc
dec
in
mov
leave
int
inc
cmps
mov
adc
push
cmc
xor
xor
retf
jo
or
sub
jne
and
loop
fldcw
jb
scas
jp
sub
fpatan
xor
and
xchg
cmp
xor
xchg
pop
je
mov
scas
mov
leave
push
xor
sbb
dec
mov
js
sbb
jbe
hlt
outs
jbe
cmp
and
(bad)
dec
fisubr
mov
ds
xchg
add
and
adc
cs
add
stos
outs
sbb
ds
fwait
popf
clc
rol
ror
add
dec
js
push
xor
in
mov
mul
repnz
aad
int
arpl
ficomp
jp
mov
pop
cmps
in
xchg
call
xlat
cld
hlt
cmps
in
mov
or
or
ret
cmp
cwde
daa
xchg
jae
cmp
add
cs
adc
mov
xor
ret
xor
inc
dec
mov
push
jle
sbb
clc
mov
add
shl
xchg
mov
inc
xchg
scas
in
mov
gs
int3
cmp
rcr
push
xor
cdq
jmp
aas
cmps
sbb
and
push
jne
cmp
stos
pop
add
push
dec
inc
outs
mov
fistp
mov
push
(bad)
retf
mov
jmp
(bad)
loop
js
dec
ret
pop
cmp
retf
adc
cmp
test
sar
daa
and
int
(bad)
and
repz
repz
xor
int
dec
cmp
fdiv
retf
cmp
jbe
dec
adc
out
scas
pop
gs
sbb
arpl
std
fnstenv
pusha
retf
cmp
push
cmp
into
inc
mov
xchg
es
clc
sbb
outs
mov
cli
imul
dec
xchg
jecxz
push
rep
mov
dec
jl
jp
cld
mov
sbb
sub
clc
lahf
imul
cmp
mov
in
inc
xchg
lea
cmp
mov
sbb
aas
or
jg
jne
ds
push
mov
hlt
test
cvttps2pi
jne
scas
movs
or
mov
ror
mov
and
shr
stc
pushf
add
mov
push
aam
inc
add
data16
jmp
fstp
cmp
fcomp
cmp
sub
loopne
inc
into
inc
and
fwait
mov
call
lods
jb
stc
fild
xor
call
add
push
mov
rol
and
sbb
loop
adc
sub
(bad)
lea
out
or
ds
lea
add
mov
nop
(bad)
hlt
mov
ss
mov
jmp
and
jno
mov
push
add
jg
(bad)
and
dec
(bad)
scas
sbb
leave
xchg
mov
outs
push
sub
xchg
cld
or
pop
pop
mov
pop
pop
retf
sub
inc
call
push
mov
fcomp
inc
lock
and
rcl
outs
das
xor
inc
ret
sub
dec
stos
in
mov
xchg
js
js
pop
inc
jecxz
popf
or
sbb
add
retf
cmp
mov
mov
push
mov
ins
mov
push
pop
push
(bad)
mov
(bad)
js
mov
mov
push
sbb
and
mov
pop
movs
jae
inc
adc
mov
out
mov
test
aam
mov
and
jns
pop
retf
loopne
pop
enter
sub
retf
ds
mov
adc
test
sub
ret
mov
cmp
xchg
sub
mov
or
jo
ins
enter
pop
out
enter
pushf
pop
(bad)
(bad)
out
out
imul
retf
(bad)
add
repnz
add
bound
cmc
scas
mov
mov
pop
repz
mov
add
iret
sub
push
scas
mov
fldcw
sti
mov
push
jmp
xor
lods
ds
ror
je
loop
pop
jmp
mov
pop
int3
shl
mov
cmp
jb
xor
ins
daa
test
add
pop
jne
test
xor
inc
into
fcmovne
loope
scas
stc
and
sub
xchg
out
fisttp
fs
add
call
push
sbb
cmp
jl
ja
xor
sbb
mov
outs
mov
setb
nop
or
dec
mov
leave
pop
sbb
pop
cmp
out
fs
add
call
gs
inc
js
jb
pop
pusha
jl
je
cmp
imul
and
mov
pop
inc
push
fwait
rcr
dec
loope
cwde
arpl
push
sbb
mov
in
iret
(bad)
or
sbb
inc
lock
neg
push
sar
xchg
pop
mov
pop
rol
lea
cmps
jae
loopne
(bad)
imul
fisttp
cmps
or
dec
(bad)
adc
dec
xchg
fcmovnu
ror
mov
inc
and
push
sub
cmp
mov
jns
mov
ins
int
add
sub
xchg
jb
ins
call
mov
and
pop
test
jge
loopne
jne
pop
mov
mov
aaa
or
scas
pop
or
pop
jge
iret
push
scas
int
pop
jb
mov
push
in
push
cmp
adc
dec
div
dec
cmp
mov
enter
or
jb
in
jle
add
vunpcklps
movs
test
or
pop
mov
xor
aaa
xor
cmp
fwait
jge
cld
lock
push
ss
mov
cmc
std
rol
scas
pop
inc
add
jecxz
mov
pop
aas
and
cmc
sub
jle
mul
mov
shl
cld
jle
repnz
and
test
(bad)
and
adc
push
or
dec
es
adc
xchg
sub
add
dec
in
pop
mov
cs
das
cdq
xchg
test
mov
ret
fidiv
rol
iret
inc
or
mov
daa
cmp
rcr
and
dec
pop
jge
xchg
lahf
and
sti
test
sbb
and
cld
pop
int3
fisubr
xchg
adc
cwde
call
mov
fs
je
int3
fimul
cld
cmp
jmp
dec
imul
daa
js
jmp
test
xor
dec
adc
or
sbb
scas
mov
ins
test
pop
fst
sub
fs
xchg
data16
fwait
sbb
pusha
mov
xor
cs
mov
(bad)
pop
push
inc
and
test
adc
dec
pushf
imul
cld
popa
test
(bad)
daa
xchg
pop
je
push
adc
pop
xchg
in
push
adc
mov
xor
ins
inc
sbb
outs
pop
xor
ret
sbb
push
xor
cmps
sbb
imul
rol
mov
adc
pusha
pusha
inc
(bad)
jg
retf
sar
or
sbb
adc
es
je
lea
js
stos
dec
inc
out
outs
or
push
int3
lea
and
pop
mov
jmp
bound
enter
test
dec
ret
aam
aam
mov
and
test
test
fwait
mov
inc
ja
movs
aas
pop
loope
inc
jno
mov
sbb
data16
jne
cdq
in
sub
sub
rcr
pcmpgtd
retf
push
inc
mov
loope
ds
sbb
pushf
cmc
(bad)
aam
fidiv
aad
je
lods
inc
jmp
cmc
dec
outs
iret
in
lds
xor
jmp
xchg
cld
mov
stos
xchg
nop
add
jo
push
loope
cmp
cmc
adc
loope
or
cmp
push
ret
jp
(bad)
lods
pop
adc
lahf
je
push
fwait
cdq
or
sahf
out
adc
pop
sti
sahf
add
mov
test
shr
push
dec
das
jns
xchg
or
mov
mov
jg
jge
mov
call
jbe
mov
test
add
cmps
adc
add
mov
push
iret
jl
mov
fdivr
mov
(bad)
fmul
push
pop
mov
fadd
leave
cmp
cmp
push
push
jge
fidivr
out
retf
inc
pop
sub
outs
pop
pop
pop
mov
xor
dec
jle
pop
loope
add
or
nop
sub
cs
sbb
jp
xchg
dec
jg
test
fst
test
add
dec
rcl
sbb
sbb
adc
rol
loope
fwait
cmp
add
dec
nop
sub
ja
sahf
xor
div
cmp
pop
outs
iret
and
inc
push
aam
jmp
xlat
mov
dec
push
dec
mov
out
and
jmp
mov
jp
mov
push
arpl
(bad)
lahf
out
sbb
mov
lahf
in
in
lods
or
push
push
jmp
test
std
add
(bad)
fsubr
sbb
sar
and
cwde
outs
sub
or
dec
or
mov
pop
xchg
pusha
adc
inc
lods
cs
jno
mov
pop
jne
mov
ror
dec
push
jbe
cmps
jmp
mov
popa
std
or
cli
jne
stos
stos
out
sgdtd
pop
(bad)
in
imul
or
icebp
push
mov
loop
aam
cld
fidiv
and
imul
and
add
adc
jge
ja
ds
inc
jne
pop
mov
pusha
iret
icebp
popa
inc
sbb
push
lahf
movs
pop
pop
out
call
lods
enter
aam
fs
ret
popf
stc
xchg
xchg
in
icebp
shl
stc
in
(bad)
out
int
shr
in
sbb
push
sahf
xchg
and
mov
sub
jp
xchg
fisub
and
and
aam
add
adc
cld
sub
lea
bnd
fnstcw
scas
push
inc
ret
sahf
sub
pop
and
sub
pop
into
ss
jp
pop
test
inc
jbe
fsubp
mov
pop
adc
push
adc
push
mov
ja
xchg
lds
dec
xor
mov
push
ds
aaa
mov
popa
leave
adc
mov
mov
add
cmps
ds
add
es
scas
into
xchg
dec
retf
jae
or
or
xchg
outs
wrmsr
pop
mov
hlt
stos
mov
xchg
or
cmp
(bad)
pop
sub
jmp
xchg
ins
cld
cld
in
leave
push
push
sub
pop
movs
adc
mov
movs
xlat
retf
sti
popa
in
xor
or
xor
adc
xor
jmp
cmp
fcom
lds
and
and
jns
xchg
xchg
es
pop
(bad)
adc
dec
pop
mov
inc
jae
mov
stos
and
or
inc
test
and
adc
or
leave
sar
cmp
adc
out
jmp
fcmovu
and
or
scas
mov
pop
jns
inc
cmp
jae
pop
jge
mov
push
dec
jle
adc
and
add
cld
cmp
inc
sub
mul
sbb
sbb
imul
sub
repz
mov
rol
leave
xor
out
lea
or
mov
cmp
aad
fld
arpl
cmps
cmps
xor
push
rol
es
add
xchg
or
fnstsw
dec
cmp
push
pop
(bad)
add
dec
(bad)
sahf
pop
push
jge
test
ds
js
movs
sub
xor
nop
fcmovu
dec
sbb
mov
(bad)
in
scas
adc
or
cmp
push
or
inc
cmp
stos
fst
and
mov
outs
leave
or
push
pop
pop
shr
outs
ds
xchg
out
adc
fdiv
pop
xchg
(bad)
jmp
and
dec
test
fst
mov
inc
jns
cmps
out
repnz
mov
(bad)
xchg
test
popa
push
push
dec
outs
mov
sar
scas
mov
xchg
push
icebp
gs
aam
xor
push
inc
call
call
sbb
test
out
pop
icebp
mov
or
jmp
push
sub
adc
shl
mov
jno
es
cmc
ficom
adc
xchg
xor
setg
sub
stos
aad
jno
gs
adc
mov
iret
sahf
es
dec
sbb
pop
iret
ret
cmp
pop
lahf
aam
pop
add
mov
lahf
je
jmp
mov
xchg
into
into
jno
enter
shl
dec
mov
dec
pop
ror
pop
add
outs
nop
(bad)
pusha
pushf
in
mov
outs
sub
outs
out
jmp
rol
sti
shl
lea
rcr
dec
daa
pop
cmp
sbb
adc
xor
call
(bad)
fwait
leave
adc
xchg
cmp
adc
test
dec
push
dec
test
pop
js
pop
sub
sub
pop
xchg
dec
arpl
xchg
call
mov
mov
es
push
mov
mov
push
mov
xchg
add
outs
pop
jge
cld
std
push
dec
mov
cmp
fsub
pop
loop
xchg
xor
iret
loope
mov
cmps
es
fmul
jb
and
xchg
add
dec
adc
shr
outs
xchg
adc
stc
push
retf
sub
xchg
add
out
sahf
pop
movs
je
out
enter
js
push
adc
cmp
adc
sbb
int3
add
ficom
ins
ret
and
add
loope
or
push
cmps
jmp
sahf
movs
sar
push
(bad)
arpl
mov
sub
stos
hlt
in
sub
int3
loopne
add
(bad)
hlt
xchg
(bad)
mov
(bad)
rcr
sbb
(bad)
pop
ror
cli
adc
out
inc
fist
or
and
cdq
retf
jns
add
push
mov
cli
lods
stos
rcl
inc
into
mov
iret
sbb
sahf
arpl
pop
jbe
add
pusha
hlt
xchg
hlt
movs
sub
shr
push
in
jl
or
add
mov
xor
push
dec
test
sbb
pop
dec
into
mov
test
or
push
jg
dec
lods
dec
xchg
pop
pop
push
mov
adc
cdq
std
cmp
in
dec
jns
or
mov
lahf
mov
test
(bad)
out
test
xchg
pusha
arpl
adc
out
aas
cmp
and
pop
call
scas
xchg
push
mov
push
sahf
or
into
dec
push
xchg
add
nop
or
pop
fwait
mov
(bad)
xchg
cld
sbb
mov
enter
cld
aam
mov
push
pop
push
sbb
sbb
xor
mov
xor
push
push
(bad)
cli
addr16
mov
dec
pop
sub
pop
inc
(bad)
sub
jle
test
fld
xchg
sub
mov
repnz
dec
inc
movlhps
mov
je
push
(bad)
push
aam
hlt
rcl
add
jecxz
lahf
push
sar
popa
test
ret
bswap
jmp
jns
enter
and
aas
loop
gs
push
dec
fisubr
inc
pop
cdq
out
lods
jp
cdq
cs
lock
mov
fiadd
ret
stos
fcmovbe
jge
pop
push
pop
pop
adc
mov
fwait
dec
ss
jae
ins
or
sahf
xchg
pop
dec
aas
mov
shl
adc
push
ins
pop
das
sub
stos
jne
mov
sub
pop
sbb
gs
push
push
outs
pop
popa
mov
in
or
push
adc
sub
in
aam
jl
in
mov
mov
jae
mov
push
push
call
xchg
mov
mov
out
sahf
xor
stos
retf
rol
mov
bound
int
push
mov
popa
ja
sub
rcr
push
mov
adc
cwde
push
xchg
out
pop
popf
mov
mov
jp
scas
pop
ins
lods
leave
mov
mov
(bad)
test
fstp
jmp
movs
cmp
xchg
(bad)
pop
retf
mov
inc
push
sub
addr16
and
xchg
arpl
jne
push
jae
popa
pop
clc
lahf
fnstcw
add
daa
jmp
(bad)
mov
cmp
popf
or
dec
inc
std
outs
jnp
inc
xor
xchg
(bad)
mov
mov
aas
retf
mov
movs
or
aaa
ss
push
(bad)
int
fsub
xchg
retf
movs
or
rcl
in
inc
sbb
iret
pop
inc
mov
sar
inc
xlat
cmc
sbb
pop
sbb
mov
mov
push
pop
imul
popa
lock
je
fnsave
cmp
icebp
rcr
mov
lea
jmp
push
add
ins
inc
add
ja
mov
xchg
sbb
mov
mov
xor
scas
jb
push
fmul
add
add
inc
(bad)
pop
std
hlt
pslld
imul
inc
repnz
(bad)
cmp
mov
xlat
mov
inc
in
enter
add
inc
rol
lock
and
dec
(bad)
xor
or
icebp
pop
shl
add
mov
popf
int
and
xchg
sar
jne
fwait
mov
xor
adc
fst
or
xor
dec
sub
jae
xchg
int3
rcl
fistp
(bad)
cmp
movs
mov
xor
inc
push
push
sub
dec
imul
push
mov
lods
hlt
enter
outs
stos
fcomp
pop
push
mov
pop
xor
add
mov
lods
icebp
xchg
or
outs
(bad)
xor
cmp
add
pop
pop
xchg
les
xchg
inc
jmp
jae
sbb
adc
dec
test
into
mov
ficomp
jo
xlat
cmc
or
sbb
arpl
and
call
enter
sahf
pop
jecxz
cdq
pop
(bad)
cmc
mov
call
push
sbb
ror
sar
fcom
mov
add
outs
std
int
xor
icebp
add
pop
mov
mov
mov
repnz
sub
xor
jno
sub
mov
ret
mov
xor
push
add
push
inc
cmps
inc
add
or
push
shr
jg
add
imul
aad
das
or
scas
mov
lea
outs
jg
pop
xchg
mov
outs
push
jnp
inc
js
jne
loopne
test
add
in
cmp
xlat
and
dec
mov
test
ja
leave
loopne
out
clc
div
imul
ja
psllw
and
lods
inc
and
mov
mov
sub
pusha
mov
out
jo
push
adc
inc
xor
in
in
int3
xchg
and
out
call
mov
xchg
popf
outs
xchg
xor
cmp
jbe
pop
ins
repz
or
icebp
outs
cmps
pop
inc
rcl
inc
clc
mov
pop
lock
out
cmp
inc
(bad)
mov
shr
cmp
dec
fs
loope
fistp
in
add
jb
es
loope
xor
jmp
out
aam
inc
add
das
in
and
iret
ins
push
or
jp
pusha
dec
aaa
and
or
mov
outs
pop
lock
cli
mov
test
jmp
push
sbb
mov
mov
retf
xor
dec
or
mov
dec
push
push
adc
loope
xchg
ficomp
je
sbb
loopne
add
rcr
std
fld
test
xor
mov
popa
and
mov
js
sahf
add
sub
sbb
retf
call
(bad)
loopne
and
dec
ror
retf
icebp
repz
stos
out
sbb
or
mov
je
mov
out
mov
scas
idiv
lods
arpl
xchg
sahf
into
push
mov
inc
aam
xor
cmp
(bad)
pop
ss
out
xor
mov
xlat
(bad)
in
lods
jecxz
enter
int
jge
mov
imul
mov
or
add
push
add
push
into
(bad)
or
cmps
aas
jae
or
xchg
call
bound
fcmovbe
jbe
(bad)
test
pop
sub
clc
add
leave
push
sbb
sbb
jbe
test
fs
cmp
(bad)
cli
mov
fstp
pop
mov
adc
(bad)
in
xchg
xchg
xor
repz
idiv
dec
stc
pusha
cdq
gs
push
cmps
fsubr
push
mov
std
ret
and
inc
stos
call
add
jle
mov
aaa
pop
cmp
push
push
nop
and
xor
(bad)
sub
ror
outs
sbb
jbe
ffree
test
imul
cmp
loop
pop
loope
test
xchg
xchg
(bad)
xlat
pop
cld
and
mov
adc
lock
ins
aam
jae
or
pop
dec
xchg
add
icebp
or
pop
pop
push
retf
mov
push
inc
xor
nop
popa
pop
inc
adc
jecxz
retf
lods
jl
push
add
inc
fst
xchg
lahf
mov
push
mov
ret
cld
ror
cdq
pop
rcr
inc
int3
arpl
(bad)
std
dec
pop
fwait
int
lahf
loopne
outs
in
mov
arpl
cmp
scas
xchg
dec
pop
fs
push
loopne
cdq
bound
retf
(bad)
pop
icebp
mov
out
cmp
clc
in
inc
pushf
ficom
(bad)
lea
ss
push
pushf
add
retf
xor
adc
dec
mov
add
mov
fistp
dec
xor
test
xor
add
pop
into
sbb
imul
mov
imul
mov
or
sahf
mov
in
stos
loopne
imul
push
adc
gs
mov
cmc
pop
sbb
mov
inc
cmps
imul
out
scas
sbb
adc
cs
adc
fnstsw
add
addr16
aas
jle
and
in
pop
cmps
pop
push
or
and
sbb
outs
inc
fiadd
rcr
test
sbb
clc
jle
(bad)
sub
test
cmps
adc
mov
inc
fld
xor
pop
xor
scas
cs
jo
cmp
int3
mov
clc
lock
std
ja
mov
xchg
lahf
sbb
in
mov
cs
push
pop
mov
mov
out
arpl
pop
sub
mov
push
add
dec
lds
xchg
(bad)
arpl
cmc
dec
test
pop
pop
aaa
shl
loop
jmp
iret
in
rol
imul
shl
mov
repnz
adc
xlat
mov
(bad)
ja
js
and
aas
pop
fwait
xchg
cmps
inc
cmp
mov
xchg
aas
or
and
repnz
mov
ds
cmp
(bad)
adc
ror
jg
inc
mov
xchg
sbb
dec
add
push
pushf
loop
pop
pop
mov
push
test
pop
(bad)
movs
(bad)
data16
hlt
aaa
dec
mov
ret
mov
movs
xor
stos
mov
aam
sbb
xor
fwait
outs
fidiv
mov
repz
lahf
retf
inc
push
xor
iret
xchg
dec
pop
jbe
cdq
int
mov
fisub
sahf
fstp
icebp
xchg
sub
mov
xor
cli
or
jo
ins
mul
jae
lods
push
add
xchg
adc
std
pop
mov
add
stos
arpl
ins
xchg
pop
repnz
popf
call
das
or
(bad)
scas
xchg
cmps
out
jp
dec
out
pop
clc
mov
push
gs
das
out
sar
iret
cmc
std
inc
adc
mov
lahf
xchg
add
ror
mov
sbb
in
cli
out
out
das
iret
mov
cmp
xor
mov
jne
push
in
gs
dec
push
ds
cmps
ret
xor
sbb
inc
adc
out
inc
ror
mov
dec
inc
or
stos
les
dec
mov
pop
test
rcl
inc
xchg
sahf
pusha
arpl
inc
test
out
je
adc
sub
mov
sti
shl
in
and
push
jecxz
addr16
mov
dec
ror
std
xor
shl
leave
dec
dec
jo
retf
pop
stos
outs
and
dec
lock
push
enter
(bad)
stc
aam
cmp
pop
cmp
xor
adc
inc
mov
xchg
mov
adc
add
sbb
clc
fistp
mov
fstp
test
into
(bad)
mul
push
mov
mov
test
int3
(bad)
dec
scas
mov
sub
cdq
cdq
cmp
loopne
cmp
ins
xchg
les
cld
jmp
fiadd
jmp
jmp
call
pop
out
cdq
and
xchg
gs
xchg
xchg
dec
jmp
jne
push
lds
add
inc
sbb
popf
neg
sar
out
into
cmp
aas
stos
sti
pop
lahf
loopne
cmc
js
push
dec
jecxz
in
neg
dec
cmp
pop
mov
dec
wrmsr
dec
push
push
xchg
xchg
popa
and
bound
xchg
fdivr
bound
add
fwait
adc
stos
jnp
loopne
xchg
pushf
xchg
push
jo
cmps
jns
push
fcmovnb
mov
div
push
sahf
scas
dec
dec
fadd
sub
xchg
xchg
retf
adc
add
out
arpl
mov
mov
popf
shl
push
sar
fstp
movs
xor
mov
push
xor
xor
dec
sub
data16
xchg
cmp
addr16
ins
xchg
mov
stos
push
or
dec
xor
dec
clc
lea
mov
sbb
repnz
out
in
lock
jae
pop
inc
and
fwait
sbb
dec
push
scas
out
inc
test
movs
bound
add
daa
sub
or
mov
sahf
dec
pop
scas
xchg
pushf
jmp
fwait
dec
jp
and
cmc
imul
adc
dec
inc
add
bound
dec
cmp
ror
dec
sub
sub
cmp
mov
pxor
mov
out
push
stos
inc
adc
jg
pop
call
mov
add
pop
outs
cwde
mov
jno
fld
or
out
(bad)
int3
fimul
mov
enter
mov
cmp
fadd
add
xor
and
add
cmp
cld
jle
push
jb
(bad)
jae
mov
mov
xor
out
inc
push
es
jp
cli
ret
retf
les
inc
addr16
imul
cdq
sub
fdivr
(bad)
xor
xchg
out
push
jmp
adc
push
mov
or
pop
jmp
sub
fwait
cmp
in
sbb
or
inc
mov
push
jns
jae
aad
push
pop
push
ins
lods
retf
mov
fsub
shl
cmp
and
push
mov
mov
mov
rol
mov
adc
jno
shr
or
not
in
lock
jl
adc
cmp
inc
adc
dec
xchg
ret
inc
ins
inc
in
inc
dec
push
push
in
in
ror
and
dec
daa
jno
fisubr
mov
xor
or
or
pusha
mov
push
retf
sub
dec
int
dec
inc
das
jno
xchg
jno
(bad)
pusha
gs
stos
mov
test
stos
sub
xchg
(bad)
push
cmp
out
gs
sub
mov
and
sub
fdivr
mov
mov
shl
rol
int
mov
mov
sahf
inc
mov
(bad)
mov
xor
daa
loopne
arpl
sar
and
inc
cmp
mov
mov
and
(bad)
mov
jne
mov
aas
pop
std
jl
pop
test
scas
clc
adc
cmp
add
cld
rcr
call
repnz
mov
nop
out
xor
stos
ds
aaa
mov
xchg
fsubr
(bad)
bound
push
add
cli
xlat
mov
mov
(bad)
push
shr
add
imul
inc
pop
xchg
and
scas
test
(bad)
pop
push
ins
mov
cmp
cwde
jg
xchg
mov
and
das
pop
add
add
jno
push
cs
pop
push
shl
pop
bound
stos
or
lahf
test
pop
out
push
out
cmp
aam
ror
(bad)
xchg
dec
push
or
daa
rcl
cmps
sbb
pop
sub
adc
xchg
cmp
pop
(bad)
in
add
pop
push
shl
inc
mov
outs
pop
js
xchg
cmp
ins
dec
cmp
mov
sar
inc
pop
icebp
out
cwde
call
push
push
sub
cmp
pop
aaa
sbb
cmps
movs
pop
adc
jp
dec
test
loope
sbb
pusha
jmp
loop
pop
stos
mov
jb
repz
xor
push
test
inc
lahf
xor
cwde
not
xlat
and
nop
xor
sbb
jb
xchg
and
mov
ret
sbb
in
xlat
cmps
mov
pop
jno
fmul
pop
call
imul
xor
test
je
mov
stos
cmps
ins
mov
or
daa
addr16
into
mov
push
dec
push
daa
adc
sbb
bound
xchg
mov
jp
cli
sub
out
xor
or
adc
xchg
mov
adc
xor
retf
and
mov
jbe
repnz
push
sbb
(bad)
lahf
add
test
loopne
inc
stc
xchg
cli
cs
aam
xchg
(bad)
imul
jmp
xor
xchg
cmp
fistp
pop
add
push
or
pop
xor
mul
dec
mov
mov
cmp
pop
mov
imul
mov
iret
sbb
and
dec
je
lds
cmp
sbb
sbb
retf
push
mov
add
jmp
sub
push
popa
pop
xlat
cs
shr
(bad)
cmp
mov
jg
ret
adc
pop
cdq
sbb
mov
js
lods
xor
loopne
jge
and
jno
sti
mov
jae
mov
adc
bound
jmp
jmp
jge
out
jno
(bad)
sbb
jecxz
mov
ins
adc
out
test
sub
jnp
mov
je
test
fadd
mov
xor
mov
or
and
add
jp
lods
(bad)
das
adc
fstp
(bad)
pop
lods
fs
test
bound
sbb
xchg
fidivr
lock
les
adc
inc
imul
test
xchg
pop
jg
(bad)
gs
push
ret
fprem1
jne
cmc
inc
dec
cmp
xchg
or
sub
gs
jo
or
mov
push
mov
mov
add
inc
xchg
lock
mov
xchg
xchg
add
pop
sub
xchg
leave
or
push
ja
cmp
aaa
(bad)
je
sbb
repz
push
mov
aam
repz
(bad)
mov
leave
rcl
je
icebp
pop
mov
xchg
xor
test
xor
les
and
jg
lahf
sti
pop
jnp
cmp
mov
xchg
xchg
popa
push
inc
sbb
inc
(bad)
jnp
pop
dec
and
jecxz
call
cmp
inc
jmp
pop
in
mov
cwde
dec
lds
sub
push
add
fimul
into
or
movs
ret
les
adc
push
inc
push
cmp
jmp
retf
dec
mov
dec
into
cwde
dec
cmp
mov
(bad)
jo
rol
fstp
iret
pushf
icebp
mov
ins
out
(bad)
(bad)
stc
dec
sub
jnp
daa
les
mov
push
fcom
and
adc
test
jl
push
les
mov
cmc
adc
popf
xor
push
or
ret
mov
dec
sub
mov
jecxz
push
pop
iret
sub
cmp
out
fimul
dec
pushf
mov
xchg
cmp
cmp
jb
xchg
popf
mov
xchg
bound
(bad)
outs
adc
aaa
xchg
das
jne
mov
mov
sub
rol
data16
enter
xchg
movs
push
out
adc
push
int
js
(bad)
jae
rcr
test
shl
ds
mov
pop
push
jg
test
inc
sti
push
repnz
hlt
and
in
xchg
dec
je
adc
ja
iret
mov
mov
and
fld
arpl
mov
stos
repnz
dec
cli
add
mov
add
mov
ret
sub
xchg
xchg
mov
test
outs
int3
mov
pop
xor
sub
movs
xchg
mov
das
xchg
fs
rcr
mov
in
enter
popa
fcomp
cs
cmp
adc
sub
xchg
mov
sti
mov
das
cdq
mov
cmc
mov
mov
int3
sub
xchg
scas
call
arpl
cmp
pop
mov
loopne
push
push
ds
les
xor
xor
xor
movs
frndint
in
jnp
pop
push
add
(bad)
jmp
fldenv
fist
aaa
mov
pop
mov
mov
popa
jge
pop
sub
mov
sti
add
pop
pop
shl
inc
cmp
sti
ins
ins
mov
sub
add
jno
mov
mov
dec
fwait
pop
cmp
iret
push
es
leave
das
movs
fld
mov
push
icebp
lds
jbe
repnz
pop
mov
icebp
cmc
stos
ret
sti
bound
and
and
scas
cmp
and
fistp
jno
ins
bound
sub
add
scas
cmps
sub
div
push
mov
jns
test
sbb
inc
jns
test
retf
(bad)
adc
shl
sub
daa
xor
(bad)
shl
loopne
loop
sub
mov
push
push
test
ins
(bad)
sbb
cmp
je
jge
inc
mov
cmc
xor
loop
xlat
popf
xchg
repnz
sbb
cmp
mov
test
mov
adc
aaa
push
xor
ss
mov
mov
jmp
dec
adc
inc
or
sbb
mov
pop
dec
call
sbb
lea
or
xchg
addr16
mov
xchg
dec
xchg
mov
dec
jmp
sub
mov
cmp
mov
mov
adc
and
les
dec
popf
cmp
adc
adc
loop
jmp
retf
jmp
push
xor
inc
inc
repz
mov
daa
imul
fadd
ret
cmp
into
push
pop
jno
xor
lods
xor
xchg
push
cmps
imul
mov
nop
sbb
mov
in
into
or
sbb
or
(bad)
jbe
sub
dec
jecxz
fldcw
push
adc
push
sub
mov
retf
int3
jmp
xchg
jnp
addr16
add
fnsave
sbb
popf
cmps
pop
push
arpl
mov
adc
(bad)
mov
or
xchg
(bad)
cmp
adc
clc
pop
(bad)
xchg
out
mov
adc
xor
adc
(bad)
jo
sbb
push
mov
test
cmp
or
aad
jecxz
jbe
test
es
jg
ss
pop
push
imul
fisttp
daa
scas
retf
retf
add
scas
mov
aas
inc
sub
pop
cmp
mov
daa
sub
sbb
mov
(bad)
jecxz
mov
xor
stos
xchg
stos
adc
outs
hlt
(bad)
retf
mov
out
xchg
push
pop
add
out
cmps
(bad)
lds
cs
or
mov
dec
mov
js
sahf
ins
dec
rol
mov
(bad)
sbb
shr
jg
xchg
dec
sub
and
(bad)
jl
mov
jno
ins
adc
jge
test
(bad)
data16
out
cwde
inc
push
push
mov
enter
dec
cmp
xchg
push
jns
cmp
fstp
stos
cld
aaa
sahf
push
add
cmp
cmps
or
sbb
repz
push
imul
js
ss
mov
cld
sub
jb
mov
aad
movs
addr16
and
adc
mov
adc
add
xchg
jne
pop
mov
jne
ffree
and
lods
push
test
or
test
retf
xchg
jo
loope
mov
rcr
mov
retf
pause
scas
sbb
fcom
or
push
js
ficomp
test
and
jns
sub
icebp
add
popf
scas
outs
xchg
stos
jmp
(bad)
aas
dec
xor
pushf
shl
push
fs
mov
jecxz
ins
cmps
mov
jp
pop
add
sub
fsub
pop
das
push
ret
sub
inc
mov
test
jns
imul
xchg
not
clc
add
sbb
rol
repnz
or
pop
movs
jle
push
xchg
or
push
f2xm1
enter
push
or
pop
fistp
popf
xor
xchg
stos
rcr
push
jbe
stos
cmp
sahf
out
(bad)
jb
ins
faddp
and
and
in
imul
mov
ins
dec
xor
mov
popa
jmp
cmp
adc
adc
adc
retf
dec
cld
or
add
push
jnp
out
or
mov
stos
push
and
push
adc
retf
cwde
mov
shl
out
mov
push
ret
outs
sbb
pop
dec
inc
push
or
and
xor
xchg
ret
lods
pusha
sub
aas
dec
ret
bound
stos
dec
and
pop
ficomp
pusha
stos
xchg
mov
(bad)
jl
stos
pop
pop
mov
out
sbb
cwde
mov
out
pop
and
sub
xchg
repnz
mov
int
bound
sub
sub
sbb
jmp
or
or
xor
(bad)
fcomi
lahf
mov
idiv
dec
loope
movs
sbb
fbld
push
ss
sub
inc
inc
dec
add
or
daa
jo
push
jno
adc
mov
push
jbe
loop
push
(bad)
sahf
mov
add
xor
cld
retf
imul
jno
aaa
mov
lock
cdq
das
out
cdq
mov
mov
(bad)
(bad)
call
outs
inc
inc
popf
mov
hlt
xor
inc
cmp
adc
arpl
int3
dec
popa
fisubr
xchg
mov
es
fist
push
cdq
aaa
push
inc
test
or
add
xor
mov
and
cwde
dec
scas
or
ja
rcr
jp
mov
in
test
call
xchg
call
ficom
push
xchg
push
mov
jecxz
push
xchg
and
cld
add
sbb
or
mov
mov
dec
cmp
ret
sub
leave
jmp
scas
xchg
jecxz
sub
sbb
pusha
pop
cdq
mov
push
cmp
jns
mov
(bad)
in
ja
inc
out
js
hlt
xor
xor
nop
mov
ja
mov
jo
loope
test
pop
std
std
push
out
sbb
test
ret
push
and
lahf
sub
push
mov
inc
out
in
adc
or
cmps
sbb
mov
jno
mov
push
xor
and
test
inc
(bad)
jo
out
xchg
add
mov
jno
stc
or
sahf
cmp
pusha
aam
aad
push
xor
stc
lds
dec
int
pop
das
hlt
inc
jmp
jmp
div
ins
sub
lods
jecxz
aaa
sbb
aaa
fs
daa
xor
fnstcw
adc
jne
mov
adc
(bad)
rcr
push
mov
pop
jle
sbb
ss
leave
daa
addr16
and
dec
xchg
outs
add
and
add
cwde
data16
shl
sbb
out
jl
jmp
mov
sub
or
inc
ret
xchg
cmp
(bad)
test
add
popa
out
jmp
dec
cld
pop
pushf
jl
cmp
push
dec
cmp
mov
and
push
push
icebp
xor
inc
fisubr
push
sbb
(bad)
aad
mov
aas
fimul
push
shl
pushf
lods
mov
stc
push
and
mov
dec
sub
mov
pop
loopne
cld
nop
leave
xchg
dec
inc
test
mov
jne
loop
push
inc
add
xchg
out
mov
push
inc
fdivr
out
inc
sub
mov
xchg
rcr
xchg
mov
je
sar
call
outs
fld
test
in
sbb
cmp
mov
outs
ds
in
cmps
jbe
hlt
cs
and
int3
pop
nop
stos
mov
sbb
daa
push
(bad)
out
repnz
hlt
mov
movs
outs
mov
push
xchg
mov
cmp
xchg
addr16
inc
les
call
mov
xlat
cmps
cli
and
sub
mov
stc
lock
add
(bad)
push
test
xor
retf
lea
stos
out
ss
je
inc
int
imul
bound
shr
pop
and
idiv
mov
mov
pop
sub
mov
pop
push
push
mov
ins
jle
ror
and
inc
jle
mov
add
repnz
mov
mul
inc
add
je
pop
loop
fld
addr16
mov
mov
fcomp
mov
lahf
push
mov
xchg
dec
cmps
dec
cdq
(bad)
push
inc
xchg
vmwrite
push
mov
jne
pop
adc
jns
dec
cmp
mov
mov
out
pop
pop
sub
clc
aaa
jge
inc
and
jg
cwde
mov
add
dec
dec
mov
pop
cmp
loop
sbb
inc
cmp
adc
bound
or
cmp
inc
rol
add
xlat
sbb
push
mov
pusha
dec
jmp
pop
shl
mov
push
jo
jle
push
pusha
adc
arpl
add
outs
inc
hlt
ret
mov
inc
mov
(bad)
ja
outs
sub
sub
add
pop
repz
nop
push
sar
cmp
add
inc
out
mov
in
and
fsub
adc
jp
mov
or
lods
sub
sbb
adc
pop
sub
(bad)
and
mov
adc
test
test
mov
jns
and
test
xor
lahf
sbb
or
(bad)
aad
or
xlat
iret
mov
pop
hlt
enter
pop
mov
push
fisttp
mov
xchg
cmp
jp
cmps
adc
enter
and
sub
inc
and
clc
or
and
adc
mov
inc
jge
rcl
fdiv
pop
dec
jo
xchg
test
inc
mul
std
idiv
sbb
imul
sahf
xchg
mov
retf
fcmovne
pop
sti
add
outs
adc
mov
xor
pop
mov
fs
inc
cmp
dec
ror
add
popf
stos
int
mov
xor
cmps
cmps
(bad)
hlt
mov
clc
cmp
lods
sahf
leave
test
(bad)
stos
ds
in
shl
push
enter
out
enter
add
lock
bound
dec
ins
xchg
add
cmp
xor
lds
out
dec
into
test
cdq
inc
and
ja
pop
(bad)
imul
push
xchg
push
in
stc
repz
inc
outs
ja
cmps
jbe
cmp
xchg
call
jle
test
ffreep
lods
int
cmp
sub
mov
out
cmps
pop
les
ret
fisubr
lods
pop
es
jbe
mov
setle
xchg
lahf
pop
aad
lea
shl
sub
xchg
and
fwait
xchg
jbe
mov
adc
std
cmps
push
jmp
call
imul
jae
push
enter
ror
sbb
sub
push
dec
lds
mov
fld
push
dec
xlat
pop
imul
and
sub
mov
pop
cld
jmp
les
cli
cdq
test
leave
int3
iret
inc
add
or
mov
ret
jns
mov
push
inc
lods
adc
lahf
ds
imul
aaa
pop
add
adc
repnz
sahf
add
je
xchg
and
push
jle
dec
xchg
mov
cmp
push
out
xchg
jo
mov
adc
loopne
xchg
sub
cmp
int3
(bad)
out
mov
sub
dec
mov
or
js
mov
popa
jmp
push
or
pop
in
fdiv
push
cli
inc
in
or
pop
cmp
icebp
xor
xor
and
sbb
mov
sbb
jle
xchg
dec
inc
std
ins
cli
movs
push
jne
outs
adc
imul
in
int3
mov
sar
in
pusha
out
lds
xchg
push
outs
push
adc
xlat
mov
dec
sub
stos
hlt
aaa
adc
dec
mul
xchg
mov
or
in
dec
lea
(bad)
cmp
mov
je
cs
pushf
or
aaa
fcmovbe
jle
cmps
mov
and
lods
dec
je
rcl
push
cmp
push
sub
push
add
jae
jno
sub
out
mov
sub
mov
sub
gs
sbb
jp
add
pop
jge
gs
dec
ds
cmps
xchg
and
xor
and
mov
lock
hlt
mul
cld
retf
adc
xor
and
mov
dec
imul
jle
mov
mov
inc
xchg
jmp
mov
dec
loope
inc
inc
mov
sahf
call
pushf
sub
ret
retf
je
sti
sub
sar
imul
or
rcr
adc
fild
outs
out
jmp
(bad)
movs
ja
pop
out
repnz
pop
lods
dec
in
ja
cmp
and
pop
xchg
or
push
and
pop
dec
dec
test
pop
dec
inc
out
pop
cmp
jp
aas
call
call
mov
iret
xchg
pop
mov
fucom
jo
and
pop
pop
aas
scas
pop
stc
adc
xchg
xor
movs
aam
out
fidivr
pusha
mov
fcomp
movs
jbe
outs
cmps
cmp
mov
bnd
xor
loop
jmp
arpl
ds
add
repnz
loope
mov
cdq
dec
pop
(bad)
pop
pop
das
adc
dec
and
cld
mov
or
sub
arpl
jecxz
xor
shl
jne
push
sahf
call
movs
jae
jg
cmps
push
pop
sub
sbb
jmp
or
inc
mov
ins
sbb
ja
outs
adc
add
add
movs
or
xchg
push
test
mov
lods
jno
mov
and
rep
jns
add
cmps
loopne
(bad)
or
xor
in
push
add
cld
ds
loope
cmp
push
out
and
retf
and
ds
jecxz
jmp
mov
lds
pop
jge
scas
or
push
xor
scas
pop
out
mov
inc
test
xchg
loop
sub
mov
xchg
jnp
ja
out
xor
cli
push
loopne
pop
pushf
test
fadd
mov
push
add
mov
dec
xchg
jbe
jmp
pop
dec
pcmpeqw
pushf
inc
pop
rcl
mov
ret
xor
fist
inc
pop
xchg
mov
popf
js
inc
push
adc
das
mov
adc
xchg
jae
dec
ss
nop
push
push
and
add
push
add
es
popf
mov
and
xor
jp
pop
nop
push
lahf
adc
or
inc
xchg
push
test
sub
pop
mov
stos
pop
lods
out
arpl
dec
xchg
rcl
mov
xor
retf
movs
sub
cld
fstp
ins
arpl
lock
push
dec
addr16
jge
repz
out
adc
xor
jo
call
cmp
push
in
push
mov
mov
xor
cwde
or
imul
les
shl
sub
xchg
(bad)
fnstcw
fiadd
mov
add
add
cmp
jl
jae
pop
jmp
add
imul
fs
nop
fdiv
adc
pop
jg
mulps
ins
pop
push
push
cdq
jecxz
fld
sub
sub
repnz
inc
test
inc
scas
fistp
cld
int
sub
xor
test
les
sbb
aas
fisubr
aas
adc
cmp
and
inc
(bad)
clc
pop
and
les
lods
mov
inc
es
neg
add
xor
bound
bound
inc
mov
fnstcw
std
xchg
lahf
jne
enter
stos
xor
mul
out
push
in
lods
nop
sub
fwait
mov
fs
repz
jp
into
sub
aad
xor
movs
mov
inc
das
outs
mov
xor
jecxz
loop
adc
loope
(bad)
cmp
sbb
ret
aas
into
sub
pop
(bad)
lods
cwde
xchg
jo
add
icebp
pop
test
pop
(bad)
dec
xor
and
and
push
ret
sbb
sbb
out
pop
mov
in
fstp
imul
xchg
imul
fndisi(8087
ret
mov
sbb
xchg
dec
(bad)
js
movs
int3
stos
inc
mov
(bad)
out
and
or
jmp
popf
xor
std
out
add
clc
fiadd
mov
fwait
call
inc
xchg
jge
mov
out
adc
mov
scas
cli
cli
in
or
and
lods
sbb
pop
mov
jbe
in
fsubr
(bad)
and
dec
adc
dec
test
frstor
dec
cmp
or
xchg
add
shr
adc
cmp
jge
mov
push
cmp
pop
aas
sub
mov
pop
or
mov
repnz
push
or
pop
push
pop
adc
idiv
inc
iret
mov
call
shr
xor
test
mov
test
xchg
loope
inc
push
dec
xchg
sar
push
dec
(bad)
leave
loope
lods
xchg
cmp
int
scas
mov
clc
leave
in
adc
mov
or
dec
mov
cmp
(bad)
mov
fcomp
dec
call
(bad)
cmc
cmps
(bad)
mov
mov
(bad)
xchg
(bad)
push
adc
int
mov
das
sbb
inc
rcr
add
lock
cmp
cmc
out
sbb
jno
int
xor
stos
out
das
mov
inc
in
add
ds
pop
pop
nop
push
and
sbb
mov
xchg
(bad)
sub
daa
lahf
ret
fst
dec
mov
adc
in
cld
or
cmc
cdq
hlt
mov
rcl
xor
inc
xchg
sahf
push
popf
mov
out
lods
ins
(bad)
imul
or
jl
scas
cmc
cmp
jle
sbb
repz
lds
jo
test
mov
cmp
jno
test
sbb
scas
jp
push
adc
idiv
stos
(bad)
pop
rol
sbb
(bad)
push
and
jg
pop
xchg
repnz
xchg
mov
jl
pop
dec
int3
cdq
lock
push
add
(bad)
fwait
sub
mov
dec
xchg
dec
icebp
xchg
daa
jmp
inc
xor
fcmovb
mov
push
fistp
jns
outs
adc
pop
gs
nop
push
fs
enter
div
pusha
adc
ret
add
push
mov
lea
push
mov
aaa
outs
fucomp
fmul
rcr
xor
icebp
and
fcom
xchg
mov
(bad)
sti
(bad)
repz
es
ins
je
call
mov
inc
dec
mov
jp
sub
or
xchg
mov
push
(bad)
lds
(bad)
and
mov
int3
cmp
xchg
fwait
xor
mov
jbe
xor
fisub
dec
pop
mov
xchg
(bad)
scas
sar
pop
xor
xchg
out
popf
shr
cmp
jp
sub
xchg
test
iret
sbb
xor
cmp
iret
cmc
adc
cmp
in
das
scas
pop
dec
inc
sti
pop
outs
mov
(bad)
movs
loopne
and
je
aaa
pop
cwde
call
fisub
pop
sti
push
in
dec
mov
test
push
xor
sub
or
jg
inc
xchg
push
(bad)
cmp
int
cmp
mov
adc
xchg
stos
lahf
arpl
aas
ins
sbb
test
add
lock
xor
repz
(bad)
jo
scas
and
cdq
adc
mov
imul
fcom
stos
data16
jnp
push
cmp
add
rcl
xchg
xchg
mov
and
outs
rcr
push
xor
popa
call
ja
out
push
dec
jb
cld
push
inc
or
jno
icebp
xor
adc
int
cmc
cld
addr16
rcl
lods
test
xor
jecxz
fdivr
ret
push
daa
sahf
or
jne
adc
sub
lods
jnp
imul
dec
ret
jp
jl
jmp
cmp
sahf
xchg
scas
or
rol
inc
add
pop
js
push
mov
stc
mov
int
in
ja
pop
out
(bad)
adc
std
xlat
imul
push
xchg
or
sub
loopne
imul
lods
nop
cdq
cld
dec
mov
aas
leave
mov
in
add
ins
mov
ret
bnd
fbstp
fmulp
test
cmp
cmp
sub
xchg
sbb
jle
and
rcl
ss
loopne
adc
dec
push
(bad)
dec
fnsave
jl
jmp
sub
dec
cs
jle
fmul
mov
mov
imul
hlt
stos
rol
or
fucomp
push
retf
fild
dec
or
loopne
ins
int
mov
adc
mov
mov
arpl
lock
clc
js
icebp
sub
xor
in
mov
(bad)
mov
loopne
aad
es
cmp
in
outs
mov
popa
add
nop
pop
test
inc
loop
test
addr16
pop
mov
push
pop
ja
mov
mov
dec
pusha
cli
ins
icebp
jle
clc
xchg
mov
scas
mov
cmp
pop
jb
les
retf
mov
pop
fild
mov
or
fstp
or
push
sbb
addr16
fldl2e
loope
js
ds
pop
jbe
mov
ret
dec
cwde
push
or
ret
sbb
aam
scas
xchg
xchg
mov
out
mov
test
shr
stos
clc
inc
pop
sahf
jno
retf
in
mov
retf
imul
lea
ins
jns
pop
ss
push
retf
mov
jle
(bad)
mov
ret
sub
js
cmp
pushf
cmp
call
ins
popa
inc
mov
lods
jle
ds
or
xchg
stos
inc
not
add
push
les
pop
aaa
(bad)
add
jae
cs
dec
pop
(bad)
xlat
out
lahf
jecxz
in
add
cwde
(bad)
leave
nop
mov
push
in
add
and
push
frstor
sahf
or
xor
mov
xchg
loopne
inc
pop
xchg
and
pop
push
std
mov
call
push
cmc
rcl
cli
push
and
xor
jbe
fstp
int3
mov
mov
dec
aam
mov
mov
mov
shl
xor
push
cmp
jnp
movs
nop
xchg
retf
rcl
dec
imul
test
inc
cmp
pop
or
retf
push
xor
jecxz
jecxz
fisttp
fild
push
dec
cmps
hlt
in
xchg
test
mov
fdiv
call
in
jbe
inc
pop
xor
ror
out
or
lods
xchg
mov
add
cmps
aad
test
dec
out
addr16
cld
jg
add
loope
sbb
mov
jae
xchg
(bad)
loop
pop
add
es
and
sbb
in
data16
mov
sub
xchg
jmp
dec
ret
jno
adc
data16
cdq
es
fdiv
add
fdiv
fdivr
push
xchg
fldenv
xchg
int
lds
mov
ins
fs
das
clc
jbe
push
idiv
and
mov
push
xor
and
neg
(bad)
cmp
and
push
cmps
je
sbb
addr16
xchg
daa
or
inc
leave
pop
jge
add
sbb
pushf
xchg
xor
out
js
xchg
stc
iret
popa
sbb
push
out
in
inc
mov
add
or
stos
xchg
sub
les
mov
and
and
clc
pop
je
adc
bound
jne
aas
fwait
gs
les
jnp
xor
mov
out
cmp
mov
adc
je
cmp
out
mov
rcl
in
popf
test
int
cmp
imul
push
arpl
adc
inc
imul
hlt
mov
dec
cmps
sbb
pop
mov
sub
movs
retf
sub
jbe
push
js
adc
out
test
pop
in
mov
mov
fnsave
pop
je
fwait
dec
adc
loopne
jbe
push
rol
fistp
pop
iret
xor
leave
popf
adc
jp
mov
aad
pop
mov
pushf
cmp
mov
repz
adc
loope
xor
retf
xchg
push
out
fwait
cmps
pop
mov
in
cmp
xor
dec
adc
sub
cmp
cwde
cmp
out
and
ins
pop
rcr
(bad)
mov
sub
push
dec
mov
add
lds
imul
jo
imul
xor
imul
mov
(bad)
mov
ins
sahf
aaa
mov
pop
and
mov
jns
xchg
in
or
jnp
call
nop
es
xchg
dec
(bad)
ficom
or
or
cli
jne
mov
xchg
mov
stos
sbb
dec
xlat
jp
push
rol
retf
jbe
(bad)
data16
test
jmp
idiv
popa
or
lock
cs
ftst
push
mov
xlat
sub
inc
jb
push
test
jno
ins
or
sub
and
(bad)
sbb
ins
mov
sub
aad
cmp
xor
daa
xchg
fcom
adc
hlt
in
and
sub
imul
jae
aas
mov
(bad)
cmp
dec
(bad)
inc
push
dec
mov
adc
sbb
rol
xor
sbb
push
jo
in
ficom
xor
adc
rol
aas
cmp
js
xchg
dec
xchg
dec
add
dec
pop
inc
adc
sar
inc
das
adc
lahf
gs
cmp
push
adc
cmp
push
pop
jbe
test
fcomp
js
les
stc
fimul
cmp
sub
not
repz
push
cmp
push
(bad)
mov
in
cmp
cmc
mov
sti
mov
(bad)
pop
aad
sbb
cmp
scas
aad
sbb
jp
jecxz
jnp
outs
mov
xor
sahf
outs
and
sub
loop
pop
xchg
std
(bad)
jmp
retf
jbe
test
pop
sbb
inc
jge
int
xchg
pop
je
cvtps2pd
xchg
(bad)
popa
shl
retf
imul
fisttp
xor
fimul
jle
scas
adc
neg
cmc
test
inc
push
fdivr
rcr
add
dec
jp
push
cmps
cmc
fcomp
cmp
pop
mov
ja
xor
jbe
push
retf
mov
xchg
xchg
push
ja
lods
sub
out
lods
dec
sahf
push
sbb
rcr
jnp
dec
xor
movs
inc
pop
and
sbb
jecxz
xor
das
sub
data16
cmp
jecxz
nop
sub
push
dec
mov
jmp
push
and
xchg
(bad)
iret
call
mov
mov
loope
xor
mov
data16
adc
shl
push
imul
mov
call
fistp
repz
mov
xlat
push
in
xchg
push
fiadd
sbb
jmp
ret
out
jo
pop
sub
(bad)
xchg
out
ss
fidiv
retf
sub
mov
sub
ins
ror
and
nop
mov
(bad)
js
pop
je
inc
cli
jnp
push
push
xor
sub
movs
mov
xor
push
mov
leave
stos
dec
push
sub
push
retf
sub
cmp
shl
or
push
dec
sti
pop
idiv
daa
rcr
pusha
lods
inc
neg
rol
cmps
push
dec
or
push
or
dec
std
mov
outs
pop
or
jge
lods
jp
push
xchg
imul
dec
and
mov
call
jmp
push
loop
pop
rcr
pop
push
sbb
(bad)
adc
sub
mov
xor
cmp
jnp
pop
pop
(bad)
dec
enter
jp
movs
xor
dec
jns
cmps
loopne
sub
inc
xchg
mov
mov
dec
dec
cmp
add
test
fwait
in
call
add
imul
daa
repz
mov
and
mov
movs
add
sbb
dec
add
cmp
in
jb
jne
xor
in
aaa
add
pop
pusha
out
or
bound
dec
lods
dec
mov
dec
out
mov
out
or
loope
lods
popf
fdiv
dec
mov
mov
mov
mov
or
fild
cmp
call
and
(bad)
mov
fdivr
arpl
fcmovbe
xchg
(bad)
(bad)
mov
shr
mov
out
(bad)
mov
imul
fistp
aad
mov
cmp
popa
push
lods
push
cmp
add
pusha
push
call
das
inc
and
xchg
(bad)
xor
scas
adc
or
xchg
add
hlt
pop
fcom
mov
sub
mov
leave
ficomp
xlat
scas
sub
pop
sti
test
jno
cmc
mov
mov
mov
out
jg
repnz
enter
push
jg
mov
sbb
pusha
push
xchg
xor
xchg
sub
adc
jmp
xor
mov
or
mov
test
mov
add
jb
outs
in
cmc
mov
mov
mov
push
cmp
jmp
out
fmul
xchg
push
mov
hlt
pmullw
cs
push
je
fsub
int3
jecxz
mov
lahf
push
sub
test
cli
mov
aaa
mov
xchg
inc
jnp
aam
out
cmps
and
adc
mov
xchg
inc
jl
mov
pop
sub
mov
fwait
movs
mov
lock
popf
adc
ins
cmp
jecxz
ficom
pop
jns
pop
aad
rol
loopne
inc
pop
adc
and
and
sti
inc
mov
pop
aaa
cmp
mov
cmps
mov
xchg
imul
xor
xchg
xor
cmc
adc
ret
push
or
add
or
out
jmp
mov
push
add
daa
adc
lds
stos
dec
xor
ins
(bad)
and
je
inc
cld
jno
jno
jbe
retf
inc
xlat
dec
mov
inc
add
push
out
and
test
jns
in
mov
not
push
or
cmp
or
sub
add
mov
xchg
or
mov
call
jmp
xor
ret
mov
jmp
xor
cmp
js
cmp
xor
daa
mov
lods
inc
mov
pushf
stc
or
hlt
cmc
sbb
cmc
shl
jnp
cmps
fldenv
in
adc
out
sti
mov
jecxz
sbb
dec
cmp
pusha
iret
jg
hlt
cmc
not
movs
(bad)
mov
int3
jb
add
jmp
(bad)
icebp
jns
dec
cld
sahf
ficom
not
lock
test
push
hlt
sbb
lock
adc
add
push
and
sbb
clc
dec
lock
in
loop
stos
jmp
(bad)
sbb
arpl
std
pop
push
js
or
std
ret
push
xchg
xor
out
mov
xor
lods
lahf
into
lods
cmps
jmp
jle
xor
pop
jle
cmp
sbb
cmp
jmp
xor
xlat
sbb
stos
sub
loope
out
xchg
adc
pop
rol
cmc
sub
pop
into
inc
or
aam
sbb
lea
out
(bad)
push
dec
pop
add
mov
lds
iret
pop
push
push
nop
xchg
pop
outs
dec
pop
xor
jge
jp
xlat
sti
mov
pop
sub
jns
push
dec
gs
add
cmps
adc
jge
(bad)
xchg
pop
push
bound
xchg
adc
inc
je
dec
cli
pop
mov
pop
loopne
pusha
mov
mov
mov
out
jecxz
mov
rol
adc
xchg
std
repz
mov
adc
dec
pop
add
add
xchg
aaa
jns
mov
lods
ds
push
loop
rol
dec
jo
inc
adc
imul
clc
mov
out
or
lods
xchg
xor
xor
mov
push
fsubr
aad
loop
les
into
xor
fsubr
pop
mov
sar
out
lahf
test
or
sub
lock
mov
xor
inc
mov
nop
outs
mul
inc
pop
jbe
test
popa
push
popa
push
sub
frstor
mov
sbb
out
nop
add
call
fs
idiv
mov
sub
add
dec
inc
sub
mov
push
cwde
mov
xor
(bad)
sbb
cmps
inc
iret
pushf
inc
mov
iret
jb
icebp
push
fmul
mov
jbe
shr
test
lods
and
mov
mov
pop
fnstsw
loopne
fistp
cld
imul
jno
xlat
out
sbb
ins
(bad)
js
mov
pop
fxch
nop
movs
push
xchg
adc
mov
push
xchg
js
das
pop
fadd
nop
mov
test
mov
mov
ss
sbb
cmp
sbb
ss
inc
dec
push
leave
dec
dec
sbb
scas
mov
inc
xchg
(bad)
xchg
adc
addr16
test
pop
xor
pop
frstor
adc
mov
jge
add
pop
jo
rcr
pusha
cmp
mov
xchg
adc
repz
mov
mov
inc
cmc
pop
pop
mov
mov
inc
fwait
pop
dec
ret
aad
outs
fdivr
out
(bad)
iret
in
aaa
mov
scas
jbe
xchg
sbb
or
ror
(bad)
(bad)
out
shr
mov
jbe
jge
popf
cmps
scas
dec
aas
dec
inc
mov
test
aad
scas
arpl
add
idiv
ins
inc
jno
jne
loope
(bad)
fist
les
call
mov
in
or
push
sbb
ins
and
fistp
xor
enter
adc
call
loop
sbb
shr
mov
(bad)
sub
xor
pop
mov
neg
xchg
shl
cmp
mov
jecxz
mov
lea
jo
pusha
sbb
and
cmp
daa
jl
xchg
jecxz
inc
cmp
sbb
cmp
pop
in
sbb
inc
dec
sbb
pushf
add
(bad)
(bad)
mov
les
pop
cmp
mov
(bad)
dec
add
fist
sbb
xor
cmp
mov
cli
xor
pop
pop
mov
xor
sar
jne
push
dec
inc
inc
cdq
mov
scas
test
mov
dec
push
dec
adc
std
or
mov
xor
mov
and
mov
xor
cmc
or
adc
cmp
in
inc
cmp
pop
js
pusha
stos
xor
mov
cmp
in
sub
push
jp
sbb
xor
push
loope
ror
mov
stc
ror
mov
retf
or
loop
ins
jmp
fidivr
popa
in
xchg
retf
call
cmp
mov
addr16
hlt
jl
mov
mov
fwait
sti
ds
imul
sbb
movs
mov
mov
sbb
lods
push
mov
mov
shr
push
adc
iret
xchg
fdiv
and
sub
out
dec
pushf
push
cli
sbb
fbld
sbb
jp
sub
adc
jg
es
push
lock
outs
(bad)
sti
movs
push
xchg
or
cmp
int3
inc
out
add
std
in
call
add
xchg
cmp
inc
inc
dec
leave
and
lahf
jne
mov
lock
cmp
xchg
xchg
inc
mov
in
mov
pop
call
pushf
dec
test
inc
stos
sub
fistp
fs
(bad)
ds
(bad)
fcmove
mov
retf
dec
mov
sub
repnz
outs
pop
stos
jl
ins
mov
or
jo
mov
dec
push
mov
sbb
cmp
and
retf
mov
sub
call
jecxz
daa
push
mov
and
dec
and
test
mov
dec
cmps
mov
aaa
in
icebp
or
jne
jnp
rol
dec
inc
push
adc
xor
jbe
jmp
or
fwait
movs
inc
jb
xor
push
retf
fs
add
sahf
les
mov
cmc
das
add
popa
dec
stos
je
lea
jecxz
mov
jmp
xchg
imul
and
sub
adc
or
pop
cld
(bad)
ins
sub
jne
loopne
nop
sbb
cmc
int3
and
out
out
sbb
and
or
jle
rcr
sti
cmp
and
mov
rcr
out
sbb
(bad)
sbb
mov
mov
mov
xchg
std
mov
jno
sti
mov
sub
cmc
mov
(bad)
sbb
mov
jl
and
adc
add
adc
xor
fistp
cmps
pop
jle
dec
xchg
sbb
push
add
dec
sub
out
mov
pop
dec
or
fistp
pushf
add
fiadd
xchg
ss
sub
cmp
sbb
inc
test
add
les
xchg
jae
or
ins
pop
xor
mov
je
or
repz
dec
das
test
sbb
fs
mov
(bad)
(bad)
dec
scas
and
aas
mov
arpl
cmp
popf
in
jl
adc
sbb
sub
mov
sahf
out
pop
(bad)
jns
inc
pop
mov
(bad)
movs
jno
xchg
sbb
les
push
sbb
and
retf
inc
add
push
mov
imul
ret
gs
cmp
je
pop
sbb
test
rol
and
mov
jl
xor
fadd
jbe
pop
js
xchg
dec
sbb
xor
cmp
imul
cmp
mov
sbb
dec
out
inc
std
dec
inc
sahf
movs
in
sbb
pop
pop
mov
or
add
movs
rcr
ss
(bad)
pop
sbb
cmp
ja
mov
cmp
iret
fistp
repz
mov
pop
or
mov
in
xor
mov
pop
(bad)
sbb
xchg
push
mov
retf
out
xor
mov
cmp
add
and
push
inc
outs
inc
push
and
dec
mov
fstp
mov
add
add
cmps
inc
js
mov
and
jl
lahf
push
ror
inc
icebp
cs
xchg
loopne
jge
imul
ins
add
je
inc
xor
arpl
dec
adc
jecxz
ja
push
mov
xchg
mov
(bad)
jl
add
ja
stos
hlt
and
dec
mov
and
data16
dec
push
mov
ja
out
lahf
xchg
adc
sub
mov
fld
push
repnz
(bad)
push
and
loop
stos
loope
dec
outs
adc
mov
cmp
je
(bad)
mov
push
push
cmp
loop
fmul
adc
fsub
retf
pushf
pop
mov
mov
dec
push
shr
lahf
scas
sub
jae
pop
rcr
fistp
shl
aad
imul
inc
hlt
inc
int
mov
xor
add
cmps
fwait
pop
lea
jnp
xchg
cld
mov
cmp
pop
les
lea
and
dec
push
push
cs
icebp
mov
fst
or
clc
mov
mov
mov
mov
sbb
in
jmp
jnp
ja
ja
ror
test
mov
pop
sub
push
mov
rcl
add
push
pop
pop
cmp
ret
xor
iret
loope
mov
mov
pop
rcr
sub
mov
sbb
or
or
rep
loopne
clc
cmp
pop
and
lea
not
push
mov
adc
dec
jns
xchg
jo
das
pusha
xchg
jmp
mov
int
dec
or
xchg
nop
aaa
cmp
sub
xor
fwait
sub
xchg
dec
fdiv
xchg
fdivrp
xchg
dec
int3
add
fwait
mov
test
inc
movs
scas
jge
int
jg
fdiv
or
jecxz
cmp
clc
sbb
and
clc
fiadd
mov
repz
aad
jmp
aas
cld
dec
push
push
jns
(bad)
inc
addr16
out
sbb
sub
mov
bound
push
jne
fstp
pop
mov
shufps
cwde
cld
push
dec
in
xchg
add
jnp
leave
xchg
xor
lahf
push
push
jae
stos
test
sbb
(bad)
shl
add
shr
sub
repz
push
daa
inc
rol
dec
inc
ins
adc
into
dec
pop
loope
xor
xor
xchg
push
ret
pop
data16
sbb
push
test
test
mov
cwde
cmp
outs
fucom
push
jecxz
pop
retf
inc
cli
rcl
add
fbld
mov
inc
test
mov
(bad)
aas
cdq
mov
add
xor
xchg
add
std
clc
popa
ret
sub
test
dec
cmc
dec
into
adc
adc
cmp
(bad)
pop
cmp
or
and
and
nop
sbb
movs
push
lods
addr16
xor
xor
jge
jb
push
mov
cmp
test
lods
fwait
sbb
dec
daa
dec
push
mov
mov
idiv
jnp
popf
mov
ja
sbb
popf
pop
(bad)
(bad)
pop
push
jae
pop
repz
inc
test
imul
sbb
xchg
not
retf
cmps
cmp
inc
cmp
cmp
adc
jle
sbb
jo
add
enter
dec
pop
inc
lock
shl
call
jl
cdq
jmp
dec
je
pop
cmps
ss
xor
loope
arpl
sbb
lea
sbb
jl
add
repnz
ret
mov
loop
inc
sub
xor
push
xor
jb
je
scas
xor
jnp
push
scas
sub
pop
cmps
cdq
(bad)
scas
int
sar
or
push
adc
in
loop
push
mov
xor
cmp
dec
inc
sub
gs
pop
(bad)
leave
sub
push
test
xor
mov
rol
lods
in
in
xchg
loop
jmp
jl
int3
rol
inc
inc
jae
ja
fdiv
pop
push
adc
js
mov
js
xchg
iret
stc
cs
aas
or
xchg
mov
sub
jmp
bound
or
popf
mov
aam
xor
adc
pop
adc
stos
adc
mov
fbld
xchg
hlt
pop
pop
cmps
lea
test
sub
sbb
mov
xchg
outs
xchg
clc
and
out
ds
push
retf
cmps
xor
std
mov
mov
ss
mov
frstor
fld
data16
adc
mov
inc
lods
sub
push
cmps
xchg
das
mov
and
sub
sahf
lds
jae
or
ret
push
push
push
aas
ins
jno
in
pop
ret
pop
int3
add
icebp
fwait
mov
sbb
loop
scas
outs
cmp
clc
inc
cmps
jmp
outs
xchg
adc
xchg
jb
pop
fstp
shr
add
inc
pop
aas
(bad)
push
ins
js
neg
or
fsub
fstp
jmp
push
(bad)
mov
push
jns
mov
dec
loope
jp
(bad)
(bad)
je
ins
stos
push
jmp
inc
jg
adc
xchg
pop
jb
das
push
inc
or
mov
icebp
out
push
bound
push
pop
retf
retf
leave
or
sbb
pop
loope
xor
das
(bad)
jge
jmp
mov
sbb
dec
jns
mov
mov
adc
icebp
aam
(bad)
cmps
cdq
sub
sbb
lea
cld
dec
les
or
test
xchg
cmps
imul
push
in
sub
enter
stc
mov
and
add
xchg
fwait
mov
mov
inc
icebp
sub
jp
xor
inc
call
mov
lea
dec
mov
into
out
push
aas
sbb
lock
cmp
jbe
shl
jl
ficomp
shl
clc
mov
cli
rcr
shr
mov
loopne
sbb
and
daa
in
test
dec
jle
mov
fucomi
jo
dec
adc
xor
xchg
stos
pop
jne
xchg
mov
outs
xchg
push
nop
mov
pop
xchg
imul
call
and
jmp
inc
movs
pop
xchg
add
ss
sub
ficomp
nop
lea
pop
inc
lock
push
addr16
es
idiv
inc
mov
mov
add
mov
out
add
push
out
sbb
(bad)
das
in
loope
adc
mov
mov
cmps
xchg
pop
lods
outs
call
cmp
call
stos
call
outs
outs
push
pop
mul
adc
test
sahf
dec
mov
mov
cmps
addr16
fldcw
mov
mov
sub
inc
movs
xchg
cmp
test
mov
lea
scas
mov
adc
mov
push
enter
sub
push
stc
repz
or
and
adc
mov
imul
arpl
dec
(bad)
mov
or
pop
mov
push
mov
fld
xor
mov
xchg
add
mov
push
dec
inc
xor
inc
jo
jmp
sbb
lods
mov
adc
xor
(bad)
jle
fist
mov
jb
(bad)
arpl
push
stos
push
aad
je
test
xor
xchg
enter
mov
adc
xchg
test
shl
into
loopne
inc
repnz
jno
(bad)
xor
daa
test
aas
inc
mov
push
jno
sub
inc
pop
cmp
mov
movs
xchg
adc
inc
loope
call
pop
pusha
in
mov
loop
xchg
int
mov
sbb
push
fnstenv
dec
push
dec
je
mov
or
cld
add
cmp
mov
sub
add
sbb
movs
jmp
push
adc
xor
pop
into
jecxz
dec
in
in
cld
dec
add
xchg
(bad)
push
imul
in
stos
mov
push
movs
fld
cs
popf
inc
fcomp
xchg
xchg
mov
into
push
mov
mov
fld
jle
dec
popa
pop
inc
pop
clc
dec
aaa
mov
mov
test
mov
push
out
stos
pop
int
das
push
(bad)
stc
cmp
mov
lods
add
jp
rol
fsubr
mov
std
repnz
in
out
(bad)
adc
shr
dec
repnz
retf
dec
mov
addr16
push
dec
cmc
hlt
les
je
push
je
fnstenv
mov
jmp
mov
add
mov
out
in
or
add
movs
lock
jae
fadd
test
enter
adc
lods
stos
pop
sbb
sbb
mov
pushf
loop
xor
xchg
or
shl
mov
out
mov
dec
gs
mov
dec
mov
mov
movs
out
ret
loope
mov
pop
mov
cmp
mov
out
sti
imul
sbb
mov
ficomp
ja
sub
jb
in
stc
mov
es
or
mov
test
stc
mov
pop
jmp
push
sbb
mov
or
sar
and
ins
(bad)
idiv
cmp
jne
(bad)
mov
xchg
(bad)
or
pop
cmp
cdq
hlt
dec
mov
sub
xchg
not
jb
pop
fdivr
test
mov
sub
dec
call
ss
cdq
fsubr
mov
les
repnz
cmp
loop
xor
(bad)
adc
jnp
call
inc
add
imul
mov
loop
ds
sbb
aas
pop
shl
mov
je
push
daa
loope
pop
sbb
xor
push
in
cmps
clc
xchg
adc
push
imul
fsubr
shl
call
dec
dec
mov
jnp
loop
push
push
xchg
jns
push
cmp
or
pop
mov
(bad)
jnp
fstp
movs
(bad)
fxtract
xchg
fcomp
loope
pusha
call
leave
imul
mov
cwde
mov
ins
jg
aad
xor
pop
or
ss
pop
fwait
mov
mov
pop
xor
stc
or
mov
shl
icebp
push
and
jp
sub
add
fld
xchg
dec
loope
inc
pop
mov
addr16
add
add
and
shr
scas
pop
ins
sbb
push
lahf
mov
or
in
mov
(bad)
ror
fistp
aad
or
out
push
mov
dec
je
cmp
test
packuswb
bound
push
rol
sahf
(bad)
(bad)
nop
mov
jo
pop
xor
mov
shl
aaa
push
stos
pop
stos
das
ds
dec
xchg
inc
test
mov
sub
(bad)
aaa
repnz
inc
dec
fdivr
and
and
dec
lods
dec
fsub
aas
mov
ds
or
xchg
ins
pusha
std
sub
stos
(bad)
in
push
pop
dec
push
scas
or
and
jo
inc
imul
jg
pop
rep
mov
jnp
shl
mov
out
(bad)
jp
rcl
test
ret
int3
shl
add
jns
(bad)
and
daa
push
xor
sbb
mov
inc
cmps
adc
lea
cmp
enter
push
jmp
fisubr
imul
and
call
and
xchg
xor
jg
unpcklps
sbb
adc
enter
xchg
pop
scas
push
cmps
push
repnz
push
mov
out
jmp
inc
push
leave
(bad)
fisubr
scas
sbb
addr16
mov
jle
pop
cmps
and
sub
sar
lods
pop
sbb
imul
pop
std
jno
stos
repnz
sbb
push
std
adc
xor
push
(bad)
sub
(bad)
movs
push
icebp
mov
(bad)
rcr
ret
pop
dec
pusha
ins
dec
shr
inc
mov
ror
cmps
and
imul
ret
lods
xchg
mov
jmp
int3
dec
addr16
dec
pop
xchg
fldln2
stos
imul
cmps
retf
iret
shl
cmc
pop
sub
or
pop
es
movs
xchg
(bad)
jecxz
pop
loopne
cmp
mov
jmp
adc
sub
mov
scas
and
jecxz
pop
cmp
jg
sar
movs
icebp
cmp
pop
mov
test
bound
iret
pop
push
ins
out
inc
in
push
sub
xchg
sahf
sub
inc
adc
sub
mov
stos
fisub
stc
cmp
gs
repnz
faddp
inc
push
jle
fild
dec
adc
jae
pop
ret
jbe
mov
int
cmp
cli
xchg
jge
mov
mov
cvtpi2ps
pop
push
mov
mov
stos
or
jnp
js
dec
leave
aas
fwait
xchg
cmp
sub
sub
repnz
jmp
mov
dec
aaa
sub
mov
jns
clc
mov
(bad)
std
mov
rcl
push
adc
imul
es
int3
minps
and
aaa
mov
(bad)
hlt
adc
stc
mov
mov
nop
lods
xchg
call
mov
pop
mov
ins
shl
hlt
mov
add
es
pop
stos
sub
in
adc
test
sub
xor
out
mov
mov
sub
jno
sbb
mov
aad
mov
xor
ja
das
mov
(bad)
jmp
cli
movs
jno
stc
xor
push
test
or
in
scas
jnp
or
imul
cmp
mov
xor
mov
icebp
test
fimul
sub
(bad)
aaa
jge
hlt
lock
div
mov
xchg
adc
sub
pop
add
je
test
add
mov
sbb
xchg
jmp
cld
mov
aad
iret
shr
scas
test
add
fstp
pop
push
inc
sub
and
(bad)
out
push
(bad)
arpl
add
xor
outs
jae
repnz
and
(bad)
scas
inc
fs
mov
xchg
cmp
xchg
cmp
out
sbb
sbb
(bad)
clc
mov
pop
adc
inc
test
sub
loopne
sub
sbb
retf
xor
sahf
push
xchg
fwait
(bad)
jg
pusha
cs
jae
hlt
aam
loopne
(bad)
or
mov
aam
dec
inc
xchg
nop
jo
cdq
jg
adc
and
mov
lea
xor
(bad)
idiv
sti
and
mov
add
add
xor
jmp
xor
cld
adc
xor
jp
neg
cli
mov
dec
int3
xchg
push
call
sbb
and
dec
or
inc
mov
idiv
js
add
add
pop
or
adc
sbb
and
add
mov
ins
mov
inc
test
rcl
aam
pusha
loop
adc
bound
mov
in
scas
outs
ret
jl
mov
ror
loop
or
repnz
lock
sbb
and
cmps
lods
pop
dec
jo
test
fadd
mov
push
test
popf
push
leave
cmps
dec
jae
add
xor
outs
(bad)
ret
and
ja
pop
add
nop
pop
rcl
or
or
das
inc
pop
or
jmp
push
and
mov
cmp
add
aas
mov
and
sub
adc
cmps
sbb
sub
inc
ja
cmps
xchg
cld
jmp
lock
fnstsw
(bad)
jecxz
cmp
or
pop
xor
pop
les
mov
add
test
cmp
adc
hlt
sub
cmp
fmul
lea
ss
test
jp
dec
sbb
lods
repnz
movs
rcl
jns
jne
sbb
leave
stos
shr
cli
jmp
add
aad
inc
in
fs
dec
pop
cmp
jg
cmc
out
aam
loope
out
(bad)
sub
sbb
adc
cs
xchg
add
dec
outs
pusha
xchg
xchg
cdq
adc
je
xor
lock
into
mul
cmp
rcr
popf
and
outs
enter
sub
mov
mov
scas
pushf
outs
push
in
jbe
mov
test
arpl
mov
jmp
xor
push
outs
and
test
lock
rcr
out
xor
shr
popf
inc
cmp
dec
push
xchg
jg
mov
mov
xchg
pop
mov
lock
rcr
ret
sbb
ja
imul
cmc
test
sbb
test
mov
jbe
sbb
loope
push
or
loop
scas
mov
push
inc
adc
leave
adc
add
ficomp
mov
les
pop
lods
jbe
movs
fisttp
add
pop
jae
mov
jo
add
popa
jne
cmp
imul
ja
ror
jl
mov
aad
cs
xchg
xor
mov
mov
movs
fnstsw
aas
test
jno
call
(bad)
popf
mov
in
dec
jl
in
and
jmp
inc
rcr
cmp
xchg
sbb
enter
scas
add
inc
aas
sub
in
mov
out
adc
xchg
push
ret
mov
(bad)
test
repz
and
mov
pop
mov
int3
arpl
test
mov
cmp
pop
inc
xor
lods
loope
leave
js
jecxz
ret
in
cmp
cmp
sbb
in
stc
adc
lds
cld
xchg
bound
and
sbb
sar
jle
loope
outs
movs
xchg
mov
add
outs
mov
popa
jae
mov
div
push
sbb
xor
xor
add
push
push
jo
or
sbb
in
ja
adc
int3
adc
out
(bad)
inc
lea
xor
xchg
sub
jg
cmp
xor
ret
not
ins
jp
int3
shl
xor
div
push
(bad)
repnz
mov
jmp
mov
inc
imul
mov
sub
mov
ds
sbb
xchg
cmp
jmp
xchg
add
aad
sbb
jmp
dec
sub
imul
sbb
lahf
mov
xor
cdq
mov
icebp
mov
pop
push
mov
dec
sub
in
pop
sbb
jnp
and
push
add
outs
repz
push
mov
cld
push
shr
push
aad
push
pop
inc
cmp
adc
mov
loopne
sub
jbe
sbb
mov
sbb
push
sbb
(bad)
jne
test
enter
les
shr
cmp
test
scas
pop
xchg
push
scas
(bad)
ins
aad
int
int
jl
and
outs
and
jmp
push
into
lea
shl
retf
sub
mov
sub
pcmpeqb
cmps
adc
shr
daa
dec
and
popf
and
in
mov
xor
fadd
pop
ret
xchg
mov
mov
push
ficom
push
xor
lock
jne
sbb
dec
inc
loopne
je
leave
adc
ja
add
sbb
mov
(bad)
jmp
rcl
out
jne
inc
mov
idiv
test
js
add
sub
lods
iret
push
fsub
repz
xchg
mov
dec
push
or
repz
inc
pop
jnp
aad
inc
test
jne
push
scas
jl
movs
jbe
xchg
popf
lods
xchg
xchg
or
aam
adc
adc
and
xchg
test
fwait
outs
pop
push
lock
jmp
xchg
inc
sub
dec
sahf
add
and
test
sar
ss
push
(bad)
movs
dec
pop
daa
popf
mov
push
jecxz
mov
std
(bad)
sub
xor
enter
mov
pusha
adc
lea
adc
enter
fsub
mov
icebp
mov
add
and
push
test
mov
sti
xor
jp
loope
bound
jb
out
sub
test
(bad)
jg
outs
aad
xchg
cld
mov
mov
repz
data16
cmps
mov
cs
mov
xor
inc
push
scas
test
push
outs
xor
aas
inc
movs
mov
iret
sub
jne
lods
mov
push
outs
mov
pop
push
cmp
addr16
adc
popf
mov
sbb
push
xchg
in
ret
fmul
lock
movs
hlt
sub
pop
cmps
out
cmp
push
and
jb
data16
push
in
adc
pop
pop
push
jae
fsub
pop
mov
(bad)
jmp
sub
and
aas
in
xchg
jl
pop
or
cmp
mov
out
cmc
push
repz
pop
mov
fcomi
and
ret
test
mov
fwait
mov
(bad)
mov
ret
push
pushf
lods
jnp
sbb
xor
cmp
jmp
mov
movs
push
lods
xchg
adc
fisttp
rol
clc
into
push
repnz
sub
nop
loopne
out
test
std
jge
fistp
jmp
jns
lds
arpl
sub
xor
mov
sbb
cwde
mov
mov
dec
dec
out
dec
xchg
or
shr
scas
jno
or
xor
fnstsw
sbb
adc
fs
add
je
mov
shl
pop
ins
push
imul
xchg
test
imul
add
into
mov
ret
arpl
(bad)
int3
inc
scas
pop
fimul
imul
iret
stos
mov
in
pop
in
mov
out
sub
and
cmp
rep
fcomp
pop
cmp
sbb
repz
jp
movs
fistp
imul
call
imul
out
bound
pop
jnp
sbb
mov
arpl
sbb
mov
push
add
sub
push
jmp
adc
js
xchg
mov
push
test
adc
in
jle
imul
pop
mov
inc
xchg
sbb
call
ror
repz
push
add
(bad)
dec
inc
mov
cmp
call
fcomp
cmp
outs
cdq
ds
or
add
mov
arpl
pop
int
shl
dec
dec
or
inc
inc
jge
pop
sahf
dec
pushf
(bad)
jl
and
jg
mov
(bad)
add
sub
fmul
aas
or
xchg
adc
jns
pop
test
xor
jle
loopne
mov
jae
xchg
cdq
fcomi
(bad)
inc
cmp
add
es
sub
push
leave
in
add
dec
repnz
int3
jl
cmp
add
cmp
mov
ja
adc
xor
xor
inc
sbb
add
push
pushf
xchg
rcr
push
add
icebp
arpl
xor
pop
rol
push
jl
and
push
add
ins
out
int3
dec
sbb
sbb
xchg
mov
(bad)
pushf
xchg
stos
push
jbe
imul
pop
mov
retf
iret
ins
in
dec
inc
clc
mov
jmp
inc
sub
shr
in
and
cld
xchg
in
leave
sbb
mov
in
call
out
repnz
in
(bad)
outs
out
cwde
repz
les
and
les
mov
pop
or
je
test
ret
cmps
retf
idiv
jmp
int
movs
aas
adc
leave
test
movs
cs
es
pop
int3
xchg
pop
jp
lahf
arpl
(bad)
ja
mov
call
pop
push
xchg
neg
xor
cld
jg
call
outs
stos
inc
daa
dec
movs
and
push
or
sub
sub
sbb
push
fsubr
mov
jae
nop
cmp
or
fdivp
adc
mov
ds
sbb
movs
rol
rol
pop
fisttp
test
cmp
aas
jb
jge
or
data16
jle
xor
not
icebp
and
and
or
cld
scas
js
mov
push
in
inc
and
movs
retf
sbb
scas
fimul
in
(bad)
aas
fstp
and
mov
push
push
movs
inc
xchg
imul
imul
fwait
sbb
fdiv
daa
int3
sbb
rcl
inc
lds
sbb
adc
int3
cmps
xor
fnstcw
(bad)
push
pop
sub
sbb
pop
imul
repnz
retf
xlat
mov
cdq
or
ja
sub
sub
popa
pushf
xor
mov
in
sub
add
and
mov
pop
mov
ror
rol
aam
cld
outs
jb
fs
cmp
add
ret
and
xor
mov
mov
ficomp
and
inc
inc
mov
adc
jmp
aaa
lock
sub
lods
xchg
cli
test
ins
inc
outs
dec
mov
xor
lea
fisubr
mov
inc
mov
inc
sbb
clc
call
jb
add
push
or
adc
fcomp
and
icebp
stos
and
shl
in
shl
ret
out
movs
fiadd
push
cmp
pop
mov
call
push
mov
out
shr
loope
mov
pushf
sub
mov
shr
xchg
ffreep
loop
and
out
daa
movs
jecxz
les
mov
sub
cmp
push
mov
mov
addr16
mov
aaa
add
pop
(bad)
cmps
(bad)
(bad)
in
data16
mov
cmps
xor
in
fxam
pop
pusha
sub
test
or
add
mov
cs
pop
adc
jae
jne
sub
cld
addr16
mov
mov
sbb
shr
sahf
push
in
xchg
inc
ror
sbb
mov
(bad)
imul
mov
repnz
and
mov
pusha
mov
arpl
(bad)
push
fadd
ss
dec
inc
jmp
out
dec
lahf
xchg
mov
gs
cmp
sahf
mov
push
dec
mov
gs
cmp
fimul
ret
jo
xchg
push
mov
jne
sbb
push
xchg
push
sbb
pop
int3
cwde
inc
pop
imul
pop
mov
sbb
test
fistp
jg
push
call
or
sbb
dec
scas
pusha
rol
leave
and
scas
xor
arpl
inc
add
rol
mov
into
es
pop
mov
cld
add
icebp
movs
dec
mov
pop
aam
into
pop
aaa
int
pop
push
ror
mov
scas
movs
push
cli
(bad)
xchg
sub
add
cwde
shr
mov
daa
int
sbb
mov
xchg
mov
mov
jne
cmp
mov
mov
(bad)
or
add
test
pushf
cwde
cmps
sbb
adc
add
mov
jg
or
jae
fldcw
dec
adc
xchg
fwait
jmp
jg
popf
pop
push
repnz
aas
jp
aas
xchg
dec
dec
das
dec
stos
inc
jl
jp
in
add
outs
dec
scas
movs
pushf
jg
xor
mov
push
pop
ror
iret
int
sub
jg
fwait
pop
sti
pop
aam
stos
cli
cmps
inc
pop
adc
push
or
test
psrlw
arpl
jnp
retf
xchg
jmp
and
add
jb
popf
xor
mov
mov
repnz
out
fidivr
pop
pop
add
jns
and
cwde
sub
dec
arpl
fsub
or
pushf
cmp
pop
neg
ss
cmc
mov
push
test
cld
cmp
mov
cmc
pop
jl
dec
mov
sar
xor
jne
cdq
fist
xor
sbb
repnz
xchg
lods
dec
push
mov
fidiv
push
xchg
ins
mov
ret
mov
outs
aam
mov
adc
ja
jb
push
fist
lahf
or
lods
out
cmp
jns
out
sub
cmps
xor
pop
mov
shl
(bad)
push
call
jns
cmp
outs
mov
sub
call
stc
dec
mov
cli
les
mov
and
arpl
gs
push
ret
adc
sub
out
cmp
mov
ret
adc
outs
push
sti
movs
and
inc
retf
push
xor
and
sub
pop
sbb
rcl
pcmpeqw
xlat
jbe
cmp
cs
cmp
in
jbe
adc
mov
popf
push
adc
rol
repnz
pushf
jno
push
rol
and
cld
shl
ss
add
fld1
rcl
jmp
int
and
iret
std
repz
mov
mov
pop
jnp
je
sbb
xor
mov
and
pop
shr
cmp
xchg
imul
sti
das
adc
pop
push
adc
adc
jecxz
mov
ins
adc
and
lea
stos
lods
jp
out
cmc
clc
or
jecxz
sub
push
(bad)
push
mov
push
(bad)
pop
popa
push
jl
hlt
mov
rol
imul
ror
mov
xor
hlt
or
mov
fwait
test
sti
or
or
int
in
call
and
repz
mov
mov
jnp
mov
mov
mov
xchg
lods
xlat
ss
lods
repz
inc
lods
push
(bad)
(bad)
ins
neg
fisttp
(bad)
loop
je
outs
pusha
adc
das
idiv
stc
iret
mov
jge
and
jmp
jns
mov
ss
sbb
add
clc
xchg
mov
push
push
xor
data16
cmc
xor
hlt
inc
adc
ret
xor
jle
mov
call
hlt
pop
nop
or
pop
cmp
jg
stos
sahf
xor
or
rol
cmp
or
test
adc
pop
push
cli
pop
outs
or
retf
std
(bad)
ds
push
adc
outs
clc
push
pmulhuw
xor
out
mov
pop
and
xlat
or
mov
repnz
xchg
jg
imul
je
std
popf
fwait
mov
pop
xor
mov
das
pop
sub
add
movs
mov
xchg
into
mov
push
xlat
cwde
dec
and
fs
fmul
addr16
ins
cwde
cmp
xchg
repz
xor
movs
xchg
(bad)
lods
or
sar
and
xor
stos
popf
pop
loop
pop
fistp
dec
jle
or
idiv
and
movs
sub
xchg
sbb
xor
aas
push
sbb
mov
in
jl
jp
pop
loop
sub
test
dec
mov
popa
enter
lods
pop
enter
jl
inc
call
aam
xor
inc
inc
loop
ss
loope
dec
dec
fcmovnbe
lods
xchg
hlt
dec
sub
loop
inc
das
shl
push
(bad)
frstor
jo
mov
jge
or
scas
mov
inc
loop
or
pop
jns
into
loope
dec
outs
pop
cs
xor
inc
retf
lods
sub
stos
mov
xor
sub
jmp
mov
retf
push
das
push
fwait
xor
ds
daa
push
imul
push
dec
or
jno
jae
out
ds
mov
push
iret
sub
div
repz
pop
xchg
stos
dec
inc
pop
add
push
in
inc
mov
xor
outs
mov
loop
sar
out
sbb
cli
lds
scas
outs
pop
mov
mov
mov
in
stos
fldcw
or
xor
out
fadd
adc
adc
add
aad
(bad)
xchg
inc
imul
mov
lahf
sub
jmp
sbb
fs
and
inc
jmp
or
cmp
mov
out
push
icebp
jecxz
arpl
dec
sub
add
imul
jp
pop
cwde
xchg
and
ror
rol
fistp
inc
dec
xchg
out
add
js
xor
push
sbb
(bad)
push
cmp
mov
fwait
stos
loop
ret
pusha
add
js
xchg
sbb
outs
es
imul
repz
lea
inc
jno
out
mov
pop
fldenv
sar
inc
(bad)
inc
fldcw
sar
cmp
xchg
sbb
stos
add
dec
jnp
fst
xchg
push
mov
stc
stos
and
jb
push
aad
out
xor
dec
repnz
inc
jb
mov
mov
xchg
jae
sbb
xchg
lods
cmps
push
add
fdivr
(bad)
fst
push
cld
pop
repz
in
sub
cs
outs
pop
jnp
push
in
das
add
dec
jo
jno
inc
lock
mov
hlt
faddp
lds
jecxz
call
and
jmp
cmps
sub
dec
push
xor
and
out
aam
lods
hlt
jb
mov
es
repz
stos
adc
sti
cld
aam
sbb
fucomip
sbb
jo
test
shl
xor
fnstsw
inc
sbb
xor
xor
inc
jno
xchg
dec
or
and
movd
mov
mov
pop
outs
imul
and
xchg
mov
sbb
xchg
test
clc
pop
pop
cmps
jge
adc
push
iret
xor
gs
scas
(bad)
(bad)
arpl
repnz
cwde
mov
xchg
mov
mov
inc
or
mov
mov
dec
ret
call
pop
movs
and
and
push
scas
xchg
cmc
xchg
or
dec
jg
pusha
mov
inc
sbb
mov
dec
aas
xchg
cmps
cmp
mov
stos
cld
retf
add
jecxz
scas
jl
jns
aas
leave
ins
inc
sahf
pop
mov
pushf
dec
out
repnz
sar
shl
fldcw
in
pop
test
cmp
push
cs
xchg
imul
leave
xor
xchg
add
bound
popf
in
adc
rol
or
jle
xchg
push
sbb
out
daa
aam
addr16
adc
mov
fs
jbe
nop
pop
pop
rol
(bad)
xor
mov
in
iret
dec
icebp
icebp
xor
out
cmp
mov
mov
jne
ins
test
xchg
popa
or
xchg
mov
std
jmp
jl
xchg
sub
(bad)
dec
push
mov
mov
repnz
sbb
hlt
inc
jns
ja
(bad)
cs
push
push
(bad)
shl
or
dec
pop
jbe
add
mov
jmp
sub
xchg
out
out
int3
xchg
mov
and
ret
or
jmp
ret
fnsave
adc
test
or
mov
or
sysenter
dec
xchg
out
push
test
or
in
dec
shl
int3
and
jmp
jmp
mov
xor
inc
xor
cs
add
inc
mov
stc
in
jmp
ret
ds
jmp
(bad)
pop
mov
and
lahf
xchg
lds
stos
pushf
pop
sar
into
pop
jnp
jp
dec
leave
sub
ja
push
mov
movs
cld
xor
jle
xor
mov
and
mov
sub
push
inc
adc
push
jle
cmp
inc
push
pop
mov
jg
add
sar
mov
xlat
pop
sbb
adc
ds
mov
pop
iret
icebp
sar
cmps
pusha
xor
xchg
xchg
xchg
jbe
mov
pop
lods
xlat
test
inc
mov
inc
push
(bad)
push
stos
jae
test
addr16
cli
loope
sahf
cmp
cmp
in
daa
stos
nop
enter
fs
fadd
loopne
fwait
repnz
cmps
xchg
sbb
xor
sbb
lock
add
xor
shl
mov
push
cli
(bad)
sub
ret
xchg
or
push
inc
pop
mov
fdiv
dec
sub
inc
rol
and
outs
add
mov
cmps
in
outs
or
cmps
pushf
dec
cmp
icebp
cli
dec
shl
xchg
push
pop
js
in
mov
sub
jl
and
ins
outs
pop
inc
icebp
xchg
and
jb
pop
or
mov
adc
add
and
jo
jmp
and
int3
cli
loop
add
cwde
inc
xchg
and
test
mov
icebp
push
mov
icebp
push
aaa
outs
sub
cmp
cmp
pop
out
pop
rol
sub
push
loope
test
mov
cmp
sbb
pop
and
sub
cmc
cmps
jl
adc
loopne
test
retf
cmps
xchg
je
lods
das
push
pop
pop
fdivr
sbb
push
add
xor
cwde
test
call
mov
(bad)
dec
push
cs
shl
xchg
bound
cdq
xchg
jae
push
push
mov
call
int
cmc
sub
mul
(bad)
cli
in
cmp
fsincos
cmp
adc
push
xchg
cli
mov
pop
jge
in
retf
in
mov
xchg
call
in
data16
mov
jnp
inc
or
add
push
sbb
out
jp
jl
nop
clc
xchg
jne
mov
arpl
sub
loopne
test
outs
mov
mov
fldenv
dec
or
jno
dec
(bad)
daa
fwait
sbb
in
cmp
inc
xchg
add
ret
shl
mov
mov
(bad)
popa
fbstp
js
repz
cmp
push
mov
and
in
aad
or
push
nop
mov
scas
js
push
adc
add
sub
adc
or
jmp
cmp
dec
into
xchg
pop
mov
fwait
into
pop
mov
lods
gs
popf
cmc
stc
push
mov
in
rol
js
ins
xor
popa
sub
jle
lahf
fwait
scas
mov
cmps
stos
add
fisttp
pop
movs
add
mov
nop
lods
fs
mov
fstp
xchg
dec
jg
enter
mov
jbe
outs
pop
push
bound
dec
sbb
loopne
jnp
mov
ss
das
mov
pop
mul
sti
jb
pusha
int
retf
imul
sub
adc
mov
pop
sub
sar
call
sbb
cld
ins
add
jg
daa
(bad)
xchg
jae
aad
mov
movs
std
fbld
xor
push
iret
addr16
xchg
gs
fs
(bad)
cld
dec
push
data16
push
push
mov
rcl
or
xor
rol
push
sti
jnp
inc
sub
(bad)
ja
jae
push
iret
pop
push
and
jbe
pop
repz
xor
mov
retf
jbe
add
mov
out
or
cdq
jge
pop
xchg
arpl
loope
xchg
ret
cli
in
mov
sub
add
ja
rcl
xchg
ret
mov
test
test
jl
xor
xchg
jl
cmp
fcmovb
mov
push
mov
fld
adc
scas
shl
inc
cs
retf
add
push
add
jnp
adc
sub
xlat
pop
lock
leave
retf
cmps
pop
pop
es
xchg
mov
lock
fwait
(bad)
mov
sbb
pop
sar
pushf
mov
ins
out
repz
cmc
jg
sub
dec
inc
sub
mov
xor
popf
xor
sti
mov
xchg
xchg
mov
jns
inc
shl
imul
mov
and
mov
mov
xchg
jl
adc
mov
mov
sbb
xor
mov
mov
mov
mov
mov
cli
in
test
xchg
test
lock
lahf
cmps
inc
mov
mov
mov
dec
or
pop
movs
cvtps2pd
sub
pop
mov
test
mov
mov
jle
cmp
dec
jecxz
inc
into
pop
push
int
inc
jb
loopne
xchg
pop
add
aad
rcl
lods
fs
jl
(bad)
mov
test
mov
mov
leave
fwait
add
mov
jl
sbb
daa
pop
dec
aaa
or
cwde
cmp
xor
sbb
mov
adc
loope
call
dec
outs
test
add
sbb
pusha
cs
pop
es
retf
ja
push
cmps
sub
mov
or
lds
xor
iret
jg
xchg
mov
dec
jbe
inc
push
add
pop
dec
push
ret
push
adc
in
pop
or
mov
mov
jecxz
outs
mov
(bad)
mov
pushf
mov
das
fdivrp
add
cmp
xchg
sbb
sbb
and
es
idiv
gs
add
fs
and
lods
mov
jmp
and
cmp
pop
sub
add
ror
stos
xchg
das
jne
imul
push
iret
jp
or
nop
push
sbb
ja
push
push
stc
pop
pop
dec
gs
das
in
adc
cld
mov
dec
inc
cmps
jae
pop
pop
dec
fisttp
in
pusha
push
pop
mov
in
sahf
add
and
xchg
or
loop
lea
mov
adc
je
loope
rcl
and
pop
pop
outs
jbe
(bad)
cmp
bound
adc
or
adc
sbb
pop
pop
mov
jbe
pop
jg
cwde
cdq
loopne
and
dec
sub
pop
in
xchg
and
out
cmp
int
cli
xchg
add
ja
pop
cwde
mov
pop
and
int3
fisub
ds
scas
cmp
lds
call
mov
rol
lahf
cmp
retf
sbb
adc
imul
inc
sbb
inc
je
daa
daa
cmovg
jg
pop
sbb
sub
sti
outs
js
sbb
aam
hlt
jns
lods
cmps
nop
sbb
jo
imul
sub
pcmpgtb
or
pop
push
push
and
xor
inc
sysenter
sub
or
inc
sar
xor
out
jg
jae
push
adc
loope
hlt
add
add
sbb
movs
mov
cli
jns
jbe
mov
int
aaa
aam
cmp
xchg
inc
mov
pop
lods
movs
mov
mov
dec
push
test
jge
je
fistp
pop
(bad)
ins
leave
inc
inc
sub
aas
cmp
inc
xchg
and
pop
scas
shl
cmp
xchg
addr16
mov
lock
repnz
clc
pusha
sar
call
mov
arpl
add
add
cmp
iret
out
icebp
dec
lea
jbe
setae
punpcklbw
int
fdiv
loope
test
out
pop
mov
vmulsd
sbb
sub
(bad)
aam
test
ins
jp
mov
scas
cld
xor
fdiv
jp
lds
add
mov
inc
icebp
pop
out
popf
mov
push
sbb
adc
movs
or
test
js
imul
scas
scas
mov
sahf
ss
add
add
call
mov
data16
sbb
dec
xlat
push
ret
sbb
(bad)
bound
dec
cdq
mov
stc
dec
xor
mov
not
shl
xor
pop
mov
pop
lock
out
inc
jb
inc
stos
sar
push
rol
int3
jmp
retf
adc
in
pusha
lock
push
aad
mov
aaa
mov
xchg
cmp
fwait
into
dec
movs
fistp
xor
push
cwde
push
test
(bad)
and
aam
test
mov
ficomp
jmp
jle
out
ret
and
inc
js
stos
sbb
cmps
scas
pop
adc
call
mov
ficom
dec
jne
cdq
fld
xchg
add
js
xchg
xor
arpl
push
nop
xor
test
fucomi
mov
pushf
das
push
mov
inc
cs
icebp
mov
ficom
retf
cmp
test
dec
mov
jecxz
out
pop
and
and
push
lahf
sbb
inc
xchg
sbb
imul
div
stc
lahf
sti
aaa
movs
in
fcomp
jecxz
mov
add
popf
ds
or
mov
mov
dec
dec
push
in
addr16
dec
jns
out
dec
xor
dec
test
inc
aad
sbb
loop
fnstcw
pop
loop
sub
movs
xor
scas
mov
les
je
(bad)
pop
popf
xor
iret
sub
xchg
inc
test
dec
hlt
out
outs
inc
mov
push
inc
xchg
jle
jne
push
adc
fimul
retf
push
mov
jle
and
cld
push
adc
scas
lods
mov
fisub
mov
add
push
cmp
pop
or
push
out
cmc
pop
std
enter
ss
lods
mov
lahf
pushf
andnps
and
inc
aam
dec
jb
push
arpl
pop
push
cmc
mov
ja
mov
push
out
jg
das
call
bound
xchg
sub
jmp
lea
aam
xor
sub
sub
jecxz
inc
mov
or
push
inc
xlat
xor
test
lods
retf
sbb
jp
pop
sub
ds
test
ret
cmps
mov
or
sahf
into
in
repnz
das
pop
or
lea
push
add
lock
cmps
(bad)
test
aam
stos
pusha
dec
ss
jg
lods
sub
sar
mov
push
xor
mov
frstor
adc
mov
push
jmp
jmp
xor
popf
fadd
pop
inc
pusha
xchg
adc
lds
xor
sub
and
xchg
sbb
les
xor
loop
pop
sub
jmp
scas
das
pop
mov
repnz
test
adc
cmp
loop
jle
cmp
mov
xchg
lock
push
loope
in
aas
retf
sbb
test
mov
ret
xor
(bad)
std
icebp
sbb
jmp
loopne
push
retf
sbb
jle
repnz
cmps
mul
inc
mov
cli
push
cmp
call
movs
push
(bad)
addr16
ja
in
cwde
inc
pop
enter
jl
mov
repnz
aaa
fstp
push
data16
outs
or
fst
aaa
pop
pop
pop
stos
inc
mov
dec
add
push
imul
sub
int3
sub
out
rcr
ja
lock
xchg
mov
add
dec
sub
cdq
add
enter
or
fidiv
push
div
adc
fmul
cmp
loop
movs
inc
aas
(bad)
data16
fisttp
into
push
clc
cli
mov
mov
push
retf
inc
aad
jns
and
xchg
jmp
rol
mov
xchg
push
xchg
popf
and
lods
xor
fnstcw
js
mov
sbb
xor
push
cdq
dec
push
and
dec
jae
xor
mov
aas
adc
dec
xor
sbb
sbb
mov
cmp
xor
(bad)
lahf
mov
lods
in
mov
hlt
mov
sbb
and
repnz
aad
cmp
cs
or
or
xchg
and
mov
adc
ins
sbb
retf
xchg
push
jo
test
out
lea
mov
add
in
stc
sahf
movs
adc
div
adc
push
adc
icebp
and
jno
cli
dec
mov
das
loope
add
out
outs
xor
imul
lea
jmp
js
cmp
mul
and
loope
addr16
push
nop
imul
call
jge
xchg
xor
sub
inc
hlt
outs
bound
fsubr
out
pop
(bad)
bound
arpl
mov
mov
cmps
lds
dec
out
je
movs
ja
adc
fstp
sub
and
arpl
mov
cmp
cwde
inc
mov
in
(bad)
mov
loopne
shl
clc
xchg
scas
outs
jle
out
mov
dec
cmp
add
ja
sub
add
jmp
sbb
bound
sbb
xor
and
mov
cmp
sbb
movs
adc
out
and
test
ret
pop
loope
enter
aaa
aaa
cwde
mov
lods
cmps
dec
or
cld
cwde
addr16
scas
fwait
mov
inc
pusha
scas
push
inc
sbb
dec
addr16
ins
adc
test
in
or
cmps
stc
fsubr
cmps
push
out
sub
jae
hlt
ret
mov
fucomip
dec
or
sahf
inc
out
mov
push
js
scas
scas
mov
lods
call
or
inc
dec
mov
pusha
into
mov
inc
into
int3
xor
inc
mov
push
test
push
or
movs
cmp
xchg
ds
xor
enter
leave
mov
shr
xor
cmps
mov
xchg
fidivr
jno
xlat
ret
dec
push
mov
pop
mov
mov
mov
repz
sbb
in
sbb
(bad)
cld
jbe
adc
out
xor
fild
std
pop
xchg
push
pop
ror
lahf
xor
jnp
les
enter
cmp
cli
inc
test
push
mov
ret
sub
inc
sbb
push
dec
in
or
ins
cmps
cmp
mov
(bad)
ficomp
mov
fist
jo
ds
mov
aam
pop
loop
or
sbb
mov
test
pop
cmps
xor
add
push
xchg
pop
inc
cmp
jae
mov
push
rol
jo
xor
aaa
mov
aas
outs
rcl
stc
or
sbb
lahf
dec
ss
inc
mov
push
xor
pop
add
mov
pop
push
and
mov
xor
(bad)
push
fwait
sub
out
and
mov
data16
mov
sbb
mov
inc
es
shl
outs
fucomi
push
sub
in
inc
jp
lods
mov
js
out
(bad)
scas
push
rcr
push
inc
pop
std
jb
mov
(bad)
aam
mov
pusha
pop
push
cmp
shl
aaa
pushf
fsubr
in
aad
jo
and
lds
(bad)
syscall
or
dec
adc
test
cdq
push
dec
std
das
jle
mov
pop
sar
int3
ja
test
daa
test
retf
pop
popa
mov
test
lock
mov
jbe
dec
dec
jbe
ret
sub
sbb
mov
jns
out
adc
jmp
movs
loopne
lea
lea
xchg
xchg
sbb
rol
and
mov
push
add
lea
inc
popa
gs
xchg
and
enter
add
jb
adc
pop
sub
idiv
out
fdivr
adc
push
das
dec
sub
mov
adc
lods
jmp
out
sbb
in
jmp
mov
repz
xchg
mov
push
imul
xchg
sbb
push
(bad)
retf
xchg
test
cs
mov
xor
dec
jl
push
and
inc
fcmovb
cmp
sub
cwde
(bad)
out
pop
inc
shl
sub
sahf
sub
mov
adc
aas
xor
jecxz
in
add
in
sahf
cmps
cdq
push
cmp
cld
sti
push
loop
into
test
loopne
gs
int3
pushf
pop
inc
mov
lock
dec
or
(bad)
push
add
fidiv
bound
int3
cwde
push
xor
out
popa
xor
mov
xor
mov
in
fsub
lods
retf
int3
(bad)
sub
loopne
push
ds
fcomp
lahf
sbb
xchg
add
stc
xchg
stos
lahf
popf
shl
inc
int
jmp
or
mov
jmp
fs
dec
ins
mov
fadd
or
dec
aad
enter
daa
xchg
test
push
ja
loop
and
popf
popf
mov
ficomp
adc
jbe
or
jb
pushf
addr16
aam
popf
sbb
push
mov
in
xlat
mov
call
mov
xchg
aaa
push
rol
pop
fisub
jns
lock
add
jp
jo
jg
retf
pop
out
movsx
in
(bad)
movs
push
push
out
push
mov
loop
rcr
add
xchg
mov
push
or
cld
pushf
shl
pop
fsub
aas
jns
xchg
out
push
lods
push
or
xchg
mov
cdq
addr16
arpl
test
xor
jmp
jge
cmp
outs
adc
test
sbb
movs
js
imul
sti
push
movs
cmp
test
inc
xchg
xor
iretw
lods
add
in
imul
push
adc
lods
nop
aam
push
push
cdq
loopne
pushf
xchg
xchg
dec
sbb
into
mov
pop
test
dec
popf
jg
das
jp
out
(bad)
leave
adc
ret
cmp
dec
daa
je
dec
or
stc
xor
rcl
lods
call
das
test
cwde
jp
daa
sbb
jo
js
fwait
push
sbb
sbb
mov
ja
jnp
cmp
(bad)
sbb
std
div
jno
adc
in
dec
inc
lods
jmp
call
pop
call
out
das
movs
test
loop
ins
add
dec
aas
and
mov
cwde
ds
jmp
repnz
into
fdivp
adc
pop
jp
pop
lods
scas
ror
cdq
jecxz
jecxz
rcr
shl
ret
push
inc
cwde
or
shl
add
add
jnp
cmp
in
(bad)
and
jecxz
dec
fdivr
mov
pop
daa
mov
or
in
mov
in
stc
aad
mov
cli
push
call
pop
in
aam
adc
sbb
out
arpl
push
aas
mov
scas
dec
sub
pop
(bad)
retf
dec
cs
int
pop
gs
(bad)
(bad)
dec
movs
sub
lods
mul
out
outs
xor
leave
fucom
sti
in
ret
dec
lea
lock
mov
mov
dec
xor
inc
mov
dec
lock
mov
inc
repnz
pop
cmps
test
mov
in
inc
ficom
int3
mov
out
test
lahf
jb
ret
daa
call
test
mov
xor
out
rcr
xor
iret
(bad)
call
mov
xchg
test
int
sbb
sti
sub
push
shl
or
lahf
iret
push
xchg
sub
sub
mov
add
cmp
mov
lods
shl
mov
push
scas
in
enter
mov
or
or
loop
fnstcw
in
iret
pop
jg
xchg
icebp
hlt
clc
adc
(bad)
out
cmps
sub
aaa
shl
inc
cli
jbe
mov
mov
sub
dec
les
pop
data16
and
js
lods
xchg
mov
and
cmp
jmp
xchg
jb
pop
cmp
sahf
jp
jb
std
push
outs
mov
xor
cld
dec
imul
xor
jmp
xchg
ret
xchg
mov
mov
call
jmp
push
daa
ret
gs
fadd
jb
not
push
jecxz
add
jns
into
and
and
adc
retf
stos
cmp
inc
xchg
mov
test
and
push
pusha
push
cmp
push
mov
retf
sbb
sub
aaa
add
stos
(bad)
daa
sub
ss
test
imul
pusha
pop
cmp
sbb
nop
add
jns
dec
movs
out
retf
popa
ss
rol
mov
call
inc
add
xor
retf
adc
inc
rcl
dec
mov
push
pop
push
cmp
inc
mov
or
sub
xchg
shl
xchg
lods
push
dec
adc
sti
cmp
fisub
cdq
xchg
sahf
inc
dec
inc
xor
rol
adc
shl
enter
push
outs
in
adc
and
xor
hlt
or
imul
cdq
lea
(bad)
jae
xchg
xor
mov
dec
test
sar
out
xor
push
addr16
fadd
lock
jmp
jle
inc
sbb
fistp
movs
xchg
sahf
mov
push
adc
fisubr
cli
mov
push
int
out
out
xchg
mov
adc
mov
xchg
or
push
mov
in
leave
scas
hlt
daa
hlt
sar
mov
cs
(bad)
mov
int
cli
sub
xchg
mov
push
lods
rcl
hlt
cmp
mov
cmp
movs
inc
inc
push
push
into
stos
mov
push
ins
test
add
retf
daa
cmp
mov
push
shr
and
jp
mov
push
std
in
bound
cmp
xor
sub
xor
dec
jmp
sub
xor
fsub
scas
test
enter
mov
pop
mov
pop
sub
lahf
bound
jne
cmp
mov
sahf
inc
xlat
sahf
push
aad
and
adc
clc
sar
mov
or
mov
pop
add
cmp
xchg
and
add
push
cdq
data16
or
jo
inc
mov
imul
mov
outs
xchg
cmp
cmp
retf
inc
(bad)
add
pop
stc
ficomp
pop
sbb
sub
movs
sub
dec
retf
imul
jne
pop
push
stos
outs
xchg
mov
jne
mov
or
jecxz
mov
push
bound
in
in
adc
push
scas
mov
and
enter
daa
stc
movs
jp
and
mov
pop
(bad)
or
adc
or
(bad)
test
cmp
cmc
dec
pop
mov
cmovno
(bad)
retf
jecxz
mov
push
push
dec
jbe
jecxz
mov
mov
mov
inc
mov
pop
test
and
sbb
pop
aad
das
or
stc
inc
and
push
loopne
imul
or
inc
cmps
movsx
and
fist
cmp
mov
inc
xor
pop
pop
gs
push
outs
cmps
and
neg
ret
adc
or
mov
rcl
cmp
sub
mov
cmc
sar
sbb
push
mov
test
iret
push
(bad)
rcr
pop
cmc
cmps
pop
inc
retf
into
sbb
arpl
add
push
stc
pop
sbb
pop
test
(bad)
push
psllw
jle
enter
xchg
jecxz
sub
dec
xchg
int3
add
xchg
xchg
mov
rcl
cs
jns
push
jae
stos
sub
mov
cmp
(bad)
dec
std
xchg
add
mov
or
cmps
xchg
outs
or
clc
in
mov
sahf
inc
je
cmp
jnp
aad
dec
mov
push
neg
pusha
cwde
loop
setne
jmp
xchg
jae
nop
push
out
add
cs
out
stc
int3
retf
pop
shl
scas
xchg
sub
ins
cld
adc
mov
jo
cmp
pushf
push
cmp
call
test
ror
cld
mov
push
loopne
addr16
sub
sahf
(bad)
fnstenv
jmp
ret
repz
or
in
and
xchg
jp
sbb
mov
shl
sbb
clc
gs
jb
mov
lea
cli
push
enter
out
push
push
jmp
aas
mov
mov
(bad)
xor
mov
inc
inc
xor
sub
imul
inc
int
xchg
pop
push
mov
or
bnd
retf
stos
pop
arpl
int3
ret
lods
and
popf
sub
popf
cmps
jo
ja
mov
retf
repnz
cdq
cmc
pop
mov
cmp
gs
push
dec
jmp
and
cdq
mov
fstp
and
gs
jno
add
mov
sbb
cs
mov
stos
or
das
ds
aaa
sbb
gs
loope
xchg
or
mov
es
inc
fs
push
dec
and
test
xor
adc
ja
ret
fldcw
mov
adc
inc
aaa
clc
in
in
mov
mov
bound
sbb
ins
add
scas
mov
pop
fisub
jecxz
sub
xor
(bad)
leave
imul
xchg
xchg
loop
add
mov
fsubr
sub
adc
push
sbb
xlat
dec
loop
inc
xchg
adc
test
adc
(bad)
ds
mov
dec
pushf
mov
fsubr
rol
cmps
sub
inc
sbb
out
inc
mov
arpl
dec
movs
cmp
shl
aaa
loopne
sub
and
out
les
movs
out
cwde
adc
push
nop
push
xchg
push
mov
out
(bad)
xchg
leave
aam
add
sub
stc
cld
out
dec
ins
bound
pop
div
call
jecxz
gs
adc
cmp
test
jmp
jp
mov
push
int3
inc
ins
mov
test
pop
out
jbe
cmp
jecxz
cwde
add
dec
stos
enter
gs
mov
xchg
inc
sub
mov
or
jecxz
std
xor
push
mov
dec
retf
ret
mov
push
push
push
jp
add
sbb
inc
mov
shr
std
mov
stos
stc
stc
daa
inc
push
div
xor
gs
mov
push
sub
cmp
std
sbb
adc
sub
xlat
cmp
retf
aam
jp
adc
push
or
aaa
out
hlt
mul
rcr
jbe
fs
sbb
mov
mov
test
sbb
mov
pop
adc
and
lock
addr16
mov
cmp
jns
or
mov
xchg
adc
sbb
or
and
push
fnstenv
xor
inc
dec
imul
int3
push
cmp
in
pop
cmp
xchg
dec
or
cmps
leave
cs
int3
rcr
dec
je
call
cli
hlt
test
outs
dec
dec
in
and
(bad)
fcom
adc
add
call
xor
fbld
push
jge
mov
push
xor
cmp
mov
ins
daa
jmp
(bad)
mov
pop
mov
rcl
push
sub
dec
pop
and
jp
mov
repz
push
mov
pop
jae
leave
xor
sbb
mov
fdivr
inc
cld
call
pushf
push
retf
or
pop
sahf
sbb
xor
jb
and
aas
ret
mov
mov
cmps
dec
es
aad
inc
add
lea
div
inc
fisubr
inc
int
imul
test
lahf
xor
mov
add
mov
dec
xchg
push
xchg
(bad)
fs
je
xchg
je
fcmovu
add
ins
cmp
mov
cwde
ins
dec
ret
xchg
arpl
test
jb
mov
inc
xchg
cmp
out
pop
sub
sub
adc
or
mov
sub
add
jns
enter
retf
out
test
sbb
jbe
sbb
and
hlt
sbb
data16
adc
out
test
call
sub
dec
or
mov
cld
popa
xor
repz
cmp
mov
dec
stos
mov
cmp
dec
adc
mov
cmp
sub
xor
(bad)
movs
das
dec
(bad)
aad
xchg
sbb
mov
xor
loope
pushf
xchg
xchg
pop
call
jp
xor
jp
cwde
shl
or
mov
retf
sub
sbb
inc
shr
push
jb
dec
out
pop
enter
fild
fld
arpl
in
adc
ffree
mov
cmp
jne
add
int
xor
scas
ins
data16
dec
cmp
ret
inc
cmc
into
fs
test
pand
loop
push
cmp
mov
mov
xchg
stos
cmp
inc
in
mov
aaa
fnsave
(bad)
pop
retf
dec
adc
sbb
sub
pop
outs
fdivr
outs
jne
fcmovbe
or
js
pop
sbb
mov
in
cmp
jbe
xchg
pop
add
push
pop
add
fs
xor
bound
test
test
dec
scas
xor
imul
loopne
jmp
xchg
pop
jp
ret
xchg
das
ds
mul
push
ins
pop
mov
mov
push
rcr
stos
jecxz
rol
movs
push
push
stos
daa
adc
dec
push
xor
lods
popf
ja
fwait
mov
rcr
ins
pop
pop
cmp
push
outs
arpl
mov
mov
ins
mov
and
mov
and
jbe
mov
sub
(bad)
mov
pop
(bad)
adc
cmp
in
fsubr
add
leave
push
jno
ins
mov
mov
cmp
test
jb
mov
ss
jno
(bad)
fdivr
mov
test
push
mov
dec
aad
mov
jo
cmp
(bad)
ret
scas
sbb
int
adc
inc
push
jle
push
mov
lahf
sub
mov
std
rcr
cmp
or
sbb
stos
xor
xchg
mov
(bad)
(bad)
into
sub
sar
rol
fistp
lods
clc
sbb
xchg
retf
hlt
jmp
fisubr
jae
mov
xchg
adc
fisttp
out
add
call
shr
pushf
mov
cld
retf
ins
xchg
pop
or
sbb
mov
sub
pop
xor
imul
dec
mov
pop
and
mov
xchg
(bad)
mov
jmp
mov
test
fisttp
cmp
retf
xchg
or
out
pop
dec
out
gs
pop
enter
add
inc
popf
repz
mov
std
push
and
sub
aam
inc
inc
cmp
xchg
into
inc
push
and
sub
and
in
fs
add
xor
mov
xlat
sub
ja
daa
scas
and
mov
popa
xchg
cmps
movs
lahf
sbb
pop
in
int
mov
sub
ja
dec
call
mov
xchg
push
(bad)
loope
xchg
scas
or
daa
loope
xchg
in
(bad)
mov
pop
lahf
scas
lahf
pop
cmp
inc
add
push
mov
gs
retf
inc
scas
adc
js
or
dec
xor
sbb
jl
fcom
mov
int3
test
dec
inc
cli
nop
adc
adc
call
shl
jmp
xor
movs
(bad)
repz
shl
ins
adc
cmp
das
lea
aas
sbb
mov
xchg
cmp
fidiv
int3
aam
cmp
jge
xor
or
in
movlps
push
dec
js
sbb
xchg
sets
movs
cmp
not
aas
sub
push
or
mov
sbb
pusha
pop
fist
popa
rcl
sti
cld
iret
push
add
fdiv
mov
stos
out
push
ja
mov
dec
jl
cmp
js
xchg
or
cmps
clc
push
inc
pop
int3
out
mov
fsubr
repz
add
shr
sbb
push
lea
sub
pop
xchg
sub
shl
js
f2xm1
test
mov
pop
jecxz
jae
cdq
(bad)
or
enter
shl
adc
xchg
push
pop
dec
cmps
or
fwait
ins
mov
push
loope
(bad)
imul
cdq
mov
add
cmp
or
or
inc
and
adc
cwde
and
inc
jbe
imul
xor
mov
add
xchg
pop
push
into
nop
mov
cli
dec
movs
mov
add
xchg
ret
or
or
fwait
and
dec
stos
push
mov
js
pusha
inc
pop
scas
out
out
fwait
pop
les
(bad)
(bad)
das
add
xchg
std
add
pop
mov
nop
aam
add
outs
stc
fsubr
stos
aas
test
icebp
inc
fldcw
dec
retf
pop
mov
add
mov
jne
pop
push
out
clc
jb
mov
out
dec
pop
sti
ds
add
inc
adc
icebp
pop
std
test
lods
(bad)
mov
mov
test
shr
call
cmc
ficom
daa
lods
ins
or
pop
test
imul
popf
sbb
push
movs
movs
pop
push
mov
inc
(bad)
cmps
mov
jo
and
aam
rol
out
sti
jl
rol
jl
test
test
xchg
mov
mov
or
jno
mov
dec
leave
iret
outs
mov
jb
push
jb
push
pop
mov
dec
icebp
ret
cli
mov
cmp
test
int
loope
sbb
pop
inc
imul
push
mov
scas
call
push
cmp
pop
xchg
es
push
mov
push
lds
mov
or
dec
shr
daa
jno
and
jns
loope
mov
mul
ins
sbb
repnz
mov
lock
jns
mov
clc
sub
in
xor
popa
xlat
add
pop
mov
xchg
das
mov
dec
jns
arpl
mov
push
jl
scas
fucom
(bad)
stos
outs
fsubrp
mov
bound
mov
leave
xchg
loope
repnz
(bad)
cmp
mov
dec
jge
sbb
jne
fdiv
mov
push
in
xchg
or
popf
pop
xchg
mov
stos
pushf
ins
clc
iret
sbb
ficom
mov
mov
or
fisttp
stos
and
scas
daa
test
(bad)
call
jecxz
sahf
stc
in
or
icebp
add
ins
(bad)
imul
adc
repz
dec
cmp
out
in
mov
jne
sub
daa
mov
jle
lds
repnz
(bad)
(bad)
mov
out
xchg
push
sbb
jns
fnstenv
jge
aam
lods
inc
fmul
pop
jge
dec
cmp
adc
mov
dec
mov
push
imul
xchg
psraw
test
out
jle
(bad)
pop
fild
jge
pop
(bad)
int3
mov
mov
data16
dec
or
xor
bound
or
xchg
movs
dec
rcr
ja
loop
mov
(bad)
out
(bad)
and
(bad)
push
mov
sub
push
and
test
push
xor
pop
pop
mov
mov
sub
imul
repz
(bad)
lods
daa
mov
push
sbb
xor
or
xor
mov
out
push
int3
mov
cld
(bad)
inc
jmp
popa
aaa
loopne
xchg
xlat
shl
inc
out
xchg
xlat
addr16
xor
out
fidivr
(bad)
lahf
dec
lds
aad
leave
in
fdivr
sub
and
cmp
push
hlt
add
and
cmp
stos
sbb
daa
lods
dec
outs
jle
(bad)
call
dec
and
jno
jo
jo
jbe
adc
fcom
adc
icebp
pop
push
aam
dec
into
inc
or
inc
shl
lock
pop
cmp
test
sbb
mov
scas
leave
test
dec
push
pusha
fs
sub
retf
out
stc
fstp
jno
sub
sub
dec
pop
sub
or
and
mov
xchg
push
(bad)
dec
xchg
cmp
cdq
lods
sbb
rol
xor
out
scas
xchg
js
cmp
add
push
sbb
shl
dec
cmovns
out
dec
adc
vmread
xor
xchg
cmps
jmp
xor
mov
add
lods
xchg
mov
fcomp
inc
jl
outs
push
cmp
loopne
xlat
sub
ins
xchg
adc
(bad)
mov
mov
and
jbe
jecxz
cld
and
je
xchg
(bad)
(bad)
cmp
jge
mov
cmp
mov
sbb
mov
out
mov
pop
pushf
adc
push
jb
jo
inc
lea
mov
fnstsw
jle
xor
addr16
repz
jmp
out
cs
ror
jle
xor
push
jg
cmp
(bad)
mov
shl
cmp
movups
xor
ins
cmp
scas
push
in
addr16
das
sbb
and
sub
adc
jge
fist
dec
sti
jbe
pop
cwde
xchg
mov
or
push
into
ret
cmp
xlat
or
jge
add
add
pusha
fistp
into
dec
mov
mov
push
cmc
xor
and
test
lods
push
cdq
cmp
mov
call
mov
xor
jae
or
sbb
xor
fwait
cdq
ins
jbe
in
stos
inc
fisttp
arpl
jo
outs
ds
sar
jecxz
loopne
mov
mov
repz
mov
sub
mov
and
(bad)
loopne
leave
xor
scas
push
xor
mov
jae
and
test
loope
jge
adc
dec
int
scas
jae
jl
jns
ss
in
shr
mov
dec
ss
xlat
mov
(bad)
mov
xor
or
les
push
mov
cli
adc
lods
push
addr16
sahf
stos
and
dec
out
push
fisttp
imul
and
push
mov
push
mov
jns
movs
nop
mov
push
mov
cmp
jno
scas
in
mov
xchg
retf
sub
cmps
pushf
mov
sub
ja
push
ins
jnp
retf
ficom
shl
pop
and
cld
not
inc
(bad)
int3
loop
push
pop
not
pop
popa
sahf
mov
jg
jnp
in
jmp
mov
push
ss
ror
sub
outs
dec
fwait
adc
int3
adc
or
mov
(bad)
jp
stos
data16
push
test
xor
jge
lock
mov
sub
xor
mov
adc
std
adc
adc
jle
jp
inc
xchg
sahf
jae
imul
push
inc
lods
xlat
jle
arpl
mov
aas
das
xchg
pop
mov
mov
stos
repnz
jg
loopne
cmp
div
out
ins
imul
scas
mov
bound
pusha
scas
enter
add
and
cmp
sahf
sbb
ds
jb
imul
lahf
cmp
push
scas
xor
pop
cmp
repnz
(bad)
mov
mov
jmp
mul
movs
jae
push
(bad)
iret
jle
into
repnz
call
pop
push
das
mov
ret
xchg
push
add
jg
cmp
or
push
in
in
inc
imul
and
push
imul
mov
and
aad
pop
mov
ds
pop
push
pop
enter
add
bound
mov
dec
jns
imul
(bad)
rol
jmp
cmp
push
rdpmc
test
jmp
sub
and
and
push
movs
sub
mov
mov
fdivp
stos
inc
add
fild
lahf
cdq
adc
adc
cmp
adc
xor
daa
mov
pop
(bad)
xchg
xchg
jo
in
adc
fcom
call
fs
xchg
sbb
mov
test
jle
clc
xlat
mov
js
lea
sub
mov
icebp
adc
call
popf
sub
pop
adc
test
mov
popf
push
int3
stos
icebp
js
add
mov
sub
outs
clc
pop
jne
xlat
ret
or
add
add
pop
mov
(bad)
pop
xlat
push
lds
inc
and
addr16
jge
(bad)
mov
(bad)
in
adc
jae
cmps
xchg
in
fmul
in
test
stos
lahf
popa
pusha
cmp
mov
cld
sbb
add
or
sti
sub
addr16
mov
push
pop
(bad)
and
repnz
jl
pushf
popa
es
loope
jle
data16
and
xchg
mov
mov
test
fisttp
not
clc
mov
adc
add
xor
test
pop
adc
fistp
pop
iret
(bad)
sahf
fidiv
ins
push
popf
test
and
sbb
retf
imul
out
push
aam
or
int
ss
out
in
mov
sbb
loop
push
call
inc
xor
mov
lea
lock
stc
cli
dec
mov
jle
and
add
data16
movs
xchg
sar
mov
push
(bad)
aam
adc
call
add
jl
jmp
rcl
stc
mov
test
jno
pop
loope
pop
pop
or
dec
in
push
dec
add
or
push
xchg
mov
push
lock
iret
fadd
and
popf
and
in
call
or
mov
loopne
fmul
mov
xlat
xor
xchg
cwde
stc
gs
xchg
movs
cwde
xchg
das
push
loope
and
mov
xchg
ins
call
and
stos
gs
(bad)
xchg
mov
jge
(bad)
ja
call
mov
cmps
pop
push
add
mov
ds
cmp
jl
sub
pop
addr16
mov
adc
shr
and
and
in
shl
sahf
jmp
stc
lahf
xor
lahf
bound
add
test
xchg
mov
mov
xor
outs
mov
jge
or
xchg
dec
in
cmove
sbb
int3
dec
or
aad
in
adc
dec
inc
nop
popa
scas
jp
les
fadd
adc
push
add
pop
pop
pop
mov
mov
clc
push
mov
ss
add
add
pop
or
nop
inc
(bad)
inc
inc
inc
cs
loopne
dec
inc
push
jo
sbb
fxch
rcr
sbb
aam
call
out
mov
sbb
push
ins
push
jg
pop
mov
rcr
xor
cwde
mov
adc
imul
repz
jecxz
pop
test
in
cld
jo
bnd
es
stos
daa
out
(bad)
jne
add
popf
sbb
loop
mov
lds
sub
pop
sub
cmps
mov
or
xor
and
popa
loopne
mov
inc
xchg
mov
mov
sbb
ret
sub
mov
inc
dec
mov
outs
fild
in
rcr
xchg
sbb
mov
cmp
test
cmps
(bad)
cmp
push
sbb
jae
mov
dec
je
xchg
aaa
and
push
inc
jp
stc
pop
lods
leave
cmp
in
jmp
jae
dec
movs
jp
push
mov
ins
and
or
adc
push
aam
cmp
and
adc
inc
nop
sbb
or
add
sub
cmp
in
push
xchg
adc
sbb
aaa
cmps
push
dec
or
add
rol
jns
lods
mov
cld
addr16
dec
cmp
dec
adc
(bad)
out
mov
pop
pop
es
xchg
addr16
lods
daa
push
mov
dec
out
stos
xchg
mov
or
aaa
imul
bound
loope
(bad)
adc
lods
loop
add
shl
fld
inc
jno
cld
adc
in
popa
jae
test
push
daa
pop
fld
inc
(bad)
sub
adc
scas
add
test
(bad)
push
pusha
mov
stos
(bad)
call
out
mov
lock
xchg
add
imul
js
iret
repnz
mov
aam
mov
pushf
loop
fdiv
xchg
imul
movs
pop
in
adc
pop
enter
pop
pop
push
or
cmps
in
sub
cwde
je
daa
dec
add
mov
adc
lods
sbb
sbb
pop
scas
fnstcw
fs
ins
pop
sub
dec
add
es
inc
add
mov
aad
add
or
imul
pusha
jle
and
jb
jecxz
push
jge
movs
pop
test
aas
test
jmp
sbb
add
fnstsw
or
add
stc
cmp
inc
mov
jmp
lahf
daa
adc
dec
stc
sub
in
add
stos
pop
movs
leave
mov
sub
lea
setae
jp
cmp
mov
mov
cmp
push
push
mov
xor
and
nop
js
ja
and
mov
mov
call
retf
add
stc
lock
inc
loopne
jbe
jmp
jnp
cli
call
and
mov
pop
es
push
movs
(bad)
pop
shl
stc
add
cmp
ficomp
mov
cwde
xchg
rol
cld
stc
(bad)
mov
sbb
(bad)
sbb
push
(bad)
cmps
mov
mov
pop
fs
mov
sub
ret
jge
inc
cmp
mov
xchg
leave
sbb
and
gs
in
outs
xor
add
xchg
(bad)
mov
pop
jbe
pop
mov
daa
jmp
das
aam
dec
outs
test
mov
adc
test
mov
(bad)
sub
sbb
cdq
mov
movs
xchg
xor
sub
int3
xor
mov
sahf
add
aas
sub
bound
das
out
out
(bad)
mov
popf
cli
sbb
mov
in
lahf
cdq
ja
stos
(bad)
sbb
xlat
add
out
fstp
inc
(bad)
movs
push
out
(bad)
mov
mul
out
ds
fist
dec
das
stos
mov
sbb
sub
shl
pop
icebp
fcom
jge
test
mov
dec
add
add
push
(bad)
xor
or
mov
pop
mov
cmp
mov
mov
test
icebp
div
and
popf
ins
loop
sbb
scas
lds
cmp
push
stos
mov
fs
push
das
call
and
inc
(bad)
and
daa
jb
adc
in
and
jbe
pop
pop
dec
mov
shl
or
push
enter
cdq
mov
xchg
xchg
sbb
cmp
mov
jmp
pop
xlat
rol
push
sub
or
sbb
xor
or
data16
stc
mov
loop
hlt
cld
cmc
xchg
add
js
ret
inc
mov
imul
xchg
aam
mov
and
adc
adc
movs
int3
cmp
daa
mov
(bad)
mov
enter
aam
pop
stos
iret
nop
jmp
mov
sti
mov
mov
dec
and
rol
and
cmp
and
out
cmp
outs
clc
les
ror
icebp
cmp
je
arpl
xor
in
(bad)
adc
data16
xchg
shl
mov
mov
sar
retf
leave
ins
fisubr
call
neg
pop
mov
adc
xchg
dec
xchg
popf
adc
mov
pop
test
sub
test
movs
stc
pop
and
ds
cmp
cmp
push
mov
adc
xor
int
test
mov
out
jmp
das
adc
popa
cmp
mov
push
jp
arpl
mov
mov
out
dec
or
jnp
jnp
pop
pop
xchg
cwde
pop
cli
add
retf
bound
(bad)
cdq
or
pop
push
push
mov
push
out
inc
loope
or
movs
add
lds
pushf
sbb
or
and
lock
fist
mov
popa
xor
pop
repnz
push
fsubrp
mov
mov
sub
imul
ins
mov
loope
sbb
sar
ja
sbb
mov
xchg
push
shr
or
leave
inc
sub
imul
cmp
mov
idiv
jle
mov
jmp
data16
test
xchg
inc
xchg
cmps
test
push
pop
mov
inc
pop
add
mov
aam
xor
ret
aad
sbb
xchg
shl
sub
push
cbw
push
sbb
mov
cdq
dec
fsub
mov
pusha
into
rol
int
(bad)
div
mov
nop
cmp
nop
mov
(bad)
je
jne
add
ds
and
inc
pop
push
pop
sbb
sub
fist
ds
ret
cwde
jp
xchg
mov
pop
xlat
jne
push
out
pop
pushf
pop
xor
cmps
xchg
mov
ret
int
repnz
ins
loopne
pop
call
movs
das
mov
int
(bad)
data16
leave
mov
ret
loopne
or
mov
cmp
and
push
and
jg
repz
sbb
xor
mov
div
xor
retf
fistp
pop
mov
imul
shl
adc
push
xchg
mov
add
popf
xor
mov
push
jb
sbb
fcmovnbe
add
cmp
repz
seta
mov
inc
dec
stos
cmp
ret
adc
xchg
int
mov
sahf
lods
call
outs
les
pop
fs
call
dec
pop
cmp
inc
mov
les
pop
scas
pop
fwait
jb
inc
stos
inc
pushw
add
pop
int
sbb
mov
or
jns
addr16
fs
gs
cmp
or
movq
das
out
sub
int3
iret
rol
sub
xor
mov
(bad)
(bad)
pop
in
add
lock
mov
test
iret
xchg
push
lahf
xchg
xor
fadd
loop
fs
in
inc
jmp
daa
cmp
bound
sub
and
sbb
inc
out
outs
jae
mov
es
in
xchg
ror
jl
xlat
mov
out
or
(bad)
outs
mov
daa
movs
popa
jnp
cmp
idiv
fisttp
mov
popa
mov
je
in
push
in
adc
in
aas
adc
in
rol
push
cmc
and
adc
jle
ins
mov
movs
cmp
lods
push
sbb
cwde
cmp
test
cmp
xor
cmp
pop
mov
pop
xchg
lods
ror
pop
push
ins
les
sub
into
(bad)
cmp
fs
icebp
cwde
cmp
push
and
mov
inc
arpl
sbb
mov
pop
cmp
mov
jp
inc
fld
sub
in
push
stc
xor
cmp
jns
(bad)
movs
xchg
or
mov
mov
add
(bad)
scas
mov
lahf
inc
cli
movs
aad
mov
pop
loopne
std
cmps
fcomp
repz
mov
add
into
ror
pop
popa
sub
(bad)
jl
mov
push
(bad)
rol
sahf
pop
dec
mov
or
stc
inc
sbb
adc
mov
mov
hlt
dec
out
pop
cmc
es
mov
pop
mov
dec
push
(bad)
bound
mov
mov
jle
repnz
repnz
js
mov
in
loope
sub
hlt
scas
mov
retf
fdiv
push
iret
loop
push
and
lods
and
add
push
fld
push
mov
out
adc
pop
dec
imul
les
mov
aas
dec
movs
arpl
adc
aad
(bad)
xchg
sub
sub
mov
in
dec
loop
jp
dec
push
add
enter
mov
push
push
retf
mov
xchg
jmp
mov
call
mov
inc
les
int
pop
loop
jmp
enter
stos
sbb
push
stos
loope
add
xchg
leave
or
mov
(bad)
in
mov
or
jp
push
mov
enter
fisub
addr16
dec
std
aas
mov
cs
cs
stos
or
dec
(bad)
scas
mov
inc
stos
in
inc
movs
je
xchg
into
jne
adc
or
or
xor
jl
out
in
cmp
cmp
push
mov
pop
stos
cld
stos
or
in
sahf
ds
adc
dec
std
xchg
repnz
mov
mov
aam
nop
or
push
cmp
and
sub
push
dec
aad
cmps
fdivr
cwde
mov
lea
popa
and
sti
sbb
imul
xchg
test
dec
mov
adc
mov
xor
js
inc
inc
xchg
and
cmp
push
in
cmps
sti
data16
test
inc
and
sub
popf
jnp
dec
dec
pop
popf
inc
lods
mov
popa
or
jbe
std
dec
mov
mov
xor
dec
(bad)
push
jmp
xor
cmp
xchg
daa
shl
sbb
test
nop
in
add
add
cmp
addr16
enter
adc
inc
out
sar
in
repnz
push
ror
add
scas
aas
jno
push
aaa
mov
pushf
fild
jnp
gs
pop
imul
idiv
or
pop
cmp
mov
test
and
jge
mov
lahf
stc
scas
ret
and
cmp
mov
push
out
cmps
push
das
les
arpl
cmp
or
aas
into
rcr
inc
mov
and
stc
out
ss
jl
mov
add
sub
lods
sahf
and
hlt
sub
vxorps
adc
mov
xchg
cmp
push
xor
ror
ror
adc
in
jle
xor
fcomp
idiv
xor
jb
inc
pusha
cmc
pop
or
movs
mov
nop
cs
fistp
sub
xlat
sbb
jne
jnp
dec
stos
mov
mov
int3
mov
pop
pop
xchg
enter
pop
pop
sbb
(bad)
popa
add
stc
pop
mov
rcr
or
cmp
enter
popa
fwait
sti
std
mov
push
sbb
pop
jle
push
stos
movs
and
rcr
into
or
jmp
cmp
pop
cmp
pop
idiv
add
fiadd
aaa
pop
lahf
xor
rcl
mov
test
and
mov
cmp
pop
stc
sub
aaa
xchg
aam
movs
mov
mov
mov
sti
push
adc
add
mov
bound
iret
daa
stos
sbb
jle
pop
iret
sub
loopne
push
add
sbb
adc
pop
pop
sub
cmp
retf
xor
pop
pop
or
dec
std
in
les
les
aad
out
push
gs
retf
xor
dec
sub
nop
das
xlat
movs
iret
test
push
pop
lock
mov
sbb
mov
outs
mov
mov
into
pop
lods
fcmovnu
ret
outs
sar
cmp
out
stos
rcr
mov
jo
xor
sub
or
inc
mov
sub
and
jle
pop
mov
sub
test
repnz
mov
xor
ret
inc
into
adc
retf
cmp
and
dec
xor
js
rcr
mov
xor
loopne
xlat
pop
xchg
arpl
xor
and
je
sub
adc
cmp
xor
xchg
les
shl
std
and
stos
pop
movs
mov
in
mov
in
outs
pop
xchg
mov
pushf
inc
jns
popf
test
push
imul
mov
add
das
adc
idiv
dec
sbb
repnz
in
or
xor
rcl
push
cmps
mov
mov
leave
jp
cdq
ret
repz
out
adc
shl
xor
les
out
push
sbb
jnp
fcom
and
aaa
pop
jbe
push
sahf
es
dec
and
aaa
popa
push
jp
jnp
cmps
cs
retf
pop
mov
addr16
mov
dec
lahf
out
imul
adc
retf
jo
mov
jge
les
fdivr
je
nop
je
repz
stos
xchg
mov
push
sub
lahf
nop
jmp
call
mov
xchg
stos
mov
mov
dec
jge
sub
inc
push
outs
call
ret
jmp
push
rcr
sub
imul
sbb
rcl
or
movs
jne
je
or
mov
pop
jle
xor
jle
mov
scas
outs
ins
mov
repnz
jecxz
in
fwait
mov
movs
outs
and
add
ins
dec
(bad)
mov
fwait
mov
inc
outs
adc
push
ins
push
jne
dec
cmp
cmp
mov
adc
imul
dec
hlt
repz
adc
xchg
add
cmp
sub
adc
jecxz
cmp
fsubr
test
adc
std
inc
in
inc
inc
and
mov
std
fiadd
fs
lock
iret
mov
adc
test
xor
adc
je
cmp
xor
fsub
fimul
stos
inc
xor
int
sbb
int3
js
push
sub
jmp
push
fmul
es
(bad)
movs
sbb
in
adc
jb
cmp
cmp
xor
add
sbb
mov
pop
pop
retf
lock
mov
and
in
sbb
mov
mov
scas
pushf
pop
xchg
xchg
push
ja
dec
jbe
pop
xor
test
dec
pop
movs
inc
inc
(bad)
add
cmp
ins
jl
xchg
sbb
scas
call
and
gs
xchg
add
and
fincstp
popa
aaa
(bad)
fild
xlat
push
cli
and
mov
les
and
or
dec
jp
push
pop
fidiv
cmp
cli
add
pop
add
enter
pop
fs
enter
stc
sbb
outs
pop
xor
clc
aaa
sbb
lock
mov
add
dec
mov
ja
scas
mov
sahf
xchg
fstp
adc
dec
into
mov
repz
pop
cs
cmp
push
cs
mov
add
popf
inc
imul
pop
sub
jns
dec
mov
icebp
pop
ins
in
cli
fild
out
(bad)
es
inc
mov
imul
mov
call
mov
cmp
lock
fimul
out
jno
or
pop
mov
sub
mov
jae
xchg
xchg
cmc
inc
outs
rcr
out
(bad)
mov
ja
inc
(bad)
pop
aad
mov
sar
movs
lea
inc
xor
repnz
aam
out
ins
call
or
adc
ror
adc
shl
jl
ror
popa
xchg
jp
outs
and
nop
(bad)
xor
xor
sub
lea
add
jne
ret
rcl
mov
dec
retf
mov
add
dec
and
push
jb
jns
sub
mov
inc
xchg
js
test
add
inc
les
aas
imul
leave
dec
cld
xchg
repnz
pop
mov
ds
(bad)
adc
xchg
push
idiv
cmps
sahf
jg
shl
sbb
das
addr16
pop
and
adc
cmc
imul
dec
les
push
inc
xor
cs
(bad)
pop
jge
rcl
test
outs
test
pusha
sub
cs
sbb
xchg
inc
ret
add
fmul
outs
scas
lgs
popf
(bad)
xlat
mov
aas
jae
loopne
mov
in
fs
cmps
add
sub
xchg
outs
sbb
adc
mov
cld
push
loop
jno
pop
test
fcom
cmp
call
add
sbb
mov
les
push
add
popa
push
cwde
ds
stos
mov
pop
lds
cmc
rol
jae
and
pop
icebp
or
mov
or
(bad)
push
sub
aas
sub
jge
cmp
arpl
inc
inc
pushf
push
loop
loop
jl
and
leave
out
or
pop
rol
fisub
shl
shl
(bad)
dec
out
loopne
cmp
jmp
or
and
(bad)
frstor
push
mov
stos
xchg
mov
and
icebp
les
dec
sbb
cmps
lea
loopne
mov
inc
dec
repnz
emms
jmp
add
stc
mov
(bad)
daa
inc
mov
push
xchg
ins
test
jecxz
push
out
mov
xchg
stos
nop
push
pushf
push
pop
mov
fld
push
xchg
add
mov
xchg
mov
sub
cmp
fild
les
xor
pushf
into
fld
dec
scas
push
mov
lea
in
dec
push
add
mov
mov
cwde
iret
mov
std
out
aaa
mov
ins
aas
pop
push
aas
and
dec
fistp
shl
push
add
enter
pop
dec
into
add
aad
pop
test
ins
cmc
sub
jecxz
fsubr
test
movs
and
fisub
pop
out
call
adc
push
mov
test
xlat
cmp
sbb
sbb
ds
jl
pop
arpl
test
or
push
rol
scas
sub
jo
mov
and
std
add
iret
(bad)
(bad)
dec
sub
cmp
(bad)
mov
pop
xor
jge
sub
mov
and
adc
lods
inc
popf
xchg
call
add
and
cmp
cli
popa
(bad)
leave
jnp
gs
adc
idiv
jae
fild
and
jne
scas
sar
shl
call
movs
nop
in
xchg
dec
jns
call
adc
jecxz
cmp
call
fs
enter
sbb
test
(bad)
test
ret
add
jge
mov
inc
mov
add
sbb
push
and
bound
addr16
jbe
out
je
sahf
popf
(bad)
les
repnz
and
pop
add
cmp
enter
xchg
ret
(bad)
or
dec
inc
lds
test
(bad)
pop
loope
arpl
fs
cmp
xor
in
(bad)
pop
fisttp
push
nop
jo
xor
sbb
mov
and
outs
pop
(bad)
retf
lock
pop
inc
mov
aaa
sub
iret
xchg
mov
mov
cmc
hlt
repz
lds
inc
(bad)
leave
mov
or
shl
icebp
push
cmp
xchg
arpl
ins
adc
popa
jmp
jp
inc
int3
sahf
and
loope
out
aad
retf
or
pop
push
sub
mov
arpl
or
shl
mov
mov
imul
shl
enter
or
mov
dec
inc
push
jno
(bad)
fcom
ins
je
pop
mov
aas
cmp
push
add
retf
push
out
xor
pushf
adc
cdq
out
mov
int3
dec
xlat
aas
mov
popa
aaa
cdq
sub
adc
shl
imul
xchg
test
sub
outs
push
push
enter
mov
cmc
clc
pop
push
(bad)
sub
sbb
in
push
stc
xor
int
pop
xor
(bad)
xchg
ss
pop
rol
frstor
outs
aad
inc
scas
js
mov
call
mov
retf
inc
jae
in
add
and
pop
and
adc
loope
ret
push
cmp
loopne
pop
dec
xlat
and
mov
aaa
jle
sbb
mov
cwde
push
cmp
hlt
aaa
pop
movs
js
sahf
push
sbb
retf
scas
loopne
int
mov
jmp
cmp
cmp
or
sbb
sbb
inc
ss
enter
repz
and
and
jge
mov
test
mov
clc
rol
out
call
xor
jp
or
or
cs
mov
mov
and
repz
push
adc
sbb
cld
test
add
jge
add
clc
les
and
fmul
retf
xor
aad
shl
fwait
add
cwde
(bad)
into
mov
add
cmp
sbb
retf
fnstcw
loopne
lods
lods
sahf
clc
iret
push
lock
int3
jg
div
mov
dec
push
jno
mov
mov
in
and
outs
icebp
inc
ss
xchg
int
call
sti
xor
mov
jnp
imul
cmp
jbe
pop
test
ret
retf
fnstsw
repnz
hlt
mov
jo
pusha
in
je
mov
adc
repnz
sub
xor
and
jae
mov
push
mov
outs
mov
ja
mov
xor
jns
pop
dec
(bad)
ror
movs
shl
call
pop
mov
add
xchg
pusha
pop
add
adc
test
cmp
mov
loopne
or
mov
cdq
mov
mul
push
iret
and
lea
call
mov
or
dec
xchg
push
xlat
dec
cmp
adc
xor
sub
cld
retf
fst
and
cmp
cwde
jle
xchg
push
push
push
add
(bad)
shl
adc
mov
test
out
or
sbb
inc
pop
cmp
mov
fs
mov
push
xchg
adc
and
cs
gs
inc
sub
sub
adc
sub
pusha
jle
jne
jecxz
adc
adc
dec
mov
(bad)
cmps
dec
pop
push
cdq
rcl
sbb
push
cmc
fcmovbe
or
into
sub
arpl
loopne
push
inc
js
rcr
pop
jb
jo
mov
inc
mov
in
aam
nop
movs
pusha
ficom
ror
stos
ins
out
sub
movs
jge
mov
lock
and
ja
cmp
pop
or
pop
and
or
in
cwde
sbb
and
mov
or
push
daa
int3
push
loop
fwait
in
jns
and
bndstx
rcr
mov
jle
adc
xlat
jbe
fisttp
add
xchg
jl
jno
mov
adc
inc
es
mov
(bad)
jl
cs
cmc
pop
out
fimul
pop
inc
push
ss
ret
scas
movs
or
xor
jbe
rol
push
lock
addr16
adc
std
bound
dec
aaa
gs
in
icebp
adc
xchg
movs
mov
gs
xorps
jle
adc
push
movs
sti
ja
sub
lea
adc
xchg
nop
fimul
test
out
pop
xor
inc
int
or
mov
pop
mov
jnp
ss
or
adc
pop
sub
mov
fcomp
or
call
mov
xor
into
dec
ror
cmp
aas
mov
mov
stc
push
fsubr
fldenv
xchg
out
aam
xchg
lea
imul
xor
push
mov
and
mov
inc
out
adc
mov
sbb
aas
lea
stos
or
mov
push
and
mov
xor
es
loop
(bad)
les
xchg
out
imul
call
inc
jno
repz
shl
es
xchg
push
pop
add
push
lock
dec
test
xor
and
inc
push
ds
pop
popa
push
retf
jae
push
fidivr
outs
retf
ss
lods
je
cmp
pop
mov
leave
scas
push
popf
data16
dec
std
jns
in
add
dec
jno
pop
dec
sub
cmp
idiv
add
jmp
push
mov
je
jp
mov
out
stos
jp
test
lods
push
lods
inc
pop
jnp
ins
sahf
jb
sub
fist
ins
(bad)
cmp
bound
xchg
retf
arpl
into
pusha
fcomp
dec
pusha
fsubr
int3
pop
sub
inc
retf
inc
ins
ret
mov
lea
mov
pop
mov
test
cli
cmp
lahf
rol
fdecstp
add
jg
xchg
in
pop
push
or
sbb
nop
int
and
mov
rcl
popf
aad
and
daa
cld
sar
adc
dec
push
dec
(bad)
or
dec
jo
test
or
mov
cld
pop
xchg
(bad)
out
imul
stc
lds
inc
jne
in
fcom
sbb
and
mov
(bad)
add
rcr
cmp
test
and
loope
(bad)
lock
add
in
in
les
popa
dec
adc
test
cli
mov
push
(bad)
push
mov
(bad)
fisub
push
lods
loope
mov
loop
xor
mov
xor
fisttp
imul
sub
sbb
mov
jne
ret
iret
xchg
rcr
jnp
dec
dec
jb
push
jo
mov
les
lahf
adc
xchg
pop
stc
xor
fdivp
xchg
imul
jecxz
loopne
jns
ret
aaa
push
xor
repnz
enter
jnp
push
jmp
fmul
(bad)
mov
add
test
pop
dec
dec
call
not
outs
pop
movs
mov
loop
shr
stc
out
inc
popf
sub
cmp
pop
mov
int
hlt
inc
mov
pushf
or
push
mov
ret
stc
dec
jmp
sbb
jo
(bad)
push
ins
xor
inc
lods
mov
ret
dec
scas
push
sbb
sbb
bound
xor
adc
pop
dec
xor
pusha
movs
cmps
pop
mov
sub
jle
cmps
ja
or
jno
jmp
in
pop
aad
ja
cmc
mov
ficomp
sub
sub
push
cmp
mov
fst
xchg
cmps
in
xor
in
fstp
inc
fadd
les
mov
push
clc
sub
gs
(bad)
ret
fimul
pop
jbe
aas
lahf
rcr
pop
cmps
pop
jmp
cmc
xchg
push
xchg
imul
in
stos
and
movs
cdq
mov
sbb
out
and
lds
mov
in
xor
(bad)
jmp
inc
cmc
jo
xor
or
fistp
mov
push
fisubr
xlat
call
jmp
repz
ins
rcr
or
sti
rol
add
jb
clc
push
das
pop
add
retf
cmps
cmp
aam
data16
sbb
neg
lods
into
aad
sub
(bad)
movs
push
(bad)
pop
mov
(bad)
das
fist
outs
sub
mov
aaa
inc
and
push
mov
inc
addr16
pop
lock
inc
pop
adc
repnz
aaa
inc
cmp
jg
xrelease
inc
ins
pop
fsubr
shl
xor
mov
add
aaa
jne
idiv
jmp
test
shl
fistp
out
retf
mov
sub
mov
pop
sti
sahf
xor
hlt
pop
pop
nop
dec
test
into
inc
aas
test
jmp
sbb
xor
ss
push
mov
sub
cmp
les
adc
in
and
nop
xor
push
add
(bad)
jns
jbe
xchg
adc
ins
std
pop
(bad)
retf
loopne
(bad)
sbb
ret
sar
mov
push
out
xor
enter
call
jmp
fcom
cmp
fwait
push
add
add
lods
mov
mov
stos
sbb
sub
and
add
popa
rcl
jge
sbb
sbb
mov
dec
scas
aad
push
xchg
aam
dec
cmp
out
stos
aas
in
ds
xchg
(bad)
push
and
int3
movs
mov
jmp
xchg
enter
xchg
pop
jp
bswap
ret
leave
(bad)
jp
jmp
sbb
push
retf
std
shl
or
add
sti
mov
inc
cdq
or
cld
xchg
ins
push
ror
fstp
fcomi
(bad)
in
and
pusha
add
aam
shl
inc
sub
xchg
sbb
lock
mov
cwde
push
push
jecxz
cmps
sbb
mov
jmp
and
fcom
mov
jb
pop
outs
sar
jle
repz
(bad)
mov
popa
shr
sbb
(bad)
stc
sbb
or
push
adc
adc
ins
sbb
pop
sti
(bad)
push
das
mov
push
imul
shl
imul
and
dec
(bad)
mov
ret
or
mov
pop
or
lock
jle
xchg
or
add
mov
data16
adc
and
mov
imul
retf
loopne
adc
out
dec
push
call
shr
stc
pusha
test
mov
mov
push
repz
or
xchg
push
jne
pop
fld
lods
stc
or
aam
sub
or
ret
push
jmp
cmp
and
call
mov
sbb
ficom
adc
loop
aam
sbb
shl
fidivr
inc
popf
sbb
repnz
out
add
mov
fisttp
sbb
sbb
jmp
fcomp
xchg
jne
xchg
sub
movs
ins
test
jb
addr16
bound
mov
jg
and
mov
jb
scas
mov
lds
cmps
pushf
xchg
adc
mov
fwait
dec
pop
mov
jmp
pop
jbe
stos
mov
test
sub
xchg
cmps
lock
xlat
cmps
ds
sti
adc
sub
rol
(bad)
dec
icebp
sbb
xchg
dec
ins
xchg
xchg
pop
test
aaa
movs
jmp
lods
into
ffree
scas
lock
cmp
mov
pushf
cdq
int3
jae
ret
jge
or
mov
mov
jb
movs
sbb
aad
(bad)
icebp
push
adc
xchg
jmp
jo
adc
popf
(bad)
pop
dec
rcl
stc
daa
div
mov
stos
mul
les
push
and
loopne
pop
test
into
push
pop
pop
lods
(bad)
cmp
cmps
jge
mov
les
std
jb
or
mov
mov
pusha
dec
inc
dec
xor
mov
fstp
inc
mov
(bad)
sahf
rcr
ret
push
dec
cmps
loop
xor
mov
and
das
jnp
push
mov
test
inc
cli
pushf
mov
std
xor
gs
or
cmp
push
dec
xchg
mov
mov
out
into
sti
jmp
int
cmc
dec
lea
push
mov
jnp
jno
call
add
push
ds
jns
fisub
cdq
and
out
sbb
and
fabs
xchg
ins
leave
fwait
add
mov
pop
cmc
sbb
pop
into
(bad)
out
adc
call
mov
retf
xor
sti
dec
pop
lods
xchg
leave
jge
cmps
int3
outs
sub
scas
xchg
aas
jae
dec
cmps
mov
outs
ret
movs
dec
int3
fs
mov
push
jb
ret
jns
xor
(bad)
clc
mov
pop
out
shr
xor
xchg
mov
(bad)
xchg
cmp
jne
pop
fild
scas
push
dec
pop
mov
pop
pop
dec
scas
mov
pop
sub
shl
pop
aas
mov
and
aad
ins
in
push
in
mov
xor
mov
mov
xchg
push
sub
mov
jae
inc
pusha
push
pop
in
clc
outs
pop
or
push
aaa
repnz
and
push
push
outs
or
jb
idiv
inc
les
sub
into
sub
repz
jg
rol
aam
add
mov
cmp
push
fstp
mov
in
fadd
xor
and
fdiv
dec
int3
mov
in
add
(bad)
out
mov
std
pop
pop
push
jmp
aaa
and
aaa
enter
sbb
xor
ror
call
dec
leave
jno
push
test
cdq
jecxz
xor
test
dec
int
xchg
fxch
fldenv
cmp
lea
pop
aad
out
sub
retf
add
or
pusha
sub
int
push
push
sub
andps
lods
repnz
xchg
xchg
push
push
sbb
push
rol
and
cmp
dec
rcr
or
test
loop
je
xlat
jo
loop
shr
xchg
movs
ins
or
fbstp
leave
or
retf
xor
jo
neg
cld
icebp
add
cmc
inc
mov
push
jmp
dec
mov
fnsave
das
xchg
mov
mov
sub
ins
aad
shl
mov
mov
mov
jnp
mov
cmps
sub
das
aas
mov
cmp
mov
std
dec
push
imul
cmc
inc
mov
stos
xor
(bad)
stc
dec
mov
pop
dec
mov
jmp
es
les
sbb
push
rcr
test
mov
adc
out
add
xchg
mov
sbb
dec
into
dec
sbb
imul
pop
ja
adc
pop
stos
cmp
scas
data16
lahf
mov
fs
jne
mov
mov
pop
repz
cmc
aad
(bad)
clc
xchg
and
out
jmp
sahf
xor
mov
lods
mov
ss
shr
xor
pop
jno
inc
adc
fs
in
mov
jb
pop
push
lods
loope
neg
and
(bad)
mov
stos
xchg
jp
out
jns
or
(bad)
push
xchg
mov
push
(bad)
in
cmp
cmp
add
push
add
and
jo
pop
push
ret
lahf
in
inc
cdq
inc
sub
xchg
mov
dec
pop
push
stos
jae
repz
daa
movs
out
push
xchg
xchg
mov
cs
mov
xchg
dec
mov
xor
int3
(bad)
in
adc
jbe
hlt
xchg
sbb
sbb
adc
mov
jg
push
(bad)
clc
and
add
adc
mov
fldcw
add
mov
dec
xor
cwde
pop
cmp
push
push
loope
xchg
(bad)
sbb
jo
(bad)
ror
test
lock
aam
lea
mov
mov
shr
xor
add
pop
cmp
pop
jno
fcom
inc
push
push
adc
shl
xchg
inc
add
and
inc
outs
push
adc
pop
pushf
and
fcmovu
pusha
xchg
jmp
xor
xchg
gs
or
cdq
add
and
div
cwde
fisub
jo
sbb
rcr
dec
jmp
jmp
inc
add
lods
dec
add
pop
pop
test
lds
popf
pop
xchg
push
cmp
out
ret
loopne
sahf
div
pop
cs
mov
outs
ins
inc
push
fst
pop
xchg
test
dec
xchg
(bad)
push
test
xor
int
dec
cmps
inc
iret
xlat
popa
mov
jmp
sbb
mov
dec
test
pushf
cld
ret
sti
jl
lods
je
mov
mov
retf
jl
inc
mov
add
adc
add
add
mov
aaa
and
adc
mov
pop
outs
movs
stos
push
push
fsubr
ja
cli
and
cmps
in
and
shr
leave
in
cli
ret
cli
cmp
les
and
lods
cmps
inc
movs
mov
pop
out
jae
fisttp
popf
mov
and
cmp
sahf
pop
push
movs
dec
inc
int3
inc
int
aam
mov
mov
sub
pop
movlps
(bad)
hlt
aam
dec
jp
xchg
xchg
loopne
fidiv
sbb
jb
or
xchg
mov
js
rcl
or
cwde
or
aas
shl
cmp
mov
mov
aam
mov
pop
ret
push
cmp
mov
rol
or
ret
cli
ins
jb
xchg
xor
aaa
dec
(bad)
rol
aad
(bad)
xchg
push
repz
xor
mov
bound
(bad)
pop
das
(bad)
jns
xchg
repnz
retf
dec
pop
test
jle
popa
es
adc
pop
cmps
add
adc
xor
add
push
sahf
jg
ror
xlat
loop
movs
and
pop
adc
push
xor
add
mov
xchg
pop
mov
sbb
and
fistp
leave
pop
cli
cmp
dec
pushf
stos
mov
jae
mov
or
scas
stos
imul
add
xchg
lahf
retf
add
xchg
mov
adc
stos
adc
sbb
push
movs
sbb
ret
dec
and
lods
ja
mov
out
out
lea
inc
ins
push
jmp
es
adc
sbb
adc
out
repnz
scas
adc
sub
xor
idiv
ds
hlt
jmp
aad
cmc
and
cmc
push
pop
mov
cmp
test
and
xchg
mov
aas
mov
jmp
cs
pop
int
cmp
push
mov
inc
fbstp
fsub
iret
les
neg
and
lds
cld
cwde
idiv
and
out
cmp
xor
sub
sbb
push
pusha
inc
pop
sub
in
pop
outs
jl
mov
shr
add
mov
add
xor
dec
shl
inc
cmp
aaa
adc
and
xor
and
pop
sbb
sbb
aaa
test
rcr
shr
imul
jl
cwde
jns
hlt
or
mov
jo
enter
imul
jge
push
outs
cs
mov
gs
and
mov
pop
push
(bad)
hlt
inc
add
cs
jo
fwait
sub
jne
scas
xchg
int
fldenv
pop
add
cli
xchg
shl
int3
mov
(bad)
shl
call
loopne
aaa
movs
xor
sub
jle
push
pop
mov
repnz
or
push
push
jp
or
jmp
fwait
loope
mov
ds
add
adc
(bad)
sbb
dec
pop
pop
lods
or
mov
test
icebp
pop
outs
and
jle
push
inc
adc
push
frstor
imul
xor
sub
lods
enter
das
xchg
add
pop
fmul
out
adc
dec
sub
xchg
std
aad
ds
xchg
jmp
inc
pushf
lock
mov
ss
dec
cmp
pop
cmps
repz
xchg
cmp
(bad)
fdivrp
xchg
sbb
mov
mov
cmp
jo
aad
int
push
jns
xchg
shr
(bad)
fadd
pop
dec
scas
jno
in
or
sahf
mov
ret
adc
jnp
ret
cli
(bad)
jo
cmp
adc
push
cmc
sahf
sahf
fld
add
mov
sub
and
aam
movs
dec
jle
mov
das
movs
jmp
sbb
aas
and
and
xchg
out
cmp
movs
cs
imul
mov
cmps
outs
stc
movs
outs
mov
dec
push
dec
out
pop
outs
and
enter
and
js
lock
xchg
shl
mov
pop
or
mov
aas
call
repnz
lahf
mov
inc
aam
mov
xor
jnp
cli
push
xchg
and
adc
(bad)
shr
jl
cwde
shl
fstp
or
in
add
jnp
nop
xor
inc
adc
ds
stos
ja
mov
gs
call
cpuid
rcl
loope
lock
mov
hlt
xor
mov
xchg
ss
push
shl
add
mov
arpl
sub
and
mov
mov
pop
jb
xchg
mov
mov
shr
in
and
ficomp
repz
fcom
fimul
ins
dec
add
(bad)
dec
dec
lods
divps
ss
mov
pusha
dec
pop
xchg
cdq
xor
mov
ret
sub
pop
out
lods
mov
ret
ss
xchg
inc
(bad)
or
daa
or
jp
xchg
push
mov
je
hlt
xor
mov
popf
je
inc
or
inc
ret
and
sub
(bad)
pop
cdq
nop
mov
sbb
mov
sysenter
(bad)
(bad)
cmp
sub
xchg
stos
jecxz
push
xchg
ret
jp
cld
dec
mov
dec
xchg
mov
arpl
xchg
pop
lock
and
ret
lods
prefetchwt1
or
mov
add
sar
ret
cmp
scas
sbb
jl
idiv
push
rcl
es
xchg
(bad)
xor
mov
sub
mov
cmps
das
inc
leave
jo
dec
scas
push
cmp
call
xchg
mov
inc
xchg
dec
aad
in
test
out
inc
jmp
out
add
add
mov
dec
out
mov
icebp
(bad)
cdq
aaa
sbb
mov
xlat
mov
(bad)
mov
aad
inc
inc
repnz
aam
inc
(bad)
jecxz
mov
mov
test
dec
cmp
jnp
movs
jo
aaa
cmp
pop
movs
sub
scas
push
jmpw
cmc
rcl
sub
lods
mov
loope
loop
adc
pushf
pop
ja
fistp
sbb
rcl
in
shr
pop
dec
or
push
enter
sub
jg
xchg
fcmovne
sub
lods
inc
test
mov
or
dec
xlat
leave
stos
push
inc
jmp
cmps
and
aas
cmp
movs
pushf
sub
pop
(bad)
imul
mov
jno
or
mov
mov
and
push
cmc
fisttp
rcr
xchg
nop
fs
jb
push
std
inc
jl
xor
ins
sub
mov
inc
leave
pmaxsw
out
adc
jl
pop
and
movs
jbe
xchg
inc
mov
sub
sbb
sub
call
arpl
sbb
xor
(bad)
fisttp
pop
sbb
vpmaddwd
mov
xor
cmp
popa
shr
aad
jns
pop
dec
pop
mov
cmp
lock
test
movs
mov
fwait
out
mov
add
inc
sbb
mov
jge
cmp
in
jae
(bad)
push
in
xchg
add
xor
push
aaa
stc
and
retf
inc
xlat
movs
outs
pop
and
sub
jae
cmp
loope
lods
cmp
cmp
push
test
arpl
cmp
out
ret
add
pop
xchg
outs
sub
mov
mov
(bad)
xchg
mov
mov
loope
scas
and
sub
outs
loope
movs
jmp
idiv
xor
xor
mov
cmps
je
je
fmul
mov
mov
mov
test
mov
shl
push
push
pop
(bad)
xchg
mov
xlat
call
stc
sub
cmp
and
clc
xchg
adc
add
cmp
add
sti
fld
sub
mov
enter
or
in
lods
pop
icebp
adc
sub
cdq
or
jecxz
outs
out
dec
lea
popf
jle
(bad)
and
or
fcomp
pop
daa
push
jns
jg
das
jo
ds
and
test
pop
das
jle
xor
push
adc
mov
mov
stc
mov
mov
ret
hlt
sbb
sahf
or
cmp
mov
jl
std
xor
out
les
sbb
out
push
pop
mov
and
movs
loop
arpl
je
pop
pop
test
mov
shr
xor
movs
xlat
mov
hlt
xlat
push
popf
and
ja
ja
fs
mov
repnz
dec
leave
mov
push
inc
loope
pop
ins
stc
movs
cmp
out
(bad)
aad
push
xchg
mov
addr16
rol
iret
mov
jge
jo
ins
mov
sub
mov
mov
call
jo
cmp
sbb
xor
mov
test
leave
add
cmp
mov
xchg
imul
jle
inc
in
inc
push
movs
leave
xchg
dec
or
mov
vcomiss
mov
xor
ret
jno
neg
push
cmps
xor
sbb
inc
ret
inc
push
and
addr16
pop
push
fnstenv
adc
pushf
jne
mov
cmp
push
inc
in
cmp
in
in
cwde
data16
push
xchg
cmp
dec
leave
add
les
or
(bad)
dec
mov
scas
call
pop
pop
mov
mov
sub
sbb
dec
lods
jne
pop
loop
sub
gs
push
or
call
sbb
test
jmp
pop
fist
sbb
jl
and
test
pop
dec
add
push
clc
(bad)
test
test
out
adc
in
push
mov
mov
jae
je
or
inc
mov
call
lds
jl
xor
add
ror
mov
and
mov
call
loop
mov
loopne
ja
fldcw
mov
xor
jle
push
ins
mov
or
out
scas
clc
aad
or
adc
pop
aaa
jmp
cmp
cmps
jns
outs
jns
pop
dec
lods
jb
push
push
inc
ss
mov
rcr
pop
sbb
idiv
and
pop
pop
push
mov
pop
(bad)
mov
loop
fmul
mov
or
(bad)
not
ret
cmp
xor
cmc
icebp
or
jecxz
mov
jle
(bad)
jne
fucom
fmul
mov
inc
dec
shl
sbb
adc
lods
leave
dec
jmp
dec
or
sbb
mov
imul
inc
daa
ds
cmp
pop
add
sti
mov
cmps
jb
test
(bad)
pop
push
call
fs
lods
xchg
inc
push
rcr
pop
inc
test
cdq
adc
dec
stc
mov
stos
rcr
pop
adc
mov
mov
xchg
jns
sti
out
jns
inc
dec
inc
pop
lds
in
(bad)
and
mov
pop
xchg
jl
dec
or
and
icebp
pop
test
pop
lods
sti
sub
cmps
inc
sub
aam
sub
test
ss
adc
nop
(bad)
fst
jns
mov
shl
test
loope
fwait
scas
xchg
je
mov
mov
outs
push
jmp
call
fsub
in
inc
popf
mov
call
es
mov
mov
xchg
pop
jp
rcl
inc
aaa
test
add
and
test
and
push
int3
jg
movs
ja
or
call
pushf
call
idiv
stc
cmp
inc
repnz
icebp
sub
xor
mov
adc
cld
(bad)
stos
lea
shl
xchg
std
sbb
push
and
pop
jmp
xor
cli
pop
stos
gs
lods
pop
mov
add
sub
dec
add
adc
sbb
push
and
cmp
lahf
(bad)
mov
sub
xchg
stos
xlat
fnstsw
cmps
addr16
adc
and
sub
mov
add
repz
test
in
mov
sub
daa
(bad)
pop
sbb
aam
and
cwde
push
cmc
adc
jno
xor
(bad)
pushf
pop
sbb
xor
call
faddp
test
enter
in
xchg
or
nop
mov
adc
test
mov
pop
fs
cs
xchg
jae
push
cmp
fwait
mov
clc
std
loop
mov
adc
out
mov
and
rcr
popa
cmp
lods
fcmovnb
and
mov
and
push
jbe
push
loop
dec
fmulp
std
push
lahf
inc
out
mov
push
js
xor
in
(bad)
int
daa
into
fisub
cmp
mov
rcl
xor
xchg
pop
sub
push
lea
sbb
mov
mov
push
adc
push
or
retf
or
inc
jae
xchg
popa
add
sbb
jbe
mov
add
popa
inc
ret
ror
cmp
push
jnp
xchg
jns
xchg
bnd
jns
pop
mov
push
stos
sti
in
push
dec
pop
jecxz
call
fiadd
stos
fisttp
push
and
pop
(bad)
(bad)
fcom
icebp
xor
mov
cmp
or
sbb
adc
push
dec
fbstp
inc
retf
mov
sbb
leave
out
xchg
cvtdq2ps
cld
loop
jbe
hlt
rol
out
clc
ja
mov
out
cmp
hlt
imul
dec
xor
aad
cwde
xchg
xchg
imul
fs
lock
mov
repnz
xor
push
push
pop
and
sti
lea
out
add
push
loope
int3
pop
ror
(bad)
mov
imul
scas
and
retf
inc
jle
dec
outs
cmp
mov
xlat
xor
sub
sub
sar
xor
push
push
dec
cmc
jne
jns
imul
test
out
cmp
sbb
nop
xchg
dec
adc
cmps
inc
pusha
lahf
imul
bound
fcom
push
into
and
cmc
push
lds
in
rol
aam
pusha
test
xchg
pop
not
xor
imul
shr
push
dec
sti
je
mov
call
add
inc
cmp
scas
mov
outs
pop
movs
(bad)
rcl
mov
ret
inc
inc
fcom
cmp
or
sub
mov
mov
pop
aam
pushf
movs
inc
add
inc
dec
sbb
out
mov
(bad)
rcl
(bad)
aad
sub
mov
loopne
mov
cmp
xlat
enter
jb
les
icebp
mov
sar
mov
jmp
inc
mov
mov
inc
(bad)
scas
call
mov
push
sub
mov
shr
imul
add
test
cmp
repnz
sbb
adc
addr16
mov
icebp
cmp
div
mov
adc
dec
mov
push
cwde
cmp
xchg
je
jo
xchg
mov
cli
neg
mov
and
pop
ret
cmps
int3
xor
pusha
fadd
in
mov
xor
iret
fwait
mov
push
jne
inc
add
push
mov
xchg
xlat
mov
mov
and
mov
adc
sub
sub
inc
sbb
add
je
mov
imul
outs
movs
add
test
jae
push
jae
(bad)
sub
aaa
dec
inc
fld
idiv
add
imul
sub
in
loopne
and
push
mov
adc
shl
adc
fisubr
mov
push
mov
sub
sbb
push
jo
push
out
cmps
mov
mul
push
shl
jmp
nop
ja
cmp
xchg
adc
cmp
ffreep
int3
mov
retf
mov
std
mov
mov
jmp
push
imul
xchg
xchg
bnd
push
inc
inc
mov
or
outs
sbb
cwde
int
(bad)
in
xor
sbb
mov
and
js
or
adc
retf
xor
xchg
xor
or
and
sbb
adc
xlat
jne
retf
adc
cmp
mov
hlt
mov
xchg
jbe
fadd
sub
enter
mov
dec
pop
adc
dec
enter
retf
out
int3
mov
out
pusha
int3
sub
pop
dec
or
inc
pop
add
add
or
pop
inc
and
xor
leave
mov
adc
jnp
dec
cld
xchg
test
inc
add
daa
loopne
push
into
das
jecxz
loop
jo
movs
jnp
adc
aad
push
or
jno
into
jle
and
or
adc
fdiv
push
das
fmul
inc
mov
jmp
movs
inc
gs
or
loopne
mov
test
mov
mov
jle
mov
dec
sub
push
movs
sahf
fwait
lea
hlt
sub
or
sbb
sbb
dec
(bad)
cld
mov
and
cmp
jl
mov
mov
std
sar
add
cdq
(bad)
loop
out
push
cmp
xchg
leave
stos
ins
dec
sub
inc
sub
fdiv
popa
movs
or
jmp
in
jno
call
(bad)
and
or
dec
sub
mul
xor
fistp
jbe
and
mov
adc
inc
(bad)
sub
pop
shl
mov
sub
adc
(bad)
add
test
push
pusha
inc
(bad)
cmp
mov
mov
push
lea
mov
pop
hlt
retf
push
push
mov
stc
xchg
lock
inc
sahf
(bad)
dec
lods
mov
push
inc
sti
add
mul
mov
cmps
out
mov
int
xor
(bad)
aaa
mov
pusha
sub
ror
(bad)
jmp
outs
jp
fdiv
daa
fcom
je
stc
mov
cmps
data16
stos
out
dec
jbe
stos
xor
jb
test
push
ds
jecxz
(bad)
and
adc
ror
pause
inc
mov
stos
push
adc
cmp
mov
inc
mov
cmp
push
or
ja
(bad)
fcom
jge
push
sub
lock
xchg
retf
add
cld
iret
lea
retf
xor
pop
sbb
pop
adc
inc
inc
dec
das
mov
xchg
ret
aam
aam
mov
mov
add
shl
mov
arpl
push
xchg
mov
sub
stc
xchg
jp
jns
mov
inc
push
out
sub
sub
xchg
jle
dec
scas
nop
sbb
fsubr
fdiv
adc
jns
or
add
in
xchg
dec
(bad)
stos
scas
xor
jmp
pushf
call
and
or
cmp
lea
iret
and
ins
and
mov
aad
inc
test
pop
fsubr
call
mov
stos
in
les
jo
mov
mov
test
jnp
xor
(bad)
push
out
mov
pop
leave
and
mov
jp
push
cdq
rcr
dec
push
dec
leave
or
shl
mov
fmul
xor
inc
mov
add
and
adc
cmp
aad
sub
pop
cld
out
xchg
mov
xor
jmp
repnz
sub
sbb
(bad)
iret
cmp
sub
in
sub
ror
int
xor
jp
push
mov
lods
add
dec
mov
lock
xor
cwde
mov
movs
ret
into
cmp
cdq
fdivr
(bad)
dec
lea
icebp
or
outs
test
jmp
(bad)
call
movs
ret
sbb
sbb
jmp
xchg
mov
mov
jnp
xchg
adc
xchg
dec
loope
gs
outs
pop
lea
inc
xchg
mov
out
and
pop
push
fidivr
xor
jmp
aad
mov
int3
aad
adc
mov
fs
dec
cmps
and
cmps
into
sub
sbb
cmp
dec
sbb
mov
mov
jno
repz
shr
test
sub
in
(bad)
dec
fcmovnu
scas
mov
jmp
not
mov
xlat
movs
push
xchg
movs
jp
loopne
pop
bound
lods
xor
ds
jle
add
stos
icebp
push
mov
sbb
mov
ins
xchg
jge
fsubrp
test
adc
cld
sti
leave
out
mov
leave
mov
ret
inc
fist
mov
mov
lods
in
mov
(bad)
loopne
inc
ret
xchg
ss
les
ss
rcr
out
mov
mov
xor
out
cmp
cmc
xor
xchg
(bad)
call
dec
sbb
cmp
mov
pop
lods
adc
cmp
or
ret
jns
add
sar
popa
ret
fdivr
mov
ins
sub
mov
sahf
xor
(bad)
aas
dec
push
daa
nop
mov
mov
dec
ret
jno
xchg
cli
ds
shl
mov
aaa
out
bound
popa
cmp
enter
aaa
pop
dec
adc
fwait
push
call
push
arpl
retf
test
imul
stos
or
call
push
sub
jle
xchg
jg
fidiv
xor
(bad)
jns
test
ss
rol
(bad)
out
mov
mov
sub
mov
popf
lds
cmp
or
dec
cmp
and
inc
or
rol
jle
sub
mov
imul
ret
loopne
mov
scas
push
jo
scas
adc
mov
sub
addr16
(bad)
lods
mov
mov
cmp
dec
cli
fcomi
push
ss
dec
movs
add
cmps
dec
out
mov
clc
stc
pop
das
(bad)
in
xor
pop
call
push
inc
cmp
mov
inc
retf
outs
and
fsubr
jnp
pop
int3
add
aam
ret
mov
in
mov
icebp
fidiv
or
ret
(bad)
ror
mov
bound
je
loopne
repz
xlat
adc
inc
not
mov
inc
lahf
mov
jge
push
jbe
add
jbe
inc
mov
and
mov
popf
in
mov
pop
addr16
ror
(bad)
shl
pop
pop
jl
sahf
mov
add
add
cld
jmp
popa
xor
mov
mov
inc
mov
inc
out
cld
pop
aaa
outs
sub
jl
lds
xchg
xor
add
lea
stos
push
or
(bad)
and
stc
xchg
pop
bound
fwait
cmp
xchg
pop
xchg
inc
int3
inc
in
addr16
xchg
lds
jl
cmp
push
cmp
pusha
lods
cli
cdq
lock
retf
retf
sbb
std
sbb
loope
je
(bad)
int3
add
arpl
inc
push
sub
mov
inc
sbb
adc
and
xchg
or
cmp
add
sbb
xor
sub
mov
nop
mov
out
lods
or
stos
fisubr
mov
aas
or
or
pop
ins
sbb
adc
jno
mov
push
test
mov
jmp
xchg
fisubr
sbb
jb
cmc
mov
test
lahf
inc
push
or
fcmovb
(bad)
xchg
mov
pop
push
xchg
fiadd
sahf
push
shr
fisub
push
mov
out
iret
add
mov
add
add
(bad)
sbb
sahf
xchg
idiv
jno
sub
jbe
xor
lds
outs
mov
dec
jp
ja
pop
retf
mov
sqrtps
mov
ss
ins
or
outs
sbb
stos
sbb
jle
jno
sbb
sbb
out
mov
push
div
ret
data16
sub
outs
aad
es
xchg
call
test
(bad)
(bad)
outs
inc
movs
imul
inc
push
cmp
inc
sbb
movs
mov
mov
icebp
push
jae
sbb
aas
or
jne
add
test
sbb
imul
fwait
adc
fucomi
movs
mov
not
in
mov
jae
xchg
out
push
inc
fwait
add
and
inc
sub
call
mov
dec
pushf
or
shr
inc
lock
ret
mov
ret
in
test
fld
repnz
and
sub
or
push
data16
mov
push
ja
js
into
js
fxch
cdq
loopne
retf
sub
push
clc
lock
adc
ds
jl
call
sbb
mov
sar
stc
xchg
jle
mov
dec
push
js
outs
int
jns
lahf
stos
out
out
pusha
adc
sti
sar
inc
rcl
or
cmc
add
mov
arpl
ss
mov
int
icebp
xchg
test
test
inc
sbb
adc
aas
sahf
dec
jo
add
xchg
ror
dec
leave
sbb
adc
cmps
dec
sahf
sbb
mov
mov
inc
(bad)
ins
lods
dec
lahf
bound
leave
mov
(bad)
xchg
daa
pop
stos
cmps
add
shr
hlt
xchg
cmps
add
fld
mov
xchg
adc
or
out
and
pop
and
push
push
and
sbb
mov
mov
ds
mov
mov
jl
pop
pop
ds
inc
ficomp
push
dec
scas
mov
icebp
mov
push
xchg
fs
outs
icebp
push
nop
sub
jmp
xlat
sbb
pop
jecxz
repz
rol
into
mov
fs
mov
jbe
aad
adc
cmp
popa
call
or
mov
out
cmp
fidiv
into
fdiv
jns
and
lods
test
pop
mov
jp
mov
sbb
mov
(bad)
xor
imul
in
push
xchg
aaa
shl
sub
(bad)
es
or
and
pusha
push
sub
and
fbld
jmp
lock
sub
xor
addr16
cmps
push
adc
fdivp
push
cdq
or
xchg
(bad)
inc
jbe
sbb
repnz
lods
arpl
mov
inc
xchg
push
add
or
inc
adc
mov
jmp
retf
js
stc
jno
ror
(bad)
fiadd
add
unpckhps
lds
inc
scas
pop
enter
mov
push
add
pusha
aad
lds
je
hlt
add
cmp
div
inc
add
jecxz
mov
adc
popa
push
lods
inc
dec
xchg
aad
jne
lods
sub
(bad)
cmp
out
bound
hlt
mov
lds
cdq
inc
jmp
ds
adc
popf
std
(bad)
retf
push
add
gs
dec
pop
hlt
sbb
je
dec
sbb
pop
sbb
sub
inc
and
xor
es
add
xchg
ins
push
pop
mov
cli
out
add
scas
fwait
in
lock
mov
or
fild
aaa
push
cmp
inc
cmp
adc
pop
nop
test
xchg
fiadd
push
loopne
ss
cmp
in
push
shl
scas
inc
xor
dec
ins
mov
or
mov
push
in
leave
mov
mov
ins
dec
popa
(bad)
mov
outs
pop
sahf
shl
and
xor
in
fwait
jb
or
adc
push
xchg
in
in
push
mov
(bad)
mov
adc
and
pop
xor
cmc
sub
sbb
inc
inc
std
scas
jae
inc
xchg
dec
out
inc
hlt
mov
gs
fdivr
add
fnop
mov
daa
scas
adc
push
clc
bound
push
shl
imul
retf
add
push
add
or
xor
inc
adc
mov
jbe
cmp
mov
popa
adc
sbb
dec
inc
adc
leave
xor
sbb
mov
jecxz
leave
inc
fnstenv
sti
jmp
xor
push
sub
ret
cmp
inc
mov
adc
stos
loop
test
ret
dec
inc
jno
(bad)
xor
loop
shr
pop
repnz
iret
movs
es
fxch
ret
jo
js
cld
mov
push
sbb
sar
test
outs
pop
pop
aad
out
xor
cdq
or
ret
adc
sub
imul
ror
adc
jo
les
js
push
inc
sbb
pop
mov
inc
in
or
in
int
cwde
cmps
push
xor
jns
shl
inc
test
and
mov
adc
or
adc
sub
and
adc
or
in
ins
test
arpl
push
stos
rcr
mov
jle
adc
movs
inc
and
sbb
int3
mov
ror
cmp
jbe
jle
dec
int
jne
xchg
sbb
mov
cmc
mov
sub
lock
xchg
pop
ins
lock
ror
jns
adc
sbb
sbb
xor
add
call
pusha
out
push
leave
mov
mov
fiadd
and
or
mov
loop
push
jmp
xor
push
jg
or
ins
jnp
xchg
or
xor
dec
ficomp
in
pop
aas
xor
lods
sar
int3
lock
cmc
scas
shl
jo
dec
arpl
div
cs
popa
xor
rol
mov
xchg
ret
in
xor
add
jbe
out
lahf
gs
adc
scas
mov
fwait
repnz
push
stos
push
add
mov
mov
mov
jmp
setge
imul
les
(bad)
push
cli
mov
popa
mov
mov
sbb
int
fdiv
dec
push
sub
pop
iret
sahf
sub
push
clc
pop
cmp
dec
jb
and
ins
(bad)
loope
inc
(bad)
test
jecxz
add
lods
(bad)
mov
out
pushf
(bad)
out
(bad)
push
add
idiv
test
outs
add
adc
pop
popf
pop
in
test
shr
sub
stos
sub
popa
add
daa
(bad)
mov
dec
xor
out
inc
dec
cmp
pop
dec
das
(bad)
aam
enter
mov
xchg
int
stos
dec
in
mov
scas
dec
xchg
cld
inc
and
or
jl
inc
lods
mov
sti
cld
popf
inc
sahf
mov
sbb
out
push
inc
arpl
icebp
jo
imul
test
clc
imul
xchg
shl
xor
stos
(bad)
out
call
xlat
dec
in
xor
daa
pop
sbb
test
and
outs
and
ins
in
adc
inc
dec
ins
leave
mov
pop
ja
stos
adc
arpl
mov
push
shr
inc
jo
inc
into
push
fldcw
adc
adc
sub
loopne
ret
inc
mov
cwd
rol
retf
mov
adc
test
sbb
inc
sub
clc
or
lahf
int3
push
pop
and
outs
in
or
sub
iret
add
jp
inc
mov
(bad)
stos
inc
jge
pop
add
sub
or
xor
ror
cmp
sbb
test
pop
sbb
mov
ret
xchg
movs
loopne
rcl
jns
inc
xor
dec
add
rcl
je
and
mov
dec
int
push
in
fsub
sbb
or
fisub
fcmovu
stc
dec
in
xor
in
cs
loope
cmp
mov
mov
mov
sub
test
inc
dec
cmps
test
rcr
xchg
outs
test
imul
add
cwde
add
sub
jmp
inc
stos
mov
fs
cmp
leave
sbb
mov
or
aas
inc
and
adc
lods
or
mov
xchg
add
xor
rcl
cmp
aad
mov
dec
cwde
cld
mov
jo
jp
xchg
xor
push
jle
push
mov
jo
cdq
sbb
imul
loop
lahf
addr16
clc
mov
and
pop
movs
imul
pop
test
pop
pusha
shl
sbb
mov
cmps
(bad)
(bad)
fbstp
mov
stos
xchg
pop
stos
or
sbb
shrd
mov
push
add
stos
cld
(bad)
sahf
mov
dec
adc
ret
lds
call
loope
mov
and
jg
add
adc
mov
and
stos
jb
arpl
movs
xchg
jo
out
sub
pop
sub
arpl
mov
call
or
loopne
repnz
sub
ins
add
xor
cmp
std
bswap
sbb
cwde
popa
xchg
pop
cmp
adc
loopne
out
fcom
adc
loopne
mov
sbb
pop
cmp
test
add
mov
(bad)
jecxz
int
jl
cld
sub
push
inc
pop
into
outs
out
outs
dec
sub
test
imul
cmp
xor
push
cld
xchg
mov
hlt
push
push
xchg
jae
lods
stos
mov
jno
cld
jno
mov
fs
nop
adc
jl
ror
push
cli
push
outs
dec
sbb
stos
push
push
xor
cmp
sbb
mov
dec
fstp
add
in
imul
repz
xor
push
sti
sbb
frstor
cmp
cmp
psrlw
mov
nop
xchg
mov
bound
fidivr
mov
dec
mov
imul
sub
out
loope
and
dec
retf
push
pop
and
pop
adc
add
push
daa
mov
xchg
sub
cmc
jmp
or
in
push
mov
add
rol
sub
mov
rcl
pop
jo
push
nop
shr
sub
jle
and
lods
ror
sub
pushf
neg
push
lea
xchg
adc
xchg
test
fwait
xor
sbb
call
scas
push
jg
div
ret
xchg
outs
and
jno
or
rcl
sbb
sub
inc
cwde
cmp
mov
inc
jmp
mov
xchg
xchg
repz
push
es
add
(bad)
xor
int3
aaa
dec
mov
jg
jb
or
xor
pop
call
adc
xchg
jge
xchg
scas
dec
xchg
and
scas
lea
adc
cmps
and
dec
dec
add
cmp
or
push
dec
inc
(bad)
out
ins
dec
ja
push
movs
or
dec
adc
lods
or
cwde
(bad)
xchg
inc
scas
lea
popf
test
pop
mov
xor
adc
fst
aaa
dec
icebp
fidiv
dec
in
(bad)
cli
stos
bound
dec
dec
xor
mov
jne
popa
xor
inc
xchg
enter
sub
dec
xchg
mov
sbb
je
fwait
jge
les
jne
mov
xchg
jg
pop
pop
out
mov
push
movs
dec
in
into
std
cmp
inc
cmp
lahf
loope
or
test
lds
pop
pop
out
(bad)
and
jge
je
test
pop
shl
test
cmp
sub
test
mov
sub
sbb
cs
xchg
bswap
es
xchg
pushf
fucomip
cmp
int
add
pop
mov
shr
call
mov
push
sbb
add
shl
xor
sub
(bad)
sahf
pop
ror
cmps
fadd
aaa
into
shl
(bad)
jb
int
xchg
cmps
test
(bad)
jl
(bad)
cmp
dec
mov
sub
jmp
push
imul
mov
ja
je
mov
pushf
lods
mov
mov
and
or
pop
add
sub
fcomip
in
push
mov
adc
lahf
aad
dec
push
and
nop
cld
push
sub
pop
add
pop
and
cdq
xchg
ja
sbb
jae
pop
sti
xchg
je
ins
and
mov
push
rcl
out
jl
jmp
mov
popa
stos
inc
icebp
mov
scas
(bad)
rcr
xor
push
adc
adc
mov
and
xchg
loop
call
cmp
shl
int3
pop
cmp
mov
fldcw
shl
sub
repz
xchg
xchg
mov
int
je
in
test
icebp
or
fst
or
mov
mov
jmp
outs
push
in
es
cmp
es
push
or
mov
in
pop
stos
dec
bswap
mov
inc
(bad)
or
xor
into
push
jae
mov
mov
sub
loopne
xchg
adc
cwde
lock
mov
xchg
add
dec
js
fcom
in
ret
leave
scas
call
mov
(bad)
ds
addr16
add
xchg
xchg
mov
adc
test
xor
das
test
mov
xor
push
sub
and
sub
pop
cdq
cmc
xor
in
ja
or
mov
cli
dec
scas
neg
xchg
add
fs
xchg
psubb
cmps
push
push
push
mov
icebp
adc
out
push
add
mov
shl
(bad)
mov
pop
mov
neg
cmc
arpl
mov
stos
mov
hlt
shl
jnp
fnstcw
fwait
and
sbb
les
outs
add
add
scas
xchg
repnz
inc
aas
jns
jae
mov
sbb
out
test
hlt
push
in
test
popa
adc
dec
stos
mov
sub
and
in
neg
fucomp
adc
mul
rcr
fdiv
sbb
pop
sbb
add
sbb
imul
hlt
or
aas
cmp
fimul
adc
pop
add
adc
in
mov
or
cmc
adc
jg
or
scas
stc
sub
out
dec
jl
cmp
(bad)
and
sar
inc
ret
pop
fidiv
mov
cmpxchg
lds
test
inc
cmp
pop
inc
sbb
pusha
xor
jle
mov
mov
mov
leave
rcr
add
nop
sub
cli
jbe
(bad)
pop
gs
adc
sbb
aad
inc
mov
cmp
test
pop
xor
jae
sub
movs
xor
cdq
pop
push
jae
push
daa
push
(bad)
out
mov
cmc
inc
test
sub
cli
test
push
xor
enter
(bad)
mov
dec
xchg
lods
inc
adc
sbb
mov
inc
popf
or
daa
ins
pop
or
or
sbb
push
jno
push
in
mov
imul
mov
inc
mov
repnz
fs
bound
add
mov
xchg
xor
and
xor
xor
mov
pushf
mov
adc
jmp
retf
adc
outs
sbb
push
and
sub
lock
stos
cmc
sbb
sub
jle
in
mov
clc
sbb
xor
adc
sub
xchg
jae
ja
adc
das
in
ss
repz
push
adc
(bad)
scas
fsub
sub
aad
mov
mov
cmp
out
ror
out
jae
js
mov
fistp
fstp
xchg
out
loopne
mov
jmp
hlt
jl
aam
pop
in
jp
aam
out
test
stc
sti
mov
inc
mov
lahf
pusha
push
(bad)
popa
(bad)
xchg
stos
outs
outs
mov
mov
sbb
outs
cmps
mov
jmp
cmp
push
je
stc
sub
pop
push
adc
sbb
inc
xchg
mov
and
movs
outs
ins
add
sub
pop
mov
sub
xlat
imul
jno
dec
sar
adc
push
mov
mov
test
add
sub
test
sar
dec
mov
into
mov
imul
adc
imul
mov
test
es
sub
fwait
jmp
push
jmp
sbb
mov
shl
not
add
cs
hlt
mov
es
(bad)
test
(bad)
mov
dec
cmps
push
mov
mov
mov
and
bound
xor
or
add
push
xlat
out
cmps
loopne
std
inc
call
cmp
mov
(bad)
jae
ss
aam
je
dec
jle
into
xor
das
stos
pop
mov
sbb
shr
xlat
mov
inc
lods
or
sub
pop
push
lahf
cmp
lock
inc
arpl
dec
add
dec
fcmove
add
cmc
es
repnz
push
test
js
sbb
dec
cmp
or
cmp
inc
jmp
or
xchg
jge
inc
xchg
inc
js
mov
into
xchg
mov
xchg
stos
push
adc
cmp
mov
cmp
mov
loope
dec
cmps
out
(bad)
repz
inc
xchg
movs
hlt
in
fldenv
out
ror
test
(bad)
lea
add
pop
jbe
adc
jns
push
mov
cmps
je
adc
xchg
cmps
pop
(bad)
(bad)
jg
fwait
xchg
lea
and
mov
cdq
ret
and
sub
add
adc
push
xlat
xchg
(bad)
int
stos
pop
aad
adc
das
pop
lahf
xchg
adc
call
dec
and
aaa
call
sub
and
bound
arpl
loop
js
mov
ret
ret
rcl
mov
paddusw
or
rcl
sub
imul
mov
jns
or
push
dec
and
jp
(bad)
vpmaxsw
cmps
into
cmp
mov
test
je
popa
iret
pop
add
mov
cmp
enter
out
lock
mov
ds
adc
and
movs
adc
test
out
push
fld
dec
jg
inc
mov
mov
mov
lods
pop
test
add
push
(bad)
jmp
mov
rol
or
nop
bnd
fwait
cmps
retf
idiv
fisub
movs
xchg
test
xchg
inc
mov
mov
fldenv
cdq
mov
call
aam
rcl
mov
sub
inc
out
test
ja
nop
add
ror
sub
sti
inc
pushf
mov
add
aaa
cmps
cmps
xor
lods
or
shl
test
mov
aaa
pop
jg
dec
std
ficomp
xor
bound
fwait
idiv
arpl
and
add
dec
sub
nop
dec
sbb
or
and
sub
sub
jb
pop
sub
call
xchg
mov
push
push
adc
fcmovnb
dec
outs
jecxz
aaa
add
bound
sub
mov
xlat
cmovnp
mov
push
adc
mov
ja
push
hlt
int3
jmp
jb
add
(bad)
ds
xor
adc
xchg
es
daa
(bad)
sbb
sbb
cmp
ficom
daa
fidivr
inc
out
push
and
inc
add
mov
add
mov
xchg
sbb
fmulp
aaa
pop
lods
hlt
and
test
das
push
js
jbe
ficomp
ror
add
cmp
sub
inc
es
cmps
xchg
out
scas
mov
jmp
sar
fisubr
mov
mov
into
push
cmp
stos
stos
adc
inc
xchg
out
jnp
iret
add
jge
in
pop
and
adc
not
(bad)
stos
or
adc
int3
xchg
pop
sahf
scas
pop
rcl
or
mov
mov
lds
fsubr
addr16
xchg
inc
jl
xchg
mov
stos
and
int3
mov
xchg
mov
push
retf
sbb
sbb
cld
or
cwde
into
adc
pop
jb
dec
push
dec
(bad)
sub
xor
ret
sahf
pop
cs
imul
loop
outs
mov
inc
mov
in
or
fs
(bad)
mov
mov
(bad)
mov
clc
xor
cdq
inc
mov
daa
sub
imul
std
dec
add
call
pop
movs
or
rol
bound
and
stos
mov
addr16
push
movs
mov
mov
sbb
jle
or
ins
jo
inc
int
call
push
jo
and
sub
jae
out
(bad)
jns
xor
jnp
out
ss
jle
les
cmc
pushfw
cmp
dec
ins
push
aam
test
mul
arpl
push
adc
popa
jnp
push
aaa
loopne
enter
add
ins
and
ror
pop
test
pop
and
cmps
push
movd
ficomp
sub
xlat
mov
adc
out
pop
or
add
or
jg
and
push
ins
and
les
jo
out
test
fadd
jmp
sti
or
(bad)
jae
cli
inc
movs
std
pushf
or
mov
jecxz
and
jle
mov
push
sahf
dec
addr16
adc
cmp
mov
loope
ret
dec
fstp
jle
ds
ret
adc
add
xchg
pop
test
or
mov
enter
imul
retf
das
xchg
cmps
pop
push
dec
xchg
mov
cmp
xchg
aaa
nop
jl
mov
mov
xchg
pop
sbb
mov
pop
push
jg
fistp
mov
sub
push
jle
push
out
mov
xchg
or
dec
push
push
fmul
sbb
call
sbb
nop
stos
dec
mov
jl
dec
ret
sbb
mov
pop
ins
les
and
dec
jge
loop
out
pop
lds
xchg
adc
(bad)
sbb
loopne
fstp
call
sbb
lods
retf
repnz
arpl
mov
in
push
push
cmp
mov
pusha
jmp
fmulp
popf
cs
inc
sub
mov
pop
dec
push
mov
loop
cmps
enter
jnp
mov
jg
mov
out
dec
arpl
push
sub
in
sbb
shl
pop
test
sub
xor
fild
pop
in
jns
imul
loopne
cld
out
and
and
(bad)
dec
pushf
cmps
inc
dec
rol
or
not
inc
xor
cmc
inc
sub
frstor
lods
jae
xchg
cli
xlat
dec
cld
(bad)
mov
imul
int3
aam
aam
inc
out
loope
push
jecxz
mov
pop
sub
in
in
hlt
enter
shr
push
out
clc
xchg
(bad)
shr
pop
retf
out
inc
pop
inc
adc
sub
xor
rcl
pop
bound
sub
shl
sub
cmp
outs
out
je
scas
mov
or
scas
std
shl
lock
cmp
loopne
push
push
loope
jbe
dec
test
addr16
mov
and
pop
sbb
pushw
sub
mov
ja
and
xor
mov
movs
fsub
adc
popa
cmp
ins
mov
retf
push
jge
xlat
push
stc
in
cmp
stos
cmp
(bad)
call
and
lds
and
fisubr
ins
or
xchg
loope
test
mov
test
pop
xchg
(bad)
adc
mov
push
jl
pop
clc
mov
adc
imul
repnz
mov
mov
pushf
(bad)
mov
ins
jne
nop
loop
adc
stos
div
call
scas
popf
jmp
mov
movs
push
xchg
mov
cs
lea
jp
lds
out
lock
pusha
lds
nop
outs
test
and
and
jno
dec
sub
shr
adc
jne
jne
xchg
add
test
mov
(bad)
movs
cwde
or
mov
adc
dec
mov
and
adc
imul
cmp
pop
xchg
add
jmp
icebp
jnp
cdq
mov
pop
xchg
push
jg
pop
mov
mov
mul
ins
sbb
pop
into
xchg
repz
mov
sub
(bad)
add
lea
inc
add
mov
outs
shr
or
jge
sbb
scas
sbb
fcom
xor
jp
cvtps2pd
jmp
test
push
(bad)
imul
adc
pop
inc
mov
add
rcr
in
add
sbb
cmp
out
out
inc
mov
mul
push
dec
imul
lahf
(bad)
and
and
stos
test
cmp
mov
or
imul
mov
sub
aad
push
shr
dec
sub
sbb
fxch
adc
movs
movs
xor
fs
lds
jb
jle
mov
add
jl
fs
in
xor
js
icebp
mov
adc
shr
sub
fistp
pop
stos
inc
enter
jecxz
in
loopne
iret
sti
cmps
mov
cmps
enter
jge
cmc
sbb
jb
repnz
ret
and
cmp
dec
cli
cmp
adc
jg
aaa
cmc
aas
sub
stos
aas
xor
lahf
(bad)
cli
mov
addr16
rcl
cmps
outs
fmulp
iret
cmp
dec
cmps
dec
lods
fs
pop
es
out
mov
neg
sub
fist
add
xlat
icebp
scas
idiv
jmp
cwde
or
xor
outs
repz
inc
add
pusha
test
push
or
outs
and
cmp
icebp
in
mov
inc
retf
rcr
cmp
(bad)
sbb
and
call
adc
loop
or
inc
data16
add
mov
sub
test
pinsrw
cwde
mov
mov
(bad)
dec
mov
xor
add
jmp
mov
jecxz
(bad)
xor
sub
push
mov
in
pop
and
adc
inc
imul
mov
jbe
xor
icebp
add
out
shr
bound
std
div
outs
mov
ins
cwde
jl
add
and
addr16
nop
enter
loope
mov
xlat
sbb
das
jg
xchg
or
or
xor
lods
cmc
sbb
jmp
fmul
jg
jmp
mov
push
pop
lods
es
sub
out
or
lods
cmp
adc
cld
test
sahf
(bad)
cmp
and
inc
pop
loopne
pop
lock
and
mov
push
das
sub
xor
xor
test
adc
and
push
pop
sbb
mov
sub
cs
inc
stos
cmp
and
out
lods
adc
cmp
cld
mov
test
mov
adc
mov
push
add
iret
in
sub
mov
int
inc
xor
mov
in
jmp
mov
popf
daa
sub
adc
sahf
retf
ret
pop
ret
dec
sbb
mov
popa
pop
lahf
push
mov
jne
cmps
fmul
cmps
add
adc
cmp
and
or
mov
mov
and
call
or
test
shl
lds
dec
in
je
aad
xor
and
inc
pop
xlat
(bad)
sbb
lahf
mov
sbb
mov
sub
call
das
repnz
outs
fbld
shr
ret
je
out
mov
retf
dec
adc
ret
mov
std
(bad)
push
fdivr
gs
fild
xchg
retf
sti
push
xchg
ds
jbe
sub
push
shr
ret
jg
adc
mov
mov
jno
loop
mov
dec
jmp
out
sar
repnz
cwde
and
adc
jnp
dec
push
js
xor
push
xchg
inc
mov
test
push
dec
out
in
pop
ja
dec
imul
les
hlt
pop
(bad)
mov
inc
adc
rcr
lods
jbe
jbe
adc
dec
dec
adc
mov
and
cmp
fidivr
xchg
mul
addr16
repz
dec
sub
sbb
jnp
loop
sbb
out
push
(bad)
fmul
mov
cwde
fxch
jnp
inc
daa
mov
jg
cmp
and
lahf
push
dec
stc
dec
pop
mov
pop
cmp
add
and
mov
stos
fild
add
pop
shl
xchg
rol
rcr
and
ret
mov
add
mul
outs
sbb
xor
frstor
mov
bound
lea
(bad)
inc
call
sar
leave
ss
mov
jae
push
sbb
jmp
or
add
and
pop
and
std
mov
(bad)
sub
mov
je
out
outs
xchg
repnz
xor
fcom
(bad)
xchg
mov
mov
cmp
ins
movs
test
push
rcr
in
cli
das
cmp
in
les
add
cs
mov
dec
js
in
cmp
and
xchg
inc
nop
inc
push
dec
mov
mov
cli
lock
ror
push
pop
add
mov
stc
dec
addr16
aam
frstor
jl
dec
movs
aas
cmps
pushf
(bad)
lahf
xor
inc
or
popf
mov
out
dec
rcr
fwait
cmp
push
add
hlt
push
mov
loope
shr
dec
xchg
ss
and
dec
jno
lock
dec
je
adc
mov
ins
sub
mov
pushf
fbstp
(bad)
adc
rol
iret
into
inc
imul
pop
add
or
dec
lea
jnp
mov
jmp
xor
sbb
push
or
clc
ror
mov
adc
jno
adc
cmp
scas
in
in
xor
dec
mov
push
inc
loope
push
mov
and
inc
sbb
stc
jle
cmp
adc
fcomp
mov
dec
or
inc
sbb
mov
push
jg
ret
mov
pop
mov
add
lahf
mov
sub
pop
sub
scas
ins
outs
inc
cwde
mov
adc
mov
addr16
retf
and
popf
xchg
push
xchg
aaa
loopne
ja
out
pop
loop
xor
adc
dec
loop
dec
in
sar
jl
clc
pop
aas
neg
outs
xor
in
dec
push
sub
mov
xor
push
push
ret
imul
gs
fsub
and
cdq
xlat
cwde
push
pop
test
idiv
divps
push
mov
and
push
mov
fadd
push
xchg
and
sahf
jmp
ret
in
sub
add
lahf
jp
fidiv
jo
pop
dec
loop
dec
add
pavgw
push
out
(bad)
xor
icebp
sub
cdq
in
pushf
sbb
inc
mov
mov
stos
push
add
jae
mov
out
sub
leave
out
mov
aam
cmp
and
repnz
fs
lahf
or
aas
jmp
in
test
test
fwait
sub
out
rol
push
(bad)
inc
pop
fnsave
(bad)
jns
iret
dec
push
call
retf
sub
pop
jecxz
sbb
push
gs
(bad)
daa
retf
fldcw
xchg
std
mov
dec
inc
push
out
sbb
cs
call
loop
or
sbb
sbb
jle
or
div
jle
and
(bad)
and
mov
es
push
leave
xchg
jne
jb
sub
sub
sub
jmp
rcr
lods
shr
cmp
mov
mov
jl
inc
sbb
jno
xchg
cmp
jmp
inc
push
push
mov
test
leave
push
std
popf
in
bound
fcom
ficom
jge
add
mov
mov
xchg
fldenv
in
push
xor
xchg
imul
mov
shl
push
stos
shl
push
dec
int
push
inc
pop
jb
push
add
mov
call
and
jecxz
inc
ds
add
imul
push
rol
mov
mov
fsubr
sbb
das
sub
xchg
and
jmp
or
pop
rcr
xchg
shr
sub
repz
mov
xor
sub
cmp
push
lds
cli
push
xchg
xor
ror
ds
pop
pop
sub
test
mov
aaa
and
pop
loope
add
pushf
add
mov
xor
or
retf
scas
push
lahf
mov
shl
cwde
cmps
inc
sar
(bad)
mov
call
hlt
(bad)
cs
outs
dec
pop
bound
aaa
mov
xchg
lahf
mov
js
(bad)
xchg
push
adc
cmc
aam
shl
mov
out
cs
mov
lock
and
sbb
inc
or
jg
in
cmp
jge
or
xchg
pop
enter
repnz
call
adc
add
in
jle
jge
es
cmp
sbb
xor
mov
dec
or
adc
push
cmp
pop
fisubr
fdiv
in
mov
icebp
stc
or
mov
and
jmp
stos
pop
inc
pushf
fidiv
pop
mov
fwait
ss
sub
sub
adc
aas
add
aad
(bad)
mov
gs
lds
inc
loop
inc
mov
es
mov
or
xor
sahf
push
inc
jo
lahf
enter
add
mov
dec
les
jl
sbb
sub
out
fstp
add
jnp
pop
add
in
jno
aad
jecxz
add
stc
fimul
mov
or
mov
cdq
test
ja
out
cdq
aas
add
vpunpcklwd
xor
(bad)
hlt
pop
cmps
pop
jmp
mov
loopne
push
push
push
inc
or
mov
xlat
sub
adc
dec
add
cmp
dec
cs
mov
mov
lock
pop
or
jbe
fiadd
cmc
and
xor
lods
or
and
sbb
ret
rep
jmp
sbb
mov
add
push
out
xor
(bad)
cmp
add
outs
xchg
aam
ret
sbb
xchg
mov
(bad)
lock
push
add
jae
pop
stc
pop
mov
xor
imul
jne
push
jae
cwde
(bad)
aaa
rcl
push
inc
inc
out
add
jle
cwde
arpl
(bad)
push
aaa
leave
cmp
mov
push
(bad)
sbb
cmp
mov
dec
shr
mov
(bad)
repz
add
cmps
jne
xchg
sub
lahf
dec
cmc
xchg
jae
hlt
aas
inc
cmp
pop
mov
push
pop
adc
or
sub
add
cmc
mov
mov
(bad)
xor
bound
cwde
add
push
dec
inc
lea
jmp
push
adc
inc
dec
in
xchg
push
dec
fwait
je
or
into
add
cmp
pop
aas
in
xchg
outs
mov
adc
adc
adc
jg
pop
stc
pushw
jge
pop
dec
(bad)
imul
loope
mov
xchg
pop
mov
repz
mov
into
idiv
xchg
cs
retf
sbb
or
cmp
std
adc
(bad)
or
int
sbb
fucomip
js
cli
inc
mov
jmp
ror
outs
aaa
rcr
cmp
dec
and
fnstenv
cli
outs
adc
fst
xchg
push
fisubr
repnz
add
mov
call
cmps
fstp
cmp
lods
xor
adc
mov
pop
loope
icebp
pop
mov
cwde
mov
jge
mov
jmp
xor
outs
stos
cmp
leave
push
xchg
inc
movs
mov
ins
cmp
loopne
gs
adc
cmp
adc
stos
dec
xchg
aaa
and
or
std
in
add
jmp
shl
push
arpl
std
mov
cs
es
push
lea
jmp
mov
adc
mov
and
fwait
mov
out
mov
mov
adc
loopne
ins
and
mov
mov
jge
mov
lods
cmc
addr16
mov
lea
and
hlt
add
aam
(bad)
mul
mov
mov
jg
jns
inc
movs
mov
adc
push
add
dec
aaa
aaa
add
mov
rol
xor
fwait
pop
jbe
jge
xchg
int3
fwait
sti
mov
dec
int3
fnsave
int
test
jo
cmp
inc
xor
push
into
adc
cmp
sub
dec
pop
fs
jo
loope
test
fnstcw
xor
cdq
mov
pop
pushf
or
push
lods
mov
btc
rol
pop
sub
xchg
js
mov
jle
or
xor
test
mov
cmp
sub
push
int3
shl
cmc
cmp
fistp
mov
repnz
dec
cmp
into
sbb
mov
push
rol
xchg
enter
xor
ror
(bad)
dec
cmp
jp
fcomp
das
push
test
sub
add
pop
jb
sar
or
cmps
mov
push
std
adc
sub
les
xchg
or
jge
cmp
jg
add
inc
movs
pop
cld
jo
mov
scas
inc
mov
mov
stos
jno
int
fwait
mov
daa
pushf
jo
fs
in
and
adc
push
ja
arpl
in
out
inc
mov
sub
sahf
and
popa
dec
jns
ficom
dec
cmp
dec
and
rcr
pop
sbb
retf
iret
addr16
pop
repnz
adc
cmps
cmp
add
sub
ss
mov
cmp
in
movs
pop
mov
pop
sub
ret
aad
mov
jle
bound
mov
sbb
mov
pop
std
fidiv
jnp
les
sub
lea
call
mov
and
and
scas
aad
daa
sbb
idiv
sub
xor
out
sub
daa
xor
jnp
out
sbb
rcr
rol
jne
and
sub
mov
sub
push
lods
aaa
cdq
push
fs
sbb
daa
scas
test
fwait
movs
xchg
loop
add
push
pop
rcr
dec
dec
or
cs
add
mov
sbb
out
cs
jmp
sti
pop
(bad)
and
dec
ret
addr16
lods
lahf
cmp
pushf
jo
jge
inc
mov
jge
sti
jbe
mov
lds
pop
std
nop
pop
mov
add
pop
adc
test
ins
addr16
dec
or
mov
daa
sbb
jne
fiadd
stos
scas
adc
xchg
mov
mov
mov
rcr
and
scas
add
pop
fld
pop
or
ins
outs
push
mov
jno
mov
pop
jge
inc
jl
call
sbb
jmp
inc
jge
adc
ja
mov
cmp
xor
push
bound
fidivr
loope
loop
mov
fwait
std
sbb
dec
mov
xchg
je
ins
shl
mov
fisubr
or
pop
les
xor
out
ret
xchg
mov
inc
cdq
(bad)
or
sub
push
pusha
outs
lahf
jg
mov
test
cs
mov
clc
mov
push
mov
and
nop
fsubr
push
movs
ins
test
aad
xchg
xor
jmp
fst
(bad)
and
ror
cli
push
add
push
sub
add
mov
movs
push
rol
mov
xchg
out
pop
pop
jae
ins
pop
cmc
cli
fiadd
xlat
cmps
aaa
neg
mov
push
rol
ret
sub
mov
mov
cs
in
or
jbe
fdivr
loop
sub
aaa
jno
shl
aam
sbb
pusha
inc
cdq
and
cmc
jns
stos
mov
push
sub
call
std
pop
aaa
mov
jle
outs
lods
ret
adc
mov
xor
sub
inc
xchg
popf
push
stc
mov
test
repz
outs
mov
out
pop
lds
stos
(bad)
clc
lods
sub
test
in
or
push
call
push
push
mov
pop
xor
push
mov
cld
and
stos
ins
fild
sbb
out
jg
in
enter
loop
sbb
xor
aad
cmp
sub
icebp
inc
sar
cmps
fst
retf
dec
in
sbb
sahf
xor
lods
cmp
fidiv
and
fiadd
shl
cmps
mov
add
test
jns
and
jns
add
jae
in
cwde
cmp
fcmovbe
fcomp
mov
add
lds
jecxz
jno
imul
sahf
push
xchg
rol
std
jp
adc
mov
dec
out
pop
into
imul
jo
call
(bad)
retf
retf
push
mov
jmp
cmp
pop
shl
inc
mov
adc
fisttp
pop
test
outs
push
(bad)
xor
or
cmc
xchg
mov
add
pusha
sub
loopne
jg
rcl
fild
inc
or
popf
add
cmp
add
dec
stos
pop
repnz
jp
xchg
and
aad
jo
or
retf
fbld
add
inc
cmc
sti
les
popf
sub
mov
loope
mov
xor
mov
mov
movs
xor
clc
or
xor
or
repz
pushf
movs
(bad)
dec
push
out
ins
mov
cwde
das
xlat
cmp
sti
jg
out
retf
fnsave
xor
(bad)
shl
in
stos
lods
xor
(bad)
mov
popa
out
ins
xor
fwait
push
push
psrld
cmp
(bad)
jb
cmp
xor
pop
stos
jg
inc
jbe
inc
jge
xlat
aad
or
or
jle
in
push
and
sbb
mov
out
ret
jns
xchg
(bad)
ss
pop
sbb
fcom
xor
stos
sub
inc
int
stos
mov
pusha
mov
sti
cmps
push
push
arpl
inc
inc
sbb
jmp
(bad)
cli
cmp
cmc
pop
ror
out
sbb
mov
mov
jnp
jle
or
mov
lods
mov
cdq
add
test
leave
cmc
bndstx
or
add
push
and
xchg
pop
cmps
es
call
ins
dec
lods
sbb
(bad)
add
iret
sub
dec
lahf
loopne
int
cld
out
mov
xchg
(bad)
fcomi
or
mov
jnp
jmp
inc
call
jo
sbb
xchg
in
or
mov
cmc
cmp
out
jae
jp
js
and
cmp
fisub
fisubr
(bad)
aad
popf
xchg
pop
loope
movs
sub
popa
sti
cld
jl
or
dec
dec
ja
push
sub
ror
hlt
dec
cld
(bad)
mov
aas
repnz
or
mov
jg
sbb
dec
int
mov
pop
fidivr
in
rcl
loope
cli
add
jmp
popf
fld
fidivr
xchg
aas
lock
loopne
sub
xchg
cwde
ins
inc
fimul
push
icebp
shl
inc
aam
test
cmp
fmul
icebp
in
std
(bad)
dec
inc
mov
sbb
rol
and
cmps
cmps
and
cli
fdivp
ret
push
pop
xchg
xor
push
inc
aaa
mov
mov
int3
mov
inc
aam
mov
aas
cmp
xor
xchg
jecxz
cdq
ret
mov
sub
jnp
xchg
inc
popf
aam
stc
mov
sahf
mov
inc
push
push
test
ret
push
sub
aas
loopne
jg
fs
nop
mov
es
je
jl
xchg
out
shr
mov
cmp
add
dec
and
xchg
sbb
bound
or
test
and
fwait
xor
jg
pop
xor
pop
lds
push
retf
loop
sbb
sub
fdiv
fwait
leave
jae
in
sbb
xchg
sub
shr
or
pop
aas
and
loopne
fmul
call
push
pop
sbb
call
dec
shl
std
popf
bound
movs
inc
mov
das
and
jne
adc
sbb
and
lods
cmp
(bad)
iret
out
mov
js
(bad)
cs
mov
and
push
xchg
add
xchg
push
out
xor
repnz
repz
into
test
lahf
dec
(bad)
ret
push
and
adc
dec
push
cmp
xchg
ret
shl
xchg
jmp
retf
movs
daa
or
push
xor
(bad)
lahf
lahf
xchg
stos
xchg
dec
pop
mov
ins
pop
mov
jmp
mov
add
xchg
hlt
or
movs
mov
cmp
in
adc
pop
int
inc
shl
aam
(bad)
jb
not
xor
inc
rcl
cli
(bad)
out
ja
mov
sbb
test
das
icebp
seta
scas
shl
dec
add
mov
mov
addr16
xor
or
or
bnd
push
sahf
fcomp
out
xor
enter
cwde
and
int
mov
div
and
xchg
aad
sbb
mov
xchg
sbb
ficom
call
dec
dec
add
adc
fcos
iret
jnp
push
and
adc
or
add
jo
mov
in
loop
sbb
jmp
ficom
jge
lods
loopne
inc
(bad)
das
pop
cmp
ins
bound
in
add
cld
sbb
mov
xchg
in
adc
or
inc
and
rol
(bad)
test
retf
out
leave
dec
push
imul
ret
sahf
and
cld
cdq
mov
xchg
jns
sbb
dec
mov
adc
add
sub
jmp
scas
ror
xchg
add
push
es
and
or
scas
cmps
or
loope
retf
(bad)
scas
or
mul
pop
mov
push
aaa
iret
pop
xchg
(bad)
sub
jmp
pusha
and
cwde
mov
ins
jb
fmul
pusha
or
test
mov
mov
cmp
into
xchg
ja
cmp
mov
ja
shl
sbb
cli
dec
or
shr
aad
xchg
xor
xor
pop
inc
fs
mov
push
outs
cmp
jmp
sub
outs
clc
jb
dec
mov
shr
addr16
ss
or
aad
(bad)
retf
mov
dec
cmp
ins
test
jmp
inc
sub
(bad)
adc
push
enter
(bad)
xchg
xchg
(bad)
jl
xor
(bad)
setno
inc
push
les
jo
mov
and
mov
imul
mov
push
and
(bad)
fnclex
pop
dec
jno
ror
call
sbb
icebp
push
mov
push
fidivr
cdq
mov
sbb
pop
mov
enter
mov
mov
cli
or
dec
adc
xlat
xchg
dec
push
jae
inc
push
sub
cwde
aas
(bad)
outs
push
xor
sbb
push
jns
xchg
loop
iret
test
xchg
adc
mov
leave
out
xor
pop
add
sti
lods
inc
xchg
out
inc
fst
pushf
push
adc
dec
jbe
into
sub
les
fwait
sbb
jl
int
xor
out
mov
add
jp
pusha
dec
xor
adc
cdq
jl
aam
pop
sbb
fucomp
sbb
movlps
inc
and
stc
mov
in
imul
jmp
and
cld
mov
out
rcl
movs
cmp
(bad)
fwait
xchg
push
adc
fmul
dec
jbe
xor
cdq
(bad)
xor
inc
adc
sub
jno
xchg
adc
cmp
and
jge
ror
mov
dec
lods
add
retfw
xor
mov
not
popf
movs
mov
and
xchg
icebp
(bad)
(bad)
mov
fidiv
fist
jb
xor
popa
inc
in
inc
inc
and
xchg
inc
push
mov
xchg
arpl
jmp
ja
push
fiadd
jnp
jmp
fcomip
push
xlat
sub
popf
fwait
push
inc
push
inc
call
loopne
ret
or
mov
add
dec
pop
xor
mov
aas
test
cmp
int
cmp
cmp
inc
retf
xor
inc
jb
xchg
pop
popf
shl
mov
and
in
pop
jmp
(bad)
loop
jmp
xor
sbb
ret
mov
mov
mov
mov
into
test
call
loopne
jne
lea
fwait
bound
jl
jp
icebp
mov
sbb
pop
scas
jnp
pop
or
jmp
fisttp
cli
mov
ja
pop
imul
mov
sub
xor
cli
pop
int3
(bad)
mov
cmp
cmp
neg
stc
sbb
pop
int3
(bad)
push
mov
leave
mov
xor
setbe
xchg
xor
sbb
jmp
xor
(bad)
mov
test
repz
add
jecxz
outs
data16
mul
push
in
or
or
retf
jno
xchg
adc
cli
ja
gs
test
adc
ret
lock
(bad)
and
test
out
fcomip
rsqrtps
mov
mov
in
fdivr
cli
hlt
mov
or
or
inc
das
mov
mov
call
imul
retf
loop
cmp
test
adc
aaa
add
ins
inc
ss
mov
mov
mov
mov
sahf
mov
(bad)
xchg
aaa
retf
push
inc
mov
lods
push
sbb
cmc
pop
mov
loope
das
hlt
fistp
arpl
jp
push
xchg
jno
addr16
mov
test
dec
dec
mov
or
test
inc
leave
xchg
push
xchg
add
sbb
out
mov
push
out
test
sti
xchg
std
jmp
jae
leave
sbb
outs
push
pop
outs
in
and
jne
and
mov
pop
mov
dec
fs
cdq
mov
push
ins
dec
inc
ins
js
leave
lods
hlt
or
cmp
int3
mov
cs
cdq
push
ds
mov
mov
inc
xor
cld
mov
mov
mov
fiadd
sub
pop
sbb
aad
sahf
inc
pop
sbb
mov
sar
enter
fnstsw
hlt
jo
out
xchg
hlt
mov
fstp
jg
push
int3
mov
push
dec
lds
arpl
pop
ret
xchg
xchg
adc
bound
cdq
ja
lds
jg
xor
push
add
int3
mov
fwait
mov
jno
aad
push
cmp
fldenvw
xchg
cmp
xchg
sub
loopne
push
dec
loope
jb
inc
xor
dec
out
ja
sbb
and
stos
xor
add
mov
pusha
outs
cmp
cli
sbb
inc
mov
loope
jne
rcl
cld
mov
rcl
icebp
mov
ins
repnz
dec
jp
jae
lahf
cmp
rcl
push
jb
adc
pop
cld
outs
xchg
or
ret
adc
aaa
push
mov
sbb
popf
leave
clc
nop
call
int
test
or
add
test
aam
dec
std
in
xchg
stc
and
and
imul
(bad)
cmp
xor
push
stos
and
imul
clc
mov
sbb
sbb
inc
sub
mov
sub
jne
movs
mov
ins
sbb
leave
fs
inc
mov
pop
test
into
push
leave
(bad)
sti
mov
fsubrp
rcl
icebp
or
jecxz
xor
sub
ja
xlat
dec
cwde
fdiv
jno
adc
push
data16
sbb
jle
fbld
add
mov
(bad)
sub
adc
adc
lods
outs
or
pop
add
mov
push
mov
mov
xchg
pop
sti
test
mov
test
add
into
movs
nop
pop
pop
das
lahf
ror
mov
cs
push
clc
jnp
jbe
stc
mov
sar
(bad)
and
dec
inc
and
mov
xor
xchg
inc
mov
mov
inc
cwde
push
push
inc
jmp
mov
ins
add
dec
jmp
mov
or
in
xchg
cmp
and
adc
sub
retf
push
es
(bad)
sbb
jno
dec
adc
cmp
dec
jne
aad
rcl
sbb
sbb
sti
push
aas
pop
mov
xor
cdq
mov
mov
mov
cmp
pushf
pop
dec
mov
sub
and
icebp
pop
sub
int3
inc
add
sar
mov
cmps
or
mov
test
pusha
imul
pop
cmp
or
xlat
and
fimul
jmp
stos
mov
inc
in
or
stc
cmp
inc
bnd
sub
or
dec
xchg
hlt
mov
movs
mov
das
fild
mov
sahf
jo
shr
mov
enter
mov
mov
les
hlt
out
sbb
movs
repz
jbe
adc
aam
mov
and
push
mov
(bad)
arpl
call
cmps
push
xor
dec
mov
popf
popf
jle
sbb
fld
xchg
adc
js
nop
mov
test
cmp
adc
fdivr
pop
jnp
xor
push
inc
xor
fdivp
movs
mov
inc
and
xchg
ins
int
inc
inc
jno
ret
or
cwde
mov
fs
clc
outs
daa
fild
cdq
pop
aam
xchg
pop
mov
push
mov
daa
cmp
(bad)
mov
xchg
daa
in
or
in
out
fadd
sbb
out
cmc
stos
shr
sub
cmp
mov
(bad)
shr
dec
ins
push
pop
lahf
add
out
jnp
cmp
sbb
loope
cmp
xchg
mov
retf
(bad)
popa
add
test
xor
cmps
enter
jo
into
xor
fnstcw
adc
add
inc
int3
jo
push
lea
jne
inc
dec
mov
aad
inc
dec
push
push
arpl
idiv
or
cwde
dec
dec
ss
add
push
idiv
adc
cmp
dec
imul
and
jl
out
sub
out
cdq
adc
das
jl
jb
cmp
imul
jge
mov
in
jmp
adc
mov
js
sub
sub
aas
sbb
add
cmp
inc
jp
jb
mov
fidiv
sub
mov
into
push
push
jp
into
mov
jmp
jecxz
pop
retf
loop
xchg
ins
mov
and
sub
jge
outs
jo
(bad)
cmps
jbe
repnz
pcmpeqw
pop
imul
shl
pop
jl
xor
imul
mov
sub
pop
and
push
sub
sub
mov
sub
cmp
popf
sti
push
mov
sub
or
dec
movs
mov
jp
add
cwde
or
test
push
aas
bound
retf
in
fs
outs
in
mov
mov
test
sahf
ss
adc
or
repnz
frstor
out
jns
ja
sub
sbb
inc
arpl
dec
pop
xchg
(bad)
cmp
dec
js
pop
jno
mov
jno
sub
and
jecxz
cli
sbb
ret
adc
pop
aas
sub
sbb
jecxz
inc
pop
jg
je
jmp
ja
inc
push
retf
dec
(bad)
pushf
sub
iret
jb
xor
push
and
into
pop
retf
mov
pop
in
out
and
fbstp
jo
and
aaa
mov
inc
ror
sbb
adc
aaa
mov
sub
addr16
mov
mov
xor
xchg
clc
in
xor
bound
movs
call
ret
jo
hlt
xlat
(bad)
jno
ins
mov
push
std
pusha
(bad)
fmul
jb
jl
iret
pop
imul
dec
mov
adc
xor
sub
movs
push
cmps
and
mov
push
cmp
push
push
outs
int3
in
pop
in
dec
(bad)
push
inc
mov
mov
rol
xchg
jg
pop
std
pop
push
jp
jmp
mov
pop
adc
and
ss
dec
(bad)
push
movs
dec
test
pop
add
dec
lock
xchg
jecxz
(bad)
add
popf
xor
jmp
shr
dec
add
shld
or
mov
xor
lea
jg
sbb
out
ja
or
jge
mov
fmul
add
add
adc
call
cmps
popf
dec
pop
xchg
cmps
sar
sub
(bad)
test
das
jno
xor
dec
sub
xor
js
lods
mov
test
add
jbe
lods
and
cmp
ret
cmp
int
rcr
fcom
sar
mov
pushf
inc
xchg
aas
inc
mov
cdq
pop
and
stos
dec
jg
and
and
mov
push
int3
fs
ret
sar
scas
leave
scas
jmp
or
jg
lock
shl
inc
xor
ja
fdiv
ret
or
lds
aam
mov
repz
or
sub
stos
in
mov
adc
push
xchg
add
and
out
xor
clc
shl
test
xor
xor
mov
ret
(bad)
sti
push
fcomp
enter
lea
(bad)
push
jae
stos
rcl
pop
ds
inc
mov
pop
jo
enter
jmp
xchg
mov
push
mov
dec
cwde
data16
in
outs
mov
movs
pop
sub
outs
std
sub
xchg
mov
mov
push
push
ror
nop
ds
xor
pop
xchg
xor
sahf
jo
push
rcr
cmps
pop
outs
mov
add
scas
div
dec
lea
(bad)
dec
les
pop
shl
stos
scas
jne
mov
jno
or
xor
bound
outs
movs
adc
and
imul
retf
in
ins
mov
mov
hlt
cwde
mov
(bad)
lds
pop
cmps
dec
cli
add
mov
dec
jge
adc
cmp
sti
sbb
xchg
retf
add
mov
add
mov
dec
cmp
ret
test
push
movs
scas
ja
outs
stc
jns
aad
stos
loop
repz
ins
test
jecxz
pushf
stc
iret
inc
scas
cmp
pop
hlt
sub
fld
push
push
data16
push
push
xlat
out
xor
outs
add
jmp
test
mov
jg
(bad)
xchg
outs
mov
jg
or
pop
(bad)
dec
ja
in
push
xor
xchg
pop
pop
sbb
sub
hlt
(bad)
adc
stos
cmp
xchg
cmp
aas
(bad)
(bad)
dec
or
ficomp
int3
cli
and
mov
test
test
push
imul
lods
push
popa
mov
or
add
mov
ins
fldenv
shl
stc
fsubr
jg
lea
or
xor
stc
push
adc
jae
sbb
dec
mov
and
and
(bad)
dec
into
cmps
fwait
outs
jbe
and
data16
cmp
stos
jmp
shl
jb
std
xlat
mov
popf
ins
rol
cmp
das
jmp
mov
fs
retf
scas
call
cmp
sti
adc
jl
test
push
rcl
xchg
(bad)
fnstenv
jg
pop
fisttp
dec
loope
inc
fisttp
std
in
loope
mov
dec
mov
loopne
adc
ss
sbb
int3
adc
in
nop
adc
mov
push
stos
xchg
push
adc
adc
mov
or
pop
push
shr
es
popa
jge
sahf
add
cli
and
(bad)
add
add
xlat
pusha
test
xchg
mov
and
cs
mov
push
in
test
shl
adc
jmp
inc
inc
or
mov
cld
call
sar
cdq
out
mov
(bad)
xor
mov
lahf
sti
xchg
mov
clc
into
push
mov
pop
movs
dec
and
out
pop
stc
dec
pop
pop
fbstp
mov
push
adc
cdq
aas
pop
or
outs
adc
std
dec
inc
sbb
cmp
mov
add
loop
fsincos
push
push
mov
xchg
dec
jns
jne
mov
stos
popa
shl
sub
cmp
push
pop
push
in
hlt
and
nop
rol
sub
xchg
punpckhbw
adc
mov
inc
loope
fiadd
xor
add
pop
jne
pop
not
add
imul
sbb
jne
xchg
adc
mov
or
ret
aaa
pop
inc
stos
add
sub
or
push
mov
sub
or
mov
fadd
js
shr
dec
in
dec
lods
test
gs
jle
les
dec
push
mov
cs
iret
icebp
fs
fbld
pop
mov
mov
aam
pop
jae
clc
xor
imul
les
jmp
in
rcl
clc
dec
dec
loope
jno
and
hlt
repnz
jmp
ins
mov
enter
push
aad
(bad)
cmp
in
push
(bad)
xor
add
dec
cmpxchg
mov
mov
cmp
fisubr
ins
cmp
xchg
pop
int3
mov
repnz
adc
sti
retf
and
add
or
pop
xchg
test
imul
das
dec
fild
clc
outs
add
xchg
pop
ja
xchg
add
push
(bad)
mov
fsincos
push
shr
push
retf
mov
sbb
outs
or
inc
fcom
mov
arpl
add
(bad)
sub
mov
xor
jmp
or
enter
or
fwait
or
pop
sti
int3
(bad)
pop
sbb
or
aaa
out
cmp
mov
push
push
aam
push
adc
push
jg
dec
call
(bad)
fnstenv
mov
xchg
jbe
pushf
push
fidiv
jnp
int3
cmps
sbb
mov
push
add
or
cmp
addr16
sub
sbb
bound
cmp
jb
dec
push
fld
mov
mov
push
aas
rcr
add
inc
pop
add
gs
push
(bad)
adc
adc
gs
pop
push
dec
std
mov
xchg
pop
or
pop
je
jmp
fcomp
daa
out
dec
sbb
pop
sbb
retf
jne
arpl
mov
or
jae
xchg
or
retf
push
test
jl
sub
dec
pop
jg
fdiv
fbstp
cmc
out
dec
ds
adc
daa
ror
add
ins
data16
inc
loope
aam
adc
xchg
inc
cdq
pop
mov
push
inc
in
cmp
xchg
adc
mov
leave
out
repnz
int
fsub
inc
je
int3
stc
les
xor
(bad)
loope
dec
mov
dec
xchg
sub
inc
inc
sbb
jae
test
mov
stos
cmps
mov
fs
mov
lock
data16
mov
sub
mov
add
ins
ins
inc
sub
push
in
pop
cmps
inc
pop
sbb
add
jle
pop
sbb
push
adc
pusha
sahf
stos
movs
das
out
in
mov
jns
mov
aas
push
mov
jno
ja
and
aas
dec
jge
fucomi
sbb
in
push
and
rcr
adc
hlt
jle
adc
or
xchg
push
push
fdivp
mov
out
or
dec
mov
call
mov
xlat
adc
les
push
sti
sub
add
push
and
adc
clc
dec
in
add
cmp
mov
cli
push
mov
xor
dec
sbb
mov
sti
dec
faddp
xor
ds
jo
fiadd
into
pusha
ss
loopne
rcr
aad
loop
(bad)
es
jns
bound
jno
fnstsw
mov
or
das
mov
mov
add
xchg
jge
pop
stc
sbb
mov
mov
nop
aaa
repz
cmps
adc
int
icebp
push
pop
mul
xchg
lock
fcmovne
add
push
pop
in
retf
pop
jmp
loope
ret
add
add
clc
(bad)
in
aaa
ds
ss
out
jecxz
aas
(bad)
xor
push
push
or
aad
dec
pop
xor
xor
repnz
dec
and
and
(bad)
out
pop
mov
es
and
mov
sbb
bound
loop
mov
mov
js
imul
sub
mov
call
cdq
inc
push
pop
jne
mov
dec
xlat
and
imul
cmp
int
mov
dec
(bad)
or
push
pop
js
repnz
jecxz
loopne
lea
iret
mov
(bad)
loop
cwde
ret
push
cmp
pushf
sub
nop
btc
or
in
ffreep
sbb
adc
pop
and
or
jecxz
out
dec
sub
and
adc
cmp
pop
scas
sub
lahf
inc
test
fstp
xor
mov
sub
(bad)
sbb
xchg
add
into
mov
cmc
inc
imul
ret
jbe
xchg
sbb
xor
loop
xchg
(bad)
fiadd
aas
cwde
ret
mov
or
mov
mov
xchg
sahf
jmp
hlt
aas
and
test
sub
add
mov
xor
stc
xchg
xchg
sti
mov
inc
jle
cld
fyl2xp1
and
or
cmp
push
out
mov
or
(bad)
cmc
jp
and
cs
sti
(bad)
(bad)
pop
rol
js
lahf
mov
push
std
push
dec
lods
sub
ds
call
retf
push
mov
sbb
rcl
mov
inc
mov
outs
jmp
pop
sahf
pop
dec
xchg
dec
idiv
jmp
sub
mov
rol
push
aas
sar
and
das
and
jmp
cld
xchg
das
mov
or
or
push
pop
hlt
cmps
lahf
xchg
cmps
mov
pop
fstp
ret
shl
xchg
ins
add
mul
repz
inc
cmp
fld
adc
mov
das
aad
fiadd
repz
retf
outs
xchg
(bad)
scas
or
inc
jae
dec
data16
in
ret
arpl
scas
hlt
jp
int3
sub
cmp
inc
inc
xchg
aad
pushf
sub
push
cmp
jbe
mov
push
xchg
pop
jb
and
jg
xchg
imul
test
int
stc
inc
jne
jbe
sub
mov
fidivr
into
neg
xor
pop
or
pop
ins
jo
jmp
std
mov
movs
mov
and
xchg
stos
push
pop
rcr
(bad)
jbe
push
sbb
movs
scas
fsub
mov
aad
out
rep
(bad)
arpl
and
adc
inc
dec
dec
lods
mov
movs
scas
sbb
jbe
push
and
enter
sbb
xor
mov
(bad)
pushf
cmp
dec
pusha
fst
mov
add
(bad)
jb
rol
bound
push
rcr
repz
push
neg
pusha
cmp
mov
sub
mov
lahf
xchg
pop
iret
sahf
cmp
xchg
jae
cmc
inc
cwde
aam
add
jns
pusha
adc
fistp
mov
xor
push
jg
outs
ins
adc
sbb
shl
xor
pop
aas
jle
aaa
inc
cs
mov
jno
dec
bound
sbb
lahf
out
out
scas
and
sbb
pop
js
cmp
ret
push
outs
fst
xchg
shl
fstp
pop
jle
stc
xlat
loopne
les
xchg
inc
push
js
add
cmp
sbb
fidiv
mov
and
mov
xor
mov
xchg
cmps
jmp
(bad)
push
je
xchg
les
gs
ror
enter
xor
(bad)
movs
not
or
not
jbe
cmps
ins
pop
daa
std
sar
and
push
xor
jo
nop
push
pop
cmp
add
add
xlat
cwde
loopne
adc
sbb
mov
mov
push
mov
in
retf
inc
adc
(bad)
loop
jmp
in
fnsave
pop
stos
(bad)
cld
shl
pop
pop
clc
test
stos
sub
test
cmp
loopne
lea
push
ret
popf
ins
cmp
in
xchg
std
out
push
sub
loope
dec
outs
fldcw
cmp
in
retf
mov
cmp
scas
mov
dec
or
xor
sub
sar
mov
fisubr
mov
jae
test
(bad)
xchg
mov
pop
loop
and
jnp
sub
dec
push
(bad)
int3
enter
cmovp
push
std
nop
mov
jne
test
mov
shr
jle
imul
mov
or
dec
jb
or
sbb
jg
dec
jbe
ja
cmp
cli
push
sub
dec
out
dec
das
push
lea
cwde
inc
pop
xchg
xor
fadd
data16
push
vphaddubq
test
sub
adc
xchg
dec
data16
int3
mov
lods
cdq
inc
cmp
cmp
mov
cdq
and
cld
xchg
push
push
mov
cmc
fwait
jl
dec
xor
(bad)
jmp
std
stc
xor
stos
ss
int
ret
popa
cdq
addr16
dec
shl
and
sahf
jmp
fimul
xchg
jecxz
(bad)
mov
arpl
add
jmp
pop
mov
xchg
jbe
adc
loope
repz
mov
out
call
mov
aaa
retf
das
sub
push
movs
pop
loopne
xlat
dec
mov
jecxz
ja
les
sbb
xor
ja
add
adc
push
stos
push
sbb
sub
mov
fstp
or
xchg
lahf
icebp
loopne
ja
jo
push
jo
jmp
mov
jbe
hlt
sub
loope
mov
push
xchg
cmp
sub
adc
add
je
sar
gs
jle
jbe
xchg
jns
(bad)
sti
jo
hlt
cmp
cmc
and
lea
xchg
mov
js
mov
fild
aad
lock
and
les
xor
out
lock
xor
mov
and
movq
clc
pop
cmc
mov
repz
loopne
mov
sbb
pop
ret
mov
mov
mov
mov
cmps
fsin
gs
xchg
jge
mov
sbb
ins
or
adc
jnp
fstp
pop
cmps
test
adc
(bad)
sub
push
pop
or
scas
inc
jg
in
mov
loop
mov
or
push
push
ds
repz
cmp
push
sub
jmp
cmp
pop
mov
ins
sub
xor
sub
add
ret
or
(bad)
mov
pop
cdq
add
(bad)
xlat
test
add
int
push
outs
sub
mov
xor
lods
out
push
xchg
xchg
dec
js
xchg
xor
outs
imul
movs
pushf
sub
push
rcl
out
je
sbb
mov
cli
and
fs
mov
jp
inc
jle
pop
adc
add
aaa
add
cmp
mov
sbb
xchg
out
pop
and
call
pop
fyl2x
jmp
fs
mov
adc
push
mov
daa
sbb
jl
xor
mov
cmc
xchg
jecxz
adc
pop
xor
jae
adc
test
(bad)
fdiv
sbb
dec
mov
jecxz
adc
aaa
call
ss
out
mov
mov
adc
sbb
push
or
shr
cmp
shr
mov
sahf
popa
cmp
loopne
xor
add
xlat
pop
dec
aad
pop
dec
xor
push
(bad)
and
jge
sbb
xor
je
push
sub
lds
jnp
xlat
je
add
fdivr
aas
xchg
fistp
in
dec
adc
cmp
mov
xchg
retf
push
iret
dec
out
mov
fld
jnp
pushf
not
push
movs
cdq
test
push
mov
mov
inc
xor
out
pusha
push
add
push
pop
rcl
outs
sub
loope
jge
fsub
in
int
mov
push
jge
(bad)
jo
cmps
call
pop
push
in
daa
(bad)
popf
loopne
adc
adc
or
inc
cmp
addr16
test
dec
add
pusha
xchg
xchg
mov
pop
xchg
das
push
lock
outs
shr
dec
addr16
stos
dec
add
test
mov
fcmovu
mov
jp
push
js
mov
mov
(bad)
repnz
sbb
jl
and
cmp
popf
ins
mov
outs
sti
adc
int3
aas
sbb
sti
psubusb
pushw
sti
add
inc
jecxz
je
xor
xor
adc
push
lds
dec
jae
je
(bad)
cmp
inc
es
push
sbb
cmp
cmp
cdq
mov
in
aam
(bad)
outs
mov
(bad)
in
xor
ss
ins
retf
retf
sbb
daa
inc
xor
adc
in
ret
jg
pushf
sbb
mov
cld
mov
out
xor
(bad)
movs
adc
dec
xchg
stc
fbld
sbb
inc
jp
scas
sar
xchg
pop
outs
addr16
mov
cmp
sbb
sahf
jle
or
pop
call
xor
lock
nop
jne
or
lods
(bad)
sub
push
fild
mov
aas
test
jb
sbb
stos
or
hlt
fiadd
call
mov
cmp
aas
jle
mov
mov
(bad)
loopne
aas
push
shl
pop
cmc
test
fwait
rcl
in
dec
cmps
push
push
or
test
(bad)
shl
adc
sub
and
ds
enter
cs
ja
cmc
jp
popf
ins
mov
push
out
(bad)
and
mov
cmp
mov
(bad)
xor
xlat
(bad)
xchg
add
add
or
mov
xchg
add
and
adc
inc
std
add
scas
lahf
aad
(bad)
stc
popf
dec
nop
nop
movs
dec
inc
sub
sub
into
arpl
xchg
dec
pop
push
scas
test
(bad)
aaa
lds
pop
outs
in
adc
cmp
scas
cmps
fcom
into
outs
mov
into
cmps
adc
out
sbb
inc
fstp
imul
cli
mov
sbb
cmc
xchg
cdq
push
stos
inc
push
cmp
int3
fld
cmps
and
je
mov
jmp
xor
mov
(bad)
aaa
xchg
(bad)
retf
fcom
rcr
or
cmc
mov
sahf
cld
cmp
pop
shl
jne
mov
or
repz
jne
mov
inc
xor
fistp
sub
mov
mov
dec
sub
jge
je
js
mov
mov
pop
mov
xor
xchg
std
fdivr
xor
xchg
in
cmps
jbe
ja
adc
jo
pop
leave
movs
and
ret
xor
(bad)
je
inc
or
bound
nop
and
outs
xchg
cmp
jp
mov
aaa
xor
fidiv
pop
mov
fist
pop
mov
jmp
js
cmp
mov
dec
pushf
jmp
(bad)
js
loope
call
sahf
pushf
(bad)
mov
xchg
push
sub
popa
outs
xor
inc
inc
adc
xor
leave
or
add
das
das
xor
imul
in
fsubp
xor
sbb
cmp
mov
inc
add
pop
mov
push
add
stos
stc
mov
jge
lahf
and
push
xor
push
add
retf
jl
icebp
(bad)
fild
push
out
scas
out
mov
push
fwait
dec
pop
mov
fnsave
das
in
sub
out
out
jbe
pop
sub
mov
pop
ret
ins
pop
or
cmc
pop
mov
fwait
dec
rol
cld
fcom
jg
mov
lock
cli
movs
dec
scas
and
sub
cmp
loop
bound
addr16
test
jmp
pop
mov
ficom
xor
and
xchg
cwde
pop
ret
add
mov
or
adc
xor
sbb
int3
fiadd
fldlg2
cmp
pop
push
xchg
push
xor
mov
int3
adc
pop
ret
mov
jl
adc
jns
adc
pop
dec
in
arpl
jne
and
iret
jb
jnp
and
mov
sbb
push
ret
inc
clc
shl
jns
mov
bound
loope
cdq
je
icebp
fst
addr16
mov
retf
jmp
pusha
xor
pop
or
mov
sub
adc
enter
test
stc
sbb
push
xchg
fs
add
aad
mov
xor
sub
sub
in
jbe
into
fisubr
and
fwait
cs
sub
inc
add
mov
sub
ss
and
popf
xchg
inc
xchg
stos
(bad)
sub
mov
add
push
xchg
push
les
sub
mov
mov
addr16
out
loopne
cmc
test
repz
mov
icebp
jmp
mov
mov
jno
dec
fld
xchg
ins
cmp
jbe
jns
inc
jge
jg
fcmovne
bound
movd
gs
cld
mov
push
mov
sub
pushf
pop
imul
dec
or
aad
psrlq
in
push
push
mov
adc
pop
and
xlat
adc
dec
add
jno
jmp
stos
mov
mov
xchg
xor
jp
push
or
and
inc
mov
mov
adc
dec
and
pop
mov
cdq
xchg
pop
mov
push
fdivrp
inc
pop
shr
pop
fbld
stos
mov
ror
sti
xchg
jne
stos
mov
lods
sbb
clc
mov
fs
mov
les
inc
jmp
xor
sbb
push
jno
xchg
mov
sbb
test
sub
mov
ja
jp
pop
or
loope
pop
shr
sbb
(bad)
pop
ret
jns
(bad)
dec
adc
push
add
xchg
push
aas
popf
test
cmp
ins
sti
in
std
lods
es
sbb
xchg
jecxz
loop
mov
pop
jb
dec
in
adc
sbb
jb
sub
mov
xchg
dec
repnz
and
adc
mov
sub
cmp
and
in
stos
sbb
pop
rol
rcl
mov
or
cld
je
shr
sbb
or
repz
sahf
mov
add
mov
lahf
movs
push
mov
mov
xlat
cdq
stc
retf
sbb
ret
and
mov
movs
(bad)
fisttp
test
mov
pushf
pop
sbb
aaa
rcr
mov
dec
xrelease
sub
out
dec
icebp
or
mov
mov
je
push
mov
nop
fld
movs
fld
test
fisttp
mov
mov
mov
jmp
je
pop
(bad)
scas
test
add
hlt
inc
adc
ja
mov
xchg
sbb
repnz
leave
xchg
xchg
xor
imul
adc
daa
pop
out
pop
retf
jle
mov
adc
shl
gs
pop
mov
mov
jns
enter
mov
iret
jbe
(bad)
fst
shl
jne
rcl
cdq
cmp
mov
jecxz
push
dec
inc
or
sub
lds
dec
lods
popa
jg
cld
int3
mov
adc
leave
dec
test
lds
outs
nop
jge
dec
shr
popa
jge
pop
push
add
les
popf
or
aad
inc
out
out
sahf
inc
cmp
or
sbb
ja
cmp
les
into
push
xchg
icebp
inc
jnp
test
call
sbb
out
push
std
adc
(bad)
pop
or
cmps
push
sahf
push
pusha
push
int
pop
ja
enter
jmp
mov
fadd
pop
mov
sub
pop
stc
jmp
sub
outs
jle
cmp
push
fcmovbe
mov
repz
aam
mov
fucomip
shl
push
sub
push
out
fst
arpl
dec
and
fild
test
fistp
std
pop
mov
icebp
cmp
lahf
pop
hlt
je
aam
or
sbb
int
xor
push
mov
cmp
push
sti
or
lock
xchg
sub
stc
sar
shr
or
cdq
dec
mov
(bad)
aaa
push
adc
pop
and
jmp
outs
add
popf
and
jecxz
or
mov
dec
jp
retf
stos
cmp
push
call
jnp
iret
leave
fild
out
sbb
lds
sti
mov
daa
pop
add
std
mov
pop
arpl
dec
push
stc
addr16
dec
mov
dec
loop
add
cmps
in
sbb
push
fwait
pop
and
xchg
adc
cdq
call
(bad)
int3
fld
jp
pop
lahf
push
imul
jl
(bad)
mul
cmp
inc
pop
je
sub
add
addr16
jl
aas
inc
push
mov
xor
lahf
pop
push
dec
xchg
push
xchg
outs
leave
cmp
lahf
ror
lar
pop
jo
push
movs
ficomp
retf
inc
mov
(bad)
xacquire
cmps
mov
pop
scas
pop
cmps
nop
ins
xor
popf
jmp
loop
pop
imul
call
pusha
fmul
mov
mov
loopne
push
and
cmp
mov
popa
jb
sbb
test
push
or
jnp
test
mov
ins
jne
xor
xchg
xchg
loopne
cdq
hlt
jb
loop
jl
icebp
add
mov
xor
loope
mov
dec
jns
(bad)
aam
shr
cmp
loope
push
add
les
mov
shl
inc
pop
(bad)
xor
xchg
das
xchg
sub
xchg
je
jno
sub
push
gs
inc
sbb
push
dec
int
shl
lock
mov
aas
hlt
ror
fs
je
push
(bad)
aas
je
cmp
lds
into
mov
fidivr
lahf
dec
sub
inc
cmp
iret
mov
jb
clc
mov
adc
cmc
xor
cmp
dec
or
adc
jno
ror
xor
pop
lea
(bad)
inc
mov
mul
push
pop
and
xchg
push
push
xchg
ret
stc
sub
adc
sbb
enter
fsub
jae
and
cmps
and
sub
ins
fidivr
pop
jg
(bad)
in
cmp
fnsave
pop
fbld
lock
ror
fsubr
cmps
mov
rol
push
push
ret
shl
cmc
sub
(bad)
enter
dec
les
out
mov
adc
out
outs
popa
daa
lock
or
jmp
push
dec
lds
(bad)
sub
jns
bound
fild
sub
push
ds
dec
pushf
push
sub
sub
mov
mov
xchg
add
mov
mov
sub
gs
xor
ins
adc
sub
popa
fs
pop
pop
and
add
not
shr
fisubr
mov
and
cmps
or
add
in
and
repnz
push
adc
scas
mov
test
sub
out
add
iret
or
mov
mov
jo
pop
mov
add
inc
xchg
aad
cmp
loopne
jnp
sub
movs
mov
add
psubw
retf
pushf
nop
jnp
cmps
into
push
pop
bound
sbb
or
inc
ficom
inc
mov
pop
popa
push
in
push
mov
mov
lea
sbb
gs
fs
cmp
es
aas
cld
mov
sub
test
int3
rol
bound
jg
jecxz
dec
int
inc
mov
xchg
cmp
jecxz
push
montmul
cmps
add
or
pop
hlt
jg
mov
rcr
mov
mov
push
sahf
xchg
mov
push
mov
mov
add
aaa
push
push
aaa
mov
call
sub
mov
or
imul
adc
sar
pop
jne
shl
gs
call
mov
push
movs
imul
out
push
stos
xchg
jo
mov
test
xchg
das
mov
outs
stc
jb
test
and
stc
lock
pop
xor
mov
or
enter
sub
les
jl
and
pop
(bad)
push
div
hlt
mov
push
and
mov
dec
sub
xor
dec
sub
test
outs
int
ret
inc
(bad)
ds
loope
mov
inc
retf
sub
test
or
cmp
cli
addr16
push
sahf
xor
mov
add
xchg
cmp
pop
mov
push
test
mov
arpl
push
lea
cmp
mov
loopne
movs
sbb
stos
jp
outs
push
rol
ss
imul
mov
stos
repnz
daa
push
pusha
mov
and
jns
ss
call
adc
imul
push
ror
xchg
ins
adc
inc
inc
xor
cmps
ins
or
xor
push
clc
add
imul
les
gs
adc
je
and
push
xchg
(bad)
call
sbb
cmps
or
sar
aam
(bad)
add
jne
or
cmps
mov
sub
dec
retf
int
sbb
shr
movs
xor
or
pushf
adc
pop
and
out
mov
leave
stos
mov
xor
mov
inc
adc
ds
ret
mov
repz
ins
in
call
mov
jnp
das
movs
xchg
fs
shl
jae
mov
push
sahf
test
int
xchg
icebp
push
fwait
out
(bad)
xor
pop
movs
iret
outs
pop
mov
mov
and
mov
ror
scas
ja
push
sbb
or
or
sbb
xor
sahf
mov
dec
shl
pop
imul
or
std
and
sub
add
out
add
outs
aad
jo
ss
stc
outs
add
test
sub
sbb
pop
in
fs
or
icebp
in
ret
mul
cwde
mov
repnz
sbb
dec
mov
sti
and
xchg
clc
out
mov
stos
inc
cwde
shr
mov
in
sbb
inc
cmps
mov
jle
sub
fs
xor
into
mov
jae
push
push
ss
loop
cmp
fiadd
sub
ret
or
and
cmps
xor
loope
push
xchg
cld
clc
lods
into
pop
stc
xor
shr
in
lock
lea
aad
test
jb
fnsave
xchg
neg
push
test
mov
dec
push
pop
dec
push
sub
add
pop
sub
enter
int
push
mov
push
enter
jecxz
mov
adc
cdq
mov
mov
fidiv
inc
xchg
jo
(bad)
ins
int3
fst
inc
sbb
mov
mov
into
imul
pop
adc
pusha
jmp
pop
jno
retf
jnp
jg
aas
dec
in
adc
pushf
(bad)
sahf
add
out
jl
addr16
arpl
and
mov
adc
shl
mov
loopne
cmp
aaa
repz
into
xchg
movs
mov
rcl
sub
xlat
repnz
mov
retf
mov
cdq
out
dec
aas
imul
sbb
inc
out
mov
(bad)
jbe
jl
xchg
pop
mov
adc
lock
stos
sub
push
jae
xchg
fcom
sbb
sub
imul
loope
jmp
jns
ror
in
push
or
icebp
mov
lea
enter
mov
in
daa
or
pop
inc
mov
aam
sbb
iret
sub
jae
imul
xor
xchg
adc
xor
pop
or
pop
sub
sbb
mov
ficom
sbb
mov
dec
call
retf
xor
outs
mov
cmps
lea
inc
adc
das
in
sbb
inc
cmp
push
mov
xchg
add
(bad)
mov
es
call
shl
or
push
mov
dec
jmp
shl
retf
cmps
repnz
push
div
stc
push
std
rcl
sbb
movs
inc
(bad)
cmp
mov
cld
dec
push
call
stos
icebp
adc
push
jne
aas
add
outs
dec
adc
pop
push
xchg
xchg
test
cli
sbb
das
pop
sbb
adc
mov
sub
ret
fbld
dec
mov
movs
mov
add
shl
mul
jmp
shrd
addr16
loop
pop
rcl
adc
pushf
fadd
jns
cwde
sbb
ficom
inc
shl
cmp
xchg
xchg
xchg
in
pop
aas
(bad)
mov
or
cdq
jg
mov
(bad)
clc
pop
hlt
pushf
inc
out
mov
das
arpl
or
mov
mov
sbb
aaa
jp
fmul
sub
xor
dec
call
jle
lods
or
xchg
sbb
test
sub
cmp
dec
xor
adc
or
jg
loope
add
pushf
jno
add
xor
pop
popf
cld
xlat
fdiv
stos
mov
xor
jmp
xor
nop
dec
dec
mov
sbb
pusha
jne
push
scas
cmp
cmc
mov
cmp
jnp
test
mov
push
mov
mov
mov
jns
adc
jns
loop
pop
shl
or
inc
imul
add
adc
cmc
jno
mov
shr
fs
daa
mov
pop
pop
add
xchg
mov
loop
aaa
mov
mov
cmps
cs
and
bound
cmps
and
pop
ficomp
dec
or
or
clc
daa
lahf
jae
add
inc
dec
iret
mov
les
call
push
push
test
out
or
enter
addr16
mov
repnz
(bad)
shr
popa
cmps
inc
or
call
inc
push
adc
jmp
pop
jmp
loope
and
mov
aaa
jne
inc
ss
add
in
pop
mov
jbe
jae
jae
hlt
push
cld
unpckhps
jl
xchg
push
pop
push
xor
lods
out
sahf
scas
cmp
xchg
push
and
push
test
mov
sub
je
mov
push
jbe
idiv
pop
xchg
(bad)
in
jno
sub
jmp
hlt
inc
arpl
jae
xor
pop
pushf
xor
mov
loop
add
cmp
fisubr
test
add
jae
imul
mov
push
test
loopne
sbb
mov
out
in
call
or
nop
aad
add
mov
stos
loopne
cmp
and
stc
stos
add
out
jmp
push
cmp
fdivrp
mov
inc
sbb
jecxz
enter
push
push
add
loopne
mov
ins
(bad)
jae
in
add
pusha
pop
cmp
nop
xchg
pop
fstp
mov
xchg
das
jns
shl
adc
jle
mov
jnp
(bad)
cli
les
fucomi
ins
pmulhuw
stc
or
mov
and
and
cmp
xor
jb
push
dec
add
arpl
aas
ins
xchg
movs
pop
icebp
sbb
and
xchg
inc
loope
inc
outs
stc
sub
jg
xor
mov
sbb
ficomp
fdivrp
and
sub
mov
mov
dec
in
dec
pop
lock
and
or
pop
in
in
shl
in
arpl
imul
ret
cli
retf
lds
pop
daa
xor
dec
mov
jo
scas
iret
cmps
scas
and
in
aad
inc
mov
test
in
iret
std
loope
adc
call
pushf
xlat
ror
outs
xor
or
inc
adc
push
ss
xchg
mov
jb
cdq
arpl
dec
xchg
sub
cmp
sbb
inc
loop
outs
test
jne
push
dec
cmp
cli
and
sahf
inc
into
dec
jle
imul
push
xor
mov
rol
mov
int3
add
jp
and
in
xor
sar
sbb
sub
mov
test
xor
shl
pop
ret
stos
cmps
enter
dec
jmp
xor
mov
xlat
mov
sub
clc
mov
adc
inc
xor
outs
leave
push
jg
call
loope
cmp
lods
jge
jae
(bad)
imul
dec
shr
sar
ds
and
imul
xchg
ret
(bad)
fiadd
std
mov
mov
fdiv
(bad)
pop
lea
aaa
test
adc
cli
cmp
aam
or
mov
int3
mov
pop
xchg
jns
and
dec
fidiv
mov
sar
xor
dec
and
not
add
adc
ins
cmp
dec
inc
mov
pop
cli
jecxz
jns
mov
jnp
adc
outs
call
fmul
inc
dec
mov
push
outs
imul
inc
mov
mov
fnsave
add
mov
mov
or
push
xchg
ins
push
call
leave
and
fisub
lods
es
sahf
pop
and
sbb
daa
sti
in
(bad)
and
or
or
or
pop
xchg
test
dec
rcl
or
and
cmc
ds
test
jp
stos
push
ret
sub
retf
or
sbb
retf
mov
xchg
std
es
jg
sub
sub
push
test
mov
xor
xor
sub
rcr
cmp
jle
xor
cmp
and
lds
mov
push
aas
mov
mov
push
mov
out
sbb
mov
and
pop
dec
xor
push
push
scas
in
call
adc
ins
rcr
fistp
and
add
jno
fisubr
adc
cmp
add
jmp
or
mov
add
lds
sar
pop
xchg
adc
ins
lds
or
xchg
aam
xor
mov
push
dec
or
pop
or
jne
xor
xor
fs
jae
std
jno
pop
pop
clc
pop
ret
mov
jmp
in
or
and
aam
rol
inc
scas
push
dec
adc
addr16
cmp
sti
mov
mov
shr
or
mov
scas
xlat
cmp
push
lock
fcomip
cmps
mov
lods
sub
inc
add
pusha
mov
push
dec
lods
test
ja
dec
sbb
jl
movs
ror
movs
adc
in
enter
mov
jle
je
ins
sub
adc
cmc
jnp
add
out
fimul
js
sbb
jp
xlat
mov
imul
dec
test
loope
cs
mov
add
jb
jge
dec
cmp
and
mov
lahf
add
jo
mov
xor
and
sub
cmp
mov
push
push
and
lods
scas
int
scas
sti
into
mov
xor
data16
fsub
mov
test
sub
inc
loope
inc
xchg
sub
push
push
aas
adc
iret
call
sbb
fs
(bad)
pop
xchg
lds
sbb
daa
mov
mov
retf
dec
inc
fidiv
pop
outs
adc
cmp
(bad)
adc
sub
in
ror
dec
call
aaa
push
clc
pop
inc
pop
ret
push
jnp
sti
ss
jecxz
mov
ds
sub
and
cli
adc
(bad)
clc
or
inc
push
cmp
std
cmc
push
push
(bad)
sbb
ds
pop
inc
jp
dec
adc
mov
xchg
and
iret
(bad)
or
cmp
cmp
out
cmp
jno
or
pop
inc
mov
jnp
ds
mov
xchg
jb
rcl
stc
nop
or
aad
enter
add
or
cmp
fmul
loop
cmp
scas
pop
daa
add
icebp
or
(bad)
pop
shl
pushf
mov
scas
add
adc
mov
test
ins
push
(bad)
psraw
add
push
or
sbb
(bad)
fs
outs
adc
dec
call
push
and
dec
cli
imul
inc
sub
jbe
pop
int
inc
into
fstp
add
and
push
dec
push
pop
pop
push
jp
add
das
push
imul
loop
lea
inc
jmp
push
add
xchg
movs
xor
daa
xlat
lods
push
mov
ror
jmp
push
add
das
hlt
in
aas
dec
inc
aad
pop
loope
ret
into
xor
in
in
sub
bound
or
push
sbb
push
in
out
movs
fwait
test
push
cmps
cmp
adc
mov
scas
fisub
dec
movs
out
mov
(bad)
pcmpeqd
hlt
hlt
pop
sub
std
cli
xor
mov
and
ret
xlat
movs
rol
enter
jne
push
mov
cmp
lods
loope
jns
mov
xchg
idiv
je
stc
shl
cmp
mov
jmp
call
mov
xchg
aas
mov
adc
call
jo
pop
dec
movs
lahf
ficom
mov
inc
add
shl
lods
icebp
imul
movs
and
sub
ds
pusha
loopne
(bad)
les
mov
lock
out
xor
jnp
inc
sbb
push
adc
pop
loope
movs
jae
or
ret
fstp
mov
dec
ret
or
mov
pop
inc
mov
push
inc
in
cmp
push
add
or
xchg
ret
inc
mov
mov
mov
xchg
mov
push
mov
push
test
cmp
add
(bad)
(bad)
(bad)
std
push
or
call
imul
pop
inc
ss
fwait
push
sbb
sub
xchg
jmp
outs
sbb
outs
fisubr
es
mov
mov
jb
(bad)
mov
mov
push
pop
ins
sbb
sbb
xor
test
jl
mov
pause
shr
push
push
inc
jae
adc
movs
and
or
xor
jmp
sahf
int
neg
retf
jno
stos
and
adc
cmps
icebp
(bad)
scas
cmp
fdivr
sahf
ds
pop
fcmovne
cmc
cmp
test
cmp
mov
ret
cmp
pop
je
lods
sub
cmp
or
sar
icebp
adc
sub
out
hlt
bnd
in
ins
mov
in
sahf
adc
aad
inc
cmp
or
mov
lds
or
add
mov
imul
pop
sub
hlt
lock
dec
les
add
jmp
inc
int
test
in
or
stos
test
inc
clc
or
pusha
sti
pop
cs
fiadd
mov
push
test
ins
rol
xchg
jl
xchg
push
push
loope
dec
lds
mov
clc
(bad)
pop
(bad)
mov
xor
stos
cs
mov
or
iret
adc
push
je
mov
xchg
cmp
mov
call
adc
push
inc
push
nop
cmp
sti
jmp
jno
add
les
ins
call
retf
outs
ss
call
push
lods
popa
xchg
retf
add
sub
jns
pop
outs
sahf
lahf
mov
jle
(bad)
mov
lds
lahf
xchg
inc
fistp
test
push
jmp
or
std
inc
stos
cmp
or
inc
int3
mov
iret
mov
add
push
mov
jmp
xchg
popa
data16
jecxz
mov
xor
xchg
scas
xor
push
nop
jne
inc
and
movs
mov
push
xor
cld
mov
sbb
pop
out
shl
movs
out
fadd
out
push
sub
paddsw
std
add
adc
dec
jmp
cmp
fldenv
dec
test
sub
inc
imul
arpl
nop
(bad)
test
jbe
inc
mov
repnz
xor
xchg
outs
sbb
ud2
xchg
out
mov
push
mov
or
cmp
aam
inc
int3
inc
cmc
int
xor
jle
jne
mov
stos
retf
call
adc
(bad)
cmp
int3
push
adc
repz
mov
adc
movs
jbe
(bad)
in
add
jno
out
cdq
lds
cmp
lea
cmp
add
xchg
or
jle
push
mov
cmp
ret
sahf
jg
jo
loop
imul
aaa
mov
nop
jmp
pop
sbb
es
sbb
sub
add
adc
pop
int
(bad)
push
adc
or
sbb
cmp
ret
xchg
lea
mov
sbb
rol
bndstx
loopne
jmp
nop
pop
cdq
add
xchg
dec
or
inc
add
pushf
or
(bad)
mov
int3
jp
cld
xor
mov
sub
add
or
js
test
popa
push
add
mov
cmp
and
in
dec
mov
out
xchg
add
sub
test
mov
sbb
cmp
mov
add
sar
outs
leave
jns
adc
mov
mov
jb
xchg
mov
xchg
mov
pop
mov
icebp
mov
lds
sub
aas
push
dec
movs
(bad)
cli
div
test
adc
or
inc
xchg
push
inc
(bad)
std
movs
loopne
xor
jecxz
xor
aam
ins
cmps
call
mov
xor
out
add
shr
in
pop
movs
ss
xor
pop
std
in
xor
std
cld
dec
sysret
or
pop
sbb
dec
mov
addr16
mov
daa
rol
pusha
pop
loope
cmp
movs
xchg
mov
test
push
cmp
mov
cdq
xchg
std
ret
xchg
lods
inc
daa
jle
pushf
push
das
mov
jecxz
fwait
outs
cmp
add
mov
adc
pop
inc
push
dec
sbb
adc
or
scas
pop
pusha
cs
inc
sub
es
fsubr
push
xor
adc
mov
jno
ds
push
loopne
ins
cmp
ror
cmp
sub
iret
inc
xchg
cwde
rol
xchg
and
mov
xor
leave
dec
retf
inc
xchg
pop
mov
sub
inc
pop
int
cmps
imul
and
push
jg
shl
movs
retf
cli
pop
(bad)
std
repnz
shr
lahf
and
aas
dec
dec
pop
jecxz
inc
stc
nop
pop
xchg
inc
jle
call
push
dec
jne
push
retf
ret
fs
jnp
or
xchg
mov
or
stc
scas
dec
sub
lahf
sub
aas
add
dec
sbb
jnp
fcomp
sub
(bad)
in
add
add
cmp
jmp
xchg
dec
std
pop
fist
jl
dec
cmp
mov
movs
pop
scas
pop
test
mov
xchg
mov
mov
bnd
mov
push
pop
jp
jl
add
mov
cld
imul
and
call
xor
test
sbb
lea
sti
ins
dec
jb
bound
jo
sbb
sub
fidivr
dec
jmp
sbb
dec
mov
popa
and
pop
and
push
stc
sahf
push
fs
fcmovne
ds
loopne
loope
retf
ja
movs
dec
dec
test
fsubp
(bad)
fistp
out
(bad)
fisttp
cwde
sub
rol
jns
jl
xchg
fwait
inc
hlt
mov
fwait
pop
int3
push
retf
cwde
and
cmp
fwait
daa
push
movs
mov
push
ror
sti
and
push
outs
mov
out
pop
dec
xlat
xor
into
xchg
pop
cmp
adc
inc
dec
int3
cld
nop
nop
scas
and
inc
imul
mov
add
inc
dec
test
inc
mov
call
ret
push
ds
ja
dec
push
shl
cmp
xchg
mov
pop
bound
pop
imul
cmp
pop
imul
cmp
arpl
stos
xchg
aad
adc
in
xchg
pop
push
sub
adc
sbb
fst
push
sub
pop
hlt
and
ins
inc
aaa
loope
fimul
rcr
push
add
es
dec
xor
jns
out
mov
pushf
mov
xchg
outs
inc
or
stos
stos
mov
jo
cmp
outs
pop
iret
or
fist
fdivr
loope
mov
loope
mov
fdivp
in
call
sub
retf
es
or
dec
stos
cmp
cmp
lock
dec
std
nop
cmp
ja
mov
test
arpl
mov
pop
les
cmp
fs
inc
fld
int
mov
cdq
pop
dec
(bad)
sub
sub
mov
into
ins
push
pop
aam
push
cmps
sub
loopne
mov
pop
icebp
pop
sub
mov
mov
fimul
jge
es
iret
retf
ins
push
hlt
push
dec
mov
xchg
icebp
repz
pop
imul
test
mov
in
or
xchg
outs
addr16
mov
adc
inc
dec
cdq
xor
xchg
cdq
mov
iret
mov
inc
test
cwde
jnp
xor
in
mov
ds
repz
or
cmc
push
lods
dec
jo
inc
(bad)
mov
fstp
retf
(bad)
cld
push
je
les
mov
fdivr
out
iret
mov
jo
and
push
outs
scas
pop
ins
lock
mov
popf
jne
jmp
cld
add
mov
fwait
retf
fist
ret
jp
add
ss
mov
scas
inc
jmp
fcom
jmp
mov
bound
xor
lods
fwait
adc
push
sbb
aas
mov
cli
scas
aaa
les
hlt
jno
sub
lods
ss
in
pop
hlt
sbb
xchg
jo
cmps
jnp
push
adc
push
enter
cmps
gs
dec
xchg
bound
imul
ret
stos
jmp
cld
iret
xchg
lods
mov
in
inc
jmp
xchg
sbb
sbb
popf
or
xchg
xchg
cmps
mov
pop
dec
lods
push
aas
test
enter
pop
sti
aam
fild
idiv
and
pop
dec
cmp
stos
loope
inc
scas
les
push
stc
pop
gs
das
and
pop
push
mov
pusha
dec
loopne
iret
(bad)
aas
call
mov
sbb
ins
dec
cmps
mov
inc
call
jl
scas
add
xor
xor
jecxz
in
sub
push
ins
jl
or
sub
arpl
(bad)
das
scas
add
invd
stc
jecxz
jmp
jns
icebp
sbb
ins
push
fistp
cwde
sbb
inc
rcl
and
xor
sub
sbb
mov
arpl
xchg
cdq
dec
cmc
dec
mov
sbb
sub
fcom
jbe
nop
xchg
jo
sbb
sti
sbb
outs
push
mov
idiv
jg
mov
jnp
dec
pop
sub
aam
fnop
xchg
retf
push
arpl
pop
push
call
mov
pop
in
loopne
adc
push
pop
mov
xor
xchg
xchg
fwait
sti
test
jnp
push
jns
dec
fs
mov
sbb
pop
stc
xor
add
mov
xor
dec
jmp
add
pop
enter
std
inc
fwait
add
or
xchg
xchg
sbb
pop
fst
dec
(bad)
stos
xchg
pop
sub
and
xor
cmp
ss
cmp
fcmovnu
(bad)
out
in
shl
enter
cmp
cli
xchg
jb
adc
mul
fiadd
dec
rcr
cmp
fisttp
mov
aad
pop
stc
cmps
iret
jno
mov
sbb
mov
in
jp
mov
pop
aam
mov
inc
add
rcl
push
clc
adc
xchg
les
and
fsubr
ret
pop
sbb
stos
aaa
sbb
retf
ret
push
cdq
out
loop
ins
inc
shr
push
cmps
adc
cmps
or
icebp
pop
ret
leave
xchg
sub
push
or
fs
mov
cli
push
and
add
jae
dec
je
cmp
push
(bad)
pop
xchg
or
push
bound
and
inc
fild
mov
jno
jo
shl
addr16
sub
cmp
xor
fldenv
outs
add
mov
inc
inc
add
lock
sbb
ror
xchg
add
add
jge
add
jae
add
dec
ds
cdq
fwait
mov
dec
add
xchg
repz
fisubr
pop
call
jl
sahf
sbb
(bad)
and
ins
xor
mov
jb
dec
sbb
outs
xor
pop
inc
lods
inc
icebp
sbb
(bad)
cmp
repz
out
fwait
sbb
inc
or
sbb
les
xor
inc
pop
dec
pop
mov
lods
nop
jnp
lock
bound
js
aad
dec
xchg
stc
pop
mov
push
out
mov
mov
dec
or
inc
jg
mov
out
and
xlat
cmc
or
cmc
adc
imul
sub
rcl
inc
out
inc
enter
fisubr
shr
mov
sbb
js
lods
jle
fisttp
(bad)
push
int3
outs
movs
arpl
jbe
mov
pop
icebp
push
loop
sub
adc
inc
mov
sbb
inc
call
jp
push
sub
iret
jmp
sbb
outs
data16
push
mov
aad
add
cs
dec
xor
mov
push
repnz
sub
adc
ret
shl
xchg
outs
lock
jne
bound
js
dec
inc
sahf
jmp
adc
jmp
jmp
adc
aad
mov
out
xchg
in
and
clc
out
sbb
cmp
pop
sub
leave
pop
push
mov
add
and
mov
or
adc
pop
jb
cmp
push
jg
mov
mov
mov
dec
mov
ror
mov
pop
fwait
jb
inc
pop
xor
call
(bad)
jo
cmp
pop
jo
add
push
pop
cwde
adc
sub
call
xor
add
xchg
dec
es
ror
pop
inc
jo
mov
xchg
xlat
retf
lds
pop
cmps
add
jp
and
hlt
mov
scas
sbb
out
jne
mov
sbb
rcr
jo
movs
in
jl
add
fcomp
movs
sbb
inc
stos
push
pop
jae
repnz
mov
cmp
mov
data16
and
mov
out
retf
cdq
les
repnz
xchg
je
enter
sahf
cmp
mov
rol
cli
in
fnclex
pop
test
mov
int3
pop
jg
or
mov
push
daa
and
add
gs
mul
pusha
out
cmp
(bad)
mov
adc
stos
movs
test
xor
movs
mov
xor
ja
aam
js
mov
push
add
xor
pop
sbb
xor
es
ins
adc
push
xor
movs
pop
(bad)
sbb
fisub
int
icebp
inc
retf
scas
enter
in
std
xor
sahf
dec
sbb
lods
and
bound
pop
mov
(bad)
imul
push
les
pop
inc
dec
mov
mov
push
lods
adc
cs
inc
test
xchg
cmp
xchg
pop
dec
cmc
js
sub
or
cmp
ret
arpl
inc
jo
mov
jb
lods
mov
out
fwait
in
mov
cs
mov
or
retf
mov
mov
pusha
hlt
sbb
inc
mov
mov
pop
aas
lea
mov
pushf
ret
nop
ret
push
cmps
xor
addr16
imul
out
jmp
jne
scas
dec
sub
jmp
and
dec
pop
ds
out
push
aas
mov
in
cmc
test
aas
sub
mov
rcl
dec
jp
xor
cmp
ret
cmp
test
push
in
mov
adc
xchg
inc
push
fwait
pop
add
cmps
push
cmp
cwde
fidivr
push
add
pop
add
jmp
adc
popf
jmp
icebp
das
push
daa
aaa
sbb
lock
pop
mov
pop
xor
mov
xchg
jl
ds
sub
shl
shl
int3
lods
das
pop
jnp
scas
loope
outs
stos
push
cpuid
cmp
out
push
mov
pop
mov
mov
fdiv
and
mov
das
lock
add
sub
add
adc
gs
jmp
pop
sbb
shl
ror
gs
outs
scas
pop
add
push
test
xchg
mov
out
push
mov
daa
cdq
sub
fistp
adc
stos
mov
mov
dec
xor
mov
lock
lods
xor
mov
mov
cmp
cwde
inc
ds
rcl
shl
loopne
test
lock
xor
clc
pop
xchg
lds
call
test
cmps
inc
mov
jne
sub
ror
int
aad
add
sub
les
pop
sub
xchg
xchg
xor
mov
mov
mov
int3
push
ins
inc
dec
ins
sub
js
aad
dec
gs
ins
xchg
adc
sub
scas
xchg
add
es
or
les
or
push
inc
adc
push
push
or
shl
int
dec
xlat
movs
dec
jns
jae
(bad)
mov
add
(bad)
test
dec
push
mov
sti
test
pop
cmp
mov
aaa
push
mov
sbb
ins
inc
stos
xor
add
xchg
xchg
data16
aas
retf
sbb
jb
leave
mov
and
push
inc
mov
or
dec
jmp
shl
ror
adc
inc
outs
push
hlt
scas
and
cwde
pop
pop
mov
neg
dec
dec
rol
pop
adc
lds
add
pop
pop
push
adc
sbb
dec
mov
sub
xchg
inc
xchg
dec
lods
jo
sbb
xchg
sub
into
cs
data16
cwde
out
push
out
sar
mov
lds
push
clc
sub
xchg
dec
pop
jecxz
sbb
aas
mov
jne
cmps
rcr
adc
ds
daa
mov
retf
push
sbb
mov
daa
dec
dec
sbb
xor
into
(bad)
pop
mov
jp
gs
ret
dec
mov
je
or
ja
xor
retf
fmul
push
mov
sub
shr
setae
(bad)
dec
ss
leave
and
fstp
mov
leavew
add
pop
fucomi
je
call
jb
dec
cmps
sbb
aaa
int3
ja
into
adc
add
test
nop
push
adc
mov
(bad)
mov
jecxz
cwde
pop
jmp
hlt
out
add
stos
jge
xor
cmp
xor
xor
sbb
inc
dec
addr16
cwde
(bad)
fwait
jbe
add
in
std
popf
inc
xchg
mov
xchg
mov
xor
dec
(bad)
call
lock
adc
adc
popf
out
mov
or
(bad)
icebp
sahf
ror
mov
sahf
pop
scas
fcom
push
mov
or
mov
and
in
push
arpl
sub
popa
mov
sbb
lds
push
dec
leave
pop
mov
lock
daa
jecxz
rcl
mov
xchg
ds
shl
inc
out
sti
xor
jns
in
mov
sbb
(bad)
adc
fxch
(bad)
(bad)
cmp
sbb
push
mov
scas
jo
popf
repz
jo
mov
pop
sub
aam
push
fnstcw
adc
push
int3
mov
jmp
add
cmp
push
iret
data16
push
jo
dec
jne
(bad)
pop
lahf
add
push
repnz
mov
es
mov
pop
and
xchg
adc
mov
ror
and
jecxz
outs
cmps
dec
xor
pusha
movs
push
shl
adc
mov
movs
imul
test
dec
inc
jmp
xchg
fcmove
adc
mov
xchg
push
enter
jno
imul
(bad)
stos
(bad)
and
cmp
(bad)
loopne
dec
jge
retf
jg
aad
push
push
jge
dec
sahf
push
dec
rcl
push
data16
jno
cli
mov
pop
inc
cmps
in
out
xchg
cwde
push
xlat
rcr
mov
jae
sbb
xor
adc
test
retf
iret
xchg
lods
clc
test
and
gs
or
inc
add
pop
inc
or
ins
and
scas
push
inc
inc
sbb
scas
sbb
scas
jl
sbb
pop
fild
shl
rep
loopne
pop
xor
daa
mov
inc
xchg
inc
into
pusha
mov
cs
mov
cmp
daa
mov
sbb
xor
test
sub
sahf
mov
mov
ja
aam
icebp
aam
lock
lods
adc
dec
mov
enter
cli
(bad)
ds
add
les
gs
stos
and
cmp
inc
imul
inc
ins
dec
std
out
lea
in
clc
inc
(bad)
pop
mul
xor
loopne
add
inc
inc
adc
mov
loope
jb
cmp
sub
sub
hlt
cmps
jmp
pop
xchg
cmps
fiadd
mov
adc
dec
cdq
cmp
sbb
mov
jmp
popf
push
sbb
in
mov
sahf
mov
sbb
mov
test
xchg
cs
xchg
jecxz
jnp
or
push
jmp
sbb
or
(bad)
mov
sub
lods
scas
and
jbe
mov
ret
dec
jmp
test
xchg
push
sub
stos
in
sahf
in
ficomp
test
fdivr
js
jecxz
sub
xor
add
(bad)
cmp
fdivr
adc
mov
loop
or
js
jmp
fbstp
push
sub
push
adc
scas
je
pop
inc
xor
test
inc
adc
xchg
shl
fisubr
jg
jnp
aaa
push
push
out
xor
test
push
sbb
leave
and
out
cmp
xchg
aam
test
mov
mov
mov
sti
jb
jp
ds
gs
movs
les
clc
test
xor
add
and
out
jbe
jl
in
cmp
std
mov
inc
jmp
sub
inc
push
dec
lds
lahf
dec
inc
arpl
mov
popf
dec
test
mov
or
xchg
jmp
add
sbb
lock
and
aad
fiadd
pop
cdq
sbb
push
(bad)
dec
pop
sahf
mov
add
fwait
mov
xor
mov
arpl
push
and
mov
stos
gs
xor
jp
xor
push
adc
daa
mov
sbb
aas
xor
mov
idiv
fld
xor
pop
(bad)
call
(bad)
ret
bound
outs
sbb
out
nop
repnz
mov
test
scas
mov
pop
aam
cdq
add
mov
fs
(bad)
popf
jbe
hlt
jl
aam
mov
ret
adc
mov
xor
ret
enter
dec
mov
iret
xchg
push
push
cmp
push
cmp
enter
or
fimul
sub
dec
aad
inc
push
mov
pop
adc
push
les
dec
xor
stos
pop
jo
(bad)
sbb
inc
sbb
fnstcw
test
and
stc
and
sub
js
idiv
add
jmp
das
lock
bound
xchg
(bad)
fwait
aas
fiadd
sbb
add
sbb
or
push
push
xor
xor
push
out
cmps
cmp
adc
pop
xchg
dec
jge
push
add
mov
sbb
cmp
fxch
int3
daa
xchg
outs
lods
stos
ret
jnp
sub
add
dec
cmc
sbb
imul
add
cwde
mov
cdq
push
lock
xchg
fisub
aas
mov
outs
out
inc
or
mov
add
je
lock
js
mov
jp
inc
mov
lods
mov
jbe
inc
push
xor
mov
xchg
pop
movs
xor
enter
inc
add
fisubr
test
dec
mul
adc
ret
xor
pop
mov
push
or
and
lods
lahf
cvttps2pi
lock
pop
fsubr
cmp
fistp
clc
cmp
add
aas
fisubr
stc
push
je
jmp
inc
jns
push
fcom
and
dec
push
adc
mov
retf
pop
jnp
imul
int3
or
lods
fwait
popf
loope
sbb
adc
sub
int
sbb
sub
mov
bound
jmp
mov
mov
cmc
mov
or
cmc
push
push
retf
xor
test
call
cs
add
and
adc
loop
movs
daa
pop
and
outs
mov
cmp
fwait
pusha
cli
aad
or
sbb
call
ins
xor
mov
pop
popf
(bad)
leave
cmp
das
pusha
pop
daa
cmps
mov
jb
test
pop
pop
pushaw
shl
sbb
lods
dec
sbb
push
mov
aam
cs
je
ds
sbb
inc
add
sbb
fadd
neg
xor
ins
jmp
enter
mov
ja
fldlg2
data16
movq
adc
adc
pop
jns
ja
mov
loopne
push
cmp
std
fiadd
xchg
inc
push
sub
xor
jnp
jmp
ins
xchg
adc
pop
mov
mov
sbb
(bad)
into
addr16
adc
imul
sbb
idiv
and
push
rcl
aaa
inc
mov
in
and
mov
adc
mov
inc
(bad)
xlat
and
cwde
dec
addr16
jnp
jmp
sub
pop
imul
adc
push
fnstcw
pop
js
pop
or
cmc
or
shr
std
add
and
pushf
or
pop
pop
pop
(bad)
dec
fist
mov
sbb
iret
jnp
and
call
scas
leave
fwait
or
push
sbb
dec
dec
or
adc
add
outs
cs
xor
std
push
mov
pusha
fld
fdiv
push
mov
lea
pop
(bad)
adc
jmp
lahf
pop
pop
add
aaa
test
xchg
jno
or
int3
bound
lds
cmp
ret
mov
in
push
and
inc
in
cmp
inc
jle
shl
xor
pop
xlat
mov
lock
mov
xor
cmp
add
in
push
or
hlt
aas
and
sbb
push
aas
mov
data16
jp
xchg
movs
arpl
pop
mov
bound
jl
sbb
repz
jns
jmp
or
mov
dec
leave
retf
test
movs
mov
fcmovu
inc
xchg
aad
jg
mov
loopne
aam
dec
sbb
pop
jl
xchg
push
repz
push
mov
ss
xchg
dec
aad
adc
xor
sub
dec
rcl
sub
push
dec
adc
cmps
xchg
shl
pop
jo
pop
sub
loop
inc
fidiv
pop
(bad)
das
sbb
pop
cmp
mov
scas
add
aaa
sahf
(bad)
fild
sbb
adc
add
fsubr
jb
add
retf
mov
stc
and
or
fstp
popf
dec
adc
ret
pushf
bt
sub
arpl
mov
pop
push
icebp
inc
(bad)
mov
loopne
and
dec
sub
(bad)
js
dec
cmovae
jnp
stos
xor
dec
retf
rcl
mov
mov
inc
sbb
retf
neg
ud1
cwde
pop
push
dec
mov
mov
cmps
dec
jp
ret
fidiv
int
add
jle
or
mov
jge
lds
mov
fld
push
xchg
pop
sub
inc
mov
imul
mov
ret
popf
fiadd
mov
jl
mov
outs
stc
rcl
in
cli
aam
ins
aam
or
jae
cmps
dec
mov
xchg
dec
dec
cwde
cmps
xor
adc
out
retf
stc
adc
in
mov
push
add
sub
into
nop
mov
cmp
jo
es
std
sub
fdiv
inc
dec
push
mov
fmul
inc
jnp
arpl
inc
imul
mov
xlat
fucomip
push
repnz
ins
or
mov
xor
dec
out
sbb
mov
in
shr
jecxz
ins
fwait
cdq
adc
sub
and
enter
in
pop
pop
sub
out
jp
inc
xor
popa
xchg
fucomip
and
dec
lahf
mov
ror
std
retf
pusha
xchg
int
and
(bad)
mov
mov
jo
gs
xorps
movs
aaa
adc
call
cmps
and
loopne
cmp
and
dec
add
ret
pop
pop
cmps
dec
cli
mov
icebp
inc
pusha
imul
pusha
push
(bad)
(bad)
jb
mov
cs
out
and
out
adc
popf
cmp
fst
mov
add
add
aad
push
inc
inc
cmp
sbb
sub
inc
aad
jne
xor
push
jmp
push
fisttp
test
and
jmp
leave
retf
pushf
call
adc
inc
cmp
and
cmps
test
mov
fstp
and
(bad)
mov
mov
aas
push
push
or
xor
add
xchg
mov
jmp
mov
fnstsw
sbb
or
ficomp
mov
lods
test
xchg
add
daa
inc
test
aas
pop
push
lods
sbb
jmp
and
adc
inc
or
pop
imul
scas
sub
dec
mov
jo
retf
jmp
imul
ins
cmp
movs
out
test
outs
pop
mov
bound
(bad)
cmp
mov
movs
out
fs
lods
add
clc
xchg
fmulp
sbb
jmp
adc
mov
jnp
pop
rol
dec
push
imul
pusha
inc
push
add
(bad)
ficom
lods
hlt
sub
adc
and
xor
jle
outs
loop
pop
pop
sti
jae
outs
in
adc
pop
call
sub
dec
cmp
dec
mov
jmp
cmps
jne
(bad)
sbb
cmps
pop
jl
cmp
jae
dec
and
and
inc
pop
repz
adc
sub
ins
inc
xlat
xchg
call
scas
iret
sahf
mov
call
sbb
adc
mov
test
pop
fmul
aaa
dec
lds
xchg
pop
leave
pop
xor
mov
enter
add
or
rcl
(bad)
push
jp
jge
xor
lea
cwde
and
loope
pop
push
test
icebp
xor
adc
push
fidiv
mov
out
dec
dec
cld
das
jns
mov
cdq
mov
mov
fstp
jmp
xor
fsub
jns
ins
cmp
adc
retf
sbb
sub
pop
in
mov
or
pusha
daa
jg
or
lods
fs
arpl
mov
call
out
pop
aaa
xor
push
mov
pusha
xor
ins
sbb
dec
push
outs
retf
xor
mov
adc
test
iret
dec
test
mov
xchg
xor
or
ja
mov
xchg
or
mov
fucompp
mov
cmp
shr
pusha
dec
mul
cwde
stc
push
add
jle
xor
je
fwait
ins
nop
xchg
ud2
jge
inc
jo
out
ins
push
outs
or
inc
ds
inc
and
pop
adc
cli
pop
mov
jecxz
out
xchg
and
push
cmps
jmp
xor
pop
scas
jbe
(bad)
nop
sbb
or
push
ins
and
pop
add
scas
dec
loope
inc
movs
out
cli
test
aas
cmps
pop
pop
aaa
mov
xor
sbb
dec
inc
cmp
ret
daa
pop
push
out
pop
ins
into
adc
pop
mov
xor
xchg
jp
pushf
xor
xlat
in
sub
adc
nop
movs
nop
sub
std
push
outs
inc
inc
fiadd
je
pop
daa
ja
lea
sub
and
dec
fpatan
xor
mov
mov
pop
leave
(bad)
mov
dec
cmp
enter
sub
adc
mov
in
outs
mov
pop
lahf
mov
jg
xlat
js
sub
pop
xchg
pop
mov
lds
stc
(bad)
in
movs
and
add
scas
bound
inc
inc
cmp
scas
call
mov
es
cmps
mov
mov
loop
xchg
and
cdq
adc
arpl
and
loope
pusha
dec
jg
dec
test
leave
imul
int
adc
out
mov
and
sbb
cmp
pop
sbb
in
jecxz
xchg
mov
popf
repnz
out
dec
sti
inc
cmp
xchg
aam
mov
jecxz
xchg
dec
repnz
rcr
xchg
mov
or
push
dec
push
shl
ret
inc
jg
push
push
loope
push
call
sti
scas
mov
jecxz
ror
jb
mov
mov
xchg
(bad)
rcl
mov
fild
pop
dec
mov
jge
stc
retf
jne
cmc
mov
or
adc
cmps
cmp
ss
add
fwait
push
lock
jne
inc
sbb
test
in
xchg
ins
xor
ficomp
inc
pop
scas
jnp
push
pop
push
ret
dec
ficomp
into
fmul
xor
add
int3
jo
pusha
outs
aam
aas
jb
clc
in
mov
leave
and
pop
aaa
add
scas
retf
add
lock
or
and
test
leave
xchg
scas
int
mov
ins
xor
call
xchg
stos
jns
mov
xchg
jecxz
pop
mov
(bad)
cwde
sub
cmp
outs
xor
sub
push
adc
jmp
loopne
jg
lea
nop
sahf
pop
sar
mov
leave
adc
std
sbb
xor
test
mov
test
arpl
or
add
sbb
adc
aas
scas
inc
xchg
jno
movs
cmc
add
xchg
into
pusha
hlt
fwait
jg
pop
in
popf
pop
nop
sub
cmp
and
into
xor
iret
or
inc
and
int3
nop
icebp
int
fistp
mul
xchg
jno
mov
cld
mov
jb
stos
xchg
sub
add
xchg
cmp
jns
cmp
test
sub
(bad)
rcl
mov
(bad)
test
xor
scas
jbe
sub
je
inc
cmp
cwde
inc
pop
xchg
sbb
cli
sub
adc
sub
and
mov
inc
or
jb
sbb
rol
call
mov
xor
movs
add
sahf
stc
lock
jmp
jne
pusha
mov
ja
push
xchg
sub
cmp
ds
push
fidiv
(bad)
lea
push
xlat
xchg
rcl
push
mov
mov
push
test
push
repz
test
in
cwde
push
lods
retf
lahf
ret
dec
and
adc
jmp
add
ja
or
(bad)
sar
push
lea
in
outs
mov
sub
pop
outs
lock
push
xchg
cmps
retf
mov
inc
je
ins
out
jae
pop
iret
sbb
add
cmc
cdq
or
pop
lods
fisub
push
int
stos
bound
xor
mov
sbb
inc
sub
jo
retf
cwde
leave
pop
mov
add
jae
lods
pop
sti
push
mov
dec
add
and
xchg
mov
lea
dec
std
lock
movaps
dec
es
pop
add
add
(bad)
cmc
mov
add
xor
out
mov
jae
enter
aad
hlt
repz
fucomip
xlat
push
div
xor
movs
mov
jne
add
cmps
lods
add
rcl
nop
mov
xadd
jmp
inc
pop
and
xchg
xor
cmp
pop
enter
xor
pop
jnp
(bad)
rol
pop
add
int3
sub
inc
rcr
and
mov
mov
arpl
sbb
fld
and
dec
(bad)
xchg
dec
mov
aaa
(bad)
xchg
test
imul
mov
push
aas
mov
(bad)
mov
cmp
dec
outs
ds
sub
sub
mov
sub
movs
call
fidivr
pop
fwait
push
in
mov
shl
pop
cli
stos
loope
test
es
mov
dec
cmp
push
(bad)
xchg
push
ins
mov
pusha
fwait
or
xchg
outs
bound
mov
pop
cwde
(bad)
fld
int3
es
xor
shl
sti
inc
test
ret
sti
retf
scas
xchg
adc
ja
lock
ret
mov
xor
sbb
inc
mov
mov
arpl
dec
mov
push
mov
fimul
mov
xor
ror
cmovb
and
mov
repz
popa
mul
fcom
std
inc
ret
inc
cwde
push
push
cmps
xor
fs
or
pop
inc
or
mov
mov
or
addr16
shl
adc
lds
sub
sbb
pushf
loopne
vpminub
cmps
fcom
push
push
pop
inc
ins
mov
arpl
sub
pop
jmp
(bad)
jg
xchg
cmp
cli
popf
loopne
push
shl
cdq
dec
adc
fdivrp
sub
mov
ret
test
pop
pop
(bad)
(bad)
push
jecxz
jg
sub
mov
in
mov
shl
mov
sti
jbe
mov
mov
ja
inc
adc
adc
sahf
inc
pop
push
cmp
adc
das
sbb
movs
mov
(bad)
xchg
push
dec
test
add
inc
or
and
ror
cld
add
jb
and
add
nop
lahf
repnz
dec
sub
jmp
inc
in
lahf
jae
mov
movs
sub
stos
shl
push
xchg
movlps
enter
scas
xor
mov
mov
int3
fucom
test
in
or
jbe
or
pop
and
push
dec
daa
mov
mov
add
or
sub
popf
and
mov
cmp
push
pop
imul
xchg
dec
dec
push
inc
or
adc
jb
xchg
xchg
inc
fs
(bad)
jnp
sub
js
(bad)
jge
inc
jmp
jle
add
mov
dec
iret
ror
je
pop
shr
fsubr
mov
dec
idiv
out
mov
movs
arpl
outs
frstor
std
push
fs
push
dec
rcl
aas
dec
xchg
xchg
lea
push
cwde
jb
jb
ficomp
int3
inc
cli
jl
add
inc
sub
xchg
fs
jbe
inc
pop
fdivrp
retf
dec
jnp
lods
mov
xor
loop
outs
jmp
pop
pop
shr
(bad)
fld
jg
and
(bad)
push
sub
sbb
out
cdq
inc
and
jne
rcr
fs
push
scas
stc
jp
xchg
popf
in
xchg
cmp
mov
mov
sbb
push
aam
test
popf
in
outs
cmps
pop
xchg
in
shr
cmp
outs
dec
in
inc
add
adc
enter
aas
mov
push
enter
fwait
test
add
in
into
fidivr
inc
arpl
ret
into
jg
or
fiadd
pop
push
and
aaa
fimul
xchg
fwait
aad
nop
add
push
in
and
das
adc
sar
faddp
out
test
xchg
cmp
loop
aam
adc
clc
push
cli
adc
pusha
mov
mov
adc
stos
aam
push
sbb
sub
ret
dec
shl
rol
or
or
xor
cmp
stc
rol
pop
arpl
sub
dec
mov
xlat
clc
mov
pop
ss
xchg
xor
sbb
sub
imul
pop
shl
ds
(bad)
sub
fucomi
je
add
movs
(bad)
fild
push
pop
(bad)
adc
fs
adc
or
sar
xor
add
(bad)
loop
daa
ins
clc
test
xchg
sbb
jmp
es
cmps
mov
mov
push
popa
pop
in
xchg
enter
xchg
inc
xchg
gs
inc
enter
mov
sub
ja
aaa
retf
push
mov
pavgw
in
dec
cmps
sahf
sbb
aam
neg
lock
(bad)
lock
test
test
adc
dec
scas
xor
xlat
cmp
jl
add
adc
retf
sbb
sbb
pop
fdivr
fcomp
and
clc
movs
or
cli
jae
outs
mov
shr
xor
mov
fcomi
pop
xor
or
add
bound
fidiv
int
add
pop
(bad)
leave
data16
adc
pop
test
push
push
cmc
dec
mov
gs
inc
loope
imul
inc
es
add
mov
jge
cdq
sub
(bad)
and
daa
xchg
lahf
outs
shl
lock
push
push
cmp
sub
call
pop
fistp
fild
or
jnp
inc
cmp
mov
cmp
dec
mov
ja
pop
add
les
ror
clc
jne
dec
movs
addr16
mov
cmp
(bad)
fwait
mov
arpl
retf
mov
shr
popf
pop
push
mov
or
sub
cmc
es
pop
pop
xchg
in
dec
sbb
xor
hlt
mov
cmp
stc
scas
in
mov
outs
or
xchg
adc
xchg
(bad)
in
inc
jmp
xor
xchg
mov
inc
inc
mov
scas
stos
mov
push
push
aaa
add
ins
ins
jp
mov
lea
inc
pop
shl
out
int
push
(bad)
das
enter
cwde
ins
je
lock
xchg
xchg
loope
dec
pusha
or
and
add
ins
adc
cmps
mul
cmps
(bad)
adc
pop
idiv
jg
fisub
jecxz
mov
push
pop
mov
push
iret
push
sub
ins
dec
mov
sub
cdq
cmp
push
int
(bad)
jle
inc
mov
dec
or
dec
push
cmc
out
loop
add
dec
dec
adc
jmp
rol
xchg
iret
enter
and
adc
sbb
imul
mov
xchg
cwde
add
mov
test
xchg
jnp
in
cmps
movs
pop
mov
fild
push
stos
dec
jno
int
(bad)
leave
lahf
nop
mov
daa
stos
imul
mov
lock
dec
nop
mov
jne
fldcw
mov
sbb
dec
xchg
push
push
mov
inc
adc
xchg
add
daa
cli
mov
ret
fisubr
jns
push
es
jmp
sub
cs
or
into
add
imul
lds
ins
out
lock
mov
scas
sbb
sbb
or
das
inc
stos
jmp
ins
mov
jp
(bad)
mov
xor
mov
mov
mov
cmp
mov
out
mov
cmp
push
jb
mov
out
mov
sbb
sti
mov
dec
test
outs
adc
push
int3
ret
test
cmc
push
push
xor
(bad)
push
or
sbb
adc
add
aad
pop
fisubr
lock
xor
test
inc
pop
mov
mov
nop
pop
dec
ss
inc
mov
mov
sbb
cld
fsub
lds
push
cmp
dec
mov
and
mov
add
adc
out
test
jg
repnz
dec
or
gs
fisub
or
adc
push
mov
inc
lahf
arpl
out
movs
les
dec
pop
xchg
fcmovnb
popa
xor
retf
mov
dec
jae
cmp
mov
dec
fcom
jg
jecxz
jp
mov
pop
jmp
mov
adc
sub
and
cld
cld
fnstcw
and
push
movs
mov
loope
(bad)
fst
mov
ins
div
int
jns
loope
repz
out
or
sbb
inc
adc
dec
mul
retf
fwait
sbb
je
stos
push
inc
outs
fsubrp
inc
lahf
inc
or
js
sahf
(bad)
push
add
or
xor
inc
jp
mov
xchg
mov
sub
xchg
sahf
adc
retf
push
fmul
xor
lea
call
add
push
adc
test
scas
add
ds
ins
call
xchg
retf
jmp
cmp
icebp
data16
scas
movs
and
inc
ret
xchg
xchg
mov
not
(bad)
(bad)
push
sub
cmps
xchg
(bad)
repz
call
stos
pop
inc
stc
or
dec
pop
or
jne
pop
mov
sbb
mov
adc
xchg
iret
nop
cmps
mov
add
cmps
rcr
seto
xchg
cld
inc
sbb
mov
sub
push
std
jns
iret
mov
mov
sub
popf
addr16
jne
pushf
add
adc
xchg
jne
inc
ror
jnp
jne
ret
sub
nop
push
test
pop
sar
(bad)
loop
or
ror
jl
sbb
fwait
int3
xchg
call
leave
shr
fwait
test
jl
mov
pop
cmp
pushf
repnz
adc
fsubr
idiv
fld
cdq
pop
pushf
inc
fnsave
(bad)
std
fadd
fsubr
in
(bad)
push
pop
push
sahf
mov
cs
xor
xor
loope
ss
pushf
push
call
mov
retf
aam
cmp
iret
fwait
inc
adc
cli
inc
xor
pusha
cwde
adc
push
sbb
sub
adc
(bad)
in
in
jmp
(bad)
aas
ss
add
sbb
or
jle
lahf
in
mov
sbb
ins
add
(bad)
push
clc
lea
and
xor
cmp
cs
inc
dec
and
push
xchg
ja
inc
xor
imul
cmp
push
push
gs
scas
test
pop
cmp
add
jp
ficomp
add
cdq
sbb
loope
sub
pushf
xor
jecxz
and
dec
loopne
or
mov
inc
push
loopne
lods
cmps
pop
pop
rol
cmps
mov
sub
add
adc
iret
aad
ins
push
pop
cmps
sbb
ins
jp
fwait
loopne
dec
mov
cmp
pop
pop
clc
xor
dec
(bad)
adc
js
push
cdq
xchg
dec
mov
lods
jle
jge
pop
std
jecxz
cmp
dec
mov
cmp
xor
mov
ret
test
add
je
or
jecxz
sbb
nop
jmp
mov
dec
adc
lods
in
cmp
jp
adc
loopne
aam
cmp
inc
and
pop
call
mov
sub
leave
movs
dec
repnz
sub
cmc
daa
push
(bad)
inc
movs
adc
scas
inc
not
sbb
aaa
daa
xor
das
mov
mov
mov
outs
rcr
sti
add
dec
cwde
in
mov
bound
xor
cmp
or
mov
ret
gs
int
shl
(bad)
in
jle
add
js
stc
leave
fidivr
sti
gs
mov
mov
jmp
cmp
mov
outs
xor
dec
mov
out
jno
cmc
jl
inc
xor
nop
jmp
mov
test
xchg
cwde
jb
movs
gs
fidiv
add
pop
sbb
repnz
push
js
enter
mov
adc
sbb
or
cli
add
ret
mov
sar
jmp
xchg
mov
lods
sti
inc
stos
int
dec
lock
jp
gs
lds
inc
cwde
int
push
cmp
imul
jge
inc
mov
cmps
mov
add
mov
adc
dec
mov
stos
retf
movs
dec
xchg
mov
fistp
retf
push
dec
loop
clc
cmp
rcr
cs
fidivr
xor
out
ja
arpl
push
xchg
and
dec
aaa
jnp
push
(bad)
xor
pushf
mov
test
inc
popf
fldz
out
mov
jl
adc
mov
data16
test
add
sbb
sub
and
adc
inc
test
xchg
cmps
dec
cmc
xor
mov
imul
mov
das
mov
adc
push
mov
or
call
sahf
xor
in
(bad)
push
jno
adc
mov
dec
or
inc
pop
jb
adc
push
push
mov
mov
jb
add
mov
jmp
inc
dec
sahf
lods
stos
inc
xor
outs
lock
rol
pop
push
sbb
and
cwde
xchg
mov
les
xchg
(bad)
jg
mov
mov
imul
or
out
movs
mov
out
mov
pop
sbb
fst
fistp
cmp
std
loop
in
ja
xchg
sbb
or
stos
in
sbb
push
cmp
test
call
or
call
(bad)
inc
pop
aam
(bad)
cmc
(bad)
lods
addr16
clc
fistp
movs
mov
push
(bad)
and
xchg
stos
out
call
lods
lods
or
int3
jb
fcomp
sbb
addr16
fwait
repnz
out
push
push
hlt
lods
sub
jmp
xor
xchg
inc
pop
popa
sti
sub
jmp
xor
out
add
jg
jnp
jb
sbb
fadd
jae
out
daa
push
cs
idiv
xor
cmp
push
add
das
mov
ins
or
cmp
pop
cmp
jmp
lds
xchg
jmp
jl
push
mov
aaa
movs
jno
call
retf
addr16
pop
dec
add
sbb
mov
dec
inc
arpl
push
fisttp
sbb
xchg
outs
cmp
jb
add
xchg
mov
data16
xchg
ret
fmul
jo
stc
leave
jnp
neg
and
inc
and
rcr
cmps
fdivr
or
popf
sub
(bad)
or
pushf
cmps
mov
or
rol
mov
xor
dec
xlat
fcos
sub
lea
add
inc
or
or
add
mov
sub
mov
int
pushf
aas
cmp
xchg
mov
mov
gs
mov
push
add
dec
xchg
mov
dec
inc
add
fwait
cld
fbld
adc
push
pop
into
cwde
call
jb
nop
ror
push
mov
add
cmp
pushf
cmc
stos
mov
and
sub
xlat
pop
aad
loope
cmp
add
cmp
push
xchg
push
adc
adc
push
dec
das
pop
or
(bad)
adc
enter
ja
cmp
push
test
pop
sbb
in
sub
push
or
cs
inc
mov
push
xchg
mov
push
mov
in
mov
movs
jmp
mov
or
pushf
lahf
mov
stos
push
out
(bad)
rcl
jmp
cmp
jge
xchg
sub
or
pop
std
mov
(bad)
jmp
adc
jg
fstp
adc
outs
leave
jg
cmps
pushf
jl
and
and
aam
and
ds
jle
sub
rcl
push
fnsave
enter
js
mov
aas
out
arpl
pop
inc
mov
lds
and
loop
ins
xchg
pop
push
mov
cmp
xchg
mov
jnp
sbb
push
inc
fdivr
add
(bad)
sbb
fsub
mov
into
add
mov
sbb
dec
test
mov
pop
push
(bad)
jmp
ds
hlt
rol
jno
jbe
dec
js
ror
in
inc
xchg
inc
fdivr
jmp
lds
pushf
mov
les
retf
sub
shl
or
push
xchg
jnp
in
mov
mov
mov
push
call
call
or
iret
push
popa
(bad)
mov
dec
xchg
xchg
adc
cs
loop
jno
or
adc
add
dec
data16
dec
ud0
xor
dec
jo
inc
movs
cmp
lea
add
sbb
in
and
out
pop
sbb
dec
in
push
fld
mov
imul
and
sub
fisub
dec
push
aaa
jl
fnstcw
sbb
in
jecxz
pushf
imul
pop
imul
push
mov
or
xchg
sbb
imul
fxch
dec
and
mov
mov
pop
add
xchg
mov
ficom
mov
jbe
mov
push
repnz
and
sbb
or
popa
mov
inc
and
xchg
add
mov
push
pop
xchg
jl
jp
xchg
in
das
fdiv
movd
lahf
xchg
scas
iret
inc
cdq
call
mov
scas
pop
xchg
mov
enter
out
addr16
(bad)
xor
sahf
and
outs
stc
mov
test
cmc
inc
ficomp
xlat
adc
(bad)
dec
push
pusha
xchg
neg
mov
push
cmc
mov
stos
ss
test
pusha
jmp
push
xchg
out
lea
popf
loopne
mov
jae
jmp
jg
add
push
adc
and
jle
imul
push
fcom
inc
push
jns
outs
mov
arpl
cmp
add
jl
in
jmp
push
aam
dec
mov
cld
push
iret
mov
xchg
shl
out
clc
sbb
sub
int
dec
xchg
sub
loope
scas
push
xchg
out
cmp
lea
push
(bad)
icebp
adc
out
sbb
retf
leave
in
jne
loope
cmps
test
cmp
aam
jne
leave
arpl
pminub
out
fstp
xor
lods
adc
repz
xchg
scas
das
or
mov
or
adc
fnsave
iret
or
hlt
in
bswap
add
cmp
ins
enter
adc
pop
or
(bad)
call
cwde
bound
add
fld
mov
fadd
(bad)
adc
rol
and
dec
rcl
aas
dec
push
mov
adc
pop
cmc
mov
loopne
xchg
push
sub
jge
pop
and
push
mov
sbb
inc
jecxz
and
retf
cmp
stc
push
add
xlat
loop
adc
inc
sbb
inc
mov
xor
xchg
cwde
test
stos
ds
mov
stos
jg
cmps
(bad)
stc
repnz
push
adc
loope
jmp
pop
sbb
out
pop
sub
call
mov
jp
adc
pop
mov
and
and
jl
je
dec
dec
jno
mov
push
sub
dec
cmpps
or
mov
inc
rol
push
fldcw
push
sahf
je
mov
jo
push
xchg
shl
idiv
fstp
stc
pop
int
adc
aam
fisttp
add
in
lods
xchg
lods
or
test
jbe
push
mov
mov
pop
add
or
fdiv
mov
mov
mov
or
jae
cmp
test
xor
xor
icebp
cld
adc
daa
bound
mov
adc
jns
add
das
(bad)
(bad)
sbb
ret
xchg
jp
test
mov
fcmovnb
dec
out
retf
cmp
(bad)
out
cmc
stc
dec
adc
or
pop
sub
xchg
adc
pop
addr16
cmps
mov
xor
sub
xor
inc
shl
cld
rcl
push
icebp
ja
inc
iret
loopne
push
cmp
mov
add
and
ins
ret
fld
pop
add
aaa
mov
shl
cmp
jg
or
fild
xor
cmp
fsubr
or
adc
and
mov
dec
je
xor
jmp
mov
and
call
call
lahf
nop
idiv
dec
cmc
add
inc
(bad)
mov
cmp
out
pmaddwd
outs
mov
dec
les
and
mov
retf
(bad)
ficomp
sbb
idiv
push
and
jmp
xlat
pop
cli
addr16
int3
push
fild
movs
dec
mov
mov
adc
pop
out
cmp
adc
adc
pop
cmp
and
xchg
sbb
or
sbb
add
and
add
cmp
aam
pusha
je
or
and
push
add
dec
popa
out
inc
jge
dec
lahf
outs
cmp
pop
mov
or
jnp
sahf
js
inc
rcl
test
mov
dec
push
xchg
sub
in
and
nop
or
sar
add
push
pop
adc
xor
cdq
jns
push
push
adc
mov
repz
ret
cmp
cmp
lahf
leave
hlt
call
pop
(bad)
dec
aaa
scas
iret
xor
mov
xchg
cs
jp
and
jb
mov
nop
xchg
xchg
aas
adc
sbb
out
ins
inc
rcr
xlat
inc
pushf
xor
sub
ret
xchg
pop
mov
ss
xchg
cli
inc
xor
mov
stc
or
xor
lods
loope
(bad)
rcl
bound
or
std
add
xor
xchg
push
or
pushf
movs
lock
xor
mov
in
mov
push
or
pushf
lods
test
or
in
mov
mov
loopne
mov
add
push
cs
pop
cmp
aas
or
je
pop
test
fsubr
sbb
xor
inc
mov
xchg
stos
mov
dec
mov
lahf
mov
mov
xor
repz
outs
inc
push
ss
xor
add
inc
cmp
pop
dec
xlat
(bad)
out
push
(bad)
scas
stos
inc
hlt
cmp
call
adc
jecxz
jb
int3
in
mov
jnp
cmps
in
add
cwde
test
or
les
hlt
pop
movs
push
inc
ds
in
jno
rep
pop
das
add
cmps
and
inc
sbb
(bad)
scas
mov
jae
shl
dec
xchg
dec
repz
jmp
mov
cld
stc
lds
jl
inc
push
lods
out
dec
jne
inc
adc
xor
das
add
mov
mov
inc
push
mov
cs
in
dec
jnp
or
(bad)
mov
mov
retf
repz
frstor
ret
sub
sub
clc
rol
dec
fcom
mov
inc
cmp
cld
push
repnz
or
arpl
jb
or
shl
aas
ins
mov
lods
jns
jl
dec
adc
inc
dec
xchg
xchg
cmp
das
fst
add
out
xor
inc
(bad)
sbb
inc
xor
inc
jnp
addr16
rcl
dec
push
repz
clc
aam
out
loope
iret
mov
fmul
mov
pop
mov
lock
xlat
imul
jmp
mov
outs
cmp
lods
sbb
dec
fdiv
nop
popf
sub
mov
pop
movs
repnz
push
das
je
cmp
mov
inc
mov
push
les
xor
test
int3
push
or
jne
mov
loop
xchg
jb
(bad)
adc
test
gs
sub
dec
mov
jecxz
inc
fsubr
mov
push
clc
mov
inc
retf
push
les
jmp
push
sub
(bad)
pop
imul
mul
xlat
shl
and
sub
cdq
call
pop
je
sub
js
jmp
pop
mov
sbb
mov
sbb
mov
mov
rcr
push
ret
out
sbb
in
xchg
jmp
ret
xchg
iret
fstp
mov
imul
les
mov
jmp
loopne
jnp
mov
mov
push
in
jge
or
js
rol
push
push
add
adc
jns
push
enter
ret
and
pop
out
dec
pop
(bad)
fidiv
enter
inc
fdiv
ds
jge
inc
jbe
in
cld
fidivr
test
mov
cmp
xchg
sub
(bad)
das
dec
mov
nop
outs
pop
sub
popa
mov
popa
add
rcl
ja
xor
sub
mov
sub
jmp
repz
mov
out
push
mov
neg
pop
and
sbb
and
dec
loopne
adc
mov
add
sbb
mov
xchg
inc
push
xchg
hlt
les
test
mov
jnp
mov
je
fistp
out
push
es
cmp
gs
fadd
test
out
test
adc
cmp
cmp
cmp
cmp
mov
adc
push
rol
je
jb
inc
ss
push
xchg
outs
jne
sub
sub
popf
cmp
push
sar
jmp
fucomp
ins
out
jmp
iret
jo
push
push
mov
retf
lods
inc
fwait
ret
in
arpl
fdivp
hlt
add
mov
pop
jp
mov
jle
jg
jne
es
cli
push
push
and
ret
movs
xchg
dec
aas
outs
and
fldenv
cs
and
dec
call
jno
cmps
adc
mov
sbb
adc
mov
inc
sbb
out
and
pop
jp
adc
mov
push
pop
ja
movs
and
data16
dec
mov
inc
push
lods
xlat
push
push
sbb
or
sbb
cmp
lea
mov
or
data16
jle
sub
les
adc
dec
mov
repz
cmp
movs
les
push
loope
xor
xchg
pop
mov
std
push
loopne
add
cdq
cdq
sub
sbb
or
sub
sar
or
call
aas
fs
dec
adc
shl
add
(bad)
popa
inc
popf
gs
adc
jecxz
loopne
fisubr
sub
icebp
pop
xchg
outs
push
retf
loope
cmp
nop
cmp
and
mov
jl
loop
adc
cmp
mov
jp
cmps
out
cmc
ffree
mov
mov
jns
push
dec
adc
jbe
pushf
sbb
push
int3
stos
mov
or
dec
test
lahf
ret
rol
mov
or
imul
sti
mov
les
mov
aam
movs
pop
stos
jno
sub
ficomp
gs
push
movs
repz
into
add
cmp
mov
(bad)
jp
lods
inc
out
sub
xor
addr16
cmp
cmp
int3
jae
and
mov
pushf
pop
adc
sahf
or
aas
aam
jle
sub
and
sbb
std
scas
cmp
test
mov
jp
dec
mov
(bad)
jo
mov
cmps
add
dec
adc
inc
jbe
leave
inc
jmp
cmp
jbe
sub
push
inc
mov
sub
div
jmp
repnz
inc
lea
ret
and
repnz
shl
enter
loop
and
or
sbb
add
pop
cld
iret
xchg
pop
jb
and
or
inc
adc
sbb
scas
jbe
add
stc
mov
loop
(bad)
stos
or
mov
sbb
cmps
idiv
and
or
mov
or
xor
sub
das
mov
fisub
push
out
inc
es
or
or
cs
mov
jmp
test
dec
add
retf
mov
add
pop
data16
aad
mov
pop
setns
dec
cld
mov
stos
jnp
lods
mov
ja
arpl
mov
sbb
and
cmps
(bad)
scas
cli
(bad)
icebp
xchg
in
pop
push
mov
dec
in
in
cli
clc
movs
fistp
shl
inc
jecxz
and
sbb
dec
mov
cli
jmp
jmp
nop
pop
jmp
xor
cmp
test
xor
sbb
dec
jmp
ficomp
iret
je
pop
in
(bad)
cmp
pop
fsub
movs
popa
dec
push
jno
add
rol
mov
lds
jo
out
pop
jg
addr16
lock
cdq
es
push
(bad)
mov
jg
xchg
arpl
icebp
sar
into
push
in
(bad)
sbb
xchg
pop
jge
jno
sbb
jb
sub
sti
cdq
push
push
jge
jl
dec
retf
mov
mov
call
pop
mov
fcomp
stos
jge
call
(bad)
lds
inc
jmp
clc
fsub
sub
xor
sar
sbb
imul
mov
dec
and
data16
sub
jne
mov
mov
xchg
mov
mov
mov
in
and
cmp
pop
add
dec
sbb
jnp
mov
mov
jle
sub
sbb
mov
and
jl
ret
jo
adc
out
popf
mov
and
cs
push
push
or
cmp
xchg
and
les
mov
pop
and
imul
push
dec
sbb
mov
pop
dec
bound
mov
imul
mov
fistp
inc
xor
aas
rcl
inc
sar
dec
dec
out
(bad)
pushf
fld
add
add
or
mov
repz
pop
int
mov
dec
or
das
std
jl
mov
add
repnz
neg
pop
div
arpl
xchg
adc
sar
mov
add
in
in
adc
mov
pop
jecxz
jnp
cmps
pop
lahf
cmp
xchg
stos
inc
scas
fdiv
mov
jl
inc
call
sbb
movs
dec
add
ds
stc
sub
xchg
inc
push
test
sub
push
or
inc
mov
jbe
fs
and
mov
mov
pushf
mov
push
test
pop
mov
shl
outs
push
stc
inc
std
ins
repz
and
dec
scas
rcl
and
sub
lea
push
mov
pop
push
cwde
dec
add
xchg
push
xchg
arpl
sbb
jbe
xchg
stos
out
mov
add
mov
loope
jle
cwde
cmp
mov
add
lds
xor
dec
dec
lods
cmp
cdq
test
dec
das
data16
jb
adc
retf
fcmovnb
dec
lock
sub
jb
aaa
sub
dec
pop
sbb
and
inc
mov
push
idiv
aas
ds
adc
cmc
jg
fiadd
ins
xor
pop
xor
(bad)
fnstcw
pop
xchg
cmps
mov
add
ds
rcl
hlt
in
push
xor
les
stos
clc
cdq
mov
rol
sbb
mov
dec
dec
movs
ror
clc
mov
jb
out
sbb
push
cdq
fnsave
outs
clc
inc
or
and
mov
jecxz
cli
sbb
jg
dec
fdivr
imul
loop
call
mov
or
scas
mov
xchg
iret
xor
(bad)
sahf
test
ret
adc
ins
(bad)
push
enter
add
push
gs
mov
hlt
xchg
rcl
repz
adc
push
jnp
sub
mov
inc
jecxz
jno
mov
dec
dec
test
add
add
cmps
mov
and
xor
mov
or
test
ret
(bad)
cdq
popf
sbb
sbb
test
bound
and
fimul
cmps
xchg
or
scas
js
push
xor
cmp
js
mov
popa
dec
aad
or
cmps
mov
cli
xor
and
mov
mov
rcr
(bad)
div
sar
inc
aaa
fldenv
fnstenv
stos
mov
jno
fdivp
add
(bad)
cdq
sub
cmps
into
dec
jecxz
div
mov
test
cmp
int
ret
loope
loop
pop
loopne
dec
cdq
xor
cli
mov
test
xchg
bound
adc
int
add
es
jmp
lods
ja
mov
popa
mov
popa
push
mov
pop
stos
ror
jb
push
inc
mov
cmp
clc
adc
in
sub
mov
push
in
cmp
enter
call
sub
(bad)
mov
ins
inc
pop
mov
daa
and
fbld
popf
xchg
or
push
bnd
fidivr
jmp
movs
ret
movs
push
cmps
or
jl
in
stos
fwait
daa
inc
inc
ins
cmp
jg
lock
mov
sub
daa
mov
into
cmp
shl
mov
retf
or
xor
xchg
sbb
xchg
or
jae
dec
and
(bad)
retf
mov
call
imul
add
xchg
retf
dec
repnz
outs
nop
int
lock
xor
and
icebp
shl
adc
jnp
lds
stc
dec
sbb
xor
cmp
mov
adc
add
inc
das
or
pusha
push
xchg
int3
mov
fdivr
rcl
leave
xor
popf
inc
sbb
repnz
cmp
std
fisttp
and
dec
mov
cmc
mov
retf
out
dec
std
cld
sti
shl
push
cwde
mov
ret
mov
neg
stc
aaa
mov
pop
shr
xor
movs
sub
sbb
adc
icebp
jmp
jle
xor
aam
ins
icebp
retf
call
dec
sub
push
repnz
nop
in
cmp
push
inc
sub
stos
and
mov
cmp
shr
jno
mov
lods
xchg
pop
jns
push
inc
or
dec
mov
aas
fwait
shl
int
bound
push
aad
cmp
or
dec
adc
add
mov
pop
mov
mov
(bad)
fs
sbb
enter
push
mov
enter
(bad)
outs
fdivr
mov
jl
mov
cmp
and
test
mov
fisttp
jb
ror
int3
aam
inc
xor
out
cwde
clc
jmp
inc
je
dec
pop
outs
adc
stos
call
mov
inc
(bad)
syscall
mov
and
mov
pop
cmc
pop
sar
dec
jno
sbb
es
and
sbb
iret
sti
xor
pop
fnstsw
mov
unpckhps
jl
enter
xchg
jo
dec
dec
pop
out
pop
js
(bad)
(bad)
scas
inc
or
fwait
sub
xchg
dec
rol
arpl
pop
or
or
cli
mov
push
xchg
mov
pop
bnd
inc
out
sbb
mov
push
dec
push
xor
push
(bad)
in
cs
aad
loop
sbb
xor
and
stos
popfw
fldcw
jge
xor
arpl
ret
pop
retf
imul
(bad)
test
loop
dec
scas
imul
out
xor
jp
push
xor
mov
jns
cli
inc
int
call
das
mov
jno
int
jbe
xchg
push
dec
data16
mov
aaa
or
dec
push
shl
cld
lock
not
retf
stos
mov
cmp
dec
(bad)
push
ja
int
jo
sub
adc
push
cmovno
sub
or
cli
gs
jae
jp
adc
cmp
cmp
dec
mov
dec
push
mov
sbb
out
outs
inc
and
lods
add
add
xlat
adc
mov
jmp
rol
lock
xor
js
dec
jne
xchg
repz
dec
fwait
js
stos
sub
add
dec
into
or
mov
sbb
sub
imul
adc
and
add
adc
fnstenv
das
mov
fnsave
push
icebp
jmp
add
pushf
mov
sbb
xchg
fsubr
sub
in
gs
int3
cmp
mov
mov
cmovg
push
mov
sahf
repnz
out
mov
push
sbb
cmp
ret
or
xor
and
mov
(bad)
stos
sub
or
loopne
mov
inc
push
dec
loope
sbb
pslld
dec
jne
add
pop
movs
inc
pop
push
ds
jmp
mov
jnp
shr
add
stc
ins
adc
call
ins
dec
in
sahf
pop
inc
cmp
and
dec
adc
jmp
in
retf
pop
cmp
and
retf
lds
(bad)
mov
pusha
mov
jle
out
push
jp
mov
lods
leave
add
fsubr
das
test
xchg
jp
sbb
int3
pusha
push
lock
ror
push
sub
adc
fs
test
add
iret
pop
dec
push
pop
enter
and
dec
jg
imul
jecxz
test
push
sahf
cli
push
clc
sbb
cs
call
push
shl
pop
xor
sbb
adc
repz
mov
outs
ja
out
jb
(bad)
shl
aas
shl
(bad)
jae
aam
cmp
imul
sbb
stos
ror
xchg
dec
xchg
lea
dec
cmp
jb
test
dec
mov
clc
pop
leave
inc
outs
scas
(bad)
cmps
mov
shr
daa
adc
inc
adc
jge
mov
push
mov
cld
jcxz
sub
fiadd
idiv
xchg
mov
movs
jns
cmps
jae
cli
lea
xor
je
xchg
push
scas
pop
js
cli
sub
and
jb
imul
mov
or
jmp
mov
mov
int3
mov
or
cmp
push
adc
mov
call
mov
adc
out
call
xchg
lods
jb
loop
fisubr
cmps
sub
mov
pop
push
pop
sub
inc
aad
imul
sbb
loopne
pop
neg
mov
push
in
adc
cmps
sbb
adc
loopne
xor
add
aaa
pop
cmp
mov
mov
sbb
inc
ficomp
xchg
fstp
bound
ret
mov
ss
mov
std
out
cdq
add
xchg
mov
test
pop
retf
sbb
fdivr
out
jmp
and
cmp
loop
jecxz
(bad)
mov
fld
inc
(bad)
ss
mov
xchg
adc
cmp
push
mov
call
dec
imul
outs
call
inc
pop
jg
sbb
je
fisub
push
cmp
and
js
cmp
push
test
add
test
adc
ficomp
dec
pusha
mov
push
xchg
push
xor
fs
inc
xchg
push
dec
or
xlat
mov
ins
sar
retf
mov
and
pop
mov
test
retf
mov
mov
inc
push
sub
mov
fiadd
sub
push
ret
out
and
hlt
jnp
or
xor
lea
movs
pop
cmps
les
xor
adc
push
mov
ret
pop
jl
push
ficomp
push
or
dec
mov
scas
mov
mov
sar
jnp
stc
ror
mov
vmwrite
and
push
shl
adc
icebp
mov
or
or
scas
jo
pushf
mov
inc
xchg
jbe
mov
sub
das
xor
and
pop
add
ss
mov
push
aad
popa
jp
and
add
mov
jne
fdiv
jmp
in
jmp
(bad)
mov
sub
sub
popf
adc
retf
dec
repz
cmp
pop
(bad)
jmp
add
out
dec
sar
fdivp
ror
sub
push
sar
imul
jecxz
out
nop
pop
sbb
ja
movs
mov
dec
test
sbb
clc
mov
cmp
fsubr
out
aam
sub
sub
lods
mov
sub
cmps
cmp
cmc
out
mov
cmp
lahf
dec
jmp
push
cmp
call
jge
dec
mov
mov
jmp
push
cmp
pushf
jle
push
jge
outs
xor
or
mov
arpl
stc
xchg
xchg
inc
push
inc
mov
cdq
arpl
jmp
mov
push
ds
cli
or
popa
add
or
jb
jno
mov
inc
and
xor
jnp
lds
jb
int3
mov
or
popa
sbb
sub
push
loope
stc
jmp
retf
scas
sub
or
test
pop
das
jmp
mov
retf
loop
mov
cmp
mov
mov
add
pop
pop
jae
mov
dec
and
ror
pop
mov
sbb
sbb
xor
pop
movs
mov
xchg
xchg
in
ret
scas
sub
sbb
adc
dec
test
call
cli
pop
out
shr
sub
xchg
xchg
fidivr
push
daa
std
add
js
int
pop
dec
or
dec
dec
shl
gs
idiv
xchg
pop
lods
clc
dec
mov
add
dec
mov
mov
lea
pop
jle
test
ficomp
sub
xlat
imul
mov
rol
scas
ficomp
inc
cli
ret
out
fidivr
js
outs
sti
add
out
retf
lahf
jp
mov
sar
cmp
or
push
inc
pop
arpl
call
jl
gs
lock
bound
(bad)
cmp
inc
sahf
(bad)
push
xchg
sub
mov
sub
(bad)
lahf
lods
mul
cmp
push
inc
mov
(bad)
xchg
push
jle
mov
jne
or
xor
pop
pop
int
retf
push
push
jecxz
dec
xor
out
inc
pop
fst
loop
sbb
push
and
inc
out
jne
mov
push
mov
gs
js
in
fs
sub
jno
hlt
xchg
iret
add
je
or
xor
jecxz
mov
clc
jecxz
push
jg
movs
test
stos
retf
shr
jae
mov
retf
and
neg
adc
clc
fist
out
push
fist
call
enter
test
loope
cmp
out
xchg
push
aas
test
sar
sbb
and
sub
loope
or
xor
inc
mov
in
(bad)
or
sbb
xor
inc
pop
je
bnd
leave
jns
sar
or
rcr
in
call
movs
scas
adc
bound
outs
hlt
and
enter
idiv
int3
fstp
das
inc
shr
(bad)
cmc
cmps
ins
xchg
sbb
jecxz
popf
ja
fisub
xchg
cmp
stos
cwde
pop
pop
xlat
scas
inc
pop
das
lahf
fcom
and
nop
push
push
aaa
pop
cmps
out
or
iret
mov
repz
mov
mov
jo
(bad)
cli
ret
std
xor
mov
inc
cli
push
push
pop
adc
in
dec
mov
push
fprem1
(bad)
inc
je
lahf
pop
out
imul
pop
pop
aas
nop
push
sub
das
dec
(bad)
(bad)
call
out
pop
cmps
xor
dec
lods
sub
and
rcr
imul
cmp
jmp
add
sub
(bad)
adc
mov
jb
das
add
cwde
pushf
in
push
and
jbe
rcr
leave
and
or
ins
or
pop
inc
mov
xor
aas
sti
and
cmp
popw
or
enter
mov
cld
or
out
mov
cmps
jmp
(bad)
lock
mov
add
inc
jne
mov
cmps
cmp
mov
leave
fisub
add
mov
inc
daa
pop
fisubr
mov
shl
push
cdq
xor
(bad)
cld
scas
inc
mov
gs
popa
push
pop
repnz
inc
cmps
call
ficom
pop
mov
aad
cs
mov
pop
jmp
mov
dec
add
xchg
mov
inc
hlt
inc
fadd
sub
gs
pop
cwde
sub
adc
add
sbb
sub
movs
daa
jle
and
xor
cdq
jmp
retf
mov
ret
jl
std
xor
out
popf
in
xor
dec
mov
dec
loope
mov
test
mov
ins
frstor
in
add
pop
cwd
arpl
push
jmp
mov
inc
int
ficomp
retf
ror
and
jecxz
cs
ins
leave
cmc
(bad)
mov
cmp
scas
data16
or
xor
sub
push
xor
inc
into
add
push
sub
cmp
scas
xchg
cmps
xchg
or
add
aad
and
popa
adc
(bad)
and
inc
adc
dec
jg
sub
imul
icebp
sbb
add
jae
xchg
push
pop
movs
out
and
and
xchg
add
in
retf
rcr
cs
in
dec
cmps
cmps
pop
test
and
xlat
out
jecxz
pushw
out
cmp
not
cs
dec
stos
stc
push
and
enter
lea
loopne
pop
fwait
pop
sbb
repnz
cmps
cdq
aad
or
and
std
push
dec
in
jae
adc
lock
arpl
dec
lock
mov
mov
retf
mov
dec
ret
push
iret
push
xchg
aam
mov
adc
stos
cmps
mov
sbb
xor
xor
and
das
mov
pop
addr16
cmp
pushf
inc
jmp
inc
stos
aas
and
fist
push
dec
arpl
mov
add
sbb
pop
pop
out
sub
ror
mov
and
inc
mov
mov
mov
sub
adc
cmp
push
and
mov
push
mov
jp
xor
arpl
and
stc
mov
push
sub
xchg
outs
dec
outs
mov
cdq
scas
cmps
sub
test
adc
sub
fnstcw
xor
mov
jmp
adc
movs
retf
cdq
gs
pop
adc
ret
ins
push
int3
ror
fst
xor
push
ins
shl
in
leave
loopne
aas
push
lds
hlt
and
das
lahf
dec
sub
add
inc
je
cmps
push
lods
ficom
repnz
or
push
sub
fidiv
sti
test
xchg
cs
int3
xchg
(bad)
lea
lea
adc
mov
jbe
jge
mov
push
test
jne
mov
je
xchg
imul
mov
in
(bad)
push
xchg
int3
push
retf
out
add
(bad)
jo
adc
jle
daa
xchg
(bad)
ins
xor
js
pop
xor
out
push
mov
xlat
push
clc
ret
mov
out
lahf
jbe
sbb
cmp
jge
xchg
outs
add
mov
and
xchg
stos
pop
lods
icebp
clc
retf
fcmovnb
pop
push
rcr
ret
aad
lds
fmul
aas
int3
adc
inc
lea
call
gs
pop
sar
adc
sbb
inc
loope
loopne
mov
mov
add
cmps
repz
pusha
(bad)
ficom
sbb
(bad)
add
inc
cmc
aad
imul
mov
push
cld
je
mov
mov
fld
jno
mov
data16
sub
cmc
(bad)
mov
(bad)
cdq
inc
xchg
push
sbb
femms
outs
sbb
mov
mov
jl
jmp
(bad)
ror
pop
pop
cmp
and
xor
in
add
mov
push
jle
(bad)
mov
jno
push
int3
nop
inc
mov
or
outs
cmp
fdivr
scas
(bad)
mov
outs
mov
adc
jmp
enter
sbb
pop
push
jns
dec
(bad)
and
fnstsw
sbb
ins
imul
jmp
fadd
add
mov
aam
stc
or
call
shl
mov
imul
ret
push
jecxz
scas
cdq
mov
das
mov
cmp
cmp
iret
mov
aad
push
int
sub
imul
fbld
fistp
xor
into
sar
dec
mov
mov
fistp
or
jns
pop
mov
dec
push
cmp
lahf
pop
rcl
adc
mov
ja
hlt
ror
cwde
pop
mov
xchg
jle
xchg
push
(bad)
or
sbb
inc
inc
sahf
xchg
in
sub
pop
jae
xor
jl
gs
mov
cmp
fstp
out
sbb
out
ret
pop
fsubr
cmp
xchg
pop
mov
mov
sbb
adc
out
inc
jmp
rcl
jno
mov
mov
dec
addr16
jp
imul
stc
dec
fwait
or
inc
in
fld
jne
jb
in
(bad)
outs
clc
or
xchg
dec
nop
mov
pop
imul
sbb
ins
call
push
fisttp
jmp
jbe
xchg
pop
pop
jns
stc
fistp
outs
pop
mov
inc
mov
cmp
mov
mov
jno
dec
mov
ror
adc
lock
jno
dec
cmps
jb
or
add
cmp
add
aaa
fcom
push
jo
adc
inc
data16
out
cmps
mov
(bad)
sar
jne
jbe
xchg
sysexit
push
push
cmp
test
out
enter
add
pop
dec
je
push
cmp
(bad)
sub
xor
xchg
cmc
add
mov
sbb
cwde
loopne
push
test
and
imul
mov
push
loope
test
dec
sti
xchg
xor
shl
out
mov
movs
fsub
loop
mov
jge
hlt
cdq
imul
push
ret
retf
xchg
ror
sar
ds
call
test
leave
and
repz
std
stos
pop
mov
(bad)
popf
xchg
xor
stos
cmp
call
and
mul
shr
inc
retf
stc
dec
clc
enter
sar
imul
inc
mov
pop
scas
pop
xchg
in
xchg
sub
sub
inc
outs
push
fsubr
mov
lahf
repnz
inc
inc
cmp
push
out
les
ficom
scas
loope
xchg
shr
xchg
push
or
je
pop
xlat
and
(bad)
fstp
add
mov
pusha
sbb
mov
and
mov
je
and
adc
xchg
ret
mov
dec
ret
pop
out
out
jecxz
outs
(bad)
pop
sub
cmps
sti
enter
xor
repz
cmc
or
mov
adc
mov
adc
jno
mov
stos
mov
pushf
retf
inc
push
sahf
dec
sub
xchg
cmc
fwait
in
pop
push
dec
mov
fdivr
pop
jl
arpl
hlt
imul
into
push
cld
pushf
fnstcw
pop
push
aaa
scas
sub
add
add
and
cmp
das
adc
call
ja
push
aad
add
mov
cmp
sbb
jo
xlat
xchg
push
push
call
mov
or
inc
retf
(bad)
into
bound
(bad)
aad
sub
jns
fbstp
push
push
adc
adc
outs
sub
mov
ret
inc
mov
jg
fstp
loop
adc
mov
inc
stos
jmp
jmp
xor
sar
out
dec
mov
movs
aaa
jbe
ins
mov
or
push
sbb
inc
inc
push
xor
and
pop
cld
pop
mov
cmp
and
pop
dec
pusha
popa
mov
loopne
mov
arpl
(bad)
and
lock
lock
aaa
sub
cmp
pusha
(bad)
sar
jo
jbe
pop
js
call
jo
jb
push
mov
inc
mov
test
pop
sbb
jae
adc
push
in
pop
ret
pop
or
js
push
inc
and
popa
in
cmps
fld
cmps
lahf
jne
leave
mov
add
cdq
js
add
in
mov
retf
push
in
movs
pop
jp
cli
test
cmp
jge
jp
lds
int
leave
mov
in
add
mov
repz
push
es
jmp
cs
je
jae
ins
jmp
aas
mov
jl
(bad)
lahf
add
leave
in
lea
int3
enter
add
imul
cmp
fcom
popa
cmps
daa
out
(bad)
aad
fdivr
dec
in
es
cmp
ret
ins
pop
jmp
push
inc
jmp
inc
and
and
sti
aam
jbe
dec
mov
(bad)
iret
mov
popa
jae
(bad)
mov
sti
imul
sbb
shl
mov
lds
loopne
push
cmp
mov
cmp
xchg
sub
out
mov
sbb
and
jmp
in
push
popf
js
sbb
sub
sbb
push
jl
push
xchg
cld
(bad)
pop
rcr
lds
xor
mov
das
leave
cdq
xchg
and
cmps
and
and
sub
mov
pop
xchg
and
dec
push
aas
xchg
xchg
add
lds
sbb
in
jge
sbb
xchg
pop
cmp
xor
push
inc
sub
mov
arpl
leave
jb
pop
mov
cmp
int
jmp
std
jo
pop
mov
lds
mov
and
cmps
mov
rol
(bad)
aaa
pop
cmps
mov
or
add
cmp
dec
rol
fmul
cld
mov
push
cmp
cli
inc
stc
cli
jne
push
or
out
mov
call
mov
movs
and
cdq
repnz
jbe
mov
imul
test
sbb
mov
jg
jge
or
jo
xor
imul
scas
mov
cli
loope
dec
(bad)
aas
jns
xor
je
fcom
arpl
add
(bad)
rcl
rol
stc
add
shrd
out
xor
ret
sbb
das
dec
xor
mov
sub
cmp
mov
inc
sbb
inc
ja
mov
js
inc
sub
add
rcl
sar
fcomp
dec
sub
mov
jns
int
adc
xor
cli
lods
jle
inc
mov
xlat
mov
xchg
cmp
add
cs
aam
inc
movs
xor
add
jae
add
inc
pop
aas
add
jg
xchg
pop
scas
push
cmp
scas
mov
std
das
adc
push
xchg
dec
xchg
in
shl
loope
inc
outs
inc
xor
jns
mov
cld
fs
push
in
and
mov
ins
daa
mov
xor
lea
mov
jmp
pop
mov
jle
mov
push
xchg
xchg
mov
mov
test
test
movs
xchg
sbb
inc
(bad)
aad
pop
mov
mov
push
cwde
push
mov
cs
mov
outs
pop
add
mov
stos
sub
popf
or
or
xchg
cld
ins
call
les
mov
push
in
jnp
test
ret
retf
xchg
xchg
pushf
hlt
es
cmp
adc
sub
ins
mov
xor
jle
dec
dec
mov
dec
aas
fisub
sub
loopne
add
pop
pop
inc
stc
pushf
inc
aaa
and
or
jge
dec
push
jo
loopne
or
out
jb
sub
imul
psubd
inc
sub
sub
xor
jne
jmp
mov
lock
call
cs
imul
inc
mov
loopne
sub
jae
jmp
xchg
jno
pop
mov
or
jle
sbb
and
(bad)
hlt
mov
(bad)
arpl
xor
xchg
add
pop
sub
aas
(bad)
and
sbb
retf
xchg
retf
mov
sar
arpl
fst
mov
pop
mov
test
mov
xor
push
xchg
test
pop
xchg
idiv
or
sbb
outs
add
pop
lea
adc
int3
retf
push
mov
sbb
rcr
and
lahf
repnz
call
jne
add
and
mov
cmps
dec
sbb
mov
jnp
push
inc
adc
fnstsw
push
push
rcr
mov
addr16
into
mov
(bad)
icebp
in
mov
mov
cmc
push
mov
cmps
mov
dec
js
inc
xor
inc
ds
arpl
xchg
xor
(bad)
mov
xchg
push
loop
lods
scas
iret
lahf
mov
retf
ficom
shr
or
out
rcl
push
jg
fnsave
popa
icebp
pop
mov
push
outs
push
mov
fs
je
inc
push
push
xchg
shl
push
call
and
inc
fild
ret
loope
and
mov
adc
les
add
or
fild
gs
test
out
shr
clc
and
mov
mov
lahf
popf
mov
(bad)
neg
stos
jg
addr16
pop
mov
sub
rcr
lock
nop
and
cmc
(bad)
test
daa
scas
mov
call
bnd
xchg
xlat
mov
or
inc
mov
call
inc
fmul
push
jle
or
cs
fs
jl
adc
jno
lea
std
pop
adc
in
lahf
pop
pop
jmp
push
std
mov
cld
jno
and
popf
scas
shr
jno
adc
fisttp
sbb
mov
sub
dec
jbe
ret
sub
sub
sahf
sbb
mov
push
outs
jle
xrelease
jo
call
in
push
es
jle
mov
add
mov
mov
pop
and
ret
lds
ja
dec
call
xchg
outs
cmp
cmp
sub
cmp
cdq
add
mov
xchg
mov
push
xor
scas
fisub
jo
push
mov
(bad)
or
inc
mov
enter
mov
push
and
xchg
outs
mov
movs
lahf
jae
dec
cmp
pop
jo
sub
out
cmc
outs
xor
mov
mov
call
cdq
cwde
mov
xor
gs
retf
iret
push
and
sub
dec
popf
stos
xchg
icebp
icebp
fbstp
ins
jne
push
ins
out
mov
or
(bad)
cwde
or
out
out
call
movs
into
adc
sub
jecxz
mov
(bad)
iret
js
inc
cmp
pushfw
ins
add
mov
retf
dec
pop
loop
(bad)
cmps
das
mov
gs
clc
jmp
pop
repz
sti
loop
sub
fst
adc
in
es
js
iret
je
sub
mov
xchg
inc
sbb
pop
adc
stos
sub
or
lock
sub
sti
add
jno
fist
dec
fisub
or
jmp
lds
push
iret
xchg
ret
xor
idiv
ret
stos
sbb
pop
mov
rcl
mov
mov
aas
push
jne
mov
test
fwait
ret
or
jno
cmp
je
rcr
xor
fldenv
jno
imul
mov
and
out
(bad)
jns
add
ret
icebp
pusha
addr16
mov
mov
fnsave
mov
cdq
ret
add
jge
cmp
loopne
and
imul
pop
test
sub
or
mov
lahf
pop
cmp
cmp
call
add
xchg
sbb
loop
jp
sahf
jbe
jmp
inc
iret
stos
es
repnz
lock
xor
sub
jmp
xchg
js
test
in
mov
dec
pop
cs
pop
popa
mov
sub
(bad)
repz
rcr
(bad)
mov
movs
xor
pop
je
out
mov
jg
cdq
add
jns
aad
fisubr
mov
dec
jnp
pop
mov
mov
adc
xchg
jmp
ins
js
jge
adc
xchg
inc
jmp
mov
push
and
pusha
and
cmp
fwait
cli
sti
movs
mov
inc
fs
inc
xor
or
cmp
or
repnz
add
cmps
push
ins
lea
add
jl
push
dec
outs
inc
bound
fstp
add
test
inc
add
movs
shl
and
dec
in
rol
jge
data16
test
test
sbb
daa
ror
push
adc
push
jns
jmp
jns
cmc
int
mov
push
retfw
gs
jb
ret
jo
retf
add
inc
push
arpl
div
fsubr
scas
mov
push
inc
xor
mov
cmc
jbe
sbb
cdq
pushf
dec
dec
outs
movs
lods
stos
iret
test
or
out
stos
shl
push
(bad)
mov
iret
retf
mov
call
adc
mov
mov
repnz
sbb
cmp
lock
cmc
outs
jl
pop
ja
or
or
push
push
xchg
mov
mov
cmc
or
stos
test
and
add
xchg
pop
lods
les
into
sub
and
lahf
sub
inc
mov
add
fs
mov
sub
retf
dec
shl
rol
int
(bad)
dec
xor
mov
stc
cmp
loopne
retf
fnstenv
arpl
sbb
mov
outs
adc
push
aaa
cmp
and
push
dec
mov
leave
dec
jb
cmp
stc
iret
out
jge
test
retf
stc
in
sti
inc
call
cmc
and
mul
mov
pop
jge
mov
cmp
mov
push
movs
and
pop
pop
cld
and
call
and
add
or
adc
(bad)
dec
pop
enter
xlat
mov
cmp
or
call
inc
rcl
or
ss
aas
xor
ret
sbb
pop
mov
scas
fistp
call
mov
cmp
hlt
mov
test
fistp
xchg
push
hlt
scas
pop
and
mov
mov
mov
mov
stos
jbe
test
ret
gs
xlat
outs
movs
inc
mov
jnp
jno
sar
jns
and
mov
xchg
sbb
pop
clc
push
cld
popa
push
enter
push
mov
call
sbb
jne
pushf
nop
inc
mov
pop
sub
mov
jno
xchg
lods
imul
mov
in
sub
lea
pop
adc
rcl
imul
js
out
loop
mov
and
jg
adc
stos
jnp
fwait
inc
add
jnp
xlat
and
pop
and
ss
mov
aas
xchg
repz
jmp
(bad)
jge
ret
sbb
retf
daa
das
xchg
fs
mov
(bad)
sar
xchg
in
imul
scas
jl
mov
adc
mov
push
xor
and
xchg
mov
into
ror
ss
je
xlat
sbb
jmp
test
xchg
das
pop
fs
sti
repnz
sbb
mov
stos
cwde
std
lods
int3
in
pusha
mov
mov
enter
enter
pusha
inc
leave
js
and
mov
push
xlat
push
pop
mov
fucom
gs
and
jns
cs
fisttp
add
stos
fwait
into
mov
or
dec
pop
sahf
out
sahf
sahf
jmp
cmps
iret
(bad)
and
dec
cmp
dec
pop
mov
mov
ja
arpl
pusha
and
pop
(bad)
and
js
sahf
sub
sub
(bad)
lds
mov
xor
cmp
push
push
int3
mov
sub
jg
xchg
mov
dec
sub
test
and
xor
aaa
add
sbb
mov
nop
jmp
dec
cmps
int3
call
cld
dec
mov
mov
xchg
lock
ja
dec
in
mov
mov
or
bound
fs
dec
cwde
adc
test
test
jno
jp
cmp
pop
cmp
mov
push
mov
xchg
and
mov
mov
sbb
xchg
inc
frstor
jmp
sbb
add
int
mov
pop
mov
pop
or
icebp
sbb
out
nop
idiv
xor
ds
sbb
std
mov
loop
cs
movs
stos
jp
jg
sub
pop
sbb
inc
sub
push
mov
or
mov
mov
push
sbb
xor
mov
lock
movs
mov
adc
daa
data16
mov
aaa
in
jecxz
jns
and
ds
push
inc
rol
ret
mov
retf
vrcpps
pop
xor
mov
add
inc
add
aam
ins
push
cmp
imul
mov
stos
jmp
out
or
out
push
shl
ss
dec
inc
mov
fidivr
mov
jae
push
mov
fild
stos
and
jae
and
mov
xor
retf
pop
add
xchg
retf
jo
mov
mov
pop
ins
push
loopne
ret
mov
mov
jo
add
stos
jae
nop
lahf
xchg
and
sbb
pop
lods
faddp
mov
push
(bad)
ror
or
icebp
adc
mov
dec
cmp
dec
xor
inc
nop
(bad)
fbstp
cmp
in
inc
push
inc
movs
movs
stos
pop
outs
adc
or
in
pop
adc
jo
pop
lds
mov
(bad)
jge
fcmovnu
or
fcomp
data16
cmps
in
(bad)
repnz
retf
xchg
adc
sub
daa
jnp
cdq
inc
mov
das
clc
(bad)
fcmovbe
mov
mov
fbld
repz
pop
sub
mov
add
xchg
movs
mov
loopne
bound
adc
pop
mov
fmul
pop
imul
fs
and
sub
mov
fsubr
pop
(bad)
loope
stc
sbb
xor
fistp
into
sbb
or
ret
xor
pop
movs
aaa
pop
jmp
out
out
mov
fcomip
dec
and
lahf
jmp
test
push
pusha
xchg
shr
inc
sbb
addr16
cvtps2pd
mov
and
push
xchg
mov
mov
addr16
fld
leave
push
mov
bswap
mov
sbb
ficomp
ins
mov
mov
stos
lea
dec
das
adc
ret
fs
push
xchg
jno
jb
push
neg
es
jb
push
cmp
std
call
sbb
adc
test
cdq
repnz
into
mov
mov
jecxz
sti
push
inc
adc
xchg
sbb
lods
mov
cmp
jo
jne
int
push
and
dec
sbb
repnz
jnp
shr
lea
lea
jo
jb
cmp
dec
shr
rol
pop
or
fsub
mov
sub
ds
fwait
xlat
and
adc
inc
add
jns
call
arpl
mov
pop
iret
adc
inc
and
push
imul
cmp
add
sti
sbb
add
xchg
fisttp
push
(bad)
mov
ja
xchg
jmp
pushf
lahf
popa
cdq
add
xor
adc
das
loope
mov
fstp
ss
pop
mov
mov
mov
xchg
xor
cmp
sbb
push
mov
(bad)
ja
pop
test
mov
in
aaa
mov
xor
fsubrp
in
xchg
pop
mov
push
mov
retf
mov
jg
mov
cmp
fidiv
cmps
dec
rcl
(bad)
pop
int
sbb
add
jmp
pop
stos
and
fadd
pop
xchg
and
mov
jnp
out
shr
gs
mov
sub
adc
cdq
shr
fst
pop
mov
mov
std
mov
inc
add
xchg
xchg
and
mov
hlt
icebp
xor
aaa
mov
dec
loop
mov
and
xlat
add
into
test
jmp
cwde
mov
dec
test
cs
lods
neg
add
xchg
pop
jge
stos
retf
fs
clc
loope
inc
das
div
cwde
(bad)
sub
jo
test
push
loope
mov
xor
(bad)
rcl
popfw
(bad)
ja
push
je
mov
dec
pop
jl
ja
sbb
jb
xchg
sub
out
pop
js
adc
xchg
(bad)
push
sbb
neg
pop
enter
into
or
lds
mov
xor
xor
pop
xchg
mov
jae
sub
xor
lods
lods
push
cmp
xchg
cmp
and
repnz
call
add
out
sbb
mov
test
mov
(bad)
pop
inc
shl
xchg
cmp
das
mov
mov
dec
loop
mov
mov
cmp
adc
xor
xor
fcmove
or
repz
push
enter
push
data16
shl
adc
and
push
popf
sub
(bad)
jmp
mov
pop
mov
jp
or
lods
sahf
fucomip
std
push
cmp
inc
(bad)
and
outs
xlat
sbb
cmp
or
aad
push
xor
push
adc
aas
pop
fcomp
xor
adc
sti
aad
lods
mov
std
add
test
icebp
mov
frstor
imul
(bad)
push
pop
repnz
push
cmc
xor
sti
xchg
xchg
mov
and
ss
xor
in
xchg
push
cmp
dec
cmps
arpl
mov
rcr
aam
or
fwait
pop
sbb
ficomp
cwde
push
in
repz
imul
sti
jmp
mov
lods
xor
adc
ret
enter
jne
mov
inc
sub
or
push
sbb
inc
sub
pop
ret
cmp
dec
repnz
shl
xchg
fimul
cli
lock
push
ror
push
mov
arpl
leave
aam
mov
lods
das
xor
icebp
xor
mov
dec
mov
in
call
pop
adc
(bad)
push
mov
jmp
mov
pop
dec
retf
cmp
or
rcl
add
xor
inc
pusha
jns
dec
cmp
jmp
sub
add
out
out
repz
add
shrd
ret
ins
fadd
xor
ror
test
push
and
xor
mov
pop
xchg
dec
sar
das
mov
adc
arpl
cmps
ja
jb
push
clc
and
adc
mov
jnp
fs
rol
cs
fadd
or
dec
sub
int
shr
pop
or
jne
inc
sub
lods
pop
popa
sbb
popa
cmps
inc
xor
mov
(bad)
fisubr
mov
dec
pop
aaa
test
add
icebp
add
cmps
push
fbstp
int3
shr
lahf
in
fstp
lods
aad
lods
jbe
iret
xchg
ficomp
fnsave
jno
xor
pop
cmp
inc
inc
or
xlat
xchg
fs
aaa
jne
fdivr
je
sub
lds
sbb
or
fcomip
cmp
fsub
and
mov
gs
lahf
mov
and
dec
mov
sbb
fist
ror
aaa
jno
mov
pop
xchg
and
sub
mov
mul
inc
int3
inc
ret
inc
ins
or
pop
sbb
mov
jmp
pop
mov
sub
mov
pop
int3
xor
xchg
out
enter
xor
xor
sbb
fistp
loop
pop
repz
jne
ret
daa
push
add
fldenv
inc
std
out
and
xchg
jne
sar
movs
xchg
mov
xchg
ja
int3
fldl2t
or
cmp
test
inc
mov
mov
lahf
xchg
pop
mov
mov
and
shl
push
and
xor
outs
enter
sub
pop
push
xchg
sub
test
sub
dec
imul
mov
(bad)
stos
mov
add
enter
cwde
imul
shr
jg
popa
adc
mov
into
add
or
jge
or
cmp
mov
iret
sahf
mov
pop
cwde
pop
push
adc
sbb
call
popa
addr16
push
shl
lock
sbb
cwde
scas
adc
pop
clc
cwde
fwait
dec
mov
adc
add
add
repnz
and
mov
dec
shl
sbb
jnp
xor
std
xchg
bound
fyl2xp1
xor
sub
mov
jge
int
std
jmp
fdiv
adc
xor
ffreep
push
and
jb
xor
sub
mov
jb
fs
jmp
aad
ja
push
cmp
pushf
push
sti
popa
mov
or
cli
stc
xchg
xor
cmp
push
inc
test
pop
sbb
test
ds
cwde
sbb
call
bound
icebp
aad
ja
pop
cli
push
push
mov
xor
cmp
sti
cli
inc
jnp
lea
cmp
ret
mov
test
ins
xchg
mov
xchg
std
jle
inc
and
add
push
xchg
retf
mov
xchg
push
in
jg
mov
or
imul
add
pop
scas
mov
lds
dec
push
les
ja
fcomi
add
jmp
leave
mov
fs
jp
xlat
jae
(bad)
fucom
jle
sbb
adc
popf
inc
xchg
push
test
js
add
mov
lock
fld
in
cld
push
push
xchg
hlt
add
jae
pop
push
dec
pop
push
aas
sar
cmp
das
dec
cmp
cmp
imul
stos
inc
inc
mov
push
jp
idiv
and
lods
retf
mov
jns
or
mov
loope
das
jp
jge
icebp
push
pop
adc
cmp
inc
inc
int3
xlat
xchg
ins
sar
aaa
sti
stos
test
mov
inc
enter
jmp
mov
push
repnz
and
mov
add
fsubr
cmp
popf
xchg
jne
jecxz
mov
dec
out
test
sbb
dec
in
(bad)
fldenv
(bad)
outs
retf
in
xchg
sbb
je
push
and
fldcw
jo
jns
mov
adc
pop
idiv
cmps
ins
jnp
add
test
into
retf
mov
cld
call
xor
mov
lea
(bad)
out
or
fwait
xlat
int3
icebp
hlt
dec
adc
add
pop
into
mov
pop
bound
and
cmp
xor
aad
pop
test
sub
sbb
shl
das
inc
xlat
sbb
loope
jmp
push
popf
leave
or
cs
or
inc
js
pop
adc
jge
mov
mov
test
adc
add
mov
aaa
xchg
call
jae
pop
out
movs
lds
out
pextrw
mov
mov
lea
xchg
xchg
xor
mov
mov
fs
inc
arpl
xchg
xchg
xchg
dec
aaa
or
out
ins
jl
pop
push
jb
sbb
cdq
mov
push
sub
dec
movs
sbb
fiadd
jp
mov
fnstenv
sub
mov
mov
mov
xchg
inc
pushf
dec
popa
jmp
shl
dec
xchg
cs
xchg
fistp
cmp
lock
xor
mov
adc
loopne
fwait
and
xor
sub
mov
fwait
mov
adc
pop
or
cmps
fldenv
push
(bad)
pop
xchg
aaa
pop
pop
in
inc
xchg
sub
dec
int
pop
mov
outs
sbb
sti
enter
mov
pop
iret
adc
pop
test
les
je
or
xchg
stc
cmp
shl
in
pop
stc
and
neg
movs
test
inc
jp
jb
inc
sbb
fiadd
xchg
rcl
inc
pop
mov
mov
adc
mov
jge
add
shl
(bad)
fsubrp
xchg
and
in
xor
mov
cmp
mov
arpl
mov
jns
jge
scas
(bad)
sbb
mov
xor
mov
xchg
in
ja
retf
retf
pop
inc
xor
leave
pop
pop
xor
cmp
adc
or
ret
mov
pop
push
push
and
sub
ret
jmp
outs
sbb
mov
ss
inc
mov
add
hlt
mov
es
ror
and
fstp
or
icebp
push
inc
pop
sub
dec
(bad)
std
ins
daa
cmp
push
jae
rcr
xchg
push
sub
xor
or
mov
in
sbb
stos
fisttp
and
pop
arpl
ror
sbb
mov
push
lods
das
sbb
sti
jbe
sar
xchg
aad
int3
or
sbb
les
lahf
or
push
pop
ins
loopne
ret
jmp
fxch
jbe
je
cmp
into
mov
popa
mov
mov
hlt
movs
cmp
std
sub
add
adc
jmp
addr16
mov
pop
scas
jg
(bad)
and
in
mov
cwde
adc
ss
ret
sub
mov
xchg
dec
iret
xchg
mov
fidiv
push
sbb
mov
dec
stc
jmp
mov
xlat
daa
cmp
jbe
add
les
fst
scas
out
repz
aad
jge
dec
ret
iret
out
cmc
out
dec
xchg
or
inc
fs
xor
mov
sbb
ficomp
cmps
mov
lea
aas
pop
pop
icebp
xchg
add
xchg
ss
or
movs
mov
or
sbb
cld
out
(bad)
jle
ins
push
dec
mov
mov
in
mov
jle
movs
clc
jae
or
push
inc
popa
push
mov
sbb
add
aam
(bad)
int3
fwait
adc
in
adc
fiadd
out
add
in
xchg
cmps
inc
pop
adc
jl
call
out
gs
movs
in
adc
jno
xchg
mov
add
je
fldcw
adc
das
jg
sbb
call
cmp
aam
xchg
ins
cmp
sub
pop
repz
inc
sbb
in
fsub
mov
mov
mov
cmc
movs
mov
xchg
hlt
cmp
jge
(bad)
sbb
sub
ss
dec
lea
jno
pop
push
jns
push
sbb
aas
fmul
sub
sti
cmc
xchg
inc
sbb
stc
retf
cmp
add
mov
(bad)
push
lods
or
push
dec
mov
push
mov
cdq
push
mov
adc
(bad)
or
push
mov
pop
ficom
aad
jmp
test
js
int3
pop
and
pusha
popf
sbb
push
or
mov
ret
or
xchg
out
imul
cmp
jo
push
mov
xchg
cwde
ins
mov
dec
mov
into
xor
push
hlt
and
mov
push
mov
fmul
jns
dec
push
push
iret
or
inc
fdiv
ja
sub
jns
sub
sub
push
popf
mov
call
cmps
pop
mul
sbb
pushf
movs
jb
lahf
(bad)
loope
xor
dec
ds
loop
mov
(bad)
fwait
out
cmps
jmp
xchg
pop
imul
test
inc
xchg
aam
call
test
jl
cmp
jl
loop
(bad)
gs
outs
inc
and
dec
or
cs
arpl
lahf
test
dec
jne
xor
sahf
xor
or
int
cdq
(bad)
mov
sbb
retf
lds
mov
push
cli
or
sti
js
loop
jmp
mov
ret
stc
jae
inc
stc
jns
and
fnsave
in
mov
fadd
mov
scas
lods
rcl
or
in
lods
lods
sub
mov
fcomp
mov
mov
pusha
mov
jl
popf
out
sub
jnp
add
int3
movs
jmp
fdiv
(bad)
in
jns
mov
xor
and
clc
(bad)
das
jecxz
sub
lods
or
sbb
ror
rcl
cmps
(bad)
call
scas
dec
jge
out
hlt
mov
ret
fstp
cmc
test
addr16
out
jmp
fwait
in
or
push
adc
pop
or
imul
cmps
imul
push
mov
mov
xor
pushf
push
cmps
lods
aaa
mov
addr16
sbb
aaa
mov
aas
js
outs
ret
repnz
in
jge
or
imul
add
mov
mov
daa
jo
jmp
dec
mov
ss
mov
add
jp
mov
outs
jg
dec
mov
call
popf
adc
data16
ret
or
pop
int
dec
mov
or
stc
lock
aad
sub
loope
js
pop
jmp
jmp
hlt
pop
jbe
cli
adc
and
es
sahf
test
or
into
cmps
ins
or
int3
popf
pop
jp
out
pop
and
mov
cmp
fisttp
popa
xor
cmp
cmps
xchg
shr
xchg
cmp
sbb
pop
or
push
ror
inc
mov
xchg
mov
inc
and
bound
dec
add
mov
mov
and
lds
stos
pop
push
mov
jno
mov
add
xlat
mov
dec
and
arpl
outs
pop
das
sub
inc
ja
cmp
shl
push
mov
or
adc
fdivrp
fst
push
adc
xchg
(bad)
pop
add
cdq
bound
(bad)
int3
jnp
mov
mov
xchg
jge
dec
call
out
pushf
jb
repnz
or
cmp
sbb
fwait
mov
sbb
repnz
pusha
call
push
jmp
cmp
pop
scas
test
fdiv
aas
inc
in
cmc
mov
pop
stos
or
inc
fsubr
mov
repz
cld
std
jle
pop
mov
icebp
js
sbb
in
div
cmc
bswap
fnsave
push
bound
mov
es
mov
and
dec
stc
sub
or
sahf
lock
movs
inc
daa
xchg
or
aam
xor
xchg
leave
pusha
add
or
adc
or
mov
sub
pop
test
mov
not
data16
sub
iret
xlat
push
jecxz
mov
mov
mov
sbb
in
das
sub
xchg
pop
or
mov
in
sbb
mov
sar
sbb
nop
(bad)
stos
cmp
sbb
cmps
mov
retf
xor
in
fs
xchg
out
xchg
add
fld
jo
lods
jne
push
cmp
loopne
cmp
in
loopne
stc
dec
aas
fneni(8087
xchg
and
hlt
mov
adc
cwde
in
push
and
jp
pop
jmp
and
outs
aaa
inc
xchg
jp
jl
out
retf
sti
loop
aaa
sub
repnz
or
rcr
sar
adc
cmp
cmps
sbb
add
rol
iret
adc
dec
inc
das
aad
jmp
sub
add
repz
push
push
add
aas
mov
rcr
sbb
inc
shl
pop
imul
cmc
pushf
dec
rcr
(bad)
mov
adc
sub
and
movs
sub
mov
(bad)
xchg
scas
inc
or
ja
adc
call
fs
and
mov
je
or
inc
std
mov
inc
repnz
push
(bad)
(bad)
cmp
outs
pop
mov
int
jmp
adc
pop
arpl
cld
test
and
jno
es
cmc
idiv
xchg
ja
stc
push
mov
ja
call
mov
fisub
in
sbb
pop
pop
retf
daa
jo
rcr
dec
add
in
sub
je
in
retf
nop
xor
pop
mov
sbb
sar
cmp
sbb
mov
sub
mul
jo
cmp
les
cmp
ins
mov
pop
jmp
(bad)
mov
adc
idiv
and
les
enter
std
ds
sbb
out
sub
hlt
(bad)
adc
div
gs
cli
dec
ins
jb
gs
fs
xchg
sahf
div
popf
repnz
pop
out
add
pop
scas
and
sub
inc
mov
std
push
add
push
(bad)
jmp
(bad)
lahf
icebp
add
jns
cmps
jb
xchg
cmp
shl
jmp
mov
sub
out
push
push
pop
xchg
push
push
inc
fild
add
xchg
daa
mov
sbb
pusha
xor
push
ja
out
jg
into
jno
jp
xchg
shl
in
xchg
movs
popf
dec
inc
push
adc
sbb
add
and
(bad)
(bad)
jns
popfw
pop
mov
(bad)
fsub
jecxz
push
fisttp
js
cwde
fwait
nop/reserved
and
nop
pop
inc
add
arpl
adc
adc
cmp
imul
add
sub
mov
ror
in
jns
and
push
dec
jmp
int
jg
out
test
sahf
into
xchg
inc
cmp
pop
test
vmovss
push
cmp
rcr
and
(bad)
sbb
mov
popf
in
inc
ret
popf
pop
in
(bad)
cld
mov
mov
mov
outs
pop
scas
imul
out
fldenv
and
pop
pop
lahf
je
dec
mov
test
rcr
mov
push
adc
or
je
ins
stos
jle
push
push
sub
ss
xchg
add
lods
push
js
push
pop
ins
cmps
das
pusha
jp
dec
cdq
adc
pop
dec
inc
or
mov
and
add
imul
pop
in
cmp
cmp
sub
xchg
jno
jns
daa
jbe
push
inc
and
mov
jmp
inc
adc
or
pop
sbb
xchg
addr16
aaa
aas
shr
stos
inc
xor
inc
aas
ja
and
outs
inc
jns
iret
ss
jmp
fstp
cmps
adc
mov
push
loope
sbb
popa
rep
xor
or
mov
push
adc
and
pop
sbb
and
sar
sub
fcomip
xchg
in
add
xchg
leave
or
sub
mov
sbb
ror
and
ror
inc
mov
push
jge
cli
jns
les
push
cmp
stc
fdivr
dec
and
inc
cld
mov
loop
in
out
jmp
into
aam
loope
dec
mov
popa
aas
cmps
int3
add
into
xor
iret
cmp
imul
fadd
jmp
leave
add
xor
xor
xor
mov
out
loopne
jle
pushf
xchg
dec
mov
iret
sti
scas
lahf
hlt
arpl
scas
out
xlat
mov
sub
add
in
dec
push
popf
add
loopne
add
xchg
(bad)
xor
pop
and
mov
arpl
(bad)
movs
pop
mov
test
sub
sbb
mov
test
mov
cmp
aas
mov
cmp
xor
mov
push
pop
adc
shr
retf
jbe
push
fdivr
mov
fistp
or
repnz
add
stos
dec
mov
dec
mov
clc
daa
js
dec
xor
sar
in
sti
test
in
inc
mov
lock
cmc
and
cmp
and
sub
add
sub
imul
pop
adc
mov
inc
movs
mov
jmp
and
xchg
sahf
push
adc
xor
push
popa
mov
(bad)
xor
cmp
cmps
sub
add
mov
into
popf
push
inc
mov
imul
cs
xor
dec
clc
cmps
test
xchg
xchg
pop
jmp
add
imul
aas
test
pushf
pop
enter
dec
loopne
jno
repnz
addr16
(bad)
loope
in
shr
pop
mov
mov
or
pop
das
scas
push
mov
adc
(bad)
pop
mov
inc
sbb
mov
mov
pop
jmp
jns
jmp
push
xor
daa
shr
shl
loope
pop
aad
jg
jge
loope
in
jle
psllq
push
pop
or
leave
mov
call
dec
lods
repz
or
push
xlat
sahf
push
add
and
mov
xchg
popf
cmps
iret
or
sbb
and
mov
inc
xor
and
fsubr
test
popf
push
mov
xor
stos
out
data16
pushf
push
inc
mov
mov
cmp
ret
dec
and
(bad)
retf
xchg
into
push
push
(bad)
fisttp
pop
dec
or
dec
jle
mov
mov
sbb
push
jns
in
push
ins
loop
scas
movs
dec
cld
pop
ret
jbe
push
adc
popf
mov
test
jne
xor
jle
adc
sub
adc
in
das
mov
mov
pop
fisubr
inc
mov
fs
pop
xor
fbstp
ret
mov
mov
and
jp
mov
mov
push
pop
xor
xor
mov
or
jno
rcl
das
adc
data16
add
mov
add
hlt
cld
loope
cmp
fmul
push
cmp
push
jecxz
cmps
scas
adc
mov
es
push
or
pop
lods
sub
gs
imul
stos
scas
imul
test
not
ja
push
fidiv
sbb
js
pop
les
fs
mov
je
add
push
cmp
push
jnp
mov
inc
pop
xchg
xor
inc
push
inc
lahf
xchg
cmp
add
iret
sahf
mov
fisubr
cmp
cmp
sub
shr
cmps
movs
xchg
adc
(bad)
ret
mov
sbb
lods
imul
test
inc
aam
push
jp
push
dec
mov
jae
xchg
ret
mov
out
lods
mov
iret
and
cmp
pop
xchg
clc
inc
inc
scas
stos
pop
(bad)
shr
cmp
mov
scas
(bad)
test
push
fst
mov
cmp
push
mov
jne
mov
push
mov
popf
(bad)
cwde
mov
fwait
leave
imul
lds
add
jo
mov
(bad)
ins
pop
mov
call
dec
fsubrp
pop
mov
lea
(bad)
jge
imul
xlat
add
test
xchg
adc
cmp
rol
inc
pop
fisubr
mov
xor
mov
adc
xor
jns
imul
cdq
mov
hlt
addr16
mov
jo
mov
clc
out
loopne
out
xchg
xor
dec
je
cmp
in
mov
or
lods
sahf
mov
mov
pop
fdivrp
pop
jl
call
adc
je
ror
xor
dec
dec
push
dec
jo
adc
sbb
sub
inc
mov
ja
loope
dec
les
xchg
cmp
int3
or
cwde
mov
fs
in
rcr
test
and
adc
out
adc
add
xor
clc
out
mov
pop
xor
push
sub
mov
sbb
inc
adc
mov
cmp
in
inc
nop
ret
xchg
jmp
dec
test
rcl
cmp
mov
and
stos
and
mov
(bad)
data16
push
push
in
bound
(bad)
adc
jnp
repnz
stos
push
ffree
dec
mov
cmps
ins
jge
sub
lock
mov
mov
fst
hlt
or
or
and
and
sar
lods
icebp
mov
push
(bad)
xchg
mov
push
cmp
jnp
inc
aam
rcr
jne
sbb
mov
pusha
xor
ins
addr16
push
xor
dec
outs
mov
xchg
in
mov
jo
out
jmp
dec
aad
mov
in
cmp
sub
fist
pop
in
in
ret
sub
sub
addr16
call
xor
mov
fisubr
in
mov
inc
mov
add
mov
cmp
pusha
sub
adc
fistp
hlt
pop
xchg
inc
pop
xchg
movs
inc
pop
not
outs
adc
mov
sub
adc
daa
add
add
ins
scas
icebp
fistp
fiadd
ins
sbb
pop
mov
jae
mov
in
dec
push
and
sbb
repz
aaa
lea
jmp
ja
fnsave
in
pop
sbb
in
dec
mov
mov
popf
out
mov
xlat
push
dec
add
fidivr
aad
jo
pop
enter
sub
push
mov
mov
cdq
mov
xor
sub
loop
or
jae
or
or
imul
cmp
sbb
and
cwde
ins
push
dec
dec
lea
sti
pop
aas
cli
imul
sbb
int
mov
jmp
cmp
test
inc
fbstp
ins
ins
addr16
xor
rcl
mov
mov
fistp
cmp
mov
mov
pop
not
addr16
loope
sub
push
jb
ins
mov
adc
shr
xor
shr
xor
xlat
scas
xor
scas
cmps
retf
push
(bad)
iret
into
fild
aaa
jmp
cmp
mov
mov
js
adc
mov
je
pop
sbb
ficom
es
or
pop
int3
dec
inc
sbb
lods
jnp
and
out
imul
ds
and
adc
mov
js
push
jne
ds
es
pop
ret
lods
pop
add
adc
mov
inc
rcl
loopne
(bad)
adc
aad
shl
das
scas
ficomp
cmp
in
xor
sbb
dec
aas
mov
add
retf
daa
jcxz
sbb
or
add
xchg
in
push
pop
das
or
outs
sub
ficom
mov
cmc
push
fwait
mov
leave
and
jnp
hlt
call
xor
xor
push
loope
arpl
test
xor
ja
cmc
mov
in
scas
xchg
(bad)
scas
movs
adc
sub
ins
push
ins
sub
test
aaa
idiv
es
fld
sub
sub
push
int3
mov
sub
test
cmp
pop
mov
push
jnp
out
cmps
sbb
daa
stos
or
mov
jo
int3
inc
push
pop
mov
jg
cdq
pusha
and
mov
pop
mov
in
add
stos
jne
enter
jns
xor
arpl
pop
es
mov
movs
lock
mov
pusha
jnp
push
ret
fiadd
inc
ss
or
int3
mov
rol
dec
mov
out
xchg
loop
push
loope
repnz
out
cmovno
(bad)
mov
push
jae
sbb
das
shr
inc
jp
sbb
arpl
mov
arpl
mov
rcr
cmps
shl
mov
aad
mov
call
add
mov
or
mov
sub
mov
stc
dec
xchg
sbb
lock
pop
push
enter
data16
inc
mov
jns
sar
std
adc
rcl
outs
xor
mov
xchg
in
outs
mov
test
and
jle
sar
sub
ja
dec
inc
les
leave
in
cmp
jns
mov
(bad)
pushf
shl
dec
lahf
cli
mov
out
adc
hlt
aaa
ds
ret
and
mov
outs
fdiv
data16
sbb
iret
loop
icebp
ja
dec
mov
call
psrlq
push
(bad)
sbb
add
cmps
arpl
jno
loopne
out
imul
mov
jl
scas
push
call
cmp
push
imul
push
jp
ins
jmp
or
out
movs
call
imul
imul
cmps
loop
xchg
cli
fcomp
stos
fs
les
and
inc
call
mov
ja
stos
ins
pop
sub
je
push
or
inc
dec
sbb
mov
xchg
xor
jle
push
test
fcomi
xor
jmp
test
pop
sbb
inc
jns
dec
inc
sahf
rcr
fisubr
data16
push
push
push
(bad)
pop
inc
xor
aam
pop
xor
sub
pop
inc
push
and
jg
ret
sbb
sbb
mov
xchg
mov
adc
push
iret
fmul
and
push
sub
in
out
xchg
or
or
sbb
pop
repnz
xor
inc
in
repnz
add
add
sbb
xchg
out
shl
int
xchg
mov
add
je
out
outs
lods
mov
and
fiadd
xchg
sub
stos
rcr
mov
mov
pusha
pop
mov
fld
or
add
js
imul
add
fcmovnu
inc
scas
mov
xchg
mov
sbb
mov
mov
jmp
xchg
xchg
es
pop
dec
jne
sbb
xchg
ret
enter
int3
cwde
xchg
sbb
cdq
cwde
mov
iret
hlt
push
vorps
cs
cli
push
inc
std
xor
les
mov
out
ins
or
jp
mov
xchg
test
pop
bound
push
sahf
mov
iret
cmp
mul
test
outs
outs
lea
stos
jns
cdq
jl
jns
hlt
push
jle
sub
fdivr
jl
nop
mov
add
cmp
sbb
not
adc
fsubrp
xchg
jmp
or
nop
inc
inc
dec
adc
push
and
icebp
push
pop
dec
test
sti
not
xor
pop
outs
cmp
sub
ds
icebp
xlat
cwde
pop
stc
pop
and
cmp
shr
xchg
clc
js
push
dec
ins
in
int
xor
push
cmps
repz
aad
mov
stos
cmp
das
ror
pop
outs
or
aas
and
jp
out
fs
mov
dec
pop
and
xor
dec
outs
xor
nop
icebp
adc
pop
inc
fsub
js
mov
retf
daa
cmp
outs
and
lea
xchg
movs
jmp
out
xor
mov
mov
popfw
cmp
in
mov
repz
ss
add
test
cmp
or
xchg
cmp
pop
out
jb
sbb
mov
jo
(bad)
jmp
pop
mov
push
ror
aas
xchg
nop
std
sti
std
pusha
fadd
jns
or
mov
push
sbb
sbb
in
jmp
mov
retf
jg
dec
adc
add
mov
xor
add
in
xchg
daa
add
lar
nop
mov
adc
xor
adc
xchg
adc
inc
xchg
loop
jnp
and
push
push
retf
push
ret
ins
cmp
div
and
sbb
out
mov
mov
or
dec
and
call
int
int3
cdq
ss
popa
dec
mov
das
std
xor
in
jg
(bad)
std
ret
inc
icebp
jae
push
dec
ret
(bad)
in
pop
jne
jg
(bad)
fcmovnb
mov
(bad)
and
mov
inc
add
pop
int
std
fisub
leave
and
fs
mov
adc
popa
leave
cmp
es
xchg
jb
ret
outs
cld
jle
mov
jle
add
mov
dec
inc
push
ins
shl
iret
loop
sbb
outs
repz
and
mov
mov
cmp
dec
jno
mov
jg
movs
jg
dec
icebp
ficomp
adc
mov
xchg
mov
sub
daa
push
je
lods
int
sub
std
add
xchg
or
imul
add
push
mov
(bad)
icebp
sbb
push
cmp
sahf
ss
adc
je
add
jbe
sub
mov
xchg
out
mov
out
in
pop
scas
scas
dec
sub
sar
ins
adc
ret
nop
in
cdq
mov
(bad)
fisubr
push
jp
xor
or
pop
inc
add
(bad)
jmp
add
sbb
shl
jbe
mov
ror
push
daa
and
pushf
sbb
movs
aad
mov
sub
mov
and
push
std
push
push
mov
mov
out
fnstenv
xchg
cld
das
out
mov
mov
es
pcmpeqd
mov
cmp
xlat
jp
aaa
movs
push
jge
sbb
jno
out
aad
lahf
pop
std
sub
mov
mov
mov
sub
adc
imul
psubusw
dec
pusha
pop
jmp
pop
aaa
mov
lahf
mov
xor
(bad)
test
adc
clc
aaa
and
mov
fwait
ins
lods
xchg
lods
fwait
inc
mov
ret
inc
icebp
aas
rol
ficomp
mov
ret
pop
movs
repnz
ins
jge
mov
adc
pop
call
or
push
das
in
mov
call
cmp
fucomp
mov
ss
cmp
push
or
mov
push
retf
mov
add
or
push
xor
shl
or
inc
gs
loop
scas
mov
aam
(bad)
jnp
xchg
cmp
ret
js
push
lods
fstp
cmps
sahf
mov
mov
mov
xchg
cmc
add
and
inc
not
or
int3
lahf
lock
mov
imul
pusha
cs
shr
pop
fcmovnb
push
iret
or
jl
jne
jecxz
je
mov
hlt
dec
add
pop
pop
cmc
fist
in
pop
sub
mov
dec
mov
sbb
adc
xchg
inc
add
inc
xor
dec
hlt
stc
xchg
adc
std
fdiv
mov
test
sbb
dec
je
ret
les
pop
ss
or
push
xor
jne
ds
push
and
shr
int3
adc
sahf
push
fisttp
aam
sub
call
pop
shl
sbb
mov
outs
rol
cs
jne
cmp
fcomp
cdq
push
lock
add
clc
pop
jno
or
into
push
(bad)
adc
scas
mov
mov
or
cmp
mov
adc
imul
pop
(bad)
jp
xor
jecxz
icebp
js
dec
cmp
mov
or
imul
push
adc
icebp
mov
sbb
dec
xchg
mov
push
xor
fisub
scas
cmc
(bad)
aad
pop
in
sahf
adc
dec
sahf
adc
dec
outs
cdq
push
dec
push
xor
ffree
ins
clc
xor
and
jmp
cmp
pop
stos
jae
test
fisttp
cmp
pop
xchg
fcom
add
add
xchg
jmp
inc
scas
dec
scas
xor
inc
adc
bound
(bad)
mov
in
push
in
jbe
rol
fsubr
test
and
inc
repnz
mov
pop
jp
gs
dec
loope
sahf
inc
stos
cmp
aas
xor
cmc
xchg
xchg
std
stc
repnz
inc
(bad)
popa
add
inc
sub
adc
inc
sbb
fucomp
mov
mov
sub
shl
add
arpl
clc
das
inc
jo
movs
rcl
gs
sar
mov
dec
cwde
clc
jle
adc
retf
sbb
push
sub
ins
cs
jmp
adc
daa
jno
scas
mov
(bad)
mov
mov
inc
jecxz
cwde
inc
ja
xlat
mov
retf
cmp
es
sub
mov
daa
and
add
pop
add
inc
std
sahf
fs
and
pusha
mov
(bad)
neg
jae
xchg
add
int3
stos
(bad)
bound
xchg
xchg
xchg
push
push
test
sub
aas
jae
out
ficom
inc
out
imul
xchg
or
addr16
scas
xchg
sub
and
movs
jl
add
stos
or
aad
and
xchg
ss
xor
rcl
pop
sbb
rcl
adc
jns
jecxz
or
jmp
cwde
mov
aam
in
push
popa
ja
pop
add
lea
add
ins
add
mov
hlt
add
push
or
sbb
and
cmp
cmps
shl
mov
sub
xor
jns
fs
mov
push
sbb
into
or
data16
out
inc
pusha
int
sbb
leave
and
ret
pop
xchg
gs
cmp
pop
add
inc
enter
dec
mov
mov
test
push
retf
mov
and
jecxz
ss
xor
xor
xor
xchg
dec
jg
push
fdivr
adc
push
mov
pop
call
adc
aad
ds
pop
jae
and
push
push
mov
mov
mov
aam
fsubr
inc
mov
xor
jno
(bad)
push
int
mov
out
out
call
pop
jns
xor
push
dec
test
data16
jb
xor
xchg
fiadd
jb
mov
mov
add
push
mov
mov
dec
icebp
arpl
dec
mov
cmp
fsin
xchg
cld
jmp
sahf
daa
hlt
push
cdq
aad
and
sub
imul
adc
test
shr
pop
test
popa
and
cdq
xor
sbb
add
ss
inc
mov
adc
jae
and
mov
int3
mov
or
enter
lahf
xchg
pop
cmp
adc
int3
aas
add
mov
sub
ins
sbb
pop
sub
mov
push
mov
jg
sub
push
sub
mov
jno
jns
mov
jg
cmps
sti
jmp
sbb
jb
std
push
int
ret
pop
nop
push
loope
mov
mov
mov
inc
fucom
sub
sub
or
push
pop
mov
lods
sbb
add
xrelease
fdiv
or
adc
sbb
shl
cmp
popf
xor
mov
inc
fldcw
adc
xchg
and
sub
mov
nop
hlt
adc
div
(bad)
mov
jmp
cmps
in
dec
pop
mov
enter
fbstp
rcr
or
fdivr
inc
or
cmp
mov
push
add
push
inc
call
mov
jmp
push
stos
xchg
push
and
cmp
fisttp
ja
jo
jns
cwde
dec
pop
js
add
shl
mov
pop
outs
imul
das
push
adc
pop
mov
(bad)
adc
shr
push
fcomp
sub
retf
shl
fidivr
push
rcr
ja
shr
cwde
cmp
mov
lds
in
(bad)
cdq
pop
xchg
jo
fwait
ins
ss
imul
jle
fs
push
call
xchg
mov
pop
or
push
mov
repnz
xor
mov
imul
xor
sub
dec
pop
stos
mov
mov
mov
bound
add
mov
push
xchg
pop
aam
mov
call
fiadd
sbb
lahf
xor
addr16
add
cs
sub
popf
mov
jecxz
add
pop
jmp
sub
adc
push
dec
jb
xchg
sub
out
imul
sahf
les
inc
mov
in
sub
gs
mov
fdiv
dec
out
mov
adc
movs
shl
jl
and
in
add
mov
push
add
and
in
push
movs
pusha
test
xor
inc
mov
test
int3
je
dec
dec
loope
lods
hlt
pop
aam
cmp
fsubr
arpl
mov
outs
dec
cld
push
int
dec
xchg
sub
jnp
dec
sahf
(bad)
dec
mov
or
cmp
pop
retf
popa
fwait
add
mov
push
leave
jecxz
mov
jb
int
retf
sbb
nop
(bad)
arpl
std
mov
and
push
ss
imul
out
push
push
rol
test
in
and
xchg
and
push
scas
neg
arpl
fs
aaa
retf
ror
fwait
add
dec
scas
shr
cld
add
retf
(bad)
pop
xchg
jae
cmps
cmc
dec
jno
pop
aam
popa
cmp
pop
mov
inc
mov
movs
mov
push
cmp
sub
pop
sub
mov
sbb
push
inc
lea
mov
(bad)
aaa
xchg
popa
push
movq
pop
sbb
pop
scas
or
mov
sub
mov
jnp
shr
xchg
push
pop
out
dec
or
adc
cdq
and
fsub
call
jl
mov
js
aam
sbb
lock
or
inc
in
je
push
frstor
and
pop
dec
fcomp
jmp
xchg
dec
mov
stc
dec
stos
push
mov
cwde
(bad)
lea
rol
xchg
stos
sub
(bad)
ja
jnp
out
and
outs
and
inc
push
lock
jns
or
inc
adc
pusha
aad
scas
mov
dec
movs
jnp
arpl
mov
repz
cmp
xor
shr
cli
adc
push
adc
sub
xchg
mov
retf
ja
in
movs
in
ficomp
inc
inc
sub
jno
pop
xchg
fs
daa
aaa
int3
xchg
jns
fnsave
movs
jle
rcr
es
mov
add
sbb
fwait
out
nop
mov
es
inc
mov
or
sub
fisttp
xchg
dec
jp
adc
push
cmp
jl
imul
vxorpd
(bad)
sub
inc
es
pop
and
pop
mov
loope
nop
dec
fadd
fmul
cmp
jl
stc
mov
je
push
daa
and
scas
test
push
push
or
jbe
scas
xchg
sub
and
jg
(bad)
cli
js
jnp
adc
ror
or
ins
les
stos
popf
and
movs
push
jp
jo
lods
pop
pop
push
push
mov
add
mov
rol
lds
jb
cmp
sub
sbb
push
mov
add
push
rol
retf
push
mov
sub
mov
xchg
jmp
push
adc
(bad)
sbb
mov
mov
jl
aam
test
fmul
or
div
push
push
enter
clc
(bad)
cmp
jl
jge
push
(bad)
mov
mov
pop
jge
aaa
aad
daa
push
mov
jo
mov
inc
out
sub
icebp
arpl
xchg
cmp
adc
jecxz
dec
fisttp
out
dec
imul
sbb
fstp
loop
iret
in
or
lock
mov
adc
jae
xor
xor
jno
ins
mov
push
mov
cmc
push
jne
js
retf
dec
and
push
loop
iret
popa
daa
cwde
pop
inc
aas
cmp
dec
repnz
push
mov
and
jg
aam
das
test
loope
push
in
inc
mov
mov
in
out
add
sub
add
add
adc
test
mov
repnz
mov
mov
lods
mov
sbb
pop
mov
sbb
movs
jnp
aaa
dec
jnp
imul
mov
mov
fidiv
cld
call
mov
aad
adc
add
mov
xchg
repz
or
cmp
jecxz
mov
scas
iret
mov
(bad)
jns
outs
js
stos
(bad)
addr16
sub
mov
mov
test
call
inc
dec
(bad)
aas
rcr
(bad)
pop
dec
sub
inc
xchg
push
sub
xor
or
or
ins
ret
add
dec
ret
jae
leave
lods
mov
ins
add
leave
(bad)
pop
js
out
test
and
es
fisttp
mov
push
push
pop
jg
call
lods
sti
fidivr
push
fwait
sub
rol
aaa
sbb
mov
dec
aas
xchg
sahf
sub
push
inc
loop
daa
jg
pop
xor
pop
cmp
sahf
or
mov
jmp
mov
jno
dec
data16
mov
faddp
repnz
mov
popf
cmc
xor
jge
dec
ror
and
and
or
mov
cmovo
push
inc
mov
imul
push
es
ds
gs
daa
fwait
sbb
cmp
jne
add
push
stc
call
test
iret
movs
or
jns
out
jb
pop
aam
in
mov
adc
mov
cmp
mov
retf
mov
nop
pop
dec
xchg
adc
movs
div
into
push
pop
mov
mov
and
(bad)
xchg
dec
out
sub
add
cli
sahf
jbe
mov
pop
outs
imul
int
mov
clc
clc
dec
adc
mov
adc
push
out
mov
aad
ret
leave
fisubr
stos
and
call
ror
fstp
add
mov
push
dec
faddp
jle
add
call
push
pop
or
(bad)
in
sbb
sbb
lods
bound
add
repnz
in
inc
movs
jne
popa
fwait
loope
pop
ja
sub
inc
cmp
(bad)
adc
ret
jnp
into
sbb
(bad)
push
cs
fidivr
sbb
add
fsubr
add
aaa
arpl
pop
push
xchg
packuswb
and
adc
dec
(bad)
and
movs
nop
aad
stc
mov
add
push
arpl
push
sbb
dec
ins
pop
pop
jo
cmps
fcom
sub
cmp
push
pop
lods
ja
iret
jmp
cmc
stc
int3
cs
jne
xchg
push
sbb
push
dec
addr16
outs
inc
pop
div
sub
mov
jnp
(bad)
mov
add
lock
sbb
pop
aaa
sahf
xchg
movs
addr16
xchg
dec
cdq
mov
lahf
pop
(bad)
jle
pop
or
inc
cmp
dec
leave
in
add
repz
mov
dec
mov
loope
pop
push
rcr
mov
xor
mov
imul
sbb
test
add
add
inc
fstp
test
inc
movs
ss
or
inc
into
add
aad
or
pop
fbld
das
or
cli
mov
jnp
pop
push
sub
or
jmp
into
pop
xchg
dec
cmps
push
xor
sub
(bad)
(bad)
pop
scas
in
and
test
les
ins
lds
fild
and
mov
inc
xchg
push
and
mov
sub
inc
adc
cmps
pushf
pop
and
data16
mov
jno
cmp
dec
or
fwait
pushf
mov
mov
inc
ret
mov
call
jl
clc
add
pushf
dec
inc
ja
push
jne
adc
jecxz
scas
loope
or
mov
mov
movs
in
sbb
sub
jmp
in
and
mov
jno
bound
mov
mov
push
lock
xchg
add
sub
adc
inc
test
test
shl
sti
jae
cmps
fisub
arpl
adc
jge
lods
pusha
out
out
clc
xor
mov
jnp
and
xchg
mov
fs
sbb
outs
sub
(bad)
(bad)
jmp
mov
mov
xor
addr16
dec
imul
scas
push
inc
imul
mov
jmp
cmp
sbb
xor
test
fadd
cmps
sub
retf
fisubr
push
or
mov
test
sub
aam
cmp
xlat
pop
inc
pop
pusha
jbe
(bad)
cmp
fisttp
mov
dec
int3
cmp
inc
or
sub
jne
in
iret
add
add
push
push
movs
cmps
ds
movs
in
pop
into
xor
pop
test
jne
sbb
popf
mov
ret
mov
and
dec
cmp
ret
out
push
int
mov
mov
sidtd
jns
test
pop
pop
cli
pusha
jmp
sub
dec
data16
adc
fisub
(bad)
fisubr
dec
or
shl
cmps
shl
ret
inc
clc
mov
jne
test
mov
clc
ret
lods
push
mov
neg
repz
call
or
mov
or
arpl
cmp
mov
push
adc
add
adc
test
in
mov
jnp
popa
leave
sbb
xchg
sbb
inc
inc
jle
ret
adc
fstp
outs
adc
imul
imul
mov
inc
shl
movs
xchg
in
push
ins
pop
out
sbb
jp
mov
add
xor
div
or
mov
es
pcmpgtb
adc
jl
add
ins
mov
cmps
test
mov
mov
test
mov
push
xchg
inc
sbb
pusha
and
adc
cmp
push
inc
sbb
leave
jno
sbb
jg
cmp
sbb
iret
sub
jns
call
ret
sbb
cmp
pushf
mov
pop
fcom
xchg
mov
dec
jb
(bad)
shr
or
mov
cmps
out
(bad)
fist
inc
(bad)
popa
sub
inc
xchg
or
call
cmp
(bad)
and
ins
mov
or
cmp
sti
push
fstp
pop
sbb
fst
(bad)
push
addr16
je
cld
cmps
or
push
jmp
jg
push
xchg
dec
pop
les
xchg
int3
lahf
test
cs
pop
dec
xor
stc
or
cmp
cmp
push
cli
mov
aas
pop
inc
sbb
je
xor
repnz
out
out
dec
cdq
call
jle
test
pop
cmp
sub
loope
cmp
sub
fiadd
or
dec
adc
ret
push
mov
test
adc
push
mov
push
mov
mov
mov
aam
mov
xchg
imul
das
sbb
jl
or
mov
repz
mov
pop
adc
ins
lds
inc
gs
es
(bad)
and
and
fwait
inc
sub
sub
aam
adc
cmp
inc
addr16
es
(bad)
inc
pop
jp
outs
jle
xor
mov
sbb
ret
(bad)
ins
push
adc
pop
dec
push
adc
mov
mov
adc
or
cmps
inc
js
rol
scas
sbb
mov
cli
jbe
das
std
adc
mov
mov
mov
push
(bad)
scas
mov
in
mov
bound
push
xor
xchg
ins
mov
xchg
fdiv
mov
xor
xor
in
jns
xchg
retf
cmp
jmp
stos
dec
inc
or
inc
push
popf
imul
outs
jmp
mov
das
pop
into
out
dec
and
fldenv
push
dec
pop
mov
rol
and
mov
sbb
outs
ins
xor
fistp
jmp
pop
loope
mov
inc
inc
cmp
test
sbb
inc
test
movs
xchg
cdq
or
in
retf
sub
push
sbb
bnd
mov
jo
inc
adc
lock
aaa
dec
add
dec
ds
pop
outs
push
push
(bad)
clc
aaa
inc
fdiv
dec
mov
enter
ja
test
inc
mov
scas
mov
fstp
mov
cmc
sub
cmc
or
movs
mov
(bad)
popf
(bad)
jg
jo
xor
test
fmul
movs
fadd
pop
or
adc
adc
and
fucomi
cld
push
inc
in
sub
xor
stc
movsx
inc
fs
(bad)
loop
mov
std
lea
outs
push
cdq
out
les
mov
test
outs
popf
push
pop
ficomp
mov
call
cmp
sub
ds
add
add
pop
adc
ret
sar
xchg
into
push
in
xor
adc
les
frstor
mov
std
gs
inc
and
shl
sti
sahf
adc
and
pop
jns
or
in
cwde
add
ins
stos
sbb
push
fist
repz
scas
lfs
fistp
mov
not
cwde
addr16
or
rcr
lahf
popa
xlat
add
sub
aas
dec
(bad)
stos
pop
add
cmps
adc
xor
aam
mov
mov
push
fst
ret
pushf
sbb
and
or
or
adc
out
out
shr
stos
clc
sahf
popa
call
mov
mov
add
push
or
ins
sub
adc
inc
dec
inc
add
inc
aas
xchg
xor
nop
pop
sbb
or
add
cwde
mov
fwait
sub
cmp
xchg
sub
or
movs
adc
or
mov
pop
jge
sub
dec
cmp
sub
cwde
out
or
add
mov
jb
push
or
daa
mov
inc
jmp
lock
sbb
inc
push
push
push
xor
repz
push
call
ror
movs
inc
fnsave
pop
mov
stos
jmp
imul
adc
(bad)
popa
jmp
pop
and
push
xlat
jmp
mov
xchg
arpl
xchg
pop
ja
mov
fisubr
shl
aam
add
dec
add
std
mov
pop
cmp
jle
test
shl
jle
das
cdq
push
sbb
xor
in
jle
sub
scas
(bad)
repz
xor
clc
pop
movs
pop
lock
sahf
cli
dec
out
icebp
clc
and
dec
inc
loopne
in
sub
inc
sub
ins
int
inc
shr
push
sub
dec
pushf
add
je
xchg
and
xchg
arpl
xor
bound
inc
fwait
xor
pop
fnstsw
fwait
cmps
aam
push
or
jb
stos
pop
inc
repz
cmps
test
pop
sbb
fild
pop
sub
icebp
push
shr
cmc
or
adc
loope
(bad)
movs
dec
inc
push
js
pop
ds
jb
pop
jmp
lahf
mov
mov
aam
sbb
aaa
pushf
mov
mov
ds
mov
jns
inc
inc
adc
push
ja
sbb
push
cmp
movs
push
mov
repnz
scas
pop
add
cmps
(bad)
aam
pop
je
fist
or
mov
loope
push
and
in
ss
outs
inc
(bad)
(bad)
ret
shl
dec
xchg
push
sbb
fsub
jle
popf
jmp
neg
shl
add
iret
test
add
jnp
adc
push
xchg
push
movs
mov
repnz
xor
cmp
adc
sbb
jle
ss
call
mov
ror
sar
xchg
das
outs
inc
arpl
mov
jo
mov
div
std
add
and
cli
xchg
test
(bad)
ins
test
add
or
cmp
(bad)
mov
dec
jb
enter
pusha
pop
jge
inc
shr
into
or
ja
lds
pop
add
dec
cmp
lods
mov
push
jne
push
and
inc
dec
xchg
into
push
dec
(bad)
mov
mov
rcl
xor
or
loop
adc
dec
jb
mov
xchg
pop
mov
repnz
rol
mov
int
mov
fst
call
out
ins
lds
data16
test
lahf
xchg
adc
add
(bad)
mov
push
push
xor
jne
ja
shr
push
pop
in
dec
pop
sbb
in
inc
in
(bad)
dec
xor
jmp
push
pop
cli
jecxz
xor
mov
xor
sub
fwait
cmp
adc
jl
jl
jne
inc
xor
ror
push
and
es
popf
ss
sub
(bad)
mov
gs
push
dec
add
call
jl
outs
icebp
or
test
or
popa
jnp
call
dec
jmp
(bad)
mov
imul
push
call
mul
std
or
sub
xor
and
mov
or
stos
ret
jb
cwde
xor
shl
aam
sbb
aas
sbb
xchg
dec
mov
pushf
and
xchg
call
cmp
pop
or
mov
mov
ss
sti
in
pushw
cs
dec
fldenv
mov
or
imul
push
sti
jns
jg
retw
pop
ss
int
xlat
mov
fs
sub
push
fcmovu
jno
daa
cmp
retf
xchg
add
jmp
push
icebp
mov
icebp
jmp
sbb
pop
xchg
es
jecxz
bound
xor
push
mul
neg
lods
mov
xchg
xchg
mov
fwait
(bad)
retf
add
stos
mov
enter
hlt
icebp
mov
xor
mov
pusha
or
xchg
shr
or
mov
(bad)
sti
fadd
scas
inc
lock
daa
ja
mov
mov
dec
bound
out
fucom
push
push
imul
inc
out
addr16
bnd
movs
in
call
mov
scas
mov
popf
lea
enter
aad
mov
xchg
ja
and
out
(bad)
jmp
push
or
xchg
add
loop
into
loope
loop
test
packuswb
mov
cmp
mov
inc
int3
popa
dec
xor
cdq
and
and
fadd
adc
jg
rcl
in
arpl
mov
shl
hlt
stos
mov
pop
aaa
mov
and
pop
lods
dec
or
jmp
(bad)
loope
outs
int
cs
test
mov
xor
dec
loop
stc
or
mov
movs
out
add
mov
popf
ja
mov
xchg
ds
aam
sub
sbb
test
shl
aas
into
arpl
repz
sub
push
or
movs
int3
gs
sbb
add
and
int3
ret
adc
pop
sbb
inc
mov
cmp
mov
jno
jo
movs
ds
jb
mov
rol
push
pop
stc
js
fsubr
test
icebp
push
iret
xchg
call
and
loop
pop
cmps
xor
stos
add
aaa
loope
cmp
lods
and
push
mov
push
inc
out
push
lea
scas
inc
cwde
add
push
xchg
add
sbb
inc
mov
push
xor
mov
pop
cmp
adc
(bad)
pop
mov
int3
add
cli
fcomp
cmp
dec
mov
cs
cmp
call
rcr
(bad)
push
or
push
jle
pop
push
jg
mov
(bad)
jl
test
pop
add
ss
mov
sbb
adc
push
xchg
xchg
dec
(bad)
jae
mov
and
(bad)
je
or
pop
cmp
icebp
xchg
inc
dec
mov
dec
fsub
icebp
push
mov
and
and
scas
or
fidiv
imul
sbb
mov
push
lahf
pop
dec
ror
mov
sub
fsubr
or
sub
mov
mov
pop
push
push
test
mov
sbb
push
add
mov
jnp
push
xchg
scas
addr16
sbb
or
jbe
xor
jno
mov
retf
fidivr
dec
lods
loope
sti
lods
call
xor
mov
mov
dec
push
xor
out
js
pop
popf
fcmovbe
dec
mov
outs
scas
dec
dec
ds
push
jmp
sub
enter
lods
clc
repnz
scas
repnz
inc
push
mov
test
dec
aas
and
add
jno
pop
fcmovnbe
inc
xchg
aam
and
push
popf
dec
jl
mov
xor
pop
lods
fstp
or
popa
mov
xchg
mov
in
push
jae
jmp
sbb
std
xor
jmp
sbb
pop
cs
lock
not
sbb
sub
adc
mov
out
rcr
dec
test
jg
cmp
mov
not
xor
loope
enter
inc
int
sbb
fwait
loop
push
shl
sub
xor
ror
inc
pop
cmp
dec
cmps
mov
mov
js
test
in
pop
mov
mov
scas
add
xchg
jge
movs
cmp
dec
jl
push
ret
sbb
mov
and
cmp
je
mov
sbb
leave
lahf
int3
push
xchg
cmc
pop
shl
int3
or
lea
sub
repnz
push
mov
dec
jno
push
rep
aas
scas
les
sbb
jbe
push
push
dec
sti
leave
div
cmp
lods
mov
mov
jg
inc
cmp
jne
mov
sbb
js
jmp
bound
add
cs
sub
dec
jg
mov
arpl
add
clc
jg
cmp
js
dec
pop
inc
mov
mov
int
popf
iret
xchg
jecxz
popa
daa
inc
in
cli
mov
adc
push
loopne
je
jns
(bad)
out
push
pop
cmp
jne
cli
cli
and
xchg
and
call
adc
(bad)
and
jecxz
out
mov
ret
sbb
adc
je
pushf
addr16
rol
or
pop
sbb
es
push
rol
push
dec
sbb
scas
pushf
in
dec
add
movs
inc
not
or
cmp
arpl
adc
and
xchg
in
dec
mov
sub
mov
dec
or
sub
pop
into
add
xchg
pop
xchg
test
jmp
addr16
pusha
cmc
test
enter
cmps
fidivr
arpl
jae
push
je
sbb
mov
(bad)
sub
int
ins
sbb
push
aam
mov
jmp
cs
ret
mov
aas
cmp
push
pop
mov
js
xchg
dec
(bad)
(bad)
mov
(bad)
adc
inc
jl
aad
jge
xor
icebp
xchg
cmp
scas
xchg
xor
mov
enter
(bad)
xor
outs
or
fimul
scas
pusha
mov
and
xchg
or
add
xchg
movs
pop
ret
addr16
xchg
pop
jle
(bad)
push
dec
aad
rcl
mov
push
iret
out
fcmovne
mov
popa
or
or
jb
dec
push
(bad)
mov
ret
xor
pop
arpl
sub
adc
or
and
sbb
pop
je
popf
shl
push
in
stos
xor
fadd
or
pop
jl
test
addr16
mov
int
cld
xchg
push
dec
sahf
push
sbb
into
int3
ret
add
mov
lds
dec
ror
mov
push
fsub
adc
loopne
adc
jne
inc
loop
xchg
out
xchg
call
scas
and
pop
xor
adc
pushf
sbb
outs
mov
js
mov
add
push
pop
fwait
xchg
cmps
jae
xor
inc
push
retf
pop
sub
into
mov
iret
add
shl
adc
sub
and
push
das
outs
mov
push
dec
add
sub
imul
dec
jg
stos
or
lds
and
cmps
hlt
jp
cs
push
es
ret
repz
sti
jns
or
mov
lock
adc
inc
jb
or
aas
scas
nop
fwait
lods
and
add
and
add
nop
cmc
stos
mov
leave
je
sar
aas
and
cmp
cdq
mov
mov
mov
les
sub
dec
(bad)
xor
jmp
adc
ds
fst
inc
xchg
leave
adc
test
push
call
mov
sbb
xor
repnz
(bad)
fwait
shrd
inc
or
retf
mov
mov
mov
mov
clc
mov
push
inc
dec
jns
daa
jo
sub
mov
ss
ja
mov
xor
pushf
out
push
xchg
outs
mov
jp
jp
adc
fstp
out
(bad)
inc
fld
cdq
or
jge
movs
lock
push
mov
push
mov
mov
cmp
dec
out
fist
movs
inc
cld
push
jle
add
sub
pop
push
ror
push
mov
jmp
mov
retf
push
and
(bad)
test
rol
or
or
jns
mov
pop
sub
fiadd
xor
jmp
repz
jmp
test
loopne
ja
ret
je
mov
call
push
push
retf
jae
push
sbb
dec
mov
test
jns
sbb
addr16
adc
sbb
dec
out
jae
rol
mov
mov
scas
and
xor
mov
xchg
adc
xor
push
or
inc
fwait
aam
lods
test
test
jg
ins
pop
adc
stc
adc
leave
cmp
call
adc
je
adc
mov
outs
aaa
pop
jb
xor
loopne
js
fisttp
call
pop
lahf
mov
movs
test
cmp
sahf
jmp
adc
div
cld
mov
nop
mov
stos
imul
ror
adc
xor
outs
clc
jno
(bad)
jg
in
shl
mov
cmp
cmp
jmp
aad
sub
pop
fcmovu
sbb
sahf
not
je
bound
aas
mov
jnp
in
rcr
adc
jns
bnd
add
mov
sub
push
stc
inc
lds
jnp
ds
push
xchg
not
(bad)
cwde
lahf
or
push
stos
es
sbb
or
mov
push
dec
clc
xchg
cmp
dec
jle
mov
or
xchg
in
das
mov
cmp
daa
ins
push
mov
rol
jbe
pusha
sub
movs
jno
sbb
rol
cmp
rcl
mov
sbb
mov
push
rol
leave
xchg
arpl
push
sub
enter
mov
(bad)
mul
jmp
movs
aam
push
test
adc
fsubr
and
pop
mov
xor
xor
push
inc
sar
and
and
push
add
ds
pop
mov
addr16
cmc
push
mov
push
adc
cmps
adc
pushf
mov
arpl
xor
lock
mov
xchg
jle
xor
mov
cmp
mov
cmp
add
lods
adc
jnp
add
pop
call
sub
icebp
sahf
lahf
push
mov
hlt
in
in
push
inc
jns
jbe
pop
aas
pop
cmp
mov
push
fs
iret
in
test
sub
imul
retf
push
jae
jp
pop
sub
das
pop
sub
aas
nop
retf
sub
adc
outs
addr16
fnstenv
div
aas
fnstcw
pop
cmps
in
cld
dec
inc
adc
daa
xor
jb
ror
and
xchg
rol
lods
jnp
mov
fistp
push
pop
mul
adc
mov
mov
inc
push
cs
loope
inc
add
xchg
fwait
inc
rep
(bad)
scas
jno
adc
xchg
sbb
ss
dec
ss
dec
daa
(bad)
pop
sbb
mov
adc
mov
push
iret
mov
cmp
fcom
lods
sub
push
hlt
add
pop
adc
xchg
div
setno
repnz
cwde
and
popa
int3
mov
ss
jle
out
and
or
jle
sub
cmps
addr16
cs
push
test
inc
pop
cwde
scas
push
mov
arpl
(bad)
pop
stos
sbb
adc
mov
dec
not
bound
add
fld
imul
and
in
pushf
inc
sub
xchg
xchg
xor
jle
sub
jbe
dec
mov
jb
mov
imul
mov
jg
ins
cmp
pop
pop
and
mov
lock
data16
add
sbb
mov
sbb
and
dec
(bad)
jle
xlat
inc
cmc
int
inc
sbb
rcl
mov
gs
mov
pop
bound
retf
int
inc
mov
icebp
and
xor
pop
mov
pushf
and
outs
fadd
out
cmp
(bad)
aad
jno
lea
dec
ss
in
pop
xor
addr16
pop
sbb
xor
hlt
cwde
push
scas
pushf
ja
fld
stos
nop
jp
inc
mov
stos
ret
mov
call
adc
adc
mov
outs
and
or
dec
push
and
add
jb
jbe
call
fcomp
call
scas
imul
mov
jb
pop
es
xor
mov
stos
(bad)
cmp
(bad)
sbb
cs
or
inc
xlat
arpl
adc
mov
outs
cmp
and
adc
and
cmp
loope
pop
jg
mov
jae
call
ds
movs
sbb
add
mov
mov
push
jecxz
sti
repz
ds
mov
mov
xchg
push
mov
pop
movs
ret
shl
shr
and
shr
mov
push
pushf
sbb
and
(bad)
rcl
imul
or
pop
mov
pushf
aas
mov
call
ret
sbb
push
cdq
mov
out
cdq
in
les
ds
es
mov
fcom
ret
in
inc
dec
addr16
push
mov
adc
sti
sub
sub
jb
mov
div
mov
xor
leave
xchg
clc
fucomi
loopne
push
mov
xchg
or
jmp
ins
das
hlt
add
cmp
imul
movs
dec
push
push
xchg
cmps
adc
and
loope
and
js
aad
push
xchg
mov
pop
inc
inc
push
xchg
jmp
rol
xchg
pop
ins
jnp
out
aas
out
int3
repz
sub
push
mov
out
mov
jbe
sar
loopne
push
pop
mul
aam
ins
retf
mov
push
shl
std
test
(bad)
fwait
adc
mov
in
mov
xor
add
mov
push
in
jmp
(bad)
out
push
leave
ret
inc
(bad)
and
bndldx
mov
scas
in
bound
pop
test
(bad)
cmp
(bad)
jo
sub
jno
in
or
mov
mov
out
xchg
push
jmp
out
mov
les
test
(bad)
(bad)
or
mov
cmp
cmp
imul
mov
hlt
loope
sub
push
fwait
mov
mov
push
fnstsw
inc
or
pusha
cwde
xlat
adc
mov
std
dec
ins
dec
ret
xchg
fnstenv
int3
jecxz
cmp
(bad)
push
push
push
scas
mov
pop
inc
mov
int
stos
fstp
fs
mov
test
sbb
inc
jae
leave
aam
mov
jle
fsub
or
lods
cmp
mov
enter
push
jo
mov
addr16
aas
sbb
pushf
jecxz
inc
test
(bad)
xor
fs
out
into
cmp
test
push
sub
push
sub
lahf
sti
or
ds
inc
ja
into
ror
out
add
repnz
push
out
les
ds
inc
and
jae
cdq
stos
dec
and
and
push
lods
fsubr
jge
lods
or
adc
mov
gs
inc
clc
loopne
adc
push
outs
ins
inc
xchg
mov
xor
fs
aaa
and
adc
(bad)
xchg
iret
mov
mov
scas
out
or
sub
mov
xor
popa
lock
sub
les
inc
sub
popf
mov
leave
push
fldenv
int
ror
gs
lahf
rcr
lods
popf
int
call
cmp
push
gs
mov
and
jbe
(bad)
shr
loop
lods
loope
xor
aad
adc
xor
out
inc
call
in
push
sbb
test
jmp
repnz
aam
jno
pop
adc
mov
shl
std
scas
cmp
xchg
dec
mov
(bad)
jg
jecxz
cmp
jg
jne
push
or
add
cli
adc
add
fs
repnz
aas
lods
jge
sbb
fnsave
sub
jb
outs
imul
scas
sti
jbe
jne
adc
cmp
(bad)
cmps
and
xor
adc
sti
inc
adc
std
push
call
sbb
xor
ret
shl
arpl
xchg
mov
dec
in
cwde
(bad)
aas
adc
sbb
xor
or
mov
cmps
into
ja
pop
mov
or
nop
call
xor
jae
ficom
in
or
scas
mov
(bad)
xor
popa
push
push
and
popa
and
popa
xchg
inc
lods
retf
mov
or
retf
fs
repz
cdq
sti
inc
pop
inc
mov
and
out
imul
lahf
sub
lds
jge
pushf
loope
(bad)
movs
add
cmc
sub
pop
jae
jns
fcomp
jnp
inc
fisub
dec
inc
loop
xor
and
lea
sbb
jmp
push
out
arpl
inc
cmp
(bad)
daa
cmc
adc
into
ret
popa
out
pop
mov
sbb
movs
mov
inc
and
sub
aaa
pop
(bad)
or
jbe
inc
dec
daa
iret
xchg
sub
sti
mov
fidivr
jmp
xor
movs
push
nop
leave
mov
shl
imul
cmp
xor
test
or
shl
in
nop
dec
adc
jmp
ins
mov
jl
hlt
xchg
pop
jl
sub
sbb
inc
sub
fs
cmp
or
ins
sti
ficom
fdivr
imul
daa
movs
call
dec
ret
xor
iret
pop
ins
xchg
fcom
mov
(bad)
dec
ss
ror
mov
mov
sahf
repz
loopne
jnp
sub
jp
mov
mov
icebp
dec
inc
push
pop
mov
sub
pop
retf
fnstcw
repnz
loop
or
nop
pop
fdiv
pop
loope
or
(bad)
and
clc
(bad)
imul
lea
sbb
out
cwde
lds
and
jge
mul
aas
inc
scas
mov
loopne
jge
sbb
iret
test
dec
fmul
push
scas
mov
movs
and
aas
test
add
mov
scas
jmp
stos
jae
mov
jae
and
shr
frstor
and
pand
mov
sbb
pop
lds
push
adc
out
jp
leave
movs
aad
add
int
loopne
loope
fstp
push
sbb
push
push
cs
loopne
scas
iret
je
lods
xlat
out
cmp
push
cmp
movs
xchg
and
pusha
pushf
and
inc
arpl
mov
(bad)
das
sbb
ret
dec
adc
addr16
enter
cmp
inc
mov
add
xchg
fldcw
cmp
push
mov
xor
(bad)
das
cmc
sahf
cmc
add
call
mov
xor
jo
in
test
adc
hlt
push
in
mov
test
inc
add
push
sub
dec
xchg
mov
loop
inc
push
ja
int
push
mov
lods
outs
test
cmc
scas
popf
shl
shl
push
and
hlt
push
lea
mov
pop
mov
push
movntq
out
inc
fadd
ins
adc
cmp
scas
fstp
ret
sub
dec
dec
mov
jae
mov
jno
cs
adc
fs
jne
mov
dec
clc
cmp
leave
test
dec
mov
popf
cdq
rcl
aam
mov
les
fadd
stos
add
scas
std
hlt
scas
icebp
fld
pop
jne
sub
imul
sub
xlat
mov
jge
push
gs
or
in
enter
out
fidivr
cdq
pop
or
call
and
xor
and
hlt
push
sahf
mov
test
xchg
inc
ficom
inc
std
cwde
cs
jmp
in
popf
sbb
test
and
pop
push
xchg
sub
repz
jmp
mov
cmp
mul
fiadd
pop
or
lods
xor
ins
sbb
shl
scas
int3
pop
rcl
imul
iret
shr
mov
aam
ret
mov
(bad)
sub
pusha
into
mov
(bad)
mul
inc
rcr
pop
gs
jbe
sub
pop
loopne
add
iret
rcr
inc
inc
mov
add
fldcw
std
lds
mov
movs
neg
push
les
clc
dec
aam
mov
lods
dec
mov
inc
test
jns
aad
mov
sbb
out
ja
sbb
movs
push
sahf
popa
push
sbb
sub
pusha
pop
cmp
mov
and
dec
mov
cmp
cdq
mov
push
cmps
xchg
mov
or
mul
add
add
adc
lea
ret
icebp
jbe
jno
test
js
popa
das
cwde
out
cmps
inc
out
test
iret
jae
mov
fwait
push
mov
test
sbb
pop
xor
dec
pop
popf
xchg
sbb
(bad)
push
cmp
int
jmp
inc
adc
sbb
pop
cmp
neg
mov
xchg
(bad)
leave
xchg
das
xchg
clc
sti
xor
xor
mov
xchg
adc
fadd
push
(bad)
sbb
addr16
xor
lahf
push
jmp
jnp
pop
push
cmp
stos
aas
imul
enter
ins
jle
adc
pushf
xor
add
out
outs
fdiv
test
imul
and
lods
(bad)
aam
movs
add
imul
mul
movs
cmp
popf
dec
mov
jecxz
xchg
xchg
or
jno
push
xchg
cdq
rcr
out
imul
leave
scas
push
inc
mov
mov
adc
test
add
fcmovne
xchg
fnstcw
xchg
mov
sub
aaa
mov
cmps
mov
cmps
(bad)
bnd
mov
sub
or
cdq
push
rcl
jae
jg
push
cwde
lods
mov
inc
cmp
jecxz
imul
xchg
pop
fidiv
data16
aam
sbb
cmp
fwait
jno
dec
push
in
fistp
fwait
push
lods
xor
ja
mov
outs
call
jp
not
std
mov
out
xor
cmp
fcmove
fld
outs
sbb
and
neg
mov
mov
sub
repnz
adc
in
repnz
mov
in
imul
push
sbb
shl
sub
lds
xchg
push
dec
in
(bad)
rcl
pop
fwait
pop
dec
adc
mov
mov
test
pop
sti
jp
fild
sub
mov
pop
mov
shl
pop
fiadd
inc
lea
push
and
ins
loopne
call
loopne
pusha
inc
mov
loopne
scas
cdq
and
in
cmp
mov
popa
xchg
inc
add
aam
dec
xchg
imul
lock
aaa
mov
jmp
jbe
push
jnp
mov
inc
fwait
sbb
push
sub
popf
(bad)
add
mov
aad
outs
imul
mov
or
pop
dec
sbb
sbb
jle
add
and
pop
push
push
dec
int3
inc
imul
mov
loope
push
rcr
lods
inc
push
outs
sbb
dec
aam
test
cmp
xor
pop
mov
cmc
jmp
fimul
ins
call
in
movs
shr
mov
imul
and
sub
mov
arpl
inc
fsub
push
int
jle
ss
add
icebp
dec
mov
and
out
mov
cdq
int
rcr
mov
test
push
mov
jo
mov
ins
push
mov
popf
push
into
pop
rol
out
(bad)
sti
fild
(bad)
fistp
sbb
mov
ds
ins
out
or
jmp
adc
jmp
jle
pop
sub
mov
outs
lahf
mov
je
mov
push
call
hlt
js
neg
lods
arpl
push
jl
idiv
pop
lahf
sub
les
push
test
jmp
push
xor
mov
xchg
repnz
push
mov
xor
call
or
xchg
xor
sub
dec
(bad)
push
mov
(bad)
lahf
(bad)
mov
test
fcom
mov
xlat
cmps
or
loope
(bad)
rcr
cmp
pop
call
loop
inc
pop
lods
xchg
ret
inc
adc
test
xor
dec
cmps
repz
xchg
push
xor
dec
test
mov
inc
sbb
icebp
shl
xor
push
ins
loop
jg
js
push
sbb
shr
mov
xor
push
dec
jae
fwait
inc
nop
dec
mov
dec
pop
dec
nop
popa
sub
jmp
(bad)
shr
push
jo
fs
sub
push
sub
popa
(bad)
int
adc
cs
pop
mov
jg
xchg
ja
movs
shr
test
mov
lods
(bad)
test
push
jmp
or
mov
or
inc
pop
call
fwait
jle
mov
mov
mov
in
movs
cli
shl
inc
lods
fild
pop
fldcw
scas
fcom
out
(bad)
push
sub
adc
dec
jecxz
mov
pop
and
jl
lods
clc
sub
pusha
mov
loope
popf
into
dec
jo
or
mov
jb
push
adc
sub
cmp
popa
int3
div
cmp
clc
xor
fbstp
icebp
mov
sbb
and
fadd
mov
stos
push
iret
and
ja
xchg
scas
test
mov
adc
adc
scas
bound
mov
sub
repnz
outs
push
mov
inc
(bad)
push
mov
repz
adc
xchg
neg
movs
mov
popf
jo
sbb
iret
fild
add
movs
enter
stos
dec
adc
retf
cmps
fwait
dec
lods
es
(bad)
outs
popf
jmp
adc
fdivr
std
test
(bad)
cmps
cmps
leave
in
inc
push
into
(bad)
fwait
jmp
inc
push
stos
xor
mov
sub
lock
ror
jae
lods
in
pop
movs
cmp
fisubr
arpl
and
(bad)
bound
cmps
and
repnz
outs
(bad)
out
cmps
and
rol
or
adc
add
scas
jmp
shl
test
fadd
ret
cmp
pop
mov
pop
shl
loope
pop
pop
push
cmp
xchg
mov
inc
stos
cmps
jbe
movs
test
xchg
mov
cmp
daa
call
inc
fstp
pop
inc
psubsw
inc
fist
in
ret
je
in
call
mov
(bad)
jnp
pop
jle
add
iret
icebp
push
shl
ret
inc
stos
imul
and
test
loope
mov
sbb
(bad)
(bad)
mov
retf
jl
xchg
xchg
sub
outs
jg
call
lods
shl
xchg
in
mov
inc
popa
out
ins
dec
dec
pop
add
hlt
cmp
xor
cmp
xor
ins
in
ret
and
mov
push
xchg
ins
cmps
out
pop
jo
fmul
dec
(bad)
mov
daa
lods
mov
enter
cdq
movs
sbb
push
and
jnp
(bad)
popa
mov
or
mov
mov
jl
lds
adc
cs
mov
jmp
enter
mov
test
test
jo
cmp
or
aaa
xchg
es
jb
mov
out
sbb
bound
in
push
ds
jb
sbb
xchg
movs
sub
dec
das
lock
mov
mov
(bad)
xor
enter
data16
les
je
jne
jns
ins
cmc
xor
shl
popa
cli
cmp
mov
and
xchg
dec
lea
test
push
mov
out
stos
js
pop
pop
mov
xchg
xor
stos
test
retf
pop
ja
mov
mov
or
lahf
inc
mov
jge
inc
adc
rcl
mov
pop
ds
shl
lock
and
mov
dec
xor
stos
(bad)
loope
fcom
mov
in
retf
pop
pop
dec
repz
ins
rcr
cli
xor
movs
xor
sbb
sub
sbb
add
scas
push
(bad)
pop
fsubrp
dec
movs
scas
mov
dec
mov
hlt
das
call
scas
add
imul
push
test
iret
or
sub
jnp
les
jnp
rol
jno
frstpm(287
retf
jge
mov
gs
add
loopne
std
mov
add
test
cmc
jecxz
add
jnp
or
enterw
test
jmp
mov
(bad)
das
les
imul
and
fld
sbb
(bad)
(bad)
cmp
mov
and
mov
leave
clc
imul
xor
movs
push
pop
push
data16
aad
lods
imul
push
bound
mov
cmp
scas
lds
adc
push
xor
sbb
dec
sbb
inc
mov
ja
jecxz
ins
int
mov
shl
sub
idiv
add
lahf
xor
iret
fwait
ror
leave
adc
dec
xchg
stos
add
retf
imul
packsswb
repnz
pop
sti
sub
hlt
data16
inc
add
and
les
cdq
lock
inc
adc
adc
jne
push
(bad)
retf
repz
cmps
lea
daa
pop
fwait
popf
inc
daa
clc
adc
cmp
pop
jl
lahf
and
fist
aad
scas
loop
std
pop
fisttp
loop
mov
push
stos
adc
aas
push
xchg
clc
in
mov
xchg
push
mov
les
sahf
inc
js
sbb
cmps
outs
sub
cmps
mov
mov
ror
pop
mov
cmp
test
xchg
mov
je
stos
mov
jne
das
ins
sbb
cmp
push
sub
lods
sub
inc
ret
adc
js
stc
sub
pusha
pushf
push
nop
cmps
rcl
mov
add
push
inc
mov
enter
sub
es
mov
fstp
pop
xchg
lahf
mov
idiv
sub
out
sub
retf
clc
adc
mov
movs
dec
jno
jge
mov
stc
jbe
aas
mov
sub
cmps
sbb
mov
mul
mov
cli
cli
mov
outs
pushf
sbb
mov
int
and
imul
and
sub
xchg
xchg
ds
cmp
fdivr
movs
aas
out
adc
push
cmc
shl
and
adc
adc
mov
rcr
daa
shl
sar
int3
movs
push
repnz
jne
or
push
jg
inc
pop
(bad)
cmp
repnz
in
push
adc
cmps
icebp
mov
out
add
jge
mov
add
or
dec
jmp
inc
mov
test
loope
clc
arpl
js
pop
xor
push
sub
mov
repnz
jne
repz
xchg
fist
dec
jmp
stc
outs
sbb
pushf
push
mov
das
jnp
loopne
adc
div
fwait
in
adc
neg
xchg
xchg
loopne
adc
movs
rcr
inc
loopne
xor
daa
and
cmp
jmp
mov
xchg
rcr
jno
cmc
sti
hlt
fs
enter
int3
sbb
imul
mov
scas
ds
pop
ins
or
fwait
xor
xchg
add
sar
hlt
push
xchg
call
sbb
jecxz
cmps
pushf
sbb
fwait
xchg
push
mov
pop
sbb
ins
jmp
call
inc
cmp
in
clc
xor
dec
int3
mul
aam
test
jl
mov
push
mov
jne
test
aad
push
mov
push
xchg
fucomip
stc
call
icebp
mov
ja
pop
mov
xchg
inc
xor
ja
xchg
push
dec
lods
sub
repnz
sub
jg
inc
js
push
fnstcw
and
es
call
sub
outs
add
pop
jns
push
sub
loopne
jo
push
jle
mul
inc
adc
(bad)
test
jl
in
push
neg
add
out
jmp
sbb
repz
xor
push
sbb
outs
inc
inc
dec
mov
retf
mov
test
add
in
std
test
cwde
(bad)
mov
idiv
xor
imul
ret
ret
pop
int3
sahf
fsub
pop
pop
movs
sub
data16
pop
push
push
loope
jg
ss
add
rcr
clc
aas
clc
adc
(bad)
fisubr
lea
int
adc
dec
push
loope
jmp
xchg
mov
sbb
iret
fldz
pop
lock
xor
ja
jae
pop
ss
sbb
cdq
cmps
outs
and
outs
stc
cmp
(bad)
cmc
pop
shl
pop
inc
lods
movs
inc
(bad)
(bad)
pusha
das
call
cmp
add
inc
jno
jne
outs
xchg
pop
test
xchg
pop
stc
div
or
push
test
dec
cmp
ja
loopne
leave
push
test
push
mov
adc
and
aas
call
iret
sub
rcr
pop
nop
(bad)
add
inc
push
and
mov
clc
sub
in
inc
cmc
sbb
loopne
xchg
pop
dec
inc
je
pop
int
or
xchg
push
cli
std
arpl
clc
ret
xor
repnz
push
cmc
int3
popf
stos
ins
sti
dec
into
xchg
addr16
or
sbb
sbb
jns
pop
sahf
and
aam
cmp
stos
jmp
fld
jbe
aad
mov
popa
adc
into
das
call
test
stos
sub
je
push
and
cwde
movs
push
xor
lahf
ins
pushf
ror
and
push
fiadd
sbb
js
cmp
aas
retf
and
stos
rcl
sbb
sti
pop
mov
sbb
jne
pusha
rcr
push
dec
adc
ret
or
dec
ins
sub
ins
test
sub
xchg
addr16
add
mov
adc
ret
pop
int
or
xchg
loop
ja
pop
sti
popf
xor
xlat
sub
pop
xor
add
push
jmp
jae
push
pop
cmp
int
push
cmp
not
aaa
sbb
jno
sub
je
xor
adc
mov
in
lods
pop
cmp
jl
out
or
mov
shl
movs
or
retf
sahf
push
dec
push
pop
dec
(bad)
call
pop
enter
xchg
out
aaa
stos
gs
loop
jmp
xchg
push
ds
outs
ret
stc
pop
xchg
cdq
mov
pop
or
fild
test
pop
adc
aas
adc
in
outs
jnp
mov
xchg
dec
(bad)
psraw
mov
pushf
add
out
repnz
pop
fld
sub
xor
dec
inc
icebp
data16
add
xor
pushf
mov
mov
sbb
push
cli
sbb
cmps
div
ja
xor
jo
mov
dec
mov
out
adc
mov
sub
fs
cmp
out
sar
sbb
mov
mov
mov
push
and
pop
xor
dec
jnp
pop
cmp
cmp
loopne
loop
and
movs
xchg
and
xchg
mov
sub
xor
sti
inc
stos
adc
sub
push
gs
test
aam
xchg
es
rol
cld
and
xchg
ror
dec
dec
mov
int
cmp
adc
aas
(bad)
cdq
cmc
scas
and
cld
push
mov
aam
inc
jb
or
add
xchg
outs
cmp
inc
inc
pop
fdiv
xchg
jg
pop
loope
lahf
lock
inc
xchg
sbb
mov
xchg
sahf
push
jb
dec
mov
jecxz
dec
adc
lock
push
jnp
mov
pop
add
fisub
sub
dec
shr
adc
repnz
sub
cmp
pushf
out
cmp
mov
ret
pop
(bad)
jo
add
stc
xor
sub
push
mov
xlat
repz
neg
ret
fdivr
adc
js
pusha
test
bound
fwait
(bad)
std
push
adc
and
jne
sahf
call
stos
dec
jle
sub
jmp
xchg
fdivr
frstor
cdq
aad
int3
inc
and
jmp
out
fnstcw
outs
dec
call
jp
push
cmp
dec
jmp
inc
std
pop
xchg
adc
cmp
aas
ror
repz
inc
hlt
popa
stos
jmp
loope
retf
sbb
or
jecxz
sub
mov
(bad)
inc
mov
lds
push
cmovg
mov
arpl
dec
inc
(bad)
pop
sub
mov
shr
add
loopne
dec
sbb
stos
xor
loope
ins
out
(bad)
out
xchg
and
pop
push
call
in
pop
mov
pop
stos
dec
or
outs
fsubr
or
les
fstp
push
cmp
ja
inc
xor
dec
cmp
sub
mov
sbb
fadd
jmp
xchg
push
dec
call
sub
add
rcl
shl
pop
das
xchg
jbe
data16
and
(bad)
(bad)
aas
ins
xlat
xchg
in
aaa
xor
mov
mov
dec
push
xchg
(bad)
pop
fadd
cmp
mov
xor
cmc
fsubr
push
push
call
inc
in
lods
cld
push
fwait
ret
xchg
cmp
xlat
sub
inc
or
mov
test
mov
inc
jp
pop
cwde
enter
push
mov
or
jmp
iret
add
je
add
into
xchg
xlat
fstp
push
fwait
mov
add
cld
sbb
dec
aam
jmp
mov
xor
pop
clc
mov
and
fld
aam
sub
mov
mov
mov
push
and
sbb
into
mov
fmul
in
xchg
scas
mov
jnp
push
outs
pop
shr
adc
pop
fwait
adc
add
gs
sbb
mov
and
out
frndint
add
add
lea
mov
mov
xlat
clc
(bad)
ja
ins
and
dec
out
(bad)
icebp
mov
test
into
mov
xchg
xor
adc
call
push
or
stos
fdivr
pop
mov
push
push
fmulp
pop
call
cdq
stc
and
int
jnp
mov
mov
pop
call
jae
sysret
in
sub
into
jmp
js
fild
mov
mov
icebp
xor
fcomp
mov
retf
scas
repz
pop
pop
ror
push
push
sbb
imul
dec
fstp
repnz
push
ins
mov
and
shr
inc
xchg
je
xchg
cs
sbb
or
pop
ds
(bad)
shl
iret
out
xlat
inc
pop
ja
adc
or
jo
pusha
mov
pop
jmp
aas
pop
stos
dec
fidivr
into
push
mov
mov
push
loop
test
out
lds
scas
xchg
fcom
inc
mov
mov
sub
mov
jmp
mov
sbb
xor
jne
inc
out
call
and
xchg
call
dec
nop
or
imul
in
inc
in
fwait
jnp
xchg
cmp
jecxz
and
shr
rcl
cmps
push
cmp
not
mov
sbb
mov
or
pushf
and
loope
ins
mov
aad
stc
inc
bound
in
or
cmp
ins
repnz
test
dec
mov
cmp
xlat
mov
adc
aas
adc
ret
pop
and
sub
pushfw
push
or
inc
lds
fldenv
mov
jg
adc
lods
sbb
or
ror
pop
mov
fsubr
in
mov
mov
sbb
and
imul
sub
cmps
sbb
jmp
sub
das
inc
adc
cmp
arpl
in
ficomp
push
add
ficom
and
nop
push
inc
not
std
sbb
push
popa
push
pop
dec
scas
pop
test
bound
out
sbb
xchg
sbb
jmp
fdiv
push
add
jge
(bad)
cli
mov
(bad)
test
cmp
mov
dec
jo
or
pop
jne
sahf
imul
(bad)
push
fwait
das
lods
mov
inc
xor
or
jmp
mov
fdivp
add
push
or
das
mov
pop
add
call
mov
pop
jge
jecxz
jae
test
daa
add
pop
xchg
jge
in
sub
cdq
xchg
xchg
add
mov
fadd
pop
jmp
inc
add
icebp
sbb
fmul
popa
xchg
push
pop
in
pop
nop
push
pmaxsw
pop
test
test
adc
mov
loope
call
cld
push
dec
xor
and
ficomp
or
inc
push
add
mov
out
test
xor
movs
into
je
and
nop
popf
sub
popf
jp
sbb
inc
xchg
mov
pop
cmp
ins
and
imul
cmp
popf
jle
int
cli
xchg
in
lock
shl
xchg
sbb
dec
mov
lds
xchg
and
shr
pop
mov
ins
sbb
popa
loopne
neg
mov
mov
mov
mov
out
pop
jae
inc
xor
shl
or
push
mov
cmps
mov
adc
add
pop
loop
jno
movs
cmp
not
scas
fdivr
mov
(bad)
mov
dec
loopne
cwde
inc
cmps
stos
leave
jg
xchg
jp
push
fidivr
test
in
and
in
mov
out
ja
outs
in
or
xchg
push
(bad)
xchg
mov
xchg
pcmpeqb
xchg
out
add
ret
in
mov
or
inc
sbb
and
sub
outs
fwait
xchg
push
stc
mov
ss
jecxz
clc
leave
push
iret
jp
and
and
or
inc
mov
push
loop
lea
xor
stos
and
add
int3
push
stos
mov
and
pop
or
out
lods
in
nop
inc
nop
int
mov
lea
or
sbb
ret
or
pop
sub
test
pop
add
retf
mov
cmps
hlt
adc
xchg
add
cmp
popa
add
jmp
in
out
add
stc
and
aas
push
push
inc
leave
(bad)
out
push
leave
adc
add
adc
jno
rcl
arpl
outs
jp
inc
xchg
mov
inc
ins
sub
mov
ror
arpl
cs
(bad)
sbb
test
scas
inc
je
sub
xor
or
inc
cmp
xchg
pusha
push
and
and
jae
sbb
rcr
pop
(bad)
sbb
push
xchg
or
ror
ss
int
mov
xchg
fadd
call
xor
ins
or
(bad)
mov
xlat
jb
mov
fild
xor
or
or
inc
jo
push
add
les
stc
mov
call
mov
leave
aaa
fsubr
jo
push
dec
iret
dec
xchg
jb
mov
adc
cmps
adc
mov
mov
xchg
pop
je
test
iret
in
bound
out
xor
loopne
xor
js
push
inc
loopne
mov
rcl
push
addr16
mov
loop
data16
imul
clc
ror
dec
imul
and
fstp
mov
push
data16
adc
jl
sar
into
jecxz
js
es
and
xchg
jg
and
cmp
in
sub
mov
push
mov
rol
cmp
xchg
mov
mov
jl
dec
retf
ret
sbb
imul
or
mov
add
push
bnd
fldz
xchg
das
loopne
sbb
leave
ds
test
aad
imul
sar
movs
leave
jb
push
pushf
inc
xchg
pop
push
push
sub
jne
ja
sub
fwait
cmp
mov
aaa
in
and
ins
push
lahf
sahf
push
sti
mov
das
into
xor
sbb
jne
jo
mov
add
xor
sahf
adc
fwait
xor
inc
pop
scas
mov
test
icebp
add
pop
mov
std
sbb
inc
mov
inc
(bad)
outs
mov
xor
cmp
gs
fadd
and
repz
in
xor
bsf
ins
jo
(bad)
jns
jmp
add
inc
outs
test
mov
xchg
aas
inc
add
test
adc
mov
jae
xchg
call
xor
out
leave
xchg
es
pop
mov
das
mov
lahf
mov
dec
ja
or
pop
clc
jmp
jns
rcr
inc
sbb
push
jns
mov
jns
pop
mov
and
xor
cmp
and
mov
ins
(bad)
ffreep
les
sar
sti
sbb
adc
addr16
pushf
call
inc
cmp
loopne
int
fnstcw
test
(bad)
fst
jp
pop
adc
xchg
inc
rcr
lods
jno
jne
jl
cmp
or
xchg
jp
sbb
pop
pop
jl
mov
cmp
pop
sub
lods
scas
(bad)
pusha
mov
and
adc
retf
arpl
push
dec
inc
scas
mov
test
lods
popf
or
inc
sbb
js
inc
mov
les
dec
enter
es
sub
ss
xchg
mov
or
popa
ffreep
cli
xor
fnstenv
nop
je
fdiv
push
into
pop
mov
ret
inc
cld
inc
aaa
mov
jmp
push
mov
js
rol
adc
dec
imul
pushf
lds
push
js
cmc
aas
fs
xor
jo
xchg
std
aam
xchg
push
mov
push
aad
shr
je
inc
into
adc
std
cmp
ins
add
imul
adc
lods
in
jp
mov
adc
std
(bad)
cs
xchg
or
jl
push
loop
jle
pushf
jae
imul
lds
adc
fstp
mov
push
test
pop
sub
inc
mov
std
jne
dec
push
inc
cmp
mov
and
and
cli
out
addr16
jp
clc
fsqrt
cmps
test
xchg
std
mov
das
jl
data16
mov
mov
outs
cmp
adc
xchg
cwde
icebp
or
fmul
push
cmc
scas
lds
dec
xchg
(bad)
push
call
pushf
fucom
out
xchg
mov
mov
movs
add
sbb
and
push
or
les
jnp
add
xchg
push
jns
(bad)
cmp
cmps
repnz
sbb
and
pop
jae
adc
lahf
push
dec
fwait
repz
mov
mov
lods
xchg
je
es
pop
inc
aam
pop
pushf
mov
inc
scas
repnz
sub
lar
add
inc
icebp
repz
add
inc
dec
hlt
test
cwde
js
bound
adc
inc
rcr
ret
add
and
or
sahf
mov
stos
jmp
push
mov
xchg
les
xlat
cmps
sub
xchg
addr16
xor
out
push
add
mov
jmp
fisttp
loopne
sbb
(bad)
cwde
cmps
mov
iret
in
add
jmp
add
sbb
fwait
pop
aam
xor
cmp
mov
add
mov
ror
in
and
push
es
sub
mov
sub
aaa
xor
sti
aad
mov
or
pop
xchg
xlat
ins
imul
push
or
or
pop
arpl
sub
mov
mov
nop
mov
jb
xchg
or
mov
out
xor
push
fstp
mov
xor
scas
pushf
jns
cld
fcomp
push
out
test
pop
setbe
adc
push
sbb
shl
les
xchg
popf
or
jg
sahf
inc
icebp
jnp
jae
int
aaa
stc
adc
(bad)
lods
jmp
es
lods
mov
hlt
enter
stos
(bad)
iret
and
(bad)
in
div
adc
into
not
cmp
or
pop
dec
rol
adc
and
bound
loop
mov
jbe
pop
jae
fwait
das
div
sbb
add
(bad)
out
sahf
mov
out
mov
sub
mov
hlt
test
data16
ins
push
adc
in
cld
out
and
lock
inc
int3
retf
xchg
or
fsubr
mov
ret
inc
jg
mov
outs
outs
xor
xchg
rol
shr
jb
inc
lea
jp
mov
cli
add
add
inc
pop
scas
mov
xchg
pop
gs
jl
in
dec
scas
call
lock
mov
or
or
imul
sub
pop
jno
rcl
mov
loop
inc
mov
dec
cmp
es
repnz
sub
rol
or
(bad)
outs
ja
push
mov
idiv
or
out
adc
popa
xchg
pop
std
movs
adc
int3
mov
add
pop
xor
rcr
cli
and
mov
xchg
dec
outs
test
cmp
rcr
xchg
ss
test
scas
inc
cli
stos
retf
mov
or
jnp
test
scas
cli
adc
cmps
rcl
fwait
mov
or
lods
lods
push
xchg
xchg
mov
push
lods
dec
loop
add
shl
jecxz
sbb
add
mov
imul
fidiv
aas
mov
aas
mov
jne
out
dec
lea
dec
pop
inc
fcomp
int3
add
and
dec
inc
inc
jbe
push
mov
pop
cwde
or
aaa
mov
push
add
mov
inc
cmp
enter
mov
push
jbe
ror
xor
cmp
xor
dec
or
jp
mov
jecxz
dec
xor
xchg
inc
mov
in
dec
and
in
test
into
(bad)
jns
push
loope
pop
outs
jp
and
data16
push
and
fidiv
push
cli
sub
outs
ror
push
fidiv
stos
fbld
int3
das
cmp
cmp
xchg
and
in
(bad)
or
jb
imul
sbb
inc
jmp
(bad)
scas
(bad)
push
iret
pop
xchg
sub
sahf
cmp
and
mov
push
fsub
jae
int
push
jb
movs
cli
mov
enter
or
sub
das
rcr
out
jbe
xchg
bndldx
in
xchg
xor
imul
js
dec
bound
clc
mov
out
mov
or
or
cld
int3
push
(bad)
add
sbb
xchg
push
push
mov
and
sub
aas
fisubr
jge
scas
push
lds
fmul
jns
mov
sahf
jp
push
adc
cmp
fistp
ret
pop
bound
mov
loopne
jecxz
jb
sbb
inc
mov
(bad)
popa
sbb
test
xchg
out
sbb
and
out
and
inc
ret
jg
xor
ins
sbb
adc
and
lods
mov
mov
gs
cmp
addr16
fwait
push
jge
arpl
xchg
sbb
adc
xlat
inc
push
add
dec
inc
(bad)
cli
sti
or
sbb
imul
push
iret
ficomp
mov
pop
fucompp
icebp
and
(bad)
leave
out
imul
xor
rcr
call
dec
in
push
sub
push
jae
sub
das
int
push
iret
inc
add
dec
daa
in
ds
fcomp
mov
add
test
xchg
and
cmp
jecxz
mov
loop
adc
ins
mov
push
sub
sbb
mov
frstor
and
in
fst
mov
add
add
and
mov
jno
inc
cmps
sub
cld
jmp
nop
dec
cmp
ror
into
lahf
adc
inc
xchg
and
mov
jp
sub
mov
loopne
sbb
pop
cmp
into
loope
scas
ins
xchg
push
test
sbb
fcom
sub
pop
ret
push
fisttp
ss
xchg
jnp
(bad)
dec
pop
repnz
lock
aad
cld
div
rcl
mov
test
or
iret
jnp
xcrypt-ofb
cmps
test
mov
push
add
and
mov
push
xor
je
xor
or
inc
fs
or
ins
or
inc
xor
cmp
add
push
test
cmp
neg
jle
not
add
cmp
and
mov
mov
pop
mov
and
pop
mov
xor
ds
int
sbb
sbb
or
retf
loopne
push
push
repz
xchg
sub
fisttp
jnp
out
and
inc
xchg
jmp
in
sbb
or
push
cmps
aad
sub
out
ret
jge
shl
cwde
and
push
cli
loope
mov
cmp
push
mov
inc
hlt
test
mov
enter
lahf
cwde
and
pop
pop
pop
rcr
fimul
dec
fisubr
out
cdq
pusha
jns
scas
inc
out
xchg
push
and
cmp
adc
push
or
sbb
dec
add
pop
adc
cli
mov
xchg
mov
dec
inc
in
push
call
mov
xchg
push
imul
imul
mov
aaa
or
adc
sub
mov
(bad)
(bad)
ja
out
adc
jae
inc
call
and
in
adc
shr
inc
cmp
fldenv
pusha
mov
dec
push
sub
cwde
pop
rcr
in
sbb
leave
leave
and
test
sbb
mov
stos
xor
dec
cdq
pop
imul
pop
js
mov
ret
jp
pop
mov
sub
inc
or
arpl
dec
push
popf
ds
adc
push
and
mov
xor
fmul
icebp
or
mov
sbb
add
addr16
iret
or
add
cmps
cmp
xchg
push
sbb
pop
sub
sbb
int
into
and
pop
fstp
fcom
repz
push
inc
fwait
gs
not
std
push
sub
mov
mov
add
jns
xchg
lods
xchg
push
mov
or
pop
jb
mov
xor
fild
xor
inc
mov
jl
jae
cmps
mov
call
mov
inc
idiv
push
xchg
jle
scas
jmp
sub
loop
leave
mov
pop
jmp
jb
lods
sub
jp
adc
sti
in
jl
(bad)
movs
cdq
hlt
and
mov
shl
push
mov
adc
das
pop
push
sbb
ret
adc
xchg
in
xchg
sbb
xchg
retf
add
scas
mov
adc
xor
je
fwait
loop
jmp
mov
or
push
jg
xor
aad
ds
push
mov
mov
hlt
mov
mov
aas
and
or
aaa
retf
mov
xchg
stos
je
adc
adc
mov
dec
jb
or
xchg
daa
mov
adc
push
enter
jne
out
(bad)
push
loopne
mov
push
ret
daa
stos
stos
xchg
mov
add
shl
mul
mov
mov
mov
lds
jecxz
or
jmp
icebp
xlat
pop
inc
inc
mov
cmp
push
int3
xchg
pop
mov
push
fld
loop
ins
adc
xlat
xchg
push
xchg
dec
xchg
test
pop
pusha
pop
aam
xchg
sub
or
adc
psubb
out
ror
sub
push
push
xchg
loope
xchg
inc
sahf
or
call
dec
js
les
mov
push
mov
sub
and
sub
mov
jmp
aad
mov
loop
imul
cmp
out
stos
pushf
imul
sub
mov
mov
ret
jle
pusha
(bad)
sub
push
retf
fistp
dec
ffree
retf
adc
sbb
xor
and
loope
adc
ins
sbb
call
xchg
bound
test
jo
inc
push
jnp
sub
ret
leave
xchg
ror
shl
xchg
mov
lds
iret
int
push
shl
or
loope
ja
retf
mov
rcl
sbb
cmps
mov
xor
imul
cmc
pop
fadd
sub
pop
push
add
sbb
movs
mov
xor
xchg
inc
paddusw
push
sbb
or
into
push
mov
pop
cmp
inc
fdiv
movs
cmp
cmp
aaa
mov
outs
push
or
gs
pop
dec
pop
add
dec
scas
outs
or
gs
and
aaa
pop
xchg
fisub
sbb
out
inc
stos
or
xchg
lock
sbb
(bad)
pop
rcr
mov
pushf
sti
repnz
inc
jecxz
enterw
cmps
call
fist
and
dec
push
push
cmp
inc
push
adc
dec
dec
jmp
pop
aaa
mov
mov
and
sbb
cmp
cdq
adc
arpl
cmps
mov
add
cli
cwde
mov
pop
sub
jns
clc
fsub
aam
(bad)
xor
sbb
xchg
es
pop
pop
daa
stos
mov
inc
ret
add
mov
cli
mov
sub
fwait
lds
sbb
xor
shl
inc
ffreep
je
jecxz
cmp
cmp
nop
add
jmp
or
clc
fistp
or
test
xor
dec
lods
nop
push
add
lods
cmps
call
xor
jle
adc
dec
cmp
push
jle
adc
out
sbb
cmp
ds
nop
add
sub
dec
push
inc
ja
mov
in
pusha
jmp
sbb
cmp
popa
push
cli
dec
pop
lock
(bad)
test
in
push
dec
hlt
mov
jbe
or
ss
push
int3
pop
or
std
jecxz
mov
sub
es
cmp
mov
xor
pop
movs
call
iret
test
int
in
or
lock
mov
add
push
fcmovnbe
sub
mov
fidivr
jns
aam
jmp
data16
sub
push
icebp
cmp
lods
jg
mov
sub
fimul
push
rcl
or
stos
or
mov
ja
ja
(bad)
adc
pop
not
add
sbb
je
adc
les
mov
rcl
rcr
push
push
cmp
and
cmps
cmc
jg
mov
out
sbb
shr
popf
(bad)
adc
int
fldenv
dec
(bad)
lea
pop
test
call
popa
pop
xchg
leave
dec
push
mov
jno
cmp
sahf
aas
xor
mov
push
clc
push
cmp
lods
(bad)
jecxz
cdq
and
jmp
fcmove
mov
add
int3
sbb
test
ins
test
mov
and
jns
add
jmp
push
call
cmp
add
icebp
sbb
test
setbe
mov
dec
mov
ret
push
pop
inc
fcmovnbe
test
mov
push
xlat
and
sub
jl
push
pop
mov
fnstenv
daa
test
inc
clc
scas
adc
into
dec
jne
jmp
sbb
jl
pop
mov
cld
sar
clc
jne
jno
adc
mov
js
call
in
loopne
xor
jnp
mov
ss
sub
movs
push
cmp
cmp
hlt
das
call
sbb
popf
pushf
add
adc
(bad)
sub
inc
dec
pushf
xor
out
bound
jbe
jmp
xor
adc
adc
mov
scas
stos
inc
mov
jmp
xor
clc
cmp
mov
mov
mul
mov
dec
and
int3
sub
out
fadd
mov
push
adc
(bad)
and
inc
call
xor
mov
out
cwde
repz
adc
test
enter
mov
iret
icebp
sbb
fisttp
jl
arpl
ret
cs
cmp
fadd
mov
mov
ins
cmp
xchg
repz
xchg
xor
cwde
adc
push
repnz
push
sub
pop
xor
stos
jb
xor
adc
mov
push
push
imul
bound
xchg
jp
pop
add
rol
inc
retf
add
stos
jnp
repz
pop
mov
add
dec
ins
out
ds
xor
jae
data16
adc
stos
mov
add
inc
mov
cld
mov
sbb
popa
mov
mov
inc
xlat
jbe
xor
inc
(bad)
aad
pop
retf
(bad)
sbb
js
push
pop
adc
cmps
sub
std
fdiv
mov
xor
push
inc
sbb
mov
icebp
jbe
sbb
aas
cwde
or
loope
(bad)
and
dec
jne
popf
rol
in
daa
icebp
not
daa
add
pusha
aaa
cmps
call
(bad)
sbb
stc
fisubr
add
jmp
cli
fldln2
movs
retf
mov
neg
ins
pop
iret
je
div
fcomp
ss
xchg
push
sbb
popa
pop
jne
pop
(bad)
xchg
outs
push
ins
fidivr
and
(bad)
push
outs
fimul
jb
and
mov
sbb
(bad)
lea
xchg
add
ret
xor
retf
push
imul
out
add
push
lods
add
inc
mov
call
dec
les
repnz
pushf
adc
(bad)
jnp
outs
or
jo
adc
xor
mov
xlat
xchg
repz
iret
sub
mov
lahf
sahf
and
jns
repnz
je
fistp
call
out
xor
ss
iret
ins
mov
mov
jp
mov
and
mov
and
xchg
fcom
ins
ss
dec
mov
out
movs
push
push
push
mov
aam
sub
jg
cmp
jp
out
sub
sub
xchg
ds
gs
jmp
outs
or
jg
not
xlat
repz
sbb
pusha
jle
xchg
ret
mov
inc
xchg
pop
mov
call
cmp
xor
lods
sub
xchg
aam
shr
add
add
dec
jmp
xchg
aam
iret
in
sub
rcr
ret
pop
or
sbb
cdq
jae
and
add
(bad)
ret
sub
lea
in
cmps
push
not
mov
into
push
lds
and
mov
nop
fcmovnu
or
fidivr
xor
pop
(bad)
mov
daa
push
xor
cli
pop
jmp
ja
jbe
or
jne
neg
ret
add
es
imul
repz
xor
lds
xlat
outs
repnz
sub
add
repnz
fsubr
xor
lds
push
push
int3
out
dec
popf
ret
fidivr
in
jle
mov
test
or
loope
jecxz
cld
ja
fst
dec
mov
lds
in
(bad)
pushf
pop
jmp
adc
scas
or
pop
repnz
inc
hlt
enter
imul
fmul
pop
(bad)
int3
pop
add
int
mov
dec
(bad)
push
icebp
outs
imul
add
jmp
js
mov
aas
dec
in
ds
sahf
or
dec
pop
out
icebp
sub
test
mov
out
inc
jg
sbb
inc
out
ret
xchg
out
popa
out
inc
xchg
clc
adc
sub
aad
in
in
jno
int3
inc
ja
xor
lods
shl
add
leave
sub
sub
cmp
jg
pop
lods
push
xor
nop
out
xchg
int
xchg
test
gs
ins
adc
(bad)
repnz
jb
mov
mov
in
out
inc
mov
mov
adc
xchg
add
push
pop
sbb
icebp
dec
mov
mov
sbb
loopne
push
ret
in
cmp
xchg
cmp
dec
stos
in
sub
and
ds
push
jecxz
dec
or
test
mov
adc
mov
(bad)
out
ret
cwde
mov
cmp
mov
sub
mov
cmp
(bad)
mov
repnz
aam
xor
out
jp
cmp
sbb
mov
inc
inc
pop
dec
call
jecxz
mov
add
jno
sbb
mov
or
xchg
adc
adc
xor
repz
sbb
cwde
retf
mov
mov
mov
loopne
add
inc
push
push
pop
mov
and
fidiv
inc
cwde
add
xchg
xor
imul
stos
mov
sub
jmp
mov
int3
jmp
clc
cmc
imul
fist
stc
push
or
les
ds
cmps
xchg
(bad)
ret
mov
pop
adc
or
inc
sbb
shl
adc
out
addr16
pop
inc
test
ret
(bad)
js
or
fwait
inc
outs
add
mov
dec
neg
inc
push
loope
out
cmps
fist
pop
mov
pminsw
je
jp
inc
dec
mov
dec
push
push
(bad)
ror
rcl
out
cmps
not
jo
scas
jmp
xchg
js
adc
push
fstp
mov
inc
cmp
jns
repz
(bad)
mov
mov
scas
jbe
xchg
loopne
xchg
aam
xchg
mov
out
dec
mov
pusha
dec
scas
out
add
(bad)
loop
repz
test
jl
nop
push
icebp
sbb
cmp
mov
inc
nop
aad
xchg
scas
pop
pop
dec
dec
xchg
andps
and
inc
mov
pop
or
push
jae
test
jmp
push
mov
mov
sub
or
push
cs
and
punpckhbw
sub
mov
aas
or
sbb
movs
inc
jns
fwait
jecxz
or
shl
sahf
adc
sub
lods
sti
add
sbb
outs
cs
xchg
imul
push
jmp
rcr
adc
push
les
mov
mov
pop
(bad)
xor
and
mov
(bad)
(bad)
fnstsw
gs
or
or
call
xchg
xchg
add
shl
xor
jle
ret
dec
bnd
test
clc
add
ins
mov
pcmpgtd
cmp
inc
or
dec
sub
imul
test
mov
cmc
cli
mov
sti
jne
(bad)
mov
inc
sub
mov
jmp
xchg
in
(bad)
into
sub
or
or
ds
mov
xor
mov
xor
icebp
push
adc
pop
imul
loopne
sahf
jo
cmp
shl
xchg
dec
repnz
xchg
aam
nop
retf
push
sub
in
loope
or
(bad)
cmc
mov
cmps
arpl
sub
push
dec
(bad)
inc
jmp
pushf
sahf
scas
sbb
push
or
cmp
retf
ret
sub
inc
ds
inc
mov
and
add
stos
call
outs
pop
cdq
callw
ret
int3
cmp
sbb
pusha
adc
jg
inc
push
jmp
stos
arpl
stos
push
movs
jge
xchg
scas
inc
imul
ins
inc
mov
repnz
sti
mov
adc
int3
adc
movs
sub
pop
mov
call
fadd
movs
aad
add
pushf
dec
adc
neg
pop
jg
cmc
mov
dec
ins
mov
movs
les
neg
out
dec
out
scas
iret
xor
mov
pop
fmul
inc
mov
into
cmp
stc
ins
aam
loope
mov
retf
fiadd
xchg
retf
xchg
sub
or
sar
mov
cmps
inc
jecxz
mov
adc
inc
xor
mov
mov
cwde
jge
mov
sub
repnz
(bad)
inc
sub
ret
xchg
es
call
mov
xchg
jp
or
ja
add
jp
jmp
xchg
mov
fcom
cmps
aas
xchg
xor
cmp
adc
mov
mov
test
ins
pop
sbb
fidivr
pushf
adc
dec
jnp
sar
xchg
push
inc
ficom
push
dec
(bad)
daa
mov
aam
push
jl
add
bound
inc
(bad)
xchg
adc
mov
pop
stos
movs
push
gs
cmp
ds
dec
fstp
jnp
jmp
jb
mov
into
and
stc
je
(bad)
div
leave
or
enter
nop
retf
ins
jbe
(bad)
ds
sub
loop
inc
aas
pop
dec
adc
icebp
ja
inc
out
ss
movs
in
cmp
das
jge
clc
retf
daa
push
stos
pop
inc
sahf
sub
popa
dec
rol
adc
shl
inc
inc
popf
std
adc
cli
cld
or
sub
xchg
dec
jle
leave
sbb
xchg
add
in
data16
cdq
jmp
into
mov
jnp
cmp
mov
gs
dec
sbb
in
pop
test
jne
push
mov
adc
pop
inc
mov
pop
stc
out
jp
(bad)
(bad)
lock
cmp
adc
loope
cmp
or
data16
xchg
fimul
pop
add
stos
int3
jae
cmp
mov
mov
(bad)
mov
inc
mov
xchg
imul
push
fsubr
pop
mov
xchg
inc
inc
ds
lds
push
ds
es
add
inc
fist
hlt
(bad)
mov
xchg
retf
mov
push
adc
stc
test
pop
cmp
or
jae
in
inc
repnz
fnstcw
xchg
sbb
(bad)
mov
iret
push
stos
push
xor
inc
imul
out
sar
cmp
aad
mov
jle
ja
in
std
push
sbb
out
loopne
fist
mov
jne
push
jae
xchg
enter
rol
pop
and
mov
jge
xor
loopne
pop
mov
dec
test
(bad)
nop
xchg
inc
outs
sub
cmps
mov
nop
jno
xchg
and
es
nop
pop
das
rol
push
inc
in
(bad)
stc
mov
xchg
mov
or
loope
stos
loop
pop
outs
les
xchg
fidivr
mov
retf
popf
sbb
xchg
je
addr16
add
movzx
and
add
and
dec
dec
loop
int3
xor
fbld
fwait
(bad)
loop
adc
mov
add
inc
(bad)
jmp
sbb
das
add
push
movs
hlt
out
mov
and
dec
or
stc
movs
pop
adc
pop
out
mov
push
and
xchg
mov
push
loopne
pop
outs
rcr
test
pop
retf
aad
out
iret
mov
mov
push
sbb
(bad)
scas
popf
mov
fsubr
lock
repnz
cwde
loopne
loope
hlt
rcr
mov
jmp
imul
int
cmps
or
pop
push
int3
ins
pusha
pop
sbb
iret
test
add
sar
xor
adc
jbe
sub
imul
(bad)
xor
jmp
cli
cmp
xlat
pop
ja
in
movs
mov
aas
rol
out
sub
test
shl
push
inc
xchg
popf
pop
(bad)
mov
jbe
dec
mov
xchg
retf
xlat
movs
outs
outs
mov
dec
or
xchg
mov
push
outs
push
nop
or
(bad)
and
pop
pop
cmp
adc
int3
fimul
dec
mov
scas
sbb
sbb
inc
arpl
mov
adc
sbb
mov
xor
push
mov
sub
adc
inc
dec
push
sbb
and
adc
dec
inc
loop
pop
inc
pop
ret
adc
repnz
dec
sbb
pop
call
xchg
adc
sbb
dec
xor
(bad)
sub
xor
push
xchg
call
add
imul
jmp
dec
inc
enter
jns
je
in
or
cmp
mov
aam
test
(bad)
mov
pop
loopne
stc
fdivr
or
imul
loopne
fisttp
pop
call
sahf
xor
xchg
retf
xchg
int
cmp
in
push
test
movs
push
fst
push
push
sbb
xchg
mov
test
leave
ret
xor
xchg
push
xchg
dec
lods
cdq
jne
mov
mov
aam
mov
push
(bad)
lock
repz
mov
jle
xor
sub
mov
popa
xor
pop
(bad)
mov
ja
push
(bad)
and
outs
cmp
ficom
stos
mov
inc
aas
mov
jle
or
push
(bad)
imul
jno
aam
pop
fsubr
jp
test
mov
mov
fcmovbe
loope
sub
aad
jae
ror
inc
or
mov
fs
sahf
gs
xchg
inc
adc
xchg
lods
frndint
call
cmp
or
mov
cmp
icebp
add
dec
outs
out
pop
jnp
out
mov
mov
add
gs
jmp
shl
fdivr
shr
and
(bad)
mov
jb
jmp
and
hlt
sbb
dec
push
std
cdq
(bad)
lea
jae
shl
inc
add
call
sbb
sar
in
pop
test
mov
sbb
mov
mov
and
dec
xchg
imul
cld
fidivr
and
sbb
push
in
outs
adc
jnp
xchg
add
mov
scas
fwait
and
cmps
or
cmp
pop
mov
lds
xor
and
mov
inc
adc
fstp
in
test
cmps
outs
pop
lods
mov
jns
mov
mov
repz
jne
mov
cmp
lods
fs
mov
jb
inc
sbb
xchg
(bad)
out
mov
push
aas
clc
fsub
inc
sub
mov
hlt
add
cmp
mov
xchg
or
cmps
bound
mov
pop
aam
xor
sub
popa
retf
jns
jno
mov
jmp
and
in
les
rcl
pop
lea
xchg
shr
mov
adc
(bad)
fcmovbe
sub
xchg
in
xchg
mov
scas
xchg
mov
aad
inc
xchg
cwde
outs
jns
repnz
mov
les
movs
pop
mov
jp
scas
fidiv
call
imul
fcom
pop
je
dec
std
mov
xlat
xor
mov
push
jge
mov
push
mov
(bad)
sbb
aaa
inc
jp
lods
bound
call
mov
add
dec
inc
shl
icebp
bound
test
jmp
add
es
aam
pop
jg
cmp
xor
mov
or
and
les
mov
imul
xchg
add
sub
mov
jae
test
push
or
mov
test
mov
sub
mov
mov
(bad)
hlt
icebp
pop
dec
xlat
sar
rcr
inc
mov
sub
push
add
push
mov
call
jno
dec
jo
test
inc
mov
push
pop
js
out
sub
in
sahf
leave
jbe
jge
imul
ds
xchg
jno
sub
pop
fs
pop
sub
adc
jmp
scas
bound
popf
inc
leave
sar
or
xchg
jl
hlt
jb
cwde
pop
fadd
sbb
jp
loop
pop
cdq
mov
push
sbb
in
lea
lods
push
mov
xor
pop
jle
aaa
shr
inc
cwde
jbe
test
dec
inc
out
cmp
jg
stc
arpl
in
lea
dec
pop
popa
mov
add
bound
pusha
xchg
xchg
xchg
xchg
sbb
add
inc
mov
mov
add
jecxz
xchg
fisttp
std
js
neg
ins
fst
xchg
dec
mov
fcmove
pusha
stos
cld
fcomp
in
and
cmps
mov
jmp
cmp
ins
bound
fidivr
arpl
push
jecxz
push
in
js
popa
mov
and
inc
ja
push
jne
push
mov
mov
sub
push
mov
cmc
mov
scas
pop
jbe
das
ins
cmp
cli
xor
in
test
jno
in
add
scas
inc
add
sti
xor
fdiv
nop
cli
jg
and
fcmove
adc
jle
mov
inc
cdq
push
stc
pop
call
inc
lock
das
(bad)
nop
(bad)
out
push
mov
mov
sub
push
adc
jae
ficom
daa
in
mov
pop
cmp
ins
aad
icebp
jo
xchg
jp
xor
add
pop
fdivr
add
fiadd
sahf
les
test
test
adc
jbe
add
xchg
and
push
movs
xor
xor
or
test
inc
mov
std
dec
mov
push
mov
jae
fidivr
push
lods
or
or
and
jmp
inc
js
mov
cs
(bad)
(bad)
iret
and
cs
mov
imul
sub
jno
push
dec
in
fiadd
(bad)
dec
(bad)
into
arpl
xchg
sub
ds
scas
dec
mov
jecxz
push
scas
or
pop
les
mov
loope
jp
sahf
in
in
push
jecxz
retf
inc
sub
scas
or
scas
pusha
retf
fisubr
push
sahf
ror
sahf
out
sub
mov
mov
xlat
jne
add
scas
loope
mov
adc
lods
shl
or
(bad)
xor
xchg
test
outs
retf
jle
xchg
sub
add
adc
aam
scas
xor
push
add
pushf
adc
pushf
pusha
in
cmp
sbb
add
push
or
(bad)
mov
and
lss
jno
sbb
(bad)
or
sbb
sbb
jo
jnp
inc
mov
jb
xchg
cmp
dec
cmp
test
scas
push
or
mov
out
addr16
push
cli
movs
mov
fadd
and
xchg
jo
out
fnstsw
ret
into
and
inc
mov
jne
xchg
mov
cli
xor
nop
jmp
push
sti
sub
inc
mov
test
test
and
cmps
jle
xor
test
mov
int3
pop
jno
cwde
retfw
int
push
cmc
or
dec
pushf
out
or
adc
inc
out
icebp
ins
mov
push
mov
push
movs
push
test
sahf
and
loope
adc
scas
pop
xchg
mov
mov
pop
sub
and
pop
imul
mov
test
inc
sub
(bad)
cmp
jno
das
jnp
rol
ins
mov
leave
imul
arpl
xchg
sub
call
adc
jmp
mov
int
dec
pop
fwait
(bad)
cld
hlt
push
pop
call
dec
push
cmp
pop
and
push
icebp
push
push
in
jge
and
fs
xor
repz
xor
sub
loopne
neg
adc
shl
inc
xchg
data16
xor
inc
sub
lock
sub
std
stos
xchg
ror
xor
sbb
int3
mov
add
shl
test
sub
lahf
adc
xlat
or
add
xchg
adc
cmps
mov
imul
or
push
jle
mov
cmps
cmps
addr16
sbb
sub
dec
adc
lods
push
mov
sbb
sbb
scas
(bad)
dec
mov
xchg
pop
jae
mov
xor
enter
popf
sti
ret
jmp
inc
push
(bad)
adc
test
or
lds
loope
mov
jmp
xchg
into
(bad)
js
leave
or
add
xor
cmc
xchg
sbb
fist
dec
dec
mov
xor
pop
je
(bad)
mov
ja
add
sub
sbb
push
or
std
popf
pop
cdq
xchg
mov
dec
mov
test
das
loope
and
and
mov
movs
es
lahf
sub
mov
adc
js
xlat
sub
js
cmp
clc
adc
cmps
mov
lahf
loopne
adc
mov
and
movs
mov
mov
or
idiv
and
ud0
retf
iret
sbb
cmp
in
dec
mov
retf
pop
jmp
mov
pop
xor
xlat
retf
icebp
dec
int3
test
fist
mov
(bad)
xchg
loop
sbb
mov
or
xor
or
inc
xchg
jecxz
fmul
add
adc
pop
fs
push
cs
and
neg
lods
push
push
xchg
(bad)
fwait
mov
retf
adc
mov
int3
ins
add
mov
jo
mov
ins
cmp
jno
in
sahf
and
div
cmps
imul
aas
fadd
cmp
push
pop
sbb
movs
je
push
pusha
iret
or
dec
stos
and
ror
ds
cmp
sub
mov
mov
inc
sti
shl
movs
adc
imul
pop
mov
(bad)
inc
adc
test
imul
dec
sub
stos
leave
ss
(bad)
or
int
cwde
push
push
adc
dec
and
xchg
inc
test
add
(bad)
push
mov
pop
jne
jne
cs
daa
jno
dec
push
mov
lea
or
and
mov
cmps
cmp
sbb
and
cmp
sub
and
rol
sbb
jge
js
mov
dec
daa
and
add
sbb
adc
sbb
in
inc
mov
ins
push
repz
cmp
mov
mov
dec
rcl
add
cwde
or
inc
push
dec
xor
or
(bad)
aad
popa
mov
add
(bad)
fadd
jno
xchg
jae
lods
add
jo
and
fild
inc
lods
out
mov
test
xchg
xchg
mov
out
xchg
int3
sti
pop
aas
(bad)
imul
daa
loopne
inc
or
fist
jge
stos
ds
ins
mov
movs
sub
jg
fdivr
mov
adc
add
test
dec
xor
push
add
inc
xor
adc
and
mov
mov
cld
fcmovnu
dec
mov
mov
fldenv
pop
mov
pushf
mov
or
jmp
setns
dec
cmps
test
shl
lods
sub
lahf
sbb
fnsave
addr16
shl
(bad)
gs
sbb
jge
neg
dec
das
ins
je
cmp
in
sbb
mov
mov
pop
xchg
ins
test
sar
jo
fst
popf
dec
xlat
icebp
neg
fnstcw
push
fisub
inc
(bad)
addr16
jae
ret
ja
or
pop
or
dec
fisubr
shl
loope
jnp
inc
retf
mov
dec
int
inc
scas
mov
mov
iret
mov
pop
into
xchg
movs
mov
lds
retf
push
mov
dec
fs
(bad)
fistp
imul
adc
jmp
or
shl
sub
mov
(bad)
loopne
popf
cmp
dec
xor
out
pop
retf
addr16
pop
and
pop
cmp
scas
dec
xchg
pusha
jae
shl
dec
inc
cmp
mov
push
dec
fucom
pop
popa
adc
out
retf
ret
push
cmps
test
pop
fst
(bad)
and
xchg
(bad)
pop
int
mov
inc
xchg
push
xlat
lock
jecxz
sti
imul
outs
add
jne
leave
test
xor
add
adc
sahf
adc
aaa
push
ret
repnz
pushf
sahf
push
retf
je
imul
pop
mov
xchg
call
test
mov
in
sub
add
scas
cmp
jae
cmps
mov
cld
cmps
xchg
or
popf
mov
cmp
xor
add
dec
sub
popa
jl
xor
mov
test
xor
lds
dec
push
mov
jg
pop
stos
xchg
mov
dec
pop
mov
jge
jl
popa
clc
pop
sub
out
test
cmp
sbb
(bad)
lods
cmps
sbb
popa
xchg
cmp
sbb
xchg
or
enter
sbb
mov
and
bound
(bad)
test
addr16
fs
mov
xor
or
into
test
xchg
push
push
stos
cmps
xchg
(bad)
mov
sub
add
cmp
ror
or
mov
retf
and
cld
jbe
dec
and
lds
and
rcl
cli
pop
dec
repz
loopne
imul
ret
std
int3
xchg
sti
mov
mov
push
jo
mov
push
(bad)
loopne
mov
(bad)
xor
jge
mov
fs
fistp
mov
xor
cmp
retf
add
mov
mov
shr
rcr
sub
shl
imul
popf
ss
mov
iret
cmc
das
jne
mov
cld
test
push
xchg
dec
jo
inc
mov
push
xor
fs
jbe
mov
push
push
fst
test
scas
jne
test
adc
dec
push
jg
adc
add
mov
jle
jae
pusha
or
sti
add
or
movs
jg
imul
xchg
in
cmp
(bad)
popa
stos
out
std
inc
inc
outs
hlt
push
lea
xor
scas
(bad)
loope
mov
sub
enter
arpl
das
scas
xchg
fld
xor
or
popa
pop
int
mov
(bad)
add
sub
add
in
dec
inc
ins
pop
mov
jne
stc
fwait
jmp
mov
pop
sub
jmp
pop
fs
fistp
xor
leave
rcr
inc
cdq
outs
test
cmp
or
stos
shr
jmp
jmp
or
lds
pop
push
cmp
aam
call
adc
sbb
mov
fimul
in
daa
adc
iret
aad
push
jno
sbb
sub
je
imul
sbb
mov
add
test
pop
mov
cmp
mov
je
and
jge
out
xchg
mov
jmp
or
enter
cdq
push
mov
test
jae
xor
dec
cmp
outs
in
outs
xor
push
lock
xlat
(bad)
xchg
rol
add
out
test
mov
sub
xchg
sub
out
(bad)
dec
push
adc
int
shl
mov
aam
cmp
repz
xor
mov
sbb
arpl
test
ins
aaa
scas
je
adc
nop
xchg
sub
cmps
jae
dec
pop
xchg
das
push
movs
or
or
iret
xor
lock
fsub
adc
and
shr
enter
sbb
xor
in
sbb
movs
dec
aam
adc
retf
(bad)
cmp
(bad)
gs
mov
shl
(bad)
stc
rol
out
ds
scas
sub
jp
das
jo
sar
shr
sbb
or
adc
pop
jae
mov
cmp
sub
sbb
les
dec
int
sbb
adc
sub
cwde
sbb
loope
xor
mov
mov
inc
mov
xor
cmp
or
int
(bad)
loope
adc
jbe
daa
(bad)
inc
and
outs
fmul
(bad)
(bad)
scas
add
sbb
leave
add
inc
cmp
jge
sbb
or
inc
dec
mov
(bad)
shl
xchg
dec
cmps
xlat
push
arpl
sub
add
and
rcr
lods
test
stc
xchg
popf
pop
ss
sub
andps
movs
push
loope
in
pop
pop
xor
pop
push
fidiv
dec
add
aas
jle
sub
push
mov
pop
test
pop
loope
mov
movs
inc
push
arpl
or
adc
loope
mov
gs
ret
retf
scas
pop
sbb
cmp
xchg
adc
stc
add
or
out
fimul
jp
jno
js
push
mov
push
jbe
ret
int
mov
fs
movs
bound
xlat
lds
in
push
fwait
popf
daa
cmp
inc
push
xchg
cmc
leave
aam
xchg
mov
mov
dec
sbb
mov
mov
jb
jae
or
mov
push
dec
push
(bad)
xchg
cmp
(bad)
mov
adc
pop
inc
inc
jae
ret
or
jae
in
jg
sbb
je
jo
ins
test
ins
mov
call
ret
or
je
jmp
ret
push
adc
sub
aam
scas
or
cmps
nop
mov
or
pop
cdq
scas
rcl
(bad)
mov
imul
int3
aam
nop
xchg
or
or
ss
mov
xchg
in
mov
pop
dec
or
lods
outs
dec
lea
and
ins
sub
mov
fucomi
mov
pop
or
mov
jns
in
adc
stc
xchg
mov
mov
jmp
pop
int3
mov
sar
daa
jne
(bad)
xor
inc
cwde
push
and
lds
adc
or
stos
repz
adc
mov
add
retf
lods
add
mov
jo
or
pushf
out
gs
cmp
je
xor
xor
or
mov
push
mov
pop
mov
pop
test
mov
cld
pop
jmp
faddp
fucom
mov
loope
jle
dec
lods
mov
and
xchg
push
sub
mov
pop
icebp
cmp
nop
or
mov
mov
call
mov
dec
fs
push
aam
inc
sahf
sbb
xchg
fidiv
inc
mov
jle
dec
sub
div
xchg
push
nop
rcl
and
arpl
shl
xor
or
cmp
sar
pusha
scas
nop
inc
ins
xchg
jb
cmp
lahf
rcl
daa
sti
mov
cmp
mov
scas
add
mov
out
pmuludq
out
es
jle
out
loopne
xor
gs
cwde
xor
icebp
mov
imul
push
and
lahf
adc
mov
lods
jge
cdq
shl
mov
cmp
xchg
and
mov
adc
ja
push
clc
lea
mov
cmp
mov
in
dec
sub
mov
push
in
and
clc
sub
dec
jbe
adc
mov
lock
loopne
xchg
sbb
mov
imul
lds
add
adc
mov
pop
outs
mov
push
test
test
(bad)
mov
inc
sub
pusha
pop
ret
leave
loopne
test
ret
(bad)
retf
mov
jmp
mov
push
mov
into
outs
das
fisub
jnp
aaa
(bad)
fadd
or
fstp
loope
lahf
jecxz
lock
inc
add
pop
xchg
mov
js
jle
(bad)
sbb
fs
std
adc
in
push
adc
dec
lea
jle
clc
xchg
out
in
push
add
rcr
jae
or
pop
imul
inc
cmc
and
scas
push
adc
add
mov
sub
sti
adc
inc
push
lahf
out
or
ret
jns
sbb
dec
shr
cs
xor
push
cmp
dec
push
movs
pop
sbb
fdiv
cmp
fwait
bound
jl
dec
xchg
test
repz
cdq
mov
add
inc
cld
fld
mov
add
sbb
and
int3
or
movs
mov
outs
sub
hlt
dec
aas
jae
jecxz
push
nop
int3
sbb
or
pusha
cmp
stos
push
neg
and
jecxz
cdq
fimul
mov
repz
fimul
jbe
xor
cmovns
jmp
stos
mov
pop
sbb
or
mov
hlt
cmps
add
pop
dec
lahf
dec
inc
adc
dec
imul
pop
retf
and
xchg
push
mov
leave
or
ret
add
retf
mov
pop
movs
(bad)
xchg
ror
enter
cmps
jle
jo
jnp
ds
test
jbe
jo
cmp
call
xor
rcl
js
xchg
inc
pusha
mov
jmp
sbb
push
jmp
scas
cmp
or
push
inc
inc
je
cdq
jo
pusha
int
bound
fcomip
mov
pop
jl
fisttp
cmps
dec
push
inc
jmp
sub
pusha
push
sub
and
sub
jne
lds
iret
push
cwde
mov
in
pusha
or
nop
inc
fucomi
fidiv
mov
xchg
mov
shl
(bad)
div
scas
imul
jne
mov
jp
cmp
cmp
mov
ins
jo
repz
cdq
sbb
mov
sbb
xchg
xor
add
adc
mov
cmp
sub
bound
sahf
cld
jne
(bad)
dec
fdiv
xor
je
dec
not
rcl
mov
xchg
mov
nop
sub
dec
xchg
adc
out
ins
aas
lds
mov
sbb
lahf
xchg
cmp
aam
ror
push
scas
push
gs
jne
and
aam
jne
(bad)
shl
pop
scas
cmovbe
dec
scas
mov
(bad)
mov
fwait
sbb
aad
mov
aas
out
outs
sbb
ret
mov
outs
aaa
inc
dec
xchg
scas
push
(bad)
cmp
mov
push
movs
xchg
nop
dec
ror
push
aas
fstp
and
push
jbe
push
lds
cwde
push
and
and
xchg
mov
jns
cdq
pop
mov
sub
add
fistp
stos
add
push
dec
int
mov
scas
mov
enter
outs
into
jne
daa
add
out
fstp
mov
mov
(bad)
or
lock
jb
and
rol
mov
inc
mov
shl
aas
popf
icebp
mov
mov
js
sti
lahf
sbb
(bad)
push
or
pop
ret
cwde
mov
sti
lock
imul
cmp
jmp
and
daa
mov
cmps
or
push
sbb
mov
cmp
lods
xchg
(bad)
mov
xor
inc
cmp
test
add
cs
cmp
call
adc
fiadd
ja
mov
gs
mov
ins
mov
das
lahf
test
mov
sub
inc
lds
add
cdq
jecxz
or
(bad)
sbb
cdq
rcl
mov
(bad)
cmp
xchg
sub
int
jl
int3
jo
sub
shl
lock
ret
outs
in
ds
retf
mov
mov
sub
pop
or
jl
fistp
je
and
or
push
jmp
and
enter
in
or
addr16
mov
sub
adc
lods
popa
(bad)
pop
sbb
call
es
sub
je
fdecstp
and
xchg
push
test
mov
sbb
add
out
pop
cmp
cld
sbb
mov
(bad)
out
scas
pop
push
add
pop
add
scas
bound
fdivr
fdivr
jb
fucom
xchg
gs
push
rcl
mov
out
stos
adc
cmp
div
(bad)
dec
cs
clc
and
sub
mov
xchg
std
gs
repnz
xor
push
adc
mov
jp
mov
adc
fldenv
xor
cmp
jle
jl
push
cs
fild
(bad)
and
loopne
stos
outs
dec
push
ret
stos
bound
mov
mov
mov
test
pop
adc
inc
lock
stos
push
cmp
add
adc
out
sub
cli
xchg
mov
mov
push
pop
lahf
pop
adc
jne
outs
mov
mov
es
outs
iret
mov
jo
les
ins
ret
cmp
lods
sub
outs
and
xchg
inc
fld
lods
shr
fcomp
jns
and
mov
retf
inc
out
cmp
ss
fsub
adc
lea
pop
sub
fstp
mov
xchg
loop
imul
fucom
xor
push
mov
fist
sbb
call
test
outs
push
pop
jo
dec
mov
out
mov
cmp
shl
punpckhbw
rcl
jl
jnp
fimul
sbb
aas
inc
pop
bts
ds
(bad)
jo
mov
cli
enter
pop
and
sbb
out
ins
outs
ror
fwait
sub
dec
les
fwait
dec
in
inc
sub
pop
adc
test
xchg
ret
cdq
cmp
sbb
mov
jns
and
ins
(bad)
and
jns
mov
fmulp
fucom
mov
mov
add
sub
sbb
mov
retf
push
out
(bad)
shl
cmp
mov
inc
mov
and
pop
fsubp
jmp
sbb
cwde
pop
stos
sub
sar
sbb
mov
push
pop
xor
mov
jne
mov
mov
push
sbb
setnp
dec
sbb
jo
xchg
and
jmp
lods
(bad)
sbb
cs
mov
xchg
xchg
cmp
push
aaa
pop
lods
mov
mov
add
inc
dec
or
push
enter
mov
xor
jl
xor
imul
rcr
jbe
aam
es
jecxz
push
push
fisub
dec
out
dec
int
inc
loop
cdq
faddp
addr16
pop
cmp
leave
mov
stos
repz
shl
call
or
sub
popa
imul
add
js
mov
sub
mov
and
in
sbb
cmp
shl
jnp
adc
arpl
mov
mov
push
mov
pusha
add
pop
add
xchg
jne
sar
or
jae
sub
dec
repz
dec
iret
lahf
(bad)
sbb
sub
rcl
rcl
xchg
ja
xchg
sbb
push
scas
xchg
call
cmp
and
pop
fs
movs
scas
dec
xor
call
push
cwde
test
inc
gs
fsub
popa
call
inc
lds
lea
ret
inc
scas
xchg
xchg
ins
push
mov
jns
xchg
jo
pop
test
inc
push
fld
dec
loope
mov
jmp
xchg
ret
xor
fnsave
mov
dec
movs
dec
dec
sub
es
loope
push
ins
ret
sbb
dec
sub
push
xchg
cwde
cmp
cmp
into
call
adc
enter
xor
mov
cmps
neg
mov
mov
mov
xlat
into
enter
in
inc
push
clc
mov
fwait
inc
add
dec
jge
push
int
mov
xchg
jae
mov
adc
(bad)
int3
sbb
arpl
pop
cmp
mov
shl
mov
ss
dec
inc
xchg
std
rol
call
rol
cmp
jecxz
call
cdq
cmp
push
stos
mov
push
xchg
xchg
(bad)
mov
or
lds
scas
(bad)
dec
inc
loop
retf
cmp
(bad)
and
cmp
ret
pop
repz
aad
dec
xor
sub
aaa
repnz
push
add
adc
outs
daa
pop
xor
xchg
sbb
pop
sub
mov
add
jmp
xchg
dec
cmp
sub
adc
mov
cmps
sbb
or
cs
mov
or
lea
out
fistp
jg
jmp
stc
ret
inc
outs
push
retf
push
adc
push
sub
xchg
jo
std
outs
push
pop
cmp
xchg
rcr
adc
shl
arpl
add
jmp
stc
and
dec
ror
addr16
ds
xchg
fstp
les
(bad)
xchg
mov
sbb
add
jl
xor
pop
sbb
pusha
lods
jno
ret
ret
mov
jecxz
push
cmp
cmp
pop
pop
scas
inc
xchg
repnz
adc
(bad)
add
xchg
call
addr16
and
imul
jns
adc
push
inc
mov
fwait
rcr
add
shl
xor
mov
enter
mov
inc
lea
or
or
pop
adc
stc
dec
sbb
ret
rcr
(bad)
push
retf
dec
std
imul
mov
dec
add
std
test
mov
jmp
mov
add
push
cmp
inc
mov
mov
sbb
es
mov
popf
xor
mov
jg
mov
dec
shr
or
pop
sub
addr16
pop
mov
shl
and
inc
lahf
cmp
dec
fisubr
clc
pop
jle
repz
repnz
ret
pop
mov
push
aad
mov
jae
jmp
jmp
(bad)
mov
fcomi
call
nop
mov
push
mov
push
jg
xchg
inc
mov
out
scas
jbe
fld
xor
push
xlat
pop
pop
xchg
or
gs
inc
mov
aam
adc
jp
sbb
push
ja
(bad)
movs
push
sbb
cmp
mov
xchg
pop
popf
(bad)
in
in
hlt
mov
sub
cmc
in
and
pop
jns
loopne
or
mov
and
xchg
fdivr
push
jbe
int3
pop
or
mov
fcomp
cmp
xchg
lods
popa
and
fnsave
popf
xor
es
adc
adc
push
mov
xor
in
ins
out
sbb
pop
dec
push
repz
xor
mov
popa
inc
je
xchg
not
gs
les
xchg
mov
add
xor
dec
push
adc
mov
and
adc
aas
js
pcmpgtw
inc
es
scas
adc
ret
dec
sbb
fs
adc
outs
not
or
lock
add
js
mov
push
aad
sbb
pop
add
or
xchg
outs
(bad)
lock
sbb
stos
out
mov
jmp
and
jnp
sub
add
imul
(bad)
mov
retf
cmp
shr
lds
mov
mov
cmp
mov
dec
pusha
sub
sahf
test
test
cmp
add
imul
dec
fnstcw
add
popa
jmp
sbb
pop
lods
dec
mov
xchg
adc
pop
not
arpl
int3
lds
cmp
mov
ficomp
enter
test
mov
push
int
adc
inc
xor
mov
mov
(bad)
and
fcmovbe
fs
in
retf
lock
fnstcw
xor
nop
inc
inc
addr16
adc
xchg
pop
js
inc
and
fstp
jg
push
popa
dec
popa
je
dec
cmp
jge
hlt
jo
cmp
imul
arpl
mov
test
xor
xchg
jp
outs
call
test
dec
(bad)
jecxz
cmp
int
cmps
std
outs
xor
inc
ins
lock
in
shl
cmp
addr16
addr16
or
mov
or
dec
mov
mov
jb
ficomp
mov
rol
mov
adc
fucom
jmp
lods
mov
sbb
stc
sub
test
fbstp
xchg
addr16
in
inc
addr16
(bad)
sbb
mov
mov
fsubr
test
popa
mov
ins
nop
(bad)
cwde
icebp
pop
push
movs
mov
test
mov
xor
or
mov
push
pop
fmul
jle
jecxz
push
jne
jge
sub
test
ror
in
push
pushf
adc
xchg
aaa
bound
dec
mov
pusha
imul
div
cmp
gs
out
fnclex
retf
aaa
in
mov
jge
in
jge
adc
mov
loopne
mov
aad
mov
push
in
loopne
mov
and
push
jo
out
xchg
fld
sbb
sbb
std
or
mov
add
push
std
out
call
(bad)
(bad)
dec
push
xchg
pusha
pushf
stos
dec
push
adc
mov
aaa
mov
sbb
fistp
leave
pop
fs
repz
jmp
mov
mov
push
daa
and
in
adc
dec
stc
clc
fcmovne
icebp
jb
xchg
fdiv
pop
xor
fbstp
test
ins
jo
clc
repnz
movs
mov
xchg
xor
sbb
xor
or
ret
vmovups
inc
dec
icebp
aam
movs
dec
movs
ret
mov
loopne
xchg
sbb
mov
mov
movs
rcl
(bad)
es
cmp
popa
and
inc
push
hlt
cmc
into
xor
dec
or
daa
sar
mov
inc
adc
(bad)
pop
cmp
sbb
sub
sub
dec
test
jae
(bad)
xchg
pop
stos
jecxz
in
dec
sbb
mov
xor
jbe
bound
aas
sbb
jb
sahf
dec
xchg
inc
mov
mov
ins
mov
or
out
jge
leave
inc
sbb
xchg
xchg
shl
mov
mov
into
xor
pop
sub
popa
push
sbb
push
inc
push
sbb
jmp
sti
(bad)
test
xlat
ja
hlt
cwde
scas
pusha
xor
movs
test
mov
jbe
out
mov
inc
cwde
std
stos
pop
call
mov
inc
mov
sub
cwde
mov
nop
cs
xor
jle
iret
jb
fsubr
push
or
gs
jne
pop
retf
pop
jb
loopne
mov
aaa
jmp
inc
add
jae
jmp
imul
xchg
lods
pop
dec
push
xchg
push
ins
xchg
imul
push
clc
sbb
das
call
loop
loope
cli
in
or
dec
pushf
jnp
jno
pop
push
retf
out
or
pop
icebp
push
push
out
hlt
inc
fidiv
mov
inc
in
pcmpeqb
fdiv
dec
xor
aam
or
sub
fmul
xchg
daa
(bad)
fwait
adc
into
mov
inc
mov
push
sub
push
xchg
add
imul
sbb
popa
jno
addr16
or
xor
je
jbe
xchg
es
sbb
cmps
fs
mov
int
cmps
repnz
pushf
sar
add
mov
cdq
jmp
movs
rol
push
add
les
leave
sbb
sbb
dec
mov
jbe
fsubr
sub
addr16
enter
sbb
dec
or
repnz
dec
xchg
arpl
add
xchg
out
add
xchg
dec
ds
push
clc
repz
enter
add
arpl
cmp
cmps
inc
xchg
sub
add
dec
jp
and
add
ror
fcom
cmp
push
jmp
(bad)
push
stos
movs
xchg
movs
int
lds
loope
ins
push
sub
out
dec
lods
xor
sub
push
pop
sti
cmp
inc
cmp
add
mov
les
mov
adc
xor
add
sub
loopne
xchg
out
jae
jecxz
sti
adc
jo
stc
push
cmp
jmp
leave
cmp
inc
into
pushf
(bad)
into
ret
mov
pop
add
xor
inc
fisttp
pusha
or
inc
adc
jmp
sub
fisubr
mov
nop
jne
xchg
retf
lahf
fwait
das
or
outs
aam
mov
adc
imul
(bad)
movs
xchg
out
mov
clc
gs
repz
jmp
mov
inc
sub
fidivr
inc
daa
add
cmps
mov
div
or
jne
fistp
aas
mov
pop
or
jns
cdq
push
mov
loope
xchg
cdq
out
adc
pop
adc
stc
in
mov
mov
fsub
xor
mov
popf
(bad)
jns
adc
adc
cli
add
xor
lods
iret
mov
in
repz
xchg
xchg
push
rcl
pop
sub
sbb
sub
xchg
shr
mov
push
lea
mov
int
cld
out
(bad)
(bad)
and
mov
inc
in
ficom
xchg
adc
in
imul
xor
movs
jnp
pop
fadd
cmp
add
mov
js
repz
add
jo
ficomp
dec
xchg
inc
movs
cmp
sbb
sub
aam
add
adc
enter
inc
lods
rcl
jp
sbb
and
fwait
push
mov
add
cmp
dec
shl
mov
mov
xchg
adc
adc
fsub
clc
push
movs
push
xor
push
loop
jnp
ja
(bad)
icebp
in
pmuludq
mov
dec
cmp
mov
xchg
push
mov
pop
push
cld
lods
push
inc
mov
das
bound
ret
enter
xor
ret
push
test
in
sbb
aad
and
push
sbb
mov
cmp
mov
adc
enter
repz
xchg
jg
movs
cs
pop
inc
or
mov
and
inc
adc
retf
lods
jle
(bad)
test
sub
rol
xchg
pop
xlat
xor
jecxz
and
cmp
and
pop
ret
mov
mov
mov
icebp
jp
popa
into
cmp
sub
out
movs
inc
ds
or
push
inc
shl
adc
enter
fidivr
sbb
jo
cs
push
xor
or
shr
stos
sbb
adc
test
sub
mov
add
cmp
shl
xlat
mov
push
add
in
retf
in
dec
fwait
or
mov
xchg
push
cwde
pop
pop
sub
out
xchg
push
adc
rcl
xor
inc
jge
push
das
fwait
xor
jl
jbe
adc
pop
xor
cmps
ja
pop
fistp
or
(bad)
xor
outs
pop
test
shl
sbb
lods
jg
and
adc
add
xor
push
sbb
pop
and
loopne
inc
xor
mov
test
das
imul
addr16
xchg
das
jo
mov
int
push
out
xor
or
mov
fnstcw
inc
movs
(bad)
in
in
lock
(bad)
jne
mov
jns
inc
mov
dec
daa
jg
and
retf
rcr
inc
in
in
inc
jbe
into
pop
(bad)
outs
jb
pop
arpl
stc
inc
ss
jecxz
fwait
arpl
call
or
jg
fwait
mov
fnstcw
jae
ror
enter
sti
scas
test
loope
jb
fcom
dec
fmul
fnstenv
adc
mov
xchg
and
dec
das
xor
and
movs
repnz
fiadd
repnz
int
xchg
or
stc
mov
test
cmp
pop
cs
xchg
mov
stc
push
sahf
dec
das
movs
loopne
fdiv
cmps
inc
mov
sti
pusha
sub
push
jcxz
add
fnclex
and
push
add
ds
and
push
jnp
bswap
ds
(bad)
call
mov
(bad)
cld
sub
pushf
enter
push
mov
lds
mov
or
adc
fdivr
nop
cmp
(bad)
outs
(bad)
imul
movs
add
add
aaa
retf
rcr
xlat
jg
cs
out
iret
call
mov
ss
loop
adc
pop
dec
test
push
mov
and
(bad)
and
mov
cli
pusha
mov
sub
ds
clc
repz
dec
adc
scas
in
fmul
xor
jecxz
retf
in
jae
ret
jae
adc
dec
push
xchg
adc
adc
rcr
sub
fwait
je
push
inc
jo
dec
stc
jb
fnstsw
sahf
cmc
stos
imul
repz
xor
mov
pusha
in
mov
and
cs
ret
sbb
data16
or
cli
add
lds
ret
aam
data16
dec
mov
hlt
les
cs
push
adc
nop
fimul
enter
dec
mov
or
stos
or
test
jge
sub
scas
shl
pop
jge
iret
repnz
fxch
int3
addr16
mov
jno
js
int
sub
jno
sbb
xchg
cmp
push
mov
ins
mov
and
adc
mov
or
xchg
call
xchg
mov
mov
stc
cmc
mov
out
ds
test
bound
call
mov
jp
test
icebp
xlat
repnz
jnp
dec
or
and
retf
jecxz
add
nop
add
sbb
mov
dec
pop
lahf
in
test
cwde
loop
fidiv
jns
es
xor
sub
setge
retf
fcomp
adc
or
push
adc
popf
sub
pop
jns
mov
fnsave
cdq
dec
jae
or
pop
scas
jo
test
loopne
fidiv
mov
inc
aaa
out
outs
and
jl
adc
loop
out
pop
and
mov
inc
or
cmp
jecxz
push
aaa
xor
and
xchg
jmp
into
out
and
in
mov
fsub
(bad)
mov
xchg
call
mov
and
stos
sbb
pop
out
xchg
icebp
ds
ret
(bad)
stc
push
inc
or
ror
sahf
mov
icebp
stc
les
xchg
jo
out
pop
jmp
xor
dec
lods
cmp
fild
std
sbb
add
out
std
je
push
ficomp
mov
pop
repz
and
in
mov
push
jmp
mov
jg
shl
out
in
mov
xlat
scas
sahf
ins
clc
xor
ins
ret
xchg
pop
xchg
mov
push
popf
out
add
dec
and
ins
lahf
pop
test
xor
mov
repz
inc
inc
(bad)
push
dec
mov
jbe
test
jns
inc
cmps
call
xor
inc
loope
push
nop
call
xchg
sub
mov
pop
inc
outs
pop
outs
or
cmp
pop
sub
mov
cmp
xchg
xchg
lock
ret
shr
and
push
or
dec
mov
sub
mov
leave
bound
sub
add
idiv
gs
jbe
ins
imul
adc
out
outs
test
retf
push
xchg
mov
fsubr
inc
sub
and
sti
adc
adc
xchg
(bad)
pop
jp
test
xchg
dec
xchg
mov
or
jno
mov
sbb
or
jmp
mov
es
pop
xchg
in
jno
lds
xchg
cmp
push
in
jmp
(bad)
adc
dec
xor
jle
out
xchg
aas
outs
mov
add
xor
or
mov
adc
cmp
mov
jne
cdq
imul
jbe
call
inc
shl
pop
or
mov
ss
out
adc
ds
or
and
addr16
sub
pusha
mov
stos
jae
mov
(bad)
cmp
adc
push
sbb
fadd
lea
imul
in
pop
out
mov
sub
(bad)
cmp
push
lahf
and
cmc
add
repnz
fisub
int3
cdq
(bad)
imul
out
mov
loope
clc
lds
dec
lock
pop
(bad)
fcomp
sbb
pop
(bad)
sub
lods
jbe
dec
enter
test
sbb
dec
pop
ret
mov
(bad)
jmp
(bad)
data16
and
test
outs
sub
or
retf
inc
push
push
sbb
outs
aaa
and
cli
mov
push
test
sub
mov
sub
mov
sbb
jns
stos
fsubr
jb
fsubr
sub
scas
inc
or
fst
mov
jns
sbb
cmp
sbb
or
pop
cdq
out
and
aas
lds
fstp
ret
in
mov
push
mov
pop
sar
sub
test
cmc
push
jmp
xchg
add
mov
jg
mov
sub
cld
sbb
test
sub
in
lock
mov
test
jmp
lods
lea
lock
jmp
or
mov
repnz
sub
in
movs
mov
inc
out
std
(bad)
mov
inc
and
mov
das
push
adc
call
sub
in
ins
rcl
mov
mov
mov
cmp
mov
les
(bad)
adc
adc
cmp
mov
sub
out
jl
js
cmp
retf
clc
add
std
aad
fst
arpl
xchg
mov
bound
pop
xor
cmp
xchg
and
xor
fwait
mov
pushf
movs
mov
jns
out
outs
inc
and
mov
nop
mov
inc
rcr
push
fisttp
sub
das
sub
push
inc
adc
addr16
push
push
dec
jl
jnp
test
cmps
sbb
sbb
outs
int
ins
shl
movs
push
mov
cld
fist
test
stc
mov
ja
push
add
jb
pop
sbb
loope
mov
jns
clc
ret
repz
movs
dec
xchg
and
fistp
sar
jno
xchg
push
xor
adc
push
pop
push
scas
adc
jecxz
das
jno
cmp
pop
es
cmp
or
jmp
mov
jnp
stos
js
(bad)
in
ss
push
test
outs
and
push
sbb
sub
sar
mov
mov
js
bound
movs
mov
test
pop
pop
xor
mov
pusha
call
jo
adc
adc
dec
xlat
ja
pop
jae
ins
or
(bad)
aad
(bad)
in
lods
mov
mov
push
pop
dec
and
cmp
mov
inc
add
xchg
jno
push
into
mov
mov
sub
jbe
xchg
jg
in
mov
ret
or
mov
xor
inc
lahf
cs
xor
jmp
push
dec
in
lods
out
stc
dec
je
mov
and
mov
leave
xor
adc
mov
cdq
pop
push
jno
cwde
xor
sahf
or
cmp
rol
push
xchg
test
add
ror
mov
cmps
or
or
dec
movs
fstp
in
jg
push
out
mov
ss
jecxz
or
adc
retf
sbb
or
movs
push
aas
call
call
stc
fs
and
cmp
pop
or
pop
xor
rol
cmps
jmp
imul
mov
adc
shl
cdq
or
cmp
or
popa
push
cmps
retf
xchg
idiv
mov
popa
cwde
pop
cmp
pop
pop
std
dec
cvtps2pd
(bad)
mov
in
mov
sahf
fnstsw
add
frstor
sbb
leave
sub
retf
pop
cmp
hlt
or
xchg
movs
xlat
inc
sbb
scas
dec
rcl
mov
sti
sub
aas
push
ret
adc
clc
jge
xchg
aad
fistp
out
int
jnp
xchg
push
mov
and
aam
dec
xor
add
enter
push
in
cdq
or
es
mov
sub
jne
int
repz
loopne
retf
test
movs
retf
mov
and
aaa
fcmovbe
jecxz
int
stos
fdivp
(bad)
or
cmp
dec
retf
or
test
cwde
pop
and
jmp
mov
sbb
push
xchg
sbb
sbb
jmp
mov
test
aam
xchg
fisttp
mov
cwde
cld
daa
retf
(bad)
or
push
sub
inc
mov
pop
jge
loop
pushf
shl
pop
out
jmp
sahf
and
jmp
unpckhps
lods
jae
mov
dec
not
push
mov
(bad)
sti
push
or
dec
jmp
or
aam
ret
and
xor
and
cmps
(bad)
pop
mov
(bad)
lock
mov
inc
pop
pop
jmp
mov
test
sub
cmp
lahf
je
and
sub
xchg
bound
xchg
or
outs
aad
lods
mov
out
pop
adc
lds
int3
sbb
cmp
or
or
cs
mov
sbb
and
inc
cld
sub
in
cmp
inc
je
out
dec
mov
(bad)
cmp
sub
shr
and
or
add
mov
movs
fisubr
jecxz
popf
movs
retf
xor
and
cmp
hlt
shr
cs
out
lock
movs
pop
into
or
pop
fistp
mov
sub
out
and
gs
es
je
ds
daa
push
loope
add
dec
cmps
sbb
push
jne
jmp
cmp
or
or
jg
mov
repz
pop
cs
addr16
pop
repz
dec
ret
loope
cmp
sbb
pop
jae
test
inc
or
fild
mov
or
mov
mov
les
stc
xor
fs
mov
dec
int
dec
dec
fwait
movs
cmp
xchg
stos
mov
dec
pop
idiv
loop
icebp
adc
mov
and
stc
push
inc
adc
in
and
sub
in
(bad)
popf
mov
xor
fcom
or
fdiv
mov
js
(bad)
cmp
sub
jmp
test
jg
adc
jne
xor
push
push
nop
popf
rcr
xchg
mov
loope
inc
mov
fnstenv
cmc
push
leave
(bad)
pop
aad
xlat
cmps
add
sub
cmp
pop
pop
push
and
push
out
sub
fild
jo
ins
pop
ret
mov
jp
popa
retf
test
cmp
cdq
ss
test
mov
cmp
and
pop
or
stos
and
outs
fisubr
sub
fcmovnu
inc
pop
shl
pop
xchg
xchg
pop
push
in
fidivr
pop
out
(bad)
leave
push
(bad)
mov
mov
into
shl
xor
lock
mov
add
sahf
push
iret
cmc
out
mov
mov
jno
pop
rol
or
lock
(bad)
shl
cmp
mov
pop
push
and
out
stos
sbb
sub
push
daa
rol
shl
inc
call
(bad)
leave
push
jge
movs
cmp
inc
test
mov
ins
imul
sub
xchg
hlt
hlt
(bad)
cld
rol
xor
in
sub
mov
stc
out
cdq
xchg
mov
das
xchg
jge
std
mov
fs
icebp
jge
xlat
adc
outs
test
retf
shl
test
mov
pop
xchg
sbb
pusha
push
xchg
nop
push
stc
sbb
bound
jo
hlt
pop
jo
rcl
pop
inc
inc
fisttp
fisttp
adc
inc
mov
add
call
inc
stos
inc
dec
out
push
jmp
idiv
push
xor
daa
lock
repz
test
xchg
push
pop
sub
mov
das
adc
xor
xchg
mov
cli
repnz
aam
mov
dec
jo
dec
dec
ins
pop
outs
pop
xchg
lock
inc
mov
out
xchg
adc
jp
and
imul
and
mov
es
push
lods
lods
or
jg
scas
ja
adc
out
inc
movs
mov
scas
retf
mov
mov
fadd
stos
shl
mov
mov
jb
popf
push
pop
xchg
or
adc
cmps
out
mov
jl
scas
in
xchg
ror
ins
aaa
dec
mov
in
repz
sbb
mov
ss
mov
leave
movs
jne
test
in
pop
arpl
test
test
test
ja
sub
and
inc
fist
mov
sbb
ins
test
popa
sub
fidiv
adc
mov
test
jae
loop
add
ja
xchg
sub
cdq
jl
pop
xchg
js
mov
rol
mov
pop
ins
(bad)
mov
mov
mov
test
sbb
cmp
and
mov
scas
je
adc
ret
or
inc
mov
aas
movs
jmp
cmp
mov
push
cmps
out
jecxz
iret
dec
add
adc
fcmovnu
jg
mov
cmp
cmps
dec
sbb
mov
enter
pop
xchg
ins
mov
fnstenv
shl
in
imul
jb
xor
or
fadd
popa
adc
je
(bad)
jns
outs
lods
lock
test
lods
int3
leave
out
xlat
ss
sbb
stos
das
shl
ja
dec
push
mov
xor
int3
mov
xchg
mov
xchg
pop
sub
ror
shl
sahf
cwde
sub
lock
cli
lahf
aad
push
call
jno
jnp
lods
cmps
mov
mov
loop
sub
sbb
jae
out
lods
leave
dec
rol
out
fldenv
mov
mov
pop
pop
mov
sbb
in
mov
mov
xor
repz
mov
xchg
add
mov
scas
(bad)
js
sub
outs
ror
out
in
cwde
je
jmp
mov
push
mov
dec
inc
fnstsw
(bad)
fisttp
mov
dec
scas
dec
dec
mov
mov
sub
loopne
mov
outs
or
add
stos
mov
pop
fs
sbb
arpl
xor
mov
(bad)
leave
andps
iret
fidivr
jno
stos
ins
push
shl
fmul
mov
xor
aad
sbb
dec
cmp
xor
into
nop
adc
push
inc
js
(bad)
mov
(bad)
or
lods
ds
and
sbb
fwait
dec
mov
xor
xor
shl
(bad)
jge
aad
inc
mov
and
ss
mov
cmp
inc
sub
retf
xchg
jg
jne
jg
cmc
xchg
stos
retf
xlat
pop
test
les
jmp
push
push
lds
pushf
(bad)
in
xlat
cmps
(bad)
push
rol
je
(bad)
sti
pop
pop
adc
inc
pusha
pop
(bad)
imul
enter
neg
cld
retf
popf
out
loope
lahf
mov
out
ss
in
add
xlat
mov
xor
aam
mov
call
jae
daa
and
in
lods
mov
test
mov
rcr
cmps
jns
xchg
ret
and
mov
and
mov
nop
dec
push
stc
repz
in
and
in
push
or
ss
mov
lods
xor
mov
jno
imul
push
popa
dec
fldcw
mov
int
xor
and
mov
mov
sbb
mov
dec
(bad)
iret
pop
mov
jno
shl
es
dec
mov
mov
ss
sbb
aas
cmp
lds
cmp
push
enter
push
xor
icebp
fwait
iret
je
dec
mov
adc
push
lds
inc
je
out
add
jmp
push
and
inc
les
cmp
dec
push
rol
xor
addr16
or
adc
cmp
jno
jne
movs
lahf
mov
xchg
ror
inc
xchg
mov
(bad)
rcr
sti
or
in
in
pusha
sub
fadd
fimul
xchg
and
ret
clc
ds
dec
sbb
cmp
mov
ret
call
aaa
sahf
pusha
pop
mov
(bad)
xchg
mov
call
les
dec
jno
out
loope
adc
cs
push
pop
loope
fwait
pop
mov
mov
adc
or
cmp
stos
outs
or
cmp
mov
jb
jg
inc
div
imul
mov
jle
ret
xchg
adc
stc
push
push
iret
xor
hlt
icebp
adc
push
in
test
repnz
les
push
push
cmp
mov
call
int3
jb
setno
lods
dec
aaa
frstor
dec
test
inc
popf
je
movs
jmp
ins
and
push
xchg
push
test
loope
mov
push
pop
loopne
sub
xchg
cmps
lods
sbb
or
inc
add
retf
dec
mov
push
(bad)
jmp
cdq
mov
imul
pop
mov
add
in
add
and
scas
retf
jne
jg
push
push
mov
js
cdq
mov
retf
or
mov
mov
mov
and
inc
cmp
(bad)
adc
push
mov
aas
stos
and
ffreep
pop
dec
das
stc
loope
pop
jmp
cmp
cmp
aad
and
adc
rol
mov
out
mov
ret
loopne
lods
xor
pop
inc
xchg
mov
sahf
xor
mov
pop
lds
push
xchg
retf
repnz
xchg
scas
mov
push
mov
xor
xor
and
xchg
cs
inc
pop
or
(bad)
jle
adc
inc
jne
retf
mov
mov
stos
jmp
sbb
add
test
cdq
ror
scas
test
jp
jle
adc
inc
nop
push
fnstenv
sub
sbb
mov
sahf
mov
dec
pop
or
xor
out
inc
std
paddd
jns
jmp
mov
push
in
cld
inc
cmp
push
lock
das
push
out
mov
cld
imul
or
in
shl
mov
rcl
and
inc
(bad)
addps
out
mov
hlt
icebp
and
dec
xor
cdq
fisubr
pop
fs
mov
movs
fld
push
repnz
jecxz
dec
mov
sbb
nop
sar
mov
cmc
and
xchg
test
call
shl
sbb
xor
add
push
add
add
fild
rol
xlat
leave
ins
addr16
mov
jno
fcom
jnp
repnz
mov
scas
dec
pop
cmp
dec
mov
mov
dec
lods
sub
add
scas
movs
push
ss
out
cmp
cs
sti
(bad)
sti
sti
in
adc
mov
pusha
mov
(bad)
or
call
test
add
push
cmp
test
(bad)
push
mov
or
or
pop
push
mov
and
popa
out
iret
ret
add
(bad)
aad
mov
repz
add
sbb
pop
hlt
add
jbe
pusha
daa
call
retf
or
adc
xchg
cmp
or
aad
sub
sub
cs
outs
xchg
jmp
adc
add
jl
pop
adc
cmp
pop
in
jae
add
mov
ss
jbe
adc
jmp
xchg
mov
or
out
ds
jp
mov
cdq
dec
adc
push
xor
pop
sar
ins
sbb
jns
lea
(bad)
int3
mov
int3
fidiv
sub
push
xchg
and
jbe
sub
sub
xchg
pop
out
adc
imul
mov
outs
mov
fldln2
sub
out
iret
mov
xchg
das
arpl
pop
in
inc
sub
jmp
sahf
call
mul
dec
pop
jmp
sbb
jge
loope
mov
pushf
jge
fist
cmp
cmp
jns
jne
stos
addr16
dec
jb
clc
cli
add
outs
in
or
push
cmps
sub
push
(bad)
loopne
int3
ss
sub
add
mov
dec
inc
mov
mov
add
aad
nop
icebp
cli
adc
pusha
iret
outs
jae
dec
aas
or
leave
mov
pop
mov
daa
jo
push
xchg
sti
idiv
les
jns
scas
div
mov
dec
mov
rcr
or
aas
sbb
pop
stc
push
mov
(bad)
out
sbb
sbb
sub
int
mov
nop
push
shl
imul
adc
mov
pop
call
jb
test
xchg
jo
push
test
(bad)
retf
xor
adc
dec
pop
lods
iret
nop
xor
or
mov
adc
(bad)
data16
test
js
xchg
inc
jae
outs
sahf
in
mov
mov
sub
cmp
cmp
or
pop
call
and
ret
mov
popf
push
fs
adc
clc
fimul
bound
dec
mov
test
pushf
aam
js
xor
rcr
and
(bad)
jmp
mov
jecxz
mov
pop
ret
ret
lds
adc
jge
out
movs
fadd
jg
pop
add
sub
repnz
inc
add
xchg
jns
call
jle
push
test
and
dec
jl
jnp
add
lods
sbb
jno
popf
jae
aas
xchg
pop
icebp
adc
push
inc
dec
mov
fidivr
or
add
add
dec
shl
movs
jp
lock
mov
call
mov
pushf
enter
add
js
jle
jo
dec
mov
sub
iret
cdq
mov
push
jp
in
stc
push
or
dec
cdq
ret
add
cdq
scas
pop
push
out
div
add
cmp
movs
lods
popf
out
out
xchg
xlat
fldenv
mov
sbb
inc
aad
out
inc
xchg
pop
fs
enter
mov
pop
mov
and
xchg
mov
loope
mov
ret
push
pop
fimul
inc
fs
mov
test
(bad)
jmp
test
outs
cmp
xchg
call
fcmovb
adc
cmp
or
mov
push
call
dec
scas
out
pushf
cmc
pop
jge
mov
inc
push
pop
add
push
mov
xor
fld
xor
add
out
(bad)
dec
aad
imul
or
jmp
and
cdq
icebp
fcomp
mov
add
not
dec
pop
pop
adc
and
inc
jp
rcl
push
push
pop
jne
xor
adc
inc
add
(bad)
mov
and
pop
mov
jb
(bad)
jl
xlat
scas
mov
add
sti
xor
pushf
push
outs
jge
loop
push
pop
cmp
adc
sbb
or
ret
pop
pop
lea
lds
mov
(bad)
mov
cmp
mov
bound
mov
mov
mov
jae
and
push
push
or
ret
cmp
xor
xchg
xchg
pop
call
sbb
jbe
adc
in
pusha
icebp
xchg
cwde
dec
int3
movs
imul
push
fild
loope
xchg
call
retf
pop
dec
pop
nop
ror
fwait
out
call
dec
sahf
or
sbb
sub
ret
dec
xchg
inc
push
rcl
pop
cmp
les
sub
mov
or
nop
inc
push
add
sbb
movs
test
jl
fild
push
xchg
pop
popa
and
dec
retf
cmp
loopne
loopne
cmps
xchg
ss
xor
xor
out
scas
jecxz
cdq
push
jo
sub
hlt
and
pop
mov
movs
bound
mov
or
fiadd
mov
xor
jo
addr16
mov
mov
cmps
(bad)
(bad)
jp
(bad)
ror
push
test
add
xor
nop
dec
imul
and
adc
nop
push
or
push
dec
xchg
cs
shl
xchg
test
sar
shl
jp
mov
rol
cld
jecxz
in
gs
and
(bad)
aas
jle
jp
jle
scas
cmps
rcr
pop
test
push
jle
lahf
ss
pop
add
sbb
xor
cmp
imul
and
and
cmp
pop
outs
cmp
pusha
out
mov
lahf
int
cmp
mov
mov
imul
xor
retf
into
mov
pop
push
dec
cmp
and
push
call
mov
and
xlat
dec
(bad)
(bad)
xor
lods
imul
dec
dec
lahf
fdivr
pop
(bad)
(bad)
or
push
cmp
int
dec
adc
push
dec
shr
push
mov
les
mov
scas
fcom
adc
push
mov
jbe
jle
jbe
mov
lods
jbe
mov
arpl
in
lea
jmp
mov
mov
and
outs
xor
scas
popf
add
dec
sbb
and
mov
in
and
fmul
ins
test
in
mov
loop
cmp
and
sub
dec
lock
push
pop
add
mov
fs
mov
pop
(bad)
jno
out
pop
xor
add
pop
jns
sub
or
sbb
test
ins
sub
clc
mov
es
je
mul
xor
test
into
fst
pop
add
push
mov
mov
pop
sbb
movs
or
dec
xchg
push
jge
cmp
cmp
cmp
inc
xchg
xchg
adc
pop
clc
push
push
push
cs
(bad)
jecxz
pop
cmp
pop
outs
call
mov
push
pop
lods
sbb
adc
pop
ins
xor
cmp
sbb
inc
mov
enter
jbe
fwait
sub
je
or
xchg
push
sub
pusha
lods
push
xacquire
pcmpgtb
js
or
lahf
jl
repz
sbb
push
repz
inc
mov
or
fnsave
push
mov
bound
mov
je
fimul
retf
lds
xchg
retf
xchg
mov
rcr
xchg
inc
sbb
mov
jecxz
pop
repz
sub
jno
(bad)
retf
pop
push
test
ror
jns
cmp
sub
dec
dec
add
or
cld
lods
cmp
int
inc
sbb
sahf
cmc
(bad)
jecxz
shr
icebp
ss
push
jl
icebp
cmp
pop
sbb
push
outs
(bad)
mov
fsubr
sub
xor
scas
repnz
push
fneni(8087
or
std
adc
or
movs
outs
retf
fsub
(bad)
icebp
jge
mov
jo
xchg
jne
or
scas
mov
push
mov
and
(bad)
icebp
mov
xchg
mov
cwde
sbb
push
cs
ins
mov
jge
in
sbb
repz
mov
pop
iret
dec
mov
jle
mov
cmp
jmp
test
shr
outs
retf
imul
aam
mov
pop
jmp
jle
sub
cli
xchg
popa
retf
xor
push
add
xchg
in
sahf
or
sti
(bad)
fidivr
mov
pop
inc
(bad)
test
pusha
jle
lods
push
out
and
je
xor
dec
pop
loop
(bad)
push
pop
test
jae
jbe
xchg
retf
stos
cwde
jae
retf
aas
arpl
test
loopne
out
loope
sbb
mov
movs
fld
xor
xor
sti
sub
and
push
fisttp
dec
(bad)
iret
xchg
or
int
(bad)
repz
jmp
in
jbe
push
or
in
dec
and
adc
loop
cmp
retf
mov
stc
daa
loope
fcomp
adc
sub
ret
and
xor
push
jmp
lods
repz
adc
hlt
sbb
dec
add
adc
fadd
(bad)
mov
js
in
add
inc
pop
pop
sbb
mov
in
dec
in
jnp
adc
cmp
jecxz
dec
add
sbb
and
mov
mov
in
dec
pop
gs
sbb
test
and
mov
popa
push
add
test
mov
mov
mov
test
mov
mov
cmp
mov
cmp
mov
mov
lods
cmps
jp
xlat
or
add
mov
jns
or
xchg
jge
int
and
call
ret
xchg
or
scas
xor
xor
inc
add
cli
cwde
scas
xchg
pop
push
inc
jl
adc
int3
mov
sub
mov
out
in
xchg
das
cwde
mov
or
je
mov
(bad)
call
pop
arpl
sbb
fcmovb
pop
mov
mov
rol
or
loope
mov
leave
jb
cmc
mov
push
adc
ja
cmp
shl
out
(bad)
movs
mov
pop
jmp
add
jg
adc
push
and
fimul
dec
bound
out
push
jno
cld
or
xor
inc
out
popf
or
lods
das
imul
stos
push
out
and
sub
cmps
test
inc
cmp
cmp
mov
into
mov
push
mov
jle
popa
add
imul
sbb
out
ins
pop
mov
loop
les
cmp
and
retf
ret
rdmsr
push
ss
shl
inc
shl
cdq
ins
and
mov
pop
ffreep
fild
or
test
dec
cmp
in
dec
outs
xchg
cmp
dec
test
in
stos
fdiv
sar
imul
daa
stos
mov
je
add
or
call
fwait
lds
aam
push
inc
mov
sub
stc
ins
enter
bound
jns
or
push
bound
push
stos
mov
sub
scas
xchg
pushf
ins
ins
mov
idiv
pop
leave
mov
adc
ret
inc
scas
mov
jns
xor
fwait
mov
cs
into
dec
cld
out
mov
xchg
shl
dec
add
arpl
nop
dec
ins
aad
jo
or
enter
lock
popa
stc
cmp
cs
jp
fisttp
jne
aam
into
or
or
add
lods
or
arpl
pop
sub
push
jae
gs
mov
adc
pop
(bad)
cs
push
cmp
inc
or
cmp
xchg
xchg
push
dec
pop
xor
test
scas
rol
leave
or
inc
pop
and
clc
out
(bad)
mov
xchg
scas
add
jecxz
les
stc
les
loope
push
fidivr
movs
mov
out
rcl
or
les
sub
ret
mov
hlt
fsubr
xchg
cmp
adc
sar
lds
cmp
or
scas
popa
or
cmp
inc
mov
fcom
(bad)
jmp
xor
imul
cmps
jbe
ret
dec
inc
jl
dec
out
out
arpl
sub
push
fist
loopne
jnp
dec
inc
mov
pop
xchg
retf
xchg
mov
sub
jae
pusha
hlt
or
mov
repz
xchg
dec
addr16
lds
aas
mov
adc
stos
fst
xor
pop
xor
pop
dec
dec
(bad)
push
or
imul
loope
out
mov
jbe
mov
or
mov
mov
xor
nop
mov
or
mov
mov
stc
sar
cmc
mov
jo
pop
aam
iret
lock
je
xor
xor
cmp
mov
push
sub
sbb
scas
xchg
(bad)
out
stos
scas
repz
(bad)
loope
or
fmul
fwait
mov
mov
add
in
inc
(bad)
out
mov
xor
movs
push
add
mov
mov
xor
daa
inc
push
and
add
sub
int3
gs
fidiv
pop
inc
dec
push
sbb
or
fwait
stc
into
jp
test
test
add
jl
mov
cwde
retf
mov
xchg
jle
jae
push
push
push
fisub
ins
push
cmp
lds
push
ins
leave
les
xor
sbb
out
xor
fmulp
cs
outs
(bad)
outs
push
mov
mov
cmp
sbb
jl
shr
sub
inc
sub
sahf
cli
xlat
(bad)
push
stos
cli
aad
int3
es
mov
mov
dec
or
cmps
xchg
cmps
nop
jb
jle
jg
into
iret
popf
lea
or
adc
add
jp
jne
or
test
ds
mov
lea
xchg
nop
sub
push
xchg
int
lods
leave
inc
mov
(bad)
int3
inc
jecxz
js
or
push
jmp
inc
sahf
xor
adc
cdq
mov
stos
xchg
jmp
push
push
mov
lahf
mov
(bad)
jecxz
(bad)
jecxz
xchg
push
fst
mov
add
cwde
outs
pop
pop
retf
jle
cwde
push
inc
adc
cli
push
(bad)
cmp
dec
and
sub
jne
dec
inc
push
or
or
outs
(bad)
icebp
push
xor
icebp
fdiv
das
ffreep
(bad)
(bad)
xor
retf
cmps
mov
adc
dec
lods
xchg
retf
cmps
in
stos
mov
lods
pop
ins
sbb
inc
in
sahf
xchg
loope
scas
xor
cmc
out
out
imul
cmp
dec
stc
mov
out
(bad)
(bad)
xlat
mov
inc
pop
jo
pop
inc
test
jno
mov
not
rcl
aad
out
mov
jns
inc
mov
and
scas
cmp
mov
fdiv
xchg
mov
iret
pop
mov
mov
ja
ret
sbb
ins
fs
jg
(bad)
into
sub
dec
cli
ret
or
lea
cdq
stos
push
sbb
sub
scas
outs
push
not
mov
les
mov
mov
mov
fbld
mov
sbb
adc
iret
adc
sbb
loopne
ret
or
ficom
push
and
or
sbb
loope
adc
lods
lea
arpl
in
mov
test
shl
push
jno
fidiv
jp
and
fistp
inc
cmp
lahf
xlat
shl
jno
dec
jl
ds
inc
mov
inc
rcr
out
dec
sub
cmp
mov
sti
cmp
ins
icebp
mov
into
nop
inc
popf
and
mov
aad
inc
and
xor
push
and
aaa
es
mov
cmp
xchg
cwde
add
shl
jns
retf
data16
cmp
xor
fcomi
mov
aad
lock
inc
xchg
rcl
fidivr
and
fnstsw
aas
repz
mov
inc
xor
pop
xor
or
mov
shl
in
std
adc
dec
or
data16
mov
loopne
and
cmp
add
push
mov
add
stc
jns
jge
loopne
cmps
jne
xor
xchg
pushf
lods
and
test
imul
in
jge
xor
(bad)
mov
push
(bad)
cmp
adc
loop
aam
adc
cmp
ss
div
dec
(bad)
dec
ret
sub
std
data16
js
not
or
xchg
scas
and
pusha
sbb
xor
aaa
cli
and
push
test
xchg
test
sbb
xor
retf
pop
fidivr
mov
out
lods
jge
fild
jg
enter
test
aaa
js
pop
popa
fnstenv
(bad)
cmps
xor
lds
test
xlat
(bad)
mov
add
int3
leave
mov
adc
xchg
enter
jmp
lods
pop
jo
and
push
fistp
bound
ins
clc
mov
sub
push
loop
ror
outs
aas
jl
jmp
ret
shl
scas
out
es
stos
dec
sbb
ins
dec
hlt
icebp
and
jecxz
call
cld
(bad)
lds
pop
mov
clc
fidiv
(bad)
push
call
dec
vmaxsd
and
xor
inc
ins
xor
ds
dec
adc
mov
ds
lahf
and
aad
rol
retf
fimul
lods
dec
shl
fld
out
adc
pushf
jae
cld
push
fnstcw
fimul
ss
jmp
add
or
out
jo
ins
rcl
mov
pop
xor
fnstcw
scas
int3
jmp
(bad)
fwait
push
pop
mov
leave
inc
sbb
mov
cdq
mov
js
leave
dec
lods
data16
jge
(bad)
pushf
or
mov
inc
data16
mov
ss
(bad)
fbstp
(bad)
in
stos
push
sbb
mov
popa
fisttp
mov
retf
inc
or
adc
adc
rcr
mov
sub
sub
imul
jae
in
jo
cmp
arpl
imul
outs
jle
sbb
fs
(bad)
jo
mov
dec
or
push
jp
xchg
dec
xor
mov
push
popf
test
lahf
xchg
outs
movs
pop
into
pushf
fistp
ret
mov
sahf
dec
mov
jb
xchg
xchg
jo
das
shl
mov
scas
cs
xchg
sti
outs
cwde
enter
dec
fucomip
scas
inc
in
inc
push
fadd
push
push
ret
pop
xor
xor
int
pop
jae
sub
fnsave
call
adc
and
cmp
xlat
mov
sub
xor
cmp
imul
stos
xchg
mov
call
in
cmp
out
adc
mov
mov
je
mov
mov
dec
out
mov
loope
dec
adc
aaa
xchg
adc
jg
xchg
aaa
jecxz
and
cs
bnd
xor
and
icebp
xchg
sbb
add
or
push
mov
enter
pop
pop
dec
les
xchg
xchg
out
jns
inc
fmul
sbb
ret
outs
xchg
xor
outs
out
or
inc
xor
cmp
jge
pop
das
push
fmul
ret
push
jmp
jge
jbe
adc
loop
(bad)
int
add
outs
push
stos
mov
and
cmps
mov
pop
test
mov
or
mov
test
jmp
retf
ret
xlat
sub
xchg
pop
retf
outs
stc
mov
psubd
inc
and
out
pop
mov
jb
adc
or
jae
sbb
ss
sbb
leave
dec
or
dec
inc
(bad)
pop
das
je
xchg
dec
jp
mov
dec
jae
lock
stos
mov
retf
repz
mov
out
and
sahf
(bad)
fidiv
ja
out
bound
mov
fld
int3
(bad)
dec
xchg
lds
lock
inc
stos
int
dec
call
lea
mov
shl
sbb
mov
jnp
cmp
gs
and
xor
and
cmp
or
out
sbb
cmp
retf
icebp
rol
sub
ds
and
aaa
fwait
mov
aad
sar
mov
push
and
jecxz
push
mov
xchg
add
inc
imul
frstor
sbb
sbb
sub
test
mov
mov
and
and
xor
cmp
popf
rol
jg
mov
and
call
cli
mov
(bad)
and
movs
stc
das
mov
clc
stos
(bad)
imul
movs
and
mov
mov
sbb
rcr
xor
(bad)
ror
pop
ins
out
sahf
cmp
push
daa
inc
mov
ins
mov
dec
mov
fmulp
inc
jae
sub
jecxz
mov
outs
xor
mov
ds
dec
mov
cmp
js
(bad)
pop
pop
lahf
push
push
in
xchg
xor
fild
or
adc
scas
push
lahf
xor
imul
icebp
cmp
sub
lock
jmp
out
ja
pop
jge
dec
loop
stos
mov
add
call
push
mov
cmp
mov
add
in
pop
pop
adc
fbld
(bad)
xlat
jnp
mov
lea
sbb
in
mov
push
or
push
sbb
fchs
sbb
mov
or
ins
cmp
ds
mov
jp
imul
clc
jge
cmps
addr16
or
jmp
mov
out
push
xor
icebp
dec
xor
in
and
loope
por
loop
stos
add
ss
int3
je
dec
mov
jae
out
pop
out
mov
iret
int
xlat
shl
addr16
je
sahf
ret
cmp
mov
scas
inc
and
sub
test
mov
test
ins
sbb
je
cdq
popf
jb
or
ins
push
push
repz
addr16
pop
pop
lahf
mov
in
stc
nop
push
xchg
xor
iret
sub
ss
das
dec
dec
test
push
jecxz
or
xor
sbb
jno
fisubr
lock
cwde
lea
pop
xor
xor
cmps
icebp
test
test
rol
imul
push
dec
in
shr
sti
pop
bound
or
push
pop
into
xor
mov
push
dec
into
jmp
stos
pushf
cmc
pop
(bad)
pop
cmps
leave
sbb
jecxz
shld
mov
in
movs
or
test
fwait
rcr
jecxz
cmp
push
pop
pop
sar
xor
push
data16
mov
mov
inc
movs
inc
adc
fsub
ins
and
out
or
pop
pop
retf
jp
ins
dec
pusha
out
retf
lea
test
retf
stc
addr16
pusha
sahf
gs
outs
xchg
popf
add
sub
jmp
dec
mov
(bad)
mov
out
imul
xchg
mov
retf
push
(bad)
mov
aaa
push
sbb
out
in
cld
fisub
or
lods
or
out
dec
xchg
cmp
and
xor
sub
fild
dec
and
stc
ss
fild
mov
ret
pop
not
std
cmc
in
add
jecxz
cld
neg
out
fsubr
sub
jle
or
test
enter
fstp
lock
shr
pop
cmp
in
adc
fbld
mov
or
(bad)
aad
dec
cdq
pop
adc
das
sub
fstp
xor
nop
shl
imul
and
js
fsub
ins
xlat
dec
mov
mov
stos
sub
push
in
fldcw
sbb
in
pop
(bad)
outs
movs
in
or
mov
mov
imul
cld
and
in
cmc
jmp
clc
jmp
jl
jns
fisub
out
repz
int
push
aad
adc
push
test
jp
mov
ins
pusha
pcmpgtw
das
pushf
add
sbb
xchg
loop
iret
pop
add
ret
stc
xchg
cld
pop
inc
ins
mov
push
mov
mov
mov
mov
shr
xchg
xchg
xchg
jnp
cmps
push
sub
cmp
mov
(bad)
ds
inc
push
xchg
dec
fwait
jnp
in
mov
mov
ds
out
jecxz
xchg
rcl
out
retf
dec
mov
mov
mov
and
adc
push
lods
push
cmps
arpl
loope
loopne
cmps
sahf
retf
push
mov
mov
push
and
das
sub
(bad)
add
ins
pop
aaa
add
dec
pop
imul
jo
mov
leave
sub
inc
mov
pop
not
(bad)
arpl
xchg
mov
mov
cdq
inc
aaa
lods
mov
and
jo
imul
mov
adc
jmp
jae
mov
sub
out
jge
shl
(bad)
adc
sti
mov
mov
sti
mov
sub
push
test
sbb
dec
jnp
fwait
(bad)
push
lods
and
test
out
mov
pop
ds
sub
cld
out
aam
or
test
iret
in
dec
xor
test
pop
pop
jle
icebp
outs
mov
dec
retf
loop
ret
retf
jno
sub
xor
icebp
add
inc
ins
ret
int
aaa
lea
js
and
addr16
or
mov
aaa
neg
sub
call
fcomp
mov
xchg
icebp
xor
cmp
jp
or
and
repnz
adc
mov
dec
les
ins
push
(bad)
fild
fstp
and
jmp
adc
push
adc
mov
(bad)
nop
jo
aam
loopne
cmp
sahf
pop
hlt
adc
test
scas
add
mov
call
iret
mov
dec
push
jecxz
adc
ror
scas
js
sub
xor
xor
inc
add
xchg
push
pop
int
mov
sbb
pop
pop
sub
push
jns
repz
rcr
inc
dec
sbb
cld
stc
dec
rol
aas
push
or
mov
dec
jns
imul
adc
sbb
test
mov
repnz
add
pop
push
cmp
and
add
(bad)
movs
push
repz
pop
xor
add
or
(bad)
xor
sub
push
pop
iret
inc
popa
daa
or
repnz
outs
(bad)
aad
mov
fiadd
fadd
push
dec
jle
adc
je
rcl
mov
adc
neg
les
sar
adc
data16
out
jne
(bad)
cmp
adc
fadd
je
cdq
add
xchg
adc
inc
imul
pop
leave
dec
sbb
dec
cmc
xchg
mov
test
mov
lahf
out
shl
aas
xchg
xchg
add
mov
shl
shr
pop
add
cli
and
in
sub
ret
mov
add
pop
int
pushf
or
add
imul
test
cwde
mov
fnstcw
imul
push
test
out
fist
std
iret
mov
pop
mov
ds
movs
mov
mov
sub
fcmove
xchg
xchg
pop
retf
and
fs
int3
lods
add
faddp
aam
mov
in
sbb
ror
mov
jecxz
ja
(bad)
pop
mov
xor
push
repz
xor
test
aam
push
jnp
test
ret
mov
(bad)
cmp
rcr
enter
div
jge
test
call
mov
jns
dec
push
cmps
addr16
inc
sub
mov
mov
xchg
inc
push
push
inc
jge
sbb
mov
in
pop
jmp
ins
cmp
mov
xchg
gs
std
sbb
cmp
fcomp
leave
(bad)
repz
fistp
push
push
outs
movs
xchg
mov
mov
popf
in
pop
jge
dec
sbb
mov
mov
aam
sbb
mov
mov
mov
ja
ja
clc
mov
rcl
(bad)
cmp
add
je
and
cmp
scas
ja
inc
jmp
shl
sbb
push
cmp
push
loop
mov
fidivr
shl
cli
sti
jo
shr
aad
xchg
push
inc
fist
cli
fwait
mov
pop
popa
xor
cmc
loope
into
fsubr
pushf
popf
ins
cmp
adc
push
shl
arpl
fild
add
pop
sub
jmp
xchg
std
and
adc
lea
or
pop
sbb
xchg
mov
adc
ins
xchg
cmps
xchg
pushf
(bad)
pop
sbb
lahf
aad
loop
jge
imul
push
mov
ja
push
mov
xor
inc
hlt
leave
cdq
push
test
xchg
retf
not
mov
fst
popf
push
(bad)
aaa
xor
daa
daa
outs
enter
lock
stos
xchg
icebp
fs
jg
sub
cmp
push
inc
cmc
and
mov
push
imul
xchg
or
push
dec
push
dec
jmp
mov
xchg
push
jmp
or
inc
stc
(bad)
aam
add
out
daa
mov
jbe
out
test
xor
and
ret
mov
inc
in
mov
ins
ret
pop
sbb
sub
xor
dec
dec
enter
dec
xchg
in
and
xor
mov
pop
jae
sub
add
fistp
sbb
push
mov
sub
pusha
xor
pop
pusha
xchg
scas
sahf
xor
dec
call
fyl2xp1
dec
jmp
call
outs
adc
or
(bad)
lock
push
lock
lods
push
lods
cmp
adc
adc
adc
jecxz
push
std
add
mov
adc
cdq
in
lea
push
or
fst
imul
and
xor
nop
jnp
scas
call
mov
dec
sub
or
push
adc
adc
fmul
xor
cmp
adc
inc
sbb
outs
lods
jns
mov
js
dec
jb
mov
loope
out
ret
pusha
arpl
cmps
outs
push
dec
loope
(bad)
scas
xchg
dec
push
sbb
ins
dec
fisttp
call
int
jo
std
bound
xchg
loopne
pop
jl
cdq
hlt
(bad)
fisubr
cmp
and
xor
(bad)
cmp
sahf
mov
fcomp
test
xchg
movs
sbb
iret
sti
cmp
or
sub
mov
arpl
jbe
jmp
mov
jle
jb
inc
sbb
and
ds
dec
fdivrp
push
mov
int3
test
outs
xor
jmp
iret
mov
sub
pop
cdq
xlat
and
es
sub
mov
pop
jb
lds
(bad)
call
lds
ss
lds
cmc
loop
retf
enter
mov
cwde
sub
or
push
(bad)
iret
pop
sbb
mov
xor
je
arpl
mov
enter
and
xchg
(bad)
mov
inc
(bad)
xchg
fcom
mov
or
lock
movs
test
inc
lods
adc
jecxz
jle
cmps
mov
pop
pusha
sub
gs
pop
dec
outs
mov
leave
cli
jge
xlat
aas
push
push
cmp
inc
stos
pop
jmp
or
jecxz
mov
test
mov
mov
lods
out
mov
mov
test
fprem1
popf
jnp
maxps
xchg
xchg
and
jne
adc
imul
pop
mov
mov
push
xor
add
(bad)
inc
sti
das
nop
xchg
fs
sbb
lock
push
xor
imul
inc
sbb
cmc
sub
leave
jge
adc
adc
or
out
repnz
out
sbb
mov
jns
dec
ja
sbb
repz
stos
fcomp
xabort
jbe
ins
in
sbb
cli
mov
fwait
outs
or
hlt
popa
cmps
mov
sbb
push
jne
push
ds
sbb
and
sub
ud2
cs
test
xchg
xlat
into
in
jno
cdq
gs
fld1
push
shl
mov
nop
sbb
pop
daa
test
shl
nop
mov
mov
mov
adc
aaa
sbb
dec
in
scas
mov
imul
pop
push
mov
fwait
dec
aas
mov
into
and
dec
jle
push
xchg
cmp
inc
rcr
pop
pop
clc
stos
retf
pop
sbb
or
jle
pop
jmp
cld
add
stc
sbb
mov
sbb
mov
dec
in
jmp
frstor
sahf
out
mov
je
(bad)
aaa
pusha
mov
jle
in
dec
add
jae
push
inc
push
mov
or
sub
call
jb
sub
xchg
sub
add
or
pop
adc
sub
xor
and
pop
push
dec
into
loopne
lea
mov
pop
test
(bad)
les
pop
mov
in
push
jae
add
push
(bad)
(bad)
jmp
cdq
fidiv
stos
pop
jg
pop
pop
nop
and
les
mov
inc
push
lods
mov
test
pop
mov
iret
and
xchg
loop
fmul
fwait
mov
test
dec
pop
lahf
adc
pop
addr16
or
dec
jb
rol
stc
push
xchg
add
fcomp
fiadd
in
(bad)
mov
test
add
dec
imul
add
adc
jge
mov
cmps
pop
std
push
js
jp
fistp
test
movs
jo
ins
push
in
mov
jmp
(bad)
out
jg
dec
and
jnp
imul
sub
(bad)
push
and
pcmpeqw
cmp
pop
jb
inc
xchg
shr
into
call
adc
jecxz
sub
(bad)
xor
inc
enter
xor
neg
xchg
ja
mov
scas
dec
jle
mov
jne
lahf
mov
imul
cmp
jo
ins
cpuid
fwait
inc
cld
(bad)
push
(bad)
scas
call
add
or
sbb
mov
jns
push
push
adc
ret
mov
or
cmp
(bad)
mov
add
dec
ret
es
scas
xchg
add
hlt
jle
pop
mov
dec
jne
repnz
repnz
sbb
sub
je
and
xchg
push
or
cmp
push
ror
or
mov
(bad)
retf
lods
sub
(bad)
jg
neg
pop
call
stos
fcomp
bound
les
inc
test
ret
adc
adc
enter
out
xchg
mov
mov
movs
pushf
fwait
jmp
outs
or
and
out
dec
aad
xor
mov
cli
sbb
clc
jecxz
loopne
call
ficomp
ret
out
mov
xor
xor
jl
add
cwde
loop
loopne
inc
or
xor
loope
sub
dec
cmps
sbb
cmp
movs
nop
and
retf
scas
sbb
push
sub
xlat
rol
(bad)
in
cld
pop
pop
lods
add
jns
jge
cmp
inc
sti
jbe
add
pop
jbe
xchg
and
push
pop
ret
mov
icebp
xchg
push
jnp
sar
je
pop
mov
scas
inc
cmc
ficomp
bnd
aad
xchg
aad
jl
fs
add
movs
sar
daa
rcl
pop
sub
test
in
xchg
scas
cmps
ret
aad
call
mov
jmp
mov
xor
jne
ins
cmp
ins
fcom
xchg
scas
outs
jle
gs
xchg
inc
fisub
lea
test
fwait
push
mov
cmp
daa
rcr
loopne
sbb
ja
dec
test
ja
retf
add
jecxz
xchg
aas
out
hlt
in
gs
data16
int3
xlat
pop
add
jmp
retf
(bad)
mov
mov
addr16
jle
dec
dec
cld
add
lock
enter
push
push
mov
test
pop
cmp
dec
ins
cmp
inc
(bad)
dec
mov
jne
test
mov
jns
xor
js
stos
aas
dec
inc
cmp
popf
pusha
mov
lea
fs
stos
or
rcl
in
xchg
retf
shl
sti
ss
inc
and
cwde
test
out
cmp
xor
aaa
pop
jb
push
add
push
push
aaa
mov
mov
jb
pop
clc
popf
push
and
aam
sbb
pop
mov
test
xchg
lea
push
adc
mov
push
adc
push
mov
cmp
call
pop
cwde
je
dec
stos
out
mov
sub
bound
jl
jns
pop
jl
adc
jbe
inc
or
cdq
aas
pop
inc
sahf
shr
xchg
fmul
cmp
retf
inc
ins
mov
xchg
pop
mov
enter
xor
stos
out
lods
xchg
imul
lds
pop
out
sub
sbb
jg
jno
jecxz
out
aad
add
sbb
cmp
inc
sbb
pop
jo
sub
jg
push
mov
add
push
mov
ret
inc
mov
jnp
aaa
dec
mov
sub
add
push
test
fst
aam
loop
mov
push
fcomip
xor
mov
jp
xor
rcl
test
and
ja
inc
push
mov
sbb
sbb
mov
adc
aam
sbb
repz
aam
cwde
sbb
jb
xlat
sub
jp
adc
add
out
sahf
cmp
sub
jp
(bad)
test
iret
aam
inc
xor
outs
pop
loop
mov
in
xchg
jmp
dec
pop
xchg
ror
inc
jmp
leave
retf
add
in
ins
cmps
sub
fistp
inc
mov
mov
mov
pop
mov
shr
mov
jg
(bad)
xor
mov
mov
cmps
dec
dec
imul
lahf
ins
test
retf
push
js
push
jae
movs
in
out
iret
or
in
dec
mov
sub
pop
das
push
ror
jo
aam
xchg
ret
inc
sar
dec
enter
imul
in
and
bound
in
es
sub
add
push
pop
loope
inc
dec
jecxz
push
push
out
shl
not
jp
out
jge
rcr
(bad)
(bad)
call
movs
(bad)
das
mov
aam
mov
pop
shl
or
(bad)
fisubr
pop
cmp
mov
adc
xchg
inc
adc
or
sahf
je
in
jae
mov
fadd
fisttp
out
jmp
sbb
mov
cmp
scas
xchg
cmc
sub
aaa
cmovne
sbb
mov
add
fld
add
(bad)
mov
int3
and
ja
jbe
add
stos
sahf
add
cmp
xchg
pop
ins
lahf
mov
jle
sbb
leave
pushf
mov
daa
out
test
scas
retf
icebp
pushf
mov
push
mov
sub
mov
dec
dec
pop
jge
jmp
xchg
stc
pop
mov
les
ret
or
adc
cmp
jle
or
jbe
arpl
sbb
pop
loopne
mov
push
push
jb
inc
stos
mov
(bad)
dec
mov
js
push
leave
repz
sar
addr16
arpl
sbb
and
add
xor
mov
push
sar
adc
fs
lods
pop
pushf
les
mov
dec
inc
and
mov
and
jnp
lods
inc
bswap
retf
xor
ret
stc
dec
clc
loope
sahf
inc
xchg
and
lods
scas
arpl
in
or
mov
ds
adc
enter
and
loopne
lods
aam
ins
sbb
hlt
scas
dec
pop
mov
xchg
out
pusha
add
and
jns
pop
jl
ret
sub
cmc
and
fwait
jmp
push
mov
inc
je
pushf
outs
push
sub
mov
div
inc
inc
shl
and
inc
add
sbb
in
out
push
icebp
push
inc
int
jb
das
movs
lods
sub
lods
sbb
push
jae
lods
retf
cld
inc
jb
mov
shl
(bad)
lods
add
cli
(bad)
push
bound
mov
movs
pop
data16
jmp
idiv
es
mov
call
mov
jg
dec
cli
and
cdq
push
sbb
fdiv
aaa
aas
and
cwde
ret
mov
sbb
movq
loop
mov
pop
mov
jmp
cmp
popf
adc
adc
add
pop
mov
add
dec
fcom
fist
idiv
and
xor
ss
mov
mov
cmps
inc
arpl
ss
iret
fisub
or
jg
inc
cmp
jns
dec
adc
retf
xor
scas
push
pop
cmp
jg
pusha
mov
inc
jl
fld
add
push
shl
arpl
cmc
adc
xchg
xor
jo
imul
fdivp
and
push
add
jge
repnz
sub
mov
pop
in
cli
pop
jb
sub
inc
rol
stos
push
sub
xchg
cmp
lods
xor
pop
rol
shr
mov
iret
add
xchg
out
dec
cmp
(bad)
aaa
sub
sbb
(bad)
popf
(bad)
mov
retf
sub
xlat
leave
pop
daa
movs
or
adc
stos
popa
(bad)
or
sbb
repz
jg
push
cmp
mov
xor
push
jo
inc
shl
mov
loop
push
cmp
cwde
add
loope
leave
push
fdiv
arpl
or
xchg
iret
nop
and
sub
push
outs
sbb
stos
scas
rol
pop
aam
test
adc
adc
push
cmp
in
(bad)
jmp
in
addr16
pop
lods
inc
call
jmp
daa
pusha
sub
xchg
push
in
arpl
jl
push
push
cmp
test
sub
xchg
test
out
nop
test
or
xchg
jbe
test
test
cmp
xchg
jbe
jl
test
stos
xor
out
in
push
lock
xor
jb
mov
call
xchg
xor
add
out
adc
mov
mov
stos
mov
es
(bad)
pop
call
test
xor
out
ret
bound
out
ret
data16
bound
stos
push
(bad)
mov
cmp
ss
loop
jmp
cld
xor
push
icebp
mov
xor
and
ror
arpl
mov
or
mov
fwait
ja
jae
xchg
repz
in
inc
jne
push
push
(bad)
lock
fcmovu
mov
pop
and
add
or
ror
aam
jecxz
inc
push
clc
mul
adc
cmp
xor
in
push
lds
push
xlat
mov
and
push
loope
in
mov
imul
imul
xchg
out
leave
xor
cmc
lods
push
inc
xor
das
vmovlps
retf
sbb
push
mov
ds
cmp
in
ja
push
fisub
jbe
and
lods
out
je
cmp
jbe
push
fisttp
cmp
(bad)
jns
out
cld
ds
and
mov
inc
xor
jmp
push
pushf
pusha
(bad)
imul
dec
mov
cmp
ins
stc
fidiv
pop
pop
imul
adc
adc
gs
arpl
sbb
iret
mov
xchg
jbe
sbb
pop
jmp
(bad)
sub
(bad)
and
dec
dec
out
mov
and
ss
call
mov
retf
cmp
(bad)
sub
mov
adc
inc
into
xlat
mov
call
mov
lds
cdq
jg
push
jp
pop
js
push
scas
inc
pop
imul
sbb
mov
push
arpl
jmp
sub
test
mov
xor
dec
sbb
cmp
loop
xchg
cli
ins
sub
lea
push
dec
cli
int
cmp
enter
push
test
lea
in
mov
mov
pushf
mov
jge
xchg
xchg
mov
mov
pusha
pop
adc
dec
pop
push
in
inc
sub
ret
jb
sbb
js
aam
dec
push
lock
adc
push
les
ins
push
or
cdq
xchg
push
outs
mov
xchg
sub
jecxz
xor
ret
push
cdq
movs
pop
loop
test
scas
pusha
popf
aaa
adc
out
jbe
data16
inc
icebp
shl
jb
mov
or
into
cmp
imul
pop
rol
(bad)
inc
fisttp
push
or
(bad)
daa
cmp
aaa
out
ins
mov
mov
cwde
cmc
push
arpl
push
cmp
in
cld
cmps
ret
adc
sbb
shl
or
fisttp
loopne
lds
and
hlt
xor
sbb
mov
popa
dec
jmp
adc
sti
add
outs
clc
fild
scas
sbb
cmp
pop
inc
xlat
pushf
mov
out
ja
std
call
shr
aaa
cmp
fadd
dec
cmp
data16
stc
push
mov
out
in
es
addr16
and
lods
ror
or
test
push
aam
fsub
shr
iret
xor
jbe
add
fsubr
leave
mov
out
aam
inc
pop
pop
or
xchg
jne
inc
jecxz
pushf
lock
jns
loope
adc
leave
movs
mov
dec
and
icebp
shl
repnz
idiv
or
xchg
(bad)
ins
sahf
lods
xor
pop
push
ret
and
sbb
mov
push
mov
movs
mov
mov
and
in
ror
mov
mov
aas
and
mov
repz
dec
xchg
fisttp
add
ret
jns
bnd
jns
xchg
(bad)
retf
hlt
rcr
mov
stos
cld
iret
push
sub
pop
inc
mov
push
inc
jb
in
pop
xor
into
data16
xor
dec
push
mov
scas
loop
mov
push
fimul
pop
fist
sub
and
cld
fs
adc
sahf
pusha
in
in
into
inc
ja
push
js
xchg
mov
call
test
push
shl
xchg
outs
gs
jo
nop
push
push
dec
clc
jecxz
es
ins
outs
pop
mov
jl
cli
jnp
clc
jmp
cmps
mov
jnp
nop
jo
inc
sbb
movs
ror
test
xor
loope
out
cmp
add
sub
ds
jl
pop
push
or
adc
mov
fwait
pop
fst
call
inc
loope
popa
pop
mov
clc
add
push
dec
mov
lods
lods
ins
fs
in
or
pop
adc
adc
xchg
jl
call
jl
lods
out
out
mov
xor
data16
(bad)
enter
loope
movs
pushf
movs
cmp
rcl
ret
sub
js
stos
hlt
fild
loopne
daa
call
sub
mov
fcomp
adc
pushf
stc
in
adc
lock
stos
mov
or
scas
push
pop
mov
dec
(bad)
je
inc
or
mov
and
out
jo
jmp
mov
out
arpl
cvtps2pi
cmp
xchg
xor
adc
mov
xor
rcl
mov
cs
inc
or
xchg
iret
je
mov
mov
add
sbb
mov
or
loopne
clc
movs
rol
pop
stos
lods
inc
rcl
pop
std
lahf
call
popf
mov
stos
mov
pushf
out
in
pop
lods
(bad)
fidiv
push
jl
test
sbb
jmp
dec
dec
lods
mov
dec
dec
fwait
sti
dec
cld
dec
sub
jb
aas
or
jne
pop
clc
sub
fnsave
fidiv
mov
ins
pop
fdiv
movs
cwde
loopne
aaa
retf
(bad)
gs
lock
cmp
mov
jno
retf
cs
mov
and
mov
jl
add
shr
lahf
jne
push
pop
sub
cld
test
ja
and
in
pop
ret
xchg
jae
fidiv
pop
jp
dec
call
mov
or
mov
and
adc
scas
test
lods
xlat
fild
mov
jo
pop
xchg
sub
retf
and
out
aas
mov
daa
stos
inc
mov
xlat
(bad)
mov
iret
mov
fbstp
movs
adc
ds
add
dec
fidivr
cmp
adc
or
and
rcr
cmp
lds
push
jmp
lds
push
xchg
jmp
jg
data16
fimul
push
leave
cmp
mov
sbb
retf
sub
adc
mov
dec
adc
imul
xor
mov
xchg
hlt
and
loope
inc
jmp
xor
or
mov
ja
sub
mov
iret
push
push
mov
(bad)
jb
addr16
xchg
out
adc
mov
or
jo
mov
lds
adc
sti
mov
inc
mov
rcl
in
data16
mov
inc
push
(bad)
call
inc
das
fldcw
icebp
jp
inc
aad
and
jno
fisttp
mov
xor
in
pop
xor
xor
cmps
sub
ja
adc
jnp
inc
sahf
shr
ret
and
mov
xchg
mov
mov
push
std
or
out
cdq
xchg
sti
out
sub
push
sar
addr16
addr16
mov
mov
loop
pop
pop
dec
sub
inc
jno
xchg
popf
arpl
mov
cmps
cmp
inc
xor
repnz
mov
dec
push
push
adc
xchg
jbe
das
pop
stos
jle
sub
jae
mov
add
mov
push
jl
in
cdq
iret
mov
iret
stos
mov
movs
cdq
push
xchg
in
cmp
mov
movs
daa
arpl
sub
cvtdq2ps
cs
inc
into
adc
adc
aam
mov
cs
cmp
lock
mov
loop
mov
es
and
in
repz
pushf
das
cmp
jmp
and
inc
into
das
dec
or
ror
rcl
sub
mov
test
test
mov
pop
sbb
push
xor
aas
fimul
jne
leave
pop
dec
push
stos
add
mov
jecxz
(bad)
leave
push
adc
mov
inc
or
fist
xor
les
add
in
out
fistp
and
cld
outs
add
fld
mov
mov
cs
sbb
cmp
int3
test
jo
(bad)
adc
in
and
pop
les
inc
retf
mov
inc
lods
popf
test
pusha
cli
pop
sbb
call
xor
xchg
and
jg
fsubrp
data16
sub
jp
fadd
jae
adc
jecxz
pop
inc
sub
test
fmul
xor
into
call
in
scas
test
mov
ins
cdq
add
pop
js
data16
retf
jo
jo
test
loope
out
sub
adc
dec
inc
cmc
cdq
add
mov
jle
stos
dec
dec
loope
rcl
hlt
iret
mov
fild
push
adc
mov
aad
call
push
adc
xlat
repnz
in
mov
aaa
fwait
xchg
jle
mov
loop
imul
bnd
sub
(bad)
popa
adc
lods
cpuid
mov
jecxz
cwde
int
inc
test
xor
push
rcr
xchg
iret
sbb
or
and
sbb
loope
popf
lock
hlt
jmp
inc
shl
lea
xchg
sbb
and
fbld
shl
cdq
fbld
data16
and
std
test
pop
or
jmp
mov
loop
lds
loop
jge
xor
jb
(bad)
stos
sub
std
mov
mov
cld
jb
xchg
das
pop
adc
xchg
dec
xlat
out
mov
adc
push
or
arpl
and
(bad)
dec
es
loopne
les
aam
fstp
test
in
pop
retf
mov
repz
sahf
(bad)
xchg
sti
hlt
and
imul
mov
mov
ret
ins
ins
sti
pop
scas
popf
fdivrp
add
pop
push
retf
or
pop
cli
push
sub
sub
fstp
je
dec
cmovne
loopne
je
add
and
mov
jmp
mov
femms
daa
xor
or
cmp
pop
loop
pop
cmp
mov
inc
adc
push
mov
pop
push
xchg
xor
cmp
rol
in
in
adc
out
mov
sbb
xchg
cmps
cld
push
inc
lock
add
dec
jmp
pop
adc
ss
in
shl
retf
xchg
xchg
fwait
inc
fist
dec
leave
dec
(bad)
mov
popf
lds
push
mov
or
mov
call
repz
sahf
cmp
push
sahf
rcr
xor
cmp
call
jmp
cmp
std
pushf
pop
mov
and
cs
xor
cmp
and
inc
push
sbb
retf
movs
adc
fstp
cmp
stos
dec
leave
mov
and
mov
and
into
adc
mov
adc
or
sahf
cdq
sbb
neg
sbb
dec
adc
iret
pushf
xchg
lahf
push
add
mov
shl
pop
mov
ja
jle
push
adc
fs
cmp
add
xchg
jnp
fdivr
jmp
jne
sub
dec
or
test
adc
jg
cmp
retf
pop
dec
mov
ret
bound
and
inc
(bad)
sbb
(bad)
clc
mov
sbb
adc
sti
xchg
mov
lods
push
xchg
adc
arpl
outs
test
mov
mov
mov
in
dec
add
sbb
std
dec
or
mov
pop
xor
gs
iret
cwde
mov
add
jno
push
jecxz
xchg
sbb
jmp
rcr
mov
leave
inc
pop
(bad)
fcom
pop
clc
jmp
mov
rcl
inc
dec
sub
lods
lds
test
mov
inc
and
lock
les
gs
jl
cmp
sub
xor
push
in
xchg
scas
sti
mov
out
or
xchg
(bad)
lods
mov
sti
cmp
cld
ret
sbb
test
sub
push
sub
xor
stos
inc
cld
cli
imul
xchg
cmp
and
stos
repz
into
jb
cmc
ss
or
dec
in
pop
adc
mov
mov
pop
mov
pop
jmp
daa
imul
or
call
mov
(bad)
call
nop
mov
pop
mov
dec
arpl
push
pop
out
sbb
out
daa
sub
cld
ja
bound
movs
ins
sbb
mov
adc
mov
aas
mov
adc
repnz
adc
push
lahf
mov
iret
mov
ds
(bad)
sbb
frstor
adc
outs
mov
cmp
adc
pop
xor
sub
push
scas
push
shl
push
cmp
iret
(bad)
out
aad
popa
repz
(bad)
icebp
aaa
into
mov
out
(bad)
adc
mov
dec
mov
or
test
mov
jp
dec
repnz
dec
retf
dec
(bad)
inc
mov
ins
pop
rol
pop
lock
(bad)
pop
xor
inc
and
add
adc
cdq
adc
mov
xchg
ret
adc
mov
and
add
cdq
pop
stos
das
mov
stc
jno
clc
fdiv
or
fucomip
das
pop
mov
dec
std
xor
add
sub
dec
push
jl
lock
fs
(bad)
in
test
xchg
ins
fnstcw
aaa
sbb
lock
sar
icebp
fwait
cmp
mov
in
push
jnp
push
in
cmp
xchg
out
mov
push
or
add
xchg
aaa
in
stos
imul
mov
push
jbe
xchg
pop
ficomp
stos
and
movs
stos
movs
leave
mov
pop
cmp
jecxz
and
in
jb
shr
es
punpckhwd
clc
outs
inc
test
iret
fisttp
mov
sub
inc
call
dec
xchg
dec
aad
dec
ror
mov
xchg
mov
push
xchg
jno
mov
dec
cmp
jle
mov
xchg
add
cmp
fstp
dec
int3
push
(bad)
addr16
inc
inc
cmps
lods
ss
cmp
(bad)
loop
pop
push
imul
jecxz
xlat
hlt
mov
push
cmp
mov
imul
adc
jo
mov
pop
ins
jnp
outs
sbb
scas
mov
xchg
pop
or
xchg
jle
jle
fisttp
ins
inc
mov
jnp
dec
cld
cmp
out
(bad)
pop
ins
jno
sub
inc
mov
inc
loope
fbstp
call
dec
aad
mov
mov
adc
adc
fstp
les
mov
shr
mov
ins
stos
xchg
popa
out
in
xchg
sub
mov
pop
jno
jl
lea
test
iret
add
xor
sub
pushf
inc
xchg
pop
sar
mov
in
sbb
mov
mov
mov
stos
pop
push
jmp
scas
clc
ins
(bad)
(bad)
jno
pop
movaps
ins
js
aam
test
addr16
addr16
add
out
push
ins
fisttp
jae
mov
mov
mov
in
sahf
and
lods
nop
mov
inc
cmp
rcl
sbb
sbb
pusha
add
mov
stc
loope
mov
adc
test
lahf
and
mov
pop
fsubr
call
fisub
mov
retf
dec
sti
retf
xchg
dec
or
cmc
dec
jmp
imul
pop
or
pop
xchg
pop
hlt
loope
std
inc
mov
loopne
xchg
dec
pushf
xchg
push
out
shl
xor
stos
pop
jmp
frstor
add
add
and
fbld
movs
xchg
fs
push
cwde
xchg
es
jno
jmp
mov
xor
dec
add
out
adc
popf
mov
loope
repz
xchg
stos
not
das
add
in
push
std
out
stc
jno
call
movs
dec
push
jp
shr
xchg
shl
in
out
mov
cmp
stc
(bad)
mov
xchg
cmp
cmp
sar
je
and
inc
cmps
movntps
scas
cmps
dec
out
and
outs
mov
nop
rcl
mov
(bad)
push
fdivr
jp
aam
adc
mov
add
xor
lock
xchg
sbb
ins
es
ret
sub
icebp
loop
push
mov
mov
sub
sub
movs
pushf
xchg
mov
pop
shr
adc
outs
push
imul
and
mov
xor
xor
aam
sub
mov
sub
ss
inc
(bad)
repz
test
add
loope
jbe
sub
sub
cdq
shr
repz
mov
and
cmp
inc
gs
repz
(bad)
loopne
xchg
(bad)
cmp
pop
aam
and
retf
dec
rcl
xchg
add
jmp
sahf
iret
dec
or
jmp
cli
mov
xchg
add
hlt
push
or
hlt
sbb
repnz
fwait
add
dec
pop
call
and
mov
in
cmp
call
sub
jns
movs
in
push
pop
inc
mul
xor
aaa
push
dec
lods
outs
dec
sub
add
jne
push
mov
lahf
mov
cmps
jecxz
imul
leave
sar
xchg
push
pop
pop
jp
pop
les
mov
loopne
ret
sbb
push
mov
xor
in
jmp
mov
loopne
dec
in
mov
or
mul
xchg
stos
cmps
pop
dec
cmp
sub
mov
sbb
mov
jge
jnp
mov
dec
cmps
call
and
dec
xchg
outs
ror
sub
in
cld
(bad)
or
dec
inc
je
int3
les
imul
add
inc
arpl
pop
sbb
mov
cmp
or
addr16
pop
mov
push
cmps
jo
xor
or
or
mov
adc
inc
leave
loopne
test
inc
pop
pop
pushf
or
or
aaa
xor
inc
inc
lock
and
inc
daa
aad
or
jns
push
lods
push
fwait
sbb
or
sar
adc
ret
fsub
and
mov
loop
push
enter
sbb
stc
clc
push
push
mov
sbb
mov
xor
movups
stos
xchg
inc
pop
adc
ins
dec
xchg
xor
daa
or
fistp
aad
lahf
rcr
fcmove
loopne
inc
scas
(bad)
cmc
popf
lahf
pop
mov
aas
inc
xchg
push
loop
lods
arpl
scas
dec
adc
push
lea
pop
pop
sbb
mov
jne
aaa
sbb
enter
pop
arpl
ss
(bad)
gs
scas
jbe
mov
iret
and
sub
cmp
sbb
or
mov
jp
jle
pusha
mov
lock
dec
(bad)
js
gs
jbe
mov
dec
call
int
mov
cwde
repz
mov
mov
mov
aad
inc
jnp
jmp
sub
stc
mov
xor
mov
adc
xchg
mov
jne
add
call
movs
or
daa
push
ds
push
adc
pushf
pop
jo
inc
mov
outs
and
add
xchg
jl
imul
dec
and
jne
ret
jbe
outs
adc
rol
and
outs
dec
cli
and
pusha
cmp
adc
test
les
push
mov
xor
mov
(bad)
adc
jmp
fwait
out
dec
jmp
in
xchg
add
fiadd
ds
les
push
(bad)
cli
dec
retf
push
std
pusha
push
adc
mov
cmp
or
pop
lock
clc
nop
push
mov
fs
call
mov
stos
cmp
pop
push
mov
fisttp
inc
dec
sbb
lods
fcom
cld
mov
mov
cmp
or
movs
jp
data16
or
sbb
cmp
or
sub
verr
clc
loopne
mov
pop
aam
fdivr
mov
outs
push
jmp
adc
not
xchg
xchg
inc
xchg
(bad)
fld
mov
sbb
cli
(bad)
out
and
dec
sub
(bad)
mov
pop
dec
mov
add
call
sbb
mov
adc
inc
mov
inc
add
pusha
gs
call
icebp
sbb
push
(bad)
and
dec
pop
and
mov
pop
dec
arpl
dec
loopne
mov
pop
xor
mul
test
(bad)
mov
inc
push
out
outs
and
or
fsubr
movs
icebp
add
icebp
sbb
sbb
popa
out
add
js
pop
in
sti
adc
aad
sub
xor
fwait
mov
xchg
mov
mov
sbb
inc
jne
bound
mov
test
adc
ror
int3
pop
mov
enter
inc
dec
outs
dec
scas
mov
std
mov
lahf
xchg
mov
push
cmp
sub
inc
in
out
div
fcmovne
nop
jo
movs
adc
scas
sub
shl
sbb
mov
fs
test
fwait
xlat
fldenv
jne
sub
fwait
retf
sti
and
or
ret
aas
adc
test
mov
mov
les
jae
jmp
sahf
ret
cmp
or
push
shl
bound
pusha
in
nop
mov
outs
fsubp
nop
imul
in
test
xchg
ffree
das
sti
xor
sti
push
in
movs
lea
cmp
push
in
xchg
imul
jo
sub
in
out
scas
xor
xor
(bad)
cmp
add
jns
sub
cmc
hlt
jg
or
int
xchg
sbb
mov
shr
aam
fwait
sub
lahf
sahf
mov
push
retf
stc
push
lods
sti
mov
jne
mov
imul
xchg
push
imul
fwait
cmp
push
add
pop
mov
or
pop
ja
push
repnz
adc
sbb
jge
pop
sbb
xchg
out
movs
mov
xchg
mov
jbe
jnp
xor
dec
std
ins
jp
ds
fimul
stos
call
xor
sub
jle
jbe
cmp
or
xchg
push
cmps
or
add
pop
bound
aad
int
mov
call
shl
push
fucomi
call
cmp
fcomi
daa
mov
movs
call
pop
add
daa
mov
mov
cmp
lea
mov
sbb
sbb
jo
jmp
xchg
jp
daa
out
jmp
jbe
idiv
xor
out
fldcw
bound
push
sahf
cmp
gs
outs
add
nop
repnz
adc
xor
nop
hlt
popa
mov
pop
inc
xchg
clc
mov
pop
sbb
test
adc
push
mov
cmova
addr16
outs
pop
or
adc
rcl
jno
addr16
imul
push
dec
aaa
fcom
xor
xor
loopne
push
inc
cld
mov
pop
sbb
shr
hlt
add
and
ror
pop
jmp
or
xor
jbe
out
fist
inc
sbb
cmps
cli
inc
cmps
push
aaa
mov
xchg
arpl
push
test
jo
popa
cmp
int3
stos
mov
xchg
iret
outs
and
fs
jge
shl
imul
outs
inc
adc
(bad)
into
and
mov
mov
cs
aad
xor
or
push
scas
xor
sbb
or
mov
xor
adc
jle
les
pop
or
outs
jbe
jg
aas
bound
in
nop
jne
outs
inc
movs
cmp
push
(bad)
call
adc
xor
xchg
dec
and
push
add
nop
cld
or
icebp
adc
inc
in
loop
xchg
dec
mov
sbb
outs
push
cmc
push
dec
sbb
sbb
ret
add
push
fimul
cld
mov
mov
cli
mov
call
jo
and
int
sbb
push
test
iret
lea
cmp
push
pop
dec
(bad)
push
mov
fistp
sub
or
add
clc
arpl
cwde
jnp
bound
div
int3
cmp
xor
stos
rcl
cwde
ret
adc
sub
lock
cmp
sub
mov
cli
lods
call
sub
sbb
xor
sub
jae
ret
pop
cmp
or
cmp
mov
daa
mov
popa
movs
cmp
mov
dec
cwde
out
jo
xchg
sbb
inc
and
fwait
scas
mov
outs
aad
data16
xor
hlt
sahf
mov
je
fwait
jbe
out
int3
aam
jno
cmp
jno
jl
dec
cmp
mov
add
push
mov
or
mov
pop
push
int3
pushf
mov
cmps
rcr
pop
mov
mov
hlt
mov
gs
xor
mov
repz
(bad)
mov
mov
jo
jge
mov
pop
pop
dec
je
pop
xchg
int
out
clc
test
(bad)
mov
imul
mov
icebp
loopne
lds
ja
pop
jmp
dec
or
into
jmp
fmul
mov
or
fwait
cmps
pusha
mov
push
jmp
pop
je
scas
arpl
mov
mov
pop
aas
push
xchg
mov
stos
pushf
test
jnp
pop
std
ror
call
jb
xor
ret
pop
sbb
or
stos
push
(bad)
fisttp
mov
add
lods
repnz
mov
jmp
or
mov
mov
pop
mov
ret
cmps
(bad)
call
xchg
mov
neg
mov
push
jmp
jecxz
pop
jb
je
pop
dec
sub
inc
xchg
mov
add
ror
cmp
ins
scas
jecxz
xchg
ficomp
out
cwde
jns
mov
pop
mov
mov
sbb
pop
dec
xchg
gs
(bad)
movs
sub
fdivr
dec
mov
jp
mov
mov
stc
mov
data16
lds
xor
sti
(bad)
imul
in
jp
stc
inc
ret
jle
xchg
adc
clc
pop
and
cmp
arpl
fdiv
lods
and
mov
mov
(bad)
jnp
sub
xchg
test
(bad)
mov
xchg
and
cmp
mov
lods
pop
push
bound
mov
js
cmp
jne
mov
and
sub
std
out
(bad)
inc
adc
dec
mov
in
js
lds
xor
push
xor
dec
mov
cld
pop
daa
push
xchg
inc
stos
push
in
or
xor
(bad)
sub
pop
push
test
and
inc
or
cmp
pusha
outs
sub
and
mov
lods
xchg
xchg
ins
push
fwait
std
sbb
aad
push
inc
pushf
das
cmp
jno
fistp
mov
aas
hlt
add
test
movs
neg
test
fwait
dec
jle
jmp
mov
adc
inc
mov
add
push
mov
imul
xor
or
jno
mov
jmp
jle
jg
mov
mov
test
out
test
lea
xchg
(bad)
jmp
out
xor
mov
push
pop
test
xchg
add
inc
movs
mov
adc
jmp
mov
loope
imul
repnz
or
mov
lahf
movs
popa
int3
inc
jmp
xchg
dec
mov
sub
adc
push
pop
dec
mov
push
xchg
xchg
adc
cmp
or
in
jge
int
(bad)
daa
mov
cmc
adc
rcl
jae
push
mov
mov
arpl
pop
setae
int3
sti
fistp
sbb
(bad)
push
push
test
data16
call
shl
ins
movs
fwait
sub
pop
arpl
fdiv
jmp
sub
imul
pop
lods
pop
sub
and
lods
hlt
or
pop
jnp
jne
or
mov
into
cmp
cs
(bad)
out
(bad)
cld
sbb
shr
adc
mov
add
loope
xchg
add
mov
je
sbb
inc
inc
push
sbb
inc
inc
retf
mov
xchg
daa
pop
movs
mov
das
pop
je
shl
movs
repnz
lods
or
mov
cwde
ins
inc
popf
jp
sbb
pop
lds
dec
test
inc
add
repz
in
(bad)
movs
mov
sub
push
mov
adc
shl
jmp
cmp
outs
dec
stos
stos
xchg
inc
shl
pushf
clc
jp
mov
dec
ja
pop
jo
dec
aas
mov
int
jecxz
add
sub
not
ss
and
add
xor
push
(bad)
sub
dec
lods
adc
sbb
aas
in
fistp
jno
and
xchg
call
push
in
in
xchg
daa
dec
add
sub
rcr
mov
clc
test
test
retf
mov
or
test
lds
ret
xchg
jae
or
push
push
push
fadd
mov
in
movs
std
jge
mov
sub
ja
inc
jae
js
movs
mov
dec
fld
mov
aas
lahf
aam
sahf
pop
addr16
aad
movs
dec
and
add
push
js
(bad)
cwde
mov
and
mov
mov
icebp
inc
jb
out
out
jmp
sar
xor
pusha
rcl
inc
fild
mov
jb
sbb
jae
mov
int3
mov
hlt
loope
or
xchg
nop
sub
mov
cmps
push
rol
inc
retf
ror
aad
dec
sbb
mov
sbb
cmc
retf
loopne
push
xchg
test
pop
add
pop
mov
js
push
xor
mov
dec
repz
call
xchg
xchg
sub
or
dec
aas
adc
add
out
imul
or
inc
sbb
push
std
hlt
dec
mov
jnp
xchg
outs
mov
rcl
pop
icebp
add
adc
inc
fsub
inc
sbb
push
test
ret
xchg
dec
(bad)
jl
adc
adc
adc
jmp
cmps
and
adc
jo
mov
inc
xlat
clc
cmp
clc
and
test
xchg
push
in
loope
sahf
lods
addr16
(bad)
stc
sbb
push
or
mov
out
or
pop
jmp
ins
retf
push
stos
pop
add
and
sbb
stc
gs
add
pop
lods
ret
jnp
imul
pusha
in
add
cwde
push
in
ins
or
xor
sub
inc
addr16
push
xchg
in
adc
sub
stos
hlt
mov
test
ss
or
xor
ror
call
(bad)
lods
sub
add
int
adc
push
sar
pop
and
div
cmc
mov
cmps
imul
adc
xor
dec
adc
gs
jbe
out
push
je
mov
fstp
jae
mov
xchg
mov
mov
test
rol
dec
or
pusha
iret
out
add
adc
ins
pop
into
shr
sbb
push
push
cmps
stc
and
test
mov
sub
push
lds
fisub
repnz
sahf
cs
arpl
fiadd
xchg
sbb
in
sbb
mov
repz
out
dec
cmp
or
(bad)
push
sar
cld
adc
dec
lds
or
push
or
push
xor
leave
mov
div
xor
outs
loop
or
or
pop
mov
addr16
inc
jns
sbb
mov
fsubr
fs
lahf
hlt
lock
stc
not
dec
pop
out
repnz
mov
jmp
cwde
in
sbb
mov
add
arpl
jmp
fadd
mov
mov
popa
mov
sub
les
adc
sub
ins
cs
sbb
cmp
clc
mov
jo
add
adc
jne
daa
cmp
(bad)
inc
out
stos
pop
cmp
add
push
or
ret
je
lea
pop
adc
dec
aaa
adc
fstp
inc
add
push
add
jle
pop
retf
repnz
or
push
into
sub
fidiv
jae
push
push
pop
mul
mov
je
cdq
repnz
loopne
add
movs
xchg
cmp
cmps
fst
ins
xchg
adc
xchg
push
cmp
std
jo
xor
ficomp
repnz
stos
pop
outs
ds
ins
and
outs
push
pusha
sub
pop
mov
lahf
inc
sub
popa
xchg
ja
xchg
aam
pop
push
or
aas
nop
test
in
je
(bad)
jno
mov
out
bound
int3
jecxz
std
test
adc
nop
pop
inc
xchg
jmp
lds
mov
ins
add
jg
push
out
retf
sar
jmp
inc
loopne
aad
call
pop
mov
inc
xlat
lahf
call
mov
pop
inc
mov
inc
inc
xchg
fucomip
inc
pop
enter
jmp
or
or
mov
and
mov
xchg
jo
mov
add
pop
adc
cmp
aam
mov
std
mov
dec
sub
dec
jmp
sub
cmp
iret
mov
dec
(bad)
push
adc
mov
retf
lahf
cdq
add
cmp
mov
cmp
(bad)
jp
(bad)
jl
and
fistp
arpl
aas
(bad)
clc
out
dec
sbb
dec
mov
jge
mov
icebp
cdq
xor
out
push
out
xchg
das
lds
and
aas
cs
dec
push
dec
(bad)
stc
icebp
leave
cmc
or
xchg
vpsrlw
fld
xlat
cmp
out
xchg
xor
push
sub
sub
jecxz
in
push
add
dec
imul
xchg
xor
inc
retf
jmp
mov
cmp
aad
scas
ficom
mov
jmp
retf
ret
push
push
adc
push
outs
rol
movs
cld
outs
pop
and
dec
jb
scas
xchg
pop
repnz
or
lods
cdq
jmp
mov
call
iret
(bad)
sti
push
(bad)
jae
add
not
call
or
xchg
sub
popf
xchg
fcmovb
ins
dec
fucomi
loop
in
cdq
jp
lahf
inc
addr16
sub
sti
push
push
inc
out
(bad)
nop
pusha
dec
add
add
cld
cs
ficomp
cli
pop
outs
and
aaa
mov
das
and
neg
test
pusha
sub
dec
ds
popf
lahf
ins
xor
out
jp
push
and
push
xor
enter
(bad)
test
pop
inc
and
sti
mov
jmp
push
retf
not
lock
push
or
inc
clc
in
movs
nop
sbb
jne
mov
cmp
and
push
sbb
and
cmc
sub
pushf
clc
jp
inc
mov
into
in
rcr
push
stc
jns
pop
repnz
push
sbb
lods
push
sbb
lahf
enter
xor
jb
lock
cld
enter
sub
lea
sbb
mov
in
xchg
jne
ficomp
dec
test
out
ret
sub
push
dec
sub
mov
retf
imul
dec
cmc
ret
xchg
add
push
mov
sti
not
call
sti
push
push
inc
test
fwait
iret
cmp
mov
in
fiadd
push
call
inc
dec
cmp
dec
push
std
xor
cmp
(bad)
pop
lods
pop
jg
mov
adc
xor
adc
cwde
add
aad
ret
pop
pop
pop
xor
pop
mov
popf
ret
push
dec
retf
movs
aad
aas
jp
pop
das
mov
in
not
jmp
test
cmp
mov
cmp
add
scas
or
adc
shr
pusha
aam
stos
sbb
jae
sbb
mov
fsub
push
popf
cwde
jns
mov
jno
cmp
push
hlt
ret
(bad)
(bad)
(bad)
sub
push
mov
adc
cmp
pop
test
dec
adc
int
outs
pop
lds
cdq
cmp
js
xor
outs
out
shl
mov
stos
sub
cmc
add
fcom
pop
cmp
jge
adc
xlat
(bad)
push
or
pop
pop
sbb
push
lods
shl
cld
mov
jb
or
push
xchg
test
push
aad
add
repnz
(bad)
(bad)
dec
sub
xchg
in
dec
push
inc
bound
(bad)
push
loope
mov
imul
jmp
sti
jl
xchg
rol
retf
xchg
cdq
nop
sti
enter
pop
std
mov
fs
dec
sub
sub
shr
stos
ins
jge
push
cmps
jnp
push
sbb
jecxz
test
(bad)
mov
or
adc
sti
or
or
loopne
or
mov
push
inc
dec
aam
xchg
push
jecxz
cmp
pop
or
pop
addr16
and
cs
jecxz
retf
pusha
in
sbb
sbb
repz
xor
cli
fiadd
mov
loopne
xchg
mov
in
inc
mov
cmc
dec
pop
mov
xor
xchg
gs
mov
movs
outs
mov
sbb
ret
push
add
adc
push
das
and
jmp
sub
push
mov
mov
ret
bound
(bad)
(bad)
nop
scas
mov
movs
mov
add
lahf
mov
pop
cld
nop
add
fdivr
(bad)
mov
dec
movs
adc
mov
mov
mov
xor
(bad)
scas
nop
stos
fisttp
push
rcl
sbb
jmp
cmps
loopne
sbb
sbb
lahf
es
inc
and
xor
popa
pusha
dec
push
int3
inc
out
scas
push
ins
or
mov
je
add
cdq
lods
xor
fcom
jle
mov
xor
aas
adc
mov
jl
fsub
sub
xor
into
xchg
(bad)
dec
add
stos
adc
sub
add
sub
mov
int3
sti
call
(bad)
pop
jp
and
bound
cmp
sub
cmp
sub
xor
call
lea
leave
and
jb
adc
push
imul
or
pop
cmp
loop
push
adc
loop
add
jae
xor
sar
aaa
jbe
or
icebp
cmp
nop
and
mov
into
push
inc
fucomip
aad
cli
pop
adc
xchg
shl
cmp
inc
(bad)
icebp
stos
xor
and
add
outs
inc
int3
jo
data16
cmp
jnp
aad
lods
lahf
push
jge
fprem
and
cmp
jbe
pop
clc
cmps
rcr
in
mov
(bad)
in
or
imul
xchg
push
movs
out
ret
fiadd
pop
mov
arpl
and
mov
mov
(bad)
xor
ds
xlat
sub
enter
inc
sti
pop
cmps
fabs
adc
add
jle
inc
jnp
inc
retf
test
data16
push
outs
(bad)
cmps
pusha
fistp
aas
ds
jmp
stos
pop
repz
fadd
ins
xchg
pop
ret
adc
pop
nop
jb
daa
(bad)
out
dec
xor
xchg
xor
cmp
mov
and
fmul
inc
mov
fst
outs
gs
and
adc
rcl
sub
inc
sar
mov
jg
seto
jnp
imul
rcr
scas
dec
(bad)
in
ins
jp
clc
jbe
mov
adc
mov
inc
mov
test
scas
lds
cld
cmps
inc
pushf
gs
mov
ins
dec
imul
(bad)
dec
in
sti
ret
xchg
test
pop
out
push
add
push
les
call
mov
mov
repz
add
icebp
jae
sub
sbb
inc
add
jl
inc
add
es
cmc
les
jae
xor
das
pop
cmp
jmp
iret
movs
mov
mov
icebp
mov
scas
cmp
push
scas
fcomp
jbe
aas
push
inc
ficomp
push
ret
mov
or
mov
mov
out
leave
pop
jb
stc
retf
mov
loopne
lds
aas
fsubr
jns
cmps
add
sub
int3
stos
jmp
inc
mov
pop
scas
daa
rcr
and
add
add
mov
cmp
(bad)
cmps
pop
les
adc
pusha
cmc
cwde
cmp
leave
pop
and
mov
xor
sub
nop
xchg
push
dec
pop
popf
push
pushf
cdq
jle
xchg
pop
and
jmp
pushf
inc
test
retf
add
popf
jg
cld
mov
(bad)
sbb
(bad)
out
pop
das
fwait
inc
jne
fwait
mov
retf
push
retf
call
adc
push
sub
in
jle
push
(bad)
push
fld
pop
int
jns
loope
pop
and
inc
(bad)
jmp
sbb
mov
shl
jmp
leave
rol
sar
sbb
push
retf
aam
jmp
pop
push
fs
je
lods
and
mov
mov
bound
dec
lods
jmp
jp
enter
popa
and
or
je
inc
cmp
dec
inc
or
dec
add
inc
repnz
xchg
inc
jecxz
hlt
inc
out
fcmovne
mov
addr16
fist
mov
jo
xor
sub
mov
ins
xchg
or
pop
mov
sub
sti
out
mov
mov
inc
call
icebp
mov
xor
add
gs
mov
push
nop
sbb
ins
push
iret
mov
add
pop
dec
mov
call
repz
mov
and
pop
inc
mov
not
in
js
mov
pop
out
loop
ss
xchg
es
cmp
fwait
in
out
ins
fwait
dec
ss
push
aas
scas
mov
jmp
mov
in
mov
lods
pop
add
fwait
pop
adc
inc
mov
outs
int3
cmp
ficom
sbb
pop
or
dec
fidiv
fbstp
scas
sub
fbstp
enter
das
pushf
ins
stc
add
cmp
mov
fld
pop
jl
arpl
pusha
cs
sub
addr16
mul
or
or
loopne
mov
mov
mov
shr
inc
jnp
aam
cmp
retf
mov
mov
sti
test
das
add
mov
push
adc
jno
mov
push
cld
out
sub
pop
enter
mov
cmps
cmp
mov
sbb
jno
xor
lahf
or
mov
add
dec
test
and
inc
neg
xor
adc
stos
fst
sbb
push
xlat
in
add
and
dec
dec
mov
gs
arpl
and
pop
pop
and
sbb
enter
xchg
push
mov
or
push
sti
popa
and
test
shr
(bad)
mov
push
push
mov
pop
ficomp
pop
inc
push
sahf
jne
sbb
xor
fiadd
pop
sti
adc
jmp
jbe
mov
test
add
icebp
lods
xor
jae
(bad)
pop
xchg
mov
mov
adc
ss
push
adc
ret
fdiv
adc
mov
jae
ror
hlt
std
stos
jns
jecxz
jae
or
inc
xchg
jmp
fistp
push
jbe
cdq
or
jl
mov
(bad)
cdq
add
ror
mov
mov
xor
outs
fidivr
or
pop
out
mov
xchg
fsubr
push
add
mov
cwde
or
rcl
jecxz
and
or
pop
push
iret
pop
mov
nop
test
push
fldl2t
push
fisttp
mov
xor
lods
dec
dec
or
xor
adc
retf
jmp
popf
add
stc
daa
inc
sti
inc
test
pop
out
pop
dec
(bad)
mov
pop
aad
push
lock
pusha
inc
pop
xchg
xchg
add
mov
push
out
repz
adc
and
stc
jae
xor
(bad)
jmp
push
movs
call
in
sbb
and
pop
movs
repz
ja
lods
xor
in
add
inc
ds
adc
rcl
loope
test
clc
bound
outs
js
mov
lods
inc
aaa
xor
jnp
sbb
shl
and
dec
mov
cs
adc
int
popa
jns
imul
and
mov
std
mov
hlt
mov
repz
gs
mov
sti
push
jge
outs
push
test
inc
xchg
jg
std
dec
jnp
cmp
sar
pop
pushf
add
jns
stos
mov
loope
cmp
out
xchg
jle
pop
jp
inc
test
bound
add
push
xchg
cld
adc
xchg
cmp
cmp
out
and
aam
pop
add
and
mov
push
and
lock
jge
test
aas
add
sub
jge
popf
out
inc
call
dec
inc
cs
adc
xchg
imul
rcl
nop
jl
arpl
sub
jle
std
out
pop
inc
pop
push
(bad)
test
mov
(bad)
jo
cmp
std
(bad)
imul
(bad)
in
pop
dec
jmp
lea
sti
jge
mov
inc
fwait
add
inc
jg
sbb
dec
ins
push
(bad)
je
adc
pop
pop
loop
in
clc
lods
jl
lods
push
ret
and
sbb
retf
sbb
out
sbb
push
push
iret
jnp
and
cli
ret
ja
jg
or
dec
sar
movs
lds
mov
call
sub
and
adc
dec
(bad)
push
mov
xchg
fsubr
dec
jbe
and
sbb
adc
dec
push
outs
pop
jle
mov
cmp
mov
out
jb
or
mov
add
setno
add
data16
(bad)
pop
xor
adc
imul
dec
or
jl
cmp
daa
dec
scas
push
repnz
in
and
jmp
call
mov
sbb
adc
(bad)
shl
adc
(bad)
imul
mov
dec
adc
shr
out
xor
mov
imul
(bad)
push
mov
dec
adc
cs
sbb
scas
sar
adc
clc
push
add
jo
sti
sbb
pusha
mov
loope
loop
push
cwde
retf
push
adc
ins
retf
jmp
popf
push
xlat
psllw
jmp
outs
inc
add
(bad)
repz
mov
pop
and
xor
adc
cmp
popa
push
xchg
xchg
sub
push
add
sbb
pop
daa
xchg
(bad)
xchg
or
mov
sbb
mov
scas
outs
icebp
lds
(bad)
in
hlt
in
sub
sub
and
xor
jae
dec
faddp
adc
into
movs
sub
(bad)
(bad)
sti
mov
xchg
in
dec
or
mov
dec
cld
leave
jge
jmp
retf
scas
ja
iret
div
sub
sbb
out
test
sub
jg
(bad)
mov
sub
inc
bound
aam
or
or
and
movs
mov
mov
mov
pop
leave
fs
sbb
shl
mov
mov
cmp
cmps
loop
sar
bound
xchg
or
loope
shl
and
inc
fsub
push
inc
test
setnp
add
add
test
mov
sbb
fild
push
push
(bad)
adc
xchg
les
xor
add
mov
mov
xor
push
xchg
lods
sub
out
mov
jno
inc
push
test
cmps
and
test
jnp
inc
xchg
movs
jns
sub
(bad)
out
mov
adc
call
mov
push
push
cmc
leave
stos
loopne
lds
imul
xchg
or
loope
xchg
or
ret
push
pop
xor
out
cmps
(bad)
pop
movzx
mov
shr
ds
jae
mov
xlat
js
movs
fistp
fs
push
cld
inc
xchg
loope
call
jle
out
xchg
push
push
je
dec
pop
addr16
ja
mov
add
inc
and
sahf
call
pusha
mov
hlt
xchg
push
addr16
mov
movs
test
push
add
retf
jne
dec
jbe
xchg
daa
aaa
bound
push
xor
nop
jno
sub
enter
mov
pop
loope
mov
or
pop
popf
xor
or
cmp
rol
test
fisttp
push
push
test
mov
push
sahf
retf
jecxz
sbb
jb
pop
pushf
add
sub
sub
and
xchg
shl
push
dec
sub
xlat
ror
mov
inc
inc
xchg
inc
sub
stos
mov
xchg
stc
xchg
push
xor
(bad)
adc
cmps
lods
mov
lock
dec
hlt
or
add
stos
das
sahf
sbb
add
in
jle
sbb
or
xor
dec
push
jmp
xchg
or
xchg
inc
push
xchg
mov
xor
leave
retf
xchg
push
push
xchg
xlat
movs
cmp
cs
push
cmp
nop
out
outs
adc
popa
test
loope
mov
xchg
push
dec
sbb
mov
imul
fst
fucomi
fwait
call
dec
pop
mov
jmp
fistp
icebp
and
xor
ins
test
add
daa
cmp
lock
addr16
push
xchg
test
sahf
stos
xor
or
mov
mov
xchg
das
fwait
xor
jo
popf
fdivr
jl
mov
cld
out
xchg
cdq
out
jb
ret
push
lods
mov
retf
int
or
cmp
xor
popf
sbb
add
popa
adc
pop
mov
pop
sbb
sbb
or
jmp
sub
pop
(bad)
in
neg
rcl
jmp
cmc
mov
add
in
(bad)
fmul
xchg
iret
std
mov
adc
add
and
xor
std
daa
jne
mov
add
cld
pop
xor
cmp
inc
mov
sti
ss
mov
dec
mov
mov
jmp
out
sub
shl
adc
mov
inc
mul
mov
inc
lods
cmc
sahf
stos
pushf
jbe
xor
or
xchg
cmp
js
fst
in
call
nop
sbb
mov
std
and
int3
and
dec
stos
(bad)
into
pop
sbb
sub
loop
fistp
lods
mov
pop
jae
es
cdq
inc
inc
mov
inc
and
test
outs
jbe
in
aam
xchg
(bad)
sti
xlat
das
xor
jno
push
loop
(bad)
ins
push
mov
push
dec
mov
lahf
adc
xchg
stc
xchg
sar
mov
shr
retf
pop
adc
xor
jmp
pop
dec
inc
jns
or
jecxz
jge
add
ret
sub
xchg
call
adc
repnz
test
mov
ss
sbb
js
push
jb
add
jge
xchg
push
mov
push
mov
xor
(bad)
cmps
aas
in
pop
fs
mov
retf
mov
(bad)
shufps
inc
mov
cmps
(bad)
mov
loopne
in
scas
mov
fld
add
pusha
jge
mov
xchg
jmp
xlat
outs
mov
inc
jecxz
cld
mov
pop
mov
(bad)
in
shr
inc
mov
mov
mov
sub
push
in
add
dec
into
(bad)
xlat
ret
fld
test
cmp
sub
adc
xchg
jmp
cmps
out
sub
inc
cmp
jge
test
jge
xchg
dec
fisttp
and
test
push
lahf
test
mov
jle
push
scas
outs
cmc
(bad)
sub
add
scas
pop
sbb
xchg
out
aas
clc
pop
test
int
fnstcw
les
mov
leave
sbb
and
fs
scas
scas
jne
out
mov
mov
mov
call
int
mov
(bad)
and
push
xchg
retf
imul
lods
push
out
sbb
pop
stos
dec
inc
pop
fldcw
leave
push
cmc
cmps
lods
fdivr
dec
fisttp
dec
fst
pmaddwd
lds
fisttp
mov
rol
pop
stc
mov
mov
xchg
dec
and
xor
add
push
dec
call
lock
mov
loop
add
push
mov
adc
aam
add
adc
and
jl
jno
dec
sub
push
jmp
ja
jbe
cmps
inc
inc
aaa
and
stc
js
loopne
push
cli
repz
mov
cmp
out
fist
dec
inc
push
adc
pop
mov
mov
mov
popf
movs
loop
push
bound
xor
(bad)
(bad)
xchg
jge
xchg
mov
(bad)
in
adc
or
mov
pusha
stc
scas
push
(bad)
and
xchg
xor
shr
mov
cmp
jo
jge
retf
inc
xchg
push
stos
jns
arpl
loope
xchg
and
aaa
mov
inc
call
pop
outs
and
xlat
dec
popf
mov
adc
pop
mov
xor
mov
pop
push
ds
xor
(bad)
adc
cdq
sub
pop
sub
jno
cmp
cmc
cwde
cmp
ss
int
push
or
lahf
mov
and
mov
and
in
(bad)
sbb
fisubr
jmp
daa
arpl
inc
mov
loopne
ret
int
in
jbe
int3
xchg
and
dec
js
mov
inc
push
movs
xchg
cmc
stc
and
xchg
sbb
(bad)
push
and
in
jmp
cwde
fwait
adc
xchg
jecxz
xor
jp
mov
fwait
dec
stos
jmp
mov
push
ficom
mov
jle
push
(bad)
pop
adc
jno
push
call
mov
shl
jae
int
mov
push
shl
enter
mov
aam
push
idiv
repnz
and
arpl
push
loopne
int3
xchg
jle
mov
sub
lods
repz
inc
cmps
stos
fmul
xor
mov
and
aam
out
jb
mov
inc
addr16
daa
lahf
add
push
lods
dec
stos
repnz
mov
mov
and
push
cmp
pop
movs
xlat
sbb
test
test
out
push
int
jns
movs
test
xchg
add
xchg
mov
cmp
rol
sbb
lea
sub
push
dec
and
pop
lock
cmps
aad
add
shl
scas
mov
pop
jmp
test
and
lea
test
jmp
add
mov
xlat
pop
int3
gs
movs
or
push
push
arpl
sbb
outs
lea
sub
sbb
popa
dec
ror
cdq
jp
in
jle
push
push
leave
and
push
test
xor
popa
ja
mov
outs
fdiv
mov
fdivr
mul
cwde
and
mov
jne
xchg
adc
pop
outs
ja
sti
icebp
xlat
fxch
sub
dec
xor
xor
dec
jg
mov
aad
add
ja
loop
ficom
lock
jae
adc
call
sar
add
mov
mov
daa
sub
push
push
push
xchg
(bad)
lods
test
ret
cwde
or
stos
loop
outs
cpuid
sub
mov
inc
lahf
mov
mov
(bad)
push
mov
or
(bad)
outs
out
pop
or
inc
rcr
xchg
jle
test
sub
or
scas
bound
cmp
xor
jmp
jecxz
xlat
rcl
fadd
sub
lahf
xor
jmp
mov
sub
add
jecxz
ins
in
add
xchg
out
ds
and
xor
loope
(bad)
sub
jb
mov
ins
or
scas
add
call
jle
sar
fs
clc
imul
rol
xchg
push
or
and
inc
mov
test
icebp
xchg
sahf
icebp
out
pop
push
aaa
adc
fidivr
shl
fild
sbb
dec
mov
pop
pop
sbb
lock
sub
jne
inc
ds
iret
xchg
mov
sti
sbb
call
fidiv
pop
fsub
jbe
rol
aad
fcmovb
jmp
into
push
icebp
mov
ret
test
scas
loope
or
sub
or
in
retf
ss
xor
mov
iret
pop
xor
mov
out
sbb
in
lahf
push
push
inc
pushf
fs
call
xor
jae
sbb
data16
inc
pop
fst
hlt
test
ss
pop
call
loopne
sub
sbb
pop
pushf
fcmovnu
xor
sbb
sbb
movs
adc
les
cmp
mov
and
loopne
mov
lds
loope
jmp
xor
lods
(bad)
movs
inc
sub
mov
xchg
bound
into
push
mov
jmp
pop
(bad)
sbb
sub
(bad)
sbb
ins
xlat
xchg
push
outs
inc
ja
adc
jg
cwde
mov
call
test
adc
movs
imul
je
or
mov
adc
mov
cmp
dec
(bad)
xchg
mov
dec
and
cli
mov
shr
scas
mov
cld
cmp
aam
imul
pop
push
mov
lds
jl
add
stos
mov
mov
ins
stc
popa
jecxz
sub
sbb
addr16
aaa
test
out
xchg
mov
xchg
cmc
icebp
sub
sar
ja
mov
mov
sbb
retf
cwde
shl
push
jmp
jg
lahf
out
pop
sub
cwde
loope
lods
push
das
mov
loope
mov
and
arpl
jne
in
add
mov
cmp
mov
pop
add
int3
ins
sar
fsub
lods
xor
repz
jle
gs
dec
mov
and
aas
leave
pop
inc
adc
sbb
aaa
repnz
je
jmp
cld
test
push
call
push
pop
or
sti
cwde
lea
dec
cli
push
jecxz
xor
sbb
adc
fist
sub
pop
ret
mov
ror
xor
scas
mov
inc
les
xor
sbb
add
popa
lds
fsub
or
mov
data16
test
xchg
jl
mov
sbb
pop
xchg
fwait
mov
out
lds
mov
cmps
xchg
push
repnz
inc
pop
mov
ss
or
fbstp
jno
push
mov
dec
fadd
fadd
es
jns
daa
inc
mov
not
jb
mov
popf
jbe
iret
push
in
push
mov
mov
addr16
imul
or
pop
xchg
xor
pop
lods
aam
ss
mov
movs
sar
mov
cli
xor
(bad)
xor
scas
xchg
jmp
push
xor
shr
outs
jl
jmp
and
addr16
cmp
fld
imul
sbb
sbb
xchg
int3
sahf
mov
add
sar
push
sbb
cmp
jmp
jg
push
pusha
out
sbb
mov
repz
cmp
leave
cs
adc
pop
adc
pushf
push
(bad)
fmul
movs
push
and
addr16
aam
ja
mov
mov
(bad)
lds
xchg
in
loop
js
iret
xor
xor
ja
sbb
stos
jp
pop
aaa
dec
movs
or
cmp
fdivr
mov
sbb
aad
pop
lea
fadd
int3
shl
push
inc
mov
xor
bound
cld
adc
push
xchg
(bad)
mov
mov
sbb
push
mov
bound
mov
jmpw
add
mov
bound
sbb
out
push
(bad)
cli
stos
mov
lahf
push
cmp
lahf
shl
daa
jecxz
(bad)
in
stc
rcl
mov
and
lahf
xchg
ja
inc
cmp
sbb
adc
add
cli
je
sbb
pusha
cld
addr16
jae
sbb
mov
adc
pusha
push
adc
icebp
mov
and
int3
cdq
clc
jns
mov
add
stos
imul
ds
and
and
pushf
lahf
pop
add
outs
cmps
lds
loope
popf
push
sbb
cs
out
(bad)
js
jmp
sbb
push
push
xor
scas
mov
and
and
xchg
mov
(bad)
ror
inc
neg
cmovae
jl
push
mov
adc
push
popa
pusha
clc
fmul
pop
outs
push
aaa
xchg
pop
push
leave
and
jo
dec
fimul
adc
adc
sub
data16
inc
movs
adc
pop
test
sub
out
mov
or
or
int
pop
push
ins
rcr
pop
les
sub
xchg
mov
jbe
imul
mov
jge
pop
push
jmp
push
not
icebp
mov
fild
sti
mov
jmp
jl
mov
das
inc
ds
retf
xor
cmp
inc
jae
push
out
and
xor
jmp
sub
clc
mov
in
sti
push
or
stc
cmp
call
test
movs
arpl
fucomi
mov
jmp
mov
mov
scas
imul
fs
or
nop
shl
shl
or
test
cmp
push
ss
and
add
add
mov
imul
into
cmp
ret
pop
mov
lods
cdq
out
ja
mov
inc
xchg
dec
sti
out
or
lods
ret
mov
mov
cmps
rcr
sahf
cmp
out
pop
cmc
inc
mov
xchg
mov
aas
int
adc
cmp
mov
and
dec
mov
mov
rcr
ret
out
cmp
sbb
jae
cmc
push
pop
and
sub
sub
repz
daa
loope
aad
stos
push
push
ins
je
push
jmp
out
xchg
sbb
outs
pop
sub
into
mov
push
int
idiv
mov
xchg
int3
imul
mov
(bad)
call
jmp
fld
fadd
retf
repz
xchg
add
add
mov
jmp
mov
fwait
mov
mov
mov
adc
pop
fucomp
and
ja
push
cmp
adc
push
jns
xor
mov
inc
out
mov
push
cmps
jge
aad
(bad)
popa
mov
iret
xor
xchg
and
enter
or
jb
sbb
push
icebp
out
bound
adc
mov
enter
jnp
in
mov
sahf
ins
jmp
pop
es
or
clc
stos
call
icebp
or
push
mov
jmp
es
test
or
xor
stos
mov
inc
dec
shl
adc
ret
fstp
cdq
mov
enter
cmp
cld
inc
dec
push
jno
sbb
into
adc
dec
in
repz
daa
mov
mov
jnp
out
pop
imul
mov
or
sub
sahf
ficomp
(bad)
test
aad
idiv
daa
sbb
lods
frstor
call
xor
sahf
xchg
mov
push
ficomp
pop
popa
fidiv
mov
out
xor
mov
jbe
dec
mov
xchg
xchg
jo
les
movs
aam
xchg
mov
add
pop
test
adc
jo
retf
sbb
pop
gs
aas
inc
sub
jo
dec
hlt
fwait
jno
dec
mov
xor
(bad)
fldenv
pushf
lea
push
in
cs
mov
fld
movs
sub
sub
mov
mov
adc
pusha
out
xor
or
cmp
enter
pop
pop
jmp
inc
mov
push
lock
xor
pusha
xchg
test
and
sub
lds
push
outs
cwde
js
jbe
imul
mov
add
inc
fiadd
adc
cmp
push
movs
in
inc
dec
push
sub
cli
dec
call
ds
rcr
cs
or
add
xchg
pop
icebp
jecxz
cmp
rol
cmp
fwait
mov
mov
in
xchg
enter
scas
popf
mov
out
in
adc
add
fsubr
ins
jecxz
and
sub
cmc
xor
retf
sub
adc
sub
jecxz
cld
dec
ds
data16
ret
into
imul
xlat
sbb
push
mov
repz
inc
or
call
sbb
and
adc
std
inc
push
imul
xor
or
aam
das
dec
sub
paddusb
inc
test
movs
jmp
mov
xlat
push
js
sub
data16
rcl
div
jne
mov
pop
sahf
in
test
push
ja
cdq
or
dec
lds
(bad)
sub
or
or
or
(bad)
mov
push
inc
sbb
(bad)
pusha
mov
fdiv
push
or
jbe
xor
lock
mov
or
push
pop
mov
cmp
(bad)
jg
jmp
adc
jl
dec
rcl
or
and
or
nop
in
inc
nop
ss
cwde
push
xor
xchg
or
iret
fxam
xor
mov
dec
push
mov
and
mov
(bad)
js
(bad)
and
or
sub
mov
xchg
ret
push
lahf
mov
test
arpl
and
dec
mov
ins
jg
mov
sbb
clc
mov
xchg
test
jne
pop
fnstsw
cmp
hlt
mov
xor
or
fild
test
pop
push
pusha
push
xchg
sub
int
test
sbb
outs
mov
fst
sbb
fcom
jne
rcl
xchg
btc
arpl
repz
mov
jmp
cmp
inc
popf
movs
or
test
mov
sub
mov
mov
enter
cmp
dec
push
xchg
xor
and
icebp
call
mov
pop
fs
out
fsub
and
sbb
xchg
mov
jne
test
pushf
mov
mov
adc
lahf
adc
xor
icebp
sbb
pop
lods
jg
out
movs
iret
fisubr
pop
inc
outs
sbb
movs
pop
xor
mov
sub
mov
les
adc
jle
les
or
mov
mov
push
pop
adc
sti
out
test
inc
and
jmp
xchg
sbb
jp
sub
adc
mov
aad
inc
dec
mov
inc
sar
fisub
push
test
cs
sar
repz
test
enter
cwde
xchg
clc
mov
mov
sub
dec
jg
repz
test
or
mov
jne
mov
rcl
jns
dec
(bad)
push
not
adc
icebp
push
inc
call
loop
fld
pop
sbb
outs
out
mov
fcomi
and
pushf
mov
fild
xlat
and
idiv
cli
iret
ret
movs
dec
dec
adc
fwait
dec
int
xchg
pop
or
rcr
cdq
or
sub
xor
and
test
push
cli
pop
mov
cmps
mov
or
ins
mov
rdtsc
out
pop
mov
adc
sti
nop
or
shr
mov
aas
sti
inc
push
add
sbb
cmp
sbb
or
jmp
dec
push
inc
js
loopne
xor
dec
mov
xchg
xlat
cs
sbb
push
cmps
shl
mov
outs
(bad)
out
gs
hlt
stos
and
mov
mov
jns
fisub
push
aad
ds
xchg
mov
inc
dec
shl
stos
add
add
inc
sub
xchg
imul
push
add
sti
cmp
dec
shl
into
xor
jmp
mov
into
xor
fdiv
jmp
aas
outs
jl
cmp
mov
out
mov
or
out
retf
mov
sub
shl
and
ret
fisub
xor
xor
jecxz
or
add
stos
and
cs
xchg
inc
repnz
pushf
(bad)
je
repz
pushf
or
jl
bound
mov
xor
inc
adc
shl
scas
mov
int3
idiv
rcr
mov
popf
mov
idiv
rcl
mov
sbb
pop
in
stos
(bad)
lock
aam
dec
lea
cmps
sub
out
mul
push
in
jb
aam
sbb
push
pop
mov
push
aam
in
add
sti
movs
mov
sub
(bad)
pop
add
lea
iret
xchg
call
mov
mov
dec
mov
mov
xor
mov
fmul
cmc
cmps
xor
scas
pusha
(bad)
push
cmp
enter
sub
sub
pop
call
lahf
fidiv
add
sbb
out
adc
sub
push
jns
je
add
sub
xchg
adc
or
sbb
in
add
jl
adc
pop
pop
push
push
sub
xchg
sahf
daa
rcr
fstp
clc
xchg
sub
fsubr
fs
pusha
push
mov
sub
retf
hlt
dec
inc
pop
push
mov
stos
push
mov
cmp
test
cmp
fild
les
icebp
je
lock
add
mov
je
das
jp
jmp
pop
aam
mov
sub
push
out
sbb
cmp
jg
lock
cmps
inc
dec
xchg
(bad)
sub
cmp
or
popf
iret
pop
pop
inc
mov
and
pop
or
dec
clc
sub
xor
xchg
add
adc
push
hlt
daa
mov
dec
lds
dec
mov
adc
cld
cmp
push
add
sahf
or
ret
hlt
xor
das
or
jb
fcomip
retf
sbb
pop
mov
gs
sbb
mov
icebp
jb
ret
dec
jg
aad
inc
and
jmp
inc
pusha
imul
test
sti
aam
mov
cdq
scas
xchg
or
call
data16
mov
retf
(bad)
jmp
xor
lods
mov
sbb
and
outs
add
cmc
call
and
inc
adc
(bad)
pop
movs
mov
loopne
or
xor
and
call
add
pushf
push
hlt
int
xor
xchg
les
xor
sbb
icebp
push
cmc
xor
xchg
mov
mov
data16
inc
cwde
jo
loope
(bad)
fld
pop
pushf
dec
data16
lock
and
add
sti
mov
(bad)
std
jb
icebp
xor
mov
push
sti
out
add
add
inc
inc
or
cmp
neg
xor
clc
mov
in
push
sbb
cmp
sub
aam
xor
mov
mov
stos
movs
sub
lods
push
jecxz
mov
sbb
imul
dec
(bad)
out
inc
mov
add
clc
adc
dec
pop
mov
mov
xchg
fcomp
popa
push
cwde
fld
stos
cmp
xor
add
mov
xchg
daa
neg
in
cli
(bad)
pop
mov
retf
mov
out
dec
xor
jl
cmp
movs
cld
mov
mov
pushf
push
sahf
stos
and
mov
div
mov
fild
lods
mov
jp
fsub
ret
inc
bound
in
xchg
inc
add
and
add
xor
(bad)
aaa
fld
xchg
rol
jbe
xor
sub
jo
or
push
pop
sub
xchg
push
sub
ror
aaa
jp
push
ficom
xchg
rcl
mov
cmp
mov
test
es
repz
xchg
lods
push
and
xor
mov
and
ja
daa
jns
(bad)
xchg
xchg
test
cmc
pop
xchg
push
sahf
dec
arpl
mov
mul
mov
fisubr
movs
push
xor
or
mov
add
pop
cmps
lahf
dec
ins
add
jne
out
test
jmp
mov
dec
imul
movs
test
test
sub
sub
xchg
mov
jb
dec
es
and
fdecstp
xlat
pop
dec
mov
pop
cmp
add
rcl
dec
mov
test
mov
ret
cmp
inc
lods
ret
pop
mov
js
pop
fsubrp
es
imul
mov
xor
cwde
mov
scas
shr
cld
mov
push
add
sub
(bad)
cld
call
movs
aas
jle
push
xor
mov
test
push
mov
loopne
sbb
repnz
pusha
loope
xchg
sbb
dec
jae
leave
fs
dec
mov
sbb
dec
test
popf
popf
sar
stc
fst
pop
jns
fst
popa
shr
mov
aad
lea
cmps
mov
and
jp
sbb
jp
pop
mov
in
repz
cmp
mov
das
mov
popa
pop
push
adc
inc
retf
and
ret
xor
mov
cmps
add
adc
inc
fist
repz
push
lock
adc
jge
push
mov
mov
nop
jle
sti
sub
mov
adc
lods
mov
pop
sbb
ud1
xchg
or
cmps
jb
mov
mov
cmc
xchg
mov
sub
add
clc
loop
dec
loop
mov
jns
xor
adc
hlt
jb
or
push
inc
cmp
sbb
cmps
or
lds
ja
aam
sub
jne
pop
jmp
pop
push
mov
add
or
cmc
call
daa
aaa
push
xor
xor
movs
or
mov
(bad)
ficomp
push
dec
fidiv
push
ret
add
xor
pop
int
fisub
or
ret
add
test
inc
xchg
pop
jmp
push
dec
xchg
dec
push
or
xlat
data16
mov
icebp
sbb
push
out
xchg
jl
shl
retf
or
std
iret
xchg
and
jmp
xchg
call
dec
pop
xor
adc
cmc
or
inc
stos
mov
jne
jnp
imul
movs
pop
jae
cmp
jmp
mov
rcl
and
mov
in
ss
aad
or
cmp
xchg
inc
cmps
xor
pop
mov
add
dec
dec
outs
jno
aas
setne
push
outs
aaa
jmp
stos
call
ret
lods
adc
adc
aad
or
push
adc
jmp
dec
jg
push
lock
xchg
dec
sub
and
imul
cmps
sahf
mov
test
les
sub
adc
cmp
aas
(bad)
sahf
sub
mov
stos
shl
mov
push
cmp
sbb
and
out
add
clc
jmp
ror
js
mov
cmp
add
aas
hlt
adc
in
sub
sub
jo
les
ret
fwait
xchg
jb
push
popa
out
cmp
sub
es
addr16
dec
out
push
aaa
cwde
sbb
out
mov
xchg
xchg
(bad)
push
cmp
icebp
or
sub
ror
bound
ss
(bad)
popa
dec
xchg
scas
ffree
imul
ins
or
push
cmps
fist
and
out
es
mov
ret
and
gs
push
jo
sbb
and
mov
aam
rcl
iret
mov
pusha
xchg
fnstcw
sbb
adc
mov
stos
pop
repnz
sbb
sti
add
retf
inc
fstp
out
ds
test
mov
pop
dec
addr16
inc
dec
mov
xor
or
cmp
mov
push
movs
adc
stc
(bad)
xor
ins
fs
fld
pop
(bad)
(bad)
dec
lods
add
sbb
cdq
shr
ss
(bad)
xor
cmp
jecxz
repz
ror
ret
mov
out
and
mov
cmp
pop
push
dec
mov
in
dec
push
xchg
lock
adc
mov
and
sbb
dec
ds
mov
mov
add
pop
idiv
xchg
fadd
cmps
inc
mov
pushf
mov
retf
ja
js
fdivr
les
iret
cdq
jnp
fstp
(bad)
push
xor
add
in
in
stc
data16
pop
mov
push
push
cli
data16
mov
icebp
arpl
outs
xor
dec
xor
mov
push
in
add
ror
xchg
mov
jmp
cmp
mov
in
int
test
enter
or
loopne
xor
or
(bad)
call
push
mov
sub
adc
jno
push
mov
sub
fld
lahf
mov
mov
sbb
jmp
pop
xor
adc
dec
in
neg
xchg
jae
lods
jb
xchg
out
cmp
aas
sbb
xchg
fsubr
or
sub
mov
(bad)
mov
dec
add
sbb
xor
or
cmp
cmps
pop
add
sbb
lahf
add
jo
push
mov
clc
test
inc
cdq
mov
(bad)
jmp
mov
xchg
jne
mov
outs
sub
in
mov
ret
mov
dec
jmp
add
test
jmp
cmps
adc
arpl
pushf
mov
ret
bound
mov
lods
mov
and
xchg
jecxz
dec
or
push
mov
loop
mov
test
ins
sti
out
int3
mov
sub
ret
movs
(bad)
in
or
jns
or
push
rcr
int3
push
jne
shr
or
add
lods
jmp
dec
and
inc
add
(bad)
leave
add
mov
aaa
push
jle
pop
inc
loop
call
adc
push
cmps
xor
fnclex
pop
push
or
mov
xor
add
pop
mov
add
sub
mov
and
and
addr16
xchg
cmp
and
bound
daa
mov
mov
mov
mov
mov
call
fimul
dec
retf
les
cmps
and
(bad)
sbb
jle
lea
adc
mov
or
xor
jbe
dec
hlt
mul
(bad)
ror
mov
dec
sti
div
or
dec
fistp
outs
push
scas
bts
xchg
dec
iret
mov
clc
es
add
in
push
adc
call
sar
ficom
xchg
outs
popa
xchg
dec
mov
or
adc
pop
push
loopne
jb
imul
shl
cmps
sti
add
xchg
ret
push
test
dec
push
dec
retf
sbb
or
sbb
aam
pop
repnz
cwde
aam
jmp
inc
es
das
pop
in
cmc
and
dec
jl
cmps
push
ja
movs
xchg
pop
not
xchg
push
ins
inc
mov
lahf
ins
out
jns
jne
inc
(bad)
cmp
je
adc
in
cs
outs
mov
lahf
mov
loopne
jbe
aam
push
jae
imul
jnp
xor
or
fs
mov
dec
mov
xchg
add
jne
dec
jg
test
mov
inc
(bad)
push
and
mov
sbb
jp
dec
les
or
ins
movs
das
mov
shl
add
jge
bound
xor
and
jge
adc
out
adc
test
(bad)
ins
in
sub
shr
adc
mov
cmc
jno
rol
daa
aam
adc
jmp
xor
lock
jmp
xor
inc
cmp
fdivr
mov
inc
dec
mov
mov
lea
cmp
cs
mov
shl
dec
cmp
xor
call
out
hlt
mov
aam
push
aam
jecxz
pusha
popa
pop
std
pop
jae
xor
xchg
jne
aas
push
jns
xor
mov
xor
inc
push
push
cwde
daa
push
js
inc
mov
mov
pushf
sbb
(bad)
jno
xor
movs
sub
cmp
sub
pop
mov
out
clc
sahf
xor
mov
aas
out
(bad)
sar
mov
rcl
jecxz
loopne
jecxz
adc
adc
pop
mov
movs
jmp
das
push
jg
adc
mov
addr16
pop
mov
inc
ror
push
add
loopne
scas
call
mov
(bad)
xchg
jbe
jo
and
gs
idiv
add
fldl2e
rol
or
jp
and
dec
cmp
cmp
js
pop
inc
(bad)
shl
stc
inc
add
(bad)
cmp
jnp
push
inc
es
test
test
popf
int3
dec
inc
jno
fadd
jae
cmp
(bad)
jnp
aaa
fmul
std
or
rcr
pop
cmp
ret
lds
lds
push
inc
fisttp
mov
(bad)
mov
std
sub
lds
sbb
movs
fwait
cs
sub
pop
cmc
mov
jmp
pop
xor
or
jmp
call
(bad)
aaa
loopne
aad
push
(bad)
js
enter
outs
inc
dec
add
cdq
mov
mov
sub
xchg
shl
xchg
sbb
push
nop
push
cmps
xor
cld
(bad)
scas
push
xor
xchg
mov
mov
test
sbb
test
fldcw
js
je
pop
lea
loope
and
push
sbb
push
(bad)
mov
or
in
add
out
cld
mov
rol
scas
arpl
scas
out
pop
neg
stos
mov
add
mov
jmp
stos
fs
cmp
retf
mov
mov
inc
jg
lods
fs
ret
scas
adc
into
aas
sub
nop
pop
movs
mov
test
or
aad
pushf
xchg
(bad)
and
movs
sbb
sbb
nop
sbb
add
adc
push
in
pop
dec
mov
mov
add
sti
fmul
ret
xchg
mov
gs
push
cwde
pop
jns
add
jge
mov
cmp
cmp
aaa
je
inc
sbb
(bad)
jecxz
add
sbb
fwait
push
mov
pop
ficomp
movs
in
dec
pop
ret
repnz
aam
mov
sbb
xchg
cli
adc
mov
or
or
retf
push
jg
aam
jns
adc
retf
and
adc
fwait
mov
into
jmp
jne
mov
es
lds
mov
test
jmp
popf
mov
pop
imul
out
loopne
push
adc
cmp
mov
in
sahf
lahf
cli
push
fcom
stos
int3
lahf
adc
push
mov
mov
add
cmp
mov
mov
pop
mov
push
rol
div
dec
leave
test
je
xchg
imul
popa
aaa
cmc
(bad)
or
dec
jge
inc
dec
xchg
jb
(bad)
push
icebp
add
bound
inc
mov
push
mov
dec
sbb
nop
fsubp
mov
addr16
sar
sbb
movs
push
jg
push
sub
jo
adc
cwde
pop
clc
(bad)
adc
xchg
and
jb
repz
fcmovnu
dec
push
xlat
xor
mov
add
scas
mov
dec
popa
add
sub
arpl
(bad)
cmp
out
add
iret
call
mov
ds
rcr
out
mov
test
jbe
ds
cwde
cmp
pop
mov
pop
in
push
jg
clc
add
add
push
add
dec
test
cmp
lahf
adc
and
scas
in
mov
aad
jge
push
push
push
fistp
mov
sti
cmps
adc
ror
not
sub
pop
dec
dec
xor
push
scas
dec
(bad)
hlt
cmp
mov
ret
inc
clc
cmps
inc
retf
cmp
mov
test
repz
or
push
sub
add
pushf
shr
pop
call
jo
mov
push
xchg
pop
xor
sub
jae
rol
fisubr
js
xchg
cmp
pop
mov
and
mov
movs
out
mov
pusha
pop
ror
mov
mov
dec
mov
(bad)
mov
ja
(bad)
mov
pop
mov
xchg
retf
inc
pop
int
sub
or
rcl
pop
adc
icebp
ret
jg
push
jecxz
and
test
sub
jle
add
push
push
jns
sub
shl
jge
pop
jo
jb
aad
popa
cmp
es
test
faddp
int
jmp
xchg
push
adc
pop
xchg
and
mov
jno
or
dec
addr16
push
clc
fsub
in
outs
out
ins
inc
mov
cwde
(bad)
loopne
mov
push
retf
adc
rcr
mov
cmp
cmp
int
or
popf
mov
imul
pop
ret
test
stos
or
pop
inc
mov
mov
(bad)
in
push
jmp
sbb
enter
cmp
or
sbb
mov
js
stc
mov
test
into
mov
repnz
sub
int3
bound
mov
scas
mov
rcr
les
cs
js
fbstp
out
mov
dec
pop
dec
xchg
cmp
mov
shl
cmp
sbb
lea
cld
xchg
adc
push
mov
push
scas
pop
(bad)
mov
outs
jge
jb
pop
dec
xor
mov
das
ret
push
test
push
jb
lods
fnstsw
dec
add
jae
jo
mov
faddp
repnz
mov
cmp
loopne
inc
nop
adc
mov
jg
(bad)
stos
sahf
jns
in
xchg
xor
sbb
pop
mov
jge
xor
(bad)
cmp
add
add
cli
lods
pop
xor
pop
mov
pusha
dec
push
dec
fnsave
lds
ds
out
ror
stos
add
mov
xchg
push
mov
lea
out
(bad)
mov
sbb
mov
mov
shl
sub
repz
imul
xchg
pop
retf
inc
int3
jb
pop
mov
cmp
sbb
ds
mov
dec
dec
in
stc
xchg
cmps
jb
scas
(bad)
fisub
icebp
and
push
jecxz
mov
mov
jno
inc
loop
pop
int3
int
ret
xchg
push
inc
xor
sbb
fwait
sub
out
int
(bad)
in
mov
inc
ret
pushf
retf
dec
jmp
das
mov
push
xchg
scas
ds
pop
cli
dec
fist
add
in
dec
in
sbb
stos
or
out
div
sub
xchg
mov
jle
adc
push
inc
inc
adc
cmp
add
cmps
jno
jmp
ds
push
int
cwde
adc
push
xchg
cld
js
sbb
fdivr
push
cmp
out
dec
jmp
aas
add
sub
arpl
retf
ins
bnd
jb
xor
mov
(bad)
call
add
xchg
out
call
fdivr
jns
add
popf
cmp
lds
cmp
adc
jne
fmul
and
into
pop
pop
scas
aas
and
int
push
pop
imul
scas
clc
enter
shr
sar
fwait
pop
int
loop
popa
sahf
inc
movs
xor
inc
test
out
jecxz
push
sbb
ss
call
mov
add
test
pop
sbb
adc
stos
sti
(bad)
mov
add
fmul
mov
adc
adc
shr
loop
loop
push
popa
ds
xor
jg
dec
cld
adc
(bad)
cmp
ds
jge
sahf
pop
int
mov
sub
xor
inc
mov
xchg
push
aas
cdq
lahf
push
addr16
and
retf
pop
fcmovne
cmp
or
jbe
adc
or
jge
xchg
loopne
dec
lds
jmp
outs
fwait
in
add
lds
cmp
cmc
adc
lock
add
bound
push
jo
fnsave
mov
std
lock
pop
push
aaa
jge
outs
fistp
jecxz
cs
cs
(bad)
out
push
jb
sub
bnd
(bad)
loop
and
mov
sbb
and
arpl
adc
outs
sbb
(bad)
in
arpl
je
jmp
(bad)
out
jnp
dec
stos
xor
mov
and
add
aas
dec
scas
xchg
fistp
xlat
mov
cmp
push
ret
mov
inc
repnz
leave
dec
push
stos
mov
test
push
inc
aas
or
pop
push
out
add
scas
xor
retf
sub
rol
adc
jns
mov
sti
push
push
and
push
out
fld
xchg
mov
test
mov
std
and
mov
sub
mov
sub
xor
xchg
out
lock
rcl
imul
jns
push
xchg
inc
aas
loop
outs
daa
in
push
rcl
xchg
out
push
and
fs
retf
jns
ds
mov
pop
ja
sti
mov
fist
add
das
dec
jge
adc
adc
out
stc
dec
hlt
mov
xor
mov
scas
sbb
(bad)
mov
xchg
aad
je
sbb
or
das
and
fnstcw
inc
dec
push
iret
iret
pop
add
test
jbe
fs
cs
rcr
mov
repnz
in
enter
addr16
dec
xchg
adc
je
pop
in
sub
cmp
frstor
and
test
clc
mov
je
mov
mov
push
mov
adc
jp
mov
mov
les
scas
pop
fdiv
inc
push
stos
(bad)
adc
mov
xor
mov
call
mov
xor
test
jp
test
sub
nop
gs
xchg
xchg
cmp
pusha
rcl
inc
sub
lods
inc
addr16
popf
gs
mov
jbe
pushf
cmp
cld
jecxz
pop
jb
push
inc
les
repnz
push
ret
adc
sbb
leave
ss
pushf
mov
push
push
clc
xor
jns
fs
nop
dec
test
xchg
jo
icebp
sti
imul
lods
lds
mov
and
test
and
jecxz
pop
rcr
and
sub
inc
sahf
jmp
push
mov
xchg
cmp
inc
jb
adc
dec
movs
mov
sub
sti
push
push
js
bound
dec
mov
jge
mov
shl
add
sub
shl
sub
outs
aam
fucomi
or
imul
ret
jecxz
push
and
sub
mov
dec
rol
and
stos
inc
and
or
push
test
addr16
in
aas
popf
adc
sahf
(bad)
rcl
xlat
mov
test
loope
jbe
call
add
inc
or
jo
je
and
ret
ret
mov
jne
cmp
push
mov
or
and
sbb
xor
jb
les
add
je
inc
xchg
fsub
sub
popf
leave
mov
outs
xchg
hlt
jmp
call
gs
scas
dec
jns
retf
popf
sahf
push
loope
dec
pop
jl
dec
rcl
xchg
dec
push
rcl
mov
push
shl
aam
pop
mov
push
xchg
inc
sbb
inc
fisub
icebp
enter
pop
clc
stos
xchg
inc
add
xor
shl
shl
loopne
push
add
das
cmps
ds
jo
xchg
cdq
jmp
xchg
jecxz
mov
or
and
loop
push
dec
jmp
test
cwde
xor
iret
ins
mov
in
mov
arpl
mov
aaa
or
dec
push
pop
je
lahf
xchg
jg
xchg
fnsave
add
cmc
(bad)
dec
mov
mov
(bad)
sahf
(bad)
out
xchg
xor
and
inc
dec
cs
pop
dec
adc
add
mov
or
jl
inc
adc
add
gs
dec
sbb
ds
add
jp
adc
lock
xor
sub
jle
stc
fdiv
add
and
mov
or
add
arpl
fs
xlat
push
mov
icebp
push
test
push
das
sbb
mov
sbb
inc
inc
ret
mov
rol
cs
stc
xchg
xor
and
push
xor
adc
in
ins
and
arpl
(bad)
jns
les
std
neg
pmaddwd
movs
in
pop
adc
dec
cmp
(bad)
in
mul
xor
inc
(bad)
and
call
cmp
add
call
jp
fst
lods
pop
mov
sbb
in
mov
add
xchg
mov
lods
fdivr
ja
movs
(bad)
nop
pop
xor
cs
fs
nop
into
push
enter
fcomi
cmp
pushf
adc
retf
dec
nop
mov
jg
sbb
xchg
(bad)
add
loop
popa
xchg
push
cmp
aad
inc
loop
call
push
mov
mov
ins
mov
push
cs
jb
or
leave
outs
pop
aas
pop
pop
jle
inc
popa
out
in
ss
pop
dec
adc
in
and
pop
test
fistp
xchg
iret
adc
ds
cmc
hlt
push
mov
outs
daa
bound
ja
mov
mov
fnsave
retf
scas
inc
rcr
pop
and
pusha
fadd
fadd
fmul
in
hlt
jl
pop
test
jae
add
sti
xor
leave
pop
js
sub
lods
clc
rcl
inc
ins
push
jmp
xor
pop
or
fadd
aam
cdq
jmp
test
pop
stc
das
pop
adc
pop
mov
fidivr
test
sbb
test
aad
neg
dec
movs
das
stos
out
and
sub
bound
leave
fmul
loopne
bound
retf
pusha
mov
cli
(bad)
lock
mov
sub
adc
test
sub
loope
sar
jle
nop
jo
retf
out
inc
and
dec
test
pop
(bad)
stos
push
push
fucomip
fcmovbe
nop
adc
ins
push
scas
shr
mov
mov
dec
fidiv
cs
mov
or
xchg
push
call
mul
test
or
imul
aad
data16
xchg
daa
sbb
aas
adc
and
imul
jg
cdq
add
call
ret
loopne
push
(bad)
jo
fcmovnu
mov
ret
jp
je
ret
push
call
adc
test
mov
movs
jb
lahf
dec
dec
(bad)
push
pop
pop
std
xor
out
(bad)
sbb
fcomp
cmp
mov
cmp
out
ret
cli
cmp
sub
jl
push
sbb
pop
inc
mov
stos
ins
bound
cmp
jae
ins
push
jmp
jne
rcl
movs
jns
(bad)
dec
mov
fisttp
loop
inc
gs
icebp
and
jge
cdq
or
imul
xchg
scas
sub
ffree
scas
shr
jl
stos
bound
mov
xchg
adc
movs
mov
push
mov
iret
(bad)
(bad)
lahf
mov
xor
shl
push
test
jp
inc
outs
dec
aad
mov
cli
xor
sub
dec
adc
ficom
(bad)
loopne
push
lock
inc
adc
xchg
ja
lahf
aas
cmp
ror
push
fs
loope
jmp
sub
adc
test
push
xor
dec
mov
loopne
push
ret
fnstcw
cdq
and
mov
iret
repz
ins
movs
or
lock
les
jbe
cmp
jnp
add
pop
cld
mov
div
or
test
mov
pushf
jbe
outs
mov
push
mov
stos
push
call
jg
fnstenv
ja
int3
sbb
mov
and
aaa
mov
adc
mov
and
push
ret
and
lock
(bad)
adc
push
(bad)
rcr
loopne
adc
adc
push
cwde
cld
or
pop
adc
inc
adc
xchg
aad
rcl
mov
or
inc
sbb
sti
inc
pop
cmp
cs
pop
mov
ja
out
(bad)
fild
(bad)
in
mov
stc
cdq
mov
lock
mov
mov
sub
(bad)
movs
cmp
das
add
jo
loopne
xor
pushf
sbb
add
dec
mov
retf
inc
inc
mov
pop
jl
dec
repz
pop
pop
xchg
popf
pop
out
lahf
sub
inc
lea
imul
fdivr
ja
adc
jecxz
mov
mov
test
push
xor
ret
scas
rcr
int3
lods
push
and
xchg
push
pop
jp
or
cmps
hlt
aad
cld
jge
jae
jne
xchg
cmps
lods
or
xor
pop
dec
cmp
cmp
fadd
sub
inc
xchg
in
sub
jmp
repnz
mov
mov
retf
imul
lods
lds
out
sbb
bound
adc
jno
mov
jae
add
push
add
or
mov
pop
(bad)
pop
add
push
fbstp
jo
xor
sbb
xor
dec
punpckhdq
or
mov
mov
jbe
mov
xor
stos
xor
sbb
aas
jae
in
xchg
mov
inc
into
push
mov
sti
xchg
mov
leave
in
pop
jmp
push
mov
fidiv
cmps
aad
mul
mov
or
outs
mov
fld
cmp
std
push
push
pop
inc
jg
aaa
icebp
mov
pop
add
mov
jns
jae
cli
add
ret
(bad)
adc
fcom
xor
mov
lods
int3
enter
call
xchg
leave
(bad)
cld
aaa
mov
dec
jecxz
xchg
add
stc
xchg
stos
enter
add
sbb
cmp
dec
scas
loopne
push
fldcw
sbb
and
sti
xchg
jmp
fcom
jno
and
push
and
imul
push
popf
add
jge
aas
inc
sub
sub
test
aam
ins
fwait
addr16
sub
xor
pop
push
mov
das
adc
mov
adc
je
push
test
pop
xor
cmp
and
hlt
or
pop
imul
xor
repz
mov
jmp
cmp
mov
add
nop
xor
retf
push
stos
gs
loopne
mov
inc
mov
idiv
lahf
(bad)
xor
dec
test
out
and
sti
(bad)
imul
inc
and
push
xchg
mov
cmp
dec
popf
leave
add
jle
(bad)
adc
mov
in
add
add
xor
cmp
ror
mov
cld
adc
adc
repz
unpcklps
ret
outs
fwait
stc
adc
lahf
mov
loopne
fmul
fisub
xchg
sbb
add
aas
mov
loopne
fs
xchg
es
xchg
jno
cmps
cli
sub
movs
push
sbb
cmc
repz
cmp
mov
sub
pop
cmp
add
test
scas
sub
push
in
jne
out
rcr
adc
icebp
int3
aas
mov
mov
fisub
push
loop
mov
bound
or
(bad)
mov
je
int
mov
sub
jp
xor
mov
test
adc
jge
xor
aam
xor
lods
add
fst
mov
mov
or
mov
and
gs
shl
test
pushf
mov
push
jg
add
sub
push
xlat
aas
push
sahf
cli
popa
jne
jecxz
adc
pop
sbb
stc
or
mov
rol
adc
arpl
jg
leave
ret
int
(bad)
ret
xchg
sub
sahf
rcr
cmp
bound
test
enter
jecxz
(bad)
mov
call
mov
dec
xor
cdq
pop
mov
fadd
cmc
cmp
push
inc
icebp
mov
adc
xchg
mov
inc
movs
sbb
popf
jb
push
popa
jl
dec
jmp
(bad)
(bad)
adc
add
loopne
mov
mov
cmp
ror
jecxz
dec
call
dec
or
arpl
test
in
popf
loope
sbb
call
sub
(bad)
stc
imul
sub
push
jb
xor
outs
ret
hlt
dec
mov
push
stos
xchg
cmp
adc
inc
gs
jnp
inc
adc
stc
xchg
push
dec
jge
mov
out
(bad)
aam
in
out
sbb
adc
cld
add
sub
sbb
stos
mov
popa
cmp
daa
scas
(bad)
sbb
(bad)
(bad)
xor
cmps
mov
shl
pop
addr16
inc
sub
sbb
mov
mov
int
(bad)
jle
dec
mov
add
xchg
cli
les
inc
fstp
add
mov
fs
icebp
inc
aas
mov
rcl
scas
sti
xchg
(bad)
loope
out
sub
fcomp
cmp
xor
into
mov
repnz
dec
pusha
in
sbb
bound
in
repz
nop
jle
pusha
in
icebp
fs
aas
aas
sub
pop
mov
add
mov
inc
add
cmp
xchg
ffree
cmps
loopne
adc
rol
jae
imul
fucomip
pop
les
push
into
in
jno
lock
cmc
mov
fwait
(bad)
fsubr
jne
(bad)
les
mov
daa
pop
popf
push
xor
rol
inc
mov
mov
mov
mov
pop
lock
stos
dec
in
push
retf
mov
hlt
and
lock
push
pop
dec
jle
idiv
int
xchg
pop
aam
sub
inc
sbb
imul
xchg
imul
fnsave
shl
adc
jns
add
fist
movnti
jae
pop
shl
js
test
jmp
int3
or
outs
rcl
out
repz
sbb
push
shr
lds
bound
(bad)
pop
ret
je
or
pusha
adc
xlat
ds
add
jp
jmp
cs
in
xchg
jp
mov
pop
xor
mov
xchg
jno
pop
fdivr
cdq
repnz
stc
icebp
ja
fisub
call
jne
repnz
int
xor
pop
int3
fdivr
mov
iret
and
pop
xor
add
push
mov
mov
pop
call
call
sub
dec
repz
dec
iret
cdq
mov
mov
inc
push
mov
dec
es
pop
dec
fdiv
push
xchg
jb
adc
lock
xchg
dec
daa
setb
xchg
mov
loope
das
test
or
cmc
cmp
xor
int
retf
adc
adc
mov
adc
sub
call
sub
dec
xor
das
xchg
jmp
mov
pop
shr
push
jle
cmp
cmp
or
pop
cmp
gs
bndstx
mov
cmp
in
jp
fidiv
or
xchg
sub
js
cmp
int3
jge
cdq
vcmpps
sbb
ja
inc
mul
mov
lahf
add
aam
xor
das
jg
sahf
push
(bad)
ins
pop
aad
inc
xor
mov
mov
je
or
inc
js
mov
push
mov
adc
rcl
in
test
(bad)
jne
xor
inc
push
js
fist
aas
sbb
movs
adc
jne
push
(bad)
push
int3
ja
shl
mov
(bad)
fidiv
(bad)
mov
(bad)
cmp
push
into
sbb
cmp
sub
shr
cmp
movs
inc
jo
aad
dec
pop
stos
es
test
add
inc
add
xor
sti
test
(bad)
stos
in
sub
jnp
push
cmps
gs
in
and
cmp
xor
mov
ror
outs
cmc
dec
sbb
adc
dec
fwait
cs
arpl
xor
(bad)
stc
fwait
xchg
add
adc
gs
add
sbb
xor
fcmovu
jne
lock
jecxz
nop
arpl
jecxz
mov
neg
and
or
cmp
js
out
xor
pop
loop
mov
xchg
fadd
cs
inc
and
nop
cdq
ret
pop
jp
pop
jnp
imul
push
aam
enter
xor
out
adc
xchg
adc
cli
pushf
stos
cld
sub
xor
test
leave
mov
mov
icebp
repnz
add
mov
(bad)
and
mov
cmp
out
and
sti
cmp
pop
mov
mov
cmp
mov
lock
into
rcl
js
or
xchg
out
cmp
mov
aaa
addr16
arpl
xchg
stos
and
loope
adc
inc
push
add
lock
push
xor
push
stos
sbb
lods
js
call
jmp
mov
pop
shl
mov
fwait
mov
(bad)
hlt
cmp
jmp
add
shr
dec
sti
jb
jmp
cmp
dec
lahf
aam
inc
mov
xchg
or
sbb
(bad)
rol
xchg
pop
xchg
enter
dec
in
mov
fld
adc
xlat
sub
shl
xchg
out
mov
loope
adc
sbb
or
cmp
jo
outs
adc
inc
lds
mov
and
push
pop
(bad)
repz
call
movs
xor
pusha
icebp
repnz
shl
fwait
mov
cmp
jl
or
retf
jecxz
sub
sub
jo
xor
xor
sbb
cmps
icebp
adc
(bad)
sti
jns
add
sbb
in
xor
dec
mov
jle
cmp
or
add
scas
sub
xor
inc
jnp
xor
cmps
push
mov
xor
xchg
jne
rcr
and
push
out
pop
scas
movs
(bad)
ds
xor
iret
or
xchg
or
push
rol
pop
mov
enter
push
xor
stos
push
test
jbe
imul
mov
data16
jge
mov
test
or
test
sbb
and
shr
jle
shl
les
pop
dec
popa
inc
inc
retf
inc
add
hlt
sbb
jns
mov
aam
inc
or
xlat
call
xchg
scas
mov
and
bound
test
and
test
mov
repnz
mov
lock
mov
push
(bad)
pusha
popf
int3
adc
xlat
cmp
push
shr
pop
add
pop
xchg
call
and
icebp
and
jge
mov
arpl
push
retf
push
or
push
sub
jo
repnz
addr16
ror
stc
dec
ins
(bad)
pop
stc
mov
xchg
push
out
gs
cli
inc
dec
push
or
jns
lock
mov
aad
test
mul
out
int3
mov
add
add
mov
mov
jecxz
sub
stos
and
xchg
cmp
pop
jo
out
and
mov
cmp
jne
jg
ds
sub
mov
fidiv
add
sbb
aam
jb
addr16
push
(bad)
lods
mov
mov
movs
adc
fcmovnu
add
push
pop
shl
mov
lds
outs
test
sub
fwait
adc
popa
movs
inc
ss
stc
rol
shr
push
loope
cmps
mov
sbb
jmp
sbb
pop
xor
and
jne
and
mov
cmp
jns
(bad)
fdivr
push
inc
cwde
addr16
inc
sbb
xchg
test
cmps
pop
mov
xor
jg
in
dec
fcmovu
fld
jae
or
adc
cmc
dec
adc
sbb
pushf
push
dec
ja
mov
std
cs
xchg
or
xlat
sub
repz
aas
bound
cli
clc
cmps
xchg
int
pushf
xchg
adc
inc
push
es
popf
adc
xchg
and
repnz
sub
adc
mov
int
adc
movs
stc
test
xor
mov
push
movzx
sbb
cmp
jns
addr16
cmps
sahf
pop
cdq
push
or
sahf
mov
hlt
add
or
mov
popa
mov
fsubr
das
sbb
(bad)
leave
leave
cmc
je
rcr
adc
sub
and
imul
jg
sub
pop
fnstcw
popf
inc
sbb
and
push
fs
ins
daa
pusha
adc
push
sbb
les
(bad)
push
pop
and
(bad)
cli
iret
push
fcom
hlt
(bad)
mov
fwait
not
add
cdq
pop
jl
jb
mov
std
in
fwait
test
in
jae
ins
inc
jno
cmp
xchg
xchg
call
add
or
ins
sbb
jno
add
scas
jns
jmp
mov
mov
xchg
and
push
sbb
stos
mov
jle
or
sbb
in
imul
das
push
push
arpl
xor
dec
sub
mov
cmp
xchg
sub
mov
inc
out
inc
inc
add
or
sub
jge
out
cld
cdq
mov
adc
fisub
outs
(bad)
aaa
mov
add
(bad)
mov
test
xchg
adc
(bad)
fldcw
lock
js
or
push
mov
mov
lods
dec
push
mov
(bad)
mov
push
inc
enter
std
aas
mov
sub
jne
out
sbb
das
ins
in
dec
jns
pop
lods
xchg
out
xlat
jne
jge
aad
mov
gs
out
popa
out
push
lds
push
pop
retf
mov
in
outs
pop
cdq
push
dec
pop
xchg
mov
adc
xabort
and
pop
daa
sub
inc
out
jae
jge
fnstcw
xor
add
test
sbb
cmp
loop
popa
fistp
pushf
push
add
sbb
jno
dec
sub
pop
jmp
lods
add
inc
jae
cmps
xor
jae
scas
xor
add
sub
shr
push
mov
sub
fwait
inc
mov
test
mov
rcl
mov
add
pop
xchg
test
shr
outs
fcmovbe
and
aaa
and
lea
jo
sbb
push
int3
xchg
xchg
pusha
sbb
in
inc
lahf
mov
cmp
in
mov
mov
inc
sbb
gs
(bad)
call
in
cmp
push
cmp
and
inc
pop
dec
xor
push
or
add
or
inc
shl
xchg
rol
add
ret
sbb
ds
mov
cld
push
pop
adc
or
dec
sub
(bad)
jns
mov
dec
jo
sbb
and
push
ins
icebp
cmp
gs
sahf
xchg
arpl
dec
imul
inc
aam
mov
mov
xchg
imul
inc
dec
or
cmp
pop
jg
mov
mov
push
mov
iret
ja
adc
out
inc
adc
jmp
mul
or
aas
inc
inc
repnz
push
vmaskmovps
adc
sbb
test
jno
pop
or
ror
dec
or
adc
pop
ds
xchg
mov
ins
ja
call
push
mov
inc
shl
mov
std
pop
sbb
call
out
inc
daa
shl
inc
js
jge
js
xchg
seto
repz
not
mov
push
in
sub
mov
stc
or
adc
neg
cmps
jb
ins
pop
pop
retf
cmps
jp
out
fldenv
xor
sub
icebp
loop
aaa
lahf
pusha
cmps
into
xchg
bound
ins
ja
out
mov
in
xchg
dec
in
rol
mov
pop
je
out
push
xchg
push
mov
cmc
(bad)
and
jns
arpl
and
dec
imul
mov
mov
pop
push
sbb
cmp
repz
push
cwde
cmp
mov
fidivr
xor
shr
pop
cwde
xor
push
add
jne
fwait
pop
ja
aam
jo
lock
jmp
push
or
mov
or
sbb
shr
jno
cmp
dec
cmovnp
sub
das
adc
lods
dec
cmp
or
jmp
jns
xor
call
bound
das
add
sub
or
xchg
imul
std
fs
jp
xchg
fwait
mov
loopne
call
(bad)
test
(bad)
xor
jge
mov
jbe
sub
daa
cmovl
inc
or
push
addr16
popa
imul
and
adc
mov
push
xchg
js
dec
inc
in
push
xchg
add
or
addr16
add
call
cmp
mov
push
retf
adc
retf
and
or
int3
cs
jg
adc
sbb
jp
int
sub
aad
pop
mov
pop
inc
and
pop
jge
sub
lods
jl
fdiv
popa
and
int3
imul
dec
loop
aad
int3
jo
popa
fwait
in
adc
lods
mov
xor
out
mov
imul
cmc
idiv
(bad)
dec
jns
and
sbb
fcom
bound
(bad)
mov
and
dec
xchg
and
inc
push
popf
mov
mov
push
inc
jbe
sub
call
retf
adc
xor
xchg
imul
push
jb
inc
rol
cld
dec
mov
fstp
pop
mov
xor
sub
sub
sub
stos
jae
adc
lods
pop
repz
adc
test
popf
jp
jl
and
(bad)
into
popa
add
imul
cmp
add
nop
dec
or
arpl
jo
xor
mov
ret
movs
xor
out
push
push
addr16
test
xchg
adc
fstp
fld
inc
xchg
sbb
call
pusha
ficomp
lods
nop
pop
inc
stos
xor
out
inc
hlt
test
and
xchg
outs
or
ss
dec
cmp
jp
ins
push
xchg
mov
push
popa
sub
out
imul
or
(bad)
jne
mov
jle
sbb
and
int
aad
movs
inc
ds
cmc
add
xchg
jb
jmp
jl
movs
add
cmps
or
fiadd
sub
dec
mov
push
jmp
pushf
sub
sbb
mov
outs
aad
mov
push
outs
sub
iret
shr
test
and
cmp
fisubr
repnz
clc
sub
in
loop
js
aaa
icebp
push
ret
popa
leave
add
adc
mov
adc
lods
outs
mov
xor
stos
push
add
imul
es
mov
jae
inc
mov
leave
jmp
xor
mov
fimul
fstp
fcmovne
cmps
mov
and
mov
xor
cli
mov
ds
sti
aam
sub
xor
cmp
(bad)
in
and
cli
mov
call
push
push
xor
inc
sbb
push
cld
sar
popa
test
das
dec
adc
sar
mov
jge
out
aaa
xchg
(bad)
sbb
cmp
adc
imul
repz
fsub
jns
jl
rcr
pop
xchg
and
mov
or
in
hlt
sub
push
daa
leave
ja
sbb
xor
adc
dec
(bad)
repz
push
sub
push
push
mov
hlt
mov
xchg
leave
adc
stos
addr16
sbb
loopne
push
mov
inc
lods
jecxz
js
inc
icebp
mov
call
dec
sub
vpunpcklqdq
jae
inc
loopne
jl
fs
adc
jne
popf
inc
repz
icebp
inc
push
sub
and
aad
dec
push
jo
loop
sbb
sbb
fdivrp
and
mov
adc
(bad)
dec
jns
pop
mov
pop
pusha
popf
gs
push
xchg
loop
mov
push
gs
cs
daa
pusha
mov
std
aaa
out
jmp
data16
not
lds
in
hlt
aaa
iret
pop
test
inc
xor
xchg
movs
int
xor
sti
and
mov
das
(bad)
ret
popa
xchg
fs
mov
aad
adc
jb
inc
fidiv
out
sti
imul
mov
std
lods
jb
fmul
test
cwde
scas
mov
inc
(bad)
mov
fwait
int
movs
inc
test
pop
jnp
push
lock
sbb
pop
mov
retf
ds
loop
pop
mov
(bad)
jno
fwait
inc
mov
sbb
lds
jno
mov
inc
fist
push
(bad)
add
(bad)
fst
inc
fsubr
cmp
add
push
xchg
sub
pop
cmp
test
xor
cmp
xor
xchg
icebp
push
xor
cmp
hlt
add
jg
je
push
sub
lahf
add
mov
inc
ss
loopne
jmp
sub
pop
pop
sub
pop
cmp
mov
repnz
jo
and
jns
mov
push
mov
daa
push
pop
jmp
clc
cwde
mov
je
ret
call
lds
pop
ror
arpl
push
out
or
fcmovu
adc
mov
mov
pop
imul
lods
push
push
push
dec
adc
call
and
repz
jg
adc
imul
push
add
inc
xchg
xchg
mov
js
sbb
dec
loope
leave
mov
xchg
pop
fsub
jae
out
jo
sbb
lds
sar
mov
test
adc
clc
and
leave
scas
pop
sbb
dec
outs
nop
fs
leave
addr16
int
pop
cmps
cmp
fisub
test
scas
pop
jo
sbb
mov
adc
pop
adc
mov
push
leave
nop
mov
ret
es
movs
ins
dec
jmp
or
jl
cmp
(bad)
xchg
mov
into
xchg
retf
nop
popa
test
jp
push
(bad)
retf
loop
rcr
mov
ror
inc
push
and
xor
sbb
inc
and
(bad)
mov
ins
les
push
fild
lds
jbe
push
int3
add
lods
enter
int3
and
ror
and
or
clc
sub
idiv
pop
pushf
jns
pop
xor
push
mov
pop
sub
inc
lods
lock
push
or
aaa
in
jp
cld
dec
scas
or
push
mov
add
fsub
mov
and
jae
inc
popa
cmps
js
cmp
push
sar
test
jnp
sbb
push
xchg
add
add
dec
in
mov
xchg
and
xor
push
shr
sbb
lahf
mov
shl
and
sar
xor
jecxz
xor
cmp
int3
jle
push
lods
(bad)
push
cmp
sar
aad
aad
neg
rol
xor
fimul
jp
mov
dec
repnz
pushf
sbb
aad
dec
cmps
dec
xchg
std
sub
or
arpl
in
clc
sbb
pop
out
jo
or
push
aas
sub
lds
sbb
mov
iret
push
fnsave
sub
ss
push
outs
dec
adc
add
shl
in
mov
daa
mov
clc
xchg
test
mov
ins
xor
call
lahf
stos
mov
sub
mov
add
or
scas
xlat
clc
lods
xor
outs
ret
cs
rcl
in
in
retf
movs
(bad)
pusha
push
(bad)
jo
ja
retf
pop
jae
dec
test
adc
jb
inc
cmc
dec
push
test
adc
pop
mov
out
add
mov
aam
stos
xchg
push
sub
xchg
push
test
mov
mov
and
lea
clc
or
mov
lods
lock
or
and
test
adc
add
loopne
jb
mov
sahf
mov
iret
push
sub
rol
or
add
jmp
test
and
test
es
cmc
lock
jp
lds
movs
xlat
jle
das
into
das
sbb
cmp
xchg
leave
sub
pop
mov
pushf
sahf
lds
pop
jmp
ss
popf
scas
cs
sub
imul
out
pop
mov
jo
mov
or
ret
(bad)
loope
cmp
xchg
lock
ficom
cmp
mov
dec
stos
pcmpgtw
fimul
pop
movs
int3
into
or
inc
dec
jb
inc
clc
jb
pop
stc
loopne
movs
lahf
xchg
fs
out
cmp
jnp
shl
dec
ins
int
fcmovnbe
add
dec
mov
sub
addr16
imul
cmp
and
popf
xor
test
cdq
(bad)
in
jg
lea
js
jno
lds
mov
stos
pop
sub
int
fst
xchg
test
add
clc
scas
mov
mov
cmp
sub
xlat
cmps
mov
mov
jnp
arpl
push
jns
rcr
inc
push
loop
test
out
les
dec
dec
cmp
xor
dec
clc
fild
cmps
mov
js
add
inc
retf
les
nop
minps
cld
pop
rcr
jecxz
mov
cmp
pushf
(bad)
out
mov
mov
and
bnd
call
xchg
push
fs
int3
adc
mov
jmp
aam
rcl
enter
pop
jae
test
outs
call
jne
add
dec
dec
std
jb
cmp
sti
mov
aad
out
sub
sub
xlat
and
push
cmp
icebp
and
push
cmp
fidivr
mov
xor
jmp
push
cmp
fstp
or
pop
js
cmps
cmp
call
clc
adc
clc
aam
ret
dec
sahf
and
outs
inc
cmp
ja
sub
jno
sbb
jge
sub
call
imul
pop
dec
mov
clc
fmul
(bad)
jl
xchg
daa
dec
pop
jnp
mov
mov
sar
push
bound
in
(bad)
fs
jae
repnz
fs
in
pop
loope
(bad)
stos
add
and
dec
data16
push
mov
pushf
cmp
mov
cmovbe
(bad)
mov
mov
sar
and
inc
imul
xchg
loopne
fs
fnstcw
inc
sbb
xor
jg
repnz
push
dec
aaa
or
inc
push
mov
test
or
adc
dec
ret
mov
xchg
ja
add
xor
movs
inc
aaa
es
push
outs
fwait
sar
and
push
call
jb
jp
or
aas
xchg
mov
lock
or
in
icebp
imul
leave
mov
dec
dec
push
or
out
gs
inc
(bad)
stc
mov
mov
aaa
push
push
push
mov
ret
mov
scas
(bad)
adc
dec
lds
pop
gs
cmp
jmp
sbb
pop
jecxz
scas
sub
cmp
pop
es
lods
cmc
mov
and
dec
jle
adc
sti
scas
sub
shl
stc
out
call
arpl
add
into
mov
pop
pop
sbb
adc
sti
movs
int3
dec
sbb
mov
cmps
ds
mov
mov
in
push
retf
xor
sub
test
jns
jb
ret
xor
jg
sbb
popa
jmp
or
stos
sub
mov
adc
or
push
mov
mov
and
mov
fwait
loopne
cmp
dec
jno
mov
mov
mov
mov
push
and
loope
addr16
sub
xor
mov
lods
cmp
loop
call
fcomp
cmp
ja
inc
scas
std
add
pushf
sahf
je
xchg
call
(bad)
hlt
cmp
adc
dec
lahf
test
cmp
push
aaa
out
mov
push
test
mov
cmp
push
cmp
xchg
pop
sbb
jp
mov
inc
repnz
xchg
jg
push
lock
mov
xor
or
out
xor
ins
mov
into
push
and
scas
adc
jbe
jle
fild
mov
mov
inc
je
mov
rcl
push
pop
xchg
sub
mov
test
aad
dec
loope
inc
adc
push
daa
cdq
adc
in
push
stc
sbb
out
pop
stos
test
xchg
daa
jnp
scas
add
inc
sbb
or
mov
pusha
and
test
jb
mov
sahf
outs
cli
or
and
clc
cld
jae
lock
inc
inc
shl
push
cmp
pusha
aaa
mov
dec
sub
daa
sub
mov
mov
mul
stos
loope
push
sbb
ds
sub
jbe
fucom
retf
fchs
dec
push
sub
mov
jns
jo
mov
inc
test
cmc
pop
in
push
sub
(bad)
push
mov
mov
outs
xchg
mov
(bad)
xor
xchg
push
and
xchg
pop
aam
aam
push
mov
push
scas
inc
mov
lea
pop
mov
pop
or
push
jns
aas
adc
daa
xor
popa
ds
ds
pop
inc
xchg
pop
or
xor
pushw
ins
dec
test
dec
test
cmp
jo
mov
sbb
push
imul
jnp
or
popa
pop
push
cmps
or
dec
pop
lock
push
adc
fsubrp
and
stc
sbb
addr16
lods
cmp
fnsave
lahf
or
fs
dec
ins
rcl
pop
(bad)
outs
push
cmp
pop
cdq
int
mov
int
aas
add
sub
sti
lods
test
sbb
inc
and
sub
in
add
arpl
(bad)
jp
rol
into
mov
jno
or
test
sub
in
imul
push
push
xor
mov
pop
jmp
popf
pop
cmp
das
push
inc
outs
jno
pop
in
xchg
cmp
dec
retf
cli
push
dec
dec
(bad)
out
hlt
adc
sub
loopne
fs
imul
xor
push
(bad)
jge
les
outs
and
stc
xchg
inc
jg
and
icebp
in
adc
cdq
repz
neg
and
jnp
ja
cmp
pop
mov
jb
sub
mov
jmp
mov
retf
cmp
adc
push
leave
pop
and
cmc
cmc
outs
daa
pusha
cdq
sub
sbb
cmp
ror
fidiv
mov
adc
jb
push
and
lds
push
cdq
scas
cdq
cmps
dec
nop
fld
int3
mov
ja
jg
out
outs
fsubr
in
ss
les
outs
jecxz
gs
popf
fld
lds
nop
loope
add
cmp
(bad)
test
xchg
pop
and
cmps
sub
cmp
inc
clc
inc
fmul
cmps
or
inc
inc
stos
out
lods
and
shr
xchg
push
inc
loope
pause
imul
cs
mov
dec
xchg
repnz
repnz
cwde
popf
xchg
rcl
push
jle
(bad)
jb
jecxz
xor
or
mov
je
mov
call
sbb
dec
jne
inc
retf
jmp
loopne
xchg
mov
lahf
mov
inc
sar
sar
push
jle
jecxz
or
js
test
push
push
inc
sahf
call
cmp
xchg
dec
sub
mov
mov
call
fisttp
inc
stc
push
movs
or
push
clc
inc
push
and
mov
ror
ror
xchg
xchg
lods
(bad)
mov
mov
xor
xchg
push
pop
sub
icebp
mov
adc
aad
xchg
or
test
jmp
push
aaa
imul
jnp
jb
fistp
adc
fmul
sub
xchg
fisub
jmp
test
pop
sub
and
mov
xor
push
(bad)
repnz
push
mov
neg
push
test
hlt
or
sub
cs
sbb
sar
jns
popa
int
lds
sbb
dec
mov
lea
sbb
fst
(bad)
jb
cs
xor
mov
jns
lods
push
sub
xchg
pop
fs
mov
xchg
add
xchg
lock
xchg
jle
jne
(bad)
pop
mov
mov
shr
and
and
and
mov
mov
jne
mov
add
mov
xor
pop
and
imul
cwde
out
pusha
jmp
xor
inc
lods
ficomp
xor
pop
ficomp
sub
adc
and
out
xchg
popf
aas
and
pop
mov
fwait
rcl
push
fld
sbb
iret
xor
mov
pop
sbb
repnz
clc
dec
xchg
call
and
pop
bound
xlat
(bad)
sub
repnz
sbb
aam
outs
and
out
out
outs
(bad)
and
push
pop
adc
add
test
push
ret
pusha
iret
mul
mov
push
pop
inc
adc
je
lods
scas
lock
test
jecxz
mov
movs
xor
pmulhw
push
fdivr
icebp
stc
stos
mov
shl
scas
fwait
push
cmpps
inc
lahf
xlat
mov
stc
cmp
add
aas
cmp
xchg
xor
aas
dec
cmp
pop
shr
sbb
loop
and
adc
push
sti
xchg
adc
xchg
lods
add
xor
leave
mov
pop
pop
pop
fcom
or
test
xchg
add
rol
jae
jg
dec
mov
sbb
mov
mov
les
test
call
test
xor
sub
push
sub
scas
jae
test
cmp
sub
shr
xor
dec
mov
add
mov
mov
pop
or
pop
gs
push
loopne
cmp
lods
ret
jns
cwde
mov
mov
aaa
je
jbe
mov
mov
movs
cs
cmps
cmp
pop
nop
pop
sahf
loop
xor
mov
pop
fidivr
outs
sar
jl
mov
shl
mov
adc
ror
aam
jae
adc
add
ret
mov
imul
rcr
cmp
mov
fbstp
jns
fsubr
pop
inc
scas
test
cdq
(bad)
pop
cmps
add
cld
xor
rol
repnz
mov
ins
dec
popf
btc
hlt
push
cdq
sbb
jmp
loopne
sti
adc
xor
push
xor
push
dec
fist
xchg
les
cdq
cmp
add
adc
clc
iret
inc
and
jmp
and
inc
scas
and
lods
bound
mov
ret
test
jnp
imul
push
xchg
fscale
mov
pop
mov
retf
fsub
ds
mov
jle
dec
cmps
stc
das
xor
nop
and
(bad)
imul
int
test
xor
popa
popa
xchg
mov
js
js
dec
mov
sbb
mov
cmps
xor
sub
ret
mov
jb
inc
(bad)
loopne
or
(bad)
xlat
push
cld
cdq
sub
rol
mov
out
and
mov
mul
test
fimul
adc
cmp
jns
add
jmp
ret
mov
call
popa
(bad)
dec
clc
xchg
push
cwde
loopne
push
push
inc
test
push
jmp
add
xchg
pusha
xchg
add
mov
arpl
std
je
mov
call
leave
sbb
mov
inc
and
mov
aad
enter
pop
ss
(bad)
das
mov
lods
test
sub
mov
lods
mov
scas
jp
xor
stc
and
push
fistp
cli
sbb
dec
rcl
in
xchg
into
and
stc
add
xlat
inc
test
or
xor
cmp
clc
dec
xchg
xlat
test
push
movs
loopne
bound
push
scas
ss
dec
pusha
push
xchg
repz
cmps
std
js
mov
aad
(bad)
stos
cmp
das
pop
and
jne
xchg
cwde
stos
repz
in
jp
inc
hlt
push
dec
(bad)
rol
(bad)
ja
(bad)
sub
out
cmp
dec
jp
pop
arpl
push
ins
iret
xchg
fld
and
adc
mov
les
jmp
jno
adc
add
dec
fcom
movs
push
test
(bad)
cmp
fild
xchg
call
add
aam
sbb
bound
mov
in
jp
xchg
push
jg
aad
jmp
jmp
cdq
fdiv
sbb
inc
mov
call
add
push
aas
repnz
and
cwde
into
fadd
sbb
mov
mov
xor
cmp
loop
inc
sar
lea
fdiv
(bad)
xor
stc
retf
xor
or
cmp
sbb
cmp
inc
in
inc
sahf
(bad)
scas
mov
xchg
or
fld
jle
dec
imul
hlt
dec
out
mov
ror
xor
pop
add
ja
es
(bad)
mov
xor
xchg
das
je
lods
aad
fiadd
movs
jno
push
scas
call
mov
in
fstp
inc
jns
xchg
not
inc
in
push
scas
out
stos
stos
nop
lods
jg
push
leave
ins
push
ss
shl
push
mov
or
ds
and
fistp
adc
xor
xchg
or
push
mov
mov
outs
inc
sbb
mov
xor
pop
retf
mov
out
and
sub
jecxz
stos
es
dec
bound
cld
lods
cmps
jmp
dec
xchg
lods
push
jmp
mov
or
inc
and
loop
(bad)
lods
mov
daa
fbstp
sahf
push
cwde
add
repz
out
ja
mov
mov
jo
sbb
bound
stos
mov
push
jne
loopne
pop
mov
jl
cdq
jle
pop
sub
or
adc
fwait
jo
je
mov
mov
lock
cmc
les
add
shr
xchg
pop
cs
xchg
add
sub
pusha
jmp
and
xor
(bad)
nop
hlt
xor
push
ds
lock
mov
xchg
(bad)
outs
xchg
jae
dec
lahf
xchg
shr
xlat
iret
cmp
push
or
xor
or
sub
pop
into
into
push
pop
hlt
xchg
xchg
dec
sub
dec
pop
sub
cs
test
fmulp
sbb
nop
xchg
add
jg
loopne
xchg
cmp
loopne
dec
pop
or
mov
or
out
fild
popa
sbb
dec
(bad)
shl
mov
rcr
nop
dec
sub
mov
adc
push
cmp
aam
into
mov
movs
xor
retf
adc
leave
jmp
ret
(bad)
mov
xlat
xor
fbstp
inc
push
cli
imul
pop
sub
xchg
cmps
in
ficomp
cmp
int
push
adc
mov
repnz
add
mov
jle
adc
inc
sub
mov
aam
sub
and
rep
popa
pop
outs
jp
cmp
mov
xor
scas
or
sub
scas
hlt
mov
(bad)
data16
mov
and
add
push
fild
push
aam
(bad)
(bad)
fistp
nop
cmp
xchg
inc
jne
jge
sub
lea
inc
test
or
and
pop
outs
lds
(bad)
fisub
jp
pop
xchg
or
imul
add
cmp
adc
push
adc
stos
add
aam
fdivr
test
dec
test
push
out
add
cwde
lahf
and
and
(bad)
cmc
xor
es
ds
mov
nop
xor
or
jnp
or
jmp
ja
test
sub
retf
fcomp
push
jns
data16
jbe
popf
cmp
cmps
inc
adc
idiv
cmc
inc
jno
imul
icebp
dec
mov
fld
jl
mov
xchg
(bad)
scas
jecxz
cdq
mov
pop
lahf
(bad)
add
rcl
cs
fldcw
lods
not
cmp
sub
sub
in
pop
sub
iret
mov
sub
dec
xchg
adc
and
out
jge
mov
and
mov
push
mov
pop
sbb
xor
mov
sbb
mov
scas
add
cld
sub
div
mov
movs
hlt
xchg
dec
dec
cwde
shr
mov
or
mov
xor
enter
pop
(bad)
int3
cmp
movs
jg
std
xor
xlat
outs
push
gs
xor
ins
pop
fisubr
outs
mov
xor
stos
pop
adc
(bad)
addr16
inc
sbb
rcl
add
add
mov
mov
rol
mov
data16
pusha
mov
repnz
fst
xchg
cmp
rol
int
xchg
mov
jno
js
iret
pusha
fidivr
stos
iret
mov
popa
pop
lea
push
jg
push
dec
adc
mov
movs
pop
or
test
mov
cmp
xor
call
nop
aam
inc
mov
(bad)
icebp
jecxz
jmp
mov
xor
loopne
pop
add
iret
and
cmc
pop
fiadd
out
mov
bound
xchg
jmp
and
dec
xlat
out
dec
pop
adc
cmc
adc
cld
mov
call
test
das
stc
cmps
cdq
mov
and
shl
and
sbb
fistp
ds
jmp
pop
mov
stc
dec
mov
xchg
mov
or
mov
stc
jp
inc
outs
int3
mov
fiadd
in
imul
or
adc
sub
add
int
in
aam
int
call
add
adc
ss
call
xor
mov
lahf
xchg
cmp
mov
imul
ss
inc
js
jno
and
xchg
xchg
jp
cmp
addr16
mov
jne
cmps
movs
mov
enter
scas
cmp
lea
jnp
and
leave
(bad)
rol
pop
(bad)
adc
lds
test
into
scas
sti
mov
cmp
push
xchg
adc
sti
sbb
repz
xor
push
std
loopne
xor
loop
outs
mov
rcl
adc
xchg
xlat
add
add
stc
in
aaa
pusha
pop
push
sub
cdq
pop
cmc
enter
out
inc
push
sbb
dec
je
push
mov
sub
sub
fidiv
push
mov
jns
push
adc
jge
jge
repnz
out
jg
out
in
cmps
ds
sar
adc
aam
repnz
sbb
jo
aas
xchg
dec
cmp
mov
add
mov
ficomp
xchg
cmps
push
mov
add
repnz
fs
dec
push
jo
into
pop
fistp
or
mov
pop
adc
cmp
(bad)
(bad)
mov
je
cs
js
cmp
add
aad
jl
and
lods
out
neg
jmp
lahf
test
and
jge
sbb
pop
enter
or
jg
or
in
xchg
in
out
or
jne
(bad)
and
inc
outs
popa
push
and
inc
out
push
fstp
add
rcl
mov
loope
pushf
xchg
ds
pop
jecxz
stos
fnstsw
or
(bad)
stos
int3
popf
inc
aad
loope
xlat
add
inc
mov
lods
in
pop
call
jmp
pushf
or
or
imul
outs
mov
jmp
or
jnp
mov
push
clc
ss
sbb
test
pop
gs
popa
and
stc
mov
ins
ja
std
cmps
xor
xchg
ficom
mov
add
data16
cld
es
xchg
dec
mov
jge
out
add
inc
rcr
lods
adc
(bad)
adc
pop
neg
xlat
shl
or
pop
inc
test
mov
xchg
pop
(bad)
cwde
(bad)
xchg
dec
iret
cmp
(bad)
adc
ja
sub
xor
sub
lds
out
cmc
(bad)
cmps
cmps
lock
js
xlat
pop
sub
push
inc
rcr
xchg
in
jg
fmul
push
sar
clc
push
ins
hlt
push
hlt
add
ficomp
ds
ret
dec
add
sbb
adc
mov
push
add
and
das
sub
xchg
loop
in
xchg
es
xchg
push
mov
jne
xlat
adc
adc
cmp
rcr
mov
and
mov
(bad)
sahf
repz
sub
aas
rcl
inc
sub
jae
jb
cld
(bad)
call
push
lds
retf
add
xor
jl
fs
test
xor
and
ror
jb
pop
mov
mov
(bad)
xchg
adc
(bad)
mov
jmp
pop
ss
mov
loop
mov
and
xchg
ror
mov
jnp
popa
push
sbb
mov
sbb
pop
mov
fisttp
push
call
mov
rcl
cs
fcomi
mov
mov
cwde
in
outs
mov
mov
in
and
in
jae
ins
inc
push
(bad)
cmc
ins
jg
push
mov
es
dec
fwait
es
push
jne
jecxz
dec
inc
xchg
dec
cld
mov
pop
jns
rol
xchg
jecxz
and
push
ror
stos
sti
fwait
cmp
sub
loopne
jmp
call
enter
shl
iret
push
inc
dec
add
popf
pop
nop
(bad)
sbb
fnclex
retf
adc
push
adc
out
mov
jne
pop
ficomp
ins
fst
mov
mov
xchg
xchg
pop
imul
ja
jno
add
scas
mov
cmps
aad
fwait
push
jbe
cmp
inc
leave
icebp
cld
push
pop
pop
push
andnps
sub
dec
(bad)
sti
js
fisubr
cwde
(bad)
daa
out
inc
push
push
xor
cmp
lods
jns
pop
xor
(bad)
call
cmp
aaa
xor
and
or
fnstenv
ins
aam
test
sbb
lds
inc
inc
repz
xchg
sub
inc
stos
mov
movs
scas
cs
jmp
sbb
xlat
jbe
rcl
adc
mov
ins
arpl
push
adc
sub
out
add
jb
call
call
mov
pop
jge
mov
retf
and
push
bound
pop
cmps
dec
in
lea
and
aad
shl
mov
inc
xchg
mov
in
shr
inc
jle
xor
iret
adc
mov
sub
test
or
pop
adc
addr16
dec
sub
iret
inc
scas
aad
push
aad
xchg
movs
xlat
and
dec
test
mov
or
test
mov
repnz
jl
xor
and
cmp
call
cmc
arpl
dec
xor
retf
and
mov
sbb
out
inc
sbb
dec
ret
(bad)
sub
(bad)
jmp
dec
sub
cmc
(bad)
mov
and
jns
sbb
pushf
fcmovnbe
pop
pop
out
inc
dec
pushf
iret
push
add
and
pusha
loop
ins
out
mov
pusha
cmps
fisub
(bad)
and
cmp
in
pop
fadd
popf
inc
mov
mov
xchg
shl
(bad)
in
mov
shl
enter
add
out
jmp
sub
dec
jbe
mov
xchg
mov
inc
jle
repnz
loope
sti
es
gs
fbld
aas
stc
inc
or
cmp
pop
cmp
mov
xchg
fistp
ins
adc
cmps
sub
ret
repz
add
or
sbb
lahf
addr16
mov
in
pop
mov
inc
das
bound
push
sbb
data16
in
jecxz
mov
pop
push
pop
inc
cmp
pop
cmp
loop
xchg
mov
pop
or
cmp
mov
(bad)
out
mov
xlat
ret
push
and
int3
and
lea
inc
sub
sub
sti
mov
sub
in
cli
popa
addr16
fwait
data16
movs
or
xor
not
inc
enter
push
sbb
(bad)
and
lea
call
ret
jne
pop
lods
stos
sbb
aaa
sbb
jbe
dec
cmp
mov
repz
pop
mov
outs
ins
jge
inc
int3
addr16
push
fwait
pop
daa
dec
xchg
inc
shr
adc
xchg
dec
cs
rol
mov
pushf
mov
jle
push
in
dec
movs
mov
das
or
fdiv
lock
stc
xor
add
fst
mov
mov
sub
mov
bound
daa
cmp
jmp
dec
sar
loope
pop
inc
jl
lods
popf
mov
mov
pop
jno
jne
xor
pop
unpckhps
fcomp
outs
call
leave
js
fstp
push
ss
and
push
inc
addr16
xchg
scas
scas
jno
cmps
mov
out
mov
pop
dec
push
(bad)
loope
mov
jmp
inc
imul
pusha
std
sub
into
lea
add
xchg
jg
add
and
pushf
sub
jns
sbb
push
mov
ins
popa
pop
add
inc
mov
pushf
in
mov
outs
inc
aam
mov
inc
and
dec
popa
xchg
push
push
or
mov
inc
or
ror
sbb
stos
test
xchg
inc
mov
sub
push
fdiv
xor
retw
imul
jno
lock
out
scas
xchg
fwait
ret
ret
jne
xchg
scas
stos
mov
adc
movs
in
sub
call
inc
dec
fcom
mov
add
movs
xlat
adc
test
mov
dec
dec
ja
gs
pminsw
sti
stc
cmp
cdq
popf
sub
push
push
push
and
test
cld
mov
push
outs
bound
in
xor
mov
lock
cwde
xchg
mov
sbb
adc
std
bound
enter
(bad)
xchg
add
aaa
mov
cli
ins
iret
jo
cwde
fcom
cmps
test
into
push
dec
nop
stos
xchg
pop
call
shr
and
cwde
push
jnp
retf
pop
ss
icebp
loop
push
sub
adc
and
in
sbb
popf
sub
xchg
xchg
test
arpl
add
repz
call
sbb
mov
lahf
ficom
sbb
outs
mov
xchg
mov
cwde
mov
loopne
ret
test
test
retf
loop
mov
ins
dec
sub
and
push
jo
pusha
xor
int3
int3
jae
lea
xor
push
int3
fwait
xor
jnp
shl
lock
shr
and
inc
xor
xchg
xor
loopne
and
jge
inc
mov
push
hlt
ins
adc
push
iret
xlat
loopne
mov
aaa
into
hlt
pop
imul
jg
scas
(bad)
out
sub
mov
(bad)
dec
in
lea
mov
cmps
nop
icebp
inc
push
push
adc
outs
inc
jge
and
pushf
push
repz
mov
mov
cs
call
pushf
pop
pop
jmp
loop
movs
(bad)
lea
in
sub
adc
jge
test
and
add
jmp
mov
push
movs
test
daa
outs
cs
dec
and
jbe
outs
mov
(bad)
loopne
lock
push
sar
sub
and
sbb
mov
ins
ins
aad
pop
fsubr
xor
fdivr
cdq
xchg
fcomp
ror
xacquire
std
mov
push
mov
jg
dec
sbb
push
mov
out
sti
xor
or
test
sbb
imul
(bad)
push
xor
mov
mov
cli
xor
push
(bad)
jne
shr
inc
test
inc
loopne
add
xchg
push
mov
pushf
and
pop
dec
sbb
jle
stos
jo
mov
mov
imul
bswap
inc
dec
outs
jecxz
jno
test
add
adc
and
or
lods
addr16
cmc
jecxz
stos
jbe
jnp
leave
dec
or
or
push
or
(bad)
pop
adc
out
and
mov
sbb
lea
stc
jle
xor
imul
cs
ja
popa
push
xor
imul
jp
inc
cs
ds
(bad)
pop
into
fsub
dec
pop
pop
das
imul
mov
pop
in
into
sbb
lds
add
vmwrite
call
sar
nop
mov
dec
and
dec
repz
mov
loope
in
sti
dec
mov
repz
js
push
xchg
dec
pop
mov
cli
mov
mov
stos
xor
sub
aam
ficom
adc
sbb
test
loope
push
out
push
test
jne
loopne
or
mov
mov
xor
adc
ror
or
sti
inc
xchg
out
inc
mov
inc
ds
mov
dec
ins
pop
pop
dec
aad
jae
or
mov
and
cld
cmp
shl
sbb
mov
cmc
jno
mov
sub
inc
(bad)
adc
and
inc
cmps
icebp
js
dec
inc
xor
push
push
cmp
rol
xchg
ins
in
out
push
or
cmc
jle
and
xchg
repz
es
getsec
jnp
xchg
test
nop
sbb
(bad)
sbb
outs
shl
cmp
cmp
xchg
std
jne
call
sub
int3
cmp
xor
xor
in
and
enter
mov
rol
jp
xor
iret
int
addr16
and
xchg
inc
and
push
xor
dec
sbb
mov
jo
jmp
test
ret
fiadd
test
cmp
dec
push
and
mov
push
mov
lock
jg
mov
xchg
loope
mov
sbb
xor
ror
add
inc
sub
loop
ins
test
test
push
pop
retf
popa
out
movs
mov
outs
test
test
fstp
fisttp
imul
mov
sbb
jl
(bad)
rcr
das
cmp
xor
inc
xchg
mov
dec
mov
(bad)
pop
cmp
loop
xchg
xor
je
(bad)
hlt
sbb
mov
fldcw
mov
in
mov
mov
jge
ret
pusha
mov
cmps
pusha
inc
scas
and
ror
lods
imul
je
stos
lea
aam
sub
(bad)
rcr
rcl
addr16
xchg
jmp
in
loope
inc
adc
fmul
cld
jmp
test
sub
popf
sahf
add
add
jae
or
mov
test
mov
ss
fcom
in
mov
push
popf
fcom
pushf
push
pushf
cmps
lods
or
xor
scas
aad
cmps
add
sbb
mov
push
mov
dec
push
repnz
les
shl
or
movs
xchg
mov
sub
mov
push
fs
pop
xchg
test
imul
mov
xchg
sbb
sbb
repz
les
pop
popa
or
sbb
out
ds
stc
cmps
xor
sbb
xchg
or
movs
jns
loope
mov
inc
in
fwait
aad
sub
sub
(bad)
adc
and
add
xchg
mov
cmp
xchg
dec
fcom
pop
mov
dec
lock
dec
pop
shl
sti
cmc
add
cld
fild
pushf
sbb
fwait
cmp
and
sub
neg
push
or
sahf
dec
fisubr
pop
jb
fstp
and
inc
retf
or
lahf
sub
cmp
popf
xlat
push
daa
(bad)
cmp
dec
cdq
xor
mov
mov
sub
dec
mov
mov
cld
retf
outs
outs
sbb
xor
mov
mov
adc
inc
pushf
mov
push
mov
lahf
inc
xchg
sti
jmp
push
cdq
sbb
adc
or
mov
xor
aas
jecxz
adc
pop
xchg
mov
pop
gs
mov
jns
mov
jbe
shr
pop
dec
cli
xchg
push
loop
mov
push
or
je
jae
cmp
imul
ss
sti
lds
(bad)
cmp
mov
jo
dec
inc
xor
aaa
push
jecxz
(bad)
and
sub
lods
and
xor
(bad)
test
push
lock
out
(bad)
test
xchg
fidiv
and
lods
call
stc
mov
push
sbb
mov
xor
es
jmp
bound
stos
pop
mov
pushf
nop
pop
sub
cwde
cli
jle
bound
popf
dec
adc
sahf
xor
movs
in
adc
mov
sub
jmp
mov
(bad)
adc
std
popa
sbb
fwait
xchg
jmp
div
in
xor
cmps
sbb
mov
stos
push
sahf
mov
das
push
jecxz
or
dec
inc
(bad)
popf
outs
push
xchg
call
je
shl
cld
jg
lds
mov
mov
mov
out
adc
or
data16
push
fdiv
jmp
daa
pop
dec
in
mov
jae
pop
mov
andps
push
sub
and
(bad)
pop
outs
cmp
or
fiadd
dec
sti
clc
or
jge
out
add
or
ja
xor
inc
rep
outs
sbb
imul
jmp
push
jns
xor
fs
jo
leave
sbb
push
xchg
cmps
loope
pusha
outs
mov
push
mov
push
(bad)
mov
mov
sbb
xchg
loope
inc
popa
and
arpl
aad
push
mov
mov
adc
xchg
jp
fidivr
int3
xchg
pusha
pop
fsubr
jae
inc
rol
sub
jbe
mov
adc
arpl
cmps
das
cmp
and
add
mov
mov
leave
sbb
push
sti
data16
adc
fnstenv
and
test
int
out
out
mov
add
fwait
in
adc
adc
loope
sbb
or
jnp
(bad)
inc
mov
sub
clc
dec
lahf
xor
xchg
and
aas
dec
jo
in
cs
cmp
sbb
mov
in
push
jmp
dec
js
cmps
mov
sbb
push
fs
xlat
std
xor
pop
dec
adc
xor
xor
div
imul
out
sbb
inc
dec
xor
mov
rcl
mov
cdq
inc
mov
dec
in
push
dec
out
sub
jmp
test
jmp
push
enter
jg
mov
mov
sub
sahf
jne
sub
ret
and
fcomp
fidiv
out
xchg
(bad)
icebp
retf
and
fsub
arpl
ror
cmp
mov
dec
jo
cmp
repnz
fwait
dec
and
je
iret
xchg
aam
push
cmp
mov
jp
or
cmps
jmp
pop
aad
sbb
mov
sub
pop
loope
iret
add
scas
aam
sar
movs
pop
cmovae
inc
sbb
fstp
repnz
pop
pushf
pop
pop
test
iret
or
cmp
movs
pop
stos
push
hlt
int
dec
pop
inc
mov
rcr
outs
call
adc
cdq
pusha
out
inc
leave
out
mov
mov
shl
inc
arpl
inc
xchg
gs
fcom
out
push
or
push
(bad)
sub
int
mov
or
sub
cmp
popf
cld
pop
fwait
sti
cmp
add
dec
sub
lock
(bad)
pop
lods
mov
mov
cwde
mov
imul
xor
inc
imul
and
iret
pop
jb
jae
inc
mov
jmp
(bad)
ds
mov
popa
or
fs
jg
mov
popf
ret
pop
jbe
ficom
aaa
ja
xor
(bad)
(bad)
mov
xor
jl
sub
and
sbb
push
ins
adc
or
test
cwde
or
leave
popa
(bad)
das
mov
and
iret
push
mov
(bad)
rcr
inc
xor
std
jmp
add
pusha
mov
fwait
mov
sbb
adc
or
idiv
lock
call
loop
hlt
lock
cmp
test
add
js
adc
jbe
jp
pop
lds
scas
and
inc
jg
outs
push
add
xor
pop
into
adc
call
adc
call
mov
xor
jnp
fild
mov
ds
xchg
mov
(bad)
jnp
pop
int
jg
xchg
xchg
jb
pop
push
mov
ds
mov
push
int3
dec
sti
stos
test
icebp
jmp
fcom
loope
mov
mov
and
rcl
das
add
cmp
mov
fidiv
(bad)
mov
xor
js
inc
adc
ja
push
jne
adc
pop
inc
xor
movs
retf
xchg
test
mov
or
inc
mov
(bad)
inc
test
cld
out
sub
dec
pop
pusha
mov
push
sub
push
and
clc
dec
mov
popa
jmp
or
je
mov
mov
mov
hlt
push
dec
mov
in
cmp
sbb
xchg
out
fisub
jp
xchg
inc
jge
jae
stos
ror
xor
jmp
mov
jmp
sar
gs
ss
push
ja
(bad)
clc
cmps
xor
aam
sbb
xor
pop
fldcw
(bad)
mov
out
pusha
cdq
dec
stc
test
ret
inc
ins
lods
loopne
neg
test
std
jge
mov
mov
push
adc
out
out
add
dec
call
js
pop
aad
cmps
sub
je
(bad)
xchg
or
pop
mov
bound
(bad)
mov
ds
dec
xchg
jle
dec
push
enter
mov
rcr
xchg
inc
inc
jmp
mov
add
jmp
xchg
ja
dec
pop
sbb
mov
hlt
push
or
ins
pop
sub
cdq
cmp
sbb
loop
fist
fadd
add
mov
mov
frstor
xor
lds
movs
or
dec
push
pusha
sub
add
sub
mov
mov
(bad)
cld
loope
es
pushf
es
xor
push
je
pop
ds
pop
pop
and
sub
add
dec
fisubr
or
or
mov
pop
pop
pop
js
ror
xchg
and
pop
or
push
xchg
mov
out
fimul
jae
push
loop
mov
gs
mov
mov
test
je
xor
and
scas
jmp
pop
jo
pop
mov
sub
mov
jge
jae
ret
in
mov
push
lock
push
(bad)
and
lods
jg
jmp
rol
aad
repnz
popa
in
xchg
xor
(bad)
not
in
mov
mov
aaa
int3
jno
cmps
imul
mov
jmp
aam
xor
inc
(bad)
rol
mov
pop
test
imul
sbb
xchg
sub
data16
cld
(bad)
int3
cmps
sub
je
inc
in
test
jae
jecxz
fisttp
cmp
xchg
dec
push
add
aam
clc
pop
pop
shl
pop
and
pop
sub
js
mov
mov
daa
out
dec
push
ja
stc
pop
xchg
mov
loopne
inc
jmp
outs
hlt
cmp
mov
(bad)
int3
mov
aas
into
add
cmp
cmp
shr
mov
bound
add
fistp
call
add
inc
and
dec
stos
enter
xchg
or
jp
popa
(bad)
rcl
xor
std
loopne
sub
scas
adc
push
mov
xchg
rol
jne
bound
leave
imul
ret
xchg
bound
pop
sbb
dec
jmp
dec
push
(bad)
xor
js
sbb
cmovle
xor
dec
bound
jb
dec
(bad)
jns
sbb
imul
mov
push
pop
out
call
push
call
neg
daa
mov
stos
test
dec
fs
sub
inc
neg
fwait
ds
test
neg
sbb
jmp
pop
sub
ds
pop
clc
call
push
sub
imul
out
jns
inc
push
mov
mov
mov
cmc
cmp
inc
and
popf
ror
pop
fcom
stos
pusha
cmp
test
pop
popf
jns
das
retf
push
cmp
into
xor
dec
push
xor
pop
das
sub
lds
pop
add
pop
adc
hlt
test
movs
not
inc
scas
push
clc
jmp
xchg
pop
aaa
jns
push
mov
jecxz
mov
(bad)
push
fstp
or
mov
nop
in
mov
or
call
cmp
or
stos
xor
daa
pop
test
xchg
pushf
in
mov
jmp
mov
sub
jle
cmps
push
xor
and
push
div
push
mov
into
jo
bound
pop
out
sub
test
cli
movs
fwait
mov
push
pop
inc
inc
push
cmp
inc
outs
aad
imul
fwait
xor
(bad)
push
push
shl
cmps
pop
and
xor
clc
outs
imul
jg
and
jl
sbb
jnp
sahf
sbb
cmp
push
or
sti
pop
push
pop
mov
sbb
popa
jg
bound
fidivr
cmps
aas
dec
dec
push
enter
xchg
retf
jge
or
xchg
mov
push
pusha
ret
ret
in
jne
adc
xor
les
daa
xor
push
adc
push
(bad)
add
ins
jne
js
mov
das
jecxz
xor
inc
pusha
vmulps
push
dec
mov
jnp
push
pusha
outs
jle
pusha
imul
imul
sbb
jae
das
or
xchg
dec
mov
jecxz
data16
hlt
or
push
inc
cmps
xor
mov
out
inc
sysexit
jne
iret
inc
repz
sti
(bad)
jmp
dec
inc
idiv
loopne
pop
aaa
ins
or
lahf
sub
sub
mov
mov
sti
add
jmp
mov
leave
cld
sbb
test
xchg
add
fst
sub
popa
inc
dec
pop
mov
cmc
ins
sub
push
jmp
int
jecxz
into
js
adc
ss
and
push
add
lods
cmc
cmp
cmp
test
addr16
xchg
pop
iret
aad
and
pop
xor
sahf
lods
adc
ds
push
movs
push
xlat
push
lods
push
dec
pop
sbb
or
in
cmp
test
pop
test
mov
fdivr
sti
lods
and
dec
stos
(bad)
cmp
pushf
xlat
inc
dec
and
rcr
aam
adc
arpl
push
sbb
sub
push
jge
cld
jb
dec
and
pop
inc
jp
mov
add
inc
mov
rcr
jle
lock
xor
outs
pop
aam
aam
or
test
jne
pop
imul
push
or
out
mov
sbb
pop
add
xlat
add
push
enter
push
push
lahf
cmp
aad
fnstcw
mov
mov
ss
cmp
icebp
(bad)
fnstcw
les
ins
mov
xchg
mov
push
fcmovbe
retf
js
xor
es
outs
mov
add
cld
jge
and
call
je
mov
aad
sub
imul
cmp
pop
pop
sub
push
cmp
into
icebp
jnp
shr
push
mov
jge
xor
jne
mov
mov
mov
call
daa
addr16
adc
dec
in
les
loopne
hlt
aam
test
retf
outs
fdivr
inc
(bad)
(bad)
jge
adc
push
jge
push
lock
mov
jb
mov
jmp
sbb
test
(bad)
in
ins
mov
mov
aas
and
(bad)
das
out
mov
sub
cmp
dec
int3
aaa
cli
xor
sub
ja
mov
inc
stc
jmp
dec
push
mov
xchg
sbb
shr
jl
xor
add
ss
retf
iret
sub
xchg
das
test
lea
test
lock
pop
popa
add
faddp
xor
fld
enter
loope
cmps
cmp
add
call
inc
push
mov
add
gs
test
fcomp
cmp
ds
mov
cmc
(bad)
bound
xchg
mov
mov
mov
jmp
jns
mov
inc
fcmovnbe
sub
xchg
gs
xor
dec
aad
sub
lds
or
loope
stos
mov
xchg
fs
shl
inc
fstp
addr16
sub
jle
xor
mov
fmul
dec
xchg
push
mov
dec
std
ds
cdq
pop
mov
jecxz
out
and
cmp
jmp
outs
pop
stos
dec
sbb
inc
inc
aas
clc
les
dec
cs
cmp
call
xor
in
push
(bad)
enter
out
and
(bad)
push
jns
cdq
outs
dec
dec
mov
and
es
loopne
push
ret
jb
mov
(bad)
jns
xor
rcr
adc
pop
jg
and
jl
mov
ins
inc
retf
cld
jmp
jmp
sbb
cwde
mov
stos
jmp
push
loope
popf
int
rcr
xor
push
ss
inc
xchg
inc
sbb
adc
cdq
mov
call
das
in
push
sti
dec
ror
cmp
or
push
mov
jp
fnstenv
pusha
sub
push
inc
outs
sub
mov
sbb
pop
inc
sub
push
mov
or
mov
movs
jne
xor
push
push
xchg
inc
cmps
sbb
pop
fs
cmps
jno
push
and
out
sub
add
fcomp
stos
in
sub
mov
mov
loop
ss
imul
mov
jo
sbb
jg
push
mov
inc
jg
out
xor
ss
or
test
xlat
inc
gs
out
mov
fiadd
jmp
cmps
into
ret
cwde
xlat
push
popa
push
icebp
(bad)
in
lock
(bad)
inc
add
(bad)
shr
inc
dec
or
xor
inc
inc
dec
xor
in
hlt
add
(bad)
(bad)
aaa
mov
pop
cs
pop
test
cld
inc
popf
sub
mov
push
or
stos
pusha
out
and
inc
mov
pop
mov
jle
xor
ins
fsub
lea
xchg
mov
and
sub
sub
sbb
mov
leave
mov
punpckhdq
mov
lods
xor
mov
repnz
out
add
mov
mov
int3
sar
aas
xlat
jbe
sub
mov
and
push
leave
test
pop
(bad)
lods
fs
sahf
hlt
jbe
clc
dec
or
jb
or
shl
xchg
addr16
mov
nop
test
xor
xor
jmp
gs
in
imul
xchg
jle
(bad)
(bad)
in
jno
nop
frndint
ss
rcl
call
cmp
cmps
mov
jmp
in
jecxz
test
mov
addr16
mov
pop
push
add
push
mov
scas
push
push
sahf
push
(bad)
jnp
fstp
mov
enter
jecxz
fistp
inc
fild
pop
adc
push
jns
dec
ins
push
ror
loopne
dec
xchg
daa
adc
inc
rcl
mov
repz
pop
mov
or
mov
(bad)
outs
icebp
repnz
aas
fistp
sbb
jmp
mov
ficom
sbb
add
sbb
sub
not
add
sahf
jmp
mov
fstp
or
dec
dec
add
cs
mov
in
inc
shl
dec
js
cwde
jno
stos
pop
dec
jb
js
dec
test
stos
outs
xor
dec
pop
inc
dec
push
cmps
(bad)
aad
pushf
call
data16
jmp
sub
fs
sub
cmp
ffree
adc
gs
fst
xchg
jne
test
dec
out
add
and
(bad)
or
data16
mov
loop
imul
mov
jb
lea
jecxz
lahf
pop
inc
mov
cmp
ficomp
and
in
adc
je
xlat
in
test
xor
call
int
push
inc
fcmovb
fstp
dec
scas
les
mov
mov
ds
test
adc
mov
xchg
sbb
push
jns
scas
int
not
inc
shl
xor
add
xor
pop
ds
out
(bad)
jp
std
xchg
jmp
mov
sub
mov
adc
inc
or
push
mov
cmp
inc
mov
repnz
or
sbb
jmp
(bad)
shl
popa
loop
sub
int3
int3
leave
or
sbb
sub
(bad)
movs
outs
loopne
xchg
add
mov
into
mov
(bad)
bound
or
push
push
jb
cs
mov
enter
into
jp
pop
scas
mov
cmp
shr
in
js
movs
mov
cmp
mov
sbb
or
push
and
fcom
int
call
sbb
bound
or
mov
and
clc
mov
xor
or
test
xchg
je
cld
lods
add
fild
mov
(bad)
mov
push
test
arpl
inc
jecxz
xchg
jmp
(bad)
dec
or
jo
sbb
adc
pusha
mov
pop
fimul
mov
scas
lds
retf
jno
pop
cmp
mov
fidivr
mov
(bad)
out
dec
and
or
cwde
scas
add
cmps
mov
or
aam
xor
jmp
mov
push
add
lds
inc
pop
test
nop
(bad)
leave
mov
cmc
mov
xchg
mov
xor
retf
sar
xor
out
push
lea
dec
retf
ficomp
fldenv
cli
imul
aaa
push
sbb
dec
mov
hlt
mov
lods
pop
jle
mov
cli
or
and
rcl
mov
jp
cmp
mov
mov
mov
cmp
sub
imul
packsswb
push
mov
in
mov
jle
sub
sub
cmp
dec
inc
push
outs
ja
cmc
pop
pop
or
adc
es
pop
dec
fs
scas
gs
test
fst
sbb
mov
lock
add
add
xor
lock
addr16
pop
inc
sbb
or
inc
adc
add
sbb
jge
sub
(bad)
mov
pop
inc
leave
fcom
or
sbb
iret
ret
test
pop
sbb
add
aaa
call
push
retf
mov
shr
xchg
dec
and
sahf
push
sub
mov
(bad)
mov
mov
out
xchg
cmps
dec
adc
jno
adc
lea
cs
test
and
adc
movs
dec
(bad)
ins
in
ins
test
fcomp
out
loope
lahf
out
in
pop
aad
pop
add
and
movs
add
mov
addps
push
outs
jae
sti
mov
jns
rcr
lock
aad
pop
ins
sub
(bad)
jmp
dec
leave
imul
xchg
push
mov
out
loopne
and
leave
ret
int3
out
in
cmp
mov
pop
xchg
dec
aam
aaa
mov
jne
dec
jne
xlat
sar
xchg
mov
adc
mov
rep
popf
xchg
mov
sar
movs
cmp
or
cs
imul
movs
or
jnp
sub
add
dec
jmp
div
jbe
add
imul
jmp
jle
mov
cmps
mov
inc
mov
add
cmp
push
adc
cmps
outs
mov
inc
mov
fs
mov
sbb
jle
aad
jns
maskmovq
push
push
js
in
push
test
jl
out
fs
mov
aad
xchg
icebp
js
enter
sub
(bad)
ret
pop
loope
retf
fcomi
dec
(bad)
es
or
dec
sbb
pop
fimul
ds
pop
cmps
test
xchg
repz
int3
add
pushf
jmp
popa
push
push
fadd
ds
jb
movs
lods
mov
ficomp
aad
or
ret
sti
std
xor
ja
mov
lods
pop
popa
adc
sub
loopne
pop
ins
cmp
inc
pushf
mov
sub
inc
push
shl
call
or
call
jge
mov
xor
xchg
add
sub
fidivr
fxch
leave
push
dec
int
jo
push
jmp
mov
push
pop
out
add
ret
test
mov
pop
int
in
js
lahf
scas
into
and
test
enter
jmp
call
scas
hlt
mov
movs
outs
out
xchg
hlt
pop
push
rol
shl
inc
cmc
out
not
(bad)
out
(bad)
mov
jle
jecxz
dec
stc
mov
ins
push
rdmsr
cmp
bound
mov
or
and
outs
cli
pop
adc
fwait
rcl
popa
data16
aam
pop
or
inc
adc
bound
push
(bad)
push
lock
pop
bound
repz
shr
mov
out
sti
cld
cwde
aaa
mov
inc
sub
mov
pushf
dec
cli
cld
in
push
test
dec
mov
and
ins
push
jmp
jg
test
outs
dec
dec
dec
aas
data16
test
dec
shl
je
dec
jl
fsubr
out
inc
cmp
jge
mov
int
adc
int3
cli
dec
pop
lahf
mov
je
enter
stos
aas
jecxz
sti
sub
and
aad
xor
sub
loope
push
fisub
iret
xor
ret
xchg
cmps
jbe
popf
adc
call
out
mov
mov
aam
jnp
xchg
and
cmp
cmps
adc
pop
retf
mov
xchg
test
cwde
xchg
add
out
hlt
add
cmc
addr16
stos
jge
fdivr
push
pop
in
dec
rol
movs
in
sub
inc
inc
adc
sti
gs
aad
arpl
and
test
push
push
sbb
xchg
jne
push
loope
out
xchg
pushf
dec
in
xor
call
mov
ins
std
xor
mov
(bad)
xor
adc
aas
lods
xchg
push
mov
and
mov
cmp
adc
adc
(bad)
lods
shl
mov
lock
push
in
pop
pusha
sub
mov
or
stc
jp
xor
js
pop
mov
dec
inc
cmps
mov
jae
sub
aad
dec
xchg
mov
mov
sub
jno
xchg
out
outs
popa
xchg
push
jno
dec
std
(bad)
bnd
mov
gs
dec
or
pop
popf
aad
cmpxchg
loop
sbb
push
cmp
xor
pop
add
cmp
loopne
push
push
aas
cdq
jmp
(bad)
lds
rcr
addr16
push
stos
jae
cdq
add
neg
mov
sbb
inc
sub
lds
xchg
bound
popa
mov
je
xor
mov
in
adc
pop
das
xchg
xor
xchg
ins
adc
ret
mov
scas
repnz
jae
xchg
pop
lock
add
shl
ds
dec
cmp
lods
out
xlat
mov
mov
loopne
pop
jbe
xor
popf
pushf
lods
sti
out
enter
(bad)
mov
ja
sub
cmp
mov
mov
push
mov
cmp
rcl
in
dec
in
push
mov
sub
adc
push
test
jbe
cmps
fsub
lds
xchg
(bad)
mov
jmp
pushf
loop
scas
pop
jns
and
adc
mov
mov
fisubr
sar
pop
push
call
loop
xchg
(bad)
out
popf
sub
popa
enter
lods
retf
jp
scas
xchg
sub
jnp
mov
pop
in
fcomp
mov
xchg
and
jmp
mov
mov
fisubr
sti
adc
pop
adc
stos
pop
pop
idiv
(bad)
sbb
fstp
sub
addr16
and
int
mov
fs
aaa
iret
(bad)
data16
jnp
movs
xchg
lods
call
ss
inc
outs
inc
(bad)
sub
sbb
mov
or
pushf
les
mov
stos
sub
fld
inc
xor
call
pushf
push
add
pop
mov
loope
cmps
push
pop
cld
cmp
repz
xor
test
dec
add
gs
or
xlat
inc
iret
mov
cmp
out
pop
jne
cmp
adc
adc
mov
ins
int3
mov
jb
addr16
mov
jb
icebp
pop
xchg
inc
dec
dec
lock
popf
mov
jo
mov
xor
add
mov
test
inc
cmc
stos
data16
es
cmp
pop
xchg
les
sar
pop
inc
in
mov
mov
popa
lods
pop
pop
daa
sub
(bad)
sub
mov
add
dec
stos
cld
aad
pop
xor
inc
xchg
pop
stc
imul
cmps
scas
jae
sahf
xchg
out
pextrw
jge
xor
and
leave
popa
xor
mov
jno
mov
mov
jl
popa
sbb
xor
les
sub
ret
fsubr
test
jmp
mov
stos
xor
pop
dec
add
dec
fistp
adc
pop
add
adc
inc
popa
sub
rcl
add
leave
jg
jg
add
mov
loope
stos
movs
and
jne
adc
xchg
hlt
adc
mov
sbb
pop
jb
pop
push
not
jmp
xchg
push
xor
lock
jne
in
push
mov
inc
jg
inc
movs
or
stos
repz
pop
mov
jp
sbb
sti
mov
out
fadd
call
sub
xor
mov
add
into
mov
cmps
pop
test
mov
sub
pusha
idiv
shr
adc
jne
ficom
fidiv
mov
fcmovnbe
icebp
sub
fisub
and
ja
icebp
xor
pop
push
xor
cmp
xlat
mov
or
pusha
fdivr
xor
ret
mov
adc
add
push
mov
iret
je
test
or
xor
pop
fsubr
int3
or
fwait
mov
dec
mov
xchg
add
pop
push
xlat
movs
push
sub
repnz
fcomp
int3
ja
mov
les
cmp
or
sbb
jecxz
jnp
or
fdivr
leave
inc
inc
inc
scas
sub
test
and
call
jp
jae
(bad)
cmp
ret
sbb
push
cdq
cmp
loopne
push
loop
and
cs
stc
lods
dec
js
mov
push
ret
mov
mov
(bad)
mov
add
(bad)
loope
push
stc
mov
lds
dec
(bad)
mov
adc
and
inc
push
inc
call
cmp
mov
pmullw
xchg
mov
shr
xchg
adc
clc
mov
movs
(bad)
cmp
add
and
add
sti
push
cld
call
push
and
inc
and
sub
rol
fsub
je
movs
mov
jle
or
jmp
dec
ss
outs
test
sbb
inc
mov
mov
xor
mov
repnz
add
sbb
jae
push
sub
fstp
sbb
les
movs
cld
and
in
or
call
and
out
jle
mov
ja
shl
push
aaa
mov
outs
leave
mov
pop
sbb
pop
int
jecxz
pop
dec
or
cs
dec
aam
out
inc
pop
dec
cld
cs
sub
sbb
call
call
(bad)
mov
or
dec
movs
xor
inc
xchg
jg
pop
mov
pop
push
dec
pop
sub
std
mov
scas
or
inc
cmps
lea
imul
idiv
retf
(bad)
dec
scas
mov
aam
sub
aas
sbb
inc
cmc
cmp
in
and
sub
jmp
mov
xor
fild
popa
sti
mov
out
cmp
xchg
shr
cmp
mov
sub
mov
add
dec
pop
pop
fwait
dec
fist
push
mov
call
xchg
pop
xor
cmp
test
bound
xchg
or
pop
adc
adc
mov
(bad)
fisubr
mov
cmp
inc
in
scas
push
mov
jns
sub
jl
sub
aad
test
inc
mov
xchg
or
fmul
addr16
xchg
mov
xor
dec
scas
bound
dec
fist
ret
movs
mov
push
(bad)
popf
mov
arpl
or
jmp
int3
and
pusha
xchg
test
cmp
mov
sub
(bad)
icebp
aad
add
scas
sub
jmp
pop
jle
mov
pop
cs
aaa
test
std
jl
test
xchg
add
xlat
repnz
pop
push
push
imul
shr
ins
xchg
xchg
inc
xchg
rcr
fdiv
outs
ret
mov
pusha
je
mov
and
cmp
mov
mov
mov
loope
popa
out
iret
dec
pop
adc
dec
jmp
rcr
pop
mov
cmps
dec
sub
ror
scas
in
aam
imul
shl
out
mov
outs
sub
pop
push
xor
xor
mov
jmp
jl
sub
movs
pushf
cmp
clc
fs
adc
js
pop
popa
sbb
xchg
ffreep
add
cmp
dec
or
dec
jp
mov
mov
int3
and
push
sub
fnstcw
stos
jo
into
jle
dec
retf
xor
or
jg
adc
loope
and
mov
movs
data16
cdq
jae
out
rcr
dec
mov
les
in
out
dec
xor
ds
cwde
dec
xchg
shl
mov
hlt
mov
ret
(bad)
xlat
sahf
mov
retf
sar
cmc
mov
or
adc
lods
inc
add
mov
inc
mov
rol
add
push
inc
mov
and
and
imul
out
stos
adc
into
cmp
mov
add
mov
sbb
push
adc
dec
cmp
xchg
shr
jns
aam
aas
mov
test
jecxz
movs
push
xchg
and
sub
inc
fcomip
sub
xor
mov
(bad)
gs
xor
(bad)
call
(bad)
cli
(bad)
jle
sub
nop
adc
sub
sbb
jle
mov
or
sbb
ds
and
into
aas
xchg
rcl
je
jecxz
push
(bad)
xchg
mov
mov
addr16
mov
xor
sub
imul
in
fucom
sbb
jp
mov
iret
test
push
mov
hlt
push
retf
xchg
std
call
ror
sbb
mov
bswap
stos
mov
xor
pop
rol
and
xchg
and
cmp
enter
mov
jae
jnp
daa
iret
(bad)
cld
or
push
dec
cdq
or
stos
cmp
pop
sahf
in
cmp
aaa
push
sub
cmp
popa
mov
jg
(bad)
fdivr
(bad)
mov
push
jnp
rcr
xor
push
fs
clc
or
imul
add
xchg
int3
xchg
imul
cmp
mov
cmp
pop
cwde
cld
xor
stos
stos
arpl
add
xchg
fmul
outs
xor
rcl
scas
fld
dec
cld
xchg
jno
cmp
out
jecxz
jo
mov
call
jp
pop
gs
retf
popa
outs
pop
push
adc
xchg
dec
pop
iret
fcmovnb
and
mov
lock
pop
outs
dec
cmp
outs
sar
jg
sub
sbb
and
xchg
xchg
shl
aaa
adc
shl
jl
mov
clc
sti
mov
mov
enter
xchg
mov
test
jb
mov
out
std
in
fisub
sti
into
push
leave
fwait
jb
pop
sub
sbb
or
sti
mov
addr16
adc
out
(bad)
cmp
push
sbb
popf
sbb
clc
lock
fld
out
lahf
mov
mov
or
xor
xor
or
sbb
outs
mov
xor
mov
cmp
cmp
aad
pop
and
mov
(bad)
retf
push
adc
retf
or
jne
inc
adc
mov
(bad)
xor
add
push
das
lahf
out
fs
loopne
dec
ins
mov
sbb
imul
or
out
add
mov
or
push
les
cmp
lahf
dec
ret
sub
mov
outs
xor
xchg
das
xor
pop
jecxz
mov
test
jae
call
aam
inc
mov
pop
icebp
mov
out
or
sub
ds
retf
fs
push
pop
cmp
adc
push
test
jecxz
repz
inc
mov
jmp
push
mov
into
cmp
push
push
fsubr
rcl
xchg
mov
mov
pop
(bad)
fwait
push
pop
fmul
jmp
out
xor
(bad)
retf
adc
leave
sar
mov
pop
pop
jle
dec
and
inc
rcr
ds
cdq
ins
dec
mov
retf
das
repz
mov
ror
or
movs
in
cld
shl
mov
push
fnsave
jae
cmp
clc
shl
clc
mov
es
adc
dec
pop
es
out
add
ud1
push
sub
in
in
aaa
xchg
mov
dec
mov
sar
sbb
mov
repnz
push
shl
and
or
addr16
ss
inc
mov
push
(bad)
mov
xor
gs
mov
cdq
jnp
xor
or
sub
or
clc
pop
sahf
sahf
sbb
mov
dec
xchg
lds
imul
and
adc
or
push
jno
rcl
cs
(bad)
mov
lds
fdivr
int3
js
push
data16
repz
lods
stos
enter
test
jmp
ins
cdq
or
fadd
dec
adc
mov
movs
adc
and
sar
adc
and
iret
ror
push
dec
xchg
test
movs
pop
push
hlt
stos
push
aas
mov
xlat
aam
push
sti
repz
fiadd
aad
mov
ficom
jmp
adc
dec
mov
ret
call
dec
mov
jmp
push
inc
scas
sbb
dec
sbb
sbb
rcl
jg
adc
pop
movs
inc
xor
inc
out
adc
xchg
les
sar
dec
push
clc
lea
jb
mov
dec
retf
ret
js
(bad)
cmp
fcmove
xlat
inc
pop
nop
ins
nop
push
and
ret
test
pop
mov
pop
or
push
lods
lock
xchg
mov
sub
pop
out
cli
cmp
lahf
repnz
push
(bad)
dec
int
pop
pop
enter
into
ins
std
(bad)
xchg
mov
sbb
repnz
div
inc
fcmovbe
es
and
mov
xchg
sub
retf
jle
pop
inc
pop
adc
jns
call
nop
or
data16
mov
neg
inc
retf
mov
mov
cmp
fmul
and
mov
aas
mov
(bad)
jno
(bad)
out
imul
xor
fisub
pop
fistp
fcomp
push
mov
mov
cs
ficom
mov
ds
dec
add
add
arpl
sbb
adc
(bad)
stos
adc
popa
mov
scas
movs
mov
mov
imul
repz
jp
jl
pop
dec
sbb
pushf
add
cmp
jnp
(bad)
out
add
add
xchg
cwde
popf
jg
xor
push
mov
inc
xchg
jnp
or
cli
dec
sub
ret
pop
in
in
data16
out
fadd
out
mov
mov
retf
xlat
dec
mov
inc
mov
cmps
mov
inc
lahf
xor
jnp
mov
push
dec
sbb
push
rcl
bswap
aam
es
cmp
imul
add
jmp
and
inc
dec
jle
dec
add
dec
ja
shl
xor
sbb
cs
mov
xchg
mov
jle
push
xor
daa
mov
pop
popa
rcl
fcomp
out
out
(bad)
adc
sub
add
push
jae
jae
fs
push
sub
cwde
mov
xchg
hlt
sbb
sub
mov
or
push
mov
scas
or
hlt
rcl
lea
xor
hlt
mov
mov
xchg
pop
bound
add
int
sbb
mov
loope
mov
loope
push
add
stos
cmp
mov
jl
sbb
neg
mov
adc
enter
xor
popa
dec
cli
mov
inc
adc
ret
inc
push
jb
cmp
bound
mov
pop
dec
mov
pop
test
mov
gs
dec
test
dec
int3
mov
jmp
push
stc
(bad)
ret
retf
or
arpl
icebp
mov
ret
push
xchg
cmp
sbb
push
jmp
mov
int3
rep
loope
mov
xchg
or
cli
mov
xlat
or
mov
xor
std
cmp
xlat
arpl
dec
sub
mov
rcl
mov
mov
adc
mov
add
jle
xchg
adc
pusha
ss
jle
jo
push
cmc
push
call
lods
icebp
push
and
movs
and
adc
ss
mov
je
ret
push
icebp
ins
sub
and
cdq
cs
test
xchg
mov
aas
add
dec
arpl
in
(bad)
push
dec
mov
dec
push
xor
setge
jno
and
retf
mov
into
(bad)
test
rcr
add
push
mov
cdq
mov
fs
mov
mov
push
cmps
xor
xor
rcl
shl
sbb
sbb
mov
fcom
loope
stos
jne
dec
xchg
mov
stos
je
jp
cmp
(bad)
aaa
cli
test
neg
mov
leave
out
aas
shl
mov
and
shl
push
call
loopne
push
fsubr
leave
paddb
das
fst
sub
repnz
popa
sti
jnp
push
cmps
dec
jmp
mov
sbb
inc
mov
xor
xor
outs
std
(bad)
mov
push
out
inc
pop
pusha
movs
mov
leave
out
int3
in
xchg
push
jmp
out
xchg
xchg
mov
adc
dec
jle
jbe
cmp
xor
test
sbb
mov
adc
mov
loopne
xchg
movs
push
jae
out
iret
mov
pop
mov
gs
adc
and
arpl
add
shl
mov
pop
pop
push
enter
mov
shr
aas
jl
push
mov
addr16
pop
xchg
(bad)
or
jns
xchg
jns
mov
out
aad
sbb
mov
dec
pop
sbb
loopne
out
mov
push
lahf
pop
push
in
jo
pop
inc
mov
fcom
push
push
jmp
(bad)
mov
dec
mov
add
xor
imul
outs
add
mov
out
push
aam
xlat
xor
jmp
sub
jmp
sub
or
cdq
cmc
jmp
leave
ds
repz
dec
sar
adc
sbb
push
xlat
pop
sbb
fld
sbb
mov
out
xor
pop
popf
adc
cmps
mov
shl
push
xchg
pop
fldenv
aaa
ret
shl
add
mov
push
sbb
or
jl
jmp
test
pop
xor
stc
cmp
adc
mov
push
push
adc
cmp
mov
jmp
mov
(bad)
mov
xor
xchg
test
inc
mov
and
daa
mov
idiv
xor
sbb
jg
movhps
inc
mov
sub
stos
mov
(bad)
repnz
mov
push
(bad)
fld
fcmovb
ss
jno
fldcw
push
pop
pop
xor
mov
arpl
push
imul
mov
pop
mov
inc
add
fwait
sbb
push
cld
xor
push
jge
add
push
jecxz
inc
cs
jmp
aam
inc
lea
ds
jg
mov
(bad)
icebp
inc
stos
mov
inc
dec
add
xor
jae
dec
aas
or
sbb
test
lds
out
xor
popf
sbb
(bad)
push
or
dec
(bad)
cmp
cs
inc
adc
mov
dec
pop
cmp
xor
inc
jl
icebp
jg
popf
(bad)
cli
fidivr
iret
jmp
outs
or
cmp
xchg
mov
adc
hlt
movs
jo
(bad)
mov
mov
mov
aas
out
adc
imul
lds
sub
(bad)
scas
cmps
push
ss
cmp
inc
movs
pop
mov
pop
out
mov
fld
out
mov
shr
aas
jmp
jg
enter
lahf
xor
int3
pop
sub
mov
es
jl
clc
or
(bad)
xor
mov
or
shl
jge
je
leave
add
mov
xor
xor
bound
sub
mov
jg
inc
jmp
xor
cmp
mov
fistp
imul
sbb
and
xchg
js
dec
test
sub
dec
dec
and
or
mov
push
or
int
mov
push
enter
int
push
sub
sub
faddp
or
arpl
xor
in
adc
mov
ret
not
jb
mov
xlat
jbe
push
outs
imul
(bad)
xor
adc
shl
push
cmp
into
sub
push
ds
loope
mov
inc
add
push
adc
aad
pop
add
adc
mov
scas
adc
add
out
mov
and
cmp
std
pop
nop
cmp
rcl
jecxz
scas
leave
mov
nop
pusha
mov
mov
sbb
pushf
sbb
inc
pop
cmp
mov
or
jg
ins
pushf
iret
xchg
es
add
push
pop
adc
pop
cmc
cmp
popa
cmp
sbb
inc
adc
dec
and
leave
push
aaa
lea
imul
outs
mov
pop
cmp
inc
push
or
cmp
lea
adc
std
sbb
fwait
movs
aad
ja
jl
shr
retf
test
jb
call
repz
adc
sub
push
jg
sub
fisubr
jbe
xchg
mov
imul
xchg
pop
sar
cli
sbb
scas
or
int3
popf
data16
push
xchg
cdq
test
and
mov
push
stos
and
mov
pusha
jmp
add
dec
jle
sahf
icebp
mov
dec
pusha
inc
push
rcl
arpl
adc
xchg
pop
(bad)
mov
in
(bad)
lods
sahf
add
stos
pop
pop
add
cmp
sti
imul
mov
es
clc
sub
push
xchg
inc
cmp
or
jb
call
outs
rol
fisttp
retf
or
pop
mov
cmp
xor
push
xor
xor
dec
sub
push
cmp
sbb
xlat
hlt
retf
dec
arpl
fs
pop
cmp
dec
retf
dec
lahf
jle
dec
cmps
jl
fiadd
stos
and
pop
mov
(bad)
mov
sbb
push
or
jns
mov
(bad)
and
pop
in
mov
mov
dec
push
nop
fs
and
pop
sub
daa
pop
call
cmp
out
jno
mov
cli
cmc
sbb
push
cdq
add
cmps
xor
xor
xor
cmp
cli
scas
mov
and
pop
popa
cs
mov
aad
dec
pusha
mov
pop
cmp
sbb
sub
dec
jge
fst
sub
jl
xchg
out
jo
and
pop
xchg
gs
cwde
xor
movs
sub
jmp
fistp
inc
lock
jl
cmp
lods
jnp
adc
fst
mov
mov
bound
pop
push
or
push
push
cmp
pop
sub
movs
mov
je
pop
jne
ja
ror
jb
imul
mov
clc
iret
cmp
arpl
test
mov
hlt
cmp
jns
nop
lds
mov
fwait
cmp
jne
dec
scas
(bad)
mov
add
(bad)
fld
scas
mov
sbb
ds
and
mov
test
sub
ds
inc
in
in
shr
fsub
leave
test
adc
ss
xor
inc
adc
hlt
nop
bound
fadd
scas
out
adc
sub
and
jmp
sbb
in
shl
test
in
loop
into
call
les
cmp
popf
pushf
imul
cmc
std
or
or
add
or
add
cli
fild
cs
outs
xlat
inc
sub
mov
cmp
mov
pusha
jmp
pop
mov
add
je
mov
fnstsw
add
scas
shl
jmp
inc
and
rcr
and
pushf
push
call
sar
mov
pop
jne
ss
inc
mov
popa
mov
fisub
xor
cmp
out
cli
mov
cmc
push
pop
sbb
fs
sub
xor
cmc
pop
in
lahf
loop
xor
jae
push
push
jo
inc
clc
mov
mov
leave
pushf
(bad)
(bad)
mul
push
(bad)
and
push
jle
arpl
cmps
call
and
iret
push
adc
or
xor
jle
and
mov
mov
scas
sar
pop
addr16
test
and
or
aad
dec
jbe
movs
rcr
sub
sbb
add
icebp
xor
cmps
stc
push
aam
mov
bound
xchg
inc
fwait
jle
ds
xchg
clc
and
or
sar
mov
into
mov
push
xchg
cmp
out
arpl
outs
dec
inc
mov
lahf
jne
pop
ja
inc
pop
loopne
in
sub
mov
xor
movs
jb
ins
inc
add
sub
retf
mov
fs
and
iret
sbb
mov
mov
movs
pusha
mov
fisttp
movs
fdivr
lea
xchg
popf
mov
push
add
xor
daa
push
adc
push
(bad)
sbb
dec
mov
ins
pop
les
push
cs
dec
add
xor
sub
mov
push
dec
in
addr16
in
sbb
mov
sub
mov
push
push
or
aam
adc
sbb
inc
adc
scas
ins
cs
or
out
push
sbb
mov
mov
in
fild
xchg
gs
push
sub
rcr
test
add
mov
mov
and
call
movs
test
call
push
xchg
and
add
push
xchg
dec
mov
push
cmp
rcr
sar
push
(bad)
mov
jne
shl
xchg
sbb
add
ins
mov
cwde
mov
iret
stos
dec
mov
push
enter
js
mov
fdivr
add
clc
mov
pop
mov
loopne
sub
cmp
mov
jnp
inc
cmp
call
jl
ficomp
sbb
add
cmp
and
add
dec
mov
loop
add
aaa
mov
cmp
add
mov
lock
jns
sar
sbb
imul
dec
mov
fucomp
loop
fstp
and
jge
adc
movs
adc
dec
xchg
adc
fisub
pop
inc
add
mov
pop
retf
popa
imul
adc
es
adc
cmp
jo
jb
mov
sar
shr
scas
lahf
shl
mov
sbb
popf
mov
movs
xor
repnz
jmp
arpl
outs
test
sbb
mov
stc
test
jg
fcmovnb
hlt
mov
dec
loopne
in
jo
rol
loope
sub
cmps
call
xchg
out
outs
fild
mov
cdq
test
dec
jbe
push
fs
pusha
stos
and
adc
mov
lds
lahf
pop
in
xchg
fdiv
adc
mov
outs
sub
sbb
cld
push
push
mov
das
js
and
cdq
jae
fsubr
sar
addr16
cld
mov
sbb
pop
sti
(bad)
inc
lods
in
imul
mov
add
mov
inc
stos
mov
sub
mov
mov
xor
(bad)
js
loop
leave
mov
mov
cmp
mov
sub
xchg
and
and
js
out
inc
xchg
pop
mov
xchg
fwait
jo
inc
pop
stc
jp
enter
nop
sub
loop
mov
push
sub
scas
xor
xor
pop
push
movs
ror
mov
inc
out
call
dec
push
sbb
jne
test
mov
fiadd
adc
out
repz
mov
push
sub
mov
aam
test
dec
call
cmp
int
stc
aaa
inc
(bad)
shl
sbb
aas
repnz
sbb
pop
mov
ret
and
jg
sbb
lds
jmp
bound
xchg
xor
inc
in
test
pop
xchg
mov
mov
xor
add
outs
push
call
cld
fs
sub
and
out
cld
dec
push
movs
xor
mov
mov
(bad)
push
sub
addr16
mov
and
pusha
inc
push
xor
mov
outs
aam
mov
or
xlat
stos
jmp
fistp
xor
aas
pop
rcr
rcl
jl
dec
sub
mov
push
push
dec
cwde
adc
pop
iret
leave
cdq
or
push
or
push
mov
mov
push
cli
cmp
add
(bad)
sbb
or
int3
loopne
xor
cmp
and
mov
into
gs
int3
dec
in
leave
pop
arpl
xlat
in
push
xlat
gs
fdivp
and
and
xor
lods
cmp
sbb
jns
cmp
mov
mov
test
jg
gs
mov
lahf
push
jecxz
adc
sub
in
sub
mov
xchg
scas
add
inc
ds
data16
into
(bad)
adc
aaa
test
jbe
mov
adc
test
inc
cmp
imul
push
cdq
or
ret
xor
sbb
test
pusha
add
test
pop
int3
jmp
sub
xchg
retf
push
loope
mov
push
push
cmc
jg
nop
add
dec
pop
xor
fild
fs
pop
jae
adc
dec
cli
shr
into
lahf
outs
add
sar
mov
mov
mov
es
ret
mov
ret
movs
fsub
clc
mov
jne
push
imul
xor
xchg
fistp
xor
in
(bad)
in
cmps
and
cdq
scas
mov
cmp
jmp
xchg
xor
pushf
sbb
out
xchg
adc
sbb
fiadd
mov
sbb
nop
in
cmp
mov
stos
loopne
mov
mov
arpl
dec
inc
pop
pop
cmps
nop
sub
push
add
xlat
imul
aad
jl
xchg
mov
jae
adc
mov
cwde
rcl
xchg
jp
sti
jg
pop
rcl
out
sub
push
mov
mov
adc
movs
rcl
movs
or
jno
loope
inc
sub
push
mov
add
sbb
lds
test
pop
sub
sbb
xchg
(bad)
in
test
daa
add
fs
mov
fsubr
jg
sub
(bad)
aad
xor
cmp
add
sub
fisub
and
or
movs
out
aad
loopne
loop
and
addr16
enter
neg
and
ins
cmps
gs
mov
mov
mov
push
adc
retf
and
into
loope
jmp
add
mov
(bad)
sub
pusha
pusha
adc
jmp
adc
jp
sub
cli
add
lock
mov
adc
pop
pushf
gs
fisubr
fld
repnz
add
lock
push
sti
into
xchg
xchg
inc
fiadd
in
not
lods
and
test
mov
xor
dec
jae
fidivr
(bad)
jp
outs
sar
stos
mov
sahf
cs
rcl
imul
jmp
jl
and
adc
adc
test
and
mov
shl
out
add
and
int3
jl
push
cs
xlat
pop
stc
loope
cwde
mov
imul
mov
cld
fwait
and
cdq
xor
push
aad
add
fisttp
inc
push
cmps
std
or
retf
cmp
pmulhw
mov
dec
or
dec
cvtps2pi
lahf
imul
adc
mov
bound
jns
mov
cld
std
iret
pop
sub
jo
xlat
test
pop
adc
test
xchg
mov
sbb
jg
jne
stos
leave
mov
ss
call
sub
pop
xlat
mov
(bad)
push
and
push
in
add
lods
(bad)
xchg
mov
pop
dec
mov
mov
int
push
xor
cmps
cmp
adc
cmp
add
in
jg
mov
movs
push
ss
test
push
fcomp
xor
fst
mov
sub
int3
pop
mov
adc
jmp
into
add
inc
call
sbb
mov
lahf
clc
sub
cmp
cmps
dec
and
ret
xchg
adc
mov
repz
pop
xor
imul
xor
or
push
shr
hlt
mov
or
fidivr
call
aaa
dec
mov
or
cmovbe
cli
addr16
xchg
popa
aam
jmp
and
int3
fild
js
pop
fwait
test
xchg
sbb
or
and
mov
sbb
mov
aaa
pop
movs
not
cld
or
sub
adc
(bad)
fnstcw
push
sub
dec
add
sti
adc
sar
fmul
pusha
pop
call
jae
push
mov
cmp
iret
cs
xor
and
xor
(bad)
lahf
repnz
pop
clc
inc
out
leave
das
mov
test
(bad)
mov
loopne
pop
cmp
sub
xchg
inc
hlt
mov
fldcw
je
js
cmp
xchg
popa
jmp
sbb
or
adc
movs
sbb
add
sbb
lds
cli
sahf
xchg
mov
hlt
jl
mov
cmp
mov
nop
loope
xchg
sti
dec
outs
sub
aas
je
inc
inc
gs
loope
in
ficomp
fisubr
sbb
ja
popa
(bad)
enter
daa
aas
adc
rcl
adc
mov
aas
mov
sbb
and
cmp
sti
adc
push
fimul
(bad)
sar
jg
ss
lds
xchg
gs
rcr
(bad)
sub
inc
dec
repnz
gs
fisubr
mov
xor
(bad)
enter
xchg
pop
xchg
cmp
fnsave
(bad)
mov
lods
call
mov
sti
enter
pusha
push
mov
sti
daa
repz
mul
adc
inc
or
push
adc
int
(bad)
cld
std
jg
mov
mov
and
pushf
cmp
fwait
lods
(bad)
sub
(bad)
loop
push
cmp
add
fisub
inc
aam
sbb
jg
sbb
xchg
(bad)
sbb
sar
sub
push
mov
xchg
xor
dec
jno
into
mov
aaa
outs
(bad)
sbb
lds
(bad)
pop
sub
xor
dec
out
call
xor
or
(bad)
(bad)
mov
aad
and
xchg
inc
popa
sbb
jnp
lahf
rcr
jbe
push
loopne
and
xchg
aas
cmp
out
mov
into
and
mov
add
or
das
fild
sbb
jmp
push
add
pop
inc
data16
mov
adc
pop
aam
jg
mov
jecxz
jbe
sub
clc
popa
sbb
lock
pop
sbb
stos
loopne
into
ins
or
lods
movs
leave
xchg
mov
jne
mov
lock
ret
cmp
fnstsw
aas
out
push
jbe
mov
(bad)
xchg
sar
lahf
or
add
in
push
test
adc
inc
push
iret
js
jns
loop
sbb
push
pop
xchg
stos
mov
sub
xchg
int
cmps
out
out
inc
xor
jle
jge
push
mov
loopne
or
push
pop
mov
fstp
in
in
jo
mov
mov
sbb
cmp
cwde
leave
cmp
mov
sub
xchg
lock
lock
dec
outs
adc
push
pop
xor
mov
popf
cmp
sub
cmps
push
call
dec
dec
mov
out
xor
hlt
xor
sub
mov
and
push
lds
iret
xor
xchg
sar
push
bound
inc
mov
xchg
mov
dec
add
xchg
(bad)
std
cmp
sti
ret
js
stos
(bad)
fmulp
das
mov
ror
cli
leave
mov
mov
mov
daa
xchg
or
cmp
outs
xor
jnp
rcr
test
ins
or
add
xor
push
or
aad
mov
ds
pop
jmp
xchg
stos
outs
clc
adc
and
jp
sub
idiv
ret
call
dec
inc
js
imul
push
sbb
sbb
cmc
adc
push
or
stc
jbe
add
add
dec
inc
xchg
pushf
push
sub
(bad)
loope
push
cmps
cmc
jb
loope
pop
cmc
xchg
pop
fisubr
addr16
push
push
js
(bad)
jle
in
jbe
push
mov
daa
jmp
mov
cld
in
movs
inc
fidivr
mov
pop
imul
adc
or
sti
fwait
dec
jecxz
idiv
shl
mov
jl
aaa
test
pop
xchg
je
jb
cdq
pop
cmp
cmp
data16
idiv
out
cmps
or
push
mov
cmp
inc
pop
dec
mov
in
loope
mov
in
dec
paddsb
iret
mov
sub
fisub
mov
fst
add
lods
pusha
in
jp
adc
into
retf
cdq
out
pop
aaa
(bad)
or
dec
xchg
repnz
aad
shr
push
jl
and
jno
xchg
mov
and
sub
mov
xchg
and
xor
xchg
inc
retf
pushf
push
jb
sub
push
cmp
xor
stc
test
daa
lock
adc
add
sub
(bad)
test
mov
pusha
and
in
adc
pushf
jg
sti
pop
jge
je
les
xchg
inc
(bad)
in
xchg
sub
cs
xor
push
mov
scas
into
pop
xor
cmp
lahf
clc
inc
lods
movs
mov
push
adc
js
mov
inc
and
or
pop
out
mov
jp
inc
fimul
inc
fiadd
mov
push
and
in
sbb
icebp
gs
call
mov
push
pop
sbb
addr16
pop
popf
not
div
aad
sbb
adc
popa
mov
adc
out
xchg
(bad)
stc
mov
mov
jmp
cli
add
jb
jb
stc
xchg
js
jp
nop
adc
sub
mov
sti
imul
sahf
push
dec
add
xor
add
inc
clc
dec
mov
jecxz
test
push
movs
das
nop
pop
in
iret
mov
sbb
cmp
sub
das
pop
adc
pusha
dec
fadd
and
cli
aaa
push
mov
(bad)
repnz
jl
mov
pusha
and
add
sub
sti
popf
push
mov
xor
or
in
push
dec
and
cmp
icebp
popf
scas
(bad)
mov
cmp
mov
adc
push
jns
adc
and
aam
jecxz
add
(bad)
cmps
cwde
xor
mov
mov
fbld
imul
mov
or
leave
jecxz
scas
ins
out
aaa
(bad)
cmp
or
jae
mov
sub
shl
inc
sub
clc
cs
dec
ins
mov
mov
(bad)
ins
retf
jae
add
pop
test
dec
clc
pop
lock
mov
aaa
lods
addr16
inc
cmp
and
pop
xor
push
add
dec
xor
xchg
add
add
xchg
outs
jno
(bad)
and
outs
fdiv
sub
rcl
xchg
cmc
push
pop
add
fnstenv
test
cwde
mov
stos
xlat
es
movaps
jl
sub
cmp
sbb
mov
cli
cmps
(bad)
loop
pop
aaa
pop
mov
fstp
loope
xlat
jno
mov
scas
fsubrp
loopne
sbb
mov
add
stc
pop
xchg
cmp
cmp
adc
leave
xchg
pusha
pop
dec
(bad)
jg
cli
sub
fsub
mov
dec
arpl
pop
imul
and
fisub
aaa
fstp
pop
jp
dec
adc
pop
stos
adc
fmul
test
push
mov
add
jne
and
aad
or
pop
cmp
sub
mov
into
sbb
hlt
mov
add
jg
test
or
add
jns
pop
push
mov
rcl
sti
aad
lock
sar
dec
sar
push
push
(bad)
mov
(bad)
aam
add
mov
xchg
aaa
add
fstp
movs
mov
ror
dec
mov
shl
push
jle
lods
ds
sbb
out
sbb
inc
imul
(bad)
stos
fmul
push
xor
dec
inc
pop
aad
sub
cli
adc
jae
outs
xor
add
out
ret
xchg
mov
icebp
mov
mov
dec
sub
aaa
push
inc
cmc
daa
rcl
and
adc
jno
pop
mov
and
mov
in
jbe
add
push
and
inc
out
sbb
cmp
or
retf
jg
mov
retf
xor
ret
xchg
dec
adc
sub
mov
mov
aad
adc
mov
push
push
ret
ja
sbb
stos
xlat
cmp
mov
in
(bad)
add
inc
mov
icebp
mov
mov
mov
pop
(bad)
jmp
push
movs
add
add
mov
aam
fwait
and
nop
xchg
add
mov
xchg
push
mov
push
push
sub
sti
mov
xchg
jmp
add
dec
add
sbb
jg
sub
mov
in
ds
push
xchg
xor
call
add
jmp
mov
out
pop
sbb
mov
jl
fstp
dec
stc
cmp
movs
sar
sbb
mov
repnz
lahf
push
push
sub
or
xlat
mov
bound
xor
xchg
xchg
xor
icebp
ror
retf
enter
sbb
mov
xchg
or
fwait
js
in
sbb
add
sub
ret
sub
mov
shld
dec
data16
retf
inc
iret
retf
sbb
in
dec
dec
dec
cdq
push
add
cmp
xchg
fadd
jecxz
fistp
jo
push
adc
add
call
clc
mov
jae
je
shl
adc
dec
adc
dec
loop
sbb
das
ds
xchg
mov
int3
jmp
jnp
adc
js
jmp
cmp
lock
fwait
idiv
lock
and
mov
aas
int3
rol
dec
test
or
cmp
(bad)
fisttp
sbb
sub
push
imul
loope
outs
hlt
dec
adc
mov
sti
(bad)
pushf
repnz
jbe
call
shr
jge
retf
das
icebp
jmp
ret
out
xor
sahf
pop
mov
fldcw
leave
adc
dec
stos
push
lods
stos
jecxz
fild
sbb
pop
ds
pop
(bad)
fwait
mov
retf
dec
push
xor
add
push
xor
lds
inc
adc
push
dec
jnp
(bad)
loope
fistp
ins
popa
jle
dec
add
adc
lods
addr16
test
jg
xchg
xchg
inc
sub
les
test
push
scas
test
das
std
sub
jmp
adc
jp
inc
push
sub
cld
mov
and
cmp
mov
scas
mov
movs
sub
js
cmp
outs
add
jmp
inc
jb
adc
or
jbe
mov
sub
aas
dec
cmp
int
(bad)
mov
jle
sbb
adc
lods
cmp
inc
daa
jecxz
sub
out
jge
popa
fcmove
mov
add
push
adc
jo
xchg
mov
jae
lahf
jmp
jmp
sub
add
fist
push
add
adc
out
cdq
bound
mov
sbb
or
lock
push
sub
sbb
dec
jp
outs
mov
fwait
test
jg
xchg
fst
jo
ja
inc
fcomip
fnsave
mov
dec
dec
aam
or
test
sub
cmps
add
iret
push
stos
shl
and
inc
jecxz
icebp
ins
cs
sub
sbb
test
fnstcw
jp
pop
cs
mov
aam
dec
jle
mov
in
sbb
out
popa
jg
cmp
mov
rcr
adc
leave
dec
jmp
push
sbb
popf
push
jecxz
dec
repnz
in
das
jg
ja
jge
retf
xor
lea
dec
les
cmps
cmp
or
aam
jecxz
adc
fwait
add
fwait
test
xchg
lds
mov
push
dec
repz
leave
pop
jmp
in
and
mov
push
cmp
sub
gs
mov
scas
movs
pusha
mov
adc
inc
test
jmp
cld
shl
sub
loop
psubsw
jmp
out
repnz
aad
ficom
mov
aas
add
rcl
dec
cmp
jne
gs
in
add
(bad)
(bad)
fs
cwde
fidivr
adc
xor
and
jo
mov
sub
jnp
mov
sti
push
mov
mov
inc
lods
dec
sbb
js
inc
aas
pop
hlt
jo
adc
out
in
jmp
xlat
xor
addr16
clc
mov
push
outs
aaa
xchg
lock
div
dec
movs
outs
xor
scas
std
push
stos
xlat
sbb
stos
hlt
pusha
hlt
fidivr
mov
adc
and
lods
ds
cld
push
cmps
jecxz
pop
xor
mov
mov
stos
pop
add
jp
cmp
aaa
cmc
and
xor
xor
out
fcomp
(bad)
fsubr
daa
dec
in
iret
aas
push
adc
jp
inc
push
add
sbb
cdq
inc
in
mov
stos
mov
dec
push
shl
jmp
add
(bad)
retf
pushf
call
ficomp
inc
adc
dec
push
adc
jmp
stos
mov
adc
fdivr
mov
dec
stos
movs
jecxz
pusha
aam
xor
dec
cdq
xor
cmps
xor
inc
mov
inc
xchg
fucomp
fnstenv
hlt
inc
mov
out
movs
idiv
cmps
jae
jb
loopne
(bad)
jmp
out
jae
mov
jmp
pop
ins
and
clc
push
out
mov
mov
int
arpl
dec
ret
cmp
add
int
add
fiadd
in
es
sbb
or
aad
lods
dec
imul
xor
mov
mov
inc
fist
pop
mov
pop
inc
outs
cmp
xchg
mov
adc
push
jno
push
sbb
mov
mov
in
adc
mov
movs
lahf
test
push
cs
push
push
pusha
lds
adc
inc
(bad)
shr
fstp
(bad)
xor
mov
inc
int
mov
sub
sub
ficomp
sub
cs
pushf
loope
xor
shl
push
mov
jne
cmps
adc
xor
icebp
push
xchg
jmp
push
or
mov
cmp
mov
out
ins
push
(bad)
aam
xchg
mov
jbe
jmp
in
ret
inc
push
sar
test
dec
jmp
xor
jecxz
xor
mov
cmp
(bad)
fcom
pop
pusha
and
ret
xchg
cmps
loop
shr
lds
dec
xor
lds
add
xchg
xor
imul
fst
pop
in
sub
outs
data16
dec
xor
sbb
call
xor
cmp
enter
out
rcr
or
ins
in
sbb
enter
or
lea
inc
sub
gs
imul
imul
add
jmp
inc
popf
das
push
clc
xor
mov
add
xchg
int
adc
push
bound
cmps
clc
dec
mov
lods
adc
pop
push
dec
call
adc
(bad)
xor
jge
jns
iret
pop
je
push
retf
scas
mov
add
adc
sbb
in
mov
push
and
mov
addr16
inc
cmp
jb
not
loope
sahf
call
xchg
add
(bad)
(bad)
fistp
sub
aaa
mov
inc
sub
push
test
fld
mov
sbb
push
push
push
into
cmp
mov
xor
out
push
mov
(bad)
paddq
jle
cmp
add
pusha
gs
gs
iret
and
xchg
or
xor
out
mov
xchg
xor
cwde
lea
ret
mov
dec
push
in
pushf
sub
xchg
sub
push
test
lds
movs
sahf
add
cmp
fisttp
push
cmc
push
pop
mov
dec
adc
mov
(bad)
stos
jmp
cmp
inc
jns
dec
mov
push
dec
lds
cld
pop
int
dec
mov
push
stos
not
stos
rol
call
push
cli
dec
mov
neg
out
xor
or
lods
fsub
(bad)
cld
sbb
gs
xchg
cld
out
mov
pop
pushf
test
mov
cmp
adc
shl
adc
sar
mov
repnz
sub
add
pop
jns
push
pop
out
sbb
in
push
addr16
outs
cwde
cmp
mov
jmp
mov
shr
adc
jne
stc
cmp
cmp
rcr
adc
cmps
in
test
daa
and
sbb
and
shr
popa
(bad)
add
out
movs
mov
or
xor
leave
cmps
scas
xchg
das
out
(bad)
pop
add
push
jb
add
jno
xor
test
rol
or
js
call
xchg
push
ds
mov
push
pop
cmp
push
push
xor
add
inc
xor
xchg
jl
arpl
xor
push
add
sub
xor
jno
and
jg
add
fldenv
push
mov
xor
push
sub
xchg
inc
push
sahf
push
xor
loope
jo
sub
or
scas
enter
nop
(bad)
adc
sub
in
fsubr
pop
scas
into
mov
(bad)
pusha
sbb
push
(bad)
arpl
sbb
mov
and
cmp
jno
(bad)
pop
cdq
sub
jb
stc
mov
add
push
adc
(bad)
mov
add
fs
push
xor
(bad)
dec
cmp
or
adc
push
cmp
mov
cmp
shr
loopne
dec
mov
jmp
push
sbb
cwde
shl
loope
jne
pop
ss
mov
add
stos
(bad)
fisttp
sbb
pop
cdq
ds
vhsubpd
cmc
cmp
add
and
pop
out
ins
lods
dec
sbb
dec
and
or
rcr
jmp
jns
mov
std
cmp
fistp
sub
outs
das
stc
ficom
fwait
sub
(bad)
sub
or
sbb
adc
stos
xchg
push
push
movs
jp
ret
mov
jo
jl
iret
push
xchg
es
pop
add
hlt
add
and
jg
sub
fcomp
in
call
push
xchg
in
add
and
cwde
enter
adc
jecxz
aas
aaa
dec
(bad)
scas
push
into
shl
int3
sahf
dec
jbe
imul
shl
cmp
cmps
mov
repz
xchg
js
fucom
xor
xor
sar
addr16
retf
mov
adc
sti
add
pop
inc
mov
adc
repz
imul
xchg
pop
test
pop
mov
int3
jp
int3
mov
dec
div
xor
ret
sub
test
sub
add
out
lock
mov
push
cmp
mov
pusha
cmps
jmp
mov
inc
mov
call
out
ret
mov
rol
mov
fist
js
adc
sbb
jg
scas
dec
nop
mov
out
sti
or
xor
and
popf
and
(bad)
mov
enter
fstp
sub
js
sub
sbb
cmps
xchg
fucom
sahf
aas
pop
jb
js
imul
jp
inc
cmp
(bad)
mov
nop
mov
cmp
push
repz
popf
mov
mov
in
and
enter
test
outs
pop
call
mov
add
jno
call
mov
cmp
addr16
rcl
inc
mov
sbb
nop
jno
rcr
call
nop
ret
ret
shl
inc
call
add
scas
ret
sbb
jmp
xchg
pushf
movs
sbb
lods
cmp
mov
ds
movs
mov
leave
jle
pusha
jns
inc
xchg
pop
int
jns
mov
mov
adc
es
call
rol
fisubr
push
xchg
cmc
cmp
clc
movs
cmp
jmp
pause
into
ins
mov
int
jno
or
dec
int
test
sub
cmp
fcomp
sub
push
rol
sbb
dec
pop
inc
fwait
or
mov
int
mov
push
xor
xchg
dec
loop
lahf
ins
bound
pushf
fild
rcr
add
push
ja
in
pop
dec
adc
xor
lahf
dec
sbb
pop
mov
inc
stc
pop
mov
sar
pop
mov
scas
jo
(bad)
cld
hlt
jecxz
lods
pop
clc
or
add
cdq
adc
ror
pop
fdiv
stos
mov
and
mov
(bad)
(bad)
dec
sahf
imul
sub
cmp
inc
xor
or
xchg
stos
ja
cli
xchg
loope
sub
or
mov
sbb
pop
(bad)
adc
call
mov
pop
(bad)
and
add
into
mov
(bad)
mov
xor
jmp
cmps
pop
js
sbb
sbb
or
repnz
push
and
cld
(bad)
xor
sub
jno
xor
sahf
arpl
adc
(bad)
icebp
(bad)
sbb
dec
aad
jns
pop
popf
sar
pop
test
(bad)
mov
or
inc
jns
movs
xchg
lock
(bad)
popf
repnz
rcl
repnz
lea
ins
inc
inc
mov
pop
cmps
icebp
sbb
lds
dec
cmp
das
mov
mov
pop
imul
adc
jb
popf
sub
ret
lods
movhlps
mov
mov
test
jmp
(bad)
cld
es
pop
call
(bad)
push
sub
pop
sbb
or
mov
sbb
leave
das
fmulp
add
(bad)
out
mov
mov
jns
sbb
jecxz
or
movs
jo
pop
pop
movs
es
(bad)
add
xchg
leave
ins
inc
sub
xchg
inc
in
dec
pop
xchg
adc
jecxz
push
push
jmp
shr
mov
cmp
ins
pushf
out
mul
dec
test
adc
int3
sbb
jmp
inc
fdivr
int3
neg
iret
stos
push
cmp
push
pusha
xor
outs
sbb
loope
jo
jno
cmps
icebp
aad
clc
inc
or
sub
sahf
(bad)
pop
or
(bad)
pop
out
mov
add
mov
mov
sub
push
inc
out
pop
ins
xor
lods
jns
or
iret
or
pop
retf
nop
adc
sub
dec
dec
popa
js
out
xchg
cli
dec
pop
xchg
scas
adc
sbb
cwde
jge
int3
imul
sahf
dec
pushf
push
pop
stos
std
sub
js
add
dec
bswap
and
jle
xchg
sbb
nop
iret
cld
sbb
std
retf
add
sbb
fbld
xchg
xor
scas
pop
repz
(bad)
fisub
ss
mov
arpl
dec
les
push
pusha
daa
push
jmp
mov
add
push
fild
sbb
sbb
push
mov
cdq
rcr
data16
xchg
sub
imul
pusha
icebp
hlt
mov
or
adc
in
mov
(bad)
cli
jle
lahf
sbb
mov
or
movs
in
or
add
test
and
mov
(bad)
pop
xchg
sbb
fs
call
ins
in
push
pop
push
mov
pop
or
add
nop
xor
mov
adc
inc
popa
loopne
hlt
ficom
pop
nop
cld
hlt
cmp
sti
std
mov
xor
xchg
sbb
xor
sub
popf
loopne
xchg
int
jmp
sbb
and
or
cmc
pop
adc
hlt
cld
in
mov
or
and
add
push
push
stos
and
and
or
in
ds
or
inc
sub
jp
pushf
jmp
cld
push
mov
test
dec
push
add
cmps
push
jge
stos
lea
call
xor
jns
or
inc
pop
push
or
out
sbb
mov
stos
xlat
fbstp
sub
ror
jno
sub
in
jo
jmp
mov
fmul
out
mov
aas
call
movs
sub
sti
jg
pop
push
daa
mov
or
stos
int
pop
dec
push
xchg
pushf
ss
mov
cmps
dec
cmc
dec
hlt
pop
in
sar
mov
cli
cmp
dec
sub
iret
mov
mov
xor
cmp
pop
dec
add
cmp
repnz
sub
dec
mov
stc
push
push
xlat
xchg
dec
push
xchg
stos
push
out
push
gs
push
push
daa
retf
int
add
(bad)
(bad)
(bad)
inc
inc
xor
lods
mov
and
fs
xor
mov
imul
outs
xchg
ds
or
(bad)
imul
fisub
daa
repnz
jmp
out
dec
dec
imul
out
fst
sti
push
mov
push
dec
cmps
push
push
pop
mov
mov
add
pop
mov
out
ret
xor
addr16
adc
ror
jmp
jmp
iret
fs
aad
imul
lods
pushf
xchg
mov
ds
cli
iret
mov
dec
inc
retf
rsm
jbe
imul
sbb
clc
xor
sub
dec
pop
adc
cmp
add
rcl
clc
inc
cld
ins
sbb
dec
int3
movs
lea
pop
pop
inc
jp
inc
neg
inc
mov
jnp
and
cmc
sbb
fistp
in
(bad)
rcl
xor
xlat
(bad)
jle
inc
dec
out
outs
out
(bad)
mov
loop
pop
pop
loopne
test
inc
lahf
mov
mov
movs
(bad)
add
mov
imul
push
mov
lea
sar
shl
sar
les
adc
mov
outs
cmp
adc
mov
cmc
inc
cdq
mov
push
std
mov
aaa
sbb
or
and
jle
sub
dec
and
or
adc
or
scas
cmp
jae
and
mov
or
fsub
push
inc
arpl
pop
shl
out
rcr
and
and
pop
not
pop
xchg
jo
adc
jo
mov
xor
je
iret
repz
mov
jae
lea
or
pusha
sbb
in
ds
daa
test
xchg
mov
or
mov
call
xor
jp
in
div
in
imul
push
mov
xor
push
dec
popf
inc
imul
(bad)
movs
pop
jg
call
jb
lock
out
mov
hlt
sub
and
cmc
mov
dec
aaa
jmp
leave
xchg
mov
jl
test
int3
add
jge
in
cmp
pop
scas
dec
cmc
mov
cmp
dec
push
pop
sub
and
repz
add
call
jae
mov
icebp
fmul
ror
jno
mov
sar
arpl
xchg
inc
shl
mov
sbb
test
fsubrp
or
aaa
mov
lods
push
stc
mov
imul
cmps
add
push
pop
ja
jns
pushf
aaa
xlat
jmp
out
pusha
in
jle
push
enter
mov
test
mov
xor
and
sti
fadd
pop
sbb
add
int
jle
lods
mov
sub
(bad)
adc
cmp
sti
out
xor
in
loopne
dec
dec
cmp
adc
jae
adc
mov
fld
xchg
jge
dec
push
out
in
scas
retf
xor
lea
push
aas
jnp
adc
into
or
add
sbb
or
push
push
stos
inc
mov
lahf
add
inc
sub
sub
scas
nop
sub
mov
addr16
movs
lods
pop
loope
push
add
cmps
jmp
daa
movs
mov
push
rcr
mov
mov
cwde
mov
inc
or
int3
cs
jecxz
into
aam
ds
cdq
hlt
cmp
out
lahf
inc
int3
test
scas
inc
cmp
ret
xlat
cli
aaa
push
mov
jne
pop
cmc
jl
push
inc
mov
ds
out
aaa
and
test
adc
xchg
test
call
sub
popf
pop
dec
mov
jmp
mov
cmps
and
push
sub
pop
inc
push
stos
xchg
adc
neg
mov
dec
fwait
xchg
clc
ret
mov
popf
data16
call
add
mov
jb
jle
test
mov
(bad)
mov
sbb
repnz
mov
int3
scas
rol
jno
aas
rol
adc
pop
sub
inc
cmp
xor
mov
dec
lahf
mov
ret
call
xor
jecxz
fst
aaa
xchg
xor
xlat
loop
movs
fnstsw
cs
sahf
push
xchg
ret
test
xchg
std
inc
cdq
pop
mov
jl
ficom
add
shl
dec
mov
imul
mov
bound
idiv
lods
xor
mov
push
sbb
out
or
xor
cmp
sub
mov
mov
cmp
ins
xor
sbb
cmp
icebp
sub
pop
pop
push
retf
mov
jl
inc
test
adc
push
push
dec
jmp
or
inc
xchg
adc
lods
movs
pop
ins
test
gs
mov
inc
aas
fbstp
(bad)
cld
(bad)
mov
xor
jl
sahf
sbb
fcmovnb
mov
enter
dec
pushf
mov
lahf
xor
rcr
push
int3
xchg
dec
pop
xor
inc
cwde
leave
pop
dec
push
jg
inc
xor
cmp
cmp
xor
inc
or
pushf
xchg
adc
xor
js
push
adc
mov
add
sub
cmp
fistp
mov
cmp
fdiv
pop
mov
retf
retf
pop
mov
add
mov
aam
push
or
add
xchg
(bad)
push
pop
movs
sti
xchg
aad
push
aad
ins
lock
add
sbb
xor
xchg
ins
push
mov
push
pop
popa
jecxz
or
sub
mov
sbb
cld
jno
mov
sub
adc
gs
rcl
and
pop
popa
xchg
cmps
sub
push
aas
stos
push
popa
repnz
sub
mov
test
shr
dec
icebp
out
dec
out
sbb
or
sbb
mov
sti
cmp
test
and
aad
std
add
xchg
movs
lods
jb
cdq
add
mov
jmp
mov
jmp
imul
mov
xchg
retf
inc
add
fwait
mov
stos
fisttp
inc
rol
mov
or
dec
or
cmp
jno
push
jg
push
frstor
push
call
jnp
adc
(bad)
ror
push
or
mov
movs
cmc
xor
xlat
push
dec
pop
arpl
pop
test
xchg
push
outs
loopne
aam
lahf
fist
and
repnz
retf
pop
(bad)
push
xchg
(bad)
fsubr
loop
cmps
jmp
sbb
jle
cmc
outs
and
jmp
jnp
sbb
js
jne
add
test
mov
xor
jmp
inc
dec
mov
movs
mov
xor
cs
push
ss
sub
pop
out
dec
sbb
xchg
je
repnz
cmp
outs
mov
dec
xchg
pop
loope
inc
mov
daa
cwde
push
dec
icebp
fcomp
call
mov
cmp
sbb
ds
clc
imul
sbb
pop
shl
jecxz
in
popa
and
xor
push
pop
xor
xor
fld
stos
ret
adc
shl
add
ror
xchg
push
and
dec
sub
jb
add
rol
mov
ins
out
aaa
out
or
dec
out
out
push
mov
jnp
cdq
inc
jns
or
popf
sbb
push
or
inc
dec
mov
pop
xchg
xor
stos
jae
xor
dec
cmp
fadd
inc
dec
push
imul
imul
retf
dec
add
push
jne
cmp
xchg
jle
sbb
dec
lock
stc
ins
cmp
cmp
mov
cmp
iret
(bad)
jmp
push
(bad)
daa
rcr
mov
ins
xchg
adc
jo
retf
mov
(bad)
mov
mov
inc
dec
jno
mov
cmps
push
inc
ficomp
push
add
jp
mov
add
popf
mov
jnp
mov
jo
xchg
mov
aam
pusha
leave
rcl
push
hlt
push
fimul
aaa
mov
mov
mov
lods
jp
push
pop
push
out
int
(bad)
std
ins
stos
jbe
mov
jo
jmp
mov
stos
jns
jmp
pusha
ret
or
add
inc
scas
cmp
pop
jb
into
xchg
leave
cmp
jnp
ror
lods
in
jo
cmp
cmps
das
ds
sbb
xor
adc
or
(bad)
fidivr
and
push
push
mov
cmp
jno
push
rol
lock
hlt
into
jb
xchg
xor
sbb
cmp
clc
cmp
sub
test
(bad)
arpl
retf
call
movs
clc
or
fs
add
fdiv
xor
scas
add
rol
mov
mov
jmp
verw
and
ret
mov
push
dec
fs
mov
test
jns
xchg
aas
fisub
adc
mov
mov
call
adc
xor
div
test
push
dec
imul
xchg
mov
push
sbb
and
mov
fwait
add
shr
es
fnstsw
sbb
pop
push
daa
xchg
in
jecxz
jmp
add
(bad)
fs
or
in
in
mov
push
js
mov
xor
and
xchg
add
lea
sub
paddw
imul
mov
inc
call
mov
mov
mov
cmc
call
mov
inc
xor
not
jmp
in
sbb
xor
pop
shl
pop
idiv
dec
and
xchg
aas
cli
xchg
(bad)
cdq
pop
fpatan
inc
cmp
test
mul
jns
leave
adc
xchg
ffree
xchg
sar
fdiv
pop
push
ror
fs
sub
mov
icebp
out
js
push
(bad)
jge
sub
in
push
jmp
dec
(bad)
aas
mov
sbb
ss
rol
add
(bad)
xchg
jae
arpl
mov
cmp
cmp
mov
push
leave
push
in
pop
adc
ss
mov
and
push
jno
test
xchg
inc
sub
call
or
mov
mov
inc
aad
xchg
in
out
sub
or
cli
push
xor
push
ret
adc
ja
loop
sbb
pushf
cmc
or
add
and
push
js
ss
dec
sbb
push
call
outs
sub
and
jmp
inc
pop
inc
jb
mov
and
pop
scas
cli
jecxz
call
sbb
pop
push
xor
loopne
scas
xor
add
xchg
push
or
enter
lods
fld
add
dec
js
call
or
inc
ds
push
loopne
sbb
adc
sbb
ss
add
xor
shr
pop
fldcw
cdq
les
in
mov
pop
ds
fst
adc
(bad)
repz
jge
cmp
jbe
inc
fdivr
call
jmp
inc
fcom
or
mov
ss
call
cmp
add
cdq
cdq
jnp
(bad)
and
test
lods
fs
dec
inc
adc
jne
nop
pop
(bad)
clc
call
inc
jecxz
mov
pop
xchg
(bad)
adc
add
xor
rcr
ins
cmp
pop
arpl
jo
mov
movs
lods
sti
push
inc
cld
mov
mov
fidivr
scas
or
pop
dec
sbb
js
mov
pop
shl
clc
mov
mov
fdivrp
ins
stc
lock
leave
inc
js
cmps
stos
aad
in
sar
cmp
loopne
sbb
icebp
imul
mov
pop
add
mov
retf
out
adc
pop
aaa
mov
into
sbb
mov
or
(bad)
cmp
gs
inc
mov
fidivr
cmp
mov
gs
lahf
in
ins
fisttp
sub
imul
into
jae
test
mov
movs
mov
sub
arpl
push
xchg
mov
nop
add
xor
xchg
xchg
pop
sub
push
ins
xor
mov
inc
inc
add
mov
mov
out
push
ja
push
adc
es
popa
daa
add
sub
ror
aaa
in
mov
xlat
xlat
xor
out
jae
fidivr
xor
(bad)
stos
ins
cmp
addr16
cmp
sub
xor
rcr
sbb
push
push
push
inc
fisub
or
mov
cmp
jecxz
dec
bound
pop
jg
or
ins
dec
aad
jb
arpl
loope
push
add
jmp
add
mov
mov
ror
rcl
sbb
or
lea
dec
push
loope
lahf
xchg
retf
retf
mov
push
ins
sub
pop
dec
mov
mov
dec
in
das
pop
ret
or
fisub
jb
loopne
shl
(bad)
imul
adc
dec
ror
das
std
ror
repz
lds
ror
icebp
xor
dec
mov
mov
inc
adc
out
pop
adc
sub
mov
mov
imul
add
fcom
xchg
data16
lahf
jns
bound
jmp
fsub
movs
xchg
inc
fistp
inc
adc
imul
sub
cmp
or
in
mov
je
dec
gs
fwait
ret
int
jl
xlat
je
out
mov
call
loopne
mov
shl
sub
fsubr
inc
in
into
div
inc
or
dec
jo
fisub
retf
adc
es
cmps
outs
sub
sub
ret
xor
cmp
js
fwait
lea
cmp
fdivp
ss
int3
loopne
dec
out
cwde
jecxz
imul
sbb
clc
outs
iret
icebp
pusha
enter
loop
inc
ja
bound
lods
out
pop
addr16
(bad)
or
(bad)
jo
cmp
aaa
nop
jmp
xchg
fbld
mov
call
pop
add
call
mov
jbe
jbe
lods
dec
scas
mov
aaa
and
jmp
mov
shr
adc
mov
mov
in
inc
test
add
pop
pop
adc
std
mov
xchg
adc
aad
ret
adc
lds
fcom
test
and
sub
ret
rcl
test
mov
popf
xchg
sub
addr16
jp
mov
popf
movs
xchg
pop
jmp
mov
sub
ret
push
psllw
or
out
xor
sbb
fwait
imul
(bad)
mov
or
sahf
push
and
or
push
ret
daa
fsub
xchg
mov
fsubr
or
rcr
fnstsw
push
icebp
nop
dec
inc
movs
ss
call
cmps
retf
hlt
sbb
sub
xchg
xlat
mov
hlt
pusha
test
iret
push
add
mov
jb
(bad)
mov
mov
sbb
cmp
scas
jl
popa
scas
fisttp
dec
sub
or
ret
pop
(bad)
sub
pop
inc
dec
aas
in
cld
adc
jg
ds
xor
out
adc
clc
repnz
movs
xchg
jnp
dec
jnp
cdq
ret
push
fwait
ins
call
push
dec
mov
int3
or
outs
cmp
data16
xor
das
ds
call
and
(bad)
icebp
(bad)
push
adc
ins
xor
xor
mov
pop
clc
add
push
loope
or
mov
cmp
jmp
retf
xor
jmp
adc
lahf
sti
mov
fimul
leave
in
nop
xor
retf
sahf
(bad)
adc
test
cmp
imul
jns
dec
inc
repz
mov
movntq
out
inc
ins
jl
push
cmp
int3
jp
mov
sub
or
xchg
loope
push
push
jmp
lods
mov
leavew
fcomip
imul
aad
in
fwait
call
repz
jge
pop
stos
cmp
lds
mov
leave
jg
and
xor
sahf
scas
jmp
add
mov
dec
icebp
sub
inc
std
test
inc
bound
cmp
adc
stos
pop
(bad)
out
xor
cmp
shl
retf
mov
icebp
add
push
int3
push
or
mov
dec
inc
daa
adc
rol
mov
xchg
rol
(bad)
(bad)
retf
and
sub
rol
(bad)
adc
mov
mov
hlt
not
jb
cdq
inc
adc
sub
or
call
xor
push
loope
jnp
sub
jbe
add
cmps
pushf
cmc
(bad)
jb
pop
dec
jnp
adc
lods
push
xchg
sbb
jae
popf
xchg
scas
ss
or
mov
loopne
fsub
jmp
pop
mov
lock
push
cwde
sub
stc
out
loop
mov
js
cmp
sbb
or
pop
adc
fidiv
lods
pushf
lods
cwde
jmp
xor
sahf
out
mov
ins
in
gs
retf
xor
loopne
and
push
cdq
sub
cmp
pushf
into
or
push
fadd
idiv
jnp
and
jae
cld
ret
cdq
out
pop
mov
(bad)
idiv
scas
addr16
dec
inc
xor
add
add
or
inc
out
mov
inc
jno
cmps
stos
add
(bad)
xor
and
cmp
in
jno
pop
in
hlt
xlat
js
cwde
retf
push
popa
and
mov
scas
aam
lods
jbe
loope
leave
mov
cmps
adc
mov
mov
mov
test
jl
fcomp
ins
sbb
pop
iret
mov
pop
jmp
stc
std
inc
mov
add
cmp
cmp
push
push
push
xor
dec
push
jnp
adc
test
or
jecxz
inc
and
sbb
jl
add
pop
push
mov
leave
js
push
cmp
mov
pop
add
mov
shr
or
or
jbe
cmp
(bad)
fcmove
adc
and
in
add
div
enter
enter
jnp
cmps
mov
test
pop
cmp
mov
jnp
dec
pop
test
mov
inc
leave
mov
xchg
push
jno
xchg
push
sahf
cs
mov
mov
mov
neg
out
or
ins
(bad)
aam
in
ja
nop
push
or
sub
mov
pop
es
add
dec
cld
inc
mov
sub
xchg
and
push
inc
inc
dec
xor
add
imul
jno
iret
cmp
das
jne
adc
pop
and
(bad)
into
push
not
pop
sbb
arpl
mov
out
jmp
mov
cmp
dec
dec
push
(bad)
aam
imul
xor
jl
push
icebp
mov
adc
jle
mov
jge
daa
adc
and
sub
fwait
rol
dec
xchg
pop
cmp
cld
fst
mov
(bad)
scas
jmp
cld
pop
add
cmp
(bad)
fnstsw
xchg
ins
call
push
add
imul
sub
dec
pop
inc
sbb
(bad)
dec
repz
stos
leave
fwait
cs
dec
shl
sub
mov
jmp
jg
inc
rcl
into
sub
jbe
(bad)
mov
mov
cmp
pop
push
lahf
ds
jle
mov
and
rcr
and
into
int
ins
rcl
jl
xor
jp
test
(bad)
daa
xchg
pushf
xor
imul
jmp
stos
push
cwde
add
pusha
bound
fdiv
lods
add
push
(bad)
loope
je
jle
mov
cli
and
add
je
(bad)
adc
sbb
sub
leave
xchg
icebp
ss
adc
sub
pushf
fsubr
jg
or
add
in
and
pusha
mov
mov
lods
adc
mov
out
adc
push
jl
outs
imul
sbb
ret
dec
cmp
mov
inc
adc
es
adc
rcr
sub
or
and
xchg
into
into
dec
pusha
cdq
cld
sahf
aas
ss
retf
mov
das
xchg
xchg
xor
dec
jnp
call
test
test
loop
ins
xchg
cmp
xor
mov
cmc
push
jmp
sub
sti
xchg
push
mov
mov
lea
mov
sub
pop
into
mov
mov
sub
cmp
je
and
dec
push
daa
push
inc
das
jmp
mov
mov
imul
sub
je
icebp
fwait
addr16
cdq
or
push
popa
popa
retf
sbb
in
dec
jecxz
push
aam
jecxz
outs
and
data16
loopne
inc
les
nop
xor
push
xchg
jge
adc
outs
mov
xchg
mov
dec
pop
add
enter
les
test
aad
cmc
(bad)
cwde
and
mov
mov
repnz
inc
fistp
mov
jae
data16
jmp
enter
in
mov
xor
ret
mov
xchg
in
sub
sahf
jmp
or
jl
sbb
bound
(bad)
(bad)
pop
imul
sub
mov
js
aad
add
dec
out
fsub
xchg
(bad)
outs
bound
mov
lds
push
fnstcw
(bad)
hlt
pop
popw
clc
or
adc
pop
pop
dec
and
add
xchg
xor
xor
loope
ds
pusha
xor
mov
ins
les
inc
or
movs
xchg
(bad)
xchg
sub
stos
mov
jg
test
arpl
jno
adc
in
clc
and
pushf
ror
retf
push
or
or
mov
push
pop
aad
loope
test
or
out
pop
xor
or
mov
or
and
sub
dec
xchg
ror
add
xchg
aad
mov
jle
fild
mov
cdq
in
xchg
jg
int3
add
pop
push
lahf
inc
js
(bad)
push
ins
aaa
pop
sub
mov
ret
ds
cmps
ss
jecxz
add
sbb
arpl
dec
daa
pop
in
outs
and
xor
cmc
test
adc
ret
and
fcmovb
mov
(bad)
jb
inc
test
lock
cmc
repz
(bad)
fnstcw
add
dec
ins
add
repnz
jmp
mov
or
ss
outs
jno
adc
mov
aad
jbe
pusha
dec
cmp
fldln2
or
fdiv
mov
paddusw
or
cmps
movntq
cdq
inc
cmps
aad
and
lods
jne
out
test
retf
jle
into
inc
dec
mov
adc
push
in
gs
lahf
out
scas
xchg
bound
add
(bad)
adc
jb
cmp
mov
pop
adc
shr
or
jbe
mov
aad
xchg
in
or
lahf
stos
int
retf
cli
mov
les
push
xchg
mul
mov
out
movs
mov
xchg
dec
mov
ins
test
jo
popf
test
jp
arpl
add
test
and
imul
cdq
inc
push
add
jo
mov
mov
mov
sbb
pop
pusha
sbb
test
scas
aad
(bad)
rcl
or
push
fsubr
dec
pop
sbb
lods
push
pushf
mov
xchg
mov
sbb
stos
jmp
jmp
retf
int
push
shl
sbb
add
cs
sbb
sar
sub
xor
sti
sub
sbb
out
and
ins
fs
jno
daa
es
les
pop
ja
pushf
call
in
jae
mov
cmp
dec
ficomp
push
dec
sub
push
dec
adc
and
pop
cmc
les
iret
mov
aas
mov
mov
adc
stos
pushf
cmp
adc
and
fnstenv
into
out
dec
inc
mov
ins
add
adc
mov
cwde
jmp
mov
push
aam
aad
lock
jmp
call
push
xor
push
xchg
retf
jno
bound
adc
xor
dec
lock
lods
jp
jo
inc
sub
cmp
mov
pop
mov
xchg
rol
ins
mov
das
lods
and
aaa
fmul
rcl
inc
jns
imul
pop
cmc
mov
sub
je
lods
adc
mov
loopne
inc
add
push
xchg
inc
mov
(bad)
and
mov
mov
fst
pusha
loopne
xchg
sbb
push
xchg
out
inc
fcmove
inc
mov
out
dec
and
add
mov
push
mov
mov
loope
nop
test
push
dec
adc
icebp
fild
sub
cmp
sbb
jp
and
sub
pop
lahf
(bad)
and
xor
cmp
xor
push
out
shl
and
das
pushaw
pop
inc
into
mov
and
inc
into
rcr
push
adc
mov
stos
or
jns
mov
xor
sub
cmp
cmp
es
push
out
mov
jmp
xchg
cdq
add
test
cmp
out
dec
xchg
pop
xlat
cs
push
mov
das
mov
fnstsw
movs
call
in
adc
push
bound
ins
mov
cwde
(bad)
out
mov
sub
cmps
jb
push
ror
sub
nop
adc
xor
push
jmp
sub
in
inc
dec
xor
push
dec
adc
pop
adc
outs
outs
cmc
out
lds
rcr
mov
sbb
jle
sub
push
pop
mov
jmp
fldcw
inc
and
dec
push
sbb
rcr
mov
inc
sbb
adc
movs
dec
dec
fdiv
jge
in
mov
push
and
outs
lahf
scas
jnp
jle
jbe
push
mov
mov
mov
ins
mov
in
push
cmp
fwait
jl
dec
jnp
in
mov
in
stc
jns
les
enter
scas
out
cmp
jmp
sbb
shl
gs
sbb
stos
fimul
cmp
pop
add
cmps
outs
loope
loope
in
cmp
push
mov
test
repz
fs
leave
es
jge
shr
mov
scas
jne
call
(bad)
jg
push
(bad)
(bad)
push
push
aaa
or
pushf
push
adc
mov
arpl
cmp
adc
jg
pop
(bad)
je
push
add
sbb
xor
(bad)
and
push
ss
arpl
popa
ja
pop
adc
mov
dec
xchg
test
cmps
sub
pusha
jg
out
pop
or
cmp
fwait
stos
pop
inc
shl
push
mov
push
cmp
push
or
mov
inc
out
daa
test
movs
lds
mov
aas
push
and
(bad)
popf
and
lea
(bad)
jg
not
inc
popa
mov
das
and
and
movs
hlt
(bad)
pusha
xchg
push
mov
(bad)
mov
inc
pop
adc
jmp
mov
retf
or
cmps
push
in
mov
or
fsub
adc
rcl
clc
jae
xchg
sub
xchg
pop
or
ret
test
repz
mov
imul
cdq
xor
outs
outs
out
loop
xor
jb
mov
mov
inc
xchg
mov
inc
xor
ficom
jne
pop
jo
sbb
mov
jb
sub
push
clc
sahf
cdq
jae
sbb
dec
xor
scas
stc
pop
adc
sbb
test
sahf
mov
icebp
pop
ret
cwde
or
or
mov
inc
call
inc
inc
(bad)
sbb
mov
rcr
and
mov
mov
sbb
pop
int
sub
popa
cs
fucomi
cmp
pop
jae
sti
cmp
stos
in
leave
(bad)
push
xor
xor
lds
in
lods
pop
lea
jle
aaa
mov
es
dec
neg
data16
cld
xchg
les
push
outs
test
add
mov
aad
or
scas
call
ret
xchg
ss
mov
in
mov
jmp
fdivr
arpl
mov
lods
sti
fisubr
xor
pop
xor
outs
(bad)
repnz
add
imul
outs
fisub
fcmovnb
pop
add
mov
cmp
or
mov
ficomp
jo
xchg
jp
xchg
dec
pop
jge
mov
xchg
mov
dec
sbb
cmc
xchg
sar
ret
cmps
or
out
xchg
stos
ds
dec
mov
pusha
push
mov
aam
cmp
mov
mov
(bad)
in
and
push
shl
(bad)
jp
stos
or
xlat
std
cs
mov
nop
daa
stos
cmp
mov
cmp
mov
push
in
xor
cdq
sti
dec
rol
pop
push
outs
inc
mov
push
stos
and
gs
sbb
mov
pop
jl
lock
mov
mov
pop
test
push
out
pop
fimul
mov
xchg
ror
cli
jne
(bad)
js
push
outs
lds
ins
(bad)
sbb
bound
or
dec
sub
jg
or
push
iret
xchg
and
stos
stc
(bad)
stc
cld
dec
push
cmp
mov
(bad)
xchg
movs
inc
inc
les
imul
movs
rcr
out
in
fldcw
outs
add
or
xor
iret
sbb
cmp
xor
cmc
adc
push
out
pop
call
xchg
mov
push
dec
inc
pop
jnp
mov
push
inc
fidiv
adc
xchg
inc
dec
cld
jae
adc
mov
lock
dec
inc
sub
lods
repnz
add
inc
cmp
mov
xor
dec
xorps
test
shl
xchg
stc
push
xlat
xor
cmp
leave
xchg
das
leave
scas
or
outs
sub
cmp
ret
and
mov
clc
fiadd
retf
fcomp
pop
ret
mov
adc
push
stos
inc
cld
aas
jo
and
add
(bad)
int3
dec
or
push
adc
mov
mov
in
(bad)
mov
push
xor
jg
rol
or
jnp
jp
cmp
fstp
mov
pop
and
xlat
retf
test
cwde
mov
xchg
stos
adc
cld
aas
sti
call
ja
push
xchg
fistp
test
call
cmps
add
xor
or
stos
rol
push
inc
adc
shl
pop
dec
cdq
pop
sar
(bad)
mov
test
and
jbe
sub
push
cmps
and
fbstp
xor
xchg
mov
int
ror
in
test
lahf
sub
(bad)
jl
retf
sub
test
or
add
scas
imul
jo
pop
mov
push
fwait
ror
inc
rol
jmp
inc
xor
xchg
aaa
sahf
leave
xor
nop
jecxz
fcomp
repnz
mul
push
or
sahf
call
data16
sahf
and
inc
out
jb
in
or
bound
sub
pop
xlat
inc
das
mov
adc
leave
xor
inc
jge
adc
mov
pop
xchg
and
repz
xor
cwde
jb
popa
(bad)
jnp
data16
int
popa
inc
jmp
pop
xchg
outs
idiv
mov
pop
mov
mov
mov
add
out
out
lahf
sbb
adc
and
lds
mov
cdq
movs
out
mov
adc
lea
cld
scas
adc
push
xchg
data16
mov
sub
int3
fs
(bad)
(bad)
cdq
lods
and
out
pop
xor
sub
fiadd
stos
mov
test
jmp
cmp
mov
mov
fsubr
sub
xchg
push
inc
and
sub
cdq
add
cli
in
popf
xor
add
cdq
dec
jno
mov
pop
cdq
iret
imul
hlt
pop
jmp
fldenv
es
lahf
popf
xor
jmp
neg
les
push
mov
(bad)
test
or
popf
xchg
addr16
push
aam
jae
sti
or
add
pop
ins
ret
cmps
retf
inc
scas
dec
iret
enter
into
sti
jne
in
mov
cmps
es
cmps
ins
fldenv
mov
dec
sahf
test
mov
cmps
stos
fisttp
mov
push
not
push
je
jb
bound
ret
(bad)
push
xchg
jne
inc
push
inc
fidiv
jo
aaa
mov
jge
call
and
iret
enter
pop
les
mov
adc
add
je
int3
lds
mov
stc
mov
out
sub
arpl
mov
icebp
sub
aad
popa
add
pop
in
(bad)
xor
loop
xor
pop
xlat
cmp
je
jae
fadd
fsubr
or
iret
mov
push
sub
clc
fdivr
sbb
fdiv
push
mov
rcr
xchg
pop
jp
adc
cmp
into
sub
or
shl
inc
push
mov
loop
stos
sbb
sub
popf
push
(bad)
rcr
ss
movs
sbb
pop
mov
ss
or
xchg
cs
or
mov
xor
xor
mov
push
xchg
mov
lock
mov
fnstsw
in
add
or
std
ins
mov
hlt
add
or
ret
sbb
jns
les
pushf
or
fldcw
mov
fstp
cld
dec
jmp
ret
sbb
mov
sbb
fs
rol
adc
sbb
and
cmp
leave
or
test
imul
out
jmp
loope
ja
inc
clc
jns
and
adc
imul
clc
int
xor
(bad)
std
or
cld
jg
mov
dec
pusha
jmp
jnp
test
sar
cmp
es
scas
push
jg
sbb
or
cmp
mov
aad
stos
or
xchg
xchg
mov
jb
enter
cmp
inc
ds
scas
(bad)
add
cmp
push
cmp
push
jmp
or
mov
jno
test
cmps
ficomp
stos
pusha
dec
sub
stc
jbe
dec
jb
pop
mov
gs
cld
(bad)
xchg
sbb
out
xchg
adc
sub
xor
xchg
sti
cmp
data16
test
xchg
mov
dec
pop
cmps
jae
adc
ins
popa
fisubr
lock
dec
push
hlt
push
mov
leave
mov
(bad)
jns
adc
repz
xchg
jmp
adc
mov
jno
in
jae
fwait
inc
push
or
in
(bad)
jae
retf
push
lods
dec
xchg
mov
inc
add
dec
stos
mov
fisubr
mov
sbb
inc
js
jp
pop
push
test
and
mov
dec
pop
nop
ror
stos
jl
ror
adc
rol
and
xchg
add
pop
mov
je
sub
data16
mov
push
movs
inc
pusha
in
test
sbb
test
fnstsw
(bad)
stc
ror
je
ins
xlat
or
xor
adc
out
stos
inc
jno
fisubr
mov
dec
pop
ret
ins
punpckhdq
xlat
movs
idiv
add
rcl
repz
bt
push
leave
jg
cs
pop
fdivrp
push
inc
sbb
fcomip
or
(bad)
adc
and
add
mov
inc
xchg
test
call
pop
adc
xlat
or
pop
cli
cmp
or
dec
xor
or
div
xchg
xchg
jmp
or
out
addr16
inc
mov
jbe
outs
adc
jl
lods
xor
fsub
adc
xchg
je
add
and
inc
or
cs
mov
mov
dec
mov
inc
mov
adc
sbb
fcom
sbb
(bad)
add
mov
mov
test
mov
cmc
sbb
call
inc
lea
sbb
lock
(bad)
dec
fldcw
pusha
mov
call
shl
pop
pop
stc
sahf
popf
pop
in
dec
fst
imul
pop
inc
imul
pop
jb
inc
sub
add
sbb
jle
jecxz
cmp
cmp
js
out
sub
inc
jl
gs
pop
iret
push
cs
sub
pop
xchg
sbb
in
dec
add
xor
dec
fldenv
mov
loop
dec
push
mov
cld
xchg
mov
and
iret
mov
push
rcl
sub
add
mov
sbb
pop
sbb
pop
popf
mov
(bad)
lahf
or
bound
pop
xor
xchg
jae
outs
adc
inc
daa
aad
(bad)
dec
leave
pop
aam
out
movs
pop
jg
adc
icebp
stc
data16
inc
sti
fs
pop
mov
or
xchg
lods
adc
sub
out
call
xor
inc
les
cmp
imul
lock
xor
jae
and
sub
jg
cmp
push
rcl
push
add
mov
inc
aad
mov
add
fadd
neg
fs
inc
xchg
cmps
lahf
inc
addr16
cmps
ins
jb
xchg
call
dec
ja
push
adc
aam
sub
and
jecxz
(bad)
icebp
rcr
gs
inc
aam
aam
(bad)
or
fadd
stos
imul
int
jb
out
mov
or
dec
mov
dec
mov
cld
add
mov
lods
pop
jecxz
lea
or
push
mov
xchg
cmp
sahf
pop
sahf
aaa
push
out
addr16
cmp
pop
in
pushf
std
lods
shl
in
cmps
out
loop
dec
cmp
push
sahf
movs
mov
dec
mov
jle
lock
xor
xor
add
push
adc
and
sub
loopne
mov
int
cld
retf
in
js
add
not
pushf
idiv
inc
adc
out
inc
jne
outs
ins
mov
push
nop
xchg
aam
mov
and
xchg
push
sub
xor
jl
mov
(bad)
in
xlat
push
retf
lock
hlt
adc
lock
jne
repnz
out
push
gs
inc
and
dec
add
pop
daa
cmc
arpl
lods
add
pop
ds
ins
cmp
cmps
push
aas
lods
sbb
test
popw
push
arpl
or
loop
and
add
iret
mov
xlat
cmp
and
lds
fidiv
mov
imul
push
mov
dec
pop
and
push
jb
sbb
mov
xor
fxch
push
xor
cmp
rol
shl
sti
mov
fst
dec
sub
mov
fadd
push
dec
retf
sti
out
retf
fisubr
push
ss
stc
int3
mov
pop
push
cmps
xor
ins
push
mov
sub
in
clc
in
(bad)
inc
mov
push
retf
pop
std
out
in
inc
pop
push
int
sbb
retf
stos
ins
retf
mov
lods
mov
call
sbb
(bad)
xchg
or
mov
jo
push
push
add
ds
push
repz
loop
jno
js
stc
pmullw
gs
and
add
pop
daa
ins
rcl
pushf
xchg
pusha
stos
jae
fwait
ss
fst
mov
xchg
xchg
ss
adc
push
pop
cmp
(bad)
jg
bnd
add
mov
pusha
mov
lods
jns
add
mov
iret
sub
out
cmp
ds
cmp
fs
jne
stos
dec
sub
add
pop
ins
xor
movs
or
dec
mov
fwait
add
outs
xchg
aad
fstp
jno
inc
adc
test
aaa
pop
dec
sub
jmp
push
int
retf
outs
xor
and
pop
(bad)
push
and
jae
sti
adc
push
sbb
xchg
xlat
inc
pop
jle
int3
pushf
je
das
cs
das
aam
pop
inc
cmps
loopne
arpl
jae
repz
int
xchg
in
xor
mov
fnsave
sbb
adc
add
out
fsubr
imul
pop
call
loopne
dec
sbb
xor
inc
xor
fdiv
pop
pusha
mov
sub
loopne
bnd
(bad)
movs
mov
mov
test
fimul
sahf
(bad)
jmp
push
mov
xor
cmps
or
mov
dec
leave
std
cmp
push
push
imul
retf
jno
and
int
repz
es
inc
jle
aam
sub
lds
aad
aas
pop
lds
clc
(bad)
pop
call
add
mov
jns
sbb
inc
dec
(bad)
das
cli
mov
xor
xchg
addr16
rcr
loopne
lahf
add
out
sbb
add
mov
mov
add
(bad)
push
call
fimul
sub
retf
test
loopne
jbe
xchg
jge
push
and
add
lods
bound
or
xchg
sub
and
fsubp
in
mov
rol
ins
cwde
cld
push
jge
mov
in
out
mov
xor
add
outs
mov
adc
repz
jb
imul
mov
repnz
cmps
sbb
pushf
mov
mov
add
mov
fldenv
jbe
out
and
scas
and
push
hlt
jne
(bad)
out
cmp
stos
lgs
jae
inc
xor
and
jbe
cmp
cmp
mov
mov
ror
xchg
ss
push
push
bound
and
jb
mov
mov
div
std
xchg
xor
fist
cwde
jl
scas
mov
(bad)
and
jbe
ss
aad
rcl
cli
js
push
fisubr
sub
pop
(bad)
ss
loopne
jne
das
pop
mov
mov
js
adc
scas
sbb
push
outs
jne
push
aam
idiv
pop
out
cmp
out
or
out
clc
pushf
pop
pusha
loopne
nop
jp
dec
bound
adc
call
cmps
mov
fwait
lock
and
ror
xchg
shl
retf
jns
call
dec
xchg
mov
dec
jo
fnstcw
fucom
sbb
loope
and
(bad)
cmc
lahf
ja
cld
jae
mov
mov
add
pop
xor
sti
je
xor
ret
aaa
in
(bad)
int3
inc
sti
lds
inc
int
pop
pushf
add
or
aad
pop
imul
leave
lahf
cmp
or
add
pop
out
mov
inc
fistp
push
arpl
cdq
mov
adc
or
out
outs
cmp
lods
in
mov
sub
dec
xor
outs
cli
adc
call
push
cld
jmp
xor
aaa
jle
dec
push
fnsave
fdiv
outs
ffree
fld
hlt
push
mov
cwde
rcr
or
pop
or
mov
scas
jno
pop
in
dec
pop
shl
mov
pop
(bad)
dec
pop
(bad)
dec
stos
inc
sbb
fwait
div
pushf
and
mov
inc
cmp
mov
repnz
push
je
sub
xor
mov
jge
icebp
fcos
add
repnz
mov
push
cmp
fbld
ret
popa
push
inc
mov
add
data16
push
mov
retf
mov
pop
add
mov
add
pop
or
jne
leave
sahf
movs
mov
imul
test
cdq
and
ds
adc
inc
push
xchg
clc
push
imul
scas
cmps
mov
fadd
cld
pop
mov
adc
add
mov
jl
pusha
mov
iret
stos
mov
je
xor
out
or
cdq
shld
jnp
mov
inc
fdiv
shr
iret
mov
dec
arpl
mov
and
imul
(bad)
sub
dec
js
imul
arpl
in
mov
jne
enter
jge
fucomp
prefetch
mov
inc
and
rcl
gs
jecxz
ja
std
fisttp
scas
pop
mov
and
inc
fidivr
int
cmp
cmc
xlat
popa
mov
scas
ss
movs
push
add
mov
sbb
inc
push
daa
imul
jbe
adc
sbb
fadd
out
pushf
jae
dec
push
imul
repz
xchg
jnp
and
stos
dec
inc
cmp
and
mov
sub
std
adc
dec
adc
sbb
xor
and
out
addr16
dec
out
div
sahf
xchg
call
shl
mov
or
fidiv
frstor
xor
cmp
sbb
and
mov
xor
sti
and
div
adc
pop
int
and
bound
mov
hlt
add
fadd
xchg
outs
cwde
fisttp
je
xchg
mov
mov
pop
cmp
add
gs
rcl
(bad)
out
dec
mov
daa
dec
add
retf
and
outs
ss
aas
sub
inc
jbe
mov
nop
mov
popf
push
xchg
inc
outs
inc
jo
int
inc
and
inc
push
or
pusha
pop
pop
pop
mov
je
sub
inc
or
imul
call
or
test
or
repz
adc
jne
(bad)
jge
lods
popf
pop
xchg
mov
das
push
pop
pusha
shr
mov
mov
jmp
or
jle
(bad)
in
out
jmp
push
xchg
pop
pop
fisttp
in
sahf
mov
clc
mov
mov
shl
movs
mov
add
pop
rol
cmp
add
fdivr
dec
test
lds
pushf
and
mov
jmp
imul
mov
cld
mov
mov
jns
ins
cmps
stos
sub
fcmovnb
sar
mov
jecxz
inc
in
shl
addr16
jb
push
stc
std
xchg
adc
xor
xlat
pop
mov
inc
outs
add
not
pop
push
sbb
xchg
in
xchg
push
dec
mov
loop
cmp
cmc
hlt
fld
xchg
cmps
inc
jecxz
fadd
cmps
sub
xor
div
xchg
or
pop
aas
add
test
test
adc
sub
rcl
mov
leave
xchg
mov
mov
xor
aam
and
ins
std
xor
cmp
ficomp
shl
stc
mov
push
in
cmp
rol
sbb
aas
mov
shr
adc
push
(bad)
shl
mov
push
mov
xchg
fsub
xlat
mov
hlt
fistp
not
mov
jle
stos
mov
ja
test
(bad)
mov
aas
lahf
inc
mov
push
pop
sub
sub
retf
cmp
and
stos
mov
sub
out
mov
mov
daa
xchg
scas
inc
xor
fisttp
pop
cld
movhps
xchg
xchg
sbb
mov
sub
push
xchg
ins
pop
test
dec
idiv
stos
push
mov
jno
nop
pop
cdq
adc
fisttp
add
push
adc
mov
inc
nop
lods
fs
test
sti
xor
add
sbb
xchg
mov
imul
push
sbb
lea
dec
ja
(bad)
in
fcomp
(bad)
dec
stos
jecxz
mov
jnp
xchg
mov
add
rcl
push
imul
mov
loopne
jbe
call
mov
fisub
push
repz
scas
mov
inc
sub
inc
(bad)
int3
mov
sub
test
sub
icebp
add
jnp
mov
das
imul
std
inc
xchg
xchg
jge
pavgw
push
xchg
dec
mov
(bad)
mov
cmp
sbb
rol
aas
pop
adc
imul
lahf
xchg
or
dec
and
(bad)
jp
jo
jnp
or
mov
lahf
leave
sbb
sbb
dec
pop
sar
daa
jmp
jecxz
dec
das
jmp
jge
jmp
iret
or
mov
add
or
mov
jecxz
aad
pop
shl
outs
push
jmp
inc
xor
movs
cmp
(bad)
cmp
add
dec
mov
sub
stc
lea
mov
shl
gs
int
int3
call
mov
pop
in
mov
jns
lds
pusha
cli
pop
out
sub
or
inc
sub
inc
dec
test
cmp
pop
rcr
pop
mov
das
ins
mov
dec
mov
test
(bad)
std
lods
dec
jnp
sbb
cmps
dec
hlt
mov
loope
mov
or
xor
mov
and
rcl
jnp
(bad)
repnz
inc
mov
neg
das
cmps
lods
mov
adc
(bad)
stc
inc
xchg
movs
dec
cwde
xchg
xchg
js
sub
sub
xchg
mov
mov
mov
das
sub
or
mov
fnsave
cmps
add
test
cmp
iret
pop
scas
fcmove
cmp
inc
enter
fcom
dec
inc
dec
nop
or
or
cs
ret
clc
out
shl
popf
dec
cmp
mov
push
fs
popa
fldcw
pusha
cs
push
jecxz
fstp
cmp
add
or
add
cmp
repz
fidiv
(bad)
xor
popf
outs
mov
xchg
or
inc
pop
inc
sub
outs
iret
pop
fstp
adc
cli
jnp
add
push
repz
xchg
xchg
sub
jl
sti
mov
mov
ds
xor
mov
and
fbstp
jmp
xchg
sbb
aaa
mov
nop
jne
fidivr
mov
data16
in
dec
pop
mov
xor
pop
(bad)
loopne
push
inc
lahf
or
out
mov
repnz
mov
jecxz
cwde
scas
add
out
loopne
mov
xchg
aaa
iret
xchg
mov
and
stos
js
ret
ror
es
adc
mov
retf
xchg
retf
sahf
fisub
jmp
cmp
loope
(bad)
dec
xor
imul
movs
pshufw
mov
or
inc
div
lock
js
pop
add
test
int
fucomip
jg
arpl
pop
push
test
sar
xchg
scas
push
mov
mov
or
mov
cli
inc
stos
push
sbb
and
fisub
sti
retf
repz
cmp
mov
xor
pop
movs
movs
xlat
fild
fdivr
outs
pop
pop
sahf
xor
aam
icebp
and
sub
cmp
lock
loop
loopne
xchg
add
xchg
xchg
data16
mov
xchg
mul
xor
cmps
test
and
movs
ja
xchg
mov
fs
pop
add
(bad)
mov
sbb
pop
stos
bound
pop
pop
pushf
lock
iret
mov
enter
stc
add
sti
and
pop
in
in
jne
xor
jo
dec
data16
push
jle
shl
sbb
stos
or
inc
addr16
mov
inc
xor
pop
mov
int3
sbb
mov
scas
mov
aas
int3
pop
cli
retf
sub
push
mov
ss
xlat
lods
pop
add
lock
imul
jbe
push
pop
mov
sbb
nop
adc
(bad)
mov
xor
xchg
cld
inc
sbb
outs
push
xor
outs
dec
jae
sbb
test
push
sahf
out
ret
cmp
fdivr
ret
and
int3
ret
dec
dec
test
xchg
enter
pushf
sbb
mov
stos
xlat
dec
fadd
pop
mov
ret
(bad)
popf
cdq
(bad)
pop
mov
sub
sti
fistp
aad
and
mov
out
scas
jecxz
push
xchg
push
xchg
mov
es
cmp
sbb
repz
jle
test
adc
(bad)
mov
ss
or
or
scas
lds
iret
jle
mov
mov
pop
loopne
push
inc
data16
mov
xchg
pusha
inc
imul
test
outs
jno
cmps
test
pop
retf
and
fadd
lods
add
jb
lods
dec
xchg
sahf
(bad)
ja
outs
loopne
bound
inc
or
jle
fwait
sbb
or
cmp
hlt
mov
add
popa
jo
mov
jnp
lock
jae
sti
ss
cmp
sub
sub
stos
add
cld
stc
nop
sbb
mov
in
jnp
xchg
sar
outs
pushf
stos
ds
xlat
retf
push
test
push
inc
mov
addr16
jp
mov
jo
aam
rcr
scas
in
cmp
loopne
call
and
les
out
loope
(bad)
fist
shl
or
xchg
mov
or
inc
jno
xchg
icebp
and
inc
rcl
movs
popf
(bad)
pop
repnz
and
retf
or
inc
inc
cmp
xchg
repz
inc
mov
rcr
mov
xor
add
shl
int
jb
add
push
pop
outs
cmp
cmp
jns
dec
loop
ret
call
int
arpl
shl
pusha
xchg
sub
or
jl
jge
fwait
cmps
int
stos
mov
aas
sbb
icebp
cmp
jb
(bad)
lock
repnz
mov
adc
push
xlat
cmp
pop
cwde
add
cwde
add
sbb
inc
mov
dec
fnstenv
jmp
test
call
mov
pop
mov
into
mov
dec
sub
dec
(bad)
std
int
pop
stos
xchg
xchg
ins
idiv
sbb
ret
aam
psubd
pop
jbe
out
dec
sbb
fdiv
pcmpgtw
repnz
mov
out
shl
fldcw
jle
fdivr
pop
push
inc
loope
test
xchg
sub
add
test
xor
sub
mov
mov
mov
sahf
shl
and
fs
icebp
mov
push
jne
js
les
jne
js
dec
xor
add
and
pusha
fcom
(bad)
std
and
aam
and
pop
in
dec
push
into
mov
jp
bound
jne
jb
test
test
inc
test
je
and
out
mov
fs
push
cli
std
shl
shr
fs
dec
sub
retf
mov
sub
cmp
push
outs
mov
pop
gs
mov
(bad)
and
jmp
sub
aad
mov
mov
in
mov
cdq
jl
(bad)
pop
lods
push
call
loop
stc
call
dec
out
jmp
fiadd
loope
cdq
cmp
push
addr16
ins
mov
or
inc
std
adc
outs
xchg
adc
fs
or
lds
loope
jg
push
sub
push
and
in
xor
pop
add
lock
sbb
jmp
cmp
aam
lods
push
movs
daa
pop
loopne
xlat
lods
mov
inc
push
stos
popf
push
pop
pop
out
and
pop
in
out
adc
xchg
cmp
(bad)
rol
outs
and
pop
daa
sar
and
or
cmps
scas
pop
hlt
sub
outs
retf
fwait
cmps
stc
and
inc
or
add
inc
inc
mov
jns
in
fst
and
adc
shl
inc
test
add
dec
int
inc
sub
cwde
pop
xor
test
sbb
ss
mov
js
(bad)
and
movs
fs
jbe
mov
inc
outs
inc
add
mov
push
push
sub
jb
jmp
inc
dec
pop
mov
cmp
test
jg
xchg
sub
ret
mov
stc
aad
xchg
jne
int3
jns
xchg
mov
(bad)
cmc
inc
mov
aas
pop
sar
xor
iret
jnp
sbb
inc
jbe
rol
and
test
mov
ficomp
popf
cmp
fst
mov
jmp
inc
add
imul
mov
or
cld
push
fild
pop
push
sbb
sub
and
jnp
inc
test
adc
fmul
jmp
shr
xor
ret
rcl
pop
and
repz
cmp
int
stos
test
repz
xor
jno
adc
xor
mov
and
stos
and
add
fdiv
ins
dec
sbb
js
inc
mov
fisttp
dec
pop
mul
mov
mov
xor
add
and
scas
push
repz
clc
adc
mov
inc
(bad)
adc
inc
stos
dec
arpl
sub
pop
movs
gs
pushf
jg
cs
xor
or
inc
add
scas
jne
jno
lods
ficom
inc
clc
bound
cmp
mov
mov
inc
push
es
sbb
cmp
retf
push
dec
ss
iret
enter
sub
pop
leave
stc
cwde
outs
sub
addr16
or
jne
(bad)
movs
jb
aam
xchg
in
ret
leave
sbb
xor
sub
mov
repnz
push
jge
dec
push
nop
pop
jmp
or
movs
arpl
lds
xchg
or
dec
shl
sbb
leave
imul
hlt
popa
lea
enter
and
xchg
fwait
cli
imul
js
mov
imul
add
icebp
adc
push
mov
inc
ret
fbstp
mov
dec
adc
and
fst
enter
or
lds
call
mov
jp
sbb
call
push
cmps
mov
(bad)
mov
fld
dec
dec
mov
pop
xor
push
je
sti
sbb
rcl
mov
aaa
aas
mov
sub
out
repnz
int3
pop
mov
retf
aad
pop
addr16
loopne
js
lods
cdq
push
and
int3
and
lods
shl
mov
dec
addr16
inc
xor
pop
call
adc
xlat
outs
sar
jg
mov
pop
mov
adc
ror
adc
(bad)
sbb
xor
cmp
enter
or
push
push
pop
nop
nop
daa
pop
dec
fdiv
jmp
sub
imul
in
jp
push
sbb
mul
mov
mov
icebp
aam
sub
fcmove
mov
imul
cmp
or
pop
std
add
jno
jmp
mov
xchg
loop
push
int3
jmp
jmp
je
fsub
jo
dec
mov
mov
mov
or
aas
inc
leave
push
es
mov
adc
jmp
mov
jmp
test
jmp
jecxz
push
in
dec
arpl
xchg
adc
sbb
jns
imul
inc
scas
adc
in
movs
call
sub
cmp
(bad)
pop
sti
jecxz
sub
ins
out
call
fstp
sbb
loope
icebp
sbb
inc
adc
mov
sar
mov
dec
cmp
push
fsubr
dec
fwait
div
and
inc
cmc
xchg
cmc
inc
xchg
bound
jae
movs
data16
fnstsw
or
lahf
push
sub
pop
dec
das
or
test
aad
mov
cwde
sbb
inc
sub
daa
loop
push
cmp
sar
popa
add
xchg
cmps
mov
call
xchg
(bad)
outs
movs
sahf
mov
cmp
retf
add
jle
push
mov
lods
cmp
test
push
jge
inc
arpl
mov
add
lea
push
or
jmp
fldz
lods
lods
mov
pop
push
push
sbb
mov
pop
lahf
xlat
mov
mov
mov
xchg
push
pop
test
cmp
adc
jge
loopne
mov
shl
jl
cmovle
xchg
dec
(bad)
and
imul
mov
add
std
cmps
mov
shl
daa
inc
(bad)
push
call
sbb
inc
mov
aam
mov
pop
and
cmps
mov
test
daa
sti
pop
(bad)
in
mov
icebp
out
xor
hlt
fs
clc
jle
fs
jmp
mov
ret
outs
es
cli
jns
xlat
and
into
mov
sub
outs
call
mov
shl
xchg
cmp
out
lds
jmp
add
xchg
xor
pushf
sub
inc
arpl
sbb
cmp
int3
ins
cmc
out
jmp
dec
pop
push
ror
test
add
inc
clc
fdivr
stc
xlat
cmp
loopne
lahf
xchg
cmp
add
int
mov
lds
outs
sbb
ins
mov
dec
inc
mov
loopne
jne
clc
jl
xor
lods
push
add
jge
fild
sbb
push
(bad)
cwde
mov
inc
cli
add
les
gs
mov
cs
loope
jp
jns
sub
xchg
iret
ins
fadd
sub
pushf
out
repnz
xor
pop
add
mov
(bad)
icebp
add
hlt
(bad)
cmp
pop
dec
push
rcr
mov
int
or
loope
sub
icebp
fst
ret
dec
adc
adc
(bad)
push
xor
inc
push
stos
stc
lods
mov
jle
jmp
out
movs
xchg
les
stos
(bad)
sbb
push
or
pop
aas
repz
pop
(bad)
pop
add
iret
jo
shl
pop
sub
stos
xor
fld
pusha
jbe
rcr
mov
test
jo
jp
retf
mov
jge
jnp
xchg
add
add
movs
loope
lahf
(bad)
adc
xor
cmp
ds
jb
or
dec
and
fcom
push
or
xlat
in
cmp
fs
add
sub
je
sub
sub
jge
add
push
daa
shr
mov
mov
fcmovne
jmp
test
push
dec
pop
repz
loopne
cdq
adc
or
inc
jg
jge
scas
push
rcl
push
cmp
jae
jmp
int
add
les
sbb
add
out
lds
inc
mov
retf
sub
pop
daa
cdq
sti
fwait
sub
mov
or
scas
cmps
dec
test
pop
add
mov
hlt
(bad)
xchg
daa
xchg
xchg
dec
xor
mov
mov
fcomp
pop
pop
dec
ss
sub
in
ins
mov
dec
xor
outs
dec
jbe
ss
or
add
mov
imul
test
ds
lds
test
aas
sub
cmp
xchg
iret
fadd
or
mov
(bad)
pop
mov
je
ins
mov
fadd
sub
mov
jg
cs
iret
dec
(bad)
cld
stos
imul
test
xchg
loop
mov
xchg
and
and
aad
mov
cdq
shl
loopne
lods
(bad)
mov
les
and
jecxz
pusha
icebp
jno
cmp
call
xchg
dec
pop
dec
out
cli
out
fistp
and
std
test
gs
xchg
push
sub
mov
xlat
inc
movs
div
jge
ret
mov
dec
xor
mov
(bad)
std
inc
mov
jne
mov
pop
mov
shr
pop
pop
xchg
dec
add
cmps
add
mov
mov
jb
pop
fild
xchg
int3
xor
mov
out
jmp
push
inc
ret
pop
icebp
cmp
icebp
sub
test
jnp
adc
xor
ja
into
repnz
cli
gs
fisubr
push
ss
int
push
mov
lds
xor
(bad)
pop
retf
cmp
mov
out
scas
sbb
cmova
frstor
repz
enter
ret
clc
lock
add
es
xchg
(bad)
mov
sbb
mov
les
bound
mov
fisub
push
add
adc
jb
jns
ficom
in
and
sahf
ins
(bad)
and
or
cld
test
push
test
cmps
not
and
pop
xchg
and
xor
jecxz
dec
adc
xor
xor
xchg
and
ds
repnz
shl
ret
mov
cmps
xchg
js
jb
dec
pop
int3
add
mov
adc
ror
mov
mov
sub
jno
cwde
pusha
jb
xchg
(bad)
lods
repz
adc
cmp
or
xor
xchg
(bad)
fucomi
xchg
xor
daa
into
jmp
fwait
sbb
mov
enter
pop
test
sbb
hlt
sub
jae
sbb
fcmovb
inc
push
mov
arpl
adc
inc
push
movs
sbb
xchg
aam
mov
dec
aaa
sti
stos
adc
adc
sub
mov
fwait
mov
(bad)
jb
jns
xchg
or
add
mov
and
fcom
ja
test
hlt
xorps
push
jg
test
fdivr
enter
push
or
lea
dec
dec
fild
add
or
iret
fadd
adc
sub
clc
jnp
rcr
dec
shl
cmp
fmul
aad
(bad)
rol
push
push
mov
xor
je
jns
ins
nop
outs
or
push
cwde
inc
xor
repz
out
int3
(bad)
aas
sbb
jne
pop
mov
adc
mov
scas
mov
mov
jl
and
add
lods
pop
and
mov
fiadd
imul
mov
push
cmp
loop
push
inc
imul
sar
shl
js
ret
call
mul
inc
repnz
dec
push
or
js
aas
mov
jnp
je
mov
sub
cmp
push
xchg
(bad)
ss
and
sub
jae
fmulp
jle
sub
dec
or
imul
inc
add
fisttp
jne
mov
sub
inc
dec
sub
add
push
retf
lock
push
daa
dec
in
outs
mov
pusha
mov
jg
int3
lea
cwde
fld
jmp
fs
cmps
(bad)
xchg
(bad)
pop
and
mov
push
dec
sbb
in
inc
mov
jne
mov
std
lods
inc
lods
repz
cmp
xchg
daa
aad
retf
clc
std
mov
(bad)
jl
cmp
jl
jne
xlat
idiv
push
aas
mov
shr
retf
xor
adc
lea
adc
stos
ins
add
jmp
cmc
or
push
lods
dec
adc
cdq
aam
xchg
mov
mov
pop
sub
xor
mov
out
xor
mov
mov
sub
cmp
(bad)
jecxz
ins
xchg
xchg
jl
fwait
sbb
jmp
cmp
in
xchg
test
or
mov
loope
add
ins
sbb
jl
pop
xor
adc
jg
test
xchg
jmp
call
push
(bad)
out
xor
inc
test
xchg
(bad)
push
call
in
mov
scas
ins
jb
pop
xlat
jl
adc
dec
mov
pusha
(bad)
test
popf
jmp
and
jl
das
ja
mov
aad
scas
cmp
add
outs
mov
fcmovnb
xchg
pop
ins
jnp
pushf
sub
inc
xor
sar
jnp
lahf
pop
(bad)
mov
cmovb
mov
pop
or
mov
icebp
xchg
jg
mov
shl
mov
(bad)
push
out
pop
fwait
shr
push
mov
jae
jns
sbb
jo
pop
sbb
stos
scas
dec
scas
push
and
out
cmps
mov
jb
dec
out
or
xor
ja
and
jg
push
(bad)
lods
cmps
mov
fild
outs
cvttps2pi
adc
rol
jo
mov
(bad)
xchg
shr
mov
and
loop
fcomp
and
push
adc
push
dec
cmp
(bad)
(bad)
stos
sub
(bad)
xchg
jg
add
cmp
cmp
xor
repz
icebp
mov
nop
dec
or
xor
shr
lock
les
xor
in
push
je
add
cmc
ins
push
add
xor
fild
jge
aas
xchg
iret
stos
ret
pop
pop
pop
loopne
in
imul
cmp
jg
enter
pop
aaa
test
xchg
cs
xchg
mov
push
(bad)
fld
adc
pop
jno
js
xor
sub
jae
cmps
jb
fidiv
mov
cs
leave
push
sbb
push
ja
mov
lds
and
mov
and
xchg
enter
push
leave
jbe
xor
push
pop
test
dec
popa
sbb
mov
sub
jecxz
movs
add
jmp
sti
sub
push
jge
add
and
and
push
bound
mov
mov
shl
adc
pop
mov
and
dec
movs
mov
lahf
jmp
imul
mov
rol
daa
aam
sbb
or
mov
pop
ficomp
cmp
pop
ficomp
ja
into
xor
jecxz
cmps
mov
popf
and
stos
fiadd
mov
add
and
int
cs
imul
dec
ja
jl
repnz
dec
add
xor
std
jb
push
sbb
aaa
push
add
out
faddp
push
shr
and
aad
test
je
cdq
push
xchg
stos
lahf
xor
mov
and
test
in
ficom
adc
jns
in
fimul
ds
std
mov
retf
xchg
adc
sbb
aas
xchg
call
adc
cmc
push
int3
daa
mov
sbb
cmp
push
fldl2t
sbb
jge
test
jb
dec
jb
(bad)
enter
pop
ins
scas
jae
xchg
data16
stc
xor
dec
xchg
imul
xchg
retf
inc
jmp
gs
test
jmp
add
and
jnp
add
pop
xchg
jp
pand
das
gs
or
nop
aas
jo
inc
(bad)
mov
bound
ficom
nop
add
lahf
in
ret
sub
test
mov
and
lock
and
nop
cli
jecxz
fsubr
push
xor
fmul
pop
sub
pop
mov
cmp
sbb
arpl
sub
xchg
fist
rcl
aas
xlat
jnp
js
(bad)
push
sbb
dec
mov
add
jne
sar
hlt
or
hlt
sbb
inc
mov
push
adc
stos
sete
xchg
mov
popf
aaa
cdq
sub
out
mov
cmc
stos
push
adc
cmc
sub
inc
mov
jg
inc
dec
mov
fild
add
mov
es
xor
xor
(bad)
or
lock
adc
sub
out
inc
sub
push
sbb
(bad)
sar
leave
xchg
dec
jge
push
inc
in
cmp
push
and
cld
and
xlat
popf
dec
pushw
sbb
pop
fwait
gs
call
sub
arpl
stc
sbb
add
or
mov
clc
cmps
repnz
fnstenv
int
scas
xchg
inc
cmp
popa
ins
jno
jo
adc
aam
rol
ss
in
push
fistp
sbb
cmp
xor
outs
stc
in
out
fsub
mov
inc
ret
shr
ins
loopne
lods
or
pop
dec
dec
sbb
inc
jmp
cmp
push
addr16
ins
inc
inc
cmps
or
test
jo
sbb
call
pop
jge
pop
sub
psubsw
sub
inc
mov
push
test
lods
or
jno
pusha
xor
inc
mov
cmp
and
xchg
into
fcom
inc
push
push
fwait
xor
and
mov
or
(bad)
xor
inc
mov
push
into
test
rol
push
mov
sti
popf
and
(bad)
(bad)
fwait
cwde
int3
ja
test
test
and
xchg
outs
les
xchg
add
in
or
or
call
imul
pop
and
sub
jmp
inc
xchg
sub
shr
out
data16
clc
fisubr
or
les
jmp
neg
dec
pop
or
dec
test
leave
(bad)
fsub
lods
imul
ficom
shl
fld
adc
fistp
iret
cmp
dec
out
das
out
movs
in
inc
and
xchg
(bad)
pop
clc
push
sub
mov
jmp
sbb
fsub
adc
adc
push
cmp
sub
test
mov
jecxz
movs
test
test
mov
ds
cmc
sbb
aas
jo
sar
aam
repnz
adc
fdivp
sub
mov
xchg
pushf
cld
mov
loopne
xchg
(bad)
fisttp
retf
and
leave
out
mov
ja
pop
popa
stos
repnz
cmp
jmp
nop
neg
cmp
ror
push
(bad)
nop
icebp
lea
pop
cli
enterw
mov
(bad)
in
in
aad
sub
sbb
mov
dec
rcl
pop
test
(bad)
inc
xchg
lahf
mov
inc
in
mov
xor
or
fdivr
ficom
int
push
push
pop
mov
lahf
and
jmp
xchg
cs
dec
into
mov
fisttp
scas
xor
cmp
jbe
test
inc
pop
xor
mov
ficomp
popf
repz
xchg
scas
cli
xchg
fwait
sbb
in
jge
repnz
mov
mov
(bad)
cwde
push
xchg
push
retf
jo
pop
xor
mov
xor
jno
bnd
retf
test
daa
cli
xchg
push
mov
mov
mov
inc
clc
sub
or
outs
scas
aad
push
xor
in
and
imul
dec
pop
ds
call
or
out
mov
cmp
inc
fcompp
adc
push
mov
cli
pop
mov
in
shl
hlt
test
sub
dec
shl
fistp
mov
popf
push
xor
leave
scas
or
stos
jle
fst
push
mov
pushf
popa
jmp
push
call
mov
rcl
xchg
shl
xor
retf
popf
fwait
outs
xchg
sbb
and
push
pop
loope
inc
outs
sub
push
mov
(bad)
not
pop
jp
mov
and
ins
in
scas
call
stos
sub
loopne
pusha
ret
enter
jo
icebp
mov
mov
sub
add
sub
sbb
rcl
mov
daa
or
pushf
pop
outs
jg
push
cmp
pop
test
nop
mov
movs
(bad)
enter
stos
sbb
cmp
dec
push
mov
popf
push
inc
call
xchg
sar
test
dec
(bad)
movs
bound
stos
dec
adc
outs
shr
add
add
jecxz
test
jne
xchg
out
fwait
jo
aad
sbb
sbb
ins
xor
pop
addr16
xor
xchg
ins
fwait
inc
dec
or
fst
jge
popf
or
xor
ins
call
xchg
je
jb
stos
mov
push
aaa
(bad)
fmul
sub
cdq
mov
push
xlat
xor
mov
sbb
cmp
jne
lods
mov
ret
inc
xchg
in
add
pop
inc
pop
jno
adc
sbb
dec
or
and
jmp
dec
or
scas
and
shr
xor
sar
push
sub
pop
arpl
loop
rol
imul
adc
in
outs
imul
fcom
xor
jmp
pop
ins
mov
scas
popf
in
mov
mov
pop
pop
es
fisub
mov
sbb
int
push
and
into
mov
(bad)
outs
jo
data16
pop
or
sub
cmp
mov
test
call
xchg
pop
push
sar
retf
rol
cmps
mov
out
sti
mov
mov
mov
push
gs
mov
test
dec
mov
dec
rcl
sub
lahf
jae
movs
mov
sub
add
push
mov
pop
xchg
icebp
(bad)
pushf
repz
ficom
rol
sub
aas
fsub
add
mul
dec
jmp
pop
inc
(bad)
lea
call
inc
mov
push
test
ins
add
cmps
sahf
jp
xchg
ret
out
pop
push
mov
movs
and
push
bound
aas
adc
adc
fsub
and
add
xlat
pop
rcl
adc
icebp
out
or
push
mov
shl
in
scas
std
adc
pop
sub
and
jl
cld
scas
or
dec
push
ds
mov
sub
mov
cmp
mov
push
stc
inc
jg
clc
sar
or
ins
cmp
ffree
fdivr
xchg
aad
xchg
in
push
imul
aam
cmp
sbb
push
ss
or
fcmovu
aas
inc
mov
bound
loopne
add
pushf
fwait
mov
fbstp
fdivr
in
pop
mov
push
ret
inc
pop
mov
xchg
test
mov
dec
cmc
sahf
push
out
lods
les
imul
inc
sub
mov
ins
loope
and
scas
int3
pop
sbb
fbld
bound
test
sti
lds
or
mov
add
pop
xlat
fucomi
mov
push
or
cmps
rcr
repnz
lods
inc
jl
shr
das
nop
int
jge
shl
push
fild
imul
retf
call
not
add
sahf
shl
mov
sub
inc
imul
adc
inc
inc
jmp
pop
int3
adc
shr
add
or
fisttp
jne
xor
scas
push
pushf
pusha
add
aaa
std
(bad)
xchg
nop
inc
cmp
sbb
mov
popa
mov
push
mov
pop
mov
inc
retf
and
mov
mov
rol
data16
inc
ja
movntps
repz
push
das
enter
mov
push
stos
inc
cmp
pop
fist
fldcw
add
pop
fadd
mov
mov
pop
push
mov
push
adc
inc
shl
cld
xor
jle
std
jns
mov
mov
aas
cmc
fcompp
popf
retf
adc
shl
cdq
mov
mov
stos
and
ret
enter
(bad)
xchg
or
jb
(bad)
sub
push
xchg
push
clc
add
lsl
jbe
inc
sub
and
dec
test
push
push
(bad)
pop
add
movs
sti
inc
cmp
mov
sbb
fsubr
(bad)
leave
mov
(bad)
mov
cmp
mov
or
inc
sar
(bad)
jne
jns
cmp
mov
sahf
pop
adc
jb
or
or
aam
xchg
xor
retf
xor
into
cli
lods
xor
lahf
mov
(bad)
cli
lds
pop
pop
push
xor
mov
add
push
(bad)
into
iret
iret
mov
mov
dec
loopne
sahf
push
push
push
fadd
pop
push
jnp
and
shl
mov
leave
scas
es
mov
fist
sbb
cs
mov
cmp
xchg
aaa
movs
ret
in
inc
push
xchg
xchg
rol
mov
cmps
shr
sub
dec
(bad)
xor
daa
inc
fmul
es
push
aam
inc
or
add
pop
pushf
inc
std
fimul
push
mov
aad
and
stc
and
in
(bad)
(bad)
je
fidiv
test
add
inc
xlat
pop
jb
mov
xchg
xchg
push
add
rcl
test
ficomp
(bad)
(bad)
pop
add
out
xchg
bound
cmp
cmp
adc
sahf
jp
pop
mul
cmp
jns
stos
mov
pop
(bad)
or
inc
jno
inc
fld
js
lock
mov
arpl
pop
mov
fidiv
xchg
sub
nop
outs
inc
imul
mov
add
mov
cmp
les
ja
push
fadd
test
test
sub
out
add
or
(bad)
(bad)
mov
mov
jp
jmp
ret
shl
std
pop
shr
push
fld
ret
mov
mov
cld
jbe
and
ja
out
jge
retf
xchg
jne
jno
and
add
out
std
mov
pop
sub
retf
cmp
dec
pusha
and
not
xchg
dec
jne
test
sub
into
xchg
or
test
cdq
cli
mov
sbb
lea
or
cs
mov
cmp
fdivr
cmp
dec
xchg
or
loop
dec
pushf
repz
push
ret
mov
mov
dec
int3
xchg
scas
adc
pusha
loop
outs
mov
jge
jb
ficomp
pushf
xchg
mov
adc
jne
popf
and
mov
pop
call
clc
aam
(bad)
jne
adc
dec
imul
stc
jno
pop
xchg
scas
mov
std
jmp
cmc
mov
mov
(bad)
out
pop
mov
int3
and
dec
xchg
xchg
out
push
cmp
cli
cmps
shl
shl
mov
gs
adc
jle
cdq
sbb
xor
add
popf
fstp
js
xor
cld
push
mov
jmp
inc
mov
fdivr
push
rol
cmp
push
xchg
mov
pop
adc
out
cmp
xchg
push
pop
pop
xchg
fsub
retf
jo
adc
idiv
clc
test
enter
mov
inc
shl
jge
pop
inc
ret
cmp
mov
add
adc
and
sbb
adc
mov
or
or
mov
push
pop
and
add
and
out
ret
pop
ficomp
mov
or
sbb
ror
jge
mov
inc
xchg
push
test
jecxz
adc
pop
pop
femms
jge
repnz
mov
jge
loope
adc
stos
adc
jb
or
push
hlt
cmp
xlat
lods
shl
xlat
arpl
fwait
jnp
xor
push
cmps
(bad)
fs
fiadd
sub
jmp
movs
ins
dec
mov
fisub
es
(bad)
cmps
mov
dec
pop
adc
mov
adc
shl
add
dec
add
not
scas
ja
sahf
jne
sub
pop
(bad)
shr
adc
int3
mov
pop
and
push
ret
fidivr
sbb
and
xor
imul
inc
imul
mov
(bad)
imul
out
sar
fcmovu
pop
imul
cs
dec
mov
mov
mov
loopne
cmps
int
aas
(bad)
outs
(bad)
fwait
dec
pop
popf
fcom
movs
push
and
mov
mov
mov
jecxz
test
dec
cwde
in
jb
push
sub
push
inc
push
fidiv
add
adc
(bad)
daa
mov
add
inc
js
sbb
mov
hlt
mov
out
sub
cwde
fiadd
cmp
pop
out
or
mov
loop
pop
mov
or
out
lods
add
lock
(bad)
dec
hlt
(bad)
sti
aas
out
xor
adc
aas
cld
adc
jbe
pop
call
test
mov
outs
jnp
clc
mov
pusha
xchg
adc
out
test
xor
dec
xor
add
imul
pop
cmp
inc
xchg
or
inc
mov
int3
int3
scas
mov
pop
push
clc
sub
lds
push
jmp
stos
push
push
or
pop
enter
popa
mov
out
dec
addr16
repnz
(bad)
int3
rcr
int3
aaa
pushf
pop
inc
cmp
push
xchg
add
adc
xor
xor
fucomip
in
adc
pop
mov
lods
jmp
or
mov
imul
jle
or
mov
adc
push
ja
lock
out
rcr
cmp
push
pop
test
sahf
test
cmp
rcr
jb
xor
push
aam
icebp
ret
and
add
jae
sbb
cmp
pop
push
inc
(bad)
lea
or
mov
test
aas
or
fmul
in
jp
fisttp
(bad)
mov
fistp
mov
pop
mov
push
inc
pop
(bad)
cs
imul
and
inc
fidiv
ficom
or
adc
jb
push
add
pushf
mov
sub
add
addr16
sbb
or
and
mov
cmp
int3
inc
es
mov
outs
add
mov
leave
xchg
jl
pop
imul
out
push
push
sbb
out
adc
push
or
addr16
(bad)
shr
retf
xchg
push
test
sbb
aad
movs
popa
add
pop
sub
enter
push
mov
fistp
jb
jo
push
(bad)
lahf
ret
cmp
sbb
dec
ds
popa
shr
and
pop
and
fadd
sbb
in
call
dec
push
je
fadd
jo
stos
ss
stos
jmp
push
sahf
out
cmp
icebp
std
or
mov
push
or
dec
in
sti
bound
mov
inc
cmp
rcl
scas
sub
pop
xchg
pop
jmp
ja
call
cmp
shr
out
push
or
iret
out
hlt
push
inc
xchg
or
cwde
movs
push
mov
paddusb
outs
loopne
inc
in
clc
inc
or
aam
aad
inc
jmp
mov
and
adc
and
imul
mov
cmps
nop
fmul
fsub
retf
cdq
ret
stc
push
cs
pop
loope
push
cmp
les
(bad)
dec
push
jmp
fwait
pop
push
cdq
pop
pop
test
stos
test
xchg
and
xor
push
iret
ins
dec
push
jge
sti
loope
out
fld
imul
test
pop
push
repnz
mov
mov
call
stc
(bad)
loopne
call
inc
call
pushf
xchg
(bad)
aaa
mov
and
mov
nop
rcr
push
je
mov
or
fdiv
mov
repz
jmp
jg
aam
ja
scas
out
and
ja
shufps
mov
and
icebp
in
pop
std
stc
cld
hlt
mov
sbb
adc
bound
or
mov
pusha
(bad)
dec
jns
or
and
nop
xor
sbb
dec
jo
cmp
rcr
in
push
fmulp
cmp
xchg
dec
inc
dec
add
inc
push
or
rcr
rol
ret
sub
sub
retf
sbb
cmp
mov
pop
pop
(bad)
imul
mov
cmp
in
mov
sbb
lea
out
add
mov
mov
mov
shl
jno
xor
cmps
jecxz
xor
xchg
test
jne
or
ficom
mov
int3
bound
lods
out
shr
xor
sub
and
je
sbb
ins
retf
int
ins
pushf
or
repnz
adc
js
popf
repnz
shld
loopne
lahf
mov
test
fimul
(bad)
icebp
push
cmp
rep
fcomp
call
test
std
pop
jo
xchg
std
dec
pop
mov
repz
pop
mov
test
dec
aaa
sub
inc
pop
or
ret
data16
test
cmp
pop
and
and
retf
dec
dec
test
inc
mov
daa
mov
cli
push
mov
pop
call
rol
and
jbe
clc
add
cmp
jl
mov
gs
push
out
repnz
adc
xor
leave
adc
adc
adc
xor
fild
mov
gs
or
or
add
mov
mov
sahf
sbb
sbb
sub
ins
mov
fsubr
add
adc
into
mov
mov
out
push
lahf
add
in
ja
cmp
push
xor
sbb
cmc
xchg
cmp
xor
sbb
and
xor
jno
jae
imul
add
hlt
sub
push
neg
push
jbe
mov
neg
sub
(bad)
jge
pop
dec
dec
or
push
lods
pop
cs
outs
sub
pop
inc
test
pop
xor
adc
leave
(bad)
(bad)
jl
mov
js
sbb
cmp
fild
pop
jns
dec
(bad)
dec
and
fwait
cmp
movs
and
bound
and
cvtps2pd
push
push
cwde
add
cli
in
out
push
inc
or
rcl
(bad)
adc
pop
or
mov
jne
call
pop
cmc
dec
gs
fsubrp
rol
fild
lea
jp
aam
std
loopne
pop
mov
mov
sbb
xchg
leave
mov
mov
fucomip
stos
bound
daa
adc
fcmovnb
cdq
cmps
jno
xchg
dec
mov
ret
data16
leave
or
mov
dec
out
fisubr
jmp
inc
pop
add
cmp
pop
xrelease
pop
fsub
xor
push
mov
push
into
ds
pop
and
or
add
jae
mov
pushf
push
push
jecxz
cmp
push
aam
adc
iret
jmp
add
pushf
pop
aas
adc
mov
and
push
ror
sub
jb
push
mov
cmp
cmps
js
fcomip
inc
pop
jmp
fcmovb
and
cld
call
dec
in
leave
clc
dec
je
adc
sbb
push
out
cmp
push
pop
dec
adc
adc
out
add
(bad)
les
add
ja
mov
(bad)
dec
(bad)
(bad)
cwde
mov
dec
not
push
imul
mov
shl
sub
add
pop
mov
ror
out
(bad)
push
into
cmp
pop
int3
stc
and
rol
xor
fdiv
push
push
movs
loope
imul
aad
xchg
jne
xchg
sbb
outs
call
inc
clc
nop
mov
imul
jbe
jl
pop
das
push
fild
scas
dec
mov
pop
adc
rol
ins
mov
mov
mov
lock
mov
int
(bad)
mov
jmp
scas
inc
hlt
cmc
pop
dec
sbb
adc
pop
xchg
sub
xor
(bad)
stos
es
gs
push
retf
movs
sub
mov
pop
test
lock
mov
stos
push
test
dec
dec
mov
mov
fwait
out
test
jl
mov
outs
mov
aam
mov
(bad)
cld
stos
mov
pop
xchg
mov
mov
mov
jp
fstp
mov
loopne
ds
inc
cmps
sbb
(bad)
push
dec
sub
bound
lahf
sar
sub
push
xchg
inc
mov
sbb
rcr
(bad)
cmp
mov
inc
xor
int
sbb
in
adc
or
fbstp
xchg
jl
movs
cmp
stc
dec
jp
cmp
sub
sub
neg
sub
and
imul
xor
ins
pop
call
pop
out
jecxz
add
mov
add
inc
out
or
int
sub
xchg
cmc
cmp
and
shl
mov
sar
int
movs
call
jle
aad
int3
or
bound
cli
aaa
iret
in
jle
js
ins
in
dec
push
lds
cmc
pusha
push
fist
js
movs
push
imul
fidiv
(bad)
stos
in
or
nop
dec
pop
nop
cmp
jb
int3
ret
and
adc
mov
xor
int3
pop
inc
rcl
mov
and
out
lds
sub
pop
xchg
jno
aas
and
or
cs
dec
ret
mov
xor
cmp
out
in
loop
cmps
int3
sbb
pop
xchg
mov
xor
shl
xchg
cmp
js
int3
jg
in
mov
push
xor
jnp
cmc
push
push
pop
and
retf
mov
mov
mov
fldenv
cmp
fld
jbe
pop
daa
pop
out
jl
stc
adc
loop
cmp
daa
iret
push
push
mov
mov
or
shl
dec
or
cmp
push
psubq
xchg
addr16
push
sbb
in
push
lea
ret
pop
inc
xchg
adc
(bad)
jnp
mov
test
test
out
loope
movs
loop
pushf
push
mov
pop
cs
pop
pop
sub
not
arpl
push
sbb
pop
mov
xchg
ins
jmp
xchg
mov
or
mov
mov
(bad)
mov
aam
push
mov
mov
pusha
mov
addr16
std
xor
aaa
(bad)
push
pushf
dec
fbstp
dec
pop
(bad)
mov
addr16
test
pop
push
mov
fst
inc
fcmovbe
mov
jb
fistp
imul
sti
and
push
pcmpeqd
test
jb
adc
(bad)
rol
mov
ds
lods
out
cmp
pop
call
in
sar
sbb
adc
test
lods
jae
or
imul
stos
lock
stos
test
jb
je
in
outs
sbb
(bad)
cwde
xor
and
out
into
mov
outs
(bad)
iret
inc
lods
cmp
inc
and
test
adc
mov
(bad)
or
leave
enter
test
mov
das
push
pusha
cwde
scas
mov
stc
mov
shl
and
lds
adc
add
or
mov
sar
add
loop
sbb
pushf
xchg
jb
and
les
shl
ss
cmp
outs
push
ret
pop
shl
je
or
sbb
sub
jne
adc
cmc
lds
jne
mov
push
js
jns
xchg
call
fist
xchg
ficom
in
cmps
mov
test
retf
cmp
arpl
shl
xor
repz
add
jmp
in
add
je
leave
or
sub
mov
or
xchg
push
add
add
lock
sahf
pop
call
push
push
xchg
fld
je
vpunpckhqdq
sbb
div
in
jns
bound
div
or
sbb
fidiv
test
xchg
sbb
mov
outs
adc
fadd
xlat
into
add
lock
cli
rcr
inc
es
mov
dec
push
sub
xchg
rol
ins
jne
xchg
es
ss
xor
push
add
cld
cdq
cmp
fcomp
and
bound
das
aad
in
fld
push
out
popa
jp
xor
out
movs
in
inc
aam
sub
cmp
push
pop
jne
inc
shr
xor
and
sub
sbb
pop
(bad)
enter
jecxz
rcr
cmp
out
xlat
pop
push
fistp
sub
pop
mov
je
mov
sahf
inc
in
cwde
movs
arpl
and
jmp
xlat
inc
sub
xor
pop
push
inc
push
add
mov
sbb
aas
dec
mov
dec
push
mov
xchg
mov
adc
aas
out
pop
jp
dec
jns
repz
cwde
popf
mov
or
add
sub
test
and
cmp
dec
out
addr16
sub
sub
push
mov
aas
mov
pop
sti
neg
ss
sbb
iret
loope
push
adc
inc
add
ret
repz
xor
jne
xchg
xor
sub
rol
shr
xor
shl
imul
pop
jmp
mov
mov
repz
xchg
sub
or
(bad)
stc
and
popf
jno
fld
repz
imul
mov
jnp
pop
jmp
inc
ror
push
stos
inc
inc
cdq
ds
stos
mov
jmp
daa
imul
dec
add
or
xchg
push
test
nop
jae
loop
in
jae
call
xor
xor
lahf
mov
shr
push
jae
mov
int
into
sub
sar
mov
cmp
out
jecxz
or
into
jb
mov
dec
cmp
cmp
cdq
test
push
jae
xor
jb
push
inc
fdiv
ss
imul
push
ret
push
inc
push
inc
cmp
add
loope
shr
lds
pop
repz
aad
push
int
jge
jmp
out
pusha
sbb
inc
jg
and
repnz
(bad)
(bad)
cmp
bound
dec
(bad)
cmp
add
adc
cld
adc
loop
ror
pop
rcl
push
cmp
xor
leave
dec
add
in
jbe
jecxz
push
imul
push
shl
mov
call
call
ja
sub
call
push
jbe
loopne
test
mov
mov
pop
inc
push
out
imul
xchg
(bad)
mov
adc
jne
cmc
adc
fneni(8087
cmps
ins
adc
mov
push
jl
icebp
jecxz
leave
jp
sub
sub
shl
dec
xor
dec
and
ins
gs
ja
or
add
or
fwait
in
xchg
xchg
ins
test
pop
cmp
jmp
sbb
ds
jb
add
aam
add
mov
mov
pop
or
xchg
jnp
retf
pop
sub
popa
jle
inc
mov
mov
scas
fist
out
int3
es
xor
pop
push
mov
nop
sahf
push
aaa
aad
aam
fsub
dec
movs
movs
and
jno
push
inc
jns
mul
stos
std
add
jl
cli
fist
mov
into
in
and
cmc
out
ret
ss
mov
ins
dec
adc
cmp
xor
jg
nop
xchg
dec
or
test
stos
dec
stos
scas
pop
push
aas
std
or
pusha
xor
sahf
imul
int
jnp
pop
int
cmp
mov
xchg
cmp
ja
or
loopne
pop
push
push
aaa
jno
pop
push
mov
push
and
ret
inc
sbb
fdiv
jmp
adc
push
loopne
dec
add
fistp
mov
cwde
cmp
cmp
(bad)
test
ror
or
cmps
inc
sbb
xchg
cmp
daa
xor
out
sbb
jg
aas
jnp
adc
and
test
sbb
jmp
in
sub
sahf
retf
pushf
into
sti
shl
or
retf
lea
fs
xor
inc
mov
jno
not
ror
mov
mov
test
retf
sbb
sbb
pop
ja
push
sub
out
push
daa
inc
inc
xor
adc
xchg
or
in
pop
mov
mov
xchg
fidivr
ret
cmps
dec
nop
mov
or
not
sub
out
fidiv
cs
sti
mov
cmp
es
imul
outs
test
pop
or
cmp
lods
push
mov
dec
mov
or
test
outs
fstp
push
inc
jl
leave
push
mov
in
add
dec
xchg
cmp
fadd
dec
mov
adc
jl
lahf
pushf
push
pushf
aam
ins
jae
adc
in
and
in
dec
cmp
dec
(bad)
sbb
lahf
fbld
cdq
pop
nop
daa
pop
sub
push
mov
xor
cmp
pop
xor
(bad)
adc
cmp
addr16
icebp
dec
pop
mov
xchg
jmp
cld
into
lods
test
rcr
xchg
dec
push
sub
out
dec
cmp
xchg
aas
in
and
jl
inc
push
sbb
or
sub
retf
int3
repz
mov
and
mov
(bad)
out
cld
fs
out
dec
jge
push
mov
pushf
push
scas
(bad)
mov
sahf
das
pop
jmp
jne
and
in
mul
aam
push
or
stos
adc
lods
push
xor
and
call
cmp
xor
test
adc
in
cmp
ds
xlat
jno
rcl
adc
push
ret
mov
push
push
in
mov
test
push
cs
xchg
push
add
mov
enter
stos
jg
aas
(bad)
cmc
test
xchg
add
pop
retf
inc
out
pop
mov
fild
(bad)
imul
stos
loop
(bad)
jmp
dec
in
sub
add
mov
jb
pop
or
xchg
adc
repnz
cld
xchg
out
ss
out
popf
inc
push
hlt
pop
jmp
gs
clc
or
outs
sahf
popa
jmp
dec
js
or
sbb
mov
mov
inc
test
mov
lods
rol
xor
jnp
loope
adc
test
repnz
ret
test
adc
test
push
xor
xor
add
sub
test
lods
or
call
add
or
pop
fstp
sub
imul
and
js
jb
adc
pop
aam
xchg
mov
pop
mov
test
inc
pushf
and
dec
out
std
mov
push
push
addr16
and
in
adc
add
outs
or
xchg
(bad)
fild
push
and
adc
cwde
mov
dec
push
sbb
lds
cmp
sahf
aad
mov
sar
sub
sub
jle
inc
mov
stc
pop
pop
mov
inc
push
iret
sub
test
inc
in
pop
test
jmp
(bad)
out
inc
je
repnz
push
in
popf
clc
bound
pop
mov
es
inc
rcl
dec
or
outs
scas
sti
stos
xchg
into
fs
xchg
fisub
stc
adc
and
xchg
fst
mov
adc
(bad)
inc
dec
loope
xor
add
push
pop
outs
ss
std
jno
dec
(bad)
fcom
mov
push
adc
outs
mov
lock
jecxz
aas
test
and
cmps
cmps
push
sti
adc
push
mov
xor
outs
dec
or
(bad)
or
sub
enter
xchg
addr16
inc
popa
pop
fisttp
adc
mov
mov
ror
push
mov
add
sub
not
inc
jne
shl
mov
xlat
sub
xor
ja
sbb
fwait
aas
sar
popf
cmp
lods
mov
shl
hlt
or
paddd
les
push
sahf
js
mov
imul
stc
aam
jae
adc
daa
xlat
lds
repnz
ja
das
je
shl
add
(bad)
push
cmc
sbb
test
lock
cwde
(bad)
push
sub
ja
add
xchg
movs
cmps
ss
ret
hlt
mov
test
jg
push
mov
mov
pop
clc
or
and
call
data16
mov
xchg
dec
sbb
in
inc
push
lahf
bound
xor
jl
pop
sub
stos
inc
fisubr
push
add
int
pop
sar
push
ds
mov
daa
inc
loop
movs
mov
adc
or
scas
or
repz
imul
adc
cmp
out
sub
loopne
mov
pop
and
aam
mov
cld
sbb
shr
pop
mov
(bad)
cmp
dec
pop
dec
sub
mov
dec
pushf
retf
les
push
mov
or
jo
lock
in
into
cli
and
ror
push
adc
out
xchg
lds
mov
loope
aam
push
xor
or
dec
jg
dec
ins
in
xor
sbb
jae
jge
loopne
in
(bad)
mov
repnz
or
das
outs
push
pop
ss
push
ror
clc
mov
mov
xchg
push
jbe
adc
jmp
test
mov
fst
in
sbb
add
xchg
cmp
loopne
fbld
dec
loop
sbb
pusha
mov
cli
sahf
pop
dec
in
push
ror
mov
mov
(bad)
xor
test
ins
not
sub
mov
ins
xchg
xor
(bad)
cmc
mov
cmp
sbb
iret
test
cmp
sub
loope
call
ja
nop
scas
ds
xchg
add
mov
call
inc
mov
mov
xchg
xchg
scas
adc
out
mov
or
add
lods
retf
mov
xor
mov
in
neg
pusha
jl
pop
clc
outs
sbb
cmp
div
jne
cmp
fldcw
pop
sub
ss
dec
and
pop
or
aam
dec
dec
add
or
movs
imul
fdivr
lods
adc
lea
xadd
jmp
cmps
cmp
es
jmp
mov
sub
ret
in
pop
call
sbb
xlat
xor
jge
mov
(bad)
dec
jns
jge
add
mov
sub
nop
sbb
pop
mov
mov
fsubr
fst
das
rcl
or
in
ror
xlat
mov
pop
push
adc
(bad)
ins
clc
xchg
cs
mov
cdq
jo
dec
adc
les
fisubr
das
add
addr16
inc
inc
and
sbb
xor
jo
cdq
inc
ja
mov
push
dec
and
lahf
or
repz
push
aaa
int3
cmp
inc
cmp
aad
push
push
aaa
xor
ja
xor
shl
pop
call
sbb
jbe
mov
dec
pop
pop
rcl
out
ins
pop
inc
mov
rol
pop
adc
pop
jo
cmp
mov
xchg
pushw
push
div
imul
inc
arpl
lds
jnp
push
xchg
lock
pop
add
add
icebp
gs
and
lods
int3
arpl
iret
or
add
push
popa
fistp
(bad)
je
adc
cmp
push
sbb
idiv
push
nop
pop
cmps
les
ins
sub
fisub
cmps
mov
jns
sets
scas
imul
pop
lahf
ficomp
cmp
dec
jae
push
test
ret
pop
xor
inc
mov
cmp
retf
popw
movs
or
pop
mov
and
push
scas
jae
and
inc
pop
inc
inc
and
sub
scas
frstor
fisttp
stos
pop
mov
cmp
inc
and
lods
jle
cdq
lods
jns
cwde
xor
push
inc
or
in
mov
jno
mov
aam
adc
xchg
cmc
mov
add
push
sbb
je
ja
call
lods
and
adc
push
addr16
xor
hlt
push
inc
mov
daa
ds
push
pop
in
and
or
mov
mov
add
in
xchg
imul
mov
cmp
adc
int
pop
out
outs
ds
pusha
out
cmp
stos
jmp
(bad)
and
mov
stos
imul
es
push
stos
pop
clc
les
mov
fmul
dec
jecxz
call
jno
jecxz
xlat
(bad)
mov
sbb
lods
sub
popf
mov
cld
in
ficomp
jmp
imul
cmp
int
xor
and
(bad)
retf
test
rol
mov
sahf
xchg
push
lahf
cdq
push
push
or
lods
or
inc
adc
adc
int3
jmp
push
pop
retf
push
mov
mov
js
leave
inc
in
dec
test
loope
mov
inc
not
mov
out
lock
sub
cdq
movs
mov
sbb
imul
sti
lea
repz
lea
sub
cld
mov
jmp
sub
pinsrw
pop
sub
sbb
shl
test
imul
lahf
fcom
call
inc
and
jg
ror
mov
xchg
fidiv
lods
xchg
test
sbb
pop
je
(bad)
test
out
ins
sub
lock
scas
shr
mov
push
into
mov
and
popa
out
es
(bad)
in
pop
and
jne
adc
mov
inc
imul
mov
xchg
sbb
push
out
pop
sar
jne
mov
outs
cmp
call
fbld
fsub
stos
push
outs
lods
pop
sub
inc
or
add
dec
popa
sub
addr16
stos
leave
enter
cmp
mov
mov
outs
adc
add
fcompp
fwait
popa
add
fild
adc
sbb
xchg
lahf
adc
xchg
mov
and
jp
movs
in
ret
je
add
movs
neg
xchg
cmp
cmp
add
push
or
mov
jle
mov
add
jmp
cs
inc
sub
into
adc
sub
sbb
mov
js
and
sbb
sub
out
mov
and
popa
dec
or
pop
push
xchg
stos
iret
cld
cwde
(bad)
mov
mov
xor
jb
(bad)
xlat
retf
sahf
jo
(bad)
cwde
bound
es
add
test
mov
push
hlt
mov
cmps
ror
inc
out
xchg
cli
lock
fidiv
int
je
pop
int3
cmps
movs
(bad)
test
aas
test
ret
shr
into
jecxz
dec
call
pop
ja
fadd
and
shl
gs
sbb
xchg
int3
dec
mov
xchg
push
push
aam
pop
push
add
or
jl
jo
mov
jl
into
lods
pop
push
call
js
jno
movs
les
xchg
mov
aad
pop
(bad)
jne
bound
add
dec
jmp
or
mov
inc
and
sbb
or
xchg
js
fs
aas
and
adc
xchg
jae
frstor
and
sbb
inc
das
jp
dec
jle
mov
shl
xchg
(bad)
iret
(bad)
js
call
dec
shr
xor
lods
rcr
fsub
or
inc
retf
mov
or
outs
and
sbb
aam
fdiv
push
ret
and
ss
sbb
xor
push
add
mov
mov
aad
fiadd
jo
mov
cmps
int
and
mov
loope
mov
xor
out
cs
jb
dec
push
adc
scas
mov
xor
dec
adc
cmp
xchg
sub
push
shl
and
rcr
mov
mov
dec
cmp
cld
dec
xor
xor
jmp
fwait
fs
shl
push
push
sar
dec
es
fistp
xor
pop
lods
stc
dec
ss
lods
bound
xchg
sar
fisubr
lea
popf
push
add
scas
mov
mov
mov
daa
push
mov
fwait
adc
test
jmp
rol
dec
retf
lods
push
lds
xchg
shr
push
or
mov
cdq
sub
int
ficom
mov
ja
gs
sbb
mov
aas
shr
and
sbb
ins
xor
mov
jo
mov
jle
mov
clc
aaa
cmps
pop
ret
test
inc
pop
add
mov
sub
jne
push
jbe
push
cmp
jg
adc
frstor
xchg
xchg
inc
jmp
fsub
adc
push
lock
cli
fisub
cmps
and
(bad)
jmp
pop
outs
ins
pop
or
dec
jecxz
push
mov
push
xor
jnp
sbb
adc
jle
idiv
inc
sbb
out
test
js
xchg
adc
fbld
mov
cli
in
sub
cmc
or
add
dec
inc
inc
inc
push
mov
lods
stos
hlt
xchg
data16
ja
or
pushf
into
and
scas
mov
shr
aam
push
xor
test
mov
cmp
stos
inc
int3
jbe
and
mov
movs
test
sub
cmp
mov
inc
imul
bound
out
push
data16
loopne
movs
dec
add
inc
cli
jae
outs
mov
adc
sub
jo
and
cdq
out
stc
xor
daa
sub
and
ret
inc
mov
fwait
inc
push
jle
(bad)
fmul
add
daa
jg
shl
lea
cwde
push
inc
imul
dec
mov
in
push
push
jmp
mov
loop
xchg
and
loop
into
sub
scas
jecxz
mov
inc
mov
retf
(bad)
cli
cli
xchg
dec
outs
jge
mov
fsub
pop
icebp
inc
mov
cmp
xor
ss
enter
ret
inc
sbb
idiv
in
sti
ins
xor
push
sar
sbb
addr16
mov
sbb
fnsave
data16
in
mov
jbe
ja
sbb
ins
jmp
add
and
sbb
ja
or
mov
push
loope
jmp
inc
sbb
inc
loope
cmp
adc
retf
fisubr
test
mov
jo
jns
xchg
xchg
cmp
cld
ret
sar
cmps
dec
jecxz
imul
stc
sub
repz
ret
cmp
pop
test
les
sbb
dec
push
jl
popa
fisttp
fistp
jl
add
mov
fdiv
or
arpl
sub
out
and
xchg
mov
repnz
mov
xor
pushf
scas
das
push
adc
cmp
jo
xchg
mov
ret
ret
push
imul
js
pushf
mov
xor
(bad)
fmul
xor
jecxz
cld
sub
mov
(bad)
xor
fild
scas
in
push
icebp
repz
out
xchg
push
adc
mov
mov
fs
and
cli
inc
std
ret
data16
fcom
in
dec
outs
adc
mov
mov
sub
sbb
adc
fistp
inc
mov
test
popa
xchg
inc
push
loope
jmp
imul
cmp
into
add
jl
mov
mov
lds
xchg
test
pop
lock
cdq
pop
pop
js
sub
or
sub
cmp
test
cwde
stos
mov
and
mov
cmp
es
sbb
(bad)
out
fild
pop
dec
push
cmp
enter
inc
test
xchg
inc
and
pop
jno
mov
idiv
xor
xor
fst
inc
push
movs
(bad)
pop
shl
and
jle
pop
pusha
je
sub
pop
mov
je
inc
push
xor
dec
fisttp
(bad)
imul
ficom
cs
outs
out
push
or
imul
sub
int3
lea
loopne
mov
cs
test
sbb
xchg
cdq
push
mov
push
jp
xor
pop
hlt
xchg
inc
fdiv
jae
xchg
dec
sbb
call
enter
push
lahf
push
aad
lea
jo
or
xlat
or
fcomp
icebp
push
stos
jge
test
sub
ds
mov
ds
leave
mov
inc
sbb
push
mov
test
pop
in
test
lds
ja
iret
icebp
movs
fadd
outs
adc
leave
ds
loopne
mov
out
sbb
ins
inc
pop
repz
pop
out
mov
dec
jmp
sub
(bad)
js
jno
imul
add
mov
lea
xchg
inc
iret
dec
jnp
sub
arpl
loope
push
add
inc
sub
pop
add
jbe
push
jo
cld
pop
cmovge
fmulp
out
xchg
mov
jp
xlat
push
in
mov
mov
or
or
dec
add
mov
mov
mov
fsubr
jle
aam
daa
xor
pop
cwde
adc
aas
adc
add
std
and
ins
xor
pop
fsubrp
int3
mov
repnz
bound
jl
push
mov
pop
ret
lea
stos
ins
in
movs
inc
pop
sub
cld
fwait
mov
imul
sbb
or
cwde
sub
popa
push
cmc
inc
xchg
frstor
push
je
loopne
push
and
mov
fldcw
add
ror
sbb
ins
ror
ins
pop
aaa
stos
and
popf
sar
cwde
add
lods
test
lods
ins
mov
loope
neg
icebp
cmp
loop
ins
aas
fsub
pop
test
call
jecxz
mov
mov
arpl
xor
call
repnz
mov
sub
mov
retf
xlat
out
inc
sub
stos
loope
scas
cmp
inc
push
sub
jns
mov
daa
adc
lahf
stc
in
imul
cmp
imul
jne
test
xchg
shl
iret
push
jmp
mov
jp
aad
or
and
inc
add
xchg
xor
sub
into
out
jmp
jae
cdq
fcomp
xor
out
fisub
or
dec
mov
nop
xor
(bad)
iret
jb
mov
cmp
adc
add
pop
aam
or
jl
sbb
pop
ins
cwde
push
cwde
or
sbb
std
ret
mov
ffree
ins
lea
pop
jnp
(bad)
adc
or
aaa
mov
call
imul
mov
jg
jne
push
cmp
dec
mov
dec
sbb
into
adc
jl
fdivr
sub
or
arpl
cmp
adc
mov
pop
iret
stos
or
inc
push
mov
push
cld
mov
adc
loope
mov
test
out
xor
out
test
outs
pop
gs
loopne
lahf
mov
mov
mov
add
fsubr
pop
pop
add
xchg
test
dec
sbb
or
iret
cmp
mov
jge
mov
data16
dec
(bad)
in
into
ftst
mov
adc
dec
inc
nop
mov
mov
xchg
mov
ror
out
jbe
iret
das
push
inc
mov
cs
mov
(bad)
and
sbb
xor
and
sbb
cs
mov
(bad)
jae
lods
cmp
in
inc
and
mov
mov
jl
and
adc
repnz
push
mov
into
stos
jge
mov
test
cli
sub
xchg
dec
inc
rol
ds
adc
xlat
imul
in
aaa
push
xchg
push
adc
xlat
add
push
test
or
call
daa
enter
scas
dec
jg
addr16
rol
sub
jmp
dec
cmc
push
movd
lods
aad
das
mov
jmp
rcr
sub
in
pop
ins
mov
jg
cmps
jmp
in
hlt
lock
jne
mov
jle
(bad)
pop
mov
mov
call
dec
in
inc
dec
repnz
push
jnp
pop
call
addr16
(bad)
jl
(bad)
sub
mov
mov
in
jmp
js
movs
popa
inc
test
imul
call
mov
shl
inc
test
add
jo
push
pop
mov
test
add
cld
ins
inc
pop
gs
push
adc
xchg
lods
call
clc
dec
or
out
loope
ja
sub
push
add
loope
sub
aas
mov
stc
fldcw
sbb
push
add
jmp
in
xchg
das
mov
enter
(bad)
push
jae
out
jbe
aad
sbb
mov
dec
ret
out
and
aaa
push
lods
cmp
jno
fdivr
jl
ffree
or
(bad)
mov
pop
sbb
pop
jp
sbb
jecxz
xchg
or
test
sbb
adc
icebp
inc
rcr
inc
jmp
mov
xchg
rcr
aam
pop
sub
fdiv
out
les
mov
pop
outs
add
sbb
or
out
sbb
(bad)
js
push
(bad)
fnstcw
outs
add
pop
mov
mov
ret
je
push
or
cmp
fs
idiv
or
push
mov
jmp
std
jae
iret
dec
and
(bad)
out
adc
(bad)
fneni(8087
(bad)
aam
aad
sbb
push
mov
sub
xchg
int3
lock
cmp
out
rcr
xchg
mov
and
lods
pop
cmp
fcomp
popf
mov
cmps
(bad)
pop
mov
ret
pop
jne
pop
add
int
cdq
ret
mov
mov
enter
jp
push
clc
mov
jmp
sbb
test
and
(bad)
cwde
pop
arpl
pop
popa
test
sub
mov
or
sub
stos
and
js
mov
xchg
data16
aad
or
or
jp
cdq
sbb
movs
out
je
ss
dec
cmp
fcom
out
dec
mov
lock
test
mov
lods
stos
push
push
cmp
das
mov
call
addr16
call
fidivr
or
cmc
cmp
jmp
stos
xor
outs
out
sar
add
aad
movs
xor
add
mov
outs
enter
jmp
sahf
cli
jl
cmp
aaa
xchg
mov
push
push
mov
xor
xor
cwde
sbb
mov
and
mov
xchg
add
xor
repnz
daa
stc
data16
cmp
(bad)
hlt
cmp
jg
adc
fiadd
add
or
ins
dec
push
inc
fbld
jo
shr
rol
and
test
cmp
xor
adc
stos
xor
cmp
jmp
ret
clc
sub
aam
mov
jl
fucomip
add
dec
scas
mov
push
and
mov
cmp
jp
scas
rcl
inc
enter
mov
and
daa
xor
push
or
or
push
repnz
lahf
and
lods
daa
in
dec
aas
out
mov
fnstsw
inc
xchg
out
push
xchg
and
xchg
dec
(bad)
dec
pop
inc
ins
xchg
mov
jns
mov
push
inc
xchg
(bad)
pop
xor
movs
sbb
test
adc
mov
xor
jb
cli
stos
sahf
es
lods
pop
int
sub
imul
div
enter
add
mov
fwait
les
cmp
bound
pop
and
inc
(bad)
fisttp
pop
jle
xor
pop
daa
xchg
bound
stc
push
retf
inc
pop
mov
add
and
jmp
sbb
repz
inc
ret
das
xchg
stos
add
inc
pop
and
cmps
push
scas
loopne
icebp
or
cmps
inc
fcomp
js
dec
fsub
loop
mov
adc
pop
jb
mov
inc
cld
rcr
jb
push
mov
retf
inc
cmp
int
ds
xor
xchg
xchg
enter
fldenv
jo
in
test
outs
lods
repnz
add
mov
or
add
mov
jnp
jo
jbe
fdiv
jecxz
dec
and
scas
mov
ja
xchg
in
test
mov
and
enter
sbb
or
mov
mov
mov
dec
sub
ds
add
jmp
rcr
xor
je
push
add
xchg
jecxz
(bad)
bound
cmc
pop
fmul
jmp
push
or
push
push
and
bndstx
jne
std
and
add
imul
cdq
push
ffreep
sbb
fwait
jmp
ins
aad
dec
es
bound
mov
jle
mov
xchg
add
mov
retf
retf
xor
xchg
mov
mov
ins
scas
pop
call
fcom
jmp
into
sahf
or
xchg
das
mov
fsub
ins
or
int
mov
in
test
not
shl
and
lahf
add
push
icebp
gs
les
pushf
inc
cmps
mov
loope
aam
mov
mov
push
(bad)
cld
je
xchg
push
mov
fs
(bad)
jl
mov
cmp
mov
ins
mov
cmc
int
jmp
mov
das
adc
mov
push
cmp
pop
into
inc
mov
sbb
jns
or
int
imul
push
push
dec
arpl
xchg
popa
aam
fld
pop
das
and
sbb
repz
push
loopne
jae
aaa
mov
jecxz
sub
and
mov
loop
inc
mov
std
xchg
xor
xchg
js
pop
mov
in
jno
ja
bound
lds
fdiv
mov
mov
pop
bound
jns
inc
inc
mov
or
in
ss
mov
inc
ja
mov
and
dec
repz
fdiv
mov
mov
mov
and
mov
out
xchg
call
in
scas
xor
pop
mov
test
retf
pushf
inc
lea
push
fmul
xchg
fidivr
xor
mov
xchg
pusha
sub
or
popf
neg
inc
fst
ds
(bad)
out
ja
mov
sub
sub
or
repnz
jmp
int3
or
ins
cmp
in
out
test
out
(bad)
mov
sbb
or
xchg
sub
scas
jo
xor
push
sbb
(bad)
lahf
out
retf
dec
into
stos
pushf
mov
retf
aas
cmp
cwde
fisttp
ret
pop
in
imul
mov
aam
sti
pop
jecxz
sub
test
jnp
pop
xchg
mov
sub
mov
neg
pop
ins
mov
sub
out
push
xor
(bad)
xchg
pop
dec
jl
movs
cmp
jge
ins
sub
sahf
hlt
hlt
into
fist
jno
push
sub
fsub
xor
xchg
and
or
jbe
mov
pop
scas
sub
retf
push
xor
jo
outs
lods
das
popf
inc
adc
push
dec
xchg
pop
(bad)
(bad)
aam
imul
push
push
add
dec
dec
(bad)
fdivrp
fcom
push
aad
retf
fsub
cmp
or
or
sub
sub
js
cwde
movs
cmp
scas
push
cwde
(bad)
outs
movs
lock
lock
inc
xor
int
(bad)
retf
mov
outs
xchg
or
jne
mov
stos
stc
lods
mov
add
push
add
mov
fist
sbb
clc
or
(bad)
retf
loop
(bad)
sbb
dec
jle
pushf
pusha
jmp
xchg
sub
inc
sbb
ins
ror
sub
mov
mov
cmp
mov
xlat
ds
stc
adc
jg
movs
loope
nop
add
mov
lods
xor
std
jns
mov
mov
sbb
jne
out
mov
int3
icebp
test
nop
mov
test
fnsave
or
sbb
ins
test
adc
std
sti
movs
mov
sub
adc
fwait
lods
adc
or
xchg
movs
ret
cmp
and
or
pushf
jl
loopne
test
inc
xchg
aam
push
in
sub
xchg
jle
ds
in
dec
sub
test
or
sbb
test
test
mul
dec
stos
fcomip
mov
xchg
push
in
mov
pop
or
scas
js
xlat
mov
fisttp
cwde
call
cmp
test
(bad)
aam
xchg
call
jg
and
loop
pop
fidivr
xor
in
aam
rcl
data16
adc
mov
mov
sub
mov
mov
push
dec
mov
daa
test
test
int3
push
rcl
cmp
mov
push
pushf
jecxz
push
sub
sub
mov
arpl
jle
sahf
cmp
out
ds
fwait
outs
ss
mov
lea
jno
xchg
mov
mov
test
or
les
mov
int3
jmp
inc
dec
pop
add
je
es
mov
jb
cmp
ss
cmp
xchg
xchg
jae
(bad)
push
js
dec
push
shl
(bad)
fcmove
in
ret
jl
mov
mov
cmps
aad
and
xor
pop
sbb
adc
cdq
fiadd
jnp
cwde
hlt
jno
push
sahf
in
sub
sub
scas
lock
and
pop
retf
fistp
jle
ret
rcl
cdq
or
and
mov
inc
out
(bad)
cmp
(bad)
loope
pop
(bad)
not
test
and
in
out
out
xchg
add
sbb
(bad)
(bad)
neg
lods
push
adc
dec
mov
imul
xor
cmp
std
inc
into
test
cmp
and
inc
dec
shr
aaa
sbb
and
out
cwde
push
and
or
loop
mov
sbb
inc
mov
cmp
ret
cmp
pop
jae
(bad)
jge
adc
pop
orps
mov
aam
pop
movs
push
jmp
push
cmp
mov
aas
fwait
jbe
jg
leave
sar
xor
adc
out
fwait
adc
add
jmp
call
into
stos
adc
loopne
(bad)
iret
imul
iret
mov
xchg
fwait
mov
pop
pop
push
aam
test
adc
sub
imul
aam
adc
and
out
in
add
sub
(bad)
icebp
cmps
mov
fnstenv
sbb
dec
jbe
ret
hlt
sar
fs
dec
or
inc
sub
rcl
(bad)
aas
sbb
sub
in
addr16
dec
push
jge
xor
bound
mov
icebp
and
retf
add
int
es
iret
jp
and
fisubr
imul
popf
ss
bound
push
out
jbe
cmc
inc
imul
es
xor
mov
jb
jl
or
lea
sahf
dec
pop
mov
cmp
movs
jg
(bad)
cli
outs
int
es
mov
or
jb
cld
xchg
ja
push
or
sbb
push
fs
mov
ss
mul
adc
inc
test
enter
add
jle
ficomp
jle
test
mov
movs
add
adc
fmulp
adc
js
add
in
mov
xor
inc
shr
shr
mov
out
mov
add
js
or
or
popa
outs
scas
push
outs
out
cmc
jmp
push
inc
dec
mov
fs
and
pushw
mov
cld
mov
fwait
aas
ins
jmp
rcl
xchg
shl
push
adc
cmp
test
mov
mov
fs
ret
sub
sahf
aam
push
in
ins
pop
(bad)
fld
mov
sbb
js
adc
jmp
mov
mov
mov
add
jbe
inc
gs
dec
nop
jbe
xchg
stos
test
call
add
jmp
inc
adc
jmp
adc
shr
pop
push
outs
hlt
xchg
or
scas
shl
or
jecxz
lahf
jg
int3
test
ja
daa
fmul
pop
jl
nop
adc
shl
test
dec
dec
xchg
adc
dec
imul
pusha
adc
add
shr
test
and
test
and
cdq
fs
cmc
dec
dec
sbb
sbb
(bad)
neg
xchg
and
and
lahf
clc
pop
jbe
ja
sbb
xchg
cmps
std
cmps
mov
out
push
mov
loop
rol
int
clc
add
sub
je
mov
inc
inc
hlt
xchg
leave
fcom
retf
adc
adc
jnp
mov
sbb
push
adc
wbinvd
xchg
mov
imul
dec
pop
dec
jmp
in
scas
rcr
or
pop
jmp
lahf
cld
pop
pop
je
ror
out
xchg
sub
inc
das
add
cmp
adc
jecxz
ja
and
push
push
jnp
inc
test
or
mov
xchg
pop
sar
push
mov
cmps
push
neg
cwde
iret
imul
mov
dec
mov
aad
adc
popa
sbb
cmp
or
dec
outs
aaa
test
jo
xor
nop
mov
jmp
cli
adc
in
mov
mov
jl
retf
fst
inc
cmps
popa
out
js
cmp
dec
std
gs
aaa
push
pop
shr
sar
retf
cli
retf
outs
xor
cwde
cs
sbb
test
cmp
add
sti
cli
xchg
mov
sub
ins
pop
dec
daa
inc
clc
cmp
cwde
jmpw
cld
mov
cmps
cmc
in
xor
sbb
mov
movs
mov
push
stos
call
js
(bad)
dec
ins
loop
jg
mov
fst
sub
imul
mov
in
and
pop
adc
ins
add
cmp
mov
adc
sub
fcmovnb
bnd
cwde
add
and
(bad)
rcl
jno
loop
lea
fstp
dec
jmp
mov
aad
fdivrp
pop
gs
jg
pop
sbb
imul
lea
std
xchg
fwait
and
movs
bound
xchg
movs
pop
and
pop
mov
add
jbe
mov
lock
pop
sub
idiv
(bad)
aam
mov
rcr
sub
enter
dec
push
mov
popf
push
cmc
loope
xor
ds
pusha
es
sub
pop
nop
int3
jecxz
cwde
mov
daa
push
int
jno
jno
stos
and
adc
nop
ret
popf
mov
jae
hlt
xchg
pop
inc
xor
push
jns
jg
jo
inc
sub
dec
ja
ret
out
add
cmp
dec
gs
pop
retf
or
test
test
push
std
mov
mov
xchg
out
stc
add
mov
mov
xchg
jo
enter
xlat
sub
inc
shr
outs
jmp
les
inc
cld
lds
sahf
add
xchg
push
js
add
cmc
(bad)
dec
fdiv
(bad)
lds
cmp
into
out
js
push
mov
sbb
outs
fdiv
inc
mov
dec
movs
imul
cmc
push
ret
sti
and
cdq
xchg
out
cwde
dec
iret
sub
xor
rcr
(bad)
pop
loop
aad
jbe
mov
mov
in
cs
test
push
fs
cdq
jns
sbb
mov
adc
jp
sbb
inc
stc
mov
cmps
pop
inc
sbb
out
test
iret
iret
adc
je
test
pop
sbb
jo
xor
xor
rol
push
jmp
out
sbb
push
mov
bound
mov
inc
inc
and
mov
scas
xor
add
ret
int
jge
inc
dec
ins
xchg
cmp
push
add
mov
inc
pushf
mov
js
and
push
pop
sub
dec
into
inc
dec
adc
push
cli
loope
test
dec
push
add
adc
inc
popf
loopne
dec
xor
inc
enter
(bad)
xchg
add
push
mov
pop
in
mov
push
enter
sub
scas
mov
mov
loope
cmp
jmp
mov
and
jns
sbb
(bad)
ret
std
sbb
and
mov
stos
cmps
mov
jg
(bad)
push
data16
fs
xor
push
jmp
jb
jecxz
xlat
cmp
rol
fcom
lea
sub
push
cmc
fdivr
ja
clc
cld
into
arpl
inc
jnp
adc
mov
inc
xchg
dec
movs
push
arpl
pop
popf
int3
mov
inc
xor
xchg
lea
add
pop
stc
addr16
add
mov
scas
ret
sbb
lock
and
sub
inc
push
test
or
jg
movs
fisttp
ss
lds
or
test
lock
leave
das
add
mov
js
pop
test
sbb
fdiv
jle
test
not
fsin
mov
std
ror
mov
hlt
and
into
or
sbb
cmp
adc
paddsw
scas
out
and
shr
lahf
mov
nop
repnz
jo
sub
fisub
inc
mov
add
jmp
mov
xlat
scas
ficomp
and
push
std
data16
dec
jbe
movs
inc
jmp
arpl
inc
and
scas
lods
lahf
adc
mov
scas
(bad)
in
cdq
add
mov
ja
pop
mov
les
pop
inc
or
mov
mov
push
pop
pop
pop
lea
sbb
adc
mov
sub
ds
xor
and
call
(bad)
scas
pop
push
adc
cmp
cmc
xchg
mov
cmps
jecxz
sbb
mov
mov
sbb
lods
(bad)
fild
inc
xchg
cmp
mov
in
xchg
xchg
pop
sub
jmp
fidiv
mov
rcr
pop
movs
loope
mov
and
(bad)
sar
ins
loope
rcl
test
les
enter
retf
(bad)
pop
les
out
jmp
adc
xchg
mov
stos
arpl
fiadd
mov
xlat
loop
imul
mov
cmp
sub
in
cmp
out
test
sub
imul
cmps
mov
aad
call
test
or
cmp
stos
loopne
into
movs
imul
inc
mov
cmps
or
loop
(bad)
and
dec
pop
add
in
mov
xchg
int
xor
(bad)
ss
dec
cmp
out
call
loop
js
and
add
and
aaa
or
mov
addr16
arpl
sub
int
jp
out
pop
repz
test
cmps
add
(bad)
cmp
and
pop
or
jmp
div
cmp
ja
pop
xchg
cwde
ins
ins
ror
xor
mov
xchg
pop
or
scas
mov
jae
and
add
jnp
lds
or
or
lds
lods
sub
lock
leave
or
(bad)
or
lods
repz
loop
mov
lds
lods
sub
ds
lock
mov
xchg
inc
mov
jae
iret
add
mov
add
sti
das
out
bound
xchg
test
outs
add
and
and
int
call
mov
mov
lds
xlat
loope
loopne
jle
add
or
inc
dec
ins
outs
scas
add
(bad)
and
ret
dec
rcr
inc
xor
retf
jge
cmp
pop
les
lods
mov
xchg
int
push
sub
fisubr
sbb
mov
repnz
push
pushf
imul
xor
add
jecxz
loop
jno
rol
(bad)
mov
ret
je
sub
out
xchg
lahf
jle
push
sar
push
test
nop
jl
(bad)
fdiv
loopne
inc
fldcw
xor
cmp
jmp
in
fistp
lods
mov
xchg
imul
or
jg
mov
out
ins
int3
pop
and
xor
stc
and
rcl
mov
retf
shr
mov
les
out
adc
pop
cmps
enter
pushf
dec
into
pop
pushf
mov
addr16
cmc
int3
arpl
les
add
mov
adc
clc
inc
inc
adc
adc
xor
imul
xor
xlat
cmp
jmp
out
lea
xchg
sub
mov
leave
repz
xchg
popa
jo
movs
sbb
jnp
inc
jnp
sti
out
and
add
lods
inc
pop
sbb
add
pop
xchg
adc
xchg
int3
inc
and
fmul
sub
stos
cld
retf
ret
repz
les
out
add
mov
cmp
inc
dec
jo
pushf
and
call
push
sub
cmp
mov
xchg
dec
cwde
pop
pop
out
mov
jp
les
or
imul
xchg
ja
cwde
aas
jmp
adc
jbe
ds
lods
cmp
ins
mov
aaa
stos
push
cmp
push
mov
push
sbb
je
imul
lahf
jmp
sbb
inc
adc
shl
ja
and
pop
adc
dec
hlt
loop
xchg
js
jbe
out
in
fild
dec
and
jbe
dec
mov
pop
push
dec
sub
pop
jecxz
arpl
retf
push
addr16
ficomp
lods
mov
retf
(bad)
mov
dec
out
inc
jmp
sub
add
and
fcmovne
test
mov
aad
pushw
shl
mov
sub
popa
inc
mov
fsubr
xchg
mov
cwde
add
nop
inc
pop
xchg
pop
xor
popa
rol
xor
movs
lock
(bad)
lea
test
pop
adc
cmp
ficom
movs
out
xor
sbb
(bad)
ret
sar
or
test
iret
neg
in
hlt
cdq
push
jle
dec
mov
pop
rcl
cwde
ds
cmps
pop
movs
jmp
out
imul
add
shl
sub
enter
adc
fld
cli
inc
in
ss
in
cmp
xchg
int3
and
imul
icebp
mov
sbb
repnz
ds
xor
sbb
mov
sub
pop
jecxz
jns
push
sbb
inc
hlt
add
xor
jmp
or
inc
dec
enter
test
pop
fdivr
enter
iret
dec
mov
(bad)
and
push
rcr
mov
dec
scas
mov
movs
add
scas
mov
dec
and
jge
or
xor
mov
cwde
or
imul
adc
out
cli
jge
retf
dec
out
(bad)
jnp
pop
sbb
sbb
stos
ret
pusha
jecxz
xor
in
push
mov
hlt
cmp
sbb
retf
(bad)
stos
inc
(bad)
fstp
add
ins
xor
mov
aam
adc
mov
fcomi
mov
in
xchg
js
jo
std
movs
sbb
sahf
push
xchg
(bad)
inc
xchg
rol
outs
push
inc
outs
jae
inc
cmps
(bad)
or
in
pop
cmps
in
jg
mov
pushf
sti
loop
retf
hlt
mov
(bad)
cmp
mov
ins
sbb
xor
mov
push
xchg
lahf
std
mov
outs
and
retf
lods
in
shl
outs
aaa
gs
int3
shl
ins
push
mov
push
mov
xor
std
jbe
aaa
movs
loopne
and
mov
repz
dec
push
nop
dec
and
sbb
cmp
mov
cmp
sar
pop
and
scas
mov
and
stc
cmc
cs
(bad)
cmc
xchg
inc
outs
pop
jae
push
gs
xor
ret
mov
pop
sub
out
add
jnp
pop
mov
call
sbb
bound
sbb
dec
rol
cmps
bound
out
mov
rcl
ds
bnd
je
mov
aad
in
inc
into
sub
(bad)
fmul
pusha
movs
rcr
and
loop
xchg
fsub
add
popa
push
dec
hlt
call
int
push
rcl
fistp
push
jo
jge
pop
popa
xchg
inc
add
xor
mov
leave
loopne
ins
int3
das
fild
(bad)
frstor
scas
test
pop
push
or
sub
adc
mov
out
xor
mov
std
mov
(bad)
nop
fwait
pop
push
inc
ds
cmc
or
xchg
mov
out
sbb
jle
in
and
dec
xchg
stc
pop
fbstp
(bad)
in
push
jmp
xor
loopne
inc
xor
push
mov
retf
es
jmp
bound
or
cli
or
adc
adc
aaa
sti
test
mov
xor
push
enter
sbb
loopne
sbb
dec
or
push
add
inc
pop
cli
into
xor
in
shr
test
sub
imul
jle
pop
test
sub
cmp
test
or
test
test
out
ja
imul
xor
movs
out
adc
or
adc
adc
cmps
mov
pop
push
sahf
(bad)
test
adc
mov
into
inc
jmp
sbb
out
imul
movs
or
inc
and
loopne
xchg
jl
xchg
sbb
sub
push
mov
sub
pop
or
xchg
xor
inc
push
cmps
stos
xchg
mov
out
fdiv
add
push
cmp
(bad)
(bad)
sahf
jnp
push
setg
pop
sub
jge
xlat
clc
mov
cli
inc
hlt
sbb
sti
inc
in
inc
and
cmp
inc
and
sar
and
add
xchg
movs
cmps
dec
push
mov
loop
mov
out
dec
add
loope
andnps
pop
push
jb
mov
scas
inc
int
fbld
in
mov
sub
enter
fisubr
mov
fistp
push
mov
mov
pop
lock
pusha
mul
adc
sar
leave
inc
xchg
fstp
mov
xor
add
icebp
pop
mov
shl
addr16
fwait
jecxz
aam
push
cs
cld
repz
dec
mov
xor
cdq
pop
fisubr
not
fsub
sub
lea
idiv
add
pop
xor
shr
test
sbb
lock
sar
mov
jbe
jae
clc
push
push
or
sti
aad
pop
xchg
jp
mov
sbb
(bad)
int3
inc
inc
inc
xchg
and
xchg
and
mov
in
fnstenv
rol
push
dec
loop
loopne
dec
adc
into
mov
adc
dec
ins
leave
outs
fwait
sti
and
pop
fdivr
xor
imul
mov
retf
mov
sub
(bad)
cmp
jmp
mov
mov
dec
call
jb
in
jge
fdivr
loopne
cli
mov
popf
mov
cmp
pxor
mov
(bad)
fwait
mov
sub
ja
pop
lock
sahf
fiadd
ss
jbe
rcr
(bad)
leave
fs
dec
sub
mov
jle
dec
sub
push
push
add
lds
je
stos
icebp
xor
fldcw
pop
cmp
movs
add
jne
xor
pop
jle
dec
leave
stos
inc
stos
in
imul
jmp
data16
ins
call
ins
sbb
xchg
hlt
inc
cmp
enter
cmps
xor
and
inc
fs
mov
(bad)
mov
jl
std
adc
push
jb
cmc
mov
add
loope
push
lock
jo
sbb
stos
and
add
(bad)
xchg
jae
(bad)
or
cld
daa
xor
jno
jecxz
int
es
fwait
nop
adc
push
or
inc
outs
sbb
jecxz
pop
pop
arpl
pushf
mov
cmp
add
cld
add
fidiv
xchg
dec
out
mov
call
dec
out
cdq
repz
add
inc
jmp
fnstenv
inc
ja
scas
cmc
ins
mov
xor
jne
dec
dec
sub
adc
sbb
add
xchg
fs
or
mov
mov
fldenv
push
nop
xchg
adc
pop
adc
lock
inc
adc
or
push
adc
jecxz
sbb
lds
xchg
pusha
xchg
inc
fidiv
xchg
das
in
mov
jb
adc
movs
icebp
jmp
stc
jl
test
test
ret
jbe
fbstp
in
and
jmp
jp
jecxz
add
sahf
inc
ins
ret
jno
mov
cmp
adc
jo
stc
sbb
push
nop
jmp
je
movs
cli
xlat
xor
(bad)
xor
lods
dec
idiv
out
sbb
mov
pusha
sbb
js
shl
sub
cwde
mov
into
aam
mov
sub
dec
ret
dec
icebp
fcmovne
(bad)
pushf
(bad)
sub
jge
mov
sahf
fisttp
mov
iret
into
pop
xor
fsub
xlat
popa
pop
or
loope
test
mov
xchg
data16
out
cmps
repz
sbb
add
cmp
loop
sbb
mov
and
loop
aaa
mov
jmp
out
or
dec
ss
jmp
adc
sbb
and
mov
push
adc
jnp
pop
xchg
or
sub
pop
add
fistp
lahf
dec
pop
dec
daa
xor
add
xor
mov
adc
sar
and
outs
not
pop
and
inc
sbb
fistp
dec
in
movs
or
add
mov
inc
inc
mul
xchg
mov
xor
dec
ins
jo
xlat
mov
sbb
pop
lods
adc
ins
out
mov
out
loop
ins
sar
inc
inc
aas
jnp
adc
fld
scas
(bad)
and
jns
xor
fsubr
jecxz
jecxz
daa
popf
lods
jae
scas
js
cwde
into
je
adc
fnstsw
(bad)
cmp
je
call
adc
cdq
repnz
or
aad
jge
push
fwait
test
movs
mov
sub
pop
inc
mov
mov
pushf
jle
adc
xchg
pop
push
das
push
jge
movzx
fiadd
(bad)
ins
(bad)
xor
jecxz
mov
add
and
adc
push
push
inc
mov
and
inc
or
xchg
pop
cli
push
movs
(bad)
lfs
add
or
cmp
push
ds
cdq
dec
mov
test
xchg
outs
mov
cmp
adc
mov
sbb
icebp
mov
adc
sbb
xchg
mov
pop
inc
cld
repnz
pushf
or
add
push
add
cli
std
xchg
fwait
mov
dec
xchg
cmps
sub
inc
jg
add
aam
sbb
fnstcw
add
sbb
add
jns
fimul
sbb
push
mov
mov
xor
stc
sub
push
(bad)
pop
arpl
aas
sub
sub
sub
cmp
lea
jae
jge
fwait
add
inc
dec
push
in
fmul
push
lods
pushf
pop
sub
sti
lods
mov
out
and
lahf
cmp
mov
out
jbe
fwait
fwait
xchg
das
out
cwde
add
xor
in
dec
iret
jmp
adc
jl
mov
jge
sub
mov
pop
pop
cmps
repz
rol
xchg
movs
pop
or
lock
push
cs
cmp
ret
aas
nop
add
mov
push
scas
rol
cmp
outs
jne
push
les
aas
dec
adc
cdq
mov
retf
addr16
xchg
pop
mov
jb
mov
mov
into
jns
into
jae
dec
sub
xor
sbb
movs
xlat
pop
and
(bad)
test
sub
rol
lahf
mov
std
out
mov
clc
sahf
in
or
and
xor
xchg
call
movs
pop
mov
xor
push
inc
push
fisubr
mov
mov
lock
xor
addr16
out
sar
test
outs
dec
xchg
cmp
cmps
int3
(bad)
xchg
add
cmps
xchg
push
popf
aas
in
mov
std
dec
mov
gs
dec
inc
mov
nop
popa
xlat
imul
scas
sahf
fbstp
inc
and
lahf
dec
fisttp
jne
sbb
test
retf
jbe
jo
cmp
cmp
pushf
test
jp
xchg
mov
mov
jle
cli
ds
add
cs
jp
mov
cmp
inc
inc
xor
add
(bad)
jmp
es
mov
ror
fstp
std
call
scas
cli
xchg
jl
cmp
jp
inc
mov
ins
mov
call
mov
inc
sbb
in
mov
call
inc
loopne
dec
mov
sbb
dec
adc
jne
xlat
(bad)
retf
popf
call
in
popfw
cmp
xchg
mov
mov
xor
retf
pop
push
sbb
rcr
push
push
pop
bound
fadd
jne
sub
push
cdq
inc
dec
cmps
clc
xor
fld
aam
cs
rol
cmps
int3
retf
in
mov
jns
push
out
cmp
add
ficom
xor
bound
je
mov
test
nop
icebp
lahf
rcl
push
inc
xchg
push
das
pop
std
rol
lods
dec
add
push
loopne
mov
call
xor
ficomp
pop
stos
xlat
mov
dec
movs
(bad)
data16
cmps
jl
fwait
out
push
not
(bad)
fdivr
ret
je
add
repz
pop
lock
call
cmp
adc
adc
dec
xor
ins
(bad)
(bad)
js
jle
mov
int3
or
outs
xlat
jns
jno
aam
repnz
push
xchg
sbb
adc
fwait
pop
loope
dec
sub
dec
xchg
mov
shr
jle
test
inc
mov
retf
ror
in
sbb
or
sbb
out
sar
inc
or
sbb
in
bnd
ins
jmp
bound
cli
out
call
jo
ret
aaa
fiadd
stc
std
mov
inc
mov
(bad)
retf
mov
mov
mov
out
enter
jbe
dec
in
jno
xor
lea
test
lods
push
repz
xchg
fwait
lock
jge
ja
js
pop
xchg
push
sbb
das
aam
lock
retf
xor
dec
push
fwait
and
add
xchg
mov
lock
jecxz
jnp
adc
pop
push
sbb
cdq
out
mov
mov
push
in
jp
xchg
ja
or
xchg
(bad)
mov
frstor
jecxz
push
mov
or
in
xchg
dec
push
add
outs
and
mov
ds
lods
mov
(bad)
js
aad
sbb
pop
mov
(bad)
lods
scas
xor
loop
xchg
mov
or
mov
push
les
or
dec
out
mov
xchg
rcl
imul
lods
bound
mov
xchg
jg
cs
xchg
mov
or
add
in
std
(bad)
or
test
test
pop
call
movs
or
ins
mov
and
inc
push
xor
adc
pop
mov
aad
into
dec
mov
rcl
push
xchg
jno
bound
das
movs
addr16
arpl
das
dec
int3
repz
mov
jge
jnp
add
and
mov
aam
cwde
arpl
mov
jg
mul
mov
cmp
sar
pusha
inc
(bad)
or
xor
repnz
(bad)
std
ins
mov
lods
enter
in
pop
dec
pop
(bad)
jecxz
shr
into
bound
scas
push
push
call
fisubr
cli
stc
cmp
stos
movs
nop
jo
(bad)
es
xor
inc
stos
test
(bad)
pop
inc
ret
sub
adc
pop
fucomip
cmc
xchg
addr16
das
jo
and
movs
iret
sub
xor
jmp
pop
mov
mov
js
(bad)
movs
cs
mov
test
mov
fldcw
popf
adc
shl
xchg
int
mov
mov
mov
cmps
mov
jmp
mov
mov
(bad)
dec
jne
or
(bad)
scas
or
mov
imul
sub
bound
and
adc
push
fst
(bad)
enter
cli
xchg
ficomp
sub
div
jge
inc
clc
pop
or
xchg
and
adc
ins
clc
mov
sub
add
sbb
hlt
sar
(bad)
sahf
nop
(bad)
mov
jo
sub
dec
inc
or
xor
imul
cdq
dec
cmp
(bad)
jl
xchg
adc
pop
sbb
shr
fimul
test
or
pop
sub
popa
clc
enter
cmp
mov
icebp
pop
mov
fcomp
ret
lock
add
arpl
inc
cmc
push
pop
and
inc
fs
scas
cmp
sub
ss
out
mov
or
pop
mov
xchg
dec
sub
lds
outs
lea
or
cmp
rcl
dec
or
imul
gs
fldenv
sar
inc
jno
ja
stos
pop
stos
mov
xchg
out
add
mov
lahf
(bad)
mov
and
inc
out
pop
fist
dec
imul
jl
sahf
mov
cmp
jne
mov
or
xchg
xchg
sub
push
sti
xor
sub
imul
cmp
jno
or
test
aaa
pushf
inc
xchg
repz
xchg
mov
xor
out
data16
sbb
xor
pop
jo
in
inc
(bad)
shl
ins
pop
and
in
call
shl
imul
xor
or
push
mov
sub
lods
ret
and
cmc
inc
xor
icebp
xor
dec
pop
pusha
in
adc
mov
rcl
pop
add
mov
pushf
test
in
mov
(bad)
sub
imul
inc
jp
repnz
or
inc
sti
sbb
cmps
cdq
pusha
ins
jmp
mov
retf
sub
xchg
outs
or
fidivr
jmp
add
mov
int3
jno
xchg
cdq
fidiv
bound
push
or
sbb
xchg
jbe
pop
sub
xchg
adc
fild
sub
add
aam
shr
pop
adc
or
outs
js
fnsave
jmp
sub
and
xchg
nop
inc
fwait
sbb
je
push
mov
inc
sbb
pusha
push
and
lods
scas
imul
and
mov
or
pop
cmc
dec
cmp
pop
lods
dec
or
xchg
fnstenv
out
retf
retf
icebp
mov
pop
mov
push
inc
sub
in
mov
jmp
rcl
mov
sti
out
test
xchg
or
imul
xlat
sahf
dec
sbb
pop
or
xlat
(bad)
add
xor
mov
sahf
add
pop
mov
dec
imul
pop
xchg
retf
and
lahf
sbb
fidivr
xor
add
mov
push
adc
pop
std
jp
mov
arpl
mov
jle
loope
fmul
jnp
or
fdiv
xor
mov
stc
std
ret
sub
fsub
aaa
mov
cld
mov
in
imul
popf
jnp
ss
push
mov
jge
outs
movs
rcr
push
jecxz
xchg
scas
(bad)
nop
mov
retf
call
enter
inc
pop
mov
pop
mov
sbb
or
stos
in
mov
aam
jne
push
out
shl
in
stos
jmp
or
mov
sub
pop
cmp
sub
pop
push
inc
jns
sbb
xchg
and
stc
mov
ss
icebp
mov
lds
push
div
dec
adc
pop
cmp
cdq
scas
pop
mov
dec
adc
push
or
aad
sub
stos
mov
dec
rcl
lods
push
dec
addr16
iret
mov
retf
sbb
mov
mov
mov
not
repnz
arpl
stos
pop
or
xor
mov
mov
mov
(bad)
scas
imul
add
mov
jo
mov
jp
lock
dec
sub
loope
ja
push
enter
pop
add
or
pop
pusha
xchg
(bad)
adc
rol
imul
inc
mov
stos
mov
sbb
pop
xor
jecxz
cmps
ss
xor
test
sbb
(bad)
int3
(bad)
mov
cdq
imul
add
mov
mov
int3
cmp
popf
push
ja
cmp
pop
leave
push
nop
mov
sahf
mov
aad
mov
or
test
lahf
and
adc
fs
(bad)
enter
sbb
add
cs
leave
jns
loope
add
cmp
nop
mov
enter
jge
mov
add
les
fldcw
das
sub
inc
shl
mov
sbb
and
or
push
hlt
leave
xlat
mov
aas
hlt
in
rcl
in
sbb
mov
ret
pop
icebp
sbb
mov
jno
fnsave
jg
ret
cmp
lods
(bad)
jl
mov
cmp
sub
xchg
push
sub
xchg
lock
pop
xchg
ror
je
inc
repnz
stc
push
xchg
or
icebp
lock
rcl
out
out
add
push
jecxz
mov
add
pop
mov
(bad)
add
push
gs
adc
inc
or
std
retf
(bad)
imul
mov
out
in
(bad)
int
xchg
add
in
gs
jge
popaw
(bad)
pop
cwde
stos
fs
push
icebp
sbb
mov
scas
pusha
sbb
mov
push
aaa
data16
jbe
adc
sub
adc
fild
push
inc
test
aad
xchg
stc
call
add
inc
stos
xchg
or
movs
enter
cs
rcl
popw
mov
shl
retf
and
push
addr16
cmc
mov
scas
cdq
jbe
mov
leave
dec
cld
cwde
push
cmp
gs
nop
loopne
cmps
adc
push
xchg
call
mov
mov
test
out
sbb
cmp
mov
cmc
repnz
dec
jae
retf
mov
push
xor
int
and
xor
sub
arpl
in
(bad)
pop
test
ds
(bad)
adc
add
pusha
xlat
sbb
call
push
lock
inc
test
neg
sub
jb
ins
loope
lods
ror
cmps
cmp
loop
test
jle
sbb
pop
adc
in
mov
cmc
dec
cmp
xlat
mov
icebp
jns
stos
dec
sbb
mov
(bad)
xor
mov
sbb
sub
xchg
call
lods
out
out
push
(bad)
cmc
stos
gs
sbb
jmp
inc
fsub
mov
in
cmc
push
ins
or
inc
push
push
or
jl
cmps
xor
jb
xchg
inc
mov
adc
ror
cmp
outs
push
and
mov
retf
popa
fisubr
pop
xchg
dec
add
pop
scas
loopne
les
cmp
and
addr16
gs
mov
sub
cmp
sub
in
addr16
dec
repz
jns
inc
test
fcmove
jo
or
mov
inc
mov
int3
fistp
movs
xchg
or
jmp
add
(bad)
jp
lods
aaa
cmps
mov
sub
inc
pop
call
loope
mov
(bad)
mov
xlat
cs
push
and
out
sbb
adc
test
mov
dec
xchg
add
not
scas
inc
inc
mov
sub
fisubr
mul
std
mov
outs
sbb
stos
xchg
in
cmp
fild
out
ror
das
ins
mov
pop
test
hlt
mov
test
adc
test
outs
xor
cld
lds
inc
nop
fadd
cli
or
cld
nop
pop
cmps
jge
inc
dec
sbb
add
test
cmc
enter
jns
sar
and
xchg
iret
mov
jge
pushf
mov
dec
in
pop
dec
fsubr
mov
jg
mov
jecxz
sub
aas
mov
mov
ss
pop
into
pop
jge
adc
test
mov
js
cmp
push
je
xchg
sub
mov
fild
in
popf
ret
ret
jbe
xchg
sbb
xor
jo
scas
daa
push
adc
in
pop
in
repnz
hlt
dec
ja
cmp
repnz
inc
xlat
das
lds
cmp
or
cld
ret
adc
mov
adc
repnz
das
pop
ds
jp
imul
hlt
popa
shr
xchg
adc
rcr
add
repz
sbb
sub
inc
stc
xchg
mov
out
loopne
xchg
xchg
add
mov
inc
int
repnz
ret
dec
(bad)
ds
mov
xchg
cs
mov
xor
push
repz
pop
pusha
push
test
push
or
sub
push
mov
pusha
iret
pop
dec
in
pop
adc
nop
jns
jge
xchg
xchg
mov
mov
clc
xchg
inc
daa
dec
pop
push
or
popa
aad
in
xor
xor
adc
test
mov
(bad)
movs
cdq
pop
inc
cmp
xchg
arpl
or
jno
std
add
call
push
pop
sbb
sbb
xchg
push
mov
call
mov
mov
cli
pushf
rcl
mov
add
hlt
fiadd
jmp
cmp
pop
xchg
retf
mov
add
mov
adc
mov
mov
enter
sbb
pop
shr
addr16
sub
sbb
dec
popf
push
bound
or
jbe
adc
sub
sbb
leave
mov
mov
in
sub
(bad)
out
das
aad
jnp
lock
into
inc
push
cmc
enter
icebp
(bad)
jnp
push
xor
lds
mov
xchg
leave
and
dec
xchg
adc
mov
ja
mov
test
test
sub
dec
gs
std
leave
pop
retf
out
xor
sbb
push
xor
pop
mov
jb
daa
ins
test
mov
hlt
dec
loopne
sti
mov
push
pop
jl
fwait
inc
jbe
adc
xor
inc
enter
mov
fdiv
dec
xor
push
push
jns
clc
out
pop
jo
mov
cmp
int3
xor
push
ds
movs
sbb
shl
mov
sub
mov
add
shr
jg
les
or
lock
push
call
mov
mov
xlat
pop
loop
mov
loope
fcomp
adc
jns
movs
dec
mov
and
call
pop
out
push
outs
pushf
sub
dec
fdiv
add
jne
jecxz
add
test
arpl
mov
push
inc
cmp
cdq
jbe
jno
dec
lds
push
fisubr
mov
(bad)
mov
cmc
cmp
sub
in
adc
cmp
call
push
jns
mov
ror
test
sahf
js
fwait
push
bound
cmc
sar
pop
loope
mov
sbb
(bad)
(bad)
rcl
mov
adc
or
mov
sub
jae
repnz
push
mov
push
lods
and
call
mov
cmps
lods
inc
fistp
repz
test
retf
in
into
cdq
xchg
add
push
and
sbb
pop
movs
cwde
int
xlat
pop
cmp
mov
fistp
xor
enter
or
sbb
add
sub
inc
add
xchg
fist
xor
cmp
mov
mov
add
sub
or
loopne
or
xchg
stos
jl
fiadd
out
pop
mov
shl
xchg
das
add
xor
je
out
dec
retf
xchg
iret
cdq
sahf
add
stos
icebp
mov
adc
out
pop
push
mov
jbe
dec
js
dec
mov
mov
mov
push
sbb
(bad)
repnz
test
mov
add
out
retw
dec
xor
loope
faddp
xor
or
repnz
retf
call
mov
push
xor
fsubr
movs
retf
dec
pop
inc
mov
loope
bound
out
pop
(bad)
icebp
loop
fld
mov
mov
jge
push
inc
xchg
aad
xor
adc
imul
mov
ins
aaa
xor
(bad)
out
shr
int3
or
out
mov
fs
std
add
xor
xor
enter
arpl
shr
mov
das
adc
sqrtps
adc
test
out
or
pushw
nop
lods
nop
js
aas
stos
pusha
adc
add
repnz
clc
jno
add
call
les
imul
in
push
js
cs
jg
outs
jmp
pop
lea
jmp
pushf
aaa
add
test
mov
or
or
adc
test
fs
lds
xlat
data16
adc
out
repnz
dec
imul
add
add
adc
sub
mov
cwde
xchg
mov
mov
ret
mov
fst
and
mov
test
pop
push
inc
cmp
xchg
sahf
call
mov
pop
xchg
mov
inc
and
test
push
inc
sbb
xchg
inc
push
jnp
cmp
popa
jmp
mov
jp
sbb
push
sahf
int3
mov
dec
jno
push
sahf
mov
mov
outs
retf
xor
popa
xor
mov
imul
enter
ins
outs
jecxz
xlat
je
mov
or
inc
mov
ret
sub
hlt
std
or
inc
shl
loopne
sar
inc
sbb
aad
jno
shr
xchg
mov
out
loope
in
sbb
mov
cmp
imul
scas
clc
test
and
mov
fisttp
inc
sbb
lds
fimul
push
mov
xor
mov
add
xor
rol
int
jbe
mov
in
push
jnp
jg
data16
stos
aaa
mov
sbb
jbe
mov
add
ficomp
pop
adc
les
test
mov
dec
mov
xchg
or
jecxz
mov
push
push
in
pop
cld
and
inc
adc
nop
rcr
pop
cmp
data16
xchg
(bad)
retf
int3
les
xchg
mov
sbb
inc
into
cmp
les
xchg
call
mov
jno
mov
xor
popf
outs
cmp
sub
aam
mov
(bad)
rcr
mov
test
cwde
inc
pop
ins
cld
hlt
adc
leave
sbb
arpl
cld
mov
mov
dec
sub
je
cmp
das
inc
pop
fnsave
ss
pop
ror
jle
fmul
jle
les
sbb
sbb
and
jne
cli
repnz
sub
sbb
adc
jl
and
jmp
mov
(bad)
adc
(bad)
js
loop
mov
xchg
bound
popa
mov
fs
xor
add
inc
xchg
fisttp
js
fwait
ins
ins
or
lahf
loope
push
scas
sub
xchg
cdq
inc
jns
inc
mov
ficom
aas
push
aam
and
xchg
dec
fld
repz
jbe
add
xor
push
bound
lds
jbe
xor
add
ss
adc
jecxz
adc
in
(bad)
sub
or
outs
iret
or
jl
ins
xor
fwait
in
scas
mov
pop
ja
imul
sbb
or
xchg
sbb
sbb
test
cld
mov
(bad)
cmp
dec
and
ret
jo
ret
mov
movs
sub
mov
(bad)
sub
and
popa
and
dec
cli
call
adc
cwde
adc
xor
dec
and
push
mov
mov
ret
inc
dec
(bad)
xchg
cmp
push
add
rol
push
pusha
ss
lahf
repz
push
xor
imul
leave
dec
cli
(bad)
out
xchg
xor
dec
jecxz
add
lods
push
fs
sub
xlat
mov
xchg
add
outs
push
div
jnp
iret
inc
clc
out
push
call
inc
pop
push
or
xor
adc
cmp
aaa
ret
lods
push
(bad)
fisub
sbb
mov
iret
imul
repnz
cld
jmp
dec
dec
bound
jmp
cmps
repz
ds
mov
rcr
sbb
mov
mov
and
dec
or
(bad)
and
pop
ins
ins
jo
mov
mov
adc
les
xor
mov
xchg
out
ins
(bad)
sub
inc
pusha
mov
adc
xchg
std
jo
mov
stos
pop
aad
push
jle
pop
mov
les
push
sub
cmps
clc
adc
stos
jmp
mov
lahf
loope
enter
cmp
sub
push
clc
cli
inc
mov
add
mov
dec
pop
jnp
cmps
sbb
mov
inc
xchg
push
push
stos
fdivr
mov
add
mov
push
jno
lahf
cwde
lahf
mov
xchg
shl
lods
ret
shr
sbb
xor
cmps
cmp
outs
pop
pop
sub
xchg
adc
lods
popa
xor
mov
movs
sbb
dec
(bad)
push
push
push
and
(bad)
push
(bad)
adc
nop
cmps
arpl
ret
or
aaa
stos
bound
out
or
test
rol
je
push
fwait
in
sub
fbstp
fwait
jmp
mov
repnz
bound
pop
std
popf
jmp
aad
xlat
mov
inc
and
shr
test
dec
in
inc
divps
adc
int3
rcl
(bad)
mov
and
imul
push
pop
adc
xchg
sub
or
or
movs
repnz
cdq
sub
xchg
pop
(bad)
pusha
push
dec
cld
icebp
pop
or
ins
in
and
movs
pop
inc
cmc
arpl
ds
sbb
mov
sbb
or
sub
dec
mov
jmp
sbb
stos
popa
ds
(bad)
std
sub
adc
nop
or
stos
jecxz
clc
loopne
mov
adc
or
inc
fwait
mov
mov
arpl
in
xor
outs
push
mov
jl
sub
sbb
pop
inc
jo
inc
xchg
jns
cli
retf
cvtps2pd
retf
dec
lods
push
clc
popa
jbe
add
scas
inc
push
fs
jo
fbstp
ret
push
lea
jecxz
sub
xlat
sub
imul
inc
mov
adc
and
adc
jne
xlat
pop
clc
jnp
sub
dec
push
mov
mov
push
leave
pushf
aam
fidivr
dec
popa
inc
push
shr
call
push
imul
enter
and
mov
repnz
xchg
dec
cli
xor
mov
scas
out
(bad)
pop
inc
and
pop
push
test
xor
fst
aam
or
cmp
(bad)
repz
sub
adc
or
cmp
inc
adc
fsubr
jns
push
sbb
xor
repnz
cwde
std
sub
das
fidivr
adc
jne
popa
fdivr
xor
call
pop
mov
sbb
fdivr
lds
mov
sub
dec
or
sbb
out
add
test
mov
and
jecxz
cs
jns
and
test
movs
shr
stc
mov
shr
daa
mov
div
addr16
inc
gs
cmp
loopne
loope
pop
inc
fidivr
push
ss
inc
ror
dec
adc
sub
add
cwde
ds
pop
cmps
not
mov
or
mov
mov
imul
mov
and
mov
test
push
mov
daa
test
dec
add
jle
jmp
pop
(bad)
movs
push
ss
shl
jbe
shr
and
cmp
ret
jb
psllw
xlat
bound
inc
into
mov
push
xchg
dec
xchg
xor
out
daa
clc
sbb
adc
or
jge
ror
retf
pop
mov
addr16
enter
dec
iret
push
ja
out
aam
test
lahf
adc
or
adc
adc
(bad)
xlat
or
inc
cmps
adc
push
loopne
test
ds
mov
test
sub
repnz
mov
pop
lods
and
mov
jno
push
push
gs
stos
stc
mov
fild
ror
test
mov
cmp
cmp
add
jns
cmp
pop
inc
in
stos
test
outs
es
add
inc
dec
or
imul
pop
mov
or
inc
cmp
pop
dec
push
fsub
inc
mov
xchg
pusha
cs
adc
add
ror
(bad)
cmp
mov
cwde
mov
out
push
fcomp
pop
or
cmp
add
stos
jo
ins
xor
je
dec
pop
push
push
and
sbb
lods
mov
mov
mov
cmps
popa
inc
mov
pop
dec
sub
and
shr
dec
hlt
cmp
cmp
sbb
outs
test
fstp
pop
enter
outs
jo
dec
inc
mov
cwde
dec
inc
adc
jns
adc
cmp
mov
pop
jne
fistp
lahf
neg
xchg
xor
xchg
jns
push
test
cmps
xchg
mov
xor
and
jg
ficomp
xchg
sub
call
inc
xchg
(bad)
or
sub
mov
dec
shl
stos
out
das
stos
enter
mov
xor
mov
movs
fadd
retf
jo
sub
xchg
out
mov
cdq
loop
(bad)
push
dec
pop
ds
mov
cli
pop
add
test
mov
adc
pop
test
push
jne
sub
fiadd
jle
in
mov
pop
adc
je
ins
scas
cmps
cmp
mov
fild
cld
ja
ret
aas
test
cmps
lock
jmp
mov
out
adc
mov
ds
cli
stos
(bad)
(bad)
fisub
call
push
jbe
mov
popa
and
jo
out
fdivr
loope
stos
pop
xchg
mov
mov
sbb
cmps
mov
xor
dec
xor
pop
arpl
mov
or
call
mov
push
add
mov
jns
lock
das
push
pop
bound
enter
call
clc
retf
adc
maxps
repz
arpl
mov
cmps
ror
adc
mov
shl
clc
xchg
int
lea
jmp
mov
idiv
test
jle
mov
sbb
test
sbb
mov
cmps
mov
push
dec
(bad)
(bad)
jmp
sub
mov
pop
mov
pop
ficom
dec
mov
pop
push
loope
mov
inc
stos
cld
(bad)
stc
(bad)
xor
mov
inc
xor
mov
push
fcomp
jl
int3
inc
push
xlat
(bad)
add
add
add
add
lock
pop
xor
mov
mov
(bad)
and
mov
adc
mov
xchg
push
lock
dec
repz
in
mov
adc
adc
jno
adc
pop
push
dec
jp
call
icebp
mov
push
scas
mov
arpl
or
xchg
scas
ja
lock
or
mov
and
pop
in
adc
mov
sub
inc
jns
jecxz
mov
xor
neg
sbb
cli
push
call
rcr
adc
daa
jge
push
cwde
sar
jne
mov
sub
call
cmps
lods
pop
into
xor
adc
movs
dec
sub
add
sbb
test
adc
or
aam
sar
out
repz
and
and
push
xchg
pop
sti
test
add
mov
in
xor
in
cli
xor
test
scas
jp
test
mov
push
imul
or
inc
movs
loope
xor
and
adc
sub
xor
(bad)
sbb
mov
fstp
push
add
(bad)
popa
gs
dec
xchg
stos
icebp
sub
push
cmp
test
push
add
shr
push
xor
pop
mov
and
repz
mov
push
sub
cmp
and
enter
pushf
mov
retf
dec
mov
lock
cwde
jne
ret
xor
cdq
lds
adc
cmp
pop
jmp
(bad)
push
xchg
ret
adc
xlat
jo
outs
les
mov
dec
test
mov
adc
add
scas
and
mov
or
(bad)
mov
xchg
cli
dec
add
sar
xor
fs
gs
jmp
std
lds
loop
sti
sti
cmp
icebp
cmp
cmc
outs
retf
mov
jno
cmp
push
sub
btc
sar
sti
clc
jmp
jns
js
ins
repnz
in
fld
mov
shl
fimul
(bad)
stos
fs
add
cmps
sbb
pusha
lea
mov
js
xor
lds
pusha
mov
cmp
ins
cmp
pop
(bad)
sub
adc
cmp
mov
xchg
xchg
adc
clc
retf
fs
mov
xchg
aas
sbb
adc
gs
pop
cdq
sub
mov
(bad)
add
push
inc
jns
cwde
cwde
sub
jmp
pusha
mov
call
jns
ins
int
push
(bad)
mov
xchg
in
call
mov
scas
jbe
mov
xchg
mov
fcmove
pop
(bad)
out
(bad)
clc
cmp
push
cmp
fcom
jb
xor
xchg
(bad)
out
xor
mov
sbb
inc
repnz
out
mov
mov
lods
test
xor
leave
(bad)
es
mov
jb
stc
mov
mov
sub
pop
lahf
nop
xchg
mov
xchg
mov
sbb
inc
inc
push
test
scas
out
cmpxchg
jecxz
mov
inc
dec
(bad)
and
or
sbb
mov
jp
int
jbe
jge
(bad)
mov
fld
jle
sub
imul
and
push
fld
jne
bound
jbe
(bad)
mov
sbb
mov
dec
retf
or
imul
mov
sar
cld
xor
ins
ins
pop
(bad)
sbb
ins
or
adc
sbb
movs
mov
push
pop
jmp
cli
std
inc
or
push
pop
dec
scas
cmp
je
ss
cmp
add
push
mov
stos
daa
and
or
mov
ins
cmps
adc
outs
xchg
mov
sub
cmps
and
in
and
mov
xchg
pop
(bad)
repz
retf
std
mov
dec
popf
retf
in
mov
mov
push
mov
test
mov
and
imul
ret
cmps
ror
bound
mov
(bad)
push
ror
xchg
cmp
stos
mov
hlt
mov
mov
mov
mov
push
call
(bad)
scas
mov
cld
pop
jmp
lods
push
inc
mov
fist
dec
mov
in
es
pop
jp
adc
int3
mov
rcl
sub
push
xchg
dec
fdivr
push
pop
out
or
mov
pop
popf
mov
pusha
sub
push
imul
stos
ret
cwde
sub
push
movs
push
xlat
xlat
mov
ins
daa
pop
or
mov
dec
add
inc
sbb
jo
(bad)
xor
loop
mov
in
lods
mov
xchg
fwait
push
sti
ss
fidivr
cmps
jmp
cwde
mov
dec
xor
jno
test
inc
xor
fidivr
inc
daa
les
mov
call
mov
inc
mov
out
add
retf
xchg
outs
mov
leave
mov
repnz
and
cmpxchg
imul
idiv
jb
pop
loope
pushf
mov
add
sub
push
add
inc
mov
mov
mov
adc
ja
mov
adc
push
imul
scas
rol
bound
loop
cwde
(bad)
retf
test
fisttp
imul
addr16
ins
pushf
icebp
push
pop
test
enter
das
movs
cmps
sar
bound
inc
adc
add
fnstcw
xchg
cmc
movs
adc
test
or
into
gs
cmp
push
cmps
mov
mov
mov
jmp
std
xchg
cmp
mov
xor
jg
shl
inc
in
adc
cmp
xchg
adc
pusha
dec
(bad)
push
jge
dec
pop
(bad)
cmps
retf
xchg
shr
xor
mov
sbb
cmp
pusha
enter
mov
ja
int3
(bad)
int3
scas
push
shr
and
outs
cmps
mov
xchg
dec
or
sbb
xor
or
arpl
mov
jb
or
inc
int3
or
pop
lds
iret
dec
cmp
std
test
jne
push
dec
mov
xor
dec
out
div
jb
pushf
cmp
xchg
adc
add
dec
push
sbb
addr16
jl
mov
sub
repnz
or
sbb
xor
xor
mov
leave
sbb
test
pushf
lea
ja
out
or
out
fadd
mov
adc
xor
push
mov
jmp
push
cmp
jmp
pushf
movs
jle
cmp
mov
mov
cld
aaa
jae
xchg
call
aad
cmp
sub
das
cs
arpl
pop
pusha
cmc
cli
push
fadd
nop
into
(bad)
sub
pop
shl
xchg
mov
xchg
lods
(bad)
leave
bound
mov
ins
sub
fisubr
call
imul
rcl
mov
mov
adc
adc
int
xchg
cmp
pop
push
repz
pusha
adc
xor
das
mov
call
ja
dec
or
jmp
retf
xor
shr
xor
out
scas
loopne
jmp
js
ror
dec
add
pop
(bad)
loop
sub
lods
xchg
inc
stos
out
outs
and
mov
cmc
std
int3
sti
jo
cmp
jb
aas
repz
or
cmps
or
pop
xchg
cmc
xchg
sbb
aam
cmp
push
inc
push
movs
(bad)
cmp
cmps
gs
les
sub
out
std
lds
add
mov
sbb
and
fsub
mov
bound
push
jecxz
jge
mov
rcl
fs
jmp
xchg
ds
lea
add
mov
clc
mov
cmp
lahf
add
inc
rcr
loop
in
pop
mov
repz
leave
jnp
test
inc
add
push
sub
ins
(bad)
pushf
jmp
fld
jae
mov
bound
jne
dec
jbe
retf
xor
cmp
mov
mov
sub
jb
mov
arpl
cmp
sahf
push
jge
xchg
add
clc
cmp
cmp
mov
cmp
inc
mov
cmc
inc
mov
dec
sub
jno
(bad)
inc
cwde
adc
jmp
cmc
inc
jg
jl
sbb
cdq
inc
shl
fimul
out
(bad)
enter
add
xor
das
adc
inc
cmp
hlt
xchg
outs
out
jmp
scas
push
repz
in
mov
xor
lods
mov
stc
pop
dec
jmp
jp
sub
imul
dec
ror
shl
(bad)
lea
xchg
ins
mov
and
fdivrp
shl
cmp
xchg
cli
pop
lea
scas
dec
pusha
mov
jmp
xlat
mov
fwait
jb
jl
test
rcr
ins
sub
ins
inc
(bad)
xor
cmp
add
bound
add
push
push
sbb
mov
xchg
sub
add
add
jmp
fiadd
mov
sar
dec
pop
adc
xor
out
mov
and
leave
ror
imul
push
fsub
push
push
scas
and
stos
mov
xchg
inc
mov
sub
jbe
dec
ins
loopne
pushf
adc
add
cld
js
out
push
cmp
lds
jle
test
xor
gs
xchg
xor
(bad)
cmp
popf
push
lods
jno
out
dec
cli
jnp
rol
xor
mov
push
sub
pop
cmp
add
pop
xchg
cmps
pop
or
je
je
call
xchg
loope
(bad)
cwde
dec
loope
cdq
xchg
rol
loop
icebp
call
aam
dec
lea
pop
cmps
xchg
outs
cmps
mov
stos
frstor
sub
inc
fmul
test
mov
sub
jp
sar
loop
jns
std
adc
mov
jb
inc
cmp
cmc
sbb
sbb
outs
sbb
mov
lds
call
ins
mov
mov
call
enter
xlat
adc
xlat
dec
ins
popa
xor
cli
int3
repz
adc
sahf
mov
sbb
addr16
mov
or
bound
addr16
jns
shl
xrstor
mov
jne
shl
mov
mov
std
sub
aam
dec
pusha
sbb
sbb
sbb
loope
push
sbb
es
and
pop
or
push
loop
add
and
aas
or
mov
cld
mov
xor
pop
jnp
mov
push
ins
fincstp
ret
push
xchg
addr16
jne
jp
aam
cbw
retf
dec
aas
fs
pop
fimul
inc
xchg
dec
xlat
int
mov
mov
ror
jno
js
or
jl
fistp
retf
fcmovne
cld
push
xchg
inc
xor
add
dec
jno
pop
pop
in
add
in
ret
jp
add
jno
addr16
daa
push
fwait
adc
mov
add
iret
mov
dec
xchg
call
sub
xchg
aad
mov
push
adc
xor
mov
sbb
es
imul
popf
(bad)
mov
jmp
mov
or
dec
outs
cmps
or
shl
sub
adc
js
fsubr
ins
push
inc
daa
mov
xchg
lea
arpl
cmc
add
jmp
xchg
movs
ret
jle
jo
inc
outs
shl
sbb
dec
jns
sbb
cmp
or
test
pop
xchg
in
xlat
mov
(bad)
ja
es
inc
imul
lods
aad
popa
xchg
addr16
or
cmc
dec
push
push
xchg
cmp
xlat
mov
push
fisttp
mov
jne
inc
cmp
mov
(bad)
and
das
cmp
scas
xchg
adc
sar
mov
call
or
iret
or
mov
rcr
retf
out
xlat
retf
pop
outs
xchg
mov
xchg
pop
adc
fild
mov
cmps
repz
xor
jl
aad
aas
(bad)
sbb
mov
sub
xor
sbb
imul
mov
popa
inc
adc
outs
mov
push
test
pop
loop
daa
jb
pop
adc
lds
or
shl
pop
scas
jb
(bad)
(bad)
xchg
pop
push
ret
test
mov
pop
sub
sub
ss
add
sti
push
fdiv
retf
test
push
or
not
ror
pop
and
out
scas
push
sub
call
push
inc
jg
mov
xchg
lock
rol
retf
rcr
stos
std
push
repnz
adc
push
das
pop
sbb
lods
sub
in
lea
stos
mov
cmp
sub
or
jge
adc
inc
push
mov
shl
mov
fs
sbb
jg
xor
fcom
or
sbb
mov
sti
mov
inc
movs
sbb
fbstp
adc
mov
push
xchg
xadd
mov
jno
mov
mov
jb
add
imul
mov
and
rol
fwait
sbb
stc
dec
add
push
xor
mul
sub
aam
xor
mov
xchg
pop
add
inc
call
push
push
sub
xchg
cli
test
in
push
jg
xor
cli
cmp
pop
lds
push
add
(bad)
mov
pop
jg
sub
dec
call
out
and
loopne
jmp
ret
in
push
jne
dec
fimul
jecxz
cs
inc
or
xor
xchg
rcl
stos
cmp
aam
leave
aam
jge
iret
addr16
lds
lea
or
je
cmp
fcomp
inc
xchg
push
inc
in
inc
or
(bad)
push
ss
inc
sbb
add
sub
dec
pop
inc
add
or
sub
cmp
mov
xchg
lock
push
or
enter
in
lods
retf
mov
ror
jmp
adc
mov
daa
repz
cmp
xchg
sub
xchg
scas
and
loop
test
and
jp
mov
mov
loope
mov
outs
push
jg
or
pop
(bad)
call
(bad)
sar
push
sbb
retf
inc
mov
mov
nop
shl
mov
and
mov
imul
shl
lods
icebp
xchg
xchg
or
pushf
cld
mov
pusha
xchg
outs
xor
push
aaa
xchg
mov
rol
mov
pop
xchg
cmp
xchg
popa
sbb
fmul
(bad)
aad
dec
mov
popf
push
sbb
xor
jb
xor
test
loop
ins
repz
cdq
hlt
aaa
dec
and
cdq
gs
dec
push
shl
fbld
rcr
mov
leave
movs
popf
xor
pop
(bad)
icebp
cmp
and
cmc
or
cmp
pop
jecxz
cmp
or
(bad)
push
out
xchg
retf
jns
sar
fisub
mov
test
or
aas
fsub
mov
adc
sbb
cmp
mov
or
push
(bad)
jecxz
dec
out
gs
push
add
sub
repnz
mov
and
stos
ins
js
xchg
cmp
mov
std
xchg
jnp
mov
fs
xor
inc
sbb
inc
test
mov
pusha
sbb
ins
(bad)
shr
das
pop
sbb
xchg
sbb
outs
add
inc
movs
cmp
sbb
cmp
cld
rol
into
(bad)
call
xchg
gs
cmps
mov
push
aaa
mov
in
mov
dec
cmp
lahf
jmp
out
das
ja
js
aaa
mov
cmp
scas
mov
adc
sbb
add
jne
popa
gs
or
js
and
cmp
nop
mov
or
mov
nop
imul
inc
xchg
xchg
pop
addr16
enter
cmp
push
jnp
add
aas
add
mov
sbb
movs
mov
mov
xor
dec
stc
shr
cvtdq2ps
pop
enter
mov
outs
aas
pop
fcomp
shr
retf
mov
sahf
nop
pusha
lods
inc
xchg
push
push
(bad)
mov
in
jbe
les
inc
xor
push
test
inc
push
dec
or
test
inc
add
shr
push
adc
push
push
cdq
push
xor
jo
int
hlt
jns
push
scas
scas
jbe
mov
ins
cs
je
xchg
not
movs
ss
fcom
mov
mov
fld
fxch
ret
xchg
imul
inc
jmp
loope
sbb
xchg
inc
leave
pop
shl
push
mov
jbe
mov
dec
push
mov
in
test
pushf
and
mov
sub
(bad)
sub
ret
inc
aaa
hlt
in
shl
sbb
fldcw
mov
xlat
clc
xor
jge
inc
xchg
lods
inc
sbb
push
(bad)
dec
jb
scas
push
xor
les
add
cmp
inc
mov
jle
pushf
push
dec
je
pop
fmul
sahf
and
js
xchg
ror
sbb
inc
push
xor
fld
mov
mov
and
std
sbb
xchg
jns
sub
fcom
cmps
inc
push
ja
nop
mov
jg
fcom
fisubr
and
popf
jl
mov
inc
mov
jae
fild
cmps
push
push
push
rol
xchg
jbe
fldcw
into
call
aad
inc
mov
jmp
std
sub
adc
xor
je
dec
mov
jne
mov
movs
aam
xor
mov
cs
(bad)
lahf
dec
ret
dec
rcl
and
test
push
ins
outs
arpl
aam
push
jb
cmp
inc
xchg
hlt
movs
maskmovq
xor
push
jle
jl
in
hlt
push
mov
in
mov
test
outs
mov
cmp
and
or
rcr
test
xor
push
movs
add
out
test
mov
mov
sti
int3
retf
das
stos
xchg
test
sub
and
xchg
dec
fbstp
and
in
cmp
adc
inc
add
push
into
sti
repz
or
adc
jle
outs
in
clc
jg
dec
mov
mov
iret
xchg
mov
xlat
cmc
mov
mov
cmp
aas
push
inc
mov
inc
jp
and
lea
pop
rcl
enter
push
xchg
inc
jae
cmps
jecxz
retf
nop
jne
sar
mov
inc
pop
add
out
sqrtps
pcmpeqw
fnstcw
jb
jbe
popa
(bad)
call
mov
cmps
aad
outs
call
into
cli
jb
mov
and
or
push
mov
lea
hlt
mov
cs
inc
jmp
test
mov
outs
cwde
int3
adc
rol
lods
cdq
aaa
push
adc
aaa
or
push
cmps
mov
lods
aam
jne
mov
mov
call
test
stos
xchg
push
cdq
mov
cs
in
xor
fbstp
jo
jo
inc
shl
aaa
ja
or
call
shl
push
mov
mov
jb
repnz
fnstenv
jp
enter
les
mov
xchg
mov
sub
mov
add
xor
and
in
sub
test
push
jge
lahf
cdq
fadd
mov
jl
or
or
inc
jecxz
cmps
test
pop
xor
sub
sub
pushf
push
retf
xor
push
dec
out
jecxz
cmc
or
push
(bad)
js
(bad)
push
popf
jnp
add
dec
shl
(bad)
outs
outs
mov
sar
(bad)
not
xor
mov
retf
xchg
div
pop
retf
shr
jmp
addr16
inc
or
push
lock
dec
jnp
aad
jp
jae
pop
out
(bad)
mov
addr16
or
xchg
mov
cmc
pop
and
movs
adc
loop
cmp
or
in
sbb
push
sub
mov
mov
dec
scas
mov
call
fs
cli
(bad)
jle
pusha
enter
xor
sub
mov
call
inc
shl
mov
push
sub
xchg
and
mov
jl
mov
stc
mov
(bad)
int
fwait
push
mov
push
das
sub
imul
aaa
leave
cmp
cmps
lods
xchg
mov
daa
and
arpl
or
inc
and
gs
out
inc
cmp
popf
add
ffreep
(bad)
sub
jo
inc
or
and
pop
jae
popa
push
cmp
(bad)
cdq
xchg
lods
cmp
sub
mov
push
pusha
push
call
pushf
jl
loopne
popf
inc
push
rol
daa
cmps
test
and
popa
cmp
call
pop
pusha
cmp
jnp
inc
jns
(bad)
adc
fld
adc
retf
push
pop
cmp
xchg
or
call
mov
fsubrp
hlt
in
and
push
xchg
sbb
cmps
cmp
adc
in
sbb
stos
call
nop
jne
ja
or
inc
cmp
mov
xor
ja
and
fisubr
inc
push
fwait
mov
push
shr
sbb
fadd
sbb
or
gs
sub
cmp
push
out
mov
out
cli
hlt
fwait
xor
push
cmps
mov
addr16
inc
lock
add
clc
adc
mov
pop
cs
neg
inc
xchg
aaa
dec
adc
sbb
push
jg
movs
shr
in
jp
push
or
dec
(bad)
jg
jp
mov
arpl
mov
movs
mov
push
cmps
or
fwait
shl
sbb
sub
mov
inc
(bad)
xchg
popa
in
pop
sbb
in
out
cs
ret
inc
cmp
or
ds
sahf
(bad)
jecxz
mov
pushf
dec
enter
sbb
inc
ss
aad
nop
and
jnp
push
enter
add
or
and
adc
sbb
test
out
inc
cmp
xchg
jbe
sub
ds
push
xchg
pop
fsubr
sub
adc
ins
jecxz
jne
cmc
sbb
mov
sbb
test
sbb
rcr
pop
xor
sbb
sbb
cmps
and
fimul
or
lea
es
adc
inc
xchg
stc
fisttp
es
jg
mov
pop
movs
in
sbb
mov
and
cs
aas
add
ins
repnz
scas
mov
test
mov
pop
dec
or
mov
xor
repz
out
xsha256
cmps
push
repz
mov
and
jno
mov
adc
cmp
pop
dec
dec
sub
sbb
div
add
repnz
dec
sub
push
adc
in
xchg
xchg
popa
dec
push
jl
cdq
xchg
or
push
xchg
lods
add
or
or
les
or
ja
jmp
ret
fcomp
dec
mov
jg
std
sahf
mov
mov
lods
(bad)
jmp
mov
push
pushf
dec
cmp
loope
or
cs
sar
lea
sbb
xor
jge
gs
lock
mov
push
or
clc
fwait
xor
sub
xchg
add
pop
icebp
add
mov
shl
push
sub
repz
cmc
(bad)
fisub
retf
fidiv
push
test
or
push
cli
test
retf
jne
iret
ror
xchg
dec
add
pop
aas
jo
mov
dec
mov
jmp
(bad)
sub
and
and
mov
push
(bad)
fisttp
xor
and
std
mov
das
(bad)
and
scas
jmp
ss
mov
mov
inc
int3
outs
mov
xchg
jmp
mov
xor
jbe
cmc
in
jno
cmp
sar
adc
mov
or
xchg
cmp
inc
dec
mov
mov
add
loop
scas
sub
int
ss
sub
fild
or
dec
std
mov
sub
mov
cmp
jmp
test
and
test
data16
movq
inc
ja
retf
jnp
es
adc
push
jnp
or
leave
mov
sbb
push
fisttp
test
mov
div
pop
cmp
inc
pusha
cmp
sbb
loopne
add
mov
cmp
in
cmp
xor
ror
sbb
xor
push
xchg
(bad)
cmc
push
icebp
xchg
les
daa
or
mov
arpl
jns
mov
mov
std
ins
vcmpneq_usps
ins
cli
push
fist
iret
jge
(bad)
(bad)
(bad)
jns
push
pusha
fild
jecxz
rcr
adc
das
mov
mov
nop
dec
rcr
jns
leave
lds
(bad)
rcr
pop
jo
lock
rol
daa
out
cmp
jmp
push
cdq
(bad)
int3
call
into
push
push
out
cwde
imul
das
mov
clc
retf
mov
fadd
inc
inc
inc
lahf
sub
mov
mov
int3
in
mov
dec
dec
ins
sbb
rcl
loop
rol
je
adc
mov
mov
jge
std
(bad)
push
mov
cli
or
jns
shr
shl
addr16
and
rol
repnz
push
jge
push
pop
ins
out
gs
out
mov
push
cwde
fnstcw
ins
sub
sub
(bad)
repnz
int3
xor
sbb
outs
dec
ss
pop
fwait
inc
xor
jo
or
sar
mov
in
pop
xchg
push
push
test
cmp
and
xor
aas
dec
cdq
and
xlat
test
shl
shl
data16
adc
mov
in
mov
or
mov
push
jmp
hlt
daa
test
scas
pop
das
sub
stos
sahf
cli
mov
sub
lahf
jo
fisub
pushf
js
retf
stos
rol
dec
ins
or
setge
push
inc
nop
mov
bound
sbb
in
mov
lea
pop
(bad)
mov
push
scas
xor
idiv
jmp
icebp
or
jnp
rol
jns
mov
pop
mov
jb
test
adc
or
fdiv
xchg
and
or
popa
adc
test
cmps
ret
neg
fimul
leave
push
fisubr
das
test
mov
imul
jnp
and
es
jecxz
sub
stc
test
stos
mov
add
inc
hlt
dec
mov
cmp
leave
xchg
inc
xchg
lock
push
stos
fcmovbe
cs
inc
out
movs
inc
inc
jl
pop
lea
cli
shr
movs
lahf
or
push
test
mov
cs
sbb
jecxz
aad
inc
dec
push
dec
fimul
lock
jbe
cmp
push
xor
mov
jg
pop
ja
jae
sub
popa
stc
popa
fimul
repz
les
or
out
pop
idiv
fisttp
jbe
add
mov
sub
adc
jnp
cld
ror
and
shl
loopne
dec
sub
jl
push
pop
mov
inc
adc
mov
dec
jmp
inc
sub
sub
ror
jo
scas
es
stos
test
inc
fs
out
lds
jmp
int3
stos
dec
div
inc
out
call
push
int
mov
cmps
sub
adc
xchg
sub
iret
call
mov
mov
lods
loope
sti
std
into
enter
fwait
enter
popf
adc
xor
mov
dec
mov
xacquire
cmp
pop
call
scas
retf
retf
popf
lahf
jp
xchg
push
imul
ror
mov
adc
movs
push
inc
sar
cmp
fistp
mov
popf
inc
or
shl
mov
es
push
cs
test
and
sub
mov
add
fldlg2
out
mov
in
pop
sub
idiv
scas
cmps
ins
sti
jmp
retf
ins
inc
mov
(bad)
and
out
adc
mov
jo
inc
inc
cli
and
inc
stos
rol
test
sbb
cmps
mov
mov
or
cmp
cmps
xor
(bad)
les
arpl
ins
outs
in
dec
mov
push
jmp
inc
in
lea
imul
sti
xor
cmp
jo
nop
pop
inc
xchg
or
mov
jb
movs
fnstsw
sbb
(bad)
enter
stc
gs
mov
sub
sbb
dec
scas
pop
mov
adc
inc
jns
not
call
jns
jne
(bad)
std
cmp
sbb
add
xor
mov
cmps
adc
push
jge
clc
jg
fwait
cmps
mov
dec
fwait
loop
(bad)
into
add
into
pop
inc
mov
adc
adc
xor
or
or
sbb
pop
sbb
dec
mov
in
cmp
test
in
stc
xchg
pop
inc
pop
bound
fs
pop
sub
cli
add
lahf
jmp
jae
pop
sub
or
(bad)
dec
es
mov
mov
mov
adc
aad
sahf
test
jbe
xor
ret
pop
mov
popf
sub
mov
add
pop
adc
fmul
inc
frstor
lods
sbb
movs
xchg
adc
pop
jo
xchg
lods
add
push
in
cmp
adc
pop
pushf
loope
jne
jge
pushf
pushf
cdq
pop
aaa
es
xchg
jae
shl
loopne
xlat
mov
sbb
repnz
xchg
js
dec
nop
adc
pop
jge
dec
int
mov
aad
shl
scas
and
jmp
adc
pop
stos
daa
adc
shr
xlat
mov
bnd
mov
aaa
rol
adc
inc
add
cdq
(bad)
xor
or
add
and
pop
xchg
lods
push
hlt
push
or
idiv
xchg
nop
mov
push
lods
mov
ja
xchg
pop
(bad)
repz
repz
and
in
out
push
shl
pop
or
dec
je
sub
std
mov
sbb
xlat
(bad)
push
pop
stos
out
and
mov
jl
fisub
dec
cmp
pop
push
ret
cmp
pop
dec
setp
xor
mov
mov
or
sar
and
cli
pop
call
loopne
pushf
pop
pop
jecxz
pop
push
push
jg
inc
shl
shl
dec
inc
dec
push
mov
cmps
jb
les
mov
rcl
or
jle
mov
and
test
scas
ds
inc
xchg
stos
push
cwde
arpl
pusha
mov
subps
mov
cmps
sub
ins
mov
pop
mov
sahf
jecxz
mov
retf
inc
int3
dec
sbb
shl
pop
pop
repz
add
lds
mov
xlat
push
es
push
retf
nop
mov
loopne
aas
ins
dec
adc
mov
xchg
mov
push
cmp
inc
mov
sbb
adc
pop
dec
mov
sahf
out
jp
ret
sahf
test
dec
aam
push
xchg
mov
call
das
out
mov
test
xor
jmp
jo
jns
cli
dec
ins
mov
aas
or
call
sbb
fiadd
lock
push
lock
jns
xchg
xor
lock
cmp
leave
mov
jp
sbb
jg
mov
(bad)
pop
cmp
xlat
(bad)
push
xchg
and
ja
mov
jmp
push
and
mov
dec
mov
imul
mov
push
xchg
lods
lea
or
adc
les
out
xor
outs
mov
xor
push
or
jge
int
cmp
scas
retf
in
jo
fist
dec
fucom
outs
jb
dec
fimul
dec
inc
inc
adc
or
sbb
xchg
(bad)
pop
mov
or
lahf
and
and
das
and
jmp
dec
jae
pop
in
mov
cmps
mov
loop
sub
in
jo
pop
arpl
int
mov
(bad)
cwde
add
aaa
test
xchg
inc
xchg
inc
xchg
sub
push
adc
movs
jg
shr
mov
inc
push
mov
xchg
adc
sbb
jne
xor
mov
inc
(bad)
ins
out
jecxz
lods
popf
push
sar
push
cmps
stos
mov
jg
xchg
retf
out
cwde
cli
inc
xor
aas
push
imul
rcl
xor
int3
push
cmp
dec
and
das
mov
inc
dec
jae
adc
xchg
mov
int
mul
sbb
fdivr
fld
lahf
add
push
mov
inc
ror
jg
out
mov
gs
push
arpl
jecxz
and
sahf
in
in
push
hlt
iret
adc
test
(bad)
scas
mov
call
pushf
fdiv
inc
jl
jae
jecxz
int3
not
lahf
fdiv
and
out
mov
mov
jecxz
addr16
sub
outs
cmp
jle
out
push
icebp
rcl
inc
or
dec
dec
mov
mov
inc
sbb
(bad)
std
(bad)
mov
iret
clc
inc
jl
idiv
js
daa
leave
pop
je
dec
gs
in
jb
loop
clc
lea
mov
mov
mov
jmp
add
mov
ins
mov
lock
jle
mov
out
push
cmp
ins
inc
jg
mov
inc
cdq
mov
das
fldenv
cmp
dec
fisub
adc
inc
rcl
das
dec
cmp
call
cmps
sti
pop
jno
imul
das
les
pop
gs
leave
adc
rcr
pop
dec
sti
scas
das
add
(bad)
call
mov
mov
push
xlat
movs
mov
add
(bad)
adc
cmp
add
loopne
cwde
sub
sub
in
jne
std
retf
fwait
int
dec
sar
movs
mov
push
jecxz
ins
sub
add
aad
mov
cmc
mov
stc
push
cmc
inc
cmp
ja
das
ja
cmp
int
popf
imul
out
xor
xchg
jmp
mov
pop
push
cmc
mov
adc
cmps
jnp
jmp
dec
xchg
mov
ins
test
idiv
and
push
nop
push
gs
jnp
scas
push
cmp
pop
xchg
add
ds
jl
mov
push
push
pusha
mov
cmp
xchg
cmp
scas
cmps
jmp
mov
xor
hlt
mov
and
mov
mov
sar
popf
dec
push
sar
sub
pop
pop
(bad)
sub
scas
movs
xchg
inc
retf
out
mov
movs
cld
xor
iret
leave
or
cmp
fincstp
aad
test
add
loop
std
ret
cmc
pop
jns
enter
pop
jge
push
cmp
cmps
out
enter
mov
ja
dec
(bad)
push
aaa
out
inc
dec
nop
mov
add
sbb
sub
dec
or
or
and
call
outs
call
inc
sub
(bad)
sbb
xchg
cs
push
fldcw
dec
cmps
rcr
xchg
and
into
push
(bad)
and
push
or
cmp
ja
sti
into
mov
dec
adc
test
shl
lods
cmp
dec
mov
(bad)
clc
and
scas
jb
test
cmp
jmp
sbb
sub
pop
ret
mov
loop
mov
leave
in
(bad)
cmc
xchg
jle
sub
pop
sar
jno
jecxz
sbb
cmp
fsubr
scas
xor
pushf
cmp
inc
add
aas
or
jle
adc
sti
adc
retf
ja
xchg
add
ss
aam
in
int3
mov
jnp
loope
fisub
punpckhwd
jmp
jmp
shr
or
jbe
stos
in
les
or
adc
add
daa
sub
xor
add
mov
popf
aaa
int3
cmp
pop
mov
mov
jl
push
(bad)
pop
cmp
xchg
data16
jmp
dec
pop
outs
xlat
cmp
neg
into
ret
pop
adc
aas
nop
push
inc
aas
push
jno
mov
pusha
add
and
pusha
xchg
inc
shl
ss
push
push
(bad)
sbb
call
jle
in
(bad)
lock
(bad)
push
ins
xchg
mov
sub
lahf
adc
fisttp
sub
rol
jle
call
lds
imul
jp
retf
mov
das
jmp
mov
fiadd
mov
xor
movs
jno
sbb
xor
in
dec
or
test
or
inc
(bad)
and
xor
test
sub
outs
(bad)
mov
out
stc
and
sbb
xor
push
or
int3
outs
ds
jns
sub
outs
xchg
add
pop
mov
jge
mov
sbb
loope
mov
xchg
cmc
inc
les
into
out
inc
inc
enter
in
pop
scas
xchg
arpl
pop
(bad)
lods
push
add
ffreep
(bad)
pusha
sbb
pop
movs
outs
mov
mov
or
outs
push
mov
jnp
jle
add
dec
push
push
iret
lods
ds
rcl
fcmovnu
pop
adc
jbe
aas
add
pop
in
test
gs
mov
popf
sahf
xchg
xchg
cs
jle
xor
xlat
int
fcom
push
mov
nop
shl
mov
xchg
sub
xchg
sub
push
aad
adc
dec
repnz
and
and
push
sbb
scas
(bad)
cwde
lods
dec
out
push
popa
dec
test
or
jecxz
xchg
sbb
sbb
dec
mov
clc
lods
pop
sahf
jns
hlt
xchg
(bad)
inc
xor
push
mov
call
int
aad
adc
cmp
mov
xor
mov
fimul
and
hlt
(bad)
pop
fwait
in
xor
fstcw
hlt
pop
ret
or
or
repz
pop
nop
mov
nop
xlat
lahf
mov
dec
dec
mulps
adc
mov
jge
jbe
popa
idiv
xor
jle
xchg
xchg
gs
xchg
stos
push
sub
pop
jmp
and
dec
push
loopne
iret
jnp
mov
pusha
jmp
ins
add
test
mov
out
and
dec
jo
mov
sbb
lahf
ror
and
mov
sbb
push
movs
fptan
adc
pand
mov
fs
jbe
retf
imul
xor
adc
pop
das
(bad)
push
xchg
mov
pop
rcr
sbb
push
iret
pushf
pop
xchg
add
xor
or
or
test
sahf
jp
sub
aas
ins
xchg
(bad)
and
outs
das
mov
xchg
(bad)
fmulp
lahf
inc
inc
(bad)
scas
mov
popa
xor
add
movs
daa
sbb
dec
mov
sbb
cmp
mov
rcl
int3
or
les
xchg
jbe
push
inc
lock
cmc
retf
cmp
push
scas
jl
in
fisub
mov
aaa
pushf
fsubr
(bad)
clc
mov
xchg
loope
mov
pushf
adc
stos
hlt
pop
aam
add
jmp
test
pop
mov
std
cld
xchg
hlt
and
cld
test
mov
add
jmp
dec
fs
popa
or
xor
aaa
mov
enter
icebp
push
cmps
bound
pop
ror
ret
imul
xor
(bad)
mov
iret
adc
sub
and
jae
mov
jno
ja
fcmovu
ret
push
and
nop
sub
xor
je
repnz
xchg
sub
push
mov
push
call
pop
ret
imul
inc
enter
and
jno
xor
icebp
xchg
jmp
adc
icebp
out
out
sbb
add
ja
pop
loop
xlat
push
cmps
ins
in
arpl
xor
and
rcr
add
and
cs
push
ffreep
test
jmp
mov
add
adc
inc
and
mov
add
xchg
xchg
and
push
popf
pop
mov
pop
and
dec
(bad)
jno
cmp
inc
ror
dec
outs
sub
sub
test
push
push
push
push
out
jne
enter
add
daa
dec
test
or
mov
push
mov
dec
push
pop
mov
sub
mov
and
pop
jge
mov
mov
popa
add
js
and
pusha
cmps
push
mov
jmp
dec
push
enter
jns
xchg
mov
repnz
sbb
nop
in
into
call
xchg
mov
cmc
mov
mov
xor
cs
je
ins
mov
cmc
fist
dec
sbb
mov
daa
mov
jnp
jnp
xor
xor
ins
jnp
pop
mov
shl
rcr
cmps
or
ja
pop
je
mov
es
js
pop
retf
lods
cmp
adc
jge
das
jo
sub
lods
std
sub
push
sbb
inc
dec
inc
out
dec
jne
sqrtps
lea
dec
aad
ins
mov
mov
loope
dec
and
jg
loopne
jbe
xlat
adc
sbb
push
retf
mov
jge
xchg
dec
mov
aaa
fnstcw
dec
xor
icebp
pop
movs
repnz
cmp
out
daa
das
or
popa
fnstsw
xor
fiadd
lea
in
xchg
sub
out
jp
mov
sub
sbb
out
stos
(bad)
repnz
scas
les
call
xchg
adc
mov
or
add
jns
jmp
or
sub
xchg
enter
xchg
sub
call
sahf
stc
adc
aam
scas
ss
lea
(bad)
in
test
retf
pop
cmp
imul
test
cmp
mov
pop
xor
cmp
retf
inc
fnsave
sti
out
jmp
out
xchg
mov
or
aam
push
inc
inc
cmp
ret
add
xor
pop
jns
ins
mov
in
push
or
(bad)
jge
jl
dec
xor
mov
inc
jns
adc
mov
ud1
mov
xor
mov
int3
cli
sbb
int
adc
test
push
idiv
int
sbb
jmp
xchg
or
or
add
xchg
mov
adc
xor
pushf
xchg
push
pop
jno
out
mov
rcl
fcom
xor
lahf
mov
xchg
and
and
sbb
pop
rcl
sub
icebp
stos
inc
je
in
(bad)
repnz
in
pop
pusha
retf
xor
dec
shr
sti
(bad)
mov
lea
pop
pop
jns
test
nop
inc
add
pop
mov
sbb
jg
mov
shl
in
leave
test
mov
jns
pushf
sub
icebp
int3
inc
bound
adc
and
inc
sub
stos
dec
hlt
mov
(bad)
push
inc
(bad)
adc
(bad)
frstor
add
xchg
shr
sub
and
(bad)
hlt
jns
jle
jno
push
mov
js
jmp
mov
out
xchg
movs
js
push
mov
ret
or
jge
sar
retf
or
push
sar
sub
fxch
push
popa
out
lock
or
pop
cmp
es
fnstcw
les
cmp
fidivr
loope
in
ds
data16
cmps
outs
xchg
pushf
scas
jb
mov
sub
mov
dec
and
int3
mov
mov
lds
cmp
popa
xor
mov
xchg
jae
mov
inc
jg
out
mov
ret
mov
sbb
aaa
adc
bound
sub
aaa
xchg
fs
push
pop
(bad)
ja
cmps
push
add
mov
(bad)
lahf
enter
xchg
cmp
addr16
mov
push
scas
jnp
jecxz
push
ja
ja
jle
dec
and
imul
jmp
mov
inc
ret
dec
jno
push
jns
adc
mov
dec
addr16
sti
cmps
es
cld
cmps
sub
neg
jle
adc
shl
(bad)
(bad)
xchg
or
fs
mov
cmp
xchg
inc
movs
cld
mov
je
or
es
imul
add
outs
cmps
(bad)
int
outs
add
movs
xchg
jmp
sahf
lock
sbb
mov
call
inc
xchg
fucomi
loope
popa
sar
mov
pop
xor
push
mov
sbb
sar
lock
div
dec
dec
xchg
jmp
stos
pop
out
movs
mov
je
push
pop
xor
mov
mov
test
(bad)
fwait
outs
rol
pop
pop
in
xchg
shl
pop
retf
push
xor
daa
test
push
mov
mov
mov
sub
add
push
ins
sbb
cmp
cmp
clc
(bad)
fnstcw
add
shr
jle
push
mov
dec
int3
test
push
xor
cmp
fild
clc
mov
fst
xchg
mov
lods
push
(bad)
popf
out
jmp
test
push
call
popf
mov
test
out
cmp
mov
xchg
sub
push
adc
sub
stos
cmc
mov
inc
int
das
outs
lock
adc
sbb
mov
addr16
into
jno
jmp
add
push
jl
clc
(bad)
add
jl
jmp
mov
jl
dec
mov
push
mov
inc
adc
rcr
and
jno
fisub
sbb
dec
ret
popw
retf
dec
shl
inc
enter
rcl
jl
sub
xchg
inc
daa
add
mov
cmp
pop
les
ror
cmp
fldcw
imul
add
movs
fld
inc
dec
fbld
pop
data16
inc
aaa
push
pop
scas
gs
pop
into
es
mov
(bad)
jae
sbb
pop
xchg
xlat
mov
mov
add
mov
or
inc
mov
mov
and
ins
mov
jno
xor
out
xchg
(bad)
and
gs
or
or
ficomp
jge
cli
aam
test
(bad)
aam
lods
icebp
xchg
fild
enter
sahf
dec
mov
fs
xchg
adc
mov
xchg
leave
sbb
adc
jmp
add
pop
mov
jle
cmps
pusha
imul
stc
sub
xor
retf
mov
inc
xchg
cmc
jae
or
mov
scas
fmul
add
xor
cmc
mov
mov
adc
jae
fmul
lea
in
sub
mov
adc
iret
mov
test
dec
xchg
popa
not
mov
aas
ss
retf
sub
jo
adc
ss
test
mov
lods
or
call
scas
cdq
mov
sbb
mov
test
scas
mov
fisttp
jns
mov
out
fs
fdivr
mov
mov
pop
enter
mov
dec
mov
push
mov
test
push
sub
fiadd
adc
and
lods
sub
adc
dec
ss
cmps
cmp
pusha
loopne
sbb
jmp
mov
xor
leave
xchg
mov
mov
cld
jmp
lock
mov
mov
popf
shl
dec
sbb
in
push
inc
movs
je
xchg
clc
pop
xchg
push
addr16
mov
cld
stc
outs
xchg
dec
addr16
shl
enter
ss
add
mov
data16
jle
in
outs
inc
xchg
mov
add
sub
(bad)
xchg
retf
add
dec
jg
pusha
push
aaa
fwait
sub
sub
dec
inc
mov
sti
(bad)
xchg
popa
xchg
movs
loop
jg
fsub
stos
faddp
retf
cmp
and
mov
(bad)
call
adc
cli
pop
stos
cmp
mov
fs
sub
push
ds
push
xchg
inc
ins
jp
in
cmps
jmp
addr16
inc
sbb
xchg
sbb
fisub
enter
data16
dec
imul
push
sbb
pop
adc
(bad)
in
hlt
mov
lahf
xchg
mov
mov
xchg
cld
sar
adc
scas
adc
std
not
and
xor
xchg
das
mov
or
in
lahf
inc
adc
dec
test
fwait
jo
pop
fdiv
dec
jnp
repz
popf
ret
and
fisub
clc
hlt
test
bound
push
or
(bad)
test
inc
inc
push
stc
std
push
pop
into
(bad)
fbstp
gs
data16
cmp
in
sbb
mov
lahf
popa
add
gs
js
lock
mov
shr
and
ret
xor
cmp
add
rcl
(bad)
out
dec
push
sub
aam
cmp
add
lds
xor
inc
out
scas
pminub
pop
dec
mov
retf
mov
loopne
jb
push
arpl
fs
mov
imul
in
ror
clc
jle
ins
and
xchg
inc
cmp
mov
test
fisub
cmp
iret
jmp
leave
sub
fidivr
ins
sbb
push
fldcw
push
xchg
jp
pop
imul
movs
bound
les
mov
lock
xchg
inc
pop
imul
xor
xchg
stos
mov
jb
fwait
out
push
cmp
and
fsub
xchg
xchg
scas
ret
push
fsubr
cmp
push
cmps
inc
pop
sahf
jne
dec
fmul
and
stos
cmp
inc
psllw
and
sub
xchg
nop
repz
fiadd
movs
(bad)
je
push
jo
xor
dec
adc
or
mov
xchg
push
iret
leave
inc
bnd
xchg
xor
bound
xchg
dec
adc
mov
jne
jns
add
mov
xchg
jg
je
push
arpl
pop
jae
int3
xchg
xchg
pusha
sbb
in
test
jo
cmp
in
fld
(bad)
les
(bad)
ds
aas
sbb
clc
adc
dec
push
sar
xor
pop
scas
and
mov
cmps
test
cmps
jge
aas
and
jnp
push
lock
pop
sub
stc
xchg
mov
mov
fcom
xchg
fwait
js
push
in
dec
jmp
sub
addr16
xchg
jge
ds
dec
loope
rcr
int3
stos
mov
adc
ret
enter
repz
inc
mov
daa
mov
add
or
add
and
cli
stos
lods
cmp
mov
and
mov
sub
xor
push
sub
fwait
or
add
mov
dec
push
dec
inc
and
adc
push
pop
jg
(bad)
movs
jp
mov
ins
mov
cli
dec
call
xchg
iret
sbb
das
repnz
test
mov
ja
aaa
fidiv
jbe
adc
std
fidiv
jg
sub
fisub
pop
jnp
int3
sbb
sbb
rcr
(bad)
lock
jnp
cmc
(bad)
xor
jg
popa
repnz
inc
push
(bad)
scas
xor
jmp
or
push
outs
movs
adc
jmp
daa
inc
ret
xor
xor
imul
mov
and
xor
sahf
test
push
push
lds
jl
jmp
jp
mov
pusha
stc
and
dec
jmp
or
inc
adc
cmp
add
sbb
jle
cwde
push
xor
xchg
pop
ins
jns
cmovle
jo
sbb
fstp
xor
or
mov
jmp
rol
pop
ret
gs
sbb
stos
pop
retf
xor
adc
jmp
cmp
mov
lea
(bad)
xor
in
out
ds
mov
add
push
mov
dec
jmp
pop
pop
mov
ins
shl
daa
inc
rol
mov
pop
or
shr
mov
ds
shl
mov
out
mov
xchg
fild
pop
sahf
dec
(bad)
outs
cdq
lock
pop
fidiv
jg
stos
xor
outs
mov
test
or
in
sahf
jl
test
arpl
and
sub
retf
xor
mov
pushf
sbb
in
loopne
add
in
mov
xor
fmul
out
cmp
sub
push
adc
pop
pop
aaa
sbb
add
lahf
fadd
retf
inc
lods
repnz
push
push
mov
je
xor
ret
jno
sub
adc
add
aad
mov
std
dec
jns
xor
xor
adc
imul
push
dec
jbe
cdq
imul
test
cs
leave
mov
and
sahf
push
push
bound
jae
or
ins
movs
scas
popa
repnz
pop
sbb
add
cmp
loope
jno
jp
dec
fnsave
pop
mul
xchg
leave
xor
sub
ins
sub
aaa
cmp
popa
mov
jns
in
clc
jnp
shr
fnstenv
mov
lods
push
mov
adc
dec
ret
xor
mov
or
cmps
shl
aad
repz
jns
inc
outs
ins
sub
add
lods
dec
ret
je
push
sub
scas
push
mov
stc
add
fidivr
sbb
xchg
xor
scas
pop
cs
ins
inc
sub
es
sbb
out
ficomp
mov
inc
mov
fist
cdq
mov
push
std
xchg
outs
mov
pop
mov
icebp
popa
xchg
mov
add
add
rol
push
cmp
pushf
popf
sub
gs
loop
pushf
inc
out
and
pop
jle
sub
push
lods
xchg
cwde
ror
pop
cs
cmp
mov
push
xchg
repz
inc
xor
cmps
mov
jne
lods
outs
push
inc
stos
pop
fist
stos
cmps
pop
dec
xchg
(bad)
in
lds
repnz
xchg
adc
in
sar
aas
mov
xchg
inc
das
aam
jo
inc
cwde
jo
idiv
stos
sbb
shr
sub
test
shl
loopne
pop
xchg
div
cmp
psubq
jp
mov
js
js
clc
mov
nop
xchg
inc
cmp
dec
pop
aam
daa
das
inc
sbb
mov
enter
jmp
add
lock
pop
add
bound
xchg
loopne
iret
(bad)
test
aaa
mov
fcomp
imul
pop
outs
pop
inc
sub
mov
je
push
mov
mov
(bad)
push
sub
adc
mov
add
shl
test
aad
or
sub
sub
imul
xor
xchg
into
ss
and
test
jnp
add
gs
xor
cmp
mov
mov
mov
push
cmp
fadd
xor
push
adc
loope
mov
or
imul
jb
sbb
xchg
xchg
jnp
adc
scas
stos
pop
les
cli
movs
pop
ud0
fcomp
imul
sub
push
xor
inc
das
ins
mov
das
(bad)
cmp
jbe
mov
cmp
cmps
std
js
jo
and
inc
and
pusha
popa
inc
(bad)
int
in
retf
or
call
and
jmp
nop
mov
sbb
xchg
or
cmp
xchg
stc
push
cmp
cmp
sub
sub
and
sbb
retf
add
push
les
mov
int3
cdq
fdiv
ds
retf
xor
sbb
into
nop
test
(bad)
and
jne
scas
inc
xchg
push
fs
pusha
push
aas
fisub
and
or
aad
push
cmp
add
shl
rol
sbb
(bad)
test
dec
cmp
mov
aam
cmc
arpl
pop
int3
and
dec
out
sbb
push
sti
sbb
push
les
cmp
jno
adc
sbb
cwde
into
mov
mov
add
or
pop
fs
mov
cwde
cmp
inc
add
adc
jp
cmp
sbb
and
mov
repnz
gs
xlat
(bad)
mov
fild
jmp
xchg
cmc
push
pop
jne
cwde
lahf
in
repz
jo
dec
sbb
mov
jmp
jne
fild
repz
movs
sub
shl
push
das
pop
mov
dec
js
fbld
jge
fdiv
push
fwait
inc
rol
xor
mov
adc
pop
loope
xchg
jl
jle
xlat
jl
ins
xor
es
dec
cmp
mov
sub
pop
mov
retf
push
arpl
cmps
popa
es
ror
jp
imul
scas
loop
dec
mov
in
icebp
(bad)
xchg
ins
jne
retw
ss
ficom
(bad)
gs
test
mov
dec
add
dec
pop
push
jb
pop
inc
xor
movs
shr
xchg
jmp
jb
push
mov
fbld
stos
jg
mov
jbe
in
shr
push
xchg
mov
mov
cdq
bound
fist
retf
not
fst
sahf
je
mov
retf
jbe
les
push
repnz
jb
and
cs
(bad)
rcl
stc
mov
jmp
(bad)
aad
in
hlt
or
int3
mov
mov
addr16
pop
sub
push
cmp
dec
nop
xor
jmp
leave
jmp
cmc
loopne
fdiv
clc
ror
popf
and
aad
sub
outs
rol
clc
mov
sub
add
sbb
cmp
cdq
mov
es
push
ret
clc
and
or
pop
fistp
arpl
pop
lahf
outs
movs
fild
add
xchg
mov
outs
arpl
outs
pop
mov
fwait
xor
lods
xor
repz
call
mov
push
arpl
or
inc
and
jnp
and
sbb
out
mov
in
test
outs
je
add
fsub
push
push
adc
shl
adc
outs
xor
xchg
xchg
or
paddb
mov
call
pop
shl
hlt
lea
ds
prefetch
or
jg
popf
xchg
xchg
jnp
inc
loop
pop
loopne
out
(bad)
jge
out
and
jmp
cmp
sub
push
sub
fdivr
into
cmps
mov
inc
adc
aad
outs
cmp
scas
inc
les
jb
xor
push
ds
pop
loope
push
test
mov
lahf
mov
jb
or
out
aam
addr16
jnp
fs
fmul
and
fdiv
adc
fst
sbb
stos
sbb
fwait
addr16
inc
mov
scas
pop
add
leave
adc
fcmovu
(bad)
ds
add
mov
or
pop
sub
mov
jecxz
loopne
(bad)
out
push
pop
scas
loope
arpl
or
jo
arpl
ins
xor
(bad)
lock
sbb
shl
(bad)
in
addr16
into
movs
out
addr16
popw
mov
fstp
int3
ss
es
push
lds
test
jo
imul
adc
ds
xor
sub
sbb
adc
dec
call
aas
jp
inc
dec
inc
adc
xchg
pop
cmp
dec
std
inc
int3
cmps
cmp
imul
sbb
dec
xor
xchg
cmps
outs
mov
call
push
mov
(bad)
pop
fsubr
adc
shl
in
cmc
pop
fcom
test
movs
and
inc
xchg
rcr
popa
dec
ds
xor
dec
lods
pop
or
nop
sub
pop
add
and
push
popa
push
mov
inc
sbb
mov
jp
adc
or
out
sahf
mov
cmp
add
add
imul
inc
mov
mov
gs
mov
(bad)
cmp
popf
popa
push
pop
inc
mov
jmp
pop
dec
sar
push
cli
dec
cs
ret
outs
lea
adc
fcomp
sar
mov
lea
loopne
sbb
inc
(bad)
jne
out
pop
sbb
hlt
or
xor
repz
inc
ffreep
sub
add
stos
and
sbb
mov
div
gs
mov
mov
es
imul
dec
sub
jmp
xchg
push
add
mov
add
addr16
scas
lea
imul
pop
pop
sbb
aad
addr16
pop
les
(bad)
loopne
jle
bound
test
and
xchg
fnstsw
mov
pop
aad
sub
sbb
or
and
jmp
ret
mov
hlt
mov
sti
xchg
cld
fninit
xchg
fcmovnb
jns
movs
pop
add
pop
push
jb
nop
inc
xchg
std
lea
push
les
rcr
ror
jl
mov
lahf
clc
int
outs
loopne
xchg
bound
and
inc
cmp
sbb
fstp
adc
cmp
add
adc
jmp
push
pop
pop
inc
mov
retf
cmp
das
sbb
adc
or
mov
xor
mov
retf
inc
in
adc
push
mov
push
jb
jbe
stc
cmp
pop
loopne
push
addr16
aad
mov
out
inc
pop
push
mov
or
pop
mov
xchg
mov
iret
xchg
add
xor
mov
push
enter
jo
sbb
imul
dec
outs
mov
or
cdq
js
adc
scas
aad
pop
mov
and
jo
dec
jge
outs
or
lahf
xor
xlat
shr
(bad)
jne
xchg
fnstsw
cwde
or
pop
enter
sbb
mov
ror
repnz
inc
sub
stos
(bad)
dec
icebp
(bad)
dec
shr
cld
(bad)
(bad)
cmp
popf
cwde
repnz
ret
lods
xor
ins
iret
mov
cld
clc
pop
sub
dec
shl
and
inc
out
sub
mov
aaa
add
div
in
or
jns
cmp
fnstenv
add
mov
movs
adc
fwait
gs
iret
in
jns
lock
cmp
iret
or
rol
mov
stos
and
popa
mov
push
lock
sbb
xchg
in
adc
(bad)
mov
mov
loopne
cs
cld
jmp
fst
ins
mov
or
jae
fisub
mov
mov
pushf
shl
xchg
push
test
int
xchg
or
push
out
cmp
mov
push
xor
xchg
fwait
mov
pop
retf
pop
in
sbb
inc
fwait
mov
cmp
dec
sub
and
pop
leave
and
pop
cdq
jae
aas
(bad)
jb
xchg
sbb
ror
push
ds
adc
sub
mov
push
lahf
test
cmp
or
xchg
sbb
add
inc
stc
jge
dec
mov
loope
pop
sub
repnz
sub
mov
cmps
xor
xchg
and
inc
es
into
xchg
inc
in
jns
ins
cmp
in
mov
ja
arpl
pushw
std
mov
jne
adc
push
sub
jnp
in
jge
rcr
into
mov
or
cmp
adc
push
(bad)
cmp
add
mov
js
add
mov
fimul
xor
pushf
dec
rcr
add
addr16
push
retf
cmp
(bad)
xor
int3
pusha
cld
leave
inc
pushf
xor
out
pop
(bad)
outs
mov
sub
(bad)
cmp
and
pop
rcl
ins
pop
sbb
loopne
int3
xor
and
xchg
add
pop
push
dec
pop
stc
fild
add
ja
push
fild
pop
scas
pop
xor
dec
sti
out
mov
shl
or
jbe
sub
scas
js
je
ss
inc
fst
mov
inc
dec
push
add
push
mov
lods
sti
jo
pop
mov
out
out
scas
xlat
jne
nop
sub
sub
push
xor
jl
std
pop
les
(bad)
aas
test
jg
cmc
imul
adc
or
outs
sbb
jns
lods
cmp
dec
popf
and
xchg
(bad)
jns
and
loope
fdiv
push
mov
imul
xchg
stos
or
addr16
or
stos
mov
and
add
mov
retf
pop
lods
jmp
or
jmp
(bad)
rep
add
jne
mov
pop
(bad)
or
or
and
lahf
div
lods
fs
out
jge
fwait
and
popf
(bad)
fmul
(bad)
and
add
out
test
xchg
loop
in
scas
stos
mov
push
sub
cmps
add
imul
adc
inc
xchg
pushf
fcomp
push
fmul
jmp
movs
fnstsw
adc
in
sbb
jmp
(bad)
xchg
test
jno
lods
push
loope
inc
xchg
inc
fmul
jp
loope
pop
sub
and
sbb
retf
cmp
jbe
inc
cmp
popa
fcom
mov
fucomi
sub
pusha
sahf
sbb
lock
aam
in
dec
jno
jge
adc
mov
push
xlat
sbb
cdq
(bad)
xchg
stc
xchg
cmp
and
mov
ffree
mov
sbb
push
add
sbb
dec
outs
in
imul
pop
call
lods
pop
mov
dec
mov
retf
cld
xor
xchg
mov
xchg
mov
outs
mov
adc
mov
cli
call
cmp
outs
clc
pop
shl
adc
push
fimul
xchg
hlt
sub
lahf
xchg
mov
sub
int
cmp
xchg
fwait
adc
lock
mov
es
inc
pop
xor
aaa
mov
ret
jns
rcl
fxch
stos
mov
jnp
repz
mov
push
push
cmp
cmp
movs
pop
je
lods
outs
xchg
push
adc
xchg
sbb
outs
repz
pop
add
sbb
xor
shl
xchg
inc
test
mov
js
or
fnstenv
add
inc
push
xchg
scas
clc
dec
imul
fcmovnu
in
sub
jl
aaa
std
in
xor
xor
std
jnp
mov
loope
jge
imul
(bad)
ficom
inc
mov
aas
sbb
push
addr16
inc
ins
rcr
call
xor
adc
popa
andps
add
push
mov
ss
ss
push
pop
inc
out
cmp
lock
jmp
out
inc
fldcw
out
lea
leave
fcmovnu
inc
push
inc
std
ficom
outs
dec
push
mov
cmp
cmp
xor
imul
push
fdiv
call
outs
mov
jae
add
jp
lahf
cld
ins
fstp
das
cmp
dec
pop
sub
lods
in
xchg
mov
leave
fsin
mov
mov
fmul
dec
adc
adc
sbb
movs
xor
ss
add
(bad)
outs
call
add
je
xor
pop
ror
xchg
sti
xchg
adc
and
jb
ja
and
stc
aam
imul
fwait
jns
pop
lahf
sbb
stos
outs
adc
push
dec
inc
mov
fnstsw
push
bound
add
cwde
mov
pop
and
add
or
dec
sti
aas
aam
cmp
ss
ds
push
push
out
mov
test
jg
mov
sbb
scas
push
xchg
fs
sbb
popa
adc
(bad)
xor
push
jmp
dec
ds
ds
(bad)
arpl
sbb
mov
dec
movs
sbb
nop
pop
fnsave
pop
in
xchg
push
sbb
test
imul
cmp
sbb
leave
dec
frstor
cmps
dec
add
test
loope
jo
es
cmp
adc
xchg
pop
adc
jp
jns
(bad)
and
cmps
mov
xchg
daa
gs
jge
mov
mov
push
fdivrp
and
xor
inc
cmp
hlt
int3
add
imul
push
mov
repz
stos
xchg
scas
cmc
dec
repnz
es
dec
out
and
jae
je
or
popa
rol
sub
and
lock
ret
mov
jg
call
jp
loopne
mov
fs
inc
sahf
es
rep
ins
in
fisub
sub
cs
(bad)
lahf
shl
shr
xchg
or
bnd
arpl
fcomp
inc
or
add
mov
jae
push
xchg
add
xchg
xor
scas
call
ins
dec
dec
and
into
push
in
pop
jbe
mov
cmc
xchg
mov
fild
imul
mov
ret
push
mov
enter
sar
mov
inc
fs
xchg
jno
xchg
jae
out
je
inc
mov
out
repz
loope
push
sbb
inc
or
push
xor
ja
add
mov
and
adc
mov
push
adc
cmp
ret
or
or
pop
mov
inc
out
push
push
mov
xor
ja
mov
fdivr
adc
cmc
adc
out
(bad)
push
push
aad
jae
xor
inc
xor
jl
lock
or
repz
jbe
adc
or
ret
stc
out
mov
jbe
jmp
movs
fld
push
adc
sbb
and
or
dec
jns
sub
test
mov
clc
loopne
in
or
pusha
fmul
mov
outs
sbb
push
fsubr
push
js
test
cmps
dec
addr16
sbb
jbe
pushf
xchg
and
(bad)
jmp
int3
ins
mov
sbb
mov
push
aam
ja
mov
fmul
mov
call
outs
scas
es
pusha
push
pop
ficom
rcr
ins
cmc
sbb
jge
cmp
cmps
mov
mov
mov
leave
and
repz
push
icebp
out
aaa
test
test
add
fisttp
(bad)
xor
lods
inc
and
and
shr
jl
stos
int3
scas
add
daa
or
cmp
das
inc
pusha
int3
ret
cmp
add
xchg
xor
sahf
cwde
xor
mov
dec
fdivr
add
test
mov
cdq
std
(bad)
hlt
push
and
fistp
daa
xor
scas
icebp
pop
dec
jp
jno
js
arpl
mov
mov
push
push
and
pop
jnp
(bad)
cmp
out
pop
jno
dec
cmps
ja
xlat
clc
mov
lods
push
push
push
ror
iret
and
aad
fcomp
repnz
dec
cmc
cmp
push
push
loopne
sbb
je
sbb
fsubr
ficom
dec
push
mov
(bad)
mov
shl
iret
push
popa
xchg
mov
nop
pushf
mov
jp
retf
fdivr
das
or
fisubr
jg
arpl
(bad)
jne
add
xchg
and
sbb
push
xor
scas
test
or
je
pop
arpl
sbb
repnz
aam
inc
sbb
jbe
icebp
xor
jnp
pop
scas
repz
add
icebp
dec
int3
cmps
aas
jns
out
popf
les
adc
mov
xor
test
mov
popa
cmp
adc
cmp
mov
dec
out
sbb
or
imul
aam
popf
(bad)
push
dec
adc
cdq
popa
mov
and
mov
xor
add
adc
jmp
popf
push
and
(bad)
push
ror
(bad)
fdivr
popf
pop
notrack
sbb
les
aad
dec
jge
(bad)
aam
scas
je
pop
(bad)
xchg
xchg
jge
mov
mov
ffree
(bad)
fimul
fimul
(bad)
neg
inc
sbb
cmp
add
shl
mov
fild
push
dec
int
lock
and
push
fdiv
dec
add
push
jo
and
loope
rcr
jle
adc
in
pop
mov
cmp
rcl
ror
fcomp
shl
dec
rcl
or
aas
loope
inc
ins
out
mov
dec
dec
addr16
sub
sbb
dec
add
mov
adc
cmp
mov
adc
aas
fild
inc
sbb
div
aam
inc
fsubr
in
fyl2xp1
imul
outs
cmp
dec
mov
dec
out
pop
inc
lods
es
xor
adc
inc
lock
mov
scas
ins
sub
inc
popa
add
jo
outs
addr16
fbld
push
bound
cli
xchg
icebp
out
add
mul
loope
jmp
xchg
dec
add
sbb
inc
retf
and
jge
push
push
sti
ds
mov
(bad)
adc
lds
dec
jns
scas
mov
stos
cli
jge
push
stos
dec
fmul
cmp
jge
pusha
xor
scas
jmp
or
push
int3
rcl
mov
movs
nop
mov
in
mov
pop
push
mov
fdiv
dec
bts
push
mov
xlat
adc
jmp
iret
dec
jo
push
pusha
mov
dec
sub
cmp
outs
mov
aas
mov
xchg
ja
mov
test
inc
xchg
dec
cmp
aaa
pxor
mov
repnz
ins
xchg
jge
mov
push
cs
bound
mov
jae
sahf
(bad)
mov
int3
push
enter
mov
jecxz
inc
push
xor
mov
or
out
mov
bound
outs
cwde
xor
inc
pop
int
ja
mov
out
stos
test
add
call
adc
cmp
xor
and
ret
xchg
fmul
sbb
ins
inc
adc
cmp
int3
pop
stos
push
nop
inc
retf
mov
cmps
test
inc
push
jne
cmp
ret
scas
or
call
xchg
mov
add
add
std
mov
in
popf
push
scas
xchg
movq
pop
sbb
push
popf
outs
repnz
and
pop
gs
and
inc
je
xor
cmps
or
mov
xor
and
cmp
mov
push
pop
es
dec
int3
mov
sbb
push
xchg
into
sub
pusha
loope
pop
in
sub
cmp
mov
dec
outs
sub
inc
popa
mov
call
cdq
adc
aas
fisttp
mov
inc
xlat
push
dec
dec
add
mov
in
call
or
movs
adc
jb
cmp
rcl
jecxz
popa
cmp
out
mov
mov
dec
or
addr16
add
sub
jg
retf
jecxz
mov
or
mov
xor
cmp
je
cmp
jg
jns
push
jno
mov
push
ins
cmp
sti
aas
gs
sub
das
sbb
mov
xchg
push
fcmovnu
xchg
cmp
imul
and
mov
lods
lds
cmp
cmp
aam
or
sbb
push
adc
iret
adc
jb
fnstsw
retf
or
sbb
add
mov
ror
or
pop
gs
xchg
xchg
call
aad
xor
mov
hlt
ins
sub
jno
enter
mov
xor
out
push
stos
lock
test
fs
mov
cmc
std
sub
loop
into
sub
popf
in
inc
aaa
sbb
cmp
mov
out
push
push
sub
(bad)
sbb
add
dec
and
mov
xchg
cld
xor
cwde
mov
jle
cmp
int
sub
inc
sbb
mov
inc
out
jl
sub
xor
cmp
pop
add
inc
or
mov
jge
into
or
xchg
pop
xchg
dec
push
rcl
mov
in
mov
or
or
lds
or
not
fcmovbe
pop
mov
loope
or
int
push
or
bound
out
dec
repnz
frstor
vpcmpgtw
pop
add
in
inc
cld
imul
aaa
(bad)
push
fwait
pop
scas
repnz
fdivr
ret
jp
inc
or
and
leave
dec
aad
mov
rol
push
mov
xchg
call
add
dec
pop
xchg
dec
jmp
dec
pop
jne
cdq
xor
add
(bad)
scas
inc
jae
sub
jno
xchg
sub
imul
add
inc
jle
pop
outs
ret
enter
add
retf
or
loop
out
outs
icebp
add
xor
leave
xor
cwde
stos
enter
arpl
cld
(bad)
pop
packsswb
sub
call
or
and
inc
add
aad
aad
sbb
jno
ss
nop
mov
in
mov
in
xor
gs
ins
scas
ds
push
xchg
jmp
clc
aas
test
ins
mov
dec
xor
pop
inc
mov
and
cmc
aad
cmps
ds
xor
(bad)
fist
std
pop
jle
(bad)
in
xlat
les
or
xor
sub
lea
pop
inc
popa
hlt
(bad)
sub
inc
retf
fnsave
xchg
push
xor
cmps
xor
push
sub
jb
movs
push
in
inc
add
add
nop
pop
push
scas
cmp
fwait
inc
fwait
into
stc
mov
in
not
fwait
jmp
inc
push
imul
and
(bad)
adc
stos
stc
(bad)
out
cmp
pop
sub
sbb
push
pop
test
outs
add
popf
inc
add
jmp
movs
(bad)
(bad)
cld
js
sub
pop
adc
push
addr16
retf
or
nop
js
addr16
fld
pop
aaa
icebp
xchg
mov
imul
stc
and
daa
sub
in
rcl
lea
xchg
add
cmp
adc
lds
dec
xor
mov
dec
push
sbb
outs
sub
pop
ss
test
fwait
loope
adc
push
sub
retf
mov
cdq
xchg
add
sbb
lods
fisubr
mov
in
add
push
fsubr
xchg
cmp
cdq
jae
sub
push
or
add
dec
inc
mov
ret
stos
pop
mov
cld
mov
push
push
mov
push
mov
(bad)
mov
(bad)
adc
adc
xchg
sub
add
call
add
clc
leave
push
or
(bad)
sar
std
jle
mov
lods
inc
shr
xchg
call
or
jns
sub
not
mov
cdq
mov
adc
mov
ins
add
lds
cmp
xor
addr16
jmp
ins
pop
mov
cs
push
fisub
call
inc
in
xor
mov
push
pushf
lods
(bad)
and
xchg
outs
ret
sahf
jo
stos
arpl
pop
mov
test
jmp
fld
cli
out
cli
in
lea
in
aas
jo
test
and
cmc
jl
sbb
das
cmp
push
cli
int
xchg
shl
aam
test
cdq
in
retf
sub
imul
jb
jmp
mov
ret
hlt
push
aad
fcomp
dec
jae
in
cli
xchg
pop
aam
in
pop
xchg
cmp
dec
mov
xchg
inc
xchg
popf
dec
pop
pop
or
rol
push
imul
mov
call
or
call
loope
and
ss
push
inc
sbb
(bad)
fsub
jp
stos
stos
fwait
mov
retf
ins
cwde
movs
xchg
popf
mov
fld
cmps
in
mov
mov
cmp
push
out
mov
outs
lods
xchg
or
outs
outs
pop
pop
xchg
(bad)
jnp
cmps
ds
repnz
push
stos
jno
(bad)
test
imul
into
retf
psrlq
ins
cmp
mov
sbb
xlat
push
stos
(bad)
push
cmp
mov
das
dec
xor
mov
mov
dec
sbb
cmp
ds
shl
mov
test
(bad)
popa
jmp
lods
repz
je
inc
pop
(bad)
cmp
add
cmp
rol
mov
outs
jecxz
es
cmp
cwde
sbb
cs
int3
lods
(bad)
in
ins
fimul
push
pusha
(bad)
dec
sbb
mov
repz
in
scas
inc
(bad)
jne
xor
jno
rcr
pop
stos
call
xlat
mul
dec
pavgw
push
push
les
push
adc
or
add
test
movs
and
loopne
and
dec
test
inc
jae
push
add
fcomp
fdivp
jnp
adc
pop
test
sbb
dec
mov
mov
nop
ja
and
pop
xor
xchg
or
test
and
test
in
sar
and
pop
xchg
outs
adc
mov
xchg
leave
(bad)
sti
xchg
sbb
pusha
(bad)
xchg
xchg
seta
mov
hlt
imul
dec
mov
popa
adc
inc
xchg
mov
push
and
(bad)
stc
adc
scas
or
(bad)
fcom
push
xchg
push
pop
(bad)
jae
push
js
(bad)
push
mov
pop
rcl
xor
sbb
mov
sbb
ret
pop
adc
pop
cmp
dec
push
sub
clc
stos
test
inc
(bad)
pushf
test
ror
jmp
add
adc
xor
jle
push
xchg
or
fistp
pop
imul
loopne
dec
inc
int3
jo
sub
inc
mov
aad
pop
fwait
jp
fisttp
xchg
mov
inc
mov
int
cmp
or
mov
add
outs
sub
mov
xchg
(bad)
pop
mov
or
je
int
pusha
fistp
out
xor
out
dec
pop
mov
push
arpl
cmc
dec
jbe
ins
inc
scas
hlt
sub
scas
ja
mov
or
arpl
call
add
sub
out
lods
icebp
mov
mov
cmc
mov
cmc
je
into
daa
in
jbe
dec
in
xor
xchg
ins
in
mov
mov
lods
ss
mov
jge
mov
cmp
mov
test
pop
push
or
jecxz
inc
cmp
cs
out
push
sub
add
mov
cmp
iret
fldenv
mov
pop
aam
cmp
push
xchg
mov
mov
mov
dec
cmp
dec
adc
iret
(bad)
ret
cwde
fild
mov
pop
sbb
loop
pop
jl
fmul
inc
push
mov
and
int3
cmp
fist
and
jbe
das
sub
mov
xchg
mov
xchg
mov
sub
sar
aaa
mov
hlt
cmps
aas
(bad)
xchg
scas
mov
and
(bad)
cld
add
daa
jnp
aaa
and
rol
xchg
call
nop
sub
(bad)
popf
cmps
ret
cmc
adc
cmp
inc
push
in
cmp
std
jecxz
xchg
daa
idiv
sbb
cwde
fisubr
pop
pop
sbb
adc
push
repz
aaa
fcomp
jle
xchg
fs
and
call
or
cmp
cdq
test
jecxz
add
cmp
mov
xor
inc
das
mov
add
(bad)
je
xchg
and
retf
lods
cmp
jmp
push
jg
stos
mov
pop
mov
in
popf
scas
out
adc
pop
nop
mov
inc
and
lods
inc
mov
adc
movs
sub
add
out
jle
adc
test
and
mov
fs
cli
sbb
sub
dec
jge
dec
ss
mov
adc
sbb
test
adc
test
arpl
cli
pop
or
lods
fcom
mov
pop
sbb
fwait
dec
test
ret
sti
mov
push
xor
jmp
push
dec
xor
cmp
pop
lahf
lock
or
mov
adc
xlat
or
lea
cmps
push
inc
aad
cmp
jo
mov
sbb
aad
movs
xor
je
sub
jo
fstp
sbb
push
stos
or
scas
aaa
pop
(bad)
test
inc
pop
lea
test
xchg
adc
ficom
inc
push
icebp
sub
loope
fs
inc
inc
not
mov
add
sbb
mov
or
sub
(bad)
jl
sbb
call
mov
pop
mov
cmp
nop
or
test
scas
pop
in
cmp
adc
jp
aaa
lds
call
push
ja
sbb
test
jnp
shl
mov
data16
mov
inc
push
mov
inc
inc
cmps
icebp
shr
(bad)
mov
inc
cmp
push
outs
popa
sub
ret
pop
jle
mov
ret
xor
or
fst
stos
mov
(bad)
push
call
dec
pushf
sti
out
arpl
int3
ins
pushf
dec
popa
sbb
cmp
mov
cmc
mov
aad
pop
test
test
jb
cmp
sbb
aas
mov
mov
int
icebp
push
call
add
sub
mov
or
push
gs
push
(bad)
popa
add
mov
dec
dec
sub
popa
ret
sub
fisub
fwait
sub
or
out
ins
clc
jmp
and
inc
out
sub
xor
shl
dec
stc
push
cmp
jae
push
dec
pop
(bad)
push
(bad)
push
icebp
out
push
pop
mov
(bad)
arpl
inc
pop
push
in
in
or
push
leave
bound
ret
xchg
fiadd
dec
mov
fnstsw
arpl
mov
lahf
inc
inc
(bad)
jbe
fwait
push
jle
add
xchg
push
add
sub
test
mov
jbe
jae
xchg
int3
fild
mov
ss
mov
fcom
cmp
fnstenv
fist
jle
retf
fisttp
imul
sub
call
dec
rol
sub
cmp
fld
shl
pop
(bad)
adc
fwait
mov
(bad)
sub
movs
frstpm(287
add
xor
out
or
call
add
outs
imul
lahf
(bad)
and
adc
stos
push
xor
mov
cwde
sbb
in
push
xchg
jg
cmp
jge
pop
fs
xor
add
neg
mov
fistp
aaa
and
fist
fsub
(bad)
xor
bound
xchg
and
jmp
(bad)
lea
es
cmc
dec
rcr
jg
xor
and
mov
cmc
xchg
enter
xchg
mov
fdivr
jnp
dec
xor
xlat
or
fdiv
idiv
in
jno
pop
scas
mov
cmp
cmp
js
pop
jp
xchg
sub
retf
pop
cwde
fld
jmp
loop
pushf
jne
out
shl
and
into
dec
mov
jno
cld
and
pop
jno
jno
xor
jl
and
stos
xor
xor
jg
mov
in
dec
ds
fdiv
into
jmp
loop
int3
in
std
in
push
jno
mov
adc
mov
mov
pusha
mov
sbb
es
mov
retf
push
jge
mov
out
jb
pop
or
xchg
xchg
pop
cmp
jp
or
lods
(bad)
and
xor
retf
jp
jmp
cmp
push
bound
jp
or
cld
sbb
jbe
movs
test
in
xor
push
sub
je
inc
mov
popa
inc
in
jmp
cmc
in
pop
inc
fwait
sbb
mov
adc
dec
xlat
adc
jmp
cmp
xchg
sbb
mov
shl
loope
and
(bad)
mov
and
and
xchg
pop
mov
mov
ss
aam
inc
inc
leave
gs
fild
aam
stc
or
inc
and
(bad)
lock
mov
popf
inc
(bad)
mov
push
push
jmp
mov
stc
out
mov
push
(bad)
bound
lahf
sbb
mov
sbb
fild
push
lods
add
sbb
ror
bound
mov
das
test
retf
imul
dec
dec
pop
inc
pushf
icebp
sbb
mov
std
outs
popa
retf
mov
mov
pushf
xchg
push
mov
cmps
scas
test
or
bound
pop
mov
(bad)
idiv
scas
add
(bad)
pop
mov
mov
in
or
mov
mov
or
xor
icebp
push
mov
mov
sbb
(bad)
dec
scas
sbb
mov
xor
pop
fst
(bad)
retf
addr16
(bad)
aaa
mov
adc
adc
inc
jnp
hlt
add
mov
pop
imul
dec
jnp
std
xchg
dec
mov
daa
pop
mov
inc
in
adc
fcomp
loopne
cmp
jnp
repnz
cld
test
scas
sahf
mov
fnstsw
push
inc
push
into
test
xor
rol
mov
or
lock
dec
fisttp
xor
mov
movs
adc
xchg
ins
fwait
test
jb
and
outs
jg
and
adc
es
out
mov
dec
cmp
xor
push
loopne
and
jnp
rcr
mov
aas
adc
push
test
cmp
mov
ret
out
and
adc
add
inc
dec
test
popf
dec
(bad)
or
bound
xor
adc
ins
xchg
xlat
and
add
mov
mov
pop
(bad)
or
out
rcl
cmp
jle
inc
jne
cmp
pop
sbb
sbb
cs
xchg
ficom
jge
jmp
fst
repnz
xor
fs
retf
in
sar
inc
lods
dec
stos
adc
and
(bad)
and
sub
xlat
stc
mov
dec
xchg
inc
ins
lock
mov
sar
sub
cmp
iret
fmul
jo
mov
xchg
adc
aaa
jl
daa
int
pop
(bad)
addr16
sub
into
pop
(bad)
imul
sub
cmp
pop
cmp
mov
in
jnp
arpl
outs
pusha
push
call
cmp
call
shl
adc
pop
cmp
jns
pop
dec
adc
in
adc
xor
aaa
jnp
and
and
push
jno
and
xchg
lds
inc
out
mov
hlt
lea
scas
cmp
mov
inc
dec
push
mov
imul
and
repz
fwait
jno
stc
test
sub
das
mov
aam
sub
pop
inc
xor
into
fs
cmps
scas
mov
xchg
scas
lea
sbb
leave
xor
stos
mov
push
fdivr
mov
sahf
jl
and
sar
add
adc
mov
in
repnz
int
mov
iret
icebp
jb
mov
mov
jmp
add
mov
call
xchg
jne
sbb
mov
dec
add
call
hlt
rcl
or
call
outs
adc
sbb
mov
ss
mov
pop
mov
stos
addr16
fdiv
fdiv
add
ret
out
shl
fdiv
(bad)
push
and
adc
sbb
mov
push
push
neg
ror
adc
std
pop
outs
push
cmp
xor
mov
push
rsqrtps
lea
ret
inc
xchg
sub
add
int
aaa
lds
sub
icebp
pop
adc
cmp
mov
cwde
add
and
dec
sub
(bad)
ret
cmp
sti
adc
dec
or
inc
sahf
cmp
adc
mov
pop
mov
xchg
dec
(bad)
lock
cmp
adc
xor
jae
sub
out
add
out
sahf
inc
cmps
dec
and
jl
loope
adc
inc
mov
into
pop
xor
jmp
jmp
sbb
sub
fstp
(bad)
rcr
jg
lock
outs
sub
mov
out
cmp
cmps
aad
(bad)
xor
mov
jno
and
inc
fidivr
dec
sti
ss
inc
mov
js
push
les
mov
stos
rcr
pop
lds
sub
xor
cmp
push
xor
mov
mov
rep
into
rol
jp
cwde
push
pop
and
pop
push
mov
cmp
in
adc
icebp
jbe
leave
inc
shl
stos
mov
sub
mov
ds
pop
adc
dec
stc
sbb
imul
xchg
out
movs
pop
cs
and
xor
hlt
imul
jbe
aam
loop
xchg
cs
jae
sbb
sub
or
sub
shr
sbb
idiv
add
inc
jae
(bad)
mov
xchg
xchg
iret
mov
and
sbb
pusha
jo
jl
mov
jb
int
cmp
movs
adc
push
cmp
push
sub
shl
cmps
xor
loopne
fistp
ret
repz
fild
xchg
and
iret
nop
pusha
sbb
push
shl
lods
or
sub
aam
cmp
mov
push
and
or
or
lock
repz
jg
mov
mov
xor
or
cwde
xor
int
push
(bad)
mov
mov
push
mov
push
mov
(bad)
or
es
inc
cmp
pop
test
das
cwde
movs
pop
mov
arpl
mov
xor
lods
mov
outs
add
dec
imul
or
pop
clc
sbb
lods
mov
pop
cmp
inc
push
xchg
mov
jl
push
js
fst
test
push
lds
inc
xchg
mov
addr16
ins
adc
adc
rcl
mov
(bad)
fiadd
loope
pop
sbb
or
cmpxchg
js
mov
out
repz
bound
push
cmp
ds
adc
cdq
es
fwait
xor
cmp
dec
hlt
cmp
ins
dec
or
aam
fsubr
cmps
push
(bad)
push
xor
stc
push
pop
sbb
retf
xor
cmp
rol
or
mov
push
xchg
into
mov
jb
pop
adc
dec
stos
pop
je
fist
in
mov
jl
sub
adc
pop
fsub
shr
mov
lahf
jnp
adc
sbb
faddp
pop
xchg
repnz
push
mov
xlat
adc
lea
sar
mov
shl
add
mov
push
int
pop
sub
dec
in
dec
or
sti
rol
cmp
(bad)
mov
jecxz
jae
rcr
test
jecxz
(bad)
popa
(bad)
xlat
inc
scas
neg
jb
pop
rcl
jl
jmp
mov
jecxz
jb
jge
or
stc
icebp
sub
xchg
das
sahf
jmp
adc
jl
jb
cmps
sbb
movs
(bad)
lods
mov
push
dec
(bad)
jae
sbb
lods
out
icebp
add
mov
mov
dec
movs
sbb
pop
out
xchg
dec
or
ins
inc
jo
ret
les
ds
movs
(bad)
fldlg2
push
addr16
clc
daa
pushf
fcomp
int3
mov
sbb
add
rol
mov
jp
xor
xlat
test
cmps
pop
cmp
push
sbb
xor
xlat
ror
pop
ror
scas
push
or
aaa
push
inc
mov
in
sub
and
pop
lods
xchg
adc
retf
cmp
jne
jbe
cmps
call
data16
ret
and
sub
jbe
sbb
ins
jne
leave
adc
cld
pop
into
(bad)
inc
pop
xchg
mov
(bad)
jl
jg
jb
dec
sub
or
(bad)
sbb
sub
mov
fwait
mov
and
dec
cmp
push
fmul
dec
std
mov
movs
mov
repnz
cmp
adc
ds
data16
scas
push
xor
shl
in
and
jecxz
repnz
sbb
test
sahf
movs
ins
or
add
push
cmps
xlat
scas
xchg
(bad)
int3
inc
push
outs
jae
xlat
xchg
push
or
add
lea
mov
(bad)
mov
mov
push
mov
imul
mov
imul
dec
fwait
shr
lahf
mov
sti
add
mov
ret
sub
loop
mov
rol
cmp
cmps
xor
fdivr
repnz
dec
arpl
in
sbb
jge
jns
popf
sub
xchg
add
pop
mov
dec
inc
inc
dec
call
dec
inc
push
icebp
test
jge
adc
xor
fnsave
aam
mov
dec
cwde
cmp
iret
in
inc
scas
ret
ins
scas
mov
sub
mov
sbb
les
les
adc
dec
call
fwait
ret
xor
pop
mov
out
hlt
sbb
je
sbb
push
mov
mov
movs
add
nop
push
jb
movups
inc
(bad)
sub
pop
cld
inc
jmp
(bad)
fiadd
mov
(bad)
and
int3
xchg
loope
adc
cli
aas
push
call
inc
rcr
(bad)
and
pop
xchg
fdivr
sub
mov
imul
hlt
add
push
inc
into
mov
xor
imul
std
fiadd
ret
inc
repnz
and
ret
inc
xchg
loop
inc
dec
dec
(bad)
out
and
push
jmp
xor
lds
mov
outs
inc
in
push
fs
addr16
push
leave
iret
fcomp
in
cmp
popa
leave
lds
jmp
push
sub
ins
xor
rol
add
dec
mov
or
jns
rol
push
inc
mov
and
jmp
xor
out
lods
call
cmc
je
test
xchg
sbb
dec
jbe
(bad)
jmp
inc
jecxz
cmp
nop
les
sti
push
push
or
mov
pop
test
or
push
push
ficom
leave
inc
dec
outs
retf
inc
adc
stos
add
xchg
les
or
fnstenv
and
out
add
cmc
imul
inc
jmp
stos
inc
add
mov
and
pop
and
jp
jae
retf
or
das
dec
push
fistp
xchg
popa
fstp
sbb
loopne
jo
fnstcw
movs
fisub
dec
dec
mov
cmp
sbb
hlt
pop
or
jno
sar
test
cdq
push
inc
push
jecxz
sbb
scas
and
aad
cmps
sbb
outs
stos
retf
adc
and
(bad)
mov
add
jg
sub
jecxz
mov
mov
push
retf
jmp
push
lea
mov
mov
mov
mov
sbb
mov
cwde
sub
xchg
ds
jecxz
in
sahf
lea
sbb
in
(bad)
cld
add
fisttp
pop
cdq
sti
loope
lds
dec
in
push
or
or
inc
cmp
sub
sub
mov
or
jb
imul
pop
into
add
(bad)
jmp
cdq
xor
dec
lea
push
pop
cli
call
ins
pop
xor
mov
adc
dec
pop
jb
dec
pop
pop
das
ror
or
adc
mov
mov
adc
cmc
mov
cwde
(bad)
in
mov
jne
fidiv
push
popa
adc
call
or
xlat
je
loop
fisubr
dec
cmp
sub
jg
aas
dec
or
(bad)
in
mov
cmp
inc
fcomp
and
push
retf
inc
and
push
jg
cmp
ss
loopne
and
dec
ror
xchg
movs
add
xor
dec
pop
retf
(bad)
std
or
sbb
les
out
add
jl
inc
inc
cdq
leave
repnz
popa
adc
sub
jp
fsub
rcr
sti
dec
mov
push
(bad)
jmp
mov
jmp
outs
adc
mov
es
push
stos
cmp
adc
lods
ins
cwde
cdq
movq
or
mov
rcr
cli
stos
jg
sbb
pop
out
adc
ds
(bad)
sub
pop
sub
rol
dec
imul
dec
arpl
dec
mov
pop
push
sub
(bad)
inc
das
push
outs
xor
arpl
inc
jno
sub
add
pop
lods
ret
rcr
mov
jl
pop
ja
xor
mov
inc
neg
ret
jno
outs
out
inc
xchg
rcl
imul
inc
inc
loope
xchg
pop
aad
hlt
jae
scas
aaa
pop
nop
nop
sbb
pop
js
in
imul
or
test
xchg
push
and
push
not
hlt
imul
pop
iret
and
jp
pop
push
sbb
outs
je
clc
add
movs
shl
jecxz
sub
aad
sub
xchg
mov
push
and
adc
sub
push
popa
loopne
adc
xchg
ret
and
ret
jnp
jns
pop
ror
ror
push
out
lods
xor
aaa
xor
and
mov
test
sahf
(bad)
scas
jbe
add
push
cdq
inc
jne
sub
sub
or
out
or
jo
shr
loopne
sar
xchg
pop
adc
inc
or
outs
call
outs
fidiv
pop
lahf
das
inc
jg
aad
pop
jns
sub
sub
repz
sub
ficom
cmp
pop
cmp
dec
pop
xlat
sub
mov
inc
leave
call
adc
fistp
xchg
into
jg
cmp
push
ret
pusha
sahf
sub
push
cmp
out
dec
stos
or
mov
into
xor
out
jle
das
das
test
jo
inc
xchg
cmc
aad
jns
xchg
in
and
mov
inc
das
sbb
or
addr16
xor
push
lds
div
test
(bad)
and
(bad)
mov
or
pop
jp
cs
mov
mov
and
xor
mov
or
push
mov
(bad)
jmp
(bad)
rol
jnp
neg
pushf
add
cwde
sub
in
xchg
inc
mov
(bad)
mov
movs
xor
sbb
lods
out
add
sahf
xchg
mov
sar
repnz
mov
dec
mov
scas
stos
arpl
inc
sub
dec
clc
rcl
mov
xchg
mov
mov
add
xor
lds
pop
call
imul
movs
or
aad
pop
push
shl
mov
or
adc
out
repz
lahf
dec
mov
inc
in
ins
iret
fbstp
inc
ret
leave
xchg
(bad)
xor
xor
cmp
retf
sub
and
repz
call
mov
adc
adc
movs
or
outs
cmps
call
iret
leave
push
push
scas
push
std
jne
mov
setg
cmp
jle
adc
cmp
clc
jae
sub
ins
mov
xchg
movs
adc
push
(bad)
push
stos
fmul
retf
xchg
push
shl
(bad)
mov
test
adc
(bad)
xor
mov
sbb
fst
imul
jmp
outs
lds
pusha
ja
call
repnz
cmp
mov
pop
adc
xor
into
movs
push
sub
adc
pop
scas
int
sub
xor
out
fldz
mov
call
mov
(bad)
sbb
jl
fdiv
dec
sbb
ds
cli
mov
rol
neg
arpl
push
add
dec
in
jp
call
xchg
jg
dec
mov
and
sbb
sub
mov
adc
jns
fisub
neg
mov
inc
jae
mov
mov
cli
pop
arpl
scas
mov
cmps
mov
test
add
call
arpl
loopne
mov
sahf
adc
xlat
bound
adc
cmp
dec
cli
sub
and
mov
push
loope
inc
clc
pop
sub
mov
lahf
mov
xchg
iret
retf
adc
sbb
stos
xlat
pop
mov
sub
or
dec
xchg
xchg
repnz
jno
inc
jns
sub
es
xchg
mov
js
hlt
stos
xlat
out
out
into
scas
sbb
shl
fldenv
retf
fbstp
push
sbb
dec
retf
sbb
aad
pop
sub
cmp
xor
std
jno
sbb
and
fdivrp
push
std
adc
lods
scas
jmp
outs
fld1
add
iret
shl
clc
push
ins
xor
rol
and
rcl
fidiv
fnstenv
inc
test
xchg
ret
outs
fistp
clc
pop
test
xlat
mov
test
jmp
out
xor
xchg
pop
dec
icebp
mov
inc
cmps
add
outs
sbb
xor
mov
dec
popa
push
jo
push
push
cmp
adc
or
aad
add
jge
jo
ret
loope
cld
les
outs
int
in
jmp
sub
push
aas
mov
pop
or
add
and
dec
jl
add
mov
dec
fdiv
(bad)
rcl
ja
dec
mov
xor
mov
sub
xor
xchg
xor
push
neg
mov
cmp
movs
inc
sbb
lds
stos
outs
les
rcr
ret
pop
call
add
iret
lea
xor
gs
mov
ficom
or
cld
int3
ret
cmp
std
mov
add
xlat
jmp
aad
scas
aas
inc
dec
mov
mov
inc
sbb
mov
jbe
cwde
test
nop
call
(bad)
xchg
test
mov
add
popf
pop
sub
dec
xor
retf
aam
xor
inc
div
mov
jg
call
xchg
sbb
aaa
pop
xchg
lods
mov
cmp
push
shl
ins
sbb
xlat
dec
ror
push
in
xchg
rcr
cdq
es
jnp
mov
sbb
dec
sbb
retf
call
in
mov
inc
xchg
sbb
je
dec
je
sbb
push
outs
sbb
aad
pop
cmp
popa
loopne
ret
lods
gs
hlt
sbb
call
xor
jle
mov
jl
mov
push
out
xchg
pop
out
enter
dec
ja
fisttp
or
push
inc
ret
or
lods
jmp
sti
fsubr
xor
cmp
sub
fist
jnp
movs
push
sub
jge
xor
mov
ror
or
imul
add
add
cmp
mov
cli
adc
adc
imul
imul
jmp
fcmovb
cmp
loopne
imul
cmps
fistp
loop
push
cwde
adc
add
rol
aad
(bad)
imul
f2xm1
or
push
lock
cld
xor
(bad)
push
xor
es
fbstp
jl
mov
pop
jno
jmp
retf
jg
or
pop
out
loope
int3
xchg
cmc
cmc
cmp
dec
push
xlat
dec
push
sbb
sbb
enter
ja
or
pushf
ins
scas
push
mov
cmp
cmp
inc
repnz
mov
mov
dec
xchg
add
jecxz
lock
and
push
mov
je
cld
mov
(bad)
movs
out
loopne
adc
rcr
(bad)
pop
xchg
sub
xchg
scas
jne
inc
sbb
push
jmp
dec
add
jp
das
jmp
mov
mov
push
sub
jl
addr16
add
fst
sbb
ds
lds
out
push
fsubr
mov
pop
in
aad
add
cmp
in
jo
mov
mov
mov
mov
dec
nop
out
cmp
jl
loope
xor
push
push
pop
stos
xor
push
nop
inc
mov
push
pop
in
dec
rcl
pop
ja
adc
xchg
mov
icebp
xor
jns
xchg
cmc
mov
jp
mov
movs
cmps
jecxz
lods
movs
cwde
enter
shl
pop
sbb
dec
inc
lock
push
or
mov
pop
sar
mov
mov
stos
pop
push
mov
out
sbb
outs
js
push
jle
rcr
repz
arpl
je
cwde
stc
mov
loopne
jmp
in
jecxz
mov
push
outs
mov
mov
mov
cmp
adc
mov
and
mov
pop
xor
mov
inc
fisttp
mul
cmp
jge
dec
into
jnp
fist
mov
mov
mov
push
scas
push
data16
cmp
mov
int3
test
xor
mov
clc
icebp
mov
(bad)
mov
xchg
cs
pop
inc
adc
cmc
(bad)
sub
or
mov
aaa
mov
bound
cmc
ficomp
cld
lods
lock
inc
jp
shr
add
jecxz
mov
xchg
mov
sbb
inc
pop
mov
xchg
js
(bad)
cmp
rcr
das
jae
arpl
pop
cmp
dec
add
pop
add
call
push
xor
xchg
adc
or
(bad)
xchg
mov
hlt
mov
ja
xchg
mov
lds
imul
arpl
ja
fcomp
pop
pop
leave
sbb
cmp
shl
push
mov
and
(bad)
into
push
cwde
sub
ret
outs
stos
aam
dec
cld
bound
aas
inc
out
lods
or
add
and
pop
ja
sub
push
fwait
dec
js
ins
and
in
xor
mov
adc
enter
scas
rol
mov
test
lods
add
out
cld
and
(bad)
pop
push
test
fild
xchg
jmp
cmc
daa
retf
mov
das
xor
fild
fld
dec
fadd
jno
xor
pop
lahf
sub
call
lods
stc
mov
mov
(bad)
push
(bad)
jp
pop
xor
xchg
push
and
adc
mov
ins
(bad)
(bad)
xor
push
fistp
xlat
xchg
and
mov
lahf
or
neg
shl
pusha
stos
mov
mov
out
cdq
cmp
cld
mov
xor
fild
repnz
mov
jae
dec
jg
hlt
inc
call
pop
lods
stos
pop
fistp
cmc
clc
pop
fisubr
ret
dec
test
js
out
dec
fdivrp
ret
or
fcomp
jne
dec
out
mov
inc
dec
or
scas
call
dec
nop
sub
lods
xor
shr
clc
inc
shr
sbb
in
call
fidivr
lods
jecxz
and
jecxz
or
(bad)
je
dec
scas
iret
lahf
sar
pop
dec
fst
rcl
test
add
sub
(bad)
iret
adc
push
dec
pop
dec
jge
popf
inc
aas
(bad)
shr
xor
or
push
pop
and
cwde
fldenv
mov
push
xor
dec
(bad)
cdq
fsubr
test
(bad)
pop
hlt
mov
popf
imul
push
and
xor
mov
shl
pop
mov
inc
dec
stos
arpl
mov
fucomi
dec
sub
int
dec
jo
xor
loopne
push
cld
retf
gs
cdq
or
call
iret
add
out
outs
sub
shl
cli
in
(bad)
push
mov
inc
xor
(bad)
xor
sub
leave
(bad)
scas
mov
xor
inc
pop
or
adc
jnp
les
mov
pop
mov
in
(bad)
mov
sbb
ret
sub
jb
fisub
sbb
inc
or
test
repz
push
jge
es
pop
fist
mov
jecxz
in
fcomp
enter
fdivp
iret
mov
mov
sub
dec
(bad)
sbb
(bad)
sti
test
adc
sbb
stos
cs
retf
aad
pop
mov
cmps
cmp
mov
mov
jo
mov
xchg
sar
push
jle
fbstp
mov
fcomi
push
adc
loope
imul
and
cmp
or
xchg
neg
push
add
jge
push
das
inc
mov
test
pushf
mov
test
fs
jo
ret
dec
adc
jle
cvtdq2ps
ficom
loop
lods
adc
ss
adc
stc
dec
xor
xor
mov
pop
js
mov
icebp
ins
enter
aam
cdq
imul
loop
test
fldcw
into
test
std
or
dec
in
dec
js
fist
adc
cs
jne
aad
mov
bswap
jno
je
push
dec
adc
je
not
mov
sub
scas
inc
bound
add
fcom
lahf
mov
clc
cli
xchg
shr
mov
xchg
cmps
and
push
pop
and
je
je
arpl
mov
in
dec
inc
adc
cwde
not
push
mov
add
imul
in
or
shr
and
jl
xchg
xchg
out
jp
in
icebp
or
add
fstp
std
sub
out
jbe
clc
mov
and
addr16
push
sub
retf
aam
adc
push
push
bound
sub
hlt
xor
(bad)
gs
das
cmp
pop
pop
out
mov
out
mov
mov
addr16
xor
sti
shl
and
push
xor
arpl
jg
inc
jnp
push
xchg
sub
xor
jnp
outs
mov
jmp
and
fwait
adc
cmp
push
xor
movs
sbb
lods
in
inc
(bad)
icebp
es
mov
adc
mov
(bad)
xchg
addr16
stc
add
int
sub
xor
sub
mov
imul
into
ins
xchg
mov
mov
cmp
pop
ret
cmp
cmp
xor
daa
ficomp
push
and
adc
neg
cmps
inc
mov
lea
(bad)
jne
lahf
push
sub
call
(bad)
loopne
mov
push
mov
cmp
in
cli
je
repnz
fs
pop
stc
movs
nop
xchg
scas
push
xchg
jnp
scas
mov
shr
(bad)
repnz
cdq
iret
fild
and
add
test
hlt
lea
adc
jle
and
push
xchg
jae
(bad)
mov
xor
adc
sbb
cwde
ret
push
push
pusha
inc
or
mov
push
lods
in
in
mov
xor
rcr
xchg
bound
dec
mov
pop
push
gs
xchg
out
cmp
xchg
inc
mov
bound
sub
mov
outs
push
dec
inc
xchg
mov
mov
out
test
fcmovb
int
cmp
bound
cmps
hlt
sbb
inc
inc
std
xor
ffree
add
mov
pop
pop
cwde
out
mov
sahf
pusha
inc
inc
sub
sbb
xchg
idiv
mov
sti
iret
xchg
mov
addr16
pop
arpl
mov
sbb
mov
xchg
cmc
xchg
push
scas
add
fiadd
xchg
in
mov
ret
shl
mov
jae
scas
or
mov
and
hlt
call
mov
mov
in
adc
ds
enter
adc
(bad)
retf
in
test
xchg
test
sub
pop
popa
or
sub
dec
jb
neg
mov
pusha
nop
(bad)
xor
out
adc
adc
mov
xor
and
add
sbb
lods
or
inc
add
scas
in
lahf
cmps
bound
sbb
fsub
fcomp
jno
or
sub
mov
and
test
sbb
push
sub
cs
fcom
cmc
test
and
mov
ror
push
retf
out
mov
xchg
push
xchg
or
push
daa
xor
pop
push
pop
mov
cdq
inc
adc
cmps
push
call
stos
mov
xchg
mul
cmp
mov
fimul
mov
push
jbe
cmc
(bad)
out
inc
mov
loopne
dec
cmp
mov
mov
outs
pop
mov
lds
xor
loope
dec
(bad)
imul
inc
pop
xchg
fstp
iret
js
rol
out
xor
es
nop
mov
cwde
cli
inc
fimul
mov
push
xchg
sub
xor
lahf
xchg
add
ret
ja
add
sub
ds
cdq
ret
(bad)
je
into
and
dec
loop
pop
mov
icebp
jns
out
in
and
call
jb
mov
sbb
sub
test
loop
es
sbb
stos
aad
push
cmp
fwait
bound
jp
push
mov
cmp
mov
leave
inc
pop
cmc
(bad)
cmc
mov
or
out
pop
sub
bound
movs
mov
cmp
lods
fwait
(bad)
xchg
sti
dec
or
jecxz
inc
test
mov
pop
sbb
pop
mov
mov
inc
call
pop
mov
push
jl
mov
hlt
cdq
mov
add
(bad)
and
push
retf
jle
cli
jg
and
jg
and
arpl
sub
jnp
cmp
mov
sbb
(bad)
xchg
sbb
and
cdq
xchg
mov
mov
push
inc
data16
add
(bad)
ss
outs
loop
movs
test
test
arpl
inc
add
btr
pop
jne
dec
jae
mov
mov
pop
sbb
aad
and
sbb
rol
pop
sub
nop
jne
push
leave
pop
xchg
es
inc
fld
inc
or
mov
int
mov
mov
push
stos
fdiv
xchg
push
sbb
retf
sbb
and
sub
adc
call
sbb
fisttp
sti
popa
rcr
mov
ret
mov
sti
push
outs
(bad)
jmp
mov
mov
stc
inc
push
push
mov
xor
xlat
push
vrcpss
out
sub
arpl
outs
test
xor
mov
shr
inc
mov
mov
not
sbb
test
and
je
or
imul
add
lahf
sbb
stos
movs
dec
mov
inc
test
push
test
std
dec
rcr
lds
enter
push
sub
adc
int3
sbb
dec
sbb
addr16
xchg
pop
loope
sbb
je
jnp
mov
jns
inc
and
popf
push
outs
xchg
retf
ficom
mov
or
movs
dec
mov
mov
add
xor
repz
sbb
jecxz
daa
pushf
sub
dec
std
jns
jne
stc
xor
mov
push
and
popa
nop
test
jns
cs
push
push
jb
ret
cmc
ret
xor
loopne
mov
or
sub
into
and
sbb
sbb
xor
dec
xchg
jmp
jns
and
cmp
(bad)
mov
and
push
jle
jge
pop
inc
jl
pop
adc
repnz
ss
push
icebp
(bad)
retf
inc
jne
mov
jmp
and
imul
sbb
push
dec
xor
imul
lods
pop
mov
cmp
mov
jp
lahf
dec
pop
test
je
dec
xchg
lahf
add
mov
not
push
jae
mov
jmp
test
cli
loopne
pusha
lods
add
sbb
xlat
cvtpi2ps
stos
ror
xchg
add
fnstsw
clc
test
sub
xor
jecxz
and
mov
enter
cmps
lods
(bad)
outs
push
sub
sub
ror
aaa
xor
push
stos
add
loope
fnstenv
xchg
repnz
scas
mov
pop
fstp
push
ins
xor
xchg
pop
sbb
ds
cmp
mov
(bad)
mov
mov
push
cmps
out
lods
es
scas
in
xchg
add
sub
mov
in
push
dec
sub
add
loop
std
sub
fsub
cmps
push
(bad)
adc
inc
je
adc
fs
call
scas
jg
add
dec
fwait
cmp
mov
and
mov
add
xor
retf
repz
(bad)
push
loopne
add
int3
xchg
inc
in
les
imul
mov
or
lods
xor
and
push
add
jmp
sar
adc
mov
cmps
jbe
popa
xchg
sbb
or
jbe
pop
mov
fdiv
sub
lock
push
jb
or
jg
or
mov
out
div
sti
jb
iret
std
xor
adc
cwde
fwait
pushf
cmps
jmp
and
fld
fmul
cmp
fdiv
shl
lea
lahf
or
sub
movs
jnp
sub
cmp
jg
lahf
jmp
call
push
aaa
or
bound
sbb
rcl
jl
lds
mov
push
ins
fild
mov
in
lock
xchg
(bad)
fmul
inc
add
cmp
xor
jecxz
push
into
scas
mov
out
cmp
outs
adc
es
sub
mov
fs
cmp
shl
inc
jno
clc
ror
dec
gs
pop
shr
sub
mov
mov
pusha
mov
sub
icebp
fs
fxch
pop
test
cld
ins
sub
pop
jae
adc
ds
fsubr
retf
out
add
js
retf
out
xchg
jo
xchg
add
jle
xchg
lea
fsubp
mov
into
cmps
adc
xor
mov
retf
add
adc
add
dec
cmp
fbstp
xchg
gs
jnp
aas
jp
hlt
mov
jg
test
rcr
push
inc
rcl
push
pop
data16
ins
cmps
gs
popa
loopne
cs
mov
outs
sahf
fst
movs
jno
ds
(bad)
jge
jne
xor
(bad)
in
rcr
dec
mov
sahf
inc
mov
push
(bad)
jne
out
sub
inc
jge
push
sub
inc
arpl
mov
push
dec
shl
out
(bad)
add
push
sahf
enter
aam
mov
movs
aaa
push
and
xchg
cld
xchg
adc
adc
retf
xchg
aad
pop
add
out
xchg
xchg
adc
iret
loope
xchg
jg
sbb
fild
adc
shl
mov
sbb
fidivr
mov
jl
lahf
xor
mov
xor
add
adc
dec
inc
mov
sub
jmp
mov
pop
popf
hlt
enter
retf
movs
push
mov
dec
mov
cli
sub
xchg
jo
cmp
jle
imul
in
call
clc
sahf
mov
cmp
cmp
leave
pop
push
movs
adc
repz
call
mov
xchg
fnop
dec
pop
xchg
mov
xchg
or
and
or
or
inc
jne
adc
mov
and
test
mul
repz
ja
lods
call
fsub
xchg
mov
lock
shl
in
fdiv
cld
mov
dec
sahf
mov
aas
js
movs
call
out
ja
pop
loopne
push
sbb
sar
call
div
dec
shl
cmp
cmp
pop
data16
fcomi
sub
rol
push
push
pop
in
mov
aaa
js
mov
fimul
ja
mov
pop
mov
ins
shl
mov
lock
fwait
sbb
push
xlat
lea
arpl
xchg
jae
push
pushf
xor
mov
call
or
mov
inc
dec
call
and
stc
loopne
int
mov
mov
pop
cli
push
xchg
bound
mov
ret
jbe
mov
setns
adc
(bad)
cli
cmc
fidivr
cmp
push
mov
int
sub
xor
inc
fsubr
cmps
daa
pop
and
or
fcomp
add
pop
xor
ret
add
out
add
nop
pop
gs
inc
(bad)
pop
fmul
in
sbb
xlat
dec
jns
xchg
sti
or
mov
shl
je
and
jle
dec
mov
stos
in
mov
jl
sar
call
mov
xlat
cmp
cmps
addr16
loope
aas
mov
loopne
sub
fmul
inc
(bad)
shl
xchg
ins
jae
popa
pop
jg
inc
into
js
mov
imul
pop
sub
xchg
pop
sbb
jge
fs
inc
pusha
stc
dec
mov
mov
push
not
sbb
sbb
call
cmp
outs
mul
(bad)
or
inc
in
addr16
fisttp
xchg
xchg
cli
xchg
pop
or
mov
rol
lea
jp
mov
movs
dec
mov
std
in
cmc
in
mov
jl
push
push
mov
cmp
inc
jnp
and
mov
cdq
stc
das
into
xchg
inc
mov
mov
cmp
jne
sbb
pop
enter
or
neg
out
out
and
jmp
jge
push
(bad)
jmp
xchg
mov
pop
in
out
fwait
mov
xchg
sbb
xchg
aam
lea
and
mov
fst
loope
mov
xchg
lods
aaa
xor
xchg
stos
sub
call
shr
out
ds
xor
sub
push
push
in
(bad)
sbb
jno
cmp
cmp
and
cmps
sbb
xchg
gs
cvtdq2ps
(bad)
fiadd
sbb
or
out
cwde
push
and
in
xor
lods
sahf
fsubr
pusha
mov
jmp
ins
ss
add
fs
fiadd
mov
les
call
popa
sub
ins
test
xchg
or
(bad)
jns
mov
cmp
xchg
mov
push
cmp
es
test
sbb
inc
add
mov
in
xchg
xor
aaa
pop
mov
das
xchg
int3
loopne
out
sbb
les
xchg
xor
xchg
sbb
inc
inc
jge
and
adc
jns
sub
cmps
in
adc
or
rcl
and
mov
push
out
xchg
lock
sahf
add
mov
gs
call
stos
xchg
dec
les
jns
adc
add
jmp
and
test
xlat
cmps
mov
cld
xchg
mov
push
xchg
imul
jmp
jno
cmp
popf
or
scas
rcl
ret
mov
dec
test
fdivr
cld
bswap
dec
jno
push
mov
cmp
pop
scas
sub
pop
fsub
stos
push
pop
arpl
scas
mov
mov
sub
retf
mov
pop
rol
fidivr
in
fsub
xlat
leave
mov
and
into
popf
mov
mov
(bad)
push
sub
out
into
add
push
fisubr
xchg
xor
loope
or
stc
push
test
pop
mov
mov
jmp
mov
or
add
cmp
xchg
das
add
lds
and
inc
call
outs
pop
adc
neg
ret
adc
movs
popf
xchg
cmps
xchg
sbb
mov
call
popa
and
or
test
mov
pop
rol
cmc
in
dec
cmps
idiv
lock
cli
jmp
and
xchg
jge
shr
sbb
mov
cmps
rcr
sbb
jno
stos
es
add
call
pusha
xchg
(bad)
out
adc
push
out
outs
clc
dec
dec
mov
xchg
xchg
stc
dec
adc
ret
or
sub
pop
mov
bound
ja
mov
jecxz
int3
xchg
stc
mov
in
mov
push
lahf
in
dec
dec
mov
mov
aad
loop
in
rcl
movs
(bad)
lods
in
in
adc
or
push
mov
jmp
popa
push
test
loope
movs
fcomi
xor
test
data16
outs
ins
(bad)
out
add
mov
dec
xchg
sbb
xchg
rcr
shl
xchg
iret
cli
lahf
in
mov
lods
ret
xchg
outs
mov
push
mov
cmps
mov
lods
out
div
(bad)
mov
retf
push
jne
outs
mov
and
(bad)
cmp
cli
stos
mov
sub
dec
fs
mov
std
sahf
outs
(bad)
and
inc
retf
mov
inc
imul
lea
fld
enter
pusha
loopne
gs
add
fcomp
popf
mov
sbb
dec
in
inc
dec
(bad)
push
jne
add
sbb
das
shr
mov
pop
sar
adc
pushf
inc
fistp
jns
std
or
and
push
xchg
pop
mov
icebp
push
out
out
inc
dec
call
je
in
outs
adc
and
fstp
sbb
mov
cmc
cmps
sub
mov
mov
jo
jbe
dec
jns
mov
mov
pusha
mov
and
or
xchg
test
lahf
push
dec
lahf
jae
jecxz
xchg
xor
adc
ror
jmp
rol
popa
dec
or
add
mov
outs
xchg
and
call
push
mov
cmp
test
movs
(bad)
fist
jnp
cmp
add
mov
repnz
lea
xchg
iret
add
push
xlat
ret
and
(bad)
inc
fidiv
pop
inc
push
and
xor
(bad)
ds
jo
stc
pusha
ja
jmp
ror
bound
jbe
(bad)
idiv
push
lods
ret
lods
sti
rcl
jno
mov
data16
rcl
add
mul
inc
ins
push
adc
loopne
je
retf
outs
inc
in
jo
cmp
jbe
jmp
inc
dec
into
(bad)
pop
cmps
in
sbb
fldenv
inc
add
retf
sbb
mov
pop
jle
sub
cmp
cdq
jg
sbb
call
xchg
mov
mov
jge
xchg
enter
sbb
jne
cmps
mov
fbstp
adc
popf
mov
rol
in
mov
adc
je
out
loope
xor
inc
ins
mov
pop
or
dec
add
in
add
mov
cmp
cmps
loopne
loope
adc
push
test
xor
adc
fcom
inc
lods
jmp
fs
call
ins
cdq
mov
or
shr
fisub
fstp
(bad)
int3
out
jne
mov
mov
out
xor
(bad)
xchg
xor
pop
fst
imul
dec
scas
stc
pop
jmp
je
je
mov
aaa
jae
pop
popf
out
mov
xchg
mov
(bad)
aas
je
xchg
inc
popa
inc
xchg
mov
outs
mov
cmps
loopne
dec
xor
and
xor
pusha
mov
in
test
js
stc
test
jno
xchg
loope
iret
dec
(bad)
test
(bad)
xlat
push
xor
mov
sub
mov
retf
xor
pop
lahf
cmp
sbb
shl
pop
dec
sub
add
or
clc
push
ins
mov
xor
retf
rcl
xor
pop
je
aam
xchg
inc
out
mov
scas
mul
shl
sti
shl
jp
(bad)
push
outs
nop
test
xor
stc
or
sbb
outs
aam
sub
test
push
loope
mov
pop
push
adc
adc
cli
ins
mov
inc
push
add
ror
imul
jge
cwde
out
movs
mov
ja
pusha
cmps
es
adc
(bad)
fdivr
(bad)
shl
inc
jp
cmp
cld
(bad)
mov
sbb
nop
or
cmp
jb
sbb
into
pop
cmc
mov
mov
pop
sbb
test
dec
mov
ret
sub
ins
cwde
stos
fisubr
mov
ret
into
jmp
inc
mov
loope
cmp
sbb
xlat
adc
lds
iret
add
jnp
mov
or
pop
data16
pop
xor
mov
and
sbb
neg
rcr
dec
ss
inc
dec
and
dec
ds
fidivr
pop
mov
movs
fmul
add
into
jbe
xlat
loope
jl
mov
sub
call
mov
xlat
sbb
imul
lahf
jns
pop
lock
adc
add
loopne
sahf
fwait
cmps
sub
sti
cmp
xor
fstp
xlat
(bad)
pop
stos
in
stos
stos
cmp
mov
pop
ja
mov
adc
ror
dec
mov
aaa
pusha
enter
aam
jl
push
dec
into
sbb
adc
xchg
dec
inc
popf
jo
lock
jb
cmp
mov
inc
mov
mov
jne
xchg
pusha
pusha
xor
sub
pop
dec
call
shl
pop
jbe
shr
and
ret
push
test
pop
sbb
jmp
rcr
and
push
inc
or
inc
test
aaa
mov
sbb
push
xchg
out
sbb
outs
rcr
shr
sbb
imul
jo
pop
sar
cmp
dec
call
push
lods
and
(bad)
or
or
aaa
mov
xor
inc
aaa
jmp
adc
hlt
pusha
ror
ins
cwde
in
dec
shr
js
cmc
sub
call
cdq
and
cmp
lods
fisttp
ret
dec
pop
popa
test
dec
sahf
inc
adc
gs
pop
sbb
retf
bound
pop
sub
mov
or
dec
xlat
push
test
rcr
retf
lods
aas
pop
adc
shl
fs
push
fist
sub
test
lahf
outs
ja
pop
sbb
jg
cdq
xchg
stos
jae
mov
push
cmps
fistp
sbb
push
mov
mov
cmps
dec
cld
sbb
mov
out
mov
xchg
neg
adc
jle
and
dec
push
mov
fnstenv
xchg
pop
cmovne
mov
cmps
fwait
push
push
pop
sub
pushf
mov
mov
jmp
inc
xorps
jnp
in
xchg
aam
adc
das
retf
fnstcw
ja
cmp
mov
sbb
mov
jg
and
push
jl
and
push
mov
or
mov
mov
xchg
imul
loop
(bad)
fnsave
cli
sub
cdq
fidivr
or
shr
aad
jle
movs
mov
dec
jno
pop
jge
sub
arpl
leave
(bad)
in
stos
dec
mov
data16
aaa
cmp
and
ret
cmp
outs
call
push
push
jne
mov
dec
std
bound
jp
pop
xchg
pusha
push
repnz
daa
xor
js
cwde
dec
sbb
out
jnp
(bad)
not
xchg
mov
mov
sbb
sub
push
pop
dec
inc
sahf
(bad)
mov
ins
mov
sub
fwait
fs
dec
hlt
ror
sbb
add
ss
xchg
jns
lods
(bad)
fst
std
shl
adc
sbb
sbb
lds
movs
jo
xor
inc
aas
push
adc
imul
sub
outs
dec
cmp
mov
adc
dec
mov
adc
pop
test
aam
add
inc
push
into
cdq
or
test
dec
xchg
push
cdq
jecxz
pushf
leave
cmps
adc
movs
pop
pop
or
es
or
call
sub
pop
in
jbe
xchg
push
outs
(bad)
cmp
and
xor
dec
mov
cmp
push
out
loop
or
aam
or
mov
cli
and
add
pushf
in
or
cld
je
jp
lods
sub
sbb
pop
cs
xchg
jecxz
jnp
xor
push
mov
inc
jnp
ret
jg
ret
jb
hlt
repz
mov
mov
or
and
repz
mov
popa
and
pusha
jmp
int
(bad)
icebp
add
aas
mov
push
(bad)
nop
xor
ins
rcr
int3
inc
dec
test
jne
jge
test
add
test
dec
xchg
push
inc
adc
fs
mov
loop
fistp
mov
fwait
add
mov
in
or
push
mov
dec
sub
(bad)
sahf
mov
jg
sub
shl
call
rcr
push
test
xor
inc
lods
cwde
int3
in
cwde
xchg
xor
in
cmp
dec
mov
outs
les
inc
scas
or
fdivr
sbb
xchg
retf
ret
cmps
stc
call
nop
cmps
test
and
pop
xchg
sub
xor
outs
xchg
adc
test
and
sbb
xor
(bad)
mov
out
pop
imul
ret
push
sub
mov
lahf
jnp
sbb
jnp
or
loop
push
in
jo
leave
xchg
adc
dec
jmp
pop
maxps
push
enter
mov
jns
clc
cld
enter
out
movs
or
xor
xchg
out
jmp
cmp
dec
gs
enter
test
dec
aaa
or
aaa
adc
cmp
rol
dec
sbb
arpl
iret
(bad)
fwait
mov
imul
(bad)
pop
retf
outs
and
jge
jne
cmc
mov
mov
jge
sbb
in
jne
jmp
(bad)
xor
or
outs
xor
ss
xor
rol
int
lea
scas
jecxz
and
loop
sbb
dec
stos
and
imul
xchg
sbb
js
mov
and
cmp
push
sbb
add
xchg
cld
call
sti
dec
sbb
jmp
lods
push
sub
jno
scas
jns
pop
adc
jg
jmp
fisubr
jno
or
or
push
pushf
xor
rcl
cmp
out
clc
inc
(bad)
rol
sahf
pop
shl
data16
push
jmp
and
jl
add
fidiv
stos
sub
mov
mul
pop
fld
and
push
ret
push
test
test
jecxz
and
mov
mov
push
or
sbb
cmp
icebp
pop
(bad)
pop
lds
ret
test
push
ja
popa
cli
xor
ret
out
sahf
outs
jne
jg
ja
and
and
jb
rcr
ret
adc
ret
fisub
das
rol
stos
pop
in
daa
loop
mov
dec
sbb
adc
das
in
imul
cdq
fnstenv
dec
add
mov
pop
sbb
shr
dec
push
in
ins
jo
test
(bad)
into
xor
daa
enter
mov
mov
imul
fdivr
shr
inc
(bad)
cmc
xor
fisub
ret
call
ja
mov
pusha
repz
mov
push
into
push
or
mov
dec
repnz
mov
sbb
fucomip
xchg
mov
sti
sub
mov
jns
fwait
or
push
xor
nop
out
push
mov
jnp
xor
jb
jg
call
sbb
ret
add
jmp
lods
sub
jmp
or
je
mov
shl
mov
in
mov
fstp
jnp
or
repnz
push
xor
shl
xchg
jae
retf
ins
mov
fnstsw
ja
xchg
sub
cmp
stc
jmp
fucom
mov
and
push
mov
lods
push
adc
or
stos
jbe
mov
adc
aaa
jg
sbb
jae
out
ficomp
scas
push
jae
and
sbb
mov
stos
int3
xchg
clc
jg
sar
mov
dec
push
fwait
push
movs
pop
pop
or
mov
int3
pop
xor
in
jo
mov
ret
(bad)
(bad)
rcr
je
movs
fnstcw
movs
in
scas
adc
outs
test
fild
push
sub
jecxz
cmp
enter
fucom
stos
jne
xchg
dec
cmc
dec
clc
outs
cmps
sub
sbb
sbb
jo
aas
pop
aas
jp
cmp
jle
cmps
adc
xlat
rol
aad
mov
imul
or
mov
cmps
mov
mov
ror
call
add
adc
add
and
jno
aam
aas
adc
mov
xchg
add
add
cmps
scas
pop
jg
scas
out
sub
xlat
mov
lahf
out
push
loop
cwde
push
and
xor
mov
repnz
arpl
sbb
fmul
pop
jge
mov
dec
xor
(bad)
jne
mov
mov
xchg
lahf
aam
enter
and
into
add
dec
pop
pop
cmc
adc
dec
mov
ja
and
adc
in
mov
inc
outs
inc
xchg
or
xor
pop
jbe
inc
call
xor
xchg
dec
mov
ret
repz
test
xchg
adc
dec
sti
xchg
sbb
or
mov
(bad)
cmp
retf
loopne
jne
(bad)
std
xor
leave
adc
adc
addr16
in
jae
es
lock
mov
jmp
pop
jp
outs
xchg
jno
lods
push
test
sbb
es
sub
push
mov
push
shl
into
ss
mov
pop
and
lahf
movs
cmovl
mov
cmps
retf
jbe
inc
jns
mov
(bad)
xchg
movs
sub
(bad)
neg
dec
add
(bad)
mov
shl
mov
in
dec
sub
xchg
xchg
je
cmp
movs
(bad)
fnstsw
lds
inc
and
xchg
mov
xchg
mov
lahf
addr16
jmp
fidivr
pop
aas
ror
inc
pop
xchg
and
hlt
shr
mov
mov
addr16
popf
lods
fisubr
sbb
lods
fidivr
jae
mov
lods
sbb
mov
imul
cld
mov
retf
pop
xor
jge
xchg
ins
dec
or
jp
dec
mov
sbb
repz
sbb
scas
jae
jl
movs
add
mov
lahf
cmp
push
test
mov
inc
rcr
fistp
inc
add
cmp
movs
xchg
adc
sub
jle
fldenv
push
leave
stc
test
dec
leave
ja
mov
scas
jge
test
lahf
push
nop
lds
xor
mov
jmp
inc
stos
fcmovb
int
nop
dec
movs
or
scas
mov
push
imul
cmp
out
push
jnp
sti
in
psubq
dec
adc
hlt
test
popa
adc
and
jnp
push
popa
push
sahf
dec
bound
and
jmp
ds
popa
dec
mov
ret
dec
imul
inc
dec
retf
and
outs
dec
rol
rol
ins
jecxz
jo
pop
scas
dec
and
lea
adc
lea
div
popa
xchg
popf
jnp
add
(bad)
push
push
pop
sub
and
mov
in
push
jne
sbb
mov
mov
mov
jo
movs
pusha
(bad)
push
mov
(bad)
sbb
and
mov
pop
les
out
mov
push
and
mov
mov
outs
inc
(bad)
(bad)
cmp
popf
pop
repnz
mov
out
jle
and
ds
sar
fstp
mov
jl
test
retf
idiv
fs
addr16
cmp
fdiv
cmp
fbstp
mov
fwait
or
mov
dec
push
pop
(bad)
lahf
das
add
(bad)
push
cdq
cs
call
fld
jo
mov
pop
std
jb
fsubr
add
retf
mov
cmp
xor
repnz
adc
test
xchg
aam
cmp
jmp
adc
mov
add
push
sti
inc
dec
mov
jae
push
xchg
ins
pop
pop
add
imul
loope
rcl
aas
adc
mov
pop
enter
sub
fiadd
jmp
pop
adc
jbe
jne
lods
mov
into
leave
push
outs
mov
test
lods
dec
lea
scas
pop
inc
js
inc
jo
adc
xchg
fldenv
jno
popf
iret
ins
xor
jns
test
pop
add
dec
mov
aad
or
jmp
adc
jmp
(bad)
les
pop
sbb
jl
popf
outs
mov
or
test
jl
test
mov
lock
add
cmps
add
sbb
inc
push
shl
jp
jmp
imul
ss
sbb
ins
push
retf
xchg
ret
addr16
jp
cmps
ins
add
adc
mov
std
push
mov
cs
jg
into
(bad)
fld
mov
test
xchg
push
mov
jne
push
sub
and
call
add
fwait
or
add
jg
(bad)
in
mov
and
ret
xchg
lods
(bad)
mov
idiv
push
ss
inc
out
enter
outs
adc
sti
jno
mov
cmp
retf
fcmovb
popf
cmc
xchg
ss
mov
jl
dec
es
jo
cmc
dec
mov
pop
sub
enter
stos
or
jge
cmp
add
dec
lods
neg
clc
sub
call
rcl
adc
into
sahf
lods
test
ja
cli
shr
retf
in
cmp
fs
sbb
and
mov
cld
in
lds
pusha
mov
add
mul
xchg
fstp
gs
or
mov
xchg
add
and
jae
xchg
loop
add
test
adc
mov
adc
cmp
xchg
out
or
mov
and
(bad)
pop
lahf
pop
and
pop
dec
shl
in
dec
push
shl
add
das
das
xchg
inc
das
lods
ins
add
or
stc
(bad)
push
push
cmps
mov
ret
cmp
mov
inc
and
mov
or
mov
jmp
dec
mov
add
mov
mov
mov
sub
xchg
popa
and
lods
arpl
call
lock
(bad)
cli
fnstenv
sbb
sub
cdq
mov
pop
add
out
pop
mov
adc
iret
arpl
add
push
inc
outs
mov
gs
sub
jl
or
jmp
pop
xor
cmp
(bad)
fwait
ret
or
out
adc
fnstenv
ja
xchg
cli
xlat
mov
mov
push
pop
(bad)
jmp
dec
xchg
retf
xlat
dec
or
(bad)
fs
outs
cmc
(bad)
push
pop
int3
dec
jge
in
out
xor
pop
or
rol
mov
into
or
pop
mov
push
xlat
les
lods
in
jmp
bound
sbb
retf
sub
dec
sbb
mov
push
aas
mov
movs
inc
fist
xor
fistp
(bad)
loop
pop
pop
pop
in
dec
mov
inc
xchg
push
mov
pushf
push
stos
aaa
cmp
pop
bound
adc
arpl
call
pop
cmps
(bad)
push
sbb
ds
das
or
pop
in
pop
fsub
pop
dec
test
test
xor
jmp
aaa
loop
cmp
mov
lahf
fcmove
and
mul
push
stos
xchg
and
mov
je
mov
add
in
inc
das
sub
into
test
ror
add
inc
jg
pop
cmp
inc
in
test
xor
dec
add
inc
and
out
lds
mov
adc
xchg
xchg
(bad)
call
or
clc
mov
fnstcw
mov
mov
fcomp
aaa
sub
dec
and
pop
lock
out
cmc
daa
loope
pop
inc
enter
cmc
popf
xchg
loopne
cmp
out
in
mov
iret
mov
xchg
sub
sub
jmp
fs
pop
repnz
out
fdiv
cmp
jp
shl
pop
mov
dec
push
enter
stos
je
clc
lea
xlat
popa
jo
mov
add
rcl
out
imul
lods
jmp
fsubr
add
pop
add
dec
leave
ja
adc
sar
vmovntps
inc
enter
jge
fs
int
(bad)
sti
cmovg
cld
cwde
cs
out
xor
addr16
pop
sbb
mov
push
scas
retf
aad
xchg
xor
jecxz
(bad)
mov
sub
rcl
retf
add
mov
push
sub
sti
mov
sub
js
pop
mov
test
ins
hlt
ret
inc
rol
sti
retf
sub
dec
xor
(bad)
es
shr
sbb
rcr
pop
jecxz
ins
in
jg
loope
sahf
mov
add
jg
jmp
and
ja
arpl
test
addr16
cmp
not
(bad)
dec
xchg
retf
adc
adc
push
sbb
ficomp
and
mov
leave
fadd
adc
inc
out
js
mov
sub
inc
push
lds
ins
sbb
daa
adc
cwde
fcmovb
mov
call
adc
push
cmp
xchg
test
je
dec
(bad)
imul
clc
call
fstp
cmp
pop
dec
gs
ffree
mov
imul
lds
mov
loope
ret
jns
mov
nop
sbb
xor
jb
fst
inc
(bad)
sub
pop
cmps
sahf
les
push
add
stos
test
out
adc
loopne
mov
xor
sbb
mov
mov
(bad)
stos
(bad)
pop
out
or
fmul
(bad)
xchg
push
std
xor
iret
mov
xor
movs
loopne
cwde
je
cli
repz
xchg
sbb
sar
test
fisub
sub
sub
jp
call
add
cmp
out
mov
push
xchg
in
inc
xor
loopne
aam
xor
fdiv
lahf
pop
inc
sbb
mov
enter
imul
jmp
or
shr
xchg
xor
ins
jmp
or
addr16
pop
das
xchg
or
inc
mov
cmp
xchg
gs
xor
xchg
shr
cmc
cmc
xchg
and
sub
and
add
push
sti
fdiv
dec
adc
lds
sbb
mov
bound
rcl
push
push
fsub
jnp
stos
neg
aam
add
std
xor
adc
std
xor
scas
loop
jo
pushf
mov
dec
fild
scas
js
mov
sbb
sub
inc
cmp
jns
cs
call
mov
add
lea
retf
inc
mov
shl
gs
and
and
dec
test
xchg
std
pusha
dec
xchg
aam
jno
out
jnp
mov
nop
mov
pop
add
mov
fsubr
or
adc
mov
sbb
sbb
adc
shl
int
shr
adc
mov
neg
dec
pusha
mov
adc
sub
lea
or
sbb
sbb
dec
push
rcl
sub
pop
dec
or
cld
mov
test
fld
xchg
out
push
dec
lea
cmp
int
loop
inc
jge
jo
jmp
mov
mov
sub
push
mov
movups
inc
aas
inc
fadd
dec
movs
mov
stos
jg
(bad)
or
movs
push
inc
xchg
and
aas
add
sti
outs
dec
or
scas
call
test
call
dec
ret
mov
aaa
(bad)
sti
retf
or
stos
and
out
fcomp
xlat
lds
ret
add
jae
mov
and
xor
aam
les
xor
push
pop
cmps
mov
lods
jae
in
hlt
pop
sub
movs
pop
add
push
out
push
inc
jb
pop
xor
test
sub
inc
std
pushf
dec
not
xlat
pusha
outs
or
shr
call
dec
xor
push
mov
hlt
aam
or
mov
ret
ins
arpl
mov
inc
movs
adc
popa
cmp
xor
mov
pop
xchg
jg
inc
jge
test
fsub
les
adc
iret
arpl
fmul
clc
(bad)
adc
fdiv
xchg
inc
jnp
push
dec
dec
retf
cmp
(bad)
ret
iret
hlt
(bad)
push
arpl
arpl
add
adc
(bad)
not
loope
imul
add
or
ds
call
pop
sbb
imul
shl
adc
movs
xor
imul
xor
lds
arpl
xchg
std
push
mov
inc
gs
(bad)
out
pop
cmc
imul
or
inc
or
cmp
dec
lock
sbb
inc
push
scas
pop
mov
adc
push
pop
(bad)
sub
movs
(bad)
mov
(bad)
ja
leave
fwait
jmp
leave
push
xchg
in
inc
data16
jae
or
pop
ret
add
sub
and
icebp
or
xchg
addr16
jbe
ret
adc
ja
push
jne
outs
or
dec
leave
push
ret
jae
hlt
data16
stc
adc
enter
out
or
(bad)
repnz
iret
mov
pop
aaa
outs
(bad)
xlat
ja
addr16
dec
xchg
sar
mov
call
dec
aas
adc
dec
sahf
sbb
hlt
push
push
(bad)
mov
xchg
sub
jnp
stos
xchg
ds
mov
jb
adc
lock
stos
sbb
ret
into
mov
cmp
mov
es
mov
and
loop
idiv
xor
fmul
jl
inc
pop
cmp
mov
mov
sub
sbb
sbb
and
loope
mov
stos
add
or
push
bound
xlat
inc
xchg
cdq
(bad)
xacquire
lods
loope
sub
mov
pop
gs
cld
lock
mov
mov
pop
scas
mov
stos
cmps
fnstenv
mov
movs
fst
test
jmp
(bad)
jne
push
leave
dec
aaa
rcl
pop
mov
ret
jge
aas
mov
push
add
jge
nop
test
dec
add
adc
test
xchg
pop
test
mov
(bad)
aas
mul
dec
js
cmp
sar
in
int
clc
dec
outs
rcr
xchg
add
add
sahf
pop
and
ds
in
popa
nop
arpl
add
jbe
ins
dec
inc
push
push
cmp
jecxz
test
xor
jge
(bad)
mov
stc
xor
xchg
iret
retf
mov
int3
out
adc
dec
jecxz
test
popa
(bad)
in
popa
sub
mov
pusha
dec
(bad)
scas
retf
in
mov
cmp
push
dec
adc
sbb
sbb
adc
ja
(bad)
mov
mov
add
popf
mov
call
mov
loopne
call
jmp
dec
xor
gs
mov
push
jns
dec
hlt
inc
(bad)
push
imul
jnp
mov
mov
jg
mov
fstp
push
aad
cwde
dec
(bad)
iret
clc
hlt
(bad)
in
(bad)
mul
adc
mov
retf
gs
push
cmp
(bad)
into
mov
cmp
mov
call
mov
fisttp
aas
mov
inc
int
pop
popf
test
fcomp
ins
jb
fldenv
mov
popf
and
push
clc
jmp
in
enter
clc
pop
loop
out
adc
rcr
xor
and
scas
or
cmp
mov
inc
test
jg
jge
sbb
leave
bsr
(bad)
sbb
xchg
test
in
ret
dec
stc
loop
dec
out
pop
cmp
inc
push
jne
and
mov
sub
inc
push
sub
fadd
dec
mov
inc
xchg
push
push
pop
cmp
retf
sbb
jle
neg
mov
pop
and
sahf
stos
clc
inc
fld
cwde
and
scas
aaa
retf
inc
mov
dec
cli
lods
popa
jmp
sti
orps
out
push
out
cmp
pop
imul
cs
sbb
cmp
push
jmp
stc
or
pop
fld
add
xor
retf
leave
mov
addps
mov
idiv
sbb
sub
or
cmp
repz
mov
iret
add
and
dec
or
mov
fisub
push
and
lods
hlt
stos
imul
xlat
adc
sar
ret
mov
adc
jl
adc
loop
out
imul
pop
xor
jge
jge
imul
xchg
mov
push
dec
imul
xor
shl
pop
mov
pop
mov
xlat
inc
imul
cmp
repnz
jl
jno
daa
clc
xor
sbb
xor
icebp
adc
rol
jmp
add
mov
inc
lahf
fbstp
and
mov
in
(bad)
aad
mov
pushfw
mov
jo
nop
iret
dec
xor
repnz
clc
inc
test
dec
loop
ret
sub
fidivr
ins
jbe
jno
xchg
push
xor
rol
mov
sbb
icebp
sbb
cmps
jge
fcom
push
mov
lds
jae
icebp
cdq
adc
or
pop
jl
mov
push
lods
push
aas
mov
mov
retf
repnz
xor
rcr
mov
add
retf
sbb
xchg
or
jne
xchg
jmp
mov
and
adc
mov
imul
imul
scas
inc
add
sub
xor
jge
and
shr
pop
fidiv
xor
and
pop
clc
bound
fadd
cmp
test
push
pop
call
int
test
nop
push
lock
or
(bad)
cld
shl
fsubr
push
xchg
ret
mov
rcr
dec
pop
adc
xchg
jne
int
pop
loope
loopne
dec
push
shr
cmp
js
cwde
jge
pushf
add
pop
push
pop
push
loopne
sahf
and
add
cdq
xor
into
call
add
je
sub
mov
mov
inc
jb
loop
xor
leave
stc
mov
sub
fdivr
into
adc
pop
bound
int
pop
sahf
ror
inc
add
movs
imul
inc
fwait
addr16
in
mov
sbb
stc
jmp
fadd
push
xlat
mov
sub
fisubr
not
dec
cli
test
(bad)
push
pop
cmps
test
dec
ficom
cmp
dec
ins
jg
mov
inc
aas
xchg
jmp
push
adc
loop
pop
je
adc
test
cmp
(bad)
xchg
fldl2t
fld
mov
pusha
inc
out
(bad)
push
push
fmul
gs
jo
sub
sbb
addr16
cmps
(bad)
mov
or
or
jmp
xchg
or
sub
aaa
jge
je
mov
push
fnstenv
in
pop
outs
out
iret
mov
into
cmps
cmp
inc
aad
sub
mov
nop
retf
xchg
and
cmp
bound
adc
popf
retf
into
or
test
fimul
jmp
cmp
movs
adc
dec
mov
jl
mov
call
xchg
add
push
loope
jle
pusha
inc
dec
cwde
retf
out
das
ja
popa
out
jb
enter
mov
inc
clc
movs
mov
sbb
out
jnp
jmp
jle
xchg
xchg
xor
add
add
cmp
cmp
xor
add
push
push
sar
mov
jb
je
sbb
inc
pop
or
push
repz
aam
retf
inc
std
les
mov
push
mov
pop
mov
mov
push
inc
data16
bound
fwait
cdq
or
test
add
and
(bad)
mov
add
sahf
(bad)
scas
push
mov
sbb
mov
inc
sub
cmp
adc
test
dec
popf
mov
je
clc
sub
sub
jmp
fs
add
arpl
mov
add
jge
pusha
out
mov
cmps
push
jmp
sar
jmp
outs
ret
in
mov
jbe
cmp
jp
jl
sbb
call
inc
or
pop
in
arpl
dec
adc
push
mov
and
and
imul
std
test
in
int
push
inc
mov
dec
lahf
fisub
cs
push
adc
jo
add
mov
sbb
pusha
daa
lods
add
mov
fild
pop
jmp
fsub
cld
in
jae
lea
addr16
or
push
ss
into
icebp
mov
movs
mov
mov
in
jmp
mov
mov
add
push
out
inc
cmp
inc
aaa
lea
fld
pop
or
lods
pushf
stc
js
xchg
mov
push
sar
push
retf
xor
out
repz
jp
sahf
cld
xchg
or
fisubr
pushf
xchg
mov
mov
sti
fwait
or
sub
test
mov
shl
cwde
in
mov
sub
(bad)
jb
or
add
hlt
push
pop
gs
lock
sub
aad
sbb
adc
mov
mov
jnp
repz
pop
cmps
mov
inc
jae
retf
push
jg
push
(bad)
enter
fdiv
jle
cmc
cmp
cmp
out
ja
outs
mov
rcr
fisttp
ret
das
outs
sahf
(bad)
repnz
mov
inc
mov
cmps
stc
mov
xor
cmp
add
mov
xor
xlat
sub
loope
xchg
mov
fld
adc
inc
in
nop
jl
cmp
cdq
push
cmps
inc
and
dec
and
rcr
push
mov
xchg
div
pop
les
frstor
adc
out
es
inc
mov
scas
outs
sbb
shl
inc
ror
cmc
or
ja
pop
jnp
mov
test
xchg
or
sub
mov
xchg
mov
sub
xchg
xlat
jle
popf
or
scas
shr
mov
push
sbb
les
dec
dec
lods
inc
mov
sbb
stc
pusha
ins
sbb
lock
clc
xchg
call
mov
jne
jo
add
xlat
int3
inc
push
mov
out
dec
data16
dec
xchg
adc
icebp
sbb
sbb
dec
in
in
lahf
in
push
mov
sub
add
xchg
add
sbb
arpl
out
fwait
pop
int
jg
cmp
mov
jl
mov
xchg
bound
(bad)
fdiv
adc
shl
ja
adc
cdq
pop
pop
std
adc
(bad)
adc
mov
xor
cwde
and
(bad)
clc
fisttp
pop
xchg
cld
ins
xchg
jae
out
fnstenv
fstp
fwait
rol
dec
mov
mov
(bad)
sbb
int
fidivr
jo
jp
cmp
(bad)
dec
int
cli
pop
mov
pop
mov
jecxz
call
gs
fwait
xor
pusha
es
sub
mov
fld
adc
mov
sahf
xor
pop
aad
jnp
pop
addr16
sub
(bad)
div
shl
adc
cld
cmc
imul
and
fwait
gs
aam
jb
aaa
xchg
out
(bad)
lods
fnstsw
fild
jl
dec
sub
jg
jnp
fldenv
jp
dec
dec
mov
xlat
mov
into
sahf
mov
pushf
adc
bound
shl
mov
push
push
stos
pusha
(bad)
jecxz
push
in
xor
(bad)
sub
dec
out
or
shr
dec
dec
adc
(bad)
lock
xchg
adc
cmp
out
adc
mov
div
sbb
sar
mov
inc
retf
popa
(bad)
repnz
adc
loopne
pop
movs
gs
cmove
jge
lods
mov
jnp
push
int3
cmp
out
jecxz
mov
ror
ficom
xor
sbb
sub
adc
push
test
mov
push
adc
fwait
in
lahf
mov
jmp
sti
mov
idiv
loop
cmp
dec
mov
pop
xor
or
push
sahf
fucomp
cmp
cmp
scas
aas
fucom
xchg
lods
movs
adc
ds
ss
mov
sbb
(bad)
out
cdq
mov
test
fbld
enter
xchg
inc
nop
mov
jnp
adc
sub
lods
add
in
out
xchg
iret
ds
push
add
sti
in
mov
pop
mov
es
add
cmp
xor
mov
xchg
ret
cmp
stc
mov
jbe
loopne
jo
icebp
hlt
sub
nop
xchg
lock
xchg
jns
and
repnz
cli
gs
sbb
je
dec
jecxz
sub
jae
mov
sbb
icebp
das
test
and
cwde
pusha
outs
fsub
xchg
loopne
fld
jl
jg
push
cmp
adc
xchg
sub
rol
pop
mov
add
xchg
sbb
xor
mov
stc
cmp
fs
fcomp
push
mov
das
or
xchg
(bad)
cmp
and
mov
retf
add
enter
bound
ret
add
xchg
(bad)
add
push
aam
leave
sbb
xor
lds
ins
fwait
push
cmp
leave
adc
sub
popf
mov
(bad)
rol
sub
pop
out
in
ret
fild
sti
mov
jnp
outs
aaa
mov
aaa
or
int3
ret
xchg
cmps
push
push
pop
inc
mov
mov
xor
imul
sbb
xchg
push
jmp
pop
clc
call
push
sub
aad
mov
inc
stc
lea
test
dec
adc
ss
xchg
sub
mov
rcr
mov
scas
xchg
xchg
cmps
mov
inc
(bad)
adc
mov
jns
loope
lock
mov
movs
xlat
inc
in
jns
mov
movs
add
dec
test
push
out
fst
cmp
aad
and
add
add
mov
mov
mov
sbb
push
mov
enter
das
mov
cmp
adc
jno
and
adc
sbb
xor
add
or
cdq
mov
push
aaa
cmp
mov
into
stos
mov
push
cmp
cdq
fidivr
mov
es
out
(bad)
sub
inc
jmp
out
call
inc
popf
in
sbb
xor
jecxz
clc
enter
push
std
stos
xchg
or
xchg
adc
mov
imul
sub
add
das
inc
mov
jge
inc
mov
movhps
pop
or
cs
inc
shr
lea
sbb
xor
or
xchg
mov
fild
cmps
pusha
add
fcmove
dec
jle
xor
jg
daa
ja
inc
outs
or
(bad)
jmp
icebp
cs
clc
xchg
scas
ja
ins
sub
mov
mov
jno
jmp
leave
test
and
mov
mov
ret
mov
adc
cmc
jns
push
fcomp
nop
inc
scas
mov
adc
push
int3
scas
dec
cmps
dec
lods
jp
imul
and
cwde
jecxz
in
xchg
clc
clc
mov
ins
es
inc
stos
(bad)
add
call
iret
aam
addr16
ins
adc
jle
cs
fsub
add
loope
adc
je
(bad)
leave
mov
int
mov
pop
(bad)
fist
cmp
jp
cmp
out
ret
mov
xor
jo
neg
test
lds
ja
mov
mov
sub
cli
mov
mov
xor
in
bound
ret
scas
loop
bound
push
iret
lods
dec
lods
les
add
mov
retf
dec
xchg
xchg
std
xor
dec
pop
in
retf
(bad)
movs
and
jae
out
repz
mov
sbb
sub
sbb
inc
cmp
in
or
inc
cmp
out
hlt
cmp
in
fcom
mov
mov
jo
cmp
inc
sbb
(bad)
popa
ret
mov
aas
sub
cmp
sub
jmp
int
xchg
rcl
pop
xlat
push
ficomp
sahf
loopne
out
fild
cdq
pop
cmps
mov
sub
fstp
js
or
xor
adc
rcl
pop
jae
shl
shl
in
sub
and
mov
push
cmp
xchg
mov
mov
test
dec
jge
hlt
or
jbe
stc
popf
(bad)
jae
jle
mov
lahf
(bad)
and
and
or
mov
xchg
js
pop
jno
stc
push
in
retf
dec
adc
les
xchg
ficomp
cmc
scas
jmp
lods
or
xor
outs
add
adc
pop
fild
enter
movs
mov
movs
push
arpl
ror
adc
bound
xor
push
mov
mov
aad
mov
mov
pop
and
or
aaa
aam
dec
aas
outs
dec
pop
std
mov
cmps
lahf
movs
mov
dec
push
cdq
nop
mov
pop
(bad)
scas
fcomip
hlt
dec
lods
lahf
add
sbb
mov
mov
cdq
retf
(bad)
(bad)
mov
cmp
mov
cdq
outs
jecxz
add
or
jmp
pop
mov
xlat
cwde
js
sub
lods
or
mov
fsub
cdq
xchg
dec
pop
rol
(bad)
nop
xor
scas
sbb
mov
adc
imul
pop
(bad)
mov
ret
jb
lods
aaa
sahf
scas
cmp
cld
mov
add
mov
xchg
ins
dec
call
adc
enter
fbstp
sub
stc
test
jb
int3
popf
cwde
pusha
test
ss
int3
cmp
shl
mov
and
(bad)
and
scas
cmp
cmp
cld
loopne
cmp
jecxz
arpl
sub
dec
and
add
repnz
repz
stc
pop
or
js
les
xchg
push
inc
fwait
pop
sbb
(bad)
setle
inc
pop
add
or
pop
rol
loope
xchg
dec
cmp
sbb
aad
push
rcl
arpl
or
jp
ficom
mov
fsubr
test
or
hlt
mov
or
in
dec
add
data16
jl
icebp
jge
adc
jmp
inc
adc
add
push
movs
xor
gs
in
into
retf
fdivr
sbb
jmp
inc
cmp
jp
cmp
loopne
or
cmc
xchg
data16
cmp
xchg
test
push
das
scas
pop
rcr
pop
pop
jle
pop
cmp
jbe
or
mov
cmp
ds
in
loop
sahf
xor
aam
loope
xor
push
ins
iret
out
cld
adc
inc
mov
mov
out
rcl
sar
out
call
dec
sub
dec
cwde
int
shl
xchg
jmp
shr
xchg
cmp
loope
or
loopne
fwait
add
bound
add
or
cmc
out
clc
les
xor
out
int3
(bad)
cmc
rol
pop
popa
fst
retf
outs
dec
pop
fsub
je
ss
jp
add
in
retf
inc
(bad)
sahf
inc
push
pushf
mov
adc
adc
jp
inc
out
or
mov
dec
inc
xchg
int
mov
xchg
inc
mov
jmp
movs
in
push
(bad)
aad
movs
sbb
(bad)
jb
add
sar
and
push
sub
jo
dec
sti
xor
xchg
loope
icebp
pop
rol
jl
mov
xor
push
bound
sti
js
pusha
mov
dec
std
cmc
addps
inc
mov
rcl
ja
lods
inc
pop
xor
pop
xor
push
push
into
out
sub
int3
adc
aas
inc
int3
arpl
push
hlt
(bad)
aaa
xor
int3
loop
sbb
mov
dec
sti
int3
out
inc
ret
push
lock
and
sbb
jl
mov
sbb
fdiv
mov
cwde
movs
pop
mov
or
pop
pop
mov
lods
fwait
jns
call
pop
mov
add
cmp
push
(bad)
leave
mov
repnz
out
xchg
pop
sub
adc
(bad)
mov
adc
adc
jb
lahf
into
jmp
push
and
mov
xor
lods
lds
in
xchg
jle
mov
dec
out
sbb
lahf
sub
not
mov
dec
sub
repz
jmp
xchg
add
mov
pop
jl
gs
inc
test
(bad)
fsub
inc
mov
imul
frstor
call
mov
jno
pop
lea
scas
cmp
scas
jo
(bad)
mov
push
xchg
mul
xchg
push
lahf
xor
mov
dec
sbb
add
fsub
aaa
outs
mov
outs
fnstenv
mov
ret
add
xor
outs
int3
fst
cld
fwait
pop
mov
test
in
lea
sbb
dec
out
les
adc
adc
add
push
push
shl
push
lea
loop
xlat
sbb
mov
fidiv
imul
mov
add
js
pop
mov
mov
mov
push
out
fstp
fcmovnb
in
sub
imul
push
mov
adc
xor
add
jbe
cwde
sbb
add
fs
dec
leave
icebp
lock
add
add
(bad)
jmp
dec
cs
xchg
adc
into
out
aaa
in
and
or
push
xchg
rcr
pusha
gs
fst
ja
add
jo
push
aas
inc
mov
push
(bad)
cli
ret
mov
cdq
dec
outs
stos
dec
stc
mov
inc
inc
aad
or
adc
fist
das
imul
scas
add
adc
and
int
mov
dec
ins
in
inc
xor
in
xchg
push
movs
mov
mov
cmc
gs
or
pushf
push
jns
fnstenv
rcr
or
mov
stos
fsincos
fsubr
jmp
mov
mov
lahf
push
stos
push
and
mov
push
mov
push
rcl
mov
jbe
sbb
add
add
push
sbb
adc
pop
retf
movs
dec
jmp
aam
js
das
mov
add
inc
ins
repnz
into
fdiv
pop
cmp
push
jbe
out
pop
pop
inc
mov
das
fdiv
adc
pusha
inc
fcomp
cdq
cmp
adc
nop
dec
retf
mov
cmp
inc
mov
mov
jecxz
jno
movs
nop
jmp
pop
sub
clc
in
cmps
repnz
in
int
retf
fs
or
jmp
in
pop
inc
xchg
jl
push
pop
adc
sbb
pop
dec
call
test
xchg
sbb
xor
das
stos
push
test
sar
mov
mov
aas
add
push
arpl
sub
fidiv
fwait
ins
sbb
(bad)
mov
ret
repz
adc
push
adc
test
push
in
inc
cs
lods
lahf
push
std
pusha
dec
int
fcom
pop
mov
adc
add
push
cmc
dec
mov
inc
or
cmp
pop
sub
mov
push
les
dec
pop
inc
sbb
push
retf
xchg
mov
lds
mov
mov
mov
(bad)
cwde
and
call
cmova
dec
mov
mov
sbb
int
movs
mov
mov
sbb
xor
inc
xchg
add
lea
ja
inc
test
adc
bnd
push
ins
xor
dec
hlt
data16
xor
lods
pop
icebp
push
or
lock
add
(bad)
mov
imul
xchg
dec
test
popa
inc
mov
xlat
mov
xchg
aaa
int3
push
mov
lods
jge
jae
out
mov
popf
or
cmps
push
push
(bad)
mov
cmp
shr
js
ds
leave
xchg
maxps
lock
or
push
loope
or
in
push
jmp
cmp
loopne
aaa
pop
mov
xor
mov
es
sub
leave
add
xchg
adc
stos
mov
std
pop
imul
pop
cs
xor
push
sub
call
mov
aaa
pusha
(bad)
adc
push
mov
loop
mov
jle
xchg
sbb
out
jg
pushf
mov
cld
push
ret
aas
pop
cmp
in
add
setns
inc
add
jle
sub
inc
push
adc
mov
push
fiadd
jmp
inc
pop
xchg
(bad)
sar
fdiv
pop
add
push
dec
mov
push
lods
push
lock
clc
lahf
popa
push
inc
mov
mov
mov
ss
dec
cmp
add
pop
int3
nop
cvtps2pi
and
rol
sub
mov
out
mov
(bad)
ret
not
mov
cmp
pop
lahf
(bad)
mov
(bad)
test
popf
add
xchg
fstp
or
aad
or
sub
test
cs
mov
mov
je
rcr
sub
ret
push
pop
or
movs
gs
in
sub
sbb
xchg
enter
pmaxsw
nop
xchg
rcl
lea
(bad)
cld
mov
push
stc
adc
fisubr
loop
rcl
inc
loopne
(bad)
jecxz
das
add
je
sub
mov
pop
or
xchg
mov
(bad)
addr16
push
pandn
stos
iret
add
cmc
movs
popa
add
jno
mov
push
fisttp
jno
push
push
ret
cdq
and
xchg
enter
push
das
and
lods
jnp
and
pop
mov
movs
mul
(bad)
(bad)
lods
jno
adc
jnp
sbb
pop
cmp
adc
fmul
adc
push
push
cmc
dec
push
add
in
lock
lock
add
cmp
jmp
imul
xchg
adc
mov
mov
ins
cmp
mov
dec
add
mov
shl
jle
in
cmp
lods
lds
pop
cmp
lods
into
mov
jg
jno
xor
and
mov
xrelease
sub
lahf
les
fidiv
sti
aas
test
nop
sar
ss
adc
es
mov
or
xor
mov
jge
dec
ds
neg
int3
ins
add
mov
enter
push
js
inc
(bad)
loop
mov
mov
and
and
jno
ret
jo
aaa
xchg
add
cs
jmp
push
inc
add
pop
outs
sbb
dec
mov
fsubr
inc
adc
pop
mov
not
xchg
or
fs
cmp
or
imul
or
sub
repz
cld
stos
xor
xor
fwait
pop
sbb
out
dec
ret
clc
jmp
shl
retf
pop
and
outs
mov
loopne
enter
mov
mov
mov
xchg
or
hlt
daa
(bad)
cmp
in
mov
repz
ss
outs
push
cdq
mov
xor
fstp
mov
xor
mov
neg
add
add
mov
(bad)
mov
jae
retf
add
dec
dec
out
jo
ror
std
inc
popf
dec
retf
(bad)
int3
imul
mov
mov
nop
cdq
arpl
cmp
loopne
mov
scas
fnsave
mov
in
inc
ds
loopne
sub
stc
xlat
(bad)
out
test
pushf
push
mov
pop
jmp
idiv
in
push
pusha
jl
out
sar
int3
pop
add
test
lods
fimul
mov
push
and
jecxz
fistp
or
aas
add
fcmove
std
pop
test
mov
push
cmp
add
push
pop
mov
xor
outs
out
scas
leave
and
dec
outs
scas
scas
sub
sbb
xchg
cld
adc
outs
ins
dec
jae
jns
pop
inc
push
xor
mov
pop
cdq
adc
bnd
sbb
mov
mov
aam
cdq
pusha
jle
xchg
cwde
mov
and
test
test
mov
xor
les
movs
aad
cmc
clc
jl
mov
imul
xor
mov
xor
lds
push
xchg
jl
pop
sub
fs
bound
retf
sti
add
aam
xchg
add
push
jbe
dec
fnstenv
dec
pop
xchg
fs
add
xor
int
or
sub
inc
dec
(bad)
xchg
pop
push
dec
and
mov
pop
xlat
enter
push
out
inc
enter
dec
cld
jmp
sbb
mov
gs
add
(bad)
lock
sbb
mov
gs
and
or
sub
cmp
or
scas
fstp
dec
fcom
stc
jnp
sbb
push
daa
push
adc
or
push
jno
mov
sbb
cmp
dec
in
pusha
pop
shl
fiadd
adc
lods
cmp
ins
pop
shl
cmp
pop
fwait
sbb
add
xchg
out
push
cmp
pop
sub
push
stc
fcmovb
ret
int
and
dec
push
push
adc
xor
inc
cwde
fwait
cmp
mov
cs
and
dec
call
cmp
jmp
dec
sbb
call
pop
mov
jnp
jno
push
mov
jne
mov
stc
scas
sbb
push
push
xchg
pop
rcl
les
pop
pop
dec
push
shl
mov
loopne
(bad)
call
xor
test
mov
sub
movs
lea
out
icebp
inc
dec
cmp
jmp
push
ret
fwait
(bad)
shl
int3
fldcw
adc
mov
aam
xchg
push
add
mov
jb
popa
mov
push
nop
call
dec
and
push
mov
mov
idiv
cmp
mov
or
aas
mov
cmp
sbb
enter
or
dec
iret
std
cmovge
leave
mov
xor
(bad)
or
call
sar
and
fisttp
in
fisubr
imul
addr16
repz
mov
sub
push
loopne
fcomp
(bad)
fs
ins
jmp
and
jl
cmp
dec
xor
cs
push
sub
mov
stos
std
mov
sub
mov
adc
push
fs
hlt
aaa
adc
inc
dec
fst
jne
rcr
pop
ins
mov
arpl
test
movs
ins
sub
inc
pop
push
xchg
clc
ds
and
jg
fiadd
push
arpl
or
std
mov
rcr
xchg
sti
mov
in
add
inc
dec
add
gs
cs
pop
xchg
stos
jo
jo
sub
sbb
dec
mov
ds
sbb
rcl
cwde
out
mov
push
rcr
out
sub
xchg
pop
fiadd
and
dec
xor
pop
dec
mov
cli
sub
mov
movs
jns
push
sti
sub
inc
mov
out
aad
cmps
push
rol
pusha
cmps
inc
loop
jne
fwait
cdq
sti
adc
mov
mov
cli
ds
jbe
movs
push
icebp
call
xor
jns
cmp
xor
jecxz
adc
dec
(bad)
mov
jno
ret
push
pop
bound
test
jge
data16
aam
repnz
int3
push
or
ret
dec
push
xchg
jmp
fnclex
add
mov
cs
rol
test
ret
pushf
test
jne
mov
clc
fs
push
retf
jmp
adc
xor
adc
and
sub
clc
pop
add
xor
jnp
mov
addr16
or
loopne
ss
mov
or
push
sbb
dec
scas
inc
xchg
xor
leave
mov
pop
inc
push
adc
(bad)
or
add
popf
cmp
mov
mul
jp
rcl
cmps
mov
repz
jp
in
(bad)
(bad)
call
test
ror
mov
cli
das
push
and
or
rol
addr16
mov
push
inc
ins
push
paddq
popa
repz
(bad)
in
mov
nop
(bad)
mov
fsub
dec
sbb
stos
lods
xlat
ror
and
in
or
push
test
mov
in
inc
push
xlat
jb
stos
sub
dec
jl
push
sbb
nop
mov
jo
adc
pop
int3
leave
out
mov
iret
dec
mov
inc
xchg
adc
push
jmp
outs
pop
(bad)
int3
jmp
and
or
rcr
push
cdq
(bad)
cmps
dec
loope
(bad)
push
outs
mov
lea
adc
mov
push
cwde
out
xchg
mov
retf
jle
loope
cmps
inc
push
push
mov
push
xor
inc
cdq
mov
rcr
sbb
xlat
call
cmc
(bad)
aad
or
rol
cmp
mov
and
loopne
mov
sti
xchg
movs
dec
and
lock
xor
sbb
mov
sti
inc
inc
dec
xchg
aad
arpl
push
sbb
inc
pop
pop
jp
add
jo
push
movs
imul
adc
aaa
fdivr
jno
sar
or
(bad)
inc
mov
loope
hlt
xor
ja
aam
xor
mov
(bad)
sahf
movs
in
xchg
test
sub
sub
in
stc
stos
sbb
dec
or
and
sub
mov
or
popf
mov
sar
mov
ror
pushf
jg
pop
mov
lea
mov
and
jmp
lahf
fdiv
fwait
cmp
sbb
aas
cmp
inc
add
test
inc
out
and
clc
jge
and
inc
in
sub
hlt
pop
popaw
mov
sbb
sbb
add
movs
xchg
adc
mov
sub
dec
repnz
mov
jb
adc
dec
add
(bad)
aad
test
sub
jl
pushf
fcom
xchg
or
cwde
std
xchg
cmc
dec
adc
and
shl
popa
lea
inc
lea
inc
sbb
jmp
jl
sub
adc
pop
sbb
adc
(bad)
clc
lds
jmp
test
add
fimul
inc
sahf
and
aas
test
imul
add
mov
cmc
mov
mov
mov
cdq
pop
jmp
imul
mov
hlt
test
lds
pop
repnz
outs
or
cwde
and
xchg
bswap
xchg
pop
out
mov
inc
push
inc
movs
mov
sub
mov
sbb
loop
call
add
pop
imul
sbb
sbb
lods
pop
lds
push
or
jp
shr
shr
push
stos
push
jg
push
sub
mov
pop
mov
mov
test
jecxz
add
fsub
mov
ins
loopne
mov
jae
xor
push
push
mov
sahf
push
movs
mov
scas
jge
dec
add
jb
jno
out
and
daa
jecxz
or
test
pop
std
sub
sub
jle
movs
mov
in
fcmovb
pusha
stos
js
not
jmp
push
jo
outs
cli
and
dec
push
mov
sbb
push
stos
in
pand
ja
mov
retf
xor
shl
or
retf
adc
pop
jp
sbb
sub
arpl
pop
mov
in
ins
add
es
aad
sub
icebp
js
mov
inc
cmp
sub
adc
cmc
scas
sbb
mov
movs
xchg
stos
add
test
adc
mov
push
cmc
add
nop
lods
push
popa
fist
xchg
inc
out
push
fidiv
xchg
push
test
ins
dec
rcl
leave
or
nop
movs
jnp
ror
dec
hlt
out
sub
hlt
cmp
push
aad
iret
loope
retf
pop
xor
loope
pop
fs
pusha
sahf
push
or
rol
ret
adc
cli
(bad)
mov
(bad)
fcmovbe
outs
shl
ja
and
das
cld
sbb
ds
mov
cmps
adc
sti
sub
mov
es
icebp
pop
enter
cs
dec
add
cmps
mov
dec
xlat
(bad)
and
and
bound
inc
lea
push
enter
mov
xor
gs
loopne
inc
xchg
repnz
ins
xchg
xor
imul
cmp
data16
js
(bad)
or
int
sar
pop
int
sbb
fisttp
fcmovne
push
scas
retf
or
(bad)
rcl
popa
int
stos
gs
mov
push
add
inc
push
mov
inc
nop
rcl
push
sbb
inc
dec
inc
inc
(bad)
cld
repnz
das
call
and
mov
bound
stc
pop
aaa
scas
retf
out
push
outs
mov
test
(bad)
repz
stc
inc
jl
sti
adc
jb
ret
inc
cmp
in
or
nop
pop
fistp
daa
and
(bad)
fwait
aaa
in
xor
fldcw
pop
add
ror
retf
inc
mov
ret
mov
gs
mov
xchg
leave
pop
shl
aaa
xchg
pop
sbb
ins
cmp
xchg
js
mov
outs
addr16
and
adc
(bad)
cmc
push
ds
mov
daa
cs
jns
out
mov
out
push
adc
push
pop
inc
cmc
xchg
mov
or
rcl
push
push
xor
loope
das
ret
ja
pusha
jae
fstp
out
inc
or
xchg
fs
pop
mov
add
sub
pop
xor
sub
fldz
sub
mov
ficom
inc
(bad)
ret
mov
and
push
mov
cli
data16
push
add
mov
fwait
ret
arpl
or
test
mov
lea
cmovno
icebp
leave
test
cmc
inc
pop
sbb
xor
jne
je
(bad)
dec
push
rcl
mov
cmp
add
cs
cmp
xchg
stc
mov
retf
ret
das
or
pop
clc
mov
cmp
test
jecxz
cld
adc
xor
enter
adc
adc
inc
push
dec
shr
jae
dec
arpl
dec
mov
dec
mov
fwait
mov
lods
out
pop
pop
jns
mov
int3
push
pop
in
or
pusha
and
sub
cwde
xchg
mov
loope
jp
sbb
cmc
into
popa
imul
repz
xchg
cwde
or
xor
mov
inc
fld
dec
cmp
and
daa
out
(bad)
jae
add
(bad)
(bad)
mov
lods
call
mov
js
call
ror
mov
ins
pop
ins
sub
mov
pusha
mov
pushf
jbe
fisttp
mov
fwait
sahf
push
inc
jecxz
pop
(bad)
stc
adc
bound
mov
jo
sbb
(bad)
mov
pop
daa
xor
xor
enter
xchg
les
(bad)
(bad)
stc
xchg
out
add
xchg
ficomp
sti
sub
hlt
dec
shl
out
fwait
outs
jl
push
imul
mov
shl
cli
push
xlat
icebp
xlat
pop
or
cmp
ja
shl
js
call
aaa
pop
xor
scas
fnstsw
jae
shr
outs
imul
mov
sahf
loop
pop
dec
mov
dec
xor
mov
jb
out
out
fdiv
ins
cmp
push
int3
jecxz
mov
rcl
or
outs
cs
(bad)
pop
bound
repnz
test
movs
push
jbe
daa
mov
out
sbb
xchg
adc
and
iret
adc
lods
cmps
ds
test
mov
xor
call
enter
fwait
imul
std
(bad)
clc
addr16
push
mov
jp
retf
scas
outs
lods
jno
ret
add
mov
ds
imul
icebp
xchg
mov
inc
dec
jb
shl
stos
out
in
js
xchg
loop
inc
jg
dec
loope
neg
test
outs
sbb
push
jmp
cs
sbb
push
repz
push
retf
std
das
or
clc
popa
dec
in
jg
jecxz
push
int
xchg
add
pop
imul
retf
imul
loopne
cmp
sbb
cmp
(bad)
mov
fidiv
stos
inc
mov
dec
cmp
mov
sub
pushf
mov
in
or
sub
cmps
adc
add
nop
div
cmps
imul
adc
(bad)
cld
push
cmp
stos
repz
cmp
daa
add
fwait
cli
lods
aad
xor
sbb
pop
fwait
add
gs
xor
pop
test
dec
test
ja
enter
mov
mov
push
cmp
xchg
fldcw
aam
mov
push
add
mul
inc
jmp
and
adc
stos
aas
push
mov
mov
push
mov
stc
pop
add
adc
dec
jmp
stos
or
cmp
jecxz
jns
in
ds
loope
cmp
cmc
popf
xlat
movs
pop
and
adc
pop
cmp
cmp
xchg
mov
scas
repz
mov
popf
add
ds
mov
inc
hlt
xchg
scas
(bad)
inc
rol
leave
push
xchg
mov
shl
bound
or
adc
lock
add
fwait
jae
adc
jl
adc
jle
jg
inc
jmp
push
mov
dec
cmp
pop
test
lea
or
adc
sbb
mov
fs
repz
repnz
in
out
es
dec
add
mov
xchg
jb
push
(bad)
repz
(bad)
jle
jb
mov
xor
sub
adc
hlt
es
cmp
sti
ret
int3
mov
jmp
repz
pushf
push
sahf
je
mov
sahf
inc
aam
lods
pop
shl
push
pop
jbe
dec
mov
fld
adc
push
loope
mov
dec
out
fisttp
inc
mov
call
sub
add
repz
call
or
movs
stc
inc
xor
rcr
xchg
popa
pusha
jmp
fcmovu
dec
loopne
repz
mov
sub
sub
(bad)
mov
xchg
push
jp
ret
mov
ficom
mov
scas
mov
jno
call
pop
push
push
sub
inc
adc
ins
push
ror
mul
sahf
loope
mov
je
xor
(bad)
xchg
stos
push
loopne
daa
sar
mov
fnstsw
inc
mov
jns
xchg
jle
mov
sar
sbb
loop
or
icebp
mov
xor
lds
sub
pop
add
out
cmp
mov
lods
sbb
scas
xchg
jo
or
inc
lahf
pop
iret
sub
mov
pop
inc
jecxz
daa
js
imul
hlt
je
sub
mov
hlt
mov
loope
mov
mov
popf
xchg
test
arpl
retf
add
rcr
scas
push
ror
les
or
lock
aad
adc
xor
xor
jmp
pop
mov
cmp
scas
push
or
mov
out
pop
pusha
data16
inc
cmp
lods
pop
jmp
sub
dec
cwde
push
mov
xor
pop
cmp
jge
xchg
mov
jmp
popa
leave
xor
jg
data16
jno
out
xor
test
outs
cmp
ret
sub
in
sub
cmp
adc
lea
mov
retf
or
push
push
xor
adc
and
shl
cmc
movs
mov
adc
dec
add
cmp
nop
fmul
adc
movs
adc
pop
pop
mov
cmp
pop
cmps
fistp
out
pushw
retf
sub
jg
add
pop
in
pop
cmp
or
sub
push
xor
adc
cmp
pop
enter
inc
cmp
mov
sahf
pop
sub
call
je
shr
leave
(bad)
fwait
push
stos
arpl
lods
cdq
pop
in
or
sar
cwde
inc
pop
mov
push
fmul
in
rol
inc
(bad)
mov
mov
sbb
fwait
sti
inc
fcmovbe
jmp
mov
pop
inc
fwait
cmp
sub
movs
out
clc
jge
rcr
cmp
dec
ficomp
mov
jge
cmp
and
cli
mov
or
cdq
dec
test
lods
pop
lea
sbb
ds
test
fisubr
adc
pop
fcom
(bad)
cmp
and
jno
out
and
jle
outs
inc
pop
std
mov
jg
ret
cmps
pop
out
in
imul
dec
ja
fstp
push
xor
pop
push
mov
shl
push
xchg
div
xchg
clc
lds
imul
in
sub
movs
or
ja
add
dec
mov
cdq
jno
jmp
jecxz
pop
and
arpl
test
mov
les
or
pop
xlat
or
adc
retf
scas
shl
pop
pop
pusha
push
push
fcomi
mov
jl
rol
in
jl
(bad)
push
mov
push
xor
lea
inc
and
adc
xor
dec
loop
fld
mov
pop
in
stc
clc
aam
mov
inc
sbb
shr
xchg
movs
add
xor
cmps
fstp
cmp
adc
call
xor
lods
sahf
fs
mov
aaa
add
bound
ficomp
push
lea
xchg
adc
mov
ja
out
push
and
cdq
adc
fldcw
mov
mov
push
lahf
rol
inc
shl
or
cmp
out
repnz
test
ins
inc
mov
jo
xchg
sti
sbb
dec
add
inc
mov
fadd
xchg
call
or
cli
scas
cld
adc
scas
xor
dec
sbb
fwait
inc
adc
xchg
pop
push
lahf
test
sub
jmp
in
add
xchg
dec
and
outs
cmp
dec
pop
mov
pop
sbb
or
(bad)
push
mov
fld
or
data16
sbb
not
jp
enter
daa
add
pop
cmp
jns
imul
or
jae
mov
dec
imul
lods
xchg
ins
pop
cmc
jp
mov
fadd
jae
sahf
cmps
imul
push
mov
adc
or
jmp
and
xchg
pushf
out
pop
xor
ins
xchg
vmovapd
adc
cmp
cmp
nop
push
jecxz
pop
mov
pop
out
mov
sbb
dec
inc
fnstenv
cli
out
daa
int3
ins
inc
out
sar
mov
mov
xchg
dec
mov
push
ds
cdq
test
cs
lea
pusha
xchg
lods
push
mov
enter
pop
sbb
cmp
sbb
sbb
xchg
cmp
dec
sub
mov
outs
lahf
jmp
fld
mov
jbe
int3
mov
cmp
mov
test
mov
(bad)
inc
(bad)
call
cmp
fwait
cmp
jp
ret
dec
sti
std
vmulsd
sbb
test
xor
test
pop
scas
fcom
test
dec
push
and
xor
jmp
fcom
jno
(bad)
rcl
fistp
(bad)
ffreep
xor
sub
adc
addr16
jmp
lods
psubsw
(bad)
test
push
js
and
in
inc
jo
std
aam
fcmovnbe
jecxz
pop
je
mov
mov
sub
dec
retf
mov
add
push
iret
fmul
jb
adc
jmp
mov
xor
xchg
dec
jmp
add
jg
lods
lea
inc
dec
sar
adc
fwait
ja
fcomp
xor
add
and
in
clc
xor
xor
je
pop
pop
icebp
xor
jne
add
xor
loope
lahf
in
push
push
xchg
fwait
xor
and
or
nop
xor
dec
xor
pop
add
xchg
and
push
and
imul
dec
bound
mov
dec
nop
stos
add
push
ins
lds
into
ret
sbb
mov
ret
push
sub
and
shl
fidiv
jb
rol
inc
(bad)
shl
retf
fnsave
sub
leave
dec
sub
repz
mov
xchg
sub
mov
es
add
loop
sub
xor
pushf
mov
mov
mul
test
out
push
mov
push
inc
sar
mov
cmps
in
inc
cmc
arpl
push
leave
mov
mov
rcl
je
mov
lods
(bad)
cmp
sbb
cmp
aam
fsubr
stc
push
std
rol
push
xor
and
ret
ja
cmps
cmp
daa
ss
xor
enter
and
inc
push
push
lahf
cmp
cmp
inc
aaa
dec
popf
repnz
cmps
inc
stc
(bad)
and
jmp
add
ja
mov
aam
or
xchg
xchg
inc
es
push
std
push
test
xchg
iret
movs
sub
and
cmps
push
into
inc
or
xor
icebp
je
sbb
jae
cld
mov
hlt
push
popa
out
xlat
in
pop
dec
sbb
(bad)
xchg
xlat
xchg
movs
test
pop
cs
mov
mov
out
aad
dec
xor
popa
add
inc
mov
fwait
mov
imul
xlat
xchg
mul
and
pop
sbb
in
pop
mov
sbb
rol
jp
push
pop
push
mov
jge
addr16
fwait
adc
push
ret
adc
dec
sub
mov
dec
push
mov
xchg
sbb
jp
dec
call
jl
adc
pop
fstp
dec
xor
in
push
aas
mov
mov
cmp
ficomp
in
pop
les
adc
in
or
adc
dec
in
push
or
or
retf
sbb
in
mov
arpl
or
call
enter
jbe
jl
div
(bad)
mov
int3
inc
test
leave
les
ficom
cmp
div
sub
or
movs
pop
ja
(bad)
out
dec
push
fs
cdq
imul
or
enter
hlt
push
fnstsw
pusha
ret
int3
movs
mov
xchg
jmp
imul
and
fild
mov
inc
hlt
jge
test
sbb
sub
js
leave
mov
xor
(bad)
(bad)
sbb
icebp
fwait
clc
push
adc
and
jecxz
std
dec
sub
dec
jecxz
jne
xchg
xchg
cs
ins
arpl
sbb
(bad)
adc
mov
and
out
mov
das
add
or
fcom
out
neg
inc
dec
push
sbb
adc
fs
sub
aam
xor
dec
push
je
imul
adc
mov
inc
test
(bad)
xchg
mov
aam
dec
(bad)
fild
aas
sbb
mov
sahf
ret
icebp
sub
sbb
in
stos
mov
stos
jmp
xor
call
jp
mov
neg
clc
test
sub
enter
inc
test
rcr
movs
loopne
mov
int3
sahf
stos
jmp
in
sub
shl
rcl
test
rol
rcr
loopne
sbb
je
mov
ds
push
loopne
retf
pop
arpl
jp
jge
pop
fidivr
inc
data16
xor
ja
test
cmps
jmp
in
mov
inc
ror
jns
inc
sti
gs
retf
add
les
xor
leave
mov
push
shl
inc
sub
mov
pop
mov
jo
fisttp
lods
mov
stc
js
fisub
push
inc
dec
sub
imul
mov
pop
mov
mov
inc
nop
mov
into
rcl
inc
jne
nop
out
pop
daa
mov
call
out
add
mov
push
test
sub
cmp
daa
dec
mov
outs
or
jne
out
iret
push
push
je
mov
pop
cmp
adc
into
mov
ja
(bad)
aam
loope
jno
sbb
in
and
push
sti
xchg
mov
push
xchg
cmp
fild
sub
popa
jbe
cmc
(bad)
mov
pop
inc
cmp
jb
cld
sar
cmc
inc
outs
push
not
jne
jnp
and
sub
cmp
cmps
xor
in
xor
cmp
pop
es
jae
pop
add
test
pop
stc
add
push
adc
jne
aam
mov
movs
call
pusha
jno
or
jmp
xchg
mov
mov
push
repz
lods
push
xchg
addr16
sbb
imul
mov
mov
cmc
jae
in
loopne
adc
jo
fs
or
out
jb
(bad)
xlat
or
mov
pop
aas
jne
icebp
test
and
rcl
push
or
cmps
xchg
shr
rol
lock
addr16
clc
and
xchg
xor
outs
xlat
cmp
jns
pop
add
cmp
mov
pop
jmp
sbb
inc
out
xchg
ins
rcr
in
fwait
sub
fnsave
dec
mov
lds
sub
xor
daa
(bad)
outs
stos
xchg
iret
cli
stos
lock
xchg
imul
dec
jno
out
inc
xor
shr
and
jl
push
and
jge
clc
movs
and
inc
bound
enter
aad
mov
shl
enter
or
das
cmps
push
xchg
xor
ins
outs
retf
xchg
xchg
cmps
xor
ret
neg
sub
pop
add
rol
ret
aas
ret
pop
xor
push
jb
repz
adc
ds
stos
shr
outs
xchg
sub
jno
sbb
sub
sbb
sbb
and
push
call
adc
in
cmp
(bad)
int
aas
bound
aaa
push
pushf
or
sbb
jecxz
jo
jecxz
mov
cmps
dec
retf
or
push
push
pop
pusha
inc
shl
repz
xor
loopne
push
mov
pop
inc
and
out
or
icebp
scas
test
xchg
mov
jp
or
jg
loop
adc
retf
mov
and
pop
out
xor
pop
ds
in
xchg
push
jbe
cmp
mov
mov
in
xchg
std
daa
dec
mov
js
or
sbb
in
das
mov
sbb
mov
push
(bad)
shl
push
pop
je
push
mov
xchg
pusha
dec
ret
lock
push
xchg
sbb
(bad)
jecxz
cwde
mov
and
mov
xlat
fsubr
out
mov
inc
dec
addr16
xchg
or
mov
test
ret
into
add
shl
mov
dec
push
jle
cmp
xor
xchg
pushf
iret
outs
push
lahf
scas
push
rol
or
inc
arpl
jo
jp
outs
jmp
add
outs
jbe
iret
imul
pop
adc
aaa
xor
popf
xchg
xchg
xchg
in
pop
fwait
mov
or
or
ret
bsr
outs
adc
push
cli
push
xbegin
fcomp
imul
mov
adc
jmp
loope
inc
cld
jp
inc
test
pop
and
xchg
mov
daa
xchg
mov
sub
fwait
addr16
push
pop
(bad)
dec
adc
pushf
sub
jne
inc
fmul
aam
dec
xchg
jl
add
pop
and
cmc
stos
inc
pushf
dec
js
mov
cmc
mov
jbe
cmps
cmp
loopne
shr
and
pop
aaa
add
dec
push
out
push
sbb
out
cwde
js
ja
fwait
out
mov
or
call
and
mov
mov
sub
in
mov
sbb
sbb
fcmovb
lds
cmp
cmps
mov
sub
test
das
cmp
xchg
test
inc
fnsave
(bad)
aaa
jbe
aas
mov
pop
stos
repz
mov
neg
je
aad
je
rcr
outs
iret
xchg
fcomp
into
pop
inc
lea
inc
jo
push
ins
bound
add
add
ja
sbb
addr16
inc
mov
dec
cmp
cmp
fiadd
retf
fwait
ins
sbb
mov
in
inc
xchg
(bad)
fst
inc
je
out
loop
xchg
inc
(bad)
scas
in
mov
(bad)
adc
dec
and
rcl
xchg
push
or
and
sub
retf
pusha
in
cmp
jp
dec
movs
pop
sub
sbb
xor
xor
repnz
cmp
fbstp
push
lods
test
xor
(bad)
out
cmc
lock
push
or
mov
(bad)
(bad)
enter
cld
call
cmp
inc
pop
das
js
outs
shl
push
mov
cmp
mov
out
and
ret
jp
(bad)
scas
jno
jae
dec
nop
or
mov
jns
popa
pop
jmp
push
xchg
imul
or
inc
pushf
or
outs
popf
pop
cmp
aad
push
enter
mov
outs
imul
or
push
inc
push
xchg
and
mov
out
mov
push
push
ss
dec
repz
adc
sub
popf
pop
das
mov
push
inc
retw
(bad)
into
push
mov
loope
repnz
push
pop
add
jmp
leave
pushf
out
or
mov
fmul
xchg
xchg
adc
xlat
jmp
dec
jecxz
mov
xchg
and
sub
push
xor
ss
adc
outs
pusha
cmp
mov
mov
cmc
xor
(bad)
sbb
xor
mov
mov
mov
pop
in
inc
in
(bad)
push
ds
sbb
imul
xchg
cmps
xor
mov
xor
inc
mov
xchg
scas
or
jno
pushf
fwait
je
clc
cs
dec
mov
mov
xchg
mul
fincstp
pop
dec
(bad)
mov
call
daa
repnz
call
dec
jl
jnp
mov
xor
es
bound
cmp
popa
inc
or
add
xchg
inc
xchg
fnstcw
mov
enter
mov
jmp
sbb
pop
cmp
icebp
adc
adc
cdq
or
fist
lahf
call
adc
mov
scas
cmc
in
cmp
fstp
mov
adc
xchg
jns
xchg
int
fucomp
cmp
repnz
scas
out
pop
push
inc
cs
jecxz
jbe
movs
idiv
inc
mov
sub
cmp
adc
add
mov
js
bound
sbb
jbe
xchg
xchg
pop
movs
mov
jnp
xor
mov
retf
push
dec
sub
imul
cwde
xor
int3
je
shl
or
pushf
rol
sub
dec
sub
fst
sbb
pop
in
mov
mov
inc
sti
xchg
nop
or
int3
push
mov
cmp
sahf
or
fs
loope
add
rcl
add
adc
mov
shl
in
sahf
push
dec
adc
jno
jno
adc
and
push
xchg
mov
mov
or
inc
arpl
fucomp
(bad)
xor
enter
add
les
sti
push
aaa
imul
daa
ficom
ss
(bad)
fcmovnb
sub
pop
outs
out
add
cmps
sbb
loope
push
call
pop
lahf
aam
xor
aad
fnstsw
push
push
loop
push
movs
ret
pop
arpl
pop
jbe
test
xor
aas
xchg
add
push
retf
dec
bound
push
jp
xchg
neg
lds
jmp
adc
inc
add
je
cmp
adc
dec
ret
enter
out
cmps
aaa
mov
push
and
test
pop
sub
or
jne
fcom
int
cmps
cmc
xor
inc
mov
mov
test
mov
and
add
in
xchg
xchg
mov
and
jo
cdq
lahf
cmp
test
sbb
add
push
mov
mov
das
movs
repnz
xchg
outs
out
(bad)
pushf
xor
jp
cld
pushf
push
aaa
sbb
in
push
push
pop
pop
outs
icebp
call
jae
out
pop
add
jno
xchg
fcomp
push
pushf
mov
or
cmps
(bad)
aas
and
rol
or
hlt
mov
and
add
mov
cmp
or
mov
xchg
xlat
mov
pushf
mov
out
mov
xchg
js
cmp
ret
xor
jns
std
jmp
add
imul
ret
pop
jge
fdivrp
cmp
jne
imul
or
inc
pop
jb
fst
pop
cmp
mov
cs
and
jl
or
jns
dec
cdq
mov
ret
scas
test
fdiv
sbb
xchg
xor
adc
cmp
dec
mov
push
mov
xchg
adc
scas
fst
cwde
stc
sub
fild
int3
mov
inc
and
xchg
xor
adc
mov
or
or
addr16
push
hlt
ja
aas
push
test
inc
(bad)
jl
and
imul
mov
dec
mov
mov
es
pusha
addr16
mov
dec
mov
aaa
ror
sbb
fadd
mov
call
xor
shl
xor
dec
sub
sbb
ins
std
cmp
push
(bad)
cmp
xchg
imul
dec
and
sbb
jp
out
dec
loopne
popa
cmp
push
hlt
ds
out
xchg
dec
popa
or
add
xchg
fwait
jmp
retf
push
add
aas
lock
int
fadd
add
mov
stc
test
jmp
neg
repz
cmc
rol
dec
dec
imul
sub
mul
mov
and
fdiv
pop
dec
movs
lea
cmp
loop
sub
bound
or
mov
aam
jge
lds
or
jle
std
inc
jp
sahf
out
movs
lahf
jmp
inc
cld
sbb
(bad)
cmps
cmc
aad
lods
leave
fdiv
xor
movs
sti
lods
xchg
lea
hlt
xchg
and
fbld
rol
cmc
movs
xor
enter
ins
pusha
mov
dec
or
xor
jno
retf
fwait
sar
sbb
xor
les
(bad)
lds
retf
jbe
mov
or
in
vmovhpd
test
jle
stos
or
aam
add
imul
inc
iret
inc
test
fwait
sub
aaa
cmp
xor
mov
and
pop
push
adc
nop
fsubp
ja
xchg
jmp
xor
mul
or
rcr
jmp
cmp
ins
xchg
addr16
pop
inc
jo
and
inc
pop
mov
iret
inc
ficomp
dec
mov
or
aam
mov
mov
scas
xor
mov
xchg
dec
sbb
nop
jecxz
dec
and
retf
cmp
or
dec
fs
popa
loope
or
aaa
outs
repz
sub
sbb
cdq
movs
add
jae
mov
mov
movsx
cmps
enter
out
es
sub
gs
sub
rol
mov
and
icebp
arpl
lock
mov
inc
sahf
dec
scas
or
and
int3
mov
popa
and
push
mov
or
fcom
push
xor
xchg
jbe
mov
xchg
mov
sbb
test
mov
repz
shr
shl
mov
popf
movs
stos
enter
push
add
mov
xor
dec
inc
xchg
addr16
ja
lea
cmp
fdivr
xor
jb
in
add
xchg
push
adc
push
mov
sub
(bad)
adc
cmp
pop
(bad)
lea
mov
shr
mov
retf
mov
or
fs
lds
aas
gs
popf
shl
retf
or
cmp
mov
dec
hlt
jecxz
aaa
sar
xchg
lods
mov
and
and
lods
imul
mov
dec
xchg
imul
mov
(bad)
mov
loop
js
dec
or
ret
rcl
adc
and
lods
scas
fsub
adc
inc
push
lods
dec
movs
mov
in
retf
mov
jmp
cs
jb
cmp
adc
imul
push
cld
and
jecxz
push
xlat
or
shl
icebp
mov
adc
repz
xchg
mov
xchg
xor
(bad)
adc
sbb
aaa
mov
pop
(bad)
or
mov
xchg
push
hlt
sub
call
push
mov
and
fcmovb
jmp
and
retf
or
fsubr
jmp
aad
scas
or
ds
sbb
jmp
adc
in
inc
mov
lods
out
shl
jne
xchg
es
shl
push
fild
cdq
push
push
call
fwait
sub
cmp
div
leave
lock
jmp
out
jmp
or
retf
and
xor
ss
xor
sti
or
dec
adc
in
dec
mov
in
pop
xor
loopne
and
xor
data16
cli
cwde
cdq
mov
pop
mov
or
out
das
pushf
push
popf
mov
xchg
je
dec
das
aam
call
and
sbb
xchg
jnp
nop
cdq
lods
dec
ins
sbb
lahf
lds
push
cmp
test
jle
jbe
(bad)
aam
addr16
or
out
and
std
push
cmp
xor
mov
and
int
mov
sbb
xlat
pop
test
jge
rcr
adc
mov
jnp
cmp
adc
adc
loope
out
arpl
dec
cmp
dec
icebp
fsub
lods
das
mov
xchg
das
dec
xchg
jge
adc
push
mov
jno
outs
stos
hlt
push
sub
mov
stos
inc
push
ja
cmp
(bad)
ins
xchg
and
loope
les
arpl
aas
jge
push
inc
test
int3
push
inc
push
scas
jl
or
mov
xlat
retf
(bad)
pop
mov
mov
sub
mov
inc
sar
aam
ss
dec
ror
add
mov
xchg
fs
fs
outs
lods
call
and
or
test
inc
ror
ins
test
dec
addr16
xchg
mov
retf
dec
test
jns
enter
aaa
adc
unpckhps
shl
inc
in
inc
or
shl
lods
clc
inc
les
pop
xchg
mov
mov
adc
or
lock
shr
(bad)
pushf
cmp
daa
hlt
sahf
adc
outs
xchg
xchg
xchg
pop
xchg
mov
movs
mov
loope
in
cmp
sti
adc
push
lock
arpl
mov
adc
int3
pop
in
lea
in
or
xor
test
jl
popf
mov
call
jmp
ret
fild
popa
jne
fdiv
enter
icebp
cmp
stos
dec
cmp
icebp
in
pop
test
(bad)
test
int
hlt
in
push
xlat
inc
or
jge
jno
jp
sub
add
sub
(bad)
cli
push
jmp
or
mov
and
add
mov
cwde
pop
sbb
data16
xchg
popf
jg
mov
and
inc
mov
sub
ret
dec
inc
mov
xchg
repnz
cmp
mov
nop
mov
hlt
lods
sub
leave
and
cmp
push
pusha
sub
cdq
xchg
jmp
cmc
inc
and
pop
add
nop
cmp
dec
cmc
push
call
test
stos
js
cmp
mov
imul
or
or
mov
cmps
lahf
cld
cmp
xchg
xchg
cmc
cld
call
out
mov
mov
cmp
(bad)
mov
adc
inc
push
cmp
mov
jecxz
pop
xchg
movs
xor
mov
adc
fld
enter
pop
or
pop
push
shr
push
dec
mov
shl
js
add
mov
pop
pop
lock
inc
ror
ret
pop
in
or
(bad)
mov
jo
xchg
xchg
or
mov
jg
cli
dec
fild
fcmovnb
outs
mov
pop
cmp
out
(bad)
cmp
(bad)
clc
fwait
out
cmp
jmp
push
xchg
adc
pop
sbb
int3
push
fistp
mov
push
xor
cmps
add
and
ins
inc
inc
js
xchg
ret
loope
adc
pop
mov
and
xor
(bad)
int3
call
pop
addr16
and
addr16
inc
xor
sub
fwait
push
push
repnz
sbb
fiadd
movs
jnp
adc
loope
cmp
fbstp
ins
(bad)
int
iret
fdiv
sahf
dec
dec
or
ja
push
aad
sub
or
lods
jl
out
hlt
push
inc
fisttp
inc
movs
jge
add
or
jnp
inc
mov
loop
sbb
leave
fstp
aas
out
lds
jmp
jnp
bnd
mov
push
lea
push
rcl
outs
lock
je
cdq
imul
and
mov
movs
mul
enter
cmp
mov
iret
out
es
mov
ror
scas
jmp
hlt
xchg
cs
je
loope
(bad)
fidivr
rcr
int3
mov
aaa
in
js
xchg
inc
stc
in
xor
cld
add
stos
dec
dec
int3
or
ror
shr
cmps
jmp
adc
push
push
or
in
call
add
mov
jl
mov
lods
push
pop
ds
inc
mov
mov
mov
fild
sub
lods
xor
cmc
mov
adc
aas
sub
rol
(bad)
repz
jbe
push
xor
add
cmp
icebp
fsubr
int3
sahf
mov
adc
aaa
test
lods
stos
inc
bound
mov
sahf
mov
or
and
xchg
sbb
mul
inc
mov
adc
data16
daa
hlt
adc
retf
inc
lods
ins
jmp
iret
sbb
and
aam
inc
outs
sub
or
mov
sbb
enter
sti
(bad)
enterw
stc
xchg
push
cmp
pop
xchg
inc
jb
cwde
mov
xor
ss
imul
add
inc
ins
xor
(bad)
scas
fstp
push
sbb
mov
retf
mov
add
sti
sub
lods
and
ret
mov
sub
test
iret
jl
cmps
mov
jbe
add
dec
and
or
stc
inc
fwait
cmc
add
or
adc
sbb
or
add
xor
mov
fist
push
cld
shl
mov
cmp
pusha
lods
add
add
cmc
sbb
pop
jmp
or
push
jmp
sub
jmp
and
inc
in
jbe
ficom
or
jns
sub
jl
ret
movs
xor
mov
mov
inc
nop
jmp
(bad)
xor
int
add
xchg
xor
xor
jno
retf
sub
cmp
fcomp
fldenv
inc
xchg
xlat
outs
aam
xor
out
pop
scas
loope
sahf
test
mov
ins
shl
pop
sub
faddp
inc
ja
inc
out
ret
push
sub
push
inc
and
movs
push
repz
stos
lds
out
sahf
pop
dec
push
loope
lea
shl
addr16
mov
repnz
cmps
popa
dec
dec
shl
jns
jecxz
or
imul
push
sbb
sbb
imul
mov
mov
xchg
loope
mov
inc
test
pop
cmps
inc
push
and
shl
ja
clc
cmp
nop
jmp
retf
or
shl
loope
dec
dec
sbb
ins
pop
daa
fstp
sahf
out
push
dec
arpl
stc
jp
mov
gs
mov
call
dec
scas
and
adc
push
repz
in
jge
sbb
fcomp
fdivr
push
xchg
xchg
mov
jl
sub
mov
fnstsw
data16
pusha
sub
mov
adc
(bad)
xchg
inc
sbb
je
and
aam
lods
mov
xchg
fnstsw
scas
addr16
cmc
lods
repnz
pop
adc
(bad)
and
out
scas
push
jo
fidivr
add
retf
cdq
push
data16
add
leave
lea
scas
data16
and
sbb
xchg
fwait
dec
mov
add
inc
test
jge
ins
fwait
out
test
dec
or
rcl
dec
mov
retf
mov
and
test
mov
sub
call
aas
cmp
and
sub
push
or
add
retf
cmp
pushf
jae
(bad)
movs
in
retf
jmp
mov
hlt
jecxz
jge
xchg
(bad)
es
or
cmc
sbb
jmp
test
inc
sub
in
out
cwde
push
inc
(bad)
(bad)
xor
and
lds
in
cmp
in
stc
(bad)
xchg
loope
lods
add
jle
in
xchg
sub
outs
xchg
test
push
cwde
adc
inc
enter
pop
ja
lods
mov
xchg
not
jmp
fxch
add
cmp
ror
xor
mov
mov
loopne
mov
imul
pusha
mov
les
pop
jo
aaa
sahf
or
movs
lds
jae
aad
sub
sbb
mov
inc
aaa
icebp
mov
frstor
xchg
pop
add
into
and
pop
out
dec
scas
or
scas
ins
add
lea
test
aaa
jg
loope
push
xor
cmp
pop
imul
push
sub
push
pop
rcl
pushf
ins
xor
jnp
mov
call
test
pop
adc
shl
push
push
push
push
fmul
adc
pushf
mov
arpl
leave
inc
cmps
sub
and
loope
mov
ss
xchg
loope
ins
rol
mov
xor
(bad)
pop
push
push
fidiv
pop
cld
int3
ja
pop
call
add
bound
sbb
(bad)
and
stc
sar
cmp
jle
xor
ins
xchg
lock
jmp
nop
push
popa
push
or
sbb
fimul
adc
mov
das
jo
mov
lahf
call
sbb
ret
sub
add
xchg
xchg
call
sub
cmp
or
dec
mov
loop
push
pop
xchg
push
pop
retf
mov
pop
call
gs
cmp
gs
fs
push
xchg
push
mov
xchg
into
fdiv
dec
dec
mov
lods
sub
push
mov
je
fcomp
cmp
sub
push
inc
fidiv
jmp
mov
enter
jns
fwait
cdq
push
ja
aaa
jae
cmc
mov
pop
(bad)
push
xor
push
mov
out
call
cmp
or
enter
add
mov
and
mov
push
imul
lahf
call
mov
fimul
cld
aas
jge
cmovs
sbb
mov
sub
inc
xchg
sahf
into
dec
cwde
mov
arpl
iret
lods
popf
cmp
add
test
mov
pop
pop
retf
call
cmps
push
fstp
rcl
jge
sub
mov
std
add
or
pop
push
xlat
fsubr
pusha
add
les
std
cmp
lock
sub
dec
pop
or
(bad)
xor
(bad)
push
inc
push
xor
jecxz
pop
scas
jne
adc
scas
dec
push
push
nop
jecxz
inc
stos
jmp
mov
mov
xchg
popf
jmp
mov
imul
jmp
shr
sbb
repz
sahf
mov
and
push
sub
jae
pop
and
or
xchg
inc
jae
sub
movs
push
mov
popa
and
retf
adc
mov
cmps
push
xchg
call
xchg
fbld
out
mov
movs
addr16
xor
les
mov
add
enter
jb
dec
iret
mov
lds
arpl
repnz
or
or
dec
ins
js
aad
fstp
mov
dec
adc
mov
jge
popa
imul
dec
int
jne
stc
pop
test
lock
cdq
lods
inc
mov
xor
mov
(bad)
sub
stos
repnz
cmp
push
in
in
das
arpl
inc
mov
ret
data16
cmp
rcr
dec
mov
and
clc
test
jle
popa
xor
dec
scas
lods
inc
mov
test
cld
clc
fsubr
gs
ret
out
mov
sub
ret
inc
add
xchg
aam
mov
sub
mov
out
and
(bad)
adc
mov
bound
ret
test
es
fdivr
mov
or
xor
pop
adc
or
mov
sbb
mov
cmp
(bad)
fimul
loop
ret
lahf
call
cmp
aas
shl
fiadd
es
adc
lods
dec
xchg
xchg
call
jl
xor
cmp
test
inc
cdq
pop
jo
jae
xchg
std
or
cmp
out
mov
sahf
je
mov
sub
push
adc
push
inc
repz
cmp
xchg
inc
pop
ret
aas
xchg
and
xor
or
sti
xor
hlt
sub
push
std
daa
dec
gs
add
jl
jecxz
outs
or
in
push
ror
call
add
fs
push
pushf
fucomi
xor
mov
imul
mov
ficom
jne
mov
sub
adc
push
ds
ins
cmp
xchg
cdq
das
mov
mov
fisttp
imul
shr
pop
dec
andnps
into
pusha
call
ds
aad
push
call
mov
fbstp
lods
call
jmp
sbb
test
push
stos
into
add
rcl
not
loope
pop
fist
jne
jmp
mov
shl
fs
(bad)
(bad)
sub
icebp
xchg
mov
xchg
pop
xchg
inc
in
inc
sahf
mov
or
mov
or
les
nop
add
mov
adc
lock
popf
aas
cmp
in
mov
jb
push
add
div
jbe
jo
fcom
pop
cmp
fnsave
xchg
mov
int
mov
aam
retf
loop
hlt
imul
xchg
scas
sbb
xchg
jmp
in
(bad)
push
or
pop
xchg
lods
pop
xchg
aas
sbb
jp
jbe
jg
les
mov
push
movs
aas
push
xor
arpl
fs
push
(bad)
mov
in
js
and
cmc
sbb
outs
sbb
stos
hlt
outs
mov
clc
popf
ret
push
nop
jle
dec
test
fst
add
pop
std
leave
mov
out
repnz
add
dec
pushf
mov
(bad)
fnstsw
jno
or
int3
xor
rol
test
sbb
jb
sbb
rcl
retf
jmp
enter
xchg
jno
pop
mov
jle
dec
jp
cwde
cmp
mov
push
push
es
jmp
psubsw
sub
sbb
inc
cmps
lock
jmp
mov
jle
jae
adc
cmp
push
jge
sar
jl
xor
jno
scas
and
inc
or
pop
mov
mov
and
xchg
outs
sti
xchg
popaw
aas
add
fisubr
in
(bad)
push
das
loopne
das
push
paddw
nop
cld
das
pop
pop
pop
adc
add
movs
pop
xchg
mov
loop
jne
popf
popa
movs
ret
jne
iret
cmp
dec
sti
jne
ror
or
(bad)
rcr
mov
jle
push
iret
or
leave
mov
cdq
outs
jecxz
mov
call
div
jbe
sbb
rol
test
xor
jmp
(bad)
ja
pop
shl
mov
fidivr
cmps
pop
jmp
push
jns
dec
stos
ins
mov
xor
in
jp
iret
cdq
daa
movs
hlt
out
jo
outs
xor
sub
adc
xor
aaa
cmps
inc
call
dec
push
inc
inc
sahf
nop
stos
gs
je
mov
mov
cmp
push
shl
adc
push
rol
jmp
jg
sti
jo
pop
stc
mov
retf
dec
inc
pop
int3
dec
push
arpl
push
pop
inc
push
mov
sub
bound
cmps
cmp
inc
fcompp
and
mov
lahf
mov
mov
or
psubsb
add
fcom
aam
inc
outs
mov
fsubr
ins
rcl
movs
push
or
stos
in
test
mov
stos
jle
gs
push
data16
cmp
sub
push
loopne
add
mov
push
aam
ret
sub
cmp
test
mov
mulps
xchg
fimul
mov
cdq
jb
jnp
xor
cli
ret
stos
nop
and
inc
setnp
push
and
xchg
(bad)
xchg
mov
add
xor
ja
fcomp
xor
in
lea
rol
(bad)
cmc
in
ins
aad
add
adc
push
xstore-rng
cmps
les
cmp
jb
lods
jg
lahf
mov
cs
std
popa
inc
mov
repnz
jnp
sbb
xlat
cmp
jb
dec
push
bound
jne
ret
adc
int3
inc
push
pushf
pop
into
jmp
xchg
push
cmp
mov
xchg
dec
clc
out
mov
int
jno
mov
aam
or
pop
push
push
sbb
push
sbb
aam
mov
dec
les
push
jno
mov
adc
dec
gs
adc
retf
dec
jle
imul
cs
popa
cmps
in
aad
jmp
mov
xchg
push
shr
popf
imul
out
push
pop
(bad)
sbb
pushf
xchg
sub
movs
in
ds
xchg
mov
mov
packsswb
int3
jns
adc
ss
scas
mov
inc
loopne
mov
xor
push
leave
and
jbe
bound
imul
cmc
jo
mov
jecxz
mov
jecxz
mov
sub
enter
pop
imul
fcmovbe
and
sub
sub
mov
lahf
inc
mov
mov
mov
mov
mov
aad
gs
dec
jge
push
fistp
jg
icebp
into
retf
xchg
loopne
or
loop
out
mov
xor
fld
in
ret
pusha
je
xchg
push
or
jecxz
add
arpl
test
adc
addr16
fsubrp
mov
jbe
es
sahf
addr16
inc
imul
leave
pop
jns
push
and
mov
cmp
arpl
xor
aam
cdq
and
pop
jg
pop
repnz
sbb
aaa
jge
or
push
adc
cmp
dec
pusha
dec
int3
pop
mov
or
iret
jmp
fild
popf
sti
push
dec
ins
pop
dec
scas
inc
(bad)
and
mov
fbld
push
test
pop
std
or
dec
test
nop
das
sar
xchg
mov
jne
mov
frstor
les
dec
and
movs
and
dec
push
jne
repnz
dec
retf
in
and
leave
add
mov
pop
cs
daa
aad
mov
jae
repnz
jmp
inc
mov
ret
xor
sbb
push
sbb
fbld
(bad)
dec
cmp
call
sbb
sbb
addps
pop
mov
jmp
sbb
mov
sbb
mov
in
repnz
push
lods
je
ja
jmp
push
cmp
vcvtsd2ss
mov
mov
sahf
and
xchg
pop
repz
inc
cli
test
push
std
jbe
sub
sbb
cmp
loopne
push
xchg
jne
mov
xchg
mov
in
out
push
dec
in
jo
dec
shl
cmp
xchg
out
mov
cmp
loope
mov
sub
adc
xchg
fs
mov
rcl
sbb
mov
xchg
xchg
jl
and
jno
adc
dec
movs
pop
mov
sbb
adc
mov
pop
arpl
aam
bswap
push
jno
fdiv
pop
stos
int3
xchg
(bad)
mov
cs
movs
loope
mov
lea
mov
icebp
pop
xchg
arpl
or
je
outs
ret
dec
imul
stos
cmp
(bad)
retf
(bad)
cli
cmps
mov
jne
aad
jbe
sub
sub
xor
std
(bad)
out
bnd
dec
adc
mov
mov
push
xor
inc
retf
iret
xchg
inc
cmp
adc
mov
pop
movs
inc
(bad)
out
out
push
lods
in
outs
mov
jb
dec
sub
std
dec
add
mov
or
in
test
xor
into
push
sbb
sub
dec
adc
mov
inc
push
mov
push
repnz
add
js
std
popa
cmp
in
mov
mov
push
pop
les
pop
adc
call
out
mov
pop
jbe
or
sub
out
xchg
push
daa
jge
mov
pop
cmp
popf
add
leave
(bad)
fnstsw
adc
sbb
mov
fadd
mov
mov
dec
imul
and
inc
stc
mov
pop
bndldx
pop
xor
data16
mov
fld
popa
push
stos
fdiv
mov
xor
movs
fnstenv
data16
jmp
out
or
fldln2
xor
retf
mov
ja
jne
push
inc
push
cmp
sbb
data16
mov
sbb
cdq
pop
retf
mov
daa
fsub
clc
cmovge
and
adc
cmc
test
in
mov
stc
ror
imul
mov
scas
jbe
add
mov
in
cmps
ret
bound
xchg
mov
pop
push
icebp
pop
add
rol
and
inc
movs
inc
cwde
imul
mov
push
mov
test
xchg
in
std
dec
push
sub
(bad)
add
mov
push
mov
adc
mov
sahf
inc
mov
call
add
sub
iret
cmp
imul
adc
dec
stos
xchg
cmp
mov
retf
push
fcomi
pop
pop
mov
cmps
push
add
xchg
dec
stc
repnz
(bad)
mov
cmp
fidiv
adc
mov
mov
pusha
mov
pusha
xchg
test
fisub
js
bound
jbe
iret
inc
mov
sub
aas
je
std
xlat
adc
mov
mov
mov
push
mov
retf
xchg
cmp
add
push
pop
mov
les
sahf
ins
and
inc
adc
mov
pop
dec
fisubr
popf
jl
ror
adc
pop
and
mov
(bad)
xchg
sub
stc
int3
xor
loopne
outs
dec
scas
and
(bad)
clc
popa
mov
lock
sbb
daa
iret
dec
into
pop
cdq
mov
leave
inc
or
inc
stos
out
hlt
pushf
(bad)
aam
test
jo
fcom
repz
push
pop
std
popa
mov
popa
mov
scas
loop
not
pop
jo
add
mov
sub
sub
sub
iret
scas
sub
retf
out
imul
xchg
xor
or
xchg
adc
mov
ret
mov
addr16
sahf
add
sbb
(bad)
and
cmp
cmps
mov
adc
out
cmp
mov
rol
jmp
jg
pop
xchg
stos
(bad)
fsubr
imul
mov
fs
lea
retf
sub
xor
mov
mov
push
cmp
jecxz
data16
ins
retf
imul
shr
or
mov
lahf
pop
into
comiss
push
shl
cld
pop
loopne
jo
add
and
hlt
hlt
dec
adc
sub
add
jae
inc
cdq
fwait
retf
cwde
test
in
loope
mov
inc
clc
pop
xor
imul
mov
cdq
pop
xorps
jae
fdivr
leave
sbb
adc
dec
daa
std
cmp
int3
(bad)
xor
jmp
cmps
adc
cli
push
imul
inc
mov
(bad)
das
sub
push
cmp
or
das
test
jl
xlat
mov
pop
and
test
adc
shl
cli
scas
adc
mov
or
inc
movs
pop
or
inc
jmp
inc
or
lock
out
xchg
xchg
outs
les
ja
(bad)
cli
jle
push
or
loope
scas
jg
scas
iret
int
gs
shl
cmp
test
inc
imul
(bad)
mov
das
sbb
into
pop
(bad)
ds
js
or
xchg
mov
cmc
push
sbb
mov
sbb
movs
arpl
pop
stos
xchg
pushf
imul
popa
stos
cmps
jl
adc
(bad)
jnp
cwde
gs
rol
sub
xchg
or
cmc
loop
add
popf
mov
in
xchg
cmp
sti
and
movs
hlt
or
pop
adc
push
and
outs
mov
rcl
jg
jle
sbb
push
stos
mov
cmp
sub
(bad)
cmps
cmp
out
loop
lods
das
add
mov
inc
add
ds
ret
dec
je
xchg
ins
mov
mov
mov
and
sub
fisttp
jle
ja
adc
or
cmp
sahf
push
repz
pop
mov
stc
pop
add
jge
out
ins
icebp
pop
pusha
loop
icebp
jl
lahf
xchg
rol
push
pop
xor
cwde
mov
sub
scas
dec
jmp
jecxz
mov
xchg
dec
adc
aam
jb
sbb
repz
hlt
(bad)
dec
pop
sbb
sbb
frstor
cmp
inc
push
push
outs
into
mov
int3
mov
call
repnz
adc
lock
xchg
add
jle
xchg
dec
je
js
and
sbb
push
mov
push
jmp
jmp
mov
sbb
dec
retf
lock
in
sar
cmp
inc
cmp
mov
dec
jo
hlt
dec
or
mov
mov
mov
mov
mov
sar
jne
inc
aad
les
xchg
std
fs
xor
or
xchg
and
leave
sbb
mov
aaa
push
loopne
aas
loope
loop
xor
mov
or
aam
push
adc
pop
jmp
aad
out
out
push
sub
ins
xchg
les
mov
fldl2e
out
popf
cmp
repz
fadd
clc
sub
or
retf
mov
mov
xchg
cld
jecxz
pop
mov
pushf
or
mov
or
lahf
inc
pop
xchg
je
test
les
lods
mov
scas
(bad)
sub
xor
ret
hlt
adc
mov
adc
idiv
mov
inc
dec
jmp
mov
dec
push
sub
call
cmc
xchg
xchg
adc
(bad)
ret
cwde
push
mov
cmp
adc
mov
mov
or
sub
mov
add
mov
test
adc
cmc
imul
mov
clc
out
data16
jno
and
dec
dec
cdq
fistp
push
bound
mov
xor
leave
inc
sub
mov
clc
test
sbb
add
or
mov
and
push
xor
mov
rol
bound
pop
sub
or
cwde
ror
imul
add
jmp
icebp
cmc
cmp
add
jg
bound
or
cmc
cdq
push
pop
sbb
sub
loopne
jle
mov
sbb
and
push
mov
fidivr
pop
ja
or
xchg
add
push
ins
adc
iret
mov
daa
adc
mov
xor
(bad)
cld
ins
out
shr
pop
push
add
loopne
cmp
push
call
(bad)
xlat
jl
test
jns
xor
mov
fiadd
push
push
ja
rol
sbb
add
xor
scas
sub
xor
shl
cmp
shr
jl
jno
in
in
out
cmp
inc
test
xchg
and
jl
loop
cli
sbb
mov
jae
jl
and
mov
repz
in
aaa
jmp
fmul
mov
scas
fs
cmp
mov
and
jnp
cdq
cs
in
jge
pop
aaa
sub
cmp
mov
mov
cmps
or
pop
movq
xchg
adc
add
mov
pusha
push
and
(bad)
cwde
imul
dec
lahf
sbb
sbb
push
add
fadd
out
inc
mov
nop
repz
adc
lods
rcl
dec
mov
adc
je
jp
lahf
xchg
mov
scas
test
int3
cmp
mov
xor
jae
mov
jo
jbe
in
jle
add
pop
mov
(bad)
(bad)
xlat
inc
sbb
and
push
fwait
shl
shr
add
or
scas
in
xor
push
cdq
sti
in
add
push
outs
pop
push
jmp
cdq
jb
and
jbe
addr16
sbb
enter
add
push
xor
jae
outs
fdivr
repz
mov
out
aas
sbb
sbb
and
cmp
mov
test
mov
and
lds
(bad)
div
fcom
or
(bad)
cmp
loope
call
sub
jmp
mov
psadbw
mov
and
scas
jnp
sub
outs
xor
pushf
aam
(bad)
and
mov
and
sub
or
fistp
(bad)
std
mov
into
push
sbb
cdq
inc
movs
mov
addr16
data16
adc
jl
rcl
(bad)
sti
stc
imul
imul
push
mov
jge
push
jo
pop
jmp
pop
xor
add
pop
inc
inc
call
pusha
shl
out
rol
xlat
add
mov
mov
iret
clc
adc
imul
sti
dec
into
pop
test
stc
pop
dec
ins
dec
(bad)
neg
or
push
out
hlt
dec
jp
push
mov
repz
mov
in
in
fild
xchg
mov
add
and
mov
add
test
push
in
sbb
mov
ret
gs
fld
xchg
xchg
je
xchg
nop
and
jne
outs
mov
jle
(bad)
invd
and
xchg
or
cmp
ss
das
daa
inc
jb
mov
retf
rol
or
mov
scas
stc
mov
jns
fwait
cmps
fadd
or
fist
jo
inc
cmp
pop
pushf
shl
add
lea
imul
mov
ffree
lods
icebp
out
lods
xchg
stc
(bad)
mov
sub
test
push
xchg
sub
cmp
mov
adc
jmp
and
mov
cld
mov
dec
pushf
iret
or
inc
repnz
test
in
or
mov
inc
aas
aad
nop
inc
cwde
add
sbb
out
dec
rol
pop
ja
push
in
pop
adc
inc
(bad)
ds
mov
pop
ret
adc
xor
std
je
(bad)
mov
mov
pop
cmp
rcl
leave
pop
in
xchg
mov
gs
pop
ins
mov
fwait
jne
mov
push
loop
cmps
or
pusha
or
mov
and
pop
add
adc
adc
xor
repz
iret
dec
and
repz
pop
xchg
rcr
aaa
pusha
fld
cld
out
xor
sub
sub
and
retf
pushf
test
shr
sub
in
jae
mov
mov
test
mul
sub
dec
cmc
outs
mov
inc
in
pop
dec
cmps
jnp
lods
sub
mov
cwde
das
imul
repz
push
(bad)
sar
add
push
ror
jne
cmps
mov
bnd
cli
ins
jae
int3
cmp
mov
mov
jle
dec
or
mov
sbb
lods
push
dec
mov
loop
sub
movs
sub
ins
mov
outs
and
int
int
xchg
cs
in
das
data16
lds
jo
hlt
xor
push
sti
and
in
xchg
ss
and
mov
pop
ret
cwde
pop
push
(bad)
cs
sahf
adc
iret
dec
cs
inc
inc
cmp
sub
pop
idiv
jmp
or
iret
fwait
cmp
nop
lds
rol
push
or
ficom
push
cmp
xchg
mov
add
pop
out
ror
js
xor
(bad)
(bad)
shl
pop
push
sahf
cwde
push
jmp
test
repnz
ror
and
push
mov
adc
pop
lods
add
or
sar
push
jge
nop
imul
cmp
arpl
jg
push
sbb
cld
les
mov
sub
(bad)
jmp
cmp
xchg
dec
sbb
dec
pop
jae
fdivr
dec
cmp
jb
pop
fild
push
out
push
mov
jle
mov
xchg
jge
into
xchg
inc
inc
mov
mov
mov
scas
pusha
ds
add
(bad)
push
dec
das
adc
or
test
and
push
and
mov
movs
ret
fdiv
jbe
(bad)
(bad)
mul
clc
or
pop
pop
sub
out
jl
push
cli
idiv
push
cdq
mov
in
mov
jns
aam
jmp
mov
mov
mov
mov
push
and
xor
jo
aad
scas
or
jecxz
sub
sbb
idiv
and
cmp
xor
mov
cmp
add
cwde
or
shl
xor
mov
scas
outs
cs
daa
jmp
mov
cmp
adc
push
(bad)
cmp
adc
ins
dec
dec
in
pusha
adc
xchg
pop
adc
jmp
sbb
(bad)
in
jo
fild
(bad)
test
test
and
outs
pop
shl
nop
ret
jg
push
add
and
jp
jo
and
inc
fild
loopne
in
jge
lea
dec
inc
into
adc
cs
push
stos
fstp
fs
jl
scas
adc
aad
mov
inc
dec
js
push
push
pop
imul
xlat
rol
fwait
or
lea
mov
(bad)
loopne
xor
xor
icebp
das
aas
jg
rol
cdq
push
popa
mov
push
fsubr
(bad)
or
cs
xchg
iret
mov
imul
sub
or
pop
(bad)
or
int3
scas
sahf
mov
or
dec
fwait
cmp
cmp
xchg
fmul
mov
ret
ja
test
adc
inc
clc
jg
loope
int3
mov
inc
rcl
stos
out
pop
lock
cmp
mov
scas
xchg
cmp
or
pop
dec
dec
dec
cmp
lods
push
mov
push
mov
fstp
fidivr
dec
and
rol
mov
sbb
and
mov
sub
repnz
xchg
movs
mov
mov
loopne
pop
mov
mov
scas
or
push
ds
repz
jbe
adc
pop
dec
xchg
or
xlat
sbb
and
shl
dec
sub
push
fs
ds
pushf
push
stc
mov
push
faddp
mov
push
push
jne
xchg
pop
or
sbb
sbb
movs
popa
std
hlt
fadd
outs
pop
push
bound
or
fcom
movs
call
sub
xor
cli
xor
movs
adc
out
inc
out
adc
inc
xor
adc
and
pop
ror
hlt
fwait
push
rcr
inc
in
xchg
jmp
out
adc
jbe
fistp
js
add
loope
ror
dec
imul
add
fist
aas
enter
aas
cmp
out
js
pop
or
push
es
dec
mov
xor
cmp
push
ss
jp
aad
dec
imul
out
into
sar
xchg
pop
mov
push
xor
adc
jl
call
fld
mov
jge
pop
mov
mov
js
xchg
mov
mov
mov
xor
je
dec
stc
sub
mov
mov
std
es
aas
inc
push
sbb
mov
jmp
test
pop
es
lds
adc
push
clc
xchg
fbstp
adc
inc
icebp
add
(bad)
mov
push
mov
out
cmp
adc
push
pop
pop
test
test
inc
movs
bnd
shl
xchg
scas
loope
iret
repnz
mov
mov
pop
sbb
imul
out
inc
(bad)
sbb
dec
(bad)
jns
movntq
jp
pop
data16
mov
mov
cmp
fcom
dec
arpl
xchg
cmp
mov
add
fild
or
xchg
das
push
jl
mov
mov
cmp
idiv
cmc
sbb
sub
in
jmp
push
loop
lods
push
sbb
repnz
lock
push
mov
loop
retf
cli
std
cdq
lahf
and
push
jmp
cmp
and
xor
inc
jle
loop
mov
jne
push
js
xchg
movs
nop
cdq
jae
fldcw
cs
push
dec
cmp
loop
fcmovnu
cmps
adc
dec
adc
cmp
in
xor
sbb
das
cmc
popf
aas
or
jmp
leave
mov
sbb
xchg
nop
ins
adc
inc
pop
stc
and
jl
test
fs
test
bound
jle
push
dec
or
bnd
dec
mov
cmps
cs
(bad)
sub
movs
fstp
mov
sti
cwde
fwait
repz
pushf
push
mov
xchg
or
ficomp
mov
add
aas
scas
mov
pop
add
xor
push
outs
repz
stc
mov
xchg
inc
int3
xchg
mov
cdq
and
jmp
arpl
sub
leave
(bad)
mov
sub
dec
jno
idiv
enter
and
aad
push
or
pop
sbb
mov
sub
lods
dec
pushf
ins
cmp
push
jb
mov
and
mov
jo
push
fnstcw
in
aam
push
shr
das
or
(bad)
add
or
addr16
out
test
xchg
mov
cmp
icebp
mov
push
pop
repnz
leave
loop
das
mov
xor
lods
mov
add
xchg
push
fwait
adc
push
movs
add
adc
cmp
xor
in
or
pushf
mov
in
push
pop
fwait
push
stos
(bad)
aad
sub
fist
cwde
rcr
push
sub
pop
sahf
adc
dec
test
jb
mov
mov
movs
jp
test
mov
xchg
aas
into
cmp
adc
bnd
gs
mov
dec
std
mov
mul
mov
out
ja
mov
pop
xor
xchg
scas
jmp
stos
rcr
scas
mov
xchg
sub
cmp
dec
xor
adc
jb
dec
scas
stos
leave
fidiv
and
push
in
xor
leave
iret
jl
jmp
pop
sahf
fbld
(bad)
cli
sbb
js
cmps
ret
daa
sub
bound
pop
sub
inc
dec
adc
mov
fst
lds
test
jmp
(bad)
mov
sbb
push
xchg
les
out
jns
or
cmc
pop
cmp
stos
sbb
frstor
pop
mov
idiv
test
jl
inc
cwde
jecxz
jnp
cwde
aad
mov
sbb
addr16
pop
push
jo
cdq
xor
movs
pop
mov
ror
imul
add
xchg
ja
stos
leave
outs
mov
jo
fcomip
mov
jecxz
push
loopne
dec
mov
jne
mov
mov
in
pop
in
aas
push
or
test
dec
xchg
adc
loop
arpl
jno
push
push
fmul
ds
outs
sub
push
(bad)
outs
xchg
mov
sub
loopne
dec
ror
int
xor
pop
mov
in
popf
xor
inc
in
inc
mov
cmp
popa
hlt
xor
pop
cs
movs
lea
jb
popa
xchg
push
jmp
scas
rol
cli
sub
cli
xchg
inc
sti
mov
arpl
fwait
xor
mov
and
fs
inc
test
push
jg
mov
push
inc
jmp
scas
sub
(bad)
and
adc
jns
mov
rol
inc
js
cmp
(bad)
scas
rcr
mov
sub
mov
jmp
pop
inc
jno
or
xchg
retf
rcr
push
jmp
inc
pop
stos
jo
outs
push
xchg
out
xor
pop
dec
push
jmp
cmc
and
hlt
jp
cmc
ins
ja
shl
iret
cmp
xlat
push
stos
mov
cmc
ds
mov
stos
cmp
icebp
loopne
enter
mov
clc
mov
shl
mov
xchg
rcr
rcl
push
sub
sub
aam
adc
pop
cmps
mov
cmps
ins
adc
sub
hlt
adc
xchg
pop
xor
jl
xchg
add
sti
adc
mov
xor
add
data16
stos
lods
push
xchg
out
out
sub
jecxz
test
push
cs
arpl
mov
cmps
mov
fidivr
movs
dec
out
inc
test
lahf
jb
jmp
jecxz
push
ret
js
scas
dec
inc
popf
stos
push
scas
pop
jge
mov
int3
lock
js
cmc
cmps
sbb
in
cmp
push
popf
outs
cwde
jl
in
sbb
sti
sti
push
sub
xchg
jnp
mov
pop
mov
xchg
arpl
out
cs
cs
ja
fcmovnb
in
push
dec
or
pop
mov
test
cmp
jl
loopne
std
cmp
mov
pop
jno
sti
int
fisubr
ins
xor
or
fdivrp
adc
xchg
repnz
xor
shr
cli
sbb
cmps
or
out
gs
inc
xchg
adc
cmp
xor
push
push
mov
push
stc
mov
neg
dec
stc
pop
push
ja
push
pop
jb
fstp
push
popf
dec
jns
inc
ret
inc
in
(bad)
cmp
mov
sub
jl
sub
std
fisubr
mov
shl
movs
out
fisttp
adc
mov
lods
movs
(bad)
mov
inc
xchg
mov
push
xor
dec
cmp
pushf
add
test
imul
xchg
outs
(bad)
std
inc
int3
and
mov
mov
cmp
mov
or
cmc
cli
inc
loopne
das
outs
dec
cmps
dec
and
dec
sub
xchg
dec
push
clc
lds
sub
ins
mov
icebp
mov
int
xor
sti
cmp
inc
mov
jge
loop
adc
sub
outs
push
or
in
fs
dec
or
ret
into
(bad)
das
addr16
or
pop
jecxz
out
xchg
jle
iret
or
imul
rcl
cmps
popa
ins
in
push
ss
mov
(bad)
jbe
(bad)
ins
or
and
and
sub
xchg
sub
bound
or
dec
cmp
mov
in
adc
dec
cwde
cmp
inc
jl
jecxz
addr16
add
cmp
pshufw
add
aas
pop
and
bound
je
or
pop
push
and
cmp
pop
inc
inc
and
add
rcr
pusha
push
xchg
dec
sub
test
mov
hlt
repnz
sar
aam
add
test
rol
stos
xchg
je
ins
cdq
xor
xor
jmp
shl
push
or
retf
in
aad
push
icebp
push
jle
je
fldenv
outs
sbb
pop
sub
fs
(bad)
gs
mov
mov
cmps
add
xchg
xor
fild
aas
xchg
lods
xchg
adc
jo
stos
scas
push
inc
arpl
mov
or
push
dec
aas
nop
cmp
sbb
sub
xor
sub
ja
pop
lods
int
jo
jbe
add
sahf
add
das
jp
jne
and
lea
add
movs
adc
sahf
xchg
or
xor
sbb
cdq
jge
fimul
sbb
sbb
fiadd
gs
adc
or
fmul
std
fnsave
mov
mov
pop
jo
mov
mov
pop
fisttp
mov
sbb
xor
cmp
xchg
xor
ja
mov
loopne
jb
sbb
push
inc
jno
push
popa
and
pop
and
repnz
packssdw
cmp
outs
xor
mov
push
call
mov
ficom
in
and
pop
push
push
inc
setle
inc
in
ror
into
test
in
cmp
out
push
je
scas
cmp
(bad)
push
dec
(bad)
idiv
rcr
add
ror
mov
push
pop
jns
es
push
xchg
add
loopne
mov
and
fist
lahf
add
out
jecxz
push
mov
aas
cli
cli
aaa
outs
jmp
xchg
clc
mov
cdq
xor
cmps
push
ins
xchg
aaa
stc
jae
addr16
xchg
mov
sub
pop
dec
(bad)
test
cmp
push
inc
and
rcl
lods
pop
push
adc
pop
movs
in
cmps
cmp
pop
cmp
xor
sub
int
dec
mov
lea
jecxz
push
stos
pop
pop
pop
cmp
outs
dec
inc
nop
mov
xchg
popf
pop
std
sub
aas
mov
ins
call
mov
mov
inc
push
sub
iret
loop
xor
fimul
jg
aas
loop
or
test
aaa
mov
daa
fidiv
iret
pop
mov
cmp
pop
lahf
call
fistp
mov
add
movs
push
jb
je
pop
ins
jle
push
stc
dec
sbb
scas
cmps
and
mov
dec
push
cmp
repz
mov
mov
mov
out
repnz
nop
cmc
mov
sti
and
lahf
push
mov
mov
je
(bad)
(bad)
dec
rol
push
pop
cwde
cmp
and
adc
xchg
inc
cmps
ss
das
(bad)
clc
pop
mov
and
xor
repnz
mov
clc
scas
xchg
outs
ins
jecxz
cli
cmps
mov
(bad)
fldenv
sub
cdq
xchg
or
mov
mov
addr16
popf
nop
fbld
scas
pop
push
add
mov
icebp
aaa
pop
pusha
aaa
mov
jnp
int3
jnp
(bad)
jg
cmp
push
jle
inc
xchg
and
jge
loope
mov
add
xor
mov
test
pop
iret
sbb
adc
sub
pop
outs
sub
cmc
in
add
pop
push
jnp
xor
mov
fcom
xor
mov
add
cmp
in
push
cdq
aad
ror
mov
scas
push
and
ins
inc
lock
pop
xchg
mov
(bad)
cmps
mov
int3
pop
pop
cmp
outs
mov
cwde
xchg
nop
push
inc
dec
addr16
xchg
aaa
cmc
sub
sub
adc
out
pop
data16
push
cmps
iret
dec
fisubr
sub
neg
arpl
sti
sub
and
mov
fnstcw
pop
cdq
mov
push
cmp
les
sub
aaa
jecxz
in
pop
and
xlat
iret
inc
std
fstp
(bad)
rdtsc
and
in
adc
adc
in
sub
icebp
mov
xlat
rcr
adc
pop
pop
mov
repz
dec
sbb
std
cmp
push
es
outs
movs
je
sbb
lahf
cmp
mov
mov
jg
xor
cmp
sub
and
cs
inc
arpl
mov
jo
inc
std
sub
stos
mov
add
popa
push
cmps
pop
push
into
repnz
addr16
out
xchg
sbb
inc
(bad)
retf
test
jg
pop
or
dec
push
fisttp
jecxz
aam
iret
mov
test
pop
mov
xchg
or
inc
pop
adc
xor
jg
repz
or
jecxz
inc
in
mov
inc
js
sub
jbe
jbe
sbb
pop
sbb
sub
xor
fcmovu
std
dec
test
jae
enter
jb
push
stos
pop
sbb
ja
adc
dec
sbb
shl
daa
hlt
arpl
movs
retf
addr16
sar
shr
push
xchg
test
out
mov
dec
js
pop
nop
mov
push
stos
mov
jo
or
add
jecxz
fiadd
add
mov
push
aad
adc
hlt
sub
and
inc
jmp
mov
dec
or
mov
xchg
inc
es
sub
xor
pop
sbb
cmps
jge
dec
ret
cdq
sbb
(bad)
in
adc
pushf
sbb
retf
mov
add
xchg
add
inc
mov
loopne
inc
add
pop
push
in
pop
pop
fiadd
arpl
fmul
ds
pop
push
ret
add
mov
xor
mov
mov
xor
lods
(bad)
cmp
cmp
ins
fdivr
mov
pusha
ds
leave
mov
clc
or
popf
imul
adc
xchg
pop
inc
push
jne
shr
or
mov
(bad)
jle
push
sahf
jae
add
lock
push
pusha
inc
and
not
dec
jbe
sub
cli
rcr
shr
cmp
ins
adc
pop
push
repz
inc
mov
(bad)
mov
scas
inc
mov
jb
retf
pop
ror
ud0
jp
push
lods
add
fnstcw
xlat
bnd
call
loopne
das
push
xor
mov
mov
inc
scas
xchg
xor
add
sub
(bad)
dec
pop
push
scas
xlat
xchg
pop
inc
das
mov
(bad)
pop
call
leave
test
mov
or
mov
xchg
adc
xchg
es
inc
fdivr
out
lahf
les
dec
scas
icebp
cld
xor
inc
lea
enter
push
mov
aam
in
fcom
(bad)
data16
adc
(bad)
icebp
ret
dec
test
add
ds
mov
ficomp
mov
dec
push
std
iret
mov
inc
xchg
mov
xchg
add
jno
and
push
and
fwait
sbb
cmp
shr
or
sub
add
dec
mov
add
sbb
xor
(bad)
mov
stc
mov
dec
int
mov
test
cmp
mov
es
call
in
mov
jne
imul
mov
mov
retf
icebp
gs
stos
call
stos
sub
fwait
pop
xor
sbb
push
retf
mov
adc
ja
push
mov
aad
xchg
sub
mov
sub
es
fimul
ins
das
sbb
jno
dec
int
inc
mov
les
mov
pop
mov
mov
imul
mov
cmp
ins
mov
imul
adc
pop
jno
xor
push
(bad)
xchg
xor
mov
sbb
outs
mov
retf
xor
loope
(bad)
or
jne
cwde
cmp
js
sahf
jecxz
cmp
lods
and
bnd
sub
mov
push
cld
ret
inc
jb
test
lds
je
inc
inc
mov
push
mov
pop
dec
xchg
jecxz
push
and
mov
and
cs
popa
inc
push
cli
ror
sub
inc
call
and
loopne
ret
mov
pop
dec
jmp
cmp
jecxz
out
(bad)
ror
jns
pop
stos
shr
stos
movs
sbb
js
sbb
aad
stos
sbb
cs
xor
inc
ja
adc
fucomp
lock
stos
push
clc
scas
gs
xchg
stc
mov
out
aam
repz
dec
mov
(bad)
cli
add
sub
iret
push
retf
mov
sub
mov
mov
jns
enter
cwde
or
sbb
adc
adc
rol
fisubr
push
jl
jg
and
dec
xor
data16
fistp
add
dec
test
test
push
lock
xchg
enter
and
or
imul
add
ds
adc
repnz
sbb
mov
iret
icebp
pop
dec
iret
cmp
jg
aas
cmc
mov
cld
mov
adc
stc
or
pop
add
repz
test
cmovno
jg
adc
mov
jo
mov
dec
or
add
add
aad
(bad)
lods
inc
pushf
lds
fldenv
dec
shufps
loop
in
pop
push
or
mov
cmp
iret
xlat
in
je
dec
dec
pop
dec
xchg
push
xlat
mov
mov
dec
adc
mov
sub
js
enter
push
lods
in
pop
pushf
loop
aad
into
mov
sbb
sbb
cmp
hlt
cmp
fisttp
push
clc
inc
or
inc
mov
adc
sbb
adc
fimul
repnz
ja
sub
push
inc
aas
cmps
mov
cdq
fidivr
fld
into
xchg
xor
xor
push
pusha
jecxz
clc
dec
ret
xchg
nop
xor
push
out
pop
jb
xchg
inc
cld
nop
adc
or
mov
fcomp
fst
fwait
and
adc
or
pop
dec
push
fwait
popa
rol
scas
adc
adc
js
retf
rcr
icebp
fmulp
ss
pushf
xor
push
inc
je
lock
clc
mov
mov
jae
jb
jnp
(bad)
fxch
add
push
push
mov
pop
adc
jmp
push
ja
cmps
out
int3
cld
(bad)
(bad)
hlt
fcomp
iret
std
outs
add
jecxz
lods
jp
xor
and
dec
ja
adc
mov
ja
rep
test
ud0
mov
inc
shl
test
and
or
scas
mov
stos
scas
jle
adc
cdq
mov
sbb
jo
shl
imul
dec
push
div
xchg
gs
outs
mov
mov
(bad)
bound
stc
je
or
inc
pushf
or
lods
pop
call
je
sbb
(bad)
addr16
push
adc
xchg
mov
lods
sub
jge
imul
mov
(bad)
call
mov
sub
movs
adc
fisttp
sahf
push
lods
sbb
sbb
test
xchg
sbb
paddw
cmp
jbe
cld
dec
pop
repnz
ins
ins
int
in
dec
push
out
(bad)
mov
retf
sbb
cdq
in
aad
cmp
dec
(bad)
pop
or
cld
push
add
mov
jns
out
and
dec
lds
imul
sub
imul
in
adc
shl
xor
pop
pop
push
pop
repnz
mov
rol
push
cmps
shr
sub
loopne
stc
fisttp
lds
stos
(bad)
or
outs
xor
push
add
push
call
addr16
adc
dec
popa
or
and
call
push
loopne
xchg
test
or
mov
aas
push
adc
js
aam
repnz
sbb
mov
repz
out
fld
jp
cmp
scas
xchg
xor
enter
pop
xor
repz
and
mov
jbe
inc
test
fcomp
and
push
gs
in
lahf
(bad)
sti
outs
cmp
lods
cmps
adc
test
pop
mov
dec
and
rcl
push
mov
out
ds
nop
ins
mov
xchg
sub
push
pop
in
adc
fadd
fmul
mov
adc
in
jmp
into
retf
faddp
retf
and
imul
jge
or
push
(bad)
mov
in
out
pop
mov
xor
pop
fmul
push
rol
and
test
pusha
cld
xlat
sbb
xlat
into
mov
sahf
cli
test
stos
inc
cmc
or
push
sub
jbe
pop
xor
adc
rol
daa
inc
das
mov
shl
jecxz
fist
dec
mov
repz
push
xchg
add
je
adc
sbb
ret
test
pop
pop
push
out
pop
mov
fst
and
or
pop
inc
mov
xchg
xchg
mov
cmp
sub
jo
std
add
add
sub
jne
imul
in
or
pop
mov
shr
inc
dec
or
dec
fidivr
pop
scas
(bad)
repnz
outs
(bad)
rol
ins
add
xchg
test
adc
das
mov
stos
pop
daa
mov
sub
xor
sbb
gs
inc
std
pop
add
or
clc
call
mov
adc
push
xor
jns
mov
ins
cdq
pop
fcmovne
retf
ret
popf
xor
push
jl
sub
and
js
push
and
cwde
xchg
dec
ror
jne
dec
sbb
jnp
pushf
test
fcmovbe
push
sahf
test
dec
(bad)
call
fwait
cmps
sub
xchg
outs
sbb
mov
dec
test
cmp
sar
int
lea
out
bound
mov
aas
popfw
mov
out
into
sbb
popf
aas
dec
add
add
or
xchg
mov
pop
pusha
add
mov
add
jg
loopne
adc
dec
push
fdivr
cmp
fadd
test
jmp
retf
or
mov
sar
sub
dec
test
and
mov
daa
aas
add
inc
loop
mov
shl
push
or
hlt
cs
and
std
push
test
iret
mov
pop
sbb
xchg
cmp
movs
mov
jb
mov
clc
mov
test
adc
cmps
cld
xchg
mov
ud0
mov
bound
xchg
ins
pop
std
push
jb
leave
sbb
jl
mov
mov
les
bound
pop
adc
jge
add
pop
or
scas
cwde
clc
sub
jmp
xor
(bad)
add
inc
inc
in
cmp
cmps
(bad)
fdiv
or
jmp
fst
lock
mov
(bad)
push
in
mov
clc
and
push
je
and
sar
in
cli
push
mov
or
xor
(bad)
jl
xchg
lods
fs
push
lock
push
dec
imul
add
jnp
movs
dec
cmc
pop
inc
mov
cmp
mov
xor
pop
sub
pop
fcomp
xor
push
dec
sar
ds
sbb
imul
cmp
pop
adc
pop
(bad)
pop
cs
cwde
inc
xchg
cmp
sbb
mov
jnp
shr
(bad)
mov
jmp
mov
or
neg
ret
aas
jecxz
(bad)
in
jo
or
stc
mov
push
test
mov
adc
in
jbe
jmp
sub
push
push
lods
sub
ds
mov
pop
xchg
fstp
aas
jno
(bad)
push
xor
aas
or
inc
loop
sub
inc
aam
xchg
cmp
bound
ror
cdq
sti
xchg
stos
pop
add
dec
xchg
arpl
outs
imul
dec
jg
xchg
sbb
xor
lea
sub
enter
icebp
imul
outs
mov
jne
pushf
stos
and
adc
scas
xor
mov
enter
fs
jb
xor
push
jge
call
jg
adc
xlat
push
sar
cwde
and
xchg
cwde
(bad)
in
pop
push
dec
scas
xor
dec
fstp
inc
sub
test
dec
lods
outs
arpl
aaa
inc
mov
adc
mov
push
sub
inc
test
cdq
(bad)
fmul
sahf
aad
mov
leave
push
jge
div
ss
xor
jns
or
jg
test
jp
pop
and
push
clc
jbe
loope
or
jbe
cmp
(bad)
sar
pop
and
mov
rol
sbb
cld
aaa
xor
gs
movs
mov
fmul
cmp
cmc
stc
fistp
mul
fs
add
jmp
mov
aaa
scas
xchg
mov
and
test
test
mov
dec
jo
bound
scas
(bad)
or
out
lods
fsubr
xor
test
lea
aas
xor
js
stos
jnp
mov
fcmovnb
repnz
fldcw
push
shr
jmp
mov
adc
dec
sbb
jmp
div
popa
cmovs
stos
cmps
cwde
add
adc
mov
or
fist
and
mov
hlt
stos
or
inc
lock
int3
sbb
in
sbb
xchg
std
dec
movs
aad
adc
fwait
ja
ror
pusha
adc
sub
cld
out
pop
ja
out
iret
mov
out
sub
addr16
pusha
mov
inc
xchg
adc
mov
call
mov
ins
cli
fadd
cmps
push
mov
push
push
lods
test
pop
and
mov
sti
gs
xchg
fs
jb
or
dec
sub
enter
sbb
dec
pop
loopne
ret
mov
or
mov
adc
adc
push
xor
(bad)
jge
(bad)
fidivr
in
cli
js
sbb
bound
pop
mov
mov
push
mov
aad
pusha
call
mov
xchg
out
sbb
int3
pop
mov
mov
fnstsw
imul
cmp
or
test
imul
xor
das
aad
adc
and
shr
pop
mov
test
inc
sbb
fadd
arpl
and
jecxz
in
add
cmp
or
repz
push
aam
or
push
push
stos
sbb
xor
mov
sub
inc
imul
popf
mov
fdivr
loop
push
arpl
sbb
jo
push
aas
xor
mov
pop
xchg
cmps
call
add
xchg
pop
les
loopne
cld
mov
stc
mov
iret
cwde
inc
out
les
sub
fsubr
stc
push
cld
movs
scas
jnp
fnstenv
pop
adc
stos
lock
imul
(bad)
ja
fsubr
das
jmp
aam
imul
mov
sbb
lea
test
lahf
sbb
in
ret
push
pop
jbe
aam
mov
mov
xchg
jmp
test
popf
push
mov
and
add
push
push
enter
sti
adc
frstor
jo
push
pusha
mov
push
outs
and
xchg
loop
(bad)
pop
enterw
ds
retf
jnp
sahf
ror
push
mov
fstp
xor
addr16
popf
shl
cli
add
call
cmp
sbb
xor
aam
jno
mov
jge
dec
out
stos
push
adc
vcvttps2dq
xchg
mov
icebp
pusha
and
pop
or
cmp
pop
push
aam
data16
int
es
ficomp
in
push
push
fsubr
and
int
add
sub
add
sub
je
(bad)
sub
jmp
(bad)
(bad)
adc
xlat
sbb
(bad)
add
jmp
inc
mov
out
rcr
adc
ret
inc
cmp
jge
shl
lock
add
sti
cdq
nop
movs
pusha
inc
and
arpl
push
in
inc
push
or
and
or
pop
shl
jl
adc
or
pop
jle
inc
jle
ror
in
mov
in
(bad)
call
(bad)
and
cmp
inc
jns
dec
jnp
je
push
push
int3
cmp
adc
movs
push
sub
xor
inc
mov
mov
(bad)
repnz
shl
shr
and
jb
xor
sbb
xor
inc
sub
or
jmp
pop
loope
xchg
dec
cmp
dec
out
fcom
stos
sub
movs
retf
jmp
ret
adc
mov
jl
and
fcomip
aad
call
lahf
jno
es
pop
or
cmc
call
dec
mov
ins
popa
(bad)
shl
xor
test
pop
in
ret
adc
in
mov
jbe
ret
lahf
mov
or
jne
jns
jne
ds
scas
sub
and
xchg
or
sahf
mov
mov
sub
(bad)
pop
or
call
retf
jmp
cmp
call
xor
bound
mov
xchg
dec
or
das
cmp
jne
loop
lock
or
adc
pop
or
xchg
je
xlat
addr16
push
pop
mov
cmp
pop
push
sbb
fldcw
jp
mov
nop
dec
push
retf
lds
and
outs
dec
arpl
hlt
outs
sti
icebp
test
jmp
xor
fimul
inc
push
jnp
or
adc
sub
sub
rcl
sub
lods
inc
jae
hlt
and
xchg
call
mov
es
ss
pop
mov
mov
fld
or
or
or
test
sbb
sbb
hlt
in
test
dec
adc
dec
xchg
xchg
xchg
jns
push
shl
jge
mov
ins
cmp
xor
jb
stos
dec
rcl
stc
rcr
adc
xchg
push
or
icebp
pop
cdq
sti
jb
test
fsub
jl
scas
std
sti
pop
icebp
jns
loope
jecxz
mov
jno
idiv
xchg
mov
push
pop
pop
loop
test
pop
aad
cld
and
(bad)
push
das
fistp
data16
mov
xchg
shr
mov
repz
or
jbe
mov
into
inc
int3
dec
test
inc
pop
jmp
adc
mov
mov
pop
mov
jb
sbb
into
repz
sbb
xor
jp
sub
dec
test
sbb
mov
sub
test
mov
adc
sbb
pop
and
adc
xchg
mov
cmp
dec
scas
dec
pop
aam
jnp
push
in
int3
retf
je
jp
or
(bad)
sbb
dec
popa
push
stos
sub
xchg
cmp
daa
aas
(bad)
(bad)
and
jl
repz
jmp
mov
lock
inc
call
lods
sbb
iret
mov
mov
aaa
dec
jmp
in
enter
sub
mov
pop
lds
jmp
out
test
and
mov
stos
inc
call
arpl
mov
imul
lods
xchg
imul
loopne
pop
fnstcw
mov
out
jle
les
xor
(bad)
adc
cmc
popf
sub
shl
enter
adc
popa
hlt
or
lock
xchg
(bad)
pop
in
fbld
cmp
ja
pop
popf
ins
dec
jne
popf
clc
fwait
or
adc
out
stos
fwait
xchg
std
cmp
pop
shr
enter
sbb
jo
sub
mov
dec
or
ins
and
add
fs
jmp
dec
mov
int
outs
and
pop
mov
push
cwde
(bad)
out
(bad)
jmp
or
jno
dec
and
and
dec
test
mov
jns
data16
cmc
add
sub
enter
ficom
jmp
loop
push
nop
stos
mov
es
outs
push
mov
pop
int3
mov
push
add
sub
jecxz
aas
popa
lds
and
test
mov
scas
(bad)
int
pop
add
xor
push
mov
(bad)
fnstcw
mov
fwait
lods
sub
ret
xchg
(bad)
stc
data16
scas
cmc
xor
out
sbb
lds
inc
scas
pop
enter
xchg
int
ret
jl
dec
loop
std
sbb
dec
fwait
out
mov
inc
mul
aas
loope
add
repz
bswap
mov
add
jmp
nop
mov
mov
popf
or
aas
int3
jg
pmaddwd
xor
(bad)
mov
jne
out
sub
and
or
add
sbb
loope
push
in
jl
push
or
push
(bad)
in
cmp
pop
lods
mov
jns
jp
fdivrp
jmp
test
add
cmp
and
stc
loop
movs
xor
cs
jle
stc
std
ret
ja
into
sti
imul
push
iret
jg
push
add
pop
push
xchg
add
cmp
sub
push
push
out
mov
pop
adc
movs
int3
mov
pop
add
xor
inc
xchg
mov
xor
mov
scas
sub
push
pop
cmp
inc
fild
sbb
fidivr
dec
test
pop
cmps
test
mov
fmul
push
mov
iret
add
cdq
dec
out
pushf
int
lods
fiadd
mov
sub
jo
fstp
mov
loopne
pop
adc
add
enter
add
cmp
lock
pop
mov
(bad)
in
aad
fnstenv
sbb
cld
fst
repz
inc
inc
shl
fild
mov
icebp
daa
dec
out
jne
mov
cmp
retf
lods
in
add
int3
loop
push
mov
and
mov
repz
mov
fcmovne
fwait
or
inc
or
idiv
dec
jg
fucomi
enter
mov
add
lahf
pop
or
(bad)
test
jp
cld
or
sar
inc
gs
sar
rol
xchg
in
lock
cmp
jb
(bad)
dec
sbb
sti
jo
push
jmp
cmp
inc
(bad)
xchg
aas
sti
and
pop
mul
or
ds
test
push
stos
cdq
jae
xchg
jp
shl
jmp
(bad)
dec
or
cmp
ficom
nop
jp
imul
leave
into
(bad)
lods
add
stos
and
fisttp
add
pop
push
jb
xlat
mov
adc
or
mov
aad
mov
cmc
call
fucom
push
sbb
push
push
dec
mov
in
leave
mov
xchg
sub
xor
and
(bad)
jno
and
(bad)
ret
jmp
xlat
aam
xchg
cmp
xchg
mov
std
cmp
xor
jmp
mov
fadd
sub
mov
sbb
lock
adc
(bad)
aad
dec
or
lahf
mov
ins
loop
xchg
sahf
mov
shl
pop
xor
sar
loop
mov
dec
mov
fisubr
xlat
stos
push
push
jns
xlat
jbe
push
mov
fsubr
in
mov
sbb
aas
add
in
and
mov
adc
(bad)
pushf
push
aas
lahf
xchg
in
xor
push
clc
ficom
push
stos
(bad)
inc
fdivr
mov
std
call
stc
into
sar
xor
int
lods
and
rcl
jmp
xchg
inc
jl
das
mov
adc
jecxz
pusha
adc
sub
pop
xlat
dec
cdq
movs
out
xchg
aas
mov
stc
ins
loope
jp
jo
mov
or
ret
push
imul
xor
jge
dec
pop
push
sbb
rcl
mov
push
jle
fcom
xlat
loopne
xor
(bad)
pop
xchg
and
jbe
hlt
neg
pop
ins
out
push
sub
add
loope
lock
jne
push
xor
lods
rcl
push
mov
lahf
and
pop
mov
push
inc
push
sar
repz
stos
xchg
std
push
clc
push
aad
sub
sbb
aaa
xchg
cmp
dec
pop
dec
cmp
out
(bad)
push
push
pop
add
xor
mov
mov
enter
push
mov
lea
clc
cmp
jno
ins
or
add
inc
xchg
xchg
dec
nop
les
call
sub
call
xchg
or
push
mov
pop
jbe
pop
pop
bound
fcmovne
inc
in
outs
jmp
or
cmc
pop
imul
je
cmp
xchg
pop
sub
sbb
je
pop
mov
ror
movs
dec
enter
xchg
mov
cld
sub
cmp
outs
add
loopne
rcr
lds
cmp
idiv
neg
cmp
or
mov
push
pop
sbb
popa
clc
ins
adc
sti
lods
cdq
rcl
xor
popa
mov
pop
push
dec
test
aaa
mov
das
xor
jp
push
and
stos
xor
gs
add
loope
inc
sub
push
retf
retf
icebp
sbb
jp
cli
int3
jne
xor
jmp
in
aaa
into
arpl
dec
cmp
mov
mov
rcr
loopne
pop
js
jl
push
ret
(bad)
push
sbb
fimul
aad
mov
call
xor
aad
mov
popf
aad
mov
mov
xor
jno
jo
xor
repz
add
lds
fnstcw
inc
dec
sahf
movs
inc
cli
dec
sar
movs
jne
fsubr
sbb
or
in
shl
and
mov
in
and
aam
add
fsubr
rcl
mov
gs
rcr
pusha
and
ins
sbb
mov
push
jg
call
ret
or
cmp
mov
bound
cs
sbb
inc
les
outs
push
icebp
push
rcr
or
mov
dec
lea
sub
bnd
outs
add
movs
mov
mov
pop
imul
push
mov
add
xor
jmp
cmps
js
mov
out
xchg
mov
daa
add
lods
mov
fucomp
push
in
xor
ret
fisttp
xchg
out
jb
call
aad
stos
fdivr
push
jp
inc
or
adc
xchg
stos
enter
pusha
les
inc
push
mov
push
push
aam
cli
fnstsw
pop
and
adc
mov
nop
xor
pop
cmp
adc
sub
xchg
out
and
loope
xchg
rol
repz
mov
pop
fiadd
push
adc
pop
sbb
xchg
inc
xchg
mov
mov
out
test
inc
idiv
adc
ret
shl
fisttp
jb
imul
xchg
push
adc
sbb
cmp
mov
leave
inc
xor
imul
jbe
or
and
pop
sbb
(bad)
movs
and
ret
sbb
mov
inc
jl
movs
cwde
mov
mov
xchg
inc
sub
lahf
popf
jno
mov
xor
loope
js
mov
mov
enter
dec
jmp
fiadd
mov
sub
sub
dec
(bad)
cmp
jle
fsub
jmp
mov
sbb
mov
push
fnsave
push
jl
pop
mov
repz
sub
(bad)
cmps
push
and
mov
je
mov
ins
or
lds
jl
cmp
xchg
cmps
mov
mov
or
cli
test
stc
adc
in
cmp
pop
cmp
iret
fstp
aaa
cld
pop
(bad)
(bad)
fst
icebp
add
fadd
jmp
scas
fimul
loop
rcl
call
mov
wbinvd
xor
xchg
sbb
xor
xor
hlt
in
jge
rcl
popa
pop
or
cmp
xchg
rol
sub
in
jp
movs
imul
add
not
or
movs
imul
adc
fimul
push
sbb
sub
mov
dec
jg
fs
loopne
(bad)
xor
inc
das
push
xor
shl
lds
js
xchg
pop
pop
xchg
iret
(bad)
xor
jnp
rcr
xor
or
dec
lods
xlat
add
push
xchg
mov
fcmovnb
inc
movs
push
test
pusha
mov
(bad)
inc
push
call
and
je
xchg
int
sti
dec
cmc
pop
mov
notrack
cmp
cld
cdq
cmp
in
enter
mov
adc
cmp
inc
ret
popa
xchg
sbb
les
adc
retf
push
icebp
adc
cmp
fsub
out
adc
ins
mov
retf
jmp
not
xchg
ror
sbb
icebp
cmps
in
sbb
int3
outs
fstp
fwait
pop
inc
inc
repnz
pop
sbb
outs
cmps
sub
retf
pop
and
dec
mov
in
xchg
push
jmp
retf
arpl
test
pop
sti
sbb
movs
pop
popf
pop
ja
out
mov
push
mov
scas
and
ins
test
es
shl
popa
or
inc
or
push
mov
xchg
out
xchg
jnp
sub
(bad)
sbb
xchg
out
mov
int
or
mov
mov
xchg
out
iret
sbb
xchg
enter
push
adc
jns
ins
push
ret
in
sub
inc
pop
imul
push
in
aas
and
pop
or
mov
add
cmp
shr
jne
jns
lods
push
or
es
adc
xlat
xor
(bad)
(bad)
jecxz
push
sub
jmp
ret
fild
mov
popf
sbb
cmp
call
pop
lods
loopne
test
or
jb
sbb
jge
lds
and
mov
sbb
push
pop
and
jo
cdq
jecxz
rol
and
je
adc
xor
sbb
sbb
push
cmp
xor
arpl
jp
fwait
mov
fwait
cmps
or
mov
push
sbb
adc
add
std
push
outs
sub
test
test
add
xchg
inc
adc
test
inc
xchg
leave
cmp
lds
adc
scas
push
shl
aaa
jmp
adc
and
aaa
fdiv
and
adc
mov
dec
ret
lock
adc
inc
pop
push
jp
in
icebp
adc
mov
mov
mov
push
and
cmc
stos
and
imul
pop
jns
in
mov
or
les
xor
out
shr
mov
adc
or
rol
ja
mov
bnd
fdivr
cmps
pop
mov
pushw
sbb
dec
mov
xchg
jmp
test
dec
or
enter
add
inc
dec
jb
mov
pop
lock
cli
xchg
sahf
test
mov
and
aam
mov
rol
inc
retf
std
xchg
mov
test
jmp
outs
jge
or
pop
xchg
iret
aaa
jbe
popa
jnp
pusha
sub
mov
dec
dec
xor
outs
mov
mov
std
push
movs
movs
aad
(bad)
(bad)
adc
mov
jno
push
ror
fstp
sub
add
lods
add
dec
xchg
pop
or
retf
or
daa
fwait
scas
popa
pop
cmp
jnp
add
dec
(bad)
cmp
mov
ins
mov
aas
inc
mov
cli
stos
and
pop
(bad)
mov
jl
pop
or
lock
fsubr
cmp
(bad)
out
pop
popf
imul
and
test
pop
aas
or
push
daa
cli
jnp
rcl
and
into
loop
cmp
(bad)
cwde
sbb
mov
sub
ror
stc
sbb
jae
clc
movs
loope
xor
pop
or
stos
aad
push
sub
in
and
inc
bound
adc
or
or
shl
das
push
data16
sbb
test
dec
mov
adc
mov
dec
push
sbb
stos
loopne
mov
addr16
inc
sbb
pop
scas
(bad)
out
cmp
add
(bad)
mov
fnstcw
out
(bad)
out
lods
ins
ins
push
xlat
cdq
pop
gs
jmp
pop
mov
shl
mov
add
inc
mov
shl
sub
sar
xchg
shr
retf
jns
cmps
aad
lods
add
dec
int3
pop
out
mov
loopne
int
sti
dec
or
daa
aad
xchg
pop
mov
sahf
mov
(bad)
cld
int3
(bad)
out
callw
repnz
add
adc
or
cwde
push
addr16
test
push
fdiv
sbb
enter
mov
cli
icebp
add
and
push
dec
and
js
das
and
loop
push
dec
lods
and
and
sub
icebp
push
sub
in
pop
xor
jae
jae
or
fmul
fs
inc
inc
mov
outs
mov
cmp
jle
push
cmp
dec
pushf
sub
mov
or
clc
jmp
and
inc
or
mov
rcr
xor
jae
pop
aam
sub
into
icebp
popf
adc
mul
or
sti
or
sub
push
mov
mov
stos
aam
push
pop
add
in
inc
xchg
dec
cmp
add
test
test
xchg
pop
nop
sbb
ds
test
aas
les
ret
jns
mul
xor
ins
ror
fisttp
loop
ret
adc
mov
cmps
mov
add
add
jmp
and
(bad)
mov
not
out
pop
inc
mov
mov
xchg
stos
movs
pushf
shl
ds
loopne
or
out
mov
inc
jmp
(bad)
mov
cmp
call
int
dec
jg
add
hlt
je
retf
mov
pusha
pop
mov
fisub
ret
out
sub
loopne
leave
in
dec
jns
cmp
jo
pop
dec
(bad)
xlat
mov
fwait
push
outs
(bad)
in
push
in
and
add
mov
scas
imul
adc
inc
lea
dec
pop
aas
popf
in
fbstp
movs
mov
and
lock
dec
mov
jo
and
mov
mov
jg
and
fadd
inc
cld
imul
jmp
xor
dec
stos
sub
fdiv
add
scas
pop
fistp
sub
xchg
and
leave
out
dec
cld
sahf
sar
or
int
inc
mov
mov
xor
inc
sahf
imul
or
dec
bound
dec
sub
sbb
enter
rol
ds
addr16
cmp
and
fcom
and
jmp
aas
stos
popf
or
data16
jnp
xor
jo
cmp
jp
into
ins
pop
mov
test
int3
fldcw
lock
fs
adc
mov
pop
or
mov
movs
xchg
ss
movs
push
jo
inc
dec
sti
mov
sbb
movs
push
je
stc
inc
ss
pop
add
add
mov
pusha
lock
adc
adc
cmp
and
shl
cmp
mov
outs
jb
pushf
push
or
inc
lock
add
xchg
fidivr
scas
retf
test
dec
popf
ins
sub
mov
inc
cmps
dec
scas
xor
in
ror
out
sbb
push
rol
pop
stos
and
clc
das
mov
jno
cmc
fild
inc
inc
das
adc
jge
or
int3
loope
scas
mov
mov
xchg
cwde
add
and
add
scas
sub
call
ja
pusha
(bad)
cmc
cmp
mov
dec
inc
pop
dec
sysexit
ins
pop
sbb
es
xor
sub
outs
xlat
push
xchg
sub
mov
fisubr
out
fwait
and
(bad)
into
pop
mov
sub
ja
cmp
jg
push
fistp
mov
movs
fidiv
mov
clc
inc
jbe
jg
out
nop
movs
add
pusha
pop
jnp
xor
or
ja
call
nop
and
jmp
pop
neg
or
aas
aam
shr
das
js
push
cmp
test
adc
push
repz
stos
jno
aam
push
jp
dec
jns
retf
ror
xor
scas
imul
enter
lea
loopne
sub
stos
pop
stc
jp
jno
(bad)
jg
add
popa
mov
or
arpl
lea
sbb
push
inc
push
arpl
add
sub
sub
adc
cmp
mov
xor
or
push
mov
movs
add
push
add
fstp
inc
in
in
push
cmps
mov
clc
imul
add
fld
push
pop
ret
shr
jno
movs
mov
hlt
fwait
movs
adc
jbe
xor
es
aam
fwait
pop
sub
inc
inc
pop
or
mov
and
bound
ror
jmp
jbe
cdq
mov
push
popf
push
stos
xchg
rol
sbb
leave
inc
rol
mov
pusha
xchg
sbb
xor
add
dec
es
and
stos
in
popf
push
lds
(bad)
fdiv
push
dec
pop
int3
sbb
mov
mov
pop
leave
and
arpl
xchg
gs
fdiv
mov
xor
(bad)
xor
int3
pop
xlat
test
scas
mov
sub
sar
clc
test
xchg
ror
cmp
mov
aad
fwait
popa
jmp
or
int3
dec
fistp
mov
movs
mov
xor
mov
ret
dec
mov
mov
(bad)
xlat
pop
adc
xchg
or
jb
fadd
int3
xor
mov
mov
and
inc
dec
ds
cdq
cwde
(bad)
dec
mov
sub
iret
push
(bad)
fnstsw
cmp
add
sbb
jmp
mov
or
rcr
jo
dec
popf
dec
dec
ss
push
cmp
les
dec
or
test
shl
cmp
cmovl
(bad)
jbe
xchg
cdq
lock
adc
nop
push
lahf
pop
xor
sub
test
mov
enter
mov
or
test
ficom
or
push
cmp
icebp
mov
clc
xlat
sti
pop
test
lds
icebp
data16
outs
retf
jo
lea
addr16
aas
std
in
and
xor
data16
inc
adc
sbb
pop
xor
push
enter
fsubr
and
sti
movs
fcmovu
into
(bad)
push
(bad)
jne
cmp
test
dec
mov
jmp
shl
jb
jo
or
mov
xor
cmp
push
push
push
clc
cdq
movs
sti
add
ds
nop
push
xor
lahf
adc
popa
push
mov
iret
into
mov
test
outs
jne
pop
pop
cmp
inc
and
push
ret
xor
scas
retf
sub
sbb
into
and
in
in
mov
lods
movs
jp
or
mov
adc
add
into
adc
sbb
lods
adc
pop
fidivr
jae
mov
scas
call
xchg
jg
adc
cdq
jmp
aaa
lahf
pushf
jg
jnp
mov
jb
dec
dec
popa
push
cmp
test
call
pop
add
adc
in
xor
test
push
in
(bad)
je
imul
sbb
fnstcw
aaa
xor
and
and
sar
inc
mov
js
movs
mov
xlat
imul
out
push
ja
sbb
shr
out
mov
rol
pop
cmp
mov
std
pop
xor
sbb
or
sti
cmps
sahf
xor
add
(bad)
int3
push
mov
push
cdq
inc
sub
inc
mov
movs
mov
mov
jg
into
sahf
sbb
jno
cmp
xor
inc
cmp
lock
mov
retf
adc
xlat
in
retf
push
in
(bad)
sbb
jb
rcl
lods
sbb
jp
xchg
loope
icebp
push
in
retf
out
jle
cmp
fs
sbb
into
or
dec
xor
pop
jmp
test
xchg
adc
sbb
rcl
push
call
push
jns
mov
lea
fisubr
mov
pop
xchg
imul
fisub
add
movs
(bad)
(bad)
into
(bad)
jmp
pop
mov
(bad)
cmp
rol
das
(bad)
aaa
(bad)
mov
cdq
aam
jp
adc
cmps
sub
cmc
das
lahf
jb
lea
sti
cmp
push
mov
fnstcw
loopne
mov
ins
cmps
cmp
dec
mov
aam
iret
add
jmp
xchg
sub
(bad)
aaa
cmp
xor
fwait
dec
lock
fidivr
dec
push
call
and
jmp
and
xchg
jmp
pushf
retf
or
inc
outs
sbb
cmp
sbb
or
mov
out
xor
shl
jecxz
mov
push
push
mov
lock
mov
sub
sub
lods
cmp
cmp
cmc
pop
inc
mov
iret
in
xor
push
shl
mov
mov
cmc
cmps
arpl
or
sub
push
mov
loope
(bad)
or
out
popf
mov
mov
inc
cmp
repnz
mov
mov
mov
sbb
push
pop
pusha
pop
mov
mov
sti
shr
cmp
pop
sub
lea
push
(bad)
mov
imul
jl
pop
xchg
imul
and
push
add
sti
mov
jae
add
imul
jecxz
add
cmp
cmp
aas
adc
mov
mov
push
cmp
mov
push
(bad)
inc
ret
rcr
jecxz
xor
mov
xchg
into
movs
fbstp
dec
inc
sbb
data16
xchg
xchg
(bad)
or
mov
push
(bad)
sub
test
test
sub
data16
in
rcl
lods
cwde
or
into
outs
xor
jmp
push
addr16
movs
call
pop
cmp
cdq
(bad)
cmp
rol
out
jmp
xchg
imul
pop
enter
ror
fisttp
inc
in
adc
xchg
aaa
cmp
fldl2t
test
(bad)
lahf
iret
xor
jnp
ins
sbb
clc
cmp
jl
cmc
sar
repz
mov
xor
repz
xchg
xor
cmp
pop
cli
(bad)
sbb
xchg
jle
in
loope
fwait
mov
and
sbb
inc
pop
outs
test
das
mov
arpl
jge
gs
lods
and
and
dec
cwde
adc
sub
fldenv
jmp
add
pop
or
mov
jmp
add
loope
mov
test
push
adc
xchg
and
xchg
icebp
jl
sbb
iret
cmp
movs
clc
popf
cmp
sub
cmp
jge
test
mov
aad
in
enter
mov
jmp
aad
sbb
xlat
push
jg
pop
and
iret
rol
dec
pop
jp
imul
loopne
cmps
sub
jbe
(bad)
pop
stc
and
push
push
or
pop
int
ret
xchg
mov
rcl
xchg
icebp
mov
movs
gs
pop
mov
jp
mov
mov
pop
sub
ins
sbb
jbe
mov
and
inc
aas
outs
mov
in
xadd
aad
out
mov
xor
cli
fs
scas
mov
sbb
xor
xor
(bad)
icebp
jns
imul
adc
mov
jno
jb
adc
(bad)
jecxz
jo
pop
das
dec
daa
adc
iret
cwde
push
cmps
outs
mov
xor
es
push
cmp
xchg
mov
popa
add
jp
gs
xchg
adc
(bad)
call
mov
ins
jge
and
adc
cli
xor
xor
outs
mov
inc
mov
ja
inc
js
sub
stc
xor
pop
and
nop
(bad)
push
std
(bad)
lock
push
(bad)
jle
fist
js
aaa
mov
mov
retf
xchg
cmp
xchg
jo
cli
pop
mov
dec
idiv
sti
retf
shl
and
xchg
dec
cdq
jo
jmp
jecxz
aam
jg
inc
out
call
sbb
mov
inc
bound
lods
push
test
fsub
cmp
rcl
mov
test
jnp
push
dec
sbb
cld
icebp
cmp
mov
mov
dec
push
adc
mov
inc
ret
cmp
and
fs
mov
dec
jg
and
inc
je
ret
test
shl
mov
retf
xchg
enter
in
pusha
daa
aas
test
sbb
sar
fcom
sbb
cmp
bound
in
add
aaa
dec
inc
fst
je
dec
dec
cmp
loop
ins
cmp
sahf
sub
(bad)
dec
inc
pushf
aas
inc
jnp
mov
cmp
dec
(bad)
stc
mov
push
cld
mov
call
push
push
aaa
cwde
jl
ficomp
in
mov
lahf
shl
mov
jne
and
loope
or
pop
icebp
jmp
mov
adc
iret
lds
sub
cwde
cmp
mov
jbe
cmp
and
xchg
mov
jmp
pop
mov
scas
sti
fwait
cs
test
pusha
fisttp
stos
(bad)
shl
cdq
dec
sbb
das
push
call
mov
pop
push
xchg
mov
stos
xor
std
(bad)
sub
je
inc
push
mov
mov
xchg
push
jo
lds
sbb
daa
pop
inc
mov
or
cmp
std
lods
mov
imul
jb
push
aam
or
sub
movs
adc
or
shr
ins
mov
bswap
pop
push
outs
mov
xchg
sbb
and
or
data16
cwde
repz
or
or
stc
in
jno
idiv
in
cmp
in
repnz
arpl
ins
in
jb
sub
or
add
in
mov
arpl
xchg
mov
sub
idiv
je
push
jae
add
xor
jle
mov
fidivr
rcr
stc
cs
in
ins
xchg
mov
stos
cmp
pop
jmp
mov
sub
mov
inc
out
gs
add
push
add
loop
(bad)
out
ja
fdivr
call
lods
fild
cli
xor
lock
pop
arpl
push
inc
mov
ret
icebp
fucompp
ret
add
scas
test
in
add
lods
jbe
fadd
in
cmc
sbb
dec
pop
mov
iret
shl
rol
sub
or
adc
add
xor
daa
push
aaa
lahf
fdivr
jb
jmp
pusha
ror
cmp
and
mov
or
cld
mov
cwde
clc
sub
mov
(bad)
and
in
ror
mov
or
movs
lock
push
add
outs
mov
in
and
jg
in
sbb
in
mov
xlat
ds
adc
pop
xor
bound
mov
(bad)
fs
push
loopne
jb
and
scas
adc
cmps
imul
ja
mov
fdivr
popf
mov
clc
ja
(bad)
shr
or
or
enter
adc
outs
bound
sub
mov
mov
add
jle
add
sub
push
jb
ret
add
pop
mov
icebp
and
jle
pop
mov
inc
mov
repz
cmp
xchg
fwait
pusha
adc
or
push
mov
jo
pop
dec
repz
mov
jmp
push
sub
sbb
and
cmp
dec
call
jo
mov
test
jnp
jno
push
jbe
and
pop
cmp
cmps
mov
stos
(bad)
dec
inc
sahf
in
stos
dec
push
push
adc
mov
js
dec
mov
adc
jmp
and
clc
out
xchg
dec
dec
hlt
fwait
xchg
mov
imul
lahf
cmp
ins
jl
mov
ss
xor
sbb
jmp
shr
bound
cs
jo
arpl
adc
iret
adc
xor
dec
rcr
adc
adc
mov
out
imul
lock
rol
imul
xor
jne
dec
dec
ss
(bad)
mov
stos
jp
sbb
lea
inc
add
dec
enter
fdivr
adc
jnp
imul
pop
mov
inc
lea
out
loope
dec
iret
cmp
inc
cli
sbb
(bad)
test
(bad)
nop
pop
popf
xchg
sbb
pop
pop
mov
(bad)
out
call
fidivr
lods
nop
loop
std
add
cmps
jecxz
dec
cmp
pop
jl
in
and
lss
cld
sbb
mov
jle
pop
jle
cmps
cmp
(bad)
leave
mov
or
repnz
(bad)
sub
cmp
retf
cmp
xor
lea
or
xchg
(bad)
xchg
and
imul
fucom
inc
in
loopne
mov
loope
xor
jmp
sub
stos
xor
sub
rol
out
aad
(bad)
mov
fdivr
add
add
sti
imul
push
das
adc
jmp
pusha
stos
mov
inc
cmps
repnz
arpl
sbb
dec
push
imul
adc
popa
jb
dec
adc
repz
mov
ret
push
or
push
push
xchg
jp
scas
bound
fs
mov
stc
cmp
lahf
add
mov
add
mov
out
out
jno
or
jmp
mov
cmp
and
sub
pop
sub
(bad)
cmps
lea
out
or
cmps
jmp
and
(bad)
sub
or
push
mov
ret
fcmovnbe
sub
or
dec
inc
popf
ins
cs
mov
daa
enter
jg
scas
imul
jl
jae
out
push
mov
std
adc
test
movs
jge
push
and
aas
in
repnz
inc
mov
clc
out
mov
and
hlt
inc
jmp
inc
outs
or
dec
xchg
outs
(bad)
jl
js
out
loopne
pop
mov
dec
fsubr
es
dec
stos
sahf
sbb
mov
sub
lea
or
mov
lahf
fild
dec
movs
test
mov
(bad)
out
sbb
mov
sub
lods
xor
in
mov
pushf
push
iret
(bad)
mov
lock
and
sub
mov
aad
dec
jmp
shl
push
not
(bad)
out
cmp
addr16
cmp
jp
or
out
jno
jmp
add
mov
bswap
jg
inc
sbb
data16
mov
dec
cmps
mov
pop
xchg
imul
xor
inc
jp
push
jl
lea
jno
jecxz
fiadd
push
(bad)
inc
mov
movs
jmp
movs
jne
adc
mov
int
sar
mov
cli
mov
cmp
push
(bad)
loop
and
mov
imul
adc
ficomp
fdiv
adc
xchg
mov
xchg
and
push
dec
leave
jg
xchg
(bad)
pop
mov
xchg
js
test
repnz
in
pusha
mov
sub
out
or
and
jp
in
or
add
call
movs
adc
loope
push
jg
cwde
(bad)
aas
sar
push
jmp
arpl
dec
(bad)
fistp
adc
add
xchg
jmp
dec
cs
fidiv
and
cmps
pop
cmp
lea
repnz
lods
pop
mov
int
mov
lahf
aam
cmps
cld
inc
repnz
mov
loope
ror
out
mov
les
and
jmp
adc
inc
dec
out
push
rol
jp
sub
fs
gs
jp
cdq
aam
sub
mov
and
xchg
jl
or
sub
je
jns
outs
test
scas
push
ret
push
mov
jb
xor
cmps
cmp
ins
and
or
dec
ins
jecxz
sub
popa
or
xchg
pop
sbb
mov
xlat
xchg
jne
xor
call
add
or
enter
out
cld
jo
dec
sbb
cmp
out
ds
mov
daa
or
adc
pop
lahf
aas
jne
ins
sub
dec
lea
mov
imul
icebp
out
sbb
xchg
stc
mov
fidiv
(bad)
in
sub
push
push
mov
dec
fcomp
mov
stc
call
xchg
or
pop
fst
sbb
add
test
iret
add
push
call
lock
dec
push
cmps
jno
fcmovbe
jns
mov
adc
cmps
cs
push
(bad)
pop
push
cmc
mov
cmp
test
stc
pop
xchg
pop
cmp
stos
scas
rol
pop
sbb
je
rcr
mov
xor
(bad)
iret
mov
test
xor
pop
fmul
and
addr16
scas
es
div
lahf
cwde
push
or
xchg
mov
xchg
lea
outs
call
mov
in
sub
test
in
mov
cmps
icebp
(bad)
sbb
mov
cmc
sbb
hlt
out
fs
push
xchg
xchg
in
jbe
add
inc
cmp
inc
add
inc
enter
jle
pop
test
addr16
lods
pop
test
cmp
mov
test
dec
mov
(bad)
ror
add
mov
idiv
ja
test
dec
mov
sar
out
xchg
jne
test
mov
sub
fwait
xchg
jge
pusha
in
stos
inc
mov
stos
sbb
mov
push
in
imul
jp
sub
aaa
jno
imul
pusha
jne
call
gs
ins
sahf
mov
fmul
add
icebp
and
adc
fisubr
xor
aas
or
pop
(bad)
and
out
sub
cli
cmp
or
push
xor
les
pop
xchg
push
das
les
cld
(bad)
jb
imul
clc
sbb
in
xor
pushf
shl
imul
inc
(bad)
nop
mov
add
sbb
je
or
jne
(bad)
idiv
adc
mov
popf
outs
and
jge
js
aas
iret
data16
jae
mov
addr16
or
aad
or
ror
sub
or
leave
jb
or
pop
shl
icebp
int3
jecxz
adc
out
or
mov
addr16
cmps
mov
adc
mov
push
outs
mov
inc
cdq
fs
xlat
call
das
clc
mov
loopne
pop
xor
or
loop
lods
mov
mov
inc
push
hlt
es
mov
xchg
pop
xchg
(bad)
jp
ret
ficomp
fcmovnbe
jae
(bad)
fiadd
retf
outs
mov
(bad)
and
int3
xor
push
repz
sub
or
mov
add
or
scas
add
rcr
call
popa
or
lock
mov
test
pop
cmp
xchg
scas
and
add
xchg
cmp
scas
in
mov
(bad)
sub
pop
jmp
rcl
mov
pusha
mov
stos
data16
pop
aam
push
adc
scas
out
dec
dec
(bad)
cld
jecxz
fwait
stos
fistp
adc
addr16
mov
jmp
dec
inc
ins
sbb
cmp
popf
mov
mov
aaa
push
inc
mov
adc
loopne
and
and
pop
pop
mov
int
adc
jmp
es
push
pushf
xor
cmps
dec
fadd
dec
fdivr
aaa
sub
mov
push
and
js
cmps
or
cmp
call
ror
inc
sbb
hlt
inc
into
mov
push
lfs
aam
sub
or
and
cmp
xchg
push
jg
adc
mov
test
and
mov
mov
dec
dec
sbb
mov
xor
inc
jmp
xlat
push
icebp
popa
xchg
sub
jmp
(bad)
int
dec
ror
popa
dec
nop
int
pop
xor
xchg
sti
mov
mov
sbb
call
aad
cmps
test
retf
xor
stc
sub
ins
ficom
add
(bad)
xchg
sbb
inc
lahf
jmp
call
dec
div
mov
mov
test
mov
and
shl
cmps
mov
dec
loope
and
sbb
xchg
add
fidiv
cld
push
daa
xor
cmp
call
mov
add
xor
push
lock
sbb
xchg
jl
adc
out
jg
in
iret
outs
(bad)
xchg
add
fisubr
lods
in
fst
js
pop
loopne
jb
fxtract
push
pop
loopne
mov
or
jno
mov
jecxz
pop
dec
lock
add
popf
inc
aaa
sbb
movs
jns
adc
or
out
sub
pop
pop
leave
scas
push
repnz
adc
xchg
mov
adc
and
std
jns
mov
push
xchg
outs
or
dec
ret
jg
idiv
gs
rcr
xchg
je
pop
sbb
into
into
sti
and
aam
mov
mov
jbe
repnz
mov
lahf
push
dec
fistp
pop
pusha
mov
push
push
add
popf
jne
dec
push
(bad)
cmp
xor
cmp
inc
std
jmp
pop
cwde
mov
cwde
retf
push
fldcw
bound
into
mov
inc
or
inc
mov
lock
jo
and
test
fdivr
push
mov
sbb
push
cmc
mov
pop
lods
aaa
shl
in
sbb
adc
dec
dec
jl
movs
sbb
mov
jo
mov
sbb
mov
repz
popa
mov
or
mov
jbe
ror
aam
dec
repnz
fild
cmps
outs
sahf
cmp
inc
dec
cmp
dec
inc
add
pop
dec
or
lock
add
stos
in
and
jae
neg
push
dec
mov
repz
cmp
push
stos
ret
loope
jno
xchg
push
je
aad
sar
je
pmaxsw
sbb
or
fstp
cld
jns
jmp
scas
dec
sahf
cmp
gs
hlt
cmps
push
xchg
dec
(bad)
xor
push
mov
cmp
xchg
mov
cmp
adc
push
adc
scas
(bad)
jne
in
js
retf
fdiv
fisttp
into
cmp
push
cmp
and
xchg
pop
dec
jmp
jmp
pop
fwait
cmp
mov
add
repz
addr16
mov
mov
dec
mov
stos
mov
cdq
dec
mov
sbb
test
mov
xchg
inc
lea
inc
cs
retf
push
inc
and
cdq
iret
sub
loope
(bad)
hlt
pop
pushf
sbb
xchg
in
jecxz
cmp
mov
ret
(bad)
xchg
pop
jbe
adc
dec
inc
je
adc
scas
scas
stos
and
add
xchg
xor
popf
xor
sub
mov
fmul
retf
cmp
xchg
shl
hlt
cmps
mov
pop
in
rol
pop
repnz
cmps
xchg
add
ror
data16
push
call
aad
mov
cwde
add
add
nop
xchg
retf
fmul
cmp
in
or
dec
pusha
lods
pusha
in
mov
enter
xor
push
cld
pop
gs
sbb
sub
cmps
std
inc
jo
add
add
sti
pop
xor
lds
imul
fdivr
mov
out
xor
mov
and
jo
lods
iret
mov
ins
ret
jns
push
out
jl
sub
or
jae
xor
gs
sahf
jns
mov
and
xchg
in
jmp
rol
mov
sbb
jg
cmp
mov
mov
mov
(bad)
sub
rcr
stos
call
nop
pop
(bad)
ret
or
xor
stos
mov
test
pop
sbb
adc
cmp
ins
cmp
jbe
out
jmp
jmp
fwait
lods
push
ins
or
xchg
int
fisubr
(bad)
pop
(bad)
jg
mov
(bad)
push
ss
pop
cdq
or
cmc
sub
lock
cdq
mov
mov
das
xchg
cmp
pop
fidivr
xchg
js
scas
into
iret
jmp
push
xchg
jnp
imul
lahf
mov
hlt
clc
pop
int
jo
jecxz
jbe
fld
in
jmp
in
sub
push
cmp
add
dec
mov
nop
add
(bad)
jns
mov
ss
dec
gs
sub
in
dec
pusha
push
xchg
in
mov
or
aam
loopne
mov
dec
mov
xchg
inc
push
xchg
daa
push
add
neg
lods
jp
imul
pop
inc
ins
or
push
jne
pop
nop
add
clc
jbe
cli
mov
nop
out
ins
rol
(bad)
jo
mov
xor
in
mov
or
cmc
jo
jno
add
jne
pop
sbb
xor
sbb
jns
cmps
ffree
cmp
sub
fmul
out
or
xor
adc
mov
fldcw
xchg
xor
xlat
cmps
jp
dec
fidiv
push
neg
push
push
xchg
inc
outs
add
mov
jge
fstp
and
fs
mov
dec
mov
push
adc
add
dec
pop
jp
fild
mov
test
xchg
sub
push
jmp
fild
outs
inc
dec
pop
jmp
dec
sahf
ror
dec
ins
test
test
jnp
push
pop
fild
dec
xor
push
or
cli
mov
movs
push
xlat
data16
pop
(bad)
xchg
inc
sub
gs
pop
in
and
jbe
dec
ret
cmps
dec
push
xor
dec
gs
pop
clc
mov
arpl
and
mov
es
mov
les
into
popf
sbb
jecxz
and
or
jge
inc
jo
jl
inc
adc
adc
lahf
dec
popf
ds
lods
outs
retf
xor
fldenv
ret
es
icebp
nop
(bad)
ja
add
add
jecxz
jg
dec
sub
mov
sub
mov
imul
retf
fist
push
push
mov
add
or
sub
nop
sub
(bad)
into
sbb
fdiv
or
xchg
shr
out
jbe
lods
rcr
scas
mov
xor
xchg
hlt
fidivr
movs
in
push
pop
mov
daa
sbb
xchg
jo
cmp
mov
aad
sbb
gs
mov
mov
es
into
js
and
add
jmp
mov
sbb
inc
js
and
jecxz
or
xor
xor
call
mov
xchg
sbb
jge
mov
xchg
(bad)
dec
(bad)
sbb
push
loope
adc
xor
add
nop
add
cmp
xor
(bad)
idiv
mov
mov
mov
popa
addr16
add
adc
int3
out
mov
aaa
and
jo
int3
or
or
mov
cmp
cmp
sahf
xor
in
mov
mov
js
lahf
jne
and
mov
xchg
retf
inc
and
repnz
push
jmp
sbb
mov
fld
cmc
mov
ins
mov
sbb
test
sub
outs
mov
clc
jne
std
and
push
leave
pop
ja
cmp
adc
or
xor
or
loope
dec
in
sub
xchg
sahf
ss
mov
ss
mov
mov
mov
adc
jbe
dec
aaa
adc
out
mov
xchg
dec
adc
mov
mov
int
mov
mov
icebp
mov
test
icebp
mov
out
cmc
ja
dec
fs
lock
inc
scas
push
push
adc
mov
and
js
repz
daa
in
fild
mov
mov
test
mov
outs
mov
adc
push
lock
repz
fwait
jo
or
movs
pop
cs
push
mov
shl
rcl
mov
xor
ds
xchg
and
clc
cmps
(bad)
mov
mov
and
jnp
les
mov
add
cli
imul
dec
cdq
test
int
stc
pop
cmp
sar
fcmovb
and
xor
ins
iret
pop
add
mov
mov
test
or
fnsave
inc
sbb
call
adc
imul
bound
imul
dec
mov
push
inc
push
sbb
or
jge
test
mov
repnz
stos
loope
sub
or
lods
mov
clc
es
dec
ror
js
jg
push
push
sub
inc
cmp
shl
cdq
addr16
addr16
mov
jmp
add
jne
jne
sub
retf
xor
loop
fnstenv
pop
aad
jmp
cmp
inc
jae
mov
inc
mov
imul
loope
pop
rsm
retf
fld
adc
shr
leave
adc
push
mov
lea
xchg
jge
add
je
inc
into
pop
lahf
add
(bad)
int3
mov
jl
or
nop
(bad)
sti
test
ret
pop
ins
push
clc
sbb
stos
mov
xor
jns
adc
loope
popf
rcl
mov
add
and
cmovo
test
mov
stos
mul
adc
outs
into
daa
cli
aad
mov
fmul
das
popa
mul
test
fdiv
je
sbb
movs
cmp
mov
retf
cmps
jns
add
or
xor
jmp
lods
jl
daa
popf
neg
out
and
enter
inc
sub
cs
test
or
dec
pop
(bad)
and
xor
push
and
push
pop
add
xchg
imul
inc
lock
and
sahf
mov
inc
mov
int
(bad)
pop
movs
jo
cmc
jmp
pusha
adc
in
pusha
gs
add
jo
fs
cmc
retf
push
cdq
movs
call
ret
popa
push
adc
retf
mov
xchg
push
jle
imul
xchg
shl
add
test
daa
addr16
mov
clc
sbb
mov
loope
mov
loopne
mov
xchg
dec
jnp
inc
lea
das
or
test
js
rcl
or
sbb
mov
add
in
cs
sbb
mov
ror
lods
retf
jecxz
jae
cwde
push
das
mov
pop
mov
mov
das
cmps
cld
mov
adc
mov
xchg
nop
retf
mov
out
sbb
push
loope
dec
fs
popf
outs
inc
pop
sbb
jae
and
jl
shr
jp
push
sbb
(bad)
mov
sub
and
mov
ret
push
ins
repnz
dec
or
ins
daa
mov
cdq
ins
or
pop
enter
mov
xor
rol
imul
or
or
push
or
out
aaa
mov
cmp
aas
arpl
dec
push
call
fwait
movs
fmul
mov
je
xlat
dec
or
out
fld
inc
sbb
pop
dec
ds
iret
inc
call
popf
iret
mov
in
scas
cmp
inc
mov
mov
test
push
(bad)
mov
hlt
movs
fbstp
int3
daa
in
jmp
adc
mov
es
retf
test
in
addr16
dec
bound
mov
jnp
pop
mov
mov
pop
ds
cmps
adc
clc
sub
paddq
jge
jbe
sbb
add
imul
adc
pushf
ja
scas
leave
add
mov
lods
outs
outs
mov
mov
push
xchg
add
xor
jns
xor
add
mov
outs
pop
imul
shr
pop
pop
ds
(bad)
das
mov
push
xchg
fild
pop
pop
sti
sbb
jmp
jge
push
mov
cmps
into
dec
ins
cmp
sub
or
xor
xchg
push
(bad)
pop
or
imul
xchg
push
xor
(bad)
mov
aam
xor
dec
out
mov
arpl
or
ror
dec
ror
scas
ret
arpl
mov
int3
ins
data16
test
adc
out
inc
stos
sub
sbb
adc
inc
popa
push
jb
jnp
and
jmp
mov
add
dec
cmp
lahf
(bad)
arpl
push
lea
test
(bad)
jne
add
xor
push
inc
adc
ror
retf
or
int3
jo
enter
shr
jne
lods
mov
inc
cmp
aam
enter
(bad)
icebp
xchg
pop
adc
in
xchg
rcr
add
(bad)
xchg
aaa
xchg
push
rcl
xor
jbe
mov
mov
adc
imul
movs
pop
adc
jg
mov
push
repnz
jmp
mov
ror
hlt
xor
in
mov
retf
repz
shr
fdiv
xor
imul
push
bound
push
aas
loope
xor
test
lea
hlt
in
jno
outs
imul
or
xor
ret
mov
mov
and
pop
shl
call
cli
jb
push
movs
mov
dec
imul
or
mov
and
fist
sbb
and
(bad)
or
push
jns
daa
mov
cmps
mov
mov
adc
xchg
les
adc
(bad)
(bad)
jno
mov
stos
mov
pop
and
sbb
loop
in
sbb
(bad)
movs
inc
(bad)
sahf
not
cdq
stc
xor
xchg
mov
push
sbb
mov
dec
jne
mov
movs
je
out
add
mov
adc
mov
ds
mov
stos
movs
aam
jb
pop
pop
cs
jp
aad
and
pop
inc
xchg
out
adc
popf
or
adc
retf
out
and
movs
pop
dec
mov
mov
shl
test
mov
push
sbb
jl
jo
rol
jbe
jae
xlat
mov
pop
jns
jns
mov
dec
inc
jne
mov
lahf
out
adc
mov
mov
mov
enter
retf
nop
in
mov
cmp
sub
imul
sar
rcr
sbb
adc
jp
jns
mov
icebp
sahf
xchg
mov
loope
sub
xor
dec
or
nop
test
push
retf
mov
jl
test
or
inc
add
fs
cmp
loope
fldenv
es
into
sub
fs
call
adc
jecxz
frstor
mov
outs
jle
inc
neg
les
int
mov
cmp
push
xchg
out
pop
cmp
dec
lock
icebp
fsub
enter
test
push
dec
shl
aaa
sbb
je
jg
stc
daa
mov
imul
int
bound
push
pop
test
jmp
dec
mov
les
stos
ret
add
push
fsub
pop
push
dec
mov
sar
xor
popa
in
push
call
neg
cmp
xchg
aad
jbe
mov
or
pop
out
dec
xor
push
inc
mov
in
imul
ds
sub
add
add
push
(bad)
in
das
fdiv
call
add
std
jae
out
xchg
cmp
mov
jae
cmps
lock
push
dec
imul
cmps
jbe
and
leave
loop
fistp
sub
cs
jne
pop
jmp
push
or
or
aas
jmp
pop
gs
shl
ror
add
mov
pop
mov
and
jae
pop
psubusw
xor
mov
in
adc
mov
pushf
jae
clc
out
scas
and
icebp
movs
jbe
mov
shr
imul
(bad)
jbe
mov
leave
aas
aam
mov
ret
sbb
addr16
in
cmp
test
jg
pop
jns
sub
pop
scas
(bad)
in
in
pusha
sbb
adc
pop
push
out
pshufw
or
dec
mov
or
bound
push
mov
jg
sub
push
scas
jne
dec
dec
in
cmp
rcl
inc
mov
out
adc
jo
mov
sar
adc
mov
popf
hlt
cdq
push
add
sbb
pop
and
push
repz
into
lea
cmp
(bad)
div
std
ficomp
xchg
push
les
xor
js
mov
jo
movs
call
mul
pop
inc
sbb
or
bound
dec
sbb
or
fwait
stc
jle
sbb
add
fs
sub
fmul
lock
pushf
lahf
cmc
dec
or
or
test
mov
xor
(bad)
pop
push
scas
enter
push
into
idiv
cli
mov
dec
pop
lock
push
or
leave
call
and
sub
pusha
inc
fld
xor
push
or
add
fcmove
mov
sbb
sbb
lods
leave
cmp
jle
xchg
sbb
into
ja
xor
nop
test
lock
or
dec
shl
inc
call
jo
mov
xchg
sub
pusha
popa
adc
jno
xchg
out
ret
push
out
ds
add
push
jne
aas
jp
stos
shl
cmp
sbb
cmp
div
jecxz
mov
jnp
mov
cmp
cmc
jecxz
mov
xor
xor
aas
cld
test
cwde
jp
or
or
dec
xchg
cmp
cdq
push
push
adc
lods
or
dec
stos
adc
popa
leave
inc
or
fwait
retf
cld
xor
shr
inc
push
call
and
jno
(bad)
outs
jmp
adc
scas
(bad)
in
or
push
adc
or
mov
add
cmp
push
ins
mov
xchg
loop
and
je
and
mov
mov
mov
jmp
cdq
sbb
or
adc
adc
sub
mov
xor
clc
or
arpl
inc
cmp
aaa
ss
fistp
loop
or
and
mov
pop
imul
add
ins
or
sub
add
inc
inc
fmul
dec
ret
or
inc
out
out
jne
jmp
mov
aad
addr16
mov
xchg
adc
push
xor
std
in
fwait
int3
or
pop
lods
and
sub
fstp
or
data16
jle
pop
jno
out
loope
sub
mov
out
lahf
ror
pop
(bad)
movs
fbld
jo
cmp
popf
cmp
in
mov
cmp
jecxz
pop
arpl
sbb
and
dec
fidivr
push
sbb
mov
pop
test
inc
cmps
sti
in
mov
adc
jne
(bad)
int
lahf
jmp
ret
pop
dec
and
retf
sbb
repnz
push
retf
push
out
push
dec
push
mov
adc
xchg
add
stc
xor
push
aam
fadd
xchg
out
mov
dec
je
es
ror
lea
and
imul
add
xchg
(bad)
leave
jmp
or
mov
or
je
out
repz
or
(bad)
jl
sbb
and
in
out
sbb
mov
shl
packssdw
xchg
push
clc
xor
push
inc
add
popa
jns
movs
movs
mov
cmp
pop
aam
xchg
xchg
and
inc
dec
je
les
fdiv
enter
fcomip
mov
xchg
and
jmp
mov
xchg
mov
push
cli
lods
mov
inc
(bad)
(bad)
dec
cmp
jno
cs
(bad)
pop
imul
and
inc
sahf
repz
rol
mov
lahf
out
mov
xchg
daa
clc
add
push
xchg
push
out
leave
ins
test
mov
or
pop
add
pop
rcr
pop
mov
hlt
dec
lods
pop
fs
xor
lahf
pop
xor
or
dec
(bad)
and
push
sbb
nop
mov
and
mov
lahf
(bad)
fbstp
cwde
rcr
pop
cld
or
in
nop
js
rol
xchg
push
out
xchg
out
pop
in
xor
adc
push
shl
movs
inc
je
popf
js
movs
pop
out
cmps
mov
cmp
fdiv
call
fdivr
js
xchg
inc
ficom
stc
(bad)
and
(bad)
cli
arpl
adc
xchg
dec
inc
sub
enter
pop
or
push
or
cld
shl
push
sub
(bad)
mov
sti
sahf
imul
add
les
push
dec
cmps
xchg
sub
mov
mov
mov
xor
jmp
cmp
loopne
mov
ja
(bad)
stc
sub
call
adc
into
mov
je
sub
mov
jp
shl
xchg
mov
jb
adc
and
pusha
push
pop
jbe
addr16
mov
dec
adc
(bad)
stc
push
mov
(bad)
(bad)
fidiv
bound
adc
ror
popf
ja
xlat
aaa
xchg
shl
xor
mov
xchg
pop
or
or
stos
mov
xchg
or
xor
push
jb
xchg
add
and
popf
sub
loope
aam
cmp
outs
sar
mov
addr16
sahf
jae
lock
cmps
inc
fild
div
jg
movs
xor
iret
inc
rcr
cmp
int3
cli
dec
push
mov
ror
fisttp
xchg
cmc
mov
imul
test
fucomip
and
fdivr
mov
call
je
xor
jp
aam
add
cmps
rcl
jmp
push
clc
xchg
jb
cld
loop
sub
mov
cmp
adc
push
jmp
mov
pop
clc
jbe
or
std
clc
xor
and
aas
int3
jae
cmp
in
sub
pop
pop
add
int
cmp
mul
mov
sbb
xor
movs
sbb
popf
jecxz
mov
dec
(bad)
jecxz
jno
pop
sahf
jne
and
repnz
add
xor
not
adc
ins
stos
outs
test
sub
jmp
in
sti
out
cmps
push
pop
jne
mov
push
movs
ret
fidivr
bound
inc
shl
test
pushf
aam
mov
sub
out
pop
stc
and
int3
push
inc
mov
mov
pop
adc
mov
cmp
push
adc
xchg
jae
inc
cmp
mov
pop
push
pop
cmp
(bad)
xchg
jno
sub
jmp
cdq
fs
push
dec
int
ja
pushf
cmp
push
loope
jo
gs
and
into
bound
les
in
pop
repnz
mov
mov
dec
das
shl
sub
cld
imul
and
inc
fwait
xchg
int3
outs
inc
xchg
(bad)
or
test
repz
jbe
xchg
fild
jg
jmp
pop
push
pop
sti
pop
and
rol
jl
mov
pop
mov
xchg
push
sahf
(bad)
outs
cmp
movs
adc
or
scas
pop
mov
adc
sub
jne
out
cwde
clc
out
push
pop
xor
push
cdq
pop
push
jnp
cmp
dec
jbe
lods
pop
int
cmp
pusha
xor
xor
sbb
icebp
shl
lods
and
test
and
aas
sub
jecxz
xor
lock
out
sbb
shl
cmc
xchg
dec
movs
push
push
xor
in
adc
out
cmp
es
mov
mov
test
jo
dec
jmp
push
(bad)
stos
jl
inc
jo
pop
inc
inc
cmp
pop
and
and
mov
sbb
call
fiadd
stc
ss
xlat
cdq
sub
scas
cld
dec
retf
lock
(bad)
xor
inc
pcmpgtw
mov
mov
push
rol
or
ret
xchg
imul
sub
stos
sub
cs
imul
adc
or
cs
movs
(bad)
mov
pop
test
aam
in
or
or
into
pop
imul
mov
fisubr
movs
or
and
(bad)
and
cwde
push
sub
stc
and
rol
jl
xchg
int3
leave
jb
pop
out
mov
jnp
out
push
inc
adc
leave
push
mov
stos
dec
or
or
scas
outs
fcmovnbe
inc
or
mov
enter
inc
repnz
fstp
cmp
in
test
mov
add
sub
call
repnz
mov
adc
and
mov
cmc
cmps
ja
mov
mov
or
cmp
jne
arpl
(bad)
or
or
stos
push
movs
pop
ds
mov
mov
sub
push
push
add
or
push
pusha
sub
out
sbb
mov
das
into
neg
les
call
dec
mov
sub
popf
sub
jl
xor
or
jb
mov
int
rcr
mov
fdivr
sbb
push
loopne
xchg
mov
jmp
xor
lods
pusha
or
cld
addr16
aas
ret
push
(bad)
mov
mov
out
xor
sbb
or
pop
and
pop
jg
xchg
pop
inc
ret
inc
retf
outs
fmul
adc
xor
cmp
cmp
sbb
inc
xchg
ret
pop
mov
popa
add
(bad)
and
(bad)
push
out
mov
mov
mov
adc
icebp
mov
jp
lods
or
pop
mov
cmc
clc
ins
test
and
jmp
xchg
push
mov
and
jecxz
loope
pushf
mov
dec
dec
outs
es
xchg
shl
pop
inc
sub
xor
int
xchg
and
sub
fwait
fwait
sbb
xor
pop
mov
ja
sub
cdq
pop
mov
pushf
aad
adc
sbb
adc
or
xchg
or
ja
add
inc
jecxz
or
mov
inc
iret
or
cld
shl
ror
jb
xchg
adc
(bad)
push
xchg
jecxz
mov
sbb
(bad)
dec
(bad)
fsubr
xchg
call
and
pop
sbb
mov
movs
retf
ror
movs
mov
sti
pop
test
test
sbb
mov
aaa
cmps
test
fbld
inc
cmps
ins
and
or
sti
cmps
jmp
(bad)
push
jl
push
inc
mov
out
jmp
cmp
dec
sbb
les
(bad)
add
xor
xor
sti
sbb
sub
js
xor
clc
leave
in
cmp
in
sahf
in
mov
stc
pop
aam
test
jne
jns
xor
sub
jp
aam
and
enter
jne
movs
in
test
ds
retf
pop
push
call
dec
push
lea
mov
sbb
xchg
sahf
(bad)
xchg
imul
sub
inc
inc
pop
bound
mov
pminsw
and
movs
cs
pop
cmc
test
jg
push
add
and
cmp
outs
(bad)
sub
mov
xor
mov
jmp
aas
xor
in
pushf
add
mov
or
mov
or
jp
fcomp
inc
pop
es
sbb
cmps
fisub
daa
sahf
aad
hlt
arpl
inc
popf
pop
pop
mov
push
cmp
xchg
inc
popa
or
and
inc
mov
ret
push
pop
sysret
mov
(bad)
test
pop
aam
leave
js
fldenv
repz
clc
les
push
scas
mul
je
xchg
loopne
leave
sub
(bad)
fsub
xchg
aaa
(bad)
enter
mov
cmp
das
cld
std
cmp
jle
stos
imul
lea
sbb
ds
shl
pop
jmp
dec
mov
aam
cmps
push
ins
or
sub
fisubr
out
jge
std
cmp
repz
add
push
xchg
xor
dec
in
enter
je
mov
stos
inc
fild
pop
push
mov
jb
xchg
push
add
sbb
loop
ss
mov
mov
call
dec
inc
mov
xor
jae
nop
push
xor
dec
and
and
hlt
lods
push
in
je
je
mov
mov
inc
pop
or
sahf
and
jb
arpl
outs
inc
gs
stos
inc
mov
ss
or
dec
pop
cmp
int
xor
out
or
in
aaa
push
idiv
jnp
push
lds
adc
dec
push
push
jmp
dec
sbb
loope
xor
mov
ret
jmp
pusha
xor
test
inc
dec
(bad)
xor
mov
cmp
mov
and
pop
jle
fwait
jl
xchg
mov
fld
add
xor
sti
push
lods
sbb
je
test
mov
ror
lods
inc
pop
dec
jp
cwde
mov
lahf
push
or
out
xchg
jecxz
jmp
mov
mov
fdiv
in
and
sub
stc
cdq
cmps
xlat
sti
nop
pop
(bad)
mov
pop
adc
int
enter
and
mov
repz
mov
sub
mov
jae
cmp
imul
jnp
or
fisub
jmp
jecxz
adc
jecxz
and
lock
pop
lods
sub
xlat
push
mov
fistp
icebp
(bad)
clc
(bad)
xchg
enter
jmp
js
cmps
repnz
sub
pop
pop
sub
fistp
push
push
inc
push
and
xchg
mov
adc
aad
jg
add
ror
push
xchg
cmp
jl
sbb
pop
in
ficomp
scas
xchg
mov
sbb
cld
out
lahf
xor
sar
ret
lods
mov
add
call
push
stc
ins
mov
xlat
dec
xchg
or
or
xchg
add
cmp
int
mov
mov
push
in
imul
and
adc
arpl
das
push
cmp
fnstcw
in
push
les
shl
jae
inc
test
test
loopne
mov
jbe
add
ins
ror
xor
sbb
ret
cdq
pop
inc
or
lods
icebp
push
inc
loop
loope
mov
fiadd
mov
push
xchg
dec
scas
add
mov
fistp
cli
pop
mov
hlt
add
dec
mov
or
fcomp
mul
iret
or
mov
mov
data16
inc
js
inc
pop
sub
retf
rol
das
xor
aad
(bad)
icebp
xchg
dec
add
fisub
in
fnstenv
pop
repz
pop
mov
push
call
jmp
push
(bad)
mov
jg
cli
mov
jb
imul
outs
pop
mov
jo
cmp
push
(bad)
jne
pop
inc
pop
stc
lea
arpl
repnz
ffreep
add
ss
ds
or
retf
hlt
xor
inc
xor
sbb
pop
sahf
push
pop
adc
mov
movs
arpl
mov
push
int
jp
scas
jnp
push
test
mov
rol
dec
dec
add
loope
sbb
mov
out
mov
cs
loope
cld
enter
cmp
fnstsw
cmps
inc
cmp
sub
jnp
mov
push
movs
out
xchg
mov
enter
(bad)
aam
dec
sbb
lods
dec
xor
mov
xlat
popa
sbb
test
push
xchg
arpl
clc
adc
sti
shl
ror
and
jge
sbb
popa
(bad)
iret
adc
mov
xor
aam
xor
scas
cmp
rcl
stos
or
inc
sub
mov
push
iret
sbb
loop
pop
sbb
std
xchg
or
jno
scas
enter
push
cmp
pop
jnp
xor
test
cmp
pop
jge
pop
push
sub
mov
inc
ficomp
jg
add
add
dec
test
mov
push
enter
hlt
push
pop
inc
adc
add
inc
out
jns
outs
fs
pop
pop
push
push
int3
in
stos
imul
pop
popf
sbb
int3
mov
jge
jns
(bad)
push
(bad)
mov
(bad)
mov
inc
enter
popa
adc
or
stc
scas
outs
movs
dec
and
xlat
sahf
push
sar
sbb
pop
das
add
inc
adc
ins
outs
jno
pushf
aam
pusha
mov
cld
bound
aad
mov
jns
sub
push
sub
dec
stos
fs
inc
call
int3
mov
gs
out
iret
dec
jns
push
stos
inc
mov
pusha
xchg
mov
xchg
mov
and
fwait
mov
and
cli
cli
ins
fisubr
adc
sbb
xchg
push
lahf
xor
sbb
mov
cmp
mov
push
clc
test
xchg
cwde
rol
out
and
stos
out
sbb
popf
push
jbe
je
les
jle
rcl
sbb
sbb
out
stos
mov
cmp
std
loop
mov
sbb
addr16
js
ret
or
mov
(bad)
(bad)
cli
xor
jo
fimul
shl
gs
xchg
loope
out
out
sti
lock
add
scas
xor
stc
jmp
fldpi
inc
adc
mov
pop
jmp
loope
mov
div
adc
cmp
mov
data16
fist
adc
mov
rol
sti
out
sub
ret
das
or
push
test
(bad)
ret
fst
mov
mov
sub
pop
mov
lea
ss
push
test
or
dec
pop
mov
(bad)
(bad)
movs
pushf
mov
fistp
jo
outs
iret
jnp
mov
int3
inc
cmp
div
add
jo
in
inc
pop
pop
addr16
jecxz
out
pop
sub
ja
icebp
inc
jmp
clc
adc
pushf
pop
std
jb
jmp
jp
sub
or
cmp
cmps
sub
pop
xchg
fist
fwait
or
aaa
sub
mov
loopne
xchg
(bad)
pop
leave
push
(bad)
dec
test
adc
push
or
xor
test
cmp
mov
js
aaa
lahf
xor
(bad)
out
(bad)
repnz
dec
sahf
push
pop
jle
xlat
push
push
mov
mov
mov
cmp
xor
sbb
test
movs
sub
out
jns
inc
dec
call
aas
cmp
bnd
rcr
sbb
fidivr
lahf
push
imul
(bad)
in
bound
add
fcomp
inc
ret
lea
out
popa
cmps
mov
sti
or
fs
icebp
inc
fcomp
cld
pop
sbb
add
nop
pop
pop
jge
icebp
fstp
sbb
out
jb
dec
adc
call
add
mov
push
cmp
(bad)
fiadd
(bad)
shl
xchg
mov
rcr
stc
aaa
adc
pop
adc
pop
jmp
leave
xor
pop
pop
int
mov
sbb
mov
repnz
call
sti
mov
aaa
outs
outs
imul
movs
xchg
out
leave
sbb
cdq
test
aas
jle
frstor
lods
cmc
rcl
fnsave
mov
and
cmp
sar
retf
lahf
mov
jl
call
dec
xor
and
mov
lods
aad
arpl
sbb
jle
imul
cmp
mov
mov
dec
add
jge
mov
inc
aas
dec
lock
cs
push
adc
sbb
ret
and
or
scas
adc
push
in
sub
or
mov
dec
jle
and
or
sbb
pop
mov
sbb
int
mov
(bad)
adc
sar
push
sub
(bad)
xchg
ins
mov
mov
les
cmc
arpl
test
jg
movs
data16
rol
rcr
mov
idiv
loop
inc
dec
imul
cwde
adc
mov
jecxz
ror
loop
lahf
xchg
jo
inc
and
add
movs
sbb
xchg
xchg
cmps
dec
mov
test
cs
push
aaa
mov
adc
les
aad
jae
mov
cwde
mov
cwde
xchg
push
xchg
xor
das
popa
xor
and
ja
adc
ret
ficomp
not
clc
adc
inc
shl
movs
ds
jo
cmp
(bad)
sub
mov
rol
xchg
cmps
xor
add
jge
lahf
stos
icebp
push
rol
dec
call
stos
icebp
and
es
icebp
das
lods
call
push
in
inc
lea
in
mov
test
outs
and
jb
in
enter
imul
cmc
hlt
test
jp
cdq
sub
(bad)
push
leave
in
adc
leave
xor
mov
xor
mov
stos
gs
cmp
dec
out
push
pop
mov
jge
clc
(bad)
aam
je
mov
(bad)
or
mov
xor
(bad)
mov
adc
add
aad
push
push
stos
ins
pop
sub
cmp
sbb
pop
mov
push
aam
jne
pop
sbb
mov
mov
pusha
mov
push
ja
and
ret
xor
add
sbb
and
dec
aas
or
xor
retf
or
add
fnsave
mov
pop
inc
dec
fadd
push
mov
or
repz
push
je
mov
ins
and
inc
stc
dec
bound
leave
push
xor
or
mov
ror
popa
and
(bad)
sbb
sar
pop
jl
ret
retf
pop
mov
fdiv
sub
cwde
or
push
inc
mov
sub
jl
stos
pusha
pushw
mov
xlat
aaa
movs
(bad)
pop
(bad)
pop
pop
add
and
pop
loop
addr16
or
xchg
std
inc
xchg
push
(bad)
ficom
and
cmps
add
mov
dec
test
out
jae
mov
aas
cmps
push
push
and
mov
inc
mov
inc
adc
popf
in
inc
pop
lods
pop
fs
rcr
ficom
jge
jle
std
retf
unpckhps
push
cmp
add
xor
jge
shl
pop
sbb
and
mov
test
jp
stos
or
mov
mov
ins
test
(bad)
loopne
dec
sahf
mov
das
adc
and
aad
jl
leave
sub
add
lods
mov
aam
fstp
fstp
push
jne
imul
lahf
add
and
pop
xchg
xchg
jmp
xchg
cmps
call
xor
stos
cmp
aaa
jmp
and
sbb
test
and
mov
push
pop
icebp
outs
add
nop
jl
outs
movs
xchg
cdq
mov
mov
lea
jmp
sub
ror
cmps
arpl
cwde
add
pop
xor
test
popa
rol
xor
lea
loop
inc
es
fnsave
jl
loop
pop
popa
fnsave
(bad)
push
bound
xor
add
pop
xor
mov
lea
xor
xchg
xor
in
jmp
adc
daa
add
aam
jns
mov
mov
jne
repz
clc
call
cmp
(bad)
(bad)
sub
mov
xchg
mov
mov
and
mov
mov
(bad)
ins
and
ss
cmp
sti
ficomp
in
xor
jmp
add
mov
js
jle
(bad)
ror
sbb
inc
xchg
adc
push
stc
fbld
test
sbb
or
rcl
or
cmps
(bad)
imul
mov
push
mov
jp
lahf
movs
adc
(bad)
push
xchg
pop
add
and
imul
dec
ja
pop
je
xor
sbb
jge
scas
div
pop
and
pop
adc
aad
push
or
stos
popa
sub
(bad)
in
aad
fst
in
inc
xchg
nop
adc
mov
ret
dec
mov
cld
cdq
stos
cmc
jl
xor
sub
sbb
add
cwde
out
js
fidivr
gs
inc
jno
lods
cmp
call
jne
in
dec
add
mov
aaa
mov
cmp
and
int
mov
sub
push
js
and
sbb
in
pushf
pop
inc
push
and
mov
arpl
lea
cmp
mov
sbb
inc
jb
and
test
cdq
jp
fsubrp
cmps
pushf
jb
and
and
test
daa
cmp
test
ret
push
iret
pavgw
aad
repnz
pop
pop
and
bound
mov
outs
jmp
jno
add
mov
fwait
addr16
sbb
xor
cmps
push
sub
push
fcmovu
jmp
cli
xor
int
adc
cmps
fnstenv
cmps
out
xchg
aam
jg
aas
lods
or
dec
or
xchg
mov
mov
std
cli
fnstenv
std
add
mov
(bad)
xor
inc
add
jae
and
ret
and
(bad)
ins
cwde
mov
mov
jle
idiv
scas
call
fdivr
and
and
retf
mov
mov
out
out
cwde
jbe
or
jg
outs
sbb
sub
inc
xchg
sub
dec
cmp
frstor
sahf
les
clc
mov
dec
iret
pop
pop
(bad)
mov
pop
add
jp
daa
pop
loopne
daa
push
xchg
jp
shl
cmp
mov
imul
cmps
arpl
jge
fsub
shl
inc
call
push
outs
lock
push
lods
jle
in
cwde
mov
mov
adc
add
mov
fadd
mov
xchg
int3
loope
cwde
bound
paddb
or
cmp
aas
jl
fldcw
std
and
add
xchg
cmps
xchg
cmp
jne
popf
jb
int
cs
addr16
das
sub
lahf
fsub
mov
cli
in
adc
add
pop
jnp
into
aaa
(bad)
xor
jns
xchg
mov
gs
rcl
or
xor
hlt
popa
repnz
add
nop
fs
call
push
jae
rcl
cli
xchg
fistp
sub
xchg
scas
call
ret
sub
(bad)
jge
pop
test
iret
cmps
enter
mov
add
aas
cli
test
add
and
dec
rcl
jge
xchg
int
add
or
into
test
movs
or
loope
cs
cmp
or
sub
or
int
outs
mov
movs
and
xchg
dec
pop
add
(bad)
push
cmp
dec
lods
mov
adc
sub
jge
mov
cs
mov
mov
add
test
gs
jo
lahf
in
in
mov
iret
je
ds
or
movntq
mov
das
mov
div
xchg
js
push
cmp
jp
int3
push
imul
aaa
jg
test
dec
pop
gs
loope
xor
pop
cmp
leave
jo
jg
inc
imul
lds
inc
sti
test
std
cmps
ja
inc
dec
push
not
xchg
stc
pop
fidivr
adc
fcmovnb
in
lock
jnp
mov
push
fst
jns
adc
call
cmp
pop
out
loopne
jmp
and
add
in
and
jnp
dec
jmp
dec
add
cmp
out
inc
mov
ss
adc
lea
dec
or
jmp
xchg
int3
(bad)
mov
xlat
push
mov
add
mov
fstp
cmc
out
push
pop
jle
cmp
mov
test
lods
sub
(bad)
mov
push
xor
test
xchg
cmp
int
int3
mov
xchg
or
js
cmps
pop
fcom
arpl
pop
cmp
test
mov
xlat
ret
mov
inc
es
loop
pushf
icebp
clc
lds
aam
jl
icebp
fisttp
xchg
fsubr
(bad)
add
dec
fisubr
icebp
out
retf
dec
dec
jl
sbb
jp
pop
push
push
pop
lea
or
lock
xlat
xchg
in
jae
jb
fidivr
mov
xor
pop
aam
ret
dec
pop
xor
dec
shl
std
cmp
daa
push
int
ffree
sub
jmp
pop
pop
mov
add
addr16
popf
push
out
sub
(bad)
jg
stos
out
std
pop
cmp
mov
push
push
out
sub
out
aad
pushf
jns
push
or
xchg
mov
push
push
ficom
sti
jmp
jl
xchg
mov
push
sbb
jecxz
jl
sub
push
jmp
mov
fisubr
scas
jg
in
xchg
and
sub
and
in
xor
lea
adc
cmp
popf
pop
in
xor
xor
call
dec
mov
movs
xchg
call
jmp
rcl
sahf
push
test
movs
(bad)
pmuludq
xor
lea
nop
or
pop
shr
clc
push
dec
rol
adc
hlt
fldenv
add
xchg
jne
cmp
adc
ja
in
shr
outs
lds
int3
or
repz
mov
jmp
ret
xlat
sub
cs
or
aam
xlat
int
nop
(bad)
jb
sbb
cmc
cli
pop
mov
xchg
mov
sub
sub
pop
mov
pushf
sub
sub
mov
sbb
and
ret
ror
dec
adc
xchg
repz
stos
lahf
sti
lock
pop
mov
leave
test
mov
in
fnstsw
fisub
sahf
pop
and
loope
mov
mov
mov
xor
jmp
push
daa
les
sti
cmp
jb
ss
bound
push
adc
xor
xchg
adc
clc
ret
pop
mov
pop
dec
lds
jmp
sub
repz
jmp
pop
(bad)
sub
stos
mov
pop
sti
sbb
dec
push
cmc
rcr
inc
add
stos
jbe
mov
mov
fist
adc
test
ins
adc
inc
mov
push
jbe
arpl
mov
add
(bad)
xchg
ror
aaa
adc
mul
jl
mov
fs
push
shl
imul
ss
inc
je
push
ret
pop
punpcklwd
ss
into
cdq
lds
push
or
jnp
jecxz
aaa
fsub
out
addr16
mov
das
cwde
nop
call
xchg
jae
into
int
mov
imul
dec
aam
mov
mov
xchg
dec
push
cmp
sbb
fwait
test
jmp
fadd
jp
rcr
out
mov
inc
dec
cmps
cld
dec
sub
or
outs
fcomp
jge
adc
add
push
and
mov
mov
add
mov
and
mov
or
sub
xor
mov
mov
ss
dec
push
pushf
sub
cmp
ret
xchg
sub
(bad)
cmps
std
ds
test
imul
mov
and
and
ins
jl
ja
aaa
scas
js
pop
(bad)
sahf
js
sbb
in
xor
ret
fsubr
adc
dec
out
or
xor
test
sbb
xchg
outs
pushfw
rcr
mov
mov
pop
hlt
cmp
mov
push
or
dec
xchg
mov
(bad)
neg
neg
cmp
push
mov
push
jl
fwait
mov
cmc
sbb
test
mov
dec
add
(bad)
jl
push
mov
outs
stos
(bad)
bound
jmp
lock
cmp
sbb
pop
mov
inc
mov
jp
lds
cmps
sbb
bnd
xor
xchg
dec
mov
and
xchg
or
mov
loopne
lods
scas
lea
mov
popf
sbb
adc
mov
fistp
xor
cli
cmp
inc
mov
and
jo
xchg
stc
pushf
dec
int
fmulp
inc
mov
bswap
mov
push
hlt
out
pop
call
jl
add
adc
jo
inc
push
(bad)
sbb
enter
pop
clc
out
(bad)
push
(bad)
xlat
mov
cmp
fcmovnu
and
pop
mov
mov
scas
pop
xchg
push
inc
popa
sub
retf
loop
stc
or
pop
mov
push
inc
shl
and
inc
test
jmp
ret
cmp
ja
push
and
scas
dec
or
(bad)
jb
mov
in
pop
mov
inc
or
xor
add
aas
fwait
pop
outs
add
popf
pusha
std
addr16
and
(bad)
test
jns
std
or
retf
adc
out
push
mov
add
dec
out
jmp
mov
lock
dec
mov
xchg
pop
ins
pop
(bad)
push
push
in
cmp
jmp
pop
jge
pop
or
retf
jae
adc
popf
sbb
call
popf
add
(bad)
ror
mov
jp
(bad)
out
add
mov
lods
jo
push
inc
add
in
sub
dec
scas
push
jne
in
cmp
mov
imul
dec
cmp
mov
pop
mov
jmp
push
fistp
xchg
and
pushf
xchg
cwde
aam
lods
and
(bad)
ds
sub
out
xor
sub
bound
mov
lock
jo
and
sub
adc
mov
and
ret
adc
retf
push
adc
inc
add
test
popf
popf
imul
pop
lds
cmps
in
popa
out
mov
imul
sub
vmovdqa
adc
fild
ror
in
popf
scas
inc
jp
add
(bad)
xor
loope
xor
retf
inc
rol
mov
aas
xor
sbb
ficom
xor
pop
cld
xor
jb
test
push
adc
lea
cmp
ja
rol
cmp
pop
(bad)
jmp
test
cmps
scas
inc
dec
clc
pushf
xchg
adc
mov
int3
jge
pminsw
ret
or
mov
jmp
mov
xlat
(bad)
stos
dec
mov
push
or
arpl
call
inc
shl
cmps
xchg
fiadd
push
inc
test
in
push
mov
call
push
retf
xchg
aaa
pop
push
mov
scas
lea
dec
push
jbe
test
(bad)
in
dec
call
mov
hlt
pop
(bad)
push
xchg
sbb
ss
cmp
mov
push
in
lods
push
movs
sbb
mov
call
loope
push
push
popf
xchg
inc
jns
dec
(bad)
icebp
(bad)
sti
hlt
xchg
ret
aas
xchg
push
jmp
data16
or
ret
ja
sahf
push
js
pop
pop
dec
pop
and
std
frstor
cmp
imul
gs
imul
cmp
aam
pop
fist
pop
add
sbb
push
jmp
push
pop
xchg
sub
iret
cld
or
fdiv
ror
fs
push
ficomp
xchg
outs
sar
es
push
mov
jne
xor
cmps
out
(bad)
jb
or
loopne
scas
cmps
adc
push
jg
mov
dec
scas
fadd
inc
xchg
pop
test
push
inc
mov
jnp
cmp
rcl
aaa
je
add
mov
arpl
sbb
mov
ins
leave
cmp
pushf
and
lea
iret
push
sbb
mov
scas
xor
imul
add
jno
mov
rcl
inc
inc
sar
(bad)
neg
add
out
xor
je
cmps
out
aad
push
test
(bad)
repnz
retf
mov
int3
fiadd
inc
adc
rol
push
pop
jge
sbb
lahf
dec
test
call
rcr
or
jge
fs
lods
stos
fisub
push
es
mov
fisttp
pusha
mov
cdq
jl
out
lods
mov
aad
sub
leave
xchg
mov
nop
scas
xchg
int3
or
inc
shl
pop
cli
cmc
sti
mov
mov
ins
mov
jmp
mov
cmps
mov
addr16
mov
scas
sub
mov
mov
mov
mov
fsubr
ins
cmc
mov
test
inc
jp
jbe
imul
mov
mov
jg
in
fist
rol
(bad)
jno
test
ss
out
retf
mov
std
add
add
(bad)
popa
inc
jg
pop
pop
push
jp
jp
int3
cli
lock
xchg
cmp
in
lock
mov
inc
out
mov
arpl
gs
push
dec
out
push
inc
ss
shl
inc
out
je
mov
sub
add
fdivr
mov
fcmovnb
ins
bound
xor
inc
push
call
repz
clc
push
aam
mov
nop
addr16
cli
mov
scas
push
icebp
mov
add
inc
mov
mov
(bad)
dec
in
mov
rcl
sbb
mov
inc
int
inc
scas
(bad)
fsubr
sti
push
mov
fbld
adc
xlat
ins
push
loop
jge
push
mov
hlt
outs
stos
das
push
scas
xor
xchg
lock
out
sub
pop
or
mov
mov
dec
dec
in
pop
sbb
ret
ficom
push
(bad)
hlt
hlt
retf
mov
mov
idiv
cmp
pop
mov
out
shl
jmp
jne
pop
call
bnd
scas
leave
xchg
test
mov
outs
in
cmp
mov
xchg
dec
sub
(bad)
push
adc
sbb
je
scas
cmp
fs
std
fsub
and
(bad)
ds
dec
xchg
pop
call
cmps
daa
mov
int
or
(bad)
cdq
out
jmp
jg
(bad)
ffreep
hlt
xchg
and
fwait
iret
dec
sbb
xor
fidivr
lods
pop
int3
xchg
pop
(bad)
movs
dec
ins
fdiv
dec
dec
in
inc
mov
in
cli
and
xor
outs
adc
outs
mov
cmp
sbb
mov
and
hlt
stos
mov
dec
sar
xchg
loope
inc
aam
fwait
popf
adc
mov
sbb
adc
and
in
mov
and
xor
jns
sti
xor
xor
dec
retf
sub
rol
push
fisub
xchg
jns
xchg
mov
ins
popf
add
jns
jnp
add
inc
loopne
add
xchg
inc
leave
aam
xor
leave
das
rol
inc
pop
aam
pop
jg
push
mov
int3
cmp
enter
push
mov
cmp
mov
adc
cmp
sub
in
js
dec
cmp
in
loopne
les
push
pop
sub
push
ins
icebp
inc
rol
popf
jne
mov
out
jno
xor
push
jmp
sbb
test
jae
pcmpeqd
pop
pop
sbb
daa
jg
and
inc
push
sar
inc
adc
jl
mov
or
sub
popa
inc
inc
dec
inc
jnp
ret
imul
add
inc
cwde
or
cmp
cmp
nop
popa
cmovno
inc
cs
(bad)
cs
ret
sbb
(bad)
mov
imul
mov
push
mov
lods
add
adc
push
repnz
push
inc
sbb
fcmovnu
(bad)
mov
rcr
stos
pop
xchg
pop
retf
repnz
sub
xor
cmp
cmps
jecxz
or
and
mov
out
test
sbb
and
popa
xchg
mov
push
xchg
jge
cld
fwait
mov
mov
movs
mov
or
push
mov
jnp
ret
int3
and
push
jnp
pop
mov
popa
bound
sbb
jl
inc
aas
inc
jmp
adc
popf
inc
loope
mov
jae
lds
gs
movs
xchg
mov
push
leave
mov
dec
adc
mov
sub
sbb
not
out
or
inc
jne
or
jae
retf
or
clc
cmps
lods
cmp
pop
mov
das
mov
jg
jl
loope
push
push
jns
push
imul
add
jo
clc
cwde
out
repz
sbb
jmp
ficom
pop
xchg
xchg
stc
in
add
pop
pushf
ds
cmp
cs
fucomip
(bad)
lods
sub
ins
cmp
mov
repz
scas
mov
in
mov
cmps
int3
push
mov
inc
push
retf
imul
(bad)
dec
movs
hlt
scas
iret
sti
jns
div
xor
xlat
xor
rcl
pop
data16
das
hlt
fcmovnbe
arpl
lea
cmp
icebp
pushf
and
imul
fisttp
inc
call
(bad)
loop
dec
or
fbstp
retf
mov
(bad)
loop
mov
pop
sbb
inc
xchg
mov
mov
adc
pop
loope
lahf
aam
jns
arpl
fnstenv
xor
ja
cdq
aas
inc
in
jae
and
out
inc
mov
pop
mov
shufps
js
out
repnz
scas
enter
icebp
jnp
hlt
pop
push
sbb
add
loope
jp
sub
sbb
call
lds
nop
sbb
mov
or
loopne
push
push
ss
ja
mov
test
adc
fst
cmps
ror
cmps
icebp
and
ins
xor
rcr
ja
std
push
outs
mov
in
rcr
cld
not
into
dec
cmps
pop
and
aas
jg
push
pop
add
jl
mov
adc
mov
pop
cli
mov
xchg
sub
movs
pusha
lods
lods
jl
lock
out
outs
iret
nop
outs
lds
(bad)
pushf
cmp
ret
jns
fwait
jle
ds
or
push
pop
pusha
cwde
idiv
jb
dec
xchg
test
xor
fwait
push
jp
loopne
or
pop
retf
test
push
aas
cli
movs
fs
jmp
cli
mov
cmp
repz
(bad)
sbb
push
xchg
add
cmps
jbe
je
sbb
push
pushf
push
sub
rcr
add
mov
jle
aad
fistp
dec
stc
xchg
dec
fdiv
push
repnz
xchg
pop
pushf
shr
xchg
leave
or
sub
mov
cmc
rcr
mov
sub
sub
outs
fbld
arpl
mov
loopne
loope
loopne
fcomp
xchg
mov
sub
cli
jp
pop
cmp
mov
dec
fadd
gs
leave
mov
and
xor
fwait
in
xor
leave
xchg
pop
in
sub
fwait
shl
mov
pop
ret
cmp
xchg
test
movs
pop
stc
out
sahf
adc
jns
mov
lea
xor
das
or
fwait
pusha
in
lods
cmp
mov
cli
jo
fisubr
retf
sbb
sub
push
mov
fcom
mov
cdq
sti
in
shl
fistp
je
lahf
or
mov
retf
inc
push
clc
bound
or
pop
push
popa
inc
xlat
inc
xchg
jmp
ins
xchg
icebp
dec
or
test
stc
cmc
repnz
or
scas
pop
sbb
nop
push
out
fsubrp
not
xor
rol
mov
mov
or
(bad)
dec
adc
push
adc
or
push
add
push
xchg
mov
repz
pop
xchg
push
or
push
cmp
and
fisttp
loope
stos
push
test
cld
dec
je
or
jns
mov
imul
lods
inc
fyl2xp1
cmp
xor
cli
out
sub
cmp
(bad)
lock
inc
or
jl
jo
fcom
sbb
xor
sub
and
test
ss
sub
mov
xchg
and
ret
jp
ins
lods
mov
arpl
in
(bad)
jecxz
int3
mov
xchg
lea
(bad)
cmp
shl
jbe
imul
shr
jno
test
sar
sub
call
fwait
call
sub
lock
cmp
jnp
push
adc
cmps
daa
retf
lea
aad
sbb
mov
(bad)
fs
and
les
add
or
inc
dec
mov
leave
cmp
sub
push
test
add
dec
mov
add
and
imul
jo
jo
jnp
in
pop
sbb
outs
mov
jle
ja
mov
pop
push
jnp
inc
das
jge
std
pop
or
outs
cmp
lods
pop
nop
add
xchg
loop
movs
in
xchg
loope
pop
fnsave
dec
mov
sub
xor
xor
cmp
xor
outs
ja
mov
push
xor
cld
ss
fs
xchg
in
iret
jge
xchg
pop
out
and
cld
imul
and
push
or
dec
pop
loop
cmps
xchg
push
mov
dec
test
xor
xchg
ja
add
retf
ror
adc
in
enter
add
and
lea
test
and
jns
arpl
mov
stos
cdq
mov
cmp
push
push
dec
pusha
mov
pop
into
push
das
jl
pop
sub
mov
mov
or
pop
adc
xchg
or
in
fisttp
dec
stos
xchg
fs
mov
push
retf
pop
leave
shr
data16
mov
cwde
sbb
in
or
cmp
jne
in
or
pushf
or
mov
adc
movs
add
mov
fs
popf
xor
hlt
fldenv
fisub
enter
inc
adc
jbe
mov
dec
mov
ins
aaa
xlat
push
iret
sbb
jmp
int3
or
out
scas
mov
mov
adc
xchg
(bad)
and
mov
in
emms
ret
push
cli
pop
popa
pop
push
or
xor
lea
maskmovq
neg
xchg
mov
loope
js
arpl
xor
js
jae
hlt
dec
jge
leave
pop
sbb
data16
sub
inc
fcmove
jecxz
lahf
ja
call
pop
ins
stos
and
test
popf
test
pop
jmp
xlat
retf
(bad)
fistp
(bad)
push
loopne
cmps
(bad)
dec
test
and
jp
stos
mov
loopne
test
aaa
jmp
mov
push
inc
push
dec
test
xchg
sahf
mov
jnp
call
jb
lods
arpl
add
dec
pop
(bad)
xor
das
sub
pop
fmulp
mov
movs
sbb
lea
push
imul
pop
repnz
(bad)
fld
push
mov
lahf
pop
xchg
push
inc
shr
push
int3
daa
lahf
push
mov
stc
jne
adc
mov
mov
aaa
and
jecxz
inc
or
in
mov
cmp
enter
push
hlt
adc
and
mov
sub
sahf
ds
adc
mov
shr
aas
xor
dec
test
fidiv
aad
call
ja
addr16
leave
sub
mov
push
jecxz
mov
pop
dec
repz
cmp
and
hlt
ds
jno
sub
mov
push
sahf
jmp
pop
sbb
xor
lock
jmp
dec
pop
sbb
xchg
or
hlt
das
push
lea
ret
in
test
cmp
mov
loop
jbe
jl
int
fild
xor
ret
mov
push
push
push
bound
cmp
dec
mov
out
lods
jmp
pop
ins
jo
or
push
mov
jl
pop
inc
out
pushf
je
test
hlt
dec
inc
push
bound
xchg
ds
xor
jmp
retf
push
repnz
pop
int
out
jo
repz
leave
popa
out
xchg
movs
shl
dec
cmp
cmp
leave
cld
or
xor
lea
and
cmp
jle
push
xchg
mov
leave
push
outs
in
rcr
dec
(bad)
pushf
lods
cmp
out
cmps
lods
les
test
adc
mov
and
xchg
out
scas
sar
or
ds
lds
jo
call
inc
xor
pop
aam
hlt
outs
mov
out
pop
fiadd
inc
in
cld
jnp
push
lods
imul
stos
es
int
dec
mov
imul
pop
ins
sbb
cmp
pop
loopne
push
out
mov
mov
mov
push
scas
ret
shr
sti
adc
mov
mov
pop
inc
inc
cmp
xor
mov
and
mov
lock
into
ret
push
cmc
imul
pushf
cmp
lds
sahf
pop
mov
test
sbb
(bad)
clc
inc
dec
xchg
jl
xchg
mov
data16
test
loop
jge
(bad)
sahf
mov
popa
cmps
push
pusha
fist
inc
push
into
jbe
ret
push
sti
loope
aad
dec
mov
cdq
mov
sbb
jbe
jb
repnz
(bad)
retf
dec
cmc
adc
jae
push
xor
stos
addr16
push
mov
lock
jne
sub
xchg
xchg
inc
xor
js
ins
stc
movs
sub
sbb
(bad)
pusha
or
add
lods
fmul
inc
sbb
neg
mov
xchg
xor
cmp
loope
mov
stc
push
les
adc
fcmovbe
inc
popf
test
(bad)
mov
jns
add
data16
sub
test
jne
cdq
(bad)
int
or
repnz
push
sub
cwde
xor
xchg
cmp
cld
sbb
cmp
test
cwde
test
jmp
pop
aad
aam
mov
jne
jge
xchg
sbb
xchg
(bad)
fbld
cli
ins
ret
xchg
mov
fsubr
mov
push
lods
ret
sub
popf
stos
test
repnz
lods
loope
js
stos
adc
pop
enter
cwde
jns
dec
jg
jbe
div
xor
xor
or
in
push
adc
xor
cmp
mov
jne
xchg
mov
cmp
inc
imul
jnp
xchg
dec
lds
mov
pop
idiv
mov
inc
or
stos
fnstenv
jbe
inc
icebp
cs
pop
mov
scas
dec
xor
into
or
int
pop
and
movs
xor
mov
push
xchg
mov
mov
test
js
loopne
leave
rcl
hlt
repnz
mov
inc
or
pop
call
dec
and
arpl
add
std
xchg
push
out
(bad)
pushf
push
int
cmp
jae
loop
pop
sbb
out
xor
mov
jl
sti
push
mov
addr16
xchg
test
xchg
gs
fadd
loop
int3
and
rol
jp
leave
sar
cmp
push
jb
mov
or
cli
mov
jnp
cmp
jge
xchg
jne
lock
stos
and
pop
lea
and
inc
cmp
test
bt
int
cwde
rol
lods
je
pop
ret
mov
mov
xor
mov
jbe
sub
mov
iret
pop
aaa
sbb
sahf
push
jae
jns
jge
mov
cdq
imul
mov
mov
dec
cmp
jo
mov
call
xchg
ror
push
dec
inc
call
pop
and
jl
test
jg
stos
xchg
and
cmp
jge
and
xchg
enter
hlt
jnp
xor
push
das
mov
aas
cdq
sbb
and
in
add
div
mov
mov
loopne
adc
ss
lods
stc
add
sti
mov
(bad)
adc
and
cmp
int
cmp
jmp
imul
and
fcom
mov
mov
push
inc
ds
mov
add
ss
cmp
mov
xchg
inc
(bad)
test
in
cmp
pusha
fsub
arpl
fcom
pop
jmp
jle
inc
test
and
ss
fwait
push
and
push
test
sar
or
sub
adc
(bad)
xor
jns
(bad)
mov
jae
cmp
outs
mov
pop
bound
xchg
aad
shl
in
mov
loop
sbb
call
xor
test
mov
aas
push
dec
fxch
pop
xlat
jg
xchg
or
sbb
fst
in
in
inc
fbld
or
xor
xchg
pusha
lahf
retf
data16
mov
pop
sub
dec
mov
mov
test
out
jmp
loope
dec
shr
dec
ret
cmps
sub
out
shl
test
dec
imul
xor
ret
popf
(bad)
cli
(bad)
sar
sti
add
movs
mov
fcomp
push
cs
jp
jg
and
test
ficomp
xchg
les
xchg
out
xor
psrlq
popf
clc
adc
push
out
inc
jne
sbb
xlat
sti
xor
movs
add
or
add
retf
mov
cmp
pushf
pusha
push
daa
adc
adc
and
out
cmc
gs
je
mov
jnp
in
mov
xchg
cmp
out
rcr
pop
dec
stos
outs
xlat
dec
pusha
pop
inc
sub
lahf
mov
pushf
pop
stos
push
jmp
dec
adc
fs
imul
bnd
sbb
idiv
mov
xor
xchg
push
cmp
adc
xchg
or
and
push
mov
cmp
fucomi
sbb
cld
pop
test
xor
jmp
inc
or
add
lods
and
stc
daa
xor
dec
inc
dec
imul
xchg
push
xlat
push
jno
test
retf
xchg
and
mov
sbb
stos
push
jl
or
jge
enter
mov
rcl
jns
inc
in
test
lods
or
cmp
or
and
jbe
jno
lods
jb
add
cmp
or
xchg
mov
xchg
mov
xor
sahf
jno
push
dec
shr
mov
dec
cmps
(bad)
inc
jb
push
in
and
mov
and
push
sbb
add
mov
shr
mov
(bad)
sbb
fldcw
lods
pop
push
jl
add
shr
xchg
mov
jecxz
and
sub
pop
cmps
ds
mov
jns
das
outs
daa
std
mov
sub
pop
(bad)
bound
pop
ficomp
pop
or
xor
outs
xchg
js
std
pusha
sub
lea
mov
sbb
aaa
neg
psllq
call
push
xchg
(bad)
out
sub
in
cdq
test
ins
sbb
cmp
or
adc
pop
xchg
push
repnz
xor
sar
pop
outs
pop
lahf
mov
jp
popf
mov
loope
mov
cmc
loop
ss
(bad)
mov
loopne
repnz
outs
cmps
dec
fcmovu
pop
xor
fiadd
adc
mov
mov
in
push
push
repz
lahf
hlt
jge
add
mov
adc
mov
outs
dec
push
push
aam
sbb
imul
xor
sub
shl
ror
adc
paddw
cli
in
fcomp
pop
and
das
imul
shl
xchg
ins
cmp
out
sub
xor
js
add
movs
xchg
mov
bound
xchg
jo
(bad)
mov
clc
fwait
dec
jbe
xor
movs
fwait
push
aam
mov
pop
push
adc
das
lahf
mov
pop
mov
gs
cmc
les
mov
cwde
out
sbb
call
mov
dec
(bad)
sub
(bad)
xor
adc
add
mov
mov
gs
popa
ins
div
jo
bound
mov
cmps
call
inc
mov
pop
jb
stos
aas
jg
idiv
rcl
mov
sub
push
sub
or
mov
add
loope
in
and
loopne
adc
(bad)
scas
out
lahf
sahf
in
push
pushf
add
add
xlat
sbb
mov
frstor
mov
jmp
mul
cmp
xchg
xor
xor
sbb
call
cld
sbb
fnstenv
icebp
fild
pushf
mov
push
xor
pushf
neg
mov
sub
stos
xor
sbb
cmp
push
aaa
je
hlt
sbb
(bad)
push
sbb
loope
xchg
push
fldenv
scas
call
jmp
xchg
rcl
xor
sub
adc
sar
mov
aad
pusha
cli
imul
mov
retf
cmp
sbb
add
psrld
jmp
mov
das
xor
cmps
push
jl
mov
dec
xchg
stos
test
jg
xlat
add
and
call
inc
pop
(bad)
imul
mov
js
les
adc
ret
mov
lock
or
xor
nop
add
arpl
test
sbb
mov
js
push
out
aam
cmp
pushf
cli
and
in
push
push
add
add
push
je
stos
push
or
push
jmp
addps
add
adc
(bad)
push
mov
push
loopne
dec
jecxz
pop
mov
and
or
and
test
push
dec
jnp
in
sbb
ror
or
int
sub
in
aas
cmc
lock
das
div
pop
and
lahf
cwde
fimul
mov
xchg
out
mov
fcmove
ror
adc
xor
rol
retf
mov
inc
cmp
mov
sub
stos
mov
xchg
ins
in
(bad)
loop
push
cmp
pop
neg
sbb
popa
les
nop
mov
inc
imul
or
cli
int
xchg
dec
xor
jnp
jbe
dec
inc
push
sbb
addr16
pop
inc
jae
xchg
cs
mov
lods
jns
mov
into
test
dec
les
xchg
ror
gs
add
cmp
inc
pop
dec
pop
test
dec
pop
data16
popf
in
in
inc
add
lock
fistp
mov
mov
daa
push
adc
aas
jmp
jno
lds
lods
cmp
cs
clc
js
scas
inc
mov
call
sti
xor
sar
xor
jg
mov
out
mov
sub
sub
(bad)
mov
jl
mov
sar
call
pop
adc
mov
out
dec
or
xchg
lea
xchg
pop
pop
mov
lahf
or
retf
aaa
dec
gs
inc
mov
cmps
loope
aas
or
add
xchg
scas
and
mov
retf
mov
sbb
fsubr
mov
push
icebp
imul
xchg
cwde
jmp
movs
push
into
pushf
xchg
fisttp
and
xchg
dec
jbe
repz
push
mov
xchg
jmp
pusha
clc
stos
mov
push
jne
add
mov
sbb
pusha
test
xor
daa
fsubr
mov
mov
cmp
adc
inc
cmc
sti
in
ret
nop
rol
lock
and
fwait
pop
lods
adc
fisubr
and
ja
cmps
icebp
data16
jno
pop
adc
std
outs
cwde
adc
lods
(bad)
call
les
sub
or
ins
mov
retf
or
das
or
add
(bad)
dec
push
call
jb
fidivr
adc
int3
mov
mov
mov
out
mov
stc
add
call
jnp
leave
popf
xchg
xchg
jnp
adc
ror
popf
mov
mov
dec
popa
push
push
adc
cmc
lock
ror
inc
bound
mov
push
lock
dec
ins
lods
mov
mov
mov
jl
add
jmp
out
xchg
sub
dec
out
dec
sbb
jo
pop
mov
xchg
add
dec
jl
pop
repz
jne
iret
repz
dec
call
mov
jmp
mov
sbb
and
out
jne
mov
out
icebp
je
and
popa
push
popa
fsub
fcmovnbe
mov
push
and
stc
je
test
movs
sar
lahf
xor
pop
iret
pop
sbb
movs
out
ret
jo
pop
lahf
xlat
jno
popf
into
lahf
or
pop
stos
fs
jecxz
cmp
mov
push
cmc
lods
jecxz
in
mov
icebp
in
jecxz
into
mov
xchg
repnz
dec
mov
push
push
mov
mov
call
aas
daa
aad
mov
add
cld
jl
rol
rcr
dec
cdq
cmp
jmp
inc
fcom
mov
rcl
adc
or
mov
add
(bad)
shr
add
xchg
imul
push
sbb
jl
sbb
xchg
pop
and
dec
movs
jp
mov
rol
ja
imul
sbb
jmp
add
sar
stc
out
mov
push
inc
pop
adc
mov
jg
outs
mov
in
ret
pusha
dec
ficomp
jmp
popf
fcmovnbe
call
call
scas
or
push
push
popf
push
pop
in
adc
or
inc
fidivr
iret
or
jle
(bad)
cld
aam
push
fisub
aam
test
sti
les
xor
stos
xchg
add
icebp
(bad)
in
aad
dec
pop
adc
imul
rol
rol
fisubr
xchg
adc
jne
jl
lahf
enter
daa
enter
xchg
jno
loop
adc
test
ret
sar
push
mov
bound
xchg
cmps
test
cmp
jl
bound
cmp
mov
jnp
fisttp
mov
fcmovb
mov
fisttp
mov
add
or
add
lock
cmp
mov
lds
ficom
or
sbb
enter
cmp
sub
jge
inc
ins
ss
lods
je
aas
fist
addr16
imul
xchg
cwde
pop
es
pushf
and
cmp
out
(bad)
arpl
mov
loope
push
sbb
es
(bad)
out
pop
add
mov
cmp
and
jl
cdq
mov
lock
push
cwde
pusha
add
arpl
xchg
xchg
je
jae
mov
leave
push
xchg
cmp
xchg
neg
in
and
test
retf
ins
jmp
bound
push
jns
in
mov
stos
xchg
pop
push
xchg
mov
inc
fdivrp
lods
aad
xor
aad
pop
das
and
daa
cdq
sbb
fwait
cmp
std
push
pusha
pop
push
ins
push
dec
jb
sbb
int
jmp
dec
mov
in
daa
push
dec
fdiv
dec
and
popa
mov
adc
and
mov
aaa
out
or
and
jmp
pusha
out
jmp
test
es
retf
sub
push
fadd
push
jp
xchg
adc
ficom
cmps
mov
sbb
cmc
shl
sub
dec
adc
sbb
stos
in
je
(bad)
loopne
inc
rol
push
mov
in
dec
les
sti
in
in
jmp
xchg
addr16
in
int3
mov
ins
call
pop
or
push
stos
sahf
cmp
stos
clc
stos
or
aad
xchg
or
fdiv
lahf
pop
sub
cmp
hlt
psrld
mov
lock
jg
lods
add
stos
adc
ja
and
mov
imul
(bad)
push
jmp
rcr
bound
inc
and
cmp
mov
xchg
cmps
aas
mov
or
push
sub
pop
mov
pop
push
pop
sbb
pop
dec
pop
out
clc
adc
push
mov
(bad)
out
inc
pushf
nop
fst
push
ror
sti
xchg
mov
add
cmp
push
or
int
dec
jno
outs
jo
adc
push
sti
pusha
pop
test
lahf
jno
addr16
ds
lea
sti
aam
xor
popf
and
pop
add
adc
inc
aam
dec
fs
push
out
jmp
sti
sub
pop
loopne
jle
xchg
shl
sbb
xor
jo
push
mov
pop
xor
pushf
jns
lds
dec
jmp
icebp
jle
(bad)
aaa
sub
hlt
jle
sbb
pop
iret
dec
mov
mov
popf
add
xchg
outs
push
inc
mov
scas
popf
fld
lahf
sbb
push
shl
jg
cli
call
or
(bad)
out
dec
call
popf
xor
xchg
jl
mov
mov
mov
addr16
movs
and
movs
fnstcw
mov
cmps
xchg
(bad)
aas
jno
dec
in
fsub
sbb
stos
repnz
mov
icebp
bound
cdq
sbb
mov
loop
call
jmp
imul
ss
test
xchg
repnz
or
dec
add
outs
pop
xchg
dec
fisub
fmul
(bad)
pushf
cmp
in
(bad)
adc
sub
scas
mov
dec
cmp
cmps
pop
pop
retf
data16
xchg
idiv
test
and
std
loop
enter
cdq
pop
ja
loop
push
inc
sub
out
pop
dec
xor
lea
jmp
add
and
mov
jle
out
fld
mov
test
jmp
add
imul
cmc
repnz
ja
or
imul
mov
jno
xchg
adc
in
ret
into
and
fwait
daa
mov
or
test
jns
cli
and
push
ds
dec
stc
cmp
loop
xor
sbb
outs
ret
scas
inc
enter
std
(bad)
int
ror
jns
cmp
dec
imul
sub
or
inc
cs
cmps
aaa
pcmpgtd
sar
mov
jb
fcom
adc
sbb
dec
dec
push
lds
das
pop
push
push
ja
js
lock
fcom
cwde
add
(bad)
sbb
push
jmp
(bad)
xchg
(bad)
imul
aad
mov
or
jo
jmp
nop
pop
dec
push
push
mov
outs
dec
retf
mov
sbb
push
or
dec
jb
hlt
mov
in
jno
pop
mov
add
sahf
stos
lock
loope
cmp
ins
cmc
push
xlat
pop
lea
push
fistp
dec
xchg
stc
cmp
or
adc
clc
repz
leave
or
ss
nop
imul
sub
sti
enter
cli
(bad)
cmp
cmovne
movs
mov
stos
push
imul
push
fld
in
jecxz
dec
xchg
mov
jle
mov
(bad)
xchg
jns
fnstenv
js
aad
jge
into
shr
xor
popa
cmp
mov
rol
xchg
aam
inc
pop
ss
cmp
dec
retfw
bswap
jmp
bswap
out
out
jle
fimul
jge
cmp
cmp
or
pop
sub
ja
push
enter
in
sbb
mov
int3
sub
cs
aas
popa
mul
ja
mov
imul
repnz
mov
cmp
add
pusha
cld
xchg
dec
adc
or
stos
mov
out
test
xor
and
mov
xchg
fcom
sub
cmp
(bad)
movs
out
mov
cmp
cmp
xchg
fsubr
xchg
jne
ins
arpl
inc
push
and
and
jae
mov
cwde
mov
xchg
(bad)
xor
mov
js
push
and
es
mov
cdq
fidiv
ss
rol
and
xor
jo
pop
sub
(bad)
pop
pop
shl
mov
rcr
xor
(bad)
or
push
xchg
adc
popf
and
lock
hlt
jne
int
aas
lods
aaa
test
neg
push
fadd
outs
dec
add
imul
mov
sti
mov
ficomp
das
ret
xor
mov
sbb
stc
aas
pop
fwait
jns
and
sbb
push
xchg
xor
xchg
nop
dec
or
and
push
push
shl
or
sub
adc
adc
xchg
xor
or
movs
std
or
test
gs
movs
aad
mov
xor
jl
bound
sub
std
les
icebp
xchg
adc
data16
cmp
adc
sbb
pop
add
mov
and
jmp
ins
mov
es
jg
int
retf
rcr
lds
cs
jmp
sub
jb
mov
retf
ds
lods
and
pop
sbb
pop
add
push
inc
test
jmp
xor
ins
cmp
push
(bad)
jge
cli
arpl
xor
out
fstp
mov
ss
sub
push
add
xor
xchg
or
jns
aas
dec
ins
jns
das
cmp
retf
pop
dec
test
ss
sbb
jnp
and
jge
popf
mov
pusha
mov
dec
sbb
push
lods
test
out
mov
sbb
into
pop
ror
rcr
stos
cmps
lods
xchg
jle
cmp
dec
push
lods
loop
sub
sub
arpl
sar
or
out
call
shr
fmul
rcr
sub
repnz
push
fs
add
pop
mov
jae
pop
nop
cdq
mov
jmp
outs
adc
push
and
adc
ja
retf
and
pop
mov
cli
iret
push
sub
scas
xor
jno
sbb
inc
sti
xor
movs
int3
xor
std
jmp
xchg
call
test
mov
xchg
push
or
lock
out
adc
scas
lahf
cld
ror
cld
add
jle
cmp
adc
dec
mov
inc
or
sub
fiadd
fcom
push
xchg
jnp
mov
daa
sahf
jnp
fdivr
and
dec
js
das
loop
and
cmps
jbe
mov
movs
shl
fbld
push
sub
mov
xchg
and
mov
inc
sub
(bad)
stc
push
cmp
push
cwde
xchg
popf
jae
adc
shr
or
sbb
ror
push
lods
push
jmp
xchg
mov
or
fs
inc
add
psubq
cli
sub
or
inc
retf
jnp
xchg
and
sbb
xchg
retf
push
scas
push
fld
lods
add
sti
mov
clc
leave
pop
xlat
outs
dec
dec
jmp
lods
inc
fst
sbb
mov
cmp
je
test
xor
sbb
scas
in
outs
pop
or
imul
and
ficom
jne
arpl
xor
ret
cld
retf
idiv
push
adc
leave
int3
retf
ret
fucom
rcr
popf
in
or
(bad)
aaa
fist
inc
inc
test
repz
mov
push
inc
cmps
add
clc
mov
push
sub
mov
or
push
add
inc
xor
xor
pop
test
pop
pusha
mov
jge
ror
xchg
inc
mov
in
add
cmps
fwait
cs
add
push
push
pop
jmp
cmp
jo
ja
mov
ja
xchg
xchg
cmp
sub
mov
mov
xchg
(bad)
retf
jnp
cmp
lock
inc
xor
pop
push
push
inc
bound
pop
clc
dec
mov
push
xchg
call
rol
das
fadd
mov
and
and
das
mov
mov
and
mov
out
jg
add
cmp
gs
push
inc
or
jge
fisttp
loopne
inc
fdivr
mov
shl
adc
push
mov
or
add
xchg
inc
push
mov
or
test
inc
mov
hlt
aad
mov
xchg
xchg
jns
jmp
add
jle
inc
xchg
push
dec
adc
(bad)
pop
test
adc
ret
xlat
fimul
and
ds
inc
loop
xchg
ss
out
ret
shl
mov
daa
test
and
leave
jb
xchg
mov
mov
pop
inc
pop
push
ins
push
mov
mov
in
pop
fldcw
and
mov
in
and
sub
push
sbb
xchg
imul
sbb
mov
adc
xchg
ja
mov
outs
xchg
dec
(bad)
pop
inc
jne
jae
fwait
mov
stos
int
gs
adc
xchg
in
pop
sbb
jae
adc
or
sub
and
hlt
mov
fidiv
sbb
test
int3
loope
push
cmp
jg
out
mov
xor
icebp
push
daa
cmp
das
add
ret
mov
push
or
test
xor
sub
jecxz
adc
inc
fiadd
inc
mov
inc
arpl
xor
or
mov
bound
and
stos
cmp
adc
das
add
jp
iret
push
aad
retf
mov
cmp
cmp
movs
loop
ret
jo
inc
jo
inc
jg
and
addr16
cmp
jg
clc
mov
dec
loope
mov
push
mov
dec
sti
xor
or
add
sbb
xchg
test
dec
clc
fstp
test
out
popa
stc
mov
mov
jns
in
adc
jnp
fld
shl
pop
ret
dec
mov
fisub
mov
mov
push
jg
pop
xchg
(bad)
fwait
daa
outs
jmp
pop
gs
jns
(bad)
xchg
sysexit
push
sbb
pop
dec
cli
sbb
stos
cmps
scas
dec
repz
jle
sub
scas
fwait
mov
rol
neg
inc
lods
sti
pop
(bad)
ror
out
jp
jae
cmp
addr16
xlat
int3
dec
mov
sub
loope
and
sti
aas
lods
lods
push
(bad)
dec
cld
inc
enter
inc
adc
sbb
js
cmp
mov
cld
repz
cld
outs
sbb
xchg
inc
out
sar
inc
xor
cmps
fwait
sub
xor
dec
scas
xor
and
inc
xchg
jl
xchg
jnp
mov
arpl
pop
adc
push
dec
imul
(bad)
ja
mov
lea
xor
mov
cmp
ja
or
dec
div
xor
xchg
(bad)
jo
mov
stos
pusha
push
push
shr
pop
lods
xor
push
dec
push
ss
inc
ret
push
lahf
rcr
test
jmp
in
jecxz
scas
push
jne
adc
dec
lock
leave
push
retf
inc
jp
cmp
push
xchg
xchg
cmc
sub
hlt
iret
retf
dec
aas
fisttp
xchg
mov
mov
stc
imul
adc
push
into
lds
or
inc
pop
sar
push
pop
addr16
pop
cmp
push
xchg
inc
and
jl
cmp
scas
add
push
push
loop
xor
inc
sbb
pop
push
mov
xor
xlat
inc
(bad)
scas
dec
ret
lods
or
fcomp
xchg
xchg
mov
aas
push
and
cmp
or
and
push
ret
mov
sub
int3
pop
or
mov
rcr
inc
aas
push
mov
out
sub
data16
sub
mov
ficom
adc
cmp
lahf
push
not
push
and
push
push
sbb
test
rol
jl
mov
or
sbb
push
push
adc
lods
adc
fisttp
int
ror
cmc
sbb
int
cmc
add
or
popf
adc
stc
jae
jns
add
call
iret
dec
and
xor
repnz
inc
clc
int3
xor
inc
cmp
fwait
shl
xor
lock
pop
icebp
mov
ins
sub
adc
dec
aaa
jo
inc
je
addr16
pop
inc
cmp
add
js
mov
pop
lea
mov
pop
jns
mov
lock
test
in
icebp
xchg
mov
pop
mov
inc
stc
inc
sbb
pop
das
cmp
mov
push
push
stos
or
loop
pop
add
mov
sub
(bad)
mov
test
stc
pusha
loope
push
push
stos
xor
test
cmp
mov
push
xchg
out
mov
aad
pop
outs
das
mov
cmp
mov
dec
rcl
mov
inc
cmp
pop
mov
mov
or
repnz
adc
xor
pop
jp
xchg
mov
or
mov
test
xchg
aas
(bad)
enter
pop
lahf
(bad)
cmp
fs
je
inc
stc
adc
in
add
ja
lods
xor
xchg
ins
mov
add
outs
mov
add
leave
shl
loope
movs
add
pop
sub
jecxz
cmp
hlt
dec
call
add
push
sub
aam
cmp
mov
jl
pop
fiadd
sub
gs
popa
(bad)
repz
push
sub
sar
aad
mov
push
push
cmp
aas
mov
dec
or
or
or
imul
cwde
dec
pop
push
adc
test
xor
dec
test
mov
push
dec
add
test
mov
in
add
xor
xchg
enter
push
les
ins
xchg
pop
cmp
mov
aam
outs
dec
pop
cmp
mov
sub
mov
jns
mov
fdiv
xchg
push
repnz
xor
cmp
(bad)
sbb
mov
fwait
mov
jmp
pop
call
or
nop
or
inc
inc
sub
cli
xchg
fld
jns
loop
push
ret
popa
cmp
xlat
pop
(bad)
int3
movs
jns
fstp
(bad)
loop
scas
cmc
jp
nop
cli
aas
mov
inc
dec
(bad)
pop
jmp
lds
adc
sti
xor
(bad)
sbb
mov
jnp
or
cmp
xchg
mov
stc
sub
retf
and
jne
std
pop
mov
shl
or
or
adc
cld
pop
pop
inc
arpl
mov
lock
or
sbb
fwait
xchg
outs
jle
es
fcomi
stos
inc
mov
cmp
leave
add
pop
or
xchg
and
mov
mov
and
push
and
loope
cmc
popf
cwde
icebp
iret
in
sbb
dec
cdq
stos
mov
paddsb
nop
push
inc
pop
into
push
jg
cmps
and
dec
sbb
jmp
cs
test
mov
lea
xor
push
sub
arpl
fcom
sti
and
mov
stos
mov
call
ret
jb
cwde
xor
sub
push
push
jg
adc
out
sbb
sbb
retf
mov
cld
xchg
and
ins
or
mov
bound
hlt
stos
neg
push
or
sub
push
and
or
add
call
sub
and
or
sbb
jns
pusha
pop
pop
sub
cmp
xor
mov
repnz
hlt
cmp
xchg
aas
imul
adc
mov
rcr
ficom
lahf
add
bound
test
(bad)
fs
pop
pop
sbb
popf
add
dec
fisttp
outs
inc
adc
scas
jae
lods
jmp
mov
jge
lods
jl
push
pop
or
pop
mov
fabs
lea
loopne
mov
xchg
imul
icebp
sbb
adc
jp
sbb
clc
sbb
mov
rol
fcmovnu
mov
clc
cmp
imul
outs
or
pop
sub
pop
fisttp
cmp
stc
movs
or
sbb
pop
push
test
in
vmovdqa
mov
inc
int3
int
stc
mov
(bad)
mov
outs
xchg
sub
cmc
fnop
push
or
test
cmps
pop
fst
pushf
in
pop
or
mov
loopne
pop
cmp
loopne
sar
repnz
mov
add
in
xor
iret
iret
(bad)
aas
lods
xchg
jmp
sub
adc
iret
fldcw
add
sbb
push
mov
xchg
retf
ins
std
int
jl
(bad)
stc
jmp
mov
or
in
fwait
sbb
ja
inc
popa
icebp
outs
fbstp
add
jno
pop
cmp
dec
sbb
cmc
test
and
not
cli
adc
push
push
mov
test
out
jno
in
or
jno
push
(bad)
neg
lock
(bad)
push
int3
cdq
or
ss
and
stos
jbe
dec
fistp
xor
push
dec
in
cdq
jge
shr
shr
inc
fsub
jnp
xor
push
xchg
hlt
add
in
cwde
adc
movs
mov
push
inc
fild
loopne
push
add
add
push
push
mov
not
cmps
push
jne
test
mov
mov
call
bound
jmp
(bad)
fisttp
adc
clc
dec
lea
mov
and
jae
push
pushf
inc
xor
test
adc
mov
out
mov
xor
mov
out
and
div
xor
xchg
mov
(bad)
arpl
xchg
lds
std
add
push
pushf
and
jb
mov
jp
jae
mov
sbb
jno
cmp
movs
sub
jge
push
pusha
pop
es
cmp
les
sbb
add
imul
dec
data16
ja
out
mov
pop
adc
push
in
pop
sub
in
inc
push
inc
jbe
stc
jae
ror
xor
popa
ret
test
int3
arpl
and
or
cmp
lods
fwait
xor
and
test
and
cwde
dec
in
add
dec
pop
arpl
ins
out
pop
xor
xor
dec
add
push
add
aaa
mov
pop
fist
mov
jne
les
add
les
add
inc
imul
out
pop
or
xchg
mov
jo
push
pop
shr
mov
push
push
sbb
pop
call
in
add
or
test
add
mov
inc
inc
sub
fdivr
adc
or
and
dec
loop
mov
rol
jo
aad
call
test
push
rol
push
inc
daa
dec
fidivr
ja
mov
dec
xor
call
adc
jl
jb
enter
pop
test
fwait
pop
or
push
or
jbe
mov
popa
push
mov
mov
lods
je
pop
add
jmp
sbb
(bad)
in
or
clc
jle
adc
fldcw
dec
out
xchg
fwait
dec
sbb
cmc
and
adc
pop
and
cmp
sbb
jp
xor
mov
add
cdq
xor
shl
jae
adc
dec
std
cmp
imul
cmp
push
out
pop
das
push
jle
iret
jo
xchg
fnstcw
sbb
sbb
xchg
in
adc
popa
dec
mov
out
xchg
mov
jo
xor
push
mov
fadd
xchg
cdq
neg
cmps
jb
sub
adc
enter
jecxz
or
dec
shl
repz
movs
jae
mov
xchg
sub
xor
movs
push
mov
ins
(bad)
jae
xchg
outs
imul
clc
ins
pusha
in
and
ret
fistp
data16
retf
inc
jge
push
push
ret
xor
fdivr
and
and
and
shr
xchg
aam
push
ja
mov
mov
ins
add
aas
xor
es
imul
dec
scas
mov
sar
cmp
jb
je
jb
sub
les
pop
in
jae
test
pop
inc
(bad)
rcr
iret
scas
sti
lahf
cs
and
mov
jp
loopne
jmp
mov
and
mov
add
loop
shr
and
aam
push
fsub
mov
(bad)
jl
xor
movs
fidiv
pop
daa
cmp
and
adc
cld
xchg
mov
stos
dec
and
outs
push
add
mov
fisub
ret
jae
ja
or
jns
les
mov
(bad)
dec
repnz
retf
adc
push
mov
fidiv
add
sub
xor
iret
(bad)
push
addr16
rcl
jnp
push
scas
jecxz
push
xchg
pop
pop
push
xchg
push
adc
fst
and
je
sar
or
mov
jmp
int3
movs
data16
adc
adc
jne
std
mov
in
jmp
adc
lea
in
push
repz
movs
scas
inc
inc
jbe
test
fs
aas
inc
test
jbe
xchg
lahf
push
(bad)
retf
sahf
or
xchg
in
push
(bad)
adc
dec
aaa
push
and
lods
add
xchg
rcr
push
out
xor
inc
add
popf
(bad)
mov
sti
adc
out
sub
fsub
jmp
xchg
je
dec
in
push
xchg
xor
test
push
pop
(bad)
enter
inc
ret
loop
aas
dec
test
add
dec
mov
das
cdq
sbb
mul
xchg
adc
fcomp
shl
dec
je
sub
cmc
fcmovnbe
pop
push
push
mov
pop
daa
cmp
pop
sbb
jb
cli
pushf
mov
add
xchg
adc
mov
pop
ror
cmp
sub
and
test
call
and
arpl
push
mov
mov
(bad)
lods
out
xchg
(bad)
cmp
and
je
clc
sbb
jecxz
add
and
push
xor
nop
add
adc
cmp
push
in
fs
xor
hlt
or
sbb
push
lahf
daa
repnz
in
xor
ss
xlat
imul
pop
je
and
scas
int3
ins
mov
adc
and
cmps
sbb
fst
loop
int
xor
test
aaa
out
(bad)
ds
mov
jle
(bad)
std
sub
dec
xor
imul
or
push
rcr
out
lahf
outs
ins
push
popa
test
pop
outs
out
sub
inc
retf
loope
js
xor
add
mov
push
(bad)
xlat
popf
jg
fwait
push
and
dec
cmps
adc
inc
pop
cmp
cli
loope
cmp
popa
inc
inc
imul
or
dec
jmp
pop
fld
ss
inc
jmp
cmps
jns
in
cwde
dec
lods
mov
std
adc
push
dec
xor
xor
xchg
mov
xchg
arpl
mov
cld
out
mul
test
cmp
mov
addr16
inc
cmp
jmp
mov
xor
pusha
sub
sar
lock
in
sbb
cli
jle
icebp
dec
push
rcr
movs
mov
sbb
xor
sar
std
aas
pop
test
ret
add
sbb
shl
sbb
call
fdiv
lock
cli
mov
or
mov
pop
cmp
cdq
int3
or
jnp
or
hlt
fcmovu
int3
fiadd
pop
and
dec
fwait
aas
mov
sub
adc
call
test
sub
daa
or
cdq
loop
in
mov
push
inc
sub
stos
lds
push
les
int
adc
mov
adc
add
iret
adc
imul
sar
loop
xor
adc
and
adc
xchg
repz
imul
cli
ds
pop
aaa
idiv
loop
inc
iret
lea
(bad)
mul
into
push
dec
ja
mov
push
add
call
xor
repz
mov
sbb
icebp
cmps
jmp
mov
jae
mov
sar
xchg
add
xchg
loopne
adc
out
sub
and
inc
mov
add
push
add
add
xchg
pop
imul
pop
out
les
pusha
cmps
in
push
fimul
stc
int
cmps
xchg
push
repz
shl
cmp
(bad)
mov
scas
or
inc
mov
aad
xor
imul
out
es
cmc
daa
pop
cmp
sbb
sub
iret
loope
xor
jl
mov
cld
hlt
sbb
lds
and
fdivr
and
(bad)
mov
jns
jno
jne
pushf
fidivr
into
stc
in
cmp
push
add
(bad)
in
cmp
in
mov
mov
adc
push
xor
and
lods
dec
loopne
jmp
nop
jns
hlt
dec
repz
jnp
ins
mov
test
mov
jmp
mov
(bad)
sub
mov
stos
cmps
test
sub
xchg
mov
mov
fcom
test
leave
dec
pop
inc
arpl
push
out
not
pop
clc
xchg
cmp
sub
sbb
aas
inc
hlt
and
mov
pusha
mov
mov
mov
ins
aad
shr
sub
in
sbb
in
fld
scas
jge
xchg
or
(bad)
lock
add
jle
hlt
js
in
and
jmp
sub
(bad)
gs
into
add
inc
xor
fisubr
fdivr
clc
lea
and
ret
mov
sub
dec
dec
out
push
jg
das
bound
and
test
mov
xor
popf
fcomp
and
mov
mov
jbe
es
in
push
jmp
outs
fucomp
or
xchg
std
inc
xor
(bad)
rcr
(bad)
mov
shl
arpl
shl
pop
add
and
pusha
pop
mov
in
pop
sub
(bad)
dec
jne
in
out
out
mov
out
mov
test
adc
mov
jno
cmp
mov
ret
(bad)
std
in
std
mov
sub
dec
pop
mov
cmps
jg
cmps
ins
mov
sbb
divps
xor
sbb
data16
cmp
mov
and
ror
test
sub
adc
lock
data16
mov
xor
fistp
repz
add
add
jne
add
stos
retf
pop
pop
cmp
xor
xor
or
sahf
cdq
sub
dec
pop
movs
int
sub
imul
push
add
aad
mov
jnp
fstp
cdq
mov
xor
cmp
cld
cmps
mov
repz
lds
mov
ins
add
pop
mov
mov
push
or
in
arpl
stc
and
(bad)
aam
cmp
rcr
test
sub
in
xor
xchg
sbb
or
jnp
push
hlt
repz
ss
rcl
mov
or
cld
enter
add
mov
xor
mov
mov
jmp
lahf
pushf
and
push
cmp
fadd
outs
mov
mov
(bad)
add
movs
sbb
sub
pop
pop
xchg
pop
das
adc
arpl
cs
aam
das
sbb
call
cmps
sti
adc
es
adc
adc
ja
mov
and
sbb
sbb
mov
psllw
pop
xchg
push
push
sub
addr16
mov
call
sub
fxch
nop
pop
mov
imul
loop
sar
jmp
iret
(bad)
mov
inc
lahf
cwde
cmp
mov
cli
or
pop
add
arpl
les
adc
sti
iret
sbb
ins
jecxz
ds
(bad)
rcr
or
push
xchg
jne
inc
push
std
aam
data16
mov
mov
fadd
inc
lods
sub
or
fwait
popa
xor
xchg
push
dec
pop
lods
das
fnsave
movs
or
add
cwde
sub
(bad)
clc
ins
or
mov
movs
call
mov
iret
(bad)
out
stc
push
sub
cmp
pop
push
pop
or
mov
push
js
adc
push
inc
xor
das
xor
mov
mov
adc
add
add
push
fst
xchg
scas
push
hlt
jo
adc
rcr
mov
sub
test
pushf
call
test
push
aaa
call
jnp
or
or
mov
and
mov
lahf
scas
cmps
inc
cmp
jb
sub
sub
pop
cli
scas
mov
pop
es
mov
dec
sahf
xchg
push
call
dec
or
aad
inc
out
sub
stos
scas
(bad)
mov
jo
add
mov
xor
test
inc
dec
cmp
jp
repnz
retf
pop
adc
sub
xlat
int3
mov
mov
stos
sti
mov
std
scas
sub
loope
mov
jmp
pushf
fs
(bad)
dec
fs
push
push
inc
fist
(bad)
push
mov
sbb
outs
aam
pop
mov
cwde
mov
xor
cmp
stos
stos
into
repz
cdq
jmp
lock
pop
add
jae
dec
cmp
ficomp
xchg
cmp
mov
ja
adc
popf
fisttp
inc
adc
inc
mov
add
or
fiadd
test
add
xor
or
mov
xor
add
aad
in
mov
mov
mov
sti
icebp
xchg
mov
mov
add
pop
and
cmp
mov
or
shl
in
es
addr16
out
xor
movs
int3
add
test
retf
push
xchg
call
movs
and
mov
jecxz
and
sar
adc
lods
jae
les
push
push
sub
cmp
xor
test
jl
repnz
jo
in
cdq
push
inc
sbb
test
xchg
das
push
ja
ds
mov
jecxz
clc
xor
lods
sbb
ins
cld
ds
lock
jl
or
inc
push
mov
jmp
test
adc
fwait
mov
pop
dec
sbb
mov
fnstenv
addr16
cmps
rcl
cmp
in
jo
add
jo
ret
sub
mov
xchg
pop
fimul
sub
test
ror
arpl
mov
mov
nop
int3
ja
popf
jg
jno
nop
cmps
inc
push
sbb
push
rol
jo
jle
(bad)
stos
or
xor
adc
mov
ins
push
xchg
cdq
and
mov
inc
push
ja
test
aaa
xchg
cmp
fimul
add
fadd
hlt
in
outs
inc
pop
icebp
(bad)
sbb
pop
ret
or
mov
enter
mov
shl
jbe
pop
dec
jbe
pop
and
fwait
inc
cmc
mov
(bad)
mov
dec
pusha
xor
sbb
retf
dec
stc
mov
lods
or
adc
into
mov
icebp
xor
repz
movs
lock
jnp
mov
jns
add
mov
movs
inc
rcr
rcpps
daa
mov
sub
test
sbb
cmps
int
jnp
mov
aaa
pop
jecxz
test
and
adc
pop
sbb
and
fwait
fs
xchg
and
movs
aaa
pop
push
or
push
mov
xchg
shr
loopne
inc
inc
popf
adc
and
cmp
dec
sti
inc
adc
lds
push
xor
jmp
aad
js
add
cdq
(bad)
mov
stos
dec
in
sub
leave
sbb
or
pop
int3
dec
rcr
ins
push
leave
popf
ss
sar
ins
jae
icebp
(bad)
xor
cli
mov
(bad)
bound
mov
test
inc
xchg
push
cdq
retf
cs
and
xchg
(bad)
sub
out
aam
scas
pop
lea
out
nop
into
scas
pop
movs
sub
or
sbb
jg
es
call
std
cdq
ret
and
(bad)
imul
add
jecxz
out
cmc
aaa
jge
mov
jnp
ja
mov
mov
dec
sbb
aas
xchg
mov
out
adc
loop
jb
fidiv
sub
inc
push
mov
add
out
push
adc
push
mov
lock
inc
movaps
add
aaa
fcomp
hlt
mov
(bad)
sti
jne
sbb
jns
shl
fwait
mov
stc
test
push
je
std
cmp
sub
cmp
fmul
mov
inc
xor
mov
icebp
xlat
inc
sti
sub
(bad)
dec
pop
inc
jnp
sbb
jne
push
and
and
push
loop
lea
sub
xchg
ins
loop
push
push
cwde
(bad)
xchg
or
inc
sbb
in
cmp
xor
add
mov
test
adc
std
fild
outs
push
das
xchg
clc
xchg
cwde
jb
push
in
stos
mov
cmp
cli
sbb
lods
lds
xchg
mov
inc
ins
jl
shr
mov
daa
add
dec
add
sub
mov
outs
into
pop
rcl
mov
test
push
pop
(bad)
adc
fs
xchg
push
and
repnz
ja
dec
ret
push
and
popa
rcr
mov
and
aas
mov
mov
mov
add
mov
pop
xchg
sub
xchg
in
test
leave
or
mov
cmp
mov
adc
and
dec
fisubr
mov
mov
cld
fwait
stos
xchg
(bad)
jmp
ins
mov
das
jno
add
cmp
jge
push
dec
jle
mov
adc
rol
jle
mov
push
add
mov
inc
arpl
sub
dec
push
jne
pop
jmp
sub
push
loope
mov
idiv
xchg
mov
test
or
in
adc
sub
loope
sbb
dec
lods
bnd
xchg
ss
add
mov
and
jb
add
retf
stos
adc
push
test
sti
mov
addr16
jo
repz
add
daa
mov
inc
or
add
leave
fisttp
xor
addr16
loope
cmps
sbb
into
scas
imul
pop
jnp
sbb
jo
xor
sar
lahf
stos
nop
push
out
lods
sbb
stos
inc
adc
mov
test
imul
mov
sub
inc
iret
in
pop
jecxz
nop
or
jecxz
fbld
cwde
loop
enter
shr
imul
jp
aam
shl
xor
outs
or
data16
ins
dec
mov
mov
and
fiadd
cli
out
cs
and
leave
in
mov
(bad)
push
xor
cmp
cmp
dec
movs
adc
adc
mov
add
inc
rol
pop
shl
jae
push
sub
or
pop
icebp
mov
jecxz
mov
adc
mov
mov
pop
inc
in
and
shl
cld
imul
aad
jmp
sub
jp
mov
and
cli
in
push
cmp
push
or
movs
test
sub
jo
fmulp
shl
test
lahf
cdq
or
cli
cwde
repnz
sbb
imul
pop
jmp
lds
cwde
mov
idiv
sub
(bad)
pushf
int
out
imul
call
dec
repnz
sar
mov
shl
icebp
cmp
out
hlt
retf
(bad)
enter
xchg
movs
fbstp
stos
xor
cmp
xchg
dec
movs
popf
repz
jns
fld
push
mov
nop
rol
adc
ficomp
jne
xchg
push
sahf
(bad)
and
sbb
mov
jmp
(bad)
cmps
aad
gs
dec
aaa
inc
jbe
fidivr
js
es
cmps
add
and
fnop
test
cdq
push
mov
cmovs
sbb
ins
mov
push
pop
leave
dec
ret
xchg
ret
aam
xchg
scas
pop
push
push
outs
pop
aaa
out
retf
daa
push
cmps
hlt
rol
cmp
inc
iret
lahf
loope
pusha
mov
sub
xchg
cmp
not
enter
sbb
mov
out
in
outs
aad
push
adc
add
outs
test
out
stos
shr
add
adc
lods
or
pop
fisttp
imul
imul
jecxz
cmc
fidivr
call
xchg
and
sti
push
adc
lods
test
call
fisub
dec
push
out
cmp
aas
and
in
add
mov
pop
pop
jmp
cmp
jmp
push
pop
pop
push
int
inc
mov
imul
xchg
pop
and
cmps
or
in
pop
mov
sahf
outs
movs
pusha
push
neg
pop
mov
mov
push
in
cmp
dec
dec
inc
inc
xlat
out
mov
ror
xchg
mov
scas
gs
pop
jp
fisub
and
addr16
mov
push
mov
pop
push
test
or
cmps
in
test
xor
mov
adc
fild
pop
jbe
in
cdq
fidiv
jns
dec
hlt
test
inc
mov
mov
in
hlt
push
mov
xor
mov
cmp
cli
add
mov
enter
mov
call
dec
xchg
push
adc
fs
dec
cmp
pop
ins
pop
cmc
jg
and
loope
jbe
jmp
push
pop
js
jae
jge
xor
and
pop
fucomp
and
ds
movs
loopne
sub
pop
pcmpeqd
mov
xchg
cmps
dec
pop
adc
inc
(bad)
repz
or
adc
test
sub
test
mov
(bad)
bound
sbb
inc
cmp
cmps
dec
das
test
scas
mov
adc
xchg
aad
call
sbb
out
not
stc
or
push
mov
imul
jmp
sub
dec
clc
fwait
ret
dec
(bad)
out
mov
ins
xor
pop
and
mov
xchg
and
and
fistp
test
dec
sub
dec
pop
and
test
addr16
out
les
xchg
fdiv
xlat
lods
xor
pop
and
sar
fwait
mov
loop
stos
pop
mov
rcr
inc
inc
xchg
mov
add
cmc
jp
sti
lds
pop
push
xor
out
push
(bad)
lock
adc
push
out
xor
push
add
and
arpl
mov
jbe
mov
push
mov
mov
xor
mov
mov
dec
das
dec
and
or
ds
pushw
jmp
lods
ins
call
out
hlt
jecxz
in
loop
push
call
xchg
test
mov
mov
test
sbb
jp
jp
sti
sub
stos
mov
je
stos
push
scas
push
stos
loope
test
test
cmps
fs
dec
add
and
xchg
shr
jne
jg
inc
popa
rcr
sub
adc
(bad)
test
test
shr
sub
or
in
mov
sub
cdq
cmps
outs
dec
push
lahf
mov
xchg
and
push
dec
jb
jmp
pop
sub
aam
mov
push
mov
aas
(bad)
or
and
jle
mov
or
loope
int3
ss
call
pop
xlat
into
iret
add
fcmove
adc
jne
in
mov
lods
ret
xor
jo
jp
mov
in
hlt
add
popf
test
and
les
int3
push
push
idiv
fist
adc
lahf
in
sub
mov
sub
out
repz
mov
fisubr
mov
retf
inc
(bad)
ins
adc
daa
jbe
and
jno
jg
inc
out
and
mov
push
inc
sub
mov
xor
daa
mov
mov
loopne
retf
mov
sbb
(bad)
add
jmp
aam
hlt
cld
out
jbe
xchg
mov
rol
sub
pop
or
xchg
into
xchg
pop
js
(bad)
pop
pop
xchg
sub
mov
and
fisttp
ret
xor
add
(bad)
outs
dec
outs
fwait
out
aam
jmp
lea
inc
pop
les
nop
int3
loope
fiadd
dec
fucomp
pop
test
jle
xchg
popa
loopne
(bad)
shr
push
mov
xchg
jge
addr16
lods
gs
push
mov
and
and
retf
std
jl
mov
pop
ror
dec
or
mov
xchg
ror
sbb
pop
jne
imul
cmps
rcl
cld
dec
mov
sub
add
ds
adc
mov
or
push
inc
push
je
sub
and
cdq
push
inc
dec
fst
hlt
stos
add
pop
lods
sahf
inc
call
int
aaa
add
mov
sub
cmp
ins
pusha
loopne
(bad)
repnz
stos
icebp
cmps
bound
push
inc
loopne
out
mov
lock
cmps
mov
or
rcl
mov
cmp
repz
out
arpl
lahf
fisttp
dec
hlt
sub
mov
fnstsw
ins
jge
mov
cmps
add
enter
clc
adc
xor
adc
cmp
cwde
out
push
(bad)
nop
jo
movs
xor
(bad)
daa
sbb
outs
sbb
xchg
gs
jl
pop
bound
mov
movs
arpl
fisubr
mov
bound
clc
sub
sbb
adc
jno
aaa
push
sbb
adc
fisub
retf
les
sub
(bad)
aad
jo
sub
movs
outs
pop
sub
(bad)
stos
test
push
xchg
(bad)
adc
inc
fstp
push
mov
mov
mov
sub
arpl
xchg
xchg
enter
fs
(bad)
jb
mov
addr16
pop
je
data16
mov
shl
test
movs
cmps
ins
popa
cmps
mov
mov
push
mov
ins
test
pop
stc
ficom
push
or
pop
sar
cmp
adc
sbb
xchg
xor
aad
cmp
xchg
hlt
stos
jno
fbld
mov
pop
fucomip
pop
add
gs
sbb
(bad)
pop
(bad)
(bad)
rcl
fwait
lds
not
mov
xor
(bad)
add
iret
sbb
jnp
xchg
jae
dec
movs
js
push
pop
mov
or
pop
outs
imul
or
fsubr
jmp
ret
test
jge
(bad)
sti
ins
pop
out
cmc
push
sbb
mov
sbb
pop
jno
rcl
sub
sti
push
in
dec
cmc
inc
pop
in
inc
loopne
aad
mov
sub
pop
into
js
(bad)
pop
lahf
sar
leave
pop
fldcw
popf
into
mov
fstp
data16
push
int
mov
mov
cmp
xchg
sbb
xchg
push
cmp
sbb
cld
and
dec
jmp
pop
adc
adc
div
adc
xor
add
dec
cs
(bad)
popa
jl
or
lahf
lea
pushf
push
sbb
mov
jno
(bad)
mov
mov
mov
xchg
dec
test
and
inc
xchg
mov
xchg
mov
mov
mov
mov
inc
xchg
sbb
in
les
xchg
xchg
daa
gs
pop
fcomp
or
mov
pop
fwait
hlt
push
dec
sti
outs
mov
movs
ror
ja
xlat
lds
add
xchg
mov
(bad)
aaa
inc
(bad)
mov
dec
imul
stc
push
sub
and
add
ss
retf
inc
sbb
xchg
pop
inc
dec
jg
pop
lock
cld
dec
call
clc
and
stos
and
xor
hlt
sbb
aas
xchg
dec
call
fnstcw
cmp
ins
test
xor
popa
push
mov
sbb
shl
int3
es
push
test
mov
bound
test
push
dec
out
lea
(bad)
ds
add
cmp
adc
jmp
xchg
fisub
jge
jle
into
dec
nop
lahf
mov
neg
outs
aaa
inc
popa
sbb
jmp
add
xor
or
data16
mov
(bad)
fimul
jno
call
mov
aad
jmp
dec
ja
lahf
sub
repnz
pop
ficomp
xchg
and
and
add
jmp
sub
push
pop
adc
ffreep
cmc
or
jns
imul
jmp
(bad)
fsubr
mov
push
pusha
imul
into
cwde
mov
or
stos
xchg
sub
test
xlat
jp
test
jl
nop
inc
mov
push
mov
cmp
inc
cmp
mov
out
ja
xchg
xor
push
enter
lock
xchg
lods
sub
dec
dec
cmc
loop
rcr
and
pop
add
test
aam
jecxz
pop
mov
pop
js
loope
mov
pop
inc
es
add
dec
mov
pop
jnp
jg
jne
jg
loope
dec
sbb
dec
aaa
shl
aam
scas
ficom
sbb
loop
push
dec
fcom
add
mov
adc
test
in
push
mov
not
mov
int3
adc
(bad)
into
sub
jg
mov
lods
cmps
imul
dec
clc
sahf
pop
ret
shl
(bad)
jmp
xchg
pop
jge
mov
mov
js
inc
adc
pop
addr16
mov
mov
ins
inc
xor
cmp
movs
dec
mov
add
inc
xor
jle
xchg
test
sti
fiadd
das
and
movs
jne
retf
push
loop
mov
mov
push
test
add
push
sub
push
pop
mov
pop
add
out
dec
xchg
pop
pop
fld
sub
sbb
int
xchg
mov
scas
fcomp
sub
mov
pop
aam
cmps
loope
cmps
fldl2t
xchg
fisub
jp
mov
loop
inc
jo
icebp
fadd
jecxz
lea
test
xchg
cmps
and
jmp
pop
hlt
add
xchg
cmp
or
sbb
mov
mov
or
or
in
out
cmps
cmp
out
arpl
addr16
inc
jns
and
inc
adc
push
mov
pop
and
jmp
cli
das
xchg
pop
push
movs
(bad)
xor
push
in
mov
out
int
mov
mov
mov
mov
inc
out
pushf
fcomp
jbe
and
jo
hlt
pop
inc
cmp
jle
add
ins
push
mov
lods
cmp
leave
pop
loop
adc
std
repz
test
fwait
mov
sbb
call
enter
dec
mov
bound
(bad)
jmp
adc
nop
xor
xchg
mov
mov
jmp
mov
stos
pop
cli
lds
int3
xor
push
mov
aas
mov
push
pop
pop
sbb
cmc
dec
mov
fwait
pop
xchg
and
xchg
fistp
hlt
aad
aam
lods
sub
xchg
and
jle
enter
pop
cmp
popf
fadd
push
add
sbb
mov
and
stc
cs
ja
rol
std
or
sub
cmp
sub
or
adc
in
sub
sub
stos
pop
mov
push
shl
cmp
pop
xchg
pop
pop
sbb
call
add
cmp
(bad)
stos
out
loope
in
dec
jbe
jl
push
xchg
xchg
aaa
mov
mov
inc
sti
aad
into
ror
fld
stc
jno
and
jne
ins
xchg
ss
(bad)
jnp
mov
or
sub
retf
mov
adc
ja
cmp
push
pop
or
daa
adc
cmp
icebp
dec
add
in
jmp
cmps
cld
inc
fsub
xor
pop
movs
pop
adc
bswap
xor
sbb
addr16
adc
inc
and
adc
push
in
test
cmp
out
pushf
sub
and
imul
test
dec
hlt
push
pushf
inc
mov
lods
ror
ret
das
cmp
jb
sahf
xchg
jl
or
push
add
es
outs
or
push
loopne
inc
jno
in
(bad)
cli
mov
mov
mov
push
repnz
pop
xchg
dec
push
xor
xchg
jmp
scas
jmp
and
gs
div
stc
push
inc
adc
xor
pop
jl
jecxz
out
(bad)
ja
lods
mov
test
test
icebp
jp
ss
pusha
pop
icebp
gs
lds
inc
outs
in
and
stos
mov
cmp
pop
aaa
out
call
xchg
sbb
pop
(bad)
icebp
cmc
shl
je
or
jnp
dec
rol
add
pushf
frstor
stc
in
cli
lds
cmp
jmp
stos
inc
and
pusha
popa
nop
mov
cdq
int
leave
not
in
xor
ret
pop
setge
mov
inc
cmc
aad
dec
jae
dec
ss
(bad)
mov
ins
cld
in
inc
inc
xchg
mov
jo
je
shl
in
cwde
xor
inc
and
les
mov
mov
sub
mov
mov
adc
pop
test
ss
ds
push
push
fistp
jo
mov
out
cmp
in
lea
(bad)
ror
(bad)
scas
jecxz
mov
add
idiv
and
retf
inc
adc
pop
int
stos
outs
sbb
retf
fdivr
mov
jns
pop
(bad)
jne
daa
aaa
sub
cld
gs
xlat
inc
sbb
je
clc
jg
inc
mov
jecxz
aam
std
iret
adc
in
loop
dec
clc
cmp
adc
jns
add
psubq
push
iret
gs
adc
and
(bad)
sti
push
fimul
js
test
sahf
push
loopne
rcr
sub
sahf
push
sbb
jmp
push
jnp
xor
mov
in
dec
in
mov
int3
in
and
test
inc
adc
cdq
cmps
shl
into
sbb
stos
fimul
popf
xchg
arpl
push
pop
fwait
icebp
cmc
pop
or
xchg
and
and
lea
xchg
ret
(bad)
jnp
lahf
ss
fwait
adc
cs
sub
push
xchg
enter
add
jns
mov
shl
pop
in
(bad)
cmp
push
mov
push
cmp
adc
(bad)
mov
xor
mov
mov
cmp
imul
cmps
scas
sbb
push
ret
xchg
rol
leave
push
in
xor
sub
aaa
popf
shr
test
jo
sub
clc
or
hlt
push
push
and
xchg
or
and
pop
mov
hlt
ds
push
jae
sub
cmp
mov
(bad)
(bad)
xchg
push
aas
cdq
int
pop
pusha
int
in
js
adc
nop
pop
fldenv
lock
fild
push
add
(bad)
mov
stos
int
cli
mov
sbb
pop
addr16
ins
fld
xchg
push
rcl
jl
mov
jo
mov
sbb
mov
jnp
xchg
loop
in
(bad)
jb
sub
retf
stos
call
cmps
or
cld
int3
aam
rcr
aad
cwde
dec
ud2
push
jno
shl
jl
ror
sti
(bad)
push
hlt
iret
out
mov
fimul
jle
in
int3
or
das
pusha
outs
mov
cmc
mov
test
pop
mov
push
sar
add
push
xor
mov
sbb
popa
into
add
std
js
gs
jns
shl
call
in
xchg
mov
stos
repnz
add
push
or
cmc
pusha
icebp
and
(bad)
out
sub
pushf
xor
and
mov
mov
(bad)
mov
cmova
iret
scas
push
mov
adc
xchg
ret
test
test
mov
mov
add
or
add
popa
mov
sahf
dec
repnz
adc
stos
es
clc
int
adc
mov
cmps
xchg
jns
xor
jmp
aas
jl
sbb
adc
inc
jp
xor
push
pop
ficomp
mov
das
das
imul
adc
lds
xor
push
das
cs
cmp
mov
and
outs
and
out
push
cmp
cmp
cmp
movs
rcl
jne
stos
jl
repnz
xchg
fcmovu
push
mov
push
add
out
mov
sub
mov
sub
loopne
neg
xor
retf
cmp
lock
iretw
sbb
pop
mov
inc
daa
and
cmp
clts
mov
pop
ror
xchg
popf
icebp
inc
cmp
hlt
pop
addr16
rol
(bad)
xor
sahf
sub
stc
idiv
in
cli
jge
leave
call
sbb
inc
xchg
or
xchg
sahf
movs
push
das
addr16
push
push
repz
dec
shl
inc
aaa
out
lds
jno
in
ins
pushf
jb
sub
pop
xchg
mov
cmps
rol
push
outs
inc
push
and
out
clc
add
out
sbb
cli
xor
outs
and
jb
or
adc
sbb
sbb
jp
xchg
pop
test
mov
pop
sbb
sub
add
mov
sbb
mov
xchg
xchg
push
adc
hlt
or
dec
ja
stos
lods
pop
bnd
jbe
push
loope
xor
pushf
mov
mov
es
mov
arpl
movs
and
sbb
call
cmp
repnz
data16
push
add
mov
jp
shr
inc
jno
inc
test
inc
adc
pushf
js
push
mov
lahf
pushf
inc
stc
push
mov
fst
push
and
jno
inc
arpl
ins
aad
adc
movs
jge
test
cdq
cmp
setge
xchg
sbb
push
sti
out
pop
push
arpl
add
jae
ins
jmp
jno
cmp
ja
inc
(bad)
in
cmp
adc
inc
add
mov
pop
jo
iret
xchg
retf
test
sahf
retf
ret
es
jo
push
cmp
adc
mov
popa
fwait
ins
out
push
cmps
sbb
pop
sbb
into
into
jecxz
mov
(bad)
mul
clc
sbb
cwde
je
imul
dec
popa
sub
and
cli
fld
pop
xor
jbe
jge
dec
retf
add
lods
pop
test
push
xchg
xor
add
jae
push
fwait
inc
mov
repz
sbb
inc
in
lahf
pop
xchg
pop
or
push
pop
lods
push
sti
push
mov
scas
(bad)
ror
test
cwde
dec
pop
lds
movs
xchg
lock
cmp
inc
sbb
jmp
data16
(bad)
or
retf
call
and
mov
cdq
push
mov
pop
mov
test
mov
icebp
mov
sbb
fsubr
es
jle
xchg
sbb
mov
inc
dec
ins
add
mov
stos
xor
xchg
xchg
popa
xor
sub
jle
adc
xor
or
mov
inc
in
jb
cs
aaa
mov
mov
mov
push
test
sub
pusha
stos
jmp
scas
cmp
sbb
retf
(bad)
cmps
jmp
jmp
add
cmc
mov
hlt
and
add
push
xchg
(bad)
jno
lahf
inc
shl
mov
mov
dec
jecxz
jbe
jbe
popf
cs
mov
fs
loop
pop
sbb
mov
repz
xor
dec
cmp
mov
adc
in
xchg
jae
les
out
push
or
shr
pop
icebp
push
inc
xchg
js
pop
call
sub
cmps
ins
mov
jl
push
shl
add
scas
fsub
push
test
fsubp
or
ss
jg
dec
mov
into
inc
mov
aad
add
and
xchg
lock
mov
movs
xor
mov
xchg
test
or
stc
in
cdq
cmp
scas
sar
iret
push
nop
mov
dec
(bad)
mov
or
mov
xor
repnz
cld
inc
and
fdivr
loop
dec
js
dec
mov
mov
add
pop
pusha
lea
shl
out
jo
cmp
push
inc
hlt
pop
or
sysret
jb
mov
ret
push
sub
add
cld
fucomp
add
test
push
mov
mov
mov
dec
ss
cmp
adc
pop
jb
mov
aam
lods
push
sbb
sbb
jb
sbb
cmps
or
push
jecxz
test
aaa
mov
test
std
(bad)
sub
mov
ror
mov
inc
mov
jmp
dec
push
aas
inc
pop
xchg
adc
div
iret
mov
push
or
cmc
add
(bad)
sbb
sbb
inc
jge
dec
inc
paddsb
or
inc
pop
pop
sbb
scas
scas
shl
cmp
stos
scas
and
arpl
pop
adc
jl
inc
adc
nop
sub
cdq
push
mov
sbb
call
adc
gs
clc
fadd
scas
rol
bnd
cmc
out
sbb
neg
jmp
sub
push
(bad)
or
xor
ficom
or
sub
shl
xchg
clc
fsub
daa
sbb
push
mov
add
lahf
or
bound
sub
into
mov
inc
cmp
js
mov
jnp
mov
dec
mov
call
or
xlat
push
jne
call
cmp
adc
(bad)
ins
(bad)
dec
push
mov
and
cmp
jnp
jnp
fisttp
dec
mov
jle
dec
sub
lock
sub
sub
pop
aam
mov
les
ret
call
fcmovu
dec
inc
xor
loopne
sbb
inc
ss
(bad)
in
push
test
dec
or
bound
cld
sub
cs
jnp
jmp
pop
mov
ja
shl
cmp
scas
jge
cmps
scas
sbb
mov
add
adc
ds
sub
inc
inc
popf
enter
movzx
sar
aam
or
or
adc
cdq
cli
xlat
(bad)
(bad)
mov
lds
mov
repz
mov
dec
pop
xor
jge
pusha
or
dec
mov
adc
push
dec
jb
aad
aas
cs
(bad)
nop
inc
(bad)
or
fnsave
add
pop
jnp
push
dec
cdq
pop
fcomi
arpl
inc
or
je
lods
js
cmova
jno
dec
adc
retf
lods
sbb
pcmpeqw
test
xchg
adc
dec
sahf
and
(bad)
enter
xor
xor
sub
rcr
sub
dec
gs
or
mov
mov
aas
das
test
icebp
imul
jne
cs
pop
sbb
jbe
inc
sub
cmp
sub
cs
inc
cdq
mov
ret
jne
(bad)
arpl
sbb
jl
fidivr
pop
adc
push
inc
hlt
(bad)
std
out
jg
push
jb
mov
rcr
push
ret
inc
mov
cmp
mov
jmp
sub
or
add
jg
inc
inc
pushf
cmp
loope
cli
inc
data16
dec
in
sbb
jl
mov
pop
xlat
shr
outs
or
mov
adc
push
jmp
in
xor
test
in
xlat
dec
mov
imul
and
mov
mov
and
pop
mov
cmc
imul
shl
ds
sar
mov
iret
pop
xchg
ss
mov
pop
aam
fnstenv
in
fwait
mov
fcmovnu
lds
xchg
scas
enter
jne
ret
jne
jmp
xor
nop
xchg
div
aas
adc
inc
jnp
add
cmc
mov
dec
jmp
ret
cmps
(bad)
or
shr
js
jo
cmp
push
pop
daa
fmul
push
popf
sub
fcmovne
sub
mov
popa
ficomp
iret
les
inc
gs
pop
mov
cdq
test
mov
xor
or
and
sbb
add
or
jbe
fisttp
cmps
ds
test
and
retf
gs
repz
adc
xor
ror
imul
mov
jg
cld
push
fidiv
sbb
cmp
leave
dec
fs
scas
sahf
pmaddwd
xlat
fcmovbe
sub
mov
hlt
lea
sub
mov
mov
in
and
jmp
(bad)
movlps
xchg
and
rcl
stc
addr16
cmp
psubd
pop
push
push
inc
fs
push
sti
(bad)
cmp
jno
(bad)
jmp
ja
dec
jns
pop
cmps
add
xor
js
stc
dec
push
add
popa
in
icebp
or
xchg
sub
adc
test
(bad)
mov
fnstcw
(bad)
aam
fist
dec
push
enter
sub
sub
push
xchg
into
pop
add
mov
xchg
add
sub
sub
adc
fwait
cs
pop
ror
push
stos
lods
test
jb
arpl
sti
mov
dec
adc
xchg
icebp
xchg
call
fisub
test
leave
lock
push
inc
xchg
mov
mov
or
xor
push
aad
sti
jae
or
mov
aam
push
dec
repnz
dec
jg
push
jno
test
and
inc
ds
js
inc
imul
aad
sbb
js
out
mov
or
push
sbb
popa
stos
jmp
add
add
mov
call
ss
and
pop
jns
(bad)
retf
lods
sub
jg
xchg
or
(bad)
or
rcl
pop
enter
and
jp
sti
mov
lahf
cmps
scas
push
data16
mov
sbb
cwde
ret
int
loope
aaa
push
jmp
cmp
cmp
jmp
outs
mov
jmp
shr
xor
add
add
xlat
lods
popf
rol
jno
push
xchg
into
or
ins
mov
cmc
jmp
jae
lods
or
mov
enter
jg
mov
inc
sbb
mov
jbe
inc
sub
xchg
int3
cli
pop
pop
pop
inc
pushf
jge
das
mov
aaa
and
fld
push
std
das
xor
int
sti
push
push
adc
push
in
jecxz
push
imul
aas
(bad)
shl
fcomp
fisttp
daa
ss
inc
lods
sub
nop
sbb
pop
inc
in
sub
xchg
sahf
idiv
popf
jl
pop
test
dec
repz
pop
cmp
loop
dec
mov
cwde
call
pop
fmul
pop
xchg
test
test
mov
retf
ss
dec
cmps
pop
(bad)
test
pop
jnp
push
xor
or
cmp
hlt
(bad)
mov
lahf
inc
ret
mov
sub
jg
inc
mov
adc
ds
inc
ins
pop
(bad)
adc
outs
sbb
jge
sub
out
mov
shl
fcom
stos
int3
mov
and
out
xchg
and
stos
jl
pop
or
mov
ss
jle
(bad)
retf
jecxz
hlt
repnz
xchg
fbld
add
nop
lahf
push
leave
cdq
ret
in
loopne
movs
adc
gs
xor
nop
xlat
ss
bound
jg
jae
pop
mov
inc
les
mov
(bad)
xchg
xchg
pop
inc
push
cmp
lods
nop
shl
adc
pop
cmps
mov
or
sub
sti
(bad)
and
js
adc
data16
sbb
rol
test
sar
lock
ins
inc
(bad)
fsubr
cmp
jno
shl
cmps
gs
icebp
cmp
jg
sub
xor
jp
iret
cmp
(bad)
fnstcw
xchg
sub
repz
arpl
es
retf
fist
and
mov
int3
sbb
pop
hlt
sti
and
pop
add
(bad)
and
scas
mov
mov
pop
mov
dec
imul
jle
into
xor
lods
xchg
mov
or
cmp
cmp
pop
cmp
or
int
inc
sub
aam
call
jmp
daa
out
mov
shr
sub
pop
aaa
push
imul
lods
lock
repz
dec
inc
data16
cld
aaa
stos
movs
inc
cld
pushf
mov
cmp
dec
inc
sub
scas
ds
test
add
and
js
xchg
push
scas
push
repz
jmp
loope
pop
pushf
imul
adc
pop
sbb
pop
aaa
mov
out
push
call
jge
inc
leave
cmp
fwait
scas
xchg
repz
sbb
aas
and
out
jbe
pushf
and
dec
jecxz
lahf
xor
adc
out
or
adc
clc
(bad)
xchg
pusha
loope
in
jl
push
int3
jnp
mov
call
push
sbb
and
lahf
out
lahf
dec
xlat
jecxz
mov
ret
mov
mov
aaa
cmp
arpl
mov
pop
or
mov
lahf
dec
mov
std
push
outs
jmp
mov
movs
mov
jb
adc
lds
mov
push
jmp
xchg
aam
les
xchg
jo
es
jno
jbe
cld
idiv
sbb
xchg
dec
cli
sbb
mov
in
cmp
mov
hlt
popf
sub
movs
loop
rcr
jb
jbe
inc
cmp
push
stc
fcomi
jle
pop
(bad)
sub
lea
rcl
mov
jp
jmp
pop
cmc
jmp
xchg
cmp
jo
jecxz
pop
test
daa
mov
loope
lds
mov
inc
add
cli
xlat
pop
fcomp
aam
mov
ds
lea
sub
leave
cmp
imul
pop
push
shl
out
fst
mov
mov
cmp
push
xchg
push
ret
push
mov
je
in
or
inc
push
mov
push
xlat
hlt
jmp
in
mov
inc
clc
mov
popa
repz
inc
mov
cwde
add
das
in
pop
scas
test
jge
icebp
mov
mov
cld
in
out
sub
and
jle
loop
fisub
mov
inc
mov
add
loopne
fisubr
daa
dec
add
lods
sub
mov
loop
test
mov
std
xchg
repnz
ret
add
jns
sub
movs
dec
mov
out
imul
leave
or
push
jb
push
jg
cmps
inc
cli
mov
dec
sar
loope
mov
test
mov
or
xchg
pushf
mov
pop
xchg
xchg
jo
nop
push
sbb
test
inc
dec
shr
mov
arpl
sub
xor
cmps
(bad)
aas
pop
add
xor
pop
mov
hlt
sbb
adc
mov
push
ficomp
hlt
xor
mov
xor
jb
xchg
cmp
xor
push
cmp
dec
jecxz
retf
xor
mov
push
sub
sbb
int3
sahf
pop
mov
cdq
jl
mov
aad
std
push
inc
movs
fsub
leave
mov
stos
aaa
cmp
xchg
out
ret
das
mov
nop
pop
mov
cmp
aad
jle
stc
dec
sub
hlt
out
adc
mov
nop
ret
dec
loop
(bad)
loop
cmps
sbb
xchg
jecxz
pop
cmps
pop
cmc
cmc
mov
jg
aaa
sub
(bad)
adc
ds
xor
mov
sbb
out
mov
(bad)
pop
cwde
dec
ja
dec
dec
mov
movs
sahf
les
mov
push
jae
push
and
pop
adc
xchg
rcl
sbb
xchg
sub
xchg
loope
aad
push
sti
mov
scas
cld
add
sub
mov
ss
push
ss
pushf
inc
pop
repz
rcl
push
(bad)
std
jle
cmp
push
call
jmp
out
pushf
mov
movs
push
sbb
mov
(bad)
cld
mov
out
sub
(bad)
in
pop
lds
and
rcl
mov
push
fistp
inc
enter
pop
xlat
rcl
fbld
xor
outs
ret
inc
rcl
daa
popa
sbb
(bad)
fist
popa
movs
icebp
xchg
push
outs
jmp
pop
mul
in
rol
jg
mov
or
ds
xchg
xchg
(bad)
or
xchg
mov
adc
xor
iret
pushf
or
repz
xchg
push
pop
ret
sbb
jg
idiv
ja
movs
jae
add
xor
shl
outs
mov
dec
(bad)
fstp
imul
adc
or
pop
retf
sbb
es
jmp
xlat
dec
mov
arpl
xchg
push
fmulp
cld
mov
jne
xchg
pop
cmp
pop
jnp
pop
or
icebp
jne
pop
xchg
stc
mov
push
cli
test
mov
loope
bound
shr
inc
test
sbb
das
dec
stos
cld
sub
cmp
jg
jne
jmp
sub
icebp
popf
aas
jae
adc
pop
jae
dec
add
retf
jmp
adc
or
popf
cli
add
jb
and
sub
push
aas
adc
aas
loopne
cmps
int
loop
push
dec
xlat
shr
jecxz
mov
rcl
jle
and
pop
adc
jp
ja
je
jnp
xchg
mov
sub
out
adc
rcr
leave
sub
xlat
pop
rep
js
mov
mov
jno
loop
sbb
icebp
das
jge
sub
push
pop
mov
push
fistp
ret
inc
fadd
xor
ret
pop
cmp
xor
ds
and
adc
jmp
push
outs
or
dec
fild
int
lds
or
dec
out
ins
aad
shl
xchg
push
aaa
cmp
test
popa
gs
aam
mov
pop
jnp
push
test
popa
scas
jne
sbb
mov
(bad)
in
cmps
push
fiadd
cmp
and
jle
pop
ret
(bad)
int3
imul
ret
dec
je
cwde
aam
pop
lea
adc
loope
xchg
(bad)
and
and
mov
out
push
and
pop
and
push
aas
arpl
sbb
and
push
retf
push
mov
adc
add
sub
or
sbb
and
vmovq
outs
(bad)
int
push
mov
pop
adc
or
int
arpl
aad
mov
int
call
rcl
xor
icebp
fidivr
sub
dec
stos
pushf
loope
push
sub
mov
(bad)
jmp
arpl
dec
ss
adc
scas
jns
inc
pop
je
cmp
sbb
js
fist
inc
js
popa
fwait
add
loopne
cmps
shr
lds
shl
bound
sbb
adc
mov
idiv
add
movs
cmp
call
add
mov
dec
or
fwait
int
repnz
add
fiadd
cmc
push
test
xor
pop
sub
mov
mov
repnz
js
sub
dec
sub
cmp
sbb
ss
stos
and
jp
cdq
sub
pushf
mov
jb
lds
cdq
mov
mov
lahf
arpl
popf
inc
(bad)
pop
pop
call
dec
pop
or
add
or
test
lock
mov
(bad)
mov
jb
or
lock
adc
mov
clc
aaa
push
mov
mov
call
inc
icebp
shl
sbb
clc
outs
jg
jo
xchg
rcl
clc
mov
in
jp
shr
mov
fidiv
rcr
bound
and
imul
jae
inc
mov
mov
call
mov
into
clc
cli
(bad)
mov
jmp
pop
mov
mov
mov
xor
mov
pushf
imul
fstp
sub
jecxz
pop
push
cs
into
mov
jl
fistp
aas
pop
call
push
sbb
inc
in
jne
pop
ins
jge
pop
dec
fidivr
inc
std
xor
mul
xadd
adc
cs
ud1
mov
jns
cwde
es
sub
mov
out
fstp
push
push
pop
ret
push
dec
xor
ret
mov
lahf
cli
inc
call
or
dec
cmps
push
push
std
add
gs
out
add
dec
jno
or
aam
aad
or
add
pop
xchg
loop
icebp
sbb
mov
in
push
or
or
push
xlat
aaa
cmc
lods
sub
hlt
inc
pop
(bad)
jnp
cli
dec
inc
jp
adc
sub
fucom
into
add
add
aaa
xor
dec
push
xlat
or
and
loop
adc
sbb
jbe
rol
inc
add
mov
nop
rcl
int3
mov
sub
cmps
cld
pop
(bad)
adc
aam
test
xchg
(bad)
cmps
mov
xchg
and
xchg
mov
mov
jmp
iretw
stos
lock
cmp
lock
bound
jmp
or
ja
inc
or
jg
sub
lods
test
mov
repnz
inc
mov
xor
fiadd
into
dec
and
mov
xchg
test
jae
push
sub
mov
loope
sub
inc
pop
lea
xor
mov
mov
inc
or
sbb
mov
std
ret
out
test
cli
and
test
call
inc
jmp
std
jmp
lods
lods
lahf
push
ret
xchg
inc
movs
iret
xor
std
out
test
mov
pop
push
pop
sbb
mov
stos
dec
lods
fadd
mov
xlat
mov
sbb
test
lods
add
imul
or
fcomp
dec
outs
mov
cmc
dec
sahf
xchg
ret
aaa
mov
aad
inc
cmp
(bad)
aas
inc
xchg
mov
arpl
cs
scas
sub
cmps
scas
sti
fild
ja
jb
cld
push
xor
adc
stos
retf
push
mov
daa
cs
lds
out
clc
stos
int3
jg
and
mov
and
movs
lea
jmp
cs
push
inc
ret
idiv
nop
mov
imul
cld
or
mov
mov
stc
inc
jo
shl
push
pop
xchg
cdq
mov
leave
adc
or
imul
stos
sub
adc
xor
push
test
fcos
fist
xor
jmp
xor
neg
nop
add
sub
mov
mov
mov
lods
test
mov
push
add
jle
loopne
dec
out
dec
pop
xor
inc
sbb
jecxz
and
call
and
xor
sub
nop
ret
test
out
pusha
fs
jns
test
je
xchg
stos
test
psllw
movs
lods
mov
inc
(bad)
mov
adc
jmp
xor
xchg
adc
fsub
test
jne
aam
mov
inc
jnp
add
out
sbb
sbb
add
mov
jg
addr16
pop
pop
cmps
jg
xor
push
sbb
jae
inc
divps
arpl
(bad)
jecxz
clc
lea
mov
mov
or
imul
aaa
(bad)
out
mov
jns
popf
inc
mov
cmp
cmp
jmp
sbb
rol
and
add
cdq
adc
cmp
adc
cdq
and
mov
sbb
xchg
push
xchg
and
xchg
fstp
xor
jg
dec
repz
xchg
inc
cmp
ins
outs
xchg
dec
jle
popa
scas
xor
cdq
inc
push
rcl
xchg
neg
sbb
sbb
adc
pop
loope
mov
mov
adc
mov
dec
pushf
in
jp
mov
jp
out
nop
in
pop
xor
cmps
bound
and
sbb
adc
mov
sbb
and
pop
mov
pop
test
ret
stc
popf
xor
push
jg
das
xlat
les
pop
mov
sar
imul
hlt
leave
sbb
jo
inc
mov
loopne
add
das
test
mov
and
inc
dec
fwait
bound
aad
test
jge
inc
out
push
push
adc
mov
adc
ja
imul
inc
pushf
outs
out
jmp
push
es
int3
adc
sub
retf
cmp
push
ja
sbb
jge
xchg
sbb
(bad)
inc
push
sbb
int3
or
xor
pop
pop
inc
xor
sub
mov
push
dec
cmp
cwde
push
dec
or
stc
adc
call
mov
bound
out
xchg
pop
sub
cmp
push
out
dec
aas
mov
push
mov
cmp
xor
loop
add
xor
xchg
mov
je
sub
popa
iret
cmp
and
stc
lock
js
push
bound
out
jbe
cmp
outs
push
dec
ret
mov
xor
call
fldenv
dec
sub
pop
push
push
pop
js
push
mov
cwde
mov
int3
sbb
int3
sahf
bound
push
add
sub
cli
ret
or
leave
fld
sub
out
mov
mov
mov
into
and
pop
sbb
cmps
xchg
cmps
xchg
push
loop
lds
xchg
cmp
fsubrp
xor
int3
push
pushf
xor
push
or
ror
in
jae
gs
fs
add
bound
jbe
cli
es
add
cmp
cmp
pop
(bad)
push
jb
inc
das
jnp
cmp
mov
push
dec
adc
lods
dec
and
pusha
dec
stos
add
rcl
fcmovnu
mov
popf
(bad)
jecxz
mov
add
(bad)
jmp
and
pusha
jo
lds
jno
mov
scas
fcomp
scas
or
or
dec
(bad)
cmp
xchg
popf
cmc
dec
scas
je
xchg
push
jl
xor
(bad)
cmc
jle
jno
xor
mov
arpl
dec
leave
hlt
out
cmp
dec
push
adc
pop
dec
pop
xor
ret
jp
aad
pushf
push
mov
int
fild
(bad)
push
push
sub
push
pop
aaa
out
enter
xchg
fs
pop
or
mov
mov
arpl
xchg
fwait
push
xchg
jle
pop
or
sub
mov
icebp
addr16
stos
shl
into
push
dec
and
lds
ja
cmp
pop
and
push
add
or
out
jno
xor
jbe
or
out
jle
push
ins
cmp
mov
cmps
hlt
ret
inc
adc
mov
mov
and
inc
dec
cmps
add
(bad)
ins
push
dec
aad
sbb
call
mov
call
xor
int
jno
lods
repz
fst
ins
mov
jb
dec
std
aam
js
xor
push
arpl
mov
popf
lahf
int
pushf
or
pushf
hlt
sub
fidivr
xor
mov
add
mov
and
aam
in
pop
add
out
add
xchg
or
xor
ins
out
dec
cld
inc
mov
add
inc
sar
sub
es
ret
ud1
mov
mov
xchg
push
imul
mov
jecxz
aas
dec
mov
imul
lods
inc
push
test
fistp
or
lea
bound
sbb
xchg
stos
test
mov
jno
mov
sub
movs
push
sahf
mov
repz
add
mov
jp
mov
iret
xchg
ffreep
pop
jle
popa
(bad)
pop
push
mov
mov
jne
mov
lea
fild
mov
(bad)
lods
jns
sub
add
arpl
idiv
cmp
mov
je
sub
fcom
adc
and
jno
retf
mov
mov
iret
sbb
sysret
inc
sub
jle
les
mov
push
push
in
adc
popa
dec
stos
push
(bad)
stc
adc
push
xchg
in
cmp
push
dec
imul
fmul
push
in
cli
fist
shr
and
mov
sbb
int3
fstp
repnz
inc
add
and
sub
and
mov
and
test
pop
add
adc
jno
pop
xor
fisubr
leave
cmp
hlt
xor
pop
or
adc
xchg
dec
sbb
cs
xor
lods
push
mov
dec
stc
ss
aaa
push
repnz
add
icebp
cmp
sub
xchg
imul
retf
inc
cmps
ret
jbe
div
clc
inc
mov
aam
call
xchg
call
cmp
mov
int
cmp
xor
mov
or
hlt
push
test
jne
push
sbb
jp
pop
data16
repz
shr
mov
outs
jg
loope
xor
loop
mov
fwait
(bad)
adc
je
push
lds
inc
and
adc
pop
jp
cmp
xchg
leave
in
push
push
push
sti
and
sub
pop
aaa
ret
adc
ja
add
jo
int
mul
push
xlat
nop
(bad)
(bad)
pop
jp
out
stos
das
rol
mov
cmps
shl
cmp
mov
push
jne
popf
jle
mov
mov
retf
pop
dec
jo
dec
(bad)
mov
pop
sahf
pop
outs
inc
push
in
and
stc
jnp
ins
pop
jle
inc
in
cs
int
stos
lea
out
xchg
xchg
xchg
mov
pop
dec
pop
add
in
jne
mov
in
mov
ja
push
mov
daa
xor
or
adc
das
int3
cmp
add
sub
pop
xchg
rcl
add
mul
or
in
mov
jno
int
cmps
out
adc
ret
mov
xor
dec
je
xor
pop
jne
aaa
imul
repnz
add
gs
repnz
std
dec
adc
in
or
or
rol
out
or
(bad)
stc
cmp
jge
mov
out
jecxz
mov
xchg
dec
add
dec
ret
xchg
int3
or
aam
rcr
out
or
mov
dec
jmp
push
sub
jnp
aas
mov
push
sub
xor
cdq
arpl
sbb
mul
mov
jmp
aad
in
int3
call
mov
cmp
sbb
sbb
outs
iret
jl
or
add
or
dec
sahf
add
gs
pop
test
pop
repnz
mov
adc
mov
dec
push
int3
not
leave
pop
mov
fstp
pop
shl
or
adc
gs
xchg
jae
aaa
push
shl
jmp
js
fisttp
mov
push
hlt
mov
cmps
jl
out
inc
add
jp
std
(bad)
or
fs
mov
retf
sbb
mov
mov
adc
push
cmp
xchg
fsubr
jmp
adc
ins
scas
add
xchg
les
push
mov
or
js
push
xchg
pop
and
xor
outs
cmp
xlat
pop
scas
in
and
mov
jae
sbb
xchg
int3
cmps
adc
adc
mov
ret
or
xor
fcom
adc
xchg
push
sub
gs
and
adc
dec
mov
lock
pop
out
ret
fld
lods
arpl
jmp
dec
and
sbb
push
mov
cmp
mov
mov
jmp
xchg
bswap
or
jmp
cld
mov
and
sbb
in
jge
fwait
add
inc
in
cld
pushf
popa
mov
cmps
out
stc
mov
shl
test
pop
cmp
fld
xchg
cmps
outs
push
js
push
jb
dec
icebp
out
mov
mov
stc
rol
or
add
(bad)
jge
mov
int3
fidivr
mov
fnstcw
dec
sbb
std
inc
jge
or
outs
aam
push
aaa
or
addr16
mov
test
sub
mov
int3
int
fstp
pusha
push
cmp
cmp
pop
push
jne
movs
lods
mov
push
mov
sub
imul
or
mov
add
cmps
xchg
icebp
ss
pop
mov
loopne
fdiv
movs
movzx
jmp
stc
xor
pop
xchg
aaa
cvtps2pd
fwait
nop
adc
es
call
jp
or
inc
and
pop
daa
fwait
sub
dec
jp
daa
mov
or
hlt
mov
call
cdq
fstp
test
and
sbb
or
or
push
inc
loope
loope
fld
or
popf
out
imul
mov
fisub
sub
fs
inc
xchg
lock
hlt
fucomi
pop
mov
mov
push
jecxz
(bad)
fld
push
mov
add
out
mov
xchg
cmp
xor
leave
dec
xchg
icebp
jno
and
fcom
dec
lods
adc
(bad)
clc
idiv
rol
test
ja
pop
mov
js
rcr
stos
jge
pop
lods
fwait
and
int
data16
call
imul
sbb
call
loop
or
jmp
mov
fdivr
cmp
jge
test
push
jl
mov
mov
clc
push
daa
ror
cwde
dec
repz
hlt
sub
fmul
mov
fistp
fild
xor
sub
push
add
shl
ss
add
das
inc
cmp
push
mov
inc
test
jns
xchg
dec
sti
cmp
mov
push
xchg
sub
fcom
xor
bound
add
xchg
iret
mov
xor
mov
rcl
dec
clc
jno
fcomip
fwait
movs
popf
jl
or
jle
inc
adc
add
push
mov
jmp
in
iret
sub
repz
adc
fmul
sbb
inc
ja
ficomp
shr
cmp
pushf
rcr
sbb
pop
cmp
or
cmps
xchg
outs
jmp
fld
push
or
dec
int3
mov
mov
mov
jg
pop
pushf
inc
jg
cdq
jmp
pusha
inc
sbb
mov
nop
xchg
call
sub
xchg
cld
jae
test
clc
test
cmp
fmul
gs
xlat
mov
dec
mov
xor
fld
(bad)
ja
mov
pop
or
into
hlt
cs
aas
xchg
aad
cs
test
aaa
mov
sar
iret
push
adc
inc
int3
pop
add
test
xchg
cmp
xor
add
dec
rol
ret
cmc
mov
out
mov
or
in
inc
push
and
mov
idiv
icebp
stos
jno
stos
and
jo
sbb
mov
dec
sub
inc
push
sub
inc
in
dec
xlat
add
jp
(bad)
or
mov
and
push
aas
adc
out
mov
push
jecxz
neg
ins
sti
aad
cmp
mov
or
or
and
mov
jmp
retf
mov
xchg
cmps
scas
imul
xor
xchg
adc
dec
fimul
ja
xchg
pop
hlt
cmp
(bad)
inc
repz
out
lods
loop
(bad)
push
dec
cdq
push
nop
mov
data16
xchg
ja
cdq
dec
jb
adc
mov
retf
or
mov
sbb
mov
pop
loopne
ja
rcl
fld
bnd
cmp
clc
jnp
xchg
cmps
dec
cmp
test
mov
leave
scas
nop
fild
xor
add
xchg
pop
stc
fcmovnb
(bad)
adc
stos
fist
out
(bad)
into
lahf
and
push
in
call
je
sbb
adc
sub
in
clc
push
jno
pop
icebp
popa
adc
imul
dec
mov
bound
shl
jmp
mov
arpl
ja
cmps
xor
inc
scas
pop
add
iret
loopne
je
fimul
dec
ss
or
shl
push
jnp
dec
sub
mov
xor
test
in
adc
adc
shl
es
inc
cmp
xchg
or
cli
outs
ss
pop
inc
movs
ret
das
es
fwait
dec
les
push
in
adc
movs
arpl
ins
sbb
(bad)
test
xchg
pushf
(bad)
(bad)
mov
jnp
je
cmp
lea
push
sahf
imul
adc
ret
sub
les
into
sbb
jge
jg
inc
sbb
in
push
or
or
add
inc
test
dec
mov
jge
pop
fmul
ins
mov
imul
int3
and
or
sbb
sbb
cdq
and
jp
and
out
outs
jl
jno
js
xor
imul
fistp
mov
cmps
in
xor
pop
jbe
repnz
xor
sbb
pop
mov
call
ret
test
or
jp
int3
push
fwait
add
ret
cmps
adc
retf
mov
cmp
call
lock
mov
shl
mov
sahf
stos
jo
adc
xchg
into
(bad)
cmp
inc
retf
ret
popa
jle
sub
es
cmp
xor
in
test
adc
adc
mov
icebp
cdq
scas
sbb
pop
mov
fsubrp
(bad)
mov
test
fwait
pop
mov
mov
movs
stos
jge
int
cs
mov
dec
or
aaa
stc
and
fs
mov
dec
enter
ja
add
(bad)
rol
stc
mov
shr
fstp
and
out
dec
jecxz
fnstenv
cmp
sahf
xchg
and
sub
cli
jecxz
stos
sbb
imul
movs
cmc
rcl
cmp
cmp
gs
xchg
imul
pop
push
mov
xor
into
add
pop
into
retf
jnp
sbb
xchg
cmp
dec
xlat
int
out
push
test
popa
xor
je
in
daa
xchg
fidivr
mov
repnz
or
inc
push
sti
mov
or
pop
pushf
push
popa
push
sub
cmp
mov
or
cmp
fdivrp
out
movs
test
mov
aam
mov
or
xchg
pushf
and
push
sbb
ds
or
shl
and
ds
inc
(bad)
clc
fs
mov
xor
data16
mov
sub
clc
out
jns
lods
xor
pop
fsubrp
jo
and
rol
test
pop
xchg
push
mov
mov
sti
inc
sub
loop
xchg
jmp
movs
dec
mov
das
into
pop
lahf
sub
jge
mov
loope
shr
in
sbb
retf
sub
lods
mov
inc
scas
cmps
lahf
inc
xlat
lock
cmp
inc
popa
enter
sbb
push
arpl
pop
xchg
xchg
ror
mov
movs
sbb
loopne
cwde
(bad)
shl
mov
push
outs
xor
stos
pop
popa
cld
push
ins
out
add
mov
cmp
mov
jmp
cmp
dec
bnd
fmul
sub
out
aad
sahf
jbe
jmp
xchg
js
adc
fsubr
jns
in
pop
inc
or
and
in
icebp
sbb
icebp
in
inc
sub
adc
call
cmp
outs
(bad)
xchg
mov
gs
std
pop
lahf
std
sub
mov
ret
retf
inc
add
dec
inc
test
fild
(bad)
mov
inc
add
fisub
div
and
int3
(bad)
push
popf
(bad)
clc
(bad)
mov
(bad)
xchg
sbb
push
imul
inc
(bad)
fstp
xchg
adc
(bad)
pop
pop
xchg
push
adc
xlat
sbb
push
mov
test
loope
out
sbb
scas
push
xor
retf
in
xchg
xor
cmp
cmp
cwde
imul
sbb
sbb
mov
lea
icebp
xchg
movlps
jb
push
call
pop
xchg
aaa
mov
aad
inc
loopne
mov
popf
test
std
aas
jbe
inc
mov
(bad)
bound
push
pushf
mov
sub
fsubr
fwait
mov
scas
cmps
lds
mov
pop
jo
add
lods
pop
adc
or
and
icebp
cmp
pushf
imul
push
xchg
call
mov
(bad)
imul
jno
and
mov
mov
mov
push
pop
popf
retf
or
push
ror
jb
(bad)
loop
push
xchg
aaa
test
pop
scas
out
shl
neg
inc
mov
sahf
aaa
xchg
loope
jae
mov
sbb
test
cld
mov
into
ja
jle
test
ins
mov
test
mov
lods
push
fsub
sti
mov
lods
adc
and
mov
push
and
icebp
cmp
inc
rcr
mov
push
jle
icebp
cmp
pop
or
cs
add
cmp
inc
inc
popf
inc
or
repz
scas
out
push
ss
pop
test
repnz
dec
cwde
lock
(bad)
xor
xchg
cmp
cmp
das
cli
dec
outs
pop
popa
mov
popf
dec
mov
and
bound
dec
add
rol
jae
dec
xchg
aas
and
jp
xchg
push
add
mov
mov
aas
cdq
je
mov
push
push
push
loop
out
out
xor
neg
cmps
(bad)
cmp
xlat
jne
sub
mov
jmp
gs
iret
cmp
(bad)
pop
mov
jecxz
mov
sbb
xchg
and
and
packsswb
cmp
not
fdivr
or
push
inc
imul
mov
push
repz
mov
pushf
mov
out
(bad)
mov
push
jmp
mov
dec
enter
outs
or
vmovdqu
jmp
out
ins
mov
xor
and
sub
mov
inc
or
leave
push
fist
push
arpl
xchg
stos
repnz
xor
loope
loopne
push
pop
jns
popf
and
ins
cdq
sbb
shl
popa
jg
sbb
fisub
push
sub
movs
pop
xor
pop
out
int3
xchg
out
pop
mov
xor
or
jbe
int
xlat
dec
popf
fwait
mov
daa
jl
addr16
repz
aaa
pop
in
cmc
add
add
push
fsincos
xor
sbb
sub
lods
stos
mov
and
push
test
pop
mov
add
xor
push
out
dec
add
push
mov
xor
pop
cmp
add
add
xor
jg
popf
mov
mov
add
sbb
xor
and
(bad)
cwde
and
jb
or
sahf
xor
mov
adc
mov
or
mov
scas
sub
adc
in
mov
jne
sub
out
push
push
inc
ins
sbb
fcom
or
test
fwait
or
imul
rep
stos
adc
xor
rol
jmp
js
neg
fs
inc
and
sbb
aaa
mov
push
push
xchg
jne
popa
jb
add
push
pop
sub
jl
mov
cmp
std
test
mov
xlat
shl
inc
cld
loopne
sbb
fild
add
movs
out
fadd
and
fcom
iret
mov
frstor
outs
cmp
inc
sbb
and
jge
mov
lahf
(bad)
and
je
mov
xor
movs
test
mov
jmp
xor
stos
mov
push
in
jae
jae
call
icebp
call
sbb
dec
int
or
mov
stc
daa
aad
aad
test
inc
mov
ins
xor
in
mov
mov
loop
cwde
cmp
lock
xchg
fcomp
and
xlat
add
leave
ja
ss
clc
shr
mov
(bad)
repz
in
push
(bad)
pushf
pop
aas
mov
out
scas
xchg
mov
iret
ret
retf
pop
es
sbb
lods
out
dec
dec
movs
in
push
sub
xchg
mov
out
sbb
das
in
and
add
daa
out
mov
add
add
mov
mov
mov
inc
sub
mov
xchg
or
mov
imul
mov
mov
sti
xchg
lock
xor
adc
or
xor
add
xor
rcl
and
xchg
push
add
push
call
dec
fild
shl
rol
xchg
xchg
sub
mov
push
push
(bad)
je
shl
push
mov
(bad)
out
(bad)
daa
test
jnp
popa
cs
mov
inc
push
sub
mov
and
test
xor
popf
sub
sub
mov
xchg
xor
push
out
jecxz
add
mov
lods
mov
mov
in
in
lahf
xor
cli
(bad)
pop
fist
dec
pop
sub
xor
jmp
sbb
pop
gs
xor
dec
push
rcr
inc
or
(bad)
outs
sti
mul
jle
ds
ss
rcl
mov
sub
test
shl
test
(bad)
pop
lods
(bad)
lods
sti
sub
pop
mov
ja
pop
scas
mov
mov
call
add
pushf
and
inc
(bad)
mov
jbe
call
rol
sbb
js
adc
jmp
add
inc
pushf
adc
sub
lods
lea
sbb
inc
sbb
inc
rcr
pop
push
jmp
arpl
xor
dec
test
out
ja
push
adc
fisub
cmc
aas
jns
es
ins
outs
xchg
sahf
sbb
sbb
jmp
add
mov
shl
mov
push
(bad)
popf
jb
push
jo
cmps
or
int3
xor
add
stos
pop
mov
push
inc
aas
add
adc
data16
xlat
jp
aaa
mov
jmp
dec
sbb
dec
imul
or
jle
mov
jb
inc
mov
fimul
inc
jns
popf
mov
scas
sub
mov
scas
sub
(bad)
nop
cmp
loope
jmp
mov
pop
aam
xchg
push
jmp
mov
outs
test
or
out
sahf
(bad)
cmps
outs
fisub
dec
sub
(bad)
(bad)
pop
ja
pop
fsubr
or
stc
cmps
add
fldcw
jp
dec
loopne
xchg
sub
cmp
jle
inc
mov
mov
xchg
movs
and
jb
imul
xchg
and
dec
push
ds
mov
imul
cmp
push
mov
mov
loop
mov
fdiv
mov
pop
imul
jbe
jmp
dec
mov
ja
leave
outs
call
fimul
ds
jle
inc
ret
movs
es
push
in
push
std
sbb
sub
push
pop
dec
adc
lods
cmps
cdq
pop
mov
mov
cli
aam
xchg
xchg
xor
inc
rol
repz
outs
jl
movs
fs
pushf
enterw
adc
adc
in
or
jge
in
mov
dec
dec
push
fs
add
sub
shl
not
xchg
loop
mov
retf
(bad)
xor
hlt
imul
or
sub
adc
xor
mov
add
shr
sub
test
fisttp
cdq
push
fdiv
test
mov
sbb
mov
mov
in
cmps
add
lods
popa
add
or
cmp
mov
fistp
(bad)
jo
shl
add
jne
or
push
push
aad
mov
mov
push
mov
add
sti
lods
mov
xor
sub
repnz
mov
(bad)
rcr
and
mov
lds
pop
cmps
ror
imul
xor
pop
mov
in
mov
(bad)
mov
or
inc
jge
add
cmc
ss
leave
ret
leave
ret
out
push
push
jbe
mov
xor
xchg
cmp
idiv
mov
scas
pop
push
mov
inc
jns
popf
jne
inc
dec
pop
stos
push
(bad)
retf
hlt
xchg
loopne
mov
fmul
in
seta
lds
or
lods
cld
mov
and
xor
sbb
sbb
add
fisub
dec
sbb
push
add
popa
rcl
xor
sub
ins
inc
test
pop
sbb
sahf
jae
xchg
mov
mov
cli
hlt
adc
es
jg
jge
popf
pop
imul
pop
ja
push
stc
ret
imul
cmps
inc
lahf
shl
popf
dec
xchg
lock
mov
stc
adc
(bad)
in
pop
js
add
mov
dec
fs
ret
xchg
pusha
sub
pop
stos
lods
xor
pop
pop
test
mov
dec
lods
aaa
test
push
or
rcl
jecxz
int
ret
add
sar
hlt
push
xchg
loop
dec
(bad)
mov
inc
cmp
pop
js
ret
arpl
sqrtps
repnz
inc
fiadd
mov
fist
sub
sbb
arpl
cld
scas
shl
inc
push
fidiv
adc
xchg
jo
nop
jbe
loopne
iret
call
outs
xchg
mov
sub
cmps
in
pop
sub
pop
ins
loop
ficomp
xchg
into
loope
mov
(bad)
mov
sahf
fwait
(bad)
cli
ret
pushf
jp
pop
out
adc
push
adc
jae
in
sbb
iret
loopne
pop
xchg
inc
xlat
cmp
pop
jae
inc
cmps
sub
push
cmp
mov
or
and
cdq
jg
or
aam
daa
test
sahf
push
mov
cmp
xchg
int
mov
shl
lds
and
push
inc
call
lods
inc
jle
and
pop
call
adc
adc
adc
push
loope
ins
xlat
jne
cmps
push
and
mov
aas
jbe
in
sbb
xchg
cmps
into
ret
inc
je
dec
add
hlt
lods
push
mov
idiv
psadbw
call
or
add
rol
xchg
stos
and
push
mov
xchg
jg
sbb
icebp
shl
cld
push
jmp
pop
gs
and
xor
mov
xchg
jp
sahf
cld
cmp
mov
sti
jl
jmp
jns
and
mov
inc
cdq
out
xor
jnp
rol
pop
fdiv
fcom
pop
mov
cmp
push
in
cwde
and
fisub
jnp
addr16
jae
xor
mov
jmp
lods
xor
rol
mov
ds
sub
mov
imul
sbb
dec
das
inc
in
xlat
mov
add
lock
lods
pop
retf
xchg
neg
adc
fdivrp
adc
rol
sub
stos
add
pop
out
mov
xor
adc
mov
adc
hlt
inc
loopne
data16
ret
jmp
in
fsub
xor
dec
xchg
enter
adc
add
push
stos
mov
jl
fistp
mov
jmp
aam
test
ds
data16
int3
jno
repz
cmp
xlat
adc
int3
jge
mov
jnp
pop
push
jo
or
sbb
loope
inc
icebp
adc
sub
dec
in
ret
jae
sub
in
shl
repz
rcr
(bad)
(bad)
fnstsw
fcomp
cmc
call
(bad)
in
mov
mov
ret
inc
xchg
lods
ds
sub
ds
or
leave
rcl
xchg
loop
lods
xor
aam
sub
mov
sbb
mov
sahf
ins
outs
outs
or
pop
push
add
out
xor
jno
pop
inc
xor
xor
dec
aam
ins
and
sub
dec
xor
add
xchg
pop
mov
mov
aaa
pusha
push
mov
jmp
mov
pusha
sub
pop
mov
shr
push
jns
loop
inc
mov
jp
dec
adc
pop
test
sti
or
stos
mov
mov
jne
ud1
xor
cmp
(bad)
ds
out
dec
aam
fadd
rcr
fnstcw
mov
xchg
xchg
sub
aam
popf
movs
leave
pop
mov
push
call
ds
test
dec
or
jl
rcr
in
mov
xchg
int
add
adc
jmp
cmp
jl
gs
xlat
ror
cmps
push
imul
mov
retf
add
xor
lods
inc
add
mov
sub
data16
xchg
add
shl
dec
ficomp
mov
out
push
mov
js
mov
(bad)
xchg
add
xor
push
aam
lahf
adc
inc
out
mov
push
xor
jno
push
push
adc
jne
inc
dec
jge
jle
stos
mov
jg
out
pop
outs
int3
xchg
xchg
xor
test
sbb
pop
stc
scas
cs
xlat
sub
stos
jle
enter
imul
push
and
jl
add
dec
sbb
cs
mov
sbb
mov
rol
loope
jmp
push
or
adc
jp
loop
div
dec
sub
inc
in
xchg
sbb
mov
xchg
adc
sti
retf
in
mov
cld
(bad)
jns
in
loope
inc
loopne
push
and
repz
arpl
cmc
test
cld
cmp
aad
jmp
ja
jmp
pop
aaa
dec
push
mov
sbb
push
cmp
or
mov
mov
retf
stos
dec
sub
xlat
lahf
in
dec
inc
mov
and
mov
or
xor
jg
(bad)
(bad)
cmp
add
addr16
mov
movs
cdq
outs
xor
in
sti
xor
xchg
lahf
add
cli
daa
mov
jg
push
sub
mov
xlat
cmp
pop
call
fscale
(bad)
cmp
outs
sahf
les
mov
or
jae
pop
push
jge
and
or
fs
add
dec
sbb
jmp
fidivr
icebp
lds
adc
jmp
add
mul
neg
pushf
jbe
mov
xchg
rcl
and
ss
scas
sbb
into
call
sbb
lds
jno
cmp
xor
or
mov
jmp
adc
mov
add
dec
push
lock
add
xchg
mov
xchg
xchg
add
add
pmovmskb
clc
add
mov
leave
cmp
jecxz
add
sahf
xor
add
mov
mov
(bad)
jno
inc
mov
pop
in
push
jb
das
or
jmp
or
inc
push
mov
std
sub
or
out
pop
mov
sub
mov
and
mov
xchg
jae
out
xor
adc
xchg
inc
cmp
cmps
or
jnp
repnz
pop
scas
bound
inc
dec
sbb
mov
xchg
dec
mov
mov
ins
jmp
ins
pop
shr
(bad)
xchg
xor
das
and
lock
jns
pop
xchg
mov
retf
out
dec
jo
xor
movaps
jbe
add
inc
fstp
mov
out
ss
jge
dec
push
cmp
dec
in
gs
gs
lahf
push
xchg
or
test
and
(bad)
pop
mov
retf
add
push
sub
in
js
fst
retf
push
out
sub
mov
call
in
int3
add
pop
inc
lods
xor
adc
scas
jmp
mov
call
jae
nop
leave
out
lea
mov
mov
add
inc
std
mov
mov
pop
dec
mov
cmp
push
fisub
and
jae
mov
mov
ds
pop
adc
adc
push
aaa
xchg
xor
call
loopne
pop
sub
sbb
inc
outs
scas
int
push
push
ss
mov
test
add
popf
xor
rcl
pop
outs
pop
mov
and
adc
pop
xchg
mov
punpckhbw
mov
cmps
jmp
jae
scas
outs
(bad)
movlps
cmc
jge
dec
or
push
into
push
stos
inc
jns
std
stos
sub
iret
cmp
in
test
cmp
jae
fs
sub
test
ror
(bad)
inc
dec
sti
mov
pop
mov
shl
arpl
jo
(bad)
inc
adc
nop
push
addr16
add
sub
or
retf
add
xchg
adc
lods
repnz
adc
inc
mov
adc
sub
loopne
(bad)
sbb
push
test
push
(bad)
clc
cmc
popf
out
adc
div
sbb
bound
mov
jp
dec
imul
mov
inc
nop
or
outs
scas
stos
popf
cwde
mov
mov
inc
mov
xor
sub
(bad)
arpl
dec
retf
jae
fstp
(bad)
mov
int
adc
jl
(bad)
(bad)
xor
das
call
push
xor
mov
pop
dec
jle
mov
sub
cmp
pop
sbb
jnp
das
fidivr
sbb
pop
test
sub
add
mov
rcr
mov
sahf
repnz
loop
outs
call
ds
xor
adc
mov
or
adc
(bad)
pop
jno
rcr
in
pop
inc
sub
out
push
push
ja
mov
fnstenv
iret
jp
das
stc
loopne
(bad)
sbb
test
pusha
mov
jl
or
inc
iret
mov
or
sbb
popf
ss
mov
mov
rol
sti
dec
pop
adc
loop
rcl
mov
inc
ins
cli
mov
mov
loopne
jg
xchg
sub
pop
xchg
out
xchg
cmps
loop
ror
mov
mov
cmp
sbb
push
or
adc
ret
out
inc
mov
pop
adc
pop
push
rcl
lahf
call
daa
mov
mov
xor
test
xor
jne
jge
xor
add
and
jne
mov
dec
scas
cmp
sbb
ror
add
shr
stos
rcr
push
mov
jp
imul
stos
repnz
xor
ror
cmp
push
cld
push
sbb
jl
jge
pushf
shl
in
repnz
inc
pop
lods
add
mov
imul
inc
jno
hlt
mov
adc
movs
cs
icebp
cwde
aas
lahf
lods
inc
mov
jle
sub
sub
stos
mov
(bad)
(bad)
mov
mov
push
pop
lds
mov
mov
push
mov
adc
sub
lea
outs
loop
dec
adc
xor
dec
mov
mov
ins
mov
dec
lods
shl
push
add
cld
add
pop
lock
mov
in
xlat
and
stos
xchg
xor
call
scas
scas
push
pushf
repz
and
xchg
or
sti
imul
bnd
pop
ins
in
jl
mov
adc
sbb
jge
dec
pop
add
repz
dec
xor
dec
hlt
bound
xchg
add
push
and
push
fs
xor
pop
(bad)
push
inc
or
sbb
push
jg
in
ja
sub
mov
fucomip
sub
call
add
xor
sbb
adc
test
push
push
ret
xchg
imul
pop
and
mov
iret
(bad)
dec
in
std
inc
mov
shr
or
inc
sub
daa
or
jmp
fs
aam
lods
addr16
xor
les
sahf
das
test
into
jno
retf
rcl
outs
cmp
inc
sub
push
lods
dec
in
inc
mov
inc
inc
push
call
lds
test
aam
push
sub
shr
cli
daa
dec
pusha
mov
pop
ror
cmp
arpl
mov
pop
js
jl
cmp
add
dec
shr
cmps
aam
loopne
sar
sbb
pop
scas
jmp
jmp
stc
pop
mov
inc
push
cs
dec
pop
arpl
je
out
mov
push
jne
les
push
mov
jb
mov
sti
jmp
xor
mov
xchg
ins
push
imul
sahf
sbb
pop
push
add
cmp
and
not
retf
pop
adc
out
into
mov
xchg
mov
mov
clc
into
pop
cmp
mov
pushf
test
mov
jge
xor
hlt
in
jae
call
jecxz
lods
cmps
in
mov
outs
push
lds
sub
push
gs
dec
daa
popa
mov
adc
cdq
ret
dec
test
mov
das
pushf
clc
push
push
pop
ss
sahf
xchg
(bad)
jmp
mov
fild
inc
inc
mov
push
out
loope
mov
ret
inc
sbb
shl
push
mov
xchg
in
test
mov
mov
dec
in
shl
mov
test
jae
movs
push
dec
mov
or
mov
or
add
mov
xor
mov
adc
ds
mov
cmps
in
stos
push
repnz
inc
pop
push
loope
les
jns
loop
or
xchg
sar
push
bound
pop
pop
xchg
dec
add
jge
push
jg
cmp
repz
nop
outs
sbb
aas
pop
in
cdq
rcr
push
and
and
xor
loop
out
dec
mov
cs
mov
call
push
sbb
mov
icebp
in
push
inc
inc
rcr
syscall
cli
sar
fdiv
cmp
cmp
mov
repnz
pop
xchg
dec
push
lods
ja
mov
fadd
imul
cmp
push
popf
xlat
(bad)
movs
mov
and
cs
push
imul
adc
push
out
xchg
mov
(bad)
dec
ret
pop
loopne
adc
pushf
xchg
jns
xchg
push
adc
push
cmp
push
or
cs
ficom
mov
mov
(bad)
(bad)
push
mov
xchg
push
loop
jno
cli
mov
add
lds
ret
mov
mov
sub
lahf
loop
mov
arpl
cmp
ret
xchg
or
mov
out
mov
mov
add
adc
mov
inc
push
mov
adc
popf
inc
and
add
xchg
stos
sbb
mov
push
rcr
test
leave
(bad)
ficomp
sbb
and
in
sbb
sub
stos
test
test
sbb
mov
in
mov
dec
cmps
lods
mov
(bad)
std
jmp
inc
xchg
and
test
sub
(bad)
fs
loop
dec
call
lods
push
and
call
dec
lods
pushf
js
xchg
call
and
data16
hlt
repnz
je
mov
les
test
(bad)
fistp
jne
push
lock
stos
iret
xchg
in
test
(bad)
icebp
push
test
sbb
(bad)
int
mov
push
jmp
data16
add
jns
aas
lock
fstp
inc
(bad)
jne
jmp
jne
sub
mov
xchg
lock
inc
push
popf
jmp
js
jecxz
es
lods
je
push
lock
mov
sub
into
sub
xchg
and
and
mov
rcr
test
push
sahf
sub
data16
cmp
xlat
pop
stos
dec
pop
retf
shl
or
xor
push
aad
dec
push
and
sub
inc
or
pusha
mov
sub
cmp
fcom
cs
xor
jns
or
lods
clc
outs
enter
mov
int
lds
cld
dec
ror
push
shl
in
adc
test
xchg
and
ds
das
pop
jnp
push
repz
clc
cmps
jnp
fcom
sbb
cld
push
mov
pop
adc
sbb
xchg
iret
daa
std
or
arpl
fldcw
scas
sti
mov
loopne
and
mov
inc
std
pop
cmps
lahf
aam
and
and
sub
pop
xor
int
sahf
sahf
sbb
add
mov
jge
jbe
das
aaa
stos
repz
stc
cmp
push
and
push
loopne
add
and
dec
inc
mov
push
mov
test
jl
(bad)
fmul
mov
gs
cmps
xchg
jne
sub
and
pusha
sbb
in
add
mov
or
pop
mov
call
ror
inc
scas
cmp
movs
xchg
movs
scas
adc
sahf
add
lea
(bad)
rol
dec
ja
jns
jp
div
sbb
pop
push
call
lahf
add
xor
pop
cmp
push
lahf
ret
fadd
sub
jo
fst
lods
shr
adc
xchg
int3
das
movs
mov
add
clc
add
iret
xlat
xor
jae
sar
test
cmps
pop
icebp
mov
shl
gs
mov
pop
(bad)
(bad)
xor
push
fwait
inc
sub
cmp
dec
add
iret
shr
leave
adc
or
js
pop
jmp
bound
out
in
lds
and
scas
mov
sbb
cmp
fwait
lods
mov
mov
fsubr
add
mov
add
(bad)
leave
add
in
push
jne
xor
call
add
push
dec
inc
pop
fnstcw
rcr
stc
and
mov
pop
add
cld
xchg
sub
call
rol
mov
(bad)
push
imul
inc
gs
cmp
out
sahf
pop
clc
dec
xchg
sub
cmp
test
call
or
idiv
inc
push
mov
or
ss
in
mov
out
or
or
sti
jg
mov
(bad)
(bad)
jg
inc
popf
adc
push
shl
push
add
cmp
cli
int
data16
push
or
or
xor
dec
add
fisttp
das
jno
lea
jo
jl
dec
pop
psraw
mov
lahf
sbb
pop
push
pop
lods
call
ror
sub
or
fisttp
pop
cld
pop
out
icebp
rcl
jb
xor
ds
xor
and
mov
aam
mov
stos
jmp
cli
or
inc
xchg
jbe
dec
jns
xor
retf
jne
pusha
dec
cmps
push
jmp
(bad)
fsubr
retf
jge
mov
(bad)
loopne
jo
cmp
xchg
ds
or
aad
test
inc
clc
xor
mov
inc
movs
adc
push
test
enter
mov
and
sbb
cmp
mov
ret
jno
aas
xlat
or
jg
mov
icebp
push
iret
mov
ja
ficom
pop
int3
(bad)
shr
sub
inc
loop
dec
imul
push
icebp
dec
test
(bad)
shl
inc
jno
movs
lea
inc
cmp
sbb
retf
adc
aaa
in
inc
xlat
fstp
jmp
push
xchg
xor
popf
add
mov
pop
outs
neg
and
add
inc
cmp
xor
push
js
test
push
sahf
jnp
pop
sub
leave
xor
cmp
mov
daa
mov
mov
add
dec
test
jmp
jle
int
and
cmp
jmp
pop
mov
push
(bad)
pop
pop
mov
push
or
in
inc
enter
and
in
call
test
sar
and
mov
imul
dec
shr
fwait
shl
daa
jge
pop
icebp
jae
clc
push
sbb
mov
mov
or
xchg
fidivr
loopne
push
push
lock
stos
fs
out
inc
cmp
inc
cmp
mov
loop
neg
fsub
mov
xchg
mov
sbb
sbb
jmp
sar
bound
and
imul
push
and
dec
push
or
mov
(bad)
cmps
dec
pop
aaa
jne
mov
sbb
retf
sub
inc
mov
mov
stc
or
mov
stos
(bad)
mov
sbb
xchg
jl
sbb
mov
sub
cmp
in
les
sub
sub
shl
jne
push
mov
sbb
fst
lock
xchg
call
movs
sbb
icebp
loopne
cdq
pop
cwde
fstp
addr16
jmp
mov
xor
xchg
(bad)
cmp
movs
mov
jmp
mov
xor
fcmovu
dec
clc
and
stos
call
add
jb
mov
xor
repnz
add
xchg
stos
dec
add
ja
ret
mov
into
sub
jb
and
pop
mov
push
add
pop
sbb
int3
repnz
imul
add
cmp
imul
aas
stc
ror
xor
daa
fwait
lods
leave
push
aad
outs
dec
or
and
test
mov
popf
leave
fwait
mov
in
sti
mov
push
stc
sub
sub
jo
xchg
pop
fbstp
fstp
xchg
lods
xor
(bad)
int
ds
pop
mov
rcr
shl
test
add
(bad)
icebp
dec
adc
jmp
lds
(bad)
retf
dec
cmps
les
or
jmp
fsub
in
xchg
stc
mov
leave
(bad)
outs
in
test
rcr
(bad)
(bad)
lds
lahf
popf
add
movs
imul
retf
mov
or
mov
(bad)
out
ss
jmp
sar
sub
fwait
push
pop
xchg
adc
retf
mov
mov
sub
ja
xlat
pop
dec
int3
sbb
(bad)
push
sti
repnz
scas
in
(bad)
fstp
aad
sbb
mov
inc
xchg
lahf
cvtdq2ps
cmc
jecxz
scas
dec
pusha
mov
test
mov
inc
dec
dec
mov
fwait
ret
cmp
out
ins
nop
aas
push
ror
pushf
call
sahf
mov
push
repnz
lock
dec
dec
and
leave
scas
mov
cmps
leave
fs
pop
icebp
icebp
in
daa
xor
pop
lods
jp
pusha
xchg
(bad)
fxch
icebp
stc
daa
jmp
jbe
popf
sar
fisttp
paddusw
leave
scas
or
push
sahf
ins
stos
scas
xlat
imul
lods
retf
mov
jp
mov
mov
cs
dec
or
jnp
addr16
test
xlat
ja
sub
xchg
ret
mov
pop
mov
push
lock
jmp
adc
lods
mov
loop
push
or
sbb
mov
inc
es
mov
outs
jle
mov
or
call
popa
push
pop
cld
shl
adc
dec
(bad)
cmc
movs
mov
retf
push
lea
xor
repz
push
mov
push
lods
sbb
push
jae
enter
jl
jmp
dec
mov
sti
popa
clc
pop
add
lods
aaa
jbe
xlat
imul
sub
add
nop
(bad)
out
mov
test
int3
into
mov
push
outs
je
inc
mov
aam
mov
jae
mov
push
mov
pop
adc
jno
adc
jbe
or
or
pusha
or
ret
adc
les
xor
or
sti
dec
retf
rcl
sahf
xor
dec
pop
imul
pop
(bad)
out
and
aad
xor
mov
xor
(bad)
mov
or
push
js
or
daa
adc
(bad)
out
jae
jb
sbb
add
push
sar
jmp
leave
jg
lsl
cwde
scas
movs
(bad)
out
xor
mov
stos
push
xchg
and
retf
jno
pop
add
scas
add
or
jp
mov
movs
clc
aad
sbb
cmps
fsub
xor
es
mov
mov
cdq
mov
xlat
xchg
dec
sbb
inc
mov
je
mov
push
test
cmp
xor
xlat
pop
push
cmp
imul
push
push
aas
pop
ins
inc
add
(bad)
lock
mov
sbb
xor
push
mov
push
inc
out
ss
jmp
xor
or
(bad)
cmp
pop
ins
dec
push
aam
or
or
adc
add
ds
mov
xor
sbb
jns
cmps
add
adc
jge
movs
xor
lods
repz
cmps
and
popf
cmp
or
push
push
fidiv
xchg
hlt
out
(bad)
add
daa
ins
clc
mov
movs
comiss
mov
mov
cmc
adc
js
jg
retf
xor
pop
push
mov
xchg
pop
pop
dec
lock
sub
enter
sbb
cmc
inc
push
call
lahf
push
pop
outs
mov
adc
pusha
cdq
pop
pop
stos
stos
bound
or
out
inc
inc
leave
inc
sbb
lods
xor
cmp
sbb
sub
inc
cld
lods
add
add
ja
push
pop
sub
rcr
mov
div
cmp
retf
jns
mov
jns
xor
and
sti
mov
jbe
mov
not
push
add
sar
js
jp
and
mov
inc
imul
ror
cmp
cmp
dec
pusha
mov
aas
or
aaa
test
fwait
icebp
jne
cmp
inc
int3
ins
fisubr
or
(bad)
inc
inc
push
sbb
pop
sub
mov
xlat
(bad)
xor
mov
sahf
cld
pop
js
dec
pushf
xchg
test
lods
leave
sbb
aam
xor
in
add
or
xchg
pop
(bad)
push
jg
sbb
repz
movs
bound
pusha
inc
shr
xchg
test
int
jnp
sub
add
jns
mov
or
ret
out
idiv
int3
fbstp
int3
ret
cmp
mov
les
loop
mov
nop
sub
adc
out
dec
ret
pop
cld
scas
movs
enter
lahf
xchg
adc
mov
xor
hlt
mov
add
xor
mov
fst
nop
mov
das
push
xchg
pusha
das
in
mov
mov
cdq
loope
adc
jno
sbb
jmp
cmp
add
adc
push
or
xor
push
ret
pop
jo
mov
fsubr
inc
int
lds
outs
dec
std
(bad)
cmp
in
test
ret
xchg
adc
iret
push
call
dec
imul
dec
(bad)
jmp
push
std
sub
pop
pop
mov
xchg
cmps
push
stos
mov
fmulp
stos
and
dec
and
das
fsub
or
retf
shl
pop
lock
mov
mov
jg
ins
xor
sti
lahf
int
cmp
push
and
std
inc
pop
aam
dec
aaa
std
add
sub
adc
enter
sub
aam
push
sub
in
push
mov
es
sub
add
outs
jo
in
daa
add
(bad)
ret
fistp
ret
mov
push
fld
pop
inc
lds
adc
dec
mov
dec
ret
sub
or
jne
mov
aas
xchg
adc
and
adc
add
fwait
test
into
fld
and
inc
pop
into
mov
push
mov
sub
(bad)
xchg
shl
xchg
mov
jne
outs
jns
mov
lods
xor
mov
nop
push
clc
shl
jp
in
jp
push
adc
sbb
xchg
or
aad
scas
ss
stos
mov
ss
rcl
arpl
nop
aaa
push
pop
mov
push
sub
xchg
jo
shl
mov
pop
mov
dec
adc
test
cmp
sbb
lea
jo
mov
lahf
outs
jno
sbb
lea
inc
mov
sub
icebp
cdq
(bad)
jle
push
mov
push
add
(bad)
fst
push
into
dec
(bad)
lahf
xchg
sub
(bad)
enter
fidiv
loopne
lds
push
sub
sub
inc
stos
add
mov
xchg
(bad)
mov
jbe
jb
or
movs
cmps
pushf
jo
cmc
jl
pop
(bad)
mov
xchg
dec
nop
loope
iret
lock
cs
sub
push
add
outs
test
sub
cmps
imul
ja
push
adc
push
push
add
repnz
inc
fnsave
je
cmp
in
inc
pop
jmp
inc
push
or
test
sbb
jne
outs
jbe
ins
ja
enter
add
sti
sub
xchg
adc
pop
ja
popa
mov
jl
loop
adc
sub
mov
mov
inc
aaa
adc
pushf
adc
das
pop
repz
push
jno
add
jbe
mov
mov
xchg
daa
push
or
sub
xchg
iret
inc
leave
jmp
cdq
and
out
mov
jne
push
mov
movs
sti
jns
dec
adc
iret
push
les
xchg
or
add
lods
push
data16
outs
popf
push
(bad)
fst
adc
inc
into
ins
lock
stc
shr
ja
test
mul
sbb
retf
lods
sbb
ret
sub
adc
or
add
out
jnp
lods
mov
sbb
sbb
adc
add
sub
xchg
mov
dec
xor
scas
mov
stc
cmp
push
adc
jecxz
sbb
pop
popa
addr16
(bad)
test
fisubr
push
push
or
outs
fs
dec
xchg
(bad)
retf
outs
adc
adc
imul
mov
fstp
jb
out
ins
test
retf
cmp
hlt
inc
adc
xchg
scas
ror
pop
iret
xchg
pop
push
fnstcw
sub
inc
nop
and
xchg
inc
outs
inc
loopne
sbb
lock
cld
xor
shr
(bad)
imul
xchg
mov
(bad)
mov
adc
(bad)
test
enter
ror
push
jns
in
xor
faddp
pushf
cmp
xchg
xchg
sbb
fstp
mov
sti
jae
sub
mov
stos
iret
adc
mov
pushf
xor
popf
std
outs
ins
(bad)
mov
cmps
iret
push
repnz
(bad)
mov
xchg
sahf
fcom
mov
test
pop
mov
cmc
xchg
fstp
outs
push
fsub
cmp
jle
adc
cld
call
jae
push
sub
or
ficomp
dec
inc
rol
pop
cdq
sub
xchg
jp
das
xchg
sbb
ins
into
add
repz
sbb
and
mov
cld
dec
pop
sbb
lods
in
jle
cli
dec
(bad)
cli
adc
adc
loope
(bad)
xchg
shr
jmp
in
lods
not
mov
fld
iret
fnstcw
test
cmc
or
inc
sti
mov
cwde
cmc
lods
scas
adc
sar
bound
xchg
and
and
adc
jecxz
add
mov
jp
mov
mov
lock
sbb
mov
sbb
dec
leave
retf
call
mov
sbb
cmp
aaa
or
push
mov
int3
in
jb
push
fistp
aad
inc
mov
enter
mov
ret
aam
in
xchg
jecxz
and
jle
sub
add
int
inc
or
mov
hlt
pop
xchg
mov
(bad)
test
jg
outs
fisubr
rol
mov
nop
loope
dec
sub
cmp
test
mov
(bad)
test
loopne
fbstp
gs
pop
pop
clc
mov
dec
adc
lea
inc
rcl
ja
gs
inc
mov
push
cs
lods
popa
pop
mov
push
(bad)
adc
or
jo
ins
sub
ret
sub
inc
cli
mov
sbb
adc
mov
and
push
aad
mov
xchg
pop
jmp
dec
jbe
xlat
dec
in
mov
loop
cmp
stc
fs
inc
cdq
in
jmp
outs
add
mov
ins
fstp
pop
xor
dec
lock
jmp
cmps
or
sti
pop
and
cwde
sbb
inc
push
imul
fcmovnbe
je
clc
pop
test
(bad)
and
int
cmp
or
popa
and
fsub
jge
ins
mov
arpl
and
(bad)
dec
pushf
pusha
lea
xchg
or
(bad)
aam
mov
scas
ret
sbb
retf
sub
imul
and
and
test
ficomp
fcomip
into
test
xor
(bad)
cld
jnp
fnsetpm(287
xlat
mov
out
loope
imul
cmp
mov
mov
popa
push
(bad)
adc
dec
xchg
push
dec
xchg
cld
stos
mov
jl
adc
add
popa
dec
call
pop
mov
inc
pop
cmp
cmc
push
add
push
pop
inc
cwde
sbb
bound
mov
ds
aam
lods
lock
add
mov
push
and
jb
push
dec
movs
inc
aam
scas
inc
push
fidivr
push
push
repnz
(bad)
fnstcw
or
aas
arpl
pop
int
jg
pop
adc
adc
xchg
or
(bad)
mov
outs
push
loopne
xchg
mov
ds
adc
mov
out
test
call
popa
movs
jge
jge
mov
fdiv
dec
mov
repnz
sar
and
outs
fwait
mov
loope
mov
jmp
scas
cmp
(bad)
psrad
out
int
imul
test
push
cmps
xchg
popf
mov
(bad)
aad
outs
xchg
cmp
fst
jb
in
test
or
scas
dec
sbb
sahf
inc
jmp
adc
xlat
push
xor
(bad)
fild
cmp
sub
mov
cli
(bad)
lahf
ret
fnstcw
jmp
xchg
pusha
(bad)
mov
xchg
in
cwde
test
dec
lds
bound
dec
retf
sbb
add
mov
dec
fstsw
jle
jbe
xchg
xor
inc
add
xchg
mov
inc
or
mov
or
clc
fwait
scas
ret
movs
int
or
ret
inc
(bad)
jo
leave
fistp
out
sub
ror
in
stos
pop
mov
in
hlt
or
mov
(bad)
jnp
and
clc
sub
mov
fist
xor
sbb
lahf
mov
xchg
sub
test
jecxz
xchg
adc
test
ds
int3
cmps
jp
pusha
and
test
adc
and
das
daa
outs
icebp
mov
or
sub
jmp
or
aad
mov
in
icebp
mov
or
xor
dec
xchg
sbb
pop
or
mul
mov
movs
lods
test
mov
retf
xchg
fmul
xor
or
xchg
pop
or
dec
and
in
mov
and
mov
adc
mov
ins
adc
cmps
inc
cld
shr
xchg
push
mov
pop
jno
aam
enter
lods
(bad)
icebp
shl
pop
jne
ficom
pop
inc
mov
repz
idiv
or
movs
pop
jge
mov
adc
cli
mov
int3
in
mov
in
and
sub
pop
jg
test
and
sub
ins
or
daa
test
dec
cmp
call
or
dec
pop
daa
xor
pop
sbb
shl
or
push
dec
sar
add
icebp
fdiv
in
int3
or
pop
arpl
sahf
test
jns
xor
movs
cvtdq2ps
adc
jl
cs
jae
shl
jb
fcmovnb
pop
retf
ror
mov
mov
add
dec
add
jle
sbb
ret
dec
jp
sub
fwait
es
or
sbb
mov
(bad)
mov
shr
pop
xchg
jmp
xor
mov
loope
xor
aam
adc
add
fwait
fs
movs
mov
jge
(bad)
std
aas
cld
stos
add
out
outs
inc
cmps
jo
xor
imul
fistp
(bad)
cwde
jne
mov
scas
lock
jge
jbe
sbb
add
or
and
hlt
loopne
jp
inc
(bad)
xor
and
mov
cwde
xchg
ja
pop
cmp
adc
fs
cdq
sbb
enter
jmp
fadd
or
sbb
push
cmps
mov
(bad)
cmp
ins
xchg
dec
pop
jecxz
mov
mov
dec
in
xchg
in
retf
das
jmp
addr16
xlat
xor
mov
loopne
(bad)
test
aas
mov
jmp
(bad)
sti
mov
add
call
inc
(bad)
out
in
dec
jno
lods
sar
inc
and
pusha
sub
outs
(bad)
cwde
stos
jmp
and
test
bound
(bad)
fstp
xor
fnsave
push
retf
mov
clc
push
int
cmps
pop
jno
add
rcl
leave
test
or
cmp
sbb
xchg
xchg
sti
pop
imul
ins
ret
adc
in
mov
addr16
push
pop
cwde
sbb
xchg
addr16
outs
or
mov
fisub
pop
test
lds
test
jmp
mul
sbb
dec
loopne
adc
outs
mov
xor
mov
shl
mov
inc
test
sbb
xlat
or
stos
leave
scas
and
jo
sub
into
sub
(bad)
fwait
push
cli
mov
inc
mov
cs
movs
inc
cwde
call
in
repz
sar
jge
add
(bad)
push
mov
dec
jmp
jmp
sub
nop
xor
sbb
hlt
xchg
mov
leave
(bad)
cmp
and
adc
push
adc
or
mov
ficom
inc
ins
int
mov
rdpmc
cs
mov
xchg
mov
push
mov
jne
retf
push
out
inc
add
out
or
jmp
fs
cwde
push
inc
in
push
xor
(bad)
jns
xor
sbb
jns
xor
fwait
xor
cmps
or
movs
retf
repz
pop
imul
iret
outs
rcl
and
cmp
mov
mov
push
mov
pop
push
and
lock
sbb
out
dec
mov
push
cmp
and
jbe
les
mov
or
xchg
inc
bound
daa
call
sbb
sub
pop
mov
sbb
jmp
sbb
mov
push
bound
mov
popa
repnz
in
jmp
pop
adc
shl
mov
cli
aaa
jmp
fcom
sti
clc
pop
push
out
xor
pop
pop
mov
outs
mov
mov
xor
inc
lahf
in
or
scas
ror
dec
ror
push
cmc
xchg
sub
xor
mov
retf
inc
out
cdq
jp
loopne
mov
mov
add
in
into
jo
and
push
shr
jo
mov
or
and
cmps
gs
mov
and
jecxz
div
mov
mov
out
fsub
out
mov
int3
jbe
fild
xor
into
lea
in
clc
and
adc
sti
dec
sbb
pop
aas
jge
das
sbb
inc
xchg
sbb
add
scas
mov
mov
nop
hlt
adc
clc
leave
mov
fstp
pop
call
xchg
cdq
mov
stos
into
jb
inc
lock
pop
arpl
dec
sub
jp
(bad)
fcmovnbe
pop
in
in
out
sahf
in
or
cmp
or
xor
pusha
fnstsw
repz
fdiv
leave
jl
or
arpl
stos
addr16
xchg
stos
popa
xor
sbb
hlt
push
dec
adc
je
lock
and
iret
out
xor
stos
pop
test
inc
jg
out
push
sahf
inc
pop
into
aas
int3
vpextrw
mov
lds
xchg
test
and
test
outs
add
sbb
cmps
dec
sub
push
les
arpl
in
arpl
or
dec
fsubr
dec
repnz
or
cmc
add
jno
xor
lds
dec
loopne
mov
(bad)
fcmovb
add
cmps
sub
sti
pop
mov
add
fcmovbe
(bad)
lds
out
imul
mov
dec
pusha
push
dec
sub
shl
fcompp
push
inc
cmc
inc
and
(bad)
in
out
out
(bad)
xchg
mov
inc
xchg
iret
test
loope
and
repnz
adc
ins
fnstcw
mov
dec
rol
call
xor
or
cmp
sbb
dec
push
(bad)
jmp
dec
nop
cmp
add
cmp
sar
test
and
repnz
pop
test
mov
and
arpl
xor
(bad)
ror
out
sbb
pop
fsub
js
outs
loope
mov
into
xlat
mov
push
retf
adc
not
or
icebp
aam
jne
push
add
push
movs
lods
jmp
dec
in
jo
pop
aad
ficomp
(bad)
int3
loope
push
add
sbb
std
sub
push
jnp
xor
fdiv
in
(bad)
cwde
or
(bad)
lock
sbb
ret
mov
jns
and
mov
jae
or
mov
repnz
xchg
test
je
cmp
cmp
sti
jns
fsubr
std
(bad)
(bad)
fbld
test
push
clc
inc
lock
mov
inc
jnp
mov
dec
sbb
frstor
push
dec
mov
jge
nop
jg
ffree
(bad)
pushf
fnstenv
push
ret
sub
in
jns
pop
pop
cmps
(bad)
jb
lds
imul
xor
adc
cld
jo
and
jae
inc
ret
outs
cdq
daa
enter
cld
je
imul
push
push
(bad)
xchg
mov
test
in
xchg
push
bound
pusha
add
daa
and
jb
int
stos
sbb
jmp
sub
mov
xchg
pop
inc
jp
jb
hlt
sbb
cmp
jge
xor
gs
(bad)
jge
pop
out
xor
pop
out
or
neg
mov
sbb
jmp
xor
mov
xchg
mov
lahf
enter
je
(bad)
and
jae
dec
mov
xchg
mov
push
aam
mov
add
cmps
adc
cmps
popf
shl
cmp
gs
mov
push
mov
push
sbb
mov
les
ins
jge
loopne
fadd
loopne
(bad)
dec
push
cdq
call
sbb
lahf
shr
mov
lds
and
stc
aam
mov
or
adc
pusha
mov
sub
mov
xchg
ror
add
push
sbb
sbb
pop
out
stos
bound
add
neg
jbe
or
fnstcw
addr16
call
imul
jmp
pushf
add
(bad)
add
fld
push
push
adc
mov
xor
je
fisttp
ds
movs
sahf
hlt
xchg
stos
mov
in
mov
dec
xor
js
mov
mov
xchg
retf
add
dec
popa
inc
pop
mov
scas
data16
sbb
xor
comiss
add
sub
inc
mov
mov
xchg
sahf
and
push
jns
push
jns
jo
sub
xor
and
ja
lock
jnp
int3
sbb
retf
sar
or
dec
add
dec
ret
stos
gs
push
adc
test
(bad)
pop
xor
jne
mov
loop
mov
ins
dec
cmps
rcr
(bad)
xchg
outs
mov
cli
xlat
mov
into
sbb
sub
stos
loop
lds
mov
sbb
pop
ret
arpl
(bad)
jno
dec
jnp
pop
retf
enter
mov
les
jmp
cdq
enter
stos
rol
outs
nop
or
gs
(bad)
cli
test
xchg
pop
dec
cmps
jle
inc
add
call
out
sbb
in
mov
or
lods
mov
or
mov
jne
push
lods
es
push
jmp
cmp
(bad)
stos
add
dec
sub
inc
jg
xor
enter
scas
stos
mov
mov
fild
mul
ret
sub
shl
ror
push
retf
retf
push
cmp
push
push
(bad)
bswap
jo
sbb
mov
inc
push
lahf
in
jo
sahf
fwait
jmp
push
cmp
sti
dec
shl
ficomp
sbb
cmps
add
push
icebp
popf
fistp
or
in
loopne
into
adc
sbb
add
ror
mov
cmp
xchg
ins
jb
test
sub
push
jmp
(bad)
repnz
fcom
imul
cwde
adc
int
mov
mov
shl
cmp
sub
push
dec
stos
xor
shl
outs
mov
clc
mov
inc
pop
mov
test
jge
xlat
(bad)
sahf
cmp
and
int3
bound
mov
fsub
xor
aas
jmp
add
jo
push
dec
cs
addr16
xchg
fsub
(bad)
cld
popa
aaa
inc
and
xor
inc
lods
leave
sub
and
pop
aad
mov
or
cmp
icebp
pop
aas
add
push
add
xchg
sub
pxor
sbb
sbb
sbb
and
aaa
and
ret
push
test
iret
lods
push
imul
gs
loope
js
mov
or
adc
dec
sbb
shl
mov
xor
ficom
sub
retf
nop
sbb
sti
(bad)
push
inc
fwait
push
inc
cld
cwde
jo
popa
loop
mov
mov
rol
pop
cmps
xchg
mov
or
das
ds
inc
aad
push
add
out
repnz
js
mov
xchg
adc
rcr
inc
push
jl
cmp
mov
push
pop
aam
ror
ins
(bad)
jo
mov
lods
outs
mov
cmp
and
sti
loopne
sbb
mov
jg
fwait
cmp
inc
add
sub
sbb
add
das
add
push
xchg
ins
or
cmps
retf
push
lods
xlat
push
mov
adc
sbb
adc
adc
mov
xchg
jp
mov
mov
push
sub
mov
es
push
into
sub
popa
rcr
out
sbb
retf
pop
pop
mov
xor
ins
retf
loopne
push
cli
xor
or
out
xchg
sbb
jne
sbb
hlt
aaa
push
mov
push
cmps
xchg
retf
sbb
ins
push
cdq
int
inc
lods
sub
adc
push
sub
and
dec
js
popa
cdq
dec
shl
out
aas
test
cmp
xchg
out
aaa
inc
test
pop
popa
mov
inc
scas
and
leave
rcl
push
push
adc
neg
push
push
shl
movs
sub
mov
and
inc
inc
jecxz
imul
mov
pop
mov
xor
fdivr
sbb
retf
lock
mov
xor
popw
repnz
js
or
and
adc
push
int
loope
addr16
cli
ins
iret
outs
xor
jns
shl
jmp
stos
or
jae
and
adc
movs
jns
adc
imul
inc
push
sub
loopne
hlt
out
iret
mov
mov
jmp
repz
lahf
jecxz
(bad)
jo
add
mov
sbb
ins
jge
fnstenv
leave
mov
retf
iret
pop
aas
adc
push
push
pop
sub
mov
push
sbb
xchg
loope
jl
cld
pop
xchg
repz
(bad)
loope
in
cdq
out
inc
in
sahf
gs
js
imul
mov
cmps
mov
(bad)
jmp
popf
in
ret
ja
inc
xor
iret
add
imul
fs
or
(bad)
(bad)
or
adc
and
cli
sbb
add
pusha
addr16
mov
and
mov
inc
lds
(bad)
loopne
leave
retf
add
dec
sbb
addr16
pop
xchg
sub
aam
xor
loopne
jle
ror
fiadd
repz
rcr
adc
out
(bad)
or
jecxz
in
adc
inc
(bad)
adc
popa
sahf
(bad)
push
and
(bad)
cmp
add
cmp
frstor
sbb
test
call
ds
aam
dec
pushf
retf
adc
mov
inc
in
push
push
rcl
xor
mov
imul
(bad)
(bad)
les
sub
lods
das
add
sub
(bad)
and
jmp
ss
inc
jmp
fild
xchg
cs
cmp
(bad)
clc
test
xchg
call
dec
inc
push
aam
pop
xchg
pop
cs
jg
aaa
pop
cli
ins
inc
pop
idiv
add
loop
mov
xchg
pusha
into
arpl
rcl
lods
mov
pop
dec
jb
retf
stos
pushf
aad
data16
lods
push
retf
and
push
cwde
xor
aam
sbb
inc
push
imul
icebp
mov
pop
aaa
xchg
sbb
xchg
jns
pop
shr
shl
stos
ss
fs
xchg
js
push
je
movs
pop
(bad)
call
test
mov
mov
push
ret
xchg
add
xlat
mov
push
movs
adc
ins
mov
sub
enter
(bad)
fstp
(bad)
cmps
mov
adc
pop
repnz
xor
mov
mov
movs
cmp
ret
enter
dec
sub
and
retf
in
mov
add
push
pop
fist
mov
sub
jmp
loopne
fstp
sbb
test
stos
lock
mov
dec
mov
test
push
push
pop
mov
icebp
mov
mov
dec
push
sub
xchg
cld
mov
out
or
outs
mov
cmp
lods
and
xchg
mov
dec
jmp
cld
out
ret
int3
mov
dec
mov
arpl
repnz
xchg
mov
jae
mov
sub
ror
test
push
adc
enter
mov
mov
hlt
or
mov
pop
in
addr16
bound
lea
sahf
ficom
shl
mov
stc
test
push
adc
loopne
pop
scas
pop
xor
cmps
in
mov
mov
mov
mov
add
and
stos
xor
push
cmps
push
stc
push
std
dec
fcomp
(bad)
bound
data16
mov
push
fdivr
add
fisub
push
mov
sub
stos
popf
mov
das
ss
mov
add
pop
jg
cdq
daa
dec
xchg
xchg
push
inc
(bad)
test
inc
in
mov
sub
xchg
ins
test
mov
les
jecxz
repnz
dec
push
cmps
dec
hlt
xlat
cs
aad
mov
mov
sar
mov
fst
pop
jle
es
nop
es
js
cli
push
fcmovnu
enter
into
and
push
xchg
stos
jno
adc
mov
mov
ror
inc
in
xlat
loopne
sub
mov
mov
xor
lahf
pop
lods
into
push
aaa
cmps
sub
cmp
push
(bad)
in
outs
jecxz
xchg
cmc
daa
call
aad
jnp
cmc
cdq
popf
adc
mov
pmaddwd
in
adc
icebp
aad
dec
iret
mov
add
aaa
scas
cmp
cmps
add
popf
push
mov
pop
add
(bad)
sbb
test
pusha
bound
pop
scas
jae
dec
(bad)
sub
sub
xor
rcl
pusha
rcr
mov
loope
push
jmp
push
pop
int3
popa
mov
push
inc
cmp
sbb
call
repnz
inc
mov
stos
ins
or
jl
and
stos
and
shl
stos
ss
out
sbb
sbb
sbb
js
mov
push
repz
cli
mov
mov
cwde
xchg
pushf
test
push
iret
xchg
mov
add
in
shl
xchg
jns
popf
mov
mov
movs
fmul
mov
cmp
mov
jae
mov
rcr
in
sub
cwde
adc
enter
call
pop
fs
cmp
inc
jmp
inc
or
jge
je
in
sub
cwde
(bad)
sar
add
addr16
dec
int3
or
scas
sub
xchg
xor
or
imul
cmp
xchg
inc
xor
and
aam
fistp
xor
xchg
and
scas
cmps
bound
inc
fwait
stc
and
push
mov
sub
mov
adc
pop
adc
push
repnz
mov
int3
aam
sbb
imul
dec
ror
stos
mov
les
and
xchg
ds
add
fs
out
arpl
neg
ret
mov
pop
mov
mov
movntps
jp
(bad)
fcmovnu
jno
mov
or
jne
fwait
adc
sti
adc
lds
sub
mov
call
cmps
sub
mov
(bad)
mov
gs
in
jl
push
jbe
mov
out
pop
imul
mov
movs
jo
jl
call
inc
fisubr
sar
fcomp
add
push
cmps
sbb
cmp
(bad)
and
(bad)
sbb
std
dec
xchg
adc
lahf
aad
pop
sbb
sbb
push
mov
dec
mov
scas
cmp
jmp
hlt
inc
scas
pop
pop
jb
sub
mov
test
shr
iret
sbb
push
jmp
jb
loopne
mov
xor
cdq
pop
xor
add
push
cmp
or
stos
ret
cs
sbb
xlat
mov
fistp
fisttp
rol
data16
call
and
push
jp
inc
add
popa
dec
sub
ret
dec
in
pop
or
lods
ret
and
shr
lods
xchg
sub
ret
sbb
cmp
jne
mov
mov
retf
into
faddp
ss
inc
ins
shl
xlat
inc
cdq
push
cmp
dec
fnsave
adc
shl
out
add
mov
std
mov
push
xor
les
adc
pop
xor
cwde
xor
inc
movs
xchg
pop
pop
mov
repz
add
mov
loopne
imul
add
mov
xchg
mov
xor
and
cmp
out
inc
inc
imul
sub
test
mov
dec
fucomp
sti
xchg
dec
pushf
test
iret
data16
sbb
imul
sbb
rol
pop
into
stos
fisub
xlat
cs
xchg
mov
add
shl
jle
mov
adc
ret
mov
fbstp
ss
dec
fadd
lods
jae
fdivrp
js
sub
xchg
xchg
cmp
sub
imul
push
rcl
xor
pop
dec
mov
xchg
mov
push
adc
xchg
push
push
int
mov
cld
dec
fnsave
retf
mov
sub
repnz
nop
pusha
in
sbb
out
(bad)
ja
lea
cmp
loop
push
mov
pop
sub
test
int3
arpl
outs
les
xchg
fisubr
pop
jl
call
call
pop
(bad)
les
jg
fldcw
or
(bad)
out
mov
ins
cmp
mov
and
test
sub
pop
cmp
enter
repnz
(bad)
ins
adc
fs
pop
or
mov
fsub
movs
mov
xor
add
sti
inc
xor
out
stos
out
dec
in
mov
dec
pop
inc
into
sbb
sbb
ins
or
xchg
jnp
inc
rol
jmp
fdiv
sbb
pushf
cmc
and
js
xor
mov
pop
stos
das
push
sub
inc
clc
ficom
and
push
pop
neg
sbb
dec
pop
jg
pop
xor
sub
int
pop
sbb
jb
addr16
push
out
iret
or
(bad)
dec
fldenv
daa
push
or
lock
ds
popa
sbb
int3
adc
cmp
int
jmp
sbb
mov
jno
jecxz
fdivp
ds
out
xchg
cld
aaa
sub
cmps
xchg
(bad)
sbb
imul
jns
jnp
cdq
nop
clc
mov
sub
adc
lods
jb
loope
mov
push
sbb
sti
or
je
xlat
jno
push
dec
lds
adc
mov
(bad)
gs
mov
(bad)
pop
push
add
pop
jle
pop
cli
push
or
jae
and
add
daa
idiv
sub
ret
sub
(bad)
clc
lods
jle
sub
sti
jnp
ror
jp
popa
and
xchg
nop
test
stos
cmp
mov
pop
xor
sti
into
test
sahf
mov
int
es
sub
sub
cmps
jg
pop
je
adc
push
sahf
mov
dec
mov
mov
jb
mov
fsub
add
stos
loope
push
pushf
in
add
inc
pop
add
movs
jno
add
pop
push
imul
and
cmp
inc
cmp
sub
outs
jle
mov
(bad)
xchg
mov
cmp
movs
mov
mov
aam
adc
jo
cmp
inc
cmp
cmps
mov
sub
cwde
mov
cmp
jns
test
les
sahf
clc
aas
cmps
jno
inc
aad
stc
mov
out
adc
stos
push
and
mov
push
inc
mov
mov
lods
add
pop
sub
and
mov
je
inc
enter
movs
mov
dec
rcl
inc
test
jae
lds
jno
pop
shl
cmp
push
and
cli
mul
out
popf
or
adc
mov
push
rcl
ja
cmp
into
jae
test
retf
xchg
js
fcom
add
test
dec
jecxz
ins
leave
jae
mov
clc
mov
inc
add
lods
inc
sub
add
dec
rol
adc
ret
mov
loope
mov
mov
inc
mov
xchg
pop
aam
push
cmp
mov
loop
call
lods
lahf
mov
fld
mov
(bad)
inc
mov
dec
dec
outs
mov
adc
add
popf
mov
xchg
loope
mov
rcl
sub
mov
dec
adc
hlt
jb
adc
fldcw
xor
loop
test
jmp
(bad)
stc
sub
dec
cmps
mov
clc
(bad)
hlt
call
push
out
popa
jbe
into
add
bound
stos
addr16
lods
sub
into
cmps
aaa
and
ret
sub
jg
cmp
gs
int3
mov
xchg
movs
xor
push
mov
ds
(bad)
in
dec
sar
mov
lea
or
daa
pushf
xor
and
inc
test
pop
scas
jl
int
jcxz
dec
mov
xchg
xlat
(bad)
xchg
mov
and
int
inc
ins
out
imul
mov
jo
int3
sbb
jae
ror
add
xor
push
pop
les
fwait
xor
or
mov
pop
push
ror
ins
push
cwde
repnz
jmp
pop
dec
jle
push
xchg
cmps
or
jl
and
xchg
out
ss
jnp
sub
mov
clc
pop
adc
inc
fst
cmp
cdq
xor
jb
fisub
cwde
fs
dec
lahf
or
and
jo
sbb
cmp
sbb
in
xchg
xchg
mov
popa
xchg
mov
stos
mov
push
dec
mov
dec
icebp
arpl
shl
leave
mov
or
outs
daa
fwait
or
repz
pop
aam
sbb
mov
pop
dec
or
fcomp
fst
and
xchg
cmps
push
scas
cmp
mov
je
imul
out
and
fcom
aad
jg
and
out
add
xor
mov
(bad)
into
mov
mov
cmc
and
jl
mov
nop
fst
or
sti
std
add
rcl
dec
mov
pop
fisubr
hlt
lahf
fdiv
fmul
pop
adc
push
xchg
call
stc
jne
scas
xor
lods
mov
xor
scas
imul
repz
push
add
sbb
gs
(bad)
js
mov
or
or
mov
out
pop
add
aaa
out
xchg
mov
retf
add
movnti
fcom
push
(bad)
pop
test
pop
cli
jecxz
adc
inc
sbb
push
add
mov
or
cwde
fdiv
xchg
stc
xchg
mov
push
jnp
out
aam
imul
or
jp
sbb
nop
std
mov
push
out
ss
dec
xchg
lea
mov
or
pop
xor
and
sbb
div
inc
dec
cwde
jl
cmp
lahf
sti
gs
sub
(bad)
outs
cmp
fcomi
aaa
cli
jno
mov
lea
xchg
inc
nop
aas
movs
jb
iret
jbe
jo
iret
add
jne
push
or
fstp
push
fild
mov
pop
and
mov
xor
pop
(bad)
aas
jle
push
inc
add
cwde
push
addr16
xor
pushf
mov
jg
mov
rol
sub
push
jmp
div
fist
cwde
dec
adc
mov
rcr
cmp
hlt
sub
mov
push
test
sahf
mov
jne
(bad)
add
mov
push
sub
movs
lods
mov
mov
mov
pop
or
mov
push
pop
fild
add
inc
repz
push
pop
leave
dec
fist
fldenv
stos
push
rcr
and
scas
pushf
jge
mov
ins
enter
(bad)
neg
pop
pop
and
movs
pop
adc
mov
mov
sub
sar
sub
arpl
call
cld
in
mov
dec
sti
or
sbb
ror
(bad)
nop
or
xchg
les
retf
call
sub
jno
fs
std
cmp
xchg
test
icebp
pusha
icebp
mov
stos
mov
sbb
jne
loope
int3
xchg
xchg
or
and
jg
and
pop
push
cmp
lahf
(bad)
outs
or
mov
add
shr
and
popa
pop
cwde
sub
pop
rcr
xchg
and
sub
cmp
cs
push
popa
dec
push
xor
iret
dec
add
push
fadd
add
inc
jae
imul
xchg
push
adc
inc
sub
bound
xchg
pop
and
int
loope
xor
out
xlat
test
mov
(bad)
movs
xchg
iret
lds
retf
dec
mov
(bad)
push
push
inc
mov
dec
ror
sbb
or
lods
pop
push
rol
std
lock
push
xor
fistp
adc
movs
mov
or
xor
out
fwait
js
pop
icebp
sahf
sub
adc
sub
ja
inc
or
pushf
hlt
dec
test
add
in
daa
ret
mov
popf
fadd
ret
jmp
and
movs
add
les
xlat
call
and
jns
repnz
hlt
add
sbb
add
xchg
jg
fidiv
fiadd
mov
jmp
sbb
and
or
cli
fcom
pop
and
adc
push
xchg
adc
loopne
fistp
scas
jae
sbb
pop
mov
cli
push
mov
push
sti
mov
xor
cmp
lods
test
inc
sub
dec
rol
adc
lock
mov
and
sbb
pop
in
pop
jns
idiv
scas
add
(bad)
into
shr
adc
mov
pop
int
push
sbb
in
(bad)
and
cli
jo
mov
je
dec
push
sbb
mov
movs
fs
test
call
push
push
inc
jmp
push
fsub
add
popa
jb
outs
cmc
in
push
push
stc
out
adc
sbb
mov
cmp
fdivr
outs
call
add
adc
repz
in
adc
not
leave
pusha
leave
mov
jmp
adc
lods
xor
aad
inc
pop
movs
stos
mov
sbb
inc
pusha
sbb
sbb
pusha
aas
popf
into
lahf
inc
pop
jno
fadd
jg
fidiv
and
xor
inc
cmp
inc
loop
sar
jg
ins
add
jnp
addr16
cmp
cmc
movs
add
es
and
jp
ficomp
sub
or
dec
out
mov
(bad)
pop
pop
fistp
mov
jl
cmps
ficomp
xor
inc
dec
dec
ret
cmp
add
or
inc
fmul
and
or
jl
xor
test
fsub
mov
push
pusha
pop
sbb
mov
pop
aam
and
outs
mov
(bad)
ss
sub
bound
jmp
xchg
mov
xor
data16
xor
(bad)
mov
mov
jo
in
jno
arpl
sti
xchg
pop
retf
xchg
jge
repnz
fdiv
xor
int3
xor
into
xor
ficomp
mov
cwde
pop
inc
cld
(bad)
jecxz
push
outs
stos
cmp
stc
fs
cmp
mov
adc
jg
shl
pushf
mov
jge
(bad)
pushf
push
stc
sbb
sti
sub
hlt
push
or
rol
lds
mov
or
mov
(bad)
cmp
mov
outs
jle
loop
loopne
pop
cld
xor
lahf
dec
pop
sbb
push
xchg
clts
into
std
imul
ret
jb
sbb
loopne
repz
add
or
push
scas
icebp
cmc
mov
xor
pop
in
mov
test
loopne
mov
lods
sub
sar
mov
push
xchg
inc
icebp
cmps
mov
and
and
adc
ret
sbb
movs
mov
test
pop
imul
dec
sbb
jnp
inc
inc
sar
sbb
dec
sub
mov
jg
retf
xchg
adc
and
pop
mov
mov
pop
xchg
out
test
adc
inc
out
sub
shr
in
fist
not
fnsave
ss
push
xchg
dec
mov
cmps
push
cmp
push
mov
and
jo
fsub
dec
cwde
fwait
pop
ins
and
test
pop
aaa
push
adc
fstp
fwait
and
popf
or
out
aad
mov
cmp
fst
mov
xchg
pop
pop
xor
(bad)
or
jge
es
pop
push
mov
xchg
fisub
push
cmp
mov
test
dec
lock
mov
stos
push
mov
ja
push
dec
xchg
mov
pop
stc
rcr
setb
call
gs
jmp
xor
cmp
fnstenv
sub
or
cmc
or
(bad)
das
jecxz
popf
jmp
push
aaa
mov
ja
addr16
jnp
pop
xor
mov
adc
cwde
int3
mov
xchg
in
stos
fist
(bad)
mov
into
add
add
xchg
inc
dec
test
das
inc
sub
mov
dec
and
xor
leave
rol
dec
mov
in
test
mov
lds
rol
mov
add
popa
sbb
popf
daa
sbb
mov
and
fucomi
mov
js
cmp
les
mov
into
and
inc
lock
shl
gs
jo
mov
ds
iret
or
out
jns
and
push
shl
mov
jp
int3
push
mov
or
dec
fimul
je
xchg
gs
mov
jno
imul
and
cmp
mov
push
pop
ins
lock
and
inc
cs
jg
loop
ja
ins
jmp
push
mov
add
jo
aas
imul
mov
lods
mov
pop
and
enter
test
(bad)
test
(bad)
fild
jg
mov
out
cmp
ret
(bad)
jae
fcom
push
mov
pop
inc
inc
test
stos
(bad)
out
jge
sub
mov
or
movs
xchg
jns
push
dec
mov
fistp
int3
cmps
mov
mov
jo
fs
aas
jne
gs
lock
pop
mov
cs
inc
push
ror
push
test
fidiv
popf
sub
sub
lahf
xor
ins
iret
ss
and
(bad)
(bad)
neg
cmp
add
mov
sbb
fldcw
jne
call
div
push
or
pop
jle
ror
and
pusha
stos
dec
int
xchg
cld
fmul
xor
add
inc
inc
jle
pop
mov
or
ret
rol
adc
int
cdq
xor
inc
fidivr
inc
add
push
in
in
out
push
xor
js
std
in
and
bound
add
test
dec
mov
or
add
mov
popf
aad
addr16
ret
inc
mov
loope
mov
sbb
neg
pusha
push
sub
mov
xor
push
jns
shr
inc
into
inc
addr16
xor
mov
mov
or
push
clc
or
jo
sub
jbe
aas
and
cmp
rcr
dec
mov
icebp
mov
js
xor
fcomp
in
jno
nop
in
shr
or
arpl
rol
test
pop
cmp
mul
aad
jecxz
mov
pop
stos
(bad)
sub
jo
mov
call
scas
fadd
(bad)
mov
ins
fs
int3
jnp
ror
nop
bound
adc
dec
test
jns
in
mov
call
enter
or
out
inc
and
push
div
mov
(bad)
std
mov
sbb
xor
ins
int3
cmps
hlt
ss
mov
bound
pop
xchg
fadd
jo
and
lahf
mov
jnp
cmps
data16
push
push
mov
bnd
out
mov
(bad)
in
ret
and
hlt
ficom
sbb
xchg
nop
ins
xchg
nop
xchg
mov
loop
xchg
shr
iret
adc
pop
xor
pushf
xchg
cmps
mov
shr
(bad)
not
aad
cmc
mov
add
pushf
out
popf
pop
xor
jl
call
cmc
mov
pop
adc
pop
cld
addr16
sub
das
test
outs
rcr
or
push
pop
dec
mov
xchg
inc
mul
inc
add
shr
or
mov
repz
push
xor
pop
inc
mov
or
xchg
test
ret
mov
fadd
xchg
lea
test
lea
sub
push
daa
popf
add
and
push
fsub
addr16
sahf
mov
and
jg
(bad)
add
xchg
inc
push
or
sti
shl
loop
stos
cmp
sub
cs
cmp
test
dec
test
clc
loop
xor
loope
stos
cmp
lods
js
pop
call
in
pushf
scas
adc
xor
(bad)
xor
add
in
xchg
mov
in
pop
sub
fdiv
sbb
bound
std
popf
clc
cwde
or
push
sbb
(bad)
xlat
sbb
mov
retf
adc
mov
lds
mov
mov
retf
mov
imul
xchg
jge
dec
fsub
popa
xlat
dec
pop
jb
mov
ret
mov
push
into
cdq
addr16
cwde
push
adc
mov
push
push
adc
pushf
ins
or
(bad)
(bad)
mov
in
sar
xor
xchg
dec
aas
mov
js
mov
in
mov
ror
dec
xor
dec
jp
inc
mov
pop
inc
fld
push
test
adc
iret
sub
push
add
cwde
rol
cmp
pop
in
xchg
aam
mov
xchg
into
mov
mov
mov
jl
scas
ja
push
shl
jmp
daa
cdq
int
stos
push
add
inc
push
stc
scas
outs
add
xor
and
lock
call
pop
fbld
sub
push
cs
gs
pop
dec
jnp
dec
inc
sub
ret
mov
and
xchg
loope
push
pusha
movs
dec
enter
add
add
pop
shr
cmp
mov
test
xchg
retf
xchg
jae
loope
das
jne
jl
and
jno
dec
cmp
xchg
cmc
mov
call
jne
inc
shr
out
xchg
push
daa
sbb
push
mov
sbb
cmps
push
ss
inc
adc
xchg
sbb
xchg
in
idiv
push
cdq
inc
test
aaa
pop
cdq
shl
sub
(bad)
xor
mov
sub
jmp
in
das
js
sbb
popf
xor
out
ss
ror
in
xor
xor
stos
pop
movs
lods
dec
je
cmp
pusha
movs
push
push
dec
cmp
bound
or
int3
pop
mov
and
nop
mov
xchg
mov
ret
pop
loop
jne
mov
test
fmul
fnstcw
lock
mov
or
imul
repz
popa
add
mov
or
jp
mov
cs
iret
stos
stos
mov
rcr
jge
cld
mov
xchg
xchg
jno
lock
xor
lods
ret
loopne
lods
sbb
inc
mov
fs
push
sub
fwait
mov
xor
test
loopne
xor
and
mov
aaa
call
add
mov
test
adc
cmp
inc
in
addr16
dec
pop
jno
jno
sub
das
inc
sub
pop
jae
mov
pop
lods
popf
mov
arpl
push
pop
scas
out
call
stos
int
sub
les
out
cmp
adc
or
cmp
je
sbb
or
jne
fcomp
mov
inc
add
imul
ins
cmp
jbe
push
les
push
loop
adc
sahf
pop
push
ffree
aam
mov
(bad)
push
jne
jno
lods
inc
jnp
repnz
jl
sub
out
mov
fs
push
or
push
std
aas
mov
ss
jecxz
mov
cmps
push
mov
dec
ja
cli
sub
dec
repz
jbe
jbe
pop
cmps
push
outs
push
rol
adc
xchg
out
mov
mov
dec
ins
and
dec
sar
push
lahf
push
sahf
mov
and
push
xchg
push
(bad)
mov
mov
push
jb
call
rol
mov
cwde
xor
loopne
ret
pop
(bad)
enter
stos
push
xchg
sub
ss
scas
xchg
push
jmp
or
inc
ss
aas
retf
mov
sbb
mov
lock
xchg
mov
push
int3
(bad)
daa
jo
mov
test
call
jmp
jmp
ficom
xor
ja
cmc
test
adc
(bad)
jmp
push
fwait
mov
leave
sbb
cmp
pop
test
into
stos
adc
jp
rcl
mov
pop
sbb
sbb
adc
cmp
lahf
lea
ret
mov
ret
sub
cmc
outs
fidiv
dec
or
aam
mov
pop
adc
ret
in
dec
outs
and
bound
out
ins
fwait
das
fmul
jae
scas
std
dec
dec
mov
(bad)
pop
mov
sahf
sbb
daa
stos
call
sub
pop
jnp
pavgw
xor
fcomp
mov
hlt
or
test
jne
in
test
mov
je
or
add
loope
push
out
fisubr
adc
addr16
ss
and
dec
ins
test
sub
mov
and
pop
or
mov
ror
cmp
and
icebp
cmp
aaa
mov
mov
xchg
or
adc
dec
mov
ss
call
push
out
stos
pop
add
retf
or
test
outs
sbb
mov
fld
and
cmp
sbb
lock
and
add
in
aas
leave
mov
in
sub
imul
and
jmp
cmp
fiadd
pop
xchg
mov
cmp
fs
pop
cmp
(bad)
sub
xchg
jmp
(bad)
jb
nop
inc
sahf
dec
lods
push
jb
aaa
sub
push
ss
ins
pop
sbb
push
fcomp
xor
dec
sub
xor
out
cmp
and
and
mov
fdivp
sar
daa
(bad)
clc
dec
mov
pop
retf
pop
push
scas
push
cmp
sub
int
add
std
push
jnp
icebp
jmp
and
pop
stos
adc
mov
hlt
mov
push
pop
retf
aad
and
dec
(bad)
ins
mov
enter
rcr
lds
daa
push
call
or
add
repnz
fsqrt
inc
pop
cmp
cs
xor
outs
fadd
hlt
mov
dec
cmc
pop
ss
pop
sub
aad
es
mov
(bad)
(bad)
stos
jnp
dec
aas
lds
dec
int
loop
mov
fnstenv
mov
pop
bound
jo
xchg
pop
cmovae
jl
mov
mov
push
aad
movs
sbb
sub
push
or
pop
sub
loopne
pop
and
dec
in
push
gs
jbe
xchg
popa
dec
inc
call
cld
jl
pop
xor
push
inc
mov
pop
or
retf
jb
mov
cmp
adc
mov
fs
stc
es
shl
mov
pop
ss
push
cmps
mov
leave
shl
(bad)
popa
dec
add
cmps
out
inc
pop
cwde
out
adc
loopne
ror
ss
arpl
mov
sbb
or
(bad)
dec
add
(bad)
sub
int3
cwde
or
jg
pop
push
rcl
(bad)
fldcw
fnstenv
dec
fstp
mov
lods
or
sbb
jecxz
inc
xchg
jnp
and
push
div
mov
pop
inc
movs
out
cmp
out
dec
lahf
xchg
jmp
sub
in
cmc
shl
out
add
inc
mov
push
pop
pop
jmp
das
std
pushf
or
out
cmp
pop
pushf
lock
enter
aam
cmp
imul
std
aas
xchg
inc
fwait
fs
imul
daa
cmp
ss
fcom
fwait
jle
not
(bad)
pop
cmps
jge
mov
popa
push
mov
mov
(bad)
mov
add
mov
vmovntps
push
ins
jg
cmps
push
(bad)
imul
mov
lahf
sbb
gs
push
outs
push
cdq
push
mov
push
cmp
mov
retf
loopne
out
jbe
inc
or
cmp
loopne
cs
stos
lods
js
adc
mov
mov
mov
or
int
(bad)
mov
ror
mov
loopne
scas
mov
adc
and
ficom
(bad)
mov
imul
out
fcom
mov
inc
rcl
xor
mov
mov
jmp
mov
das
fninit
dec
in
mov
sbb
loopne
fdiv
cmp
out
(bad)
mov
xor
mov
jne
(bad)
mov
add
mov
pushf
(bad)
aad
ja
popf
cdq
aas
push
retf
push
rcl
daa
lods
push
dec
std
cs
out
and
out
inc
jb
fild
mov
mov
imul
neg
into
cmp
sbb
js
inc
pop
lahf
add
fldenv
iret
ret
rcr
gs
das
pop
inc
mov
scas
or
lea
jno
xchg
fmul
pusha
je
dec
xchg
bound
inc
lea
dec
std
push
ret
mov
add
repz
push
dec
call
pop
xchg
and
dec
loop
nop
call
inc
push
sub
adc
pop
ficomp
xor
(bad)
xchg
shl
mov
xor
pop
jnp
into
rcr
outs
fisttp
ja
xor
movs
add
int3
cmp
mov
add
sbb
popa
rol
or
dec
aad
sub
jl
mov
pop
test
xchg
pop
add
aam
rcr
(bad)
jmp
mov
or
or
loope
int
push
pop
shl
(bad)
int3
mov
push
cmp
out
lods
jb
mov
lods
pop
ror
jge
jns
sti
push
jg
mov
push
sub
rol
or
inc
daa
adc
inc
sub
aad
xor
sbb
add
cmp
cmps
pusha
pop
shl
repz
test
loope
xchg
arpl
push
ror
jge
push
mov
mov
and
cmp
fwait
movs
adc
ins
xlat
push
mov
or
test
dec
mov
in
in
je
ret
mov
ror
daa
test
iretw
push
hlt
aam
test
enter
je
(bad)
ror
loope
and
pusha
fsub
cli
bound
retf
fdivr
test
pusha
sbb
loop
pop
push
jb
movs
ror
cwde
cmp
mov
xchg
jnp
sar
out
mov
loope
dec
imul
jmp
xor
jne
mov
cdq
jo
cmp
jmp
retf
add
xchg
sbb
lods
push
adc
sub
cmps
stc
(bad)
add
getsec
stc
jmp
pop
xchg
adc
xchg
mov
inc
push
out
cmp
ins
mov
(bad)
pop
in
cmps
mov
sbb
inc
mov
xor
in
stos
call
mov
int
(bad)
(bad)
(bad)
fld
es
mov
call
fld
(bad)
jns
int
cmps
mov
xor
pushw
repz
fsub
jl
push
inc
xor
push
mov
jmp
ins
loopne
adc
rcl
dec
or
dec
cmp
stos
popa
mov
je
mov
popa
outs
xor
pop
ret
lahf
pop
jo
mov
ss
ror
loope
lock
push
lods
mov
repnz
jns
shr
add
cmp
inc
sub
cmp
xchg
shr
into
js
xchg
daa
mov
mov
outs
or
push
mov
mov
xor
push
inc
retf
lahf
mov
inc
jle
mov
cdq
inc
clc
or
scas
cmp
pop
popa
pop
lods
repz
or
xchg
and
jp
dec
pop
fstp
inc
inc
(bad)
xlat
shl
ins
call
sbb
aam
loopne
and
leave
jns
jns
sbb
in
out
idiv
mov
pop
fnstenv
mov
ins
inc
mov
mov
jmp
mov
pop
xchg
lods
out
ror
test
jnp
mov
mov
loope
out
icebp
dec
mov
daa
jmp
mov
or
push
mov
adc
stos
out
movs
or
aas
cld
pop
pop
xor
(bad)
mov
cmp
push
fidivr
pop
push
jmp
push
pop
pop
and
mov
dec
pushf
(bad)
lock
mov
ror
dec
fisttp
pop
dec
cmp
lods
aas
or
sbb
pop
repnz
mov
sub
test
inc
add
je
std
test
sti
add
inc
mov
sar
cmp
in
rol
cmp
xor
pop
addr16
dec
sbb
cmp
out
sti
push
in
and
inc
or
lds
fs
movs
xchg
inc
ret
mov
mov
or
shl
jl
push
(bad)
shl
sahf
sbb
or
adc
imul
push
fild
mov
int3
imul
inc
sbb
dec
mov
mov
push
rcl
inc
fisub
mov
and
mov
jno
aaa
aad
mov
outs
in
and
dec
cmp
repz
rol
pushf
pusha
repnz
jmp
xor
xchg
(bad)
jmp
ins
xchg
into
outs
imul
fidiv
jge
mov
cmp
or
sub
mov
ret
inc
sub
mov
or
cld
push
mov
das
les
adc
idiv
jbe
xor
xchg
inc
fld
inc
pop
ja
and
adc
sti
nop
les
(bad)
pop
lahf
popa
retf
push
push
add
xchg
shl
or
jae
jb
jge
push
mov
jp
and
ficom
add
mov
loope
fisub
xchg
jmp
mov
fisubr
mov
shl
mov
(bad)
(bad)
stc
rcl
std
mov
jl
outs
pop
leave
xlat
pop
out
pop
int
xor
xchg
inc
dec
lahf
mov
pop
(bad)
push
cmp
sub
mov
cs
sub
shl
cs
adc
jecxz
adc
dec
test
xchg
adc
cmps
sub
push
(bad)
lahf
cmc
push
cmc
fisttp
icebp
jg
cmc
scas
stos
test
sub
push
(bad)
sbb
cmps
mov
mov
fcomp
mov
fdiv
in
out
mov
mov
or
push
das
mov
adc
call
mov
push
lea
xor
out
inc
mov
mov
xchg
sub
stos
cmp
test
xchg
aam
jne
add
push
xor
outs
xchg
(bad)
mov
sbb
adc
xor
call
lods
fidiv
not
xor
movs
or
pop
test
clc
push
retf
fsub
dec
call
fisubr
pop
jp
mov
jecxz
jb
out
mov
ret
jns
or
out
pop
stos
xchg
mov
cmp
adc
xchg
and
push
js
inc
mov
mov
out
or
cdq
mov
call
jg
fmul
add
pop
and
pop
xchg
cmp
shr
lds
popa
repz
cs
push
fist
leave
ins
sub
lock
ror
lods
retf
push
test
mov
stos
das
push
mov
mov
mov
jg
xchg
outs
xchg
retf
and
add
jns
cmc
hlt
test
pusha
int3
inc
cmp
xor
cmp
mov
std
jge
dec
push
or
cmp
pop
push
std
mov
pop
xchg
dec
and
aas
cmp
scas
or
(bad)
push
test
ret
mov
jb
aad
repz
sbb
mov
pop
in
mov
(bad)
pop
(bad)
adc
popf
cmp
stc
mov
or
push
or
mov
lods
leave
stos
lock
scas
ds
inc
jle
push
lock
icebp
or
and
or
xor
dec
add
in
neg
cmp
std
adc
pusha
lds
jmp
loope
inc
fbstp
jp
(bad)
(bad)
mov
sub
sub
loope
xchg
cmc
scas
xchg
repnz
mov
mov
xchg
jae
push
movs
inc
cdq
retf
mov
xchg
cdq
cwde
add
or
dec
retf
repz
adc
ret
dec
(bad)
xchg
sub
(bad)
(bad)
mov
and
mov
fdiv
sbb
jge
leave
ja
and
adc
xor
call
pusha
std
jp
jge
or
dec
dec
xor
jmp
imul
out
(bad)
test
xor
scas
fisttp
mov
pop
clc
ja
jle
and
sub
pop
enter
sub
pop
pop
lds
dec
mov
iret
loope
jmp
cmp
out
jecxz
push
in
aad
int
int
ror
add
imul
(bad)
loope
ficomp
cmp
xor
adc
xchg
xchg
xchg
and
lods
outs
push
into
es
sar
add
sub
sbb
mov
adc
fwait
popa
sbb
lahf
fs
loop
lea
data16
pop
cmp
out
mov
cmps
pop
sub
mov
push
loopne
aam
pop
sbb
lahf
(bad)
loopne
mov
inc
sbb
aad
daa
sub
fiadd
xchg
jmp
enter
es
fcom
das
sub
rcl
jnp
fld
mov
ins
int3
pop
pop
out
adc
loopne
aas
ret
out
mov
pop
lds
je
inc
add
mov
xchg
repz
jge
or
rcr
gs
inc
gs
xchg
(bad)
jge
stc
mov
fwait
mov
stos
mov
mov
std
test
lods
scas
cmps
xor
fs
dec
sbb
pushf
mov
in
xchg
dec
xchg
les
dec
loop
fiadd
adc
xchg
adc
push
mov
sub
and
inc
mov
jp
add
push
in
pop
mov
sub
fld
inc
mov
cmp
out
xlat
or
cmp
aad
push
pop
or
call
jae
and
or
pop
pop
aam
int
int3
sbb
div
test
in
push
lock
xlat
xchg
je
inc
pop
in
push
lahf
jmp
loope
stc
and
cmp
ds
pop
iret
cs
fdivr
rcr
daa
nop
fwait
pop
scas
div
mov
enter
cwde
rcl
cwde
dec
pusha
inc
in
jmp
popa
and
sbb
push
xchg
lahf
sub
dec
arpl
bound
retf
mov
outs
scas
xchg
call
push
add
pop
inc
xchg
mov
xor
sbb
popf
inc
leave
jge
or
rol
test
mov
cmps
mov
xchg
iret
sub
out
inc
fst
test
cmp
xlat
jle
xchg
std
inc
(bad)
xchg
cmp
arpl
sbb
sahf
push
mov
popa
push
push
iret
jo
cmps
push
xchg
xchg
cmp
enter
(bad)
cmp
lock
mov
inc
shl
fwait
loop
aad
jmp
pushf
scas
pop
pushf
mov
mov
test
xchg
ins
std
arpl
ret
xlat
push
xor
shl
sbb
mov
(bad)
push
mov
and
(bad)
jbe
ficomp
add
daa
mov
cmp
push
outs
and
xchg
xor
cmps
(bad)
das
in
mov
gs
cli
fadd
test
ret
sar
dec
xchg
add
cmp
(bad)
xor
pop
push
loope
xchg
ror
nop
mov
stc
mov
jbe
lea
xchg
sti
jle
daa
movs
add
lds
gs
push
and
es
or
jnp
int
lock
push
(bad)
add
je
test
repz
cld
jle
mov
mov
push
ss
xchg
cmps
ds
mov
xor
adc
popa
mov
mov
sahf
hlt
in
test
add
lea
mov
sbb
mov
xchg
push
jmp
sub
jo
dec
inc
xchg
pop
(bad)
mov
cmp
push
arpl
(bad)
sti
ficomp
xchg
or
sub
cmps
add
jp
and
js
jo
push
or
in
pushf
cmp
mov
sub
sti
and
sbb
outs
mov
pop
mov
out
inc
das
cmps
mov
xlat
jne
push
loopne
scas
cmp
outs
in
mov
sbb
xlat
cmps
mov
or
movs
lods
or
sub
cmp
xor
or
sub
xchg
bt
rcr
xchg
push
lahf
jl
cmps
test
sbb
stos
add
(bad)
inc
imul
lock
(bad)
cs
inc
arpl
push
push
push
xor
(bad)
jb
mov
xchg
jmp
pop
pop
ror
outs
std
jl
cmc
inc
lahf
nop
jo
dec
lahf
jmp
aad
xchg
aaa
mov
jl
(bad)
and
jno
iret
and
loopne
fmul
std
dec
jmp
jns
jno
push
aam
xchg
push
hlt
aad
add
and
dec
loope
push
cdq
push
jg
cmp
push
jg
out
push
push
ror
jmp
loope
push
(bad)
ins
push
addr16
cmp
mov
lock
dec
enter
cmc
cdq
xor
add
repz
cli
push
das
rol
sub
inc
jae
(bad)
shr
movs
leave
sbb
jo
in
cmp
ror
(bad)
loop
and
push
dec
ficom
loop
add
fs
push
into
mov
not
xor
pop
ja
pop
cli
aam
sub
mov
cmp
jmp
jb
xchg
push
push
pop
xor
mov
push
out
and
not
pop
pop
jae
xor
push
iret
jbe
in
bound
push
sbb
mov
ins
hlt
fistp
pop
sub
add
aad
cwde
push
call
adc
cs
sahf
mov
cld
(bad)
icebp
iret
inc
sbb
or
xchg
mov
ins
loop
jo
clc
icebp
pop
add
sub
cmp
in
sbb
and
fst
js
sbb
out
cmp
sub
sub
sbb
mov
mov
push
addr16
std
addr16
and
mov
dec
mov
fwait
div
add
enter
out
cdq
mov
out
add
outs
test
xchg
aaa
cmp
mov
sahf
outs
imul
shl
test
push
jg
pop
pop
fwait
xchg
xlat
pusha
ins
pop
mov
jl
jge
lds
push
hlt
mov
(bad)
add
jno
pop
into
jp
mov
cmp
jbe
mov
pop
inc
pop
arpl
add
sahf
sbb
and
fnsave
(bad)
push
popf
sub
cmp
cmps
out
adc
pop
pop
sbb
emms
dec
inc
push
in
xchg
inc
mov
inc
push
ret
out
fdiv
inc
xchg
fiadd
sub
jmp
mov
call
int
cs
xchg
outs
mov
xchg
and
mov
mov
mov
xlat
cli
pop
ror
dec
sub
pop
gs
retf
call
(bad)
call
(bad)
ret
cmps
add
add
inc
mov
inc
xchg
jle
xor
es
icebp
pop
fisubr
xchg
mov
(bad)
jb
mov
jge
in
push
cmp
aaa
popa
or
cmp
or
jmp
leave
jno
push
scas
js
jg
std
inc
aam
icebp
faddp
(bad)
push
popf
mov
push
pop
jle
cmp
nop
sub
fsubr
mov
push
dec
dec
int
sbb
push
rcr
xor
call
and
xor
ins
ja
in
ret
(bad)
repz
jb
stc
xlat
xchg
jmp
test
push
xor
das
dec
add
mov
int
or
push
fbstp
jno
mov
in
int
xor
cmc
repz
js
jl
test
ret
lods
popa
push
adc
xor
jmp
test
dec
imul
mov
sub
or
inc
xor
xor
xor
dec
jecxz
fucom
add
pop
or
or
mov
cmc
outs
(bad)
mov
jg
and
retf
inc
push
vmovaps
movs
call
cwde
call
(bad)
mov
pushf
repnz
imul
cs
inc
inc
adc
fwait
xchg
mov
sbb
cmp
scas
aas
js
sbb
xor
mov
mov
pusha
mov
push
jo
xor
push
add
adc
xchg
mov
fwait
sub
mov
data16
sbb
pop
push
int3
mov
pop
mov
into
mov
cs
mov
(bad)
pushf
mov
jns
mov
mov
adc
cmc
scas
pop
jl
aam
pop
mov
arpl
push
cmps
mov
sbb
sbb
jb
mov
(bad)
and
jp
shl
sbb
retf
stos
test
or
dec
outs
mov
jae
rcr
xchg
push
cmp
inc
cmc
xchg
js
clc
nop
pop
mov
es
movs
sahf
ds
ror
push
imul
les
mov
jecxz
sbb
(bad)
movs
mov
in
mov
dec
push
mov
jb
pop
mov
shl
push
in
cmp
call
cmp
repz
je
std
inc
popf
cld
mov
add
mov
pop
or
loopne
sahf
bound
pop
loopne
test
adc
nop
clc
lea
adc
cmps
sub
fs
fdivr
aad
push
or
or
pop
imul
xor
mov
adc
sbb
or
loop
mov
clc
fucom
sbb
jge
xchg
adc
and
inc
push
mov
or
lock
adc
pop
or
dec
fdivr
cmp
aad
(bad)
dec
or
fst
ror
sbb
mov
out
gs
sub
jge
popf
pop
xchg
arpl
mov
sbb
jecxz
fld
shr
sbb
dec
pop
or
aam
or
cmp
aad
or
jbe
add
add
add
pop
mov
adc
mov
fcom
sbb
xchg
or
cmp
dec
daa
fldenv
stos
fsub
enter
inc
icebp
out
inc
retf
jg
dec
(bad)
outs
ss
or
sub
xchg
sub
je
adc
outs
mov
inc
pop
add
ror
clc
jo
fwait
ret
in
popf
fistp
xchg
jbe
idiv
inc
and
movs
and
ja
sbb
pop
dec
mov
loope
fs
cmp
ja
jo
pushf
shl
cmp
mov
mov
lea
sbb
sub
sbb
jecxz
rol
shl
outs
mul
mov
push
cli
es
loope
dec
mov
and
cmps
sub
push
stos
dec
and
nop
out
adc
adc
arpl
(bad)
jnp
mov
push
in
pop
xchg
jge
mov
lock
retf
pop
mov
enter
xor
add
fisub
mov
lahf
or
and
jno
call
adc
repz
or
push
std
and
scas
std
jo
mov
inc
repnz
cdq
data16
mov
push
scas
clc
jno
imul
(bad)
mov
or
fbld
jecxz
inc
jmp
jbe
int
pop
leave
xor
mov
aaa
rcr
cli
jmp
fiadd
fs
sub
lahf
or
pop
fild
jmp
pop
cmp
(bad)
and
aas
xor
mov
cs
mov
pop
sub
fs
mov
ds
pop
dec
adc
imul
mov
mov
lds
data16
movs
inc
arpl
nop
mov
loope
dec
jmp
ja
outs
xor
daa
dec
sbb
mov
sbb
pop
push
fwait
popa
xchg
sub
les
push
pop
out
inc
lds
pop
lods
(bad)
push
xchg
sahf
or
lds
or
in
push
mov
cmps
inc
cli
cmp
mov
pop
pop
std
fnop
dec
outs
xchg
and
inc
inc
mov
adc
(bad)
jp
push
test
cmps
pusha
data16
dec
add
jecxz
mov
repz
push
and
add
push
jno
mov
data16
stos
pop
in
test
daa
mov
lds
(bad)
in
cmp
cli
adc
aam
xchg
fs
js
dec
fisubr
mov
push
lds
pop
dec
stos
mov
push
dec
imul
push
add
lahf
ret
(bad)
sar
cmps
loopne
mov
(bad)
mov
push
cmp
push
ins
clc
mov
sbb
xor
mov
outs
and
dec
pop
test
fdivr
inc
sub
jmp
jecxz
push
into
pop
ins
dec
js
inc
fs
dec
repz
sbb
inc
jb
dec
clc
dec
movs
mov
and
mov
jp
ins
mov
push
fdiv
jae
test
cmp
mov
aad
push
xchg
fldcw
or
inc
and
pop
sub
adc
xor
mov
clc
xor
push
dec
pop
fstp
adc
push
push
cwde
or
adc
adc
push
mov
xchg
mov
inc
test
repz
(bad)
jp
mov
test
lods
sub
clc
sbb
jle
les
jp
outs
cmp
or
lahf
xor
repnz
sbb
enter
retf
int
test
fisttp
stos
lods
sub
sub
ror
enter
xchg
(bad)
movs
clc
inc
std
add
fwait
pop
mov
loope
enter
cmc
jmp
sbb
and
sub
mov
ret
out
jno
lea
xchg
xchg
je
cmp
loop
cmp
jno
add
addr16
sbb
inc
scas
in
cld
sbb
cmps
add
(bad)
add
pop
and
xchg
mov
cmp
popa
ficom
cmp
jnp
ss
stos
inc
test
aad
mov
push
sub
ds
adc
int3
out
push
cmp
inc
std
xor
in
ins
mov
ja
jb
leave
mov
push
call
mov
stos
xor
sbb
push
push
mov
popf
mov
jl
sbb
nop
pop
dec
shl
mov
mov
ss
inc
lea
repz
xor
add
add
and
dec
std
jmp
into
cli
ins
(bad)
or
(bad)
ins
cwde
mov
mov
sub
inc
jg
xor
sub
jmp
or
fisttp
call
cmp
int
test
pop
mov
test
sub
lds
and
inc
js
adc
and
sub
sbb
jns
mov
shl
jle
mov
enter
je
jnp
int3
mov
out
mov
jg
xchg
jo
imul
(bad)
out
push
fdivr
sbb
push
js
in
adc
stos
test
js
mov
jg
hlt
dec
sbb
hlt
nop
xor
and
mov
hlt
cmp
and
imul
mov
lods
inc
or
idiv
js
xchg
cwde
push
jle
fmul
retf
sbb
pop
push
mov
les
bnd
shr
jge
push
ret
jge
(bad)
faddp
outs
push
jb
int
cld
sbb
add
xor
(bad)
pop
or
scas
inc
sub
add
call
sub
fcmovbe
pop
or
mov
inc
xor
popa
stos
jo
es
lea
lea
cmp
lea
push
fwait
dec
add
(bad)
call
add
push
(bad)
sbb
repnz
fnstcw
enter
sbb
aaa
or
and
bound
out
xchg
dec
and
or
mov
mov
mov
cmp
xor
hlt
std
pop
enter
jmp
push
dec
dec
nop
mov
jecxz
push
and
shl
xchg
(bad)
dec
mov
sahf
call
pop
pop
mov
mov
and
lods
scas
nop
jp
mov
dec
mov
and
dec
mov
fdivr
fdivrp
and
inc
inc
in
push
jle
mov
in
mov
fdivrp
out
xchg
loope
mov
imul
and
xor
retf
lds
stos
pop
call
mov
in
cmp
iret
hlt
shl
pop
cmp
cmp
dec
xchg
and
mov
retf
or
cmp
and
or
daa
jo
imul
call
and
inc
xchg
mov
iret
push
mov
pop
fistp
hlt
mov
push
xor
movs
lea
mov
xor
fldenv
pushf
ja
jns
pushf
mov
mov
mov
adc
cli
movs
jb
popa
sbb
outs
(bad)
mov
or
add
or
cmc
push
mov
jmp
(bad)
xor
jle
mov
das
jg
mov
aam
dec
test
retf
adc
add
mov
dec
or
push
in
ret
call
retf
add
jl
push
xchg
int3
pop
or
aad
sbb
retf
xor
mov
xor
xor
shl
ret
and
xor
push
xor
dec
test
push
jns
jbe
ins
sbb
or
push
mov
outs
and
pusha
retf
int
sub
cld
movs
sti
retf
repnz
sbb
shl
inc
lds
lea
sbb
jecxz
icebp
icebp
fmul
movs
cmp
mov
pop
cs
pusha
jo
jmp
mov
gs
push
xor
sbb
adc
retf
ret
xchg
(bad)
xchg
test
ss
dec
jecxz
add
xchg
push
cmps
bound
(bad)
cmp
fsub
hlt
sub
sbb
pop
mov
push
je
cmp
call
push
sub
jbe
dec
mov
jns
jb
(bad)
fistp
movs
inc
cs
sub
cdq
xchg
scas
xlat
mov
bound
outs
popa
cwde
aam
add
jl
mov
movs
(bad)
mov
push
test
ss
push
sub
inc
jne
pop
popa
aaa
int
jecxz
push
sub
les
push
sahf
(bad)
pop
push
retf
adc
sbb
shl
inc
lods
mov
pushf
push
push
retf
pop
mov
jmp
jecxz
xchg
inc
push
or
mov
repnz
shl
(bad)
stos
pop
(bad)
dec
mov
dec
sub
xor
mov
retf
or
sub
dec
shl
addr16
cmp
jmp
pop
mov
mov
jns
fdivr
sbb
loop
or
dec
jle
outs
in
sub
rcr
in
call
mov
pop
xchg
adc
dec
xor
add
lods
jmp
out
dec
mov
jae
xor
jmp
sbb
bound
(bad)
cmc
sub
clc
loope
xor
jg
add
fstp
jne
inc
in
adc
adc
push
and
adc
pop
int3
sti
(bad)
in
sub
cli
cmp
dec
mov
mov
pop
cld
push
jg
add
dec
pop
sbb
popf
aaa
jae
add
and
sub
sbb
cs
ror
and
pop
mov
xor
rol
neg
sar
loope
mov
fstp
je
iret
cmp
push
retf
std
dec
loope
paddw
outs
xchg
(bad)
lock
and
adc
sub
sub
sbb
push
inc
fdiv
in
popf
jns
inc
popa
mov
jo
pop
imul
jmp
out
outs
sar
sbb
mov
inc
cmp
adc
pop
push
cmp
inc
inc
or
jnp
push
(bad)
movs
loopne
jp
jle
adc
sbb
ds
bound
es
mov
jne
pop
cmp
pop
xchg
outs
test
inc
push
xchg
and
icebp
adc
xor
lods
xor
push
shr
repnz
or
enter
dec
and
stc
lahf
sbb
xor
mov
mov
lahf
pop
and
push
fwait
cmp
mov
lods
adc
dec
sbb
mov
or
fimul
lods
sub
xor
cld
mov
jne
ja
mov
clc
(bad)
mov
adc
das
xchg
cmp
das
lea
xor
imul
mov
aad
xchg
push
iret
mov
cmp
ins
cmc
mov
jmp
cld
cmp
(bad)
(bad)
jl
pop
iret
mov
int
dec
jne
mov
(bad)
loope
in
mov
outs
xchg
push
mov
xchg
test
pop
sbb
fild
jle
xor
fisub
stos
bnd
call
jmp
fcmove
or
push
dec
cmp
pop
stos
movs
call
cmp
mov
or
xchg
pusha
mov
icebp
dec
pushw
cmp
mov
ins
cmc
dec
sbb
cmp
cmp
inc
cmp
jecxz
enter
ffreep
pop
repnz
mov
movs
jne
sub
dec
jle
ins
int3
(bad)
cmp
popa
jnp
adc
or
mov
xchg
jnp
test
add
stos
das
sub
outs
pop
sbb
xchg
mov
and
cmp
cmps
aas
iret
sub
ret
(bad)
leave
sub
mov
mov
mov
cmp
or
stc
adc
add
jmp
cs
movs
mov
movs
aad
lods
xchg
adc
fsubr
lds
inc
ins
sahf
xor
call
pusha
xchg
lock
xchg
aas
(bad)
repnz
shr
add
add
jmp
repz
(bad)
aaa
mov
xchg
bound
(bad)
mov
inc
cs
pop
xchg
out
retf
popf
pop
xchg
jne
inc
jns
jbe
xchg
leave
cmp
jne
add
jle
dec
lods
sub
rcr
inc
es
dec
repnz
xor
push
dec
pop
stos
mov
xchg
jecxz
push
xor
clc
inc
sub
xchg
sub
test
mov
push
cmp
push
xor
sub
sub
mov
sbb
pop
cld
dec
sar
jnp
js
enter
mov
lods
jb
jmp
dec
enter
adc
out
push
inc
add
lock
and
pop
ret
mov
ja
and
xchg
inc
test
cmp
mov
and
repz
pop
or
cmps
in
xchg
mov
dec
test
push
stc
test
pop
and
sbb
cmp
in
pop
pusha
test
repz
add
xor
scas
push
ins
pusha
push
bound
cmp
inc
xor
jbe
pop
scas
lea
loopne
jo
dec
fdivr
test
inc
dec
or
lods
mov
cs
je
retf
cdq
mov
cmc
int
sbb
adc
xchg
push
sub
jp
mov
cmc
jg
and
jo
push
add
rcr
aam
or
ret
gs
cmp
out
je
jp
push
mov
dec
pusha
xchg
mov
mov
lods
enter
cmp
ficomp
dec
and
inc
outs
lock
arpl
loope
fcom
xchg
in
jmp
out
data16
fisubr
mov
cdq
sub
jnp
daa
(bad)
push
mov
leave
xchg
sbb
leave
out
dec
jb
or
ja
dec
lock
mov
out
movs
and
sub
call
or
mov
ss
scas
xor
xchg
adc
(bad)
int3
sbb
ror
push
lds
mov
leave
(bad)
dec
sti
outs
ret
jno
jle
out
jns
pop
adc
and
cli
sbb
add
push
dec
pop
sbb
mov
sub
in
frndint
imul
clc
leave
mov
pop
aaa
jl
clc
in
xchg
cmp
jmp
or
in
(bad)
lea
inc
jecxz
dec
jg
jp
mov
pop
cmp
xchg
push
in
sbb
ret
mov
pop
fistp
mov
push
pop
test
sbb
adc
outs
retf
mov
les
push
inc
and
sub
sub
imul
stos
mov
mov
push
push
out
mov
cmp
hlt
mov
adc
inc
daa
cli
div
add
pop
arpl
(bad)
retf
cmp
jmp
mov
xchg
scas
loopne
inc
sub
or
cmp
xchg
hlt
push
pop
mov
scas
push
mov
dec
inc
dec
push
push
pop
jmp
dec
lds
cmps
lea
mov
pop
mov
aas
shl
repz
pop
in
xor
fisttp
mov
jo
jecxz
or
cvttps2pi
clc
cli
xor
sub
int3
scas
push
push
js
xchg
popa
adc
je
ja
xchg
hlt
popf
aad
jle
sub
dec
inc
and
jae
lahf
xor
dec
mov
movs
pop
or
test
cmc
cmp
pop
inc
out
jnp
retf
loopne
scas
adc
les
add
jb
in
inc
retf
xchg
or
xlat
xchg
inc
push
pusha
or
dec
xor
add
outs
dec
inc
ins
pop
mov
and
dec
adc
lock
stos
add
add
cmp
ret
call
shr
mov
inc
fistp
lahf
xchg
call
sbb
test
xchg
scas
aas
mov
pop
lods
and
sub
iret
dec
sbb
cwde
push
int
pop
in
cmps
aas
rcl
adc
jle
pop
mov
push
test
je
div
dec
mov
pop
loop
popa
pinsrw
pop
ins
leave
pop
hlt
mov
add
or
push
daa
push
fiadd
adc
(bad)
sbb
test
std
rol
inc
hlt
loopne
xor
out
arpl
arpl
rcr
into
xchg
sub
pop
inc
mov
xchg
cmp
xor
dec
(bad)
out
(bad)
cmpxchg
sbb
dec
push
add
mov
gs
add
stos
jb
retf
dec
adc
fbstp
lea
inc
cvtpi2ps
idiv
xchg
xchg
pop
add
popf
mov
addr16
jne
js
(bad)
idiv
cmp
pop
jbe
dec
cmp
loopne
jno
add
fdiv
xchg
imul
adc
xchg
pop
out
fs
xor
adc
mov
and
inc
stos
aaa
jle
and
imul
sbb
in
sub
call
push
push
adc
jno
add
rcr
xchg
int3
cmc
jmp
je
xor
sbb
cwde
sbb
and
imul
mov
or
fist
scas
imul
shr
mov
mov
outs
sub
sbb
pushf
retf
pop
xchg
mov
dec
jno
jno
shl
mov
out
mov
cmc
mov
cmp
inc
sahf
lods
jb
sbb
fidiv
lock
iret
xor
cmp
(bad)
sub
mov
rcl
push
sbb
std
mov
xchg
jl
cdq
dec
push
add
cmp
push
xor
dec
fcom
scas
dec
popa
jle
pushf
jmp
fistp
icebp
fld
call
inc
scas
adc
xchg
ins
and
aad
out
xor
xor
sbb
mov
scas
hlt
mov
mov
inc
sbb
cmp
xchg
aam
pop
cmp
cmps
gs
cdq
sbb
mov
popf
lahf
data16
inc
add
xor
icebp
jmp
in
inc
loop
xor
mov
mov
adc
int3
xor
in
sbb
adc
pushf
push
push
lods
push
cli
pop
loope
dec
ret
cwde
popa
push
std
xchg
enter
into
fidiv
in
clc
pushf
mov
daa
sub
inc
leave
adc
js
inc
pusha
inc
enter
in
int
fdivp
popf
and
sbb
xchg
ror
movs
lods
popa
pop
inc
dec
adc
mov
pop
sub
daa
dec
popa
inc
pop
or
sbb
lock
jae
mov
(bad)
sahf
out
aad
lock
pop
ds
cli
(bad)
cdq
push
xchg
into
shl
cmps
xor
pop
in
or
ret
lock
cmp
mov
retf
(bad)
sub
js
cmp
sbb
movs
fcom
adc
sub
xor
push
xor
mov
xor
adc
cmp
nop
inc
stc
jl
mov
iret
mov
addr16
mov
inc
fcom
imul
movs
and
lds
mov
cmc
rcr
idiv
daa
add
loop
push
retf
jo
xor
add
ja
lahf
mov
icebp
test
scas
add
sbb
and
sub
mov
xchg
jecxz
push
xor
or
dec
lahf
fisubr
mov
pop
inc
shl
lahf
fild
mov
gs
push
clc
push
pop
sbb
inc
fcom
mov
enter
leave
cmp
push
loope
pop
sbb
movs
lea
mov
imul
nop
mov
adc
inc
shr
call
fist
cmp
inc
aam
(bad)
scas
add
mov
je
ins
jb
leave
push
jg
(bad)
nop
xlat
inc
fs
and
cdq
push
lods
add
(bad)
jp
aaa
xor
adc
outs
add
pop
push
jecxz
retf
mov
jbe
aaa
into
and
shl
xchg
lods
mov
ds
call
pushf
(bad)
mov
xchg
adc
test
push
push
fcomp
js
call
pop
push
or
or
icebp
mov
scas
inc
sti
(bad)
loopne
retf
in
jp
jae
jmp
mov
lgdtd
fwait
mov
(bad)
push
(bad)
sbb
mov
mov
aaa
mov
add
pop
icebp
sbb
cmc
bound
push
adc
cmp
sbb
into
adc
add
in
outs
scas
out
xor
xor
daa
hlt
jmp
xchg
xor
jne
or
sub
cmp
jecxz
aas
or
sbb
daa
mov
mov
lods
xor
sub
sub
jmp
lock
ror
out
push
add
pop
sti
and
call
xor
pop
jns
nop
cmp
shl
lock
xor
pop
add
call
mov
mov
pop
fidiv
imul
xlat
xor
jecxz
cmp
mov
scas
mov
push
jmp
inc
add
jns
push
jno
jle
and
out
adc
mov
fwait
popa
mov
cmp
pop
push
push
repnz
mov
jl
ja
adc
lea
repz
fnstcw
cld
shl
(bad)
or
pcmpeqb
iret
mov
cvttps2pi
add
test
mov
add
cmp
test
call
je
stos
pop
cmc
cmps
and
fimul
push
push
pop
fld
or
jmp
sbb
bts
push
test
pusha
movs
in
pop
lahf
sbb
imul
sbb
div
inc
and
pop
pop
push
arpl
adc
inc
sub
movs
cmps
test
mov
retf
stc
xor
psubd
cmp
push
add
xor
ud2
arpl
sub
(bad)
pop
dec
test
xchg
mov
pop
jmp
cmp
sbb
mov
rol
loope
pop
jmp
xor
rcl
pop
loop
fild
and
imul
rol
rol
mov
push
push
mov
dec
sub
lods
retf
xlat
pop
sbb
sbb
push
ds
push
sub
adc
fsubr
jp
cmp
add
fisub
xchg
lds
add
push
sbb
loope
push
clc
in
stos
push
fwait
jns
xor
shl
cmp
mov
in
jmp
push
xor
js
jg
mov
xchg
xchg
and
mov
jns
cli
inc
xor
daa
dec
push
mov
jb
cs
ss
call
xchg
jge
mov
fisub
push
pop
adc
xor
dec
fdivr
fcomp
sub
push
pop
out
mov
(bad)
in
cmp
jle
cs
mov
pop
mov
icebp
mov
mov
cwde
inc
push
mov
inc
bnd
push
mov
shl
mov
outs
mov
lods
mov
or
push
adc
xor
and
idiv
push
ja
ins
mov
jns
jae
and
ja
jmp
pushf
sbb
dec
pop
lock
daa
enter
add
cmc
test
ins
js
fst
inc
cmp
or
pop
(bad)
push
cld
test
movs
sti
sub
add
mov
es
mov
imul
xlat
(bad)
sub
xchg
cmp
dec
and
cld
jb
mov
stos
in
loope
test
jle
nop
mov
adc
inc
push
gs
xor
repz
cmc
int3
jnp
loope
sbb
movs
add
cmps
xchg
dec
push
push
pop
and
ficom
fs
out
sub
push
xchg
lods
adc
push
mov
inc
cmp
fdivr
jnp
daa
clc
test
jmp
dec
shl
and
dec
je
jne
enter
mov
and
or
mov
retf
sub
add
sub
rcl
pusha
xlat
enter
mov
lahf
stos
cmp
ds
daa
fisttp
mov
jnp
fwait
or
or
jge
dec
lods
pop
mov
dec
ss
and
ins
scas
and
jecxz
int3
lahf
lahf
mov
retf
or
sub
rep
out
dec
js
jecxz
mul
iret
cs
pushf
out
ds
xlat
fsubr
add
aad
pop
sbb
xchg
mov
cmp
in
pop
inc
mov
push
jns
mov
outs
mov
js
push
in
push
xor
int3
sbb
sub
xchg
call
sub
pushf
das
lock
pop
iret
ror
mov
js
dec
fldenv
scas
push
sbb
ds
mov
jge
sub
test
pop
cdq
fwait
hlt
xchg
aam
dec
dec
add
dec
dec
inc
push
fwait
das
jae
sub
fwait
daa
stc
jbe
and
xor
shl
mov
std
shl
(bad)
mov
pop
push
inc
sbb
hlt
rcl
mov
cmove
cmp
movs
call
mov
dec
mov
add
loopne
fwait
pusha
xchg
lock
or
fisub
into
xchg
mov
shl
stos
push
popa
add
in
sub
sub
in
xor
(bad)
push
jp
xchg
dec
outs
mov
mov
pop
out
mov
sub
ret
xor
add
jmp
fcmovb
inc
push
add
arpl
mov
in
out
stos
aam
(bad)
leave
das
out
in
popf
adc
(bad)
(bad)
lods
fs
inc
sti
shl
cmp
in
ds
pop
ins
jno
pop
jno
and
rcl
popa
fmulp
fcmovnb
retf
out
pop
sbb
mov
inc
mov
inc
out
cmps
shr
les
adc
xor
mov
loop
shr
jo
je
out
mov
addr16
jg
mov
repnz
and
rol
mov
sub
imul
ss
jne
rcl
stc
ins
pushf
das
lds
or
xorps
stos
mov
xchg
fist
mov
xchg
lahf
stc
cmp
(bad)
push
jmp
push
mov
sar
ret
sbb
or
jo
ins
retf
retf
xchg
mov
inc
(bad)
call
hlt
ret
pop
test
sbb
popf
outs
shr
xchg
jns
sub
mov
sub
icebp
clc
pushf
jmp
clc
movs
scas
inc
inc
dec
stos
and
dec
push
pop
outs
pop
loopne
loope
sbb
in
push
sti
lods
stos
les
lds
jbe
lods
pop
or
ins
mov
xchg
mov
stc
push
imul
mov
std
adc
mov
push
mov
inc
mov
push
push
dec
ins
out
fsub
and
ret
leave
mov
add
ficom
lods
jmp
pop
jp
mov
jecxz
and
icebp
ret
aad
or
rol
inc
ret
int
add
stos
mov
lock
dec
mov
arpl
dec
loop
(bad)
mov
sbb
pop
mov
(bad)
mov
ror
push
xor
ss
sti
jge
sub
jge
in
lods
xor
pop
push
add
fst
adc
scas
cmp
inc
jge
xor
rcl
mov
adc
xor
mov
adc
pop
adc
inc
scas
gs
or
test
idiv
sub
add
cmps
pop
test
xchg
scas
and
call
sub
addr16
movs
imul
jg
stc
xor
test
aam
mov
out
jecxz
ins
and
xchg
sahf
mov
sbb
rcl
push
fsub
into
add
aas
sub
ins
fld
sbb
mov
mov
out
ficomp
mov
fisttp
push
push
js
jbe
cmp
loopne
sbb
jge
mov
mov
jo
retf
test
adc
repz
xor
sbb
inc
cwde
jecxz
pop
rol
push
ins
aas
je
or
xchg
inc
(bad)
xor
mov
idiv
or
adc
mov
pop
mov
iret
pop
aad
out
lock
gs
jle
adc
pop
jmp
shr
out
adc
ds
and
mov
pop
jmp
add
mov
jno
fdiv
adc
fist
cmp
clc
mov
scas
pop
loopne
and
loop
test
clc
pop
mov
mov
dec
repz
cwde
lea
add
sbb
test
jno
cmc
sahf
cmps
test
push
add
ror
outs
mov
cwd
xchg
rol
dec
lods
ret
add
and
and
and
mov
cmp
movs
ins
imul
or
pop
or
mov
ror
xor
loope
js
outs
hlt
outs
mov
mov
lods
imul
or
mov
leave
cmc
pop
push
mov
std
add
or
int3
test
push
push
jl
push
and
jg
sub
xchg
inc
adc
or
sbb
adc
out
out
test
(bad)
iret
or
rcr
repnz
ret
xor
int
add
add
ret
fcomi
push
ins
xchg
ror
sub
pop
js
div
adc
out
movs
aaa
pusha
and
out
cmp
add
js
ffreep
pushf
out
jg
push
in
aam
dec
popa
ds
out
lock
ficom
add
inc
mov
into
hlt
scas
cld
adc
mov
xchg
jno
cmc
jo
add
mov
test
push
lock
pop
aad
out
mov
fisub
adc
arpl
es
mov
cmp
shr
push
mov
mov
mov
ss
cmp
hlt
movs
dec
cmp
icebp
imul
or
sbb
outs
mov
(bad)
sbb
push
inc
arpl
mov
fcom
push
pop
div
sbb
dec
loop
aaa
sbb
add
(bad)
cmp
sub
leave
fild
xlat
scas
and
add
leave
push
test
clc
mov
or
outs
pop
sahf
xchg
fstp
pop
xchg
mov
in
scas
lahf
and
jg
js
and
or
mov
lds
xchg
xor
xor
mov
loop
sub
jbe
(bad)
adc
stos
mov
jmp
xchg
sub
sbb
stc
je
(bad)
pop
cli
ins
bound
popa
arpl
jb
inc
mov
outs
cmp
(bad)
jae
mov
push
push
fdivr
scas
sub
leave
rcl
jo
sub
mov
shl
outs
or
clc
pop
mov
les
(bad)
(bad)
not
add
dec
add
std
jp
inc
lahf
inc
gs
adc
cmc
retf
push
aam
int3
clc
rcl
jmp
inc
call
loop
in
ins
and
sbb
xchg
popf
(bad)
cmp
sub
aam
pop
adc
pushf
cmp
push
rcr
pushf
sbb
mov
cmp
pop
inc
push
push
icebp
clc
add
imul
adc
les
adc
push
imul
inc
sti
cmp
lods
cmp
aaa
je
lea
cdq
pusha
push
test
pop
stos
fdivr
mov
jae
dec
pop
push
pop
out
push
nop
(bad)
or
adc
push
or
mov
inc
gs
inc
xchg
rcl
stos
test
and
aas
ds
test
mov
(bad)
and
cmp
mov
ins
test
and
sbb
cmp
pop
pop
xchg
sub
mov
std
shl
std
or
mov
sub
fdivr
int3
sub
outs
shl
xchg
add
and
test
sahf
xchg
sub
mov
xor
push
inc
data16
pop
shl
fbld
adc
(bad)
add
sti
jg
jns
xchg
je
loop
adc
xchg
fistp
lods
adc
mov
xchg
mov
gs
cmp
je
cwde
mov
lods
jmp
pop
fidiv
mov
outs
cdq
pop
fistp
push
and
(bad)
sbb
test
outs
in
cmps
in
mov
xchg
and
cdq
dec
outs
pop
jae
leave
gs
jo
aad
les
pop
repnz
push
popf
retf
dec
dec
outs
pushf
cmc
aaa
cmp
retf
pop
dec
pop
cmps
(bad)
fbld
mov
xor
mov
cdq
je
add
fmul
out
movs
pusha
mov
dec
xchg
leave
stc
sub
stc
xchg
pusha
push
jbe
sbb
lods
cmp
icebp
and
push
push
and
mov
hlt
mov
add
push
inc
push
cli
fidivr
inc
xor
xchg
stos
data16
loope
dec
ror
xor
shl
xchg
scas
pop
push
xchg
cdq
jne
adc
mov
in
stos
shr
xlat
mov
xchg
or
mov
sbb
add
inc
gs
(bad)
mov
daa
push
sbb
lea
xor
test
push
dec
imul
cmc
push
cmp
ret
mov
xchg
lock
mov
pop
aaa
imul
mov
mov
aas
adc
ins
sub
inc
not
inc
dec
mov
and
(bad)
sti
movs
inc
not
lahf
shl
iret
cmps
dec
loope
and
push
cmp
aas
cdq
scas
and
in
mov
inc
retf
or
xchg
sbb
test
data16
gs
sbb
dec
sbb
dec
cmp
and
mov
mov
cmc
pushf
or
adc
std
icebp
jecxz
shl
imul
or
push
mov
pop
inc
mov
mov
push
ins
pop
inc
or
mov
sbb
(bad)
mov
inc
xlat
pop
adc
inc
pop
in
outs
je
sar
data16
mov
sbb
xor
xchg
cwde
mov
push
pop
adc
scas
mov
lds
sbb
inc
aaa
sub
ss
push
arpl
mov
(bad)
and
push
dec
repnz
mov
sahf
imul
cdq
fisttp
repnz
cmp
movs
mov
stos
lds
mov
ins
add
pushf
or
jns
and
fsubrp
push
outs
test
loope
mov
(bad)
mov
push
lahf
aad
or
(bad)
sbb
add
xor
jno
retf
adc
imul
stos
xchg
ja
add
mov
test
enter
dec
rol
or
int3
mov
adc
cdq
sub
ss
inc
dec
pop
fld
hlt
mov
cmps
out
add
das
push
xor
lea
push
cmc
sub
push
sbb
test
cmp
loopne
movups
out
inc
cmps
mov
arpl
lahf
or
xor
test
mov
jg
and
push
inc
push
fild
xlat
hlt
loop
test
ja
cmp
fldcw
add
adc
mov
jae
ja
pop
aas
dec
dec
pop
in
and
shl
add
in
fisttp
xchg
ja
mov
ja
out
jecxz
sub
dec
adc
stos
dec
daa
fild
pop
adc
add
cmp
jge
sbb
mov
or
sar
pop
xchg
push
ss
repnz
sbb
jb
out
lods
and
and
into
xor
out
jl
cmp
mov
out
sar
out
jmp
push
push
ss
shufps
rol
cmp
pop
aam
push
in
pop
jge
loop
xor
jmp
ficom
or
dec
adc
scas
lods
xchg
data16
icebp
jle
xlat
lods
vmovntpd
scas
mov
push
(bad)
neg
scas
stos
pusha
and
dec
xchg
xchg
jmp
jp
mov
outs
jge
mov
jnp
mov
stos
mov
push
test
add
sti
mov
fs
clc
pushf
addr16
jmp
jbe
inc
mov
shr
lods
daa
call
scas
lahf
or
sbb
lea
(bad)
das
movzx
cli
(bad)
mov
test
je
rcl
test
add
pop
pop
sub
inc
pop
ror
les
sbb
mov
gs
sub
lock
mov
test
mov
inc
(bad)
cmps
rcr
movs
adc
aaa
es
rcr
fistp
fsubr
inc
clc
movs
fs
es
xor
sub
sbb
stc
mov
xchg
cmp
push
jmp
rcr
mov
inc
inc
adc
pushf
dec
jge
mov
or
mov
and
mov
icebp
clc
jns
test
dec
xchg
mov
ret
pcmpeqw
push
push
or
cmps
loope
out
jmp
icebp
jae
adc
mov
mov
sub
imul
inc
ret
adc
jmp
loope
fs
sub
jne
call
and
inc
mov
lock
or
fidivr
call
cwde
push
sbb
ret
daa
pop
es
test
cmps
(bad)
mov
sub
(bad)
fwait
shl
inc
mov
mov
pop
cdq
and
test
adc
scas
jns
pop
pop
mov
in
add
loopne
les
pop
fstp
sub
push
push
mov
add
mov
xchg
inc
lock
pop
lahf
xchg
imul
addr16
mov
push
test
adc
xor
not
fwait
jb
dec
or
out
xchg
mov
in
ja
ins
pop
mov
sar
mov
mov
or
fnstcw
mov
movs
cmps
dec
xchg
mov
inc
loope
arpl
mov
mov
adc
xor
jnp
xor
push
dec
fidiv
mov
stos
inc
cs
rol
cld
sub
cmc
jns
fsave
fist
adc
pcmpgtw
dec
cdq
lods
mov
add
adc
js
loope
jns
mov
dec
iret
xchg
(bad)
fld
in
xchg
dec
xchg
ret
xchg
cmc
inc
adc
popa
sbb
aaa
in
cmp
or
xor
out
jns
and
das
dec
(bad)
pusha
jge
cli
jns
imul
and
out
dec
loope
stos
mov
sub
push
sbb
xchg
loope
inc
daa
shl
fnstcw
sti
outs
(bad)
loopne
xor
dec
or
mov
lock
inc
push
in
clc
cwde
and
push
mov
inc
sub
aam
mov
sub
test
fs
or
mov
mov
xor
xor
xor
xchg
mov
mov
jbe
int3
fstp
add
int
cmp
push
or
outs
mov
pop
fcom
dec
mov
cmp
jmp
jp
bound
pop
or
in
xchg
cld
retf
aas
jns
pop
adc
xor
mov
inc
mov
mov
mov
aas
mov
mov
(bad)
cdq
mov
pop
or
push
pop
js
jns
lods
fadd
nop
mov
lods
cmp
or
les
cdq
xchg
fmul
jbe
aad
das
dec
jmp
mov
pop
cli
adc
cmp
adc
xchg
pop
call
sub
xchg
mov
icebp
icebp
movs
fstp
or
outs
movs
(bad)
clc
leave
and
xchg
xor
xor
mov
xchg
adc
dec
sbb
int
add
sub
fsub
pushf
iret
mov
xor
jmp
lods
jl
int3
arpl
xchg
loop
push
or
enter
jno
es
sbb
push
test
adc
jo
pop
lea
leave
push
shl
mov
dec
mov
rol
sbb
les
das
mov
jg
jmp
(bad)
aas
jg
inc
mov
mov
sbb
int3
push
mov
jnp
cdq
sbb
int3
mov
jnp
xchg
scas
adc
out
lock
fdivr
test
mov
mov
rcl
jne
cmp
lods
and
pop
pop
sti
ja
stc
(bad)
or
xor
popa
push
inc
mov
push
xchg
pop
aam
mov
cmp
pop
icebp
pop
scas
inc
xchg
test
lock
out
jmp
ror
ret
fimul
or
push
pusha
mov
mov
adc
pop
or
dec
push
mov
outs
call
push
adc
dec
xchg
cmp
mov
pop
cmps
dec
stos
lods
sbb
xchg
daa
mov
pusha
lds
std
push
mov
fwait
adc
popa
std
push
rcr
idiv
popf
mov
add
loope
add
inc
inc
push
in
in
fs
dec
mov
fnsave
stos
xchg
push
mul
jmp
xchg
out
or
imul
ficom
nop
xchg
sbb
ins
xor
sub
cmps
or
mov
lea
or
sub
xchg
fnstsw
xor
cs
(bad)
fnstenv
dec
enter
in
mov
icebp
mov
xchg
fs
adc
adc
mov
mov
movs
(bad)
in
pop
mov
pop
dec
test
test
sbb
inc
div
and
or
mov
push
mov
(bad)
pusha
mov
jmp
stos
hlt
mov
push
loopne
and
push
xor
movs
mov
jne
inc
in
lock
push
fild
pop
push
cmps
stos
ret
adc
add
loope
and
inc
mov
mov
and
(bad)
mov
ss
das
mov
gs
push
rcl
(bad)
daa
push
cmp
jg
leave
imul
mov
adc
cmc
movs
sbb
(bad)
push
aad
inc
js
jmp
mov
xor
or
clc
(bad)
jle
stos
lock
mov
in
xchg
ror
sbb
jae
xor
adc
lock
imul
jmp
adc
fcmovu
iretw
sbb
dec
pushf
cmp
pop
push
xor
inc
sti
adc
xchg
out
xor
ins
mov
mov
scas
iret
dec
push
lods
pop
fmul
mov
fs
push
bound
sbb
mov
dec
sbb
pop
cmps
ins
test
pop
int3
int
push
mov
mov
ins
add
test
mov
push
lock
int3
out
aaa
scas
loope
repnz
mov
gs
out
mov
push
sub
popf
enter
mov
ja
pop
inc
jmp
or
mov
and
stos
in
push
pop
sub
mov
mov
ja
push
sbb
fdivrp
jns
adc
neg
pop
adc
int3
push
jnp
cli
inc
cmp
jge
add
(bad)
imul
mov
cli
xchg
adc
mov
(bad)
fstp
cmp
mov
and
call
inc
push
ins
jge
and
test
lahf
loopne
push
sar
lea
jbe
mov
mov
loop
push
cli
push
mov
(bad)
data16
push
or
inc
sti
mov
inc
adc
cld
pop
enter
movs
dec
ds
xor
hlt
es
int
data16
pop
add
xor
pusha
mov
jne
lods
(bad)
and
pop
push
retf
popf
popa
sahf
adc
dec
fld
ss
cmp
push
pop
in
movs
aam
add
mov
aam
call
mov
add
retf
fdivr
pop
mov
dec
addr16
enter
add
dec
dec
xor
js
les
sbb
adc
jge
push
int
(bad)
retf
sbb
pop
inc
stos
dec
imul
add
fnsave
xor
xchg
push
cmp
scas
cld
(bad)
push
push
or
jae
ja
mov
int
(bad)
and
out
pop
or
dec
ja
push
jbe
rol
jp
mov
or
(bad)
jbe
aam
sar
push
pop
pop
imul
mov
jnp
loop
push
mov
jne
push
mov
repz
pop
rcl
fsub
(bad)
cmp
rcr
enter
ja
pop
jp
daa
sbb
or
adc
mov
call
test
jmp
clc
ds
into
fbld
enter
test
sbb
jno
scas
jno
int
movs
in
xor
iret
sar
aad
sbb
inc
cdq
adc
and
cmp
leave
dec
and
jb
adc
mov
(bad)
fldcw
or
sbb
push
cwde
cmp
dec
dec
sbb
cwde
dec
lahf
add
mov
mov
inc
icebp
addr16
xor
push
call
dec
cmp
mov
pop
dec
fdivr
adc
sub
mov
dec
mov
mov
fistp
sar
and
imul
fadd
jp
rcl
sub
outs
lahf
add
(bad)
xor
mov
retf
adc
push
mov
movs
jne
cmc
(bad)
xor
mov
daa
sub
repz
icebp
mov
sti
je
jo
sti
pop
psllw
xor
dec
pop
inc
adc
add
mov
jge
scas
pop
mov
(bad)
dec
inc
jno
test
ret
iret
(bad)
xor
adc
aad
rol
pushf
out
das
pop
test
out
sahf
push
test
xchg
das
out
mov
test
adc
ins
sbb
loopne
and
cdq
scas
adc
xchg
cli
lds
cld
je
cwde
loopne
lds
mov
test
inc
sub
aas
or
adc
push
pushf
inc
test
cmp
push
fldenv
jo
push
mov
sub
mov
mov
pusha
lods
pop
aam
sub
sti
cwde
inc
dec
and
adc
scas
sti
inc
outs
cmc
iret
imul
add
mov
push
mov
int3
jge
imul
lods
inc
mov
adc
mov
call
repnz
or
icebp
mov
jne
seto
retf
ins
adc
and
xor
out
adc
fadd
xor
mov
(bad)
adc
push
(bad)
and
(bad)
cmps
out
mov
push
pusha
fmul
dec
mov
push
(bad)
mov
pop
lds
in
sbb
fs
push
out
pop
add
ins
push
mov
fsubp
add
mov
iret
mov
fs
std
popa
cmc
sbb
(bad)
push
sbb
jge
sbb
jno
pop
or
je
jns
aam
or
or
dec
shr
pop
outs
les
xor
cmp
stos
or
outs
or
inc
push
jp
(bad)
daa
or
jno
adc
mov
mov
mov
mov
xchg
int
movs
cmp
(bad)
xor
cli
dec
dec
ror
loop
ins
stos
inc
cli
mov
outs
fmul
mov
mov
sar
pushf
in
fnstenv
inc
not
jo
push
retf
out
mov
dec
test
addr16
jmp
jp
push
test
(bad)
jg
xchg
dec
or
mov
aas
or
push
jmp
arpl
(bad)
popf
fimul
cmp
(bad)
cli
xchg
sbb
cmp
jg
stc
sahf
into
cmp
jns
mov
cmc
mov
nop
jns
das
xchg
cmp
push
js
mov
repz
jo
mov
push
mov
push
add
test
dec
add
push
imul
stos
xor
cmps
shl
ins
loop
jmp
and
pop
xor
xchg
neg
sbb
aaa
fsub
aam
xor
fist
mov
push
cwde
mov
lds
push
xchg
xor
mov
sub
icebp
dec
js
test
movs
idiv
add
sahf
jg
clc
jle
fistp
jle
movs
sub
ja
pop
xchg
test
loope
mov
mov
pop
test
cmp
mov
xchg
mov
lods
dec
arpl
icebp
xchg
dec
fidiv
pop
enter
pop
in
nop
inc
cmp
xor
add
pop
test
xchg
icebp
xor
xor
stc
or
pop
push
mov
in
mov
or
and
xor
mov
cmp
scas
pop
cmp
clc
push
dec
jnp
adc
sar
or
or
push
ds
jmp
mov
out
sbb
push
xchg
cwde
es
fs
inc
push
mov
aad
mov
neg
jae
lds
fistp
out
in
adc
nop
jbe
adc
pop
dec
adc
xchg
aam
pop
test
add
pusha
add
ss
add
jg
dec
xor
xchg
ror
and
retf
add
lea
js
int3
sbb
jp
dec
or
pop
xchg
mov
jbe
adc
ins
push
or
jmp
pop
in
arpl
bnd
ret
lock
inc
fcmovnb
sbb
inc
loopne
leave
jmp
ret
mov
(bad)
mov
arpl
sub
add
dec
mov
cmc
push
icebp
mov
rcr
mov
cmps
pusha
cld
and
out
xor
stc
sbb
add
dec
fsubp
cs
and
sar
cmp
popf
je
cmp
push
jns
jbe
adc
outs
cmp
retf
push
sub
int3
es
dec
or
clc
ja
xchg
jecxz
dec
cmp
push
mov
xor
pop
and
call
mov
cld
(bad)
adc
pop
call
add
cmp
adc
mov
xlat
cmp
push
sbb
push
out
lock
into
xchg
fcomp
daa
aaa
jne
outs
pop
push
js
in
push
dec
push
inc
dec
dec
adc
jge
imul
pop
mov
inc
in
inc
mov
mov
nop
outs
lods
fcomp
pop
lahf
fnstsw
movs
cmp
xor
jns
inc
shufps
xchg
mov
adc
pop
rcr
dec
das
adc
fmul
sub
pop
ins
sahf
jnp
sub
nop
adc
mov
popf
fild
out
enter
inc
shl
mov
sbb
or
out
lahf
sbb
cmp
stc
inc
loop
inc
push
pop
out
cs
mov
adc
push
(bad)
out
ficomp
mov
sar
mov
jmp
sub
rol
movs
pop
ins
into
mov
xchg
mov
nop
xchg
ins
gs
xchg
nop
mov
mov
rep
cdq
(bad)
fadd
mov
and
imul
loopne
pop
fs
sbb
fbstp
jg
sar
lds
rol
jmp
jp
push
mov
mov
mov
or
pop
inc
(bad)
stos
jmp
inc
cmp
jecxz
enter
dec
pop
jnp
out
sub
cmps
shl
jge
call
test
test
in
or
loop
and
in
rol
and
jp
push
inc
dec
in
loope
push
cld
adc
dec
test
or
stos
mov
cdq
or
inc
or
cs
mov
inc
add
repnz
push
sub
stos
add
out
or
idiv
mov
cwde
add
out
mov
adc
pop
sub
xor
popa
xor
ror
and
dec
aam
es
in
(bad)
push
push
jno
cmps
cmps
push
add
xor
test
cwde
or
inc
into
pop
ja
popa
ins
xchg
call
call
int
add
cmp
enter
and
movs
push
mov
and
xchg
jle
cmp
xor
xor
jae
xor
cmp
call
adc
adc
icebp
jmp
push
pop
cmp
ret
mov
jmp
add
lea
cmp
(bad)
loope
fiadd
sbb
(bad)
loope
sub
mov
in
cmp
xchg
sub
repz
jmp
test
mov
fisub
mov
out
shl
ret
add
shl
mov
clc
ror
js
fsub
xchg
call
and
lods
or
mov
xor
mov
push
mov
push
jg
or
mov
(bad)
jb
ss
mov
xchg
sahf
dec
mov
aad
test
xor
das
push
js
loope
jns
push
cdq
(bad)
pop
or
ins
mov
daa
ret
(bad)
fwait
xor
(bad)
mov
je
cmc
test
fnsave
sahf
push
call
cwde
dec
jmp
sbb
inc
pop
fld
loope
push
push
add
ror
ss
and
in
dec
cmp
cld
xor
push
lods
sub
and
mov
jno
faddp
mov
xchg
pop
je
jae
shl
and
call
icebp
push
popa
hlt
sbb
sti
pop
push
mov
jb
into
imul
not
loop
push
cmps
push
cwd
jmp
jns
add
sti
fdivr
pop
cwde
mov
push
fs
and
loop
add
or
cs
into
jno
xlat
das
or
pop
fiadd
ror
jecxz
shl
les
fstp
or
mov
sub
push
sbb
push
push
mov
push
push
scas
fbld
pop
xlat
xchg
out
js
mov
adc
mov
out
(bad)
shr
js
jbe
aad
outs
push
mov
neg
jbe
(bad)
xlat
ja
sub
leave
mov
inc
nop
sub
test
jb
sub
add
xchg
xor
cmps
sbb
pop
ds
mov
push
gs
jg
aad
mov
cmp
and
retf
push
jnp
dec
ret
mov
mov
sbb
xchg
push
aaa
xchg
jge
adc
repnz
jno
sahf
push
(bad)
mov
sub
lods
jge
fldlg2
and
aam
lods
xchg
and
or
xchg
adc
in
or
pop
dec
in
jbe
jmp
movs
iret
jne
fs
sti
and
pop
xor
pop
enter
xor
mov
push
fsub
int3
shl
sbb
sub
iret
imul
ret
jb
add
dec
pop
pop
xchg
or
outs
sub
push
inc
sub
add
lahf
xchg
sub
cmp
or
rcl
sub
pushf
ret
out
aam
mov
das
push
in
fwait
and
xor
push
add
fcomp
stos
mov
dec
imul
addr16
sub
sbb
bound
xchg
cmc
loop
cld
add
sub
clc
mov
cmp
add
xor
fistp
push
sti
pop
icebp
pop
rol
inc
xchg
xchg
mov
jnp
ins
call
adc
cmp
cmp
inc
and
xchg
cmp
pop
dec
scas
into
jmp
imul
xchg
add
mov
repz
push
mov
and
push
mov
test
dec
or
pop
jg
imul
dec
xchg
rcl
retf
xor
push
retf
ins
pop
and
jmp
inc
dec
int
jmp
jge
sub
icebp
xlat
jp
cmp
and
mov
scas
loopne
sbb
mov
mov
dec
int
dec
ds
xor
inc
cmp
and
push
jmp
stc
icebp
call
and
test
and
mul
mov
scas
stos
mov
push
sub
sahf
mov
ret
arpl
addr16
cs
mov
xchg
push
out
adc
jg
xchg
scas
mov
jmp
jb
jg
je
xor
sbb
lds
sub
nop
cmps
std
sbb
ror
ds
inc
loop
test
test
mov
mov
ss
nop
fwait
sub
mov
dec
ja
enter
and
jne
sub
jmp
sbb
add
mov
xchg
push
sub
inc
popf
fcomp
push
rcr
fs
test
pop
jmp
pop
outs
jle
mov
cdq
aas
adc
movs
out
(bad)
aam
dec
jg
rcl
es
inc
xor
fcom
inc
movs
push
mov
es
ret
cmps
call
adc
test
fadd
jbe
outs
cmp
stos
(bad)
aas
cmp
aaa
cs
fs
adc
inc
into
daa
sbb
mov
fcmovu
jg
out
mov
nop
das
and
xor
jnp
rcr
mov
imul
call
sbb
or
xor
push
dec
pop
push
sub
std
jl
push
mov
dec
jle
pop
stos
or
fist
sar
push
adc
and
xor
cmp
xchg
test
outs
out
imul
jmp
addr16
jb
shl
jge
sub
aam
push
cmps
jns
icebp
cld
adc
js
ret
push
push
and
xchg
pop
jbe
sub
repnz
inc
push
cmp
jecxz
fidivr
addr16
fstp
and
add
jecxz
add
loope
lock
add
push
fld
xlat
jmp
inc
lahf
mov
sub
push
xor
icebp
and
pop
iret
fst
mov
cwde
les
enter
mov
adc
or
pop
push
push
jle
repnz
xor
adc
xchg
(bad)
push
shl
mov
stc
sub
jae
push
(bad)
sti
sub
pop
push
mov
pusha
jne
outs
aam
cld
in
out
mov
xchg
dec
push
sbb
div
div
and
or
(bad)
sub
adc
fwait
cmc
(bad)
dec
cmp
and
div
nop
mov
cmp
test
aaa
inc
xlat
dec
push
inc
push
pop
lods
movs
or
xchg
jle
push
test
test
loop
sbb
sbb
fwait
icebp
mov
(bad)
loopne
out
out
jge
int
dec
mov
adc
xchg
cmp
retf
cwde
cdq
sub
push
push
push
out
sub
fwait
xor
(bad)
lds
popa
sub
(bad)
mov
ss
hlt
mov
jbe
jae
mov
test
jmp
nop
xor
push
pop
setnp
adc
lods
cdq
retf
sbb
and
xchg
clc
stos
lods
shr
jmp
out
rcl
cmp
les
sub
pusha
pop
aad
pop
jle
mov
push
fwait
push
cmp
mov
mov
call
mov
cld
(bad)
pop
out
dec
mov
dec
hlt
iret
or
int
xchg
scas
(bad)
push
mov
adc
cmp
dec
pusha
nop
pop
mov
into
mov
and
push
in
inc
mov
fs
mov
scas
and
(bad)
xor
lds
je
shl
mov
enter
jg
(bad)
add
jae
into
push
xchg
aas
xchg
jo
pop
add
ret
ins
and
lea
lahf
shl
popf
mov
cwde
pop
mov
pop
and
xchg
push
inc
fiadd
mov
and
in
dec
cmp
xchg
xor
dec
mov
fwait
and
test
cmp
jb
cmp
(bad)
pop
xor
jl
adc
aam
xor
shr
jle
outs
mov
lea
jge
inc
repnz
adc
movs
xchg
adc
or
pop
lods
retf
mov
out
int3
mov
pop
cmc
add
mov
out
xor
xchg
push
dec
pushf
xchg
xlat
icebp
in
leave
sub
aas
sbb
(bad)
xor
es
mov
into
cmp
jecxz
sub
or
ja
out
ficomp
xchg
add
adc
and
mov
(bad)
or
fisubr
int3
xor
ins
shr
inc
popa
inc
rol
daa
out
cmp
lods
push
add
rcr
xchg
div
sbb
loope
pushf
fnsave
stc
clc
lds
mov
push
clc
mov
aam
push
jmp
pop
test
sub
(bad)
xlat
sti
add
ins
inc
adc
add
mov
xor
push
cmp
push
iret
in
jnp
clc
add
mov
jns
jno
xor
mov
jae
mov
cmp
sub
sub
xor
movs
mov
sub
sub
sub
xor
xchg
pop
in
outs
out
stos
or
sub
xchg
fisubr
je
mov
mov
mov
jmp
jg
lahf
xchg
xchg
imul
jbe
xchg
jl
xlat
ret
icebp
push
test
sahf
push
or
push
jle
or
mov
jno
in
pop
jbe
lahf
sbb
sub
dec
inc
sbb
jg
pop
cmc
fwait
xor
je
out
push
outs
push
jle
fisttp
sbb
enter
cli
mov
rcr
push
adc
gs
cmp
inc
scas
scas
inc
add
pusha
fwait
leave
jb
fisttp
push
outs
and
loop
loopne
fisubr
(bad)
in
inc
fnsave
cmps
daa
ret
xor
inc
(bad)
jp
add
sbb
adc
fwait
mov
bound
inc
icebp
xor
pop
cmp
push
cdq
ret
push
pop
push
test
lods
push
mov
fimul
sub
sbb
jle
loopne
sbb
push
sub
mov
pop
xor
mov
lock
mov
inc
gs
jge
fistp
mov
inc
std
adc
scas
mov
push
mov
ins
mov
mov
dec
inc
lock
out
cmps
es
inc
or
popa
std
xor
mov
cld
test
sti
xor
test
inc
sbb
mov
loope
cmp
mov
mov
loopne
(bad)
or
or
sub
xchg
arpl
in
loope
push
mov
stos
xchg
add
mov
int
xor
or
add
xchg
push
and
cmp
mov
mov
sub
outs
mov
lods
mov
inc
shl
ror
femms
jb
inc
mov
mov
pop
jmp
sar
mov
dec
sbb
or
push
and
ret
shr
add
ret
pop
ss
cwde
dec
sub
addr16
jne
inc
fs
repz
out
mov
jecxz
push
lds
in
adc
popf
(bad)
pop
cli
scas
fdivr
add
inc
and
xor
int
dec
cmp
xchg
(bad)
rep
stc
or
sub
scas
scas
sbb
cli
out
cwde
retf
and
jle
(bad)
div
out
xchg
dec
adc
adc
mov
adc
aad
xor
mov
or
outs
pusha
push
mov
cdq
dec
lock
and
leave
nop
mov
rcl
retf
xchg
add
push
pop
dec
push
sbb
add
fistp
xchg
repnz
inc
dec
mov
hlt
call
retf
neg
mov
and
pusha
sub
jl
clc
ficomp
dec
(bad)
mov
je
xlat
mov
xchg
xor
mov
pop
adc
mov
(bad)
retw
cli
loop
(bad)
(bad)
in
xor
xor
(bad)
(bad)
xchg
add
shl
(bad)
in
in
pop
aas
aaa
into
(bad)
cmps
pop
mov
or
xchg
lock
scas
push
pop
repnz
cmp
mov
or
sub
(bad)
xchg
call
xor
push
mov
jp
jne
xchg
add
mov
std
and
(bad)
fisub
lds
pop
std
jecxz
jb
push
arpl
sub
push
das
test
jmp
pop
pop
mov
leave
js
mov
repz
in
pop
retf
int
movs
mov
mov
cmp
outs
xchg
addr16
bound
jnp
and
and
dec
pop
push
or
fsubr
mov
xor
or
xchg
mov
loope
loope
or
(bad)
xor
mov
inc
jno
push
jl
mov
test
inc
push
arpl
xchg
imul
pushf
dec
sbb
inc
sahf
pusha
imul
mov
sar
dec
cwde
adc
and
loopne
into
test
out
movs
ss
in
cmp
mov
mov
sti
retf
out
mov
dec
or
sub
ror
or
sbb
(bad)
jae
cmp
cmc
mov
sub
lea
mov
hlt
jae
cwde
jo
mov
shl
mov
mov
popa
popa
cmps
xor
gs
aad
dec
jp
fstp
daa
xor
jns
popa
sbb
xor
add
cmp
sub
push
pop
clc
addr16
scas
fiadd
mov
sub
sbb
pop
fwait
inc
mov
xor
test
and
inc
jp
inc
aad
movs
jns
jmp
xchg
mov
(bad)
sub
mov
mov
inc
fist
int3
cmp
bound
(bad)
retf
lock
mov
enter
adc
ins
in
(bad)
mov
pop
cmps
lods
push
nop
cmps
or
fidiv
fwait
jmp
xor
mov
nop
and
xchg
xor
dec
sub
out
int3
sub
mov
or
inc
xchg
call
or
retf
outs
sbb
pop
(bad)
outs
(bad)
add
fs
cld
push
clc
pop
add
xor
(bad)
out
add
mov
out
add
cmps
test
adc
jmp
ins
jle
(bad)
xchg
lea
push
jne
mov
sub
pop
push
nop
xchg
test
es
push
dec
xor
(bad)
mov
retf
test
pop
ss
push
mov
fild
mov
aas
cmp
sar
in
je
jp
dec
cmp
jne
sub
xchg
pop
js
shl
out
pusha
mov
mov
pop
mov
jmp
mov
and
lock
jmp
(bad)
jb
add
dec
mov
pop
into
inc
pop
or
pop
xlat
add
and
jp
nop
inc
pop
cmp
push
std
or
and
in
call
inc
cdq
movs
test
leave
scas
pop
(bad)
fdivr
loop
test
and
mov
hlt
push
fst
mov
jns
jae
outs
push
mov
bound
sub
xchg
outs
int3
cmp
cmp
cmp
ds
call
mov
ins
hlt
xor
cmp
(bad)
dec
pop
push
stos
shr
xchg
repz
lock
dec
cdq
add
jg
inc
jg
daa
mov
fild
sbb
cwde
(bad)
push
add
into
cmps
leave
xlat
dec
mov
aad
dec
ret
adc
and
push
inc
sar
dec
inc
aaa
jns
in
in
pop
add
mov
push
or
les
inc
xchg
xchg
shl
(bad)
xor
ficomp
popf
jmp
dec
dec
sbb
xor
xchg
mov
inc
repnz
xor
in
dec
mul
(bad)
dec
(bad)
mov
leave
sti
inc
mov
sub
xchg
ror
test
ret
sbb
xor
aas
cmc
and
in
and
aaa
jge
xchg
jmp
mov
cli
push
cmps
mov
cmp
adc
adc
mov
xchg
pop
(bad)
jnp
push
sbb
jno
push
lods
fstp
pop
push
fisttp
sbb
push
fst
sub
jno
pop
arpl
dec
leave
loopne
dec
fnstcw
lods
les
ja
jmp
(bad)
xchg
xchg
sbb
lods
enter
bound
sbb
xlat
inc
arpl
push
ror
fwait
mov
and
mov
repnz
sar
in
cmps
loopne
mov
cli
daa
add
aaa
leave
into
mov
mov
cli
jl
popa
xchg
pop
ins
bound
mov
popa
add
mov
jb
sbb
mov
mov
pop
adc
in
sahf
je
xchg
mov
mov
sub
jo
mov
ror
cmp
cmp
aaa
daa
loopne
inc
pusha
les
dec
push
and
sub
xchg
jle
adc
fisubr
mov
jns
stos
rol
jle
dec
cmps
adc
mov
scas
es
arpl
retf
adc
sbb
lea
add
ja
xor
popa
rcl
mov
leave
push
daa
add
cmc
retf
mov
mov
dec
xor
mov
pop
retf
cmp
add
nop
ret
ins
push
ret
pop
into
xchg
lock
or
pop
loope
pop
shr
push
xchg
mul
pop
cmp
cmp
lahf
inc
sub
sub
test
mov
mov
jmp
std
sub
(bad)
cmp
jg
cli
mov
mov
xchg
pop
test
(bad)
dec
fcmove
out
mov
outs
enter
cmc
lahf
(bad)
popa
mov
mov
es
mov
in
push
movs
and
test
ds
pop
mov
or
dec
mov
xor
outs
cmc
add
icebp
(bad)
xchg
xchg
cmps
test
cmp
fadd
test
sti
fmul
punpckhbw
jmp
and
imul
inc
mov
dec
cpuid
inc
into
adc
mov
jge
div
test
and
cmp
or
xchg
je
repz
pop
nop
jo
add
xor
test
nop
call
jge
fimul
clc
cmp
repnz
inc
inc
aas
ret
mov
popf
iret
jb
mov
push
ja
dec
pop
inc
cdq
ret
repnz
sub
movs
push
dec
fnstsw
psubsb
push
je
lahf
mov
jecxz
stc
push
adc
jl
adc
je
rcr
popa
add
dec
adc
test
dec
inc
dec
add
or
jecxz
ret
ja
dec
xchg
adc
sub
mov
data16
repnz
scas
fisttp
stc
lods
ja
dec
add
jae
mov
std
pop
and
shl
mov
mov
mov
mov
mov
pop
ja
pop
(bad)
repz
lahf
cmc
mov
imul
mov
xchg
mov
aas
sub
sbb
fs
xchg
int3
shl
mov
push
aas
add
pushf
pop
rcr
inc
jne
mov
mov
and
mov
jmp
dec
push
add
gs
inc
mov
dec
or
outs
cmp
inc
sub
repz
mov
sub
aad
pop
pushf
cmp
push
push
(bad)
call
mov
mov
and
fsub
mov
test
fst
retf
adc
fs
iret
jmp
pop
pop
sahf
cmps
stos
inc
push
lock
jg
cmp
xor
xor
(bad)
daa
mov
or
cmp
leave
dec
not
adc
clc
lock
mov
xor
cwde
es
xor
in
loop
push
mov
cmps
pushf
je
sbb
jge
mov
in
sbb
mov
inc
mov
push
push
xchg
push
pop
lods
xchg
arpl
std
rcr
lods
sub
inc
jmp
call
push
mov
mov
sub
jae
int3
(bad)
pop
leave
imul
(bad)
movs
pop
push
jp
(bad)
mov
out
jb
fwait
or
gs
and
setp
ja
mov
adc
sar
inc
repz
cli
push
imul
push
xor
jnp
add
adc
push
aad
push
jmp
jmp
xchg
retf
mov
fmulp
jp
rep
fs
or
ins
data16
aas
rcl
mov
leave
xor
ror
stos
push
push
shl
mov
(bad)
push
xchg
sbb
les
lock
inc
add
jb
jecxz
add
js
pop
loopne
movs
jg
sbb
fcmovu
pop
add
xor
adc
les
retf
pop
iret
sub
cwde
addr16
mov
cmc
into
mov
mov
xchg
call
pop
and
sub
xchg
js
cdq
daa
sbb
stos
aas
popa
mov
call
sbb
ds
mov
sub
pusha
fs
nop
sbb
xchg
sbb
scas
inc
mov
and
xor
test
test
sbb
dec
inc
call
outs
pop
pop
call
into
pop
dec
mov
shl
push
shl
sub
arpl
xchg
mov
dec
xchg
loopne
mov
pop
jecxz
pop
call
cmc
cs
mov
cmp
stc
lock
jb
or
mov
cld
hlt
retf
push
mov
cmps
imul
daa
cmp
sar
loopne
neg
ja
fs
mov
out
stos
or
adc
call
mov
(bad)
mov
cmp
mov
clc
into
stc
ds
int
mov
ins
and
outs
mov
js
shl
ds
add
int
popf
mov
pop
test
and
cmp
xor
cli
push
cs
cs
pop
add
in
xchg
cs
mov
xchg
test
mov
cs
push
jns
or
fsub
lea
fcmovne
xor
push
mov
gs
lods
push
mov
fisttp
js
aam
nop
sbb
leave
jb
dec
test
xchg
jecxz
inc
mov
lods
fld
mov
shl
or
dec
cmp
sbb
test
cmp
dec
mov
and
test
mov
and
pop
daa
pop
pop
mov
cmp
xchg
leave
stos
xchg
fst
pop
mov
adc
sbb
(bad)
mov
ins
dec
std
ficomp
pop
cmp
push
leave
cmp
dec
and
arpl
scas
sahf
sbb
loope
push
pushf
ret
inc
jmp
mov
sub
test
push
adc
ror
xor
xchg
mov
movs
xor
cld
sbb
enter
les
outs
in
repz
test
rcl
das
pop
mov
inc
out
mov
sub
mov
xor
dec
cmps
xchg
pushf
lds
out
data16
add
jb
aad
outs
iret
and
pop
cmc
(bad)
or
test
sub
retf
pop
mov
push
bound
adc
es
adc
fld
daa
(bad)
and
jg
rcl
inc
dec
push
mov
inc
out
pop
pop
sbb
pusha
js
adc
cmps
pop
pop
dec
mov
xchg
cli
repz
cdq
vmwrite
jl
cli
inc
xor
mov
imul
mov
out
cmp
jmp
or
clc
xor
sbb
stos
inc
(bad)
das
mov
xchg
xlat
cmps
push
push
pop
sub
mov
out
in
lahf
jns
fcomp
in
pop
push
and
outs
mov
aam
push
and
xchg
ins
fild
sub
movs
rcl
push
int3
iret
fwait
mov
scas
test
(bad)
js
jne
les
or
cli
jecxz
mov
jno
xchg
add
push
push
stos
retf
in
mul
iret
mov
or
dec
sar
fidiv
mov
mov
adc
push
lods
push
or
pop
daa
cmc
cmp
mul
cdq
shr
lahf
or
mov
mov
push
mov
push
(bad)
pop
and
push
shl
in
xlat
rcl
xor
inc
mov
dec
sub
arpl
or
sbb
fld
in
inc
popf
ss
retf
aad
push
cmp
jl
retf
add
fisttp
xchg
and
mov
mov
or
mov
xlat
inc
xor
xchg
aad
jmp
pop
sub
mov
sub
pop
push
cmps
mov
add
test
push
jg
rcl
or
(bad)
mov
jg
es
pusha
iret
jno
push
and
shr
(bad)
out
mov
and
xor
repnz
push
into
arpl
outs
jp
mov
adc
std
cmp
mov
push
daa
ds
jl
add
and
mov
leave
(bad)
add
fstp
xchg
das
xor
cmp
or
pop
clc
add
int3
stc
arpl
ficomp
xchg
imul
lahf
ret
jmp
shr
jb
adc
shr
enter
iret
shl
push
push
retf
outs
iret
jno
pop
test
push
lds
ror
dec
sti
hlt
dec
dec
outs
jns
fwait
das
loop
loop
retf
adc
in
push
sbb
aam
dec
leave
pop
loopne
in
adc
cwde
cmp
xchg
es
(bad)
cmp
dec
lock
adc
arpl
aaa
gs
pop
cmp
std
pop
adc
leave
jno
pop
stos
cmps
dec
icebp
jmp
add
shr
jnp
bound
call
scas
popf
xlat
cmp
mov
(bad)
test
push
sbb
mov
dec
sbb
and
in
mov
jnp
xor
cli
jae
inc
aas
adc
xor
cs
icebp
dec
mov
push
clc
nop
inc
packuswb
xchg
ret
pop
cmp
into
fidivr
sub
mov
sbb
shl
cmp
cs
shl
adc
pop
adc
retf
mov
sbb
(bad)
jge
push
into
mov
push
mov
cmp
pop
push
pop
add
imul
jecxz
xor
inc
sbb
aam
retf
ret
popf
cs
sbb
call
in
movs
mov
xchg
xchg
mov
dec
sbb
cdq
mov
loope
mov
mov
movs
rcr
jg
add
or
push
pop
call
call
xor
mov
fcmovne
push
jle
sbb
pop
ret
scas
or
xor
dec
add
dec
jmp
lock
xor
push
sub
cdq
in
hlt
jl
leave
pushf
out
shr
xchg
hlt
dec
repz
(bad)
mov
movs
push
mov
gs
push
sbb
push
(bad)
int
jmp
out
or
leave
dec
cld
mov
rol
enter
inc
mov
test
mov
popa
and
mov
in
out
mov
fcmove
push
shr
mov
loop
mov
rcr
adc
ds
add
and
jg
arpl
cmps
fdecstp
cmps
dec
xor
mov
mov
xlat
sahf
pop
xchg
ret
sbb
addr16
addr16
dec
or
mov
or
sub
sbb
inc
and
xchg
push
hlt
sbb
out
xor
sbb
sti
ret
hlt
dec
dec
loope
mov
dec
cmps
or
cmc
cld
out
ret
ins
cmp
(bad)
outs
jl
mov
retf
fwait
jae
movs
inc
mov
clc
inc
cdq
(bad)
jmp
cmps
stc
mov
and
in
mov
popf
neg
iret
xor
mov
inc
popa
repz
sbb
out
sbb
add
pop
xor
test
stc
xor
inc
push
pop
mov
lods
loope
aaa
jmp
cmp
push
pusha
outs
xor
retf
test
je
lahf
add
jne
jle
pop
iret
retf
retf
push
push
dec
ss
mov
mov
sub
(bad)
(bad)
push
call
pop
jns
cmp
add
inc
fldcw
push
sub
push
xor
das
dec
cld
mov
jnp
out
fisubr
lea
jle
(bad)
hlt
mov
or
ins
fistp
dec
jo
add
sahf
popa
sub
add
jno
add
jnp
jl
iret
popf
inc
sbb
dec
cmp
sub
lds
sub
cmp
push
xor
jns
dec
adc
and
mov
push
gs
jle
in
cli
sti
mov
aad
aas
xchg
cli
loope
ja
mov
jp
jbe
jmp
mov
jmp
inc
pop
add
mov
fidivr
and
add
inc
add
push
sar
fstp
dec
sbb
repnz
fisttp
std
sbb
movs
es
out
add
gs
push
outs
xchg
mov
cmc
loope
icebp
push
pop
mov
add
xor
or
adc
popa
test
and
out
fadd
mov
loope
enter
lds
and
lds
mov
(bad)
xor
inc
and
outs
les
xor
add
mov
pop
mov
and
daa
push
push
cdq
cs
popa
push
clc
sbb
add
jmp
pop
rcr
bts
inc
sbb
push
or
mov
movs
jo
fdiv
repz
xor
loopne
add
repnz
(bad)
jge
push
jbe
mov
outs
retf
inc
ins
push
pop
dec
jbe
imul
add
repz
fisub
jl
pop
mov
sbb
int3
or
lods
(bad)
sub
and
ins
and
mov
cli
jmp
(bad)
mov
jl
in
cmps
push
adc
retf
and
fbstp
pop
dec
bswap
jae
sti
pop
(bad)
pop
addr16
xor
imul
int
sub
xor
pop
push
adc
les
add
pop
dec
and
repz
and
adc
jae
xchg
addr16
push
mov
jp
xchg
pushf
mov
movs
inc
pop
jae
push
add
shl
xchg
aaa
neg
add
leave
aam
adc
xchg
or
inc
and
int3
dec
daa
(bad)
mov
and
jle
push
cmp
pop
retf
pushf
cmp
fwait
outs
out
sbb
in
push
mov
cmp
inc
mov
fwait
mov
dec
xor
in
and
mov
imul
pop
and
pop
xchg
jle
adc
dec
mov
adc
inc
enter
add
les
dec
xchg
leave
rcr
sbb
test
es
xor
add
mov
cld
(bad)
push
mov
pop
xor
movs
push
push
(bad)
mov
sub
scas
sub
leave
mov
mov
mov
cmp
push
jle
(bad)
push
push
mov
jge
test
fs
jecxz
dec
cmps
mov
imul
mov
push
(bad)
fiadd
pop
mov
outs
pop
cmp
(bad)
and
(bad)
fst
xchg
cmc
in
cdq
sub
loopne
and
gs
sbb
jp
and
jle
adc
xchg
call
stos
ret
(bad)
int
lods
xchg
cmp
sbb
jnp
outs
jae
mov
das
cmp
dec
dec
sbb
xchg
jp
pop
xchg
lods
gs
inc
mov
add
mov
(bad)
in
inc
lds
jae
int3
push
mov
mov
adc
xor
ins
push
cs
stos
xor
lock
lods
test
int
push
lods
cld
hlt
imul
dec
inc
movs
jmp
jns
sbb
repnz
in
jbe
pop
fwait
mov
jo
fwait
mov
shl
fdivrp
or
mov
adc
cli
aaa
int3
mov
xlat
sub
addr16
inc
mov
mov
cmps
aas
mov
rol
dec
jno
dec
inc
jne
pop
shl
pop
fxch
jg
(bad)
and
outs
jb
pop
in
daa
shr
push
pop
daa
aad
pop
imul
inc
or
sub
ins
push
(bad)
stos
hlt
inc
dec
jno
or
lds
mov
xchg
loop
pop
call
sbb
imul
mov
pop
sahf
ror
push
inc
sub
shl
mov
enter
gs
sar
fwait
lock
ds
int
jns
sub
xor
jae
push
(bad)
jo
pop
jge
cmps
inc
sub
int3
push
mov
aas
iret
jb
xchg
shl
in
mov
jns
ss
add
cld
retf
fisub
mov
(bad)
fidivr
cmc
and
out
jg
fs
xor
add
fxch
adc
inc
pop
push
xchg
cmp
sbb
pop
xor
mov
jno
xchg
push
icebp
jl
mov
dec
xor
pusha
inc
(bad)
mov
js
or
mov
mov
dec
jae
sbb
jbe
es
inc
fucomp
sbb
leave
je
in
mov
xchg
or
push
je
inc
mov
xor
icebp
pushf
jbe
inc
pop
(bad)
cmp
shl
dec
jle
in
fdiv
rcl
ins
push
scas
or
lock
or
sahf
inc
jle
aam
mov
data16
jns
arpl
outs
cmp
jo
stos
inc
repnz
dec
ret
cs
dec
pop
mov
jmp
mov
adc
repz
mov
jge
adc
js
imul
jg
mov
push
jo
and
gs
xor
xor
push
push
cmp
movs
cmp
sahf
retf
sub
xlat
inc
pop
xchg
mov
psubusb
push
inc
stos
and
fcom
jge
sub
ror
xor
test
sub
jmp
repz
add
out
xchg
push
dec
and
pop
call
sub
out
jecxz
sub
cmc
test
mov
cwde
xchg
or
loopne
push
dec
cli
and
mov
pop
arpl
jno
ja
test
mov
mov
pop
inc
je
jmp
fcomp
leave
lods
into
shl
xchg
cmp
sar
(bad)
cmp
int
dec
push
mov
(bad)
(bad)
mov
lods
pop
outs
adc
jp
(bad)
(bad)
ins
xor
fisub
(bad)
adc
cmp
aam
pop
jno
mov
or
movs
jb
mov
mov
retf
jp
xor
cmp
dec
push
pop
push
mov
scas
rcl
mov
aam
fs
sbb
(bad)
push
(bad)
mov
test
lods
iret
xchg
adc
jmp
add
cmc
aad
mov
sub
popa
xchg
mov
dec
lock
out
add
add
mov
fs
dec
or
push
inc
shl
dec
data16
sbb
or
dec
or
test
pop
cmp
ret
dec
not
xchg
jmp
push
inc
nop
jp
adc
pop
aad
cmp
test
aad
dec
pop
mov
push
fst
inc
lea
cld
dec
mov
cli
xlat
mov
pop
lods
imul
ins
push
arpl
pop
std
cld
sbb
into
mov
adc
jp
add
arpl
cmps
jae
or
test
mov
dec
pop
jle
or
xor
mov
xchg
dec
stos
xchg
fbld
pusha
push
dec
push
push
pop
es
wbinvd
popf
xchg
cli
xchg
push
push
dec
int3
dec
push
cmp
loopne
mov
push
xchg
jae
adc
(bad)
retf
jne
mov
jmp
jg
jns
cli
inc
mov
push
cmc
jbe
mov
popf
mov
xor
pop
sbb
cld
cmp
sub
jge
enter
sub
imul
rcr
mov
mov
inc
les
mov
pop
pop
sbb
out
rcr
pop
adc
lahf
je
push
xor
xchg
jmp
xchg
or
stos
jns
adc
mov
push
enter
in
dec
adc
jmp
mov
adc
stos
jp
ret
outs
popf
mov
and
jmp
sti
push
data16
jl
stos
xchg
test
adc
(bad)
xor
inc
daa
jae
pop
test
stos
mov
fiadd
xchg
adc
sub
push
and
dec
pop
scas
xchg
fisttp
stos
mov
fst
jbe
sub
xchg
xor
pop
sahf
xor
ins
xchg
jp
mov
or
add
xchg
pop
mov
cmp
and
inc
data16
lds
jmp
dec
fs
dec
neg
push
repz
ss
in
repz
mov
aam
cld
mov
inc
jnp
xor
div
ret
mov
fdiv
xchg
jl
adc
loope
mov
pop
dec
and
jmp
imul
out
xor
push
je
gs
retf
jmp
push
mov
lods
mov
jmp
shl
daa
mov
test
push
jp
add
cmp
dec
jno
std
xor
mov
or
xchg
push
sub
retf
icebp
mov
daa
mov
out
(bad)
xlat
int3
cwde
mov
retf
pop
cmp
and
imul
mov
fst
(bad)
push
out
push
jo
mov
cmp
jg
ficom
fldcw
sbb
jmp
bnd
mov
and
enter
aad
and
cld
iret
push
push
push
(bad)
mov
test
xor
mov
sub
in
xchg
jo
cmps
dec
sbb
fsubrp
sbb
in
or
inc
sub
or
pop
xchg
dec
inc
(bad)
jecxz
inc
aad
outs
in
jno
and
stc
xchg
mov
cmp
push
popf
pop
inc
jge
scas
sub
mov
add
loopne
jmp
sar
loope
cs
mov
add
stos
sbb
pop
(bad)
loopne
scas
xor
fsubr
sahf
pop
mov
pop
int3
mov
je
adc
stc
(bad)
(bad)
jne
in
push
push
ret
imul
ror
push
inc
aad
shl
retf
pop
mov
adc
sub
cmps
push
inc
and
mov
enter
lock
fld
xor
test
sub
mov
rol
int3
test
mov
mov
into
sar
pop
xchg
adc
in
test
sbb
add
imul
xor
jo
pop
mov
sbb
fidivr
cmps
push
and
js
jns
mov
push
daa
mov
push
je
jge
add
cwde
shrd
jl
retf
fisttp
sub
fimul
shl
pop
add
ds
retf
out
retf
pop
rcr
hlt
mov
cmp
cmp
test
test
sbb
(bad)
clc
xchg
push
movs
shl
sub
leave
and
test
mov
adc
mov
shl
dec
adc
push
sar
fdiv
ins
mul
jmp
inc
and
push
cmp
pop
out
stos
dec
(bad)
hlt
aad
out
inc
cmp
call
ret
xchg
and
cmp
pop
data16
call
mov
mov
mov
and
inc
scas
out
ins
aas
mov
or
xlat
pusha
(bad)
test
enter
sbb
push
xor
pusha
cwde
pop
or
fisttp
sbb
dec
es
cmp
pop
call
test
arpl
sahf
out
je
dec
push
sar
or
mov
pop
hlt
xchg
ins
sahf
push
dec
call
aas
jnp
inc
das
push
ja
jbe
cmp
sti
jge
(bad)
(bad)
pop
scas
arpl
ins
pop
mov
mov
fs
push
daa
mov
addr16
repz
call
xchg
mov
cmps
aas
cmp
hlt
xchg
fadd
int
loopne
push
imul
jno
ins
xor
sbb
mov
pop
mov
adc
mov
es
mov
xchg
inc
jl
pop
or
into
dec
std
fadd
out
push
jbe
xchg
mov
stos
push
add
or
in
mov
jns
aam
inc
int
imul
int3
and
push
aam
inc
fmulp
mov
rol
fdivr
push
outs
add
les
movs
(bad)
cwde
cs
jmp
arpl
cmp
sahf
call
pusha
(bad)
inc
adc
adc
xchg
scas
jno
lods
jp
out
xchg
add
es
lock
dec
pop
std
sbb
pop
sub
push
dec
cmp
sub
or
jp
fcomp
mov
push
and
iret
out
inc
sbb
hlt
push
cmc
sbb
loopne
mov
fistp
imul
push
sub
daa
lods
lea
xor
sbb
and
mov
outs
jge
cld
xor
in
test
cmpps
adc
cwde
mov
in
lock
aam
mov
cld
pop
mov
push
xchg
xchg
dec
mov
test
xlat
mov
jle
aam
jbe
(bad)
adc
sbb
ds
ja
retf
sub
and
sar
sbb
adc
test
jecxz
aas
lea
xchg
fwait
jno
sub
test
dec
jo
jo
pop
ins
cmc
arpl
mov
shr
stos
add
imul
gs
sbb
fnstenv
mov
inc
sbb
xor
and
rol
xchg
ins
dec
dec
iret
xlat
mov
out
sub
or
pop
dec
stos
adc
sub
ins
mov
dec
dec
daa
and
inc
adc
mov
inc
out
sbb
fistp
and
sbb
push
out
(bad)
imul
xchg
push
not
jmp
nop
sub
std
push
mov
pop
rcr
out
cmp
out
cwde
push
icebp
mov
loopne
pushf
not
add
or
push
sub
mov
pop
out
mov
xor
add
jo
movs
movs
dec
(bad)
loop
dec
xchg
jbe
sub
int3
aad
in
stos
ins
js
or
repnz
arpl
xor
mov
xchg
mov
inc
xchg
lods
int
outs
sbb
sbb
lods
sub
xchg
imul
add
push
xchg
xor
and
xchg
cmps
xor
xchg
inc
test
rcl
cmp
arpl
sbb
mov
div
xchg
inc
out
je
lods
xchg
data16
or
push
pushf
xchg
gs
scas
and
xor
ret
jl
jb
mov
mov
std
in
gs
pop
neg
loop
adc
cmp
cwde
std
dec
hlt
shr
mov
movs
adc
inc
sbb
push
sahf
mov
sahf
ins
cld
loope
jle
inc
lds
std
xor
xor
xor
hlt
push
mov
retf
fs
add
cmovp
add
adc
out
loop
mov
lods
push
lds
and
aaa
test
push
mov
pusha
or
shl
pop
scas
scas
bound
xor
sub
jge
dec
mov
sub
xchg
inc
inc
pop
mov
sub
jmp
out
dec
mov
push
mov
stos
movs
cmp
popf
adc
into
ficom
adc
jnp
repnz
jae
imul
imul
out
cmp
sar
inc
sub
sub
cmp
pop
jno
ror
leave
sub
outs
icebp
nop
test
into
call
and
and
mov
sahf
fwait
mov
ss
cmp
push
(bad)
cmp
jle
inc
add
cmp
les
inc
(bad)
movs
pop
adc
xchg
inc
pop
ror
push
jge
pop
int
stc
xor
mov
add
call
stc
movs
jecxz
inc
pop
sub
cmp
out
jbe
cmp
or
jp
dec
pop
mov
popf
adc
enter
retf
jl
push
mov
and
xchg
mov
pop
adc
dec
iret
js
imul
and
inc
(bad)
shl
test
add
outs
mov
frstor
lods
retf
mov
fild
mov
dec
jae
dec
inc
movs
lock
xchg
stos
or
dec
jmp
mov
adc
imul
fwait
xor
loop
pop
dec
jns
movs
or
stc
(bad)
(bad)
pop
arpl
aad
out
mov
adc
inc
cld
dec
add
jmp
fs
rol
test
enter
jmp
jae
jo
pop
sbb
out
cmp
fld
iret
and
out
adc
and
inc
inc
sbb
lock
sbb
rol
imul
mov
imul
xchg
mov
adc
mov
inc
das
jle
xchg
jne
pop
call
mov
ror
pop
and
ret
adc
fsub
dec
ret
push
sti
stos
int3
out
mov
and
data16
sub
gs
mov
cmp
out
popf
inc
jp
fistp
call
mov
jp
add
ss
shr
out
int
pop
inc
jmp
aad
jbe
fmul
or
mov
(bad)
aas
call
sub
data16
(bad)
cmps
jbe
in
mov
cmp
fsub
push
adc
test
jnp
imul
adc
inc
pop
fwait
dec
and
dec
pop
push
add
or
lds
mov
pop
in
mov
shl
or
push
adc
xor
imul
pop
sbb
sub
push
clc
and
push
and
test
sti
mov
rcr
(bad)
xchg
mov
mov
scas
mov
mov
sbb
sub
imul
ins
mov
jg
popa
push
(bad)
mov
ret
imul
jmp
pop
mov
or
jne
test
test
ret
data16
jmp
pop
mov
or
stos
retf
call
pop
mov
adc
movs
and
bound
rol
mov
jmp
push
cwde
dec
xchg
xchg
dec
add
push
ja
xor
xor
or
movs
aam
dec
cmp
rcr
sbb
sub
xchg
xchg
pop
loope
arpl
jle
in
inc
ss
fdivr
fs
cmp
mov
adc
inc
push
call
xchg
or
cmp
xor
xchg
push
xor
cmp
pop
cmp
xchg
cli
and
mov
repz
loop
cwde
fld
and
rcr
pop
stos
cmp
ins
sahf
neg
std
mov
cmp
rol
sub
out
cmps
sahf
sub
xor
add
pop
dec
outs
das
jmp
outs
cmp
dec
mov
or
out
mov
jl
movs
(bad)
(bad)
pop
mov
jno
enter
pop
ins
cld
xor
in
push
mov
dec
cmp
dec
loop
push
out
sub
cdq
pop
pop
repz
mov
lods
push
js
out
enter
shr
push
popa
das
dec
pushf
or
rcl
iret
lods
clc
inc
stos
test
fucomi
stos
add
jg
addr16
add
push
arpl
add
int
into
int3
jo
or
aad
push
push
add
mov
fdivr
(bad)
repnz
les
cmp
cmp
jno
pop
int
ror
add
push
dec
clc
adc
dec
sub
push
outs
bound
and
mov
xchg
xchg
mov
and
sub
scas
pusha
test
add
push
loopne
ins
mov
xchg
loopne
(bad)
icebp
fistp
xor
xlat
pop
dec
js
and
inc
imul
mov
sbb
pop
xchg
add
imul
(bad)
and
das
fidivr
push
bound
(bad)
lods
je
adc
js
aam
mov
popf
test
rcl
int
test
sbb
dec
stos
ret
xor
sub
call
imul
clc
mov
jno
dec
sub
inc
mov
adc
mov
sub
shl
mov
outs
inc
sub
dec
test
(bad)
mov
adc
inc
lods
mov
xor
mov
jo
xor
xchg
dec
fdiv
xor
xor
jbe
pop
pop
push
cdq
inc
mul
or
lock
push
jge
test
xor
in
pop
and
pop
adc
enter
and
xor
ja
in
dec
xor
das
sub
jnp
add
les
std
out
(bad)
test
mov
jp
pop
jno
fcmovnu
xchg
je
and
sub
mov
stos
dec
fs
ret
aad
jp
jmp
arpl
aas
fwait
pushf
neg
shl
pushf
(bad)
aam
lahf
pop
ds
add
dec
fstp
aam
push
push
inc
popw
push
cmps
pop
loop
jp
jbe
das
shl
pop
in
outs
and
lods
and
clc
sub
or
int3
call
jecxz
popa
movs
loopne
fist
pop
mov
hlt
cld
(bad)
mov
in
int
sbb
or
adc
rcl
jmp
xor
jne
xchg
int3
sahf
ret
test
xor
jns
adc
push
jb
in
or
inc
xchg
pushf
push
call
jbe
lods
jmp
mov
push
sti
fbstp
rol
es
pop
sub
mov
jg
dec
push
icebp
xor
mov
mov
mov
mov
or
and
xlat
jmp
xlat
mov
movs
nop
aaa
(bad)
and
add
out
in
xor
pop
(bad)
(bad)
sbb
std
jne
mov
cmps
pusha
test
jg
push
adc
and
cmps
and
push
xchg
push
mov
mov
or
inc
mov
pusha
repnz
das
cmps
mov
(bad)
adc
(bad)
iret
lods
arpl
shl
xchg
adc
rol
xor
mov
lods
int3
dec
cmps
mov
fdivr
add
lods
inc
lods
sub
and
dec
rdtsc
mov
push
inc
test
xor
hlt
cmp
or
(bad)
(bad)
jmp
add
leave
mov
inc
and
fild
dec
push
fdiv
in
pop
xchg
add
ror
xchg
mov
inc
dec
jbe
pop
jae
push
mov
lea
mov
pop
push
mov
add
test
dec
into
or
in
mov
(bad)
lea
or
fisub
xor
jno
sbb
sub
sub
pop
popa
adc
rol
ins
cli
icebp
aad
sub
jo
jmp
sahf
sub
push
rcr
int3
ror
int
adc
outs
sbb
pusha
mov
cmps
in
jb
jl
push
jge
xor
in
rcr
in
xchg
(bad)
rcr
jnp
jns
retf
data16
and
inc
inc
out
fwait
ins
outs
movs
mov
sahf
test
int3
dec
test
xor
call
inc
clc
mov
es
jno
and
xor
popa
add
outs
push
mov
repnz
xchg
int
inc
repz
(bad)
xor
stos
pop
cmp
pop
xchg
outs
ins
or
or
cmovg
ins
or
(bad)
das
ror
enter
mov
dec
pop
cwde
push
call
xor
add
add
mov
pop
jo
je
push
test
cmp
hlt
int3
or
inc
cmc
and
aas
fwait
or
aad
leave
fcmove
mov
in
ss
js
jbe
lea
inc
add
dec
xchg
mov
jg
sub
mov
inc
mov
frstor
test
les
add
jg
xor
pcmpeqw
jo
cli
ret
nop
fwait
cmp
dec
jle
push
rcr
sti
and
lods
fucom
and
cmp
movs
std
add
call
inc
scas
adc
fwait
ja
(bad)
aad
and
sbb
scas
dec
and
sub
jb
pop
in
lods
(bad)
mov
out
pop
adc
in
cmp
dec
jmp
mov
rcl
mov
cmp
add
mov
iret
nop
mov
mov
pop
fmul
and
scas
and
xchg
mov
mov
mov
xor
iret
mov
push
mov
inc
xor
and
mov
imul
mov
sti
cmp
cmc
jb
adc
ins
lock
ret
jle
add
add
xchg
xor
hlt
and
cmp
inc
mov
js
mov
ins
sub
lahf
xor
mov
adc
cmp
stos
pop
shr
and
repz
mov
fwait
mov
push
and
hlt
data16
xor
gs
fcmovu
adc
call
aas
ja
add
push
(bad)
ins
jmp
cs
pop
xchg
out
jne
jg
test
cmp
cmp
int3
shl
mov
sub
call
imul
hlt
push
xchg
xor
dec
sahf
jo
sbb
test
jb
add
sbb
pop
mov
outs
mov
clc
cmps
push
sbb
inc
push
xchg
dec
push
mov
inc
inc
push
cmp
inc
jl
jge
jmp
movs
push
icebp
ds
jnp
stos
pop
sbb
adc
into
dec
dec
dec
push
test
ficomp
mov
jnp
pop
or
xchg
test
inc
jecxz
call
add
shl
pushf
sbb
xlat
loope
fwait
jecxz
outs
dec
xchg
das
ret
addr16
pushf
xchg
retf
adc
dec
xor
push
pop
out
dec
rcl
or
ret
sti
int
in
ficom
shl
cwde
lods
xchg
sub
fstp
cmp
imul
add
pushf
pop
mov
fisub
imul
popa
imul
jbe
cdq
lock
pop
pop
scas
xchg
out
cmp
fsub
ss
sbb
out
cmp
fst
mov
mov
push
sar
inc
sub
les
popf
pop
outs
xor
xor
jmp
sbb
std
fisub
xchg
cmp
test
pop
dec
mov
and
pusha
pop
bound
mov
pop
adc
std
in
dec
out
ins
jle
jmp
xor
cs
xchg
icebp
test
and
or
jb
or
ins
jge
popa
push
frstor
cmp
das
dec
xor
mov
test
xchg
fisub
pop
jl
xor
adc
aam
pop
xchg
mov
pop
dec
in
or
push
out
shr
xchg
std
repnz
inc
xor
repz
out
xor
(bad)
jmp
cli
push
mov
sar
call
dec
test
sub
sbb
inc
push
retf
mov
shl
cmp
lds
outs
jecxz
push
jmp
add
mov
test
adc
sub
pop
pop
jno
shr
pop
mov
and
(bad)
ds
xchg
inc
sub
fwait
adc
push
inc
ror
jb
popf
and
movs
sub
loopne
add
call
ret
in
pusha
inc
add
or
repz
xchg
xor
(bad)
cmp
daa
push
fwait
push
cmps
push
or
mov
test
sub
jb
xchg
jmp
xchg
mov
cmp
jle
stos
sub
daa
int3
lahf
rcl
scas
and
or
sbb
push
sti
xchg
and
push
xlat
push
sbb
pop
rcl
or
cwde
into
hlt
mul
inc
aam
push
test
push
xor
inc
xor
retf
and
push
jne
aam
add
out
and
cmp
addr16
mov
jnp
sbb
jmp
int3
dec
shl
mov
cmps
jns
cmp
push
ins
push
dec
jp
outs
push
or
(bad)
jnp
aaa
and
sahf
pop
dec
mov
cdq
mov
push
not
adc
jae
inc
xor
cmp
add
and
daa
sub
mov
push
dec
add
jge
gs
fdiv
adc
mov
test
inc
retf
clc
dec
outs
fadd
and
xor
ins
sub
pop
mov
dec
(bad)
and
stc
adc
movs
mov
(bad)
sahf
fst
xor
sub
scas
mov
call
and
shr
pusha
fdiv
push
in
fstp
and
lea
ss
inc
popf
mov
fisub
test
fcmovnu
adc
imul
inc
jae
aam
add
dec
adc
cmps
(bad)
or
loope
nop
push
aas
in
xor
inc
xchg
pop
aaa
jb
jne
fisubr
enter
push
or
sub
rcr
jecxz
lods
ror
aad
push
cmp
sub
push
cli
loope
(bad)
push
pop
xchg
dec
in
sti
adc
adc
mov
inc
mov
outs
xchg
ret
and
jae
dec
push
cmp
(bad)
push
jno
sbb
lea
stos
sbb
xchg
xor
rol
mov
pop
popa
or
retf
sahf
jb
pop
pop
xor
pop
shr
fs
pop
cdq
push
sub
mov
gs
into
sub
imul
or
ja
jl
fsub
gs
pop
adc
ret
enter
les
(bad)
push
xchg
pop
ins
repz
push
rcr
imul
push
sub
xchg
jnp
in
sub
jae
push
sbb
jle
stos
dec
mov
sbb
and
aas
sub
cmp
in
lahf
mov
pop
push
std
(bad)
lock
cwde
jns
add
clc
ins
or
nop
repnz
mov
int3
sbb
(bad)
dec
sahf
std
push
dec
outs
add
mov
adc
sahf
lods
ficom
(bad)
(bad)
lahf
std
and
xor
or
popa
popf
les
sbb
(bad)
js
lahf
pop
xor
rcr
inc
leave
dec
adc
rcl
jns
pushf
sub
jb
cli
aaa
jb
cmp
push
mov
(bad)
cmp
mov
mov
shl
jns
jmp
mov
sahf
ror
aad
ret
mov
das
jno
je
pop
cmp
ror
cdq
jno
(bad)
mov
push
rcr
inc
mov
add
jo
mov
cmps
adc
and
sub
fsubr
sub
cmp
je
jl
ins
mov
jmp
jp
lods
push
inc
push
ins
daa
jbe
cmp
daa
dec
lahf
fldcw
fadd
sub
std
add
scas
rep
test
sub
or
mov
dec
add
sbb
sahf
out
addr16
push
dec
call
std
pop
out
ds
mov
pop
sub
fcom
movs
jecxz
and
xchg
gs
push
cmp
ins
and
xor
inc
and
cli
add
icebp
aas
push
inc
fst
pop
push
daa
jo
test
inc
ficomp
jns
mov
add
push
mov
xlat
movs
les
jge
fwait
dec
mov
leave
ins
paddusw
jmp
xlat
jae
outs
mov
xchg
js
or
repnz
fwait
outs
mov
xchg
add
pop
adc
cli
push
jle
pop
call
ins
mov
test
jnp
ret
das
pop
adc
scas
adc
enter
pop
cdq
in
lods
jle
lds
test
inc
es
in
les
movs
push
xchg
fsub
jge
lea
aaa
push
ftst
xchg
int3
ja
and
or
in
cmp
dec
inc
mov
sar
inc
(bad)
in
leave
add
add
call
(bad)
lahf
stc
mov
dec
and
(bad)
leave
xlat
hlt
scas
call
mov
lea
in
cwde
add
dec
stos
mov
mov
loop
bound
xchg
es
dec
dec
retf
mov
add
or
xlat
das
das
(bad)
cwde
idiv
retf
adc
ror
jo
retf
sub
sub
mov
xor
inc
(bad)
fisttp
popa
out
adc
inc
jmp
mov
hlt
data16
add
jle
fldcw
and
adc
inc
out
std
add
mov
cmp
sub
ds
sub
sbb
xor
cmp
cmp
fisttp
push
aas
ins
or
push
call
shr
out
addr16
cli
push
mov
fst
jb
bound
push
jle
inc
ins
in
mov
and
nop
jo
dec
inc
and
int
outs
jg
test
pusha
call
repnz
mov
xor
or
mov
ficomp
cmp
jno
inc
sti
ja
adc
rcl
int3
in
(bad)
pop
inc
punpckldq
stos
bound
cs
xchg
ins
lods
cmp
dec
pop
scas
mov
lea
pop
jl
rcl
add
jbe
dec
ficomp
mov
test
out
dec
fs
test
add
push
rcr
enter
pushf
sar
xchg
pusha
jl
add
add
mov
mov
movs
inc
mov
push
adc
adc
(bad)
xchg
outs
pop
push
dec
popf
out
ret
mov
rol
lock
mov
or
mov
pop
pop
mov
shl
xor
rcr
(bad)
arpl
int
out
addr16
aas
mov
inc
dec
mov
stos
add
pop
hlt
fxch
mov
(bad)
in
out
rcl
mov
in
(bad)
sbb
enter
and
mov
div
mov
sub
cmp
fisttp
xchg
sar
add
popf
sub
jne
nop
pmulhw
jne
or
adc
sbb
and
mov
sahf
pusha
jmp
jo
adc
mov
stc
loopne
xor
stc
movs
addr16
mov
cmp
add
add
xor
ins
leave
mov
adc
add
fnstcw
lahf
sbb
pop
cmp
arpl
and
mov
into
inc
setno
(bad)
sub
clc
js
cmp
cld
and
sbb
dec
lods
inc
sub
int3
mov
adc
mov
push
ud0
lds
cmp
jnp
sbb
push
inc
jo
mov
dec
sub
call
call
dec
xor
(bad)
and
mov
rcr
adc
pushf
push
xor
in
in
or
call
mov
mov
inc
xchg
ds
add
adc
cmp
ss
ja
xchg
jmp
mov
aaa
dec
(bad)
mov
inc
sbb
loope
scas
jl
stos
push
inc
sti
test
pop
ins
xlat
jbe
(bad)
mov
fwait
jg
movntps
cwde
lea
lahf
lock
push
xchg
sbb
shl
fs
xchg
(bad)
jl
loopne
jbe
xor
cld
dec
movs
mov
(bad)
mov
shl
cli
fild
je
loop
push
sub
dec
dec
adc
fist
mov
dec
cmc
loopne
sbb
in
fimul
ja
xchg
push
ret
test
mov
outs
fnstcw
idiv
imul
sar
dec
lock
and
or
les
js
sub
add
or
sbb
in
ins
imul
cs
pop
adc
cmp
cmc
push
aam
and
pusha
add
popf
adc
in
repz
and
outs
ja
jns
(bad)
add
jmp
cli
mov
cmc
arpl
fwait
push
sub
(bad)
or
mov
mov
xor
ins
in
and
mov
fadd
jg
mov
out
lock
cmp
icebp
sbb
(bad)
dec
lods
xchg
(bad)
xor
daa
jl
and
xchg
add
xchg
pop
or
adc
mov
push
cmc
lods
stos
push
and
ret
sbb
ret
xor
xor
mov
xor
cmp
test
xchg
sub
jg
stos
lock
push
xchg
inc
pop
pop
jne
ins
imul
aaa
push
adc
ficomp
loop
popf
inc
xor
sbb
(bad)
(bad)
push
mov
jnp
sbb
and
push
cmp
pop
add
ret
jb
jae
pop
xchg
mov
inc
es
(bad)
mov
mov
mov
mov
and
jne
mov
popf
pop
cmps
arpl
push
jmp
mov
frstor
mov
sub
imul
mov
mov
cmps
sub
out
out
jge
add
add
pop
sbb
das
loop
sub
cld
xchg
xlat
dec
and
inc
mov
push
inc
inc
adc
dec
call
dec
je
jl
add
inc
jge
lea
inc
cmp
movs
mov
push
or
imul
push
jnp
push
nop
xor
je
jg
js
in
(bad)
(bad)
call
sti
add
push
mov
xor
push
fsubrp
push
xchg
mov
mov
cmps
jl
pop
call
mov
xchg
js
hlt
ret
int3
mov
aaa
fimul
ret
dec
add
add
push
pop
inc
cs
pslld
aas
ret
mov
loopne
inc
ret
sub
mov
jmp
stos
fistp
or
data16
push
neg
jne
iret
(bad)
adc
or
std
jb
xchg
in
aas
inc
cmp
in
xor
push
sbb
out
ss
mov
mov
pushf
adc
movs
cmc
push
ja
into
or
fwait
or
inc
push
cmp
mov
pop
stos
cmp
mov
cdq
movs
jg
add
cld
mov
stos
add
pop
leave
sub
or
lods
aam
mov
cmp
add
xchg
mov
jmp
(bad)
stos
add
(bad)
dec
mov
inc
sbb
add
lock
mov
push
cmps
xchg
mov
push
retf
push
dec
shl
jle
cmp
inc
das
mov
sahf
lock
hlt
adc
repz
cmc
sti
imul
je
and
(bad)
jl
mov
inc
pop
movs
std
(bad)
not
inc
pop
add
and
add
hlt
arpl
lds
stos
inc
xor
adc
retf
mov
dec
jl
cs
sub
jl
cld
mov
iret
loop
mov
and
mov
inc
(bad)
loope
jo
call
mov
outs
push
cmps
loopne
loopne
or
imul
test
fsubp
out
or
push
pop
fstp
fs
neg
fcomp
jb
push
cs
iret
xlat
lahf
jno
xchg
test
cmps
xchg
xchg
pop
call
(bad)
(bad)
test
cwde
ja
pop
test
cmp
imul
push
dec
js
test
in
fs
fimul
out
pop
mov
push
dec
sbb
mov
fld
repnz
mov
pop
(bad)
adc
cmc
push
and
cli
in
(bad)
xchg
adc
pop
jmp
fimul
jmp
es
dec
daa
push
daa
fistp
mov
scas
xor
mov
aas
call
and
push
out
test
and
mov
imul
cmps
xchg
retf
repnz
jg
dec
mov
inc
sti
add
fsub
fcomp
in
add
daa
pop
scas
fcom
aaa
cmp
loop
inc
hlt
pop
cmps
pop
test
fisub
or
pop
mov
or
fidivr
js
and
xchg
sub
dec
test
and
shl
cs
pop
into
out
pop
push
push
or
jge
inc
adc
sbb
and
push
add
cmc
xor
push
ror
mov
mov
push
js
adc
and
xor
dec
arpl
outs
or
xor
mov
call
inc
dec
mov
or
sar
jle
call
cld
das
aaa
jge
pop
ins
rol
nop/reserved
push
sbb
push
mov
sub
call
fild
jb
bound
aaa
mov
push
(bad)
enter
xchg
dec
nop
cld
xor
ins
out
xor
xchg
jbe
or
push
dec
xlat
xlat
sub
cmc
mov
lahf
xchg
adc
adc
mov
push
pusha
(bad)
scas
inc
add
and
push
or
or
sti
das
pop
mov
dec
adc
(bad)
xor
adc
pop
sbb
ja
jl
xor
mov
cs
add
in
pop
enter
dec
mov
rcr
jae
outs
into
or
sub
mov
dec
cmp
imul
sbb
pop
or
add
(bad)
push
jne
mov
ss
and
jns
pushf
inc
daa
mov
push
gs
inc
xchg
mov
shl
add
enter
pop
pop
sbb
aas
mov
xor
pop
fwait
cld
daa
fxch
aad
stc
jbe
sbb
arpl
push
cdq
je
jmp
xor
mov
mov
rcl
inc
enter
(bad)
imul
sbb
cmps
xchg
inc
inc
dec
mov
ins
(bad)
add
inc
push
or
push
mul
xchg
jg
adc
dec
sbb
lods
push
add
add
fisub
call
cmps
mov
or
push
adc
xor
mov
out
and
clc
mov
js
jle
mov
jl
aad
sbb
daa
rol
sub
push
sbb
xor
pop
pop
or
mov
inc
mov
leave
lods
ror
es
mov
dec
dec
bound
data16
loope
mov
jg
ret
stos
rol
xchg
popa
jns
test
push
retf
and
mov
ss
int
mov
fdiv
xor
cmp
mov
inc
in
fwait
xchg
shr
out
cmps
push
fadd
lea
iret
repnz
pop
sahf
xchg
add
pop
cmp
repz
pushf
xor
cmp
fidivr
sahf
and
jg
in
out
sub
xor
pop
ja
mov
out
(bad)
pop
int
and
movs
test
sub
inc
push
pop
mov
rcl
dec
into
adc
jge
lea
xlat
cmp
outs
jmp
and
mov
rcr
xchg
arpl
sub
fwait
mov
add
sub
es
pushf
outs
sub
lock
sar
mov
or
stos
xchg
scas
sub
mov
outs
pop
fsub
in
les
push
iret
push
mov
ins
fild
(bad)
leave
sbb
jmp
mov
(bad)
(bad)
adc
xchg
(bad)
and
or
popf
or
adc
xchg
cli
mov
push
repz
in
aaa
out
pop
popf
lea
inc
(bad)
push
fcomp
jne
push
adc
pop
mov
dec
mov
lahf
hlt
mov
stos
dec
adc
jle
outs
xchg
das
fwait
sub
push
cvttps2pi
jmp
(bad)
(bad)
loop
mov
mov
dec
retf
sub
clc
sub
call
adc
push
inc
jo
dec
push
retf
clc
pop
jl
mov
push
adc
push
pop
stos
cdq
cld
imul
aaa
jp
or
aad
jecxz
mov
aad
xchg
repnz
scas
xor
pop
dec
pop
out
push
lock
jno
mov
add
imul
sbb
ins
out
dec
add
test
js
mov
mov
lahf
sub
rcr
mov
movs
lods
sbb
dec
and
enter
jb
dec
mov
cmp
in
lock
popf
adc
adc
jns
es
add
dec
shl
neg
cdq
push
test
aad
sub
test
mov
aad
hlt
and
mov
rol
inc
fs
xor
mov
jmp
xor
mov
cmp
test
lds
cwde
fistp
mov
pushf
dec
mov
adc
push
das
lahf
iret
add
aam
ret
ds
ins
xor
adc
mov
sbb
dec
aad
cmps
(bad)
cld
mov
fst
inc
or
jb
loope
call
mov
push
mov
out
movs
cmp
jmp
ret
fnsave
cmps
adc
or
sbb
ret
xor
fiadd
retf
pop
push
daa
jns
add
retf
xlat
shl
inc
push
aad
rcl
jnp
sti
mov
mov
paddw
sub
(bad)
fistp
scas
cs
add
pop
and
mov
mov
adc
add
mov
adc
adc
pop
cli
pop
dec
dec
mov
jae
pop
cli
or
dec
inc
add
(bad)
adc
iret
test
jg
popa
cmp
xchg
xor
or
jle
push
push
ins
jnp
xchg
cmp
(bad)
push
ret
adc
jmp
clc
and
mov
xchg
adc
and
and
popa
inc
xor
test
out
outs
jp
rcr
(bad)
out
rep
in
jb
stos
mov
test
xchg
lods
add
or
fistp
ja
mov
sub
lods
dec
push
fimul
ror
mov
je
xor
jns
out
nop
stos
adc
or
out
sbb
cld
mov
retf
push
es
test
movs
xchg
xchg
mov
push
pop
mov
movs
retf
dec
rcr
adc
mov
cli
popa
mov
mov
aas
fnstsw
adc
dec
adc
adc
push
arpl
lds
lock
lea
xor
push
mov
fisub
repnz
mov
test
mul
adc
dec
movs
mov
and
out
movs
cdq
jle
in
inc
retf
adc
or
xchg
(bad)
icebp
and
jno
popf
xor
push
retf
pop
inc
cmp
sti
out
(bad)
rcr
(bad)
in
xor
sbb
cmps
mov
into
sub
dec
adc
fcomp
push
shr
jb
dec
loopne
daa
sub
push
pop
cmp
adc
(bad)
mov
fs
pop
stos
dec
out
push
push
jle
jmp
jle
jb
or
cmp
shl
xlat
into
scas
adc
scas
push
pop
xor
cmp
add
(bad)
adc
dec
sahf
retf
sbb
in
sub
sub
aaa
stos
cs
(bad)
mov
adc
mov
jae
ins
dec
cmp
add
ja
ret
lds
outs
mov
pop
int
or
cmps
pushf
cmps
mov
sbb
sub
mov
dec
(bad)
dec
shl
xchg
mov
and
int
jmp
add
jp
pushf
jns
jbe
loop
mov
lock
cmp
jo
sbb
jmp
xor
mov
and
xchg
pusha
add
pop
lock
cmp
jmp
stos
imul
fld
sub
inc
and
mov
scas
mov
aas
cli
adc
cmp
movs
and
mov
jbe
mov
cli
rcl
mov
push
or
call
test
push
dec
test
mov
push
adc
ror
in
sub
add
ret
gs
jne
outs
in
mov
push
sti
cmp
outs
jmp
lods
(bad)
pop
ins
mov
test
cld
call
(bad)
push
(bad)
and
and
push
aam
repnz
add
push
xchg
icebp
sbb
hlt
cli
inc
fisub
ins
fcomp
mov
sub
jno
stc
add
test
dec
pop
push
xrelease
add
adc
cmp
movs
xor
ins
mov
dec
mov
lds
mov
adc
push
fild
dec
cwde
xlat
xchg
push
push
pop
pop
sar
loopne
retf
daa
int
or
add
inc
call
cmp
popa
jne
ror
jg
pop
loope
in
pop
jae
aam
(bad)
iret
je
iret
jle
fisub
popa
mov
jmp
dec
aas
mov
push
loopne
push
sub
cmp
xor
ja
(bad)
push
cmps
push
mov
cmp
lahf
adc
in
mov
jle
stc
or
test
sbb
aad
adc
pop
test
lahf
push
sub
jecxz
fidiv
adc
std
(bad)
sbb
pop
test
cwde
sbb
int3
push
or
xchg
dec
dec
sbb
fisubr
lods
shl
ja
jne
and
sub
pop
(bad)
ds
sbb
add
(bad)
jns
or
mov
jae
shl
fcom
add
dec
xchg
mov
fadd
fdivr
ret
or
in
dec
xor
xchg
(bad)
repz
or
pop
loopne
add
mov
and
lahf
(bad)
in
jns
mov
add
ror
or
lds
shl
loop
outs
hlt
jecxz
dec
std
je
sbb
add
ins
sub
mov
xor
std
jbe
call
jmp
sar
cmps
(bad)
cmp
or
popf
xor
adc
mov
xchg
sub
cwde
out
sub
and
pop
jle
mov
mov
xchg
fst
sar
mov
xchg
jo
xor
add
mov
inc
mov
xor
add
pusha
inc
ins
sbb
rol
sub
mov
imul
ins
ficomp
or
jno
jns
movs
loopne
sahf
push
push
push
push
cmp
ss
int
scas
shl
xchg
jo
pop
inc
or
cmp
xchg
adc
mov
aam
jmp
jle
push
jbe
inc
(bad)
adc
xor
(bad)
mov
xor
test
xchg
nop
pop
add
les
mov
mov
leave
mov
mul
add
mov
mov
sub
xor
dec
pusha
out
mov
xchg
(bad)
adc
adc
and
xor
loope
or
test
ret
cmp
push
add
imul
cli
adc
adc
jl
out
cmp
adc
jg
cmps
cld
scas
test
push
xor
push
jb
dec
inc
out
cld
add
ret
ds
pop
std
gs
xrelease
cmc
inc
lahf
mov
dec
(bad)
fs
sahf
mov
mov
push
pop
mov
rep
aad
imul
xchg
inc
lahf
jmp
je
rcr
stos
rcr
jo
ficomp
mov
nop
imul
mov
call
xchg
movs
std
mov
sbb
xor
mov
cdq
fcom
xor
je
popa
add
test
xor
out
idiv
rcl
xor
jge
fwait
imul
and
xor
in
xchg
pop
push
mov
cld
dec
sbb
push
jnp
sbb
pusha
xchg
xor
outs
cs
js
rol
cmps
aaa
mov
das
sbb
dec
rcl
xchg
mov
dec
mov
or
sar
retf
out
movs
fcompp
rcl
stos
mov
cmp
jmp
outs
out
push
pop
jp
push
sub
adc
mov
mov
and
jne
push
sbb
daa
jno
inc
iret
jae
inc
jbe
idiv
fdivr
mov
data16
sub
xchg
sbb
sar
adc
test
cmp
xchg
and
jecxz
cmc
cwde
pop
lds
ror
add
icebp
add
and
mov
call
and
dec
ds
jmp
add
clc
lea
mov
cli
xor
pop
push
mov
and
mov
lahf
sbb
jbe
add
mov
adc
movs
je
xchg
lahf
mov
loope
cmp
clc
xchg
repnz
lock
cmp
fstp
jge
mov
fdivr
cli
stos
shr
leave
dec
iret
lfs
xor
mov
in
push
fnstenv
add
lahf
sbb
push
(bad)
fld
pop
jns
(bad)
ins
aad
lds
xor
xor
push
push
xchg
dec
imul
jmp
out
mov
dec
dec
xchg
and
fnstcw
inc
std
xchg
add
out
test
push
pop
xchg
leave
xchg
sub
ja
fwait
sbb
or
into
xchg
or
test
js
or
loope
ja
call
cwde
push
(bad)
xchg
xor
jae
xor
push
or
(bad)
lea
fs
xchg
add
xchg
sbb
retf
xchg
dec
out
cmps
cmc
(bad)
adc
adc
push
int
xor
jecxz
xchg
clc
(bad)
mov
les
or
cmp
mov
jns
dec
sbb
sahf
test
cwde
mov
lods
(bad)
retf
out
fistp
(bad)
mov
cmp
inc
enter
scas
enter
fbstp
aaa
aaa
pop
or
mov
dec
mov
mov
in
shl
ficomp
repz
retf
aas
xchg
push
int
cs
aam
add
cmp
iret
fsub
cmp
xor
push
xor
push
addr16
not
cli
test
dec
adc
lods
ret
xor
lds
call
mov
icebp
adc
xchg
or
jecxz
jae
pop
mov
push
call
lods
out
sbb
inc
inc
mov
cmp
inc
jmp
imul
fiadd
inc
mov
push
cli
push
mov
cld
dec
imul
and
cdq
mov
dec
push
or
nop
(bad)
or
push
push
cmp
loopne
mov
or
sbb
mov
and
out
pushf
imul
mov
jae
pop
bound
out
push
retf
inc
cld
push
xchg
aas
xchg
jo
iret
sub
adc
push
iret
out
cmp
inc
push
inc
stos
outs
fsubr
dec
sbb
(bad)
fdivr
sbb
fwait
(bad)
dec
cmp
and
add
(bad)
xchg
repz
js
or
ins
adc
mov
clc
adc
jmp
movs
adc
ja
test
mov
mov
jg
inc
lock
push
pop
outs
or
xchg
mov
pop
in
add
inc
xchg
mov
(bad)
sbb
aad
or
mov
pop
shr
loopne
mov
mov
or
add
je
or
xor
inc
(bad)
gs
and
mov
push
fcomp
dec
fwait
pop
sub
(bad)
js
cli
(bad)
jb
adc
pop
push
ds
xchg
sub
ins
fld
movs
mov
int3
lods
cmp
mov
std
push
sysexit
mov
retf
mov
fsubr
pushf
lahf
mov
ror
sub
inc
mov
repz
dec
adc
push
xchg
nop
jmp
inc
sbb
leave
repnz
add
repz
test
je
fisub
and
add
mov
sti
inc
(bad)
mov
int
mov
popf
sbb
inc
ror
and
add
xchg
xchg
idiv
aam
(bad)
out
jo
or
and
repnz
pop
jecxz
in
test
pop
cmps
leave
repz
add
cmp
mov
imul
(bad)
pop
push
mov
(bad)
and
nop
jmp
test
and
mov
mov
xchg
jp
or
lahf
retf
pop
or
and
cmp
popf
and
dec
repz
cld
dec
out
inc
rcr
adc
cmp
mov
push
mov
push
mul
mov
repnz
pop
jmp
enter
add
mov
fcomp
cld
dec
adc
push
xor
adc
xlat
pop
dec
call
inc
es
inc
fmul
xlat
ins
test
fdivr
dec
aam
sub
cwde
sbb
sahf
jo
leave
lods
mov
popa
call
jno
adc
fdivr
add
add
out
dec
test
test
or
mov
icebp
push
jmp
in
adc
cli
push
mov
xlat
clc
cmps
mov
xor
scas
sub
fsub
cld
shl
pushf
call
aas
mov
and
inc
leave
lods
and
iret
neg
mov
xchg
mov
jmp
pop
mov
je
xchg
sub
push
cwde
sub
mov
pop
fnstsw
cmp
(bad)
mov
push
pop
inc
dec
ret
sbb
push
push
cs
ja
jno
sti
mov
mov
dec
(bad)
mov
sbb
mov
sub
add
in
hlt
sub
inc
jo
aad
int
mov
lds
les
mov
sahf
mov
daa
cmp
push
bound
cmp
lods
mov
pop
loope
mov
adc
cmps
nop
sub
sub
ret
or
mov
in
jb
bound
mov
cmc
loope
std
ret
stc
stos
dec
mov
push
sbb
test
inc
out
cmp
popf
arpl
xor
icebp
jl
jnp
sbb
jae
push
jno
movs
push
es
lahf
adc
call
mov
inc
sbb
or
into
out
dec
mov
mov
fiadd
movs
scas
stos
pop
fcomp
pop
dec
rcl
dec
rcr
xor
lods
pop
pop
pop
lock
pop
mov
repz
mov
mov
pop
add
cmp
lgs
pusha
lods
or
inc
xor
xchg
mov
pop
pop
retf
sbb
mov
out
retf
and
mov
in
int3
push
jne
or
mov
outs
sbb
adc
push
or
inc
sub
inc
cmc
add
out
xchg
sub
sub
xchg
ret
in
and
jae
jb
ficomp
push
sbb
popf
movs
dec
mov
adc
mov
sub
cmp
pop
pop
xlat
xchg
pop
psrlq
sub
cld
fdiv
scas
(bad)
std
add
or
lods
sub
jbe
jle
retf
iret
bound
je
prefetch
and
sub
frstor
push
or
pop
sti
mov
or
movs
leave
out
int
fisubr
popf
aaa
and
mov
cmp
pop
pop
loopne
mov
jmp
jb
out
ss
add
inc
push
cmp
loope
cmp
add
rcl
add
jo
pop
cld
pop
mov
std
iret
clc
sbb
dec
xor
test
mov
xchg
movs
xchg
sbb
ret
xchg
pushf
xchg
retf
add
adc
inc
fild
mov
or
mov
dec
stc
mov
sbb
pop
pop
sbb
cwde
jno
fldl2e
jl
mov
inc
xor
or
ins
adc
scas
fwait
je
stos
sbb
adc
and
mov
leave
pushf
jnp
adc
xchg
pop
imul
or
xchg
inc
daa
test
test
jmp
fwait
push
or
push
retf
add
fiadd
pop
gs
inc
jmp
ins
or
jge
push
pop
mov
sub
(bad)
xor
push
lock
call
les
enter
dec
shr
lds
add
add
xor
ja
movs
or
push
add
push
test
loopne
out
mov
pop
cmps
fcomp
int3
repnz
jae
cmp
and
mov
mov
mov
jge
jl
dec
jnp
outs
add
sub
mov
repz
adc
or
ins
das
push
daa
jle
pop
repz
dec
pop
out
cmc
das
lahf
adc
xor
je
test
adc
movs
ins
data16
and
dec
fild
inc
das
enter
adc
sbb
push
fbld
aad
jmp
call
(bad)
in
outs
adc
std
and
das
js
pusha
out
clc
das
loopne
inc
mov
add
push
ficom
cdq
jle
cmc
jge
ja
cs
int3
imul
mov
out
iret
lock
int
push
jl
js
adc
repz
push
xchg
jns
cmp
(bad)
mov
xor
and
jecxz
cli
cmp
sahf
int
daa
mov
dec
sub
sub
lahf
jno
xor
rol
sbb
xchg
xchg
xchg
cmp
ins
movs
imul
xor
pop
inc
mov
sbb
inc
sub
jo
ret
jae
in
and
mov
outs
popa
mov
jg
mov
xor
stos
bound
icebp
test
mov
jne
inc
ret
jl
arpl
test
or
mov
push
js
mov
int3
xchg
cmps
xor
pop
stos
jae
mov
icebp
fwait
mov
and
sub
mov
xor
and
mov
inc
push
fnstenv
lods
and
lock
push
je
test
or
mov
in
jae
xor
mul
jle
gs
stc
or
nop
enter
pop
jecxz
movs
mov
adc
xor
addr16
inc
xor
push
cwde
popf
xor
jp
xor
outs
sahf
pop
lods
fisttp
mov
xchg
jge
sub
(bad)
cmc
aas
mov
adc
(bad)
bound
inc
xchg
cmps
cmps
neg
jne
sub
adc
pop
out
enter
ret
jns
dec
dec
mov
pusha
sbb
and
hlt
sbb
aam
ss
fbld
rol
pop
sar
or
xor
sub
lahf
push
add
dec
out
pop
xchg
fisub
push
jb
push
ffreep
or
mov
jo
jae
push
mov
push
cmp
jbe
scas
popf
aaa
imul
shl
out
push
nop
xchg
ret
mov
test
je
inc
inc
pop
loope
cmp
or
das
dec
adc
mov
jno
xor
mov
or
or
ja
pop
mov
call
outs
cli
push
adc
fstp
adc
cmps
xchg
icebp
sub
ret
cmp
jbe
jecxz
(bad)
out
xlat
pop
data16
cld
scas
jno
sbb
test
loope
mov
inc
push
shr
sbb
lds
popa
or
scas
imul
mov
fbstp
pop
pushf
mov
adc
dec
movd
inc
aas
sub
pop
pop
and
jnp
and
fisub
int
out
fcom
xor
push
sbb
nop
cli
sub
or
(bad)
fst
sub
mov
xchg
sbb
popf
sub
retf
add
adc
mov
cdq
sbb
push
addr16
xor
and
sub
test
mov
out
(bad)
cmps
adc
sbb
mov
mov
out
add
pop
inc
or
loopne
push
add
sub
or
xchg
or
pop
or
test
push
sub
loopne
fs
call
xor
push
sti
jnp
(bad)
xchg
dec
arpl
push
sbb
cli
mov
jae
jbe
inc
enter
ffree
leave
and
repz
or
retf
les
mov
stc
sub
ins
mov
or
(bad)
sub
push
mul
outs
ds
push
rcl
mov
xchg
pop
jno
xlat
push
dec
and
ja
push
cmp
enter
cmp
iret
push
daa
dec
sbb
push
and
dec
dec
and
cmc
push
loop
test
mov
cmps
jbe
ja
call
lock
out
inc
mov
pop
xchg
data16
mov
jnp
outs
call
xor
jns
enter
iret
mov
mov
enter
loopne
and
sti
push
fsubr
loop
jg
mov
iret
movs
sahf
test
shr
mov
or
cmc
movs
xchg
fcmovbe
push
jmp
push
imul
lods
xchg
mov
es
std
mov
jbe
loope
mov
popf
mov
pop
rol
dec
xchg
fnsave
mov
sbb
mov
mov
cmps
and
add
mov
xor
lods
aas
dec
out
cs
adc
adc
cmp
pop
popf
cmp
mov
sti
pop
outs
mov
jge
xor
jbe
jmp
bound
repnz
sub
popa
icebp
rcl
dec
adc
ret
push
bound
scas
popa
xor
popa
das
sub
inc
dec
retf
push
retf
and
pop
jle
pop
ds
(bad)
push
gs
dec
js
std
out
or
xchg
cmps
cmovs
pop
daa
gs
sbb
add
cmps
sbb
sbb
iret
add
scas
sbb
sti
mov
sub
test
lahf
call
dec
loopne
and
jne
xor
movs
lds
and
pop
pusha
push
mov
adc
pop
mov
fnstcw
jae
or
jo
mov
and
cwde
cmp
push
jbe
cmp
add
cwde
in
lea
xchg
push
fbld
sub
mov
cmp
inc
pop
sar
fmul
movs
xchg
pushf
xor
in
pop
dec
xchg
inc
sbb
push
pop
sub
cli
mov
and
add
add
addr16
stc
xor
sub
sbb
dec
pop
mov
lds
push
pushf
fcompp
rcr
cmp
cmp
adc
nop
loop
inc
jne
cmp
les
mov
add
push
mov
or
iret
mov
mov
dec
sbb
clc
jge
add
mov
bound
test
arpl
fs
lods
mov
or
pop
jnp
jae
cmps
int3
mov
fimul
js
xchg
inc
jmp
xchg
inc
mov
sub
repz
aaa
stos
ficom
shr
mov
sub
mov
cmp
sar
movs
test
outs
int3
aaa
or
adc
inc
std
adc
mov
fisubr
ficom
cmp
pop
repnz
gs
push
jo
test
sub
jmp
mov
mov
retf
mov
lock
(bad)
scas
faddp
out
or
add
mov
push
adc
imul
pop
or
stc
mov
dec
cmp
push
push
pop
ja
loop
movs
mov
xchg
push
in
xchg
jecxz
dec
cmc
adc
xor
ins
outs
and
int3
dec
daa
or
sub
mov
and
call
imul
push
test
scas
xlat
dec
dec
cmps
pusha
movs
ror
das
mov
xor
sbb
movs
xor
fcmovu
bound
ret
(bad)
push
and
retf
push
xor
pop
loopne
retf
push
(bad)
jp
mov
dec
or
dec
ja
retf
rcl
cld
bound
fimul
sub
sub
xchg
sub
push
imul
lahf
push
fwait
push
(bad)
mov
jl
xchg
lea
cmp
xchg
or
pop
or
jmp
data16
or
ficomp
jno
dec
add
cmc
aam
dec
imul
and
scas
mov
pop
cld
and
add
dec
fdiv
xchg
lods
pop
cmp
adc
seto
dec
and
dec
stos
adc
mov
mov
dec
add
mov
jnp
push
pop
test
lods
cli
lds
outs
cmps
and
not
nop
jnp
mov
mov
aas
jmp
cwde
lea
dec
imul
(bad)
dec
dec
xor
dec
mov
mov
xor
(bad)
mov
or
cld
ins
cmp
lods
cdq
fsub
cmps
movs
mov
inc
in
aaa
cmc
cmp
adc
mov
hlt
lahf
xor
int
dec
aas
push
or
into
inc
dec
pop
and
outs
jmp
scas
mov
retf
mov
and
add
push
and
outs
and
clc
into
mov
imul
add
fidivr
rol
sbb
xchg
jmp
loope
loop
mov
jg
icebp
repnz
mov
aam
loopne
mov
mov
imul
jne
sbb
jmp
mov
inc
cmp
(bad)
ret
mov
inc
mov
push
push
pop
add
jne
ret
push
push
mov
lahf
mov
popf
les
cdq
call
jg
mov
pop
clc
in
stc
and
lds
outs
ins
mov
clc
pop
pop
push
mov
jg
cmps
jp
scas
sub
(bad)
sub
or
mov
je
das
or
dec
fcomp
aaa
pminub
test
test
cmp
sub
arpl
sub
pop
sbb
or
(bad)
or
push
cmp
adc
push
sbb
pop
sbb
or
jl
fcomi
adc
sub
dec
and
jo
ins
ret
(bad)
xor
(bad)
or
iret
inc
rcl
mov
push
out
push
daa
inc
adc
xor
adc
fst
sbb
xor
push
pop
pop
cmp
pop
cs
push
out
(bad)
mov
test
daa
pop
mov
mov
sub
rdtsc
mov
retf
rol
cmp
rol
daa
mov
repz
and
xchg
cmp
ins
fwait
jmp
es
js
hlt
push
cli
movs
mov
adc
mov
or
ror
imul
xchg
sub
test
leave
popa
add
ret
sbb
(bad)
ds
stc
mov
addr16
sbb
aaa
sbb
stc
jbe
cwde
ins
int
hlt
ror
jl
aaa
popa
gs
repnz
pop
daa
xchg
scas
out
outs
(bad)
and
(bad)
cdq
repnz
adc
(bad)
pop
mov
cdq
lahf
hlt
pusha
cmp
inc
xchg
inc
xchg
or
cdq
loop
imul
inc
out
in
mov
fcmovb
pop
adc
int3
ret
rcr
push
addr16
js
mov
jb
popa
push
adc
(bad)
(bad)
loopne
mov
arpl
xchg
or
push
fdiv
inc
xor
icebp
movs
(bad)
mov
aad
pushf
loop
cwde
adc
in
fcomp
mov
ds
cmp
stc
cdq
enter
mov
inc
out
add
jmp
mov
sub
dec
pop
pop
cmp
sub
sar
fadd
inc
fst
mov
test
dec
dec
stos
repz
or
inc
inc
add
sbb
frstor
jmp
lds
adc
jae
fldenv
xchg
mov
jmp
cli
or
dec
dec
call
arpl
adc
or
and
cmp
movs
pushf
(bad)
mov
or
sub
jae
rol
fucom
dec
sub
fst
pop
push
lods
or
jmp
xchg
mov
pop
push
cmps
outs
inc
mov
icebp
clc
lods
mov
push
jns
rol
xchg
inc
jmp
and
stos
xlat
arpl
or
pop
outs
enter
shr
imul
dec
lock
adc
mov
xchg
xchg
push
and
leave
pmaddwd
mov
and
lds
jno
jb
call
lds
popf
push
jne
stos
adc
hlt
cwde
ds
repnz
stos
push
adc
sbb
in
dec
and
add
scas
or
out
or
adc
test
repnz
jno
test
inc
mov
gs
enter
std
and
xor
xor
pop
sbb
popf
daa
dec
mov
sbb
js
shl
push
and
cmps
ror
sub
inc
fisttp
sub
(bad)
or
imul
cmp
push
daa
daa
and
mov
adc
call
ret
xor
in
inc
gs
repz
sti
scas
add
mov
pop
lods
jno
ret
mov
sub
mov
jno
mov
or
fdiv
ret
fisttp
jge
repnz
sub
jne
adc
lods
jne
(bad)
in
push
jl
mov
cmp
push
push
push
adc
enter
sub
out
and
inc
lock
xchg
inc
sbb
call
jg
pop
mov
dec
xchg
sbb
dec
mov
addr16
dec
or
mov
cmp
fnstenv
fwait
inc
stos
jns
or
mov
dec
or
mov
(bad)
fcmovnb
pop
push
test
or
jge
test
pop
test
mov
and
lods
sahf
dec
aas
mov
popa
dec
mov
pop
(bad)
(bad)
fist
int3
jnp
mov
add
jp
add
mov
adc
sbb
xchg
cmps
pop
cmp
cmp
outs
xor
enter
and
leave
lahf
js
loope
jecxz
aaa
and
xchg
mov
lds
xchg
xor
retf
mov
inc
sbb
push
mov
call
fisub
and
sbb
mov
inc
(bad)
or
pop
push
shl
pop
fistp
sub
or
mov
cdq
dec
jl
js
out
addr16
aaa
(bad)
sbb
ret
neg
gs
pop
loope
jge
inc
rcl
sbb
aas
mov
out
mov
xchg
div
adc
or
cmp
and
cdq
lahf
cmp
sar
mov
inc
lahf
test
iret
clc
(bad)
fwait
arpl
or
push
push
enterw
add
fadd
xchg
dec
mov
or
fisub
jl
xchg
mov
es
pop
mov
mov
inc
jb
pop
dec
xor
add
dec
adc
mov
push
stc
movs
in
rcr
out
retf
(bad)
retf
sbb
or
js
or
xor
scas
les
cmp
lods
inc
jl
add
push
(bad)
push
test
xor
mov
icebp
or
je
mov
dec
xchg
push
test
cmp
push
xor
mov
jg
in
fisubr
jbe
cmp
gs
add
mov
adc
mov
jge
sub
pushf
outs
or
imul
out
pop
std
gs
je
cmp
dec
mov
int
es
mov
jo
popf
js
mov
pushf
mov
xlat
movs
in
sbb
mov
in
fwait
push
xor
sti
retf
pop
aam
adc
lods
outs
retf
inc
pop
push
pop
push
fwait
fcom
sbb
push
pop
mov
data16
dec
or
mov
mov
add
clc
mov
cmp
repnz
ins
pop
sbb
lea
mov
add
xor
lods
call
outs
add
add
pop
popf
mov
repnz
jbe
sbb
push
call
sahf
cmp
sub
(bad)
mov
dec
jp
sub
sbb
stc
movs
sub
loope
xor
push
pop
jp
sahf
sbb
mov
nop
bound
xchg
pop
mov
nop
fst
sbb
sub
cwde
jecxz
into
pop
cmp
in
repz
dec
or
lods
bound
dec
(bad)
inc
(bad)
push
jg
mov
mov
in
ds
sti
or
rcl
daa
mov
mov
adc
xor
xor
cmp
sahf
clc
xchg
mov
inc
fidiv
mov
or
retf
rcl
fistp
or
int3
addr16
frstor
cli
mov
pop
lods
inc
ss
xchg
cmc
adc
jb
jnp
sbb
xchg
fcomp
mov
arpl
test
cmp
pop
outs
in
lods
in
xchg
mov
(bad)
jbe
add
add
or
push
mov
imul
inc
dec
and
push
sub
push
and
push
cmp
xchg
xchg
xchg
jp
and
or
cmc
jp
xchg
movs
push
stos
xchg
inc
and
fild
repnz
sub
jge
idiv
aam
cli
adc
repz
xchg
cs
cmps
sbb
call
inc
stc
sub
push
ret
cmp
pop
clc
inc
add
iret
lds
xchg
sub
jmp
mov
inc
(bad)
pop
cmc
ds
dec
adc
rcr
push
(bad)
in
push
ja
pushf
mov
or
iret
ret
add
test
fldenv
daa
mov
pop
xchg
xchg
mov
pop
push
out
xchg
xchg
repnz
enter
lock
(bad)
repz
call
out
adc
jns
test
dec
sti
das
hlt
xchg
mov
mov
(bad)
data16
loopne
adc
and
dec
je
call
push
mov
into
dec
js
ret
wrmsr
arpl
and
and
aam
lds
in
adc
or
mov
or
pop
xchg
mov
ret
shl
pop
rol
sub
ss
popa
jg
jno
mov
out
in
push
sbb
fiadd
fs
lea
pop
sub
sbb
xor
push
mov
outs
cwde
mov
cmc
leave
jg
ret
ds
sahf
xlat
popf
in
mov
pop
push
stos
mov
fadd
mov
fwait
xor
inc
fcom
xchg
popf
push
and
div
hlt
jecxz
stc
mov
cmps
mov
jne
add
loop
add
jb
ret
out
ret
clc
mov
sbb
fldenv
mov
jmp
sub
popf
in
arpl
dec
mov
sahf
or
shr
xchg
inc
daa
in
jp
int3
xchg
ins
xor
(bad)
out
test
mov
lea
dec
test
adc
mov
push
fild
bound
sbb
and
pop
xor
jnp
sahf
imul
pop
cmp
jne
sub
and
adc
dec
addr16
scas
jnp
and
add
(bad)
(bad)
aad
cmp
fstp
add
push
xor
and
mov
push
stc
test
cmc
cli
xor
pop
inc
test
shr
inc
sub
mov
xor
xor
xchg
pop
and
nop
dec
dec
xor
xchg
sub
sbb
rcr
les
enter
sub
cwde
cmps
push
sahf
cmps
cmp
push
dec
fisub
jbe
pop
fstp
push
std
es
in
jno
scas
loopne
mov
adc
and
test
jmp
xor
iret
mov
inc
adc
mov
or
in
dec
xchg
das
repz
xor
jp
mov
iret
inc
je
xor
arpl
push
xor
inc
mov
pop
test
inc
cli
push
lods
test
push
ds
aam
jne
shl
aas
rcl
scas
ins
fmul
in
push
outs
scas
ficomp
cmp
sbb
push
aad
mul
aas
fld
scas
inc
fcomip
or
in
mov
adc
test
xchg
sahf
mov
repz
adc
jne
test
xchg
xchg
and
stos
out
pop
mov
(bad)
push
mov
(bad)
test
movs
cwde
ret
aad
inc
daa
fsub
jmp
mov
je
xor
idiv
rcr
pop
js
jmp
xor
lock
add
in
das
gs
stos
sub
pop
cmp
(bad)
and
or
cwde
jbe
jmp
out
dec
icebp
cs
ret
dec
xor
(bad)
stos
rol
int3
loop
std
ss
sub
leave
lods
xor
in
test
cdq
dec
aam
jge
inc
arpl
les
into
sbb
shl
shl
test
test
adc
and
lds
push
inc
out
sub
and
retf
(bad)
pop
mov
jle
push
ss
(bad)
(bad)
mov
pop
mov
dec
imul
lods
mov
daa
cwde
in
fsubr
cmc
sti
mov
inc
mov
jb
in
cmp
fwait
in
sahf
ja
mov
gs
add
stc
cmps
js
out
sub
or
pop
scas
and
mov
int3
sar
pusha
add
les
ror
mov
nop
out
rcl
out
mov
ins
xchg
ds
mov
out
xchg
shl
(bad)
sahf
fs
fmul
out
xchg
or
sub
js
in
into
cdq
dec
jae
enter
jmp
adc
sub
psrad
mov
mov
ins
clc
push
mov
xchg
mov
in
ret
sub
je
xchg
sbb
mov
aad
add
inc
hlt
add
in
inc
sbb
leave
dec
jecxz
(bad)
call
mov
sbb
lds
in
fucom
adc
inc
and
mov
cmp
ss
fnstcw
add
cmp
inc
mov
ins
add
gs
sbb
fdiv
xchg
icebp
xlat
fstp
int3
push
cmp
mov
mov
aaa
aad
les
gs
xchg
inc
loopne
jmp
push
inc
imul
test
fdivr
mov
sbb
mov
ins
les
push
inc
int3
enter
cmp
jo
inc
mov
gs
mov
out
mov
stos
jae
cs
add
cld
dec
and
imul
or
inc
cmp
push
jge
mov
dec
iret
imul
mov
sub
shr
push
(bad)
std
adc
cwde
stos
sbb
jg
xor
adc
dec
inc
stos
cmps
inc
lea
retf
xchg
nop
out
movs
inc
or
fild
adc
mov
fcom
fisttp
aad
(bad)
sbb
mov
fcomp
sbb
sbb
jl
sti
cmp
daa
pop
xchg
loopne
pop
cli
adc
sbb
add
dec
call
xor
adc
imul
and
mov
in
imul
imul
aad
enter
xor
inc
enter
nop
xlat
mov
out
je
mov
fisubr
fcom
cmc
das
fld
pop
and
cli
and
fs
sub
mov
stos
pop
xchg
or
pop
(bad)
fwait
adc
add
imul
push
sbb
xchg
lea
out
in
push
mov
xchg
mov
cmp
pop
pop
and
lock
push
imul
pop
mov
sub
and
and
xchg
fnstsw
outs
jp
pop
inc
lock
cmp
push
les
adc
jecxz
jmp
leavew
loop
jge
xor
cmp
xchg
outs
movs
popa
popa
inc
cli
(bad)
sbb
mov
xchg
mov
adc
mov
nop
(bad)
cmp
adc
ds
leave
in
dec
arpl
jae
xchg
push
add
jbe
push
lds
das
jmp
xchg
mov
and
jo
leave
inc
rcl
push
mov
mov
sub
xor
mov
cmc
jne
adc
xchg
mov
mov
sbb
rcr
in
and
inc
inc
imul
(bad)
fdiv
fdivr
adc
lock
xor
addr16
inc
push
mov
push
test
iret
mov
cld
ins
arpl
and
cmp
inc
cdq
popa
out
jmp
inc
pop
cld
adc
addr16
outs
leave
xor
xor
xchg
push
fist
jmp
add
mov
call
test
neg
push
ret
or
push
mov
xor
rol
xchg
fcom
jg
sbb
sti
cmp
dec
jno
je
jbe
inc
inc
pop
cmc
lods
fnstsw
push
push
pushf
cmps
xchg
imul
or
jmp
push
scas
xchg
cs
scas
pop
iret
sbb
xor
(bad)
xor
jno
test
cmp
or
into
out
pop
xor
stos
add
mov
xor
xor
adc
shr
or
push
or
(bad)
outs
jns
and
and
cmps
mov
pop
xacquire
bound
jmp
push
cmp
test
push
pop
inc
pop
adc
and
leave
and
or
test
mov
xor
stos
adc
add
pop
jbe
repz
inc
addr16
xchg
or
or
je
imul
pop
jae
(bad)
ja
inc
imul
sbb
ret
mov
test
fwait
add
mov
scas
icebp
mov
add
ror
add
movq
div
aad
js
scas
adc
std
add
cmps
cld
test
out
xor
dec
cmps
sub
cmp
sahf
add
cmp
lods
test
cli
out
dec
retf
out
pop
or
jp
ja
push
xlat
mov
sub
loop
iret
ret
mov
call
mov
mov
push
ror
stc
sub
int3
xchg
movs
scas
loop
mov
jae
sbb
push
cmp
js
lahf
imul
sub
pop
mov
nop
jp
cwde
and
or
fild
add
sub
push
sti
xor
ja
pop
aaa
xor
pop
or
bound
dec
jb
es
or
int3
pop
stos
push
push
or
cmp
sbb
nop
stos
aas
cdq
inc
jmp
bts
ja
adc
clc
rcl
sahf
jg
fiadd
sub
push
test
cli
test
cmp
scas
ds
imul
in
xor
inc
mov
in
ja
les
sbb
sbb
cmp
pop
push
jns
sub
mov
or
imul
ret
cmc
pop
pop
leave
add
jns
inc
jmp
mov
ret
mov
cmp
inc
inc
mov
lea
movs
movs
cli
lea
xor
sbb
or
jl
jbe
cmps
push
into
and
stos
jb
adc
stos
adc
sub
mov
js
mov
dec
push
jae
pop
aad
and
adc
xor
std
cmp
add
adc
dec
cs
mov
sub
jnp
iret
mov
pusha
lods
mov
and
mov
sar
cmp
and
test
out
jno
mov
mov
movs
scas
add
mov
inc
js
xchg
out
(bad)
out
scas
inc
scas
xor
add
mov
(bad)
sub
push
jne
cdq
add
lods
stc
(bad)
scas
shr
mov
sti
in
sahf
scas
in
pop
push
enter
aad
aad
(bad)
test
jns
xor
call
inc
sub
cmps
dec
pushf
gs
fisttp
push
add
mov
iret
push
aam
add
xor
bound
mov
shl
pusha
dec
loop
aaa
mov
pop
nop
xor
mov
out
pop
ficom
and
pop
jmp
add
inc
cmp
jb
jecxz
mov
mov
ror
sub
jbe
or
xor
das
xor
out
mov
aas
imul
(bad)
mov
push
test
add
fimul
pop
pop
retf
aas
js
xor
xlat
lock
xchg
inc
scas
or
fdiv
stc
bound
push
add
ret
inc
mov
cmc
push
out
aas
cmps
pop
mov
add
imul
mov
jle
add
ins
sbb
pcmpeqd
shld
xchg
icebp
dec
inc
sti
adc
sub
out
inc
mov
aas
rcl
fmul
mov
dec
movs
xor
retf
mov
cmp
fild
jle
jns
aaa
xchg
push
fild
daa
sub
les
xchg
mov
xlat
bound
adc
xor
icebp
mov
retf
pop
push
mov
aaa
lock
pop
test
inc
je
dec
in
loop
jmp
push
cs
push
xlat
add
ret
mov
popf
mov
cmp
sbb
and
mov
cmp
xchg
pop
loope
mov
xchg
inc
(bad)
dec
mov
ins
fs
pop
add
inc
aad
scas
xor
in
dec
mov
sbb
fistp
jno
mov
add
sub
add
out
or
test
fstp
pop
mov
std
pop
or
movs
jp
xor
xchg
dec
cmp
mov
mov
out
fstp
mov
ret
mov
mov
pusha
and
sub
gs
aad
test
push
mov
dec
aas
adc
mov
test
mov
out
xchg
push
repz
ins
inc
inc
jnp
stc
sub
ss
ins
addr16
int
ins
popa
xchg
sbb
cmp
dec
(bad)
sbb
cmp
cs
lods
sbb
shr
daa
pusha
fistp
dec
dec
jb
lock
xor
sub
ja
sub
out
sub
xchg
jg
rcr
and
bound
ins
mov
and
scas
add
mov
sbb
and
nop
arpl
(bad)
loopne
pop
xlat
mov
or
push
test
dec
stos
xchg
cmc
adc
test
leave
data16
jb
rcr
mov
sub
retf
fs
call
nop
ret
fucomp
xchg
push
cmp
idiv
adc
fst
aaa
enter
sbb
inc
mov
int3
cdq
mov
push
jbe
dec
xlat
pop
mov
cs
jnp
jmp
jle
retf
shl
scas
retf
push
mov
iret
dec
and
xor
pushf
sbb
sbb
mov
push
push
sbb
cwde
and
jge
pop
mov
cmp
sub
sbb
pop
mov
bound
mov
jnp
test
rol
bound
mov
push
jge
push
js
mov
xchg
ins
mov
addr16
test
dec
xchg
push
outs
inc
neg
jb
cmp
mov
jae
inc
xlat
add
ret
sub
push
xor
add
inc
out
push
mov
push
push
retf
add
into
sahf
cmc
pop
std
pop
int3
movs
movs
fld
mov
inc
in
(bad)
in
jae
and
movs
xchg
sti
fisub
mov
stos
jb
lods
call
stos
ins
ins
sub
mov
dec
pop
mov
mov
fbld
ret
mov
fwait
out
pop
pop
sbb
or
or
int
xor
xor
inc
(bad)
call
les
cld
adc
scas
and
add
popa
mov
enter
jo
test
imul
xchg
mov
das
mov
dec
leave
push
mov
stc
fdiv
dec
inc
push
movs
and
add
push
mov
fwait
sbb
inc
push
inc
sbb
test
or
in
mov
sub
je
cmp
mov
mov
cmp
xor
push
jecxz
repnz
fs
test
pop
inc
jns
out
call
sahf
bound
loopne
stc
sub
hlt
xchg
add
out
imul
cmps
out
stc
fisttp
cs
icebp
and
pusha
outs
mov
cmps
retf
push
push
push
push
ret
pop
(bad)
pushf
dec
jmp
dec
in
(bad)
cmp
adc
jle
imul
fidivr
xor
dec
xlat
push
xor
test
push
out
mov
sbb
dec
cmps
fisttp
clc
xor
pop
cmps
popa
outs
daa
dec
rcpps
inc
jge
jns
add
dec
cmp
cmp
inc
sub
mov
mov
js
cmp
adc
push
inc
ds
fisttp
fisubr
add
jb
mov
jge
sub
or
out
or
jae
cmp
scas
dec
aam
and
cmp
test
out
and
cdq
shr
mov
mov
mov
jae
pop
inc
jmp
and
jmp
cmp
add
mov
mov
call
out
jbe
ins
les
pop
add
ins
cmps
outs
or
jmp
shl
cmps
inc
enter
outs
sbb
dec
push
and
bnd
pop
sub
clc
fnstenv
push
popf
mov
mov
es
scas
add
leave
movs
les
loop
gs
jl
xor
pop
imul
les
or
mov
cmp
adc
cmps
pop
inc
xchg
sbb
push
mov
or
mov
hlt
rcr
dec
ins
scas
sbb
jne
hlt
movs
and
push
mov
sbb
or
add
dec
mov
jo
js
std
jp
xor
dec
push
xchg
jb
pop
rcr
pop
add
pop
fnstcw
jbe
js
call
movs
push
inc
jg
dec
inc
movzx
in
jae
push
mov
inc
inc
or
xchg
push
mov
jb
xchg
ins
test
ret
cmp
jbe
lods
inc
jno
repz
dec
sub
mov
in
sub
ret
push
stos
sbb
xor
push
jl
mov
dec
dec
sbb
ja
or
mov
retf
push
sbb
or
in
xor
xchg
inc
call
shl
mov
pop
jnp
lahf
outs
add
jns
outs
pop
adc
xchg
inc
pop
icebp
loopne
in
mov
adc
ret
leave
add
out
imul
dec
xor
pop
mov
mov
lea
popa
adc
shl
aas
stos
pushf
push
cli
mov
retf
push
ret
pop
inc
or
js
cs
stos
mov
je
mov
and
arpl
js
in
xor
sub
pop
call
paddusb
fs
iret
movs
int
mov
popf
xor
push
jecxz
stc
arpl
ret
fcom
lods
mov
jp
or
and
sar
xchg
mov
mov
std
push
es
test
jl
jbe
ret
setbe
lahf
sbb
cwde
pop
aaa
out
shl
gs
shr
xchg
xor
adc
jp
test
loop
out
out
sub
pop
jnp
mov
inc
loop
aam
xlat
pushf
sti
mov
push
ficomp
sbb
lock
and
ss
and
std
sbb
dec
dec
ror
js
sub
push
sub
xchg
sbb
or
mov
jb
sub
lea
stos
or
movs
test
data16
xchg
das
lds
ins
dec
xor
popa
idiv
xor
add
inc
outs
inc
and
mov
mov
dec
sub
sahf
jo
in
adc
fisubr
dec
enter
leave
mov
(bad)
push
mov
retf
(bad)
pop
pop
popf
cld
(bad)
rol
inc
sbb
out
bound
rcr
cli
jo
sub
ja
cmp
inc
test
idiv
dec
scas
push
rcr
jae
in
jb
(bad)
lods
add
adc
jecxz
ss
sub
mov
inc
cmps
jle
inc
mov
mov
jg
pop
mov
dec
adc
pop
data16
jmp
sbb
into
ss
dec
es
adc
test
cmp
fs
dec
cmp
cmp
sbb
pop
jge
mov
xchg
pop
dec
cmp
jle
clc
sub
push
lods
add
not
jl
cmp
push
test
loope
and
jmp
bound
jnp
add
call
dec
jmp
and
mov
sub
xlat
jmp
dec
sub
enter
leave
mov
outs
pop
adc
jmp
int3
ja
push
pop
xchg
jbe
pop
or
adc
in
adc
retf
aad
fnstenv
cli
push
mov
pushf
dec
not
int
dec
add
outs
adc
jg
jmp
sbb
cs
add
push
xchg
in
mov
outs
out
pop
adc
ror
xchg
push
adc
mov
pop
aas
nop
dec
sbb
jno
(bad)
sbb
push
in
fs
test
push
or
ja
ret
xchg
inc
mov
ins
adc
outs
xchg
aaa
ror
rol
mov
pushf
stos
xor
sbb
xchg
(bad)
mov
sub
pop
ret
sub
push
mov
in
enter
jmp
dec
clc
cmp
jp
jle
repz
bound
fimul
ret
xchg
stos
xchg
and
push
push
mov
add
aas
push
inc
(bad)
xor
in
mov
push
sti
call
adc
imul
pop
out
jo
sbb
cmp
call
xchg
sbb
ss
mov
or
fist
dec
mov
mov
nop
jmp
scas
jge
lods
sub
mov
cmp
outs
pop
ficom
fstp
push
adc
daa
xchg
ss
rcl
daa
imul
mov
pop
xor
aam
or
mov
stc
sub
inc
hlt
adc
ja
test
or
cli
mov
jns
push
xlat
vandnps
in
cmp
sar
and
sti
mov
imul
mov
inc
and
in
inc
or
xor
xchg
test
fistp
jbe
inc
inc
cs
push
xchg
popf
mov
cs
adc
std
sub
out
and
outs
mov
push
aaa
adc
out
jae
cld
sar
lods
adc
sub
ins
aas
fstp
push
(bad)
cmp
mov
in
aas
lds
adc
jae
jecxz
push
aas
push
xor
mov
mov
div
pop
lahf
jecxz
and
(bad)
out
aam
add
add
fsubr
add
std
jl
ins
sbb
cdq
pop
inc
jp
in
lahf
fistp
inc
inc
cs
or
dec
sub
mov
xchg
cwde
pop
inc
mov
pop
lds
js
lods
imul
into
mov
dec
clts
pop
or
xchg
adc
jae
jns
xchg
aad
push
mov
test
lea
jnp
ins
movs
add
test
cli
jmp
imul
retf
test
adc
bound
pop
add
mov
loope
pushf
and
inc
fs
sub
mov
add
sbb
jecxz
in
jg
xor
setne
cli
mov
ret
and
mov
push
push
retf
out
push
(bad)
mov
xor
cmp
test
idiv
sbb
mov
mov
dec
imul
jmp
outs
in
pop
add
movs
shr
test
popf
mov
repz
std
arpl
mov
xor
sbb
in
and
pop
std
int3
and
sahf
push
xlat
sub
pop
fisttp
add
sbb
leave
xchg
in
ret
jnp
imul
lods
push
push
or
and
jmp
retf
shr
mov
pop
addr16
push
mov
jbe
addr16
stos
out
call
std
(bad)
cmp
xor
mov
fcmovu
mov
pop
inc
push
add
mov
or
jno
add
add
and
jecxz
es
in
nop
cmps
mov
pop
dec
push
imul
daa
and
sbb
cmp
mov
lds
enter
xchg
scas
aad
aam
adc
fwait
loopne
(bad)
std
fst
int
scas
mov
cdq
jno
adc
das
and
fmul
retf
pop
rol
aad
aam
mov
arpl
xchg
pop
push
repz
adc
aas
xor
mov
pop
retw
add
leave
fadd
imul
mov
mov
push
loop
movs
in
js
hlt
daa
jne
inc
push
jle
mov
call
out
mov
jmp
xor
pop
or
adc
movs
cdq
pop
and
mov
icebp
dec
pop
retf
push
mov
data16
data16
inc
shl
sti
pop
ret
cmp
push
sar
or
adc
pushf
stc
arpl
repnz
mov
into
fucomip
les
es
or
xchg
jns
mov
cmp
pop
fisttp
dec
push
mov
(bad)
adc
(bad)
inc
xchg
ret
rcr
cdq
jne
jae
inc
sub
push
jbe
sbb
gs
(bad)
bound
mov
and
sub
stos
int3
mov
out
pop
in
iret
mov
or
adc
mov
or
faddp
cmp
imul
inc
rcl
mov
jge
mov
cs
adc
(bad)
sti
mov
call
daa
jge
test
dec
xor
pop
mov
ror
sub
ins
xchg
sbb
jl
xor
psrld
mov
inc
dec
sub
pop
dec
cmp
fist
loopne
inc
adc
sub
cmp
jnp
adc
shr
(bad)
jle
ja
adc
imul
lahf
mov
(bad)
in
js
and
aad
jns
cmp
test
jns
retf
add
repnz
int
add
in
cmp
pop
call
cmps
sub
in
mov
lods
mov
adc
xchg
inc
jecxz
jl
test
fsubr
and
and
jno
out
add
out
sbb
or
imul
adc
add
sbb
adc
jge
cdq
and
cmps
pop
fstp
mov
aad
aam
loop
cmp
cmps
(bad)
fadd
jecxz
adc
out
gs
cmp
call
cli
xor
(bad)
adc
out
sti
(bad)
pop
sbb
test
sbb
scas
pop
retf
cmps
mov
lock
and
mov
dec
xor
nop
pop
xchg
out
mov
lods
jbe
and
stos
xchg
pop
push
out
mov
in
xor
or
mov
sbb
adc
dec
push
aam
es
push
pop
push
sub
sub
popf
add
cmp
mov
cmps
xchg
mov
or
sbb
jnp
push
pop
mov
int
mov
sub
jo
les
add
cwde
ins
ja
push
rcl
jb
rcr
sbb
ins
jge
scas
jo
mov
adc
call
jbe
pop
fldenv
and
xchg
enter
cs
adc
cmp
jg
pop
cmp
test
xchg
rol
ret
pop
jbe
stos
jle
inc
jge
iret
aas
xchg
jbe
mov
je
ret
je
mov
(bad)
mov
imul
imul
sbb
inc
test
dec
sahf
clc
xchg
sub
mov
into
movs
ins
or
loop
jne
scas
and
xchg
cwde
adc
jnp
mov
xor
inc
mov
push
dec
inc
add
sar
sub
arpl
mov
push
cmp
stos
lock
outs
xchg
mov
ror
dec
pop
mov
and
mov
stos
fidiv
ja
add
loopne
cmp
iret
mov
in
imul
out
iret
movs
rcl
outs
jmp
lahf
push
enter
pop
mov
(bad)
adc
mov
cld
movs
fcomp
imul
add
nop
inc
mov
out
(bad)
shl
fcom
lahf
push
fldcw
nop
sub
add
dec
test
jmp
mov
push
repnz
pop
pop
push
mov
aam
add
push
pusha
and
gs
and
dec
sti
sub
retf
popa
in
inc
adc
jge
mov
clc
scas
pusha
add
jmp
jb
sbb
cmps
shr
push
mov
push
repnz
adc
push
cdq
retf
std
inc
shl
pushf
and
in
fld
dec
scas
mov
imul
pop
and
adc
push
mov
imul
leave
xchg
push
mov
pop
sub
shr
mov
xor
xor
push
hlt
pushf
les
sbb
lahf
test
mov
icebp
loopne
sub
sbb
popa
dec
mov
mov
(bad)
test
cli
inc
(bad)
sbb
movs
pop
jge
jp
aad
daa
pop
xchg
pusha
pusha
mov
sbb
gs
lods
xor
add
dec
dec
xor
push
mov
adc
idiv
idiv
enter
jnp
jp
hlt
out
fadd
mov
xor
mov
dec
sub
dec
enter
inc
jno
movs
shl
add
jbe
jl
ins
lea
push
call
xlat
cmp
inc
xchg
ffree
xchg
test
xchg
movs
ins
or
and
mov
(bad)
pushf
cmp
sbb
addr16
and
mov
shr
pop
cmp
xchg
dec
fidiv
outs
jns
sbb
jno
pushf
dec
xor
jb
jne
push
cld
pop
cmc
cmp
dec
sbb
loopne
cld
repnz
(bad)
inc
cmp
das
cmps
lods
inc
sar
iret
rcl
push
test
push
iret
int3
adc
(bad)
and
sbb
and
inc
and
sbb
pop
dec
popa
loopne
(bad)
xchg
loop
icebp
push
mov
imul
pop
cmp
jge
pop
icebp
fnstcw
aad
call
mov
lahf
push
into
adc
adc
mov
mul
cmp
xor
mov
mov
push
ds
dec
stc
cld
adc
add
mov
and
cmps
scas
dec
lahf
cmp
pop
push
or
lods
loop
pop
lock
mov
push
mov
pushf
call
gs
push
cli
in
xor
xor
jmp
or
and
or
loopne
les
loop
call
fucomp
jecxz
xlat
clc
int
out
(bad)
lea
in
mov
inc
or
ds
lds
mov
add
jmp
jmp
in
mov
mov
and
sbb
fidiv
ins
data16
xchg
movs
jb
loop
cld
add
lock
mov
sti
mov
dec
inc
fld
mov
xchg
jae
xchg
and
sbb
mov
mov
and
add
xchg
or
push
fbstp
xchg
mov
jne
fiadd
call
(bad)
jge
mov
push
xor
jl
push
aas
sti
mov
sbb
pop
sub
sbb
add
(bad)
outs
pop
out
pop
neg
xor
loopne
lods
adc
jbe
test
inc
sbb
sub
cdq
(bad)
test
push
inc
mov
sahf
pop
push
pop
lds
mov
cmp
or
cdq
fidiv
mov
icebp
sbb
xchg
in
xor
mov
arpl
mov
mov
jne
ror
xchg
adc
sub
mov
addr16
mov
jne
aas
inc
stos
sbb
(bad)
mov
enter
mov
mov
xchg
enter
cmc
add
fwait
retf
mov
adc
outs
cmps
push
adc
fldcw
cmps
pusha
inc
sbb
pop
jo
es
jmp
mov
cmp
fild
push
iret
xchg
jns
sar
repz
pop
sub
ror
add
stos
jg
je
mov
mov
adc
stc
popf
push
retf
jge
jae
movs
mov
test
add
sub
dec
jbe
aas
lds
jo
adc
sbb
ds
int
arpl
add
sub
adc
aaa
sahf
mov
fisubr
push
jmp
les
cmc
sub
pop
push
adc
jnp
push
mov
in
or
xor
int
sub
retf
lods
jg
mov
enter
sub
aad
cs
test
adc
sahf
std
jns
dec
outs
inc
stos
xor
jnp
add
xor
shl
push
mov
lods
adc
xor
adc
inc
mov
and
or
and
lahf
popa
pop
pop
adc
into
dec
pop
mov
pushf
lock
adc
retf
(bad)
scas
mov
rcr
xchg
mov
mov
or
xor
loope
jo
pop
in
adc
pusha
pop
pop
xor
std
mov
or
or
xchg
js
add
dec
cs
ja
shl
xchg
ror
and
cmp
pop
daa
adc
jbe
gs
call
loope
out
or
jle
dec
mov
outs
push
jne
dec
lea
mov
neg
movs
xor
mov
out
pop
pop
out
call
xchg
and
pop
inc
out
lahf
inc
out
push
xchg
in
leave
xchg
call
pop
lahf
outs
push
pop
pop
shl
add
pop
sti
(bad)
and
mov
f2xm1
inc
sbb
test
inc
xchg
mov
int
push
xor
and
dec
out
xor
movs
outs
ss
dec
inc
pusha
test
loop
stc
fbstp
test
mov
dec
jmp
imul
push
fcomp
dec
mov
mov
xchg
xchg
mov
iret
cs
add
out
mov
sub
jae
dec
add
cmps
cld
aas
mov
push
and
nop
sbb
xchg
iret
pop
(bad)
pop
movs
or
add
clc
mov
retf
stos
mov
sub
inc
dec
icebp
cmps
cld
sbb
and
nop
adc
and
mov
clc
push
in
mov
push
mov
dec
or
push
mov
iret
out
ret
mov
popa
hlt
inc
xchg
push
call
mul
retf
loop
add
xor
call
jmp
mov
mov
jae
loopne
daa
pushf
mov
adc
repnz
(bad)
cmc
add
in
mov
jecxz
cli
pop
inc
jp
and
sub
(bad)
mov
ss
hlt
cmc
dec
cmp
mov
stc
cmp
and
jl
pop
inc
pop
scas
aas
(bad)
and
xchg
(bad)
imul
std
xchg
sbb
inc
jbe
or
lahf
push
pop
imul
and
jnp
fbstp
int
lods
daa
cmps
das
add
div
xchg
xchg
mov
push
shr
cmp
xchg
sub
movs
aaa
xchg
out
xor
pop
in
mov
or
xor
movs
jae
xchg
hlt
jmp
xor
(bad)
mov
xchg
test
pop
daa
xor
aad
icebp
das
xlat
movs
jae
ss
aas
mov
loopne
xchg
cmp
cmc
fs
cmps
(bad)
push
sar
add
mov
mov
dec
fidivr
aad
leave
scas
(bad)
pop
add
mov
pop
popa
dec
sahf
popf
or
mov
pop
scas
mov
pop
cld
inc
jecxz
push
lahf
ja
fstp
add
lahf
push
xchg
ret
inc
mov
or
ja
mov
xor
fcmove
test
fstp
call
popf
popf
mov
inc
pop
xor
add
lahf
sbb
dec
fwait
cmps
cmp
jbe
aaa
loop
xchg
pop
sub
cmps
jnp
fwait
dec
jb
int
xchg
fs
and
ficom
ret
cmp
outs
iret
pop
scas
mov
cmp
pop
into
cmp
pusha
xchg
xor
ja
enter
ss
adc
mov
test
sub
fld
mov
lahf
cmp
jb
scas
lds
pop
add
push
das
ret
and
push
mov
out
mov
sti
mov
mov
or
pop
ret
in
push
(bad)
dec
cli
popf
fsubr
and
add
icebp
fnstsw
push
stos
out
mov
xchg
mov
and
call
sbb
fcomip
cwde
sbb
inc
outs
or
outs
adc
(bad)
push
xor
sbb
mov
pop
loope
jbe
shr
out
stos
aas
pushf
adc
clc
or
sbb
icebp
call
fldcw
out
retf
mov
lock
daa
stc
adc
adc
out
pop
jmp
add
jl
sub
ja
xchg
push
inc
mov
jno
imul
push
cmps
imul
push
xor
and
xor
outs
shl
sar
loope
dec
in
push
jle
mov
push
stc
xchg
into
outs
(bad)
pushf
mov
or
mov
cmp
xor
xchg
(bad)
sahf
xchg
dec
xchg
sub
mov
test
adc
test
pop
dec
stc
stos
or
and
or
out
mov
jg
fld
gs
inc
xor
mov
or
inc
pop
add
jno
sbb
or
mov
cmp
ret
jo
loop
sahf
sub
cmp
mov
repnz
pop
in
cmp
dec
or
xor
popf
xchg
cmc
lds
out
cmps
aaa
ds
mov
push
lods
pop
xchg
lods
outs
out
inc
ins
sahf
iret
cli
adc
inc
add
shl
or
or
adc
jno
scas
repz
jmp
xchg
lods
xor
ss
lea
xchg
addr16
add
mov
sub
mov
mov
inc
mov
push
popa
inc
mov
sub
inc
and
mov
aam
cs
fstp
dec
stc
(bad)
imul
adc
imul
jle
leave
stos
(bad)
clc
nop
xchg
jle
int
sub
imul
push
inc
outs
jno
shr
(bad)
call
sub
mov
mov
fs
inc
add
mov
cdq
xor
std
xor
loop
dec
cmc
add
add
jecxz
sub
ja
fmul
leave
or
and
mov
sub
ja
daa
retf
mov
add
jge
test
mov
sub
ins
das
in
cld
fwait
(bad)
pop
mov
push
mov
ret
pop
jmp
test
(bad)
les
cmps
nop
cmp
inc
repz
and
stos
stos
and
into
sub
pushf
push
sbb
mov
movs
push
push
mov
push
mov
and
xchg
in
or
push
fwait
mov
int
pop
sub
push
(bad)
xchg
lea
int
addr16
push
jnp
mov
movs
jbe
mov
aam
xchg
push
adc
and
fld
mov
lock
sahf
dec
fidivr
pop
imul
cmp
inc
dec
loopne
add
cmp
out
and
inc
sbb
bound
add
cli
into
pusha
movs
stos
mov
jbe
push
dec
mov
adc
fsub
ja
xor
sbb
or
outs
out
jae
out
mov
inc
test
(bad)
sbb
mov
cmc
outs
inc
push
adc
push
scas
(bad)
mov
adc
pushf
push
sub
test
fidiv
add
pop
int
mov
push
push
inc
aam
mov
pop
pop
dec
sbb
inc
imul
inc
repnz
pop
sbb
jge
dec
push
or
dec
scas
jns
jg
sbb
mov
es
lea
adc
(bad)
cld
mov
jmp
xor
pop
push
stc
dec
sar
cmp
stos
cmp
out
sti
or
repz
out
adc
cmp
dec
dec
pop
inc
pop
xchg
mov
pop
jmp
mov
pop
xchg
repnz
sti
jne
jl
mov
pop
lods
cdq
loope
aam
dec
xchg
cli
(bad)
loopne
cld
repz
or
ins
fsub
std
or
inc
sar
push
mov
xchg
or
out
push
adc
loop
push
outs
loop
clc
iret
mov
sar
adc
iret
cli
in
mov
xchg
test
es
in
popf
fwait
je
inc
or
lock
push
stc
shl
mov
inc
cmp
aaa
fcmove
ret
xchg
xor
jg
call
push
sbb
sub
sahf
cmp
rcl
cmps
adc
(bad)
jecxz
push
or
out
loope
mov
sub
sub
pop
push
xchg
push
push
pop
les
mov
ret
jle
(bad)
pop
fimul
rep
iret
ins
fidiv
dec
mov
inc
dec
imul
pop
ins
lds
add
repnz
das
iret
enter
jno
cmc
fist
xor
mov
out
dec
sub
stc
int3
cmp
ret
mov
mov
lods
xchg
lods
nop
cmp
cmc
cdq
or
loopne
test
ja
sbb
aas
mov
mov
or
cwde
sahf
or
retf
out
bound
data16
lahf
fdivr
or
sti
adc
in
add
out
hlt
jp
cmps
loope
repnz
mov
xor
pop
movs
sbb
inc
or
cmp
push
mov
xchg
fwait
dec
mov
pop
jmp
and
sub
test
push
dec
addr16
lods
and
in
dec
mul
and
ins
pop
add
sahf
inc
jecxz
xchg
fiadd
or
dec
fdiv
rcl
(bad)
out
inc
cld
sub
out
dec
sar
adc
xor
daa
inc
jae
call
sbb
imul
(bad)
mov
cmps
xor
clc
inc
ins
icebp
pop
pusha
xor
pop
sahf
ins
add
test
loop
mov
add
and
push
(bad)
cdq
and
jno
hlt
and
nop
loop
pop
stc
(bad)
xchg
je
add
cmps
lods
dec
lods
cmps
or
std
adc
inc
push
xor
mov
dec
jne
aas
sub
popa
jmp
iret
pop
stos
sbb
js
push
ins
test
imul
inc
sub
mov
push
xor
xor
inc
xor
push
xchg
xor
outs
call
sub
ret
mov
jle
pop
js
push
xlat
or
sbb
stos
imul
push
aam
mov
mov
pop
(bad)
mov
mov
dec
movs
(bad)
cs
jle
jg
cld
hlt
xchg
mov
mov
movs
dec
dec
(bad)
scas
pop
sbb
adc
add
add
aaa
xchg
mov
loope
dec
mov
add
sub
sub
sbb
test
jecxz
cmp
xor
rcl
in
les
mov
out
outs
leave
out
cmp
lods
push
int
cmp
mov
push
mov
pop
arpl
into
fild
mov
mov
sbb
loopne
stc
lods
loopne
mov
or
xor
or
(bad)
repz
loop
lea
inc
push
fs
pop
retf
cmps
cmp
popa
mov
call
adc
lds
in
pop
sbb
test
mov
jb
aaa
inc
xchg
fwait
dec
fisubr
xlat
jl
push
xor
sti
push
push
in
push
sub
cmp
in
stos
xor
imul
jmp
test
ret
cmp
aad
xchg
xchg
push
mov
fiadd
pop
sbb
stos
vxorps
imul
(bad)
popa
push
pushf
sbb
hlt
and
jns
sub
jb
pop
in
(bad)
xchg
cmp
nop
dec
dec
cmp
jne
cmp
data16
je
ds
stc
mov
adc
test
(bad)
lahf
out
jns
and
call
sbb
test
mov
pop
out
inc
sbb
mov
shl
add
cmps
pop
retf
enter
in
mov
es
inc
xchg
cmp
mov
je
adc
xchg
dec
mov
fwait
push
xchg
in
aad
dec
shr
(bad)
(bad)
push
adc
mov
inc
adc
nop
daa
jp
sbb
and
rcr
inc
rcr
pop
xchg
dec
sbb
fucomi
popa
pop
fwait
out
xor
cmp
fld
lahf
and
sub
cmps
mov
sub
(bad)
pop
add
dec
push
(bad)
mov
mov
add
dec
mov
lods
add
push
int3
adc
shl
dec
gs
daa
mov
mov
dec
inc
or
push
pop
jo
loope
pusha
inc
xor
jle
fstp
fcmovnbe
aaa
pop
pop
ja
adc
call
mov
push
rol
cmp
cmp
(bad)
scas
sub
fsub
fadd
mov
pop
jns
xor
bound
add
push
mov
sub
es
or
xor
in
inc
cld
xlat
fst
sub
mov
adc
sub
add
es
ins
xchg
push
out
sbb
shl
sbb
and
fld
xchg
es
dec
das
sub
aam
mov
cmp
or
xor
dec
movs
dec
lock
push
and
mov
dec
and
test
cmp
das
arpl
sbb
fistp
in
fcomp
cmp
call
ins
(bad)
gs
xchg
mov
pop
sbb
push
daa
rol
push
out
jmp
push
or
xchg
cmps
fwait
mov
sbb
mov
or
icebp
fadd
pop
sbb
fldenv
out
fwait
shl
cmp
idiv
stos
out
adc
repnz
mov
loop
cmps
mov
fcom
sbb
aas
adc
lock
xor
dec
ret
outs
xlat
leave
mov
push
popa
sub
cmp
enter
or
mov
or
cmp
test
repnz
jae
mov
inc
inc
mov
mov
dec
lahf
clc
dec
pop
test
iret
ss
aas
scas
enter
mov
xchg
lods
sar
jle
arpl
xor
(bad)
pop
pop
stos
addr16
leave
or
add
inc
jnp
mov
pop
movs
cmp
inc
sub
jl
inc
cs
enter
out
xchg
inc
popf
bound
pop
retf
int3
retf
shl
lahf
rcr
jle
(bad)
adc
mov
cli
js
adc
xchg
add
dec
mov
xor
jb
mov
jmp
pop
fsub
iret
pushf
jbe
pop
and
fwait
add
in
out
(bad)
dec
xchg
cmp
mov
and
jb
bound
mov
mov
inc
(bad)
rcr
push
jp
and
jmp
mov
lock
stos
pop
ss
and
cmps
sbb
cmp
out
lods
xor
mov
cmp
mov
rol
out
sub
jg
mov
cwde
test
jecxz
dec
or
xchg
mov
(bad)
jne
rcr
das
dec
mov
fdiv
mov
cmp
mov
or
pusha
pop
clc
cmp
loope
inc
js
or
push
pushf
pop
in
mov
sbb
jns
dec
xor
pop
jmp
dec
jb
test
into
sub
and
sub
retf
lds
pop
data16
leave
mov
pop
inc
add
xlat
popf
rol
rol
adc
ja
push
lods
cmp
sub
pusha
mov
iret
adc
mov
or
in
daa
xor
push
cmp
fs
lea
nop
lds
sbb
and
and
push
leave
mov
xchg
int
mov
in
mov
loopne
jmp
retf
aas
and
sub
outs
shl
mov
sbb
cmps
mov
push
imul
js
loope
pop
xor
xchg
js
xchg
das
add
sahf
xchg
jge
xchg
mov
mov
nop
scas
out
pop
inc
sbb
enter
xor
ins
mov
push
out
mov
inc
xchg
jmp
mov
je
outs
ss
imul
iret
and
inc
push
scas
pop
xchg
lods
mov
xlat
mov
sub
movs
into
call
add
fidivr
(bad)
cli
dec
xchg
xor
addr16
and
mov
int3
dec
call
xchg
cld
sbb
ror
jp
mov
jp
or
aas
addr16
rol
inc
mov
mov
pop
sar
ss
pop
cdq
int
jmp
inc
xchg
and
cmp
pop
loope
pop
inc
inc
fiadd
pushf
rcl
out
push
mov
cli
(bad)
push
add
pop
dec
in
push
add
shl
test
into
xor
cmp
outs
pushf
ret
outs
popa
sub
mov
test
xor
cmps
mov
ss
pop
ret
xor
out
ins
scas
dec
mov
in
sub
ror
(bad)
loopne
mov
mov
inc
jecxz
fyl2xp1
and
loop
xchg
jmp
sub
loop
ss
sbb
ins
popa
int
fild
stos
shl
mov
ins
(bad)
push
dec
(bad)
push
cmp
inc
iret
ds
xchg
dec
es
mov
aaa
jns
jo
jns
sub
xchg
pop
inc
sbb
aam
(bad)
fild
cmp
xchg
or
push
adc
cmps
pop
int3
pop
mov
cld
fcmovbe
inc
inc
push
dec
test
dec
dec
push
xlat
or
dec
out
add
scas
xchg
retf
sar
push
jno
jecxz
inc
lock
adc
mov
lock
sbb
push
pop
sbb
sti
mov
cmp
les
sub
aad
jnp
fwait
xor
sbb
movs
dec
add
mov
xchg
sub
xor
xor
mov
pushf
xchg
jp
ins
hlt
xchg
scas
mov
pop
dec
(bad)
fwait
jmp
sbb
mov
ja
out
xchg
jmp
sub
loop
add
inc
mov
mov
cdq
mov
cld
imul
mov
sbb
jns
(bad)
cmps
inc
push
cli
outs
rol
mov
arpl
ss
hlt
(bad)
jnp
sub
ins
clc
out
xor
out
push
and
cmovbe
cmp
pop
addr16
out
daa
or
retf
push
and
xchg
push
pop
imul
daa
and
daa
stos
imul
xchg
popf
xor
imul
dec
and
aam
sbb
addr16
dec
mov
ds
xchg
cmp
int
push
pop
mov
xchg
test
push
mov
push
mov
icebp
popa
fild
fdivr
daa
add
pop
mov
adc
mov
je
cmc
in
test
push
scas
je
jnp
inc
or
ret
jmp
outs
ja
les
add
lahf
aam
pop
out
push
adc
and
ret
mov
in
pop
cmp
iret
pop
in
and
aam
ja
cmps
cdq
out
cmp
test
cs
pop
sub
ficomp
and
mov
cld
mov
in
aam
in
and
je
or
repnz
dec
sbb
int3
ror
adc
pop
dec
dec
cmp
jp
in
out
xor
nop
sbb
(bad)
in
pop
mov
push
out
dec
add
imul
mov
add
lds
jg
push
push
iret
or
cli
call
inc
xchg
and
and
add
pushf
push
xlat
xchg
sbb
test
pop
adc
dec
inc
sbb
push
inc
fs
mov
adc
xchg
stc
repnz
sti
jns
addr16
sub
mov
xchg
push
ja
mov
lods
aas
add
bound
in
xchg
add
push
out
xor
nop
ret
icebp
int
xchg
lds
add
push
or
adc
mov
adc
dec
pop
in
and
pop
xchg
iret
out
inc
cmc
fstp
cmp
daa
push
mov
jge
pop
mov
and
fs
mov
sub
push
ss
loopne
xlat
loop
aaa
dec
and
push
pop
and
ss
addr16
pop
ins
adc
bound
test
mov
ror
rcl
mov
fs
fldcw
(bad)
aad
scas
jns
push
mov
ficomp
inc
mov
std
add
jns
xor
pop
dec
push
mov
(bad)
popa
cmp
gs
retf
leave
push
xchg
mov
push
test
ss
das
mov
mov
add
add
push
sbb
std
nop
add
adc
add
mov
scas
inc
pop
inc
adc
push
inc
sbb
paddb
or
add
stos
pop
xchg
and
scas
push
and
bound
clc
inc
push
inc
inc
(bad)
pop
adc
xchg
iret
loopne
ror
xchg
jge
neg
cdq
cdq
iret
add
movs
sub
sbb
test
sub
xchg
retf
or
mov
mov
jo
dec
movs
outs
jmp
js
xchg
dec
test
popa
sbb
ret
outs
aad
(bad)
cdq
sbb
cld
pop
in
adc
sub
xchg
pop
(bad)
int3
leave
and
push
mov
mov
lods
xchg
shl
and
xlat
idiv
(bad)
lods
je
cmp
scas
pop
aaa
fstp
cmp
jo
clc
lea
and
shl
repz
call
into
test
pop
mov
mov
jnp
cdq
daa
xor
push
paddusb
sbb
out
add
lods
xchg
sub
cmps
(bad)
mov
ins
in
nop
(bad)
dec
dec
jg
fwait
scas
mov
mul
jnp
ins
xchg
movs
xor
sbb
mov
popa
xchg
sbb
jge
mov
dec
lods
jo
pop
xchg
in
xchg
sbb
pop
in
sbb
xlat
and
stos
and
arpl
xchg
jne
mov
cmp
ins
in
mov
sbb
cmp
or
movlps
fidivr
sbb
lahf
ror
pop
push
fisubr
aas
xor
push
popf
dec
fidiv
jge
pop
bound
out
popf
xor
dec
push
repnz
enter
fnstenv
mov
push
lock
mov
pop
and
jo
dec
jb
repnz
dec
cld
loope
add
inc
inc
repnz
icebp
(bad)
lea
cdq
xlat
push
das
adc
cmp
(bad)
cdq
lods
xlat
sahf
daa
xchg
and
(bad)
jmp
cmp
pusha
and
mov
cmp
ins
add
data16
ins
in
sub
xor
mov
mov
cmp
sbb
jmp
inc
cmps
ret
sbb
push
add
cmp
or
jecxz
dec
ss
test
mov
(bad)
cmp
adc
cmps
push
cmps
mov
(bad)
shr
inc
cmps
adc
out
stc
ins
dec
adc
ds
dec
dec
mov
or
adc
mov
dec
cli
cmp
popf
outs
xor
aaa
inc
aad
stos
jle
xchg
movs
mov
jne
pop
or
pop
and
iret
(bad)
sti
jecxz
dec
sbb
cmp
pushf
ror
and
mov
mov
push
outs
jns
outs
and
fcom
(bad)
mov
aaa
add
leave
cmp
lahf
dec
repz
or
lods
inc
sbb
push
cdq
sbb
push
jae
rol
xor
push
enter
lock
mov
stc
pop
(bad)
sub
ins
outs
fnsave
inc
cmps
cld
out
dec
pop
fist
sub
stc
mov
scas
push
xchg
pop
aam
outs
mov
jmp
call
add
sub
(bad)
int3
pop
test
adc
mov
clc
test
aaa
call
adc
std
push
mov
mov
cli
pop
fdivr
cmp
pop
xchg
outs
jmp
mov
fst
cmp
cmp
sub
cmp
sub
mov
stos
sub
push
call
jo
jp
lds
mov
cmps
adc
mov
and
lds
lods
clc
push
pusha
cmps
lea
dec
mov
retf
mov
sbb
sahf
inc
adc
fistp
sub
mov
hlt
cmp
fs
jl
xor
adc
lods
jge
pop
push
lods
scas
cmps
add
addr16
into
pop
js
mov
inc
xor
mov
cmp
pop
or
cmp
test
mov
jp
fs
stos
(bad)
js
lds
cdq
dec
mov
jp
push
xchg
xchg
add
(bad)
retf
pop
adc
and
add
xchg
xlat
ret
lock
lea
push
dec
ret
jmp
mov
pop
mov
lds
rol
push
fwait
imul
sbb
aaa
mov
pop
jbe
repnz
adc
pop
cmp
push
sub
pop
mov
mov
dec
imul
dec
ins
ja
jo
push
xchg
ret
dec
loop
outs
call
stc
shr
fidivr
fcom
ror
outs
xlat
dec
or
sub
clc
xchg
loope
(bad)
shl
jge
dec
sub
push
pop
push
add
jmp
out
gs
fdivr
idiv
jns
dec
ins
sbb
out
sti
movs
call
(bad)
adc
lahf
mov
sub
push
mov
xor
in
test
pop
pop
repnz
add
add
cmps
gs
jmp
mov
xor
add
(bad)
imul
xchg
stc
sbb
data16
mov
mov
inc
jecxz
xor
sbb
(bad)
(bad)
(bad)
jmp
ins
aad
das
mov
jmp
add
imul
add
fimul
xchg
and
push
mov
lea
mov
mov
sbb
repz
jno
sub
shr
aaa
ret
shl
inc
jl
dec
test
call
cmp
xchg
call
and
xchg
call
dec
push
daa
dec
sbb
gs
ror
add
loop
jmp
mov
and
(bad)
sub
adc
jle
sar
mov
pop
std
adc
sbb
inc
adc
test
mul
cmp
mov
push
movs
cmp
call
shl
inc
test
add
fcom
fs
push
mov
pusha
sbb
and
repz
jge
std
pop
xor
dec
mov
xchg
push
bound
or
or
loopne
rcl
push
mov
jnp
dec
mov
push
jo
adc
psrld
call
repnz
jge
stos
fstp
pop
fidivr
mov
clc
dec
daa
pop
sbb
cwde
xor
rol
ret
ror
jb
icebp
jo
fs
cmp
mov
js
addr16
fcmovbe
hlt
xchg
adc
push
cs
mov
push
aad
stos
add
jmp
fmulp
xchg
push
ficom
icebp
lea
pop
mov
loopne
test
fild
mov
and
lahf
test
adc
stos
daa
iret
in
dec
cmp
fcmovnbe
repz
mov
push
stc
ret
jmp
fcmovu
add
sub
xchg
loop
lahf
or
sub
mov
repnz
imul
ins
or
(bad)
adc
loopne
ret
(bad)
cld
sub
jle
jns
outs
xchg
mov
mov
mov
xlat
int
out
lds
sub
cmps
test
sub
or
pop
xchg
and
das
cmp
sbb
and
mov
and
(bad)
jmp
scas
jge
push
xor
(bad)
and
mov
aad
and
push
in
mov
out
push
xchg
mov
(bad)
in
cmp
jle
adc
sub
inc
push
xor
pop
xchg
fsubrp
xchg
mov
mov
or
test
fdivr
mov
inc
push
jns
aas
sbb
sti
mov
or
fwait
push
inc
push
or
or
xor
jle
sbb
or
xchg
mov
push
jmp
(bad)
aad
mov
cmp
pusha
in
push
push
sbb
mov
data16
(bad)
(bad)
jb
sahf
adc
stc
push
addr16
and
repz
fadd
js
mov
pushf
inc
rcr
test
sbb
mov
inc
lea
outs
icebp
dec
jns
jne
cmp
mov
std
mov
cmp
popf
call
test
mov
aaa
fadd
mov
add
dec
pop
xchg
ss
imul
or
ins
mov
pop
xor
out
or
mov
and
push
push
pop
ins
or
cmps
ret
xor
or
rcl
test
or
inc
xchg
sbb
gs
jg
cmp
pop
cmp
ja
pop
in
sbb
push
int3
dec
adc
mov
ret
adc
jb
loope
mov
rol
rol
out
dec
les
cmps
es
add
xor
mov
int3
or
icebp
ins
(bad)
jecxz
outs
jg
pop
lahf
nop
fstp
std
mov
xchg
loop
add
ds
daa
popf
mov
dec
arpl
add
mov
jnp
push
outs
inc
adc
cmc
cmc
sahf
repnz
dec
adc
jns
mov
dec
cld
scas
jnp
jl
loope
shl
jns
dec
dec
outs
jmp
in
loopne
es
mov
push
adc
jmp
jno
ret
test
add
mov
jl
push
mov
and
ja
in
out
xchg
aad
ins
retf
sahf
fisubr
bound
xor
pop
stos
loopne
cmp
iret
push
and
push
pusha
ret
dec
xor
push
lds
jl
cmp
jbe
out
cmp
fstp
xor
pushf
popa
icebp
pop
and
pop
add
pop
xor
outs
push
in
aaa
cmp
aaa
repz
jo
out
xchg
outs
mov
xor
or
(bad)
mov
and
jge
xor
inc
mov
stc
repnz
add
jmp
inc
mov
das
retf
push
rcr
add
xchg
inc
imul
mov
cmp
xchg
mov
ds
mov
hlt
xor
pop
sub
loop
xchg
adc
xor
mov
iret
jno
mov
ret
in
sbb
fsubp
add
jns
and
loope
xchg
adc
push
nop
cmps
jle
imul
jo
sub
pop
fs
imul
shl
ficom
xor
xchg
mov
sbb
dec
outs
and
pop
jb
lds
adc
cmp
push
call
mov
(bad)
sub
inc
xchg
(bad)
jnp
test
(bad)
imul
dec
aas
fwait
cld
cmps
cmp
jge
cmp
es
lds
mov
push
gs
dec
pop
call
es
jmp
lock
ficom
mov
(bad)
clc
push
xlat
aam
mov
inc
data16
test
cmc
fwait
mov
jle
jle
ret
cmp
xor
mov
sar
xchg
xchg
adc
pop
ja
enter
loopne
adc
scas
popa
fisubr
int
jmp
xchg
adc
int3
call
mov
mov
sti
ins
test
xor
jb
test
mov
add
push
stos
mov
sbb
clc
gs
(bad)
pop
mov
and
dec
and
(bad)
add
adc
jl
mov
mov
sub
lea
mov
popf
movs
cdq
test
call
and
outs
mov
pop
bound
push
btr
inc
iret
fwait
jns
in
xor
pop
es
sar
adc
and
lock
imul
fcmovne
add
test
enter
int
in
aaa
mov
aaa
hlt
inc
and
out
(bad)
sub
in
out
in
cld
stc
in
mov
cmp
ret
xlat
pop
xor
pushf
inc
addr16
mov
push
mov
sbb
push
xchg
jmp
mov
xchg
call
jecxz
dec
scas
dec
mov
inc
jle
xchg
mov
ret
leave
lds
ss
cmc
fisubr
adc
push
pop
xlat
loop
mov
mov
pop
repnz
inc
ss
sub
scas
retf
push
jnp
into
cmps
lods
cdq
ds
or
xlat
inc
arpl
cmp
mov
les
ror
(bad)
xchg
rol
iret
ins
mov
inc
lahf
sbb
retf
push
or
les
popf
jge
push
popf
popa
pop
inc
sahf
loop
adc
adc
pop
cwde
mov
imul
push
fistp
cmp
inc
out
in
repnz
icebp
jns
iret
or
mov
loopne
lock
nop
stc
test
xchg
sub
dec
leave
or
addr16
sub
loopne
or
fbstp
stc
fs
icebp
jl
retf
int
cmp
dec
pop
(bad)
pop
pusha
arpl
add
(bad)
pusha
les
pop
xchg
gs
out
adc
popf
clc
scas
push
add
sahf
xchg
sahf
push
inc
xchg
mov
gs
mov
jp
and
dec
mov
movs
dec
ds
dec
in
xchg
jmp
sti
inc
pusha
mov
fcomp
das
mov
loopne
loope
sbb
pop
mov
cmp
es
or
aam
xor
cld
das
mov
mov
fstp
call
dec
xor
jnp
lods
loopne
jae
repz
xor
es
loopne
test
inc
jb
mov
call
adc
mov
mov
sbb
dec
dec
adc
fidivr
mov
mov
adc
adc
cwde
test
pop
into
ficomp
dec
jmp
dec
jb
inc
add
(bad)
and
leave
std
push
std
sahf
inc
xor
pop
lahf
mov
(bad)
fbld
jb
ds
add
or
movs
add
lods
xchg
adc
inc
lods
fiadd
or
and
dec
fcmovnbe
inc
rcl
gs
stos
test
pop
mov
ins
repnz
daa
jb
cmp
mov
shl
data16
repz
mov
and
pusha
in
jmp
cmp
lods
out
js
repz
xchg
mov
scas
cdq
xchg
mov
inc
pop
clc
push
or
xor
or
cdq
ins
mov
scas
ret
cld
jmp
cmp
scas
test
jnp
mov
push
inc
repz
dec
in
mov
pop
push
int
xor
mov
cmp
adc
push
dec
pop
sbb
mov
inc
mov
inc
ror
push
push
sar
ret
xchg
add
xchg
(bad)
mov
adc
adc
out
(bad)
cmps
sahf
enter
aaa
cvtss2si
pop
pop
pop
push
(bad)
fldl2e
loop
in
push
addr16
mov
jle
jp
aas
mov
repnz
sub
cmp
and
sbb
mov
fisttp
in
mov
pop
adc
push
xor
sub
jle
call
lahf
aad
int
aaa
mov
sbb
leave
xor
xchg
dec
mov
cmps
fwait
push
sbb
and
gs
dec
pop
pop
out
dec
dec
xlat
pop
hlt
and
mov
jno
es
mov
adc
push
outs
loopne
pop
loop
or
mov
stc
ret
xor
xchg
scas
rcr
add
push
nop
stos
pusha
retf
stos
gs
test
pop
adc
dec
pop
sub
rcl
fsubp
repnz
out
dec
and
xchg
add
add
leave
test
sub
scas
xor
aas
fwait
inc
mov
lods
mov
in
ins
dec
test
std
push
lods
call
stos
loopne
int3
jbe
scas
ror
imul
sbb
mov
add
add
stc
or
retf
mov
das
sub
jmp
pusha
jno
mov
icebp
div
sub
scas
out
icebp
pop
jns
pop
les
rcr
out
dec
sub
push
ss
cmc
sbb
or
push
push
dec
je
cdq
daa
enter
jmp
add
sub
mov
lods
fistp
aaa
stc
syscall
pop
push
(bad)
stos
add
sub
cmps
jbe
xor
int3
cs
sbb
imul
rcr
mov
iret
rcl
lods
ror
scas
repz
mov
xchg
idiv
push
int
dec
pop
inc
aaa
inc
adc
(bad)
sahf
push
jecxz
push
lahf
std
push
jmp
repnz
repnz
out
mov
inc
and
adc
retf
test
hlt
adc
lods
scas
xchg
xor
and
sahf
ror
je
outs
cdq
xor
or
jne
mov
repnz
xor
ins
dec
jp
xor
es
adc
mov
stos
or
push
pop
lds
sbb
xchg
pop
sub
out
pushf
push
push
sub
cmp
rcl
mov
mov
(bad)
aam
pop
mov
xlat
jae
push
(bad)
out
shr
and
push
mov
inc
out
adc
mov
(bad)
idiv
bound
xor
jl
loopne
in
addr16
mov
xor
push
js
sub
dec
fsubr
test
mov
push
fidivr
shr
xor
cmp
fld
or
js
(bad)
xlat
sub
inc
sti
ret
mov
imul
xchg
sub
popa
fiadd
or
mov
sub
stos
ror
dec
pop
call
aam
call
mov
movs
mov
imul
outs
cli
int
sub
mov
cmp
outs
push
ret
cmp
out
lahf
stos
sbb
sbb
scas
cmp
jmp
dec
mov
push
sbb
stos
sub
lea
(bad)
loope
or
mov
fisub
movs
mov
outs
fimul
pop
pop
dec
in
clc
jecxz
pushf
mov
js
aam
inc
in
xchg
fldenv
inc
add
xor
jg
fs
mov
and
(bad)
xor
cmp
mov
jb
fld
data16
mov
clc
fs
mov
jo
adc
int3
xchg
iret
mov
ds
and
jecxz
mov
or
mov
ret
(bad)
cmps
mov
test
in
ins
jne
(bad)
shr
test
xchg
scas
dec
out
and
not
dec
out
test
add
mov
add
and
out
ret
sub
adc
fldcw
retf
inc
(bad)
jae
inc
iret
clc
stc
dec
lock
and
mov
aad
jns
hlt
xchg
loopne
pop
std
push
es
imul
mov
lock
mov
retf
fwait
out
jb
dec
fidivr
sub
cdq
movs
stos
mov
paddsw
int
test
mov
xor
inc
jo
xchg
push
xchg
outs
jp
mov
test
leave
imul
fst
call
mov
mov
addr16
stos
dec
and
mov
jp
push
int3
jp
lods
inc
or
dec
xlat
mov
sub
(bad)
repz
hlt
test
cdq
imul
push
in
lea
lods
push
pop
mov
xchg
std
and
jmp
fsubr
fcmovu
inc
xor
(bad)
sub
mov
mov
add
pop
sub
out
aad
or
mov
enter
(bad)
lods
xor
(bad)
call
bnd
shl
push
cmp
(bad)
mov
mov
pop
gs
adc
mov
call
das
adc
into
ins
lods
test
mov
arpl
mov
sti
repnz
imul
cmps
aad
or
jns
and
jae
popa
adc
xchg
mov
mov
bound
inc
cli
aas
fmul
fcom
gs
xor
lea
jg
jecxz
out
jmp
scas
scas
(bad)
xor
or
mov
mov
ret
cmp
sbb
out
xor
pop
dec
iret
popa
sbb
jl
cwde
push
adc
fst
mov
retf
and
fisub
pop
sbb
nop
aaa
(bad)
std
ret
push
clc
adc
or
push
aaa
fstp
pusha
(bad)
das
jecxz
pop
repnz
push
xor
mov
xlat
xchg
mov
push
shl
out
fsub
idiv
pop
xor
aad
sub
xchg
mov
jl
jge
inc
xchg
pop
or
add
test
jmp
lods
dec
mov
xchg
lods
mov
dec
or
dec
pop
xchg
mov
jecxz
mov
mov
mov
add
add
pop
outs
cmps
pop
inc
loop
adc
jge
imul
push
push
jmp
add
ret
lods
adc
sti
cmp
sbb
cmp
fwait
sbb
movs
jno
ss
add
inc
fisttp
icebp
out
jge
sbb
nop
jmp
pop
add
sbb
jmp
mov
ins
sub
out
push
popa
in
dec
push
mov
sub
mov
call
adc
repz
sub
(bad)
cmp
sbb
mov
mov
dec
repz
lock
mov
punpckhwd
fwait
cmp
xchg
add
and
and
outs
(bad)
icebp
xor
and
xor
push
jne
push
repnz
ins
aaa
mov
popa
mov
mul
sbb
cmc
loop
aas
push
imul
rol
aas
jecxz
xchg
pop
cdq
cmp
pop
sbb
adc
and
mov
les
pusha
out
dec
lea
xor
jne
sub
push
retf
mov
adc
jecxz
mov
std
ins
gs
mov
pop
ficom
cmp
sub
mov
out
or
ficom
lods
dec
(bad)
aaa
aaa
add
push
das
fucomip
nop
xor
xor
int3
xor
dec
adc
cli
and
pop
cmp
inc
test
xchg
inc
leave
(bad)
bound
xor
sub
cmps
call
je
in
bnd
leave
mov
imul
int3
es
sbb
xor
push
or
ins
sbb
rol
test
sub
fst
mov
sub
xchg
dec
(bad)
test
jno
icebp
add
gs
and
mov
push
popf
dec
pop
movs
xchg
ret
xor
test
sub
and
mov
dec
lock
xor
out
mov
icebp
sbb
movs
mov
jg
jae
cmps
push
push
in
sar
xor
mov
(bad)
clc
popa
(bad)
int
inc
mov
mov
fisub
cmp
pushf
add
jmp
xor
pop
xchg
jg
xor
mov
fst
add
and
jb
push
in
jp
ds
and
cmp
fld
xchg
mov
sar
mov
inc
jle
fsub
push
adc
xchg
cmp
mov
adc
imul
sub
push
fbstp
ret
lahf
loope
ins
idiv
mov
ret
dec
push
fs
pop
call
jo
rcl
push
xlat
das
aad
xchg
cmps
inc
xchg
es
sbb
xchg
inc
adc
loop
pop
shr
and
js
div
cdq
xchg
aas
test
dec
add
push
mov
push
inc
adc
cmp
retf
jle
inc
pushf
ss
fcom
(bad)
mov
mov
out
sbb
retf
add
(bad)
cmp
jbe
int
dec
data16
or
outs
loope
daa
sub
xor
or
mov
push
xchg
pop
mov
mul
sub
jecxz
fs
popf
cmp
mov
lods
clc
sar
lods
xchg
and
ja
sbb
leave
lods
add
or
addr16
pop
adc
dec
gs
xor
push
push
dec
leave
hlt
imul
outs
fisub
iret
pop
data16
int
mov
add
pop
dec
cli
mov
in
rcl
call
ins
test
sub
(bad)
pop
lea
cld
mov
mov
cli
and
xchg
xchg
mov
and
mov
popf
jl
pop
inc
shl
leave
fbld
out
mov
test
pop
jl
adc
test
adc
push
xchg
cdq
dec
pop
mov
aaa
repz
ficom
push
sbb
dec
push
in
data16
fs
xchg
icebp
dec
ds
jbe
aaa
dec
ins
or
jmp
and
fsub
or
jecxz
jae
out
pop
mov
(bad)
pop
nop
push
mov
movs
cdq
(bad)
and
push
nop
retf
mov
(bad)
xlat
stc
sub
outs
sbb
outs
les
test
popf
pop
pop
lods
sub
sub
push
adc
mov
mov
xchg
in
gs
push
push
adc
mov
adc
sbb
lea
adc
add
mov
and
xlat
mov
or
sar
dec
cli
adc
dec
sbb
aaa
lods
imul
clc
dec
xor
push
jl
retw
andps
test
into
adc
dec
add
xor
add
mov
jne
les
inc
pop
out
mov
imul
cmps
and
dec
cs
jno
push
retf
dec
mov
dec
outs
lock
add
js
jbe
add
mov
jecxz
addr16
mov
hlt
aam
pop
ins
sar
push
mov
or
loope
sbb
dec
loopne
cmps
xor
or
dec
inc
lods
push
mov
pop
jecxz
jmp
push
sub
inc
sub
adc
add
xor
into
movs
leavew
adc
xchg
or
mov
jae
or
jge
cs
popf
fs
jge
fs
gs
pop
out
popf
clc
jnp
repnz
call
mov
ins
sbb
outs
jne
outs
enterw
cdq
mov
test
cmps
sbb
sbb
jnp
jmp
outs
xor
aam
adc
mov
sub
icebp
jne
pushf
dec
test
push
addr16
jbe
je
test
hlt
mov
pushf
shl
out
mov
ret
into
out
js
jg
mov
test
test
repz
jnp
jns
pop
test
inc
add
sahf
das
stos
fwait
xlat
stc
sub
jbe
xor
add
mov
daa
imul
or
push
mov
std
ret
cwde
lahf
lock
dec
neg
fsubr
scas
mov
inc
xor
gs
push
sub
sbb
lods
test
repz
jmp
adc
leave
cwde
xchg
xchg
jl
push
loopne
dec
mov
pushf
les
je
js
aaa
fcom
es
pop
gs
or
fcomip
push
add
gs
add
pop
dec
lea
mov
clc
dec
push
xor
ror
cmps
add
jmp
pop
leave
xor
xchg
test
jb
lods
jbe
out
push
adc
call
cmps
pop
ror
cmp
jge
or
push
test
fst
push
push
stc
and
lahf
or
test
hlt
or
popf
mov
xor
push
adc
pop
adc
mov
add
mov
icebp
or
adc
stc
(bad)
fbstp
jae
push
and
out
ins
mov
jp
lds
neg
pop
popa
adc
(bad)
clc
inc
sahf
add
push
xchg
pop
mov
inc
stc
sub
mov
xchg
inc
jecxz
stos
lock
push
fwait
nop
jg
or
cmp
cmc
xchg
push
test
cmp
mov
dec
or
popf
mov
lods
adc
pusha
cld
popf
xor
daa
fwait
repz
push
int
lock
std
or
mov
push
pop
div
cmc
test
loop
addr16
xor
pop
call
stos
mov
inc
sub
cs
mov
dec
sbb
mov
stc
retf
in
push
add
jecxz
jae
pushf
xor
push
mov
retf
xor
jbe
test
loope
pop
push
jmp
adc
jae
or
adc
in
aas
and
inc
push
test
jle
inc
lods
fs
js
ss
cdq
repnz
cmps
in
cmps
pand
shl
jnp
lods
or
test
add
mov
sub
mov
iret
adc
xchg
out
xor
add
test
fsub
rcl
in
pop
mov
inc
arpl
jo
call
mov
scas
ffreep
imul
mov
cdq
push
sub
stc
mov
inc
out
and
pushf
mov
jp
mov
jl
mov
inc
loop
sahf
inc
lock
push
inc
(bad)
(bad)
retf
mov
sub
shl
gs
(bad)
lds
jb
jl
jno
dec
inc
cmp
sub
or
lods
in
jb
adc
iret
repnz
ins
mov
test
cmp
ret
cmp
ror
xor
add
fs
mov
cmc
pushf
mov
dec
movs
jp
inc
sbb
and
(bad)
imul
(bad)
ficom
js
push
mov
(bad)
call
cmp
push
out
(bad)
mov
adc
test
jb
nop
jne
not
jne
sub
jno
(bad)
jmp
push
pop
bound
mov
mov
stos
jp
sahf
int3
outs
xor
dec
or
scas
test
adc
and
jl
jne
out
push
fcom
or
jae
iret
mov
push
mov
in
ins
cdq
rcl
retf
xlat
scas
ins
add
or
and
sbb
xchg
test
adc
push
addr16
xor
(bad)
jmp
mov
jg
nop
push
clc
push
fidivr
adc
rcr
call
adc
mov
jge
movs
mov
aad
lea
adc
cmp
push
(bad)
int
xchg
nop
scas
imul
mov
pusha
and
aad
inc
lock
(bad)
fsubr
inc
jecxz
movs
xchg
icebp
add
movs
add
sahf
jmp
stos
fwait
rcl
mov
(bad)
les
push
clc
inc
adc
push
enter
pop
pusha
xchg
push
mov
inc
iret
jmp
cli
out
out
sub
dec
or
outs
or
push
icebp
mov
inc
les
pop
adc
jnp
mov
aad
inc
mov
popf
xchg
popa
push
pop
mov
add
and
sti
std
sti
push
mov
mov
mov
mov
call
lods
xchg
or
arpl
stc
enter
leave
daa
popa
fnstsw
aas
cld
cwde
mov
shl
in
test
dec
out
aas
pop
stc
inc
fsubrp
stc
jae
std
cld
jo
(bad)
xor
mov
xor
sub
int3
dec
push
sub
and
cs
add
adc
and
in
push
stc
stc
test
xchg
push
mov
push
(bad)
hlt
or
push
adc
dec
or
mov
xor
xchg
dec
jge
xor
fdiv
mov
jb
idiv
in
ror
push
aam
outs
add
push
mov
shl
or
push
xor
sub
mov
jle
pop
jbe
add
inc
inc
xchg
mov
dec
sbb
sbb
pop
in
xchg
test
push
xchg
mov
out
push
ins
inc
das
and
imul
dec
dec
xor
add
cli
sbb
jl
adc
sbb
into
xchg
rcr
fcomp
sbb
shr
add
xchg
es
punpckhbw
lods
add
cmp
add
sub
dec
mov
mov
loopne
cmp
mov
xor
xor
stos
cmp
jl
data16
mov
mov
lods
pop
test
int3
xor
loop
mov
pop
jmp
mov
inc
fwait
and
ffreep
pop
xor
test
out
sbb
fst
outs
retf
popf
mov
sub
mov
sub
pop
pop
(bad)
out
mov
adc
int
xchg
mov
push
rcl
jae
into
inc
sbb
ja
dec
(bad)
mov
fwait
outs
or
cmp
mov
dec
dec
in
xor
out
mov
pop
jns
sahf
push
pop
and
out
mov
jge
popa
into
mov
dec
inc
scas
leave
mov
(bad)
(bad)
imul
push
xchg
imul
jns
jb
mov
xchg
mov
outs
jb
ds
daa
in
js
ret
sbb
out
imul
add
jmp
jae
dec
jno
dec
stos
sub
or
cmp
cmps
imul
sub
push
xchg
ret
stos
push
sub
popa
sbb
pop
inc
in
cmp
inc
mov
pop
sbb
out
inc
adc
pop
js
push
adc
les
std
mov
ss
fistp
dec
retf
cmp
sub
das
lods
inc
jmp
lds
mov
adc
xchg
loopne
fs
mov
rcr
retf
enter
pushw
adc
and
sub
xor
ss
cld
aam
lds
js
das
pop
ret
shl
test
(bad)
push
xor
sahf
call
or
rcr
push
lahf
faddp
das
gs
js
or
cdq
mov
hlt
sbb
mov
mov
sbb
xchg
call
stos
jmp
xor
int
fs
arpl
rol
sub
outs
ficomp
pop
xlat
mov
pop
xchg
xchg
jo
jmp
cmp
adc
adc
adc
ins
es
imul
xchg
cmps
pushf
cwde
xchg
adc
add
sar
mov
adc
icebp
ins
sub
fisttp
pop
xchg
cs
icebp
pushf
fld
popa
addr16
dec
add
mov
sbb
pop
add
add
arpl
pop
je
mov
mov
(bad)
icebp
pushf
stos
ja
dec
add
sub
xchg
icebp
test
pop
dec
add
out
in
into
pop
movs
cld
xchg
clc
retf
fild
pop
ja
arpl
out
pminub
dec
outs
movs
out
std
pop
rol
aad
in
xor
std
mov
push
sub
cmp
and
loopne
fstp
sbb
push
into
xchg
add
mov
lahf
sbb
ret
ficom
dec
pop
shl
(bad)
cmc
jmp
pop
xor
push
cmp
mov
cli
stos
jp
lea
inc
test
xchg
fcmovnbe
xor
xchg
pop
test
and
cmps
and
and
push
push
mov
pslld
mov
jbe
out
adc
icebp
pop
pop
mov
in
neg
jmp
pushf
imul
bound
fs
es
mov
adc
adc
jbe
shl
gs
repnz
dec
xor
pop
mov
push
or
or
xor
dec
add
xor
jno
jge
mov
jae
frstor
adc
out
sub
xchg
mov
js
outs
mov
sbb
(bad)
fmul
retf
ins
push
or
sbb
shl
jle
jnp
(bad)
jecxz
pop
neg
cmc
frstor
aad
inc
ins
sbb
test
inc
pop
popa
into
inc
mov
cld
jp
ret
test
les
cli
inc
cdq
mov
es
mov
add
gs
push
or
das
out
add
xor
sub
leave
iret
mov
sub
xor
and
jl
push
xor
out
jmp
adc
int3
sub
pushf
xchg
popa
pop
and
xchg
fwait
inc
mov
mov
cmps
in
call
xchg
fs
ins
push
call
add
lods
cmc
stos
add
mov
inc
arpl
jle
push
push
mov
push
inc
cld
and
jb
ins
or
sub
xchg
(bad)
push
jmp
jl
pop
fsub
xor
cmp
inc
movs
pusha
in
pop
xchg
sub
push
inc
pop
jge
pop
cmp
adc
and
jp
pusha
arpl
pop
sbb
aad
pop
xchg
mov
in
adc
push
adc
xchg
xchg
movs
bound
jo
sti
pushf
mov
sbb
adc
outs
or
aaa
mov
retf
lods
jg
fisttp
or
and
enter
add
sub
and
mov
sar
xchg
xchg
js
ret
out
test
dec
jb
sbb
sti
in
pusha
cdq
fidivr
xor
sbb
jne
mov
jmp
int3
enter
adc
scas
cmp
shr
inc
and
mov
es
ja
xor
and
xchg
and
xor
mov
mov
xor
rcr
mov
int3
mov
fdivr
test
loopne
pop
push
test
or
jecxz
push
into
push
jle
inc
pop
jbe
mov
in
push
mov
xor
(bad)
fnsetpm(287
test
add
add
repnz
(bad)
push
das
mov
jp
xor
mov
mov
mov
xchg
cmp
cmp
push
mul
ds
cmp
repz
addr16
xchg
sbb
arpl
ins
div
test
jmp
ins
sub
adc
jmp
or
jl
xor
inc
push
stc
in
fcompp
xor
add
dec
jp
out
leave
jmp
xor
ds
push
xor
inc
rol
push
sbb
xor
mov
push
inc
aaa
jmp
cmp
icebp
pop
shl
inc
lea
jns
pop
jmp
aam
nop
adc
mov
stc
sahf
inc
xchg
daa
mov
ror
jmp
(bad)
fidiv
das
add
add
ins
or
cld
add
jo
dec
push
dec
ss
clc
call
popa
rcr
xchg
and
inc
outs
jbe
leave
call
mov
fcmovnb
mov
jbe
add
dec
aam
popf
neg
jb
add
icebp
ror
es
lods
cmps
ss
outs
ret
cmp
outs
cld
stos
dec
jb
out
into
dec
movs
mov
ds
ss
ins
bound
jl
loopne
push
cmp
hlt
xchg
pusha
cmp
(bad)
mov
adc
ror
xchg
pop
lods
in
scas
inc
dec
lock
and
mov
inc
sub
adc
push
mov
or
pop
jg
lods
ret
fstp
mov
retf
xchg
push
mov
dec
or
jnp
(bad)
mov
out
lock
imul
stos
mov
(bad)
(bad)
jmp
pop
stos
lahf
push
lods
pop
popf
dec
mov
xchg
ror
das
jp
call
out
and
fs
sbb
cdq
add
adc
mov
cmp
les
mov
mov
scas
xor
dec
sti
inc
imul
pop
xor
jns
xlat
ss
cwde
mov
and
(bad)
mov
fst
inc
sbb
sbb
jne
lock
push
jmp
shl
mov
call
fsub
sbb
add
fadd
daa
mov
push
(bad)
cmps
mov
cli
pop
xor
mov
cli
inc
(bad)
lds
sbb
rol
push
xchg
mov
aaa
retf
pop
pop
inc
into
ds
fimul
fcomp
sub
xchg
imul
jne
xor
push
sub
xor
add
sbb
test
sub
sub
xchg
xabort
call
sbb
iret
arpl
mov
aaa
mov
(bad)
repnz
and
in
xor
cmp
mov
sbb
add
stc
stc
sub
xor
dec
hlt
nop
add
dec
sbb
fdivr
pop
adc
imul
mov
jbe
imul
hlt
cmps
fld
push
call
dec
pop
repnz
daa
xchg
and
jb
jbe
neg
cs
sbb
movs
data16
call
adc
arpl
cld
pop
cmp
sbb
sbb
mov
das
(bad)
mov
inc
add
psrlw
and
mov
jb
push
jnp
test
mov
fcmovnu
iret
shr
inc
ja
test
and
xor
test
push
jge
into
imul
mov
mov
xchg
xchg
adc
sbb
iret
xchg
fisttp
call
test
jns
and
or
sbb
leave
retf
repz
jbe
and
mov
add
pusha
in
jo
out
inc
nop
and
test
or
movs
push
push
adc
int3
ins
scas
add
mov
popa
jmp
imul
inc
stos
sahf
xor
out
fmul
mov
inc
std
mov
jp
jmp
jb
xchg
mov
push
cli
div
loopne
inc
fild
imul
arpl
movs
pop
test
xchg
dec
push
jge
add
xor
fdivr
nop
add
jle
or
in
data16
mov
sbb
mov
sahf
cwde
ror
xchg
jle
inc
mov
push
sub
add
mov
push
test
or
cmps
xchg
jecxz
or
fwait
xchg
dec
test
(bad)
pusha
add
sbb
xchg
shl
sbb
add
in
jmp
mov
aam
ins
or
cld
ss
cs
inc
pop
mov
push
imul
fwait
(bad)
xor
cdq
shr
mov
add
scas
push
data16
scas
cmc
daa
ins
fimul
or
inc
or
out
adc
cs
xchg
jle
(bad)
xchg
imul
and
leave
es
push
sbb
cmps
mov
call
add
mov
mov
lods
(bad)
cli
xor
retf
push
or
mov
pop
and
xchg
mov
adc
add
adc
pop
mov
cli
arpl
and
sub
retf
dec
pop
mov
(bad)
push
lods
and
daa
movs
xchg
push
and
leave
jp
push
les
fisubr
add
je
xchg
repz
pop
ins
out
sub
stc
in
mov
jo
jno
les
mov
cmp
sub
and
int3
popa
rol
mov
dec
call
daa
cli
jmp
push
fmul
inc
pop
sbb
sub
in
sbb
aam
icebp
and
jg
das
int3
sub
xchg
push
push
ret
(bad)
cmp
push
pop
in
sbb
rcl
xor
popf
mov
lock
add
cmps
aas
cmp
pop
out
cmp
xor
pusha
fwait
dec
xor
or
jns
xchg
jmp
add
aam
dec
ds
inc
out
shr
pusha
bnd
sub
repz
push
inc
(bad)
jne
inc
cmp
xchg
jecxz
jg
je
test
pop
scas
jnp
loop
jbe
aam
dec
sbb
lahf
ret
int3
jb
adc
les
hlt
xlat
dec
ins
cmp
push
outs
repnz
or
fs
aaa
jmp
mov
outs
dec
sbb
or
popa
imul
add
push
inc
shld
movs
sub
xchg
or
mov
int3
dec
leave
sub
sti
lods
out
or
leave
(bad)
scas
in
jmp
(bad)
into
pop
fst
lods
dec
cmp
mov
retf
in
mov
ja
gs
call
add
(bad)
cmp
pop
test
fs
popf
sbb
add
out
sub
mov
inc
es
push
lahf
shl
inc
retf
div
jmp
inc
mov
ret
(bad)
jp
jl
repz
fcom
mov
sbb
pop
pop
sti
daa
pop
sti
sub
push
aad
rcl
xor
call
push
(bad)
stos
or
push
xor
mov
mov
call
ja
test
inc
ret
imul
jnp
setne
movs
(bad)
not
push
in
jge
jmp
dec
push
pop
adc
mov
jmp
jecxz
cmps
jb
arpl
mov
xor
push
int
mov
dec
xor
lods
dec
(bad)
imul
shl
push
rcr
jnp
jne
aam
hlt
fistp
dec
int3
cdq
aad
outs
push
lods
inc
sbb
ins
fadd
enter
dec
or
xchg
adc
and
test
inc
les
fsubr
push
fmul
adc
inc
pusha
rcr
imul
inc
aas
adc
stc
jecxz
jb
std
pop
int3
aam
iret
movs
mov
mov
inc
clc
es
jmp
aaa
lock
cmp
add
xlat
push
jne
(bad)
aad
push
sbb
std
mov
add
mov
jae
test
pop
ins
dec
push
xchg
mov
xchg
or
fs
push
nop
call
push
or
xchg
push
jbe
out
xchg
(bad)
sbb
mov
cmps
(bad)
cmp
mov
push
mov
aas
inc
mov
mov
sahf
pop
in
ja
mov
jmp
add
fucomp
iret
sub
cmp
pop
xor
jle
jmp
outs
xor
jae
je
push
pop
lock
arpl
sahf
cmp
push
jmp
mov
pushf
xor
(bad)
int
and
lock
push
les
pop
test
outs
adc
cdq
into
xor
mov
(bad)
je
fs
dec
in
or
inc
sti
jle
and
dec
dec
and
mov
pop
jmp
sbb
or
or
pop
pop
(bad)
and
cld
jb
(bad)
xor
dec
ret
inc
pushf
adc
in
mov
inc
mov
in
cmp
add
jno
js
or
inc
fimul
cmp
xchg
int
(bad)
addr16
ret
mov
into
lods
jne
adc
push
dec
mov
xchg
sahf
scas
mov
scas
mov
fcom
jmp
cmp
test
ret
std
jns
sub
pop
shr
add
xlat
push
cmp
movs
mov
or
popa
and
jmp
mov
add
daa
mov
aas
jp
adc
sbb
lds
aad
sbb
stos
xor
push
cmps
bound
loopne
mov
push
jecxz
clc
dec
pop
push
sbb
dec
stos
mov
ja
xor
push
(bad)
mov
mov
sub
in
xchg
mov
(bad)
xor
ins
and
pop
sbb
fiadd
shr
mov
adc
or
inc
jae
inc
leave
xor
dec
pop
ja
jge
and
cmp
mov
aaa
cmp
js
sub
cld
stos
jne
cld
(bad)
arpl
jbe
sub
xchg
pop
jecxz
or
pop
dec
stos
retf
xor
out
mov
int3
js
push
test
aam
loop
ins
pop
add
push
mov
cmps
loop
pop
into
(bad)
leave
pop
pop
sahf
stos
sbb
test
mov
jecxz
imul
xor
jge
ds
jns
jg
ins
mov
sbb
inc
shr
and
dec
and
inc
ret
push
sbb
data16
or
xor
shl
int
cmps
cmp
push
enter
lock
pop
(bad)
sti
jl
cmp
jne
xor
cmps
sbb
dec
in
inc
loop
jecxz
cmp
inc
cdq
mov
fld
mov
cdq
pop
jmp
in
add
jo
(bad)
fisubr
xchg
cmps
lahf
jbe
jl
xchg
stos
or
sub
cdq
maskmovq
div
xor
inc
mov
pop
lea
dec
leave
push
into
xor
dec
es
and
movs
cmps
pusha
cmps
or
out
mov
das
sub
rol
mov
aaa
mov
pop
and
xchg
lea
daa
fistp
add
inc
jg
in
call
lds
mov
stos
dec
dec
pop
rcl
mov
push
bound
fcomp
nop
outs
out
inc
les
jo
int3
mov
and
mov
in
std
(bad)
pusha
xlat
xor
cdq
sbb
icebp
jge
(bad)
icebp
cmc
push
pop
shr
add
in
sbb
popf
dec
js
out
inc
and
xchg
xchg
cmp
movs
loopne
call
mov
mov
aas
cmp
add
add
cdq
call
int3
stos
cmp
out
sub
push
sbb
add
dec
and
adc
xor
or
shr
jg
call
xchg
push
shl
jae
xor
(bad)
pop
ret
clc
test
cwde
popf
out
rcl
shr
jb
jl
mov
inc
out
pop
mov
(bad)
hlt
jo
and
push
sbb
push
call
push
cmp
mov
(bad)
mov
mov
out
in
ja
nop
cli
iret
add
push
loope
xchg
mov
and
in
cmp
call
ret
mov
loopne
sbb
add
(bad)
jge
outs
shufps
add
mov
into
mov
pusha
cmovs
sbb
cld
out
jmp
push
xlat
push
mov
sar
xchg
(bad)
mov
cmps
push
sub
pop
mov
int
cmp
ds
movs
jp
mov
aam
cdq
mov
cld
jae
aas
sbb
aam
sub
pop
sbb
pop
xchg
mov
mov
lahf
mov
std
in
inc
mov
into
arpl
sbb
xor
and
jle
cld
fcom
in
cli
xor
inc
and
sub
dec
push
out
ins
imul
or
jle
daa
xchg
les
xlat
jmp
nop
add
fwait
dec
scas
or
popa
rcr
fwait
retf
daa
arpl
cdq
jmp
adc
sbb
xchg
js
popf
sbb
sub
es
inc
mov
mov
cdq
xchg
jns
sub
push
xchg
icebp
sti
mov
stos
pop
pusha
cmps
mov
cdq
sub
add
push
xor
sub
adc
add
jmp
jbe
imul
out
push
push
mov
and
xor
cli
pop
and
test
idiv
sahf
lods
cmp
(bad)
jecxz
cmovg
inc
sahf
xor
xchg
xchg
cmp
ret
mov
faddp
repnz
mov
or
jmp
repz
cmp
mov
or
or
arpl
xor
add
outs
jge
add
clc
adc
ror
out
std
ja
ficomp
(bad)
in
jp
and
bound
stos
mov
ins
jp
push
and
pushf
int3
mov
scas
cmp
fist
cmp
mov
xor
mov
mov
in
xor
loop
js
jg
sub
in
stos
shl
rcr
pop
cmp
loopne
cs
sub
mov
sub
fisubr
arpl
mov
imul
out
mov
arpl
add
push
push
out
fxch
mov
jp
into
test
aad
gs
pusha
cli
sahf
jge
scas
stos
sub
or
(bad)
lea
sub
ins
lods
lds
leave
adc
sar
call
mov
sti
fcom
and
adc
shl
int
pop
mov
and
cmp
or
das
pusha
dec
aas
cs
enter
loop
in
cmp
push
ud2
leave
fidivr
sub
les
jl
mov
push
ficom
das
iret
mov
inc
xchg
enter
daa
mov
mov
mov
mov
jge
rcr
sub
dec
inc
sub
sbb
dec
push
or
pop
add
(bad)
sbb
mov
mov
jbe
cmp
mov
xor
mov
mov
sahf
xor
daa
sbb
pop
psllw
les
dec
xchg
fwait
xchg
lods
inc
scas
xlat
cmp
add
retf
dec
out
scas
jnp
ret
pop
xchg
or
imul
sbb
sar
es
mov
ror
mov
sub
mov
les
mov
sbb
sub
sub
sbb
xchg
adc
outs
jecxz
jbe
ret
xchg
in
mov
mov
and
jecxz
dec
inc
out
inc
lods
lods
push
cli
jmp
mov
xchg
pop
js
int
or
rcr
cmp
xchg
fcom
push
fimul
add
bound
inc
mov
mov
push
sbb
test
ds
(bad)
sti
ds
aam
fnstcw
movs
mov
mov
enter
xchg
fisub
adc
pop
jmp
jno
(bad)
sbb
cmp
aas
sbb
test
sub
in
sahf
ins
dec
pop
ret
outs
jecxz
add
jno
mov
sub
aam
sbb
not
push
in
push
movs
call
loopne
mov
push
out
fidivr
mov
push
jae
ret
out
fdiv
call
sbb
cmc
adc
push
aaa
rol
mov
mov
jle
mov
scas
pushf
data16
sbb
outs
mov
cmps
pop
jns
xchg
jge
(bad)
cli
sub
push
add
jno
cmp
mov
inc
call
mov
sahf
mov
pop
push
fst
clc
push
lahf
out
mov
mov
les
dec
aad
ins
xchg
cld
mov
mov
pop
jns
add
into
adc
leave
repnz
rcr
out
gs
or
lock
std
mov
in
sub
into
aam
cmps
mov
stos
xchg
inc
mov
sar
cmp
or
mov
in
or
bnd
aad
jp
jmp
inc
push
into
mov
add
les
ficomp
cld
les
std
(bad)
jmp
push
cmp
pop
fnstsw
adc
xchg
ret
xchg
jmp
das
xchg
push
mov
stos
cmp
pushf
mov
call
jae
(bad)
(bad)
imul
outs
add
scas
jge
call
das
popf
stos
fwait
stc
je
ret
add
push
stos
(bad)
xchg
aaa
and
push
fld
retf
and
mul
mov
cmps
(bad)
cmp
push
push
sbb
or
or
imul
mov
in
sahf
sbb
mov
push
cld
adc
mov
jno
out
add
dec
jecxz
jns
in
inc
mov
dec
dec
fist
cmps
push
test
scas
loope
pop
movs
jge
fidivr
cmp
xchg
adc
cmp
dec
xor
cmps
mov
or
das
inc
dec
add
test
das
jb
bound
sti
repz
mov
pop
add
dec
sbb
xchg
mov
scas
and
inc
xor
add
outs
push
retf
das
pushf
dec
push
mov
mov
xor
das
retf
xor
lahf
not
jo
sbb
add
xor
dec
xor
add
ds
(bad)
fstp
pop
mov
or
mov
push
push
add
cmps
out
cs
adc
mov
outs
push
das
cmps
or
cwde
hlt
or
sub
xchg
pushf
sbb
clc
(bad)
xchg
xchg
push
add
push
movs
out
jae
dec
sub
retf
pop
lods
jg
xor
push
loop
xor
sbb
xor
rcl
mov
aaa
cmps
mov
popa
sbb
xchg
mov
ret
sbb
rcr
popf
mov
inc
iret
cmps
imul
loop
or
test
lods
mov
fsub
(bad)
cmps
sbb
aad
test
cli
daa
push
mov
and
mov
and
movs
push
loopne
or
xchg
imul
daa
out
push
inc
xchg
or
push
call
out
xchg
(bad)
xlat
cwde
in
mov
ror
xchg
cmps
mov
jl
pop
dec
icebp
or
data16
add
loopne
jecxz
sub
shr
cmp
fs
cmp
xchg
inc
(bad)
call
jp
push
push
inc
push
lock
cmp
push
mov
xchg
shl
ins
dec
push
hlt
cmp
pop
mov
and
rol
and
popf
cmp
out
push
ds
outs
jmp
enter
adc
shl
xchg
mov
(bad)
test
jno
test
bound
shr
sub
int
push
mov
scas
xor
cmp
bound
mov
or
rcr
add
sahf
or
adc
or
inc
stos
cmp
push
shr
lods
inc
js
or
and
mov
into
aad
xor
ins
dec
push
(bad)
mov
lds
cwde
push
dec
xchg
call
cmps
inc
das
fs
sub
mov
lahf
jns
push
clc
push
retf
call
xcrypt-cbc
cmps
push
inc
int
add
mov
mov
xchg
pop
sbb
les
mov
lods
inc
xor
mov
cmp
in
shl
sbb
pop
cli
mov
retf
mov
cmc
cs
push
sti
xchg
push
pop
sub
lods
dec
sqrtps
push
sbb
pushf
push
les
mov
mov
lock
xchg
icebp
repnz
xor
mov
cmp
xchg
pop
add
mov
test
outs
add
cwde
mov
(bad)
in
test
(bad)
jg
aas
mov
fdiv
aas
fdiv
jl
sti
daa
pop
adc
scas
sahf
pop
mov
xor
out
cmps
mov
fwait
lock
mov
stos
lea
pop
cmps
mov
rcr
and
lahf
push
inc
adc
pop
lds
loopne
pop
cli
dec
leave
pop
arpl
jnp
movs
mov
and
(bad)
mov
cmps
mov
pop
fidivr
test
sub
out
and
shl
push
pop
bound
add
push
ficomp
lods
ret
jo
loopne
mov
cli
xchg
mov
(bad)
cli
icebp
ins
outs
in
cmc
and
movlps
call
jmp
xor
imul
adc
lea
lahf
adc
fcom
cli
in
sbb
jns
call
mov
enter
inc
fwait
les
dec
bound
xchg
mov
jmp
cmp
and
mov
mov
jno
adc
mov
aam
mov
stos
imul
mov
out
out
in
(bad)
mov
xlat
xor
retf
fisttp
mov
sbb
iret
popf
cmp
fcmovb
xor
dec
pop
retf
ret
movs
or
mov
test
sbb
cli
dec
sbb
stc
js
mov
mov
es
mov
rcr
pusha
jb
adc
push
pop
dec
add
outs
jge
mov
in
addr16
jp
iret
sub
mov
add
repz
inc
cmovns
ss
fcomp
hlt
push
jns
fcmovnbe
cmp
push
fcomp
test
leave
and
adc
daa
sub
aas
lds
pop
add
(bad)
neg
aad
or
out
push
cmp
cmp
and
and
adc
ins
dec
rcr
lock
pop
xchg
fidivr
pop
(bad)
push
jo
sub
xchg
sbb
mov
inc
enter
test
addr16
into
pop
dec
jecxz
scas
adc
dec
mov
stc
test
test
test
and
inc
and
pop
cmp
mov
jge
jle
and
inc
dec
or
xchg
add
cdq
(bad)
push
fs
ret
pop
pop
mov
fild
mov
cs
adc
js
pop
imul
ret
add
imul
outs
push
push
out
mov
push
pop
fisttp
cmps
jecxz
adc
aad
gs
push
sahf
mov
es
jle
scas
pusha
inc
(bad)
sbb
mov
imul
sbb
cld
jp
mov
cmp
nop
add
je
xchg
hlt
push
mov
sar
es
mov
mov
pop
sub
test
jle
fwait
xchg
sbb
cmp
idiv
dec
ror
mov
jg
mov
xadd
pop
mov
das
xor
adc
retf
int3
test
xor
scas
add
dec
aas
jp
inc
add
add
and
pushf
jmp
loopne
pop
aam
int3
pop
jo
fadd
dec
test
mov
js
ret
push
adc
pop
call
std
call
add
pop
add
or
jge
cmp
cli
js
cmp
retf
push
js
inc
fbld
je
inc
in
mov
xchg
sbb
xchg
push
cmc
mov
dec
pusha
aas
inc
fadd
xor
jle
call
cmp
mov
fld
cmc
fistp
scas
stos
sahf
and
outs
add
pop
push
movs
cmp
cld
stos
mov
lods
inc
pop
test
add
psrlw
xchg
or
dec
stos
call
dec
pand
cmp
mov
xor
enter
dec
push
arpl
adc
int3
aaa
aad
mov
add
push
inc
mov
repz
int
in
pop
ins
lock
jb
popf
or
cmc
mov
jnp
xor
out
inc
popa
inc
ds
stos
cmp
int3
(bad)
jbe
lods
dec
gs
push
add
popf
test
mov
jae
sar
push
cmp
fs
imul
xchg
and
sahf
lods
(bad)
jmp
popf
or
cmps
test
cmp
leave
xor
lea
js
fs
aaa
mov
sub
sbb
mov
out
or
int
add
inc
adc
xor
dec
test
retf
out
or
rcr
pop
cmp
adc
jae
lods
sti
or
inc
sbb
pop
(bad)
je
adc
ret
das
push
je
mov
jg
(bad)
scas
pop
mov
popf
pop
shl
pmaddwd
clc
das
xchg
stc
movs
into
out
push
pop
cmp
test
scas
nop
fmul
mov
imul
popa
push
push
xor
xchg
push
or
cmp
in
scas
(bad)
test
sub
xchg
lea
ficomp
dec
lods
rcr
in
cmps
xor
data16
add
jmp
es
mov
outs
jbe
inc
sahf
adc
stc
or
adc
pop
inc
push
jo
and
jmp
pushf
mov
popa
sbb
sub
inc
shl
arpl
or
xchg
in
int3
movs
xchg
or
rcr
(bad)
push
sub
pushf
dec
mov
xor
stos
mov
(bad)
push
mov
mov
test
fmul
mov
push
or
xchg
jne
pop
fwait
cli
xlat
test
ins
outs
adc
sub
and
loope
scas
mov
movs
push
aas
and
es
shl
scas
jge
cs
push
fcompp
ret
cmc
(bad)
addr16
add
call
not
dec
mov
xchg
jmp
add
jmp
je
mov
push
test
sbb
mov
add
ds
push
int3
(bad)
push
loopne
out
lea
dec
pop
or
mov
xchg
retf
retf
push
jne
xor
cmp
xchg
jmp
(bad)
(bad)
jle
add
std
aas
inc
pop
sar
and
out
out
gs
idiv
shl
adc
(bad)
sbb
addr16
xor
jl
push
inc
out
sbb
retf
adc
mov
repnz
fld
fsubr
daa
imul
rcr
fstp
mov
ins
push
stc
shl
sbb
xor
lea
xchg
ja
mov
ins
inc
fild
cmc
adc
movs
jle
mov
pop
adc
xor
jg
push
sub
je
lods
pop
dec
push
xchg
sub
dec
jecxz
es
mov
jno
cwde
xor
mov
das
pusha
mov
sub
xor
sub
add
mov
inc
push
out
jbe
es
inc
jle
mov
shr
js
sub
sbb
jmp
mov
mov
inc
scas
nop
pop
cwde
stos
iret
icebp
inc
popa
mov
jno
ficom
xlat
outs
enter
jns
jb
out
mov
mov
or
jecxz
cmp
pusha
xchg
xchg
push
pop
out
out
xchg
sar
lock
das
lds
pusha
push
ret
and
push
sub
sbb
icebp
sti
fdivp
push
push
xor
inc
out
mov
fcom
mov
repz
pop
call
sub
jmp
(bad)
sub
cwde
bound
push
cmp
repnz
xor
fisttp
mov
xchg
mov
std
fistp
das
sub
mov
xor
dec
shl
push
gs
movs
arpl
sbb
mov
mov
xchg
cmp
jg
add
int
mov
pusha
cs
cdq
push
rol
mov
out
xchg
add
rcr
pop
stos
lods
dec
popf
or
imul
adc
mov
movs
cmp
xchg
fmul
push
lahf
cmp
mov
or
scas
jg
adc
(bad)
in
ja
sub
mov
aaa
std
fild
cmps
shr
(bad)
jge
xchg
add
std
leave
fadd
scas
dec
xchg
cmp
pop
pusha
ds
inc
mov
in
pop
and
add
push
mov
pop
retf
mov
push
xor
dec
into
cmp
and
inc
mov
mov
fs
jne
adc
dec
mov
xor
in
xlat
shl
cmps
mov
out
in
in
and
cwde
dec
shl
stos
push
inc
aas
fisttp
js
mov
mov
cmp
jl
add
jecxz
lds
(bad)
push
pop
out
fld
pop
pop
outs
(bad)
adc
and
shl
and
scas
cmps
push
out
lods
adc
ja
loop
push
cmp
out
jae
sti
test
mov
mov
(bad)
in
mov
std
(bad)
(bad)
jb
adc
stos
std
xor
pop
push
push
cmp
fidiv
fsub
loop
jae
nop
fsincos
push
sub
pop
jl
inc
test
mov
add
sbb
into
xchg
jmp
inc
scas
pop
mov
(bad)
lock
xchg
ret
xchg
inc
mov
add
jbe
sub
xlat
mov
cmps
xlat
mov
dec
cmp
jp
xor
adc
int
js
jnp
jns
mov
movs
push
int
popa
and
pop
jl
addr16
(bad)
aad
cmp
pop
sub
pop
xchg
inc
call
outs
and
jg
jmp
xchg
sub
in
out
or
int
lea
jb
jp
xchg
aaa
out
push
pop
das
xor
out
mov
ja
mov
(bad)
das
mov
call
sub
rcl
xlat
jp
cmp
and
jp
xor
shl
sbb
and
dec
fld
cmp
dec
dec
push
xchg
pop
pusha
and
sbb
xor
inc
xor
js
push
add
or
cmp
pop
pop
jmp
pop
not
pusha
mov
cs
pop
test
fsub
push
jp
fs
fucom
dec
xchg
adc
push
pop
in
cmp
repz
bound
sub
pushf
nop
fs
sub
add
cwde
icebp
(bad)
add
addr16
adc
int3
int
cli
push
pop
arpl
rol
test
cmc
or
or
sbb
fisubr
and
into
fwait
cmc
add
jmp
sub
push
xchg
pop
cmp
sub
aad
mov
int3
pmaxsw
cs
packssdw
stc
cmp
sbb
aam
mov
xor
mov
stos
movs
mov
or
push
cmc
nop
addr16
xor
mov
push
mov
gs
sub
mov
hlt
daa
push
mov
ins
scas
test
call
retf
std
data16
mov
inc
rcl
fadd
pop
ret
mov
fidiv
aad
jmp
push
or
movs
stos
pusha
mov
dec
add
mov
xor
and
pop
mov
out
mov
xor
out
in
add
fs
inc
cs
mov
dec
cmps
mov
cmp
mov
mov
mov
fidivr
or
cdq
fyl2xp1
jne
test
cmp
clc
loop
sbb
jo
movs
xchg
fbld
arpl
scas
or
daa
sbb
lds
pop
leave
not
or
imul
adc
lods
add
or
dec
jns
rcr
jl
cmp
mov
rol
out
push
(bad)
xchg
pop
adc
or
sahf
in
test
mul
test
aam
aad
shr
arpl
aad
and
jo
fiadd
in
inc
js
sbb
jg
pop
or
pop
inc
das
jne
inc
dec
pusha
in
out
xor
jo
out
mov
lds
addr16
xlat
or
ret
sbb
fldcw
xor
fbld
out
loop
cwde
jns
(bad)
mov
mov
mov
(bad)
jae
(bad)
int3
and
sub
mov
xor
push
(bad)
sbb
stos
adc
mov
imul
jmp
xchg
popa
lods
(bad)
adc
xchg
mov
fdiv
in
xchg
aam
and
cmc
inc
repnz
mov
loop
ja
and
mov
ficom
xor
pop
clc
sbb
arpl
iret
xchg
push
dec
add
mov
xchg
lods
mov
pop
sub
jnp
das
sbb
jb
push
jnp
addr16
sti
clc
push
cmp
rcl
push
jnp
in
mov
stos
fidiv
cmp
jno
mov
repz
shl
push
(bad)
out
popf
jg
das
pushf
addr16
fcmove
mov
push
adc
icebp
cwde
mov
push
loop
idiv
push
add
push
jp
or
rcr
lods
ret
stc
mov
(bad)
and
inc
test
xor
xchg
lahf
fcom
mov
ins
cmp
loop
pop
or
test
xor
les
push
sbb
loopne
lods
(bad)
call
test
xor
sub
pop
je
pushf
xor
mov
div
out
mov
add
mul
ins
mov
(bad)
psrlw
ins
and
push
pusha
scas
cdq
dec
pop
fldcw
dec
ror
and
sti
xor
stos
inc
pop
fwait
pop
xor
mov
jmp
daa
loope
leave
int3
dec
out
mov
out
add
fadd
(bad)
ja
rcl
cld
icebp
mov
sub
outs
and
add
cld
(bad)
pop
stos
je
clc
pop
jg
stos
es
fisubr
shr
popa
lds
jle
call
adc
cmc
fs
inc
jae
fistp
mov
bound
(bad)
fstp
gs
je
mov
fdivr
adc
mov
and
ret
pop
div
xlat
dec
jno
sbb
aad
inc
xchg
sbb
push
mov
jp
cmp
ror
dec
jbe
mov
test
(bad)
stos
cmps
mov
push
add
adc
xor
leave
ret
fwait
xchg
fisubr
fadd
cmp
ds
sub
pop
xor
push
shl
test
pop
xor
xchg
das
cmps
mov
call
xchg
enter
inc
cmp
fld
push
dec
sub
test
dec
jno
into
mov
dec
in
inc
aad
jns
or
push
push
push
mov
push
sti
ins
in
push
(bad)
enter
loope
call
mov
test
jl
in
retf
jo
jp
xlat
push
sbb
gs
test
cmp
push
ja
fs
add
jo
nop
imul
addr16
stos
inc
mov
fsubr
inc
add
and
push
push
jns
add
and
ret
dec
int
int3
ror
int3
jl
xchg
add
ins
(bad)
adc
aas
enter
dec
cs
sbb
les
clc
aas
cmc
jne
test
xchg
test
stos
pop
icebp
sbb
sub
cmps
ficomp
out
xchg
push
push
mov
push
xor
dec
int3
push
jno
fmul
mov
cs
xadd
scas
cmp
ficomp
dec
lods
ss
rol
jmp
into
(bad)
adc
pop
iret
je
popf
pop
arpl
test
and
icebp
and
pop
(bad)
retf
imul
fcom
out
aas
mov
pushf
jne
jg
loopne
aas
xchg
aaa
push
xor
fcom
ror
xchg
dec
pop
lea
in
pusha
daa
xchg
fistp
xor
pop
mov
daa
pand
push
clc
clc
sbb
test
je
int
aaa
push
js
adc
lods
test
and
fwait
(bad)
loope
leave
(bad)
retf
push
pop
mov
loope
sub
xchg
ds
xchg
or
mov
enter
popf
sub
push
inc
ins
sahf
mov
and
sbb
adc
retf
cli
fild
push
or
lods
stc
cmc
mov
in
or
enter
xlat
inc
pop
es
ret
aam
mov
movs
xor
mov
mov
and
in
stc
bound
cs
sbb
push
rcl
sub
in
out
ret
lea
jbe
xchg
ret
xchg
mov
dec
mov
pop
jae
rol
xchg
fidivr
jg
or
pop
mov
outs
push
pop
fs
dec
or
sub
mov
loopne
mov
jb
in
stos
jp
lock
jmp
hlt
or
popa
cmp
stos
pop
mov
js
in
scas
cld
jae
loope
cmps
(bad)
das
and
ret
pop
test
mul
sahf
das
dec
cs
lods
in
mov
out
mov
gs
cmps
inc
icebp
mov
aaa
sbb
jnp
lea
mov
cmp
out
rol
dec
mov
leave
ja
outs
sbb
sti
inc
mov
push
adc
add
mov
xor
iret
cmp
pop
mov
into
dec
sbb
ins
mov
add
mov
js
push
mov
sub
lahf
inc
rol
xchg
popa
shl
jl
(bad)
test
mov
shr
ror
mov
mov
and
das
sbb
push
cwde
sti
push
cmp
jno
test
or
pop
shr
and
out
ja
add
clc
sahf
dec
inc
sbb
and
retf
dec
jmp
xor
xchg
mov
sub
aaa
imul
data16
loope
ds
dec
mov
or
mov
dec
imul
mov
fild
adc
or
(bad)
cmp
call
pop
inc
dec
sbb
not
jg
call
push
xor
jbe
xor
pop
adc
jns
pop
mov
mov
movs
cwde
fisttp
pop
(bad)
cmc
mov
cmp
adc
jmp
pop
loope
push
mov
popf
fldcw
jle
dec
mul
inc
pop
je
pop
cmp
pop
sub
or
jns
xchg
or
jno
push
mov
cmp
lock
aad
(bad)
inc
fs
push
xchg
pop
jmp
jecxz
dec
dec
inc
pushf
and
sti
adc
dec
fld
pop
add
push
dec
push
sbb
cmp
retf
push
aaa
add
pusha
pop
outs
loop
sahf
not
test
imul
mov
rcl
int3
sbb
or
lahf
adc
clc
xlat
mov
dec
mov
xchg
mov
mov
lods
int
mov
mov
mov
add
ins
inc
adc
mov
fwait
loop
add
jnp
cmp
pop
push
pushf
stc
push
jne
test
adc
inc
mov
push
push
mov
jecxz
outs
xchg
pushf
pop
pop
push
jmp
aaa
adc
(bad)
cli
mov
push
iret
femms
rcr
xor
fs
aaa
fwait
test
fucomp
lods
cmc
sub
stos
and
dec
xchg
mov
outs
icebp
das
cmps
adc
lock
cdq
xchg
jbe
rol
sbb
dec
dec
mov
scas
push
hlt
jmp
das
pop
jns
cmp
pusha
jmp
sub
not
scas
pop
xchg
enter
ins
cli
jp
jae
(bad)
jnp
pop
call
sub
outs
outs
jecxz
ror
mov
adc
sbb
in
outs
cwde
mov
adc
jae
xchg
cmp
push
in
push
pushf
dec
test
aas
push
pop
outs
dec
jnp
aad
pop
and
stc
(bad)
pop
xor
(bad)
loope
shr
xor
push
imul
mov
cmp
adc
jbe
or
(bad)
out
movs
fldenv
xchg
add
and
in
jnp
adc
(bad)
or
loopne
popf
or
ins
sub
dec
loopne
ins
mov
sbb
push
leave
inc
mov
les
pop
sahf
pop
adc
and
sub
ja
ror
addr16
jb
shl
mov
sbb
adc
std
lea
fisttp
(bad)
sub
sbb
xchg
loopne
push
(bad)
aas
shl
sbb
outs
(bad)
mov
inc
fmul
inc
mov
fcmove
xchg
pop
adc
mov
cmp
inc
inc
adc
adc
jbe
or
out
pop
in
rcl
xor
ret
sbb
inc
jnp
xor
cmp
fimul
mov
sub
mov
and
xchg
cmps
xchg
mov
inc
mov
test
outs
xor
dec
and
repnz
ficomp
inc
dec
add
int3
leave
mov
inc
adc
ds
data16
(bad)
lock
aaa
pop
xchg
(bad)
push
lods
mov
cmp
dec
jle
jge
sub
mov
lods
pop
mov
fild
movs
(bad)
(bad)
push
out
imul
loope
inc
xchg
mov
or
(bad)
hlt
adc
push
jl
les
adc
into
outs
ror
das
out
mov
and
xor
jns
loope
ins
sbb
mov
adc
xchg
pop
rcl
mov
and
fldcw
mov
mov
repz
retf
je
fidiv
pop
push
cmp
faddp
mov
fild
out
mov
mov
inc
jmp
ins
dec
ret
add
jb
xlat
pop
scas
int3
(bad)
push
adc
(bad)
ins
fnstcw
cmp
fcmovne
pushf
xchg
out
xor
mov
xor
out
or
push
xor
push
mov
ja
jge
das
xchg
mov
and
repz
mov
mov
or
call
push
push
jp
(bad)
out
or
cmps
push
retf
imul
or
imul
jecxz
movs
push
cld
out
dec
out
pop
rol
cmp
add
scas
pusha
in
sbb
mov
hlt
xchg
push
sub
and
inc
cld
jb
ins
jb
jnp
sbb
xchg
or
movs
or
movs
adc
and
aaa
push
adc
gs
mov
ds
mov
mov
imul
cdq
arpl
jle
clc
cmps
mov
stos
inc
sub
xchg
jmp
scas
inc
pop
dec
loope
in
lahf
push
les
out
popa
inc
aaa
mov
sti
icebp
in
dec
mov
and
jmp
pop
call
add
xor
and
xor
mov
mov
jnp
loope
pop
retf
dec
int3
jns
stos
call
sbb
and
push
xchg
loopne
cmc
jecxz
mov
in
or
sub
ins
gs
push
out
cmp
rol
sub
xor
lods
adc
sub
lods
lea
scas
inc
out
mov
inc
bound
sub
(bad)
sar
add
psubw
fst
mov
add
mov
push
hlt
in
pop
xor
aam
jecxz
call
mov
pop
jne
movs
xchg
pmulhuw
adc
shr
sub
retf
or
dec
stos
adc
add
neg
imul
movs
xor
retf
ins
(bad)
iret
dec
and
in
hlt
js
adc
clc
outs
lea
outs
sbb
adc
idiv
fsubr
cmp
ret
je
and
in
js
inc
sbb
mov
test
or
mov
ja
call
jl
cli
and
jecxz
or
push
xchg
popw
call
loop
aam
retf
lock
adc
out
imul
iret
sub
add
test
js
fwait
sbb
mov
lods
(bad)
idiv
xchg
adc
icebp
and
pop
imul
add
dec
pop
ror
popa
ss
(bad)
jge
adc
add
fcom
cli
xchg
pop
fsubr
inc
mov
fmul
icebp
out
test
mov
inc
iret
jno
iret
inc
pop
cmp
inc
xchg
lock
iret
sbb
idiv
pop
push
inc
adc
cmps
adc
outs
into
mov
call
test
mov
sbb
xchg
fsubrp
les
and
push
sub
inc
rol
call
sbb
mov
clc
ins
out
scas
xor
cs
stos
sbb
fnstenv
pusha
dec
cli
(bad)
sahf
fimul
sub
daa
test
adc
push
(bad)
inc
jmp
ret
bound
and
jb
inc
out
data16
mov
mov
xchg
movs
inc
cmc
mov
or
in
stos
add
(bad)
pop
sbb
mov
idiv
ja
std
movs
repz
cmps
mov
lods
xor
add
push
jg
ret
jmp
sar
mov
inc
xor
js
imul
inc
jp
mov
fnstsw
and
fbld
inc
fild
xlat
icebp
fimul
or
cli
mov
cmp
ja
mov
ds
xor
push
sub
push
push
push
mov
aam
cmps
inc
push
jge
pop
push
aas
cmp
push
sbb
xor
cdq
popa
xlat
out
mov
push
jp
popf
adc
in
adc
enter
jb
(bad)
cmp
mov
jge
sbb
mov
test
shl
sbb
ins
xchg
xchg
test
(bad)
rcl
jmp
mov
jb
jne
sub
sbb
dec
fwait
jnp
(bad)
ss
jmp
and
jne
inc
adc
test
cmp
mov
cmc
into
sbb
loope
mov
mov
lahf
lea
fwait
sbb
cmp
call
stos
int
data16
mov
xchg
mov
icebp
and
sti
(bad)
ds
inc
or
sbb
push
es
nop
mov
add
push
(bad)
movs
loope
jle
inc
into
cmps
lea
push
mov
ins
sub
and
cdq
pusha
pop
adc
xor
dec
sbb
int3
or
fcom
shr
jo
test
ret
ficomp
mov
sahf
and
jne
sub
sub
imul
aam
cwde
test
test
or
rcl
movs
push
adc
dec
push
sub
dec
mov
inc
movs
mov
retf
das
push
cdq
adc
jge
push
clc
cmp
cmp
leave
mov
out
add
not
dec
mov
mov
add
icebp
ret
jmp
dec
imul
sbb
xchg
push
stc
add
push
test
hlt
addr16
call
das
dec
push
mov
fs
adc
push
test
mov
dec
stos
xor
inc
push
mov
dec
xchg
dec
in
js
in
sti
enter
jne
sbb
jp
xchg
jnp
int
fild
or
xchg
div
pop
jge
pop
xor
cld
xchg
stos
ins
push
xchg
data16
mov
cwde
push
test
dec
cld
jecxz
inc
ins
sbb
or
mov
mov
dec
and
inc
test
call
mov
shl
mov
pushf
or
inc
fisttp
adc
std
adc
mov
ins
or
test
inc
push
jg
retf
(bad)
es
sub
push
and
add
push
(bad)
aas
arpl
xchg
ffreep
mov
stos
pop
mov
(bad)
add
retf
sbb
jae
add
mov
pop
icebp
sub
std
pop
mov
pop
push
bound
je
scas
sub
xchg
das
mov
push
xchg
int3
cmps
daa
loope
pop
into
lahf
imul
pop
shr
cs
lahf
ja
mov
cmp
add
icebp
and
ret
cs
shl
xchg
dec
arpl
icebp
mov
scas
add
cmp
outs
dec
ss
push
dec
sahf
jg
pop
inc
mov
xchg
add
mov
cmp
iret
mov
test
pop
push
push
or
mov
add
or
inc
clc
jge
(bad)
pusha
sub
imul
jge
mov
mov
pusha
sub
or
movs
add
xchg
adc
xchg
push
mov
xchg
stos
arpl
or
iret
popa
push
cdq
sar
call
test
jge
push
icebp
cmp
push
xor
jns
add
aaa
xor
jecxz
inc
xchg
shr
xchg
mov
mov
sub
sbb
pop
or
mov
(bad)
inc
ins
je
outs
iret
dec
and
sbb
sti
mov
xor
inc
outs
fild
mov
pop
push
icebp
xchg
js
inc
movs
sbb
fsave
sub
mov
or
or
mov
jle
out
and
push
cmps
push
ror
scas
dec
cmp
mov
jns
out
int3
movs
iret
or
cmp
or
stc
int
scas
sahf
push
stos
pop
repz
jmp
pushf
(bad)
jno
and
inc
or
cmp
ins
aam
jecxz
aaa
xor
sub
loop
and
push
sub
adc
cmp
aam
jnp
or
dec
sub
cmp
stos
repz
fisubr
mov
outs
(bad)
xor
(bad)
lahf
jne
cmp
sahf
(bad)
push
outs
(bad)
fsub
out
dec
and
lods
stos
adc
in
xor
sub
adc
push
xchg
xor
data16
leave
jp
mov
jle
inc
mov
push
pop
mov
call
cwde
lods
es
bound
sar
sbb
add
pop
mov
sub
shl
in
xchg
jmp
jl
fimul
mov
sar
push
mov
ror
nop
xchg
push
add
xor
cdq
jo
rcl
outs
int3
iret
cmp
push
push
xchg
in
xor
mov
xchg
jl
push
inc
and
out
sar
jns
lods
jl
push
pop
or
jb
sar
in
add
int3
pop
inc
(bad)
push
pop
mov
inc
adc
into
push
and
sub
add
dec
sub
bound
sbb
fdiv
inc
in
push
movs
outs
jne
leave
arpl
mov
pop
mov
pop
mov
add
sub
dec
pop
mov
es
dec
fwait
push
addr16
mov
jmp
sub
mov
ins
inc
mov
daa
cmp
loop
fistp
adc
inc
jecxz
outs
ret
aaa
movs
add
jmp
cmp
sbb
rcr
pop
in
dec
cmp
pusha
jbe
xor
jne
mov
pop
push
fisubr
lds
sbb
inc
call
or
push
rcr
data16
cli
test
or
add
dec
sub
pop
retf
dec
mov
std
lea
mov
popa
inc
and
fwait
mov
ss
sub
inc
test
div
in
shr
loop
lods
cmp
lods
push
jo
test
adc
in
cli
icebp
ret
cmc
scas
jne
sti
ins
xor
and
jp
lahf
ja
in
aas
pop
cmps
pop
sbb
fisttp
call
cwde
scas
push
mov
mov
fnstenv
out
ret
mov
jl
or
icebp
in
xor
jl
cmps
inc
and
rcr
cwde
movs
or
mov
push
or
sti
sbb
xchg
in
sbb
pop
sbb
ss
ror
mov
(bad)
int
mov
jge
stos
gs
imul
retf
rcl
fstp
mov
popa
lods
or
and
push
xchg
or
cmc
xchg
rcr
jmp
cmp
xlat
jg
push
out
jne
inc
and
push
jbe
int3
fst
jge
test
mov
(bad)
shl
int3
xrelease
repnz
mov
loopne
xor
cmp
sub
mov
pushf
mov
das
dec
mov
dec
fwait
and
movs
sbb
aad
xor
das
push
fsubr
shl
xlat
push
sbb
ins
retf
gs
sub
xchg
test
xchg
daa
iret
pusha
fldcw
and
sbb
movs
test
mov
inc
out
or
cwde
adc
lock
cmp
(bad)
fs
cdq
(bad)
repnz
fs
js
inc
popa
test
lahf
add
popa
shr
adc
mov
call
xchg
repnz
sbb
adc
addr16
sub
cs
add
stos
daa
cwde
mov
mov
(bad)
mov
lds
fmulp
loopne
jecxz
jne
push
mov
jp
jle
dec
mov
lea
cmp
mov
rcr
or
inc
nop
or
gs
sahf
push
push
mov
jmp
mov
cmp
jb
(bad)
adc
das
das
mov
jns
mov
rcr
(bad)
sbb
mov
cmp
or
and
pop
and
repz
sub
das
or
shl
or
in
mov
pop
(bad)
jmp
jae
sbb
movs
xchg
out
jmp
fadd
inc
pop
lods
mov
mov
and
inc
shl
xchg
jmp
int3
sti
mov
hlt
pop
jl
xor
nop
mov
dec
in
test
mov
test
pusha
lea
xor
(bad)
fst
or
inc
mov
or
test
and
call
icebp
mov
clc
or
xchg
in
sahf
adc
dec
ss
jmp
gs
xor
xchg
mov
fwait
clc
push
or
and
cdq
push
mov
push
out
or
cmovp
and
pop
imul
sbb
mov
add
mov
fiadd
ror
inc
clc
mov
xchg
out
sbb
sbb
movs
out
gs
jnp
cmp
retf
out
xchg
add
stc
clc
mov
mov
imul
inc
cld
jo
repz
sbb
sbb
push
repnz
call
mov
add
cmc
mov
imul
add
xchg
add
inc
mov
in
outs
rcr
movs
(bad)
push
jmp
adc
movs
sbb
push
xadd
pop
scas
std
cmc
clc
inc
xchg
fwait
adc
lods
scas
call
mov
lock
loop
inc
pusha
mov
mov
xchg
(bad)
std
loopne
(bad)
mov
cmp
push
pop
loop
add
mov
pop
adc
dec
dec
mov
int3
sbb
add
xchg
or
inc
dec
in
aaa
test
ret
lds
ins
and
sub
shl
mov
test
sub
loope
mov
retf
repz
call
pushf
mov
sbb
xchg
push
xchg
std
cwde
inc
dec
pop
mov
in
ret
or
jne
nop
shr
cmp
pop
outs
adc
mov
std
daa
fs
inc
repnz
xor
mov
fdivr
sbb
sqrtps
or
in
int3
inc
scas
dec
(bad)
aad
lea
neg
test
mov
xor
call
iret
pop
push
xchg
mov
adc
aam
cwde
sub
repnz
inc
push
dec
jmp
xadd
jbe
sahf
or
push
aam
pop
jge
xor
mov
mov
leave
out
test
mov
dec
xor
add
js
sbb
pop
jle
push
jbe
stc
and
pop
and
mov
xchg
(bad)
inc
jg
imul
push
push
and
adc
(bad)
dec
jmp
ret
outs
retf
nop
(bad)
dec
xchg
xor
and
daa
cmp
jle
retf
xor
pushf
ja
cmp
and
jp
sahf
aaa
adc
repnz
ret
sub
push
stos
(bad)
ret
xchg
inc
xchg
mov
and
ret
pop
pop
xchg
shl
(bad)
adc
mov
imul
into
lods
sti
jbe
fstp
mov
push
sbb
lock
fwait
adc
mov
movs
sar
sbb
jmp
adc
adc
int3
mov
adc
outs
int3
test
mov
mov
cmc
ffreep
sub
push
jge
mov
fs
and
loopne
out
inc
and
sbb
clc
(bad)
rcl
scas
lods
adc
les
data16
jmp
fsubrp
lea
jge
ins
cmp
std
xchg
jno
aam
mov
mov
int3
mov
push
inc
add
loopne
mul
sub
call
movs
pop
stos
sub
inc
fisubr
aam
sbb
xor
mov
cmp
cmc
ret
ss
shl
and
or
das
shr
movs
xor
sbb
jle
(bad)
xor
mov
and
mov
jp
sub
xor
jae
(bad)
out
mov
pop
sub
pop
data16
inc
aam
sub
repnz
ret
pop
daa
sbb
ror
in
shl
jmp
adc
push
inc
mov
pop
fsub
jmp
sbb
sbb
cmp
retf
(bad)
adc
repz
mov
inc
dec
retf
mov
mov
push
lahf
sbb
inc
cmc
dec
jmp
sub
rcr
sub
mov
dec
or
xchg
shr
mov
pusha
cld
aad
jle
jmp
ins
mov
jb
jle
fiadd
fs
mov
out
add
addr16
cmps
dec
adc
out
cmp
push
or
mov
fisubr
mov
cmps
loop
pushf
fisub
xchg
adc
cmp
out
imul
(bad)
add
adc
clc
xchg
rcr
push
jae
cmp
ins
adc
mov
sub
mov
cmps
sub
pop
add
mov
mov
fsubp
jae
mov
push
jmp
jno
push
sbb
xchg
bound
paddd
mov
xchg
push
mov
push
out
xchg
fld
pop
mov
cld
cmc
sbb
clc
retf
sub
lahf
push
mov
jg
shl
jle
pop
fisttp
mov
test
and
xchg
ins
out
mov
daa
pushf
mov
repz
sub
jle
inc
push
dec
loope
sti
push
addr16
dec
loopne
shl
rcr
pop
ins
push
inc
xor
sbb
cmc
imul
stos
add
inc
inc
adc
sbb
push
xchg
cmp
mov
js
je
fwait
mov
sbb
push
aaa
movups
outs
addr16
mov
inc
inc
xor
imul
push
mov
xor
push
fimul
cdq
ja
pop
inc
pop
pop
test
lods
leave
movs
xchg
neg
ret
push
(bad)
test
mov
dec
add
je
stc
jmp
into
cmp
add
or
pmaxub
inc
mov
(bad)
sti
jno
sti
adc
jmp
mov
pop
mov
add
jg
sub
aad
lahf
rcl
call
cs
dec
push
retf
mov
fdivr
xor
mov
ja
addr16
mov
inc
xor
sar
test
scas
test
xor
mov
fist
aaa
pop
repz
xchg
iret
ffreep
pop
inc
inc
pop
push
rcl
daa
and
sub
xchg
dec
ja
mov
(bad)
lahf
inc
lahf
(bad)
fs
out
call
leave
ss
fild
mov
cmp
mov
out
rol
scas
inc
mov
pop
push
icebp
push
std
scas
mov
daa
sbb
enter
mov
mov
sub
dec
cwde
and
ret
dec
ds
shr
sub
add
std
test
cmps
dec
mov
in
xchg
ret
sar
lds
sbb
into
push
je
loope
jo
dec
and
call
pop
fs
stos
ss
adc
mov
movs
gs
scas
rcl
xchg
jp
stos
adc
and
je
and
lahf
fs
pop
dec
xchg
push
aas
test
xchg
xor
shl
jecxz
jnp
ficom
es
push
cmp
rcr
lock
adc
sbb
(bad)
nop
sahf
jge
or
ds
sbb
adc
pop
sub
xchg
jnp
xchg
leave
and
pop
in
(bad)
mov
jp
jne
iret
jb
pop
dec
retf
aam
retf
idiv
dec
cld
mov
jmp
pop
mov
cs
idiv
fstp
pop
adc
cli
cmp
push
xchg
jbe
dec
shr
fstp
or
lods
in
lea
mov
push
cmp
jg
adc
dec
mov
pop
retf
aad
repnz
pop
cmp
pop
xor
inc
(bad)
jge
cs
pop
cmps
mov
test
out
mul
fwait
cmp
les
sar
mov
call
mov
in
and
aas
das
lods
dec
jmp
pushf
cmp
clc
cmp
adc
aad
fnsave
jae
jns
jp
mov
mov
push
daa
scas
sbb
jnp
mov
std
ja
jge
xor
and
lods
xor
loopne
mov
mov
iret
(bad)
out
outs
scas
(bad)
fiadd
scas
push
push
(bad)
or
inc
xchg
mov
push
add
outs
push
loope
jge
cmp
mov
leave
rcl
inc
xor
lds
fcmove
cmc
pop
cmp
leave
fmul
push
out
gs
mov
or
xor
outs
sahf
push
ds
repz
aas
ror
inc
fimul
sub
hlt
xchg
loop
adc
scas
push
dec
sti
ss
loope
or
addr16
pushf
adc
pop
jge
hlt
lahf
inc
jmp
rol
and
inc
scas
bnd
push
push
mov
arpl
sbb
mov
pop
out
aas
sar
adc
mov
pop
ja
fs
sar
mov
pushf
scas
retf
clc
(bad)
push
addr16
test
fcmovnbe
test
fdivr
popf
adc
cwde
in
cmps
mov
xor
cmp
leave
clc
xor
in
movs
sub
(bad)
in
outs
inc
popf
mov
sti
xor
xchg
dec
dec
push
cmp
test
mov
mov
or
push
cmps
repnz
push
stos
sub
retf
jae
xchg
adc
add
or
stc
jecxz
sub
xlat
cmovns
loope
fidivr
lfs
push
jne
ds
fst
fsub
pop
pop
inc
xor
in
or
jns
mov
dec
add
cmp
mov
push
rcl
xlat
pop
and
popa
nop
mov
mov
ror
push
xchg
mov
ss
mov
mov
and
and
push
mov
xchg
adc
iret
jmp
popa
mov
pusha
mov
add
jge
daa
fiadd
retf
and
dec
cmps
dec
xchg
mov
scas
mov
adc
push
pop
movs
cmp
cmp
push
push
ret
(bad)
mov
retf
ficom
(bad)
pop
inc
sbb
mov
(bad)
push
popf
inc
enter
mov
and
inc
stos
(bad)
cli
fwait
in
pop
loope
cmp
stos
xchg
and
xchg
(bad)
daa
mov
xor
es
movs
retf
and
aaa
movs
jl
cmp
or
test
sub
mov
call
loope
into
repz
jmp
int
vmovaps
or
cmps
mov
aaa
adc
in
call
sbb
dec
xchg
inc
inc
add
adc
test
lfs
pop
jns
mov
outs
sbb
pushf
sub
sub
repnz
jae
stos
imul
stos
cmp
jns
push
mov
xlat
sbb
or
add
sub
xchg
retf
in
aad
imul
pop
push
push
dec
xchg
out
sbb
push
mov
pop
(bad)
sub
mov
pop
xor
pop
adc
push
(bad)
dec
cmp
ror
test
pop
dec
dec
add
sub
jbe
adc
adc
pop
and
std
imul
not
inc
popf
mov
aaa
out
rcr
mov
push
push
stos
(bad)
or
nop
mov
lahf
mov
sub
nop
jne
stos
(bad)
ret
cld
inc
movs
pop
sub
push
(bad)
addps
test
ins
pop
sub
and
in
push
mov
mov
pop
es
shr
fcmovnbe
adc
mov
sub
or
stos
adc
add
jl
inc
fwait
xchg
mov
rcr
mov
mov
pop
pop
or
xor
xor
outs
xchg
jecxz
jp
fucomi
xor
jmp
jle
fsub
(bad)
push
sbb
cs
int
pop
push
loopne
jo
call
inc
adc
fsubr
es
(bad)
outs
icebp
cs
cmp
inc
inc
leave
xlat
sub
xchg
xchg
enter
mov
jbe
cmp
rcl
sbb
pop
mov
les
cmp
mov
aad
jns
jl
jge
adc
pop
ins
jae
enter
test
(bad)
(bad)
ja
xchg
scas
jo
inc
ss
int
(bad)
push
adc
push
test
lods
xchg
(bad)
(bad)
aaa
(bad)
out
ss
jb
call
mov
xor
(bad)
and
mov
cld
fisttp
retf
adc
jae
aas
je
xchg
gs
mov
(bad)
push
fistp
xchg
fild
movs
lods
lods
sar
add
mov
mov
dec
inc
fisubr
faddp
repnz
inc
or
cmp
ret
ins
xlat
jmp
xchg
and
repnz
jg
xchg
xchg
push
push
inc
or
inc
push
xchg
std
jb
xchg
sub
fnsave
out
outs
mov
ds
and
sub
and
fdivr
adc
push
xchg
ds
ret
shr
inc
xchg
mov
mov
push
(bad)
push
inc
jnp
cmc
push
jno
cld
xchg
lods
test
je
fsubr
mov
outs
push
jmp
mov
imul
aaa
inc
dec
mov
push
jge
out
xchg
fst
jbe
xor
xchg
jg
loopne
mov
inc
movs
out
popa
loop
sbb
xchg
mov
stos
push
popf
test
loopne
sub
(bad)
mov
cmp
stos
cmc
adc
les
lds
mov
pop
call
mov
popf
lds
sbb
and
(bad)
bound
jl
cmp
fst
les
mov
or
xor
push
or
sbb
addr16
test
repz
or
fsubr
leave
fisttp
xor
out
mov
ds
hlt
xchg
lock
pextrw
pop
sub
push
mov
fidivr
push
stc
cmp
mov
repnz
imul
loope
and
popf
mov
jbe
in
jbe
pop
lea
sub
sbb
mov
sub
dec
js
fiadd
jb
cwde
mov
push
ret
(bad)
mov
sub
adc
paddsw
add
cwde
xchg
jno
mov
jmp
adc
ins
jecxz
int3
mov
mov
stos
inc
les
loop
or
in
(bad)
xchg
aad
outs
scas
dec
and
test
push
shl
repnz
shl
mul
xchg
and
mov
sub
jg
mov
ja
outs
push
cmp
mov
in
xchg
or
jmp
sub
jl
push
jnp
setno
call
mov
inc
popf
pop
or
popa
and
stos
cmps
inc
push
jbe
jb
sahf
repz
dec
xor
in
dec
xor
clc
pushf
ret
in
out
pop
test
push
inc
cmps
xchg
scas
or
pop
lds
pop
or
jb
and
add
fcomi
(bad)
js
push
imul
out
jne
out
adc
arpl
shl
jmp
outs
inc
ins
jo
and
or
push
push
inc
cmp
inc
push
in
fild
jmp
jge
add
shl
test
(bad)
lock
in
cmp
arpl
xchg
shl
jle
test
out
sti
xchg
in
stos
das
sar
fldcw
sub
jne
shr
mov
lods
clc
ds
scas
xor
cli
add
clc
and
push
dec
jp
mov
fcomp
jae
sbb
pop
loope
stos
test
shl
xor
sbb
mov
inc
sbb
fiadd
(bad)
adc
inc
or
scas
cli
repz
xor
comiss
cld
in
outs
cmp
dec
ss
xor
and
ret
pop
jbe
sub
xor
sub
push
js
daa
hlt
push
fisub
jne
sub
int
and
dec
clc
dec
daa
xchg
fild
adc
scas
ret
adc
jmp
(bad)
ret
mov
(bad)
mov
nop
add
inc
les
aad
cli
push
stc
ror
aas
test
dec
fwait
or
xor
rcl
add
xlat
cs
fistp
out
lock
ret
mov
leave
mov
dec
mov
aam
push
addr16
bound
ror
je
cmp
into
outs
jnp
sti
or
ficom
jo
lds
cwde
jne
xchg
je
inc
loopne
inc
xor
gs
popa
jno
in
pop
xor
repz
jae
mov
adc
jns
xchg
sbb
sub
pop
xchg
push
jne
shr
and
sbb
sub
xor
sbb
loopne
pop
cmps
sahf
cmp
out
test
add
mov
sbb
xchg
inc
pop
sub
dec
xchg
ins
pop
push
jmp
pushf
bound
lods
dec
jl
adc
in
cmp
xor
mov
pop
xor
cmp
mov
sbb
jb
and
or
das
rcr
pop
mov
sub
add
lods
mov
ins
xchg
in
fcom
dec
push
pop
in
(bad)
stos
movs
loop
popa
or
cmp
jne
loope
inc
adc
xor
rcl
popa
cmc
enter
and
pop
sahf
pop
pminub
mov
fwait
iret
mov
xor
ins
sub
pop
ror
rcl
adc
xor
push
or
or
pusha
std
jne
push
jo
in
aaa
or
aam
stos
xchg
jmp
cmp
mov
xchg
loope
bound
and
fdivrp
mov
inc
fucomip
mov
shl
pop
push
sbb
inc
adc
xor
fcmovb
and
jmp
dec
data16
cli
test
(bad)
jecxz
inc
mov
retf
push
rol
pop
add
sbb
jo
rcr
lods
out
push
push
(bad)
loop
xor
inc
retf
mov
or
retf
sbb
mov
add
cmp
mov
pop
loopne
cmc
mov
adc
bound
inc
mov
push
mov
push
dec
adc
mov
fmul
jecxz
cmp
popw
repz
shr
(bad)
cmc
or
arpl
ss
jmp
add
mov
jp
push
call
setp
sub
jne
outs
push
or
js
jbe
and
inc
(bad)
dec
(bad)
lods
les
adc
fild
hlt
push
cwde
xchg
imul
call
and
adc
int
xchg
pop
jnp
mov
mov
sub
sub
jmp
dec
cdq
push
jns
repz
sub
xchg
pop
fs
retf
jl
retf
daa
jl
(bad)
fild
jg
movs
aas
jmp
cli
jo
iret
hlt
xchg
xchg
jmp
(bad)
(bad)
out
call
sbb
inc
jp
arpl
jne
xor
sub
sbb
cmp
add
sti
int
cmp
push
jecxz
pop
sub
add
jle
inc
cmps
lock
lahf
cmps
adc
pop
arpl
cmp
or
(bad)
scas
mov
add
mov
dec
jg
jge
mov
jp
fiadd
mov
xor
jmp
scas
popa
out
pop
je
lahf
xor
sbb
pushf
xchg
add
and
sub
mov
mov
mov
xlat
push
jns
adc
js
sbb
imul
xor
add
ror
push
cmp
sbb
outs
sti
sbb
fs
lea
xor
dec
jo
jge
stos
jbe
ret
outs
jmp
or
xchg
adc
out
data16
mov
inc
fs
bound
cmp
test
sbb
jae
mov
int
dec
sahf
pop
cmps
ins
xor
mov
idiv
inc
sbb
shl
mov
ret
mov
dec
jle
ficom
mov
popf
not
mov
and
mov
dec
sbb
pop
cmp
pop
and
in
lea
mov
inc
or
cmp
lea
sbb
dec
dec
mov
add
adc
dec
pop
fimul
dec
std
push
push
and
jno
sub
inc
sbb
xchg
aas
xor
scas
sub
je
ins
loop
pop
sbb
lds
jmp
daa
std
nop
(bad)
loopne
(bad)
iret
jl
sbb
imul
nop
out
jbe
pop
sbb
push
xor
ins
ret
fwait
ds
sub
ja
js
push
mov
imul
xor
pusha
mov
dec
icebp
cmp
rol
int3
inc
ss
cmp
data16
scas
xchg
xchg
and
lahf
jns
xor
call
push
stos
pop
mov
arpl
mov
cmps
inc
cmp
sub
cmp
out
jmp
push
je
mov
jmp
inc
cmp
inc
lods
loope
xchg
(bad)
dec
lods
push
mov
jl
pop
addr16
jo
jle
mov
jmp
jmp
or
lahf
push
outs
xor
fs
icebp
fnstsw
mov
jns
add
loop
sbb
or
adc
cdq
inc
movs
lahf
adc
push
and
pushf
jl
stos
cmc
pop
or
adc
xchg
daa
retf
es
jl
(bad)
lock
inc
mov
jbe
sbb
out
jnp
jns
fcomp
xor
pop
jle
fidivr
mov
add
jp
mov
aaa
mov
cmps
xchg
xchg
adc
fucomi
mov
cmp
mov
pop
inc
int
pop
add
pop
push
leave
xchg
test
jmp
ret
inc
sbb
(bad)
jbe
pop
mov
shl
mov
add
mov
xor
inc
popa
and
pop
mov
cwde
adc
jl
add
cdq
jl
ficom
call
xchg
push
rol
arpl
iret
cmp
xchg
add
stc
xchg
add
aam
imul
push
(bad)
sub
cdq
jle
adc
jp
retf
mov
lods
mov
out
jns
push
and
jae
hlt
push
push
(bad)
cmp
adc
movs
push
popa
or
mov
push
cmp
lock
jae
push
jl
jae
push
jns
mov
mov
mov
popf
popa
jns
shl
dec
fs
ss
clc
dec
call
adc
mov
stos
inc
in
xchg
jle
jl
and
xchg
repnz
std
in
inc
inc
ret
ror
arpl
pop
and
cli
hlt
xchg
jmp
add
mov
jae
aas
or
popa
jl
daa
ds
loopne
pop
enter
xor
mov
arpl
add
mov
jo
out
outs
push
aam
jns
fbstp
int3
jb
sbb
adc
pop
hlt
mov
(bad)
fucomip
out
int3
sbb
in
inc
fcomp
jnp
pop
sub
pop
push
nop
sub
scas
les
mov
xor
mov
mov
shl
hlt
and
out
cmp
in
add
jle
out
mov
call
jecxz
dec
enter
or
das
push
aam
dec
popf
push
aaa
pop
fdivr
sub
dec
adc
sbb
mov
stc
add
jae
ror
dec
fidivr
lock
nop
in
cs
pcmpeqw
and
inc
sub
sbb
fst
xchg
repnz
loope
mov
outs
jmp
cmp
push
cmp
jecxz
addr16
cmp
aad
popf
push
mov
sbb
cdq
sbb
lods
ins
jae
ins
pop
xor
sub
xchg
xor
sub
aam
js
xor
pushf
jo
jmp
mov
jmp
pop
jmp
retf
or
popa
stos
sbb
mov
mov
cmp
push
lods
inc
mov
sbb
mov
push
mov
fxch
dec
pop
jmp
(bad)
sub
lock
pop
cwde
sub
dec
retf
mov
and
push
in
and
aam
je
out
dec
add
add
cmps
xlat
jnp
cmps
jle
arpl
test
inc
std
or
xchg
mov
dec
ficomp
dec
mov
pop
in
retf
cmc
aam
icebp
arpl
dec
mov
jmp
test
fadd
test
ja
sbb
iret
or
mov
jne
xchg
inc
scas
inc
lock
cmp
inc
jno
and
lahf
add
clc
inc
push
sbb
pop
cmp
scas
pop
push
lods
push
push
lock
stc
stos
(bad)
repnz
(bad)
out
push
cmps
add
sti
test
loopne
add
or
mov
mov
jge
mul
aas
inc
out
inc
sbb
in
out
dec
jne
lea
jae
cmp
std
pop
lahf
cmps
sub
adc
sub
aaa
pop
aad
mov
hlt
sahf
je
popa
pop
add
jecxz
icebp
xor
ret
imul
dec
dec
cmp
xor
int
add
lods
pop
pusha
and
pop
mov
sub
sub
mov
stos
imul
dec
ret
jl
imul
sar
push
ror
cld
push
repnz
sahf
call
or
add
pop
inc
loopne
add
xchg
mov
cmps
jns
cwde
aad
retf
add
mov
inc
and
int
lds
cwde
xchg
fld
dec
pop
pop
sbb
mov
fld
outs
scas
inc
ja
sbb
mov
sahf
leave
cmp
cmp
push
aad
adc
aad
cmc
lahf
data16
adc
mov
icebp
add
pop
dec
push
mov
ins
lods
and
test
int
fimul
std
xchg
mov
add
adc
test
out
pop
xor
std
mov
sub
or
jbe
arpl
cmp
or
inc
push
aaa
rcl
loope
adc
sub
adc
addr16
pop
add
inc
nop/reserved
call
or
push
inc
lahf
cmovbe
data16
sar
in
jb
sub
ror
adc
xor
lods
jb
imul
mov
loopne
(bad)
loopne
mul
repnz
push
je
clc
sbb
mov
dec
inc
rol
or
fbstp
repnz
rol
xchg
movs
push
shl
lods
push
mov
jo
scas
ret
mov
movs
pop
xchg
fwait
adc
xor
xor
xor
cwde
sbb
outs
in
dec
into
sub
and
push
loop
nop
sub
inc
jmp
outs
push
clc
out
jmp
js
cmp
mov
ins
add
leave
popf
cmp
xchg
enter
out
jge
xor
mov
ret
jmp
jmp
adc
ins
cmp
std
mov
retf
mov
(bad)
cmp
dec
nop
xlat
or
sub
xor
xor
inc
std
enter
out
cmp
jmp
dec
mov
ficom
scas
pusha
inc
cmc
rcl
ror
mov
stos
jmp
rol
jge
xchg
aad
mov
inc
leave
xchg
sbb
mov
cmp
fisub
jg
pop
(bad)
xor
push
(bad)
not
lea
test
rol
push
xor
push
lahf
in
cmp
jbe
mov
cmp
and
(bad)
dec
push
push
dec
sub
jmp
fucomp
in
daa
aad
mov
sub
ror
sbb
pop
xor
int
inc
and
outs
inc
leave
test
dec
or
inc
jmp
lds
cmp
dec
mov
in
cmps
int3
mov
push
mov
jns
push
mov
add
mov
in
loope
lods
inc
mov
add
(bad)
repz
test
scas
scas
sub
mov
int3
pop
test
cmp
xchg
push
gs
(bad)
scas
ins
pop
sbb
jmp
daa
pop
movs
mov
das
mov
add
les
cmp
dec
ret
xchg
push
cmp
jbe
rcl
jmp
clc
cmp
xchg
imul
add
jge
cmp
jmp
xchg
imul
repz
mov
in
fmul
sbb
stc
fcomp
sbb
xchg
xor
mov
and
inc
pop
jmp
xchg
(bad)
leave
xchg
cmp
movs
addr16
sub
mov
xchg
xchg
in
pushf
mov
arpl
arpl
lods
xchg
add
xchg
adc
and
ret
dec
push
push
fidivr
ins
fldenv
cmps
shl
cmps
jmp
rol
ret
ret
jge
sbb
lea
bound
and
jnp
jge
out
jge
sbb
mov
mov
test
cld
adc
ret
add
xlat
imul
mov
fild
scas
mov
(bad)
inc
(bad)
aam
call
cmps
xlat
in
fs
bound
mov
sbb
mov
jge
sbb
(bad)
mov
ror
xchg
inc
loopne
aam
sub
jmp
inc
xor
mov
adc
aaa
ret
and
stos
hlt
xchg
inc
leave
scas
fs
lods
push
add
push
test
xchg
jns
xor
hlt
pop
push
int3
std
or
xchg
repz
xchg
lock
loopne
fidivr
dec
scas
mov
(bad)
out
out
or
icebp
mov
mov
stos
cmp
in
arpl
loope
les
push
jnp
dec
adc
xchg
xor
inc
add
ja
sbb
fisub
sbb
pop
dec
push
inc
sub
push
jbe
imul
std
in
loop
jp
xchg
int3
pushf
pop
iret
mul
inc
lods
fistp
(bad)
mov
mov
mov
pop
sub
inc
cmp
mov
loopne
in
inc
lock
add
adc
mov
push
aas
xor
mov
xor
je
in
inc
js
sub
jle
(bad)
fist
test
les
xchg
hlt
xor
pushf
adc
ja
bound
jns
fst
in
push
mov
mov
cmp
clc
jecxz
dec
test
add
sar
sub
xchg
push
mov
pop
sbb
jnp
mov
pushf
les
sbb
sbb
adc
fwait
mov
setb
jle
cmp
icebp
jmp
test
into
(bad)
fcom
fst
div
push
stc
jp
mov
or
outs
outs
sbb
pushf
(bad)
leave
and
rcl
mov
shl
mov
cmp
out
jns
rol
ret
pop
push
sbb
add
adc
jmp
cmp
and
aam
mov
push
cbw
push
mov
mov
lahf
xchg
not
fidivr
shr
imul
inc
rcl
pop
and
push
push
or
mov
and
mov
scas
rcr
sub
mov
imul
sar
arpl
xchg
inc
fcmovnb
push
jno
add
scas
int3
hlt
std
in
test
inc
mov
scas
sbb
ins
psubusb
pop
dec
ret
sbb
xor
fadd
dec
cwde
rcr
pop
mov
or
lods
pop
into
cmp
ja
iret
dec
mov
xor
dec
mov
outs
push
jmp
aam
jp
mov
out
int
jg
bound
in
lock
mov
sub
dec
or
dec
and
aad
sub
adc
sub
push
dec
ja
xor
dec
movs
fwait
popf
int3
xor
mov
inc
and
sub
add
and
sub
and
sub
xchg
data16
push
bound
cdq
loope
lock
inc
test
pushf
ret
add
fcmove
adc
inc
call
push
mov
repz
adc
mov
cmps
aas
neg
pop
push
pushf
ficom
sub
outs
sti
jb
out
gs
and
es
lock
aas
pop
hlt
sub
mov
pop
mov
out
or
sub
outs
jle
ss
in
nop
test
sub
cmp
repz
fld
dec
xchg
push
cli
cmps
inc
popa
and
fistp
clc
(bad)
push
mov
push
es
sbb
mov
imul
or
lock
dec
movs
mov
sar
js
cli
fidivr
add
data16
adc
push
cmp
push
lahf
shl
ror
inc
dec
push
(bad)
rcl
shr
iret
adc
inc
or
jne
sbb
xor
inc
jmp
jno
adc
mov
push
es
xor
mov
out
out
scas
mov
int
pop
cld
icebp
fstp
(bad)
int
cmp
pop
aam
retf
mov
hlt
out
(bad)
popa
inc
jle
dec
(bad)
nop
out
or
es
out
ins
inc
mov
push
and
sub
jae
popf
pop
fsubp
jne
retf
inc
sbb
pop
mov
xchg
(bad)
sub
adc
push
push
xor
push
repz
or
(bad)
retf
mov
mov
test
and
mov
xor
aas
mov
pop
jne
cs
inc
aas
inc
adc
gs
jb
sub
add
jmp
mov
sbb
movs
mov
pop
shr
cmp
cmp
cmps
jns
jnp
and
out
mov
das
sbb
mov
loop
lahf
in
fdivr
int
call
xchg
sub
adc
imul
aad
xchg
push
mov
rcr
mov
pop
cmp
ffreep
(bad)
ja
mov
pop
mov
jle
in
mov
std
dec
data16
add
das
dec
or
jo
(bad)
jo
sbb
gs
test
sbb
jae
(bad)
leave
sub
(bad)
pop
add
push
cmp
or
cmp
jecxz
dec
in
cmps
test
push
xor
and
jmp
jg
(bad)
and
scas
cmps
daa
jne
push
and
les
icebp
jecxz
inc
xchg
retf
xor
icebp
pop
cwde
test
cld
adc
add
pop
jnp
dec
push
cmp
call
fcmovu
sub
mov
pop
leave
call
mov
push
pop
xchg
icebp
pop
out
cmp
push
ret
(bad)
inc
sti
sub
add
xor
les
lds
or
fcom
(bad)
lds
jnp
sbb
test
pusha
cmp
sub
adc
bound
aam
pop
mov
rcr
cmps
mov
in
repnz
jmp
pop
outs
pop
fist
add
sbb
dec
repz
jno
into
lods
shr
add
cmp
push
pop
es
mov
jl
lods
jp
cmp
sbb
out
mov
cmp
outs
adc
test
cmp
ss
dec
mov
jbe
arpl
xchg
in
int
sbb
sbb
inc
movs
adc
imul
sbb
bnd
jb
out
(bad)
jle
xor
js
pop
xchg
and
movs
push
test
fiadd
ins
outs
repnz
int
jb
mov
mov
int
stos
lods
push
adc
push
sti
jbe
(bad)
pop
sti
xchg
imul
sbb
iret
jge
(bad)
mul
mov
add
cmps
stos
fidiv
ss
fldcw
shl
cmps
loop
and
sahf
movs
mov
xor
out
fpatan
mov
inc
pop
xchg
xor
scas
mov
fyl2xp1
hlt
mov
or
push
or
inc
ins
or
les
icebp
mov
xchg
jb
cmp
cmp
lods
popf
call
test
loop
retf
fbld
int
push
sbb
push
cmp
les
sbb
pop
sub
or
imul
sbb
ins
popa
add
sub
jb
push
arpl
ins
adc
mov
stc
mov
ss
int3
das
mov
sbb
mov
jne
ffreep
lods
add
lds
jb
mov
iret
daa
ret
cdq
cmp
ret
dec
test
sbb
aaa
ret
sti
xlat
lds
les
stc
out
fidivr
mov
mov
add
stc
mov
fcom
add
cmp
ficomp
lea
imul
add
mov
mov
xor
ror
cs
or
lea
or
push
jbe
xor
xor
push
jmp
loopne
xchg
adc
cld
test
test
inc
cs
mov
lds
fwait
xchg
add
dec
outs
mul
sbb
movs
push
cwde
pop
cdq
cmp
and
dec
push
scas
sub
mov
fcmove
test
xor
jbe
sub
jmp
jnp
and
mov
js
cwde
ins
popf
hlt
imul
nop
sub
sub
(bad)
test
jmp
idiv
test
ror
push
xchg
adc
push
sub
(bad)
push
xchg
dec
out
hlt
int3
add
enter
sub
inc
cs
jae
out
cmovbe
sub
push
idiv
jecxz
es
pop
push
nop
bound
scas
mov
jle
lods
mov
sub
in
adc
and
ror
lds
mov
ror
sbb
fwait
sbb
arpl
gs
inc
inc
repnz
idiv
jae
mov
mov
fistp
push
mov
ins
int
mov
push
popa
loop
fdivr
retf
jo
pop
inc
inc
xor
lahf
fiadd
xlat
inc
mov
inc
icebp
fimul
inc
retf
pop
jae
add
sub
sahf
call
add
lahf
xor
lods
inc
pop
jecxz
imul
pushf
loopne
fild
or
clc
mov
jbe
data16
xchg
fsubr
push
dec
cwde
push
test
xchg
jmp
pop
adc
jle
inc
xor
aas
xchg
dec
xchg
(bad)
shl
lods
out
sub
lea
mov
jmp
cmps
xor
cdq
lahf
push
shl
test
lods
rol
jge
bound
clc
xor
stos
lods
gs
outs
or
hlt
pop
or
sub
inc
mov
mov
mov
adc
cmps
inc
(bad)
mov
add
pop
loop
pusha
cli
jg
shl
xor
cld
add
push
mov
cmp
mov
push
xchg
fld
push
sub
jg
xor
cld
mov
sahf
pop
pop
inc
(bad)
in
inc
ja
popa
xchg
mov
sbb
xchg
jl
adc
mov
xchg
loopne
inc
cmp
mov
jno
cmp
outs
ins
sub
xchg
rcl
or
and
mov
jae
das
sbb
xchg
fcom
outs
call
add
dec
sub
repz
popa
lea
retf
push
xor
add
push
dec
movs
dec
std
cmp
stc
in
sar
pop
sbb
js
test
cmps
mov
jnp
mov
out
adc
in
sbb
xchg
adc
lods
out
iret
stc
cs
push
(bad)
push
sub
(bad)
cmp
xchg
int3
outs
push
fld
cs
push
popa
loope
pop
jmp
outs
mov
pop
lock
xchg
imul
ds
sub
jae
inc
cmps
int3
dec
aaa
out
dec
mov
lods
rol
mov
outs
push
xor
call
(bad)
cmc
fs
add
pop
movs
stos
std
push
js
sbb
cmp
int3
imul
repnz
and
or
out
gs
repz
es
pop
inc
mov
repnz
ds
jmp
fadd
lea
add
inc
jge
out
or
fidiv
add
fcom
dec
inc
repz
repnz
xor
lods
mov
int3
push
push
jmp
(bad)
adc
arpl
lods
into
xor
jnp
cmps
and
lods
add
adc
mov
pop
push
aad
pop
jl
push
mov
repnz
cwde
pop
pop
shr
cmp
mov
loop
shl
dec
sbb
mov
fmul
inc
stc
push
adc
in
iret
xor
and
loopne
dec
test
test
(bad)
sub
xchg
shl
imul
xchg
out
ds
pop
push
outs
and
dec
sbb
add
sbb
pop
ror
fst
icebp
pop
push
iret
inc
dec
dec
addr16
ins
or
je
repnz
jecxz
and
iret
test
cmp
mov
jo
(bad)
in
push
imul
adc
cmps
jmp
xor
movs
sub
(bad)
push
fimul
sbb
jle
aam
into
push
xor
call
cwde
sub
leave
into
or
pop
jno
loopne
dec
scas
dec
push
adc
je
xchg
mov
pop
sub
ins
pop
into
punpckhbw
and
mov
adc
into
dec
mov
xchg
lods
outs
fadd
xchg
xchg
pusha
in
rcr
jnp
sub
test
dec
rcr
adc
fwait
cmps
call
sub
test
and
push
fs
outs
or
cvttps2pi
test
icebp
and
and
jge
jmp
rol
imul
sub
xchg
cmp
jb
fiadd
(bad)
jbe
xor
mov
jbe
pop
jmp
fldenv
lds
lods
icebp
aas
xor
adc
dec
jp
movs
outs
outs
sti
xchg
mov
clc
xchg
jmp
push
sahf
in
cmp
nop
(bad)
mov
(bad)
in
cmp
push
sar
int
bound
rol
mov
out
mov
sub
inc
or
shr
punpckhdq
pop
jmp
xchg
jmp
sub
lea
jle
push
stos
loope
mov
int
dec
cmp
imul
xchg
or
sti
pop
bound
jmp
cld
xchg
ror
cli
call
mov
push
cdq
aas
cmps
(bad)
out
lods
cld
mov
sub
adc
in
mov
add
mov
adc
lea
jmp
jbe
mov
lock
fdiv
adc
mov
adc
xchg
movs
gs
dec
cmp
pop
jnp
ror
jae
push
shl
mov
aad
aam
lahf
jmp
adc
mov
cmc
or
adc
xlat
lds
aam
call
movs
xchg
lea
mov
fwait
inc
pop
popa
icebp
dec
icebp
and
xor
lods
sbb
repnz
mov
std
push
les
mov
mov
fs
fidiv
pop
sahf
test
ins
loopne
int3
adc
inc
pop
xchg
dec
sti
cmc
pop
and
cs
movs
bound
adc
cdq
cli
xor
ins
in
sahf
add
cmp
xchg
cmp
dec
add
or
ins
popa
pop
sub
fst
fxch
nop
inc
cmp
inc
pop
inc
fdiv
add
xor
mov
push
out
js
and
fistp
xor
jno
xchg
push
add
inc
gs
fcmovnu
xchg
imul
cmp
xchg
addr16
or
cmp
loopne
xlat
jmp
in
cmp
mov
iret
test
mov
lods
ret
dec
mov
lea
sub
mov
ror
push
clc
or
mov
adc
mov
push
inc
int3
in
ds
sub
add
aad
cmp
xor
call
inc
(bad)
and
fs
pop
shr
xchg
adc
mov
ss
ins
adc
sub
movs
push
push
or
repz
imul
cmp
cmp
js
std
repz
repnz
(bad)
adc
out
shl
lds
mov
arpl
lods
hlt
cmp
movs
mov
movs
movs
or
mov
add
mov
scas
push
scas
mov
cmp
mov
jo
ret
dec
(bad)
lods
and
std
pop
adc
shr
dec
ffree
and
pop
push
test
fadd
xchg
add
ins
push
out
cmps
ds
int3
das
xchg
cld
out
pop
and
loopne
sar
fcom
lods
inc
js
daa
(bad)
loopne
jne
bound
ins
xchg
push
cs
je
pop
pop
cwde
sar
jo
inc
ret
fdiv
mov
dec
sub
fcmovne
xchg
rcl
jg
pop
clc
dec
add
mov
test
adc
leave
frstor
push
push
dec
xchg
test
sub
cli
push
fisub
xchg
sub
inc
adc
imul
paddq
icebp
jge
fnstcw
icebp
cmp
mov
jb
xchg
test
xchg
mov
push
or
xchg
stc
push
and
adc
jmp
xlat
lods
out
out
sbb
push
jns
mov
xor
cmp
test
sub
sub
gs
popf
mov
mov
add
push
cmp
xchg
or
das
inc
cmp
in
cdq
xor
push
movzx
adc
fs
mov
pop
cmps
pop
aaa
cs
dec
enter
adc
dec
mov
mov
fist
push
leave
(bad)
jae
or
dec
(bad)
push
xor
adc
js
inc
dec
cld
inc
sti
repnz
or
add
dec
pop
inc
xchg
dec
call
adc
icebp
cmps
mov
retf
jecxz
and
inc
mov
das
and
ret
sub
jb
fwait
and
xchg
ja
mov
inc
and
xchg
in
adc
push
fsub
xchg
xor
xchg
adc
mov
retf
xor
sub
mov
dec
pop
nop
cwde
(bad)
cld
adc
sahf
inc
mov
into
jl
adc
add
jbe
or
sub
cwde
add
jb
into
movs
sub
(bad)
sbb
icebp
mov
push
outs
loop
mov
cdq
hlt
rol
xchg
inc
push
push
jmp
jp
xchg
jl
fbstp
aam
das
mov
popa
mov
push
pop
xchg
test
and
test
sub
mov
mov
inc
std
inc
jno
and
call
and
div
or
xor
mov
add
loope
and
jno
add
or
inc
dec
lds
jbe
cmp
out
xor
push
push
dec
push
jmp
rol
push
pop
push
bound
(bad)
dec
mul
xchg
dec
call
fimul
xchg
in
in
ds
mov
add
pop
into
cmp
cs
ja
cmp
cwde
aas
out
xchg
pop
xor
xor
add
dec
sbb
add
inc
test
push
aaa
sub
pop
gs
lock
gs
fst
rcr
loopne
cwde
dec
clc
or
cmp
jns
or
add
enter
pop
cwde
push
add
in
cs
mov
data16
xchg
jne
xchg
sar
cdq
(bad)
dec
gs
sbb
xchg
loope
and
xchg
mov
sahf
pushf
test
mov
jne
inc
ja
pop
xor
inc
aaa
mov
inc
and
push
adc
pop
les
sbb
fnsave
pop
push
popf
outs
idiv
in
pop
add
mov
jae
dec
dec
sti
loope
and
sub
cmps
fcmovne
mov
nop
mov
adc
mov
ret
mov
sbb
mov
sbb
rcr
cmp
push
imul
loop
in
push
fstp
add
test
jnp
call
in
fnstsw
(bad)
stos
push
push
rcr
adc
mov
dec
sub
adc
out
or
call
xor
jl
aam
cdq
inc
ins
pop
rcl
bound
jecxz
and
(bad)
adc
call
jmp
neg
cmp
dec
test
pop
add
and
or
out
or
add
dec
xor
jge
in
call
(bad)
push
add
scas
fwait
dec
mov
xchg
je
dec
inc
push
ret
cmps
sub
faddp
ja
outs
sbb
imul
add
xchg
test
sub
mov
pop
outs
jge
pushf
adc
(bad)
and
push
js
ficomp
dec
mov
pushf
cmps
(bad)
xchg
pop
lods
pop
sbb
jns
dec
ret
inc
popa
daa
pop
fsubr
mov
jae
dec
rol
push
shl
cmps
gs
add
push
(bad)
adc
fsub
aad
cdq
repz
pop
es
movs
dec
es
outs
fstp
add
fiadd
adc
out
or
icebp
cmp
sub
mov
adc
inc
xchg
into
pop
cmp
push
scas
mov
push
sub
cwde
enter
xor
mov
mov
out
(bad)
cmp
mov
mov
in
fild
sbb
pop
and
repz
mov
inc
pop
scas
inc
mov
or
retf
push
jns
adc
mov
jge
into
xlat
out
jo
jne
sbb
in
(bad)
cmps
repnz
mov
push
cmc
and
and
ror
and
test
fdivr
int3
pop
movs
sbb
mov
mov
jns
xor
mov
cdq
mov
fs
adc
mov
cmp
cmp
jge
repnz
mov
retf
cmp
add
pop
push
mov
js
cmp
sbb
loopne
outs
add
inc
jo
jg
call
out
dec
out
add
mov
mov
push
nop
stc
jns
and
jl
and
and
pop
movs
and
es
pop
sbb
push
nop
push
xchg
add
shl
push
inc
bound
loopne
les
sub
mov
mov
(bad)
popa
les
mov
stos
fisubr
aas
movs
mov
mov
jmp
push
sub
std
and
cli
mov
call
xchg
xchg
adc
mov
jmp
jge
pop
ret
xor
and
popf
je
jmp
mov
aad
test
push
test
ret
retf
test
popa
inc
cmp
stc
dec
sub
push
inc
cmp
stos
or
pop
popa
xor
jne
xchg
push
rcl
ret
mov
(bad)
fistp
xchg
cli
pop
adc
std
xchg
add
and
sub
mov
xchg
enter
fcomp
bnd
adc
retf
sbb
pop
pusha
cmp
in
loop
lea
cmp
cdq
inc
push
inc
jp
std
push
imul
push
sbb
dec
pop
ss
sti
xlat
clc
outs
imul
iret
mov
retf
push
and
scas
lods
lods
mov
adc
and
add
(bad)
dec
sub
sub
inc
jbe
stc
cmps
test
outs
adc
jl
(bad)
mov
cld
or
gs
mov
jecxz
sbb
push
push
das
and
outs
shr
push
and
xor
jnp
cmp
stc
das
or
sub
sbb
in
cmps
retf
lods
add
add
mov
sub
call
xor
imul
adc
adc
sub
pusha
mov
js
pop
js
add
shr
dec
popa
cwde
and
jbe
hlt
(bad)
rcl
fadd
mov
sub
mov
das
add
xor
and
push
or
fdiv
mov
or
(bad)
repz
dec
mov
mov
jmp
in
inc
outs
lahf
rep
mov
dec
add
xor
xor
ficom
(bad)
in
push
aaa
aam
scas
jnp
dec
inc
xor
sub
mov
xchg
stc
(bad)
cmp
ret
inc
sahf
clc
jae
xor
sub
ror
xor
jae
cdq
(bad)
xlat
shl
(bad)
ss
popf
dec
push
and
into
xchg
ins
(bad)
and
mov
in
cmp
mov
test
aaa
mov
mov
add
sbb
imul
std
dec
jns
(bad)
mov
cwde
js
sub
aad
into
ins
inc
add
xor
adc
es
xor
fxtract
mov
(bad)
cmp
sub
ret
xchg
push
not
sbb
inc
lock
dec
popa
cmp
push
sbb
sar
push
lahf
mov
daa
fstp
mov
stos
hlt
inc
(bad)
repnz
(bad)
aam
dec
add
add
mov
mov
popf
jbe
or
sub
aad
mov
sbb
(bad)
in
inc
stos
mov
xchg
test
xlat
sbb
scas
jmp
push
mov
aad
iret
mov
and
xor
ficomp
rcr
or
test
mov
std
pop
loopne
fcmovb
(bad)
mov
xchg
pushf
adc
sar
int3
cwde
les
pop
aam
and
sar
xchg
cmp
fsub
lahf
dec
rcl
xor
(bad)
jne
cmps
sbb
lods
push
fist
lods
cmps
sub
xor
leave
inc
inc
sub
adc
aaa
push
xchg
xlat
jbe
mov
add
rol
pop
add
pushf
ins
push
add
and
xor
fsubr
pop
mov
imul
aad
out
hlt
jns
test
sbb
inc
stos
daa
lds
add
xchg
sar
pop
lods
or
adc
mov
mov
cwde
push
ror
add
add
sub
cmp
xchg
push
jmp
movs
dec
add
adc
aam
add
lock
xor
dec
fld
fwait
cwde
xor
loopne
jl
push
push
xor
adc
adc
add
sbb
dec
or
or
bound
mov
shl
sub
cli
test
or
mov
jo
inc
stos
sbb
add
scas
dec
mov
lds
add
call
test
xor
mov
jo
sbb
mov
sub
inc
cmps
sbb
bound
call
rcr
test
and
scas
(bad)
es
push
nop
retf
and
cmp
call
ret
stos
inc
sbb
pop
(bad)
shl
lea
and
fnstenv
repz
dec
pop
jecxz
pop
xor
dec
rep
leave
mov
inc
mov
std
in
inc
xlat
imul
and
sub
add
mov
daa
sub
es
inc
add
and
mov
in
aaa
sbb
jge
scas
out
adc
inc
xchg
mov
daa
and
out
jo
sub
pop
lahf
cmp
mov
mov
test
fs
idiv
mov
js
mov
je
div
cmp
gs
loopne
lods
clc
jl
leave
and
jecxz
(bad)
imul
repz
adc
scas
jne
jno
outs
push
lahf
or
inc
pop
test
cwde
loop
mov
fistp
inc
aaa
push
stos
js
xor
xor
(bad)
(bad)
mov
gs
repz
jae
and
mov
xor
add
mov
pop
pushf
call
dec
push
mov
scas
icebp
cmc
mov
std
mov
mov
in
push
imul
out
cmps
xchg
and
pop
fnstenv
aas
stos
dec
add
in
daa
jmp
pop
mov
dec
jecxz
inc
sub
jecxz
mov
ret
jbe
neg
cmp
and
test
loope
shl
enter
xchg
jb
dec
ret
js
sahf
and
jae
add
jb
sub
test
xor
push
sbb
in
pop
imul
push
dec
lock
jl
lahf
mov
in
mov
push
mov
mov
push
cmp
nop
and
and
sub
mov
pop
leave
sbb
fsub
test
inc
int
push
jmp
shr
or
jo
mov
xor
iret
out
xlat
cmp
scas
add
(bad)
jne
sti
add
in
ss
stc
pusha
xchg
test
dec
test
ja
ret
pop
ficomp
cwde
or
inc
or
cmp
cli
xchg
repz
add
dec
arpl
xchg
mov
push
pusha
mov
mov
into
ja
mov
mov
inc
sbb
mov
bnd
jnp
jp
stos
sbb
cli
xchg
add
dec
push
(bad)
cld
sahf
dec
lds
shr
inc
xchg
xor
(bad)
leave
pushf
jl
mov
adc
fild
jnp
adc
and
aaa
mov
cli
or
mov
cs
(bad)
in
scas
test
dec
loop
fbstp
loopne
add
jmp
mov
out
dec
and
movs
rcl
rcr
jmp
test
lock
repz
rol
pop
ja
shl
stos
xchg
sbb
das
ret
sbb
cdq
jmp
jb
pop
mov
loop
mov
imul
in
out
xchg
std
(bad)
dec
xlat
or
imul
mov
mov
mov
std
mov
push
outs
jo
enter
sahf
repz
add
hlt
in
jge
lock
cdq
mov
arpl
pop
mov
inc
test
sbb
mov
ret
adc
mov
jl
scas
jno
into
push
xchg
mov
push
add
mov
dec
sbb
mov
enter
sbb
xor
sbb
call
(bad)
or
xchg
dec
sbb
jg
repz
dec
in
ins
cmp
and
cwde
sbb
sbb
xor
enter
ins
pop
and
xor
into
leave
xchg
fsubr
imul
mov
aam
inc
and
inc
add
add
(bad)
enter
or
loop
loopne
push
ret
inc
std
xchg
in
sub
dec
or
mov
arpl
(bad)
cli
dec
pop
pop
repnz
xchg
into
adc
les
movd
sar
cli
sub
jmp
nop
cmp
movs
xor
(bad)
mov
mov
shl
pushf
xchg
pop
je
lods
ret
mov
pop
lods
sti
push
adc
and
and
push
lds
fwait
mov
jl
cmps
test
sub
mov
in
shl
adc
pop
fdivr
aam
aas
mov
mov
jns
rcr
jae
aaa
or
mov
dec
or
push
(bad)
test
xor
popa
pushf
jl
inc
xor
mov
(bad)
fnstcw
in
ins
mov
(bad)
fild
je
mov
cld
pop
pusha
inc
sar
popf
test
loopne
in
mov
inc
add
inc
gs
ss
jo
icebp
mov
std
nop
push
mov
je
pop
and
ficom
repz
stc
xor
dec
or
(bad)
xchg
test
inc
mov
std
adc
dec
lds
mov
cmp
repnz
std
xchg
dec
xlat
shl
call
jb
inc
inc
dec
daa
mov
call
pop
adc
mov
stos
mov
jl
jge
pusha
and
stos
(bad)
lods
push
int
and
test
bnd
mov
jae
enter
test
(bad)
fadd
pop
sbb
pop
retf
fsub
imul
xor
bound
or
push
cmp
and
aam
sub
inc
inc
or
into
leave
xor
inc
jl
inc
aas
or
xor
jg
inc
jnp
fsubr
sbb
adc
arpl
mov
pop
and
jne
xor
or
xchg
loope
pop
daa
xchg
or
mov
and
popa
sbb
mov
adc
test
mov
xor
iret
ss
hlt
xchg
push
hlt
shr
inc
pusha
jmp
xchg
std
scas
sub
push
aad
das
or
lock
mov
pmuludq
das
popa
cli
jmp
push
shl
out
mov
lea
pop
mov
mov
aas
mov
mov
gs
fldcw
fistp
aaa
dec
add
test
ror
mov
jbe
jbe
pop
scas
mov
add
in
and
lahf
test
mov
or
xor
jb
push
cwde
js
push
and
sub
repnz
aad
out
nop
out
add
in
(bad)
mov
or
(bad)
xor
mov
or
sbb
xchg
stc
mov
inc
and
sbb
(bad)
xlat
sbb
cmp
dec
aaa
mov
jnp
clc
cmp
jne
das
mov
push
cmp
mov
jbe
cwde
mov
mov
or
stc
dec
ret
xor
(bad)
or
ins
mov
xor
xchg
int3
ins
pop
ins
cmps
fiadd
(bad)
sub
push
and
inc
(bad)
and
out
mov
sbb
ret
mov
sub
dec
stc
and
in
movs
cmps
mov
push
bound
hlt
fdivr
pop
movs
fdiv
sbb
sub
sbb
mov
jb
retf
pusha
inc
xchg
mov
add
repnz
xor
pop
ja
cwde
fistp
mov
pop
ss
adc
or
xchg
jg
cmp
into
cdq
and
popa
scas
inc
jns
outs
(bad)
fidivr
dec
outs
or
aaa
add
xchg
pop
adc
hlt
test
fidiv
jl
addr16
adc
xchg
cmp
je
fild
(bad)
ds
xor
outs
xchg
into
push
jb
pop
cmp
or
dec
test
jecxz
test
mov
aad
mov
loope
rol
or
out
and
fist
std
out
jbe
and
or
cmp
cs
lea
int
push
dec
fisubr
mov
mov
arpl
gs
bound
push
mov
lea
test
inc
call
dec
fiadd
lods
sahf
sbb
mov
add
pop
(bad)
push
xchg
fiadd
loopne
daa
mov
push
pop
jne
test
and
xchg
stos
cmps
shr
mov
mov
add
ins
mov
and
into
cwde
jg
mov
and
push
(bad)
lods
outs
(bad)
xlat
sbb
fwait
inc
outs
mov
push
jecxz
cmp
sbb
inc
lods
xor
scas
bound
ret
dec
ins
mov
add
mov
add
lock
inc
bound
add
rcr
mov
add
push
pop
bnd
aas
jge
push
push
xor
cmp
retf
nop
inc
mov
xor
inc
xor
loopne
jl
or
mov
sar
push
cmp
fnstsw
push
dec
mov
cld
out
into
jge
inc
pop
jno
mov
jae
call
pop
fs
push
sbb
push
mov
dec
arpl
cmc
ds
mov
sar
sub
lods
cmp
inc
test
or
jmp
adc
in
pop
pop
out
pop
jns
in
mov
pushf
jp
push
push
lods
leave
xchg
pop
test
mov
push
pop
nop
repz
sub
cmp
pop
bnd
lea
mov
lea
pop
jmp
sahf
mov
and
inc
fs
retf
cmp
xlat
adc
xor
mov
outs
pushf
lea
and
inc
mov
mov
jae
movs
(bad)
push
sub
pop
mov
repz
add
imul
mov
xchg
stos
stos
mov
mov
xor
fucom
mov
fwait
stos
sub
dec
loop
and
imul
repz
and
in
in
popa
mov
or
jno
push
loope
cmps
pop
push
push
and
pushf
mov
push
dec
sub
push
cmps
dec
repz
leave
push
movs
mov
mov
je
das
xchg
push
sub
xchg
mov
fndisi(8087
mov
and
jo
xchg
inc
repz
dec
sbb
jmp
or
mov
dec
inc
les
aaa
lock
sub
bound
dec
retf
lds
mov
pop
mov
cld
sbb
(bad)
sub
cli
and
jle
dec
pushf
lock
sub
cdq
and
ror
cmp
dec
mov
or
pop
pop
and
fwait
adc
(bad)
in
popa
sub
outs
xlat
popf
cmp
addr16
jmp
and
popa
or
add
(bad)
aas
out
mov
pop
dec
dec
sbb
xlat
bound
into
dec
je
xchg
adc
and
into
cmp
mov
xor
jl
(bad)
mov
ret
xor
imul
cmps
and
imul
shr
loope
and
or
lods
adc
nop
xor
popf
call
fwait
or
jns
out
lds
cmp
xchg
sbb
(bad)
xchg
jae
retf
or
(bad)
mov
out
or
rcr
mov
fsub
(bad)
aad
cs
das
add
mov
stos
inc
dec
test
mov
add
in
clc
xor
push
(bad)
adc
loop
fwait
out
retf
jl
adc
add
mov
ret
fnstsw
pop
jmp
jb
retf
or
iret
mov
or
lock
addr16
add
in
int3
pop
cmp
stos
jge
mov
pop
arpl
xchg
outs
retf
jne
cmc
cld
add
jle
cmp
cmp
cld
jbe
sbb
push
xor
jno
leave
inc
fucomip
clc
sub
test
das
dec
xor
and
xor
jne
jp
sbb
imul
mov
sbb
or
mov
jae
je
scas
retf
ret
adc
inc
in
cmp
out
pop
test
les
and
add
sbb
mov
lods
aam
sar
shl
mov
jg
gs
push
add
aam
or
arpl
xchg
inc
retf
xor
sub
adc
add
daa
rdtsc
outs
sbb
retf
es
iret
(bad)
stc
cmp
push
fwait
sub
pop
addr16
sbb
push
mov
inc
inc
xchg
mov
ins
pop
fist
inc
mov
xor
mov
std
pop
(bad)
jae
or
iret
mov
adc
and
add
cmps
add
rcr
stc
fwait
dec
dec
pop
add
mov
iret
aad
lea
mov
dec
int
adc
add
(bad)
aas
jbe
and
mov
push
cmp
xor
mov
or
lods
lds
sbb
fistp
out
fidiv
icebp
(bad)
in
sbb
add
or
xor
stos
movs
fld
and
xchg
icebp
sbb
stos
mov
push
test
xchg
push
out
xchg
daa
jmp
(bad)
mov
sbb
push
mov
aam
jge
stc
xchg
mov
int3
push
lahf
add
jbe
hlt
pop
mov
clc
stos
jmp
or
lods
test
xor
pop
add
mov
stc
int
aas
pop
jmp
aad
dec
jno
xchg
pop
push
pop
sbb
dec
dec
daa
popa
or
pop
add
fstp
das
test
in
inc
hlt
mov
fadd
jnp
cmp
loopne
sub
xchg
icebp
out
clc
movs
pushf
jns
out
pushf
push
lea
out
ins
sahf
aaa
xchg
jle
hlt
inc
lahf
stos
fsubr
in
in
jge
add
fimul
cld
push
push
jne
add
add
fucomip
jo
repz
jmp
xchg
mov
jbe
jne
stos
and
inc
or
mov
pop
sahf
mov
cdq
outs
add
arpl
fsub
and
push
xor
sar
fdiv
loopne
lods
fs
arpl
rcl
add
sbb
sub
(bad)
xor
mov
fs
stos
movs
repz
or
ss
vmovhlps
fwait
loope
add
(bad)
fadd
cmp
cmc
test
push
js
imul
add
ins
test
imul
ficom
mov
repnz
cs
jae
and
pop
ds
neg
mov
(bad)
cmp
sbb
add
pop
js
jne
add
jmp
ret
les
test
adc
pop
mov
int3
fmul
mov
jb
adc
data16
outs
stos
jae
arpl
test
push
fst
jne
js
push
dec
xchg
mov
stos
cmp
xor
popa
add
test
or
add
cld
mov
stc
outs
adc
xchg
imul
sub
and
fs
jp
loopne
div
jecxz
mov
xlat
inc
mov
adc
xor
loope
mov
call
mov
cmp
sub
pop
push
push
fmul
jp
adc
or
or
ins
push
mov
stc
lock
(bad)
fimul
cmp
mov
sub
sub
xchg
xchg
daa
push
fldcw
int
xchg
xor
lds
in
pop
jg
or
mov
lea
int3
or
xchg
push
call
mov
mov
pop
push
cmp
je
imul
cmps
push
xchg
pop
sbb
push
or
cmp
mov
dec
cmp
dec
push
xor
dec
pop
mov
jp
pop
or
movs
cmp
stos
sbb
ret
ror
mov
mov
test
cmp
jb
ret
lea
loop
mov
popa
fwait
inc
jne
cmp
icebp
imul
and
mov
call
pop
in
in
mov
lea
out
inc
lods
mov
nop
mov
xchg
adc
bound
and
imul
pop
out
jl
cdq
and
mov
or
lods
mov
jo
or
mov
in
mov
dec
lahf
jmp
aam
push
cvtpi2ps
sbb
mov
into
or
adc
dec
adc
push
es
pop
jmp
pusha
outs
xor
xor
and
retf
xor
or
push
sar
sbb
mov
repnz
inc
adc
sub
push
test
sub
sahf
lds
test
push
aaa
gs
xchg
mov
sahf
pop
mov
push
test
fbstp
sub
stos
call
xlat
mov
fild
or
jno
lds
push
inc
jo
adc
sahf
mov
popa
cdq
xor
(bad)
bound
loop
in
mov
pop
xor
dec
or
push
aaa
sub
fmul
bound
clc
adc
and
jo
sub
ins
pop
adc
mov
inc
and
popa
sbb
(bad)
jns
mov
inc
das
cmp
sbb
pop
push
xchg
xchg
icebp
add
call
fild
retf
add
(bad)
mov
xchg
xchg
push
xlat
mul
lods
xchg
data16
mov
jb
cmc
adc
jp
repz
or
xor
sar
popf
loopne
shr
int
jne
mov
or
mov
es
not
xchg
pop
cdq
mov
mov
and
icebp
loop
add
push
test
cs
fnsave
cmp
and
push
sub
sbb
pop
sbb
das
lods
fistp
in
fldenv
pusha
icebp
in
cmc
ret
sbb
push
enter
or
movs
add
cwde
cmps
ja
dec
mov
sbb
xor
sub
loop
sbb
jbe
mov
inc
sub
call
mov
and
test
jne
rol
jae
xor
push
mov
lods
sar
ror
fidiv
or
sub
cmp
add
aaa
sbb
rcl
xor
add
xchg
repnz
xor
jnp
jb
fsub
(bad)
push
and
into
xor
pusha
inc
call
jmp
repnz
fiadd
inc
cmp
or
mov
xor
addr16
xchg
mov
cmp
push
push
and
in
mov
xor
retf
retf
and
xor
xchg
retf
ja
es
or
mov
dec
dec
rol
nop
jbe
sub
or
add
or
inc
jecxz
inc
aas
lock
hlt
(bad)
mov
mov
xchg
or
outs
sbb
xor
rcr
adc
out
or
test
movs
les
cmps
ror
scas
cwde
test
mov
mov
test
sub
cmps
popa
lea
movs
cmp
xchg
pushf
pop
xor
dec
mov
jp
push
pop
cli
aaa
dec
xchg
cmp
inc
mov
mov
push
popa
push
sti
rcr
xor
int3
push
movs
dec
out
push
stos
inc
movs
sub
jb
(bad)
pop
pop
sub
stc
loope
or
outs
std
shl
out
xchg
mov
popf
ins
pop
dec
(bad)
mov
adc
(bad)
mov
enter
and
dec
cmp
and
js
mov
dec
cmp
mov
xchg
mov
xlat
test
adc
in
xchg
aas
(bad)
xor
ins
xor
xor
adc
mov
inc
out
mov
mov
mov
push
movs
(bad)
retf
sahf
mov
cdq
mov
or
mov
fs
or
call
shl
or
xor
and
pusha
push
dec
cs
pop
iret
leave
or
int
jp
retf
leave
sbb
ins
aam
dec
mov
ja
lahf
mov
push
test
mov
xchg
mov
and
retf
lock
xchg
or
js
add
or
adc
lea
add
and
imul
push
push
repz
cmc
xchg
fild
or
outs
dec
push
and
call
shl
dec
(bad)
aam
cmp
out
cmps
imul
sbb
push
int3
loop
stos
jne
cmps
dec
(bad)
sti
sti
mov
stos
dec
mov
int3
rol
mov
adc
push
dec
sub
scas
mov
nop
xchg
inc
dec
push
fstp
enter
(bad)
cmp
popa
push
aas
pop
nop
icebp
rcr
das
cmovb
cmps
sub
sbb
in
pop
xchg
ins
mov
pop
jecxz
sub
push
or
fxch
mov
loop
or
xchg
das
mov
ds
pushf
scas
rcr
inc
xchg
daa
xor
add
push
cmp
sub
push
push
or
leave
mov
pop
mov
jo
cmc
xor
addr16
pusha
fmul
lds
mov
in
rcr
sub
add
or
daa
inc
out
nop
fsubr
sbb
outs
rcl
scas
leave
stos
dec
iret
test
in
or
jmp
or
add
sti
sbb
sub
out
test
ss
pushf
test
adc
(bad)
lods
out
and
movs
ds
inc
lock
jl
popa
mov
mov
inc
enter
sbb
inc
push
out
jne
inc
mov
in
or
cld
pop
outs
ja
int
dec
cmp
ds
mov
push
mov
sub
pop
push
in
pop
getsec
mov
cs
mov
and
inc
xor
ja
xlat
int3
in
cmp
jno
cdq
loopne
pop
push
sbb
or
xchg
cdq
push
aaa
mov
into
pop
add
popf
fisttp
dec
test
jp
int
and
test
into
loopne
adc
xchg
dec
pop
adc
test
popa
js
push
faddp
bound
fcmovnu
ss
xor
shld
mov
jnp
inc
jno
shl
mov
mov
adc
or
aaa
data16
jne
stos
dec
push
adc
and
pop
popf
mov
lds
mov
or
or
push
add
jmp
fild
sbb
mov
imul
mov
adc
jbe
sub
mov
mov
popf
push
add
xlat
js
clc
pop
sub
push
dec
cwde
mov
fs
jle
cmp
fiadd
fwait
retf
mov
retf
mov
cli
xchg
mov
je
adc
mov
fisttp
ja
push
mov
pushf
rol
adc
out
test
jae
mov
daa
movs
add
mov
pop
(bad)
jg
inc
jae
mov
repz
add
pop
mov
retf
les
xchg
les
mov
sbb
mov
test
int3
bound
dec
sub
mov
jmp
xchg
push
scas
mov
mov
and
out
sbb
pop
imul
enter
add
arpl
sbb
rol
jmp
test
pop
jns
push
jg
push
sbb
mov
fsub
push
sub
pop
cmp
in
mov
dec
movs
call
mov
movs
pusha
ins
xchg
mov
sar
sahf
mov
fucomi
mov
xor
iret
pop
enter
out
ja
inc
xor
nop
mov
ja
and
pop
shl
jbe
sub
mov
hlt
xor
retf
lds
mov
add
xchg
dec
cmp
xchg
into
out
pop
ins
shr
jecxz
movs
mov
cld
sbb
bound
jp
into
rcr
mov
sub
jge
mov
in
(bad)
fsubr
scas
(bad)
or
retf
jecxz
mov
push
cmp
dec
jbe
xlat
fist
shl
jl
mov
push
mov
stos
rcr
test
jmp
imul
mov
or
call
mov
xor
add
sbb
jge
mov
inc
mov
jns
sub
mov
xor
call
cmp
call
mov
sbb
inc
push
mov
mov
(bad)
(bad)
enter
ret
adc
add
je
sub
and
rcl
test
sub
push
bound
mov
cmp
dec
xchg
xchg
inc
out
xchg
mov
test
xor
add
retf
neg
stos
sbb
movs
push
cmp
sub
int3
(bad)
das
cli
mov
adc
xchg
jl
stos
sub
fcmovne
ja
add
mov
mov
sbb
test
cli
popa
sub
in
mov
mov
icebp
and
xchg
mov
inc
test
inc
call
cmps
(bad)
pop
fisttp
jl
hlt
sbb
push
in
sbb
jmp
into
mov
(bad)
xchg
adc
sbb
test
movs
add
xlat
pop
xor
cmps
inc
push
loop
stos
jle
shr
xchg
loopne
enter
mov
sub
(bad)
jbe
sahf
and
cdq
xor
jns
retf
not
mov
cmp
icebp
repnz
sub
pop
ret
lods
sub
fisubr
imul
test
jns
vsubpd
and
inc
daa
jg
test
dec
xor
mov
(bad)
pop
inc
mov
sti
gs
cmp
push
jg
lds
imul
pushf
daa
xchg
pop
pop
adc
push
fwait
push
hlt
cwde
inc
pop
and
mov
cmp
jmp
or
sub
repnz
shr
xchg
push
cld
pop
les
or
bound
adc
pusha
shr
into
fadd
or
loopne
xor
add
hlt
fadd
call
(bad)
cli
rol
pop
rcl
fst
xchg
dec
scas
push
jg
xor
mov
inc
outs
cli
jp
rol
cmp
cmps
mov
aaa
pminub
(bad)
int3
imul
fucom
rol
push
mov
stos
xor
stos
int
or
shl
mov
and
ds
fwait
mov
mov
inc
cmp
je
jecxz
sub
jle
xchg
add
mov
mov
loop
cs
jecxz
and
pop
add
xor
sahf
mov
enter
sub
push
pop
movs
push
sub
(bad)
icebp
pusha
cmp
mov
xchg
mov
cmps
rol
adc
mov
xchg
fistp
sbb
arpl
push
pushf
icebp
shl
aas
clc
cmp
test
cld
ja
push
mov
aad
ds
mov
dec
lahf
push
shl
sbb
push
mov
dec
jl
pop
cmps
ficom
shl
mov
xchg
jg
pop
gs
retf
ret
push
neg
add
xchg
mov
sbb
jno
adc
mov
movs
mov
cli
and
or
inc
(bad)
stos
retf
sar
cmps
test
inc
les
mov
sub
mov
(bad)
sbb
popf
out
mov
mov
push
mov
push
xchg
in
pop
sti
xor
and
jg
push
clc
loop
jmp
or
clc
fucomip
pop
daa
and
cdq
sub
jg
ss
jno
push
dec
sub
inc
fiadd
scas
pop
outs
aas
ret
and
dec
pop
scas
and
pop
(bad)
inc
je
in
cmp
hlt
in
push
cmp
jns
adc
cmp
add
fmulp
xchg
shr
pop
sub
inc
mov
retf
(bad)
or
mov
and
movs
xor
inc
gs
jge
cmc
cmps
xchg
add
add
shl
nop
xchg
(bad)
outs
or
aas
aam
sbb
push
cmps
pusha
loope
push
sub
out
xchg
adc
pop
mov
ins
fwait
sbb
div
movs
sub
jmp
sahf
mov
push
mov
out
mov
in
inc
sahf
jg
dec
push
inc
xor
js
cmp
jle
mov
into
es
repnz
sub
adc
fwait
out
adc
popa
stc
fidivr
outs
jae
jae
push
(bad)
adc
dec
out
sub
adc
xchg
rcl
stc
xor
sbb
inc
iret
jno
jb
popf
movs
or
inc
ret
gs
adc
cmp
mov
aad
les
mov
dec
addr16
int3
add
xchg
sub
sahf
out
jno
ss
dec
int
pop
jb
scas
loop
mov
rcl
test
mov
es
jb
add
jae
pop
imul
je
jmp
inc
sub
sub
mov
inc
retf
mov
sbb
into
sti
pop
mov
bnd
pop
sahf
adc
adc
xchg
cmps
xchg
dec
loopne
in
add
sub
dec
sbb
push
pop
dec
out
cmp
scas
push
xor
pop
mov
cmps
mov
mov
stc
lods
or
pop
addr16
add
aam
pop
xchg
cmp
push
mov
dec
stos
stos
sub
add
xchg
mov
arpl
or
imul
mov
jge
std
jnp
fcom
jae
jns
pop
jge
add
jp
jg
or
ins
adc
cwde
xchg
mov
sub
adc
pop
inc
add
mov
call
dec
mov
push
fdiv
das
jmp
sub
xlat
jns
bnd
or
dec
and
push
mov
fwait
mov
daa
pop
les
or
add
and
mov
std
add
jp
les
fdivr
ins
jmp
inc
ds
mov
push
enter
repz
push
je
addr16
xchg
fild
es
movs
fld
or
cdq
stos
sbb
hlt
out
sub
jbe
mov
enter
rol
add
enter
add
push
loop
lahf
jmp
repnz
loopne
stos
cdq
aad
test
ins
mov
call
test
pop
int
sbb
jge
pop
sub
push
nop
mov
shl
repz
jge
adc
inc
dec
inc
ins
jno
xchg
stos
jb
add
cmps
test
in
xlat
dec
xchg
retf
out
js
pop
fistp
xor
std
outs
fwait
xchg
int3
(bad)
or
test
and
fwait
add
sub
add
jmp
cwde
aas
inc
and
jmp
dec
icebp
pusha
inc
jmp
(bad)
fstp
cli
mov
jmp
and
or
xchg
or
sub
iret
gs
mov
cli
mov
jne
xchg
pop
cmp
js
sub
add
mov
xchg
aad
inc
out
add
or
pusha
cmp
mov
mov
pop
ds
stc
jp
push
mov
shr
dec
sub
ret
mov
mov
mov
pop
push
mov
mov
jle
repnz
call
dec
les
sbb
inc
inc
and
mov
std
xchg
std
jle
adc
sub
retf
out
adc
in
mov
jge
sub
call
cmp
and
or
into
lds
inc
je
mov
cmp
retf
add
mov
stos
out
push
ss
push
aam
aaa
in
lahf
(bad)
xchg
mov
mov
addr16
cmp
pop
call
outs
xchg
jg
icebp
mov
push
add
cli
cmp
jnp
add
(bad)
push
ins
mov
pop
push
inc
or
cmp
xchg
out
jmp
inc
sub
adc
or
and
add
shl
inc
cmps
xchg
jmp
jmp
sub
mov
sub
add
sub
sub
push
pop
lods
lahf
imul
retf
push
jb
fnsave
jb
call
call
sub
pushf
dec
mov
jmp
movs
sub
pop
xor
aas
cmp
xchg
pop
mov
arpl
cmp
(bad)
das
mov
cmp
inc
inc
mov
add
inc
shr
and
js
lods
rol
inc
pop
pop
test
imul
or
cwde
mov
mov
jmp
lods
jg
ret
and
cmc
mov
mov
pop
xchg
mov
popf
push
popa
ret
iret
jmp
ret
sar
jmp
nop
pop
jl
es
rol
jl
aad
shl
jno
scas
xor
aad
es
dec
jl
lods
inc
test
and
popa
push
enter
clc
xchg
aad
jecxz
(bad)
loopne
clc
in
xor
mov
fs
cli
pop
pop
add
mov
cmp
repnz
call
sbb
into
mov
lds
test
icebp
and
pop
and
inc
jmp
and
mov
mov
es
dec
pop
arpl
push
js
(bad)
loop
into
out
inc
jno
and
mov
ror
imul
int
jno
dec
or
jle
rcr
cmp
fld
pop
xor
jns
pop
push
out
mov
ds
pushf
out
lds
cs
and
mov
fdivr
inc
mov
push
mov
push
or
out
outs
lock
in
push
movs
push
cmps
pop
pusha
sbb
and
jmp
rcr
and
lods
xchg
int3
add
add
inc
push
pop
push
dec
or
fcmovnu
inc
cmps
sbb
hlt
pop
das
call
sbb
jb
aam
dec
icebp
(bad)
jg
dec
pop
add
std
les
repz
add
push
jecxz
loopne
nop
outs
inc
dec
mov
out
jle
shl
or
jp
pop
lock
arpl
or
aas
add
xlat
xchg
or
jne
add
mov
in
(bad)
xchg
test
cmp
fadd
je
mov
popf
jno
dec
mov
or
and
mov
mov
dec
stc
pushf
cmc
icebp
test
mov
xchg
dec
cmps
mov
jge
push
movs
leave
dec
repz
sbb
int3
(bad)
lods
inc
out
mov
scas
or
cmp
mov
adc
push
push
and
push
retf
adc
sbb
xlat
fdiv
pop
cmp
mov
pop
cli
fwait
or
xchg
add
(bad)
jae
out
out
imul
xchg
jbe
inc
popf
daa
ret
sub
push
xchg
ja
addr16
js
lods
jle
in
push
test
xchg
cmps
sar
int3
bound
mov
sbb
jecxz
into
imul
imul
int
pxor
xor
cmp
repz
pushf
adc
pop
stos
pop
sbb
or
inc
ss
xchg
cld
mov
pop
pop
fidivr
mov
mov
jmp
and
pop
ja
cs
das
out
push
test
pop
push
rol
mov
call
jno
std
sub
mov
cwde
fisttp
hlt
je
pop
lahf
xchg
dec
xlat
in
lahf
cmp
push
add
cmp
add
mov
jmp
pop
(bad)
shr
pop
jmp
mov
call
dec
jmp
mov
scas
dec
call
cs
fbld
in
push
and
push
fldenv
xor
adc
shr
inc
ja
repnz
add
mov
rcl
mov
leave
cmps
cdq
sub
mov
cli
mov
jae
cmp
mov
enter
or
add
xor
add
stos
mov
test
mov
cld
aad
add
scas
out
(bad)
pusha
push
jne
pusha
mov
jle
mov
xchg
add
(bad)
aas
fidivr
out
jmp
(bad)
data16
std
fisub
dec
in
stos
jl
sahf
mov
fs
lods
inc
shr
sub
cmps
or
sub
or
xor
pop
into
or
inc
sbb
mov
adc
mov
pop
test
jns
mov
mov
xchg
pop
xchg
xor
mov
xor
mov
jns
es
add
dec
mov
push
(bad)
shr
rol
out
loopne
jae
or
es
push
call
(bad)
neg
pop
jns
out
lock
call
fadd
push
xchg
ds
pushf
mov
in
sbb
xor
icebp
stos
xor
gs
cmp
push
add
mov
dec
jl
dec
jb
pushf
push
jmp
dec
dec
bound
mov
mov
mov
cmp
add
push
rcl
loop
and
push
and
out
aad
loope
lock
aas
cmps
jae
push
xchg
mov
mov
xchg
or
retf
retf
add
cmp
scas
xchg
movs
out
xchg
pop
cmp
mov
enter
mov
inc
addr16
mov
loopne
mov
call
neg
sar
rcl
mov
pop
mov
sti
mov
and
pop
inc
mov
push
fisub
mov
fmul
jb
stos
ret
lds
and
mov
mov
mov
addr16
jnp
mov
and
jl
pop
cs
(bad)
repz
cmc
arpl
stos
stos
mov
in
xor
ret
ss
ds
jecxz
loope
daa
popa
and
xchg
fistp
mov
into
iret
sar
imul
in
das
push
mov
sbb
mov
sub
ja
sub
inc
push
xor
xchg
outs
inc
(bad)
mov
xchg
xchg
push
mov
pop
xlat
sub
shr
aad
xchg
sub
mov
add
xor
test
pop
rcr
into
int3
sbb
shl
jp
popf
and
sub
(bad)
jecxz
cmc
and
jle
addr16
jns
mov
push
lahf
retf
(bad)
mov
add
retf
call
xor
cmp
shr
push
in
(bad)
jb
jmp
int
ins
cwde
sahf
pop
ret
push
push
sar
sbb
repnz
xchg
sub
xor
ds
fmulp
push
lea
or
fucomip
mov
mov
ret
pop
push
rol
jns
out
cmp
ds
int
jmp
repnz
xor
scas
and
xor
aas
sub
(bad)
ja
jmp
sbb
je
lods
fist
push
movs
daa
jge
jb
dec
retf
out
mov
cmp
add
es
and
xor
adc
(bad)
mov
into
mov
mov
lds
jae
psllq
pop
sub
aas
jne
xchg
lods
jnp
pusha
call
bnd
push
adc
ror
add
jle
or
push
dec
inc
mov
fdiv
test
fstp
push
mov
push
jb
add
add
(bad)
add
cmp
retf
cmp
ret
pop
dec
(bad)
fimul
dec
repnz
mov
mov
or
or
fstp
or
shr
aad
(bad)
jp
lods
aam
adc
inc
enter
or
push
(bad)
in
iret
shl
mov
mov
stos
pop
dec
fist
cmps
icebp
sub
or
mov
mov
cs
xchg
out
mov
adc
retf
push
push
lods
inc
mov
das
mov
in
into
and
lahf
inc
mov
fiadd
xchg
cmp
(bad)
jmp
in
imul
retf
jno
mov
cmp
in
xchg
lahf
push
test
in
mov
test
mov
(bad)
xchg
pop
jns
push
dec
cmp
cmps
mov
adc
mov
push
pop
test
mov
xchg
js
sbb
stc
mov
adc
ficomp
inc
neg
ss
fild
mov
cmp
push
shl
mov
inc
jae
psubsb
scas
sub
mov
aas
pop
mov
fwait
dec
sbb
mov
mov
nop
xchg
pop
push
sbb
inc
rep
sbb
addr16
xor
or
das
sub
adc
mov
cmp
xlat
pop
push
xchg
fistp
outs
mov
push
hlt
cmp
adc
jmp
mov
daa
sbb
mov
cmp
add
sti
ret
imul
inc
retf
xor
test
mov
push
ret
sbb
add
dec
mov
inc
in
xchg
cmps
xchg
xchg
fwait
mov
xchg
fsub
pusha
push
add
dec
mov
loopne
outs
adc
mov
inc
(bad)
aad
inc
xchg
sbb
sub
enter
dec
sub
pslld
inc
add
rcr
popa
xchg
hlt
add
daa
out
es
xor
cwde
push
push
ret
mov
mov
(bad)
xchg
cs
mov
lock
and
(bad)
mov
mov
and
ins
xor
mov
xor
xor
popf
fld
sti
xor
(bad)
and
out
cmp
lods
out
aad
mov
neg
repnz
test
xchg
dec
enter
es
sub
les
lock
not
jae
add
and
push
fdiv
cmc
dec
push
dec
mov
ins
ficom
(bad)
js
mov
ds
imul
push
jl
pop
stc
inc
stos
and
enter
push
push
in
jne
push
xor
popa
pop
and
stos
mov
xchg
push
call
call
sbb
pop
aaa
xor
or
xchg
lods
into
out
test
add
jbe
test
dec
mov
add
imul
call
dec
leave
data16
mov
test
inc
mov
jmp
icebp
shr
ja
pop
retf
mov
mov
ret
cmp
ror
nop
shl
addr16
push
rcl
jmp
cs
pop
sub
rol
aam
mov
cdq
(bad)
in
stos
shl
repnz
lods
retf
cmp
out
movs
loop
jle
call
xchg
mov
fidiv
mov
test
and
arpl
inc
call
ins
mov
cld
loopne
pcmpgtw
je
xor
mov
cmc
add
and
mulps
add
inc
(bad)
mov
loopne
scas
push
pop
push
mov
dec
movs
int
mov
dec
jmp
inc
into
rcl
call
movs
or
lds
jmp
mov
mov
cmps
outs
push
sbb
ret
stc
stos
(bad)
imul
and
cmp
dec
mov
cdq
dec
imul
push
shr
out
adc
sub
jmp
jnp
inc
gs
pop
inc
inc
xor
stos
fmul
(bad)
push
cmp
test
pop
pop
stos
lea
jae
test
out
shl
aas
or
xchg
xor
les
dec
sahf
cmp
popf
popa
(bad)
lahf
test
(bad)
(bad)
cld
sub
inc
cmp
sbb
inc
retf
mov
push
repz
mov
mov
arpl
mov
fdiv
(bad)
xchg
dec
mov
in
mov
in
cs
cmp
loop
sub
ret
or
int3
push
or
sbb
add
clc
cmp
add
ins
lea
xchg
xchg
add
notrack
ret
pop
inc
pusha
cmp
cmps
xor
mov
je
int
xchg
mov
jo
dec
in
pop
sbb
pop
out
xchg
scas
enter
sbb
mov
jbe
mov
jnp
fsub
mov
xlat
adc
xchg
and
int
cmc
sbb
out
inc
pop
mov
push
pop
sub
and
movs
jb
mov
sbb
jl
sbb
inc
loop
mov
jo
sbb
xor
adc
jl
sub
mov
xchg
cmp
adc
test
retf
or
jne
jne
cmc
popf
les
stos
dec
das
in
loopne
add
cdq
out
(bad)
and
xchg
mov
and
jns
std
or
pop
sbb
dec
out
xchg
mov
ins
std
test
xchg
ins
mov
(bad)
dec
or
inc
dec
dec
mov
outs
fs
inc
mov
or
pop
dec
pop
int
jg
lds
add
add
shl
gs
cmps
sti
test
cs
cld
fcmovnu
inc
sub
fs
scas
sbb
pop
dec
add
xchg
fimul
jp
push
xchg
jmp
jmp
sbb
aam
jbe
mov
mov
not
jecxz
addr16
call
jne
pop
xor
out
pop
mov
nop
je
sub
popa
es
rol
test
cmp
mov
pop
rol
test
imul
or
sbb
jmp
sbb
test
jbe
jne
jg
sbb
cwde
pop
mov
xor
mov
dec
dec
call
push
into
inc
or
in
jge
std
cmp
daa
cli
pusha
adc
(bad)
inc
inc
or
cmp
int3
in
push
mov
or
pop
push
jecxz
dec
fistp
ficomp
out
out
add
stos
and
mov
imul
movs
push
dec
adc
adc
mov
jae
sub
enter
icebp
or
jne
jecxz
ret
inc
ret
and
adc
dec
stos
mov
xor
push
xchg
cmp
cwde
or
add
xchg
test
sti
inc
retf
pushf
sbb
fsub
sub
mov
mov
icebp
or
and
ror
in
jl
in
add
xor
jp
dec
mov
popf
stos
xchg
sahf
or
sbb
es
adc
mov
inc
inc
inc
call
inc
inc
das
stc
aaa
jmp
inc
sahf
or
xor
inc
jecxz
sub
jne
icebp
aam
cmp
pushf
pop
cdq
mov
mov
cmps
dec
add
xlat
popa
mov
pop
aad
add
sar
sub
(bad)
icebp
sti
movs
jmp
push
xchg
mov
stos
mov
in
or
jge
adc
ins
sub
test
in
syscall
push
add
popf
test
fwait
pop
leave
fnsave
mov
sub
inc
and
fidivr
jno
in
les
sahf
outs
inc
cmc
mov
out
cld
jg
sub
mov
loop
or
pusha
loop
adc
sub
das
or
test
fld
cmp
stos
push
dec
xor
not
jbe
fnstcw
push
adc
cmps
cmps
out
daa
rcl
ss
sbb
ss
inc
mov
mov
pop
xchg
jno
inc
or
fidivr
outs
shr
and
inc
fidivr
mov
or
cmc
dec
jb
sub
cmp
jo
inc
inc
dec
xor
or
jle
fwait
xchg
sbb
jge
lds
cmp
js
pop
xchg
adc
dec
jl
adc
shl
mov
pop
sbb
sbb
mov
jl
ins
fistp
mov
call
bound
mov
(bad)
push
into
lock
pop
mov
or
and
xchg
nop
push
sbb
mov
call
loopne
int
mov
push
sbb
push
push
jecxz
or
pop
mov
std
adc
ins
(bad)
retf
sub
aam
ss
psubb
push
mov
in
jo
xchg
mov
div
retf
add
push
test
sbb
push
sub
cmp
add
(bad)
int3
pop
retf
ffreep
inc
and
sti
sbb
push
adc
xor
cld
inc
retf
not
xor
add
retf
lahf
mov
xchg
loop
(bad)
push
int3
fucom
dec
xchg
sub
cwde
adc
aad
jecxz
xchg
push
addr16
mov
fild
xchg
mov
test
dec
and
fsubr
sub
mov
push
(bad)
cdq
in
lods
inc
or
sub
add
cmp
imul
fisub
or
xchg
dec
jge
movs
imul
popf
mov
int3
mov
iret
addr16
addr16
inc
cmp
push
mov
cmp
scas
jns
fdivr
pop
mov
stos
jno
pop
in
or
push
std
mov
dec
stos
aad
shl
or
ret
mov
inc
outs
mov
cmp
pushf
jo
adc
aas
(bad)
sti
fwait
inc
cwde
or
lahf
jge
and
ins
imul
in
mov
ret
call
fistp
add
and
pop
cmc
mov
push
popf
sub
scas
mov
scas
scas
add
jmp
cmps
fwait
mov
push
push
ror
ret
inc
fnstenv
(bad)
fsubr
dec
rol
test
mov
outs
mov
and
mov
xchg
js
stc
fsub
jmp
es
xor
sub
sub
stos
frstor
inc
push
das
sub
inc
mov
mov
sub
sbb
rcl
rcr
cmp
mov
pop
jp
retf
inc
dec
popf
push
neg
pushf
ins
mov
add
fs
ret
je
stc
and
or
ror
mov
mov
imul
out
jae
pop
cwde
fidivr
or
mov
cmp
sub
js
mov
inc
js
rol
in
stos
sbb
mov
(bad)
sub
sbb
arpl
mov
mov
fcmovbe
and
mov
int
stc
int
or
cld
das
call
jge
adc
push
sub
cmp
aas
xor
outs
sub
adc
sbb
outs
icebp
cmp
xchg
in
popf
adc
cmps
cmp
mov
push
cmp
xchg
test
ret
dec
popf
out
loope
push
mov
or
cmc
pop
fbld
pusha
loope
dec
mov
hlt
adc
fbld
jbe
test
jne
bound
in
test
pop
sub
jg
push
sbb
scas
cmps
stc
push
push
test
xor
pop
pop
repnz
fwait
shl
cwde
mov
mov
dec
aaa
mov
int3
(bad)
shl
out
mov
pop
dec
jmp
jbe
push
xchg
push
(bad)
dec
hlt
leave
out
test
shl
sub
fild
aam
cmp
sbb
mov
inc
out
xchg
mov
fs
pop
push
test
imul
in
(bad)
adc
pop
pop
xchg
xlat
mov
fwait
jns
push
lods
sti
mov
adc
cmp
dec
stos
imul
cmp
push
xchg
jns
mov
call
shr
lahf
pop
out
ins
pop
cmp
mov
add
js
sbb
test
adc
push
mov
ja
pop
(bad)
and
xchg
sbb
mov
je
push
sahf
je
movs
add
ss
stc
pop
xchg
xchg
repnz
data16
inc
arpl
or
pusha
scas
pop
mov
mov
repz
(bad)
loope
lds
ret
xor
fs
popa
sub
xor
mov
jl
pop
pop
aam
adc
or
sub
in
lahf
int
mov
inc
(bad)
sub
mov
pop
idiv
jecxz
cmp
dec
js
pop
jge
sub
add
out
loope
pop
inc
add
jns
and
cmp
test
je
aaa
call
jb
les
cmp
imul
dec
add
sahf
add
int
aam
cmps
pop
jecxz
mov
dec
out
dec
ds
dec
out
mov
jmp
and
cmp
lahf
sub
mov
outs
jmp
and
add
bswap
adc
sub
or
push
ins
mov
sbb
hlt
jg
ds
hlt
sahf
inc
call
imul
repz
jnp
cli
aam
adc
mov
pop
push
sti
es
xchg
pusha
(bad)
daa
stos
lock
cmp
fnstcw
cmps
data16
mov
xchg
ror
jl
fs
jmp
sbb
jnp
push
leave
(bad)
imul
xchg
jmp
fldenv
popa
(bad)
out
shl
mov
xor
arpl
mov
mov
and
jp
add
jecxz
fdivr
int
sbb
and
test
das
hlt
setb
pop
xchg
mov
push
xor
mov
xor
out
test
stc
repnz
jmp
mov
sub
je
cmp
cmps
cdq
mov
shl
les
loope
and
cmp
mov
mov
dec
lea
pop
js
and
pop
mov
inc
jnp
les
jae
mov
aas
xlat
pop
scas
sbb
arpl
stos
(bad)
jno
std
sub
jno
(bad)
sub
cmp
sub
or
(bad)
sti
icebp
retf
stc
out
xor
arpl
mov
mov
mov
test
icebp
push
test
dec
fdiv
repz
imul
clc
dec
lock
loopne
mov
xor
mov
cmps
clc
lods
dec
mov
enter
pop
xchg
scas
scas
or
in
lods
cs
jecxz
cmps
mov
xchg
cmp
dec
mov
int
sar
test
mov
test
add
sub
repnz
out
mov
push
jl
xor
popf
dec
fnsave
repnz
fild
xacquire
arpl
add
cmp
pop
imul
pop
sbb
std
stos
push
seto
pop
cmp
dec
adc
jnp
jbe
(bad)
push
jbe
shl
pop
out
xor
cmp
adc
dec
in
pop
das
push
inc
or
or
dec
out
ds
inc
pop
(bad)
in
dec
cmp
stc
out
dec
icebp
lods
inc
and
test
stos
pop
cmp
sbb
test
and
test
xchg
cmp
push
les
js
loope
repnz
(bad)
xchg
inc
mov
and
retf
mov
test
xchg
mov
mov
add
into
pop
fidivr
dec
arpl
mov
sbb
xchg
xchg
mov
out
xchg
scas
hlt
pushf
xchg
ficomp
nop
sti
data16
add
xor
retf
fmulp
adc
or
in
retf
push
dec
mov
push
shl
xlat
xchg
shr
inc
(bad)
(bad)
mov
lods
push
mov
sub
and
mov
ficom
dec
jne
neg
xchg
mov
push
mov
mov
aam
std
cmp
mov
enter
dec
and
cs
hlt
popa
mov
jmp
push
mov
mov
push
ss
fisub
jg
adc
mov
std
daa
sub
sbb
retf
mov
scas
or
pop
dec
rol
push
mov
adc
cmp
sbb
cmp
icebp
into
cmp
jmp
xchg
mov
xor
out
mov
dec
cmc
imul
fsubp
jbe
jl
pop
dec
lods
fcomi
loope
jl
sti
jne
out
cmps
push
pop
dec
iret
pop
pushf
ret
cmp
imul
addr16
cwde
jns
mov
inc
mov
adc
push
xchg
pop
js
jnp
mov
mov
lods
outs
out
cs
ja
jne
loopne
or
ror
out
push
push
mov
cmp
or
xchg
inc
or
xor
mov
pop
cmp
add
xchg
gs
cmc
scas
ds
hlt
jg
jbe
xchg
sub
fsubr
dec
inc
leave
mov
(bad)
leave
ret
repnz
and
popa
mov
jp
iret
push
jne
mov
inc
xchg
int
arpl
mov
xor
ja
or
push
inc
leave
cmp
xor
(bad)
xchg
test
add
daa
pushf
sahf
pushf
mov
std
sbb
sub
pop
arpl
mov
cmc
ffree
jl
gs
adc
nop
sub
outs
test
mov
and
cmps
test
mov
in
push
push
sbb
(bad)
popa
cli
(bad)
pop
or
add
push
imul
push
das
daa
add
int3
rol
test
jns
into
sti
push
dec
int
cmps
adc
daa
push
jge
shl
jb
push
ret
push
pcmpeqw
test
pop
push
inc
movs
pop
mov
add
sar
push
add
dec
or
dec
clc
loope
mov
mov
ja
jmp
loopne
jnp
push
or
or
dec
stos
cwde
dec
test
(bad)
out
shl
clc
add
adc
jne
popa
cld
js
jno
push
mov
out
ret
mov
adc
mov
fisub
pop
mov
xchg
out
xor
lock
adc
add
adc
pop
add
lods
cld
mov
(bad)
(bad)
xchg
dec
dec
cmc
xchg
out
idiv
adc
xor
push
cmp
sub
inc
call
das
int3
ja
sbb
inc
loopne
or
xor
hlt
cmps
cmp
jnp
adc
imul
dec
sbb
shl
cmps
mov
je
cmp
xor
cdq
adc
or
dec
frstor
xchg
jae
iret
push
call
cmp
push
rep
ret
aam
lods
popa
mov
fs
mov
lods
arpl
inc
lock
retf
call
pop
daa
pop
imul
sub
inc
fbld
out
or
jmp
xchg
(bad)
and
pop
mov
aad
das
mov
mov
pop
cmp
adc
lods
lods
or
rcr
pop
mov
hlt
jle
mov
ror
rcl
xor
adc
jmp
xchg
and
rcl
sbb
xchg
jnp
adc
sahf
and
test
jo
add
cmp
mov
div
pushf
push
rol
mov
icebp
scas
(bad)
jae
push
sub
imul
push
(bad)
mov
push
out
push
mov
(bad)
(bad)
dec
pop
jmp
mov
ins
push
dec
sub
jge
jno
and
mov
pop
test
out
and
adc
ror
sbb
cmps
xor
xor
fisubr
nop
push
xor
adc
xor
arpl
adc
pop
enter
sar
mov
cmp
sub
enter
push
or
ss
adc
imul
aaa
mov
or
jno
scas
mov
mov
jns
cmp
add
jmp
sbb
popa
fisubr
iret
mov
mov
je
mov
mov
adc
(bad)
cli
(bad)
daa
cs
addr16
ins
mov
add
xor
cmp
mov
and
lods
in
add
inc
fisub
push
and
out
fsubr
ja
test
jecxz
sbb
xor
mov
dec
xor
jmp
mov
outs
mov
mov
sbb
inc
(bad)
stos
aam
sub
test
jnp
or
cmps
pop
lods
lock
frstor
mov
cmp
jae
or
add
sub
pop
pushf
mov
test
cld
stc
dec
inc
dec
loope
repnz
xchg
dec
inc
sbb
cs
dec
mov
shr
pushf
cmp
cmp
shr
mov
and
xor
in
mov
ins
mov
push
fst
dec
not
call
pop
cmps
call
inc
xchg
in
mov
sub
xchg
outs
pop
xlat
jmp
ins
fwait
out
fiadd
jp
cs
pop
addr16
jb
add
jmp
mov
push
sub
rol
fwait
aas
or
retf
cmp
cwde
pop
fadd
push
aaa
or
ss
pop
in
cmp
xchg
test
retf
cs
out
cdq
ja
aaa
ret
mov
add
mov
scas
test
jae
mov
(bad)
rcr
mov
hlt
jns
pushf
fisttp
inc
loope
xchg
ret
into
rcl
jecxz
dec
adc
scas
adc
jle
lock
inc
adc
jae
dec
mov
ror
push
imul
scas
lea
(bad)
sub
das
enter
jnp
daa
dec
es
aam
jge
pop
or
loope
or
lock
iret
push
ds
(bad)
ja
dec
shr
mov
sbb
inc
adc
mov
ss
mov
repnz
daa
fstp
cmp
jp
adc
dec
(bad)
into
aam
cmp
add
push
sahf
ins
stos
mov
dec
and
mov
sub
mov
mov
jle
std
mov
cld
adc
push
and
dec
mov
ret
or
movs
or
fisttp
cmps
shl
inc
xchg
ins
push
lock
xor
inc
(bad)
(bad)
arpl
xchg
jmp
xor
popf
xchg
ins
cmps
idiv
cdq
arpl
aas
aas
mov
and
fcomp
mov
jge
mov
mov
push
jl
fldcw
and
push
mov
and
sti
arpl
in
sti
(bad)
(bad)
ins
and
push
push
jge
push
mov
xchg
sbb
inc
mov
jmp
pmulhuw
sub
mov
pcmpgtd
hlt
mov
inc
add
xor
add
sub
mov
sub
jmp
adc
mov
test
sbb
lea
loop
sahf
scas
lds
into
out
cli
add
fwait
push
ror
aaa
pop
daa
lock
fldenv
jb
xor
jnp
cmp
push
ficom
sub
fs
inc
sub
mov
sbb
sar
pop
dec
dec
jp
xchg
icebp
addr16
xor
pop
mov
in
dec
add
jecxz
es
ins
adc
push
xchg
hlt
add
or
jg
mov
push
sbb
fisub
ror
xchg
pop
xor
add
inc
fwait
inc
int3
movs
in
adc
or
addr16
les
xchg
int3
dec
(bad)
pop
add
loope
movs
add
stos
xchg
stos
repz
and
sub
xor
jb
popf
ds
(bad)
fstp
pop
repz
cmp
sahf
neg
jmp
pop
in
xor
cmps
cdq
mov
xor
loopne
push
(bad)
pop
sti
andps
stc
in
(bad)
cmp
pop
add
sbb
std
cwde
ins
test
or
and
lods
inc
jae
push
stos
jns
dec
test
fcomp
xchg
ins
popa
sub
mov
nop
cmp
pop
popf
out
sbb
into
aas
sar
sbb
int
jl
xor
add
inc
adc
xor
xchg
sbb
jnp
rep
sahf
add
add
dec
movs
lods
test
(bad)
aad
sbb
inc
cmps
ins
xor
cld
xchg
jmp
cmp
pop
xchg
mov
or
mov
lock
rol
icebp
retf
cmp
cmp
out
data16
push
sar
cmp
push
adc
mov
mov
add
adc
ret
sbb
jb
out
mov
test
out
mov
xor
jno
outs
aam
sbb
out
jbe
push
xchg
popa
js
inc
mov
cmp
popf
loope
mov
and
hlt
scas
jnp
out
mov
adc
mov
xchg
pop
mov
cmp
dec
jecxz
add
cmp
or
and
xchg
in
mov
lods
das
neg
xchg
lock
lea
imul
mov
test
xchg
cwde
js
fsub
xlat
js
(bad)
lahf
pop
dec
mov
js
repz
push
mov
add
dec
cld
add
pop
mov
jbe
push
loope
hlt
mov
imul
adc
fld
sub
je
addr16
fbstp
imul
out
push
adc
mov
cld
cmp
ja
mov
jge
jb
jge
daa
xchg
cld
sbb
jns
cmp
in
cmp
retf
ror
and
aas
cld
xor
or
enter
and
(bad)
lock
(bad)
int
cld
int
mov
imul
jns
pop
(bad)
dec
mov
jg
mov
adc
ds
mov
(bad)
mov
fst
frstor
mov
mov
call
pcmpeqw
inc
jnp
daa
nop
sub
pop
xchg
pushf
repnz
fcom
mov
in
aad
or
sub
in
neg
mov
pop
and
ja
iret
adc
sbb
sbb
pop
mov
push
xor
mov
dec
and
inc
adc
inc
add
div
loop
adc
les
xor
jno
add
add
mov
into
inc
shr
mov
push
adc
xchg
outs
cs
mov
sbb
mov
mov
inc
imul
fistp
ficom
ins
mov
fwait
cld
jbe
pushf
pop
or
inc
cmp
ret
(bad)
xchg
jne
sub
(bad)
xchg
clc
and
and
add
jns
add
mov
fs
sub
jecxz
jno
clc
dec
loop
push
mov
push
fs
xchg
adc
push
jae
push
loop
xchg
repz
and
jb
and
mov
inc
loopne
fidivr
sub
lea
bound
das
or
rcl
inc
das
pusha
pop
xor
jl
aas
aad
adc
inc
sbb
xor
movs
mov
adc
dec
test
inc
xor
xor
js
jmp
adc
(bad)
ret
dec
sbb
stos
inc
stos
dec
repz
dec
or
fstp
aad
aaa
jl
sub
inc
fisub
fisttp
daa
les
push
int3
adc
adc
pop
jne
mov
push
xor
jnp
adc
test
enter
cld
dec
shl
or
and
das
cdq
sbb
mov
jnp
lods
xchg
shr
dec
mov
bound
and
xchg
pop
mov
xchg
add
fdiv
in
imul
inc
jns
iret
imul
mov
jo
push
std
mov
sbb
arpl
int
mov
scas
pop
and
outs
xchg
add
in
inc
jp
iret
pop
inc
lods
sti
or
call
add
pusha
mov
mov
jne
xor
xor
and
out
adc
rcl
sub
sbb
push
in
mov
call
xchg
mov
mov
cmp
imul
mov
imul
or
arpl
iret
push
cmp
jne
mov
out
push
or
jmp
fcomp
jbe
mov
adc
sbb
cld
add
dec
jns
shl
cmp
mov
cmps
movs
sbb
sbb
gs
cwde
aas
xchg
sti
mov
int3
mov
scas
mov
cdq
aam
push
and
dec
mov
mov
pop
and
adc
ret
xor
jae
sbb
xchg
inc
rcr
pushf
pop
sub
adc
fs
xchg
mov
cmp
icebp
mov
lahf
dec
test
les
out
lahf
mov
dec
xor
xchg
jl
retf
(bad)
jb
jbe
jl
sub
in
mul
pop
(bad)
call
mov
ins
jbe
in
xchg
jecxz
dec
(bad)
mov
and
inc
fwait
(bad)
test
sbb
lock
repz
mov
fbld
pop
jbe
mov
xor
scas
jmp
mov
lods
push
mov
das
push
mov
fdivr
out
clc
ja
adc
int
arpl
pusha
mov
mov
pop
(bad)
std
push
out
call
or
dec
aaa
int
rcl
test
(bad)
nop
mov
dec
stos
dec
push
cmc
inc
std
arpl
or
mul
jns
dec
push
pop
jmp
rcr
aam
cmp
rol
xchg
fcom
xchg
add
out
adc
shr
push
pop
loop
xor
jle
xor
aaa
fs
push
arpl
lahf
mov
adc
fdivr
jae
gs
imul
es
mov
mov
mov
(bad)
out
out
rcr
ds
call
repnz
outs
and
rol
sbb
sub
push
fbstp
and
dec
cmps
xor
js
test
or
adc
xor
xchg
ds
xchg
cdq
data16
adc
xlat
mov
mov
jmp
std
or
pop
inc
inc
not
sbb
pusha
in
test
shl
xor
dec
ror
icebp
pop
push
dec
out
xchg
mov
hlt
cwde
shl
gs
mov
or
push
ret
leave
or
in
cmc
sbb
jge
add
and
stos
in
scas
mov
pop
jmp
icebp
add
push
scas
inc
lds
push
mov
rol
push
scas
jp
test
mov
icebp
jg
mov
and
push
ja
jp
shl
fnstsw
cdq
test
xchg
leave
cwde
dec
ds
daa
jnp
push
test
enter
mov
jnp
sbb
enter
xchg
cli
mov
inc
stos
jbe
lods
mov
out
xchg
inc
push
int3
and
push
jle
jle
dec
ds
adc
push
sub
jp
cli
mov
pop
fmul
sbb
push
cmps
push
sti
inc
ds
add
pop
pop
mov
push
enter
or
push
fdiv
inc
das
ins
adc
(bad)
mov
rcr
in
add
rol
xchg
jecxz
mov
xor
adc
loopne
xor
jle
call
sti
(bad)
int
jl
dec
push
in
ss
inc
cmc
out
lea
fsubr
cmp
xchg
or
jle
imul
(bad)
out
movs
mov
hlt
adc
push
sbb
cmp
push
cli
in
mov
(bad)
pop
push
push
xchg
xor
xchg
idiv
sbb
ror
ja
aam
fisubr
(bad)
ins
fstp
outs
scas
sbb
sub
mov
add
fwait
std
sub
mov
retf
bnd
(bad)
int
add
lahf
rcl
or
and
push
inc
stos
cmp
push
popf
out
mov
sub
sub
bound
mov
out
mov
jecxz
call
dec
add
aad
xchg
ror
scas
jmp
xchg
inc
jmp
xchg
sub
stos
stc
or
mov
shr
pop
pop
xchg
cmp
mov
inc
jno
sar
dec
hlt
inc
mov
sub
sbb
dec
aas
push
(bad)
jl
add
inc
pushf
add
js
mov
jecxz
xchg
push
adc
int
rcl
call
pop
or
inc
out
(bad)
push
xchg
(bad)
xor
pop
out
shl
int3
pop
stos
or
xor
or
sub
(bad)
shr
sub
sub
inc
and
mov
mov
aaa
cmps
into
cwde
jbe
mov
test
pop
dec
cmp
mov
jbe
ja
fnstenv
arpl
mov
inc
lods
adc
sub
cmc
(bad)
bound
mov
pop
add
pop
call
sub
fstp
xor
fiadd
movs
push
rcr
add
repz
pop
mov
dec
in
inc
adc
movs
push
test
push
cmp
dec
adc
jno
imul
mov
and
into
pop
mov
jo
jb
sub
icebp
cmp
cmc
dec
fnsave
mov
ret
sub
sub
push
xchg
and
mov
call
jo
outs
cmc
arpl
cld
call
pop
mov
into
inc
and
repnz
xor
ds
xor
loope
mov
rcr
add
out
or
ret
data16
cdq
pop
sti
lds
daa
sbb
sti
ins
dec
(bad)
fidiv
data16
mov
cmp
add
enter
mov
and
fisttp
mov
mov
movs
push
sbb
outs
pop
out
push
inc
retf
test
jmp
adc
imul
adc
(bad)
mov
maxps
pushf
cmps
aas
xor
cmp
scas
inc
dec
mov
add
setnp
sub
pop
ja
push
cmp
lods
(bad)
mov
and
jmp
sbb
jge
pushf
cwde
mov
sub
mov
jo
fucom
sbb
and
pop
sahf
mov
push
aam
(bad)
icebp
push
jnp
and
add
ins
mov
dec
in
mov
loop
inc
in
jne
sbb
gs
clc
cld
mov
cmp
ds
sub
xor
mov
jp
push
xchg
sub
add
xchg
imul
mov
int3
cmp
mov
pop
ds
push
(bad)
push
out
in
out
test
or
cmc
mov
sbb
sub
mov
inc
mov
xchg
call
jg
lods
fldenv
and
aaa
push
adc
jbe
jmp
add
enter
cdq
pop
int
scas
cmp
xchg
js
(bad)
jecxz
mov
sahf
shr
fnsave
int3
les
sub
popf
pop
pop
fs
test
lds
mov
mov
jmp
outs
mov
jns
mov
sub
adc
rol
sbb
dec
jg
fnstcw
sub
pop
dec
jg
xchg
(bad)
nop
clc
mov
cli
xor
cmc
sbb
fbld
mov
add
mov
lea
dec
inc
test
lahf
push
inc
mov
jns
idiv
je
push
sub
adc
imul
jo
or
adc
sbb
cmp
jmp
pop
cmp
xor
add
scas
fst
lds
lods
(bad)
mov
inc
sbb
fst
and
je
shr
aad
pop
out
out
call
sbb
rol
fs
and
and
cwde
sbb
xchg
imul
xor
sbb
and
and
xor
mov
div
cmps
(bad)
cmc
in
fs
cmp
mov
dec
inc
das
inc
loopne
(bad)
(bad)
jae
cmp
jb
sahf
add
cdq
xor
in
inc
push
icebp
imul
mov
mov
sub
sbb
sub
cld
shl
ror
movs
loope
pop
ins
sar
cwde
mov
ss
jmp
dec
push
(bad)
jmp
(bad)
lea
(bad)
mov
ret
pop
nop
cmps
sbb
pushf
pop
(bad)
out
cli
es
pop
movs
add
imul
rcl
outs
mov
cmp
push
imul
xlat
(bad)
fxtract
hlt
jns
mov
mov
cld
jae
cmc
dec
cmps
dec
dec
fwait
bnd
in
mov
scas
push
hlt
scas
loopne
aaa
in
xor
clc
sbb
rol
lahf
iret
cmp
and
mov
mov
sbb
fs
pop
adc
int
nop
test
call
mov
dec
fwait
jg
push
scas
push
fcomp
in
mov
in
pop
dec
dec
cmps
jmp
push
gs
pop
gs
mov
test
(bad)
jle
clc
scas
jmp
test
push
ins
sti
scas
jb
daa
(bad)
out
stos
cmp
xchg
std
std
mov
mov
sbb
enter
loop
stos
mov
mov
loopne
adc
stos
jae
cmp
test
mov
xchg
mov
add
aaa
jmp
mov
push
int
call
and
add
sub
cmp
scas
adc
ret
inc
pop
in
xor
lahf
sbb
shl
add
data16
test
pop
pop
jne
dec
repnz
pop
mov
(bad)
dec
call
out
popa
movs
pusha
sbb
push
pop
lds
or
ficomp
mov
cld
jmp
daa
int3
stos
push
ret
mov
daa
sub
ins
and
jo
adc
pop
mov
loop
ret
jo
call
sti
add
and
or
lea
aam
push
and
push
sub
sahf
js
cli
into
cmp
pop
(bad)
jg
int
cmp
or
out
mov
inc
jp
popf
dec
and
sub
xchg
or
jae
dec
loope
test
fxch
cmc
stos
inc
loop
stos
(bad)
icebp
xor
jecxz
add
lea
cmp
fsubrp
nop
push
or
bound
adc
mov
add
out
mov
ja
ret
push
(bad)
mov
pushf
sub
lahf
xor
clc
jp
test
sub
in
mov
cmp
shr
xchg
mov
daa
mov
cli
push
mov
adc
xchg
push
call
fwait
add
pop
or
in
outs
in
(bad)
pop
jmp
push
out
pop
les
adc
xchg
cld
outs
dec
sub
or
xchg
push
add
outs
adc
mov
push
in
push
xor
out
ficom
xor
addr16
stos
pop
imul
cwde
mov
imul
(bad)
cdq
pop
or
mov
push
ja
std
inc
xlat
push
cmps
push
outs
adc
bound
les
cmps
call
cli
mov
mov
(bad)
loopne
mov
dec
ins
xchg
call
pop
jnp
dec
sbb
adc
jo
pop
hlt
push
mov
xchg
and
jge
pop
add
test
cli
sbb
shl
jmp
sbb
and
out
ror
dec
movs
sti
ds
xchg
adc
add
sub
mov
int
jns
dec
mov
or
fwait
mov
es
pop
inc
jmp
xor
es
ja
mov
xchg
aad
mov
cmp
das
and
jle
mov
in
pop
ret
mov
pop
or
out
push
xchg
fisttp
iret
mov
jbe
clc
sub
sub
and
jmp
fmulp
outs
or
push
outs
out
mov
mov
sbb
or
cmp
mov
add
xchg
dec
cmp
jo
mov
pop
and
in
xchg
inc
stos
cmp
cmp
jno
adc
xchg
cmps
sbb
dec
cmp
inc
shr
pop
adc
dec
inc
cld
push
(bad)
std
mov
xor
mov
imul
cdq
into
sub
shr
cmps
pop
or
ins
add
mov
inc
sub
gs
ja
and
in
add
mov
daa
push
ss
(bad)
addr16
or
cmp
cmps
inc
jmp
mov
ss
fadd
mov
mov
mov
jl
add
rcl
xor
push
xchg
test
adc
mov
push
mov
cmp
push
xlat
retf
scas
stos
in
xlat
fmul
rcl
je
mov
gs
pusha
repz
shr
cmps
test
mov
(bad)
mov
mov
mov
pop
and
stos
xchg
loope
data16
stos
push
leave
hlt
inc
jo
mov
pop
jg
leave
(bad)
sti
mov
scas
adc
and
fs
test
fcom
(bad)
pop
lea
or
push
bound
stos
sbb
mov
jno
stos
mov
mov
sbb
sbb
mov
into
sar
cdq
popa
push
retf
dec
xchg
xor
in
in
mov
in
pop
in
mov
jp
dec
enter
mov
adc
cmps
sbb
add
xlat
int3
mov
mov
mov
retf
loope
or
cld
mov
jns
dec
adc
xor
mov
push
addr16
call
stos
(bad)
in
lss
jg
popf
test
push
into
cmp
cwde
lods
mov
dec
cmp
fst
or
cs
fsub
add
pop
pushf
dec
sar
adc
jle
and
les
push
inc
cmps
jne
aaa
scas
and
cmp
sbb
test
mov
rcl
test
xchg
mov
inc
dec
fwait
scas
push
cmp
aas
mov
cmps
inc
pop
into
jp
(bad)
loopne
jno
and
lock
or
je
xchg
dec
dec
movs
and
iret
cmc
das
mov
mov
add
inc
std
js
inc
jnp
inc
push
icebp
jnp
ins
in
call
and
pop
and
loopne
and
ss
add
sub
test
sti
scas
mov
popa
jmp
push
mov
ja
std
mov
push
mov
jno
sub
jo
daa
inc
push
es
lock
xchg
movs
pop
dec
call
mov
clc
or
sub
or
jb
jmp
lea
xor
or
jnp
outs
mov
adc
sub
je
ret
dec
or
iret
into
lock
inc
or
out
shr
hlt
sti
cmc
loope
data16
bound
inc
push
jmp
and
(bad)
(bad)
call
inc
mov
cmp
call
jp
cwde
sar
ffree
mov
and
shl
leave
xlat
pop
xchg
mov
cmp
inc
jo
mov
lock
adc
cmps
stos
in
pop
repnz
fisub
and
push
or
sub
pop
add
or
xor
leave
mov
push
fbld
push
jl
outs
aaa
jb
mov
sbb
fidiv
dec
ret
das
pop
in
loopne
ror
test
mov
pop
outs
in
xchg
adc
retf
and
mov
push
loop
jb
sub
into
fcom
movs
xchg
xchg
xlat
cli
rol
fidiv
out
xor
call
ins
aam
cld
das
and
sbb
sbb
nop
add
call
mov
jmp
adc
xor
(bad)
pushf
out
dec
inc
(bad)
retf
xchg
test
push
outs
dec
pop
fnstenv
ds
das
push
jp
std
sbb
dec
enter
arpl
imul
sub
or
pushf
cmp
(bad)
lds
cs
or
push
cmp
sub
inc
pop
mov
fisttp
test
in
jmp
push
mov
into
push
jecxz
mov
cmp
mov
xor
jbe
pop
or
push
ret
stc
data16
adc
mov
pop
push
add
pop
test
es
dec
and
fldcw
xlat
lods
mov
mov
cld
out
repz
push
and
cmps
shl
mov
arpl
shl
adc
fmul
outs
int
push
sub
mov
rcl
xchg
pop
lds
test
jnp
sub
icebp
loope
mul
outs
pop
xchg
inc
pop
lods
rol
xchg
iret
mov
cmp
pop
sbb
imul
xchg
ins
sbb
mov
adc
mov
pop
lock
imul
mov
test
inc
cmp
hlt
sbb
and
dec
movs
and
addr16
and
xor
ins
in
fs
stos
and
and
cmp
not
mov
jle
xchg
test
xchg
sar
inc
push
mov
mov
jge
push
enter
pop
je
cli
add
data16
jo
ds
stc
nop
stc
cmp
test
fld
lock
arpl
or
xchg
jmp
mov
retf
lods
push
and
lds
int3
pop
call
mov
cwde
pop
mov
jle
retf
iret
or
stc
fstp
inc
mov
sbb
fistp
xor
lods
xchg
pop
push
push
nop
or
jge
ret
fsub
mov
aad
aaa
push
push
lahf
aaa
xchg
mov
add
outs
(bad)
lods
aam
jp
and
lea
xchg
imul
out
cld
iret
lds
les
js
stc
jns
push
sbb
pop
mov
dec
(bad)
mov
repz
jbe
pop
outs
mov
mov
sub
cmps
sbb
mov
sub
loope
dec
xlat
not
aas
fisubr
and
and
stos
inc
and
std
(bad)
daa
fistp
test
(bad)
lahf
addr16
pusha
hlt
mov
jnp
ja
dec
xor
fistp
fcmovu
add
rcl
popa
sub
xchg
cli
jp
and
in
mov
jne
ds
mov
shr
sar
cmps
push
inc
sbb
pop
loope
sar
dec
pop
dec
xchg
adc
out
mov
dec
sub
sub
and
fisub
sar
aad
iret
cmp
xor
lahf
push
aaa
adc
icebp
ret
aaa
loopne
or
dec
pop
xchg
fwait
xchg
(bad)
stc
mov
fwait
jmp
shr
add
push
(bad)
mov
cs
jae
xor
sbb
add
aas
repnz
dec
sub
mov
popf
mov
inc
pop
cmp
in
jnp
push
dec
push
out
in
arpl
sbb
out
mov
jae
inc
loope
pusha
bound
lds
and
xor
sbb
mov
adc
or
or
popf
aas
cmp
shl
xchg
mov
inc
inc
cmp
sar
cli
outs
mov
sbb
dec
mov
inc
(bad)
sub
sub
xor
in
sar
jl
add
jo
aad
out
xor
ins
jge
call
popa
or
xchg
fsubp
loope
shl
popa
rcr
xor
enter
fisub
mov
pusha
rol
(bad)
cmp
pop
data16
int
add
xor
stos
fs
push
cdq
jno
imul
pop
dec
push
test
std
mov
scas
(bad)
jle
dec
cmp
mov
out
scas
jecxz
aam
xchg
jle
hlt
jle
aad
mov
lea
xchg
or
lahf
sub
mov
test
sbb
sub
push
ror
push
aad
or
dec
out
and
pop
ficom
push
das
push
sbb
mov
(bad)
fadd
pop
jp
mov
and
pop
and
clc
lock
lods
cdq
mov
jo
cli
adc
out
daa
and
cmp
dec
stc
fisub
and
ins
std
ds
dec
(bad)
stos
js
test
lds
dec
js
sbb
cmp
ror
test
push
repz
les
adc
jle
imul
cmp
out
nop
test
and
(bad)
jl
sub
mov
push
push
xor
add
cmp
out
inc
test
popf
xchg
jo
adc
loopne
mov
and
ds
bsf
icebp
mov
mov
sbb
or
in
and
repz
into
push
loop
arpl
jo
cmp
add
inc
adc
mov
or
inc
(bad)
mov
fnstenv
in
bound
and
mov
adc
add
sbb
fs
popf
dec
adc
fcomp
stc
push
in
mov
call
xor
cmps
jbe
jle
sahf
cdq
xchg
mov
xor
inc
enter
mov
push
(bad)
and
sbb
aaa
sub
push
xchg
jae
jmp
ins
retf
and
pop
mov
or
xor
movs
jae
mov
push
div
sbb
data16
xchg
pusha
inc
mov
xchg
dec
int
pop
mov
sub
add
mov
xor
cmp
pop
sub
push
push
xor
loopne
shr
pop
shl
repnz
inc
pop
mov
and
fstp
cwde
xchg
(bad)
movs
test
xor
inc
ror
(bad)
cmp
in
popf
ins
sub
xchg
aam
pop
out
cmp
std
into
inc
mov
cmp
jmp
fcomp
pop
fsubr
and
or
fwait
cmp
push
and
or
push
ss
(bad)
inc
lods
adc
xchg
pushf
leave
sbb
cmp
mov
out
adc
xrelease
xchg
push
jle
and
xor
popa
or
pop
add
out
sub
and
mov
mov
dec
loopne
or
inc
jno
inc
add
lods
or
xchg
inc
ret
shl
jl
sub
cdq
sbb
(bad)
loopne
mov
xor
xchg
mov
cwde
xchg
xchg
inc
or
jo
test
xchg
popa
std
jns
jb
fdiv
push
mov
adc
and
sub
xchg
xchg
mov
xchg
loopne
std
cmp
fcomi
fdivrp
hlt
or
cmp
add
into
pop
shl
test
jle
scas
movs
aam
dec
out
(bad)
add
pop
ins
or
inc
cwde
ins
mov
jae
pop
push
repz
int
push
lods
adc
iret
and
pop
cmps
addr16
jno
fimul
rcl
shl
lahf
add
jns
jge
or
iret
out
pop
ficomp
je
jmp
mov
push
pop
retf
dec
leave
mov
fild
jge
or
add
cmp
ins
pushf
or
pushf
popa
jne
sti
fcom
repnz
or
out
jl
inc
mov
(bad)
fcomi
cmps
gs
jb
into
mov
sti
dec
dec
adc
and
pushf
add
jg
add
sbb
xchg
sti
(bad)
call
test
(bad)
ja
je
mov
aas
jg
dec
(bad)
fadd
add
push
hlt
cld
outs
addr16
paddsw
sub
cdq
sar
pushf
push
clc
mov
inc
bound
inc
les
or
loopne
and
packsswb
xchg
mov
dec
lea
push
xchg
jnp
sar
(bad)
out
and
add
or
lods
cmp
add
pop
fist
push
lea
and
ss
pop
es
fstp
lods
retf
inc
add
es
iret
popf
sbb
fucomip
cmp
or
and
mov
inc
idiv
jge
stc
mov
fsubr
xor
in
inc
mov
mov
xchg
je
cs
jmp
add
jne
rcr
mov
bnd
sti
cld
fisubr
div
cs
xchg
cmp
lock
retf
add
(bad)
xchg
nop
xchg
and
imul
mov
xchg
add
out
inc
xlat
inc
es
js
aas
adc
adc
push
fsub
push
xchg
lahf
adc
add
or
cld
push
std
bound
shl
imul
add
mov
nop
sub
and
(bad)
xor
stos
bound
or
sub
sbb
push
mov
jno
mov
lock
stos
inc
mov
sbb
sub
(bad)
call
mov
fild
jecxz
or
call
inc
(bad)
inc
pop
mov
retf
cmp
mov
mov
stc
clc
or
mov
push
mov
sbb
lods
xchg
cmc
push
mov
dec
movs
cmp
imul
or
add
int
or
cmp
pop
push
xor
cmp
(bad)
jp
jmp
in
cdq
sti
pop
xor
adc
mov
fwait
cli
fldl2t
cmp
and
fistp
cmp
iret
aam
scas
mov
jl
test
test
rcl
sti
lahf
jge
retf
mov
xor
dec
mov
loope
xchg
and
in
sub
std
pop
mov
movs
pop
xchg
out
and
cmp
xchg
imul
mov
jge
outs
je
js
mov
fnstsw
xchg
dec
aad
adc
sub
mov
mov
push
mov
ins
lahf
mov
lea
xchg
sbb
pop
mov
stos
rcr
imul
mov
loopne
mov
adc
leave
mov
mov
jae
pop
test
pop
mov
inc
sahf
loope
dec
pop
les
mov
pop
sbb
cmp
sub
adc
scas
sub
enter
sub
pop
xchg
cmp
arpl
push
jo
adc
lds
sar
mov
mov
or
pop
cmp
jns
and
or
ficomp
or
cld
sbb
lods
fsub
mov
cmps
xchg
pusha
jns
mov
cmp
call
cmp
int
pmuludq
sub
loopne
or
mov
aas
sbb
shr
and
(bad)
leave
mul
sub
lahf
lock
dec
add
sbb
int
not
jle
or
pushf
dec
xor
dec
test
ins
add
sahf
xor
or
pop
xor
jg
push
mov
lods
gs
cmp
cmp
inc
sub
and
xchg
stos
sub
retf
shr
sbb
mov
pushf
psubusw
stos
and
iret
and
mov
push
xchg
jns
mov
enter
aaa
dec
imul
cmps
cmp
xor
or
movd
ss
ss
mov
sbb
inc
repnz
and
and
aas
nop
test
scas
dec
jge
data16
inc
sahf
jmp
mov
ja
shr
mov
movq
pop
sbb
cmps
scas
and
dec
xlat
fstp
mov
js
int3
mov
(bad)
cmps
popa
ret
push
call
lods
lea
lds
pusha
js
fdivr
out
inc
nop
mov
retf
loope
scas
cld
fld
mov
mov
jae
call
sub
push
(bad)
add
push
push
out
cmps
dec
ret
cmp
stc
dec
push
and
adc
adc
cmps
js
mov
test
leave
pop
push
adc
sbb
push
repnz
xchg
jmp
outs
and
cs
cmc
daa
dec
or
(bad)
push
jne
or
sbb
add
xor
xor
mov
pop
mov
in
sub
jmp
into
or
bound
rol
sub
not
fild
lods
inc
out
inc
mov
pushf
or
cmc
sti
fsubr
sub
sub
arpl
in
or
adc
les
pushf
adc
sub
xor
fdiv
(bad)
repnz
ja
fcom
or
push
cdq
(bad)
(bad)
leave
cmps
jnp
add
jb
push
sub
push
dec
inc
pop
je
bound
pop
mov
push
loope
aas
rol
adc
jecxz
mov
addr16
push
repnz
dec
inc
adc
out
packuswb
(bad)
stc
icebp
xchg
sub
adc
call
cmp
pusha
jne
xor
je
lods
mov
outs
lock
jae
push
ret
fdivr
cmp
lock
jecxz
mov
repz
sbb
xor
or
cdq
jmp
iret
sbb
out
idiv
leave
inc
jb
outs
pop
xor
shl
or
loop
cmp
lods
push
pop
fidiv
popf
mov
rcl
xor
movs
mov
adc
sbb
or
sub
gs
add
aaa
test
ja
mov
lods
sub
scas
push
and
xor
mov
push
xor
push
push
dec
repnz
sbb
dec
cmp
push
inc
into
mov
js
mov
adc
xor
repnz
add
xchg
popa
mov
popa
mov
loope
cmp
mov
hlt
mov
or
mov
test
cmp
test
cmp
inc
mov
dec
lock
adc
push
iret
xchg
hlt
js
bndstx
jne
push
jb
adc
mov
gs
inc
(bad)
sahf
rol
sub
aad
jmp
(bad)
(bad)
inc
mov
dec
mov
pop
fcomi
rol
sub
test
xlat
mov
stc
inc
pop
cmps
popf
pop
call
mov
cmps
mov
(bad)
adc
cwde
mov
rcl
gs
or
mov
nop
fst
adc
bound
or
or
lahf
(bad)
mov
neg
cmps
arpl
sbb
fwait
cmp
mov
pop
jge
push
div
sub
ret
pushf
popa
gs
mov
cmp
mov
mov
dec
call
mov
mov
movs
out
(bad)
or
loopne
jle
std
ss
psllq
stc
ins
xchg
(bad)
xchg
repnz
lea
lds
mov
scas
mov
pop
add
scas
and
call
xchg
sub
sub
or
fcomp
xchg
(bad)
adc
je
and
stc
ret
bound
pop
loop
dec
sub
daa
mov
test
dec
inc
sti
bound
or
sbb
jo
xor
sbb
sub
jecxz
adc
std
stos
xor
rcl
pop
dec
xchg
test
mov
sub
jb
daa
adc
inc
out
cmp
push
xchg
leave
stos
jle
hlt
sbb
into
aaa
pop
sbb
cmp
clc
or
cld
xchg
pop
xor
sbb
out
leave
outs
outs
arpl
inc
lahf
(bad)
push
push
rcl
add
sti
cmp
clc
mov
jb
mov
test
fldlg2
cmp
cmp
xchg
stos
xchg
dec
leave
mov
inc
dec
lea
adc
fisttp
add
mov
inc
out
imul
gs
fstp
pop
xcrypt-cbc
cmps
(bad)
jmp
push
adc
test
xor
aas
addr16
push
aam
jnp
mov
popf
cmp
push
sbb
adc
retf
aad
mov
and
inc
push
test
ret
icebp
jns
xchg
jns
jecxz
aad
pop
call
jno
push
rcl
enter
(bad)
add
mov
cli
adc
sti
sbb
push
jge
sub
ret
popa
add
outs
push
ds
sbb
sahf
pmullw
fcomp
js
stc
mov
jbe
mov
mov
push
cmc
fwait
loope
stos
(bad)
call
xchg
mov
mov
xchg
scas
add
xchg
inc
pop
std
(bad)
and
vcmpps
stos
mov
pop
or
pop
lahf
out
sbb
arpl
fs
test
mov
jnp
mov
and
add
jg
push
popa
adc
gs
dec
or
sbb
aas
jge
mov
adc
mov
push
hlt
int
(bad)
fsubr
jle
and
repz
push
jg
xor
pop
(bad)
mov
push
movs
fwait
xchg
ja
pop
dec
mov
test
xchg
(bad)
xor
arpl
push
jge
sbb
push
push
adc
movs
in
imul
imul
mov
cmovbe
(bad)
push
xchg
(bad)
loopne
or
mov
ja
mov
mov
adc
repnz
sbb
cmps
imul
test
iret
dec
out
addr16
sub
retf
ja
push
mov
mov
int
cdq
pop
mov
add
mov
jno
mov
lahf
cs
inc
(bad)
fdiv
jmp
cmp
cwde
loope
iret
imul
xor
adc
mov
aaa
test
pop
clc
sbb
lods
and
inc
sbb
sbb
inc
(bad)
sub
in
int3
aas
cmp
xor
(bad)
(bad)
and
mov
and
shl
es
cmp
popf
stos
xchg
dec
ds
mov
loopne
mov
sbb
cmps
push
icebp
fldcw
add
ss
jb
xchg
ja
xchg
shl
sbb
mov
sub
and
cld
loop
inc
mov
adc
xchg
lods
xor
adc
dec
dec
or
daa
imul
push
call
inc
jb
cli
mov
mov
out
or
(bad)
retf
mov
pop
push
loopne
lock
pop
pop
or
fsubr
in
bt
inc
ins
cmc
repz
enter
mov
hlt
in
jno
and
xor
add
scas
push
or
jo
jmp
mov
aaa
pop
jae
shl
lods
and
inc
xor
repz
loope
dec
and
pop
push
mov
xchg
sbb
hlt
add
cmp
aam
xor
aaa
int
push
sub
add
xor
popf
mov
sti
dec
jmp
js
xchg
ret
and
cmp
sar
dec
jne
stos
jo
add
mov
movs
out
push
jmp
aam
add
es
cli
push
inc
ret
jmp
or
xchg
movs
pusha
inc
xor
pop
fnsave
sub
or
pop
sub
out
ss
cmp
mov
xor
fist
in
mov
cli
outs
mov
cwde
int
pop
cmp
and
jmp
out
lods
xchg
fstp
cmp
dec
pop
xor
mov
mov
in
aad
push
xchg
sub
pop
jmp
cmp
jmp
push
and
sbb
cdq
and
or
daa
std
cmc
cmc
mov
dec
sbb
jmp
int
(bad)
retf
fdivp
ret
or
iret
add
cmc
les
fdivr
inc
pop
pop
sub
or
loope
cmp
lahf
loopne
dec
push
xchg
add
mov
neg
loope
jbe
retf
loopne
fdiv
mov
push
clc
aam
out
dec
mov
and
pop
fisttp
xchg
ja
adc
adc
sub
cld
dec
mov
jo
adc
cwde
outs
jb
movs
stos
mov
mov
movzx
jo
pushf
inc
ret
push
sbb
mov
fstp
cmc
ja
(bad)
lods
add
jae
imul
jmp
fidivr
rcl
mov
fcmovb
push
inc
cmp
add
dec
jbe
sub
in
into
in
mov
pop
pop
(bad)
cmc
test
mov
je
call
outs
add
add
mov
daa
shl
sbb
call
sub
pusha
adc
or
or
mov
test
sub
loop
xor
lock
pop
jns
stos
dec
pushf
lds
push
icebp
mov
push
and
popf
cmp
sub
mov
jb
xor
ins
jo
inc
leave
jo
dec
ficom
pop
mov
pop
inc
jge
je
dec
mov
sbb
call
out
test
push
mov
popa
mov
retf
pop
inc
and
push
sub
cmp
out
pop
std
sbb
xchg
sbb
add
mov
aas
call
jmp
lahf
sbb
push
adc
mov
in
ss
imul
rcl
or
dec
aas
mov
retf
cmovno
(bad)
enter
outs
test
ss
mov
es
or
das
aad
mov
inc
jne
loopne
cmps
pop
jns
icebp
dec
push
lahf
mov
sub
sub
xchg
and
movs
sub
mov
xchg
mov
nop
rcl
xchg
lods
fisub
xor
outs
ins
adc
(bad)
jno
imul
jp
sbb
xchg
ins
sbb
hlt
jmp
dec
push
adc
mov
ja
pop
scas
adc
ds
mov
or
jbe
jbe
cmp
mov
mov
je
jmp
mov
sub
dec
jecxz
int
sub
ret
xor
mov
in
call
pop
sbb
cmp
push
adc
in
movs
mov
loope
bound
pop
jae
mov
shr
in
(bad)
inc
retf
pusha
icebp
mov
movs
pop
sti
push
cmp
imul
sbb
jns
test
lea
out
bound
sbb
mov
jnp
xor
mov
out
aaa
retf
or
xor
pop
xchg
and
es
sub
icebp
cs
lahf
sahf
add
mov
adc
test
hlt
ret
sub
shl
das
push
jg
inc
push
jno
xchg
xor
cmp
jnp
xor
pop
mov
(bad)
adc
adc
sbb
xor
pop
sti
xor
ret
ins
dec
xchg
and
mov
jle
jae
jle
call
cmp
cmps
sahf
cmp
dec
repz
push
mov
add
stos
mov
jmp
(bad)
out
sbb
mov
sti
sbb
movs
xor
jae
push
cli
inc
fild
dec
ret
fist
fcmovnbe
cdq
clc
push
mov
not
inc
sbb
jo
push
int
pop
pop
mov
cdq
hlt
sar
leave
out
adc
ds
pop
ror
mov
mov
mov
stos
es
fwait
xor
ror
jo
inc
mov
or
inc
and
pop
ss
dec
pop
push
test
dec
xor
es
lods
sbb
cmp
loope
test
out
fisttp
aad
inc
test
xchg
and
push
call
and
jb
fsub
and
ins
lahf
jp
adc
cs
mov
lods
inc
aam
mov
imul
fsubr
clc
mov
ffree
adc
inc
ins
push
les
pop
ins
fadd
adc
pop
(bad)
repz
add
mov
dec
(bad)
xchg
in
xchg
xor
or
jle
adc
in
(bad)
ins
pop
jb
push
push
sub
mov
mov
icebp
sbb
(bad)
fdivr
add
call
test
sub
dec
fst
jo
retf
xor
xlat
or
neg
lods
cli
ret
leave
out
or
xor
icebp
jl
inc
mov
xor
inc
dec
gs
adc
jmp
fwait
push
int
jo
xchg
iret
sub
add
mov
pop
xchg
ja
push
jne
lea
dec
lock
sub
mov
add
and
mov
jae
jg
push
ror
inc
fs
push
push
out
push
ja
mov
xchg
pop
push
out
fisub
pop
mov
add
aam
dec
jl
sbb
ret
cmps
sub
aas
pop
repnz
das
mov
or
(bad)
cld
into
into
mov
cmp
inc
inc
pop
cmp
mov
push
add
dec
xor
jno
repnz
bound
jl
out
push
ins
mov
add
bound
aam
adc
xchg
add
test
push
sbb
pusha
lahf
test
mov
inc
(bad)
jns
imul
fs
in
dec
sbb
(bad)
fidivr
lods
or
push
pop
pop
xor
ins
test
das
test
mov
fwait
mov
cmp
jne
add
add
ret
xor
mov
es
out
jno
jno
mov
test
adc
sbb
cmp
mov
inc
push
mov
push
fmul
cmp
dec
xchg
not
sbb
sbb
jp
and
fwait
or
sbb
sub
jno
mov
jmp
movs
loopne
lods
sbb
int
pop
popa
inc
call
ror
push
adc
ja
mov
jbe
mov
jbe
jne
mov
test
adc
xchg
sti
ret
sub
fcomi
ds
and
scas
aam
mov
dec
scas
xchg
out
pop
dec
(bad)
int
sbb
pop
in
jmp
lods
adc
arpl
pop
movs
adc
imul
add
test
push
popa
rcl
ret
xchg
mov
adc
mov
mov
pop
in
loope
pop
or
cdq
push
dec
aas
in
xchg
sbb
sbb
je
(bad)
imul
jge
lock
adc
lea
sub
mov
movs
jns
add
dec
push
and
xor
mov
dec
jb
ins
inc
pop
inc
(bad)
lock
out
jmp
fadd
xor
sbb
and
in
xor
sbb
sbb
int3
test
dec
jle
xor
mov
jae
and
addr16
push
out
mov
clc
push
push
cmps
xor
push
add
test
call
cmc
jno
ss
lods
sbb
in
mov
lods
fdiv
jnp
mov
pop
jle
add
mov
(bad)
push
push
ret
mov
lock
jge
jns
outs
(bad)
sar
xchg
and
fucomi
inc
dec
aam
and
push
push
or
xor
outs
std
jl
hlt
call
dec
js
fsubr
add
in
fmul
xchg
jmp
out
outs
retf
fld
dec
(bad)
lds
nop
fiadd
shl
icebp
mov
inc
repnz
pop
and
dec
shl
xor
(bad)
mov
mov
mov
test
dec
test
jmp
jmp
jb
ror
(bad)
in
push
bound
pop
xchg
jmp
pop
rcl
cli
sub
imul
mov
jl
pop
ret
pusha
and
mov
dec
ja
retf
or
add
loop
and
dec
int
inc
into
xchg
nop
aam
repnz
mov
xor
xor
mov
dec
adc
fcmovu
or
inc
dec
and
(bad)
pusha
popa
sar
mov
xlat
sbb
std
jnp
mov
cmp
dec
imul
sbb
mov
add
xchg
cmp
in
dec
outs
retf
je
add
out
push
and
jae
lock
jnp
int
add
scas
adc
jae
bound
cs
push
or
outs
pushfw
adc
cli
and
retf
cwde
inc
inc
dec
lahf
adc
daa
ss
inc
(bad)
sbb
mov
xchg
int
sbb
cdq
inc
cli
or
fwait
lahf
dec
lods
dec
out
pushf
or
push
(bad)
jb
sbb
cmp
out
mov
push
mov
cdq
xor
fwait
push
mov
push
jnp
add
retf
retf
inc
fnstsw
aam
stc
cmp
or
hlt
pop
cmc
rcl
mov
mov
push
aam
adc
fs
add
jle
dec
js
int3
gs
test
in
icebp
sub
mov
fsub
cdq
push
xchg
push
nop
movs
or
iret
fwait
xchg
loope
idiv
and
daa
and
(bad)
fwait
xchg
mov
jl
mov
and
add
std
adc
mov
jnp
sbb
mov
sahf
arpl
shl
push
xor
(bad)
jp
add
xor
mov
xchg
arpl
js
cmp
inc
xchg
lods
or
xchg
mov
xor
outs
push
mov
push
dec
ror
imul
pop
shr
fst
mov
ins
fdivr
sub
loopne
jecxz
das
ss
pop
xchg
push
(bad)
ins
popa
dec
fnstcw
mov
imul
mov
push
mov
mov
mov
in
cmp
lahf
inc
dec
xchg
mov
mov
xchg
out
addr16
call
dec
xor
cmp
mov
xor
frstor
call
cdq
dec
ja
or
adc
or
ss
sub
les
fbstp
mov
mov
mov
xchg
sar
cmp
xor
aam
aad
jge
push
and
xchg
popf
xor
or
add
sbb
push
call
ins
arpl
jmp
push
fsub
pop
and
mov
fsub
jle
sbb
mov
inc
inc
mov
jb
jno
out
call
fmul
pusha
ror
dec
pop
xor
cmps
sbb
jle
(bad)
push
sbb
nop
sar
enter
push
adc
cwde
jl
and
rcl
aas
test
scas
test
mov
push
xor
test
jne
mov
inc
fistp
jg
in
xchg
cmc
and
fchs
cmp
(bad)
mov
ss
xchg
enter
cmc
mov
movs
aas
rcl
cs
jb
and
shl
data16
(bad)
push
in
das
inc
daa
rcr
jmp
nop
sbb
pop
mov
mov
pop
jmp
jnp
sbb
fidivr
pop
jge
xlat
stos
inc
fcomp
mov
je
pusha
xor
sbb
mov
fistp
adc
(bad)
sub
fs
pop
mov
or
push
mov
mov
dec
cli
test
push
sahf
aas
fstp
es
js
es
js
mov
outs
inc
retf
sbb
in
ins
sar
leave
sub
into
jae
cs
dec
ss
xchg
leave
aad
mov
and
addr16
inc
(bad)
int
xor
loop
(bad)
and
mov
aam
jecxz
shl
mov
inc
jns
ja
repz
ret
dec
jb
jg
scas
lods
outs
jnp
data16
mov
sbb
or
mov
lds
xchg
out
mov
adc
fwait
xor
cmc
mov
sub
stos
pop
push
test
mov
popf
adc
inc
dec
or
mov
adc
mov
dec
retf
cmp
adc
mov
jmp
jo
out
xor
jmp
loop
les
jmp
jg
iret
sub
push
jmp
sbb
sbb
dec
pop
cmp
adc
sahf
idiv
das
retf
call
ins
sbb
mov
inc
mov
mov
xchg
xchg
jo
mov
jnp
xor
xlat
adc
push
fisubr
repz
push
push
outs
imul
xor
aas
out
rcr
and
mov
cmp
jge
(bad)
rcl
cmc
lahf
xchg
dec
je
cmp
test
mov
test
cmp
outs
cld
cld
jge
call
int3
mov
sahf
js
ret
into
jno
inc
mov
push
rcr
mov
cdq
inc
sar
cmps
lock
or
pop
in
jne
push
shr
cmp
fucomi
pop
pop
hlt
jle
sub
push
in
js
in
inc
push
sbb
test
inc
(bad)
ja
fidiv
and
mov
push
scas
cmp
push
lea
and
push
sub
sahf
adc
test
aaa
adc
imul
sbb
jne
xor
cdq
and
push
dec
dec
push
mov
push
es
xchg
pop
shr
adc
mov
dec
jg
aaa
lods
jmp
sub
int3
popa
and
scas
xchg
and
rol
push
aam
pop
or
or
xchg
push
cli
jnp
jl
inc
or
(bad)
js
daa
daa
mov
pop
mov
mov
sbb
inc
ins
sbb
adc
jo
push
pop
adc
inc
lahf
mov
sahf
lods
dec
test
mov
aad
push
xor
out
cmps
dec
mov
xchg
rol
aas
call
test
pop
push
mov
test
add
mov
adc
xchg
add
jmp
ja
stc
push
sbb
mov
sub
mov
fs
fsubp
sbb
scas
jg
int3
scas
fidiv
jae
adc
cmps
fadd
cmp
shl
cli
xlat
jno
sub
xchg
imul
add
jmp
sar
lods
jge
mov
mov
push
lds
push
xchg
into
out
sbb
pop
(bad)
inc
jl
cmp
xor
mov
cwde
in
cdq
lahf
mov
das
sbb
das
or
ja
xchg
fs
xor
pop
jae
dec
mov
into
mov
mov
mov
xor
mov
add
mov
(bad)
fnstsw
clc
jne
imul
cmp
sbb
adc
adc
test
fimul
(bad)
call
cmp
shr
pop
cmps
out
push
stc
loop
(bad)
ins
add
mov
std
fs
dec
ds
mov
mov
jle
test
fcom
dec
repz
into
mov
out
mov
add
aam
push
ret
ja
fs
jmp
out
int3
(bad)
dec
pop
mov
fcom
shl
lahf
mov
cmp
mov
push
sub
inc
mov
popa
inc
and
jno
push
mov
sar
mov
ror
xchg
pop
pop
test
mov
aad
mov
mov
pushf
fcomp
fisubr
int
pop
ss
lahf
jmp
into
sub
popa
repz
mov
mov
and
or
retf
fistp
adc
sub
or
in
sbb
std
hlt
leave
sub
ss
ja
add
push
call
mov
lahf
pop
mov
xchg
dec
mov
in
daa
mov
int
ss
test
out
pop
dec
cmp
or
sub
jecxz
mov
inc
dec
test
int
ss
inc
push
and
nop
mov
and
sbb
jecxz
shr
mov
adc
cmp
inc
or
gs
ins
stc
test
aas
sub
sbb
(bad)
pop
push
jmp
call
in
pop
scas
std
xchg
pop
ja
rol
(bad)
xchg
add
mov
shl
shr
mov
enter
inc
(bad)
push
lods
sbb
or
out
jns
mov
adc
mov
stc
shr
cwde
pop
jmp
or
test
retf
and
outs
data16
clc
mov
inc
adc
xchg
xor
mov
mov
mov
sti
retf
and
xor
imul
pop
fsubp
add
retf
test
dec
jmp
sbb
pop
loopne
sti
daa
mov
loopne
cmps
into
retf
ds
scas
mov
sbb
mov
data16
int3
mov
clc
hlt
mov
mov
pop
or
mov
retf
repz
adc
int
cmps
mov
fld
dec
movs
xchg
bound
lods
dec
sbb
(bad)
pop
push
xor
push
xor
sub
ins
fldl2e
outs
pushf
jne
sub
pop
int3
popa
lahf
fild
push
iret
addr16
sub
shl
or
dec
mov
(bad)
rol
jb
push
lods
and
mov
mov
pop
out
(bad)
xor
pushf
ret
ret
pop
push
push
xchg
sub
int
sahf
mov
mul
or
lock
int3
mov
in
aas
xchg
ret
aad
stos
cmp
xchg
jmp
mov
stos
clc
sbb
push
jmp
jb
adc
std
push
jnp
hlt
pop
or
call
cmp
outs
xchg
(bad)
cmp
pusha
mov
jb
xor
xor
(bad)
shl
mov
xor
jae
push
or
imul
imul
std
test
test
xchg
pop
scas
adc
jno
test
sbb
ins
or
ror
scas
push
and
push
ins
xchg
push
ror
adc
mov
test
into
or
sbb
inc
mov
push
dec
pop
cdq
xor
or
sub
xchg
bound
je
test
retf
mov
das
(bad)
jns
leave
push
lods
loop
cmps
mov
in
fldcw
stc
and
(bad)
sbb
or
adc
push
sahf
out
jle
or
push
pmuludq
(bad)
and
popf
gs
nop
mov
(bad)
pop
sub
pop
daa
adc
rol
retf
and
inc
cmp
iret
out
mov
js
scas
sbb
mov
into
mov
pop
cmc
push
or
(bad)
nop
dec
pop
lds
fiadd
inc
loopne
in
push
cs
movs
cmps
mov
pop
enter
sub
(bad)
stos
xchg
jmp
dec
clc
pop
jmp
sbb
cmp
mov
or
or
and
lahf
jl
sub
fldenv
or
xchg
repz
xor
jle
daa
lods
call
or
(bad)
fiadd
xor
pop
shl
mov
(bad)
rol
xchg
jo
cld
lods
dec
out
ins
daa
add
or
and
and
xchg
adc
fisttp
add
(bad)
and
aas
cmc
dec
adc
jmp
cwde
ds
inc
cmp
lods
lahf
stc
sbb
dec
adc
jmp
pop
push
mov
dec
int3
cmp
xchg
into
dec
push
cmp
jecxz
inc
mov
sub
pop
mov
mov
dec
inc
push
call
pop
and
imul
inc
daa
retf
jbe
rcl
pop
push
xchg
mov
mov
and
pop
mov
mov
jbe
bound
sti
repnz
scas
nop
loope
mov
push
push
call
hlt
int3
(bad)
xchg
ss
(bad)
pushf
hlt
idiv
call
push
imul
loopne
aad
push
pop
sahf
mov
imul
div
cmp
mov
in
rcl
(bad)
mov
out
adc
repz
add
xchg
stos
pushf
mov
xchg
mov
loope
rcr
aaa
ret
xor
dec
lods
cwde
xchg
cdq
push
or
jmp
mov
cmp
mov
int
int
pop
jo
lock
rcl
aaa
xor
xor
inc
jmp
addr16
aas
imul
mov
mov
xor
push
aad
rcr
dec
mov
mov
int3
lods
adc
pop
mov
jp
jle
mov
pop
or
loopne
test
push
xchg
xchg
neg
push
mov
push
ss
push
push
jl
imul
fs
(bad)
pop
mov
addr16
jg
push
cdq
mov
loope
mov
cmc
and
add
push
add
sbb
dec
sbb
or
push
call
xor
push
or
mov
adc
test
lods
sbb
fs
cmp
jnp
scas
mov
inc
or
push
lods
pushf
out
jb
sub
xor
adc
cmp
mov
push
ss
lods
ror
mov
shl
dec
or
and
mov
mov
aas
jno
adc
ret
xor
test
movs
inc
ins
fild
pop
jo
sbb
ret
cmps
xor
ja
jnp
mov
and
mov
sti
xchg
sbb
or
sbb
mov
cs
(bad)
mov
push
mov
movs
jge
iret
shl
push
xchg
push
int
push
jle
add
mul
xchg
dec
out
sbb
mov
xlat
adc
in
scas
out
cmp
add
inc
les
loope
jmp
aaa
sahf
mov
cmp
xor
mov
pop
jns
test
dec
mov
loopne
addr16
mov
jne
dec
xor
jae
or
sar
add
test
lods
lods
daa
add
int
sbb
jne
test
rcr
js
dec
sahf
inc
(bad)
lods
inc
push
jl
out
int
sub
mov
arpl
in
fisubr
add
std
sti
inc
scas
mov
imul
sbb
leave
cvtpi2ps
adc
sbb
jle
ja
xchg
jno
ins
sub
cdq
xchg
push
sub
stc
stos
mov
xchg
sub
or
pop
mov
jo
ins
data16
dec
sbb
adc
bound
mov
and
or
movs
inc
call
or
inc
mov
mov
fst
xchg
push
adc
mov
pop
xchg
fmul
push
out
sbb
sub
aam
dec
aaa
sbb
add
jp
scas
sbb
outs
mov
jecxz
lahf
inc
mov
jb
inc
test
mov
test
enter
add
ins
jnp
lock
stos
lods
ss
xlat
mov
stc
dec
mov
dec
scas
adc
sub
aaa
sub
daa
cdq
mov
mov
cmps
pop
arpl
lods
inc
test
dec
hlt
sub
cmp
mov
mov
outs
mov
and
adc
out
int
add
mov
cld
jnp
or
sbb
hlt
inc
or
mov
repnz
mov
xor
jns
rcr
mov
call
clc
test
out
mov
xor
loope
pushf
lock
push
pusha
cmp
xchg
cs
mov
jno
mov
dec
pop
pop
lods
mov
mov
push
push
loope
mov
gs
push
xor
fs
ret
sbb
out
std
arpl
sbb
out
(bad)
lock
jmp
enter
xchg
(bad)
jmp
stos
fst
fld
or
and
ror
ds
(bad)
jmp
push
das
mov
outs
(bad)
and
mul
inc
stc
inc
pop
repnz
lock
xor
pop
pop
sub
(bad)
mov
test
mov
fidiv
imul
ret
(bad)
call
cmp
xchg
stc
jecxz
fist
(bad)
mov
outs
call
movs
xlat
sub
pop
mov
mov
and
test
(bad)
ds
std
cmps
stos
jl
bound
mov
ss
xor
mov
add
(bad)
in
sbb
fld
test
xor
xor
push
fisubr
cld
in
lods
retf
mov
sti
jnp
call
and
jp
inc
dec
pop
add
xchg
aas
push
rcl
jne
imul
or
fldcw
aad
lds
mov
xchg
pop
jge
or
xor
xchg
mov
iret
das
pusha
(bad)
push
lea
scas
sub
nop
jge
data16
popf
push
neg
arpl
mov
cdq
mov
push
lock
out
pop
rcl
cdq
inc
sbb
cmps
sbb
ret
mov
cs
xor
xor
mov
xchg
fstp
pop
movs
(bad)
shr
leave
daa
push
jae
push
outs
out
jge
sub
push
iret
lods
out
adc
call
call
std
sahf
push
ds
jmp
ss
jmp
dec
retf
cmp
xchg
(bad)
gs
sub
cmp
cmps
adc
cmp
test
adc
fimul
adc
cmp
sti
outs
outs
cmps
mov
inc
popf
into
sub
test
cmp
mov
xchg
xchg
pusha
jae
cmp
gs
mov
mov
fcom
fucomp
mov
ins
mov
xor
sub
cmc
push
movs
hlt
pop
data16
mov
push
sub
popf
jno
xor
aam
or
in
pop
inc
and
inc
popa
movs
in
fmul
dec
jno
(bad)
mov
arpl
or
je
jbe
stc
adc
push
or
shl
xor
xchg
enter
es
aam
cld
shl
iret
mov
mov
and
dec
mov
xchg
fucomi
arpl
mov
es
dec
dec
(bad)
in
imul
push
into
push
sbb
mov
xor
push
loopne
and
and
jne
pusha
mov
(bad)
sti
push
test
outs
rcl
push
mov
pop
into
pop
(bad)
sub
sbb
pop
mov
cmp
(bad)
jmp
adc
jne
mov
arpl
jae
inc
mov
jo
mov
lock
or
int
ins
adc
mov
jg
movs
mov
sbb
imul
retf
ins
xchg
(bad)
in
dec
cmp
aaa
in
adc
test
outs
pusha
iret
mov
sub
mov
and
and
in
xor
push
mov
jb
or
xor
add
cmp
adc
mov
add
jmp
pop
shl
int3
arpl
rol
mov
xor
mov
inc
movs
ds
add
xor
sbb
imul
sahf
cmp
lods
jne
stos
fcmove
icebp
inc
xchg
adc
clc
ds
es
test
jecxz
les
into
std
and
adc
(bad)
fisubr
scas
jb
and
ins
mov
out
push
shr
imul
mov
or
or
(bad)
sub
(bad)
and
test
mov
and
sub
or
cmp
out
in
aam
mov
and
mov
jns
inc
test
enter
repz
shr
movs
dec
in
ins
mov
stos
jo
call
xor
test
sub
mov
mov
enter
lock
mov
loopne
xchg
cli
loope
sub
and
sbb
jle
and
push
icebp
ja
rol
pop
cmp
inc
cmps
cmp
xor
mov
and
sbb
sbb
add
mov
mov
js
je
aas
jns
retf
xor
adc
push
in
adc
popa
mov
inc
push
fmulp
or
sahf
add
sahf
scas
xchg
adc
dec
sahf
ret
scas
sar
ins
mov
sbb
jge
mov
adc
push
mov
icebp
sti
cmp
xchg
jecxz
sub
push
mov
ss
mov
sub
shl
shl
sub
pop
push
test
es
mov
inc
es
jns
nop
mov
mov
mov
push
sahf
xor
xor
pop
adc
fldenv
fwait
and
cmp
retf
fcomp
mov
repz
push
push
inc
popf
test
xor
push
xor
and
or
pop
pusha
jp
xchg
adc
cs
push
cmp
cmp
sub
sub
mov
not
or
jbe
pop
jae
call
into
movmskps
xor
adc
rol
mov
pop
cmp
setb
jg
inc
nop
xchg
mov
pop
and
mov
add
(bad)
xchg
arpl
sahf
int
fbstp
bound
out
aaa
inc
enter
out
pop
sbb
xchg
lods
ins
mov
pop
dec
div
arpl
push
hlt
nop
push
sub
in
scas
dec
out
test
fistp
stos
lea
inc
lahf
js
and
gs
xchg
jns
cmp
pop
(bad)
test
(bad)
sahf
jns
rcl
pop
call
jbe
test
push
outs
cmp
dec
and
xchg
cmp
jg
test
out
loopne
je
imul
mov
loop
xor
lahf
je
mov
jo
jne
aaa
mov
push
loope
mov
fadd
es
cmp
movs
mov
push
xchg
xchg
inc
dec
cmp
not
(bad)
mov
ficom
xchg
mov
loopne
ret
sub
or
cmp
repnz
dec
imul
dec
mov
stos
push
lahf
inc
fstp
and
lahf
dec
mov
fdivr
mov
push
rcl
mov
xor
sub
mov
mov
jge
je
inc
mov
retf
and
mov
mov
inc
call
out
jb
jge
outs
or
jg
xor
fst
pop
ss
jno
fs
fisub
xlat
fidiv
popf
sbb
imul
out
mov
push
popa
cli
xchg
pop
and
inc
inc
mov
cmp
mov
movs
push
in
iret
add
lds
xchg
mov
in
mov
add
sbb
cmps
jecxz
or
mov
add
xchg
outs
mov
sbb
jb
pop
or
dec
movs
arpl
dec
std
xchg
not
hlt
mov
out
or
out
ficomp
fmul
ror
mov
mov
pop
je
ja
retf
and
mov
sar
cmp
jmp
mov
jp
outs
loopne
pop
mov
test
movups
add
mov
popa
adc
inc
cdq
shl
stos
js
xchg
and
test
(bad)
popf
mov
shl
push
loope
mov
enter
imul
in
outs
addr16
(bad)
in
jns
imul
leave
inc
cmp
call
stos
mov
dec
mov
jns
ds
outs
mov
pop
movs
pop
fsub
xor
fstp
(bad)
sub
test
mov
mov
test
retf
cmp
movs
test
pop
pushf
cli
adc
arpl
cmc
outs
(bad)
sbb
in
xchg
arpl
pop
mov
cmp
enter
(bad)
push
and
mov
les
xchg
das
or
pop
pusha
cmp
shr
mov
lock
mov
dec
jmp
or
shl
retf
iret
mov
add
test
out
mov
mov
rol
je
xchg
mov
lea
(bad)
sbb
xchg
fimul
imul
xor
inc
xor
je
loope
lods
mov
in
dec
in
dec
loop
out
loopne
lea
jb
xchg
shl
inc
ret
add
sbb
outs
and
push
sbb
add
aam
pop
div
test
xlat
adc
xchg
sbb
sbb
sti
scas
xor
push
sub
pop
movs
push
in
(bad)
jae
fcmovnbe
stos
mov
ins
hlt
(bad)
mov
pop
aam
call
mov
pop
inc
cmps
leave
addr16
pop
mov
(bad)
repz
dec
mov
sbb
cmps
inc
pop
cld
or
and
pop
call
in
stos
movs
fs
loope
test
sar
lods
or
mul
addr16
mov
dec
cmp
leave
ret
push
jg
sub
mov
cmp
mov
sti
in
cwde
in
ja
xchg
inc
out
xchg
mov
pop
push
xchg
fstp
mov
movs
add
ss
mov
pop
test
bound
clc
xchg
lds
push
mov
mov
mov
xchg
in
add
cs
call
xchg
sbb
clc
mov
jge
movs
(bad)
repnz
fadd
enter
imul
ret
or
xlat
mov
mov
mov
es
or
pushf
mov
repnz
mov
adc
cmp
mov
aaa
loop
add
adc
into
ret
neg
dec
imul
fsub
and
push
adc
add
cmc
cld
inc
outs
(bad)
shl
test
int
enter
jbe
dec
mov
mov
retf
mov
inc
or
xor
sbb
jle
pop
inc
in
idiv
hlt
jmp
out
sbb
movsx
les
in
xlat
cmp
jge
jmp
xchg
call
out
retf
fidiv
push
ret
mov
int
xor
pop
sbb
xchg
ins
and
jg
sbb
scas
pop
xchg
bound
or
rol
(bad)
pop
ins
ins
sahf
sbb
test
mov
mov
mov
mov
sti
xchg
jmp
test
ds
in
sbb
add
dec
and
add
movs
and
setp
sub
jmp
dec
scas
and
fistp
stos
push
cs
enter
aaa
loop
mov
mov
cmc
out
scas
pop
adc
mov
adc
ret
add
cmp
mov
xor
rcl
(bad)
fdivr
push
sar
and
jb
inc
fbld
and
or
push
ins
cmps
inc
cmp
jle
cmp
and
sbb
add
(bad)
in
dec
fstp
icebp
inc
pop
push
int3
pop
fild
sub
xchg
shr
or
hlt
loope
dec
pop
pop
and
fs
xor
lods
mov
std
jg
xchg
sub
popa
add
or
outs
inc
movs
cmc
xchg
lock
jnp
mov
hlt
into
jno
test
sbb
push
mov
and
popf
enter
ret
pop
imul
fnstsw
popf
mov
xor
and
mov
pusha
pop
sar
ret
cmp
test
aaa
outs
cmp
out
retf
out
mov
les
and
add
sub
pop
pop
mov
mov
in
sbb
idiv
test
xchg
fwait
xlat
mov
test
pop
fild
les
dec
xlat
cmp
mov
xchg
mov
hlt
xor
cdq
pushf
xor
sub
and
xor
(bad)
pop
cmps
fidiv
or
jmp
scas
mov
xchg
das
add
cwde
inc
enter
dec
or
aaa
sar
push
int
pop
sbb
pushf
arpl
jne
idiv
push
aad
pop
or
aad
sbb
sub
mov
inc
rol
xor
jmp
mov
call
sub
dec
add
or
out
push
clc
std
xchg
out
jp
hlt
inc
(bad)
out
gs
ss
daa
push
dec
mov
add
arpl
stos
sub
adc
loope
rcl
xor
push
add
cmp
inc
movs
iret
leave
sbb
fnsave
push
jecxz
cli
sbb
(bad)
adc
addr16
push
movs
das
imul
in
push
stc
adc
sbb
sub
inc
mov
or
mov
bound
sbb
dec
xchg
push
shr
jl
daa
lods
in
imul
rcr
push
xor
add
mov
repnz
cmp
inc
xor
gs
jmp
fwait
add
jno
sbb
(bad)
in
cmc
mov
push
into
dec
movs
neg
mov
mov
ins
das
rcl
xchg
xchg
jmp
loope
test
mov
neg
mov
push
push
mov
jmp
scas
out
out
sub
push
hlt
pushf
imul
(bad)
and
loopne
jnp
(bad)
mov
gs
mov
add
sbb
sar
or
jne
dec
pop
mov
or
(bad)
into
mov
clc
mov
scas
std
out
sbb
or
cmp
mov
mov
loope
aas
sub
imul
xor
or
push
inc
lods
es
jb
mov
jle
xchg
mov
retf
sub
cmc
cmp
mov
adc
xchg
ror
(bad)
cmp
push
xor
mov
test
sti
fsub
shl
sub
dec
mov
pop
lea
xchg
sbb
xchg
jns
rol
rol
sbb
xlat
je
loopne
and
and
jecxz
mov
xor
xchg
push
and
test
into
shl
mov
inc
inc
ret
inc
jmp
mov
int3
lahf
pop
add
mov
mov
pop
arpl
sbb
mov
xchg
ins
adc
in
popa
add
out
xchg
(bad)
jnp
cmp
shr
pop
push
mov
xor
push
push
(bad)
cld
movs
dec
xchg
pusha
cmps
test
pop
pop
inc
les
ss
cdq
xchg
movs
test
(bad)
aas
dec
aad
jno
inc
das
out
cmp
adc
mov
xchg
das
shr
pop
mov
jmp
bound
ret
into
inc
jmp
mov
repz
xchg
fiadd
es
les
call
xchg
lea
mov
jl
test
cmp
loop
jp
shr
into
lds
call
or
cmp
mov
ret
retf
pushf
mov
les
push
and
iret
aam
cs
jmp
and
sbb
cmc
mov
int
retf
test
cwde
dec
jecxz
test
or
sub
and
mov
fstp
repnz
pop
lds
fst
push
iret
push
pop
ds
mov
nop
shl
jae
xor
inc
outs
std
(bad)
cmp
push
xchg
scas
mov
xor
mov
push
(bad)
sbb
scas
stos
adc
cmp
mov
pop
ror
rcr
sti
or
jae
fucom
xlat
ins
loopne
fcomp
dec
adc
das
pop
call
es
aad
das
dec
xlat
or
test
dec
out
(bad)
imul
outs
std
scas
jg
inc
rol
mov
adc
adc
loopne
call
inc
fisubr
xor
xchg
fdivr
cli
je
mov
jle
into
cdq
ins
rcl
jmp
sbb
pop
add
mov
xchg
ror
cmp
jb
xor
jle
mov
sub
xchg
sub
hlt
mov
jnp
jl
pop
inc
push
cmps
jb
mov
or
inc
and
shl
div
xchg
cmovne
lds
aad
stc
jae
sub
aad
adc
jmp
repz
sbb
cli
sbb
xor
xchg
mov
sti
or
cs
(bad)
popa
ja
xchg
aad
pop
rol
pushw
fimul
mov
adc
push
mov
pushf
or
xor
addr16
xlat
scas
or
xlat
push
mov
mov
push
repnz
push
shl
inc
stos
jecxz
xor
dec
data16
adc
mov
arpl
jmp
outs
clc
(bad)
push
sbb
dec
mov
lea
adc
add
fucomip
inc
lock
ftst
sbb
xchg
ror
cmps
inc
pushf
xor
sub
cmps
mov
lea
add
icebp
ret
xchg
sbb
adc
ins
mov
(bad)
and
push
inc
push
aas
and
das
into
lods
movs
mov
std
mov
push
fnstenv
cmp
pop
inc
outs
repz
xor
jp
mov
mov
lods
inc
sub
xlat
stc
xchg
or
xchg
and
retf
mov
mov
dec
sub
adc
mov
push
mov
xor
fld
and
jmp
pop
and
sub
dec
lock
adc
dec
stos
mov
clc
mov
mov
xchg
pushf
loop
js
push
push
cwde
cwde
sti
jp
mov
dec
leave
nop
outs
mov
pop
sbb
sbb
cdq
sub
or
repnz
std
inc
jmp
jp
movs
sub
push
cli
shr
xor
movntps
test
cmp
aaa
and
movs
out
scas
push
add
mov
inc
(bad)
daa
jbe
out
(bad)
cmp
xchg
arpl
mov
stos
cmp
push
in
call
lock
pop
or
fs
inc
in
sbb
out
push
pop
jno
xor
stos
mov
cmp
les
mov
pop
clc
mov
fbld
jbe
dec
sbb
in
sar
and
loop
in
(bad)
loopne
cs
dec
test
fucomp
dec
rcl
imul
sub
xor
stos
aas
pop
ins
xor
push
jns
lock
(bad)
xor
jbe
imul
cdq
jo
cld
xor
ror
or
add
in
jge
jne
cmp
adc
rcr
jnp
xor
push
mov
(bad)
mov
mov
icebp
fst
inc
daa
add
fistp
mov
adc
lods
pop
rcr
mov
das
imul
std
push
and
add
add
push
and
cmp
xor
sbb
push
and
jns
out
sti
test
jo
sub
mov
xor
sub
outs
(bad)
fcmovu
mov
cwde
xchg
mov
pop
mov
add
mov
add
bound
inc
sbb
jb
jnp
xor
dec
inc
test
or
lahf
push
or
jmp
push
and
(bad)
sub
hlt
ss
jmp
xchg
push
sub
mov
or
call
fsubr
sti
sub
adc
leave
int3
push
xchg
sbb
(bad)
adc
jbe
in
gs
adc
mov
or
pushf
test
and
imul
mov
es
das
movs
dec
or
data16
ret
sbb
jo
stos
cmc
cmp
idiv
lods
inc
sar
adc
xor
adc
adc
test
push
cmps
lea
aas
mov
add
and
bound
iret
xchg
cli
leave
mov
jmp
loop
push
popa
sub
add
call
in
adc
mov
cmp
aad
pop
or
sbb
into
lods
popa
not
pushf
pop
lock
in
hlt
movs
or
adc
inc
rcl
cmp
les
vpaddsb
xchg
iret
push
sbb
and
ret
xchg
inc
imul
pop
mov
mov
repnz
(bad)
int3
icebp
mov
out
push
sbb
cmp
(bad)
cmp
fdivr
jo
dec
hlt
in
out
cmp
lea
add
inc
mov
into
push
int3
pushf
(bad)
out
repz
sub
jnp
xchg
outs
mov
stos
xor
xchg
(bad)
jge
bound
add
push
arpl
(bad)
(bad)
outs
pop
inc
rep
mov
ja
mov
retf
inc
ds
scas
jne
add
dec
pop
push
add
xchg
cli
adc
gs
jg
imul
and
or
(bad)
adc
repz
push
mov
leave
das
xchg
fcom
sbb
scas
cmp
inc
mov
jbe
adc
cmp
xlat
mov
popa
add
retf
jns
out
push
xor
int
in
jge
das
push
push
test
out
jnp
add
push
sbb
sub
out
lahf
inc
pusha
push
jmp
add
or
pop
shl
fdivr
fs
cwde
mov
es
push
cmp
xchg
push
push
and
imul
es
mov
and
test
test
out
ret
sbb
pop
aam
push
mov
push
pop
jmp
fcomp
pop
and
add
aas
mov
in
paddd
mov
fs
hlt
je
jb
das
cmp
jmp
dec
retf
mov
es
jb
shl
jae
push
sub
mov
iret
inc
sbb
out
mov
pusha
ds
ss
adc
mov
and
repnz
lea
data16
in
cmp
cmp
mov
add
das
loopne
mov
int3
push
or
stos
push
mov
or
aam
or
jp
loopne
test
adc
lds
adc
ins
stc
cwde
push
neg
pop
pop
ins
xchg
adc
movs
pop
retf
scas
mov
xor
push
lods
mov
cli
jne
or
or
int
mov
cmps
xor
xchg
sbb
cmp
addr16
pushf
stc
cmp
inc
sub
mov
mov
pop
xor
rcl
ret
mov
push
loope
cmp
das
cmp
je
cdq
xchg
and
and
or
mov
mov
mov
push
jne
add
mov
es
xchg
in
fld
out
push
fisttp
pop
jo
(bad)
outs
mov
push
jge
xor
pop
cwde
or
xor
pop
jbe
cmp
and
loop
sar
mov
mov
rcl
add
fbstp
ror
ins
and
and
jbe
cdq
sbb
cmp
add
inc
je
ret
outs
das
fcomip
sbb
stos
pop
sbb
pop
loop
dec
xchg
enter
inc
les
sub
push
pop
pushf
push
mov
loop
adc
mov
mov
loop
jmp
and
mov
popf
(bad)
in
call
jg
mov
jecxz
retf
xor
mov
push
mov
jecxz
inc
fld
pop
into
int
jno
shr
add
sahf
and
js
push
cmps
adc
jg
push
sbb
sub
mov
sub
push
sub
gs
rcl
push
aam
leave
and
fist
jo
icebp
ret
inc
cmp
xor
mov
stc
xor
sub
adc
push
jne
fs
movs
mov
xchg
mov
dec
in
mov
cmp
push
enter
js
push
adc
ret
(bad)
addr16
pop
mov
fnsave
retf
xchg
mov
mov
repnz
jae
lahf
repz
and
rcl
call
or
add
mov
imul
(bad)
leave
inc
push
xchg
imul
std
loopne
cmp
mov
cld
push
and
sub
jge
dec
cld
(bad)
aad
cmps
sub
fild
das
mov
sar
xchg
loope
push
jne
imul
push
ins
pop
mov
fadd
adc
cmp
call
add
pop
fisub
pop
mov
push
aaa
imul
push
cmp
jmp
xchg
mov
adc
or
pop
(bad)
xchg
push
and
xchg
and
aas
jmp
enter
or
clc
out
popf
sub
ret
sub
mov
jno
shl
jno
adc
sub
mov
inc
or
shl
mov
or
add
pop
hlt
mov
add
mov
retf
mov
inc
xor
xor
add
mov
mov
and
shr
cmc
and
in
fisub
fmul
js
data16
sub
pushf
dec
push
or
or
xor
in
test
adc
test
icebp
add
jl
or
mov
push
sbb
adc
in
xchg
add
pusha
inc
test
mov
scas
(bad)
stos
sti
xor
jb
or
in
clc
scas
mov
imul
or
mov
pushf
sub
xchg
or
pop
les
sub
das
dec
aad
(bad)
cmp
loopne
dec
push
ret
bound
mov
jno
outs
and
test
mov
cdq
pop
jnp
ret
out
mov
adc
retf
xchg
shl
cmps
xlat
cmp
pop
mov
imul
dec
loop
adc
sub
mov
adc
lock
xor
aam
mov
test
push
push
sub
cmc
mov
pop
xor
lahf
sti
outs
aad
fdiv
mov
mov
ds
aas
xchg
sbb
mov
inc
push
mul
mov
cli
mov
test
(bad)
nop
ja
xchg
pushf
(bad)
leave
adc
add
stos
pop
iret
xchg
movs
and
adc
jne
inc
xor
fwait
test
cmc
aas
mov
push
imul
test
mov
mov
call
imul
dec
loop
ret
shl
cmp
cmps
push
out
and
dec
and
xchg
retf
repz
loope
add
popf
stos
enter
fwait
inc
mov
add
dec
not
pusha
ins
add
(bad)
in
sar
pop
enter
push
repnz
mov
push
cmp
addr16
xor
sbb
pop
xor
inc
push
out
loopne
xchg
data16
push
inc
adc
popa
mov
out
add
mov
fist
dec
or
pop
sbb
mov
mov
aad
mov
fucom
outs
xor
xor
fidivr
sub
xor
icebp
(bad)
or
pop
in
fcmovnu
jmp
aam
cmps
ins
ins
call
bound
enter
pop
sbb
pop
jbe
inc
xor
in
clc
jl
ins
push
lea
xchg
aaa
sub
retf
cmp
leave
dec
sbb
pop
cmc
xchg
data16
mul
mov
lods
aad
and
into
popa
adc
(bad)
js
xchg
sub
mov
cmp
mov
jl
push
xchg
xchg
xchg
mov
aas
loopne
jge
cli
fidiv
mov
sbb
pop
and
xor
sub
movs
sub
pop
sub
mov
adc
inc
out
sub
hlt
retf
retf
call
or
mov
inc
test
ins
jbe
mov
pop
mov
inc
mov
repz
neg
xor
or
repz
nop
mov
add
jb
fdiv
scas
test
add
in
shl
fnsave
add
mov
ror
cmps
ja
push
cmps
xlat
movs
mov
mov
movs
in
cmc
popf
fcmovb
mov
fucomp
call
pop
(bad)
retf
jge
mov
jno
data16
repz
in
inc
mov
jno
outs
mov
inc
lods
cmp
int
aaa
or
cld
ins
daa
stos
mov
dec
add
dec
popa
mov
jnp
mov
jp
push
mov
fidivr
xchg
sbb
das
sbb
scas
arpl
das
and
inc
repnz
or
leave
clc
ins
les
fistp
stos
iret
in
int3
not
mov
jo
push
loop
xor
mov
dec
fild
push
mov
cmp
fnsave
adc
adc
mov
push
ror
sub
retf
inc
ds
stos
js
jl
jb
stos
addr16
pushf
mov
add
adc
ss
sbb
mov
mov
cdq
mov
test
in
inc
jle
xchg
(bad)
scas
aad
repz
push
cmp
mov
mov
sbb
call
xchg
retf
test
or
dec
retf
xchg
push
jae
add
ss
jns
ret
sbb
push
outs
stos
and
popa
mov
xchg
xor
sub
jbe
lock
xchg
jp
test
inc
setns
imul
jne
pop
xor
dec
jle
loop
and
fisub
cli
push
push
inc
lds
pop
in
rcr
add
push
push
push
js
inc
add
aad
and
int
cs
and
test
xor
fild
fadd
and
jns
hlt
inc
add
xchg
xor
pop
mov
add
and
fucomip
scas
cmp
loopne
adc
test
and
cmp
test
xchg
lahf
daa
(bad)
push
and
fidivr
jmp
jmp
pop
xchg
push
pop
les
xor
and
mov
or
aam
loope
xor
lea
xor
ret
rcl
cmp
dec
jne
mov
mov
outs
mov
sbb
sub
mov
sub
sbb
sbb
mov
or
xchg
mov
inc
call
mov
loopne
fwait
aas
pop
cmp
xor
add
cmc
ins
sub
push
or
push
lds
xor
xor
lahf
add
dec
std
mov
lds
dec
or
dec
cmps
in
mov
inc
dec
leave
xor
retf
sti
out
fwait
aaa
(bad)
repz
(bad)
and
push
call
inc
(bad)
jle
push
sti
xchg
rcl
lds
inc
outs
jne
clc
mov
xchg
in
inc
cmps
or
sub
jns
cmc
clc
imul
pop
xchg
sbb
pop
loope
xchg
div
bound
xchg
aaa
in
(bad)
ds
das
ja
cmp
mov
sbb
in
xchg
jae
jno
add
sbb
mov
jmp
sbb
cdq
xor
leave
sbb
xor
pusha
pop
mov
xchg
icebp
fistp
xor
cmp
pop
mov
fcom
ins
add
scas
pminub
mov
bound
xor
lahf
mov
push
mov
or
das
and
jmp
pop
xor
loopne
leave
popa
cmp
das
push
cwde
mov
ins
mov
mov
mov
popa
mov
stos
jns
sub
mov
stos
sub
mov
vpshaw
sub
ins
xor
push
push
adc
push
inc
leave
xchg
aad
cmps
xchg
and
mov
push
jne
jecxz
adc
aad
xchg
pop
inc
je
pop
jbe
lods
xchg
imul
aam
xchg
in
sub
pop
(bad)
xlat
stos
movs
mov
pushf
cmc
sbb
adc
leave
bts
cmp
shr
xor
or
call
or
arpl
cmps
jl
or
enter
call
mov
ja
mov
mov
pop
lock
nop
ss
shl
adc
jmp
arpl
or
shr
fwait
or
xor
call
enter
int3
loopne
mul
mov
sbb
push
and
rcr
ret
or
pop
es
fwait
popa
stos
cmp
data16
cmp
push
or
xchg
icebp
dec
ins
in
mov
in
inc
sub
and
rcl
scas
push
push
mov
ret
call
dec
pop
add
xchg
cmp
sbb
shl
leave
je
pop
mov
pusha
mov
pop
push
cmp
retf
paddb
mov
cmps
into
sub
mov
loopne
mov
dec
xor
les
jae
and
test
lea
sahf
es
jns
cmp
cmp
rcl
xchg
ja
fnstenv
(bad)
daa
aaa
add
(bad)
dec
push
ret
push
xor
add
and
cmp
shl
dec
pop
mov
xor
xor
fs
jp
pushf
popa
lahf
sbb
pop
popf
clc
jae
jae
jne
div
call
stos
fcom
cli
(bad)
and
bound
and
(bad)
(bad)
mov
mov
add
popa
cmp
xor
push
dec
test
sbb
sbb
sub
cdq
dec
inc
fisttp
xor
pop
xlat
xor
sub
mov
and
leave
in
in
jle
and
sti
push
aad
add
leave
mov
nop
xchg
xchg
lds
cs
in
inc
push
mov
push
cmp
push
cmp
pop
test
jmp
fldcw
outs
or
push
iret
pop
mov
movs
test
inc
bound
cwde
inc
test
mov
mov
out
mov
pop
retf
pop
stos
enter
mov
jle
inc
xchg
enter
mov
jno
sbb
mov
jbe
leave
or
xchg
sbb
add
push
and
jnp
pslld
mov
and
pop
push
push
pop
or
div
ret
push
mov
adc
fiadd
outs
mov
mov
xchg
out
cs
pop
sub
fwait
ja
(bad)
xchg
fisubr
btc
sub
scas
imul
jp
test
aam
xchg
fdiv
mov
push
stc
test
adc
jb
inc
icebp
scas
and
push
icebp
xchg
out
popa
mov
mov
adc
dec
add
leave
(bad)
fs
jecxz
jecxz
outs
jns
jmp
adc
inc
test
add
xor
mov
or
rcr
nop
call
sub
fist
imul
pop
daa
mov
aam
and
jno
call
jno
adc
push
call
es
aas
push
js
sbb
cwde
add
aaa
xor
call
push
ret
pop
mov
rcl
repz
icebp
jmp
(bad)
xchg
or
sahf
or
xchg
xchg
(bad)
cmc
inc
call
mov
xchg
fst
scas
mov
fsub
and
push
fwait
es
and
daa
ret
add
(bad)
stc
jns
jg
shl
cmp
pusha
push
push
or
dec
mov
lods
popa
inc
inc
sbb
ins
jl
out
and
mov
sti
movs
cmc
ret
repnz
or
sar
dec
les
ror
je
mov
sahf
aaa
dec
in
outs
mov
fild
adc
fild
ret
stos
pop
push
shr
jmp
fist
push
daa
clc
aad
test
inc
pop
or
cmp
add
adc
pop
dec
dec
cwde
aaa
jo
jmp
mov
xchg
xor
pop
mov
in
icebp
xchg
dec
test
stos
mov
dec
es
leave
scas
xchg
sbb
int3
scas
fisubr
xor
xchg
lahf
(bad)
out
outs
(bad)
xchg
mov
cmp
and
inc
add
xchg
jmpw
bswap
mov
push
sbb
pusha
dec
push
xchg
adc
mov
add
add
xlat
mov
dec
sahf
or
xlat
int
xor
movs
cmp
xchg
repnz
(bad)
push
push
dec
outs
loopne
scas
jae
jae
push
lock
lock
div
jbe
dec
lahf
cmps
gs
cs
sbb
sub
pop
jb
hlt
neg
mov
cwde
or
fwait
shr
xor
push
arpl
pusha
and
push
leave
jbe
dec
pop
mov
jbe
adc
and
std
pop
clc
mov
cmp
je
call
iret
lock
pusha
mov
push
pushf
fidiv
sub
mov
test
imul
neg
movaps
into
cmp
call
fs
repnz
push
or
idiv
call
or
add
lods
enter
cmp
(bad)
jmp
jge
add
imul
jns
cmc
xor
not
mov
fmulp
mov
sahf
add
jmp
adc
sub
adc
mov
pop
enter
push
mov
imul
imul
adc
mov
or
stc
and
ins
popa
data16
inc
test
xchg
stc
jl
or
lods
push
push
push
or
or
mov
mov
hlt
and
mov
mov
sbb
out
xchg
jne
push
and
sub
add
mov
mov
adc
cmp
and
test
ficom
mov
fstp
jne
mov
repz
cmp
dec
mov
je
xor
push
les
push
fwait
not
ja
jmp
mov
dec
ds
xchg
pop
mov
outs
imul
dec
cmp
cmc
out
inc
mov
daa
test
scas
sub
(bad)
fidivr
imul
lock
(bad)
xchg
cli
push
jae
fsub
enter
xchg
push
lds
add
inc
xor
test
mov
mov
in
mov
mov
test
mov
mov
mov
push
push
pop
fistp
mov
sub
and
fmul
jnp
nop
sbb
loop
stos
jb
sbb
mov
push
adc
and
imul
jae
test
push
(bad)
cs
shl
jno
push
lods
scas
mov
ds
lock
add
jmp
(bad)
jns
mov
adc
mov
cld
pop
pop
outs
xchg
inc
pop
fwait
pusha
and
pop
sub
loopne
sbb
in
into
in
movs
in
push
imul
mov
dec
push
aad
je
dec
fwait
aam
repz
xchg
push
dec
popf
xchg
sub
test
aaa
stos
push
nop
sub
fist
ret
cli
mov
mov
dec
test
fnstsw
mov
test
inc
push
mov
xchg
push
adc
(bad)
mov
jle
adc
mov
dec
out
je
jno
push
leave
movs
push
push
int3
inc
adc
ret
xor
leave
lods
(bad)
jnp
enter
cmp
mov
push
inc
push
push
fsubp
ss
or
push
add
aaa
(bad)
or
call
fucom
test
in
iret
in
push
inc
mov
out
cs
add
shl
inc
aas
cli
pop
in
xor
je
sub
adc
xor
mov
int3
int
sti
lock
(bad)
ror
test
mov
ret
jbe
outs
xchg
pop
outs
jl
scas
jg
mov
cmc
pop
mov
and
jle
sbb
dec
(bad)
and
cmp
mov
aas
std
xchg
pop
ins
lds
xor
iret
ror
xchg
push
push
xor
push
(bad)
cmp
fdivr
adc
popf
rol
or
les
push
pop
or
stc
hlt
sbb
jnp
loop
scas
mov
das
test
cmp
xchg
inc
jbe
les
ret
inc
loope
cdq
jo
cmp
hlt
test
fmul
cli
or
mov
mov
repnz
mov
adc
push
pop
lahf
daa
xchg
call
aam
jbe
in
in
pop
addr16
cld
inc
loopne
mov
pop
daa
sub
ss
jge
idiv
loopne
push
sahf
cmp
hlt
daa
xor
mov
mov
push
add
mov
fs
xor
jnp
scas
pusha
sbb
adc
cmp
push
jg
imul
enter
in
outs
enter
lods
push
aam
jle
shl
hlt
sbb
faddp
cli
das
jmp
jmp
bound
push
das
out
jo
mov
jno
daa
call
or
aas
inc
or
jmp
outs
mov
mov
fild
jno
mov
in
and
adc
mov
(bad)
or
push
mov
cmp
je
ja
xchg
or
adc
pop
and
dec
xor
mov
adc
dec
les
lahf
aam
jg
mov
enter
lea
adc
inc
dec
aad
es
dec
aas
xchg
mov
and
or
test
cs
or
retf
dec
add
and
(bad)
adc
mov
fcomp
add
sar
sbb
aas
cs
ficomp
mov
dec
push
dec
dec
dec
(bad)
leave
shl
pop
dec
sub
or
repz
retf
mov
dec
sub
mov
sbb
cmp
xlat
cmc
mov
pop
movs
loope
mov
scas
mov
div
pop
shl
add
fwait
cli
ret
or
ss
mov
and
jns
push
cmp
xchg
mul
lods
lock
movs
sti
retf
ret
xor
int
retf
jmp
mov
(bad)
stc
inc
push
dec
mov
mov
lock
or
(bad)
out
cmp
call
adc
mov
mov
call
repz
push
jecxz
add
dec
add
imul
ins
fimul
sahf
(bad)
bound
xchg
std
inc
cwde
(bad)
jle
repnz
retf
sti
push
cs
mov
imul
sub
fbld
pop
sub
inc
dec
or
mov
in
pop
je
jge
pop
test
jnp
pop
dec
test
outs
pusha
and
fcmove
mov
clc
fadd
sub
pop
enter
push
cmp
mov
out
or
jnp
stos
ret
xchg
ret
mov
sbb
mov
mov
retf
dec
mov
adc
push
in
jbe
xchg
ret
mov
inc
icebp
sbb
fild
ins
xchg
stos
ja
mov
pop
push
out
inc
or
js
pop
pop
pop
in
jne
sar
iret
pop
mov
psrlw
jle
sbb
xchg
sti
mov
pop
xchg
rcr
mov
cmp
pusha
cmp
mov
loop
clc
mov
mov
outs
mov
mov
aad
jl
xor
rcr
mov
jle
pop
dec
popa
pop
push
sub
xchg
xor
test
jmp
push
inc
mov
sti
pop
mov
cmc
in
and
repnz
rcl
out
test
pop
inc
mov
adc
mov
xor
(bad)
pop
jae
in
cmps
push
call
push
fidiv
mov
mov
lea
in
pushf
sub
std
js
idiv
fdiv
dec
js
sbb
cmp
xor
mov
rcl
ret
cmp
push
and
stos
or
mov
mov
or
movs
gs
cmp
jg
ds
mov
in
push
int3
sti
and
add
and
jecxz
sub
add
imul
xchg
inc
out
in
mov
pop
mov
scas
fimul
outs
xor
fstp
sub
jg
daa
lods
stos
cwde
cmp
mov
cdq
repnz
nop
pop
inc
or
push
xor
es
ins
test
xlat
iret
pop
test
xchg
xchg
loop
cld
(bad)
leave
dec
les
fcmovb
(bad)
push
jns
nop
test
adc
(bad)
cmp
pop
adc
jecxz
pop
je
pop
pop
fistp
mov
xchg
les
adc
pushf
loopne
ror
push
sbb
jecxz
cmp
xchg
popa
dec
or
popa
call
xchg
mov
inc
sbb
adc
sbb
repnz
(bad)
rol
lds
out
(bad)
lea
ins
ret
cmp
test
ja
jge
shr
inc
nop
jne
cmps
mov
retf
in
clc
fmul
movs
icebp
add
les
or
test
pop
scas
dec
push
and
dec
mov
(bad)
retf
sbb
xchg
push
shl
scas
jns
int3
sbb
scas
xchg
jle
call
inc
xor
mov
mov
hlt
aas
dec
dec
mov
bound
loopne
out
xchg
mov
mov
cmp
mov
xchg
xchg
jbe
sbb
mov
rcl
add
out
cmp
push
add
test
popf
loope
add
out
enter
dec
xor
out
pop
popa
movs
out
xchg
pushf
icebp
lahf
dec
outs
data16
sub
shr
cmp
push
ret
(bad)
scas
popa
adc
aas
out
adc
addr16
and
out
in
add
mov
scas
mov
ror
int
inc
push
adc
lods
adc
mov
dec
pop
cmps
ja
adc
inc
lahf
jmp
pushf
cmc
imul
out
dec
(bad)
mov
rcl
xor
xchg
sbb
mov
sti
lea
cs
push
(bad)
fmul
push
mov
mov
outs
pop
sub
sub
pop
nop
lahf
ret
in
stc
sti
xor
xor
addr16
adc
and
cmp
ss
test
push
in
repz
stc
xor
mov
das
(bad)
retf
adc
or
fucomip
jmp
add
add
ret
das
sub
xchg
push
pop
int
addr16
mov
call
push
jne
dec
popa
cdq
dec
test
(bad)
cmp
jl
sbb
push
mov
ins
arpl
mov
push
pop
jne
or
dec
retf
mov
jno
inc
xchg
cmp
ins
in
push
jmp
iret
(bad)
cld
retf
test
dec
mov
pop
push
cdq
add
pop
rcl
sbb
repnz
rcr
and
xor
or
lahf
dec
and
push
test
imul
cld
mov
repz
sbb
xchg
mov
(bad)
daa
jg
pop
clc
jle
cs
adc
sub
imul
xchg
test
mov
shl
pop
xor
push
das
jg
fdivr
cmps
ficom
loopne
lods
add
or
loopne
adc
(bad)
or
pop
popf
xchg
jge
fdivr
adc
ret
es
mov
cmc
xchg
mov
jmp
inc
ror
xchg
stc
mov
jp
add
pop
or
fnstsw
xor
xchg
aas
push
add
jns
xchg
mov
(bad)
or
push
cli
xchg
shr
adc
jno
sub
and
adc
(bad)
and
loop
or
ins
aam
(bad)
(bad)
jmp
mov
(bad)
cdq
or
inc
test
push
cmps
or
fadd
mov
push
inc
push
into
mov
xor
(bad)
mov
push
sti
lea
sbb
sbb
xor
nop
mov
fcomip
jmp
aas
or
aas
adc
pop
cmps
not
call
cmp
and
retf
mov
data16
retf
mov
(bad)
xchg
jecxz
push
xchg
inc
pop
mov
add
iret
stos
enter
dec
out
jns
inc
inc
imul
loopne
imul
in
cmp
cmp
sub
push
dec
mov
cld
jno
xchg
scas
jo
xchg
add
cmps
lea
adc
ror
fcom
xchg
test
jg
lock
ja
sbb
sbb
(bad)
mov
enter
(bad)
std
call
(bad)
ret
ret
sbb
jnp
mov
repnz
push
aas
repnz
faddp
cwde
adc
mov
ins
aas
inc
sub
(bad)
pop
(bad)
cmps
outs
shr
dec
outs
jns
mov
jmp
sbb
or
adc
es
aad
sbb
mov
cmp
cmp
pop
adc
cli
sbb
rcr
das
mov
mov
div
dec
pslld
test
fsin
sub
xchg
xor
popa
call
or
dec
icebp
or
shl
sbb
(bad)
sar
cmp
daa
pop
adc
retf
mov
cmc
and
popf
repz
hlt
div
pop
dec
push
inc
push
repnz
mov
fnstenv
je
pop
dec
int
imul
xor
xor
(bad)
xor
xor
mov
pop
lods
xor
mov
mov
sbb
leave
cmp
aaa
pushf
sub
in
addr16
call
jg
jmp
jae
iretw
mov
imul
rcl
scas
add
xor
es
pop
gs
xchg
add
test
call
xchg
xor
sbb
imul
xchg
pop
imul
test
jmp
mov
test
(bad)
mov
jb
out
cmps
push
mov
jmp
sbb
out
mov
cmp
dec
jp
loop
repnz
int3
xchg
clc
pop
inc
mov
jmp
rol
or
cmp
nop
sub
into
js
pop
pusha
adc
sbb
shl
call
movs
mov
cmp
mov
outs
inc
mov
mov
fimul
push
sub
cmps
sub
in
pop
mov
adc
lea
cmps
out
movs
adc
sahf
(bad)
in
nop
sub
and
leave
add
pop
scas
aam
fist
test
out
xor
hlt
loop
adc
sub
sub
adc
push
std
xchg
into
fs
mov
inc
loopne
fnsave
dec
loope
cs
pop
jb
fnstcw
or
sub
jmp
mov
pop
dec
jo
scas
into
shl
stos
movs
pushf
push
push
outs
sbb
or
inc
add
mov
sti
fcmovnu
nop
cmp
scas
repnz
(bad)
lock
(bad)
mov
mov
mov
cmps
cmp
scas
sbb
cwde
enter
adc
stos
and
mov
dec
mov
mov
xor
out
ds
inc
sbb
js
push
push
addr16
fcmovnbe
cmp
dec
pop
mov
mov
test
mov
mov
not
rcr
adc
out
xchg
xor
call
sar
lds
fisttp
xor
in
das
jno
popf
outs
adc
stos
adc
mov
fisttp
call
sahf
pop
jno
pop
lahf
jp
dec
mov
mov
inc
loope
dec
inc
pop
das
aaa
xor
out
jae
sbb
jp
movs
in
sub
pop
adc
pop
mov
mov
xchg
stos
jbe
pop
test
cmp
jle
ins
add
mov
push
cmp
repnz
repnz
cmp
add
jle
cs
jle
lods
mov
jbe
xchg
out
adc
pop
pop
loop
(bad)
std
out
popf
pusha
pop
xchg
cmps
loop
jne
jmp
(bad)
mov
mov
retf
ret
cmp
xchg
in
mov
sbb
mov
scas
std
add
or
mov
lods
test
test
adc
push
mov
cmp
mov
fild
mov
aas
not
xlat
out
mov
inc
aas
imul
jmp
sahf
(bad)
inc
jno
xor
test
std
lods
or
pop
outs
pop
inc
pop
out
lds
adc
pop
sub
or
lds
xchg
sar
mov
mov
push
dec
pop
add
mov
ins
sub
not
rcr
fidivr
sub
mov
out
xchg
out
leave
lods
sub
jns
jle
imul
push
fisttp
or
push
jnp
adc
loope
jle
pop
xor
imul
into
xor
mov
and
dec
mov
rcl
in
into
retf
out
jbe
fcom
(bad)
stos
(bad)
push
dec
mov
out
mov
adc
(bad)
pop
test
(bad)
cwde
pop
les
leave
sub
xchg
mov
inc
pushf
xchg
mov
sar
mov
sbb
or
imul
nop
movs
or
cmp
pop
mov
sbb
out
xchg
adc
jle
mov
xchg
lods
adc
test
sbb
std
add
shl
ret
int
dec
ins
cmp
xor
in
jmp
cmps
das
or
mov
loopne
mov
push
outs
xor
fsubr
clc
(bad)
dec
fadd
add
fimul
push
jmp
das
push
not
pushf
cmps
es
dec
xchg
fld
pop
lock
xor
sbb
test
xchg
fs
xor
pop
jo
add
pushf
inc
test
dec
rol
xor
(bad)
aad
push
xor
icebp
sub
jp
(bad)
cwde
mov
popa
cmc
pop
jecxz
push
stos
mov
inc
scas
repnz
xor
inc
mul
push
pop
push
inc
xor
jne
mov
inc
adc
or
sub
cmp
push
inc
dec
fpatan
std
cmp
lods
sub
push
leave
dec
repz
mov
xchg
lock
add
push
sbb
movs
movs
test
cmp
jg
or
xor
mov
inc
and
pop
retf
jg
mov
mov
retf
push
imul
xchg
mov
in
aas
popa
mov
dec
adc
fcomp
lea
jb
retf
push
shl
out
repnz
cmc
addr16
push
fcomp
mov
cs
cli
cmp
jle
jmp
pop
xor
push
xor
jg
pop
aaa
jb
push
mov
inc
mov
jp
loop
movs
(bad)
lods
push
sbb
les
ja
and
inc
xchg
cdq
in
add
pushf
shr
ret
pop
mov
jne
mov
inc
mov
mov
push
fwait
mov
arpl
jbe
push
jecxz
push
cdq
cmps
adc
fsubr
test
xchg
xchg
sbb
mov
popa
cmp
ror
inc
and
cdq
dec
add
js
sub
add
adc
mov
scas
mov
(bad)
jmp
dec
mov
jl
pop
pop
adc
outs
loope
add
mov
mov
movs
lea
aam
cld
sub
cmp
iret
jmp
inc
mov
jne
je
ficom
and
fxch
push
mov
fld
das
(bad)
xor
push
pop
cmp
je
aaa
dec
sub
icebp
jmp
inc
call
mov
sahf
xchg
jno
test
leave
lock
mov
push
fisub
adc
xchg
mov
cmp
jmp
sub
push
popa
ins
aad
(bad)
clc
in
pushf
lods
or
aas
mov
gs
sbb
add
dec
pop
xor
loop
repnz
or
ss
popf
out
and
sbb
out
sub
jp
adc
adc
sbb
rcl
shl
push
mov
add
jp
xchg
fsubr
(bad)
div
imul
jbe
fsubr
(bad)
dec
xchg
mov
mov
inc
ja
scas
sub
sub
push
cs
mov
cli
jg
fisttp
dec
pop
sbb
scas
pop
inc
sbb
inc
xchg
aaa
inc
lods
shr
sub
dec
leave
xlat
xchg
mov
and
pop
stos
call
sub
outs
or
jno
push
fild
enter
xchg
retf
loop
push
and
popa
scas
mov
or
enter
ins
clc
retf
cwde
jo
inc
addr16
mov
sub
xor
outs
hlt
jg
aam
test
push
stc
cmps
dec
add
enter
enter
mov
pop
sub
push
imul
std
mov
retf
lea
mov
adc
jle
imul
cmp
jbe
(bad)
iret
jo
xchg
std
xchg
xchg
fwait
test
ret
or
je
in
imul
lds
or
es
push
and
mov
scas
xchg
fld
out
and
sbb
retf
mov
xor
ja
jns
xchg
mov
pop
dec
clc
aaa
dec
xchg
xor
jmp
mov
jb
iret
jmp
sbb
ds
adc
sbb
(bad)
test
pop
push
(bad)
out
movs
inc
pop
sbb
or
outs
cdq
xor
add
push
sar
mov
xor
movs
pusha
xor
mov
test
or
xor
push
and
add
sbb
adc
cmp
arpl
shr
shr
xor
stos
aas
pop
push
xor
inc
(bad)
sahf
push
pop
and
pusha
cmc
and
jmp
xor
dec
dec
lods
ret
ss
cmps
popf
add
inc
call
mov
in
shr
into
retf
xor
bound
jno
sub
xchg
mov
dec
cmp
xchg
loope
rcl
jae
xor
call
shl
adc
aas
mov
xrelease
pusha
mov
adc
ds
lds
loopne
in
sbb
sub
mov
shl
mov
shl
data16
in
xor
dec
ss
dec
pop
test
js
imul
arpl
add
mov
push
lods
out
inc
jmp
enter
shr
shl
lods
(bad)
shrd
mov
cmp
movs
pop
xor
retf
(bad)
adc
mov
outs
lds
rcl
jmp
mov
sub
jno
xchg
inc
add
and
imul
mov
outs
sub
dec
dec
enter
fild
lahf
dec
push
iret
div
xor
sbb
cmps
outs
jmp
loope
shr
rcl
xchg
push
mov
out
dec
mov
jg
lahf
(bad)
xlat
hlt
retf
cmp
push
sub
aaa
ss
jg
cdq
leave
test
xor
mov
(bad)
es
sbb
xchg
ds
xchg
mov
(bad)
retf
fst
fcomp
addr16
push
sbb
ins
lods
scas
add
cdq
cmp
sbb
(bad)
in
int
mulps
dec
enter
add
jge
or
aaa
or
mov
test
sbb
retf
aaa
push
add
xchg
xchg
xchg
(bad)
xor
jle
push
or
fcom
popa
jmp
mov
into
push
(bad)
push
add
sbb
jecxz
xor
jno
sbb
push
and
cmp
add
(bad)
xor
jmp
push
ror
cmc
jb
repz
cmc
mov
lock
cmp
xchg
add
mov
sti
fdiv
loopne
enter
dec
sub
int
pop
mov
jno
ins
inc
in
adc
rcl
ret
mov
adc
add
dec
jb
cmp
pop
scas
imul
add
mov
mov
jp
out
xchg
push
jne
xlat
fmul
fisub
jp
aad
mov
or
cmp
mov
cmp
std
dec
add
in
adc
out
mov
ret
add
xor
or
mov
mov
pop
fild
mov
cmp
jg
call
or
aam
sbb
add
ds
xor
add
test
pop
js
fimul
inc
popa
mov
test
mov
cs
loopne
fist
cmps
jnp
inc
xchg
in
dec
jecxz
fdiv
pop
push
out
lea
xor
pusha
sbb
mov
enter
pushf
int3
adc
adc
cld
(bad)
xchg
pusha
and
lods
stos
push
mov
and
pop
pop
fs
fsubr
and
scas
icebp
stos
nop
iret
sub
or
retf
mov
or
ins
xchg
(bad)
jae
inc
cli
outs
push
cli
loope
sbb
mov
add
xchg
es
push
xor
repz
inc
add
fisub
(bad)
inc
mov
push
push
push
mov
into
(bad)
and
ins
adc
outs
or
mov
div
inc
xor
push
and
fwait
add
and
(bad)
cmp
jmp
cmp
stc
daa
adc
sub
push
cmp
mov
cmp
push
out
loope
adc
(bad)
add
jmp
jle
test
inc
lods
mov
inc
movs
bndstx
mov
cmps
pop
pop
sbb
inc
stc
sbb
movs
out
rol
lods
sub
retf
mov
or
leave
mov
out
pop
bound
sbb
or
jno
push
mov
in
pop
rcr
xchg
sbb
in
mov
add
cmp
jmp
sub
cmp
test
jnp
jae
xlat
xchg
inc
mov
dec
fistp
sub
test
xchg
fwait
punpcklbw
(bad)
mov
pop
xlat
scas
lds
adc
push
scas
adc
and
fxch
pusha
push
push
xchg
cmp
mov
xor
addr16
push
xchg
aas
retf
push
ficom
shr
dec
in
ja
out
mov
leave
movs
imul
mov
movlps
mov
(bad)
lock
push
cmp
gs
cmp
jle
dec
(bad)
shl
ja
bound
retf
jmp
cmp
pop
mov
mov
aad
mov
jl
xchg
mov
xor
mov
push
fst
scas
dec
les
out
add
sbb
cmp
mov
mov
cld
adc
sub
inc
data16
pushf
je
fsub
or
retf
mov
sar
sahf
push
or
in
inc
addr16
das
es
outs
repnz
mov
popf
xchg
dec
retf
retf
lock
hlt
outs
out
or
and
repz
iret
mov
pushf
xor
pushf
xchg
int
pop
mov
push
(bad)
fidivr
pop
xor
mov
jnp
ror
aad
retf
aad
pop
adc
mov
out
or
mov
sub
push
clc
jle
push
out
shl
bound
push
fdivr
jae
mov
shr
push
lea
jmp
inc
iret
add
and
or
movs
sbb
pop
lds
cmp
into
inc
jb
scas
sub
push
adc
push
aaa
push
sub
add
push
dec
jg
lea
arpl
sti
mov
pop
sub
sbb
push
adc
popf
xchg
stc
clc
push
xchg
pop
jbe
in
sub
cmp
and
mov
lahf
push
jae
jge
and
scas
es
stos
fs
pop
inc
ja
mov
(bad)
mov
std
push
and
mov
les
out
inc
pop
xor
test
imul
iret
lds
in
xlat
or
test
cmp
xlat
mov
in
out
xchg
js
inc
or
lds
loop
(bad)
scas
(bad)
mov
cmp
xor
in
dec
imul
dec
mov
sar
cmp
ja
mov
add
push
fcmovu
scas
push
sti
fild
dec
push
addr16
add
jmp
addr16
out
mov
dec
jns
pop
(bad)
out
sbb
push
dec
stos
js
adc
jmp
inc
mov
adc
cmps
test
xlat
xchg
cmc
and
sbb
lock
clc
jle
push
add
cmc
mov
xchg
mov
cli
pushf
arpl
xor
add
push
jge
leave
mov
push
mov
sub
scas
jecxz
cmps
sub
stos
inc
sub
xchg
nop
inc
cmp
pop
aas
jmp
jge
inc
mov
jo
test
adc
jmp
dec
add
add
inc
add
inc
outs
pop
ror
(bad)
jne
and
push
std
mul
sub
fstp
and
(bad)
fst
fisubr
xor
sub
(bad)
ret
xchg
arpl
test
test
popa
inc
xchg
push
cs
ret
fsub
pop
pop
fidivr
cmps
test
mov
jg
les
xchg
mov
adc
mov
and
jmp
repnz
ret
pop
(bad)
rcl
stc
sub
adc
ror
xor
repnz
push
push
stos
shl
fsub
rcr
mov
cmp
inc
loopne
outs
(bad)
mov
push
loope
leave
cmps
jbe
adc
cmp
sub
xlat
mov
xchg
aam
add
repz
lock
push
les
inc
sbb
or
fimul
xor
pop
mov
retf
cmp
clc
mov
pop
sub
rcr
xor
xlat
xchg
adc
rol
(bad)
in
push
shr
dec
pop
scas
xor
lds
movs
out
sti
shr
push
loop
data16
test
out
xor
ficomp
push
(bad)
lds
(bad)
sub
into
push
loopne
lds
loopne
push
jl
fdivr
fdivr
inc
mul
in
cmps
sbb
icebp
not
xchg
xchg
add
fs
(bad)
and
jmp
imul
cmp
out
ret
es
rcr
ins
lods
cwde
xchg
mov
ret
(bad)
cld
pop
inc
dec
cmp
jb
fiadd
test
xchg
xor
xchg
arpl
cwde
fs
add
xchg
cmps
loopne
cmp
daa
(bad)
mov
mov
cmp
into
in
cld
jge
aad
fcomp
fcomp
mov
(bad)
repnz
retf
movs
mov
repnz
or
xchg
outs
pop
xlat
cs
lea
jb
in
arpl
sub
sub
or
callw
repnz
xchg
and
xor
jp
imul
pusha
inc
cmp
dec
cli
aas
stos
sub
shr
test
mov
dec
mov
cdq
xchg
neg
je
repnz
xchg
das
and
pusha
jne
les
cmp
sar
outs
jecxz
movs
mov
push
aam
ret
fst
test
imul
sub
sub
gs
jp
call
mov
rcl
xchg
ret
mov
inc
cwde
push
imul
inc
leave
pop
jne
xor
lods
push
mov
dec
inc
rcr
inc
or
inc
cmp
mov
jb
out
(bad)
push
and
cmps
pusha
retf
fistp
dec
xor
fsubr
push
dec
cmp
push
pop
popf
cmp
sar
xor
lea
or
xor
and
xor
add
sbb
out
cmc
nop
push
xchg
jo
push
mov
or
in
in
push
jo
jmp
out
inc
nop
xor
adc
push
or
mov
retf
cmps
retf
sbb
cdq
popa
pusha
xchg
pop
mov
pop
hlt
push
sbb
adc
std
mov
icebp
loop
fidiv
in
inc
in
jb
push
pushf
movs
sbb
std
movs
adc
fs
mov
xor
adc
adc
or
mov
pop
push
popa
jmp
push
loopne
aaa
mov
xchg
hlt
sbb
mov
xchg
fisub
inc
fsubp
ja
test
lea
inc
shl
mov
(bad)
push
das
cmp
gs
push
inc
das
daa
or
inc
push
daa
jmp
jno
push
cmp
rcl
and
and
loope
sub
and
mul
push
dec
cmps
and
fsub
and
cli
jnp
fmul
jo
dec
mov
sub
pop
adc
cli
inc
push
nop
js
dec
leave
sbb
or
and
sahf
jmp
pushf
retf
dec
daa
test
dec
dec
jp
fcomp
test
adc
int
shl
push
push
ret
dec
xor
jne
pop
pusha
cmp
bsf
adc
jp
(bad)
and
inc
dec
jnp
xchg
mov
sbb
sub
xchg
xchg
aas
int
jecxz
adc
and
dec
dec
push
pop
xchg
fadd
push
out
and
xor
pop
sub
jmp
inc
push
mov
jmp
aaa
div
jmp
adc
or
sbb
sub
adc
cmp
xchg
adc
cmp
jp
outs
lods
and
mul
test
mov
inc
xchg
jmp
dec
std
ja
hlt
daa
leave
add
inc
add
iret
and
cld
jle
mov
xchg
data16
lods
stc
sub
aad
push
adc
lea
std
sahf
dec
jl
imul
push
push
cli
xchg
xor
dec
movs
(bad)
imul
test
xchg
fistp
xor
ficom
leave
xchg
call
movs
push
test
cdq
or
in
mov
in
rcr
mov
mov
jmp
rol
(bad)
jmp
xor
or
sbb
sbb
jo
fnstsw
adc
mov
jne
lea
add
js
ret
mov
les
popf
mov
jmp
xor
enter
es
pop
sbb
iret
cmp
scas
ins
aas
mov
jno
push
sbb
pop
popa
sub
adc
bound
pop
out
aad
inc
jge
test
loope
int3
jnp
jle
in
fucomip
aaa
fsub
les
dec
mov
in
or
adc
clc
and
hlt
cmc
fst
je
imul
nop
pop
cmp
inc
cmps
shr
xor
test
inc
mov
out
int3
jge
(bad)
mov
in
scas
out
mov
push
pop
dec
loope
lods
in
pop
sbb
gs
xchg
sub
mov
pop
inc
pop
adc
jp
ins
or
aas
das
test
inc
jns
inc
in
push
or
fnsave
cmp
jae
retf
cmps
retf
xor
inc
(bad)
mov
and
pusha
retf
jne
pop
adc
loop
inc
cmp
ja
dec
mul
xchg
mov
push
or
pop
sub
std
test
push
movs
mov
mov
mov
fnstsw
jge
cmp
and
rcr
cmp
aam
aam
dec
inc
mov
leave
mov
jnp
out
or
mov
jne
(bad)
mov
cmp
cmp
cmp
retf
mov
push
retf
jno
stos
ret
out
loopne
(bad)
sbb
rcr
popa
sar
dec
shr
jecxz
xchg
or
repnz
call
dec
xchg
push
pop
jecxz
std
mov
mov
(bad)
sbb
push
mov
cmp
or
jno
dec
sbb
pop
xchg
scas
sub
push
std
mov
or
jae
(bad)
cmp
cmp
clc
cs
sar
outs
jmp
dec
xor
jmp
add
pop
ds
ja
add
pushf
cwde
sti
xchg
add
addr16
mov
sbb
lahf
outs
test
xchg
xor
scas
jbe
data16
xor
mov
xchg
mov
pop
cs
inc
rcr
mov
jb
mov
call
xchg
pusha
mov
(bad)
dec
pop
sbb
imul
(bad)
and
mov
xor
daa
sub
xchg
pop
jmp
mov
cmp
in
je
call
xor
ret
adc
inc
shr
data16
xchg
out
xchg
cmp
pop
out
popf
pop
xchg
jle
fbld
xchg
test
jno
repz
push
xchg
(bad)
jl
xchg
in
aad
into
es
fcomip
imul
in
xor
xchg
test
pop
jbe
imul
xchg
imul
(bad)
es
arpl
stc
ret
fisubr
push
push
jns
push
data16
dec
cmp
pop
pop
pop
scas
add
add
imul
inc
scas
mov
pop
inc
sub
repz
stc
loop
mov
int
imul
aas
adc
ds
push
cdq
shl
sbb
push
pop
fisttp
or
js
push
sub
ins
and
out
(bad)
pop
mov
leave
das
(bad)
push
loop
mov
jmp
pop
stc
adc
adc
pop
sbb
and
ins
sub
jnp
cdq
mov
cmp
psubusw
in
ins
push
push
je
sahf
pusha
test
(bad)
imul
ins
cld
gs
jmp
retf
cmp
jae
inc
cmp
test
push
dec
retf
outs
(bad)
scas
jnp
cld
pop
push
xchg
xor
cld
adc
jae
addr16
(bad)
shl
sbb
sub
sbb
ss
int
inc
sub
fadd
or
cld
pusha
(bad)
jbe
or
loopne
fs
or
jo
enter
push
movs
sub
loop
jle
mov
in
bound
rcl
mov
movs
aad
inc
popa
add
lods
daa
or
jnp
push
pop
test
fs
imul
test
inc
push
jle
ret
fwait
jae
push
(bad)
lds
stos
cmp
pop
popa
cmps
ins
gs
mul
(bad)
jg
and
push
int
in
pop
imul
popf
in
int
mov
out
punpckhbw
call
stc
ins
(bad)
mov
sub
sti
imul
dec
fucom
jbe
push
pop
mov
scas
aad
lahf
and
mov
sti
imul
mov
mov
lock
mov
out
neg
sub
jnp
rcr
dec
js
inc
mov
pop
ins
stos
mov
xor
mov
sbb
pop
retf
xor
adc
test
xor
aaa
cmp
bnd
push
xlat
jl
or
push
mov
push
adc
or
xchg
dec
std
add
clc
sti
fisttp
frstor
arpl
cmp
mov
out
gs
stos
jge
jmp
xor
jne
pop
sti
cmp
pop
xchg
dec
sub
cmps
je
or
or
shr
call
iret
adc
mov
lods
cmps
retf
xchg
shl
xor
xchg
pop
dec
(bad)
fidivr
and
ja
call
imul
lods
stc
shl
pop
fadd
(bad)
in
and
das
dec
lds
pop
ins
and
xchg
ins
loop
mov
sbb
and
sbb
jg
xor
in
stc
pop
movs
jo
inc
push
push
lea
add
dec
loop
mov
cmp
imul
adc
not
shr
hlt
test
cmps
data16
adc
ja
pushf
pop
inc
jecxz
jb
add
xchg
out
gs
mov
add
fxch
lock
and
test
addr16
test
xor
(bad)
not
pop
mov
push
jle
frstor
inc
movs
test
add
cmps
inc
sbb
jno
popa
jo
cmp
les
sahf
test
stos
inc
aaa
call
push
into
fnstsw
xor
nop
rol
ins
leave
ror
xchg
xchg
test
dec
pop
xor
adc
cwde
sbb
inc
fadd
pop
sbb
sbb
and
cmp
fisubr
mov
fst
dec
inc
shl
je
push
xchg
jle
mov
adc
pop
jno
shl
sahf
cdq
dec
shl
setno
mov
sbb
sub
xchg
pop
xchg
xchg
leave
pop
outs
mov
fs
pop
mov
fsub
repnz
or
jp
stos
jbe
cmp
sub
mov
(bad)
call
dec
shl
xor
das
pop
push
xchg
inc
cmp
rcr
pop
pusha
out
xor
nop
mov
xchg
cmc
push
or
push
icebp
retf
call
into
cli
dec
mov
ret
jb
mov
mov
jo
outs
sub
(bad)
mov
or
sbb
pop
rcr
fs
scas
cmc
loopne
mov
pop
mov
das
fld
mov
jle
add
xchg
fistp
fwait
shr
adc
ins
push
gs
sub
mov
rcr
pop
rcr
add
mov
test
movs
jns
fdiv
lock
aaa
mov
mov
inc
cli
mov
aad
sbb
ds
dec
rcr
ss
fiadd
push
retf
sar
inc
xchg
jl
xchg
push
call
gs
jmp
loope
mov
or
lock
js
mov
punpcklbw
sbb
sbb
push
in
and
or
ss
mov
imul
xlat
adc
scas
mov
inc
pop
mov
xor
outs
call
imul
jne
dec
and
neg
inc
scas
(bad)
out
or
jnp
pop
retf
xchg
out
and
bnd
sbb
mov
nop
cmp
lock
xlat
enter
popf
mov
push
cmp
leave
aas
sub
aam
pushf
xlat
dec
push
stos
fwait
(bad)
xchg
mov
out
push
add
pop
jl
jns
das
add
aad
jp
mov
pop
dec
pop
push
mov
mov
data16
add
jecxz
adc
arpl
fst
add
mov
test
mov
and
xlat
jns
sub
mov
sbb
cmp
adc
stc
(bad)
out
xor
xor
jns
(bad)
pop
and
push
jg
mov
mov
dec
outs
packuswb
mov
add
pop
loope
mov
adc
aad
and
mov
fmul
ret
mov
into
mov
std
sub
les
push
sub
aas
arpl
fwait
nop
add
scas
mov
mov
jmp
shr
pop
and
xchg
mov
fisttp
enter
mov
pop
(bad)
push
xor
stc
jecxz
cs
and
clc
cmp
xchg
movs
jmp
mov
fidiv
pop
imul
dec
inc
pop
movs
out
movs
cmps
or
mov
jmp
push
jecxz
jno
enter
dec
pop
imul
or
sub
int3
test
push
sbb
xlat
cmps
adc
xor
sub
retf
sbb
pop
sub
pop
inc
(bad)
aas
and
aad
mov
ret
mov
out
mov
mov
or
and
add
test
and
dec
or
push
jns
lds
xor
pop
sbb
xor
scas
pop
xchg
xor
cs
js
inc
mov
mov
sbb
sahf
in
cmps
out
mov
sub
cmc
shl
dec
cdq
fidivr
jp
push
dec
sbb
sub
or
or
xor
cmp
sub
pop
call
jg
sub
inc
inc
arpl
push
js
adc
mov
lods
cmc
or
out
push
enter
push
xor
and
sbb
jge
cld
xchg
mov
shl
out
popa
inc
cmp
sti
out
iret
iret
mov
sub
and
adc
and
iret
enter
mov
inc
daa
push
les
iret
jno
or
add
jo
and
jo
xchg
sbb
daa
ja
aas
ins
retf
jle
sub
mov
xor
popa
adc
cmp
lahf
mov
jae
sahf
jl
pusha
out
and
and
mov
out
mov
pop
mov
sub
inc
sbb
jecxz
and
push
cmp
xor
push
enter
(bad)
pushf
push
in
repnz
lds
out
dec
adc
sub
data16
and
cmc
dec
sbb
xor
sub
ja
xchg
cmp
arpl
and
xchg
jmp
mov
sub
ret
adc
fist
stc
mov
fcom
push
imul
push
jnp
push
dec
fld
adc
(bad)
xchg
call
pop
mov
pop
cmp
adc
movs
in
arpl
push
pop
loopne
inc
jg
dec
xor
jmp
and
std
test
jg
inc
in
cli
push
inc
cmc
sahf
psadbw
jecxz
sub
push
mov
mov
icebp
cmp
push
push
movs
fcom
jecxz
and
sbb
sub
push
mov
cmc
pop
or
lock
inc
dec
push
retf
call
and
arpl
cmp
mov
test
inc
push
mov
sbb
pop
or
mov
sub
inc
pop
mov
xor
pop
cmp
sbb
fcom
xchg
cmp
push
fs
push
and
lods
dec
and
out
mov
jecxz
add
adc
cli
std
or
xor
stos
add
pop
mov
cdq
sbb
and
repnz
add
add
sub
mov
push
jns
mov
add
stos
push
call
jmp
sbb
retf
or
xlat
lock
rcl
(bad)
sub
and
pop
or
cmc
div
xchg
aas
hlt
cdq
movs
scas
movs
xor
std
add
lds
xor
frstor
cs
not
dec
fst
and
in
mov
shr
sub
pop
mov
test
push
repz
mov
sub
fidiv
ja
sbb
(bad)
or
shl
icebp
neg
pusha
push
xchg
adc
out
ror
rol
enter
shr
mov
pop
xor
cmc
(bad)
xchg
jo
push
or
out
mov
fcom
xchg
sub
adc
fadd
out
cld
sub
pushf
fild
loopne
adc
lds
cmp
mov
ja
repz
inc
mov
jmp
and
push
xor
push
xchg
xor
aad
call
adc
add
mov
xchg
popw
xor
pushf
test
shl
jg
xor
sub
out
cld
ret
fwait
aad
fstp
adc
inc
cmps
pop
stos
in
fs
rcl
pop
adc
sub
xchg
pop
mov
inc
repnz
xchg
cli
adc
sbb
inc
mov
pop
jne
inc
cmc
clc
cmps
inc
pop
iret
test
test
or
dec
xor
adc
js
rol
mov
push
or
mov
gs
or
mov
cmp
jg
aad
ret
xchg
mov
cli
jb
dec
ds
les
in
movs
cli
jb
mov
test
out
(bad)
shr
sub
mov
xchg
mov
adc
xchg
jecxz
in
lock
cwde
fldenv
pop
sbb
inc
add
ficomp
xor
enter
pop
idiv
std
shr
in
or
hlt
sub
pop
imul
clc
lds
das
scas
rol
add
out
or
inc
inc
mov
(bad)
loopne
jg
jl
adc
aad
jb
ins
or
push
popf
mov
or
mov
mov
xchg
xor
mov
gs
cwde
addr16
fist
scas
inc
fs
mov
daa
and
cmp
ins
ss
in
jbe
mov
push
sahf
inc
push
repz
test
mov
test
push
iret
js
pusha
and
test
outs
push
inc
dec
jnp
mov
out
aaa
cmp
jno
arpl
dec
xchg
cmc
dec
fcom
and
jo
ds
call
retf
sbb
pop
jmp
jno
inc
fadd
scas
adc
fwait
mov
pop
loope
push
fidivr
mov
and
pop
mov
jp
ins
fst
jns
(bad)
cmp
xchg
fbstp
pusha
fisttp
or
xor
icebp
adc
hlt
not
add
nop
scas
out
mov
fwait
adc
mov
mov
iret
jne
out
retf
rcl
push
mov
push
push
jmp
daa
xchg
mov
mov
pop
movs
pop
xchg
clc
fs
mov
sub
cwde
ja
shl
movs
out
lds
dec
mov
inc
jns
in
les
sar
ror
movs
fldl2t
sub
ror
rcr
mov
adc
test
jne
adc
ror
mov
popa
movs
add
cs
sub
cmps
inc
dec
ficomp
dec
mov
hlt
inc
out
in
stc
stos
jecxz
stos
jge
out
sbb
add
pop
imul
int3
push
pop
sub
push
loopne
in
jo
das
adc
pop
mov
fild
mov
pop
add
inc
not
clc
repnz
rcl
add
shr
stos
push
add
ret
out
xchg
xor
ja
lds
mov
inc
out
bound
push
jmp
xor
mov
icebp
call
bound
fcom
pop
repz
mov
iret
sbb
or
sahf
adc
push
leave
imul
cwde
ds
mov
push
mov
or
fldcw
jecxz
not
out
xor
loopne
in
jnp
enter
pop
sbb
stos
call
je
cmp
dec
xchg
xor
sbb
ins
enter
ins
push
cmp
lds
push
add
ins
bswap
add
jp
push
or
gs
mov
aad
pop
leave
xchg
js
push
adc
jp
loop
jnp
jae
adc
scas
dec
ror
add
or
sub
inc
mov
push
inc
(bad)
push
mov
push
xchg
sbb
ret
out
push
inc
out
and
mov
pop
jae
xchg
nop
push
outs
xor
cmp
call
out
fdivr
icebp
xlat
and
jmp
and
xlat
mov
sti
aas
xor
xchg
or
push
fstp
sub
dec
add
xchg
inc
add
(bad)
jle
push
cmps
mov
cli
cmp
or
xor
mov
mov
das
or
fcom
stos
das
(bad)
std
xor
(bad)
or
movs
pop
pop
cmp
lock
mov
std
lahf
cmp
(bad)
adc
lea
xor
pop
hlt
mov
add
iret
cmc
mov
call
or
sub
or
xor
ins
mov
xchg
iret
add
stos
nop
sbb
stos
out
arpl
cmp
jbe
es
mov
mov
int
sbb
sbb
xor
inc
loop
out
out
mov
cmp
js
sub
pop
mov
push
xor
(bad)
dec
xchg
add
cmp
ins
hlt
jns
movs
aas
loopne
xchg
mov
sub
mov
ror
shl
(bad)
loop
dec
sbb
cmps
mov
lods
cmc
jmp
xor
mov
popa
cmp
add
mov
pop
mov
inc
push
lock
dec
push
mov
cmp
nop
xchg
xor
add
int3
out
dec
mov
xchg
jecxz
ja
push
jge
push
mov
jae
cmp
or
mov
cwde
dec
pop
inc
dec
cdq
xor
mov
dec
movs
mov
pushw
xor
cmp
daa
ror
loope
or
dec
inc
outs
imul
jb
vshufps
and
movs
adc
and
in
cld
xchg
ret
adc
jl
jecxz
push
int
jge
in
jns
cmp
(bad)
aaa
xor
jge
and
cmp
mov
xchg
dec
fisub
mov
xchg
pop
(bad)
jge
mov
(bad)
adc
ja
fwait
push
pop
sbb
xchg
xchg
push
(bad)
mov
jmp
mov
mov
xlat
cmp
addr16
mov
(bad)
or
add
out
inc
mov
mov
jl
std
in
cmp
retf
mov
dec
ja
gs
adc
jno
outs
xchg
sub
adc
pusha
add
imul
aad
popa
pop
xchg
dec
daa
sub
push
loop
inc
or
push
mov
movs
inc
inc
repz
jns
in
or
cmp
sub
enter
enter
pushf
call
call
adc
or
scas
ja
jo
dec
hlt
fcom
arpl
ret
jb
ret
mov
sub
sbb
sub
or
adc
repz
out
xor
scas
scas
shl
pop
lds
dec
pop
dec
out
loopne
mov
rcl
mov
ss
test
imul
pushf
adc
outs
add
fidiv
fmul
dec
imul
jmp
stc
jno
dec
imul
dec
ret
add
into
loopne
dec
call
shl
test
ret
jo
ds
cmp
adc
dec
push
std
inc
adc
fld
push
retf
sbb
jcxz
jle
call
mov
shl
add
add
xchg
push
enter
xchg
cs
aas
cmp
inc
dec
push
movs
out
popa
imul
pop
and
dec
addr16
jg
ins
test
movs
cmps
or
push
and
push
xchg
cmp
imul
dec
sub
xchg
push
cmp
sbb
popf
rcl
es
out
icebp
add
enter
add
addr16
sub
sub
iret
es
and
lahf
mov
jnp
jmp
fwait
das
mov
xchg
icebp
lock
dec
inc
sub
stc
xor
mov
jb
ins
sub
inc
dec
retf
mov
jno
iret
or
mov
push
les
xor
pusha
xchg
stos
or
sbb
mov
pop
mov
in
or
adc
outs
mov
or
and
cdq
cmp
sub
addr16
int
pop
xchg
push
xor
popf
inc
pop
mov
ds
pop
mov
xlat
pop
or
out
sub
push
xchg
repz
retf
cmp
(bad)
in
lods
movs
ret
movs
push
int3
nop
jge
lods
pop
rol
daa
inc
test
fcmovbe
gs
inc
movs
nop
or
(bad)
jbe
imul
rcr
cmps
and
(bad)
out
repnz
ret
xor
pop
xor
sub
jae
jb
add
pop
adc
push
and
jle
sbb
sub
daa
xchg
pop
test
ror
adc
mov
xchg
cmp
xor
adc
mov
fnstsw
fldcw
test
test
jecxz
jmp
and
sar
add
xor
js
clc
sti
sar
movs
jo
mov
pushf
adc
or
nop
pop
ins
jp
or
mov
(bad)
adc
cmp
sar
out
das
xchg
mov
mov
repz
and
jge
(bad)
sti
addr16
push
sbb
xchg
les
adc
sbb
fpatan
cmps
loopne
jnp
int
xlat
dec
cli
das
and
xchg
int3
sub
repnz
sub
pop
imul
rcr
jle
into
push
sbb
mul
sub
mov
pushf
or
push
pop
call
xchg
add
imul
cmp
xchg
mov
or
int
aad
mov
js
out
sahf
push
dec
sub
push
arpl
sub
or
xchg
xchg
fcom
xchg
pop
mov
or
dec
mov
into
frstor
push
ins
(bad)
pop
fisttp
pop
xchg
repz
mov
dec
push
push
xchg
test
mov
xchg
adc
imul
loopne
add
js
mov
lds
inc
dec
(bad)
push
xchg
xor
cmp
std
in
popf
and
pop
loope
adc
sbb
jb
aaa
fisttp
sub
call
push
fsubp
push
pop
outs
mov
mov
inc
test
call
ss
pop
ja
adc
shl
cmp
fimul
int
jmp
sub
les
cmp
adc
call
add
(bad)
sub
mov
push
inc
(bad)
xchg
lods
mov
aam
rcl
in
stos
add
psraw
sbb
gs
push
and
popf
bnd
mov
pushf
mov
xlat
cmp
imul
and
pop
add
mov
inc
adc
lods
xchg
addr16
mov
cwde
adc
aam
mov
aad
rol
out
inc
and
lods
cmps
xor
stos
cmovg
ja
lods
mov
daa
loope
fwait
jmp
or
jbe
movs
mov
rol
add
sub
out
xor
scas
xchg
ficomp
sub
and
retf
fstp
test
cmp
mov
arpl
jno
xchg
pushf
and
icebp
pop
adc
int3
jae
dec
and
mov
dec
cmp
ret
mov
jbe
mov
xor
jnp
sbb
cmps
addr16
add
mov
lock
or
call
xor
cs
xlat
jns
out
enter
jmp
mov
sti
mov
test
ret
ret
xor
xor
pop
imul
in
cdq
into
mov
xor
jmp
fisubr
(bad)
movs
sbb
shr
inc
(bad)
out
cmp
js
and
pop
add
dec
mov
fisubr
sub
mov
or
cld
test
mov
cld
dec
push
shr
pop
rol
stos
cmp
adc
mov
xchg
pop
ret
stos
add
add
sar
jecxz
fisubr
add
and
cmp
sahf
ins
pop
pop
jae
fisttp
cmp
jbe
adc
push
aaa
test
xchg
cmp
cmp
pushf
xchg
enter
lock
ficom
cmc
push
add
pop
sub
jmp
or
ins
test
fisttp
push
cmp
sub
jnp
lea
rol
(bad)
jmp
cmp
and
repz
cmp
add
mov
xchg
sub
(bad)
pop
(bad)
and
fsub
push
sub
les
aad
sub
xor
adc
mov
call
int
mov
popf
cmp
pop
add
or
sbb
std
xor
inc
movs
iret
push
pop
loope
ret
xchg
mov
mov
jne
adc
xchg
or
fwait
inc
sti
inc
fcom
ss
shl
pop
inc
pop
cmp
int
and
mov
dec
gs
mov
sub
xchg
xor
and
hlt
lock
icebp
ret
out
pop
mov
pop
adc
xor
jle
pop
sbb
and
call
fcomi
stos
es
into
sbb
xchg
pop
cmp
adc
mov
loope
dec
mov
cwde
call
or
cli
fild
mov
xor
push
jb
adc
inc
sbb
sbb
jo
mov
xchg
std
pop
pop
mov
les
mov
sbb
cmps
push
mov
ja
clc
pop
push
ja
push
xor
cld
xchg
mov
movs
xchg
(bad)
adc
mov
shl
push
jg
bound
adc
mov
mov
xchg
xor
xchg
jno
aam
std
fadd
std
in
jp
cmps
xor
inc
jbe
mov
cmp
mov
push
call
pop
(bad)
cli
(bad)
enter
xchg
ret
adc
sbb
cmp
add
(bad)
fmul
adc
jle
fsub
bound
movs
mov
out
xor
ins
mov
pop
xchg
ss
push
mov
retf
addr16
scas
cmps
xor
in
lahf
and
add
mov
add
mov
pop
mov
scas
xchg
push
int
ror
cmps
sub
pop
mov
inc
leave
jmp
lds
and
sti
je
mov
stos
cmps
sti
stos
dec
inc
push
jo
fbld
jmp
add
ret
inc
adc
adc
push
je
pop
call
jge
cmps
les
inc
jae
popa
xor
inc
sub
lds
or
imul
and
popf
aas
jne
(bad)
cmps
mov
cmp
xchg
lds
test
loopne
bound
mov
test
(bad)
stc
stos
sbb
arpl
pop
int
(bad)
out
fcmovnbe
outs
fimul
rol
lfs
leave
arpl
outs
cs
or
inc
das
push
fsubr
fimul
int3
mov
ss
inc
lock
enter
push
call
movs
shl
pushf
mov
(bad)
adc
xchg
dec
xchg
(bad)
(bad)
ins
dec
push
cdq
out
mov
sbb
ror
mov
sti
push
xchg
scas
data16
dec
leave
and
js
imul
and
cmp
jns
or
(bad)
iret
retf
mov
das
jmp
clc
sub
loope
lods
iret
sbb
inc
push
xchg
icebp
mov
popf
lock
aaa
adc
or
in
cmp
mov
daa
mov
dec
and
(bad)
adc
aas
adc
xor
nop
adc
xor
mov
mov
stc
push
dec
aas
cmp
fdivr
dec
push
call
sub
pop
fsubr
mov
aas
jns
imul
mov
push
(bad)
iret
cli
pop
std
push
jo
sbb
cmp
aas
dec
jmp
xchg
sub
mov
loope
jnp
sbb
(bad)
cmp
and
iret
repnz
dec
aad
iret
push
adc
mov
cmp
dec
pop
jge
jge
push
in
push
push
aam
mov
jb
mov
ins
dec
pop
mov
sub
ficomp
pop
stos
mov
xor
cmp
clc
inc
push
(bad)
mov
es
sti
inc
(bad)
jmp
mov
out
mov
mov
ins
cmc
dec
cdq
leave
das
dec
ret
mov
out
push
xchg
or
cld
cmps
sbb
icebp
ja
vmptrst
adc
scas
cli
dec
mov
icebp
test
jmp
mov
clc
and
int
test
nop
xor
or
and
repnz
sub
cs
dec
pop
mov
or
cwde
mov
popa
adc
into
xlat
pop
cs
add
ret
iret
add
dec
shl
jbe
gs
icebp
fld
mov
out
imul
adc
adc
lds
std
dec
inc
rcpps
cmp
js
mov
ds
ror
icebp
popa
pop
rol
jl
sub
ins
inc
leave
mov
jmp
shr
jae
outs
jmp
push
aas
inc
add
push
test
scas
cld
or
inc
or
lahf
push
push
dec
sub
retf
or
sub
jns
push
ret
ds
ss
iret
jns
xchg
repnz
jle
les
sahf
ins
scas
fld
fidiv
(bad)
pop
(bad)
(bad)
shl
inc
mov
popa
lds
out
add
push
cmp
mov
outs
lods
aam
fiadd
mov
fimul
pop
(bad)
fnstsw
daa
mov
xor
add
lahf
cmps
add
int
lahf
and
pop
ret
inc
icebp
aam
xor
mov
popa
jne
cs
fcomi
mov
mov
addr16
inc
cmp
xor
sti
(bad)
mul
stos
inc
pop
aam
sub
cmp
add
enter
pop
mov
and
push
pop
jbe
push
ja
mov
sbb
mov
jle
jne
xchg
mov
jg
aas
fdiv
lds
ins
inc
sar
aad
je
pop
pop
mov
gs
mov
bound
scas
push
fsub
stos
pop
ins
cs
pop
(bad)
add
xchg
mov
bound
hlt
ficom
ds
xchg
or
xchg
cmps
je
lods
jno
dec
aam
push
adc
sahf
ds
int3
mov
adc
inc
adc
mov
or
or
dec
or
xor
jp
repz
es
imul
pop
cmp
sar
sbb
retf
jns
push
mov
stc
xor
dec
ret
popf
sbb
inc
dec
cld
cmps
sbb
loopne
bound
out
ds
imul
ret
or
fst
and
nop
es
xlat
sti
stos
fadd
jb
sub
pop
in
cmps
dec
mov
leave
gs
f2xm1
js
gs
in
add
dec
pop
and
ret
mov
mov
sar
mov
ja
dec
imul
mov
pop
add
xor
jnp
mov
scas
jnp
or
into
jne
jne
sbb
popf
jnp
mov
jo
adc
pop
icebp
jns
movs
adc
adc
mov
mov
call
ja
mov
loop
clc
inc
or
push
inc
test
loopne
stos
mov
pop
cmps
sbb
xor
fimul
mov
sub
iret
pop
lahf
xchg
adc
sti
retf
jg
add
nop
xchg
mov
neg
setns
adc
lods
jae
xchg
fwait
jne
adc
test
movs
sbb
dec
add
das
pop
lods
(bad)
ds
jp
adc
or
fwait
mov
outs
shl
in
aad
push
repnz
inc
pop
ret
test
jb
dec
mul
add
rol
sbb
push
pop
test
xchg
adc
cmp
call
pop
lods
rcl
ret
jnp
sbb
mov
push
mov
fwait
add
aas
sub
mov
or
outs
push
imul
xchg
cld
push
pusha
enter
les
mov
sbb
xor
retf
les
jmp
adc
dec
xchg
jo
xchg
fistp
jno
inc
ins
mov
pop
sub
or
add
fiadd
mov
enter
arpl
xor
xchg
test
pop
icebp
push
add
and
inc
xchg
add
sub
xor
mov
jg
mov
scas
enter
js
mov
pop
mov
add
and
movups
or
inc
mov
push
mov
xchg
mov
xor
pop
pop
dec
pushf
mov
jg
into
ss
inc
pop
(bad)
in
lods
dec
sbb
mov
leave
cmp
push
adc
ss
(bad)
xchg
adc
daa
sub
pusha
mov
in
cdq
sub
(bad)
pop
and
cld
repnz
mov
mov
mov
sbb
nop
out
xchg
push
pop
add
cdq
jg
pop
loop
mov
mov
outs
ret
push
xor
and
out
xor
daa
sahf
loopne
sbb
pop
ret
shr
lods
fistp
in
mov
fwait
adc
dec
(bad)
lods
call
and
xchg
mov
pusha
sub
cli
adc
pop
retf
into
cmp
push
ja
xchg
enter
inc
popf
mov
pop
xchg
adc
fwait
aas
mov
push
mov
arpl
cmps
jmp
inc
add
mov
mov
and
dec
jo
sbb
mov
push
in
adc
dec
fdiv
jge
pop
mov
and
mov
sub
mov
add
ja
pop
inc
add
xlat
das
or
dec
idiv
retf
mov
xchg
(bad)
movs
xor
xor
jbe
jge
sbb
mov
pop
mov
and
adc
loope
pop
retf
push
fisttp
mov
out
lea
mov
sbb
call
test
cmps
pop
jge
xchg
adc
test
adc
repz
cmp
test
push
pop
mul
inc
xor
aaa
push
shr
aam
mov
adc
(bad)
out
sbb
sbb
add
xor
and
mov
sub
mov
xor
stos
jne
add
mov
cmp
ds
pusha
xchg
sub
loopne
addr16
pusha
inc
cdq
ins
(bad)
in
daa
rol
fwait
sub
or
dec
adc
add
and
xchg
add
push
dec
or
pop
adc
int
adc
pop
popf
ret
dec
test
fdiv
mov
iret
(bad)
aaa
test
ror
mov
pop
pop
mov
loope
xchg
mov
jmp
into
mov
adc
jns
and
mov
retf
add
or
into
xor
mov
xor
mov
cmp
icebp
fistp
fnstcw
out
clc
in
or
in
adc
mov
data16
inc
loope
sub
clc
movs
or
jbe
aas
jmp
xor
test
inc
jmp
sub
jp
mov
push
mov
mov
sub
scas
mov
mov
or
into
xor
push
shl
inc
and
in
sti
sti
es
sbb
pop
jp
call
pop
hlt
push
rol
or
or
rcl
mov
mov
inc
fs
cdq
scas
inc
pop
fild
pop
(bad)
cmc
push
mov
mov
icebp
pop
dec
inc
sbb
js
and
ja
or
mov
out
xor
lock
inc
outs
or
call
mov
fcomp
inc
mov
test
xchg
xchg
retf
xchg
adc
push
pop
sbb
and
mov
xor
movs
ss
ss
les
sub
retf
shl
cdq
inc
iret
mov
(bad)
push
dec
pop
repnz
jp
push
retf
mov
mov
xchg
inc
stos
pop
(bad)
jl
jno
sbb
or
(bad)
inc
pop
sub
test
jmp
aad
and
out
nop
dec
jge
mov
xchg
out
test
mov
loop
fs
xlat
mov
add
dec
sub
pop
nop
repz
pop
add
loopne
ror
not
push
(bad)
mov
ret
adc
loopne
pop
mov
popf
out
push
outs
fcmovnu
mov
dec
hlt
dec
jle
mov
clc
test
stos
hlt
pop
add
jne
xor
inc
ss
repnz
and
pop
jae
std
aas
int
call
sti
cld
xor
les
into
leave
iret
sbb
jge
inc
xchg
dec
cmps
push
jns
retf
cmc
call
fdivr
out
push
aas
leave
inc
enter
jo
add
push
and
aaa
test
shr
dec
ss
inc
fist
pushaw
fs
jge
ror
rcr
sub
mov
popa
sbb
and
xchg
or
jns
jg
dec
adc
lock
test
jbe
into
jle
popf
jnp
pop
scas
nop
push
and
iret
xor
rcl
sbb
dec
shl
cwde
pop
fstp
jne
or
add
cwde
into
pusha
shl
pop
mov
sub
movs
push
in
repnz
fwait
rol
hlt
aad
jae
or
js
cdq
mov
push
stos
pop
cmp
(bad)
mov
mov
push
mov
jmp
sbb
mov
fidiv
add
jge
imul
push
cmps
xchg
pand
ret
xor
int3
int
outs
addr16
xor
mov
in
cdq
add
ja
push
pop
push
pop
imul
ds
pop
add
add
xchg
dec
cs
sbb
push
mov
sub
dec
push
mov
and
es
jno
dec
fmulp
xor
data16
pop
mov
jle
mov
mov
jle
scas
jnp
pop
and
test
hlt
shl
add
xlat
aad
in
out
jno
add
pop
jmp
fabs
push
jmp
pushf
jno
xor
pop
sbb
ret
push
mov
dec
retf
add
sbb
push
add
fild
sbb
push
mov
in
and
mov
inc
jg
xor
xchg
test
xchg
jo
mov
mov
adc
(bad)
pop
in
fdiv
rol
mov
and
dec
imul
mov
das
dec
loope
cli
std
mov
mov
sub
leave
pop
and
xor
sub
(bad)
mov
mov
sub
and
icebp
cld
ja
jmp
mov
mov
ss
add
push
not
daa
imul
adc
lahf
xchg
repz
bound
out
cmp
push
stos
dec
imul
cmps
xor
icebp
pop
xchg
push
leave
and
and
xchg
sbb
pop
sbb
outs
cli
jge
dec
fsubr
xchg
pop
pop
int
pop
es
pop
enter
sub
pop
ja
dec
and
add
imul
cld
and
scas
imul
cmps
xchg
aam
jno
or
test
sub
pusha
adc
outs
mov
push
adc
dec
mov
call
adc
add
push
fbld
xor
lock
and
retf
xor
mov
mov
pop
sbb
sub
push
popa
inc
sbb
xchg
stc
outs
and
(bad)
(bad)
xchg
sub
outs
xchg
dec
sub
sti
sbb
push
daa
sbb
mov
mul
adc
sub
fisttp
pop
(bad)
bound
jecxz
aad
in
adc
lock
cmp
ror
pop
outs
fistp
push
fnstenv
xor
jmp
hlt
(bad)
xchg
xchg
add
out
rcl
pop
xlat
xchg
mov
out
(bad)
pop
dec
movs
scas
scas
mov
cmc
xor
sbb
and
aad
aas
xchg
pushf
std
cmp
jecxz
sub
int3
pop
inc
stc
push
push
mov
iret
adc
fwait
aas
out
out
sbb
lea
cld
loope
dec
mov
int3
or
push
and
pop
(bad)
std
pop
cmp
aad
sbb
dec
imul
fnstenv
jne
aaa
aad
ficomp
lods
test
in
xor
aam
cmc
mov
outs
xchg
mov
dec
sbb
stos
loopne
xor
add
jb
pop
add
sub
cmp
les
test
mov
test
shl
in
sbb
inc
jg
inc
push
cwde
adc
sub
bound
std
int3
xchg
pop
das
inc
xchg
mov
out
mov
out
and
adc
jmp
data16
jae
aad
add
enter
add
xchg
sbb
dec
jmp
xor
mov
inc
adc
(bad)
std
arpl
pop
ret
stc
fld
popa
fs
cmp
cmp
jge
jmp
mov
jns
push
jmp
or
or
rcr
nop
add
cmp
jp
or
fcomp
or
sub
xchg
scas
inc
mov
xchg
in
mov
add
inc
das
stos
stc
paddd
or
cmp
push
out
push
cmp
and
mov
sub
lea
arpl
inc
sbb
inc
scas
shrd
pminub
sahf
jne
xchg
push
xchg
mov
pusha
sti
inc
cs
dec
test
mov
mov
push
sbb
test
leave
sub
pop
push
xchg
scas
lods
mov
dec
cmp
push
outs
adc
push
mov
cld
loopne
push
out
xor
mov
pop
inc
inc
iret
mov
aam
out
cmc
das
(bad)
in
jnp
ret
addr16
inc
aaa
repz
cmp
xchg
dec
repnz
add
sub
neg
inc
mov
enter
or
jno
dec
mov
(bad)
bound
std
test
iret
xchg
sub
shl
imul
ja
rcr
enter
out
popf
jbe
sti
or
cmp
cmp
pop
test
fisubr
and
test
pusha
test
cs
cwde
mov
int3
int3
std
mov
cld
out
pusha
mov
into
inc
xor
cmp
adc
int3
jne
sar
jno
dec
mov
sti
jbe
dec
add
std
or
retf
mov
in
cld
test
inc
fdiv
jnp
je
dec
mov
add
jno
and
jg
scas
mov
test
adc
or
mov
call
out
mov
aam
xchg
add
jmp
and
cld
fist
imul
sar
adc
(bad)
in
cmp
dec
and
fist
stos
fsub
and
jmp
inc
add
hlt
jg
out
daa
xchg
mov
jne
pop
retf
in
xor
mov
imul
jecxz
cmps
cmc
out
sbb
movs
push
lods
sti
ret
nop
loope
adc
jne
push
loop
leave
fisub
aas
(bad)
cmp
xor
sahf
imul
pusha
mov
add
in
or
push
dec
xchg
lahf
popf
adc
add
and
es
sbb
sti
add
in
push
mov
dec
pop
xor
nop
stos
outs
push
(bad)
dec
push
jecxz
addr16
out
stos
xlat
xchg
cmp
add
sub
jge
test
enter
int
outs
adc
lea
push
mov
cs
mov
inc
cmc
sbb
sbb
sbb
mov
test
xor
enter
in
mov
pop
std
cmps
enter
out
out
xor
push
mov
std
push
jo
out
rol
add
xor
call
iret
popf
rcr
pop
xor
gs
test
xlat
pop
fidiv
inc
mov
mov
adc
cmps
dec
xor
xchg
push
rol
je
inc
dec
xchg
or
outs
fisub
sub
mov
xchg
pop
sub
rcr
gs
or
es
jno
cdq
xor
pop
je
sbb
cwde
or
mov
cmp
add
cmps
retf
sub
(bad)
in
mov
bound
mov
es
pop
or
imul
pop
into
dec
call
or
xchg
sbb
cmp
rcl
jno
stos
ds
test
push
xchg
js
imul
push
pop
push
mul
sar
inc
dec
cmp
or
loopne
mov
xor
add
imul
mov
inc
lods
push
test
mov
adc
sbb
rep
movs
iret
jns
cmp
mov
add
push
inc
cs
cs
ret
je
bound
adc
cli
or
mov
jnp
mov
into
mov
adc
scas
cmps
sub
inc
jmp
sahf
and
loop
les
bound
icebp
sub
divps
movs
and
popf
cmps
push
(bad)
jb
dec
xchg
outs
lods
jmp
rol
cmp
test
jno
lock
add
mov
push
(bad)
lods
das
pop
inc
xchg
int3
mov
inc
inc
add
mov
stos
inc
shl
mov
cmp
popa
inc
ret
xor
out
dec
call
gs
ds
stc
xchg
(bad)
xor
shl
xchg
retf
dec
push
mov
loope
cmp
jb
test
popa
pop
push
dec
das
dec
xor
mov
adc
out
or
loop
lds
pushf
xor
mov
xchg
addr16
clc
gs
dec
dec
jo
int3
jg
mov
popa
adc
movs
gs
xor
mov
mul
push
inc
retf
and
stc
fst
jmp
jmp
add
mov
hlt
mov
or
cli
jge
and
adc
push
neg
and
push
mov
call
stc
sbb
pop
std
push
and
aad
(bad)
cmp
sbb
test
jmp
mov
inc
cmp
or
pop
fistp
push
aaa
and
pop
ret
fidivr
inc
cmps
cmp
sbb
mov
into
jecxz
or
fisttp
leave
xlat
shr
std
stc
icebp
(bad)
fst
push
add
inc
xor
call
pop
mov
mov
icebp
jbe
cmps
sbb
pushf
xchg
mov
sub
adc
pop
ret
daa
mov
jae
mov
push
jge
retf
jmp
jnp
cmp
pop
ret
psadbw
pop
(bad)
sub
inc
cld
dec
int3
mov
shl
sar
lock
xchg
mov
jbe
push
push
pop
test
cmps
pusha
es
mov
in
sti
adc
ja
cmovbe
or
test
(bad)
aad
xor
loop
fdivr
fdiv
aad
(bad)
pop
outs
int
mov
xchg
xor
bound
mov
cmp
or
sbb
push
push
xlat
sbb
push
sahf
(bad)
push
xchg
push
in
repz
and
sbb
outs
mov
mov
jo
call
loop
hlt
push
add
(bad)
cmovge
retf
mov
movs
push
mov
push
mov
inc
in
and
fdivr
mov
dec
jae
jmp
ret
add
(bad)
jg
je
xor
dec
(bad)
fwait
adc
pop
lahf
adc
jl
sbb
xor
dec
mov
cmp
scas
cmps
push
inc
adc
pop
jb
pop
arpl
shl
pop
mov
jns
shl
in
pop
jge
clc
dec
sbb
aad
das
mov
aaa
test
cwde
mov
fiadd
and
adc
into
xchg
int
sbb
lds
mov
jge
repz
ins
clc
sbb
retf
fs
sub
repnz
jno
mov
mov
jmp
mov
mov
push
inc
repnz
std
ins
call
push
rol
mov
adc
nop
lods
fmul
jmp
dec
dec
lock
in
add
(bad)
out
es
pop
sub
mov
ret
add
add
(bad)
(bad)
scas
push
retf
mov
(bad)
clc
xor
mov
jo
in
cmp
sbb
out
lds
ins
add
xchg
(bad)
cmp
push
jno
mov
jo
xchg
cmps
loop
dec
push
call
mov
dec
adc
movs
popf
sbb
inc
mov
mov
test
loop
das
out
movs
jg
push
cld
sbb
shl
dec
sti
(bad)
xchg
mov
(bad)
loopne
out
pop
adc
loopne
jnp
fucomi
xor
xchg
fild
or
sbb
lds
cmp
pop
mov
cmp
mov
js
pushf
inc
lea
fwait
push
daa
in
js
(bad)
mov
les
cmps
pop
push
je
fidiv
mov
mov
dec
cmp
nop
movs
shl
xlat
xchg
sbb
fwait
rcl
mov
adc
lea
mov
push
add
jns
(bad)
cli
dec
in
add
scas
test
js
test
out
or
pop
movs
mov
mov
pop
clc
vmread
push
enter
call
xchg
or
loopne
mov
ins
sbb
ins
lods
repnz
retf
and
into
cmp
xchg
lods
mov
mov
test
jmp
inc
mov
daa
cdq
mov
push
(bad)
jno
sbb
rcr
repnz
jae
nop
pop
mov
(bad)
gs
adc
rcl
scas
bound
mov
xchg
sahf
loope
mov
xor
add
mov
mov
loopne
and
xchg
pop
cmc
aaa
popa
pop
fld
cmps
add
shr
dec
xor
stos
das
mov
jle
daa
in
xor
mov
pop
jnp
std
add
movs
push
cwde
scas
fistp
xor
mov
cmp
cmp
dec
aad
sub
in
xor
movs
les
xchg
xchg
test
scas
or
pop
sub
mov
cmp
sub
inc
push
lahf
popa
mov
xchg
cwde
adc
add
in
sub
jecxz
scas
fs
cmp
out
push
mov
daa
inc
in
xor
or
cdq
call
push
xchg
dec
dec
mov
push
fidivr
push
cmp
pop
dec
aaa
inc
sbb
mov
inc
cmp
popa
lahf
mov
hlt
jmpw
cld
sbb
mov
push
dec
pop
rcl
je
jae
add
not
and
mov
cmps
mov
icebp
or
jb
fsub
in
xor
jle
(bad)
mov
lods
push
inc
push
cmps
lea
lahf
outs
ins
lahf
xchg
or
push
ins
mov
fadd
les
inc
stc
or
jae
dec
es
jnp
and
(bad)
aas
je
and
std
mov
mov
aaa
xchg
adc
or
sbb
xor
xor
jo
out
fbstp
mov
cmp
mov
sahf
pop
sbb
jbe
mov
xchg
sub
out
xor
int
cmps
dec
jno
lock
mov
dec
retf
mov
xchg
xor
dec
in
add
out
jbe
xchg
push
inc
and
inc
inc
lea
and
and
dec
lock
bound
pop
mov
jo
stc
xchg
sub
push
push
cmps
dec
jb
mov
mov
mov
xchg
add
mov
into
imul
ror
cmp
adc
push
inc
sahf
sub
pusha
leave
cwde
sbb
jo
cmps
sahf
retf
jle
xor
inc
(bad)
adc
jl
xchg
push
sbb
out
mov
sbb
(bad)
dec
popf
mov
push
sbb
jge
icebp
fnstsw
imul
bound
dec
jns
mov
pop
stc
push
popa
mov
jle
jne
ja
leave
pop
mov
or
jmp
pop
adc
sar
fwait
mov
pop
in
fdivr
mov
xchg
test
nop
push
pop
mov
or
or
dec
push
(bad)
hlt
icebp
cmc
mov
sub
or
pusha
neg
sub
sub
les
(bad)
hlt
out
cmc
jp
or
(bad)
bsr
ret
pushf
rcr
les
ret
cmc
and
push
ror
jb
lea
pop
pushf
fild
(bad)
jge
shl
mov
mov
in
ror
add
movs
leave
mov
jmp
idiv
inc
shl
outs
cs
loop
or
outs
ds
ja
stos
sbb
jle
hlt
das
mov
cmps
sbb
sbb
sub
pop
std
sub
fnstenv
sbb
pop
inc
or
and
nop
fnstcw
push
scas
push
test
add
das
lock
xor
push
call
xchg
jg
in
cmps
jecxz
mov
push
push
mov
and
cmps
mov
sub
mov
cmp
lds
xor
mov
test
mov
rcl
test
xchg
fimul
mov
je
fst
mov
test
mov
dec
push
jns
movs
scas
out
out
lock
nop
jno
in
mov
test
lahf
dec
das
add
ins
call
adc
ja
sub
cmp
xchg
cmp
pusha
mov
fisub
cmp
jne
shl
jno
cmc
lods
cmps
div
cmp
cmc
lea
stos
fadd
imul
xchg
xor
xor
repnz
adc
shl
gs
rcl
and
xor
and
arpl
cmps
call
inc
fild
adc
xor
ds
mov
jns
xchg
cmps
add
test
mov
fist
xor
mov
adc
pop
adc
stc
pushf
sub
jo
mov
arpl
or
sub
add
retf
or
in
and
lods
gs
xchg
sbb
push
mov
cmp
pop
cs
frstor
frstor
mov
jle
sbb
jno
jmp
add
cmp
jb
mov
push
outs
inc
out
mov
push
fs
inc
stos
xchg
add
add
and
mov
dec
fwait
cs
iret
and
pop
ficom
pop
fs
jno
mov
loope
and
pop
mov
lds
xchg
outs
and
mov
stos
data16
jae
leave
pushf
leave
movs
push
popf
pop
and
add
hlt
add
mov
test
xchg
sub
xchg
jmp
loopne
push
dec
in
push
and
out
test
sbb
int3
arpl
dec
cmp
mov
xchg
je
cs
adc
fisttp
or
push
push
(bad)
pop
or
jmp
ret
lahf
pushf
xchg
adc
pusha
mov
inc
loop
hlt
cld
push
pop
push
mov
xor
pop
mov
loopne
aas
cmp
addr16
jae
or
(bad)
sbb
cmp
stc
mov
cs
add
dec
test
inc
loopne
push
pusha
sbb
out
shr
jge
pop
jo
pop
cwde
bound
pop
pop
ret
and
daa
dec
loop
push
mov
enter
ret
shr
cmps
pop
or
stos
lods
pop
jbe
into
xor
xchg
lds
xchg
dec
hlt
dec
jle
inc
pop
aaa
xor
adc
or
push
mov
bound
stos
jae
fist
inc
fwait
test
sub
or
sub
pop
cmp
lods
jge
pop
test
jnp
pop
push
and
adc
or
sahf
xchg
push
mov
sbb
sub
inc
retf
or
stos
jg
xchg
cwde
rcr
iret
xchg
arpl
mov
lods
pop
adc
or
push
jmp
es
mov
ins
cmp
push
ja
add
neg
scas
ror
fcmovb
adc
mov
iret
xlat
xor
fldcw
mov
adc
ror
pop
pop
shr
mov
or
sub
mov
call
cdq
dec
mov
pop
push
dec
cmp
inc
cmp
sti
shl
dec
jb
call
enter
out
cmp
nop
out
fisub
repnz
push
mov
jb
xor
mov
lds
cmp
(bad)
in
cdq
mov
mov
cmp
cmp
cmps
inc
stos
pop
pop
data16
je
mov
adc
inc
icebp
lahf
out
mov
ins
mov
fnstcw
into
nop
das
push
fdivr
shl
movs
iret
lods
cld
jb
int
inc
movs
xchg
dec
and
sti
lds
rcr
fst
outs
retf
je
push
xchg
push
adc
call
push
in
ror
fldcw
arpl
pop
cli
mov
jae
mov
imul
add
ss
or
inc
jno
cmp
sub
in
jmp
int3
and
cmp
(bad)
ret
test
fnstcw
test
sar
jp
jns
test
add
inc
(bad)
cmp
mov
dec
sub
jno
cmp
lods
and
or
mov
je
push
stc
aam
xor
mov
inc
mov
stc
mov
dec
mov
xchg
cvtdq2ps
pop
xchg
cmp
cmp
ret
mov
in
(bad)
lock
xor
lods
mov
jmp
popf
push
fwait
add
fs
fimul
or
int
aad
fild
xor
(bad)
xchg
fstp
sbb
push
ds
or
xor
xor
mul
jmp
int3
pop
es
test
imul
aad
adc
inc
fucom
adc
xlat
jp
jno
push
mov
xor
xor
sub
mov
pusha
movs
dec
adc
push
xor
mov
xchg
xor
jecxz
in
neg
sub
mov
pop
xchg
xor
ret
icebp
daa
les
xor
call
sti
sub
bound
sub
std
cmp
add
shl
sahf
jne
mov
pop
cwde
imul
retf
frstorw
mov
or
pop
cmp
outs
pop
cmp
jecxz
mov
aam
nop
rcr
xchg
sti
inc
pop
out
outs
ss
dec
pop
or
mov
out
clc
cmp
outs
xor
cli
mov
aas
test
xor
or
pop
(bad)
call
inc
cli
dec
xor
mov
cld
cmps
dec
push
adc
mov
scas
jne
and
add
xchg
jo
ds
hlt
or
and
push
fdivr
or
xor
jmp
pop
das
idiv
dec
ret
in
into
outs
sub
(bad)
icebp
pop
cmp
sti
dec
mov
jle
lds
daa
sti
push
fild
out
div
or
daa
aas
je
add
es
sti
mov
xchg
and
mov
jo
sbb
xor
stos
jno
mov
mov
mov
sub
leave
ret
jl
lods
mov
cmp
cmp
fdiv
lar
mov
les
dec
adc
loope
mov
adc
dec
scas
jmp
xlat
js
daa
enter
into
fidiv
xlat
sub
sbb
std
mov
int
out
mov
scas
xor
push
lea
loop
add
dec
cmc
retf
xor
outs
inc
call
out
adc
sbb
sahf
sti
cli
sbb
fnstsw
cmps
das
or
mov
sub
xchg
dec
in
jo
xor
pop
imul
gs
or
mov
xchg
(bad)
nop
jbe
inc
push
mov
cs
sbb
adc
jb
mov
ret
(bad)
adc
dec
mov
dec
enter
outs
pop
fs
add
inc
repnz
jbe
add
out
fwait
sub
(bad)
mov
fidivr
inc
adc
dec
aad
cmp
jp
(bad)
mov
push
clc
jae
adc
test
rcl
(bad)
test
ret
adc
mov
jp
dec
fld
mov
jo
and
sbb
push
je
xor
and
xchg
pusha
and
ss
add
adc
inc
inc
fist
xchg
cld
add
fwait
(bad)
pop
cmps
xor
adc
fldenv
das
inc
mov
xchg
leave
shl
adc
push
adc
dec
and
sbb
mov
xchg
fucom
shl
mul
stc
inc
fdivr
(bad)
sbb
sub
not
fmul
int3
fdiv
fcomp
aam
push
mov
or
fwait
xor
pop
cs
aam
cmp
pop
pop
mov
jmp
mov
fwait
in
and
jle
shl
mov
lahf
add
addr16
addr16
popf
neg
add
adc
leave
data16
jne
sub
cmc
cmp
push
aam
cdq
arpl
pusha
sub
mov
or
out
and
push
and
lahf
inc
ficomp
scas
mov
lock
arpl
outs
add
(bad)
outs
jnp
pusha
ins
(bad)
int3
es
cdq
out
sub
cdq
cmc
sar
addr16
mov
dec
imul
neg
cmps
jae
(bad)
fbld
jbe
ss
or
stos
ds
jg
inc
mov
aam
mov
add
les
push
ret
xor
cld
(bad)
aas
inc
inc
ins
cmc
int
sub
addr16
add
movs
cs
jg
add
and
xchg
ins
ss
outs
pop
mov
xchg
in
mov
xlat
cmp
push
mov
jg
retf
sti
inc
jnp
push
enter
test
fs
or
push
ds
xchg
jge
jnp
mov
jge
pop
xchg
inc
xchg
mov
mov
mov
pop
repz
and
fidivr
mov
xor
ficomp
xlat
loope
push
aam
mov
sbb
jmp
mov
mov
ror
mov
popa
inc
hlt
push
inc
ins
jl
jge
ficom
mov
mov
jle
imul
lods
lea
jp
cmp
inc
shr
cld
xor
jmp
daa
ja
test
cmp
iret
fst
xchg
pop
imul
mov
lock
aam
jecxz
sbb
in
pop
and
push
push
sub
or
int3
inc
or
out
lea
out
sbb
cmc
rol
das
pop
inc
push
pop
mov
mov
mov
loopne
xchg
retf
and
pop
fadd
xlat
nop
adc
or
mov
(bad)
cmp
fadd
sub
aam
dec
pop
int
dec
cwde
sbb
stos
test
cmps
or
in
inc
cmps
test
ja
stc
into
aaa
sar
in
and
push
adc
rcl
jl
into
add
icebp
rcl
cmp
cld
mov
pop
mov
push
movs
(bad)
sahf
call
xchg
jne
adc
shl
fwait
pushf
shr
cld
mov
jge
xchg
clc
in
or
cmp
ins
sar
ins
xor
into
ds
test
aas
imul
sbb
gs
xchg
cdq
mov
pop
xor
xor
push
fisubr
pop
sbb
(bad)
lds
in
jmp
stc
adc
cld
push
stos
sub
loop
xor
popa
popf
cld
adc
sbb
sbb
sbb
ret
fs
(bad)
mov
adc
push
imul
popa
fadd
push
fisubr
inc
mov
cli
pushf
stos
mul
or
repz
aad
outs
inc
pop
mov
jl
dec
xchg
xlat
xchg
fisub
dec
into
inc
mov
dec
inc
les
retf
mov
jbe
test
cli
scas
push
inc
cmp
mov
in
jmp
cli
cmps
js
and
sbb
or
dec
std
xlat
adc
fisubr
add
jb
mov
mov
sbb
and
mov
jp
repnz
daa
stos
mov
test
or
cld
xor
cld
cmp
xchg
cmps
ins
loope
xchg
cmps
gs
add
and
push
pop
pop
dec
pop
test
idiv
add
and
in
mov
retf
xor
icebp
(bad)
cmp
cmc
shl
cmp
dec
outs
dec
ret
mov
cwde
ss
mov
popf
push
mov
xchg
bound
cmp
mov
and
cwde
pop
sar
add
fwait
sti
das
adc
xor
sub
(bad)
mov
push
push
aas
sub
in
xchg
(bad)
mov
je
lods
mov
dec
sub
sti
inc
jmp
sbb
jnp
out
(bad)
ret
mov
fsub
int3
scas
add
fistp
jbe
mov
dec
call
dec
pusha
ss
jle
out
test
sar
mov
out
or
lahf
adc
imul
movs
movs
dec
scas
(bad)
or
sub
pop
andnps
sti
int3
pop
xchg
aam
xor
and
inc
imul
loope
sbb
and
push
es
add
(bad)
pop
mov
sub
add
dec
xchg
pop
sub
out
cmp
lds
les
mov
mov
pop
push
fxch
or
xchg
add
arpl
fwait
shl
sbb
pop
inc
out
push
sbb
xor
jecxz
enter
mov
add
scas
out
in
and
test
fcom
or
mov
dec
in
in
mov
cmp
sub
jge
push
add
push
inc
je
adc
and
jmp
loopne
cmovle
or
or
mov
retf
lods
ficomp
jecxz
lock
fidivr
shl
mov
popa
and
xor
jno
and
push
fldcw
mov
inc
cmp
int3
cmp
push
adc
adc
sbb
xchg
ds
les
sbb
add
in
std
jmp
loopne
fdivr
popa
jmp
sub
fld
cwde
or
pop
xchg
cs
sbb
call
test
jge
push
xor
je
cmps
(bad)
mov
add
mov
or
scas
gs
or
mov
pop
or
dec
push
inc
jae
pushf
jecxz
nop
jnp
outs
add
jg
lods
jb
cmp
mov
sub
shr
fdiv
adc
call
call
neg
icebp
pop
imul
mov
sti
xor
test
mov
sti
shr
test
pop
movq
clc
lods
fnstsw
call
xor
add
jb
adc
inc
and
push
sahf
lods
loope
mov
xchg
inc
pop
xchg
scas
mov
cmp
sub
lock
repz
jnp
in
inc
push
into
ja
cmp
mov
je
jp
iret
cmp
out
add
std
push
loopne
outs
xchg
sub
in
(bad)
clc
stc
loope
mov
inc
mov
sub
fcomp
sbb
xchg
sub
fwait
les
test
sbb
into
cmp
push
sbb
adc
inc
inc
xchg
add
mov
ins
inc
xor
out
mov
sbb
test
imul
add
mov
and
ficom
xchg
ins
jmp
jb
hlt
xchg
inc
inc
movs
and
and
mov
jns
aam
dec
div
push
xlat
or
mov
dec
and
sbb
dec
sub
and
shl
test
mov
inc
push
stos
dec
pushf
aaa
mov
push
fucomi
(bad)
mov
adc
in
sbb
add
mov
or
and
int
cwde
loop
movs
std
push
les
inc
jae
mov
add
dec
cmps
jne
xchg
dec
dec
stc
pop
in
aaa
xchg
pop
mov
ss
sbb
push
movs
call
inc
jle
jne
sub
movs
push
mov
test
mov
rol
fisttp
mov
aad
jno
pop
shl
call
pop
pop
cli
jl
add
movs
dec
push
mov
outs
adc
lods
scas
xor
nop
stos
fcom
or
cld
jg
cwde
push
mov
push
jge
mov
neg
or
adc
int
sub
aam
xchg
mov
pop
fstp
mov
jp
addr16
jnp
or
pop
(bad)
or
jno
call
fdivr
call
test
sub
(bad)
cwde
outs
fstp
cwde
xchg
xor
sbb
je
or
daa
jb
scas
test
(bad)
aad
rol
call
bound
mov
sbb
gs
mov
adc
mov
jb
jns
pop
jmp
and
mov
or
mov
das
call
cdq
add
int
mov
rol
iret
xor
mov
pusha
pop
cmp
pop
les
mov
out
mov
dec
aas
lods
mov
sti
mov
jl
mov
jecxz
xlat
push
jg
xor
jmp
rep
mov
adc
inc
and
aam
shl
add
js
test
push
push
cmp
fistp
cld
dec
out
mov
shl
fld
bound
mov
es
cmps
es
pop
mov
ret
mov
movs
sub
mov
fild
into
fs
sbb
aad
loopne
pop
pop
sti
fs
cdq
aad
test
xchg
jl
pop
push
jo
retf
dec
dec
in
mov
xchg
ins
mov
sti
cmp
mov
mov
dec
dec
jns
mov
dec
mov
mov
into
(bad)
pop
sar
iret
add
dec
jbe
scas
arpl
fild
cmps
test
or
inc
cmp
xor
mov
dec
int
mov
ins
dec
es
inc
mov
dec
or
ret
fs
cli
push
cmp
stc
mov
sbb
adc
stos
nop
cmps
mov
pop
cmp
push
xchg
retf
cld
call
arpl
leave
sbb
push
inc
jns
xor
and
icebp
outs
fisubr
sub
mov
cmps
ja
mov
fistp
sub
sbb
and
xchg
sub
repnz
loope
(bad)
sub
xor
cmp
push
xor
cmp
ins
(bad)
movntps
scas
test
hlt
outs
stc
sbb
cmc
mov
dec
push
out
pop
cmc
jmp
jle
cmp
lahf
inc
pop
outs
in
(bad)
jo
rcl
push
(bad)
pop
mov
lds
jo
(bad)
jae
push
xchg
and
add
lahf
hlt
call
inc
or
xor
sbb
out
pop
retf
cmp
mov
imul
ret
sbb
xlat
mov
loopne
fwait
inc
cmps
scas
mov
fadd
sub
out
dec
and
pop
mov
das
ins
dec
mov
ins
sbb
popa
fld
add
das
sub
hlt
mov
arpl
mov
or
fild
mov
pop
and
ins
sub
xchg
ds
out
jnp
je
enter
push
sbb
adc
inc
xchg
jbe
into
call
movs
dec
dec
cdq
xchg
shl
mov
das
(bad)
jno
movntps
ret
nop
adc
iret
(bad)
fadd
adc
add
xlat
lods
pop
loopne
or
fldenv
lock
cmp
out
(bad)
js
fisub
(bad)
js
and
fidivr
adc
add
cmps
xchg
sbb
enter
cmps
sbb
mov
js
sub
mov
shl
fs
mov
pop
xchg
ficomp
inc
inc
inc
not
mov
cmp
ficomp
in
or
fwait
movaps
jg
scas
(bad)
jmp
add
and
in
inc
adc
jne
xchg
gs
lods
sbb
fldcw
rol
push
daa
jle
and
popa
out
jp
mov
push
mov
sbb
lods
(bad)
in
mov
jp
pop
adc
dec
retf
test
and
cdq
(bad)
mov
lods
daa
pop
mov
push
inc
pop
mov
rcr
mov
in
ins
mov
and
inc
push
push
push
add
mov
jmp
ffree
test
sbb
cwde
mov
mov
or
div
cmp
or
int
lods
inc
repz
mov
mov
das
stos
(bad)
neg
sbb
addr16
es
cli
leave
sbb
sti
cmp
sub
out
ret
fnsave
loopne
das
xor
or
enter
les
inc
push
sub
pop
pop
mov
jns
arpl
retf
fwait
pop
sbb
add
in
jbe
test
fwait
jmp
adc
and
sub
sti
xchg
ret
repnz
xchg
dec
js
adc
fndisi(8087
and
das
or
cli
mov
sti
dec
or
push
test
jae
push
push
je
mov
mov
lea
call
stc
retf
mov
daa
jb
movq
fnstcw
int3
scas
or
pushf
into
add
and
ss
les
push
pop
push
push
cld
push
sbb
or
retf
jns
js
adc
int3
call
je
xor
xchg
enter
xor
mov
bound
jmp
pop
pop
dec
jns
fwait
dec
out
ins
(bad)
pop
in
inc
mov
loopne
sbb
add
inc
mov
cld
push
push
jo
push
xor
pop
nop
pushf
jmp
in
add
cmp
xchg
cmps
call
das
aaa
cmp
mov
adc
xchg
lds
(bad)
cld
push
pop
bnd
gs
ja
sti
fild
xchg
and
xchg
push
mov
cs
adc
imul
test
scas
sub
sbb
inc
pop
addr16
mov
(bad)
sti
mov
jnp
stos
fmul
add
inc
movs
jmp
cmp
in
xor
pushf
icebp
fnstsw
and
jecxz
sub
xchg
dec
mov
cmc
inc
push
push
loop
cli
imul
js
mov
lods
sbb
sub
mov
stos
out
mov
inc
(bad)
into
lock
mov
pop
cmc
mov
pop
jnp
cmp
fbld
rol
cs
pop
lods
mov
push
ror
push
push
sbb
xor
mov
push
fld
or
cmp
adc
mov
or
push
pop
lahf
mov
lock
ret
dec
dec
sub
add
pop
pushf
mov
mov
test
mov
mov
cmp
jg
dec
into
scas
mov
cwde
and
dec
daa
pop
int
lods
aam
cmp
xchg
ret
movs
mov
dec
fdivrp
mov
mov
test
aas
pop
mov
addr16
stc
push
mov
push
mov
rcl
lods
out
out
pop
ss
xchg
aas
(bad)
jle
or
xor
dec
dec
jge
pop
gs
mov
repz
in
jge
add
cmp
cmp
mov
pop
lock
sub
xor
cwde
adc
mov
xor
push
mov
add
inc
or
adc
jns
cdq
ja
(bad)
out
jge
push
out
pop
push
adc
ret
leave
or
repnz
popa
xchg
pop
jmp
xchg
xor
jge
loop
and
inc
or
mov
or
popf
call
popa
pop
cmc
rcl
lods
and
iret
scas
push
jbe
mov
mov
or
popf
sahf
cmp
xor
cs
adc
and
xor
mov
inc
shl
clc
cmp
popf
cmp
or
dec
or
jno
test
sbb
stos
inc
scas
and
es
mov
in
iret
push
je
xchg
and
dec
jno
data16
xor
int3
cmps
mov
pusha
stc
jle
cmp
mov
xchg
iret
gs
xor
retf
and
and
movs
push
pop
retfw
jg
movs
rcr
mov
mov
rcr
push
adc
pop
fadd
mul
inc
add
ss
or
mov
stos
leave
gs
data16
lea
mov
repnz
adc
fnstcw
mov
fadd
je
leave
xor
xchg
mov
stos
test
xlat
enter
pop
out
mov
stc
bt
push
push
test
xor
cmp
cmc
mov
adc
in
adc
adc
ficomp
ficomp
xchg
xchg
jmp
ret
mov
es
jg
pop
stos
lock
out
jmp
div
js
fld
pop
sbb
cs
dec
xor
pushf
and
sahf
neg
cdq
sub
xor
repnz
(bad)
jae
dec
xchg
dec
(bad)
into
fdivr
push
fdivr
sbb
pop
jae
xchg
xor
xchg
call
iret
add
dec
scas
fs
fisubr
lds
mov
lahf
or
jle
adc
xlat
jb
arpl
data16
cdq
push
dec
lds
xchg
std
mov
outs
ja
rol
cwde
mov
or
not
mov
xchg
aam
push
jle
iret
arpl
inc
std
loope
or
repz
aam
(bad)
cdq
cmp
inc
das
cmp
aad
(bad)
push
shl
push
pop
hlt
repz
and
sub
sbb
cmc
test
push
mov
mov
pmuludq
leave
ror
or
pop
daa
popa
pop
sbb
stc
jae
ret
scas
dec
leave
pop
push
shl
lds
jmp
pop
aas
cli
int3
xchg
lahf
sbb
dec
push
gs
adc
push
cdq
jnp
int
stos
or
data16
lods
in
ds
adc
push
dec
(bad)
cld
leave
mov
retf
jno
cmp
xor
(bad)
stc
int3
loope
xchg
arpl
sbb
out
rcr
dec
pop
call
xor
int
xchg
div
sub
fistp
lods
loope
fidivr
sub
xchg
repnz
leave
ins
inc
or
js
int3
and
or
pop
dec
ins
retf
gs
mov
out
lea
add
mov
xor
xchg
or
pusha
ret
aas
aaa
xor
fdiv
xor
cmps
aad
sub
neg
outs
mov
xor
fwait
mov
mov
jle
cld
mov
jmp
inc
pop
push
cld
popf
pop
and
out
ds
xor
fdiv
push
ins
jnp
fnsave
test
pushf
in
imul
fldcw
movs
sbb
xchg
iret
fwait
pop
jecxz
sbb
daa
scas
aad
cmps
push
push
push
xlat
enter
cmp
mov
sbb
adc
rcr
lods
mov
add
stc
and
sar
retf
and
mov
mul
out
dec
shl
sahf
push
nop
retf
xor
cmp
ficomp
in
xor
pop
xor
test
xchg
fwait
neg
adc
push
ja
mov
arpl
cmps
inc
adc
mov
adc
sbb
xor
xor
and
xor
cmp
cmps
fwait
in
addr16
mov
cdq
cdq
lods
lahf
inc
imul
test
and
fnstsw
dec
pop
out
mov
pop
xchg
das
ins
and
sbb
mov
sbb
sub
icebp
jne
scas
pop
xchg
push
call
pop
test
(bad)
imul
sbb
imul
mov
sar
cmps
int
std
mov
fwait
pop
aam
inc
shl
loop
sbb
leave
xlat
inc
ins
jecxz
not
loop
fstp
sub
pop
inc
add
and
dec
aas
call
jae
jb
ror
inc
lods
push
push
retf
inc
push
push
jecxz
fisubr
mov
mov
fldenv
jae
out
rcr
std
cmc
pop
pusha
inc
out
and
push
push
push
mov
dec
ret
inc
mov
mov
and
lahf
(bad)
in
fadd
scas
in
retf
(bad)
imul
jg
pop
pop
out
fwait
enter
mov
sbb
jecxz
inc
pop
outs
call
mov
dec
gs
lock
dec
sub
xor
xlat
jne
mov
sbb
pusha
mov
not
push
and
push
(bad)
cmp
shl
mov
(bad)
test
shr
cld
fdiv
and
ds
pushf
rol
out
sub
xchg
xor
retf
in
mov
push
dec
rcl
and
dec
jmp
or
int
pop
je
clc
retf
out
dec
loopne
aaa
adc
push
mov
jmp
mov
test
add
sub
mov
or
clc
div
pushf
mov
pop
(bad)
xor
cmp
dec
push
scas
movs
sbb
lds
mov
iret
pusha
adc
push
mov
sbb
jne
ins
inc
push
inc
fistp
xor
ss
out
mov
imul
fidivr
or
dec
and
neg
std
mov
cmp
xor
jb
aam
icebp
pop
dec
xchg
rol
out
and
frstor
inc
int3
fisttp
jmp
adc
mov
mov
adc
sahf
shl
aaa
xor
iret
xor
sbb
loop
and
mov
test
pusha
add
adc
mov
popa
xor
dec
in
pop
mov
dec
xor
pop
mov
pop
clc
stos
sub
outs
nop
dec
scas
mov
pop
cwde
inc
popf
shl
popa
inc
imul
add
pusha
imul
mov
mov
xchg
dec
and
pop
fwait
je
ret
or
popf
jno
sahf
aas
retf
and
test
idiv
and
add
cmps
pusha
push
and
dec
mov
mov
inc
popa
call
inc
xchg
test
out
inc
add
cmp
add
cdq
mov
out
push
lahf
es
or
push
hlt
cld
adc
sub
rcl
popa
clc
pop
mov
mov
inc
mov
scas
ss
cs
out
pop
stc
push
repz
xor
stos
mov
xchg
inc
sar
aad
push
dec
cmp
fimul
adc
xchg
sbb
mov
pop
and
cmc
shl
and
out
fs
int
ins
into
add
daa
imul
dec
div
add
push
pop
(bad)
mov
mov
in
leave
add
stos
or
xor
sub
call
mov
or
adc
sbb
mov
xor
add
jl
cwde
shl
iret
add
sub
jecxz
or
pusha
arpl
ret
stc
sub
inc
je
es
mov
ret
call
jmp
or
or
imul
sub
lods
(bad)
sub
cmp
adc
repnz
pop
cmp
mov
ja
fs
sub
push
and
cmp
jg
cmc
in
dec
fcom
scas
and
mov
or
(bad)
push
cli
push
std
lds
call
xchg
mov
out
cmc
pop
dec
mov
lahf
mov
test
outs
retf
push
pop
sbb
call
test
or
xor
(bad)
mov
daa
xchg
lods
dec
inc
cmp
inc
repnz
add
push
push
mov
cdq
adc
dec
push
popf
sub
outs
inc
dec
add
es
xor
arpl
cmp
aam
pop
sbb
mov
lods
jecxz
dec
adc
mov
mov
sub
inc
in
ins
jnp
cmp
xchg
ret
leave
scas
rcl
pop
adc
push
mov
and
xchg
sbb
test
in
fcom
xchg
mov
push
lahf
mov
or
adc
loope
inc
mov
cmp
push
(bad)
cmp
sbb
in
cmp
inc
aaa
pop
ret
or
cli
sub
adc
and
push
lock
in
adc
lahf
jnp
pop
fcomi
call
jmp
cwde
push
cmp
inc
xor
pop
shl
je
je
sbb
retf
in
popa
(bad)
rol
div
or
inc
in
fwait
xor
adc
faddp
lds
ins
sbb
loop
add
sub
mov
dec
inc
mov
jge
je
scas
cmp
popf
sub
lea
ins
jle
pop
fwait
movs
imul
mov
dec
pushf
in
retf
add
ss
xchg
cld
mov
adc
loope
mov
dec
jns
pop
jl
push
pop
cli
mov
jmp
int3
dec
mov
sbb
jae
jg
pushf
sahf
mov
pop
shl
ins
push
cmp
cmp
pop
scas
mov
imul
mov
adc
and
jns
push
ss
xchg
or
icebp
cvttps2pi
arpl
xor
pop
inc
jnp
xchg
ja
xor
mov
push
or
cmps
es
scas
std
pmullw
dec
add
mov
jo
xor
mov
jbe
xor
ss
cli
test
lods
fcom
aad
xchg
scas
xor
jns
ror
push
(bad)
xchg
mov
cld
loop
pop
push
cmp
xchg
jae
pop
ja
cmp
adc
sub
ja
ins
cdq
xchg
mov
pop
clc
cs
jle
sub
xlat
push
xchg
leave
ja
jg
and
jp
adc
(bad)
out
loope
adc
pop
mov
mov
add
xchg
xchg
fwait
imul
push
repnz
lods
xor
mov
sub
cmp
repnz
ss
jo
jp
cmp
(bad)
push
jg
dec
pushf
or
inc
xchg
bound
adc
(bad)
in
das
inc
and
call
rcl
fisubr
popa
pop
dec
movs
das
push
scas
dec
pop
mov
cmp
jno
push
sub
xchg
mov
pop
mov
adc
mov
push
xchg
cs
jg
push
cmp
sub
jne
cpuid
adc
mov
push
js
lods
(bad)
push
pushf
add
xchg
ror
ret
sub
mov
push
sub
xor
sbb
icebp
add
js
je
sub
nop
arpl
repz
jmp
ja
aas
or
outs
shr
cmp
mov
push
(bad)
sub
inc
call
es
xlat
daa
ins
inc
call
bound
pop
inc
mov
mov
pushf
push
arpl
lds
sub
or
pop
push
test
stos
test
sub
sbb
push
jp
xchg
sub
push
pop
out
push
gs
sub
imul
mov
retf
pop
sbb
mov
jmp
inc
iret
(bad)
clc
movntps
(bad)
sti
ret
mov
idiv
les
icebp
pop
fistp
pop
mov
mov
rcl
cwde
or
into
(bad)
xor
and
out
jle
lods
mov
outs
sbb
dec
out
loop
sbb
addr16
ds
and
cdq
push
imul
sub
fst
jecxz
push
cmp
mov
dec
loop
test
test
push
out
xchg
ja
popa
mov
push
inc
retf
add
cld
lock
mov
dec
push
stc
addr16
inc
into
mov
mov
out
sti
fnstenv
repnz
xor
push
push
dec
xchg
ret
push
fsubr
ds
xchg
jb
not
retf
in
dec
ret
cmps
lahf
mov
dec
ret
inc
loopne
fbstp
into
retf
pop
or
outs
dec
xchg
sub
mov
push
stos
adc
(bad)
call
fs
in
mov
mov
out
mov
fwait
cdq
lods
loop
mov
adc
pop
mov
repnz
aad
jmp
xor
retf
(bad)
cmc
out
mov
push
ins
push
add
pop
cwde
add
jecxz
xlat
sub
jbe
nop
or
loope
mov
in
out
cmp
jp
rcl
xchg
sar
ret
mov
mov
push
imul
ins
pop
cmp
mov
es
leave
int
out
pop
retf
mov
dec
mov
jmp
ja
out
xchg
add
fadd
push
loopne
mov
clc
cmp
aam
sub
loopne
xor
mov
(bad)
int
pushf
inc
test
jns
dec
cmps
xor
ret
mov
enter
outs
call
mov
fstp
es
jae
sbb
jp
cmps
xchg
sub
mov
je
repz
xchg
xlat
xor
fnstcw
mov
in
or
xor
nop
cs
lods
inc
jns
inc
adc
sar
icebp
jnp
iret
add
xchg
or
mov
jg
dec
jns
js
pop
iret
nop
xchg
xor
aaa
push
xchg
mov
ss
ja
jo
cmp
cli
sub
or
xchg
inc
xor
adc
mov
jns
mov
inc
mov
mov
jo
fmul
sbb
repz
mov
or
cmp
je
mov
sar
iret
inc
cdq
fnstcw
enter
jne
mov
sub
and
adc
mov
mov
inc
mov
cmp
push
jne
inc
xchg
int
xchg
cmp
mov
mov
test
adc
adc
mov
or
icebp
or
fild
jbe
stc
(bad)
mov
ja
jle
mov
push
mov
and
ret
ins
and
mov
dec
cmp
and
aad
push
and
push
push
lock
mov
pop
xchg
mov
ins
mov
fs
add
inc
pop
dec
xlat
outs
ret
sbb
outs
mov
mov
cmp
xchg
and
dec
mov
push
jae
mov
iret
es
je
mov
inc
xchg
xchg
in
xchg
(bad)
mov
fisttp
(bad)
mov
xor
aam
dec
(bad)
fadd
xchg
call
cli
push
in
jne
push
retf
popf
and
jecxz
mov
aam
std
cmp
add
jecxz
iret
shl
pop
add
ret
mov
scas
push
in
leave
lods
xchg
sbb
push
das
sahf
xor
push
pop
pushf
(bad)
sub
pop
js
xor
or
(bad)
enter
aaa
stos
mov
js
and
inc
mov
aas
mov
mov
fwait
aad
cld
inc
les
out
mov
adc
push
jl
jl
push
test
fbstp
inc
pusha
mov
push
daa
imul
inc
pop
in
outs
call
cmp
std
call
xor
fnstcw
ins
into
pop
mov
(bad)
(bad)
movs
in
shl
sbb
arpl
pop
adc
mov
adc
sbb
dec
jnp
add
gs
lahf
push
or
push
(bad)
adc
sbb
add
out
imul
stos
jecxz
jge
cmp
in
push
pop
cmc
leave
push
mov
call
std
pop
sub
xchg
add
add
pop
out
enter
and
stc
pop
cwde
sahf
in
sbb
int3
call
push
out
std
xor
stc
sbb
data16
pop
fisub
and
std
xor
iret
mov
or
xchg
pusha
sub
sahf
cmp
xadd
pusha
xchg
mov
stc
and
stos
dec
test
es
out
imul
ins
(bad)
mov
xor
cli
push
fwait
adc
and
or
jbe
push
in
inc
inc
jge
in
push
cmps
in
cs
inc
dec
mov
sbb
movs
mov
add
adc
fwait
mov
mov
sbb
xor
push
pop
adc
fcmovnb
scas
test
cmp
lahf
pop
jmp
adc
into
popa
call
xchg
lods
push
loope
cmp
jae
das
out
cdq
sbb
loope
fcmovbe
add
jg
out
jp
jle
xchg
js
out
(bad)
xchg
sbb
pop
mov
lea
pop
or
jmp
dec
jmp
dec
mov
pop
add
movs
es
and
add
jmp
cli
adc
inc
fld
(bad)
pop
ins
jg
ret
ret
in
sbb
fwait
out
sti
rol
mov
jge
mov
fisubr
loope
inc
pop
xchg
rcl
and
jp
retf
mov
inc
mov
ins
pop
out
popa
push
enter
das
fdivp
pop
mov
aaa
in
int
pop
jae
rol
shl
jg
cmp
aaa
inc
int
sbb
xchg
xchg
mov
adc
dec
sub
push
mov
jnp
test
enter
(bad)
fsubrp
or
mov
shr
dec
iret
gs
cmp
inc
inc
xor
retf
out
loop
enter
fdiv
fdiv
mov
popf
and
add
jnp
bound
adc
dec
and
shr
cli
fisub
cli
and
cmp
mov
dec
ret
cli
shr
daa
add
(bad)
cmp
mov
inc
adc
and
(bad)
jmp
ss
ins
retf
call
xor
dec
mov
or
mov
add
or
repnz
fld
shl
lahf
adc
ret
mov
inc
pop
jp
aad
xor
jne
cdq
(bad)
lods
addr16
jmp
ins
pusha
mov
call
or
jg
mov
bound
mov
loope
stos
adc
test
xchg
std
add
xor
inc
inc
push
dec
sub
mov
cmp
fst
test
popa
mov
mov
scas
hlt
(bad)
(bad)
shr
inc
xlat
in
in
cmp
dec
ret
scas
pop
(bad)
mov
int
sbb
aas
jp
cmp
fimul
sbb
stos
sbb
in
fsub
(bad)
in
jg
sub
icebp
inc
sub
sbb
fisubr
inc
or
sbb
xchg
dec
idiv
fcomp
xor
mov
inc
xchg
test
mov
movs
or
fldln2
gs
scas
mov
lods
cld
mov
in
inc
addr16
xchg
pushf
(bad)
mov
mov
ror
iret
jae
out
and
retf
or
jo
adc
mov
cmc
push
call
in
bound
(bad)
in
sub
int3
inc
(bad)
mov
repnz
repz
push
dec
imul
repz
jmp
mov
inc
(bad)
in
add
fisubr
sahf
ins
and
and
(bad)
icebp
sbb
addr16
fcom
dec
sub
(bad)
(bad)
call
mov
pop
add
cmc
fbld
ins
ins
pop
inc
adc
(bad)
lock
xor
fidivr
imul
mov
retf
push
psrlq
cmc
sub
stos
stos
and
jmp
(bad)
das
retf
test
xchg
inc
sahf
inc
dec
jns
dec
pop
fwait
cmps
jae
cmp
adc
cld
clc
repnz
mov
sbb
(bad)
fild
bound
sbb
dec
adc
mov
loopne
shl
dec
mov
inc
add
mov
imul
test
adc
fidivr
pushf
bound
dec
adc
jp
lea
adc
sub
pop
sbb
cmc
push
sti
les
lods
jnp
dec
inc
push
add
cmp
adc
xor
pop
push
scas
cli
and
rcl
popf
fcmove
leave
jno
dec
clc
ja
dec
add
cli
aam
mov
fwait
scas
and
xchg
jbe
std
jo
xor
mov
mov
bound
push
out
loope
cmp
enter
repz
stos
mov
popa
out
xchg
outs
jl
xchg
enter
add
cmps
pusha
push
cmp
push
mov
mov
in
or
inc
xchg
jle
lds
xor
je
dec
jns
cs
out
out
add
xchg
sub
ins
jle
ins
sub
push
sbb
pop
dec
retf
cmp
jmp
out
(bad)
mov
xor
leave
pop
in
sbb
shl
into
pushf
imul
sub
out
scas
rdtsc
(bad)
dec
test
cmp
pop
fs
daa
fcom
fdiv
jbe
mov
lods
adc
jge
cmp
cmp
adc
neg
pop
mov
call
arpl
pushf
adc
(bad)
or
or
retf
repnz
stos
arpl
add
mov
xchg
push
jmp
mov
sub
rsqrtps
shl
js
mov
imul
cli
sub
pop
call
iret
and
push
aam
pop
daa
pusha
pushf
int
lock
mov
inc
fdiv
addr16
ret
rol
xor
hlt
je
mov
cmp
xchg
out
fst
loop
clc
mov
pop
jp
in
push
push
ficom
cmp
ror
jns
scas
test
(bad)
push
or
cmp
or
iret
sub
test
xchg
xor
(bad)
and
push
lahf
out
ret
xchg
setb
add
jne
adc
inc
jbe
sub
inc
add
stc
nop
pushf
xchg
fisttp
mov
test
shr
pop
lea
mov
repnz
fs
xor
out
pop
jae
xchg
fadd
scas
push
xchg
movs
add
push
fst
mov
iret
loope
call
arpl
or
inc
pop
and
and
pop
std
cmp
mov
outs
push
outs
cmc
rol
dec
lock
mov
fcom
lea
sub
pusha
test
shl
xlat
scas
and
rcr
data16
retf
mov
and
mov
fsubr
dec
sbb
jge
jecxz
mov
stos
ret
push
adc
(bad)
jle
push
add
pop
movs
into
jl
mov
stos
fistp
pop
mov
pop
dec
sbb
or
pushf
retf
dec
xchg
mov
jmp
or
and
sbb
mov
xor
lods
pop
mov
pop
adc
cmc
rol
push
push
cmp
pop
in
xor
(bad)
lds
cli
push
xor
lods
mov
das
pushf
xor
ret
hlt
jp
(bad)
adc
push
popa
add
jmp
adc
add
loope
sub
or
fwait
add
pop
dec
fcmovb
pop
mov
push
or
dec
mov
icebp
xchg
sbb
je
mov
pop
cmp
mov
lods
mov
(bad)
jbe
jecxz
daa
sbb
jns
and
pop
fadd
retf
repnz
(bad)
fisttp
lahf
ja
xchg
push
div
sbb
xor
ret
adc
fsubr
push
mov
(bad)
idiv
out
or
adc
aad
pop
paddusb
adc
add
pop
adc
sbb
mov
and
leave
dec
jnp
out
jno
test
mov
inc
cld
add
lahf
pop
iret
stos
(bad)
dec
vmaxsd
(bad)
cmp
retf
int3
push
or
mov
push
and
in
and
stos
xchg
scas
push
js
xchg
mov
pop
loopne
jmp
in
mov
lahf
dec
fst
out
outs
sub
xlat
or
test
cmp
inc
cli
out
and
inc
(bad)
in
cdq
xchg
add
fdivr
cmps
cli
mov
lds
adc
out
sbb
rol
jmp
div
or
popf
xchg
(bad)
into
enter
dec
mov
(bad)
call
(bad)
cmp
add
test
scas
mov
test
rcr
mov
lods
sub
adc
fnstenv
inc
rcr
jae
shr
pop
mov
pop
fs
repz
pop
out
ja
or
mov
iret
or
leave
pop
push
pop
jmp
test
xor
in
clc
dec
into
lahf
xlat
fsub
mov
push
sbb
and
mov
sbb
xor
loop
iret
mov
xor
ror
aaa
cmp
xor
neg
sti
stos
push
pop
aas
int3
into
jle
sub
sbb
xor
in
rol
outs
xchg
xor
mov
mov
inc
cld
adc
push
add
cwde
add
and
jne
out
loopne
pop
pop
push
ret
rcl
sub
mov
push
out
ret
ror
(bad)
pop
cld
cwde
add
mov
ror
mov
or
mov
gs
sub
cmp
mov
and
repz
ficomp
ins
(bad)
mov
mov
push
jb
jl
mov
push
lahf
jg
jns
ret
inc
cs
inc
pop
push
outs
pop
sub
je
push
(bad)
inc
dec
push
je
mov
popa
mov
test
test
jmp
fmul
xchg
test
cmp
ja
push
popf
push
add
aaa
mov
mov
jge
fnstcw
and
jmp
ja
inc
loopne
leave
or
inc
inc
(bad)
jb
or
xchg
lods
add
outs
adc
arpl
lahf
add
ja
movs
call
adc
cmp
imul
mov
sbb
call
sbb
mov
xor
sbb
xor
ins
xor
(bad)
int3
std
sbb
aas
and
out
adc
push
inc
int3
mov
jne
jecxz
xchg
or
sub
popf
mov
mov
dec
mov
(bad)
popf
pushf
outs
inc
add
test
jae
xchg
and
xchg
sti
enter
jle
out
rol
xchg
cmps
sbb
add
enter
xor
les
mov
je
stos
cmps
div
loop
jmp
inc
cmc
outs
test
lods
adc
push
push
adc
or
mov
adc
fnsave
ret
repnz
dec
sbb
loopne
pop
xchg
sti
xchg
je
es
fst
movs
in
jp
data16
ja
push
cdq
inc
fsubr
jns
ds
add
add
mov
ins
outs
mov
dec
xchg
adc
pusha
xchg
cmp
dec
shl
into
repz
popa
mov
sbb
les
retf
fcomp
cmp
push
callw
mov
sbb
icebp
xor
cs
in
mov
dec
aam
movs
mov
xchg
jae
pop
test
loop
inc
mov
ss
sti
jne
cmps
adc
mov
je
leave
adc
jg
or
aad
mov
pusha
pop
in
mov
jns
pop
stc
outs
in
clc
je
(bad)
enter
fnsave
std
push
rol
jle
inc
inc
add
push
dec
mov
push
mov
mov
push
pop
loop
mov
lods
sub
or
xor
jb
or
cmp
ja
dec
or
out
cmp
lds
jno
imul
jp
cmp
out
es
call
ret
inc
jmp
in
pop
xor
pushf
pop
rol
sub
in
jo
mov
imul
movs
les
push
fs
les
fsub
dec
jp
xchg
xor
lock
sbb
pop
push
dec
test
sbb
and
lahf
pop
js
daa
xchg
and
mov
sub
clc
or
sbb
leave
push
or
ret
les
int
scas
or
pop
mov
adc
xchg
xor
xchg
xlat
cmp
sbb
jge
movs
test
push
dec
arpl
loop
jecxz
jl
mov
cmp
fs
fcom
xor
mov
aam
jecxz
aas
mov
pop
imul
push
fsubr
into
pop
and
adc
sub
pusha
adc
pop
and
pop
fs
xchg
cmc
stos
pop
fnsave
ret
jno
repz
or
mov
neg
rcr
mov
dec
scas
xor
cs
mov
movs
clc
inc
loop
push
aaa
mov
mov
mov
jno
mov
loope
(bad)
daa
jp
pop
retf
jno
aad
sar
(bad)
aam
(bad)
and
adc
(bad)
dec
and
add
xchg
xlat
cld
sbb
gs
or
clc
and
and
jno
int
mov
mov
dec
or
mov
fnstsw
mov
test
sbb
cdq
push
mov
dec
das
shl
mov
arpl
iret
sub
sbb
in
push
mov
sub
shl
loope
adc
xchg
and
or
or
fstp
ins
loop
sub
das
xchg
stc
inc
mov
ficomp
xchg
jle
dec
rol
jns
add
les
dec
dec
pop
jb
inc
xor
fs
scas
and
test
and
cmp
ins
adc
daa
mov
jg
fisttp
sbb
nop
cs
or
mov
mov
mov
(bad)
scas
mov
sbb
popf
(bad)
mov
fistp
mov
mov
mov
jbe
test
(bad)
icebp
or
lock
cmps
push
aam
adc
nop
outs
fdivrp
dec
add
adc
mov
dec
loop
cwde
aas
iret
(bad)
jmp
jb
mov
xchg
repz
iret
inc
or
sti
sub
nop
pop
imul
sub
test
dec
cmps
fs
xor
push
pusha
mov
inc
mov
pop
dec
(bad)
hlt
je
or
add
pop
cli
add
out
mov
push
inc
mov
(bad)
fdivrp
pop
or
cmp
dec
push
mov
enter
bound
nop
cdq
cmp
inc
ss
adc
sub
mov
out
adc
ja
mov
std
test
mov
jge
out
in
rcr
js
jmp
loopne
dec
inc
xchg
fmul
repz
aad
fistp
sahf
push
add
iret
add
push
inc
aaa
fild
dec
mov
lods
sbb
adc
push
sub
jno
mov
mov
mov
mov
mov
jb
mov
jae
jo
call
imul
test
inc
mov
mov
mov
movs
push
dec
ins
pop
loopne
fsubr
dec
loope
sub
xchg
mov
pop
mov
ja
daa
xor
ret
sub
loop
inc
mov
loopne
enter
cmps
cmc
and
ret
xor
pop
adc
cmp
inc
pop
sbb
movs
sub
movs
xor
retf
sub
or
add
xor
add
ret
das
lods
adc
pusha
add
cdq
ins
lea
sbb
lds
sub
retf
xchg
or
inc
pop
enter
cmp
xlat
adc
leave
xor
inc
sub
xlat
jo
cmp
repz
es
jne
nop
push
ins
jno
neg
sbb
jns
push
je
add
enter
mov
inc
pop
or
daa
xrelease
sbb
stc
mov
mov
push
jle
(bad)
xchg
(bad)
push
dec
mov
js
int3
and
leave
xor
push
cld
ror
repnz
pop
cmps
cli
jp
cli
(bad)
out
sub
xchg
lock
icebp
fwait
jl
es
add
lahf
xchg
sub
mov
out
repz
xor
sub
cmp
xor
or
xchg
sbb
xchg
sti
or
mov
jnp
aad
mov
inc
je
and
sub
cld
inc
ss
xchg
lods
cs
inc
sub
xor
cs
or
out
daa
ds
dec
mov
or
aas
jcxz
fsubr
ret
mov
fisub
sbb
fild
lods
mov
sub
sbb
jge
push
cmps
inc
jne
pop
test
adc
imul
fs
jge
dec
pop
pop
xchg
repz
mov
mov
(bad)
mov
es
or
sbb
add
shl
jne
mov
scas
idiv
hlt
fidivr
cli
into
sub
fadd
push
fwait
xchg
and
or
cdq
xchg
push
es
call
mov
ds
in
fcomp
stos
mov
test
test
ret
cli
mov
lods
fcom
fstp
cmp
in
daa
out
dec
sub
cli
jae
(bad)
shl
mov
lea
retf
mov
ret
jns
pop
jle
or
out
add
add
dec
or
mov
mov
jbe
pop
mov
sub
inc
mov
bound
xor
lahf
sub
int3
mov
div
pop
mov
inc
mov
mov
loope
mov
or
mov
push
and
push
xchg
mov
cs
jno
pop
aas
add
cdq
mov
bnd
loope
or
dec
adc
ds
mov
inc
sub
xlat
cmp
xchg
add
mov
push
xor
mov
in
test
or
sbb
fs
shl
int
js
or
in
mov
iret
push
xchg
loope
add
adc
retf
std
fisub
inc
ret
mov
adc
dec
add
jmp
pop
iret
hlt
jmp
mov
(bad)
sti
inc
outs
push
mov
sbb
js
adc
ror
or
arpl
rcr
push
mov
loopne
sbb
dec
sbb
jne
push
jne
or
cmp
shl
and
push
sbb
jge
daa
imul
mov
fwait
inc
xchg
jae
add
inc
add
mov
mov
xchg
jae
iret
jno
xor
in
adc
cmp
enter
jb
cmps
(bad)
dec
mov
ss
int
mov
(bad)
sar
test
test
jae
or
pushf
and
jmp
jg
call
or
cmp
addr16
stos
js
cmps
jne
fcom
xchg
lods
or
cld
test
pushf
add
cbw
nop
and
loopne
cmp
das
mov
mov
daa
or
sahf
adc
repz
jle
push
in
test
push
cdq
lds
test
cmp
mov
pushf
jge
cs
or
in
pop
dec
dec
(bad)
fistp
fistp
xor
and
sbb
dec
jmp
push
outs
push
cli
mov
cmp
xor
add
adc
xchg
adc
jo
data16
jmp
cmp
test
push
push
adc
xor
xchg
or
jo
push
jle
push
in
sub
sti
nop
fnsave
frstor
fisttp
icebp
ss
ins
clc
pop
add
xchg
push
mov
mov
test
dec
adc
mov
dec
(bad)
cmc
cmp
lahf
inc
add
xchg
fsub
sub
xor
jne
dec
loopne
add
mov
xor
out
sar
mov
shl
pop
out
pop
mov
push
js
mov
scas
cs
(bad)
jmp
leave
or
mov
cwde
rcl
dec
repz
and
jb
stos
mov
jle
jb
jne
sub
push
sub
shr
andnps
scas
and
cmp
mov
dec
imul
xchg
pop
push
pop
cmp
cmps
lea
ja
mov
bound
jle
dec
mov
mov
xchg
push
mov
add
ds
jno
xchg
fistp
push
clc
mov
or
es
pop
bound
mov
or
xor
mov
stos
movs
inc
(bad)
je
data16
loope
call
adc
push
adc
pop
sbb
int
mov
shl
loopne
loopne
cli
test
mov
into
and
mov
pop
icebp
arpl
fstp
je
stos
xor
mov
not
mov
dec
scas
js
hlt
imul
xchg
and
dec
mov
push
popa
nop
leave
dec
ds
imul
(bad)
arpl
movs
cmps
popf
movs
mov
sti
ret
cmp
adc
lods
mov
sub
movs
push
xlat
push
js
xor
jbe
and
ret
or
xor
stos
pop
jae
jmp
aad
jb
in
out
scas
scas
fisubr
cmp
xchg
shl
add
pop
cmc
sar
out
cmp
loop
sub
mov
data16
pop
gs
lds
mov
push
sar
loope
ret
add
fdivr
jmp
out
xchg
mov
popa
into
bound
mov
add
fistp
sub
jbe
add
(bad)
or
cs
lea
dec
out
mov
enter
pop
or
add
ss
fmul
adc
mov
mov
cmp
sub
daa
xor
addr16
js
cdq
xor
add
shr
(bad)
adc
mov
shr
addr16
popa
out
cdq
dec
repz
push
or
adc
test
push
add
cmp
(bad)
jle
in
popa
sub
enter
adc
retf
mov
cmc
xchg
mov
pop
pop
push
test
push
nop
scas
rcr
sub
mov
and
jmp
sbb
mov
addr16
sbb
jmp
pop
pop
not
nop
dec
inc
stos
dec
call
sbb
sub
enter
sbb
cmp
xor
dec
and
les
(bad)
sub
push
(bad)
retf
sti
jge
push
or
or
shr
push
fiadd
js
cmps
push
xor
rcr
pop
outs
inc
dec
fs
in
bound
fwait
add
push
fcomp
es
enter
lea
add
fbstp
stos
sbb
aas
call
stc
out
sbb
daa
cdq
xor
fs
out
push
xchg
pop
push
xchg
xchg
int3
out
sbb
jle
outs
xchg
mov
xchg
fisubr
xchg
or
pop
jl
stos
std
(bad)
hlt
int3
sub
retf
adc
adc
stos
call
and
sahf
adc
add
ds
retf
cld
aad
dec
pop
push
xchg
cmps
arpl
sbb
pushf
out
sbb
sub
dec
lds
push
dec
cmc
loope
jp
add
dec
das
fbstp
mov
push
dec
(bad)
jl
push
out
xor
xchg
add
mov
leave
movs
mov
jge
push
dec
fst
sar
push
out
mov
jno
aad
dec
inc
fisub
adc
ret
bound
xchg
xchg
ins
ret
in
xchg
(bad)
jl
dec
mov
movs
in
pushf
rcr
repnz
jb
mov
push
xchg
cwde
sti
cli
mov
dec
adc
aam
mov
lods
and
retf
cmp
jbe
outs
movs
mov
and
dec
xchg
loope
push
cmp
pop
jne
call
jns
push
push
adc
jmp
repz
clc
and
cli
out
jmp
xchg
cmp
sbb
pop
mov
mov
out
mov
shl
call
or
fisttp
or
std
xchg
add
retf
push
dec
inc
inc
imul
cmp
xor
xchg
inc
bnd
in
add
mov
mov
xor
sub
(bad)
clc
dec
mov
xor
popa
scas
stos
stc
mov
jne
in
stc
pusha
sub
stos
inc
popa
jmp
das
popa
dec
(bad)
sub
jb
pop
test
mov
addr16
pop
sub
jp
sti
test
cmp
loopne
mov
es
or
pop
aam
cmp
fwait
xchg
jecxz
imul
xlat
jmp
ret
xchg
lahf
sub
xchg
rcr
out
test
adc
push
adc
out
and
inc
pop
inc
inc
es
loop
je
in
test
outs
mov
sbb
mov
retf
xchg
fldcw
xor
add
xor
(bad)
pop
pop
cmp
mov
lods
xlat
and
(bad)
xchg
addr16
jge
and
xchg
xor
xchg
fnsave
sbb
ds
and
mov
pop
jno
push
cs
or
jb
ret
shl
mov
icebp
mov
push
xor
es
gs
loop
jge
or
popa
inc
jmp
neg
movs
push
inc
xor
ds
mov
inc
adc
or
inc
fst
inc
inc
mov
aas
mov
pop
jecxz
sbb
push
ins
lea
jmp
(bad)
popf
add
xor
inc
pop
adc
cmps
xchg
add
sti
and
retf
(bad)
mov
(bad)
dec
in
xor
arpl
sub
pop
pop
mov
sub
inc
enter
xchg
mov
push
lods
push
sbb
mov
inc
inc
stos
and
sub
arpl
jmp
movs
ds
xchg
ins
mov
outs
ds
imul
xor
xchg
inc
or
fdiv
lahf
dec
or
mov
cmp
jmp
pop
scas
jo
sar
lahf
sahf
fisub
(bad)
xchg
fmul
fwait
cwde
jno
test
sub
add
and
(bad)
xchg
and
sub
cmp
push
mov
sub
xor
add
pop
xchg
and
lahf
call
mov
push
jl
call
mov
push
add
test
(bad)
push
pop
mov
(bad)
adc
stos
dec
xchg
sahf
scas
retf
data16
mov
repnz
es
movs
mov
and
jae
sub
repz
(bad)
sti
imul
jg
pop
inc
jae
adc
stc
mov
xchg
fild
or
je
pushf
scas
and
xor
cmp
out
push
mov
or
in
xor
into
imul
ins
pusha
inc
mov
or
bound
add
mov
iret
cdq
jge
mov
shr
xor
dec
(bad)
xlat
push
inc
sub
jno
inc
bound
cld
leave
mov
sub
adc
aas
dec
xor
imul
mov
pop
cmp
cmp
sub
add
das
sbb
mov
adc
fnstcw
call
inc
adc
xchg
movs
loopne
dec
fistp
xor
mov
xchg
cli
jge
jle
add
fisub
push
scas
jge
sub
mov
pop
mov
adc
mov
nop
in
add
(bad)
jle
repnz
call
repz
cwde
lds
in
inc
lahf
mov
mov
(bad)
mov
jae
inc
push
pop
ins
and
xor
push
pop
jnp
and
das
xor
out
addr16
xchg
leave
test
and
or
cmp
repz
dec
inc
mov
pop
push
dec
rcl
xchg
dec
fcomp
mov
fcom
out
cmp
sub
into
dec
jb
inc
sbb
or
pop
mov
mov
push
jbe
retf
mov
xchg
imul
outs
call
jne
ins
outs
outs
jmp
popf
jp
pop
cs
and
sar
cmp
in
push
fcomp
fiadd
inc
scas
mov
mov
ret
inc
inc
pop
leave
dec
xor
dec
sbb
xchg
add
fadd
push
xor
(bad)
cmp
(bad)
in
and
in
push
sub
push
out
dec
sbb
ds
sub
sbb
xor
jge
and
xor
mov
ficomp
add
jmp
pop
sti
enter
jge
adc
in
xchg
jns
pop
imul
sahf
xor
xor
out
jnp
mov
adc
jbe
(bad)
nop
std
sub
and
xchg
pop
ja
mov
jle
neg
xchg
push
mov
cmps
dec
add
mov
in
int3
xor
or
jbe
iret
and
jnp
xchg
jge
xor
jg
mov
xchg
inc
add
add
cli
jb
fnsave
pusha
sbb
xor
stos
mov
xor
fild
ja
pop
aad
cmp
jmp
push
stc
mov
lods
data16
imul
mov
add
je
rcl
inc
ret
movs
or
sbb
or
fmulp
mov
imul
xor
mov
inc
add
jnp
jl
inc
xor
pushf
sub
pop
xor
jbe
fimul
std
sbb
pop
lock
stos
pop
sub
je
pop
ins
mov
hlt
std
add
push
jmp
cld
add
retf
add
pop
cmp
aam
xchg
dec
push
dec
inc
mov
inc
or
dec
lock
sbb
retf
test
jnp
fcom
cmp
movs
or
jg
test
(bad)
mov
test
stos
mov
rol
push
shl
shl
int3
inc
jnp
(bad)
mov
xchg
jno
mov
lods
popf
push
aas
sbb
xor
cs
push
xor
pop
shl
xor
repnz
add
cmp
mov
popa
rol
xchg
cmp
out
cmps
push
int3
sub
js
push
mov
mov
in
mov
or
cmp
retf
dec
mov
cmps
jne
out
imul
mov
cli
scas
sbb
push
sbb
loope
outs
mov
jmp
loope
repz
scas
add
out
pop
sbb
and
cmp
arpl
sbb
nop
aam
out
pop
mov
(bad)
js
cmp
xchg
(bad)
je
xchg
dec
sub
retf
jmp
dec
adc
scas
mov
mov
push
fmulp
test
sbb
cs
xchg
xor
mov
mov
pop
xchg
jg
adc
xchg
xlat
sub
hlt
mov
inc
xchg
add
fcmovb
dec
mov
int
ss
cli
adc
xchg
ja
xchg
loop
xchg
pop
nop
popf
es
pop
cld
or
adc
test
sub
stc
xor
adc
push
movs
call
pop
push
aas
push
ret
les
ins
or
dec
shl
jle
push
movs
jb
jmp
xchg
adc
call
mov
and
pop
mov
push
out
idiv
sbb
mov
cmps
dec
sub
add
sub
fnstenv
xchg
(bad)
mov
pop
repz
iret
cmp
pop
mov
sub
xchg
(bad)
sti
add
jmp
ret
xor
inc
mov
sbb
jns
add
xor
mov
mov
rol
jecxz
mov
(bad)
jmp
mov
hlt
jmp
adc
lods
pop
clc
xchg
or
mov
jnp
mov
jns
(bad)
and
and
pusha
sub
pop
sub
(bad)
dec
pop
retf
mov
push
cmp
push
xchg
fidiv
sbb
mov
xor
and
out
cmp
or
mov
retf
mov
mov
cmp
add
pop
cmp
sbb
adc
fdivr
sbb
std
cmc
push
cld
imul
enter
pop
jmp
out
push
in
add
ret
cli
pop
je
rol
add
pusha
rcl
or
outs
adc
add
mov
mov
mov
or
adc
xor
sbb
push
iret
je
xchg
dec
inc
dec
cs
inc
jns
movs
mov
inc
fwait
dec
ins
pop
movs
nop
lahf
hlt
inc
into
out
mov
jl
pop
pop
mov
inc
mov
das
mov
xchg
mov
ins
cmp
outs
stos
push
cwde
sbb
clc
das
test
pop
jp
dec
xchg
arpl
jle
sub
inc
fld
cmp
xchg
stc
jge
or
sub
mov
je
cmp
cmps
loopne
pop
xor
(bad)
adc
mov
fsubr
mov
sub
inc
xor
adc
mov
repnz
jnp
or
add
cdq
mov
call
pop
or
jnp
mov
xchg
test
inc
add
stc
test
cmps
imul
je
cs
push
xor
sbb
imul
retf
cmp
pop
push
aaa
xor
aad
test
stc
jno
mov
pop
jecxz
popf
adc
add
sbb
addr16
test
pushf
adc
push
ret
and
fidivr
pop
pop
adc
push
stc
lock
pop
int
adc
add
je
push
retf
xchg
jl
fdivr
dec
push
dec
or
jge
sub
iret
jbe
fisttp
cld
pop
lock
jecxz
and
ds
and
leave
loope
mov
and
mov
mov
arpl
and
dec
inc
js
dec
fld
pusha
shl
jge
pop
int
push
sbb
dec
shl
call
call
jns
(bad)
int3
or
cmp
mov
mov
push
xchg
frstor
and
jae
int
cmp
jmp
jmp
mov
rcl
and
jnp
jbe
and
dec
mov
jmp
or
jbe
sar
sub
pop
(bad)
in
(bad)
sti
ins
wrmsr
icebp
inc
inc
sub
and
gs
pushf
push
push
xor
jmp
push
dec
jbe
push
(bad)
test
imul
shl
inc
out
dec
pop
push
movs
fldenv
cmps
sbb
adc
loopne
movs
ficom
int
rol
repz
(bad)
mov
sar
mov
fcomp
aad
loop
ds
imul
lock
mov
dec
jge
pop
sahf
pop
sub
cmp
scas
test
lds
xchg
xor
inc
cmp
jae
in
enter
je
jo
lea
jmp
inc
iret
daa
jno
xchg
mov
inc
or
push
mov
lock
dec
inc
gs
xchg
fidiv
cmp
loopne
adc
rcr
lods
xlat
mov
ins
(bad)
mov
outs
popf
imul
daa
jge
or
loopne
cmp
add
xlat
cdq
lea
jp
mov
lods
add
mov
ss
add
imul
cmps
sahf
and
mov
push
(bad)
adc
fdivrp
icebp
fs
mov
scas
cld
sbb
pop
adc
lds
js
push
add
adc
movs
sbb
cld
lods
retf
stos
pop
or
enter
(bad)
sub
mov
sahf
inc
mov
pop
adc
imul
sbb
ret
lds
sti
inc
bound
aam
jg
sub
movs
in
mov
mov
jns
lahf
sub
retf
stc
(bad)
mov
je
je
hlt
pop
xor
aam
fwait
mov
dec
ja
popa
xor
ss
mov
cmp
push
shr
imul
aam
or
dec
xor
jae
cld
dec
aad
or
dec
fdiv
push
push
xchg
push
lea
mov
repz
dec
mov
sbb
mov
cmp
or
popf
aad
js
sahf
dec
lahf
aad
das
ja
jg
dec
sbb
jo
pop
cmp
add
jle
jge
jecxz
stc
enter
cmps
test
loope
ret
mov
sub
popa
push
mov
icebp
popf
xor
loopne
dec
or
jle
into
aam
jnp
imul
jmp
adc
scas
mov
ins
in
pop
pop
dec
add
inc
shl
pop
xchg
(bad)
mov
scas
mov
aam
ja
xchg
je
mov
enter
mov
mov
push
or
mov
mov
pop
xchg
les
cmps
cmp
xor
rcr
(bad)
xchg
(bad)
neg
arpl
or
inc
jns
nop
mov
dec
push
hlt
mov
(bad)
dec
pop
add
sbb
fsub
jae
mov
fnstsw
outs
dec
stos
cmps
arpl
push
mov
add
inc
pop
push
scas
in
int
les
gs
es
cld
cmps
mov
pusha
outs
shr
cmp
sbb
loopne
adc
or
call
jnp
or
sbb
retf
ins
and
fidivr
cwde
lds
mov
inc
push
aaa
mov
das
ds
jl
call
adc
repnz
mov
add
sbb
aam
sbb
shr
or
out
xor
cdq
and
sbb
shl
or
push
in
jle
addr16
push
sub
adc
lds
xor
pop
push
leave
pop
aam
gs
aam
aaa
dec
test
dec
test
loop
mov
enter
push
push
mov
and
leave
hlt
out
test
mov
mov
mov
push
jne
fsubr
push
(bad)
pushf
and
shl
test
pop
adc
or
sbb
(bad)
mov
push
dec
xchg
(bad)
inc
retf
push
adc
retf
adc
jl
add
inc
jg
pop
icebp
pusha
gs
dec
adc
fs
and
sub
adc
lods
ss
not
adc
ja
out
pop
add
daa
sbb
xchg
repz
ret
mov
cmp
fsubr
push
(bad)
fistp
adc
neg
adc
xor
ins
mov
std
pop
xor
bnd
test
(bad)
cli
dec
xor
add
sub
outs
mov
xlat
fdivp
pop
push
jo
fs
std
lahf
jo
push
pop
xchg
jb
into
arpl
mov
inc
cmp
mov
lahf
sbb
xor
and
fst
dec
test
cmp
cmp
hlt
(bad)
movs
sub
sti
(bad)
dec
jb
add
xor
push
mov
addps
cmc
push
icebp
clc
lock
js
(bad)
mov
xchg
aaa
stos
in
repnz
mov
dec
xchg
cwde
xchg
pop
test
pop
mov
push
mov
out
fisubr
mov
xchg
aas
xor
sub
xchg
and
xor
or
test
mov
push
cmp
sbb
sbb
mov
jo
ja
ret
push
das
cmp
push
out
mov
and
scas
je
inc
(bad)
jg
pusha
clc
sar
mov
out
mov
mov
mov
adc
lods
leave
fdivr
fbstp
inc
in
ret
or
mov
addr16
repnz
jmp
jns
test
imul
in
sub
fwait
pop
shl
push
sub
mov
out
mov
test
stos
cdq
mov
shrd
push
cmp
loop
dec
loopne
fisubr
imul
repz
jecxz
xchg
icebp
push
mov
lea
sbb
cmp
sbb
or
jb
repz
inc
push
pop
(bad)
xor
and
adc
push
add
cmp
lea
scas
call
arpl
ror
and
mov
dec
xchg
and
xor
xor
jg
test
xor
pop
test
stos
and
cwde
pop
sub
push
xchg
sub
adc
bound
test
iret
mov
mov
jbe
scas
and
cmps
neg
cld
lods
mov
cmp
or
and
cmp
dec
mov
mov
pop
mov
inc
and
cdq
aad
cmp
fst
add
mov
mov
inc
icebp
inc
inc
or
pop
icebp
cmp
repnz
fdivrp
and
mov
ins
leave
ret
dec
jmp
lods
jg
arpl
push
enter
mov
add
pop
test
test
std
(bad)
ins
out
test
mov
jbe
arpl
adc
popa
fmul
sub
xchg
mov
push
sbb
push
inc
add
setne
add
fsub
add
pop
cmps
and
int
hlt
mov
ja
imul
std
cmps
pop
loop
ret
push
add
inc
jbe
ja
mov
jne
mov
ror
push
sub
js
jmp
fs
fimul
pop
imul
cmc
clc
mov
loop
arpl
mov
int3
loop
xchg
lock
test
jbe
pop
movs
sahf
mov
call
or
(bad)
inc
sbb
cmp
sub
cwde
fisttp
jmp
das
sahf
mov
xchg
les
int3
inc
bound
outs
lock
mov
jle
ins
xchg
or
daa
inc
cmp
cmp
or
sbb
and
adc
(bad)
dec
mov
ret
xchg
mov
call
js
adc
arpl
and
mov
pop
ja
ss
cmps
lods
xor
lods
sub
fwait
aas
jle
mov
pop
arpl
rcr
xchg
shr
(bad)
mov
mov
mov
or
dec
movs
mov
push
cmp
(bad)
in
(bad)
sbb
cwde
addr16
je
ficomp
xor
sbb
fnstsw
push
dec
xor
pop
test
xchg
pop
aas
mov
call
outs
add
xlat
mov
test
call
push
test
xor
xchg
add
or
pop
jae
sbb
cld
fst
out
mov
cli
pop
cmps
nop
and
fcmove
out
pop
adc
mov
loope
stc
cwde
(bad)
jne
add
sub
push
dec
xchg
sub
test
jmp
(bad)
in
xchg
ds
aad
ret
jmp
sub
lds
loopne
pop
(bad)
shr
inc
inc
aad
adc
call
popf
fist
mov
aam
cmp
in
fld
dec
jmp
ss
test
push
out
add
mov
sub
push
(bad)
jp
shl
fld
out
clc
xor
mov
mov
inc
and
rcr
push
(bad)
int3
(bad)
mov
push
stos
mov
sbb
scas
jbe
sub
shl
xor
add
cld
(bad)
hlt
and
mov
inc
cdq
loope
aad
retf
ss
mov
xchg
cmps
push
scas
in
(bad)
out
pop
in
dec
pop
cs
or
stos
into
dec
jo
pushf
dec
imul
test
cdq
shl
or
in
idiv
pop
mov
jge
sub
movs
(bad)
adc
fst
jno
out
js
aad
(bad)
ret
scas
cli
push
ds
or
mov
imul
call
cld
jo
mov
iret
loopne
sub
jle
push
and
xor
imul
sub
imul
xchg
pushf
pop
and
test
out
stos
sbb
out
and
int3
push
and
cmc
and
push
je
fdivr
cs
jno
sub
mov
add
popf
lods
jge
sbb
mov
xor
sub
push
sub
cmp
popf
nop
xor
fsubrp
std
mov
dec
mov
bndldx
and
sbb
xchg
scas
cmc
jns
sbb
push
inc
arpl
movs
call
mov
push
pmaddwd
inc
mov
and
imul
es
cmps
pushf
mov
mov
jmp
jmp
or
sbb
cmp
int3
push
(bad)
lahf
inc
sub
or
stos
mov
push
adc
cmp
imul
stos
dec
pop
jno
test
rol
imul
movs
imul
loop
repnz
push
xchg
or
dec
jbe
addr16
movs
jg
shr
rol
jns
adc
jmp
xor
adc
mov
dec
inc
cmp
xor
pop
sub
icebp
outs
fst
pop
fdivr
data16
inc
mov
call
mov
sub
add
hlt
clc
lock
push
(bad)
in
mov
es
sub
sub
mov
or
xor
or
pop
sub
rcr
in
ss
mov
stc
mov
repz
(bad)
dec
(bad)
push
adc
adc
or
sub
(bad)
mov
shl
test
test
push
lock
inc
mov
inc
jne
ret
adc
out
stos
mov
enter
inc
ss
inc
sti
test
xor
push
(bad)
sti
mov
push
xchg
cli
(bad)
les
loopne
mov
sbb
out
retf
add
sahf
test
retf
jbe
adc
push
in
into
cmp
mov
mov
out
fwait
mov
in
jmp
ud2
sub
shl
pop
xor
mov
popa
adc
shl
fdiv
mov
test
pop
das
cmp
pop
pusha
dec
aam
in
add
xchg
pop
push
jp
add
mov
push
mov
or
or
cwde
fist
mov
mov
(bad)
daa
sbb
cmp
outs
js
popf
push
or
xor
test
out
inc
adc
adc
cs
sub
pop
(bad)
into
mov
or
cli
outs
fcomp
(bad)
pop
int
dec
(bad)
imul
cmp
push
fld
pusha
mov
adc
stos
inc
or
stos
das
daa
xchg
mov
lods
xchg
dec
jbe
ret
not
mov
adc
fs
movs
aad
pusha
out
xor
out
xchg
and
in
out
mov
js
pop
push
int3
xor
or
jmp
and
mov
retf
(bad)
popf
cmp
or
aam
data16
imul
popf
mov
push
mov
mov
jge
out
sub
mov
stc
stos
and
cmp
xchg
xchg
push
outs
out
frstor
adc
lds
mov
sbb
lahf
pop
pop
cdq
mov
inc
add
je
mov
and
inc
xor
jne
dec
jmp
mov
dec
sbb
mov
leave
push
push
(bad)
aad
outs
push
sub
xchg
out
shl
mov
imul
call
mov
into
xchg
cld
sbb
dec
push
jne
fcomp
test
test
cmp
dec
sbb
push
add
retf
cmp
es
pop
pop
bound
dec
pop
ror
xor
sbb
jmp
test
stos
ins
jne
sbb
sbb
or
cmp
jns
cmp
mov
outs
jmp
out
into
lds
pop
push
not
adc
sbb
or
imul
(bad)
push
outs
inc
mov
dec
int3
int3
das
rcr
int3
dec
lods
imul
sti
(bad)
push
rcl
pop
aam
fwait
and
cmp
sbb
mov
jge
or
gs
retf
and
pop
movs
iret
pop
(bad)
nop
or
add
jl
jg
ins
dec
test
and
dec
(bad)
xchg
jb
retf
mov
inc
outs
pop
jg
pop
add
mov
jae
cld
retf
das
fwait
cmc
and
lds
push
add
imul
add
data16
out
inc
popf
icebp
xchg
or
fcomp
or
ror
xchg
cmp
jae
push
addr16
jl
lock
je
retf
xchg
idiv
sti
pminub
out
and
arpl
mov
pop
jnp
pop
mov
xor
pop
xor
sub
add
test
lods
and
movs
dec
add
scas
movs
movs
aad
dec
push
cmps
jne
mov
push
outs
enter
mov
icebp
mov
repz
sub
out
les
sub
leave
stos
shl
pushf
jne
lds
ror
mov
mov
inc
dec
or
(bad)
imul
xor
rcl
mov
mov
jno
xor
js
cmp
sbb
cmc
xchg
fbstp
dec
rcr
enter
fst
mov
mov
ja
ins
sbb
inc
(bad)
fisub
sar
repnz
adc
ins
and
xchg
ins
inc
jl
mov
inc
outs
test
mov
cwde
test
mov
jge
jmp
and
ror
js
mov
test
push
inc
out
jl
out
ins
test
cmp
push
pop
out
xor
xchg
jp
xchg
sbb
jmp
cmps
mov
sar
add
pop
leave
cmc
push
jg
pusha
scas
es
ret
cwde
pusha
pop
xchg
dec
clc
sub
call
mov
and
mov
iret
jg
mul
pop
retf
aad
sti
retf
and
sbb
ss
call
add
inc
mov
movs
xchg
repnz
pop
stos
mov
xor
sbb
jnp
cdq
pop
xchg
fisttp
out
mov
lods
jle
sbb
or
enter
mov
jp
sub
loope
or
scas
mov
adc
icebp
push
repnz
push
jmp
out
inc
in
dec
fldenv
stos
sub
jne
in
xchg
repnz
outs
mov
push
stos
shl
shl
aad
push
retf
stos
and
pop
cmp
stc
adc
es
jbe
repz
test
mov
push
mov
gs
cmc
jns
mov
mov
es
je
mov
fdiv
ins
jmp
sbb
gs
jbe
sub
inc
mov
les
pop
addr16
xchg
cmps
popf
or
pop
ja
inc
pop
shl
cs
loop
pop
dec
jmp
movs
test
popa
pop
icebp
add
adc
imul
add
scas
rep
daa
(bad)
call
fs
call
les
add
neg
mov
mov
xchg
scas
inc
inc
inc
sbb
dec
cmp
sub
cli
daa
fisttp
and
xchg
shl
lods
adc
icebp
aam
add
outs
mov
popa
out
add
sub
dec
push
mov
dec
hlt
dec
jnp
pop
enter
cmps
xor
aad
pop
mov
push
ficom
out
pop
cwde
xchg
enter
push
lods
jno
imul
adc
push
out
xor
int3
push
and
push
sub
add
pusha
jno
and
adc
jb
ret
mov
xchg
jecxz
pushf
test
jmp
add
mov
movs
push
xchg
aam
jae
out
shr
or
mov
scas
bound
pop
repnz
in
clc
mov
call
cli
fistp
sbb
mov
adc
fist
cmp
add
popa
lock
stos
sub
aaa
pop
movs
ror
jb
dec
mov
dec
push
jmp
push
imul
daa
mov
imul
xchg
adc
sbb
repnz
aaa
dec
ret
xor
inc
lods
gs
repz
pop
xchg
fistp
out
mov
leave
and
scas
jns
jno
ins
fild
cmps
es
inc
jp
add
out
sbb
addr16
mov
bound
ror
sub
sbb
push
sub
or
jne
xchg
in
(bad)
pop
test
jae
cmp
mov
jbe
dec
or
int
sub
or
ror
mov
xchg
cmps
dec
sbb
mov
jae
pop
(bad)
dec
cmp
jne
inc
jo
data16
adc
or
outs
cmovno
call
inc
les
clc
mov
fld
out
movs
mov
sub
xchg
adc
lock
mov
cmp
daa
mov
neg
sar
out
cmps
cmp
out
fnsave
sub
jae
xchg
pop
pop
jbe
nop
pop
xchg
add
mov
aam
xchg
(bad)
lods
mov
dec
retf
pusha
dec
in
sub
jbe
fwait
pop
cmp
call
test
jmp
sub
adc
add
cmp
nop
fwait
repz
add
add
and
and
xlat
sbb
pop
xor
mov
jmp
jb
pop
hlt
(bad)
rcl
mov
xor
mov
xor
lahf
or
xor
shl
push
mov
aaa
out
rcr
rcl
pop
inc
or
or
push
sub
xchg
xor
push
test
int
xchg
jne
jb
cwde
retf
push
outs
mov
cli
retf
lock
clc
out
sbb
ror
inc
pop
jo
dec
mov
fsubrp
fadd
mov
(bad)
mov
movs
scas
mov
aas
ja
mov
loopne
sub
rcr
dec
mov
mov
js
ss
fwait
sub
mov
daa
imul
xor
cli
dec
in
les
fsubp
push
jnp
(bad)
scas
sbb
lods
mov
or
adc
cmp
loope
add
scas
dec
mov
ret
push
jp
sbb
xchg
sbb
xor
mov
cmps
int
(bad)
mov
cld
test
xchg
adc
pop
fisttp
sub
jl
lock
dec
jg
mov
call
lahf
fcom
xor
jmp
xchg
sub
dec
push
mov
ret
pusha
inc
xor
and
jmp
popf
jmp
dec
cvtps2pd
out
cmp
outs
xor
xlat
and
out
mov
push
test
or
cmp
cli
inc
cmp
and
mov
fild
xchg
and
mov
rol
xor
mov
push
cmp
sbb
out
das
in
and
cmps
cmp
inc
inc
outs
mul
cld
pushf
out
inc
leave
cmp
pop
test
ins
mov
sbb
test
and
push
shl
adc
or
in
(bad)
push
ret
fneni(8087
fwait
jbe
dec
shl
and
test
cmp
outs
scas
scas
sub
mov
xor
les
push
fisttp
lods
fcom
stos
pop
lock
addr16
adc
enter
mov
jl
pop
xchg
loop
adc
xlat
mov
sbb
push
pop
or
jo
mov
mov
pop
push
pop
shr
call
dec
inc
retf
mov
or
retf
fldenv
lods
sbb
mov
cdq
cmp
daa
rcl
movs
mov
xchg
outs
dec
xchg
sbb
sbb
inc
repz
jae
lods
lods
retf
out
sub
inc
push
sub
push
dec
sub
inc
xchg
aaa
cmp
mov
mov
inc
xor
or
imul
in
inc
arpl
sar
in
add
stos
lods
outs
sbb
lea
in
gs
retf
test
fdivr
movs
clc
push
cmp
mov
add
mov
dec
adc
inc
jns
iret
ins
(bad)
xor
push
je
dec
outs
mov
test
mov
outs
pop
movs
popf
scas
(bad)
lahf
adc
push
jnp
jo
adc
and
or
inc
fwait
jns
pop
mov
pop
jae
lock
scas
adc
shl
(bad)
call
fstp
shl
or
sub
pushf
sar
jp
xchg
dec
ret
ret
or
cwde
ds
iret
xchg
(bad)
dec
mov
mov
sahf
ss
mov
mov
loope
lods
cmp
outs
lea
jp
pop
xor
fwait
and
mov
xor
mov
(bad)
call
clc
in
mov
ins
aam
and
fistp
and
cs
pusha
jnp
mov
sub
lock
adc
fwait
add
mov
cmp
in
add
cbw
push
jno
pop
xchg
in
mov
dec
pop
stc
adc
cmp
dec
xor
loope
xor
arpl
ins
clc
gs
mov
push
push
xor
es
dec
in
cdq
sbb
and
clc
cs
or
mov
retf
mul
xchg
ret
pop
rcl
rcr
sub
fs
jbe
jns
pusha
shl
cmp
inc
add
sbb
fiadd
xor
jb
test
xchg
and
mov
inc
mov
xchg
cwde
rol
jno
retf
cwde
and
test
rcr
fsubp
clc
js
outs
cmp
push
dec
mov
retf
xor
pop
mov
shr
mov
addr16
pop
cs
xchg
cmp
add
adc
jb
jp
sbb
sub
test
loop
pop
cmp
fdivr
cwde
popa
mov
adc
ins
push
test
enter
jmp
jecxz
pop
or
mov
xor
movs
mov
(bad)
push
int
sbb
je
nop
daa
push
mov
out
mov
data16
mov
int
nop
fisubr
sbb
sub
outs
ret
pop
out
popf
cmp
or
mov
es
mov
jp
mov
shl
int3
jmp
js
loop
xor
dec
movs
add
adc
ds
hlt
jge
mov
sbb
push
adc
sbb
adc
dec
xor
dec
rol
mov
lock
xchg
hlt
ja
dec
xchg
xor
add
xor
xchg
test
add
idiv
nop
in
xor
jl
push
or
pop
mov
out
fcomp
sub
ror
jg
out
and
push
lock
stos
int3
push
jbe
ret
push
popa
hlt
cld
imul
rol
inc
adc
clc
mov
into
mov
push
adc
and
(bad)
fmul
jno
out
mov
mov
aaa
dec
and
add
ds
cmp
xchg
inc
jp
call
mov
cmp
ja
add
xlat
loopne
pop
ja
vpcmpgtd
rcl
(bad)
dec
test
xchg
jmp
lahf
out
cwde
ret
sahf
add
mov
out
pop
push
(bad)
xchg
add
ret
ret
into
xchg
gs
xor
mov
outs
ds
fcomp
pop
aam
cmp
and
xor
lods
in
push
or
stc
add
and
lods
dec
retf
enter
jle
lock
retf
inc
pop
test
dec
xor
shl
cmc
xchg
dec
dec
push
lods
out
in
mov
cs
and
out
ins
fistp
scas
mov
pop
mov
adc
sub
pop
xchg
jmp
int3
inc
test
inc
push
fiadd
and
retf
ret
loope
sbb
and
arpl
shl
das
data16
loopne
inc
mov
pusha
jl
out
jns
sub
jo
jmp
cs
push
and
aam
cmp
leave
scas
jp
mov
test
leave
xor
xchg
fidiv
loope
inc
(bad)
loopne
mov
popa
xchg
mov
or
dec
(bad)
fmul
add
push
cli
hlt
cmp
jo
loopne
mov
cld
pop
mov
in
cmp
(bad)
pop
push
lds
dec
mov
push
lahf
lea
add
pusha
cs
cli
nop
sahf
or
shl
mov
mov
popf
push
movs
gs
lea
or
pop
cmp
mov
push
push
pop
jno
call
sbb
cmp
(bad)
fprem1
mov
arpl
call
jg
mov
and
nop
pop
add
mov
call
mov
repz
outs
(bad)
fwait
movs
nop
add
mov
dec
xor
cli
scas
test
xchg
dec
enter
or
and
xchg
mov
loop
xor
mov
je
cmps
mov
cmp
and
out
(bad)
pushf
jb
and
data16
jl
(bad)
fst
pop
lds
mov
mov
add
push
test
adc
or
(bad)
loopne
inc
(bad)
in
push
push
cmc
mov
popf
je
cli
jg
mov
test
int
dec
bswap
std
js
je
pop
aam
ret
std
jb
lods
adc
pusha
mov
enter
out
jmp
sti
jle
ja
pop
mov
cmp
inc
inc
and
fst
(bad)
dec
or
push
xchg
addr16
aaa
dec
dec
js
mov
jmp
popa
rol
call
(bad)
sub
int
cmp
or
loop
into
jl
cmps
add
sti
or
cmps
div
push
fcom
mov
pop
mov
mov
test
cmp
pop
ret
or
ret
jle
xlat
sahf
pop
dec
sbb
out
cdq
pop
enter
add
dec
out
push
shl
jmp
int3
push
je
test
test
sbb
or
jno
pop
ds
dec
mov
push
test
jmp
mov
adc
mov
dec
pop
dec
loopne
mov
jae
int3
mov
test
dec
sahf
clc
outs
sahf
cmp
adc
imul
lods
ror
outs
cmc
int3
add
retf
xor
mov
dec
mov
leave
jp
lock
adc
push
adc
cmp
push
push
cmp
movs
scas
cwde
add
mov
(bad)
pushf
cmc
outs
cmp
cmp
sahf
or
adc
(bad)
hlt
push
into
inc
dec
mov
push
fsubr
and
(bad)
push
stos
aam
or
sub
cmps
add
sahf
dec
int3
call
lock
xchg
xchg
mov
cmp
mov
inc
pop
cmp
xchg
dec
xchg
test
adc
jg
xchg
jne
push
daa
add
inc
in
in
pop
or
das
rol
mul
jp
ror
jno
test
and
or
int3
and
movs
xchg
inc
bound
xchg
pop
jnp
and
dec
jl
xchg
icebp
addr16
cmps
das
mov
ja
gs
out
jge
sbb
movs
cs
sti
inc
jle
(bad)
es
fwait
pop
sbb
jge
jl
clc
ds
ins
pusha
imul
popf
mov
cmps
push
or
popa
pusha
les
aad
cmp
jg
maxps
std
pop
bound
std
mov
pop
jge
and
clc
hlt
daa
push
lods
add
jno
inc
scas
mov
pop
(bad)
dec
ja
add
or
dec
cdq
loop
jmp
ins
adc
cmp
sub
loop
lock
aaa
jl
jae
add
mov
push
jmp
ds
sub
stos
lods
push
in
add
dec
sbb
es
and
fisubr
sbb
ror
int
stos
jecxz
xchg
pop
jmp
push
mov
add
sbb
mov
and
xor
call
xchg
in
imul
jle
or
popf
add
mov
mov
(bad)
pusha
push
int3
mov
sbb
loop
xchg
xor
push
mov
iret
(bad)
(bad)
in
mov
xor
dec
cld
test
lea
adc
sbb
int
jb
mov
imul
ret
loope
jns
cdq
pop
stos
es
repnz
mov
pop
(bad)
xchg
inc
icebp
test
test
sbb
mov
mov
jno
and
inc
ds
sub
cmp
cwde
mov
mov
inc
loopne
cmp
xchg
inc
(bad)
aad
std
xchg
aam
icebp
inc
jae
aad
inc
push
sahf
pop
inc
aas
popf
and
in
ror
jecxz
adc
cmp
mov
(bad)
(bad)
retf
and
xor
add
retf
sub
push
mov
cmp
and
arpl
out
dec
jnp
and
clc
loop
inc
fist
lds
es
test
sub
scas
std
aam
adc
add
push
cmp
fstp
xor
mov
hlt
xchg
or
cdq
sub
and
sar
mov
jmp
jne
addr16
cmp
arpl
adc
pop
xchg
cmp
cmp
popf
out
inc
add
daa
jbe
mov
inc
push
xor
and
sbb
jbe
in
ret
mov
in
pop
scas
xor
rcl
dec
mov
pop
fs
test
pop
stc
adc
imul
jle
(bad)
int3
xchg
adc
mov
repnz
lea
jo
nop
adc
stos
jecxz
adc
inc
xor
jne
daa
fwait
icebp
xchg
jae
jl
inc
fs
ror
xor
push
mov
idiv
call
sti
int3
js
mov
movs
jmp
and
ins
clc
test
or
xor
jge
adc
(bad)
jmp
fadd
retf
inc
(bad)
mov
or
sbb
std
movs
push
movs
adc
test
mov
ficom
ret
adc
cmp
mov
lods
cmp
pop
cs
adc
and
cmc
popf
mov
dec
sti
test
(bad)
sbb
jno
add
and
(bad)
add
ins
or
retf
jmp
mov
mov
inc
int3
dec
cmps
lea
test
dec
xor
add
jbe
jg
push
ja
ja
adc
inc
pop
enter
scas
ficomp
jae
lea
push
addr16
aas
mov
nop
aad
ret
(bad)
jb
in
(bad)
ins
fsubr
popa
jb
and
adc
xor
add
pop
lock
(bad)
imul
loopne
in
loop
ret
sahf
jb
sbb
xchg
jp
dec
dec
mov
adc
rol
cmp
or
push
ja
lods
xchg
xor
in
and
xor
mov
cmp
loopne
add
sub
lea
ja
mov
add
popa
xchg
mov
imul
repz
sub
loope
jmp
stos
cmp
cwde
mov
fidivr
mov
dec
(bad)
and
jbe
or
add
cmp
dec
jle
add
nop
ret
dec
das
and
mov
rcl
movs
scas
mov
xor
das
lods
call
jge
and
or
xor
lahf
xchg
push
scas
clc
xchg
sub
inc
inc
les
lds
lds
pop
in
mov
mov
push
dec
fdiv
dec
test
fmul
arpl
adc
in
or
add
adc
push
call
dec
dec
into
xchg
(bad)
ins
out
or
jno
adc
jb
cmp
mov
mov
(bad)
popf
mov
arpl
jbe
fdiv
xor
pop
cmp
popa
sar
add
into
inc
dec
fist
push
arpl
cmp
add
xchg
mov
jns
push
sti
sbb
mov
sub
movs
out
mov
retf
ja
dec
in
(bad)
(bad)
nop
dec
add
and
js
add
sbb
int3
pop
xchg
aad
jno
ins
lahf
cmp
jl
dec
imul
xchg
push
dec
jg
shl
sub
movs
mov
mov
mov
test
movs
mov
inc
inc
nop
mov
add
cmp
test
ret
xor
jmp
outs
(bad)
loope
xor
lock
mov
(bad)
add
xchg
sub
out
and
add
mov
mov
in
mov
shl
ins
imul
or
cmp
mov
push
jle
add
cmps
out
(bad)
hlt
jmp
retf
in
add
rol
outs
(bad)
push
je
daa
adc
mov
sub
mov
(bad)
out
(bad)
ins
movs
fild
xchg
in
test
and
and
test
lahf
push
xchg
aaa
stos
mov
dec
arpl
ror
arpl
repnz
mov
loope
fcmovne
sub
repnz
xchg
mov
cmps
cli
push
add
jge
push
imul
mov
lea
mov
push
sbb
jmp
mov
pop
rcl
jne
mov
cmp
push
pop
jle
fsub
sub
lods
xchg
cld
push
addr16
cmc
call
jno
adc
jge
push
jle
in
test
test
dec
loopne
inc
dec
mov
xor
sahf
lea
lea
xor
icebp
inc
inc
push
lea
add
daa
cmp
clc
je
adc
inc
mov
xbegin
dec
mov
ss
pop
enter
sub
mov
cmp
xchg
test
xchg
push
xor
pusha
fs
nop
fnstcw
cmp
and
mov
jae
pop
mov
gs
call
in
int3
and
dec
les
jne
and
cmc
mov
and
sub
cmp
pop
jbe
dec
push
jnp
jge
imul
cmc
add
or
add
xor
nop
jmp
in
push
add
sahf
mov
lods
ins
retf
cmp
mov
cmp
dec
ret
sahf
dec
push
sub
xchg
adc
xor
pop
imul
jns
and
or
dec
neg
aam
jp
fcom
jne
dec
not
jns
jle
jle
imul
xor
sub
push
(bad)
cmps
inc
aam
bnd
cmp
in
imul
outs
fmul
popa
adc
cmps
out
imul
push
adc
dec
push
push
xchg
mov
fnstcw
stc
inc
sub
cmps
xchg
adc
loope
xchg
dec
ja
jmp
cld
xlat
aaa
mov
and
push
jmp
jns
aad
sbb
ret
mov
dec
test
sbb
and
mov
bnd
add
mov
mov
cmp
sub
jmp
inc
es
call
mov
inc
cmp
ror
mov
jbe
or
iret
in
lahf
std
shl
cmp
xor
in
iret
mov
ret
dec
push
inc
out
mov
mov
dec
lock
cld
and
xchg
inc
fcmovnbe
cli
pop
out
bound
ret
ja
(bad)
cmp
inc
mov
rol
retf
dec
retf
mov
icebp
scas
dec
mov
jb
shr
dec
push
and
sahf
fld
jmp
(bad)
adc
retf
jne
pop
aam
and
xor
mov
and
lods
push
fcomip
mov
gs
call
jae
xlat
and
repz
jl
outs
mov
jg
inc
mov
in
mov
in
jle
hlt
call
or
add
sub
std
clc
jo
fsubrp
loope
and
cld
fcmovu
jnp
std
sbb
cdq
sub
inc
lea
lea
xor
icebp
add
mov
(bad)
out
test
aad
aam
dec
xchg
cmp
xchg
jbe
mov
stc
or
mov
add
mov
test
aam
dec
push
pop
les
cli
adc
pop
scas
daa
push
dec
mov
je
in
loop
sbb
popf
fwait
jecxz
int3
into
loop
mov
aam
jns
mov
int3
xchg
mov
inc
nop
mov
ret
test
sbb
(bad)
adc
cmps
ins
push
pop
or
mov
sub
fisub
movs
add
outs
shl
jno
call
push
aaa
sub
sub
jo
jns
push
lds
retf
das
jnp
mov
stos
arpl
add
cmps
jnp
(bad)
jo
out
pop
mov
idiv
mov
and
inc
mov
add
fnstcw
cmp
push
arpl
out
push
shl
pop
push
push
xor
fsub
bound
mov
cmp
bswap
lock
mov
fild
and
repz
inc
pop
inc
add
loop
jo
jnp
jmp
jge
mov
or
movs
xor
aam
inc
popf
and
xchg
(bad)
pop
sbb
xchg
jns
and
jnp
mov
cmc
loopne
jae
stc
cmp
rol
adc
dec
inc
ret
jb
jno
cmp
push
add
pop
inc
cmp
push
imul
dec
cmps
lods
inc
rsqrtps
inc
sbb
sub
xchg
dec
sbb
pop
mov
mov
scas
add
adc
xchg
sbb
pop
mov
inc
es
and
ficomp
data16
push
pop
int
lahf
push
pusha
lock
icebp
retf
popa
loopne
ins
call
enter
push
xchg
push
xor
xlat
shl
or
xchg
cmps
mov
jmp
stos
push
inc
xchg
lea
(bad)
mov
jmp
mov
div
mov
rol
lods
out
fmul
xor
inc
inc
add
push
mov
xchg
mov
cmps
push
mov
mov
call
stos
mov
jb
in
xchg
add
dec
sub
ins
dec
test
adc
loopne
movs
xor
sbb
les
lea
pop
mov
ins
leave
push
inc
movs
call
fiadd
in
xchg
jmp
loopne
or
sbb
sub
leave
test
into
dec
(bad)
fsubp
push
xlat
pop
sbb
sbb
jp
mov
out
jle
(bad)
scas
rcr
add
sub
sar
scas
mov
sti
mov
fimul
sbb
inc
nop
mov
jbe
ret
sbb
lods
fist
cmp
push
inc
std
out
inc
mov
mov
sbb
or
sub
xor
push
fdivr
int
(bad)
cld
rcr
sub
sbb
test
int
imul
jns
out
jbe
pop
movs
or
std
cwde
sbb
out
adc
cs
jmp
jnp
shl
xchg
sbb
mul
sbb
add
xchg
push
jge
dec
inc
(bad)
adc
ret
data16
pop
daa
mov
xor
lds
sbb
push
add
sbb
imul
js
push
aam
test
ds
mov
hlt
je
dec
mov
add
dec
sbb
leave
pop
mov
sahf
xor
add
test
sub
repz
popf
push
sbb
mov
push
shl
sub
mov
retf
mov
cmc
sbb
mov
das
aad
cmp
xchg
imul
jl
mov
cdq
sub
les
xor
mov
rol
push
test
stc
dec
lea
inc
and
lahf
lock
push
xor
mov
or
(bad)
fdivr
sub
cwde
(bad)
push
stc
mov
inc
jmp
dec
mov
xchg
daa
pop
(bad)
popf
inc
dec
mov
mov
sub
into
mov
in
bswap
xor
std
stos
icebp
in
lds
stos
sub
pop
pop
push
sub
retf
jae
or
lea
push
das
pop
clc
push
inc
test
js
jno
lds
push
out
dec
jbe
xchg
js
and
shl
cmp
or
pop
dec
sbb
lea
dec
aas
outs
jnp
call
cmps
stos
test
xlat
sbb
push
in
cmp
hlt
sub
in
sti
test
pop
dec
(bad)
jae
jge
retf
mov
xor
mov
sbb
fisubr
mov
sar
push
fistp
jb
in
sbb
jmp
aaa
stc
inc
lea
mov
xchg
rol
scas
xor
jl
popa
inc
or
test
mov
mov
pop
xor
pop
rol
stc
add
in
and
add
loopne
and
std
pop
cmp
and
retf
pop
add
jecxz
je
jmp
dec
push
pushf
xor
dec
jecxz
and
das
push
movs
sub
inc
retf
push
fldcw
out
or
or
inc
mov
push
mov
imul
mov
xchg
(bad)
popa
ds
cmp
cmp
arpl
xchg
or
sub
stos
aad
in
retf
inc
mov
and
jle
adc
mov
xor
mov
dec
pop
sbb
mov
jle
and
hlt
fldcw
scas
xchg
movs
xlat
xor
jo
fisubr
cmps
stos
mov
adc
in
dec
jbe
ret
add
xor
mov
mov
pop
push
clc
jmp
jnp
ficomp
lods
fdiv
out
inc
test
ret
cmp
imul
adc
dec
outs
adc
cs
test
jp
push
lock
ja
mov
call
std
not
adc
fnstenv
mov
push
pusha
ins
lock
add
retf
inc
xor
push
adc
cmp
dec
jmp
mov
cdq
aaa
adc
cmp
dec
inc
popf
(bad)
popa
not
mov
xor
xchg
mov
and
enter
aaa
stc
shl
jns
xchg
retf
mov
adc
xchg
movs
push
fild
fdivrp
pop
cdq
sub
adc
push
jo
cmp
mov
sub
adc
shl
dec
sbb
rol
fcmovnbe
inc
add
fcomp
pop
or
in
int
data16
add
inc
test
or
rcr
je
mov
add
mov
mov
cld
xor
shr
cmp
jns
add
inc
sbb
mov
movs
mov
in
sub
rcl
les
icebp
push
dec
adc
mov
sbb
(bad)
out
mov
ins
out
fwait
jecxz
test
cmp
outs
mov
mov
mov
cmc
fscale
cmp
ud2
sbb
leave
dec
out
pop
stos
or
sbb
pop
pop
or
sbb
in
lahf
out
mov
loop
stos
mov
dec
fistp
xlat
adc
pusha
or
ror
xor
pop
fidiv
leave
pop
xchg
add
inc
dec
mov
and
hlt
ficomp
adc
loop
mov
pop
data16
movs
leave
shl
dec
and
and
das
xchg
mov
out
adc
mov
test
jp
xchg
dec
inc
ret
addr16
mov
mov
adc
or
not
sub
imul
fsubr
xchg
pop
ret
dec
adc
and
sbb
push
sahf
aad
sbb
xor
cs
sahf
fdivr
in
cmp
dec
outs
out
dec
cmp
dec
xchg
push
adc
scas
xor
outs
or
jg
call
sub
lds
sti
or
cmp
rol
loop
adc
jo
ds
xor
xor
xchg
inc
rol
cs
add
ja
sbb
mov
cdq
mov
sti
daa
clc
adc
add
mov
test
repz
push
jp
adc
(bad)
mov
rol
push
mov
daa
pop
int
enter
mov
retf
xchg
in
stc
mov
outs
sbb
cs
push
ret
movs
into
mov
fidiv
add
xchg
aaa
lods
in
cs
sbb
cli
cmp
mov
add
shl
sbb
enter
dec
popa
ret
sbb
dec
pop
inc
popf
cmp
or
pop
stc
fisubr
sub
push
test
add
pusha
sub
mov
ret
xor
movs
(bad)
test
test
(bad)
jecxz
push
icebp
ret
dec
in
mov
das
shl
pop
push
cmp
popa
aaa
jne
mov
js
and
mov
es
push
mov
push
imul
outs
fwait
cmp
adc
xor
mov
out
lea
add
sbb
fimul
sbb
out
cmps
adc
sub
pop
mov
jo
les
sub
and
pop
jl
mov
pop
call
and
push
sbb
mov
cmc
mov
pop
pop
repz
sar
or
pop
daa
push
mov
sub
in
(bad)
xor
dec
call
xor
pop
fs
adc
dec
push
jl
imul
test
adc
das
pop
mov
fcmovu
push
push
int
lods
ins
xchg
mov
jmp
inc
sub
popf
sbb
dec
ret
js
pop
test
jle
sub
out
dec
clc
stos
push
adc
lock
ret
xchg
and
push
or
xor
adc
or
mov
sub
lock
xor
push
cmc
sub
cmp
dec
cmps
cmp
fldenv
xchg
xor
ja
fdivr
jp
rcl
or
inc
sbb
xlat
jmp
ins
cwde
dec
call
shr
inc
cdq
call
push
movs
sbb
or
xchg
movs
xchg
in
test
jmp
cmc
push
jae
movq
sbb
sbb
xlat
in
push
loopne
add
cmp
push
sbb
and
xchg
test
repz
jmp
call
ja
mov
out
repz
sar
adc
dec
add
std
pop
sbb
pop
into
cmp
ss
pop
push
(bad)
dec
xor
xor
(bad)
repnz
push
cs
test
js
std
sub
and
inc
push
sub
pop
dec
push
repz
sub
push
popf
dec
add
shl
adc
pop
fs
jmp
or
je
div
mov
sti
imul
in
mov
(bad)
stos
scas
je
popa
xor
add
rcl
das
fwait
push
xchg
ret
in
shl
cmp
cwde
jle
not
xchg
jg
mov
iret
push
loopne
shr
ins
pushf
mov
(bad)
fst
jb
inc
call
push
jnp
dec
mov
inc
inc
sbb
fcomp
out
adc
pop
test
(bad)
cmps
or
fistp
gs
xor
js
pop
(bad)
mov
stos
jmp
popf
inc
dec
push
ins
jle
inc
ja
and
aaa
jmp
jge
dec
imul
inc
push
xchg
pop
dec
data16
inc
imul
and
loope
cmp
xor
(bad)
and
dec
mov
and
dec
es
leave
inc
push
sub
imul
pushf
push
dec
mov
xchg
iret
add
cwde
sbb
into
pop
es
lods
outs
out
inc
shl
or
(bad)
loope
add
and
jp
ja
xlat
cmp
sub
xor
inc
es
ret
xor
scas
xchg
arpl
xchg
clc
lahf
mov
iret
(bad)
rol
add
daa
push
inc
neg
in
les
ds
test
xchg
mov
inc
push
aas
inc
lea
cmp
(bad)
bound
adc
or
inc
daa
or
sti
loopne
dec
cwde
test
pop
add
call
mov
sbb
push
mov
xchg
retf
sub
add
ret
sub
sbb
push
adc
movs
imul
in
fcmovne
add
popf
in
sub
sub
push
(bad)
rcl
xlat
call
std
mov
loopne
scas
jmp
sbb
sbb
push
mov
mov
mov
dec
mov
cmp
mov
int3
add
cmp
popf
imul
call
nop
mul
xor
and
and
cmc
and
or
sub
test
pushf
leave
cmp
push
or
shl
mov
retf
ss
pop
xor
rcr
ss
sbb
imul
mov
gs
pop
inc
and
adc
xchg
cmps
loope
das
jns
mov
fs
or
popa
xchg
repz
gs
sbb
imul
or
sti
and
jmp
cmp
add
lahf
mov
outs
sbb
mov
les
aas
dec
data16
push
mov
and
fimul
sub
loope
add
dec
pop
cmps
sar
push
cmp
lock
pop
sub
mov
aaa
neg
push
mov
iret
hlt
pop
ss
int
std
jg
mov
lods
xor
mov
daa
pop
imul
or
pushf
fs
pop
mov
ss
inc
jo
push
ficomp
xor
fidiv
cmp
adc
addr16
inc
mov
adc
das
and
xchg
sbb
out
scas
inc
jb
adc
sbb
iret
xchg
xlat
cmc
call
jae
sub
sub
icebp
ja
xor
push
cmp
jb
jl
leave
pop
jg
dec
retf
jp
fcmovnu
add
add
cmps
cmp
and
popa
jmp
cmp
lock
sbb
cld
shl
and
sbb
add
jl
(bad)
pop
loope
aam
xchg
out
or
add
popa
into
frstor
aaa
adc
push
ret
rol
aaa
jecxz
jae
mov
out
pavgw
xor
shl
imul
mov
les
ror
add
sahf
jl
fs
not
cmp
hlt
aaa
out
pop
add
ja
cmp
es
and
inc
cdq
adc
adc
mov
jle
ror
push
xchg
fwait
sbb
jp
out
xor
push
adc
inc
pop
fdivr
xchg
leave
mov
push
xor
sub
cs
in
cmp
xor
mov
jae
dec
test
mov
jmp
sbb
mov
mov
pop
mov
adc
sub
sub
xchg
enter
push
push
test
ret
dec
retf
ss
movs
jae
movs
jecxz
hlt
loop
and
xchg
inc
mov
data16
jmp
and
je
lds
pop
jl
idiv
cmp
inc
in
bound
mov
sbb
adc
xchg
fisubr
loop
mov
(bad)
mov
dec
call
sub
(bad)
jge
daa
retf
push
lods
(bad)
ss
mov
ins
jbe
cli
add
pop
jge
prefetchnta
(bad)
dec
adc
sbb
mov
pop
aad
hlt
xchg
push
sbb
cmps
pop
cmp
jno
sti
idiv
sub
movs
sti
sbb
and
inc
mov
add
loop
push
sbb
fwait
je
adc
stos
xor
jecxz
in
add
lods
mov
push
dec
or
js
imul
test
add
std
xchg
mov
sbb
leave
fsubr
push
fcom
dec
loope
mov
add
pop
xor
popa
inc
cmc
neg
add
daa
sahf
in
cmps
jp
ret
cmp
push
jmp
stos
mov
mov
jbe
popa
dec
daa
sub
(bad)
dec
cwde
in
(bad)
pop
or
dec
es
jbe
fcom
rol
outs
shl
into
inc
and
mov
cmp
sbb
dec
push
clc
lahf
lock
mov
sub
sbb
sbb
arpl
sub
mov
push
pop
(bad)
mov
mov
sbb
jp
adc
xchg
pop
gs
mov
push
mov
xor
or
and
xor
gs
adc
shr
ret
adc
cmp
add
outs
movs
adc
ret
inc
and
fsub
repnz
sahf
inc
mov
idiv
push
sub
add
ret
mov
adc
jns
mov
sub
xor
cmp
jno
sbb
xor
xchg
scas
in
xor
jecxz
mov
in
bound
fs
fdiv
and
jl
pop
mov
mov
ins
ror
rcr
xchg
and
jbe
int3
add
xchg
or
stc
add
ror
dec
test
push
jle
pop
mov
lds
loop
je
mov
jecxz
in
mov
dec
add
lea
inc
movs
xchg
call
add
test
les
sub
or
jg
pusha
sub
outs
cmc
dec
scas
cmp
int3
cmp
jmp
push
push
jmp
cmp
std
outs
xor
adc
xchg
inc
jge
or
lds
pop
or
and
xchg
std
fdivr
sub
pop
xchg
fild
xchg
dec
inc
aas
pop
ins
inc
mov
jbe
cmp
gs
es
jge
dec
or
retf
(bad)
gs
fsubr
push
mov
pusha
mov
jb
cld
jbe
iret
shr
stos
jmp
pop
scas
popa
cmp
data16
adc
sub
cmp
xchg
mov
int
call
xchg
fidiv
adc
cmc
ror
repz
daa
push
fld
cmp
adc
retf
xchg
mov
(bad)
xchg
in
jge
inc
mov
and
cmp
imul
int
mov
loopne
sub
(bad)
push
(bad)
shr
out
ror
scas
mov
xchg
pop
jg
jmp
call
lea
fwait
mov
out
dec
and
fcomp
retf
cmp
mov
jae
jmp
or
jle
mov
inc
fld
cwde
fistp
call
int
fdivr
enter
push
jle
int3
xor
mov
add
xchg
clc
sub
jb
fdiv
lahf
sub
test
sub
stos
call
and
dec
push
test
out
shl
xlat
jmp
rcr
ret
push
ror
push
pop
jge
jp
pop
pop
rol
cmp
xlat
pop
ficom
dec
test
cmp
scas
retf
inc
push
mov
mov
ss
or
mov
stos
sar
xchg
sti
pop
outs
outs
xchg
mov
or
div
lahf
push
mov
loope
pushf
jge
and
aam
out
xchg
dec
dec
mov
repnz
and
push
pop
xchg
push
cs
arpl
into
(bad)
or
sub
pop
das
pop
frstor
or
xchg
pop
adc
int
push
xchg
movs
xchg
aam
push
sbb
addr16
mov
cli
sub
pop
imul
lods
xor
daa
cmp
lods
push
ja
inc
test
jmp
inc
mov
xor
shl
das
mov
sti
push
lock
ins
les
shrd
mov
mov
jns
and
push
call
and
pop
inc
jle
pop
pop
jl
xchg
inc
cmps
ins
sub
bound
cmp
jle
mov
arpl
adc
pushf
in
(bad)
xor
cmp
adc
je
push
retf
sub
xchg
sbb
sbb
call
lds
sub
dec
mov
sub
mov
sbb
inc
cmp
sub
push
movs
out
adc
xchg
or
test
xlat
push
sub
mov
call
jno
sahf
jns
push
shr
sti
sbb
ss
cli
cld
add
push
icebp
rcl
push
repz
mov
inc
call
(bad)
sar
jle
dec
stc
xor
into
(bad)
jmp
and
pop
test
test
bound
sbb
pop
sub
sbb
adc
ds
inc
and
cmc
mul
icebp
fdiv
daa
ds
pop
mov
sub
test
ror
push
pop
push
das
jg
pop
cmps
dec
fs
fsubr
jmp
ds
push
icebp
retf
cld
jle
fcmovnb
dec
aam
push
(bad)
xchg
push
mov
mov
popa
mov
int
and
jmp
retf
fst
pop
popf
rcr
pop
aad
sub
bound
lods
cmc
fnsave
fistp
ret
gs
sub
jns
pop
mov
xor
gs
ds
leave
push
gs
test
cwde
imul
inc
pushf
scas
adc
shl
xchg
pop
in
out
into
mov
push
shr
pop
mov
xor
pop
xlat
lahf
mov
push
mov
rcr
cs
push
pop
pop
cmps
inc
rcr
sub
adc
mov
mov
das
outs
int
int3
(bad)
lock
call
lods
mov
jb
mov
and
pusha
adc
loope
test
popf
pop
fldenv
pop
cmps
push
lock
rol
pop
mov
daa
ret
inc
ret
cmc
pop
call
and
(bad)
pop
cmp
fsub
or
dec
jmp
fisttp
test
sub
pop
mov
loop
daa
xchg
lahf
push
lahf
into
clc
div
mov
aas
adc
dec
mov
push
cs
repnz
fisubr
cs
imul
lods
scas
call
retf
add
cmp
inc
pop
lods
rcr
fmul
repz
cmps
push
mov
xchg
sbb
aam
jnp
inc
in
cmp
xor
aam
aam
pop
sub
jmp
push
inc
outs
and
xor
pop
add
push
in
into
sbb
or
mov
xor
cmp
jle
imul
ins
addr16
test
sbb
cwde
repz
jle
mov
outs
enter
xor
fld1
push
jp
xor
jp
and
jb
movs
mov
inc
fistp
imul
fidivr
push
pop
or
(bad)
cmp
in
arpl
pop
out
popa
mov
not
out
sbb
sbb
rol
mov
mov
(bad)
loope
aas
jno
push
shl
xchg
ins
frstor
int3
sahf
xchg
test
or
in
dec
pop
test
jae
in
or
jle
ins
ja
scas
adc
cmp
add
shr
mov
or
aaa
dec
adc
ficom
pop
push
adc
ret
xchg
cli
iret
inc
nop
pushf
add
lds
dec
inc
(bad)
mov
mov
fsubr
pop
ins
and
lds
push
popa
pop
and
mov
imul
stc
rol
popf
lds
pop
and
pop
sbb
popa
js
arpl
add
pop
cwde
push
outs
ins
stos
ror
pop
xchg
sar
repnz
loope
rcl
daa
jl
imul
lahf
xchg
rcr
sub
sti
dec
jo
inc
loopne
inc
cwde
movs
cmp
enter
ins
sbb
lods
cmp
arpl
pop
mov
pop
xor
stc
pop
push
rcl
mov
mov
and
cli
push
jne
and
mov
(bad)
jmp
int
mov
mov
jmp
xchg
out
shr
xor
popa
ror
mov
push
orps
add
ret
cmps
out
lods
add
xor
int3
sub
and
clc
call
lahf
fnstcw
push
es
call
stos
pop
repnz
retf
push
ds
pushf
mov
mov
push
dec
mov
adc
dec
(bad)
and
(bad)
or
xchg
cmp
xor
gs
sar
shl
cs
je
sub
pushf
mov
gs
in
push
stos
xchg
push
jae
mov
inc
inc
add
lods
mov
sub
fdivr
xchg
das
inc
das
ret
nop
lods
loop
xor
sbb
icebp
call
(bad)
je
mov
push
jns
push
xchg
mov
fstp
mov
cli
ins
inc
int3
dec
dec
(bad)
push
push
adc
call
scas
or
xor
sub
push
in
bound
or
jge
and
pop
int3
out
lods
and
icebp
lods
aas
inc
sub
jl
mov
mov
adc
dec
fistp
fwait
test
adc
add
mov
std
icebp
jno
repnz
sub
mov
loopne
mov
fnstcw
out
xor
mov
mov
imul
mov
adc
or
jecxz
sbb
dec
lds
pop
jae
mov
jns
mov
jge
adc
jne
sub
scas
jo
nop
sub
jmp
lahf
dec
adc
js
xor
je
retf
inc
std
scas
shl
gs
adc
mov
mov
sub
mov
or
cli
lods
sbb
ror
pop
sbb
sti
xchg
push
sub
pop
pop
sbb
add
cdq
icebp
cdq
movs
mov
test
and
pop
push
mov
sti
pusha
in
xor
jle
es
cmps
inc
add
enter
push
jge
popa
repz
ss
cmp
xchg
jecxz
and
mov
push
mov
dec
not
mov
ja
sbb
addr16
aam
mov
(bad)
push
jns
and
dec
push
call
mov
push
pop
in
cmp
inc
jg
dec
ror
hlt
pop
adc
ror
mov
xchg
(bad)
jecxz
pop
ficomp
pop
(bad)
imul
aaa
dec
outs
mov
ins
mul
call
add
mov
rcr
adc
call
sub
(bad)
dec
cmp
sbb
cmc
out
arpl
mov
mov
pop
xor
jo
mov
int3
inc
sub
mov
in
push
repnz
pusha
pushf
inc
jmp
ret
push
xchg
push
dec
das
and
add
mov
adc
push
or
mov
int
and
(bad)
xchg
daa
sbb
std
ss
(bad)
cmc
out
jmp
out
jmp
push
stc
push
pop
mov
mov
clc
cmp
and
cld
leave
lock
push
cmps
ret
loope
adc
ins
js
popf
pop
lds
cmp
jb
inc
mov
out
jmp
fsub
jbe
push
aad
sbb
test
cdq
loop
push
add
cmp
adc
xchg
or
add
sete
adc
inc
jge
imul
ficomp
out
push
pop
(bad)
xor
lahf
nop
mov
cwde
ins
into
and
hlt
sub
cmp
mov
(bad)
push
push
rep
and
imul
gs
cmc
cmp
iret
les
push
leave
repz
data16
data16
sub
scas
inc
mov
test
gs
pusha
dec
cmp
jge
add
nop
push
rol
push
dec
nop
xchg
sub
bound
jmp
xchg
jmp
mov
jbe
cmp
daa
and
xlat
inc
stos
int
mov
scas
jecxz
ins
xchg
pop
sar
xchg
mov
jno
jg
gs
(bad)
pop
and
push
icebp
inc
inc
jae
or
sbb
push
or
mov
mov
xchg
ret
cmc
(bad)
or
sub
sbb
xchg
das
jb
rcl
sti
imul
shl
popf
repnz
xor
sbb
push
rcr
inc
cmp
stc
inc
and
scas
push
iret
ret
jnp
test
test
iret
shl
adc
adc
sahf
shr
pop
call
aad
pop
jmp
sbb
xor
cli
dec
pop
data16
add
sbb
jp
jle
push
lock
movs
test
xchg
adc
jnp
push
xchg
cli
cdq
sub
dec
cs
or
cs
add
in
add
lea
and
hlt
jnp
fadd
pop
loopne
stc
fst
pop
jecxz
leave
add
mov
push
mov
fisttp
add
in
(bad)
fstp
jecxz
sub
mov
mov
inc
sti
retf
cdq
test
test
out
cmp
mov
mov
jecxz
(bad)
cmp
jle
out
mov
add
mov
(bad)
and
movs
popa
pop
(bad)
mov
lods
out
popa
pcmpgtd
xor
xchg
ins
test
inc
lds
(bad)
cdq
jp
fiadd
sar
pop
inc
push
pop
pop
dec
call
add
retf
addr16
call
add
fist
add
mov
add
scas
std
in
imul
fistp
or
dec
scas
mov
mov
and
shr
push
sub
jno
repnz
aam
cmp
call
aas
fiadd
enter
mov
cmp
sub
inc
lods
push
jae
add
ins
arpl
pop
and
inc
fsin
add
(bad)
in
sbb
retf
(bad)
push
mov
into
aaa
xor
mov
lds
pop
jb
sbb
ss
mov
sbb
push
movs
xchg
retf
hlt
and
imul
jmp
jmp
ja
inc
dec
lahf
mov
std
aas
push
push
jbe
icebp
inc
fdivrp
shl
jmp
xor
or
mov
outs
mov
jp
cwde
hlt
out
cli
aam
adc
out
ins
xor
(bad)
mov
push
jae
pop
sahf
pushf
loopne
fwait
(bad)
push
jg
jno
push
and
enter
mov
mov
int
adc
inc
ins
ins
dec
or
pusha
mov
leave
or
sbb
adc
shl
aam
push
enter
in
jp
js
mov
(bad)
iret
and
nop
sub
push
push
inc
jns
sub
xchg
jno
push
adc
xor
xchg
aaa
dec
lods
scas
mov
add
cmp
outs
or
mov
das
inc
cdq
pop
lds
dec
jae
test
jnp
out
pop
sbb
lock
nop
mov
sbb
fisttp
les
repz
adc
in
cmp
movs
add
lods
retf
cmp
outs
iret
ins
ror
pop
into
xor
dec
je
enter
pop
pop
push
das
xchg
(bad)
scas
cmps
push
inc
push
push
cmp
or
ss
outs
jb
fcomp
or
jge
adc
jg
dec
loop
sub
sub
lahf
popa
mov
and
adc
pop
fild
mov
in
inc
mov
mov
mov
pop
add
hlt
xlat
daa
popw
ins
test
idiv
std
stos
(bad)
or
mov
cmp
mov
add
inc
add
add
jo
test
jle
sbb
add
push
or
femms
sbb
cmps
ins
ret
xor
cmp
mov
fidiv
cmc
or
mov
adc
sub
mov
bound
mov
mov
jb
sbb
fs
mov
push
add
xor
inc
dec
ins
or
mov
sbb
ins
xor
inc
fwait
aaa
sbb
cmp
and
and
jo
iret
push
sbb
out
retf
jae
and
std
pop
push
fld
fsubr
not
(bad)
pop
(bad)
test
mov
sti
xchg
out
in
cdq
call
int
add
cld
and
es
jg
movs
daa
inc
out
or
mov
and
pop
jae
aaa
fld
jge
xor
mov
push
inc
cs
mov
mov
fstp
add
lods
stos
aaa
pop
cs
ja
cs
jns
jmp
dec
(bad)
out
lods
inc
sub
sbb
pop
in
clc
adc
aad
mov
out
adc
push
push
xchg
iret
lock
add
aad
jns
or
or
int3
retf
inc
(bad)
gs
retf
(bad)
imul
push
not
lahf
add
shl
inc
pop
adc
or
gs
inc
jnp
(bad)
mov
je
cmp
sbb
xor
push
retf
daa
out
sar
out
ror
call
mov
les
mov
mov
std
adc
iret
jae
sub
or
fwait
dec
add
popf
(bad)
out
arpl
sbb
jmp
and
sbb
push
jmp
in
push
jge
add
fdivr
or
and
les
(bad)
mov
aaa
test
sbb
cwde
sbb
sub
jmp
dec
and
cmps
sub
jg
jle
xchg
pusha
and
nop
cmc
pop
test
ins
dec
add
mov
or
fadd
add
xchg
loopne
jb
push
push
ja
test
mov
sar
add
xlat
sar
jne
pop
mov
inc
sub
mov
in
fsubr
pusha
add
dec
push
dec
daa
cmp
mov
xor
lea
mov
(bad)
fcmovnu
movs
stos
(bad)
sub
xchg
icebp
mov
inc
dec
js
push
push
jge
or
xchg
jo
lahf
icebp
(bad)
stc
mov
mov
push
popf
pushf
sub
fwait
mov
pop
int3
jl
xor
inc
cmp
addr16
mov
sbb
mov
retf
in
ret
xor
test
mov
fmul
les
sub
xchg
inc
ss
dec
dec
sbb
(bad)
jle
(bad)
push
loop
push
add
or
repnz
inc
out
mov
lock
loopne
outs
or
mov
adc
inc
sub
jns
mov
add
movs
pop
icebp
fisttp
mov
mov
ss
stos
inc
push
(bad)
xor
push
and
adc
aas
pop
fdiv
test
stos
fwait
nop
pop
out
dec
adc
rol
outs
pop
push
lods
jle
retf
adc
pop
mov
jne
mov
pop
and
mov
xor
xchg
push
pushf
lea
ins
daa
fs
aam
dec
add
mov
inc
xor
ror
push
sbb
loope
andnps
enter
int
pop
retf
dec
add
fcomp
mov
out
jl
mov
pop
inc
pushf
out
pop
cmp
cdq
in
pop
inc
mov
in
and
cli
xchg
push
or
jge
pop
xchg
out
add
btc
jae
inc
mov
js
ret
cld
rcl
or
sbb
jbe
es
(bad)
push
push
test
call
and
mov
sbb
mov
inc
mov
pop
cld
fdiv
std
inc
sbb
gs
fdiv
repnz
lea
popa
ins
lods
retf
aaa
mov
cmp
cwd
pop
jnp
hlt
outs
sub
pop
add
stos
lea
push
add
or
adc
(bad)
jno
pop
inc
pop
pop
xchg
push
pop
scas
std
ret
push
sbb
dec
xor
fisubr
xchg
mov
sahf
xor
mov
inc
pop
xchg
inc
dec
scas
test
test
cmp
and
dec
push
jl
lds
adc
daa
sub
nop
or
cmp
inc
nop
mov
xchg
cmp
sti
sahf
add
inc
ins
sub
stos
aaa
xor
js
ins
mov
dec
nop
mov
add
push
ins
push
imul
leave
add
jecxz
adc
imul
aas
ret
call
xchg
sub
(bad)
cmp
scas
cmp
les
daa
mov
ja
pop
not
xor
mov
out
clc
(bad)
dec
add
pop
inc
add
dec
fmul
cmps
mov
loopne
sar
cdq
scas
inc
sbb
loopne
and
pop
cmp
loopne
cmc
mov
mov
cmps
jg
push
shr
gs
inc
retf
mov
and
(bad)
fdivr
mov
pop
ss
icebp
pop
mov
mov
mov
xor
add
stc
retf
les
cmp
and
std
pop
push
mov
test
mov
xor
push
ret
cs
test
jae
inc
icebp
(bad)
sbb
lea
ret
mov
push
push
xor
xor
mov
lahf
test
popa
rcl
outs
xchg
mov
je
arpl
rcl
mov
mov
inc
(bad)
mov
popf
out
not
cwde
mov
sbb
outs
inc
sub
hlt
mov
jg
push
pop
cmps
push
mov
sbb
adc
fldln2
outs
leave
pop
xchg
pop
in
and
dec
call
push
cmp
stos
getsec
fadd
dec
mov
imul
pop
pop
pushf
stos
cmp
mov
sbb
test
ret
xchg
imul
dec
iret
int3
jns
xor
mov
sub
pop
xor
test
mov
mov
hlt
pop
jmp
pop
imul
fcomi
je
leave
xor
pusha
lds
cmp
jne
xchg
push
movs
push
xchg
hlt
xlat
pushf
and
dec
push
xor
call
add
jo
pop
cmp
dec
bound
cmp
push
out
or
mov
and
mov
mov
fwait
mov
push
ins
sub
icebp
loop
xchg
xchg
mov
outs
lods
fsubr
add
jg
xlat
lock
retf
jl
and
call
es
pop
xlat
dec
adc
aas
in
bound
scas
add
sub
add
lahf
sti
aas
jo
jae
out
pop
sahf
mov
outs
jle
xor
pop
in
adc
enter
jmp
(bad)
sbb
adc
je
dec
and
xchg
inc
mov
aad
in
mov
test
sub
cmps
mov
call
mov
gs
adc
ficomp
(bad)
and
pop
jne
nop
push
jnp
mov
mov
mov
ja
stc
jnp
hlt
shl
int
lock
sbb
mov
dec
iret
cdq
movs
pop
loopne
cs
neg
pop
push
mov
in
pop
push
daa
sub
mov
pusha
xor
jmp
daa
cwde
pop
je
inc
popf
mov
xchg
xchg
xchg
push
add
dec
repnz
(bad)
mov
jmp
push
popf
push
dec
sbb
push
sbb
leave
dec
mov
pop
mov
es
ins
cmps
add
push
xchg
mov
pop
and
stos
in
test
sbb
pushf
(bad)
mov
inc
or
neg
into
and
push
cmp
clc
cmps
adc
mov
dec
icebp
idiv
add
xlat
icebp
mov
call
push
cmp
pop
or
push
fild
cmp
sub
and
sbb
mov
(bad)
push
jnp
mov
mov
dec
cdq
mov
movs
cmc
mov
and
lea
dec
push
adc
mov
sub
mov
xor
mov
loope
or
in
push
movs
mov
cmp
(bad)
mov
dec
mov
mov
shr
call
mov
pop
fsub
pop
cmp
nop
jge
iret
xchg
into
mov
out
cmp
int3
sbb
xchg
std
inc
aad
sbb
cmc
adc
adc
adc
rol
mov
sub
or
ret
daa
es
sub
jo
data16
cmc
sbb
sub
aad
mov
cmp
cmc
gs
sub
jbe
loope
and
jmp
xchg
mov
nop
div
sbb
popa
jo
push
push
fdiv
jb
mov
pop
nop
mov
sbb
mov
mov
out
int3
push
lahf
and
imul
stc
push
call
lods
xchg
(bad)
xchg
retf
sbb
pop
xchg
pop
jle
mov
daa
(bad)
cmp
sets
jp
cdq
mov
call
inc
and
add
xchg
sar
pop
shr
inc
dec
sbb
inc
fldcw
add
pop
fcom
jmp
movs
repnz
xor
bnd
icebp
ret
arpl
out
xchg
movs
fild
mov
retf
inc
fwait
jb
cmp
mov
cmp
(bad)
push
cmp
xchg
sub
out
mov
lds
add
xchg
(bad)
movs
mov
in
sahf
mov
jns
pop
(bad)
js
pop
pop
repz
jnp
cld
in
stos
push
aad
push
cmp
cwde
jae
xchg
jne
pop
add
enter
xchg
push
push
cmps
pop
retf
cmps
pop
dec
ds
xlat
(bad)
xchg
jg
jnp
mov
pop
les
adc
nop
mov
cmp
inc
push
dec
inc
add
fimul
jmp
pop
pop
cmp
data16
stc
adc
sbb
std
add
test
jmp
bound
clc
lds
jecxz
stc
(bad)
jb
add
or
push
jl
(bad)
add
jecxz
jecxz
retf
rcr
pop
test
xchg
mov
mov
sti
or
add
sub
inc
lahf
fldcw
sub
int3
fbld
popf
pusha
nop
call
imul
call
sub
(bad)
in
pop
(bad)
loope
jg
pop
adc
mov
aaa
inc
jbe
mov
lods
in
dec
fisttp
aaa
outs
jb
jno
loope
push
cmp
xor
mov
cwde
jnp
pop
and
or
xor
out
pop
pushf
rcl
ret
add
rol
jbe
add
fdiv
xlat
cmps
sbb
fild
movs
dec
cdq
mov
test
push
sub
xchg
(bad)
(bad)
jl
popf
and
stos
leave
push
adc
or
adc
sbb
out
or
or
jge
xor
test
mov
jge
and
pop
in
test
jne
xor
sbb
(bad)
popf
out
fcomp
shr
xor
pop
aas
push
adc
pop
jmp
sub
add
rcr
xchg
mov
xlat
pusha
jmp
jmp
test
xor
adc
scas
add
shl
stos
fidivr
or
jae
cmp
xchg
iret
mov
rol
dec
push
or
cmp
icebp
cmp
push
sbb
dec
fidivr
inc
add
cmp
mov
cmp
imul
inc
popf
movs
push
sub
pusha
xchg
in
fnstenv
inc
xchg
xlat
sbb
mov
xchg
hlt
xor
pusha
cmp
fwait
shr
and
test
jne
movs
rol
xor
ror
aas
jns
and
cmp
inc
aad
icebp
and
(bad)
adc
sub
daa
jmp
movs
jp
dec
inc
loopne
sbb
xor
les
ret
sub
push
arpl
jge
(bad)
daa
std
rcr
retf
ja
fdiv
xchg
pop
mov
aaa
(bad)
cli
pop
push
or
repz
dec
(bad)
call
cmp
or
(bad)
call
int
in
test
xchg
ret
outs
sub
xor
rcr
into
movs
sbb
(bad)
fld
fmul
icebp
adc
xor
fcom
sbb
xchg
add
pop
retf
jg
lock
enter
dec
cmp
mov
jmp
arpl
adc
push
fwait
pusha
lds
cmp
lods
shl
nop
loopne
pop
add
fidivr
lods
jo
test
das
jne
into
mov
dec
in
sbb
outs
xchg
int
jg
loop
push
shl
pop
fcmovu
out
inc
mov
cmp
cmp
mov
cdq
scas
mov
je
loopne
sub
mov
aaa
mov
xor
mov
jo
xor
dec
and
cmp
mov
push
or
mov
jmp
or
xchg
ja
xchg
sbb
lods
jno
jnp
(bad)
fistp
push
fcmovb
inc
ror
and
pop
lods
jbe
gs
or
inc
jmp
lods
or
push
ret
adc
in
add
in
and
clc
jl
adc
loopne
dec
mov
leave
sar
sub
repz
enter
or
jg
pusha
sub
cmc
mov
icebp
jns
cmp
and
call
sbb
add
das
(bad)
xor
adc
(bad)
ins
test
mov
push
gs
and
in
or
and
or
push
sbb
or
jge
ficom
push
jmp
pop
jp
or
arpl
nop
pop
rcl
repnz
call
mov
dec
jno
repz
sub
ins
ds
pushf
add
or
sti
imul
pop
jne
in
out
jne
mov
mov
in
xor
shr
aad
sti
aad
pop
sub
inc
cmp
sub
in
pop
dec
cmps
inc
dec
fist
mov
(bad)
(bad)
call
xchg
jge
aad
out
cld
cmp
add
xchg
test
call
lahf
and
mov
or
aam
pop
imul
mov
dec
jb
fs
addr16
int
push
sbb
retf
mov
mov
lahf
sti
add
sbb
cs
inc
sub
pusha
dec
pushaw
mov
ss
cs
xchg
mov
shl
jmp
(bad)
push
in
imul
fsub
je
add
les
nop
in
fcomp
sahf
sub
je
dec
pusha
dec
aam
xchg
arpl
es
sub
pop
es
js
gs
mov
cmp
xchg
repz
mov
mov
cmp
xor
sub
push
scas
popa
cmp
clc
test
push
int3
loop
setae
add
stos
sub
mov
push
lods
in
enter
mov
movs
dec
ss
pop
inc
leave
int
jge
test
mov
mov
sub
cmps
push
aas
lods
push
or
jae
enter
retf
inc
dec
jne
icebp
fld
clc
je
ret
stos
fld
fmul
lea
cdq
loop
xor
mov
arpl
lods
add
push
out
fwait
push
or
inc
push
jnp
stc
jns
fnstenv
and
test
mov
int
call
and
inc
push
jo
dec
push
xchg
ror
xlat
fld1
push
sub
push
inc
inc
das
mov
aaa
nop
xlat
xchg
sbb
xor
mov
ja
loop
in
bound
hlt
xlat
cmp
ins
xchg
xchg
jg
mov
cdq
shl
movs
mov
pusha
and
sbb
dec
xor
adc
shl
mov
out
pop
jge
push
xlat
and
pop
cmp
pop
fwait
mov
mov
fidivr
movs
push
mov
into
jle
(bad)
dec
ss
ret
std
and
adc
xor
popf
popf
(bad)
cmp
imul
cmp
sti
pop
cmp
ds
sahf
and
mov
jl
popa
(bad)
hlt
aam
mov
or
inc
inc
add
xor
mov
jp
dec
mov
cmps
fwait
(bad)
fild
push
(bad)
div
cs
add
sub
push
sbb
(bad)
lea
xchg
mov
fdiv
dec
xor
clc
ds
pop
mov
pop
icebp
xchg
sub
mov
iret
nop
push
or
rol
mov
push
fisttp
retf
repnz
(bad)
mov
sub
mov
jl
mov
dec
arpl
leave
adc
inc
div
je
push
rcr
jle
mov
arpl
rol
dec
iret
jno
retf
adc
movs
adc
jg
sar
pop
and
add
lods
test
(bad)
lods
jge
pushf
into
sahf
data16
sub
cmp
cmps
inc
xchg
add
mov
jnp
rcr
sahf
xor
int3
mov
pushf
inc
stos
vmwrite
pusha
pop
add
mov
test
pushf
jl
adc
aad
mov
mov
xor
lods
aaa
cmp
movs
jl
xchg
ror
inc
xchg
paddw
cmp
xlat
inc
shl
adc
mov
mov
aam
lds
sub
add
or
in
or
inc
and
repz
sbb
pop
bound
outs
clc
mov
test
cli
mov
mov
mov
inc
adc
pop
scas
out
xchg
cs
je
rol
sbb
jg
fild
je
pusha
(bad)
mov
push
ds
clc
add
call
mov
shl
pusha
mov
mov
or
pushf
lea
daa
movs
and
dec
cmp
inc
xchg
inc
iret
sahf
imul
and
lds
test
fprem
out
sar
sbb
jb
cwde
cwde
cmp
pop
ins
push
leave
mov
and
pop
icebp
jmp
push
retf
dec
cmps
pop
pop
pusha
not
pop
lahf
sub
push
test
push
aad
jle
jb
pop
pop
out
sub
pop
lock
ret
sbb
scas
ret
or
mov
pop
fsubr
and
jae
jbe
adc
int3
xor
fsubr
pushf
or
addr16
pop
ins
or
mov
in
(bad)
cdq
loopne
icebp
dec
or
int3
sub
jp
retf
or
inc
adc
jge
(bad)
nop
arpl
lods
hlt
add
mov
sti
xchg
jae
in
xchg
jae
pop
cmp
push
adc
lock
mov
not
inc
dec
jb
daa
lods
push
push
and
fstp
iret
xchg
sti
leave
xor
xchg
repz
mov
mov
adc
(bad)
inc
inc
mov
shl
push
sub
shr
call
inc
inc
or
cmp
mov
cmc
es
cwde
mov
add
xlat
xchg
jb
nop
cmp
and
dec
(bad)
aaa
imul
mov
mov
push
cmp
test
shl
call
adc
cmp
scas
das
mov
xchg
dec
cmp
and
in
pop
iret
je
iret
xchg
cs
cmc
hlt
and
rcr
lods
mov
nop
movs
inc
addr16
repz
jle
pop
add
inc
js
xor
add
cmp
(bad)
cwde
and
das
add
ins
inc
push
lods
dec
xor
mov
cmp
call
or
stos
mov
call
sbb
dec
adc
xor
rcl
movs
jmp
in
ret
mov
mov
adc
push
mov
push
sbb
ss
mov
xchg
loop
jns
(bad)
in
js
cmp
and
popf
sar
sub
into
xchg
or
paddsw
push
iret
int
mov
(bad)
bnd
pop
mov
or
and
lea
inc
xchg
dec
les
cmps
jl
xchg
cmpps
in
js
repz
pop
iret
add
xchg
repz
adc
push
jge
add
jbe
push
add
jae
add
jle
imul
loope
and
pop
movs
xchg
dec
lods
wrmsr
repnz
push
add
inc
cmp
cmp
ins
dec
jp
sub
call
jne
cmp
test
out
xchg
sbb
test
int
xchg
aaa
sbb
cmp
jp
cmps
pop
cmp
outs
mov
shl
and
xor
jmp
xchg
dec
pop
push
fild
add
fucom
inc
sahf
aad
scas
fmul
push
ret
push
lea
mov
sbb
xchg
mov
sbb
cmp
jbe
mov
and
pop
mov
aaa
lds
icebp
add
xchg
frstor
push
sub
(bad)
mov
mov
out
mov
ins
daa
pop
sti
xchg
idiv
cmc
sub
jle
fwait
mov
jns
pop
push
movs
dec
int3
or
xchg
pop
mov
sub
jno
les
nop
fwait
dec
sar
mov
les
inc
ret
ins
jge
in
jge
repnz
retf
imul
aam
addr16
scas
push
pop
push
sbb
test
sub
fldcw
je
sub
dec
jnp
sub
cmp
pop
jb
mov
jp
inc
and
dec
ss
mov
sub
jp
sub
mov
loope
outs
(bad)
call
push
mov
movs
push
xchg
ret
lea
xchg
jle
pop
gs
xchg
popa
pop
div
outs
pop
mov
or
sub
gs
(bad)
pop
cmp
or
xchg
aas
pop
jmp
inc
fdivr
or
sbb
cmp
inc
mov
pop
xchg
mov
xchg
dec
cmp
or
retf
loop
xchg
push
mov
int
and
xor
call
xor
push
add
fdivr
out
inc
mov
xchg
(bad)
aad
idiv
xchg
mov
adc
xchg
adc
jnp
loope
pop
mov
sahf
mov
dec
mov
retf
mov
fsub
sbb
popa
bound
mov
sbb
pop
mov
xor
inc
adc
jmp
mov
ins
inc
test
leave
(bad)
int
lahf
cdq
xor
push
lds
outs
and
jmp
outs
rol
dec
mov
ret
inc
push
ja
push
xor
cmp
pop
sar
jmp
xor
pop
jbe
dec
adc
test
xor
rol
dec
outs
pushf
push
ss
sub
sub
add
sbb
inc
cmp
gs
add
pusha
cmp
out
pop
fidiv
mov
jecxz
inc
dec
cwde
inc
shl
data16
cli
mov
aaa
push
stc
into
push
clc
lods
pop
xor
add
xchg
push
mov
dec
les
js
jecxz
xchg
add
xor
addr16
lds
and
adc
pusha
add
pop
push
call
mov
dec
sbb
test
dec
gs
or
push
int
sub
add
repz
jp
dec
scas
mov
or
sahf
inc
outs
pop
ror
nop
and
push
xchg
jne
mov
adc
into
lds
data16
movs
add
pop
lock
or
int
xchg
jmp
hlt
mov
jmp
pusha
outs
push
stos
xchg
inc
das
hlt
push
adc
dec
add
ss
push
arpl
jle
mov
mov
out
mov
mov
cdq
movs
ins
in
and
shl
jge
or
sub
adc
repz
or
mov
jae
shr
leave
or
in
dec
dec
iret
shl
push
sbb
jb
mov
cdq
leave
loopne
cmp
jmp
fdiv
xchg
add
jae
imul
jae
add
jbe
mov
shr
sub
movs
xchg
mov
test
jmp
out
sub
push
fisttp
lods
sub
cwde
sub
add
addr16
int3
inc
aaa
or
sub
dec
rcl
cmps
jge
gs
adc
or
lahf
(bad)
dec
imul
mov
or
hlt
dec
test
sub
and
adc
enter
sub
cli
inc
ja
in
stos
inc
xchg
push
pusha
push
outs
or
mov
add
jno
(bad)
mov
inc
adc
pop
pop
jno
cmp
test
das
fsub
sbb
hlt
std
fild
adc
jg
rcl
pushf
ins
xchg
inc
sar
arpl
dec
ret
movs
test
fiadd
es
aaa
xor
pushf
sub
rcr
fcomp
sbb
ja
nop
push
mov
xchg
inc
fisub
cmps
jl
xchg
jg
or
iret
or
and
dec
or
push
add
mov
shr
das
adc
xor
popf
sar
and
movs
movs
stos
gs
pop
hlt
(bad)
aad
add
sub
and
fld
pop
js
sbb
lods
and
dec
pop
lods
or
cmp
mov
jecxz
test
nop
aaa
sub
bnd
or
fsubr
adc
dec
in
cwde
dec
into
in
repz
mov
sbb
imul
jno
dec
and
xchg
mov
and
xchg
in
push
add
loope
lock
cmp
mov
std
add
xlat
sub
lock
test
mov
shl
jle
pop
or
call
ds
out
aam
repnz
imul
mov
push
mov
jmp
iret
dec
mov
jp
mov
fwait
push
push
in
stc
(bad)
sub
std
sbb
sub
xchg
loope
ror
pop
xchg
jne
push
xlat
cld
inc
cmp
or
ins
sub
aaa
popf
sub
sahf
in
lahf
adc
hlt
mov
inc
xchg
pop
stos
in
push
stos
sbb
fld
jge
call
jl
or
add
xchg
ja
pusha
push
or
test
out
mov
lods
bound
cld
(bad)
mov
push
xor
(bad)
stos
push
xchg
loope
psubsb
lea
xchg
cmc
test
loope
aaa
or
cli
cmp
pop
sbb
mov
add
pop
fidiv
jg
ja
jecxz
jne
jmp
das
enter
mov
std
or
sahf
mov
cmp
icebp
je
fld
retf
stc
mov
inc
pop
push
cmps
nop
mov
(bad)
ss
movs
mov
or
mov
or
jae
loop
mov
jns
add
sbb
and
adc
adc
div
shl
fidivr
inc
arpl
fistp
cmp
xchg
mov
inc
pop
sti
push
paddusb
push
outs
lods
in
stc
and
pusha
hlt
cmp
ret
dec
mov
lock
(bad)
jo
(bad)
outs
mov
(bad)
or
movs
loopne
dec
push
dec
mov
mov
sbb
in
js
out
add
and
and
ret
aaa
mov
popa
loopne
mov
mov
dec
in
mov
popa
or
icebp
push
sub
imul
dec
scas
mov
mov
adc
push
jg
ins
xchg
and
pop
(bad)
push
dec
in
inc
(bad)
mov
repz
fwait
lahf
cdq
sub
jl
ret
pop
out
pushf
pop
and
movs
adc
in
sbb
ss
retf
out
clc
iret
jl
pop
mov
mov
js
adc
jno
sub
add
xchg
fimul
add
lea
dec
scas
fs
and
ja
cld
test
dec
jmp
push
or
aaa
neg
fwait
retf
outs
lods
icebp
hlt
retf
mov
mov
jecxz
fild
mov
js
cmp
add
retf
scas
push
pop
dec
(bad)
dec
dec
adc
(bad)
out
jmp
mov
sbb
mov
outs
scas
push
cdq
mov
stos
inc
add
or
test
outs
imul
aam
enter
push
adc
es
iret
xchg
call
add
stc
outs
pop
mov
mov
sub
push
mov
retf
test
add
mov
or
aad
mov
xchg
mov
pop
nop
stos
test
jbe
mov
fwait
mov
or
and
dec
xor
sbb
jb
xchg
sar
arpl
je
pop
test
push
shl
scas
pop
push
or
(bad)
or
sbb
adc
addr16
ss
popf
inc
push
xchg
mov
mov
mov
adc
fist
cmp
iret
dec
retf
pop
ja
sti
stos
retf
fidivr
sbb
dec
mov
(bad)
pop
retf
xor
dec
jae
inc
mov
shl
out
stc
push
sub
sbb
out
pop
mov
jb
and
sbb
hlt
imul
cli
cld
or
loop
mov
jne
dec
sbb
adc
fbstp
mov
(bad)
lods
outs
stc
(bad)
and
int
cli
gs
mov
dec
push
sbb
mov
gs
addr16
rcl
loop
outs
sub
dec
fistp
enter
mov
ficom
push
jecxz
pop
(bad)
fiadd
or
sbb
adc
aaa
aaa
push
dec
mov
enter
dec
dec
jl
push
mov
std
jno
mov
adc
cmp
shl
test
fdivr
fist
cli
scas
lds
cmp
mov
add
lds
(bad)
adc
cmp
fs
dec
fld
mov
mov
push
outs
rcr
inc
loop
xchg
mov
jne
out
push
fstp
rcl
mov
or
dec
int
jmp
add
and
mov
sub
fs
sahf
(bad)
imul
daa
or
inc
popa
psllq
push
jecxz
(bad)
sbb
mov
aaa
(bad)
and
imul
xchg
test
sbb
hlt
xlat
loop
out
xchg
jmp
sub
mov
mov
push
int3
xchg
or
(bad)
sti
mov
mov
or
lods
mov
push
arpl
push
push
cmp
sbb
xor
or
mov
push
in
mov
lods
pop
ja
mov
dec
in
test
push
adc
leave
(bad)
mov
in
test
add
xchg
in
inc
aam
mov
bnd
xchg
imul
adc
cwd
mov
xor
movs
mov
cmp
xor
les
xchg
xchg
popf
xor
rcl
mov
mov
ins
mov
pop
push
mov
dec
call
push
jg
mov
mov
jno
pushf
retf
inc
in
push
sbb
das
loope
outs
adc
in
aas
mov
leave
dec
xor
or
add
repnz
and
jge
push
dec
into
test
repnz
aam
add
lods
pop
xor
das
call
add
sub
loop
adc
xchg
ins
out
imul
mov
scas
fidiv
cwde
cmp
push
inc
push
push
(bad)
mov
cmp
and
loop
push
aam
jb
add
pop
dec
clc
test
add
push
pop
ret
mov
push
mov
mov
sti
test
adc
inc
loop
cmp
sub
icebp
ret
cmps
sbb
jb
stos
into
aaa
inc
push
dec
ret
mov
mov
cmp
add
(bad)
out
sbb
mov
inc
sub
xchg
mov
jbe
lea
outs
and
int3
lds
shr
and
bound
les
pop
mov
push
xchg
adc
jbe
sub
push
loop
scas
stos
cmp
call
and
dec
in
ja
push
fwait
sahf
sub
jg
push
push
out
outs
xchg
aad
bound
push
add
(bad)
jae
daa
in
dec
sbb
add
push
dec
cmp
mov
push
or
xor
in
rcl
data16
pushf
popa
inc
(bad)
cmps
push
fs
push
jecxz
cmc
(bad)
cmp
cmps
mov
add
lods
mov
xchg
inc
fbstp
push
push
mov
jge
dec
pusha
(bad)
cmp
mov
inc
and
leave
ins
and
cmps
rol
aas
shr
push
push
sub
popa
push
push
das
ja
pop
and
mov
jbe
add
mov
push
pop
xchg
jb
cmp
xor
push
repz
loope
cmc
xchg
and
push
in
sub
cli
mov
sub
into
add
or
icebp
je
cwde
xor
in
shr
add
pop
and
loope
ret
cwde
lods
test
imul
inc
push
mov
movs
and
es
add
push
pop
leave
mov
loope
jb
xor
sbb
cld
es
cmp
(bad)
jb
iret
sti
mov
retf
mov
rcr
adc
sbb
stos
xor
dec
aas
jmp
push
imul
fcmovu
js
jl
add
loop
daa
popf
fcmove
add
push
push
or
scas
fidiv
loop
add
leave
xchg
icebp
mov
data16
test
inc
push
cmc
(bad)
call
retf
inc
mov
mov
cmp
js
mov
popa
and
mov
adc
out
or
pushf
or
adc
int3
mov
mov
add
fwait
and
cmp
push
nop
jbe
inc
pushf
sub
xchg
icebp
ins
icebp
add
mov
fcmovb
ror
aaa
int3
xchg
inc
mov
jae
les
mov
push
into
je
inc
jmp
fmul
js
xchg
and
mov
cmp
mov
mov
inc
leave
arpl
mov
shr
push
imul
jns
popa
jbe
mov
jo
lock
sbb
pop
std
std
dec
stc
xor
out
shl
pusha
push
in
fidivr
cmp
lock
stc
fs
pop
mov
out
sbb
out
cmps
test
mov
imul
out
out
xchg
pop
in
cmp
repnz
movs
cmc
adc
(bad)
add
mov
movs
jp
scas
pushf
xor
icebp
(bad)
enter
jno
in
lods
and
imul
mov
xor
shr
shl
mov
cmp
and
int3
rol
fsub
jecxz
mov
outs
adc
das
dec
dec
push
aas
push
inc
dec
or
cs
push
lahf
icebp
cmp
inc
pop
cmc
pop
cmp
mov
sbb
sub
add
xchg
inc
push
push
rcl
xchg
jmp
push
test
out
adc
in
jb
mov
call
and
jp
std
xor
adc
sbb
ds
int3
or
mov
pop
ss
in
call
cmp
push
mov
mul
addr16
adc
or
dec
repz
inc
xchg
adc
idiv
mov
stc
mov
add
dec
dec
mov
or
jo
shr
ins
repnz
xchg
out
mov
dec
es
add
fnstenv
xchg
jg
jl
sbb
pop
(bad)
cmps
jae
xchg
mov
xchg
cwde
enter
mov
xor
int3
test
ret
int3
xor
cmp
ja
mov
das
or
push
cmp
std
mov
loopne
dec
(bad)
mov
push
pop
out
adc
iret
add
mov
xlat
out
cli
lock
mov
mov
movs
test
push
lds
mov
iret
sub
shl
fisub
rol
mov
fstp
fld
xor
clc
adc
sahf
shl
xor
and
iret
mov
or
adc
xor
aad
enter
gs
jp
xchg
mov
aad
xchg
ss
aas
push
outs
int3
nop
cmp
xchg
xor
sti
out
cdq
pop
outs
in
lahf
inc
push
inc
push
pusha
jge
xchg
retf
push
or
jbe
mov
or
xchg
ficomp
movs
inc
dec
inc
call
sbb
iret
jp
mov
ins
aaa
adc
icebp
jmp
cwde
mov
mov
ja
(bad)
push
sbb
jmp
cmp
les
daa
(bad)
pop
adc
mov
iret
jg
ret
fmul
loop
das
push
add
mov
mov
sub
push
fidivr
jo
push
xchg
dec
dec
sbb
and
push
int
push
loope
jae
sti
call
stos
sub
pop
push
mov
sub
push
repz
aam
xlat
or
dec
int
xchg
iret
mov
xor
std
inc
cwde
int3
xchg
xchg
sbb
aaa
les
cmp
in
imul
mov
mov
call
pop
jl
bound
mov
jg
jmp
mov
jno
imul
or
xor
cmp
mov
xor
mov
pop
jl
dec
or
mov
imul
push
adc
into
gs
mul
mov
xor
aaa
pop
jl
sub
rcr
iret
xchg
cmps
mov
and
rcr
icebp
arpl
ret
call
xor
sbb
jmp
xor
inc
shl
jb
mov
push
repz
push
loope
inc
xor
sub
sbb
cmps
pop
sbb
loop
fisubr
fcmovbe
dec
pop
inc
sub
mov
call
push
adc
cmp
aam
into
add
cmp
pop
pusha
mov
xchg
in
dec
push
cmp
or
mov
dec
jno
sbb
push
gs
mov
mov
inc
leave
sar
(bad)
mov
pushf
mov
or
adc
mov
and
cmp
rol
ins
xchg
retf
lea
sub
or
test
mov
pop
or
cwde
std
fstp
and
and
sbb
mov
fcmovu
cmp
xchg
xlat
js
mov
jle
xor
pop
cmps
jl
les
push
push
test
sub
or
xor
jb
push
mov
cmp
jl
stc
jge
test
nop
jbe
cmp
setb
cdq
xchg
mov
xchg
div
pop
pop
mov
pop
cli
mov
gs
jbe
sub
imul
(bad)
stmxcsr
sbb
push
or
sub
adc
adc
inc
xchg
rcr
or
mov
cld
add
inc
jae
mov
movs
adc
mov
in
mov
mov
addr16
in
popa
xor
jp
sbb
dec
inc
xor
ror
cmp
test
retf
(bad)
fwait
inc
and
aad
jae
dec
inc
popf
repz
xchg
or
and
in
cmp
cmps
xchg
or
jmp
shl
pop
push
jecxz
retf
lds
jmp
data16
jecxz
push
mov
push
fstp
xor
(bad)
push
sbb
pop
xchg
inc
xor
xchg
and
mov
call
retf
inc
aas
push
call
je
(bad)
retf
iretw
mov
adc
js
idiv
sub
bound
out
cmp
cli
in
push
mov
test
push
pop
icebp
out
cmp
mul
ins
jmp
in
jmp
lock
out
les
xor
jecxz
rol
js
fadd
push
inc
add
dec
dec
js
das
xchg
movs
add
fmul
and
adc
xchg
out
les
stos
fsubr
and
popa
test
jne
xor
mov
movs
mov
sub
and
xchg
cmp
pop
jle
or
xchg
in
js
push
imul
xor
call
or
jecxz
loope
inc
mov
lea
jmp
shl
nop
sub
les
dec
xor
cmc
call
mov
sub
ret
cmp
cmp
outs
jmp
xchg
pop
and
(bad)
push
adc
adc
std
jle
add
int3
push
ret
sub
mov
add
inc
mov
in
rcr
dec
sbb
dec
xchg
test
call
xchg
cmp
leave
inc
mov
jnp
mov
sar
ss
sbb
mov
add
mov
sbb
in
bound
or
aaa
fsub
and
xlat
mov
xchg
imul
mov
or
sub
les
fisttp
in
push
outs
jge
xlat
push
or
pop
ds
mov
ds
adc
imul
cmp
pop
push
aam
mov
push
inc
ret
(bad)
cmp
je
sbb
outs
xchg
mov
(bad)
aam
in
adc
push
mov
pushf
shl
mov
or
lahf
repz
test
pop
pop
popa
mov
neg
sti
mov
push
mov
add
inc
frstor
out
pop
inc
jmp
cmps
cdq
xor
rol
mov
and
shl
and
xchg
stos
xchg
jp
ret
(bad)
test
ror
icebp
xchg
pop
cmpxchg
push
cmp
out
mov
cmc
add
gs
jecxz
sbb
jno
and
push
mov
ds
sbb
loop
cmp
loop
or
add
rcl
dec
cmp
test
arpl
xor
fiadd
inc
cmp
and
sti
in
pushf
rcr
cdq
mov
jp
nop
jecxz
pushf
repnz
sub
lds
pop
mov
stos
cmp
sti
mov
data16
lods
enter
inc
int3
push
cdq
sbb
inc
add
rol
pop
adc
jle
cmps
jbe
ror
jle
cmps
mov
cld
xchg
xor
xor
pop
repnz
sbb
and
adc
xchg
jns
sahf
dec
cmp
rcl
jno
pusha
sbb
dec
mov
push
outs
xor
ins
mov
push
jmp
call
sub
adc
push
jle
leave
mov
pushw
xor
cmps
out
cwde
stos
arpl
fldenv
pop
(bad)
push
daa
xor
clc
push
adc
movs
sbb
add
out
mov
ins
and
pop
mov
(bad)
repnz
mov
out
test
inc
rcl
inc
and
add
les
pop
mov
rcl
ficom
push
stos
cwde
mov
dec
inc
or
inc
dec
stos
in
test
push
lods
scas
add
push
stos
das
pop
setp
xchg
cmp
dec
movs
mov
cmps
popa
or
xor
dec
test
or
xchg
mov
sbb
fnsetpm(287
aad
xchg
xor
mov
or
stos
je
sbb
imul
pop
or
int3
daa
and
mov
jo
xchg
adc
jp
fs
aas
push
sahf
ins
aad
pop
imul
ja
rcr
in
xchg
lgs
mul
adc
scas
mov
adc
shl
pop
mov
not
jne
movs
cmp
inc
scas
jns
pop
xor
rol
mov
mov
cmp
and
push
mov
mov
inc
dec
jmp
rol
xchg
sub
xchg
addr16
mov
jae
scas
dec
shr
jmp
icebp
into
push
dec
xchg
icebp
cmp
fdivr
cmp
aas
mov
add
fld
pop
data16
cmps
adc
lods
mov
outs
pop
dec
inc
shl
or
push
sahf
leave
jmp
adc
shl
outs
xor
outs
das
inc
leave
cwde
cmp
adc
cdq
mov
xor
(bad)
cmps
jne
in
sub
stos
mov
movs
dec
mov
fcomp
enter
ins
xchg
dec
mov
lds
pop
cmc
push
sbb
cmps
sbb
cmp
adc
jp
and
xor
cmp
push
arpl
add
lods
sbb
cdq
xchg
popa
loope
loope
mov
cmps
aam
jns
loopne
mov
sub
data16
(bad)
mov
add
xor
es
xchg
ror
dec
xchg
mov
mov
mov
leave
pop
dec
inc
jg
lods
or
mov
jmp
aas
adc
in
aas
jmp
in
xor
mov
leave
jnp
test
popa
out
daa
push
add
mov
or
mov
ret
or
add
xchg
or
add
aaa
ins
xchg
(bad)
aaa
pop
push
mov
arpl
jmp
rcr
lods
stos
or
mov
push
dec
push
xchg
test
ds
(bad)
clc
(bad)
retf
(bad)
std
out
into
jns
aad
cmp
adc
jno
cmp
test
pusha
and
mov
das
cmps
sahf
adc
add
int
and
repnz
test
push
fild
pop
out
aam
pop
inc
stc
mov
mov
inc
add
or
jge
xor
xchg
mov
jp
mov
add
mov
test
test
mov
adc
into
dec
push
add
inc
movs
sub
lods
adc
cmp
push
inc
lds
test
push
sar
push
mov
jo
imul
aad
add
and
rol
iret
(bad)
out
repnz
inc
fwait
dec
jmp
jle
mov
jnp
fs
push
mov
dec
clc
add
bound
mov
cmp
mov
pop
jae
mov
xchg
test
fidivr
jns
push
xchg
mov
sub
or
pushf
stc
pop
push
push
sbb
xchg
das
lea
push
in
xor
ror
ror
dec
das
mov
adc
cmc
xor
push
inc
clc
mov
jl
shl
inc
leave
(bad)
les
add
push
clc
push
lahf
popa
xchg
int
push
(bad)
ins
xchg
sbb
add
ss
and
pusha
retf
push
imul
jmp
sub
mov
dec
mov
pop
or
dec
mov
aam
jl
or
addr16
sub
xlat
mov
mov
mov
and
cmp
mov
ins
and
(bad)
sbb
cmp
repnz
xchg
mov
jl
shl
xchg
imul
std
scas
pop
mov
cmp
jg
add
retf
push
push
push
arpl
fstp
push
sbb
inc
pop
jge
inc
jae
test
xchg
mov
fwait
add
push
ror
mov
xchg
fwait
pop
les
push
mov
sbb
lea
fcom
dec
test
jmp
addr16
mov
push
and
fucomi
pop
xchg
pusha
or
cli
push
(bad)
in
inc
movs
popa
pop
fld
sbb
je
retf
push
inc
repz
inc
imul
(bad)
cmc
outs
cmp
or
and
mov
loope
repnz
addps
ds
pop
push
aas
cmp
jge
pop
enter
arpl
xrelease
js
call
sti
pop
ins
out
mul
scas
jo
iret
test
mul
mov
stos
dec
pop
gs
adc
adc
dec
inc
dec
pop
je
ins
int
and
enter
and
popa
aaa
cli
clc
xor
lods
sub
dec
sbb
push
push
pop
outs
pop
icebp
enter
arpl
clc
imul
mov
cmc
push
lea
xchg
pop
call
push
nop
outs
push
test
out
xor
mov
push
enter
ror
stos
ins
loope
push
pushf
jl
test
dec
mov
loopne
in
stos
dec
adc
les
or
push
aad
mov
outs
(bad)
and
jge
sbb
daa
mov
and
les
ins
ins
jno
mov
lods
popf
add
daa
mov
pop
xchg
mov
mov
shr
pusha
push
mov
movs
add
mov
dec
pop
jae
pop
jb
cmps
xor
ins
data16
xor
out
loop
mov
cmp
retf
stos
mov
sbb
xchg
pop
movs
push
pushf
pop
fs
jno
inc
xor
mov
cmp
sbb
adc
push
and
nop
mov
fbld
scas
xor
xlat
mov
push
aam
xor
sub
cmp
xchg
sub
sub
jp
jo
pop
popa
push
pop
or
add
pop
ins
inc
xor
movs
inc
xor
(bad)
sub
mov
jge
push
call
sbb
idiv
and
cdq
(bad)
cmps
out
jecxz
div
mov
cmp
outs
jecxz
inc
sub
mov
add
fst
lock
cld
push
retf
or
sub
xchg
jle
movs
idiv
xchg
xor
in
leave
pop
int
sbb
(bad)
lds
xor
test
rcr
cld
mov
sbb
(bad)
int
push
outs
push
sti
icebp
mov
inc
gs
nop
(bad)
ret
mov
cmp
mov
pop
sahf
or
setp
push
sahf
or
cdq
push
js
push
xchg
jg
add
add
inc
and
mov
aas
dec
push
and
pop
dec
mov
fs
mov
in
mov
imul
pop
pop
push
jle
and
test
fisttp
or
xlat
jp
ss
or
mov
jle
stos
ja
pop
or
hlt
add
and
movs
out
sub
push
fsubr
(bad)
loope
mov
cwde
retf
cmps
or
or
sbb
dec
and
push
lock
or
adc
push
lahf
and
cld
push
xor
mul
es
imul
push
aam
mov
add
movs
scas
outs
push
loope
icebp
dec
call
push
popf
cli
jb
jl
int3
xchg
jg
fcomp
dec
fimul
outs
cmp
cdq
sbb
pusha
fistp
in
adc
ss
push
scas
cmps
push
lock
push
inc
scas
pop
mov
stos
out
mov
(bad)
adc
jne
sar
(bad)
push
test
ret
xchg
mov
cwde
shr
xor
adc
or
pop
adc
inc
xor
mov
push
leave
xchg
cbw
or
push
jnp
call
push
sar
mov
mul
fcomp
in
sub
rol
cs
fcmovne
(bad)
cmps
aam
aam
sahf
xchg
int
cmps
je
popf
pop
and
jns
rcr
je
xchg
pop
mov
mov
xor
lods
jns
hlt
jbe
push
out
(bad)
out
sti
sub
sub
addr16
mov
movs
lods
inc
jge
sahf
jmp
sub
jb
aas
jo
adc
pushf
or
or
ficom
inc
in
int
out
mov
popa
sbb
or
das
push
dec
push
stos
imul
or
in
push
sub
push
mov
jns
lods
dec
sbb
retf
imul
shr
inc
adc
test
or
test
shr
aas
adc
int3
fcomp
cwde
and
pop
outs
aam
ja
push
jp
mov
popf
in
xor
fisttp
jne
clc
or
mov
cwde
xchg
cdq
pop
ror
shl
mov
sbb
inc
and
mov
sub
in
push
pop
ds
sub
arpl
add
push
das
jp
push
xor
call
std
add
scas
jb
fistp
in
(bad)
loopne
dec
push
test
in
mov
add
sub
add
mov
jge
adc
sub
cmp
icebp
push
jne
cs
mov
aam
in
push
jae
and
jmp
icebp
or
aam
mov
pop
mov
scas
mov
test
add
cs
inc
pop
repnz
sub
hlt
sbb
jecxz
mov
or
xchg
ds
dec
call
push
sub
mov
(bad)
into
inc
push
add
mov
iret
lea
and
jbe
nop
xchg
pop
adc
mov
sbb
xor
lods
out
or
es
dec
sbb
or
or
cmp
(bad)
aaa
lock
mov
jnp
(bad)
in
sub
shl
bound
retf
and
cmp
cdq
(bad)
jnp
(bad)
jae
(bad)
pop
dec
mov
pop
les
or
cli
mov
(bad)
out
xchg
xchg
fisttp
inc
mov
outs
out
ret
jb
leave
out
aas
lds
ret
int3
test
lods
dec
cmp
fincstp
dec
mov
jo
push
(bad)
sub
sub
mov
(bad)
data16
test
into
or
xchg
fld
xchg
fsubr
les
stos
cwde
cmc
xor
xchg
xchg
pushf
pop
mov
retf
loope
jge
inc
lock
call
adc
mov
ins
push
imul
jno
gs
mov
jl
mov
icebp
xchg
add
or
outs
test
cmp
xor
jp
cmps
push
cmp
aas
stos
sbb
arpl
scas
or
fcom
jg
cmp
mov
push
ja
daa
dec
bound
jb
das
in
mov
pop
cli
pop
dec
xchg
fdivr
into
jmp
fcmovb
adc
pop
outs
or
inc
xchg
frstor
add
dec
sub
push
cmp
jae
adc
mov
xor
and
icebp
jge
cwde
jg
push
data16
or
inc
xchg
cmp
cmp
(bad)
popf
xchg
cmc
mov
xor
mov
imul
push
push
push
jge
pop
ins
ja
mov
popf
xor
xor
sbb
(bad)
outs
xchg
dec
mov
shl
mov
aas
pop
adc
(bad)
push
cld
jge
in
jo
jmp
mov
xor
push
popf
in
cmps
pusha
out
and
adc
push
push
iret
ins
mov
repnz
xchg
das
sub
leave
lods
push
adc
pop
loopne
ds
and
push
aam
ror
bound
neg
sar
imul
push
pop
push
mov
jmp
jno
aad
je
mov
cmc
(bad)
popa
sbb
test
aad
(bad)
and
stc
out
fs
(bad)
xchg
jo
mov
adc
xchg
test
pop
sub
(bad)
loope
sub
sbb
jne
cmc
aas
(bad)
dec
test
ds
(bad)
inc
pop
push
cwde
stos
cmp
lahf
fnstsw
jae
mov
and
loop
into
test
mov
retfw
cdq
add
xchg
popf
ds
fadd
fnstcw
mov
mov
xchg
mov
repnz
ja
pop
mov
pop
pusha
xor
xor
dec
xchg
pop
inc
pop
inc
push
jno
std
jo
imul
cmp
(bad)
popf
pop
add
int3
out
in
dec
pop
adc
mov
mov
outs
aam
xchg
mov
mov
sbb
xchg
call
inc
add
pusha
loopne
cmp
jns
mov
jg
sub
push
or
and
jbe
cmps
aas
movs
jecxz
sbb
faddp
aam
mov
data16
sbb
cld
inc
mov
sar
mov
hlt
icebp
lods
ror
gs
cmp
or
xchg
inc
push
daa
sub
(bad)
mov
(bad)
sub
pop
jecxz
pop
in
pop
mov
imul
cwde
int3
into
lods
pop
or
add
div
retf
dec
sbb
jmp
mov
jl
jne
adc
mov
cmps
xchg
or
dec
(bad)
int
xchg
fidivr
(bad)
and
mov
fs
add
push
mov
(bad)
xor
in
clc
inc
cmc
push
jge
mov
jo
stc
fbld
test
pop
dec
mov
pop
inc
ror
dec
out
dec
lock
mov
in
push
xchg
std
(bad)
sub
pop
sbb
or
loopne
div
mov
push
push
aam
ins
xor
adc
cmps
push
fisubr
sub
test
popf
mov
xlat
faddp
mov
adc
xor
hlt
jl
push
cmp
xor
push
jl
std
lods
jno
mov
jmp
lds
sbb
xlat
push
test
pop
push
sbb
rcl
fcmovnb
xchg
outs
int3
xchg
test
pop
jmp
fs
pop
call
(bad)
lds
adc
loopne
and
mov
in
and
pop
mov
xor
ret
push
mov
pop
ins
and
sub
out
adc
inc
sahf
mov
ds
mul
fsubr
pop
jb
mov
xchg
jp
call
cmp
mov
ins
push
ja
call
push
mov
int
add
pop
js
scas
mov
pop
outs
pushf
loop
dec
jmp
sbb
sub
das
retf
sub
shl
popf
xor
add
sahf
sar
mov
popa
fdiv
mov
cmp
add
imul
sbb
aad
mov
inc
xor
ficom
in
add
mov
xlat
jg
dec
and
xchg
call
pop
xchg
fcom
and
mov
mov
xchg
test
in
les
jp
jae
movs
adc
cli
aad
cdq
test
fisubr
xor
dec
and
and
aad
test
loope
mov
xchg
rcr
mov
dec
sbb
jl
adc
adc
pop
stos
aam
mov
(bad)
mov
xchg
sti
inc
add
retf
imul
ss
out
push
scas
mul
(bad)
or
ror
ss
test
add
shl
or
jno
mov
pmulhw
cmp
retf
pushf
xchg
or
mov
rcr
inc
stos
inc
retf
jmp
jp
jecxz
sti
das
push
sar
mov
or
pop
aam
cwde
mov
bound
mov
scas
inc
fimul
test
mov
(bad)
test
push
test
or
faddp
jecxz
fcmovbe
mov
xor
outs
pop
ror
rol
fisub
in
js
cmps
ror
xchg
fld
jo
jmp
push
cld
xchg
aam
dec
jae
inc
pop
iret
or
cmp
shr
lods
mov
retf
mov
movs
sub
neg
int
xor
imul
les
aad
pop
pop
les
dec
cli
loopne
(bad)
pop
aas
call
mov
mov
and
push
shl
adc
pop
imul
jnp
mov
in
xor
add
imul
lods
addr16
js
jno
mov
ins
ret
imul
mov
fnstcw
jge
enter
push
adc
or
mov
mov
xor
push
or
adc
cmp
pop
mov
ins
and
mov
fsubr
loop
into
xchg
jae
sbb
clc
xchg
mul
cmps
add
sbb
or
cli
mov
(bad)
fild
cmp
in
mov
mov
push
aaa
or
add
lea
dec
test
or
sti
rcr
sub
or
adc
cld
addr16
sub
stos
cmp
retf
movs
fidiv
xor
mov
inc
mov
in
popf
xor
and
mov
je
mov
je
cmp
push
dec
or
ret
mov
sub
sub
test
mov
push
and
repnz
dec
ds
daa
sar
shl
enter
cmp
mov
(bad)
pop
cmps
fcom
xchg
mov
mov
rol
cmp
loope
enter
ror
jo
jmp
add
mov
dec
ret
pop
sbb
mov
dec
xchg
imul
dec
dec
pop
mov
gs
imul
cmps
cmps
xchg
push
in
bound
call
push
xchg
jae
jp
int
adc
xor
repnz
les
jae
push
xchg
push
sbb
dec
dec
xor
mov
pop
xor
adc
aam
push
stos
push
jle
pusha
jmp
fldenv
(bad)
mov
imul
fistp
je
fwait
scas
ins
imul
rol
fmul
bound
adc
rol
dec
stos
mov
cmps
xor
cmps
and
dec
aaa
lods
ins
dec
int
pop
sub
lods
ja
je
or
mov
(bad)
aad
mov
sbb
popf
mov
xchg
int
cmps
xor
outs
mov
mov
adc
(bad)
cmps
call
or
push
inc
sub
mov
mov
int
push
dec
inc
xchg
repnz
retf
sbb
add
cs
sahf
jae
cmp
pop
pop
jno
mov
retf
dec
repnz
push
shl
call
xor
dec
cmps
ins
lods
adc
dec
jnp
shr
imul
rcr
test
mov
movs
icebp
pop
or
inc
sbb
mov
fst
in
lahf
(bad)
inc
xor
movs
or
in
jle
in
les
push
gs
push
(bad)
cli
in
ret
mov
cmp
and
mov
adc
int3
test
mov
addr16
mov
and
mov
ficom
add
or
adc
xor
test
pop
out
retf
ins
fsubr
pop
pop
push
push
push
inc
mov
sub
int
test
or
jno
scas
ds
xlat
imul
cmp
mov
stos
pop
dec
jecxz
sub
lock
jne
jge
or
sbb
cmp
jmp
cld
push
in
or
and
(bad)
lahf
inc
xor
movd
lock
lods
fidiv
add
rcl
arpl
hlt
jo
lods
imul
ins
mov
lods
dec
sub
push
mov
and
(bad)
dec
and
dec
jge
leave
mov
pop
pusha
js
int3
jnp
sbb
adc
add
jmp
cmps
addr16
xchg
adc
and
pushf
adc
aam
outs
jnp
icebp
add
xor
sbb
fsub
std
stos
addr16
push
sar
fld
call
or
sub
gs
add
enter
xchg
mov
(bad)
push
mov
mov
jne
mov
int
mov
cmp
es
stos
icebp
pop
sar
dec
mov
imul
pop
mov
add
xor
scas
in
xor
mov
sbb
popa
iret
ja
outs
fisubr
dec
adc
sub
or
data16
bound
xor
stos
sbb
mov
shl
xchg
lods
sbb
stc
push
clc
mov
pop
pop
int3
mov
repnz
mov
sbb
ret
ds
adc
inc
mov
cmp
pop
js
mov
cmp
push
mov
jbe
test
aam
je
rcl
imul
nop
pop
mov
movs
or
pop
out
outs
mov
and
pusha
enter
enter
arpl
push
cmps
pushf
jecxz
in
push
sbb
cmps
sbb
cli
jmp
std
mov
mov
xor
popf
mov
loopne
aam
pop
push
test
xchg
aad
jmp
icebp
mov
stos
sahf
lahf
xlat
lods
xor
mov
mov
or
loope
and
dec
jne
and
fwait
jns
xchg
bound
push
jl
or
enter
push
ins
lock
jne
pop
jne
sub
mov
loop
jg
in
push
aad
call
push
cld
mov
aaa
add
loope
shl
arpl
and
je
dec
mov
shl
nop
cmps
loopne
stos
pop
lods
mov
clc
cmp
adc
aad
add
pop
lahf
out
data16
dec
push
ret
sahf
mov
lahf
sbb
enter
xchg
out
mov
mov
sbb
inc
inc
fsubr
pusha
dec
mov
jno
and
mov
or
or
add
pop
xchg
es
and
lahf
stc
and
push
pop
out
jg
add
rcr
movs
imul
jmp
cmp
loopne
sti
rcr
les
dec
or
hlt
jge
out
cmp
sub
push
mov
push
fld
or
mov
mov
fld
cmps
fucomip
pop
in
mov
shl
cmps
mov
hlt
movs
mov
jae
fidiv
or
pop
jecxz
lea
shl
dec
dec
pushf
cmp
fild
cld
ret
jae
inc
retf
fimul
sub
fdivr
and
inc
sub
repnz
pop
into
nop
adc
inc
or
movs
lds
ss
fwait
adc
in
push
adc
adc
fs
cmp
into
xchg
clc
add
das
lds
mov
js
lods
stos
adc
adc
push
add
and
and
cmp
mov
sbb
mov
add
mov
cwde
aas
enter
mov
sub
sbb
sbb
cs
jmp
pop
push
and
jne
repnz
fcomp
sub
icebp
xchg
fild
push
dec
push
mov
ret
daa
inc
cmp
stos
push
xchg
test
pop
lods
movs
xchg
shl
add
inc
push
jo
sub
xchg
push
push
rol
scas
frstor
mov
cdq
ret
push
fwait
pop
(bad)
or
fmul
pop
retf
dec
sar
cmp
mov
adc
add
loop
mov
mov
ins
(bad)
pop
arpl
out
adc
sub
neg
sahf
ins
jg
add
mov
retf
bound
adc
adc
dec
fwait
inc
pushf
pop
out
in
xchg
cmp
cmp
or
jbe
jb
push
xor
in
mov
and
loop
(bad)
xchg
repz
jecxz
daa
scas
inc
call
fistp
dec
lds
push
int
sub
call
mov
pop
std
adc
jmp
(bad)
ficomp
lds
test
xchg
imul
push
daa
sub
loope
mov
add
lds
sub
cmp
xchg
fmul
sbb
inc
add
shr
adc
mov
out
add
and
pop
jne
inc
cmps
das
jnp
test
pop
mov
aaa
sbb
push
jmp
fstp
adc
pop
and
cmp
cmps
mov
xchg
dec
cwde
(bad)
mov
pop
and
imul
push
ds
in
(bad)
(bad)
jmp
imul
push
jb
sub
mov
push
test
repz
loope
loop
jnp
mov
ins
aam
cmp
test
clc
cmp
and
ss
clc
sub
repz
mov
loop
in
test
loop
inc
inc
or
jne
mov
jbe
adc
cli
cmp
mov
adc
pop
dec
aad
xchg
sar
ret
xor
xchg
les
xchg
imul
sti
fisub
push
and
cld
xchg
outs
outs
in
clc
(bad)
shr
stc
mov
arpl
hlt
rcr
mov
les
mul
dec
xchg
outs
and
leave
sti
pop
jge
mov
bound
sub
les
(bad)
popf
or
sub
jmp
xor
mov
inc
sub
mov
or
sub
pusha
mov
in
sub
push
mov
ret
leave
adc
bound
mov
int
ret
out
aas
data16
mov
lods
lahf
mov
mov
xor
neg
mov
loop
jmp
add
sub
inc
shl
push
loopne
xchg
pop
enter
retf
mov
inc
imul
(bad)
aas
loop
push
sbb
fcom
arpl
pop
mov
mov
add
add
push
into
dec
ins
fwait
and
js
mov
repz
push
sbb
das
jne
mov
clc
fstp
sbb
dec
mov
adc
ret
ins
cmp
xchg
loop
(bad)
sbb
js
pop
test
adc
jo
dec
call
xor
push
outs
cmp
pop
call
sub
cmp
mov
and
dec
addr16
rcr
xor
stc
mov
xor
cld
mov
sbb
aad
ror
out
lods
mov
sar
cdq
(bad)
push
cmp
xchg
rcl
fnstcw
xchg
mov
mov
add
jno
loope
mov
and
repz
adc
js
xchg
popa
xchg
mov
ret
sbb
add
ds
jmp
sbb
stc
ins
adc
push
jmp
cli
or
inc
stos
movs
cmc
pop
hlt
push
mov
mov
add
lods
sub
push
out
scas
or
pusha
scas
mov
add
sub
add
dec
jns
or
dec
(bad)
jecxz
fs
bound
push
jns
add
adc
pushf
and
dec
jmp
das
test
aam
fmul
mov
adc
rcl
sub
mov
sbb
sbb
and
mov
out
mov
add
sar
mov
dec
movs
or
or
imul
jge
das
fst
pop
add
in
in
cs
mov
shr
in
fs
leave
imul
cmps
and
mov
jge
mov
int
or
fcomi
ins
adc
(bad)
fcomp
sub
pop
ss
add
xchg
and
push
cdq
in
mov
inc
push
(bad)
sub
iret
push
fnstenv
xchg
cmp
add
push
imul
dec
xor
inc
xchg
ds
ror
jge
jmp
jge
pushf
arpl
mov
add
cmp
push
sub
fisubr
pop
outs
jae
iret
aas
dec
(bad)
in
lds
mov
test
retf
jg
cli
adc
mov
inc
ss
jmp
movs
jb
inc
out
mov
or
mov
in
jmp
ficomp
adc
call
adc
xor
in
sub
aam
xchg
add
aaa
xchg
(bad)
dec
inc
or
inc
jge
iret
mov
cdq
xor
adc
jge
gs
push
fadd
out
bound
add
push
pop
pop
and
or
inc
hlt
adc
push
jbe
pop
adc
cs
jbe
lock
and
fcomp
js
mov
aam
mov
arpl
in
pop
mov
mov
sbb
jecxz
in
leave
jns
pop
adc
inc
sub
bound
ror
push
cli
cmc
clc
pusha
rcl
out
out
loopne
outs
mov
sbb
add
and
pop
push
in
daa
xchg
sbb
inc
rcl
mov
xchg
iret
mov
push
jno
loop
lock
mov
inc
ja
(bad)
xlat
clc
mov
ja
rcr
std
jecxz
ret
jbe
pop
aas
retf
cmp
mov
cmps
cmp
imul
cmp
sbb
jmp
pop
mov
push
imul
in
icebp
inc
dec
adc
mov
movs
or
shl
mov
mov
fcomp
jmp
or
mov
jmp
and
sub
shl
mov
dec
in
push
shl
or
adc
adc
inc
cmc
adc
xor
in
rdmsr
add
out
xchg
aad
cmp
push
jnp
retf
std
ds
das
jbe
cs
movs
xor
adc
js
inc
frstpm(287
mov
out
jg
dec
stos
scas
mov
out
retf
rcr
or
out
mov
cs
sahf
mov
pop
rol
test
daa
enter
sub
sub
cs
mov
jg
sbb
inc
inc
xchg
xchg
inc
(bad)
ja
xchg
fwait
push
lds
add
pusha
sbb
add
and
xor
hlt
je
xchg
jo
dec
loop
jbe
popa
in
xor
icebp
dec
mov
and
push
cmps
inc
xchg
ret
mov
xchg
lods
shr
mul
add
nop
mov
mov
sbb
xchg
push
fst
mov
dec
cwde
in
cmp
mov
pop
and
outs
outs
xchg
push
and
std
sar
mov
rcr
pop
ins
xlat
movs
push
inc
cmp
pop
mov
cld
int3
jo
movs
shl
imul
loope
jne
pusha
jb
mov
sti
xchg
arpl
pop
jnp
dec
sub
rcr
movs
sar
push
sbb
jmp
pop
pop
bound
mov
movs
mov
cmp
adc
int
les
call
jmp
inc
push
mov
inc
ret
stos
and
scas
pop
jo
arpl
xchg
dec
push
scas
mov
and
cmps
jle
inc
aas
fst
jge
cmp
imul
dec
inc
out
cmp
pop
adc
test
in
push
cmp
pop
in
mov
dec
sbb
sbb
pop
mov
out
jae
into
xchg
arpl
imul
call
sbb
scas
sbb
out
sub
xchg
adc
or
pop
sbb
hlt
mov
push
dec
shl
outs
mov
cmp
aam
sbb
or
or
xor
and
sub
pusha
xchg
push
fiadd
aad
retf
jno
or
loopne
(bad)
ja
mov
(bad)
xlat
aad
mov
fsub
loopne
in
mov
dec
ds
jb
inc
in
jne
mov
dec
jecxz
ret
jecxz
jmp
push
out
mov
mov
jecxz
mov
inc
sbb
mov
push
scas
mov
sbb
cmp
test
call
pop
js
xor
fistp
call
mov
xchg
jge
adc
mov
and
fstp
cwde
jle
inc
es
jno
lahf
jbe
jge
mov
adc
test
mov
or
mov
mul
pop
leave
xchg
int3
cmc
mov
jno
cmp
mov
loop
pop
and
(bad)
popa
xchg
mov
sar
imul
cs
cmc
pop
shr
pop
shl
cmp
xor
shr
pop
sub
ds
jp
mov
cdq
inc
aaa
xor
xor
lea
inc
dec
fild
mov
and
pop
(bad)
and
push
idiv
or
cli
cmp
cmp
adc
stos
mov
adc
sbb
ds
inc
push
lods
mov
dec
mov
xchg
jnp
nop
adc
fnstsw
jp
out
iret
inc
adc
pop
ja
adc
aas
ins
mov
and
pop
mov
mov
in
cdq
pop
inc
mov
fsub
cmp
sub
(bad)
push
fnstenv
retf
add
jbe
pop
lahf
xchg
mov
push
ds
jmp
(bad)
xlat
sbb
mov
pop
mov
leave
les
leave
jl
mov
pop
or
xchg
cmp
repz
push
out
mov
jge
inc
popf
ret
dec
fwait
cmp
dec
inc
lock
pop
jae
stc
pop
pop
aaa
mov
in
sub
push
(bad)
stc
imul
push
fsubr
movs
out
je
mov
mov
sbb
mov
fwait
push
push
adc
popa
mov
xor
(bad)
call
repnz
or
jmp
lods
xor
mov
loope
xchg
cmp
cld
or
ds
retf
test
stos
inc
mov
dec
or
ret
lea
pop
jbe
nop
sbb
or
sbb
or
jns
sbb
fcomip
adc
retf
idiv
stos
outs
xor
jno
std
aas
(bad)
jg
test
xor
cmps
sbb
ja
adc
sbb
xor
pop
addr16
pop
in
test
push
dec
repz
cli
nop
std
inc
pop
arpl
out
and
daa
pop
pop
mov
stc
in
out
sub
jl
in
push
bnd
mov
test
and
mov
xor
pushf
jns
jecxz
mov
inc
mov
jle
aad
push
sub
inc
xor
and
and
(bad)
push
fdivr
ret
push
xor
xor
mov
mov
pushf
sbb
(bad)
aam
fdivr
xlat
sub
cli
enter
pop
outs
inc
xchg
retf
bound
add
test
iret
int
enter
dec
jle
neg
stc
xchg
dec
loop
imul
push
sahf
movhps
push
popa
cmp
shr
fcom
not
dec
mov
inc
aam
xor
lea
or
push
call
add
and
pop
mov
add
xor
or
mov
push
sub
push
fstp
mov
mov
add
dec
icebp
loop
fs
in
mov
stos
inc
inc
je
dec
stc
jecxz
or
je
pop
hlt
(bad)
loopne
sti
sbb
sar
add
mov
cmps
fwait
lods
pop
lods
mov
out
adc
cmp
aam
jne
stos
xchg
es
in
rcl
das
mov
(bad)
pop
stos
popa
pop
in
movs
scas
inc
fidiv
mov
mov
scas
xor
in
rcl
sbb
sbb
inc
adc
scas
int
xchg
jmp
inc
enter
out
(bad)
sbb
sub
or
mov
jnp
push
test
cli
xchg
jnp
ds
shl
ror
jl
outs
daa
add
test
push
xor
and
(bad)
fnstcw
dec
fidiv
dec
pop
cs
int3
push
daa
(bad)
inc
shl
add
(bad)
mov
adc
test
mov
movs
sbb
sub
popa
es
ins
jbe
dec
cmps
mov
add
sahf
ins
add
arpl
int3
inc
ret
bound
(bad)
push
jno
mov
scas
in
lods
push
popa
cmps
call
daa
push
sahf
xor
add
(bad)
lahf
xchg
jle
mov
test
stc
cmp
jmp
(bad)
fwait
test
push
stc
icebp
stos
in
add
cmp
and
inc
data16
pop
sbb
sar
pop
inc
pop
xchg
xchg
push
mov
clc
shl
pop
out
mov
ss
aam
cld
or
dec
nop
and
scas
cmp
or
shr
adc
xor
ja
or
cmc
jmp
jmp
int
pop
sbb
add
and
fiadd
xchg
retf
push
cdq
pop
das
(bad)
jecxz
push
adc
jnp
adc
and
dec
push
mov
(bad)
adc
data16
lods
cdq
xchg
ret
sbb
jbe
popa
jg
sub
rol
add
jmp
lahf
push
not
div
mov
push
inc
or
mov
xor
repnz
aaa
fidiv
pop
or
mov
jno
push
mov
xor
ret
loopne
mov
mov
int3
xchg
jb
shr
sbb
xchg
fidiv
jp
popa
aaa
mov
mov
push
out
clc
fcom
hlt
gs
(bad)
mov
leave
mov
jb
push
pop
out
xchg
dec
add
ficomp
or
cli
in
daa
out
mov
gs
int3
scas
sbb
cld
inc
push
movs
xchg
mov
fist
mov
rcl
ret
mov
pop
or
jmp
xor
sub
xchg
cmp
test
stc
(bad)
add
cmp
mov
push
icebp
fs
mov
aam
push
in
stos
dec
xor
xchg
xchg
jmp
(bad)
push
cmp
out
enter
out
stos
mov
stos
sar
or
out
push
ins
jb
mov
cmc
jb
(bad)
and
test
test
pop
jmp
push
pop
repnz
inc
out
out
xor
in
mov
pushf
mov
fsubr
and
into
and
adc
lods
imul
xor
sub
ror
and
sub
cmc
cmp
cwde
(bad)
call
pop
mov
test
dec
outs
or
push
int3
cmp
push
loopne
popf
lea
mov
stc
lahf
fild
adc
dec
fld
jnp
fdivr
or
sahf
sbb
cli
loop
fldenv
lahf
lahf
mov
inc
aad
test
mov
cmp
aas
int3
cmp
int
adc
data16
lahf
mov
ss
and
mov
cmp
pop
cmp
out
aam
xchg
leave
mov
sub
adc
ss
popa
push
adc
hlt
imul
fdiv
aad
xlat
add
xchg
mov
or
cmp
or
cld
push
jmp
push
(bad)
add
test
ret
les
sub
xchg
call
call
mov
sbb
dec
je
cwde
icebp
adc
inc
stc
int3
stos
js
mov
or
dec
das
inc
int3
push
call
cld
cmp
shr
in
test
jae
push
cs
daa
push
hlt
pop
test
into
jl
hlt
popa
jbe
(bad)
fwait
dec
daa
xchg
clc
push
sbb
jo
inc
data16
(bad)
cld
in
and
mov
retf
xor
sub
cmp
(bad)
pop
mov
(bad)
leave
adc
sbb
pop
mov
icebp
or
sub
test
cwde
pop
push
(bad)
jne
inc
add
jmp
test
cmp
and
popf
and
pop
add
sahf
out
mov
(bad)
(bad)
sub
rcl
ja
or
mov
jnp
xchg
inc
stos
and
mov
fmulp
repz
mov
ja
test
jno
loopne
loop
pop
dec
or
loop
cld
popa
pop
cmp
jo
pop
jmp
xchg
mov
call
pop
fabs
and
hlt
scas
mov
jle
mov
jns
(bad)
sub
movs
mov
fisubr
daa
mov
lahf
rcl
rcr
rcl
xchg
(bad)
cmp
je
adc
test
cmp
rcl
ins
cmp
aam
jno
mov
xor
mov
mov
adc
pop
jae
mov
jmp
push
test
test
push
sti
mov
inc
pop
cmc
mov
or
xchg
clc
shl
sahf
adc
adc
nop
movs
repnz
mov
outs
or
xchg
add
mov
mov
sti
sub
xchg
jmp
shr
out
inc
cmps
sub
sahf
imul
jae
sahf
adc
mov
inc
mov
sub
fcmovbe
sbb
lock
jmp
fild
(bad)
sbb
fidiv
iret
jmp
inc
das
mov
push
pop
(bad)
cmp
adc
icebp
mov
out
scas
mov
iret
pop
not
jg
(bad)
jecxz
stos
inc
cmp
loop
pushf
rcl
shl
(bad)
fcomp
mov
das
pop
sbb
stc
push
icebp
xchg
test
loopne
sahf
sub
aam
pop
ret
daa
jmp
push
or
or
sub
and
dec
jnp
iret
mov
dec
and
push
imul
pop
retf
xor
jmp
out
js
and
fiadd
into
std
lods
cmp
push
inc
fcom
jno
mov
ss
fwait
into
pop
ja
pop
shl
xchg
es
retf
add
lea
in
jp
imul
loop
inc
xchg
(bad)
mov
jb
test
and
xchg
lods
repz
les
jmp
and
lods
in
pop
pop
add
bound
in
jae
das
addr16
int3
dec
inc
inc
ds
xchg
dec
imul
test
(bad)
adc
daa
mov
and
or
data16
dec
mov
addr16
mov
neg
and
sbb
jns
inc
retf
ins
sub
adc
mov
sub
sbb
inc
(bad)
ror
mov
and
aam
sbb
inc
lods
cmps
pop
scas
mov
test
pop
leave
retf
xchg
scas
add
push
xor
mov
test
and
mov
jb
push
ja
inc
push
jnp
lock
xchg
imul
fstp
xor
or
push
adc
fstp
movs
aad
mov
shr
les
clc
xchg
xor
icebp
lods
dec
adc
cmp
retf
repnz
fcmovnbe
inc
sub
push
out
aam
stos
aad
push
mov
rcl
inc
neg
call
push
retf
and
ret
xchg
push
sbb
mov
push
rcr
stos
nop
jl
(bad)
push
in
mov
nop
sub
mov
es
xchg
in
data16
pop
and
pop
fcomi
retf
gs
popf
repz
int3
jns
jecxz
cmps
sbb
in
and
fnstcw
adc
ror
ins
and
or
xor
sar
pop
rol
adc
sub
dec
and
das
cmps
sbb
out
push
out
cld
into
and
jnp
iret
push
ret
push
test
jmp
cmp
dec
nop
neg
jecxz
adc
xor
retf
neg
loope
test
ins
or
nop
xchg
sbb
mov
popa
and
repnz
scas
fsub
movs
xchg
call
and
loopne
push
jp
jne
out
add
icebp
and
not
xor
fmul
in
mov
inc
and
and
push
jne
outs
sbb
sub
in
jmp
cs
dec
jp
lahf
fs
inc
cmp
pusha
arpl
or
(bad)
dec
shl
ror
push
outs
rol
sti
push
xor
cmp
lea
sub
inc
pop
xor
mov
(bad)
dec
mov
lea
and
ja
shl
sar
xchg
xchg
cmp
scas
stc
xchg
stos
and
outs
and
(bad)
std
in
jne
push
cmc
xor
xchg
or
test
ret
and
int
add
call
jge
test
push
add
xchg
mov
and
sbb
aaa
fadd
jmp
icebp
adc
cmps
outs
jae
jg
xor
stos
push
std
in
jecxz
sahf
xchg
sub
aam
inc
mov
xor
cli
mov
rol
pop
outs
add
cld
clc
test
mov
call
repz
adc
and
xchg
dec
gs
sbb
fstp
loop
mov
xchg
mov
xor
test
sbb
mov
and
es
jno
xor
mov
inc
inc
and
out
inc
aam
push
(bad)
mov
push
(bad)
inc
in
(bad)
nop
ror
adc
and
push
and
xchg
mov
lock
push
cmp
dec
mov
aas
stos
dec
and
or
shr
mov
sbb
jnp
mov
adc
cli
mov
dec
ret
call
xor
pop
mov
sub
and
pop
add
jne
and
ret
popa
or
sub
jo
ins
xchg
cdq
jmp
jmp
pushf
shl
aaa
data16
add
xchg
mov
sub
popf
scas
shl
xchg
in
popa
loop
mov
mov
adc
add
test
ja
xor
mov
lds
loop
mov
int
or
outs
(bad)
loopne
cmps
pop
mov
nop
div
xor
or
cmp
ds
pop
dec
jbe
scas
xor
xlat
arpl
push
outs
push
pop
cli
mov
gs
(bad)
sub
pop
xchg
mov
jno
mov
loop
fdivrp
mov
adc
icebp
dec
imul
mov
cdq
in
jbe
pop
enter
sti
and
lods
pop
mov
jbe
out
sub
cli
mov
mov
add
xchg
inc
cmps
nop
or
in
pop
stos
cs
popf
dec
jnp
xor
mov
xchg
sub
imul
push
ins
clc
fcmove
push
xor
shr
frstor
cmp
sbb
idiv
aam
movs
jl
pop
sub
sbb
icebp
push
fwait
data16
sub
stos
ins
lahf
sbb
in
(bad)
mov
cmc
or
jns
sub
mov
das
pusha
xchg
cmps
ds
outs
jg
jns
ins
and
cwde
pop
ins
jb
dec
pop
sti
ret
xor
cmp
inc
test
movs
cli
dec
imul
ins
push
cdq
pop
(bad)
lds
mov
sbb
fcmovbe
cmp
push
into
pop
mov
(bad)
jo
mov
retf
jecxz
xor
fadd
xchg
cdq
dec
mov
mov
sti
jmp
sub
xchg
and
or
mov
cmps
push
std
mov
nop
inc
mov
adc
les
cmp
in
adc
js
jp
and
cwde
add
arpl
outs
pop
jmp
jae
lods
mov
lock
test
fist
sbb
std
and
movs
or
cmp
cmp
cmp
add
ins
adc
out
(bad)
(bad)
mov
lock
ins
mov
ins
int3
cdq
inc
not
int
pop
cs
int
push
into
repz
dec
in
mov
movs
pop
cmp
push
or
lock
and
mov
pop
in
or
movs
xor
addr16
dec
call
mov
pusha
or
cs
mov
push
cmp
test
dec
and
mov
mov
sbb
xor
rcl
test
stc
sbb
sub
xchg
adc
add
pop
jmp
imul
inc
imul
sub
(bad)
(bad)
fadd
ins
xchg
icebp
pop
mov
cs
repz
xchg
xor
mov
loop
add
jp
sub
xor
in
jae
mov
(bad)
mov
sbb
xchg
jae
imul
jo
adc
mov
xchg
call
mov
out
sub
nop
push
fucom
xchg
loopne
add
arpl
sti
xor
retf
cli
cmps
mov
inc
cmp
adc
fsub
xchg
leave
sub
add
or
jb
jnp
dec
sahf
dec
xchg
(bad)
push
pop
(bad)
jp
je
into
call
repnz
xchg
cmp
push
imul
sub
push
add
sahf
cmp
xchg
or
cmp
inc
sbb
mov
in
daa
sbb
mov
aaa
cwde
xchg
sub
outs
loopne
push
jb
add
xchg
ret
leave
jo
jge
add
outs
in
pop
or
xor
or
mov
repnz
(bad)
or
mov
dec
aas
cmc
btr
mov
enter
scas
mov
xchg
shr
fbld
dec
xor
inc
fstp
data16
call
retf
fwait
mov
cld
in
enter
shl
neg
fs
xlat
out
test
dec
jno
mov
sti
push
lahf
clc
inc
movs
fidivr
inc
out
and
ds
(bad)
retf
pop
or
pop
lahf
pop
call
fwait
xchg
es
inc
add
and
mov
mov
lock
xchg
mov
int
loop
int3
pop
and
push
jns
jg
js
xchg
adc
add
out
xchg
mov
popf
daa
pop
out
pop
ins
push
out
jmp
ja
pushf
mov
mov
xchg
xlat
ficom
jbe
and
aaa
mov
cmp
call
data16
lahf
dec
jle
cmps
dec
mov
jno
mov
jmp
mov
cmc
xchg
sar
jmp
sub
imul
pop
jp
and
mov
sbb
lds
sbb
(bad)
out
mov
inc
mov
imul
mov
movs
jae
ror
movs
shl
mov
mov
inc
cwde
out
sub
sbb
mov
fwait
shl
rcl
mov
stos
test
ret
fdivr
shl
sub
(bad)
movs
rol
scas
pop
clc
mov
(bad)
jl
int3
lods
ret
stos
retf
js
add
retf
scas
jns
popf
add
cmp
into
int3
ja
inc
in
pop
cmps
sub
sub
test
in
in
mov
jge
fmul
in
dec
call
fisttp
in
(bad)
jge
cwde
or
mov
mov
mov
xchg
pop
jno
sbb
neg
das
xor
and
cmps
cli
pop
out
repnz
sub
mov
into
cdq
fsub
ror
xchg
mov
pop
sub
ins
fs
mov
pop
call
adc
mov
retf
mov
and
push
pop
sti
mov
mov
aad
dec
pop
dec
(bad)
and
xchg
add
jae
test
pop
jl
les
inc
adc
add
ins
mov
or
clc
jmp
adc
cmps
repz
pop
pop
jmp
not
or
adc
and
mov
scas
in
rol
jecxz
fmul
cli
mov
int
lea
push
sbb
aaa
jae
loope
mov
ja
cdq
ins
and
neg
xor
jae
mov
pop
jmp
daa
rcr
dec
inc
jle
dec
jl
out
(bad)
push
ror
adc
fsubp
adc
push
outs
pop
and
test
jb
nop
fnstsw
ret
jge
add
(bad)
out
pop
cmp
xchg
xor
outs
retf
add
mov
jo
into
imul
sbb
jno
xor
mov
add
cmps
cmc
adc
cdq
pusha
arpl
mov
je
int
jb
pop
add
bound
pop
push
or
sub
ss
jecxz
push
leave
test
inc
xchg
(bad)
arpl
push
scas
in
or
mov
jae
cdq
push
inc
aam
repz
add
and
fldcw
mov
xchg
clc
imul
push
ffree
iret
xchg
inc
mov
pop
push
in
into
loopne
call
cli
sub
and
scas
jg
push
dec
mov
loope
or
test
add
std
jp
cli
in
push
dec
pop
inc
(bad)
mov
data16
push
push
test
sbb
mov
loope
mov
call
pusha
sti
aaa
std
ins
push
aad
in
imul
mov
icebp
fs
js
xchg
loopne
jmp
mov
inc
scas
jo
inc
sbb
inc
or
adc
sahf
inc
pop
xchg
test
and
xor
enter
popa
mov
pop
dec
sbb
pop
int3
sbb
imul
xor
jp
push
and
sub
dec
(bad)
std
push
sub
test
cmc
sbb
mov
cmp
not
ret
xchg
sub
push
pop
iret
daa
int
lahf
mov
add
pushf
(bad)
es
sub
dec
out
shr
inc
in
hlt
inc
hlt
(bad)
in
push
and
ret
xor
sub
js
cmc
ss
jae
lahf
sahf
cmc
jl
enter
call
push
stos
aaa
fcmovnbe
inc
pop
xor
hlt
pop
jns
pop
nop
and
add
shl
cmps
cld
lock
inc
jl
fs
cmp
xor
cmp
sub
outs
or
into
aas
cli
sub
jno
aad
pop
or
cmp
inc
mov
or
cmc
or
and
stos
cwde
jle
push
call
lods
(bad)
(bad)
pop
fisub
xor
ins
sub
lahf
movs
sub
and
jmp
ds
mov
mov
outs
and
jae
inc
adc
xchg
(bad)
ds
push
ret
dec
shr
push
push
je
add
cdq
(bad)
lds
call
pop
ja
dec
cmp
rep
or
add
jmp
pop
test
cs
sub
loopne
(bad)
mov
arpl
(bad)
mov
outs
xchg
arpl
mov
xor
xchg
jo
jno
js
inc
mov
xchg
pusha
xchg
daa
dec
cld
mov
cwde
and
gs
mov
(bad)
adc
stos
sbb
(bad)
pop
lods
cdq
sub
jbe
and
int3
push
fld
push
dec
dec
cmps
je
enter
iret
xchg
popa
adc
xor
sbb
push
lods
ret
jecxz
fisttp
js
cmp
mov
data16
pop
into
retf
mov
jge
ja
pop
or
stc
aaa
pop
hlt
cmp
dec
sbb
aas
mov
xchg
cdq
mov
or
mov
add
loopne
into
add
inc
inc
cmps
lds
add
stos
repz
pop
dec
bound
test
ficomp
scas
call
jo
mov
dec
inc
pop
and
jp
cwde
sub
imul
or
dec
sbb
inc
movs
int
mov
xchg
cmp
int
dec
cmp
mov
imul
jecxz
dec
add
mov
retf
test
in
adc
ror
push
psrlw
(bad)
mov
int3
jg
out
fucomi
ret
fsubr
mov
sti
cmp
in
and
adc
mov
int
std
cmp
jne
cmp
sar
sti
fldenv
iret
in
mov
ja
xor
mov
fs
xchg
pop
(bad)
xor
jg
cmps
mov
sub
repnz
adc
iret
out
pop
inc
cmp
xor
mov
sbb
iret
push
aad
or
jg
or
or
sub
cmp
out
sbb
xchg
pusha
retf
xlat
inc
xor
or
and
(bad)
neg
inc
and
mov
loop
dec
mov
fwait
cmove
pop
add
outs
cmp
stc
stos
sub
test
push
outs
mov
iret
xchg
adc
ret
pop
cmp
mov
push
jno
fadd
pop
jl
in
js
mov
(bad)
dec
in
icebp
rol
cmp
movs
dec
dec
dec
in
(bad)
js
imul
mov
data16
aad
sub
ds
fldenv
cmp
lods
sub
rcr
(bad)
int3
nop
outs
push
inc
leave
push
push
add
fwait
ret
ins
div
popa
in
pop
popa
shl
jns
sbb
in
jne
cwde
sbb
aad
retf
and
pop
sbb
cmp
scas
gs
stos
cmp
inc
push
loope
or
int3
stos
imul
pusha
ins
ss
or
dec
gs
and
mov
jne
and
call
push
(bad)
pop
jbe
ret
cmps
leave
xor
std
or
push
scas
mov
jne
push
lds
and
sub
pcmpeqd
std
and
sbb
fstp
xchg
push
lods
fmul
js
lock
fnsave
idiv
mov
daa
push
les
sbb
push
test
cmps
repz
pop
aam
sub
add
fwait
pushf
inc
inc
dec
or
test
pop
dec
jo
push
xor
loope
mov
pop
jg
in
cmp
loopne
or
push
rol
jo
loopne
sub
mov
cmc
int
ins
and
(bad)
cmp
scas
cmps
xor
and
je
mov
bound
repnz
fdivr
inc
mov
mov
pusha
jmp
vmovdqa
jg
loope
outs
std
call
pop
out
push
(bad)
fidivr
xchg
xchg
mov
cmp
aam
push
movs
adc
in
ret
in
ror
dec
jmp
addr16
mov
repz
xchg
inc
fs
out
out
or
sbb
pop
enter
nop
adc
lods
(bad)
adc
jns
xchg
push
sbb
add
shl
mov
rep
call
jb
fbld
mov
enter
aam
or
enter
mov
repz
sbb
adc
fldl2e
shl
iret
dec
push
hlt
jge
lea
adc
and
clc
jg
adc
leave
scas
sub
add
cmp
or
xchg
in
mov
popf
daa
inc
sbb
adc
xchg
les
inc
ret
fs
vcvtps2dq
sbb
fwait
mov
sbb
(bad)
pop
sub
push
mov
(bad)
push
cdq
loop
pushf
jns
nop
mov
popf
xor
dec
sub
dec
pop
xchg
cmc
fs
sbb
ins
adc
push
in
outs
push
adc
push
call
outs
stos
jbe
push
xchg
xchg
jmp
or
pop
mov
leave
xor
das
lahf
jo
push
iret
mov
adc
inc
stos
mov
jns
xchg
adc
ficom
sub
add
out
inc
iret
sub
inc
int3
adc
cmps
cmp
mov
push
test
(bad)
sub
mov
sar
add
js
push
xor
test
cld
lahf
jecxz
call
xor
cmp
call
cmp
test
push
push
aas
fimul
outs
data16
pop
dec
mov
int3
ds
scas
pop
add
(bad)
pop
mov
cmps
jmp
sub
mov
mov
and
aaa
inc
mov
loope
or
pop
inc
and
js
push
and
mov
clc
cmp
mov
and
lock
or
cmp
inc
dec
lds
popf
pop
repnz
mov
adc
daa
sbb
mov
jbe
sub
push
mov
add
aad
or
cmp
shl
cmps
popf
xlat
jne
or
mov
repnz
pop
int
jb
jne
jge
stos
repnz
movs
hlt
inc
mov
mov
mov
js
mov
or
into
sbb
pushf
dec
inc
push
repnz
jbe
add
and
xchg
ftst
mov
mov
jge
cdq
jo
mov
psllq
push
stos
adc
imul
outs
adc
and
and
sub
mov
dec
inc
jo
jno
in
sub
and
jl
fldcw
sbb
fcmovnbe
push
push
sbb
inc
maxps
sar
out
lea
in
xchg
cmp
pusha
aad
xor
lahf
int
lahf
or
ds
sar
vpaddusb
inc
aaa
movs
sbb
lods
std
mov
(bad)
aad
stos
movs
lea
sbb
xor
xchg
and
ja
mov
mov
dec
xchg
adc
mov
add
jge
mov
xchg
cld
cwde
or
repz
sti
inc
add
push
jne
mov
mov
inc
and
cmp
jb
cmp
popa
add
or
cmp
test
retf
fwait
in
(bad)
xchg
add
(bad)
xor
das
mov
out
pop
or
xlat
jns
repz
scas
repnz
out
data16
sub
test
mov
push
push
pop
push
sbb
mul
outs
sbb
xor
loopne
dec
dec
test
sbb
pop
popf
and
dec
es
pop
xchg
cmps
mov
in
and
pop
mov
mov
sahf
mov
imul
je
push
inc
jg
stos
fisubr
ja
jnp
lahf
in
cmp
idiv
pop
add
scas
stc
stos
in
inc
call
dec
call
hlt
xchg
jp
sub
inc
inc
outs
inc
mov
pop
ins
sub
and
and
adc
sbb
sub
js
cli
dec
(bad)
out
mov
pop
jg
xor
aam
or
ins
cs
stos
xchg
lods
call
or
cwde
in
xor
movs
push
scas
sub
mov
mov
sub
inc
xor
mov
mov
loopne
stc
xchg
pop
call
sbb
adc
and
jp
out
mov
imul
push
sbb
stos
xchg
dec
outs
push
xchg
mov
and
adc
xchg
mov
sbb
movs
das
mov
mov
fisub
in
addr16
gs
add
jp
int3
dec
dec
test
arpl
pop
sbb
(bad)
sub
aaa
imul
aaa
sbb
mov
out
aas
add
jmp
and
mov
loope
fsub
fstp
dec
jp
ret
in
adc
mov
xchg
mov
cmps
mov
ins
sbb
jbe
push
addr16
fcmovbe
mov
movs
dec
jge
or
scas
mov
das
xor
sahf
jne
pop
ja
fst
cld
stos
xlat
adc
xor
cmc
sub
arpl
ins
mov
and
sahf
cmps
mov
jp
mov
repz
shr
push
and
lea
inc
and
fs
jp
sar
nop
adc
cwde
mov
mov
fwait
jl
lahf
jmp
mov
mov
(bad)
popa
test
or
je
mov
mov
xchg
mov
shl
mov
(bad)
push
mov
rol
mov
out
xlat
pop
scas
jle
pop
sbb
mov
popa
(bad)
cmp
js
(bad)
adc
ror
ds
or
mov
out
dec
add
pop
xor
sub
mov
and
xor
in
sub
sub
add
bound
xor
out
shl
mov
sub
cmp
fist
mov
js
xchg
mov
push
adc
or
push
pop
mov
ss
call
retf
in
hlt
xor
xor
stc
scas
fist
jp
lods
lahf
call
test
pop
pop
(bad)
movs
jno
jbe
lods
sahf
movs
sbb
mov
aam
retf
aad
sbb
jl
jnp
dec
fst
fstp
in
lods
test
in
(bad)
mov
xchg
lods
mov
cdq
adc
das
nop
ret
fld
mov
imul
popf
rcl
sbb
cmp
out
pushw
add
sbb
ja
xchg
out
imul
shr
sbb
ja
(bad)
repnz
dec
mov
xor
shl
lea
sbb
xor
jae
out
js
pop
test
imul
jnp
inc
xor
dec
enter
push
jl
pusha
mov
xchg
cmps
inc
into
push
add
cld
push
test
xchg
mov
mov
add
test
inc
add
fs
ja
(bad)
sahf
imul
mov
and
lods
int
lock
jle
jmp
cli
and
jl
push
scas
sub
jo
sbb
scas
int3
into
add
sub
aaa
fs
int3
pop
loop
int3
pop
sub
push
xchg
pushf
inc
bound
or
adc
imul
add
xchg
sub
mov
and
(bad)
popa
cmc
stc
jp
clc
push
ss
mov
mov
jge
fisttp
mul
add
adc
repz
jo
xor
add
lock
js
mov
mov
cmps
lock
fcmovb
int3
aad
popa
xor
cmp
retf
cdq
outs
outs
jno
ins
test
sub
mov
mov
inc
call
jmp
icebp
leave
out
into
mov
arpl
jmp
xchg
ficomp
int
sub
ss
fdiv
dec
mov
sub
jns
inc
sbb
push
add
ins
push
das
add
or
daa
mov
mov
push
out
cmc
inc
in
sbb
jae
mov
(bad)
mov
jmp
(bad)
sahf
and
or
aaa
(bad)
lods
cmp
or
(bad)
push
mov
pop
push
xlat
mov
jns
inc
(bad)
dec
push
jno
cmps
scas
loopne
mov
mov
fs
loopne
xchg
dec
push
jb
aad
mov
push
arpl
fist
inc
fld
mov
shl
push
pop
xor
xchg
cmp
test
xchg
(bad)
sub
fimul
outs
cmp
pop
js
rcl
push
pop
push
add
or
jle
add
xchg
test
pop
cmps
pop
xchg
mov
pop
adc
aad
add
ror
and
cdq
and
dec
sbb
cmp
jae
and
push
sub
gs
lds
push
cmp
sbb
sbb
aaa
xchg
or
or
add
ss
and
adc
pop
sub
add
int
or
addr16
dec
push
inc
inc
mov
sbb
adc
jp
mov
push
push
shr
pop
mov
out
mov
dec
mov
jge
push
cmp
aam
sub
mov
jmp
push
dec
mov
call
push
test
stc
mov
xor
dec
pop
pop
aas
mov
mov
mov
in
xchg
or
hlt
jnp
cs
cwde
or
inc
cld
pop
sub
ins
rol
(bad)
push
push
jg
ret
sub
or
in
xor
mov
inc
push
mov
ret
jo
sar
push
scas
leave
inc
repz
or
in
xchg
test
xor
ins
push
ins
xchg
add
ret
fistp
fsub
sub
lds
jne
adc
mov
pop
cmps
out
jb
dec
loop
mov
or
or
outs
dec
das
or
mov
or
mov
cmp
cmp
jnp
add
mov
inc
inc
add
xor
nop
push
and
jne
scas
dec
add
xchg
jb
and
adc
cdq
sbb
test
leave
(bad)
call
mov
xchg
repnz
add
aad
daa
and
pop
sbb
sbb
cld
push
mov
adc
pop
pmovmskb
push
inc
inc
mov
jge
jbe
scas
mov
ror
test
dec
les
outs
fcom
sub
fs
mov
xchg
retf
clc
adc
inc
jmp
sbb
fdiv
mov
loop
adc
test
or
inc
sub
bound
scas
(bad)
xchg
push
pop
je
fnstsw
and
mov
and
stos
xlat
inc
xchg
pop
fsub
js
sub
sub
sub
rol
xor
fs
fisttp
jno
jp
dec
hlt
ja
and
gs
xchg
ins
sub
bswap
push
retf
rol
push
pop
(bad)
fisubr
sub
jb
cmp
mul
push
(bad)
jno
loopne
ds
mov
inc
test
test
jmp
dec
xchg
popa
and
mov
mul
imul
inc
mov
push
dec
imul
bound
cwde
pop
jb
mov
add
stos
push
add
mov
add
sbb
xor
adc
dec
clc
mov
mov
push
test
and
mov
clc
inc
mov
mov
jae
sbb
inc
(bad)
sbb
(bad)
(bad)
pop
out
les
sar
push
mov
push
leave
addr16
cmp
dec
push
movs
loop
cmp
push
jle
jnp
or
loop
ja
int
sbb
xchg
retf
aam
add
pop
lahf
arpl
xchg
mov
or
dec
push
xchg
adc
sbb
or
push
jl
cmp
sbb
jnp
cmp
add
push
mov
fpatan
mov
test
int
test
ins
sbb
mov
out
sahf
dec
out
adc
idiv
movs
jle
jne
mov
outs
pushf
mov
cmp
mov
(bad)
mov
loope
cmp
mov
lock
fsub
push
gs
retf
mov
cmp
push
movs
add
outs
adc
xor
rcr
inc
fisub
and
int
adc
mov
cli
adc
in
push
cmp
jmp
xchg
ficomp
call
ret
push
ret
lods
test
ja
je
pusha
jmp
add
sbb
jmp
popf
ins
pop
mov
mov
div
cwde
adc
jle
stos
cmps
in
cmp
sub
sub
xchg
imul
fstp
(bad)
clc
xor
pushf
jmp
ds
mov
mov
xchg
daa
inc
adc
or
add
adc
jb
jp
cld
sbb
lods
mov
inc
jae
dec
out
inc
and
les
jbe
lock
mov
mov
and
bound
xor
or
or
xchg
hlt
jmp
xor
and
xchg
jecxz
jnp
cmp
out
and
xchg
inc
aam
xor
xchg
fwait
arpl
xor
mov
push
dec
scas
test
mov
sbb
sbb
mov
int
xor
jbe
mov
outs
(bad)
aaa
ror
mov
iret
sbb
stc
inc
push
xor
call
test
out
aad
push
push
repnz
div
add
xchg
iret
(bad)
call
push
xor
call
mov
cmps
mov
xlat
imul
icebp
loopne
je
fwait
or
fnstcw
retf
lds
add
jge
and
jp
mov
les
arpl
scas
rcr
pop
sbb
sbb
inc
sti
xchg
push
or
or
add
xor
sbb
inc
ss
icebp
fbld
mov
leave
stos
cdq
(bad)
stc
and
cmc
test
sub
cld
stos
or
xchg
jge
imul
jl
in
inc
inc
test
cld
xor
sbb
dec
mov
int3
inc
shl
int3
jno
jbe
jne
call
jg
mov
loopne
leave
mov
aas
dec
out
jo
sti
push
xor
sti
cli
add
and
jmp
and
sbb
fsub
ja
lods
rol
loope
jnp
rcl
and
mov
mov
push
fidiv
mov
repz
lods
xor
ficom
(bad)
mov
mov
(bad)
into
cmp
int
fbstp
inc
add
ja
out
push
add
sbb
imul
ds
aad
pop
adc
call
ja
retf
lds
outs
xor
sub
das
shl
xor
xor
sbb
sub
outs
test
cmps
in
in
sar
(bad)
fcmovne
std
movs
lds
enter
or
icebp
ins
lahf
int
shr
movs
adc
mov
sbb
xor
pop
xor
sub
bound
pop
test
hlt
jmp
(bad)
pop
inc
xchg
dec
adc
loope
hlt
xor
xor
sub
outs
mov
sbb
push
cmp
xlat
mov
ja
mov
mov
sub
ror
push
cmp
and
mov
push
fsub
pusha
add
add
test
sub
clc
add
daa
pop
push
movs
int
in
cmps
mov
cmps
call
lea
dec
inc
lods
add
jo
cmc
dec
jb
mov
cmp
fstp
cmp
addr16
addr16
fst
call
mov
and
loope
xor
mov
stc
jg
xchg
jecxz
ins
push
push
ret
inc
pop
dec
scas
or
pop
adc
xchg
jmp
pop
in
mov
xchg
add
not
std
in
scas
cwde
jp
in
mov
push
sbb
xor
mov
sar
cli
mov
cmp
pushf
adc
cmp
ins
push
fiadd
mov
push
mov
pop
pop
dec
push
shl
inc
shr
inc
cld
dec
jle
aas
ret
das
jne
(bad)
add
adc
call
inc
xor
leave
or
or
xchg
mov
sbb
iret
loop
and
inc
xchg
mov
inc
clc
cmp
in
cmp
mov
loope
inc
adc
xor
in
sub
shl
data16
jbe
lahf
std
add
mov
jle
bound
pop
scas
jp
mov
or
scas
loop
retf
xor
inc
mov
sbb
push
dec
(bad)
mov
jg
mov
pop
dec
test
mov
shl
jns
cld
and
retf
inc
jmp
push
fwait
fs
cmp
mov
test
jo
adc
jnp
push
cmp
pusha
xchg
adc
inc
lods
in
bound
sub
cs
push
lods
or
sub
stc
push
fiadd
out
inc
(bad)
push
and
cmp
mov
outs
xchg
pop
mov
xor
push
or
jb
dec
mov
cwde
test
push
jg
ja
xor
lock
imul
lahf
neg
add
daa
loopne
mov
or
mov
adc
adc
mov
adc
imul
push
call
nop
dec
push
outs
and
sub
shl
retf
jnp
dec
int3
retf
adc
std
sbb
outs
retf
mov
mov
cwde
jb
and
shl
into
mov
out
cmp
pop
mov
stos
push
mov
jns
(bad)
pop
push
pop
call
xchg
add
mov
not
call
fist
cmp
mov
pusha
jae
and
mov
cmp
sbb
xchg
out
xor
je
sbb
fisttp
mov
mov
sbb
inc
daa
sbb
clc
add
jbe
aas
jno
in
cmp
sbb
leave
sub
add
pop
ds
ret
rol
inc
mov
je
inc
cmp
pop
daa
cmps
mov
daa
arpl
dec
in
mov
mov
lods
push
push
jecxz
movs
fdiv
mov
pop
popa
int
and
push
mov
pop
cwde
push
test
(bad)
movs
jge
sub
xchg
pop
xchg
inc
adc
xor
mov
jnp
repz
outs
hlt
lea
dec
popa
xchg
cmp
dec
stc
mov
outs
jge
xchg
ins
gs
sar
test
hlt
push
js
scas
out
stos
loope
test
and
fadd
push
inc
dec
outs
mov
psrlq
xor
cmp
lock
popa
rol
inc
ret
stos
stos
mov
mov
mov
push
inc
sbb
cmp
adc
jne
enter
sbb
pop
xchg
and
xchg
sbb
push
jl
sub
nop
(bad)
fadd
or
jne
add
test
and
(bad)
inc
xchg
loope
jnp
sub
fwait
jae
or
loopne
inc
push
pop
and
adc
jge
push
pop
stc
add
cmc
add
cmp
pusha
div
icebp
not
or
xchg
(bad)
(bad)
mov
jl
sub
jmp
or
jge
pop
inc
lahf
or
retf
aas
and
or
aas
xchg
out
aaa
adc
(bad)
pop
or
sbb
fcom
imul
ror
inc
xor
add
cdq
adc
mov
pop
bound
test
add
idiv
xchg
pushf
in
mov
ja
inc
retf
shl
add
push
jae
out
add
adc
enter
outs
sbb
dec
clc
sub
cld
xchg
mov
xor
dec
dec
cdq
clc
mov
pop
cmp
(bad)
icebp
in
mov
xor
mov
mov
pop
loop
sub
mov
dec
popf
cmp
out
(bad)
adc
into
or
leave
pop
xor
pop
push
mov
loopne
shr
retf
mov
dec
into
int3
(bad)
out
jp
mov
fcomp
cmp
adc
loop
jg
cmp
shl
inc
sti
(bad)
idiv
cmp
add
sbb
call
ins
call
in
push
jmp
pushf
mov
bound
in
imul
loop
xor
movs
pop
fild
ins
outs
lods
push
xor
sbb
xchg
dec
sbb
jg
stos
frstor
cmps
ret
inc
cmp
loopne
push
jb
ret
cmps
sub
mov
out
test
jl
out
and
or
(bad)
test
pop
xor
mov
fdivr
adc
ins
pop
loope
mov
mov
push
pop
pop
outs
cmps
sbb
mov
test
and
std
jmp
mov
mov
mov
in
pop
xor
neg
inc
ficomp
icebp
mov
inc
sub
inc
add
pusha
sub
push
cmp
xchg
push
fdiv
cld
sbb
pop
xchg
dec
mov
in
and
or
pop
sbb
push
div
xchg
test
popf
mov
xlat
adc
movs
mov
in
loopne
sbb
jl
inc
inc
add
clc
and
sbb
jns
fdivr
cld
cmp
dec
cli
iret
ror
xchg
dec
sahf
test
nop
pop
mov
mov
std
and
aas
ins
ret
loopne
out
in
outs
mov
sar
icebp
pop
das
(bad)
xor
mov
dec
pop
imul
inc
mov
es
cdq
mov
jae
mov
inc
popf
imul
lock
aas
jle
jae
retf
push
lahf
retf
repnz
out
ror
shl
jne
xlat
push
sbb
bound
imul
mov
lock
add
xor
sbb
out
or
mov
retf
xchg
dec
dec
jp
pop
fs
stos
test
mov
and
push
movs
xor
sbb
mov
jno
mov
sbb
hlt
push
inc
jle
sbb
fimul
push
push
mov
fnsave
add
adc
pop
xchg
mov
dec
jns
mov
jl
ss
dec
and
pop
mov
mov
pop
xchg
sub
ds
mov
or
fldcw
cdq
repz
call
jnp
xchg
out
sbb
dec
xchg
pop
or
ret
scas
std
ret
stc
lods
aam
mov
dec
inc
sub
jae
int
rcr
xchg
nop
in
mov
dec
popf
ins
daa
mov
pop
gs
aas
and
dec
dec
loop
push
inc
rdtsc
cmp
sar
aas
out
mov
ins
movs
add
ins
ficom
cmps
inc
mov
(bad)
fsub
add
sbb
add
jb
outs
(bad)
jnp
cdq
push
adc
fst
loopne
dec
(bad)
jmp
cmp
cmps
jns
sbb
call
adc
outs
clc
outs
dec
inc
cmp
inc
neg
stos
stc
xchg
shl
add
inc
jmp
dec
fbstp
jae
push
mov
pushf
jmp
jne
clc
fidiv
ins
fdiv
out
xchg
ror
lea
out
call
imul
mov
mov
sbb
(bad)
sub
dec
mov
inc
popf
jno
ds
push
ret
fcom
sub
xor
and
ja
enter
xor
xchg
sub
sub
outs
mov
cmc
cmp
cmp
push
lds
sub
adc
pop
mov
loopne
jae
call
fld
xor
std
lea
cs
int
aad
xlat
sahf
test
gs
adc
xlat
pop
lahf
mov
mov
and
push
shl
(bad)
sar
jne
arpl
or
sti
push
test
cwde
popf
add
fdiv
cmp
out
(bad)
rcr
pushf
sub
data16
stc
(bad)
loop
out
loop
mov
(bad)
and
dec
inc
les
or
mov
push
cdq
mov
sbb
mov
nop
int3
mov
add
push
mov
inc
mul
dec
bound
push
cmps
or
test
inc
or
xor
ja
xor
outs
pop
inc
das
fistp
cmp
sub
dec
jne
addr16
sbb
mov
push
(bad)
stc
inc
ret
xchg
xchg
enter
scas
dec
nop
cdq
outs
mov
xchg
cmp
call
lahf
pop
je
fwait
sub
mov
push
(bad)
jmp
dec
sub
out
push
xchg
pop
add
and
stc
mov
pop
add
or
dec
icebp
push
cmp
ret
add
dec
out
mov
or
cli
mov
add
outs
jmp
sub
dec
xor
ss
pop
and
inc
pop
sti
sbb
pop
test
jno
adc
inc
mov
ds
adc
cs
test
dec
mov
cs
sbb
jae
inc
cmps
imul
xchg
outs
pop
in
imul
dec
or
and
pop
fbld
int
fwait
(bad)
test
push
mov
and
pop
push
mov
mov
jp
xrelease
mov
pop
je
call
(bad)
stos
push
and
vaddsd
lahf
retf
adc
movs
mov
jnp
pop
in
out
in
mov
sbb
outs
lock
jbe
jp
mov
dec
jp
icebp
inc
adc
not
jg
paddb
push
out
mov
and
dec
lahf
dec
aad
mov
mov
sub
dec
mov
outs
push
std
jecxz
mov
push
or
js
cmp
popf
jno
or
mov
iret
jg
sub
gs
out
je
inc
and
sahf
fisttp
push
(bad)
fs
mov
cmp
mov
cdq
dec
sub
cmp
mov
dec
mov
cmc
xor
in
dec
(bad)
in
xor
in
sbb
xchg
leave
inc
fild
sbb
dec
aad
dec
and
and
mov
sahf
(bad)
sbb
(bad)
push
adc
hlt
leave
mov
call
xchg
xor
js
(bad)
pop
not
dec
xchg
pop
gs
add
icebp
adc
or
daa
and
stos
sub
mov
rep
fpatan
sub
jno
nop
das
pop
clc
xchg
inc
inc
test
iret
inc
jp
adc
or
push
outs
arpl
inc
jecxz
push
mov
dec
out
and
xchg
gs
sub
fwait
jp
call
xor
inc
hlt
fldenv
fstp
xor
jnp
sub
mov
ds
pop
sbb
pop
push
mov
dec
xlat
or
push
mov
ins
cmp
jbe
(bad)
std
xor
lds
cwde
fs
(bad)
and
push
das
cdq
mov
mov
sbb
jmp
xor
xchg
loop
xchg
inc
loop
aam
sbb
scas
outs
pop
fidivr
push
mov
push
inc
inc
fmulp
push
hlt
jbe
sub
aas
(bad)
mov
data16
movs
mov
adc
loop
and
hlt
mov
rcl
cli
test
fcmovnu
cmps
daa
lds
sar
sub
pop
and
ins
ins
add
inc
and
push
mov
outs
jmp
movs
dec
in
push
in
into
inc
out
ins
into
call
std
dec
ins
test
stc
bound
inc
inc
push
shl
jbe
push
stos
xor
(bad)
call
lea
(bad)
clc
add
icebp
jle
addr16
or
and
nop
inc
pop
or
and
das
mov
(bad)
adc
inc
je
inc
imul
gs
sbb
inc
pop
shl
dec
mov
mov
sahf
call
ds
inc
mov
xor
mov
imul
stos
sub
daa
add
or
pop
lds
mov
sti
in
out
inc
enter
and
jp
mov
jmp
sbb
mov
cmc
cmp
(bad)
mov
xor
xchg
xor
push
stc
pop
mov
pushf
movs
ins
sbb
aas
cmps
cmp
push
jg
lock
mov
mov
mov
sbb
pop
aaa
dec
xchg
jmp
leave
iret
push
cmps
icebp
adc
and
pop
xchg
mov
stos
add
jb
jge
or
movs
daa
adc
ins
push
(bad)
or
dec
sbb
jo
and
in
test
sbb
inc
pushf
fistp
test
in
(bad)
fisttp
imul
mov
jns
call
jge
outs
ja
ins
clc
push
ja
arpl
sbb
js
push
and
and
sbb
and
(bad)
push
and
pushf
jno
mov
and
test
test
repnz
or
es
or
test
mov
cwde
les
mov
xsha1
test
pop
(bad)
enter
cmp
imul
clc
in
arpl
cmc
aas
retf
cmc
xlat
mov
cld
sti
add
mov
xchg
(bad)
mov
dec
aad
js
mov
or
sub
mov
fcomp
jae
ss
nop
clflush
cmps
cli
cmp
mov
fld
cmp
stos
stc
add
adc
sahf
enter
jo
dec
dec
xor
pop
lds
lods
pop
jnp
pop
repz
cdq
inc
cdq
mov
stos
popa
jg
mov
pop
scas
addr16
inc
test
sub
xchg
fdivr
pcmpgtb
icebp
sbb
jmp
cmp
adc
jbe
fwait
in
mov
push
push
push
adc
jo
adc
mov
sub
sbb
add
push
lods
loop
xchg
lea
addr16
int3
gs
icebp
cmp
bound
mov
hlt
ret
lds
in
xchg
and
jmp
in
mov
js
sub
mov
aad
mov
xor
cmp
cdq
jo
movs
jnp
mov
in
xchg
aad
jb
leave
sbb
test
shr
inc
aas
popf
loopne
inc
sub
jns
inc
mov
(bad)
(bad)
pop
mov
mov
ja
adc
xchg
jg
cmp
mov
ficomp
loope
mov
es
outs
and
push
fdiv
rol
clc
(bad)
xchg
pop
push
dec
adc
(bad)
and
lock
ror
test
mov
inc
pop
pop
pushw
sbb
cwde
inc
and
test
fbstp
sahf
(bad)
xchg
sub
ret
fsub
scas
inc
adc
(bad)
sbb
ror
inc
pop
pop
mov
jne
and
les
clc
iret
xchg
adc
(bad)
retf
addr16
xlat
jp
scas
in
add
sti
test
jo
jg
ret
outs
mov
xor
fs
out
sbb
mov
movs
push
push
mov
push
movs
sub
xchg
mov
aas
fcomp
pusha
ins
sbb
sbb
aas
sub
adc
cmp
aaa
or
mov
ja
lahf
out
add
lds
mov
out
lock
out
ins
push
ja
jae
push
cmp
(bad)
mov
fsubrp
inc
js
leave
call
outs
add
data16
ret
fwait
mov
push
fcmovu
sub
rol
adc
ja
sbb
push
add
add
ins
mov
rol
daa
mov
movs
xchg
hlt
leave
outs
stc
mov
inc
xor
outs
loopne
test
sub
cmp
or
fs
push
jo
xchg
lods
jo
and
mov
out
and
call
add
mov
call
cmc
cmc
pop
adc
fwait
cmp
(bad)
imul
mov
pop
fidivr
ss
or
(bad)
ja
call
ficom
in
xor
mov
push
cmps
mov
inc
movs
test
mov
out
or
lds
inc
ja
mov
jl
mov
(bad)
std
jecxz
pop
mov
xchg
jbe
mov
pop
data16
cdq
sbb
mov
test
mov
ret
jne
sbb
sub
aaa
pop
imul
xor
inc
push
cdq
xchg
int
mov
fs
ret
pop
popa
push
xchg
xor
dec
mov
cmp
cmp
out
jmp
adc
or
xor
sub
xchg
mov
rcr
fdiv
inc
mov
fwait
jno
push
jge
xchg
sub
or
pop
mov
pop
das
pop
cmp
pop
pop
clc
std
xchg
ins
test
les
sub
lods
mov
sbb
push
fisttp
es
and
cmps
inc
inc
adc
cdq
push
xor
icebp
cmp
scas
xchg
mov
das
hlt
iret
cdq
mov
pop
xchg
mov
stos
push
pop
jecxz
nop
icebp
aas
xchg
addr16
and
imul
xor
aad
pop
adc
fmul
and
xchg
les
mov
jmpw
mov
xor
and
ins
cmp
aaa
inc
dec
movs
push
xor
xlat
push
mov
test
dec
sub
cmp
xchg
xor
sub
not
inc
xchg
call
add
add
xlat
pop
xchg
loopne
mov
hlt
xchg
and
outs
mov
or
loope
fmul
psubb
jp
mov
dec
jb
pusha
add
push
dec
(bad)
(bad)
outs
repnz
mov
les
ins
adc
setae
adc
out
cmc
call
jmp
add
or
and
aas
imul
push
sub
inc
add
inc
mov
inc
lahf
jecxz
mov
aas
mov
xor
cmps
cmp
sbb
pop
cwde
xor
ja
pop
out
push
ret
loop
sub
push
dec
xchg
retf
popf
je
sbb
jns
test
jbe
sbb
mov
loope
add
outs
lods
cld
mov
cmp
outs
cs
jp
mov
jne
pop
outs
jle
dec
add
jmpw
push
push
adc
aas
adc
shl
in
sbb
lock
jmp
xchg
mov
or
bound
lods
xor
mov
or
and
xchg
mov
lahf
mov
push
jae
xchg
add
aas
rcl
sub
and
lds
cmps
int
iret
cmp
or
dec
adc
mov
mov
add
push
leave
or
mov
test
mov
arpl
xchg
ins
jg
fwait
jb
or
lock
and
adc
jp
cmp
pop
std
add
in
test
push
pushf
lahf
push
mov
inc
inc
(bad)
cmps
pop
addr16
jns
jle
xlat
fdiv
mov
pop
push
inc
test
out
pop
int3
push
cmp
add
in
pop
mov
cmp
sub
test
or
dec
les
lock
add
push
add
push
ret
adc
mov
int
push
adc
sbb
pop
int3
inc
sub
sar
cmp
(bad)
out
pop
push
fdivp
leave
dec
or
sti
jb
daa
nop
das
rol
sbb
mov
dec
fs
mov
mov
cmps
std
ror
shr
movs
test
fisubr
xor
aaa
out
cmp
xor
cmps
push
ss
cdq
xor
add
or
pop
(bad)
adc
mov
push
inc
mov
add
xchg
imul
cwde
fidivr
icebp
cmps
push
cmp
xchg
fsubr
aad
sar
int3
mov
push
adc
fwait
jo
sub
xchg
js
cmp
arpl
xchg
iret
inc
jmp
icebp
mov
pop
xchg
aas
cmp
vpaddd
dec
in
ror
movs
push
inc
mov
add
neg
outs
inc
sbb
and
cmp
hlt
lea
and
pop
ins
(bad)
out
jl
iret
shl
mov
add
outs
int
ds
int3
push
pop
das
add
popa
push
push
add
pop
inc
jae
outs
mov
cmps
inc
cld
pop
rcr
cld
loop
aad
cs
dec
cmp
iret
daa
xchg
mov
mov
loopne
call
(bad)
movs
cmps
lock
push
sbb
adc
sti
test
mov
xlat
popf
fwait
adc
arpl
aad
cli
jbe
add
cmps
call
int
adc
or
mov
enter
(bad)
or
push
ss
(bad)
out
mov
repz
std
mov
(bad)
jle
pushf
and
mov
push
lea
daa
ror
sti
xor
and
mov
push
daa
pop
mov
adc
lods
inc
fld
jge
scas
dec
int3
out
stos
mov
imul
lds
loopne
pop
leave
js
ds
out
mov
inc
je
fmul
sar
loopne
cs
adc
mov
ficomp
mov
xchg
jnp
ins
pop
xor
jo
ss
push
sbb
outs
mov
inc
fild
ret
in
fs
out
int
aaa
mov
nop
cmp
clc
das
das
out
pop
and
push
shl
and
pop
cmp
cmp
sahf
leave
mov
or
adc
push
loopne
or
add
and
dec
push
cmp
jbe
jno
sub
dec
xchg
and
mov
loopne
stc
dec
mov
or
aaa
ins
test
shr
popa
pop
scas
dec
in
cmp
mov
fucomp
ficom
pop
sbb
lods
mov
cdq
ret
jae
fsubr
fbstp
mov
dec
and
sbb
stc
mov
adc
jmp
or
jg
mov
xchg
cmp
push
repnz
out
mov
push
jbe
shl
mov
adc
jmp
mov
jmp
ins
hlt
pop
in
add
scas
and
and
xchg
and
pusha
in
ins
sub
(bad)
adc
test
add
stos
mov
adc
cmps
cmp
inc
in
xor
or
mov
adc
sub
sub
daa
adc
int3
lods
sub
sahf
push
dec
xor
add
sub
cmp
sbb
sbb
dec
dec
pop
in
fst
stos
lea
lock
ficom
xchg
xchg
sahf
arpl
jecxz
or
adc
fmul
fcomp
jae
sbb
fadd
ret
cmp
mov
aad
xor
out
dec
xchg
je
xchg
fwait
lock
push
sar
das
push
push
fcomp
imul
aas
jb
or
das
repnz
jmp
push
outs
dec
jecxz
pusha
mov
dec
outs
add
pop
(bad)
dec
jle
leave
cmp
xor
test
push
adc
jmp
jne
outs
jg
mov
sar
xchg
js
shl
cli
xchg
(bad)
in
out
jns
add
pop
test
ud0
push
sub
mov
mov
pop
push
jecxz
icebp
push
das
es
push
in
pop
mov
sub
lds
mov
mov
mov
dec
mov
mov
ins
pop
icebp
daa
xchg
mov
mov
les
ds
mov
and
push
add
adc
(bad)
pop
into
pop
dec
jecxz
mov
xor
push
sbb
jne
mov
and
jnp
xor
in
xor
jmp
jl
lss
call
mov
mov
xchg
xor
mov
xor
movs
mov
xchg
cwde
xchg
sbb
or
jnp
fcom
mov
aam
pop
rcl
adc
sub
iret
(bad)
cmp
push
and
sbb
inc
dec
push
push
or
dec
sbb
mov
pop
push
shr
sub
repnz
imul
ror
imul
xor
xlat
jns
xchg
add
imul
daa
mov
cmp
and
adc
jl
fld
add
mov
sbb
sub
ja
inc
pop
div
clc
push
lds
scas
and
push
in
fwait
scas
outs
test
stos
add
out
dec
xlat
movs
retf
mov
sbb
outs
sbb
or
out
or
test
mov
push
stos
out
sub
or
xchg
icebp
daa
das
inc
loope
in
dec
sbb
mov
sub
cmp
inc
mov
pop
sub
sub
scas
loope
addr16
std
(bad)
sar
dec
sbb
push
and
pop
outs
add
adc
adc
aas
or
nop
xchg
push
lods
pop
(bad)
imul
and
in
xchg
lahf
outs
or
ja
stos
les
cmc
mov
mov
adc
rcr
jb
mov
mov
pop
dec
ficom
out
test
pop
inc
sub
lds
jle
push
call
xchg
mov
add
xor
out
mov
ror
adc
jne
jge
pop
and
cmp
xor
add
dec
or
mov
es
dec
mov
cmp
push
dec
add
(bad)
repz
aam
ret
hlt
js
and
loop
sub
add
mov
xchg
push
enter
loope
ins
(bad)
(bad)
arpl
push
adc
jns
cmp
mov
aas
dec
fwait
sar
pop
add
pushf
xlat
dec
push
test
and
xchg
sub
fstp
shl
pusha
sar
call
in
jmp
adc
leave
mov
movs
push
or
cmc
(bad)
in
imul
pusha
cs
rol
data16
enter
outs
ins
mov
sub
jecxz
jne
pop
dec
cmp
out
rcl
pop
call
push
shr
push
gs
aas
or
pop
mov
mov
fcom
adc
mov
mov
xor
mov
mov
cmc
jmp
clc
inc
push
and
movs
inc
mov
mov
cmc
cmp
mov
loop
popf
stos
xor
dec
popa
mov
icebp
gs
pop
inc
popa
inc
rcl
mov
aad
cli
out
popf
sub
jl
(bad)
outs
hlt
pop
outs
pop
sub
cmp
fild
xchg
ins
mov
into
and
and
cmc
sub
sti
out
or
mov
add
cmp
bound
fcmovbe
mov
enter
stos
and
mov
in
add
bound
cdq
std
fmulp
hlt
sub
add
pop
aaa
ins
cld
and
or
xor
jmp
mov
mov
fst
popa
cmp
dec
(bad)
xor
lea
jae
mov
leave
scas
cli
test
push
xor
adc
or
(bad)
retf
popa
or
jmp
or
xchg
jmp
cs
mov
stc
pop
das
dec
or
xchg
cmp
dec
call
cmc
inc
addr16
cs
jl
dec
jb
loop
retf
call
cmp
inc
xor
mov
pop
jge
sbb
into
rcr
pop
loopne
push
jge
(bad)
jecxz
mov
dec
in
jl
fild
push
test
std
into
(bad)
out
les
pop
popf
mov
aam
scas
fdiv
mov
adc
inc
lods
jmp
sbb
sar
call
xchg
inc
inc
sbb
clc
int
push
fld
and
ja
xchg
(bad)
mov
std
movs
rcl
fcomp
pop
movs
cmp
test
loopne
aam
data16
pop
fsubr
pop
adc
ins
(bad)
ja
psrld
lock
sar
push
(bad)
mov
dec
fwait
shr
and
es
dec
adc
pop
adc
(bad)
aaa
sbb
fsub
lods
rcr
pop
cmp
movs
mov
shl
dec
in
inc
sar
fnstenv
xor
mov
push
inc
scas
push
mov
jbe
mov
cwde
push
add
jecxz
jp
test
(bad)
clc
in
into
inc
or
data16
sbb
xchg
adc
mov
lds
sbb
push
call
(bad)
movs
sbb
adc
cmp
stos
xchg
cdq
in
sti
dec
dec
or
mov
mov
dec
repnz
jmp
fsubr
popf
lods
int
cmc
pop
fcomip
xor
movs
into
(bad)
mov
lods
and
not
lods
neg
cmps
lods
or
inc
xchg
sar
mov
std
add
pop
mov
mov
sbb
test
mov
retf
sub
jno
mov
or
lds
sbb
arpl
loopne
xor
jl
or
retf
(bad)
jno
cs
adc
mov
dec
ins
ret
xchg
jo
imul
cmps
mov
(bad)
test
into
jmp
leave
pusha
ja
hlt
jo
mov
inc
nop
push
aad
dec
inc
nop
inc
xor
fadd
in
in
shl
inc
bound
mov
outs
sub
mov
leave
ins
repz
fcom
xchg
dec
or
pop
sahf
ficomp
popf
lods
icebp
pop
sbb
jp
int
and
int3
cmc
pop
xchg
mov
or
mov
inc
push
ja
rol
(bad)
or
into
cld
inc
into
sub
add
or
idiv
sbb
fs
fs
dec
xor
push
push
pop
jno
add
aad
aad
mov
jb
movs
pop
fist
cmp
cli
je
stc
cli
dec
das
aam
and
push
sbb
push
mov
icebp
mov
repz
or
jp
adc
adc
cli
push
scas
int
stc
jne
mov
mov
sub
frstor
jae
pop
mov
inc
sub
xor
test
jmp
rcr
or
jnp
je
out
retf
sub
(bad)
sub
xor
test
rol
xchg
mov
ja
dec
xchg
add
ret
or
iret
fs
xchg
stc
mov
adc
repnz
cmp
mov
rol
sahf
mov
dec
adc
stos
test
pop
jns
mov
cmp
mov
data16
or
xor
push
(bad)
repz
and
in
test
movs
fldenv
in
retf
jle
clc
call
enter
pop
and
add
sbb
daa
xchg
cmp
jg
mov
jp
in
add
sbb
mov
xchg
hlt
cmp
test
xor
add
(bad)
das
aam
mov
mov
xchg
mov
popf
dec
out
mov
jp
icebp
enter
icebp
loopne
dec
dec
sbb
cmc
outs
in
push
inc
retf
sbb
mov
ret
leave
pop
push
or
fcom
sbb
push
test
retf
add
adc
cmp
shl
cli
push
mov
pop
jp
push
mov
pop
sbb
icebp
fisttp
loope
(bad)
push
aaa
stc
fs
test
xor
repnz
retf
ja
js
or
push
cmp
fmul
cwde
fisttp
pop
(bad)
fs
mov
pusha
enter
jmp
aas
cmp
pop
mov
out
pop
ins
xor
mov
dec
and
push
outs
cmp
mov
in
je
jg
loope
mov
pop
stc
dec
jb
retf
inc
mov
sub
sbb
sbb
(bad)
loope
pop
push
cmps
into
fidiv
stc
cmp
jl
mov
mov
xchg
push
shr
(bad)
std
cdq
call
ss
jno
ja
lahf
retf
xchg
aas
movs
sub
or
jge
mov
jno
nop
mov
jl
adc
neg
push
xor
(bad)
out
sub
sbb
ss
dec
and
mov
mov
xchg
and
sahf
cmps
sar
sbb
xor
lods
mov
jle
adc
mov
imul
shr
or
sub
add
pop
or
fcomi
scas
mov
cli
cmc
jnp
fst
add
mov
xor
push
push
test
js
mov
mov
aas
addr16
rcl
push
mov
je
shr
cld
inc
icebp
ficomp
call
pop
mov
push
imul
call
js
xchg
cdq
js
or
lock
imul
mov
adc
cmp
xchg
add
mov
lahf
popf
enter
xchg
xchg
or
aam
adc
adc
jp
cmp
adc
mov
rcr
(bad)
cld
inc
jae
adc
sub
cmp
inc
bound
dec
push
call
mov
or
mov
mov
pop
ret
push
push
and
fiadd
(bad)
and
xchg
leave
std
and
pop
pop
lahf
mov
ja
mov
xchg
ja
retf
mov
add
mov
sub
fnstenv
gs
mov
jmp
sti
cmc
or
js
xor
shl
jno
and
lods
outs
arpl
xchg
(bad)
xchg
cli
ficom
cmp
pop
pop
iret
mov
pop
(bad)
mov
and
xor
fwait
nop
fsubr
pop
scas
scas
sub
fcmove
pop
lea
push
ja
test
or
mov
int
pushf
call
and
rcr
in
sub
(bad)
mov
cmp
push
lahf
out
(bad)
ja
mov
int
pop
fdivr
xor
adc
loope
out
cdq
aaa
repz
push
out
aas
xor
adc
ja
scas
call
dec
fdivr
mov
jp
enter
inc
cmc
jge
jo
xchg
sti
add
out
xchg
jnp
pop
scas
not
ret
jp
pop
jno
mov
(bad)
mov
and
outs
inc
gs
add
pop
mov
imul
xor
clc
push
popf
and
push
cmp
mov
enter
es
add
js
rol
mov
outs
das
mov
iret
test
sbb
fistp
in
ins
repz
cmc
out
mov
jp
lock
jge
push
cmps
mov
int
popf
fstp
fnstcw
ret
push
adc
mov
and
in
aam
je
lods
test
stc
aas
mov
add
(bad)
add
cmps
jge
jmp
arpl
sbb
jb
loope
jmp
retf
imul
sar
lods
aad
adc
enter
and
jnp
sbb
movs
shl
push
adc
sub
pop
sub
mov
cmp
imul
push
sub
push
les
xor
mov
inc
xor
iret
(bad)
or
sub
fucomi
(bad)
repz
movs
inc
cmp
ds
add
inc
push
xchg
movs
aas
jg
adc
inc
ja
pop
(bad)
arpl
mov
(bad)
mov
inc
jne
dec
movs
mov
push
cmp
mov
sub
jo
add
repnz
or
push
js
jl
loope
xor
sbb
pop
fimul
out
fidivr
jge
push
sbb
mov
sahf
pop
xchg
loope
or
dec
sub
add
das
xchg
and
leave
mov
sar
add
sub
and
push
psraw
movs
je
pop
es
loop
jmp
push
push
jmp
mov
ss
and
pop
mov
aad
out
cmp
in
sub
jae
jae
push
sbb
sub
push
in
or
sbb
cmps
sub
push
outs
mov
or
adc
(bad)
adc
xchg
stc
inc
jmp
push
test
lds
inc
std
(bad)
or
add
push
mov
lds
push
loop
outs
push
cli
xor
fild
pop
movs
es
mov
sub
aad
adc
pop
pop
adc
retf
jg
mov
jge
imul
fldcw
jmp
jmp
xor
mov
xchg
imul
pop
push
mov
repz
push
imul
gs
enter
loopne
push
pop
repz
xor
shr
fs
ins
jb
sub
push
inc
fisub
dec
cmc
sbb
int3
test
sbb
and
mov
xor
inc
into
dec
popf
fnstenv
mov
jbe
sbb
(bad)
mov
mov
cdq
sahf
ja
mov
lods
call
out
lods
sahf
mov
fbld
mov
ret
lea
aaa
mov
lahf
xor
adc
mov
scas
add
jmp
jg
cld
call
mov
push
dec
xchg
jb
sub
inc
jge
and
pop
addr16
sbb
pavgb
jo
loop
dec
scas
rcr
mov
mov
or
mov
shr
and
jmp
stos
(bad)
and
sub
call
fldcw
mov
xchg
mov
pusha
out
pop
adc
cwde
mov
aas
movs
(bad)
mov
pop
inc
adc
(bad)
xchg
xor
ret
dec
fmul
xchg
pop
scas
int3
test
sub
das
cmp
dec
jmp
adc
sahf
fwait
imul
adc
rcr
aam
ret
stos
inc
hlt
jmp
into
in
jecxz
fimul
ret
repz
xchg
sahf
loope
xchg
pop
or
pop
and
out
mov
in
xor
inc
inc
enter
dec
retf
faddp
adc
movs
add
sbb
out
mov
dec
mov
xchg
movs
movs
mov
dec
mov
push
push
je
out
dec
jns
dec
fcom
out
hlt
in
repz
(bad)
pop
pop
push
mov
adc
jae
lea
push
rcr
fsubr
dec
enter
fs
inc
mov
mov
or
fninit
xor
mov
jmp
push
fadd
sub
mov
ins
ret
bound
mov
xor
sub
xlat
pop
cmp
imul
inc
push
sar
add
(bad)
mov
mov
xor
repz
mov
or
test
adc
adc
cmps
cmp
ret
mov
xchg
push
jno
xchg
dec
push
push
cdq
loope
enter
cmc
push
mul
sbb
inc
mov
jge
and
out
xor
int3
mov
test
in
or
jne
es
pop
and
inc
cmps
mov
mov
sub
psubq
pusha
mov
(bad)
pop
aad
inc
xchg
push
dec
test
adc
cwde
in
bound
fwait
adc
outs
xchg
cmp
xchg
jp
stos
jns
cdq
inc
add
aad
sahf
sub
loop
aaa
lods
js
es
push
xor
mov
comiss
mov
iret
sub
or
(bad)
neg
call
(bad)
mov
sbb
in
or
sbb
jle
mov
repz
mov
cmp
cmps
push
in
test
push
movs
add
or
ror
into
sahf
jmp
(bad)
or
shl
jle
add
cdq
ret
and
push
out
and
pop
jp
xor
in
mov
mov
push
rcl
jo
jl
adc
mov
das
and
adc
shr
imul
das
xchg
ret
aam
sti
xchg
inc
mov
or
dec
jne
ret
ins
sti
bound
add
mov
scas
mov
popa
movs
call
call
adc
aaa
mov
xchg
jp
sbb
hlt
push
mov
push
sbb
cdq
cmp
and
mov
loop
mov
test
add
pop
aas
dec
enter
sub
mov
cmps
mov
leave
pop
cmp
xchg
xchg
jp
sahf
fcmovnu
xchg
pop
push
mov
(bad)
dec
cmp
add
jo
bound
or
les
ja
in
ret
cmp
pushw
ret
mov
xchg
push
and
ins
add
cmp
push
push
inc
push
xchg
out
repnz
cmp
and
fistp
fild
mov
jae
outs
cld
pop
dec
loope
outs
push
rcr
stos
retf
cdq
xchg
loopne
dec
mov
retw
mov
sub
cmp
shr
retf
or
es
outs
push
cs
cmp
(bad)
jl
cdq
adc
push
fwait
push
jne
push
mov
adc
or
jns
adc
out
pop
cmps
(bad)
mov
aaa
xchg
inc
and
(bad)
pop
push
ffreep
jmp
(bad)
mov
or
lods
pop
add
(bad)
idiv
hlt
sub
inc
shr
aad
fcmovnbe
(bad)
dec
fmul
fsub
pop
stc
cdq
ficom
xlat
mov
stc
lahf
mov
inc
imul
mov
lds
cmp
loopne
dec
ffree
daa
cmp
es
aaa
adc
nop
sbb
imul
dec
xchg
fsubp
out
mov
es
dec
adc
(bad)
out
shl
dec
cdq
cmp
sub
dec
and
inc
xchg
pushf
loopne
test
xchg
out
push
xchg
adc
ror
push
dec
jo
sbb
jb
test
push
into
cmc
fist
in
xor
xchg
sub
inc
inc
jle
jmp
pushf
lock
push
fstp
lahf
inc
push
retf
out
jbe
cmc
fcom
outs
popa
adc
fld
push
mov
outs
mov
in
lods
loope
mov
in
fmul
enter
repz
mov
dec
retf
movs
stos
(bad)
int3
mov
adc
inc
adc
mov
lahf
loop
loop
push
inc
and
jae
mov
or
mov
and
cmc
pop
jb
xchg
jne
jmp
pop
dec
mov
mov
push
inc
mov
xor
xchg
arpl
cld
inc
and
push
stos
dec
js
push
fisubr
sahf
or
jo
dec
and
sub
arpl
stos
mov
push
test
loopne
fucomp
call
fsubrp
repnz
mov
mov
inc
add
xor
jmp
mov
cmps
cdq
leave
xor
shl
popa
or
inc
movs
retf
das
in
enter
outs
mov
fld
in
int
sbb
xchg
push
rcr
sbb
adc
cdq
icebp
int
loop
movs
daa
leave
push
pop
call
add
inc
inc
lods
test
push
inc
shl
rol
imul
pop
xchg
stc
push
xor
cmp
loope
retf
xor
iret
jp
stc
add
and
in
shl
int3
cmp
scas
addr16
ficomp
aad
ja
mov
cli
dec
push
mov
icebp
ins
jb
sbb
out
out
sbb
push
inc
xor
mov
mov
mov
xor
ja
dec
mov
pop
rol
out
popa
push
int
mov
push
in
aas
daa
ror
js
cwde
daa
pop
out
out
addr16
and
mov
fist
cmps
mov
mov
outs
dec
(bad)
call
sub
data16
fstp
movs
jl
cld
dec
js
imul
xchg
cmp
sub
fwait
ins
je
nop
pop
(bad)
(bad)
sub
push
or
mov
or
and
or
add
pop
jecxz
mov
xlat
je
cld
rcr
arpl
jge
sbb
fs
imul
aad
and
dec
inc
jns
sbb
in
sub
pop
dec
pop
pop
mov
xchg
pop
add
mov
add
mov
cmp
pop
shl
adc
test
lds
sti
pusha
(bad)
pop
jp
push
cmp
sbb
dec
int3
iret
cmp
sbb
fisub
push
scas
pushf
gs
pop
pop
hlt
mov
sub
sti
leave
mov
aam
fcom
and
sbb
adc
lock
mov
repnz
(bad)
popa
lock
inc
inc
les
push
loop
arpl
mov
mov
xchg
dec
je
sbb
mov
xchg
and
jp
push
xor
adc
add
push
repz
lods
lds
mov
push
fistp
adc
add
adc
shr
jo
mov
xchg
or
nop
mov
push
mov
movs
rcl
lods
nop
int3
outs
fild
(bad)
hlt
ja
jns
sahf
and
mov
pop
jbe
cmp
stos
fidiv
fs
ss
inc
in
mov
mov
xchg
xlat
stos
inc
fld
jbe
cmp
mov
dec
inc
mov
lock
into
xlat
inc
(bad)
sti
mov
fnstsw
dec
and
arpl
and
xlat
ins
cli
lea
mov
jmp
out
nop
fidiv
xchg
pop
(bad)
fld
pop
fisubr
dec
cmp
push
cmps
jecxz
out
in
mov
lods
jle
loopne
scas
push
mov
mov
xor
sbb
fstp
jge
sub
daa
stos
mov
rcr
ret
call
pop
in
pop
mov
sub
aaa
sbb
sbb
and
sbb
dec
jns
cmp
enter
sub
aam
pop
cmp
imul
cmp
cmc
cs
xchg
pop
aas
call
pop
cmp
es
ja
cmps
sbb
jno
sub
scas
mov
cwde
jl
hlt
ss
mov
(bad)
push
mov
adc
stos
cmp
xchg
ss
mov
shl
dec
call
and
xchg
xchg
mov
ror
sub
ja
jge
addr16
cmps
stos
retf
pop
daa
cmp
retf
sub
or
repnz
lahf
or
cmp
mov
adc
je
or
xor
cmps
pushf
sub
psrlw
ret
cmp
and
call
fadd
pop
dec
sbb
pop
xchg
hlt
push
lahf
add
div
mov
pop
inc
rcl
cmp
retf
iret
push
adc
add
(bad)
mov
inc
test
sub
pop
mov
xchg
lods
lods
inc
pop
std
mov
mov
mov
xor
pop
jle
in
inc
popf
enter
add
xlat
push
jecxz
mov
pop
inc
sbb
push
ins
push
cwde
sbb
and
test
ffreep
jg
rcr
lods
jne
ror
out
ss
dec
mov
fild
les
pop
mov
add
out
repnz
push
or
mov
or
cmp
mov
cmp
popf
jbe
pop
outs
mov
jne
out
cmp
jmp
xchg
xor
inc
xor
jns
jmp
pop
repz
(bad)
and
in
or
push
push
das
mov
xor
mov
imul
pop
adc
out
(bad)
and
out
fistp
or
loope
sbb
jle
movntps
clc
inc
leave
bsf
add
shl
xchg
lds
iret
fisttp
fisttp
inc
jle
inc
adc
or
mov
scas
and
fild
in
inc
inc
je
jecxz
test
xlat
or
iret
fimul
pop
jae
dec
xchg
mov
mov
nop
jbe
xor
repnz
jmp
mov
push
ret
jne
jl
mov
cmp
inc
in
fmulp
and
mov
inc
cmp
and
rcr
out
or
push
jl
ss
mov
xchg
stc
imul
xchg
hlt
dec
sbb
arpl
loop
adc
jbe
inc
jle
xlat
es
cld
mov
pop
mov
sub
in
mov
dec
inc
(bad)
js
inc
cmp
pop
js
mov
add
push
pop
cmp
(bad)
mov
fdiv
(bad)
ror
and
iret
loope
add
pop
lock
mov
inc
nop
pop
idiv
mov
adc
cmps
cdq
or
sub
fimul
or
dec
sbb
or
mov
jp
aas
sub
mov
xchg
push
inc
popf
push
ds
push
mov
mov
call
mov
sub
cmc
adc
push
shl
cmp
jmp
ret
inc
xchg
(bad)
lds
out
cmp
dec
outs
fiadd
jge
scas
test
stos
daa
sbb
int3
xor
push
push
pop
std
or
jae
mov
adc
cmp
mov
aaa
push
fild
retf
sahf
pusha
nop
bnd
pop
jmp
jp
jno
mov
sti
js
cmp
jecxz
repnz
inc
inc
outs
xchg
nop
add
mov
scas
mov
adc
mov
inc
mov
mov
sub
push
push
and
aas
mov
xchg
xchg
mov
lods
leave
and
sub
mov
daa
sbb
cld
into
in
repnz
inc
cld
pop
xor
mov
sub
inc
adc
mov
mov
cmps
mov
scas
iret
mov
js
jno
mov
mov
ss
push
ret
cs
jge
out
ret
mov
outs
add
lock
int
pop
fnstsw
or
scas
inc
push
sbb
int
pop
add
jg
jg
mov
jae
push
add
imul
add
adc
push
or
xlat
dec
loop
scas
adc
mov
mov
push
push
add
sahf
loopne
adc
jmp
iret
dec
stos
push
outs
das
outs
adc
jns
mul
add
out
ins
iret
(bad)
stos
sbb
repnz
in
repz
adc
cmp
scas
add
mov
and
cmc
fwait
or
aam
push
push
nop
add
mov
out
mov
je
xchg
es
loop
rcr
inc
imul
leave
out
jmp
add
cmp
dec
aas
inc
jbe
popf
out
pop
into
(bad)
sbb
push
cmp
ja
or
pop
(bad)
aad
pusha
popf
push
dec
push
outs
nop
mov
mov
push
fsub
iret
inc
fsub
pop
mov
clc
ins
aam
jbe
push
xchg
ds
shl
int
ret
aaa
push
dec
imul
jne
rcl
test
jp
repnz
lahf
in
mov
les
push
mov
retf
push
mov
dec
inc
sbb
mov
sub
inc
mov
das
and
sbb
jnp
bnd
daa
ss
mov
ds
mov
inc
test
cmps
js
jno
add
mov
icebp
jle
pop
jmp
icebp
lea
(bad)
mov
cmp
ror
(bad)
add
cdq
(bad)
xchg
fimul
xchg
iret
add
enter
pop
mov
and
mov
xor
out
int
clc
mov
add
cmps
push
aas
sub
imul
xchg
ret
push
push
push
je
clc
mov
sub
mov
pop
mov
call
in
cmps
dec
add
cmp
les
arpl
xlat
leave
enter
outs
retf
fimul
xor
aam
pop
pop
in
xchg
sbb
movs
cmc
xchg
push
jmp
pop
xor
ficom
int3
call
lods
mov
daa
loope
shl
aam
inc
rcr
push
push
jle
and
ret
pop
lahf
mov
sbb
sbb
retf
mov
mov
mov
and
and
aaa
sbb
jns
aaa
and
cmp
ins
and
pop
sub
fst
inc
aas
mov
xchg
xchg
inc
jno
es
sbb
aam
jl
dec
dec
jge
out
in
and
xor
cdq
int3
into
pushf
mov
push
and
push
repnz
scas
sub
test
(bad)
les
aam
cmp
mov
leave
jo
(bad)
jl
mov
mov
jecxz
jns
and
bnd
jp
xchg
fisttp
mov
or
jne
jnp
inc
ss
sub
mov
mov
cmp
jne
dec
div
mov
loop
inc
icebp
gs
leave
test
loopne
dec
mov
cmp
jge
fsubr
adc
sbb
add
cld
jbe
aas
mov
pop
add
add
fdivr
lahf
test
xchg
pop
cmp
frstpm(287
mov
inc
ret
jmp
sbb
and
xor
repz
scas
lods
sub
xor
xchg
out
jle
add
inc
call
pusha
(bad)
dec
movs
adc
retf
push
inc
iret
call
mov
ret
mov
xlat
pop
xor
push
fidiv
mov
mul
mov
fst
jmp
shl
and
bound
cs
repz
fnstsw
xchg
jmp
jb
out
leave
dec
jne
arpl
jne
mov
mov
xchg
mov
rol
ficomp
xchg
xor
pop
lods
sub
fs
cmp
loope
loop
fs
and
loopne
(bad)
mov
mov
(bad)
in
in
adc
ja
test
sub
or
or
test
clc
push
inc
leave
mov
push
dec
in
outs
dec
iret
popf
add
dec
or
or
or
imul
adc
jmp
icebp
push
sar
call
mov
sbb
push
add
xchg
push
in
gs
stos
mov
jle
js
mov
xor
in
mov
xchg
out
dec
movs
mov
in
mov
call
jmp
shl
mul
xchg
sahf
bound
stc
das
sbb
jecxz
ja
adc
popa
call
xchg
mov
fistp
or
pop
dec
leave
mov
xor
sbb
mov
retf
mov
out
mov
fsub
into
jp
popa
mov
sub
or
jo
mov
adc
imul
pop
mov
sub
pop
cmc
fmul
movs
das
ins
mov
or
jae
add
xor
int3
and
pop
xor
sbb
jnp
adc
inc
mov
mov
and
aas
sbb
or
fs
and
je
shr
and
dec
test
mov
xor
xchg
div
ret
xor
adc
dec
movs
jns
adc
inc
(bad)
push
adc
cmp
loop
add
daa
fist
mov
retf
not
sbb
add
call
jmp
xlat
inc
int3
pop
sub
sbb
dec
xor
dec
lds
mov
push
aaa
cmp
dec
scas
ja
add
mov
jno
and
fmul
in
fs
push
jmp
jecxz
mov
(bad)
or
xchg
push
add
or
fmul
pop
xchg
inc
lea
cli
add
(bad)
stos
xor
aas
(bad)
sub
mov
ins
xor
cli
jns
pop
hlt
mov
in
and
sbb
les
hlt
mov
ret
jle
scas
push
mov
ins
lock
shl
js
mov
fcmovne
stos
shr
cmp
aam
sub
mov
jp
lahf
std
lods
sbb
rcl
ja
xchg
xor
mov
jb
dec
clc
xchg
pop
pop
push
es
popf
push
mov
cmp
aas
in
imul
nop
out
shr
add
fist
ins
scas
cmps
mov
daa
xor
aaa
sbb
enter
mov
imul
(bad)
lock
jl
fisttp
popa
mov
pop
or
xor
mov
xchg
ins
outs
cmp
dec
push
xchg
pusha
lea
int3
in
sbb
mov
xor
pop
jne
rol
(bad)
jp
das
mov
dec
mov
stc
push
dec
call
mov
mov
dec
adc
dec
and
pop
cmp
push
dec
nop
push
sub
aaa
cld
ror
lods
neg
or
jl
test
imul
mov
loope
jle
dec
cmp
fidiv
iret
fdivr
inc
mov
iret
inc
pop
pop
scas
pop
add
imul
pushf
cmp
lea
mov
popf
(bad)
fstp
mov
out
inc
retf
ret
and
pusha
inc
js
scas
mov
mov
sub
xchg
push
outs
push
jg
je
call
vmread
test
adc
repnz
neg
push
add
lea
inc
mov
cmps
mov
fdiv
retf
xchg
icebp
mov
sbb
or
or
xchg
ds
pop
dec
inc
pop
pop
add
outs
mov
mov
or
xor
cdq
xchg
ja
or
leave
add
pop
and
dec
jb
lods
dec
or
or
pop
cld
inc
sbb
sub
mov
xchg
std
scas
ss
int3
scas
inc
out
push
int
sub
scas
lahf
popf
cmp
xchg
mov
xchg
int3
inc
pusha
cli
in
mov
sub
clc
push
icebp
adc
std
mov
int
mov
rcr
mov
jmp
leave
test
cmp
mov
arpl
adc
aaa
cs
stc
leave
lock
inc
enter
adc
scas
xlat
lods
sbb
aam
pop
ss
jae
mov
test
xlat
push
cmp
popf
ins
lock
xlat
jg
pop
cwde
outs
(bad)
ret
mov
in
aam
mov
cmps
cmp
ss
pop
and
jl
outs
inc
shl
add
fisubr
sbb
daa
inc
inc
(bad)
xor
aaa
cli
arpl
or
push
push
ud2
inc
cmp
and
cmp
cmp
or
and
aad
cmp
xchg
mov
mov
int3
mov
iret
pop
or
or
jb
mov
push
add
push
ds
dec
add
cmp
jno
lea
jmp
xchg
lods
cmps
setg
add
outs
add
xor
jmp
inc
in
dec
mov
push
push
dec
lods
sub
adc
mov
jge
mov
jnp
jmp
or
xchg
sahf
clc
cmp
cmc
mov
pop
inc
jp
adc
adc
ja
pop
cmps
xchg
ds
sub
daa
movs
jl
inc
push
cmp
adc
mov
mov
(bad)
mov
jbe
retf
lahf
xchg
push
jnp
out
mov
cmps
(bad)
(bad)
jns
shr
mov
mov
add
cmp
pop
inc
mov
test
sbb
nop
es
pushf
inc
pop
fwait
and
fld
aas
in
xchg
push
or
mov
pop
vpextrw
lds
(bad)
xlat
cmps
shl
or
lods
fadd
(bad)
ja
cmc
or
in
jae
dec
cli
cmp
inc
xor
sub
not
les
fwait
sar
dec
jns
in
into
test
mov
xor
movs
test
lods
inc
mov
js
mov
iret
out
scas
into
fwait
mov
xchg
fidivr
mov
jl
mov
mov
push
loope
(bad)
sbb
pop
mov
dec
ror
icebp
or
loop
iret
stos
test
mov
cmp
xor
sbb
(bad)
dec
push
cld
inc
sar
outs
mov
mov
mov
pop
je
ret
ins
pop
out
out
retf
jle
popf
add
cwde
xlat
jmp
into
mov
xchg
xchg
mov
mov
xor
or
mov
inc
cmp
pop
dec
ficom
push
jnp
sub
add
cmps
cmp
push
jmp
cmp
mov
mov
push
adc
scas
fs
(bad)
mov
push
cld
adc
sub
push
pop
(bad)
jp
jmp
cmp
lods
lea
lds
inc
sub
pop
dec
push
bound
stos
inc
sub
mov
push
sub
pushf
add
stc
cmp
sbb
and
cdq
mov
pop
cmp
xchg
call
into
mov
pop
hlt
and
push
js
fnsave
mov
in
ja
mov
fstp
inc
push
fdivr
stos
jge
mov
sti
add
loopne
jmp
shl
push
and
adc
js
push
cmp
nop
scas
jmp
jbe
ss
mov
ins
test
inc
test
adc
pop
xchg
pop
stos
ret
jae
push
dec
mov
xchg
mov
mov
into
stc
sub
push
mov
ficomp
pop
das
jmp
xchg
sub
jno
cmps
nop
fwait
imul
jbe
push
or
in
dec
cmp
aaa
mov
push
ja
mov
push
jmp
mov
retf
jp
mov
hlt
retf
xor
sub
inc
clc
and
mov
int
sbb
adc
push
pop
cmps
add
xor
cmp
(bad)
xchg
shr
xor
and
data16
les
inc
ins
adc
mov
push
outs
in
jg
inc
imul
and
ss
jg
mov
ret
fiadd
jecxz
rcr
push
fisub
popa
and
cli
ror
dec
(bad)
jno
xchg
lea
addr16
ins
xor
leave
adc
add
sub
mov
inc
dec
sbb
in
icebp
push
sbb
cdq
dec
xchg
push
and
xor
inc
imul
std
xchg
pop
mov
add
xor
sahf
inc
lods
and
mov
pop
stos
mov
mov
push
arpl
stc
pop
out
mov
movs
jmp
sbb
repnz
or
pop
adc
xor
pop
shl
mov
add
xor
adc
sub
stc
test
and
pop
jge
stc
mov
jns
mul
enter
clc
stc
inc
xlat
mov
or
hlt
push
data16
lds
jne
mov
mov
shl
data16
adc
xlat
push
ss
pop
mov
push
ins
out
pop
cmp
xchg
fmul
(bad)
icebp
aas
mov
nop
pop
neg
jmp
jge
cmp
and
dec
xchg
leave
xchg
loopne
adc
cmp
cli
sbb
mov
hlt
out
push
pop
push
push
or
xor
and
cmp
pop
stos
(bad)
shr
leave
pusha
ret
jns
add
inc
mov
push
xchg
or
(bad)
and
daa
sub
or
and
loope
or
xchg
out
cmp
hlt
(bad)
(bad)
push
fild
sub
pushf
sti
sub
adc
shl
sbb
sbb
and
fidivr
cmp
loopne
xchg
(bad)
inc
arpl
sbb
pop
xchg
(bad)
arpl
inc
aam
jmp
stos
mov
mov
fcom
dec
lock
pusha
nop
icebp
lods
int3
jecxz
inc
pop
inc
sbb
push
and
shl
jns
jmp
or
sub
js
add
cmps
rol
adc
(bad)
ror
test
test
test
sbb
adc
adc
dec
(bad)
jmp
sbb
adc
pop
inc
lods
fistp
ins
push
hlt
xor
leave
not
aas
mov
pop
xchg
push
lds
mov
scas
xchg
ret
inc
aam
call
push
(bad)
cmps
mov
gs
mov
retf
dec
cwde
xchg
shr
idiv
ja
(bad)
dec
mov
repnz
dec
xchg
ins
nop
jno
and
cwde
cdq
add
mov
fadd
cmps
cdq
fadd
in
mov
(bad)
sbb
es
(bad)
sti
mov
out
adc
enter
jb
xlat
adc
dec
in
sbb
sub
repz
jp
les
dec
leave
fcom
test
jge
lds
fsubp
outs
mov
lock
movs
in
in
nop
out
outs
add
mov
push
push
call
imul
adc
adc
test
jns
das
aaa
inc
dec
in
out
push
pusha
dec
test
adc
mov
jecxz
shr
lods
dec
ss
push
adc
inc
sbb
adc
and
lock
das
cld
mov
sti
call
sub
lds
xchg
inc
aaa
outs
aam
lea
in
or
inc
in
call
and
jnp
cmp
add
cmp
mov
in
outs
mov
das
inc
sub
out
sbb
jo
out
xor
lahf
aaa
scas
daa
cmps
adc
pushf
mov
in
push
inc
push
push
aaa
imul
sar
std
push
call
int3
inc
jae
sar
mov
fbld
out
es
in
ret
popf
iret
mov
xchg
xchg
dec
push
(bad)
adc
loop
(bad)
jne
stc
add
mov
rol
in
cmp
fcomp
(bad)
mov
and
hlt
xchg
dec
mov
xchg
mov
push
fwait
pop
add
inc
jb
fwait
push
jg
adc
fstp
mov
jnp
adc
push
or
dec
inc
cdq
(bad)
sub
test
sbb
stc
sub
popf
push
pop
orps
sub
cwde
inc
mov
scas
dec
cmp
fmul
(bad)
cmp
or
and
(bad)
test
mov
pop
int
cmps
push
sbb
repnz
jbe
repz
push
cld
push
pop
ret
rol
sub
ret
pop
stc
fwait
xchg
pop
pop
xchg
repz
popa
fmul
cwde
cmp
push
sti
movs
inc
cmc
lea
cs
jecxz
fwait
std
xchg
adc
sar
xchg
or
sti
adc
std
iret
xchg
inc
jns
(bad)
loopne
sahf
inc
push
xchg
test
pop
cmp
vpaddusw
push
cmps
mov
jmp
mov
xchg
mov
lea
xlat
scas
pop
out
test
enter
jp
sbb
lods
data16
pop
cdq
in
add
or
mov
or
test
stos
pop
push
das
lahf
addr16
imul
sar
jns
dec
pop
xchg
xor
pop
enter
ret
push
jae
arpl
xchg
outs
lods
ret
rcl
jnp
mov
push
lods
dec
xchg
jb
aam
aam
test
out
jae
lods
cmp
fistp
rcl
rcl
rcl
ins
fwait
mov
(bad)
ret
sahf
pushf
hlt
xchg
cmp
ins
pop
out
push
ret
sub
and
add
aaa
ficomp
mov
push
imul
xor
push
movs
or
jns
mov
call
add
xchg
aam
push
mov
ss
push
pusha
fidivr
mov
pop
lea
mov
aaa
xor
xor
imul
add
ja
test
push
jl
or
fwait
mov
adc
pusha
rol
and
sbb
jbe
mov
xor
addr16
mov
pop
mov
js
add
call
mov
cmc
add
ret
jg
nop
push
mov
xor
retf
ret
dec
stos
nop
int
pop
jmp
pop
jmp
out
lock
cs
mov
data16
add
ins
inc
sub
inc
cs
xchg
stos
outs
enter
mov
loopne
jmp
jns
test
clc
push
jae
mov
enter
test
fcmovb
pop
add
cmp
sbb
daa
or
hlt
cmps
out
adc
xlat
popa
adc
call
les
xchg
dec
fsub
cmps
mov
or
dec
mov
in
jno
dec
out
ret
hlt
fadd
outs
mov
sub
aas
int
int3
mov
aaa
push
pushf
int
test
or
pusha
fdivr
jno
outs
mov
mov
sub
cli
retf
fdiv
repnz
add
cmc
jmp
lods
cld
pop
add
jge
imul
adc
sar
cwde
test
xchg
adc
or
sub
retf
jns
ret
jae
popf
cmp
out
inc
xor
leave
or
pushf
xor
cmp
mov
cdq
adc
add
mov
stos
and
inc
jmp
jne
sbb
dec
jmp
movs
sbb
adc
mov
(bad)
aaa
jae
jge
fisubr
xchg
pop
gs
loope
lods
fcmovnu
jns
int3
jns
push
mov
cmc
and
add
in
sub
sub
pop
xchg
retf
icebp
retf
ja
or
push
push
je
test
icebp
xor
mov
mov
das
nop
popf
xor
in
push
or
pop
xchg
in
loope
mov
dec
in
test
aaa
arpl
xor
imul
cmovnp
aaa
push
or
cwde
mov
je
ficom
cmp
das
fwait
dec
imul
pop
data16
inc
push
push
xor
popa
pop
sbb
inc
push
jmp
(bad)
ja
bound
jb
jl
rcl
stc
cmps
cmp
add
enter
lds
loopne
aaa
push
repz
pop
call
sub
lods
aaa
push
mov
hlt
call
xchg
lea
or
adc
adc
mov
jmp
adc
mov
and
jmp
sbb
jnp
cmp
sbb
jge
dec
inc
adc
cmp
lds
mov
dec
js
(bad)
aad
mov
stos
jae
in
fidiv
imul
test
aad
in
mov
cmp
or
mov
mov
lahf
das
imul
pop
add
jg
shr
adc
add
sti
(bad)
leave
ret
cwde
mov
jp
dec
(bad)
jmp
adc
ds
movs
dec
ret
fst
lahf
push
xchg
adc
sub
popa
or
and
loope
or
xor
lods
jmp
push
push
push
mov
mov
sbb
mov
fmulp
int
push
sub
mov
aaa
or
in
adc
retf
xchg
jge
in
mov
arpl
jo
xchg
out
mov
push
sbb
mov
call
inc
mov
clc
jecxz
add
dec
rcl
push
into
jmp
fldln2
jb
out
test
mov
cdq
aas
xlat
scas
sbb
ins
add
and
or
call
or
jo
call
dec
xlat
adc
mov
push
retf
mov
pop
xchg
and
(bad)
mov
pusha
pop
and
cli
cdq
sub
cmc
aas
dec
cmps
sti
repnz
int3
push
pop
scas
in
daa
ficomp
cdq
fld
(bad)
(bad)
xor
icebp
cmp
mov
and
or
sub
fstp
stos
inc
or
mov
xchg
pop
push
ss
loop
fstp
bnd
(bad)
push
sbb
rcr
fstp
call
or
out
pop
cmp
lds
xchg
fdiv
loopne
xchg
xchg
and
call
mov
jns
call
push
push
js
out
pop
daa
repz
pop
das
addr16
bndldx
rcl
mov
(bad)
jns
jae
popa
xor
sbb
inc
ss
and
jle
xchg
fs
or
xor
jp
dec
push
aad
jbe
jmp
sahf
cmp
or
pop
iret
arpl
and
out
inc
sahf
add
and
fld
xchg
push
jno
retf
(bad)
imul
push
mov
pop
cmc
rol
sub
mov
fwait
mov
cmp
movs
(bad)
ja
out
mov
sub
jle
sub
lahf
xchg
repnz
cmps
push
mov
jle
push
cmp
push
jns
jmp
mov
sbb
and
call
mov
bound
pop
adc
mov
imul
out
and
loopne
daa
ins
pop
in
in
int3
sub
cmp
ins
cli
iret
cwde
jno
adc
adc
mov
arpl
call
mov
retf
stos
mov
je
out
cmc
dec
xlat
mov
stos
test
lds
dec
sar
xor
xchg
outs
fidiv
or
xchg
in
inc
dec
pop
pop
dec
mov
xchg
xor
(bad)
and
je
push
adc
(bad)
mov
ins
fwait
mov
iret
ins
pop
call
cmp
cmp
inc
cmps
sbb
push
movs
jno
xchg
sbb
lock
cmp
icebp
inc
sbb
div
int
sbb
pop
in
call
jecxz
or
add
movs
test
push
lds
call
nop
push
enter
sbb
jno
xchg
std
in
jne
mov
xchg
cmp
xor
jno
shl
mov
add
pop
popa
clc
pop
xchg
loopne
add
cld
sbb
dec
repz
xchg
je
nop
imul
cli
lds
dec
shr
inc
sbb
cmc
jmp
xlat
or
loopne
sub
ror
xor
inc
ss
(bad)
(bad)
out
mov
ret
jle
daa
aaa
or
leave
aas
fisubr
pop
sub
es
inc
repz
jb
pop
ins
add
prefetcht0
mov
push
lods
mov
sbb
xchg
(bad)
push
into
add
and
imul
or
imul
and
shl
dec
push
fisttp
cdq
jg
out
dec
rol
cmp
in
and
xchg
out
test
in
hlt
mov
sti
push
xor
lods
les
add
loopne
dec
(bad)
cld
test
mov
push
dec
adc
aad
xchg
pop
in
fisubr
fnsave
nop
mov
jp
pop
ja
and
and
cmps
loopne
mov
jnp
cmp
mov
or
jmp
mov
test
imul
xlat
ficomp
fdivr
gs
fild
ins
dec
pop
hlt
inc
cmovbe
out
(bad)
std
call
lds
cmp
stos
push
mov
cmp
mov
lock
test
shr
xchg
sti
adc
aam
outs
mov
mov
sti
inc
sub
jg
inc
sbb
sub
and
add
popa
fnsave
mov
aas
aad
imul
or
pop
and
repnz
lods
xchg
mov
cmp
pop
cmp
add
test
jno
xor
push
adc
mov
adc
dec
movs
lock
inc
scas
sbb
jb
push
sbb
xchg
push
loopne
sbb
xor
daa
stos
ss
fld
lds
rol
mov
push
push
popa
xchg
jle
xor
xchg
jmp
xor
dec
mov
dec
mov
jecxz
imul
daa
mov
pop
iret
jge
call
out
add
mov
pushf
in
inc
nop
mov
push
into
and
sub
test
pop
dec
mov
retf
addr16
rcl
cmp
jle
mov
in
sahf
sbb
sub
inc
arpl
push
add
mov
mov
clc
(bad)
cli
retf
push
aas
mov
es
and
hlt
mov
push
fsubr
dec
fimul
aaa
push
and
stc
scas
push
(bad)
and
or
(bad)
jecxz
test
mov
(bad)
test
pushf
imul
aaa
jns
push
inc
xchg
into
movs
mov
push
mov
xor
(bad)
pop
mov
inc
or
clc
out
test
jmp
or
retf
jbe
in
xlat
cld
mov
mov
cmps
les
mov
enter
push
push
push
daa
jge
mov
movs
sbb
adc
js
les
mov
aaa
aam
or
or
add
pop
int3
and
dec
add
shl
dec
lea
push
xor
dec
jecxz
cwde
jbe
adc
mov
mov
hlt
aaa
icebp
gs
sub
or
lea
frstor
inc
mov
jmp
xchg
es
and
push
and
sub
ds
jmp
xchg
mov
imul
sbb
cmps
in
retf
outs
sub
mov
mov
mov
ins
jge
mov
push
mov
daa
xchg
aam
xchg
inc
mov
in
inc
xchg
push
movs
div
inc
cld
out
fisttp
sbb
mov
jo
cs
cmp
pop
ins
idiv
mov
sub
mov
push
pop
ror
mov
cmp
dec
loope
repnz
and
call
repnz
xor
iret
scas
call
popf
xchg
mov
push
aas
in
imul
sbb
stos
sub
pop
xor
pop
repz
aad
dec
cld
jno
dec
repz
arpl
inc
inc
mov
test
xchg
in
adc
fisubr
lock
sbb
adc
repz
xchg
stos
sub
xor
cmp
mov
add
mov
mov
out
stos
mov
outs
mov
leave
pop
inc
bound
das
scas
test
enter
push
xchg
retf
pop
xor
and
fsub
call
test
push
cmp
shr
ficomp
icebp
mov
xchg
or
ds
data16
imul
mov
pop
inc
push
mov
clc
push
jnp
ds
rcr
jmp
int
adc
mov
jae
iret
push
stos
cmp
call
(bad)
leave
and
stc
sub
pop
and
(bad)
cdq
xchg
cli
jl
inc
pop
cli
sub
fwait
jecxz
leave
cmp
adc
cmp
mov
into
jno
add
push
hlt
lds
neg
mov
int3
sbb
aam
repz
pop
jmp
xchg
and
pop
scas
jno
cmp
xlat
mov
or
shl
ja
mov
je
and
sbb
cs
sbb
jo
fnstcw
mov
test
pop
push
enter
mov
lahf
call
adc
retf
jnp
add
sub
push
stos
mul
push
push
push
cs
addr16
jns
cmps
aaa
outs
lods
xor
lods
call
cmp
push
jo
sbb
sahf
ins
test
add
out
les
(bad)
and
inc
mov
jno
pop
and
(bad)
mov
ret
sti
dec
add
movs
push
pop
mov
sbb
or
dec
sbb
xor
pop
out
ret
lds
aad
out
push
sub
daa
push
rol
loope
xor
jae
pushf
rcl
repz
sbb
pop
fs
inc
int
sub
js
xchg
das
loope
es
ret
dec
ins
sbb
push
xchg
mov
(bad)
loopne
jo
mov
jo
mov
icebp
or
sub
outs
inc
cdq
fwait
outs
push
sub
les
test
movs
ins
aaa
aaa
push
inc
clc
mov
(bad)
xchg
push
int
xchg
sbb
clc
aas
and
sub
push
int
repnz
xchg
mov
xchg
cmc
cmp
push
cmp
mov
cwde
or
adc
mov
xor
daa
mov
sbb
shl
ror
lahf
push
pop
push
rcl
and
imul
add
daa
jmp
mov
leave
iret
pop
repz
xor
cwde
jmp
mov
loop
xor
ss
xchg
xor
outs
sbb
fimul
or
iret
pop
loop
mov
dec
loope
jnp
jg
rcr
mov
push
es
ss
lahf
int3
sar
sbb
pusha
lock
and
mov
fisttp
ja
dec
retf
(bad)
push
mov
cmp
call
cmp
xchg
fsubr
shl
push
add
fwait
ds
sub
div
pusha
xchg
mov
icebp
add
jge
int
repnz
cs
icebp
frstor
add
jae
add
pop
xchg
mov
cmp
sub
jmp
jns
inc
(bad)
push
(bad)
ja
lods
add
mov
mov
data16
and
dec
sahf
jle
xchg
mov
and
js
in
dec
in
lea
repnz
jmp
jecxz
sbb
dec
ret
loope
es
rol
mov
dec
pop
cmp
mov
jmp
push
adc
mov
xchg
imul
daa
mov
mov
out
in
and
pushf
out
test
test
sbb
ror
mov
inc
push
xor
outs
(bad)
imul
arpl
pop
jmp
gs
cmc
jo
adc
pop
fs
inc
push
dec
push
rol
sub
mov
sbb
add
sti
(bad)
rcr
push
lahf
(bad)
das
mov
ficomp
add
(bad)
jmp
sbb
(bad)
mov
pop
test
mov
lods
in
mov
pushf
cs
stos
push
lods
cmp
cwde
icebp
inc
sbb
dec
and
hlt
mov
retf
cmps
dec
jb
test
push
pop
in
push
das
loopne
and
les
and
push
add
out
(bad)
mov
aad
js
imul
scas
dec
jnp
out
test
adc
sbb
push
sub
cmp
ror
int3
cmp
fnstenv
dec
aam
loope
je
push
mov
mov
cdq
lods
out
xchg
jbe
add
mov
xor
jecxz
adc
sub
push
leave
adc
sbb
and
jo
fst
cld
inc
aas
popf
add
sbb
outs
fsubp
cmp
pop
daa
popa
mov
in
fisubr
outs
stos
loop
add
pop
adc
call
iret
mov
pop
or
call
adc
or
push
inc
stc
clc
enter
neg
xlat
jnp
pop
mov
push
sbb
push
add
inc
scas
mov
push
adc
pop
outs
test
imul
loop
cmp
idiv
test
mov
xlat
mov
(bad)
lock
jl
call
movs
ret
jge
jl
in
stos
inc
pop
in
inc
stc
shl
dec
dec
cmc
and
jno
ror
ss
sub
adc
sbb
mov
hlt
push
repz
arpl
push
imul
jle
vmptrld
mov
ds
cvttps2pi
test
sub
jns
mov
push
movs
adc
add
pop
fld
hlt
sub
adc
or
rcl
xor
aam
or
mov
ds
jb
cdq
xor
in
sub
adc
sar
adc
popf
cwde
cmp
push
adc
fistp
sbb
outs
xor
ret
lods
add
mov
cmc
dec
adc
xchg
mov
mov
mov
jne
pop
enter
stos
in
and
loope
fs
inc
les
inc
mov
daa
dec
xchg
push
call
cdq
push
push
mov
push
mov
daa
mov
sub
retf
out
ficomp
push
pop
repz
xchg
daa
jbe
mov
xor
adc
mov
out
stos
xchg
sahf
ret
jae
xchg
cmp
or
ret
outs
dec
and
mov
pop
sbb
and
dec
scas
cmc
rcl
dec
nop
cmp
dec
and
and
cdq
je
xchg
push
jle
or
mov
ss
jno
scas
jl
sar
mov
cli
jns
mov
and
jg
xlat
cmp
mov
add
sar
or
nop
ffreep
or
sub
adc
mov
(bad)
sub
aas
shl
in
push
aaa
repnz
icebp
jl
imul
cmp
adc
or
push
ror
sub
sbb
or
lahf
mov
icebp
or
fwait
push
mov
lds
ins
test
inc
std
mov
xchg
jmp
out
cmp
inc
cmovl
cld
cmp
leave
movs
adc
in
jge
adc
inc
sbb
dec
dec
loope
lods
sub
mov
sub
jle
test
fstp
sbb
push
idiv
popa
adc
mov
pop
or
jae
fwait
mov
imul
stos
lea
inc
out
xchg
sbb
rol
cmp
inc
adc
xor
xor
pop
in
mov
fst
push
out
mov
sub
int
loope
mov
sbb
and
out
and
add
ss
jmp
jnp
gs
ins
fist
ret
dec
jo
and
or
test
push
ja
popf
adc
stos
sbb
stos
mov
mov
out
call
movs
mov
(bad)
xlat
push
mov
sbb
into
test
out
lea
push
xchg
inc
xchg
icebp
pminsw
stos
jnp
fs
lahf
pop
daa
cli
inc
cmps
cmpxchg
mov
add
movs
mov
out
in
xor
ins
js
push
sbb
xor
xchg
cdq
cwde
aam
push
mov
lea
dec
inc
bound
loopne
mov
int3
cs
stc
adc
scas
push
or
and
and
outs
out
cld
jns
push
jns
adc
push
jmp
push
call
jb
addr16
mov
inc
and
iret
jg
jnp
sahf
inc
inc
sti
out
out
xor
imul
jb
leave
in
xchg
jecxz
mov
and
dec
retf
icebp
jb
(bad)
cmp
push
or
mov
xchg
ret
mov
jo
and
out
std
in
outs
cmp
in
mov
clc
fldenv
rcr
sti
dec
sti
sub
adc
cmp
push
scas
xor
mov
aad
out
dec
int3
mov
inc
jg
add
jge
test
jle
cmp
sti
xor
jae
sub
cmp
pushf
jbe
imul
fnstsw
data16
int
aam
lahf
sbb
sahf
lods
stc
cmp
fisub
fidivr
lock
mov
cmp
std
dec
js
xor
pop
aad
popf
shr
mov
lods
sub
js
jg
cmp
test
test
(bad)
sbb
mov
dec
ror
leave
(bad)
fcomi
push
add
lods
mov
mov
lahf
out
add
shl
pop
cs
sub
loopne
jecxz
test
add
scas
add
adc
push
adc
outs
and
and
je
mov
stos
pop
fistp
and
cmp
iret
outs
and
stos
mov
pop
and
xor
and
retf
lock
fiadd
sbb
mov
or
retf
jp
xacquire
and
xchg
push
xor
dec
adc
cmp
sbb
shl
jbe
push
push
mov
fdivr
cli
push
daa
std
adc
xchg
sbb
ja
add
or
and
ins
mov
rol
je
les
or
xor
popa
jg
test
popa
repz
aaa
loopne
add
fld
xchg
cmp
fistp
or
fld
imul
xor
lods
loop
jae
es
pushf
mov
adc
cmps
fsubrp
and
test
mov
dec
cmps
xchg
call
dec
xlat
ret
not
push
adc
ret
xor
je
mov
mov
and
repnz
ret
enter
js
mov
adc
xchg
dec
mov
and
xchg
fcomp
adc
fstp
push
mov
in
xor
jnp
xor
sub
and
movs
add
xor
lock
sub
in
mov
call
dec
dec
inc
inc
jmp
sbb
movs
repnz
pop
leave
mov
ret
mov
mov
(bad)
cs
jnp
sub
pop
test
icebp
inc
cmps
mov
cdq
jbe
call
cmc
push
movs
jmp
mov
test
jg
mov
ror
or
(bad)
iret
mov
inc
not
inc
cmp
xchg
sub
jge
loopne
pop
jne
es
pushf
mov
popf
mov
(bad)
jmp
and
cli
mov
push
mov
sub
(bad)
push
retf
cmp
mov
xchg
fiadd
push
aad
sbb
cmp
push
repz
xchg
sbb
int
outs
mov
jge
es
mov
jge
sub
pop
lahf
js
xchg
icebp
in
and
sbb
jnp
sar
adc
test
or
pop
pop
adc
shl
scas
icebp
(bad)
pusha
push
bnd
mov
mov
lock
jnp
in
test
mov
push
mov
push
(bad)
rcl
mov
sub
arpl
push
sbb
imul
and
pusha
mov
call
pop
or
xor
mov
xchg
bound
jge
ffreep
out
ins
mov
sub
pop
mov
mov
jae
mov
adc
daa
xor
and
mov
bound
dec
mov
jae
push
adc
ins
sbb
fadd
cmp
std
popa
movs
pop
mov
add
pop
iret
pushf
push
js
stos
xchg
add
aaa
and
and
sub
jo
test
sahf
dec
push
adc
cmps
mov
jae
out
call
mov
ins
mov
adc
repz
push
icebp
jp
push
cmp
mov
add
cmp
fwait
movs
xchg
aam
cmp
jl
out
test
xchg
xchg
movs
inc
cmps
in
loop
push
sbb
xchg
cmc
icebp
lds
mov
mov
mov
inc
add
xchg
repz
(bad)
fwait
xor
push
adc
ror
call
inc
xor
xlat
mov
jl
cmps
in
xchg
mov
mov
push
imul
mov
sbb
add
(bad)
hlt
outs
pop
mov
mov
sub
and
jmp
jge
xlat
ret
fdiv
retf
(bad)
in
lds
std
mov
lods
shr
cmc
(bad)
mov
add
loop
data16
or
daa
add
xor
add
mov
adc
call
ror
stos
and
(bad)
imul
or
retf
cwde
jae
popa
ds
mov
add
les
jb
jo
jg
aaa
mov
inc
inc
jno
and
jo
xchg
inc
ins
adc
out
pusha
push
pop
push
and
mov
scas
adc
dec
add
stos
jns
je
sbb
in
cmp
bnd
cmp
xchg
outs
aaa
dec
push
xlat
mov
push
inc
imul
mov
fistp
pusha
xchg
add
push
imul
fldcw
repnz
xor
jge
sar
icebp
mov
iret
lds
sbb
jmp
scas
sub
xor
push
mov
mov
inc
sub
leave
fidivr
push
push
add
pop
push
push
and
inc
aas
shl
push
cmp
es
dec
and
pop
mov
stos
mov
pop
mov
sub
adc
xchg
lds
jno
sbb
and
cdq
jbe
add
xor
cmps
mov
or
test
icebp
dec
or
int
xor
or
int3
dec
stos
or
out
cmp
mov
out
jl
push
pop
movs
pop
call
inc
sbb
fwait
add
pusha
(bad)
xor
cld
pop
movs
imul
ss
cmp
xor
inc
cmp
retf
sub
push
mov
jne
idiv
js
pop
call
in
add
or
and
jl
mov
cmp
sti
inc
sahf
std
xchg
hlt
cs
loope
scas
xor
jecxz
cmp
test
pusha
mov
pushf
loope
fldl2e
fwait
dec
or
add
test
ja
(bad)
icebp
mov
jns
loopne
inc
dec
dec
in
add
mov
xor
lahf
sub
xlat
push
mov
cmp
pop
cmp
(bad)
enter
std
push
popf
mov
scas
test
lock
(bad)
loop
retf
ins
fsubrp
ret
mov
add
sub
add
repz
je
clc
stos
fistp
inc
gs
loopne
jecxz
inc
push
pushfw
dec
call
aaa
or
add
loop
push
gs
mov
mov
cli
repz
mov
or
rol
fwait
push
cli
cli
xchg
ret
es
xchg
inc
shl
xor
xchg
ins
hlt
jns
addr16
cmp
mov
and
clc
dec
sahf
add
push
add
pop
push
icebp
mov
or
daa
xchg
scas
dec
sub
xor
pop
je
lods
adc
loope
imul
imul
fs
xor
rcr
xor
fisttp
or
inc
dec
idiv
imul
cdq
into
pop
mov
push
hlt
and
pop
je
loopne
push
loope
pop
(bad)
(bad)
fisttp
shl
mov
xchg
lds
xor
jbe
ins
adc
cdq
(bad)
add
fbld
mov
int3
out
test
dec
pusha
dec
call
sbb
cdq
mov
ja
call
pop
icebp
or
jmp
add
idiv
xor
aad
adc
sbb
xor
push
push
mov
in
sub
push
mov
and
jl
inc
push
cmp
cmp
fstp
or
ret
into
ins
(bad)
adc
cmp
inc
push
xor
cmp
into
sti
ror
xchg
inc
pop
pushf
out
outs
retf
inc
or
les
shr
cmp
mov
jg
out
pop
int3
or
(bad)
jns
fwait
stos
das
or
mov
das
rol
fbld
xchg
js
mov
shl
bnd
xor
std
ds
imul
cmp
dec
xchg
push
rcr
call
cmps
inc
fld
lds
sbb
sub
retf
int3
inc
scas
es
pop
in
addr16
push
jns
(bad)
jg
inc
jp
mov
imul
es
imul
xlat
retf
xlat
mov
cdq
ficom
test
jb
dec
add
mov
jo
inc
sub
adc
(bad)
lock
sbb
(bad)
sbb
jle
xchg
pusha
push
mov
xchg
shr
push
xchg
test
adc
xor
sub
xor
jl
cmp
xchg
fnsave
in
xor
mov
xchg
stos
loope
inc
mov
lods
test
or
mov
cmps
xchg
jecxz
sub
outs
imul
leave
cmp
sub
mov
ror
xor
xor
jecxz
jl
sti
sbb
mov
mov
pop
ins
adc
or
popf
push
push
mov
mov
ds
mov
call
cmp
mov
pop
stos
(bad)
out
ror
sbb
into
mov
aad
sbb
push
jae
data16
test
inc
push
jbe
push
cmc
xlat
test
popf
push
hlt
mov
mov
inc
ret
mov
dec
cmp
nop
stos
sbb
cwde
cmps
ret
fst
into
push
shl
push
jo
inc
in
call
or
sbb
rcr
test
neg
cli
fild
and
shr
xchg
xchg
or
mov
adc
(bad)
xor
not
pop
dec
ffree
pop
(bad)
xchg
ret
das
jno
and
mov
mov
(bad)
aad
xor
pop
xchg
cdq
xchg
jmp
and
cmp
add
fimul
dec
sti
shr
or
cmp
sub
jge
cmp
mov
test
or
pop
retf
icebp
sahf
dec
nop
jno
jp
ror
movs
mov
or
movs
fwait
rcl
pop
dec
sbb
rcr
sub
cmp
rol
dec
pop
fld
fdivrp
leave
jmp
jns
call
cmp
sar
retf
adc
add
adc
mov
pop
xchg
ret
shr
ret
push
xchg
mov
sysret
mov
push
dec
and
adc
cli
cmp
cmp
ret
ja
outs
xor
fdivr
ss
lock
xor
aad
loope
stos
xor
xor
sub
pop
jae
pop
lods
addr16
iret
cmp
xchg
(bad)
lods
cmp
aas
in
sub
cld
into
push
out
mov
jl
mov
inc
lods
pop
add
imul
sub
sbb
lahf
fdivr
out
fdivr
inc
mov
push
or
int3
dec
push
push
mov
cmp
out
test
sbb
and
mov
jmp
fnstsw
sti
clc
sub
adc
pop
or
call
retf
pop
or
push
into
data16
jl
xchg
sbb
lods
js
fcomp
(bad)
nop
data16
cld
and
jle
inc
sbb
dec
push
or
fsubr
jnp
push
dec
stc
pop
pop
outs
push
inc
lock
loopne
or
pop
lods
mov
mov
call
rol
sti
mov
push
cmp
outs
jbe
into
push
cmp
sub
ror
lods
cld
hlt
push
iret
ret
sbb
das
jecxz
cmps
cmp
xor
call
xchg
jns
pop
xchg
jecxz
and
cmp
mov
push
push
push
adc
mov
pop
pop
retf
cmova
jge
loope
(bad)
movs
inc
mov
hlt
stc
stos
(bad)
icebp
int
mov
ins
pop
sub
imul
popf
arpl
cli
sbb
xchg
and
call
repz
call
out
or
mov
xchg
lods
ror
and
add
sbb
fistp
stos
or
sub
xchg
addr16
imul
jp
sub
test
call
push
inc
xchg
scas
or
jl
inc
add
aad
gs
jle
ds
adc
aam
scas
arpl
mov
mov
repnz
jl
mov
cmp
scas
je
cld
mov
sbb
ds
mov
and
inc
sub
dec
test
push
into
adc
adc
(bad)
in
ins
sbb
cmp
lahf
pcmpgtw
or
jnp
add
or
xchg
ins
nop
fcom
mov
iret
out
cmp
in
pop
stos
mov
inc
addr16
add
cdq
jbe
add
std
add
sub
inc
jg
and
pop
sub
sbb
mov
push
mov
xchg
xchg
mov
xchg
sbb
cmps
test
jecxz
rol
lods
jmp
call
js
mov
fdiv
jle
and
xor
dec
(bad)
xchg
popa
pop
and
add
sub
pushf
or
cwde
scas
dec
je
mov
mov
add
sub
in
pop
add
mov
or
(bad)
cmc
test
es
xor
sub
stos
adc
xor
push
xchg
and
and
fwait
lahf
pop
scas
imul
bound
lods
ja
call
(bad)
rep
out
outs
cmps
stc
mov
mov
in
mov
pop
rol
ror
lds
jmp
push
jge
addr16
scas
out
arpl
mov
idiv
pop
stos
jnp
cdq
pop
(bad)
sbb
aad
mov
push
push
add
imul
xchg
mov
push
sub
int3
fwait
xchg
inc
outs
add
jns
(bad)
add
add
jmp
push
ja
jp
fcmovnb
xchg
mov
nop
sar
xchg
out
add
inc
mov
push
call
add
inc
call
test
pop
scas
xchg
push
pop
push
inc
pop
cmp
gs
add
add
sub
(bad)
aas
push
push
test
stos
js
pusha
ss
stos
mov
gs
(bad)
imul
fbstp
cmp
add
jl
sub
push
push
cs
lea
(bad)
pushf
ja
mov
or
jmp
ss
push
(bad)
cmp
aad
stos
dec
das
ja
sub
inc
mov
cmp
shr
dec
mov
mov
push
test
jp
neg
xchg
adc
out
pop
add
xor
pop
into
test
sbb
xchg
jecxz
(bad)
aaa
xor
retf
jne
daa
loop
lahf
mov
movs
in
sbb
enter
mov
fnstsw
ror
fwait
arpl
cmp
xchg
inc
xor
js
push
cmp
mov
stos
mov
loopne
and
xlat
inc
xor
aad
pushf
lea
outs
psubw
rol
dec
xchg
jl
xchg
jp
stos
mov
popfw
mov
mov
add
aam
cmp
ss
xor
xchg
imul
mov
or
mov
mov
push
jb
mov
or
xlat
icebp
jmp
pop
retf
fnstenv
ss
in
and
or
add
jne
sub
push
pop
and
jne
sbb
sub
ins
aas
popf
mov
inc
loope
adc
std
pusha
pop
xchg
pop
sbb
std
in
js
daa
shr
loop
hlt
jb
and
inc
icebp
or
in
or
mov
ficom
adc
fidiv
aaa
jo
dec
sub
push
adc
out
jge
loope
dec
repnz
push
lock
mov
xchg
adc
jl
jb
mov
fldcw
jecxz
add
cmp
pop
add
sbb
imul
pop
mov
xchg
fisttp
lds
pop
int
dec
es
sti
jecxz
es
or
push
cmps
mov
jno
cmc
xchg
add
push
add
(bad)
sbb
test
shl
(bad)
aam
sbb
call
xchg
xchg
pop
or
(bad)
mov
cmp
lahf
lods
xchg
xchg
and
add
int3
push
add
jp
add
scas
cwde
pop
movs
pop
loopne
ins
dec
add
ret
pop
iret
mov
dec
jb
add
cmps
xchg
mov
xor
icebp
aam
dec
add
repnz
inc
mov
dec
out
mov
out
imul
(bad)
mov
pop
and
or
xchg
lods
out
jmp
dec
push
or
mov
mov
inc
mov
cmps
push
xlat
sub
sub
enter
mov
fstp
iret
popa
adc
sbb
dec
fs
push
pop
repnz
retf
pop
xchg
stc
imul
or
enter
es
adc
cmp
push
sbb
cld
fwait
pop
or
jb
or
and
jnp
mov
(bad)
hlt
jle
add
mov
dec
hlt
arpl
xchg
push
rol
mul
pop
cmp
enter
xor
test
fcomp
or
push
int
and
xlat
std
in
and
pop
dec
repz
(bad)
fnstenv
mov
stc
popa
inc
int
mov
add
pop
and
and
or
mov
fisttp
enter
xor
lock
push
cmp
packssdw
or
sub
mul
fld
mov
outs
mov
das
fmul
sbb
push
sbb
pusha
lds
aas
and
fsubr
pop
add
jle
sub
sbb
jae
xor
loope
fisub
and
push
jmp
xchg
outs
in
hlt
repz
adc
xchg
push
push
push
adc
cdq
add
jge
pop
jns
mov
mov
adc
and
xchg
push
xor
out
fild
rcr
push
dec
ja
pop
mov
dec
stos
jbe
mov
fistp
mov
mov
mov
push
enter
ret
int
xor
idiv
or
pop
sbb
pop
je
push
(bad)
jne
cmp
aam
jb
add
sub
mov
leave
and
cs
mov
aam
rol
mov
hlt
das
inc
xchg
mov
push
inc
repnz
jno
pop
icebp
or
mov
repnz
push
hlt
push
mov
enter
cmp
gs
push
mov
mov
xor
test
scas
cmp
and
hlt
push
pop
mov
mov
mov
mov
push
adc
rcl
cli
xchg
leave
jmp
push
enter
test
stos
sub
push
mov
mov
jns
(bad)
jmp
test
inc
mov
add
das
adc
dec
sub
retf
pop
jb
and
js
mov
pop
add
dec
daa
or
pushf
xchg
nop
aad
dec
cmp
inc
rol
loopne
pop
test
xchg
jae
inc
daa
sub
loope
lds
(bad)
dec
mov
and
and
inc
retf
xchg
jmp
(bad)
xchg
dec
mov
rcl
mov
mov
popa
fs
rcl
add
mov
int
mov
or
mov
inc
fisub
and
leave
xlat
mov
xchg
jnp
or
and
imul
add
inc
mov
pop
pop
lock
mov
mov
push
mov
cmp
cmp
mov
jne
jns
add
mov
test
call
and
call
cmps
in
dec
xchg
shl
test
and
sti
test
jbe
mov
rcr
mov
mov
adc
sub
jb
jne
inc
push
jnp
xor
jno
pop
ret
mov
dec
into
lea
jnp
test
aaa
mov
retf
dec
sbb
mov
cmp
fist
imul
test
(bad)
leave
pop
jbe
movs
cli
xchg
dec
(bad)
or
xchg
loope
mov
mov
adc
test
in
jmp
cmp
into
ins
fwait
retf
enter
imul
loopne
jl
pop
jecxz
pop
mov
out
and
sub
xor
jg
xor
out
mov
pop
jbe
mov
xchg
xlat
jmp
movs
sbb
mov
fisttp
mov
xchg
jl
out
jne
or
push
mov
aas
inc
cmp
jno
mov
clc
adc
add
inc
inc
test
jnp
lock
(bad)
adc
or
and
retf
(bad)
dec
cmp
lods
lahf
ret
cmp
inc
dec
enter
and
or
les
dec
cwde
out
cmp
jb
ret
dec
repnz
xchg
sti
fist
jnp
(bad)
sub
sbb
cld
push
stos
add
adc
and
stos
push
jmp
adc
mov
inc
mov
dec
hlt
mov
movs
ja
pop
xlat
xor
(bad)
jbe
je
sbb
cmp
dec
mov
retf
mov
xor
aad
xor
leave
push
inc
mov
xchg
shl
cmp
jg
xchg
adc
dec
mov
imul
mov
ror
xor
dec
mov
adc
mov
aas
inc
xor
and
lahf
mov
add
std
loope
sbb
cli
sbb
ret
pop
xlat
push
push
inc
jecxz
sbb
add
popa
enter
mov
ret
fist
mov
aad
std
ins
and
inc
push
call
cmps
xchg
sub
xchg
mov
xchg
sbb
movs
ficom
nop
xor
inc
add
repnz
and
ss
lock
aam
out
(bad)
ss
inc
arpl
pop
cmp
jg
pop
gs
aam
adc
in
pop
cmp
push
retf
div
cs
shl
cld
dec
enter
pop
push
rcl
or
leave
fld
(bad)
out
jl
inc
pop
sbb
sub
pop
fld
ror
clc
mov
sbb
test
nop
rcl
jmp
jbe
push
mov
jmp
add
addr16
inc
sbb
lahf
or
mov
jae
cmps
push
pop
ds
add
add
cmp
bnd
mov
pop
dec
mov
shl
fnsave
mov
push
jl
inc
cmc
lods
ret
test
cli
sbb
popa
push
dec
jmp
pop
cmp
rcr
cdq
inc
and
int3
repnz
aaa
adc
pop
xchg
loop
gs
sub
mov
mov
mov
adc
jle
pop
out
lahf
pushf
je
(bad)
(bad)
dec
push
clc
sub
jg
lods
mov
jp
data16
xor
dec
lahf
or
or
movs
dec
test
fimul
(bad)
jle
mov
scas
sbb
add
es
or
rcr
and
nop
enter
dec
ds
loopne
xchg
js
les
and
jle
ret
and
dec
ret
(bad)
aad
mov
ds
test
add
push
not
jecxz
cmp
clc
int
pop
pop
push
mov
js
sbb
(bad)
jmp
mov
imul
xor
cmp
clc
push
hlt
test
sub
push
mov
nop
stc
outs
xor
outs
xor
cmp
cmps
loop
adc
xor
movs
fwait
xchg
adc
outs
int
test
adc
into
xor
in
jp
cmp
(bad)
fstp
and
nop
dec
sub
test
mov
cmps
sar
mov
pop
aad
test
push
inc
xor
cmp
mov
cmc
std
xlat
xor
adc
or
(bad)
out
push
xor
mov
mov
stc
(bad)
cmp
inc
lods
lods
fst
call
aas
cvtdq2ps
aam
cli
(bad)
jl
aad
xor
jbe
cmc
aad
ds
jne
adc
setnp
retf
rcl
ins
not
fmul
mov
das
jg
pop
movs
sbb
sbb
int3
(bad)
sti
pop
call
push
adc
add
sub
ret
popa
mov
call
les
sbb
sub
inc
bound
push
dec
dec
div
pop
and
sbb
adc
je
imul
push
mov
or
in
xor
mov
cmove
cdq
leave
xchg
ret
or
lahf
out
in
test
adc
js
pop
pop
sar
sub
mov
shl
lea
xor
outs
fwait
(bad)
loopne
cmc
mov
push
sub
pavgb
push
or
dec
pop
pusha
sar
xor
es
fist
imul
inc
and
test
add
fwait
mov
ficomp
into
xchg
inc
pop
ja
ds
inc
push
mov
ret
and
aaa
dec
adc
inc
in
dec
mov
pop
(bad)
rcr
call
pop
inc
push
inc
jmp
ret
movs
imul
lods
(bad)
pop
test
int
pop
pop
jmp
inc
mov
icebp
pop
cmps
mov
mov
push
lahf
mov
loopne
inc
jb
mov
(bad)
ins
fistp
mov
dec
mov
sub
daa
das
repz
push
or
dec
mov
jae
fdivr
dec
iret
or
stos
int3
repnz
test
mov
cmp
add
inc
dec
enter
cmp
pop
mov
xchg
push
pop
fwait
mov
cmp
sub
sub
bound
cmp
xchg
fcmovu
vsqrtss
and
adc
fnstsw
dec
(bad)
shl
out
inc
cmps
pop
retf
ret
jmp
nop
cmp
xor
jge
mov
add
inc
mov
adc
cwde
inc
imul
and
pusha
dec
daa
pop
add
out
cld
std
sub
sub
jge
sbb
jns
push
inc
mov
in
ja
jno
(bad)
cmp
pop
sbb
add
pop
xchg
and
jne
sub
ret
into
sti
jb
bound
mov
es
data16
(bad)
cmp
fbstp
imul
push
cdq
jl
push
test
repnz
faddp
add
jae
add
push
pop
aas
daa
add
or
arpl
out
push
sar
cmp
cli
outs
out
mov
adc
cs
push
into
daa
mov
jp
arpl
inc
das
clc
cwde
mov
js
push
mov
icebp
shl
call
mov
shl
add
or
popa
and
cmp
imul
iret
(bad)
pop
or
inc
jne
cdq
add
rcl
jge
and
fiadd
mov
mov
adc
adc
mov
jo
mov
inc
mov
jmp
pop
push
inc
dec
shl
jecxz
sbb
in
pop
lds
int
iret
dec
(bad)
shl
stos
and
inc
jmp
and
sub
or
cmc
js
jb
jp
cmps
adc
xor
jl
push
or
pusha
xor
adc
arpl
pop
out
loop
push
jae
xor
and
(bad)
and
les
adc
aam
enter
scas
sub
dec
jno
adc
jle
inc
push
push
repnz
jmp
test
push
clc
loope
in
xor
or
test
cmp
mov
ss
call
push
cmp
pop
out
ficomp
sub
nop
loopne
add
jne
dec
add
movd
sub
mov
stc
mov
imul
popa
jg
icebp
jle
xor
shl
adc
cwde
mov
data16
xchg
cmps
dec
bound
out
push
ins
fldcw
call
inc
ja
adc
popa
movs
mov
iret
cld
mov
and
mov
adc
dec
sub
add
mov
ret
jmp
clc
popf
inc
sub
in
icebp
or
movs
dec
xor
push
mov
fld1
das
(bad)
and
imul
xor
inc
popf
mov
pop
inc
lods
stc
cmps
mov
repnz
sub
shl
sbb
(bad)
inc
xchg
inc
and
mov
or
pop
gs
jg
mov
mov
movs
add
mov
xor
push
popa
popa
jmp
or
call
lea
orps
sbb
sbb
dec
or
cmps
cmp
hlt
test
jge
dec
iret
fnstsw
lds
sbb
and
repz
sub
push
je
or
cmp
pop
sbb
retf
add
xor
mov
loope
repnz
jmp
push
fbstp
loop
push
and
clc
rep
ror
sbb
xor
push
pop
(bad)
xor
mov
ret
mov
lods
cmp
retf
sbb
pop
xor
sub
rcr
clc
das
hlt
les
imul
pusha
push
and
jb
push
and
or
mov
scas
mov
jns
dec
stos
jns
outs
cmp
cli
cmp
les
(bad)
mov
mov
(bad)
iret
pop
mov
adc
sbb
push
retf
sahf
shl
xor
lods
xchg
js
pop
int3
sbb
jmp
push
cmps
(bad)
js
int3
sbb
sbb
mov
aas
xchg
test
xchg
ins
jae
or
mov
imul
add
adc
mov
xchg
lds
outs
xchg
cs
mov
jge
sub
jne
fmul
or
pop
xchg
jbe
fstp
fst
jl
push
in
idiv
push
clc
scas
mov
lods
push
cmp
mov
and
add
push
sbb
jp
cmp
lods
mov
pop
xor
dec
add
push
mov
cmps
and
mov
sahf
cmp
icebp
xchg
dec
call
pop
in
xchg
rcl
mov
stos
movs
stos
out
mov
sub
inc
cld
push
mov
jg
mov
xchg
nop
stos
adc
lea
push
and
and
imul
push
xchg
test
aam
dec
scas
in
out
add
aad
pop
aad
(bad)
cmc
stos
pop
jg
adc
cmp
sbb
and
inc
lods
rcl
mov
dec
xor
sub
in
imul
into
mov
push
xchg
hlt
cmp
or
iret
aad
cmc
pop
cli
mov
data16
outs
push
push
sar
inc
jl
dec
out
add
xor
cmc
(bad)
fsubr
out
jmp
lods
sbb
cli
xchg
lahf
mov
jl
and
outs
shl
fldcw
popf
bswap
stos
outs
fidiv
je
in
xchg
adc
imul
adc
popf
xor
mov
mov
and
jo
outs
inc
test
repnz
push
xchg
hlt
jmp
sbb
cmp
jmp
pop
int3
ins
inc
xchg
xchg
xor
cmp
and
xchg
aas
adc
mov
loopne
fimul
adc
dec
push
xlat
ficomp
sub
(bad)
loope
xchg
(bad)
sub
adc
not
into
add
std
popf
cmp
or
fdiv
fxch
shr
xor
sub
aaa
xchg
test
in
sar
xchg
mov
ret
retf
or
cmps
dec
ja
aas
out
mov
cmp
jo
fnsave
fild
adc
adc
ss
fs
mov
mov
push
arpl
xlat
dec
sub
jbe
pop
xor
pop
add
mov
sbb
std
or
mov
xchg
sub
rcr
push
ror
fstp
and
cmps
adc
sub
pop
and
push
jecxz
repz
arpl
xchg
ds
std
dec
xchg
push
jmp
or
push
leave
push
inc
inc
(bad)
fldcw
mov
out
aad
xor
cmp
xor
je
mov
(bad)
retf
pop
pop
jae
(bad)
ins
cli
shl
lock
enter
pop
sti
jae
ins
cmps
je
mov
sbb
mov
cmps
pop
imul
pushf
push
jns
inc
add
inc
bound
dec
or
movs
ret
test
leave
and
test
sbb
repz
jno
mov
repz
or
inc
ins
xor
fstp
sbb
cwde
mov
sub
repz
arpl
or
in
pop
in
sub
call
mov
shl
adc
cmp
test
mov
jnp
ret
out
out
mov
daa
pop
dec
mov
loop
cmp
repz
test
mov
jnp
push
jae
data16
imul
les
scas
shl
push
adc
retf
leave
(bad)
imul
and
cmp
inc
je
add
sub
sub
into
cdq
xor
fisttp
push
cs
xchg
lods
inc
jne
out
mov
push
test
retf
push
xor
adc
not
push
add
mov
and
cdq
jle
dec
push
sti
or
ret
inc
leave
retf
pop
pop
iret
xchg
call
scas
or
hlt
xlat
jmp
mov
xor
shr
xchg
mov
dec
mov
xchg
lods
xchg
std
adc
mov
jecxz
push
shl
neg
stos
cmc
and
iret
ins
repz
fnstenv
loopne
scas
setbe
aas
sbb
pop
xchg
push
dec
not
pop
out
in
dec
scas
jge
outs
jno
mov
fwait
jg
mov
dec
ins
add
mov
sbb
out
push
fild
imul
push
sub
pop
or
adc
pushf
nop
daa
mov
add
dec
sub
pop
fisttp
push
or
into
pushf
daa
(bad)
int3
inc
sub
(bad)
fisubr
or
jns
sub
jbe
test
hlt
push
mov
adc
jle
xchg
imul
cdq
mov
sahf
jae
mov
stc
mov
rol
test
push
pop
mov
pop
aam
sbb
xor
push
pop
iret
pusha
loop
add
or
xlat
das
out
es
cmp
adc
fisub
mov
jne
or
fist
push
mov
movs
cmp
ja
(bad)
sbb
adc
jmp
jp
dec
or
mov
js
and
cmp
pop
fucomip
cmps
jae
push
in
mov
test
mov
push
ins
push
xchg
jb
add
xchg
push
mov
push
clc
pop
xchg
push
hlt
cmc
push
gs
and
push
je
push
sbb
xor
fldcw
loop
movs
in
sub
shr
mov
sub
xor
jo
add
movs
movs
xchg
call
inc
push
cmps
cmp
loop
(bad)
not
sahf
(bad)
repnz
xor
xchg
movs
sbb
(bad)
cmp
pop
sahf
adc
mov
sti
outs
push
js
mov
cmc
ins
mov
add
and
sub
cli
pop
and
fidiv
add
adc
sub
aas
ss
push
inc
ret
add
sar
push
inc
loope
sbb
push
inc
fstp
fs
ja
mov
mov
push
cmp
fidiv
adc
(bad)
mov
push
xor
or
xchg
iret
lock
retf
mov
inc
scas
sbb
imul
and
stc
mov
(bad)
sub
lahf
pop
lea
push
ds
call
inc
aas
sahf
fidiv
sub
sar
or
loope
in
repnz
dec
dec
adc
dec
or
adc
pop
cmp
fdiv
jnp
xchg
xchg
jg
fimul
mov
push
xchg
dec
mov
cmps
cmp
inc
xchg
std
hlt
xchg
cmp
mov
dec
sti
push
sar
sbb
icebp
imul
or
(bad)
scas
into
or
cmc
ds
ffreep
icebp
outs
loop
popf
cmp
or
sbb
jge
inc
hlt
xchg
jo
xchg
pop
jo
shl
xchg
mov
call
fsubr
retf
sbb
mov
xchg
xchg
in
shl
dec
lea
popf
push
and
aas
xor
xlat
lock
dec
inc
lds
clc
dec
jp
pop
xchg
dec
(bad)
xor
sub
pop
movs
dec
xchg
loopne
jo
add
rol
jp
inc
pop
dec
lock
mov
inc
pop
out
mov
cld
jo
out
push
hlt
xchg
inc
cld
adc
xchg
and
mov
push
push
les
mov
test
push
pop
jge
leave
add
mov
mov
push
nop
cmc
out
neg
sub
fld
ja
mov
sbb
jecxz
into
leave
xor
or
mov
or
mov
cmps
and
int3
imul
pop
loope
mov
pop
jmp
inc
inc
ins
xor
push
jns
aas
adc
aaa
mov
mov
sub
ss
xor
cdq
loop
or
sub
loop
leave
pop
push
inc
mov
mov
shl
pop
popa
mov
rcr
lds
xchg
xor
loope
stos
jns
dec
retf
inc
mov
xor
xchg
mov
dec
into
nop
scas
aad
push
mov
imul
mov
mul
mov
retf
int
mov
std
xchg
or
nop
pop
mov
lahf
jo
jnp
jp
jb
or
xlat
ins
clc
ins
mov
ficomp
icebp
sub
mov
jmp
call
pop
add
sub
add
mov
das
and
adc
and
stos
sbb
cmp
xor
push
out
dec
stos
jl
add
imul
xchg
xchg
mov
xchg
and
bound
(bad)
iret
mov
or
cmp
mov
jecxz
fmul
sub
add
add
int
or
retf
js
ins
loopne
xchg
xor
pop
inc
outs
imul
jns
movs
jge
pop
mov
cmp
int
add
cmps
fwait
sub
pop
pop
iret
gs
out
and
(bad)
mov
sbb
xor
je
les
cmp
pushf
xor
ja
fbstp
lock
ficomp
jl
xchg
in
ins
lea
sar
or
jle
push
cs
mov
mov
sbb
fisubr
in
aaa
mov
sahf
mov
shl
pop
loop
xor
popa
fidivr
leave
call
inc
lock
jg
int
mov
div
leave
push
jns
or
xor
neg
pop
inc
mov
rcl
jne
retf
dec
pop
lahf
or
fst
xor
xor
and
xchg
cmps
sub
mov
aad
iret
fisubr
(bad)
cmps
push
or
dec
or
inc
fcmovne
inc
stos
inc
in
aam
push
push
add
mov
arpl
loopne
xchg
or
pop
popf
aad
js
xchg
sub
(bad)
jl
gs
lahf
imul
dec
or
sbb
xchg
cdq
mov
and
repz
leave
(bad)
leave
mov
ss
push
mov
xchg
movs
or
and
dec
lods
loope
scas
adc
int3
xchg
mov
or
pop
shr
mov
ret
add
xor
mov
popa
and
iret
imul
add
push
les
pop
je
imul
xchg
repz
push
or
movs
bound
jecxz
mov
les
push
sbb
add
hlt
cmp
and
sbb
(bad)
and
icebp
sub
or
sbb
cmp
sbb
xchg
xchg
dec
test
and
mov
push
pop
mov
retf
retf
ret
add
imul
retf
shl
int3
dec
or
sbb
xchg
fnstsw
rcr
cli
sbb
fwait
int3
lods
imul
cmc
aas
add
xor
into
pusha
imul
inc
xchg
push
ins
dec
pop
inc
dec
mov
inc
mov
scas
xchg
push
dec
or
mov
xchg
out
cmp
frndint
lods
repz
jne
dec
movs
je
mov
xchg
add
shr
out
cmp
int
sub
out
xor
jge
lahf
mov
jbe
inc
daa
fidivr
les
rcr
mov
sub
mov
jge
fimul
call
sbb
js
hlt
ins
or
xor
xchg
sub
jl
or
adc
adc
xchg
test
lahf
or
sbb
push
adc
retf
outs
push
cmp
push
sub
test
jo
aaa
shr
add
es
pop
jno
mov
add
popf
and
mov
mov
sub
and
add
push
add
icebp
xor
test
inc
dec
xor
retf
adc
dec
and
pop
push
movs
and
stc
nop
(bad)
mov
daa
mov
jb
jne
mov
mov
dec
cs
and
push
aas
pop
mov
and
(bad)
ins
cmp
icebp
adc
sbb
or
mov
jno
fld
popa
sbb
test
std
cmp
and
jb
xchg
stc
xor
adc
inc
bound
cmp
fwait
dec
push
sahf
out
jne
ins
add
mov
cli
sub
jmp
ins
pop
mov
lea
pop
push
shr
pop
sbb
int3
scas
pop
cld
xor
jb
sti
add
jmp
add
push
and
jmp
adc
stc
mov
mov
mov
call
je
sub
int3
xchg
mov
ret
jmp
(bad)
cli
mov
inc
mov
cmps
push
or
pop
stos
jae
cmp
movd
push
xchg
xlat
shl
and
aas
push
add
push
ins
sub
jne
out
push
cmp
into
sbb
mov
inc
mov
pushf
movs
and
test
cmp
mov
pop
fdiv
pop
or
ins
daa
adc
sub
jbe
pop
pusha
pop
pop
ror
nop
cmc
out
sbb
add
dec
outs
mov
jp
fld
mov
xchg
mov
mov
xchg
jo
add
fsubp
and
hlt
out
out
fcmovnu
xor
nop
push
nop
les
inc
smsw
mov
mov
pushf
inc
lods
mov
adc
pop
dec
jmp
xor
movs
int
adc
jnp
repnz
sub
pop
pusha
jb
test
jecxz
ins
out
xlat
gs
neg
inc
pushf
cmp
loope
push
fnstcw
xor
fisubr
cmp
jl
in
fiadd
pop
mov
mov
pushf
add
pop
daa
jl
xor
iret
push
cdq
mov
ins
adc
mov
jl
aad
pop
xchg
jns
sub
push
sbb
sbb
xchg
pop
or
xor
sub
inc
xlat
aas
or
or
mov
and
cmp
mov
popf
add
popf
push
hlt
xchg
pop
adc
add
add
xlat
mov
pop
mov
adc
fs
cmps
movs
dec
lds
inc
xor
mov
and
stos
push
or
clc
jp
add
inc
inc
jnp
dec
std
xor
mov
addr16
pop
xor
pop
ss
and
jg
and
cdq
out
ja
pop
out
hlt
push
mov
retf
jg
mov
pop
jg
dec
pushf
hlt
out
push
sub
sti
call
ins
mov
push
repz
push
pushf
les
pop
aas
jmp
retf
mov
mov
or
mov
cmp
sub
loop
dec
and
lea
mov
popa
xchg
inc
ret
jb
sti
cmp
xlat
sar
mov
jns
sbb
outs
shl
loop
lds
inc
xchg
jns
bt
or
inc
cli
not
xchg
popf
push
out
pop
dec
push
test
push
mov
jns
cmp
shl
stos
xlat
xor
mov
xchg
dec
into
mov
mov
es
push
into
push
push
or
sub
shr
fdivr
push
jecxz
add
(bad)
in
(bad)
adc
adc
fucom
cmp
adc
or
jle
loop
sar
push
pop
pop
cmps
aad
hlt
jl
adc
push
call
xchg
xor
fimul
std
jmp
mov
cli
dec
inc
mov
mov
mov
mov
xlat
sbb
xchg
jne
jne
hlt
aas
xchg
add
jp
jl
dec
inc
es
add
push
ins
mov
xchg
cdq
adc
hlt
or
xor
xchg
adc
mov
mov
inc
sub
sub
sub
jg
mov
inc
jg
int3
adc
jmp
sub
mov
ins
int3
jp
inc
popf
pshufw
enter
sub
sub
ds
mov
jmp
popa
cmps
idiv
cld
in
lahf
cmp
add
and
aam
jle
mov
mov
push
lods
aad
sub
pop
cwde
cmp
sub
xor
into
push
cmp
ins
and
ja
fwait
sbb
sets
and
mov
test
ret
xor
cwde
and
push
call
or
inc
je
(bad)
mov
cmp
xchg
push
dec
or
mov
jge
les
popf
jl
repz
xor
arpl
dec
iret
push
sbb
push
ins
stos
adc
fisub
jmp
outs
push
das
call
je
mov
or
popa
mov
daa
ja
test
xchg
push
fs
les
mov
call
jecxz
cmc
push
jo
pop
jno
inc
and
adc
push
sub
mov
mov
addr16
stos
test
ins
add
das
sbb
cmps
pop
push
loope
iret
and
cli
adc
mov
loope
hlt
mov
arpl
pushf
add
lock
mov
fdiv
les
test
pop
pop
mov
cmp
jnp
sbb
inc
adc
scas
xlat
out
sub
pop
popf
sbb
movs
push
jae
popa
(bad)
loopne
or
addr16
jno
out
mov
(bad)
scas
mov
and
pop
jmp
jne
push
fcmovnb
push
ret
stos
mov
dec
movs
add
iret
push
(bad)
mov
xchg
xchg
mov
add
ret
pop
and
arpl
scas
push
mov
cwde
and
or
mov
dec
push
ss
mov
sbb
lods
or
and
js
and
ret
int3
fnstenv
jnp
jecxz
sbb
mov
scas
fs
scas
popf
mov
adc
jge
jo
or
lahf
mov
and
mov
repnz
in
js
push
data16
xor
xchg
leave
push
xlat
mov
inc
jle
repnz
mov
add
stos
xchg
mov
add
sti
ret
out
ins
clc
lea
sub
xchg
popf
push
fdivr
sbb
and
es
inc
cs
jp
jg
push
dec
dec
call
adc
sbb
pop
lods
pop
pushf
cli
and
or
xor
fcom
fsub
out
cmc
iret
iret
pop
push
xor
pusha
out
mov
xchg
sub
push
cmps
and
mov
outs
xchg
mov
popf
(bad)
sbb
outs
xchg
inc
sti
int3
jg
push
jae
xrstors
aas
inc
(bad)
in
push
xchg
pop
repz
mov
rcl
ror
mov
xchg
js
pop
xchg
push
mov
pop
(bad)
pop
(bad)
in
xchg
sar
pop
cli
push
(bad)
lds
push
sbb
mov
and
jmp
and
cli
aad
and
adc
and
outs
add
sbb
lods
lea
retf
add
sbb
cwde
movs
cmp
pop
scas
hlt
(bad)
mov
ret
and
out
stos
push
cld
mov
add
sbb
lea
pusha
js
es
add
mov
mov
les
ret
(bad)
int
sub
inc
mov
test
je
cdq
lods
adc
xlat
aad
pop
pop
inc
xchg
cmps
ss
pop
or
cdq
and
pop
jnp
scas
push
push
add
jnp
popa
into
cmc
jo
mov
movs
xchg
loop
jo
shr
push
or
es
iret
add
or
or
add
ret
repz
lea
xchg
sub
scas
bound
jbe
mov
movs
scas
(bad)
push
ins
fdivr
add
pop
call
or
pop
push
xor
adc
push
xor
loop
dec
xlat
xchg
mov
cdq
fld
std
neg
pop
ja
inc
cli
xchg
sbb
mov
popf
cmp
ror
mov
outs
or
inc
call
mov
mov
in
int
adc
gs
inc
mov
sahf
and
adc
out
stos
in
(bad)
dec
pop
sub
test
js
adc
mov
mov
pusha
ror
cmc
rol
inc
push
push
jns
add
popf
outs
lods
mov
cwde
cdq
dec
or
sbb
mov
push
fnstcw
shl
(bad)
jmp
pop
popa
pop
or
xchg
call
pushf
mov
fdivr
sti
sub
popf
push
mov
push
xchg
int
dec
mov
xor
mov
fcom
loopne
aas
in
push
jmp
adc
movs
inc
sbb
mov
mov
push
retf
mov
jns
ror
sbb
sbb
pop
psrld
mov
push
test
aaa
sbb
jmp
dec
jge
test
or
pop
pushf
jo
or
jne
pop
adc
ret
ins
ds
pop
mov
jl
and
test
and
mov
adc
jg
icebp
pop
mov
cwde
inc
sbb
mov
xchg
dec
fsub
cmp
cmp
popa
jle
xor
xchg
adc
sub
mov
pop
sub
(bad)
pop
mov
pop
idiv
sbb
addr16
push
push
out
xor
neg
jo
dec
aaa
fmul
movs
mov
mov
out
cmps
xor
push
pop
cld
test
mov
lods
or
loope
enter
cld
sub
mov
push
xchg
adc
leave
push
outs
lea
rcr
in
jp
cmp
scas
gs
lods
loopne
imul
aaa
xor
(bad)
xor
out
sub
jecxz
and
test
(bad)
pop
iret
js
mov
push
leave
in
shl
jae
xor
mov
iret
push
loopne
lods
lods
and
les
add
or
or
jmp
or
inc
mov
and
dec
clc
or
ins
mov
fdivrp
scas
and
push
xlat
cmp
cmp
mov
not
cmp
les
iret
jns
ja
lock
sahf
fwait
shl
les
dec
idiv
sub
addr16
repz
dec
pop
ficom
stos
movs
aas
dec
dec
xchg
movs
inc
test
cmps
mov
stc
aas
arpl
sar
fs
pop
push
imul
or
fist
sahf
xchg
outs
daa
fwait
xchg
nop
outs
icebp
add
jnp
cmp
mov
push
sbb
mov
push
das
or
ss
or
loope
push
or
movs
lock
push
add
sbb
push
push
ret
mov
call
fwait
lds
ss
scas
add
addr16
ds
lods
mov
dec
sbb
inc
(bad)
hlt
dec
xchg
inc
sti
xlat
retf
icebp
test
clc
inc
(bad)
jmp
xchg
pop
mov
ror
stos
ja
sbb
ds
outs
cmp
shr
div
iret
arpl
adc
xchg
inc
mov
and
mov
popf
push
add
or
push
js
add
dec
pop
xchg
(bad)
mov
xor
out
jnp
push
adc
inc
cmc
jbe
out
cwde
popf
cmps
xor
adc
xor
(bad)
sub
or
outs
sti
mov
cmp
cwde
mov
and
jo
xchg
jb
std
push
out
ud1
dec
cmps
lds
dec
xchg
fisubr
jb
ja
ja
xchg
jae
std
lods
lods
retf
idiv
push
retf
rol
and
aas
mov
xlat
ret
mov
or
push
push
or
pop
cmp
sub
xchg
pop
(bad)
icebp
pop
sbb
xor
mov
mov
loopne
jb
cld
push
push
mov
inc
mov
test
fwait
inc
in
nop
jp
pushf
jmp
loopne
dec
mov
sub
cs
push
mov
aaa
repnz
xchg
inc
mov
test
inc
cs
push
popa
into
xchg
dec
in
sti
loope
jbe
fnsave
bound
in
cwde
sub
sbb
lods
mov
push
loop
in
sbb
xchg
arpl
test
mov
ss
fdiv
das
push
sbb
add
add
retf
or
cmps
test
jns
inc
fidiv
enter
and
mov
test
pop
fld
and
and
pop
and
mov
or
aad
cmc
jne
pop
mov
jo
lods
inc
xchg
xchg
cmp
cmp
adc
jmp
inc
push
pop
push
stos
in
icebp
add
fisub
push
add
out
fdivr
adc
sbb
das
dec
add
or
add
jle
xchg
and
inc
cmc
enter
pop
(bad)
loop
daa
mov
cmps
out
std
jmp
and
call
dec
inc
fcomip
dec
mov
pop
fiadd
not
pop
dec
fwait
sub
push
call
dec
and
out
adc
inc
mov
inc
mul
imul
loope
and
push
mov
mov
xor
gs
mov
push
out
fsubr
xchg
repnz
mov
aas
cmp
mov
scas
cmp
push
dec
jo
mov
xor
mov
aaa
imul
push
cmp
loop
sub
out
adc
pop
mov
mov
push
sbb
pop
cli
xchg
mov
imul
mov
pop
cmps
iret
inc
test
cdq
jae
xor
jnp
add
cmps
xor
ja
or
es
xchg
pop
pop
stos
out
sbb
push
pop
addr16
icebp
imul
xchg
or
repnz
in
lea
aas
mov
push
jle
mov
inc
fwait
aaa
bound
cmp
aas
test
push
or
mov
test
sbb
dec
sbb
jge
inc
stos
mov
pop
adc
add
xchg
cmp
test
cdq
es
aam
sub
jmp
fnstenv
mov
mov
lods
xor
not
repnz
imul
pop
aad
mov
nop
push
in
aas
jecxz
mov
and
test
and
out
cld
lock
push
imul
into
add
mov
sbb
les
in
pop
mov
mov
or
inc
mov
lock
xchg
pop
cli
cld
jae
cli
or
repz
cdq
in
in
(bad)
ds
pop
add
bound
mov
or
out
xchg
pushf
daa
inc
mov
movs
adc
adc
jo
adc
in
in
lock
and
xlat
lods
repnz
in
mov
xlat
je
dec
sar
lahf
into
pop
xchg
out
push
push
adc
out
adc
hlt
adc
mov
shl
jne
cmp
jmp
les
in
outs
fiadd
retf
adc
push
fdiv
cmp
add
cmp
ret
pop
and
rcl
jge
loop
popf
enter
jae
sbb
test
jno
leave
imul
sbb
xor
movs
std
dec
mov
cmp
clc
cmp
cld
fild
jne
call
ja
pop
cs
pop
lock
push
lea
mov
data16
or
cs
lock
sub
fwait
and
mov
push
rol
cmp
adc
push
inc
in
cmps
adc
or
stos
push
jne
(bad)
lds
sub
repnz
inc
and
fldcw
test
(bad)
jns
or
adc
mov
sbb
jnp
stc
jp
pop
jmp
mov
pop
ins
addr16
pop
push
arpl
mov
mov
test
dec
cdq
ds
stos
dec
ss
add
retf
xchg
out
lods
mul
sbb
aad
pop
jb
push
xchg
stos
gs
push
das
lahf
push
pop
neg
in
xchg
xchg
repnz
les
or
sub
pop
mov
mov
dec
cmp
pop
cdq
(bad)
in
jl
aas
stos
retf
cld
ins
jb
lock
pusha
ins
les
pop
and
or
lods
loop
pop
nop
and
mov
lods
jp
push
jne
push
or
jg
jmp
loope
in
cmp
stc
js
aam
call
scas
and
daa
mov
cld
sub
les
in
fnstcw
jns
mov
lock
data16
retf
popa
xchg
jmp
xlat
sub
outs
pop
inc
pop
loope
xchg
loopne
sub
inc
pop
inc
jnp
jbe
dec
mov
retf
repnz
sub
rol
and
or
aad
aam
aam
pop
sbb
std
loope
pop
loopne
dec
cmc
add
mov
sbb
pusha
fistp
repz
jg
in
cdq
add
inc
jno
sub
adc
xchg
xchg
or
lods
ret
jno
or
lods
ins
xchg
fadd
push
outs
in
add
push
lea
mov
popa
or
pop
gs
mov
push
aad
call
ds
add
sbb
psrld
add
shr
shl
ds
iret
ror
xchg
xor
add
lea
movs
retf
out
cld
(bad)
xor
push
jl
push
mov
nop
stos
pop
outs
push
sub
fcomp
loopne
cmc
add
mov
mov
push
xchg
dec
adc
movs
pop
and
sbb
dec
xlat
mov
xchg
shl
mov
outs
add
gs
dec
cli
xor
mov
mov
stos
lea
inc
mov
sub
lea
or
sbb
xor
pop
jns
cdq
jmp
imul
or
sti
out
jb
icebp
sub
fdivr
add
push
xor
in
cld
xor
pop
sub
jmp
adc
cmps
jecxz
push
or
xchg
push
int
shl
test
out
repz
inc
pop
add
out
imul
cli
out
std
clc
(bad)
jg
xchg
out
dec
inc
jnp
test
jne
jle
shr
xchg
jmp
inc
imul
push
jge
icebp
les
retf
jb
pop
cmp
push
and
in
or
mov
mov
inc
shl
out
or
sub
sub
inc
dec
scas
icebp
mov
sbb
and
dec
das
mov
les
pop
dec
fimul
sub
in
gs
mov
cmc
cmp
(bad)
ret
sub
dec
adc
xchg
sbb
add
pop
push
add
fistp
cmp
test
and
and
sti
aaa
pop
enter
jl
enter
push
adc
cmps
and
xchg
xor
cmps
lahf
xor
shl
ins
xor
dec
push
fdivr
xchg
inc
jmp
jae
inc
movs
rol
(bad)
stc
mov
inc
iret
push
push
mov
retf
mov
mov
cmp
out
rcl
pop
test
loopne
scas
and
or
ja
xor
jge
adc
inc
adc
ins
gs
mov
sahf
out
dec
sub
jmp
mov
mov
jmp
pop
push
ss
sbb
loopne
(bad)
sbb
mov
or
imul
stos
les
sub
mov
rol
jmp
xchg
pop
bound
jle
ror
out
add
mov
out
dec
and
outs
jnp
out
lods
pop
dec
xchg
jo
mul
clc
ret
mov
stos
movs
xor
lods
push
mov
inc
cmp
pop
xchg
(bad)
push
xor
inc
pop
fistp
sbb
lds
imul
out
adc
mov
aas
mov
aam
fwait
xchg
fstp
scas
add
mov
pop
push
je
je
adc
int3
cdq
xchg
pop
dec
or
movs
das
stc
cld
ja
fst
std
ss
sub
fld
or
and
inc
pop
jns
xchg
adc
mov
retf
lahf
outs
xor
dec
cmp
mov
mov
inc
or
push
int3
inc
in
xchg
sub
loope
out
in
lods
rcr
or
movs
scas
adc
call
push
aad
ins
stc
xor
mov
dec
adc
adc
repz
fldenv
push
pushf
jmp
jne
inc
xchg
mov
mov
pop
loop
ftst
xor
daa
push
jmp
test
int
sahf
aas
jp
mov
inc
cmp
in
cdq
mov
in
cs
add
pop
add
out
cli
cmp
sub
or
aad
jmp
fcomp
shl
push
mov
inc
mul
sti
or
in
es
inc
jns
fld
ins
mov
(bad)
popa
retf
pop
loopne
sub
add
sbb
jmp
fcmovu
jb
jecxz
sbb
lods
xlat
pop
sub
repnz
jne
mov
sbb
xchg
xor
or
pusha
xchg
mov
sbb
and
sub
push
pop
jae
xor
dec
mov
js
out
add
jle
jl
fsub
dec
add
(bad)
fisub
or
xor
arpl
mov
leave
push
js
push
push
test
xchg
lock
cwde
pop
lods
popa
adc
ror
push
dec
bound
add
gs
add
sbb
mov
jmp
outs
pop
dec
sar
inc
xchg
fdiv
out
shl
dec
ret
push
bnd
sbb
movs
xchg
imul
leave
cld
out
popf
add
lods
pop
lock
addr16
sbb
lea
dec
out
pusha
out
bound
cmp
cli
push
sub
dec
nop
in
jp
test
repz
push
dec
cmp
push
ins
sub
mov
shl
xor
je
and
lahf
pop
ror
push
sub
cmp
jnp
pcmpgtd
fmul
pop
je
lahf
inc
loopne
jae
push
pop
sub
push
inc
pop
pop
xchg
shr
push
hlt
mov
out
scas
hlt
fstp
addr16
out
jb
in
mov
mov
stos
xor
repz
mov
inc
leave
arpl
cmp
lds
push
pop
bound
movs
ficomp
push
pop
and
and
mov
dec
and
xor
push
mov
(bad)
mov
js
dec
adc
aas
sub
sub
stc
push
sub
scas
push
adc
jns
push
jne
sub
dec
fiadd
(bad)
mov
neg
mov
pop
arpl
jo
sti
loope
or
sbb
xlat
jle
dec
popa
enter
shr
call
push
pop
push
mov
arpl
mov
or
imul
jle
inc
movs
es
inc
dec
xor
lods
aam
les
sbb
imul
xor
mov
imul
cmc
popf
cdq
xchg
mov
call
jge
mov
out
sbb
mov
mov
jecxz
lea
(bad)
sbb
cmc
fcom
jecxz
cli
mov
jno
repz
or
cmps
or
xchg
out
mov
jge
pop
and
inc
push
mov
mov
nop
loope
outs
scas
push
hlt
jge
ins
fld
movs
aas
dec
mov
xor
(bad)
mov
lods
pusha
fwait
cmp
cmps
retf
mov
add
loop
int
xchg
inc
push
xor
pop
test
enter
sti
in
mov
stc
icebp
sbb
inc
mov
imul
dec
and
push
loopne
inc
add
loope
sub
inc
mov
aad
daa
ds
cmp
sub
push
repnz
pushf
pop
pop
lahf
jae
inc
sub
cmp
loope
push
xchg
(bad)
loop
push
fst
mov
mov
cmp
and
es
jmp
pushf
shl
(bad)
push
lahf
scas
sar
add
pop
dec
in
icebp
sahf
inc
leave
push
add
cli
rcl
jno
add
sti
repz
and
fiadd
out
(bad)
nop
add
daa
lds
inc
fsub
daa
fdivr
aad
mov
xor
mov
mov
xor
add
sbb
xor
shl
icebp
dec
adc
out
sub
pushf
test
sub
fcompp
jmp
add
adc
jge
enter
cli
bound
jb
daa
fst
sbb
out
sub
xchg
and
pop
ss
jnp
mov
aaa
push
pop
mov
int
int3
cmovno
lods
pushf
les
aam
(bad)
xchg
or
push
int3
(bad)
cmp
cld
inc
nop
jle
sub
jp
aaa
dec
xchg
(bad)
iret
mov
inc
jns
ds
inc
mov
test
and
fld
jae
cmp
xchg
call
sar
or
fistp
adc
push
vpsubd
add
add
loopne
fadd
loop
xchg
ret
pop
test
outs
sbb
shl
xchg
mov
adc
out
push
mov
xchg
add
mov
jbe
push
fnsave
cmp
ret
mov
mov
cmps
pusha
jecxz
mov
mov
inc
jne
imul
push
outs
dec
stos
mov
pusha
and
cwde
lock
sub
xchg
sbb
jnp
inc
mov
arpl
mov
inc
(bad)
mov
dec
(bad)
mov
inc
add
mov
repnz
movs
and
mov
cmp
pusha
push
jp
iret
mul
gs
jae
loope
or
sahf
mov
loop
(bad)
and
or
enter
push
pusha
(bad)
es
jb
xchg
jnp
xchg
inc
iret
call
adc
lods
cmp
sbb
inc
ss
jmp
cmp
int
pop
and
pop
pop
add
inc
and
sub
jecxz
mov
(bad)
adc
xor
add
jl
retf
arpl
out
adc
and
retf
(bad)
std
sbb
dec
neg
cmc
lods
int
or
arpl
mov
sbb
js
or
sti
and
jle
mov
in
dec
lds
fdiv
sbb
mov
sahf
pop
sbb
mov
ja
dec
and
sbb
xor
ss
cmp
pop
inc
mov
cmps
xchg
stc
ins
lds
sub
xor
jmp
cwde
js
aas
pop
mov
cs
mov
cmp
dec
xchg
imul
pop
out
sub
adc
xchg
loope
int
add
pop
repz
inc
fdivr
fisubr
test
mov
into
mov
inc
cmp
cmp
jns
div
jg
dec
mov
dec
xor
mov
call
sbb
xchg
jg
mov
jb
mov
das
mov
or
pop
mov
dec
dec
dec
jp
mov
xchg
mov
jnp
cmps
pop
out
mov
inc
scas
jb
shl
jl
std
loope
sbb
in
or
push
outs
fnsave
loope
xchg
rcl
xchg
fs
ffree
(bad)
cmps
loop
and
in
ss
push
mov
aas
pusha
inc
sti
dec
icebp
or
cld
imul
mov
mov
clc
xchg
add
cmps
movs
leave
cmp
cmps
pushf
and
xor
sar
div
sbb
mov
xor
imul
mov
ja
or
(bad)
scas
cld
popf
into
inc
or
xchg
mov
jmp
rcl
pop
dec
xor
neg
movs
mov
pop
fcmovbe
dec
jmp
inc
cmp
js
dec
mov
pop
call
cmp
sar
les
fimul
and
leave
pop
and
mov
push
dec
xor
mov
sbb
mov
test
js
xlat
out
dec
sti
inc
jbe
inc
and
dec
cs
movs
jg
loop
rcr
sub
sbb
cmp
cwde
dec
gs
stc
sub
dec
loopne
mov
mov
cwde
push
mov
adc
call
mov
ss
inc
jno
(bad)
lods
(bad)
(bad)
ja
mov
mov
jae
jae
mov
(bad)
movs
push
out
imul
in
lds
mov
lods
mov
clc
push
fwait
xor
mov
sub
add
in
jae
adc
pop
pop
dec
(bad)
sbb
fsubr
sbb
addr16
and
aaa
out
mov
(bad)
les
(bad)
jo
mov
out
cmps
movs
pop
scas
lods
jnp
xchg
into
add
call
mov
cld
and
pop
and
dec
adc
iret
je
and
inc
adc
scas
xlat
iret
(bad)
mov
ja
sbb
mov
cmp
pop
xor
xchg
pop
test
adc
stos
dec
daa
xchg
cld
pop
cmp
mov
xchg
sbb
cdq
imul
fiadd
dec
xchg
sbb
sub
lock
call
cld
sbb
ret
out
in
sar
enter
rol
sbb
xor
dec
lock
jns
rcr
mov
pop
retf
int3
jle
gs
dec
sbb
pusha
pushf
mov
mov
sbb
sbb
in
xor
mov
cmp
inc
xor
cmp
ds
pop
sbb
dec
add
inc
or
mov
cmp
ja
gs
dec
push
icebp
jp
in
dec
jo
lods
pop
or
addr16
cmp
cwde
mov
ret
xchg
hlt
push
loope
mov
fimul
adc
inc
gs
pusha
xor
and
rol
cmps
in
add
push
xor
and
adc
jmp
dec
sub
mov
enter
jb
out
lea
test
jno
fimul
push
and
pop
fucomi
(bad)
mov
xor
mov
and
lds
js
or
mov
add
dec
imul
dec
inc
jp
out
xchg
fwait
loop
pop
add
pop
stc
gs
cmovne
pop
inc
outs
sti
test
inc
push
fwait
xchg
scas
push
enter
jecxz
fimul
mov
jge
add
(bad)
jnp
dec
push
gs
cmp
js
xchg
out
int3
fs
inc
fs
jmp
retf
stc
mov
les
shl
test
jmp
adc
mov
and
sti
iret
repnz
test
cmp
fisub
xor
lods
and
mov
xchg
push
sub
dec
sub
repnz
mov
js
cmp
inc
mov
sbb
cwde
push
xchg
cmp
add
inc
jns
movs
mov
or
sbb
xor
mov
xor
push
adc
mov
retf
sahf
mov
xchg
pop
icebp
data16
jle
cmp
jns
jle
shl
aas
adc
idiv
(bad)
fild
or
arpl
cmp
mov
and
repnz
dec
cld
jns
jmp
jl
ret
in
and
mov
xor
out
in
out
cdq
aad
or
lea
and
addr16
data16
icebp
aad
jno
cmp
or
inc
cmp
inc
loopne
inc
cdq
or
push
retf
ds
loope
stc
pop
pushf
or
gs
fmul
cld
lea
hlt
xor
aaa
cmp
loopne
shl
mov
push
out
cli
jecxz
pop
scas
xor
dec
mov
mov
push
ds
adc
sub
xor
test
aad
addr16
adc
xchg
aad
sahf
(bad)
dec
fwait
into
add
jae
mov
adc
cmp
inc
inc
and
js
adc
mov
inc
clc
jmp
add
icebp
idiv
scas
fild
push
mov
mov
xlat
dec
ficomp
xchg
cld
fs
call
rcl
mov
push
jno
fidiv
xor
in
mov
cmp
add
xchg
scas
jno
lods
push
xchg
xchg
out
cmp
(bad)
in
cmp
push
xor
inc
nop
pop
dec
in
into
jp
mov
inc
outs
sti
lods
aas
fwait
jl
fcmovnu
sbb
mov
icebp
(bad)
and
sbb
jb
pop
adc
stc
or
test
xchg
mov
repnz
xor
mov
inc
out
add
or
inc
jo
jns
bswap
pop
enter
retf
fidivr
mov
mov
cmps
add
add
pusha
jmp
jnp
ds
add
push
pop
sahf
leave
ret
rol
(bad)
rol
mov
cwde
xchg
call
cdq
mov
ret
in
cmps
retf
lock
ficomp
das
scas
jbe
and
add
repnz
inc
lock
mov
pop
and
mov
xor
js
mov
xor
sbb
aaa
dec
cld
popa
pop
adc
ins
adc
pop
and
cli
mov
in
dec
aaa
jb
cmp
cmp
xor
test
(bad)
scas
mov
jne
js
add
ror
adc
std
push
xlat
sub
pop
jle
js
mov
pop
mov
xlat
fisub
or
dec
adc
in
cmp
int
es
jno
pop
imul
adc
jge
repnz
cmp
daa
jne
lods
push
mov
and
fwait
and
fistp
xor
adc
(bad)
adc
sbb
clc
pushf
loop
les
jp
(bad)
or
pusha
stos
(bad)
pop
stos
test
imul
mov
lods
sbb
lahf
pop
sbb
mov
adc
fs
aas
fwait
outs
(bad)
call
mov
jmp
pop
mov
ret
nop
(bad)
jg
dec
cmp
fild
add
pop
js
clc
push
mov
mov
push
and
push
mov
dec
dec
call
adc
adc
mov
or
push
mov
pop
jecxz
or
jp
hlt
lahf
mov
sub
retf
arpl
and
fldenv
das
sbb
into
sub
hlt
test
loope
mov
sbb
pop
in
pop
jnp
sti
mov
sahf
inc
adc
mov
mov
or
in
scas
push
push
ja
shl
xor
lds
lahf
fisttp
rcr
(bad)
(bad)
(bad)
popa
lahf
repnz
scas
test
pop
mov
pop
adc
idiv
mov
dec
in
in
scas
xchg
int3
sbb
pop
ror
cmps
adc
leave
out
xor
inc
(bad)
cmps
inc
ss
daa
and
(bad)
fbld
cld
push
retf
mov
fmul
imul
and
hlt
jae
mov
call
dec
push
je
mov
fs
sbb
xchg
mov
mov
add
hlt
retf
jmp
out
cmp
dec
jne
fwait
mov
sbb
cmp
psubq
js
cmc
mov
(bad)
jg
or
das
(bad)
out
je
xchg
dec
mov
sbb
sti
push
push
out
jno
cmps
push
aad
pop
jp
pop
or
daa
mov
imul
aam
out
add
int
arpl
movs
pop
shl
mov
xchg
xchg
es
sub
xlat
cmp
sub
add
xchg
in
out
mov
push
cmp
fstp
mov
popf
in
mov
sub
std
push
push
ss
or
fldcw
scas
mov
sub
popa
or
xchg
cwde
repz
pop
pop
inc
popa
dec
nop
mov
mov
imul
sub
mov
int
mov
leave
aad
xchg
cli
lds
jmp
push
and
xlat
imul
popa
xchg
cmp
mov
inc
mov
cmp
sub
jno
mov
cmp
jne
adc
in
in
xor
add
(bad)
pushf
out
add
nop
out
inc
pop
pop
ret
sbb
xlat
mov
jle
out
xchg
hlt
ror
inc
push
mov
mov
xor
in
jne
mov
sub
add
test
cwde
test
xor
mov
dec
ret
lock
push
out
loop
outs
inc
mov
jns
cmp
(bad)
scas
pop
dec
popf
ja
arpl
xor
loope
loop
mov
mov
add
and
cmps
add
sahf
jle
retf
pusha
xchg
ficomp
fcomp
adc
fdiv
sahf
movs
sbb
jge
repz
inc
add
xchg
ret
mov
jl
(bad)
fcmovu
out
cmp
mov
inc
adc
imul
jae
call
test
ret
push
aas
fcmove
inc
js
adc
iret
call
clc
rcr
xchg
ret
cmp
in
(bad)
xchg
aam
out
mov
arpl
dec
sbb
mov
xchg
pop
sbb
cli
cmc
sar
jo
cmp
add
or
clc
jo
inc
das
jae
or
loop
xor
xchg
mov
movs
add
jp
in
push
mov
aad
into
enter
cld
cwde
pusha
out
mov
pop
pop
dec
daa
leave
aaa
sub
inc
push
mov
daa
pop
xlat
push
pop
fsub
jl
loope
imul
push
in
je
pushf
mov
div
cwde
xchg
inc
adc
add
fcmovnbe
xchg
sub
sbb
gs
inc
mov
sbb
outs
xchg
iret
into
call
int3
push
dec
pop
lahf
jnp
mov
adc
xchg
pop
lods
mov
jle
stos
inc
and
or
sahf
mov
mul
leave
mov
fwait
outs
xchg
mov
adc
test
ds
push
pop
xchg
push
mov
imul
iret
(bad)
and
(bad)
repz
mov
xchg
out
or
call
fwait
mov
retf
inc
enter
sub
mov
push
jg
cmp
jns
or
sbb
xchg
xlat
xor
sahf
test
adc
bnd
sub
xchg
aas
xchg
push
or
mov
xlat
mov
and
mov
loope
shr
mov
ret
mov
push
mov
cld
in
push
push
xchg
xor
mov
sbb
ds
sar
xor
es
cmps
sahf
mov
pop
cs
in
cmp
je
xchg
mov
xor
imul
adc
pusha
and
cmps
out
xchg
push
pop
sbb
sbb
out
lock
cli
pop
pop
clc
cs
ins
push
sti
cmp
movs
inc
sbb
push
xor
sbb
and
outs
push
mov
pop
mov
clc
jle
push
sbb
sti
jl
jnp
and
jo
out
cmps
mov
lods
(bad)
mov
mov
pop
(bad)
mov
sub
hlt
loopne
xor
daa
inc
out
push
fwait
jmp
les
dec
dec
and
sbb
jae
rcl
popf
lock
add
hlt
hlt
inc
lods
js
int
xor
test
inc
jnp
or
rcl
cmps
mov
dec
xchg
std
push
mov
inc
xchg
pop
ret
(bad)
pop
sub
mov
pop
cmc
fild
mov
test
mov
fdivr
repnz
inc
js
movs
outs
xlat
cmp
das
nop
cmp
pop
into
gs
push
aaa
retf
mov
leave
mov
(bad)
(bad)
add
inc
movs
pop
mov
adc
jecxz
je
cmc
sbb
fwait
mov
sbb
pop
out
in
pop
ja
mov
push
fnstsw
dec
sar
mov
xchg
in
or
pusha
ss
dec
push
add
int3
lahf
xchg
mov
or
add
(bad)
xchg
add
xor
cdq
xchg
mov
dec
cmp
pand
mov
xor
xchg
ret
repz
adc
stos
lock
test
retf
xor
(bad)
rcl
sar
mov
or
jg
mul
pop
and
(bad)
mov
cmp
sti
(bad)
lock
inc
test
lods
xor
mov
xor
cmps
xor
dec
(bad)
aas
ins
cmp
out
(bad)
lock
or
sub
mov
jo
loop
mov
gs
xor
gs
pop
lea
adc
push
enter
add
ins
ins
sub
loopne
std
add
inc
push
push
xchg
pushf
js
enter
cld
inc
sbb
mov
shr
push
shl
dec
loope
add
fmul
lds
fisub
outs
int
mov
cld
jmp
add
cld
cwde
inc
sub
mov
jecxz
mov
pusha
cmp
inc
jne
sbb
repnz
in
(bad)
fsub
nop
adc
dec
jmp
cmps
and
xchg
jno
cmp
add
rcl
push
jno
inc
jecxz
outs
push
icebp
and
mov
push
aam
leave
lea
adc
scas
out
ficom
dec
pop
int3
aaa
push
std
dec
test
fs
mov
inc
test
pop
add
in
pusha
(bad)
xchg
sub
gs
mov
cmps
lds
jno
jmp
pop
dec
push
psadbw
(bad)
xor
fcom
inc
scas
jnp
jp
cmp
mov
in
push
loope
adc
sub
cdq
out
lods
test
pop
sub
jle
xor
or
xchg
add
into
mov
dec
mov
inc
rol
add
dec
xlat
into
fbld
ins
xchg
cmp
xchg
pop
scas
aam
idiv
aaa
pop
jl
pushf
mov
mov
xor
push
lods
adc
pop
push
jbe
mov
out
movs
cmps
sbb
(bad)
out
jb
sub
dec
pop
xlat
xor
dec
push
repnz
jae
cmp
ja
jecxz
jnp
gs
pop
ja
sbb
mov
js
push
inc
into
cmps
mov
ret
or
int
pop
enter
pop
jle
outs
cmp
jge
js
fist
xchg
es
jnp
addr16
(bad)
mov
(bad)
test
cmps
mov
pop
push
out
jecxz
xor
mov
fwait
add
lea
in
inc
ins
call
out
jmp
inc
jo
xchg
sub
mov
adc
test
push
and
lahf
movs
sar
ret
jae
mov
and
sbb
rol
aas
xchg
and
jmp
je
jne
mov
jnp
mov
call
ret
aas
aaa
int
xor
aad
icebp
add
mov
lods
adc
int3
push
call
mov
popf
push
loope
mov
int
dec
mov
mov
nop
pop
repnz
out
jno
add
test
stc
fsubr
pusha
out
pop
loope
pop
les
pop
lods
std
popa
hlt
adc
push
cmp
std
sbb
ss
sbb
aam
dec
int3
out
cmps
pop
(bad)
fdiv
mov
pop
ficomp
inc
push
mov
inc
les
cmp
push
and
test
arpl
cmp
push
repnz
pop
(bad)
pop
nop
pushf
push
cld
sub
xchg
mov
jo
xchg
push
inc
adc
(bad)
mov
pop
sub
bound
mov
mov
cmp
ss
jno
lods
pop
out
jp
mov
mov
fcomp
mov
add
lds
or
adc
ds
mov
retf
or
rol
sub
in
add
sub
sbb
aaa
sub
mov
rcl
pushf
add
neg
int
test
mov
(bad)
fxch
jns
out
mov
adc
jnp
dec
jmp
push
jmp
aam
cmp
push
jo
push
xor
inc
movs
jmp
ins
or
mov
push
inc
mov
call
cmc
sti
test
dec
pop
jle
dec
jmp
pop
pop
loop
ja
xchg
dec
push
dec
push
pop
dec
and
dec
mov
xor
sub
dec
dec
fucom
inc
into
std
(bad)
leave
popf
movs
dec
mov
mov
dec
retf
and
jl
scas
std
xor
adc
jp
call
adc
pusha
dec
ror
nop
dec
aas
mov
push
test
mov
or
leave
test
add
adc
fsub
ins
out
sub
(bad)
in
dec
cwde
lea
sbb
mov
fimul
xor
xchg
iret
out
mov
lahf
dec
mov
(bad)
xchg
mov
dec
imul
adc
adc
mov
mov
bound
aad
dec
jl
in
in
imul
sub
sbb
mov
call
lods
mov
and
adc
mov
mul
xor
and
jns
out
mov
popa
xor
cwde
mov
sub
pop
leave
jge
dec
out
xchg
(bad)
push
mov
pusha
lahf
sbb
into
and
xor
jo
inc
repnz
sub
pop
test
jno
ret
xor
sub
out
push
jmp
je
(bad)
data16
sub
daa
mov
imul
fwait
inc
cs
std
retf
sub
popf
adc
in
inc
dec
aaa
ins
mov
jp
sub
cmc
or
pop
jae
inc
jp
jmp
xchg
cdq
loope
out
call
popa
mov
cli
jp
leave
popf
adc
xor
aaa
sub
add
aad
jecxz
aad
pop
pop
add
or
push
ret
xchg
adc
push
mov
pop
jmp
pop
add
push
mul
hlt
fstp
pushf
dec
imul
adc
add
rol
cmc
je
in
rcl
cli
pop
cmp
sbb
xchg
inc
sub
das
(bad)
jge
and
mov
rcr
inc
fild
jno
std
mov
popf
loope
in
into
jp
cmp
in
fisubr
sub
test
mov
in
call
rcr
xchg
push
cmp
pushf
fidivr
jp
add
xchg
out
sbb
(bad)
and
sbb
mov
push
fbld
std
aad
aaa
inc
inc
or
inc
cmp
mov
jmp
sbb
pop
inc
add
push
bnd
inc
mov
inc
js
add
adc
sub
ror
jb
pop
std
enter
xchg
repz
push
movs
loop
pop
popf
push
sub
push
sub
mov
fld
sar
out
lahf
jbe
js
add
jl
(bad)
(bad)
dec
mov
adc
enter
and
inc
scas
into
push
(bad)
push
ja
lods
add
bound
cmp
loop
in
fadd
clc
repnz
popf
adc
inc
lods
cmp
out
gs
es
mov
adc
adc
dec
mov
pop
(bad)
or
call
xor
mov
xor
xchg
mov
and
cdq
xchg
inc
outs
mov
adc
push
arpl
xor
xor
inc
lahf
jno
sbb
arpl
mov
loopne
adc
dec
mov
into
cmp
dec
leave
jecxz
mov
mov
cmc
cmp
and
mov
out
out
lods
in
and
mov
dec
shl
or
mov
ss
push
(bad)
arpl
sub
cwde
mov
jmp
fwait
dec
test
call
(bad)
rcl
xchg
cmps
adc
scas
retfw
add
mov
mov
clc
in
cmp
and
and
ins
nop
cmp
jmp
test
mov
out
jb
mov
mov
pushf
mov
dec
(bad)
jns
hlt
dec
sub
fidiv
cdq
xor
lock
or
xchg
push
stos
or
xchg
cmovno
test
pushf
jmp
or
inc
xchg
int
test
fdiv
xor
mov
jmp
sub
adc
or
into
xor
jmp
and
stos
ins
inc
clc
cdq
inc
jns
cmp
fst
data16
jbe
sbb
mov
clc
or
fcomip
addr16
pop
ror
sbb
sbb
sar
sub
inc
push
mov
movs
dec
push
mov
or
jnp
jge
mov
add
xchg
scas
sbb
enter
push
es
xchg
lods
repz
pop
fiadd
lock
and
adc
sbb
imul
imul
sbb
sub
inc
adc
inc
dec
pop
jl
test
pusha
and
pop
add
xor
cmps
std
mov
ds
jg
test
sub
ror
push
es
sub
and
(bad)
cwde
cmp
lea
mov
aaa
es
or
movs
lock
add
repnz
and
dec
mov
cmp
sbb
sub
jl
(bad)
push
hlt
jmp
dec
cmp
xchg
push
(bad)
cli
lods
in
cmp
setge
push
add
aad
loopne
ins
fwait
mov
outs
retf
jp
mov
mov
fdivr
sbb
ror
xchg
push
or
sbb
fxch
xchg
mov
ja
fstp
mov
dec
repz
and
fbstp
xor
leave
adc
jns
in
cwde
jmp
mov
xor
jmp
or
pop
aaa
and
pop
sub
or
clc
aas
xchg
xlat
out
ins
stos
xchg
into
pop
push
and
loopne
adc
sub
fidiv
int
mov
add
xchg
xacquire
imul
mov
add
jl
dec
fidiv
jae
jo
sub
fiadd
mov
cmp
push
mov
imul
sti
mov
pop
cld
out
xor
push
xchg
or
dec
fbld
adc
xor
or
retf
xor
and
mov
add
pop
push
mov
jo
mov
and
xor
adc
retf
inc
fnstenv
lock
jno
(bad)
jl
sbb
cmp
xor
mov
out
cmp
jb
xchg
outs
(bad)
jb
mov
mov
xor
xlat
mov
stos
imul
add
sar
repz
in
rcr
fs
shl
test
fldcw
add
push
rol
push
push
call
ficom
outs
(bad)
dec
aad
xchg
xor
sar
into
xor
out
sub
xlat
out
and
cmps
push
push
inc
push
int
xor
and
jg
out
adc
and
movs
fimul
xchg
int
pop
pop
rol
jmp
nop
or
add
and
push
mov
gs
stc
hlt
leave
xor
call
faddp
mov
pop
out
pop
cmp
jl
mov
sbb
mov
xchg
pop
out
jmp
loop
data16
dec
dec
lock
repnz
pop
jg
sbb
dec
out
mov
pop
mov
imul
pop
xlat
leave
pusha
inc
xor
aam
das
retf
(bad)
mov
pop
iret
add
mov
xchg
pop
daa
je
mov
adc
outs
mov
jb
in
cmps
and
jo
cmps
push
xchg
loope
adc
stc
bt
cmp
inc
dec
jns
pop
ret
or
sbb
or
xor
mov
adc
das
or
pop
shl
dec
addr16
mov
cs
jns
xor
leave
cmp
push
pop
adc
cmp
call
mov
mov
inc
xchg
dec
fcmovu
push
jecxz
int
loop
jp
xchg
push
neg
mov
mov
inc
sub
sbb
pushf
mov
xlat
and
push
aam
les
test
jge
fild
pusha
xor
xor
add
mov
adc
pop
push
jbe
jl
sahf
cmp
sbb
test
xchg
lahf
enter
lods
popf
jno
loope
pop
or
ins
loope
mov
addr16
leave
fsubr
and
xor
jmp
pop
ins
hlt
push
sub
shl
icebp
not
pusha
scas
lahf
fdiv
mov
(bad)
cld
jmp
aas
sbb
xchg
test
mov
daa
xchg
cmps
fcom
jns
xor
cmps
imul
(bad)
std
xchg
mul
or
dec
fdivp
push
(bad)
repnz
outs
pusha
xor
jmp
call
pop
mov
sbb
xchg
xchg
and
lahf
cmp
lods
in
inc
call
mov
into
xlat
bound
cli
sbb
and
test
pop
(bad)
adc
xchg
push
mov
mov
sbb
jecxz
sbb
jbe
xor
sbb
xchg
scas
movs
mov
xor
sub
fadd
data16
cmp
loope
push
and
inc
je
cld
jle
in
mov
xchg
cwde
mov
imul
push
cmps
ins
mov
mov
stos
hlt
push
pop
out
lahf
aas
adc
mov
cwde
sbb
pop
mov
adc
cwde
out
sub
cmps
lods
or
(bad)
ins
dec
pop
clc
jle
lods
addr16
xchg
mov
dec
dec
pushf
inc
cmp
lds
sbb
jecxz
push
pop
sbb
xor
mov
icebp
and
cmp
bound
repnz
cmp
scas
push
push
scas
dec
jmp
jmp
jo
js
sar
and
or
add
mov
fwait
in
push
sbb
xchg
movs
mul
in
retf
adc
(bad)
icebp
xor
dec
in
xor
pop
mov
jecxz
popa
mov
sub
sub
sbb
int
sbb
mov
aam
loop
sub
jmp
dec
aad
addr16
xchg
cmp
mov
inc
adc
stc
dec
cmp
mov
outs
fst
xor
jbe
cmps
xchg
enter
mov
stos
jecxz
cmc
fadd
xor
adc
and
jo
lds
(bad)
cmp
jmp
mov
call
push
hlt
arpl
les
pop
xchg
mov
mov
push
lods
call
test
push
pusha
jne
out
cld
movs
sbb
idiv
shr
cmp
je
mov
mov
cmc
inc
push
mov
cwde
sahf
mov
pop
dec
gs
jno
jecxz
fisub
xchg
cdq
pop
jb
jb
jae
xlat
int
xchg
cmp
sbb
jmp
mov
retf
fld
std
imul
cmc
lahf
loop
stc
out
cmp
je
out
gs
add
cwde
rcr
jl
push
mul
loope
mov
(bad)
sahf
mul
fs
loope
popf
rcr
not
lahf
iret
jmp
fs
inc
loope
pop
call
je
sahf
or
dec
inc
jne
sub
sbb
xchg
sub
dec
arpl
fucomp
and
push
not
mov
push
cwde
popf
push
sub
or
inc
jg
pop
cld
inc
fs
es
jns
pop
scas
push
bound
jmp
mov
adc
adc
or
and
aam
mov
stc
faddp
push
aam
ja
aam
mov
or
js
mov
mov
xchg
(bad)
pop
cs
pop
out
mov
fadd
stos
sti
or
inc
data16
std
and
nop
jg
pop
mov
push
repnz
retf
iret
loop
cdq
repnz
ret
pop
and
cmp
jo
ja
xchg
setns
pop
fstp
sti
cmps
pushf
std
mov
les
popf
std
fld
test
dec
ins
jge
push
jge
rcl
idiv
or
es
jbe
pop
xor
lds
jmp
stos
and
xor
fnstsw
jno
add
cmp
loop
int3
cmps
in
and
adc
leave
xchg
xchg
cmp
xchg
mov
jmp
pop
mov
repnz
xchg
add
shr
and
repz
or
cdq
scas
lods
mov
dec
aad
pushf
add
stc
jae
aas
fdiv
mov
mov
dec
jp
scas
dec
or
out
sbb
(bad)
push
push
int
leave
retf
inc
mov
dec
scas
loop
fcmovu
mov
nop
or
lods
fist
or
aad
test
inc
xchg
adc
jle
lahf
push
lods
cmp
pusha
lahf
or
fcmovnu
push
out
ret
imul
pop
in
lock
inc
sahf
mov
pop
xchg
cmp
ror
pop
inc
into
xor
arpl
sub
sbb
std
adc
popa
sub
mov
sub
aaa
scas
fwait
push
loope
movs
add
and
cdq
mov
cmps
mov
xchg
mov
jae
lock
mov
imul
or
cmp
and
or
dec
push
and
daa
(bad)
xor
jo
jo
out
cmp
mov
ror
das
dec
pop
fist
and
mov
mov
ret
inc
les
cmc
jns
test
in
pop
dec
mov
mov
out
mov
bound
mov
mov
pop
jecxz
mov
or
pop
loop
daa
mov
cmps
aam
jp
cli
lods
and
adc
sbb
mov
fild
mov
push
or
push
jo
retf
call
fsubr
inc
out
(bad)
xor
outs
ss
sub
jb
test
xchg
ficomp
(bad)
in
and
push
in
cmp
clc
add
mov
repz
add
mov
mov
das
xchg
push
add
jbe
mov
lds
jbe
xchg
inc
or
nop
daa
pusha
inc
sub
ja
neg
call
shr
jmp
cld
aas
lea
or
jmp
cwde
cmp
or
test
fld
mov
sbb
add
xlat
enter
or
mov
sahf
shl
das
inc
dec
mov
jle
rcr
xchg
ja
mov
fwait
aas
ret
or
jmp
je
movs
push
mov
push
inc
test
ins
inc
aas
dec
push
frstor
imul
add
sbb
push
mov
mov
ret
les
pop
out
sti
add
outs
dec
sbb
ds
idiv
fimul
jge
cdq
lock
aad
stos
in
cld
lea
test
imul
call
rol
das
data16
outs
lods
loop
mov
dec
movs
mov
cmp
or
lea
xchg
call
cmp
mov
push
stc
lods
iret
inc
sbb
jmp
sbb
cwde
xchg
cmp
int3
(bad)
mov
jmp
and
in
add
hlt
inc
fmul
jl
rcr
sub
jmp
mov
mov
mov
jmp
push
fwait
sbb
adc
xchg
cs
push
or
mov
lea
sub
sbb
sub
add
push
pop
ds
movs
movs
push
iret
lds
xchg
and
jle
or
mov
leave
sub
lods
and
shl
jbe
lea
je
mov
cmp
sub
inc
cdq
ds
idiv
and
(bad)
push
cmp
retf
dec
pop
jp
mov
or
mov
push
mov
jl
std
nop
xchg
sub
lods
div
lds
dec
and
push
and
mov
pop
adc
cmp
inc
or
arpl
jge
xor
xchg
fld
inc
push
add
sbb
sub
ins
sub
sbb
mov
out
pushf
(bad)
repnz
test
mov
ds
adc
cld
js
pop
dec
loop
add
inc
xchg
push
pop
sbb
stos
cmp
lds
cmp
lahf
rcl
cwde
xor
jmp
jmp
jge
push
add
mov
xchg
add
mov
jmp
and
inc
xor
lods
js
aaa
out
sbb
add
and
mov
adc
(bad)
jge
inc
dec
jmp
pop
add
and
adc
and
in
sbb
jns
pop
adc
ss
or
sahf
mov
ds
sub
out
je
fs
and
ss
stos
repz
sar
cmps
cli
mov
stos
ins
pop
ins
adc
je
add
mov
cmp
call
push
stos
repz
jnp
mov
out
ret
stos
out
iret
mov
repnz
cdq
push
scas
sbb
test
and
push
jp
mov
(bad)
jl
dec
fidiv
push
jp
std
lods
push
or
xchg
icebp
jl
xor
rol
xchg
mov
mov
pop
daa
adc
push
pop
inc
lds
in
and
fdivr
neg
jno
arpl
fwait
inc
stos
mov
(bad)
and
cli
out
dec
pusha
adc
test
test
in
sbb
jmp
lds
retf
sub
xchg
inc
fdivp
sbb
aas
adc
loope
jnp
add
inc
stos
mov
fld
inc
mov
dec
sti
push
dec
cmp
add
test
or
cld
enter
lahf
aaa
(bad)
(bad)
pop
and
jb
dec
dec
cmp
jae
cld
aad
(bad)
stos
jle
pushf
push
sub
pop
and
les
pop
pop
sub
aad
mov
lahf
and
dec
les
adc
adc
dec
fstp
aad
inc
ror
push
xor
sar
jl
xchg
inc
popa
sbb
in
xchg
ds
cmp
bound
adc
xchg
cmp
cmp
push
sub
lds
dec
mov
adc
cmp
mov
cmp
fs
jmp
cmps
push
jg
mov
sub
jb
mov
repz
add
mov
scas
loope
fninit
bound
add
fmul
loop
lods
jb
jecxz
stc
adc
ror
mov
mov
or
cld
xchg
cmp
or
cmp
jmp
sbb
daa
push
rcr
fidivr
xor
xchg
xor
adc
or
ins
cmp
fdiv
hlt
jmp
adc
div
sbb
retf
into
cwde
xchg
pusha
mov
fisttp
adc
call
adc
cmp
mov
mov
int3
ret
out
xchg
push
jno
fist
test
xor
std
js
movs
adc
test
call
popf
icebp
add
xor
imul
and
mov
ss
add
sub
sti
in
outs
xchg
xor
push
mov
test
mov
sbb
xchg
jl
pop
or
in
in
push
int3
cmp
pop
and
sub
pop
push
mov
int3
jp
push
jmp
(bad)
out
and
ja
imul
cmc
in
lea
pop
out
xchg
stos
pop
ja
retf
sbb
lods
enter
sbb
data16
mov
dec
js
loope
push
sub
loopne
pop
aad
cmc
fistp
xor
int
es
mov
push
cmp
neg
sub
imul
mov
or
(bad)
retf
imul
add
repnz
jg
lea
inc
rcr
neg
and
fxch
sti
xchg
push
into
pop
inc
lods
fs
pop
dec
dec
iret
xor
out
mov
leave
rcr
sub
ins
ja
es
pop
pop
es
pushf
aad
mov
and
sub
aas
movs
sub
or
repz
mov
xor
call
xchg
pop
fist
mov
mov
call
repz
xor
mov
shr
pop
xchg
dec
nop
pop
fsub
sbb
sub
sbb
cli
xor
mov
loopne
ins
popf
fndisi(8087
gs
aaa
pushf
jno
aas
ins
pop
jp
lahf
(bad)
push
jge
aas
xor
(bad)
jge
sbb
icebp
pop
mov
stos
fwait
lods
int3
cld
lds
ficomp
dec
or
fsubr
dec
inc
pop
and
cmp
pop
jmp
fild
jmp
pop
cmp
in
popf
shl
sub
repz
mov
xor
mov
shr
xchg
cmps
mov
shr
dec
cmp
push
push
xchg
pop
mov
push
pop
xor
stos
ja
movs
test
pop
cmp
push
aas
(bad)
push
push
je
and
mov
add
ds
mov
dec
not
mov
cmp
inc
push
(bad)
enter
or
xor
into
es
pusha
ret
dec
outs
or
sbb
ins
pusha
jno
lods
push
mov
in
sub
add
cmc
mov
fadd
sahf
jg
dec
mov
cwde
cmp
inc
pop
scas
in
mov
adc
mov
out
test
inc
ss
jnp
adc
xchg
fstp
mov
mov
cmp
aaa
dec
mov
mov
or
addr16
push
jl
mov
jge
or
sbb
fwait
movs
push
xchg
sub
scas
ins
cmp
outs
dec
add
lahf
sbb
jl
sti
int
scas
sbb
adc
(bad)
dec
fnstenv
cs
call
fs
xor
sub
jno
ret
and
movs
nop
mov
xchg
popf
das
sub
cmp
js
inc
sbb
xlat
hlt
push
pop
jns
push
pop
lock
inc
mov
mov
add
adc
cmp
shl
in
fcmove
test
sub
xchg
and
(bad)
retf
hlt
xchg
mov
cmp
mov
shl
and
push
adc
pop
mov
test
dec
cli
push
jg
push
(bad)
and
xor
and
outs
and
xor
mov
ror
js
mov
cmps
rdmsr
adc
push
dec
mov
ja
in
in
push
ret
push
dec
mov
mov
adc
sahf
jg
movs
repz
clc
test
scas
repz
cs
pop
push
sar
xchg
fldenv
cmps
xor
shr
call
or
dec
push
mov
mov
cmps
pusha
in
dec
add
sbb
loope
ds
(bad)
ficomp
and
int3
dec
cmp
fchs
pop
cdq
scas
dec
and
push
pop
daa
push
sbb
fst
mov
jbe
cmp
cli
push
mov
test
cmp
or
add
pop
adc
call
sub
mov
add
ds
shl
push
jle
pop
jmp
dec
xor
xchg
ja
mov
xor
stc
dec
pop
push
inc
jp
adc
sbb
pop
jae
fild
int
leave
call
aaa
not
cwde
cli
inc
cdq
mov
fwait
and
enter
div
pop
jbe
in
pop
sub
jl
sub
aad
ins
call
std
sub
mov
lock
mov
inc
mov
(bad)
mov
mov
retf
pop
jo
xor
je
(bad)
out
inc
mov
sahf
loopne
inc
stos
fadd
sahf
std
aam
jle
stos
sti
push
cmps
jne
push
ret
(bad)
sar
rol
iret
sbb
mov
mov
xchg
jmp
or
cmps
push
push
shl
dec
fcom
stos
pushf
(bad)
pop
fst
test
sbb
sbb
add
fcomp
dec
inc
sub
retf
div
movs
push
push
mov
hlt
test
sbb
call
mov
mov
sbb
je
or
sahf
xchg
inc
sbb
cld
ins
dec
xchg
sbb
dec
rol
in
retf
stos
scas
loope
cli
or
mov
and
test
jp
fistp
pop
(bad)
mov
mov
cmps
sub
call
jg
clc
xchg
les
add
or
mov
xchg
jmp
adc
mov
dec
mov
popa
pushf
push
xchg
or
movs
or
retf
or
mov
sbb
das
out
aam
and
sub
adc
into
jbe
xchg
and
add
push
cli
push
ins
stos
fnsave
xlat
out
push
sub
int3
inc
lds
arpl
cmp
loope
les
test
mov
xor
inc
xlat
or
inc
(bad)
pop
xchg
push
xor
or
and
pop
daa
outs
sbb
icebp
jo
and
mov
mov
popa
xor
pushf
cmps
add
mov
add
addr16
mov
jle
mov
loopne
mov
and
outs
jp
mov
fs
and
adc
adc
inc
rep
out
sbb
jne
(bad)
mov
dec
mov
lods
xor
dec
cld
shr
pop
int
dec
pop
sub
mov
stos
iretw
pop
rol
mov
imul
mov
out
outs
cmp
test
mov
sub
xor
(bad)
or
mov
in
mov
mov
ds
(bad)
stos
iret
dec
pop
aas
leave
or
adc
mov
movs
dec
(bad)
fldcw
jns
gs
sahf
xor
pop
sub
retf
js
sbb
ss
jne
je
aas
(bad)
cmp
imul
push
mov
adc
jno
or
or
test
jp
or
shl
xchg
inc
xchg
dec
mov
shl
jmp
(bad)
hlt
xchg
pop
call
std
inc
mov
dec
xchg
inc
jno
and
addr16
jmp
ins
adc
sbb
cmp
xor
fcomp
pushf
outs
mov
jbe
sti
cwde
push
sub
leave
cld
call
aad
mov
stc
xchg
xlat
inc
xchg
aam
xor
sar
mov
addr16
shl
and
in
lea
and
mov
mov
retf
jge
mov
or
xor
loopne
test
ret
scas
mov
scas
(bad)
lods
repz
call
out
or
loopne
xor
pop
pop
add
mov
je
gs
enter
xor
test
test
test
adc
in
daa
push
cdq
or
push
pop
in
mov
sar
fmul
(bad)
cmps
jmp
cli
mov
xor
bound
sub
sbb
cmc
mov
push
cmp
scas
test
cmp
pop
sbb
add
(bad)
xor
adc
mov
adc
add
sub
in
call
push
or
pop
jbe
push
mov
and
mov
xor
mov
mov
cmc
std
pop
scas
pop
mov
bound
jmp
pop
aam
xor
rcl
pop
mov
xor
mov
mov
add
mov
pop
out
icebp
mul
in
pop
cwde
jno
mov
or
mov
ss
pusha
dec
out
sbb
std
mov
fwait
popa
jmp
mov
popf
jmp
push
movs
sar
add
mov
xor
repz
and
mov
xor
adc
push
xchg
cmp
fsub
jmp
xchg
je
mov
repnz
mov
cmps
mov
adc
push
push
jl
jns
sbb
in
and
aam
bound
iret
mov
loop
aad
mov
iret
and
jge
add
mov
fimul
xchg
(bad)
xor
dec
add
or
bswap
in
sbb
in
xchg
cld
push
icebp
out
mov
jno
enter
dec
aas
adc
cmps
and
ins
or
adc
inc
mov
push
jae
ja
jp
(bad)
pop
mov
xor
push
cmp
nop
lods
(bad)
in
iret
(bad)
add
xchg
pop
inc
mov
cmc
push
dec
jmp
push
or
pop
inc
jno
sub
into
mov
mov
dec
dec
stc
cmp
jnp
or
movs
loopne
and
ret
into
lock
sbb
pop
mov
iret
adc
mov
call
out
stc
mov
sbb
fsubr
pop
xor
mov
push
loop
test
pushf
shl
aaa
loope
jbe
mov
sub
(bad)
out
lea
sbb
xor
rol
shr
add
fisub
sbb
sub
sbb
gs
in
lds
imul
pop
push
mov
rcr
and
fs
rcr
sub
cmp
aam
jg
add
outs
nop
or
js
or
push
lods
fisttp
dec
out
cmp
add
scas
cmps
arpl
nop
xor
outs
(bad)
lds
(bad)
fsubr
jl
mov
loopne
push
lsl
gs
dec
mov
outs
ss
(bad)
xor
mov
push
jl
mov
icebp
push
mov
adc
fimul
cmp
ja
outs
popf
in
shl
mov
mov
ret
jmp
cmp
mov
into
push
jnp
das
cmps
inc
and
adc
pop
loop
js
adc
push
ror
add
and
out
pop
movs
sti
repnz
and
out
or
aaa
jecxz
fscale
out
ret
scas
add
sbb
mov
test
cmp
and
push
or
mov
call
movs
js
es
sub
and
fwait
jns
adc
mov
cmp
xchg
push
fwait
jle
xchg
or
es
and
mul
ret
lods
mov
xor
outs
ret
mov
sbb
sbb
mov
loop
mov
out
jmp
cmp
xlat
scas
mov
cmc
adc
inc
pop
fisub
xchg
ins
unpcklps
ins
mov
pop
sbb
inc
inc
sub
hlt
or
inc
and
gs
imul
dec
hlt
jne
xor
add
js
pop
xchg
retf
mov
cmp
mov
call
sbb
cmp
push
and
push
sub
mov
push
scas
out
push
inc
mov
jo
mov
stos
bound
sbb
shl
test
mov
add
fstp
or
xchg
mov
iret
add
push
cmp
mov
adc
adc
xchg
sar
cs
xchg
inc
outs
jnp
mov
push
mov
inc
cld
mov
jns
and
in
mov
shl
(bad)
(bad)
int
gs
sti
retf
sbb
lock
ltr
xchg
mov
mov
dec
push
mov
or
and
jne
sti
(bad)
and
movs
pop
leave
stos
mov
xor
xor
or
cdq
repz
or
mov
loopne
retf
cmp
mov
into
loop
mov
and
nop
jecxz
and
arpl
inc
loopne
mov
ffree
pushf
jns
sti
dec
cmc
and
popa
sub
scas
aad
das
shl
enter
test
test
data16
pop
jle
in
push
fwait
into
ds
sub
(bad)
mov
in
dec
push
gs
jl
jae
add
pop
mov
inc
ja
and
sbb
push
lods
pop
ins
test
xor
out
xchg
mov
enter
fmulp
or
pop
into
jl
jbe
test
aad
aad
addr16
psrlq
xor
mov
test
popf
mov
imul
pop
fwait
and
xchg
fst
sub
rcl
shl
mov
cld
enter
mov
add
cdq
jg
gs
jnp
lahf
dec
loop
ret
jb
cld
mov
(bad)
imul
xor
sbb
addr16
dec
gs
xchg
cs
pop
call
xor
jge
int
adc
xor
mov
es
ret
mov
shr
mov
pop
lods
icebp
inc
mov
inc
push
loopne
call
jle
xor
adc
imul
jnp
sbb
scas
push
or
popf
gs
stos
cmp
sbb
or
cli
cmps
test
or
inc
test
loop
aaa
or
int3
pop
xor
jbe
loopne
lods
sbb
lods
jbe
mov
mov
(bad)
and
mov
inc
stc
pop
clc
mov
xchg
out
(bad)
xor
sahf
push
mov
hlt
jae
scas
push
stos
inc
loope
push
add
mov
stos
pop
addr16
into
or
mov
jnp
inc
or
mov
pop
retf
jp
inc
xchg
iret
sub
(bad)
mov
mov
xlat
inc
mov
sub
pusha
mov
dec
xchg
loopne
sbb
pop
push
fwait
aas
jae
jnp
jecxz
in
jl
pop
mov
mov
fsub
push
test
shl
ror
pushf
cmc
mov
and
mov
adc
lods
scas
push
ins
mov
jle
cdq
test
push
add
sbb
rcl
fstp
jmp
and
lock
pop
mov
sub
test
in
js
retf
out
push
mov
cmp
xchg
adc
(bad)
mov
(bad)
sub
xchg
cld
cdq
pop
dec
mov
and
or
jge
sbb
outs
out
push
mov
sbb
fidiv
jbe
add
sbb
jbe
mov
(bad)
jge
xor
jle
cs
in
jg
adc
inc
fs
js
dec
aas
and
jg
call
sar
sub
pop
loope
fcomp
sbb
fdivr
mov
imul
test
(bad)
cmp
(bad)
aas
cs
push
sbb
cld
jno
mov
lods
ficom
mov
repnz
aas
mov
cmp
stos
int
cmp
add
out
inc
sub
out
in
stos
(bad)
jne
xor
(bad)
sar
jae
(bad)
in
das
lods
xchg
sbb
or
sub
shl
xchg
pop
and
call
jg
in
mov
push
cmp
jns
jnp
dec
jmp
mov
mov
dec
or
cmp
lea
mov
sbb
rol
mov
out
fmul
jno
enter
dec
in
test
mov
test
fnstcw
pop
jno
mov
std
jo
jnp
push
test
stos
pop
std
std
cld
push
rol
xor
or
(bad)
cs
mov
xchg
and
xor
xor
xor
pop
jge
aam
mov
mov
cmp
fyl2x
xor
dec
stos
int3
xor
fcomp
imul
pop
js
rcl
add
add
inc
(bad)
ds
cs
dec
lock
pop
fistp
(bad)
xlat
mov
sbb
clc
add
fist
dec
or
pop
pusha
dec
addr16
push
jae
or
or
bound
stos
fiadd
sar
dec
push
xchg
ja
fmulp
popa
loop
in
dec
pop
movs
inc
es
adc
jmp
dec
sub
push
call
fdiv
cmc
call
(bad)
cli
arpl
dec
adc
mov
ror
pop
mov
pop
out
cmp
jnp
push
push
adc
retf
push
cld
adc
clc
jl
or
inc
jl
jb
add
dec
inc
dec
mov
xchg
cs
movs
aaa
or
adc
loope
sub
std
mov
mov
fwait
mov
adc
mov
hlt
in
mov
push
sub
jbe
xchg
shr
jne
mov
pop
push
sahf
into
aas
or
mov
mov
shr
adc
(bad)
xlat
fs
inc
xchg
les
xor
xor
mov
enter
inc
dec
dec
out
call
addr16
mov
addr16
scas
pop
imul
and
in
jmp
dec
pop
xor
mov
pop
push
sbb
aaa
or
repnz
sub
adc
mov
pusha
xchg
aas
arpl
mov
push
dec
fs
add
mov
sbb
add
add
ds
aas
lods
test
cmp
aaa
push
fxch
(bad)
neg
sub
push
push
fadd
(bad)
in
mov
jl
pushf
or
mov
pop
mov
xor
add
cmp
ss
iret
mov
mov
dec
or
pop
xchg
pop
inc
(bad)
or
out
xlat
xor
and
imul
push
fbstp
adc
das
les
mov
mov
pusha
je
in
sub
fldlg2
add
xlat
inc
jmp
call
sub
and
(bad)
stc
retf
mov
cmps
rol
loopne
ins
or
(bad)
mov
hlt
and
in
push
call
mov
gs
outs
scas
mov
(bad)
push
add
mov
and
adc
jle
inc
shl
dec
out
clc
call
inc
les
xchg
or
adc
sub
jp
movs
sbb
mov
inc
xor
mov
cmps
jnp
popa
or
ret
push
clc
add
jg
pop
add
add
dec
and
inc
not
sbb
adc
dec
gs
jmp
adc
xchg
cmp
test
xchg
push
sbb
add
push
jb
mov
sub
repnz
xlat
xchg
add
jno
dec
mov
mov
mov
sub
adc
hlt
mov
mov
xor
cwde
add
leave
jl
mov
sub
xor
mov
mov
jno
xor
cmp
mov
mov
popf
inc
hlt
push
pop
push
add
retf
ins
dec
or
push
(bad)
test
maxps
sar
cli
in
out
je
ja
mov
mov
adc
outs
nop
xchg
sub
xchg
ret
mov
bt
out
inc
daa
adc
call
sub
(bad)
pop
and
xchg
or
retf
jo
jge
je
add
mov
jp
outs
shl
jmp
js
add
mov
push
movs
je
pop
sub
jp
jl
sti
movs
je
int
sub
sub
cs
sub
nop
and
out
mov
cmp
jp
movs
inc
les
mov
icebp
sahf
jmp
xchg
push
xor
retf
aam
into
bound
shl
in
scas
jb
pop
jae
cli
dec
gs
daa
cmp
(bad)
mov
push
xchg
int3
inc
push
push
icebp
idiv
inc
std
inc
cmps
mov
cmp
cmps
xor
pop
dec
shl
inc
xchg
adc
or
cmp
enter
mov
stos
push
xor
scas
sbb
fs
inc
mov
hlt
cmp
add
stc
repnz
xchg
scas
jmp
scas
xchg
jne
js
mov
mov
dec
pop
mov
fwait
mov
adc
inc
in
mov
in
mov
call
mov
mov
scas
ret
and
jge
mov
mov
in
xor
sar
pop
shl
pop
mov
sub
mov
mov
sbb
pop
adc
dec
mov
add
adc
stos
ja
aam
das
lock
mov
imul
push
dec
pop
loope
xor
(bad)
repnz
inc
neg
mov
in
jmp
ja
jae
repnz
imul
mov
int
inc
cld
cmps
aaa
xor
jno
je
pop
repz
and
mov
push
fidiv
xchg
pop
aam
pusha
ins
rol
add
cmp
and
cmc
in
mov
xlat
jne
and
push
test
xor
shr
push
adc
or
cld
les
cld
push
jge
mov
dec
pop
(bad)
jle
inc
(bad)
add
jb
or
js
pop
xor
call
sub
(bad)
cli
jmp
xchg
fisttp
mov
(bad)
shl
push
push
inc
retf
cmp
(bad)
mov
or
shl
mov
sahf
mov
adc
out
fbstp
es
rcr
inc
mov
jp
ror
in
out
aad
push
add
pmaxsw
xchg
lds
popa
repnz
dec
mov
cli
or
addr16
mov
mov
fidivr
cmp
push
cmp
add
shl
(bad)
outs
pop
adc
adc
pop
cmps
retf
popf
fsubr
nop
rcr
mul
mov
push
pop
shl
lock
push
add
leave
rdtsc
sub
or
pop
lea
data16
sub
pop
leave
xor
push
inc
ja
mov
xchg
cmp
push
scas
sub
xchg
fcomip
inc
push
adc
inc
rcl
pop
inc
dec
aas
mov
out
xor
or
(bad)
scas
rcl
mov
bound
adc
push
aaa
mov
mov
push
addr16
mov
pop
push
ret
(bad)
sbb
xchg
adc
add
cdq
or
cld
int
popa
ins
ins
addr16
inc
(bad)
pop
push
stc
pop
lods
sub
fidivr
mul
dec
std
mul
outs
push
push
clc
pop
sti
mov
cmps
push
icebp
loope
movs
inc
add
mov
imul
and
add
test
test
inc
sub
sbb
sbb
stc
loopne
push
jmp
pop
je
mov
mov
popf
push
cmc
cld
dec
lea
rcr
xchg
inc
pop
push
push
dec
jl
inc
pop
out
dec
dec
iret
mov
add
repnz
loop
xor
adc
mov
dec
xchg
or
xor
popa
fs
cmp
pop
out
push
aas
shl
push
psubw
hlt
loopne
sub
imul
movs
iret
arpl
pop
push
push
sbb
mov
in
(bad)
outs
fdivr
repz
sbb
dec
adc
jnp
push
or
pop
xchg
mov
popf
dec
jns
mov
sub
inc
mov
ret
aaa
cwde
push
lods
lock
inc
fwait
ds
loopne
sub
cld
mov
mov
ds
jno
idiv
sbb
xchg
cmc
mov
pop
ret
rcr
mov
imul
out
xor
out
aad
in
pop
push
repz
sub
or
pop
mov
ficomp
in
xor
sbb
imul
dec
mov
mov
into
jbe
fild
into
idiv
add
dec
sub
retf
enter
iret
ins
add
je
(bad)
push
arpl
mov
(bad)
in
ins
scas
sub
cmp
xor
xchg
or
in
mov
mov
int3
hlt
inc
pop
mov
cs
stc
ja
ss
mov
push
fimul
xchg
jecxz
add
arpl
jmp
sub
mov
pop
adc
jp
dec
jae
ss
jmp
arpl
sahf
fdiv
dec
push
mov
gs
sbb
call
outs
cwde
pop
xor
mov
mov
(bad)
lods
mov
(bad)
fistp
in
lahf
das
push
(bad)
adc
lods
add
inc
or
cwde
in
call
adc
add
dec
dec
mov
push
pushf
test
cmps
inc
std
pop
ror
sbb
inc
pop
fdiv
aam
push
inc
add
ins
jmp
(bad)
cmc
jl
dec
cli
mov
out
lods
ret
jecxz
ret
lock
and
test
xor
push
adc
in
pop
jmp
sub
mov
add
jle
(bad)
jbe
add
jns
cs
push
adc
pop
jecxz
in
inc
cmp
ret
(bad)
cli
(bad)
mov
mov
mov
pop
(bad)
cs
pop
cmp
xchg
gs
gs
mov
pushf
sbb
xchg
loope
outs
push
cmc
push
mov
movs
inc
xchg
xor
add
div
push
ficomp
jns
pusha
data16
dec
nop
adc
cmp
in
add
sub
fidivr
enter
sbb
push
imul
out
bound
push
fs
arpl
jne
dec
gs
repnz
push
loopne
jge
push
movs
push
bound
out
dec
daa
in
sub
jle
test
sub
movs
shr
mov
xchg
and
pop
call
test
or
gs
mov
push
pusha
pop
in
stc
je
outs
ret
sbb
sub
bound
and
cmc
fs
add
inc
jo
rcr
loope
call
mov
jno
fadd
inc
cmp
xchg
xchg
sub
pop
push
sbb
mov
xor
iret
(bad)
aam
leave
gs
fdiv
retf
xchg
retf
mov
fst
out
addr16
xchg
je
out
cmp
imul
ret
jnp
stos
rol
jnp
call
sbb
jbe
pop
sbb
ds
iret
and
dec
out
(bad)
xchg
daa
xor
push
sbb
ds
cmps
or
pop
jmp
call
xor
in
(bad)
fcomp
adc
leave
dec
pop
neg
fstp
dec
out
stos
outs
push
cmp
das
cmps
push
jnp
sbb
or
xchg
arpl
test
test
stos
pop
stc
push
daa
mov
pop
jmp
pusha
mov
xlat
push
dec
movs
test
xchg
jg
nop
outs
mov
xchg
and
sub
adc
movs
imul
inc
imul
add
mov
ds
inc
xchg
movs
scas
and
test
aam
push
lods
sti
jns
pop
push
lea
jns
cmps
jnp
cmps
xor
push
lds
call
test
xchg
rcr
push
mov
icebp
pop
mov
or
jl
cmc
dec
ror
(bad)
fnstenv
pop
fst
xchg
sbb
jecxz
rcl
shl
jp
sub
pusha
iret
sbb
test
cmp
cmp
jae
adc
js
divps
jne
out
cmp
stos
xor
adc
xchg
push
xor
sbb
nop
ror
lods
mov
xor
in
shr
and
add
and
sub
ins
push
in
sbb
ja
(bad)
mov
cwde
mov
pusha
mov
ret
les
repz
pop
sbb
cmps
or
jp
sti
push
adc
inc
mov
push
sub
mov
cmp
pusha
loope
add
lea
or
inc
js
(bad)
mov
push
sbb
adc
sub
mov
or
sub
aad
call
xchg
lahf
fiadd
loopne
add
jnp
push
cmp
mov
jmp
mov
dec
inc
jmp
es
mov
es
cmps
pop
out
mov
cdq
cmp
inc
mov
arpl
jp
repz
add
pop
mul
sbb
into
jno
dec
xor
movs
add
cmp
xchg
lahf
cmp
ins
inc
ins
out
in
adc
sub
dec
fbstp
iret
vdivss
jns
jno
mov
bound
pop
and
cmp
test
test
(bad)
or
dec
add
shr
out
and
push
int3
and
outs
int3
sub
std
jg
push
nop
mov
cmp
addr16
outs
int3
or
(bad)
mov
and
mov
cmps
scas
inc
pop
cmp
aad
push
into
out
aaa
dec
imul
add
and
popf
lods
in
xchg
pop
pop
aad
dec
sbb
sbb
adc
mov
shl
stc
lds
loop
jmp
repnz
lahf
jg
sbb
push
das
repnz
or
cmp
shr
pop
add
cmp
bound
xlat
push
enter
movs
fs
dec
cdq
adc
or
stos
lea
ret
add
sub
repnz
ins
mov
jb
mov
cmp
nop
ins
pop
cmp
fmul
mov
ret
cmp
add
cmp
xchg
addr16
ins
inc
add
movs
adc
add
loop
pop
in
repnz
test
or
cld
or
xchg
xor
loope
loop
jp
mov
mov
push
sbb
in
sti
xchg
fnstcw
cld
out
mov
ja
cld
fwait
cld
ins
lahf
in
(bad)
cmp
addr16
jmp
cmps
fldcw
xchg
fiadd
mov
xor
jb
pop
pop
retf
add
test
rol
mov
pop
(bad)
imul
mov
out
dec
sub
mov
scas
add
sahf
data16
push
pop
adc
repnz
dec
and
push
cmp
data16
fistp
cmp
xchg
cmps
das
(bad)
adc
stos
aas
scas
pushf
jmp
bound
je
cmp
pusha
leave
or
sti
push
iret
lea
xor
and
aad
adc
inc
fldenv
push
sahf
pusha
or
frstor
daa
mov
lods
and
push
fwait
cdq
loopne
push
lock
push
cdq
pop
sbb
aad
jnp
pusha
nop
pushf
je
inc
mov
mov
leave
ja
mov
arpl
inc
dec
outs
(bad)
out
cli
dec
stos
xor
push
adc
loopne
(bad)
fwait
add
dec
das
test
jecxz
(bad)
int3
push
outs
clc
mov
xor
or
mov
inc
bound
mov
cmc
cmp
cmps
aas
and
inc
cwde
xor
out
stc
test
mov
sub
push
sub
push
push
xor
retf
imul
xor
sbb
mov
add
imul
or
dec
es
adc
loope
neg
push
push
les
iret
mov
jne
pusha
adc
pop
add
aad
jge
mov
pushf
sub
out
and
das
out
movs
aam
cwde
mov
or
push
mov
pop
mov
jb
pop
inc
push
adc
lock
jae
iret
dec
shl
and
push
add
jbe
dec
test
mov
imul
sub
mov
inc
gs
push
and
add
repz
xchg
out
mov
mov
jae
mov
fstp
jmp
hlt
push
inc
jmp
(bad)
stc
sbb
das
adc
outs
(bad)
mov
test
fwait
sub
fcomp
jl
out
outs
jg
sub
loope
cmps
dec
xchg
inc
sbb
adc
scas
clc
mov
addr16
dec
outs
sbb
mov
add
mov
jae
jns
lods
(bad)
xchg
pop
sbb
shr
mov
retf
std
les
daa
pop
sbb
mov
xchg
ss
arpl
adc
add
nop
into
mov
ss
xchg
ds
mov
ss
add
iret
popf
test
push
adc
push
lock
adc
scas
sbb
iret
xlat
es
sbb
pop
adc
jo
daa
popf
push
mov
and
lock
dec
rol
movs
cmp
in
jp
scas
es
sub
test
cmp
imul
adc
popf
jne
test
(bad)
aas
stos
fwait
push
enter
fcomp
fmul
push
sub
call
lds
xor
pop
pusha
repz
clc
push
pushf
ror
out
add
js
fbld
scas
cmp
addr16
stos
add
pushf
dec
int3
pop
test
and
ret
fistp
in
call
jge
or
enter
popf
das
sub
xor
mov
lds
cli
mov
push
xor
test
and
sti
int3
gs
imul
sbb
leave
dec
xchg
data16
xchg
es
add
sahf
lds
adc
les
mov
pop
ret
jecxz
xor
fnsave
and
mov
test
pushf
ret
push
push
enter
mov
rol
aaa
aaa
pop
mov
jmp
arpl
pop
xchg
arpl
cmc
lods
pop
mov
arpl
nop
test
mov
xlat
and
pop
addr16
ins
push
mov
sbb
sub
cmp
mov
push
mov
mov
push
push
int
popw
xchg
(bad)
jp
lods
ja
pushf
mov
and
dec
adc
dec
mov
xchg
jns
test
adc
pushw
in
sar
bound
call
fisttp
dec
(bad)
mov
ret
fs
dec
fwait
loopne
fwait
jne
xor
jo
out
xchg
enter
cmp
jnp
mov
rcr
sahf
jae
adc
repz
push
dec
out
fwait
adc
mov
ret
out
jns
lahf
sub
stos
jbe
or
mov
cs
in
push
dec
hlt
xchg
pop
cld
fisubr
out
outs
dec
pop
mov
test
mov
push
into
test
cdq
xchg
inc
sub
xchg
cmc
cdq
adc
mov
(bad)
cmc
mov
pop
sub
sub
gs
les
mov
jb
div
and
cmp
out
xor
call
xor
bound
fisub
retf
mov
sub
mov
std
and
jge
jmp
fisttp
loopne
and
fnstenv
in
add
inc
dec
retf
sbb
add
adc
add
cmps
cld
int
pop
fist
xor
cmp
jp
add
movs
or
ins
shl
sbb
lods
scas
pop
in
mov
xchg
sub
leave
out
fcom
sub
arpl
test
dec
jmp
adc
jno
int
push
(bad)
xor
test
sbb
or
pushf
in
leave
aad
jnp
pop
add
or
jle
fstp
dec
xchg
stc
dec
ins
cmp
jl
(bad)
movs
clc
popa
mov
outs
aam
mov
fist
fcmovnu
push
push
adc
jbe
test
(bad)
mov
add
and
sbb
xor
loop
mov
jo
(bad)
paddusw
mov
imul
test
retf
(bad)
mov
popa
(bad)
(bad)
push
std
dec
aad
mov
lods
adc
pop
in
call
stc
push
push
xor
paddq
aas
daa
(bad)
add
call
js
test
xor
inc
add
fld
cmp
push
mov
aam
pop
iret
fwait
popf
mov
xchg
sbb
cmp
and
repz
pop
push
aaa
outs
mov
fs
push
into
mov
imul
push
lds
(bad)
mov
push
and
fld
jb
aam
pop
js
mov
xchg
out
and
shl
test
les
and
push
fnstenv
mov
aam
movs
cmp
arpl
int3
adc
(bad)
sbb
mov
dec
or
adc
xchg
(bad)
mov
mov
mov
push
shl
cs
push
sahf
fsin
aaa
(bad)
xlat
(bad)
mov
data16
repz
xchg
ds
jge
pop
loop
sub
stc
test
(bad)
(bad)
adc
fcmovnb
jnp
mov
fsub
sbb
jae
ins
mov
and
in
pop
shr
adc
rcl
cld
scas
ins
inc
sbb
pop
pop
inc
dec
cmp
mov
xchg
iret
popa
test
mov
jne
imul
pop
outs
cmc
mov
pusha
cmp
jmp
outs
pop
mov
adc
jmp
pop
scas
dec
pop
push
repz
adc
jne
leave
pop
sahf
sahf
mov
xchg
lahf
in
(bad)
mov
int
mov
push
cmps
cmp
rcl
and
xor
xchg
add
mov
in
leave
jb
jmp
bound
add
inc
push
push
fistp
xchg
fs
stos
add
lea
sti
mov
sbb
pop
push
xchg
mov
shl
call
in
cmp
xchg
shl
imul
push
test
dec
aaa
ret
jb
jb
adc
sbb
and
shl
xor
in
add
xor
scas
mov
lahf
mov
mov
call
pusha
gs
xor
les
shl
ins
aad
lea
pop
test
dec
stos
outs
sahf
inc
or
call
and
shl
mov
inc
cmp
mov
xor
int
xor
dec
mov
adc
sbb
sbb
mov
dec
pop
test
mov
sbb
or
or
mov
mov
sbb
pop
pushf
add
loope
inc
push
stc
adc
out
(bad)
push
in
pop
jnp
cmp
jg
(bad)
arpl
inc
mov
and
dec
xchg
or
jge
cmp
mov
lea
aad
xchg
rol
loope
mov
fdiv
sbb
jmp
imul
xor
shl
hlt
jae
sub
je
fwait
bnd
fst
fimul
imul
mov
fmul
cdq
inc
jmp
dec
call
mov
les
test
jns
inc
and
mov
(bad)
leave
mov
fs
cmps
mov
movs
mov
or
pop
pop
mul
movs
popf
lods
cmp
adc
bound
fwait
mov
mov
or
adc
ss
cmc
mov
inc
rcr
push
lahf
xchg
shl
div
xchg
jle
or
mov
jle
outs
in
scas
mov
sti
fisttp
pusha
das
fcmovne
fnstsw
push
push
jne
add
imul
loopne
xor
dec
and
add
out
sbb
cli
stos
and
push
push
fcomi
mov
mov
(bad)
ds
dec
cmp
adc
cmp
in
cmp
sub
jns
ror
adc
scas
mov
xchg
fist
mov
(bad)
std
mov
add
(bad)
mov
inc
xchg
push
test
cmp
mov
xchg
pop
pop
mov
push
push
dec
mov
or
lods
push
(bad)
push
mov
dec
mov
pop
inc
pop
ins
sti
(bad)
mov
pusha
pop
push
dec
pop
iret
xchg
add
dec
push
(bad)
push
popf
mov
addr16
stos
cmp
mov
repz
in
dec
cmp
mov
adc
xor
and
into
mov
fst
mul
add
mov
or
xor
loop
inc
std
sub
push
retf
in
fdivr
push
out
dec
xchg
bound
cmp
addr16
add
lahf
inc
xchg
loop
and
fldcw
push
mov
mov
push
loopne
push
mov
jno
leave
pushf
xlat
push
sar
cld
jg
icebp
movs
fs
mov
sbb
push
xchg
arpl
jmp
mov
or
xchg
loope
add
mov
mov
inc
mov
test
cmps
inc
dec
dec
or
push
jne
ins
icebp
cmovo
(bad)
sbb
mov
mov
loopne
(bad)
jne
je
ja
and
ret
lods
clc
or
sub
out
cmp
lock
in
dec
cmp
(bad)
ficom
leave
sbb
sub
cld
sub
xlat
push
aas
sub
push
cdq
xchg
fwait
(bad)
ins
push
test
stos
aad
in
inc
mov
jmp
mov
jns
aas
retf
nop
xchg
rcr
cld
xchg
loope
cld
(bad)
sbb
sbb
mov
push
xchg
cmp
pusha
sub
rcr
pop
sbb
hlt
add
call
or
arpl
dec
or
ss
stos
mov
mov
fwait
push
mov
jle
jno
stos
test
cmp
jl
cmp
mov
add
mov
or
adc
pop
inc
xchg
mov
cmp
leave
dec
sub
dec
test
sbb
or
popf
imul
jae
and
inc
addr16
and
sbb
cmp
scas
into
pop
mov
popf
cld
rcr
dec
dec
ins
out
push
and
cmp
sbb
rcl
je
sbb
mov
jb
xor
cs
retf
and
mov
xchg
inc
sbb
nop
adc
outs
mov
lods
or
dec
mov
mov
pop
cli
cmp
imul
out
xchg
jmp
push
push
adc
push
lea
xchg
paddb
xchg
mov
popa
mov
dec
pop
mov
rcl
gs
lea
std
mov
and
(bad)
ret
push
inc
jle
sub
mov
test
lods
mov
call
std
adc
fwait
add
ins
or
adc
adc
and
cdq
cmp
mov
mov
in
std
xchg
lods
sbb
sbb
and
dec
adc
dec
popf
xor
mov
cmps
out
add
sub
mov
movs
pop
cli
sub
or
and
xchg
ret
cmp
mov
outs
pop
pusha
sub
mov
xchg
xchg
mov
repz
mov
xchg
enter
ret
dec
jns
(bad)
aas
mov
enter
dec
xlat
xor
adc
jmp
xlat
xchg
fisttp
mov
sbb
es
jg
movs
xor
shl
mov
sub
int
out
push
sar
movs
jo
enter
movs
mov
pop
fsub
imul
push
pop
xchg
cmp
in
fadd
mov
mov
sub
(bad)
arpl
push
dec
pop
mov
push
dec
xchg
fdiv
sbb
or
jns
push
pop
stos
pop
jp
xchg
adc
test
stos
cmp
add
mov
and
cmp
aas
inc
mov
mov
mov
pop
enter
(bad)
mov
int
push
pop
dec
sub
inc
dec
aad
ficom
sar
jo
test
inc
test
push
retf
lahf
in
inc
aam
push
push
or
movs
jo
sbb
jle
sbb
or
(bad)
dec
enter
rcr
gs
movs
loopne
mov
lea
add
jno
cmps
xor
fsubr
aad
mov
stos
scas
stc
fwait
mov
pop
cmc
loopne
mov
dec
mov
adc
inc
cdq
inc
sbb
ins
je
(bad)
ds
fidiv
add
movs
dec
aas
add
jle
push
push
(bad)
out
jl
(bad)
jne
test
(bad)
outs
js
mov
shl
(bad)
mov
ret
xor
in
repnz
cs
mov
xchg
call
mov
arpl
or
mov
popf
inc
mov
pop
or
inc
test
mov
repnz
push
xor
daa
or
pop
in
retf
xor
retf
pop
mov
mov
(bad)
mov
jp
repz
icebp
inc
and
(bad)
scas
jge
inc
lock
cmp
inc
es
mov
rcr
push
(bad)
icebp
inc
inc
or
fsub
jge
mov
cmp
mov
mov
push
(bad)
fdiv
aas
lahf
mov
bound
dec
mov
mov
shl
jg
push
out
adc
jg
not
push
mov
rcl
jl
mov
mov
adc
mov
mov
in
mov
popw
loope
aam
jae
cmp
pop
inc
xchg
push
sahf
in
pop
cmp
ss
aas
push
cmp
in
lea
(bad)
lods
xor
out
sti
jp
sub
repnz
fild
in
mov
inc
jne
sub
loopne
or
add
mov
cmp
dec
stc
jns
xor
idiv
arpl
ds
jg
sbb
inc
sbb
iret
mov
arpl
add
and
cwde
pop
icebp
mov
jns
cdq
or
(bad)
mov
jns
and
xchg
in
push
jle
or
cmp
and
inc
mov
lods
cld
mov
fdivr
jg
ja
inc
add
inc
xor
bound
xchg
int
out
stos
add
test
movs
scas
and
push
scas
shl
adc
add
int
lahf
dec
aaa
retf
repz
fwait
mov
mov
imul
(bad)
shl
jns
movs
test
inc
push
xchg
in
xor
mov
pushf
fmul
jecxz
cmp
push
lahf
inc
(bad)
retf
rcr
nop
dec
call
mov
shl
fnsave
xor
pop
(bad)
push
je
cmp
add
in
fcomp
ss
imul
fsub
shl
add
adc
mov
xchg
inc
xor
sub
or
test
repnz
or
or
jns
movs
test
bnd
sahf
cli
push
sub
push
mov
imul
dec
ins
inc
add
mov
mov
cmp
lahf
std
sti
daa
xchg
mov
jmp
or
jl
das
xchg
add
cwde
mov
addr16
test
push
rcr
pop
and
sbb
lahf
cmps
inc
dec
xor
xchg
or
js
add
fistp
cs
in
mov
fsubr
mov
lds
xor
daa
xchg
dec
xor
fdivr
js
xchg
out
push
inc
mov
outs
in
push
ss
pop
jg
xor
popa
mov
in
aad
icebp
int3
jecxz
xor
sti
xor
mul
movs
adc
add
cmps
mov
jnp
sub
cmp
movs
mov
sbb
outs
sbb
push
xchg
aam
test
sbb
outs
push
cwde
cmc
mov
scas
cmc
aas
xchg
add
add
xor
or
out
jnp
inc
cmp
sub
or
sub
sar
jmp
cmp
sbb
dec
sub
icebp
jo
or
add
test
add
je
int3
cmps
mov
in
cmp
or
inc
inc
(bad)
cmp
(bad)
outs
(bad)
fucomi
aas
inc
aas
repnz
mov
jge
and
mov
and
and
es
shl
popf
les
push
mov
ds
sub
aad
stc
data16
stc
loope
push
ror
ficom
aaa
pushf
xlat
push
aas
xor
cmps
sbb
clc
xchg
mov
dec
into
pop
(bad)
push
fldcw
out
call
cmps
dec
bound
js
movs
test
mov
aam
test
dec
mov
dec
add
(bad)
call
mov
cmp
mov
pop
add
pusha
imul
sbb
sbb
sbb
sti
adc
dec
jg
mov
jge
(bad)
cwde
mov
test
loopne
mov
jb
mul
(bad)
mov
jbe
fsubr
xor
icebp
fcom
dec
add
popa
cld
cmps
icebp
jno
and
sbb
aaa
cmc
out
mov
sbb
jp
cwde
fs
outs
mov
fdiv
xchg
xchg
fisub
std
(bad)
sahf
mov
jle
mov
dec
mov
ins
in
jbe
cmp
push
fstp
jecxz
jns
retf
xor
lahf
mov
push
dec
jns
cs
cmp
sahf
and
sbb
dec
leave
fcomp
add
xchg
je
pop
bound
inc
pop
jnp
mov
inc
jmp
icebp
push
mov
ss
(bad)
dec
add
mov
mov
adc
mov
jb
lahf
ret
jo
jl
or
popa
outs
icebp
dec
lods
out
rcr
mov
dec
cwde
mov
call
and
cmp
test
int
mov
imul
ds
sahf
test
repz
call
or
mov
jns
pop
sbb
pop
mov
mov
int
xchg
mov
mov
mov
mov
enter
popf
dec
sub
push
mov
ror
push
gs
xchg
jmp
inc
loopne
pop
mov
and
mov
pop
retf
lock
ficomp
(bad)
cmp
lds
sar
dec
jns
xchg
adc
fwait
loop
outs
fidivr
jnp
repnz
test
sub
out
adc
cmps
or
dec
or
pop
rcl
adc
shl
adc
sub
pop
in
dec
xchg
cmps
ss
leave
(bad)
cmp
out
mov
add
not
ret
dec
daa
aad
sar
cmp
(bad)
mov
lahf
cwde
inc
pop
jb
out
add
outs
mov
inc
fild
add
pop
cmp
sub
push
mov
sar
loop
icebp
scas
jae
add
cmc
pop
dec
rcr
fwait
push
jmp
test
and
xchg
popa
jnp
xor
gs
cmp
fisub
pop
aas
call
mov
je
fwait
mul
stos
and
neg
sbb
dec
inc
(bad)
push
retf
dec
sti
mov
push
loopne
je
popa
add
inc
mov
mov
sub
js
mov
fcmovnb
jns
cmc
push
fisub
fiadd
jne
int3
mov
and
push
cdq
add
and
push
aaa
push
dec
lods
jmp
gs
std
push
fcmovne
jnp
js
out
loopne
push
pop
int3
test
std
and
sbb
push
inc
(bad)
sub
jp
fcom
icebp
inc
xchg
popa
scas
xchg
mov
fstp
jbe
bound
or
in
daa
add
loop
mov
sub
adc
xor
aas
movs
retf
imul
push
cmp
gs
xor
lea
or
pusha
aas
or
sub
dec
xor
xor
pusha
dec
add
xlat
test
retf
(bad)
jmp
das
adc
and
mul
js
inc
ja
test
ins
call
push
adc
cmp
or
pop
cmc
and
xor
nop
fwait
sahf
dec
cmps
mov
mov
push
fadd
imul
jns
imul
adc
mov
js
inc
mov
in
push
jmp
cmps
or
ret
push
test
in
std
jno
pop
mov
mov
int3
xchg
pop
cmc
pop
ins
or
jns
or
push
fisttp
pop
idiv
cmp
mov
not
inc
in
jno
fstp
loopne
movs
or
(bad)
and
rol
int
adc
or
gs
sahf
imul
(bad)
shl
and
mov
es
pop
xchg
cmp
mov
ret
stos
fild
in
lds
xor
xchg
test
adc
retf
xchg
fldenv
fcomp
inc
add
mov
(bad)
xor
sub
and
add
mov
xor
dec
cmp
ins
(bad)
mov
cmp
idiv
cdq
cmp
jecxz
add
loope
aad
loop
pushf
pop
add
and
adc
cmp
call
push
jecxz
jbe
cld
cmps
pop
enter
push
add
jb
cmps
xor
movs
mov
jno
jo
ins
xlat
int
(bad)
xor
mov
sbb
fwait
es
stc
xor
mov
aaa
or
nop
(bad)
in
mov
(bad)
loopne
stc
fbstp
pop
mov
mov
dec
leave
ror
mov
aad
inc
xor
xchg
cdq
daa
or
call
xrelease
xor
out
jae
inc
sub
fiadd
pusha
and
and
jle
inc
adc
(bad)
mov
outs
icebp
rcr
xchg
not
push
nop
push
jbe
idiv
rdmsr
sbb
push
and
jno
scas
lahf
icebp
sub
sub
dec
sub
(bad)
or
outs
data16
dec
cmc
call
mov
imul
or
fcomp
pop
and
ret
dec
or
out
in
mov
out
cdq
dec
jo
cli
imul
mov
and
jbe
pop
mov
and
test
or
mov
dec
and
push
fadd
mov
mov
dec
lods
or
test
add
xor
push
cmp
jbe
fsub
xor
repnz
cmp
ins
mov
adc
call
mov
xchg
loopne
or
div
mov
jl
in
fisub
xor
sub
cmp
icebp
fcmovne
sub
neg
jg
cwde
pop
mov
movs
in
test
inc
sahf
sahf
test
inc
sub
jle
(bad)
push
dec
pop
movs
jecxz
xchg
mov
xchg
icebp
movs
fwait
add
sbb
mov
push
ret
add
in
jmp
daa
loopne
outs
or
inc
jle
pop
mov
loop
or
outs
sbb
retf
lock
mov
adc
adc
and
mov
mov
sbb
stos
xchg
push
sbb
jge
add
push
test
ret
xor
test
jae
xor
push
ins
push
test
mov
fs
pop
sub
cwde
enter
pop
pop
scas
add
or
cmp
xchg
sbb
jge
xchg
in
push
daa
clc
adc
jl
dec
(bad)
(bad)
fwait
jl
mov
mov
cmps
cmp
out
push
(bad)
js
mov
jle
ins
xor
in
imul
fild
adc
pusha
or
or
adc
(bad)
mov
(bad)
adc
mov
mov
or
fiadd
xor
(bad)
ins
xor
inc
pop
or
push
leave
(bad)
push
push
push
imul
std
sub
ret
xchg
imul
xchg
xor
leave
pop
sbb
data16
loopne
lods
mov
dec
xor
aad
sub
push
cmc
mov
sbb
and
mov
arpl
movs
test
rol
sbb
sub
inc
mov
fisttp
movs
sbb
inc
mul
(bad)
dec
call
icebp
push
repz
mov
xchg
sbb
aaa
mov
adc
mov
lock
scas
fcos
je
dec
call
fs
mov
or
jl
stc
bndldx
lods
aaa
jmp
popf
and
data16
movs
xor
jle
mov
mov
ds
outs
pop
fsub
icebp
fimul
cmc
xor
jmp
loopne
and
sub
or
xor
pop
xchg
add
add
push
stos
dec
inc
popa
dec
add
js
inc
call
loop
xlat
rol
xchg
clc
jno
js
mov
aad
stc
push
rcl
aas
sub
sub
sub
mov
cmp
nop
mov
and
jecxz
mov
add
push
mov
daa
xor
pop
mov
les
jbe
lock
aaa
ins
sahf
push
cmp
mov
inc
das
mov
int
sbb
push
cmp
dec
jns
fwait
movzx
jae
cmp
stc
jbe
push
test
das
fisub
mov
mov
mov
cmp
dec
or
pop
xchg
shr
jge
outs
in
shr
repz
aaa
(bad)
xchg
scas
gs
call
inc
cmc
sub
ins
and
pextrw
add
xor
movs
mov
xchg
js
fisttp
enter
mov
push
add
test
pop
inc
cvtps2pd
jno
mov
sbb
jbe
in
xlat
adc
es
outs
pop
test
sbb
xlat
jno
or
mov
out
mov
lods
ror
push
daa
sbb
iret
mov
jecxz
mov
dec
pop
or
sub
inc
iret
push
stos
dec
fbld
out
shr
das
aaa
add
popf
jbe
aad
aam
out
fimul
retf
rep
lods
xchg
or
(bad)
icebp
fst
rol
cmp
dec
pop
(bad)
mov
call
int3
xor
pop
(bad)
out
loope
sahf
adc
inc
mov
mov
iret
mov
aad
dec
scas
jle
add
aam
cmp
cmp
(bad)
mov
addr16
ret
dec
push
mov
mov
jmp
call
(bad)
movs
jo
loope
repnz
inc
call
shl
jg
(bad)
add
test
and
xchg
xchg
or
add
sub
xchg
aam
ret
xor
pop
loope
arpl
leave
sub
push
adc
mov
xchg
add
and
out
inc
jb
ret
mov
xor
outs
xor
push
(bad)
sub
lea
push
or
in
test
mov
call
xor
shr
sbb
or
ss
aas
jge
arpl
into
cdq
mov
ror
(bad)
fwait
mov
or
pop
add
adc
fisttp
loop
arpl
rcr
adc
enter
inc
out
shl
hlt
mov
push
mov
shl
daa
dec
out
sbb
add
push
(bad)
cli
or
dec
outs
mov
loope
mov
out
adc
pop
test
sub
sahf
adc
(bad)
outs
inc
mov
mov
out
push
js
imul
mov
xor
cmps
sub
rol
jbe
jmp
loop
mov
sbb
xor
lods
call
dec
cmps
xor
xchg
and
in
xlat
xchg
pop
jno
push
cmp
mov
push
jmp
dec
mov
xor
sbb
fld
leave
sub
xchg
add
movs
(bad)
cmp
loope
or
push
mov
int
dec
aas
leave
or
xchg
xchg
sbb
cmp
mov
mov
add
cmp
add
xchg
add
xor
in
and
adc
jae
mov
out
and
pop
sbb
push
scas
movs
xor
es
and
jge
hlt
cmps
and
cld
dec
dec
push
pop
sar
pop
or
lods
(bad)
out
sbb
cmp
sbb
fs
mov
cwde
rcl
sub
fnstsw
mov
scas
jmp
pop
call
int
or
enter
retf
pop
cld
cmp
(bad)
(bad)
inc
mov
std
fstp
jp
push
adc
sti
fnstsw
call
scas
fistp
xchg
scas
inc
retf
mov
mov
lods
pushw
loop
cmc
nop
jmp
imul
or
pop
out
cmps
imul
or
iret
pusha
jecxz
out
pop
mov
cmps
out
push
mov
mov
fs
das
push
push
icebp
xchg
repz
push
push
xlat
dec
inc
xor
mov
dec
in
inc
nop
xor
ucomiss
mov
aad
sbb
shl
mov
leave
out
jecxz
jp
push
dec
aaa
or
imul
push
or
xchg
mov
arpl
call
out
adc
mov
sbb
adc
or
adc
das
push
pop
loop
fiadd
jnp
push
test
cwde
ror
enter
pop
leave
sbb
adc
dec
jnp
and
fld
or
(bad)
es
fnstcw
xor
ror
mov
push
pop
sbb
(bad)
sbb
fdivr
jle
push
add
jle
sbb
in
dec
fstp
inc
jmp
cmps
enter
pop
lods
mov
addr16
shr
sub
ret
test
ins
in
in
and
adc
inc
repz
movs
sbb
mov
sbb
add
dec
add
mov
sti
xchg
adc
call
pop
cmps
add
(bad)
out
fnsave
sbb
retf
outs
add
jno
add
inc
xchg
lds
mov
scas
mov
xchg
pop
mov
pop
aam
or
dec
test
pusha
ins
cli
or
(bad)
xor
mov
sbb
loope
lds
movs
mov
ret
xor
cdq
cmp
fs
mov
xchg
clc
xlat
sti
jo
cmps
xchg
mov
add
mov
sbb
fadd
dec
or
sub
mov
and
add
jbe
fldcw
jmp
gs
mov
inc
nop
pop
fdivr
jbe
mov
mov
dec
loope
pop
gs
or
ror
pop
xor
pop
pop
imul
or
bnd
jno
xor
call
fistp
adc
xchg
sti
add
adc
inc
hlt
cmp
outs
rcr
in
mov
das
mov
in
addr16
les
test
pop
in
mov
push
ja
inc
stc
xchg
push
lds
loop
sub
sub
lahf
dec
aas
inc
fsubp
xchg
test
imul
scas
push
(bad)
mov
adc
sar
or
in
xchg
movs
jns
inc
lds
push
sti
push
loope
inc
mov
push
popf
inc
adc
stos
mov
add
icebp
or
loop
or
push
jae
imul
sbb
pop
aas
jmp
stos
int3
lahf
mov
ins
jg
and
push
lock
sub
and
add
inc
unpckhps
adc
ror
sub
lea
cwde
inc
scas
pop
push
push
cmp
and
push
add
cmp
add
ss
mov
in
dec
dec
shl
push
mov
cmp
pop
jl
mov
add
mov
rcr
push
in
push
xor
scas
loop
jmp
pop
imul
repz
ret
clc
js
jge
repz
xor
test
ficomp
cmp
sbb
xchg
fwait
repz
inc
movs
sub
dec
jmp
mov
push
test
inc
mov
or
aaa
dec
mov
aad
adc
sbb
mov
jl
call
retf
add
or
imul
sub
pop
stos
mov
(bad)
pop
ret
adc
xchg
sti
sar
cmp
xchg
stc
cmp
jne
out
add
cmp
test
jecxz
daa
cdq
mov
push
fild
outs
mov
xlat
daa
loopne
sbb
cs
pop
fsub
out
ret
test
mov
pop
pop
cmp
sahf
xchg
(bad)
sub
cld
arpl
xor
fnsave
jg
cmp
cdq
in
(bad)
retf
xchg
sub
jnp
(bad)
or
iret
and
hlt
js
pop
sbb
cmp
pop
sbb
lods
rcl
mov
and
mov
or
les
xor
pusha
or
mov
mov
mov
add
pusha
cmps
xchg
add
cmp
mov
(bad)
fcomp
sbb
pop
pusha
jg
push
pop
or
aad
aam
das
mov
not
xor
mov
iret
ds
fcmovbe
daa
cld
rcr
retf
dec
leave
out
cmps
xor
(bad)
loop
jb
push
pop
icebp
dec
scas
sbb
jo
xor
cmps
shl
inc
xlat
adc
ret
lods
in
mov
jbe
sar
fwait
in
inc
sbb
hlt
icebp
test
pop
or
sbb
jle
fcom
retf
jne
(bad)
sbb
jne
mov
or
mov
arpl
and
xchg
xchg
and
add
inc
xchg
mov
loopne
call
in
push
aad
mov
movs
out
enter
std
mov
int
test
aas
cli
repnz
mov
cld
sub
mov
jmp
mov
add
xchg
pop
xor
jno
mov
push
loope
(bad)
mov
jo
jp
xchg
(bad)
add
sub
mov
xchg
pop
push
into
or
mov
and
inc
rcl
or
outs
mov
and
adc
retf
push
retf
pop
xchg
int3
cmp
jmp
xor
add
xor
test
in
imul
cmp
test
mov
push
ds
cmp
add
loop
and
inc
cmps
xchg
shr
bsf
jnp
push
sub
sbb
cld
xchg
(bad)
fs
and
enter
push
js
enter
fstp
jecxz
push
leave
jecxz
enter
sub
imul
mov
sbb
add
jp
stos
scas
fs
mov
mov
(bad)
mov
push
in
sub
nop
push
add
ror
jl
jge
data16
aam
mov
pop
rcr
enter
add
lea
loop
js
xchg
jbe
cmps
bound
mov
or
adc
or
push
inc
mov
pop
pop
jle
sbb
outs
(bad)
loopne
adc
jns
icebp
mov
ret
push
ror
mov
or
(bad)
dec
dec
inc
jns
xor
ins
cmp
das
ins
push
(bad)
popf
adc
in
pop
fs
fs
pusha
mov
stc
loopne
hlt
lods
inc
in
cwde
(bad)
mov
cmp
jne
stc
xchg
scas
out
inc
push
fs
(bad)
pop
in
jmp
mov
mov
or
aad
adc
aaa
pop
fld
mov
arpl
mov
and
or
xor
inc
xor
dec
xchg
mov
add
sbb
ja
adc
rep
enter
push
sbb
das
sbb
push
jle
add
mov
or
hlt
enter
and
jl
and
es
out
mov
clc
adc
push
pusha
test
pushf
imul
cmp
or
mov
test
dec
adc
add
mov
push
pop
sbb
pop
das
sahf
xor
mov
cs
and
mov
in
jmp
jmp
jmp
popf
movs
je
sub
stos
lock
dec
dec
rcr
lods
cmp
jle
sbb
int
out
and
mov
(bad)
and
mov
fcmovnu
ins
sbb
or
pusha
xor
pushf
fiadd
dec
xchg
mov
lock
std
or
cmp
dec
sbb
mov
push
hlt
push
out
or
and
xchg
mov
rcl
dec
push
cmc
in
test
xchg
add
(bad)
push
mov
xchg
es
call
mov
mov
out
int3
cmps
or
cmps
mov
ret
pop
push
and
into
add
outs
sub
and
lock
cmc
sar
jmp
or
fcom
iret
push
fimul
jo
jns
call
mov
cmp
pop
add
add
aas
jmp
cld
adc
int
(bad)
and
sar
fbld
inc
out
jns
(bad)
fwait
shl
pop
sub
mov
nop
push
in
push
mov
sub
sbb
xor
and
add
loope
push
cmps
clc
dec
lahf
jnp
(bad)
aad
iret
repz
sub
imul
add
mov
cs
mov
sti
adc
nop
loop
arpl
pop
scas
cmps
jecxz
hlt
xchg
jnp
rol
pop
xchg
jecxz
leave
imul
fimul
jmp
push
jmp
inc
shl
leave
aaa
imul
cld
imul
repz
gs
addr16
push
test
adc
pop
mov
xor
pop
inc
jle
retf
xor
retf
lds
jno
inc
jo
pop
(bad)
mov
inc
mov
sar
out
popf
mov
xor
jbe
mov
jecxz
test
out
(bad)
mov
sbb
add
push
inc
mov
(bad)
and
mov
sar
ret
add
and
xchg
in
add
das
or
loop
add
dec
icebp
icebp
add
xchg
jnp
loopne
loop
xor
or
xchg
mov
cli
jmp
gs
popf
inc
adc
(bad)
pop
sbb
dec
push
in
xor
jmp
adc
addr16
cli
mov
xor
aas
mov
stos
pop
adc
gs
in
mov
enter
neg
or
test
adc
pop
fcmovnb
push
bswap
pop
repnz
(bad)
and
retf
xchg
int
inc
aas
cdq
jnp
dec
sbb
pop
fsubr
xchg
shr
imul
aas
jb
dec
inc
push
(bad)
(bad)
shl
jbe
retf
mov
mov
or
mov
hlt
in
inc
fmul
add
outs
sub
cmp
mov
and
jp
jnp
xchg
xchg
ror
xchg
jle
dec
fwait
adc
test
xor
fst
outs
and
pop
inc
lods
call
sub
mov
aas
xor
mov
add
sub
sub
fst
mov
mov
and
mov
fld
outs
gs
fnstenv
sbb
xchg
adc
xchg
or
in
mov
ficomp
mov
xchg
and
dec
call
and
or
mov
mov
push
cmp
xchg
mov
sbb
nop
inc
jns
rcr
in
(bad)
jmp
out
pushf
add
(bad)
add
sti
int
ret
inc
xchg
mov
and
jmp
fwait
cmps
in
daa
jecxz
shl
xor
(bad)
jnp
clc
cmp
repz
cdq
fsub
cwde
cmp
mov
test
xor
dec
loopne
xchg
retf
mov
aas
xchg
test
pop
cmps
enter
loop
lods
mov
pop
ror
push
mov
jecxz
lea
pop
fld
cmp
jle
test
in
arpl
ins
push
add
and
mov
neg
mov
aam
adc
mov
hlt
loop
leave
ficom
arpl
aad
out
(bad)
mov
xchg
dec
mov
pop
sub
imul
xchg
ret
icebp
into
test
call
je
xor
pop
inc
mov
cdq
pop
mov
hlt
test
pop
movs
in
jl
arpl
lods
outs
or
sbb
xchg
dec
mov
outs
adc
imul
xor
pop
cwde
pop
dec
jae
add
mov
jmp
add
fldenv
adc
scas
and
mov
stos
pop
shl
lds
and
mov
in
cmp
mov
jnp
fs
inc
mov
jns
mov
mov
ins
mov
push
aaa
out
fbstp
inc
in
jo
sub
lds
test
rol
retf
dec
scas
scas
xchg
and
dec
push
sbb
mov
je
jnp
cwde
and
ret
push
mov
fstp
sub
aas
scas
or
sub
inc
adc
ins
lea
mov
dec
sar
add
dec
xor
sbb
mov
or
or
cmp
fiadd
xor
jb
sbb
(bad)
adc
cmc
jo
aaa
mov
ret
jb
mov
popf
sub
or
adc
(bad)
push
aad
dec
lods
jno
xor
or
inc
out
or
adc
test
in
lods
movs
fbstp
sbb
icebp
xchg
mov
pop
rol
ret
mov
scas
cmp
(bad)
(bad)
and
lds
mov
push
aas
cmps
ins
sbb
mov
mov
xchg
gs
shl
adc
xchg
cmp
frstor
aad
fistp
or
dec
test
loope
xor
and
mov
push
pop
inc
pop
sbb
and
mov
add
sbb
test
out
or
addr16
sti
mov
cmp
pop
call
pop
and
mov
daa
in
icebp
pop
ss
lods
dec
adc
pop
call
jno
(bad)
int
mov
push
neg
sub
(bad)
mov
shr
cmp
mov
loop
cmp
leave
jae
adc
sub
xor
inc
push
(bad)
out
adc
fld
or
repnz
out
call
pop
push
(bad)
ins
dec
xchg
imul
cwde
ins
(bad)
clc
repnz
dec
mov
mov
call
fnstcw
aas
mov
push
dec
clc
out
loope
adc
mov
out
ret
outs
pop
ins
or
mov
or
sbb
mov
dec
lods
cli
add
std
sbb
push
mov
pop
cs
imul
popf
mov
sub
ficomp
je
(bad)
leave
cmp
scas
mov
gs
jge
xchg
icebp
loope
xor
clc
sub
mov
ror
sub
test
xchg
out
pushf
ins
iret
scas
fistp
cdq
xchg
(bad)
sub
imul
xor
call
adc
mov
iret
sti
fsubr
push
adc
rol
cdq
push
out
pop
jno
add
adc
sbb
repnz
adc
stos
scas
rcl
jbe
(bad)
in
pop
inc
jo
sub
in
push
sbb
jne
or
mov
cmp
rcl
in
mov
pop
fsubr
push
cwde
jmp
bound
xor
(bad)
jo
add
inc
pop
lods
cmc
dec
mov
adc
xlat
(bad)
mov
clc
fld
into
pop
jo
jp
push
mov
sahf
push
cld
sar
call
es
mov
xor
test
sub
lea
and
ficomp
add
popa
mov
repz
iret
push
add
popf
lock
jge
sbb
add
mov
jne
int
mov
(bad)
out
pusha
and
sbb
mov
jle
xchg
dec
ins
xchg
sbb
cld
cmp
rcr
lods
inc
fsubr
sbb
ror
sbb
mov
mov
fmul
or
jmp
adc
(bad)
cmp
stc
outs
and
jmp
jmp
pushf
loope
push
and
je
xchg
pop
and
sbb
aas
jmp
inc
add
in
inc
imul
add
cmp
xor
test
lds
repnz
out
cwde
mov
cmp
push
xlat
movs
mov
xchg
(bad)
mov
dec
test
mov
add
xchg
sub
mov
mov
cmp
cwde
(bad)
test
stc
pop
outs
cli
mov
(bad)
iret
push
adc
dec
inc
xlat
dec
or
cmp
ins
and
pop
cmp
scas
jno
sbb
xchg
ja
pop
xchg
dec
icebp
pop
push
sub
jecxz
inc
dec
sub
addr16
nop
hlt
push
std
push
mov
cmp
shr
add
not
jne
icebp
(bad)
lods
xor
hlt
outs
inc
retf
test
leave
pop
adc
jmp
out
mov
jo
mov
cmp
lock
stc
lods
std
sbb
rcr
retf
xor
and
jae
dec
jmp
mov
mov
xchg
xchg
lock
shl
adc
sbb
jecxz
pop
mov
test
dec
js
(bad)
pop
add
push
out
push
pop
add
hlt
jp
fst
hlt
mov
inc
and
fwait
loopne
hlt
sbb
sub
add
call
sbb
mov
xor
fild
cmp
div
std
mov
pop
(bad)
cli
cli
mov
and
sti
dec
push
clc
add
cdq
adc
xor
cmp
test
imul
adc
icebp
pop
or
bswap
dec
sub
sbb
xor
fisttp
cs
leave
add
dec
fldenv
loopne
fs
mov
mov
into
cmps
fsubr
cmc
scas
js
and
xchg
cmp
lahf
dec
and
push
test
inc
sbb
inc
inc
and
add
loop
(bad)
fs
dec
push
int3
and
movs
fucomp
jnp
repz
div
popa
(bad)
cmp
adc
and
hlt
mov
dec
sub
neg
into
shl
ss
imul
cwde
cmp
shl
pop
pop
out
xchg
inc
cmp
js
inc
cmp
dec
stos
enter
jnp
hlt
and
jae
(bad)
shl
push
test
lods
push
mov
nop
cmc
or
pushf
inc
lods
pop
outs
fbstp
add
aam
ja
xor
cmp
dec
cmp
sbb
iret
or
popf
xlat
mov
inc
call
pop
adc
dec
or
addr16
out
cmp
popa
cmps
push
adc
in
scas
or
int3
aad
imul
ret
push
mov
mov
jno
cmp
ficomp
stos
jp
sub
cld
movs
xor
gs
mov
push
mov
xchg
pop
adc
shl
cdq
push
mov
push
ins
adc
cmp
mov
das
or
dec
lods
sbb
or
call
pop
mov
jnp
fisttp
cmp
xchg
xor
hlt
scas
sub
outs
xchg
(bad)
xchg
jg
retf
cli
xchg
fldcw
pop
not
cmps
push
jo
xchg
popf
fs
(bad)
pop
add
pop
icebp
mov
jbe
(bad)
arpl
lods
or
mov
or
pushf
je
sti
dec
or
shr
mov
push
(bad)
mov
mul
and
and
fdiv
es
out
and
lods
jno
pop
icebp
sti
sti
mov
mov
adc
push
call
stos
mov
sbb
fcom
in
sub
sbb
(bad)
in
movs
push
inc
ret
mov
push
out
lahf
inc
cmps
pop
mov
sub
imul
jge
lahf
adc
lea
push
xor
inc
loopne
or
sbb
imul
jg
mov
xor
fstp
push
(bad)
outs
ds
movs
sub
cmp
lahf
sub
dec
imul
outs
jl
cwde
aam
loope
es
xor
pop
push
jne
fnstcw
sbb
xlat
aad
dec
mov
stos
cwde
call
mov
adc
adc
cmc
fist
dec
inc
push
sti
jae
jnp
test
sar
ss
pop
inc
cmp
mov
cmp
adc
xchg
fiadd
imul
add
mov
jnp
mov
adc
test
lahf
daa
jecxz
jmp
and
rep
rcr
mov
leave
add
cmp
inc
or
imul
sub
movs
pop
outs
inc
mov
hlt
stc
inc
(bad)
std
out
mov
cmp
repz
adc
sbb
repnz
mov
mov
jb
adc
inc
dec
cli
int3
push
inc
or
mov
and
adc
int3
jp
push
gs
les
popa
outs
mov
sbb
dec
mov
pop
fbld
push
add
jne
xchg
sub
outs
test
jle
rol
adc
shr
or
test
leave
cwde
test
inc
in
sar
mov
xor
inc
and
loopne
add
jns
int3
pop
jo
shl
sbb
daa
mov
xchg
mov
shl
outs
loope
dec
mov
jmp
mov
rol
dec
dec
xchg
call
adc
adc
pop
test
jmp
xor
xor
je
push
xor
mov
xchg
enter
cld
shl
cmp
mov
push
shl
mov
adc
fist
sub
jo
popf
aad
mov
hlt
push
xchg
mov
stos
and
xchg
into
inc
lods
mov
push
pop
in
push
sub
lock
cmp
inc
sub
lods
mov
mov
adc
dec
mov
xchg
sti
sub
js
jmp
call
inc
or
lods
sbb
jmp
loope
xor
sub
fs
out
test
in
aas
stc
js
push
xchg
idiv
stos
rcr
xor
sub
mov
idiv
adc
jns
or
movs
je
mov
and
out
inc
dec
in
enter
call
repnz
(bad)
sbb
mov
ret
sbb
mov
inc
das
add
sbb
pop
aas
clc
out
test
(bad)
mov
es
movs
dec
retf
sti
push
pop
arpl
push
xor
xchg
jmp
pop
xor
mov
jne
stos
push
xchg
add
cmp
clc
ret
sahf
call
rcl
jmp
out
add
push
stc
in
call
jg
ffreep
rol
test
scas
leave
fdiv
mov
es
jmp
loop
cli
shl
pop
lock
lds
(bad)
cmp
test
xchg
adc
outs
mov
inc
loop
in
bound
scas
mov
and
out
movs
rcl
(bad)
fisub
add
test
retf
jl
sbb
mov
ret
call
lods
sub
mov
jmp
sbb
stos
mov
inc
add
jo
call
sub
iret
(bad)
or
fisttp
mov
or
hlt
pop
xchg
lea
bound
jbe
fs
mov
int3
nop
in
push
sbb
dec
lea
icebp
mov
imul
pusha
iret
imul
lds
rcl
adc
fidiv
mov
cmp
cdq
mov
(bad)
rcl
call
bound
inc
shl
cmp
retf
inc
test
xor
adc
cmp
pop
iret
and
in
mov
pop
mov
pop
jecxz
sahf
sub
sub
xor
pop
(bad)
jg
jnp
je
sbb
in
add
icebp
mov
in
mov
nop
sub
sbb
das
pop
pop
pop
rcl
xchg
loope
loopne
jecxz
out
sar
fadd
pop
es
push
in
outs
mov
push
pop
pusha
jo
pusha
mov
push
push
or
inc
push
aas
xchg
loop
mov
mov
and
rcr
loopne
les
cmps
inc
ds
aaa
jns
push
int
sub
sbb
es
cli
ficomp
stos
(bad)
and
jge
cmp
adc
sub
sbb
movs
pop
cmp
dec
int3
test
jg
jmp
div
xor
lods
cmps
inc
sub
adc
and
and
(bad)
mov
scas
fwait
mov
pop
je
adc
cmps
push
pop
(bad)
icebp
dec
and
jae
jno
jo
and
dec
cwde
gs
xor
test
enter
add
mov
lock
in
daa
xor
mov
cmp
test
or
sbb
push
mov
(bad)
push
retf
cmps
mov
sub
dec
cmp
shr
mov
lea
or
in
in
out
jle
mov
adc
out
mov
ja
std
sbb
xor
jl
xor
xchg
mov
mov
aaa
ss
out
pop
enter
lock
or
cmp
sub
inc
dec
call
cmp
ins
maskmovq
cs
scas
adc
dec
aam
sbb
or
xchg
into
ret
int
push
pop
cld
icebp
vpunpckhdq
out
cwde
imul
mov
(bad)
xor
(bad)
in
test
ja
mov
les
int3
sub
add
dec
dec
jb
push
rol
cmp
fdivr
pop
fwait
xor
cmc
js
sti
mov
pusha
lds
test
inc
xchg
fwait
pop
mov
dec
pop
xor
cmp
mov
inc
cmp
cmps
xchg
test
ret
ret
or
push
test
int3
int
push
jnp
mov
xor
sahf
xor
aas
xor
pop
retf
fadd
pop
mov
fistp
pop
pop
ins
in
nop
sbb
add
popa
mov
(bad)
scas
inc
jmp
fadd
(bad)
jo
xor
cmp
and
cmc
jp
ror
(bad)
and
or
(bad)
cli
leave
add
dec
pop
ins
cmps
cmp
mov
jmp
push
test
xor
add
dec
add
mov
xor
pushf
ret
push
add
mov
cmc
fild
push
cmp
das
pop
sbb
jl
stos
int3
lds
push
test
mov
jp
sbb
sub
xchg
mov
mov
repnz
sbb
je
(bad)
fisubr
mov
adc
jl
ja
(bad)
loop
dec
rcr
jl
imul
jbe
imul
and
pop
cwde
inc
inc
fst
call
dec
leave
aaa
bound
mov
cmps
adc
pop
add
xchg
or
and
jle
xchg
movs
dec
ret
ja
cmps
and
test
jmp
fstp
fimul
or
xchg
pop
fnstenv
xchg
nop
bound
mov
fst
adc
mov
mov
pop
and
cs
iret
rcr
ja
fcmovnb
add
push
aad
mov
adc
jmp
daa
js
cmp
mul
test
retf
mov
dec
scas
jmp
adc
adc
out
mov
xor
pop
add
sbb
mov
aas
sub
test
jl
dec
gs
jl
std
jp
mov
mov
cwde
js
xchg
push
jp
jg
jecxz
sub
lods
sbb
pop
pop
in
out
mov
icebp
retf
movs
ja
fnstcw
les
and
stos
sbb
push
ret
adc
ja
int3
push
push
sti
mov
leave
rcr
test
icebp
mov
sub
cld
and
in
xor
or
xor
pop
sbb
xchg
lahf
enter
imul
dec
xor
sub
or
fmul
xor
pop
ins
lahf
mov
in
inc
xchg
fdiv
xor
test
(bad)
retf
mov
sub
sub
outs
xor
mov
xor
addr16
jns
sbb
xchg
push
retf
fist
(bad)
(bad)
aam
into
es
sub
imul
inc
mov
cwde
mov
jecxz
pop
sbb
fild
aad
inc
or
xor
fnstcw
adc
push
adc
js
loope
in
pushf
mov
mov
dec
sub
mov
xor
or
or
fcmovbe
(bad)
out
mov
retf
and
inc
pop
and
arpl
fbstp
mov
and
(bad)
mov
jl
xchg
fidiv
lahf
imul
cmp
jl
push
(bad)
mov
pop
sub
dec
daa
xchg
js
gs
call
ret
iret
cdq
sbb
out
push
mov
into
jbe
fisttp
ins
inc
div
pop
imul
in
movs
mov
inc
dec
cmp
or
fld
fsub
inc
cmp
(bad)
in
inc
sar
and
adc
stc
push
pop
addr16
sbb
adc
ds
cmc
in
cli
mov
adc
jmp
cmps
sbb
(bad)
retf
mov
cld
jne
or
mov
pop
repz
mov
cmps
cs
cmc
xor
inc
mov
add
pop
mov
cmp
popa
inc
xlat
fistp
push
test
das
xor
aaa
and
and
and
xchg
neg
ret
ret
movs
ss
outs
jb
adc
adc
loop
in
mov
shl
je
(bad)
lds
inc
pop
jle
enter
(bad)
stos
addr16
and
cmc
sti
pop
test
cmps
sub
fisub
bound
jmp
sub
mov
mov
sbb
lea
(bad)
(bad)
clc
sti
mov
(bad)
outs
inc
mov
(bad)
pop
jnp
xlat
mov
stos
adc
mov
popa
scas
shl
stos
ins
in
mov
imul
jle
mov
jecxz
fnstsw
mov
stc
pop
push
or
adc
movs
arpl
or
out
dec
fdiv
inc
adc
in
and
dec
loopne
pusha
fbstp
inc
(bad)
rol
ret
ret
cli
out
and
repz
ret
rol
cmp
mov
(bad)
out
js
xor
call
out
jo
xchg
cmps
push
es
mov
mov
adc
adc
daa
mov
loope
lea
data16
xor
push
retf
lock
aaa
mov
xchg
mov
adc
arpl
sbb
adc
sbb
push
mov
adc
pop
jns
push
xchg
pop
(bad)
mov
pushf
inc
out
sub
add
xchg
nop
lock
sub
mov
cmp
fld
fimul
and
movs
call
call
movs
pop
cmp
cmp
xchg
jecxz
repnz
pop
cmps
and
jae
aas
xchg
fcmovnbe
and
ret
push
xor
dec
dec
cld
pop
dec
sub
outs
mov
dec
jbe
fisubr
adc
jl
jnp
mov
pop
mov
dec
out
adc
inc
out
gs
mov
addr16
aam
cmps
xchg
and
sub
(bad)
mov
jb
sub
or
sbb
imul
pop
cmps
sbb
mov
add
mov
cmp
ret
push
mov
popf
mov
adc
enter
or
sub
sub
fsincos
xchg
shl
mov
imul
lea
xchg
pop
xchg
and
sub
and
(bad)
out
jmp
sub
popa
lea
adc
xchg
mov
fdiv
push
mov
jb
cmp
push
lea
jb
mov
or
fld
xor
adc
jo
cmps
sbb
arpl
les
pop
mov
mov
icebp
jno
or
sbb
bound
dec
push
dec
pop
xor
pop
dec
adc
stos
dec
outs
sub
sahf
enter
mov
out
gs
into
not
inc
xchg
movs
fs
arpl
jg
mov
sahf
jne
mov
es
cdq
iret
mov
pop
cwde
jge
addr16
xor
mov
repz
or
fsub
sar
idiv
jge
aam
add
mov
or
xchg
cmp
xchg
xchg
or
ins
outs
repz
pop
xchg
cdq
lea
cdq
in
(bad)
mov
and
repz
in
ror
inc
dec
fs
push
cmp
(bad)
cmp
inc
and
push
loope
sbb
or
lods
add
jmp
arpl
ss
jecxz
mov
ins
mov
pop
xchg
pop
xor
int3
idiv
sar
mov
gs
leave
mov
pop
int3
(bad)
adc
inc
xchg
bnd
pop
add
ret
ret
dec
push
push
orps
jl
push
add
jp
mov
in
lea
popa
mov
push
iret
gs
sar
sbb
sbb
or
repz
fsubr
jmp
fadd
out
ss
xor
fstp
stos
sbb
push
test
mov
xor
add
loopne
aas
pop
dec
xor
mov
dec
lahf
lea
push
jns
pop
sub
out
jbe
xor
imul
movd
fsub
or
inc
pand
cmc
fidivr
and
fcomp
add
dec
mov
daa
aas
outs
push
mov
cmp
cwde
jb
ret
aaa
out
sub
test
(bad)
pop
shr
std
and
or
adc
mov
fmul
lock
jp
jmp
test
jnp
int
dec
mov
add
adc
test
loop
adc
stc
outs
pop
push
jle
imul
out
and
and
into
inc
jle
ret
bound
pop
imul
test
push
bswap
call
and
push
mov
xchg
jg
sbb
loope
std
mov
xor
popf
jmp
adc
xchg
ds
lea
popf
push
jp
test
fsubp
mov
retf
or
mov
(bad)
cld
adc
xor
movntq
out
out
cli
mov
sub
das
cmc
loop
and
stc
gs
pop
movs
add
div
iret
call
cmp
dec
repnz
repz
mov
pushf
int3
fs
addr16
out
pop
xchg
jnp
ins
leave
jp
nop
pusha
aam
mov
loop
push
dec
jne
mov
(bad)
jo
and
sbb
in
mov
iret
adc
adc
xchg
or
cs
sbb
das
das
fcomp
in
aam
push
dec
jno
sti
retf
pop
inc
xchg
outs
nop
or
pop
rcl
lahf
(bad)
mov
cmp
xchg
(bad)
cli
jg
(bad)
mov
mov
ret
xor
retf
sub
(bad)
loopne
ins
mov
(bad)
sar
jl
cmp
and
adc
bound
sar
(bad)
mov
mov
and
out
sub
mov
jge
mov
and
out
inc
push
loopne
inc
inc
mov
sbb
push
lds
adc
outs
ret
out
or
div
jns
stc
cmp
cdq
into
cs
pop
jmp
mov
in
jecxz
mov
or
jns
dec
jmp
ja
retf
icebp
fs
jmp
rcr
jne
xlat
push
jnp
bnd
mov
mov
mov
rcl
test
loop
test
pop
mov
mov
push
jb
jg
sbb
mov
repz
xor
test
and
or
jecxz
repz
push
push
xchg
push
stos
push
dec
call
js
fs
test
dec
jecxz
mov
add
lods
cmp
xchg
xor
dec
xchg
mov
mov
fisub
push
pop
pop
mov
es
mov
sbb
adc
fild
shl
push
cwde
aas
ret
pop
ret
or
xchg
and
(bad)
push
cmp
inc
mov
adc
cmp
in
dec
dec
enter
rol
ja
rol
(bad)
in
lea
inc
or
rcr
push
push
dec
hlt
sbb
sbb
repz
pop
adc
sar
call
dec
ss
pushf
add
loope
cmp
push
pop
add
mov
fnstcw
ret
out
and
test
sub
ud0
pop
mov
dec
outs
or
pop
retf
jg
iret
out
add
cmp
popf
lods
adc
stc
mov
push
dec
push
sbb
or
neg
mov
mov
int
jmp
ins
add
int3
scas
loopne
ja
and
mov
mov
inc
lods
ja
les
popf
int3
dec
mov
pop
xor
cmp
mov
jne
mov
add
stos
sub
cmc
inc
sub
test
inc
cmp
(bad)
cmp
pop
mov
pop
and
add
pop
rcr
jmp
js
sbb
push
push
sbb
mov
clc
leave
neg
fcom
xchg
loop
cdq
sub
fidivr
inc
call
sub
fmulp
xchg
sbb
pop
adc
mov
or
idiv
fcomi
call
fmul
mov
cmp
xchg
or
push
ficomp
jge
inc
int3
in
psraw
push
pushfw
test
pop
cmps
aad
jnp
cs
jae
out
lea
fnstsw
test
xor
jmp
int3
inc
mov
lahf
jnp
scas
and
jb
cmp
and
mov
mov
mov
scas
lea
push
cmp
and
retf
cmp
adc
or
adc
inc
jns
adc
add
pop
mov
fidivr
or
adc
xchg
xor
jmp
push
icebp
pop
js
mov
sub
dec
fs
out
mov
pop
sub
push
imul
mov
mov
dec
sar
sub
mov
mov
imul
inc
cmp
ss
arpl
xor
xor
ror
dec
imul
(bad)
outs
out
daa
call
daa
rcr
jecxz
mov
inc
ja
cmp
push
cmps
aam
and
test
push
push
xor
cld
mov
xor
clc
sub
outs
icebp
inc
sbb
imul
shl
fs
fsub
data16
jb
xlat
jmp
in
dec
dec
mov
mov
iret
hlt
sbb
mov
cmc
push
add
push
or
iret
test
xchg
pop
push
pushf
aas
push
push
mov
jle
mov
sub
cmps
xchg
ss
pop
iret
in
enter
xor
push
aam
fucomip
mov
push
shr
test
jmp
neg
jmp
je
stos
jbe
xor
mov
pop
sub
mov
in
mov
cmps
stos
or
pop
add
pop
dec
xlat
out
and
mov
dec
lods
pusha
mov
xor
cmp
or
clc
fimul
jecxz
fcom
sub
jb
fwait
mov
mov
add
xchg
test
arpl
cmp
mov
ins
retf
push
mov
shr
stos
inc
dec
mov
fs
mov
das
stc
xor
lods
or
add
xlat
data16
xchg
jb
data16
sbb
fwait
sbb
pop
dec
push
stos
frndint
push
mov
cmc
jl
sbb
jns
(bad)
aad
ret
clc
or
(bad)
sub
mov
jecxz
shl
and
out
hlt
push
inc
enter
outs
inc
mov
mov
push
dec
or
push
test
jmp
cmp
int3
loopne
pop
das
mov
popa
cmps
push
pusha
sub
retf
test
out
pop
fwait
addr16
jne
retf
loopne
adc
mov
pop
outs
mov
cmc
sahf
or
iret
aaa
mov
mov
pop
and
pop
jae
push
mov
or
cmp
pop
xchg
(bad)
setb
arpl
dec
mov
pop
xchg
mov
ret
dec
test
addr16
lock
mov
pop
sar
pop
adc
daa
sub
ret
je
push
retf
pop
fwait
in
ins
push
jmp
cmp
mov
into
enter
les
imul
xchg
mov
xchg
sbb
pop
das
pop
fcomp
nop
in
mov
push
in
(bad)
and
jbe
loope
xchg
inc
mov
daa
inc
inc
out
pop
mov
cli
cli
ja
cmp
test
int
sub
rol
lds
(bad)
in
mov
fimul
pop
jmp
daa
imul
cmp
mov
mov
push
jo
call
scas
pop
adc
push
retf
enter
xchg
out
mov
adc
outs
sub
pusha
test
push
aam
mov
mov
inc
test
dec
movs
push
in
jle
mov
jne
sbb
iret
jl
scas
inc
lock
pop
repnz
push
and
repz
cmps
and
or
push
pushf
dec
and
(bad)
ins
xchg
jle
mov
add
sar
inc
jmp
sahf
push
add
add
pop
gs
pop
mov
push
ror
push
cmc
repnz
movs
adc
jae
jecxz
cmp
add
push
int
mov
mov
xor
div
inc
sub
xor
bound
scas
imul
adc
xchg
jecxz
in
ret
cmps
scas
(bad)
jmp
sub
je
xor
or
sub
test
pop
jmp
lock
fistp
(bad)
sti
scas
push
jecxz
hlt
aam
mov
inc
std
ins
movs
or
mov
rol
push
mov
movs
lea
cmp
and
pushf
loope
push
arpl
lods
js
dec
add
std
aas
add
push
inc
test
jmp
rcr
pop
test
cmp
xchg
dec
push
neg
addr16
pop
out
int
fcomp
sub
cmp
cld
loope
or
(bad)
adc
xchg
loope
aaa
out
and
push
sub
retf
sar
cwde
pushf
test
pop
add
xchg
rcr
lods
stc
rol
xor
(bad)
retf
data16
adc
dec
add
mov
sub
dec
je
sbb
aaa
or
cmp
xor
fwait
cdq
rcl
es
jl
(bad)
xchg
psraw
xor
adc
or
jno
adc
jl
add
add
dec
adc
pop
cmps
sbb
adc
dec
call
jl
es
xlat
scas
mov
aas
stos
mov
stc
sbb
push
in
clc
adc
es
bound
sbb
pusha
pop
inc
cwde
dec
aam
leave
xor
adc
out
outs
cmp
out
pop
mov
inc
in
jae
psubb
cmps
cwde
pop
ja
fs
ficomp
mov
cli
aas
pop
and
inc
mov
mov
shr
and
cmps
cs
cwde
les
pushf
(bad)
push
jnp
mov
ins
stos
repnz
aaa
dec
call
dec
mov
push
push
jo
cwde
jne
imul
fbstp
cmps
mov
mov
dec
js
or
cwde
cmp
stc
gs
mov
push
dec
dec
xchg
fistp
lods
fwait
jno
out
mov
dec
(bad)
call
mov
dec
add
shr
mov
adc
nop
jns
push
cmps
cmp
es
bound
add
mov
bound
and
push
or
imul
cli
mov
aad
lods
mov
clc
sbb
xchg
and
sub
jmp
push
add
leave
sbb
or
lods
fdiv
std
fild
xchg
stc
cmp
xor
add
dec
cmps
fcom
sbb
lods
dec
cmp
outs
xor
push
pop
(bad)
lahf
xchg
retf
push
dec
test
adc
xchg
xlat
sub
imul
(bad)
pusha
add
mov
ins
add
loope
and
mov
jns
bound
mov
test
mov
cwde
int
add
sti
xchg
stos
cwde
add
je
xchg
mov
aaa
jne
rcr
or
(bad)
data16
jb
bound
xor
jmp
fldcw
xchg
leave
sub
push
fstp
mov
sub
jl
ins
leave
retf
fld
std
std
jnp
iret
mov
fcomi
sbb
ja
push
es
pop
cmps
add
sti
add
ins
cdq
push
es
jge
xchg
and
shl
fidiv
push
jnp
gs
inc
sub
mov
addr16
xchg
xor
test
in
mov
clc
repnz
mov
scas
lahf
jecxz
and
pushf
add
pop
repz
and
out
adc
mov
cmps
rol
pop
les
jle
mov
xor
sbb
mov
xchg
xchg
fisub
gs
and
xchg
xor
mov
mov
push
inc
pop
mov
addr16
fbstp
xchg
cmps
shr
xlat
mov
(bad)
jecxz
outs
mov
sub
cmp
jg
cwde
cli
aas
mov
mov
lods
stc
fnstenv
xchg
loope
ins
adc
jmp
dec
data16
xchg
imul
mov
iret
adc
cwde
adc
sub
add
push
pop
push
and
jl
in
mov
cmp
pop
jp
fild
test
add
jne
stos
add
inc
jecxz
mov
pop
jo
or
aaa
movs
add
rcr
or
xchg
push
cmp
mov
rcl
pop
adc
fwait
mov
add
and
and
loop
inc
add
cmp
inc
xor
es
or
or
inc
lods
xor
das
(bad)
sahf
ret
out
mov
das
inc
mov
fld
xchg
ror
cmps
or
pop
retf
sub
push
pop
sti
jne
fadd
inc
inc
add
jb
mov
sbb
xchg
jl
add
pop
jmp
sbb
jo
repz
add
out
jne
test
jb
add
fwait
inc
mov
fwait
dec
ror
in
and
lock
inc
rcl
add
es
aaa
aas
xchg
adc
jne
test
retf
out
xchg
lock
in
cmc
jmp
sub
test
pop
les
cmc
mov
and
pop
jecxz
inc
add
aas
sar
loopne
in
jbe
aad
dec
mov
or
sti
(bad)
mov
jo
aad
and
stos
stos
xor
enter
dec
dec
mov
imul
push
fisub
jl
cmps
add
jae
mov
aas
clc
sub
mov
ja
dec
in
dec
inc
xchg
pop
stos
cmps
gs
jmp
cdq
sub
hlt
mov
in
jecxz
pop
pop
ds
and
scas
dec
xchg
pop
je
xor
mov
adc
xor
loopne
cmp
cmp
adc
inc
mov
ret
stos
xchg
pushf
stos
cmp
xchg
add
cwde
(bad)
bnd
into
xlat
inc
cmp
test
les
or
push
(bad)
cld
das
call
ss
dec
dec
nop
mov
xor
lods
push
int3
mov
ret
and
enter
pop
dec
rcl
sub
stos
push
in
test
xlat
(bad)
mov
jmp
pop
fwait
and
dec
sbb
test
sub
sub
mov
add
sub
cld
(bad)
test
inc
sahf
bound
fistp
sbb
cs
fld
ret
imul
in
mov
ins
test
xlat
outs
mov
movs
data16
cmc
pusha
or
outs
loope
mov
xlat
retf
ins
popf
stc
mov
sbb
adc
test
mov
cli
es
repz
mov
in
mov
push
and
movs
ret
dec
xor
fcmovnu
sbb
push
add
loop
or
dec
mov
cmp
mov
inc
pop
pop
jmp
pusha
inc
pusha
pop
rol
inc
das
lds
std
inc
idiv
out
iret
in
adc
inc
mov
or
in
je
out
xor
xor
sbb
jle
and
(bad)
(bad)
jb
adc
push
and
test
loopne
push
or
stos
inc
sbb
jb
outs
jbe
jecxz
add
pop
sbb
jg
xchg
mov
imul
cmp
mov
mov
cs
js
sbb
stc
xchg
sbb
inc
cmps
mov
pop
xor
out
jnp
iret
push
loopne
fidiv
push
sbb
pop
lock
cmp
sbb
xor
xor
sub
cmps
push
xor
repz
sbb
les
das
test
mov
gs
outs
sub
rol
loopne
inc
or
inc
scas
lods
adc
push
cs
jp
cmc
jae
cmp
add
stos
out
push
cmp
xchg
mov
xor
stos
add
outs
retf
fnstenv
sahf
or
push
push
mov
mov
xor
mov
in
sub
pop
inc
sbb
dec
rol
xchg
inc
nop
push
ror
jne
lods
push
sbb
ror
iret
cmp
mov
cmps
adc
in
pop
pop
jae
xor
ror
mov
dec
ret
fisubr
mov
adc
or
or
sub
inc
inc
jg
jge
jne
in
push
and
or
cmp
repnz
xor
sbb
sbb
aas
mov
pop
xchg
rcl
cmp
dec
div
xchg
cmp
mov
mov
jo
popa
sub
into
push
sti
sub
inc
mov
cmps
inc
mov
push
push
aas
jge
mov
neg
inc
out
(bad)
xlat
mov
neg
xchg
popa
call
mov
mov
test
sti
inc
outs
test
jge
mov
pop
stos
aas
ficomp
imul
not
sti
call
mov
lds
popf
icebp
cdq
or
clc
scas
xchg
daa
jns
inc
setb
dec
pop
fimul
and
pushf
popa
pop
(bad)
ds
and
adc
(bad)
imul
fisubr
sub
sub
es
daa
out
mov
bound
and
retf
(bad)
jle
dec
inc
lods
ja
fild
test
push
nop
push
pop
cdq
cmp
inc
addr16
cmp
lods
push
aas
dec
popf
and
rcr
out
push
push
scas
sbb
(bad)
es
dec
cmp
push
inc
jo
push
les
ud0
cld
imul
adc
add
pop
inc
push
jle
jmp
pop
test
mov
xchg
dec
inc
cld
and
pushf
sahf
call
sub
dec
imul
jl
pop
mov
stc
push
pmulhw
mov
loop
xor
jae
aam
fadd
les
inc
aas
cmp
sub
jbe
popf
ins
sbb
daa
pop
push
dec
jge
pushf
ret
cmps
ret
jae
cmp
mov
je
sub
aad
sub
jmp
adc
cmp
mov
pop
push
scas
dec
sbb
in
xor
fisub
mov
jno
or
cmp
out
or
xlat
fistp
(bad)
dec
clc
rol
add
sub
fisub
jne
movs
loop
push
xchg
daa
arpl
sbb
add
add
cmps
les
(bad)
out
daa
adc
fsub
movs
adc
push
mov
pop
sub
pop
data16
sahf
mov
out
stos
mov
(bad)
pop
addr16
pop
scas
aad
mov
xor
rol
jl
jns
loop
inc
retf
in
dec
(bad)
xchg
cmp
out
je
cwde
pop
ret
lahf
fcmovb
jl
mov
call
lahf
ret
je
push
mov
jo
nop
outs
out
mov
ja
mov
inc
mov
inc
stos
(bad)
(bad)
sub
pop
dec
add
push
loope
sbb
cmps
call
daa
lock
jns
sbb
push
dec
push
(bad)
pop
mov
cmp
pop
fcom
std
ins
loopne
mul
js
mov
or
dec
iret
repz
popf
xchg
nop
outs
or
movs
add
mov
dec
mov
pop
cpuid
pop
or
mov
and
adc
pop
push
imul
sub
aad
cld
inc
sti
mov
sub
fld
movs
movs
paddusb
and
data16
jns
xor
xchg
xor
(bad)
jle
xor
ins
push
mov
retf
mov
sbb
push
xor
in
icebp
leave
out
inc
pop
push
pop
retf
sbb
in
je
pop
movs
in
xor
lods
cmp
dec
mov
mov
iret
cmps
les
(bad)
jb
pop
stos
xchg
aad
jne
(bad)
mov
jg
or
ins
sar
pop
pop
leave
dec
dec
pop
jbe
mov
(bad)
dec
fs
stos
jmp
and
lock
je
xor
data16
fiadd
inc
cwde
sahf
or
xchg
rcl
push
cwde
(bad)
cli
inc
outs
mov
dec
mov
push
bound
cmp
(bad)
std
lea
push
fiadd
push
retf
scas
test
pop
push
mov
cmps
daa
aas
shr
adc
lods
das
and
lods
fcom
aas
dec
call
cs
gs
inc
mov
sub
cmc
mov
cwde
xor
or
fbstp
mov
div
mov
std
xchg
pop
sbb
pand
stc
mov
jp
pop
mov
jle
inc
stos
and
(bad)
int
out
fs
jg
cmp
std
adc
jno
push
rcl
xchg
repz
jne
mov
xor
or
jno
or
jb
test
or
or
(bad)
jmp
inc
cli
je
popa
cmps
jl
pop
and
loope
mov
dec
nop
test
adc
dec
push
iret
mov
lock
and
test
sub
pop
ror
xchg
dec
dec
enter
shl
sub
push
jo
aam
mov
dec
and
imul
sub
mov
mov
jecxz
inc
out
lea
std
dec
clc
leave
mov
jmp
rcr
pop
mov
add
mov
out
fs
lods
adc
(bad)
loopne
inc
test
(bad)
xchg
pop
cs
add
out
scas
xchg
sub
mov
out
mov
nop
es
push
sbb
fld
clc
stc
pop
scas
ins
jns
xchg
mov
jo
into
inc
xor
ins
dec
and
push
movs
stos
test
sub
adc
inc
mov
data16
sub
retf
jae
and
inc
mov
jae
mov
or
fidivr
rcr
loope
imul
imul
int3
not
retf
loope
jno
mov
(bad)
cmps
hlt
ret
pop
fnstcw
xchg
jp
rol
push
lea
mov
xchg
dec
mov
sbb
stc
fstp
repnz
rcl
pop
out
xlat
xchg
aas
mov
call
xchg
adc
js
xor
jb
jae
jecxz
pushf
pop
mov
jmp
mov
mov
xchg
(bad)
push
fldenv
daa
(bad)
(bad)
in
(bad)
xchg
pop
sub
lods
jo
fidivr
dec
sbb
in
pop
sbb
mov
sub
fs
data16
call
push
imul
mov
fist
push
cmp
movs
or
jb
ss
jbe
icebp
(bad)
lock
test
mov
adc
das
call
test
sbb
call
or
xchg
xchg
lods
test
sbb
test
arpl
(bad)
xchg
sbb
jp
sub
sbb
int3
xchg
icebp
xchg
ja
push
test
dec
std
xchg
mov
enter
ret
scas
mov
push
push
pop
out
das
(bad)
ss
jb
pop
rcl
dec
dec
jmp
mov
xchg
(bad)
test
jp
xchg
(bad)
daa
xchg
xchg
cmp
or
cdq
sbb
mov
xor
sti
pop
shl
mov
xchg
fimul
xor
cdq
xchg
(bad)
test
shr
in
add
inc
mov
inc
inc
arpl
xchg
mov
scas
ror
mov
push
cdq
into
xchg
out
ret
repnz
push
es
adc
jne
pop
ja
out
icebp
pop
rcr
sub
ds
sub
retf
stos
js
mov
int3
cmp
pop
dec
push
adc
imul
fidiv
mov
call
inc
leave
dec
js
gs
gs
mov
fild
arpl
sbb
adc
jecxz
addr16
pop
shl
(bad)
(bad)
xor
xor
add
adc
ss
fwait
test
mov
imul
hlt
stos
xor
cmp
gs
mov
cwde
test
nop
into
xlat
mov
dec
push
mov
enter
xchg
or
push
das
or
and
dec
adc
xchg
int
sbb
sub
and
addr16
dec
sub
add
cli
or
(bad)
fdiv
cmp
ss
retf
jns
mov
dec
jo
pop
out
xor
cmp
(bad)
jle
xor
dec
adc
retf
lds
out
fadd
sub
faddp
cli
pop
in
clc
repz
and
jae
cmp
pop
sub
push
mov
icebp
cmps
or
sub
xchg
inc
std
add
push
xor
test
mov
iret
sbb
out
pop
loope
jne
push
mov
call
lock
daa
xchg
int3
or
mov
clc
retf
cwde
inc
scas
add
addr16
xor
mov
sub
mov
mov
scas
in
mov
sub
daa
lahf
std
arpl
call
std
xchg
adc
iret
push
(bad)
imul
xor
aam
adc
movs
xor
mov
stos
shr
push
jp
(bad)
shl
repz
mov
fdiv
push
add
fdivr
xor
adc
sbb
xchg
jle
xchg
repnz
xor
add
sub
lahf
mov
ds
int3
jmp
dec
xchg
or
sbb
xchg
sbb
(bad)
out
jae
scas
pop
and
stos
jae
fnstsw
cmp
in
popf
lock
data16
pop
jl
jo
lea
mov
pusha
add
dec
jb
scas
sbb
sahf
sbb
fcom
(bad)
rol
and
xchg
add
movs
scas
loope
push
rcl
push
imul
sbb
xchg
jne
es
jnp
push
fcompp
ror
cmp
int3
push
imul
xchg
jp
pcmpgtb
xchg
cli
loop
fwait
mov
and
xor
xchg
xchg
jmp
(bad)
jp
test
out
retf
jmp
jo
test
inc
adc
pusha
jp
sbb
push
jp
jge
loop
xchg
(bad)
xor
jge
mov
adc
inc
arpl
xor
fnstenv
xchg
adc
mov
stc
xchg
fst
inc
dec
leave
pop
arpl
(bad)
stc
sub
test
and
cmp
inc
pop
sbb
mov
add
retf
sub
shl
push
pop
pop
pop
mov
cmps
push
add
or
mov
mov
mov
pop
xor
sbb
jecxz
jg
mov
leave
pop
nop
sub
test
ds
popf
xchg
ins
add
retf
push
fcomp
or
mov
mov
adc
ror
sar
jo
dec
adc
stos
loope
sar
push
inc
mov
shr
mov
pop
test
out
(bad)
sub
in
mov
(bad)
xor
xchg
push
cld
adc
and
fild
arpl
loope
fmul
inc
sbb
lahf
add
pusha
adc
mov
leave
push
ins
xchg
(bad)
dec
icebp
fidiv
ficom
mov
das
ror
xchg
inc
mov
pop
sub
jle
mov
mov
es
sub
movs
dec
mov
popf
fist
stos
or
push
xchg
sahf
sub
cli
out
cmp
pop
in
test
popf
in
push
sbb
sub
scas
sub
mov
mov
ds
call
test
scas
inc
jecxz
mov
jecxz
fnstsw
add
mov
aad
push
sub
iret
aas
adc
dec
mov
and
mov
and
xchg
mov
push
jae
les
into
outs
repnz
addr16
xor
gs
cld
sbb
test
(bad)
cmps
das
into
movs
test
xchg
scas
cmp
add
adc
daa
dec
inc
jg
or
xchg
jae
xor
xchg
xchg
xlat
movs
lds
cmp
xchg
push
pop
xchg
add
cmc
call
ja
fs
movs
and
and
ror
hlt
cmp
in
(bad)
pop
pop
sub
(bad)
mov
mov
(bad)
xor
mov
cmp
jnp
loop
push
xor
jmp
cmp
mov
mov
js
cmovle
ret
mov
lock
pop
cmp
jge
xchg
or
imul
enter
mov
(bad)
push
inc
mov
enter
jno
mov
cmp
ins
into
iret
lahf
mov
pop
mov
or
mov
cwde
iret
(bad)
and
test
sar
je
push
scas
jb
not
and
dec
ins
cmps
shl
aaa
xor
ret
mov
js
mov
inc
cmp
ins
mov
outs
retf
aad
retf
cdq
out
loopne
sub
mov
shr
add
test
setns
popa
hlt
inc
xor
xor
adc
fdivr
fadd
fnstsw
mov
fild
sahf
int3
popf
(bad)
jecxz
enter
int3
push
pop
nop
mov
xlat
loopne
jmp
mov
sub
(bad)
ja
div
daa
or
inc
fnstcw
rcr
inc
cmp
stos
xchg
jmp
shr
jg
in
dec
sti
(bad)
cmps
cs
cmp
movs
jmp
out
aaa
push
enter
inc
jno
mov
add
mov
ja
lahf
(bad)
xchg
loope
xchg
jne
shl
sub
call
mov
push
and
(bad)
jp
in
ss
stos
adc
imul
fs
ds
xor
and
cmp
dec
fistp
cwde
cli
fcom
in
sub
sub
mov
inc
mov
pop
push
xchg
fist
outs
les
mov
into
retf
jb
aam
sbb
out
sar
scas
and
shr
mov
repnz
add
(bad)
xor
fs
fst
int3
fst
jno
retf
inc
sbb
es
(bad)
jg
mov
mov
test
pop
jmp
movs
enter
out
mov
pop
pop
into
cmp
sahf
aad
or
ss
movs
fwait
and
xchg
xchg
clc
sbb
jmp
or
mov
lods
jle
mov
scas
movs
mov
cmp
adc
jmp
sub
in
sub
xchg
mov
pop
retf
imul
adc
or
lods
icebp
sub
mov
push
dec
cmp
iret
add
addr16
pop
test
in
cmp
push
mov
adc
push
and
aas
mov
shl
cmps
leave
jns
ins
add
and
xor
pop
push
pushf
rcr
xor
inc
out
jae
jbe
xchg
jp
mov
cmp
in
jmp
enter
(bad)
or
ficomp
in
pop
xor
std
add
push
bnd
pusha
or
cmc
push
push
loopne
cmp
out
clc
xor
mov
hlt
push
movs
out
xchg
inc
and
pop
je
and
fwait
push
jle
imul
xchg
mov
mov
fbstp
mov
xchg
or
int3
sahf
pop
sub
es
out
inc
lea
in
stos
popf
outs
pop
imul
xchg
mov
or
movs
or
repnz
(bad)
xchg
jnp
enter
and
mov
adc
or
xchg
arpl
jno
(bad)
push
jns
cmps
push
jl
cmc
mov
fmulp
dec
mov
popf
pop
in
in
loope
jbe
mov
xlat
clc
out
cmps
inc
inc
adc
inc
cli
pop
ret
jns
test
mov
int
mov
pushf
(bad)
outs
leave
pop
inc
sbb
fistp
sub
test
sbb
lods
(bad)
sti
xchg
call
dec
pushf
mov
arpl
xor
mov
push
push
enter
daa
js
dec
cmp
and
mov
sub
pop
mov
stos
clc
lods
sbb
adc
int3
jg
cld
mov
cwde
cmps
adc
repz
push
mov
push
cmp
or
xor
push
or
pop
push
call
arpl
leave
retf
dec
pop
rcl
jo
jp
or
rcr
(bad)
bound
and
jo
xor
jle
aas
jmp
test
xchg
sbb
push
adc
cmc
mov
xor
cmps
cli
xchg
sbb
fidivr
ja
inc
shl
xor
icebp
xchg
popf
xor
lds
cmp
dec
(bad)
mov
inc
imul
fwait
cmps
imul
xor
xor
mov
stos
jb
mov
outs
mov
add
adc
push
shl
inc
ror
push
(bad)
popf
mov
push
xor
sbb
xchg
in
shl
sti
inc
and
mov
fsub
hlt
enter
mov
add
add
mov
xchg
ja
push
retf
or
jne
jnp
dec
ds
gs
cmp
inc
stos
mov
test
test
and
(bad)
pusha
fld
pop
xchg
add
jl
outs
push
or
clc
ret
clc
hlt
clc
fld
sub
loopne
lods
dec
call
jns
push
xor
les
adc
sar
push
fucomi
cmp
clc
jp
mov
popa
jmp
push
cmps
ins
sub
out
or
in
rcr
or
mov
push
imul
mov
push
ins
mov
mov
lahf
rcr
mov
cmps
inc
xor
test
(bad)
leave
fist
cmp
mov
cmp
ret
or
push
call
pop
scas
dec
retf
in
mov
jb
push
outs
scas
cmp
int
lahf
mov
sbb
fmul
push
xchg
cmps
(bad)
sub
ss
jb
dec
inc
repz
rol
cmp
shl
push
stos
xchg
call
hlt
or
push
test
fist
call
sar
or
mov
retf
mov
outs
ds
shl
outs
test
sbb
les
xchg
fdivr
lahf
xor
imul
das
xchg
pop
stos
out
enter
and
scas
pop
cmps
xor
rcl
mov
jecxz
test
inc
mov
sub
cmp
add
adc
or
jmp
inc
popa
mov
xor
pop
dec
sbb
mov
lahf
adc
cmp
leave
int
stc
int
les
and
inc
xchg
xchg
add
inc
xchg
les
xchg
jecxz
sbb
aas
pop
xchg
cli
cmps
les
mov
xchg
nop
in
les
jg
xor
mov
jmp
(bad)
jns
frstor
(bad)
sub
dec
xchg
lahf
int
mov
rcr
sbb
das
push
inc
fwait
xchg
cmps
sbb
test
sub
inc
mov
mov
push
(bad)
push
mov
(bad)
pop
popa
push
out
xchg
push
push
pop
stc
and
fwait
int
test
cmps
push
add
clc
bswap
jmp
jne
out
test
ds
jae
push
jnp
shr
cdq
push
gs
push
clc
cmp
lock
clc
ins
das
push
inc
jmp
inc
mov
jge
mov
dec
add
scas
cmp
add
inc
xchg
jo
cmp
push
outs
sub
mov
cdq
push
dec
jae
dec
out
xlat
and
mov
dec
ss
cli
aam
aaa
xchg
test
or
fistp
mov
jo
out
dec
cli
iret
mov
adc
mov
xor
mov
push
rol
(bad)
test
xor
xchg
push
push
cwde
inc
push
dec
outs
sub
movs
pushf
sub
mov
or
nop
and
mov
ja
cmp
pop
mov
dec
pop
sub
das
imul
std
mov
aaa
imul
adc
mov
sub
xor
add
int
js
call
lods
cmc
pushf
adc
mov
dec
cwde
or
pop
sbb
popf
retf
cmp
inc
pop
stos
dec
jbe
loopne
(bad)
mov
pushf
fild
mov
push
repz
jb
scas
pop
adc
into
mov
les
fcom
or
fs
aam
mov
cmps
out
mov
adc
test
pop
mov
out
fstp
clc
jo
pop
gs
sbb
cmp
js
jge
nop
dec
ficomp
push
mov
cmps
pop
frstor
aad
dec
ret
(bad)
in
mov
scas
sti
je
and
dec
push
jg
xor
pop
cmp
(bad)
test
dec
ins
fwait
and
sbb
xor
push
add
rcr
imul
(bad)
dec
sti
les
into
imul
jmp
in
or
(bad)
or
or
jmp
jp
fmul
pop
inc
in
push
sbb
fucomip
inc
pop
pusha
jg
xchg
jp
les
das
push
dec
daa
fstp
dec
xor
ret
out
xor
sub
sub
cmps
and
test
xchg
ret
jbe
loope
xchg
aam
(bad)
fild
cmp
pop
adc
(bad)
jg
and
stc
xchg
test
inc
sti
mov
int3
out
push
das
xlat
inc
retf
adc
fist
fsubr
ins
stos
adc
or
outs
xor
sub
leave
pop
rcl
lods
popf
(bad)
loopne
jmp
pusha
mov
daa
dec
xchg
mov
mov
xor
dec
sahf
fnstsw
sbb
push
push
rol
sbb
retf
inc
movs
in
inc
sbb
mov
sbb
pop
in
inc
add
xchg
sbb
in
xchg
push
cmp
clc
xchg
pop
push
stos
jecxz
retf
bound
scas
retf
mov
retf
mov
es
lods
daa
movs
pop
jp
pushf
das
cmp
stos
dec
adc
add
icebp
imul
(bad)
or
leave
daa
adc
fldenv
shr
loopne
or
push
lods
adc
adc
xchg
push
and
fadd
(bad)
mov
jmp
sbb
sbb
and
and
ja
mov
mov
push
add
pop
aas
retf
push
pusha
daa
mov
xchg
xchg
jge
nop
mov
adc
xor
inc
stos
fstp
mov
imul
clc
stos
and
pop
loop
xchg
dec
add
or
leave
(bad)
pop
add
dec
dec
rol
sti
aad
cmp
movs
sub
in
sub
sar
inc
js
jecxz
js
dec
xchg
or
sub
xchg
ss
jnp
pop
mov
dec
xchg
jmp
mov
repz
jo
pop
dec
aas
mov
pop
fcomp
ja
dec
sbb
scas
xlat
loope
push
pusha
lahf
mov
or
add
std
push
push
or
pop
push
fwait
jnp
adc
add
mov
movs
xchg
lods
push
in
xor
ret
mov
mov
aas
jp
(bad)
cdq
mov
push
mov
int3
daa
gs
sar
mov
sahf
in
test
popa
pop
xchg
jge
(bad)
into
pop
push
sub
popa
lds
and
lods
jmp
sar
frstor
pop
add
fsub
mov
int3
sub
mov
ret
outs
and
cs
push
jae
jno
popf
mov
inc
cdq
sbb
dec
mov
dec
xchg
test
and
les
aad
retf
sbb
movs
push
pop
cmp
(bad)
outs
mov
sub
or
call
push
jle
xchg
add
push
(bad)
sbb
sub
outs
dec
fiadd
mov
sub
in
mov
imul
cmp
xchg
inc
lahf
adc
xor
jbe
add
jg
scas
(bad)
test
aaa
push
or
push
xchg
rol
xchg
std
int3
es
xchg
aam
ss
xchg
lea
fldenv
addr16
dec
in
sub
mov
test
mov
ss
mov
mov
mov
mov
xlat
xchg
aam
repnz
retf
rcr
ins
sti
cmp
fimul
jecxz
nop
loop
call
push
push
pop
sbb
jle
sub
cmp
jge
add
cmp
and
pop
push
dec
cs
push
xlat
sar
mov
or
imul
mov
aad
outs
xchg
mov
xlat
pop
daa
cmp
popf
lock
mov
movs
jbe
add
movs
clc
cmps
je
jo
sbb
call
or
sbb
push
in
add
dec
dec
jo
sbb
cdq
sub
add
shl
sbb
and
push
sub
repz
mov
mov
sub
mov
adc
mov
jl
es
cmps
sub
mov
pop
lock
jmp
xor
sbb
mov
pushf
mov
cmp
mov
mov
aad
popa
xor
mov
mov
fisttp
sub
xchg
sbb
cmp
mov
xchg
sub
add
jle
xor
jmp
aas
mov
pop
cmp
dec
xlat
and
out
test
cmps
mov
mov
cld
cld
push
(bad)
jnp
jp
jp
cmp
mov
call
jne
dec
xor
bound
pop
leave
leave
jne
aaa
ja
push
out
in
sub
stos
cdq
test
retf
in
fiadd
push
mov
ds
test
push
pushf
adc
pop
(bad)
iret
add
out
stc
stos
ret
popf
ror
pop
or
mov
rcr
mov
ins
fcom
push
popa
cld
(bad)
jb
and
xor
adc
cmp
dec
inc
pop
mov
ficom
push
test
xor
sbb
push
in
pop
mov
mov
(bad)
adc
cli
rcr
push
push
daa
bound
sbb
leave
sahf
mov
sti
or
(bad)
repnz
clc
inc
movs
cmc
mov
dec
xlat
dec
mov
jp
fisub
movs
es
cmc
ror
cdq
rcr
lods
jmp
push
loop
mov
push
cmps
jg
jle
sbb
pop
mov
dec
test
fcomi
out
pop
fidiv
iret
rcl
(bad)
or
retf
hlt
in
sub
nop
daa
jnp
pusha
sbb
mov
jg
addr16
scas
or
lods
add
xchg
sub
loopne
fwait
cmps
mov
xor
mov
int3
mov
bound
adc
mov
xchg
iret
js
pop
mov
inc
inc
rcr
xchg
cmc
mov
cdq
xchg
aam
fwait
adc
test
les
jae
icebp
fisubr
nop
ds
push
daa
jecxz
push
xchg
scas
adc
pop
js
adc
push
fs
fcmovnb
xor
jge
sbb
(bad)
rcl
into
xchg
adc
cmp
aam
jb
shl
pop
daa
mov
push
js
dec
adc
or
inc
and
mov
push
mov
mov
xor
xchg
and
jmp
mov
ins
(bad)
mov
cmc
mov
xchg
push
cmp
mov
mov
mov
addr16
cld
aas
shl
aad
xor
mov
cmp
add
push
data16
sbb
mov
xchg
xlat
cmp
push
or
mov
scas
cmc
(bad)
push
push
test
jecxz
adc
cs
hlt
mov
mov
call
or
into
pop
scas
xchg
aas
push
jle
(bad)
stos
jge
pop
movs
test
ins
and
dec
shr
inc
cli
fistp
lods
mov
je
xor
aaa
aam
push
push
ret
es
inc
or
mov
loope
mov
push
movs
xor
jo
dec
je
mov
push
icebp
not
xchg
xor
mov
push
mov
stos
jmp
sbb
test
mov
movs
gs
leave
mov
imul
push
cmp
adc
in
mov
dec
(bad)
std
adc
aas
popf
pop
repz
data16
daa
not
mov
lahf
cmp
adc
pop
pop
pop
jp
retf
je
sbb
pushf
ret
mov
jle
hlt
bound
arpl
(bad)
pop
sub
out
pop
cmp
sbb
xor
add
pop
dec
adc
stos
pusha
cmp
stos
repz
out
inc
pop
aas
stc
sbb
or
arpl
outs
adc
or
xchg
pusha
sub
enter
pop
inc
sbb
or
ja
(bad)
fisub
mov
cmp
shl
jecxz
add
loopne
sbb
adc
inc
gs
adc
fld
xchg
ja
retf
fisub
in
dec
jp
dec
xchg
jnp
mov
ja
adc
inc
push
loop
ficomp
mov
inc
sub
loopne
sub
shl
les
pop
popa
jns
mov
push
pop
mov
adc
lods
pop
push
inc
xor
mov
sub
sub
jmp
and
jno
loope
push
jno
stc
xchg
add
ret
popf
inc
or
loop
mov
pusha
movs
or
add
pop
xchg
inc
call
mov
in
xor
popa
cmp
call
fbld
xchg
dec
lahf
adc
xchg
int
stc
fild
int
sub
jo
jl
sub
cmp
cwde
inc
pop
ins
mov
and
mov
dec
sahf
add
fbld
jbe
sub
out
push
sub
into
cli
call
mov
aas
pop
dec
es
lock
lods
shr
xor
push
cmp
inc
retf
shl
cwde
xchg
or
fdivr
dec
sbb
ret
push
arpl
(bad)
xor
jmp
xchg
ror
in
sahf
retf
push
pop
aam
test
push
lahf
call
jno
cmp
xchg
xor
into
je
push
push
mov
cwde
xchg
dec
ds
nop
popa
movs
sub
repnz
leave
mov
das
ins
out
add
movs
pop
outs
scas
cmc
sub
jb
cmp
rol
mov
mov
cwde
test
xchg
jb
mov
inc
fdiv
iret
jne
push
les
rcr
mov
bound
gs
or
inc
aad
ltr
cdq
pop
enter
or
movs
retf
iret
and
dec
out
(bad)
fs
imul
adc
push
repnz
adc
scas
scas
adc
sahf
pop
outs
ret
cmp
fdivr
rcr
inc
add
add
neg
(bad)
dec
adc
sbb
outs
es
test
test
push
outs
sahf
sub
inc
and
adc
or
ja
sbb
and
jg
mov
push
cmc
sbb
retf
(bad)
dec
push
fcomi
xor
repz
iret
fild
div
push
movs
sub
cmp
out
xchg
inc
icebp
and
(bad)
out
repnz
xchg
iret
push
js
mov
inc
scas
ins
jmp
je
sbb
js
sub
cmps
pusha
stc
stos
mov
push
cmp
mov
sub
mov
jo
cld
data16
outs
(bad)
cli
rol
xor
push
mov
into
and
sbb
push
and
jg
cmps
(bad)
adc
inc
jmp
mov
pop
or
push
jnp
pusha
add
sbb
das
or
sub
in
dec
jl
cmp
sbb
retf
jl
scas
retf
jmp
xchg
cmps
or
shl
mov
mov
fwait
adc
mov
int3
fdiv
sub
pop
int
pop
add
test
and
or
sti
cmc
mov
and
inc
lds
sub
ins
inc
(bad)
dec
mov
cmp
call
jb
shr
mov
imul
cmp
clc
pushf
sbb
(bad)
ss
(bad)
inc
dec
fcmovnb
cmc
idiv
xchg
gs
sbb
sbb
and
std
dec
or
icebp
cmp
fcom
cmp
popa
repz
inc
int
addr16
scas
fcomp
dec
adc
sbb
mov
in
stos
arpl
fldenv
fld
pop
sub
push
scas
push
sti
cmp
sub
test
(bad)
out
fsub
or
jnp
rol
imul
add
idiv
pop
inc
(bad)
int
je
(bad)
scas
pop
add
outs
js
fs
jb
les
sbb
int
test
hlt
and
gs
cmc
arpl
pop
pop
in
and
scas
xor
mov
loop
cmp
dec
jo
out
jl
xchg
(bad)
sub
aaa
cmp
fidiv
dec
add
retf
sub
cmp
loope
mov
mov
sub
dec
pop
ret
push
sbb
dec
xlat
sub
and
lods
xchg
pop
cmps
je
or
mov
mov
xchg
sbb
mov
retf
pop
adc
lods
push
xchg
jl
(bad)
inc
add
adc
push
int3
bound
movs
sbb
test
jmp
dec
retf
imul
arpl
neg
push
xchg
mov
dec
mov
and
pop
out
cld
jle
cmp
stc
in
stos
push
popf
push
jo
sub
loope
push
add
fild
push
repnz
dec
or
xchg
push
jmp
inc
cmp
xlat
call
cmp
push
and
shl
lds
mov
std
mov
in
rcr
lock
fsub
jmp
aad
push
inc
pushf
xor
inc
js
inc
cs
aam
cmps
out
mov
aad
ret
or
xchg
daa
ret
push
je
xchg
cmps
ret
sbb
dec
mov
jae
cmp
and
add
pop
push
btc
cwde
enter
iret
dec
adc
push
xor
outs
(bad)
sub
stos
sbb
ss
pop
fiadd
push
lock
jnp
dec
inc
mov
test
loopne
add
dec
cli
adc
mov
pop
data16
ffreep
sbb
push
push
jp
daa
outs
inc
mov
(bad)
xchg
push
sub
jge
dec
fdiv
jmp
nop
mov
test
push
out
jmp
(bad)
jb
jg
nop
pusha
jne
test
pop
fcmovu
fld
test
sub
clc
push
and
retf
jno
adc
cmp
xchg
jmp
in
mov
mov
leave
aam
mov
test
inc
lahf
mov
mov
xchg
sbb
popa
xchg
pop
mov
mov
sub
gs
jl
out
xor
adc
xor
out
retf
fild
dec
mov
leave
ret
fadd
mov
mov
sub
cmp
jmp
clc
cli
xchg
xchg
icebp
jge
loopne
mov
dec
sub
cmp
push
cmps
lds
stos
jne
out
icebp
adc
push
and
pop
clc
xor
stos
repnz
dec
xchg
push
cmp
inc
icebp
jne
fcom
aaa
pop
add
loope
imul
sbb
cmp
hlt
jg
push
outs
mov
int3
pop
mov
fwait
mov
dec
xchg
xchg
xchg
jno
jnp
fwait
icebp
mov
mov
sbb
and
sar
outs
jp
lahf
sbb
(bad)
retf
lods
shr
jae
inc
sbb
mov
or
dec
pop
or
out
gs
je
and
mov
aaa
xor
cmp
add
(bad)
xor
inc
es
cmp
mov
fwait
mov
push
sar
movs
xor
mov
popa
jae
fwait
imul
int3
add
and
in
mov
pushf
mov
in
inc
call
sub
mov
cmp
and
inc
sbb
sbb
sbb
fs
repnz
ins
and
xchg
inc
mov
jno
clc
jl
cdq
push
aaa
jne
(bad)
inc
in
push
ror
repnz
sbb
sub
xor
push
fistp
jg
mov
sbb
or
xor
out
stc
ror
dec
stc
xor
es
movs
cld
push
adc
mov
mov
and
(bad)
nop
es
pop
out
fistp
jmp
imul
cmps
pop
aas
loop
mov
stc
push
fisttp
mov
and
pop
xchg
scas
nop
iret
out
push
xchg
jmp
(bad)
popa
jle
sub
add
stc
jnp
dec
(bad)
pop
call
rol
and
jo
scas
jl
gs
jmp
xor
xchg
popf
xchg
stos
adc
aas
ret
lods
les
cli
inc
(bad)
imul
lock
xchg
jo
push
mov
inc
fldcw
jmp
cmps
adc
jecxz
mov
push
cmp
sub
nop
outs
mov
fwait
jl
xchg
ins
ja
fmul
in
out
add
and
jnp
add
outs
shl
popa
cmc
cdq
shr
jmp
movs
jmp
in
dec
cld
add
popa
lahf
jb
out
rol
mov
sub
sti
mov
xor
(bad)
int3
mov
in
xchg
fadd
iret
shr
dec
sub
and
movs
jbe
repnz
retf
les
push
add
fdivr
pop
in
xchg
mov
pushf
ret
cwde
outs
xchg
dec
lods
das
push
sub
xchg
xlat
aad
and
sbb
cmp
popf
ret
jl
pop
call
pop
push
adc
and
sbb
push
pop
sub
xchg
inc
mov
jbe
enter
test
add
test
loop
add
push
mov
pop
mov
jg
dec
test
not
stos
call
cmc
int
(bad)
rol
ds
xor
stos
jle
hlt
addr16
sahf
cmps
mov
sbb
sbb
mov
add
cmp
js
cmp
mov
adc
and
fsqrt
jmp
(bad)
fisubr
ror
inc
pop
sub
ror
xchg
jbe
std
jl
out
cld
bound
test
std
sbb
clc
(bad)
std
icebp
aaa
arpl
jmp
call
sar
xor
and
retf
aaa
pop
(bad)
mov
xor
out
dec
jb
adc
dec
xor
inc
cmpps
push
mov
and
adc
sbb
mov
popf
pop
fild
adc
scas
lods
mov
xchg
push
mov
push
clc
mov
mov
push
inc
mov
sub
and
jl
inc
in
or
xchg
xor
cli
aas
and
jp
jle
and
aaa
daa
imul
fiadd
jnp
mov
mov
cmp
dec
push
(bad)
mov
fcom
stos
or
cdq
push
jp
nop
mov
pop
jb
leave
jns
stos
sbb
test
cmps
sub
jecxz
mov
cmp
jl
jns
jmp
dec
(bad)
fld
dec
repnz
mov
aam
es
mov
int3
mov
paddq
fwait
enter
mov
adc
jns
ret
mov
or
jg
push
add
mov
xor
movs
iret
xchg
add
add
cmp
inc
or
jmp
ds
icebp
push
pusha
jp
adc
xor
pop
aas
push
lea
sbb
fcomp
and
popa
mov
fsubr
adc
sub
push
xor
test
or
pop
repz
mov
sub
dec
inc
push
out
test
int3
loopne
cdq
and
add
(bad)
pop
out
and
pop
xor
push
sbb
cmp
pusha
les
pushf
add
adc
sub
inc
mov
and
sub
test
in
retf
push
sub
sbb
inc
xor
les
sar
mov
cwde
retf
mov
aas
popf
jnp
add
repz
ds
es
in
sbb
xchg
retf
jl
jp
outs
mov
pop
sub
adc
jnp
sub
popa
mov
sub
in
retf
add
int3
fdiv
push
addr16
push
out
pop
movs
mov
dec
add
lods
retf
inc
int3
pushf
cld
ret
and
inc
fdiv
pop
test
push
and
add
ror
in
inc
lods
fwait
or
sub
or
xor
pop
scas
(bad)
xchg
sbb
icebp
and
loopne
dec
movs
add
push
dec
sbb
xor
bound
divps
int3
bound
xchg
arpl
aad
shl
push
xor
mov
not
add
test
sbb
sub
cdq
jbe
sub
xchg
cmp
dec
xchg
xor
nop
bound
xchg
mov
es
pop
lahf
xor
mov
fisttp
nop
call
sub
pop
push
mov
inc
cli
push
iret
mov
dec
adc
mov
jo
pop
or
popf
mov
mov
std
(bad)
fstp
pop
dec
cmp
sti
dec
fsub
pop
(bad)
int
dec
in
les
mov
xor
mov
stos
out
jecxz
push
ins
add
shr
ret
inc
cmp
jmp
push
mov
xor
jbe
adc
in
and
push
ficomp
retf
call
mov
mov
fisubr
sar
jno
fcomp
adc
es
shr
inc
cmp
(bad)
or
mov
mov
imul
mov
repz
mov
xlat
mov
pop
sbb
std
lds
sub
std
cmp
clc
mov
jmp
es
mov
mov
aas
rol
jbe
retf
iret
and
mov
out
adc
out
add
add
add
or
cmps
jo
or
pop
out
or
cdq
xor
sbb
fbstp
cld
push
and
xchg
sub
mov
scas
icebp
addr16
popa
fidivr
add
fsubrp
cdq
mov
fimul
cmc
xchg
int3
out
nop
ja
cmps
clc
cld
enter
mov
test
dec
xchg
jle
pop
scas
mov
cs
dec
jae
or
xor
jg
push
notrack
test
lds
jg
xchg
push
adc
sti
out
mov
fucomp
(bad)
imul
daa
jmp
addr16
repnz
mov
cmp
fisubr
hlt
jns
rcr
in
ror
data16
cmp
sub
push
test
mov
test
inc
mov
dec
in
pop
mov
ret
sbb
sub
or
mov
loope
mov
adc
addr16
mov
lods
push
add
or
jno
lea
fcomp
retf
(bad)
repnz
into
inc
xchg
jb
mov
int3
jmp
add
sbb
inc
inc
push
in
retf
out
addr16
cmp
jno
jecxz
add
outs
fild
loope
inc
fsub
sbb
or
push
mov
shl
mov
fs
xchg
cld
test
repz
dec
(bad)
or
leave
cmp
jmp
icebp
les
mov
cli
test
mov
in
sbb
leave
and
cli
nop
pop
popf
mov
xchg
jecxz
lds
inc
loop
mov
sar
ss
and
mov
mov
fisubr
inc
add
jmp
ins
outs
add
inc
sar
cmp
push
fsub
add
fdivr
jmp
stos
scas
jp
lods
mov
pusha
(bad)
and
out
(bad)
push
push
imul
outs
bound
and
or
fistp
mov
mov
jl
pusha
mov
(bad)
loop
pop
sbb
adc
mov
cmp
rep
mov
jbe
mov
loopne
mov
and
add
add
cli
ja
test
cmp
cmp
retf
retf
push
mov
mov
test
sahf
push
or
cmp
clc
and
add
mov
xchg
pop
mov
mov
movs
dec
(bad)
sbb
jmp
push
nop
stos
pop
adc
cmps
add
cmp
(bad)
loop
adc
ret
cmps
pusha
nop
mov
in
sub
shr
push
xchg
or
ins
jle
add
adc
dec
xchg
scas
cs
mov
sbb
jecxz
nop
sbb
popf
shr
inc
fs
push
movs
push
loop
dec
xchg
xlat
add
out
test
test
mov
outs
mov
loopne
scas
enter
aaa
cs
out
cs
xchg
sub
inc
jge
sub
push
fmul
cmps
imul
cmp
push
popa
shl
test
inc
movs
xchg
aas
aam
movs
stos
sub
test
inc
mov
pop
jl
int
or
pop
mov
leave
pop
dec
retf
sahf
jmp
mov
cld
outs
push
pusha
(bad)
xor
xchg
lock
aad
(bad)
sub
popf
pop
in
inc
ins
scas
inc
mov
inc
mov
cwde
inc
mov
aas
loopne
fst
mov
enter
xor
in
add
sub
leave
and
imul
cmp
jmp
jnp
es
fistp
adc
ret
mov
stc
(bad)
push
shl
icebp
enter
mov
(bad)
dec
cdq
mov
lds
pop
cmps
xlat
and
push
lods
enter
(bad)
ja
mov
inc
stos
jnp
cmp
push
test
and
dec
mov
add
inc
cdq
ret
inc
sbb
popa
movs
xlat
cmp
das
sub
xchg
repnz
adc
cdq
test
xchg
std
test
out
cmps
fwait
aam
repz
lahf
ret
pushf
cmps
aam
gs
cmp
fcomip
mov
mov
push
iret
xor
xchg
out
es
stos
adc
sbb
adc
sbb
outs
stc
imul
neg
mov
mov
das
push
pop
idiv
bound
jmp
sbb
jmp
mov
mov
add
add
ins
and
stos
mov
jmp
in
loop
mov
inc
dec
cmps
xchg
call
imul
jl
cmp
add
inc
mov
pop
push
jns
rdtsc
or
mov
das
mov
fsub
mov
add
mov
cmp
cmp
mov
sbb
call
out
jmp
xor
movs
fwait
iret
sub
test
cmp
popf
imul
pop
fstp
jmp
jecxz
shl
add
icebp
mov
push
xor
add
icebp
(bad)
mov
and
xchg
lods
call
push
aaa
mov
aas
push
sbb
mov
int
fidivr
push
pop
pop
ds
fwait
ret
add
int
jne
pop
add
jmp
test
(bad)
cmp
(bad)
mov
rol
out
jbe
push
or
imul
nop
or
popa
call
pop
and
and
adc
inc
and
mov
mov
cdq
sub
pushf
sbb
iret
xchg
push
scas
pop
dec
xchg
(bad)
push
pop
mov
push
sbb
retf
das
cdq
lods
pushf
pop
xchg
mov
or
mov
aas
pop
add
retf
fidivr
mov
pop
je
fcom
add
push
jecxz
pop
dec
outs
xor
sub
mov
jg
stos
ins
retf
fmul
ins
inc
movs
shl
push
rcl
xor
cmp
cmp
cmp
stc
loope
les
sbb
frstor
out
mov
mov
repnz
push
std
xor
dec
pop
fistp
scas
jo
iret
popa
popf
pusha
ins
or
bound
(bad)
and
xor
jecxz
ror
jo
mov
test
cmp
fild
loopne
icebp
arpl
je
data16
ss
into
outs
sbb
out
mov
xor
add
mov
pop
shr
mov
sub
sub
sbb
pop
adc
push
adc
jmp
aam
test
dec
mov
es
fwait
sub
xor
mov
ds
jg
cmp
inc
and
int
dec
(bad)
xchg
push
imul
xchg
adc
ja
shl
xchg
pop
iret
and
movs
cmp
stos
mov
mov
cmp
fwait
mov
or
inc
sub
mov
retf
mov
jp
rol
sti
dec
xchg
xchg
hlt
(bad)
sub
clc
in
mov
adc
jl
daa
stos
lock
stc
call
pop
fldcw
dec
bound
sub
aam
cld
fcmovne
(bad)
add
cmp
lods
ret
sub
js
jp
imul
call
push
mov
adc
(bad)
fs
add
fidiv
push
inc
xchg
stos
mov
or
add
push
jns
and
(bad)
lock
jge
or
arpl
hlt
adc
sbb
xchg
and
fidiv
dec
xchg
jmp
xchg
xor
xchg
cmp
loope
aas
jb
mul
lds
adc
retf
int
addr16
xor
std
lds
jle
push
shr
lods
pop
fdivr
xchg
lahf
mov
(bad)
xchg
daa
dec
dec
scas
and
adc
call
outs
int
ins
out
mov
xlat
xchg
stos
or
ror
sbb
mov
(bad)
and
cmp
aam
cmps
mov
jge
sbb
mov
jb
neg
add
jmp
stos
bnd
jmp
dec
push
mov
mov
pop
inc
mov
ins
aad
into
fdiv
or
xor
ins
xchg
lahf
mov
jmp
push
jmp
inc
imul
sbb
jmp
stos
ins
jae
cmps
and
leave
add
shr
dec
ret
out
test
add
xor
aas
test
pop
popa
fstp
pop
das
aam
pmulhuw
stos
imul
call
jecxz
xchg
imul
retf
fldenv
adc
adc
ins
and
dec
dec
cmp
xor
and
dec
mov
push
mov
std
dec
mov
test
aas
imul
pop
inc
xchg
scas
test
mov
dec
iret
pusha
sbb
add
or
je
fdiv
retf
cs
pushf
mov
pop
rcr
out
or
xchg
(bad)
out
ja
ret
loopne
adc
inc
inc
pop
xor
xor
jno
enter
sub
inc
xor
scas
jo
cld
pusha
jle
push
mov
mov
daa
mov
jno
mov
jmp
fcomp
sbb
cwde
adc
sbb
pop
xchg
xor
mov
xchg
lods
cmp
loope
cmps
hlt
int
std
lea
enter
hlt
add
mov
cwde
addr16
xchg
mov
or
xor
dec
cmps
sbb
xchg
lea
stos
popa
test
addr16
clc
sub
add
outs
loopne
(bad)
fimul
dec
js
bnd
and
cmp
mov
std
outs
xlat
sub
pop
and
cld
jmp
and
out
out
ja
fbstp
mov
adc
mov
int3
ss
mov
xchg
adc
adc
mov
clc
lock
(bad)
cdq
out
push
inc
add
sbb
popa
adc
call
sub
push
enter
rol
lea
daa
in
std
fisttp
icebp
in
cdq
xchg
pop
ss
and
ficom
bound
dec
pusha
xor
sar
cmp
cmp
(bad)
call
and
mov
arpl
lods
pop
jmp
sar
sbb
xchg
mov
repz
dec
mov
retf
je
pop
dec
outs
inc
or
or
mov
mov
outs
or
or
xchg
je
repz
pop
mov
mov
push
pop
push
pop
dec
test
daa
addr16
test
sub
adc
push
xchg
lahf
sbb
adc
fwait
cli
mov
or
fidiv
mov
fbld
push
call
jnp
cmc
cmps
js
cmp
cwde
xor
or
mov
inc
xchg
and
push
sar
inc
lods
pop
mov
push
les
in
in
sbb
mov
xchg
add
jl
pop
xchg
shl
jp
cmc
ins
mov
adc
cmp
inc
cmp
ss
inc
daa
fwait
pop
lahf
call
mov
jl
(bad)
ror
adc
cld
jg
push
jmp
xor
pusha
jno
out
loop
fs
cmp
or
dec
shl
or
xchg
stc
or
add
xor
cmps
enter
mov
jecxz
xor
mov
in
jge
sbb
aas
into
jle
(bad)
jno
push
mov
jle
aad
enter
add
(bad)
hlt
pop
and
fwait
arpl
add
xor
(bad)
pop
xor
xor
fs
popa
cmp
sub
fcomip
mov
sti
cmp
add
jo
mov
inc
mov
sbb
cmps
in
mov
loop
xor
inc
hlt
jo
jne
add
mov
stos
jb
aam
call
rol
push
jno
mov
sahf
int
pop
adc
mov
(bad)
mov
push
sub
sub
xchg
mov
aam
sbb
inc
lahf
imul
ins
mov
inc
lock
clc
add
push
ffree
inc
adc
add
pop
pop
shr
cmp
xlat
fsubr
mov
dec
inc
adc
sbb
xchg
outs
jbe
cmc
out
in
neg
outs
mov
lods
or
fild
sti
adc
add
lock
pop
and
out
ins
dec
adc
jmp
and
(bad)
push
pcmpgtb
pop
out
stos
ror
pop
out
cld
adc
neg
xlat
dec
loop
jno
mov
sbb
mov
scas
pextrw
fsubp
das
shr
jle
popa
stc
jmp
inc
loop
adc
popf
icebp
retf
jae
mov
mov
and
push
out
das
push
in
inc
stos
pop
push
mov
nop
push
scas
and
sbb
cmp
repz
fild
add
and
inc
and
inc
inc
or
sub
lods
add
shl
std
sub
daa
sub
inc
jmp
mov
mov
dec
pop
cmc
lds
jge
mov
jl
mov
push
jne
jecxz
mov
xchg
rol
or
inc
add
pop
push
mov
fs
out
mov
out
clc
icebp
push
repnz
sub
fisub
lahf
jbe
jno
adc
cmp
out
xchg
cmp
fiadd
stos
jne
(bad)
js
push
sar
inc
jmp
jp
or
push
aas
fcomp
add
xadd
les
scas
pop
and
pop
cld
inc
pop
inc
lock
xchg
jno
fbld
fwait
jbe
cwde
aas
or
sbb
ins
dec
jo
adc
popa
lea
sti
loopne
sbb
push
mov
inc
inc
push
out
xor
(bad)
add
cld
repnz
call
sbb
clc
outs
and
aaa
cmc
mov
shl
adc
add
xchg
cmc
fxch
mov
cmps
inc
xchg
mov
lds
adc
mov
jmp
call
(bad)
jo
(bad)
loopne
int3
fprem
scas
pusha
jmp
out
sub
sahf
adc
sub
(bad)
cmps
lea
sbb
mov
mov
outs
push
imul
shl
lds
repz
fild
pop
adc
outs
and
cs
xchg
shl
lods
jb
cmp
rcr
call
hlt
mov
push
enter
ins
push
jl
cs
cli
cmp
je
bound
scas
(bad)
sbb
fadd
mov
nop
jl
xchg
je
outs
or
pop
outs
or
sbb
rol
rol
mov
ja
push
aad
(bad)
xchg
xrelease
addr16
sbb
fdiv
dec
and
out
test
and
retf
icebp
xchg
js
in
push
mul
rcr
test
sbb
sub
gs
neg
xor
(bad)
jnp
sbb
mov
push
mov
cli
jp
pop
xchg
jmp
jle
pop
scas
arpl
scas
out
pop
xor
pop
push
pop
fidivr
mov
and
and
fst
adc
adc
cmp
push
data16
lods
imul
mov
xlat
sub
cmp
(bad)
test
add
dec
push
push
mov
mov
dec
jecxz
sbb
cmp
(bad)
xchg
data16
repz
mov
cmc
call
xchg
mov
fimul
retf
xchg
pop
(bad)
aad
adc
mov
push
outs
mov
jno
push
mov
or
add
lds
out
in
das
pop
sub
movs
out
xor
jmp
jmp
int
hlt
push
shr
stc
stc
xor
xor
mov
inc
test
retf
push
push
mov
push
sar
dec
mov
cmp
movs
mov
test
in
inc
add
xchg
ins
pop
fwait
jecxz
into
fisttp
add
in
or
jb
out
aas
xor
fwait
push
fwait
push
pop
sahf
cmp
les
pushf
fsub
int
jno
retf
mov
leave
dec
data16
inc
xor
mov
imul
movs
loop
xlat
sub
cdq
bound
fiadd
int
jmp
js
fldenv
sbb
(bad)
sbb
push
pop
inc
shr
shl
mov
and
cmp
in
int
retf
lods
pop
xor
fcmove
sti
iret
lock
fdiv
fs
lahf
xchg
or
ret
mov
push
inc
mov
mov
mov
movs
hlt
sub
(bad)
icebp
push
cmp
pop
icebp
add
dec
clc
xchg
mov
out
fmulp
push
push
sbb
mov
or
adc
ds
(bad)
mov
mov
jg
push
xor
pop
cmc
fmul
hlt
lock
je
sbb
and
or
jns
add
enter
push
js
pop
in
scas
test
jmp
not
xor
pop
lahf
push
xor
imul
sub
and
pop
lods
retf
cmp
add
or
add
push
dec
dec
push
lock
not
mov
mov
shr
cwde
cmp
cmps
lea
jns
cmp
pop
push
jp
inc
mov
pop
sub
mov
pop
(bad)
mov
inc
push
xor
sub
std
pop
retf
dec
in
movs
xor
jge
mov
pushf
dec
jno
retf
xor
jne
daa
movs
(bad)
out
mov
pusha
xchg
sbb
iret
bound
fld
popa
sub
icebp
test
mov
mov
cmp
and
(bad)
retf
(bad)
push
cld
xchg
xor
cmps
sub
ror
jne
mov
add
aas
iret
aaa
int
js
lods
call
push
push
cli
jae
ss
addr16
movs
dec
mov
jo
push
mov
xchg
mov
pop
repnz
inc
or
jl
cli
enter
cmp
sbb
pop
fwait
pushf
jecxz
mov
fdivr
jne
sbb
mov
push
dec
pop
les
cmp
ret
or
push
xor
stos
cmp
arpl
test
cmc
cmps
pop
dec
mov
aam
adc
mov
leave
and
loope
(bad)
mov
rol
popa
daa
test
jmp
sub
push
sar
mov
movs
push
lahf
stc
sbb
inc
loopne
das
sub
nop
aam
xchg
sub
sub
iret
mov
std
fwait
cmp
lods
inc
adc
adc
or
test
jo
xchg
movs
sbb
int3
mov
xor
dec
mov
mov
xchg
dec
scas
aam
daa
inc
je
jae
mov
jl
mov
dec
arpl
cmp
(bad)
pop
call
outs
xchg
jmp
stos
lods
outs
ret
(bad)
add
sub
idiv
dec
cmps
dec
push
(bad)
push
idiv
out
xchg
je
cmp
gs
pop
xchg
bound
mov
or
sbb
inc
scas
jbe
(bad)
pop
int
add
jl
imul
repnz
mov
push
ret
mov
mov
imul
imul
retf
in
rcl
push
mov
jp
push
hlt
out
and
pop
cmp
jnp
aas
test
aaa
xor
push
ja
or
xchg
aaa
scas
setnp
xor
add
xchg
sub
test
push
mov
lds
sub
pop
xchg
add
pop
lds
stos
movs
mov
imul
xor
pop
or
sahf
adc
and
stos
xor
xchg
push
pop
dec
sahf
test
rcr
jns
fadd
fwait
in
cmp
push
xchg
push
hlt
xlat
jns
mov
sbb
add
lds
mov
repnz
jbe
sbb
add
push
aam
out
rol
mov
sub
mov
xchg
sbb
dec
fnstcw
inc
out
cmp
imul
mov
shl
shr
jnp
inc
sbb
into
push
or
pop
pop
adc
cli
and
stos
loope
mov
stc
mov
(bad)
sub
dec
popf
iret
adc
es
mov
pop
pop
inc
dec
cmp
test
loopne
mov
inc
mov
pop
icebp
pop
(bad)
in
(bad)
loopne
mov
cwde
loop
mov
test
cli
les
enter
mov
fs
in
out
jne
jmp
je
dec
into
push
stc
pop
gs
pop
scas
nop
gs
mov
xchg
leave
(bad)
les
mov
in
sar
mov
lods
in
cli
dec
pop
aas
repnz
cdq
stc
sbb
sbb
jmp
fimul
fstp
not
shl
fwait
inc
test
mov
sub
stos
mov
mov
mov
push
lea
popf
lea
rcr
mov
sbb
xchg
jg
stos
in
aam
mov
jb
call
ret
cmp
dec
out
mov
cli
loopne
pushf
push
cmp
enter
mov
mov
inc
fisttp
jno
rol
pop
outs
lods
sub
xor
push
xchg
and
fst
adc
add
xchg
ins
sbb
push
cmp
aam
cmp
stc
lds
addr16
xor
fidivr
cmps
pop
pop
shl
cmps
push
ret
pop
hlt
add
imul
pop
xchg
je
sti
es
scas
xor
xlat
pop
cld
xlat
jmp
ins
push
mov
clc
ror
inc
xor
pop
mov
add
imul
jmp
jo
jo
adc
sub
je
xchg
add
call
sbb
sub
xchg
imul
rcr
mov
push
cmps
dec
inc
int3
fsub
jns
ins
lock
fwait
test
xor
ja
daa
jl
scas
xor
hlt
leave
call
cmp
jg
mov
sub
(bad)
ret
push
inc
fnstsw
push
xchg
pop
fidivr
(bad)
rcr
mov
sbb
inc
xlat
mov
js
ins
jp
and
push
std
es
jae
sbb
iret
push
imul
(bad)
aas
inc
aam
cmps
sbb
sar
in
xor
inc
xor
and
outs
xchg
cmps
fcom
movs
retf
cmp
retf
jb
or
test
mov
sbb
(bad)
popa
xor
adc
and
cmp
and
jb
cwde
js
sub
ret
fsub
enter
lods
test
cmps
cmp
add
ja
push
xchg
lea
cdq
call
sbb
retf
sar
out
pop
lea
mov
retf
cdq
sub
test
fdivr
imul
adc
cmp
sub
mov
push
sar
push
jl
inc
cmp
imul
imul
retf
cmp
repnz
xchg
imul
push
je
xor
fdivr
cmp
das
cmp
popf
les
dec
mov
ror
aas
push
sbb
cmp
push
stos
data16
fisttp
mov
or
js
inc
out
sub
(bad)
popa
mov
and
test
aaa
loope
mov
xchg
addr16
mov
jmp
cdq
out
mov
ret
adc
and
push
sub
jns
daa
out
mov
xchg
jno
(bad)
jp
(bad)
mov
mov
in
cmp
loopne
xor
fucomi
clc
inc
es
jecxz
aam
mov
out
idiv
jmp
and
sub
push
(bad)
push
mov
stos
sub
cmps
(bad)
ss
out
bound
pop
xchg
sub
cmp
xchg
je
mov
ss
mov
mov
arpl
scas
aad
mov
add
sbb
es
popf
jbe
and
loope
mov
js
mov
mov
leave
out
dec
adc
les
jg
add
mov
xchg
ins
(bad)
sbb
sbb
pop
cmps
stos
daa
rcr
pusha
adc
adc
sub
push
adc
jle
adc
xchg
stos
or
clc
(bad)
loop
jb
fwait
dec
lds
pushf
adc
jg
fdivp
jno
xor
pop
cmps
js
add
pop
pop
nop
mov
lock
bnd
sar
cli
(bad)
(bad)
fisttp
add
clc
xor
lea
dec
jns
pop
jnp
ror
cmp
leave
push
stc
mov
lods
in
xor
movs
repnz
adc
xchg
pusha
mov
outs
cmc
stos
arpl
pop
fsubr
loopne
push
mov
out
call
aad
inc
or
lods
jp
dec
inc
or
or
push
mov
add
xchg
ficom
icebp
test
lahf
jecxz
dec
mov
add
xchg
adc
outs
sbb
iret
xchg
or
ja
in
fwait
in
or
(bad)
sbb
not
imul
dec
nop
(bad)
jmp
cwde
dec
es
push
pop
add
fsubr
popw
push
leave
cmp
pop
sar
shl
in
std
jae
fs
(bad)
aaa
cmp
mov
rol
sub
cmps
mov
cmc
mov
xor
imul
cmp
shr
mov
add
mov
js
imul
add
loopne
push
or
cli
shl
stos
cmp
jle
ins
ror
inc
mov
pop
das
gs
fdiv
inc
adc
je
adc
pop
jae
jo
lds
imul
xchg
inc
xor
mov
pop
cmp
xor
cld
adc
fcom
push
jmp
lods
stos
fimul
push
fcmovnu
jns
imul
loope
jnp
cmp
rol
mov
and
pusha
mov
lods
enter
aad
hlt
pop
aas
call
and
dec
stos
scas
(bad)
fbld
jb
out
in
adc
in
jecxz
sub
pop
scas
mov
mov
lods
and
jno
adc
call
fist
inc
mov
cmp
clc
dec
mov
pop
int3
retf
or
in
mov
adc
sahf
sub
imul
sahf
adc
fcomp
push
mov
aad
adc
aaa
sbb
jmp
jne
adc
fcom
bound
mov
inc
inc
repz
jb
and
test
cli
or
pop
lods
dec
bound
adc
push
call
in
sub
out
cmps
jns
cmp
lahf
repnz
out
sbb
out
cs
push
lods
mov
or
xchg
stos
dec
out
inc
call
(bad)
mov
fwait
cwde
cdq
sub
xchg
daa
out
test
add
adc
stos
pop
cs
retf
fadd
call
movs
mov
test
in
xchg
shl
add
movs
(bad)
cld
stos
jecxz
mov
jecxz
cdq
push
in
mov
popa
sbb
mov
retf
and
jecxz
rcl
bound
mov
in
add
int
xor
cmps
xchg
jbe
sub
cli
mov
cmc
jbe
xchg
fs
cmp
les
sub
jo
mul
neg
cmp
dec
mov
pop
sub
bound
dec
push
cmp
popf
(bad)
and
fwait
or
stos
cmp
mov
xchg
adc
fadd
test
ds
stos
xchg
ds
(bad)
ficomp
mov
std
fmul
or
xchg
bound
(bad)
iret
pop
inc
push
inc
xchg
mov
fisttp
mov
repnz
jne
cmp
inc
aam
in
push
xchg
dec
out
rcr
sar
xor
jmp
cmp
pop
jno
pop
aad
inc
pop
retf
pop
in
fild
jp
push
inc
je
lock
adc
jns
pusha
jno
mov
dec
jae
in
bound
movs
sbb
stc
movs
(bad)
dec
push
cmp
cdq
ret
inc
mov
(bad)
out
jmp
adc
outs
je
out
fs
stos
dec
(bad)
push
movs
pop
imul
push
mov
ss
in
push
bound
fsubr
inc
cmp
dec
mov
test
inc
pop
ror
pop
or
sbb
cmp
nop
js
mov
xchg
cmc
inc
xor
mov
xchg
adc
ret
mov
in
mov
dec
adc
mov
mov
mov
push
cli
xor
adc
cdq
scas
mov
push
push
mov
jp
mov
push
loop
mov
in
jmp
jl
push
jmp
inc
jae
test
shr
or
pop
repnz
push
pop
xchg
icebp
adc
bnd
aad
js
jmp
out
(bad)
lock
ficom
(bad)
and
pop
pop
cmp
test
lods
sar
sbb
sub
and
pop
pop
loopne
cmps
gs
jmp
lock
sub
xchg
jmp
sub
sub
bound
push
jge
inc
xor
outs
push
adc
push
(bad)
sub
scas
outs
mov
aas
xor
gs
call
mov
(bad)
cmp
xchg
mov
adc
sahf
xchg
imul
fadd
cmps
add
imul
shl
sti
sub
test
ficom
xchg
cli
jno
jbe
shr
xor
movs
daa
test
jecxz
sbb
dec
pop
mov
jmp
stos
inc
mov
leave
test
mov
mov
push
das
popf
push
add
test
push
aas
sbb
fist
rcr
pop
sbb
idiv
ins
xor
js
push
pop
cmps
pop
xor
imul
mov
inc
mov
mov
inc
mov
or
bound
(bad)
aas
add
(bad)
in
cmp
mov
dec
push
jecxz
cmps
mov
je
sub
fdivr
push
sub
into
out
cmp
mov
add
pop
stc
sbb
test
xor
add
ss
or
test
addr16
or
rol
sbb
mov
stc
mov
push
shl
cmp
movs
xor
sbb
cmp
or
inc
test
enter
or
fnstenv
inc
add
scas
movs
push
push
mov
xor
test
sub
and
or
jp
repz
loope
sbb
adc
or
nop
xlat
daa
das
mov
das
sahf
mov
fsub
movs
adc
and
adc
jbe
aam
mov
xor
add
inc
in
mov
jo
dec
aas
cmp
rol
loop
jae
fchs
xor
clc
add
adc
cmps
ins
call
jmp
and
xchg
and
frstor
inc
mov
sub
fstp
xor
pushf
je
mov
out
inc
shl
sub
mov
mov
mov
xor
(bad)
cmp
mov
push
jo
movs
shl
mov
(bad)
in
mov
cmp
pop
xor
test
xchg
xor
stos
sub
pushf
mov
xchg
cdq
loope
in
ror
fidivr
mov
add
mov
daa
mov
repnz
fisttp
ret
(bad)
mov
jle
mov
test
test
daa
jno
frstor
fisubr
outs
push
mov
inc
adc
pop
out
cmp
cdq
pop
lods
bound
push
into
cmp
call
mov
mov
cmc
mov
or
data16
push
jbe
outs
mov
imul
adc
pop
adc
shr
xor
iret
shl
ret
xor
sbb
or
cmc
jl
dec
cmp
ja
cmp
repnz
mov
mov
sub
jb
call
test
mov
imul
retf
(bad)
inc
scas
js
or
stos
mov
sbb
cmp
enter
mov
aad
and
lods
out
(bad)
mov
adc
fs
adc
ins
mov
popf
aad
cmp
dec
mov
test
mov
sbb
loop
rcl
fcomip
div
adc
xchg
out
sahf
hlt
mov
sbb
push
push
add
jg
gs
(bad)
pop
mov
retf
push
mov
inc
sub
mov
mov
jg
jle
bound
cdq
nop
inc
aad
dec
push
(bad)
in
xchg
int
dec
mov
pop
sbb
inc
push
mov
sbb
retf
xchg
sbb
adc
shr
xchg
pop
sbb
mov
popf
int
mov
push
ret
(bad)
mov
mov
shr
jnp
mov
call
lods
jno
cmps
test
je
mov
dec
inc
clc
jecxz
enter
inc
call
scas
dec
sub
dec
mov
stos
sbb
dec
mov
call
jp
pop
int3
gs
cdq
jg
aad
cmp
rcl
add
outs
jb
add
mov
sbb
nop
scas
or
mov
mov
jns
je
fidivr
push
out
rcr
mov
pop
xor
pop
jecxz
psubsw
rcl
shl
pop
inc
push
mov
outs
(bad)
fld
leave
inc
lahf
sbb
rcl
retf
aad
cmp
pop
xor
mov
mov
std
inc
dec
adc
dec
or
mov
dec
pusha
(bad)
loopne
ret
push
adc
and
push
xchg
jmp
sub
int3
ret
aaa
mov
das
outs
scas
out
jmp
out
and
(bad)
scas
jno
movs
shr
aaa
dec
out
sbb
outs
sbb
and
mov
inc
lahf
fmulp
and
pop
hlt
addr16
dec
xor
mov
outs
fdiv
or
int
pop
adc
xor
sahf
repnz
jno
into
xchg
enter
and
adc
aaa
popa
push
or
leave
mov
popa
and
dec
jmp
adc
and
jno
(bad)
ficomp
xchg
mov
dec
jmp
cdq
lahf
or
(bad)
or
adc
aam
add
ss
iret
jnp
xor
xchg
repz
mov
dec
push
pop
lea
fcos
xchg
adc
xor
ins
ja
adc
push
call
cmp
daa
ja
jmp
clc
sbb
cld
dec
adc
(bad)
and
fcmovu
iret
rcr
loop
mov
out
mov
mov
test
dec
test
jp
sbb
mov
pushf
or
jg
arpl
out
or
popf
pop
or
jp
iret
mov
movs
cmp
lods
retf
mov
xchg
out
xchg
retf
stos
js
out
cmp
sbb
and
pop
sub
jmp
xchg
inc
pop
hlt
pop
aam
int
(bad)
mov
and
ficom
push
push
adc
sti
fsincos
jo
gs
mov
mov
scas
adc
push
stc
es
sbb
cmp
pop
loope
push
mov
sbb
scas
and
mov
push
jo
lahf
sar
jmp
xor
pop
aaa
adc
dec
mov
xchg
inc
or
mov
cld
or
inc
or
push
jnp
cs
lods
adc
inc
jmp
mov
adc
dec
ret
and
pop
arpl
mov
xor
add
mov
inc
dec
push
call
pop
js
mov
aad
in
outs
fimul
in
adc
(bad)
lods
sbb
mov
push
fcmove
and
push
mov
dec
nop
ja
dec
call
or
mov
dec
stc
cmp
dec
rol
repz
push
sbb
outs
lock
scas
sahf
enter
push
inc
push
ja
mov
imul
lods
sub
dec
mov
sahf
lock
add
retf
ret
loopne
fdiv
jmp
xchg
psubusw
mov
and
xor
ret
or
aam
push
rol
mov
xor
mov
shl
popa
mov
ja
aaa
xchg
mov
in
or
addr16
dec
jge
sub
sbb
xor
cmp
(bad)
in
mov
cs
dec
lods
imul
shr
arpl
xor
mov
mov
dec
leave
sbb
hlt
dec
rol
xchg
push
les
(bad)
fisubr
retf
pop
jp
int3
neg
nop
movs
gs
int
ret
jg
adc
sbb
pop
jmp
or
sbb
mov
adc
and
add
(bad)
fsub
push
cs
mov
push
(bad)
popa
cs
inc
ds
xor
call
leave
cli
loopne
sbb
test
ret
add
adc
int
push
lods
and
mov
stc
imul
imul
add
push
leave
ds
outs
imul
pop
es
xor
sbb
ss
sub
add
xor
mov
ins
lahf
pop
inc
jb
shl
push
and
xchg
lock
call
cmp
sbb
aaa
xchg
int
aam
imul
xchg
(bad)
daa
inc
rcr
sub
cdq
adc
cld
sub
and
outs
(bad)
sbb
push
out
pushf
clc
cmp
les
mul
and
movs
pop
je
mov
or
and
push
lods
mov
sbb
imul
or
iret
jne
fwait
aas
stos
sbb
inc
(bad)
imul
sbb
vmovdqu
fcom
lods
int
in
dec
jp
jmp
xchg
mov
lea
jo
mov
clc
add
cmp
jo
outs
ss
and
xchg
sub
xchg
push
xor
or
jmp
jge
rcl
mov
mov
repz
adc
mov
jb
inc
jmp
and
jge
mov
aam
int
cmp
es
xchg
mov
cwde
gs
fistp
push
je
and
movd
out
je
out
push
es
in
inc
jb
test
hlt
call
pop
ins
dec
vmovlpd
jmp
imul
movs
mov
pop
push
leave
dec
dec
mov
mov
rol
xchg
pop
xor
pop
push
movs
xchg
out
ds
repz
xchg
mov
push
xor
sbb
mov
or
inc
sbb
fldcw
sub
retf
stos
and
iret
mov
push
ins
cwde
jbe
es
retf
push
pop
cmp
shl
dec
fisubr
pop
inc
xchg
sub
dec
and
mov
lods
xchg
pop
xchg
mov
(bad)
jmp
stos
or
pusha
inc
mov
fdiv
gs
aam
push
sbb
sbb
inc
mov
enter
xor
fld
sub
cmps
out
sub
int3
sbb
pop
ret
push
int3
and
xchg
cmp
jae
or
push
pop
dec
ins
(bad)
lea
mov
aaa
push
cmp
fiadd
enter
bound
loope
adc
mov
mov
cmps
push
cmc
mov
popa
and
mov
ret
adc
push
clc
test
adc
ins
pop
pop
xor
sub
cmp
data16
push
lock
mov
sub
mov
aas
adc
push
(bad)
xor
pop
call
xchg
and
and
xor
aam
jp
dec
call
out
jne
add
fadd
pop
mov
xchg
xor
pop
jecxz
call
sbb
call
inc
push
xchg
pop
xor
cmp
xchg
push
and
arpl
mov
and
retf
jg
xchg
scas
inc
call
add
xor
jmp
mov
adc
enter
inc
adc
es
daa
or
dec
addr16
idiv
pop
sbb
in
dec
test
lods
retf
cmp
adc
sbb
mov
inc
fisttp
fcmovnu
and
popf
dec
jmp
inc
ins
cmp
in
dec
push
outs
mov
les
xchg
mov
je
push
mov
cmps
inc
mov
cmp
fisub
imul
pop
jge
adc
push
shl
xchg
xchg
and
inc
jge
dec
je
push
push
aas
sti
outs
jle
test
nop
(bad)
inc
or
push
div
dec
or
repnz
push
adc
jmp
int3
lock
dec
jns
hlt
shl
jl
sub
icebp
pop
mov
dec
iret
aam
inc
ss
(bad)
fnstcw
add
loope
sbb
cmp
sub
mov
xchg
add
cs
dec
mov
aad
(bad)
movs
(bad)
loope
xor
lods
imul
jbe
inc
or
or
push
pop
lock
jg
sbb
data16
xchg
cdq
call
xlat
retf
dec
stos
jle
clc
mov
out
jo
mov
fs
jmp
int3
xchg
push
jno
rol
div
jg
lea
mov
arpl
cmp
inc
ret
arpl
dec
stos
pop
cmp
xchg
push
scas
xor
mov
fs
sbb
and
jne
cli
mov
sub
jp
sbb
xor
dec
push
sub
cwde
xor
sti
scas
inc
xchg
pop
cmp
cmp
and
cli
inc
cmp
dec
cmp
pop
add
loopne
xor
and
popf
inc
sahf
jno
dec
sbb
aad
jmp
retf
jmp
mov
jge
arpl
pushf
push
cdq
push
mov
inc
retf
pop
xlat
in
push
fadd
arpl
mov
out
retf
cld
sar
pop
lds
aad
into
mov
sub
jmp
and
dec
pop
or
ret
inc
cmp
sub
rcr
int3
out
cmp
pop
(bad)
cmp
xor
mov
push
ror
cmc
pop
test
(bad)
jmp
adc
sti
mov
xchg
sub
bound
sub
pop
xchg
inc
or
mov
jmp
jmp
inc
cmp
sbb
dec
in
movs
adc
enter
xor
cmp
xchg
jns
xchg
xchg
xchg
ins
push
adc
push
repz
out
test
mov
lea
fdivrp
les
mov
mov
cmp
cmp
in
shl
jae
call
and
idiv
or
and
nop
push
jl
xchg
mov
movs
stc
cmc
jmp
xor
daa
mov
aas
mov
sub
test
or
js
sbb
aas
xchg
lods
scas
movs
shl
push
pop
adc
test
(bad)
cmp
or
cs
fucomip
add
loope
loop
push
inc
jae
(bad)
neg
sti
jbe
addr16
jno
ins
jb
das
cmp
ja
mov
das
cmp
or
mov
jbe
call
loop
out
xor
jmp
pop
adc
test
rcl
xor
(bad)
popa
jl
aad
popf
ror
mov
inc
adc
test
cmc
les
dec
sub
mov
and
dec
add
mov
fsqrt
push
shl
lahf
imul
fstp
aaa
movs
xor
jne
push
(bad)
mov
cwde
frstor
or
hlt
cdq
sahf
enter
nop
mov
cmp
adc
pop
cmc
int
mov
push
jb
stos
mov
and
pop
dec
addr16
nop
ret
add
mov
sbb
js
cmp
adc
cmp
ins
(bad)
(bad)
fcom
jnp
add
cld
cmp
xchg
hlt
push
pop
add
in
adc
pop
cmp
dec
stc
and
out
push
rcr
stos
push
sbb
cmp
add
lock
mov
and
pop
pop
push
mul
pop
xor
lods
call
movs
jmp
mov
adc
(bad)
in
ret
aas
push
adc
retf
jle
mov
mov
imul
clc
sub
cli
jge
fist
aad
in
ss
not
leave
adc
xor
xor
push
mov
xchg
les
fnstenv
cmp
movs
lahf
xor
cld
int3
mov
fdiv
pop
pop
movs
sbb
xchg
or
sbb
jb
pop
push
sbb
int
leave
aas
push
into
jns
enter
or
push
sbb
fisubr
sub
xchg
push
mov
(bad)
cld
aas
frstor
daa
mov
int
mov
sub
dec
stos
int3
aad
cmps
add
in
adc
nop
sub
stc
shl
dec
pop
pushf
pop
lods
out
out
sti
pushf
stos
xlat
add
js
jle
lods
fld
push
clc
sub
pop
add
in
mov
in
call
mov
add
add
jnp
mov
int
stos
popa
pop
xlat
inc
sub
sbb
sub
(bad)
xor
pop
sbb
sbb
add
add
and
or
jae
sar
xor
jns
enter
xchg
cmp
aam
test
dec
xchg
push
cmps
pop
aam
xchg
pop
repz
pop
xlat
dec
gs
call
hlt
jno
fild
xchg
push
add
mov
or
test
fistp
pop
rep
cmp
test
retf
test
(bad)
icebp
adc
into
jmp
jae
and
ror
xor
mov
pushf
jbe
lods
add
jb
jmp
cdq
fisub
jbe
xchg
dec
imul
stos
sub
dec
mul
in
cmps
retf
and
(bad)
retf
sahf
push
paddsb
daa
cmp
imul
xlat
dec
cs
lahf
sti
mov
movs
cmps
mov
dec
loopne
xchg
outs
jnp
into
sub
xor
mov
and
call
cli
ins
mov
test
out
fdiv
xchg
cmp
fdiv
fst
loop
sbb
pop
sub
mov
loopne
fisttp
mov
daa
call
jno
or
cmp
and
sbb
jp
jp
sbb
fisttp
lods
(bad)
enter
mov
sbb
xor
stos
xor
arpl
adc
push
and
add
out
data16
mov
push
xchg
sub
xchg
call
adc
xchg
jae
aam
in
add
fbstp
out
(bad)
xor
mov
int3
repz
sar
sub
pop
mov
sub
arpl
xchg
jnp
jmp
fsubr
out
mov
jp
push
push
addr16
lea
idiv
pusha
shr
push
cmc
shl
jne
daa
in
movs
and
fld
mov
sub
imul
aad
push
push
aad
mov
sbb
push
mov
(bad)
je
xor
push
push
(bad)
fisttp
test
pushf
mov
(bad)
and
xor
clc
jno
sbb
pop
mov
jne
adc
or
bound
dec
test
call
cmc
xchg
push
dec
fisub
pop
data16
movs
int
dec
inc
jp
call
cmp
cmp
call
int3
les
aaa
ret
fistp
push
sub
cmp
shl
pop
jge
call
sub
adc
aad
jmp
in
data16
mov
outs
mov
cmp
xchg
rol
fwait
adc
sub
mov
sar
adc
mov
xor
pop
mov
sbb
ss
ficomp
jo
sub
lock
lods
sbb
pop
dec
xchg
shr
dec
xchg
and
push
(bad)
ins
cld
jmp
pop
and
fist
loope
add
jle
in
les
jmp
lds
dec
push
push
pop
adc
in
inc
fistp
aam
xor
push
jne
imul
xor
outs
inc
out
lea
or
movs
fucomp
sti
js
jne
inc
std
pop
adc
ret
inc
add
mov
addr16
sbb
sti
add
das
retf
dec
cs
rcl
(bad)
xor
(bad)
and
je
popf
inc
fsubr
mov
popa
retf
mov
(bad)
gs
fwait
jne
mov
sub
stos
ja
sub
fadd
mov
and
or
inc
es
daa
jno
mov
fdivr
inc
xchg
push
pop
jno
gs
jo
jb
cmp
push
test
inc
cmp
sbb
mov
xchg
mov
jmp
xor
mov
mov
pusha
cwde
(bad)
lods
pop
cmp
mov
mov
arpl
mov
push
add
jno
icebp
mov
adc
stos
shl
mov
sbb
push
cdq
add
push
mov
lods
add
retf
xchg
mov
xlat
dec
xor
or
in
dec
jle
adc
dec
adc
cdq
ins
fs
sar
lods
fild
movs
das
div
out
jnp
jmp
ins
retf
sub
push
inc
pop
cmp
cmp
push
add
dec
lods
test
pop
jnp
add
push
and
pop
mov
adc
fisub
or
add
push
jl
or
push
test
jns
dec
lods
mov
pop
in
sub
call
add
rcr
int3
popa
stos
and
lock
or
mov
ret
dec
cwde
fldcw
jne
gs
sbb
add
cdq
sahf
sub
jnp
adc
call
lock
clc
push
pop
xchg
mov
sbb
shl
adc
ret
sar
pushf
lahf
add
out
rdmsr
call
xchg
add
push
out
or
lea
or
sub
jmp
(bad)
aas
dec
addr16
xor
ss
jne
out
jmp
dec
(bad)
cmp
in
lahf
push
mov
mov
sbb
sbb
test
jp
xchg
ret
(bad)
jno
or
jo
rcr
fstp
mov
xchg
sbb
arpl
mov
sbb
sub
into
push
out
adc
dec
xchg
and
sbb
(bad)
jle
mov
push
stos
in
inc
adc
mov
xchg
add
pusha
jp
mov
stos
out
stos
fwait
(bad)
jp
sbb
(bad)
or
(bad)
sub
jmp
xor
jg
mov
pop
push
int
fwait
pop
in
mov
add
mov
cmp
inc
mov
adc
out
shl
bound
shr
pop
inc
pop
mov
pusha
add
mov
xchg
call
lock
push
push
mov
inc
das
mov
jae
inc
push
push
or
mov
add
adc
ss
pusha
ins
adc
jo
fidivr
out
pop
dec
inc
retf
sbb
xchg
ss
adc
retf
inc
and
cmps
std
test
push
(bad)
cdq
push
mov
adc
sbb
(bad)
gs
jns
icebp
cpuid
(bad)
jne
mov
fcom
inc
retf
fcom
sbb
mov
pop
pop
lahf
dec
mov
mov
sbb
fisub
dec
gs
rcl
or
movs
shl
imul
and
cmc
sbb
in
push
movs
xor
in
mov
mov
mov
mov
sahf
pop
or
sbb
mov
pushf
xchg
and
mov
inc
bound
mov
and
mov
sbb
xchg
fistp
and
mov
leave
cmp
mov
or
sbb
out
daa
push
sti
and
fsubr
sub
xchg
(bad)
retf
xchg
push
mov
hlt
imul
(bad)
dec
sbb
pop
push
int3
sub
or
int3
cmp
adc
int
push
jmp
rol
out
fidivr
pop
lods
cmp
cmp
lds
into
mov
jmp
les
sbb
pop
(bad)
add
cmp
or
mov
mov
mov
sub
(bad)
hlt
out
jno
stos
fmul
fistp
mov
and
ins
push
pop
out
repnz
sbb
or
add
fnsave
sub
sub
retf
add
inc
les
ins
call
mov
das
push
out
push
push
fnop
dec
pushf
mov
cmp
push
retf
push
xchg
clc
movs
fiadd
sub
in
and
imul
fstp
mov
sub
test
sub
cmp
sub
je
iret
push
push
cs
jge
jl
mov
movs
and
adc
mov
cmp
xchg
aam
les
mov
out
ins
call
mov
push
and
sbb
fisub
(bad)
pop
call
sbb
imul
fld
sub
jbe
pusha
stos
popa
stos
daa
push
mov
add
dec
sub
cmc
movs
jne
push
repz
bound
push
and
imul
jge
shr
dec
fisub
ficomp
mov
retf
nop
pop
mov
sbb
dec
push
mov
(bad)
cli
jmp
pushf
mov
pop
loope
imul
xlat
rcl
icebp
sub
sub
dec
in
jns
js
ret
mov
sbb
stos
rcl
mov
cli
inc
jmp
addr16
lock
mov
inc
lods
push
or
cwde
xchg
add
stc
inc
jle
mov
nop
fadd
pop
pop
cmps
imul
pop
sbb
fcom
imul
mov
xchg
retf
mov
add
inc
stc
jb
sbb
xor
ss
hlt
mov
sbb
mov
add
and
ret
ret
pop
int
xchg
sahf
or
sub
shr
and
sub
(bad)
cmc
addr16
std
adc
into
dec
outs
out
leave
mov
shl
push
je
xchg
cwde
rol
sub
arpl
ss
ins
xchg
push
mov
adc
dec
xchg
cld
mov
stos
unpcklps
cmp
lods
add
in
outs
inc
(bad)
jno
aam
test
push
enter
mov
pop
push
adc
ja
icebp
stos
outs
lahf
dec
les
mov
inc
jge
mov
fdivr
mov
fwait
xor
daa
lods
push
mov
jb
pop
(bad)
push
pop
lods
mov
rcl
repnz
jg
(bad)
rol
mov
mov
imul
jne
adc
cmps
dec
popa
sbb
sbb
sub
inc
in
sub
mov
push
mov
sub
push
pop
fistp
add
fadd
inc
lods
pop
push
cmps
call
mov
fidiv
jno
test
adc
test
arpl
cli
inc
ds
arpl
add
fnstsw
push
cmp
mov
jmp
mov
jmp
pop
mov
sub
pop
mov
xchg
xor
bound
lea
gs
mov
(bad)
sub
xor
mov
stos
int3
in
(bad)
in
inc
aad
push
(bad)
xor
cmp
dec
pop
inc
jbe
das
jns
loopne
pop
dec
inc
inc
dec
push
mov
icebp
pop
ss
pop
in
das
inc
push
test
ja
mov
or
cld
jmp
hlt
or
nop
js
out
add
bound
mov
test
jp
(bad)
lock
nop
pop
xchg
push
sbb
mov
pop
loopne
adc
or
rol
cli
icebp
mov
(bad)
aam
adc
jns
mov
mov
int3
in
pop
jbe
in
in
test
inc
mov
lods
popf
sbb
loope
and
ss
ror
mov
and
fimul
mov
lods
pusha
repz
out
ja
or
imul
xchg
repz
xchg
lahf
and
mov
stos
lods
dec
out
test
repz
(bad)
daa
jo
mov
or
add
pop
jmp
test
xchg
cdq
push
mov
xlat
push
das
lds
jmp
sub
mov
jns
mov
push
das
jb
mov
aam
movs
aas
fistp
clc
in
outs
test
mov
(bad)
in
in
mov
cmc
xor
lds
fsub
add
lea
push
dec
cli
pop
dec
out
sbb
cmp
outs
and
(bad)
aaa
push
add
mov
popf
test
sub
(bad)
loop
mov
das
lahf
pop
retf
mov
mov
das
addr16
das
jmp
push
shl
xor
loope
cdq
add
push
(bad)
sar
ret
(bad)
icebp
shr
jmp
jnp
jb
and
mov
out
dec
jp
mov
xchg
or
aam
and
test
fucomip
sbb
loop
xor
in
repz
std
and
into
mov
cmp
cmp
sahf
mov
sbb
and
inc
mov
mov
jmp
hlt
cdq
call
xor
push
leave
xor
pmulhuw
pop
psllq
data16
mov
push
movs
push
xor
stos
dec
fwait
loop
leave
pop
jae
or
jl
mov
imul
push
cmpxchg
(bad)
repnz
bnd
mov
push
gs
jecxz
and
cmp
dec
and
inc
fldcw
jne
or
cmp
sar
movs
call
inc
jmp
imul
mov
jnp
ja
push
mov
test
mov
retf
pop
aas
sbb
aas
hlt
sub
cdq
jle
jb
mov
cmp
cmp
or
call
(bad)
aas
push
jb
mov
mov
mov
mov
sbb
js
movs
dec
in
test
test
pop
or
pushf
js
data16
sub
loope
push
mov
retf
dec
hlt
push
cmc
sub
iret
jle
sub
sbb
jmp
cld
stc
js
xchg
(bad)
or
jo
xlat
push
scas
sahf
movs
jle
push
loopne
push
(bad)
inc
fadd
push
aad
dec
sti
das
pop
cld
pusha
stc
mov
cmp
jnp
jb
mov
cli
(bad)
ja
xor
movs
lods
ins
jnp
mov
dec
mov
or
and
movs
int3
test
add
and
leave
es
in
xor
addr16
nop
sbb
clc
cmps
pushf
les
sub
cmp
adc
cmp
data16
cld
jg
js
jb
add
fwait
jmp
inc
push
in
xchg
fwait
adc
xor
fistp
xlat
xlat
xchg
fidivr
sti
cmc
xchg
popa
xor
and
jno
inc
sbb
popa
mov
jnp
aad
mov
jne
int3
nop
mov
push
sbb
dec
fmul
pop
push
gs
rcl
jne
and
pop
loope
fnstsw
std
mov
add
jmp
ucomiss
and
daa
movs
xacquire
push
clc
in
pop
sub
scas
or
xchg
sbb
and
sbb
sahf
mov
add
call
dec
jmp
jge
inc
imul
jae
mov
test
mov
inc
(bad)
shr
mov
mov
cmp
fld
add
mov
test
ins
arpl
jg
jecxz
add
sahf
lds
pop
push
dec
mov
mov
loop
or
enter
mov
inc
xor
aad
mov
xchg
cmp
jo
mov
mov
push
mov
repz
inc
mov
outs
mov
pop
inc
mov
pop
(bad)
int
popf
or
pop
sub
jns
test
rol
sbb
jg
pop
sbb
xor
ficomp
mov
xor
test
sbb
and
lea
mov
mov
or
loop
sub
jbe
inc
fucomp
out
jo
mov
xchg
pop
inc
mov
call
sub
adc
push
mov
inc
mov
or
addr16
(bad)
hlt
jg
or
pop
inc
ficom
xor
mov
sub
cmp
fsubrp
fiadd
add
xor
(bad)
mov
jno
jge
in
mov
mov
or
adc
jecxz
repz
shl
mov
push
and
movs
shr
icebp
rcl
iret
pop
int
jnp
int
(bad)
mov
cmps
imul
xchg
cmp
icebp
xlat
lods
sar
xchg
mov
mov
xor
sub
inc
pop
xchg
xchg
pop
cli
adc
pop
mov
inc
jle
clc
mov
stos
sub
dec
fbld
xor
and
int3
jne
xlat
gs
repnz
mov
jmp
cmp
shl
or
icebp
pop
cmp
movs
inc
aad
and
popf
add
call
ret
fsub
adc
rcl
cmp
cmps
jno
cmc
popa
cmp
ror
movs
sub
test
ret
inc
push
sahf
(bad)
adc
cmp
jg
and
mov
push
jle
mov
inc
mov
pop
or
push
dec
pop
arpl
sub
add
jp
mov
sbb
out
push
push
in
clc
mov
add
or
add
test
repnz
out
adc
out
add
push
aas
test
push
hlt
mov
sbb
(bad)
jae
xor
dec
inc
into
out
xor
imul
mov
pop
sub
fdivp
(bad)
mov
pop
lahf
jns
movs
ins
jge
xchg
arpl
js
cmps
ds
arpl
and
dec
pop
mov
clc
test
inc
in
xchg
or
mov
pop
mov
(bad)
daa
cdq
mov
ds
inc
push
es
test
mov
fwait
jae
int3
test
inc
es
mov
xor
push
stos
aaa
lahf
mov
sbb
stos
jl
and
mov
adc
jae
pop
mov
(bad)
push
mov
repnz
add
xor
fadd
jns
jmp
mov
test
mov
mov
pop
or
dec
xchg
adc
push
xor
sbb
push
xor
sti
mov
cwde
arpl
repnz
pop
ficomp
in
imul
push
add
jo
adc
fmul
dec
iret
or
inc
cmp
dec
adc
lods
mov
fwait
icebp
imul
add
xchg
sub
pop
pop
pop
pop
cdq
sub
xchg
push
sub
test
shr
(bad)
jmp
mov
or
aad
dec
(bad)
mov
mov
push
xor
add
pushf
mov
mov
inc
outs
test
(bad)
ins
add
or
pop
(bad)
dec
rcl
mov
cmp
sbb
push
fidiv
inc
xor
das
inc
jno
jns
fisttp
cmp
imul
mov
out
and
ja
stos
jo
mov
cmp
cwde
stos
lock
addr16
pop
dec
jns
and
sar
push
inc
pop
ret
mov
das
mov
das
adc
or
neg
std
push
int3
add
stos
xchg
es
movs
add
int3
mov
mov
push
lock
sbb
mov
xchg
push
pop
dec
mov
fsub
inc
(bad)
jne
mov
sub
cmc
test
dec
into
and
jp
inc
dec
js
jo
mov
or
cmp
dec
retf
sub
mov
add
lods
pushf
mov
jmp
adc
test
imul
addr16
dec
and
ret
sbb
push
(bad)
xchg
jg
iret
dec
sub
cmp
sbb
mov
pop
push
cmp
call
pop
adc
dec
and
xlat
pop
xchg
call
inc
cmp
repnz
fdivr
and
stos
xchg
xor
or
popf
ins
mov
adc
sub
out
(bad)
mul
fsubr
add
inc
sbb
ja
sbb
xor
js
add
movs
adc
pop
out
out
mov
mov
jns
push
pop
imul
push
add
push
dec
int3
sbb
call
int
jo
rol
ins
iretw
adc
adc
scas
cmp
cmp
movs
fs
adc
mov
push
imul
pop
adc
inc
adc
pop
dec
cmps
data16
push
xchg
cld
hlt
push
adc
jp
push
in
push
pop
xor
and
cli
or
and
fcom
repz
add
pop
aaa
pop
cmps
fidivr
pop
sub
pop
push
sbb
xchg
mov
sahf
out
dec
outs
scas
icebp
sub
pop
cmp
jnp
dec
(bad)
cmp
dec
stos
movs
outs
xchg
addr16
ror
pushf
sub
dec
sbb
adc
repz
aas
fistp
stos
jb
mov
(bad)
jmp
test
imul
mov
aas
add
hlt
dec
mov
scas
xor
fmul
sbb
cmp
out
inc
repnz
sub
adc
fidivr
xor
mov
and
inc
les
cmp
adc
int
ror
popf
cdq
sbb
mov
dec
cdq
jg
mov
adc
dec
jbe
call
pop
int3
cs
shr
push
dec
push
mov
push
gs
and
fisttp
mov
inc
push
push
dec
add
data16
and
sbb
add
repnz
mov
push
je
push
in
fld
xor
mov
cmp
ja
test
inc
sbb
cdq
adc
xor
retf
mov
pop
lods
sub
xchg
cmp
(bad)
in
sub
jmp
popa
xor
xchg
retf
xchg
bound
xchg
stos
sub
sbb
and
adc
cmps
sbb
cmp
xchg
pop
jne
or
jne
pop
and
pop
cmps
enter
push
jg
ror
mov
xor
add
cmc
hlt
test
js
push
std
mov
test
fs
and
and
clc
(bad)
pop
sbb
xor
aad
fadd
pop
adc
cmp
les
mov
push
mov
jg
cmp
push
xlat
push
pop
and
push
pop
mov
ins
mov
out
sbb
div
mov
popa
jle
xchg
jl
cwde
inc
add
ficomp
push
adc
cwde
pop
fwait
mov
shl
xor
jle
test
cmps
mov
outs
push
dec
cmp
xor
inc
or
sbb
fbld
(bad)
pop
loopne
sub
dec
and
sar
jae
lahf
fisub
or
mul
sub
test
mov
js
lock
mov
das
adc
in
jo
mov
xor
sti
adc
inc
pusha
sbb
inc
retf
jns
push
sub
jnp
xor
loop
ss
mov
gs
mov
jns
pop
mov
jbe
in
adc
jg
cmp
pusha
sahf
adc
je
push
mov
or
cld
mov
ret
shl
retf
ret
jp
(bad)
out
xor
mov
add
dec
xor
sub
xchg
icebp
push
repz
repz
std
outs
outs
cs
mov
fyl2x
fist
mov
and
loop
push
lods
fcom
mov
aas
ror
mov
stc
cmp
jb
push
push
mov
leave
inc
stos
cmps
push
inc
pushf
in
sar
(bad)
xor
jno
ins
cwde
ret
jno
loope
ins
mov
cmp
(bad)
pop
push
push
das
loop
sbb
xor
pop
ins
fisttp
in
sbb
(bad)
mov
cmp
pop
es
xor
dec
test
shr
xchg
scas
push
ror
dec
jb
scas
outs
movs
adc
add
and
inc
xor
xchg
fisub
mov
iret
mov
sub
push
and
fwait
pop
mov
sub
(bad)
hlt
loopne
test
enter
pop
cdq
push
js
cli
retf
and
mov
cld
fmul
mov
mov
xor
lods
adc
and
iret
mov
pop
in
sub
push
xchg
addr16
bound
dec
jp
wrmsr
sahf
pop
pushf
scas
lahf
adc
mov
bound
scas
sbb
sbb
lds
push
xor
fs
dec
std
pop
popa
cwde
test
cmp
add
pop
dec
xor
ss
jo
jb
in
mov
inc
into
dec
int3
sub
or
sti
xchg
sbb
(bad)
out
mov
cdq
inc
out
movntps
iret
out
imul
aas
or
dec
test
adc
stos
fxam
xchg
xchg
xor
add
and
jl
stos
pop
outs
pop
iret
xlat
jno
add
int3
inc
jne
scas
mov
lods
in
and
xor
rcr
ds
out
out
enter
dec
and
sbb
adc
ret
in
jecxz
or
test
stc
pop
lods
shl
add
(bad)
jp
std
sbb
inc
sbb
fld
fstp
dec
addr16
movs
jo
bound
int
mov
lods
mov
int
fdivr
sub
outs
cmp
rol
fdiv
cwde
sbb
pop
or
cli
shrd
and
push
movs
adc
inc
int
mov
outs
pop
cwde
aad
out
aaa
and
cwde
and
add
sar
addr16
fcomp
sar
ficomp
adc
bound
mov
scas
sub
xchg
in
test
aam
psrlw
sub
in
lea
inc
test
jns
jns
(bad)
cmps
xchg
hlt
inc
pop
pop
jmp
pop
out
rcr
mov
lahf
fs
cmps
in
rol
in
fimul
stos
and
sub
shr
mov
adc
mov
xor
inc
out
sar
jne
push
or
addr16
mov
ins
dec
inc
sahf
mov
pop
ret
ffree
in
xchg
push
clc
dec
mov
sti
(bad)
jecxz
mov
mov
dec
ror
idiv
(bad)
(bad)
mov
inc
pop
loope
outs
nop
cld
jp
inc
mov
pop
pushf
(bad)
fcom
imul
(bad)
ss
lea
shl
jge
push
mov
mov
call
ficomp
xor
push
and
js
pop
pop
xor
add
jp
push
inc
pop
adc
pop
push
sahf
dec
stos
shl
adc
pop
push
std
in
sbb
and
scas
mov
in
sub
aam
cmps
fidiv
pop
push
inc
pushf
xchg
xchg
dec
pop
add
cld
push
xor
add
std
and
push
mov
jno
or
imul
push
xor
shl
bound
xor
mov
ins
sar
adc
xchg
mov
mov
stc
retf
xchg
popa
or
adc
lds
pop
pop
repnz
data16
arpl
dec
fs
and
pop
lahf
fldenv
mov
fistp
jle
inc
(bad)
ss
lods
push
sub
pushf
pop
adc
(bad)
popa
mov
stc
and
ror
jns
cmp
pop
int3
hlt
jmp
cdq
xchg
nop
jns
and
cmps
sti
and
or
imul
or
test
retf
adc
imul
xor
sub
repz
add
inc
ja
ret
add
inc
inc
in
cmps
test
and
cli
pop
jmp
mov
jae
addr16
adc
xchg
rol
mov
push
imul
adc
lea
pop
retf
scas
sbb
push
jo
pushf
push
movs
jae
stc
pop
push
mov
cld
cwde
ins
mov
ins
xor
adc
scas
pop
jp
dec
inc
hlt
sti
mov
adc
fwait
in
push
or
mov
cli
or
popa
lods
ds
add
les
std
cmp
js
in
sub
ficom
mov
leave
out
pop
(bad)
scas
inc
je
cmp
jb
inc
dec
jmp
daa
inc
shl
sbb
or
sbb
mov
pushf
jl
xchg
pop
adc
sbb
jmp
je
adc
ror
push
cmp
in
movs
sub
mov
push
jle
jns
pop
dec
mov
rcr
jg
cmp
sar
stos
sbb
push
les
es
test
add
cli
mov
scas
xchg
mov
mov
inc
ror
xlat
outs
inc
and
loope
je
push
movs
xchg
mov
cs
repz
push
cmp
hlt
cmp
inc
iret
mov
sub
or
dec
fs
test
and
pop
jmp
retf
rol
push
sub
cmp
mov
ins
push
and
mov
js
mov
pop
and
iret
push
call
push
mov
adc
jo
sub
inc
jl
addr16
mov
fs
inc
loopne
stos
bound
mov
pop
jmp
mov
xor
xchg
pop
retf
adc
mov
fs
dec
add
push
mov
mov
cmp
mov
dec
pop
mov
inc
fadd
out
lock
out
or
add
lods
mov
push
lods
dec
aas
mov
out
mov
add
add
mov
in
cwde
rcr
lahf
stos
mov
jge
sub
out
jb
mov
and
pop
sub
fiadd
into
(bad)
js
neg
movs
popf
cmp
mov
in
(bad)
push
je
arpl
ins
scas
cmp
addr16
out
ficomp
sub
xchg
mov
sub
mov
xor
js
retf
out
rol
or
js
(bad)
push
repnz
push
add
inc
cmp
mov
stc
arpl
sbb
or
pushf
sub
retf
cld
aam
xchg
adc
aad
cwde
sbb
sub
adc
jns
into
pop
cmps
mov
(bad)
lahf
and
sbb
add
jns
pop
dec
jae
add
jbe
jp
(bad)
stc
xor
inc
daa
scas
adc
jmp
xchg
xlat
push
push
cs
(bad)
xor
add
mov
dec
out
sub
push
and
sub
mov
jno
mov
push
xchg
xor
add
pop
jnp
push
jbe
imul
mov
lahf
ins
out
arpl
adc
mov
fwait
push
and
in
cmp
pop
pop
cmp
xchg
xchg
test
sbb
fsubr
xchg
cmp
dec
in
or
aad
push
lahf
call
outs
cmp
inc
mov
xchg
push
aaa
dec
xchg
rcr
addr16
cmp
xlat
inc
loop
ins
imul
loop
aad
aad
cwde
ds
movs
(bad)
call
push
jl
(bad)
loop
pop
je
push
mov
cmp
mov
pusha
sbb
lds
popa
les
stos
xlat
in
mov
pop
mov
shl
scas
mov
and
jecxz
(bad)
stos
ret
je
and
outs
scas
icebp
les
gs
(bad)
aam
mov
xchg
gs
aaa
dec
lds
pop
in
out
rcr
sbb
mov
ins
loope
sub
in
cmps
out
mov
and
stos
nop
enter
fwait
test
fnsave
(bad)
mov
sbb
dec
lea
retf
xor
inc
test
ret
cmp
daa
std
in
push
dec
popa
xor
adc
jecxz
mov
fs
sar
je
jae
(bad)
test
cwde
pop
pop
mov
mov
mov
shl
or
xchg
loop
ss
jns
pop
mov
std
call
inc
adc
mov
in
push
cmp
cmp
fld
daa
outs
hlt
cld
xor
(bad)
(bad)
fmul
in
sbb
hlt
xchg
xlat
pusha
loope
rcr
mov
jns
cmps
mov
rcr
scas
dec
call
sub
rcl
scas
mov
inc
lods
sahf
bound
jns
pushf
(bad)
leave
stos
mov
mov
pusha
pusha
aas
int3
aad
jo
fs
cs
outs
xchg
mov
push
ds
jbe
jecxz
jecxz
arpl
pushf
push
mov
test
data16
lods
sti
loop
dec
mov
and
icebp
movs
fwait
adc
fld
mov
pushf
jg
add
sub
and
jb
aaa
mov
mov
ins
inc
xor
jge
fsub
movs
(bad)
jl
adc
fs
inc
mov
ins
fistp
or
pop
(bad)
mov
pushf
push
fst
fadd
test
out
sar
fwait
pusha
scas
imul
add
out
sub
or
xor
addr16
rcr
cmp
pusha
jmp
(bad)
push
scas
mov
addr16
sub
cmp
sbb
dec
dec
xor
pop
movs
outs
loop
or
test
or
mov
mov
sar
jge
out
iret
and
or
mov
fnsave
fwait
lods
mov
xor
cmps
call
(bad)
pop
in
push
mov
pop
js
dec
les
pop
sbb
(bad)
and
mov
ins
rcr
sub
or
xchg
outs
je
sub
lods
cmp
add
daa
mov
mov
std
arpl
hlt
cmp
mov
inc
jmp
or
arpl
push
inc
loopne
push
(bad)
into
mov
cli
jbe
(bad)
div
rcr
ficom
lahf
(bad)
ficom
call
leave
rcl
adc
cmp
mov
push
out
adc
fist
repz
out
bound
add
rcl
mov
lahf
and
push
repnz
cmps
sbb
mov
das
push
pop
xchg
dec
cmp
(bad)
ins
mov
add
cmp
mov
fisttp
je
arpl
out
ret
call
out
jnp
cwde
push
lock
lahf
jbe
push
call
sar
shl
add
imul
aaa
mov
ins
out
(bad)
sub
mov
das
hlt
and
xor
(bad)
das
jmp
in
xchg
dec
pop
scas
aas
sub
jecxz
mov
cmps
iret
lahf
and
fchs
push
ds
es
xchg
ret
imul
ds
ror
pop
sbb
stos
std
call
sub
aas
push
cmc
xchg
push
jl
js
pop
cmp
(bad)
jo
mov
push
test
mov
xchg
int3
xchg
push
test
or
sbb
idiv
xor
jecxz
mov
xchg
clc
mov
adc
fidivr
sbb
scas
xor
or
dec
mov
jmp
cli
cmp
das
test
jle
mov
stos
in
xchg
fdivr
push
imul
shl
and
pop
inc
cli
adc
add
xchg
xor
sub
adc
mov
xor
fs
bound
loope
xor
cmp
es
sub
not
int
stos
inc
cs
jmp
not
pop
push
mov
push
icebp
fsub
lock
into
xor
sahf
or
cmp
inc
cwde
dec
inc
(bad)
cdq
ins
inc
mov
dec
jmp
xor
dec
(bad)
mov
dec
sbb
cwde
sbb
add
fisttp
jbe
add
mov
inc
push
sub
adc
lds
loope
xchg
sbb
mov
(bad)
stos
inc
add
xchg
pop
push
ret
dec
mov
push
test
mov
xor
push
mov
jns
sbb
mov
jecxz
push
scas
daa
push
mov
mov
aam
(bad)
mov
jae
aad
(bad)
aad
test
jge
jmp
dec
cmp
jnp
(bad)
xor
mov
mov
sub
out
stos
or
ror
jge
xchg
ss
(bad)
arpl
mov
adc
mov
jae
adc
cmc
cmp
inc
imul
jle
adc
xchg
test
xchg
dec
movs
and
ror
or
push
(bad)
sti
xchg
pop
stos
jo
pop
shl
cmc
in
mov
xchg
push
imul
pop
rol
out
or
mov
cmp
mov
and
xor
clts
or
cmps
hlt
mov
xor
mov
xor
xor
add
movs
(bad)
in
call
mov
sub
or
int
out
xchg
test
hlt
mov
aas
sub
push
add
pop
xor
or
mov
xchg
dec
lods
adc
fidivr
lds
and
fadd
imul
dec
test
out
retf
dec
and
push
cwde
aas
xor
in
repnz
cmp
sahf
retf
outs
push
xchg
rol
push
ret
inc
jecxz
push
mov
movs
enter
mov
enter
nop
jge
fdivr
sar
retf
sbb
dec
retf
into
cmps
es
mov
mov
mov
mov
adc
lahf
repz
mov
jmp
lods
(bad)
pop
es
test
xchg
fwait
call
push
es
mov
das
mov
in
stc
lods
adc
pushf
mov
fwait
adc
and
pop
fst
pop
adc
xchg
pop
xchg
pushf
jbe
adc
inc
adc
retf
stos
inc
xor
test
adc
inc
out
fmul
mov
xor
in
out
pusha
imul
mov
out
out
xor
cld
or
cmp
dec
lods
call
mov
inc
add
sahf
inc
out
dec
cld
call
dec
fucomi
(bad)
scas
dec
xor
sub
shr
lds
mov
adc
xor
xchg
sbb
in
mov
dec
aam
dec
jge
sar
ss
add
test
jne
xchg
addr16
sahf
adc
(bad)
cwde
jmp
push
jle
fstp
dec
or
xchg
test
test
les
out
lea
xor
ds
mov
fucomp
inc
(bad)
sar
cmps
push
test
sub
fnstcw
add
idiv
push
xor
mov
(bad)
jo
(bad)
mov
pop
inc
cmp
add
dec
cli
add
xor
mov
nop
mov
fwait
nop
pop
add
mov
mov
(bad)
mov
movs
fidiv
jmp
or
xor
mov
js
jnp
pop
push
(bad)
clc
sbb
dec
cdq
mov
push
sbb
sbb
cdq
rol
sbb
call
movs
inc
push
adc
fild
sub
repz
dec
jb
cli
div
push
and
push
fidiv
aam
rol
imul
adc
shl
jecxz
loope
sub
in
xor
xchg
rol
scas
mov
emms
push
adc
push
inc
inc
adc
in
pop
sub
mov
es
add
mov
lock
add
pop
rcl
push
iret
mov
outs
inc
mov
pop
add
and
mov
adc
or
and
dec
retf
out
icebp
stos
loopne
in
mov
ret
jno
(bad)
mov
sbb
dec
pop
xor
bswap
mov
les
adc
out
mov
and
xchg
xchg
fidivr
push
or
jnp
cmc
mov
xor
and
call
add
push
mov
jp
cmp
movs
lods
in
cmps
mov
mov
or
outs
mov
test
adc
pusha
sbb
pop
xor
mov
xor
cmp
fmul
inc
push
std
sub
shl
(bad)
cmp
(bad)
cmp
push
rcl
mov
sub
scas
outs
inc
and
lahf
jl
adc
cmp
adc
ja
xor
jb
fild
xor
pop
outs
add
xchg
mov
jmp
sub
shr
sbb
cmc
stos
(bad)
adc
mov
inc
cmps
fwait
cmp
mov
sahf
out
pop
daa
mov
cli
rcr
mov
add
stos
mov
sbb
out
mov
mov
ins
enter
jnp
and
popf
cmps
push
stos
fnsave
dec
cmps
xor
xor
into
and
repz
sub
ins
arpl
xor
bnd
cmps
and
lods
jns
nop
clc
mov
sbb
fcomp
test
call
(bad)
nop
xchg
mov
retf
push
ret
push
out
dec
add
mov
(bad)
js
jo
fimul
cmp
inc
sbb
(bad)
xlat
cli
movs
cmp
shl
cmp
cmp
cld
jns
jno
loopne
add
pop
fdiv
pop
aam
mov
test
jne
packsswb
int3
mov
jb
adc
pop
ins
dec
js
sahf
std
adc
mov
dec
das
mov
aaa
out
and
inc
mov
and
mov
fwait
mov
xchg
cmp
ds
in
jmp
push
retf
mov
imul
add
xchg
dec
or
jo
sub
call
aad
out
xchg
pop
sbb
push
adc
(bad)
outs
dec
pop
jns
jge
push
push
loope
cwde
enter
cmps
mov
cli
arpl
(bad)
aas
xor
push
in
int
test
nop
add
pop
(bad)
sub
sbb
shr
icebp
pop
scas
aad
mov
dec
bound
sub
or
in
shl
or
gs
dec
data16
push
sbb
jmp
loop
in
int
aas
push
not
stos
test
inc
xchg
dec
or
movs
sbb
loope
dec
retf
mov
adc
push
out
xchg
cmp
and
ins
loop
pop
scas
pop
adc
adc
mov
sub
(bad)
xor
cmc
ja
jp
aam
imul
sbb
test
jle
cmps
xor
dec
mov
out
cwde
sub
ds
out
ja
mov
sbb
push
ret
in
repz
icebp
sub
xchg
shr
sub
xchg
clc
aas
jnp
sub
add
sbb
mov
pop
mov
add
popf
sar
mov
fisubr
sti
mov
ins
mov
cdq
cmp
pop
xchg
cmps
mov
pushf
in
gs
jg
stos
in
pop
xchg
pop
jl
out
cmps
sub
jns
and
movs
imul
adc
aaa
xlat
add
ret
stos
stos
hlt
(bad)
mov
scas
int3
pop
mov
in
fimul
inc
xchg
mov
test
jle
jo
stos
ins
add
sub
mov
push
push
jns
adc
mov
jo
inc
jl
push
xchg
test
and
mov
mov
mov
sbb
dec
mov
test
inc
fmul
je
clc
pop
iret
inc
popf
jg
and
cmps
jmp
push
(bad)
jb
cmps
mov
test
xchg
arpl
mov
xchg
cmps
xchg
(bad)
mov
sahf
xor
sub
jge
scas
jbe
ins
imul
cmps
push
add
xor
(bad)
xchg
and
dec
sub
nop
popa
inc
out
sub
stos
es
adc
js
retf
test
pop
jge
data16
and
fimul
push
ss
jecxz
movs
adc
cmp
dec
test
in
movs
(bad)
sub
sbb
jae
mov
nop
sti
mov
mov
mov
push
cmp
rcr
mov
cli
inc
jb
in
ss
out
push
outs
xor
sbb
sub
ins
mov
lods
scas
mov
mov
aas
push
(bad)
stc
adc
pushf
cmp
jne
test
jo
repnz
cwde
and
add
sti
adc
push
(bad)
adc
mov
push
xchg
sbb
jo
dec
test
xor
aam
sahf
jg
mov
or
into
push
stc
and
mov
and
jnp
xchg
dec
xchg
fiadd
test
xchg
nop
js
rcl
jmp
leave
in
hlt
jl
rol
sahf
dec
pop
movs
pop
jecxz
int3
xchg
hlt
mov
cmp
cmp
jl
and
mov
pop
sub
mov
in
adc
sub
mov
pop
das
xor
je
fwait
add
int3
pop
cmp
sub
rcr
(bad)
pushf
enter
(bad)
fild
cdq
mov
scas
fistp
and
loope
xor
add
cli
sub
cwde
icebp
sahf
jne
sbb
pop
sahf
pop
mov
pop
std
inc
lahf
sub
dec
pop
sub
jp
push
mov
fabs
sbb
jbe
repnz
push
inc
xchg
pop
xchg
add
cli
adc
(bad)
mov
xchg
fst
leave
sbb
cmp
outs
ficomp
xchg
xlat
hlt
mov
cs
outs
sbb
sbb
out
mov
in
mov
test
inc
pop
dec
hlt
or
shr
add
out
xchg
pop
test
fwait
clc
jmp
pop
nop
lea
mov
ins
mov
and
adc
dec
test
shl
sbb
sbb
jo
and
mov
xchg
xchg
data16
lahf
ins
sbb
sbb
jae
rep
jmp
ja
std
inc
sbb
jmp
pop
retf
clc
mov
jmp
cmp
mov
xadd
ror
in
sub
in
or
js
pop
and
loope
outs
mov
mov
jle
push
xchg
loop
adc
cmp
js
xchg
jae
jge
mov
pop
inc
jae
les
aaa
xor
retf
and
xchg
shl
daa
xchg
xchg
enter
enter
mov
push
hlt
lods
push
jge
pop
daa
pushf
mov
sub
fisubr
sub
loop
dec
neg
out
xor
and
stos
mov
aas
scas
cmp
mov
shr
add
add
dec
fcom
(bad)
aam
xchg
pop
push
aam
sar
cmp
xor
popf
sahf
test
daa
mov
xor
jecxz
icebp
movs
in
push
mov
repz
scas
call
push
mov
add
jmp
or
leave
in
mov
adc
loopne
retf
mov
push
xor
cdq
(bad)
dec
add
push
shl
loopne
mov
inc
popa
pop
aad
xor
iret
jmp
lds
mov
(bad)
ja
or
xchg
loopne
xor
lds
fist
dec
scas
mov
call
sahf
add
xor
inc
pop
jl
test
add
push
dec
mov
sbb
imul
mov
sub
mov
mov
mov
jge
jne
sub
out
in
push
pop
adc
bound
cmp
mov
outs
out
scas
sahf
push
(bad)
outs
(bad)
xchg
mov
cmc
inc
inc
fisttp
dec
add
push
repnz
hlt
(bad)
fsubr
and
retf
stos
push
pop
cwde
mov
cmpxchg
xchg
inc
arpl
je
xor
mov
cli
cmps
call
fadd
lahf
fadd
stc
not
mov
cmps
stos
mov
aad
clc
mov
fsub
mov
test
ins
adc
aam
sub
add
fdivr
and
sub
out
addr16
xchg
js
cmc
adc
fst
test
aam
jge
hlt
mov
lods
and
mov
pop
repnz
xchg
ins
arpl
push
add
push
pop
and
jp
sbb
bound
call
fist
dec
cmp
aaa
jae
xor
iret
mov
lahf
jge
add
into
jmp
loopne
or
dec
(bad)
iret
retf
mul
ror
lods
repz
or
sar
inc
xor
(bad)
rcl
jle
lds
cld
xor
sub
in
out
not
stc
mov
xchg
xor
pop
lds
inc
xchg
xor
mov
stos
stos
xor
std
ins
mov
mov
sbb
mov
pop
setne
inc
fisttp
(bad)
(bad)
loop
push
adc
sbb
pusha
adc
jle
cmp
mov
pop
push
(bad)
icebp
sub
mov
mov
fcmovu
push
dec
pop
and
dec
xchg
push
adc
push
(bad)
sbb
xchg
dec
and
xor
xchg
adc
sub
shl
push
xchg
push
and
icebp
jmp
xor
adc
movs
frstor
xlat
and
push
loope
aas
pop
out
add
test
mov
jae
cmc
adc
js
cmps
or
pop
loop
dec
adc
test
fcomi
lds
repnz
je
cmp
xor
outs
and
push
mov
xor
mov
shl
aas
sbb
sbb
movs
ss
pop
loopne
ror
mov
fld
xor
jge
pop
arpl
push
ds
adc
daa
jl
adc
adc
daa
lds
add
jecxz
cwde
dec
outs
xchg
psubd
cmp
dec
xchg
xchg
push
xlat
xor
ins
inc
and
xlat
imul
pop
pusha
mov
cmp
sbb
sar
out
out
ret
mov
movs
or
dec
out
sub
sbb
mov
loopne
mov
in
dec
icebp
sbb
add
ins
and
sub
xor
scas
nop
(bad)
cld
fnsave
sbb
not
mov
and
and
sbb
pop
stos
cmc
or
xor
mov
scas
ins
test
push
dec
inc
test
jg
jo
cld
add
jle
dec
daa
ins
sbb
pop
pop
jmp
ret
mov
xchg
pop
cmps
pop
cmps
movs
or
and
fdivr
dec
mov
ret
ins
jns
std
sahf
adc
xchg
pop
iret
imul
jge
mov
pop
xor
add
stos
call
and
sar
icebp
aam
test
pop
clc
push
shl
mov
imul
loope
fbstp
xchg
pop
or
and
imul
fs
call
mov
mov
adc
add
call
neg
pusha
dec
dec
ins
push
lds
cmp
fsub
sub
retf
sbb
loop
xor
lahf
or
in
data16
lods
push
js
jnp
cmp
jno
push
aad
push
adc
push
inc
repnz
test
(bad)
or
cmp
pop
add
cmp
sub
lock
and
sbb
or
mov
repnz
out
mov
fwait
and
inc
xlat
cld
mov
xor
pop
data16
xchg
loop
cwde
and
xor
repz
inc
retf
(bad)
push
and
movs
jne
fdivr
adc
cwde
ins
push
or
les
in
dec
(bad)
out
cmp
pop
dec
(bad)
lds
mov
leave
ja
(bad)
pop
out
mov
sbb
mov
shl
sar
mov
push
pop
hlt
js
lods
push
and
cmp
push
xchg
add
mov
enter
xchg
mov
mov
mov
(bad)
jecxz
jbe
pop
dec
ret
or
xchg
stc
aad
ins
pop
mov
xchg
adc
mov
jbe
fs
and
pop
call
loopne
jne
or
lock
jp
add
imul
or
mov
jle
inc
je
lea
sbb
jno
xor
jmp
mov
mov
popf
mov
and
cmps
pop
xor
mov
jbe
cmp
out
and
pushf
in
int3
neg
or
adc
dec
mov
push
repnz
inc
fwait
dec
inc
test
push
jnp
jl
pop
aam
rcl
fbld
leave
add
out
xchg
push
sub
push
pop
adc
lahf
popf
mov
mov
inc
bound
xor
aaa
pop
mov
lock
inc
jle
ds
mov
shl
jb
jb
push
(bad)
adc
js
gs
das
cmp
ins
sub
xor
test
xchg
retf
jne
xor
pop
or
push
(bad)
lahf
mov
and
push
popf
stos
cmp
in
cmc
push
dec
add
icebp
stos
js
popa
stos
lock
pop
xor
nop
je
(bad)
pop
adc
and
fisttp
mov
sub
push
dec
es
add
or
(bad)
dec
dec
mov
arpl
mov
xchg
in
dec
xor
pop
(bad)
loop
pop
jmp
int3
fwait
lds
lods
sbb
fimul
dec
xor
pop
jmp
loopne
mov
psubsw
xchg
dec
stos
add
popf
ss
xchg
or
outs
movs
(bad)
out
pop
mov
or
push
adc
ret
ins
sub
inc
jo
xor
mov
inc
aas
pop
or
not
fld1
aad
mov
mov
mov
dec
add
fisub
repnz
mov
mov
mov
or
sbb
xchg
lahf
cli
jne
std
cmp
sub
das
dec
inc
mov
mov
rcl
mov
ja
popf
bound
push
cmps
cli
aad
into
cmp
push
dec
daa
pop
test
sub
dec
shl
sbb
mov
xlat
je
test
add
xchg
sar
test
outs
es
push
rcl
mov
or
out
out
inc
sahf
xchg
cmc
scas
ja
dec
in
pop
cmps
repnz
jns
ins
clc
loop
push
pop
push
mov
adc
iret
cdq
inc
into
mov
dec
ror
dec
adc
stc
rol
dec
inc
add
jno
imul
push
icebp
xor
stos
pusha
loop
xlat
outs
pop
cld
jo
arpl
std
or
add
or
mov
pop
pop
cmp
add
sub
ret
inc
jne
dec
pop
push
sub
popf
mov
ja
scas
xor
dec
add
pmulhuw
cli
mov
adc
sbb
in
adc
mov
mov
out
xor
aaa
dec
or
stos
adc
test
pop
xchg
xchg
mov
arpl
mov
repnz
sbb
fist
jmp
popa
sub
lods
xchg
or
jae
scas
lds
xchg
jecxz
sub
stos
xchg
pushf
inc
ins
mov
dec
outs
lods
pop
cmp
mov
mov
mov
retf
inc
pusha
arpl
aas
les
shl
xchg
jns
stos
dec
add
inc
and
leave
dec
push
mov
cmp
sbb
outs
add
(bad)
int
mov
das
jnp
push
cld
adc
jecxz
cmp
(bad)
call
jl
sar
cmp
adc
mov
sbb
and
sahf
dec
imul
retf
in
or
and
jmp
mov
pop
sar
xor
pop
xchg
ret
jp
call
mov
ins
in
and
pop
iret
xlat
int
call
push
or
shr
or
sub
xor
movs
pop
fwait
sbb
in
mov
and
dec
int
and
mov
add
or
cmp
xchg
outs
les
xor
out
or
icebp
scas
imul
int3
push
das
scas
jmp
inc
pop
aad
or
icebp
ret
inc
pop
xor
and
pop
dec
enter
jns
jl
xchg
out
cdq
loop
push
std
retf
pop
xor
and
push
mov
fidivr
aaa
(bad)
jmp
cmc
vcvtss2sd
jb
rol
or
stos
cmp
or
mov
sub
mov
(bad)
in
ss
push
inc
pop
movs
mov
mov
movs
adc
outs
fsub
mov
into
xchg
inc
fstp
in
push
lock
inc
mov
movs
shl
cmp
call
xor
clc
outs
mov
push
or
out
inc
cld
stos
xlat
mov
mov
repz
sub
lock
test
sub
(bad)
rep
mov
jbe
xlat
popf
fwait
jns
idiv
sub
xchg
mov
cs
(bad)
gs
sbb
cmp
je
sub
out
mov
call
sbb
mov
pop
sub
btr
in
cmp
test
stc
test
retf
lock
shr
movs
mov
hlt
fldcw
cs
mov
and
or
(bad)
jno
mov
iret
(bad)
ja
pop
sub
push
pop
push
ja
push
add
(bad)
retf
jp
repnz
test
or
repnz
aaa
sahf
ins
bnd
push
pop
xor
sar
fsub
sub
xchg
mov
dec
mov
test
sub
mov
cld
std
fld
outs
jnp
xchg
cwde
cdq
fmul
jl
mov
pop
jno
repz
mov
movs
repz
push
(bad)
sahf
dec
aam
inc
mov
nop
xchg
(bad)
std
fst
ret
cmc
and
scas
das
pop
mov
adc
pop
out
xchg
sbb
inc
cld
mov
pusha
sti
cli
jl
cmp
cdq
lea
(bad)
mov
xchg
xchg
jno
not
lea
fidiv
retf
loop
mov
add
je
jne
stos
ret
arpl
daa
je
jecxz
pop
sub
sub
push
mov
sub
push
test
in
cmp
sbb
xchg
mov
fxch
icebp
add
inc
das
or
xchg
pop
jl
sbb
dec
xor
shl
pop
inc
repz
or
sti
cmp
sbb
int
dec
arpl
es
pop
cdq
push
mov
mov
daa
jns
in
mov
cli
inc
outs
jb
js
mov
popa
inc
hlt
aas
or
sahf
sub
dec
jmp
mov
sub
arpl
in
mov
mov
mov
loop
loop
xchg
push
xor
or
in
sbb
push
and
rol
in
xchg
outs
sbb
in
adc
out
sub
cmp
inc
xchg
add
mov
ret
imul
or
scas
or
adc
adc
and
or
inc
cli
pop
xor
fs
lock
das
retf
lock
xchg
mov
pusha
test
int3
aaa
cmp
xchg
scas
jmp
pop
and
lods
(bad)
fist
std
outs
pop
sbb
imul
jnp
adc
lods
movs
call
inc
jp
movs
ja
ja
repnz
adc
lods
jmp
js
in
xchg
dec
stc
movs
mov
push
pop
jmp
dec
mov
xor
push
(bad)
iret
(bad)
ins
ins
xor
adc
(bad)
cmps
imul
cdq
pop
and
(bad)
das
mov
inc
popa
mov
stos
and
jnp
xor
pop
cmp
and
jecxz
jle
inc
add
add
xchg
vmovntps
or
das
test
(bad)
inc
lahf
retf
fnstsw
jne
js
mov
pop
daa
push
lock
mov
mov
push
or
push
retf
sub
scas
fst
mov
mov
ds
and
xchg
push
data16
adc
jge
cmp
dec
mov
aaa
dec
jl
add
jge
xchg
and
sbb
loope
or
outs
mov
outs
jns
dec
aam
cmps
push
stos
cli
cli
cli
xchg
(bad)
cdq
in
mov
xor
pushf
fbld
cmc
dec
pop
xchg
repnz
mov
xchg
retf
cmp
not
xchg
cmp
enter
jne
test
and
or
sbb
lds
in
push
inc
mov
mov
imul
dec
cmp
aas
sahf
rcr
adc
adc
and
or
(bad)
push
pcmpeqw
inc
das
sub
rcr
sub
cmp
xchg
test
dec
(bad)
mov
test
and
int3
xor
out
or
out
stc
(bad)
mov
cmp
mov
xor
pop
(bad)
loopne
mov
mov
inc
add
arpl
push
arpl
in
sbb
cld
data16
loope
cwde
mov
ss
and
xor
ret
aam
cmp
mov
fdivr
pop
popa
fisttp
and
sub
lods
movs
push
xor
adc
xchg
and
cmc
stc
jae
jecxz
int
push
nop
bound
fnstsw
addr16
jb
test
jae
xchg
addr16
les
loope
jecxz
clc
nop
fistp
sub
and
not
(bad)
(bad)
jmp
xchg
xor
dec
pop
repz
fcomp
hlt
inc
mov
or
les
mov
xchg
mov
dec
stos
out
gs
fs
sbb
clc
sbb
ror
mov
and
pop
push
call
mul
aad
gs
jns
xchg
fidiv
xchg
dec
and
int3
sti
inc
lods
pop
jae
push
mov
sti
(bad)
dec
lds
cmp
cmc
lahf
xor
mov
fist
push
loop
out
pusha
xor
std
jge
(bad)
and
cmp
dec
ds
stc
xchg
loop
or
push
stos
dec
fidiv
pop
mov
jae
rcr
mov
xchg
fwait
(bad)
jge
test
jns
ins
push
xor
in
pop
mov
popa
pusha
bound
sahf
jle
cmp
mov
cmp
fidiv
repnz
rcr
and
or
jo
xchg
leave
ror
sub
stos
xor
push
sbb
lods
leave
pusha
ds
sar
jns
mov
or
mov
daa
loop
and
ja
addr16
pop
or
xor
jne
pop
aam
lds
push
leave
ins
addr16
ficomp
xchg
sub
mov
add
pushf
loopne
xchg
shl
idiv
xlat
inc
mov
cld
sbb
mov
sub
pop
stos
and
ja
test
push
popa
jne
sahf
xor
push
loope
lods
movs
scas
sbb
test
test
std
and
aaa
retf
aam
mov
mov
outs
call
mov
ss
cmp
sbb
iret
leave
or
mov
bnd
dec
add
rcr
adc
push
sti
push
xchg
fwait
not
jb
jmp
jmp
ds
mov
pop
inc
repz
scas
in
mov
popa
(bad)
pop
mov
test
sub
imul
sar
pop
pusha
push
dec
movs
fldcw
mov
(bad)
repz
cwde
inc
enter
mov
jmp
mov
icebp
scas
mov
dec
rol
das
icebp
mov
pop
out
fimul
xchg
std
cmp
bound
dec
aaa
pop
xor
inc
les
cmp
in
xor
ds
and
retf
hlt
cmps
lock
jbe
loop
lea
push
sbb
out
jne
inc
es
gs
mov
push
mov
cmp
sahf
add
jl
xchg
dec
pop
lods
mov
mov
mov
out
outs
xchg
mov
mov
xor
fcmove
mov
pop
or
sub
push
cmp
inc
js
popf
pop
or
or
cmps
outs
(bad)
iret
bound
sub
sub
jmp
mov
push
push
mov
out
cmc
inc
mov
les
dec
loopne
add
jmp
push
mov
jno
jg
lods
cmps
push
ins
arpl
cmp
mov
std
adc
(bad)
ins
dec
sub
mov
fs
sahf
pop
xchg
or
mov
adc
mov
sar
outs
movs
inc
loopne
push
mov
ret
mov
add
es
xlat
stos
mov
push
cmps
sbb
lds
fdiv
pop
lock
push
stos
inc
jg
gs
dec
and
sub
out
repnz
lods
mov
adc
repnz
shl
jle
sbb
js
sbb
adc
into
jl
mov
in
repnz
pushf
(bad)
cmp
stc
add
sub
call
test
mov
add
pop
inc
dec
fisttp
mov
(bad)
dec
xchg
mov
fisubr
inc
cmps
test
sub
and
sub
test
retf
fwait
mov
pop
(bad)
es
push
les
(bad)
into
adc
push
push
(bad)
jecxz
les
pop
fisubr
test
fist
jmp
out
push
jmp
mov
mov
and
das
rcl
sub
xor
push
mov
mov
mov
outs
sbb
(bad)
or
lds
out
pop
cmc
movs
push
inc
idiv
mov
shr
add
xchg
mov
enter
jbe
and
cmps
mov
xor
pop
in
inc
add
mov
add
ins
mov
adc
adc
pop
addr16
push
mov
(bad)
hlt
aad
xor
fld
xor
inc
repnz
fdiv
movs
push
iret
mov
or
inc
inc
mov
sub
leave
pop
jmp
rcl
cdq
stos
push
xchg
mov
dec
mov
fst
cmp
inc
mov
inc
xchg
or
cmc
jnp
repnz
sbb
imul
add
jle
out
adc
mov
xchg
fs
mov
ret
aad
sar
mov
and
adc
jae
mov
clc
jg
and
cmp
xchg
mov
out
xchg
lock
xsaves
aas
sti
lods
ins
popf
adc
sbb
jle
rcr
fsubr
cmps
adc
mov
mov
mov
jmp
call
add
mov
add
jge
add
and
dec
mov
mov
cmp
jae
push
push
push
lea
sub
outs
pop
fidiv
bound
aam
mov
inc
and
leave
mov
in
mov
push
enter
jp
sahf
dec
mov
cmp
mov
(bad)
aam
fwait
clc
(bad)
and
retf
xlat
cmp
mov
sub
lods
sub
jmp
push
lods
jecxz
xor
mov
cdq
out
dec
jnp
push
inc
fsubr
icebp
sar
dec
xor
fiadd
inc
pop
cmp
push
push
or
or
and
and
dec
test
push
add
test
xchg
lods
outs
sar
daa
fnstsw
xchg
fisub
and
test
dec
inc
jae
mov
idiv
daa
push
leave
or
lods
inc
sbb
cld
into
sbb
outs
dec
inc
dec
or
cwde
xor
mov
fisttp
les
retf
retf
into
rcr
scas
mov
fdiv
xchg
mov
adc
shr
jl
retf
inc
movs
sub
pusha
(bad)
aam
ret
mov
sbb
sbb
push
(bad)
call
aas
cmc
lea
sub
cli
repnz
add
loopne
mov
adc
mov
jbe
aad
pop
jne
cmp
pop
xor
push
aas
push
aas
dec
push
loop
test
jge
xor
into
shrd
push
into
or
outs
shr
or
fnstcw
mov
sbb
out
inc
inc
nop
scas
dec
add
retf
sub
push
sti
enter
add
xor
inc
jmp
sbb
(bad)
jmp
and
pop
xchg
cmps
mul
mov
ins
std
or
ss
add
movs
pop
jb
ins
mov
mov
cmp
mov
and
in
sbb
and
outs
push
push
push
movs
loopne
(bad)
cmp
inc
mov
stos
sbb
inc
add
sub
mov
cmp
xchg
fsubr
lea
mov
adc
icebp
(bad)
call
cmp
loope
push
xor
in
fs
repz
sub
xor
cwde
ins
xchg
cwde
mov
cmp
movs
jmp
sar
lahf
pushf
in
and
xor
mov
pop
pop
out
fistp
lock
sbb
ja
dec
cmc
or
shl
and
mov
fsub
or
mov
xlat
jbe
push
jo
push
adc
push
cmp
sbb
inc
xchg
xor
scas
ficom
sub
and
mov
xchg
out
jno
out
ret
jne
jnp
xor
mov
push
dec
adc
inc
hlt
(bad)
cmp
aas
cmp
icebp
int
cmp
movs
arpl
pop
cmc
mov
jbe
jge
add
xor
cwde
pop
js
jae
dec
jae
and
dec
sbb
mov
nop
lahf
xchg
dec
push
sub
sub
iret
sub
xlat
adc
jno
pop
cmp
jae
mov
pop
xchg
sbb
lods
hlt
pusha
in
in
js
scas
push
add
push
dec
pop
xchg
or
cs
sahf
add
inc
jnp
mov
(bad)
out
aaa
push
movs
push
sbb
leave
daa
imul
retf
fild
or
ret
stos
loopne
test
lods
cmp
fwait
jmp
xchg
inc
mov
push
rcl
outs
add
cli
adc
inc
dec
imul
inc
add
sbb
mov
dec
enter
cmp
dec
pop
xor
leave
ins
dec
adc
ins
fs
pop
in
mov
mov
fwait
(bad)
jmp
sbb
jmp
sahf
cwde
mov
xchg
xor
mov
out
jge
movs
and
imul
fidiv
sub
mov
rcr
ins
jge
push
push
mov
mov
dec
or
fsub
sar
jae
iret
rcl
cwde
jmp
ss
jo
outs
jne
sub
xor
pop
dec
pop
adc
push
scas
push
lds
test
test
mov
pop
pushf
sub
or
add
outs
fbstp
retf
push
mov
and
sbb
popf
and
les
ss
pop
push
inc
cwde
adc
sub
mov
sbb
mov
clc
mov
out
jmp
enter
cmp
xchg
loop
xchg
gs
xchg
mov
push
cdq
pop
call
or
sbb
cmps
fidivr
cs
mov
and
pop
pop
cmp
adc
cwde
push
xchg
ins
retf
push
mov
ss
add
or
xchg
iret
and
xchg
mov
adc
sbb
mov
div
inc
and
mov
adc
jne
loope
jge
rcr
adc
jo
xor
push
and
aas
mov
sub
imul
sti
adc
jg
dec
loop
sub
daa
mov
xchg
push
mov
push
ins
adc
int3
sbb
or
fsubr
mov
fdiv
xor
fisub
lds
mov
clc
arpl
clc
int3
xchg
int
sbb
sub
push
adc
push
bound
mov
pop
pop
mov
outs
xchg
adc
mov
sbb
ins
cdq
mov
sti
jmp
add
les
sbb
retf
mov
sub
mov
int3
out
icebp
mov
(bad)
je
fiadd
and
pusha
xor
or
xchg
cmp
sbb
xchg
idiv
mov
movs
stos
test
jg
xchg
clc
pop
shl
cmp
mov
mov
int
jecxz
add
rcl
cmc
sar
xlat
out
fnstenv
jae
sub
pop
pop
hlt
push
cmp
test
loopne
stos
ins
out
fnsave
mov
fmul
ja
xor
call
dec
sub
lea
add
cld
int3
data16
or
push
in
js
xor
(bad)
(bad)
data16
push
cmc
cmc
xlat
push
ss
ss
ins
mov
in
dec
dec
mov
add
inc
and
scas
jne
ds
stos
add
ins
ret
retf
jecxz
push
cdq
jmp
xor
dec
sub
clc
mov
fcomp
and
sub
and
mov
adc
daa
js
lods
pop
xchg
push
ins
jmp
int3
aaa
adc
pop
xchg
xchg
xchg
mov
and
cwde
push
pop
into
pop
xor
adc
fist
add
adc
mov
nop
mov
fild
mov
prefetch
or
jge
adc
cld
mov
sbb
mov
sbb
jge
aas
sub
aam
aam
pop
push
lods
dec
jecxz
cmc
rol
and
sub
cmp
les
and
lods
mov
pop
xchg
pushf
out
rep
ja
mov
xchg
adc
fmul
mov
ds
fisubr
scas
cli
(bad)
lods
aaa
xchg
mov
addr16
cmps
mov
or
ja
pop
sub
jg
and
inc
xchg
sbb
loope
pop
mov
out
pushf
stos
int3
ret
arpl
dec
aaa
cmp
pop
iret
enter
mov
mov
mov
retf
jl
inc
std
mov
inc
call
ja
push
push
jecxz
dec
sbb
or
scas
pop
or
mov
cmp
jp
dec
std
xchg
test
ficomp
xchg
lock
jae
cwde
imul
scas
in
mov
sub
loopne
xchg
loop
mov
mov
dec
jnp
rcl
pop
ret
enter
inc
fisub
test
xchg
or
in
or
inc
(bad)
lods
rcl
aaa
nop
in
dec
xchg
cmp
add
out
sub
mul
inc
pop
fistp
dec
dec
push
adc
shl
fs
add
(bad)
loopne
or
je
mov
and
adc
cwde
sahf
xchg
ret
jg
int3
jbe
mov
mov
jns
stc
gs
ins
jmp
xchg
adc
sbb
mov
dec
mov
jge
ret
sbb
mov
movs
sub
aaa
mov
mov
mov
outs
repz
cmc
mov
cwde
into
push
sbb
sub
out
pop
in
cmp
pop
stos
sub
(bad)
hlt
movs
(bad)
mov
add
jmp
add
ins
aam
test
(bad)
int3
xor
push
inc
mov
inc
dec
pop
bound
inc
xchg
(bad)
xchg
sbb
hlt
addr16
sub
retf
jb
jle
mov
adc
sbb
call
imul
and
mov
adc
pop
pop
es
out
inc
or
pop
loop
inc
and
jle
dec
enter
mov
xor
sbb
call
xor
test
sub
jb
jnp
push
test
in
retf
mov
arpl
imul
aas
inc
addr16
test
sub
xchg
xchg
pop
repnz
lods
daa
sbb
lahf
hlt
jns
out
cmp
inc
aam
imul
xchg
lahf
call
push
mov
in
cli
sub
out
data16
add
lahf
(bad)
mov
lds
imul
popa
imul
sub
lock
inc
in
mov
cmp
and
dec
cmp
sub
jp
xor
jns
mov
mov
in
ret
pop
xchg
xor
mov
jb
fucom
dec
ins
icebp
call
push
dec
ins
or
jmp
scas
lods
dec
aam
jle
imul
in
not
mov
and
cdq
xor
xchg
daa
mov
mov
push
jne
daa
cli
dec
int
push
lahf
cmc
stc
sub
xor
push
rcr
jne
add
jecxz
sub
icebp
xchg
and
or
arpl
fild
adc
push
loopne
mov
popa
mov
sub
add
leave
jmp
inc
stos
(bad)
jno
test
adc
jmp
and
cmp
sar
test
pop
popf
enter
cmp
sti
lahf
or
jns
sbb
ins
iret
aaa
std
aas
outs
xchg
mov
adc
adc
int3
rcl
cdq
stos
rol
xor
in
jbe
inc
sub
xor
adc
push
sti
ja
test
test
or
test
pop
inc
jp
add
or
lds
daa
mov
xchg
sub
stc
sahf
lods
jb
ror
mov
cmp
in
ins
gs
int3
in
push
aaa
stos
cmp
in
xor
movs
in
fstp
ret
das
dec
dec
sbb
sbb
and
xchg
sbb
in
mov
push
jg
push
add
fwait
loop
scas
out
pusha
cmps
xor
mov
(bad)
out
xchg
rcl
jbe
mov
ss
(bad)
pop
and
jmp
sahf
mov
fnstsw
rcr
shr
sub
pop
addr16
sbb
xchg
(bad)
hlt
in
mov
clc
xchg
push
into
out
popa
xor
mov
ins
push
xchg
and
add
into
(bad)
sub
xlat
fs
mov
sub
dec
mov
pop
xor
in
mov
and
in
pushf
mov
loope
dec
ror
jg
sbb
enter
mov
pusha
jnp
out
jle
lds
fwait
push
adc
icebp
sar
add
fwait
sub
sbb
sub
fimul
pop
stos
das
cmp
loope
addr16
jecxz
into
jmp
sub
jne
ds
js
or
lods
(bad)
ret
jo
ins
leave
out
inc
dec
aas
outs
lea
adc
or
push
mov
pop
retf
adc
dec
cmp
ins
in
dec
mov
popa
gs
push
popa
add
nop
pop
(bad)
fsub
mov
sub
in
or
addr16
mov
or
mov
dec
stos
xor
adc
or
out
dec
test
daa
jnp
adc
jecxz
addr16
in
jmp
cmp
push
fisttp
repnz
push
stc
test
add
jge
or
xchg
scas
sbb
jg
ins
add
dec
hlt
stos
aaa
out
lods
mov
pop
stos
push
clc
test
mov
lods
mov
cmc
sub
scas
test
stos
stos
imul
jl
add
mov
push
(bad)
jae
add
fldenv
mov
repz
add
cld
sbb
cmp
cwde
adc
mov
mov
and
aas
pop
mov
jnp
cmp
sti
retf
and
and
jecxz
repnz
retf
inc
jmp
in
js
mov
pop
mov
pminub
popa
dec
sub
sub
push
scas
lds
test
xchg
xchg
das
adc
pushf
mov
retf
sub
push
pop
push
adc
shl
adc
xchg
push
(bad)
fidivr
mov
inc
add
or
into
or
mov
mov
xchg
ins
int3
retf
push
push
add
nop
into
dec
mov
jge
je
aas
jecxz
mov
fdivr
push
retf
adc
mov
bswap
xchg
retf
mov
ins
mov
inc
xchg
daa
xchg
sbb
fst
or
mov
ret
aas
sub
aaa
dec
popa
dec
enter
paddsw
bound
dec
jge
pop
inc
in
ret
mov
xchg
dec
push
xlat
test
jnp
adc
fimul
mov
call
xchg
inc
outs
enter
sbb
pop
outs
cmp
std
movs
cmc
sub
pop
inc
icebp
mov
jmp
call
ins
mov
or
es
xor
push
pop
hlt
loope
fist
imul
xor
pop
cs
cs
sub
pop
outs
fdiv
sbb
and
push
ss
push
pop
or
dec
dec
outs
jb
out
mov
add
imul
cdq
sar
je
mov
jecxz
mov
mov
cwde
xor
cmp
jnp
jg
mov
pop
sub
cli
or
cs
jl
daa
sti
dec
sbb
mov
cmp
aam
inc
sub
push
loopne
shr
arpl
adc
xchg
mov
xor
sub
fnstsw
repnz
inc
sbb
push
rdmsr
xor
dec
xchg
pop
sub
inc
lahf
fwait
push
ficom
clc
push
adc
or
push
out
mov
and
cmps
xchg
mov
xor
jle
sub
cmp
push
sub
pop
dec
adc
or
cmp
fs
pop
cli
bound
and
in
ret
or
arpl
push
xchg
adc
pop
jo
cmp
xchg
inc
leave
out
pop
inc
adc
shl
out
aad
fwait
jmp
aam
xchg
dec
inc
mov
jnp
xchg
xchg
bound
int3
mov
pop
push
add
fmul
dec
pop
jl
xor
jmp
mov
push
jmp
ficomp
sbb
push
push
mov
and
jl
xchg
jns
nop
xor
rcl
enter
lock
inc
pusha
fdivr
add
sub
add
pop
sbb
test
sar
push
xor
jb
adc
loope
xchg
xchg
test
shl
aad
jb
push
rcl
retf
(bad)
and
mov
mov
call
out
stos
mov
call
daa
(bad)
stc
xor
jl
imul
repz
aad
popa
das
or
ds
test
cs
test
mov
pop
sti
sub
mov
inc
ss
jbe
inc
push
dec
stos
xor
lock
movs
jae
sbb
cld
xchg
std
or
jmp
mov
sti
outs
jne
cli
and
xchg
push
js
test
mov
jmp
arpl
xor
sbb
dec
inc
imul
and
xchg
icebp
jmp
add
loop
cmp
test
fcmovnb
outs
pop
pop
mov
dec
mov
push
mov
dec
imul
lock
mov
inc
ds
push
bound
stos
cmp
loop
add
fld1
retf
sub
aad
imul
rol
in
bound
add
dec
aam
add
js
or
push
cmps
xor
int3
test
jne
sbb
and
cmc
jecxz
dec
xabort
dec
loopne
add
lods
test
dec
fstp
jb
sub
scas
pop
mov
push
pusha
xor
je
pop
fiadd
stos
xchg
jle
fist
scas
stos
(bad)
push
test
pusha
loope
push
gs
pop
jl
ret
xor
rcl
xlat
cmps
ror
dec
mov
add
add
xchg
test
(bad)
and
fxtract
test
addr16
inc
lea
inc
loopne
stos
repz
shl
les
cs
mov
xchg
inc
ret
mov
lea
inc
lea
jnp
es
out
jmp
lods
jnp
call
out
adc
sbb
outs
fs
stos
cmp
sub
int3
js
dec
or
iret
mov
pop
outs
or
cmc
push
mov
push
cmp
arpl
int3
hlt
adc
and
inc
in
out
cmp
dec
xlat
adc
sub
movs
test
mov
mov
ja
add
(bad)
arpl
sbb
push
push
rcr
(bad)
jp
mov
ins
icebp
xchg
adc
retf
scas
inc
mov
test
mov
(bad)
jno
stos
(bad)
ds
dec
xor
xor
jno
sbb
pop
aas
and
mov
inc
lods
add
and
mov
popf
sbb
inc
mov
jns
add
outs
js
(bad)
adc
push
push
jo
mov
xor
fnstenv
ins
out
movs
pop
pop
imul
jae
hlt
xchg
lods
jmp
and
pushf
pop
mov
cwde
outs
stos
inc
or
fwait
mov
mov
or
mov
fcom
adc
push
sti
rol
shr
(bad)
jo
inc
cmp
sar
shl
retf
loopne
fldcw
jnp
sbb
test
sub
mov
xchg
mov
jl
xor
imul
int3
sub
(bad)
aam
mov
pushf
jmp
std
cs
jnp
xlat
ins
lods
inc
outs
jg
adc
xchg
jmp
pop
push
inc
jnp
cmp
sub
cli
pop
inc
sti
out
cwde
push
dec
mov
mov
cmp
loope
into
movs
not
pop
sub
loop
outs
adc
shl
pop
fs
pop
retf
mov
(bad)
pop
arpl
and
mov
test
sbb
and
(bad)
mov
test
pop
dec
mov
pop
sbb
iret
test
loop
popa
loopne
xchg
or
add
inc
jp
and
lds
cmps
ret
mov
js
mov
dec
lods
iret
and
sar
sub
mov
je
add
jnp
jae
ins
mov
pop
daa
movs
sbb
fld
cmps
outs
push
jp
in
popa
cmp
and
xlat
rol
jge
in
retf
sbb
lods
or
idiv
(bad)
jmp
ds
jle
or
sub
loope
pop
jle
rol
iret
ret
mov
test
mov
data16
fwait
bnd
xor
and
mov
inc
cwde
mov
add
pop
out
daa
test
(bad)
sbb
xlat
dec
mov
xor
or
pop
loop
sahf
pop
iret
sbb
movs
push
xchg
mov
(bad)
pop
xchg
mov
mov
shr
scas
dec
cdq
stc
xlat
sub
or
fsubr
mov
mov
jae
xor
fs
int
pop
mov
and
movs
dec
pop
icebp
jns
mov
push
jns
js
push
or
sub
daa
dec
pushf
fptan
test
push
mov
test
in
in
cmp
xchg
test
cli
dec
jns
leave
mov
scas
(bad)
int
lods
add
fdiv
xchg
lea
cdq
pop
sbb
lods
push
xchg
push
cvtps2pd
lods
std
mov
test
ds
pop
mov
adc
repz
sub
or
jecxz
movs
fwait
stos
rcr
xlat
cdq
xchg
pop
inc
add
pop
fcomp
mov
xchg
mov
shl
jns
mov
sbb
pop
add
jb
mov
in
les
push
push
movs
ja
xchg
fisub
retf
mov
inc
dec
and
(bad)
test
pop
jnp
aad
push
fisub
jne
jne
jge
push
imul
jmp
xchg
mov
dec
div
inc
lea
jp
out
sub
out
ins
mov
mov
cdq
ins
push
jge
in
pop
and
out
(bad)
sbb
or
lods
outs
das
and
retf
cli
xchg
mov
mov
lea
jmp
pop
js
push
int
stc
dec
push
jmp
jnp
xchg
pop
int3
push
push
push
mov
das
mov
out
ins
and
dec
movs
lahf
adc
ins
mov
xor
cdq
sub
mov
sti
push
pop
int
jmp
or
in
xor
dec
loop
cmovg
imul
ss
mov
mov
pusha
dec
stc
xor
sbb
mov
or
adc
jno
scas
jo
jle
sub
mov
loop
sub
mov
push
out
test
jmp
lds
cmc
cdq
dec
xchg
xor
mov
lahf
add
jmp
in
shl
imul
mov
or
jmp
sbb
outs
sti
mov
ss
ret
addr16
inc
(bad)
imul
aas
adc
sbb
and
pop
jne
adc
xchg
popf
in
xchg
or
cwde
mov
inc
add
mov
cmp
mov
iret
clc
out
push
push
scas
sub
xchg
fdivr
add
cmp
icebp
cld
sahf
nop
cmp
out
xchg
push
(bad)
pop
xchg
sbb
cwde
jmp
adc
loopne
or
test
or
adc
sub
movs
xchg
arpl
sbb
jbe
in
in
jno
nop
xor
fnstcw
shl
mov
jle
jb
(bad)
call
push
mov
xor
les
sbb
sub
push
cwde
jmp
mov
inc
pop
or
mov
push
sbb
(bad)
out
stos
jno
ret
gs
out
jg
xchg
call
fld
mov
mov
gs
sbb
xor
ret
jns
ret
je
pop
out
inc
xor
and
mov
push
add
or
sbb
adc
lods
pop
cdq
mov
cs
in
jl
xor
or
inc
fmulp
mov
enter
pop
dec
or
out
cld
pop
push
or
mov
cmp
retf
leave
fs
rcl
and
sbb
icebp
out
sbb
push
js
imul
inc
mov
mov
push
sbb
ins
jmp
push
jmp
xor
xchg
cmp
mov
fwait
call
ds
xchg
je
jno
xor
or
cmps
fst
inc
bound
gs
es
mov
data16
jle
sub
xchg
cmp
xchg
cmp
mov
jno
adc
pop
or
enter
lods
aas
in
and
in
mov
xchg
add
adc
or
fnsave
mov
xlat
lahf
aad
aam
inc
fcomp
or
push
mov
aam
(bad)
js
cmp
sahf
cs
and
xor
addr16
imul
fild
pushf
mov
aad
cld
jmp
(bad)
out
cmp
popf
imul
and
mov
xchg
in
and
sub
add
and
or
jp
add
enter
pushf
imul
pop
leave
not
call
sub
dec
lock
shl
fsub
in
or
jns
adc
jns
into
sbb
inc
cs
mov
push
push
adc
mov
cmps
push
sbb
cmps
iret
int
rcr
or
pop
(bad)
movs
pushf
adc
push
repz
adc
stc
mov
cmps
call
stos
cmp
hlt
(bad)
xchg
inc
cmps
inc
cmp
int
xor
mov
pop
jbe
push
ss
push
jle
std
adc
setns
mov
inc
lahf
ds
mov
cmp
mov
retf
adc
inc
(bad)
cmp
mov
sub
mov
pop
sbb
vpavgb
pop
sbb
inc
jmp
pop
repnz
cwde
iret
loopne
mov
and
pop
mov
and
mov
rcl
cmp
xor
movzx
sub
ds
fmul
dec
imul
xor
lds
push
adc
and
adc
xlat
retf
not
(bad)
out
fisub
inc
xchg
dec
sub
xor
into
mov
call
(bad)
(bad)
shr
shr
jo
add
std
test
mov
pop
fist
dec
pop
adc
cmp
jo
jmp
iret
clc
iret
aaa
cld
add
mov
stos
xor
sub
imul
inc
cmps
sub
lods
pop
mov
pusha
inc
mov
cdq
inc
pop
push
je
cwde
sbb
push
stos
out
ret
out
xchg
shl
inc
(bad)
xor
inc
icebp
std
sbb
scas
pop
int
fimul
pop
xchg
add
xchg
mov
les
inc
das
and
inc
mov
stos
dec
cmp
pop
mov
mov
xchg
sbb
stos
inc
pop
push
cld
or
iret
loop
adc
hlt
jnp
mov
sub
inc
mov
not
sbb
test
lea
and
into
(bad)
movs
or
aad
pop
sbb
pop
in
arpl
repz
mov
test
sbb
pop
test
inc
rol
pop
or
inc
or
pop
cmp
xchg
cmp
sbb
outs
test
dec
sub
and
and
cmp
xor
call
ds
nop
(bad)
cmps
sub
test
sbb
imul
dec
hlt
xlat
retf
shr
lahf
scas
dec
cmp
cld
es
and
(bad)
push
mov
ins
mov
lea
xchg
retf
test
sar
out
nop
sub
arpl
popa
mov
ja
or
jno
push
pop
xor
hlt
or
mov
enter
mov
xchg
inc
in
imul
jns
and
ret
int
aam
and
stc
pop
xchg
fstp
fdivr
test
cli
addr16
ss
enter
mov
mov
iret
xlat
test
fist
out
pop
jp
(bad)
repnz
scas
add
inc
lahf
push
inc
test
mov
mov
sbb
(bad)
(bad)
imul
test
mov
in
mov
cmp
push
mov
ins
add
mov
and
ret
popa
pop
daa
sar
sub
inc
dec
jmp
aam
adc
xor
lea
mov
repz
mov
xor
xchg
pop
outs
and
dec
jbe
adc
and
mov
jge
fisttp
mov
cmp
xor
cs
mov
jmp
dec
and
std
jns
rcr
add
cmp
cmp
out
fidivr
sbb
scas
or
xchg
addr16
or
xor
mul
(bad)
in
test
sbb
test
(bad)
jno
iret
pop
mov
add
xor
jge
(bad)
ja
int
mov
fld
sub
(bad)
push
loope
mov
cwde
test
(bad)
ins
adc
aad
pushf
pushf
in
jp
dec
adc
mov
sahf
sahf
bound
add
loope
add
sub
fisubr
imul
pusha
adc
cmps
xchg
and
je
pop
loope
jae
mov
jp
jecxz
lods
dec
and
mov
dec
rcl
cmp
or
sti
mov
push
push
jl
cmp
mov
and
sbb
inc
inc
fwait
imul
sbb
jno
pop
dec
icebp
stos
xchg
daa
and
mov
pop
adc
push
or
sub
addr16
jge
inc
push
push
sub
dec
imul
std
je
sbb
ror
pop
fld
or
loop
dec
xchg
loopne
ror
fcom
sbb
add
iret
das
and
mov
daa
or
scas
xor
shl
cmc
inc
sbb
leave
cld
outs
in
inc
dec
sbb
jns
add
(bad)
sub
push
(bad)
scas
dec
scas
stos
sub
lods
mov
push
out
mov
add
icebp
lds
fidiv
int3
div
(bad)
pop
pusha
cmp
jmp
push
test
sbb
movs
cmp
xchg
das
lahf
pop
mov
xor
je
sub
jp
loop
inc
push
adc
push
sub
dec
cli
push
rcr
js
daa
adc
icebp
sbb
dec
or
jae
mov
jbe
adc
cld
pop
aaa
popf
inc
(bad)
sub
in
push
jg
pop
mov
adc
or
sbb
xor
add
fild
push
mov
pop
jp
rcl
ror
sbb
add
inc
pop
mov
call
adc
jecxz
xchg
neg
aad
ss
in
push
jmp
ja
cdq
mov
xor
pop
movs
xchg
jns
xor
ins
dec
int
jae
je
and
xor
dec
jo
adc
sbb
ds
sbb
ins
mov
lods
bt
push
pop
iret
dec
xchg
add
jmp
xchg
adc
inc
or
je
jge
mov
mov
repnz
stc
and
je
adc
ins
clc
aam
cli
loope
addr16
push
mov
pusha
inc
push
sub
outs
movs
jmp
xchg
sbb
or
inc
sbb
pop
addr16
ins
(bad)
ins
mov
jns
and
mov
js
and
or
fidivr
push
dec
pop
sub
repz
mov
cmp
leave
inc
mov
push
imul
sahf
pop
pushf
in
cmp
in
jno
sbb
xor
pop
jns
ja
pushf
out
xor
das
mov
scas
stos
and
adc
lock
dec
push
push
adc
jg
inc
jb
xor
mov
and
jns
xchg
push
aam
bswap
lods
iret
mov
adc
(bad)
sub
sbb
call
bound
add
inc
(bad)
movs
addr16
(bad)
jg
scas
aad
add
jl
pop
jb
adc
sub
ret
lods
inc
bound
rcl
dec
shl
mov
push
repz
ret
iret
cwde
mov
dec
add
xchg
outs
test
inc
movs
xchg
cmp
ss
push
out
mov
out
call
xlat
dec
mov
jl
sub
iret
lock
(bad)
stos
sbb
retf
push
push
shr
or
lods
cmp
mov
sub
mov
xor
pop
mov
sbb
aam
cmp
xchg
nop
or
or
ins
push
mul
fld
icebp
xchg
imul
cmp
jne
lods
std
mov
ret
inc
popa
inc
xchg
dec
ja
in
and
mov
das
and
daa
mov
cwde
cwde
into
xor
push
popa
jle
inc
stos
aas
daa
inc
pop
jne
gs
imul
add
push
mov
jp
sbb
mov
(bad)
ss
div
in
stos
adc
call
fadd
add
mov
pop
push
popa
jb
cdq
icebp
fbld
dec
mov
mov
mov
lahf
pop
push
rcr
xchg
mov
jbe
jl
pop
lods
fs
adc
add
les
jnp
xor
and
jno
cmp
pop
or
pop
xor
fs
scas
retf
(bad)
sub
mov
sar
add
imul
shr
test
mov
or
mov
inc
xchg
dec
sub
lock
les
out
pop
fsubr
sbb
mov
inc
neg
mov
adc
cmps
or
and
rcr
leave
inc
sbb
push
sahf
xor
shl
cmp
mov
push
xor
nop
dec
pop
push
popf
dec
mov
movs
outs
fst
ret
xchg
sub
dec
sub
add
pop
js
test
mov
pop
push
int3
loope
iret
cmp
popa
cmp
dec
jno
pushf
sti
jmp
push
in
clc
out
jno
leave
mov
push
or
mov
pop
sub
fisub
fistp
xor
(bad)
sub
sbb
sbb
rol
dec
xchg
push
cmps
(bad)
or
rcl
ins
adc
sbb
xor
test
aad
imul
cmp
jl
sub
fist
inc
dec
rep
stc
es
out
mov
sbb
nop
imul
xchg
fdiv
inc
xchg
mov
sub
ret
imul
mov
pop
xchg
sbb
fst
push
dec
popf
mov
xchg
stos
(bad)
push
stos
ins
adc
xor
add
in
out
pop
xlat
add
xchg
push
fs
inc
mov
xor
sbb
das
adc
xchg
inc
sub
test
add
jno
ret
dec
sbb
imul
jmp
add
mov
pop
dec
mov
retf
sbb
loope
push
loop
mov
lock
repz
sahf
sti
inc
fistp
sbb
ins
push
bound
loopne
sub
xchg
push
aaa
(bad)
xor
mov
adc
rcl
adc
(bad)
imul
nop
push
xchg
imul
popa
dec
pop
fs
dec
push
inc
adc
xchg
and
inc
and
xlat
jo
test
js
mov
xor
stos
call
mov
and
adc
mov
inc
std
popf
jae
ret
fnstenv
pop
repz
out
jnp
rcr
adc
mov
idiv
mul
xchg
dec
dec
rcr
and
pop
xchg
in
or
aaa
ins
jmp
push
lea
loop
das
rol
out
push
nop
mov
enter
paddsb
es
lahf
mov
or
sbb
xchg
mov
shl
rcr
add
mov
popa
push
jmp
sbb
inc
imul
in
test
fst
jo
inc
int3
ja
sti
sti
adc
fistp
mov
or
inc
mov
out
inc
add
ret
iret
xor
movs
outs
inc
out
sbb
call
mov
test
or
rol
mov
data16
cs
and
jns
adc
sub
pop
pop
bound
jnp
and
loopne
or
test
sbb
outs
dec
push
aas
jns
xchg
xor
pusha
or
jge
pop
(bad)
das
xchg
inc
jne
arpl
mov
(bad)
aaa
pop
inc
mov
mov
je
mov
dec
daa
push
fidiv
shr
xchg
or
fwait
retf
(bad)
pop
std
adc
sub
sub
mov
movs
sub
retf
lods
mov
mov
xor
mov
fstp
and
aad
mov
in
ss
pmaxsw
add
stc
leave
clc
jecxz
(bad)
icebp
cmp
enter
cmp
les
aad
stos
xchg
das
pop
push
fimul
push
cmc
sub
rol
(bad)
mov
push
push
mov
(bad)
mov
cli
xchg
lahf
aas
and
or
adc
ficom
adc
inc
retf
hlt
les
xor
fcomip
push
leave
jnp
cld
pop
cld
xchg
inc
pop
xlat
pop
cmp
mul
test
movs
cmp
push
gs
add
push
test
popa
pusha
fyl2x
mov
shr
int
loope
addr16
xor
test
dec
ds
out
and
mov
ret
retf
cmp
lods
jg
inc
jne
adc
xchg
cmp
fcmovne
jmp
fldenv
outs
mov
mov
add
add
and
(bad)
pop
sub
mov
push
pop
cmp
ins
sbb
test
mov
iret
aam
xchg
call
fdivr
dec
fld
cmp
add
xchg
sbb
sub
mov
sub
movs
std
mov
xor
push
jb
mov
dec
and
fiadd
cdq
popf
pop
xchg
jg
mov
lods
cmp
dec
sub
xor
push
(bad)
(bad)
adc
mov
add
leave
adc
cmp
or
outs
mov
sbb
fwait
es
adc
aad
mov
cmc
pop
xor
cld
test
retf
xor
dec
push
ror
fidiv
aad
cmp
mov
dec
push
pushf
out
mov
repnz
adc
xchg
mov
lods
dec
out
push
scas
xor
psrad
int3
dec
loope
cdq
mov
test
cwde
push
pusha
call
fcom
repz
add
sub
mov
test
(bad)
ds
addr16
mov
iret
add
mov
sbb
xchg
xor
fs
and
out
lahf
push
nop
dec
jae
call
dec
test
pop
shl
fdiv
xchg
rcr
push
add
ret
pop
cmp
mov
mov
jns
jp
in
jno
cmp
mov
pop
cld
cmovs
pop
pushf
push
stos
lock
jle
jmp
xlat
add
or
addr16
push
ficomp
dec
xor
pusha
into
jno
add
pop
arpl
es
(bad)
jb
jp
cli
arpl
cmp
pop
(bad)
sti
inc
mov
pop
pop
je
xchg
mov
sub
mov
jae
push
dec
out
inc
xchg
push
(bad)
arpl
jb
add
adc
jmp
and
or
ds
sahf
jns
push
ins
push
outs
dec
sbb
aad
jecxz
push
shr
popf
xchg
movs
nop
fld
adc
jmp
push
push
popf
les
push
and
jmp
push
add
mov
xchg
cmps
mov
pop
jne
mov
xchg
sbb
push
sti
sbb
fldcw
hlt
xchg
mov
jb
and
in
mov
ss
mov
push
pop
mov
mov
mov
(bad)
dec
in
fs
outs
fwait
sub
mov
push
shl
call
mov
jge
mov
rcl
arpl
jmp
push
dec
fldenv
xchg
cmp
mov
cmp
jmp
retf
lods
sub
sbb
imul
push
out
pushf
dec
jge
jb
push
pop
out
imul
movs
imul
ds
ret
inc
je
test
pop
daa
lahf
iret
movs
movs
mov
into
adc
outs
mov
mov
inc
and
adc
fisubr
xor
mov
ins
and
(bad)
sub
imul
fimul
out
jecxz
bound
enter
fld
mov
call
loope
push
xor
shl
adc
and
(bad)
fistp
cmc
add
xor
fnstcw
mov
jle
sub
jp
jp
cmp
shl
shr
arpl
push
mov
and
jnp
sub
jmp
add
cmps
or
jmp
ja
aaa
xor
arpl
mov
lods
xor
out
jecxz
icebp
inc
imul
popa
sbb
jecxz
add
and
data16
fdiv
inc
push
sub
sbb
out
mov
shl
in
mov
iret
sbb
loope
out
arpl
jge
sub
jae
jno
aam
retf
movs
fiadd
pop
hlt
dec
inc
aaa
std
or
imul
mov
mov
cmps
jbe
cmp
ds
add
xchg
jge
fmul
stos
dec
and
inc
movs
pop
rcl
inc
mov
adc
cdq
push
xchg
sub
leave
test
stos
mov
out
sbb
mov
xacquire
jle
jnp
pop
cmp
sbb
jmp
xchg
adc
ins
test
sbb
sub
jmp
repz
outs
ss
fsub
sub
pop
cld
and
jae
sbb
jo
mov
loop
das
js
fisub
mov
lods
push
ins
js
in
mov
jmp
out
or
add
leave
mov
and
test
pop
ds
xor
test
pop
cmps
div
mov
pop
das
sub
add
jns
js
mov
test
pop
sub
adc
fs
xchg
adc
cwde
ins
jo
and
fimul
lock
imul
jo
nop
cmp
mov
shl
xchg
and
ins
cwde
xlat
pop
clc
aad
sub
fild
out
sbb
fstp
xchg
cwde
popa
int
fiadd
jge
daa
or
leave
in
lds
pop
fild
inc
cmp
jb
arpl
xchg
jb
in
cmp
inc
fs
(bad)
cs
scas
scas
and
out
mov
cmp
fsubr
fidivr
mov
out
(bad)
(bad)
pusha
jno
loopne
outs
sub
dec
xchg
push
pop
mov
jno
ss
sub
xchg
(bad)
dec
test
dec
pop
movs
xchg
test
xchg
push
sub
push
dec
mov
lahf
lods
cwde
adc
fidivr
out
cmp
pop
repz
mov
shr
shl
fwait
push
adc
bound
aas
pop
mov
scas
dec
or
scas
leave
mov
cmp
mov
or
and
int
fucomip
daa
dec
jb
or
call
mov
daa
sahf
cwde
lea
aaa
jg
mov
fs
retf
(bad)
jae
das
pcmpgtd
shl
mov
je
sub
inc
sbb
pop
imul
ds
push
jge
aam
test
sbb
jno
int
fadd
push
data16
dec
pushf
jg
gs
lods
fcmovu
dec
push
mov
xor
pop
mov
xor
ja
lock
dec
fisub
fnstenv
jno
lahf
nop
(bad)
xlat
mov
out
add
dec
pusha
loope
(bad)
retf
fwait
pop
pop
mov
or
lock
mov
push
jno
sub
addr16
stc
pop
sbb
inc
and
cdq
mov
enter
cmps
push
ins
imul
mov
or
dec
pop
or
dec
pushf
xor
retf
js
out
push
sbb
sub
mov
mov
int
mov
enter
pop
pop
lahf
or
popf
and
cmp
sub
ja
in
jbe
ss
inc
dec
sar
xlat
pusha
or
loope
mov
jl
mov
cmc
jb
imul
enter
sahf
test
mov
xor
or
mov
mov
mov
cdq
mov
push
cli
pop
dec
mov
hlt
daa
outs
dec
sub
call
jp
fistp
jge
dec
into
adc
add
or
cmp
or
push
out
clc
pop
add
stos
jbe
xchg
pop
add
mov
in
imul
fimul
mov
sub
pop
ret
sti
xchg
pop
(bad)
je
loopne
mov
add
sti
out
vpcmpgtw
jp
repnz
pop
add
ret
outs
and
jge
pop
dec
int
pusha
mov
adc
mov
pop
cli
xchg
add
fucom
icebp
es
pushf
into
jae
sti
fnsave
arpl
jnp
imul
bsr
and
dec
scas
test
sub
stc
(bad)
or
push
out
mov
dec
mov
movs
movs
add
and
je
outs
in
aaa
cmps
pslld
ret
cwde
jno
pop
or
outs
pop
cdq
pop
call
xor
sar
iretw
mov
inc
jmp
ss
stos
xchg
xchg
inc
or
inc
leave
sub
jp
pushf
gs
xchg
xchg
sti
sub
add
sbb
mov
sub
(bad)
xor
es
jnp
test
push
pop
add
pushw
outs
sbb
jns
add
ret
inc
das
mov
inc
aas
gs
xor
add
inc
dec
xchg
sahf
xor
mov
or
cs
xor
aam
push
repnz
inc
cmc
xchg
pop
adc
mov
dec
lods
inc
xchg
aam
xor
and
call
stos
adc
inc
inc
sub
jge
dec
jle
pop
sub
stos
je
test
popa
jo
jno
mov
(bad)
jnp
das
add
xchg
add
scas
outs
pop
fadd
ss
aaa
cmc
add
(bad)
sub
movs
adc
fst
xlat
pusha
fild
(bad)
fild
aad
mov
aas
cmp
sbb
jp
je
lods
outs
jae
cmp
sub
push
call
daa
mov
and
xchg
cmps
call
ins
shr
out
jne
cmp
inc
popa
sbb
rcr
mov
push
test
call
add
(bad)
cmp
cmp
pusha
pop
mov
test
mov
iret
retf
cmp
pop
jp
jecxz
inc
je
jmp
cmc
mov
das
cmc
xor
and
scas
add
lds
mov
js
ins
jg
sbb
repnz
pop
or
test
icebp
clc
xchg
enter
xor
clc
pop
and
(bad)
adc
mov
pop
inc
push
xchg
sar
cs
and
adc
cs
jnp
mov
adc
cmc
repz
dec
enter
xor
loop
inc
std
jl
xchg
mov
in
xchg
ret
sbb
imul
sub
fistp
ins
(bad)
sar
push
fsubr
mov
push
jmp
aam
out
jae
jns
aam
aas
or
cld
shr
sbb
cli
movs
add
pop
js
rol
jl
or
stos
mov
aam
and
xchg
lahf
aam
daa
sub
sbb
les
or
aaa
iret
push
lea
cdq
dec
lds
push
pusha
cs
cmp
pop
xchg
icebp
(bad)
and
push
add
idiv
leave
or
xchg
push
push
adc
add
scas
lea
sub
retf
mov
adc
adc
cmp
pop
inc
jmp
add
sub
rep
xchg
xchg
jle
and
mov
retf
and
lods
cmps
pop
ficomp
cmp
lods
inc
mov
push
pop
daa
sbb
rcr
adc
xchg
jmp
imul
ret
das
mov
pop
jl
cli
add
loop
jns
cld
add
rcl
lods
add
sbb
ins
add
icebp
mov
ds
shl
fld
in
out
mov
shr
pushf
dec
mov
loope
cld
xchg
fstp
and
cmp
jne
mov
sahf
jl
(bad)
loope
xchg
pop
rol
pop
test
xchg
xor
retf
mov
add
adc
xor
daa
test
movs
fcom
pop
xor
dec
clc
retf
in
shl
push
das
loope
pop
dec
mov
sub
cmps
and
inc
lds
stc
pusha
mov
popf
repz
ficomp
sub
xor
sbb
cmps
gs
fstp
fimul
jmp
mov
mov
retf
dec
jnp
fldenv
add
xlat
cli
mov
mov
or
and
xchg
mov
dec
jg
outs
pushf
cdq
and
inc
out
data16
or
movs
add
cmp
add
rol
mov
jo
xor
sbb
push
mov
lds
movs
(bad)
loop
imul
pop
xchg
inc
clc
outs
push
xchg
sub
shr
push
enter
jb
mov
and
call
pop
cmc
fadd
sub
push
movs
pusha
add
ja
mov
sbb
push
sbb
clc
and
out
and
or
test
mov
inc
push
pop
aam
xchg
leave
jle
je
popa
pop
or
pop
out
js
sub
retf
sbb
mov
and
add
test
push
clc
cmp
fwait
cmp
nop
inc
pop
mov
call
(bad)
mov
repnz
data16
mov
lea
cmp
sub
or
mov
inc
jl
lock
inc
jle
push
(bad)
jae
mov
pop
jnp
jle
mov
adc
aas
jo
aam
fwait
xor
pusha
mov
xlat
jae
repz
dec
cli
sbb
aas
inc
push
mov
rcr
xor
xor
jge
aaa
inc
xor
js
adc
mov
sub
fmul
test
add
dec
jae
xor
ja
mov
int
inc
into
sbb
xchg
ds
add
daa
xor
add
mov
or
dec
dec
adc
imul
inc
in
and
cld
(bad)
retf
icebp
test
sbb
mov
pop
in
(bad)
ins
cli
sub
xchg
push
push
arpl
aas
xor
push
pusha
sahf
movs
mov
mov
adc
popa
mov
call
loopne
mov
xor
push
mov
out
or
add
or
push
cmps
fdivr
push
add
and
jo
scas
jmp
jg
icebp
push
lods
leave
call
int3
std
pop
ret
(bad)
loop
les
cmp
rcr
or
cmps
imul
mov
js
std
mov
dec
cli
dec
inc
call
js
push
push
dec
jg
inc
mov
adc
push
and
pop
mov
test
push
xchg
jl
jmp
inc
imul
mov
jne
(bad)
mov
inc
and
das
dec
pop
cs
xchg
xchg
cwde
cmp
ins
lahf
nop
movs
repz
mov
and
dec
push
stc
iret
out
mov
(bad)
cmp
outs
add
push
rol
jmp
xchg
xor
(bad)
not
adc
adc
mov
stc
les
mov
cdq
mov
xor
jns
jns
lea
(bad)
cmps
mov
pop
or
movs
int
mov
scas
std
mov
push
shr
fs
jge
push
mov
sub
fsub
mov
ins
and
lods
pop
data16
or
adc
xchg
dec
jle
push
in
jl
rcr
jg
stc
mov
mov
pop
repnz
sub
pop
jne
mov
aas
in
repz
mov
push
in
adc
add
add
stc
(bad)
mov
mov
xor
adc
pop
cli
mov
xchg
movs
and
mov
cmps
arpl
and
mul
shl
dec
add
(bad)
addr16
sar
cwde
lock
dec
sahf
mov
mov
out
push
push
aam
sub
mov
fcomp
xor
add
mov
add
add
and
mov
imul
push
xor
mov
sbb
mov
or
or
sub
mov
add
mov
lahf
jge
jmp
cli
inc
(bad)
pop
push
cs
dec
ins
and
(bad)
xor
neg
and
retf
daa
and
pusha
(bad)
mov
add
inc
cmps
dec
out
or
jbe
mov
pop
popa
jecxz
xor
xor
out
pop
and
dec
sbb
mov
int3
rcl
cmc
inc
fwait
xchg
retf
sar
and
jne
xor
jne
mov
jo
or
xchg
push
mov
jmp
das
sti
jge
push
pop
inc
je
sub
mov
pop
pop
pop
in
loopne
push
xor
jns
push
lods
test
push
sub
ja
das
cmp
in
adc
pop
(bad)
sbb
mov
inc
pop
or
in
mov
retf
icebp
xchg
jecxz
jno
lock
inc
inc
dec
inc
inc
cmp
jge
mov
fwait
pop
cmp
lea
pop
(bad)
fcmovnb
movs
mov
jns
push
pop
icebp
mov
je
lods
and
sbb
outs
push
repz
mov
pop
xchg
test
scas
(bad)
shr
xchg
into
pop
cmps
cs
dec
iret
out
retf
ja
or
fsub
inc
add
sbb
inc
retf
leave
push
out
mov
cmp
lea
adc
xchg
add
fmul
pop
rcr
sub
jb
xchg
pop
and
and
mov
cwde
push
pop
movs
dec
jnp
sti
stos
std
lods
jnp
loopne
movs
stc
push
dec
sbb
inc
clc
cs
push
and
pop
iret
mov
stos
movs
mov
adc
xchg
push
or
out
sbb
std
mov
cmps
ins
push
sub
lock
jo
cmp
pop
out
std
mov
ss
outs
and
mov
(bad)
jo
xchg
add
stc
push
jp
sahf
xchg
sbb
adc
hlt
mov
and
sbb
scas
dec
imul
fistp
cld
test
fwait
test
and
push
push
jne
jns
(bad)
mov
(bad)
sbb
jl
xor
jmp
xor
mov
xchg
out
mov
imul
xchg
fidiv
(bad)
data16
nop
jae
sub
jns
xor
lahf
ins
mov
aam
xor
cmp
in
mov
shr
xchg
(bad)
call
sbb
mov
iret
jae
enter
adc
movs
mov
xchg
ds
fild
aas
ins
xchg
mov
adc
(bad)
ja
pop
inc
pop
or
adc
dec
loop
sub
loop
and
pop
jle
enter
arpl
leave
mov
mov
jne
dec
sub
leave
and
(bad)
or
fstp
repnz
scas
adc
lock
jne
xchg
add
xchg
es
adc
test
test
retf
jle
fld
in
cmovle
push
inc
xchg
push
bound
push
xor
add
(bad)
mov
scas
jge
test
jbe
sub
in
xchg
mov
push
add
add
je
push
jbe
jg
pop
ins
(bad)
out
sub
sar
icebp
mov
sbb
jns
(bad)
sti
xchg
popf
inc
inc
xchg
pop
cld
add
int3
dec
jmp
test
push
dec
enter
adc
cdq
out
outs
add
add
add
retf
ds
jecxz
outs
outs
test
out
jmp
stc
and
or
ret
loope
adc
xchg
rcr
mov
out
push
xchg
mov
nop
out
push
push
add
push
jno
xchg
xor
call
repnz
mov
outs
inc
pop
and
arpl
cmp
mov
jecxz
ret
and
mov
pop
adc
mov
pop
and
aaa
pushf
ds
xchg
(bad)
cld
jmp
cwde
push
stos
fsubr
into
mov
inc
repz
add
add
mov
popfw
ret
push
fisubr
sar
inc
jle
xchg
scas
xchg
cdq
out
jmp
mov
lods
sti
aam
or
imul
repnz
js
call
inc
pusha
sub
fs
xlat
aaa
ins
ficom
gs
lahf
cmp
stos
inc
pop
adc
enter
cmps
xchg
movs
rcl
popa
mov
call
loop
hlt
sti
mov
fist
in
mov
adc
mul
add
lds
and
xor
push
sub
je
(bad)
lock
cmp
fisub
or
call
cld
jl
inc
out
ret
xchg
icebp
es
mov
(bad)
ret
test
push
gs
cmp
xlat
test
imul
sbb
gs
jbe
imul
stc
sbb
mov
jmp
sbb
outs
loopne
test
out
fnstcw
fstp
iret
out
loope
sbb
ins
(bad)
aam
fst
jne
jo
popa
fiadd
jno
push
mov
add
push
in
mov
ja
mov
ror
mul
loop
jb
add
pop
jbe
add
cmp
hlt
inc
xor
inc
lods
mov
jge
dec
daa
or
sti
pop
sbb
neg
push
aaa
fwait
adc
outs
push
pusha
iret
jle
sub
and
popf
scas
bound
in
adc
xor
push
jl
mov
imul
push
repz
fcmovne
lea
mov
ror
iret
jne
scas
jnp
rcr
mov
push
adc
js
adc
leave
cld
inc
cli
scas
jle
cld
dec
dec
pop
int
dec
pop
mul
mov
cmp
out
arpl
nop
stc
push
out
enter
repz
ins
movs
mov
out
repz
nop
pop
cli
mov
ret
outs
loop
out
push
movs
cli
xor
les
(bad)
out
in
stos
xchg
xor
pop
cmp
cmp
lea
and
pusha
xchg
xchg
and
inc
lock
mov
cmp
push
sbb
int
hlt
dec
popf
adc
fist
xchg
scas
(bad)
mov
adc
push
xchg
pop
mov
movhlps
push
adc
add
mov
sbb
dec
mov
xchg
jle
imul
stos
push
pop
mov
adc
and
mov
aaa
inc
mul
in
sahf
lods
mov
rcl
(bad)
pop
jmp
es
call
mov
jno
jmp
cmp
(bad)
sbb
jnp
ret
pop
je
ficom
add
imul
dec
nop
in
mov
or
icebp
test
fiadd
test
outs
sahf
mov
cmp
bound
cmc
xor
(bad)
pop
fwait
movs
pop
shl
xchg
pop
cmp
daa
dec
sbb
ins
mov
call
pop
icebp
cwde
call
es
adc
aad
or
sar
scas
test
xchg
sahf
inc
inc
pop
in
mov
ds
pop
mov
cmps
int
vphsubwd
repnz
xor
stc
inc
(bad)
aam
lods
add
xor
mov
jb
push
push
(bad)
arpl
imul
mov
and
xchg
and
lds
push
movs
sbb
out
adc
adc
mov
hlt
pop
xor
mov
(bad)
call
ins
xchg
mov
fcom
stc
(bad)
rol
push
outs
mov
rol
outs
in
mov
movs
mov
std
dec
mov
mov
pop
into
(bad)
(bad)
je
xlat
das
add
pop
sbb
push
outs
add
xchg
or
out
dec
repz
mov
fwait
(bad)
mov
imul
inc
in
jmp
jo
fwait
pop
xor
imul
hlt
jnp
mov
xchg
enter
shl
xor
movs
rol
daa
mov
imul
or
not
pop
lahf
call
loope
outs
pop
and
fs
addr16
ds
jecxz
or
(bad)
pop
out
cs
fwait
(bad)
daa
clc
mov
in
int3
xchg
mov
fnstsw
add
or
adc
or
sbb
call
adc
adc
gs
cmp
inc
out
push
mov
or
call
mov
and
cmp
or
int
and
adc
loopne
retf
lds
call
mov
cli
out
add
ds
ins
aas
(bad)
cli
into
mov
pop
xor
mov
(bad)
sbb
retf
mov
sub
mov
mov
dec
inc
push
loop
call
sbb
adc
stos
mov
jecxz
ret
ins
sti
cmp
addr16
push
outs
fiadd
leave
cld
je
jne
lds
mov
mov
bswap
sub
push
mov
inc
or
cmp
dec
sub
xor
xor
std
fbld
call
adc
sub
push
sub
inc
imul
dec
mov
and
(bad)
gs
outs
ds
xchg
add
pop
mov
mov
dec
pop
jl
and
push
and
xor
mov
push
push
mov
jmp
out
push
iret
lods
(bad)
je
pop
sar
bound
sti
jns
inc
push
jb
sub
mov
sbb
rol
stos
pusha
cmp
(bad)
fs
mov
mov
sti
add
clc
scas
push
div
push
scas
jns
mov
push
mov
add
in
fdiv
mov
push
sbb
aad
push
adc
sbb
cmp
in
cmp
aad
dec
add
sbb
xchg
push
shl
xchg
jmp
and
and
pusha
ss
pusha
dec
stos
ja
loop
xchg
xchg
clc
cmp
cwde
pop
adc
xchg
(bad)
xor
push
or
fcomip
mov
adc
add
mov
push
jnp
jge
lock
xchg
and
pop
or
sti
mov
das
jmp
popf
sbb
adc
mov
pop
push
outs
add
or
sub
loop
jmp
cli
ds
mov
push
inc
call
fadd
sub
pop
or
pop
mov
add
inc
sub
push
mov
xchg
pushw
(bad)
sbb
jne
shl
mov
pop
push
adc
cmp
mov
add
outs
scas
ret
scas
lahf
lds
xor
cmp
push
call
arpl
retf
clc
ins
clc
dec
push
into
mov
addr16
mov
dec
es
dec
or
add
fadd
dec
mov
pushf
xor
(bad)
dec
inc
lods
cmp
inc
add
xor
or
arpl
lea
scas
and
call
add
push
pop
stos
pusha
loope
inc
dec
les
xchg
cdq
sbb
movs
xor
ins
inc
pop
sub
leave
std
aad
(bad)
pusha
aas
mov
and
and
jbe
and
or
or
xor
or
je
push
jne
xchg
mov
xchg
pop
cmp
mov
ror
xchg
mov
xlat
inc
adc
mov
xor
push
jnp
jge
test
(bad)
ja
jae
sbb
mov
mov
mov
xor
fcom
pop
enter
clc
fisub
pop
adc
pop
dec
or
leave
leave
(bad)
mov
jae
xor
pop
dec
rol
dec
push
bound
jl
push
pop
sti
out
call
js
push
mov
push
and
or
dec
cmp
push
push
retf
adc
fidiv
mov
ins
inc
jge
xor
mov
push
mov
adc
bound
out
push
xor
test
xor
mov
cs
xchg
lock
jae
lods
test
mov
push
fucomi
test
out
dec
push
aam
push
mov
cld
jmp
pop
movs
pop
ficom
je
(bad)
outs
(bad)
addr16
xchg
mov
push
aam
jbe
pop
add
imul
popa
xchg
ss
out
mov
sbb
test
call
fsubrp
pop
xchg
jnp
data16
scas
cdq
or
or
int
fst
sub
int3
nop
ret
shr
jne
jmp
mov
mov
sub
hlt
lea
das
das
sub
xor
and
ficomp
lahf
inc
xor
dec
cwde
inc
hlt
retf
aaa
outs
or
(bad)
(bad)
pushf
or
and
sbb
xchg
adc
mov
pop
ja
xor
mov
mov
dec
int
repz
mov
push
push
dec
loop
int
push
rcl
and
test
and
adc
inc
cmp
jo
push
pop
mov
into
push
aad
xchg
ret
xor
inc
iret
xchg
out
sahf
arpl
and
dec
mov
mov
(bad)
xchg
repnz
ins
(bad)
sub
push
jb
inc
mov
imul
mov
fsubr
loopne
pop
xor
adc
clc
pop
xor
test
fnstcw
addr16
ret
adc
int3
loopne
shl
sbb
mov
xchg
out
retf
jge
inc
cld
stc
dec
(bad)
pop
call
pop
test
inc
inc
daa
mov
xchg
jae
fwait
cmc
cmp
imul
lods
jb
in
iret
in
and
aam
xchg
in
cmp
and
mov
pop
mov
ds
jno
stos
pop
mov
arpl
mov
test
add
and
arpl
mov
jge
push
div
(bad)
aam
sbb
je
cmc
xchg
sbb
test
or
stos
dec
add
jnp
xchg
cmp
pushf
shl
sar
push
mov
daa
pop
xchg
xor
cmp
mov
sub
xor
pop
xor
in
stos
test
icebp
jle
jp
jecxz
imul
inc
mov
add
push
or
pop
out
pusha
add
pushf
or
iret
test
xor
dec
hlt
cmp
jmp
leave
add
loope
push
mov
mov
in
xchg
xchg
adc
cwde
dec
sub
daa
jne
data16
bsf
in
je
mov
fmul
(bad)
bound
fadd
jp
ins
ss
sub
outs
js
jmp
xor
jp
inc
adc
daa
pop
adc
sti
(bad)
fwait
sbb
nop
(bad)
pop
sar
jmp
sbb
mov
stos
gs
call
pop
jns
mov
jo
sub
pusha
stc
in
fwait
stos
pop
ret
aam
loope
xchg
movs
xchg
sbb
sub
ins
scas
sub
xlat
fsub
mov
adc
mov
mov
in
inc
push
add
cmp
std
mov
out
rcl
inc
and
cmp
fwait
mov
in
int
mov
push
inc
dec
and
out
sub
int3
jmp
push
(bad)
aad
mov
js
jo
mov
(bad)
lods
jge
lock
movs
mov
movs
mov
(bad)
mov
popf
inc
sub
push
pop
inc
sbb
add
mov
mov
mov
adc
cli
in
cli
sahf
pop
imul
(bad)
(bad)
dec
mov
and
cmps
mov
xchg
xor
jne
push
sub
or
ret
and
sub
shl
int3
add
sub
(bad)
adc
(bad)
jmp
jbe
repnz
jge
inc
mov
mov
dec
dec
pop
add
cmp
lods
mov
sub
inc
mov
aaa
inc
mov
xor
sbb
dec
pop
xchg
pop
or
add
adc
movs
les
fsub
int
fld
pushf
shl
shr
xor
xor
cmp
mov
test
pop
and
lahf
mov
push
cld
sahf
stos
(bad)
jecxz
and
clc
daa
cmps
xor
or
call
imul
cmc
jnp
retf
test
xchg
out
test
xchg
add
dec
mov
(bad)
sub
mov
das
pop
xor
xlat
rcr
dec
push
adc
cli
mov
lahf
inc
test
enter
mov
in
adc
sub
ss
in
(bad)
cmc
cwde
aam
mov
dec
clc
mov
pop
dec
movs
out
out
mov
fcomp
daa
stc
pop
adc
inc
xchg
xor
mov
es
cmp
dec
sbb
and
push
xchg
pop
dec
iret
das
jae
into
out
adc
shl
dec
(bad)
sub
mov
and
jle
push
xchg
sbb
sahf
push
scas
mov
mov
gs
test
mov
jmp
(bad)
push
fwait
addr16
xchg
movs
bound
test
mov
sbb
fadd
ret
cmp
jg
or
test
push
xchg
and
push
(bad)
into
jo
call
cmc
movs
test
push
mov
dec
out
es
ret
adc
mov
sub
pop
rcl
addr16
inc
mov
cmp
mov
xchg
data16
dec
mul
nop
sahf
and
mov
cmp
pop
imul
cs
xor
cmp
int3
das
scas
in
data16
push
shl
sbb
pop
aas
mov
std
vpshuflw
das
mov
out
jge
test
cmp
jp
not
cwde
push
test
ltr
movs
mov
ja
imul
(bad)
cmps
dec
jns
mov
or
and
retf
sub
lea
imul
pop
mov
mov
ret
xchg
ja
sbb
jg
cmps
outs
sub
inc
retf
fld
ins
cmp
loop
and
shr
retf
jo
or
inc
dec
add
mov
pushf
popf
loope
mov
mov
lds
mov
mov
mov
out
xor
pop
ds
adc
cmps
xor
int3
loope
pop
mov
push
jns
pusha
and
mov
into
jnp
push
add
mov
rcl
xchg
inc
gs
jle
or
cmps
aad
ins
xchg
ret
out
mov
hlt
cmp
ret
dec
sti
fcomp
ficom
lds
call
add
jae
ret
push
cdq
jle
ror
xlat
push
scas
ja
jecxz
leave
retf
repz
ficom
jmp
sub
inc
cs
(bad)
xlat
inc
pop
(bad)
add
dec
pop
cmp
sbb
out
add
sub
sbb
(bad)
sub
mov
stos
mov
or
test
push
push
ins
adc
das
stc
sub
ret
xlat
push
out
xchg
add
repnz
ds
sub
jle
cwde
out
lods
add
icebp
add
ins
jmp
pop
fisub
dec
fdiv
mov
pop
sub
scas
pop
daa
pop
cmps
push
loopne
lods
jnp
stos
mov
mov
cdq
pop
leave
pop
shr
lahf
xadd
fcomp
dec
adc
outs
out
and
xchg
std
mov
mov
ret
sub
mov
scas
mov
mov
bound
add
retf
jge
shr
leave
stc
fst
stos
inc
jg
pop
jp
push
lock
daa
out
xchg
xchg
fcomp
cmc
jb
ret
gs
cmp
cmp
mov
gs
pop
cmp
int3
dec
fs
or
dec
pop
pop
retf
outs
pop
mov
inc
xchg
cmc
lfs
test
in
repz
movs
xor
mov
dec
in
les
mov
mov
jbe
jb
bound
add
mov
ret
jmp
push
sub
xor
sub
or
sub
daa
imul
sub
sbb
mov
ret
mov
mov
fwait
rol
(bad)
cld
inc
test
fwait
xchg
(bad)
ret
jmp
and
mov
push
mov
push
or
rcl
xor
or
sub
lods
ins
mov
add
cs
sub
out
xor
or
int3
dec
sub
adc
xchg
and
ret
dec
pop
push
cld
adc
mov
and
mov
and
fisttp
call
retf
(bad)
cli
sti
pushf
xchg
std
push
fwait
add
pop
adc
(bad)
cmps
aam
xchg
fwait
std
ret
or
or
retw
dec
jno
pushf
mov
cld
sbb
je
add
icebp
and
or
mov
mov
mov
movs
sub
je
data16
retf
dec
cmc
jp
dec
mov
or
push
or
mov
cdq
dec
in
out
(bad)
mov
xchg
in
mov
pop
into
into
lods
in
xor
rcl
xor
aad
sub
push
dec
add
sub
and
das
inc
push
pushf
jg
inc
jo
pop
push
outs
and
jae
adc
icebp
sbb
xor
mov
and
pop
add
rol
inc
outs
xchg
imul
stos
mov
sub
push
movs
aas
and
sbb
test
xor
(bad)
mov
mov
sbb
ins
sub
pop
and
loop
and
xchg
test
inc
mov
or
mov
out
inc
mov
add
dec
cmps
jnp
mov
stc
ins
daa
add
dec
icebp
ja
shl
ins
adc
fnstcw
dec
outs
lods
mov
retf
add
push
sub
mov
sbb
push
inc
movs
dec
pop
jp
(bad)
sub
and
shr
mov
pminub
mov
jl
sti
inc
push
stos
into
sub
daa
mov
sub
in
retf
xchg
adc
aad
sbb
sbb
into
adc
mov
ins
mov
stos
ret
cmp
adc
sahf
push
mov
movs
neg
in
dec
cmp
adc
movs
push
ins
pop
inc
fs
xor
test
fwait
enter
cmovne
nop
add
pop
jmp
pop
ret
adc
inc
xchg
mov
(bad)
xor
int3
dec
pop
scas
add
pop
enter
in
xrelease
(bad)
mov
shl
iret
push
daa
aaa
cmp
lods
push
mov
ss
fwait
bound
and
inc
sbb
and
mov
pushf
std
lea
cmc
sub
movs
cmps
push
and
movs
xchg
lods
mov
and
aaa
inc
mov
push
into
adc
and
cmps
pop
xchg
mov
mov
add
imul
adc
cmp
add
loope
cmp
lds
imul
cmp
ja
jmp
inc
clc
xor
jb
adc
push
fild
stos
jae
pop
sbb
call
pop
xchg
aaa
cmps
mov
div
sub
dec
add
dec
fild
and
js
mov
sub
fwait
inc
xor
mov
push
leave
dec
push
cdq
mov
ret
movs
ret
stc
cdq
gs
xor
jl
cmp
or
inc
jne
adc
into
sub
xchg
jo
fst
or
push
leave
jle
push
sti
loopne
scas
sub
in
dec
sub
xchg
dec
jno
sar
or
aam
xchg
imul
dec
fisttp
mov
xchg
jmp
xchg
jno
xchg
push
xor
ds
int
shl
adc
or
mov
and
xchg
xchg
push
retf
test
icebp
mov
pop
or
adc
inc
imul
xchg
call
lahf
add
jmp
ret
out
loope
xor
xchg
cld
mov
stos
pop
repz
test
and
mov
mov
jp
lods
add
dec
dec
cs
jmp
mov
xchg
in
mov
retf
rcr
inc
sbb
dec
xor
inc
jge
add
sbb
jmp
popa
mov
jbe
push
xchg
cmps
jb
sbb
cs
jo
mov
out
pop
rcl
mov
pop
in
add
push
inc
or
cdq
and
pop
and
les
xchg
mov
into
push
sahf
sar
and
pushf
call
sahf
sbb
mov
jne
aaa
lahf
(bad)
data16
mov
push
ins
pop
push
inc
sbb
cs
mov
xor
fisubr
scas
cdq
data16
repz
stos
jb
inc
imul
lahf
jecxz
mov
int
test
jle
call
dec
lods
jmp
mov
add
jnp
push
stos
stc
sub
clc
cmc
ja
push
xor
mov
inc
cmps
push
add
(bad)
stos
cmp
ret
lds
outs
(bad)
lea
loop
mov
mov
lods
pop
daa
dec
sahf
or
xor
fadd
adc
ret
scas
xchg
fild
dec
mov
mov
cs
jp
jnp
sub
mov
ins
mov
sbb
jl
ret
mov
mov
bound
ds
ja
out
(bad)
pop
shl
xchg
and
stc
inc
out
stos
outs
sbb
mov
mov
pop
imul
cwde
push
cmp
pop
add
scas
scas
sahf
inc
jp
rcr
mov
outs
push
cld
fcmovbe
xor
enter
inc
mov
(bad)
cld
or
dec
mov
jno
dec
mov
daa
inc
adc
rol
cdq
add
jno
jle
dec
fistp
sbb
in
add
sbb
push
repz
out
daa
push
out
pop
mov
adc
fisttp
js
addr16
pop
sub
adc
mov
jmp
dec
stos
jmp
gs
nop
(bad)
in
ret
int3
fsubp
loopne
xchg
pusha
cmp
pop
mov
xchg
mov
aas
aas
mov
add
push
push
pop
push
pop
sub
fistp
cmc
sbb
sub
push
mov
pop
push
push
adc
movs
push
inc
idiv
ja
ins
pop
or
int3
popa
sub
hlt
cld
int3
cli
add
mov
cs
fstp
imul
xchg
mov
push
ret
dec
cmp
imul
dec
push
mov
adc
jmp
icebp
sbb
mov
add
ret
jg
mov
adc
(bad)
popf
sub
shl
sti
inc
loopne
ret
mov
cwde
adc
jb
inc
mov
add
xor
test
(bad)
int3
cld
les
fs
stos
out
ror
mov
dec
inc
aam
adc
fist
fsubr
dec
jns
nop
sbb
cmps
mov
bound
and
aam
jecxz
xchg
fwait
mov
and
sub
cwde
in
aaa
pop
add
iret
and
push
or
mov
mov
cmp
xlat
mov
dec
shl
sar
das
inc
repnz
jo
test
mov
jmp
or
dec
lea
movs
jns
sub
push
pusha
xchg
out
sub
js
pop
fcmove
int
mov
add
cli
dec
mov
sbb
mov
call
cmp
cld
ss
jmp
cmp
xchg
xchg
je
test
and
dec
push
inc
aas
mov
xchg
repnz
lds
sti
out
inc
jle
cmp
hlt
add
sbb
loope
push
lahf
shr
or
dec
cmp
es
mov
in
cli
test
in
xchg
iret
mov
cmc
inc
sub
icebp
int3
in
sub
dec
push
ss
jbe
outs
xchg
push
(bad)
xor
(bad)
jmp
xlat
cmp
mov
and
idiv
mov
jp
fldenv
stos
retf
loopne
jmp
or
xchg
lods
imul
lods
hlt
xchg
pop
pop
int3
sub
je
ins
iret
cmp
aad
jo
add
push
js
movs
mov
xchg
out
retf
(bad)
icebp
addr16
and
sbb
mov
mov
xchg
into
ret
sbb
add
mov
test
mov
rcr
jmp
dec
push
(bad)
add
sbb
mov
inc
or
in
je
mov
fisub
(bad)
mov
hlt
push
bound
xchg
adc
fs
scas
fild
cmp
fsub
ins
push
dec
xchg
loope
mov
inc
push
and
dec
jmp
out
jge
retf
(bad)
in
call
add
add
cmp
scas
sub
ss
pusha
adc
into
icebp
test
xchg
xchg
xchg
xchg
mov
jge
or
movs
xchg
cmps
loop
call
xchg
jge
xchg
in
stos
lods
jns
jne
popa
popa
pop
adc
push
push
ret
outs
xchg
jns
and
cmp
(bad)
mov
aad
or
ficomp
inc
and
xchg
mov
and
sbb
dec
xor
imul
mov
mov
adc
fbld
arpl
sahf
mov
push
in
jnp
movs
rol
and
int
mov
and
in
mov
fwait
push
(bad)
mov
(bad)
jb
repz
ret
pop
repnz
cmps
add
addr16
mov
dec
in
xchg
ret
adc
cli
jge
movs
or
cmp
adc
mov
es
sbb
fdiv
sub
pop
or
(bad)
sti
push
scas
xchg
sbb
sbb
xchg
mov
cli
mov
xchg
or
icebp
in
outs
int
xor
ins
xor
fidiv
ss
xchg
ds
sbb
or
or
mov
lock
test
leave
inc
fdivp
data16
push
fadd
out
retf
mov
mov
mov
mov
jl
sbb
push
jae
loopne
sbb
test
inc
push
pop
sbb
pop
test
cld
scas
(bad)
dec
mov
test
pop
bound
pop
cmps
cwd
ret
pop
(bad)
fistp
or
jle
xchg
push
pop
xchg
xchg
xor
cmp
push
mov
les
fs
xchg
aam
lods
inc
test
call
lds
jb
pop
push
sbb
call
pop
dec
adc
mov
sub
inc
sahf
and
rol
sub
je
in
sahf
lock
shl
jle
ins
jns
outs
cmps
lahf
mov
imul
push
cmc
dec
fdivr
push
push
or
leave
icebp
les
mov
jge
out
stos
sub
jge
ss
stos
lods
push
dec
sbb
dec
or
and
adc
ret
xchg
adc
push
fwait
jae
ret
xchg
mov
scas
pop
arpl
(bad)
sbb
adc
test
ds
test
sbb
xor
outs
pop
cmps
push
in
jge
jp
xchg
mov
mov
sub
jo
mov
mov
add
out
cld
scas
je
inc
pop
sbb
mov
cld
dec
(bad)
sbb
mov
and
out
adc
jnp
movs
xchg
add
(bad)
pusha
and
sbb
cmp
loop
shl
mov
(bad)
xlat
dec
cs
cmps
addr16
mov
outs
dec
jns
repnz
jg
sbb
pop
xor
add
movs
adc
push
mov
push
retf
dec
dec
mov
icebp
xchg
xor
ror
out
adc
and
xchg
push
jmp
nop
out
aad
mov
aam
xrelease
imul
enter
arpl
cmps
test
scas
xor
mov
or
jp
stos
jno
mov
scas
sub
push
adc
hlt
(bad)
cdq
scas
mov
dec
xor
mov
pop
movs
add
(bad)
fisubr
out
adc
aaa
icebp
adc
xor
jmp
push
sbb
push
repnz
xchg
leave
out
pop
adc
and
inc
xor
add
icebp
sbb
jbe
add
cli
cli
or
dec
ins
pop
in
or
cmps
out
(bad)
adc
mov
in
test
jo
mov
inc
je
pop
(bad)
fwait
jmp
xchg
jl
jle
push
aam
popf
loop
push
cmp
push
lods
mov
ins
xor
pop
adc
call
scas
pop
push
mov
push
xor
sub
or
pop
pop
xor
dec
cmp
sti
xchg
xchg
repz
cmps
cdq
adc
pop
sub
push
mov
adc
mov
int3
jo
cmps
xlat
test
xchg
and
pop
rcl
pop
(bad)
xchg
sar
mov
mov
cmp
mov
mov
in
fld
sbb
mov
(bad)
xlat
push
ror
pop
mov
cmp
mov
adc
rcl
push
je
test
lea
adc
lods
popf
xchg
pop
(bad)
push
rcl
add
jo
retf
add
outs
aas
(bad)
lahf
into
push
pop
cli
inc
xchg
mov
les
into
pop
pop
call
in
dec
js
jno
mov
xchg
repz
xchg
scas
adc
jmp
inc
addr16
sub
sub
outs
shl
je
lds
mov
cmps
iret
stc
ja
mov
(bad)
mov
fadd
test
mov
jns
int
xchg
cwde
push
cwde
ins
jecxz
cdq
mov
push
mov
iret
je
cmp
clc
test
and
sbb
xchg
int
stos
jge
inc
or
push
inc
(bad)
call
arpl
add
jbe
ja
je
inc
pop
dec
movs
dec
push
into
xchg
sbb
ds
push
jg
add
ja
pop
xchg
enter
jo
jecxz
adc
add
mov
(bad)
std
mov
mov
xchg
es
xlat
sbb
push
mov
iret
pop
arpl
mov
cmp
xchg
adc
pushf
int3
xchg
or
cmp
lods
xchg
mov
mov
xchg
push
adc
push
inc
lahf
pop
sar
fadd
lea
aas
adc
inc
cmp
xchg
fwait
mov
or
movs
call
aas
mov
xlat
les
sub
(bad)
inc
mov
ss
cmp
cmc
retf
cmp
cmp
pop
push
mov
xchg
fist
retf
jg
xchg
sahf
fild
cli
test
adc
call
loopne
imul
and
or
popf
retfw
xchg
in
adc
nop
cmp
enter
xchg
cmp
dec
dec
mov
pop
arpl
daa
dec
fidiv
dec
hlt
jle
pusha
inc
inc
pop
movs
inc
pop
ja
fstp
xchg
push
jmp
jns
aaa
clc
or
fld
paddsw
mov
(bad)
sti
mov
in
mov
mov
lock
int3
or
add
adc
add
fnstcw
mov
pop
icebp
pop
iret
jo
popf
popf
xchg
imul
push
sbb
xor
retf
aaa
jge
bound
outs
mov
jnp
data16
push
retf
in
imul
gs
pop
sbb
shl
pop
nop
xchg
lea
iret
jb
ins
push
shr
les
ins
cmc
popf
not
loopne
mov
push
dec
imul
outs
mov
jne
inc
mov
jae
and
aad
inc
xchg
sub
ret
jbe
ja
cmp
mov
xchg
or
retf
out
push
xor
fnstenv
push
scas
(bad)
dec
test
cmp
stos
or
pop
loope
push
fist
movs
rcr
mov
jmp
mov
pusha
mov
loopne
call
add
lods
jecxz
into
xor
add
xor
or
sahf
jge
lock
xchg
mov
jb
dec
jo
mov
ret
sub
hlt
sbb
jg
stc
stos
jg
pop
(bad)
out
xor
enter
mov
fmul
xchg
jge
sar
or
leave
and
cld
mov
jno
arpl
mov
xor
push
and
enter
adc
pop
pop
cmps
shr
lds
ret
cmp
fadd
retf
ja
add
adc
ss
or
mov
adc
mov
xchg
xor
push
outs
(bad)
cmp
or
cld
push
bound
mov
add
jnp
push
xor
push
jno
lock
loop
(bad)
mov
(bad)
mov
jo
pop
stos
inc
hlt
sbb
xchg
push
mov
pop
mov
das
int
adc
sbb
jno
in
(bad)
jmp
in
cmp
in
cmp
jne
jae
rol
xchg
mov
stc
pop
movs
rol
call
mov
cdq
xchg
push
pop
retf
pop
adc
sti
lock
xchg
mov
cmc
retf
and
and
retf
mov
inc
sbb
pop
mov
shr
push
cmp
imul
dec
pop
jmp
cmps
pop
loopne
in
jo
cwde
ret
cmp
dec
cmps
cmp
push
(bad)
adc
mov
loopne
sub
dec
dec
jp
les
push
fpatan
repnz
pop
cmp
pop
inc
adc
cmp
xchg
out
mov
daa
xor
mov
(bad)
push
mov
mov
xor
adc
add
adc
mov
fnsave
retf
jbe
mov
in
xchg
push
push
jae
shl
mov
enter
stc
sub
sti
mov
push
pop
aas
and
cs
test
into
icebp
movs
fsqrt
cmp
lods
mov
mov
pusha
lock
mov
jbe
(bad)
bnd
int3
push
pop
pop
sbb
mov
aam
sti
jb
retf
jmp
xchg
mov
jmp
xchg
or
imul
or
cmps
pop
shl
lahf
adc
sbb
arpl
xchg
or
dec
out
xchg
pop
rcr
jmp
dec
call
sbb
outs
mov
pop
xchg
hlt
outs
adc
push
iret
cwde
jae
repnz
dec
sub
mov
pop
inc
sub
int3
add
push
cdq
mov
lock
fcomp
xor
inc
out
sbb
in
ror
pop
jns
inc
xor
das
xchg
pop
and
je
lds
xchg
adc
lods
std
mov
xchg
xor
mov
cwde
sbb
rcr
sbb
in
jno
or
ja
xor
sbb
maxps
out
in
jb
jg
jmp
push
mov
lar
aas
dec
cmps
test
xchg
add
in
dec
cmc
aaa
ins
outs
sar
jne
inc
mov
sbb
jmp
hlt
mov
arpl
mov
or
cld
push
pop
sub
repz
std
cs
stc
push
add
mov
pusha
data16
xchg
call
mov
jp
push
call
add
sub
(bad)
jae
jo
inc
(bad)
(bad)
stc
add
push
in
jno
fiadd
cmps
fsub
out
cmps
jb
jecxz
(bad)
stc
inc
icebp
inc
call
sbb
and
cmps
xlat
sub
test
fld
xor
xchg
fistp
xchg
imul
and
mov
ja
mov
sbb
fnstenv
xchg
dec
sub
mov
out
(bad)
out
or
mov
push
sub
mov
jge
clc
test
sbb
lahf
or
cmp
push
pop
xchg
retf
jmp
out
inc
aam
and
sub
cmps
inc
ss
add
loope
lds
(bad)
call
jcxz
jecxz
clc
jne
je
rcr
test
mov
cdq
fiadd
inc
retf
out
jmp
(bad)
cmp
xor
leave
xchg
dec
add
sub
adc
std
shl
jnp
inc
cmp
mov
jmp
fld
je
push
cmp
cmps
repz
mov
mov
sbb
cld
push
retf
jg
mov
mov
jne
loop
or
jecxz
fs
sub
xor
and
push
jnp
sbb
movs
cmps
popf
or
leave
stos
xor
xor
mov
cli
into
xor
addr16
fs
or
hlt
add
cmp
inc
lods
je
gs
mov
cmp
pop
sahf
lea
shl
push
inc
jg
mov
xor
movs
and
(bad)
xchg
test
cmps
mov
mov
test
sub
sub
data16
out
mov
dec
fcmovu
loopne
jl
bound
shl
cmc
cdq
iret
or
inc
sub
mov
and
mov
and
arpl
xchg
sub
mov
stc
jecxz
adc
les
addr16
rcr
jle
aam
mov
int
out
add
aad
(bad)
mov
sub
(bad)
fwait
in
test
iret
push
and
jle
popf
fimul
lock
sbb
push
fcmovu
call
outs
sahf
test
xchg
call
shl
mov
add
xchg
xor
add
pushf
mov
sub
icebp
lea
ins
addr16
jbe
mov
cmp
scas
dec
pop
jno
bound
es
push
ins
shl
xchg
das
push
retw
int
enter
test
sahf
fwait
lock
mov
and
pop
aas
pop
inc
lds
push
loopne
fdivr
mov
push
imul
mov
mov
mov
mov
jne
pop
and
lods
jge
xchg
sub
lds
fs
scas
shr
test
sbb
cmp
pop
scas
ins
(bad)
movs
ins
stc
push
xchg
fist
cmp
adc
xchg
xchg
popf
jb
sub
pop
out
pop
pop
or
xor
lahf
lods
call
xchg
jmp
sub
pop
add
dec
test
bound
sub
popa
scas
pop
rcl
sbb
add
sti
jmp
jmp
pop
sub
pop
test
sub
mov
scas
lods
(bad)
mov
push
sub
(bad)
cld
and
mov
fcomp
lahf
test
out
push
dec
mov
lock
mov
push
add
cs
movs
push
cmps
jecxz
inc
sbb
jno
mov
jae
cdq
cmps
xor
jbe
adc
xlat
dec
or
inc
call
xor
mov
add
sub
test
aad
mov
cmp
xor
stc
push
xor
fcomi
pusha
push
mov
int3
aaa
int
es
cmps
xchg
jp
cmps
bound
movs
fcmovu
into
jae
xor
add
inc
(bad)
mov
out
scas
mov
dec
mov
imul
popf
and
repz
cmc
dec
xchg
mov
sbb
leave
cwde
inc
mov
mov
arpl
xor
out
or
mov
scas
xor
cmp
fisttp
dec
repz
cmps
fwait
pop
dec
adc
pusha
xor
xchg
icebp
int
fisttp
push
movs
sbb
jbe
gs
or
adc
inc
nop
pop
pusha
aas
fisubr
sub
scas
ret
mov
lds
ins
lds
adc
sbb
jecxz
mov
ret
or
inc
test
and
mov
sub
mov
jb
loopne
adc
call
sub
movs
jmp
ret
inc
sbb
pop
mov
sti
mov
sub
inc
cmps
inc
fild
and
pop
jmp
iret
pop
pop
(bad)
xchg
push
rol
dec
pop
cmp
test
mov
sti
mov
loope
xor
shl
hlt
das
neg
or
js
into
call
adc
fwait
addr16
cmp
(bad)
jmp
cli
mov
pop
call
les
int3
pop
mov
xor
pop
(bad)
and
xchg
jne
sbb
jns
ficom
mov
ins
jne
mov
mov
movs
enter
aaa
mov
mov
addr16
jno
out
repnz
pop
mov
push
(bad)
inc
jae
loop
sbb
push
push
repz
stc
(bad)
xlat
add
adc
pop
push
pop
lea
outs
pop
test
add
and
jle
test
adc
xor
push
cmp
int3
fisttp
pushf
sub
push
clc
repnz
sbb
inc
sbb
sub
rcr
xchg
inc
repz
nop
or
mov
xlat
mov
pop
dec
mov
sub
clc
push
push
pop
cmp
icebp
call
pop
or
sbb
adc
dec
int3
mov
call
cmp
mov
(bad)
das
xchg
fs
sbb
shr
loop
mul
stc
arpl
ret
dec
push
pop
and
into
dec
or
dec
fld
test
dec
add
adc
or
sub
shl
test
popf
stos
mov
or
fstp
fstp
inc
in
mov
sub
test
mov
inc
xlat
mov
das
les
stos
ret
mov
push
sbb
rcr
scas
fsubr
sbb
std
scas
es
mov
adc
fdivrp
shr
test
push
sbb
daa
jmp
pop
and
xor
outs
movs
fwait
or
(bad)
ror
ret
sbb
in
mov
cli
rcr
inc
jl
sbb
mov
and
push
(bad)
imul
push
sti
mov
and
clc
sub
sub
mov
cmp
arpl
push
ret
(bad)
lods
push
lods
xchg
mov
push
je
inc
cmps
retf
neg
aad
mov
sub
fcom
cmc
out
rol
adc
icebp
(bad)
and
mov
out
(bad)
fisttp
jno
push
add
jae
data16
mov
leave
fisub
fnstsw
sbb
dec
jp
sub
mov
fs
in
std
aaa
lock
dec
cmp
lds
(bad)
push
adc
stos
mov
xor
pusha
ins
jl
imul
ins
cwde
lods
js
(bad)
rcr
addr16
lds
(bad)
jbe
mov
loope
aam
push
jl
(bad)
xlat
mov
loope
add
dec
sub
shl
xchg
xchg
jecxz
lods
pusha
fstp
mov
popa
outs
hlt
into
hlt
dec
mov
mov
and
mov
cmps
ror
pop
jle
ret
or
adc
fwait
imul
xor
arpl
cld
xchg
jns
std
push
sti
push
adc
push
mov
xor
add
into
repnz
out
inc
cld
xchg
not
loope
jl
and
xchg
cmps
cmp
cmp
repz
jmp
scas
or
add
(bad)
mov
(bad)
push
leave
mov
mov
xchg
or
hlt
pop
push
sbb
mov
xor
push
or
mov
je
pop
or
test
iret
push
or
jns
rcr
mov
jb
out
lock
cdq
test
and
mov
stos
mov
aad
test
push
jecxz
sysenter
add
aaa
cmp
bnd
mov
jns
jmp
xchg
ret
ret
pop
ja
sub
in
jge
js
clc
in
xchg
mov
cmp
sub
and
and
in
fisttp
dec
inc
xchg
mov
mov
jecxz
cmp
mov
imul
out
pop
or
pop
js
push
call
clc
adc
(bad)
sub
xor
cmc
sbb
sub
mov
ror
mov
sbb
xchg
push
cs
mov
movs
mov
clc
fisttp
test
ins
ja
sbb
in
mov
push
cmc
push
popf
cld
pop
push
jmp
mov
push
dec
mov
mov
sbb
sbb
cmps
cmp
ror
inc
popa
xchg
int
jb
push
cmp
push
xchg
test
fwait
int
pop
inc
or
stos
cli
jns
out
or
mov
ror
fcom
arpl
sub
push
int
shl
pop
mov
or
dec
jnp
or
inc
push
fisub
dec
lea
adc
std
pop
add
into
lea
mov
loop
fucomi
pop
lea
push
pop
jbe
xlat
dec
and
pop
mov
cmp
mov
mov
sar
sub
stc
scas
not
bnd
mov
dec
push
or
daa
pop
add
sub
into
(bad)
or
loop
jecxz
test
outs
pop
repnz
icebp
mov
dec
int3
ins
jl
jge
xchg
div
xchg
pop
bound
cmp
xchg
dec
leave
dec
pop
lods
pop
(bad)
jge
ds
xchg
fnstcw
int3
out
adc
addr16
jl
cdq
aaa
(bad)
inc
into
pop
movs
pop
push
movs
inc
(bad)
mov
je
xchg
movs
mov
xchg
sub
call
into
sbb
sub
out
and
xor
shr
cmps
repz
mov
rcr
push
out
pusha
xor
xor
scas
loope
movs
cmp
lahf
sahf
push
movs
jo
jae
or
add
enter
cmp
iret
and
scas
and
iret
outs
adc
imul
mov
mov
mov
daa
je
jo
jae
ja
sub
test
(bad)
dec
sub
gs
and
or
mov
jae
pop
jbe
jns
cmp
xor
sbb
or
push
pop
cmp
sbb
(bad)
mov
cmps
pop
data16
inc
pop
mov
pop
and
js
cmp
ja
or
push
pop
out
mov
fmul
adc
ss
cmp
rcl
sbb
push
aas
popa
cmc
push
mov
cmp
mov
lods
jns
push
(bad)
jno
xchg
fstp
stos
jns
adc
sub
ins
(bad)
xor
sbb
xor
pushf
icebp
dec
cwde
xor
pop
pop
xchg
pop
add
mov
loope
mov
leave
and
fcmovne
aaa
test
in
pop
add
(bad)
dec
outs
(bad)
arpl
(bad)
fmul
test
clc
pop
enter
or
push
hlt
ror
mov
pop
retf
sub
(bad)
and
test
retf
stos
rcr
sbb
outs
mov
nop
dec
mov
xchg
xor
push
push
mov
xor
and
or
aaa
xchg
mov
jbe
xchg
mov
mov
clc
in
data16
dec
(bad)
lahf
lods
fild
outs
(bad)
mov
jge
adc
icebp
mov
pushf
pushf
sub
jmp
pop
or
hlt
mov
mov
sub
push
test
add
aad
sbb
cmp
es
xor
dec
jbe
lods
aam
mov
cmps
push
or
pop
jge
jnp
ins
mov
fucomi
mov
adc
sbb
sbb
retf
ret
int3
add
in
stos
test
pop
daa
dec
cld
and
jl
mov
pop
popa
cwde
mov
pop
pushf
ret
mov
cmp
out
call
shl
ja
and
cmp
jg
jp
stos
inc
and
ret
mov
frstor
sbb
rcr
dec
jge
mov
outs
jne
lods
jg
sub
jns
or
sbb
dec
loop
mov
(bad)
pop
and
push
dec
add
cmp
pop
inc
sar
jnp
mov
adc
xchg
inc
out
mov
mov
mov
sub
mov
xor
xor
scas
inc
sbb
dec
jno
addr16
jnp
xchg
xlat
imul
jecxz
dec
fstp
push
mov
fwait
xchg
int3
test
cdq
pop
mov
jecxz
mov
out
arpl
imul
outs
sbb
sbb
cmp
push
cmp
call
add
jns
cmp
fmul
cmps
cdq
fsubr
fs
pop
xor
aam
pop
mov
and
mov
dec
push
outs
adc
push
or
adc
pop
pop
xchg
jnp
movs
add
pop
sbb
adc
pop
pushf
jnp
and
xor
mov
mov
xlat
pop
adc
dec
les
sahf
mov
add
or
les
mov
xchg
aaa
mov
aam
dec
loop
rcr
maskmovq
mov
and
jnp
frstor
lock
push
cwde
stos
jle
mov
dec
stos
mov
seta
push
(bad)
loopne
mov
inc
shl
jl
mov
dec
in
inc
adc
stos
mov
mov
shl
mov
pop
cmc
add
(bad)
or
scas
mov
sbb
jne
sbb
int3
ret
movs
stos
in
aas
cld
ror
sub
mov
mov
loope
pop
pusha
outs
jne
or
mov
daa
loope
or
mov
pop
adc
movs
fstp
pop
cmp
call
xor
test
push
jge
cmp
xchg
or
or
sbb
cmp
jne
mov
lds
xor
push
jmp
sub
in
retf
ret
rcl
aad
ret
lds
mul
mov
cwde
imul
outs
jmp
pop
pop
jl
jg
adc
imul
stos
(bad)
cmp
outs
mov
fidivr
inc
jo
or
aam
aad
fwait
stos
mov
xlat
inc
stos
sub
push
inc
sbb
dec
dec
or
sbb
jne
dec
mov
int3
lea
xor
int3
lahf
and
mov
jnp
add
jge
in
xchg
xchg
(bad)
out
js
adc
or
mov
inc
ror
jg
cmps
dec
call
call
jle
(bad)
enter
retf
enter
xor
and
jmp
lds
add
mov
loopne
sti
cmp
shl
xchg
sti
aam
inc
test
loop
inc
or
jns
lods
les
lods
adc
ret
xchg
inc
(bad)
dec
es
mul
add
aaa
adc
xlat
add
test
ins
adc
sbb
js
lock
inc
sbb
sub
pushf
aas
xor
mov
pushf
retf
push
xchg
xchg
inc
inc
aas
ret
dec
pop
mov
jns
std
test
xchg
loopne
xchg
pop
inc
stc
cmps
pop
aas
test
icebp
aad
(bad)
jae
inc
in
gs
sbb
mov
std
ror
push
inc
gs
(bad)
jne
mov
and
lds
xchg
xchg
addr16
mov
nop
loopne
xor
jno
or
popf
outs
mov
rol
int3
push
aad
shl
pop
mov
dec
xor
retf
outs
mov
in
xchg
cmp
xchg
and
pop
mov
sub
sbb
jl
sub
add
or
jmp
and
mov
clc
in
out
stos
lahf
loope
push
inc
aam
mov
dec
nop
add
(bad)
(bad)
mov
mov
daa
mov
ins
push
push
ret
out
mov
xor
cmp
call
pop
ins
inc
mov
daa
pushf
int3
shl
xchg
inc
add
sbb
daa
push
xchg
(bad)
(bad)
jno
and
sbb
xchg
stc
adc
xor
pop
int
(bad)
pop
and
or
lea
fdivr
fisubr
adc
cmp
je
and
push
mov
stos
outs
pop
test
retf
popa
xor
cmps
pusha
add
cmps
js
or
sub
mov
je
movs
inc
jle
mov
pusha
cwde
aaa
jl
stos
jnp
mov
adc
jnp
sbb
out
xchg
out
jp
jmp
pop
ds
test
mov
ret
mov
mov
push
in
or
int3
or
in
pop
(bad)
cmp
cmps
shr
jnp
pop
popa
ss
arpl
std
sbb
mov
hlt
test
or
cli
ja
fdivrp
xchg
pop
dec
hlt
outs
(bad)
jge
dec
push
std
inc
sahf
jmp
pop
ss
popa
fs
mov
mov
inc
sbb
mov
inc
or
cmps
xor
popf
and
sub
into
and
data16
jbe
push
cmp
cld
and
xlat
pop
xchg
lea
movs
daa
mov
adc
sub
arpl
xor
inc
inc
scas
into
lods
in
sub
test
inc
lods
or
lea
(bad)
fld
dec
jge
xor
cmp
fs
imul
cmp
iret
mov
jae
dec
mov
adc
icebp
dec
sub
icebp
sub
add
sbb
sar
mov
jecxz
es
ja
pop
or
and
fucompp
out
gs
shl
cdq
xor
push
ret
cmp
ficom
sub
mov
xchg
enter
pusha
ds
add
test
addr16
adc
sub
jecxz
adc
and
inc
(bad)
mov
add
add
mov
cli
test
aas
jno
bound
dec
aam
dec
cld
and
xchg
leave
repnz
test
mov
dec
das
out
repnz
pop
add
repz
inc
shr
or
loop
sbb
cwde
push
inc
cmp
lods
jne
pop
(bad)
push
or
xor
ja
jp
jg
jmp
cmp
or
movs
test
test
jp
cmp
adc
push
cld
xor
xchg
sub
add
popf
daa
arpl
fcom
(bad)
ds
fidivr
inc
scas
in
or
mov
cs
test
dec
pop
inc
mov
pop
sub
and
mov
popa
xchg
mov
dec
mov
dec
sbb
inc
lea
lahf
ret
dec
adc
push
xor
dec
pop
jecxz
test
mov
xor
lea
cmp
loop
push
adc
movs
sub
(bad)
idiv
lock
mov
mov
push
add
(bad)
sti
sbb
dec
(bad)
push
push
bound
push
sub
mov
in
push
inc
xor
mov
in
add
gs
and
in
sbb
jae
iret
in
fxch
scas
adc
ins
in
jae
ror
ficomp
mov
add
or
pop
mov
push
scas
cmp
sub
(bad)
leave
inc
mov
test
mov
test
mov
mov
retf
push
push
aaa
mov
xadd
cmp
arpl
imul
push
add
mov
inc
add
mov
add
fadd
and
sahf
clc
rcl
xchg
gs
aaa
ss
jnp
cli
xor
test
cmp
jp
cmps
xchg
jl
and
add
fcom
call
add
gs
fisub
retf
adc
push
sbb
loopne
or
mov
in
fdivr
out
inc
cmp
add
(bad)
test
xor
sbb
inc
cmc
fbstp
mov
cmps
xor
dec
(bad)
mov
jge
stos
lahf
sbb
in
xchg
sub
mov
dec
sbb
repnz
pop
push
sbb
in
dec
loope
bound
bound
pop
or
or
sbb
push
sub
jecxz
js
xor
push
sti
adc
rol
sbb
cs
leave
or
xchg
add
mov
neg
and
scas
repz
fisttp
pop
pop
repz
xor
dec
adc
pushf
cdq
aas
sub
stc
out
sbb
dec
jg
mov
adc
xchg
out
mov
inc
shl
sub
and
jno
xchg
mov
pop
into
in
or
out
push
aaa
and
adc
mov
or
ins
scas
sbb
out
adc
cmps
jns
jne
lahf
das
aad
cdq
sbb
ins
lods
or
or
shl
push
sbb
adc
sbb
dec
push
inc
div
movs
pop
pop
jmp
inc
pushf
idiv
fsub
ins
dec
push
push
adc
icebp
add
cmp
(bad)
dec
jae
loopne
jo
xor
cmp
push
inc
gs
outs
cmp
dec
push
adc
loope
(bad)
jae
(bad)
jno
pop
scas
sbb
add
pop
rcl
setl
lea
ss
movs
mov
dec
das
cmp
imul
push
(bad)
dec
scas
aas
aad
mov
push
or
jbe
push
lods
cld
sbb
pop
push
jmp
sbb
shl
sub
fsub
fild
or
pop
clc
mov
and
vpsubusb
cmp
sbb
fidivr
sbb
adc
and
shl
mov
xor
jno
mov
stos
sub
fwait
(bad)
in
(bad)
push
xchg
nop
xchg
mov
push
and
(bad)
mov
aaa
cmc
(bad)
out
add
jge
cdq
push
and
out
pop
jmp
and
loopne
outs
hlt
rcr
jmp
les
jo
jg
dec
adc
lds
loopne
sub
sbb
jno
jmp
xor
mov
ins
imul
neg
inc
ret
call
lods
lea
fld
hlt
jo
scas
sahf
jl
pop
fimul
in
stos
leave
sub
push
xchg
add
sbb
xor
add
enter
dec
sub
pushf
popa
bound
xor
mov
movs
mov
pop
lock
out
hlt
loopne
rcr
jns
and
sbb
test
dec
dec
and
(bad)
dec
inc
repnz
push
or
xor
rcr
or
fisttp
mov
hlt
mov
or
mov
test
add
movs
jne
(bad)
xor
repnz
push
jbe
cmps
xor
mov
pushf
mov
xor
inc
jnp
sbb
push
lea
add
sub
jbe
fidiv
add
icebp
mov
mov
jle
cmp
js
leave
scas
jne
pop
and
lahf
loope
add
push
fmul
jecxz
lods
mov
cmp
imul
shl
adc
jns
mov
fs
ret
sbb
int
sbb
retf
fst
scas
mov
std
mov
and
pop
add
jno
sahf
fisttp
cmps
sar
ins
inc
inc
or
pop
fmul
rcr
int
inc
mov
pusha
mov
xlat
mov
rol
pop
push
fstp
lds
or
xchg
cmps
inc
ret
data16
jne
and
mov
dec
jns
test
ja
pop
adc
ret
pushf
test
jge
stc
inc
retf
cmps
dec
lock
mov
leave
pop
mov
ffree
push
jle
pop
pop
in
or
(bad)
pop
inc
repnz
cld
mov
inc
enter
sbb
fcomp
mov
mov
add
fwait
pop
cmps
push
jmp
aad
mov
push
jns
mov
ror
pusha
jle
out
jp
adc
(bad)
lods
adc
push
jle
(bad)
dec
nop
mov
jno
cmp
div
jb
mov
sbb
xchg
js
inc
cdq
std
leave
mov
add
inc
out
rcr
bound
jmp
pop
inc
int3
stos
out
jns
out
pop
add
(bad)
out
rol
adc
mov
pop
add
hlt
adc
inc
mov
test
xchg
cmp
aam
dec
addr16
lock
inc
adc
call
xchg
push
inc
pusha
out
push
and
in
ror
test
test
add
daa
movs
xor
mov
xchg
test
and
sub
or
inc
cmc
mov
cmp
xor
in
bound
inc
mov
call
je
leave
push
sub
pop
jno
retf
sub
add
outs
xor
sub
fwait
(bad)
(bad)
imul
popf
(bad)
jp
push
shr
movs
outs
fst
cmp
arpl
daa
pop
movs
and
pop
daa
(bad)
dec
sub
mov
jns
mov
daa
and
adc
shr
loopne
and
popf
sub
call
es
sahf
mov
dec
adc
test
sub
ins
repz
pop
out
enter
xchg
xor
push
rep
xchg
jb
and
push
aas
cmp
movs
dec
div
loope
sbb
lea
fwait
jb
test
mov
mov
stc
xchg
(bad)
shl
cli
mov
jmp
jnp
cmp
lds
push
std
lahf
je
loopne
xchg
jne
pop
push
sub
xchg
push
loop
loop
dec
push
push
mov
out
ins
cmp
push
or
adc
lods
fmul
ss
mov
fs
dec
mov
dec
fcomp
xlat
stc
cmp
(bad)
or
(bad)
dec
ins
sub
add
cmp
loopne
ret
(bad)
in
dec
bnd
or
sbb
mov
adc
out
retf
mov
push
dec
lahf
iret
cmp
mov
sar
retf
mov
rcr
call
or
lods
mov
ret
mov
cwde
mov
mov
jg
in
mov
cmp
(bad)
stc
jle
out
mov
mov
shl
loopne
cmp
jle
stc
leave
fimul
inc
xor
mov
jecxz
add
fistp
in
test
jbe
(bad)
loope
sbb
loopne
cmp
push
adc
repnz
test
sub
das
dec
xor
arpl
je
mov
pop
xchg
adc
mov
fldenv
adc
and
cmp
push
add
mov
pusha
in
mov
stc
frstor
push
mov
sub
daa
lock
test
repz
mov
cli
xor
fs
scas
push
hlt
xor
daa
out
sub
xor
ret
jecxz
out
jnp
in
jmp
aaa
stos
shl
mov
scas
dec
xor
in
sub
cmp
call
adc
inc
push
xor
or
and
jp
(bad)
shr
in
mov
cmp
std
mov
stc
cwde
(bad)
stc
or
cli
out
inc
push
lods
jecxz
xor
loope
jo
push
xchg
imul
loope
jl
push
mov
mov
rol
int3
push
xchg
push
sub
ret
dec
mov
mov
sub
mov
xchg
adc
mov
mov
inc
jmp
pop
jae
test
sahf
xchg
stos
inc
add
pop
push
sti
push
or
std
push
test
(bad)
data16
adc
js
inc
jae
aad
sti
dec
adc
jb
retf
fnsave
push
pushf
mov
adc
aam
lahf
mov
dec
jmp
jle
adc
push
fistp
fbld
sub
cli
mov
loope
(bad)
and
cwde
jl
ss
outs
mov
adc
sbb
jb
call
mov
jecxz
icebp
std
inc
push
pop
mov
loope
xchg
call
xchg
sbb
fidiv
or
inc
mov
sti
(bad)
pop
jecxz
(bad)
push
sub
pop
aaa
fbstp
xchg
je
and
daa
sbb
jne
mov
inc
jp
mov
cmps
jne
jbe
adc
out
cmp
pop
shl
mov
int3
jmp
sub
mov
cmps
mov
mov
adc
lods
sub
mov
sub
lods
mov
addr16
out
cs
mov
push
sbb
jno
stc
pop
ret
or
pop
mov
fsubr
adc
ds
pop
xor
sahf
push
je
jb
add
cli
mov
mov
xor
repz
or
jmp
loop
jnp
test
cs
aad
xchg
cmp
into
pop
or
imul
cmp
jg
mov
mov
mov
movs
loop
sbb
pop
movs
pop
jb
mov
out
sti
mov
cmc
push
xchg
mov
gs
icebp
or
repnz
(bad)
xchg
outs
sbb
cwde
mov
test
es
add
jp
push
mov
and
sub
add
into
pop
in
sbb
iret
(bad)
out
leave
rep
ret
push
fimul
inc
inc
cmp
jae
push
bound
cmc
cdq
mov
fmul
cdq
call
xchg
ins
in
xchg
sti
mov
xchg
pop
pop
popf
mov
repnz
retf
pushf
test
sahf
ins
out
pop
(bad)
fnstcw
inc
xchg
daa
add
add
xor
das
sbb
mov
mov
adc
jg
sbb
push
in
add
mov
call
push
mov
ds
push
jae
jns
cmp
xchg
adc
out
jne
rcl
fs
xlat
and
jns
mov
xchg
ret
and
lahf
daa
aas
mov
mov
idiv
or
mov
cmp
sti
data16
ror
jae
adc
ret
xchg
cmp
(bad)
out
push
hlt
xor
xor
dec
aaa
out
fsubr
ins
out
ror
and
repz
daa
dec
add
enter
add
addr16
cmp
xchg
jl
mov
mov
popf
mov
inc
sbb
xchg
sbb
cmp
and
movs
push
fnsave
aam
xor
js
mov
push
inc
pop
xor
mov
and
ja
in
lods
mov
clc
arpl
pop
mov
out
push
fld
repz
fsubp
sahf
imul
cmp
(bad)
mov
(bad)
test
fxch
dec
lods
jns
data16
sub
scas
into
push
enter
cmps
(bad)
fsubr
mov
mov
or
movs
and
mov
outs
pop
and
(bad)
cld
mov
int
xor
jnp
neg
xor
jg
sub
push
dec
jbe
rcl
cli
pushf
lahf
int
push
push
pushf
mov
out
mov
leave
sbb
retf
ds
push
and
pop
cwde
xor
int3
pop
mov
fidiv
xor
aad
mov
xchg
cmp
gs
push
pop
cmp
inc
shr
pop
out
adc
lods
pop
fwait
scas
ins
jg
mov
jno
inc
rcr
out
jnp
lods
test
test
addr16
push
xchg
pop
outs
jmp
pop
cmp
pusha
pusha
(bad)
mov
push
ret
(bad)
xchg
and
movs
fcmovne
cli
cmc
shl
in
dec
(bad)
mov
jae
inc
add
out
xchg
fidiv
dec
mov
int
rcl
dec
inc
jmp
xor
mov
mov
sub
cmp
stc
ficomp
xchg
(bad)
inc
lahf
je
js
das
clc
mov
test
pop
push
sbb
popa
in
ss
int
ss
and
aam
adc
rcl
pop
jno
call
cmc
mov
mov
push
pop
mov
dec
repnz
pop
fwait
jmp
ss
ficom
inc
std
and
retf
(bad)
pop
inc
gs
(bad)
cmp
adc
int
cmp
bound
arpl
xchg
mov
es
sbb
ss
cli
and
and
mov
fwait
mov
push
in
dec
clc
lea
js
add
xor
ins
loop
sub
aas
or
popf
hlt
sahf
adc
or
(bad)
rol
aad
add
mov
popf
popf
jae
pushf
mov
imul
adc
sbb
adc
popf
jo
jp
inc
mov
pushf
pop
cmp
pop
xlat
add
fnstenv
stc
ds
push
daa
in
adc
shl
mov
xor
iret
cwde
(bad)
dec
mov
pop
in
ins
std
xor
jmp
or
lods
fld
mov
daa
mov
dec
xchg
clc
(bad)
sbb
iret
push
mov
in
jmp
push
aaa
addr16
cmps
xor
iret
nop
js
mov
jg
aam
push
std
jmp
out
out
out
fwait
xor
mov
ins
std
(bad)
cmps
mov
cmc
arpl
retf
dec
js
aam
xlat
mov
cmps
pop
mov
or
imul
imul
inc
add
lahf
inc
jns
in
cmp
in
jnp
xor
shl
jp
popf
cmp
je
jg
loop
mov
sti
(bad)
dec
xchg
or
fsubp
dec
inc
push
and
pop
adc
inc
inc
ja
test
jmp
xchg
push
mov
cmp
cmp
shl
xor
cli
jbe
fimul
mov
inc
adc
push
push
jmp
push
jo
(bad)
push
lock
inc
(bad)
iret
jbe
xor
loopne
jo
js
add
lods
aaa
xlat
lods
inc
pop
inc
out
test
je
inc
retf
adc
jmp
pop
xor
cli
cld
dec
cmp
jg
call
cmp
je
sbb
sbb
jo
loopne
fldenv
mov
and
pop
jecxz
icebp
call
and
or
or
and
stos
sbb
mov
push
jg
mov
sub
push
cmp
out
pop
dec
out
jno
sar
cli
xchg
sbb
daa
mov
(bad)
jbe
test
ror
push
sbb
push
dec
in
mov
aas
call
mov
and
sbb
jns
fild
mov
(bad)
xchg
into
es
pusha
push
or
repz
mov
pop
scas
mov
mov
sub
pcmpgtb
dec
dec
jo
push
mov
mov
fcomp
add
add
push
pop
or
inc
outs
imul
dec
test
shl
repnz
and
pop
push
or
(bad)
call
(bad)
les
unpckhps
lahf
sub
lock
pop
cwde
les
scas
push
pop
data16
in
outs
fnstcw
outs
mov
popa
test
jl
sar
mov
cmp
ja
push
push
cli
rol
outs
dec
and
lds
push
sbb
adc
loop
push
retf
or
inc
imul
inc
pop
adc
loop
push
sbb
movs
inc
pop
cmp
push
std
mov
jns
icebp
sbb
add
ins
ds
mov
(bad)
imul
aad
out
cld
dec
fdiv
ficomp
in
adc
aad
rcl
push
xchg
mov
shr
and
mov
add
aas
int3
mov
push
jle
(bad)
in
inc
mov
(bad)
or
stc
push
(bad)
xor
mov
dec
iret
sbb
jne
int3
xor
push
add
mov
rcr
out
jmp
push
sti
pop
add
sub
gs
sub
push
inc
add
xchg
mov
ret
sub
mov
jle
pop
daa
push
movs
fisub
xchg
or
mov
push
dec
jmp
pop
leave
pop
xchg
fwait
and
push
ins
imul
dec
test
jae
arpl
mov
jo
ret
fcmovnb
retf
push
arpl
fidiv
addr16
mov
fcomp
dec
test
mov
mov
sbb
cmps
pop
push
mov
cmp
shr
inc
lds
add
dec
xor
jmp
retf
popf
fstp
enter
out
push
jl
jnp
mov
shl
cmps
aad
in
push
outs
xor
retf
stos
add
jge
adc
mov
adc
mov
pushf
int
inc
es
adc
dec
mov
xchg
sub
iret
push
std
dec
mov
push
jno
pop
nop
dec
or
aad
mov
test
rol
es
jle
pop
jle
pop
push
ja
in
push
popf
ins
repnz
push
pop
and
cmps
repz
(bad)
mov
repnz
push
jecxz
retf
and
or
jg
jmp
test
cmps
cld
imul
lock
cmp
push
push
push
enter
femms
sti
sti
jae
fdiv
adc
pushw
xor
mov
call
inc
mov
fsubr
sub
sbb
(bad)
idiv
xchg
inc
imul
inc
pop
push
cli
add
mov
mov
jle
aaa
enter
and
pop
(bad)
fstp
push
es
enter
test
pop
push
lahf
mov
push
fstp
ins
xor
cwde
out
test
jmp
stos
shl
mov
fisttp
push
cwde
and
inc
stc
push
stos
sti
xlat
push
or
sbb
outs
lods
das
ja
ds
inc
cdq
cmp
adc
test
adc
push
jo
sbb
lods
jge
jp
sbb
aad
(bad)
mov
dec
fdiv
cmp
into
jns
ds
out
dec
mul
mov
xchg
fwait
div
idiv
jmp
or
push
ins
(bad)
retf
cwde
sub
push
movs
mov
out
fwait
dec
push
sub
cmp
dec
out
mov
mov
and
ja
retf
loop
inc
push
das
push
in
xlat
jb
push
adc
cmp
adc
loope
pop
aad
mov
mov
and
sbb
aaa
arpl
fldlg2
pop
adc
(bad)
adc
imul
in
(bad)
scas
ins
lods
scas
clc
movs
div
mov
inc
jge
adc
xlat
call
aaa
fdiv
mov
inc
adc
mov
js
xor
hlt
sbb
xchg
call
push
scas
cld
mov
int3
add
xor
sub
(bad)
std
push
inc
test
adc
fild
sti
jmp
sub
fimul
test
retf
arpl
add
sahf
hlt
xchg
out
push
test
mov
jae
cmps
or
inc
mov
xchg
mov
stos
cmp
in
adc
icebp
adc
inc
arpl
lock
push
cwde
fisubr
inc
adc
cdq
sub
in
jb
jbe
call
sbb
rcr
sub
xor
xchg
nop
jo
add
into
sub
push
and
pop
lahf
pop
jp
out
cmp
(bad)
movs
adc
bound
xor
in
dec
jns
mov
call
imul
mov
loopne
out
and
into
jmp
(bad)
xchg
stc
xchg
int
dec
mov
lock
jmp
fwait
cwde
mov
pop
outs
push
pop
xchg
jmp
xor
jge
ds
jo
or
mov
sub
add
call
xor
repnz
loope
add
mov
nop
jo
mov
icebp
push
lock
fdivp
scas
pop
imul
xchg
cs
std
xor
stos
popa
dec
and
int3
inc
ror
fcomp
adc
pop
data16
fdivr
hlt
or
shl
es
fucom
sbb
add
push
dec
xchg
pop
mov
das
fild
imul
daa
addr16
sbb
test
sub
cmp
adc
(bad)
(bad)
mov
mov
push
dec
es
ficomp
mov
xchg
fsub
adc
or
add
int
ins
dec
test
push
or
fsub
icebp
pop
std
push
push
into
nop
ds
sub
out
pop
push
je
mov
cld
daa
mov
jg
inc
xor
push
or
daa
adc
add
lock
dec
pop
or
test
lods
ror
js
and
clc
jecxz
stos
mov
add
loop
test
mov
xor
xlat
outs
cmp
sub
ror
push
nop
shl
aas
lods
mov
bound
push
retf
out
outs
adc
mov
mov
pop
iret
in
xor
and
call
mov
sub
jge
ret
ficom
(bad)
jmp
scas
adc
xchg
pusha
cmp
(bad)
int
jne
adc
xor
and
outs
aas
(bad)
mov
sbb
je
add
fs
push
dec
data16
fs
adc
cwde
xchg
cdq
mov
fisubr
bound
dec
mov
xchg
rcl
pop
xchg
sbb
inc
push
repz
mov
dec
xor
add
mov
nop
add
push
or
xor
fist
xchg
mov
sub
bound
inc
mov
ret
and
(bad)
xor
xor
outs
jae
(bad)
or
pop
cmps
retf
push
add
std
arpl
stos
inc
out
and
rol
fst
or
cs
nop
or
cld
ficom
outs
inc
std
lods
fisub
repz
(bad)
cmp
mov
mul
ja
(bad)
push
sub
cmp
popf
cwde
push
jns
jbe
arpl
push
sub
(bad)
cmp
pop
mov
ins
pop
enter
ja
add
inc
xchg
mov
sub
mov
cwde
shr
push
lea
enter
pop
xlat
test
xchg
cmp
dec
mov
sub
fwait
sub
mov
into
jmp
outs
fs
or
xor
inc
mov
outs
mov
mov
iret
ins
and
xchg
mov
icebp
bound
ins
mov
inc
pop
jo
inc
inc
pop
dec
sbb
xchg
inc
fisubr
inc
daa
pop
repz
add
jge
cmp
cwde
popa
push
out
pop
mov
and
daa
mov
aam
icebp
jle
or
pop
nop
ins
sbb
mov
push
stos
xor
mov
test
jecxz
mov
jbe
in
in
pusha
sbb
imul
jnp
inc
(bad)
ficomp
mov
xor
push
xchg
pushf
scas
pop
test
(bad)
pop
jno
pop
int3
mov
sub
stc
dec
cmp
in
xor
inc
cmp
fwait
hlt
pop
call
inc
ror
arpl
mov
cmps
(bad)
and
ret
or
or
jbe
jmp
fst
ret
adc
push
stos
and
mov
inc
daa
jmp
and
mov
jb
not
neg
mov
mov
jg
stos
ret
sahf
mov
pushf
pop
retf
es
pop
jp
cdq
iret
dec
mov
mov
push
test
jne
mov
jo
sbb
das
mov
es
and
enter
ds
adc
and
lods
cld
jmp
and
dec
inc
lock
and
cmp
fidivr
jmp
push
sbb
rcl
inc
mov
cs
fwait
jge
std
xor
enter
mov
and
add
sbb
cmp
fwait
push
aas
inc
icebp
int3
dec
or
fistp
add
mov
pop
dec
hlt
xchg
mov
add
call
cli
imul
xchg
fsub
pop
stos
cs
jp
or
jno
or
pop
jns
dec
and
xchg
sbb
test
addr16
cmc
fdivr
test
mov
or
push
lods
xchg
mov
dec
sub
dec
daa
or
add
clc
push
into
mov
mov
mov
mov
jecxz
jb
xchg
push
dec
mov
mov
adc
ss
xchg
cmp
xchg
stos
dec
out
ror
mov
xor
jno
outs
(bad)
xchg
mov
adc
fwait
mov
ja
lea
inc
out
rcr
ret
dec
rcr
xchg
jmp
ja
xor
leave
mov
sub
dec
and
pop
fwait
inc
and
mov
jb
xor
int3
into
sbb
sbb
mov
sbb
fbld
mov
xor
mov
pusha
call
or
cmp
hlt
cwde
test
ins
xor
mov
das
(bad)
pop
gs
in
jb
mov
sub
inc
sbb
test
jle
in
imul
inc
outs
stos
pop
pusha
out
mov
pop
jae
psubd
imul
push
cmp
in
dec
or
(bad)
adc
movs
jmp
and
dec
add
lea
(bad)
cmp
xor
push
ret
cmp
cmps
fsubp
mov
in
sbb
xor
mov
or
jecxz
daa
imul
dec
push
(bad)
loopne
test
jns
mov
inc
mov
pop
bnd
push
mov
pop
inc
stos
sbb
mov
push
aas
push
dec
int3
add
in
loope
je
cmp
adc
and
shr
push
fst
(bad)
xchg
and
loop
(bad)
pushf
test
int3
mov
ss
scas
xchg
jae
imul
mov
pop
sub
(bad)
dec
dec
cmps
pop
mov
mov
and
mov
jg
push
test
in
or
stos
mov
push
pop
xor
jae
sbb
aam
sub
add
stos
pop
mov
rcl
daa
(bad)
or
sbb
inc
stc
cmps
cld
scas
add
adc
test
sub
int
and
iret
xor
repz
mov
jb
scas
mov
adc
repz
jmp
ja
cdq
sbb
fcom
mov
inc
mov
pop
jno
outs
and
mov
jns
imul
test
mov
pop
jecxz
adc
adc
push
mov
push
daa
icebp
pop
ins
cwde
jo
mov
outs
add
out
add
test
into
stos
pop
cmp
adc
popa
iret
xor
cmp
xchg
jns
mov
add
aaa
imul
test
outs
sub
jp
push
sub
(bad)
int
push
mov
dec
dec
jo
pushf
popf
xchg
jmp
xchg
adc
sbb
das
loope
pop
push
shl
push
cmp
in
(bad)
xor
pop
xchg
sub
push
rcl
mov
fucomip
cmc
add
aam
push
pop
retf
je
movs
lds
sbb
cs
loope
mov
inc
push
cmp
push
rol
jmp
adc
gs
dec
and
je
adc
xor
loop
fsubp
test
pop
mov
cmp
inc
xchg
aas
add
mov
and
dec
xchg
cmp
sar
jmp
(bad)
push
fist
repz
test
scas
rcl
fist
(bad)
jmp
or
push
fdiv
jl
daa
jns
jle
rol
jae
sbb
scas
repnz
push
pop
hlt
cmc
inc
pop
mov
sbb
outs
push
fstp
push
xchg
dec
fwait
xor
push
and
jmp
ins
int3
xlat
scas
inc
ret
sbb
mov
fld
mov
jg
out
and
mov
jno
fdiv
xchg
movs
scas
sbb
push
mov
jge
int
inc
jmp
movs
add
outs
and
xchg
xor
and
xchg
jnp
clc
cmp
pop
adc
sub
push
mov
pop
mov
xchg
jmp
pop
add
push
data16
cmp
bound
dec
push
cmp
sahf
add
cmp
sbb
(bad)
fisubr
and
xlat
dec
xor
mov
inc
xor
stos
pop
lock
xchg
jmp
jp
xor
sub
add
repz
retf
adc
cmp
xor
sub
pop
sub
arpl
dec
push
xchg
push
pop
(bad)
dec
jg
leave
and
outs
pop
sahf
pop
jp
cdq
sbb
mov
cmp
xchg
cmp
sbb
ss
inc
out
mov
cmp
mov
mov
dec
shr
cmp
sub
mov
cld
inc
bound
mov
daa
ja
or
mov
sbb
out
mov
shl
push
adc
fwait
mov
push
std
sar
ret
sbb
loopne
lock
push
dec
(bad)
(bad)
mov
movs
xor
movs
gs
inc
fnstsw
addr16
jecxz
push
inc
fwait
or
mov
xor
adc
outs
imul
ficomp
aaa
jb
add
retf
cmp
imul
sar
loopne
jne
daa
xor
pop
sbb
or
sbb
call
adc
stos
mov
xor
mov
fsub
leave
inc
cdq
push
test
test
popa
push
jnp
ins
jle
je
xor
ds
addr16
jge
rcr
inc
data16
inc
pop
cmp
cld
nop
rcr
mov
gs
stos
and
xor
mov
cli
sbb
mov
iret
xor
dec
xchg
je
push
mov
fadd
mov
(bad)
(bad)
mov
xchg
push
loop
in
cmp
sbb
pop
jno
ret
retf
stos
inc
pusha
imul
fisubr
leave
xor
dec
jmp
scas
cmc
mov
imul
sbb
pushfw
push
fild
push
cmp
mov
push
adc
ds
sahf
loopne
cmps
cmc
adc
fs
jmp
aad
idiv
ja
push
fwait
or
push
(bad)
(bad)
sub
xchg
add
mov
pushf
fsubr
popw
mov
in
push
mov
push
retf
pop
push
jo
sub
repnz
cmc
pop
popa
test
mov
pusha
adc
mov
int3
xor
pop
add
ret
xchg
cmp
and
mov
ror
adc
imul
aas
ror
inc
pop
gs
gs
nop
mov
bound
or
mov
add
arpl
pop
pop
je
rcr
lea
push
(bad)
inc
aad
loopne
or
clc
mov
dec
int3
push
frstor
inc
jae
jno
adc
jmp
imul
aam
addr16
xor
mov
xchg
xor
adc
sbb
push
jle
dec
in
xor
and
loope
cmps
jnp
sbb
cmp
stc
jae
cwde
sbb
mov
out
nop
loopne
movs
js
les
push
and
mov
std
push
rol
les
mov
(bad)
mov
push
shl
xchg
cmp
or
hlt
or
mov
dec
retf
les
arpl
retfw
hlt
out
cmp
aas
aam
jmp
cwde
mov
inc
mov
jp
xlat
jle
sub
mov
mov
push
out
ja
in
inc
adc
sbb
mov
fdecstp
sub
pop
out
scas
xchg
mov
mov
and
xchg
lods
loope
add
inc
std
or
xchg
mov
(bad)
sti
aas
push
in
imul
daa
xlat
sar
jle
lahf
mul
ret
aaa
and
int3
jne
and
adc
cmp
repz
inc
mov
shl
add
pop
ins
pop
jae
stos
loopne
pop
pop
push
dec
xchg
dec
pop
cmp
movs
in
inc
push
cwde
test
jp
xor
mov
bound
mov
dec
ret
hlt
shr
mov
or
jg
adc
imul
ins
inc
pop
add
xor
push
pop
mov
add
mov
ds
fcmovnu
or
and
or
retf
cli
into
int3
mov
sbb
jp
push
and
inc
and
fistp
jmp
pop
add
in
ss
test
or
in
lods
in
add
mov
xor
into
js
in
adc
test
data16
push
push
cmp
loopne
sub
in
arpl
push
ins
scas
ret
sahf
nop
jmp
dec
sbb
lds
(bad)
dec
mov
fs
(bad)
loop
rcl
call
jle
xchg
pop
retf
and
cmps
arpl
add
fwait
lahf
add
cmp
jbe
aam
cmps
add
repnz
sbb
pop
xchg
sub
out
das
push
(bad)
ret
sbb
call
mov
jmp
fcomp
sahf
shl
and
pop
arpl
test
hlt
je
dec
jmp
adc
mov
jbe
push
clc
sub
dec
sbb
sbb
lock
shr
inc
sub
ja
adc
icebp
fnstenv
adc
inc
imul
jne
fisttp
lea
imul
mov
dec
mov
cmp
cli
or
(bad)
xor
nop
inc
icebp
jmp
mov
sub
lea
outs
sar
or
das
mov
and
mov
sub
fistp
mov
jo
dec
dec
movs
or
add
jnp
(bad)
mov
test
jmp
add
js
mov
daa
test
mov
sub
push
test
pop
dec
mov
test
sbb
in
lahf
out
lods
inc
in
mov
fs
add
addr16
sbb
adc
loopne
mov
fwait
sub
mov
jmp
sbb
dec
mov
shr
xor
xchg
rcl
or
or
xchg
outs
dec
pusha
push
data16
cmp
jo
js
xor
pop
mov
xchg
fwait
cmp
push
(bad)
cmp
(bad)
mov
lahf
mov
or
test
lea
mov
fiadd
stos
xchg
sbb
or
mov
test
inc
fstp
pop
jno
out
js
and
or
cdq
jg
dec
push
addr16
test
fwait
aad
cmp
fstp
push
jl
test
mov
mov
adc
inc
sub
lea
test
pop
or
jns
mov
sub
push
adc
mov
fisub
adc
rol
pop
inc
push
je
(bad)
mov
cmp
cmp
fldenv
cmp
inc
mov
arpl
dec
(bad)
js
sub
mov
pop
mov
addr16
test
ja
int
sub
mov
xchg
into
mov
test
inc
(bad)
mov
test
or
in
mov
ror
mov
loopne
inc
push
cdq
xor
sbb
xchg
xor
fld
scas
adc
rol
mov
or
fist
or
cdq
repz
out
(bad)
hlt
mov
cmps
push
ins
pushf
fwait
test
in
pop
adc
in
cld
stos
imul
mov
movs
std
sub
stc
add
add
jbe
jae
or
cmps
mov
cmp
jbe
sbb
push
push
enter
(bad)
and
jmp
mov
in
push
add
adc
cdq
jb
in
fcomi
jecxz
js
dec
xchg
sti
ins
outs
inc
adc
xchg
sub
dec
xor
mov
jo
shl
repz
jno
cmp
mov
retf
(bad)
stos
pop
and
aaa
rcl
int3
pop
cmp
arpl
dec
push
mov
(bad)
mov
retf
xor
cmp
xor
xchg
cs
sar
in
mov
test
js
and
into
ror
mov
arpl
dec
jno
fld
retf
mov
loop
xor
test
add
dec
sbb
jae
push
(bad)
loop
or
mov
aaa
mov
sbb
cmp
(bad)
(bad)
and
js
inc
test
dec
retf
mov
xlat
int3
push
xor
xchg
loope
xor
cmp
ds
or
gs
int
jg
mov
adc
fdiv
(bad)
jl
mov
aam
adc
dec
icebp
jecxz
aaa
add
mov
mov
jge
adc
sbb
neg
jecxz
repnz
test
adc
neg
push
xchg
sbb
dec
es
out
je
ss
xor
jno
or
mov
psrlw
push
jecxz
mov
outs
mov
out
mov
in
bound
std
scas
mov
test
dec
aas
jnp
call
mul
(bad)
add
sbb
and
pop
cwde
jmp
sub
or
or
sub
jg
lods
or
sub
adc
dec
xchg
stos
repnz
dec
add
add
jp
add
icebp
hlt
jb
scas
mov
xor
pop
hlt
xor
pop
mov
add
dec
mov
xchg
inc
push
push
mov
xor
adc
test
cmp
mov
aad
push
mov
push
dec
dec
pop
mov
mov
mov
mov
int3
mov
out
adc
mov
mov
mov
jge
sbb
ret
ror
dec
mov
repz
mov
or
dec
sbb
sti
or
repnz
sub
rol
cmp
lea
nop
(bad)
jmp
pop
iret
in
sbb
in
sub
add
movs
pop
mov
je
push
imul
iret
sti
sub
push
popf
inc
pop
adc
xlat
jge
test
lock
(bad)
(bad)
jbe
jmp
adc
sbb
or
mov
xchg
adc
push
test
push
leave
rcl
popf
scas
cs
add
pop
mov
(bad)
ror
mov
sbb
(bad)
xor
les
stc
or
inc
jnp
dec
js
inc
jb
mov
enter
leave
or
addr16
sub
jb
call
(bad)
sti
stc
sbb
sub
pop
dec
mov
push
push
pop
jo
pushf
scas
cmp
mov
add
mov
jo
outs
shl
les
jmp
lods
dec
std
mov
sub
retf
and
cmp
mov
mov
das
dec
out
xchg
inc
jae
test
retf
jl
arpl
out
jge
ins
ret
push
inc
push
inc
call
loopne
cmp
sub
test
cwde
sbb
mov
xchg
and
js
stos
icebp
jle
xchg
mov
pop
xor
push
dec
(bad)
jl
jo
xor
cld
ret
xchg
xchg
adc
ja
mov
mov
and
and
repz
popa
inc
retf
cmp
inc
pusha
js
or
and
bnd
outs
ds
pop
retf
sahf
in
xchg
add
imul
mov
jmp
adc
or
sub
rol
mov
lods
xchg
or
int3
pop
mov
ja
fadd
ret
mov
mov
cmc
das
jb
xchg
je
push
and
jge
push
(bad)
retf
xor
jle
inc
scas
cdq
inc
jb
sub
push
mov
lahf
inc
jo
clc
sbb
mov
fucomi
in
test
inc
adc
test
inc
push
jle
ins
in
or
cmp
mov
daa
mov
cdq
jmp
pop
shl
dec
aad
fadd
mov
jle
mov
push
outs
or
out
arpl
dec
mov
adc
sbb
pop
mov
loope
and
xlat
or
cmps
movs
imul
std
add
adc
mov
test
retf
lock
mov
mov
jle
mov
mov
sbb
jge
add
out
or
cmp
test
push
mov
mov
and
push
sub
call
jge
mov
sub
dec
arpl
and
lock
or
test
mov
and
mov
and
pop
push
ins
in
mov
into
rcl
arpl
xchg
and
repz
mov
cmp
jne
sub
pop
push
push
or
dec
and
xlat
pop
test
push
mov
ins
scas
lock
(bad)
jg
shl
xchg
fcomp
fbstp
mov
lahf
mov
stos
mov
xchg
xor
dec
cdq
xchg
jmp
push
or
repnz
lods
retf
test
lods
xor
int3
inc
xchg
outs
xchg
push
and
xchg
mov
test
or
mov
push
dec
pop
js
loop
clc
push
jo
movs
cli
sub
call
fst
nop
cli
sub
in
sub
dec
dec
adc
jne
mov
push
inc
and
movs
les
sar
push
cwde
pop
ror
call
in
or
jmp
(bad)
movs
mov
pop
mov
shr
icebp
fisttp
imul
sub
leave
or
sti
mov
loop
jae
sbb
int
jmp
add
fdivrp
cdq
jo
shl
push
out
in
cdq
mov
or
jns
movs
mov
pop
(bad)
pop
sar
inc
in
dec
into
je
jecxz
jo
jmp
dec
inc
and
inc
pop
jecxz
jp
movsx
scas
and
ja
pop
xchg
xchg
dec
bound
ficomp
loopne
repnz
dec
scas
push
mov
pop
rcr
push
mov
fimul
add
pusha
push
xor
aas
pop
xchg
rol
inc
xor
xchg
sbb
jmp
popa
sar
sub
sbb
mov
jecxz
movs
popf
ret
fidiv
add
xchg
ficomp
xor
loop
add
sub
dec
mov
xchg
sub
cmps
pop
and
cmp
pop
bound
sub
je
(bad)
jo
fstp
mov
sub
cdq
sar
xchg
and
or
je
arpl
and
jns
out
mov
xchg
pusha
cmp
push
daa
mov
sbb
jae
xchg
push
push
fsubr
push
xchg
scas
lahf
gs
ins
out
add
pop
shl
xchg
add
aaa
or
push
jl
ret
fmulp
push
enter
add
shr
fstp
or
and
repz
call
mov
(bad)
std
fs
jns
imul
push
jecxz
push
outs
sub
movs
xor
repz
push
sbb
cmp
or
cmp
mov
in
cmp
sbb
into
cdq
mov
xchg
mov
xor
pop
(bad)
mov
bnd
inc
jo
mov
(bad)
call
xchg
jns
int3
ret
ins
out
sbb
adc
push
xor
fmul
push
mov
aaa
cmp
lock
js
pop
out
pop
test
in
xchg
scas
push
sub
cmp
inc
(bad)
imul
mov
and
dec
xor
xchg
dec
imul
or
out
dec
jmp
aam
clc
outs
adc
xchg
jg
jb
lods
ret
xor
loope
popa
mov
pop
mov
pop
fsub
lods
ins
fnstsw
out
cmp
add
push
jns
cmp
ins
call
cmps
dec
push
imul
rcr
sbb
pop
jae
shr
push
jecxz
stc
pop
xchg
push
addr16
sbb
push
iret
mov
xchg
jb
mov
aaa
shl
xor
cdq
popa
(bad)
jns
sbb
push
addr16
stc
xchg
mov
shr
fstp
popf
setns
mov
scas
(bad)
dec
repnz
test
sbb
jl
fsubrp
mov
js
sbb
sbb
push
lock
and
jp
ficomp
movs
aam
lahf
sbb
clc
mov
aas
and
out
sub
in
sbb
cmps
adc
or
pop
imul
cld
mov
fidiv
xor
rcl
and
sbb
shr
pop
movs
ss
jg
(bad)
xchg
sub
jg
(bad)
mov
shl
test
(bad)
push
mov
out
xor
movs
jnp
push
ja
pop
es
inc
push
inc
fsubr
jmp
fadd
icebp
inc
adc
push
neg
fist
sbb
ja
mov
lock
rol
jl
xchg
adc
inc
retf
xchg
cmp
xchg
xor
sub
movs
pop
mov
adc
xor
clc
out
cmp
and
dec
ret
cmc
pop
sahf
in
jo
loope
mov
imul
or
jle
jmp
lock
popf
ret
in
scas
pop
jns
jmp
jl
mov
sbb
add
jo
fdivr
stos
push
jns
adc
fs
jmp
sub
pop
mov
pop
inc
lods
jo
adc
in
movs
ja
or
dec
inc
aad
test
shr
push
mov
ret
adc
enter
(bad)
pop
(bad)
icebp
ins
xor
in
js
xchg
pop
clc
cmp
cmp
bound
cld
test
inc
push
sahf
arpl
and
mov
lods
jle
jp
pop
pushf
mov
and
push
xchg
add
cmps
out
cmp
push
xchg
sbb
stos
cwde
sub
fs
dec
mov
lods
dec
dec
cmp
ror
jmp
jl
gs
fs
ins
lea
or
cmp
push
jae
mov
pop
pushf
aam
les
bound
cmp
les
pavgb
or
xor
out
mov
xor
adc
unpcklps
jg
fisub
jo
push
fwait
loope
pop
test
mov
sahf
xchg
cmp
fwait
call
push
and
lahf
fstp
sbb
aad
retf
call
inc
les
jnp
sbb
movs
popf
cmc
push
call
add
add
push
sahf
mov
aaa
movups
test
xor
(bad)
jle
in
fld
popf
popf
into
add
int
inc
out
ror
jg
push
or
sahf
add
and
ret
(bad)
jge
int3
jnp
add
xor
call
sbb
fmul
adc
pop
outs
lahf
ins
inc
adc
adc
fs
test
shl
std
icebp
dec
ret
mov
neg
pop
out
sahf
outs
cmp
push
jp
inc
xor
clc
fwait
into
out
loopne
mov
adc
iret
arpl
les
stos
adc
shr
pextrw
and
test
xor
stos
inc
adc
sbb
add
dec
mov
mov
jno
adc
fistp
je
add
enter
icebp
sub
daa
add
rol
in
dec
xor
mov
ret
add
xor
enter
cmps
sub
imul
int
dec
adc
vpavgw
(bad)
fild
jne
les
inc
mov
push
push
xchg
mov
ja
mov
jmp
fstp
dec
es
add
push
inc
test
fdiv
xchg
test
mov
xchg
stos
loope
cmc
div
jmp
in
bswap
cs
xor
mov
test
pop
inc
ins
sbb
mov
aas
dec
xor
inc
mov
pop
xchg
adc
mov
shl
sub
push
and
cmp
xor
ficomp
sahf
imul
ror
sbb
outs
adc
ins
leave
or
add
push
mov
or
mov
mov
xchg
dec
push
in
dec
loope
and
inc
lods
or
cli
test
and
(bad)
retf
jecxz
add
adc
lahf
ror
push
ss
push
inc
or
xor
ins
push
adc
lea
or
push
pop
neg
push
mov
or
pop
cmp
dec
shl
loop
sar
mov
aaa
es
push
call
push
jmp
out
xchg
popa
movs
clc
in
inc
and
ror
sub
inc
jl
adc
add
push
dec
(bad)
cmc
add
inc
xor
push
sbb
jo
fnstsw
je
dec
dec
mov
outs
adc
imul
mov
nop
in
cmp
bound
xlat
outs
sbb
adc
lods
retf
ds
xchg
mov
test
clc
xchg
jno
jae
adc
movs
adc
and
or
jge
int
fcmove
cmp
out
jge
in
in
or
in
sub
push
or
pop
push
dec
cdq
into
jle
dec
outs
outs
adc
and
stos
scas
xor
pop
push
iret
adc
sbb
jmp
dec
jne
xor
adc
mov
sbb
jg
inc
nop
xor
and
adc
dec
inc
jmp
dec
(bad)
lock
xor
sahf
mov
(bad)
imul
dec
inc
xor
movs
fnstcw
push
mov
movs
push
push
push
push
xor
and
mov
xchg
cmps
(bad)
cld
push
inc
loope
rcr
sub
inc
push
out
xor
out
retf
fimul
xchg
(bad)
and
jb
dec
jo
pop
cmp
jl
fs
test
sbb
out
int
outs
and
inc
pop
gs
mov
lods
or
int
std
lock
cmp
push
cmp
lods
btc
shl
cmp
(bad)
aad
jmp
aad
or
pop
mov
rcr
and
lods
jno
xchg
mov
mov
popa
ja
int3
ficomp
mov
iret
push
jnp
dec
nop
push
repnz
shl
cmps
adc
mov
call
outs
add
inc
add
mov
inc
xlat
stos
je
bound
pop
lods
xor
mov
fs
xlat
movaps
mov
jne
add
(bad)
xor
data16
cmp
lods
cld
inc
mov
mov
sub
test
dec
aaa
(bad)
push
adc
pop
dec
test
jo
inc
push
sub
mov
daa
jmp
fsub
data16
ja
inc
repnz
push
cli
sub
pushf
pop
push
xor
inc
iret
arpl
and
retf
or
imul
cmp
dec
inc
pushf
cmp
inc
jno
or
sbb
xlat
repz
call
xor
into
aas
aaa
add
lea
clc
xor
xchg
nop
iret
mov
rol
int
add
and
ret
lods
inc
js
stc
adc
mov
push
cmp
push
std
dec
mov
rcr
mov
push
in
in
push
fsub
push
jno
shl
retf
outs
pop
cld
in
mov
outs
jno
mov
stos
cmp
pop
mov
adc
mov
push
mov
stos
sub
push
enter
loop
mov
dec
adc
jl
cmp
out
test
neg
push
sub
or
lahf
sbb
jo
sbb
sti
loopne
jmp
inc
xchg
jp
sbb
jbe
and
jns
adc
loop
or
pop
xor
pop
lock
cmovg
ja
int3
push
xchg
push
fdiv
cmp
pop
jno
out
cli
xlat
mov
js
sub
xchg
cmps
jo
xor
mov
sbb
shr
int3
ins
hlt
xor
dec
adc
in
jmp
mov
sbb
adc
ss
inc
xchg
mov
adc
pop
cmc
imul
jmp
sub
pop
in
cmp
mov
push
je
xor
es
or
jns
mov
inc
and
ja
xor
xchg
and
pusha
aaa
xchg
cmp
int3
popa
lock
shl
movs
or
outs
aas
inc
pusha
sub
mov
cmp
jmp
lock
or
(bad)
loope
jnp
sub
sbb
mov
mov
pop
jns
pop
cmp
xor
mov
adc
xor
loopne
xchg
mov
mov
mov
bound
movs
dec
imul
pop
push
mov
cmp
dec
pop
das
push
mov
scas
addr16
fcomi
rcr
shr
mov
push
not
(bad)
add
add
into
mov
jle
inc
in
int
lock
pop
push
iret
and
adc
fcomp
outs
mov
push
xor
cli
outs
jp
int
mov
push
daa
aas
outs
mov
gs
jmp
aam
cmps
push
(bad)
xchg
inc
repnz
retf
lock
xchg
sub
movs
pop
ret
sbb
xor
cmp
adc
loop
test
mov
sub
mov
sub
aas
sbb
stos
test
int
stos
mov
cld
les
inc
aaa
push
ret
adc
fnstcw
(bad)
pop
loopne
in
popf
fistp
mov
jge
xchg
aam
mov
ror
lock
jns
push
lods
jno
jns
test
dec
mov
mov
add
xor
jbe
mov
jmp
das
push
cmp
lea
pop
loopne
and
retf
scas
pop
pop
test
int
cld
fcmovne
mov
pop
pop
cmc
inc
and
orps
int
int3
sbb
ins
inc
xchg
clc
outs
ret
std
cwde
cmp
jae
inc
sbb
fwait
adc
stos
mov
(bad)
out
cmp
out
push
inc
mov
lea
mov
sbb
mov
push
jle
cli
xor
mov
(bad)
gs
xchg
inc
inc
mov
(bad)
xchg
fisubr
ret
cdq
xchg
mov
pop
inc
sub
inc
jno
pop
sar
mov
dec
jbe
(bad)
jge
ret
in
pop
in
stos
xchg
loopne
cmp
lock
int
das
sbb
sbb
mov
stos
movs
push
neg
xor
outs
add
cmp
pop
sbb
adc
test
int
jp
repz
loop
mov
xor
test
addr16
fistp
sbb
mov
lods
xchg
and
ror
add
xchg
shl
sar
mov
(bad)
out
in
arpl
mov
cmps
lds
xchg
add
cs
cmp
test
sbb
ret
sub
jmp
test
xchg
jbe
dec
call
lds
mov
rcl
mov
(bad)
iret
pop
mov
daa
xchg
push
dec
and
dec
in
push
xchg
pop
xchg
out
jecxz
jae
mov
je
mov
pop
pop
fdivr
mov
ja
dec
adc
scas
(bad)
jne
retf
cmc
mov
addr16
dec
pop
push
pusha
push
test
mov
pop
xchg
push
xchg
mov
fdiv
jp
mov
sub
scas
ins
movs
mov
aaa
les
retf
loope
push
mov
ss
pop
jne
lods
cs
popa
ss
mov
(bad)
in
into
xor
dec
mul
cli
scas
xchg
sbb
(bad)
(bad)
xor
stc
cmc
pushf
sub
mov
loope
push
sub
xchg
inc
sar
push
jmp
mov
loope
(bad)
push
inc
cmp
test
xchg
popa
push
jae
xor
aas
in
xchg
jmp
jge
xor
jb
mov
scas
jge
inc
mov
addr16
lahf
cmc
ret
sbb
pusha
fcom
scas
imul
jg
and
(bad)
stc
push
adc
sub
xlat
cmps
mov
add
xchg
and
mov
fcmovnbe
in
xor
pop
sbb
sub
rcl
xor
push
xchg
dec
mov
rcr
mov
fimul
in
push
std
pop
pop
pop
xor
call
imul
das
and
add
pop
jo
je
sbb
xchg
sar
je
xchg
(bad)
pop
stc
pop
lock
xchg
je
mov
fld
aas
mov
xchg
mov
cwde
sbb
data16
outs
pop
adc
repnz
ins
push
sub
sbb
cmc
mov
loopne
xchg
sbb
fdiv
sub
aas
sub
ror
sbb
add
adc
mov
cli
xchg
nop
pop
popf
fistp
jp
mov
mov
mov
and
jbe
or
out
addr16
sahf
imul
dec
fild
or
xchg
lods
inc
mov
xchg
mov
bnd
or
jl
mov
xchg
pop
xor
push
and
dec
pop
es
mov
jge
int3
and
retf
sbb
dec
shl
mov
enter
dec
out
mov
call
lods
or
or
out
pop
es
cmps
out
xlat
out
pop
sbb
adc
adc
push
sub
das
cld
retf
inc
pusha
lods
add
loope
pop
in
iret
adc
pop
jle
mov
arpl
cmp
cmps
xor
xchg
std
in
mov
push
adc
out
or
add
hlt
sbb
jecxz
mov
ret
dec
adc
and
cs
out
dec
(bad)
lock
mov
in
jp
outs
hlt
jl
xor
push
stos
shl
and
jl
mov
inc
or
mov
pop
and
nop
loopne
scas
inc
rcr
mov
mov
mov
test
xchg
or
repz
in
dec
jp
mov
leave
push
in
dec
or
cdq
pop
scas
imul
in
aas
add
mov
push
lds
mov
or
or
retf
loope
ror
add
in
sbb
or
mov
in
cwde
mov
mov
out
cmp
scas
jns
out
sbb
pop
leave
fidivr
das
inc
gs
sub
dec
data16
add
dec
jmp
aas
pand
pushf
imul
inc
imul
iret
dec
xor
xor
daa
or
cmp
mov
pop
mov
cli
push
stos
dec
pop
in
dec
fs
daa
pop
mov
mov
loope
lds
mov
or
xchg
pop
das
and
fmul
push
in
cmp
sub
je
imul
(bad)
neg
enter
jmp
mov
jb
jns
xchg
in
dec
sbb
sbb
dec
aam
retf
enter
test
push
imul
fwait
dec
xchg
push
test
and
lahf
sbb
into
mov
fild
out
inc
mov
retf
int3
dec
test
data16
jl
push
ins
or
movs
(bad)
fistp
fcom
or
mov
jo
jo
sti
and
int3
cli
test
sub
addr16
popa
dec
pusha
out
xor
or
cmp
pop
xlat
pop
push
jo
mov
movs
inc
adc
push
push
pop
push
mul
rcr
loop
pop
mov
cmp
jmp
or
sub
inc
lds
nop
les
push
mov
inc
sbb
retf
call
jmp
ins
and
sub
inc
fidivr
fiadd
adc
nop
jbe
mov
in
pop
mov
mov
jmp
xor
sub
mov
lahf
and
sub
ret
pop
in
in
xor
sbb
adc
scas
xchg
mov
add
shl
call
test
fucom
stc
mov
inc
inc
scas
in
pop
neg
sbb
aaa
(bad)
or
push
jno
mov
repz
dec
add
and
push
mov
mov
dec
or
repz
stc
pop
cmp
jecxz
(bad)
mov
lahf
dec
jnp
add
adc
push
daa
(bad)
cmp
jmp
mov
imul
call
xchg
jo
xor
dec
test
fndisi(8087
push
adc
cmc
inc
adc
mov
popa
lock
and
ja
test
xchg
fmul
mov
jp
pop
mov
push
mov
sti
mov
ret
mov
frstor
in
int
pusha
ins
dec
nop
movsx
xor
test
lahf
pop
inc
pop
jmp
xchg
cdq
lea
popf
mov
jo
fisub
(bad)
lds
mov
out
leave
sub
nop
jl
popa
pop
test
sub
imul
in
xchg
sar
mov
(bad)
mov
fwait
pusha
dec
and
sub
int3
or
xchg
iret
xor
cs
dec
pop
mov
ret
cdq
lods
mov
cmps
sbb
jnp
fbld
ds
jae
outs
(bad)
lahf
mov
nop
jbe
das
inc
and
shl
mov
ficom
ss
test
cmps
hlt
and
xchg
pop
ins
xor
and
cs
jmp
adc
jl
adc
push
sub
aaa
lahf
ja
mov
push
ds
mov
push
mov
cld
pushf
bound
in
icebp
add
out
out
jb
jp
mov
jmp
jne
pop
dec
lea
and
lods
or
inc
xor
push
scas
jb
adc
adc
mov
ds
sti
jns
dec
nop
loopne
jnp
jmp
out
cmp
jge
call
imul
jmp
dec
adc
push
add
imul
or
jns
or
cld
ins
(bad)
fisubr
popf
int3
aam
push
retf
xor
jne
cmps
mov
dec
fwait
cmp
mov
push
inc
sub
mov
add
cmp
or
push
mov
dec
call
imul
loop
inc
mov
loope
sub
inc
sbb
ins
sbb
(bad)
jge
loope
push
cmps
dec
inc
in
xor
cld
lock
sub
mov
inc
shl
push
mov
add
dec
dec
jo
pop
bnd
add
add
mov
inc
cmp
retf
jb
or
shl
and
in
dec
popa
inc
push
push
sub
ds
(bad)
push
bound
inc
pop
xchg
sahf
test
mov
jmp
sbb
repz
and
jg
sub
jge
add
js
dec
aam
jecxz
add
xlat
sub
mov
call
(bad)
xchg
fistp
out
int3
sbb
add
ss
xor
(bad)
jb
pop
xchg
push
adc
jmp
and
aas
in
sub
sar
pop
sti
dec
pop
xchg
cld
pop
jae
and
xlat
cmp
mov
popf
movs
aas
pop
push
imul
int3
int
sbb
cmp
xor
push
sbb
and
jo
shl
movs
imul
sbb
pop
or
in
ins
retf
push
jmp
cmp
test
dec
mov
jg
xchg
(bad)
sub
int3
pusha
mov
mov
pop
sbb
dec
push
adc
jns
dec
add
sub
jns
xor
xchg
clc
xchg
mov
icebp
mov
(bad)
imul
in
in
and
cli
sub
cmp
int
lods
leave
gs
pop
adc
leave
or
pop
ret
leave
push
into
xor
push
push
xor
nop
push
or
adc
dec
sahf
add
test
call
mov
add
cmp
xchg
push
test
and
push
cmps
cs
outs
mov
fisubr
dec
xor
bound
pop
(bad)
jg
push
shl
mov
stos
daa
hlt
push
outs
add
scas
sbb
add
or
pushf
stos
out
daa
add
add
scas
bnd
hlt
pop
popa
xor
lahf
cmp
ds
fst
sbb
pop
or
in
in
cmc
cmp
rcl
sub
popa
icebp
cmp
pop
arpl
mov
adc
sbb
in
(bad)
hlt
jns
cmp
repnz
mov
jns
xchg
pop
aam
hlt
pop
jmp
inc
popa
inc
push
sub
dec
test
fbstp
or
and
sub
sbb
mov
jae
(bad)
hlt
mov
sub
mov
ins
lds
or
pop
mov
aaa
mov
sub
xor
xchg
pop
xor
rol
call
cdq
push
jmp
js
stos
dec
dec
mov
pop
xchg
mov
add
push
(bad)
out
dec
jle
inc
cmp
sub
stos
in
popf
cmc
add
stos
adc
retf
in
adc
mov
rol
inc
mov
jmp
not
mov
inc
xor
mov
add
pop
mov
ins
cmp
aas
and
dec
cmp
push
icebp
bound
into
ret
(bad)
cli
retf
cmp
mul
ins
dec
addr16
in
mov
sbb
inc
out
dec
xor
fmul
cmps
popf
mov
jne
mov
push
in
inc
div
lahf
cmp
hlt
cmps
mov
out
(bad)
cmp
dec
sar
movs
push
dec
ins
pop
sbb
ins
push
pop
push
aam
bound
leave
adc
div
sbb
enter
neg
pop
inc
iret
cld
add
in
loop
jnp
shl
sti
jecxz
sti
mov
icebp
sub
mov
add
xchg
push
cld
mov
fisubr
mov
(bad)
shr
or
arpl
mov
push
shl
adc
jmp
dec
dec
sub
jns
inc
cmp
inc
mov
mov
movs
fcom
mov
rep
pop
out
mov
inc
cmp
and
fstp
outs
jle
push
push
adc
xchg
rcl
pop
or
xor
addr16
mov
fwait
test
aad
int3
test
out
mov
scas
dec
sub
mov
sti
test
stc
cwde
and
adc
sbb
or
push
jg
scas
test
xchg
inc
push
dec
xchg
inc
loopne
push
mov
dec
dec
pop
dec
sbb
fcom
pop
out
pop
pop
ins
mov
or
scas
imul
mov
dec
add
push
std
sbb
xchg
jno
mov
add
aas
and
aam
sbb
(bad)
push
add
cmp
mov
in
or
(bad)
imul
sbb
das
adc
adc
mov
fcmovu
dec
cmp
vpmacsswd
pop
xor
pop
ret
gs
jno
sub
cld
daa
xchg
push
mov
hlt
add
push
cmp
or
jp
sub
outs
and
or
add
pop
sahf
in
cmp
div
cwde
aaa
scas
xchg
test
mov
xchg
add
jbe
mov
in
enter
xchg
adc
gs
mov
(bad)
jno
arpl
sbb
mov
mov
xchg
out
lods
sub
(bad)
mov
adc
and
push
retf
jnp
push
inc
dec
in
cmp
test
(bad)
mov
mov
rcr
mov
lock
test
sub
or
jl
jo
pop
sahf
lea
xchg
(bad)
mov
sub
outs
mov
mov
sub
or
jl
mov
mov
jbe
cmp
pop
jnp
inc
mov
loopne
leave
ins
fimul
aad
hlt
xor
ins
push
sbb
push
mov
and
mov
retf
retf
jmp
mov
aaa
or
rcr
in
jmp
jecxz
popa
fsub
jl
pop
loope
test
ins
lds
add
dec
add
aad
jecxz
inc
hlt
clc
test
jne
or
dec
inc
loope
mov
lock
cmp
movs
out
scas
and
aaa
push
add
aam
into
pop
jg
aam
mov
lock
fistp
es
mov
xor
sbb
mov
jb
and
test
inc
in
call
mov
push
cs
dec
push
retf
call
fcomp
lock
adc
dec
das
std
dec
dec
fdiv
dec
mov
xchg
pop
adc
xchg
popf
sub
inc
and
ret
dec
mov
cmp
push
mov
push
and
mov
inc
repnz
into
mov
push
pop
cmp
(bad)
ins
arpl
jmp
fnsave
pop
xchg
out
xor
mov
loop
sub
xchg
inc
stos
xor
push
sar
jp
cs
xor
xor
lahf
mov
jmp
inc
lock
cdq
mov
mov
push
sbb
cmp
clc
jbe
adc
enter
xchg
les
lock
(bad)
hlt
out
sbb
cdq
std
jl
add
or
adc
mov
mov
cmc
sub
cmp
pop
mov
mov
rol
mov
jge
and
pop
imul
jnp
icebp
lods
add
mov
out
mov
out
lds
jmp
and
cmp
push
jmp
lods
jae
jbe
lea
stc
call
push
inc
stc
dec
jg
adc
adc
or
ret
mov
inc
mov
push
hlt
lds
repz
and
shr
(bad)
rcl
pop
rol
add
xchg
mov
dec
les
pop
xor
mov
arpl
add
test
popf
ret
xchg
lds
push
cwde
and
(bad)
mov
test
xor
add
(bad)
stos
lds
int3
jo
xchg
ret
fdiv
sbb
add
imul
test
ins
push
mov
jmp
in
add
(bad)
mov
pop
imul
fs
pop
stos
loope
and
in
mov
pop
call
pop
pop
pop
push
enter
inc
mov
fcmovu
cmp
adc
pushf
push
mov
adc
pop
in
mov
fdivr
adc
add
mov
movs
jbe
mov
cmp
pop
in
sar
dec
rcr
mov
fist
in
sbb
sbb
xchg
fbld
jae
cwde
inc
jmp
cmps
retf
lods
inc
push
icebp
loop
ins
test
push
and
inc
fist
and
pop
repnz
cli
pushf
repz
or
sbb
xor
push
cmps
mov
retf
jbe
xchg
jle
cwde
add
mov
sub
inc
(bad)
mov
jp
mov
xchg
xchg
sahf
jno
test
and
call
inc
pop
jb
ja
mov
push
fptan
fwait
push
lods
and
pop
sub
inc
mov
test
addr16
cmp
pop
pop
fistp
sbb
mov
mov
mov
out
addr16
sti
fisttp
push
jno
adc
jmp
dec
mov
outs
lods
test
ja
mov
mov
mov
leave
repnz
or
dec
ins
cmps
dec
lock
xchg
nop
in
out
cmc
push
js
sar
fdiv
push
sbb
int3
jno
add
scas
lods
gs
pop
sbb
mov
mov
push
mov
stc
adc
sti
dec
dec
cdq
mov
stos
mov
pop
xor
fmul
sbb
and
push
cld
inc
movs
xor
cmc
mov
int3
movs
lock
fs
jo
sbb
cld
add
and
mov
add
popf
xor
ja
cmp
sbb
test
mov
ficomp
mov
popf
inc
push
sahf
and
pop
inc
and
jp
push
xor
push
cmp
jl
push
push
outs
sbb
jbe
dec
lods
cmp
or
sub
sbb
lods
rcl
stos
dec
inc
leave
stos
jp
repnz
and
(bad)
push
add
add
arpl
mov
test
das
mov
dec
jnp
repz
dec
push
stos
rol
inc
dec
pusha
retf
lea
fistp
or
dec
xchg
loop
dec
lods
jbe
mov
xchg
sub
es
cmps
mov
mov
or
(bad)
pop
jae
jge
repnz
ret
push
pop
pop
cmp
scas
ss
sub
test
xor
out
pushf
jmp
mov
sbb
sub
movd
push
sbb
enter
stos
jo
das
mov
out
pop
push
fldl2t
ret
addr16
cli
and
jmp
sbb
jle
int3
clc
fsubr
mov
jb
mov
loope
rcr
add
push
in
cs
ror
cli
mov
cmps
pop
push
sbb
movs
pop
add
mov
push
lds
push
cmp
jno
push
out
hlt
lods
sub
or
scas
or
ret
mov
pop
pop
sub
xchg
(bad)
out
push
xchg
(bad)
neg
loop
mov
mov
bound
xchg
push
stc
imul
xor
and
or
test
or
clc
loop
cmp
mov
push
jbe
sub
inc
test
(bad)
jle
mov
inc
mov
ds
shr
mov
ss
(bad)
fisub
icebp
and
out
(bad)
sar
lock
retf
jnp
stos
add
or
cmp
pushf
scas
pop
xchg
push
cmps
jmp
sub
lock
xchg
and
and
jo
cld
in
adc
mov
out
iret
fdiv
popa
es
aas
pop
mov
jp
sub
(bad)
into
cdq
into
add
sub
fimul
aam
in
cmp
pop
scas
push
pusha
pop
jb
mov
out
out
cdq
or
jb
mov
lods
lds
mov
jns
jl
aad
cmp
aas
in
add
inc
shl
in
xchg
out
jmp
ins
and
rcr
(bad)
imul
into
call
push
mov
ds
push
out
rcl
ss
ss
repnz
and
add
xchg
imul
fisubr
jmp
ins
(bad)
ins
mov
jecxz
clc
pop
adc
ss
ins
int
cmp
cmps
and
fisubr
or
sub
mov
aad
sub
xor
add
mov
stc
xchg
add
add
arpl
sbb
dec
loope
xor
test
fcom
mov
out
mov
fisub
stos
jmp
xchg
retf
lahf
(bad)
(bad)
imul
bnd
daa
jno
hlt
(bad)
movs
inc
les
dec
into
jp
in
pop
add
(bad)
fistp
arpl
pop
addr16
and
push
cld
lock
pop
jne
mov
fisttp
sbb
sbb
jmp
leave
cwde
sub
mov
into
test
inc
jge
xchg
xchg
push
daa
push
dec
imul
popf
and
xchg
xchg
xchg
push
dec
idiv
dec
cmp
dec
push
mov
or
outs
repnz
dec
mov
jae
push
arpl
test
stos
call
add
push
into
xor
outs
(bad)
repz
in
adc
cld
cwde
xchg
push
test
dec
jnp
inc
test
xor
fidivr
cmp
mov
rcl
pusha
pop
sub
xor
and
repz
pop
in
(bad)
aad
out
add
cmp
ss
ins
(bad)
jp
dec
push
hlt
bound
push
outs
mov
shr
and
xlat
jp
jno
mov
hlt
scas
aad
mov
cdq
shl
jnp
shl
fisttp
cmp
aas
jp
repz
adc
dec
int
sub
xchg
(bad)
mov
lds
imul
imul
mov
cdq
xor
dec
bound
pop
dec
xchg
xor
sub
cmp
out
aas
mov
jmp
dec
int3
mov
stos
sub
push
dec
(bad)
dec
inc
push
or
lock
and
icebp
cmp
or
inc
in
cmc
add
push
retf
push
outs
(bad)
(bad)
bound
std
or
sbb
pop
cli
pop
jge
dec
pushw
pop
sti
add
sub
xor
cmps
jb
(bad)
repz
test
int
jmp
mov
fcom
cmp
push
adc
loope
movs
mov
jmp
ret
in
pop
dec
pop
fcmovnb
sub
sub
mov
mov
xchg
js
dec
imul
xchg
leave
push
xchg
(bad)
push
ss
adc
push
and
jmp
mov
jbe
mov
cmps
outs
pop
(bad)
xchg
out
nop
fcom
cmp
jle
outs
jge
xchg
rcl
xchg
cmp
sbb
pop
pop
sub
jl
and
cmp
push
jb
in
movs
test
fs
jno
cmp
int
sub
outs
pusha
dec
adc
aas
jle
mov
call
inc
sub
cld
push
ds
loop
dec
cs
xchg
(bad)
fcom
add
es
mov
ret
and
pop
je
stc
and
std
loopne
xor
(bad)
retf
sbb
mov
jecxz
fbstp
int
ret
rcr
mov
inc
jl
xchg
movs
lods
adc
jecxz
push
cmp
mov
cdq
rcl
lods
xchg
jge
mov
les
das
mov
mov
fbld
inc
mov
dec
xchg
add
mov
cmp
mov
mov
je
push
frstor
jmp
jg
mov
mov
aaa
icebp
mov
repz
fwait
sub
or
(bad)
sub
dec
pop
push
inc
nop
add
and
add
leave
call
add
push
daa
shl
inc
add
fwait
sub
push
pop
ja
xor
int
push
push
clc
adc
or
sbb
jmp
aam
xor
mov
or
les
and
jmp
ret
xlat
hlt
mov
xchg
xchg
jne
and
add
mov
push
stc
(bad)
(bad)
push
xor
mov
mov
loopne
das
aas
lds
xchg
lods
adc
sbb
xor
adc
dec
sub
jg
ins
cmp
push
out
or
ins
push
(bad)
sub
aaa
sub
cmps
mov
xor
les
mov
int
scas
inc
movs
pushf
repz
ins
sbb
sbb
push
or
out
sahf
and
cmp
in
push
pop
or
stc
(bad)
jmp
pop
push
mov
mov
jmp
data16
cdq
inc
push
addr16
sbb
cs
cwde
ror
mov
mov
jmp
inc
test
movs
pop
sub
arpl
daa
and
addr16
xor
in
add
imul
jl
enter
jo
cmp
out
out
(bad)
aam
push
outs
push
cmc
mov
adc
lods
mov
movs
xor
jmp
dec
es
(bad)
ror
xchg
out
aad
sbb
dec
xchg
scas
fild
(bad)
call
dec
test
push
jne
test
sub
or
and
movs
mov
pop
test
xchg
mov
fadd
gs
inc
cmps
adc
or
nop
xchg
sub
mov
mov
cmp
jp
popf
pop
pop
int3
sub
(bad)
inc
add
inc
stc
push
mov
adc
push
xlat
sbb
movs
(bad)
or
or
xor
pop
cmps
mov
imul
jo
or
pop
repnz
mov
fs
outs
and
call
in
enter
mov
jl
jo
fs
mov
inc
aad
retf
std
and
out
stos
sbb
popa
xchg
in
xrelease
mov
imul
mov
adc
jmp
pop
ss
pop
loopne
cmc
xor
fimul
sbb
add
cmps
xchg
pop
stc
int
push
rcr
or
inc
dec
jo
daa
pop
dec
shl
mov
leave
jb
fs
mov
pop
jge
dec
call
cmp
int3
pop
xlat
mov
cmp
lods
retf
and
jae
addr16
push
xchg
or
je
inc
sub
mov
xchg
popf
leave
mov
xchg
fnstenv
xor
sub
in
scas
pop
into
xchg
push
in
rcr
cmc
(bad)
or
sub
xor
pop
call
arpl
sub
leave
mov
push
dec
(bad)
out
xor
lods
imul
call
(bad)
in
push
sbb
lods
mov
out
int3
inc
sbb
lahf
xchg
ins
jb
movs
mov
inc
xor
sub
jno
stc
sbb
or
aad
xchg
adc
scas
jne
ret
xchg
arpl
dec
inc
loope
sti
adc
jo
xor
push
mov
ins
int3
xchg
xchg
fstp
inc
cmp
pop
sbb
and
push
outs
and
les
sub
mov
out
mov
aas
xor
retf
push
push
dec
popa
pusha
and
jp
(bad)
or
push
xor
push
aam
mov
jbe
inc
pop
fild
bt
adc
jno
mov
jns
xchg
(bad)
arpl
and
inc
mov
cdq
mov
push
jno
fiadd
mov
es
fs
lock
(bad)
xor
lock
out
mov
xchg
dec
jg
scas
cmp
mov
nop
mov
pop
es
jmp
inc
call
fldenv
int
clc
mov
inc
mov
stc
adc
in
aaa
fisub
daa
xor
fidivr
jae
test
icebp
jno
retf
jmp
jb
fidiv
jp
ret
test
mov
adc
add
into
js
mov
mov
adc
xor
push
mul
push
(bad)
xchg
push
lock
fiadd
shl
sbb
cwde
inc
shl
cld
sti
movs
sbb
in
loope
ss
xchg
mov
jl
jge
mov
int3
retfw
pop
(bad)
enter
iret
jp
aad
mov
lea
xor
aas
repnz
add
sub
sbb
jecxz
pusha
cmps
clc
fistp
sbb
pop
adc
and
das
inc
movs
dec
cmp
adc
ror
out
(bad)
fsubp
shl
xchg
jge
ins
pop
fmul
jmp
jnp
add
add
lea
idiv
mov
push
jo
ss
nop
loope
out
jb
pop
add
cmps
arpl
retf
retf
mov
lods
bound
inc
sbb
sbb
xchg
jae
xor
stc
aad
nop
adc
or
fldcw
dec
ja
adc
pop
mov
leave
pop
(bad)
rcl
push
dec
imul
call
push
sbb
ins
xchg
dec
xchg
cmc
fcmovbe
(bad)
jo
ins
test
movs
imul
hlt
cmc
fcomp
mov
je
cli
inc
stos
daa
mov
pop
shl
jnp
xlat
pop
inc
xor
push
mov
mov
neg
jle
imul
mov
mov
push
jmp
push
cwde
add
push
arpl
das
mov
leave
inc
and
inc
mov
test
mov
scas
ficom
loope
add
sahf
adc
mov
add
stos
adc
inc
mov
xchg
or
sub
or
add
lds
jg
sub
jp
shl
mov
adc
arpl
jno
test
shr
sahf
add
sbb
lods
adc
dec
jo
jge
pop
cmp
inc
push
jns
inc
movs
jo
mov
fcomp
cmp
(bad)
add
mov
jl
imul
and
sbb
aad
(bad)
lods
dec
mov
or
adc
loopne
dec
jecxz
call
inc
and
pextrw
arpl
push
or
add
lods
fs
xor
fisubr
add
or
jl
fnsave
pop
and
cwde
pop
xchg
out
test
mov
pop
mov
int3
push
les
or
inc
(bad)
popf
add
push
xor
shr
cli
sbb
mov
js
lds
ss
cs
pop
loopne
xchg
xor
xchg
jbe
adc
jae
sbb
xchg
repnz
xor
mov
dec
and
std
test
(bad)
outs
dec
enter
add
lock
cmp
pop
(bad)
es
stos
push
jl
rcr
les
bnd
fstp
gs
test
mov
bswap
mov
jp
fistp
je
jo
push
fild
jbe
fisubr
(bad)
call
xchg
lds
movs
scas
jecxz
sbb
out
rcl
popf
out
pop
cmp
rcr
jae
sbb
int
inc
mov
inc
test
push
jecxz
pop
cmp
pop
jmp
push
adc
ja
xchg
iret
clc
out
mov
out
in
xchg
mov
retf
mov
arpl
jmp
dec
mov
xchg
pop
lea
loopne
jb
fld
out
adc
fcomp
xor
adc
stos
xchg
rcl
or
sahf
cli
sub
mov
aaa
movs
sar
mov
mov
pusha
xchg
imul
cmps
xor
mov
xor
push
(bad)
mov
cmc
test
xchg
fisttp
rol
sahf
repnz
test
push
mov
es
(bad)
cs
pop
mov
jecxz
int3
gs
fucomp
aaa
stos
add
std
es
push
push
cmc
mov
mov
rol
xchg
cmp
out
ins
jno
xor
test
push
icebp
in
pop
mov
or
pop
push
xchg
ret
mov
hlt
loopne
jnp
sbb
mov
ror
cmp
pop
out
jle
fnstsw
mul
or
inc
scas
call
mov
popa
pusha
sub
inc
cmp
push
aam
push
add
repz
jbe
pusha
adc
pop
cs
ja
xlat
adc
inc
mov
outs
std
(bad)
push
in
push
sub
mov
add
inc
push
popf
sub
mov
push
mov
mov
add
adc
stc
push
mov
push
push
hlt
and
aad
shl
gs
int3
pop
pop
int3
mov
retf
in
lods
xchg
jecxz
shr
or
mov
aam
daa
mov
push
jmp
cmp
jecxz
cmp
pusha
mov
ficom
mov
push
mov
fld
cmp
out
cmps
and
test
pushf
pop
data16
jo
cmp
mov
fs
addr16
aad
jecxz
mov
(bad)
inc
add
inc
cld
mov
xchg
cwde
loop
xchg
push
hlt
adc
mov
cs
repz
jmp
mov
js
sub
pop
mov
int3
add
sbb
mov
dec
pandn
popf
jo
cmp
and
fdiv
push
jnp
pop
shr
inc
leave
pop
popa
and
mov
mov
push
out
sqrtps
xchg
fnstenv
leave
repnz
mov
or
push
sbb
out
nop
mov
les
je
inc
popf
xor
sbb
or
and
aas
cdq
and
push
sbb
cmps
dec
xchg
adc
lds
ins
push
push
retf
ins
jns
and
imul
sbb
sub
imul
ret
or
ret
bound
sbb
ss
or
mov
lods
ret
ret
ror
and
fucom
sub
xchg
mov
lods
cmp
push
daa
dec
dec
lahf
xchg
imul
inc
xchg
fcomp
pop
jge
test
inc
add
jae
mul
addr16
pop
push
ret
adc
sbb
cwde
enter
in
paddusb
frstor
pop
mov
sbb
in
cmps
and
jg
sbb
enter
in
ret
out
sbb
cli
push
sbb
aam
repz
xchg
lock
test
addr16
fild
xchg
xchg
mov
jbe
(bad)
dec
pop
mov
adc
stos
aad
rcl
mov
xchg
push
call
push
pop
jl
retf
fdivr
aad
ds
sub
(bad)
loop
mov
cmps
cld
pushf
aas
int
lods
mov
push
aad
or
(bad)
sar
push
fwait
mov
xchg
bound
jg
cld
mov
mov
stos
sbb
pusha
test
(bad)
and
(bad)
cmp
lock
pop
mov
ds
bound
aaa
lahf
scas
jle
sar
imul
push
push
sbb
mov
mov
iret
ret
cwde
scas
or
cmp
repnz
sub
rol
mov
sbb
scas
mov
cmps
repz
jg
mov
add
push
int
bound
nop
jge
pop
inc
gs
addr16
mov
dec
in
hlt
pop
dec
inc
fisttp
xor
mov
push
cmp
push
mov
mov
sbb
add
push
cmp
icebp
pop
scas
mov
(bad)
inc
cmp
ret
add
sub
dec
mov
and
xor
mov
aam
fisub
in
pusha
mov
out
inc
sbb
sti
call
cmps
mov
sbb
movs
mov
jle
loop
repnz
jb
dec
pop
out
jg
stos
and
xchg
and
xor
pop
rol
xchg
cmp
shl
es
cwde
mov
cwde
cmp
mov
mov
ds
scas
int3
adc
add
jns
sbb
dec
pop
shr
dec
sbb
or
or
sub
push
mov
push
call
movs
psubq
mov
or
xor
jmp
or
jge
xchg
mov
icebp
add
mov
(bad)
call
outs
lods
dec
rcr
xchg
push
ins
pushf
loope
add
or
xlat
lds
sar
jae
sub
shr
jo
xchg
mov
test
ins
or
clc
sub
jae
(bad)
and
adc
and
pop
mov
jge
xchg
or
cs
mov
in
add
(bad)
jmp
ret
adc
js
jae
frstor
arpl
pop
mov
mov
push
shl
xor
jmp
jmp
(bad)
retf
cdq
mov
inc
push
sub
sub
push
mov
cmp
nop
pop
ins
imul
call
movs
fisttp
mov
pop
rol
and
es
sti
popf
xor
and
outs
pop
shl
jb
add
mov
test
cli
jmp
movs
int3
nop
stos
scas
jnp
sub
and
mov
push
and
test
in
movs
ins
imul
pop
imul
out
or
cmp
out
push
xchg
cmp
stos
push
adc
jg
xor
popa
push
xor
bound
enter
and
jo
xchg
loopne
add
out
cmp
adc
stos
shl
xchg
fist
(bad)
ss
int3
aaa
or
cmp
(bad)
xlat
cwde
arpl
fwait
mov
stos
mov
and
push
icebp
jb
call
mov
push
loope
or
outs
stos
add
jp
mov
in
outs
cmp
ret
sub
pop
dec
lea
call
pop
adc
test
lea
adc
push
cmp
stc
add
jmp
into
mov
jae
scas
cmp
dec
cdq
in
sub
shr
mov
sbb
dec
pop
dec
(bad)
ins
lds
push
stos
jnp
dec
push
(bad)
xchg
add
xor
ss
outs
or
sub
(bad)
cmc
add
cmp
inc
sub
movs
push
adc
jb
xchg
cmp
pop
push
push
push
fs
pop
xor
mov
cli
pusha
cld
jmp
das
push
and
call
mov
mov
jmp
push
arpl
adc
ret
leave
icebp
push
scas
add
outs
sbb
js
mov
jne
jno
mov
sbb
pop
icebp
pop
mov
mov
popf
cli
or
dec
mov
ins
aaa
jnp
hlt
rcl
jns
push
cmps
fst
dec
(bad)
repnz
jmp
test
pop
and
test
das
jae
cmp
inc
jb
in
mov
clc
add
adc
aas
cld
sahf
out
fmul
inc
ins
mov
jmp
xor
aam
mov
lahf
or
test
call
push
shl
adc
cmp
sbb
test
lea
repnz
pop
test
mov
sub
add
sbb
sub
jl
fwait
or
bnd
aaa
and
cmp
sub
cmps
enter
cmps
nop
pop
pop
push
call
ins
or
add
and
in
stos
(bad)
popf
fild
(bad)
push
je
push
movs
jecxz
and
ins
mov
push
xor
adc
jne
mov
dec
(bad)
sub
pop
pop
mov
mov
les
mov
call
in
das
imul
movs
inc
or
aaa
mov
repz
and
and
xor
bound
neg
mov
push
pop
sbb
cmc
mov
lock
popf
shl
cwde
pusha
in
out
repnz
pusha
pop
test
jle
pop
dec
stc
lods
out
movs
xor
add
xchg
dec
push
iret
fstp
jno
in
in
(bad)
fcmovnbe
push
sbb
aam
add
pop
das
iret
dec
mov
popa
ins
mov
sub
retf
mov
push
jne
sub
popf
mov
adc
adc
nop
sbb
xchg
adc
mov
repz
repnz
dec
cmps
and
(bad)
cmp
mov
push
and
sub
jmp
mov
fsub
xor
sbb
sbb
pop
adc
inc
dec
shr
into
in
push
enter
call
call
ds
jns
enter
pop
sub
movs
and
sub
mov
scas
sub
inc
inc
pop
stos
pop
inc
dec
push
push
(bad)
loope
lock
hlt
(bad)
out
push
test
es
scas
jecxz
push
push
pop
retf
mov
sub
ror
cmp
pop
aam
loop
sbb
ins
mov
jl
mov
mov
out
scas
enter
call
test
dec
mov
lea
mov
mov
rol
jmp
popa
xchg
(bad)
cdq
out
or
mov
(bad)
lods
adc
or
push
fwait
push
pushf
sbb
sub
cmc
sbb
popa
(bad)
xchg
cmp
dec
cdq
adc
mov
jp
cwde
out
mov
mov
retf
(bad)
jmp
inc
or
call
lods
cmp
push
or
int
outs
jmp
xchg
push
nop
push
xor
adc
gs
adc
xor
push
or
das
xor
bnd
(bad)
data16
lods
cwde
jno
push
adc
jno
cwde
pushf
popf
aaa
retf
fisubr
cmps
out
mov
sub
jae
xchg
dec
pushf
jl
cmp
cwde
ror
push
cmp
nop
pop
test
outs
push
in
test
jle
adc
(bad)
imul
jno
mov
mov
scas
into
lock
mov
(bad)
jmp
retf
and
mov
(bad)
jb
dec
out
pop
movs
push
jmp
add
adc
ss
in
mov
or
mov
int
cmp
sti
fcom
fcom
mov
js
retf
pop
stc
jne
add
add
arpl
xor
fadd
mov
(bad)
push
movs
adc
pop
test
sbb
aad
inc
xlat
sub
adc
inc
jg
sbb
sub
fbld
mov
and
dec
xor
mov
adc
daa
or
cli
jmp
idiv
aas
test
test
sbb
and
mov
dec
ja
adc
pop
push
hlt
mov
repz
sbb
icebp
ins
scas
cmps
mov
stc
push
or
xor
push
sub
or
pop
mov
mov
push
push
cmp
lock
lahf
ret
scas
inc
xchg
(bad)
mov
push
xlat
es
mov
inc
xchg
mov
jp
jns
nop
cli
mov
xor
xchg
(bad)
repz
lahf
dec
iret
pop
jns
pop
xchg
arpl
xchg
push
adc
ret
mov
add
or
sti
add
adc
pop
movs
push
leave
loopne
fiadd
push
fxch
scas
clc
xor
inc
mov
nop
popf
scas
push
dec
ror
jbe
cmc
jmp
add
cmp
mov
fldcw
sub
rcr
dec
cld
xor
inc
push
inc
push
cmps
xchg
addr16
xchg
repnz
xchg
retf
mov
in
mov
adc
dec
inc
cli
sub
adc
xchg
(bad)
jle
test
into
js
pop
dec
out
imul
lds
ins
add
mov
test
push
std
mov
xchg
pushw
mov
imul
jp
imul
jne
(bad)
push
fbld
sbb
retf
mov
dec
push
ds
test
jle
mov
aam
dec
rcl
sbb
out
movs
int
pop
mov
imul
lds
out
inc
sbb
popf
test
pop
movs
adc
aad
cmp
push
push
mov
xchg
retf
hlt
sbb
jle
lock
(bad)
xor
(bad)
sbb
scas
push
or
jmp
push
fst
add
pusha
sbb
pusha
jb
aaa
mov
inc
ret
bound
push
dec
das
iret
arpl
mov
mov
adc
mov
xchg
inc
fadd
or
and
or
and
movs
out
test
adc
dec
xchg
mov
jnp
and
add
and
pop
xlat
push
dec
fisubr
pop
pop
push
inc
cmps
mov
retf
sbb
enter
sub
xlat
cli
adc
cmp
out
push
dec
outs
std
pop
dec
lods
push
aas
pop
stos
dec
push
and
pop
sbb
inc
scas
aam
and
sbb
add
ss
inc
push
gs
ds
jb
shl
mov
daa
outs
adc
pop
and
jae
mov
fst
fdiv
inc
xchg
mov
jmp
pop
inc
cli
or
xor
cmp
call
add
sbb
call
and
aam
scas
sub
jne
jge
bnd
ret
addr16
sub
call
adc
dec
jecxz
retf
dec
rcl
xlat
or
mov
or
jae
(bad)
scas
lea
cmp
xchg
xchg
and
shl
xor
neg
jge
mov
adc
adc
or
outs
sbb
mov
inc
xchg
pop
in
movs
fmul
loop
sub
rol
pop
inc
in
dec
dec
xchg
popa
jl
mov
js
or
mov
xor
rcl
in
add
icebp
lds
int
inc
dec
mov
inc
mov
(bad)
sub
leave
rcr
aaa
test
daa
test
stos
push
xchg
call
pop
push
call
(bad)
(bad)
in
mov
out
push
pop
and
leave
dec
mov
repnz
push
mov
push
push
pop
scas
sti
dec
inc
clc
rol
xor
xor
out
icebp
daa
mov
dec
mov
push
sbb
sub
movs
call
sub
xchg
and
push
sar
mov
gs
sbb
shl
cld
fisttp
mov
addr16
adc
mov
jo
aaa
fucomp
(bad)
mov
cmps
call
cmp
jmp
enter
push
les
sub
repnz
jecxz
mov
cwde
adc
mov
add
mov
xor
xor
sub
push
push
add
ja
jo
movs
fs
or
bound
fcmovbe
dec
ins
push
adc
jo
cmp
jg
inc
push
popf
iret
int
repnz
xor
push
xchg
cmp
xchg
pushf
pop
dec
jmp
and
jae
pop
push
scas
jmp
leave
arpl
retf
jmp
adc
xlat
fimul
xchg
out
sbb
inc
retf
mov
xor
pop
retf
sbb
cs
ds
xchg
popa
and
fstp
lock
pusha
adc
mov
cmp
in
sub
stos
inc
xchg
scas
push
add
sub
pop
mov
into
jae
leave
repz
sar
xor
fmul
adc
adc
or
push
lahf
imul
sbb
and
mov
mov
and
out
fisub
or
lods
adc
(bad)
loop
jmp
jge
adc
adc
jnp
and
cld
cmp
xchg
mov
sub
fcomi
bound
and
mov
jns
rol
(bad)
call
popf
repz
fwait
iret
xlat
mov
hlt
add
dec
loop
test
xchg
sti
sub
faddp
call
push
pop
cmps
neg
aam
les
pop
out
mov
rep
cli
mov
and
stos
add
repnz
mov
call
inc
inc
fisub
push
icebp
or
mov
mov
mov
pop
xchg
sub
or
movs
mov
cmp
mov
mov
cdq
dec
mov
fistp
cmps
sub
xor
ret
push
xchg
sub
mov
push
jp
aad
nop
lods
mov
(bad)
push
jecxz
mov
addr16
add
test
xchg
pop
cmp
in
int3
and
mov
mov
and
mov
into
ret
fmul
dec
std
sahf
inc
mov
rol
rol
sahf
xlat
aam
dec
sar
(bad)
iret
mov
push
sub
cld
push
dec
fwait
and
in
mov
in
or
xchg
jno
inc
imul
scas
push
xor
jmp
test
mov
fisttp
inc
jle
jge
push
lahf
cmp
mov
mov
pop
call
jns
dec
inc
and
pop
pop
xlat
xchg
push
mov
cmp
sub
aaa
mov
call
sbb
dec
retf
shl
ins
xchg
add
mov
gs
fsub
and
dec
mov
pop
cdq
lock
gs
out
into
in
lahf
ja
xor
mov
sub
and
(bad)
pop
push
jmp
shl
jg
cli
rcl
scas
imul
ss
fidivr
xchg
sti
pop
cmps
int
out
in
lea
(bad)
retf
jg
sbb
(bad)
adc
pop
ret
gs
int
pop
ins
mov
(bad)
adc
cs
fstp
mov
xchg
punpckhbw
jmp
dec
aad
je
js
aas
mov
inc
cmp
sbb
loopne
push
sub
retf
fxam
xor
push
dec
pop
pop
icebp
add
imul
inc
add
in
div
(bad)
cmp
pop
cmps
pop
dec
xor
fs
xor
dec
mov
(bad)
lahf
outs
jmp
popf
(bad)
retf
nop
test
mov
pop
and
sub
add
xor
pop
lock
(bad)
in
xchg
out
xor
mov
jecxz
jno
inc
(bad)
ror
pop
xchg
stos
lods
mov
inc
ins
mov
mov
scas
jecxz
movs
call
xor
sbb
leave
aas
dec
stc
stc
mov
jno
into
adc
or
cmp
pop
cdq
rol
outs
cwde
cdq
and
rcl
ficomp
es
inc
or
addr16
(bad)
mov
mov
fdivr
pop
aaa
dec
xor
cmp
or
ja
outs
mov
test
pop
test
pop
or
cmp
sbb
dec
mov
sub
mov
call
mov
sbb
fld
jns
mov
outs
adc
fdivr
iret
mov
repz
scas
xor
fsubrp
popf
into
cli
xor
mov
gs
fild
nop
add
popf
and
enter
dec
movs
mov
sti
and
pop
ins
mov
push
mov
shr
cmp
sbb
dec
xor
test
loopne
xor
xor
bound
daa
nop
vpsubw
sub
popf
and
push
shl
mov
sub
out
pop
pop
cli
sbb
mov
fstp
daa
mov
push
outs
or
out
sbb
bound
pop
adc
push
test
xor
inc
sub
popf
sub
icebp
xor
pop
dec
mov
aad
adc
xchg
(bad)
scas
imul
fscale
sbb
call
rep
inc
adc
int
push
jo
daa
in
fwait
mov
into
cmp
pop
loopne
mov
sub
(bad)
mov
enter
cli
and
ss
cld
dec
popa
jg
imul
push
cmc
jo
je
(bad)
cs
push
add
stc
pop
jae
arpl
pop
add
cli
mov
ins
lods
push
mov
leave
mov
sbb
movs
or
stos
sbb
je
add
idiv
jno
cmps
jle
mov
dec
jb
jp
clc
stos
xchg
push
jno
ret
sbb
pop
cli
stos
sti
lds
mov
sub
stos
inc
test
dec
pop
adc
movs
xchg
and
js
lahf
push
sbb
and
pusha
jmp
jmp
add
push
dec
je
jle
test
and
or
cmps
fld
iret
push
call
aad
test
dec
stos
sahf
sbb
xchg
sbb
adc
mov
jo
cdq
and
xor
movs
bswap
jns
mov
push
retf
pop
mov
xor
mov
fs
push
es
das
sub
push
push
fst
jae
cmp
test
sti
gs
and
cdq
ins
(bad)
clc
out
loopne
daa
adc
cdq
movs
sub
inc
push
or
in
and
or
popf
gs
into
in
sub
add
push
in
or
sbb
not
add
shl
out
lods
outs
or
mov
jle
xchg
cmps
repnz
aad
mov
ja
jbe
mov
pop
inc
ins
and
(bad)
js
mov
jp
(bad)
dec
push
stos
movs
and
(bad)
mov
add
(bad)
xchg
xor
imul
and
mov
pop
enter
cmp
dec
sbb
in
mov
popf
or
aas
inc
push
enter
sahf
test
xor
(bad)
pop
sbb
pusha
and
mov
cmp
into
scas
jo
lods
or
dec
scas
movs
xchg
or
(bad)
daa
push
into
and
xchg
push
dec
ret
mov
mov
and
lods
daa
add
jge
fwait
push
icebp
test
repz
mov
jle
out
cmp
mov
xor
push
cmp
jl
inc
jge
jmp
push
sbb
inc
out
push
bound
adc
aad
shl
inc
int
dec
mov
xor
sub
std
adc
dec
fld
mov
xchg
ret
mov
pop
int3
les
or
mov
dec
and
jns
test
stos
cmc
mov
push
cmp
or
imul
mov
dec
and
jmp
dec
imul
movs
lods
out
add
retf
or
xchg
mov
xor
test
push
mov
jo
enter
movaps
test
sub
enter
shl
push
in
mov
xor
test
scas
pop
mov
lods
test
xor
pop
popa
mov
xor
scas
test
xchg
jl
(bad)
dec
repz
add
xor
mov
popf
out
fucomip
iret
rcl
cmp
mov
test
cdq
cmp
adc
das
fwait
jmp
and
pop
lods
dec
mov
and
stos
or
aas
movs
dec
push
stos
xchg
sub
sub
(bad)
mov
mov
enter
inc
push
stc
sar
jp
test
retf
fisub
lea
(bad)
lea
mov
jl
push
xor
adc
icebp
mov
shr
ret
cmp
lods
or
jae
movs
xorps
jo
push
sub
rcl
sub
popa
jge
dec
outs
hlt
xor
jmp
stos
push
add
popa
movs
jge
or
addr16
clc
test
cmps
adc
fstp
neg
out
fisubr
xchg
icebp
stos
into
inc
shl
ret
push
mov
movs
test
scas
jle
adc
mov
(bad)
aas
mov
and
pop
hlt
pushf
repnz
loopne
out
cld
arpl
cmc
dec
je
in
fld
sub
pop
mov
lds
pop
pop
sub
push
push
(bad)
sub
jg
je
cdq
test
loop
rcr
int
or
daa
xchg
in
push
test
push
shr
mov
cs
add
jmp
pushf
jge
test
xor
iret
cmc
call
add
mov
daa
imul
pop
jl
jge
mov
cmc
ja
adc
lods
mul
push
mul
adc
gs
and
daa
mov
push
(bad)
lods
or
mov
sub
bound
push
mov
pop
ins
scas
aad
xchg
jns
inc
mov
scas
scas
mov
leave
cli
or
adc
test
ror
xor
les
jecxz
mov
sbb
clc
dec
xor
cmp
adc
daa
je
jle
sbb
jo
aas
test
jg
js
lds
jl
fstp
imul
or
xor
enter
daa
mov
adc
push
jp
or
add
xchg
push
shr
sub
adc
mov
sub
add
inc
sbb
xchg
adc
mov
cmc
in
pop
and
lock
sub
xchg
push
(bad)
fild
cmp
ins
test
or
test
aam
test
xchg
out
mov
xor
sub
dec
sub
outs
aas
jmp
inc
movs
jnp
sar
xchg
js
push
ds
mov
mov
aas
mov
mov
jmp
inc
and
scas
movs
push
or
stos
jmp
int
mov
fwait
sbb
sbb
pop
in
mov
add
and
mov
sar
out
jae
pop
add
rcl
stos
add
push
ins
jl
xchg
std
lods
lahf
mov
and
adc
scas
les
add
jb
cmc
mulps
add
je
xor
xchg
mov
imul
jo
mov
ins
and
mov
or
jo
mov
or
aaa
gs
lods
xchg
out
and
out
xor
daa
fwait
xchg
add
ds
int3
pop
(bad)
and
ret
test
inc
aas
pop
jmp
cmp
sub
jbe
pop
inc
hlt
push
jbe
push
cmp
cwde
ret
push
lahf
adc
mov
jae
leave
outs
cmps
rcl
pop
cs
sub
push
bnd
and
nop
sub
(bad)
mov
adc
cmp
pop
ret
imul
out
cs
ins
call
nop
mov
xor
bound
adc
pop
ins
nop
out
test
in
icebp
adc
daa
stc
into
(bad)
inc
jne
push
jge
jo
pop
cmp
inc
and
cld
clc
(bad)
mov
(bad)
fucomip
cmp
cmp
mov
gs
cs
mov
imul
mov
xchg
stos
fcomi
xchg
loop
adc
loop
adc
pop
call
icebp
cmp
jns
call
dec
mov
adc
mov
push
pop
and
dec
xchg
push
aad
icebp
jne
xchg
cld
ror
and
lods
mov
and
imul
adc
cmp
jb
xchg
data16
cmp
cmp
lds
mov
ins
xchg
mov
inc
imul
addr16
push
retf
dec
das
fmul
scas
stos
lods
mov
rcl
ins
xchg
xchg
dec
or
test
ficom
xchg
das
dec
(bad)
jne
dec
xor
jae
mov
adc
push
push
fs
pop
jl
mov
mov
sbb
out
mov
jle
retf
pop
sti
enter
and
xor
(bad)
and
jno
xchg
(bad)
adc
pop
and
cdq
push
xchg
cmp
lods
adc
aad
dec
cwde
xor
retf
xor
gs
(bad)
xchg
ins
mov
retf
sbb
stos
push
clc
dec
jecxz
(bad)
loopne
add
and
ins
pop
push
outs
scas
xchg
cmc
jl
ins
call
sahf
xchg
jmp
ss
stos
enter
jge
cwde
sub
jne
inc
aaa
jg
ror
aas
rcl
xor
xor
hlt
adc
ror
fs
push
outs
pop
adc
fisubr
mov
shl
jg
shl
xor
sub
xor
aaa
push
mov
stos
pushf
(bad)
sar
push
lods
add
sub
dec
inc
mov
jb
call
(bad)
push
shr
push
jmp
test
jnp
fstp
jmp
sub
sub
sub
xchg
push
stos
loope
or
in
mov
push
dec
push
stos
or
dec
adc
ds
jl
pop
int
loop
fldl2e
and
or
sahf
jmp
loopne
inc
fistp
dec
mov
xchg
cli
in
jge
mov
add
hlt
int
icebp
outs
xchg
push
adc
test
xor
mov
xor
or
add
xlat
jge
mov
test
adc
rcl
sub
mov
pusha
retf
jnp
mov
mov
push
sbb
(bad)
mov
inc
dec
pusha
dec
mov
sbb
dec
das
mov
int3
mov
or
rcr
jmp
mov
adc
or
pop
test
out
inc
dec
outs
aad
cdq
adc
sahf
sbb
inc
sub
aas
das
add
ja
mov
pop
or
push
pop
adc
or
inc
push
(bad)
mov
cmp
repz
scas
cld
pop
ffreep
and
add
lahf
aas
jp
outs
cmp
test
iret
or
sub
iret
or
(bad)
repnz
(bad)
pop
jl
xor
arpl
inc
and
adc
imul
push
shr
int3
or
fdivr
lock
dec
fidiv
pop
jecxz
in
(bad)
mov
lahf
imul
lock
cmp
mov
loope
jle
add
dec
sbb
sti
and
and
pop
jmp
cmp
cmp
out
xchg
aad
ins
jle
into
xchg
or
je
add
push
mov
jmp
imul
jle
mov
retf
pop
add
jnp
outs
jmp
pop
or
pop
jmp
cmps
or
out
out
fwait
cdq
popf
lds
adc
push
or
loope
jmp
pop
imul
xor
imul
mov
dec
xor
(bad)
jmp
mov
and
test
pushf
xchg
push
pop
les
adc
pop
lds
aam
dec
aas
repz
mov
xchg
in
adc
cmp
leave
pop
out
mov
cmp
mov
dec
xor
sub
daa
movs
lock
mov
shr
mov
das
sub
cmps
out
nop
mov
adc
je
or
or
int
out
fisubr
add
jno
retf
cs
iret
mov
test
test
shr
pop
enter
mov
imul
push
ins
mov
in
sub
add
retf
outs
scas
jecxz
lea
sbb
push
aaa
(bad)
mov
sahf
pop
dec
push
xchg
imul
mov
sub
xor
lods
scas
adc
and
sahf
mov
js
mov
std
xor
mov
jne
(bad)
cmp
inc
or
jnp
lock
fwait
(bad)
pushf
pop
nop
or
pop
aaa
xchg
imul
ss
fisubr
xchg
movs
aas
dec
xchg
mov
mov
sub
dec
pop
inc
xor
xor
sar
loop
je
jmp
sbb
jl
daa
pop
mov
jbe
jns
clc
ins
sub
ret
push
js
fwait
adc
xchg
jae
and
xchg
or
test
in
and
ror
and
inc
inc
shl
and
pop
pop
pop
ret
cmp
add
fnsave
mov
mov
and
xor
int3
jge
je
jg
mov
mov
leave
xor
fst
ret
adc
push
xchg
shl
dec
lods
into
(bad)
fmul
xor
adc
int
jp
jg
aad
xor
and
movs
pop
imul
(bad)
mov
and
mov
aas
fadd
mov
mov
xor
(bad)
rol
sub
dec
dec
mov
pushf
stc
sub
xor
movs
inc
mov
aad
movs
cmp
inc
icebp
xor
mov
push
in
ins
inc
ret
dec
scas
pop
movs
xchg
aas
out
xlat
fwait
xor
and
jb
retf
aam
mov
mov
retf
pop
lods
mov
sbb
int
imul
mov
dec
mov
pop
adc
addr16
fidiv
js
add
ds
sti
cmps
sar
sbb
add
dec
adc
xchg
add
not
fcmove
std
mov
cmp
loopne
js
cmp
leave
xor
push
je
retf
mov
shr
sbb
aad
dec
sub
das
cmp
rol
clc
out
mov
iret
std
adc
scas
fidiv
std
stos
xchg
popf
into
popf
fdivr
or
push
xchg
out
dec
xor
data16
push
mov
scas
sbb
inc
push
cmp
scas
inc
rcl
sar
jg
rcl
push
mov
arpl
mov
and
cmc
mov
fsubr
(bad)
call
das
sub
shl
pop
inc
and
mov
add
test
xchg
mov
clc
aaa
lea
push
xor
xor
or
lods
sbb
frstor
adc
sbb
arpl
(bad)
mov
inc
xchg
ins
iret
into
fstp
outs
xchg
fnstsw
fsub
scas
mov
xchg
push
movs
inc
je
pop
mov
or
stc
mov
call
inc
mov
jmp
pop
add
mov
pop
enter
or
mov
shr
jle
or
jle
repz
cmc
daa
or
jp
or
inc
cmp
into
fdivr
inc
dec
cmp
in
mov
or
ror
mov
xchg
idiv
mov
or
imul
std
cmp
or
mov
inc
pop
call
pop
out
cld
clc
mov
push
xor
pop
mov
sbb
fld
xchg
push
adc
(bad)
xor
or
rol
out
sbb
cmp
dec
sbb
jae
pop
in
out
xchg
lahf
pop
add
nop
(bad)
push
and
xor
push
push
sub
mov
xor
popf
mov
icebp
xlat
cmp
pop
aas
add
mov
inc
(bad)
inc
aam
push
out
or
loop
xchg
pop
icebp
call
jl
jbe
jae
xchg
jg
pusha
fstp
jno
jg
jge
and
xlat
pushf
iret
ss
enter
pushf
int
daa
out
cmp
mov
pop
or
mov
aas
fsubr
scas
ins
cs
lea
cmp
fidivr
mov
hlt
in
jbe
push
popa
sbb
xchg
mov
mov
mov
jno
in
popa
mul
pushf
sub
jno
push
and
adc
hlt
sbb
adc
aas
in
gs
in
cmp
daa
movs
(bad)
(bad)
stos
ins
sub
ret
mov
iret
inc
arpl
sub
test
mov
rcr
call
leave
enter
ja
push
and
push
shr
xchg
mov
int
into
xor
and
pop
cmp
fisub
inc
ja
inc
repz
sub
xchg
xor
cmp
or
pop
mov
stc
cmp
sub
in
and
test
push
add
push
push
and
loop
in
mov
cmp
fwait
push
mov
(bad)
retf
add
pop
and
sbb
lock
add
(bad)
int3
xor
sub
jae
retf
rcl
cmp
mov
mov
mov
in
rol
jo
jbe
adc
inc
out
xchg
lea
addr16
fidiv
fistp
xor
popf
sbb
mov
mov
cwde
fs
retf
mov
pop
in
jecxz
mov
mov
ins
outs
lea
cmp
shr
jge
fidivr
or
adc
sub
sbb
dec
mov
push
jg
jo
mov
dec
call
lea
loop
add
xor
mov
sub
cs
icebp
pop
push
adc
push
jo
cdq
jmp
mov
push
or
push
aad
fidivr
jb
mov
es
cmp
or
lods
ds
mov
std
pop
cmps
mov
xchg
mov
out
rol
ins
pop
push
pop
adc
mov
inc
mov
or
std
or
stos
daa
adc
repz
xchg
les
dec
lods
xor
push
call
mov
cmp
ja
sbb
rcl
adc
add
rcl
add
and
push
(bad)
call
out
and
je
mov
aad
stos
xor
test
stc
mov
jg
add
sbb
aas
call
jns
pop
and
jnp
add
(bad)
jmp
xchg
push
adc
in
in
fstp
gs
dec
and
push
mov
mov
push
ja
mov
sub
pop
pop
rol
cmp
xchg
xchg
clc
inc
mov
mov
aas
dec
sbb
repnz
fld
cwde
ins
sub
and
push
inc
ins
fst
push
(bad)
scas
test
pop
mov
icebp
sar
ret
sbb
adc
adc
test
pop
outs
xor
imul
mov
adc
push
mov
retf
jne
aas
and
repz
mov
icebp
add
dec
loopne
out
pop
pop
mov
stc
inc
fild
xor
test
test
jo
xchg
mov
add
into
mov
dec
dec
and
jp
jge
mov
stos
xchg
sub
imul
retf
and
add
xchg
push
rcr
shl
shr
ficomp
into
aas
mov
jmp
in
sbb
sbb
mov
sub
les
ret
adc
int3
es
dec
movs
inc
mov
xchg
mov
jnp
pushf
cmp
mov
inc
lods
jg
ret
inc
xlat
sti
mov
and
std
arpl
mov
sub
je
test
adc
xor
addr16
push
adc
adc
mov
or
sub
mov
jbe
and
mov
or
xor
scas
popf
fsubr
or
imul
jnp
add
adc
pop
or
and
dec
cmp
pop
movs
scas
cmp
jne
fsubr
mov
mov
cmp
push
sub
mov
mov
mov
mov
mov
xchg
adc
mov
ja
dec
scas
into
inc
js
sub
ins
inc
test
jg
sbb
or
and
fild
imul
aam
test
push
jle
outs
mov
sub
test
xchg
sbb
xchg
daa
add
jnp
mov
cld
mov
jg
or
fldenv
jno
popf
jae
fldenv
sbb
jmp
or
push
cmp
sub
std
sbb
pop
adc
in
rcr
xchg
jbe
icebp
lods
and
add
push
add
push
dec
inc
loope
loop
std
clc
jmp
movs
xchg
xchg
jmp
push
xor
push
retf
jmp
cmp
scas
in
shl
lods
test
or
retf
and
adc
dec
jbe
cmp
mov
adc
add
pop
cli
jae
and
xor
into
sar
enter
adc
(bad)
popa
sub
and
xchg
xchg
xor
jo
bound
scas
sub
(bad)
sub
std
sahf
dec
push
cmp
pushf
dec
push
das
pushf
sub
adc
arpl
(bad)
(bad)
cmp
cmc
push
inc
pushf
adc
sub
addr16
(bad)
arpl
jnp
sbb
inc
es
inc
inc
aaa
cdq
cmp
call
pop
lock
popf
stc
aad
mov
lea
jo
mov
or
cmps
pushf
out
retf
jmp
in
jge
scas
sub
sub
call
cmp
push
fsubr
mov
data16
je
push
dec
and
jg
sub
mov
mov
aaa
mov
in
fadd
and
jp
rcr
jl
xor
les
dec
imul
fisttp
pop
or
push
scas
call
xor
jg
mov
in
jno
imul
cmp
scas
ffree
sahf
ss
mov
add
cli
retf
push
sub
or
jle
jbe
test
add
clc
mov
std
(bad)
jmp
dec
mov
adc
popa
out
(bad)
(bad)
je
or
loope
outs
add
dec
mov
aad
push
dec
and
push
lea
mov
or
bound
movs
test
js
ror
(bad)
mov
mov
repnz
xchg
cld
mov
pavgw
pop
cs
pop
rcl
xchg
mov
jb
push
add
and
leave
sahf
pop
sub
xchg
mov
bound
popf
adc
jns
(bad)
enter
(bad)
jle
ret
add
jbe
cmp
fisub
fsub
not
xchg
mov
sbb
push
push
gs
fisub
mov
sti
ret
stc
mov
call
loope
sti
dec
daa
inc
jle
xor
cmp
mov
bound
cmc
int3
test
in
pop
xor
push
mov
popf
inc
cmp
scas
sbb
stc
or
mov
xor
or
aam
xchg
stos
pop
jl
out
adc
lahf
mov
cmp
and
adc
or
xor
dec
xchg
test
enter
cld
mul
mov
sbb
aas
mov
add
into
shr
jne
or
mov
sbb
or
sbb
out
mov
dec
xor
(bad)
xchg
dec
pop
mov
cmc
pop
retf
ror
inc
xchg
cmp
call
fs
cs
sub
jg
mov
lahf
rcl
jmp
or
mov
fisttp
daa
sub
and
jp
mov
(bad)
push
sub
das
hlt
fsubr
mov
jl
ss
push
inc
ret
lahf
xor
int3
adc
cmps
rcl
out
imul
dec
fmul
ror
stos
xor
inc
icebp
scas
pop
mov
popa
repz
cli
aad
add
push
cmp
cmp
or
ret
mov
shr
repz
rol
adc
cmp
and
pop
xchg
fs
std
scas
xchg
push
rcr
in
leave
ins
das
push
repnz
cmp
in
arpl
sahf
or
sti
pop
retf
mov
mov
ret
xor
push
mov
shr
leave
outs
retf
jge
mov
dec
cmps
dec
in
add
and
mov
cli
and
adc
cmp
xor
push
aaa
adc
test
in
mov
lock
jle
jg
and
ret
push
add
mov
inc
inc
test
test
sbb
addr16
jae
lds
cld
ds
mov
inc
out
lds
inc
pop
mov
sbb
push
stos
aad
adc
mov
adc
add
cmp
xor
jne
je
adc
push
inc
(bad)
icebp
jl
icebp
adc
je
out
jbe
xor
js
inc
in
xchg
out
dec
fsub
dec
inc
fidiv
push
call
cwde
and
inc
lds
mov
in
or
aad
aam
shl
add
nop
xlat
mov
ds
mov
cdq
fdiv
and
cmps
mov
push
fmul
dec
or
mov
retf
push
out
fwait
xor
mov
pop
inc
push
push
sbb
cmps
into
retf
inc
loop
pop
and
jmp
pusha
ret
(bad)
mov
daa
pop
mov
mov
ror
lock
icebp
not
or
push
lods
(bad)
sbb
cli
cdq
(bad)
push
ret
inc
jmp
rcr
in
jle
fbstp
cdq
mov
ins
gs
cmp
adc
cmp
out
add
icebp
imul
gs
imul
jp
mov
add
mov
stos
cs
mov
scas
push
repz
lods
test
pop
cmps
cmp
mov
push
adc
cmp
sub
adc
ffreep
inc
xlat
fbld
call
sub
xchg
jmp
cwde
adc
xchg
les
arpl
(bad)
jl
cwde
sti
out
call
push
rcr
mov
call
xchg
stos
mov
jo
movs
or
ret
jns
sub
xchg
arpl
inc
mov
movs
mov
mul
(bad)
sub
mov
addr16
neg
fdivr
xor
mov
push
dec
jmp
inc
jecxz
(bad)
dec
scas
stos
enter
cmp
out
or
test
xor
mov
scas
push
pop
xor
dec
mov
push
push
sbb
int
push
enter
xor
xchg
in
loope
imul
nop
mov
pop
jp
xchg
fisub
pop
sub
lea
fs
sahf
stos
pop
push
and
cmp
mov
dec
ror
and
add
cmp
cmp
pushw
(bad)
push
in
cs
xor
mov
mov
mov
mov
push
out
cmovo
adc
mov
cmp
sub
out
adc
mov
mov
or
lds
mov
into
(bad)
pop
out
jecxz
or
sub
test
test
dec
mov
push
push
mov
lea
stos
sub
sbb
xchg
shl
mov
dec
mov
call
test
mov
inc
cmp
call
xchg
jae
shl
xor
dec
inc
daa
cmps
call
jecxz
inc
mov
and
adc
mov
fist
or
in
aas
nop
push
enter
jb
sbb
jnp
int
dec
and
add
dec
in
fdiv
xor
shl
adc
sbb
ror
adc
or
lea
xor
or
add
sub
jbe
outs
cld
push
sub
lahf
push
aaa
xor
and
sub
sub
mov
pop
popf
cdq
cmp
and
mov
push
es
gs
dec
cli
sbb
dec
pop
lahf
movs
mov
lods
cmp
mov
repz
mov
push
adc
jl
inc
(bad)
cmp
clc
(bad)
jns
xlat
test
pushf
mov
popf
mov
mov
push
add
pop
mov
repnz
xchg
jp
inc
push
xor
push
pop
cmp
adc
test
mov
xor
adc
cmps
inc
adc
mov
inc
sbb
push
mov
call
xchg
mov
cwde
lahf
div
dec
lods
(bad)
das
sub
dec
pop
and
aaa
mov
xchg
sub
inc
or
mov
fmul
movs
call
add
in
and
mov
xchg
inc
ja
arpl
push
xchg
lea
pop
call
clc
lock
cmp
sbb
ins
jl
jge
adc
cmp
adc
mov
jmp
aam
add
jns
aam
and
int3
pop
mov
out
(bad)
loop
mov
sub
mov
sub
mov
(bad)
inc
fcom
(bad)
mov
lods
fcomp
fmul
push
push
xchg
push
imul
sahf
dec
sahf
add
push
out
and
add
mov
int
pop
(bad)
cmps
movs
and
jae
fnsave
(bad)
jbe
imul
lods
sti
sub
jo
popa
jmp
aad
pop
movs
shl
dec
pop
aas
pop
arpl
xor
adc
(bad)
mov
mov
scas
iret
rcr
adc
(bad)
ins
pop
push
cwde
xor
lahf
and
add
call
ret
ret
dec
xor
lods
test
in
out
in
mov
jp
cmp
sbb
retf
adc
or
or
ret
loopne
inc
adc
scas
jp
mov
das
sbb
mov
icebp
or
rcl
cmp
cmp
xor
test
mov
dec
push
shl
aaa
cmps
and
add
cmp
sbb
out
es
and
cli
ror
inc
aad
or
inc
outs
dec
mov
xor
push
adc
dec
cmps
and
xor
adc
push
push
cdq
(bad)
(bad)
and
push
scas
ins
mov
adc
scas
push
jb
fiadd
mov
icebp
cmps
fsubr
stc
push
mov
or
je
cs
xchg
lods
adc
ret
rcr
cmc
cmp
jne
adc
rcl
adc
scas
aad
xchg
pop
jb
jmp
adc
out
xchg
xchg
or
loope
ret
ja
push
cmp
cmps
xchg
inc
pop
rcl
inc
dec
hlt
push
mov
mov
cmp
fs
out
xchg
jg
push
mov
push
rcr
inc
dec
fistp
aas
arpl
xchg
add
stos
pop
pop
or
iret
(bad)
adc
push
aad
in
jle
add
imul
retf
jmp
cmp
and
out
sbb
dec
pop
(bad)
adc
pushf
or
or
or
ins
in
add
push
shl
dec
popa
mov
(bad)
push
mov
daa
jg
nop
dec
sbb
nop
in
fcomp
mov
jns
jmp
inc
mov
sar
ins
or
mov
ins
repnz
sub
add
loop
pop
fisubr
outs
mov
and
adc
xchg
hlt
gs
mov
std
icebp
retf
mov
shr
sbb
mov
call
sub
jle
pop
mov
repnz
or
mov
sub
cmp
das
mov
push
push
xchg
mul
push
sbb
inc
fbld
test
jge
push
mov
sti
inc
das
push
imul
and
loop
in
push
les
sbb
mov
pushf
loop
shr
loope
xor
jge
jl
cmp
xor
jge
jp
stos
shr
ins
add
jbe
inc
hlt
fisttp
loopne
arpl
bnd
cmp
push
popa
jbe
mov
push
(bad)
jnp
dec
(bad)
call
sbb
or
imul
mov
into
test
add
jno
mov
scas
repz
add
mov
inc
and
int3
pop
pop
or
or
jp
mov
hlt
or
imul
dec
gs
mov
aad
inc
mov
adc
mul
fcomp
rcr
in
js
add
cmps
adc
xchg
lock
out
test
shr
movs
xchg
sahf
fsub
fcom
adc
pusha
xor
push
push
dec
nop
add
sub
cmps
shl
or
test
pusha
sbb
sub
movs
lds
ss
stos
enter
scas
mov
mov
mov
xchg
mov
sbb
dec
push
adc
fadd
or
call
or
xor
scas
mov
push
mov
mov
xor
fwait
dec
in
add
jmp
dec
pop
pop
cmps
pusha
and
sbb
mov
dec
mov
aam
stos
cld
jmp
popa
mov
adc
ret
adc
or
xor
adc
sbb
inc
inc
mov
fld
bound
sub
mulps
dec
jnp
inc
adc
jne
lods
imul
stos
cdq
ficomp
jmp
ds
adc
movs
in
aam
fisub
js
push
push
push
pop
call
jo
mov
mov
stos
dec
dec
push
pop
ret
inc
adc
stos
fisttp
scas
fsub
iret
mov
arpl
pop
mov
mov
mov
fwait
loope
cwde
je
xchg
jmp
cmp
int3
xlat
cmc
or
add
sub
retf
cld
in
mov
stos
fdiv
push
inc
lock
cdq
sbb
xchg
jge
mov
mov
popa
add
mov
cwde
jecxz
ficom
inc
add
or
or
mov
rol
inc
jle
cmp
xchg
xchg
mov
cmps
push
sbb
into
inc
daa
jge
mov
out
aad
push
lea
push
fldenv
aad
cmc
pop
test
retf
inc
shl
mov
fadd
pop
mov
inc
(bad)
or
imul
pop
xchg
jae
lods
inc
xor
mov
iret
dec
je
cmp
cmp
xchg
or
jb
scas
mov
in
icebp
xchg
xchg
xchg
add
sub
adc
xlat
retf
xor
popf
fadd
mov
cli
std
jg
xor
push
sbb
pusha
fcom
(bad)
add
outs
aas
mov
and
rol
and
and
xlat
out
add
fnstenv
mov
in
mov
lahf
mov
inc
sub
rol
inc
fcom
and
and
mov
add
ret
sub
pop
arpl
into
adc
xchg
add
or
(bad)
or
mov
shl
dec
xchg
daa
xor
and
aad
adc
mov
dec
popa
add
cld
std
inc
fisub
in
mov
pop
xchg
je
add
lahf
sub
stos
mov
loopne
fsubr
cdq
xchg
es
push
xchg
imul
pop
push
repz
sub
sub
sbb
dec
fwait
(bad)
out
inc
in
mov
fcom
push
mov
xor
xlat
pop
fnstenv
aaa
dec
lds
sbb
shr
test
in
xor
ficom
outs
dec
mov
jnp
dec
push
cmp
in
dec
cmp
clc
loop
push
jne
mov
pusha
cdq
data16
retf
add
dec
int3
pop
mov
pop
cmp
(bad)
push
ffree
pop
das
sub
xor
nop
call
dec
mov
push
cmc
aaa
or
dec
(bad)
sbb
cmps
fstp
sub
dec
movs
inc
push
inc
out
movs
sub
mov
inc
sahf
lea
ja
dec
aaa
in
loopne
push
adc
enter
jge
push
cmp
dec
cmc
les
jbe
lahf
lock
add
pop
adc
aas
adc
inc
dec
add
jno
xor
jno
cmp
popa
shl
mov
cmp
addr16
popa
push
inc
push
mov
dec
stc
rcr
pop
sub
sbb
mov
(bad)
rol
scas
lock
inc
sub
inc
pop
xchg
or
push
clc
cmp
cmp
xchg
add
sub
inc
mov
cs
jo
call
das
ret
add
push
pusha
stc
cmp
jns
lahf
adc
cmc
adc
cdq
int
fst
xlat
cmp
sbb
shl
or
push
js
pop
lock
xchg
pop
clc
push
fmulp
aaa
loope
leave
repz
and
push
push
jmp
mov
add
dec
cmp
cmp
xor
mov
jno
lock
out
mov
aad
xchg
ins
fsub
add
sub
pop
fist
stc
sbb
fcmovnu
mov
xchg
add
outs
(bad)
and
mov
icebp
mov
inc
and
int
pop
sbb
add
(bad)
pop
inc
cmp
popa
mov
dec
pusha
xchg
(bad)
push
jno
mov
and
jmp
cwde
add
jno
jae
mov
(bad)
pop
ins
or
inc
push
inc
mov
dec
mov
mov
imul
dec
push
(bad)
xchg
dec
inc
add
out
rcl
inc
mov
das
rol
repz
pop
ret
stos
mov
addr16
sahf
lahf
ror
or
jne
or
aam
add
xor
pop
and
cdq
adc
pop
lods
dec
(bad)
sub
sub
repnz
ret
clc
(bad)
jo
test
sbb
pop
sub
cmp
out
dec
cmp
cli
ins
xor
ds
sahf
dec
test
jmp
sbb
rcr
retf
cmc
into
fidiv
pop
test
int
std
nop
mov
pop
in
arpl
lock
daa
movs
push
rcr
idiv
xchg
pop
bnd
sub
dec
shr
adc
add
mov
cmps
out
add
mov
adc
jmp
retf
nop
cmp
imul
sub
popa
or
pop
je
inc
jecxz
fcom
xor
call
and
dec
mov
mov
xchg
jns
mov
xchg
(bad)
jmp
xchg
int3
lods
push
loop
xor
test
das
sbb
out
jmp
adc
test
(bad)
mov
mov
outs
inc
pop
jecxz
aad
cmps
pop
push
mov
push
add
sub
(bad)
shl
stos
or
sub
dec
mov
xchg
push
jmp
mov
mov
mov
sbb
sbb
xchg
mov
movs
retf
xor
(bad)
or
sbb
and
dec
push
(bad)
push
outs
fidivr
and
dec
dec
inc
or
call
iret
ret
pop
dec
push
rol
mov
sbb
inc
jmp
test
cli
mov
adc
adc
add
fimul
(bad)
inc
xchg
inc
jae
and
and
out
mov
enter
ds
out
fldcw
mov
lds
push
sub
xor
test
stos
stos
jmp
outs
sbb
stc
fild
scas
gs
loopne
gs
call
sub
and
test
xor
es
int
add
mov
pop
jns
sub
sub
imul
fld
inc
outs
repz
add
stc
rcr
mov
push
dec
dec
fadd
dec
xor
push
xchg
mov
lods
xchg
push
out
inc
mov
sbb
cmp
push
aam
cmp
dec
or
sbb
pcmpeqd
test
mov
xor
(bad)
fisubr
iret
add
js
jnp
lea
iret
and
lds
push
add
adc
nop
add
lods
setae
imul
xchg
xchg
ss
bound
outs
daa
rol
aaa
ret
repz
cmp
rcl
sub
cmps
ret
outs
adc
sahf
call
inc
push
inc
lods
pop
sbb
sbb
add
ss
or
(bad)
mov
mov
sahf
push
in
(bad)
cmp
push
sbb
push
sub
cmp
into
rol
or
dec
cmp
jecxz
pop
pop
adc
mov
js
dec
ja
imul
gs
test
aad
mov
add
cmp
jb
enter
inc
in
lahf
sub
(bad)
mov
nop
or
fimul
jp
mov
test
das
mov
mov
fcompp
xchg
retf
ret
lods
daa
imul
xor
jnp
jbe
fdiv
cwde
clc
movs
loopne
pushf
sbb
fist
push
test
jb
out
sub
imul
or
push
lods
sbb
stos
cwde
popa
ret
fstp
in
jbe
mov
inc
arpl
mov
mov
call
dec
pop
in
fidivr
jns
inc
in
movs
leave
or
neg
cmp
mov
es
sub
leave
mov
cli
push
repnz
add
bnd
leave
mov
push
dec
cld
call
test
cmps
inc
pushf
dec
xor
cld
dec
addr16
outs
mov
mov
push
sub
push
inc
mov
bound
push
push
xor
outs
clc
sbb
add
aad
sbb
sbb
lods
repnz
xor
push
jbe
out
sub
xchg
scas
scas
mov
cli
sub
sub
and
ss
retf
neg
jnp
dec
ret
add
les
push
pop
xchg
inc
mov
fwait
fwait
popa
dec
adc
(bad)
call
nop
add
(bad)
out
jle
adc
stc
or
addr16
repz
bound
stos
or
cmp
pop
mov
ror
and
stos
mov
and
inc
xor
sub
adc
mov
mov
add
add
(bad)
(bad)
xor
lods
in
lds
cmp
(bad)
fnstcw
xchg
mov
scas
out
fistp
xor
mov
xor
adc
mov
cmovne
push
out
push
fs
and
dec
mov
mov
imul
hlt
mov
leave
and
fnstsw
scas
test
mov
xor
or
sbb
jmp
call
int
hlt
hlt
dec
xchg
cmp
pop
rol
push
or
retf
mov
xor
jb
pop
or
xchg
add
add
mov
add
sub
(bad)
pusha
jp
daa
add
xlat
jecxz
mov
dec
push
cmps
std
cs
ret
outs
ss
pop
pop
inc
pop
lods
mov
push
mov
cs
dec
sub
mov
(bad)
bound
sbb
scas
push
pop
test
int
nop
cmps
push
popa
and
inc
inc
out
addr16
dec
add
mov
pop
xchg
lahf
mov
dec
(bad)
loope
sbb
and
sbb
mov
imul
sub
les
add
jle
das
ds
fsub
imul
aam
adc
lods
lods
dec
pop
dec
ss
hlt
loop
fs
pop
sub
imul
adc
adc
(bad)
push
mov
adc
mov
and
inc
xor
jmp
retf
fisubr
fs
pop
jg
scas
or
inc
scas
call
xchg
fs
aam
cmp
adc
jle
out
xchg
mov
outs
dec
div
arpl
movs
loope
adc
sub
movs
lock
in
mov
cld
or
out
pop
xchg
aam
push
jnp
shl
call
push
fisub
or
rep
dec
stc
outs
xchg
adc
pop
add
(bad)
dec
(bad)
nop
add
mov
push
sub
imul
jbe
cli
xor
out
ins
or
in
xor
push
shl
dec
xchg
cmps
fadd
inc
mov
fdivr
push
push
mov
stc
cmp
mov
xchg
shl
test
push
cdq
add
iret
(bad)
lock
call
push
xchg
and
pop
mov
jge
add
jg
inc
cmp
xchg
mov
xchg
adc
fadd
xor
inc
mov
sub
(bad)
lea
xchg
in
es
xchg
stos
mov
pushf
sbb
pop
out
pop
je
fwait
mov
add
ins
inc
shl
aad
cmp
sar
xchg
mov
and
or
xlat
adc
push
shl
push
xchg
data16
sbb
shl
test
sub
xchg
and
jmp
stos
(bad)
mov
pop
sbb
mov
jecxz
cmp
pop
popf
mov
ret
mov
jnp
mov
daa
sbb
adc
fsubp
cmp
mov
push
loop
mov
bound
mov
fldenv
xchg
jo
adc
aaa
lods
add
fs
add
or
js
xor
arpl
xchg
inc
(bad)
sub
cdq
dec
sub
cmp
mov
clc
sbb
rcr
push
push
push
popf
loopne
or
push
cli
stos
inc
sti
fistp
xchg
pusha
cwde
or
int3
fnstsw
adc
adc
pop
inc
aad
lahf
inc
pop
jae
add
dec
cs
ret
dec
lock
call
xor
cwde
inc
or
push
pop
fldcw
das
gs
movs
fsubr
popa
push
out
cmp
add
inc
cli
xchg
in
ss
jns
and
rcl
data16
jmp
or
or
add
inc
ror
leave
es
push
push
neg
cmps
xlat
cmp
add
shr
imul
sti
push
shl
pop
pop
jmp
and
sar
push
xor
pop
pop
pop
in
jb
stc
xor
add
idiv
scas
sti
xchg
dec
lock
movs
mov
std
daa
push
bound
rcl
mov
leave
aaa
lahf
jecxz
retf
gs
test
pop
pop
in
sahf
addr16
and
dec
lahf
xchg
popa
cmp
outs
push
add
test
or
or
cmp
mov
out
sub
clc
add
in
stos
data16
mov
cmp
int3
jbe
and
dec
push
aas
std
leave
ret
or
retf
out
pop
in
cwde
sub
(bad)
cmp
aaa
(bad)
arpl
xor
imul
ja
clc
or
xchg
leave
data16
enter
mov
cwde
retf
fldenv
sub
loop
xchg
addr16
and
gs
xchg
jbe
sbb
jae
inc
cld
inc
cmps
add
xor
arpl
sub
ret
mov
cmp
push
rcl
mov
scas
cmp
cmps
adc
pop
lock
cmp
dec
pushf
add
sub
aas
pop
dec
jmp
(bad)
jno
fwait
inc
cmps
mov
cmc
cs
outs
fldcw
jmp
or
mov
mov
ins
adc
fidiv
in
lods
push
lds
sub
test
cdq
pop
enter
push
push
pop
lahf
mov
and
pop
sub
lods
das
add
pop
stos
ret
into
dec
inc
jge
sub
cdq
dec
sub
push
popf
pushf
mov
shr
arpl
inc
cmp
fucom
sbb
outs
dec
mov
and
jg
ficomp
sub
sub
jae
dec
pop
dec
mov
mov
push
mov
or
imul
hlt
mov
dec
lahf
cli
mov
(bad)
retf
mov
ret
xlat
dec
sub
jae
add
pusha
adc
out
stos
sahf
imul
or
je
idiv
mov
enter
out
mov
jl
popf
hlt
and
pushf
clc
xchg
and
cmp
pop
xor
les
push
xlat
mov
adc
loopne
push
mov
mov
nop
ins
mov
sti
mov
cli
push
movs
dec
fidivr
and
mov
fst
fwait
in
adc
pop
or
dec
xor
pop
mov
in
aad
fisttp
xchg
and
and
test
jb
imul
add
sub
cmp
ja
xchg
mov
cld
movs
std
in
int
stc
ret
push
out
adc
sub
inc
js
pop
xchg
xchg
jmp
scas
xor
faddp
push
mov
or
lea
cld
adc
jp
xor
scas
outs
sbb
test
frstor
mov
sub
cmp
cmp
repz
repz
sti
inc
or
and
mov
jp
test
xor
jne
fmulp
imul
lea
test
inc
int3
outs
dec
(bad)
nop
push
xor
jge
jbe
in
ds
jge
retf
mov
(bad)
jo
sub
jmp
xchg
pop
mov
mov
xchg
mov
in
call
dec
cmp
imul
add
and
xor
in
pop
jmp
popa
icebp
in
stos
cmps
outs
lock
fidivr
or
push
jle
push
pop
int3
dec
mov
or
cmc
cld
inc
cli
sbb
or
dec
(bad)
sahf
sti
pop
nop
aas
adc
jbe
inc
dec
fwait
push
icebp
sub
and
cmps
test
leave
out
movs
inc
retf
mov
cmc
cmp
aad
cmp
mov
lea
xchg
jne
in
adc
pop
sub
push
call
loopne
nop
imul
movs
nop
cmp
fcomp
stos
stc
xlat
pop
(bad)
mov
iret
push
in
shl
sub
out
add
(bad)
jo
jg
mov
add
lods
lahf
push
or
arpl
cmp
cdq
mov
fisttp
loop
pop
in
into
mov
cmp
repz
in
leave
push
xchg
shld
mov
out
add
cmc
movs
sbb
sbb
inc
dec
and
stos
mov
and
xor
loope
pop
ds
fcom
data16
ja
xor
mov
push
pop
sahf
aam
push
jns
scas
push
enter
std
mov
cmc
lock
adc
or
sub
jmp
ret
enter
and
pop
cmp
sbb
jge
in
and
pop
ins
test
test
into
sub
mov
iret
test
(bad)
or
fldcw
rol
ins
sar
jne
cmc
lock
leave
lods
fwait
dec
and
cmp
sub
xchg
fiadd
ja
iret
xor
mov
test
push
or
mov
sbb
adc
aad
mov
rcr
lods
sbb
xor
test
mov
stos
xchg
in
mov
adc
push
jne
in
sub
mov
push
test
xchg
data16
and
push
popf
xchg
je
dec
push
hlt
inc
xchg
mov
jmp
sti
cli
sbb
lock
mov
adc
test
mov
stos
icebp
jo
xchg
push
mov
shl
xor
pop
hlt
sbb
nop
inc
in
push
xor
push
pop
push
pop
sub
jb
lds
call
cmp
loope
sti
xchg
jno
push
lahf
xor
adc
popa
fbstp
call
mov
dec
pop
cs
pop
lds
jb
jne
movs
push
data16
xchg
mov
adc
in
jne
sub
push
jle
popa
std
shl
ret
add
fdiv
lds
push
jmp
retf
adc
leave
mov
jno
mov
xchg
jmp
pop
push
mov
sub
mov
(bad)
sub
xchg
add
or
push
cmps
and
and
stos
push
pop
aad
pop
out
jb
test
test
pop
push
jb
hlt
sub
mov
(bad)
movs
jb
adc
jp
sbb
in
test
rcr
sahf
loope
mov
fwait
jmp
cmc
outs
ror
jl
jmp
and
fbstp
jns
push
mov
push
or
dec
and
cli
mov
push
dec
sub
jae
pusha
pop
cmp
and
sbb
mov
cmc
aam
sub
cmp
sahf
jmp
inc
(bad)
sbb
xchg
xor
sbb
cmp
stc
push
call
or
push
fst
dec
cs
fsub
mov
repnz
stos
retf
jns
(bad)
push
das
inc
xchg
hlt
pop
push
sub
es
jp
repnz
jmp
xchg
repnz
sub
push
ror
sbb
and
sti
jnp
sahf
and
add
jg
and
add
scas
mov
and
js
or
js
cmp
inc
push
rcr
pop
dec
fstp
or
push
sub
ret
rol
test
scas
add
aas
or
mov
in
or
repnz
pop
inc
push
dec
push
call
pop
pop
or
ret
or
dec
push
loopne
enter
push
ror
sub
ss
ds
xchg
cmps
(bad)
mov
cmc
rol
icebp
daa
mov
lahf
stos
dec
aad
scas
cmc
shl
mov
pop
sbb
imul
or
mov
loope
cmp
ret
clc
jg
(bad)
lds
lds
pop
iret
das
pop
inc
adc
add
mov
xchg
inc
in
push
jl
inc
jne
sbb
and
dec
out
(bad)
or
enter
jae
jbe
into
mov
pusha
fs
dec
push
jmp
sbb
jno
repz
fidiv
les
bound
mov
cmc
adc
ja
cs
lods
xchg
sbb
and
lds
mov
fcmovnb
mov
jns
jns
sub
inc
sbb
out
pop
mov
mov
mov
sti
cmp
pop
pop
cwde
int3
xlat
in
mov
ja
ja
add
cmp
or
lods
cwde
outs
sub
sbb
add
xchg
test
cld
ins
or
push
pop
push
(bad)
in
dec
xor
test
mov
sub
bnd
in
dec
mov
idiv
add
cmp
xchg
or
xor
hlt
popa
scas
pop
jmp
jmp
repnz
mul
(bad)
clts
daa
(bad)
push
ins
jb
stos
jbe
push
pushf
icebp
mov
push
adc
fst
cmp
pop
adc
jmp
out
mov
fsub
and
mov
popa
sbb
jl
push
jae
pop
mov
or
addr16
pop
scas
add
in
in
mov
push
add
inc
sub
int
in
sbb
add
jb
addr16
ret
inc
pop
fmulp
push
dec
imul
inc
out
mov
push
mov
popa
xchg
aaa
and
push
or
repnz
test
sbb
gs
es
and
xchg
repnz
push
mov
inc
xchg
add
ror
push
mov
pusha
pop
mov
and
xchg
jmp
das
sbb
int
mov
retf
ror
stos
clc
enter
shl
pusha
cmp
js
mov
cs
push
les
mov
dec
lock
inc
xor
mov
aad
push
xor
int
cmc
jae
mov
pop
and
addr16
sbb
lods
neg
xchg
and
cwde
pusha
icebp
inc
stos
aaa
push
mov
adc
dec
addr16
in
push
cmp
imul
pop
fs
inc
sub
jae
and
or
mov
lock
xchg
int
aam
test
jbe
sahf
mov
mov
xor
jne
add
jp
je
sbb
ds
outs
cmp
pop
int3
inc
push
scas
cmp
cli
test
pop
in
pop
or
push
push
cli
and
pusha
pushf
ins
in
push
enter
mov
sbb
pop
mov
or
es
push
fwait
add
add
and
div
popa
push
stos
ins
pop
cli
nop
inc
mov
bound
push
fadd
mov
in
xchg
lahf
(bad)
fnstsw
fwait
mov
aam
js
leave
les
sar
xchg
fimul
cdq
lods
neg
call
xor
mov
loope
push
mov
lahf
jle
xor
icebp
adc
inc
int
add
and
add
sbb
add
or
icebp
lds
sub
(bad)
jo
gs
js
test
pop
ins
mov
sbb
sub
les
mov
pop
xchg
sar
jmp
push
mov
imul
retf
jmp
xor
sahf
jb
dec
or
jno
xchg
push
sti
cdq
xor
inc
jno
cmp
shl
or
fimul
xchg
dec
add
test
lahf
loop
ins
mov
fnstcw
scas
inc
add
dec
add
(bad)
leave
jp
and
daa
repnz
(bad)
jle
rcl
add
movs
push
xor
mov
in
xor
cmp
repnz
xchg
push
int
scas
test
aaa
add
push
mov
loop
rcl
fnstenv
adc
mov
test
idiv
fwait
mov
pop
cdq
jo
inc
mov
retf
mov
cmp
fs
and
inc
(bad)
scas
ret
or
and
pushf
outs
dec
xchg
test
sti
adc
dec
pop
mov
mov
sbb
dec
adc
sti
adc
xchg
cmp
pop
popa
xchg
retf
cmp
mov
adc
cmp
shl
inc
xchg
mov
cld
ja
mov
and
sbb
aaa
test
xor
push
lods
jp
jmp
sbb
test
and
xchg
sub
cmp
stos
dec
xchg
mov
mov
out
scas
jp
loopne
inc
add
xor
jne
pusha
push
repnz
push
mov
add
cdq
aad
cmp
rcr
fs
cmp
jbe
scas
div
or
push
sub
xchg
movs
jb
xor
rcl
out
xchg
out
mov
bound
dec
cmp
clc
jb
scas
xor
cmp
pusha
sbb
inc
mov
mov
xchg
imul
popf
(bad)
loopne
xor
inc
lods
dec
fs
scas
push
inc
add
and
inc
jge
retf
jle
xor
movs
nop
retf
sbb
pop
mov
aam
xchg
cwde
mov
xchg
icebp
mov
aad
adc
dec
add
mov
es
popf
inc
inc
mov
lahf
jo
add
(bad)
popf
int3
test
hlt
shr
push
iret
rcr
movs
mov
adc
fdiv
fcomp
mov
dec
ret
pushf
add
cmp
sub
fldenv
xor
or
push
and
sub
sti
cmp
add
mov
idiv
pmulhuw
addr16
push
fwait
(bad)
jno
mov
add
adc
cmp
and
sub
mov
test
mov
xchg
xchg
das
stos
cmp
xchg
jb
mov
and
scas
repz
jmp
mov
out
or
sub
inc
pop
std
push
inc
ja
pop
mov
and
cmp
inc
jmp
fdivr
xchg
ss
pushf
jle
mov
call
xor
das
xor
mov
in
scas
fidivr
xor
dec
pop
push
in
jge
or
pushf
mov
rcr
imul
inc
jle
inc
and
dec
repnz
dec
js
sar
mov
das
fwait
lods
mov
loope
in
hlt
in
mov
xchg
sbb
jno
iret
sub
std
mov
lods
inc
leave
adc
mov
frstor
jle
adc
jp
imul
(bad)
or
add
lds
ins
(bad)
mov
popa
dec
xor
cmp
xchg
mov
ret
xchg
shl
push
xchg
nop
loope
jmp
or
push
jns
mov
adc
sub
sar
jl
mov
push
push
repz
jno
out
mov
adc
sar
dec
js
sub
jne
dec
xchg
stos
outs
mov
xadd
push
sahf
jg
call
dec
push
mov
or
nop
jmp
push
int3
dec
push
arpl
jmp
iret
inc
and
add
mov
in
(bad)
inc
iret
lahf
adc
sbb
cmp
icebp
mov
fstp
pop
in
dec
jnp
inc
shl
out
popf
int
fdivp
int
push
in
sahf
mov
pushf
mov
sub
ror
jb
in
mov
test
sub
mov
call
cmp
push
jo
mov
jp
out
jno
adc
mov
mov
adc
inc
and
in
cmp
ds
mov
sub
push
mov
je
js
and
scas
mov
mov
out
jo
cmp
push
jae
jle
aam
mov
inc
xchg
(bad)
test
js
repz
dec
mov
add
sbb
mov
sub
in
in
dec
scas
iret
mov
add
adc
stos
inc
sub
push
xchg
dec
in
call
jle
and
pop
jge
hlt
sahf
mov
xor
sub
xor
xchg
out
jb
movs
sub
adc
lea
push
call
mov
icebp
adc
add
xchg
cmp
add
inc
(bad)
das
je
dec
xor
call
(bad)
and
daa
or
imul
adc
mov
out
pushf
shl
pushf
xchg
push
aaa
push
and
xlat
jecxz
jnp
stos
or
xchg
pop
xchg
add
rcl
call
inc
push
xor
scas
sbb
add
int3
sbb
or
xor
add
jl
je
sbb
test
stos
pop
cmp
inc
push
pop
lds
clc
cs
sbb
scas
(bad)
imul
pop
ins
lock
int
sar
push
adc
scas
clc
mov
fcmovne
pusha
cmps
ror
es
loope
or
ret
(bad)
dec
popa
repz
inc
fcomp
jmp
mov
pop
loop
aam
retf
push
cli
adc
xchg
mov
xor
xchg
add
xor
in
icebp
hlt
scas
popf
jg
jmp
push
jmp
jle
pop
sahf
jge
add
fst
inc
sub
lods
mov
inc
cwde
ja
inc
sub
adc
shr
dec
adc
mov
stos
xor
lea
xchg
xchg
mov
int
and
xchg
dec
jecxz
mov
mov
leave
mov
ins
rcl
imul
bound
mul
mov
xchg
jnp
push
and
gs
fsub
jmp
xlat
or
mov
sub
in
push
or
mov
sub
dec
mov
std
inc
ja
and
push
popa
dec
cmc
cmp
push
sub
or
mov
shl
test
cmp
movs
mov
lds
bound
mov
je
lahf
inc
fs
sbb
loop
cmp
and
call
addr16
movs
imul
ror
cld
add
arpl
cld
mov
test
cdq
test
jmp
sub
dec
dec
ror
cmp
out
push
mov
inc
add
dec
sahf
pop
pop
hlt
mov
enter
hlt
cwde
add
mov
paddq
sbb
inc
pop
stc
mov
jmp
scas
push
in
into
dec
dec
ret
sbb
mov
add
push
pop
cmp
outs
fsub
das
inc
ret
adc
rcl
sahf
gs
dec
or
jno
dec
push
das
mov
popa
cmp
pop
icebp
adc
adc
jb
in
and
mov
xor
pop
neg
lahf
into
movs
xchg
sar
not
xchg
and
sbb
mov
mov
and
nop
mov
mov
retf
jns
sub
dec
xor
mov
inc
clc
xor
xor
pop
xor
sar
int
push
add
xchg
cld
pop
psrad
loope
imul
sbb
jns
push
sub
or
arpl
stos
test
ss
push
test
ss
xchg
cmp
and
sub
cmps
icebp
pushf
mov
inc
fwait
dec
pushw
out
fsub
repnz
inc
dec
add
cmp
mov
aam
jns
push
mov
imul
clc
mov
or
lea
pop
ficom
mov
adc
cmp
je
popf
inc
pop
gs
ja
ret
inc
mov
mov
jne
push
mov
ror
iret
pop
outs
(bad)
push
cmp
mov
pop
xchg
jmp
push
cmc
adc
popf
inc
shl
test
or
cld
dec
call
push
cdq
lods
fwait
sbb
out
pop
xchg
lods
neg
push
popa
and
cwde
test
retf
cmp
fs
mov
test
fisubr
mov
ret
cmp
add
or
xor
loopne
sbb
jecxz
repnz
inc
int
push
pusha
mov
push
add
jns
fnsave
inc
cmp
dec
cli
mov
jle
cli
add
scas
sub
mov
pusha
adc
adc
and
fst
and
sbb
mov
ficomp
rcl
mov
icebp
int3
cli
or
ss
leave
frstor
adc
mov
or
mov
push
mov
jne
(bad)
xchg
sub
jmp
out
pop
xor
dec
add
in
dec
sub
cmps
sti
mov
lods
ds
aas
dec
xchg
cli
add
xchg
das
lods
fwait
popf
and
mov
and
or
(bad)
ins
outs
sub
std
cdq
js
lahf
cmp
xchg
mov
rep
dec
xchg
mov
call
push
cmp
std
xchg
mov
ficomp
shl
and
cmps
and
repnz
ins
add
mov
in
dec
mov
sbb
int3
repz
(bad)
xor
in
fnstenv
sub
and
add
jmp
push
lds
sti
repnz
mov
dec
adc
pop
xchg
sar
je
push
mov
pop
(bad)
xchg
push
sbb
xlat
push
push
stos
popa
inc
cmp
test
mov
imul
cmps
sbb
mov
push
xor
jae
aaa
and
pop
repnz
lds
sbb
lock
xor
sub
(bad)
dec
jge
daa
loope
hlt
mov
pushf
cmp
mov
repz
cld
and
dec
addr16
jmp
pop
mov
or
mov
stos
stc
jne
das
mov
cld
push
add
or
push
scas
into
mov
fwait
daa
mov
sbb
fiadd
xchg
xor
jno
sbb
pop
(bad)
xlat
push
shl
jle
adc
pop
jo
xchg
dec
push
in
out
cld
das
in
imul
pop
add
fist
adc
xor
inc
or
mov
js
(bad)
jnp
stos
push
push
xor
jmp
or
jo
mov
mov
in
scas
fimul
and
mov
mov
mov
cmp
test
mov
cmps
sbb
jg
js
out
mov
or
test
les
jge
dec
adc
xor
lock
xchg
xchg
sub
out
mov
mov
push
inc
cdq
in
sub
dec
fwait
xor
sbb
mov
dec
sub
cmp
add
jmp
and
jle
cmp
push
shl
xchg
bound
xchg
scas
adc
mov
push
cmc
jmp
into
popf
ins
lahf
cmps
and
adc
inc
mov
out
push
mov
aam
or
ret
popf
and
in
xchg
scas
sbb
leave
aas
imul
sub
mov
dec
push
cmc
add
int
test
xor
or
rcr
(bad)
or
jecxz
sub
loop
aam
inc
fimul
fidivr
movs
loope
std
(bad)
(bad)
aam
xchg
and
mov
shl
dec
cli
xor
aad
sbb
pop
mov
cmp
aas
leave
popf
outs
xchg
mov
lods
sub
into
adc
(bad)
cmp
cmp
cmp
cld
aam
in
jecxz
and
and
xchg
jmp
cmp
sbb
cmp
xchg
inc
jbe
ds
test
sub
add
jge
jb
fdiv
jge
dec
icebp
mov
sbb
cmc
dec
dec
push
push
out
jae
cmps
sbb
or
mov
jmp
mov
cmp
pop
push
adc
inc
inc
cld
mov
mov
cmp
cmp
cmp
test
add
call
scas
in
xchg
fs
outs
mov
jbe
jle
sbb
sbb
adc
int
mov
nop
xor
(bad)
movs
jl
and
mov
jae
fldenv
scas
inc
inc
mov
cwde
dec
sbb
sub
xor
mov
sub
bound
movs
and
sar
add
sbb
mov
pop
add
aad
xchg
shl
push
or
add
or
xchg
pop
int3
or
imul
shl
imul
popa
(bad)
fisub
dec
dec
rcr
movs
add
loope
rol
dec
gs
mov
rcr
repnz
inc
cmp
xchg
popa
popa
adc
ins
jae
fnsave
push
test
test
cli
loop
xchg
push
fadd
xor
retf
push
shl
pop
std
dec
mov
arpl
xchg
inc
outs
sbb
mov
out
mov
popa
pop
test
push
mov
or
inc
fs
jbe
arpl
aam
mov
fsub
sahf
xchg
icebp
repz
xchg
fnstsw
jo
cmp
inc
sbb
jae
stc
shl
jg
out
add
hlt
sbb
dec
jp
ss
(bad)
or
fwait
sti
add
ret
leave
jno
mov
fs
adc
mov
inc
sahf
push
pop
and
mov
or
push
mov
out
dec
cmp
pop
and
int3
mov
sti
jnp
ins
jnp
sti
sbb
dec
adc
fs
cmp
test
aam
mov
jg
jg
jnp
inc
fs
and
mov
pop
jp
cmova
aad
stos
sub
rcl
push
push
adc
cli
push
cmp
mov
ds
ins
add
or
sub
mov
inc
mov
(bad)
aaa
jmp
cmps
mov
jnp
sbb
mov
mov
cmc
cmp
ins
ja
inc
dec
inc
xor
inc
icebp
mov
hlt
xor
out
mov
es
imul
div
push
inc
push
inc
push
arpl
imul
repz
mov
xchg
sbb
or
inc
lahf
in
ret
js
movs
and
out
aaa
push
adc
pop
jne
dec
adc
fwait
sbb
loope
(bad)
sbb
and
outs
lahf
dec
push
popa
dec
xchg
mov
push
jp
and
gs
icebp
mov
repz
ret
jmp
adc
shl
(bad)
jecxz
xor
push
mov
iret
retf
sub
push
rcr
cmp
test
scas
arpl
in
xor
push
out
and
popf
data16
mov
bound
or
pop
push
test
sbb
cmp
pop
sbb
call
leave
inc
test
sub
xor
mov
(bad)
xchg
clc
ds
jmp
hlt
push
sub
and
sub
cld
push
loope
vmovd
sbb
popa
scas
pop
mov
add
call
scas
ror
bound
inc
xor
out
cli
aas
ja
sbb
movs
and
(bad)
cmp
stos
or
mul
dec
ficom
in
pop
xor
mov
mov
stos
push
fs
push
dec
into
call
jno
cmp
sub
mov
xchg
(bad)
(bad)
daa
mov
jecxz
and
clc
cdq
ss
xor
xchg
ins
jl
iret
ss
cmps
jmp
cmp
iret
inc
mov
sbb
cwde
aaa
mov
mov
xchg
sub
shr
aaa
xor
jnp
and
or
(bad)
and
sub
pop
jnp
jmp
jge
sbb
push
pop
out
iret
dec
lds
pop
mov
lock
ss
jmp
or
cmp
ficomp
jno
sub
cli
popa
add
xor
push
pop
stos
push
adc
mov
xchg
push
and
jge
jne
inc
cmps
cmp
mov
in
add
xchg
pop
rol
xor
loopne
cmp
daa
cmps
mov
pop
push
pushf
iret
xor
loopne
inc
jbe
xchg
and
push
(bad)
clc
and
lock
mov
xchg
mov
idiv
inc
gs
fdivr
out
dec
out
pop
iret
enter
add
mov
imul
xor
(bad)
pop
test
into
and
das
in
or
pop
scas
data16
mov
js
mov
push
mov
pusha
lock
pop
cmp
adc
dec
sub
test
jmp
mov
inc
cdq
xlat
mov
cwde
push
sub
cmp
or
xchg
jnp
sbb
lods
movs
sub
mov
pop
addr16
fnstcw
(bad)
(bad)
rol
cdq
dec
das
adc
mov
lods
adc
dec
in
xchg
xchg
scas
or
jno
lods
inc
push
(bad)
mov
(bad)
lods
pop
retf
ror
fbld
(bad)
cdq
add
xchg
sbb
jecxz
rol
pop
loop
sbb
mov
jle
mov
pop
test
jae
push
enter
out
xchg
adc
popa
mov
dec
seto
jmp
popa
aaa
loopne
scas
mov
shl
mov
cmp
adc
inc
xchg
cmp
sbb
adc
add
das
ret
nop
or
popf
pop
jge
ret
pop
adc
test
sar
pusha
add
popa
mov
add
pop
pop
push
movd
imul
fnstsw
addr16
sub
les
jmp
repnz
fisubr
or
(bad)
pushf
dec
xor
mov
cli
shl
pop
ror
xor
call
shr
fwait
add
mov
jge
pop
add
push
inc
pop
pop
inc
(bad)
jmp
and
aaa
mov
push
das
push
and
jae
ins
fsubr
cli
and
aaa
loope
sbb
adc
mov
fdivrp
icebp
mov
sbb
xchg
mov
(bad)
std
stos
mov
dec
ja
mov
lds
cmp
leave
and
in
adc
mov
ret
inc
out
rcr
cmp
xlat
stc
mov
mov
popf
jecxz
mov
or
aaa
data16
cmp
jmp
dec
test
adc
jne
test
jmp
pop
ret
or
pop
(bad)
out
pop
ja
repnz
push
and
and
push
push
sbb
or
in
sbb
bound
stos
sub
xchg
es
sub
jb
ret
push
shr
sub
inc
push
sbb
ret
sbb
xchg
nop
(bad)
xchg
mov
retf
jne
clc
jmp
rcr
mov
rcr
stc
and
mov
call
xor
sbb
inc
lods
or
xchg
and
out
cmps
test
lock
dec
outs
push
lods
dec
cmps
stc
mov
push
outs
(bad)
aad
jp
daa
cli
lods
xchg
push
cmp
cmp
int3
test
mov
sub
pushf
add
cmp
xlat
loop
adc
ja
xchg
js
(bad)
stc
inc
imul
fdiv
jle
and
and
je
sbb
push
clc
gs
jns
sbb
sub
in
(bad)
adc
std
sbb
dec
mov
mov
cdq
pop
add
mov
add
stos
cmps
cmp
inc
das
retf
popa
mov
(bad)
jmp
loop
test
or
shl
cmp
cmp
jb
jle
xchg
inc
and
ds
and
cwde
imul
mov
xchg
rcl
int3
jbe
sub
fptan
adc
(bad)
mov
sub
mov
inc
out
or
call
test
cmp
test
retf
mov
inc
bndstx
adc
sbb
sub
in
es
mov
and
(bad)
push
pop
(bad)
xor
mov
add
cli
mov
mov
push
bound
idiv
or
jecxz
xchg
sbb
vpsadbw
dec
adc
loop
(bad)
fistp
(bad)
jecxz
or
adc
sbb
pop
jp
push
call
std
jae
and
or
adc
out
xchg
idiv
mov
mov
rol
es
inc
mov
(bad)
add
idiv
fidiv
rcl
push
shl
icebp
jmp
sti
daa
cmp
frstor
nop
push
sub
mov
sbb
sahf
pop
push
lahf
fs
push
pop
cli
jmp
jnp
mov
(bad)
movd
dec
stc
rcl
pop
jnp
mov
mov
mov
rcr
(bad)
fdiv
inc
dec
jecxz
(bad)
setno
fistp
out
retf
mov
and
inc
daa
sahf
add
sbb
jnp
neg
in
outs
and
call
xor
test
add
fmul
add
add
jl
push
push
imul
jmp
stc
aad
or
addr16
or
shl
stos
xchg
jns
jne
jecxz
aam
cmp
mov
iret
mul
fsub
lods
sbb
hlt
sbb
xchg
xor
pop
xchg
mov
cmp
aaa
pop
jecxz
shr
test
jl
in
vaddss
xor
dec
repz
lock
bound
fstp
add
mov
test
inc
push
jbe
mov
jnp
dec
sti
or
push
cld
sub
xor
dec
rcr
repnz
ss
xor
ja
jmp
fnsave
pop
xor
mov
push
jge
xor
xor
jbe
dec
pop
inc
imul
jle
stos
out
xchg
pop
leave
inc
jp
xor
mov
jbe
cwde
addr16
rcl
bound
xor
adc
aas
ins
outs
push
and
sub
pop
into
pop
out
and
mov
bnd
xchg
test
dec
push
(bad)
icebp
cmps
push
jmp
fdivr
jo
sub
pop
cmp
push
ror
mov
mov
in
xor
ja
push
cdq
or
or
push
inc
in
jg
xchg
xchg
push
xor
mov
hlt
pop
jge
push
push
adc
jno
movs
call
(bad)
pop
js
(bad)
mov
jns
mov
jno
imul
mov
lds
dec
sbb
cmp
cmps
pop
pop
mov
add
dec
loope
mov
div
and
es
(bad)
int
aad
aaa
pop
push
fisttp
pop
mov
sub
mov
js
cmc
dec
adc
dec
and
ficom
rcr
mov
cmps
in
push
cld
pop
sbb
ficomp
scas
inc
sub
mov
pushf
sar
aaa
sbb
lods
retf
arpl
(bad)
pop
cdq
cmp
mov
mov
add
mov
and
arpl
and
add
xchg
cmc
mov
jne
inc
add
fwait
push
pop
clc
push
push
sub
js
pop
lea
add
sbb
fisub
fs
sbb
retf
lds
inc
scas
sub
xor
fcom
test
mov
js
imul
icebp
popa
lock
ins
push
cmc
imul
sbb
(bad)
repz
jp
lock
xor
clc
inc
ret
rcl
(bad)
(bad)
jge
and
pop
add
test
push
lods
sub
aad
sub
or
xchg
sbb
mov
adc
sbb
outs
sbb
(bad)
cli
mov
lea
js
cld
jnp
adc
dec
inc
int3
dec
jne
je
cmp
push
ins
lods
das
out
repnz
add
mov
enter
jecxz
fldenv
mov
sub
movs
addr16
cld
lahf
mov
enter
in
(bad)
int
add
jp
lahf
mov
daa
mov
out
into
lods
xor
sbb
dec
add
push
dec
jbe
call
push
add
sti
mov
cmps
add
arpl
(bad)
lds
loopne
pop
cld
mov
fld
sbb
sbb
jno
cli
mov
arpl
jns
jmp
xchg
add
pop
fsub
jg
cwde
mov
jnp
inc
and
or
rcr
mov
cdq
sub
imul
sbb
cmc
stos
xchg
add
bound
inc
xchg
cs
pop
jne
mov
mov
fnsave
ret
cwde
js
sbb
in
cmp
adc
pop
aas
loop
pop
push
(bad)
sub
add
cmc
adc
(bad)
outs
mov
je
movs
or
mov
ret
xor
push
xchg
gs
pop
pop
out
in
ins
retf
aas
test
push
mov
les
pop
mov
fcomip
sub
test
jmp
jl
das
push
ins
dec
inc
ins
adc
out
sbb
mov
xor
mov
rcr
clc
(bad)
xchg
out
sub
mov
mov
mov
xchg
lahf
mov
cmc
mov
mov
xchg
and
xchg
inc
scas
jo
test
nop
inc
arpl
fs
sub
xor
iret
fld
dec
mov
fidiv
sbb
aad
loope
and
push
jl
push
mov
mov
jp
out
dec
inc
xor
mov
nop
add
loopne
pop
push
clc
add
and
nop
shr
sbb
add
jns
mov
sub
pop
std
rol
push
sub
push
(bad)
out
mov
xor
movs
jecxz
fcomp
int
sbb
sahf
hlt
enter
in
shr
das
sub
in
sbb
gs
cmps
icebp
aas
(bad)
cli
or
add
inc
dec
jge
stos
add
xor
pop
(bad)
repz
push
push
stos
jne
sbb
jl
gs
out
sbb
aaa
or
outs
xchg
aad
inc
bound
mov
lea
cdq
cmps
es
retf
pop
jns
loop
addr16
pop
stos
rcr
stos
dec
cmp
ja
fs
mov
jns
mov
setl
iret
js
adc
ins
jg
xchg
push
out
test
daa
pusha
mov
dec
dec
mov
xchg
mov
ret
fs
sbb
mov
inc
jp
dec
rcr
sbb
(bad)
or
rcr
xor
(bad)
push
rcr
les
cmp
pop
mov
inc
inc
inc
iret
jge
and
xchg
popf
scas
mov
mov
sub
xlat
jo
(bad)
sub
xor
push
mov
inc
pop
dec
cdq
push
adc
xlat
push
adc
xchg
inc
sbb
adc
inc
cwde
or
fld
dec
push
loopne
mov
sub
adc
out
pop
fwait
std
int3
lods
out
(bad)
loopne
data16
cs
pop
fld
imul
sbb
sub
out
idiv
mov
sub
inc
out
xor
in
outs
mov
mov
jo
dec
pop
lock
mov
cwde
xor
pop
punpckhwd
inc
in
pop
inc
inc
pop
std
enter
movs
(bad)
aas
or
adc
loopne
sub
cmc
jle
jns
add
fisttp
sub
aaa
inc
push
push
imul
lea
mov
pusha
arpl
jb
or
stos
mov
fidivr
push
xchg
xor
mov
retw
rcr
adc
dec
imul
(bad)
xchg
test
xchg
lods
inc
adc
mov
pop
imul
ret
shr
lods
dec
movs
inc
jbe
pop
addr16
mov
lock
and
push
add
adc
cdq
fwait
imul
xchg
sub
inc
addr16
lods
repz
retf
daa
in
adc
mov
jmp
pop
ficomp
mov
mov
inc
sub
dec
es
adc
pop
(bad)
int
mov
lds
test
lds
mov
xor
xchg
mov
sbb
mov
icebp
push
mov
xor
or
(bad)
out
jecxz
pop
pop
(bad)
sti
jae
adc
ja
cld
and
or
fisubr
xchg
mov
sbb
adc
cmps
outs
sub
sbb
outs
or
sar
sub
stc
(bad)
mov
and
aas
mov
mov
jne
sti
mov
sbb
sub
push
push
mul
icebp
into
jle
adc
hlt
std
mov
dec
out
inc
and
or
cmps
mov
xor
sbb
dec
mov
pop
lock
dec
lahf
sbb
(bad)
sti
test
dec
retf
mov
fs
pushf
sbb
fsubr
sbb
rcl
cmc
push
ins
jo
mov
pop
cmp
mov
enter
inc
mov
dec
retf
div
mov
push
sub
pushf
ret
push
cwde
cli
cmps
mov
sbb
cmp
xor
or
or
(bad)
out
sub
aaa
add
cmp
mov
enter
add
loopne
movs
sub
mov
mov
jne
add
and
mov
lock
arpl
js
hlt
(bad)
movs
std
stc
mov
imul
outs
dec
stos
sbb
push
sub
out
jp
ror
push
or
shl
out
add
mov
jg
xchg
ret
mov
adc
fistp
pop
mov
xchg
dec
mov
pop
pushf
xor
adc
adc
lahf
xchg
sahf
inc
xor
fist
jnp
push
or
fwait
push
bound
ja
xchg
adc
sbb
inc
dec
cmp
stos
pop
(bad)
addr16
ja
lea
add
les
pop
cmp
xor
out
push
fcmovnu
inc
push
rcl
movs
mov
outs
inc
cmc
dec
fist
dec
clc
pop
enter
pop
xor
sbb
imul
bnd
loope
dec
mov
mov
call
test
daa
shr
scas
mov
loopne
cmp
dec
push
adc
or
ja
inc
xor
push
ror
inc
mov
outs
ins
lods
or
cmp
iret
mov
fstp
sub
add
mov
shl
sub
repz
or
in
and
mov
int3
mov
xchg
in
xchg
div
sub
jo
xor
dec
jb
mov
and
and
jle
jno
fdivr
sub
fwait
arpl
add
retf
lods
xor
mov
jle
icebp
icebp
inc
fist
mov
icebp
xchg
(bad)
test
mov
loop
dec
cmp
stos
sub
cmps
lock
push
ins
pop
fld
shl
ror
(bad)
cli
repz
arpl
es
call
rcl
neg
pop
pop
imul
scas
div
pushf
and
cmp
stc
call
adc
or
push
push
pop
pop
clc
mov
pop
clc
jbe
mov
js
jno
rol
push
enter
add
pop
daa
and
popf
pop
les
jg
mov
out
mul
and
ja
dec
mov
(bad)
jb
stos
jmp
inc
fld
jne
mov
and
test
mov
dec
and
cmp
ja
jmp
xchg
inc
sbb
mov
es
test
test
je
and
mov
jle
and
cs
inc
aas
lods
call
mov
stc
sub
js
push
sbb
fist
sbb
xchg
sub
rcl
jne
mov
mov
test
fadd
outs
stc
sub
sti
into
repz
cmp
xchg
ret
fisubr
jp
or
xor
pusha
sbb
or
fiadd
mov
dec
add
sbb
inc
mov
cdq
push
add
xchg
arpl
cmps
cli
mov
push
pushf
pusha
ins
cmps
adc
mov
stos
jl
lods
js
jo
xchg
push
addr16
(bad)
repz
loop
popf
sub
test
dec
(bad)
enter
sub
xchg
xor
xchg
sub
jmp
cmp
nop
jecxz
jae
js
data16
mov
les
(bad)
das
shl
xchg
test
pop
push
inc
mov
push
xchg
adc
std
das
fdivr
inc
test
jmp
xchg
mov
push
stos
cmp
xor
sub
neg
inc
inc
fwait
pop
imul
aam
in
jge
push
aam
in
push
retf
pop
call
inc
xor
ja
add
scas
imul
and
test
push
sbb
mov
push
lds
sbb
fld
int
lods
lea
js
sbb
push
das
cmp
pop
movs
popa
loope
lea
mov
mov
jbe
addr16
jmp
adc
xor
fld
and
mov
jge
xchg
dec
dec
cmps
pop
mov
cmp
push
sub
inc
push
mov
pop
hlt
mov
enter
jle
popa
jle
jecxz
sub
pop
add
xor
and
retf
mov
add
inc
fidivr
ja
fist
add
inc
jae
out
(bad)
or
nop
cmp
mov
scas
icebp
and
jg
ja
mov
ja
mov
(bad)
cmp
mov
shr
(bad)
aad
retf
or
enter
pop
(bad)
sub
jne
xor
fldenv
sbb
and
out
dec
pop
inc
out
test
repnz
sub
fsubr
pushf
(bad)
aad
addr16
icebp
xchg
ins
retf
sti
scas
adc
mov
int3
mov
mov
ss
xchg
mov
addr16
es
leave
es
outs
dec
push
mov
ror
arpl
adc
ds
nop
out
test
push
out
add
ror
jmp
icebp
add
cmps
mov
xor
sqrtps
dec
popf
sbb
into
scas
mov
fiadd
adc
je
xor
int
push
push
outs
xchg
int
mov
dec
jns
jl
xchg
cld
add
mov
das
aas
pushf
jo
mov
pop
jae
aam
leave
int3
(bad)
sub
pop
or
mov
retf
fiadd
xchg
icebp
out
dec
jb
mov
aam
out
xchg
(bad)
inc
add
mov
xchg
add
fld
push
mov
pop
inc
pop
cmp
ss
(bad)
xor
pop
sbb
or
and
(bad)
xchg
loop
jecxz
ss
das
cwde
jmp
mov
std
mov
call
fdiv
jo
shl
pop
cdq
fisttp
dec
shl
in
sbb
add
mov
call
repz
inc
frstor
dec
pop
push
movs
cmp
and
cdq
push
and
push
push
loop
adc
inc
adc
push
xchg
out
push
xor
test
push
adc
inc
pop
cmp
gs
or
int
sub
in
sbb
dec
jnp
loop
int3
or
and
mov
cwde
inc
sub
shl
out
(bad)
dec
mov
adc
ins
mov
mov
or
movups
pop
loop
aad
add
mov
popf
fwait
retf
lea
or
out
xchg
pop
sahf
mov
add
fld
mov
sahf
scas
call
inc
not
xor
jmp
sahf
in
cmp
pop
pop
test
mov
push
mov
call
inc
in
outs
cmc
mov
push
(bad)
mov
adc
or
cdq
jbe
pop
loopne
pop
xor
mov
or
mov
daa
pop
mov
mov
popf
push
xchg
js
lods
dec
adc
mov
jge
sti
push
push
pop
push
sub
fcmovne
test
lods
push
sbb
push
sar
inc
fld
dec
int3
inc
jg
add
or
push
mov
sbb
int
inc
shr
jae
jge
shl
movs
push
stos
sub
clc
aaa
mov
push
sub
inc
xchg
ret
cmp
idiv
test
pusha
inc
stos
cmp
sub
leave
out
mov
fimul
jno
mov
mov
pop
out
shl
call
stos
ins
out
pushf
mov
cli
pop
stos
and
out
dec
inc
xor
leave
jmp
sbb
scas
add
outs
jnp
int
dec
or
mov
pop
sbb
adc
cmps
mov
enter
sub
xor
mov
xor
cld
inc
out
jge
and
mov
imul
les
pushf
(bad)
mov
cwde
aam
aaa
push
jno
or
push
pusha
pop
add
(bad)
retf
stc
fwait
mov
xor
sub
es
pop
or
jmp
cmps
cmps
or
cwde
and
int3
xor
jnp
sbb
cld
xchg
enterw
mov
cmp
add
lods
leave
pop
jmp
shl
or
mov
dec
mov
lods
enter
cld
fs
loopne
(bad)
rcl
jbe
push
or
daa
xor
cmp
js
jb
or
in
stos
aam
cmp
in
in
mov
retf
push
fisub
int3
pop
loope
add
push
cmc
xchg
pop
dec
xchg
dec
ret
mov
mov
ja
mov
aad
popa
out
lock
mov
mov
inc
(bad)
pop
push
int3
loopne
out
mov
add
gs
clc
jbe
or
mov
inc
or
cwde
mov
push
xor
stos
jmp
in
rol
jle
stos
adc
call
ds
int
aas
(bad)
add
push
movs
cwde
aaa
idiv
loopne
data16
xchg
dec
inc
mov
inc
jb
addr16
adc
not
and
mov
clc
adc
jl
dec
outs
seto
rcl
mov
pop
dec
or
outs
hlt
push
add
fsubrp
cmps
rcr
jne
cmp
dec
and
sbb
fsubr
fisub
pushf
mov
and
inc
and
jnp
sub
push
mov
retf
inc
ja
(bad)
stos
mov
fadd
icebp
push
fist
sub
shl
sbb
movs
cmp
add
aam
cmp
ret
mov
and
push
imul
mov
pop
leave
cmp
repnz
push
sahf
lahf
or
icebp
sbb
loope
mov
sbb
imul
sub
dec
xchg
or
fs
pop
dec
cmovbe
cmps
add
inc
popf
into
jno
or
pusha
jge
fld
fisttp
mov
test
cmp
sbb
pop
shl
lods
pushf
push
jb
ja
sub
loopne
mov
mov
push
(bad)
pcmpeqb
hlt
push
adc
rcr
sbb
inc
or
cwde
rol
loopne
movs
int
pusha
sbb
xchg
loopne
dec
retf
int
and
out
sbb
out
adc
cmp
adc
cmp
retf
xor
retf
xor
adc
dec
xchg
sbb
loopne
(bad)
sbb
lock
and
(bad)
and
pop
inc
movs
push
fcomp
adc
mov
dec
jmp
dec
mov
and
dec
mov
jp
imul
rcl
and
jns
jecxz
jne
add
lods
aas
test
push
jnp
or
enter
inc
xchg
repnz
repnz
jl
cmp
or
lods
and
mov
retf
cmp
add
dec
push
(bad)
xchg
out
loope
imul
rol
sbb
aas
lea
dec
addr16
in
push
cmp
or
or
stos
pop
ins
sbb
xchg
or
adc
out
pusha
gs
pop
(bad)
repz
test
jg
(bad)
icebp
in
xchg
bound
adc
clc
dec
xchg
adc
in
sub
mov
aam
dec
xchg
ins
cmps
mov
in
mov
cmps
lods
push
(bad)
int
call
cdq
(bad)
in
jb
mov
in
loopne
mov
popa
pop
lods
aad
movs
dec
(bad)
jno
aam
cmp
jp
sbb
pop
je
cmc
xor
jl
inc
inc
push
lock
loop
mov
ja
rcl
loopne
jae
xor
ret
int3
mov
jmp
inc
add
out
cmps
cmp
or
adc
rcl
add
mov
cmp
mov
xor
or
(bad)
mov
pop
or
fdivr
addr16
adc
outs
mov
add
sbb
xor
push
ret
hlt
pop
retf
test
or
xchg
mov
loop
cmp
sbb
retf
sbb
jg
movs
fdivr
test
test
lea
sbb
in
mov
pop
and
mov
sub
les
cmp
dec
jl
pop
xor
adc
sub
nop
sub
sar
inc
and
lds
inc
mov
ffree
repz
cs
push
stos
dec
cwde
dec
jmp
test
sub
sbb
dec
pop
scas
xlat
ret
div
adc
test
sahf
jb
pop
mov
fild
sbb
outs
adc
lods
hlt
cmc
(bad)
and
add
mov
dec
jmp
test
adc
adc
jne
or
xchg
sub
outs
std
mov
xor
adc
stc
mov
sub
nop
div
inc
in
in
dec
push
retf
js
jle
mov
je
call
movs
mov
add
cmps
das
add
mov
pop
lods
cld
jmp
pop
xchg
stos
adc
push
xchg
or
lods
add
mov
sub
sbb
popf
ror
add
fistp
shl
mov
ins
or
in
shrd
xchg
fs
shr
fld
jb
mov
add
jnp
adc
ret
push
loopne
daa
iret
imul
sub
pusha
clc
retf
sub
xchg
(bad)
jge
jle
ss
xor
not
inc
lahf
int
pop
cwde
sahf
add
add
and
and
aas
test
loope
or
aaa
xchg
adc
mov
jnp
sub
xor
sti
stc
ds
mov
in
or
fcomp
in
das
dec
adc
xor
rcl
or
js
ror
call
in
and
push
hlt
inc
call
sub
rep
jns
inc
shl
das
push
jg
dec
out
icebp
mov
dec
rol
adc
or
leave
outs
lock
sub
js
jp
push
aam
jb
mov
mov
cmps
pop
jnp
fsub
sub
js
leave
pop
pop
adc
adc
jae
jb
push
dec
jae
sbb
int3
cli
jnp
mov
out
(bad)
(bad)
fwait
mov
inc
(bad)
lea
movs
mov
fnstsw
int3
or
enter
(bad)
pop
jmp
jl
xor
fidivr
fidivr
sub
and
lahf
xor
push
cmp
(bad)
fnstsw
shr
add
mov
xor
iret
sbb
or
out
ins
and
das
push
pop
mov
adc
dec
jae
adc
repnz
fdiv
fisttp
js
sbb
test
add
cmp
fmul
std
in
lds
sti
out
sub
inc
inc
test
and
cmp
and
pop
ror
xchg
mov
sbb
cmp
jecxz
or
sbb
cmp
jge
stc
lea
inc
pop
(bad)
mov
mov
add
jp
mov
jne
jmp
jne
fimul
push
das
mov
push
fsub
cs
outs
lock
adc
sbb
xchg
retf
mov
ret
mov
inc
xchg
sub
mov
cmp
dec
adc
sbb
sub
shr
dec
jnp
sbb
dec
call
jl
xor
mov
stos
das
pop
add
ins
add
loopne
adc
jnp
push
inc
fstp
inc
sub
inc
dec
mov
jo
out
addr16
pop
mov
mov
(bad)
in
mov
repnz
sub
jae
popf
jge
(bad)
mov
or
mov
repz
push
scas
imul
fwait
cmp
xchg
lods
adc
outs
sahf
inc
push
sub
cs
xchg
(bad)
rol
lods
neg
fidivr
(bad)
test
aad
nop
cmp
ja
xor
shr
js
mov
fmul
pop
cli
ret
xchg
add
add
lods
or
xor
push
pop
mov
adc
mov
xor
or
and
or
xchg
fsubr
add
push
mov
nop
ins
dec
test
jb
dec
pop
dec
test
jo
jnp
push
xchg
imul
in
scas
or
mov
mov
out
js
push
sti
inc
and
pop
mov
invd
or
pop
xchg
in
stos
outs
inc
sbb
push
aam
scas
mov
pop
mov
add
mov
mov
ret
(bad)
retf
cmp
daa
push
stos
mov
ret
or
scas
(bad)
push
fcom
repnz
or
fnstcw
lods
xchg
shl
mov
loopne
test
push
aad
jns
xor
jg
jle
pop
pushf
retf
iret
das
sbb
mov
xlat
add
daa
mov
mov
jle
stos
push
jecxz
pop
fwait
out
add
pop
adc
xchg
aaa
jmp
retf
mov
and
and
fcom
jl
sub
dec
xchg
adc
adc
js
adc
fcmovb
sub
mov
or
mov
mov
(bad)
call
ss
inc
test
iret
popa
es
add
mov
pop
call
ss
or
jmp
sahf
lea
imul
mov
xor
sahf
pop
xchg
push
loope
ret
add
test
sti
jmp
jo
push
cdq
xor
ror
sar
dec
add
xor
cwde
mov
lods
repnz
dec
loopne
mov
sbb
jnp
in
dec
push
xchg
and
rcr
jmp
scas
mov
popa
fwait
jmp
test
lods
push
cmp
jecxz
fcmovb
adc
retf
inc
mov
cmp
dec
jae
(bad)
jge
mov
mov
push
pop
repnz
mov
lock
jne
push
and
jne
or
adc
pop
jp
and
cld
lea
stos
ret
std
adc
jmp
es
cs
mov
dec
mov
mov
ret
popf
ja
jp
pop
loop
arpl
xchg
push
fcomp
lods
sbb
scas
fwait
das
mov
and
jnp
mov
mov
arpl
sbb
xchg
cmps
mov
push
les
popa
data16
int3
ror
loope
add
and
mov
inc
retf
mov
dec
push
gs
mov
(bad)
mov
cmp
adc
xchg
or
je
inc
cld
sub
arpl
fiadd
sub
xor
xchg
sub
sbb
mov
sub
in
adc
cmp
add
lea
sub
dec
and
adc
xor
(bad)
iret
or
adc
push
mov
mov
jmp
mov
push
mov
mov
push
mov
lock
or
(bad)
fs
aad
inc
sub
fimul
scas
xor
sbb
mov
xchg
pop
rcr
pop
xchg
das
loopne
push
mov
nop
sbb
clc
xor
pop
and
sbb
jge
aas
xchg
inc
retf
xor
lods
mov
jl
dec
cmps
dec
gs
mov
repnz
mov
fs
pop
mov
jbe
inc
sti
test
cmp
push
loope
aam
push
cmps
inc
push
outs
js
xchg
sbb
mov
push
daa
mov
mov
or
jo
or
les
aam
jb
cmp
sub
shl
(bad)
mov
retf
or
sub
test
rcl
add
aam
mov
jle
repz
fcomip
mov
fadd
cmp
call
sbb
stc
rcr
xchg
add
push
jno
pop
jmp
sub
outs
call
imul
dec
pop
add
jmp
sbb
cmps
pop
pop
adc
add
push
mov
cmp
or
and
push
shl
mov
daa
adc
aam
popf
into
(bad)
mov
push
mov
rol
xchg
inc
mov
push
enter
push
stc
imul
cli
xchg
push
pop
and
jl
pop
jno
pop
out
push
inc
dec
test
push
and
in
push
push
out
mov
or
mov
cld
rcr
stos
outs
push
or
xchg
add
movs
out
in
inc
push
and
out
into
xor
pop
call
(bad)
mov
xchg
dec
loope
iret
xchg
hlt
add
pop
les
pop
ret
lods
sub
xchg
retf
mov
lods
loope
repnz
fcomp
add
xchg
push
pop
in
in
lds
push
cmp
je
cmp
inc
cmp
add
dec
fsubp
aam
(bad)
dec
jbe
test
push
and
fidivr
(bad)
addr16
ss
fisub
sub
shl
sbb
dec
fist
std
xor
pop
nop
xor
into
jle
push
ins
push
adc
lahf
movs
cmc
cs
and
fldcw
mov
jg
hlt
hlt
mov
and
iret
sub
lds
add
lods
btc
sti
dec
in
sub
lds
cdq
lods
xchg
les
sbb
xchg
pop
in
jecxz
mov
jne
push
shr
dec
fcom
dec
loop
sub
push
inc
xchg
sub
mov
mov
in
test
je
cli
xchg
mov
jle
pmaxsw
fidivr
fstp
cmps
(bad)
in
(bad)
in
and
sbb
inc
int
cwde
stos
push
dec
mov
xor
dec
xor
pop
clc
loop
add
stc
js
and
jb
xor
sbb
data16
jl
inc
(bad)
push
les
mov
sbb
mov
nop
push
or
(bad)
ja
sbb
call
inc
fst
fsub
cmp
or
mov
push
jns
scas
mov
shl
int
arpl
mov
cmps
(bad)
les
arpl
in
pop
test
int
xchg
xor
push
adc
lods
xchg
scas
lahf
jp
mov
mov
(bad)
jne
add
or
add
iret
inc
out
jmp
jmp
or
ja
add
(bad)
loop
fsubr
fbld
mov
mov
repz
fnstenv
cmp
fst
jecxz
cwde
sub
not
call
dec
mov
stos
fld
adc
js
jl
mov
push
add
cmp
js
push
mov
mov
pop
scas
xchg
and
sahf
mov
pop
fistp
loopne
lods
pop
mov
push
push
lds
dec
mov
mov
movs
jmp
jle
stos
xor
dec
or
sar
(bad)
pop
push
push
pop
mov
into
or
mov
pop
repnz
loopne
cdq
mov
outs
fcmovbe
imul
mov
jp
mov
add
sbb
mov
jl
enter
xor
push
xor
ret
out
jl
sub
stos
stc
retf
mov
clc
in
out
(bad)
call
jne
xor
dec
mov
jl
sbb
daa
ror
xor
mov
mov
mov
aad
jbe
pushf
jle
cwde
push
shl
aaa
mov
xchg
lahf
xor
imul
xchg
lods
call
fmul
mov
sub
cmps
push
jge
mov
(bad)
mov
cmps
pop
stos
sub
jg
clc
into
xlat
xor
lds
ins
inc
test
adc
mov
sbb
hlt
and
in
stc
cmp
inc
ja
aad
retf
push
aad
jmp
ret
adc
cmps
sbb
add
sbb
push
xchg
ja
sub
add
mov
sti
mov
fs
lods
inc
xor
or
or
(bad)
jecxz
pushf
jecxz
adc
mov
imul
std
pop
pop
jae
jle
jge
imul
lock
and
xchg
mov
mov
xor
aas
or
pop
int3
daa
push
xor
pop
xor
adc
push
out
push
cli
imul
sbb
dec
dec
es
shl
sbb
xor
xchg
adc
repnz
(bad)
xchg
ldmxcsr
add
push
sub
clc
imul
aad
lea
das
pop
pop
loope
sahf
xchg
mov
dec
mov
test
or
dec
push
pushf
push
out
mov
jecxz
loope
sub
mov
and
inc
stos
in
test
movs
jns
cli
jecxz
aad
in
and
mov
add
adc
ja
inc
repz
rol
xchg
shl
es
cwde
out
mov
rcl
pop
in
movs
xlat
sub
adc
mov
outs
pop
or
or
int
jl
pop
push
add
mov
xor
fisttp
add
scas
les
jo
push
jmp
inc
xchg
xchg
mov
outs
in
fwait
push
movs
jns
xlat
fchs
and
add
out
movs
dec
cmp
(bad)
dec
xchg
popa
inc
pusha
ja
inc
push
cmp
test
shl
mov
or
out
cwde
in
aad
xchg
adc
loopne
retf
loope
jns
dec
xchg
push
and
jns
in
mov
pop
mov
aad
cmp
fnstcw
fisttp
outs
cmps
pop
xchg
imul
xor
cmp
fwait
outs
xchg
mov
push
rcr
fnstcw
and
push
mov
and
sub
push
lods
loope
rcr
add
enter
cmp
and
ss
sar
je
or
adc
xchg
cmps
and
(bad)
out
add
into
xchg
jmp
mov
mov
shl
jmp
cli
add
push
dec
int3
test
loop
sbb
mov
mov
and
pop
fwait
in
(bad)
ffree
outs
es
(bad)
aad
outs
add
js
pop
fldcw
and
(bad)
dec
js
add
adc
out
add
sahf
movzx
jmp
mov
add
add
(bad)
jae
cli
dec
inc
je
imul
(bad)
xchg
mov
sub
and
movs
pop
jmp
dec
inc
dec
clc
jns
jns
adc
ins
jmp
mov
dec
outs
inc
outs
mov
push
and
and
pop
sub
push
sbb
adc
add
stos
xchg
out
push
push
and
jl
mov
aas
inc
movs
pop
iret
jnp
sub
mul
repnz
sti
adc
inc
mov
inc
xor
outs
xor
movs
dec
cmp
movs
neg
sub
and
popf
or
pushf
fnclex
mov
mov
fs
shr
repz
xor
sbb
loopne
addr16
imul
sbb
pushf
std
test
outs
pop
jp
shl
xchg
pop
jnp
aas
(bad)
repnz
outs
push
add
ja
test
xor
or
jmp
nop
inc
pop
cmps
push
mov
push
les
test
outs
mov
aad
sar
jl
aad
cwde
stos
cmps
jecxz
out
(bad)
xor
sub
mov
jae
popf
popf
aas
ret
pop
fsub
(bad)
sub
mov
sahf
outs
sub
dec
pop
inc
ins
mov
sbb
cmp
pop
lahf
mov
mov
loope
(bad)
lea
sbb
ret
cmps
push
or
and
into
adc
sbb
xchg
shr
test
mov
pushf
shr
int3
sti
(bad)
jl
adc
(bad)
cld
aaa
xor
ror
jge
mov
scas
adc
sub
mov
mov
xchg
or
inc
pushf
jno
mov
mov
xchg
sub
mov
jno
xor
dec
fnsave
cmp
push
(bad)
mov
test
push
test
outs
mov
rol
add
out
dec
fcmovnb
arpl
lahf
js
(bad)
movs
popf
jne
out
inc
pop
add
outs
shr
aam
xor
movs
imul
movs
cmp
lahf
test
into
jl
adc
xor
pop
mov
(bad)
xchg
push
cmp
cdq
ret
int
ins
mov
jecxz
sub
sahf
push
mov
les
loopne
fiadd
mov
mov
inc
push
dec
mov
pop
test
sub
sub
loope
xor
pushf
outs
and
xor
sbb
jns
fs
(bad)
jb
fldenv
psubw
mov
and
sub
cmp
sahf
bound
inc
add
inc
sub
or
(bad)
push
push
aam
fs
jb
arpl
dec
and
sbb
iret
mov
inc
sbb
popf
push
and
mov
mov
xor
push
cmp
sub
dec
xchg
dec
xchg
jne
std
push
in
leave
mov
fdivr
int
rol
push
fisub
ins
mov
int3
test
add
dec
jo
xor
inc
dec
push
or
call
xchg
cmps
jl
pusha
shl
or
inc
dec
stos
(bad)
mov
xor
in
add
cld
mov
retf
jg
add
bound
mov
ror
adc
iret
or
mov
shl
lahf
pop
mov
mov
sbb
sar
movs
int3
sbb
dec
sbb
test
pop
std
sub
sub
jne
mov
loop
xchg
push
push
sahf
call
inc
sbb
jge
test
lods
popf
aas
repz
outs
mov
jmp
mov
int3
or
loopne
dec
adc
add
out
loopne
fnstsw
jo
cmp
dec
(bad)
pop
cmp
push
sub
inc
cs
adc
mov
and
and
call
xor
xor
xor
pop
outs
fwait
add
xchg
mov
adc
idiv
aaa
adc
add
inc
and
(bad)
pop
test
je
or
pop
inc
or
sbb
adc
jns
add
int3
(bad)
imul
outs
lods
adc
dec
xor
cdq
lock
or
cmp
es
sbb
sbb
xchg
add
add
jns
or
and
shl
mov
popf
inc
dec
dec
std
inc
mov
test
cmp
scas
clc
cmp
mov
mov
fmul
loope
jbe
xor
std
or
popf
mov
adc
test
mov
xor
jecxz
bound
add
cdq
(bad)
jae
cmp
jmp
cmp
das
adc
push
in
mov
add
push
cmp
fwait
xlat
xchg
(bad)
aad
test
fwait
call
mov
push
loop
jb
idiv
xor
loop
mov
sub
icebp
jmp
dec
sub
mov
dec
das
mul
xchg
pusha
jmp
xor
dec
movs
inc
xchg
mov
inc
inc
ss
or
dec
jne
inc
hlt
retf
dec
jp
ror
fdivr
mov
add
fsub
imul
mov
(bad)
pop
or
adc
xor
jae
in
std
sti
push
and
lock
adc
lock
mov
and
add
mov
scas
repnz
sub
es
cmp
in
xchg
pop
pop
scas
adc
push
pop
gs
jne
fld
add
sub
movs
mov
popa
add
xchg
pop
mov
mov
test
movs
fadd
dec
sub
loopne
inc
stos
sub
fnstenv
mov
mov
mov
ins
retf
mov
je
ja
pop
xor
push
ror
shr
call
scas
sub
pop
jmp
stos
xchg
retf
les
aas
cmp
push
mov
out
outs
outs
pop
idiv
xchg
xchg
fsubr
xor
mov
push
fldcw
and
call
pop
and
call
arpl
cmc
mov
sbb
cmp
fimul
rcl
std
push
mov
jecxz
loope
mov
pop
hlt
jns
repnz
mov
icebp
outs
and
or
sbb
cmp
fistp
push
cmp
sub
test
mov
xchg
mov
dec
pop
(bad)
add
std
mov
daa
xchg
and
lahf
add
ret
xor
std
rcl
es
gs
imul
jbe
push
fsub
movs
gs
sub
push
movs
or
jmp
(bad)
push
pmaxsw
push
mov
(bad)
push
adc
jae
popf
fnstcw
dec
xor
rol
aas
pop
ret
aas
cmps
addr16
mov
pop
jae
mov
dec
and
cmp
push
mov
jns
mov
and
mov
push
in
in
subps
cmp
(bad)
and
int3
jp
push
adc
ret
add
addr16
mov
sub
neg
xor
mov
dec
adc
stos
mov
hlt
mov
call
inc
sub
clc
pop
mov
jmp
sub
nop
ins
stos
adc
cmp
shl
pop
sbb
into
and
enter
sar
add
adc
cmc
movs
js
inc
push
shr
bound
or
push
mov
xchg
ja
inc
add
dec
sbb
out
mov
adc
(bad)
mov
out
out
xchg
aam
out
in
cmp
add
lods
ja
cs
loope
aam
mov
push
faddp
push
inc
dec
mov
mov
jne
mov
out
pop
scas
jecxz
adc
cli
rol
push
enter
and
or
outs
in
fwait
jl
sbb
sub
mov
enter
arpl
ds
pop
das
sub
test
retf
pusha
push
les
mov
inc
mov
xor
jle
xchg
add
jo
push
mov
retf
xchg
push
mov
jns
mov
ja
xor
jle
sub
mov
and
xor
jg
adc
lock
jmp
mov
hlt
cmp
push
jnp
call
ror
fisttp
dec
pop
iret
outs
add
and
mov
sbb
cmp
fsubr
fild
out
loopne
or
movs
push
and
mov
mov
sbb
btr
cdq
mov
adc
inc
sbb
jl
lea
xchg
xchg
aaa
aas
sub
shl
pop
inc
pop
shr
xchg
xchg
adc
fxam
mov
dec
and
jns
ror
mov
mov
mov
inc
ins
or
jnp
mov
scas
mov
inc
daa
pop
(bad)
icebp
imul
inc
pop
mov
xor
repnz
pop
mov
out
loop
ja
scas
in
mov
sub
sti
mov
jno
inc
loop
or
dec
mov
xlat
xchg
ins
sti
add
mov
mov
(bad)
call
xchg
inc
sbb
out
mov
out
fcomp
dec
mov
leave
jecxz
enter
xor
loope
lahf
repnz
sub
add
scas
movs
shl
and
mov
add
sbb
leave
call
int3
adc
stos
imul
test
xor
adc
(bad)
(bad)
mov
mov
push
xor
mov
lahf
ror
pusha
or
and
add
fs
mov
sub
sbb
cmp
fstp
jmp
and
in
sub
pop
jp
(bad)
sti
sbb
out
pop
stos
push
ror
mov
jae
pop
fnstenv
popf
sahf
cmps
or
rol
xchg
push
mov
mov
and
jg
ins
retf
jmp
ds
mov
and
std
cli
jae
and
xchg
or
add
clc
pop
push
xor
sub
xchg
out
out
mov
jbe
add
aam
inc
clc
movs
scas
repz
jb
sbb
sbb
jp
xchg
or
retf
mov
dec
jge
scas
fist
call
mov
iret
movs
cmp
scas
ins
hlt
ror
mov
xchg
pop
leave
mov
and
test
adc
mov
and
in
shl
in
mov
lods
xlat
xor
fcmovne
jne
test
mov
or
push
ins
mov
pushf
sbb
mov
callw
jne
ret
pop
cmp
or
xor
mov
jb
cmp
mov
or
loope
sbb
popf
xor
mov
test
inc
out
test
push
int
adc
je
out
fcomp
sar
sub
inc
out
adc
xchg
mov
mov
mov
or
jp
hlt
lock
in
jecxz
mov
je
mov
dec
loope
xlat
mov
ret
ins
mov
pop
mov
aaa
dec
mov
mov
add
dec
mov
mov
fldcw
out
cmc
push
std
fwait
cmp
dec
rcr
in
pop
cld
rol
repz
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
jge
add
jle
add
add
scas
add
and
jb
outs
addr16
add
add
add
adc
add
and
dec
inc
add
add
daa
add
and
outs
bound
add
mov
add
lods
add
add
push
push
add
add
add
add
add
mov
or
add
add
add
add
add
add
add
inc
add
ja
add
fld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
add
das
add
add
das
add
add
das
add
add
das
add
add
add
pushf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
pop
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
das
add
add
jb
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
pop
add
aaa
add
ds
inc
add
dec
add
pop
add
addr16
je
das
add
add
mov
mov
das
add
add
add
add
add
fld
in
das
add
add
add
sti
add
add
das
add
add
push
das
add
add
push
das
add
add
push
xor
push
xor
push
pop
push
push
add
pop
push
push
add
add
add
add
add
add
add
add
push
xor
push
xor
push
xor
push
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
inc
add
add
pop
inc
add
add
pop
inc
add
add
or
add
add
inc
add
add
add
das
add
add
add
add
das
add
add
das
add
add
add
add
add
or
or
add
or
or
add
or
or
add
or
or
add
add
sub
push
add
loopne
push
add
or
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
or
add
or
add
cmp
push
add
lahf
or
or
add
add
or
or
add
or
or
add
or
or
add
or
or
add
add
cmp
push
add
cmp
push
add
cmp
push
add
js
push
add
add
add
lods
or
push
add
add
or
or
add
or
or
add
or
or
add
or
or
add
cmp
push
add
or
or
add
or
or
add
or
or
add
cmp
push
add
cmp
push
add
cmp
push
add
cmp
push
add
cmp
push
add
add
add
add
add
or
add
add
or
or
add
or
inc
or
pop
or
jl
and
test
push
add
or
fimul
jecxz
test
push
add
or
test
push
test
push
add
push
test
push
add
test
push
add
push
das
add
add
das
add
add
das
add
add
das
add
add
xchg
push
push
add
add
add
push
xchg
push
push
add
push
xchg
push
push
add
push
pop
clts
add
movaps
push
add
sub
push
add
sub
push
add
sub
push
add
sub
push
add
add
add
add
add
add
comiss
push
add
pmulhw
push
add
psubw
push
add
adc
femms
add
adc
femms
add
adc
femms
add
stc
femms
add
stc
femms
add
stc
clts
add
in
push
add
adc
add
add
add
add
add
adc
push
add
adc
push
add
adc
push
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
add
das
add
add
das
add
add
adc
add
add
adc
add
add
adc
add
add
adc
or
cmp
and
or
dec
adc
or
pop
adc
or
ins
adc
adc
adc
add
add
add
add
add
add
add
add
add
adc
(bad)
adc
adc
add
adc
add
add
add
add
adc
adc
add
add
add
adc
adc
add
add
add
(bad)
adc
ltr
add
add
add
adc
adc
sbb
add
adc
xchg
adc
adc
add
adc
add
add
xor
add
add
adc
adc
add
adc
add
add
add
add
add
adc
adc
add
add
add
(bad)
adc
add
add
add
(bad)
adc
add
add
add
jbe
push
add
add
add
add
pop
add
add
add
adc
adc
add
adc
adc
add
add
add
(bad)
adc
add
adc
adc
add
add
add
(bad)
adc
add
add
add
(bad)
adc
add
add
add
cmps
add
mov
(bad)
adc
add
add
add
adc
adc
add
add
add
adc
adc
add
add
add
mov
mov
add
adc
mov
retf
add
adc
mov
int3
add
adc
mov
rol
add
adc
mov
add
add
adc
mov
add
add
adc
mov
add
add
push
add
icebp
add
add
add
xor
add
add
push
add
icebp
add
add
add
add
add
(bad)
adc
add
push
add
icebp
add
add
add
push
add
icebp
add
add
add
add
add
push
xlat
push
xor
add
push
add
icebp
add
add
add
add
add
pop
xlat
push
push
add
add
add
adc
adc
xlat
push
xor
add
add
add
pop
xlat
push
or
ret
add
add
add
add
pop
xlat
push
push
add
add
add
xlat
push
xor
add
pop
xlat
push
xor
add
add
add
(bad)
adc
add
add
add
xlat
push
adc
int
inc
add
add
add
add
add
add
xlat
push
xor
add
add
add
pop
xlat
push
and
add
add
add
pop
xlat
push
and
add
add
add
pop
xlat
push
xor
add
add
add
pop
add
or
loope
add
add
add
xlat
push
sbb
add
add
add
sbb
push
sbb
add
add
add
xlat
push
or
out
add
add
xlat
push
xor
add
add
add
xlat
push
or
test
add
jp
(bad)
adc
add
add
add
or
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
push
sbb
add
add
add
sbb
adc
add
add
add
add
add
add
add
add
add
add
sbb
adc
add
sbb
adc
add
sbb
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
adc
add
add
add
add
add
add
add
add
sbb
adc
add
add
add
(bad)
adc
add
add
add
sbb
adc
add
sbb
adc
add
sbb
adc
add
add
add
sbb
add
add
add
add
add
sbb
adc
add
add
add
sbb
adc
cmp
ins
add
add
add
add
add
add
add
or
cmp
add
add
add
xchg
add
adc
mov
add
xchg
add
sbb
add
add
scas
add
sbb
add
add
scas
add
sbb
add
add
add
add
sbb
adc
add
sbb
adc
add
add
add
(bad)
adc
add
mov
add
add
mov
add
add
or
or
sbb
add
add
add
add
sbb
add
add
add
sbb
xchg
add
add
add
add
sbb
cwde
add
add
add
add
(bad)
adc
add
add
add
(bad)
adc
add
add
add
add
add
add
sbb
mov
add
add
add
sbb
mov
add
add
push
(bad)
adc
add
add
add
add
add
add
adc
inc
push
add
xor
add
add
add
add
xor
add
add
add
add
add
add
adc
scas
push
add
xor
add
add
add
push
add
xor
add
add
add
push
add
xor
add
add
add
add
add
add
adc
aaa
pop
add
xor
add
add
add
(bad)
adc
add
add
add
add
xor
add
add
add
add
add
add
adc
mov
add
add
xor
call
add
and
add
sub
inc
add
dec
and
add
jo
inc
add
push
dec
and
push
adc
add
jns
js
push
sbb
mov
add
and
add
add
nop
add
and
nop
add
add
add
add
ja
add
add
and
and
and
add
add
inc
add
add
mov
and
add
add
add
and
add
add
and
add
add
and
xor
push
and
jne
mov
and
mov
add
and
std
and
pop
es
es
add
inc
add
add
add
add
es
add
es
add
add
add
daa
mov
daa
add
add
inc
add
add
add
add
daa
add
add
daa
inc
add
add
add
sub
sub
add
add
add
add
sub
sub
add
add
sub
adc
sub
add
mov
sub
add
add
add
add
sub
sub
add
add
sub
adc
cmp
add
mov
sub
add
add
add
sub
sub
sub
add
add
sub
adc
dec
sub
sub
sub
add
add
add
sub
sub
sub
add
add
sub
add
add
add
add
add
add
add
sub
add
add
sub
add
push
dec
and
push
sub
shr
in
add
repz
in
add
adc
xor
in
add
pop
xor
add
jnp
in
add
popf
xor
add
mov
and
in
add
add
in
add
and
add
add
imul
mov
in
add
lods
xor
add
add
xor
xor
icebp
xor
add
add
xor
add
push
dec
and
push
and
add
mov
ins
add
stos
xor
push
or
ins
add
out
xor
add
mov
add
xor
add
add
xor
add
add
xor
inc
add
jne
xor
xor
add
add
add
inc
add
add
add
add
cmp
add
add
cmp
add
add
add
cmp
add
add
add
add
add
add
add
add
cmp
add
add
cmp
add
add
add
cmp
add
add
add
add
add
add
cmp
add
add
cmp
add
add
cmp
add
add
sub
add
add
add
add
add
jne
xor
xchg
cmp
add
mov
add
xlat
cmp
add
stc
cmp
cmp
add
cmp
add
add
lds
adc
mov
add
add
aas
jne
xor
cmc
aas
jne
xor
pop
inc
add
add
lock
add
add
inc
jne
xor
jecxz
repz
add
add
clc
add
scas
inc
add
rol
add
repz
adc
add
push
inc
add
jns
ins
add
add
push
add
add
push
add
add
add
add
inc
inc
add
add
dec
inc
add
add
dec
mov
dec
add
add
add
dec
repz
add
repz
add
add
add
dec
repz
push
dec
and
push
add
movs
dec
and
push
add
and
push
sub
and
push
or
and
push
sub
loope
imul
nop
add
add
add
add
dec
push
add
add
dec
push
add
add
add
add
add
add
add
add
add
add
xor
dec
cmp
add
add
inc
add
add
inc
add
inc
add
jne
add
xlat
push
add
dec
add
dec
add
push
add
push
add
jo
add
in
add
add
push
lahf
add
movs
add
cmps
add
lock
add
add
push
movs
add
mov
add
andnps
push
jne
add
push
push
mov
and
push
xor
mov
push
adc
mov
push
cmp
mov
push
sbb
add
mov
push
sbb
rcr
push
and
mov
push
add
add
mov
push
or
add
mov
push
sub
add
jne
push
and
test
xor
mov
add
pop
jne
add
(bad)
pop
and
add
and
push
push
dec
and
push
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
cmps
add
jne
push
cmp
push
add
mov
pop
mov
and
push
and
dec
pop
mov
or
add
pop
mov
dec
mov
and
push
add
ret
push
push
sbb
xor
gs
enter
xor
add
add
mov
pop
rol
add
test
add
pop
ret
push
add
in
pop
movs
add
jne
add
retf
push
movs
add
mov
push
fild
push
push
dec
and
push
add
push
push
adc
push
push
cmp
ror
fild
push
add
fild
push
sub
fild
push
or
push
and
iret
bound
add
add
bound
and
adc
add
add
add
mov
push
jbe
add
ins
fs
adc
mov
push
add
add
ins
add
add
ins
movs
add
movs
add
movs
add
add
add
outs
add
add
outs
add
add
jo
add
add
add
add
add
add
dec
and
push
cmp
or
sbb
dec
and
push
cmp
je
or
add
(bad)
push
and
(bad)
push
add
push
and
or
or
stos
jne
or
or
(bad)
xor
out
jne
add
push
dec
and
push
or
or
jmp
jp
or
or
push
jp
or
or
xchg
jp
or
or
fdivr
or
or
cli
jp
or
or
ds
or
jne
push
and
or
jg
push
and
jnp
or
jg
push
or
jg
push
sub
or
jg
push
xor
or
jg
push
xor
jl
or
jg
push
sbb
jg
push
add
pop
jge
or
test
test
test
test
test
add
stc
cmp
jg
add
add
add
add
add
(bad)
jg
add
add
jg
add
add
cmp
xor
sub
add
add
add
add
jne
xor
xchg
xor
add
out
mov
add
add
mov
add
add
mov
add
push
mov
add
jbe
jne
add
cwde
mov
add
add
add
mov
add
dec
and
mov
add
add
add
add
add
add
mov
add
in
mov
add
push
lea
add
xor
push
lea
lea
(bad)
repz
add
add
(bad)
repz
add
(bad)
repz
push
dec
and
push
sbb
mov
push
add
push
push
push
dec
and
push
and
push
push
add
mov
mov
mov
(bad)
xchg
push
xor
or
add
add
(bad)
add
add
add
add
add
xchg
(bad)
add
mov
add
stc
cmp
cmp
add
cmp
add
(bad)
nop
add
add
nop
add
add
xchg
xchg
push
add
sub
mov
xchg
mov
xchg
sahf
push
add
xchg
xchg
cmps
push
adc
rol
xchg
mov
xchg
jne
adc
les
out
jne
and
or
sub
dec
xchg
mov
xchg
fmul
adc
nop
xchg
fisttp
adc
mov
loop
xor
and
add
add
add
add
add
add
add
xchg
add
add
xchg
add
add
xchg
add
add
add
add
add
add
add
cdq
add
add
lods
add
adc
push
add
add
cdq
and
push
add
call
lock
add
add
call
jne
push
add
inc
add
add
add
add
fwait
jne
adc
adc
add
pushf
add
add
add
fwait
jne
push
add
add
fwait
jne
push
and
add
add
sbb
pop
cmp
add
pusha
and
add
add
add
add
add
add
add
add
and
add
shl
add
add
add
and
add
in
and
add
add
add
add
add
add
add
and
add
jo
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
mov
and
or
test
add
add
xchg
sbb
pop
cmp
or
add
add
add
xchg
xchg
and
and
add
add
add
add
and
add
add
add
add
add
add
xchg
add
and
add
add
xchg
add
and
and
sbb
and
adc
jo
add
add
add
and
adc
enter
add
add
and
adc
and
add
add
sbb
and
adc
xor
add
add
mov
and
adc
push
daa
add
add
xchg
xchg
and
daa
add
add
xchg
sbb
pop
cmp
adc
mov
add
add
xchg
add
sub
jo
add
add
xchg
add
sub
int3
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
xchg
add
cs
add
add
dec
add
add
xchg
add
cmp
sbb
test
add
add
xchg
add
iret
add
add
dec
add
add
xchg
add
iret
add
and
add
add
xchg
add
add
dec
add
add
xchg
add
cs
sbb
add
add
add
add
xchg
add
add
add
add
add
add
push
add
add
xchg
add
jecxz
and
mov
add
add
xchg
add
aad
and
fcom
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
xchg
add
aaa
add
add
pop
add
add
xchg
add
add
add
pop
add
add
xchg
add
inc
add
dec
pop
add
add
xchg
add
add
add
add
xchg
add
add
xchg
add
xor
xor
in
pop
add
add
xchg
add
xor
add
pusha
add
add
xchg
add
xor
cmp
mov
add
add
xchg
add
push
add
add
add
add
add
xchg
add
xor
add
add
xchg
add
xor
add
add
add
add
xchg
add
xchg
add
add
add
add
add
arpl
add
add
add
add
arpl
add
add
add
add
arpl
add
add
add
add
add
add
test
imul
add
xchg
(bad)
xor
dec
add
add
or
aas
add
add
add
add
jo
add
add
or
inc
add
xchg
in
xor
cwde
add
add
or
inc
add
xchg
and
jl
inc
add
xchg
sbb
pop
cmp
inc
add
xchg
xchg
and
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
pop
inc
add
add
add
xchg
add
ss
add
adc
add
add
add
lock
add
xchg
xchg
and
add
add
xchg
sbb
pop
cmp
dec
add
add
add
xchg
add
cmps
add
pop
push
xchg
ja
cmps
add
enter
add
xchg
sub
int3
imul
sbb
pop
cmp
dec
add
add
add
xchg
xchg
and
push
add
add
add
sub
add
add
xchg
sbb
pop
cmp
dec
add
add
add
imul
add
xchg
add
aaa
mov
imul
add
xchg
add
aaa
mov
imul
add
xchg
add
cmp
dec
add
add
add
xchg
add
jno
dec
add
ins
add
add
xchg
add
jno
dec
add
add
add
xchg
add
add
add
add
add
jae
add
add
add
jae
add
add
add
je
add
add
add
je
add
add
add
je
add
add
add
je
add
add
add
jne
add
add
add
jne
add
add
add
jne
add
add
add
jbe
add
add
add
jbe
add
add
add
jbe
add
add
add
ja
add
add
add
js
add
add
add
jns
add
add
add
jp
add
add
add
jp
add
add
add
loopne
add
add
test
mov
add
add
add
add
call
add
add
add
test
pop
aas
push
add
or
add
add
xchg
sub
cmps
add
loopne
add
add
xchg
dec
aas
cmps
add
pusha
mov
add
add
add
mov
xchg
add
add
add
add
add
add
add
xchg
add
inc
loopne
push
add
add
add
xchg
add
out
push
add
add
add
xchg
add
add
xchg
xchg
and
xchg
add
add
xchg
add
and
add
add
xchg
add
inc
sti
add
adc
add
add
xchg
add
add
push
add
add
add
add
mov
xchg
add
add
sbb
and
pushf
add
add
add
cmp
cmp
add
add
add
inc
cmps
add
dec
pushf
add
add
add
inc
cmps
add
jo
add
add
add
inc
int
pop
add
add
inc
dec
add
les
add
add
popf
add
add
test
mov
add
add
inc
push
add
test
add
add
add
inc
push
add
mov
add
add
loopne
add
add
les
inc
inc
pop
add
js
add
add
les
imul
lahf
add
add
test
mov
add
test
test
lods
inc
add
sub
add
add
xchg
iret
inc
cmps
add
cwde
mov
add
inc
int
arpl
dec
mov
test
adc
arpl
xchg
mov
test
xor
add
add
add
sbb
and
mov
add
inc
inc
add
xchg
mov
add
inc
int
imul
add
xchg
xchg
and
movs
add
add
xchg
add
inc
jno
imul
add
xchg
add
inc
jno
imul
add
xchg
add
add
xchg
add
inc
jno
imul
add
xchg
add
cmp
imul
add
xchg
xchg
and
add
add
inc
push
add
add
add
add
and
inc
pop
add
add
add
add
and
inc
pop
add
add
add
add
and
inc
data16
add
add
add
and
push
outs
add
add
add
inc
outs
add
add
add
add
and
add
add
add
inc
jle
jae
add
add
add
and
inc
xchg
jne
add
add
add
and
inc
mov
ja
add
add
add
and
inc
xchg
add
movs
cmps
add
add
xchg
add
sahf
add
add
add
add
and
movs
add
jo
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
xchg
xchg
and
lods
add
add
xchg
xchg
and
add
add
add
add
add
add
add
add
add
add
add
add
xchg
in
add
add
xchg
das
dec
aad
mov
or
test
push
dec
fild
mov
xor
xchg
jae
loop
mov
clc
scas
add
add
xchg
xchg
dec
dec
add
add
add
add
add
add
add
add
xchg
sti
dec
int
lea
ins
mov
add
add
add
add
add
add
add
add
add
dec
cld
add
add
add
add
pop
add
add
mov
dec
pop
add
add
add
add
add
add
add
dec
and
lahf
add
add
add
add
add
das
add
add
mov
dec
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
push
add
add
add
add
pop
add
add
add
add
bound
mov
fs
add
add
mov
js
add
add
mov
dec
outs
add
add
add
add
add
add
mov
int3
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
mov
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
cwde
mov
xchg
test
cmps
add
add
add
add
add
add
add
add
add
add
add
add
dec
dec
add
add
add
add
test
mov
add
add
add
pop
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
mov
add
add
add
add
stos
add
add
add
add
add
add
mov
mov
add
xchg
xchg
and
add
add
add
add
add
add
dec
mov
add
add
add
add
lds
int
add
add
add
mov
dec
bound
rol
or
add
add
xchg
xchg
and
rol
sub
xchg
push
dec
push
add
add
add
add
xchg
add
rol
rol
mov
add
add
aad
aam
fdivr
xchg
jg
fiadd
aad
cld
mov
xchg
add
loope
(bad)
add
add
add
mov
dec
push
add
add
mov
and
fadd
cwde
mov
xchg
or
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
jmp
fiadd
add
add
add
mov
dec
repz
add
add
add
add
add
bound
in
sar
sbb
add
mov
xchg
xchg
and
add
add
mov
xchg
xchg
and
add
add
xchg
xchg
and
add
add
xchg
or
add
add
add
add
add
mov
mov
and
jmp
add
add
add
add
xchg
sbb
pop
cmp
jmp
add
add
add
xchg
xchg
and
add
add
mov
xchg
xor
sub
add
add
add
xchg
inc
dec
xor
add
add
add
add
mov
xchg
add
and
rol
add
xchg
add
add
add
add
xchg
add
dec
dec
add
add
add
add
add
rol
add
xchg
add
and
repnz
rol
add
xchg
add
and
add
add
add
xchg
add
and
rol
add
xchg
add
and
cmc
add
add
add
xchg
add
and
test
rol
add
xchg
add
and
test
add
xchg
add
and
clc
add
xchg
add
and
stc
add
xchg
add
and
add
rol
add
xchg
add
and
rol
add
xchg
add
and
ret
add
xchg
add
and
ret
add
xchg
add
and
ret
add
xchg
add
and
ret
add
xchg
add
and
add
mov
add
add
xchg
add
and
ret
add
xchg
add
and
add
add
xchg
add
dec
test
les
add
add
add
add
lds
add
add
add
add
lds
add
add
add
add
add
add
xchg
add
push
enter
lds
add
add
add
add
xchg
add
push
fiadd
add
mov
add
test
xchg
and
mov
add
mov
push
out
adc
push
add
add
push
out
add
add
add
add
add
add
push
add
xchg
sbb
pop
cmp
pop
add
add
add
add
mov
add
add
leave
add
add
xchg
add
push
adc
add
add
xchg
add
push
pop
add
add
add
xchg
add
push
sub
add
add
xchg
add
add
add
add
add
add
add
xchg
xchg
and
int3
add
add
xchg
sbb
pop
cmp
and
add
add
add
add
add
add
push
cmps
add
add
add
sub
jo
add
add
add
sub
mov
add
add
add
sub
mov
add
add
add
sub
in
add
add
add
sub
inc
rol
add
add
sub
push
rol
add
add
add
add
add
xchg
push
push
jne
sub
add
add
add
les
sub
add
add
add
add
add
les
xchg
push
xchg
add
add
add
loope
pushf
push
cwde
add
add
add
loope
mov
add
add
add
xchg
xchg
and
aam
add
add
add
add
add
add
xchg
call
add
add
add
add
xchg
adc
xor
pop
aam
add
add
add
add
add
xchg
jne
retf
add
add
add
xchg
adc
xor
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
ss
aad
add
add
add
add
add
add
aaa
add
fadd
add
add
add
add
fadd
add
add
add
add
add
add
aaa
add
fld
add
add
add
add
add
xchg
fist
add
add
add
add
add
add
add
cmp
jo
add
add
add
cmp
je
add
add
add
cmp
in
add
add
add
cmp
dec
fiadd
add
add
add
add
add
add
add
cmp
xor
add
add
add
cmp
mov
add
add
add
add
push
cmp
add
add
add
add
out
add
add
add
add
out
add
add
add
add
add
add
aas
add
add
push
aas
add
jmp
add
inc
add
jmp
ficomp
add
pushf
jmp
ficomp
push
inc
add
jmp
add
add
add
sub
add
add
add
inc
add
add
inc
add
in
add
add
add
inc
add
add
inc
add
add
add
add
add
add
inc
add
in
add
add
xchg
out
pop
cmps
add
out
add
add
xchg
xchg
and
out
add
add
xchg
xchg
and
inc
add
add
push
inc
add
add
add
lods
out
add
add
xchg
xchg
and
inc
add
out
add
add
xchg
xchg
and
out
add
add
xchg
xchg
and
out
add
add
xchg
inc
pop
xor
dec
add
out
add
add
xchg
pop
pop
cmp
dec
add
add
add
push
dec
add
add
push
dec
add
add
add
add
out
add
add
add
dec
add
add
add
push
dec
add
add
add
add
repnz
add
add
push
add
add
push
push
add
hlt
add
add
add
push
add
add
push
add
add
add
add
pop
add
add
pop
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
push
pusha
cld
add
add
add
ins
add
add
outs
add
cld
add
add
add
jo
mov
add
add
xchg
xchg
and
push
jb
inc
inc
add
add
add
xor
add
add
or
pusha
jmp
jae
jo
add
add
xchg
jns
repz
jae
adc
add
add
xchg
mov
push
jae
and
add
add
xchg
xchg
pusha
inc
jae
cmp
add
add
xchg
cmps
pusha
push
add
push
add
add
xchg
mov
or
add
xchg
jne
retf
add
add
add
xchg
(bad)
pusha
call
push
add
add
xchg
aam
retf
add
add
add
xchg
jecxz
call
pop
add
add
xchg
repnz
int
ja
cmp
add
add
xchg
add
add
dec
pop
add
add
add
js
mov
add
add
add
add
add
jns
or
add
add
xchg
push
popa
cmps
add
and
add
add
xchg
out
pop
cmps
add
inc
or
add
add
add
test
add
add
xchg
and
add
xchg
xor
cmps
add
call
add
add
or
add
add
xchg
push
popa
dec
add
cwde
or
add
add
add
mov
add
add
add
jp
cld
or
add
add
add
cmp
add
add
add
jnp
cwde
or
add
add
pop
jl
in
or
add
add
add
add
add
add
jle
cwde
or
add
jle
dec
sgdtd
add
add
jg
ins
sgdtd
add
xchg
pop
bound
sgdtd
add
xchg
bound
sgdtd
add
xchg
je
dec
add
add
add
add
add
add
add
add
adc
add
add
pop
test
dec
adc
add
add
pop
test
jo
add
add
xchg
mov
pop
xchg
cwde
adc
add
add
pop
xchg
rcl
add
add
pop
mov
in
add
add
xchg
mov
add
add
add
pop
mov
xor
add
add
xchg
mov
pop
mov
pop
adc
add
add
add
add
add
xchg
mov
pop
lea
test
add
add
xchg
mov
pop
mov
rcl
add
add
xchg
mov
pop
pop
clc
adc
add
add
pop
nop
add
adc
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
xchg
xchg
and
xchg
add
add
add
xchg
xchg
and
adc
add
add
pop
xchg
add
xchg
jns
push
add
add
xchg
lahf
arpl
pushf
add
xchg
lds
add
add
xchg
jmp
int
pushf
add
adc
add
add
add
add
xchg
xchg
and
adc
add
add
add
fs
adc
add
add
pop
popf
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
xchg
cld
fs
adc
xchg
push
cmps
add
add
add
add
add
add
add
mov
and
mov
add
add
pop
mov
add
add
pop
mov
add
add
pop
movs
add
push
add
add
xchg
add
add
pop
add
add
xchg
add
movs
pop
cmps
add
pop
add
add
xchg
add
rol
add
sbb
add
add
pop
lods
add
xchg
add
add
scas
add
add
add
xchg
add
data16
mov
cwde
sbb
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
xchg
add
xchg
or
add
add
or
add
sbb
xchg
add
data16
or
add
xchg
add
ret
add
push
add
add
xchg
add
addr16
or
add
pop
add
add
xchg
add
(bad)
or
add
xchg
add
add
add
add
or
add
and
add
add
or
add
add
or
add
xchg
add
or
rol
sbb
add
add
xchg
add
push
dec
and
xchg
add
push
enter
add
xchg
xchg
and
and
xchg
add
sbb
fld
pushf
add
add
xchg
add
and
fiadd
add
add
add
xchg
xchg
and
add
add
add
add
add
add
dec
cmps
add
add
add
add
add
add
pop
add
add
add
add
add
add
pop
fild
add
add
add
xchg
xchg
and
add
add
add
add
add
add
dec
es
add
add
add
add
add
pop
add
add
add
add
add
add
sub
in
add
add
add
xchg
xchg
and
add
add
add
add
add
add
dec
xor
out
add
add
add
mov
dec
cmp
call
add
add
add
inc
or
add
add
add
add
add
add
add
add
add
add
dec
dec
or
add
add
add
add
add
push
or
add
add
add
add
add
arpl
hlt
add
add
add
add
add
add
add
add
add
add
dec
imul
add
add
add
add
add
jbe
cli
add
add
add
add
add
test
inc
lock
add
xchg
add
lea
add
push
daa
add
add
xchg
add
add
add
add
add
add
add
xchg
add
push
pushf
sub
add
add
add
add
sub
add
add
or
add
sub
add
add
or
add
xchg
add
(bad)
or
add
sub
add
add
or
add
add
or
add
sub
add
add
or
adc
add
add
xchg
add
imul
sub
add
add
or
add
sub
add
add
or
add
add
add
xchg
add
push
or
add
add
add
or
mov
add
or
add
xchg
add
add
add
add
pop
sbb
test
add
add
xchg
add
push
or
add
xor
add
add
or
xor
add
add
or
add
add
or
add
xor
add
add
or
add
xor
add
add
or
add
add
or
add
xor
add
add
or
add
add
add
xchg
add
add
add
or
shl
add
add
or
add
add
or
add
xchg
add
imul
add
add
add
xchg
add
add
add
or
aam
add
add
xchg
add
je
xor
add
add
or
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
fild
inc
add
aaa
add
add
xchg
add
add
add
or
cmp
add
add
or
loopne
add
add
xchg
add
ins
fild
inc
add
add
add
xchg
add
ins
ror
add
add
add
xchg
add
ins
retf
or
jl
add
add
xchg
add
outs
fimul
dec
add
xchg
add
outs
loopne
dec
add
add
add
xchg
add
add
add
add
sbb
add
add
xchg
add
push
add
cmp
add
add
or
test
add
add
xchg
add
add
xchg
add
add
cmp
add
add
or
cmp
xchg
add
outs
fimul
pop
add
cmp
xchg
add
outs
dec
pusha
add
xchg
add
outs
add
add
add
xchg
add
or
add
add
add
xchg
add
push
add
add
add
add
or
add
add
add
xchg
xchg
and
add
add
add
add
mov
dec
push
or
add
add
add
mov
dec
or
add
add
add
add
pop
jo
and
add
add
add
jo
add
add
xchg
add
leave
add
mov
add
or
adc
add
add
or
cmp
add
add
or
fs
add
add
xchg
add
jo
or
inc
add
add
xchg
add
jo
or
rol
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
sbb
and
inc
add
add
mov
and
call
add
add
add
jno
or
add
jno
add
add
jno
or
add
and
xchg
or
add
inc
movs
or
add
jb
or
add
jb
or
add
jb
or
add
jb
or
add
inc
aad
mov
les
add
xchg
add
add
inc
add
add
xchg
add
jb
or
add
add
or
add
add
or
add
add
add
add
add
or
add
add
add
add
xchg
add
inc
dec
add
add
xchg
add
jae
add
add
add
or
add
add
or
add
add
add
xchg
add
mov
dec
add
add
xchg
add
test
add
add
xchg
xchg
and
dec
add
add
xchg
sbb
pop
cmp
lds
add
add
add
and
jbe
or
add
add
add
jbe
or
add
add
add
jbe
or
add
add
add
jbe
or
add
add
add
jbe
or
add
add
add
jbe
or
add
add
add
jbe
or
add
add
add
jbe
or
add
add
add
ja
or
add
add
add
ja
or
add
dec
add
add
xchg
add
or
add
add
add
or
add
add
add
or
add
xchg
add
ja
or
add
push
add
add
xchg
add
ja
or
add
add
add
or
add
push
add
add
xchg
add
js
or
add
push
add
add
xchg
add
js
or
add
xchg
add
js
or
add
add
add
xchg
add
js
or
add
xchg
add
add
add
add
xchg
add
or
push
add
add
xchg
add
or
add
add
xchg
add
or
add
add
xchg
add
add
push
add
add
xchg
add
add
push
add
add
xchg
add
add
pop
add
add
xchg
add
js
or
add
add
xchg
add
js
or
add
add
xchg
add
jns
or
add
add
xchg
add
jns
or
add
add
xchg
add
xor
add
add
xchg
add
cmp
add
add
xchg
add
inc
or
add
add
xchg
add
dec
or
add
add
xchg
add
pop
pusha
add
add
xchg
add
add
add
add
add
lock
add
add
xchg
xchg
and
bound
add
add
add
inc
bound
add
add
add
push
bound
add
add
or
add
add
xchg
add
add
bound
add
add
add
or
add
add
xchg
add
add
xchg
add
jle
add
mov
add
add
xchg
add
jle
or
add
add
xchg
xchg
and
add
add
xchg
add
mov
add
add
xchg
sbb
pop
cmp
ins
add
add
add
add
add
add
and
sub
add
add
and
xor
add
or
add
add
and
push
jae
add
add
add
and
add
add
add
xchg
add
add
push
xchg
add
and
or
add
add
xchg
add
cmp
push
add
add
or
add
add
xchg
add
or
jbe
loopne
add
add
xchg
add
adc
jbe
cwde
jb
add
add
or
add
add
xchg
add
xchg
add
shl
add
add
or
add
add
xchg
add
add
add
add
xchg
add
xor
jl
cmp
add
add
or
add
add
xchg
add
or
add
jnp
add
add
add
in
jl
add
add
add
add
add
add
add
add
push
add
jg
add
add
push
xchg
clc
add
add
add
test
add
add
push
lea
ins
xchg
add
add
or
add
add
add
add
xchg
add
test
xchg
add
add
add
add
xchg
add
iret
or
add
add
xchg
add
or
add
add
xchg
add
add
xchg
add
add
xchg
add
test
xchg
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
xchg
add
push
xchg
add
add
add
xchg
add
add
xchg
add
add
xchg
add
test
cdq
add
add
add
xchg
add
test
cdq
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
xchg
add
hlt
call
into
mov
add
add
add
add
add
xchg
add
mov
pushf
add
add
xchg
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
add
mov
push
mov
add
mov
movs
add
add
add
mov
stos
add
add
add
mov
or
add
mov
mov
add
add
add
and
add
add
add
mov
mov
xor
add
add
xchg
xchg
and
rol
mov
xchg
sbb
pop
cmp
ret
mov
xchg
lds
add
add
add
add
xchg
add
(bad)
iret
or
add
add
xchg
xchg
cmp
mov
add
add
add
mov
xchg
aad
int
ret
mov
test
cli
(bad)
cmps
add
add
movs
add
add
xchg
out
push
add
add
xchg
sbb
push
add
add
add
add
add
add
add
add
xchg
pusha
nop
cmps
add
add
movs
add
add
xchg
adc
cmps
add
add
xchg
sub
cmps
add
add
cmps
add
add
xchg
sbb
pop
cmp
ret
cmps
add
add
xchg
xchg
and
cmps
add
add
add
xchg
cmps
add
add
add
add
add
stos
add
add
add
xchg
cmps
add
add
add
add
add
lods
add
add
add
ret
mov
add
ret
add
add
add
add
mov
xchg
sbb
pop
cmp
ret
add
add
add
add
mov
and
les
xor
add
add
xchg
xchg
and
mov
les
push
add
mov
les
jbe
cmps
add
add
add
add
les
or
les
clc
mov
les
pushf
dec
cmps
add
add
add
add
les
lods
dec
cmps
add
add
add
add
add
add
add
add
xchg
or
xchg
out
les
sar
xchg
or
xchg
in
push
les
in
add
add
xchg
or
xchg
repz
les
clc
mov
xchg
or
xchg
cli
push
lds
sub
add
add
xchg
or
xchg
cli
push
lds
pop
rol
add
xchg
or
iret
or
add
add
xchg
xchg
and
rol
add
xchg
sbb
pop
cmp
lds
vpshufb
add
or
add
add
xchg
or
xchg
iret
or
add
add
xchg
or
xchg
iret
or
add
add
xchg
or
add
xchg
or
xchg
iret
or
add
add
xchg
or
iret
or
add
add
xchg
or
iret
or
add
add
xchg
or
add
add
or
add
add
xchg
or
xchg
iret
or
add
add
xchg
or
xchg
iret
or
add
add
xchg
or
add
add
add
xchg
or
iret
or
add
add
xchg
or
add
lds
add
add
or
add
add
xchg
add
xchg
jno
lds
lock
add
xchg
jno
lds
mov
add
add
xchg
add
cwde
dec
lds
push
iret
add
add
xchg
add
cwde
jno
mov
iret
add
add
xchg
add
jno
mov
rol
add
add
add
add
add
add
add
add
xchg
add
fild
mov
add
xchg
add
or
enter
add
add
xchg
add
add
(bad)
add
add
xchg
add
cwde
leave
add
add
xlat
add
add
xchg
add
cwde
cmp
retf
xlat
add
add
xchg
add
cdq
xchg
add
add
xchg
xchg
and
fadd
add
add
add
add
fadd
add
add
add
add
fadd
add
add
bswap
add
add
add
add
add
add
or
add
add
add
add
xchg
jge
push
add
add
fld
add
add
add
add
fld
add
add
or
add
fiadd
add
add
add
add
add
add
xchg
daa
fwait
push
or
add
add
add
add
xchg
imul
fild
add
add
add
add
fild
add
add
add
add
add
add
xchg
repz
cmps
add
add
add
add
add
xchg
xchg
and
fild
add
add
add
add
fild
add
add
add
add
fild
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
lock
add
add
dec
add
add
add
add
and
add
add
aaa
dec
add
add
add
add
dec
add
add
or
add
add
and
add
add
aaa
dec
add
add
add
add
add
pop
add
dec
add
add
push
dec
add
add
jl
add
add
jmp
add
dec
add
add
dec
add
add
add
add
dec
dec
add
add
aaa
dec
add
add
add
add
dec
add
add
or
add
add
dec
dec
add
add
aaa
dec
add
add
add
add
add
pop
add
dec
add
add
dec
dec
add
add
push
dec
add
add
jl
add
add
add
adc
add
add
add
add
jmp
add
dec
add
add
imul
dec
add
add
jl
add
add
mov
add
add
add
pop
dec
add
add
jmp
add
dec
add
add
mov
add
add
mov
add
add
imul
dec
add
add
jl
add
add
jmp
add
dec
add
add
pop
dec
add
add
adc
add
add
dec
add
add
adc
add
add
add
add
jmp
add
dec
add
add
jl
add
add
jmp
add
dec
add
add
and
add
add
dec
add
add
and
add
add
dec
add
add
imul
dec
add
add
jl
add
add
dec
dec
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
dec
add
add
lock
add
add
mov
add
dec
add
add
mov
add
dec
add
add
imul
dec
add
add
jl
add
add
enter
add
ror
add
add
add
add
dec
add
add
dec
add
add
and
add
add
dec
add
add
cmp
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
mov
add
add
dec
add
add
mov
add
dec
add
add
or
add
add
add
add
add
add
add
push
add
add
mov
add
add
push
add
add
xor
add
add
mov
add
add
add
add
add
dec
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
jge
add
add
xchg
add
add
add
add
add
add
push
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
mov
add
add
xchg
pop
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
pop
add
add
mov
add
pop
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
pop
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
dec
add
add
imul
dec
add
add
jl
add
add
jmp
add
dec
add
add
imul
dec
add
add
jl
add
add
jmp
add
dec
add
add
jo
add
add
jo
add
add
imul
dec
add
add
jl
add
add
jmp
add
dec
add
add
jo
add
add
jne
add
add
jo
add
add
jne
add
add
imul
dec
add
add
jl
add
add
jmp
add
dec
add
add
jo
add
add
jne
add
add
jp
add
add
jo
add
add
jne
add
add
jp
add
add
imul
dec
add
add
jl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
lock
add
add
ret
pop
add
add
stos
outs
add
add
ret
pop
add
add
stos
outs
add
add
imul
dec
add
add
jl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
adc
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
icebp
add
add
add
cmp
loope
xchg
and
and
pushf
cwde
add
int
jno
sbb
cmps
add
xchg
and
imul
xchg
add
add
add
test
add
add
loope
xchg
and
leave
add
and
mov
xchg
and
fld
and
mov
add
add
and
stc
add
icebp
add
imul
add
add
lahf
push
adc
(bad)
and
inc
add
lahf
int
inc
add
add
and
pop
xchg
and
lahf
je
cmp
sti
lahf
jnp
dec
add
mov
adc
push
and
sub
xchg
and
dec
add
add
cmps
add
add
mov
xchg
and
add
add
adc
add
cmps
adc
adc
adc
add
leave
push
mov
cdq
mov
mov
mov
push
add
push
shl
mov
shl
fldenv
sbb
add
push
shl
repnz
or
shl
pop
mov
mov
mov
mov
cmp
add
lahf
jnp
pop
add
mov
sub
inc
mov
sbb
add
push
dec
mov
push
mov
sti
lahf
jnp
ins
add
mov
pop
mov
sub
mov
pop
mov
ins
mov
mov
mov
add
add
leave
or
cmp
jno
xchg
and
adc
adc
lea
xchg
mov
pushf
mov
test
jno
jno
mov
mov
inc
pop
ret
mov
shl
leave
mov
mov
iret
mov
xchg
and
adc
(bad)
mov
out
jmp
mov
add
xchg
and
adc
adc
and
add
mov
inc
dec
jl
leave
push
shl
mov
cmp
inc
mov
dec
mov
pop
mov
push
add
mov
xchg
xchg
mov
out
pop
cmps
add
push
popf
mov
hlt
lahf
pop
adc
push
cmps
mov
shl
mov
sti
lahf
jnp
jl
or
sub
mov
(bad)
add
adc
push
test
movs
adc
int3
mov
aam
mov
imul
imul
jns
out
mov
xchg
and
lahf
jnp
mov
or
jecxz
push
adc
mov
add
add
push
clc
mov
add
push
add
adc
add
mov
sbb
mov
xor
dec
mov
push
mov
jg
aad
mov
adc
add
adc
add
jb
test
add
jo
push
add
add
add
push
scas
dec
addr16
add
add
add
mov
xchg
and
mov
in
dec
add
add
mov
push
movs
mov
and
movs
mov
loope
inc
dec
int
loope
daa
movs
cmps
add
add
movs
push
add
adc
add
leave
add
add
adc
push
xchg
and
movs
icebp
adc
add
and
adc
push
jg
jbe
mov
ja
dec
adc
push
add
push
and
imul
add
add
add
add
add
add
add
add
add
movs
(bad)
adc
xchg
adc
lahf
adc
stos
adc
stos
adc
add
mov
xchg
mov
fsub
mov
xchg
mov
xchg
mov
xchg
and
and
and
adc
add
pop
xor
out
movs
rol
mov
out
pop
cmps
add
add
movs
rol
xor
xchg
and
add
add
add
push
cmp
stc
movs
adc
cmp
add
pop
movs
push
push
popa
add
xchg
and
push
push
push
add
add
xor
and
or
add
movs
sbb
add
jno
dec
movs
push
add
popa
movs
push
add
jne
bound
jno
test
xchg
and
and
xchg
and
and
add
xchg
and
add
add
add
mov
nop
push
and
mov
add
movs
mov
movs
int
fld
std
movs
lahf
adc
or
push
cmps
mov
inc
add
iret
or
leave
add
add
add
push
popa
add
pop
cmps
add
add
cmps
push
add
inc
cmps
fild
mov
push
leave
push
pop
cmps
loopne
sub
xchg
and
add
pop
cmps
push
add
add
add
jno
cdq
add
add
add
add
push
add
add
add
add
add
add
add
lahf
push
adc
xchg
cmps
mov
sbb
lea
cmp
add
mov
xchg
and
leave
push
shl
sti
lahf
jnp
lods
add
mov
sub
xchg
and
lahf
push
adc
add
add
cmps
daa
sbb
add
cmps
push
add
add
add
xchg
and
add
xchg
and
sbb
inc
dec
cmps
add
shl
cmps
cmps
add
and
mov
jecxz
push
adc
xchg
dec
push
add
xchg
and
and
or
xchg
and
add
add
add
add
pop
hlt
lahf
push
adc
push
mov
xchg
and
mov
pushf
mov
xchg
and
and
cmps
sbb
jecxz
cmps
sbb
adc
adc
push
shl
fsub
xchg
and
mov
(bad)
and
inc
add
cmps
in
push
mov
(bad)
and
sbb
sbb
sbb
sbb
sbb
sbb
push
(bad)
and
sbb
add
and
sbb
sbb
(bad)
and
sbb
sbb
(bad)
and
sbb
std
cmps
ficomp
imul
add
add
add
lahf
push
adc
adc
xchg
and
jno
push
dec
push
add
xchg
and
les
xchg
and
and
sbb
add
add
cmps
cmp
cmps
inc
sbb
add
cmps
jbe
fld
push
cmps
jge
add
nop
sbb
sbb
xchg
cmps
aad
jns
mov
push
add
add
mov
cmps
mov
sbb
sbb
push
add
adc
cmp
mov
int3
add
lahf
call
aam
or
pop
test
add
int
cmp
and
sub
ds
add
add
adc
pop
add
and
adc
add
int
jns
xchg
test
add
mov
add
and
xchg
and
test
sbb
add
jno
retf
test
sbb
sbb
(bad)
test
sbb
add
and
cdq
add
adc
and
cdq
add
adc
cdq
add
add
mov
test
sbb
sbb
popa
test
pop
test
sbb
sbb
sbb
mov
xchg
and
rol
mov
call
mov
stos
test
mov
cmps
add
pop
les
test
dec
dec
sbb
pop
or
iret
test
xchg
and
add
pop
fsubr
sbb
sbb
pop
in
je
fld
xchg
and
and
lahf
push
adc
add
push
add
add
test
lea
fist
add
add
add
add
add
add
jecxz
push
adc
push
sub
mov
or
lea
aam
mov
mov
in
rcr
mov
out
pop
cmps
add
add
add
add
add
stos
or
stos
clc
add
add
stos
push
sbb
add
sbb
stos
xor
pop
mov
xchg
and
add
in
add
add
add
add
lahf
jnp
cld
add
mov
test
ja
cld
add
mov
dec
mov
lea
jecxz
enter
or
xchg
and
add
add
add
add
push
add
shl
stos
clc
add
add
lahf
call
adc
or
cmp
add
push
add
add
stos
icebp
sbb
add
add
lahf
or
outs
add
add
add
add
add
add
and
in
mov
add
popa
cmps
add
add
add
add
iret
or
push
sbb
cmps
add
cmp
add
lahf
push
adc
add
stos
push
and
and
xchg
and
sub
push
mov
out
stos
or
and
xchg
and
stos
mov
rol
add
mov
xor
lea
jecxz
push
adc
xchg
and
lahf
call
dec
add
mov
test
cmps
mov
pop
add
add
lahf
cmps
sbb
lahf
push
adc
lahf
call
ins
add
mov
jecxz
push
adc
sti
lahf
jnp
je
or
dec
mov
sub
xchg
and
and
and
xchg
add
add
add
push
add
test
push
mov
jecxz
push
adc
movs
add
mov
lods
add
add
cdq
and
lods
add
call
or
and
xchg
and
add
add
pop
and
ret
adc
int
cdq
add
pop
adc
sbb
les
push
mov
lea
test
movs
xor
adc
mov
cmp
stc
pop
and
inc
pop
jmp
pop
mov
test
and
add
dec
stos
int
jns
pop
stos
jg
popa
add
push
add
jae
int
jns
sub
stos
int
jns
scas
stos
xchg
pop
jns
mov
pop
iret
stos
aad
jns
call
add
jns
pop
lods
jo
jns
adc
pop
and
lods
aad
mov
aas
lods
aad
inc
add
jns
lods
loope
mov
ret
pop
and
xchg
and
and
and
add
add
add
add
pop
xchg
lods
and
pop
add
jns
mov
xor
rol
dec
push
add
shr
pop
adc
pop
and
push
pop
cmps
outs
and
push
fsubr
lods
int
test
add
add
dec
push
adc
add
add
add
add
push
add
xchg
and
add
add
lahf
call
hlt
add
mov
add
xchg
and
and
pop
xchg
and
add
pop
and
adc
xchg
and
and
add
add
mov
and
loope
sbb
sub
sti
lahf
sub
stc
add
lods
push
add
add
lods
int
loope
dec
lods
cmps
add
add
int
mov
and
and
add
lods
push
add
add
jns
jmp
add
add
add
movs
cdq
and
add
test
pop
cmps
mov
xchg
and
mov
and
and
add
and
and
and
add
add
mov
(bad)
lods
or
jmp
and
inc
mov
xor
cmp
leave
push
shl
and
leave
push
shr
fild
out
lods
jne
mov
cld
lods
dec
add
add
pop
xchg
and
pop
xchg
add
inc
adc
adc
add
scas
fsub
jmp
adc
add
cmps
add
add
scas
loope
mov
sbb
and
out
and
ss
push
add
and
add
add
rol
dec
scas
push
and
add
add
mov
and
xchg
and
mov
pop
scas
push
add
jecxz
push
adc
test
jecxz
push
adc
adc
ja
jge
add
xchg
and
lahf
cmps
sbb
mov
push
shl
outs
scas
les
rol
mov
shr
xchg
and
scas
push
add
xchg
cmps
mov
or
jecxz
cmps
sbb
add
add
inc
and
push
mov
(bad)
scas
popf
pop
sbb
xchg
scas
lahf
add
add
add
add
scas
mov
scas
mov
scas
int
sub
push
scas
je
loope
sbb
or
lahf
add
and
push
sub
xor
add
mov
inc
scas
std
and
add
scas
add
push
add
add
scas
push
and
sbb
mov
and
fld
fwait
movs
xchg
adc
add
movs
pusha
and
dec
add
and
int
adc
xchg
push
or
push
mov
scas
scas
mov
sbb
sti
lahf
ret
add
mov
lea
mov
cdq
and
sub
xchg
and
and
add
xchg
and
and
push
add
mov
add
add
add
add
add
lahf
ret
add
mov
sub
ret
scas
cmps
add
int
push
rol
rol
rol
add
lea
jg
fisub
rol
sub
jecxz
add
dec
add
cdq
and
dec
add
call
push
daa
leave
push
out
pop
adc
pop
out
scas
sbb
add
lea
xchg
push
push
add
add
jl
or
and
add
xchg
or
sub
mov
adc
push
add
add
add
add
add
add
add
mov
or
add
add
add
add
lock
add
add
add
cli
add
add
add
add
add
mov
push
add
add
nop
add
add
add
cwde
add
add
add
mov
xchg
or
mov
add
jl
or
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
mov
add
test
inc
or
lods
add
or
mov
or
or
mov
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
add
add
push
add
add
add
add
add
sbb
add
adc
add
add
add
add
add
add
add
mov
or
sub
add
add
add
add
add
mov
or
cmp
add
add
add
jl
or
inc
add
add
add
add
add
mov
or
test
add
add
add
nop
add
add
add
cwde
add
add
add
mov
add
add
or
add
add
or
add
or
or
inc
or
adc
adc
adc
or
sbb
sbb
push
or
add
add
and
sub
add
add
xor
xchg
or
cmp
cmp
inc
or
inc
add
inc
add
dec
add
dec
add
push
add
push
add
pop
add
pop
add
pusha
add
push
add
add
add
xchg
or
je
add
jl
or
jl
jl
or
add
add
mov
mov
nop
add
xchg
add
cwde
add
pushf
add
pop
push
mov
or
pop
push
xchg
or
fs
mov
or
push
add
add
add
inc
or
je
add
push
adc
add
ror
scas
add
add
or
or
or
icebp
or
cmc
or
adc
mov
add
adc
add
add
push
scas
add
add
scas
add
add
add
xor
add
xor
add
xor
add
adc
add
xor
add
cmp
add
add
xor
add
add
add
add
add
add
add
add
ret
push
xor
pop
pavgb
or
mov
add
or
mov
and
or
mov
inc
or
add
add
add
add
add
mov
or
mov
arpl
or
or
ret
or
jecxz
or
mov
add
or
mov
and
or
mov
and
or
mov
inc
push
or
mov
inc
push
or
mov
popa
push
or
mov
arpl
or
mov
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
or
dec
pop
mov
or
addr16
mov
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
mov
adc
adc
ins
adc
xchg
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
stc
adc
sub
adc
push
movs
push
scas
push
mov
push
in
push
call
or
adc
sub
inc
pop
pop
pop
jbe
jnp
nop
pop
test
pop
repnz
and
sub
sbb
arpl
scas
sbb
or
sbb
pop
sbb
into
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
inc
sbb
arpl
ret
push
es
inc
push
jb
cdq
push
lahf
push
mov
push
call
pop
bound
jae
mov
cmps
pop
mov
mov
ret
pop
aam
ficomp
cmc
pop
pop
and
and
xchg
xchg
and
and
and
and
and
and
imul
xchg
and
and
and
and
and
push
and
data16
jne
xchg
pushf
and
and
and
and
and
push
and
test
mov
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
inc
and
jns
jg
popf
and
add
inc
es
es
jnp
test
mov
es
es
es
add
add
mov
add
add
add
sub
push
add
pop
add
add
add
add
add
push
add
adc
imul
and
xor
inc
lahf
inc
sldt
lods
add
pop
lahf
dec
sldt
push
add
push
sldt
push
add
pop
inc
sldt
js
js
add
sbb
lahf
or
add
adc
sbb
xchg
sldt
pushf
sbb
sbb
lahf
movs
sldt
js
js
add
test
add
loop
test
add
mov
add
lahf
les
add
retf
lahf
les
add
ficomp
dec
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
add
add
adc
add
add
add
sbb
add
pop
add
add
add
add
add
add
add
add
add
add
cmps
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
cmps
add
add
jbe
add
add
add
add
add
add
add
add
dec
adc
test
jle
test
mov
adc
adc
adc
jmp
sbb
sbb
sbb
sbb
jp
xor
sbb
sbb
sbb
sbb
sbb
sbb
mov
sbb
push
push
sbb
pop
push
cmp
push
push
pop
push
addr16
sbb
push
test
push
icebp
push
and
sub
push
and
and
and
and
and
loope
xor
cmp
push
add
popf
pushf
add
add
dec
add
add
mov
add
add
push
add
pushf
add
inc
add
(bad)
pushf
add
add
push
add
pushf
add
add
pop
add
pushf
add
add
pop
add
pushf
add
add
pop
add
pushf
add
add
pop
add
pushf
add
add
popa
add
pushf
add
push
add
icebp
pushf
push
add
add
add
popf
add
add
jecxz
xor
in
aas
popf
add
inc
add
add
popf
add
add
jmp
add
add
add
popf
add
add
in
add
popf
add
add
out
add
popf
add
add
icebp
add
popf
add
add
repz
pushf
add
add
adc
add
adc
add
add
add
add
sbb
add
sbb
add
sbb
add
add
add
add
and
inc
add
add
add
and
add
add
cmp
push
add
add
inc
add
pop
sahf
add
inc
add
addr16
add
push
add
jns
add
inc
add
add
add
push
mov
or
xchg
sahf
add
push
cmps
sahf
add
push
mov
add
push
iret
sahf
pop
add
adc
out
add
inc
add
push
sti
sahf
add
inc
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
or
sbb
add
add
add
and
sbb
and
sbb
and
add
add
add
add
add
add
add
add
add
add
inc
add
push
add
push
add
push
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
adc
ins
add
ins
add
outs
add
outs
add
jo
push
add
push
add
pop
add
pop
add
push
jbe
push
ja
push
add
add
xchg
add
lahf
add
add
cwde
add
lahf
add
add
cwde
add
lahf
add
add
call
add
add
add
add
add
add
pushf
add
lahf
add
add
pushf
add
lahf
add
add
pushf
add
lahf
add
add
fiadd
fistp
addr16
lahf
add
add
imul
add
aad
fistp
fld
fistp
fild
fistp
fld
fistp
fild
fistp
loope
fistp
loope
fistp
jecxz
fistp
in
fistp
out
fistp
jmp
add
add
add
lahf
add
add
in
add
lahf
add
add
out
add
lahf
add
add
icebp
add
lahf
add
add
repz
lahf
add
add
cmc
add
lahf
add
add
test
add
stc
add
lahf
add
add
cmp
lahf
add
add
pop
add
lahf
add
add
jae
fistp
ja
fistp
jns
fistp
jnp
fistp
rol
add
add
ret
add
lahf
add
sbb
rol
lahf
fadd
hlt
sbb
cli
sbb
add
sbb
jno
fadd
cli
sbb
cli
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
pop
jbe
xchg
fadd
stos
pop
repnz
pop
js
cli
sbb
cli
sbb
add
and
add
ret
sbb
add
daa
and
and
add
add
add
add
add
add
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
cs
ins
add
arpl
ins
imul
gs
cs
bound
push
jns
je
ins
add
jae
gs
cs
popa
je
add
jae
gs
cs
popa
outs
popa
gs
outs
je
push
jns
je
ins
cs
outs
outs
imul
je
outs
outs
add
jb
gs
xor
cs
ins
add
fs
ins
cs
ins
add
popa
jo
cs
ins
add
jbe
jo
xor
cs
ins
add
jbe
jo
xor
cs
ins
add
gs
xor
fs
ins
add
gs
outs
jbe
fs
ins
add
xor
xor
xor
xor
add
je
outs
outs
pusha
xor
inc
arpl
popa
je
jb
inc
jo
inc
outs
ins
popa
imul
ins
outs
je
js
gs
imul
jne
outs
je
jne
ins
inc
js
gs
imul
jne
outs
je
jne
dec
push
popa
outs
addr16
js
gs
imul
popa
jns
inc
jae
outs
arpl
ins
ins
bound
imul
je
jb
bound
add
je
imul
jb
gs
add
je
imul
popa
addr16
je
jb
bound
add
fs
ins
popa
addr16
outs
jb
popa
je
js
gs
imul
inc
outs
outs
jbe
jb
gs
inc
outs
outs
ins
gs
outs
add
data16
inc
jns
add
popa
jb
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
jb
popa
jns
imul
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
imul
jb
inc
outs
je
jns
inc
imul
jb
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
dec
gs
outs
ins
ins
arpl
outs
add
jne
gs
je
jb
inc
jno
popa
ins
imul
jb
jb
xor
dec
inc
outs
ins
ins
arpl
outs
pusha
xor
dec
inc
imul
jb
pusha
xor
dec
inc
outs
jne
gs
bound
xor
dec
inc
outs
jne
gs
je
jb
xor
dec
inc
jno
popa
ins
imul
jb
jb
xor
dec
dec
imul
imul
inc
outs
ins
ins
arpl
outs
add
imul
jb
add
imul
jb
inc
outs
jne
gs
je
jb
dec
inc
outs
jne
gs
je
jb
dec
dec
imul
ins
arpl
outs
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
bound
arpl
fs
add
jns
fs
outs
ins
ins
arpl
outs
pusha
xor
push
gs
fs
outs
ins
jns
outs
ins
ins
arpl
outs
pusha
xor
push
gs
fs
outs
ins
jns
outs
ins
ins
arpl
outs
inc
popa
jae
add
ins
gs
popa
ins
jne
inc
outs
ins
ins
arpl
outs
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
push
jo
arpl
ins
imul
ins
jo
outs
outs
je
outs
outs
jbe
jb
gs
push
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
arpl
jo
imul
imul
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
jns
gs
gs
jb
jo
outs
jb
outs
outs
je
js
add
gs
outs
outs
jbe
jb
gs
push
jns
gs
gs
jb
jo
outs
jb
inc
outs
outs
imul
je
outs
outs
dec
popa
outs
popa
addr16
inc
outs
outs
imul
je
outs
outs
push
gs
imul
outs
jbe
jb
add
ins
push
je
imul
je
ins
cs
popa
je
cs
jno
push
jns
gs
inc
popa
je
push
imul
imul
ins
gs
je
add
jne
addr16
push
jns
je
ins
cs
imul
imul
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
ins
gs
gs
imul
add
outs
arpl
jae
push
jb
arpl
jae
outs
fs
add
outs
arpl
jae
je
jb
dec
outs
outs
add
outs
arpl
jae
push
add
outs
arpl
jae
push
inc
outs
ins
ins
arpl
outs
add
bound
inc
outs
jne
add
jbe
jb
outs
ins
outs
je
push
jo
arpl
ins
inc
outs
ins
fs
inc
jbe
outs
je
jb
jae
inc
jbe
outs
je
popa
outs
fs
gs
inc
js
gs
imul
je
jb
dec
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
ins
bound
push
je
ins
gs
inc
jne
add
jae
outs
arpl
jae
ins
je
dec
inc
outs
ins
jo
jb
bound
xor
dec
inc
outs
outs
jbe
jb
imul
imul
ins
add
outs
jb
popa
je
jb
jbe
fs
dec
outs
je
add
je
xor
dec
outs
je
xor
dec
outs
je
je
add
jbe
ins
imul
imul
jo
imul
popa
jb
push
gs
fs
push
jns
je
ins
cs
dec
add
outs
popa
jb
push
jb
je
jb
inc
outs
ins
jo
gs
imul
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
ins
popa
je
push
je
gs
ins
add
arpl
jns
inc
imul
jns
outs
outs
add
ins
add
ins
gs
arpl
jae
add
ins
gs
outs
outs
add
ins
gs
outs
fs
ins
gs
push
inc
imul
ins
add
ins
gs
jns
je
ins
inc
jbe
outs
je
jb
jae
inc
imul
ins
inc
jbe
outs
je
popa
outs
fs
gs
inc
imul
ins
dec
outs
outs
add
ins
gs
jns
je
ins
push
popa
je
push
dec
inc
js
gs
imul
outs
jb
push
je
gs
ins
add
je
data16
imul
popa
je
add
outs
popa
ins
gs
jbe
outs
je
jb
jae
push
outs
popa
ins
gs
jbe
outs
je
popa
outs
fs
gs
push
gs
imul
popa
ins
add
jb
popa
ins
push
gs
fs
push
je
gs
ins
push
jb
je
jb
push
je
imul
gs
push
je
imul
gs
push
gs
push
gs
fs
push
gs
push
jb
je
jb
dec
popa
outs
popa
gs
outs
je
popa
jae
dec
bound
arpl
popa
outs
popa
gs
outs
je
bound
arpl
popa
outs
popa
gs
outs
je
bound
arpl
ins
ins
arpl
outs
add
outs
popa
gs
outs
je
bound
arpl
jne
gs
je
jb
dec
popa
outs
popa
gs
outs
je
bound
arpl
popa
jb
push
bound
arpl
gs
add
jb
push
push
gs
bound
arpl
popa
je
add
fs
gs
popa
outs
fs
add
ins
je
arpl
je
gs
gs
je
add
je
push
gs
gs
inc
popa
arpl
dec
gs
ins
add
jae
gs
cs
gs
inc
popa
arpl
add
je
push
gs
gs
inc
popa
arpl
push
outs
ins
imul
jne
jae
inc
popa
arpl
push
outs
ins
imul
jo
je
je
jae
outs
fs
jae
gs
cs
gs
dec
je
jo
bound
jno
gs
add
je
push
bound
jae
outs
outs
jae
add
inc
outs
fs
outs
imul
ins
outs
bound
push
jb
jo
jb
imul
je
ins
cs
gs
dec
gs
outs
jb
dec
outs
outs
jb
popa
je
outs
outs
add
inc
outs
outs
outs
arpl
outs
dec
outs
outs
jb
popa
je
outs
outs
add
bound
arpl
je
outs
outs
add
bound
popa
fs
outs
ins
ins
arpl
outs
add
bound
jno
gs
add
bound
jae
outs
outs
jae
add
je
ins
jo
gs
outs
je
fs
js
gs
imul
push
jne
jo
jb
gs
js
gs
imul
ins
popa
bound
xor
dec
bound
arpl
bound
arpl
jae
outs
jae
fs
js
gs
imul
jb
je
outs
addr16
jns
je
ins
add
jb
ins
inc
jb
popa
jns
je
jb
bound
add
popa
je
outs
jb
dec
inc
add
gs
add
outs
outs
ins
add
jae
ins
bound
push
jns
je
ins
cs
gs
arpl
outs
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jne
je
jb
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
popa
ins
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
gs
imul
imul
imul
imul
ins
popa
addr16
inc
outs
outs
jae
jb
arpl
dec
outs
outs
add
popa
ins
imul
outs
add
jae
gs
cs
gs
arpl
outs
cs
ins
imul
imul
add
inc
outs
fs
inc
outs
fs
dec
jo
jb
outs
fs
jns
add
outs
popa
je
jb
dec
gs
jo
jb
inc
jbe
outs
je
outs
outs
add
arpl
je
outs
outs
dec
popa
outs
fs
imul
jae
dec
jo
imul
gs
fs
outs
outs
add
jne
je
ins
inc
je
jb
bound
gs
jb
jbe
fs
dec
outs
arpl
push
popa
jb
popa
bound
outs
outs
add
ins
bound
inc
imul
ins
bound
dec
outs
outs
add
ins
bound
push
jns
gs
dec
gs
outs
fs
popa
jae
add
je
outs
fs
outs
fs
dec
gs
outs
fs
outs
outs
add
fs
add
jb
ins
gs
jb
outs
outs
add
jb
ins
gs
jb
outs
imul
jb
jo
jb
jns
outs
outs
add
addr16
popa
jb
ins
gs
jb
outs
jne
je
js
gs
imul
outs
ins
jbe
inc
jbe
outs
je
jb
jae
push
gs
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
push
gs
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jo
jb
jae
dec
ins
fs
jae
inc
je
jb
bound
add
ins
push
imul
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
dec
ins
jo
jb
inc
je
jb
bound
add
dec
inc
push
dec
dec
inc
add
outs
jne
dec
imul
jae
popa
ins
add
jb
push
inc
je
jb
bound
add
je
je
jb
bound
add
jb
arpl
jns
jne
inc
je
jb
bound
add
ins
popa
outs
popa
addr16
jns
add
outs
je
ins
gs
imul
fs
add
outs
je
ins
gs
gs
outs
fs
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
jns
add
inc
jb
jo
outs
push
gs
imul
imul
je
ins
cs
arpl
imul
je
addr16
jo
jns
dec
popa
jae
inc
ins
outs
jb
je
ins
add
jb
jo
outs
push
jb
outs
jae
outs
jb
add
inc
xor
popa
gs
ins
ins
gs
imul
imul
je
jb
je
arpl
outs
inc
js
gs
imul
je
ins
cs
arpl
imul
je
je
push
gs
outs
arpl
push
jns
je
ins
cs
arpl
imul
arpl
popa
ins
add
inc
arpl
jne
je
push
arpl
imul
imul
outs
imul
arpl
jae
dec
gs
ins
jae
push
outs
imul
ins
jo
jb
outs
outs
popa
je
outs
outs
dec
gs
ins
add
outs
outs
ja
dec
fs
je
je
add
outs
ins
add
jb
outs
add
jb
outs
addr16
outs
ins
jo
jb
jae
outs
add
jb
outs
addr16
jo
imul
jae
push
jns
je
ins
inc
js
gs
imul
outs
imul
je
ins
cs
gs
add
jo
jne
add
jae
gs
cs
gs
cs
gs
popa
jb
js
jb
jae
imul
outs
jne
add
outs
jne
inc
outs
ins
ins
arpl
outs
add
je
push
arpl
jbe
ins
jne
je
jb
push
gs
push
gs
jo
imul
jb
outs
addr16
jne
ins
fs
dec
outs
je
jb
outs
arpl
add
jae
gs
cs
push
imul
imul
gs
add
gs
fs
bound
je
js
gs
imul
gs
fs
outs
je
jb
jne
je
fs
js
gs
imul
gs
fs
je
jb
add
gs
push
imul
ins
bound
imul
imul
add
add
gs
outs
fs
outs
je
add
outs
je
xor
push
dec
outs
je
xor
push
dec
outs
je
je
add
imul
gs
jns
add
jb
imul
add
je
inc
outs
outs
je
js
add
je
push
gs
outs
outs
jae
add
je
push
outs
push
gs
js
gs
imul
je
dec
popa
outs
fs
gs
inc
ins
imul
imul
addr16
push
jns
je
ins
cs
bound
push
dec
add
outs
je
outs
ins
add
add
dec
outs
fs
gs
fs
xor
arpl
bound
popa
cmp
xor
bound
xor
xor
ss
data16
add
xor
xor
xor
xor
cs
add
jae
ins
bound
outs
outs
inc
je
jb
bound
add
bound
fs
arpl
fs
xor
cmp
data16
cmp
data16
arpl
aaa
arpl
gs
aaa
data16
xor
xor
ss
xor
add
xor
popa
cmp
xor
xor
xor
xor
xor
xor
arpl
xor
popa
popa
xor
aaa
aaa
xor
data16
aaa
aaa
arpl
fs
xor
xor
arpl
cmp
xor
arpl
aaa
aaa
xor
popa
xor
xor
xor
bound
popa
popa
add
cmp
data16
bound
xor
data16
arpl
xor
cmp
xor
arpl
add
cmp
data16
xor
popa
bound
xor
popa
aaa
xor
xor
xor
cmp
arpl
arpl
xor
xor
xor
xor
xor
ss
xor
cmp
xor
xor
xor
cmp
popa
ss
bound
xor
xor
arpl
xor
arpl
xor
xor
xor
bound
gs
xor
popa
aaa
xor
cmp
cmp
arpl
data16
bound
xor
xor
arpl
xor
xor
xor
cmp
data16
xor
xor
xor
bound
xor
ss
popa
xor
xor
cmp
xor
cmp
add
xor
xor
xor
xor
xor
aaa
xor
gs
ss
xor
cmp
arpl
xor
gs
xor
cmp
xor
cmp
xor
xor
cmp
xor
arpl
xor
aaa
xor
cmp
xor
xor
xor
bound
popa
xor
xor
arpl
bound
data16
xor
popa
xor
xor
xor
xor
xor
arpl
bound
add
xor
popa
data16
cmp
bound
aaa
xor
arpl
cmp
xor
data16
arpl
xor
popa
cmp
xor
xor
cmp
arpl
cmp
xor
xor
add
xor
cmp
xor
fs
xor
cmp
xor
popa
xor
arpl
cmp
xor
data16
xor
xor
cmp
aaa
xor
add
xor
bound
xor
xor
gs
popa
cmp
xor
xor
arpl
arpl
xor
xor
xor
ss
xor
xor
xor
xor
arpl
cmp
xor
xor
cmp
bound
arpl
popa
arpl
xor
xor
arpl
add
popa
arpl
cmp
aaa
gs
bound
data16
xor
xor
data16
add
cmp
xor
arpl
xor
arpl
aaa
xor
cmp
xor
add
xor
bound
xor
popa
bound
bound
data16
xor
cmp
cmp
arpl
gs
bound
cmp
xor
xor
cmp
bound
data16
arpl
aaa
cmp
xor
bound
xor
aaa
xor
cmp
arpl
data16
xor
arpl
arpl
cmp
cmp
gs
arpl
xor
bound
xor
aaa
xor
xor
ss
cmp
xor
xor
xor
data16
ss
arpl
aaa
xor
cmp
arpl
cmp
bound
xor
cmp
bound
xor
xor
xor
aaa
bound
data16
arpl
bound
bound
bound
xor
cmp
fs
xor
add
fs
bound
inc
gs
je
jo
inc
outs
ins
ins
outs
outs
add
xor
xor
cmp
cmp
aaa
xor
xor
popa
xor
arpl
xor
xor
xor
arpl
arpl
ss
fs
xor
aaa
xor
bound
popa
aaa
popa
cmp
xor
bound
xor
add
cmp
popa
xor
bound
fs
arpl
xor
xor
data16
xor
aaa
xor
add
xor
xor
xor
popa
bound
xor
xor
xor
xor
xor
data16
data16
xor
popa
xor
dec
fs
je
imul
gs
outs
outs
jae
data16
dec
jae
outs
add
bound
cmp
ss
cmp
xor
cmp
cmp
xor
arpl
popa
cmp
dec
inc
jb
popa
jns
dec
popa
jbe
push
arpl
jo
inc
outs
outs
jae
jb
arpl
add
jbe
push
arpl
jo
push
popa
jb
ins
gs
jb
add
bound
arpl
jae
outs
inc
outs
outs
jbe
jb
add
outs
outs
inc
outs
outs
jbe
jb
gs
arpl
xor
bound
bound
cmp
fs
xor
xor
data16
jae
outs
inc
outs
outs
jbe
jb
gs
outs
ins
ins
arpl
outs
add
cmp
bound
arpl
xor
popa
xor
xor
xor
data16
add
outs
outs
dec
popa
outs
fs
gs
dec
jae
outs
dec
outs
outs
jb
inc
je
jb
bound
add
outs
outs
push
jb
jo
jb
jns
je
jb
bound
add
outs
outs
push
gs
fs
arpl
gs
xor
xor
xor
bound
aaa
bound
cmp
cmp
xor
xor
add
outs
outs
push
gs
fs
js
gs
imul
outs
push
gs
popa
ins
imul
inc
js
gs
imul
gs
outs
arpl
outs
outs
jo
popa
outs
fs
imul
outs
push
gs
popa
ins
imul
outs
outs
push
outs
imul
arpl
aaa
xor
arpl
xor
cmp
xor
aaa
xor
bound
arpl
add
imul
add
jb
popa
je
imul
outs
push
jb
je
jb
arpl
bound
cmp
cmp
xor
xor
xor
xor
xor
xor
bound
add
outs
outs
push
jb
je
jb
js
gs
imul
cmp
xor
popa
xor
xor
arpl
xor
cmp
cmp
gs
add
arpl
xor
cmp
arpl
aaa
arpl
xor
ss
xor
bound
cmp
xor
xor
arpl
xor
xor
cmp
xor
arpl
popa
xor
xor
cmp
data16
bound
arpl
popa
xor
xor
cmp
xor
arpl
ss
xor
xor
gs
cmp
xor
xor
xor
aaa
bound
cmp
popa
cmp
xor
xor
xor
arpl
arpl
bound
xor
xor
xor
data16
xor
xor
data16
data16
arpl
xor
xor
bound
xor
bound
xor
cmp
xor
cmp
add
cmp
xor
fs
xor
bound
xor
aaa
xor
popa
bound
gs
xor
arpl
xor
xor
cmp
arpl
xor
xor
aaa
data16
bound
aaa
fs
xor
bound
add
arpl
xor
xor
arpl
arpl
xor
xor
data16
data16
popa
pusha
xor
arpl
popaw
gs
bound
xor
aaa
xor
xor
popaw
bound
cmp
cmp
add
cmp
bound
aaa
xor
xor
xor
xor
aaa
ss
cmp
arpl
xor
popa
xor
gs
aaa
fs
popa
xor
aaa
cmp
arpl
xor
xor
xor
xor
xor
xor
cmp
data16
xor
xor
arpl
popa
xor
data16
xor
xor
ss
bound
xor
cmp
xor
arpl
cmp
fs
xor
xor
bound
aaa
cmp
xor
xor
cmp
xor
xor
arpl
ss
xor
cmp
aaa
xor
xor
arpl
xor
aaa
arpl
add
cmp
arpl
xor
xor
cmp
xor
gs
bound
aaa
xor
arpl
aaa
add
fs
cmp
bound
bound
xor
xor
xor
xor
aaa
cmp
cmp
cmp
xor
arpl
bound
xor
popa
aaa
xor
data16
cmp
popa
xor
xor
arpl
xor
xor
xor
xor
popa
arpl
arpl
cmp
xor
aaa
xor
xor
xor
arpl
xor
data16
xor
cmp
xor
cmp
arpl
popa
add
xor
xor
cmp
cmp
xor
cmp
xor
popa
popa
xor
xor
add
data16
xor
aaa
cmp
xor
xor
ss
popa
xor
cmp
aaa
aaa
arpl
add
xor
xor
popa
xor
xor
arpl
xor
xor
popa
xor
xor
xor
xor
xor
arpl
popa
cmp
xor
cmp
cmp
popa
bound
aaa
fs
cmp
xor
add
xor
arpl
fs
xor
cmp
aaa
data16
xor
xor
xor
bound
xor
arpl
add
xor
arpl
arpl
xor
cmp
popa
xor
bound
xor
xor
cmp
add
gs
gs
xor
popa
aaa
aaa
xor
gs
cmp
popa
xor
xor
xor
add
xor
xor
gs
popa
popa
xor
popa
xor
arpl
xor
aaa
popa
bound
popa
popa
arpl
add
xor
xor
bound
xor
xor
xor
cmp
cmp
xor
add
popa
xor
aaa
data16
cmp
xor
arpl
xor
xor
bound
xor
xor
xor
xor
cmp
xor
bound
aaa
cmp
ss
add
xor
bound
fs
xor
xor
xor
xor
popa
cmp
xor
xor
cmp
data16
bound
gs
xor
xor
xor
cmp
fs
xor
xor
xor
xor
ss
xor
xor
ss
aaa
cmp
xor
ss
arpl
xor
arpl
cmp
data16
ins
jne
imul
je
jo
inc
jb
ja
gs
fs
jo
gs
arpl
cmp
cmp
aaa
xor
xor
xor
cmp
cmp
xor
ss
arpl
popa
xor
popa
xor
xor
cmp
popa
add
arpl
xor
xor
fs
xor
xor
xor
aaa
xor
xor
arpl
xor
xor
aaa
xor
arpl
cmp
aaa
cmp
xor
arpl
xor
xor
xor
cmp
xor
bound
bound
arpl
popa
xor
arpl
cmp
xor
xor
xor
xor
xor
bound
xor
arpl
data16
bound
gs
cmp
bound
xor
cmp
xor
cmp
xor
xor
cmp
arpl
xor
xor
aaa
aaa
arpl
xor
gs
cmp
aaa
xor
xor
aaa
add
xor
gs
bound
aaa
cmp
xor
cmp
arpl
popaw
arpl
xor
cmp
xor
xor
arpl
xor
xor
xor
aaa
xor
popa
gs
xor
xor
xor
xor
xor
arpl
cmp
cmp
xor
xor
ss
xor
bound
xor
cmp
fs
xor
xor
aaa
xor
ss
data16
ss
xor
cmp
xor
arpl
ss
cmp
data16
gs
data16
xor
xor
cmp
xor
xor
arpl
xor
cmp
xor
xor
bound
aaa
xor
gs
xor
gs
arpl
add
data16
cmp
xor
xor
fs
xor
ss
xor
cmp
arpl
outs
jb
arpl
data16
popa
arpl
aaa
bound
cmp
cmp
xor
aaa
xor
cmp
xor
arpl
xor
xor
arpl
xor
xor
cmp
xor
cmp
xor
arpl
add
xor
xor
cmp
cmp
data16
xor
xor
xor
gs
add
aaa
xor
fs
cmp
bound
xor
xor
aaa
popa
fs
xor
popa
xor
bound
arpl
cmp
xor
xor
xor
xor
cmp
fs
xor
popa
xor
arpl
add
cmp
xor
xor
xor
data16
cmp
xor
data16
xor
add
cmp
xor
xor
data16
data16
bound
cmp
data16
cmp
data16
cmp
xor
xor
xor
xor
bound
cmp
xor
xor
cmp
xor
add
je
imul
aaa
popa
cmp
gs
xor
xor
xor
fs
xor
cmp
aaa
add
xor
xor
data16
xor
data16
bound
xor
gs
popa
xor
je
add
ins
jne
pop
pop
add
data16
popa
xor
popa
popa
xor
xor
gs
arpl
data16
aaa
xor
popa
xor
add
cmp
xor
fs
xor
xor
xor
xor
aaa
gs
xor
cmp
bound
data16
aaa
popa
gs
cmp
xor
cmp
xor
xor
xor
add
arpl
xor
ss
bound
xor
fs
xor
popa
ss
xor
fs
arpl
popa
aaa
popa
aaa
xor
ss
data16
xor
xor
bound
arpl
arpl
xor
arpl
bound
aaa
xor
xor
cmp
popa
bound
xor
xor
aaa
xor
cmp
arpl
xor
xor
arpl
popa
aaa
xor
data16
xor
xor
xor
add
xor
xor
cmp
cmp
cmp
xor
xor
xor
xor
xor
data16
xor
xor
bound
ss
arpl
xor
gs
data16
cmp
xor
xor
xor
xor
bound
aaa
xor
aaa
xor
xor
cmp
data16
xor
add
cmp
popa
bound
cmp
gs
cmp
xor
popaw
popa
ss
xor
aaa
popaw
xor
arpl
xor
aaa
bound
xor
xor
xor
xor
cmp
cmp
popa
cmp
arpl
xor
xor
bound
xor
xor
popa
cmp
ss
xor
xor
add
aaa
bound
xor
xor
xor
cmp
aaa
aaa
xor
xor
ss
xor
add
ss
aaa
gs
data16
bound
cmp
xor
bound
xor
xor
add
xor
xor
fs
xor
cmp
arpl
xor
arpl
cmp
xor
add
xor
arpl
arpl
arpl
cmp
cmp
xor
arpl
aaa
bound
xor
xor
arpl
cmp
xor
cmp
cmp
xor
xor
data16
xor
xor
add
bound
arpl
data16
xor
bound
xor
xor
cmp
gs
data16
popa
aaa
bound
cmp
aaa
cmp
xor
aaa
popa
cmp
xor
xor
aaa
xor
add
popa
xor
bound
popa
xor
arpl
xor
arpl
arpl
xor
gs
bound
arpl
gs
cmp
xor
xor
popa
bound
bound
ss
xor
popa
add
bound
fs
popa
xor
xor
gs
aaa
xor
xor
popa
ss
data16
aaa
popa
popa
xor
ss
fs
popa
arpl
bound
bound
xor
arpl
cmp
xor
xor
arpl
xor
xor
aaa
xor
popa
fs
fs
bound
xor
xor
aaa
add
xor
cmp
aaa
xor
arpl
xor
aaa
xor
xor
popa
xor
xor
add
popa
bound
popa
aaa
bound
xor
xor
data16
xor
xor
xor
xor
add
bound
xor
xor
gs
fs
aaa
arpl
popa
popa
xor
cmp
xor
xor
xor
arpl
xor
cmp
xor
xor
cmp
arpl
cmp
popa
xor
bound
xor
add
bound
bound
cmp
xor
fs
arpl
aaa
xor
arpl
xor
aaa
arpl
xor
add
popa
gs
popa
xor
arpl
xor
aaa
arpl
ss
xor
cmp
xor
arpl
cmp
xor
xor
xor
bound
cmp
xor
xor
cmp
arpl
data16
data16
aaa
xor
fs
fs
arpl
xor
add
ss
arpl
arpl
gs
xor
fs
xor
bound
gs
arpl
fs
xor
ss
cmp
cmp
popa
cmp
bound
aaa
xor
arpl
xor
bound
cmp
arpl
arpl
aaa
popa
gs
xor
cmp
gs
xor
xor
xor
arpl
bound
bound
xor
cmp
xor
xor
cmp
xor
xor
xor
xor
data16
cmp
cmp
xor
data16
popa
cmp
xor
xor
xor
popa
cmp
arpl
cmp
popa
bound
bound
xor
ss
bound
cmp
xor
data16
add
arpl
arpl
data16
xor
arpl
xor
xor
xor
arpl
xor
cmp
xor
xor
xor
xor
xor
bound
cmp
ss
cmp
cmp
xor
arpl
cmp
aaa
xor
xor
cmp
bound
cmp
bound
arpl
xor
bound
gs
xor
add
cmp
xor
xor
popa
xor
xor
bound
gs
popa
arpl
aaa
cmp
xor
xor
xor
xor
data16
xor
arpl
cmp
xor
gs
cmp
aaa
xor
ss
xor
bound
ss
xor
arpl
xor
aaa
add
ss
gs
popa
ss
xor
popa
ss
arpl
add
arpl
cmp
cmp
xor
xor
xor
arpl
bound
cmp
ss
xor
cmp
arpl
ss
data16
fs
ss
xor
xor
popa
add
popa
xor
xor
xor
xor
xor
popa
xor
data16
bound
fs
add
cmp
fs
xor
xor
gs
bound
bound
xor
xor
add
xor
arpl
xor
fs
aaa
bound
cmp
xor
popa
arpl
xor
bound
arpl
arpl
bound
bound
cmp
aaa
xor
bound
popa
bound
arpl
xor
bound
arpl
xor
xor
popa
popa
xor
xor
cmp
cmp
xor
aaa
xor
xor
arpl
xor
arpl
xor
arpl
data16
cmp
xor
xor
cmp
gs
popaw
add
ss
xor
bound
bound
xor
cmp
xor
xor
cmp
arpl
cmp
xor
gs
cmp
cmp
xor
xor
xor
xor
arpl
arpl
xor
xor
xor
xor
cmp
xor
aaa
xor
cmp
bound
popa
add
arpl
xor
bound
xor
bound
xor
bound
cmp
xor
xor
arpl
popa
xor
arpl
xor
xor
xor
cmp
cmp
xor
xor
cmp
cmp
add
arpl
xor
cmp
xor
cmp
cmp
data16
cmp
xor
add
xor
xor
gs
xor
xor
arpl
cmp
aaa
xor
arpl
add
xor
ss
ss
xor
xor
ss
bound
add
popa
cmp
popa
cmp
cmp
popa
aaa
cmp
data16
xor
xor
arpl
xor
aaa
xor
xor
arpl
arpl
aaa
cmp
cmp
cmp
xor
add
xor
cmp
ss
xor
xor
xor
xor
xor
aaa
gs
popa
aaa
add
xor
xor
xor
arpl
xor
xor
arpl
xor
popa
cmp
xor
data16
arpl
fs
cmp
xor
gs
xor
xor
xor
cmp
bound
arpl
xor
fs
cmp
cmp
popa
xor
aaa
xor
aaa
cmp
xor
add
gs
cmp
xor
arpl
xor
arpl
xor
add
xor
bound
fs
xor
xor
aaa
xor
aaa
xor
xor
xor
xor
add
xor
popaw
popa
xor
arpl
xor
xor
xor
xor
data16
arpl
popa
xor
arpl
popa
xor
cmp
xor
cmp
data16
xor
cmp
bound
xor
cmp
arpl
xor
bound
xor
bound
xor
bound
bound
xor
xor
xor
xor
add
xor
cmp
xor
cmp
aaa
data16
cmp
aaa
arpl
xor
add
xor
xor
arpl
popa
fs
arpl
bound
xor
ss
xor
bound
add
popa
xor
aaa
xor
cmp
aaa
xor
xor
bound
xor
popa
xor
data16
add
popa
xor
xor
arpl
xor
popa
xor
xor
popa
xor
xor
ss
fs
add
ss
bound
bound
gs
fs
data16
xor
data16
cmp
xor
add
fs
fs
xor
arpl
cmp
arpl
bound
xor
fs
xor
data16
popa
bound
xor
bound
xor
cmp
xor
cmp
ss
xor
popa
cmp
xor
xor
xor
popa
bound
fs
fs
cmp
arpl
xor
xor
bound
aaa
fs
xor
aaa
cmp
xor
aaa
bound
xor
arpl
xor
popa
bound
arpl
xor
cmp
arpl
xor
xor
xor
add
popa
arpl
xor
xor
cmp
popa
cmp
popa
popa
xor
xor
aaa
bound
data16
xor
popa
data16
xor
xor
bound
xor
xor
xor
popa
add
xor
bound
popa
xor
xor
xor
cmp
cmp
popa
xor
popa
xor
xor
arpl
gs
xor
xor
popa
ss
xor
xor
xor
xor
xor
xor
xor
xor
popa
xor
gs
popa
xor
xor
arpl
xor
xor
add
popa
cmp
data16
xor
xor
xor
data16
xor
cmp
bound
xor
arpl
xor
xor
arpl
aaa
xor
xor
data16
arpl
xor
popa
popa
xor
arpl
bound
xor
cmp
cmp
fs
xor
cmp
cmp
xor
add
cmp
xor
fs
arpl
xor
ss
aaa
xor
aaa
cmp
xor
bound
popa
gs
add
popa
xor
arpl
cmp
xor
bound
xor
xor
xor
arpl
popa
fs
cmp
arpl
xor
xor
cmp
bound
xor
cmp
cmp
cmp
fs
data16
add
arpl
popa
bound
xor
data16
bound
cmp
xor
xor
bound
xor
arpl
arpl
popaw
popa
fs
xor
arpl
bound
xor
bound
data16
data16
add
arpl
fs
arpl
xor
xor
xor
popa
xor
xor
popa
xor
data16
arpl
arpl
cmp
bound
xor
xor
xor
xor
arpl
xor
xor
cmp
cmp
xor
xor
ss
xor
xor
data16
xor
bound
cmp
xor
cmp
cmp
bound
popa
aaa
xor
arpl
bound
xor
ss
xor
popa
bound
arpl
xor
xor
xor
add
aaa
xor
xor
bound
xor
cmp
bound
xor
aaa
aaa
popa
popa
xor
cmp
bound
arpl
gs
xor
arpl
gs
xor
ss
xor
add
xor
xor
bound
xor
popa
ss
xor
xor
xor
xor
aaa
xor
arpl
cmp
popa
bound
cmp
xor
cmp
xor
gs
arpl
xor
arpl
cmp
arpl
arpl
arpl
bound
cmp
aaa
cmp
bound
arpl
xor
data16
xor
xor
fs
xor
bound
xor
xor
xor
popa
xor
xor
aaa
data16
bound
xor
xor
xor
aaa
cmp
xor
xor
xor
add
xor
popa
cmp
xor
fs
xor
xor
xor
xor
add
popa
aaa
cmp
xor
xor
xor
fs
xor
aaa
cmp
xor
xor
add
xor
xor
gs
cmp
xor
aaa
cmp
cmp
popa
xor
add
xor
bound
xor
data16
popa
xor
bound
xor
xor
xor
xor
cmp
popa
xor
xor
fs
popa
ss
xor
cmp
aaa
xor
arpl
xor
popa
bound
xor
bound
xor
xor
popa
xor
ss
bound
xor
aaa
cmp
arpl
xor
data16
xor
bound
ss
ss
ss
xor
cmp
data16
xor
popa
xor
xor
xor
xor
popa
arpl
xor
ss
xor
bound
xor
arpl
xor
ss
xor
arpl
gs
arpl
fs
fs
bound
cmp
add
xor
aaa
xor
bound
ss
xor
bound
xor
data16
bound
xor
popaw
add
aaa
aaa
cmp
ss
xor
arpl
cmp
bound
arpl
xor
popa
popa
xor
xor
add
arpl
bound
cmp
cmp
bound
xor
popa
xor
arpl
xor
popa
add
cmp
xor
xor
aaa
bound
cmp
arpl
xor
xor
xor
xor
add
bound
arpl
xor
xor
cmp
popa
ss
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
arpl
popa
aaa
gs
xor
add
ss
cmp
aaa
gs
xor
xor
xor
arpl
xor
arpl
aaa
xor
xor
xor
bound
bound
gs
xor
popa
cmp
xor
arpl
cmp
xor
arpl
popaw
arpl
xor
data16
popa
xor
gs
xor
arpl
aaa
xor
xor
cmp
data16
cmp
xor
cmp
xor
xor
cmp
xor
bound
xor
xor
bound
aaa
xor
popa
xor
aaa
xor
xor
xor
xor
xor
arpl
popa
cmp
popa
xor
xor
ss
xor
aaa
cmp
xor
fs
add
xor
gs
popa
xor
xor
xor
data16
aaa
xor
data16
xor
add
arpl
xor
popa
xor
bound
cmp
xor
arpl
gs
bound
xor
arpl
arpl
cmp
bound
xor
bound
xor
bound
cmp
xor
arpl
arpl
ss
xor
gs
xor
arpl
arpl
cmp
arpl
arpl
xor
xor
fs
bound
bound
fs
xor
cmp
xor
fs
popa
xor
xor
popa
xor
xor
data16
aaa
data16
xor
xor
cmp
arpl
arpl
gs
xor
xor
bound
cmp
xor
xor
ss
arpl
xor
add
xor
popa
xor
ss
xor
xor
xor
ss
xor
xor
add
xor
bound
gs
bound
bound
xor
arpl
xor
xor
fs
add
aaa
xor
xor
popa
xor
xor
xor
xor
popa
xor
bound
data16
xor
cmp
xor
cmp
popa
xor
aaa
xor
xor
xor
xor
arpl
xor
xor
cmp
xor
xor
ss
xor
xor
cmp
popa
popa
arpl
popa
arpl
xor
data16
xor
xor
popa
xor
xor
xor
arpl
cmp
cmp
cmp
xor
bound
xor
bound
cmp
xor
xor
arpl
gs
cmp
cmp
data16
bound
xor
xor
bound
fs
xor
arpl
arpl
xor
arpl
cmp
popa
xor
cmp
xor
popaw
xor
xor
arpl
gs
bound
cmp
xor
cmp
data16
gs
xor
ss
add
fs
aaa
xor
arpl
xor
xor
xor
cmp
bound
cmp
arpl
cmp
bound
xor
cmp
cmp
arpl
cmp
xor
data16
arpl
xor
xor
popa
bound
ss
cmp
ss
xor
xor
cmp
xor
aaa
xor
cmp
cmp
xor
cmp
xor
xor
xor
arpl
add
je
arpl
data16
xor
xor
data16
cmp
xor
xor
cmp
xor
jae
je
arpl
data16
xor
xor
data16
cmp
xor
xor
cmp
xor
addr16
dec
outs
arpl
inc
jo
inc
popa
je
push
popa
je
add
je
dec
outs
arpl
inc
jo
inc
popa
je
push
popa
je
add
ins
jne
add
je
push
outs
popa
ins
imul
popa
je
push
popa
je
add
je
push
outs
popa
ins
imul
popa
je
push
popa
je
add
je
push
imul
outs
je
imul
add
je
push
imul
outs
je
imul
add
data16
arpl
xor
popa
cmp
bound
bound
xor
data16
xor
bound
data16
cmp
bound
xor
popa
xor
cmp
bound
add
xor
popa
ss
xor
fs
aaa
arpl
data16
gs
arpl
cmp
arpl
xor
aaa
xor
xor
xor
bound
aaa
xor
aaa
xor
xor
xor
ss
aaa
xor
xor
arpl
xor
xor
ss
arpl
xor
cmp
bound
xor
xor
bound
xor
popa
aaa
xor
xor
xor
popa
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
cmp
aaa
arpl
add
data16
popa
aaa
cmp
bound
cmp
xor
xor
xor
aaa
aaa
add
arpl
cmp
data16
bound
bound
bound
xor
xor
xor
arpl
xor
arpl
gs
xor
cmp
xor
cmp
xor
xor
data16
xor
cmp
aaa
xor
xor
arpl
xor
xor
xor
cmp
data16
add
xor
gs
popa
cmp
xor
popa
cmp
xor
xor
xor
xor
arpl
fs
xor
xor
data16
cmp
cmp
xor
xor
xor
add
xor
popa
xor
popa
xor
bound
cmp
xor
cmp
xor
cmp
xor
xor
add
popa
aaa
xor
xor
aaa
data16
xor
xor
popa
xor
xor
add
xor
xor
aaa
cmp
xor
xor
xor
cmp
arpl
xor
arpl
cmp
arpl
xor
xor
xor
xor
aaa
fs
popa
add
xor
xor
popa
cmp
fs
cmp
arpl
cmp
xor
arpl
xor
arpl
xor
xor
xor
cmp
xor
xor
xor
xor
cmp
bound
gs
arpl
data16
cmp
xor
bound
cmp
arpl
cmp
xor
cmp
bound
popa
xor
arpl
popa
xor
xor
arpl
xor
aaa
xor
arpl
gs
cmp
xor
aaa
add
aaa
bound
ss
xor
popa
xor
xor
xor
xor
data16
xor
fs
xor
xor
fs
xor
cmp
gs
cmp
xor
ss
cmp
add
popa
bound
xor
cmp
xor
arpl
bound
xor
data16
xor
cmp
fs
xor
add
cmp
cmp
arpl
bound
cmp
xor
bound
xor
popa
cmp
cmp
xor
add
cmp
xor
xor
popa
xor
cmp
xor
xor
xor
cmp
add
cmp
xor
bound
cmp
cmp
cmp
xor
xor
aaa
xor
xor
xor
arpl
add
aaa
arpl
arpl
xor
arpl
fs
xor
arpl
gs
xor
cmp
data16
arpl
xor
cmp
xor
cmp
data16
data16
xor
xor
xor
xor
cmp
cmp
arpl
bound
aaa
xor
arpl
aaa
xor
popa
cmp
arpl
xor
arpl
xor
xor
arpl
popa
arpl
cmp
xor
cmp
cmp
arpl
popa
xor
xor
aaa
cmp
xor
xor
xor
arpl
bound
xor
aaa
xor
xor
add
xor
xor
xor
xor
gs
aaa
xor
xor
xor
popa
add
bound
arpl
aaa
xor
xor
xor
xor
xor
data16
xor
arpl
popa
xor
xor
xor
aaa
xor
xor
fs
popa
gs
cmp
arpl
add
ss
xor
gs
xor
xor
bound
xor
xor
xor
xor
arpl
xor
bound
gs
bound
xor
cmp
xor
xor
xor
cmp
arpl
xor
cmp
xor
fs
data16
cmp
xor
xor
xor
aaa
add
xor
xor
arpl
bound
xor
xor
aaa
popa
xor
xor
xor
arpl
arpl
popa
popa
xor
xor
arpl
cmp
arpl
bound
xor
xor
cmp
arpl
arpl
add
xor
aaa
xor
cmp
popa
arpl
arpl
xor
xor
xor
bound
xor
gs
bound
xor
fs
cmp
xor
aaa
xor
aaa
data16
xor
xor
cmp
arpl
xor
xor
xor
gs
xor
xor
arpl
gs
xor
arpl
xor
xor
xor
xor
cmp
cmp
xor
popa
xor
xor
arpl
xor
aaa
cmp
cmp
xor
gs
fs
add
xor
xor
xor
gs
xor
xor
cmp
arpl
xor
arpl
cmp
bound
cmp
cmp
xor
xor
popa
xor
cmp
xor
ss
add
bound
xor
popa
data16
popa
data16
xor
aaa
arpl
bound
xor
popa
add
aaa
xor
aaa
xor
popa
cmp
bound
xor
xor
xor
popa
aaa
xor
xor
cmp
xor
popa
xor
xor
arpl
aaa
bound
xor
cmp
arpl
arpl
arpl
cmp
xor
arpl
xor
bound
xor
popa
aaa
arpl
xor
arpl
xor
cmp
data16
fs
xor
fs
popa
cmp
bound
xor
xor
add
cmp
aaa
xor
aaa
cmp
popa
popa
bound
xor
gs
arpl
popa
arpl
add
xor
bound
aaa
xor
xor
bound
xor
xor
xor
arpl
cmp
bound
aaa
xor
xor
arpl
popa
xor
xor
cmp
arpl
xor
arpl
bound
cmp
xor
ss
arpl
cmp
xor
bound
bound
xor
data16
xor
xor
fs
aaa
cmp
xor
xor
aaa
arpl
popa
xor
gs
add
xor
xor
arpl
xor
cmp
xor
data16
cmp
xor
arpl
add
fs
data16
cmp
xor
xor
xor
xor
cmp
xor
add
cmp
arpl
xor
fs
xor
fs
arpl
cmp
bound
xor
cmp
cmp
xor
arpl
xor
cmp
arpl
xor
bound
add
arpl
xor
xor
xor
xor
bound
cmp
xor
xor
add
xor
fs
bound
gs
xor
popa
xor
data16
xor
arpl
xor
fs
fs
xor
popa
xor
arpl
fs
xor
xor
arpl
xor
arpl
bound
bound
xor
xor
bound
bound
add
arpl
xor
xor
xor
ss
cmp
xor
popa
data16
xor
add
arpl
xor
xor
arpl
xor
xor
xor
popa
aaa
bound
cmp
add
bound
arpl
cmp
cmp
xor
xor
arpl
xor
xor
xor
arpl
xor
data16
bound
xor
xor
xor
xor
xor
data16
xor
xor
xor
xor
popa
xor
xor
xor
xor
popaw
popa
fs
cmp
arpl
popa
xor
aaa
xor
xor
fs
arpl
add
ss
fs
cmp
xor
xor
xor
popa
xor
xor
cmp
xor
arpl
xor
bound
cmp
popa
xor
xor
xor
xor
xor
data16
xor
add
bound
cmp
popa
xor
aaa
arpl
gs
bound
xor
xor
cmp
arpl
arpl
arpl
xor
xor
bound
xor
xor
cmp
xor
xor
arpl
arpl
xor
cmp
xor
xor
xor
fs
xor
gs
cmp
xor
xor
arpl
aaa
aaa
xor
ss
cmp
xor
cmp
data16
xor
aaa
popa
add
data16
xor
ss
xor
xor
data16
xor
cmp
arpl
arpl
ss
aaa
arpl
data16
fs
aaa
cmp
aaa
cmp
cmp
xor
cmp
add
xor
arpl
xor
xor
aaa
popa
aaa
bound
xor
popa
xor
bound
xor
xor
xor
xor
xor
bound
xor
arpl
xor
arpl
xor
cmp
xor
popa
arpl
xor
xor
gs
popa
bound
xor
ss
cmp
xor
xor
popa
xor
cmp
cmp
gs
popa
bound
xor
arpl
fs
bound
data16
cmp
cmp
popa
xor
xor
gs
ss
arpl
data16
xor
xor
bound
xor
aaa
xor
xor
bound
bound
arpl
cmp
xor
xor
xor
ss
popa
xor
cmp
cmp
ss
arpl
aaa
xor
xor
arpl
arpl
xor
xor
xor
data16
bound
cmp
add
xor
cmp
aaa
aaa
arpl
xor
cmp
xor
xor
cmp
cmp
add
xor
cmp
ss
ss
popa
xor
cmp
arpl
xor
xor
gs
arpl
cmp
aaa
xor
xor
bound
xor
xor
ss
xor
arpl
data16
arpl
data16
arpl
xor
bound
xor
arpl
xor
xor
xor
xor
arpl
gs
xor
xor
popa
xor
arpl
popa
xor
arpl
arpl
xor
xor
xor
bound
xor
xor
aaa
xor
arpl
aaa
gs
popa
xor
arpl
arpl
popa
xor
cmp
xor
add
xor
cmp
popa
cmp
aaa
xor
arpl
xor
cmp
cmp
aaa
arpl
arpl
cmp
data16
arpl
arpl
xor
xor
cmp
xor
xor
xor
add
xor
xor
bound
fs
bound
popa
xor
bound
ss
xor
add
cmp
xor
xor
bound
gs
xor
arpl
xor
xor
add
xor
xor
arpl
cmp
arpl
xor
xor
xor
arpl
aaa
xor
arpl
xor
cmp
xor
popa
xor
xor
aaa
xor
xor
popa
ss
xor
xor
bound
cmp
xor
arpl
xor
xor
xor
cmp
xor
add
bound
xor
ss
cmp
xor
cmp
xor
fs
xor
xor
arpl
xor
bound
bound
fs
arpl
xor
cmp
arpl
fs
xor
data16
arpl
ss
data16
xor
popa
cmp
arpl
xor
arpl
arpl
gs
bound
xor
xor
xor
gs
data16
xor
arpl
xor
data16
arpl
bound
arpl
xor
xor
cmp
cmp
fs
arpl
xor
xor
xor
popa
xor
xor
cmp
xor
ss
arpl
arpl
xor
bound
xor
gs
xor
cmp
xor
popa
bound
data16
popa
bound
arpl
cmp
popa
xor
arpl
bound
xor
xor
xor
xor
arpl
xor
cmp
arpl
cmp
xor
popa
bound
xor
xor
xor
aaa
data16
cmp
xor
fs
arpl
popa
cmp
popa
arpl
arpl
xor
xor
xor
xor
add
gs
xor
aaa
data16
xor
bound
xor
xor
xor
arpl
arpl
data16
fs
popa
xor
xor
bound
add
xor
gs
xor
xor
xor
bound
gs
xor
add
xor
ss
xor
xor
arpl
arpl
xor
cmp
cmp
arpl
arpl
xor
xor
xor
bound
cmp
xor
fs
aaa
data16
xor
add
xor
xor
arpl
bound
xor
popa
xor
arpl
cmp
xor
cmp
arpl
popa
bound
popa
bound
cmp
bound
cmp
xor
xor
fs
data16
xor
cmp
arpl
xor
xor
aaa
xor
arpl
xor
cmp
bound
data16
xor
xor
xor
arpl
bound
bound
xor
xor
aaa
xor
cmp
xor
arpl
cmp
add
fs
cmp
xor
aaa
xor
arpl
xor
xor
xor
add
cmp
bound
xor
xor
cmp
xor
xor
fs
arpl
arpl
xor
cmp
arpl
aaa
cmp
xor
cmp
gs
cmp
arpl
xor
bound
xor
xor
arpl
cmp
xor
ss
fs
aaa
cmp
xor
cmp
data16
xor
arpl
xor
cmp
data16
popa
xor
cmp
aaa
aaa
xor
add
xor
xor
bound
cmp
xor
gs
arpl
xor
xor
xor
popa
cmp
xor
xor
xor
popa
xor
xor
arpl
arpl
xor
xor
add
xor
xor
bound
xor
gs
xor
cmp
data16
xor
aaa
xor
xor
xor
gs
xor
xor
cmp
xor
xor
xor
gs
xor
aaa
add
xor
bound
cmp
ss
xor
xor
xor
bound
xor
ss
add
xor
popa
popa
bound
arpl
xor
arpl
xor
xor
aaa
bound
xor
arpl
cmp
xor
xor
aaa
popa
xor
xor
popa
bound
xor
cmp
xor
popa
xor
arpl
xor
cmp
xor
xor
data16
aaa
arpl
ss
xor
arpl
xor
gs
xor
xor
popa
aaa
ss
xor
arpl
bound
xor
add
xor
xor
xor
xor
arpl
xor
xor
xor
data16
cmp
xor
xor
arpl
xor
ss
ss
popa
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
ss
xor
xor
xor
aaa
xor
arpl
cmp
addr16
inc
jne
add
je
inc
jne
add
je
inc
jne
fs
jb
popa
je
add
je
inc
jne
fs
jb
popa
je
add
xor
ss
cmp
xor
arpl
xor
data16
arpl
popa
xor
arpl
add
popa
arpl
popa
xor
xor
xor
ss
xor
xor
xor
add
xor
aaa
xor
popa
xor
xor
xor
xor
xor
add
xor
popa
arpl
xor
aaa
aaa
popa
cmp
arpl
xor
xor
xor
xor
xor
arpl
xor
gs
bound
xor
xor
arpl
xor
bound
cmp
gs
arpl
arpl
aaa
xor
fs
bound
xor
xor
xor
aaa
arpl
aaa
cmp
arpl
arpl
ss
xor
bound
cmp
xor
xor
ss
bound
xor
add
bound
ss
popa
arpl
cmp
aaa
fs
xor
cmp
popa
xor
bound
cmp
xor
xor
bound
aaa
cmp
xor
cmp
xor
arpl
cmp
xor
aaa
xor
bound
gs
bound
cmp
arpl
xor
aaa
bound
cmp
add
xor
xor
cmp
bound
cmp
aaa
cmp
xor
arpl
xor
xor
xor
aaa
ss
xor
xor
xor
xor
popa
bound
bound
popa
xor
aaa
xor
aaa
cmp
add
cmp
xor
cmp
xor
xor
xor
xor
bound
cmp
xor
xor
arpl
arpl
xor
arpl
fs
ss
cmp
xor
add
xor
bound
cmp
cmp
xor
xor
xor
xor
aaa
xor
popa
add
data16
gs
popa
xor
arpl
xor
popa
cmp
aaa
arpl
xor
popa
xor
arpl
cmp
arpl
xor
arpl
xor
xor
xor
fs
arpl
xor
arpl
cmp
cmp
xor
xor
xor
xor
bound
xor
outs
bound
arpl
gs
outs
add
jbe
imul
jb
arpl
jae
popa
outs
fs
add
outs
arpl
jae
outs
outs
jb
popa
je
outs
outs
inc
ins
popa
jae
add
outs
arpl
jae
outs
outs
jb
popa
je
outs
outs
add
outs
arpl
jae
outs
outs
jb
popa
je
outs
outs
dec
outs
addr16
add
je
jb
dec
outs
addr16
add
imul
add
ins
ins
bound
imul
outs
fs
outs
jbe
imul
gs
ins
je
arpl
xor
arpl
bound
aaa
cmp
arpl
cmp
cmp
gs
aaa
add
fs
arpl
bound
data16
xor
xor
xor
ss
bound
xor
add
bound
data16
xor
xor
xor
cmp
ss
xor
xor
xor
xor
arpl
data16
cmp
xor
xor
xor
cmp
xor
xor
data16
xor
popa
xor
bound
arpl
gs
xor
cmp
cmp
xor
xor
arpl
bound
cmp
xor
xor
cmp
xor
arpl
arpl
xor
gs
data16
jne
push
outs
jb
add
cmp
xor
aaa
xor
xor
aaa
xor
xor
popa
popa
data16
xor
arpl
arpl
xor
cmp
aaa
xor
xor
bound
popa
bound
gs
xor
cmp
xor
xor
xor
arpl
cmp
popa
fs
aaa
gs
popa
xor
xor
xor
aaa
cmp
add
cmp
xor
arpl
xor
xor
bound
xor
fs
xor
xor
xor
add
push
ins
jne
imul
add
push
gs
imul
je
popa
ins
imul
je
ins
gs
gs
imul
pop
arpl
aaa
xor
xor
xor
xor
xor
bound
xor
xor
aaa
add
je
gs
imul
jb
add
imul
gs
imul
imul
outs
outs
add
je
ins
jne
imul
inc
outs
push
je
jb
add
outs
jo
inc
outs
push
je
jo
dec
outs
jae
popa
ins
ins
add
imul
add
outs
imul
add
jo
inc
outs
inc
jne
jo
ins
jo
jne
jo
je
je
imul
gs
bound
popa
xor
xor
data16
cmp
xor
ss
cmp
xor
arpl
xor
xor
xor
cmp
ss
popa
xor
bound
xor
bound
push
gs
add
inc
bound
addr16
jb
jae
outs
je
ja
add
jb
ins
add
gs
xor
fs
xor
cmp
cmp
xor
data16
outs
popa
ins
add
je
dec
popa
ins
add
arpl
xor
xor
xor
xor
aaa
cmp
bound
popa
xor
cmp
xor
arpl
xor
inc
jno
popa
ins
jae
outs
bound
data16
arpl
outs
add
bound
inc
gs
popa
jae
inc
outs
fs
pop
inc
jno
popa
ins
imul
outs
gs
popa
ins
imul
jne
inc
jne
arpl
arpl
ins
arpl
outs
add
jo
arpl
jns
arpl
xor
ss
xor
xor
popa
xor
xor
popa
xor
aaa
xor
xor
xor
jo
jb
ins
gs
jb
add
je
push
popa
jb
ins
gs
jb
add
jo
jns
ins
imul
popa
push
arpl
jo
dec
bound
arpl
gs
imul
jbe
ins
add
je
push
jb
add
ins
jae
add
ins
ins
add
fs
arpl
xor
xor
bound
ss
arpl
ss
popa
data16
aaa
arpl
cmp
bound
add
xor
fs
xor
xor
xor
xor
xor
cmp
bound
add
xor
xor
data16
ss
xor
xor
xor
arpl
xor
arpl
gs
arpl
data16
ss
bound
xor
bound
data16
xor
add
imul
gs
popa
ins
imul
arpl
outs
fs
je
add
outs
jbe
jb
gs
add
gs
popa
ins
imul
arpl
jns
add
imul
ja
imul
fs
jae
outs
add
popa
fs
outs
bound
arpl
jo
add
outs
inc
outs
outs
jbe
jb
add
xor
popa
xor
bound
xor
fs
cmp
arpl
xor
add
data16
xor
xor
bound
bound
bound
cmp
gs
bound
data16
cmp
arpl
xor
cmp
xor
popa
xor
aaa
cmp
gs
xor
popa
bound
popa
add
xor
cmp
cmp
xor
popa
xor
xor
ss
xor
aaa
arpl
add
cmp
xor
xor
xor
xor
arpl
popa
xor
cmp
bound
fs
arpl
cmp
xor
xor
xor
xor
xor
xor
bound
gs
xor
aaa
add
xor
xor
xor
xor
cmp
cmp
bound
xor
xor
arpl
data16
arpl
cmp
xor
ss
xor
xor
xor
cmp
xor
arpl
arpl
bound
bound
xor
aaa
arpl
popa
xor
xor
data16
data16
arpl
xor
xor
bound
aaa
data16
xor
arpl
xor
xor
xor
cmp
ss
xor
cmp
xor
xor
cmp
xor
arpl
bound
data16
xor
xor
popa
arpl
bound
cmp
xor
xor
aaa
fs
arpl
xor
fs
bound
bound
xor
bound
xor
gs
arpl
xor
bound
xor
arpl
xor
bound
popa
xor
xor
xor
data16
arpl
xor
arpl
arpl
xor
xor
xor
xor
xor
aaa
ss
bound
add
xor
cmp
cmp
xor
cmp
xor
popa
gs
xor
cmp
xor
bound
add
cmp
arpl
xor
xor
xor
bound
aaa
xor
xor
bound
aaa
gs
arpl
xor
xor
cmp
xor
cmp
cmp
xor
gs
xor
add
cmp
bound
xor
data16
bound
xor
aaa
popa
gs
fs
add
xor
arpl
xor
cmp
data16
xor
xor
aaa
xor
arpl
bound
xor
add
xor
xor
bound
xor
bound
xor
xor
bound
arpl
xor
xor
popa
xor
xor
xor
xor
xor
xor
xor
xor
xor
popa
fs
inc
jb
outs
jb
jb
ins
outs
jbe
pop
inc
jb
outs
jb
push
jb
je
push
gs
ins
je
dec
jae
outs
push
gs
outs
outs
jae
add
jae
outs
outs
jae
add
imul
outs
add
inc
jb
outs
jb
add
popa
bound
bound
xor
xor
xor
cmp
arpl
arpl
add
je
arpl
xor
ss
arpl
bound
arpl
data16
xor
fs
bound
add
jb
jo
jb
jns
popa
ins
add
outs
jo
jb
jns
popa
ins
add
je
push
jb
jo
jb
jns
popa
ins
add
je
push
jb
jo
jb
jns
popa
ins
add
xor
xor
cmp
xor
xor
xor
xor
cmp
xor
xor
xor
data16
cmp
xor
cmp
xor
bound
xor
add
xor
xor
fs
bound
fs
cmp
arpl
xor
xor
ss
xor
cmp
xor
bound
xor
xor
aaa
xor
data16
cmp
xor
cmp
cmp
xor
aaa
add
xor
xor
xor
xor
xor
xor
cmp
cmp
cmp
popa
xor
arpl
xor
xor
arpl
popa
fs
xor
aaa
aaa
fs
arpl
cmp
xor
aaa
add
aaa
gs
xor
bound
cmp
cmp
xor
xor
xor
xor
arpl
popa
add
popa
cmp
cmp
xor
bound
aaa
xor
xor
xor
xor
xor
bound
gs
ss
bound
aaa
cmp
xor
xor
data16
addr16
push
jne
je
inc
push
gs
push
outs
imul
jns
add
je
push
popa
ins
jne
add
je
push
popa
ins
jne
push
jns
add
arpl
arpl
cmp
cmp
arpl
xor
fs
arpl
bound
arpl
bound
xor
aaa
xor
add
xor
arpl
cmp
aaa
xor
gs
xor
cmp
aaa
bound
add
xor
bound
cmp
xor
aaa
popa
xor
xor
arpl
data16
data16
arpl
aaa
xor
cmp
xor
xor
cmp
xor
xor
arpl
xor
xor
xor
ss
arpl
cmp
cmp
popa
aaa
xor
xor
xor
cmp
xor
cmp
add
xor
xor
arpl
arpl
aaa
xor
ss
xor
cmp
bound
add
cmp
bound
xor
xor
ss
aaa
arpl
xor
xor
xor
add
xor
xor
xor
arpl
bound
xor
ss
xor
arpl
cmp
cmp
xor
bound
xor
arpl
bound
ss
xor
push
gs
add
cmp
xor
xor
xor
xor
popaw
gs
xor
arpl
add
cmp
xor
bound
bound
cmp
cmp
xor
xor
data16
xor
cmp
popa
cmp
arpl
fs
xor
xor
cmp
arpl
gs
xor
arpl
gs
xor
xor
fs
popa
xor
gs
fs
xor
bound
xor
xor
xor
xor
xor
bound
popa
popa
xor
add
aaa
xor
xor
xor
xor
fs
xor
aaa
arpl
xor
cmp
xor
xor
xor
arpl
arpl
aaa
xor
xor
popa
cmp
xor
gs
xor
xor
arpl
xor
arpl
arpl
ss
xor
aaa
cmp
popa
arpl
xor
xor
xor
cmp
arpl
bound
data16
arpl
gs
xor
gs
xor
xor
xor
bound
xor
popa
xor
arpl
add
gs
xor
cmp
xor
xor
bound
xor
gs
cmp
bound
add
xor
cmp
arpl
xor
xor
xor
xor
ss
cmp
arpl
add
xor
xor
xor
xor
xor
gs
cmp
xor
bound
aaa
cmp
xor
xor
xor
xor
xor
xor
xor
data16
data16
aaa
ss
xor
aaa
cmp
data16
cmp
cmp
bound
cmp
fs
add
cmp
xor
xor
xor
aaa
xor
cmp
cmp
xor
xor
bound
xor
xor
arpl
aaa
cmp
xor
popa
cmp
aaa
data16
xor
xor
popa
bound
xor
gs
add
popa
xor
xor
xor
xor
xor
popa
xor
ss
xor
add
arpl
aaa
data16
xor
xor
xor
cmp
xor
ss
xor
xor
arpl
bound
cmp
gs
xor
gs
aaa
arpl
cmp
popa
xor
xor
add
cmp
xor
cmp
xor
xor
aaa
aaa
bound
xor
cmp
popa
xor
add
xor
xor
bound
arpl
xor
data16
arpl
gs
xor
xor
cmp
add
xor
bound
xor
data16
xor
xor
xor
cmp
xor
fs
xor
xor
xor
arpl
cmp
xor
data16
xor
cmp
arpl
popa
arpl
ss
xor
inc
ins
outs
jae
add
popa
arpl
xor
xor
xor
data16
bound
cmp
xor
add
cmp
bound
aaa
xor
ss
xor
bound
xor
xor
gs
aaa
bound
add
arpl
bound
cmp
xor
popa
xor
arpl
xor
xor
bound
data16
bound
xor
xor
xor
cmp
bound
xor
xor
arpl
xor
arpl
aaa
popa
xor
aaa
arpl
xor
cmp
aaa
ss
xor
arpl
cmp
arpl
xor
xor
cmp
xor
aaa
arpl
bound
data16
arpl
cmp
xor
popa
xor
arpl
xor
cmp
xor
bound
popa
xor
cmp
xor
aaa
popa
cmp
add
bound
bound
data16
xor
ss
popa
bound
popaw
ss
aaa
xor
add
xor
xor
bound
popa
xor
xor
fs
xor
bound
popa
xor
arpl
arpl
xor
cmp
xor
gs
bound
arpl
bound
gs
xor
arpl
arpl
cmp
popa
arpl
cmp
xor
xor
aaa
bound
aaa
xor
cmp
data16
xor
xor
xor
xor
arpl
aaa
aaa
xor
popa
xor
arpl
ins
gs
popa
add
outs
gs
js
gs
imul
outs
jb
dec
outs
outs
jb
add
jb
popa
ins
imul
aaa
aaa
ss
bound
xor
popa
xor
xor
aaa
xor
cmp
add
xor
xor
aaa
aaa
cmp
popa
aaa
xor
xor
xor
xor
arpl
arpl
popa
arpl
xor
arpl
aaa
bound
fs
cmp
xor
xor
arpl
cmp
ss
xor
data16
bound
xor
xor
addr16
push
gs
outs
arpl
outs
outs
jo
popa
outs
fs
imul
pop
push
gs
outs
arpl
outs
outs
jo
popa
outs
fs
imul
pop
inc
outs
outs
jbe
jb
gs
add
gs
popa
ins
imul
ss
xor
xor
popaw
fs
fs
aaa
arpl
xor
xor
cmp
xor
arpl
xor
cmp
popa
data16
xor
arpl
cmp
bound
xor
cmp
xor
add
bound
cmp
aaa
cmp
xor
xor
xor
cmp
xor
cmp
xor
add
xor
fs
xor
popa
bound
xor
gs
xor
bound
data16
xor
fs
xor
xor
xor
fs
xor
popa
aaa
bound
ss
aaa
data16
data16
xor
popa
xor
aaa
xor
bound
cmp
xor
data16
xor
cmp
arpl
xor
fs
bound
xor
xor
xor
fs
data16
aaa
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
xor
cmp
cmp
popa
add
xor
xor
xor
aaa
fs
fs
arpl
aaa
cmp
xor
data16
je
js
push
jb
je
jb
push
outs
outs
push
jb
je
jb
arpl
xor
aaa
xor
xor
arpl
bound
xor
xor
gs
popa
xor
aaa
add
xor
arpl
cmp
xor
cmp
bound
xor
xor
cmp
xor
cmp
add
xor
bound
bound
fs
data16
arpl
xor
aaa
xor
xor
xor
xor
xor
bound
arpl
xor
xor
xor
aaa
xor
xor
arpl
cmp
xor
popa
xor
aaa
xor
xor
xor
xor
xor
arpl
gs
cmp
xor
data16
xor
xor
aaa
fs
xor
aaa
xor
data16
add
bound
cmp
fs
arpl
xor
cmp
xor
xor
cmp
popa
arpl
cmp
add
outs
add
popa
jb
dec
bound
arpl
je
jb
inc
jb
popa
jns
push
jb
jo
jb
jns
popa
ins
add
ins
ins
outs
je
dec
outs
je
addr16
inc
ins
outs
popa
je
inc
outs
fs
bound
arpl
outs
fs
jb
popa
jns
inc
outs
outs
jae
jb
arpl
add
add
xor
xor
bound
xor
xor
xor
fs
bound
popa
bound
add
outs
jae
add
outs
jo
jb
jns
dec
outs
fs
je
add
popa
bound
bound
xor
xor
xor
aaa
xor
xor
xor
cmp
add
xor
bound
xor
data16
xor
xor
xor
bound
xor
arpl
data16
bound
xor
xor
xor
cmp
cmp
xor
aaa
bound
add
popa
bound
xor
xor
gs
xor
xor
cmp
bound
xor
xor
arpl
fs
xor
popa
popa
aaa
cmp
cmp
arpl
data16
data16
xor
arpl
ss
ss
bound
xor
cmp
arpl
xor
bound
cmp
xor
arpl
gs
popa
gs
fs
gs
xor
aaa
aaa
xor
xor
cmp
ss
xor
addr16
arpl
aaa
arpl
xor
xor
arpl
xor
cmp
xor
gs
aaa
xor
xor
add
je
push
jb
je
push
je
je
add
je
inc
outs
jb
popa
je
imul
pop
inc
outs
jb
popa
je
imul
pop
dec
outs
fs
je
je
outs
outs
add
je
dec
outs
fs
je
je
outs
outs
add
je
push
jne
je
inc
push
gs
dec
outs
fs
je
push
gs
dec
outs
fs
je
push
gs
push
jne
je
dec
popa
ins
add
je
push
jne
je
dec
popa
ins
add
jne
push
je
push
je
jb
dec
bound
arpl
jb
je
inc
outs
fs
bound
arpl
jb
je
push
je
jb
inc
jb
popa
jns
push
jb
je
inc
outs
fs
jb
popa
jns
push
jb
je
push
jb
jo
jb
jns
popa
ins
add
imul
bound
popa
cmp
xor
cmp
xor
aaa
cmp
gs
arpl
aaa
popa
xor
xor
arpl
cmp
gs
xor
xor
xor
gs
popa
xor
bound
fs
cmp
xor
bound
ss
xor
xor
arpl
xor
arpl
bound
cmp
fs
data16
xor
bound
bound
aaa
bound
arpl
xor
aaa
xor
cmp
cmp
xor
xor
arpl
bound
popa
xor
xor
xor
xor
add
data16
xor
xor
aaa
xor
fs
cmp
fs
xor
add
bound
ss
aaa
aaa
xor
xor
cmp
xor
xor
popa
aaa
bound
xor
ss
xor
push
jb
je
dec
jne
ins
add
imul
imul
imul
popa
jbe
push
arpl
jo
add
imul
add
imul
outs
je
je
js
add
imul
jae
popa
arpl
ja
add
push
arpl
popa
jb
add
jb
jns
je
jb
add
cmp
xor
arpl
arpl
bound
aaa
cmp
arpl
cmp
xor
aaa
xor
xor
arpl
add
xor
xor
cmp
xor
cmp
xor
aaa
xor
xor
xor
arpl
bound
arpl
data16
popa
xor
aaa
popa
bound
xor
arpl
xor
add
xor
fs
fs
cmp
xor
xor
bound
ss
add
xor
xor
arpl
popaw
xor
bound
bound
aaa
xor
xor
data16
add
je
arpl
xor
data16
arpl
fs
cmp
xor
xor
xor
xor
add
je
arpl
xor
cmp
xor
aaa
xor
bound
xor
cmp
xor
xor
xor
bound
arpl
popa
add
je
arpl
xor
xor
xor
xor
data16
bound
xor
xor
bound
data16
je
arpl
fs
arpl
arpl
fs
xor
data16
arpl
xor
cmp
arpl
addr16
arpl
xor
data16
xor
cmp
xor
xor
bound
cmp
add
je
gs
outs
jb
je
ins
add
gs
add
xor
xor
xor
xor
cmp
cmp
xor
xor
fs
cmp
arpl
arpl
xor
xor
xor
xor
gs
xor
aaa
xor
arpl
xor
aaa
cmp
xor
bound
cmp
data16
gs
cmp
addr16
arpl
gs
popaw
bound
arpl
ss
aaa
cmp
gs
arpl
aaa
data16
add
je
arpl
gs
popaw
bound
arpl
ss
aaa
cmp
gs
arpl
aaa
data16
add
xor
xor
data16
arpl
xor
xor
gs
xor
xor
add
cmp
ss
xor
xor
xor
xor
cmp
bound
xor
xor
add
xor
xor
ss
cmp
ss
bound
popa
arpl
ss
xor
xor
xor
xor
cmp
xor
xor
cmp
cmp
gs
xor
ss
arpl
data16
popa
xor
aaa
xor
ss
cmp
cmp
aaa
cmp
xor
arpl
bound
aaa
cmp
xor
arpl
gs
cmp
xor
xor
arpl
xor
aaa
cmp
xor
xor
arpl
cmp
xor
xor
xor
xor
fs
aaa
xor
cmp
gs
cmp
bound
arpl
add
ss
popa
ss
arpl
xor
popa
popa
xor
xor
xor
xor
cmp
add
xor
arpl
xor
gs
cmp
xor
arpl
xor
xor
cmp
add
cmp
xor
xor
xor
gs
popa
popa
gs
cmp
xor
add
cmp
xor
xor
aaa
xor
data16
xor
xor
cmp
ss
cmp
add
xor
xor
cmp
xor
xor
aaa
bound
cmp
arpl
data16
xor
arpl
fs
xor
popa
xor
aaa
xor
xor
xor
xor
xor
xor
xor
aaa
bound
arpl
xor
arpl
arpl
xor
popa
bound
bound
xor
xor
xor
arpl
aaa
add
arpl
cmp
xor
xor
cmp
bound
xor
popa
xor
xor
ss
add
xor
xor
ss
xor
xor
bound
xor
popa
data16
cmp
aaa
arpl
arpl
cmp
data16
xor
xor
aaa
xor
arpl
xor
fs
aaa
arpl
add
xor
cmp
popa
xor
bound
popa
bound
xor
cmp
bound
popaw
popa
xor
add
xor
xor
aaa
popa
xor
xor
popa
xor
arpl
cmp
aaa
cmp
xor
add
arpl
xor
aaa
arpl
xor
arpl
popa
xor
cmp
xor
xor
arpl
xor
xor
xor
cmp
cmp
xor
xor
xor
fs
add
xor
bound
cmp
bound
cmp
cmp
xor
cmp
cmp
gs
xor
xor
xor
xor
xor
xor
xor
popa
xor
xor
xor
xor
arpl
bound
popaw
ss
xor
aaa
fs
aaa
arpl
add
xor
cmp
arpl
xor
ss
cmp
xor
cmp
xor
xor
xor
popa
jb
xor
popa
jb
xor
arpl
xor
xor
popa
xor
xor
xor
cmp
cmp
cmp
xor
arpl
xor
xor
popa
ss
xor
xor
xor
ss
bound
gs
arpl
popa
xor
add
bound
xor
xor
data16
xor
gs
xor
xor
gs
add
aaa
bound
xor
gs
xor
data16
xor
xor
popa
add
cmp
xor
xor
xor
ss
xor
aaa
arpl
popa
xor
popa
xor
arpl
bound
cmp
xor
cmp
xor
xor
aaa
data16
xor
arpl
cmp
aaa
cmp
fs
data16
cmp
bound
xor
xor
xor
arpl
arpl
arpl
arpl
ss
xor
xor
xor
xor
ss
popa
ss
xor
cmp
arpl
xor
cmp
xor
xor
gs
xor
fs
data16
xor
xor
cmp
cmp
cmp
fs
xor
arpl
arpl
add
xor
xor
cmp
data16
popa
xor
gs
popa
xor
xor
gs
add
arpl
xor
popa
xor
arpl
xor
xor
cmp
cmp
xor
add
xor
aaa
arpl
data16
xor
cmp
xor
xor
xor
xor
add
arpl
gs
fs
xor
bound
xor
gs
cmp
xor
xor
popa
aaa
xor
xor
cmp
xor
aaa
arpl
xor
xor
xor
xor
gs
popa
xor
popa
xor
data16
xor
xor
xor
bound
xor
xor
add
xor
fs
xor
arpl
cmp
cmp
data16
xor
popa
cmp
cmp
add
xor
data16
xor
cmp
cmp
xor
bound
xor
arpl
xor
bound
xor
cmp
xor
gs
popa
aaa
ss
cmp
xor
add
xor
aaa
cmp
xor
cmp
aaa
xor
xor
xor
xor
bound
xor
cmp
xor
xor
xor
xor
cmp
aaa
xor
ss
aaa
data16
aaa
xor
cmp
arpl
arpl
xor
xor
xor
bound
fs
xor
ss
xor
xor
add
gs
cmp
xor
xor
xor
arpl
xor
xor
ss
fs
cmp
arpl
xor
arpl
xor
cmp
aaa
xor
aaa
xor
xor
xor
xor
add
xor
popa
arpl
aaa
xor
xor
xor
fs
bound
popa
arpl
popa
cmp
arpl
cmp
cmp
xor
xor
aaa
arpl
cmp
fs
xor
xor
bound
xor
add
xor
xor
xor
cmp
xor
xor
xor
xor
bound
popa
data16
xor
xor
xor
xor
cmp
xor
cmp
fs
xor
data16
xor
cmp
xor
xor
xor
add
xor
xor
aaa
data16
xor
xor
xor
xor
xor
xor
xor
cmp
add
data16
cmp
cmp
gs
xor
xor
cmp
xor
data16
xor
popa
add
xor
cmp
xor
bound
popa
xor
xor
xor
xor
popa
aaa
xor
arpl
xor
aaa
xor
cmp
arpl
xor
xor
cmp
cmp
bound
xor
popa
xor
bound
data16
gs
arpl
xor
popa
xor
data16
arpl
fs
xor
ss
cmp
aaa
cmp
fs
xor
fs
xor
xor
arpl
arpl
xor
xor
ss
fs
popa
xor
xor
xor
popa
xor
add
popa
xor
xor
xor
xor
cmp
arpl
ss
aaa
fs
bound
add
arpl
data16
aaa
bound
xor
aaa
bound
cmp
aaa
xor
data16
xor
add
bound
popa
ss
cmp
xor
xor
xor
data16
bound
xor
add
xor
bound
aaa
gs
xor
cmp
xor
xor
popa
xor
bound
cmp
bound
xor
xor
xor
xor
bound
xor
xor
xor
xor
xor
bound
bound
xor
popa
cmp
bound
add
cmp
xor
xor
xor
popa
xor
popa
bound
aaa
ss
xor
arpl
xor
xor
gs
cmp
xor
popa
cmp
xor
popa
xor
xor
popa
add
cmp
ss
ss
bound
xor
xor
arpl
gs
xor
xor
add
xor
xor
fs
xor
xor
aaa
data16
bound
ss
xor
arpl
xor
arpl
aaa
xor
gs
bound
bound
xor
xor
xor
data16
xor
xor
xor
arpl
aaa
xor
xor
xor
bound
bound
arpl
aaa
xor
ss
xor
popa
xor
data16
aaa
popa
cmp
xor
ss
arpl
aaa
aaa
arpl
cmp
arpl
xor
xor
popa
bound
cmp
xor
xor
add
gs
arpl
xor
xor
xor
xor
bound
add
bound
xor
xor
cmp
arpl
xor
xor
xor
xor
xor
arpl
bound
cmp
aaa
popaw
xor
arpl
popa
popa
cmp
aaa
ss
xor
aaa
xor
arpl
xor
gs
bound
fs
gs
xor
cmp
xor
xor
xor
add
arpl
popa
cmp
xor
xor
aaa
bound
xor
cmp
xor
data16
add
add
xor
xor
bound
bound
xor
xor
ss
xor
cmp
gs
add
aaa
xor
xor
xor
xor
xor
xor
xor
bound
add
cmp
xor
xor
xor
arpl
arpl
bound
xor
xor
xor
bound
data16
xor
popa
xor
cmp
xor
xor
xor
gs
popa
add
aaa
xor
popa
popa
popa
cmp
xor
xor
xor
xor
xor
bound
cmp
add
xor
xor
xor
cmp
gs
aaa
gs
cmp
aaa
add
arpl
xor
cmp
xor
ss
xor
xor
aaa
xor
data16
xor
xor
arpl
cmp
xor
xor
gs
arpl
popa
xor
xor
xor
xor
xor
xor
arpl
xor
xor
xor
popa
fs
aaa
xor
cmp
xor
bound
add
arpl
arpl
bound
ss
fs
xor
xor
aaa
bound
xor
aaa
xor
xor
cmp
arpl
xor
popa
cmp
popa
bound
arpl
arpl
add
xor
fs
xor
xor
arpl
aaa
arpl
aaa
cmp
xor
cmp
cmp
xor
arpl
xor
xor
xor
gs
data16
cmp
data16
popa
cmp
add
xor
aaa
xor
bound
xor
xor
xor
arpl
xor
popa
cmp
xor
bound
xor
xor
xor
xor
popa
arpl
xor
xor
popa
xor
aaa
cmp
fs
cmp
arpl
fs
xor
xor
xor
xor
bound
xor
aaa
cmp
cmp
popa
bound
arpl
aaa
xor
cmp
gs
popa
xor
bound
arpl
xor
bound
popa
aaa
bound
popa
add
xor
xor
gs
xor
xor
xor
popa
xor
cmp
aaa
xor
add
arpl
popa
aaa
arpl
cmp
cmp
xor
xor
xor
xor
xor
cmp
add
cmp
popa
xor
xor
cmp
arpl
popa
arpl
xor
xor
cmp
cmp
cmp
xor
arpl
xor
xor
cmp
arpl
data16
xor
popa
cmp
arpl
cmp
add
arpl
gs
xor
ss
gs
bound
xor
xor
popa
aaa
add
aaa
xor
xor
cmp
xor
aaa
xor
xor
gs
data16
xor
add
xor
data16
aaa
popa
xor
ss
xor
arpl
bound
cmp
arpl
xor
data16
xor
fs
xor
cmp
cmp
xor
xor
xor
arpl
xor
data16
xor
xor
bound
xor
xor
popa
popa
fs
xor
add
xor
cmp
arpl
xor
aaa
xor
bound
cmp
ss
popa
fs
xor
xor
arpl
cmp
xor
arpl
xor
aaa
xor
cmp
cmp
xor
aaa
arpl
aaa
add
cmp
gs
xor
xor
popaw
xor
popa
xor
aaa
cmp
gs
aaa
cmp
add
cmp
bound
bound
xor
xor
xor
bound
xor
xor
popa
data16
arpl
arpl
data16
cmp
xor
arpl
gs
data16
bound
data16
xor
arpl
xor
bound
xor
xor
xor
cmp
xor
arpl
data16
add
xor
fs
bound
xor
xor
bound
cmp
xor
cmp
cmp
arpl
data16
gs
xor
cmp
bound
data16
data16
data16
aaa
popa
cmp
xor
cmp
bound
cmp
xor
ss
xor
cmp
fs
xor
xor
xor
xor
xor
gs
arpl
xor
xor
add
xor
fs
xor
bound
aaa
xor
bound
bound
xor
cmp
xor
arpl
xor
xor
xor
xor
xor
cmp
cmp
xor
xor
cmp
xor
xor
arpl
arpl
arpl
ss
ss
ss
xor
add
xor
aaa
arpl
arpl
xor
cmp
aaa
xor
aaa
arpl
fs
data16
xor
xor
xor
bound
xor
bound
popa
cmp
arpl
cmp
fs
data16
xor
xor
cmp
xor
arpl
fs
xor
data16
xor
xor
xor
arpl
arpl
arpl
cmp
cmp
xor
gs
xor
fs
xor
arpl
cmp
arpl
cmp
cmp
xor
xor
cmp
popa
xor
aaa
aaa
xor
xor
xor
cmp
xor
xor
xor
aaa
arpl
cmp
xor
xor
aaa
add
xor
xor
xor
cmp
xor
xor
xor
ss
popaw
xor
arpl
xor
xor
cmp
bound
xor
xor
xor
xor
bound
xor
popa
xor
arpl
xor
cmp
data16
xor
cmp
cmp
xor
gs
arpl
add
xor
cmp
cmp
arpl
ss
data16
xor
aaa
cmp
xor
xor
add
xor
xor
xor
gs
xor
xor
bound
xor
add
bound
xor
xor
xor
data16
xor
xor
cmp
arpl
bound
xor
xor
arpl
xor
xor
cmp
popa
xor
cmp
xor
arpl
xor
xor
bound
cmp
arpl
arpl
arpl
ss
cmp
xor
ss
popa
aaa
cmp
bound
add
cmp
gs
bound
bound
cmp
gs
cmp
aaa
xor
xor
cmp
arpl
add
xor
arpl
xor
bound
xor
cmp
popa
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
xor
xor
xor
data16
cmp
arpl
arpl
aaa
arpl
xor
xor
arpl
aaa
xor
cmp
cmp
xor
xor
arpl
xor
cmp
ss
xor
xor
xor
xor
data16
arpl
xor
xor
xor
popa
xor
popa
xor
ss
xor
arpl
xor
aaa
bound
xor
arpl
xor
xor
arpl
aaa
aaa
bound
data16
cmp
add
xor
arpl
arpl
xor
aaa
bound
xor
gs
cmp
xor
bound
arpl
xor
xor
xor
xor
cmp
bound
xor
ss
xor
add
xor
bound
bound
popa
popa
xor
fs
popa
xor
xor
xor
xor
xor
add
arpl
popa
bound
xor
gs
arpl
cmp
xor
xor
xor
xor
xor
add
popa
xor
xor
arpl
xor
cmp
aaa
xor
ss
xor
xor
popa
popa
popa
aaa
add
popa
bound
gs
aaa
xor
xor
aaa
xor
ss
xor
aaa
fs
data16
fs
aaa
xor
xor
xor
xor
xor
xor
ss
popa
cmp
arpl
xor
xor
popa
xor
cmp
cmp
cmp
xor
arpl
add
xor
cmp
xor
cmp
xor
cmp
bound
xor
xor
bound
xor
xor
xor
xor
gs
cmp
arpl
cmp
bound
arpl
arpl
ss
add
xor
xor
cmp
cmp
popa
bound
xor
xor
aaa
fs
aaa
xor
xor
arpl
gs
gs
popa
popa
xor
arpl
xor
xor
aaa
cmp
cmp
cmp
arpl
arpl
gs
xor
cmp
xor
gs
ss
cmp
ss
arpl
xor
xor
xor
aaa
bound
cmp
cmp
xor
xor
popa
add
arpl
xor
data16
xor
cmp
xor
arpl
fs
xor
arpl
xor
xor
xor
arpl
xor
cmp
xor
fs
arpl
xor
arpl
ss
cmp
xor
bound
data16
cmp
xor
arpl
xor
xor
bound
xor
xor
xor
popa
bound
xor
ss
arpl
xor
add
cmp
cmp
xor
cmp
bound
xor
cmp
xor
xor
xor
add
aaa
xor
arpl
cmp
data16
xor
arpl
xor
cmp
gs
arpl
xor
xor
xor
cmp
cmp
xor
xor
xor
xor
add
xor
xor
popa
xor
xor
xor
xor
aaa
cmp
xor
cmp
xor
xor
xor
data16
arpl
cmp
aaa
xor
xor
popa
cmp
xor
xor
aaa
xor
gs
bound
xor
xor
cmp
xor
arpl
arpl
xor
xor
cmp
bound
ss
cmp
arpl
cmp
aaa
xor
bound
arpl
aaa
xor
xor
cmp
cmp
xor
cmp
xor
bound
xor
arpl
arpl
xor
aaa
xor
cmp
xor
gs
xor
cmp
cmp
popa
popa
xor
add
aaa
xor
popa
arpl
cmp
cmp
xor
xor
arpl
cmp
cmp
aaa
xor
add
xor
xor
cmp
cmp
arpl
cmp
fs
xor
aaa
add
xor
bound
popa
xor
cmp
xor
xor
xor
cmp
xor
add
xor
popa
xor
cmp
gs
arpl
cmp
xor
data16
bound
data16
xor
cmp
gs
xor
data16
xor
bound
aaa
cmp
xor
data16
cmp
xor
xor
xor
cmp
gs
xor
xor
arpl
arpl
fs
xor
cmp
data16
xor
xor
arpl
cmp
xor
xor
arpl
xor
bound
xor
xor
xor
xor
popa
fs
gs
cmp
xor
aaa
xor
xor
bound
xor
cmp
xor
data16
bound
xor
popa
xor
xor
popa
xor
cmp
xor
xor
xor
xor
arpl
xor
xor
data16
xor
aaa
cmp
xor
cmp
xor
xor
fs
add
bound
cmp
popa
gs
data16
xor
xor
arpl
popa
xor
add
bound
xor
bound
xor
xor
xor
xor
fs
fs
arpl
ss
bound
ss
cmp
fs
xor
data16
bound
arpl
popa
xor
xor
aaa
xor
xor
aaa
cmp
xor
popa
fs
xor
xor
xor
cmp
data16
xor
xor
arpl
arpl
xor
cmp
arpl
xor
xor
arpl
ss
gs
ss
cmp
xor
popa
xor
xor
add
xor
xor
arpl
gs
xor
cmp
xor
xor
xor
cmp
arpl
bound
arpl
arpl
cmp
aaa
cmp
xor
cmp
ss
cmp
arpl
xor
cmp
bound
ss
xor
xor
fs
xor
xor
gs
cmp
arpl
xor
aaa
xor
xor
xor
cmp
cmp
xor
ss
cmp
xor
arpl
xor
arpl
gs
cmp
xor
xor
xor
fs
xor
xor
gs
xor
ss
xor
xor
aaa
cmp
ss
xor
xor
bound
addr16
arpl
arpl
bound
xor
xor
xor
xor
bound
bound
xor
xor
bound
xor
xor
cmp
bound
gs
add
fs
arpl
aaa
cmp
xor
cmp
aaa
gs
xor
cmp
data16
arpl
xor
xor
xor
xor
xor
cmp
bound
cmp
xor
add
cmp
xor
xor
bound
cmp
xor
xor
bound
xor
ss
cmp
arpl
xor
xor
cmp
aaa
bound
xor
bound
xor
data16
xor
xor
popa
cmp
xor
xor
arpl
xor
ss
cmp
ss
xor
aaa
xor
add
gs
xor
xor
cmp
xor
bound
cmp
data16
cmp
arpl
aaa
xor
cmp
fs
xor
xor
data16
xor
xor
add
xor
xor
bound
cmp
aaa
xor
cmp
xor
gs
popa
aaa
add
xor
aaa
popa
bound
xor
xor
xor
bound
xor
bound
bound
add
popa
gs
xor
cmp
arpl
arpl
xor
data16
xor
add
arpl
xor
arpl
gs
popa
xor
xor
cmp
arpl
bound
cmp
arpl
ss
xor
cmp
ss
aaa
xor
xor
cmp
bound
arpl
arpl
add
gs
gs
xor
ss
xor
cmp
xor
xor
xor
bound
aaa
add
cmp
xor
popa
bound
fs
xor
popa
xor
cmp
xor
xor
arpl
cmp
aaa
xor
cmp
popa
xor
data16
xor
ss
cmp
bound
add
xor
arpl
xor
popa
cmp
xor
aaa
xor
ss
aaa
cmp
bound
ss
add
xor
xor
aaa
aaa
xor
aaa
popa
popa
aaa
popa
xor
arpl
xor
xor
add
cmp
bound
bound
xor
xor
fs
fs
cmp
xor
gs
xor
arpl
xor
xor
xor
xor
xor
data16
bound
arpl
bound
arpl
xor
cmp
data16
xor
cmp
xor
cmp
xor
xor
add
xor
xor
arpl
xor
gs
xor
xor
aaa
bound
add
popa
bound
cmp
fs
bound
gs
bound
cmp
xor
xor
cmp
arpl
cmp
xor
bound
xor
cmp
fs
cmp
xor
popa
aaa
add
xor
popa
ss
xor
bound
cmp
data16
arpl
popa
arpl
arpl
popa
gs
arpl
aaa
xor
fs
bound
data16
bound
xor
popa
cmp
cmp
xor
xor
cmp
arpl
xor
xor
arpl
xor
xor
data16
bound
xor
data16
arpl
bound
xor
xor
popa
xor
arpl
xor
xor
xor
data16
ss
xor
xor
xor
xor
cmp
cmp
xor
cmp
arpl
aaa
bound
arpl
bound
cmp
cmp
aaa
bound
popa
xor
xor
aaa
xor
arpl
xor
cmp
xor
fs
popa
bound
cmp
fs
add
aaa
bound
bound
xor
popa
cmp
cmp
xor
xor
aaa
cmp
aaa
add
popa
popa
xor
fs
xor
bound
popa
fs
popa
cmp
xor
arpl
bound
arpl
cmp
cmp
xor
bound
bound
xor
data16
arpl
bound
data16
xor
xor
data16
xor
xor
aaa
xor
fs
xor
xor
arpl
arpl
popa
cmp
xor
cmp
xor
xor
xor
bound
xor
cmp
popa
xor
cmp
add
xor
xor
arpl
popa
xor
cmp
xor
xor
cmp
xor
add
xor
popa
xor
xor
xor
bound
fs
xor
fs
popa
add
xor
aaa
arpl
xor
cmp
ss
aaa
xor
xor
xor
xor
xor
xor
xor
bound
cmp
gs
xor
xor
bound
arpl
add
xor
xor
gs
popa
cmp
cmp
xor
cmp
arpl
xor
xor
add
xor
popaw
bound
xor
xor
aaa
bound
xor
xor
xor
add
bound
cmp
popa
aaa
xor
arpl
xor
gs
bound
popa
xor
data16
arpl
xor
xor
xor
aaa
arpl
data16
xor
arpl
arpl
cmp
cmp
arpl
aaa
data16
xor
ss
cmp
xor
cmp
add
popaw
xor
fs
xor
cmp
xor
bound
fs
xor
arpl
xor
arpl
popa
popaw
xor
fs
aaa
cmp
xor
arpl
xor
xor
popa
popaw
xor
cmp
data16
popa
xor
cmp
cmp
arpl
xor
xor
arpl
xor
aaa
bound
cmp
arpl
arpl
xor
xor
aaa
xor
xor
xor
xor
xor
xor
xor
xor
fs
add
cmp
xor
xor
arpl
xor
xor
xor
xor
cmp
add
cmp
data16
popa
aaa
xor
aaa
cmp
popa
popa
aaa
arpl
aaa
xor
xor
xor
cmp
cmp
fs
xor
xor
bound
popa
popa
xor
xor
xor
xor
xor
arpl
xor
xor
gs
xor
xor
xor
bound
xor
xor
cmp
add
aaa
popa
data16
ss
gs
arpl
bound
gs
arpl
arpl
cmp
bound
cmp
arpl
popa
data16
xor
arpl
fs
cmp
arpl
cmp
xor
cmp
cmp
arpl
popa
cmp
xor
cmp
data16
bound
arpl
xor
aaa
cmp
xor
aaa
xor
xor
ss
xor
xor
xor
arpl
xor
arpl
xor
xor
xor
popa
xor
bound
cmp
ss
xor
xor
bound
xor
add
xor
arpl
xor
arpl
cmp
xor
arpl
bound
xor
xor
arpl
xor
arpl
arpl
xor
xor
xor
cmp
xor
popa
bound
cmp
bound
aaa
xor
arpl
arpl
bound
aaa
xor
xor
xor
xor
xor
xor
arpl
xor
arpl
arpl
xor
xor
cmp
cmp
fs
fs
xor
xor
xor
ss
xor
xor
xor
fs
xor
xor
cmp
arpl
xor
cmp
cmp
bound
data16
aaa
xor
ss
xor
xor
aaa
cmp
cmp
add
cmp
xor
xor
gs
xor
fs
fs
xor
cmp
add
xor
cmp
arpl
cmp
cmp
xor
aaa
fs
cmp
aaa
add
bound
arpl
xor
aaa
xor
cmp
bound
xor
popa
aaa
popa
add
bound
cmp
aaa
xor
ss
fs
xor
arpl
cmp
xor
xor
xor
arpl
cmp
xor
cmp
xor
cmp
popa
arpl
xor
bound
xor
popa
add
xor
cmp
popa
fs
xor
xor
arpl
arpl
cmp
arpl
gs
ss
xor
aaa
cmp
cmp
fs
ss
xor
cmp
xor
popa
add
xor
cmp
bound
xor
cmp
xor
xor
xor
cmp
cmp
cmp
ss
cmp
arpl
ss
bound
xor
xor
arpl
arpl
xor
xor
bound
arpl
arpl
aaa
cmp
cmp
xor
aaa
xor
xor
cmp
add
cmp
aaa
bound
ss
xor
cmp
fs
data16
arpl
xor
arpl
xor
xor
cmp
ss
xor
xor
fs
fs
xor
aaa
xor
arpl
ss
popa
xor
popa
xor
cmp
arpl
add
xor
xor
fs
cmp
xor
xor
aaa
cmp
bound
arpl
xor
arpl
arpl
xor
xor
xor
xor
gs
popa
xor
fs
arpl
aaa
fs
popa
aaa
add
xor
xor
gs
cmp
arpl
gs
arpl
add
xor
data16
xor
popa
aaa
xor
arpl
xor
xor
popaw
add
arpl
bound
arpl
popa
xor
cmp
cmp
cmp
arpl
gs
xor
xor
xor
cmp
xor
bound
data16
bound
xor
arpl
xor
arpl
cmp
arpl
arpl
bound
bound
xor
xor
gs
xor
popaw
xor
xor
arpl
arpl
xor
gs
arpl
popa
ss
bound
cmp
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
bound
bound
xor
xor
arpl
gs
fs
ss
xor
aaa
xor
cmp
ss
xor
data16
cmp
xor
xor
popa
xor
cmp
ss
xor
arpl
cmp
xor
xor
cmp
arpl
xor
cmp
cmp
cmp
xor
xor
cmp
xor
xor
cmp
arpl
gs
cmp
xor
xor
aaa
popa
xor
xor
xor
cmp
popa
add
xor
bound
cmp
xor
cmp
xor
aaa
bound
add
xor
fs
xor
xor
popa
xor
xor
xor
xor
arpl
xor
add
xor
xor
xor
xor
data16
xor
bound
xor
aaa
xor
add
aaa
ss
popa
cmp
xor
gs
xor
xor
aaa
data16
xor
aaa
gs
xor
cmp
arpl
xor
popa
ss
xor
cmp
cmp
xor
arpl
xor
xor
gs
xor
xor
aaa
aaa
xor
xor
xor
xor
cmp
gs
add
cmp
data16
xor
bound
cmp
data16
xor
xor
popaw
data16
xor
cmp
xor
fs
xor
cmp
xor
fs
xor
arpl
aaa
xor
popa
fs
xor
xor
cmp
fs
xor
add
xor
bound
xor
xor
cmp
bound
xor
xor
popa
bound
xor
add
cmp
bound
cmp
xor
data16
xor
xor
xor
popa
xor
ss
cmp
arpl
bound
xor
arpl
cmp
bound
cmp
arpl
bound
ss
xor
add
bound
aaa
xor
aaa
xor
aaa
ss
cmp
cmp
cmp
cmp
xor
arpl
xor
fs
xor
xor
cmp
popa
arpl
xor
xor
arpl
cmp
xor
gs
cmp
xor
bound
cmp
popa
arpl
add
bound
xor
xor
xor
arpl
cmp
arpl
cmp
arpl
popa
cmp
xor
arpl
xor
xor
gs
xor
xor
aaa
bound
fs
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
aaa
bound
cmp
arpl
aaa
popa
bound
aaa
cmp
aaa
xor
xor
aaa
aaa
popa
data16
cmp
xor
xor
add
xor
cmp
xor
xor
xor
xor
xor
xor
data16
bound
bound
cmp
arpl
xor
arpl
aaa
xor
xor
bound
aaa
xor
xor
arpl
xor
xor
xor
arpl
bound
xor
xor
xor
xor
xor
arpl
aaa
cmp
add
arpl
cmp
cmp
xor
cmp
arpl
bound
cmp
cmp
xor
cmp
aaa
ss
xor
xor
xor
xor
bound
xor
xor
bound
arpl
arpl
data16
xor
xor
bound
xor
cmp
gs
bound
bound
add
xor
gs
xor
cmp
ss
xor
xor
data16
xor
xor
xor
arpl
gs
arpl
popa
xor
aaa
aaa
xor
cmp
aaa
cmp
xor
xor
arpl
xor
cmp
xor
data16
popa
aaa
xor
popa
cmp
cmp
bound
arpl
popa
bound
bound
xor
xor
xor
ss
cmp
xor
xor
xor
fs
arpl
ss
bound
xor
xor
xor
bound
data16
arpl
bound
xor
add
arpl
cmp
xor
arpl
xor
cmp
fs
xor
ss
add
popa
ss
cmp
xor
xor
xor
xor
xor
xor
xor
xor
bound
xor
arpl
arpl
xor
xor
cmp
xor
cmp
xor
data16
xor
add
xor
fs
xor
cmp
popa
aaa
xor
arpl
xor
cmp
xor
cmp
xor
add
xor
xor
arpl
arpl
gs
cmp
arpl
gs
gs
popa
xor
xor
cmp
cmp
fs
bound
xor
arpl
fs
xor
xor
cmp
xor
xor
ss
aaa
xor
aaa
xor
xor
cmp
arpl
xor
popa
aaa
arpl
bound
bound
xor
xor
arpl
xor
ss
ss
cmp
xor
cmp
xor
cmp
xor
xor
bound
add
xor
cmp
popa
arpl
xor
cmp
xor
xor
popa
xor
popa
fs
arpl
ss
xor
cmp
fs
xor
cmp
gs
popa
xor
cmp
add
cmp
bound
xor
xor
xor
arpl
cmp
cmp
ss
xor
popa
xor
bound
popa
add
xor
xor
aaa
arpl
arpl
xor
bound
aaa
gs
xor
cmp
add
xor
arpl
xor
xor
fs
xor
cmp
arpl
xor
arpl
xor
xor
aaa
xor
xor
xor
cmp
xor
arpl
xor
xor
gs
xor
arpl
xor
bound
fs
xor
arpl
xor
xor
data16
xor
ss
xor
cmp
arpl
xor
data16
xor
popa
cmp
xor
xor
xor
xor
aaa
cmp
ss
add
popa
xor
bound
xor
cmp
bound
cmp
arpl
xor
add
xor
arpl
xor
xor
ss
aaa
cmp
popa
xor
xor
xor
arpl
xor
xor
fs
xor
popa
xor
xor
fs
add
xor
xor
xor
bound
bound
xor
xor
aaa
xor
xor
cmp
add
cmp
popaw
arpl
popa
bound
ss
gs
xor
cmp
xor
xor
xor
bound
bound
bound
xor
xor
cmp
xor
popa
xor
aaa
data16
add
ss
xor
xor
aaa
xor
xor
data16
cmp
arpl
xor
xor
cmp
arpl
xor
xor
gs
arpl
bound
xor
popa
xor
xor
add
xor
cmp
xor
xor
cmp
popa
aaa
xor
bound
cmp
fs
arpl
aaa
xor
cmp
aaa
xor
cmp
aaa
bound
xor
xor
bound
cmp
xor
arpl
bound
ss
cmp
xor
cmp
xor
bound
xor
add
xor
xor
xor
data16
xor
aaa
xor
gs
cmp
xor
xor
xor
arpl
xor
gs
data16
xor
xor
gs
aaa
xor
arpl
arpl
bound
arpl
cmp
xor
popa
cmp
bound
xor
cmp
cmp
bound
cmp
xor
add
arpl
data16
xor
popa
xor
cmp
xor
bound
data16
add
cmp
ss
popa
data16
xor
fs
bound
xor
aaa
popa
xor
xor
ss
bound
xor
cmp
ss
xor
xor
xor
arpl
add
cmp
cmp
xor
xor
bound
xor
xor
data16
xor
xor
arpl
xor
xor
popa
aaa
ss
xor
xor
xor
popa
xor
xor
arpl
xor
popa
arpl
xor
xor
xor
xor
xor
xor
arpl
bound
arpl
cmp
bound
cmp
xor
fs
cmp
xor
arpl
arpl
add
arpl
cmp
aaa
xor
cmp
bound
cmp
arpl
xor
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
je
pop
aaa
jp
add
je
inc
jb
ja
gs
fs
jo
gs
addr16
gs
popa
add
aaa
popa
arpl
ss
popaw
xor
cmp
bound
xor
bound
xor
xor
arpl
xor
cmp
cmp
cmp
cmp
cmp
cmp
xor
ss
bound
cmp
add
cmp
xor
xor
bound
xor
ss
popa
cmp
arpl
xor
xor
add
bound
ss
xor
xor
fs
xor
xor
xor
xor
arpl
cmp
gs
aaa
cmp
xor
xor
fs
popaw
arpl
xor
add
xor
cmp
xor
xor
xor
xor
xor
xor
cmp
xor
ss
add
xor
xor
aaa
xor
xor
fs
ss
aaa
cmp
xor
arpl
popa
bound
aaa
bound
cmp
xor
xor
xor
popa
xor
xor
xor
arpl
arpl
bound
bound
xor
aaa
aaa
xor
cmp
aaa
cmp
add
bound
xor
xor
gs
fs
cmp
xor
gs
gs
arpl
cmp
xor
xor
gs
xor
cmp
ss
xor
bound
xor
xor
addr16
arpl
aaa
xor
xor
popa
popa
popa
xor
xor
xor
aaa
popa
ss
cmp
xor
cmp
add
je
arpl
cmp
fs
xor
xor
fs
xor
fs
xor
arpl
bound
add
je
arpl
xor
xor
cmp
cmp
bound
xor
xor
xor
xor
cmp
cmp
addr16
arpl
xor
bound
cmp
popa
aaa
xor
cmp
ss
xor
ss
bound
xor
addr16
arpl
xor
bound
xor
aaa
bound
cmp
arpl
xor
xor
arpl
xor
gs
arpl
cmp
aaa
bound
xor
arpl
popa
xor
xor
cmp
xor
xor
aaa
xor
xor
addr16
arpl
xor
xor
arpl
aaa
cmp
xor
fs
xor
cmp
cmp
add
je
arpl
xor
aaa
xor
fs
xor
xor
arpl
xor
popa
popa
xor
xor
xor
add
je
arpl
popa
xor
xor
xor
xor
popa
xor
arpl
xor
xor
arpl
xor
add
je
arpl
xor
bound
gs
xor
xor
xor
xor
ss
xor
addr16
arpl
cmp
aaa
xor
xor
xor
xor
cmp
xor
xor
fs
popa
add
je
arpl
xor
xor
xor
cmp
xor
cmp
bound
xor
xor
xor
add
je
arpl
xor
cmp
xor
cmp
xor
aaa
xor
xor
xor
data16
popa
xor
xor
add
je
arpl
fs
data16
xor
arpl
cmp
xor
bound
xor
xor
cmp
addr16
arpl
xor
aaa
xor
xor
popa
ss
xor
xor
cmp
xor
xor
xor
cmp
add
bound
xor
aaa
xor
xor
xor
arpl
arpl
ss
bound
arpl
add
popa
bound
xor
popa
cmp
xor
cmp
xor
xor
xor
arpl
xor
add
xor
popa
arpl
cmp
arpl
cmp
cmp
xor
aaa
gs
xor
add
cmp
bound
xor
xor
ss
cmp
bound
xor
xor
aaa
xor
xor
arpl
bound
xor
fs
cmp
xor
arpl
xor
arpl
gs
cmp
xor
arpl
xor
fs
data16
xor
xor
xor
bound
xor
add
data16
xor
gs
xor
popa
ss
cmp
cmp
aaa
cmp
cmp
cmp
cmp
arpl
cmp
xor
xor
xor
gs
cmp
gs
arpl
aaa
xor
add
xor
xor
cmp
cmp
xor
xor
bound
aaa
xor
xor
bound
aaa
xor
xor
xor
popa
popa
arpl
cmp
aaa
fs
popa
xor
arpl
bound
aaa
bound
xor
add
bound
xor
xor
xor
cmp
xor
arpl
xor
popa
bound
cmp
cmp
xor
arpl
xor
xor
arpl
xor
xor
cmp
xor
bound
cmp
xor
arpl
cmp
popa
xor
xor
bound
popa
fs
xor
arpl
gs
bound
xor
fs
xor
xor
xor
xor
fs
arpl
add
aaa
xor
popa
xor
cmp
xor
xor
xor
aaa
ss
arpl
xor
xor
cmp
xor
popa
cmp
aaa
bound
bound
aaa
xor
xor
cmp
xor
arpl
add
xor
aaa
cmp
gs
xor
xor
cmp
cmp
xor
xor
xor
arpl
arpl
xor
xor
cmp
xor
xor
arpl
xor
popa
cmp
xor
add
xor
xor
ss
bound
cmp
xor
popa
xor
data16
xor
xor
arpl
xor
xor
gs
xor
bound
xor
xor
xor
xor
xor
arpl
xor
arpl
data16
popa
xor
cmp
xor
xor
aaa
cmp
aaa
arpl
aaa
bound
add
bound
xor
cmp
xor
xor
cmp
xor
popa
bound
data16
bound
cmp
add
popa
xor
arpl
cmp
xor
ss
cmp
bound
xor
xor
xor
arpl
xor
bound
xor
xor
xor
xor
aaa
xor
add
popa
cmp
popa
xor
popa
xor
cmp
bound
xor
xor
fs
xor
arpl
xor
xor
arpl
ss
cmp
xor
xor
xor
popa
xor
xor
bound
xor
xor
popa
bound
arpl
arpl
xor
aaa
arpl
xor
gs
xor
popa
data16
ss
xor
aaa
xor
xor
xor
xor
arpl
xor
xor
bound
xor
xor
arpl
ss
data16
gs
xor
xor
aaa
bound
xor
gs
add
arpl
xor
cmp
xor
xor
cmp
xor
xor
bound
add
xor
cmp
cmp
xor
xor
xor
xor
arpl
xor
xor
aaa
xor
arpl
xor
xor
fs
xor
xor
xor
xor
cmp
arpl
xor
arpl
popa
popa
xor
xor
gs
ss
bound
xor
cmp
ss
arpl
xor
xor
data16
xor
popa
arpl
cmp
gs
xor
xor
add
xor
arpl
fs
xor
popa
data16
arpl
bound
add
ss
ss
bound
xor
fs
xor
xor
gs
popa
jae
inc
jb
outs
jb
inc
ins
outs
jae
dec
popa
outs
fs
add
outs
push
jb
arpl
jae
inc
gs
jne
jb
outs
je
jb
arpl
jae
add
fs
imul
inc
gs
jb
arpl
fs
jae
add
je
ins
popa
jae
dec
popa
ins
add
outs
arpl
jae
gs
gs
add
je
dec
jae
gs
popa
bound
inc
imul
push
jne
jo
outs
fs
push
add
jae
ins
gs
push
add
outs
push
push
add
push
jne
jo
outs
fs
jb
arpl
jae
inc
gs
outs
fs
gs
imul
js
inc
gs
jb
arpl
jae
ins
popa
addr16
imul
push
jne
jb
inc
jne
ins
push
jb
arpl
jae
ins
popa
addr16
popa
ins
add
gs
inc
outs
jae
gs
arpl
push
gs
jo
outs
dec
gs
js
push
gs
jb
popa
je
dec
gs
js
push
gs
gs
popa
ins
jne
inc
js
push
gs
ins
outs
jae
dec
gs
push
gs
jne
jb
push
popa
ins
jne
inc
js
push
gs
gs
gs
dec
gs
push
gs
gs
gs
push
popa
ins
jne
add
addr16
outs
jne
dec
gs
js
push
gs
outs
jne
push
popa
ins
jne
add
addr16
jne
jb
dec
outs
outs
dec
gs
inc
gs
jns
je
ins
dec
gs
imul
gs
imul
push
outs
ja
xor
jb
arpl
jae
inc
gs
jne
jb
outs
je
jb
arpl
jae
inc
gs
outs
fs
gs
popa
outs
fs
add
je
popa
jae
inc
jb
outs
jb
dec
jo
outs
push
jb
arpl
jae
outs
imul
inc
jne
ins
imul
imul
js
inc
jb
popa
je
inc
outs
jbe
jb
outs
ins
outs
je
ins
outs
arpl
inc
gs
jb
jns
outs
jbe
jb
outs
ins
outs
je
ins
outs
arpl
push
popa
imul
ins
gs
bound
arpl
gs
js
je
outs
fs
jb
arpl
jae
inc
jb
popa
je
push
jb
arpl
jae
jae
jae
jb
dec
outs
arpl
inc
jo
inc
popa
je
push
popa
je
add
popa
ins
imul
popa
je
push
popa
je
add
imul
outs
je
imul
add
imul
add
ins
add
jb
ins
gs
jb
add
outs
je
inc
push
outs
imul
jns
add
ins
jne
add
outs
jbe
jb
gs
add
fs
je
je
outs
outs
add
fs
je
push
jne
je
dec
popa
ins
add
ins
je
jb
add
jp
add
outs
ja
gs
fs
jo
gs
gs
popa
add
push
add
add
je
dec
popa
jae
popa
ins
jne
add
jo
outs
add
je
outs
jne
gs
je
jb
addr16
inc
jne
jb
outs
je
dec
jae
jne
ins
dec
jb
ins
jo
jns
push
gs
popa
arpl
dec
outs
jbe
dec
gs
add
gs
jb
addr16
inc
jne
jb
outs
je
outs
ins
popa
imul
push
gs
jne
arpl
gs
ins
jbe
add
fs
inc
jae
gs
bound
gs
ins
jbe
add
je
js
arpl
imul
ins
bound
dec
outs
popa
add
popa
jb
jae
imul
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
je
inc
jne
ins
dec
popa
ins
add
fs
data16
bound
jb
outs
add
outs
arpl
add
je
popa
outs
imul
jae
jne
arpl
popa
ins
gs
inc
gs
outs
jbe
jb
outs
ins
outs
je
popa
jb
popa
bound
inc
gs
outs
ins
fs
popa
je
add
je
gs
imul
add
je
inc
imul
outs
outs
add
jb
popa
je
push
gs
outs
jbe
add
outs
ja
jb
inc
outs
outs
je
imul
pop
inc
outs
jne
je
inc
gs
gs
add
imul
ins
bound
add
ja
jne
add
je
inc
jo
push
gs
imul
je
dec
je
ins
add
jb
add
je
inc
gs
jne
je
inc
gs
je
imul
pop
push
outs
je
ins
push
arpl
fs
push
ins
gs
push
jo
imul
add
je
inc
popa
arpl
push
outs
ins
imul
push
gs
outs
outs
jae
add
je
push
je
je
jae
outs
fs
je
gs
outs
outs
jae
push
je
gs
ins
add
je
inc
outs
outs
je
outs
je
outs
addr16
add
popa
fs
jns
gs
addr16
dec
gs
fs
add
je
push
push
inc
cmp
inc
gs
jns
gs
jae
je
dec
gs
outs
add
je
inc
outs
outs
je
outs
je
jns
add
je
inc
outs
outs
je
outs
je
outs
addr16
add
je
push
imul
inc
gs
gs
gs
push
je
gs
ins
add
imul
inc
push
addr16
dec
outs
addr16
add
fs
imul
inc
popa
jae
ss
je
imul
outs
je
xor
push
outs
dec
outs
je
xor
push
outs
push
imul
outs
inc
outs
jne
ins
add
outs
arpl
outs
jo
add
je
push
outs
imul
outs
je
jb
add
je
dec
push
push
gs
imul
pop
push
ins
popa
je
outs
jb
add
je
push
gs
imul
inc
jb
popa
je
jb
push
inc
jno
popa
ins
add
je
dec
popa
push
jb
addr16
dec
imul
outs
add
imul
gs
fs
outs
je
xor
inc
gs
imul
jns
popa
ins
add
je
imul
inc
imul
imul
je
outs
jae
outs
outs
add
je
imul
imul
popa
je
inc
imul
jns
addr16
inc
popa
jae
inc
imul
jns
jae
je
inc
imul
jae
je
inc
jb
jne
outs
je
add
je
push
jae
push
push
js
arpl
add
je
inc
jb
popa
je
dec
outs
push
imul
gs
push
je
jb
dec
outs
outs
add
imul
je
push
gs
fs
ins
ins
push
gs
add
popa
jae
ss
je
imul
je
inc
ins
ins
push
gs
add
dec
outs
ja
jb
push
outs
push
jo
gs
inc
outs
ins
jo
je
dec
popa
jae
add
push
popa
jb
add
outs
ja
jb
outs
jbe
jb
popa
outs
je
addr16
inc
push
inc
dec
dec
add
popa
fs
ins
ins
dec
imul
outs
fs
outs
fs
dec
outs
jae
jb
add
je
dec
je
ins
add
jb
popa
jns
push
jb
je
inc
ins
ins
dec
imul
je
push
outs
jae
je
outs
outs
add
js
inc
jns
gs
inc
gs
jne
data16
push
gs
jb
add
je
jb
inc
js
je
push
gs
fs
jns
add
je
dec
push
add
je
dec
gs
jae
je
inc
popa
jo
arpl
jns
jae
je
push
outs
jae
je
outs
outs
add
gs
je
inc
arpl
jo
outs
jb
addr16
dec
outs
jo
je
ins
outs
arpl
imul
pop
dec
jne
jo
je
ins
outs
arpl
imul
outs
jae
outs
jb
inc
ins
outs
arpl
push
jb
outs
jae
outs
jb
inc
imul
arpl
popa
fs
inc
push
add
fs
inc
gs
gs
add
fs
push
outs
popa
ins
gs
je
dec
outs
je
data16
imul
je
inc
outs
popa
bound
popa
imul
outs
je
add
je
inc
outs
popa
bound
popa
imul
outs
je
add
popa
fs
ins
ins
inc
jns
gs
inc
gs
imul
push
jb
je
inc
ins
ins
inc
jns
gs
inc
gs
gs
jo
imul
dec
outs
jbe
add
je
inc
jne
ins
push
popa
je
add
jae
js
outs
jae
outs
outs
add
ins
jo
jb
push
outs
add
ins
jo
jb
add
je
inc
popa
jo
arpl
jns
addr16
dec
jae
je
popa
arpl
add
jb
add
je
inc
js
jae
jae
inc
outs
outs
je
imul
inc
gs
popa
ins
add
je
inc
outs
fs
popa
jae
add
je
dec
outs
arpl
push
popa
je
add
je
dec
jae
ins
imul
jb
add
je
push
imul
pop
dec
gs
push
push
gs
dec
outs
jbe
jb
popa
outs
je
jne
je
jb
add
je
jns
gs
outs
fs
je
jns
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
outs
fs
gs
addr16
dec
outs
fs
gs
popa
outs
fs
add
jae
ins
jbe
push
jns
gs
popa
outs
fs
add
jae
ins
jbe
dec
gs
outs
fs
popa
outs
fs
add
je
gs
outs
fs
jb
ins
dec
popa
outs
fs
add
je
imul
gs
gs
outs
fs
outs
fs
addr16
inc
arpl
imul
add
je
push
gs
jb
push
jns
add
inc
gs
popa
ins
jne
add
je
jns
popa
ins
imul
outs
add
gs
je
inc
gs
gs
je
add
je
popa
ins
jne
add
je
outs
fs
je
outs
arpl
push
popa
jb
imul
jb
addr16
dec
outs
arpl
push
popa
jb
popa
bound
add
je
dec
outs
arpl
push
jns
add
je
dec
jae
imul
fs
jb
jne
outs
je
inc
gs
imul
add
je
outs
arpl
push
imul
add
je
outs
imul
outs
jb
push
gs
js
gs
imul
je
popa
jb
ins
gs
jb
add
je
dec
jae
je
je
arpl
addr16
dec
jae
popa
ins
jne
push
jns
add
imul
push
gs
jns
add
je
push
popa
jb
ins
gs
jb
jns
add
je
popa
ins
jne
add
je
dec
outs
fs
add
je
outs
gs
arpl
addr16
outs
je
add
jo
addr16
dec
jo
jb
outs
fs
jns
add
jae
ins
jbe
push
je
imul
pop
push
imul
outs
ins
jbe
push
imul
add
jae
ins
jbe
dec
gs
outs
add
je
dec
gs
outs
fs
popa
outs
fs
add
je
push
jns
gs
popa
outs
fs
add
jae
ins
jbe
inc
imul
je
inc
imul
fs
add
jae
ins
jbe
push
jns
add
jae
ins
jbe
dec
gs
bound
add
je
dec
gs
bound
push
jns
add
ins
jo
jb
inc
js
push
add
gs
jb
gs
fs
add
gs
jb
outs
outs
je
outs
je
addr16
dec
jne
jo
je
addr16
push
gs
outs
outs
jae
add
fs
jb
outs
jb
addr16
inc
jb
outs
jb
push
gs
outs
jbe
inc
je
push
gs
jae
push
jo
arpl
dec
jae
gs
gs
jb
imul
dec
jne
bound
add
dec
gs
gs
inc
outs
ins
jo
jb
dec
jb
imul
je
outs
outs
jbe
jb
gs
inc
popa
outs
inc
outs
outs
jbe
jb
inc
jb
ins
add
outs
jbe
jb
push
outs
dec
outs
jbe
jb
popa
outs
je
je
imul
jbe
jb
inc
jb
ins
dec
outs
jbe
jb
popa
outs
je
je
imul
jae
imul
inc
jb
ins
add
outs
jbe
jb
inc
jb
ins
add
inc
imul
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
inc
popa
outs
inc
outs
outs
jbe
jb
push
outs
add
jo
push
outs
add
je
dec
gs
addr16
dec
gs
imul
jns
inc
gs
popa
ins
jne
dec
jb
gs
jne
je
dec
popa
js
dec
imul
dec
jae
jb
popa
jns
inc
gs
outs
outs
jae
jb
arpl
jae
addr16
inc
ins
imul
imul
inc
popa
ins
ins
bound
imul
outs
je
gs
outs
arpl
addr16
dec
jae
outs
jne
add
je
imul
je
inc
gs
jb
jo
imul
pop
dec
jae
bound
jb
arpl
gs
dec
jae
outs
je
jb
popa
arpl
addr16
dec
jae
outs
gs
arpl
gs
imul
outs
outs
add
je
outs
outs
jae
jb
arpl
add
je
dec
jae
outs
gs
arpl
add
je
outs
gs
arpl
gs
imul
outs
outs
add
je
dec
jae
ins
popa
jae
add
je
outs
fs
popa
jb
ins
gs
jb
add
je
outs
je
jb
popa
arpl
add
je
inc
popa
jae
push
jns
add
je
ins
gs
outs
je
jns
add
je
inc
imul
add
je
push
jb
jo
jb
jns
jns
add
je
inc
jbe
outs
je
popa
outs
fs
gs
jns
add
je
gs
bound
add
je
inc
popa
outs
push
gs
add
je
inc
popa
outs
push
jb
je
add
fs
popa
outs
add
je
jb
jo
jb
imul
inc
jne
je
ins
inc
je
jb
bound
gs
addr16
inc
jae
gs
bound
inc
imul
gs
add
imul
outs
gs
arpl
add
ins
inc
outs
add
je
dec
jae
jne
ins
add
imul
push
gs
fs
imul
jo
gs
outs
jbe
jb
popa
outs
je
push
jb
ins
add
je
jb
arpl
jae
jae
jns
popa
ins
add
je
push
push
jae
addr16
dec
add
outs
jae
dec
popa
imul
ja
dec
imul
dec
popa
jae
js
je
add
je
jne
jb
outs
je
addr16
push
jae
jb
addr16
dec
popa
imul
add
je
inc
imul
addr16
dec
popa
outs
fs
add
je
jb
arpl
jae
jae
inc
gs
outs
imul
jbe
jae
dec
outs
jbe
imul
je
outs
add
push
jb
jns
dec
popa
jae
dec
outs
fs
data16
imul
push
imul
outs
ja
popa
je
push
imul
ins
inc
imul
dec
gs
add
jo
outs
fs
gs
add
je
push
je
dec
outs
ja
addr16
inc
jne
jb
outs
je
push
add
je
dec
popa
outs
popa
addr16
push
dec
add
jb
add
ja
push
jb
outs
arpl
add
gs
popa
jo
inc
popa
je
push
je
imul
inc
jae
gs
bound
popa
ins
add
je
push
jb
arpl
jae
popa
ins
add
jp
dec
data16
je
popa
jae
push
imul
outs
jb
addr16
push
je
jb
dec
outs
outs
add
je
push
gs
popa
outs
fs
jb
dec
jne
jo
je
jae
je
push
gs
popa
outs
fs
jb
inc
jb
outs
jb
addr16
push
je
outs
fs
jb
dec
jne
jo
je
addr16
inc
outs
fs
push
je
gs
ins
add
jo
outs
fs
imul
pop
push
je
outs
fs
jb
inc
jb
outs
jb
push
jb
ins
push
je
jb
add
je
jb
arpl
jae
jns
add
je
push
inc
ins
outs
bound
push
jb
jo
jb
imul
inc
arpl
gs
fs
imul
jae
addr16
push
outs
jb
add
je
arpl
gs
arpl
outs
outs
outs
arpl
outs
jae
addr16
push
gs
outs
je
inc
outs
fs
outs
imul
outs
jae
popa
je
add
je
dec
gs
add
imul
add
je
jb
jne
je
push
gs
outs
arpl
jno
popa
ins
jae
inc
gs
bound
arpl
popa
fs
gs
addr16
inc
jb
jne
jae
add
xchg
push
lock
std
dec
mov
cmp
or
xor
mov
mov
pop
jg
aad
cmp
sbb
adc
sbb
adc
sbb
adc
adc
sbb
add
add
add
push
add
adc
adc
push
add
add
push
add
add
add
add
sbb
and
add
adc
adc
add
adc
push
or
push
adc
add
add
add
add
add
add
add
add
add
adc
add
push
add
add
sbb
push
adc
add
add
adc
loope
add
push
adc
add
cmp
add
add
push
add
and
sub
add
adc
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
adc
adc
push
adc
push
add
push
push
adc
pop
add
sbb
or
add
adc
add
add
push
or
add
push
adc
add
add
adc
push
add
push
add
adc
add
add
push
and
add
push
push
add
add
push
add
sbb
or
add
add
or
add
add
add
add
sbb
add
cmp
add
adc
inc
add
add
fld
add
or
add
adc
pop
push
adc
push
add
add
add
add
add
add
add
push
push
add
add
adc
or
add
push
adc
adc
adc
pop
add
sbb
pop
add
sbb
or
add
mov
push
adc
add
add
add
and
add
sbb
add
and
push
and
add
adc
add
fld
push
or
add
or
add
sbb
add
sbb
or
add
add
add
add
push
push
add
adc
push
pop
add
adc
add
adc
add
adc
add
adc
add
adc
add
or
sbb
add
or
adc
add
sbb
sub
and
add
sub
add
add
adc
ins
pop
and
add
cmp
jl
and
adc
add
cmp
mov
adc
or
add
sbb
sbb
and
je
adc
mov
adc
je
adc
adc
sbb
and
or
or
sub
sbb
adc
or
or
and
adc
or
adc
adc
sbb
and
or
or
or
sub
or
or
add
sub
sub
sbb
and
add
sbb
and
add
sbb
sbb
adc
and
adc
sbb
and
add
sub
cmp
add
or
and
or
adc
or
add
sub
add
adc
adc
or
sbb
and
sub
add
add
add
sbb
and
add
and
movs
adc
or
and
sub
and
add
add
add
or
adc
add
adc
adc
add
add
sbb
and
sbb
add
or
adc
push
adc
or
sbb
add
adc
add
add
add
add
add
push
adc
push
push
add
add
pop
add
add
or
add
or
add
or
add
or
add
push
or
add
add
add
push
adc
push
adc
push
push
add
add
sbb
add
push
sbb
add
or
add
sbb
sbb
add
sbb
pop
add
sbb
adc
add
add
or
add
push
add
sbb
add
sbb
adc
rol
add
adc
add
sbb
cmp
cmp
add
or
adc
add
or
or
add
adc
adc
or
add
adc
or
add
adc
adc
add
or
sbb
add
push
sbb
push
adc
or
push
sbb
and
add
add
add
and
add
or
add
adc
add
sbb
adc
add
sub
adc
push
and
add
adc
push
adc
add
adc
cmp
add
adc
adc
adc
add
add
add
hlt
add
mov
adc
adc
add
add
add
add
and
add
xor
and
add
xor
add
add
add
and
adc
add
add
and
add
adc
sub
push
adc
adc
adc
add
in
push
and
add
sub
and
adc
sbb
sbb
and
adc
or
add
cmp
add
adc
adc
or
add
adc
mov
add
or
add
cmp
and
adc
mov
add
add
add
adc
or
add
adc
add
adc
cmp
push
adc
adc
add
push
push
adc
add
adc
or
adc
adc
add
cld
add
add
and
add
add
xor
cmp
and
add
adc
add
add
add
or
add
or
add
or
and
add
push
add
add
pop
add
add
add
add
and
add
sbb
and
add
sbb
push
adc
add
adc
add
mov
adc
add
adc
or
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
or
or
adc
add
adc
push
add
add
or
or
or
adc
add
add
add
add
push
add
add
adc
add
adc
add
add
adc
add
add
add
add
adc
adc
push
add
push
add
adc
add
adc
adc
push
add
adc
push
add
adc
push
add
add
adc
add
add
adc
add
add
adc
add
push
add
adc
add
adc
add
adc
add
adc
add
add
add
add
push
add
add
adc
adc
push
add
add
add
add
sbb
ins
add
add
add
sbb
cmp
cmp
xchg
adc
add
adc
cmp
cmp
add
push
adc
push
or
add
adc
add
adc
push
add
push
push
add
add
add
add
add
or
add
add
and
adc
adc
adc
adc
or
add
sub
adc
adc
adc
adc
adc
or
add
sub
and
adc
adc
adc
adc
adc
adc
push
and
add
add
add
and
and
adc
adc
add
adc
push
add
push
add
add
add
push
or
add
adc
adc
add
sbb
add
add
sbb
add
add
cmp
add
adc
adc
cmp
cmp
mov
or
add
cmp
add
cmp
add
adc
adc
push
adc
adc
push
adc
pop
add
sbb
cmp
adc
adc
add
cmp
add
cmp
or
add
sub
add
sub
sbb
lods
add
add
push
adc
adc
cmp
mov
xor
cmp
cmp
cmp
sldt
sbb
cmp
cmp
push
push
push
push
add
add
adc
add
add
adc
push
add
add
adc
adc
add
or
add
push
push
or
or
add
adc
adc
push
push
adc
push
add
push
push
or
push
add
adc
add
or
pop
add
add
or
add
or
adc
push
adc
sbb
add
add
cmp
add
add
or
add
add
add
push
pop
add
add
add
adc
add
add
add
push
push
add
add
push
push
pop
adc
add
push
add
pop
add
add
adc
add
push
push
pop
and
add
adc
push
add
add
sbb
add
sbb
sbb
adc
add
sbb
adc
add
sbb
adc
sbb
adc
add
or
adc
add
sbb
add
add
or
push
add
add
push
add
or
add
push
or
push
adc
add
adc
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
or
or
add
or
push
or
or
or
or
or
add
or
push
or
sbb
add
or
push
or
push
or
or
add
or
push
str
or
or
adc
adc
push
add
or
or
adc
sbb
add
or
adc
sbb
adc
sbb
sbb
adc
add
push
push
push
add
add
or
or
push
add
push
push
sbb
add
add
sbb
push
push
pop
add
sbb
push
add
add
push
add
adc
push
sbb
push
add
add
push
sbb
push
or
add
adc
push
push
add
add
adc
or
push
push
or
add
sub
or
add
sub
add
add
push
push
pop
add
sbb
push
add
push
push
add
add
push
add
add
sbb
add
sbb
or
add
adc
add
adc
adc
or
push
add
push
sbb
add
add
adc
add
add
add
add
add
add
add
add
adc
add
or
or
add
add
adc
add
sub
adc
adc
add
push
adc
add
adc
add
add
add
add
push
add
sub
add
push
push
add
add
push
add
add
adc
push
push
add
adc
add
adc
or
add
or
adc
js
jo
ins
add
jb
add
pop
add
push
push
add
pop
add
or
push
add
add
add
push
add
xor
or
push
push
add
add
add
add
sbb
add
add
adc
add
add
adc
test
sbb
mov
sbb
add
add
sbb
add
or
add
add
adc
sbb
or
sbb
push
adc
add
adc
add
push
add
adc
adc
pop
push
adc
push
add
adc
jo
add
je
add
pop
add
jb
outs
add
jae
add
inc
add
add
je
add
add
adc
sub
push
adc
adc
adc
add
and
add
adc
push
or
add
or
adc
sbb
and
add
adc
add
add
and
push
adc
or
push
add
or
adc
push
add
sub
sub
add
mov
add
add
add
add
inc
ins
ins
outs
ja
jne
je
jo
add
sub
sub
add
hlt
add
add
mov
sub
sub
adc
adc
adc
or
jmp
add
add
add
and
add
cmp
and
add
push
inc
add
xor
jae
gs
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
push
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
add
or
add
add
pop
adc
push
add
push
add
add
pop
add
adc
xor
adc
adc
adc
and
adc
add
adc
push
adc
push
add
push
add
add
adc
pop
add
push
pop
add
adc
add
adc
adc
adc
adc
add
adc
xor
push
pop
add
adc
pop
add
or
add
add
or
sbb
pop
add
adc
add
add
push
push
push
push
push
add
push
adc
push
adc
push
push
adc
adc
and
push
adc
push
push
push
adc
add
cmp
cmp
adc
sbb
push
adc
sbb
push
adc
sbb
push
adc
sbb
add
add
push
sbb
and
add
adc
jge
adc
pop
adc
adc
or
pop
push
push
push
push
push
push
adc
adc
ins
adc
jge
push
push
push
adc
add
add
jge
adc
adc
or
add
sbb
add
adc
add
add
push
adc
add
add
cmp
cmp
adc
adc
add
add
sub
sub
adc
adc
adc
adc
or
add
adc
push
pop
add
adc
adc
pop
add
sub
add
push
push
sbb
add
or
add
test
adc
push
adc
push
adc
adc
push
or
add
push
add
jne
and
push
sbb
sbb
add
push
or
sbb
add
add
adc
push
push
push
push
push
or
add
push
sbb
sbb
sub
add
push
sbb
pop
pop
or
adc
adc
push
or
sbb
and
push
and
add
xor
adc
adc
adc
adc
add
xor
add
adc
or
add
add
or
pop
push
push
adc
push
or
adc
push
adc
push
sbb
adc
adc
add
add
sbb
pop
add
or
or
add
or
and
adc
add
push
adc
or
add
or
pop
add
inc
adc
adc
push
adc
inc
pop
adc
adc
pop
add
sbb
add
push
pop
and
push
sbb
add
or
add
sbb
add
add
add
adc
or
inc
adc
cmp
adc
adc
adc
adc
adc
js
adc
pop
adc
cmp
add
cmp
sbb
adc
or
add
fld
and
or
or
add
cmp
add
add
adc
adc
push
add
add
add
add
add
add
sbb
and
add
sbb
pop
add
add
add
or
sub
sbb
sbb
or
add
sbb
add
sbb
or
push
adc
push
adc
add
add
adc
add
adc
push
sbb
push
adc
sbb
pop
add
push
adc
pop
or
push
push
sbb
add
sbb
and
sbb
add
push
sbb
pop
sub
push
push
push
push
push
or
sbb
push
push
add
or
or
adc
push
sbb
adc
push
adc
or
adc
push
or
push
or
add
add
adc
or
add
jne
and
add
add
adc
push
or
add
adc
adc
or
add
or
adc
push
and
add
adc
add
or
add
add
add
sbb
or
add
push
adc
or
add
adc
or
add
sub
adc
or
adc
sbb
or
push
or
add
adc
add
or
or
or
or
add
add
push
or
or
add
or
adc
sbb
add
adc
add
add
pop
add
adc
or
adc
add
cmp
sbb
or
or
sbb
add
or
and
adc
or
add
sbb
or
and
add
xor
mov
sub
and
add
sub
pop
add
sbb
add
sbb
push
pop
add
or
add
sbb
adc
add
and
adc
adc
or
add
sbb
sbb
adc
or
sbb
pop
add
ins
adc
add
pop
sbb
sbb
add
xchg
adc
or
adc
sbb
add
sbb
pop
push
push
adc
imul
sub
adc
adc
ins
adc
cmp
cmp
ins
adc
adc
push
pop
or
adc
imul
sbb
adc
add
cmp
mov
and
add
add
add
cmp
add
add
add
sbb
adc
or
pop
add
or
xor
or
sbb
pop
add
cmp
sbb
adc
or
add
adc
or
add
or
jge
adc
add
cmp
adc
cmp
cmp
or
adc
add
add
push
add
imul
add
sub
jge
adc
adc
sbb
push
adc
sbb
add
sbb
add
and
or
and
adc
add
adc
add
add
adc
add
push
or
add
adc
add
and
add
add
add
add
and
add
add
add
fld
pop
add
push
add
push
sbb
sbb
add
add
sbb
sbb
and
push
push
adc
adc
add
ror
adc
or
add
cmp
add
add
push
add
add
adc
or
mov
sbb
sbb
pop
add
xor
pop
or
sbb
adc
or
adc
or
and
add
add
and
adc
adc
sbb
sub
lea
add
adc
mov
sub
sub
or
and
adc
add
and
add
and
add
add
lds
and
mov
adc
add
adc
adc
add
mov
and
adc
add
sbb
pop
add
or
push
and
add
add
sbb
jno
adc
adc
adc
xor
jno
adc
pop
adc
xor
adc
add
cmp
sbb
adc
or
and
add
adc
sbb
sbb
or
and
sbb
pop
add
adc
or
add
add
add
add
int
and
sbb
pop
or
or
sub
mov
add
sub
push
adc
adc
or
adc
cmp
and
adc
adc
or
and
add
sub
sbb
and
adc
or
and
and
adc
cmp
and
adc
cmp
and
adc
adc
adc
adc
adc
adc
add
add
push
add
add
add
add
and
adc
add
pop
and
add
adc
add
and
and
adc
add
sbb
adc
jge
adc
adc
add
add
loopne
pop
add
add
hlt
add
add
add
pop
add
sysret
add
add
adc
add
push
add
add
sbb
pop
add
push
sbb
xor
add
or
adc
or
or
add
cmp
cmp
pop
add
sub
add
cmp
or
add
add
xor
pop
add
cmp
add
adc
push
add
adc
add
sbb
and
sbb
cmp
pop
add
adc
adc
and
or
cmp
mov
add
add
adc
add
cmp
adc
add
or
adc
add
cmp
adc
adc
adc
adc
pop
pop
add
adc
adc
adc
or
add
pop
add
sub
and
or
add
mov
adc
jno
adc
sbb
adc
adc
sbb
and
add
sbb
sbb
or
add
push
adc
add
lea
pop
add
or
add
adc
or
add
and
add
or
or
or
or
or
xor
cmp
xor
cmp
pop
add
or
pop
add
adc
pop
and
adc
pop
add
adc
add
add
add
sbb
and
add
adc
add
adc
add
pop
add
or
or
add
or
or
or
or
or
or
or
adc
add
pop
add
push
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
push
add
add
adc
add
pop
add
add
add
adc
add
adc
add
pop
add
add
add
push
add
adc
push
add
pop
add
adc
push
add
push
add
adc
adc
push
add
adc
push
add
adc
adc
push
add
pop
add
adc
push
add
adc
add
or
adc
push
add
adc
adc
push
add
add
pop
add
add
push
adc
add
and
add
add
add
pop
add
push
add
adc
push
add
adc
push
add
add
add
pop
add
add
add
add
pop
add
add
sbb
or
adc
cmp
add
adc
adc
test
sbb
sbb
adc
adc
adc
adc
and
adc
add
sbb
cmp
adc
push
adc
push
add
add
add
xor
or
mov
sub
push
add
add
or
add
sub
mov
and
adc
add
xor
or
and
add
jge
adc
aad
pop
add
rol
mov
cmp
or
pop
push
adc
sbb
add
mov
sbb
pop
add
and
sbb
adc
add
mov
sbb
adc
sbb
sbb
add
push
adc
add
sbb
adc
cmp
sbb
add
adc
add
adc
add
cmp
add
adc
adc
sbb
or
adc
adc
mov
adc
or
or
or
adc
push
sbb
add
add
cmp
add
add
pop
add
cmp
add
cmp
push
adc
adc
add
push
add
push
add
push
pop
and
add
adc
push
push
adc
adc
push
and
add
adc
ror
pop
add
add
add
and
add
sbb
sbb
or
xor
cmp
sbb
adc
pop
add
sbb
add
add
xchg
sysret
add
icebp
adc
icebp
or
pop
add
push
adc
or
sbb
xor
push
push
sbb
pop
pop
add
pop
pop
add
pop
pop
add
add
cmc
push
pop
add
adc
sbb
add
add
push
pop
add
and
add
adc
push
adc
sbb
xor
sbb
push
add
sbb
pop
or
adc
push
push
sbb
adc
or
adc
adc
push
push
adc
add
and
adc
sbb
or
and
sbb
sbb
push
sbb
sbb
sbb
add
sbb
add
add
pop
or
or
sbb
jge
push
push
or
adc
add
sbb
add
add
or
or
or
or
sbb
adc
pop
add
or
or
pop
pop
or
add
push
push
or
add
or
adc
or
adc
pop
or
or
or
add
xchg
or
or
add
adc
or
adc
adc
add
adc
or
adc
push
push
sbb
or
or
xor
add
add
or
add
adc
add
sbb
add
adc
add
sbb
or
add
or
add
or
sub
sbb
sbb
sbb
pop
pop
adc
cmp
adc
adc
push
push
adc
adc
or
add
adc
adc
or
or
adc
adc
adc
sbb
push
push
or
add
or
add
sbb
add
adc
es
or
push
adc
sbb
adc
add
push
adc
sbb
adc
push
add
push
or
add
sbb
sub
sbb
sub
pop
push
push
sbb
or
sbb
push
or
xor
sbb
push
adc
or
pop
push
sbb
xor
adc
adc
xor
or
sbb
adc
adc
pop
pop
add
xor
xor
adc
add
cmp
xor
sbb
cmp
add
push
sbb
sbb
pop
or
adc
adc
adc
or
adc
push
or
add
adc
xor
or
or
or
pop
add
xor
adc
adc
adc
sbb
pop
add
push
adc
push
adc
push
add
sbb
pop
pop
add
sbb
add
add
add
pop
pop
push
adc
adc
sbb
or
or
adc
and
sbb
pop
add
adc
or
and
sbb
and
adc
adc
cmp
cmp
adc
adc
push
pop
or
push
sbb
or
pop
add
push
adc
pop
push
sbb
add
push
adc
push
add
add
sbb
adc
or
add
or
mov
cmp
sbb
adc
add
add
sbb
xor
add
pop
pop
add
or
adc
adc
add
or
and
adc
add
add
and
adc
add
add
adc
or
adc
or
pusha
push
adc
add
pop
add
sbb
xor
add
or
das
pop
push
push
sbb
push
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
adc
push
or
or
push
push
adc
push
push
adc
push
or
add
sub
sbb
sub
add
add
pop
and
add
adc
sbb
adc
pop
and
push
push
adc
add
sbb
add
or
adc
adc
adc
adc
pop
add
push
adc
or
pop
add
adc
xor
adc
push
push
sbb
xor
sbb
adc
push
sbb
xor
add
or
add
push
push
adc
push
sbb
xor
add
pop
pop
add
push
pop
add
xor
and
or
adc
adc
add
add
add
or
add
jge
add
add
pop
adc
and
xor
inc
add
add
cmp
xor
inc
add
add
add
sub
add
cmp
sub
add
add
add
add
xor
sub
add
aaa
add
xor
inc
add
add
cmp
cmp
inc
add
xor
and
adc
add
add
dec
add
inc
add
dec
add
inc
add
add
push
dec
add
dec
add
push
add
add
inc
add
dec
add
inc
add
add
push
dec
add
dec
add
push
add
add
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
bound
ins
add
arpl
imul
add
je
outs
add
add
cmp
add
inc
add
dec
add
inc
add
add
push
dec
add
dec
add
outs
add
add
pop
pop
add
outs
add
jb
jns
jo
je
add
add
pop
add
outs
add
ins
add
arpl
and
ins
add
je
push
add
add
add
jae
and
outs
add
je
and
jae
jne
jo
jo
outs
add
je
and
data16
jne
ins
add
add
ins
add
jne
jae
add
das
jne
outs
add
js
jo
add
je
add
add
jo
add
popa
add
add
add
add
add
add
add
add
add
add
into
push
adc
add
add
rcr
add
add
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
add
add
and
