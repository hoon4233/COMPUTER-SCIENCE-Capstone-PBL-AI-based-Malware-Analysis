(bad)
cmps
fcomp
jmp
adc
and
aaa
and
mov
xor
cwde
cli
inc
mov
cdq
lock
push
cwde
adc
addr16
adc
in
rcr
pop
xchg
nop
inc
cwde
in
xor
jge
daa
enter
xor
das
xchg
nop
ret
adc
mov
inc
or
call
cwde
nop
jp
(bad)
dec
in
int
pop
xor
inc
jmp
cwde
jns
(bad)
add
addr16
jb
mov
cmp
jmp
movs
fs
aaa
sbb
mov
into
inc
jmp
lds
xor
cmps
ficom
aaa
jp
sar
outs
push
mov
push
cwde
call
fucomp
sbb
jmp
int
adc
in
in
mov
xor
mov
in
pushf
mov
xor
push
push
pop
push
mov
cmp
jle
cwde
cwde
cld
arpl
sub
cwde
inc
jmp
addr16
sahf
sbb
mov
and
movs
das
jle
cwde
call
(bad)
dec
inc
xor
pop
jecxz
adc
outs
pop
addr16
pop
lods
cwde
lds
sti
xchg
cwde
addr16
cmp
ja
inc
push
movs
data16
inc
in
sbb
imul
mov
cwde
int3
pushf
mov
jecxz
xor
cwde
mov
jno
inc
cwde
and
jmp
jns
xor
xchg
addr16
jp
repnz
mov
cld
addr16
adc
mov
pop
sbb
addr16
push
scas
cmps
ficom
mov
cwde
adc
outs
jo
or
nop
jp
xchg
ror
pusha
and
mov
in
in
retf
in
mov
push
mov
addr16
mov
lods
add
cwde
sti
ret
adc
addr16
adc
cmp
dec
aaa
mov
sar
addr16
mov
adc
dec
pop
push
mov
aas
and
mov
add
adc
xor
(bad)
jnp
push
mov
addr16
cwde
adc
xor
inc
aaa
add
addr16
mov
adc
mov
cwde
jnp
cmps
ficom
(bad)
inc
pop
push
mov
addr16
or
in
mov
push
mov
and
pop
push
mov
and
cwde
adc
out
aad
out
(bad)
cmps
mov
les
adc
out
jge
push
imul
jmp
pushf
retf
out
inc
and
pop
in
mov
in
out
in
jmp
mov
nop
fistp
mov
mov
and
cmps
cwde
sti
lahf
cdq
jmp
xor
sbb
jae
sub
fwait
in
sti
fwait
adc
cmp
pop
cdq
adc
sahf
mov
in
sti
xchg
adc
pop
fucom
retf
bound
push
inc
mov
call
addr16
ds
cdq
adc
sahf
mov
push
inc
in
fstp
aaa
cmps
sbb
inc
daa
sbb
mov
and
cmp
addr16
mov
xchg
inc
push
mov
scas
pop
inc
aaa
and
mov
leave
cwde
adc
xor
cwde
retf
imul
scas
mov
movs
cmc
add
addr16
inc
out
pop
and
out
inc
cdq
addr16
mov
in
fstp
aaa
cmps
sbb
inc
daa
sbb
mov
mov
cdq
adc
cwde
clc
hlt
out
outs
clc
lods
out
pusha
cmp
int
xor
mov
adc
fild
popa
sbb
cmp
sbb
call
cmp
call
sbb
call
cdq
adc
cwde
sahf
cmp
in
inc
mov
in
inc
pop
call
dec
ja
int
pop
ss
adc
mov
adc
or
addr16
and
mov
adc
sub
add
out
pop
in
cmps
bound
sahf
xchg
je
dec
dec
aaa
movs
sbb
fucomip
mov
pop
inc
outs
push
outs
jbe
out
fucomp
aaa
and
outs
pop
pop
cmps
addr16
dec
in
pop
inc
aaa
sbb
mov
into
inc
xor
fwait
cwde
xor
push
and
fistp
fucomp
(bad)
xchg
jae
push
test
adc
mov
jno
ss
dec
lea
mov
lods
adc
out
pop
nop
jl
adc
mov
mov
push
inc
out
pop
adc
out
inc
bound
cld
adc
mov
out
mov
out
fucom
aaa
and
cmp
shr
out
jge
out
xor
inc
xor
jae
push
inc
sar
out
out
out
inc
adc
or
cld
addr16
push
jnp
push
mov
es
xchg
bound
dec
in
aad
mov
mov
xchg
fdivr
stos
and
aam
addr16
in
fwait
adc
out
fucomp
(bad)
cmps
(bad)
dec
in
pop
inc
aaa
or
in
xor
cwde
retf
outs
daa
jg
inc
lahf
xchg
dec
xor
adc
and
lock
and
gs
inc
out
fucomp
xor
(bad)
cld
addr16
sti
xchg
call
std
xor
sti
jno
addr16
cmp
out
pusha
in
out
fucomp
aaa
mov
pop
inc
aaa
or
jmp
xlat
lahf
lahf
lahf
out
jbe
addr16
in
retf
outs
jo
adc
call
addr16
addr16
inc
inc
adc
sti
xchg
cwde
adc
lahf
cdq
jmp
mov
adc
loope
ret
dec
jge
adc
in
xor
cwde
retf
outs
daa
faddp
repnz
xchg
dec
jne
adc
and
cmp
jle
cwde
inc
xor
in
ficom
inc
adc
aaa
lahf
mov
aaa
mov
adc
inc
xor
sti
jmp
dec
jge
adc
cmp
xor
data16
push
push
push
adc
mov
inc
cwde
call
(bad)
pop
mov
int3
cwde
adc
and
(bad)
xor
mov
addr16
aaa
lahf
test
shl
out
(bad)
mov
in
dec
call
addr16
aam
adc
scas
adc
cwde
call
add
aaa
and
jle
mov
pop
out
(bad)
loope
adc
inc
push
adc
inc
jae
adc
fbstp
js
outs
hlt
aaa
and
push
pop
sbb
add
aaa
and
jle
popf
and
jae
push
cmp
mov
mov
outs
in
inc
cwde
shl
cmp
dec
ja
int
pop
fild
push
adc
xor
fldcw
mov
adc
addr16
push
cwde
cwde
sti
imul
jle
cwde
call
movs
sar
cwde
adc
jg
sar
cwde
inc
xor
in
sar
cwde
adc
mov
lock
inc
addr16
sahf
cmp
addr16
mov
repnz
push
push
mov
cdq
addr16
push
push
arpl
inc
in
pop
sbb
nop
fwait
cmps
pop
push
mov
addr16
call
fucom
out
in
fstp
xor
pop
addr16
mov
sbb
jecxz
adc
addr16
xchg
pop
addr16
adc
xchg
xor
xor
adc
mov
(bad)
mov
out
(bad)
xor
push
nop
push
ja
hlt
pop
arpl
cwde
ret
outs
adc
adc
xor
retf
dec
test
xchg
cbw
data16
aaa
movs
sbb
addr16
inc
(bad)
cmps
pop
push
mov
adc
aaa
adc
inc
jae
adc
fwait
xchg
ror
push
adc
dec
test
xchg
push
data16
aaa
movs
adc
in
out
(bad)
pop
sar
addr16
ja
sti
fwait
xchg
ror
ins
adc
pop
sbb
addr16
adc
pop
nop
and
sbb
cmps
pop
push
mov
xor
push
dec
pop
fucomp
mov
mov
ss
ficom
mov
out
sbb
call
int
pop
ss
daa
jno
pop
jecxz
dec
ss
out
pusha
in
out
fucomp
aaa
mov
repnz
aam
repnz
addr16
adc
cwde
in
sbb
xor
mov
or
jo
adc
imul
cmp
pop
cdq
adc
sahf
adc
aam
adc
in
retf
imul
sahf
retf
cwde
adc
mov
sbb
xor
fs
aam
lock
dec
and
xor
mov
addr16
dec
loopne
push
shr
out
jge
push
addr16
xor
inc
add
in
popa
js
gs
inc
cwde
cwde
jnp
xchg
ficom
push
pop
xor
mov
cdq
addr16
cmp
jo
inc
cwde
addr16
mov
xchg
xchg
aaa
pusha
cwde
adc
mov
repnz
xor
mov
jb
data16
out
jmp
push
add
inc
in
pop
aas
mov
sbb
cmps
ficom
mov
cmp
xchg
or
adc
in
out
(bad)
pop
sar
addr16
iret
pop
aaa
and
adc
call
addr16
inc
out
pop
sahf
cmp
lock
and
addr16
inc
aaa
adc
inc
jae
adc
fwait
xchg
shl
addr16
dec
test
xchg
adc
test
xchg
jle
data16
out
(bad)
pop
sar
addr16
iret
imul
sbb
sbb
jnp
clc
fst
inc
rcr
inc
cwde
jo
inc
cwde
addr16
jp
adc
stc
out
and
cwde
cmp
sub
cld
addr16
sbb
es
inc
cwde
enter
ficom
out
in
mov
push
inc
outs
pop
sbb
cmp
scas
add
sbb
mov
call
cld
popa
cwde
adc
data16
and
addr16
inc
aaa
jo
inc
cwde
addr16
jp
adc
fsubr
and
call
das
xchg
adc
data16
sbb
enter
sbb
loop
in
inc
cwde
fadd
loop
in
inc
cwde
enter
fst
push
adc
mov
rcr
aad
bound
mov
addr16
jne
loop
in
inc
cwde
cwde
adc
xchg
xchg
dec
mov
rcr
sahf
mov
addr16
fst
push
in
outs
in
inc
in
pop
sbb
sahf
cmp
lock
es
sti
aam
addr16
cmp
out
inc
and
pop
sbb
loop
in
inc
cwde
adc
xor
fstp
cwde
nop
jbe
fcom
inc
in
sub
adc
outs
jne
fidiv
in
inc
cwde
(bad)
in
cmp
addr16
inc
push
data16
ds
popf
fstp
cwde
adc
cwde
adc
in
out
cmovs
inc
cwde
addr16
jp
sbb
lds
cwde
adc
gs
inc
cwde
cwde
cli
mov
movs
dec
jb
addr16
(bad)
mov
inc
in
inc
cwde
enter
addr16
inc
aaa
adc
inc
xor
call
ins
pop
mov
push
cwde
adc
loop
in
inc
cwde
enter
addr16
inc
aaa
adc
inc
xor
shl
sbb
data16
mov
outs
lock
loop
in
inc
cwde
adc
cmp
cwde
cwde
nop
add
addr16
inc
xchg
popf
jg
cwde
adc
mov
addr16
aam
jmp
inc
jo
aam
(bad)
addr16
inc
cbw
adc
cdq
addr16
xor
add
inc
cwde
enter
addr16
inc
aaa
adc
inc
xor
mov
cdq
addr16
(bad)
mov
push
mov
cdq
addr16
xor
addr16
adc
cmps
xchg
xchg
test
adc
loop
in
inc
cwde
enter
addr16
inc
aaa
adc
inc
lock
adc
(bad)
adc
loop
in
inc
cwde
adc
cmp
loop
adc
cwde
data16
out
in
sbb
inc
xor
out
fucomp
mov
xchg
xchg
add
cwde
adc
cmp
jnp
cmp
addr16
inc
out
pop
clc
cwde
jmp
xor
cwde
enter
iret
sub
and
dec
inc
call
sbb
xchg
push
dec
ret
adc
cdq
addr16
xor
cwde
enter
iret
aaa
aaa
and
push
cwde
call
addr16
inc
out
pop
nop
sbb
cmps
inc
cwde
data16
(bad)
xlat
pop
push
mov
cdq
addr16
push
nop
xor
mov
ret
inc
cwde
cwde
cli
dec
gs
adc
addr16
pop
addr16
call
addr16
inc
out
pop
in
or
sbb
inc
(bad)
jp
push
mov
cdq
addr16
push
xchg
xor
mov
mov
(bad)
aam
out
in
inc
gs
cwde
cmp
sbb
sahf
cmp
addr16
inc
aaa
adc
in
cmp
ficomp
xor
sbb
inc
cwde
sbb
scas
out
jg
mov
ret
push
cwde
data16
jmp
dec
adc
out
inc
in
out
sbb
call
sbb
nop
sbb
addr16
inc
addr16
xchg
mov
add
inc
cwde
enter
ficom
xor
cwde
enter
mov
mov
and
push
cwde
call
sbb
inc
xor
cwde
enter
iret
jg
and
push
cwde
nop
sbb
addr16
inc
addr16
mov
(bad)
cmp
data16
call
data16
mov
mov
cmp
inc
cwde
adc
xor
call
sahf
or
addr16
inc
in
add
and
mov
jmp
push
ja
hlt
pop
arpl
cwde
add
addr16
inc
xor
sub
xor
call
rcl
mov
cwde
data16
mov
out
pop
sahf
cmp
addr16
inc
aaa
lock
dec
and
addr16
inc
aaa
adc
inc
jae
adc
fwait
xchg
shl
sbb
data16
mov
addr16
sahf
cmp
addr16
inc
aaa
repnz
ins
in
inc
cwde
adc
out
in
mov
push
inc
out
inc
in
out
sbb
call
sbb
jne
fcmove
in
inc
cwde
nop
sbb
int
adc
cdq
adc
adc
cwde
gs
out
cwde
sub
sti
mov
mov
adc
aas
mov
jns
sbb
gs
mov
xchg
addr16
inc
cbw
adc
cdq
addr16
cmp
lock
cmp
jo
sbb
nop
jp
sbb
bnd
adc
jmp
inc
daa
sbb
mov
loop
in
inc
cwde
cmps
neg
aad
inc
cwde
enter
addr16
inc
jmp
out
(bad)
into
mov
addr16
mov
pop
(bad)
fldenv
nop
add
addr16
inc
addr16
adc
movs
loope
mov
cwde
data16
out
in
test
call
cwde
data16
xor
cwde
mov
in
mov
lods
in
inc
cwde
adc
out
in
test
call
push
cwde
adc
cwde
enter
into
sbb
je
inc
cwde
adc
xchg
je
inc
cwde
xchg
xchg
inc
fwait
addr16
cmp
cwde
cwde
mov
out
inc
cdq
adc
mov
adc
out
in
test
call
cwde
data16
mov
mov
in
inc
aaa
adc
inc
xor
adc
cdq
addr16
imul
push
data16
out
in
test
call
cwde
data16
out
in
test
call
cwde
data16
out
in
test
call
jge
adc
cwde
enter
into
sbb
pusha
in
inc
cmp
dec
ja
int
pop
or
ficom
(bad)
std
mov
add
adc
out
mov
nop
push
jg
inc
jmp
and
in
xchg
rol
pop
push
inc
addr16
adc
jnp
adc
aas
call
addr16
mov
cwde
adc
out
pusha
in
out
(bad)
xor
sbb
jp
ficom
mov
mov
addr16
push
dec
pop
push
pop
cbw
adc
in
std
sti
jns
inc
add
mov
adc
in
in
aaa
sbb
mov
addr16
loope
ret
xor
cwde
adc
addr16
pop
ss
mov
dec
xor
jmp
adc
inc
out
pop
in
retf
outs
lock
sbb
cwde
sti
jle
cwde
adc
xchg
jnp
call
cmp
add
mov
cwde
jns
pcmpeqd
(bad)
addr16
addr16
sbb
out
pusha
in
out
fucomp
aaa
mov
cwde
adc
cmp
jmp
jge
jmp
jle
jmp
lahf
adc
cmp
addr16
mov
clc
add
mov
and
test
push
mov
out
adc
in
adc
movaps
(bad)
bound
mov
pusha
cmp
pop
stos
mov
cmp
shr
out
jge
out
xor
inc
xor
cmp
cmp
adc
call
or
cld
addr16
inc
adc
sbb
cwde
call
cwde
adc
adc
out
pop
sbb
test
inc
mov
cwde
repz
push
mov
pushf
sub
arpl
int3
int3
mov
aad
push
cwde
adc
pushf
rol
push
in
int
js
mov
mov
ja
adc
out
pop
xchg
push
inc
fst
mov
movs
int
pop
fistp
addr16
and
inc
call
adc
xchg
dec
mov
jle
cwde
xchg
dec
push
out
mov
addr16
xchg
push
cmps
xchg
adc
and
into
adc
cdq
adc
(bad)
out
inc
cwde
adc
adc
arpl
call
fs
inc
out
pop
cwde
sti
outs
adc
cmp
cwde
cwde
stos
(bad)
cwde
adc
adc
aaa
movs
lock
sti
ret
adc
loop
in
inc
cwde
xchg
shl
addr16
and
addr16
inc
(bad)
pop
mov
cwde
data16
mov
in
or
inc
in
inc
cwde
jo
and
call
pop
cli
call
loop
in
inc
cwde
adc
aam
repnz
addr16
xchg
data16
aaa
and
mov
outs
pop
cmps
cwde
sub
sti
outs
stc
cwde
adc
mov
test
adc
out
pop
cwde
sti
xchg
adc
aaa
and
inc
call
adc
xor
push
in
inc
cwde
enter
cwde
in
retf
xchg
xchg
fwait
data16
aaa
and
jle
test
or
out
mov
cwde
data16
push
mov
pop
(bad)
mov
repz
push
mov
out
pop
cwde
cmp
cwde
call
cwde
call
jae
icebp
addr16
sahf
cmp
in
inc
aaa
adc
in
out
or
addr16
inc
cwde
or
call
data16
cmp
cwde
cld
fs
in
sbb
cwde
mov
mov
sbb
mov
cwde
call
sub
in
sub
fucomp
xor
out
fucomp
aas
movs
sub
addr16
mov
cwde
call
in
out
repnz
in
inc
cwde
adc
mov
mov
cs
adc
out
fucomp
aas
mov
rol
mul
jmp
aam
adc
in
out
or
xchg
in
aaa
and
data16
call
adc
mov
adc
in
out
jmp
aam
cmps
and
cmp
inc
cwde
adc
cwde
sbb
nop
add
addr16
inc
add
pop
mov
in
sub
loop
in
inc
cwde
adc
aaa
and
nop
jnp
cmp
fs
inc
out
pop
cwde
sti
fwait
sbb
mov
cwde
call
sub
in
sub
fucomp
aas
mov
mov
cwde
addr16
mov
in
fucom
xor
out
inc
in
out
sbb
call
int3
cwde
mov
cdq
addr16
cmp
addr16
inc
aaa
repnz
loop
in
inc
cwde
enter
addr16
inc
aaa
repnz
ins
in
sub
fs
inc
out
fucomp
cmp
cwde
cwde
call
fs
inc
out
pop
cwde
cmp
addr16
inc
in
cwde
call
adc
cmp
out
sbb
sahf
cmp
in
inc
aaa
adc
in
out
or
addr16
inc
cwde
or
call
data16
aas
ficomp
inc
cwde
jo
mov
cmps
in
sub
loop
in
inc
cwde
adc
aaa
and
inc
call
adc
inc
shl
in
inc
cwde
xchg
data16
aaa
and
push
cdq
addr16
push
xchg
mov
mov
das
fs
inc
out
pop
cwde
sti
xchg
adc
aaa
and
cmp
adc
adc
data16
aam
adc
in
out
jmp
aam
addr16
cwde
or
call
cwde
call
adc
cmp
out
sbb
jns
jmp
xor
xor
inc
cwde
enter
addr16
inc
aaa
repnz
ins
in
sub
fs
inc
out
fucomp
xor
out
fucomp
aas
xchg
imul
cli
in
cwde
call
cwde
sahf
cmp
fs
inc
aaa
adc
in
out
jmp
inc
rol
in
inc
cwde
adc
in
out
jmp
aam
addr16
cwde
or
call
ficom
(bad)
addr16
adc
jmp
inc
aaa
jo
and
stos
out
cwde
adc
adc
aaa
movs
lock
jmp
push
les
adc
repnz
loop
in
inc
cwde
enter
cwde
adc
cwde
sbb
mov
fwait
sbb
and
cwde
adc
addr16
mov
jmp
inc
aaa
repnz
inc
adc
popf
addr16
xor
cwde
sbb
mov
fwait
repnz
cwde
cwde
adc
cdq
addr16
aam
addr16
(bad)
shr
inc
cwde
repnz
cwde
cwde
adc
cdq
addr16
aam
cmps
es
data16
push
dec
(bad)
in
inc
in
jae
shl
cwde
jo
and
sbb
xchg
nop
add
in
push
push
add
jnp
xchg
ficom
xor
add
inc
cwde
enter
addr16
cmp
cwde
cwde
adc
addr16
test
mov
cdq
addr16
push
je
in
inc
in
pop
sbb
aaa
mov
mov
inc
out
adc
addr16
xchg
shl
cmp
adc
push
cwde
jns
packuswb
mov
cwde
data16
out
cwde
sub
in
or
adc
inc
cwde
repnz
mov
sbb
inc
push
enter
in
xor
push
cwde
jns
cmovne
cld
addr16
in
out
(bad)
push
cli
inc
cwde
sbb
mov
addr16
mov
gs
dec
and
in
inc
aaa
jo
push
cwde
addr16
jp
pop
xchg
mov
addr16
mov
loop
in
inc
cwde
pop
xchg
(bad)
fwait
data16
mov
ret
inc
cwde
cwde
clc
sub
addr16
add
in
inc
cwde
cwde
xchg
in
sbb
js
daa
fs
inc
imul
push
dec
cwde
data16
(bad)
cmps
sbb
mov
loop
out
inc
cwde
addr16
cli
fwait
data16
xor
cwde
xlat
ret
and
popa
push
out
adc
cmp
adc
in
out
cmovge
cld
addr16
pop
mov
in
fstp
aaa
loop
out
inc
cwde
adc
cmp
pop
cdq
adc
sahf
adc
xor
sahf
adc
sbb
adc
dec
in
inc
cwde
sbb
push
pop
cwde
adc
data16
dec
and
in
inc
aaa
jo
push
cwde
addr16
jp
movs
in
inc
addr16
addr16
jnp
xchg
ficom
xor
xor
inc
cwde
enter
addr16
cmp
bound
in
inc
cwde
cwde
nop
sbb
fs
inc
addr16
xor
cwde
sbb
inc
addr16
sbb
inc
cwde
pop
xchg
mov
dec
addr16
cli
fwait
data16
xor
cwde
xlat
ret
and
popa
jne
sbb
inc
xor
xor
inc
cwde
enter
ficom
inc
adc
adc
xchg
mov
sbb
loop
out
inc
cwde
adc
cmp
pop
cdq
adc
sahf
adc
xor
sahf
adc
sbb
call
addr16
cs
cwde
adc
or
cld
addr16
inc
cwde
addr16
fstp
aaa
cmps
sbb
inc
daa
sbb
mov
and
mov
pop
test
test
xchg
cli
fwait
data16
xor
cwde
adc
xor
cwde
(bad)
dec
in
pop
inc
aaa
sbb
mov
xor
data16
or
xor
jmp
lahf
adc
inc
bound
cld
addr16
sbb
rcr
adc
out
push
sahf
cmp
jo
and
mov
adc
mov
addr16
mov
cwde
addr16
(bad)
scas
imul
cwde
addr16
push
ins
add
mov
and
pushf
inc
mov
ficom
xor
test
out
jmp
push
enter
out
pusha
and
pop
sbb
and
inc
cwde
cwde
sahf
cmp
adc
in
out
cvtps2pd
cld
addr16
in
out
(bad)
and
mov
adc
nop
jbe
fcom
inc
out
pop
nop
js
(bad)
call
pop
push
inc
addr16
clc
sahf
push
pop
adc
in
xchg
adc
and
data16
inc
cwde
adc
scas
add
inc
push
das
xchg
addr16
xchg
or
addr16
movs
cmp
popf
out
jle
cwde
in
mov
push
pop
push
push
imul
(bad)
lahf
adc
inc
bound
cld
addr16
dec
ja
nop
adc
out
jge
push
ja
inc
jmp
lods
rol
cmc
addr16
in
mov
fisttp
mov
and
js
cwde
sbb
loopne
adc
addr16
adc
addr16
sub
call
cwde
jnp
xchg
ficom
jmp
adc
in
jmp
and
fs
addr16
stos
leave
aas
cwde
adc
adc
out
pop
jns
jg
in
mov
or
iret
sti
(bad)
cwde
adc
and
in
pushf
sub
arpl
sar
addr16
inc
cwde
stos
cld
addr16
sub
call
adc
pop
lahf
pop
push
mov
movs
int
pop
in
and
xor
cwde
sti
jae
call
mov
adc
adc
out
pop
in
mov
or
pushf
jns
or
cwde
rol
nop
sti
mov
and
push
inc
call
jo
sub
call
sbb
inc
addr16
adc
or
cwde
adc
mov
adc
(bad)
mov
adc
inc
xor
dec
(bad)
pop
test
cmps
ficom
aas
movs
out
mov
addr16
mov
imul
cmp
pop
cdq
adc
sahf
adc
fsubr
int
inc
bound
cld
addr16
dec
test
push
outs
in
ffree
aaa
movs
pop
push
addr16
adc
addr16
adc
adc
out
adc
sti
xchg
mov
dec
cwde
adc
or
cdq
jecxz
cwde
in
pop
push
mov
pop
add
mov
adc
mov
cmc
cwde
sti
xchg
mov
out
(bad)
aaa
mov
addr16
pop
in
fucomp
mov
xchg
lea
or
cld
addr16
xchg
mov
(bad)
out
cwde
in
pop
xor
fwait
cdq
jecxz
pop
mov
push
fucomp
xor
fwait
pop
pop
mov
out
inc
cmp
pop
cwde
sti
lahf
fwait
push
inc
mov
fucomp
(bad)
cwde
jae
xor
xor
jmp
pop
xchg
mov
call
fucom
mov
fld
xchg
ins
sbb
lea
inc
cwde
popf
xchg
cwde
jns
jmp
xor
aaa
addr16
(bad)
addr16
sti
mov
cwde
adc
xchg
rcl
mov
(bad)
into
xchg
scas
pop
inc
aaa
or
jmp
push
sbb
push
or
sar
addr16
(bad)
lahf
adc
xor
fs
(bad)
pop
cwde
sbb
or
addr16
out
mov
addr16
in
retf
jae
adc
addr16
cwde
in
out
push
sbb
adc
xor
adc
outs
hlt
aaa
and
jns
push
shr
out
jge
push
jae
lods
(bad)
ins
shr
outs
hlt
aaa
and
cwde
popf
xchg
cwde
call
fucomp
out
xcrypt-cbc
cmps
adc
adc
sub
in
retf
jae
data16
jmp
retf
ja
inc
(bad)
xchg
test
addr16
in
out
fucom
aaa
mov
jp
mov
mov
dec
adc
push
out
pop
dec
ja
int
pop
out
pop
mov
xor
js
mov
cwde
adc
adc
out
pop
sti
sbb
cwde
adc
mov
adc
aam
adc
sti
cmp
cwde
adc
data16
cwde
sahf
sti
xchg
enter
addr16
cmp
cwde
cwde
adc
addr16
mov
and
(bad)
mov
push
pop
dec
(bad)
sbb
adc
addr16
cwde
sti
(bad)
mov
pop
pop
or
mov
(bad)
into
sti
cmps
repnz
adc
mov
cwde
in
out
(bad)
aaa
mov
push
xchg
xor
pop
sbb
retf
and
imul
sti
pop
repz
adc
mov
adc
pop
fwait
popa
push
out
(bad)
in
cwde
jnp
addr16
adc
data16
or
adc
gs
addr16
in
mov
in
(bad)
xchg
and
cbw
adc
push
push
push
dec
(bad)
sbb
cwde
sti
xor
mov
cbw
adc
xchg
sbb
lods
cdq
adc
and
cbw
adc
adc
out
jp
addr16
call
fiadd
cmp
daa
repnz
(bad)
scas
xchg
lahf
test
pushw
popf
inc
push
inc
or
mov
mov
clc
mov
call
out
pop
xchg
sti
mov
cdq
sti
mov
pop
int3
mov
cld
and
inc
pop
push
ins
addr16
aam
into
sti
dec
hlt
cwde
adc
mov
adc
pop
xchg
popa
push
out
inc
loop
cwde
jns
jmp
sub
xchg
ficomp
inc
cdq
adc
push
cwde
inc
push
movs
or
mov
imul
jnp
cbw
adc
loop
in
inc
cwde
enter
or
mov
xor
sub
mov
jo
sub
mov
fst
mov
out
sbb
call
cwde
in
mov
cwde
in
retf
mov
push
push
dec
(bad)
out
in
(bad)
xor
xor
int
in
dec
fst
out
setnp
mov
cdq
addr16
out
(bad)
loop
repnz
or
mov
test
cmp
data16
inc
out
pop
jns
(bad)
mov
jle
cdq
inc
aam
data16
mov
(bad)
xchg
xchg
lock
addr16
inc
push
call
pop
scas
or
imul
add
adc
(bad)
lahf
adc
aam
repnz
xchg
cwde
adc
addr16
jns
xor
sub
ja
es
rcr
adc
or
mov
addr16
dec
loopne
push
shr
das
out
aas
mov
addr16
sub
imul
addr16
dec
and
cwde
xchg
push
xchg
arpl
inc
out
cmp
xchg
ficom
(bad)
ins
imul
lock
sti
imul
push
dec
and
ficom
(bad)
jge
push
mov
out
stos
inc
cwde
addr16
dec
sbb
mov
addr16
and
ficom
(bad)
cbw
adc
pop
call
(bad)
cmp
aaa
or
add
out
mov
and
pop
in
inc
cwde
adc
(bad)
lahf
adc
(bad)
mov
push
mov
inc
cwde
adc
push
add
cwde
dec
ja
int
pop
in
pop
in
xor
cwde
sti
jae
call
ret
call
popf
pop
jg
cwde
jns
jmp
out
(bad)
out
cmp
pop
stc
cld
addr16
in
mov
mov
pop
push
ret
sbb
and
dec
mov
pop
sub
sti
sahf
cdq
sbb
adc
mov
xchg
adc
push
adc
push
inc
out
das
mov
in
mov
or
fucom
out
in
fstp
inc
pop
pushf
sti
push
jmp
adc
nop
test
test
fidivr
adc
push
inc
fwait
adc
addr16
inc
jmp
adc
jge
mov
pop
mov
jbe
adc
addr16
sub
cwde
dec
cmp
cwde
cwde
xchg
push
sbb
adc
cwde
addr16
int
adc
inc
loop
in
inc
cwde
adc
inc
in
out
inc
cwde
addr16
int
adc
inc
loop
in
inc
cwde
adc
inc
cwde
popf
pop
jg
cwde
call
cmp
adc
cwde
fsub
in
or
in
cmp
and
inc
fwait
addr16
cmp
cwde
fsub
in
or
in
cmp
sub
inc
fwait
addr16
cmp
cwde
cwde
call
fs
inc
out
pop
nop
add
jmp
xor
cwde
addr16
inc
call
inc
cwde
addr16
add
jmp
xor
cwde
addr16
inc
call
inc
cwde
addr16
mov
out
inc
and
pop
nop
sbb
pop
xchg
push
fwait
addr16
fisub
adc
xchg
repnz
mov
fwait
addr16
out
jmp
xor
pusha
out
inc
cwde
enter
data16
inc
aaa
repnz
adc
mov
cwde
addr16
call
addr16
shl
addr16
in
in
xor
xor
cwde
sbb
sbb
mov
packuswb
mov
fwait
data16
out
xor
xor
xchg
fs
inc
in
in
retf
je
sti
jp
cwde
adc
xchg
push
inc
mov
(bad)
cdq
adc
and
fs
inc
addr16
add
(bad)
cmp
(bad)
mov
jno
mov
xchg
fs
inc
mov
data16
mov
and
adc
in
out
xor
xor
cwde
nop
inc
cwde
in
psubsw
and
xchg
addr16
in
out
sbb
call
cwde
adc
loop
in
inc
cwde
enter
adc
mov
rcr
jmp
cwde
addr16
call
addr16
shl
addr16
cwde
adc
cli
inc
cdq
addr16
jmp
adc
addr16
cmp
xor
xor
cwde
stos
pushf
and
xchg
pop
fwait
data16
aaa
movs
test
adc
cwde
addr16
jle
push
mov
(bad)
dec
call
cwde
adc
addr16
in
mov
in
sbb
aad
bound
inc
cwde
cwde
call
cwde
in
or
sbb
inc
call
addr16
inc
adc
adc
addr16
and
neg
inc
aaa
into
sti
jmp
xor
cld
and
mov
out
sbb
call
cwde
and
jae
aas
xchg
outs
jno
addr16
in
out
xor
aaa
addr16
sbb
mov
adc
mov
out
pop
and
jae
push
mov
push
pop
clc
mov
inc
in
out
sbb
call
int
pop
in
pop
call
fsub
ficomp
cwde
adc
pushf
sar
sbb
arpl
sub
sbb
aam
lock
dec
and
jo
aaa
addr16
clc
scas
or
push
jecxz
addr16
and
addr16
in
out
fucom
aaa
mov
addr16
mov
jl
adc
xchg
adc
inc
bound
dec
bound
in
inc
cwde
adc
xchg
fwait
sti
nop
pop
push
inc
addr16
push
inc
data16
pop
out
(bad)
aaa
mov
sbb
(bad)
aaa
adc
adc
addr16
nop
jp
adc
out
fucomp
xor
out
fwait
sti
cwde
repnz
ins
adc
gs
addr16
(bad)
cwde
adc
movs
int
pop
xor
dec
mov
lea
jns
popf
pop
jg
cwde
sbb
and
mov
addr16
cmp
mov
mov
out
pop
dec
jecxz
int
pop
ss
inc
jmp
mov
outs
jne
addr16
in
mov
out
push
mov
in
push
out
(bad)
adc
cwde
popf
pop
jg
cwde
sbb
mov
push
mov
out
pop
jns
xor
inc
cwde
addr16
jp
sbb
aam
cwde
adc
in
fucomp
xor
in
cwde
call
(bad)
push
mov
into
push
mov
dec
rcr
shl
ficomp
sub
sbb
scas
pop
repnz
push
sbb
mov
icebp
scas
outs
dec
call
cwde
adc
pushf
sar
addr16
movs
loopne
xchg
movs
call
cmps
jp
mov
(bad)
call
pop
dec
loopne
push
shr
out
jge
in
xor
cwde
retf
outs
daa
mov
add
fcom
mov
and
addr16
inc
ds
push
cld
pop
adc
addr16
jne
loope
adc
mov
or
addr16
movs
clc
sbb
sti
xchg
loopne
adc
movs
(bad)
call
fisubr
loope
adc
cmps
ficom
aas
mov
repnz
xchg
popf
xchg
mov
rcr
adc
addr16
sbb
mov
push
mov
out
fucomp
aaa
mov
hlt
in
inc
cwde
sbb
mov
pusha
cmp
pop
and
jae
inc
bound
arpl
aam
into
sti
enter
cmp
cmp
dec
ja
int
pop
out
or
xor
data16
mov
(bad)
xor
in
pop
cwde
adc
imul
cwde
cwde
call
data16
inc
out
pop
in
mov
in
out
inc
cwde
adc
mov
sbb
(bad)
adc
cwde
and
sbb
cwde
call
addr16
inc
mov
addr16
mov
lahf
data16
inc
addr16
in
out
or
sbb
inc
aam
jo
cmp
in
mov
out
add
cmp
addr16
addr16
ror
jl
adc
adc
cdq
addr16
out
cwde
out
pop
push
inc
push
adc
addr16
clc
movs
cwde
popf
pop
jg
cwde
call
fisubr
mov
and
or
imul
cwde
jae
push
push
xchg
adc
(bad)
data16
inc
out
pop
dec
loopne
push
shr
out
jge
call
adc
cmp
or
sbb
mov
jecxz
mov
arpl
mov
cwde
addr16
pusha
call
retf
sti
add
nop
call
fist
cmp
(bad)
xor
inc
cwde
rcr
xor
nop
ret
mov
fucomp
aaa
movs
mov
aaa
xor
mov
addr16
in
out
cwde
jmp
push
xor
adc
sub
repz
sar
and
cwde
loopne
cwde
popf
pop
jg
cwde
stos
inc
push
adc
pusha
call
jo
inc
cwde
addr16
push
pop
data16
inc
out
pop
fwait
in
es
sti
mov
adc
out
jmp
jnp
adc
(bad)
mov
xlat
scas
out
pop
fwait
in
and
push
cmp
addr16
es
inc
in
sbb
addr16
in
mov
in
fucomp
aaa
movs
test
cdq
std
and
pop
int
movs
adc
jnp
sbb
(bad)
mov
inc
cwde
sbb
mov
pop
cli
adc
adc
push
pop
call
pop
hlt
mov
out
in
aas
or
mov
ret
inc
ds
ss
xchg
lds
data16
cs
cli
daa
adc
in
out
sbb
adc
cbw
adc
adc
inc
adc
out
pop
fwait
jmp
push
dec
pop
fucomp
ret
push
cmps
and
add
call
enter
inc
cwde
addr16
jp
adc
ss
in
mov
in
sub
pop
dec
push
mov
cmps
jae
mov
fist
cmp
fidivr
adc
out
xor
cwde
retf
outs
daa
sti
cld
fxam
xchg
push
je
adc
and
in
adc
push
jo
cmp
pushaw
call
nop
in
enter
cmp
outs
cwde
addr16
out
sbb
sbb
mov
adc
push
cmp
dec
pusha
call
cwde
adc
ins
movs
ds
adc
sbb
mov
and
cwde
and
xchg
stos
aad
cwde
adc
adc
out
pop
dec
loopne
pop
inc
aaa
or
in
xor
cwde
ret
outs
es
dec
pushw
xor
inc
cwde
addr16
inc
bound
(bad)
xchg
adc
fsub
cwde
adc
aaa
jo
cmp
cwde
call
cwde
adc
out
cwde
adc
out
pop
in
mov
or
sbb
mov
outs
jo
cmp
cwde
sbb
mov
inc
inc
adc
jns
xor
dec
cwde
addr16
jp
test
adc
xchg
adc
aam
addr16
pop
xchg
mov
push
addr16
mov
xchg
mov
aaa
mov
enter
repnz
jmp
cwde
sbb
scas
fild
mov
and
js
pop
push
push
sbb
std
adc
pushf
sar
addr16
movs
stc
sbb
in
leave
pop
repnz
jmp
cwde
sbb
scas
mov
cwde
adc
and
lahf
popf
xchg
adc
adc
and
aaa
xchg
cdq
jecxz
mov
ficom
mov
pop
test
push
pop
sbb
mov
cwde
adc
fisubr
in
add
xchg
outs
cmc
aaa
and
js
(bad)
dec
ja
int
pop
in
pop
in
xor
lods
inc
adc
bound
lahf
mov
aaa
mov
cwde
in
out
fucomp
aaa
mov
jo
inc
cwde
addr16
pushf
sar
addr16
jecxz
cwde
adc
(bad)
pusha
jmp
mov
pop
fwait
jmp
sbb
(bad)
in
and
nop
nop
push
mov
data16
call
cwde
rcl
nop
mov
jns
or
ficom
inc
adc
call
cwde
rcr
pop
addr16
mov
lahf
cdq
jmp
mov
addr16
out
pop
cbw
cwde
out
pop
inc
rcr
adc
xchg
addr16
cmp
arpl
ds
stos
in
cwde
adc
adc
out
pop
nop
inc
gs
cmp
pop
inc
cwde
rcr
adc
gs
jo
dec
cwde
addr16
jp
addr16
addr16
xchg
lahf
adc
call
cwde
shl
mov
adc
movs
pushf
adc
out
jge
push
jnp
inc
jmp
pop
adc
xchg
lahf
adc
inc
bound
dec
rcr
adc
or
cwde
adc
add
push
gs
call
cwde
sti
ss
adc
and
or
sar
addr16
cwde
adc
movs
(bad)
call
je
inc
push
pushf
stos
cld
addr16
ds
jns
cwde
lods
pop
push
and
cwde
adc
bound
call
adc
(bad)
cmps
fdivr
inc
addr16
adc
pushf
sar
addr16
dec
adc
pop
out
pop
aad
outs
pop
push
mov
lahf
adc
fsub
jae
mov
fucomp
xlat
cmps
cmp
mov
arpl
mov
cwde
fucomp
mov
fucomp
and
mov
xchg
sub
pop
cmp
addr16
cli
push
addr16
adc
lahf
cdq
jmp
mov
cwde
adc
push
pop
mov
addr16
sahf
mov
addr16
and
(bad)
addr16
aas
nop
inc
addr16
inc
adc
in
mov
push
pop
mov
addr16
call
xchg
movs
sti
cdq
icebp
ret
sbb
adc
arpl
sbb
and
jle
cwde
adc
mov
adc
or
cwde
ret
(bad)
addr16
fcom
aam
repnz
sbb
mov
push
pusha
call
cwde
cli
movs
cwde
addr16
loope
ret
fidivr
inc
aaa
sbb
mov
iret
cwde
sti
outs
(bad)
call
ret
stos
sub
cwde
adc
adc
out
pop
in
mov
out
sub
and
push
mov
and
lock
addr16
jnp
mov
adc
sbb
pop
inc
bound
nop
inc
cwde
adc
and
addr16
imul
mov
(bad)
mov
aad
lahf
mov
aaa
mov
cwde
adc
pushf
sar
addr16
xchg
lahf
adc
aam
jo
cmp
dec
ds
nop
sar
addr16
addr16
cwde
popf
pop
jg
cwde
call
adc
mov
popf
sbb
cwde
dec
loopne
pop
inc
aaa
sbb
cmps
xor
cwde
jecxz
and
jbe
push
call
cwde
call
cwde
adc
xchg
sti
addr16
call
mov
adc
addr16
aam
pop
adc
arpl
jnp
outs
repnz
and
mov
cwde
pop
mov
and
adc
push
push
mov
loope
adc
gs
adc
push
cwde
in
call
push
sub
fst
dec
addr16
sub
sbb
mul
js
(bad)
out
fucom
mov
addr16
mov
repz
push
mov
push
cwde
in
addr16
push
mov
pop
adc
popfw
mov
es
clc
mov
es
xchg
dec
sub
adc
addr16
sbb
fst
push
popa
call
and
pop
push
mov
cmps
jno
mov
std
movs
adc
es
add
addr16
push
mov
addr16
inc
cwde
addr16
repz
push
mov
cmps
jno
mov
push
call
cwde
pop
push
jne
in
inc
xchg
popf
xchg
es
sbb
pusha
test
adc
out
pop
xchg
mov
pop
push
mov
es
mov
clc
fst
push
and
xor
cwde
adc
pusha
test
adc
out
pop
xchg
mov
pop
push
mov
in
fst
mov
frstor
inc
xchg
popf
xchg
es
adc
pusha
test
adc
out
pop
xchg
mov
pop
push
mov
loope
adc
stos
aaa
mov
cwde
addr16
mov
cwde
popf
mov
es
xchg
push
vmovlpd
es
push
push
ins
cdq
adc
addr16
push
sbb
fst
push
mov
adc
xchg
adc
ds
pushf
jmp
cli
pop
addr16
adc
pop
adc
in
adc
addr16
mov
loope
adc
addr16
mov
in
fst
mov
addr16
mov
repz
push
mov
es
adc
cwde
adc
addr16
nop
mov
fs
mov
mov
mov
call
pop
std
ret
call
cmp
push
ficom
mov
in
cmp
cwde
mov
adc
sbb
cs
cwde
adc
daa
addr16
cmp
pop
push
mov
es
push
push
pop
addr16
sub
cmp
es
adc
mov
push
mov
outs
repnz
and
jg
xchg
xchg
es
push
push
push
rcl
cdq
adc
addr16
in
mov
xchg
popf
xchg
es
push
mov
pop
adc
in
cwde
mov
(bad)
ficom
aaa
scas
mov
aaa
cmps
xchg
movs
mov
inc
pop
adc
push
ficom
cmp
xchg
xchg
movs
sti
nop
movs
sar
out
cwde
adc
adc
push
mov
addr16
sbb
and
ds
adc
ins
cmp
cmp
cwde
adc
in
retf
cmp
cwde
adc
jb
outs
dec
addr16
inc
sbb
retf
sub
push
pop
sbb
adc
pushf
call
es
xchg
aaa
scas
cdq
(bad)
cmps
adc
clc
in
cwde
mov
in
fst
mov
popf
addr16
pusha
adc
out
in
adc
mov
repz
es
pop
aas
xchg
imul
push
sbb
adc
and
push
push
sbb
adc
adc
stos
lahf
sbb
sti
ret
es
mov
sbb
adc
addr16
and
in
sti
ret
es
adc
adc
clc
in
(bad)
sti
ret
es
cdq
mov
(bad)
adc
jo
jmp
mov
es
sub
adc
pop
push
mov
les
sar
mov
call
adc
out
xor
lods
sbb
imul
addr16
sub
pop
push
mov
addr16
(bad)
les
mov
addr16
mov
(bad)
ficom
aas
mov
add
and
in
mov
lock
cwde
inc
push
xor
adc
addr16
inc
push
and
adc
addr16
dec
adc
inc
out
pop
jnp
mov
mov
mov
and
pop
inc
aaa
sbb
ds
adc
xor
test
sub
outs
lock
and
call
cwde
jnp
mov
xor
jb
mov
addr16
push
push
jg
adc
out
fld
push
addr16
jecxz
and
addr16
stos
cli
push
cwde
adc
adc
out
pop
nop
fistp
cwde
in
mov
in
ret
mov
out
pop
nop
(bad)
cdq
adc
cbw
adc
addr16
sahf
mov
out
(bad)
inc
bound
cld
addr16
push
push
gs
adc
out
fstp
or
adc
out
inc
in
out
fstp
add
in
ret
pop
bound
sahf
sti
(bad)
addr16
adc
and
jb
sahf
jmp
scas
enter
pop
out
fst
and
repnz
and
aam
repnz
arpl
adc
sub
cwde
adc
and
inc
inc
adc
sti
xlat
enter
add
addr16
sub
addr16
or
pushf
jns
cwde
in
not
out
mov
addr16
in
retf
xor
addr16
in
mov
jmp
xor
jl
inc
jb
sahf
jmp
push
pop
mov
dec
test
push
ds
pop
dec
loopne
push
shr
out
jge
push
inc
pop
push
inc
fld1
jbe
out
out
test
and
scas
out
aad
cmp
mov
inc
push
out
(bad)
aam
repnz
adc
aaa
adc
inc
or
enter
in
sbb
cmp
mov
push
pop
out
(bad)
dec
add
mov
pop
inc
aaa
or
xchg
ins
or
cdq
jmp
mov
ficom
inc
adc
xor
cwde
xchg
push
push
rcl
mov
out
jge
push
imul
jmp
cmp
mov
arpl
adc
push
xchg
movs
cli
push
cdq
cs
addr16
adc
dec
xchg
movs
cli
push
call
jnp
movs
cli
push
fwait
cs
addr16
adc
ja
movs
cli
push
pushf
cs
addr16
adc
adc
jmp
ss
aad
cwde
cwde
sbb
and
or
loope
and
cmps
sub
test
sub
mov
adc
lea
sub
call
mov
aaa
lahf
sbb
mov
pop
jo
mov
rcr
in
aad
xchg
sahf
mov
addr16
cwde
adc
mov
sahf
stos
jb
(bad)
addr16
and
adc
scas
addr16
jmp
adc
jmp
outs
fs
cmp
xchg
adc
jmp
push
arpl
inc
dec
out
mov
mov
inc
xchg
movs
sti
cwde
repz
scas
ficom
mov
cwde
cdq
cli
mov
or
cld
sbb
and
aaa
lahf
rcl
cmc
out
pusha
nop
push
sbb
mov
lahf
sbb
mov
adc
pop
mov
pushf
adc
sbb
adc
in
push
ds
sahf
aaa
retf
jno
retf
mov
pop
popf
nop
push
arpl
sar
addr16
adc
pop
cmps
adc
add
jmp
out
adc
inc
in
adc
pop
sahf
adc
ss
cmp
popa
call
arpl
sti
mov
pop
jno
mov
scas
addr16
jmp
adc
jmp
outs
inc
nop
push
arpl
push
inc
in
fld
xor
fwait
push
mov
in
int
aaa
jae
adc
pop
cdq
data16
out
pusha
pop
ds
sahf
adc
cs
cmp
popa
cdq
data16
nop
push
sbb
mov
lahf
sbb
mov
pop
movs
addr16
adc
cwde
cwde
adc
adc
sahf
jmp
pop
aaa
arpl
push
aas
cwde
cwde
pop
mov
call
jge
adc
cmp
xor
sub
nop
clc
mov
out
sub
aas
cwde
jo
mov
cwde
jo
mov
in
fstp
xchg
(bad)
fwait
adc
mov
mov
cwde
popf
xchg
cwde
sbb
xor
das
stos
xchg
in
mov
inc
inc
push
cmp
addr16
sub
pushf
or
(bad)
cwde
adc
addr16
adc
inc
sbb
addr16
aaa
mov
mov
jae
in
sti
fwait
cmp
enter
sti
fwait
jmp
out
pushf
or
xor
out
push
fs
dec
call
fucom
xor
xchg
xor
test
enter
inc
(bad)
jmp
inc
cmp
bound
fs
nop
push
arpl
push
inc
mov
fmul
aaa
ja
push
sub
cmp
int3
or
push
arpl
push
inc
mov
movs
adc
push
jp
inc
push
(bad)
sti
jbe
cwde
sti
retf
in
cmp
cmp
shr
out
jge
loop
cwde
adc
in
adc
mov
in
inc
mov
adc
out
adc
out
adc
loop
int3
inc
cwde
cdq
aad
xchg
ja
inc
addr16
sub
jnp
inc
cwde
cwde
scas
push
addr16
ds
popf
jecxz
and
sbb
mov
loop
cld
inc
cwde
sbb
mov
gs
adc
xchg
movs
sub
mov
je
adc
push
mov
addr16
cwde
sub
inc
in
inc
out
pushf
xchg
fst
mov
or
js
jns
pop
mov
push
push
mov
out
or
in
mov
xchg
jmp
fmulp
addr16
cwde
sub
inc
in
inc
out
pushf
push
dec
sbb
adc
loop
cld
inc
cwde
cdq
sbb
loop
cld
inc
cwde
repz
scas
ficom
mov
cwde
addr16
xchg
ja
inc
addr16
movs
sub
adc
es
adc
addr16
movs
sub
adc
es
call
popf
xchg
cwde
xchg
add
xchg
sub
adc
popa
in
inc
out
sbb
in
mov
in
or
call
mov
(bad)
adc
addr16
(bad)
cwde
jae
(bad)
mov
mov
addr16
call
call
cwde
fist
mov
cwde
addr16
addr16
push
xor
adc
and
ja
inc
addr16
mov
cwde
cwde
adc
je
inc
cwde
cmps
mov
push
jo
in
inc
in
pop
aaa
and
adc
nop
sbb
inc
in
inc
adc
addr16
push
and
pop
stc
mov
xor
fstp
cmc
mov
mov
retf
outs
fist
mov
cwde
fwait
adc
bound
xchg
ds
sbb
mov
pushf
cwde
jecxz
addr16
movs
inc
adc
popf
addr16
out
sbb
adc
jmp
in
inc
dec
addr16
mov
mov
mov
(bad)
cwde
addr16
sub
inc
int3
inc
cwde
jo
retf
cli
(bad)
fs
adc
cwde
rcr
adc
stos
xchg
in
mov
cwde
addr16
sbb
adc
jg
call
xchg
pop
scas
out
adc
push
mov
ins
cld
inc
cwde
pop
icebp
mov
gs
repnz
lods
sbb
mov
cwde
addr16
add
pushf
adc
repz
push
mov
cwde
addr16
cmp
std
ja
cwde
sti
cs
adc
loop
int
cwde
adc
mov
addr16
call
pop
imul
addr16
xor
cwde
adc
cmp
out
sbb
cwde
cmp
inc
in
inc
in
or
adc
addr16
sbb
call
test
inc
aaa
cmps
bound
in
adc
cwde
sub
fild
inc
adc
cwde
cmp
sbb
adc
mov
and
adc
movs
lock
in
or
rcl
cwde
sub
inc
in
inc
cmps
jb
in
setne
mov
mov
addr16
sub
or
rcr
sahf
bound
dec
int3
inc
cwde
adc
stos
xchg
sbb
push
addr16
jg
call
adc
addr16
(bad)
mov
mov
addr16
call
pop
sbb
pop
cdq
adc
push
cwde
cwde
cmp
adc
adc
sbb
pop
cdq
adc
adc
addr16
xor
addr16
nop
push
cwde
adc
xchg
pop
mov
cmp
inc
cwde
cwde
nop
adc
adc
aaa
xchg
rcl
aaa
xchg
sbb
mov
jns
jecxz
(bad)
fwait
xchg
xchg
pop
aaa
xchg
sbb
mov
ins
adc
cmp
addr16
sbb
mov
mov
push
addr16
jg
call
cwde
sbb
mov
mov
cwde
mov
addr16
inc
jmp
popa
cwde
addr16
cmp
outs
clc
mov
sbb
adc
push
push
test
jl
inc
cwde
jmp
cwde
cdq
sbb
repnz
inc
cwde
pop
icebp
mov
mov
cwde
xchg
sbb
mov
out
cs
adc
adc
out
cs
adc
adc
and
mov
sbb
sbb
cmp
addr16
xchg
dec
mov
out
cwde
sub
in
or
out
jmp
and
adc
and
addr16
mov
cwde
rcr
adc
jg
call
in
sbb
push
mov
mov
cmp
and
adc
cwde
popf
xchg
cwde
cli
nop
fwait
addr16
ds
cld
inc
cwde
cdq
sbb
loop
cld
inc
cwde
repz
scas
ficom
mov
cwde
addr16
loopne
push
shr
out
jge
out
xor
push
mov
adc
fcom
push
jae
cld
in
adc
sar
addr16
movs
sti
outs
repz
adc
adc
cmc
adc
rcr
sbb
cmps
mov
jmp
in
mov
push
pop
pop
cmp
es
adc
jg
movs
sti
outs
repz
adc
adc
out
fucomp
aaa
mov
adc
out
aaa
iret
cwde
sti
outs
(bad)
call
sub
inc
out
pop
in
mov
push
pop
pop
inc
push
popf
pop
enter
into
or
in
mov
push
pop
pop
cmp
es
adc
jae
movs
sti
outs
repz
adc
adc
push
repz
adc
adc
out
pop
dec
ja
int
pop
in
pop
jmp
out
fstp
add
popf
cwde
out
pusha
in
out
fucomp
aaa
mov
ficom
cmp
addr16
addr16
addr16
aaa
lahf
cdq
jmp
mov
(bad)
mov
loop
adc
pop
mov
addr16
call
dec
adc
addr16
ja
push
mov
addr16
mov
fucomp
out
or
scas
inc
(bad)
addr16
addr16
iret
addr16
mov
(bad)
adc
jmp
sti
xchg
adc
aam
jo
int3
addr16
dec
ds
pop
mov
addr16
addr16
cwde
popf
xchg
cwde
sbb
bound
cld
addr16
fidivr
adc
cmp
fld1
dec
out
sbb
icebp
inc
cwde
adc
or
cld
addr16
adc
outs
hlt
aaa
and
bound
data16
movs
push
stos
adc
adc
repz
push
mov
out
fucomp
aaa
mov
cwde
in
out
fucom
inc
push
popf
add
es
sti
mov
jae
adc
xchg
addr16
mov
(bad)
sahf
jg
and
mov
out
(bad)
cmp
es
adc
xchg
test
pop
mov
out
(bad)
cmp
es
adc
in
ja
in
in
inc
cwde
lock
mov
js
jbe
addr16
nop
jp
sbb
lds
cwde
adc
pushf
frndint
addr16
aad
cwde
nop
fwait
arpl
mov
push
cwde
adc
addr16
(bad)
adc
not
mov
and
cwde
adc
or
cld
addr16
dec
ja
int
pop
in
aaa
in
xor
lods
lock
aaa
lahf
cdq
jmp
mov
cwde
adc
or
cld
addr16
push
mov
adc
addr16
(bad)
lahf
adc
fsub
xchg
movs
mov
aaa
jo
aad
cwde
call
std
jecxz
out
xchg
jns
jmp
je
cwde
sti
mov
cwde
adc
cwde
cwde
adc
and
cwde
adc
and
adc
push
mov
addr16
in
out
(bad)
aaa
mov
addr16
push
addr16
adc
pop
mov
addr16
aam
(bad)
addr16
movs
push
cwde
adc
or
cld
addr16
push
push
aaa
addr16
cld
repnz
cwde
in
cmc
fsub
jae
mov
fucomp
aad
mov
jmp
data16
movs
push
stos
adc
adc
add
adc
push
pusha
ja
mov
push
sub
in
ficom
mov
add
adc
out
(bad)
aaa
mov
fucomp
aad
mov
jmp
rcl
(bad)
aaa
mov
xchg
movs
outs
or
pop
fsubr
pushf
push
mov
bound
cld
addr16
adc
cmps
mov
jmp
jnp
aas
fcom
aam
repnz
not
mov
addr16
cli
mov
pop
ins
mov
scas
pop
inc
aaa
sbb
retf
inc
xor
dec
test
addr16
sub
addr16
fisttp
mov
fisttp
mov
and
jns
fnstsw
jle
cwde
sahf
repz
sbb
inc
daa
sbb
mov
jmp
mov
lahf
adc
aam
lock
and
enter
addr16
cmp
pop
addr16
mov
cwde
addr16
inc
mov
adc
addr16
popa
aam
lock
cwde
sahf
sti
std
enter
addr16
cmp
adc
sbb
cbw
adc
lahf
outs
hlt
aaa
and
call
cwde
adc
xchg
movs
sti
cdq
adc
pop
mov
mov
ss
jne
and
or
xchg
inc
cmp
icebp
aas
mov
repnz
cmps
push
repnz
addr16
jp
adc
fsubr
int
push
aaa
(bad)
aam
cdq
cwde
adc
xchg
movs
sti
cdq
adc
pop
mov
mov
ss
jne
and
or
xchg
inc
cmp
icebp
aaa
lahf
mov
aaa
mov
push
mov
cwde
addr16
jp
adc
fsubr
int
mov
fucomp
ds
sahf
cmp
arpl
in
repz
addr16
sub
lock
dec
and
and
inc
in
pop
aaa
movs
(bad)
call
movs
in
inc
addr16
addr16
outs
sbb
inc
mov
adc
and
in
js
sahf
adc
cwde
adc
sbb
and
sahf
cli
push
cdq
inc
push
movs
not
mov
out
pusha
in
out
fstp
cs
or
arpl
data16
(bad)
and
addr16
mov
das
push
mov
pusha
cmp
pop
in
mov
xor
(bad)
addr16
call
pop
sbb
xchg
stos
inc
cwde
addr16
push
je
jmp
lahf
adc
inc
bound
cld
adc
in
cwde
cwde
mov
movs
int
pop
fcomip
pop
mov
addr16
inc
call
cmps
jmp
call
pop
in
mov
out
inc
and
pop
jne
loop
in
inc
cwde
cwde
adc
mov
add
inc
cwde
adc
xor
sub
inc
cwde
adc
adc
ins
cwde
adc
loop
in
inc
cwde
cwde
adc
pop
in
inc
cwde
enter
adc
mov
ret
inc
cwde
cwde
cwde
sti
outs
sbb
cwde
pop
xchg
inc
cwde
data16
mov
inc
call
call
pop
sahf
cmp
lock
fsub
cwde
sti
outs
and
call
mov
and
out
mov
packuswb
mov
cwde
data16
out
in
fstp
inc
push
jo
fldenv
call
pop
jne
adc
arpl
cmp
cwde
cwde
movs
in
fstp
mov
fcomp
out
(bad)
pop
jmp
cwde
sar
or
addr16
xchg
mov
pusha
in
inc
cwde
addr16
lock
adc
pushf
addr16
inc
cwde
adc
imul
xor
addr16
push
xor
daa
xchg
inc
push
in
in
inc
repnz
lock
and
sbb
xchg
xchg
in
addr16
cmp
cmp
(bad)
in
cmp
pop
cdq
adc
sahf
adc
push
push
mov
call
sbb
call
addr16
cmp
arpl
inc
aaa
adc
in
out
(bad)
addr16
mov
sbb
aad
bound
inc
cwde
cwde
cli
and
cwde
adc
in
loope
call
mov
cwde
fs
cmp
pop
cdq
adc
sahf
adc
aaa
mov
cmps
inc
cwde
data16
xor
imul
cwde
enter
addr16
inc
aaa
jo
shl
nop
jp
adc
js
popf
in
inc
cdq
addr16
mov
jae
mov
fucomp
aaa
movs
fwait
xchg
data16
xor
(bad)
out
addr16
fwait
sub
in
inc
cwde
(bad)
in
sti
cdq
xchg
movs
sti
cdq
xchg
movs
sub
dec
ins
ins
out
(bad)
nop
addr16
sbb
loop
in
inc
cwde
mov
inc
cwde
data16
test
xchg
dec
cwde
gs
push
xchg
fwait
adc
and
cwde
adc
dec
out
sbb
ror
inc
cwde
adc
mov
cdq
dec
adc
addr16
xchg
cdq
cdq
addr16
xor
daa
xchg
inc
push
inc
outs
in
inc
repnz
(bad)
adc
out
pop
cli
mov
nop
call
mov
and
in
inc
cwde
xchg
shl
addr16
aam
cdq
cwde
adc
xchg
movs
sti
cdq
adc
inc
out
or
daa
pushf
popa
in
fcomp
fucomp
test
pusha
in
inc
cwde
in
aas
xchg
xor
addr16
aam
cdq
cwde
adc
xchg
movs
sti
cdq
adc
inc
out
or
inc
cwde
data16
fcomp
fucomp
mov
or
sub
inc
jne
and
mov
and
or
outs
in
inc
cwde
adc
mov
(bad)
arpl
inc
out
sbb
inc
cwde
data16
fcomp
fucomp
test
pusha
in
inc
cwde
in
mov
sbb
adc
lahf
addr16
inc
out
sbb
call
arpl
inc
out
pop
jne
loop
in
inc
cwde
cwde
adc
cwde
pop
xchg
mov
addr16
fild
mov
cdq
addr16
push
inc
cs
inc
in
pop
sbb
nop
add
in
push
push
pusha
nop
adc
and
addr16
inc
xchg
movs
cmp
mov
cmp
jo
or
movs
in
inc
addr16
sbb
(bad)
cwde
adc
cwde
data16
out
(bad)
jecxz
addr16
in
out
(bad)
cmps
inc
cwde
sbb
mov
addr16
mov
in
sbb
jne
and
lahf
push
das
xchg
data16
aaa
cmps
mov
xor
xchg
in
inc
cdq
addr16
sub
in
inc
cwde
(bad)
in
sti
cdq
xchg
movs
sti
cdq
xchg
movs
sub
or
sub
push
sbb
loop
in
inc
cwde
fwait
xchg
inc
cwde
data16
fsubr
sbb
cli
stc
fwait
addr16
push
pop
mov
call
pop
xchg
cmp
sub
cwde
addr16
mov
mov
adc
and
fs
das
xchg
dec
cwde
gs
mov
out
js
imul
cwde
cdq
cdq
cmp
mov
or
imul
cwde
enter
ficom
xor
addr16
inc
cwde
enter
addr16
cmp
add
outs
inc
fbld
mov
loop
call
mov
fucomp
sbb
loope
addr16
sbb
loop
in
inc
cwde
fadd
retf
push
in
inc
cdq
addr16
push
enter
in
pop
aaa
mov
addr16
inc
out
fnstsw
loop
in
inc
cwde
movs
in
inc
addr16
data16
sbb
jne
loop
in
inc
cwde
xchg
movs
cmp
sbb
inc
cwde
data16
mov
jmp
cmp
pop
cdq
adc
sahf
adc
cmp
shl
in
xor
movs
in
inc
cdq
addr16
mov
and
sahf
add
in
inc
cwde
iret
sti
push
sets
cmp
dec
inc
call
gs
mov
or
sbb
sub
je
fadd
mov
cwde
gs
mov
sbb
sub
lahf
addr16
inc
adc
in
inc
cwde
pop
xchg
mov
and
xchg
dec
cwde
data16
mov
outs
lock
loop
call
push
test
and
adc
cwde
repnz
retf
push
in
inc
cdq
addr16
push
shr
in
inc
in
pop
aaa
mov
addr16
inc
out
xchg
mov
loop
in
inc
cwde
movs
in
inc
addr16
addr16
das
xchg
dec
cwde
data16
js
popf
in
inc
cdq
adc
jmp
inc
daa
sbb
mov
loop
in
inc
cwde
addr16
sub
pusha
in
inc
cwde
fadd
loop
in
inc
cwde
enter
arpl
inc
aaa
jo
(bad)
addr16
jns
sysret
jecxz
addr16
in
out
(bad)
cmps
mov
cmps
out
pop
jne
sbb
xchg
adc
adc
aaa
movs
xchg
movs
sti
cdq
movs
in
inc
addr16
pop
addr16
inc
out
leave
sahf
addr16
clc
test
das
push
inc
in
or
mov
repz
in
inc
cdq
addr16
and
or
cbw
sub
mov
adc
imul
mov
cdq
addr16
push
mov
in
inc
in
pop
aaa
mov
adc
(bad)
mov
fucomp
sbb
jns
shrd
addr16
movs
sti
cdq
adc
in
inc
aaa
jo
or
addr16
jp
adc
cmp
fisubr
cwde
adc
dec
test
xchg
ss
(bad)
in
aaa
movs
jae
mov
fucomp
mov
or
call
addr16
inc
cwde
adc
inc
add
inc
push
or
push
xchg
lock
dec
and
addr16
inc
aaa
jo
or
addr16
jp
adc
fsubr
in
push
mov
jnp
cmp
arpl
inc
out
pop
sbb
and
inc
cwde
cwde
adc
add
in
sti
cdq
repnz
push
push
mov
jmp
out
(bad)
sahf
mov
mov
pop
nop
jns
(bad)
call
imul
push
das
xchg
data16
aaa
cmps
cdq
ret
xchg
in
inc
cdq
addr16
sub
in
inc
cwde
(bad)
in
sti
cdq
xchg
movs
sti
cdq
adc
cld
pop
dec
outs
outs
jmp
jbe
fcom
inc
out
sbb
in
mov
or
addr16
inc
aaa
adc
in
out
(bad)
cmps
jne
addr16
mov
inc
in
out
sbb
cwde
cmp
arpl
inc
out
pop
aad
mov
out
inc
addr16
lds
mov
cdq
addr16
push
cmp
in
inc
in
pop
sbb
jns
(bad)
cld
addr16
in
out
(bad)
fisub
mov
sbb
jbe
fs
mov
xchg
ficom
xor
addr16
inc
cwde
enter
addr16
cmp
cwde
cwde
adc
ins
pop
xchg
push
cwde
fs
mov
shl
cwde
adc
in
out
jmp
xor
addr16
inc
cwde
enter
jo
dec
cwde
addr16
jp
adc
cmp
in
in
retf
push
sbb
inc
adc
adc
loop
in
inc
cwde
enter
jo
mov
imul
jmp
cwde
adc
cwde
data16
adc
cwde
data16
out
cwde
in
sbb
lahf
adc
and
inc
push
in
in
inc
repnz
clc
adc
out
pop
in
mov
in
inc
adc
adc
loop
call
cmp
jo
push
cwde
addr16
jp
adc
aaa
mov
sbb
inc
cwde
adc
xor
inc
call
inc
daa
sbb
mov
shl
inc
cwde
fwait
cmps
inc
cwde
data16
ds
test
retf
pop
repnz
loop
call
or
cli
ja
addr16
mov
adc
nop
jbe
fcom
inc
out
pop
nop
jns
cdq
scas
inc
cwde
data16
aaa
mov
adc
in
cmp
pop
cdq
adc
sahf
adc
in
mov
cwde
cdq
aad
jmp
(bad)
sbb
mov
pushf
addr16
push
lock
adc
bound
cld
addr16
push
push
(bad)
adc
and
jge
pop
xchg
cbw
fs
mov
mov
jo
jecxz
cwde
call
fs
xor
cwde
adc
aam
adc
in
out
in
fstp
inc
pop
pushf
sti
into
cmp
in
inc
cwde
sbb
mov
cbw
adc
loop
in
inc
cwde
enter
jo
mov
imul
test
bound
cld
adc
push
jo
push
cwde
addr16
jp
repnz
(bad)
adc
out
sbb
cwde
cmp
arpl
inc
out
pop
nop
add
in
dec
inc
bound
cld
addr16
(bad)
mov
inc
call
inc
daa
sbb
mov
addr16
arpl
inc
xor
outs
mov
out
pop
push
and
adc
popf
addr16
add
arpl
inc
cwde
in
or
les
mov
addr16
pop
aam
jo
frstor
nop
jp
jae
xor
cmp
inc
cwde
enter
in
sbb
mov
push
mov
(bad)
mov
addr16
cwde
adc
cwde
cwde
sbb
xor
popf
xchg
cwde
call
adc
nop
jbe
fcom
inc
or
sub
inc
cwde
iret
cwde
ret
outs
addr16
movs
les
mov
popf
addr16
add
arpl
inc
cwde
xchg
xchg
mov
addr16
push
nop
ret
adc
addr16
xchg
inc
xchg
addr16
aam
jo
fsub
nop
jp
jae
aas
xchg
sbb
mov
shl
inc
cwde
adc
in
out
in
fstp
inc
pop
pushf
sti
retf
adc
loop
call
sub
addr16
fldcw
(bad)
ds
mov
addr16
sbb
leave
ins
in
inc
or
cwde
adc
mov
dec
loopne
push
shr
out
jge
mov
jl
adc
inc
push
out
pop
sbb
addr16
in
mov
out
inc
and
pop
nop
sbb
sbb
mov
fwait
adc
mov
jb
addr16
aam
fwait
addr16
inc
addr16
aam
fwait
cdq
adc
aaa
lock
fsub
cwde
sti
outs
arpl
dec
mov
cwde
fs
mov
and
xor
sar
addr16
mov
cwde
gs
out
in
fstp
inc
pop
pushf
sti
sub
adc
and
cmp
adc
mov
in
cmp
cwde
jmp
jnp
push
mov
das
push
mov
jo
push
cwde
addr16
xor
ja
jns
(bad)
ss
mov
cmps
ficom
cmp
outs
adc
in
adc
dec
adc
push
jo
push
cwde
addr16
xor
ja
jns
(bad)
out
mov
addr16
in
out
sbb
call
retf
and
xchg
inc
sub
xchg
inc
and
push
inc
cwde
addr16
sti
outs
xchg
movs
(bad)
imul
pop
mov
out
and
adc
imul
mov
or
call
ficom
aam
jo
loop
cwde
xchg
dec
xor
in
mov
xchg
popf
aas
addr16
adc
jecxz
in
inc
call
inc
cwde
fild
ret
fwait
in
aaa
mov
jl
inc
cwde
adc
(bad)
cwde
jae
xor
movs
out
inc
addr16
fwait
cmp
in
inc
cwde
fistp
loop
in
inc
cwde
mov
in
push
jge
movs
cmp
bound
jl
sbb
push
cwde
arpl
ss
in
inc
call
pop
push
gs
mov
fwait
(bad)
aam
fwait
addr16
inc
addr16
xchg
dec
loop
adc
jecxz
in
inc
call
cld
sbb
fs
mov
pmaxsw
cld
addr16
in
out
(bad)
adc
mov
addr16
mov
push
call
xchg
ficom
xor
data16
inc
cwde
enter
addr16
aaa
mov
cwde
in
out
sbb
call
ficom
xor
data16
inc
cwde
enter
addr16
cmp
mov
inc
out
in
inc
addr16
jmp
addr16
pop
mov
and
clc
movs
push
gs
aaa
popf
mov
xor
(bad)
in
inc
call
inc
cwde
fistp
loop
in
inc
cwde
fwait
push
inc
pop
pop
outs
pushw
inc
cwde
gs
mov
loop
in
inc
cwde
jno
inc
cwde
addr16
dec
sbb
and
pop
in
retf
fwait
adc
in
out
jmp
push
adc
adc
loop
in
inc
cwde
enter
cwde
adc
or
cld
addr16
or
push
mov
cdq
addr16
push
cld
xor
inc
in
or
adc
call
addr16
inc
out
pop
jns
cwde
in
out
xor
data16
inc
cwde
enter
and
rcl
out
sbb
nop
inc
cwde
in
add
mov
addr16
sbb
add
loopne
cwde
dec
push
ficom
push
mov
das
push
mov
jo
push
cwde
addr16
aam
jo
in
cwde
jns
(bad)
jecxz
addr16
in
out
(bad)
mov
xlat
mov
pop
xchg
jge
aam
mov
addr16
stos
mov
mov
call
mov
and
call
gs
inc
cwde
movs
and
arpl
clc
pop
in
out
ret
xchg
mov
adc
(bad)
mov
movs
out
inc
cdq
addr16
push
cmp
adc
fwait
addr16
(bad)
jecxz
addr16
in
out
(bad)
xor
aas
mov
and
addr16
adc
push
mov
call
inc
in
getsec
loop
in
inc
cwde
sbb
inc
cwde
cwde
adc
jg
xchg
inc
cwde
fs
xor
dec
nop
push
arpl
xchg
inc
cwde
fs
push
jge
xchg
inc
cwde
fs
xor
mov
inc
dec
nop
push
adc
inc
bound
cld
addr16
aaa
mov
js
inc
cwde
adc
xor
lahf
addr16
inc
or
adc
in
out
in
fstp
inc
push
jo
jmp
(bad)
addr16
inc
in
in
retf
jno
imul
addr16
lea
adc
ins
bnd
or
adc
and
xchg
addr16
inc
(bad)
push
dec
mov
out
ficomp
inc
bound
cld
addr16
inc
cwde
stos
outs
pop
cwde
adc
adc
aaa
movs
(bad)
dec
in
pop
inc
aaa
or
jmp
and
lods
cdq
add
aas
mov
addr16
sub
in
sub
sbb
mov
addr16
nop
jp
adc
(bad)
lahf
adc
fsub
in
cs
sbb
mov
addr16
nop
jp
adc
cmp
pop
cdq
adc
sahf
repnz
xor
dec
mov
stos
sti
push
xor
push
addr16
dec
in
pop
inc
aaa
sbb
stos
gs
adc
xor
lods
fs
jne
mov
cmps
ficom
adc
cwde
adc
jp
std
cld
addr16
dec
adc
in
aaa
mov
cwde
test
out
out
pop
in
cmps
bound
sahf
xchg
je
dec
dec
aaa
mov
bound
inc
out
push
aad
cwde
cdq
clc
nop
(bad)
cs
mov
cwde
and
repz
outs
stc
jg
lahf
rol
mov
aaa
mov
call
movs
in
inc
cwde
addr16
sti
cwde
cdq
cdq
sti
cwde
movs
sbb
lods
pop
xchg
mov
(bad)
loop
mov
movs
cdq
data16
sbb
and
sahf
in
inc
cwde
stos
call
sbb
inc
(bad)
xchg
push
mov
addr16
in
out
pop
dec
mov
addr16
addr16
addr16
adc
jmp
push
push
sbb
in
retf
outs
and
fs
les
mov
out
pop
jns
jmp
(bad)
data16
mov
addr16
dec
call
mov
cwde
addr16
jp
cwde
adc
or
cld
addr16
jnp
mov
adc
loop
in
inc
cwde
enter
cwde
adc
mov
adc
in
out
subps
cld
addr16
in
out
sets
mov
addr16
in
mov
rdpmc
std
cld
lock
push
and
data16
inc
aaa
lock
addr16
adc
xchg
test
jnp
mov
adc
add
mov
out
sbb
xor
dec
in
pop
inc
aaa
sbb
mov
into
inc
xor
push
call
and
cmps
ficom
aaa
lahf
cdq
jmp
mov
adc
push
inc
aaa
repnz
pop
cwde
sbb
or
cwde
in
retf
imul
(bad)
fimul
addr16
mov
xchg
sbb
inc
daa
sbb
mov
and
retf
lahf
into
jns
or
addr16
(bad)
(bad)
dec
mov
adc
dec
in
fucom
aaa
mov
mov
addr16
dec
in
pop
inc
aaa
or
in
xor
cwde
retf
outs
daa
iret
(bad)
mov
std
adc
adc
adc
out
pop
stos
mov
cwde
adc
adc
out
pop
jnp
addr16
adc
or
cwde
adc
xchg
sbb
inc
daa
sbb
mov
mov
cmps
dec
retf
pusha
pop
push
mov
clc
mov
sbb
loopne
push
shr
out
jge
out
xor
lods
mov
mov
mov
pop
mov
lahf
adc
aam
lock
mov
or
cwde
adc
(bad)
scas
inc
mov
cdq
addr16
clc
xchg
pusha
adc
pop
jns
or
jo
jmp
jmp
inc
adc
mov
addr16
and
jae
aaa
lahf
outs
hlt
aaa
and
jns
(bad)
fidivr
adc
cmp
xor
push
out
sub
call
cwde
jnp
addr16
adc
fs
lock
outs
jo
call
in
in
retf
jnp
outs
mov
in
adc
sahf
addr16
int3
addr16
in
out
fucom
aaa
mov
repnz
(bad)
addr16
cmp
daa
jo
call
fwait
adc
dec
adc
dec
out
pop
jns
in
pop
mov
imul
dec
mov
push
dec
cwde
in
jecxz
cwde
in
out
call
addr16
adc
cwde
adc
(bad)
fiadd
adc
mov
call
int
pop
ss
daa
or
push
pusha
call
outs
hlt
aaa
and
jns
cwde
jnp
addr16
adc
arpl
adc
lock
in
retf
outs
jo
call
in
in
retf
arpl
adc
addr16
(bad)
mov
mov
lahf
adc
xor
in
in
(bad)
out
adc
or
retf
adc
mov
fwait
enter
lods
loope
addr16
sti
retf
adc
(bad)
ds
mov
sbb
adc
movs
int
pop
in
and
xor
test
cmp
dec
aas
movs
xor
test
adc
add
sbb
mov
push
mov
imul
cs
in
adc
cmps
adc
push
fucomp
push
dec
adc
mov
rcr
in
mov
fcom
dec
in
or
ret
cwde
call
out
inc
and
pop
xchg
rcr
cwde
outs
in
fstp
mov
fcom
and
xchg
out
jge
addr16
sbb
and
or
popf
loop
cmps
xchg
sti
(bad)
sbb
gs
pop
cmp
mov
sbb
data16
addr16
ret
xchg
sbb
adc
push
icebp
rcl
cbw
adc
enter
and
sahf
addr16
in
out
(bad)
aaa
movs
adc
out
push
cmp
mov
repnz
and
sti
adc
mov
das
push
mov
ror
adc
jmp
xchg
mov
xor
daa
nop
cwde
jmp
xchg
movs
in
outs
mov
mov
nop
jnp
sti
mov
shl
out
inc
in
out
ffree
aaa
movs
(bad)
dec
in
pop
inc
aaa
sbb
(bad)
xor
inc
xor
lahf
jo
jl
sbb
icebp
fst
mov
jmp
cld
and
mov
in
fucomp
aaa
movs
mov
aaa
xor
ret
mov
es
sbb
adc
test
ficom
pop
pusha
cwde
adc
lahf
leave
jb
sbb
fst
(bad)
push
and
xor
scas
adc
nop
std
(bad)
and
sti
lahf
pop
push
dec
addr16
xor
xchg
movs
jmp
mov
adc
push
ins
sbb
data16
jbe
idiv
adc
leave
addr16
aad
xchg
cwde
cli
adc
fs
movs
jmp
mov
xchg
sub
adc
and
push
mov
std
jmp
and
sti
lahf
xchg
movs
std
movs
sar
push
pop
adc
adc
or
call
pushf
addr16
bound
retf
outs
sbb
(bad)
sbb
rcr
xchg
movs
std
data16
push
mov
xchg
pop
and
mov
fist
fwait
cmps
cwde
adc
addr16
pop
and
mov
fwait
cs
addr16
adc
ins
outs
push
mov
and
aas
or
xchg
addr16
xchg
sti
xchg
cdq
xchg
ret
xchg
xchg
sbb
sub
in
inc
mov
mov
dec
pop
fadd
jo
sahf
xchg
sti
cwde
cdq
clc
mov
fucom
mov
adc
cwde
adc
pusha
call
adc
adc
or
addr16
loopne
push
rcr
test
adc
mov
push
mov
push
in
cmp
or
test
sub
fadd
(bad)
test
sub
or
mul
or
or
jle
cwde
add
and
cmp
in
ucomiss
or
neg
sar
mov
in
jmp
test
sub
(bad)
cli
aaa
xchg
fs
jge
or
push
addr16
adc
test
adc
dec
frstor
or
or
test
sub
mov
jge
or
test
sub
pop
pop
test
sub
push
sub
or
test
mov
scas
daa
cwde
ret
jns
cwde
adc
push
in
adc
cwde
pop
dec
and
mov
fdivp
or
scas
daa
cwde
adc
or
test
sub
in
inc
test
push
mov
test
sub
test
sub
or
test
sub
or
out
or
scas
push
in
or
cdq
jmp
test
sub
and
jle
cwde
cmp
in
inc
test
push
mov
test
sub
test
sub
or
test
sub
or
out
or
lahf
xchg
mov
(bad)
push
or
test
sub
stc
sub
or
inc
cwde
pop
shr
out
jge
push
jnp
inc
jmp
out
fstp
add
out
inc
cmp
pop
in
out
fucom
aaa
movs
test
out
addr16
mov
outs
cdq
jecxz
(bad)
mov
inc
cwde
rcr
mov
je
jge
in
mov
cdq
cwde
clc
xchg
(bad)
out
mov
fbld
mov
addr16
sbb
xor
inc
dec
dec
mov
adc
xor
sahf
adc
xor
sti
outs
adc
mov
pop
out
scas
in
fstp
mov
ja
movs
repz
mov
ss
push
mov
cs
mov
addr16
add
daa
xchg
movs
scas
push
push
fwait
scas
out
inc
cmp
pop
jns
invd
adc
aaa
jo
in
addr16
sbb
and
xor
aaa
adc
inc
inc
dec
inc
push
mov
sahf
sahf
sti
xchg
enter
cdq
jecxz
(bad)
cs
mov
out
inc
in
out
(bad)
aaa
movs
sbb
mov
push
mov
in
inc
cwde
(bad)
dec
in
pop
inc
aaa
sbb
mov
inc
add
jmp
out
push
sti
and
cwde
adc
adc
dec
lea
rol
mov
aaa
mov
call
in
pop
mov
sbb
and
lds
mov
imul
sti
out
lahf
addr16
cmp
outs
pop
sbb
pop
call
cmps
jg
xor
and
lock
cld
addr16
icebp
out
in
push
mov
adc
mov
outs
push
cmps
jg
inc
push
movs
jnp
and
movs
xchg
pop
and
leave
adc
out
inc
adc
fs
out
pop
mov
(bad)
adc
cld
adc
mov
adc
fwait
adc
cs
push
inc
arpl
fwait
pop
and
jle
mov
mov
cwde
call
fwait
push
inc
in
lea
scas
out
dec
shl
nop
sti
lahf
pushf
mov
sbb
cmc
cld
addr16
adc
cwde
adc
and
ds
adc
cwde
adc
mov
dec
rcr
les
pop
or
cld
addr16
out
addr16
call
cwde
cwde
ret
mov
movs
inc
out
pop
sbb
mov
icebp
scas
outs
dec
call
push
jns
pavgb
cld
addr16
mov
addr16
cwde
adc
sbb
clc
test
addr16
call
or
cld
addr16
pop
pop
out
jle
mov
and
jmp
out
fucom
push
jge
retf
mov
sti
jle
mov
nop
jle
sti
mov
aad
and
pop
repz
mov
and
jmp
sbb
cld
outs
test
pop
sub
jle
mov
and
and
pop
out
ffree
aaa
mov
sbb
cld
addr16
movs
jmp
dec
icebp
xor
and
jle
mov
sbb
retf
arpl
jle
jg
movs
sti
(bad)
fs
xchg
pop
and
fs
inc
in
sbb
xchg
test
adc
addr16
addr16
addr16
adc
cwde
in
sbb
aad
mov
mov
adc
and
inc
adc
inc
adc
sub
sti
inc
sub
adc
mov
sti
add
cwde
adc
cmp
shr
out
jge
jmp
ds
inc
add
adc
addr16
data16
out
pusha
adc
pop
cwde
sti
outs
cmp
or
cwde
jnp
pop
cwde
adc
daa
jo
repnz
mov
(bad)
adc
lahf
mov
aaa
mov
repnz
mov
push
mov
addr16
addr16
repz
inc
push
in
rcl
mov
out
jge
jmp
dec
adc
xchg
lahf
adc
cmp
addr16
sbb
sti
cwde
adc
and
cwde
adc
mov
jae
aas
nop
mov
mov
cdq
icebp
rcr
jb
stos
cld
sbb
mov
rcr
in
xlat
cmps
mov
push
mov
ficom
inc
push
call
rcr
in
xlat
cmps
mov
push
mov
ficom
cmp
adc
jp
inc
cdq
adc
and
pushf
sti
out
cwde
adc
cwde
fucomp
mov
fucomp
cmp
cwde
lods
sbb
and
cwde
adc
mov
sbb
mov
ficom
mov
out
jge
out
fdivrp
dec
mov
adc
(bad)
scas
adc
cmp
addr16
mov
in
push
pop
(bad)
aam
cdq
cwde
adc
xchg
movs
sti
cdq
icebp
rcr
jb
stos
cld
sbb
mov
rcr
in
push
jle
in
sti
cdq
xchg
movs
sti
cdq
sbb
mov
dec
call
adc
cmp
xor
imul
aaa
retf
inc
jmp
push
les
out
push
jmp
mov
jo
lock
nop
jp
sbb
addr16
pop
fsub
jae
mov
fucomp
ds
lahf
cmp
outs
xchg
movs
sti
cdq
pop
pop
mov
cdq
iret
sti
dec
sub
adc
movs
in
aas
xchg
cmps
inc
mov
cdq
rcl
jmp
and
(bad)
adc
and
aam
cdq
cwde
adc
xchg
movs
sti
cdq
sbb
mov
rcr
in
js
lahf
cmp
cwde
fucomp
jmp
addr16
movs
jecxz
mov
jecxz
xchg
adc
mov
fucomp
mul
movs
adc
adc
pop
js
lahf
adc
cmp
fidivr
adc
jmp
and
aam
sbb
stos
cld
addr16
addr16
in
fstp
inc
push
jo
clc
addr16
jnp
cbw
adc
addr16
sbb
addr16
mov
outs
cdq
cli
addr16
jnp
cbw
adc
rcl
mov
out
pop
dec
jecxz
int
pop
in
xor
xor
lods
jno
xor
aas
mov
push
push
ja
adc
addr16
cwde
mov
out
pusha
adc
pop
jnp
pop
cwde
adc
addr16
ficom
push
inc
aad
mov
or
cwde
adc
in
out
fist
xor
and
add
dec
gs
call
sbb
addr16
fsubr
int
aam
adc
outs
aad
adc
ficom
mov
addr16
jns
cwde
lods
ret
or
cwde
sti
ret
adc
ja
adc
and
push
fcom
adc
lahf
mov
aaa
mov
adc
outs
aad
adc
fst
mov
add
adc
jecxz
adc
cwde
addr16
icebp
rcr
jb
stos
cld
adc
mov
out
pop
sahf
sti
(bad)
push
pop
xor
outs
and
aaa
lock
daa
cwde
jns
or
cwde
adc
(bad)
ficomp
addr16
push
and
cdq
adc
and
test
cmp
adc
popa
into
sti
and
adc
and
push
jo
adc
lahf
outs
hlt
aaa
and
jns
enter
(bad)
dec
in
pop
inc
aaa
sbb
mov
cwde
adc
xor
lods
sbb
mov
push
mov
in
push
out
jmp
push
pusha
aam
mov
lahf
test
push
inc
addr16
mov
fucomp
fistp
aas
retf
imul
mov
dec
sbb
adc
cdq
addr16
out
(bad)
repnz
mov
cwde
mov
pop
(bad)
sub
sbb
inc
push
mov
pop
jne
shl
cwde
repnz
(bad)
sub
sbb
inc
push
int3
push
in
inc
out
pop
jne
shl
inc
cwde
sbb
out
jae
adc
cwde
addr16
bound
inc
cwde
cwde
sbb
loop
in
inc
cwde
pop
xchg
mov
addr16
(bad)
lahf
adc
xor
addr16
inc
cwde
enter
jo
cmc
addr16
sahf
cmp
das
xchg
addr16
xor
mov
out
(bad)
jb
mov
cli
popa
in
inc
cwde
adc
mov
loop
in
inc
cwde
xchg
movs
sub
fadd
mov
addr16
nop
jp
adc
ss
pusha
in
inc
cwde
xchg
movs
add
cmps
inc
cdq
addr16
mov
outs
rcr
xchg
in
rcr
loopne
push
shr
out
jge
push
imul
add
mov
cmc
out
cmp
and
cwde
adc
adc
aaa
mov
mov
adc
loop
in
inc
cwde
enter
fadd
outs
fs
inc
in
pop
push
mov
jg
cmp
pop
sahf
cmp
jo
mul
aad
bound
inc
cwde
cwde
clc
xchg
data16
inc
aaa
adc
in
pmaxsw
addr16
sbb
inc
(bad)
and
mov
cwde
addr16
push
xor
adc
lahf
mov
aaa
mov
addr16
out
(bad)
pop
push
mov
movs
sbb
mov
je
loopne
mov
in
jmp
push
inc
fist
mov
addr16
adc
fs
lock
fwait
data16
inc
aaa
jo
clc
addr16
call
pop
nop
inc
cwde
in
cmp
pop
jbe
mov
addr16
bt
cld
adc
cwde
stos
sti
ds
adc
lahf
cdq
jmp
mov
mov
aaa
mov
retf
addr16
ficom
xor
fs
inc
cwde
retf
sti
or
cwde
adc
pushaw
call
addr16
push
pop
fist
mov
fisub
cwde
iret
cwde
ret
outs
addr16
dec
fist
mov
addr16
dec
loopne
push
shr
out
jge
push
imul
dec
aas
dec
push
aaa
lahf
mov
aaa
mov
adc
out
cmp
push
repnz
loop
in
inc
cwde
enter
fadd
ret
(bad)
in
inc
in
pop
aas
mov
adc
in
out
(bad)
addr16
xchg
mov
addr16
aam
adc
in
out
in
fstp
cmp
pop
(bad)
in
inc
cwde
in
pop
xor
fs
inc
cwde
enter
ficom
xor
fs
inc
cwde
enter
cwde
adc
xor
cwde
sahf
cmp
jo
sti
addr16
sbb
fistp
inc
aaa
lock
and
gs
inc
aaa
jo
mul
nop
jp
adc
mov
loop
out
inc
cwde
enter
cwde
adc
addr16
gs
inc
xor
data16
scas
sti
cli
and
lock
cwde
sti
mov
cwde
adc
addr16
ficom
xor
(bad)
mov
cld
std
pop
cwde
adc
cmp
jmp
jge
push
imul
sbb
lahf
outs
hlt
aaa
loop
in
inc
cwde
adc
aam
adc
in
out
in
fstp
cmp
(bad)
popa
in
inc
out
pusha
and
pop
in
retf
imul
out
paddusw
cld
addr16
in
out
(bad)
mov
xlat
mov
cwde
addr16
push
lock
mov
cwde
addr16
cdq
lods
out
pop
ret
jle
xor
fs
inc
cwde
into
sti
dec
and
in
inc
cwde
mov
jmp
push
mov
pop
addr16
cmp
addr16
sti
addr16
jns
aaa
lock
cwde
cwde
retf
outs
addr16
mov
out
pop
clc
call
cwde
addr16
push
or
adc
jb
sub
addr16
jns
aaa
lock
cwde
cwde
retf
outs
addr16
mov
out
pop
clc
pushf
js
push
sti
addr16
jns
aaa
lock
cwde
cwde
retf
outs
addr16
mov
addr16
dec
loopne
pop
inc
aaa
sbb
stos
cbw
adc
xor
lods
sub
xchg
mov
aaa
mov
repnz
loop
in
inc
cwde
enter
sbb
mov
cwde
addr16
data16
inc
out
pop
in
retf
imul
out
paddusw
cld
addr16
in
out
(bad)
sahf
push
mov
jmp
push
adc
adc
in
adc
out
(bad)
inc
xor
ins
in
inc
cwde
retf
and
adc
addr16
mov
or
cwde
adc
cdq
addr16
out
(bad)
adc
adc
in
in
retf
push
lock
cwde
sti
cli
and
jnp
mov
adc
(bad)
mov
test
addr16
stos
jne
cwde
adc
adc
aaa
mov
cwde
sti
stos
and
jnp
mov
adc
(bad)
xchg
push
mov
addr16
jns
(bad)
jp
mov
lock
inc
xor
arpl
and
dec
mov
loop
in
inc
cwde
adc
mov
in
push
cmp
mov
jmp
xor
in
retf
fwait
jo
std
addr16
clc
add
fstp
inc
pop
pushf
sti
xchg
adc
mov
mov
and
cwde
adc
addr16
ficom
xor
(bad)
push
sub
addr16
sti
(bad)
and
fs
sbb
cwde
adc
xchg
add
(bad)
dec
in
pop
inc
aaa
sbb
stos
cbw
adc
xor
cwde
jecxz
daa
je
movs
loopne
inc
dec
pusha
call
fstp
ds
mov
mov
data16
inc
aaa
adc
daa
enter
addr16
cmp
sbb
adc
cwde
addr16
push
js
adc
cdq
addr16
mov
jmp
aaa
mov
jo
dec
cwde
addr16
data16
inc
out
pop
in
retf
imul
out
paddusw
cld
addr16
in
out
(bad)
cmps
push
mov
or
cwde
adc
fs
lock
xchg
data16
inc
aaa
jo
jmp
call
mov
scas
mov
adc
ficom
mov
ja
push
mov
pop
cwde
adc
add
call
pop
cli
sbb
adc
data16
mov
addr16
setns
cld
addr16
cmps
adc
out
pop
jnp
out
adc
addr16
jmp
call
enter
cwde
adc
cwde
in
jmp
in
adc
out
sbb
call
mov
cwde
in
out
call
dec
cmps
adc
out
pop
clc
jp
jmp
push
les
(bad)
cld
addr16
cld
addr16
jns
aaa
lock
and
call
adc
push
cdq
addr16
aaa
mov
cwde
adc
pusha
sti
mov
cwde
adc
cmp
fidivr
adc
push
neg
sub
jmp
and
cwde
in
out
sbb
call
cwde
sahf
add
in
inc
jmp
mov
cwde
adc
sbb
stos
pop
cwde
adc
(bad)
jne
mov
addr16
pshufw
adc
cwde
scas
sti
cmp
adc
adc
call
cmp
inc
ins
in
inc
in
pop
aas
mov
pop
mov
addr16
push
xor
loopne
inc
cwde
enter
ficom
xor
loopne
inc
cwde
enter
cwde
adc
cwde
in
pop
xor
loopne
inc
cwde
enter
ficom
xor
loopne
inc
cwde
enter
cwde
adc
iret
repnz
adc
adc
fst
mov
mov
push
mov
adc
push
pusha
pop
xchg
push
cdq
data16
mov
cwde
addr16
xor
loopne
inc
cwde
enter
cwde
adc
loop
in
inc
cwde
sbb
addr16
xchg
or
adc
retf
mov
cwde
addr16
xor
pop
in
inc
cwde
enter
cwde
adc
mov
xchg
push
cdq
addr16
out
push
addr16
out
push
addr16
out
push
addr16
out
push
addr16
jg
call
cwde
iret
in
or
and
nop
pop
ja
sar
adc
aad
call
nop
jns
iret
jnp
mov
adc
fisubr
in
inc
cwde
iret
sti
push
and
mov
call
addr16
push
inc
fcom
mov
fisubr
in
inc
cwde
iret
cwde
ret
outs
addr16
addr16
in
out
cwde
sub
sti
cs
cwde
adc
addr16
adc
mov
mov
cdq
addr16
out
jmp
push
sub
adc
cwde
addr16
mov
sbb
inc
mov
sbb
inc
mov
sbb
inc
mov
and
rcr
adc
in
inc
xor
pop
cdq
addr16
xor
cwde
sbb
scas
push
dec
nop
inc
ja
xchg
arpl
addr16
pop
gs
inc
push
sbb
xchg
xor
xchg
cwde
sahf
add
in
inc
xor
jmp
nop
jp
sbb
cs
cwde
adc
loop
in
inc
cwde
enter
cwde
adc
addr16
in
inc
xor
outs
mov
out
pop
push
xor
adc
cwde
cmps
adc
movs
adc
out
pop
cwde
sti
outs
arpl
sub
and
cwde
adc
addr16
ficom
xor
(bad)
mov
mov
scas
pop
inc
aaa
sbb
stos
cbw
adc
xor
cwde
retf
outs
adc
fdivr
cmps
addr16
in
out
sbb
call
outs
hlt
aaa
loop
in
inc
cwde
adc
aam
adc
in
out
out
push
sti
ret
xchg
addr16
cmp
dec
xchg
xchg
sub
adc
sbb
cmp
mov
addr16
xchg
cmp
loop
in
inc
cwde
enter
cwde
adc
push
pop
cli
cmps
cbw
adc
mov
jecxz
cmps
test
adc
jne
xor
std
push
in
mov
lahf
cdq
jmp
mov
pop
xchg
mov
repnz
xchg
sbb
mov
cdq
addr16
out
(bad)
arpl
inc
cwde
sbb
mov
or
mov
push
cwde
adc
cwde
aad
mov
fucomp
mov
out
(bad)
cmps
jno
mov
dec
in
cmp
sbb
adc
or
retf
(bad)
aaa
lock
cwde
sahf
cmp
jo
(bad)
addr16
nop
jp
and
stos
addr16
in
out
sbb
call
mov
fisttp
cwde
sahf
cmp
jo
(bad)
addr16
nop
jp
sbb
sub
sahf
cmp
lock
push
and
data16
inc
aaa
jo
(bad)
addr16
nop
jp
adc
(bad)
lahf
adc
xor
(bad)
in
inc
cwde
enter
cwde
adc
or
pop
pmaxsw
sbb
inc
push
pop
imul
aaa
lahf
mov
aaa
mov
call
movs
int
pop
in
pop
in
xor
cwde
retf
outs
daa
dec
std
neg
call
sahf
jns
or
cwde
adc
and
mov
jmp
mov
add
dec
gs
call
das
push
mov
jo
xchg
call
push
sti
push
cwde
adc
and
jmp
push
hlt
mov
in
retf
outs
mov
in
pop
inc
adc
in
inc
in
sbb
imul
xor
inc
cwde
addr16
jp
sbb
inc
sbb
adc
inc
data16
xor
dec
cwde
addr16
jp
jae
(bad)
ja
push
mov
addr16
js
and
mov
inc
mov
in
out
(bad)
aaa
mov
pop
inc
aaa
sbb
mov
xor
cwde
jecxz
daa
push
jns
mov
mov
out
pop
stos
fist
adc
adc
aaa
mov
cwde
sti
repnz
cwde
adc
addr16
ficom
inc
push
jo
xchg
jns
sets
mov
fwait
addr16
out
cwde
stos
sti
cmps
pop
cwde
adc
mov
adc
mov
in
push
cmp
xor
or
lods
adc
adc
loop
call
(bad)
movs
adc
aaa
lahf
outs
hlt
aaa
loop
jmp
aam
adc
in
out
jmp
push
cwde
movs
adc
mov
adc
loop
out
inc
cwde
enter
addr16
cmp
cwde
cwde
adc
jns
adc
pop
jne
mov
cwde
addr16
push
js
in
inc
in
pop
js
popf
adc
adc
mov
outs
mov
adc
mov
cwde
addr16
push
pushf
adc
inc
in
pop
sbb
jns
pmaxsw
cld
addr16
in
out
pop
inc
cwde
sbb
mov
sbb
mov
in
sbb
cs
fld
jecxz
adc
and
push
sahf
push
cwde
ins
lahf
pop
enter
xchg
xchg
ja
cwde
adc
movs
pop
cmc
and
adc
movs
inc
out
fstp
dec
pushf
adc
and
push
mov
adc
jno
addr16
cs
cs
jecxz
adc
addr16
cs
sub
inc
retf
xor
mov
addr16
ins
scas
pop
retf
inc
icebp
xor
cwde
adc
pushf
adc
xor
xchg
mov
jnp
adc
xor
adc
ja
inc
sti
xor
sbb
ins
fwait
adc
movs
inc
out
int3
sbb
adc
adc
addr16
(bad)
adc
mov
cwde
addr16
push
mov
in
inc
in
pop
sbb
jns
paddsb
cld
addr16
in
in
(bad)
cwde
sbb
mov
addr16
mov
loop
jmp
cmp
in
inc
aaa
jo
dec
cwde
addr16
cwde
adc
loop
jmp
data16
pop
out
(bad)
push
das
mov
psllw
cld
addr16
test
jns
aaa
lock
and
xchg
and
mov
mov
adc
mov
inc
(bad)
ja
push
mov
push
cwde
adc
lahf
cdq
jmp
mov
cwde
xchg
lds
sbb
ss
adc
cwde
addr16
cmp
addr16
rcl
leave
sahf
cmp
in
inc
aaa
jo
xchg
call
outs
stos
fldenv
aam
(bad)
(bad)
in
inc
arpl
cwde
cmp
pop
nop
jl
adc
inc
out
or
mov
loop
jmp
pop
popf
addr16
xchg
jo
inc
cwde
jmp
cwde
cwde
data16
cwde
jns
xor
loopne
cwde
addr16
jp
jae
xor
cwde
out
inc
cwde
sbb
mov
pop
cwde
sbb
mov
pusha
and
pop
cli
or
adc
sbb
adc
jb
xchg
mov
cmps
popf
inc
aam
retf
sti
or
xchg
jns
test
mov
sbb
addr16
push
xor
cwde
out
inc
cwde
sbb
mov
(bad)
cwde
sbb
mov
pusha
adc
pop
cli
aam
cwde
adc
loop
out
inc
cwde
sbb
mov
sahf
addr16
cmp
adc
call
ret
(bad)
cld
addr16
in
out
(bad)
mov
xlat
mov
outs
sbb
fwait
(bad)
in
inc
aaa
jo
xchg
jns
aaa
adc
in
in
cwde
stos
sti
push
push
cwde
adc
call
addr16
xchg
jns
aaa
lock
cwde
in
lea
jno
mov
arpl
addr16
xor
loop
out
inc
cwde
sbb
mov
xchg
addr16
cmp
dec
cwde
adc
adc
aaa
mov
cwde
jnp
mov
adc
mov
inc
(bad)
ja
push
mov
push
cwde
adc
cdq
adc
cwde
addr16
jns
xchg
mov
cmps
popf
inc
in
(bad)
sbb
inc
cwde
sbb
mov
ja
fldenv
cli
shl
(bad)
pop
jbe
mov
addr16
bt
cld
addr16
stos
adc
addr16
xchg
lahf
adc
(bad)
sub
mov
addr16
(bad)
(bad)
cld
addr16
stos
adc
addr16
cli
mov
adc
and
push
mov
addr16
pand
cld
addr16
stos
adc
addr16
cli
lods
cbw
adc
ja
push
mov
addr16
js
and
stos
adc
outs
hlt
aaa
loop
jmp
push
sbb
jle
enter
ficom
xor
fs
or
adc
and
xchg
pop
popf
addr16
aaa
mov
addr16
out
(bad)
addr16
jmp
inc
push
jo
lea
cli
and
cwde
adc
dec
jne
mov
addr16
movzx
cld
addr16
stos
adc
addr16
clc
(bad)
jmp
jle
enter
ja
inc
in
sbb
nop
shl
mov
ficomp
movs
ud1
cld
addr16
mov
jns
aaa
lock
cwde
in
lea
jae
(bad)
jne
push
mov
addr16
jp
and
stos
adc
addr16
clc
cmps
setl
cld
addr16
mov
jns
aaa
lock
push
and
adc
mov
lahf
adc
push
pop
(bad)
in
inc
cmp
dec
ja
int
pop
ss
daa
xchg
lock
mov
cwde
adc
adc
out
pop
in
retf
outs
repnz
data16
mov
call
fucomp
aaa
mov
test
adc
(bad)
pop
es
(bad)
into
daa
mov
popa
adc
mov
cmp
fidivr
adc
aas
mov
adc
fsubr
(bad)
sbb
pusha
jnp
adc
push
pusha
call
addr16
mov
adc
push
call
mov
cwde
adc
nop
je
mov
adc
addr16
(bad)
mov
jo
lea
call
cwde
jnp
mov
adc
pop
in
inc
cwde
jo
lea
call
pop
(bad)
cld
addr16
jp
addr16
push
test
adc
cwde
sbb
lahf
and
pop
adc
add
repnz
adc
jns
inc
in
inc
cwde
mov
mov
and
jo
mov
call
inc
push
mov
in
or
loop
in
inc
cwde
enter
data16
inc
cwde
or
sbb
cmp
inc
cwde
addr16
inc
ror
inc
cwde
xchg
addr16
mov
in
sub
lahf
mov
aaa
mov
sbb
sahf
cmp
cmps
pop
cdq
addr16
mov
sbb
inc
call
addr16
sti
jmp
call
or
or
sahf
and
lahf
adc
inc
rcr
cwde
jo
mov
sbb
loop
in
inc
cwde
(bad)
dec
in
pop
inc
aaa
and
ds
sti
push
push
cwde
adc
xor
cwde
ret
outs
es
xchg
inc
mov
js
inc
xchg
dec
loopne
adc
or
cwde
adc
out
mov
and
adc
and
adc
mov
in
sbb
sbb
addr16
lods
cwde
scas
sti
push
dec
cwde
adc
cwde
adc
out
pop
jns
jmp
mov
imul
addr16
sbb
sbb
mov
fwait
cwde
cwd
or
enter
cwde
jns
cwde
out
add
stos
adc
out
pop
nop
ret
fwait
cwde
sbb
out
cwde
adc
addr16
adc
addr16
sahf
cmp
xchg
enter
push
scas
out
sbb
clc
mov
fistp
aaa
loop
ins
inc
cwde
cmps
inc
sbb
push
je
adc
out
sbb
call
addr16
xor
fs
inc
cwde
enter
cwde
adc
addr16
jmp
inc
push
jo
xchg
addr16
call
inc
clc
stos
in
adc
push
mov
mov
test
in
inc
cwde
(bad)
dec
in
pop
pop
mov
mov
mov
lds
add
stos
fidiv
out
pop
inc
push
xor
pusha
mov
pop
adc
mov
lahf
test
pop
mov
xor
mov
nop
jp
test
xchg
out
xor
arpl
and
pop
out
fucom
aaa
mov
(bad)
dec
ja
int
pop
out
pop
mov
xor
data16
sub
adc
aas
nop
cwde
inc
mov
fs
adc
outs
pop
cmps
cwde
scas
sti
ror
adc
(bad)
call
gs
adc
nop
jge
mov
pushf
addr16
out
or
or
or
push
and
push
cwde
adc
lahf
cdq
jmp
mov
pushf
adc
cwde
addr16
inc
push
jo
nop
addr16
call
pusha
in
retf
ror
pop
addr16
mov
fwait
arpl
inc
aaa
repnz
mov
xor
and
outs
hlt
aaa
loop
call
call
shl
mov
adc
pushf
addr16
js
popf
adc
adc
lahf
outs
hlt
aaa
loop
call
(bad)
div
jmp
push
je
adc
cmps
in
and
fcom
mov
push
cwde
adc
movs
retf
sti
pop
pushf
addr16
out
pusha
adc
pop
inc
push
xchg
test
inc
in
cwde
scas
sti
dec
dec
cwde
adc
cdq
adc
out
pop
jns
movups
cld
addr16
in
out
(bad)
retf
in
inc
cwde
sbb
mov
pop
sbb
test
adc
addr16
push
aam
adc
jmp
sbb
mov
out
pop
sahf
cmp
lock
push
and
fs
inc
in
adc
mov
in
out
inc
cwde
addr16
dec
lock
and
cwde
adc
addr16
ficom
inc
push
jo
xchg
addr16
xchg
push
cmps
(bad)
adc
addr16
xor
cwde
adc
fs
inc
cwde
addr16
mov
in
sbb
cld
adc
addr16
push
imul
aaa
repnz
call
dec
pushf
addr16
inc
shl
cwde
lock
and
fs
inc
xor
cwde
nop
jp
adc
in
out
(bad)
outs
and
jmp
inc
push
jo
xchg
addr16
clc
(bad)
out
pusha
adc
pop
sahf
cmp
in
inc
aaa
jo
mov
jns
jmp
out
jmp
inc
adc
adc
nop
popa
das
mov
cwde
addr16
loopne
push
sar
in
sub
xor
lods
pop
and
xor
xchg
adc
adc
(bad)
lahf
adc
(bad)
scas
cwde
adc
loope
adc
stos
adc
pop
into
adc
xchg
aam
popa
repnz
gs
xchg
addr16
call
pusha
cmp
pop
sbb
and
adc
xor
jns
je
mov
mov
inc
push
aam
adc
xor
cmps
xchg
addr16
call
adc
(bad)
cmps
jno
mov
xor
loop
addr16
call
fucomp
scas
addr16
adc
lahf
outs
hlt
aaa
and
jmp
out
xor
jb
addr16
call
mov
mov
out
(bad)
cmp
es
adc
outs
addr16
inc
in
out
mov
jp
ret
fwait
xchg
scas
xor
xchg
addr16
clc
in
pusha
in
out
ffree
aaa
mov
cwde
in
fwait
adc
out
lods
push
scas
loope
adc
lahf
outs
hlt
aaa
and
jns
(bad)
out
or
cwde
adc
fs
push
push
mov
daa
cwde
jns
or
cwde
adc
(bad)
addr16
dec
adc
jbe
pop
cli
out
cwde
addr16
loope
ret
fidivr
inc
aaa
or
jmp
or
cld
test
inc
aam
addr16
out
(bad)
addr16
addr16
xchg
addr16
inc
push
sub
and
and
jns
push
shr
out
jge
push
pop
retf
inc
jmp
hlt
mov
std
addr16
call
pop
cmp
addr16
aam
xlat
xchg
adc
cbw
adc
or
enter
enter
pop
pop
out
(bad)
out
cmp
xchg
lahf
adc
aam
adc
jecxz
cmps
nop
inc
xor
xor
push
cmp
adc
xlat
enter
enter
pop
add
(bad)
fidivr
aam
adc
ror
imul
call
push
mov
iret
adc
in
fnsave
inc
nop
jg
sti
not
aam
and
sti
xchg
pop
push
push
cwd
adc
addr16
sahf
sti
repz
enter
cwde
jns
or
cwde
nop
adc
sbb
jp
(bad)
cld
addr16
xor
(bad)
cld
addr16
jns
(bad)
jle
mov
popa
adc
out
ficom
aas
mov
pop
mov
(bad)
scas
aas
mov
(bad)
mov
mov
adc
sti
sahf
dec
cwde
adc
cmp
cmps
dec
cwde
adc
arpl
cld
mov
cwde
adc
cmp
shr
out
jge
call
fdiv
dec
push
adc
xchg
lahf
adc
inc
adc
adc
xchg
sti
bound
inc
adc
adc
mov
repnz
pushf
sti
xchg
dec
cwde
adc
pushf
sti
add
aam
repnz
(bad)
and
addr16
mov
pusha
in
out
fucomp
aaa
mov
int
pop
xor
xor
pushaw
call
mov
mov
adc
mov
in
sbb
cwde
adc
cmp
aaa
or
jno
pop
outs
aaa
lahf
cdq
jmp
mov
adc
data16
cwde
in
pop
inc
adc
adc
movs
int
pop
in
pop
jmp
and
jmp
lahf
adc
aas
mov
adc
push
inc
aaa
repnz
popa
cwde
adc
or
addr16
into
cmp
retf
rcl
data16
cwde
in
pop
inc
adc
inc
adc
dec
cwde
adc
adc
dec
cwde
adc
lock
mov
xchg
adc
inc
adc
dec
cwde
adc
movs
int
pop
in
pop
call
in
fisttp
fsubr
fisttp
add
mov
daa
lahf
addr16
call
sahf
adc
lahf
outs
hlt
aaa
and
jns
fucomp
out
jno
adc
xchg
in
retf
outs
jo
xchg
addr16
sbb
pushf
and
mov
inc
aam
repnz
mov
retf
fwait
jo
xchg
addr16
sbb
xchg
in
retf
fwait
jo
xchg
addr16
and
(bad)
in
retf
fwait
jo
xchg
addr16
call
adc
mov
fisttp
loope
push
shr
out
jge
out
xor
lods
es
add
aas
mov
sbb
push
sbb
sti
push
dec
cwde
adc
(bad)
pop
aas
mov
out
pusha
cmp
pop
mov
sbb
mov
push
push
sub
aam
and
aam
addr16
jns
or
stos
(bad)
cld
addr16
xchg
addr16
mov
sbb
jmp
test
es
sbb
adc
jnp
adc
lahf
adc
xor
scas
pop
stos
sbb
mov
adc
call
adc
aaa
nop
shr
out
jge
call
fld
arpl
xchg
adc
xor
out
sub
dec
push
pop
aaa
popf
mov
in
out
inc
adc
data16
(bad)
into
ds
out
mov
dec
fstp
xor
gs
xchg
js
lds
mov
gs
stc
out
sub
imul
mov
das
sbb
mov
and
in
inc
cwde
adc
push
adc
mov
mov
adc
cwde
std
adc
out
inc
adc
imul
retf
ja
ficomp
imul
xchg
xchg
adc
(bad)
cmps
(bad)
dec
in
pop
inc
aaa
sbb
call
aam
xchg
inc
sbb
addr16
in
xchg
adc
out
fucom
in
(bad)
out
mov
in
fucom
aaa
and
sti
sub
out
(bad)
aaa
and
ret
lahf
dec
hlt
cmp
daa
jo
xchg
addr16
call
xchg
movs
mov
outs
pop
addr16
cs
(bad)
in
bound
arpl
popa
pop
out
jecxz
pop
cwde
adc
mov
jae
mov
in
mov
movs
sub
lahf
and
mov
sahf
adc
cmp
lahf
and
mov
mov
test
mov
mov
aam
xor
outs
dec
xor
aas
push
and
mov
mov
cwde
fucomp
mov
fucomp
test
pusha
popa
adc
fucom
loope
ret
fidivr
adc
push
pop
cwde
adc
addr16
inc
jmp
es
mov
ret
inc
cwde
cwde
nop
sbb
adc
dec
adc
in
aaa
mov
data16
out
cwde
in
pop
push
mov
in
inc
in
sbb
movs
xchg
enter
rcl
fwait
adc
cdq
addr16
push
sti
fimul
adc
addr16
in
retf
jae
dec
xchg
addr16
call
adc
inc
cwde
data16
aaa
loop
in
inc
cwde
adc
aad
inc
in
inc
cwde
stos
cwde
sub
and
mov
or
cwde
adc
loop
in
inc
cwde
and
pop
out
sbb
call
cdq
adc
addr16
sbb
call
pop
nop
jbe
fcom
inc
out
pop
jns
in
or
adc
pop
(bad)
cwde
addr16
jp
lock
and
jo
xchg
addr16
nop
jp
data16
cwde
in
aaa
(bad)
mov
push
clc
cld
addr16
inc
cwde
data16
push
ins
mov
mov
div
mov
loop
in
inc
cwde
enter
ficom
out
(bad)
jbe
mov
in
xor
addr16
aam
stos
addr16
inc
addr16
adc
addr16
neg
cwde
adc
cwde
adc
cwde
nop
sbb
jae
xor
cwde
fwait
xchg
jbe
gs
test
fs
inc
cwde
jmp
aas
mov
dec
mov
cwde
gs
mov
cwde
xchg
movs
sbb
jge
adc
movs
stc
inc
aaa
lahf
and
mov
mov
test
mov
call
jmp
cwde
addr16
(bad)
dec
je
mov
cwde
addr16
push
sub
pop
inc
loop
in
inc
cwde
sbb
ds
adc
cwde
cmps
dec
cwde
data16
inc
adc
in
inc
aaa
adc
out
pextrw
addr16
cwde
adc
bound
xchg
jp
gs
aaa
mov
gs
ds
adc
ins
in
inc
cwde
adc
xchg
push
in
inc
cwde
xchg
xchg
mov
addr16
aaa
loop
in
inc
cwde
jno
mov
jnp
xchg
inc
cwde
data16
aas
mov
jno
mov
addr16
in
inc
addr16
xchg
dec
addr16
adc
mov
adc
bound
xchg
inc
cwde
data16
mov
cwde
adc
cwde
data16
aaa
loop
in
inc
cwde
adc
out
jp
sbb
in
addr16
call
xadd
cld
addr16
in
out
(bad)
(bad)
cmp
out
gs
addr16
sahf
xor
push
in
(bad)
out
adc
add
scas
push
cwde
gs
xor
cwde
adc
enter
jb
inc
cwde
adc
out
inc
aaa
jo
popf
addr16
xchg
js
xchg
adc
call
inc
in
pop
aaa
loop
in
inc
cwde
jae
xor
cwde
adc
enter
addr16
out
sbb
in
or
in
or
push
xchg
inc
cwde
data16
out
pextrw
addr16
cwde
adc
pushw
cwde
sub
sti
out
cwde
adc
ins
in
inc
cwde
adc
in
out
cwde
sub
inc
push
mov
pop
pop
aaa
loop
in
inc
cwde
xchg
shl
cwde
lock
or
cmp
out
push
jns
or
cwde
jns
sets
mov
(bad)
mov
xchg
pop
cwde
gs
inc
shl
inc
cwde
jo
fwait
addr16
jns
jmp
out
cwde
sub
in
or
push
ss
xchg
adc
inc
sar
cwde
jo
popf
addr16
in
or
cs
mov
xchg
adc
in
(bad)
xor
mov
cwde
gs
push
popa
sbb
jecxz
cwde
adc
cmp
fidivr
adc
aas
mov
lods
bound
pop
aaa
lahf
mov
aaa
mov
jae
aaa
lahf
outs
hlt
aaa
loop
in
inc
cwde
adc
mov
fucomp
out
movlhps
cld
addr16
in
out
(bad)
pop
xor
addr16
out
jb
mov
cwde
addr16
(bad)
cbw
adc
(bad)
popf
jmp
cwde
sbb
mov
addr16
xchg
sti
cwde
cdq
cdq
sti
cwde
movs
push
int3
aad
adc
pop
jb
mov
lock
sti
gs
addr16
(bad)
and
mov
addr16
push
and
cwde
xchg
push
imul
inc
in
xor
nop
popa
js
addr16
fidivr
adc
aas
mov
mov
fcomp
sbb
adc
xchg
lahf
adc
cmp
cwde
cwde
call
fstp
ds
cdq
sbb
cmps
sbb
mov
cwde
addr16
sti
outs
adc
mov
out
sbb
stos
cmc
and
adc
adc
aaa
mov
nop
call
push
aaa
mov
jmp
push
call
aaa
loop
out
inc
cwde
adc
call
adc
addr16
inc
sar
out
inc
cwde
jo
call
sahf
retf
in
xor
xchg
push
xor
call
cwde
addr16
push
and
inc
cwde
addr16
or
gs
inc
(bad)
scas
aaa
mov
call
inc
cwde
jo
call
sahf
into
call
xor
cwde
adc
inc
mov
out
gs
inc
out
fisub
sbb
adc
cwde
addr16
mov
jmp
push
ins
mov
xor
inc
cwde
adc
arpl
cmps
inc
cwde
addr16
(bad)
shl
mov
lock
sti
lods
nop
addr16
cmp
adc
adc
gs
adc
lahf
mov
aaa
mov
addr16
cbw
adc
loop
in
inc
cwde
enter
gs
inc
aaa
jo
sahf
addr16
in
or
gs
inc
cwde
sub
in
or
gs
inc
cwde
sub
in
or
gs
inc
cwde
sub
inc
xor
sub
inc
cwde
enter
addr16
cmp
sti
gs
inc
outs
pop
lods
xor
pushf
addr16
call
pop
cli
mov
shl
jmp
push
cld
mov
adc
pop
sahf
cmp
gs
inc
aaa
adc
in
out
(bad)
sbb
mov
cwde
addr16
outs
in
stos
addr16
jns
or
data16
inc
aaa
jo
fwait
addr16
nop
jp
sbb
push
xor
in
inc
cwde
fcom
mov
cdq
addr16
mov
mov
adc
dec
scas
addr16
nop
add
gs
inc
addr16
psubusb
adc
cmp
pop
sahf
cmp
data16
inc
aaa
jo
dec
cwde
addr16
xor
cmp
inc
cwde
enter
data16
inc
aaa
repnz
addr16
addr16
addr16
in
out
or
cwde
adc
addr16
adc
xor
inc
cwde
jo
sahf
addr16
stos
cdq
jne
adc
adc
aaa
mov
addr16
(bad)
mov
sbb
cld
addr16
in
out
(bad)
push
aaa
mov
mov
adc
sbb
loop
cwde
adc
loop
in
inc
cwde
enter
ficom
push
and
sbb
cmp
cwde
adc
mov
js
cwde
adc
loop
out
inc
cwde
movs
push
int3
scas
xchg
enter
adc
addr16
sti
out
cwde
adc
nop
mov
scas
cs
mov
pop
mov
adc
cdq
addr16
out
xor
(bad)
lahf
addr16
jns
psubsw
cld
addr16
in
out
(bad)
xchg
jl
cwde
sbb
mov
addr16
mov
ret
inc
cwde
cwde
call
test
inc
addr16
mov
push
mov
call
(bad)
addr16
sahf
cmp
gs
inc
aaa
jo
lahf
addr16
inc
push
and
adc
out
pop
jns
cwde
sub
sti
jb
cwde
adc
cmp
inc
cwde
jo
mov
sti
gs
inc
mov
call
pushf
adc
out
jge
push
jg
inc
jmp
jne
fidivr
fucom
aaa
mov
addr16
push
mov
out
int
inc
adc
aaa
movs
(bad)
call
dec
xor
out
int
aaa
lahf
outs
hlt
aaa
and
xor
rcr
add
inc
dec
push
das
inc
inc
dec
sbb
xor
outs
push
fadd
xchg
aaa
repnz
xchg
mov
in
movsx
shl
and
mov
addr16
jns
jmp
out
pop
xor
cwde
in
sbb
xchg
sbb
mov
addr16
call
in
pop
mov
fucomp
xor
sahf
push
(bad)
aaa
jo
mov
ja
movs
sti
cdq
adc
movs
jmp
adc
sti
cli
jp
adc
push
fcom
inc
dec
sbb
xor
cli
ja
inc
push
inc
test
mov
or
cmp
or
xor
addr16
aaa
lahf
test
in
call
addr16
sti
jle
cwde
adc
(bad)
xchg
or
mov
and
loopne
push
shr
out
jge
idiv
adc
test
mov
cmp
inc
aaa
lahf
cdq
jmp
mov
pop
xchg
add
cwde
adc
lahf
outs
hlt
aaa
loop
repz
cwde
adc
xor
and
inc
cwde
enter
js
inc
aaa
lock
and
cwde
adc
mov
or
mov
lahf
adc
in
cwde
sub
sti
rol
adc
adc
in
inc
cwde
in
pop
push
add
adc
add
aam
add
and
inc
cwde
fmul
addr16
push
pop
cwde
adc
loop
repz
cwde
enter
js
inc
aaa
into
sti
sbb
mov
in
cmp
pop
cwde
addr16
cmps
inc
cwde
adc
adc
in
inc
cwde
in
pop
push
push
pusha
and
pop
and
jae
push
int
rcl
sbb
in
cwde
adc
cmp
fidivr
adc
push
imul
mov
in
in
sbb
scas
into
(bad)
fldz
pusha
adc
pop
and
pop
inc
(bad)
arpl
push
mov
addr16
in
out
sbb
call
fcom
inc
out
pop
jns
out
imul
rcr
lock
and
mov
sbb
xchg
in
retf
ja
xlat
push
and
ficom
xor
cwde
repz
cwde
enter
cwde
adc
pushaw
call
call
addr16
push
call
addr16
aas
mov
adc
in
out
(bad)
mov
mov
shl
cwde
into
inc
xor
cwde
repz
cwde
into
inc
push
ins
xchg
mov
addr16
xchg
push
mov
adc
addr16
aaa
lahf
outs
hlt
aaa
loop
int3
inc
cwde
adc
aaa
mov
pop
inc
aaa
sbb
arpl
lods
(bad)
or
dec
aas
nop
xor
mov
call
inc
out
pop
and
lds
aas
mov
retf
sti
push
jp
adc
gs
call
pusha
cmp
pop
sti
inc
jl
adc
(bad)
xchg
xor
cwde
stos
push
push
cwde
adc
adc
aaa
mov
cwde
sti
xchg
jnp
adc
loop
out
inc
cwde
adc
mov
ja
adc
loop
out
inc
cwde
enter
cwde
adc
arpl
cmps
inc
cwde
addr16
(bad)
shl
mov
lock
sti
sbb
mov
sar
cwde
adc
loop
in
inc
cwde
enter
gs
inc
aaa
jo
movs
addr16
call
sub
inc
xor
sub
inc
cwde
enter
addr16
cmp
push
cwde
jnp
mov
adc
loop
in
inc
cwde
enter
cwde
adc
mov
xchg
or
sbb
inc
push
xor
jecxz
cwde
adc
aas
nop
xchg
jle
addr16
aam
adc
in
out
(bad)
jp
mov
out
pusha
cmp
pop
aam
fbld
inc
and
test
cwde
nop
add
gs
inc
addr16
fsub
adc
sub
loop
call
xor
and
inc
cwde
enter
addr16
out
sbb
inc
xor
and
inc
cwde
enter
cwde
jns
or
cwde
sahf
cmp
repnz
adc
outs
pop
sbb
out
cdq
adc
cwde
addr16
jmp
jmp
mov
addr16
(bad)
mov
sbb
cld
addr16
in
out
(bad)
repnz
scas
mov
adc
sbb
adc
adc
loop
in
inc
cwde
enter
ficom
push
dec
test
mov
adc
adc
adc
out
nop
inc
cwde
adc
loop
call
int3
scas
xchg
in
jecxz
adc
addr16
sti
xchg
(bad)
arpl
add
inc
call
addr16
in
cwde
adc
lock
cwde
sahf
cmp
fs
inc
aaa
jo
(bad)
cwde
addr16
jp
movs
in
inc
addr16
sbb
stos
cwde
adc
cwde
addr16
in
(bad)
push
call
mov
pop
sbb
rcr
in
or
gs
inc
jmp
push
mov
pop
addr16
inc
ror
inc
cwde
jo
jge
addr16
pop
in
or
gs
inc
(bad)
ror
mov
and
cwde
adc
cmovp
cld
addr16
sti
push
jp
adc
adc
adc
adc
in
add
nop
push
pop
retf
call
or
inc
cwde
jo
jl
addr16
jp
jae
xor
cwde
sbb
lea
into
in
or
gs
inc
(bad)
push
rol
sbb
mov
pusha
cmp
pop
inc
push
aam
adc
out
pop
aam
sti
gs
inc
cbw
adc
cwde
addr16
push
movs
adc
out
pusha
cmp
pop
jns
cwde
sub
sti
sahf
jge
adc
lahf
test
cmps
sbb
adc
in
sbb
dec
loopne
push
sar
in
pop
in
xor
cwde
jecxz
daa
scas
mov
mov
jns
jg
sti
lahf
adc
in
(bad)
ror
mov
cwde
in
pop
push
pop
adc
in
int
xor
call
jle
adc
mov
(bad)
adc
addr16
in
retf
imul
call
jmp
mov
cwde
adc
and
addr16
jnp
rcr
aam
repnz
adc
out
pop
jns
xor
cmps
addr16
stos
or
adc
dec
out
pop
sahf
sti
fwait
enter
(bad)
adc
addr16
cwde
sti
fwait
jae
push
movs
lods
adc
mov
aam
cmp
fidivr
adc
out
aaa
retf
inc
jmp
es
shl
and
cmp
in
adc
adc
cmc
in
retf
outs
jo
movs
addr16
call
adc
push
push
repnz
adc
mov
jns
(bad)
cwde
sar
jo
adc
adc
ficom
push
adc
adc
addr16
cwde
adc
and
inc
dec
pusha
call
repnz
cwde
int
(bad)
xlat
pop
push
mov
addr16
retf
cwde
addr16
jp
jae
inc
adc
mov
in
sbb
adc
mov
dec
adc
inc
out
pop
dec
loopne
push
shr
ss
inc
jmp
psubw
out
jae
addr16
call
cwde
inc
push
mov
adc
out
int
in
xor
addr16
jp
xchg
ror
jb
adc
(bad)
cmp
mov
mov
pop
pushf
addr16
dec
loopne
push
sar
in
xor
fdivr
in
add
adc
sbb
adc
xchg
adc
or
fidivr
adc
xor
adc
xchg
aam
and
xor
jns
or
enter
cwde
adc
mov
adc
addr16
pop
fcomip
or
addr16
inc
call
int3
repz
outs
xchg
lds
xchg
js
fst
mov
addr16
stos
jno
cwde
adc
adc
aaa
mov
ficom
mov
mov
in
mov
out
pop
cdq
addr16
sti
div
adc
(bad)
into
or
cwde
addr16
add
adc
loop
in
cwde
lock
mov
jle
adc
mov
inc
addr16
adc
cmps
jno
mov
popa
cwde
adc
out
push
mov
cwde
addr16
push
aam
adc
outs
cmc
aaa
loop
out
cwde
adc
xor
push
fild
sbb
mov
mov
sbb
dec
nop
addr16
fisttp
xor
cld
lock
cwde
sahf
cmp
lock
(bad)
xchg
addr16
cmp
addr16
sbb
xlat
pop
push
mov
lock
cwde
jnp
aad
adc
shl
jmp
push
call
push
jns
jmp
push
cmp
in
inc
in
or
loop
jmp
cwde
xchg
shl
addr16
dec
mov
addr16
xchg
add
xchg
xchg
or
fisub
cwde
mov
adc
xchg
ficom
xor
fs
inc
cwde
enter
addr16
cmp
add
scas
and
addr16
aas
mov
movs
cmp
ins
in
inc
pop
addr16
mov
fs
adc
cwde
addr16
bound
cwde
cwde
sahf
mov
adc
in
(bad)
out
adc
in
adc
or
fst
xor
fs
inc
cwde
iret
sti
xchg
add
cmp
xchg
xchg
xchg
fs
adc
cwde
sbb
sbb
loop
out
cwde
adc
in
inc
aaa
adc
in
out
(bad)
addr16
pop
and
adc
loop
test
gs
inc
aaa
jo
lods
addr16
clc
retf
out
inc
cwde
sub
adc
fwait
addr16
test
pop
mov
cwde
fs
inc
addr16
jae
cwde
adc
loop
jmp
cwde
enter
ficom
xor
fs
inc
cwde
enter
cwde
adc
lahf
pusha
in
inc
addr16
cmp
adc
fstp
movs
add
jb
inc
pusha
pop
jmp
adc
stc
pop
and
sbb
sbb
das
test
nop
adc
pop
(bad)
addr16
adc
cwde
addr16
push
mov
adc
outs
cmc
aaa
loop
out
cwde
adc
xor
fs
cwde
enter
ficom
xor
fs
inc
cwde
enter
cwde
adc
out
push
mov
cwde
addr16
push
test
pop
push
and
adc
fwait
pusha
in
inc
aaa
jo
lods
addr16
call
sbb
inc
(bad)
adc
sbb
inc
push
in
(bad)
adc
addr16
in
out
pop
add
addr16
stos
jmp
push
dec
lea
mov
outs
cmc
aaa
loop
out
cwde
adc
xor
fs
inc
cwde
sbb
mov
lahf
addr16
out
pinsrw
addr16
in
out
(bad)
mov
xlat
scas
or
pusha
in
inc
aaa
jo
stos
addr16
xchg
js
adc
call
loop
out
inc
cwde
enter
addr16
cmp
push
cwde
sahf
cmp
pop
push
out
(bad)
cmp
cmp
pusha
pop
mov
aad
mov
cmps
ficom
mov
mov
in
mov
cwde
sub
jnp
aad
adc
and
mov
cwde
addr16
push
ror
add
xchg
push
xor
and
data16
inc
aaa
jo
scas
addr16
sahf
cmp
jo
stos
addr16
call
mov
in
inc
out
push
inc
cdq
addr16
xchg
adc
in
inc
mov
addr16
mov
jmp
in
mov
addr16
mov
cmps
inc
lahf
addr16
xor
fs
inc
cwde
enter
ficom
xor
fs
inc
cwde
enter
cwde
adc
pushw
jmp
push
movs
mov
mov
cwde
addr16
add
jo
lods
addr16
cwde
add
ins
in
inc
jmp
push
in
mov
mov
cwde
addr16
push
addr16
mov
cwde
addr16
inc
shr
cwde
jo
scas
addr16
sahf
cmp
jo
lods
addr16
sahf
add
adc
xor
lahf
adc
(bad)
test
addr16
in
out
or
pusha
in
inc
lss
aam
jo
lods
addr16
inc
push
add
cmp
pop
sahf
cmp
retf
in
or
and
inc
cwde
sbb
mov
pop
sbb
sbb
in
or
call
dec
cwde
adc
cmp
fidivr
inc
aaa
or
add
outs
xor
addr16
nop
mov
outs
dec
sub
or
cld
addr16
adc
adc
and
addr16
mov
cwde
jns
(bad)
dec
add
ja
adc
scas
pop
add
mov
adc
inc
les
fbld
hlt
aaa
loop
in
inc
cwde
adc
mov
arpl
fild
addr16
inc
push
jl
jmp
sahf
scas
addr16
call
cwde
jnp
addr16
adc
fs
repnz
loop
in
inc
cwde
enter
cwde
adc
mov
repnz
addr16
sti
cli
ja
adc
and
xor
pusha
inc
push
cld
xchg
adc
outs
hlt
aaa
loop
in
inc
cwde
adc
xor
js
xor
push
adc
addr16
sahf
sti
mov
sti
cmps
ja
adc
test
jg
cmp
pop
jns
jmp
out
(bad)
adc
mov
pop
cmp
sbb
adc
adc
aaa
mov
cs
mov
lock
cwde
jnp
addr16
xchg
push
and
out
pusha
cmp
pop
jnp
(bad)
ficom
(bad)
inc
jo
mov
lock
sti
cwde
and
mov
pop
add
mov
jmp
or
adc
dec
adc
dec
cdq
addr16
aaa
mov
cwde
jns
(bad)
addr16
aas
nop
mov
mov
and
ficom
(bad)
shl
jmp
push
ror
jle
cwde
sbb
or
cld
addr16
sub
ins
jge
cwde
adc
out
or
addr16
sbb
and
addr16
adc
cdq
addr16
out
(bad)
cwde
push
cwde
sbb
call
adc
dec
into
sti
xchg
pop
addr16
aaa
and
and
addr16
adc
cdq
addr16
out
(bad)
dec
imul
xlat
stos
out
pusha
and
pop
inc
push
mov
popf
xchg
cwde
sbb
or
cld
addr16
sub
adc
sbb
cwde
jnp
(bad)
ficom
(bad)
gs
adc
(bad)
nop
test
pop
mov
out
mov
out
sbb
call
lock
cs
mov
cwde
addr16
push
xor
in
inc
in
or
mov
into
jnp
(bad)
ficom
(bad)
push
push
mov
out
sbb
addr16
jp
adc
dec
adc
push
cdq
addr16
aaa
mov
ficom
mov
mov
in
mov
out
imul
cwde
dec
loopne
push
shr
out
jge
pop
jbe
adc
xchg
adc
pop
sbb
sub
cmps
ficom
mov
mov
in
mov
out
xor
pop
jbe
inc
ja
adc
out
pop
jns
sets
addr16
lods
addr16
nop
jp
xchg
shl
addr16
aad
cwde
adc
addr16
push
mov
cwde
addr16
push
fcom
cmp
jo
lods
addr16
aad
addr16
xchg
xchg
adc
xor
je
inc
cwde
enter
cwde
adc
xchg
cdq
jecxz
mov
addr16
out
(bad)
jp
mov
xchg
addr16
out
(bad)
neg
adc
addr16
mov
and
inc
mov
and
inc
mov
and
inc
xor
cwde
adc
push
out
adc
push
out
push
adc
push
jg
xchg
outs
aaa
addr16
cmps
ficom
(bad)
not
adc
das
cs
cmps
ficom
jmp
adc
addr16
xor
movs
out
dec
cwde
addr16
xor
jo
inc
cwde
iret
sti
loop
cwde
adc
xchg
outs
cmc
aaa
loop
std
inc
cwde
adc
(bad)
xchg
push
mov
addr16
in
out
(bad)
mov
xchg
inc
cdq
addr16
out
(bad)
push
sbb
xor
popf
out
inc
cwde
addr16
push
popf
kandw
jbe
xchg
sahf
cmp
adc
in
out
pop
movs
inc
cwde
repnz
lock
cwde
jnp
(bad)
ficom
xor
fs
cwde
enter
data16
inc
aaa
jo
push
cwde
addr16
jp
adc
aas
mov
adc
in
out
(bad)
adc
push
xchg
addr16
mov
fistp
mov
addr16
and
jae
cmp
addr16
call
pop
dec
loopne
pop
inc
aaa
sbb
mov
cwde
adc
fmul
jmp
adc
dec
call
push
and
ficom
(bad)
shl
jmp
push
add
out
inc
cwde
addr16
(bad)
xchg
sub
(bad)
sbb
inc
cwde
sbb
cmps
out
pusha
adc
pop
dec
ja
pushf
adc
out
jge
jmp
push
sbb
fsub
adc
and
addr16
mov
push
mov
(bad)
dec
push
mov
ins
cwde
adc
scas
pop
add
xor
push
mov
dec
pusha
call
cwde
sbb
or
cld
addr16
sub
sub
prefetcht2
lock
xchg
sub
sbb
sbb
cwde
adc
daa
das
push
mov
lock
in
mov
jle
mov
aaa
repnz
addr16
daa
cwde
jns
or
cwde
adc
(bad)
(bad)
sbb
lahf
adc
(bad)
arpl
jecxz
and
cwde
adc
scas
pop
inc
aaa
sbb
sbb
adc
xor
test
add
retf
aaa
movs
sbb
call
sar
addr16
ret
pop
push
mov
and
cwde
adc
loop
in
inc
cwde
enter
push
mov
mov
adc
in
out
jmp
push
mov
fucomp
cmp
data16
adc
lahf
jo
mov
cwde
jns
or
jb
in
cwde
in
jmp
ins
xchg
adc
out
pop
jns
jmp
aam
adc
in
out
cwde
in
jmp
fcom
jmp
cwde
addr16
jle
inc
(bad)
push
sbb
mov
call
addr16
cwde
cmp
fucomp
aam
addr16
(bad)
scas
sbb
addr16
xchg
xor
adc
sbb
inc
adc
(bad)
mov
mov
loop
in
inc
cwde
sbb
and
adc
addr16
in
out
in
fucomp
cmp
cwde
in
jmp
and
adc
push
pop
addr16
pusha
jp
ins
xchg
lods
mov
out
pushf
and
in
fucomp
cmp
adc
pop
push
mov
cmps
ficom
inc
bound
cld
addr16
cmp
pop
cdq
adc
sahf
adc
cmp
sets
addr16
mov
cwde
nop
jp
adc
dec
test
xchg
ficomp
clc
in
inc
cwde
adc
xor
fild
sbb
mov
sbb
fild
sbb
mov
movs
sbb
mov
in
fst
push
hlt
xchg
adc
push
sbb
mov
sbb
jl
addr16
push
ds
cdq
adc
sahf
adc
cmp
punpckhbw
mov
cwde
nop
jp
adc
push
ds
cdq
adc
sahf
adc
jp
addr16
call
ficom
xor
fild
sbb
mov
sbb
sbb
addr16
call
ficom
xor
fild
sbb
mov
sbb
fild
sbb
mov
movs
sbb
mov
jmp
mov
mov
(bad)
in
inc
cwde
adc
aaa
movs
adc
push
ds
cdq
adc
sahf
adc
sbb
scas
addr16
ds
cdq
adc
sahf
adc
cmp
sets
mov
cwde
nop
jp
adc
push
ds
cdq
adc
sahf
adc
sbb
scas
addr16
ds
cdq
adc
sahf
adc
cmp
cmovs
mov
cwde
nop
jp
sbb
push
pop
cwde
adc
push
sbb
mov
sbb
pop
mov
les
cld
addr16
xchg
mov
sbb
inc
daa
sbb
mov
sbb
pop
mov
les
sar
addr16
push
ds
cdq
adc
sahf
adc
ror
(bad)
bound
mov
les
cld
addr16
dec
cdq
addr16
push
test
adc
addr16
in
retf
lahf
jo
mov
repz
push
mov
cmps
ficom
inc
bound
cld
addr16
dec
in
pop
inc
aaa
sbb
push
arpl
lods
push
sub
sub
xchg
mov
aaa
mov
cwde
sti
push
pusha
cwde
adc
mov
jo
mov
cmps
ficom
aam
lock
outs
cwde
adc
loop
out
inc
cwde
xchg
ror
push
jo
mov
nop
jle
cmp
in
inc
out
pop
sti
stos
pusha
cwde
adc
dec
out
inc
cwde
jo
mov
(bad)
out
mov
adc
in
aaa
mov
cwde
jnp
aad
adc
lahf
adc
out
pop
sti
(bad)
pusha
cwde
adc
(bad)
push
sbb
addr16
sahf
cmp
addr16
sbb
adc
lahf
adc
aad
adc
loop
out
inc
cwde
enter
addr16
cmp
push
cwde
nop
mov
outs
and
mov
repz
push
mov
cwde
addr16
cmps
ficom
inc
push
sar
addr16
dec
adc
in
aaa
mov
cwde
test
aaa
cmps
outs
stc
jg
lahf
rol
mov
aaa
mov
aam
out
arpl
inc
out
push
cmovne
sbb
adc
jo
mov
cwde
sbb
fisub
shl
mov
inc
pusha
pop
jmp
pop
jb
sti
movs
cmp
cwde
addr16
cmp
in
inc
data16
sub
js
scas
out
inc
cwde
cwde
sti
ds
cwde
adc
movs
outs
sar
push
fs
inc
push
pop
xchg
mov
push
sahf
cmp
in
inc
aaa
lock
cwde
jnp
sbb
xor
mov
inc
cwde
enter
cwde
adc
addr16
in
out
jmp
push
in
sahf
adc
cwde
addr16
push
adc
push
or
addr16
addr16
push
mov
inc
in
or
addr16
in
out
pop
adc
addr16
dec
adc
in
aaa
mov
pushf
adc
addr16
pop
and
ficom
push
mov
jmp
jg
mov
and
mov
(bad)
cmc
mov
(bad)
out
push
jnp
sbb
into
mov
xchg
sbb
sbb
addr16
push
dec
bound
adc
pop
aam
mov
sbb
sbb
addr16
sbb
xor
inc
inc
push
lods
lahf
adc
and
cwde
in
mov
or
in
mov
or
cwde
adc
sbb
addr16
adc
xchg
mov
repnz
nop
adc
lock
cwde
jns
or
cwde
adc
xchg
outs
cmc
aaa
loop
out
inc
cwde
adc
xor
fsubr
inc
cwde
enter
cwde
adc
call
addr16
es
sti
or
aaa
xchg
test
outs
pop
and
fst
push
clc
fwait
adc
lock
and
cwde
adc
ds
mov
addr16
mov
dec
push
hlt
cld
lock
and
cwde
adc
jbe
push
mov
addr16
mov
xchg
push
mov
out
push
jnp
in
fst
push
aam
adc
cmp
cwde
sti
mov
or
adc
pop
xor
cld
addr16
sbb
adc
nop
adc
pop
xor
cld
lock
sahf
cmp
lock
and
ficom
(bad)
gs
adc
(bad)
ror
inc
cwde
sbb
sahf
outs
pop
repz
cmp
jo
jmp
addr16
dec
repz
adc
cwde
addr16
(bad)
not
cmc
cld
lock
cwde
sti
scas
outs
cwde
adc
not
cmc
cld
addr16
mov
jp
in
inc
in
cmp
adc
in
out
invd
sahf
jmp
sahf
mov
bound
sar
addr16
addr16
mov
popf
mov
push
test
in
inc
out
pusha
shl
sti
and
in
(bad)
cld
jo
mov
addr16
and
data16
inc
aaa
jo
mov
dec
push
retf
inc
cwde
addr16
push
sub
jns
or
mov
bound
daa
cwde
jnp
inc
cwde
adc
arpl
jecxz
and
cwde
adc
xchg
xchg
pop
mov
daa
cwde
jnp
inc
xchg
adc
dec
jmp
and
cwde
adc
xchg
cdq
jecxz
mov
repnz
addr16
dec
cwde
addr16
mov
pop
push
mov
cwde
sbb
xor
cwde
adc
sub
cld
addr16
imul
dec
in
pop
adc
add
std
or
cwde
adc
cmp
std
or
cwde
adc
cmp
std
or
cwde
adc
xor
std
or
cwde
adc
xor
std
or
cwde
adc
sub
std
or
cwde
adc
sub
std
or
cwde
adc
and
std
or
cwde
adc
and
std
or
cwde
adc
pop
adc
or
cwde
adc
pop
adc
or
cwde
adc
push
adc
or
cwde
adc
push
adc
or
cwde
adc
dec
adc
or
cwde
adc
dec
adc
or
cwde
adc
inc
adc
or
cwde
adc
inc
adc
or
cwde
adc
jo
std
or
cwde
adc
je
std
or
cwde
adc
push
cmp
ins
adc
or
cwde
adc
pusha
adc
or
cwde
adc
pushf
pop
std
or
cwde
adc
mov
std
or
cwde
adc
mov
std
or
cwde
adc
adc
or
cwde
adc
out
jge
jmp
addr16
ds
mov
call
cwde
adc
fwait
xchg
ror
dec
adc
stc
mov
addr16
mov
jle
popf
nop
inc
inc
in
loopne
data16
pusha
xchg
ror
bound
jmp
adc
mov
addr16
or
jb
inc
cmp
out
je
scas
addr16
ds
arpl
int
mov
cmp
in
pop
addr16
adc
cmps
and
inc
cwde
addr16
inc
xchg
ss
jmp
sub
in
mov
mov
push
call
adc
mov
cmp
mov
std
or
cwde
adc
mov
std
or
cwde
adc
test
std
or
cwde
adc
lods
pop
std
or
cwde
adc
mov
cmp
movs
pop
std
or
cwde
adc
fcom
std
or
cwde
adc
fcom
std
or
cwde
adc
rcl
std
or
cwde
adc
aam
std
or
cwde
adc
enter
or
inc
inc
int3
pop
std
or
cwde
adc
rcl
or
cwde
adc
les
std
or
cwde
adc
clc
pop
std
or
cwde
adc
cld
pop
std
or
cwde
adc
lock
std
or
cwde
adc
hlt
pop
std
or
cwde
adc
call
cmp
in
pop
std
or
cwde
adc
loopne
std
or
cwde
adc
in
std
or
cwde
adc
sbb
std
or
cwde
adc
sbb
std
or
cwde
adc
adc
std
or
cwde
adc
adc
std
or
cwde
adc
or
std
or
cwde
adc
or
std
or
cwde
adc
add
std
or
cwde
adc
add
std
or
cwde
adc
cmp
std
or
cwde
adc
cmp
std
or
cwde
adc
xor
std
or
cwde
adc
xor
std
or
cwde
adc
sub
std
or
cwde
adc
sub
std
or
cwde
adc
and
std
or
cwde
adc
and
std
or
cwde
adc
pop
pop
std
or
cwde
adc
pop
pop
std
or
cwde
adc
push
pop
std
or
cwde
adc
push
pop
std
or
cwde
adc
dec
pop
std
or
cwde
adc
dec
pop
std
or
cwde
adc
inc
pop
std
or
cwde
adc
inc
pop
std
or
cwde
adc
js
std
or
cwde
adc
jl
std
or
cwde
adc
jo
std
or
cwde
adc
je
std
or
cwde
adc
push
cmp
ins
pop
std
or
cwde
adc
pusha
pop
std
or
cwde
adc
fs
std
or
cwde
adc
cwde
push
std
or
cwde
adc
pushf
push
std
or
cwde
adc
nop
push
std
or
cwde
adc
xchg
push
std
or
cwde
adc
mov
std
or
cwde
adc
mov
std
or
cwde
adc
adc
or
cwde
adc
test
std
or
cwde
adc
mov
std
or
cwde
adc
mov
std
or
cwde
adc
test
std
or
cwde
adc
lods
push
std
or
cwde
adc
mov
cmp
movs
push
std
or
cwde
adc
fcom
std
or
cwde
adc
fcom
std
or
cwde
adc
rcl
std
or
cwde
adc
aam
std
or
cwde
adc
enter
or
inc
inc
int3
push
std
or
cwde
adc
rcl
or
cwde
adc
les
std
or
cwde
adc
clc
push
std
or
cwde
adc
cld
push
std
or
cwde
adc
lock
std
or
cwde
adc
hlt
push
std
or
cwde
adc
call
cmp
in
push
std
or
cwde
adc
loopne
std
or
cwde
adc
in
std
or
cwde
adc
sbb
std
or
cwde
adc
sbb
std
or
cwde
adc
adc
std
or
cwde
adc
or
std
or
cwde
adc
add
std
or
cwde
adc
cmp
std
or
cwde
adc
xor
std
or
cwde
adc
xor
std
or
cwde
adc
sub
std
or
cwde
adc
sub
std
or
cwde
adc
and
std
or
cwde
adc
and
std
or
cwde
adc
pop
push
std
or
cwde
adc
push
push
std
or
cwde
adc
dec
push
std
or
cwde
adc
dec
push
std
or
cwde
adc
inc
push
std
or
cwde
adc
inc
push
std
or
cwde
adc
js
std
or
cwde
adc
jl
std
or
cwde
adc
jo
std
or
cwde
adc
je
std
or
cwde
adc
push
cmp
ins
push
std
or
cwde
adc
pusha
push
std
or
cwde
adc
fs
std
or
cwde
adc
cwde
adc
mov
inc
pushf
adc
mov
inc
nop
adc
mov
inc
xchg
adc
mov
inc
mov
.byte
addr16
.byte
