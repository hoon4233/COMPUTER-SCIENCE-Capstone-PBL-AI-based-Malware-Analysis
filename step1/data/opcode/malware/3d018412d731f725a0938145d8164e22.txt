out
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
push
and
add
add
add
and
call
add
mov
out
mov
jg
jle
lods
loop
xchg
add
scas
mov
inc
outs
out
sbb
call
mov
push
push
sub
test
div
pop
fcom
pop
jne
popa
cmp
add
push
aam
neg
lds
dec
retf
test
and
mov
adc
inc
dec
int
lea
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
add
jle
add
add
ins
add
add
push
je
imul
add
add
and
add
add
add
inc
push
dec
inc
add
add
add
add
ins
outs
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
movs
rol
add
add
pop
add
add
add
add
add
in
add
add
add
mov
add
call
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
mov
add
dec
icebp
add
add
add
rol
add
add
add
add
add
test
add
add
add
add
jnp
xor
cmp
xor
xor
xor
xor
gs
sub
sub
xor
popa
arpl
xor
cmp
outs
fs
gs
xor
inc
aaa
inc
xor
xor
cmp
inc
xor
aaa
inc
inc
xor
inc
inc
inc
xor
xor
xor
popa
gs
xor
bound
data16
xor
cmp
xor
fs
cmp
arpl
xor
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jne
je
imul
add
add
movs
cwde
fs
out
xchg
inc
mov
cmps
shl
and
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
cwde
retf
repz
cwde
enter
pop
mov
dec
mov
xchg
and
(bad)
movs
test
jnp
sahf
out
sti
xchg
jns
jae
or
pop
mov
mov
retf
dec
cmps
cmps
sbb
dec
pusha
scas
push
xor
idiv
mov
call
jl
xchg
mov
arpl
popf
lods
cvtdq2ps
mov
(bad)
xor
mov
pop
mov
jnp
or
or
rol
ret
retf
shl
xchg
pop
retf
int
retf
rcl
shr
aad
outs
fcomp
fcmovu
(bad)
ficomp
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
add
add
or
adc
xor
cmp
jae
ins
jle
add
dec
dec
dec
push
or
or
inc
mulps
ja
pushw
pop
push
pop
pop
adc
inc
inc
inc
inc
inc
inc
inc
pop
or
dec
dec
mov
inc
add
push
push
push
pop
pop
pop
mov
popa
imul
push
push
ins
ins
outs
xchg
lods
jno
jae
jne
ja
jns
jnp
cmp
add
mov
mov
xchg
xchg
xchg
cwde
cwde
call
mov
and
mov
mov
mov
mov
mov
ret
vmovdqu
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
or
jmp
icebp
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
add
and
and
es
sub
sub
sub
cs
adc
xor
xor
cmp
cmp
adc
cmp
inc
inc
inc
inc
test
ins
dec
dec
dec
nop
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
dec
sbb
add
ins
outs
arpl
jb
xchg
jne
ja
jns
jnp
jge
jg
add
retf
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
adc
int
xchg
rcl
rcl
rcl
dec
add
fcmove
fstp
(bad)
loopne
loop
in
out
enter
push
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
add
add
or
or
push
movups
adc
adc
push
push
movs
sbb
mov
outs
sar
loop
jmp
inc
loop
out
loop
scas
loop
out
loop
sahf
sahf
mov
mov
cmps
cmps
mov
mov
scas
scas
mov
mov
push
dec
fisub
stos
inc
ss
pop
adc
adc
add
add
jmp
ror
icebp
sahf
ror
mov
scas
scas
movs
mov
mov
out
jecxz
out
sbb
div
(bad)
loop
out
loop
iret
in
jmp
mov
mov
cmps
cmps
and
cmps
mov
mov
sahf
call
outs
push
bound
bound
jle
arpl
pusha
bound
bound
bound
sbb
mov
scas
scas
mov
mov
cmps
mov
mov
cmps
cmps
mov
loop
lods
loop
out
out
loop
out
loop
(bad)
(bad)
loop
out
loop
out
out
loop
out
loop
sahf
sahf
inc
mov
scas
scas
mov
mov
cmps
cmps
mov
mov
sahf
sahf
bound
bound
outs
bound
bound
jle
bound
bound
outs
inc
bound
bound
sahf
mov
mov
cmps
out
mov
mov
scas
adc
(bad)
mov
loop
out
loop
out
pop
loop
out
loop
(bad)
loop
out
loop
out
out
loop
out
loop
(bad)
mov
(bad)
retf
mov
cmps
cmps
inc
mov
cmps
cmps
sbb
cmps
cmps
mov
bound
bound
outs
bound
bound
jle
bound
bound
outs
bound
bound
sahf
mov
mov
cmps
cmps
mov
mov
scas
scas
mov
mov
out
loop
out
cmps
loop
out
loop
(bad)
pop
aaa
loop
mul
loop
out
loop
out
loop
sahf
into
and
scas
mov
mov
cmps
cmps
mov
mov
sahf
sahf
bound
bound
outs
bound
bound
xor
bound
(bad)
ds
test
adc
push
sbb
add
and
imul
ins
push
dec
xor
xor
cmp
cmp
push
add
add
push
or
adc
sahf
jno
push
sbb
cs
cs
ror
(bad)
(bad)
(bad)
fmul
sti
sbb
xor
and
sbb
push
dec
fs
inc
inc
inc
dec
inc
dec
sbb
dec
dec
add
xchg
xchg
cdq
xchg
fwait
cwde
popf
call
in
out
pop
out
call
ror
mov
fs
mov
mov
mov
mov
add
lea
rcl
aad
xlat
aam
(bad)
fcmovnu
fstp
(bad)
ret
and
and
data16
sub
push
repz
loop
hlt
jmp
cli
(bad)
in
loope
ret
rol
mov
sbb
iret
lahf
xor
adc
adc
push
sbb
sbb
jle
pusha
bound
imul
pusha
push
dec
xor
xor
cmp
cmp
push
add
add
push
or
or
outs
push
push
push
push
push
push
pop
push
pop
pop
pop
pop
pop
pop
inc
mov
cmps
lods
test
stos
scas
lods
xchg
mov
push
jb
cmp
jbe
js
jp
jl
pop
inc
outs
xor
aas
xor
dec
cld
cld
dec
dec
dec
xchg
scas
xchg
nop
daa
xchg
xchg
xchg
fwait
xchg
fwait
cwde
popf
call
in
out
jmp
pop
mov
pop
mov
mov
adc
add
lea
xchg
rcl
rcl
aam
(bad)
fcmovnu
fstp
(bad)
sar
and
sub
sub
push
repz
repnz
stc
idiv
clc
std
cli
(bad)
cld
loope
ret
rol
mov
sbb
iret
int3
xor
adc
adc
push
sbb
sbb
int
pop
cmp
jle
popa
bound
imul
test
dec
xor
xor
cmp
cmp
push
add
add
push
or
or
outs
push
push
push
push
push
push
pop
push
pop
xchg
pop
pop
xchg
mov
mov
test
rcr
fdiv
jecxz
and
add
add
adc
sbb
push
sub
and
adc
and
ins
daa
cmp
(bad)
(bad)
stc
idiv
call
scas
scas
into
int
retf
ror
les
cwde
mov
mov
rcr
cwde
cdq
out
fcmovbe
rcr
test
out
mov
mov
xlat
loopne
mov
out
in
cli
test
repnz
pop
push
dec
push
push
inc
inc
pop
or
inc
pop
inc
inc
je
xchg
sbb
sahf
mov
cli
(bad)
cld
loopne
ret
rol
mov
mov
jl
adc
push
sbb
pop
sbb
xor
pusha
pop
bound
push
aas
dec
arpl
xor
ss
cmp
pop
mov
sbb
sahf
mov
pop
sub
bswap
mov
(bad)
cmp
sbb
inc
pusha
mov
cmc
and
adc
and
push
add
jge
xor
ret
dec
fiadd
aam
and
or
cdq
into
aaa
add
arpl
dec
fmul
retf
mov
scas
lds
das
add
lock
sbb
aad
pop
inc
lock
mov
jmp
or
es
mov
in
and
dec
cmp
cli
xchg
jno
jmp
sub
je
sbb
int
mov
fst
movs
and
lahf
lods
(bad)
(bad)
lea
sti
mov
xchg
pop
cmp
and
xor
in
xchg
xchg
dec
fs
mov
stos
sub
mov
or
and
outs
lock
(bad)
imul
or
stc
mov
mov
ins
mov
mov
(bad)
call
dec
add
enter
push
jne
mov
jbe
sbb
lods
movs
xchg
mov
xor
(bad)
pop
jl
sub
and
and
cmp
lods
(bad)
loope
(bad)
pop
clc
hlt
xchg
fucomip
or
(bad)
(bad)
xchg
add
jnp
popf
mov
cli
rcr
addr16
into
dec
xor
inc
adc
lahf
les
jp
dec
cmp
xchg
inc
jnp
dec
out
jne
or
inc
cs
adc
leave
fidiv
or
aam
repnz
in
into
cld
and
xchg
sbb
icebp
ret
scas
push
adc
(bad)
mov
scas
mov
jnp
push
aaa
mov
imul
mov
xchg
iret
and
jne
jns
sub
adc
add
je
stos
into
test
std
in
xor
add
nop
fwait
leave
ja
jmp
and
pop
in
push
pop
int3
pop
dec
mov
pop
das
xor
ja
mov
out
out
ja
dec
pop
(bad)
mov
loopne
dec
callw
call
sbb
cmp
clc
ins
sti
int
xchg
pop
mov
pop
idiv
cmp
stos
enter
jmp
xchg
movs
ja
rol
cmp
pushf
and
inc
enter
pop
inc
ret
bound
cmp
sbb
int
test
pop
pop
iret
jg
shl
xor
push
mov
xchg
sbb
adc
xlat
scas
jno
push
xchg
jb
add
or
fistp
int3
inc
pop
inc
mov
push
add
mov
mov
mov
inc
imul
jb
cmp
mov
mov
push
push
out
enter
in
xchg
(bad)
test
std
sub
jp
pop
xor
scas
jl
call
clc
sti
xchg
xchg
xchg
inc
rol
dec
push
jno
pop
scas
verr
iret
mov
jecxz
push
neg
dec
aad
call
fld
enter
xlat
not
je
test
mov
push
aad
mov
jg
and
push
cmp
iret
pop
jmp
rcr
loopne
push
repz
loopne
aas
cmp
ins
sbb
sbb
stos
cmp
cld
xlat
ret
xor
jo
aaa
cmp
ret
scas
mov
adc
arpl
lds
(bad)
pop
push
dec
fsub
add
stc
mov
call
mov
leave
dec
mov
je
dec
dec
and
cmp
or
jl
(bad)
dec
and
or
push
ret
sar
jb
push
cs
hlt
inc
es
cmp
sub
push
xor
mov
mov
outs
movs
adc
adc
ja
sub
jmp
sar
cs
retf
mov
mov
call
ret
and
(bad)
xchg
bound
pop
loopne
xor
gs
(bad)
mov
(bad)
call
mov
xchg
movs
rol
push
inc
and
xor
xchg
stos
leave
rcl
test
xchg
ds
jmp
mov
ins
sbb
clc
es
xchg
cld
daa
adc
or
jecxz
push
cmp
cmp
adc
push
addr16
push
cmp
sahf
push
push
sbb
push
inc
adc
rol
mov
mov
mov
inc
rcr
jns
sbb
fwait
ror
push
popa
int
pop
lods
xchg
xchg
or
push
pop
adc
loop
and
mov
test
retf
imul
xchg
add
in
xchg
aas
neg
iret
mov
adc
xchg
mov
dec
cmovne
mov
dec
xor
hlt
ins
in
mov
fld
test
fistp
les
(bad)
jecxz
dec
xchg
mov
pushf
cwde
test
add
adc
or
pop
jl
fsubr
shr
cs
dec
dec
sbb
stos
scas
inc
loope
dec
cmp
add
cdq
pop
mov
push
jge
lea
in
inc
jmp
jecxz
test
js
lods
ins
mov
sbb
fild
mov
mov
jmp
push
push
sti
xlat
loopne
into
jge
cmp
xchg
xor
js
fdiv
nop
mov
sbb
mov
icebp
jl
jno
mov
sbb
jmp
test
sbb
adc
add
ds
or
adc
xchg
test
add
aaa
sub
push
cld
pop
or
sbb
dec
pop
add
mov
test
dec
push
lahf
jp
xchg
xlat
add
aaa
aas
shl
aaa
add
stc
out
jo
or
adc
adc
ja
jg
push
push
xor
in
bound
add
xor
sub
dec
stos
sbb
add
xor
pop
das
in
fs
push
jg
ficom
adc
test
push
cdq
int3
aad
cmps
pop
xor
lods
cmp
pushf
add
xchg
cmp
jnp
seto
inc
mov
push
mov
and
fs
sbb
(bad)
std
adc
clc
lahf
mov
inc
jp
outs
dec
adc
imul
cmp
in
add
jb
sbb
xchg
xor
or
jne
pop
mov
mov
hlt
xor
sar
sbb
push
test
test
adc
jbe
mov
push
push
cmp
mov
push
mov
add
jecxz
mov
dec
xor
(bad)
je
addr16
dec
test
rcr
cmp
jno
inc
dec
fisttp
mov
cmp
pminub
loopne
lea
or
ja
xor
data16
movs
les
sahf
xchg
sbb
sub
pop
in
sbb
and
jo
dec
aad
imul
icebp
jns
xlat
pop
mov
jne
into
jge
sbb
in
jne
pushf
test
push
cmps
(bad)
daa
push
pcmpeqw
sbb
jbe
movs
lea
into
call
mov
mov
in
hlt
ss
inc
dec
lock
inc
(bad)
or
xchg
jbe
in
pop
out
adc
das
cmps
cmps
add
xchg
pop
iret
ror
or
xor
clc
lods
jmp
outs
jae
or
stc
jne
dec
sahf
pop
cmp
xor
xchg
(bad)
cwde
and
(bad)
bound
push
stos
in
imul
fdivr
dec
add
jg
cmp
mov
and
jecxz
movs
in
into
sbb
xchg
dec
ins
xor
xchg
fnstcw
(bad)
loop
jle
retf
dec
std
scas
jb
clc
sbb
mov
jb
jae
jmp
lds
rcr
arpl
mov
xor
pop
or
pop
lods
push
and
sub
jo
retf
push
xchg
or
test
dec
sub
loop
push
sub
pop
sbb
dec
push
push
sub
nop
jbe
xchg
jo
sbb
cmp
ret
enter
mov
fild
mov
xchg
sbb
inc
test
sub
jle
movs
adc
adc
fs
fld
loopne
push
mov
retf
stos
and
repnz
jo
es
push
mov
call
sub
das
outs
call
mov
cmp
sbb
mov
lea
pusha
inc
je
out
pop
stos
stos
cmp
test
iret
and
mov
cdq
stos
jg
jns
sub
ja
add
es
inc
mov
aas
pop
inc
call
imul
add
push
mov
call
and
test
mov
pop
add
fwait
fs
mov
dec
cld
jo
popf
fsub
aaa
mov
lods
pop
pushf
cld
jg
iret
xchg
movs
mov
mov
pop
push
push
dec
sbb
pusha
mov
in
jg
aas
mov
cmp
pushf
mov
inc
mov
pushf
inc
and
and
sbb
mov
(bad)
(bad)
iret
sub
test
sub
(bad)
call
xor
and
mov
loopne
inc
out
dec
aad
sbb
mov
shl
mov
cmp
xchg
ret
add
or
jnp
pop
fisttp
pop
sub
inc
ds
push
sbb
inc
cmp
(bad)
jp
and
mov
stos
rol
aad
mov
mov
(bad)
pop
rcr
ss
cmp
adc
iret
mul
cmps
scas
xlat
das
mov
xchg
test
nop
mov
cld
out
shl
jge
cwde
xchg
sub
call
or
cmps
mov
inc
inc
loope
or
sub
repz
popa
xor
push
add
add
xor
adc
mov
mov
sub
daa
cmp
enter
shr
push
nop
jno
jecxz
mov
sbb
add
push
sar
jno
pop
jns
push
add
(bad)
sub
xchg
push
mov
mov
push
mov
shl
add
mov
mov
sub
xchg
adc
pop
shl
ret
mov
lock
addr16
xchg
out
je
inc
les
or
jo
dec
mov
lods
test
add
mov
push
jmp
sbb
jmp
cld
bound
scas
cdq
cmp
xor
nop
imul
leave
sub
inc
ja
loope
movs
pushf
pop
outs
cmp
jge
xchg
or
fild
dec
adc
test
sbb
out
dec
into
js
dec
data16
push
bound
clc
and
into
nop
(bad)
adc
xchg
scas
push
add
mov
cmp
and
popa
or
rcr
or
stos
out
push
outs
mov
push
push
cmp
lds
add
(bad)
jle
jle
mov
ss
jne
aam
push
inc
dec
ins
psubd
lds
sahf
jl
and
adc
daa
daa
add
xchg
push
pushf
jae
xor
outs
pop
fld
and
es
pop
lahf
aad
ds
xchg
imul
inc
and
dec
xor
enter
les
jmp
push
dec
(bad)
out
icebp
mov
idiv
fiadd
push
call
add
adc
loop
cld
test
cld
add
or
mov
sbb
pushf
mov
ror
fwait
jmp
ins
mov
loope
add
ins
pop
test
das
repnz
into
inc
cmp
xlat
and
lods
(bad)
dec
(bad)
cmp
push
dec
jne
out
leave
iret
shr
jp
sub
cmp
ret
(bad)
xor
(bad)
fs
dec
mov
std
call
sub
into
hlt
cdq
jl
jmp
push
or
je
pop
inc
popw
push
jecxz
sbb
jbe
sbb
push
jb
mov
(bad)
aam
cmps
jp
inc
(bad)
fsubr
retf
std
iret
xchg
adc
dec
add
pop
(bad)
cs
jns
pop
jge
inc
sub
xor
pop
and
fwait
pushf
xchg
push
div
xchg
cmp
push
xchg
test
mov
mov
js
xor
xor
loop
sbb
(bad)
sti
in
movs
clc
sti
lds
in
adc
inc
mov
or
sahf
mov
test
xor
test
xchg
adc
cmc
or
add
clc
xchg
add
pop
sbb
xor
push
pop
sub
fwait
test
(bad)
test
and
inc
je
adc
xlat
sub
and
cmc
jb
daa
jb
cs
test
pop
push
pop
mov
add
out
fldcw
repz
cs
cmp
and
int
jbe
cmp
scas
or
jns
ss
pop
ins
pop
add
imul
pop
scas
gs
cdq
stos
dec
movs
into
popa
push
dec
sub
repnz
inc
ret
jg
call
aam
lock
cmp
jmp
push
out
pop
out
loop
hlt
push
stos
pop
xor
xor
sbb
scas
and
fidiv
data16
dec
or
sub
mov
in
sbb
mov
(bad)
jmp
mov
sbb
aam
sub
nop
sbb
adc
xchg
std
test
lea
pop
add
and
jmp
sbb
push
pop
mov
loopne
pop
push
pushf
imul
jnp
jle
xor
push
test
cmp
daa
out
scas
push
inc
addr16
pop
xchg
into
lahf
shr
mov
and
fs
fisub
xor
mov
(bad)
sar
retf
jb
out
sbb
enter
xor
xor
push
jns
dec
mov
xchg
(bad)
outs
call
fwait
loop
and
push
jl
jb
movs
and
into
jns
cmp
sub
mov
mov
jae
not
(bad)
mul
int3
cmps
and
int
sub
int3
inc
sub
inc
xchg
pusha
mov
xchg
or
outs
in
jle
push
and
mov
daa
inc
xchg
inc
xor
and
jns
sub
xor
add
pop
jmp
inc
loope
ins
inc
mov
xchg
mov
test
test
leave
fwait
jbe
outs
test
cmp
in
push
cdq
inc
jmp
mov
stos
and
xchg
sub
sahf
push
or
clc
shl
dec
push
out
fwait
jne
sub
pusha
adc
inc
mov
mov
and
dec
aam
ins
sub
mov
loope
jmp
aas
outs
push
jmp
mov
data16
inc
mov
push
pop
stos
adc
ret
test
ret
lahf
imul
jne
vmwrite
dec
into
out
cmp
pop
jbe
cmp
(bad)
and
mov
jg
fidivr
jg
test
(bad)
xchg
pop
pushf
push
add
and
loop
mov
sar
fstp
cmp
lds
call
or
fcomp
repnz
xor
mov
ret
test
int
sbb
stos
add
(bad)
ins
xor
mov
pop
dec
pop
mov
adc
xor
jg
adc
xchg
and
mov
xor
xchg
imul
stc
mov
imul
add
daa
push
imul
inc
mov
es
repnz
jno
jl
rcr
or
out
cmc
fdivr
xchg
and
pushf
sub
dec
stc
sti
inc
(bad)
adc
inc
shl
movs
inc
jl
xor
mov
ret
popf
jecxz
repnz
(bad)
dec
ins
jecxz
adc
ret
cld
nop
fst
call
pop
xor
inc
jg
and
stos
out
out
cmp
mov
pop
jp
pop
mov
mov
or
xchg
adc
push
add
ins
int
lds
ins
jmp
stos
das
es
sahf
sbb
push
cs
sbb
aam
lds
imul
jae
setns
rol
pop
adc
mov
dec
cmp
push
retf
or
loop
xchg
jb
mov
ins
shl
xchg
ins
es
xchg
mov
jne
fisttp
rcl
push
cli
das
sbb
fistp
fiadd
jg
mov
cmps
imul
xor
jne
push
std
mov
(bad)
push
dec
cmp
pop
dec
lahf
add
inc
cli
lock
into
or
pop
cmp
mov
pop
and
cmp
loop
push
inc
(bad)
icebp
scas
hlt
mov
mov
push
cwde
inc
mov
jb
je
sub
and
rol
fistp
cli
jge
mov
aaa
sti
mov
call
loopne
lods
cmc
bound
cmp
push
mov
mov
cmps
hlt
sti
mov
inc
sub
jl
push
stos
push
ja
ins
not
pop
or
mov
jl
daa
data16
pop
sar
push
movs
pushf
pop
sbb
jmp
in
adc
icebp
lock
add
mov
xor
inc
call
xchg
int3
inc
pop
and
and
fs
nop
repnz
pop
clc
pushf
std
pop
cmp
ret
push
xchg
inc
push
pusha
loope
xchg
mov
mov
jg
xlat
push
adc
cmps
and
inc
inc
out
xchg
or
or
adc
nop
inc
mov
imul
dec
sbb
and
out
ins
pop
les
inc
sbb
pushf
jmp
xor
ja
test
in
lods
xchg
sbb
push
add
repnz
repz
mov
pop
mov
sar
sbb
popf
xchg
push
or
push
pop
add
inc
dec
sbb
sub
pop
dec
and
or
jg
jl
pushw
cli
jecxz
adc
repnz
xchg
aaa
test
xor
aaa
sub
shr
or
aad
loopne
mov
sub
int
mov
dec
js
stc
scas
imul
xchg
or
push
(bad)
push
xchg
pop
les
scas
sub
or
fimul
dec
repz
rcl
arpl
in
add
adc
mov
out
pop
lock
in
xchg
xor
add
jnp
and
iret
dec
(bad)
fistp
pop
push
in
pop
bound
push
or
daa
out
push
jns
mov
jne
retf
adc
out
shl
adc
imul
(bad)
pusha
push
mov
je
xchg
ss
or
xlat
xchg
shl
mov
ja
xchg
inc
movs
dec
or
bound
pop
add
les
fadd
sub
xchg
sahf
sub
es
lea
cmp
push
in
pop
sbb
mov
pushf
xchg
(bad)
and
xchg
icebp
loopne
jno
mov
les
mov
(bad)
pop
cmp
stos
test
stos
pop
rcl
call
cdq
cmc
stos
out
sbb
sub
mov
sub
cwde
fstp
pop
leave
xor
outs
cmp
popf
das
je
int3
push
ins
sub
or
or
fnstsw
push
xchg
repz
mov
mov
mov
clc
ja
ds
add
jno
rcl
push
test
bound
pop
imul
adc
adc
push
cmp
sbb
nop
sbb
mov
or
pop
xor
sti
mov
ud1
movs
mov
pop
shl
cld
mov
(bad)
adc
inc
stos
jno
ret
cmps
rcl
call
in
pop
stos
mov
push
daa
jp
leave
loope
fsubrp
lea
sbb
data16
lds
add
mov
sahf
pushf
jb
or
or
loopne
lods
add
adc
add
(bad)
push
cmc
jg
call
dec
mov
push
bound
push
mov
cdq
mul
pop
int3
mov
fdivr
sub
lea
std
hlt
and
fcmove
cmp
pop
jo
icebp
sbb
cs
call
pop
les
cwde
stos
mov
rcl
call
fidiv
scas
rcl
test
setg
cwde
push
inc
cmp
lea
dec
pop
imul
or
xchg
sbb
push
clc
lds
test
das
push
jle
out
or
add
jg
cdq
pop
rol
jmp
mov
call
hlt
aas
jmp
lods
rcr
inc
sub
mov
cld
dec
sub
sbb
and
pop
out
dec
fistp
test
sub
dec
cmc
pop
xchg
loop
stos
fld
push
(bad)
aaa
pop
mov
test
dec
fmul
jp
ja
cmp
rcl
jo
xor
gs
sbb
daa
ret
rol
fcom
push
mov
push
stos
scas
retf
js
(bad)
pop
or
mov
mov
fwait
pusha
mov
loope
xor
repz
sahf
add
pusha
cmp
cmp
fld
ss
or
mov
mov
mov
or
clc
jne
and
cmp
mov
jecxz
int3
mov
jl
pushf
push
aad
xchg
aas
mov
push
adc
push
xor
outs
daa
jl
jb
mov
and
cmp
xchg
or
in
mov
call
sub
sbb
xchg
jl
gs
cld
and
rol
icebp
(bad)
ds
aad
je
pop
or
jno
test
push
push
icebp
scas
out
adc
xor
int
xor
mov
add
mov
jo
pop
pop
outs
cs
in
ret
cmps
aad
and
cmp
leave
push
mov
push
cli
push
xchg
jb
nop
and
xchg
push
xor
pop
mov
push
(bad)
out
pop
pop
sahf
jnp
shr
std
xchg
sti
lods
or
cli
sub
pop
adc
inc
xor
xchg
rcr
sbb
or
mov
inc
xor
mov
pop
cmp
inc
sub
hlt
stc
mov
retf
cmp
pusha
or
arpl
les
sbb
pop
imul
xchg
jmp
mov
sbb
push
add
xchg
shl
or
jns
xor
rol
leave
jbe
shl
mov
inc
or
cmps
xchg
jno
in
bound
pop
jmp
js
pushf
and
mov
ja
fiadd
and
lea
cmc
into
aam
pop
(bad)
andps
xchg
mov
dec
jmp
jno
gs
mov
int
rcl
test
dec
inc
inc
sub
cmc
adc
ret
or
ja
(bad)
ins
adc
movs
shl
fldcw
in
out
adc
xchg
sbb
add
inc
and
pop
rcr
adc
es
arpl
(bad)
adc
iret
inc
inc
and
mov
cmp
mov
loopne
dec
jp
push
jecxz
loop
clc
rol
je
pop
jmp
mov
inc
cmp
cmp
pop
add
std
mov
icebp
ins
aad
(bad)
mov
adc
or
retf
fdivp
sbb
inc
cli
or
das
(bad)
push
sbb
gs
pusha
lds
fstp
fidivr
adc
push
add
and
mov
pop
ja
mov
jmp
aas
dec
(bad)
hlt
mov
iret
lds
sar
lock
adc
jnp
lock
shl
mov
ffreep
mov
(bad)
jns
sub
dec
xor
pop
nop
pop
ret
aad
sbb
sbb
sbb
jg
jl
daa
rcl
pushf
xchg
cdq
sub
or
adc
jb
xchg
popf
imul
xor
push
call
xor
movs
push
(bad)
fbld
mov
test
sub
ret
inc
inc
add
mov
cmp
adc
mov
push
movs
cli
shl
add
das
fs
sbb
mov
es
push
aad
shr
test
xchg
mov
pop
inc
jb
aam
push
fwait
pop
neg
jl
push
je
shr
mov
stos
fs
xchg
popa
inc
add
push
mov
xchg
dec
in
sub
xchg
xchg
xchg
adc
std
cmc
fidiv
fimul
xor
ret
sti
jo
rol
jo
mov
and
ret
les
xchg
add
mov
fisttp
es
sbb
jb
js
rol
lock
jg
enter
daa
dec
jns
repz
add
cli
fcomp
retf
sub
xor
jno
xchg
fst
push
and
or
xchg
aad
adc
daa
sub
adc
rcl
cdq
jo
and
jl
sub
xchg
mov
mov
jbe
push
in
lahf
scas
call
mov
pop
rcr
pop
in
push
dec
xchg
fwait
sbb
sub
mov
sbb
inc
std
jmp
mov
outs
icebp
test
mov
fbstp
cmp
ficom
jmp
xor
mov
add
das
jle
sbb
push
jne
cmp
outs
mov
idiv
loope
xchg
das
jbe
push
or
push
inc
inc
icebp
push
xor
jmp
sbb
inc
mov
xchg
sbb
ja
mov
aad
sahf
loope
or
inc
mov
loop
sbb
stos
jbe
es
lahf
mov
mov
jb
fisubr
int3
fisubr
callw
push
lea
xchg
ins
inc
js
in
in
mov
add
inc
je
cmp
es
add
mov
xlat
imul
call
jae
push
jnp
jl
adc
dec
jne
repz
push
push
mov
fiadd
push
sbb
pop
xchg
aaa
retf
sti
jb
jle
cdq
or
or
frstor
or
cmps
lock
inc
cs
inc
mov
adc
outs
inc
ror
push
sbb
sbb
cmp
xchg
pop
inc
add
xchg
jmp
mov
in
enter
inc
cld
jae
xor
inc
and
mov
stc
movs
add
imul
cmp
adc
mov
je
aas
rcl
fxch
mov
jg
mov
jbe
movups
sbb
dec
loope
mov
call
mov
jg
popf
aaa
sub
movs
xor
sbb
sub
lods
outs
push
sbb
aam
mov
mov
cmp
inc
and
test
fwait
xchg
jne
movs
cmp
add
rol
retf
fnstcw
clc
into
aas
pop
dec
and
dec
adc
pop
mov
or
cmp
push
jne
adc
sub
sbb
dec
push
imul
sbb
pop
inc
or
jmp
or
std
dec
mov
call
pushf
adc
mov
push
sbb
push
sbb
sub
scas
call
ins
jo
(bad)
push
fwait
cmovb
pop
mul
call
fist
hlt
add
ror
and
sar
shl
xor
sub
(bad)
(bad)
les
jnp
jp
push
xchg
test
dec
xchg
scas
xchg
adc
sub
jmp
and
mov
out
cmc
sbb
pop
lock
jl
pop
jp
aad
xlat
outs
dec
or
pop
inc
scas
fisub
(bad)
add
int3
jmp
test
inc
fcomp
push
add
mov
sbb
sub
mul
mov
scas
sbb
inc
mov
and
add
fistp
xchg
mov
test
in
jo
jl
dec
cdq
pushf
jbe
sti
(bad)
xor
inc
jle
mul
gs
retf
sahf
pop
adc
mov
adc
lock
sub
sub
cmps
lahf
lahf
jg
and
pop
sub
cli
ins
stc
jp
inc
sub
push
add
add
mov
call
jge
push
test
adc
cmps
call
or
gs
mov
pop
sbb
mov
cmp
cli
mov
push
add
mov
into
cmps
loopne
fdecstp
jmp
push
xor
jle
mov
lock
push
gs
jp
push
jecxz
ja
outs
adc
pop
and
scas
fwait
stos
cmc
xchg
movs
(bad)
into
ins
imul
fdivr
dec
ror
je
outs
(bad)
xchg
loope
les
pusha
push
mov
and
enter
mov
stos
sub
mov
jg
jnp
rol
(bad)
cmps
inc
icebp
xchg
jns
movs
cld
enter
lea
enter
nop
xor
ffree
rol
lock
not
fst
xchg
mov
jns
fmul
xor
mov
add
and
add
rol
jno
retf
movups
jo
test
push
xlat
inc
cmp
ins
xor
hlt
jbe
imul
stc
pusha
enter
js
dec
in
adc
inc
push
inc
xor
pop
aas
and
xchg
xor
(bad)
sbb
iret
fnsave
sbb
push
inc
scas
xor
stos
fild
jmp
jp
inc
push
push
jecxz
lods
inc
fwait
mov
xor
mov
mov
out
sbb
fiadd
push
(bad)
xchg
ret
loopne
xor
adc
fcomp
cmp
inc
inc
or
or
and
xchg
repz
fcom
pop
ror
mov
int3
push
cli
dec
mov
int3
(bad)
aaa
sbb
mov
pusha
mov
or
or
add
mov
jg
ins
pop
hlt
or
(bad)
push
fsubr
test
push
push
cmp
mov
scas
call
fidiv
clc
addr16
imul
xchg
fcomp
popa
sbb
or
test
fcmovnb
int3
or
test
aad
xor
aam
(bad)
and
pop
loopne
push
inc
or
mov
ja
dec
aas
xchg
int
push
push
repz
outs
dec
gs
(bad)
pop
push
push
cmps
fist
sbb
in
loope
(bad)
mov
xor
aas
xchg
xor
xchg
inc
test
fmul
jge
mov
mov
or
mov
mov
xchg
ret
test
and
test
cmp
mov
out
cmp
fcomp
or
dec
repnz
dec
mov
and
mov
in
(bad)
scas
lods
and
adc
mov
ins
add
jnp
push
cwde
xchg
lea
test
push
gs
in
xchg
xor
cmps
aad
sub
jl
jle
dec
cmp
push
sti
lods
retf
imul
mov
shl
xchg
emms
mov
mov
jne
sub
hlt
loop
neg
cs
xor
sub
fiadd
sti
aaa
dec
out
repz
pop
leave
ds
cli
aaa
fiadd
pop
icebp
out
xchg
into
fstp
cwde
aas
outs
fisubr
ss
rcl
mov
out
mov
fidiv
je
aad
cmc
in
into
outs
mov
mov
fdivr
add
out
xor
mov
in
pop
ret
int
sbb
sbb
loopne
mov
xchg
dec
clc
rcl
xor
jp
adc
pop
push
arpl
fcom
dec
out
inc
push
aam
ds
shl
inc
nop
mov
inc
adc
xor
imul
retf
retf
dec
les
sub
mov
fcomp
mov
or
or
les
inc
out
(bad)
jmp
scas
mov
pushf
arpl
aaa
jo
push
mov
xor
out
fidiv
and
fild
(bad)
mov
test
push
fisttp
(bad)
cmp
dec
mov
mov
xor
mov
sti
(bad)
xor
div
stc
call
loopne
jo
imul
jp
or
fdiv
pop
aad
in
adc
jmp
mov
mov
int
mov
dec
loopne
(bad)
test
scas
push
mov
mov
adc
(bad)
and
outs
mov
test
or
rcr
icebp
pushf
mov
les
js
jp
jl
je
push
dec
and
add
pop
adc
iret
popa
std
mov
jbe
push
sub
and
shl
or
dec
dec
sbb
pop
inc
dec
ror
(bad)
outs
inc
jns
push
inc
jge
xchg
mov
retf
xor
enter
stos
add
dec
dec
inc
loope
jnp
in
adc
lock
data16
xlat
nop
push
shl
push
(bad)
dec
std
mov
leave
ja
es
call
mov
jecxz
pop
lea
or
cmp
icebp
dec
repnz
push
arpl
jb
inc
mov
cmp
int3
cmp
and
push
sbb
movs
mov
(bad)
mov
stos
push
outs
jmp
sbb
push
cmp
out
mov
shr
imul
push
jns
dec
xchg
push
lods
mov
hlt
inc
push
xor
pop
xor
mov
clc
sbb
or
sbb
imul
ins
fwait
pop
scas
loopne
jp
sbb
mov
xor
movs
aam
push
les
xchg
in
mov
mov
icebp
sub
pop
out
or
or
popa
jo
cmp
stos
add
(bad)
outs
xchg
imul
xchg
cdq
xlat
sub
pop
sub
pop
ja
adc
pop
xor
dec
xor
cmp
push
push
jmp
pop
cmc
fistp
push
cld
cmp
sub
out
mov
jmp
cmp
int3
mov
int
dec
stos
mov
inc
mov
ficomp
fidiv
jmp
jo
jb
cmp
dec
mov
es
sbb
cmp
cli
dec
mov
out
rcl
in
retf
dec
xor
ss
pop
ins
mov
push
mov
stos
push
sbb
jbe
iret
shl
and
push
and
test
test
std
or
mov
idiv
in
aad
dec
js
jnp
push
idiv
(bad)
sub
into
jl
push
dec
sub
jns
gs
lock
loope
ror
cld
std
pop
add
(bad)
sbb
std
xchg
xor
jb
shl
popf
inc
dec
mov
push
sahf
or
js
sbb
mov
test
jle
cmp
gs
mov
das
add
not
movs
pop
retf
iret
rol
add
loop
dec
pop
sub
inc
mul
dec
jl
popf
fisub
ds
jmp
(bad)
sub
das
and
inc
dec
(bad)
std
cmp
mov
cli
jns
mov
xchg
dec
add
inc
push
fs
aas
push
fimul
jns
add
jl
(bad)
adc
pop
shr
data16
jecxz
popf
sbb
popf
or
push
xlat
push
xchg
into
leave
mov
not
and
and
enter
mov
cli
dec
fadd
jmp
add
ret
or
push
cmp
or
ins
jmp
jge
mov
sub
jg
int3
mov
xchg
dec
mov
add
inc
add
mov
les
xchg
in
add
jp
out
lods
cli
les
or
sub
sub
mov
test
sub
xor
gs
mov
pop
dec
lea
loop
inc
shl
iret
pop
dec
mov
mov
stc
std
mov
mov
retf
mov
pop
cld
test
jge
push
or
ret
shr
call
xchg
(bad)
(bad)
inc
jp
cmp
aad
jl
and
sbb
neg
sub
test
lahf
in
mov
outs
sbb
mov
or
scas
jl
test
mov
inc
clc
les
add
ret
jnp
int3
cwde
jmp
inc
dec
scas
into
inc
loopne
dec
int
int
rcl
icebp
scas
jmp
mov
mov
push
xchg
mov
popf
sar
xor
rol
ins
fbld
cli
imul
out
dec
xchg
cli
xchg
mov
(bad)
fisub
imul
dec
pop
mov
(bad)
sti
cmps
(bad)
repnz
or
daa
pop
inc
js
jl
push
jns
sbb
test
pop
aaa
int3
inc
pop
lods
out
out
arpl
int3
lds
int
aas
push
dec
pop
xchg
test
js
repnz
imul
sbb
mov
mov
mov
and
imul
int3
mov
push
mov
scas
pushf
fld
data16
and
add
cld
lds
retf
loope
and
dec
int
xor
pop
aas
xchg
dec
iret
xchg
cwde
push
arpl
ss
aas
das
cmc
pop
push
sbb
sti
fisttp
jge
mov
xchg
mov
cli
or
push
icebp
fimul
jl
mov
pushf
cmp
cdq
pop
or
fcmovbe
enter
cmp
and
cmp
dec
cmps
stos
mov
lock
out
mov
bound
mov
addr16
mov
mov
sahf
mov
push
xchg
and
xor
mov
out
lds
and
mov
pop
cmps
jns
sbb
xchg
loope
inc
or
adc
and
shl
jns
xor
jo
mov
dec
mov
outs
cmp
xchg
cmps
mov
adc
xor
xchg
cdq
inc
ror
std
addr16
mov
cmc
and
mov
fdivr
pop
repz
jmp
xchg
addr16
push
cmove
cmp
mov
inc
push
cmp
call
(bad)
xchg
out
sub
aad
popf
and
add
call
js
fs
rol
xchg
mov
and
jge
add
out
jge
dec
psllw
push
jecxz
cmp
pop
mov
cli
das
mov
xchg
cmp
hlt
adc
adc
lods
pop
bound
out
mov
cmp
fimul
int
add
inc
daa
lock
mov
loopne
jge
mov
xchg
rcr
inc
push
pop
jo
in
(bad)
jno
sbb
jno
or
fdiv
std
outs
out
xchg
mov
add
push
mov
or
fbstp
pop
nop
push
cmp
push
add
xchg
push
push
outs
fwait
xor
lock
pop
mov
icebp
sub
mov
fldenv
jge
bound
xor
es
pop
das
add
jnp
sub
mov
fist
mov
ja
fwait
popa
out
add
retf
mov
test
inc
(bad)
push
mov
ret
sahf
iret
aad
jae
dec
(bad)
xchg
js
jecxz
adc
or
cmp
add
aam
lock
jge
xchg
xchg
rol
mov
cmps
sub
movs
clc
loopne
sub
jge
sub
pop
js
stc
cmps
ret
or
out
dec
repnz
clc
(bad)
adc
das
xchg
dec
scas
js
call
push
dec
dec
imul
sub
mov
pop
enter
addr16
xchg
imul
in
stc
imul
xchg
jle
out
cmps
dec
inc
shl
test
or
cvtps2pd
loopne
dec
cmp
lock
fld
add
adc
in
out
test
fild
enter
and
jno
sbb
scas
jp
js
pop
ins
scas
add
test
(bad)
push
xlat
push
into
xchg
adc
pop
shl
dec
and
push
ja
xor
inc
jne
pop
pop
ja
adc
imul
mov
rcr
retf
mov
sahf
jecxz
jne
movs
ficomp
jbe
inc
adc
dec
call
add
dec
outs
xor
add
adc
sbb
out
cmp
jmp
lahf
mov
pop
xor
add
es
pop
xchg
int3
adc
pusha
icebp
test
retf
in
jp
out
mov
mov
call
dec
rcl
retf
mov
movs
enter
sti
push
mov
popf
push
ins
jnp
add
aaa
ins
stc
or
cld
adc
or
xchg
sub
loopne
sub
add
push
and
push
retf
call
jmp
push
adc
scas
dec
in
repz
mov
and
outs
push
inc
loopne
dec
test
(bad)
fsub
jnp
fs
test
pop
(bad)
test
pop
cs
push
icebp
sbb
(bad)
outs
cmc
imul
jno
not
dec
imul
push
cli
and
or
push
dec
adc
out
dec
test
jmp
dec
scas
jecxz
xor
in
and
add
movs
jmp
inc
pusha
mov
rcl
int
clc
test
ret
or
pop
jnp
or
in
cmp
inc
dec
bound
mov
lods
clc
sbb
mov
jg
mov
fnstsw
or
add
rol
and
jb
fnstsw
jne
cmps
jbe
aas
xchg
inc
push
mov
imul
je
cmc
mov
dec
or
ds
sbb
dec
mov
mov
xorps
ss
scas
test
cmps
sbb
push
xchg
mov
in
push
pusha
js
adc
inc
lea
inc
and
pop
enter
pop
adc
les
mov
cmps
scas
inc
push
add
sbb
xor
stos
inc
jmp
std
mov
imul
iret
or
pop
daa
test
enter
popf
mov
sar
jmp
xor
mov
or
sahf
dec
ss
into
mov
dec
pop
mov
aad
jmp
adc
ins
mov
inc
shl
push
inc
lahf
cs
neg
ds
out
rcl
fldenv
mov
jecxz
cmc
out
mov
int3
fld
add
adc
jns
shr
outs
xchg
(bad)
mov
jne
ds
(bad)
setns
fwait
lahf
imul
mov
jmp
mov
iret
pusha
adc
or
add
mov
das
fcmovnu
jg
es
mov
iret
fst
and
adc
popf
retf
adc
stc
imul
mov
add
mov
jbe
nop
call
jb
shl
add
cs
xchg
jbe
in
jne
gs
jmp
call
test
cli
mov
out
cmp
test
(bad)
(bad)
out
cmp
stos
xchg
aaa
mul
retf
sbb
mov
imul
test
xchg
pop
iret
adc
xchg
ins
mov
add
je
mov
sbb
adc
dec
cmps
mov
mov
mov
add
xchg
imul
mov
scas
nop
adc
xor
ret
out
mov
arpl
fucomip
repnz
cmps
imul
jg
jns
in
cmps
xor
jbe
jecxz
dec
or
cmp
xor
clc
xor
fmul
cld
mov
in
outs
test
xlat
retf
test
test
mov
or
xor
loope
jge
xor
jge
cmps
adc
loope
(bad)
ja
mov
hlt
hlt
xor
popa
mov
div
ror
inc
mov
dec
xchg
int3
xchg
xchg
mov
sub
std
in
mov
icebp
inc
fwait
jp
or
mov
add
test
dec
test
adc
sar
jns
xchg
mov
call
loope
cmp
lock
arpl
mov
lods
cmp
ds
sbb
aaa
jecxz
ja
cmp
and
jmp
xchg
test
hlt
int3
mov
ins
xor
mov
aad
xchg
xor
and
sbb
jle
test
dec
js
shl
enter
imul
cmps
mov
xor
jbe
pushf
cwde
jno
cld
loope
test
neg
pop
mov
scas
rol
repz
xor
outs
pop
cwde
mov
mov
in
jno
fwait
push
jnp
retf
cmp
xlat
cdq
ftst
gs
sub
outs
inc
mov
inc
inc
lahf
and
aad
mov
in
enter
push
pushf
(bad)
aam
xchg
push
mov
cdq
cwde
xchg
lea
mov
out
in
jae
out
daa
or
iret
test
cmp
iret
and
add
(bad)
loop
movs
pop
push
sub
jecxz
mov
and
rcl
mov
dec
mov
mov
inc
sbb
dec
sahf
push
cdq
adc
inc
mov
mov
(bad)
xchg
gs
sbb
cmc
nop
add
cmps
fld
loopne
push
sub
loope
pop
cld
inc
fstp
inc
fdivr
mov
add
jmp
lods
xchg
cmp
xor
pop
das
call
adc
daa
jns
into
push
xchg
sbb
test
gs
push
inc
mov
and
xlat
adc
lds
fimul
mov
aam
and
dec
pop
cs
popa
into
mov
dec
or
(bad)
int3
xor
mov
test
push
fimul
bound
ror
ins
mov
ret
ror
or
add
std
push
adc
mov
test
clc
and
push
gs
aas
push
psubsb
add
lds
inc
inc
xor
jnp
pop
xchg
(bad)
in
or
jl
push
pop
xor
push
mov
ins
mov
jbe
clc
push
lea
popa
cmps
ja
inc
mov
lock
es
dec
xchg
inc
mov
add
push
inc
pop
ds
pop
jbe
inc
aam
sti
bound
xchg
pop
or
push
jae
jo
fwait
arpl
mov
stos
jp
adc
or
mov
jge
int3
xchg
sbb
loope
mov
ins
stos
mov
aad
cmps
sub
jp
cs
dec
mov
pusha
cmp
push
ror
lods
sub
jne
pop
dec
xchg
popa
retf
sub
(bad)
add
sbb
(bad)
or
je
jbe
popa
dec
mov
aad
push
aas
in
call
sbb
arpl
and
or
pop
out
jmp
xor
sub
test
push
stos
std
lds
or
les
adc
cli
sub
mov
(bad)
daa
mov
in
inc
push
push
scas
in
in
sbb
shl
icebp
sbb
xchg
mov
adc
int3
or
movs
lods
pusha
ret
mov
pusha
and
mov
mov
adc
frstor
jns
shl
enter
lods
push
sub
popa
adc
cmp
lea
xchg
and
shr
add
mov
dec
stos
es
dec
retf
push
mov
loop
test
fsub
xor
pop
enter
or
je
or
repnz
mov
(bad)
pop
scas
int
add
lods
and
popa
cmp
cmp
or
ret
xchg
mov
test
mov
fldl2e
pop
shl
dec
or
and
bound
addr16
mov
ins
pop
lods
xlat
pop
clc
pushf
xor
sub
add
mov
cmp
inc
and
or
pop
xchg
pop
mov
out
inc
sbb
add
ds
popf
ja
in
mov
sahf
int
push
and
mov
fadd
jmp
mov
inc
mov
sbb
ja
dec
and
sub
or
cld
cdq
pop
lods
fistp
add
or
and
jo
jbe
inc
sub
pop
pop
push
jnp
inc
in
or
mov
xchg
daa
loop
xor
sbb
retf
dec
jnp
retf
mov
test
outs
out
jg
movs
lahf
cmp
retf
jne
pop
cmp
mov
movs
lods
aaa
arpl
leave
ror
jae
mov
inc
test
test
push
cmps
cmp
jnp
test
mov
mov
pop
xor
xchg
mov
lea
inc
pop
loope
cmp
in
push
cmp
or
aad
sub
and
add
setle
(bad)
arpl
sbb
mov
xor
lahf
jns
cmp
cmp
add
push
and
pop
mov
call
push
fld
jbe
sbb
pop
sub
loop
lods
xchg
jb
mov
sbb
and
aam
sub
mov
dec
sub
add
lods
or
xchg
push
pop
test
shr
or
out
sub
mov
sub
cld
mov
test
mov
pusha
shl
je
xchg
fwait
cmp
lock
movs
sahf
in
aaa
jmp
shl
push
(bad)
lock
neg
add
shl
fstp
xchg
cmp
xlat
fs
adc
(bad)
cdq
cmp
jns
dec
adc
lea
imul
dec
sti
ret
fiadd
sub
mov
ss
xchg
mov
out
mov
adc
xor
jl
adc
shl
ud0
xor
jno
cld
ja
mov
in
sysexit
add
jl
stos
cmps
retf
xor
jg
dec
push
xchg
(bad)
jmp
dec
pop
inc
pop
shl
sar
cli
mov
retf
popf
test
fstp
push
test
(bad)
push
and
retf
test
loop
(bad)
cmp
ins
test
ret
aad
(bad)
popa
mov
stos
dec
test
xchg
imul
jecxz
push
shl
cwde
mov
mul
sub
mov
popf
push
pusha
mov
imul
fadd
(bad)
fs
stos
mov
inc
push
push
cmp
adc
xchg
pop
arpl
lahf
call
xchg
mov
mov
dec
sar
mov
fcom
fwait
ins
mov
cdq
jl
inc
jne
in
dec
xchg
adc
cmp
retf
test
fs
mov
call
mov
test
in
mov
dec
inc
jmp
hlt
fdiv
js
ss
sbb
fdivrp
es
pop
imul
mov
mov
push
push
mov
jle
test
fstp
mov
test
mov
mov
mov
(bad)
pop
jmp
sub
pop
outs
fs
scas
dec
cmp
aam
pushf
sbb
xchg
ret
inc
pop
push
loope
cld
lods
and
mov
dec
enter
cmps
cld
adc
jno
mov
sbb
push
mov
int
test
jl
lods
dec
ins
cmp
fwait
psubq
or
loopne
sti
pusha
das
sub
mov
call
push
test
dec
movs
repz
push
ret
hlt
cmp
adc
in
pop
mov
stos
xor
ret
dec
std
adc
les
pop
dec
bound
pop
mov
popf
aaa
sub
cli
lods
loope
mov
push
in
cmp
sbb
in
pop
push
stos
int3
jmp
fidiv
dec
test
jge
les
jne
xor
dec
ss
push
pop
sub
inc
pop
fistp
adc
sbb
xor
retf
pop
bound
or
loop
(bad)
push
(bad)
retf
aam
or
icebp
jb
push
push
cmc
out
push
addr16
dec
add
fsub
daa
out
mov
jle
xchg
(bad)
xor
inc
push
mov
out
imul
outs
leave
mov
and
add
outs
std
ret
pop
sbb
test
enter
mov
xchg
sbb
inc
call
add
or
jl
xor
test
xor
retf
lahf
nop
shr
call
je
dec
in
fisubr
cmp
test
push
pusha
inc
xor
call
(bad)
pop
or
int3
cmp
pusha
pop
imul
int
(bad)
cmp
pop
cld
dec
mov
mov
mov
jb
push
(bad)
(bad)
push
cwde
loope
stc
push
sbb
and
jl
pop
jno
sub
or
jl
cld
outs
add
lods
fsubr
add
push
fidiv
mov
mov
mov
cmp
adc
xchg
sbb
fs
std
sbb
(bad)
mov
mov
fisttp
call
fldlg2
leave
(bad)
push
mov
lock
sbb
cmps
push
call
addr16
xchg
xor
int3
test
inc
sti
dec
gs
push
jae
fnstenv
mov
sbb
in
retf
xchg
cmp
movs
mov
push
(bad)
ss
loopne
mov
sti
fnstenv
daa
mov
loope
imul
and
int3
retf
into
inc
or
lods
and
cld
jge
ins
(bad)
jl
mov
and
in
fld
sbb
icebp
adc
stc
call
adc
push
cs
push
adc
data16
and
shr
mov
mov
adc
pop
jmp
push
mov
mov
lea
inc
sub
push
sub
mov
or
hlt
retf
ret
js
in
xor
rcr
xor
fisubr
jmp
inc
mov
nop
pop
movs
lock
inc
rcl
and
pop
sbb
xor
adc
dec
sbb
xor
aad
jb
push
pop
jno
mov
pop
stos
xor
xchg
push
aaa
lods
fldenv
ror
fistp
adc
in
gs
mov
mul
les
stos
jmp
cmp
(bad)
(bad)
fcomi
iret
add
inc
push
jbe
or
jge
add
sbb
jne
push
mov
dec
and
mov
adc
jnp
rcr
xor
sbb
rep
push
cmps
scas
les
or
jae
pop
mov
mov
xor
dec
ins
push
(bad)
fs
or
sbb
jnp
jmp
data16
movs
pop
inc
dec
int3
jno
and
out
(bad)
xchg
into
sub
inc
mov
mov
xchg
shl
ret
jp
inc
jmp
push
sbb
lods
mov
xor
push
stos
and
and
sahf
iret
lds
in
jle
cmp
push
out
div
inc
mov
clc
mov
leave
jo
rol
fisttp
jp
add
xchg
jae
popf
retf
(bad)
add
retf
jmp
inc
nop
pop
cmps
inc
pop
ins
push
outs
cld
jmp
aas
js
and
shl
test
aaa
xchg
pop
xchg
jle
dec
jmp
aas
inc
add
iret
add
cdq
gs
push
push
adc
lds
cwde
fs
cld
int
movs
mov
push
ja
add
inc
ret
aad
sbb
pop
shl
dec
jno
(bad)
cmp
mov
pop
movs
sbb
repnz
xor
xor
(bad)
mov
and
jmp
loopne
mov
fiadd
mov
jnp
mov
inc
cmp
pop
mov
mov
xor
jnp
mov
int
imul
jo
cli
retf
jmp
call
jmp
ds
ds
fdiv
cdq
pop
movs
or
mov
lods
jp
(bad)
fistp
jge
xchg
push
imul
dec
dec
pushf
(bad)
mov
les
imul
xor
sbb
es
push
adc
int3
fwait
adc
xchg
xchg
les
pop
add
pop
je
jg
je
mov
stos
mov
mov
mov
ins
sbb
cmp
mov
mov
aad
jns
ror
popf
pop
add
clc
push
pop
scas
adc
ins
cli
mov
(bad)
adc
in
xor
xor
lock
add
jmp
lock
push
leave
test
les
push
adc
push
stos
or
jo
jnp
leave
clc
xor
jmp
icebp
imul
mov
out
addr16
jecxz
leave
stc
cmp
in
in
jbe
popa
icebp
xor
push
fcomp
sar
ret
jmp
(bad)
sbb
xor
data16
sbb
int3
fimul
sbb
les
int
sub
jp
arpl
cmp
dec
std
sti
pushf
adc
mov
aad
fwait
inc
pop
dec
pop
fwait
cld
jae
or
pushf
push
std
xor
sub
xchg
jl
dec
into
loop
push
jmp
mov
cmp
pop
dec
idiv
movs
ss
int3
jmp
pop
pop
icebp
cmps
cmp
mov
test
mov
dec
nop
ins
cmp
jae
ret
inc
mov
mov
xchg
pop
ja
push
in
rol
xchg
xchg
push
leave
and
lea
mov
(bad)
stc
mov
(bad)
imul
dec
shl
outs
mov
mov
ret
shl
jp
sbb
fdivr
sub
int
cwde
xor
xchg
pop
cli
fwait
pop
idiv
int3
(bad)
dec
mov
movs
addr16
ror
(bad)
sahf
in
pop
adc
mov
imul
inc
or
in
daa
xlat
cmc
dec
add
mov
jge
mov
sub
ja
mov
cmp
imul
xchg
jecxz
xor
jp
xor
jl
push
out
sbb
retf
add
add
js
and
mov
ret
adc
fisubr
fldenv
fdiv
adc
mov
push
leave
mov
shl
(bad)
push
add
outs
mov
sbb
cmps
pop
test
loopne
add
scas
inc
jbe
stc
push
pop
xchg
hlt
scas
push
rcl
sub
out
aad
pop
pushf
or
add
add
ins
sbb
mov
add
pushf
push
dec
or
je
arpl
call
mov
neg
fdivr
sbb
nop
adc
data16
or
dec
(bad)
outs
adc
ins
inc
mov
dec
je
icebp
out
fiadd
pop
pushf
push
mov
cwde
je
jns
adc
adc
xor
push
push
push
mov
stc
fst
or
xchg
dec
pop
xor
add
pop
jnp
dec
jns
movs
mov
outs
retf
pop
inc
sbb
push
xchg
jle
cmp
and
dec
movs
mov
dec
and
dec
push
popf
xchg
push
test
fs
pop
mov
mov
(bad)
in
and
sti
adc
in
mov
aaa
mov
sbb
push
out
dec
push
fsubr
int3
cmp
mov
fbld
push
je
mov
out
(bad)
push
xchg
add
loope
jae
xchg
sbb
sahf
mov
leave
mov
add
adc
cmc
push
lahf
clc
mul
outs
imul
push
cwde
ret
aas
aas
not
mov
xchg
rcl
jmp
outs
out
pop
test
push
and
and
lods
push
dec
mov
(bad)
push
retf
data16
mov
dec
sub
repnz
inc
inc
cdq
push
jmp
loopne
xchg
lods
popf
lahf
jg
mov
mov
dec
xchg
inc
lods
adc
outs
pop
nop
adc
dec
in
pop
loop
test
(bad)
fnstcw
(bad)
jbe
sti
xor
out
adc
xchg
retf
xor
cdq
in
ficomp
mov
ds
push
xor
das
mov
pop
retf
add
mov
pushf
es
dec
sub
daa
cmps
mov
mov
cmc
jmp
retf
dec
repz
dec
dec
(bad)
mov
addr16
(bad)
jae
inc
adc
mov
jo
jmp
icebp
out
fsubr
lahf
dec
sahf
push
sub
leave
sar
scas
imul
aas
mov
dec
aad
repnz
jbe
icebp
pop
adc
mov
and
jmp
idiv
movs
xchg
or
mov
js
xchg
dec
stc
fisttp
hlt
push
mov
test
mov
leave
or
sbb
and
mov
(bad)
(bad)
add
xchg
pop
jl
je
int3
add
mov
adc
ffree
test
mov
pop
jge
data16
out
push
cld
sub
sbb
adc
adc
add
and
and
fst
xchg
jecxz
ja
dec
or
cld
inc
hlt
loopne
scas
repnz
in
sbb
repz
lea
mov
jl
das
hlt
imul
popf
cmp
pop
pop
(bad)
inc
inc
inc
mov
xchg
pop
dec
jne
or
aaa
xor
sbb
jbe
or
inc
loop
repnz
out
outs
aam
push
(bad)
in
data16
daa
rcl
and
aas
sbb
cli
add
cli
jecxz
or
call
outs
jnp
ins
lods
pop
(bad)
imul
sti
sub
mov
cs
rcr
xchg
pop
movs
push
xchg
jnp
ins
sub
outs
bound
inc
sbb
loope
(bad)
cli
clc
sbb
push
cli
retf
shl
mov
leave
jmp
mov
imul
jmp
bnd
push
(bad)
push
cmp
ja
lock
xchg
xor
push
push
adc
pop
ins
jno
push
scas
out
sbb
mov
imul
sbb
or
hlt
repz
xchg
gs
stos
out
mov
add
mov
xchg
js
jo
ins
pushf
mov
cwde
and
stc
push
push
cmp
push
adc
pop
test
fsub
js
sbb
cmp
movs
xlat
pop
clc
call
imul
or
pushf
(bad)
xrelease
sbb
scas
imul
add
pushf
(bad)
aas
sub
xor
cld
sahf
jne
jne
sub
scas
cwde
aas
hlt
add
outs
mov
shl
mov
push
(bad)
sub
ret
enter
jge
fsin
jmp
add
not
cmps
fisubr
mov
xchg
das
mov
in
jno
ret
fcomp
mov
ret
mov
and
sbb
push
jmp
cmp
arpl
fisttp
jns
rcl
lods
(bad)
lock
(bad)
adc
jmp
push
movs
or
test
pop
cmp
or
aam
cmp
jle
inc
jb
repnz
jge
vmulsd
bound
lods
test
stos
adc
aas
mov
cmp
pop
add
outs
lock
xchg
cmp
aad
ror
sar
data16
jo
fwait
inc
loopne
pushf
call
inc
add
xchg
dec
fcmove
adc
pop
mov
jo
pop
f2xm1
sbb
push
fwait
dec
loope
adc
sub
or
cmp
inc
in
dec
clc
pop
dec
ss
push
imul
adc
push
rcl
sbb
or
scas
outs
leave
dec
into
or
ss
inc
add
repnz
repnz
xchg
cmp
lock
(bad)
arpl
shl
fwait
into
fdiv
ror
dec
inc
test
sub
dec
xchg
or
dec
loop
and
data16
pop
pop
stc
cmps
jge
mov
jp
fmul
out
sar
push
mov
adc
fnstenv
aas
aaa
cmp
or
loopne
popf
test
cdq
push
sbb
sti
int
push
push
dec
fsubr
fidivr
shl
test
jae
(bad)
fdiv
iret
rol
sbb
loopne
test
dec
test
dec
sub
or
daa
add
mov
push
pusha
(bad)
test
mov
sub
or
mov
je
rcl
movs
and
loope
sbb
loope
xlat
jge
lock
dec
push
and
inc
cmp
push
int3
sbb
or
sti
sbb
mov
cli
iret
jno
mov
ja
pop
add
add
mov
ret
jne
jmp
(bad)
shl
pop
shl
add
cmpps
lods
sbb
cmp
or
mov
fst
daa
jo
loopne
mov
in
iret
xor
xchg
pop
cld
push
push
sub
test
je
pusha
inc
dec
pop
dec
inc
adc
xor
aaa
adc
hlt
adc
mov
mov
(bad)
mov
cmp
mov
push
mov
dec
stos
fbld
mov
pop
(bad)
loope
rol
or
xchg
mov
cmc
and
sbb
inc
xchg
stos
push
dec
ret
push
adc
std
clc
xor
int3
push
mov
retf
mov
movs
jne
jne
mov
fdivr
add
mov
clc
(bad)
shr
add
je
arpl
fsub
cmc
sti
and
stc
mov
mov
adc
jmp
mov
add
out
ret
mov
les
sub
adc
jae
inc
ins
ds
xchg
xor
and
jbe
les
loop
jmp
adc
fisub
jo
pop
leave
xor
push
xchg
mov
ins
in
mov
addr16
cmp
loop
pop
clc
push
jp
sbb
fadd
pop
mov
and
ds
or
dec
arpl
sub
pop
or
imul
mov
xchg
xor
repz
or
adc
ficom
movs
push
clc
mov
jmp
xchg
or
neg
hlt
in
daa
xchg
jg
pop
jmp
stc
adc
fiadd
pop
xchg
mov
lahf
repz
sahf
xchg
mov
add
in
imul
mov
cmp
and
int
mov
add
lods
pushf
(bad)
ror
rcl
add
fst
mov
mov
loop
shr
xor
and
lock
mov
jp
sbb
push
jecxz
mov
sub
sub
mov
add
xchg
pop
mov
sub
lock
mov
inc
lea
pop
mov
sub
mov
push
xchg
mov
sub
dec
fiadd
out
pop
jp
out
ret
leave
sub
sbb
xchg
sub
add
outs
loop
mov
jge
mov
movs
cmp
outs
ds
add
xchg
jb
jg
jg
jmp
mov
or
(bad)
into
add
call
or
std
enter
and
push
mov
shl
hlt
mov
pushf
int
cwde
je
shl
xchg
repnz
cmps
sub
mov
xchg
cmps
pop
cli
mov
in
or
mov
fstp
fild
ds
cmp
and
add
fsubr
adc
mov
cld
(bad)
iret
pop
mov
test
jmp
aam
rol
inc
mov
push
and
jmp
jno
enter
fcomp
fldenv
sub
mov
popa
mov
fstp
pop
pop
ss
cmps
stos
dec
add
push
cmc
rcl
cmp
movs
pop
fmul
dec
cdq
push
mov
and
sahf
xor
inc
xchg
dec
push
mov
add
out
add
xor
adc
and
add
pop
adc
pop
mov
add
cmp
sbb
icebp
inc
dec
adc
imul
or
cdq
into
in
add
scas
cmp
push
scas
pop
or
out
stos
mov
dec
out
mov
ret
sub
adc
inc
cmp
out
retf
xchg
pop
jge
sbb
das
dec
cdq
pusha
inc
push
(bad)
call
inc
nop
jnp
pop
cmp
dec
sahf
pushf
popa
mov
sub
push
or
sub
jno
and
sti
retf
pop
in
aas
lahf
xor
jmp
call
jno
dec
add
mov
cli
or
iret
(bad)
cli
retf
shl
and
in
and
jmp
sub
dec
(bad)
pop
test
mov
enter
pop
xor
xor
es
dec
push
inc
mov
xchg
pushf
outs
stc
into
push
jns
stc
(bad)
jle
push
xor
arpl
shr
dec
enter
dec
inc
mov
into
loop
sbb
push
add
or
stos
mov
fcomp
lods
mov
out
jno
lods
loop
mov
lods
pop
test
loop
(bad)
and
(bad)
enter
mov
bound
test
xor
jne
sahf
sbb
mov
pop
outs
hlt
lahf
enter
cmc
mov
ficom
and
sub
(bad)
and
pop
fnstcw
pop
inc
xchg
inc
jae
or
add
test
cwde
sbb
xlat
lea
jmp
aaa
inc
mov
xchg
jb
sbb
hlt
loopne
arpl
xor
cmc
sbb
or
xlat
retf
in
sar
jmp
fld
mov
mov
lock
jne
sbb
jg
and
inc
sub
adc
(bad)
test
or
(bad)
jbe
rcl
and
imul
out
ficom
cmp
mov
sub
ficomp
dec
xor
jb
inc
psubd
sbb
adc
push
test
adc
out
push
maxps
push
ror
xchg
xchg
aas
sbb
mov
cdq
pop
sbb
inc
pop
jmp
xor
add
sub
ret
add
mov
in
popa
lds
sbb
sub
push
jo
lahf
int
adc
ss
out
bound
fs
ins
inc
movs
add
mov
js
dec
test
ja
push
scas
stos
pop
les
retf
mov
and
stos
ins
fs
push
retf
(bad)
test
enter
clc
ffree
lods
retf
imul
pop
retf
cwde
mov
push
xchg
mov
xchg
iret
leave
mov
in
gs
mov
aam
outs
mov
int3
adc
retf
dec
in
nop
and
std
clc
mov
or
movs
mov
stos
xchg
push
jle
adc
sub
xchg
nop
inc
jmp
into
jnp
neg
ss
sub
jmp
pushf
adc
(bad)
scas
jb
in
mov
mov
rol
data16
mov
mov
jns
push
clc
sbb
clc
lock
pop
jmp
out
cli
push
inc
call
jp
fcomp
jecxz
push
dec
pop
add
mov
aaa
mov
call
hlt
inc
vpunpcklqdq
inc
ret
push
ja
sub
cmp
stos
adc
or
outs
mov
out
push
pop
dec
stc
add
outs
imul
or
shl
popf
add
sub
int3
mov
(bad)
xchg
ins
xor
dec
push
es
mov
repz
push
std
and
outs
loope
aas
sbb
push
mov
jne
sub
mov
xlat
fiadd
sbb
jl
push
stos
movs
push
xor
adc
mov
idiv
push
sub
mov
popa
jbe
jmp
fstp
xchg
sub
ds
in
or
cmps
dec
frstor
addr16
mov
push
sbb
pop
fst
in
push
clc
and
repnz
and
sbb
pop
sbb
arpl
sub
xor
sub
dec
mov
cld
push
inc
clc
xchg
(bad)
xchg
out
popa
adc
out
push
or
xor
clc
push
retf
adc
aam
pop
push
(bad)
pop
pop
cmps
jecxz
(bad)
fs
and
pop
mov
es
jnp
push
(bad)
(bad)
cld
sbb
inc
sar
fdiv
mov
cdq
enter
push
out
xor
push
rcl
mov
jge
mov
xor
movs
pop
push
mov
dec
lds
cmp
retf
mov
mov
imul
pop
sub
inc
dec
push
adc
jb
pop
pop
(bad)
retf
sub
xchg
fisub
xor
and
xor
js
cdq
out
cli
(bad)
lods
(bad)
cmp
(bad)
fisubr
and
sbb
cmp
or
jae
data16
and
xchg
loopne
rcl
leave
push
aam
aas
push
or
mov
xchg
sahf
adc
inc
xchg
mov
bound
mov
popa
enter
popf
add
dec
fmulp
add
adc
mov
jge
cwde
shr
and
sbb
adc
sti
aad
xchg
mov
xlat
shl
xor
outs
xchg
add
mov
ja
xchg
test
push
dec
pusha
xchg
fstp
scas
jnp
test
pushf
ret
inc
sbb
das
lock
push
loope
fisubr
push
pop
xchg
or
(bad)
adc
sub
xor
iret
je
inc
xor
add
or
and
dec
enter
lods
hlt
xor
fst
and
ret
hlt
icebp
or
pop
and
add
test
(bad)
das
mov
adc
inc
jmp
inc
call
aaa
lock
dec
adc
fadd
out
ror
loop
lds
add
hlt
aam
(bad)
mov
mov
imul
lods
mov
mov
popf
cs
ret
and
sti
popa
out
xchg
cld
xchg
fld
ins
jecxz
mov
fsub
push
push
adc
and
shr
outs
std
pushf
xor
or
jmp
pop
pop
cmps
out
or
pop
adc
or
cld
jns
cld
enter
adc
adc
dec
xchg
(bad)
sub
clc
outs
loope
aas
xor
(bad)
in
fadd
out
test
icebp
movs
imul
fiadd
scas
or
dec
mov
xchg
addr16
icebp
retf
dec
jg
fnsave
dec
xchg
sbb
xor
push
jb
dec
sbb
cmp
out
sub
out
(bad)
enter
les
inc
gs
imul
call
in
jb
out
adc
add
fld
(bad)
fidivr
sbb
ins
adc
jecxz
fdiv
adc
adc
xor
push
push
pop
call
adc
inc
loopne
aaa
(bad)
fwait
(bad)
sbb
fdivr
rcl
(bad)
xchg
stc
adc
sub
xor
jl
jbe
add
pop
adc
xor
inc
ror
push
jb
bound
jl
xchg
cs
cmp
ins
ss
aad
pushf
mov
add
js
xchg
daa
repz
push
ror
mov
mov
mov
data16
retf
fidiv
xchg
pusha
sub
jno
inc
pop
fs
fistp
sbb
adc
and
pusha
dec
mov
inc
sahf
repnz
in
imul
sbb
mov
cs
jne
or
adc
in
sub
sub
scas
(bad)
mov
mov
xchg
ins
jp
retf
(bad)
movs
pushf
cli
pusha
cdq
repz
int
mov
gs
push
addr16
stc
jle
pop
jns
push
cmps
fadd
cwde
mov
stos
xor
mov
popa
scas
add
mov
ds
mov
fsubp
(bad)
in
push
rcr
scas
ss
xor
cmc
jp
push
es
sbb
dec
cld
mov
test
push
jecxz
push
push
xor
and
dec
lds
inc
mov
push
add
lea
int
and
pop
dec
jmp
inc
shr
pop
outs
ficom
mul
test
les
or
jne
ret
mov
out
mov
pop
outs
sti
in
lods
adc
inc
fisub
inc
adc
add
popf
mov
mov
jmp
arpl
jns
hlt
and
inc
popf
or
je
das
ds
imul
stos
cmp
pop
cmp
cmps
daa
out
xor
adc
rcl
cmp
inc
jb
and
mov
lock
push
mov
mov
inc
adc
xchg
push
mov
or
pop
xor
ins
mov
rcr
mov
lock
aad
xor
pop
gs
loope
xchg
push
sub
xor
jp
mov
dec
jge
in
sahf
lods
aad
ret
jg
mov
in
outs
cmc
push
mov
mov
add
shr
(bad)
cmps
xor
add
(bad)
(bad)
mov
jle
xor
xchg
es
mov
and
add
or
imul
pop
sbb
jne
icebp
cdq
fwait
inc
sub
icebp
fdivp
int
xor
pusha
imul
rol
dec
lea
jnp
(bad)
fdivp
mov
ins
aaa
cmp
add
fldcw
int
ffreep
es
cwde
push
mov
loop
mov
aam
and
cmp
scas
pop
xchg
adc
in
cmps
lds
push
repnz
dec
jne
push
mov
adc
and
mov
mov
add
jecxz
sbb
fdiv
cld
push
mov
bound
mov
cld
cmp
mov
ret
lods
iret
pop
sub
lds
xor
loope
loope
mov
cmp
les
fnstsw
mov
adc
sbb
mov
jmp
mov
leave
jnp
rcr
inc
clc
push
fdivr
add
imul
shr
sbb
outs
dec
pushf
push
ret
retf
adc
and
cmp
das
scas
xchg
hlt
iret
jae
pop
dec
xor
mov
push
sahf
aas
test
xchg
fnstcw
cmp
ja
mov
neg
jle
mov
jmp
jns
xchg
cwde
adc
or
push
xor
jno
xchg
jae
outs
ds
dec
(bad)
dec
retf
add
push
aaa
loop
mov
xor
cdq
adc
xchg
iret
push
fwait
jp
add
pusha
jl
(bad)
push
inc
mov
and
jle
jmp
loope
aad
rol
mov
xor
pause
sbb
in
cmp
and
mov
pop
jns
jmp
in
mov
mov
cwde
mov
push
mov
inc
rol
fisubr
inc
lahf
xor
ss
ret
stos
ret
add
movs
mov
cwde
movs
push
aaa
mov
inc
cmp
icebp
jp
jecxz
js
out
push
mov
sub
aam
je
dec
jge
xor
adc
loop
jp
gs
nop
mov
jge
daa
pop
in
enter
(bad)
(bad)
mov
addr16
rcl
jo
fdivr
stos
cmp
ss
fild
push
jmp
idiv
sbb
mov
into
jne
cmp
push
stos
out
mov
outs
(bad)
mov
test
pop
or
test
xlat
imul
gs
inc
rol
aad
mov
outs
pop
mov
jmp
pop
out
jge
jle
push
dec
movs
dec
out
mov
dec
test
in
xlat
out
shl
jbe
std
retf
jl
xchg
jns
mov
mov
xor
gs
xchg
mov
(bad)
fnstcw
loopne
call
into
add
stos
mov
push
int3
pop
test
cld
inc
jecxz
cmp
mov
idiv
push
clc
icebp
sbb
and
add
in
dec
jo
jg
sbb
in
mov
in
fadd
fwait
clc
daa
inc
outs
or
leave
movs
into
and
or
xor
adc
cdq
ja
lds
mov
test
push
mov
mov
ins
mov
and
(bad)
cli
or
and
inc
push
je
ficomp
jne
je
dec
sbb
leave
pop
pop
pop
or
popa
fnstenv
js
push
mov
sub
dec
fwait
shr
ds
push
ins
xchg
mov
xchg
pop
jno
inc
rcr
and
jo
cmc
or
movs
and
mov
cmp
jns
ins
jmp
cmp
xor
pushf
push
xchg
dec
cvtps2pi
and
inc
sub
jae
mov
aaa
test
push
cmp
jo
mov
mov
sub
mov
sbb
gs
cmp
mov
push
inc
call
mov
xchg
dec
scas
loopne
mov
xor
call
fwait
adc
mov
scas
sbb
mov
xor
(bad)
adc
lds
aaa
stos
xchg
pop
jns
jmp
jge
adc
xlat
add
loopne
or
pop
fld
dec
mov
cld
mul
popa
adc
jl
fwait
mov
cs
and
in
xor
into
mov
repz
test
lea
cmp
adc
jns
and
jg
outs
repz
cmp
test
pop
imul
xchg
jnp
mov
cwde
cmc
and
jno
ja
in
adc
retf
pushf
loopne
cmp
vhsubps
je
xchg
xor
and
or
sar
jg
sahf
dec
ror
add
add
clc
imul
stos
aam
mov
ja
jg
mov
mov
imul
push
push
ret
stos
adc
or
popa
popf
cdq
cs
fst
stc
pop
mov
pop
sbb
stos
mov
jno
mov
jmp
arpl
sbb
jno
pushf
adc
in
pop
dec
jno
stos
sti
std
cmp
pop
mov
adc
lea
in
dec
mov
mov
or
imul
push
sbb
repz
cmp
(bad)
jne
shr
jmp
sub
fistp
cs
xchg
ins
mov
add
mov
fsub
cmp
dec
adc
leave
addr16
and
movs
lds
loope
xor
sub
aam
jnp
call
lock
sub
in
xchg
test
rcl
(bad)
dec
xchg
out
adc
call
and
pop
jge
rcr
or
ss
jl
pop
mov
(bad)
mov
or
stos
loope
inc
rcr
push
jmp
cs
sub
in
repz
mov
fst
xor
mov
mov
pop
sub
lds
or
cwde
sbb
jno
js
cmc
or
les
xchg
jp
bound
fisubr
daa
shr
mov
repnz
call
push
fcomp
xor
imul
mov
xchg
(bad)
jbe
push
lock
or
add
pop
scas
mov
pushf
sbb
and
mov
sub
and
in
cmp
addr16
aam
movs
xchg
movs
das
mov
mov
mov
inc
or
cmp
mov
push
push
shl
cmps
add
(bad)
shl
pop
ins
and
fs
cmp
and
imul
into
int3
inc
or
mov
fdiv
test
movs
cwde
jg
push
lock
sbb
ins
and
pop
hlt
fwait
mov
jns
repz
push
xor
or
dec
cwde
cmps
dec
xchg
lock
xchg
cmp
adc
addr16
xor
fmul
out
(bad)
shr
retf
fcomp
mov
and
push
add
mov
pop
cld
pop
test
xor
lea
or
xor
fdiv
imul
mov
(bad)
cdq
inc
mov
(bad)
push
xchg
aaa
in
push
and
stc
adc
jns
fdiv
mov
cmp
fistp
push
mov
push
pop
cld
xlat
xchg
retf
dec
pop
sti
adc
adc
ror
outs
fiadd
imul
sbb
mov
lds
cmp
hlt
call
mov
loop
add
test
ja
idiv
sbb
cmp
mov
mov
jp
psllw
inc
aad
outs
inc
mov
cmc
ins
sbb
xchg
shl
outs
dec
mov
push
mov
cmp
out
(bad)
mov
sbb
xor
cmp
cmp
arpl
xchg
cmovne
and
inc
sub
or
arpl
daa
imul
imul
sub
retf
not
mov
jne
push
xor
push
(bad)
loopne
sbb
add
sbb
jb
mov
jne
(bad)
dec
pop
adc
mov
adc
xchg
cmp
adc
daa
daa
cld
push
sbb
or
or
mov
(bad)
aad
out
js
adc
add
inc
leave
jmp
jg
outs
fsub
sbb
pushf
inc
rcl
and
jno
inc
into
mov
cli
loop
mov
test
test
pop
cmp
cwde
add
enter
inc
les
or
mov
add
push
xchg
xor
cmp
cmps
fstp
inc
sbb
outs
(bad)
int3
jnp
mov
das
cmp
cli
not
push
aam
push
rcr
add
adc
sbb
mov
mov
loope
int3
adc
mov
lods
pop
push
xor
mov
or
(bad)
push
aas
adc
dec
and
cmp
scas
das
cmp
jns
jb
jg
sbb
clc
fbld
sub
loope
pop
push
jno
sub
adc
inc
dec
add
pop
push
push
outs
lds
xor
xchg
jle
sti
adc
mov
test
sbb
cmp
mov
popf
add
xor
push
movs
mov
fist
adc
add
xor
movs
sub
add
pop
xlat
loop
mov
mov
mov
test
pop
nop
test
popf
imul
sbb
inc
xor
and
pop
xchg
test
mov
cmp
cwde
sub
ins
and
mov
lea
lods
out
out
in
daa
int
jge
ja
jl
in
sub
and
or
ret
xchg
push
fwait
div
icebp
inc
(bad)
fdivr
cmp
dec
jbe
js
sbb
cmps
pop
inc
sbb
out
lea
arpl
xchg
sbb
outs
mov
dec
and
push
ds
mov
mov
cdq
inc
fs
pop
aas
sbb
lds
pop
mov
push
mov
out
jns
inc
gs
mov
test
adc
sub
sub
pop
push
shr
sub
(bad)
sub
mov
inc
shr
mov
sub
call
adc
jbe
cmp
pushf
call
cmps
xor
dec
jne
aas
jg
(bad)
inc
mov
es
cld
push
cmp
push
sbb
push
sbb
loopne
mov
xor
popa
dec
or
pushf
push
xor
(bad)
rcr
inc
iret
fst
push
adc
adc
cdq
in
imul
outs
push
cli
xlat
movs
mov
xchg
push
xchg
sub
loopne
xchg
push
dec
inc
sahf
movs
dec
sbb
mov
and
rcl
adc
int
add
test
adc
and
test
aaa
mov
and
jmp
div
xchg
sbb
es
pop
inc
loop
mov
cs
rcr
sbb
xor
sub
xor
pop
nop
sbb
dec
adc
dec
test
xchg
data16
psubsw
jp
mov
sbb
xchg
je
sub
pop
push
xor
in
pop
sbb
pop
aam
xchg
inc
cmp
(bad)
jo
jecxz
fcom
jmp
cmp
scas
ins
or
in
outs
stc
ja
sbb
lods
int
mov
mov
imul
inc
sbb
jae
ja
shr
dec
inc
inc
jns
cmps
gs
fwait
jne
es
(bad)
cli
sub
push
and
aas
test
lahf
mov
pushf
lods
ins
sub
aad
adc
or
movs
clc
fiadd
mov
je
fldenv
sub
fimul
nop
fst
xchg
test
scas
shr
sub
cmp
add
out
and
pop
enter
jo
mov
xchg
fcomp
mov
adc
movs
scas
je
addr16
and
pop
outs
push
call
nop
fild
mov
jecxz
leave
sbb
enter
aad
lods
inc
(bad)
fadd
fmulp
jle
iret
cmp
push
inc
jmp
hlt
fld
js
call
(bad)
jno
pop
pop
dec
(bad)
adc
cld
push
out
adc
stos
adc
jno
(bad)
fcmovnbe
stc
mov
mov
cmc
jmp
int
mov
int
sub
(bad)
shl
push
mov
imul
add
ss
fmul
ret
(bad)
enter
jge
add
(bad)
das
icebp
ja
test
es
lahf
mov
xchg
js
xchg
(bad)
jl
xchg
in
mov
imul
fldcw
imul
cmp
mov
xor
pop
mov
jb
mov
cmp
loope
add
and
cwde
dec
shr
out
jns
xlat
ins
inc
std
push
adc
push
adc
pusha
hlt
cmp
cmps
stc
aad
pop
pop
sahf
jecxz
add
stos
xchg
cmp
addr16
add
nop
mov
mov
push
cs
and
mov
push
sahf
mov
or
mov
shr
sbb
test
jne
mov
add
jmp
inc
adc
fist
aam
mov
stos
jmp
out
or
add
jno
and
test
call
adc
shr
iret
das
xchg
pop
xchg
clc
ds
xchg
outs
mov
and
push
sbb
pop
pusha
loopne
xor
lahf
stos
aad
cmp
loopne
mov
jecxz
add
xchg
inc
stc
xlat
daa
add
in
inc
in
mov
fmul
push
repnz
sar
push
cmp
mov
push
dec
mov
outs
adc
nop
pop
popa
add
jp
sti
aad
enter
mov
outs
ror
mov
ficom
ja
mov
and
mov
scas
and
cmp
adc
enter
leave
push
pop
mov
adc
jno
ret
xor
adc
aas
pop
(bad)
mov
out
or
pop
in
dec
push
pop
lea
loop
or
sbb
push
lods
dec
mov
and
jb
add
and
test
mov
adc
or
xor
jge
adc
inc
add
or
loop
push
cmp
pop
std
into
(bad)
pop
call
mov
ror
out
mov
mov
jp
and
imul
add
mov
in
test
xor
pop
and
inc
mov
push
lock
push
lahf
pop
mov
inc
ret
sub
and
pop
movs
adc
enter
rcr
data16
ins
enter
mov
jmp
into
mov
movs
add
mov
in
ror
test
mov
imul
fild
cmps
adc
cld
jge
dec
jp
add
mov
push
(bad)
in
sahf
je
lods
push
xchg
test
and
or
push
xor
push
hlt
mov
jo
addr16
dec
fisttp
movs
or
sbb
lods
fiadd
loopne
pop
fldl2e
mov
ret
int
cmp
push
or
add
sti
cdq
jecxz
lds
leave
pusha
mov
mov
mov
ss
mov
jns
les
cmp
dec
cmp
cmps
adc
jnp
mov
xor
sbb
push
xchg
out
imul
dec
in
fadd
push
push
lahf
pop
sysret
pop
inc
jl
in
push
(bad)
jne
les
scas
sub
addr16
cs
pushf
and
lea
sbb
aas
mov
lods
fisttp
pop
std
push
push
jo
sub
add
jle
add
repz
test
push
outs
adc
xchg
call
loopne
scas
(bad)
mov
adc
stc
adc
dec
loope
ins
inc
mov
imul
and
xor
ret
mov
jb
in
add
popf
into
mov
daa
aas
mov
xlat
and
adc
int
(bad)
rcl
out
sub
out
out
mov
mov
dec
push
jmp
call
adc
sti
cmp
cwde
pop
cmps
push
out
jmp
fist
xchg
and
inc
mov
fdivr
cwde
push
jno
clc
aad
gs
out
sub
fwait
or
adc
dec
xor
imul
pushw
push
cs
push
mov
or
pop
mov
popa
dec
xchg
dec
mov
mov
rcr
out
mov
popa
aad
mov
mov
leave
add
jmp
push
mov
mov
mov
sub
mov
cmp
test
imul
(bad)
pop
add
xchg
sub
clc
hlt
iret
test
sbb
(bad)
sub
(bad)
fistp
(bad)
push
push
or
ins
in
push
(bad)
cmpxchg
inc
ins
pop
mov
cld
mov
xor
dec
jmp
adc
jno
and
mov
psubsb
mov
inc
mov
xchg
push
jl
cmp
push
cmp
xchg
mov
add
test
loope
ins
pop
dec
adc
and
ficom
enter
mov
pop
sub
xchg
out
std
cdq
sub
das
js
adc
cmp
or
mov
mov
int
test
jle
in
outs
xor
mov
cli
cmp
inc
bswap
xchg
cs
test
loopne
and
sub
sti
sub
ret
popa
test
jle
mov
ror
ins
cmp
mov
mov
inc
jmp
test
mov
pop
pop
sub
mov
mov
push
push
call
or
(bad)
sbb
mov
push
dec
xor
add
mov
les
scas
cdq
mov
mov
mov
stos
pop
push
cld
xchg
cmp
jno
push
pop
jmp
cmc
cmp
mov
cmps
ret
repnz
sbb
push
xor
dec
nop
mov
cld
jle
push
ror
out
xchg
and
cwde
xchg
sahf
add
imul
mov
cmp
xlat
push
push
pop
ins
ret
mov
cld
inc
pop
cmp
sub
push
cmc
adc
rol
sti
sub
mov
ficomp
in
cs
lods
fwait
mov
leave
jmp
cmc
sti
(bad)
out
inc
sbb
cmp
push
xor
std
out
adc
xchg
xchg
shl
(bad)
xchg
mov
inc
call
sbb
call
adc
sahf
stos
dec
icebp
int
test
or
push
mov
pop
movs
adc
inc
shr
cdq
outs
cmp
out
xchg
fild
jmp
(bad)
mov
mov
icebp
sahf
inc
fnstenv
add
je
jnp
sub
std
js
fild
repz
(bad)
push
out
and
mov
nop
cmc
sub
ins
call
sub
not
mov
in
int3
lahf
xor
(bad)
ins
sub
dec
jecxz
xlat
loop
call
nop
adc
shl
shl
sbb
ror
adc
rcr
test
mov
mov
ss
jmp
inc
cmp
sbb
sub
not
xchg
and
xchg
mov
pop
push
jno
xor
daa
mov
sbb
xlat
mov
dec
or
ja
inc
outs
cmp
push
dec
ins
mov
dec
movs
jns
mov
pop
cwde
xchg
mov
inc
or
xor
retf
sub
cld
fcmovnb
cmp
push
jmp
pop
mov
push
mov
shr
es
and
xchg
push
push
cmps
adc
jecxz
int3
and
cmp
or
xlat
addr16
je
cmp
outs
sbb
nop
jo
dec
in
push
push
dec
out
push
cmp
push
push
push
outs
rcl
or
xchg
inc
and
cmp
push
cs
inc
jle
add
sub
sar
pop
imul
or
jle
xlat
stc
mov
pop
push
inc
cmp
rcr
dec
and
das
jnp
push
mov
mov
test
rol
addr16
inc
mov
cmp
pushf
or
ret
bound
out
mov
push
fld
sub
dec
ds
sub
fisttp
pop
sbb
add
push
add
xchg
mov
inc
js
test
les
mov
adc
cdq
xor
lds
sub
and
ins
scas
jecxz
jl
shl
adc
cmp
(bad)
data16
pop
ss
cmp
aam
mov
adc
(bad)
mov
shr
int
das
mov
push
outs
icebp
imul
xchg
add
ins
dec
es
sub
scas
bound
pop
mov
ficomp
sub
xor
shl
inc
mov
mov
ret
or
lea
in
inc
bound
push
retf
test
bound
dec
xchg
scas
push
pushf
psllw
push
jp
and
inc
jp
xor
sub
les
call
cmp
mov
nop
pop
(bad)
mov
loop
sbb
push
sub
mov
jmp
and
test
adc
jmp
mov
mov
push
sub
adc
add
(bad)
std
mov
xchg
and
mov
test
adc
mov
mov
(bad)
mov
lock
pop
inc
loope
mov
mul
push
inc
dec
mov
imul
sub
mov
pop
cmp
push
xor
mov
js
sbb
cld
mov
js
jbe
cmp
les
int3
aam
popf
sub
cmp
cmps
(bad)
rol
ret
mov
xchg
pop
xor
cli
sbb
stos
and
sub
daa
test
push
jl
out
imul
fsubr
sub
arpl
lea
repnz
(bad)
sbb
and
mov
out
mov
adc
shl
rcr
push
dec
fnsave
stc
fnstenv
xor
dec
(bad)
mov
iret
popa
add
add
xchg
in
xchg
xor
sar
ds
jnp
in
out
push
jne
lahf
stos
shl
jle
jp
cmp
push
and
xor
fisttp
add
xor
(bad)
jecxz
gs
in
(bad)
hlt
sub
icebp
cmp
mov
les
add
xor
pop
std
retf
inc
ins
mov
into
mov
add
movs
fidivr
scas
pop
xor
adc
mov
gs
ds
cwde
das
sbb
dec
jns
push
in
jmp
xlat
push
mov
pop
inc
pusha
in
fld
test
out
ret
loope
ficom
fs
test
aam
fcom
or
in
cwde
neg
imul
sbb
stos
fnstenv
movs
push
loop
mov
int3
ja
fs
fld
popf
sar
xor
mov
dec
(bad)
jno
nop
push
(bad)
sub
xchg
cmp
push
nop
aaa
jo
add
clc
push
adc
adc
test
out
out
(bad)
fstp
cmp
lods
pop
mul
xor
lock
in
xor
sar
xor
inc
int3
out
dec
loop
int
(bad)
stos
pop
mov
add
dec
mov
in
loope
mov
inc
jb
je
daa
out
ja
xchg
sbb
sbb
push
sti
jmp
test
sbb
xchg
inc
xchg
test
shl
pop
movs
cmps
test
cmp
cmp
jmp
sub
mov
ja
rcl
cdq
mov
out
lods
loope
mov
jns
not
xchg
rcl
jo
outs
or
adc
push
add
stc
push
jg
push
xor
dec
inc
mov
ins
pop
cmc
sbb
add
outs
movs
add
sub
iret
movs
mov
add
test
adc
out
sub
outs
pop
arpl
ja
sbb
movs
das
iret
or
les
add
jle
pop
retf
cmp
rcr
gs
pushf
pop
sbb
sub
push
pusha
in
fsub
and
cmp
add
xchg
(bad)
(bad)
push
mov
repz
loop
stos
mov
out
mov
lds
ja
sbb
mov
inc
(bad)
or
div
push
adc
sub
jl
leave
shl
mov
push
les
sub
imul
xor
sbb
mov
cmc
push
je
push
in
(bad)
mov
js
repz
ja
mov
mov
enter
mov
push
jmp
cmp
(bad)
jnp
sub
or
xchg
inc
cmp
addr16
div
inc
fstp
ficom
(bad)
(bad)
push
sub
retf
pop
cdq
nop
mov
lea
outs
xchg
inc
push
aaa
scas
shr
cmp
mov
ins
dec
(bad)
jmp
xor
sbb
scas
fwait
push
mov
loope
sahf
xor
add
(bad)
pop
pop
data16
adc
movs
sub
add
and
or
shr
call
or
movs
out
mov
mov
sbb
add
dec
cmps
in
aas
(bad)
or
sti
sub
mov
xchg
push
fmul
aaa
pop
fmul
push
and
xchg
xor
scas
(bad)
jo
sub
sub
repz
lea
cdq
xlat
pop
cmc
rsm
loopne
pop
or
or
call
in
mov
push
fstp
push
retf
adc
dec
pop
iret
daa
loope
and
pop
mov
ins
daa
ret
mov
or
scas
(bad)
xor
rcr
pop
inc
fadd
mov
sbb
je
stc
fild
lds
fldenv
xor
push
daa
int
ror
or
push
dec
aad
and
ficom
mov
hlt
push
mov
or
mov
push
push
bound
lea
xchg
loopne
lahf
syscall
xchg
xor
mov
mov
ins
mov
jns
pop
push
in
and
cmp
cmp
xchg
aad
push
je
push
lock
dec
call
sti
or
fsub
aad
sub
jbe
add
push
cwde
jle
rcl
imul
lods
mov
repnz
pop
mov
add
mov
add
retf
aad
and
repnz
sbb
cld
inc
mov
leave
pop
mov
push
mov
sahf
inc
mov
int
mov
jbe
aam
test
je
jmp
(bad)
sbb
imul
push
or
lods
mov
imul
and
add
sub
aam
push
mov
cld
repnz
out
leave
lock
sbb
fnstenv
mov
jge
clc
xor
lock
test
enter
add
out
test
ins
sar
jmp
addr16
div
loop
add
(bad)
lock
push
movs
lods
xor
pop
xor
test
cli
xor
xor
adc
shl
sbb
jo
addr16
inc
pop
adc
jge
stos
loop
repz
(bad)
xchg
pop
cmp
cmp
xor
imul
push
imul
fwait
(bad)
push
inc
addr16
scas
out
lods
and
push
mov
and
ins
fild
xor
mov
sbb
cmp
mov
stc
mov
cwde
mov
cdq
in
xchg
popf
or
call
xor
cmp
daa
jge
jmp
xchg
sbb
cs
imul
stos
ins
sbb
jns
out
add
mov
in
push
pop
mov
retf
mov
pop
dec
cmp
adc
push
paddusw
sbb
aam
xor
aam
add
icebp
(bad)
mov
std
xor
pop
push
iret
fild
xchg
inc
out
fsubr
addr16
fsub
lea
retf
sbb
fwait
scas
in
shr
(bad)
stos
jb
iret
cwde
or
jge
xorps
sbb
clc
mov
xor
jmp
adc
ret
and
inc
sbb
repz
jbe
jo
aam
adc
ins
ss
out
jl
sub
mov
aas
iret
add
out
mul
mov
adc
pop
mov
jge
xchg
call
popa
popa
push
sub
dec
mov
inc
enter
jecxz
xor
dec
add
sbb
inc
adc
sbb
or
xchg
sub
sbb
aam
jmp
fisttp
loope
push
icebp
(bad)
cs
(bad)
lock
cmp
inc
sbb
dec
ins
push
mov
std
call
pop
les
pop
int
add
not
fcmovbe
in
add
add
or
ds
cld
mov
repz
pop
sub
sbb
pop
ja
xor
or
xlat
cmp
and
or
xor
lds
bound
test
dec
gs
repnz
into
test
inc
adc
in
push
es
ret
jo
sub
mov
pop
fwait
punpckhdq
lahf
xchg
sbb
out
loop
pop
dec
cs
inc
lea
stos
in
leave
inc
into
mov
into
stos
retf
cli
iret
xchg
popa
hlt
daa
push
cmp
push
out
pop
pop
stos
xchg
call
pop
dec
mov
fcom
push
sbb
shr
xlat
into
pop
test
and
cmp
shl
or
rcr
stos
call
mov
dec
test
or
dec
push
(bad)
fxch
xor
not
rol
and
dec
add
div
push
outs
rol
loop
mov
daa
addr16
(bad)
rcl
sub
retf
mov
gs
or
xlat
lds
dec
aad
jecxz
sub
out
(bad)
es
xor
push
mov
std
mov
in
and
adc
call
je
xchg
push
sahf
mov
aad
mov
test
mov
jmp
cwde
sahf
pop
popa
lahf
dec
sti
in
loopne
push
aad
aas
outs
pusha
pop
pop
icebp
in
jge
mov
aas
add
xlat
pop
neg
pop
push
pop
(bad)
or
push
addr16
pop
cmps
xor
into
shr
xchg
imul
or
aaa
ficomp
cmps
xor
mov
scas
mov
je
cmps
aas
mov
repnz
mov
jle
pusha
dec
sbb
gs
das
mov
or
adc
sub
int
stc
addr16
outs
xchg
ins
xor
mov
xlat
les
movs
or
cmp
xchg
imul
in
out
mov
or
jmp
mov
jnp
cli
(bad)
mov
xor
cmp
sub
scas
pop
cmps
add
inc
xchg
ja
mov
jns
push
jne
or
inc
lahf
test
dec
stc
iret
(bad)
fistp
or
jmp
mov
xchg
inc
(bad)
jbe
cwde
push
stos
jns
push
in
mov
mov
ins
mov
into
sbb
movs
xor
bound
data16
xor
mov
jp
xor
pop
retf
fs
fstp
or
imul
mov
xchg
sub
dec
cmp
adc
jl
in
mov
push
or
sub
popa
aam
jo
scas
iret
out
push
adc
stc
pop
and
jp
nop
jle
xor
and
(bad)
or
sub
jae
shr
ror
iret
sub
sub
jae
push
and
mov
jb
dec
xchg
out
gs
scas
mov
dec
jbe
jae
fwait
mov
cmp
pusha
cmp
xchg
mov
or
sub
xor
push
or
mov
push
jae
out
sbb
jg
(bad)
lea
inc
ror
lods
(bad)
and
(bad)
ficom
nop
adc
scas
mov
add
mov
adc
xor
lahf
bound
jae
data16
adc
and
lods
mov
les
das
retfw
inc
dec
xchg
adc
inc
cmp
cmp
leave
jbe
clc
loopne
fnstsw
ins
xor
mov
push
dec
mov
dec
pop
jge
sbb
in
stos
cdq
jne
push
rol
push
push
mov
je
jns
pop
stc
cmp
xchg
mov
jns
dec
push
mov
add
add
mov
cmp
div
pop
jmp
rcr
cmp
add
neg
and
adc
sbb
das
adc
mov
sbb
xor
xchg
in
daa
imul
sar
in
sar
xor
int
cmc
ret
and
inc
dec
adc
mov
imul
daa
pop
dec
mov
push
inc
xchg
mov
rcr
mov
(bad)
sbb
jb
out
popf
fisub
ret
and
rcl
jbe
mov
dec
sahf
pop
xchg
ror
(bad)
xlat
xor
iret
(bad)
or
dec
add
dec
sub
test
jecxz
push
and
mov
cmp
mov
xor
fidiv
jo
cmp
mov
ret
dec
jo
cli
pop
mov
mov
sbb
imul
sub
and
adc
xchg
fld
xor
ret
xchg
out
inc
jle
push
es
xchg
cmp
or
mov
xor
ret
shr
push
pop
mov
mov
xor
pop
push
movs
fucomp
push
stos
outs
xchg
hlt
cwde
adc
push
gs
js
fistp
xchg
pop
cmp
adc
adc
pop
add
push
push
adc
jnp
test
dec
sahf
jle
sub
cld
or
iret
xor
inc
xchg
repz
sub
arpl
ins
enter
es
xchg
aaa
jae
out
cs
push
push
xlat
inc
or
mov
jecxz
and
mov
sub
mov
fldenv
and
(bad)
jmp
and
outs
and
les
jmp
and
arpl
push
or
pop
cli
push
loopne
push
pop
pop
jno
sti
mov
inc
mov
mov
dec
xor
sub
and
push
outs
pop
add
add
pop
push
add
jno
popa
xchg
jno
or
mov
data16
cmp
js
enter
pusha
out
(bad)
fnstsw
push
jmp
xor
out
push
stos
adc
daa
jl
mov
adc
shr
and
mov
(bad)
popa
or
shl
call
rol
push
adc
add
fstcw
inc
jae
inc
test
int3
enter
or
add
in
(bad)
scas
out
pop
jecxz
jne
xchg
add
sar
test
inc
dec
clc
or
outs
mov
addr16
pop
pandn
push
jge
repz
lods
pushf
add
repz
sahf
mov
mov
ins
retf
(bad)
mov
ss
mov
out
nop
xchg
and
pop
or
push
cmp
(bad)
mov
int
mov
call
pop
psubd
shr
mov
xchg
xlat
out
mov
clc
pop
shr
adc
sbb
leave
pop
loopne
xchg
movs
pop
mov
inc
mov
imul
leave
mov
sbb
ds
(bad)
cdq
or
push
adc
xor
push
enter
dec
push
pop
in
inc
in
push
lds
xchg
or
sub
aad
aaa
xor
xor
cmc
cmc
jmp
idiv
mov
push
inc
fwait
not
popa
call
inc
inc
cmp
out
(bad)
hlt
rcl
mov
or
movs
std
and
inc
push
data16
out
inc
xchg
fisubr
in
retf
loope
add
retf
pushf
ret
push
sbb
sbb
in
pop
add
mov
cmp
dec
addr16
inc
loope
xchg
add
call
nop
out
cmovno
xchg
pop
cmp
adc
or
cmp
(bad)
pop
fld
cmps
mov
bound
add
mov
jp
push
movs
mov
jp
fld
cwde
fbld
push
mov
out
popf
push
adc
pop
imul
and
inc
jmp
mov
sub
or
nop
mov
jns
out
imul
sbb
iret
ror
out
mov
pop
or
gs
push
adc
add
and
test
rol
lahf
sbb
fisttp
jmp
jno
mov
loop
pop
fnstsw
repz
cwde
js
stc
fs
repnz
not
aam
rol
sbb
inc
cs
adc
xor
push
cli
mov
adc
scas
movs
pop
mov
mov
add
inc
or
cmc
fimul
test
adc
mov
push
clc
and
mov
enter
pop
data16
icebp
mov
inc
cmove
in
inc
outs
mov
(bad)
push
or
sub
dec
out
add
data16
inc
push
dec
xchg
push
retf
xor
dec
into
in
out
fcmovnbe
inc
in
xor
dec
push
xchg
sbb
cmp
sbb
add
fdivr
ficom
daa
inc
jns
loopne
ror
(bad)
mov
add
arpl
push
xchg
push
jae
inc
(bad)
cmps
fdivr
dec
stos
push
and
arpl
movs
adc
and
push
nop
sbb
or
xor
lods
xchg
jl
push
sahf
cmps
push
mov
in
out
std
xchg
push
jmp
dec
mov
icebp
gs
loopne
data16
test
jle
sub
pop
add
arpl
out
scas
js
and
leave
inc
push
loope
lods
lods
jp
xor
mov
out
lahf
xor
in
cmp
or
dec
xchg
or
xchg
push
xor
dec
push
mov
pop
lods
push
outs
ins
sub
jl
fild
xor
adc
mov
popf
outs
and
call
jmp
(bad)
sbb
mov
cmps
dec
adc
mov
push
add
mov
addr16
outs
jl
dec
fdiv
repz
jecxz
pop
daa
xchg
sti
mov
sub
xchg
push
jne
inc
xor
pop
fstp
jp
cs
pop
out
and
dec
in
and
jae
(bad)
jge
std
rcl
fist
pusha
(bad)
lods
cmp
mov
xor
je
call
aad
jge
ret
adc
popf
retf
lods
dec
add
jg
dec
jae
js
fnstsw
xchg
pop
xchg
enter
jp
popa
xchg
js
mov
ret
fistp
scas
adc
cli
mov
repz
inc
movs
(bad)
leave
sub
pop
(bad)
sub
or
cmp
movs
icebp
xor
mov
jmp
cwde
jo
inc
mov
dec
mov
retf
dec
cli
mov
cmp
sbb
icebp
mov
loopne
dec
mov
lods
aad
sub
pop
sar
add
jbe
neg
(bad)
mov
mov
int
push
add
mov
jecxz
xor
mov
pop
call
or
xor
xchg
and
xchg
mov
pop
out
push
test
pop
mov
ds
xchg
add
jb
pushf
(bad)
dec
jno
dec
cwde
in
in
stos
ret
sbb
sbb
test
inc
push
stos
enter
adc
hlt
push
rcl
inc
xchg
cmp
cmp
(bad)
xchg
mov
(bad)
lods
or
adc
popa
and
sar
xchg
pop
sub
or
jecxz
aam
mov
addr16
inc
mov
arpl
xor
cli
or
mov
push
call
pop
addr16
ss
sar
popa
test
jmp
push
scas
fist
rcr
sahf
xlat
das
in
clc
cdq
xchg
pushf
jae
stos
xchg
push
push
push
(bad)
mov
int3
jmp
dec
icebp
inc
xchg
pop
mov
not
sub
loop
mov
push
aas
xchg
aas
arpl
mov
lahf
fs
sub
add
push
pop
xchg
add
inc
leave
dec
jo
pop
(bad)
out
dec
mov
das
imul
outs
mov
fidiv
jbe
xchg
xchg
pop
psllw
jmp
inc
ja
jle
std
or
pop
in
sbb
cli
popf
cmc
xchg
rol
jge
js
inc
cmp
aaa
jnp
jle
xchg
inc
fcom
mov
fcom
pop
push
dec
jecxz
mov
mov
and
cmp
sub
jae
imul
retf
mov
adc
aaa
sbb
jle
sbb
jne
inc
cmp
cmps
pop
in
das
adc
es
mov
in
and
(bad)
pop
mov
popa
test
sbb
mov
sbb
inc
pop
push
fbstp
adc
and
outs
dec
and
push
dec
movs
sbb
mov
enter
push
cmps
pop
mov
lea
and
inc
into
xchg
xor
ret
lea
xchg
call
or
in
lods
mov
push
data16
(bad)
(bad)
hlt
imul
rcr
xchg
(bad)
test
nop
leave
adc
or
outs
mov
pop
lea
pop
add
or
fadd
dec
aad
mov
mov
imul
mov
sahf
push
pop
push
sub
mov
(bad)
cmps
stos
and
push
js
fnstcw
lods
ret
and
imul
ror
dec
into
shl
cmp
jp
clc
(bad)
sbb
icebp
xchg
inc
scas
and
(bad)
pop
xor
jecxz
add
cmp
and
pop
jg
jno
ja
retf
cs
movhps
sub
stos
push
cmp
idiv
jae
fs
ds
push
add
jb
sbb
mov
fld
test
dec
and
in
jnp
pop
xchg
icebp
jo
jmp
shl
fwait
adc
jno
add
add
mov
or
in
inc
mov
jle
jp
push
jmp
cdq
xchg
in
jle
outs
ret
in
cld
in
or
call
pop
mov
cmc
dec
fisttp
jae
cld
in
popf
(bad)
xchg
mov
test
xchg
hlt
outs
iret
cdq
bound
jmp
cwde
inc
xchg
daa
in
cmp
push
lods
pop
arpl
outs
inc
loope
mov
xor
lods
int3
cmp
cwde
or
push
test
dec
call
sub
adc
add
sahf
mov
in
or
add
out
mov
retf
adc
push
call
mov
inc
(bad)
cwde
cld
xor
or
test
push
loop
cmp
in
sbb
pop
dec
mov
out
jl
push
scas
adc
or
sub
dec
cmp
dec
popa
stc
or
adc
push
ret
mov
sub
stos
xor
rcl
inc
cmp
inc
into
lods
call
cld
and
addr16
dec
cmp
push
cmc
xchg
fcom
ret
addr16
repz
dec
sbb
cwde
lea
stc
in
pop
add
jo
mov
loope
mov
inc
gs
sti
add
mov
mov
scas
jle
out
test
jmp
inc
sbb
inc
push
jae
arpl
pop
mov
jnp
push
jno
push
std
xor
mov
stc
inc
pop
ror
std
movs
fcmovne
mov
xor
ins
or
mov
xor
adc
data16
jmp
cmp
std
sub
mov
mov
mov
sub
jecxz
fidivr
adc
sub
mov
jbe
int3
mov
mov
inc
clc
jo
mov
push
jae
jmp
mov
stc
(bad)
enter
dec
aas
xchg
and
leave
sub
mov
ja
adc
xor
pop
mov
sbb
arpl
pushw
xlat
scas
clc
popf
mov
jmp
adc
push
inc
jno
leave
dec
imul
jecxz
iret
(bad)
cmp
jge
jmp
neg
pusha
add
dec
sbb
gs
add
push
jg
mov
mov
lock
mov
dec
mov
mov
lods
jp
pop
mov
pop
push
push
not
scas
or
xchg
stc
cwde
outs
out
std
je
sbb
pop
call
(bad)
inc
jbe
mov
pop
idiv
mov
xor
call
ds
test
hlt
adc
in
enter
stc
cmp
out
and
pushf
dec
inc
shr
stos
repz
ins
push
adc
cmp
jno
sbb
add
push
cmp
mov
pop
aas
or
sbb
xchg
aam
loopne
mov
inc
out
outs
dec
sbb
stc
push
aaa
xchg
adc
xchg
shl
pop
pop
add
iret
out
inc
lods
jecxz
call
mov
mov
gs
es
mov
gs
and
cmp
add
mov
je
cmp
sub
and
dec
retf
ss
jl
fmul
sahf
stos
in
mov
or
cmc
cld
xor
jmp
inc
sahf
out
mov
das
data16
aam
lods
add
or
test
adc
test
rcr
retf
add
push
cmp
or
xlat
jle
shr
jne
loope
or
fdivr
mov
dec
inc
nop
test
pop
leave
push
lock
dec
mov
lock
sub
aam
rcr
sub
xor
sti
jp
mov
dec
bound
cmp
rol
pop
push
jmp
nop
cdq
(bad)
and
inc
ds
jg
mov
push
nop
inc
(bad)
cld
mov
je
xor
adc
or
jb
ss
(bad)
cmp
mov
cmps
(bad)
fst
adc
fwait
icebp
pop
cmps
dec
cmps
cmp
push
or
dec
lds
xchg
movs
das
dec
pop
(bad)
adc
cmp
sub
xor
ss
mov
sub
pop
xlat
ret
mov
ror
inc
ins
mov
hlt
rcl
and
mov
mov
fld
and
xor
xor
hlt
sbb
cwde
xchg
repz
ror
sub
cmp
int3
jne
test
lea
sbb
loopne
mov
lods
mov
hlt
pop
dec
cmps
retf
and
call
out
fdivr
stc
push
dec
fwait
xor
add
add
stos
add
mov
outs
test
repz
sti
(bad)
(bad)
xor
mov
lahf
xchg
pop
popa
fcmovnu
adc
jae
(bad)
fmul
out
mov
xchg
stos
jl
or
repnz
clts
push
movs
jnp
mov
cmc
int
lahf
ret
fsubr
pop
mov
hlt
sub
lods
call
sub
daa
xor
mov
sub
mov
xor
outs
stos
or
loopne
repz
cmc
or
push
and
cli
pop
imul
inc
mov
pop
xchg
jbe
or
push
xchg
sar
nop
ret
sub
mov
adc
outs
jae
xchg
bound
je
sbb
jb
fsubr
inc
mov
pop
les
jbe
std
mov
out
mov
pop
aaa
inc
fiadd
mov
gs
inc
pop
call
loope
pop
inc
popa
cmp
dec
(bad)
and
xlat
mov
daa
add
mov
aaa
sub
test
jnp
popa
and
adc
inc
sbb
lea
enter
enter
cmp
mov
idiv
inc
sub
push
cmp
cmp
mov
retf
retf
fisub
pop
dec
and
xor
inc
call
push
add
test
dec
pop
mov
inc
shr
outs
inc
pop
jae
gs
push
leave
adc
and
push
xchg
into
inc
outs
sub
in
xchg
add
and
and
xor
(bad)
pop
push
js
jns
or
jo
ins
pop
or
sub
xchg
shl
jne
mov
out
retf
in
cmp
enter
sbb
push
movs
add
cmps
idiv
std
push
inc
mov
push
lahf
aam
sbb
cmp
test
jb
test
iret
xchg
push
movs
mov
(bad)
adc
add
adc
repnz
out
sub
cmp
pop
leave
mov
out
mov
or
je
jns
sub
not
sub
xor
cmps
mov
mov
xchg
scas
sbb
loopne
and
fist
push
out
xor
cdq
imul
sahf
xor
mov
cmc
mov
jle
or
mov
imul
or
test
mov
xchg
pop
xor
shl
sub
icebp
lods
adc
(bad)
lock
ret
mov
aad
push
xchg
fsubr
ror
xchg
bound
mov
mov
sbb
push
(bad)
xchg
cli
les
pop
sbb
sbb
lds
jl
add
(bad)
pop
ins
mov
scas
push
sbb
jmp
sahf
loopne
in
fwait
mov
imul
aam
push
popw
jl
movs
dec
call
lahf
fisub
jl
push
push
mov
pop
dec
inc
movs
(bad)
mov
xchg
lds
jo
mov
lahf
jbe
(bad)
jmp
jge
mov
and
sbb
ins
cmps
outs
adc
(bad)
das
inc
inc
jb
xchg
mov
dec
cdq
in
xor
jg
jle
cmps
iret
in
cmp
cmp
repz
jge
repnz
add
cld
cs
(bad)
ja
scas
dec
inc
lea
cmp
mov
pusha
push
pop
daa
mov
add
xor
repnz
mov
ret
push
movs
sub
dec
lods
cmc
adc
jecxz
adc
pop
ins
jmp
out
outs
aam
push
xor
lea
scas
cli
jecxz
cmc
mov
sub
out
addr16
retf
dec
xor
inc
(bad)
movs
mov
data16
out
call
das
xchg
add
adc
pop
push
sbb
jge
cli
inc
inc
mov
mov
pop
xchg
adc
push
add
test
lds
std
adc
xchg
call
mov
xchg
pop
hlt
inc
jo
test
xor
cmp
repz
inc
call
add
cmp
test
retf
cmp
ror
popf
mov
stos
dec
adc
adc
jecxz
fwait
or
daa
xchg
cli
xchg
xlat
and
fs
outs
cmp
fld
sub
stos
(bad)
test
or
mov
inc
gs
adc
mov
repnz
cdq
ret
push
(bad)
ss
mov
dec
push
cmp
int3
mov
retf
scas
cmp
outs
cmp
sbb
mov
shl
mov
dec
retf
push
das
sbb
mov
mov
cmps
retf
in
repz
outs
sti
xchg
not
pop
iret
je
or
push
mov
push
(bad)
popa
mov
mov
clc
mov
sbb
inc
fcomp
push
pop
daa
into
retf
popf
adc
jnp
pop
sbb
and
dec
cmp
mov
cdq
sub
and
jb
(bad)
inc
daa
sar
sub
mov
xor
retf
jp
adc
pop
cmp
xchg
ins
inc
push
sub
mov
xor
pushf
sbb
shl
out
scas
push
mov
dec
ins
xor
mov
imul
adc
repz
cli
sbb
inc
xchg
xor
nop
es
inc
aad
(bad)
push
pop
mov
call
cmp
mov
loop
sub
cmp
jmp
xchg
es
das
add
into
cmps
retf
add
or
jp
arpl
pop
(bad)
or
fcmovne
jmp
sbb
cmp
in
aaa
lds
xor
adc
xor
sbb
das
es
and
lock
mov
xchg
lahf
adc
mov
in
sbb
leave
(bad)
movs
movs
repz
xchg
push
ins
push
mov
inc
bound
hlt
fnstsw
jno
in
xor
call
rcr
test
pop
(bad)
or
sbb
xor
cmp
adc
dec
sub
repz
mov
stos
ret
cmps
fisubr
mov
pop
push
icebp
jbe
jns
adc
cmp
shr
xor
inc
ins
or
or
fwait
adc
movs
dec
cmp
or
imul
pop
xchg
int
adc
rol
in
sbb
scas
mov
fistp
ret
xchg
movs
inc
add
ja
mov
xor
xlat
sti
daa
imul
movs
fstp
pop
pop
shl
data16
out
clc
cld
lds
mov
ins
sbb
mov
inc
leave
mul
dec
push
sbb
xchg
sub
call
adc
ret
sbb
mov
xchg
inc
in
repnz
test
(bad)
push
dec
xchg
shl
inc
xchg
xlat
stc
mov
imul
xor
add
dec
imul
push
jp
mov
mov
xor
loopne
gs
sub
popf
mov
adc
ins
or
and
fcomp
jae
push
(bad)
jge
fwait
sub
inc
js
inc
dec
out
xchg
fcomi
lods
ret
jo
stos
xchg
ret
les
xor
push
or
stos
test
jecxz
ret
adc
dec
iret
dec
(bad)
iret
xchg
outs
mov
pop
jbe
inc
xor
leave
test
inc
mov
repnz
lahf
fidiv
lock
dec
imul
fld
outs
cmps
mov
iret
xchg
popa
mov
mov
out
push
sbb
xor
rcl
call
cmps
jbe
loope
lods
add
inc
gs
pop
pushw
ret
sbb
rcl
push
shl
xor
int
add
lea
lea
jecxz
push
sbb
jmp
push
jl
rol
dec
jl
ret
or
mov
js
int
adc
or
scas
movs
cwde
jno
mov
pop
mov
scas
mov
mov
xchg
movs
gs
in
xchg
stc
fisubr
ficomp
cld
push
jecxz
mov
mov
jo
inc
int
aad
lods
adc
pop
mov
xor
mov
scas
retf
rcl
stc
mov
xchg
dec
add
or
push
into
imul
or
imul
or
outs
dec
inc
mov
sub
mov
xchg
pop
mov
jp
std
and
aad
ins
cmp
mov
out
xchg
and
sbb
and
mov
cwde
jmp
or
rol
inc
inc
mov
sub
dec
pop
jo
xor
hlt
xchg
mov
xchg
mov
add
movs
mov
jae
es
mov
aad
fnsave
xor
dec
jno
aas
stos
jecxz
pushf
and
data16
retf
(bad)
mov
(bad)
adc
xor
sbb
and
cmp
sar
or
loopne
fdivr
fwait
adc
ins
cs
test
mov
pop
je
add
outs
scas
add
xor
fs
dec
adc
push
out
ins
ins
pop
imul
popf
ror
cmps
pop
jbe
mov
xchg
clc
jmp
xor
fwait
pop
inc
cld
test
pmuludq
into
add
xchg
mov
hlt
pop
rol
or
push
mov
or
mov
loopne
mov
or
xchg
fisubr
xchg
or
mov
das
lea
repz
xor
cli
or
shl
jecxz
sub
xor
xchg
shl
rcl
ficom
xchg
(bad)
jmp
(bad)
pop
cmc
xor
push
jb
(bad)
xchg
dec
aas
or
neg
cmc
add
push
cmp
sub
xor
push
sbb
push
sub
popa
add
cmp
lock
sbb
test
mov
add
clc
out
add
jno
jmp
imul
ins
retf
push
jmp
call
popf
xor
jl
pusha
ja
pop
fs
sub
xchg
jmp
idiv
das
fstp
in
fild
lods
mov
mov
mov
jecxz
inc
outs
and
jnp
pusha
ret
dec
ins
or
sti
mov
retf
scas
and
icebp
mov
mov
ja
ror
fisub
test
cmp
repnz
xor
cmc
xchg
iret
cmps
dec
dec
das
xchg
not
ss
call
pop
mov
sbb
or
dec
mov
mul
xchg
or
imul
inc
test
ins
cmp
loope
out
xor
ret
pop
mov
imul
movs
outs
call
adc
(bad)
mov
(bad)
jns
jbe
push
inc
rcr
pusha
dec
jmp
and
or
xlat
cwde
fld
sbb
pop
inc
jmp
pop
jl
mov
xchg
sub
sbb
jne
jg
push
push
outs
idiv
ja
iret
inc
je
lods
mov
ins
jnp
mov
or
sub
jecxz
jns
push
or
retf
pop
cwde
mov
mov
pop
cwde
clc
jmp
aam
call
(bad)
out
jge
fidiv
(bad)
xchg
inc
mov
sub
sub
(bad)
sub
jle
cmc
jge
test
into
push
push
mov
std
sbb
sub
call
cmc
adc
cmp
ja
mov
and
cdq
add
add
std
xchg
mov
lds
out
(bad)
adc
shl
mov
stc
(bad)
movaps
loope
sbb
mov
les
into
jno
dec
dec
aad
outs
vpunpcklqdq
sbb
and
sbb
inc
jmp
inc
lds
mov
aam
mov
fimul
icebp
outs
jns
xor
sbb
mov
xchg
ja
je
int
add
int
cmp
xlat
push
cmp
stc
mov
or
stos
daa
adc
cld
and
psrlw
popf
mov
aad
jl
add
cmp
sub
ja
ret
push
and
je
jmp
into
adc
mov
ror
out
push
push
sub
in
sar
jg
dec
int3
stos
(bad)
jnp
leave
jp
add
movs
pop
loope
bound
out
stc
in
xchg
mov
add
retf
adc
gs
xchg
or
mov
xor
sbb
xchg
push
jecxz
stos
test
xchg
mov
aad
sub
add
pop
cmp
mov
pop
push
sbb
or
enter
xchg
sub
neg
clc
pop
push
sti
lahf
je
xor
mov
jnp
and
cmp
les
sbb
fist
push
xlat
push
sbb
fst
out
cmps
aam
pop
pminub
add
fwait
fwait
adc
ds
into
aas
and
xor
sub
adc
jmp
sub
jns
jge
gs
mov
mov
sub
sub
dec
add
or
xor
into
cs
pop
xor
(bad)
push
xor
or
add
movlps
das
fcmove
shufps
popa
push
cld
mov
mov
mov
retf
jge
lock
jp
and
imul
clc
inc
inc
push
lock
mov
mov
arpl
cwde
pop
inc
nop
dec
test
mov
mov
or
lock
fimul
repnz
mov
aaa
mov
gs
in
mov
call
push
sbb
push
aad
movs
cmp
repz
loope
sbb
and
in
data16
daa
rcl
xchg
popa
outs
retf
xor
xlat
and
dec
outs
inc
dec
imul
into
pusha
or
jmp
sub
dec
mov
rcr
mov
push
xor
and
aaa
or
mov
test
and
xlat
cmps
fwait
loope
push
sbb
cli
test
dec
sbb
cmps
adc
fidiv
js
int3
mov
mov
xchg
and
repnz
xchg
xlat
jnp
test
mov
jmp
sbb
hlt
mov
mov
mov
pop
adc
mov
add
cmp
fdiv
fwait
jns
and
outs
lods
pushf
bound
or
out
lock
xor
ja
pusha
jne
xchg
rcl
pop
movs
sub
mov
sbb
inc
sbb
sti
icebp
or
or
loopne
bound
popf
mov
cmps
cmp
fsubr
repz
mov
mov
xchg
add
stc
mov
push
cdq
jl
xor
scas
pushf
or
retf
retf
(bad)
add
dec
test
hlt
jle
push
icebp
xchg
mov
pop
mov
push
and
pop
xchg
add
(bad)
imul
adc
mov
push
lods
add
fst
push
or
push
out
(bad)
aaa
dec
inc
lods
mov
adc
inc
mov
push
ret
mov
(bad)
and
movs
aas
jb
hlt
pop
mov
mov
iret
(bad)
sbb
xchg
jbe
out
push
cs
in
jno
push
sbb
retf
icebp
mov
mov
shl
repnz
xlat
mov
pop
fdiv
sub
dec
mov
pop
cmp
sbb
in
les
xchg
jp
pop
inc
leave
mov
cmp
inc
or
cmc
xchg
pop
movs
and
and
call
lods
pop
stos
xchg
icebp
xor
push
and
xchg
inc
cmc
cmp
cli
adc
xor
mov
lds
lds
and
lea
or
xor
ss
fdiv
fldenv
sub
jmp
pop
inc
fstp
or
pop
sub
loopne
mov
lock
mov
xchg
sub
pop
fst
addr16
fsubr
sbb
mov
sub
push
(bad)
imul
hlt
xchg
pop
jg
push
out
inc
mov
jle
push
push
cmp
xor
stos
repz
fwait
js
xor
push
pop
je
loope
adc
cdq
xchg
dec
cs
sbb
jge
loope
xchg
out
mov
push
sub
ret
mov
sub
call
outs
pop
loope
aam
mov
std
add
mov
iret
pop
xchg
ds
into
out
add
mov
mov
mov
call
(bad)
mov
aaa
or
sbb
xor
sub
div
fmul
and
jg
jl
mov
fmul
movs
mov
pop
out
and
jo
and
and
lods
or
add
int
sbb
jne
xchg
jno
in
mov
mov
fnstenv
push
push
mov
sti
or
push
unpckhps
lock
sbb
ins
sub
aas
sbb
lahf
mov
jns
repz
enter
(bad)
call
hlt
pushf
mov
gs
fld
inc
pop
das
sub
and
push
movs
out
test
fwait
inc
outs
xchg
in
mov
jmp
pop
mov
mov
cmp
aas
js
lea
mov
xchg
mov
test
or
pop
fistp
sbb
jo
pop
jecxz
pushf
and
dec
xor
jbe
bound
adc
mov
sti
rol
xchg
dec
cli
push
dec
mov
fsub
in
mov
retf
int3
sub
rcr
cli
push
mov
lds
xor
in
scas
hlt
fdivp
pop
pusha
mov
nop
or
jp
jl
setge
add
lds
adc
dec
push
mov
inc
sbb
stc
adc
mov
push
pop
repz
mov
ror
mov
bound
jmp
lods
imul
je
inc
mov
nop
(bad)
jle
aad
adc
(bad)
in
cmps
jb
adc
push
call
xor
frstor
cmps
sti
jns
out
add
fwait
and
cs
dec
cwde
mov
fwait
sbb
(bad)
call
ret
enter
xor
inc
sysret
cld
cmp
pop
jb
iret
jno
aas
fdivp
ins
and
mov
mov
cdq
xchg
jne
push
sar
and
mul
add
outs
sti
mov
test
mov
test
mov
lods
jmp
mov
outs
stc
int
adc
xor
(bad)
mov
rcl
pop
test
adc
push
imul
pop
(bad)
leave
jo
int3
adc
ror
bound
sub
push
and
inc
inc
sbb
or
xor
call
es
outs
adc
leave
(bad)
dec
mov
pop
mov
ficomp
pop
jae
jmp
loop
xchg
loop
mov
call
punpcklwd
cmp
pop
mov
ja
xchg
jbe
in
and
inc
loop
cmp
iret
div
sbb
popa
pop
cmp
popf
inc
loope
dec
sub
push
mov
jns
call
inc
inc
mov
add
sbb
lea
movs
sar
in
inc
pop
aam
out
fbld
cmp
cmps
lods
inc
cmps
xor
push
adc
sbb
imul
jae
inc
adc
(bad)
daa
inc
xor
mov
xor
(bad)
fild
(bad)
cmp
(bad)
xchg
ins
adc
inc
mov
add
cmp
loope
push
call
sahf
movs
mov
adc
idiv
pop
mov
lock
push
aas
test
(bad)
(bad)
push
iret
xor
lea
jg
push
dec
loop
out
mov
cmp
hlt
aam
mov
loop
sub
push
hlt
jbe
fldcw
add
cli
cwde
add
ss
push
mov
xor
addr16
popf
cdq
hlt
push
mov
pop
adc
jmp
cmp
(bad)
aam
fidiv
sti
sbb
mov
out
rcl
jge
scas
push
push
add
mov
pop
jmp
outs
adc
pop
rcl
jmp
cmp
push
scas
or
nop
fs
(bad)
hlt
dec
push
push
jo
sub
(bad)
jmp
xchg
call
scas
lods
jns
scas
or
push
cmp
in
ret
sbb
xor
mov
xor
aaa
or
(bad)
pop
iret
dec
aad
fisttp
pop
adc
(bad)
(bad)
enter
ficomp
inc
push
lahf
push
mov
sub
and
sar
loop
jg
push
add
dec
jge
retf
aaa
or
xchg
jle
dec
jmp
es
test
push
sar
pop
ins
sti
sahf
jae
adc
ds
cmp
jp
int
mov
fcomip
cmp
sbb
cmps
jae
jb
sub
bound
or
ins
add
or
sti
lahf
vpmacsswd
test
iret
cmps
adc
inc
idiv
jns
jnp
out
add
data16
outs
icebp
xlat
fsubr
mov
outs
fwait
retf
dec
adc
jl
(bad)
mov
jmp
clc
cli
sbb
nop
xchg
cld
pop
jb
mov
mov
mov
sar
adc
cmp
aaa
popf
clc
outs
aas
out
aam
call
inc
xchg
add
sub
xor
inc
dec
fdivp
jmp
test
rcl
adc
dec
mov
in
cmp
andps
mov
stos
and
lods
fwait
adc
stos
mov
test
inc
xlat
and
jmp
iret
jo
fs
jmp
push
push
(bad)
xlat
imul
push
cmp
fs
sub
or
stc
jmp
(bad)
cmc
fsubr
ins
sti
or
jb
gs
sub
cmc
add
bswap
test
fist
sub
inc
jne
sub
pop
jmp
cld
into
repz
and
dec
mov
ret
inc
in
adc
in
pop
loopne
push
adc
test
xchg
sbb
push
neg
dec
sub
jle
mov
and
clc
mov
cwde
(bad)
xor
mov
fwait
lock
pop
mov
hlt
rol
pop
(bad)
fistp
cmp
mov
jge
sti
inc
cli
retf
(bad)
jns
pop
mov
dec
sub
ins
(bad)
inc
repz
bsf
sub
jge
and
dec
push
sub
cmps
and
mov
cld
mov
sbb
inc
(bad)
xor
jmp
jle
and
cmps
fucomp
fmul
jle
mov
ficom
adc
test
and
adc
jnp
adc
aad
pop
xchg
push
sbb
mov
in
jl
and
ret
jo
inc
lods
rcl
fld
icebp
cmps
scas
call
(bad)
push
inc
mov
jge
mov
test
xchg
hlt
xchg
and
cdq
mov
lods
mov
lds
daa
add
mov
test
addr16
mov
add
call
retf
push
popf
sbb
lea
jecxz
lds
mov
rcr
popf
es
aam
inc
pop
rcr
movs
inc
cli
jg
retf
out
mov
push
loope
stos
sub
std
in
push
imul
mov
cdq
mov
es
pusha
aaa
sbb
sbb
pop
mov
mov
in
call
cmps
aas
mov
mov
(bad)
imul
or
dec
add
push
xor
dec
cmc
lea
mov
mov
adc
add
pop
push
push
jp
inc
std
sub
push
bound
rol
jbe
xlat
cmp
int3
jns
cmp
sbb
cmp
gs
sbb
sti
mov
(bad)
fwait
gs
dec
cmp
into
ror
pop
sub
pop
mov
int
sub
int3
pop
stos
xor
daa
in
adc
mov
push
sub
cwde
dec
sbb
inc
mov
jns
loop
retf
outs
repnz
(bad)
xor
add
pop
enter
setge
xor
adc
or
aad
push
(bad)
(bad)
repz
mov
test
jno
fxch
ja
or
or
cli
(bad)
fdivp
jmp
daa
jo
jg
loope
aam
inc
cs
movs
sbb
ja
ins
jb
pushf
jp
mov
in
pop
outs
aam
lahf
clc
xchg
push
and
imul
inc
ins
neg
jp
movs
pop
and
sti
mov
xchg
es
sbb
mov
fidivr
aam
xor
jle
pop
aam
rcr
into
or
cli
push
std
sub
inc
into
sub
add
xlat
cld
push
add
std
lods
mov
mov
test
jl
dec
push
hlt
mov
lea
jg
pop
add
ret
add
iret
pop
adc
sti
push
aas
or
je
pop
add
int3
mov
push
das
ror
pusha
mov
xchg
jno
xor
in
lock
add
in
pop
cmp
fs
(bad)
or
xor
xchg
xchg
sbb
cmps
xor
rcl
cmp
gs
jge
(bad)
gs
ffreep
mov
push
dec
fsubp
fidiv
das
cmp
add
inc
mov
dec
jne
mov
inc
mov
fwait
ins
loope
adc
lods
pop
or
cmp
cld
pop
aas
dec
sub
and
sar
iret
out
and
fwait
mov
push
push
dec
xchg
dec
jl
outs
ds
dec
inc
push
jle
mov
or
sub
cmp
push
xchg
sub
ins
movs
dec
sahf
adc
das
mov
pop
out
mov
pop
xchg
movs
adc
adc
cmps
pop
(bad)
movs
adc
and
mov
sbb
lods
and
push
adc
int
test
adc
sbb
inc
inc
stos
in
and
sbb
add
and
push
mov
xor
jp
mov
jns
imul
cmp
mov
cmp
pop
xor
fs
cwde
sbb
(bad)
rcl
add
dec
clc
(bad)
fsub
nop
(bad)
retf
scas
lods
dec
nop
push
and
pop
jo
js
pop
iret
int3
sbb
and
std
jmp
ficomp
stos
jle
fld
pop
pop
fwait
shl
cmc
cmp
add
push
popa
push
sub
mov
dec
mov
sti
xor
dec
jno
out
ins
xor
js
lock
sbb
mov
fbstp
retf
(bad)
fldenv
pushf
inc
lahf
mov
je
aam
jge
cmps
nop
push
cwde
push
(bad)
cmps
jecxz
inc
jmp
mov
mov
jl
mov
sahf
mov
cmp
out
xlat
xchg
js
fst
or
(bad)
jns
into
xchg
pop
cli
outs
loope
inc
add
repz
cmp
dec
(bad)
loopne
(bad)
addr16
mov
mov
add
std
dec
adc
es
mov
lahf
movs
jbe
cdq
sbb
and
mov
xor
sahf
aam
mov
repz
pop
lds
das
popa
xlat
mov
sbb
inc
and
retf
fadd
test
xor
mov
lods
nop
je
fdivr
ins
jae
sar
cdq
pop
jmp
sbb
add
push
xchg
arpl
and
pop
stos
inc
jae
out
(bad)
jmp
sub
mov
push
cmps
jns
add
fldcw
xlat
mov
scas
nop
lods
dec
outs
jo
in
ret
shl
xchg
dec
enter
aaa
push
in
adc
test
in
mov
mov
(bad)
ror
outs
pop
daa
add
and
mov
out
push
movs
cmovbe
add
xlat
add
jge
dec
sub
ret
iret
pop
mov
idiv
xchg
loopne
and
sub
add
call
fcom
lahf
cmp
mov
push
sahf
daa
mov
popa
gs
(bad)
addr16
push
into
pop
push
scas
sub
sub
push
jno
push
push
cmp
cli
mov
(bad)
ins
xor
in
mov
(bad)
aad
push
out
jno
mov
mov
push
add
shl
iret
stos
mov
jae
sbb
ret
push
scas
scas
ss
ud0
aaa
popf
xchg
xlat
mov
sbb
inc
cmps
mov
sub
dec
jo
mov
lea
loopne
xor
adc
xchg
xor
xor
xchg
sbb
movs
sti
fst
pop
shl
out
push
mov
pop
cmp
mov
hlt
(bad)
bound
mov
add
push
in
mov
jecxz
les
ret
rcr
mov
in
dec
and
mov
push
js
mov
add
push
adc
and
icebp
pop
shl
stos
mov
iret
lds
jp
scas
or
xor
sbb
xchg
movs
inc
aas
bnd
push
je
jno
jmp
sub
pop
sar
push
pop
and
pop
repnz
lds
xor
jmp
mov
aas
cmp
aad
push
jmp
test
cmc
jg
xor
inc
ss
call
fsub
mov
jae
jb
cmc
xor
call
push
inc
call
adc
pop
pushw
push
mov
mov
mov
or
xchg
inc
add
or
mov
out
cdq
adc
dec
cdq
push
test
xlat
push
mov
scas
arpl
movs
cld
loope
test
lods
jbe
xchg
jmp
fnstcw
jecxz
mov
xlat
pop
call
mov
dec
push
mov
push
fs
jge
lock
pop
inc
adc
or
inc
dec
adc
pop
adc
push
lods
mov
jno
mov
sub
test
aas
inc
jle
add
mov
retf
sub
add
push
adc
pop
out
lahf
sub
jns
sbb
xchg
push
xor
and
xchg
xchg
inc
jp
(bad)
loopne
and
lods
mov
sub
ss
movs
or
xchg
push
adc
call
iret
add
clc
adc
ror
sub
push
inc
xchg
icebp
mov
sar
int3
enter
mov
sahf
xlat
aad
popa
cs
(bad)
fimul
(bad)
jl
daa
push
js
inc
and
idiv
fsub
imul
push
jmp
add
mov
shl
stc
stc
mov
jle
mov
or
pop
ins
lea
(bad)
dec
scas
cmps
mov
pop
lea
mov
mov
pop
push
jmp
mov
frstor
jmp
xor
stos
and
scas
xchg
pop
jge
xchg
stos
out
mov
scas
and
jae
sti
pop
(bad)
cmc
data16
mov
cmp
mov
std
fild
cmp
loope
add
clc
(bad)
in
shl
dec
arpl
push
add
cmp
in
ins
mov
daa
sub
mov
enter
xchg
inc
arpl
and
sbb
sbb
xchg
inc
sbb
pop
xchg
jne
jg
adc
or
das
inc
sti
repnz
jo
inc
jnp
jg
bound
das
ins
bound
inc
gs
gs
push
nop
pop
aas
pop
loopne
fsub
ror
int3
fadd
mov
ffree
sub
inc
lds
sbb
cmp
fnstcw
fwait
sbb
sub
sub
sub
adc
and
add
jl
jbe
(bad)
mov
mov
jne
lea
leave
xchg
xchg
mov
jl
mov
test
clc
repz
pop
jmp
in
jecxz
and
push
add
imul
mov
cmc
aad
cli
adc
dec
dec
dec
jno
cdq
lds
dec
movs
mov
repz
je
bound
mov
scas
sub
in
jb
xchg
sub
lahf
sbb
(bad)
pop
add
sbb
mov
dec
adc
in
pop
add
lock
jno
jns
cmp
jle
jno
outs
jl
sub
add
mov
pusha
jo
pop
adc
or
push
data16
fst
cli
dec
shr
enter
addr16
in
shr
int
cmp
out
cmp
cmp
sub
cmp
jmp
push
sub
mov
sub
and
clc
sbb
fld
xchg
push
sahf
jl
add
mov
cmps
test
add
adc
cwde
jp
cmp
cld
repz
cdq
in
ret
push
mov
loopne
(bad)
in
inc
out
pop
mov
sub
repnz
cwde
push
jnp
push
mov
sub
inc
jae
dec
push
inc
fld
add
scas
fnstenv
mov
mov
loope
out
stos
fs
mov
jns
lds
mov
adc
rcr
cmp
dec
or
or
add
add
std
jg
cmp
jnp
jl
mov
iret
push
test
pop
outs
scas
out
lds
data16
pop
dec
sbb
or
call
fcmovnu
out
sar
mov
mov
adc
add
xor
scas
xor
scas
xor
movs
sub
lds
add
adc
icebp
sbb
mov
nop
scas
xchg
sbb
std
mov
add
sbb
out
sti
cmp
hlt
ss
stc
push
icebp
pop
out
and
call
fldenv
addr16
popa
mov
jnp
pop
not
push
adc
lahf
dec
adc
dec
push
dec
pop
xchg
inc
and
call
mov
xor
hlt
lods
sbb
cmps
mov
test
pop
mov
lahf
push
xchg
es
sbb
rcpps
aas
enter
test
xchg
inc
push
jg
pop
je
jge
jle
inc
inc
jp
jno
mov
aas
jne
outs
dec
in
shufps
and
addr16
mov
mov
pop
test
fmul
mov
shr
dec
aad
int3
xchg
enter
int
sar
cmp
cmp
inc
push
adc
dec
sub
push
xchg
and
sub
mov
dec
cmp
xchg
in
ror
mov
out
sbb
push
mov
sub
cmc
adc
and
mov
frstor
cmps
test
cs
jecxz
dec
loop
leave
pop
fisttp
jmp
add
fs
cwde
inc
outs
lea
xchg
sbb
xchg
mov
mov
mov
scas
add
and
dec
xchg
rcr
das
ins
sbb
out
sbb
mov
cmp
lds
pusha
mov
ins
sti
pop
inc
add
pop
push
bound
dec
inc
stc
cmps
out
lock
jg
mov
scas
inc
jne
jo
in
arpl
das
paddd
fs
inc
int
lods
data16
rcl
mov
mov
pop
enter
addr16
push
jmp
add
pop
repz
add
push
and
mov
scas
sub
sub
pusha
daa
xor
jns
xchg
sub
pop
jbe
cmp
sbb
mov
stos
lahf
test
add
adc
leave
(bad)
in
je
and
mov
fs
mov
fucomp
mul
bound
fadd
call
push
cwde
mov
iret
mov
dec
data16
xor
push
cmovle
(bad)
cli
push
mov
mov
test
into
sub
test
test
test
lahf
cdq
fwait
out
aad
fcmovnb
fcmovu
(bad)
sar
sti
stc
(bad)
cli
sti
mov
out
jmp
fwait
and
cmps
test
fld
leave
fmulp
mov
cmps
test
stos
mov
int3
rcr
lahf
cdq
fwait
cdq
imul
addr16
jnp
jns
jl
imul
popf
cwde
test
mov
stos
test
test
mov
mov
scas
test
fwait
cdq
lahf
mov
jmp
out
call
sti
std
(bad)
sti
sti
std
out
jmp
out
jmp
fwait
cdq
lahf
cdq
fwait
cdq
cmps
stos
stos
test
cmps
mov
rcl
int3
lds
dec
and
lods
mov
das
sub
cmp
dec
dec
dec
and
pop
pop
pop
pop
sub
fisubr
fst
in
int
aad
xchg
inc
push
ret
loope
mov
sbb
push
stos
inc
xor
jmp
out
jmp
sti
pop
sub
sti
stc
(bad)
jmp
jmp
out
fwait
cdq
lahf
cdq
fwait
cdq
cmps
test
stos
dec
jno
mov
mov
fucomp
mov
lahf
hlt
call
or
or
jnp
jg
pop
jns
sub
outs
imul
lahf
cdq
fwait
cdq
cmps
test
stos
test
mov
test
stos
test
lahf
cdq
fwait
cdq
out
jmp
out
jmp
sti
stc
(bad)
stc
sti
stc
out
jmp
out
jmp
fwait
cdq
lahf
cdq
fwait
cdq
cmps
test
stos
test
mov
test
stos
test
lahf
cdq
fwait
cdq
imul
addr16
jns
jns
jns
imul
addr16
fwait
cdq
lahf
cdq
fwait
cdq
cmps
test
stos
test
mov
test
stos
test
lahf
cdq
fwait
cdq
out
jmp
out
jmp
sti
stc
(bad)
stc
sti
stc
out
jmp
out
jmp
fwait
cdq
lahf
cdq
fwait
cdq
cmps
test
stos
test
mov
test
stos
test
lahf
cdq
fwait
cdq
imul
addr16
jns
jns
jns
imul
push
cdq
fwait
cdq
lahf
cdq
fwait
cdq
cmps
test
stos
test
mov
test
stos
test
lahf
cdq
fwait
cdq
out
jmp
out
jmp
sti
stc
(bad)
stc
sti
stc
out
jmp
out
jmp
fwait
cdq
lahf
cdq
fwait
cdq
cmps
test
stos
test
mov
test
stos
test
lahf
cdq
fwait
cdq
imul
addr16
jns
jns
jns
imul
addr16
fwait
cdq
lahf
cdq
fwait
cdq
cmps
test
stos
test
mov
test
stos
test
lahf
cdq
fwait
cdq
out
jmp
out
jmp
sti
stc
(bad)
stc
sti
stc
out
jmp
out
jmp
fwait
cdq
lahf
cdq
fwait
cdq
cmps
test
stos
test
mov
test
stos
test
lahf
cdq
fwait
cdq
imul
addr16
jns
jns
jns
imul
addr16
fwait
cdq
lahf
cdq
fwait
cdq
cmps
test
stos
test
mov
test
stos
test
lahf
cdq
fwait
cdq
out
jmp
out
jmp
sti
stc
(bad)
stc
sti
stc
out
jmp
out
jmp
fwait
cdq
lahf
cdq
fwait
cdq
cmps
test
stos
test
mov
test
stos
test
lahf
cdq
fwait
cdq
imul
addr16
jns
jns
jns
imul
addr16
fwait
cdq
lahf
cdq
fwait
cdq
cmps
test
stos
test
mov
test
stos
test
lahf
cdq
fwait
cdq
out
jmp
out
jmp
sti
stc
(bad)
stc
sti
stc
out
jmp
out
jmp
fwait
cdq
lahf
cdq
fwait
cdq
cmps
test
stos
test
mov
test
stos
test
lahf
cdq
fwait
cdq
imul
addr16
jns
jns
js
imul
popf
popf
sahf
lahf
mov
movs
rcl
pushf
call
mov
out
mov
mov
popf
rol
jle
(bad)
lds
cwde
mov
mov
(bad)
(bad)
fcomp
retf
(bad)
cwde
mov
cmps
jecxz
in
out
jmp
out
out
lock
lock
push
idiv
stc
sti
cli
cld
std
inc
add
pop
pop
or
or
or
(bad)
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
sbb
sub
sub
xor
xor
xor
cmp
cmp
ds
dec
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
pop
dec
dec
dec
push
push
push
cmp
aas
and
pop
mov
es
push
push
pop
push
sub
pop
das
pop
pop
push
inc
inc
inc
inc
aaa
xor
inc
dec
inc
cmp
dec
cmp
les
sar
jmp
xchg
or
retf
xor
cmovg
out
jl
pop
jbe
test
stos
stos
lods
lods
scas
scas
mov
pop
outs
mov
pop
or
cwde
cwde
nop
lods
or
adc
mov
fucomp
or
ret
cmp
sbb
dec
ss
mov
std
test
sub
jmp
sbb
mov
sbb
inc
shl
or
(bad)
cmp
imul
inc
rol
xchg
das
(bad)
mov
imul
out
retf
xchg
and
icebp
sahf
std
faddp
rcr
mov
mov
imul
sahf
fimul
sub
repnz
test
add
arpl
mov
repz
mov
pop
mov
test
and
pop
lahf
sahf
add
add
jle
bnd
push
mov
pop
cmp
(bad)
in
xchg
retf
scas
jmp
inc
or
pushf
cwde
fld
pop
or
popf
vmovddup
mov
add
pop
lods
iret
inc
xor
stos
hlt
jp
in
sbb
jle
jl
enter
or
(bad)
stos
sbb
cld
cmp
clc
mov
int3
or
cmps
aaa
jnp
int3
fwait
les
in
and
bound
xchg
inc
adc
ret
xchg
movs
neg
popf
into
ins
sub
pop
addr16
int
add
adc
push
hlt
push
cmp
aam
fisubr
aad
mov
adc
mov
scas
sbb
cmps
in
mov
xor
sbb
in
mov
scas
clc
ror
push
outs
or
add
inc
mov
push
or
leave
loopne
jb
push
outs
pop
in
add
loope
pop
or
jns
mov
xchg
das
call
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fistp
add
cmc
cmp
add
and
add
cmp
add
add
add
add
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
and
