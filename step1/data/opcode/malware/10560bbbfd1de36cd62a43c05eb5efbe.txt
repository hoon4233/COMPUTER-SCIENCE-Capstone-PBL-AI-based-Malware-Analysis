mov
mov
inc
inc
(bad)
(bad)
jmp
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
(bad)
(bad)
(bad)
jmp
arpl
addr16
ins
outs
outs
jo
jb
je
jbe
js
jp
xor
xor
ss
cmp
sub
push
pop
push
push
xor
xor
fs
ins
(bad)
mov
inc
push
dec
inc
dec
or
jns
imul
arpl
gs
arpl
je
push
inc
push
dec
daa
std
mov
imul
imul
dec
popa
outs
push
int3
ins
lods
sbb
cmp
inc
popa
je
mov
fistp
or
std
ss
sti
pop
inc
push
outs
imul
xchg
std
jae
outs
ins
cmp
outs
dec
gs
pop
jbe
and
dec
sbb
(bad)
push
popa
ins
jne
inc
js
or
sub
out
adc
push
jb
and
adc
push
add
push
jae
sti
fwait
mov
mov
push
inc
dec
shl
mov
gs
jb
inc
gs
dec
push
or
ins
and
dec
das
or
das
mov
(bad)
int3
inc
inc
inc
push
inc
push
(bad)
mov
xor
arpl
outs
dec
inc
imul
and
pop
in
push
xor
add
pop
cmp
xchg
mov
jb
push
dec
push
fs
sar
je
sub
dec
dec
and
and
pop
or
arpl
popa
push
in
std
jmp
outs
and
xor
cs
and
pop
popa
pop
mov
inc
or
inc
xchg
outs
pop
pop
ss
inc
cmp
and
and
jb
pop
inc
inc
sub
pop
jb
inc
or
mov
outs
and
and
jae
lods
in
scas
imul
pop
or
pop
addr16
ret
inc
mov
jp
jbe
stos
aad
pop
js
add
sbb
mov
pop
xchg
popa
add
xor
mov
je
aad
jecxz
call
pop
cmp
dec
daa
jns
push
sub
dec
dec
arpl
imul
fstp
std
je
jo
jae
int
mov
fs
add
bound
pop
jbe
or
push
je
mov
retf
or
jne
mov
sbb
xchg
mov
add
cwde
jnp
mov
outs
lock
adc
add
xor
ror
add
arpl
test
push
cmp
cvtdq2ps
mov
jns
ja
or
int3
outs
popa
(bad)
jl
add
ret
add
lsl
and
and
push
push
inc
inc
add
arpl
imul
mov
and
sbb
outs
(bad)
push
outs
sbb
jo
into
push
neg
push
ret
mov
xchg
add
sub
lahf
pop
addr16
fidiv
mov
xor
cmp
jle
fnstenv
xor
add
inc
pop
call
rcpps
outs
push
mov
adc
inc
gs
dec
pop
add
rdpmc
mov
jns
mov
icebp
mov
dec
cmps
inc
push
jmp
mov
push
dec
push
push
dec
dec
dec
int
push
pop
push
jns
ins
dec
and
sub
mov
aaa
xlat
dec
mov
jp
imul
and
(bad)
bound
add
inc
bound
jmp
add
imul
neg
cmovbe
ss
ins
enter
jge
dec
push
ds
imul
mov
adc
rol
fidiv
shl
je
mov
dec
jne
jmp
and
inc
jae
jl
mov
mov
xchg
(bad)
aas
sub
push
push
push
das
xor
xor
mov
push
jns
cmp
or
das
xchg
sbb
push
cmp
or
mov
sub
sub
sub
push
jge
inc
jp
in
mov
outs
jp
pop
popa
das
xor
in
pop
fcmovu
jae
and
dec
lds
and
cmp
or
sub
arpl
and
clc
fucomp
push
push
gs
and
cmp
and
imul
outs
js
in
pop
add
stos
push
and
mov
je
cmp
sub
cmp
das
or
sub
psllw
inc
not
es
ja
mov
ins
adc
ins
and
sbb
pop
cli
dec
test
sbb
xor
outs
stos
push
pusha
pop
xchg
popa
popf
bound
loope
dec
inc
and
xor
push
outs
ja
ja
mov
sbb
xor
xor
cmps
push
xchg
sub
sub
and
xchg
mov
pop
stos
int
mov
pop
test
pcmpeqd
or
js
imul
push
or
sbb
frstor
jo
popf
popa
push
das
jae
xor
imul
popa
jbe
jmp
ret
fld
ins
jae
and
sbb
outs
ds
je
add
imul
push
sahf
lods
sub
gs
ins
or
pop
outs
pop
inc
outs
pop
fs
addr16
outs
mov
inc
sub
loope
xor
sub
cmp
jge
mov
mov
xor
xor
retf
ss
push
ret
test
pusha
pusha
pop
idiv
add
inc
ss
test
or
add
neg
pop
es
and
sub
sub
mov
ins
add
push
or
sub
lock
and
push
or
adc
lahf
cmp
pop
pop
xchg
in
sub
mov
or
inc
or
xor
or
adc
inc
lock
lock
mov
mov
jmp
es
add
cld
mov
movsx
test
je
inc
jne
jnp
and
adc
call
jl
call
hlt
jmp
ins
add
aaa
sub
shl
ja
mov
push
add
dec
xor
and
or
jmp
or
jmp
(bad)
outs
pop
dec
push
jg
add
adc
add
fldcw
sub
mov
cmp
mov
dec
dec
dec
fiadd
mov
loop
inc
dec
add
repnz
ret
shl
mov
cmp
pop
test
in
fld
sbb
test
jae
sar
jl
mov
pop
jae
outs
fs
clc
push
add
add
dec
dec
or
jge
lods
sbb
mov
pop
jmp
clc
sub
and
in
sbb
push
lods
xor
fcom
sbb
pop
ret
fcom
inc
push
mov
sbb
jbe
sbb
or
xlat
cmp
jne
or
sub
mov
ss
jnp
add
enter
push
xlat
sub
clc
pop
(bad)
fnstsw
pop
jge
add
mov
sub
push
rol
adc
jnp
(bad)
or
inc
push
imul
int
adc
mov
mov
sub
jo
mov
push
cmc
cmp
std
lods
sti
xor
mov
add
ret
adc
cmp
jae
add
movs
cld
add
inc
push
pop
lea
fisttp
stos
stos
stos
push
pop
push
enter
jae
adc
pop
add
fcom
xor
movs
pop
(bad)
mov
jbe
xlat
push
push
mov
pop
adc
sti
adc
or
push
out
jg
das
xor
jp
jge
mov
push
stos
add
rcl
lahf
sbb
adc
push
jne
test
jo
fld
cmp
sub
sbb
dec
(bad)
sub
jge
(bad)
test
cli
int
pop
ins
jae
lods
(bad)
adc
out
fwait
arpl
adc
pop
aam
aaa
pop
or
mov
push
add
fwait
mov
jge
adc
inc
jns
lock
ins
jae
add
pop
hlt
out
mov
xchg
jecxz
mov
mov
mov
push
rcl
jnp
sub
mov
fs
adc
pop
sbb
jne
push
adc
push
xor
xor
dec
add
inc
fs
xchg
or
nop
add
leave
and
test
std
mov
and
sbb
and
jne
inc
leave
xchg
sbb
aam
mov
cmps
test
mov
push
lahf
cdq
retf
retf
dec
xchg
push
movzx
mov
push
pop
pushw
fcmovne
ss
and
inc
les
pop
cmp
dec
push
jmp
and
add
add
add
cmp
aaa
adc
hlt
cwde
cld
inc
mov
add
mov
sbb
enter
and
sub
mov
inc
les
xchg
and
push
int3
pop
shl
cmp
aam
fdiv
js
sbb
jae
aas
sahf
in
test
inc
ror
ror
xchg
sub
sub
xor
xor
cmp
dec
rol
aam
xor
mov
dec
in
xor
int
call
dec
xor
hlt
pop
cld
pusha
add
sbb
sbb
adc
call
je
movs
sbb
js
jl
repz
cmp
adc
sbb
xchg
mov
cmp
push
hlt
pop
push
sbb
ds
sub
cmovle
jne
mov
jmp
leave
adc
mov
cmp
mov
dec
or
mov
mov
or
sbb
adc
mov
push
mov
jle
cmp
mov
lods
ins
xor
cmp
inc
xor
cmps
popf
jp
mov
das
ss
mov
sti
fisttp
mov
mov
out
push
out
push
or
add
daa
jecxz
je
and
aad
jno
fwait
mov
mov
(bad)
jecxz
lea
jecxz
cmp
ss
push
mov
fsubr
add
adc
push
jne
mov
add
cmp
jne
je
fbstp
add
push
xor
rol
add
cli
cmp
xchg
add
ret
push
xchg
ret
out
je
adc
or
ret
ins
push
push
inc
and
imul
xchg
sti
fbstp
aaa
push
mov
push
xor
cmp
std
push
mov
add
jg
mov
ja
je
sar
mov
add
inc
sub
je
add
fwait
fwait
mov
je
mov
and
mov
mov
mov
mov
sbb
or
jb
dec
repz
outs
xchg
aaa
lods
mov
jg
xor
mov
jmp
jnp
je
mov
and
(bad)
fwait
pop
je
dec
dec
jne
mov
mov
mov
fwait
jge
mov
fcomp
shl
lea
mov
cld
add
and
and
bound
add
loope
pop
loop
jbe
mov
xchg
jnp
jne
push
jmp
push
adc
adc
ds
dec
test
dec
cmp
xchg
ins
fstp
movs
push
lods
adc
or
fstp
push
jnp
pop
jns
mov
jg
fild
or
neg
sbb
not
and
sbb
fisttp
outs
jg
test
je
push
mov
(bad)
jmp
add
dec
jecxz
xchg
std
jne
pop
push
mov
or
sbb
and
xchg
and
ins
ins
mov
enter
test
jmp
addr16
sti
pop
push
pop
fwait
call
dec
inc
push
popa
icebp
push
sub
je
cwde
lahf
ss
movs
jge
(bad)
pop
xchg
imul
jl
aam
inc
sub
idiv
lea
mov
fs
xor
aas
inc
les
push
adc
push
mov
xchg
or
jb
adc
mov
mov
push
dec
sbb
(bad)
in
lea
sub
shl
mov
fstp
out
push
data16
call
in
push
jb
mov
jo
add
(bad)
jg
mov
loope
or
inc
cmps
add
mov
jne
daa
or
shr
jl
adc
and
movs
pop
xor
xor
scas
and
push
push
ret
cwde
pop
jnp
sahf
push
clc
and
cld
adc
inc
test
push
daa
or
pop
push
cmp
sbb
or
sete
mov
xor
aas
(bad)
xor
mov
inc
mov
sub
out
mov
lods
cs
adc
lock
or
adc
push
xlat
add
jbe
(bad)
retf
add
adc
nop
ins
sub
cmp
jl
mov
enter
fcomp
lods
cld
lods
cld
leave
retf
divps
mov
jmp
push
iret
xor
int3
pop
sbb
pop
jo
mov
mov
adc
xchg
ins
push
in
xchg
sub
popa
enter
pusha
mov
jo
(bad)
or
pop
pop
fdiv
rol
dec
add
jo
sub
sti
outs
cmp
and
mov
rol
aam
cmp
push
int3
ins
or
inc
mov
rcl
ja
push
sub
push
sub
into
leave
add
(bad)
ins
cld
pop
jb
lock
add
pop
adc
test
push
jmp
mov
ror
test
call
adc
(bad)
or
arpl
mov
retf
(bad)
mov
add
sub
aaa
or
(bad)
adc
mov
jno
outs
ins
jb
lea
cmp
xor
mov
movs
sbb
xor
nop
sbb
add
retf
cmps
imul
pusha
mov
lods
lods
rol
imul
inc
rep
jecxz
popf
jg
adc
adc
push
addr16
fadd
ja
cli
mov
mov
in
call
mov
sbb
das
xlat
xor
daa
mov
call
pushf
dec
mov
pop
and
mov
push
inc
mov
pop
popf
out
or
(bad)
cmps
fld
mov
(bad)
callw
mov
jo
bound
push
sub
imul
xchg
mov
popa
add
jb
ins
cs
retf
in
ins
enter
retf
fs
(bad)
into
sub
mov
cs
mov
mov
ja
int
jmp
mov
es
mov
mov
bsf
adc
fsub
cmps
xchg
mov
das
or
jmp
add
sbb
lods
jmp
int3
iret
(bad)
(bad)
jmp
dec
or
add
fcom
pop
push
xor
push
js
popf
fistp
scas
adc
pop
sbb
dec
xchg
add
and
cmps
mov
imul
aam
aam
jmp
sub
mov
adc
ror
dec
ret
push
out
arpl
push
mov
or
mov
arpl
in
in
adc
(bad)
int
in
(bad)
(bad)
jmp
inc
xchg
xchg
pushf
in
cmp
inc
xchg
push
repz
or
dec
hlt
push
jb
outs
ss
mov
add
nop
and
stc
rcl
push
push
test
out
add
pop
xchg
in
das
in
iret
je
jl
das
fwait
xchg
pushf
js
adc
pushf
test
jb
adc
jle
adc
add
nop
inc
xchg
mov
pop
rcl
xchg
gs
cs
js
jo
cdq
outs
cmps
fnstenv
fistp
cs
popf
sahf
cmp
cmps
lahf
cmps
mov
rcr
mov
adc
jmp
aaa
jmp
pop
jecxz
ret
ins
addr16
clc
cmp
je
lock
push
inc
stc
(bad)
fscale
sub
std
(bad)
enter
adc
mov
push
dec
div
push
nop
push
call
popa
pop
add
push
or
into
or
sbb
pop
dec
clc
xor
sbb
es
fs
mov
and
adc
sahf
mov
fidivr
push
push
lea
inc
push
push
int3
mov
push
jmp
or
sbb
not
neg
pop
add
jb
stc
aam
dec
dec
jae
push
test
stc
in
pop
fs
or
xor
je
cmp
inc
mov
pop
inc
ja
and
pop
data16
test
jno
scas
ja
stos
mov
add
sar
ins
adc
sub
fcom
enter
mov
pop
fcom
pop
pop
(bad)
push
jb
pop
outs
add
inc
loope
loop
jecxz
jb
retf
in
jne
jb
out
ins
fwait
in
jae
jmp
paddsb
shr
out
jb
lock
dec
icebp
shl
xlat
repnz
pop
hlt
inc
cmc
psadbw
mov
mul
clc
jbe
stc
imul
mov
std
pop
(bad)
icebp
cmp
jmp
xchg
dec
dec
adc
jne
jmp
fcom
cmp
enter
cmc
shl
pushf
sub
add
pushf
shl
add
inc
jo
enter
fdiv
psllq
mov
push
call
xor
cmps
imul
ins
movs
stos
cmps
gs
loopne
mov
test
retf
lea
sub
push
inc
in
inc
jmp
nop
dec
and
pop
jle
xchg
sub
sar
imul
or
sbb
sub
in
sbb
cmp
aad
pushf
xchg
pop
repnz
add
xchg
xchg
dec
pop
cmp
add
or
sub
xchg
fstp
xchg
xchg
hlt
ret
and
je
push
jno
pop
out
inc
leave
sub
in
addr16
inc
pop
fsub
retf
mov
mov
es
pop
sbb
sbb
xchg
cmp
inc
out
sbb
lds
add
in
push
pop
enter
in
xor
ins
and
push
inc
cmp
pop
sbb
fs
es
(bad)
bound
bnd
popf
and
repnz
and
iret
add
in
nop
adc
xor
jmp
push
pop
or
or
push
adc
xor
pop
ds
leave
addr16
in
xor
in
push
repnz
out
sub
cs
in
inc
pop
inc
stos
push
pushf
or
or
add
in
xchg
int3
xor
in
mov
sbb
and
les
in
sbb
in
in
sbb
adc
in
add
jno
ss
std
push
adc
mov
or
cmp
fist
pop
lea
rep
mov
adc
inc
mov
mov
mov
loop
mov
loope
test
inc
and
or
xor
push
add
inc
popa
push
mov
push
mov
jge
push
adc
push
adc
js
sub
xchg
cmp
pop
or
sbb
inc
sub
xor
add
pusha
fcom
lods
mov
and
jae
adc
or
int3
(bad)
or
inc
shr
pop
cmp
pop
and
and
aaa
aas
sub
sub
mov
push
test
inc
cld
sbb
push
dec
inc
leave
rcr
xchg
call
out
ins
or
sbb
adc
stos
xor
(bad)
sbb
inc
adc
(bad)
je
xchg
cmp
jo
and
inc
test
xchg
lods
loope
xor
cmp
je
or
fistp
mov
push
std
pop
cdq
push
ret
sbb
push
into
cwde
loope
cmp
xchg
adc
and
xchg
adc
loop
push
adc
push
jo
inc
mov
fld1
pop
enter
adc
cmp
sbb
adc
fcomp
in
clc
repnz
enter
add
jns
gs
xchg
enter
int3
int
xchg
gs
into
iret
rcl
shl
xchg
gs
aad
xlat
xchg
gs
xchg
fcomp
fcmovu
(bad)
pop
xchg
gs
(bad)
loopne
loop
pop
xchg
gs
in
out
or
call
aaa
add
enter
out
or
xchg
push
adc
add
pop
fist
mov
in
adc
adc
or
add
inc
pushf
fldenv
popa
mov
daa
(bad)
gs
popa
push
push
outs
mov
retf
out
jmp
add
nop
(bad)
add
push
push
call
arpl
clc
cmp
push
push
jno
js
jp
ret
cmp
sub
leave
inc
js
cmp
shl
les
les
test
jne
push
inc
sub
pusha
cld
test
mov
data16
aas
jl
ins
mov
add
or
clc
addr16
cs
je
push
movs
mov
int3
outs
lods
push
sbb
mov
je
add
pop
clc
outs
mov
xchg
call
pushf
pushf
jno
mov
mov
xor
jecxz
mov
(bad)
jno
(bad)
popa
push
dec
jne
adc
lods
inc
cwde
cmps
and
dec
sbb
in
xchg
mov
sbb
jg
hlt
add
out
ss
call
sar
dec
push
xor
retf
in
out
push
jmp
push
mov
pop
xchg
add
clc
gs
xchg
sub
dec
xchg
gs
xchg
popa
jae
inc
jb
mov
jb
out
test
inc
gs
mov
nop
inc
mov
in
imul
pop
ret
push
(bad)
(bad)
(bad)
(bad)
enter
leave
mov
xchg
fs
int3
cmps
imul
imul
add
push
ins
clc
push
and
sbb
mov
xor
cmp
sbb
ins
mov
call
push
push
xchg
pop
test
pop
adc
pop
push
fcomp
pop
pusha
jae
sub
push
inc
outs
inc
push
adc
es
sbb
(bad)
(bad)
aad
or
dec
(bad)
jmp
sub
add
into
cmps
mov
and
clts
mov
mov
fld
xchg
mov
mov
sbb
ins
test
cs
push
inc
into
mov
pop
push
mov
or
fidiv
and
push
and
sub
ret
add
jecxz
cmps
add
mov
jmp
cmp
cmp
ja
enter
mov
(bad)
loope
add
and
gs
pushf
lock
push
push
dec
icebp
and
ret
sbb
add
idiv
pop
mov
and
xor
add
cmp
(bad)
adc
cwde
sub
jbe
and
push
fsubr
add
push
xchg
mov
push
popf
call
sub
jmp
push
inc
mov
neg
adc
fcomp
mov
jne
or
xor
push
xchg
or
and
rol
sti
mov
jl
mov
and
jns
jae
sar
adc
mov
add
cmp
int3
std
and
je
and
in
lods
or
fldenv
mov
call
enter
mov
xor
pop
and
push
aam
cs
mov
fcmovb
cld
push
aaa
sub
adc
(bad)
ins
pcmpgtd
pop
or
leave
and
jl
and
ret
ud1
in
or
inc
jne
dec
cmp
popf
int
push
push
ss
retf
xchg
or
sbb
ret
data16
add
push
shld
fsub
jnp
enter
and
pushf
adc
pop
mov
fucomip
add
popf
movs
add
mov
mov
push
loope
in
ja
inc
mov
fcom
add
(bad)
mov
popf
jne
fcomp
jmp
dec
or
jbe
xor
add
into
cmp
and
in
int3
fdiv
pop
sti
lds
inc
lock
arpl
pop
sbb
mov
xor
fs
cmp
inc
xor
test
fimul
push
fsub
sbb
push
mov
and
sar
movs
cmp
test
push
jne
jmp
xchg
ins
mov
fisttp
sub
loopne
ret
mov
rol
data16
pop
or
push
cmps
mov
pop
int
popf
ins
or
lock
sub
shr
dec
repnz
repz
cmc
jb
sub
leave
div
xor
outs
rcr
cli
sti
sbb
fxch
leave
cld
std
(bad)
aaa
call
cmp
xor
cld
dec
leave
ror
add
pop
add
push
pop
cld
ds
jbe
daa
dec
mov
imul
lock
jae
mov
inc
lahf
pop
jp
(bad)
and
mov
push
sbb
lds
std
xor
jmp
pop
and
jbe
jb
and
nop
daa
dec
ja
sub
sub
mov
addr16
nop
outs
outs
das
outs
push
push
xor
dec
es
push
scas
enter
push
xor
dec
add
inc
lock
mov
add
or
lock
je
(bad)
in
or
adc
int
push
shr
aam
ret
int3
add
push
in
popf
pushf
add
out
sbb
pop
imul
pop
or
mov
cmc
mov
push
jns
mov
icebp
push
call
fdivr
neg
lea
sbb
cmp
jo
in
dec
cmp
sub
inc
shl
xor
dec
mov
fild
sub
inc
push
inc
imul
xchg
out
fs
pop
and
pusha
mov
retf
inc
ins
push
imul
popa
cmp
fist
dec
cld
aaa
sub
pushf
pushf
pushf
xor
imul
ins
push
and
xchg
(bad)
(bad)
mov
mov
dec
sbb
pushf
pushf
sub
dec
xor
dec
push
mov
leave
rcr
mov
adc
mov
and
jne
mov
xor
push
call
push
popa
pop
pop
in
sti
in
or
add
add
mov
cld
call
call
and
test
pop
mov
stos
push
sub
push
xor
add
cmp
push
push
jne
dec
imul
mov
jo
xor
add
cmp
adc
lods
shr
outs
xchg
ror
and
sub
pop
popa
pop
mov
out
push
sbb
out
inc
pop
loope
pop
jb
or
and
mov
popa
push
dec
cmps
and
add
in
inc
mov
cs
cmp
add
aaa
inc
aas
push
enter
std
adc
mov
push
mov
push
lea
push
popf
cmp
adc
push
fild
lods
mov
xchg
jnp
jge
mov
pushf
vaddps
test
mov
push
mov
sub
push
jl
push
popf
enter
add
add
aam
cmp
pop
loopne
add
inc
cmp
add
jnp
sbb
xor
or
adc
fldenv
inc
sub
xor
or
or
jbe
data16
or
or
mov
les
aam
enter
inc
push
sbb
fdivr
pop
loopne
jb
loope
jg
les
xchg
movs
inc
(bad)
outs
(bad)
movs
pop
call
daa
dec
mov
retf
retf
push
int3
int
daa
dec
pop
inc
inc
into
iret
push
rcl
jnp
push
ror
stos
mov
test
xor
pop
ss
fwait
daa
jl
ror
(bad)
fidivr
pop
sbb
ret
add
push
loopne
pop
call
fdivr
push
loop
push
icebp
adc
xor
or
int
inc
pop
pop
in
movs
mov
add
js
inc
ret
and
mov
fild
sub
cmp
jge
adc
and
jp
mov
add
jecxz
shl
mov
add
fld
or
jno
adc
fstp
add
cmp
lods
mov
pop
cmp
push
lea
sbb
mov
push
xchg
sbb
push
call
add
mov
cmovl
(bad)
popf
lds
(bad)
mov
cmp
packuswb
test
imul
mov
loop
or
cwde
sub
pop
ror
in
ficom
lea
test
xchg
pushf
add
out
int
nop
mov
test
adc
sar
sub
div
or
cmp
mov
pop
aam
mov
push
or
fnsave
scas
pop
add
(bad)
imul
xor
ss
ss
int
ss
out
repnz
ret
(bad)
rcr
pop
fs
call
in
sbb
(bad)
stos
fwait
loopne
js
imul
scas
jnp
adc
mov
call
scas
int3
jmp
out
add
enter
inc
inc
pop
mov
in
dec
das
sbb
bound
mov
and
add
push
or
jne
mov
inc
std
pop
ja
cmp
pop
shr
inc
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
movs
imul
shl
cmp
ja
jb
mov
mov
cmp
jbe
dec
dec
popf
pop
add
or
cmp
sub
mov
and
imul
ss
mov
(bad)
or
out
lock
inc
cld
or
add
adc
xchg
push
mov
jge
or
sbb
push
inc
pop
add
test
ja
mov
sbb
inc
int
push
aas
ins
add
inc
dec
mov
pushf
push
add
mov
xor
call
mov
jne
cmp
jne
inc
or
cmp
jp
mov
or
jbe
stos
sbb
cmp
addr16
shl
rol
je
sub
jmp
push
lahf
mov
sub
jbe
jmp
add
aas
sbb
call
sub
popf
cwde
push
fcmovu
mov
dec
mov
mov
push
push
shufps
gs
test
aaa
or
sbb
pop
sub
fnstcw
pmuludq
leave
test
sbb
ret
retf
call
mov
scas
(bad)
or
imul
and
pop
mov
ret
nop
add
mov
sbb
cwde
add
or
(bad)
xor
adc
(bad)
inc
add
push
jnp
inc
or
add
aas
mov
add
push
xchg
adc
mov
mov
adc
inc
cmp
clc
xor
call
imul
(bad)
call
mov
mov
mov
sbb
jl
pop
and
dec
shl
add
cmp
out
cmp
aaa
cmp
jb
ins
mov
xor
(bad)
jmp
fldlg2
ss
adc
adc
push
popa
add
ins
sbb
sbb
imul
jae
push
pop
dec
xor
imul
and
daa
sub
xlat
in
call
and
outs
sub
pop
das
cmp
xor
xor
ss
sbb
cmp
jne
inc
mov
jle
push
rcl
mov
hlt
std
or
inc
pop
or
push
pop
mov
sahf
or
lock
ret
pop
inc
or
mov
dec
cwde
mov
dec
mov
mov
pop
aas
push
out
rep
mov
call
fs
or
mov
ror
pop
pushf
and
sbb
data16
sub
push
das
hlt
test
adc
shr
addr16
sub
sbb
rep
and
not
mov
xor
fld1
mov
int3
push
add
sbb
aad
mov
fild
add
es
not
pusha
sub
add
lods
push
push
pop
inc
ds
je
mov
in
cs
jle
mov
push
pop
pusha
ins
push
push
pop
dec
jne
push
scas
js
sub
popa
jl
mov
pop
pop
fistp
jb
dec
enter
inc
nop
dec
push
push
push
push
fcomp
loopne
dec
mov
sbb
add
xchg
dec
xchg
loope
adc
add
inc
bndstx
fist
adc
aad
and
push
bound
(bad)
call
push
adc
nop
and
sbb
ja
push
adc
ss
sbb
test
mov
push
xor
cmp
das
out
popa
mov
int3
in
inc
cmp
ror
mov
test
add
jne
inc
xor
arpl
xor
push
cdq
mov
mov
xor
sbb
jbe
mov
pop
add
sbb
test
ret
adc
jle
lock
lock
jne
push
sub
mov
cs
std
lds
push
push
inc
lock
xor
or
mov
and
adc
xor
ins
xor
scas
jmp
sti
ins
and
adc
adc
or
popf
push
int3
cmp
lock
adc
mov
pushf
xor
mov
out
push
xchg
clc
add
cli
loope
and
lds
int
shr
or
xchg
mov
inc
ret
test
outs
ret
retf
cmp
inc
mov
and
cmps
lahf
mov
or
fmul
inc
clc
in
aad
outs
retf
xchg
sbb
and
and
ds
add
and
mov
sbb
xchg
and
ror
push
popf
sbb
pop
adc
push
js
and
pop
sub
or
je
fild
retf
pop
sbb
ror
push
das
jg
sbb
(bad)
dec
sbb
je
lahf
imul
or
and
mov
push
ror
mov
adc
movs
mov
icebp
sub
and
or
lods
adc
mov
pop
cld
add
cs
mov
ret
sub
inc
push
adc
mov
lea
add
dec
retf
jne
dec
sbb
aas
push
push
daa
sbb
mov
and
mov
ret
dec
cli
push
jl
dec
ror
sbb
(bad)
fisubr
xlat
sub
fs
mov
lods
pusha
pop
cmps
aaa
xor
mov
arpl
add
xor
mov
jo
inc
mov
cmp
xor
mov
lods
jecxz
sub
clc
inc
push
call
or
xor
jnp
jl
dec
call
fidivr
push
jo
and
retf
push
fidivr
cli
mov
call
mov
in
mov
inc
(bad)
and
push
mov
call
aaa
cmp
cmp
call
scas
jge
std
cmp
add
cmp
xor
xor
pop
ss
sub
add
out
add
mov
ret
neg
push
adc
cs
push
or
out
pusha
pop
or
fidiv
sbb
ins
xor
cmps
jmp
sub
xor
xor
inc
pop
out
lods
cmps
and
int3
outs
prefetcht0
sbb
je
sub
outs
add
push
or
mov
sbb
out
jmp
test
jo
mov
cwde
mov
cld
mov
push
and
sbb
sbb
mov
lods
adc
or
cmp
push
sub
lea
cs
pop
cmp
sti
shl
adc
prefetch
enter
xchg
inc
int
sub
add
push
fwait
inc
stos
das
dec
and
push
sbb
jmp
movs
test
push
jmp
mov
push
aas
push
mov
rcr
sbb
popa
add
je
out
sbb
or
push
inc
add
inc
fwait
in
push
jne
out
dec
pop
outs
mov
in
xor
arpl
pop
push
and
mov
bound
pusha
push
cmp
sub
inc
cdq
mov
sub
stc
add
idiv
cmp
call
or
enter
push
push
mov
pop
add
push
push
xchg
js
call
or
xor
dec
fs
fisttp
shl
jl
imul
aas
xor
mov
cmp
jo
inc
sub
or
mov
ret
inc
add
inc
jne
mov
ret
xchg
and
jl
mov
or
mov
sub
jg
adc
add
push
sbb
test
xchg
add
ds
call
xchg
or
adc
adc
jmp
loopne
pop
cwde
test
fcom
cwde
jo
or
cwde
jmp
jne
out
or
push
xor
dec
add
out
xchg
sbb
pop
pop
jne
xchg
xor
in
ror
mov
sub
out
or
cld
xchg
mov
cmp
and
and
mov
push
or
pop
aam
pop
imul
mov
mov
xchg
ja
and
push
mov
adc
xor
sahf
or
cs
outs
xchg
xor
cmc
pusha
push
mov
rol
inc
cmp
jl
push
(bad)
scas
inc
add
sbb
fs
sbb
sub
sub
jmp
sbb
lds
jmp
fdiv
arpl
cmp
push
ins
call
and
sar
leave
cld
lods
pushf
sbb
or
mov
ror
ins
xchg
mov
fdiv
jl
out
test
and
dec
xlat
test
push
jle
js
sti
or
sbb
sbb
das
fcom
sbb
icebp
sahf
adc
mov
add
mov
cmps
(bad)
std
dec
push
stc
xor
cmp
pop
push
add
ror
lock
adc
jecxz
adc
shr
xlat
jmp
mov
push
call
push
lahf
xchg
dec
movs
fs
mov
stc
jle
jbe
jmp
lahf
call
push
push
ret
dec
out
movs
lea
(bad)
xor
sbb
fs
ins
sub
(bad)
jb
rcl
addr16
dec
sar
mov
cmps
test
mov
js
test
inc
mov
sub
jmp
jne
dec
mov
inc
sbb
(bad)
loope
jo
ret
pusha
mov
test
push
jle
iret
cmp
jl
jne
mov
fcomp
xchg
lahf
push
jb
cwde
shr
daa
add
push
push
push
xchg
and
mov
xor
mov
xor
mov
fs
xchg
ss
xchg
and
sbb
mov
fild
and
lds
adc
mov
repz
and
or
adc
fnstenv
fisubr
push
dec
inc
jne
call
mov
call
mov
xchg
cmp
popa
fs
inc
push
ja
jg
jmp
call
or
adc
inc
mov
xor
push
cmp
xchg
sbb
addr16
sbb
push
mov
call
xchg
adc
call
mov
lock
push
pushf
out
lods
fwait
add
add
pop
and
add
pushf
lods
and
lock
cmp
stos
dec
add
inc
and
cmp
sbb
mov
push
inc
mov
aas
jb
sub
jo
inc
jge
add
inc
mov
nop
fsubr
push
loop
imul
cmp
add
pop
clc
pop
xchg
ficom
push
push
push
cmp
sbb
cdq
inc
or
push
sar
call
adc
int3
jmp
sar
int3
add
inc
jp
icebp
sub
out
adc
inc
inc
adc
jl
mov
fs
xor
push
push
les
clc
mov
in
es
mov
cmp
sbb
cmps
mov
sbb
repz
adc
in
xchg
push
xor
or
sub
push
or
aas
aad
scas
push
and
or
fwait
pushf
or
lods
mov
pop
lds
mov
mov
jnp
and
xor
sub
adc
jb
loope
shl
je
sbb
xchg
cmps
jmp
push
inc
mov
out
daa
mov
sub
idiv
push
sbb
dec
daa
add
nop
dec
inc
mov
popa
int
dec
adc
fsub
sahf
mov
test
loopne
cmp
(bad)
test
fsubr
and
retf
or
sub
ja
aam
cwde
stos
pop
mul
test
ss
sub
int
fld
std
add
jb
jnp
sub
stos
fisubr
(bad)
mov
imul
and
sub
add
add
nop
es
mov
cmp
and
add
je
mov
jle
(bad)
(bad)
push
rol
out
imul
jb
push
push
fadd
adc
mov
sbb
loope
mov
aaa
mov
adc
mov
pop
xor
sbb
mov
jg
leave
mov
mov
mov
(bad)
pop
loope
sbb
aam
stos
js
sar
push
cmp
or
dec
aad
add
push
lods
pop
mov
pop
or
cmp
push
or
mov
inc
shl
imul
sbb
push
int3
mov
shr
in
add
add
dec
cmp
jg
mov
cmp
(bad)
cmp
push
test
and
or
adc
pop
and
sub
xchg
int3
push
push
popf
sbb
push
jae
mov
out
test
mov
enter
mov
aaa
into
xchg
dec
popf
inc
fs
pop
imul
cmp
inc
mov
adc
jne
sub
push
pop
call
inc
cdq
nop
pop
mov
add
repnz
fs
push
inc
or
js
in
mov
or
or
sbb
mov
mov
dec
lahf
iret
in
repz
xor
add
(bad)
and
imul
sbb
adc
fstp
sub
cmp
lods
(bad)
je
pop
mov
shr
and
and
xor
ins
jmp
push
cs
adc
pop
test
fdivr
test
pop
jmp
jmp
int3
pop
push
imul
add
mov
pop
cmp
inc
jle
rcl
jmp
out
lea
or
inc
mov
nop
call
add
dec
jne
pop
jmp
adc
test
pop
je
xor
mov
add
loop
push
shr
jnp
add
add
jnp
cmc
call
pop
xchg
xor
sbb
or
test
or
pop
or
(bad)
xchg
push
mov
ret
mov
dec
push
rcl
adc
invd
(bad)
inc
mov
sub
ins
clc
sar
adc
add
mov
sub
mov
mov
hlt
cmp
pop
rol
aas
inc
cmovb
adc
push
cmp
mov
push
test
dec
test
xor
scas
and
or
or
push
cmp
pop
data16
bound
into
fist
mov
mov
or
lea
push
sub
cmp
sbb
cmp
fs
xchg
inc
das
cmp
adc
pop
xor
xor
sub
or
jae
xchg
sub
xchg
lock
ins
push
jb
scas
and
fld
push
sub
(bad)
sbb
call
(bad)
adc
and
sahf
push
jno
movs
xor
sub
data16
aad
out
add
sbb
xor
push
xor
out
sti
push
stos
jge
add
mov
cmp
jno
and
pop
inc
ins
xchg
sbb
js
sbb
mov
movs
push
adc
xchg
adc
xor
sbb
cmp
test
fwait
(bad)
adc
mov
aad
test
push
xchg
pushf
and
call
mov
cmp
push
ins
push
jae
xchg
stos
adc
fwait
test
dec
jb
push
dec
(bad)
push
jle
jb
repz
arpl
inc
popa
adc
push
push
fcomp
mov
(bad)
fnsave
or
call
test
test
sbb
lock
ss
sub
and
call
and
adc
dec
mov
ja
push
rep
call
nop
sti
call
xchg
ss
and
aas
test
adc
outs
(bad)
int
cmovne
ficomp
adc
cmc
loope
dec
mov
mov
sub
or
in
add
and
inc
jp
inc
xchg
mov
add
sbb
push
xor
push
je
pop
mov
push
push
(bad)
scas
inc
pop
jb
in
jo
pop
in
or
sub
scas
outs
shl
cmp
sbb
js
lds
mov
add
mov
and
jmp
ins
inc
loop
inc
call
inc
cs
gs
ret
in
push
mov
retf
js
in
fwait
jne
fisttp
jmp
jo
mov
mov
ret
xor
push
jns
mov
lds
cdq
push
push
push
push
pushf
add
jl
mov
push
xor
push
sub
pop
dec
push
out
jecxz
inc
and
mov
daa
aad
push
out
push
sbb
sbb
sub
or
fdivrp
clc
mov
(bad)
repz
xor
repnz
sbb
loopne
add
sbb
push
and
test
movs
add
mov
shl
add
stc
jl
shr
loopne
lods
add
mov
and
shr
mov
dec
shl
dec
das
rcl
inc
jmp
or
das
movs
add
adc
pusha
push
xor
push
cmp
xor
jmp
jb
outs
ss
fdiv
and
movs
lods
mov
rcl
add
cmps
jl
imul
ret
sahf
add
adc
dec
jg
add
adc
push
cmp
adc
jmp
or
jae
sub
sub
mov
nop
inc
nop
xor
cli
and
lea
pop
ret
lea
mov
cmps
aaa
sbb
cmps
shl
and
test
add
adc
je
test
je
adc
or
outs
test
adc
lahf
or
push
(bad)
(bad)
(bad)
jle
xor
add
add
xor
lock
xor
or
loope
add
add
push
out
rcr
or
stos
jle
les
pop
xor
cld
cmp
je
popf
mov
cmp
cmc
test
je
adc
adc
fadd
aam
xchg
sub
fadd
aaa
push
std
cld
test
add
push
adc
mov
push
leave
inc
inc
xchg
mov
add
push
push
das
fucomi
jb
outs
add
inc
inc
jne
adc
(bad)
rol
fwait
nop
aaa
xor
popa
adc
mov
mov
and
sub
sbb
mov
addr16
push
push
mov
ins
adc
imul
add
lods
and
repnz
add
pop
gs
jne
or
xor
inc
bound
outs
or
or
push
inc
imul
sbb
push
adc
add
inc
push
push
gs
mov
ret
jnp
imul
cmp
adc
and
mov
mov
push
mov
jne
sbb
jae
xor
int3
mov
and
adc
outs
push
(bad)
sahf
inc
test
inc
icebp
bound
iret
data16
mov
pop
lock
fwait
adc
int3
ins
push
arpl
addr16
inc
je
imul
mov
movs
(bad)
bound
adc
dec
and
push
dec
mov
jle
inc
sbb
outs
outs
inc
ins
adc
sbb
popa
jne
je
dec
stc
push
mov
sub
gs
mov
pop
mov
cs
push
inc
int
int
push
ins
jo
mov
jo
fwait
jae
lods
cmp
sbb
fisub
dec
outs
imul
mov
popa
ret
inc
(bad)
adc
xor
int
test
inc
call
clc
adc
inc
mov
or
jae
sub
adc
push
inc
ins
loop
cs
add
and
sub
iret
add
cmp
mov
add
or
mov
jo
jae
lods
das
(bad)
pushf
loope
in
add
outs
mov
arpl
and
pop
arpl
sbb
dec
mov
pop
pop
lea
jo
call
or
hlt
or
ins
mov
pop
push
dec
sbb
imul
push
fldenv
call
mov
lods
mov
jb
jae
test
inc
jp
mov
lea
mov
xor
mov
repnz
iret
push
inc
pop
inc
push
inc
pop
dec
inc
pop
xor
or
fild
aam
pop
shr
jo
lods
data16
xor
xchg
pop
call
jo
sub
xchg
mov
outs
pop
jbe
icebp
into
je
into
pop
push
cwde
jb
jns
push
lods
in
js
out
mov
inc
dec
outs
cmp
and
imul
jo
ficomp
leave
push
sbb
in
push
pop
jae
mov
pop
gs
and
xchg
ins
dec
add
adc
or
adc
push
inc
dec
mov
ins
pop
xchg
fisttp
add
xor
pusha
pop
xchg
gs
or
pslld
adc
dec
add
add
add
lods
jns
repnz
add
mov
add
sbb
add
out
xchg
outs
push
pop
or
sbb
push
xchg
ins
pusha
xor
pop
push
add
cmp
push
add
pusha
adc
ins
mov
fs
push
aaa
fsubr
pop
ds
nop
nop
mov
imul
dec
aaa
fadd
fwait
mov
jg
sub
mov
add
add
add
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
