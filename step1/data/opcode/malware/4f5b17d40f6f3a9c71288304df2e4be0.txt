ror
add
add
add
dec
add
add
add
add
add
add
add
add
push
add
add
inc
add
add
add
add
cmp
add
lea
add
add
add
add
add
add
add
bound
add
lea
rol
add
add
add
add
add
add
add
rol
add
push
sub
add
sbb
push
add
add
adc
add
add
or
add
add
push
sub
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
and
and
adc
jae
add
or
add
je
add
add
sbb
jno
add
add
and
into
add
add
add
add
or
jne
add
add
fild
add
and
add
add
imul
add
add
jne
add
sbb
push
je
add
sbb
add
and
add
sub
add
fimul
adc
adc
inc
push
add
add
add
add
add
add
add
add
jne
add
add
adc
and
add
add
add
or
(bad)
sbb
stc
or
add
outs
add
add
fcomp
adc
adc
inc
push
add
add
add
ins
add
add
add
add
add
add
je
add
sbb
js
pop
sub
add
or
add
add
add
add
add
or
add
or
add
scas
add
add
add
pop
popf
sub
push
adc
sub
add
xchg
and
add
pop
sub
sbb
and
push
add
push
add
push
add
or
add
or
je
add
add
add
adc
add
add
inc
scas
add
add
add
xor
add
add
adc
add
add
pop
jle
add
add
push
sub
adc
adc
inc
add
add
add
add
add
sub
add
or
and
add
and
add
sub
adc
mov
inc
sub
add
push
and
add
add
push
add
sub
sbb
or
or
add
add
jne
add
add
pop
and
add
add
sbb
add
sub
add
sub
sbb
or
or
add
add
add
push
add
add
add
add
jne
add
add
out
inc
sub
add
push
sub
add
push
or
jne
add
add
add
add
mov
add
sub
add
sub
lea
add
add
add
add
add
add
push
add
add
sbb
ja
adc
or
add
fimul
adc
add
add
add
add
add
add
add
add
add
add
add
add
jne
add
add
rcl
push
and
add
add
pop
sub
pop
je
add
add
add
or
sbb
adc
adc
add
add
dec
pop
adc
adc
inc
pop
add
add
add
add
add
add
add
add
add
add
add
add
jne
add
add
rcl
push
and
add
add
pop
sub
push
jne
add
add
add
or
sbb
adc
adc
add
add
add
fild
add
or
add
adc
add
sbb
or
add
and
enter
sub
add
sub
pop
pop
xor
sub
push
inc
push
add
add
add
jne
add
xchg
add
add
add
scas
(bad)
(bad)
(bad)
add
add
add
sbb
and
add
add
lds
add
sub
add
push
mov
add
sbb
or
add
add
add
or
add
add
add
push
sub
add
sbb
sub
add
or
add
sbb
or
add
add
add
or
add
add
pop
adc
cmp
call
add
sbb
or
add
sub
fiadd
pop
adc
adc
inc
add
add
add
rol
add
push
sub
inc
dec
add
add
add
pushf
add
add
add
or
add
add
add
add
add
add
add
push
add
add
add
add
adc
add
fild
add
out
add
add
add
add
add
add
xor
add
add
add
adc
cmp
and
add
add
add
add
add
lea
push
sbb
mov
add
popf
push
pop
and
push
sbb
cmp
add
push
add
popf
push
sbb
sbb
sbb
data16
add
popf
push
push
and
sbb
add
add
or
add
add
add
add
rol
add
sub
xor
add
add
add
add
jle
add
add
push
jle
add
add
sbb
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
aam
add
or
mov
and
add
pop
or
int3
rol
add
add
or
add
and
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
push
and
add
add
add
add
stc
pop
add
add
or
push
or
add
jae
add
or
add
or
adc
push
jne
add
add
adc
add
fcomp
adc
adc
inc
push
add
add
add
add
add
add
add
or
add
add
add
or
xchg
and
adc
sub
rol
or
test
add
xchg
and
adc
sub
add
sub
add
add
add
push
add
add
add
add
xor
add
add
add
movd
add
adc
adc
add
add
add
add
add
add
add
add
add
mov
add
add
add
js
add
fadd
add
sub
add
xchg
add
add
add
lea
add
test
add
or
add
add
add
push
add
push
adc
and
(bad)
mov
push
sub
out
inc
popa
add
jle
add
add
or
add
and
sbb
pop
popa
or
(bad)
(bad)
(bad)
jle
add
add
add
add
pop
call
push
cmp
(bad)
call
adc
cmc
or
add
sub
je
add
sbb
add
add
add
add
push
adc
or
or
or
push
cmp
adc
add
adc
or
add
adc
adc
add
sbb
or
pop
xchg
adc
adc
cmp
(bad)
(bad)
call
or
pop
adc
push
pop
pop
pop
adc
and
inc
add
arpl
pop
adc
and
add
add
pop
adc
cmp
(bad)
(bad)
call
push
pop
and
adc
add
add
add
push
cmp
adc
sbb
add
xchg
and
add
pop
sub
adc
pop
punpckldq
or
add
sbb
or
pop
pop
adc
adc
pop
or
push
cmp
or
add
sbb
adc
pop
movlps
cmp
(bad)
call
add
and
add
adc
add
sbb
or
pop
pop
adc
pop
xchg
popa
adc
jne
add
sbb
or
or
pop
adc
or
popa
shr
add
or
adc
and
add
add
pop
adc
cmp
(bad)
call
or
pop
adc
adc
and
and
ja
add
push
cmp
(bad)
(bad)
call
or
pop
xor
sbb
push
cmp
std
(bad)
call
not
add
and
add
outs
push
add
or
add
add
add
pop
or
add
mov
sar
(bad)
dec
jne
add
add
add
adc
add
push
add
add
add
adc
add
add
push
jle
add
add
pop
sub
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
or
add
rol
add
push
es
or
add
sbb
add
add
pop
pop
push
popa
inc
add
add
adc
add
adc
and
add
add
pop
adc
pop
sbb
pop
sub
adc
pop
or
add
inc
mov
mov
add
sbb
pop
add
or
pop
or
add
inc
pop
pop
or
pushf
add
add
add
push
add
or
pop
or
xor
sbb
add
call
pop
and
add
xchg
and
jl
add
jmp
add
add
pop
adc
inc
sub
adc
inc
add
xor
add
add
add
add
adc
add
add
add
add
push
sub
add
or
add
scas
add
add
add
cmp
add
pop
add
add
add
add
add
add
add
dec
add
add
add
and
add
add
add
ror
add
push
adc
add
pop
adc
mov
or
or
add
test
ja
push
popa
inc
add
add
add
adc
xchg
push
sub
adc
adc
gs
add
pop
adc
jl
(bad)
jmp
sbb
add
or
adc
outs
(bad)
(bad)
inc
pop
pop
or
and
pop
or
push
pop
jbe
and
and
add
add
push
(bad)
(bad)
dec
sbb
add
add
mov
add
add
mov
add
(bad)
add
add
pop
sub
cmp
or
cmc
pop
je
add
add
adc
and
jbe
add
pop
adc
add
adc
pop
add
add
add
add
and
add
or
add
add
add
pop
popa
add
add
add
adc
or
add
je
add
add
sbb
push
add
add
add
jle
add
add
adc
add
add
adc
push
adc
inc
adc
add
or
add
rol
add
and
add
pop
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
out
add
add
add
test
add
add
add
or
add
es
adc
sub
add
add
adc
sub
add
test
add
or
add
or
add
pop
jne
add
add
jbe
add
and
add
sub
add
push
je
add
add
pop
pop
and
or
adc
add
add
pop
adc
cmp
call
adc
sub
add
xchg
and
mov
jmp
add
push
add
add
add
add
push
add
add
sahf
sub
add
dec
out
inc
sub
add
push
and
add
add
pop
add
add
push
add
sub
adc
xchg
add
add
pop
adc
cmp
(bad)
(bad)
jmp
sbb
or
add
sub
add
push
or
add
push
add
add
lea
add
sub
add
sub
add
adc
adc
cmp
add
pop
add
sbb
add
add
adc
or
add
xchg
and
add
pop
adc
cmp
sbb
add
adc
je
add
add
add
add
sbb
sub
add
and
add
add
adc
add
adc
and
sti
cmp
adc
pop
(bad)
(bad)
jmp
dec
bound
add
and
add
add
add
adc
adc
and
add
add
add
adc
das
(bad)
(bad)
inc
pop
pop
adc
pop
adc
cmp
(bad)
(bad)
call
push
jne
add
sbb
pop
(bad)
sldt
add
add
pop
add
pop
and
add
add
popa
rol
push
adc
cmp
std
(bad)
call
pop
pop
pop
adc
pop
adc
cmp
std
(bad)
call
pop
push
das
or
or
std
(bad)
call
adc
mov
add
xchg
and
sub
jae
add
or
or
push
je
add
sbb
add
or
pop
jae
add
or
or
adc
adc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
and
and
mov
adc
mov
add
add
or
add
push
adc
and
inc
add
add
adc
add
adc
je
add
add
or
add
sbb
adc
jne
add
sbb
add
and
add
add
add
and
adc
adc
sbb
pop
adc
pop
(bad)
(bad)
call
sub
ficom
adc
adc
inc
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
iret
adc
and
and
enter
sub
adc
je
add
add
add
or
sbb
sbb
sbb
add
add
add
xchg
add
add
add
add
add
add
add
sbb
add
cmp
add
add
add
jbe
add
and
add
jle
add
add
add
add
add
add
add
adc
jne
add
add
add
and
add
add
movs
add
add
adc
add
adc
pop
ds
cmp
adc
add
adc
add
add
pop
adc
sub
add
or
add
add
add
add
lsl
add
aas
add
add
adc
add
pop
push
adc
cmp
(bad)
call
add
add
movs
add
add
clc
add
add
adc
add
adc
adc
sbb
add
xchg
and
sbb
sub
(bad)
call
or
sbb
push
call
add
sbb
or
adc
add
adc
outs
sbb
adc
mov
add
xchg
and
xlat
add
pop
adc
cmp
(bad)
(bad)
call
push
pop
pop
adc
adc
pop
inc
xchg
and
add
sbb
aad
(bad)
call
push
adc
sbb
adc
iret
add
add
pop
adc
cmp
adc
sahf
add
add
pop
sub
pop
or
(bad)
(bad)
dec
jne
add
add
je
add
add
add
or
add
adc
cmp
(bad)
call
add
pop
add
sbb
jne
add
add
add
or
add
or
add
add
add
sbb
dec
(bad)
(bad)
call
or
cmc
adc
add
adc
add
add
adc
add
add
lods
adc
push
add
add
adc
add
adc
add
or
add
jle
add
add
push
jle
add
add
pop
sub
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
mov
or
add
es
adc
pop
adc
push
add
push
popa
inc
add
add
add
add
add
adc
pop
js
and
sbb
add
out
push
sub
push
or
adc
inc
mov
add
outs
and
add
or
pop
and
add
add
add
add
inc
mov
add
outs
and
add
or
push
pop
pop
xchg
and
fld
add
add
inc
pop
pop
or
in
add
add
add
or
add
or
push
pop
pop
xor
sbb
add
call
or
cmc
pop
adc
inc
sub
adc
inc
add
xor
add
add
add
add
adc
add
add
add
inc
or
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
or
add
es
or
sbb
add
pop
imul
inc
add
add
add
add
sbb
sub
or
or
add
and
add
or
or
pop
or
and
pop
sub
pop
or
call
or
neg
(bad)
inc
je
add
add
adc
inc
xchg
and
add
jle
add
add
pop
jle
add
add
pop
xchg
add
pop
pop
pop
sahf
pop
or
inc
add
xor
add
add
add
add
adc
add
add
push
jle
add
add
pop
sub
add
add
add
add
add
add
add
add
add
or
add
add
add
add
stos
add
add
add
add
add
add
or
sbb
add
pop
or
add
popa
pop
cmp
push
popa
inc
add
add
xor
add
adc
and
add
add
jle
add
add
or
add
add
or
and
add
add
sahf
pop
adc
call
sub
adc
sbb
(bad)
(bad)
inc
mov
and
add
or
(bad)
(bad)
inc
pop
pop
or
push
add
add
add
xchg
or
add
or
or
xor
adc
sbb
pop
adc
call
sub
pop
or
add
inc
jne
add
add
adc
and
and
add
pop
adc
inc
add
xor
add
add
add
add
jle
add
add
add
add
add
add
or
add
imul
add
add
add
add
imul
add
add
add
add
add
add
pop
add
dec
add
add
add
add
push
add
push
es
or
or
popa
pop
pop
pop
push
popa
inc
add
add
and
add
adc
push
xchg
and
add
add
add
jle
add
add
xchg
add
jecxz
add
pop
popf
pop
or
cli
adc
adc
add
add
cmp
jmp
adc
add
or
or
inc
pop
pop
or
and
pop
sub
adc
mov
add
xchg
and
or
call
sub
adc
das
xchg
and
add
pop
or
inc
je
add
add
adc
fadd
add
xchg
and
retf
pop
or
inc
add
adc
add
test
add
add
add
add
add
push
sbb
inc
or
add
push
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
push
or
adc
into
add
xor
popa
inc
add
add
add
adc
mov
add
add
add
in
adc
add
add
add
xchg
add
mov
add
sbb
or
add
outs
and
add
push
pop
pop
or
push
add
add
pop
jp
and
add
add
sbb
pop
xor
adc
pop
push
xchg
and
add
pop
adc
push
(bad)
(bad)
call
push
pop
adc
pop
sub
sub
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
sldt
push
sub
dec
(bad)
(bad)
inc
add
xor
fadd
add
push
add
adc
add
add
jle
add
add
add
or
inc
or
add
ins
add
add
add
push
add
add
add
push
add
add
add
add
add
add
add
add
add
add
or
or
int3
push
add
add
push
popa
inc
add
add
adc
add
or
fwait
add
add
pop
or
test
and
scas
add
pop
sub
sbb
cdq
add
add
outs
and
pop
pop
or
add
pop
push
add
sbb
adc
add
dec
add
add
add
cmp
(bad)
call
sub
sbb
pop
(bad)
(bad)
jmp
sbb
push
adc
inc
add
add
add
add
add
add
add
adc
add
sub
addr16
(bad)
call
xor
add
add
add
add
adc
add
add
push
jle
add
add
pop
sub
adc
add
add
jbe
add
dec
add
add
add
add
add
add
add
add
add
inc
add
add
add
rcl
add
push
es
or
add
adc
pop
cmp
add
add
add
sbb
popa
inc
add
add
push
add
add
or
add
and
add
add
pop
sub
adc
sbb
add
inc
add
add
or
adc
and
add
xchg
and
add
pop
adc
inc
pop
pop
or
into
add
add
add
add
add
sbb
pop
xor
add
add
pop
adc
call
sub
pop
je
add
add
adc
pop
ja
and
add
add
call
xor
add
add
add
add
adc
add
add
add
inc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
rcl
add
push
es
or
sbb
popa
pop
pop
push
popa
inc
add
add
push
add
add
add
pop
xchg
and
or
and
add
add
pop
sub
adc
adc
adc
add
xchg
and
or
inc
mov
mov
add
sbb
add
or
sbb
inc
pop
pop
or
pop
sub
sbb
(bad)
call
sub
sbb
inc
je
add
add
sbb
call
xor
add
add
add
add
adc
add
add
add
add
add
add
or
add
mov
add
nop
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
adc
add
es
or
sbb
popa
pop
or
popa
inc
add
add
adc
add
adc
mov
and
int3
add
pop
or
sub
adc
adc
add
pop
or
inc
mov
mov
add
sbb
add
or
sbb
inc
pop
pop
or
sbb
or
or
call
add
add
sub
sbb
inc
sub
or
inc
add
adc
add
out
add
add
add
adc
add
add
add
add
push
sub
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
mov
add
cmp
add
xchg
add
add
add
add
adc
add
adc
add
add
add
mov
or
or
add
test
imul
add
add
adc
xchg
sbb
push
adc
mov
mov
mov
add
sbb
add
or
push
adc
outs
(bad)
(bad)
inc
pop
pop
or
je
add
or
and
pop
sub
adc
pop
push
xchg
and
add
pop
adc
dec
(bad)
(bad)
call
sub
pop
or
add
ds
(bad)
inc
je
add
add
adc
and
and
push
add
pop
adc
and
(bad)
inc
add
xor
add
add
add
add
adc
add
add
add
add
push
sub
add
or
add
dec
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
adc
sbb
add
mov
add
mov
add
jno
push
popa
inc
add
add
push
add
add
or
add
mov
and
sub
adc
adc
add
pop
adc
jge
(bad)
inc
mov
sub
add
or
adc
imul
pop
or
and
pop
or
adc
push
(bad)
(bad)
dec
sbb
or
add
dec
(bad)
(bad)
call
push
and
add
xchg
and
imul
pop
je
add
add
pop
adc
sub
(bad)
inc
adc
pop
add
add
add
add
jle
add
add
add
dec
or
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
add
xor
add
rcl
add
push
adc
sbb
pop
or
sbb
popa
pop
push
push
popa
inc
add
add
add
or
cli
rol
add
sub
add
or
pop
or
add
sub
add
or
add
sahf
add
add
pop
or
inc
pop
jle
add
add
les
add
jle
add
add
les
add
xchg
jle
add
add
xchg
pop
pop
inc
pop
popf
pop
or
and
pop
sub
push
or
call
or
neg
or
inc
je
add
add
adc
push
and
add
pop
or
inc
add
xor
add
add
add
add
add
push
jle
add
add
pop
sub
adc
add
add
add
add
or
add
sub
add
cmp
add
add
add
add
add
add
add
add
pop
add
push
es
push
or
or
add
popa
pop
jg
push
popa
inc
add
add
add
adc
stc
push
or
push
pop
push
xchg
and
push
add
pop
adc
add
mov
add
sbb
sub
add
or
adc
inc
pop
pop
or
ror
add
add
add
sbb
pop
xor
adc
pop
cmp
and
jbe
add
add
call
or
cmc
pop
sub
pop
pop
push
xchg
and
adc
call
xor
push
add
add
add
adc
add
add
push
jle
add
add
pop
sub
add
add
add
add
add
add
add
or
add
mov
add
add
add
add
add
sub
add
add
add
sbb
add
sbb
add
sbb
add
popa
pop
push
pop
push
popa
inc
add
add
push
add
add
or
add
stc
adc
adc
and
add
add
pop
adc
add
mov
add
sbb
push
add
or
adc
and
add
add
add
inc
pop
pop
or
dec
add
add
add
repz
add
or
sbb
(bad)
(bad)
call
sub
adc
and
add
add
pop
adc
inc
jne
add
add
adc
and
add
add
pop
adc
inc
add
xor
add
add
add
add
adc
add
add
add
add
add
add
or
add
inc
add
add
add
add
add
jge
add
push
add
add
add
jbe
add
jbe
add
pop
add
add
add
jbe
add
sbb
add
rcr
add
push
adc
inc
xchg
and
add
pop
or
pop
or
popa
pop
dec
pop
push
popa
inc
add
add
add
or
cli
adc
adc
xchg
jmp
add
sub
add
outs
sub
add
or
or
inc
pop
pop
or
pop
sub
pop
or
call
neg
or
inc
jne
add
sbb
pop
or
inc
adc
add
aad
add
push
add
adc
add
add
add
add
add
add
or
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
je
add
jnp
add
rcr
add
push
es
or
sbb
popa
pop
pop
pop
push
popa
inc
add
add
add
add
sbb
pop
jl
and
sbb
add
lock
push
or
add
sub
push
or
inc
pop
pop
or
and
pop
sub
push
or
call
add
dec
clc
add
pop
sub
sbb
inc
jne
add
sbb
adc
add
add
cmp
(bad)
(bad)
inc
add
adc
add
add
add
pop
add
adc
add
add
add
add
push
sub
add
or
add
mov
add
je
add
sbb
add
mov
add
add
add
inc
add
add
add
add
or
add
mov
add
mov
add
push
add
add
sbb
add
es
adc
mov
sbb
and
out
add
pop
adc
scas
add
pop
ins
pop
push
popa
inc
add
add
add
adc
cwde
adc
and
add
add
add
in
and
add
add
add
add
pop
adc
jbe
(bad)
inc
mov
add
or
adc
and
add
add
add
add
push
(bad)
(bad)
inc
pop
pop
or
pop
or
or
add
inc
(bad)
(bad)
dec
sbb
adc
add
add
pop
adc
es
(bad)
call
push
and
and
sub
pop
sub
adc
or
(bad)
call
xor
add
add
jle
add
add
add
inc
or
add
add
add
add
add
add
add
adc
add
pop
add
add
add
das
add
add
add
add
add
add
add
add
add
add
add
rcr
add
es
or
sbb
popa
pop
and
popa
inc
add
add
add
add
push
or
cli
adc
sbb
sub
add
or
sbb
pop
pop
or
and
pop
sub
sbb
call
add
push
add
add
add
jmp
xchg
jmp
add
cmp
(bad)
inc
je
add
add
sbb
call
xor
add
add
add
add
adc
add
add
add
add
add
add
or
add
movs
add
add
add
add
add
sbb
add
add
add
pop
add
add
add
add
add
sahf
add
add
add
push
adc
xor
add
xchg
and
add
pop
or
sbb
popa
pop
jg
push
popa
inc
add
add
adc
add
adc
mov
add
xchg
and
xor
sub
add
add
pop
sub
adc
pop
or
inc
mov
xor
add
or
add
std
add
add
add
cmp
(bad)
inc
pop
pop
or
pop
sub
pop
or
call
add
add
add
xchg
and
sub
sbb
inc
je
add
add
sbb
inc
add
adc
add
test
add
add
adc
add
add
push
jle
add
add
pop
sub
adc
add
add
add
add
pop
add
add
add
add
add
ja
add
push
add
add
add
add
add
add
push
add
push
es
adc
adc
and
and
add
pop
adc
add
push
popa
inc
add
add
adc
add
adc
and
add
add
pop
adc
and
add
add
pop
sub
adc
sbb
add
inc
mov
add
xor
add
or
adc
inc
pop
pop
or
sbb
add
or
or
add
sbb
pop
xor
pop
or
add
call
sub
pop
je
add
add
adc
and
add
add
add
add
inc
add
xor
add
add
add
add
adc
add
add
add
add
push
sub
add
or
add
test
add
pop
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
rcr
add
push
adc
add
pop
adc
mov
or
adc
stos
add
popa
pop
xor
popa
inc
add
add
sldt
add
push
pop
inc
xchg
and
add
add
mov
add
adc
add
out
adc
sbb
add
jae
(bad)
inc
mov
xor
add
or
add
add
pop
adc
push
(bad)
(bad)
inc
pop
pop
or
pop
or
push
and
add
add
add
add
xor
(bad)
dec
sbb
or
adc
and
(bad)
call
sub
pop
jne
add
add
pop
adc
adc
(bad)
inc
add
xor
add
add
add
add
adc
add
add
add
add
push
sub
add
or
add
add
add
jle
add
jle
add
or
add
add
add
adc
add
sub
add
xor
add
pop
add
add
add
ja
add
add
add
and
add
sbb
add
mov
add
mov
add
pop
push
popa
inc
add
add
add
adc
mov
or
or
add
xchg
sub
add
or
pop
or
add
mov
pop
pop
or
and
pop
or
add
dec
retf
pop
adc
ins
(bad)
(bad)
dec
sbb
or
or
add
pop
(bad)
(bad)
call
add
out
add
pop
sub
pop
jne
add
add
adc
and
add
add
add
add
ss
(bad)
inc
add
add
xor
add
sub
cmp
add
add
std
jge
add
adc
add
in
add
jecxz
add
je
add
mov
add
dec
push
add
sbb
int
add
cmp
add
scas
add
xlat
inc
add
add
dec
in
add
jmp
add
sub
add
add
icebp
test
xchg
add
add
add
mov
add
or
add
add
inc
add
shl
add
mov
add
ins
pusha
add
js
add
into
dec
add
data16
add
push
loope
add
add
dec
dec
add
inc
dec
add
imul
add
pop
add
cld
push
add
push
retf
inc
loopne
add
xchg
add
ds
add
add
jle
add
dec
mov
add
mov
sldt
xor
add
jbe
add
shl
add
pop
add
and
add
imul
add
add
jge
add
imul
add
inc
fadd
add
repnz
stos
mov
add
lea
add
cdq
add
mov
add
xchg
add
add
loopne
add
mov
add
scas
fadd
add
out
add
ins
mov
add
add
add
xchg
add
xchg
pop
add
add
add
inc
add
xor
add
add
out
or
add
lods
add
xor
add
pop
add
call
add
xchg
xchg
add
xchg
add
jle
add
in
add
cmc
jb
add
mov
add
pop
or
add
pop
sub
add
pop
add
or
add
mov
add
jmp
dec
add
in
outs
add
and
add
mov
add
dec
cmp
add
cld
sbb
add
repz
movs
pop
add
jb
add
sbb
add
cli
lods
add
loop
add
mov
lods
add
test
add
(bad)
add
inc
add
mov
add
ins
add
or
add
leave
icebp
add
int3
jl
add
add
ds
add
cmps
clc
add
mov
add
loopne
add
in
sbb
add
add
pop
repnz
lock
add
pop
fadd
add
test
add
std
push
add
xchg
jle
add
pop
add
popf
add
jae
add
fst
add
adc
add
push
add
std
lds
add
add
mov
dec
add
cmp
add
lea
add
add
mov
fld
add
mov
add
mov
add
ret
add
add
pushf
mov
add
mov
add
lahf
aad
add
or
add
add
push
(bad)
add
adc
add
inc
add
push
cmps
add
repz
add
mov
add
pop
repnz
mov
add
jle
add
lds
add
dec
sub
add
and
add
and
add
xor
add
xor
aad
add
fild
add
pop
add
in
add
add
jmp
aaa
in
add
pop
push
add
xchg
test
add
cmp
add
fild
add
retf
cmp
add
pop
add
mov
add
add
add
scas
mov
add
sub
add
jb
add
lahf
add
std
add
add
add
js
add
mov
add
xchg
sbb
add
adc
add
dec
add
sbb
add
jmp
add
pop
add
data16
add
cdq
add
and
push
mov
add
test
add
ret
add
push
arpl
add
hlt
add
cld
rol
add
iret
add
outs
data16
add
add
sub
sbb
add
sub
add
movs
add
mov
add
sbb
add
call
add
in
add
push
and
add
cmp
push
add
jge
add
js
add
jp
add
add
xchg
out
add
fwait
and
add
push
add
xchg
add
add
cwde
cld
add
mov
sbb
add
mov
add
inc
sldt
jnp
add
je
add
and
jno
add
test
add
fisub
add
stos
mov
add
jp
add
icebp
add
mov
add
(bad)
push
add
dec
push
add
cmp
add
retf
mov
add
add
popa
sub
add
dec
in
add
jnp
add
pop
add
icebp
mov
add
addr16
add
nop
pop
add
retf
enter
inc
cmp
cmp
addr16
movs
bound
mov
push
test
sub
push
jb
imul
int
enter
jno
std
xchg
jg
mov
sbb
loop
cwde
xabort
lea
fsubr
gs
sbb
cmp
lea
jmp
dec
mov
and
inc
shr
mov
jbe
mov
adc
loope
jbe
retf
sbb
in
and
mov
sbb
lds
movs
mov
outs
pop
jmp
mov
add
jb
adc
lods
or
pop
test
cmp
jecxz
xor
jo
fcom
loope
ds
fnstenv
call
sub
mov
gs
sbb
and
or
dec
out
push
hlt
call
fscale
adc
test
xor
(bad)
pop
int
(bad)
cmps
loopne
js
pop
out
pop
and
sub
jne
ret
cmp
mov
(bad)
mov
in
les
adc
mov
jle
pop
xchg
jae
shr
loop
sub
jmp
stos
jae
mov
adc
aad
mov
cmp
xor
push
stos
pop
pushf
adc
cmp
iret
mov
sbb
push
xor
jno
or
cmp
xchg
sbb
gs
or
daa
dec
inc
lds
inc
add
stos
rcr
cdq
inc
sub
stc
(bad)
pandn
pop
jae
mov
(bad)
cmp
cld
out
test
ret
jge
sub
jns
daa
add
test
int3
iret
jbe
mov
lea
aam
sbb
outs
xchg
pusha
dec
popa
bound
test
iret
mov
jno
test
out
addr16
jle
mov
mov
test
jb
jmp
or
jo
sti
test
mov
xchg
adc
xchg
mov
cmp
rol
mov
push
call
test
inc
(bad)
call
fisub
(bad)
cmp
(bad)
stos
fs
mov
(bad)
jmp
rcr
shr
adc
adc
gs
jns
pop
mov
add
push
aas
shr
add
push
push
test
popf
addr16
mov
mov
xor
mov
jg
pop
movs
fwait
add
or
xchg
sub
cmp
xor
and
xor
les
scas
adc
pop
fild
sub
xchg
sbb
dec
stos
ret
dec
inc
outs
out
push
sub
push
or
pop
and
pushf
xor
aaa
outs
out
mov
pushf
(bad)
adc
je
test
dec
sub
jp
ret
jp
or
fistp
sti
add
fmulp
cmp
hlt
xlat
pusha
stc
pop
sub
repnz
cmp
sbb
outs
push
jecxz
jne
aad
dec
ja
xor
cmps
leave
ss
lahf
adc
mov
jmp
adc
mov
jae
clc
js
add
not
inc
ret
ret
pop
ja
sbb
jnp
jg
sub
(bad)
int3
cmps
xlat
mov
or
in
or
inc
outs
inc
xor
cmp
sahf
mov
mov
cld
stos
jae
adc
xlat
popf
rcr
xchg
cmp
cmps
or
jl
add
js
fnsave
gs
mov
lods
adc
push
mov
push
jge
mov
pop
mov
dec
scas
call
les
sbb
jl
xchg
inc
pusha
push
or
icebp
lock
enter
in
int3
mov
dec
mov
xor
mov
xchg
test
repnz
daa
inc
loope
mov
push
data16
mov
aam
rol
das
dec
hlt
imul
xchg
out
mov
add
int
xchg
push
jle
dec
shl
scas
mov
cmp
popa
sub
add
mov
sub
or
cwde
add
aas
xchg
jns
sahf
xor
cmp
mov
stos
in
in
aaa
pop
jns
out
repz
jmp
loop
push
aad
(bad)
scas
xchg
mov
xchg
cli
dec
and
cmovnp
in
inc
adc
adc
aad
outs
ins
mov
cmp
movs
inc
xlat
inc
sub
pop
pop
jo
popa
mov
ja
dec
movs
push
addr16
inc
jp
sti
inc
icebp
pop
xor
std
push
outs
push
inc
js
repnz
mov
dec
std
push
outs
push
inc
jne
inc
pop
cmps
ja
dec
stos
dec
lods
dec
xchg
pop
fisub
js
inc
popa
push
outs
jmp
in
call
dec
jp
mov
mov
inc
in
and
addr16
ja
out
jle
cmp
cs
sbb
xchg
and
xchg
es
xchg
popf
mov
fdiv
bound
jecxz
test
inc
out
dec
jle
out
retf
add
mov
mov
sub
shl
rcl
das
das
jmp
cmp
inc
sbb
jge
add
dec
or
xchg
mov
popf
nop
sahf
sahf
popf
adc
(bad)
xchg
ret
fimul
cmps
repz
loopne
lods
mov
jg
xchg
pop
(bad)
jp
dec
cmp
jge
aas
mov
(bad)
mov
jg
jne
push
pop
pop
and
jg
dec
movs
mov
push
sbb
scas
mov
dec
dec
fwait
dec
sub
mov
inc
and
rol
cmp
xor
dec
xor
adc
push
inc
and
pop
xor
cmp
mov
imul
push
push
rcr
xchg
mov
cli
cld
mov
jge
in
je
xchg
aas
push
adc
fist
sbb
pushf
jmp
pop
pop
mov
(bad)
fidivr
and
loope
outs
stos
test
sar
dec
ds
and
inc
or
cmp
aas
in
gs
add
push
add
pop
cmp
movs
mov
add
jne
and
retf
cs
mov
xchg
push
int
adc
call
(bad)
pop
ja
xchg
jne
inc
out
sub
xchg
div
std
fnsave
popa
push
data16
xchg
fdiv
fild
cmp
in
and
push
mov
fs
xlat
xchg
outs
pop
xchg
movs
mov
or
sub
mov
dec
cmp
adc
sti
int
call
lods
xlat
test
mov
call
xchg
in
ins
cmp
out
icebp
mul
in
std
out
pop
jecxz
mov
dec
push
inc
mov
jmp
pop
sub
mov
xor
push
adc
add
mov
ficom
ret
retf
int3
add
es
adc
mov
or
lods
add
hlt
(bad)
mov
outs
aaa
das
ss
daa
inc
scas
lock
cmps
push
mov
adc
or
test
imul
mov
paddsb
or
push
jb
pop
jae
mov
or
popf
jo
jp
xchg
xor
mov
loopne
jmp
cmps
out
cmp
inc
sbb
xchg
repnz
(bad)
call
xor
jl
mov
cmps
xlat
dec
jle
(bad)
jo
rcl
int
sbb
cmc
push
jmp
daa
pop
inc
ds
std
push
inc
aad
(bad)
int3
mov
adc
rcl
or
rol
mov
shl
nop
jp
add
retf
ja
jno
fadd
out
pop
jmp
dec
das
pusha
mov
sbb
out
ret
outs
cmc
mov
xlat
mov
cdq
fisttp
ret
jle
outs
sbb
retf
imul
mov
scas
mov
add
cmp
sbb
test
fsub
icebp
cmp
in
mov
or
xchg
test
out
scas
or
jb
pop
pop
call
mov
sbb
sti
or
mov
sub
push
out
mov
push
mov
data16
push
call
sbb
lods
push
cmps
dec
push
shl
mov
mov
(bad)
sub
cmp
jge
xor
scas
mov
loopne
jmp
inc
test
xor
mov
test
pop
dec
or
or
fbld
imul
sub
cmp
fbld
aas
lahf
jmp
sub
sbb
retf
scas
loop
sub
shr
push
xchg
(bad)
shl
call
push
test
and
cld
add
inc
push
xor
test
sbb
dec
ds
ins
retf
xor
jo
sbb
push
pop
mov
mov
ins
daa
bound
jmp
pop
jmp
(bad)
jns
push
(bad)
push
fcom
cmc
or
test
scas
sub
imul
(bad)
shl
xchg
aam
test
lds
inc
(bad)
cmc
mov
pop
sbb
movs
pop
sbb
lds
xor
sbb
and
popa
cli
inc
jo
pop
fidivr
or
ins
repnz
jno
jnp
test
in
int3
cmp
adc
mov
jecxz
loopne
push
les
xor
test
int
dec
aas
mov
and
aam
les
fst
dec
in
call
rsqrtps
cmp
outs
pop
shl
sahf
mov
cmp
adc
je
add
les
cmp
and
inc
cmp
shr
xchg
in
adc
movs
and
in
das
not
mov
push
jp
cwde
mov
aaa
clc
dec
std
jle
bound
mov
mov
mov
std
in
cld
cli
lock
mov
add
cmp
dec
xchg
addr16
cmp
xor
(bad)
mov
lock
xchg
xchg
sub
push
in
call
dec
imul
xchg
xor
jecxz
cmp
call
add
xor
iret
hlt
push
lds
ja
xor
shl
jmp
xchg
dec
aas
or
bound
pushf
dec
adc
je
ja
adc
and
mov
inc
lods
fld
dec
(bad)
je
inc
adc
jg
xchg
std
cs
in
or
dec
jb
sbb
xchg
imul
leave
mov
cmps
aaa
inc
and
jne
sahf
mov
shl
mov
xor
outs
and
repz
mov
rcr
jp
inc
lea
(bad)
pop
jle
pop
or
and
xor
dec
imul
mov
push
dec
out
in
push
mov
mov
xor
adc
pushf
dec
push
or
sub
and
cwde
sub
jae
inc
mov
mov
push
fs
dec
sub
adc
ret
ror
xchg
xor
sub
andps
push
and
dec
retf
mov
xchg
xchg
sbb
mov
aad
(bad)
push
(bad)
cmc
ds
arpl
sbb
jns
adc
test
loop
adc
push
out
mov
mov
into
cmc
or
cmp
fucomi
push
mov
sbb
or
call
aas
add
dec
sub
pop
nop
cli
xor
out
pop
ja
icebp
xor
mov
and
ret
lea
jg
sbb
fnstcw
enter
jmp
push
mov
jmp
aam
mov
in
lods
jg
movs
bnd
xchg
mov
xchg
pop
imul
je
push
push
movs
dec
aad
cmp
dec
and
push
push
gs
stos
jno
popf
add
ret
cdq
add
pop
adc
ret
and
imul
adc
sub
lods
fsub
adc
jo
popf
fadd
icebp
cmp
enter
cmc
adc
xor
(bad)
std
pop
sbb
fwait
xor
adc
test
lea
xchg
dec
shl
rcl
cmp
xor
ins
push
retf
mov
aad
frstor
push
lods
sub
pop
lahf
sbb
stos
in
push
xor
pop
fld
xor
repz
xchg
add
cmp
dec
jmp
pop
dec
in
sub
xchg
sbb
lahf
(bad)
aam
inc
xchg
inc
push
and
stos
xchg
mov
jp
ds
jmp
cs
jne
popf
(bad)
mov
cmp
or
adc
jmp
pusha
mov
push
jmp
js
fstp
sbb
retf
and
arpl
cmp
fwait
sub
push
mov
ins
xor
fs
fs
int
pop
pop
dec
cmp
(bad)
sbb
push
mov
cmp
mov
push
cmp
call
sbb
sar
jno
std
loopne
arpl
loope
adc
inc
or
pop
inc
sahf
cmp
xchg
mov
std
add
lock
add
or
dec
(bad)
sbb
jge
pop
jmp
fisub
sahf
xchg
mov
fisttp
cdq
push
xchg
call
cmps
xchg
outs
mov
(bad)
mov
sbb
out
dec
loopne
int3
stc
push
into
xor
jg
arpl
mov
cmp
test
jl
jecxz
aam
mov
jne
xor
dec
jle
clc
test
repz
mov
mov
iret
cmps
dec
sub
and
mov
das
hlt
xor
call
add
shr
dec
inc
fcmovb
or
xchg
ror
xchg
fimul
mov
lods
mov
adc
push
xor
sub
rcl
adc
cmp
add
scas
mov
in
cmp
into
cmc
addr16
xchg
cs
jnp
scas
push
jo
pushf
xor
repnz
mov
mov
fst
loope
cwde
pop
out
dec
mov
(bad)
mov
mov
cmp
mov
aas
mov
loopne
or
add
enter
int
adc
push
pop
test
push
push
sbb
ja
ins
test
add
sub
out
aad
mov
xlat
pusha
lock
lahf
jo
gs
(bad)
jl
fucomi
test
aad
jne
xchg
lea
push
adc
cmp
cmp
in
mov
pop
aad
jo
mov
out
je
cli
xchg
pop
xchg
rcl
out
mov
xchg
dec
xchg
pop
in
xor
fdivr
in
and
test
mov
xlat
jmp
pop
push
sar
data16
dec
mov
xchg
pop
sar
and
out
nop
or
ins
not
(bad)
or
sub
mov
dec
je
rcl
mov
cmp
into
or
cmps
inc
pop
adc
pop
arpl
cmp
shl
pushf
out
lock
out
jo
ret
lods
or
ja
fistp
outs
and
pop
lods
mov
test
push
loopne
inc
mov
cmp
cs
fbstp
jg
push
push
arpl
mov
ficomp
jp
into
ins
push
mov
mov
xchg
in
iret
adc
shl
push
fisubr
mul
lahf
and
pop
(bad)
out
and
dec
lea
cwde
mov
mov
jl
out
sub
stc
scas
push
pop
mov
or
data16
and
pusha
leave
xor
loop
push
rcl
xchg
pop
icebp
sub
jmp
xchg
pushf
adc
mov
xchg
jae
dec
lods
mov
ror
outs
into
mov
fistp
sbb
inc
ins
sbb
adc
lahf
mov
enter
mov
nop
push
pop
pop
cdq
sbb
xchg
in
aaa
jmp
or
dec
add
inc
mov
pop
pop
push
dec
jge
dec
mov
sub
and
pop
out
cwde
mov
(bad)
scas
mov
cmps
xchg
sub
jno
into
call
rcr
in
add
sub
retf
mov
jns
lods
sub
add
outs
pop
jge
mov
xor
xor
idiv
pop
aaa
dec
jns
pop
pop
mov
ss
jb
mov
sbb
or
(bad)
cs
push
and
adc
jmp
mov
xor
cmps
xor
mov
add
(bad)
push
pop
(bad)
xchg
fsubr
imul
pop
je
outs
bound
pop
nop
into
push
sbb
popa
adc
in
adc
cmp
push
jb
mov
xchg
sbb
cmp
sub
jmp
dec
mov
dec
sub
xor
or
rol
cmp
mov
jns
fnclex
mov
mov
cmp
ret
inc
sub
jl
adc
push
call
xchg
je
bound
scas
inc
sub
adc
xor
icebp
cld
in
(bad)
lods
mov
popf
jecxz
cmc
sbb
(bad)
xor
pop
push
lds
loopne
std
ds
jl
dec
mov
jg
popa
lods
dec
out
xor
test
mov
cmps
jg
mov
in
jns
sbb
shl
jge
dec
adc
pop
retf
jp
sub
popaw
addr16
xchg
mov
mov
or
jno
rcl
push
cld
repnz
into
xor
mov
shr
mov
xlat
xor
cmp
fucomip
movs
push
fwait
inc
rcl
outs
and
inc
lahf
cwde
dec
lock
addr16
sar
lods
sbb
cmp
clc
scas
sub
scas
imul
push
inc
sti
test
or
adc
imul
sbb
inc
outs
fwait
out
mov
div
mov
lods
stos
call
mov
push
mov
int3
jo
aas
inc
fstp
jg
ss
jge
jmp
push
icebp
int
in
push
movs
mov
jnp
lahf
cwde
cld
and
into
dec
ret
mov
lods
xchg
sbb
xchg
(bad)
pop
arpl
push
push
rcr
outs
std
sub
aam
ins
test
outs
jns
std
mov
mov
fwait
in
sbb
jae
and
jo
lods
add
out
xor
or
popa
in
int
lahf
(bad)
repz
std
adc
out
lds
pop
aas
popa
test
fs
xchg
xor
adc
enter
(bad)
loop
push
push
mov
cmp
add
jge
je
mov
js
aam
cmp
jns
pop
(bad)
cmovl
daa
(bad)
(bad)
int3
ficomp
(bad)
jge
call
(bad)
sbb
inc
and
psubusb
cdq
dec
test
sbb
(bad)
adc
xchg
fadd
jns
stos
rol
cmps
or
or
cdq
pop
enter
adc
and
or
addr16
inc
in
add
mov
push
jl
nop
mov
adc
jle
push
pop
lea
lea
test
or
pop
jo
sbb
neg
mov
test
enterw
cmp
repnz
daa
mov
mov
ret
add
dec
sub
jnp
and
sub
cmp
enter
inc
dec
call
daa
aad
xchg
adc
cld
les
int
outs
(bad)
pop
mov
cmp
hlt
inc
ficom
js
cmp
ins
(bad)
mov
popa
mov
push
inc
sub
pop
aaa
push
dec
or
fs
aas
aaa
test
test
xchg
aaa
loopne
fild
icebp
mov
sbb
leave
inc
(bad)
add
test
inc
(bad)
into
add
in
jmp
sbb
push
xchg
fcomip
jns
arpl
data16
ficomp
outs
aas
mov
out
pop
sub
jmp
aad
inc
ins
cs
and
pusha
repnz
in
dec
out
scas
cmp
cld
jl
sbb
sub
sub
dec
jl
ja
xor
and
cmc
gs
adc
or
imul
ret
xchg
out
adc
dec
cmp
or
lds
call
bound
and
mov
ss
push
in
fidivr
mov
add
in
or
test
sbb
outs
xchg
fwait
mov
daa
rcr
sbb
pop
sbb
movs
mov
mov
stos
ja
push
mov
retf
outs
mov
jbe
movs
ret
mov
add
mov
call
std
sahf
repz
repz
pop
add
fcomp
addr16
ja
jl
add
jmp
loop
rcl
dec
mov
xchg
or
pop
pop
call
xchg
mov
test
add
jnp
push
cmp
sbb
popf
aas
jae
(bad)
push
fisub
sbb
ret
inc
inc
(bad)
int3
mov
xor
lock
mov
daa
loopne
add
jb
(bad)
cmp
jl
push
outs
aas
jne
mov
ret
xor
or
jae
add
dec
or
add
push
mov
cli
add
xchg
or
xor
popa
or
bound
jmp
cld
cmp
mov
retf
lods
jmp
aam
add
iret
lea
or
popf
lods
pop
jo
dec
mov
popf
nop
jns
imul
jnp
mov
sbb
fcomip
shl
rcl
push
sbb
into
jno
sub
les
ret
cmp
mov
pop
outs
xor
rcr
shl
jecxz
push
aas
in
loope
xchg
cmp
rol
mov
mov
mov
loopne
bound
pop
and
sub
bound
jle
popa
data16
imul
(bad)
test
mov
sub
iret
adc
adc
xor
sub
xor
add
xlat
xchg
std
pop
outs
aas
out
ror
or
call
xor
mov
cli
popa
shl
mov
idiv
cmp
pop
dec
sar
push
sub
add
pop
pop
aas
movs
repz
cli
sub
cs
sub
not
and
dec
nop
test
pop
mov
leave
sub
mov
fsub
sbb
loope
mov
xchg
push
sub
(bad)
(bad)
sub
bound
addr16
ret
pop
sub
enter
xor
not
adc
fwait
mov
fisubr
adc
aas
pop
and
cwde
add
shr
sub
jae
call
sub
mov
or
xchg
push
into
cmc
stc
pop
je
inc
and
loope
ss
loope
(bad)
jns
cmp
imul
pop
push
fbld
aas
or
(bad)
sbb
scas
repnz
push
rol
inc
pushf
add
pop
jb
adc
daa
idiv
fisttp
or
retf
jle
pushf
push
xor
sub
cmp
addr16
cmp
xor
add
ja
dec
mov
adc
sbb
fcmovnb
push
loope
and
inc
sub
mov
sub
out
push
out
jns
idiv
mov
cdq
pop
jecxz
(bad)
sar
sbb
jnp
and
pop
xchg
jmp
cmps
jg
sub
mov
add
test
add
mov
pop
and
icebp
push
push
scas
arpl
dec
rcl
sbb
xchg
inc
sub
inc
adc
lock
arpl
fdivr
scas
out
jg
ds
inc
fistp
xor
mov
fnsave
cmc
dec
or
js
(bad)
cmp
jmp
mov
rol
fs
xchg
mov
or
pushf
add
xor
ins
adc
adc
jmp
stos
f2xm1
aam
and
(bad)
test
rol
movs
scas
jp
mov
stos
mov
in
(bad)
(bad)
mov
jge
inc
fsubp
xchg
in
inc
add
sub
pusha
scas
mov
push
cld
pop
lds
dec
imul
xchg
add
scas
jno
mov
or
pop
fsubp
add
retf
jl
push
fsubr
test
mov
inc
pop
(bad)
jno
pusha
scas
jae
leave
xchg
(bad)
jbe
push
or
nop
cmp
xchg
add
mov
dec
mov
imul
imul
call
call
jle
nop
cmp
jno
iret
loope
push
(bad)
mov
jmp
jno
cmp
push
xchg
out
sbb
inc
jmp
loop
data16
ror
pusha
or
lahf
push
loopne
repz
out
loopne
mov
lea
cmp
cmc
pop
addr16
push
pusha
stos
cdq
dec
retf
mov
inc
or
xor
pop
stos
pop
jecxz
call
in
mov
(bad)
mov
sbb
cmp
ds
mov
mov
in
mov
cmp
cmp
mov
jne
pop
dec
(bad)
shr
xor
das
imul
mov
jmp
call
iret
push
sub
or
jae
stc
stc
pop
xor
pop
loopne
std
xor
in
mov
mov
loop
jne
aaa
(bad)
lahf
jmp
(bad)
mov
mov
xchg
push
movs
ss
adc
mov
mov
out
popa
test
mov
cli
hlt
ret
mov
out
lahf
add
int
mov
jno
cmp
xchg
movs
mov
mov
(bad)
pusha
inc
xor
inc
mov
jmp
xlat
mov
in
daa
or
sbb
repz
pop
push
retf
(bad)
push
call
outs
cmp
fcmovnu
mov
lods
or
push
addr16
mov
retf
jg
push
xchg
std
outs
test
sbb
sub
jg
cmp
aam
test
loopne
test
and
mov
shr
mov
dec
fistp
jns
adc
stc
push
jne
lds
cld
push
push
aam
mov
enter
or
(bad)
cmps
fmul
aaa
mov
rcl
movs
adc
aaa
mov
adc
and
lods
xchg
cmp
dec
pop
jg
cmp
into
cmp
add
pop
mov
or
adc
sbb
aas
ins
ficom
outs
and
adc
sub
js
pop
sbb
ds
cwde
(bad)
jb
(bad)
dec
or
adc
or
in
mov
sub
mov
inc
cmp
jecxz
cmp
jno
movs
xor
jnp
lea
mov
mov
fmul
call
xchg
cmp
ins
add
test
fbld
jg
lahf
push
cmp
mov
and
pop
or
int
adc
cmp
out
pop
clc
ds
mov
(bad)
js
les
xchg
adc
jmp
js
scas
lahf
test
mov
or
add
push
xchg
sbb
test
sbb
fwait
movs
stos
pushf
bsr
(bad)
ja
test
sbb
mov
mov
dec
test
outs
fcmovne
mov
out
and
xchg
ds
push
pop
or
mov
in
xchg
bound
fsubr
ins
xor
test
ret
stos
(bad)
fwait
sub
pop
mov
movs
fwait
sbb
push
and
in
sub
push
ins
inc
jb
in
imul
arpl
sti
int
push
popa
call
cmps
sbb
loop
adc
cmps
pop
out
out
xchg
xchg
nop
mov
cmc
mov
in
cmp
(bad)
sahf
in
xchg
sub
jb
push
jge
inc
sti
div
dec
inc
jmp
loopne
push
in
and
mov
mov
fst
fs
add
add
js
xor
mov
imul
inc
test
pop
test
or
sbb
jno
out
data16
cwde
repnz
and
psubb
cmp
mov
ja
jbe
mov
inc
xchg
cwde
jne
or
test
wrmsr
mov
lahf
jne
xchg
sbb
pop
adc
jmp
or
and
outs
pop
mov
add
jo
out
aas
adc
leave
mov
js
fnclex
rol
sub
sti
sar
add
fnstcw
fcomip
bound
(bad)
aad
jbe
adc
fimul
inc
dec
call
ins
adc
fist
das
rol
xchg
movd
xchg
push
jg
xchg
int3
dec
(bad)
imul
je
jbe
and
ret
hlt
aaa
das
xor
sbb
add
repnz
pop
loope
fisttp
dec
fs
call
xchg
bound
pushf
pop
cmp
imul
rcr
push
ret
pushf
inc
add
movs
dec
hlt
mov
jno
cmp
inc
inc
rcr
hlt
imul
div
iret
or
add
sahf
call
push
xchg
(bad)
(bad)
jnp
inc
and
packssdw
call
ds
adc
in
sub
push
jmp
xor
fwait
adc
shl
mov
pop
lahf
push
xchg
xchg
fsubr
mov
popa
movs
pop
jo
dec
in
les
les
mov
jnp
sub
jmp
rcl
mov
mov
and
or
pop
test
add
test
pop
jne
cdq
jmp
shr
fidivr
or
scas
mov
in
fidiv
test
out
lds
xchg
and
jb
inc
add
xchg
test
inc
ret
inc
cmps
lods
test
jp
pop
sub
ret
imul
adc
push
leave
sbb
adc
push
push
pop
aaa
add
scas
dec
xchg
fimul
scas
lahf
repnz
and
scas
movs
int
jl
fcom
cli
(bad)
sbb
adc
xor
xchg
inc
inc
clc
push
sar
jmp
push
push
add
(bad)
dec
xchg
cmc
rcr
add
cmp
fldcw
sub
mov
and
pop
push
fnstsw
fcmovbe
stos
pop
pop
dec
into
ror
outs
mov
fmul
xchg
pusha
pop
cmp
fisub
sbb
loop
sub
neg
retf
sbb
test
mov
stc
dec
int3
lahf
jecxz
dec
or
pop
lds
mov
pop
jp
xchg
pop
aaa
add
clc
imul
xchg
pop
pop
sbb
cmps
popa
mov
sub
vmread
shl
dec
repnz
dec
and
add
push
mov
fidiv
dec
cwde
adc
mov
sub
nop
sub
xchg
sbb
cmp
inc
xchg
cmp
adc
in
imul
or
mov
push
iret
mov
mov
jmp
movs
call
ror
lods
push
or
int3
mov
dec
cwde
xchg
push
nop
sbb
scas
rcr
repnz
add
jl
ins
xlat
aam
cmc
scas
inc
mov
jb
popa
(bad)
int3
jl
lds
sub
sbb
sti
sbb
sub
sub
add
pop
mov
movs
fst
push
mov
lods
push
push
or
xchg
xor
pop
jb
mov
or
jno
and
stc
inc
ficomp
ret
(bad)
mov
repz
fstp
xchg
inc
sbb
push
or
push
pop
sbb
xor
xchg
mov
mov
out
jl
sahf
call
in
stc
mov
jnp
push
jge
sub
out
int
jge
repnz
pop
sub
fidiv
(bad)
aam
or
xor
push
pop
xchg
mov
cdq
cs
shl
xchg
pop
jo
xchg
xor
or
outs
sub
aas
ins
dec
je
mov
jb
cmps
fsubr
pop
jmp
daa
sub
mov
adc
in
cmp
jle
mov
xchg
push
mov
(bad)
out
popa
ja
mov
adc
cld
pop
pop
add
outs
sub
aam
mov
mov
sub
sar
push
mov
shr
xor
sbb
inc
adc
(bad)
sbb
fwait
cmp
lahf
xchg
mov
cdq
inc
jbe
jp
pcmpgtd
jecxz
jae
pop
jl
hlt
fsub
adc
out
mov
aas
int
pushf
iret
ja
adc
jb
push
mov
mov
test
gs
les
lods
and
and
mov
lods
cmp
sar
sahf
fwait
jno
jl
bound
mov
scas
shl
int
jge
test
xchg
cdq
mov
push
or
js
fcomp
retf
push
jmp
hlt
and
pop
aad
in
mov
sub
popf
add
add
dec
ror
icebp
sub
inc
cmovb
dec
push
sahf
adc
retf
fnsave
and
cld
sahf
ins
enter
cmps
arpl
sub
nop
cmps
jg
loop
push
sub
in
push
jnp
mov
add
out
dec
push
push
int3
inc
(bad)
jns
ret
vrcpss
pushf
(bad)
push
inc
xor
imul
push
mov
sub
pop
and
scas
nop
pushf
push
jl
mov
outs
and
pop
fnsave
bound
and
pop
or
imul
xchg
pushf
jg
retf
mov
les
or
xchg
repnz
movs
mov
push
(bad)
mov
sbb
test
jp
jl
sbb
in
cld
in
loope
sub
cdq
call
mov
out
xchg
aas
inc
adc
xor
add
push
cmp
mov
pop
dec
xchg
rol
fwait
xchg
sub
(bad)
pop
jmp
aas
test
aaa
pop
int3
mov
ja
and
sub
inc
lds
daa
call
xchg
mov
pop
mov
inc
sub
repz
les
(bad)
hlt
lock
ss
and
clc
mov
cmps
jo
clc
outs
pop
sub
das
dec
adc
leave
(bad)
std
inc
not
call
inc
int3
xlat
movs
les
(bad)
call
out
loope
jae
in
loope
add
jmp
out
sti
movs
dec
aas
cld
xor
out
in
mov
fmul
data16
mov
jp
jge
and
leave
mov
fld
and
xor
out
dec
fadd
dec
leave
ret
gs
stc
icebp
push
daa
aam
not
out
pop
jno
movsx
jmp
add
sub
cmp
pop
sbb
(bad)
jns
jp
jmp
mov
setge
out
(bad)
add
cmc
mov
fs
dec
pop
repz
lock
shl
dec
cmp
or
je
cmps
jl
call
repz
test
pop
or
inc
das
das
sbb
push
add
inc
sar
xor
fadd
test
jmp
pop
aas
iret
ficom
les
imul
test
xchg
pop
in
fdivr
pop
cdq
adc
inc
dec
jle
adc
fistp
test
and
cmp
mov
aam
xor
sbb
ja
push
lods
std
and
(bad)
js
inc
out
out
loope
xchg
mov
inc
xchg
or
mov
out
mov
scas
mov
inc
mov
dec
add
pop
scas
retf
sti
jbe
fist
xchg
and
popa
add
and
xor
cmps
vpcmpgtw
or
mov
pop
mov
pusha
pop
(bad)
mov
scas
scas
clc
test
sti
push
idiv
movs
fcom
mov
nop
jo
es
xlat
jg
cld
sbb
or
pop
das
das
rol
fisubr
iret
js
mov
add
sbb
test
cmc
push
mov
movs
xlat
add
dec
adc
dec
fstp
dec
xchg
ret
mov
ss
(bad)
pop
fucomip
lds
cmp
(bad)
scas
mov
fcmovu
outs
jo
dec
mov
xor
inc
xor
test
(bad)
(bad)
mov
fadd
push
mov
popa
outs
dec
mov
sbb
dec
and
xor
xchg
xor
mov
imul
shl
xor
cdq
out
mov
popa
arpl
fwait
push
and
retf
fld
aas
or
adc
jmp
test
es
sbb
shr
mov
push
out
jmp
pop
fist
test
mov
inc
out
shl
stc
(bad)
aam
dec
adc
mov
in
mov
xor
mov
imul
inc
cmps
cmp
mov
xlat
adc
adc
add
addr16
in
xor
cli
add
inc
cdq
mov
scas
in
fs
stos
push
pop
movs
hlt
mov
mov
push
movs
adc
(bad)
jns
adc
mov
shl
adc
inc
jp
xor
(bad)
clc
clc
sub
xchg
scas
jnp
ds
cmp
arpl
enter
fdivr
fimul
in
dec
in
imul
jno
add
push
es
imul
xor
pushf
popf
out
repnz
les
xlat
das
(bad)
test
adc
mov
adc
fldcw
sahf
xchg
lds
movs
mov
mov
data16
mov
imul
sbb
jmp
cmp
scas
sub
pop
shl
push
jge
sub
adc
jnp
scas
into
popa
mov
jg
out
ins
mov
or
aad
popa
push
scas
es
cmps
dec
adc
mov
in
cmp
retf
ins
rcr
sub
jnp
push
mov
into
pop
movs
xchg
jb
aam
add
loop
shr
shl
lock
stc
popa
cli
jg
frstor
add
xbegin
rol
push
and
xlat
fxch
inc
enter
sbb
daa
mov
(bad)
sar
push
push
inc
and
retf
lea
push
sub
es
inc
stc
fidivr
mov
jmp
fsubr
fdivr
lds
mov
push
cmc
test
mov
ror
aas
mov
inc
jmp
lock
mov
sbb
jg
data16
pop
fstp
adc
aad
pusha
fcmovnbe
aaa
mov
rcl
sbb
sub
hlt
mov
add
fistp
add
sub
or
mov
mov
aam
jne
dec
aad
inc
xchg
shl
dec
icebp
into
(bad)
repnz
push
inc
pop
retf
or
scas
pop
inc
jae
jbe
movs
fs
iret
movs
or
bound
push
(bad)
mov
mov
sub
xchg
jns
lahf
add
jl
inc
inc
sahf
arpl
push
pusha
and
xchg
jnp
xlat
mov
push
pop
adc
cmp
sbb
or
mov
ror
push
mov
xor
sub
cwde
ds
xchg
adc
arpl
ss
xchg
cmp
adc
mov
cmp
adc
icebp
adc
mov
in
icebp
sbb
jo
and
inc
lock
mov
xchg
cmp
push
arpl
mov
ror
mov
retf
cwde
push
test
stc
mov
push
add
jmp
xlat
xor
mov
sbb
inc
pop
pop
sub
push
ja
xor
inc
stc
push
ds
call
fild
mov
pushf
not
push
add
fadd
cmp
mov
mov
leave
xor
outs
push
xchg
or
pop
leave
push
or
sbb
mov
fbld
dec
inc
fidivr
rcr
adc
xchg
or
int3
cmp
xchg
mov
js
ja
nop
dec
int3
inc
sub
sbb
shl
dec
xor
pop
bound
je
pop
fwait
sbb
or
pop
(bad)
adc
cmp
jge
xchg
mov
add
or
push
scas
hlt
xchg
sub
jbe
enter
jmp
mov
call
jl
inc
adc
clc
xchg
jp
mov
jle
fdivr
lods
sub
into
retf
adc
add
inc
and
sahf
mov
mov
out
and
popa
pushf
int3
pop
jbe
push
std
mov
mov
ret
pop
inc
jmp
push
mov
hlt
xchg
imul
repnz
jg
push
icebp
and
outs
mov
mov
inc
adc
rol
dec
and
cmp
mov
push
pop
push
dec
ins
nop
stc
sbb
out
add
and
inc
int3
dec
cmp
jae
fwait
inc
mov
aaa
into
lods
lods
cmp
adc
sub
(bad)
or
cmps
(bad)
call
repz
and
arpl
xor
test
inc
or
mov
push
icebp
push
es
adc
fmul
add
inc
push
and
jg
mov
sub
arpl
lea
jmp
jno
rol
loopne
and
test
and
rcr
and
mov
or
lea
jno
add
mov
mov
mov
sub
scas
pop
add
sbb
lods
(bad)
scas
pop
mov
push
into
xor
adc
push
jae
push
clc
loopne
push
dec
icebp
jmp
jno
pop
cmp
cmp
pop
aas
jp
mov
lahf
pop
mov
fisub
and
stos
and
in
lahf
cmp
stos
lock
imul
es
jnp
adc
sbb
les
or
ins
call
add
fs
test
or
xor
mov
out
mov
pop
bound
loopne
sti
xor
push
addr16
inc
cmp
shl
mov
cmp
fst
push
aas
push
pushf
xor
or
jo
enter
or
cmp
sbb
fsubr
call
test
jmp
sbb
enter
fidiv
mov
in
fsub
push
push
cdq
retf
inc
aas
push
mov
das
popa
sbb
int
xchg
jmp
call
push
and
jle
cld
and
adc
aad
pop
mov
(bad)
cli
dec
ja
test
adc
aas
call
ins
mov
fs
loopne
loop
push
lea
pop
std
sub
mov
xchg
push
fild
fcom
dec
xor
dec
dec
das
jecxz
add
push
fisub
dec
not
dec
inc
lods
pop
sbb
jge
lods
loope
push
dec
movs
ror
mov
inc
mov
dec
pop
mov
and
jle
cmp
out
repz
pop
test
fwait
and
std
arpl
xlat
inc
in
mov
xchg
(bad)
cmp
jle
xchg
push
xor
mov
cmp
cmp
adc
push
stos
dec
popf
(bad)
cmp
iret
rcr
fst
pminub
xor
or
xchg
cmp
inc
or
jge
sbb
mov
mov
(bad)
jb
adc
inc
push
dec
mov
mov
mov
and
fbstp
arpl
push
in
in
fiadd
adc
mov
lock
dec
les
adc
pop
and
mov
cmp
pop
pop
xor
add
jb
mov
jb
xor
cmps
dec
add
mov
je
ret
inc
or
rcl
xchg
adc
xor
ins
sub
inc
mov
cmc
retf
ja
or
aas
popf
aam
dec
rcl
scas
(bad)
mov
fdiv
cli
dec
bound
sbb
daa
fsub
pushf
ror
cwde
adc
jmp
jecxz
jg
mov
dec
retf
xchg
fisubr
and
rcl
retf
pop
sar
outs
loopne
mov
clc
xchg
add
xchg
imul
push
add
popa
adc
mov
jmp
mov
stos
arpl
sub
xchg
mov
movs
sub
mov
mov
push
inc
aaa
add
dec
sub
jecxz
xor
das
mul
das
retf
mov
adc
stc
or
xor
rcr
lds
clc
jmp
das
xchg
scas
daa
jns
inc
inc
xchg
into
mov
ror
pop
sub
inc
call
add
add
dec
cmp
jecxz
ins
ret
movs
lods
shl
adc
in
jo
lock
fist
mov
(bad)
mov
push
pop
add
ins
dec
cmp
push
push
fcomp
outs
xchg
push
inc
mov
push
dec
sub
fsub
retf
push
and
adc
enter
pop
mov
adc
inc
es
rcr
dec
sbb
mov
or
in
mov
ret
add
test
dec
mov
mov
repnz
test
jb
and
mov
arpl
cwde
mov
or
mov
in
or
inc
add
das
mov
sbb
loope
repnz
sbb
add
enter
jge
adc
aad
into
pop
shr
mov
jmp
outs
xchg
jle
inc
sbb
push
sbb
dec
dec
gs
bound
ret
mov
lfs
clc
data16
nop
or
mov
push
pusha
adc
int3
dec
mov
call
aas
mov
aad
dec
cli
sub
daa
retf
scas
jmp
imul
jle
cmp
cs
or
mov
out
aad
pop
jb
jecxz
mov
daa
ins
sti
jb
loop
xor
leave
sar
xchg
xor
mov
sub
leave
fimul
jb
cmp
loop
retf
aad
fcmovb
(bad)
test
or
fstp
pusha
push
mov
scas
sub
jl
aam
test
mov
sbb
push
jno
int
mov
jg
mov
or
outs
push
js
pop
sub
lods
imul
push
jnp
fldcw
(bad)
(bad)
mov
js
(bad)
xchg
movs
stos
scas
retf
in
dec
test
adc
(bad)
mov
push
add
jmp
(bad)
cmps
push
jns
movs
out
mov
stc
enter
sbb
shl
and
pop
aas
mov
jecxz
sub
rol
jnp
pop
sti
fcom
cmp
jecxz
adc
outs
adc
add
jmp
pop
mov
mov
hlt
cmp
inc
jmp
pop
dec
pop
pop
pushf
imul
sbb
inc
cmp
push
mov
pop
mov
lea
movs
inc
xchg
mov
hlt
js
sub
mov
or
fldlg2
sbb
jbe
or
jg
rcl
fisub
and
into
jmp
mov
sub
test
out
outs
dec
iret
test
inc
(bad)
mov
mov
adc
lds
push
jbe
or
sub
jg
bound
cmps
cmp
lahf
aad
mov
xchg
test
mov
jl
add
mov
in
or
outs
add
mov
das
loopne
rcl
clc
inc
xor
aam
loop
(bad)
movs
cld
pop
shl
nop
sub
mov
sbb
mov
mov
into
cwde
(bad)
mov
mov
xor
(bad)
sti
scas
fld
sti
push
inc
push
adc
ret
retf
push
cmps
mov
scas
dec
jmp
addr16
(bad)
cmc
jmp
popa
rcl
pop
mov
jp
cmp
(bad)
dec
es
int
lods
xchg
xchg
mov
pop
fimul
adc
xchg
rcr
mov
adc
in
arpl
fcomp
ret
jmp
pop
fsubrp
xchg
(bad)
nop
loope
cmps
fidivr
movs
cld
xor
jne
adc
daa
repz
inc
pop
in
sbb
pop
repz
adc
and
mov
dec
jp
std
data16
cmp
add
mov
das
jns
pop
dec
inc
fs
jmp
pop
imul
lahf
push
lods
scas
leave
cwde
mov
fs
out
inc
pop
xchg
push
push
adc
pushw
push
sbb
je
test
inc
rol
jge
call
xchg
cmp
xchg
fsub
cs
cmp
jg
in
fs
ins
fidiv
out
inc
mov
mov
dec
bound
idiv
lods
jo
mov
sbb
hlt
arpl
jg
data16
xor
imul
fneni(8087
sbb
or
shr
and
fld
xor
pop
jae
cdq
or
jb
scas
inc
xor
mov
xchg
sub
sbb
(bad)
call
or
jo
popf
fucomp
mov
inc
mov
adc
sbb
bsf
in
inc
stc
lods
pop
jnp
ds
sbb
imul
jb
aaa
dec
movs
and
inc
arpl
sbb
std
outs
dec
aaa
xchg
jg
sub
add
sbb
scas
loope
inc
mov
dec
mov
(bad)
loopne
xchg
test
dec
repnz
fimul
mov
jnp
icebp
push
push
dec
in
hlt
xor
or
call
pop
and
clc
inc
and
(bad)
outs
ja
sbb
rcl
mov
call
imul
rcl
add
dec
les
dec
pop
cmp
ret
pushf
popa
mov
inc
int3
push
sub
mov
pop
mov
mov
cwde
ja
cld
push
pop
sub
movs
mov
xchg
in
push
add
test
dec
add
jle
int3
xchg
repz
inc
mov
xchg
mov
stc
loope
(bad)
mov
add
ret
movs
scas
addr16
push
mov
and
popf
pop
(bad)
pop
sbb
hlt
xchg
jp
sbb
cli
mov
sbb
cs
xor
sbb
cmp
pusha
or
xor
mov
dec
call
add
pop
(bad)
and
jp
mov
lods
dec
in
push
ror
enter
int
lea
jae
cmp
xchg
or
out
ret
mov
or
fcomp
and
loopne
add
xor
dec
in
retf
jg
sub
ftst
(bad)
out
cdq
add
inc
or
add
(bad)
adc
push
sub
je
mov
fs
pop
into
pop
outs
es
jmp
outs
and
pop
dec
cmp
dec
jns
jle
adc
retf
imul
inc
xor
aam
jb
xor
std
or
in
mov
lds
call
repnz
cwde
test
(bad)
es
pop
dec
pop
push
xor
ret
call
xor
sbb
out
push
popf
js
int
xlat
jmp
sub
mov
jmp
outs
jmp
add
lods
cs
and
xor
std
dec
pop
fstp
ins
pop
sahf
xor
cli
push
aaa
aad
out
(bad)
aaa
repnz
pusha
repnz
call
adc
sbb
xor
rcr
pop
arpl
cmc
dec
cvtps2pi
imul
or
sub
ds
stos
mov
lock
retf
stos
mov
pop
add
ret
cmp
add
inc
stc
mov
mov
lock
sbb
mov
dec
ds
lock
mov
add
repnz
pop
(bad)
(bad)
loope
std
ffreep
dec
adc
stos
ja
test
movs
ror
pop
inc
add
dec
fisttp
js
xor
pop
xor
add
xchg
imul
xchg
xor
js
push
outs
mov
cwde
ror
sub
add
jo
push
retf
ret
cdq
push
or
push
jecxz
pop
loop
xor
sub
add
sub
add
push
out
repnz
pusha
scas
je
test
xor
jmp
not
mov
ret
pop
scas
push
push
imul
jle
cmp
popa
test
shl
sub
leave
push
cmp
sub
or
cmp
jl
cmovb
cld
(bad)
jge
aaa
test
into
mov
push
jge
cld
sbb
shr
xchg
aaa
jnp
push
in
je
inc
call
push
pop
lods
dec
out
jp
jle
jmp
push
dec
add
ins
jbe
(bad)
dec
mov
cmc
mov
mov
outs
ss
jmp
pop
enter
pop
or
xchg
ret
xchg
jmp
mov
sti
mov
mov
jecxz
inc
test
mov
inc
xor
outs
repz
pop
pop
mov
xchg
in
push
rol
jmp
jmp
int
mov
xchg
sar
mov
rcr
sub
pop
enter
arpl
aaa
fisubr
xor
clc
fucomp
rcr
push
dec
loope
mov
mov
xchg
push
dec
pop
popa
cmp
rcr
loop
push
ins
pop
inc
add
aas
push
cld
or
mov
or
mov
sar
ds
(bad)
mov
loopne
cmp
cmp
stos
push
retf
nop
fdiv
fiadd
fsub
xor
dec
push
pop
mov
sbb
jbe
and
in
scas
and
fdiv
(bad)
call
sub
mov
mov
jmp
fiadd
jns
fcom
mov
pop
add
std
retf
push
add
cmp
daa
pop
enter
pop
and
nop
cmps
or
movs
xchg
dec
pop
inc
je
mov
mov
shl
mov
xchg
or
pop
sub
test
test
or
and
unpcklps
sbb
addr16
jno
sbb
jb
aas
push
or
movs
mov
inc
mov
lods
inc
pop
dec
sbb
sbb
pop
dec
in
das
add
mov
and
sbb
fwait
(bad)
aas
dec
jns
inc
into
sahf
lods
repnz
fnsave
shl
cmc
fwait
icebp
fld
pushf
pop
(bad)
out
dec
outs
mov
mov
adc
cmp
lea
mov
pushf
enter
pop
mov
les
into
push
jo
jno
adc
pop
(bad)
fmul
cmp
xchg
push
jmp
cdq
add
neg
push
dec
jns
call
sub
loop
push
adc
mov
pop
in
xchg
(bad)
xchg
loope
daa
(bad)
xchg
push
push
bound
mov
or
sbb
pop
jle
loop
lods
or
push
jg
shl
add
std
xchg
adc
xchg
out
ss
pop
or
push
jne
mov
inc
sbb
jbe
or
dec
fidivr
and
cwde
leave
stos
add
out
mov
jl
cdq
call
scas
mov
nop
popa
aad
sub
loope
ret
dec
test
jle
scas
cmc
adc
jns
mov
stos
sub
call
sbb
addr16
mov
mov
jbe
call
jle
scas
mov
mov
push
and
xor
scas
and
mov
(bad)
jns
into
adc
(bad)
push
(bad)
in
pushf
aad
mov
or
mov
fcomp
sub
cmp
lods
test
inc
ins
inc
xor
into
ja
retf
and
xor
ret
push
pop
test
pop
add
jne
inc
jle
cwde
(bad)
pop
dec
mov
aad
and
fimul
pop
jne
fisub
mov
push
lea
loop
xchg
jns
cmp
cmp
int3
sbb
mov
fst
(bad)
cli
push
push
mov
fucomip
mov
sub
add
inc
xlat
arpl
rol
and
or
outs
repz
jmp
xor
mov
retf
loop
imul
dec
pop
(bad)
stos
sbb
scas
dec
idiv
in
jge
mov
push
cmps
pop
mov
loopne
and
xor
xchg
mov
add
adc
retf
adc
sbb
pop
cmp
xchg
pop
pop
cmp
cmp
jne
xchg
out
in
inc
shr
pop
inc
xor
call
retf
sahf
push
inc
jle
adc
pop
addr16
cs
cwde
pop
push
or
(bad)
mul
pop
pusha
mov
lods
mov
push
out
xor
imul
mov
out
wbinvd
add
mov
push
or
cmp
rcr
mov
xlat
xchg
xchg
pop
cmp
call
dec
xchg
inc
fucomi
imul
pop
dec
mov
dec
mov
cmp
push
push
mov
cmp
std
push
test
scas
push
js
sbb
test
pop
jmp
jno
xchg
(bad)
mov
rol
test
xchg
ss
pop
lahf
sbb
pushf
sti
lea
and
sub
imul
cmp
sub
es
(bad)
sar
mov
faddp
je
or
or
adc
cdq
dec
sbb
js
(bad)
lds
fdivr
push
mov
lods
sub
icebp
xor
test
inc
pop
sub
or
cmp
add
inc
xchg
arpl
sub
(bad)
mov
fldenv
add
or
cmp
out
cmc
ror
aam
dec
push
xor
sub
pop
fcmovnbe
mov
xchg
jnp
push
xlat
mov
sti
cmps
in
sahf
jg
imul
mov
movs
lds
fbld
sub
and
ret
xor
sbb
fcomp
push
fsub
stc
push
xlat
outs
lock
mov
dec
psrld
arpl
inc
(bad)
sti
ficomp
dec
add
add
xchg
ss
iret
mov
hlt
out
out
ret
ins
call
cmp
pop
adc
ror
mov
arpl
mov
xor
push
jae
cld
sub
neg
push
out
jl
jle
(bad)
xchg
mov
out
sahf
lods
push
inc
(bad)
lock
lahf
(bad)
mov
push
sbb
inc
cwde
adc
outs
mov
jp
out
mov
sub
cwde
outs
(bad)
hlt
inc
shl
fld
sub
lea
cmp
loop
loope
arpl
pop
cmp
push
lock
cmp
scas
inc
jo
inc
push
add
fstp
pop
fld
lods
adc
inc
sub
sub
(bad)
xchg
jecxz
lock
rol
adc
jmp
and
fadd
call
mov
iret
jmp
imul
and
xor
xchg
dec
xchg
sbb
addr16
add
scas
mov
xor
pop
scas
icebp
inc
movs
test
mov
fisubr
hlt
outs
ins
push
loopne
mov
ror
enter
(bad)
pop
rcr
and
sub
mov
test
mov
xchg
popf
loopne
jecxz
int
jne
jo
and
sti
add
idiv
xor
adc
mov
push
cdq
jmp
or
les
pop
mov
inc
inc
xlat
movs
mov
enter
(bad)
(bad)
jecxz
jp
(bad)
stc
ror
and
sub
es
inc
int
and
cdq
(bad)
xlat
into
test
rol
jbe
inc
adc
adc
add
loope
bound
and
dec
call
cld
xor
jbe
adc
(bad)
dec
jp
test
mov
adc
mov
scas
scas
pushf
jo
and
cdq
stos
mov
scas
xchg
jns
and
test
adc
sub
(bad)
jns
scas
jg
imul
movs
ror
sti
rol
push
adc
test
dec
pop
lock
ret
sub
ret
mov
mov
fwait
adc
pop
aaa
dec
retf
mov
(bad)
movs
dec
cmp
stc
jo
popf
adc
xor
pushf
shl
ret
repnz
cld
add
add
jmp
in
push
idiv
mov
push
and
push
rcr
jecxz
and
xchg
ret
or
out
push
and
sbb
or
dec
into
lds
adc
dec
jp
imul
xchg
xor
xor
xchg
mov
push
hlt
(bad)
xchg
add
(bad)
cwde
mov
add
in
fwait
jnp
es
jmp
jmp
in
popa
aam
aaa
jecxz
dec
inc
stc
sbb
and
push
call
push
xor
xchg
fsub
mov
gs
mov
mov
call
push
enter
mov
fsub
call
push
adc
xor
out
je
in
fmul
xchg
mov
imul
iret
in
aad
loopne
pop
dec
inc
pop
push
jl
push
adc
sub
xchg
xchg
test
icebp
mov
repz
mov
(bad)
outs
je
and
or
jo
mov
inc
xchg
sub
and
mov
and
xor
retf
jmp
int
jmp
xlat
and
sub
sar
add
ja
pop
pop
pop
fidiv
test
pop
push
jmp
sbb
ds
loop
xchg
das
es
jbe
cmc
ins
(bad)
jp
sbb
pop
cmps
sub
jne
or
scas
loop
ins
jmp
push
popa
lock
mov
xor
push
ins
mov
adc
pop
daa
movs
or
cwde
loopne
inc
jno
cld
sahf
add
push
sbb
outs
bswap
cmp
sbb
nop
inc
sub
hlt
jle
repz
and
in
addr16
mov
test
mov
and
pop
cmps
adc
sar
call
pushf
aas
sahf
dec
leave
inc
jo
lods
and
or
or
sbb
ret
icebp
jg
daa
retf
dec
jno
xchg
inc
sti
es
mov
xor
(bad)
into
jo
inc
push
nop
test
ins
cmp
clc
mov
pop
ret
xor
push
xchg
inc
repz
iret
xlat
xchg
repnz
rol
lods
jbe
xlat
push
push
mov
mov
cmc
lods
sub
mulps
jnp
call
out
sub
mov
data16
add
inc
cld
xlat
dec
in
mul
int
mov
aaa
cwde
mov
mov
push
cld
mov
ss
lods
aas
sub
ret
scas
or
xchg
inc
sub
loop
jl
popa
push
sar
in
mov
popf
mov
ret
enter
inc
repnz
sbb
push
data16
retf
in
arpl
push
jge
pusha
repz
jle
stc
ret
out
scas
dec
fwait
pop
ror
gs
mov
cmp
mov
jp
pop
mov
rcr
inc
inc
ins
adc
cmp
sub
lds
xchg
jl
daa
das
inc
or
jo
pop
jmp
out
mov
call
lods
js
push
retf
imul
mov
and
push
or
mov
icebp
jmp
push
sbb
iret
arpl
fsubr
lods
repnz
jg
or
xor
int3
in
ins
mov
dec
xor
push
not
ins
addr16
jmp
imul
scas
cmps
pusha
iret
(bad)
cmc
inc
ret
call
cmp
and
inc
fucom
mov
idiv
cli
jmp
sti
adc
cmp
add
das
bound
out
ds
nop
jae
ret
pop
call
stc
mov
adc
lea
stc
cmp
popa
pop
add
ret
mov
add
xchg
xor
jnp
lea
in
sbb
std
outs
or
adc
pop
jge
xchg
arpl
lods
push
retf
dec
cmp
sub
add
cli
xor
push
push
jno
inc
adc
mov
psrld
lods
fwait
add
inc
pop
or
out
in
jmp
repnz
retf
out
clc
(bad)
neg
outs
fs
bound
or
fcmovnu
dec
sub
lods
lahf
push
mov
push
not
sbb
and
xchg
xchg
test
and
rcr
rcl
sbb
pop
add
xchg
inc
xchg
push
and
repnz
or
fnsave
cld
mov
ret
or
iret
ja
push
nop
hlt
js
in
or
out
jnp
dec
inc
inc
or
pop
adc
daa
aas
iret
in
leave
leave
mov
(bad)
out
mov
inc
hlt
cmp
ds
dec
inc
imul
push
scas
sub
mov
scas
mov
and
xor
gs
add
imul
imul
xchg
mov
dec
(bad)
mov
sbb
pop
movs
push
add
pop
aas
(bad)
sahf
push
ss
shl
pop
xchg
push
xlat
mov
mov
adc
pop
pop
data16
pop
out
stc
push
push
test
and
cmp
mov
sub
daa
inc
jmp
movs
pop
arpl
jb
pop
jno
call
outs
ds
jne
loop
cwde
dec
push
xchg
scas
ja
or
ror
aad
fdivr
dec
lahf
pop
dec
push
jnp
cmp
jge
mov
jle
xor
out
out
es
xchg
dec
cmc
lods
adc
test
(bad)
lock
jo
adc
aad
inc
cs
adc
shl
adc
dec
hlt
fwait
leave
cld
dec
popa
das
movs
repnz
ret
pop
popa
xlat
mov
add
addr16
fwait
data16
movs
sbb
adc
cmps
jmp
dec
fcmovnu
push
pop
jo
or
fisttp
data16
cmp
retf
daa
and
popf
test
jo
(bad)
iret
nop
xor
dec
es
xchg
sub
pop
lock
inc
add
es
and
cmps
mov
movs
adc
fist
jg
and
push
daa
dec
ins
inc
push
sub
test
add
lods
push
lods
adc
push
out
test
add
sti
push
jo
repnz
inc
dec
shr
repnz
and
dec
out
push
lods
fisttp
add
sub
push
lea
mov
xchg
daa
(bad)
ins
sbb
pusha
xlat
push
xchg
stc
mov
test
popf
stos
rcl
pop
rcr
push
pop
mov
inc
mov
add
mov
pop
mov
in
push
(bad)
sbb
xchg
popa
stc
xor
mov
lods
push
js
addr16
fsubr
or
or
mov
sub
mov
ret
hlt
les
mov
adc
mov
dec
jecxz
adc
adc
sbb
jl
mov
or
jns
adc
lock
jg
push
sahf
les
ins
mov
pop
pop
fnstsw
or
imul
outs
ror
dec
mov
out
ror
mov
xor
outs
int
jg
sbb
cdq
stos
adc
gs
into
das
dec
rcr
inc
pop
or
pop
jno
test
pop
pop
sbb
cmp
push
sbb
xchg
jecxz
ss
(bad)
fstp
push
jp
mov
xchg
inc
rol
mov
or
mov
cmp
and
cmp
xlat
pop
(bad)
jb
push
sbb
xchg
ror
inc
sbb
or
outs
fsub
arpl
idiv
jo
dec
stos
sub
and
xchg
mov
pop
adc
(bad)
int3
push
jl
add
adc
ins
sar
test
adc
mov
mov
mov
mov
cmp
mov
fstp
sub
sub
sar
stos
imul
add
out
pop
inc
mov
lahf
lods
repz
mov
jmp
les
clc
sti
je
(bad)
arpl
mov
dec
jo
cmp
popf
pop
xor
xchg
and
mov
inc
das
pop
cdq
sbb
sahf
push
xor
mov
dec
mov
inc
dec
aas
ficomp
cmp
test
mov
inc
stc
inc
addr16
cmp
mov
mov
xor
popf
xchg
addr16
jg
ds
push
lea
and
sti
sbb
jo
push
sub
fcomi
and
and
push
mov
push
inc
fptan
xor
imul
arpl
loopne
mov
push
pop
aam
mov
xchg
mov
sbb
imul
fstp
fist
faddp
scas
mov
mov
sbb
mov
shr
fucomi
cwde
jb
jae
mov
sbb
jns
inc
sbb
mov
mov
cmp
fnsave
jmp
cld
leave
jl
repz
out
emms
in
scas
out
xchg
xor
test
and
xor
add
add
jae
call
or
gs
mov
push
mov
repnz
dec
mov
mov
adc
loopne
nop
sbb
push
mov
sbb
es
imul
out
sub
leave
jecxz
(bad)
not
and
sbb
bnd
fwait
stc
sbb
fdivr
pop
jg
lahf
rcl
fwait
lods
call
imul
jl
mov
inc
popa
dec
lods
adc
push
es
fsub
loope
pop
or
jne
inc
shl
retf
cmps
jle
mov
das
std
cmp
sbb
cmp
and
pop
daa
clc
rol
mov
outs
mov
pop
aam
lea
sub
leave
cwde
or
pop
mov
and
and
pavgw
xor
dec
jle
fld
and
loop
cli
out
lea
rcr
xor
movs
or
cmc
bound
pop
(bad)
mov
in
sahf
cmp
push
movs
loope
cmps
leave
js
sub
or
jnp
rcr
mov
mov
(bad)
jmp
in
pop
sbb
adc
mov
jp
jge
sub
lahf
push
repz
cmc
dec
lods
lods
mov
inc
sbb
push
lea
fcom
adc
dec
in
or
xchg
in
lea
add
int3
(bad)
shl
out
mov
outs
les
sub
xor
outs
pop
cmp
adc
push
mov
icebp
popf
call
sub
dec
loope
push
fprem
mov
push
mov
and
jno
pop
shl
mov
inc
dec
mov
push
sub
sub
lea
push
mov
ds
retf
dec
xchg
cs
cli
fwait
retf
fst
repnz
mov
push
and
inc
cwde
jno
les
ret
push
retf
sar
jecxz
(bad)
xor
and
std
loop
dec
mov
test
aaa
fcomp
sbb
mov
dec
movs
fst
fidivr
push
clc
cwde
leave
jnp
xor
sub
and
xchg
push
out
jo
pop
jo
fadd
add
fimul
call
pop
push
jge
xlat
sub
adc
add
sar
iret
push
dec
out
mov
cld
(bad)
cdq
add
adc
dec
das
adc
xchg
xchg
lods
dec
sub
mov
aad
xchg
scas
pop
outs
sub
and
add
mov
bound
dec
jl
and
arpl
cld
imul
sbb
xchg
push
fwait
sub
jbe
and
daa
cmp
xchg
outs
cwde
ret
mov
scas
in
(bad)
jo
adc
repz
jnp
(bad)
dec
es
push
test
jl
xor
bound
fcomp
fst
inc
or
test
(bad)
mov
fcomp
les
sub
xor
mov
lds
sub
sub
add
pop
pop
out
movs
in
loope
jmp
mov
lahf
dec
push
pop
lods
push
adc
sub
daa
movs
dec
ss
arpl
aam
inc
rcl
sbb
fs
fcom
sbb
ror
pop
jg
je
aas
imul
cmp
mov
jle
push
(bad)
sub
jg
jbe
gs
mov
cmp
lahf
add
rol
and
mov
pop
pop
test
cmp
mov
jmp
jne
adc
pop
fstp
(bad)
cld
retf
mov
push
xchg
or
add
or
or
(bad)
fcom
xchg
fldcw
out
call
sbb
in
lds
add
mov
iret
jae
jne
cdq
leave
loope
call
mov
test
sar
rol
inc
sbb
sbb
in
sti
cmps
sbb
fcomp
jle
les
cmps
and
mov
inc
add
das
std
cmc
jle
int3
jp
add
mov
in
dec
mov
and
out
adc
mov
pop
js
mov
or
movs
push
loope
push
mov
jmp
jl
adc
test
dec
enter
inc
loopne
ins
xchg
dec
data16
cli
ret
and
cmp
imul
mov
bound
dec
dec
jmp
xchg
in
mov
stos
lea
jecxz
inc
inc
enter
mov
pushf
add
push
jb
sbb
fdiv
(bad)
mov
fwait
scas
int
test
ins
cmp
ds
cdq
lahf
lds
out
scas
mov
or
(bad)
push
out
cwde
jae
cmp
lods
adc
or
aaa
outs
sub
pop
test
fidiv
xchg
cmp
nop
xor
cmps
(bad)
in
enter
fisttp
stos
pop
adc
in
and
inc
push
stos
loope
loopne
add
xchg
adc
jne
jo
xchg
ret
jp
inc
add
movs
popf
and
test
xor
mov
jge
xchg
into
add
imul
xor
inc
xchg
mov
call
dec
mov
pop
push
push
enter
lahf
add
not
jne
mov
or
lahf
bound
retf
fwait
pop
ret
aaa
xor
xchg
fcomp
mov
mov
xchg
mov
shr
(bad)
dec
sbb
or
pop
push
fwait
push
mov
jmp
adc
out
sbb
loop
push
mov
sbb
lds
cmp
aas
fs
gs
lds
lahf
frndint
adc
arpl
push
xchg
inc
cmps
dec
pushf
test
lods
cmp
push
sub
int3
leave
std
and
and
shr
sahf
xlat
mov
pop
xor
ret
cli
cmp
pop
cmp
cmps
push
loope
xchg
cdq
xlat
push
ja
cmp
daa
and
mov
ins
icebp
adc
daa
xor
pop
icebp
sbb
or
leave
scas
fadd
jnp
popf
imul
sub
adc
(bad)
iret
and
mov
sub
jl
adc
mov
add
mov
push
lea
fwait
mov
push
or
outs
pop
icebp
or
inc
fldenv
xor
je
mov
retf
sub
je
add
push
xchg
pop
lea
cmps
push
cmps
js
pop
leave
into
adc
xchg
das
push
gs
or
or
aad
repnz
pusha
loopne
sbb
pop
ret
sbb
pop
mov
cmp
ret
bound
lds
int
pop
lods
jae
jp
add
sbb
loopne
(bad)
(bad)
js
loope
mov
sbb
das
std
xor
movs
je
mov
nop
fwait
mov
cmp
fdivrp
inc
mov
js
test
hlt
mov
outs
ficomp
sti
jge
repnz
fld
and
jge
loope
sar
sti
mov
sbb
or
add
mov
popf
mov
dec
icebp
sbb
ss
push
leave
inc
xor
sbb
cmp
fidivr
sti
lds
jle
dec
cmp
mov
mov
adc
sub
add
dec
cmc
pop
jge
je
aaa
add
add
xchg
in
fwait
imul
sub
push
xlat
test
mov
sub
sahf
or
dec
enter
sub
repnz
push
(bad)
(bad)
popf
mov
xchg
lods
(bad)
aad
fidivr
sbb
fwait
into
popa
sub
int
push
outs
test
or
cmp
data16
add
pusha
and
jl
(bad)
and
(bad)
(bad)
popa
adc
xchg
icebp
ja
rcr
push
or
mov
mov
(bad)
(bad)
int3
cwde
pop
jmp
call
pop
aad
mov
mov
mov
pop
xor
(bad)
sub
mov
sbb
pop
jne
sbb
cwde
push
iret
sub
lock
inc
stos
pop
push
push
mov
xor
fstp
xchg
sar
cwde
pop
out
jl
in
jmp
fstp
mov
ins
mov
fimul
inc
gs
pop
adc
scas
cld
inc
cmp
push
stos
dec
mov
ror
mov
jae
jg
mov
cli
inc
(bad)
sub
test
lds
xchg
mov
int3
ret
mov
or
stc
fdivr
jcxz
ds
xchg
das
retf
cs
cmp
jle
mov
test
stc
fadd
mov
jns
push
jb
mov
or
mov
call
(bad)
pop
ret
std
mov
dec
sub
out
push
pusha
shl
popa
and
gs
scas
dec
call
outs
ins
scas
push
stc
int3
(bad)
jae
mov
lahf
mov
mov
test
xor
int3
jo
mov
xchg
mov
jp
iret
shl
in
outs
inc
je
push
pop
xchg
sub
mov
test
adc
lea
dec
cs
ret
xor
adc
mov
popa
sbb
into
out
out
mov
sub
mov
rol
pushf
jo
jl
sbb
mov
lds
pop
popf
mov
ja
ins
xor
ds
push
fldcw
dec
mov
add
clc
mov
xchg
ds
xor
sbb
cwde
dec
mov
jg
or
mov
pop
psrlq
xor
jae
jecxz
pop
lods
enter
jae
int
rcl
mov
xchg
call
push
fild
mov
push
jmp
push
cmp
mov
xchg
lock
ins
aas
out
adc
jmp
jecxz
jg
adc
xor
mov
fadd
(bad)
jbe
(bad)
clc
push
gs
jb
pop
push
jbe
sub
pop
dec
dec
push
cmp
ja
aad
clc
sbb
xor
pop
test
movs
cli
stc
inc
lea
xchg
jecxz
movs
dec
loope
test
das
jp
outs
mov
jmp
xchg
mov
xchg
add
push
aad
adc
mov
jp
jp
movs
fcmovbe
pop
xor
or
lods
mov
retf
aad
outs
mov
dec
xchg
das
jae
sbb
dec
or
and
out
fadd
into
pusha
adc
or
mov
sub
pop
rcr
adc
outs
fst
jo
sbb
sar
je
adc
rol
cld
or
stos
mov
lods
push
in
ins
or
adc
sub
out
in
mov
xchg
sti
pop
hlt
les
push
cmp
xlat
imul
aas
das
push
adc
fistp
fistp
adc
into
leave
test
dec
pop
jecxz
stos
(bad)
jg
jne
shl
cld
xor
fwait
sub
cld
pop
(bad)
paddsw
fdiv
das
rcl
add
push
ds
outs
loop
sbb
sub
and
xchg
jmp
cmp
and
lahf
out
push
cmp
femms
sbb
sub
shl
sub
retf
out
outs
push
sahf
cli
ds
test
dec
arpl
ins
addr16
xor
test
pop
call
test
sbb
adc
hlt
xchg
push
arpl
sti
cmp
movs
cmp
sbb
out
ja
xchg
push
push
jb
nop
jle
ficom
leave
repz
mov
rcl
loop
push
mov
addr16
cmc
jge
cli
(bad)
jg
repz
or
loop
or
cwde
daa
enter
xor
jg
lods
jae
mov
mov
jno
sahf
push
and
cmps
mov
aaa
shl
inc
and
aas
out
pop
sar
jle
sub
jmp
cmp
and
fst
pusha
jnp
vandps
cdq
js
call
in
or
jecxz
inc
(bad)
pop
pop
popa
fnstenv
cli
add
ss
sti
inc
dec
or
dec
adc
mov
retf
shl
in
out
test
shl
xchg
div
mov
test
xchg
test
pop
push
cmp
cmp
ja
sbb
movaps
jle
iret
push
arpl
inc
mov
jmp
mov
pop
(bad)
out
iret
cmp
cmc
stos
xchg
pop
dec
unpcklps
push
test
(bad)
jnp
pop
dec
mov
imul
or
jg
sub
mov
cmp
mov
or
mov
add
(bad)
lea
aas
popa
push
pop
xchg
or
push
pop
pop
push
hlt
or
push
push
outs
sub
addr16
arpl
pushf
xchg
(bad)
xchg
pop
pop
pop
inc
lods
jae
xor
mov
xchg
cmc
fld
addr16
rol
cdq
push
pop
ins
jmp
hlt
fild
hlt
test
nop
out
ret
js
sbb
add
ins
pop
adc
cmp
es
ss
xchg
mov
fsub
int
in
fbstp
and
push
bound
int3
push
inc
movs
mov
cmp
out
inc
call
inc
jbe
ja
pop
mov
(bad)
or
loop
and
dec
jne
or
hlt
lahf
push
jl
retf
pusha
mov
aaa
mov
(bad)
test
mov
imul
cmps
cmp
hlt
leave
stos
push
fcom
jno
jae
cli
pop
test
xchg
adc
and
sbb
aad
xor
clc
pop
(bad)
sub
mov
icebp
ret
inc
mov
lahf
or
jg
xor
mov
sub
nop
cmp
mov
dec
arpl
ins
ins
mov
push
pop
xor
or
(bad)
and
push
pop
push
aam
es
shl
rol
(bad)
fcom
xor
in
sub
jle
shl
xchg
fmul
clc
jge
xor
inc
(bad)
dec
scas
gs
xor
ss
pop
jg
or
fldenv
loopne
jge
nop
add
mov
rcr
ds
mov
mov
aaa
pop
push
mov
jno
sub
test
stc
pop
jne
mov
pop
leave
shr
ret
sub
push
xor
xchg
and
bound
loopne
ret
jnp
jg
xchg
push
cmp
inc
adc
lds
push
xchg
(bad)
lahf
lods
or
and
fs
sub
and
icebp
sbb
jns
adc
arpl
out
test
mov
leave
test
mov
(bad)
scas
mov
mov
fsub
test
mov
lods
scas
sbb
(bad)
shl
rcr
xor
in
popa
inc
sbb
jbe
lds
inc
push
loope
mov
jle
xlat
pop
je
and
in
cwde
add
stos
and
pop
pop
push
test
in
add
imul
iret
fwait
adc
sub
adc
shl
jmp
pusha
jnp
pop
xor
(bad)
jg
inc
and
sbb
and
ret
stos
in
jmp
es
mov
aad
sub
push
pop
xor
sub
stos
cmp
lods
dec
lahf
lea
adc
pop
fstp
imul
aas
bound
jo
mov
popf
mov
adc
fidiv
cmp
adc
push
clc
sub
pop
mov
dec
call
mov
jmp
enter
sbb
adc
inc
nop
jmp
mov
movs
inc
ret
or
push
scas
(bad)
jecxz
nop
mov
xchg
test
push
push
jno
(bad)
outs
(bad)
scas
sub
cmps
mov
bound
add
aas
push
push
dec
bound
jl
and
mov
daa
push
dec
mov
xchg
mov
jecxz
(bad)
retf
or
stos
or
cmp
push
das
jl
xor
repz
jp
in
icebp
ficom
mov
cmp
mov
(bad)
mov
jns
push
sub
jp
movs
lods
ss
add
add
push
lock
pop
push
dec
push
aaa
(bad)
in
jno
fwait
cmps
pop
(bad)
je
nop
sub
(bad)
jmp
in
in
call
pop
rcl
and
push
cmps
ror
sub
sub
outs
les
mov
push
jo
in
sub
lds
lock
pop
push
pop
push
pop
cmc
inc
pop
lods
mov
lahf
pop
dec
test
adc
arpl
jecxz
push
fcmovbe
sub
arpl
(bad)
ds
push
sub
sbb
jnp
xchg
jg
cs
sub
neg
arpl
push
mov
daa
stos
shr
pop
jb
cmp
mov
and
ds
sbb
xor
ja
xor
pop
arpl
pusha
ins
fnstcw
cmp
iret
es
pop
sub
cmp
mov
std
ficom
lods
icebp
cwde
mov
adc
add
fsub
aas
adc
jnp
pop
mov
mov
add
adc
sub
mov
mov
sbb
pop
mov
int
inc
js
jp
inc
aam
ins
mov
sbb
xchg
fs
dec
int
into
(bad)
sub
mov
pushf
mov
xor
sti
fcomp
fisttp
jl
inc
pop
or
pop
fist
mov
movs
movs
xor
(bad)
sub
jg
sbb
inc
add
fstp
adc
in
mov
cmp
cld
cmp
xor
xor
sti
or
fisttp
xor
jnp
and
push
and
inc
cmp
xor
aam
mov
(bad)
fisttp
and
xor
cdq
pop
dec
int3
in
mov
pop
sbb
bound
or
sbb
sahf
les
inc
fbld
push
jo
lock
loopne
dec
ja
xchg
test
gs
hlt
or
retf
xchg
xchg
push
inc
call
pop
sub
mov
fcmovnb
mov
in
inc
pop
jp
jp
aad
repz
cli
add
jecxz
sub
(bad)
xor
fldcw
jns
mov
pop
pusha
cs
enter
dec
xchg
stos
dec
ds
or
dec
xor
cmp
arpl
into
enter
xchg
mov
outs
or
xor
fwait
iret
(bad)
loopne
push
in
dec
xor
mov
xlat
mov
ss
jns
call
cmp
movs
mov
fisubr
push
and
mov
jl
mov
pop
sbb
outs
je
mov
jae
push
js
gs
pushf
mov
add
inc
fdivr
sub
jl
push
inc
mov
ror
sti
add
je
push
pop
mov
and
jge
and
mov
or
outs
push
xlat
addr16
sub
xchg
or
pop
xchg
sti
cs
jle
call
in
enter
xchg
sub
add
daa
mov
add
xor
pusha
jp
es
sbb
int
movs
fcomip
sbb
or
sub
inc
push
push
mov
dec
sahf
dec
sbb
jns
pusha
popa
add
inc
fbstp
cs
cld
call
cmps
mov
push
dec
fistp
inc
dec
imul
cmc
iret
test
pop
xchg
out
push
scas
lea
fs
or
mov
or
dec
adc
push
ret
cmps
xchg
cmps
pop
stc
push
inc
iret
jo
arpl
adc
xor
adc
out
rcr
les
or
inc
xor
jmp
mov
xchg
jnp
mov
retf
add
repz
scas
dec
push
push
leave
mov
sbb
retf
nop
add
les
push
mov
cmp
mov
cmp
and
sub
cmp
(bad)
xor
inc
shl
cmp
aaa
sbb
or
ss
mov
stos
lea
(bad)
lahf
mov
xlat
or
mov
cmps
leave
das
or
div
inc
js
aaa
dec
psubusw
fwait
mov
sahf
jb
int3
xor
std
add
mov
cwde
push
test
lahf
mov
dec
fcom
adc
in
(bad)
mov
daa
mov
fsubr
in
mov
pop
dec
mov
pop
scas
leave
adc
mov
(bad)
mov
pop
jne
sub
imul
in
outs
test
aad
lods
mov
cdq
cli
mov
ret
lods
test
sahf
mov
(bad)
xor
enter
xchg
mov
ds
bound
mov
sub
enter
lods
inc
cmp
popf
hlt
fcom
mov
mul
ror
cmps
or
sub
mov
dec
enter
test
repnz
jne
pushf
mov
inc
pop
ret
sub
clc
int
cmp
ficom
outs
sbb
jnp
dec
xor
dec
fadd
(bad)
cmps
int
mov
sbb
aam
cwde
xor
sub
xor
mov
jnp
xchg
sub
popf
int
bnd
inc
push
xor
xchg
jbe
pop
mov
jae
push
gs
addr16
jbe
sar
dec
adc
jg
loope
jb
xchg
push
xchg
sbb
jl
or
jbe
into
(bad)
lods
mov
add
(bad)
mov
shr
lea
test
jp
xor
arpl
(bad)
fiadd
add
cmps
xchg
loop
test
adc
push
nop
das
xchg
(bad)
ins
out
push
adc
jmp
and
add
mov
cwde
pop
dec
or
loopne
mov
push
mov
jp
fsub
inc
imul
mov
mov
and
pop
dec
push
pusha
cmovs
pop
sub
pop
aam
repz
xchg
cmp
call
fwait
cmp
jp
test
idiv
fild
sub
outs
imul
mov
jbe
out
loopne
mov
adc
cwde
lods
pop
fild
jmp
xor
jmp
inc
mov
lock
push
outs
loope
sbb
js
ret
or
mov
sbb
cli
aad
xchg
lahf
leave
jns
rcr
inc
icebp
in
adc
cmps
cmp
mov
cmp
pop
xchg
mov
int
cmp
add
ret
outs
jg
ss
jl
pop
jg
pop
jnp
jle
int
shr
das
ds
sbb
pop
inc
cmp
cmps
dec
mov
test
ins
adc
ins
mov
or
or
jmp
mov
xor
push
inc
cmp
adc
lock
test
mul
(bad)
test
push
mov
add
and
and
shl
xor
std
inc
sub
xchg
pop
shl
and
(bad)
out
inc
std
(bad)
shr
sub
lds
mov
mov
add
test
inc
xor
dec
ss
jno
pop
jecxz
loopne
cmp
or
or
jo
pushf
sbb
jno
aas
jl
pop
leave
jmp
imul
push
retf
mov
les
sbb
jne
and
bswap
popa
jnp
in
mov
pop
push
and
sahf
addr16
ret
sti
aas
pop
into
push
mov
adc
mov
(bad)
jb
sti
pushf
sub
mov
push
push
out
or
mov
and
aad
jbe
mov
xchg
outs
mov
imul
leave
in
push
test
pop
in
jno
mov
add
pop
shl
sub
repz
retf
int3
data16
(bad)
push
jge
mov
lds
cmp
stos
or
lods
or
xchg
xchg
std
test
xchg
or
test
mov
or
and
fistp
jno
loop
sti
test
adc
xor
sahf
rcr
xor
pop
aas
dec
leave
jns
ja
call
add
sbb
loopne
gs
cmp
mov
jmp
jle
and
adc
mov
loope
mov
jle
enter
leave
cmps
adc
and
jb
add
div
pop
add
cmp
xor
and
cmc
bound
mov
or
hlt
push
pop
int3
xor
fsubr
in
fild
jnp
mov
movs
add
scas
sbb
jns
fstp
dec
enter
cmp
fst
jo
shl
add
imul
jmp
xor
sbb
fnstcw
in
cmp
data16
sub
aad
or
test
out
scas
cmc
inc
repz
out
pusha
fisttp
outs
xchg
retf
lds
mov
and
jnp
xchg
pop
mov
sbb
sub
call
lods
sti
(bad)
xchg
out
scas
xchg
dec
cs
cmp
mov
dec
call
cs
(bad)
sbb
out
xchg
(bad)
push
test
pop
sub
dec
or
shl
push
leave
mov
(bad)
pushf
bound
mov
in
stos
xor
popa
iret
test
add
pusha
cmp
cmp
popa
add
xchg
lds
and
hlt
or
in
dec
fwait
push
jmp
mov
inc
jae
xchg
mov
and
push
jmp
and
out
test
cmp
mov
mov
scas
jns
sub
cmp
aam
pop
mov
stc
xor
pop
push
push
dec
xchg
mov
pop
cld
mov
mov
sub
add
mov
(bad)
repnz
(bad)
dec
or
dec
pop
push
pop
mov
outs
add
clc
sub
inc
dec
sbb
dec
dec
icebp
inc
sub
mov
and
and
and
mov
leave
test
pop
or
xlat
add
xor
ret
pop
std
enter
das
add
or
adc
shl
stos
cwde
inc
jge
push
xchg
inc
int
(bad)
sahf
and
mov
scas
call
inc
out
mov
aas
jns
fidiv
fldenv
bound
loope
out
mov
rcl
sbb
cwde
dec
xchg
inc
pop
push
mov
jae
push
cmp
rep
jnp
call
aas
jno
fiadd
clc
mul
mov
pop
inc
imul
add
imul
mov
sbb
and
pop
movs
dec
lds
mov
xchg
cld
inc
sahf
sub
fsubp
sub
or
les
ins
pop
inc
xchg
mov
sbb
mov
(bad)
pop
jno
into
div
pop
lahf
xchg
bound
lahf
push
or
push
mov
push
inc
in
jo
popa
stos
pop
mov
xchg
das
aaa
mov
inc
push
jno
fnstsw
mov
fs
dec
clc
ins
push
out
jo
push
push
mov
(bad)
push
xor
addr16
out
int3
cmp
scas
stos
pushf
jecxz
imul
cs
les
xor
int3
mov
mov
xchg
ret
in
pusha
aas
in
pop
pop
ja
dec
mov
adc
adc
in
inc
adc
xchg
out
mov
pop
add
mov
call
loope
mov
icebp
adc
sbb
mov
mov
or
xchg
pusha
fsub
pop
pop
or
jno
sbb
outs
lods
adc
sub
xor
pop
mov
fiadd
adc
mov
aam
mov
outs
dec
iret
inc
xlat
scas
dec
rol
scas
dec
aam
pop
jecxz
repz
js
ret
out
mov
call
add
xor
jge
dec
(bad)
or
call
and
jg
das
push
popf
xor
addr16
mov
aad
sbb
cwde
sub
out
dec
xchg
fxch
int3
in
sub
push
xor
pop
xor
loopne
pop
call
sar
adc
fisub
int
repnz
jnp
scas
psubq
out
cmp
loope
cmp
(bad)
pusha
pop
aam
add
push
mov
sub
push
mov
pop
adc
aam
sbb
loope
out
clc
push
loope
sar
sub
xchg
int
ret
(bad)
out
in
lods
lds
cdq
lods
or
sbb
retf
pop
adc
mov
inc
pop
add
sbb
addr16
or
pop
add
jns
mov
pop
cmc
xor
stos
push
cmp
cmp
mov
cmps
push
in
retf
inc
gs
jg
xor
mov
sub
lods
and
arpl
fsub
dec
adc
xor
dec
push
std
imul
mov
xchg
mov
pop
push
add
mov
jmp
loope
xchg
add
jl
pop
daa
enter
in
dec
enter
sub
arpl
mov
enter
inc
mov
cmp
sub
repnz
fisubr
push
stos
adc
jmp
fcmovne
cli
and
cmp
ja
out
sub
push
cmp
dec
mov
scas
jmp
mov
int3
sahf
sbb
lods
leave
push
dec
mov
dec
pop
jns
(bad)
popa
sbb
fdivr
xchg
ds
sub
cmp
xor
mov
sti
ret
and
movs
clc
mov
add
leave
pop
mov
fucom
pop
fwait
cs
mov
in
scas
pushf
das
inc
fchs
dec
and
aad
push
stos
(bad)
pop
imul
dec
jae
and
adc
cwde
and
cmp
fdiv
adc
pop
xchg
adc
sti
cmp
xor
cmps
aam
pushf
dec
pop
jmp
(bad)
into
jmp
sbb
stos
rcr
dec
add
test
(bad)
cmp
mov
inc
jmp
jmp
cmp
pop
and
icebp
jae
lock
xor
scas
inc
pop
pusha
cmc
imul
push
adc
and
jmp
pop
(bad)
push
lea
hlt
jae
repnz
xchg
pop
mov
aas
lock
jne
and
pop
cmp
adc
dec
xchg
fs
dec
jl
sub
shl
pop
xchg
js
aam
rol
retf
pop
add
mov
or
rcl
in
mov
jo
mov
xor
or
aas
mov
jmp
pushf
aad
pop
dec
jno
xchg
std
push
aas
pop
pop
mov
pop
or
out
dec
stos
xchg
in
mov
dec
daa
jno
pop
pop
push
push
pop
jle
adc
sbb
mov
les
aad
cmc
push
inc
push
fist
xchg
sub
add
outs
outs
sub
repz
out
adc
mov
shr
push
fs
popa
loop
jbe
push
xchg
cmp
fist
mov
dec
jg
push
mov
movs
jns
inc
and
pop
rol
jge
xchg
adc
pop
popf
xor
test
out
jno
adc
(bad)
or
jae
lahf
push
jbe
icebp
push
pushf
cli
mov
push
pop
outs
int3
dec
cmp
clc
inc
les
test
bound
ja
or
mov
and
call
ja
das
int3
mov
call
cmp
push
fldcw
add
jmp
(bad)
fwait
movs
xor
les
sahf
and
bound
jg
nop
xchg
in
ret
sbb
jle
pop
jl
sti
mov
arpl
and
icebp
pop
mov
push
(bad)
and
ror
scas
iret
or
xchg
xchg
cmc
out
call
jp
into
or
loopne
mov
dec
pop
gs
push
call
sahf
add
fbstp
add
stc
or
dec
mov
out
mov
sbb
sub
dec
adc
pop
sahf
cld
sbb
jl
xor
shl
dec
mov
ret
mov
mov
mov
mov
jg
sub
fwait
stc
mov
ffree
dec
push
push
scas
pop
mov
adc
fcomp
push
pop
in
mov
jl
add
push
bound
scas
retf
mov
xor
loope
jmp
stos
add
enter
sub
enter
out
xchg
and
pop
pop
popf
(bad)
fcom
inc
popa
lea
aas
call
pop
xchg
cmp
add
stc
and
mov
inc
and
add
stos
(bad)
mov
shl
jecxz
dec
mov
xor
popa
addr16
inc
shr
or
and
out
dec
jno
gs
dec
add
jmp
jae
pop
sbb
add
pop
mov
pop
fsubr
mov
neg
js
adc
push
imul
cdq
lds
addr16
jecxz
loop
(bad)
fiadd
out
imul
test
fisubr
xor
add
jp
inc
pop
inc
loope
repnz
ins
movs
das
cmp
shr
push
jno
sbb
pusha
fucomi
mov
lahf
pop
addr16
jne
push
jmp
mov
into
or
and
add
scas
repnz
dec
cwde
jmp
sub
fild
mov
nop
or
int
xor
lods
retf
call
ret
adc
inc
mov
xor
sub
inc
imul
cs
pushf
inc
jns
dec
jnp
dec
movs
dec
cmp
ds
ret
sub
mov
adc
push
(bad)
xor
lds
ret
fs
test
xchg
sbb
push
jbe
pop
mov
out
cmps
and
inc
pushf
xchg
inc
inc
mov
add
mov
ror
or
dec
jo
xor
ror
test
je
popa
mov
xor
pop
mov
xor
pop
test
fmulp
sub
sub
inc
jp
fstp
mov
ret
jp
and
imul
ja
test
xchg
cwde
sub
cmc
aad
jno
iret
outs
sar
mov
into
popa
call
inc
xchg
loop
dec
test
pop
pop
loop
push
out
or
mov
stos
scas
add
out
pushf
xor
mov
mov
outs
out
div
push
test
jle
jg
test
lds
icebp
push
sub
mov
sbb
jnp
outs
jecxz
(bad)
sbb
in
cmp
test
mov
mov
mov
dec
ja
xchg
fcomp
push
mov
xchg
out
or
push
cmps
cmp
ins
shl
test
mov
les
(bad)
frstor
add
xor
xchg
and
xlat
js
(bad)
imul
in
sbb
int
enter
adc
and
mov
add
push
cmp
push
scas
dec
push
dec
in
sbb
mov
hlt
cmps
stos
fcmove
push
mov
ss
aam
aam
sub
aad
(bad)
or
push
out
add
addr16
loop
cmp
cs
data16
ret
and
push
test
leave
cli
and
ds
aad
mov
jnp
out
mov
mov
ins
hlt
lock
mov
out
or
loope
bound
mov
or
mov
mov
adc
jo
lods
out
inc
fist
inc
pop
in
push
nop
push
jge
adc
repz
sbb
adc
loopne
pop
dec
shl
shl
sahf
rcl
sub
scas
xlat
cld
rol
pop
stc
mov
xchg
ror
out
add
mov
adc
sahf
popf
loop
cmp
iret
mov
and
gs
jmp
xor
add
mov
out
sbb
add
mov
xchg
pop
adc
sbb
pop
dec
(bad)
jno
and
fwait
jno
inc
icebp
inc
xchg
in
mov
fstp
call
enter
test
mov
dec
dec
(bad)
inc
pop
push
mov
les
push
fs
pusha
test
lock
idiv
pop
jne
mov
sub
fisttp
sbb
or
test
fidiv
adc
stos
xchg
leave
fisub
jp
jo
(bad)
enter
test
es
cmps
retf
add
jbe
push
dec
cs
xor
sbb
(bad)
sti
add
shr
call
mov
test
in
fstp
cmps
dec
in
sbb
cmp
out
inc
ret
cld
jns
jp
or
in
cwde
test
jle
jle
out
mov
jo
sbb
sub
loopne
and
(bad)
xor
mov
aam
mov
int3
push
int
pop
sbb
pushf
or
inc
pop
lahf
in
push
xlat
je
cdq
mov
cld
imul
xor
adc
cdq
leave
push
mov
and
and
add
aad
neg
dec
retf
adc
ins
xchg
jbe
cmp
cmp
shl
enter
or
gs
push
clc
jbe
xor
bound
movs
ss
mov
jae
es
pop
push
and
lahf
fsub
(bad)
(bad)
push
mov
xor
ret
jns
clc
inc
outs
pushf
jge
int
adc
push
cmps
inc
daa
mov
jo
in
hlt
(bad)
sbb
clc
and
jmp
push
hlt
shr
push
std
cli
cmp
inc
jle
sbb
fisttp
enter
sbb
cmp
add
sub
inc
push
jle
(bad)
and
inc
(bad)
cli
cmps
mov
jl
add
xor
pusha
or
xor
cmps
idiv
stc
jmp
sbb
jb
movs
lods
scas
xor
pop
jns
push
fadd
fnstenv
xchg
xor
sub
test
int3
pop
stos
push
es
and
inc
ret
stos
test
cs
adc
mov
sub
rcr
adc
push
rcl
cmp
sbb
mov
jmp
das
sbb
inc
jge
xlat
mov
mov
xor
pop
rcr
out
lods
cmps
jg
or
pop
call
lahf
lock
(bad)
out
ja
cs
mov
add
xchg
adc
or
in
idiv
jge
scas
push
xchg
jmp
(bad)
neg
cmps
adc
mov
inc
mov
jg
ins
sbb
out
(bad)
cmc
xchg
out
mov
add
pop
sbb
dec
lea
cmp
jle
jae
cmp
add
sub
sbb
mov
pop
es
or
inc
fsub
sub
inc
cmp
ins
int
push
push
stos
int3
fisub
add
fadd
lock
pop
out
jnp
cmp
retf
sub
mov
test
mov
adc
popa
sub
call
loopne
(bad)
(bad)
push
push
push
mov
gs
js
cld
xor
xchg
enter
rcr
inc
push
je
jb
imul
cmps
pop
call
in
mov
push
call
mov
(bad)
pop
mov
pusha
aad
push
or
(bad)
nop
inc
dec
dec
and
mov
cmp
add
cdq
or
and
ins
cdq
jg
jae
jmp
mov
je
mov
in
fsubr
pushf
ret
inc
js
into
lds
sbb
jno
sbb
cmp
cmp
and
cmc
xchg
ret
inc
(bad)
mov
shl
movq
jmp
es
or
inc
(bad)
outs
adc
mov
inc
fstp
mov
mov
inc
lahf
movs
mov
out
xchg
stc
lods
sub
adc
cld
dec
pop
in
pop
int
imul
mov
push
cmp
jg
repnz
test
jmp
pop
dec
dec
call
sub
cmp
retf
jg
adc
cmp
mov
adc
dec
call
mov
and
or
push
aad
jg
pop
cli
dec
cmp
sub
ret
cmp
imul
stc
test
mov
mov
or
push
fwait
addr16
popa
push
mov
ror
mov
sbb
call
lahf
jmp
sub
pop
arpl
pushf
cmp
push
pop
and
std
out
xchg
jae
ror
push
jne
jno
fsubr
cmp
or
mov
add
add
ficom
adc
out
jnp
mov
into
jns
add
or
push
rcr
imul
and
daa
jbe
loope
mov
aas
popa
xor
mov
xor
fs
xlat
sbb
sti
pop
xor
mov
sub
pop
jge
stos
cli
dec
fidiv
and
inc
cmp
pop
cs
(bad)
int3
mov
jbe
sub
loop
and
pop
push
push
leave
das
xor
std
inc
adc
jge
(bad)
jl
test
mov
lds
xchg
push
or
loop
and
jg
jmp
leave
call
adc
int
pop
xchg
push
sub
mov
mov
into
xlat
jg
mov
xor
mov
into
pop
loop
test
rol
addr16
and
fisttp
fld
(bad)
or
and
push
or
cwde
fild
adc
mov
fnstsw
pop
popa
ins
fwait
inc
add
mov
xor
pop
iret
shr
dec
or
xchg
loope
jns
test
mov
retf
int3
xchg
retf
rcl
scas
push
inc
mov
ret
int3
jg
mov
or
lea
sub
test
or
xchg
outs
adc
push
adc
inc
pop
test
cmc
xlat
fdivr
in
mov
pusha
test
cmp
push
add
pushf
aad
call
dec
repnz
push
scas
icebp
addr16
pop
sbb
xor
das
imul
fnstsw
(bad)
out
dec
(bad)
dec
xlat
adc
push
or
(bad)
fcmovne
inc
sbb
or
cli
sbb
xchg
cwde
mov
mov
(bad)
sub
pop
sti
xlat
cli
jae
add
jg
and
fcomip
cmp
cmp
cli
aas
lds
jb
mov
push
cmp
pop
jb
push
in
jmp
in
mov
lahf
int
lds
push
xor
xor
loope
aad
mov
int
pop
cs
in
cmp
add
retf
into
es
mov
fist
pop
aaa
int
sub
push
mov
push
sub
int
call
jmp
aas
jle
clc
fiadd
fsubr
and
mov
and
add
popa
push
dec
cmp
fimul
mov
out
mov
mov
in
in
cli
movs
dec
inc
fild
nop
pop
test
jecxz
imul
in
inc
or
cmp
push
pop
scas
mov
pop
jg
push
xchg
jmp
cli
push
cmp
into
sbb
shl
push
hlt
xor
or
xchg
ret
adc
mov
(bad)
jg
ins
cmps
sti
push
lahf
call
jmp
sbb
fs
mov
sub
push
cld
es
push
fcom
cmp
jne
push
sub
das
adc
xchg
xchg
adc
iret
lahf
sbb
not
movs
xor
hlt
enter
mov
dec
cmp
xor
es
xor
fidiv
xchg
shl
gs
mov
xchg
addr16
push
lods
jge
ja
mov
sahf
mov
cli
push
jo
or
dec
movs
jns
call
jmp
xor
xchg
(bad)
add
add
cwde
hlt
rcr
cs
repnz
or
div
in
arpl
xchg
cmp
pop
pop
and
adc
inc
cmp
sahf
adc
cdq
jge
push
and
(bad)
sbb
pushf
push
sub
fwait
cld
in
dec
js
or
(bad)
sbb
in
cmp
sub
outs
jb
jmp
fnstsw
fld
pop
enter
cmp
jbe
jb
and
mov
pop
sbb
push
cmps
sub
arpl
push
add
femms
push
mov
sbb
pop
push
movs
fistp
cmc
mov
gs
iret
into
adc
int3
mov
mov
and
push
push
mov
stc
dec
cwde
mov
push
push
mul
mov
mov
in
jns
mov
call
adc
mov
aaa
dec
aas
dec
popf
mov
mov
ins
xchg
push
dec
lea
fmulp
or
pop
fld
fisttp
push
sub
push
mov
or
jne
cmp
and
into
add
adc
adc
movs
pop
or
xchg
and
call
cs
sbb
popa
mov
cld
shl
repz
nop
sub
push
xchg
xlat
cmps
inc
ror
inc
inc
cli
cmp
shl
outs
fs
retf
movs
leave
fnstenv
xlat
imul
popa
pop
mov
inc
push
repz
dec
mov
(bad)
pop
out
into
mov
rol
mov
retf
sub
popf
or
cmc
adc
cmp
push
dec
and
cld
push
(bad)
sbb
movs
inc
and
push
jle
outs
inc
sahf
dec
dec
sti
ror
jg
fld
fs
daa
mov
cld
adc
pushf
adc
cmp
jmp
imul
sub
xchg
ret
shr
add
xchg
aas
cmc
fld
cmp
loopne
ins
shr
data16
iret
or
gs
retf
pop
pop
mov
mov
pop
sub
mov
stos
sub
mov
cld
adc
and
icebp
out
inc
jmp
iret
lds
(bad)
xlat
or
cmp
ins
sub
dec
f2xm1
jmp
push
mov
ins
fsub
in
ins
cmp
mov
sti
pop
jl
lds
popa
mov
shl
xlat
fstp
ins
dec
je
bound
je
and
dec
mov
rcl
add
lea
test
aad
and
mov
dec
loop
xor
cld
(bad)
push
movaps
sti
cmp
nop
daa
or
mov
jle
pop
mov
repz
test
xor
cmps
push
std
(bad)
mov
pop
dec
xchg
and
sbb
pop
popf
(bad)
dec
(bad)
fild
sbb
stc
xor
in
jnp
or
mov
jnp
loope
ror
inc
mov
jo
scas
fnstenv
xchg
or
or
aad
mov
xor
push
(bad)
loopne
das
int3
(bad)
jmp
cmovns
xchg
pop
lds
cld
push
fs
movs
sbb
xor
sbb
(bad)
sub
repnz
pop
aad
adc
mov
repnz
inc
fcmovu
and
mov
icebp
mov
adc
rol
push
sub
mov
add
or
mov
movs
xchg
sub
mov
pop
xchg
cli
xchg
inc
push
xchg
jo
mul
pusha
aad
scas
shl
out
ins
fist
das
mov
cs
es
pusha
push
into
pop
cdq
and
push
and
xor
faddp
mov
mov
retf
popa
cmps
scas
jnp
xor
pop
cmp
or
cli
cmp
jb
(bad)
movs
mov
loop
jge
xchg
mov
mov
adc
add
pop
jmp
jae
sbb
ins
je
jmp
fsubr
xor
pop
fidiv
pop
add
inc
repnz
push
mov
and
mov
add
jmp
push
es
dec
sbb
xchg
xlat
push
jmp
iret
mul
lock
cdq
jp
stos
mov
pushf
pop
icebp
pop
mov
push
retf
dec
pop
pop
into
adc
inc
daa
retf
test
and
mov
out
imul
inc
dec
dec
aad
xchg
pop
sub
jno
add
jmp
jno
mov
jle
push
sbb
mov
lahf
call
loop
(bad)
mov
pusha
cmps
pop
push
test
pop
fidivr
test
je
addr16
ss
xor
aaa
into
jbe
fs
mov
dec
jecxz
and
and
out
push
stos
fidivr
pop
inc
pop
aaa
push
sbb
sahf
jb
aaa
push
xor
lea
jnp
xchg
and
lods
in
pusha
push
jne
xor
fdivp
fwait
sar
add
cmp
fisubr
pop
adc
call
jg
popf
sub
dec
mov
(bad)
mov
cmps
popa
push
xor
cmps
adc
in
xchg
ret
jmp
push
push
or
add
push
pop
popa
(bad)
pop
clc
retf
xchg
adc
push
cmp
icebp
std
dec
xor
xlat
and
aad
ret
test
xor
in
xchg
nop
aaa
mov
sub
cld
and
dec
int3
repnz
les
es
add
movs
pop
cmc
aam
xchg
xor
aas
stc
add
out
lods
lock
pop
dec
or
ret
stos
or
addr16
iret
rcr
aaa
push
iret
pop
jp
mov
ss
(bad)
fbld
ins
sub
cli
or
xor
inc
test
pusha
nop
jg
imul
mov
or
inc
retf
xchg
int
(bad)
sti
(bad)
or
jmp
push
xchg
jl
cmps
or
dec
xor
popf
loop
stos
(bad)
fs
in
mov
cmp
pushf
push
imul
dec
scas
lock
jp
scas
fmul
mov
jmp
ds
nop
cmp
outs
shl
and
mov
pusha
movs
sub
jge
(bad)
dec
(bad)
imul
fcmovbe
mul
test
test
dec
aad
and
pop
dec
movs
xchg
cmp
dec
or
cli
into
sbb
push
ins
sti
scas
lods
pop
or
cli
repnz
cmp
test
dec
loop
clc
dec
jl
xchg
jnp
xor
leave
in
adc
aas
or
dec
xor
ret
pusha
fidiv
and
push
mov
lock
cmp
inc
mov
cmps
xchg
pop
xor
loopne
mov
mov
(bad)
push
shr
mov
add
das
inc
mov
add
jb
loop
rcl
fwait
mov
push
scas
mov
pop
lea
clc
into
and
pusha
jmp
ret
(bad)
adc
mov
es
sbb
xor
sub
and
data16
or
cld
outs
lock
mov
mov
or
push
sub
mov
adc
jg
ret
mov
sti
div
sub
test
xor
inc
or
mov
cmp
stos
hlt
movs
mov
mov
and
stos
sti
jp
or
ret
test
mov
jmp
outs
sub
inc
add
cmps
push
pop
sbb
stos
and
js
mov
add
cmps
mov
dec
mov
pushf
or
mov
inc
jl
xchg
and
pop
imul
(bad)
sbb
lahf
(bad)
and
adc
xchg
aam
push
fstp
xchg
pop
sub
jg
call
jnp
je
arpl
outs
js
dec
xor
sub
xchg
jle
clc
retf
test
xchg
ins
mov
sbb
test
outs
and
xor
inc
lods
pop
mov
add
add
and
scas
(bad)
mov
or
ja
xor
mov
mov
pop
push
and
pop
lods
xchg
push
sub
daa
mov
test
pop
push
or
xchg
push
push
cmp
xlat
inc
or
sahf
icebp
cs
mov
mov
dec
stos
aam
adc
(bad)
cmps
jmp
(bad)
in
pop
sahf
mov
xchg
cld
cwde
mov
fsubr
outs
push
mov
mov
xchg
pop
jmp
arpl
bound
push
mov
inc
out
jmp
dec
mov
push
push
popa
mov
push
push
sahf
shl
mov
rcr
and
inc
rol
and
shl
lds
ror
shr
in
sub
pushf
push
mov
inc
lods
pusha
inc
dec
xor
push
xor
push
dec
sahf
cs
enter
dec
pop
cmp
jb
scas
lahf
mov
jno
arpl
mov
pop
iret
push
pushf
jns
jmp
loopne
in
bound
sub
mov
lock
xor
sub
push
jg
xchg
and
out
push
scas
mov
adc
sub
adc
call
lds
mov
lods
push
inc
inc
jne
repnz
dec
fsub
or
es
stc
add
xor
cmp
adc
mov
or
scas
push
fdiv
arpl
cmp
jl
sar
cmps
push
pop
pop
scas
out
retf
loope
dec
pop
adc
imul
rcr
frstor
je
(bad)
cli
lods
ja
iret
push
mov
in
mov
jmp
imul
cmp
repnz
out
ja
inc
scas
and
cmp
cli
mov
lds
cmps
pop
jmp
jmp
adc
(bad)
adc
or
cli
dec
push
push
popa
mov
xchg
or
cmp
fidiv
xor
dec
ret
es
loop
ret
retf
xlat
xchg
icebp
xor
push
jg
sbb
fstp
cmps
movs
retf
and
jmp
(bad)
pop
test
adc
scas
or
xchg
cmp
sbb
mov
test
adc
(bad)
dec
sbb
sbb
and
adc
dec
and
fwait
or
aad
sub
pop
fimul
pushf
jo
out
xor
mov
push
ficom
outs
pushf
mov
stc
nop
lea
mov
ss
fstp
mov
xor
pop
mov
(bad)
inc
cmp
pop
sbb
pop
push
mov
pop
xchg
iret
xlat
lock
and
stos
cmp
imul
jg
aam
adc
mov
jae
xchg
stc
adc
jp
pop
neg
xor
lods
pop
enter
push
inc
jnp
mov
fs
dec
out
xchg
and
inc
dec
push
pop
sub
inc
push
in
movs
lock
inc
es
ss
fild
ins
jp
test
jns
retf
iret
adc
(bad)
stos
xchg
(bad)
cmp
adc
push
pop
enterw
xor
gs
jo
lock
sti
(bad)
xlat
mov
(bad)
or
shr
mov
add
sub
cmp
dec
cmp
sbb
inc
cli
mov
int3
sbb
mov
aam
or
popa
xor
in
sbb
mov
ror
fs
sub
mov
int3
and
in
ror
cmp
inc
loope
fsin
and
cmp
cmps
bound
ficom
or
add
cmp
mov
imul
ins
dec
call
or
arpl
inc
inc
nop
push
or
retf
lea
arpl
add
mov
jb
imul
cmp
inc
xor
sbb
std
sar
lahf
(bad)
mov
daa
test
inc
leave
fst
addr16
stc
es
icebp
stc
jnp
sub
or
retf
jne
jmp
push
(bad)
fidiv
add
push
bound
xchg
les
enter
or
mov
lahf
pop
add
cli
dec
int3
push
inc
sbb
fdiv
mov
and
fsubp
fsub
loope
jge
or
icebp
push
add
cli
mov
test
mov
(bad)
pop
pusha
scas
jmp
(bad)
rol
outs
pop
aas
and
inc
popa
mov
hlt
push
xor
sbb
mov
push
(bad)
fcomp
cs
nop
call
cdq
dec
ds
mov
mov
(bad)
sti
mov
add
mov
ror
jb
jmp
xor
and
je
mov
in
leave
and
icebp
nop
mov
cld
in
jmp
jecxz
push
push
aam
cmp
sti
(bad)
xor
fsubr
inc
loope
jnp
popa
jp
jl
jl
jecxz
mov
scas
sbb
adc
addr16
jb
(bad)
mov
xchg
aas
sub
add
jb
int3
add
adc
mov
or
out
jle
xchg
adc
xchg
test
leave
in
xchg
push
push
jbe
or
jl
mov
rcl
stos
cmc
mov
jle
sbb
mov
add
ror
jno
clc
cmp
jmp
in
test
push
in
outs
xchg
cwde
ror
add
push
jb
sub
push
lods
or
mov
jge
repz
mov
out
and
jns
add
loop
push
cli
mov
or
(bad)
xor
xor
dec
jns
arpl
xor
xchg
jnp
xor
add
inc
int3
adc
call
(bad)
imul
shl
int
stos
clc
(bad)
jmp
data16
int3
sub
dec
dec
cmp
sub
test
push
jp
(bad)
adc
xor
in
inc
or
jl
sbb
das
mov
cld
fcmovu
adc
daa
or
loopne
push
xchg
mov
mov
test
adc
popf
cmp
xchg
mov
ror
imul
pop
jbe
mov
cmc
test
cli
jg
inc
inc
out
push
neg
xchg
into
push
das
iret
mov
mov
or
xchg
popa
leave
mov
je
loopne
cmp
xlat
xor
xchg
pop
mov
push
dec
mov
retf
popa
sub
mov
test
imul
in
sbb
punpckhwd
fcomp
jnp
test
(bad)
mov
addr16
mov
mov
or
clc
add
adc
ds
pusha
sbb
fisttp
cli
sub
cmps
mov
sar
ins
jnp
push
dec
adc
xchg
loop
mov
sbb
aad
xor
dec
test
ja
push
call
ins
mov
cs
jmp
or
shr
int3
sub
inc
data16
sbb
push
or
ins
ins
jmp
xchg
sub
(bad)
fcmovne
jmp
call
pop
jg
xchg
add
or
mov
fmul
test
fwait
add
and
cld
or
add
mov
popa
jmp
ins
mov
dec
mov
and
xor
sub
in
fiadd
push
(bad)
mov
sbb
ja
xchg
cld
mov
push
sub
mov
rcl
gs
sbb
push
or
add
int3
inc
call
sbb
add
sti
repnz
pop
fwait
jge
sbb
xchg
ret
int3
ds
pop
repz
fwait
mov
xor
fadd
clc
push
add
sbb
push
loope
pop
movs
cmps
or
inc
div
movs
cmp
shl
(bad)
xchg
mov
pop
daa
cld
pop
mov
adc
xor
xor
sbb
mov
xor
push
div
adc
add
test
icebp
lock
dec
stc
xor
out
scas
mov
push
sub
xchg
mov
cwde
dec
or
inc
int
jnp
inc
not
cmp
cwde
retf
xchg
(bad)
cld
ret
jmp
outs
mov
mov
push
scas
clc
aad
jp
xchg
mov
sub
mov
adc
bound
jmp
cwde
jns
inc
cdq
shl
cmps
mov
mov
mov
push
mov
xchg
or
xchg
aad
jp
or
mov
sub
cmps
cmp
xchg
test
cmps
or
mov
gs
sub
xchg
pop
ret
inc
into
cmp
jns
in
aad
cmp
add
mov
mov
sar
rol
cmp
dec
add
xor
sub
leave
pop
cli
les
xchg
call
xlat
add
maxps
add
add
movs
stc
sbb
int
xor
mov
mov
stc
inc
xlat
lods
and
or
retf
or
sbb
leave
add
imul
rcl
pop
xchg
jno
mov
inc
xor
push
mov
jl
outs
sub
std
pop
test
cmp
jae
pcmpgtd
jl
mov
mov
pop
xchg
out
mov
pop
cmc
ffree
dec
std
lods
mov
adc
xor
or
hlt
int
pop
cmp
test
(bad)
and
aas
add
shl
shr
inc
jne
mov
sub
sbb
(bad)
xchg
mov
stos
xor
push
dec
xchg
ss
push
pushf
sbb
ret
ins
push
adc
xor
fstp
in
fcmovnbe
sbb
xor
jg
and
test
pop
bnd
icebp
jb
lahf
shl
hlt
jb
pop
push
mov
xlat
and
pop
bound
sub
in
dec
xor
add
lock
gs
pop
push
jb
repnz
(bad)
sar
(bad)
add
jbe
dec
fs
inc
das
mov
mov
lock
dec
jb
mov
mov
in
adc
push
adc
jae
jl
hlt
pusha
mov
and
jmp
outs
add
mov
cmps
pop
add
dec
sub
add
cmp
jo
loope
jecxz
jmp
dec
lahf
fisub
bnd
std
push
xlat
scas
xchg
xor
in
in
lock
addr16
add
dec
inc
ret
ret
dec
dec
sub
inc
outs
fild
cmp
and
pop
mov
mov
mov
mov
lock
xchg
and
inc
enter
sar
and
ins
call
lahf
in
xchg
xchg
mov
lahf
push
dec
popa
(bad)
jmp
ss
mov
mov
(bad)
aam
fst
mov
and
stos
mov
and
pop
add
sbb
sbb
push
fiadd
outs
xor
xlat
fsub
retf
xchg
xchg
adc
sub
jmp
ror
lds
xor
mov
ins
loope
and
jnp
xlat
movs
iret
test
mov
ja
push
out
lds
iret
or
xchg
lock
in
sub
jle
xchg
cs
std
cmp
push
mov
pushf
xchg
pop
and
dec
fnsave
imul
pop
pop
repz
pop
pop
jl
rcr
xor
or
nop
pop
lods
push
aas
jmp
mov
inc
test
test
sub
push
push
mov
cmp
and
pop
retf
jp
push
add
xchg
pop
mov
pop
lds
test
prefetcht0
pop
cwde
xor
out
jmp
xchg
lahf
sbb
sbb
in
adc
ret
inc
sbb
mov
jbe
es
jmp
repnz
pop
push
imul
cdq
or
or
jg
lea
popa
jmp
jge
or
repz
xchg
jns
or
shl
sub
gs
fnstcw
pop
movs
out
in
ins
(bad)
jl
xchg
inc
push
call
xchg
stos
iret
pushf
or
fistp
mov
cmps
pop
jg
xchg
xchg
mov
mov
jmp
mov
adc
pusha
cmp
dec
sub
push
sbb
movs
repnz
aad
or
sub
ret
jbe
stos
cmp
into
and
mov
inc
std
push
push
rcl
or
(bad)
adc
icebp
push
stc
cli
xor
push
mov
push
icebp
sbb
sub
retf
push
or
icebp
sub
jge
add
repz
push
push
adc
js
pop
dec
arpl
jl
fstp
xchg
rcr
push
pushf
scas
sub
(bad)
rcl
mov
ds
jbe
cwde
ret
int3
lock
imul
test
or
dec
cmp
pushf
push
aad
aas
retf
dec
inc
inc
lahf
pop
pop
dec
sbb
pop
idiv
sbb
fidivr
jge
xor
dec
push
sbb
sahf
dec
mov
jge
mov
fisttp
sub
pop
xchg
sub
out
sbb
sub
xor
dec
pop
cmps
retfw
out
mov
pop
or
xor
xor
or
xchg
aam
fst
jbe
adc
es
pop
xchg
outs
add
outs
(bad)
movs
jno
cmp
cmp
and
pop
adc
xor
outs
(bad)
aam
sbb
rcr
rol
cmps
dec
push
sub
xchg
scas
add
jmp
mov
data16
sbb
cmp
mov
adc
mov
in
cmp
jne
dec
(bad)
jge
xchg
stos
loop
leave
repz
inc
repnz
repz
xchg
push
mov
pop
cmp
xchg
fbstp
(bad)
dec
rcl
inc
test
test
es
in
fucomp
in
sbb
(bad)
popa
mov
repz
fwait
nop
adc
inc
xchg
cmp
out
cli
jmp
pop
std
jo
fst
inc
popa
lods
or
repnz
into
pop
dec
push
fst
pop
sar
ss
pop
popf
popa
mov
adc
popf
mov
test
ficomp
fidivr
dec
mov
popa
(bad)
jae
pop
les
mov
ds
cli
lea
or
sub
mov
inc
cmp
repnz
dec
test
in
inc
push
push
fsub
mov
enter
cmc
or
loopne
hlt
int
and
cld
call
scas
icebp
xlat
push
mov
inc
sbb
add
xor
call
dec
adc
mov
jp
fist
arpl
mov
cli
(bad)
mov
lock
add
jge
dec
or
xor
movs
imul
mov
cmp
pop
mov
lds
mov
loopne
pop
aam
scas
jnp
(bad)
add
mov
push
dec
cmp
retf
add
dec
and
imul
adc
int3
xchg
cwde
(bad)
test
pop
pop
test
adc
push
sar
jmp
lods
pop
int
(bad)
mov
cmp
sbb
lea
push
sub
inc
outs
sub
add
movs
(bad)
ss
test
cdq
xchg
jp
rcr
jbe
push
rol
sbb
mov
shr
out
mov
les
movs
cli
inc
les
mov
xor
icebp
lds
fwait
out
je
mov
pop
out
into
xor
imul
shl
push
pusha
push
push
aaa
aaa
push
and
cmp
pop
in
pop
adc
inc
mov
sbb
mov
sti
ss
in
movs
jbe
push
enter
mov
dec
cmp
popf
sub
jp
je
cli
xor
mov
sub
aam
(bad)
fwait
sub
adc
(bad)
pushf
inc
ret
in
(bad)
aad
ss
int3
mov
add
cmp
mov
mov
mov
and
adc
shl
jg
mov
add
xor
add
loop
sbb
mov
std
(bad)
out
ins
movs
mov
pop
dec
adc
scas
adc
(bad)
sti
loope
inc
sub
mov
sub
(bad)
jne
sub
loopne
ins
ins
mov
mov
data16
ja
retf
or
jo
(bad)
out
jmp
mov
loopne
dec
push
popa
and
jmp
xchg
push
test
or
cmp
mov
xchg
add
pop
in
cmp
jp
icebp
call
iret
cmp
cmps
xlat
mov
out
adc
cmp
xchg
aas
mov
inc
shr
loope
shl
xchg
enter
sbb
inc
mov
loopne
shl
and
imul
xor
cmp
push
bound
and
fcom
in
mov
push
inc
or
cmp
scas
shl
lock
cdq
ror
idiv
mov
xchg
sahf
out
js
jnp
cmp
mov
lods
mov
inc
adc
movs
sbb
inc
jge
inc
cmp
mov
into
outs
sub
mov
adc
xor
jae
ds
imul
sbb
sbb
sub
ja
test
jp
add
push
add
add
mov
or
push
hlt
inc
mov
ret
int
je
fcom
int3
mov
add
shl
pop
fcmovu
push
lods
sbb
xchg
in
(bad)
psubq
sub
lea
and
bndstx
mov
xchg
addr16
ins
je
sbb
cmps
imul
mov
test
mov
test
js
push
jecxz
mov
(bad)
leave
mov
jmp
(bad)
popw
mov
adc
call
push
sbb
cdq
dec
fisttp
push
dec
out
mov
fsub
enter
mov
inc
push
cmp
loopne
and
call
out
mov
push
or
repz
mov
and
ja
and
adc
outs
sub
sar
in
pop
test
cmp
ins
or
lea
push
inc
dec
in
ds
cmp
pop
inc
cdq
xchg
add
inc
fwait
sbb
sar
mov
fcom
(bad)
into
xor
xor
(bad)
push
(bad)
sbb
loop
cdq
sbb
adc
dec
push
dec
out
aas
out
jg
inc
mov
sub
loope
movs
not
jno
jne
mov
(bad)
or
in
js
add
jns
icebp
stc
push
xor
or
mov
inc
and
in
fidiv
rcr
pushf
hlt
hlt
dec
mov
pop
test
cwde
cmp
imul
xor
lea
push
add
cmp
pop
outs
push
mov
lock
aad
ins
cmps
push
lods
pop
xchg
inc
pushf
ficomp
fsubp
sbb
pusha
mov
dec
sbb
cmps
and
int3
push
xor
rcr
lods
fimul
dec
mov
out
mov
imul
or
js
movs
or
pusha
call
cmp
inc
xchg
test
scas
ja
mov
push
stc
out
inc
data16
mov
sbb
imul
xor
cmps
in
and
cmp
rcl
stos
push
leave
adc
ffree
mov
and
nop
mov
mov
lahf
sbb
lds
mov
loop
pop
inc
int3
sub
and
in
imul
pop
enter
inc
mov
in
loop
or
push
pop
fcmovne
cmp
(bad)
call
add
mov
xchg
xor
(bad)
and
rol
pushf
mov
inc
push
add
(bad)
lahf
xor
sub
jle
sub
push
inc
adc
js
std
or
ss
(bad)
push
pop
leave
sti
pop
jb
jge
ror
mov
lock
retf
or
mov
mov
mov
scas
add
jno
and
adc
push
add
clc
mov
push
mov
and
ret
mov
cmps
add
dec
movs
jg
cmp
out
pusha
jmp
sbb
cmc
aaa
and
mov
push
gs
mov
inc
or
fld
ins
sub
hlt
fdivr
inc
call
fld
push
inc
(bad)
and
repz
call
jbe
and
xor
ret
inc
ins
inc
adc
jecxz
fcom
mov
mov
dec
push
scas
(bad)
mov
mov
(bad)
imul
stos
popa
push
xchg
push
(bad)
movs
inc
dec
sub
mov
dec
or
jecxz
test
cmp
xchg
xor
and
hlt
movs
nop
clc
and
aam
stc
sbb
dec
mov
pop
xchg
or
gs
push
sbb
lods
push
sub
push
mov
dec
mov
and
sub
lea
and
or
inc
and
jle
hlt
cmp
sahf
and
push
adc
and
inc
xchg
fsubr
and
es
jns
div
popf
sbb
icebp
sub
fcmovnbe
and
je
clc
cmc
push
pushf
adc
and
adc
xor
data16
aam
shl
sub
rol
xor
pop
mov
xor
jno
daa
mov
and
xchg
add
icebp
fistp
(bad)
adc
shl
jp
sub
jecxz
push
and
push
mov
(bad)
in
into
add
cli
outs
movs
mov
inc
jb
mov
or
in
nop
scas
pop
dec
adc
inc
popa
icebp
lods
nop
nop
sar
lods
push
mov
mov
xchg
cs
fisttp
ret
stos
xor
lds
ret
lods
push
sub
pop
mov
cmc
loopne
fisttp
rcr
add
inc
dec
xchg
jo
ror
mov
movd
in
loop
imul
mov
cld
and
xlat
push
mov
int
jmp
out
sub
dec
mov
and
adc
pop
out
mov
fstp
je
mov
cmps
sti
ss
push
shl
sub
pop
inc
rcl
cmps
repz
mov
push
aad
fwait
mov
out
in
pop
cli
outs
push
push
repnz
cdq
ret
jmp
in
jmp
pusha
and
and
push
mov
mov
add
push
sbb
ret
inc
pop
shl
gs
pushf
int
mov
jp
movs
test
test
and
xchg
call
mov
inc
push
test
and
data16
ds
(bad)
inc
sbb
jmp
loopne
int
fnsave
pop
cmp
jns
xchg
sub
pop
xchg
xor
test
and
push
cmp
retf
dec
cmc
out
and
arpl
pop
out
ret
inc
inc
adc
into
dec
lods
cli
xlat
movs
retf
inc
imul
mov
add
inc
cs
and
pop
adc
(bad)
stos
xlat
cmps
rol
cmp
inc
cwde
jne
jne
push
pop
mov
xchg
(bad)
xlat
jb
(bad)
dec
stc
gs
(bad)
cld
mov
clc
xstore-rng
cmps
push
or
movs
ins
add
xchg
mov
xor
xchg
push
rol
inc
gs
adc
je
scas
dec
hlt
push
jne
inc
push
xor
pop
jp
push
ret
in
push
xlat
int
mov
daa
int
pusha
ret
jmp
xchg
in
jg
sub
xchg
in
js
pop
mov
jmp
test
pop
adc
repz
mov
in
xor
repnz
shl
cmp
jns
mov
clc
jne
lea
mov
fadd
push
out
mov
in
add
mov
xchg
iret
addr16
inc
sub
pop
aaa
fmul
jecxz
es
fdiv
ja
rcl
(bad)
dec
ja
mov
and
or
sbb
jmp
adc
push
jmp
pushf
pop
in
stos
cmps
pushw
or
mov
mov
or
(bad)
daa
or
enter
ds
bound
inc
push
pop
jg
inc
ins
jge
imul
and
ror
push
inc
xlat
sub
sub
retf
arpl
frstor
in
test
mov
dec
cdq
sahf
int
add
pusha
outs
push
mov
rcl
jp
out
pop
aas
jmp
jb
pop
jmp
jg
fld
rcr
push
repz
outs
push
fistp
popa
outs
sbb
jno
loopne
dec
mov
cmp
and
lahf
xchg
fcmove
push
push
fsub
int3
or
repnz
fadd
adc
jge
mov
mov
push
sub
sub
or
fcmovb
cmp
outs
mov
adc
cdq
ret
popf
xchg
test
(bad)
clc
sbb
out
adc
idiv
dec
or
add
aam
jnp
mov
and
test
popa
mov
dec
movs
cli
outs
dec
into
int3
mov
gs
and
inc
aaa
leave
ficomp
scas
xchg
cs
jle
retf
fsub
movs
sub
pop
adc
fdivr
push
cmp
and
adc
jmp
(bad)
pop
(bad)
adc
sti
push
fmulp
popf
xor
sub
xor
jae
jp
push
outs
mov
cli
push
mov
dec
and
dec
loop
dec
inc
add
rcr
stc
dec
lds
rol
fsubr
cwde
stos
addr16
dec
push
fistp
shr
stos
inc
mov
jg
outs
jne
out
sbb
jmp
fnsave
inc
push
adc
outs
inc
ins
jne
xchg
sahf
sbb
mov
xchg
call
loope
call
mov
(bad)
stos
pop
leave
mov
and
shr
ret
sbb
fsubr
fld
repz
push
call
jl
out
xchg
sbb
enter
cli
dec
jbe
stos
sub
jo
sub
pushf
test
xchg
retf
dec
jl
inc
lods
in
jge
pusha
add
into
mov
push
add
fisub
push
pop
inc
and
movs
stos
loope
jmp
jae
pop
cmp
jmp
mov
imul
mov
fdiv
pop
repnz
retf
scas
les
(bad)
in
cld
adc
clc
inc
(bad)
jne
sahf
fdiv
in
add
fs
dec
jl
xchg
std
call
into
and
dec
repnz
movs
mov
mov
imul
cmp
mov
jnp
cs
push
sbb
cmp
dec
dec
mov
pop
push
mov
fs
xchg
test
je
or
pop
inc
pop
out
ja
push
sar
dec
mov
pop
add
fild
add
add
pop
and
and
scas
arpl
cmps
xor
and
or
jae
sub
movs
ins
sbb
pop
dec
jne
mov
cmp
and
cwde
add
scas
bound
and
sbb
pop
and
test
cmp
push
mov
es
test
or
loop
inc
pop
fwait
xor
fprem1
ja
add
aaa
sbb
ret
jb
fnsave
adc
xchg
add
jmp
hlt
push
ins
repnz
cmps
cld
and
ins
sahf
xor
lahf
jmp
sbb
call
add
or
add
jns
sbb
or
jecxz
cwde
cmc
call
dec
mov
jecxz
cmp
pushf
xchg
aad
mov
pop
test
jae
mov
or
test
fiadd
mov
jge
ds
cwde
xor
(bad)
and
fwait
cmp
mov
jge
stos
xor
pop
les
clc
in
adc
xor
lock
cmp
cmp
jmp
dec
ror
mov
leave
(bad)
(bad)
into
jne
daa
popa
(bad)
fsub
dec
or
das
fidiv
mov
rol
mov
cmc
cwde
ret
das
out
mov
sub
stos
gs
push
mov
xor
pop
xchg
test
cmp
fist
imul
cmp
and
mov
ss
xor
dec
mov
ins
scas
pop
jmp
and
push
sahf
in
mov
pushf
cmp
mov
mov
scas
lss
scas
mov
cdq
xchg
xchg
jmp
mov
fimul
adc
jns
lods
xor
popa
dec
jmp
sbb
xor
push
pop
xor
data16
aad
push
loopne
(bad)
iret
or
or
sub
cmp
shl
dec
cwde
add
lods
mov
out
pslld
mov
js
xor
push
lahf
xchg
inc
loop
ja
lock
inc
mov
ja
dec
dec
shl
mov
jmp
stos
mov
(bad)
aaa
rol
rcr
mov
xchg
dec
xor
dec
gs
cdq
and
lahf
(bad)
shl
shl
test
push
jb
adc
dec
xor
mov
fild
cld
ret
jae
xor
aaa
movs
fnstsw
loop
jns
push
frstor
aam
cmp
mov
(bad)
jmp
xor
sub
repz
add
adc
dec
and
xor
lock
cwde
in
xchg
inc
pop
mov
lods
or
mov
sahf
sbb
add
pop
add
scas
adc
mov
ss
mov
add
sub
add
dec
adc
movs
jmp
icebp
xchg
aas
std
inc
dec
mov
mov
cmc
mov
push
xlat
sub
xchg
inc
cld
ja
lea
ins
push
mov
and
jae
sub
jmp
loopne
add
dec
jnp
adc
popa
dec
mov
xor
mov
jmp
sbb
ss
add
jmp
push
stc
cmps
fld
fdivr
cwde
mov
test
mov
push
xor
pop
bound
ins
arpl
repz
push
test
shr
pop
push
fidivr
ret
and
push
add
xchg
xor
push
pop
pop
pop
les
or
inc
mov
jecxz
or
cmp
mov
cmp
jo
xor
(bad)
cmp
out
jne
adc
sub
dec
inc
je
loop
sub
mov
ret
sub
or
dec
leave
sub
mov
jo
pop
sbb
movs
retf
add
pop
add
pusha
pop
ret
std
inc
push
addr16
aas
les
xchg
mov
push
push
pop
call
jmp
inc
add
aam
xchg
push
adc
mov
and
dec
pop
sub
mov
std
(bad)
call
and
call
pop
in
sub
pop
ret
sub
lahf
add
sub
outs
ret
mov
inc
xchg
pop
mov
cmp
out
mov
pop
fsubp
loop
pop
idiv
movs
xor
xor
retf
and
gs
jmp
add
fdivr
pop
hlt
jno
stos
push
lahf
ffreep
lea
push
inc
mov
or
add
push
xchg
push
ss
movs
mov
push
call
cmp
jo
pop
fwait
jmp
inc
push
xchg
sub
les
out
(bad)
mov
hlt
js
aaa
mov
xor
pop
cmc
and
scas
mov
sub
sub
push
and
pop
jnp
(bad)
js
cmp
aam
lods
repz
ins
repnz
adc
xchg
mov
mov
fadd
or
xlat
mov
leave
mov
and
popa
sub
js
cmps
mov
mov
mov
dec
jge
(bad)
pop
test
daa
add
popf
jmp
and
stc
sahf
mov
xor
iret
in
pop
and
pusha
movs
sbb
cmp
sbb
push
icebp
hlt
dec
mov
popf
fimul
add
lods
mov
mov
pop
(bad)
arpl
idiv
cs
popf
xor
cmp
nop
xor
lea
adc
aaa
scas
inc
xchg
mov
out
imul
mov
xor
aas
ins
les
dec
mov
outs
push
cmp
pop
bound
repz
popf
retf
rcr
outs
fmul
mov
xchg
out
add
mov
jne
lds
xor
loop
mov
fsubr
dec
push
inc
or
jo
jle
stos
xor
mov
das
pop
mov
int3
sub
mov
in
sbb
cld
push
pop
adc
(bad)
adc
ds
fdiv
mov
imul
(bad)
pop
(bad)
mov
mov
shr
sub
pop
mov
fwait
mov
push
aad
pop
pop
xchg
pusha
mov
rol
cmp
jl
int
dec
in
pop
cmc
jae
cmp
stc
dec
sar
xor
cdq
mov
ret
pop
mov
push
lahf
mov
inc
stc
pop
adc
inc
movs
mov
dec
push
div
dec
lea
iret
inc
stos
cmp
sbb
cmp
cmp
bound
inc
mov
mov
xchg
pop
sbb
pop
and
or
push
loop
hlt
test
(bad)
xchg
adc
outs
mov
xchg
push
adc
pop
into
mov
inc
sbb
sub
or
jmp
push
sbb
fld
(bad)
jno
lds
inc
out
stos
hlt
lds
gs
cmp
mov
mov
outs
aas
pop
jb
test
dec
xor
mov
mov
cmps
test
repz
hlt
div
aaa
add
add
ja
and
es
xchg
je
leave
cmps
fistp
test
mov
(bad)
jle
daa
test
inc
dec
repnz
xchg
add
adc
mov
and
sbb
test
std
cmp
repz
hlt
sbb
popf
(bad)
std
lea
xchg
lahf
movs
add
sar
pop
mul
pop
pop
fadd
inc
out
clc
enter
xchg
shl
jle
mov
mov
lea
inc
in
add
sahf
mov
iret
int
imul
pusha
mov
push
mov
cmp
mov
sub
cmp
sbb
(bad)
mov
aas
movs
and
sbb
hlt
mov
dec
push
fucom
scas
test
inc
lea
iret
adc
xchg
not
mov
outs
xchg
aaa
adc
clc
fwait
jg
(bad)
push
fmul
or
inc
ins
jnp
sub
dec
gs
js
sub
(bad)
jl
push
leave
das
(bad)
cmp
cs
jg
jl
xchg
ins
dec
mov
in
and
scas
mov
inc
mov
lahf
dec
clc
int3
vmovsd
mov
or
lods
mov
pop
xchg
out
out
sbb
push
aam
jecxz
sbb
fisttp
xor
inc
inc
sub
xor
lods
xchg
add
xlat
stos
dec
jnp
mov
cmp
stc
mov
adc
shl
add
(bad)
lods
popf
xchg
and
dec
pop
and
loop
jecxz
aaa
xchg
and
add
mov
push
repz
aas
mov
push
pop
shr
aaa
imul
out
ja
pop
shr
push
dec
sbb
and
(bad)
arpl
pop
das
popa
xor
out
dec
pop
icebp
mov
and
call
(bad)
call
mov
inc
xchg
test
movs
push
mov
imul
cmp
scas
dec
push
sbb
(bad)
lods
push
ins
mov
mov
(bad)
std
mov
ror
pop
idiv
xchg
push
int3
imul
outs
arpl
jmp
add
fs
push
dec
sub
fmul
fild
stos
pop
add
sbb
movs
es
jno
mov
xchg
dec
mov
std
fdiv
ror
mov
scas
out
or
(bad)
cmp
ss
xchg
dec
mov
mov
xor
adc
mov
adc
lods
push
aas
es
push
lods
jb
div
mov
shl
mov
and
shr
pop
dec
xchg
pop
xor
jns
scas
pop
cmp
mov
call
test
jno
mov
pop
in
xor
jns
add
jecxz
stc
repz
fisttp
jmp
jmp
out
int3
sbb
(bad)
dec
push
add
jbe
dec
in
inc
int3
add
adc
xchg
mov
clc
inc
mov
push
inc
lock
(bad)
icebp
mov
adc
repz
fcmovb
adc
lahf
scas
dec
xor
inc
xor
ins
mov
or
or
adc
pop
dec
cmps
dec
mov
es
mov
inc
movs
leave
add
pop
and
cmc
push
xchg
test
ret
out
or
jo
jns
add
push
jae
(bad)
push
sbb
add
inc
adc
mov
fsubr
ret
sahf
xor
push
and
jg
jmp
lea
(bad)
xor
fld
cmp
mov
(bad)
mov
shr
jae
mov
inc
repnz
and
popf
mov
mov
jns
loope
and
push
retf
ja
inc
mov
out
add
pop
xchg
rcr
jge
bound
in
lock
or
mov
js
jp
ins
inc
mov
cwde
fidivr
mov
test
inc
in
retf
neg
jg
retf
cmp
xchg
popf
cs
std
mov
retf
fs
arpl
call
aad
daa
mov
and
rcl
fstp
aaa
pop
push
jmp
adc
xlat
outs
and
sub
jb
jmp
mov
jmp
sub
sbb
sbb
int3
inc
xlat
mov
fisubr
inc
pop
sub
das
cmp
stos
inc
(bad)
imul
lea
jmp
push
and
pop
mov
imul
inc
xor
mov
mov
add
lock
dec
fs
shr
xchg
fiadd
add
mov
jo
loope
dec
ja
mov
dec
jne
adc
sbb
into
cmp
fldenv
sub
push
mov
ret
aas
jecxz
lea
pop
shl
cdq
fwait
push
arpl
ret
or
mov
inc
cld
(bad)
sub
in
inc
stos
retf
jecxz
test
push
je
xchg
test
cs
pushf
pop
push
dec
(bad)
jecxz
pop
xor
and
lods
cmp
cmp
inc
and
push
iret
(bad)
add
fldenv
cmc
sbb
rol
jo
inc
jg
icebp
fadd
daa
(bad)
mov
or
dec
jmp
imul
fbstp
aam
pcmpeqd
push
xchg
cmps
cmp
adc
xchg
mov
retf
pop
jnp
mov
xor
dec
ffreep
lea
jo
js
sbb
jo
adc
xchg
add
clc
sahf
xchg
and
cmp
ret
or
push
call
push
fild
xchg
sub
std
pop
xchg
inc
int3
in
dec
xchg
js
and
jl
adc
loope
xchg
test
outs
xlat
imul
jnp
fstp
movs
retf
sub
sbb
stos
pushf
shr
retf
mov
(bad)
ss
shl
vpsraw
adc
popf
add
mov
aas
lock
xor
pop
lds
gs
es
jle
cmp
pop
ret
cmp
pop
cbw
xchg
aas
out
adc
test
mov
rol
push
mov
fidiv
mov
add
xor
adc
xor
push
(bad)
jmp
pop
in
lock
out
outs
(bad)
rcr
add
jno
repnz
cwde
loop
test
jae
sbb
cmp
xor
scas
jmp
xor
xor
mov
rcl
jnp
rol
lahf
mov
sbb
rcl
lods
idiv
(bad)
call
fsub
push
mov
or
push
pop
call
mov
std
fnstenv
add
ja
aas
pop
sbb
retf
mov
cwde
int3
(bad)
lahf
cmp
fild
mov
out
sbb
cs
jmp
out
push
push
rol
mov
jnp
xor
and
xor
dec
push
jae
cli
fiadd
fwait
leave
daa
cmps
mov
dec
in
fldenv
push
icebp
cdq
scas
jo
aad
loop
jecxz
lahf
mov
enter
xchg
pop
adc
sub
int3
int
aad
test
lds
retf
stos
and
test
cdq
and
leave
mov
mov
ds
sbb
in
or
mov
adc
inc
mov
add
add
hlt
xor
arpl
or
cmc
jle
cs
sub
xchg
setge
ja
cmp
and
mov
pcmpgtb
pop
cdq
ds
je
xchg
shl
(bad)
jmp
stos
adc
and
dec
xor
call
ds
push
adc
pop
test
lahf
icebp
push
ret
test
or
jo
fnstenv
mov
adc
call
aaa
push
sub
or
xor
inc
add
scas
jae
jb
clc
mov
xchg
jb
popa
retf
cmc
cmp
in
gs
mov
shl
mov
adc
fnsave
or
enter
std
ja
xor
out
sqrtps
ror
pop
loope
loope
mov
mov
test
cdq
iret
jo
adc
fst
fs
jmp
or
das
loope
out
dec
nop
fadd
ins
push
jb
into
out
jp
jns
push
inc
pop
lea
jne
cwde
pop
sub
or
cmp
xlat
hlt
adc
mov
push
jecxz
in
sbb
cmp
mov
cmps
jbe
push
mov
dec
out
mov
iret
sbb
test
inc
xor
push
rcl
cld
xchg
in
xor
scas
adc
cs
loopne
into
stos
(bad)
enter
popf
cmc
push
stc
cmp
stc
(bad)
stc
imul
aad
inc
push
and
jge
cmp
jl
(bad)
mov
push
mov
outs
shl
ins
jmp
clc
jmp
xor
cli
bound
pop
popa
xor
shr
sub
stos
mov
gs
iret
cmp
cmp
xchg
ja
xor
push
les
rol
les
daa
call
sub
pop
and
dec
pop
mov
(bad)
push
cmc
cwde
sub
loopne
out
rol
mov
cwde
cmp
mov
mov
inc
sbb
pop
scas
jg
sbb
dec
pop
dec
ds
out
xor
lea
mov
movs
dec
xchg
cmp
movs
jne
jns
sbb
add
jg
int
inc
mov
arpl
popa
pop
sub
add
gs
ins
xchg
mov
add
and
rcl
xor
pop
push
in
mov
or
call
push
pop
cmp
or
arpl
pushf
sti
adc
cmp
jg
cwde
jo
mul
popf
shr
mov
not
imul
jne
movs
or
mov
mov
ja
jge
dec
stos
mov
not
test
push
and
mov
(bad)
sub
sahf
add
inc
arpl
dec
adc
jnp
mov
ss
or
and
pop
xchg
pop
lea
popf
or
lods
je
call
cs
aas
nop
dec
stc
icebp
jmp
dec
imul
push
and
xor
out
ffreep
mov
dec
and
mov
scas
sbb
mov
rcl
pop
retf
hlt
or
xor
jle
jae
pop
mov
add
mov
neg
fisub
mov
scas
pop
sub
jmp
push
pop
iret
mov
jg
adc
mov
lds
dec
push
les
add
mov
fdivr
not
arpl
cmps
xchg
fsubr
or
xor
out
aas
or
not
mov
jl
dec
push
jo
or
push
inc
out
sbb
add
mov
and
and
shl
mov
adc
and
or
push
push
mov
adc
mul
nop
scas
aad
test
daa
and
add
aam
xchg
sbb
xor
test
sbb
xor
pop
mov
test
fcomp
jmp
push
sbb
imul
fld
sub
iret
sti
(bad)
rcl
out
adc
jmp
mov
mov
aaa
push
shr
aas
loop
add
std
mov
arpl
jle
nop
dec
outs
mov
inc
addr16
push
sbb
es
outs
cdq
mov
in
pushf
inc
xchg
(bad)
cmp
adc
mov
or
arpl
mov
daa
enter
cmps
loope
ins
enter
jae
in
movs
inc
adc
enter
daa
daa
jecxz
scas
xor
cmp
das
xor
loope
int3
pop
sub
retf
cmp
push
push
(bad)
fimul
test
push
sub
pop
jmp
out
mov
out
adc
and
jne
and
mov
(bad)
lahf
xor
mov
clc
pop
movs
adc
add
leave
add
xor
int3
adc
outs
dec
lods
cmp
ins
fisub
scas
pop
mov
in
push
dec
cmp
(bad)
mov
xchg
jecxz
jmp
mov
inc
stos
adc
mov
lock
ins
dec
push
dec
pop
stc
jge
mov
sti
sub
lea
divps
(bad)
pop
push
fisttp
mov
stc
int3
lods
sbb
dec
and
pop
out
pop
fild
xchg
retf
shl
aad
into
std
xor
mov
ret
mov
fs
int
jno
push
inc
xchg
push
bnd
xchg
arpl
arpl
mov
jl
dec
pop
sbb
movs
pop
mov
scas
pop
sbb
jp
xor
fs
dec
adc
sub
xchg
rcl
in
ss
ffree
xchg
iret
(bad)
stos
out
push
sbb
cmp
jbe
adc
pusha
pop
fiadd
push
leave
inc
repz
xor
call
std
(bad)
lahf
sbb
or
pop
mov
xchg
jge
sbb
cwde
js
(bad)
stos
cmc
fadd
(bad)
retf
xchg
bound
pop
add
cmps
sub
sub
lods
push
out
aaa
popa
and
sti
push
dec
ss
mov
cli
sar
push
xor
inc
xlat
mov
sub
addr16
int
in
sub
mov
jmp
loopne
daa
lods
inc
out
loopne
cmps
jne
mov
jp
jb
icebp
jbe
jmp
ds
xor
ds
pop
push
in
sti
and
jns
jmp
xchg
mov
imul
xor
movs
or
movs
inc
stc
vmovddup
pop
bound
cmp
pop
jp
push
jp
fwait
bound
je
cmp
add
je
mov
xor
mov
js
sub
ds
and
cmp
out
pop
mov
rol
adc
sub
xor
(bad)
or
jns
xchg
movaps
or
ins
fidiv
stos
ins
aad
retf
neg
mov
cmps
jb
ud1
ss
icebp
push
aaa
push
gs
push
out
out
add
aam
mov
xchg
inc
std
mov
xor
xchg
or
out
jmp
add
inc
fdivr
xchg
cs
sub
repnz
stos
repnz
xor
mov
adc
out
dec
mov
and
aad
add
and
mov
push
fs
leave
fistp
sahf
push
lea
stos
or
dec
fwait
mov
outs
mov
stc
xor
sub
xchg
sahf
sub
adc
in
fs
les
clc
xchg
jbe
push
mov
fadd
(bad)
xchg
xor
outs
jg
sbb
(bad)
jge
mov
ins
and
cwde
xlat
push
fadd
into
sub
fisttp
jl
xor
pop
inc
test
aad
xchg
fdivr
xchg
daa
mov
movs
lds
dec
in
ret
or
cmp
ja
or
adc
xor
adc
leave
lea
or
and
stos
jae
outs
mov
xchg
adc
jnp
pop
mov
mov
jl
xlat
pop
jno
mov
inc
or
aaa
fisttp
dec
add
jmp
aaa
in
out
jg
fs
ja
lds
mov
retf
and
mov
push
shl
pop
push
dec
lods
sub
je
pop
or
std
jb
popa
jmp
aaa
clc
dec
push
jg
adc
push
(bad)
inc
push
pop
push
les
mov
(bad)
outs
(bad)
mov
xchg
fbld
xor
add
stos
push
sbb
outs
movs
or
arpl
mov
add
out
add
aad
sbb
(bad)
icebp
jmp
scas
jmp
sub
stos
sbb
ret
in
adc
jecxz
retf
enter
xor
and
pop
cs
jo
jno
push
jg
out
jae
lock
mov
dec
retf
stos
int
ret
inc
jmp
jecxz
popa
or
ss
xor
popa
xor
jl
dec
icebp
les
mov
cdq
test
mov
jo
sahf
and
scas
in
daa
es
jb
outs
fcomp
icebp
arpl
sub
retf
xlat
fwait
ret
mov
mov
inc
sub
cdq
imul
test
jae
dec
js
xchg
lock
loope
loop
jne
mov
mov
out
jg
mov
push
mov
cmp
push
sbb
cli
cmp
into
and
test
pop
rcl
data16
ins
mov
fisubr
ds
shl
fidiv
mov
pop
mov
in
inc
pop
ins
(bad)
lods
cmp
mov
dec
and
cmp
or
sub
mov
pop
cmp
pop
sbb
mov
es
adc
mov
push
mov
shl
or
aam
xchg
dec
daa
or
xchg
sti
es
or
pop
bound
shl
ffreep
fstp
ins
int3
jg
sub
daa
call
popa
and
and
push
movs
mov
mov
outs
movs
loop
shl
stos
(bad)
rol
enter
sbb
jge
xchg
stc
cdq
jmp
(bad)
les
mov
les
push
repz
sbb
nop
in
(bad)
movs
dec
sub
mov
imul
mov
jmp
pushf
push
jecxz
push
loopne
mov
stc
ds
popf
or
inc
ror
retf
inc
(bad)
mov
mov
mov
repnz
add
aas
shl
adc
sbb
xchg
mov
stos
sub
pop
clc
dec
and
jge
movs
shl
sbb
pop
and
xor
or
dec
in
dec
(bad)
xor
dec
into
mov
sti
jae
sti
pop
test
dec
mov
int
test
out
jl
xlat
cs
jne
popf
rcr
test
sub
test
jl
loope
pop
xchg
pop
mov
jns
movs
sub
test
adc
loope
push
fmul
pop
mov
mov
pop
adc
add
xchg
scas
xor
icebp
or
inc
bound
jo
pop
and
call
popf
push
cld
jns
(bad)
in
addr16
inc
cmp
pop
(bad)
ror
mov
adc
mov
sub
iret
mov
or
sub
mov
arpl
push
cmp
mov
out
std
in
mov
push
std
jo
xor
test
loop
(bad)
push
scas
int3
test
and
outs
retf
add
mov
stos
pop
in
adc
push
(bad)
sahf
jle
out
jne
dec
jge
inc
into
pop
push
adc
and
popf
adc
fcomp
xchg
shr
cmp
call
lods
lahf
or
ins
call
in
es
es
adc
inc
dec
add
push
pop
jo
test
adc
fmul
stos
test
outs
inc
or
or
loopne
inc
nop
stos
fild
push
mov
sbb
cmp
dec
mov
aas
stos
dec
das
outs
repz
mov
fldcw
in
ins
ss
test
fidiv
inc
adc
push
xchg
je
pop
call
outs
jp
push
gs
dec
push
mov
repnz
retf
in
dec
adc
popa
in
xor
leave
jecxz
aas
fucomi
fcom
or
dec
cmp
sbb
mov
(bad)
dec
sbb
xor
das
or
and
and
jmp
arpl
push
in
and
std
cdq
and
and
fsubrp
test
pusha
or
pop
mov
rcr
dec
cs
icebp
(bad)
mov
(bad)
into
or
mov
test
push
cld
popf
push
aas
cs
mov
gs
sub
sub
loope
xchg
cmp
mov
test
jmp
cmp
mov
mov
stos
sbb
push
adc
xor
jp
mov
mov
adc
test
push
das
or
gs
push
inc
xor
mov
rcr
adc
daa
lds
mov
int
lods
mov
push
xor
adc
mov
dec
mov
or
cmp
inc
sub
mov
adc
fnsave
dec
aad
movs
dec
dec
xchg
push
jecxz
fwait
retf
adc
add
int3
shl
xor
cmps
adc
sub
mov
loop
mov
adc
dec
fstp
jb
je
pushf
lea
mov
test
pop
xor
shr
es
mov
es
adc
push
mov
dec
or
push
pop
lods
ss
call
repz
push
nop
mov
jmp
xor
add
daa
arpl
inc
mov
es
mov
pop
call
xor
pushf
(bad)
lods
and
sub
imul
add
xchg
jbe
pop
add
in
fwait
push
add
aaa
mov
inc
push
mov
push
mov
ins
stc
xchg
cmp
mov
lds
(bad)
fld
sub
and
pop
lds
ja
xor
addr16
dec
gs
xchg
cmp
mov
shl
cmps
imul
cwde
push
in
in
mov
xor
xor
jns
retf
xor
sbb
bound
iret
ds
fistp
sbb
cmp
test
test
pusha
int3
lods
outs
inc
cli
imul
jmp
push
aas
inc
imul
ds
add
sbb
aad
(bad)
and
inc
imul
arpl
adc
adc
inc
push
push
ds
push
jb
add
sub
mul
lahf
cmps
fsubr
data16
int
jnp
xor
and
mov
in
mov
cdq
stos
shr
pop
sub
add
retf
mov
jae
jle
stos
js
inc
jo
mov
enter
(bad)
jmp
aaa
and
mov
adc
xchg
call
nop
mov
pop
out
stos
xchg
mov
fwait
jno
nop
cs
shl
xchg
dec
inc
push
xor
in
inc
call
dec
cmp
outs
out
ins
xchg
lods
jns
inc
xor
lock
ins
in
clc
ret
ror
lahf
pop
test
daa
das
jle
add
lahf
xchg
(bad)
sbb
dec
pop
jmp
cs
clc
cmp
retf
jns
scas
shl
gs
dec
dec
aad
mov
mov
jecxz
cmps
popf
sub
cs
ret
ins
std
test
and
ins
cmps
cmp
cmps
push
(bad)
movs
mov
add
push
cmp
jp
mov
test
test
sbb
inc
dec
scas
pop
lea
(bad)
jae
shl
adc
popf
and
mov
inc
push
movs
es
mov
clc
xchg
mov
retf
retf
inc
and
clc
jl
in
dec
mov
jp
lock
popa
aad
call
pop
xchg
sti
jmp
mov
mov
inc
sub
int3
out
push
jo
aas
rcl
js
leave
call
(bad)
aaa
and
bt
(bad)
fisub
ja
in
ret
sub
sbb
call
lahf
stos
int
inc
mov
lods
and
add
xchg
mov
inc
add
(bad)
js
xor
ins
sub
int3
mov
imul
repnz
jmp
xchg
sbb
call
xchg
sub
hlt
dec
aas
or
and
sub
fwait
xchg
(bad)
pop
jns
xor
cs
mov
sub
jnp
(bad)
out
push
cmp
xor
sub
xor
lds
fwait
mov
jno
mov
repz
sti
jmp
cmp
leave
icebp
and
aam
pop
cmp
icebp
fild
repz
mov
xor
jns
mov
sub
aas
aad
sub
pop
add
push
jp
inc
stc
add
daa
mov
push
and
xor
dec
scas
lods
jg
xchg
sub
retf
push
and
test
cmp
xchg
ja
jae
or
adc
push
dec
jo
fist
rcl
push
call
adc
mov
outs
push
js
adc
sub
call
pop
adc
sar
pop
xchg
jns
push
sti
repnz
xchg
ret
iret
inc
sub
test
add
sar
repz
pop
dec
push
lds
xchg
loope
aaa
out
imul
add
mov
pop
and
pop
div
cwde
mul
mov
push
ret
cmp
mov
(bad)
dec
mov
sbb
retf
call
adc
mov
sbb
or
dec
push
jmp
lds
in
or
(bad)
cmps
popa
ret
in
ret
sar
sbb
push
jmp
mov
mov
cmp
push
inc
jbe
push
mov
imul
fs
daa
mov
sub
mov
iret
xchg
or
clc
mov
mov
mov
(bad)
mov
sub
push
xchg
mov
mov
(bad)
mov
dec
adc
push
scas
pop
es
push
xor
adc
push
retf
sahf
shl
repnz
adc
out
les
adc
cmc
cli
pop
or
adc
fstp
pusha
xchg
ds
(bad)
in
inc
push
sbb
dec
ret
shr
mov
inc
push
jae
jae
and
stos
cs
(bad)
repnz
repz
jne
push
(bad)
enter
sti
add
xlat
ror
les
scas
cmp
les
(bad)
jae
xor
push
fisub
dec
enter
scas
mov
xor
dec
jno
xchg
fild
outs
inc
jmp
mov
and
and
jl
push
add
pop
jns
dec
xchg
and
(bad)
cmc
test
bound
adc
inc
ror
retf
js
nop
sub
push
in
shl
out
pop
outs
cmp
cmp
inc
pop
mov
mov
push
push
ins
daa
jg
sbb
(bad)
pop
jl
lea
clc
mov
test
loop
gs
mov
(bad)
xor
ss
out
int3
mov
mov
jno
out
jmp
push
cmp
inc
lahf
xor
stos
dec
fist
(bad)
cli
aam
aas
pop
sbb
mov
ins
ins
jno
cli
int3
loop
(bad)
retf
(bad)
jle
lock
fidivr
lock
les
sub
mov
in
out
dec
repz
pushf
in
sub
or
pushf
bound
call
jns
in
or
cli
push
movs
mov
dec
jo
(bad)
jo
dec
pop
pop
mov
mov
test
leave
mov
xor
gs
fwait
jp
jmp
xchg
fild
mov
call
int
inc
sbb
test
mov
add
lods
cld
push
das
add
pop
push
pop
dec
push
popf
xchg
sbb
(bad)
mov
je
cmp
xchg
ins
rol
test
or
test
pop
fdiv
and
sbb
in
ins
retf
jmp
jno
xchg
fsub
call
movs
cmp
movq
sar
push
out
push
jae
mov
loopne
clc
lds
xchg
ins
out
add
movs
sbb
mov
and
dec
das
push
into
and
ret
pop
test
cmp
lds
sub
mov
mov
push
sbb
hlt
test
iret
(bad)
outs
pop
push
sbb
int3
mov
mov
out
cdq
pop
pop
sub
mov
push
add
mov
lea
int
and
outs
sbb
ret
inc
push
or
jg
sbb
mov
je
push
jg
jo
ins
push
mov
xlat
ret
loop
mov
and
out
outs
(bad)
or
xchg
jae
push
pusha
cmp
mov
(bad)
sub
sahf
xchg
or
(bad)
sbb
ret
mov
adc
jg
mov
imul
push
push
test
pop
and
sub
cmp
fdiv
call
sbb
stos
add
outs
mov
push
xchg
stc
mov
dec
mov
repnz
fwait
test
jno
jae
mov
cmp
or
daa
dec
jp
aad
mov
out
mov
out
adc
inc
cmp
adc
xchg
je
in
test
loopne
fcmovnbe
xchg
inc
out
xchg
mov
xor
not
clc
push
pushf
adc
nop
stos
sbb
sar
addr16
dec
movs
sbb
rcl
or
sub
test
dec
std
nop
pop
or
ins
retf
lds
stos
test
sahf
lds
fimul
(bad)
mov
ins
push
leave
mov
inc
or
clc
add
xchg
pop
retf
xchg
aas
jmp
outs
shl
mov
std
mov
push
into
jo
push
ja
sbb
mov
or
popa
pop
sub
int3
enter
adc
jbe
jae
leave
mov
fwait
js
sti
int
fsubr
push
stos
fcomp
loop
xchg
cmps
jg
add
dec
jno
and
mov
xor
adc
push
imul
adc
pushf
cmp
out
or
test
dec
mov
fstp
sub
pmuludq
aas
bound
lahf
cwde
push
mov
add
jge
call
pop
pop
or
movs
inc
jle
out
ja
push
rcl
mov
mov
sbb
shl
sbb
fisttp
cld
cld
adc
fcomp
loope
ror
or
imul
adc
movs
jns
call
imul
xchg
adc
sub
and
jns
xlat
shr
fmul
add
adc
jb
jg
cmps
adc
xchg
jne
pop
dec
push
cmp
fnstenv
sbb
nop
sbb
mov
mov
jno
push
int3
sahf
popf
fnsave
add
pop
mov
inc
cmp
push
xor
ret
pop
(bad)
sub
pop
rol
(bad)
xchg
jmp
jno
fsubr
push
push
and
push
dec
iret
cmps
or
loope
cmps
push
das
mov
cli
dec
mov
leave
and
jp
test
jl
das
das
mov
inc
movs
in
out
fnstsw
xchg
lock
mov
jg
adc
dec
mov
stc
jo
aaa
inc
cld
ret
addr16
rol
push
scas
stos
sbb
imul
inc
xor
cs
and
push
and
mov
cmp
pop
sub
mov
push
mov
enter
enter
imul
imul
cmp
popa
push
dec
test
ins
lock
dec
movs
push
dec
mov
jnp
push
push
mov
mov
ret
cmp
mov
stos
call
pop
mov
inc
neg
aad
lods
mov
sbb
lods
emms
xor
xchg
or
cdq
add
(bad)
das
xchg
xchg
cmp
mov
sahf
xor
fwait
loop
inc
mov
dec
(bad)
rcr
lods
dec
pushf
shl
sub
xchg
jbe
ds
enter
dec
mov
fnstsw
call
retf
xor
ds
addr16
jno
jl
inc
mov
lahf
movs
sbb
lahf
iret
add
repnz
jno
cmp
in
pusha
scas
cmp
jnp
jno
outs
test
and
inc
nop
push
pop
pop
xchg
jp
imul
ret
add
clc
into
push
nop
ror
imul
cmc
cmps
sub
int3
xor
pop
ret
add
adc
scas
cmps
or
cli
cmp
adc
inc
pop
mov
sahf
mov
cwde
mov
push
or
xchg
sbb
lds
fidivr
push
pusha
xchg
xchg
xor
int
lods
mov
iret
inc
stos
je
std
xchg
xchg
push
sub
sti
popf
add
inc
mov
scas
inc
fs
xchg
xchg
push
xchg
pop
out
nop
mov
pop
in
mov
out
cwde
sahf
stos
div
ds
rcr
sbb
mov
pop
mov
loope
pop
loop
mov
scas
add
fadd
loope
sbb
hlt
and
and
mov
loope
in
cmp
icebp
fwait
push
mov
sbb
in
movs
stos
mov
sbb
lods
dec
sahf
dec
fs
inc
sub
test
mov
jmp
cmp
jne
jmp
int
rcr
call
xor
cwde
xor
mov
cmp
aas
addr16
push
push
pop
push
jmp
mov
cmps
popa
or
sub
cli
mov
jb
nop
bound
mov
xor
cmp
push
std
mov
jmp
mov
adc
mov
adc
in
sbb
push
ss
mov
repnz
adc
out
push
das
rcl
cdq
movs
cwde
clc
punpcklwd
mul
pop
jae
push
bound
fdiv
hlt
push
fistp
sub
inc
and
inc
pushf
outs
test
imul
call
cmp
je
pop
sub
xor
push
aam
jmp
sbb
stos
stos
das
es
and
call
sbb
mov
in
test
lahf
fisub
fcmovbe
add
cmp
mov
add
mov
xchg
inc
hlt
fwait
and
cmc
in
lea
cmps
ret
scas
fsubr
pop
icebp
call
mov
mov
cmp
and
cmps
test
sub
pop
fwait
gs
or
cmp
ja
movs
jmp
(bad)
js
jnp
enter
jmp
neg
or
cdq
sbb
lock
lods
adc
je
cmp
lea
xchg
mov
dec
aaa
data16
mov
or
and
iret
or
and
mov
daa
add
sahf
iret
adc
cs
loop
idiv
add
cmp
cmp
popf
int
dec
ins
dec
xor
call
std
jnp
jmp
adc
adc
and
ret
sbb
xchg
and
pop
ficomp
and
daa
sbb
add
add
lods
jl
push
xor
dec
cmp
fstp
pushf
cmp
sbb
sub
es
inc
or
jge
call
mov
push
cmp
or
int
jne
fdecstp
aaa
sbb
ins
popa
fwait
cli
scas
push
push
into
or
pop
xchg
add
inc
stc
dec
jmp
retf
bnd
out
arpl
scas
and
js
jmp
jmp
outs
mov
xor
pop
in
xchg
aaa
pop
in
push
push
loop
addr16
mov
jns
xchg
mov
lods
out
adc
sub
jle
push
fidivr
es
add
shr
aas
fwait
movs
test
or
(bad)
cmc
outs
mov
imul
mov
cmp
rcr
sub
stc
fidivr
in
mov
and
add
cmps
cmp
push
xor
adc
repnz
mov
sahf
(bad)
jl
dec
xchg
and
mov
cld
pusha
pop
and
jns
daa
inc
out
cmc
rcr
iret
dec
aas
mov
fist
and
imul
enter
xor
sar
and
div
out
jl
dec
jnp
outs
jg
jns
xlat
mov
inc
jl
cwde
mov
or
sub
ins
jne
push
sub
stc
or
das
push
icebp
jno
fcomp
mov
dec
mov
push
and
retf
aam
mov
stc
xchg
aad
dec
mov
pop
imul
push
scas
mov
sbb
shl
add
cld
sub
call
mov
add
dec
(bad)
cmps
cmps
jbe
or
and
call
cmps
mov
das
in
test
mov
jne
sbb
popf
outs
cmp
jg
movs
fxtract
pop
cli
in
test
iret
xchg
or
jns
fsubr
popf
das
inc
mov
inc
bound
cmp
push
adc
ret
mov
shl
ins
shr
fistp
xlat
push
repnz
inc
adc
push
shl
ss
pop
mov
jns
fbstp
test
aam
les
push
add
cmp
movs
das
pop
sbb
pop
cmp
add
fwait
push
xor
jbe
cmps
ret
mov
sub
movnti
lock
ss
rcr
xchg
sub
aaa
ror
xor
pushf
adc
xchg
test
dec
outs
mov
mov
adc
popa
xchg
sqrtps
test
ret
mov
fiadd
sti
mov
and
aam
ror
nop
sahf
push
div
dec
mov
jns
jno
and
jns
test
cmp
ficomp
xchg
xlat
test
cmp
shr
ja
int
mov
call
dec
jbe
xchg
push
icebp
and
sub
je
sbb
in
ja
mov
or
div
mov
mov
sar
test
scas
mov
xor
mov
mov
and
add
mov
mov
cmps
fdiv
push
std
aaa
fadd
pop
bnd
jl
retf
xchg
clc
adc
adc
daa
loope
push
(bad)
leave
test
xor
inc
add
add
ss
enter
mov
adc
dec
or
jo
mov
push
test
and
mov
les
cmps
sub
mov
jnp
out
inc
sbb
sub
mov
jg
add
sbb
scas
sbb
test
mov
or
sub
call
mov
cmp
xor
les
pop
mov
out
std
sbb
cmp
je
lea
sti
not
shld
jge
jmp
mov
scas
fnstsw
cs
inc
outs
xchg
inc
xor
mov
clc
aas
push
adc
xchg
sbb
icebp
std
inc
in
jnp
mov
std
ret
jno
push
(bad)
mov
(bad)
shl
mov
shl
pop
inc
or
xchg
ret
cmp
jbe
inc
(bad)
mov
sub
and
xchg
scas
or
sbb
clc
xchg
and
aas
rcr
or
sbb
test
ins
mov
sub
js
scas
aad
push
jp
das
add
lods
lods
jbe
ins
xchg
push
sub
pop
stc
or
push
and
enter
inc
daa
lds
inc
mov
and
xchg
ret
jmp
dec
and
call
retf
sbb
nop
push
mov
fnstsw
gs
shl
sbb
add
sub
sub
jmp
ret
sbb
xchg
ror
inc
inc
ret
push
iret
add
sbb
adc
pushf
push
shl
mov
nop
push
iret
adc
out
ja
ja
pop
dec
fcom
sbb
inc
add
(bad)
push
adc
add
xlat
push
mov
cmp
data16
cdq
clc
mov
push
and
cmp
fcom
call
sbb
jle
or
xor
mov
mov
data16
pop
sbb
in
stos
push
mov
in
imul
jne
outs
addr16
cmp
arpl
addr16
and
or
xchg
jno
jne
dec
lahf
adc
or
xor
adc
adc
mov
add
cli
test
enter
and
cmp
add
adc
push
jp
pop
out
ror
stos
push
ss
inc
jle
jae
xor
(bad)
out
xchg
mov
shl
ja
mov
lods
adc
test
addr16
addr16
xor
clc
xor
fst
leave
ss
repnz
sti
mov
sbb
pop
les
cdq
jge
sbb
scas
cmc
int3
mov
sub
xor
call
ret
mov
push
call
outs
pop
mov
sub
jp
fnclex
gs
adc
mov
retf
or
fdivr
test
adc
lods
cmps
dec
jl
mov
push
fldcw
ds
scas
pop
sahf
ficomp
jmp
loope
dec
cmp
(bad)
adc
jl
dec
mov
lock
loop
jb
lds
movs
xchg
sar
mov
iret
and
in
mov
loope
mov
mov
pop
mov
lahf
add
mov
and
lahf
jp
and
add
jg
inc
cmp
int3
fisubr
test
mov
jge
shr
dec
imul
cmp
rol
(bad)
pop
mov
adc
xor
xor
push
and
shl
out
je
mov
push
xor
inc
sbb
jnp
xchg
addr16
or
cs
add
jl
and
mov
movs
inc
out
adc
jo
aas
mov
cmps
inc
or
(bad)
pop
enter
call
mov
bound
icebp
xor
or
pusha
jl
jne
imul
and
inc
sbb
ja
pop
js
pop
mov
adc
movs
sar
jns
loope
xor
ins
sub
loop
rep
ret
push
xlat
popf
mov
push
into
lahf
ret
jl
sbb
popa
rol
sbb
ret
sub
pop
(bad)
out
mov
push
xor
sbb
cmc
dec
pop
in
xchg
jmp
in
jb
xchg
cmp
sub
je
xor
in
dec
popf
retf
retf
test
ins
ds
pop
not
je
jp
loop
xchg
inc
ss
iret
add
stos
or
xor
sub
or
push
jo
dec
dec
pop
fwait
push
retf
xchg
cmp
xchg
jne
xchg
retf
cli
sub
lods
and
leave
push
push
addr16
scas
cmp
and
movs
(bad)
call
aaa
adc
add
outs
ror
dec
mov
icebp
sub
pop
push
and
or
imul
or
mov
cs
jecxz
pop
arpl
jge
dec
sbb
cli
cmp
ss
push
dec
mov
fnstcw
aad
mov
push
sub
ror
xchg
pop
ret
retf
push
outs
clc
sbb
ss
dec
pop
mov
inc
stos
adc
sub
xlat
arpl
ss
mov
mov
movs
sbb
lea
xchg
mov
loopne
inc
lahf
sar
push
das
(bad)
test
fsubr
and
aam
sbb
(bad)
or
movs
dec
sbb
aas
mov
push
inc
call
dec
jo
cmps
mov
ja
hlt
dec
lock
imul
loop
sahf
push
outs
pop
outs
ficomp
push
mov
stos
push
push
icebp
int3
mov
inc
xor
jecxz
jmp
inc
mov
lods
call
push
stos
mov
sti
cmp
packsswb
xor
cmp
xor
ds
outs
or
xchg
xchg
or
push
pop
xor
mov
jns
cmp
sub
jbe
mov
cdq
sar
jmp
shl
jg
popf
and
cmp
sub
fisub
or
in
jb
rcr
fwait
(bad)
neg
xchg
les
mov
jmp
sub
pop
inc
(bad)
lock
fldz
idiv
sar
les
popf
cdq
mov
xchg
pop
(bad)
enter
cmp
mov
mov
(bad)
dec
and
mov
fs
scas
mov
fmul
pop
sub
mov
sbb
sub
loop
adc
ja
call
push
not
pop
cmps
out
out
call
mov
push
sbb
lods
add
sar
pop
jecxz
div
ret
icebp
pop
in
shr
pop
test
and
(bad)
loop
shl
adc
sahf
js
mov
pusha
add
ins
popa
in
mov
ret
jbe
je
xchg
out
test
jb
test
(bad)
fucomp
pop
mov
rol
and
clc
cmps
xchg
mov
or
imul
mov
dec
sub
movs
mov
add
dec
shl
loop
xor
sahf
dec
add
pop
jmp
pop
add
dec
sbb
lds
or
fsubr
cwde
pop
jnp
sub
push
jno
sub
adc
aas
jp
mov
lahf
arpl
and
(bad)
dec
xchg
fs
fsubr
rol
repz
mov
jp
fcompp
push
mov
or
mov
mov
lods
push
and
pop
adc
(bad)
shr
call
jge
sub
retf
push
je
push
bnd
xchg
shl
lds
pop
cdq
scas
ret
or
dec
setae
adc
push
xor
mov
loopne
pushf
nop
loop
push
add
xor
mov
lahf
and
xchg
mov
push
sub
mov
sub
outs
dec
sar
into
or
popf
retf
in
jae
dec
fdiv
cmc
sub
pusha
cmp
lods
pusha
cwde
inc
and
mov
inc
mov
mov
xor
out
and
mov
jne
addr16
dec
mul
or
or
xor
mov
cmps
push
push
jp
xchg
ss
cmp
retf
(bad)
adc
jnp
dec
and
and
lods
ret
pop
pop
inc
fwait
pop
jle
or
loope
fdivr
jo
jae
or
stos
outs
xchg
fmul
push
cwde
movs
icebp
scas
loop
push
and
out
jg
pop
inc
loope
lods
icebp
dec
icebp
or
mov
inc
or
je
sub
addr16
ret
xchg
int3
push
xor
sub
xor
push
inc
mov
jge
inc
mov
add
cmp
xor
pop
cmp
lds
xchg
mov
imul
fs
cmp
fcom
stc
mov
shr
push
or
jne
xchg
push
jb
mov
mov
and
add
dec
adc
jmp
push
mov
out
pop
sbb
jl
cs
retf
cli
cmp
cdq
hlt
mov
and
test
cmp
inc
sahf
je
lahf
add
add
fs
jle
add
xor
sub
(bad)
(bad)
int3
cs
(bad)
push
sbb
xchg
pop
nop
ror
fsubr
int
push
dec
jnp
in
fist
push
mov
test
adc
mov
add
mov
mov
jge
loopne
std
imul
pop
adc
fbstp
loop
jg
and
popf
xor
push
pop
xchg
dec
into
mov
fild
in
scas
adc
icebp
cwde
je
xchg
shl
adc
adc
mov
pop
dec
pop
jns
ds
pop
lds
mov
test
scas
ja
sbb
sub
vmread
or
push
int
xor
jns
add
mov
lds
add
cmps
lock
popa
jg
jmp
pop
mov
shl
mov
ficom
pop
push
or
sbb
cdq
inc
cmp
xchg
outs
sbb
es
and
pop
inc
ret
and
add
outs
in
out
sub
aad
fld
std
fwait
adc
jno
sub
std
out
cwde
loopne
add
jl
lea
outs
mov
sbb
fbld
or
es
mov
sub
pop
mov
and
mov
or
sar
mov
inc
es
mov
cmp
xchg
dec
movs
adc
es
out
sub
call
sub
push
or
std
sub
push
dec
add
cmp
sar
adc
(bad)
fnop
cdq
mov
xchg
out
mov
jecxz
push
aad
int
or
out
pop
test
pusha
push
push
test
sub
xor
mov
pop
mov
dec
out
popa
mov
les
xchg
cmps
pop
fbstp
add
xchg
iret
pop
xchg
add
lods
cmps
clc
push
(bad)
jp
iret
adc
das
mov
retf
pop
sbb
pop
cmp
fisttp
add
imul
int3
adc
adc
std
push
mov
mov
ror
mov
push
jns
dec
add
adc
jbe
xor
sub
xchg
jbe
call
xchg
push
imul
mov
pop
scas
jg
push
das
push
ret
sahf
dec
dec
adc
jns
xchg
push
or
outs
bound
cdq
xor
xor
jns
push
mov
mov
sbb
data16
repnz
fwait
ja
xchg
pop
dec
pop
jbe
or
movs
adc
xor
xchg
aaa
retf
inc
not
lock
push
push
gs
lods
outs
cmp
mov
cmp
pop
cli
add
jo
loop
add
std
inc
loop
mov
mov
lea
push
cmp
pop
jg
push
pop
xor
lds
mov
jmp
sbb
fidivr
sbb
xor
cmp
mov
lock
std
das
out
push
call
icebp
in
cmp
pop
lock
(bad)
sti
push
rcr
cmp
mov
sub
push
mov
cmp
shl
fmul
pop
addr16
cli
mov
sub
and
adc
loopne
or
mov
xchg
(bad)
pusha
jno
sbb
push
mov
dec
adc
leave
into
adc
or
pop
adc
and
ds
int3
jne
mov
dec
pop
sbb
and
jne
add
fld
jp
xor
jae
mov
fbstp
jmp
push
mov
cmc
or
mov
lea
jne
mov
je
xchg
sahf
dec
hlt
push
mov
xchg
aad
lds
and
out
inc
and
movs
repnz
shr
cmp
inc
and
sub
(bad)
adc
jp
inc
cmp
pop
push
jle
in
aam
jecxz
aad
stos
push
mov
xor
adc
ss
mov
sbb
jnp
adc
add
sub
add
sub
(bad)
mov
mov
pusha
mov
inc
mov
out
call
xchg
adc
inc
xlat
or
cmps
sub
rcl
outs
xor
or
vpmacssdqh
repnz
mov
jge
sbb
jns
mov
fnstcw
arpl
inc
arpl
and
sbb
adc
aam
jmp
in
inc
pop
int
rol
imul
mov
aaa
cmp
mov
xchg
lea
mov
and
stos
adc
and
les
(bad)
lock
jg
cmp
pop
mov
scas
mov
pop
loop
inc
cmp
and
iret
mov
fdiv
mov
sub
add
fistp
push
pop
jmp
out
aad
xor
cmp
cmp
add
nop
xchg
sbb
inc
cmc
mov
ss
mov
jns
mov
into
(bad)
push
mov
fadd
mov
and
inc
in
xor
rcr
and
cmp
jp
movs
mov
lea
adc
xchg
mov
popf
and
mov
movnti
pushf
fmul
jne
hlt
push
adc
push
cdq
inc
mov
jb
into
retfw
shr
mov
arpl
push
out
inc
jmp
pop
(bad)
out
push
repnz
imul
pop
mulps
xchg
das
aad
adc
scas
pop
cld
adc
cdq
jge
mov
lock
ret
int
movs
es
pop
or
push
jmp
xchg
mov
push
lods
mov
leave
mov
xchg
sub
popa
add
(bad)
test
daa
lods
pushf
scas
and
in
add
popf
stc
in
push
mov
or
mov
jae
std
add
mov
lods
clc
mov
sub
jge
xor
out
cmp
jg
push
and
cld
outs
adc
xchg
hlt
aaa
push
jnp
fild
movs
ret
lahf
(bad)
and
aam
inc
int
aad
aad
mov
xor
adc
sub
aas
lock
arpl
leave
clc
outs
loopne
pop
cmps
adc
pop
call
xor
enter
stos
and
sub
dec
jge
cmp
call
or
and
or
lahf
imul
mov
ds
int
das
sar
push
cmps
(bad)
lock
sub
ja
pushf
lock
adc
mov
rcl
je
push
(bad)
inc
jecxz
pushf
ret
xor
imul
rcl
sub
cli
jl
retf
mov
mov
(bad)
(bad)
mov
push
retf
test
fimul
fild
ss
sub
ror
pop
xchg
lahf
push
pusha
stos
or
clc
movs
rol
ds
lods
or
fisub
push
stc
mov
mov
mov
mov
cs
and
(bad)
fdivr
es
mov
fwait
push
aad
es
cmp
imul
ret
dec
imul
pop
cmc
popa
test
sub
out
jmp
jnp
and
int
mov
jg
stc
push
pop
inc
sub
dec
clc
xchg
sub
push
mov
cmp
jns
push
fisttp
dec
mov
sub
loop
aaa
and
jns
add
cmp
add
mov
adc
sbb
mov
sub
add
cmps
sbb
xchg
sub
mov
jnp
(bad)
fadd
jno
mul
scas
push
dec
xor
ins
cmp
repz
push
idiv
scas
and
fs
fsubr
test
mov
ins
fs
arpl
push
outs
in
call
out
sbb
adc
mov
cmc
lds
std
pop
add
cmps
mov
push
cmps
jbe
aaa
push
jg
mov
sbb
dec
test
xor
inc
into
sar
into
(bad)
call
(bad)
test
push
ds
shl
inc
fisub
test
sbb
inc
and
inc
push
arpl
std
out
sahf
inc
dec
cld
aad
out
ja
ret
into
repz
cld
push
div
xchg
sbb
scas
pop
stc
imul
add
call
das
jns
gs
sbb
mov
rol
(bad)
gs
hlt
add
mov
repnz
gs
into
sub
mov
mov
sub
cld
pop
pop
dec
xchg
sub
rep
std
movs
xor
dec
adc
mov
cmp
aam
jbe
xchg
dec
sahf
cmp
cdq
and
jno
xor
lods
dec
mov
imul
push
aas
pop
lds
into
add
jne
pushf
push
pop
dec
xchg
mov
cmp
push
pop
sbb
ficomp
neg
in
mov
sar
xor
movs
repnz
fisub
retf
ficomp
out
and
or
(bad)
jg
movs
cmp
into
jg
pusha
test
jns
cmp
pop
fdivr
sub
icebp
xor
adc
xchg
xchg
mov
movs
ret
aam
push
pmullw
cmp
fwait
cld
(bad)
je
leave
cmc
adc
imul
and
(bad)
xor
add
xchg
scas
in
aas
(bad)
jmp
call
ins
sub
in
push
push
inc
mov
ins
bound
inc
js
mov
inc
sub
movs
pusha
test
push
into
das
mov
mov
cmp
ja
aas
fistp
sbb
test
adc
jae
dec
retf
xor
in
scas
xchg
int3
mov
or
loopne
shl
lahf
xor
sub
imul
je
mov
jne
outs
cmp
pop
jg
repz
and
lods
ficom
das
mov
retf
inc
pop
fwait
push
cmp
and
js
movs
or
mov
inc
loop
pop
sbb
xor
retf
push
mov
jno
lods
ds
das
xchg
pushf
lock
aaa
stos
mov
lahf
imul
out
scas
clc
cmps
cdq
shl
and
sbb
push
call
sbb
jmp
add
add
dec
inc
mov
push
add
jmp
arpl
int
add
mov
sub
inc
cmps
push
xchg
cli
and
mov
xchg
rcr
loope
cmps
add
cwde
es
(bad)
lods
shl
xor
mov
in
shr
ret
dec
cli
call
nop
(bad)
mov
jg
mov
and
and
sti
or
ins
push
pop
and
out
push
cmp
test
cmp
xchg
addr16
sti
dec
cmp
sbb
adc
sbb
in
inc
inc
add
out
inc
gs
mov
fcomp
xor
fadd
cmp
adc
mov
popa
scas
mov
cs
xchg
cmc
retf
sbb
cdq
xor
cmp
fwait
push
mov
inc
dec
add
add
and
adc
mov
dec
sub
mov
pushf
mov
xor
push
pushf
rcr
cmp
add
mov
sbb
cmp
xor
iret
or
popf
xor
pushf
and
inc
pop
push
push
pop
pop
sbb
retf
sbb
cmp
stos
and
jmp
xchg
push
mov
rcl
mov
lods
cs
cld
movs
xchg
pushf
or
cmp
pmulhw
leave
sbb
pushf
xor
mov
xchg
add
push
je
add
and
shl
ds
add
or
es
rol
and
jae
daa
dec
jbe
xchg
jns
frstor
add
frstor
xor
or
add
xor
mov
or
js
push
sbb
enter
xchg
shl
sub
int3
or
cld
push
fdivr
aad
mov
ins
js
xchg
or
mov
pop
(bad)
xchg
fs
in
sub
ins
cvttps2pi
ja
cmp
sar
out
mov
rcr
cmp
out
xchg
dec
jp
mov
jmp
ins
and
push
nop
push
lods
push
and
and
and
adc
mov
mov
xor
pop
hlt
adc
mov
jle
out
and
cmp
and
mov
jg
push
mov
mov
ja
sub
push
ret
call
test
ror
or
retf
fistp
xor
pusha
or
cmc
push
lds
je
mov
dec
out
inc
cdq
jmp
sti
xchg
push
fld
cmp
movs
inc
sub
test
cmps
(bad)
pop
jecxz
test
add
and
test
adc
ins
cmp
test
dec
lods
cmps
lahf
mov
cwde
mov
out
aam
sub
jno
dec
adc
dec
pop
push
out
mov
mov
(bad)
push
pop
cmp
adc
jmp
ffree
mov
cmp
dec
out
scas
push
adc
shl
cli
out
mov
sbb
jne
dec
cs
xchg
dec
push
cmp
push
push
lds
xchg
add
xchg
push
dec
arpl
repz
js
pusha
push
sub
pop
pop
or
in
adc
jb
fld
push
imul
loopne
out
sbb
(bad)
jmp
xor
enter
popf
cmps
add
push
xor
shr
dec
push
inc
dec
mov
dec
add
jecxz
jns
mov
nop
add
adc
mov
pop
jg
(bad)
xor
daa
sbb
fsub
sbb
xor
sbb
loope
outs
and
retf
cdq
dec
cmps
loope
in
repnz
inc
xlat
cmp
sbb
pop
pop
test
jg
inc
mov
dec
mov
sub
jge
cmp
xor
mov
mov
push
enter
fisubr
loope
xor
jbe
pop
rcr
and
lahf
scas
pushw
add
fdivr
pop
mov
cmc
xabort
push
mov
adc
adc
mov
je
pop
cmp
jo
xchg
call
cmps
out
sub
sti
mov
sbb
(bad)
sets
pop
mov
cmp
(bad)
movs
pop
imul
imul
jo
or
cmp
cmp
sub
cmc
mov
xor
add
mov
pop
mov
mov
sub
mov
add
addr16
or
sub
sbb
sub
jecxz
lea
out
and
jge
std
push
popa
clc
into
adc
jecxz
dec
ret
mov
outs
pop
mov
nop
out
das
mov
pop
stos
push
add
cmps
sahf
out
call
cs
push
mov
test
or
imul
mov
movs
xchg
ins
lods
out
adc
dec
adc
fcmovb
outs
jno
aaa
test
ror
cmp
arpl
cmp
or
xchg
mov
push
dec
rcl
push
arpl
xor
or
mov
ins
sub
xchg
fdiv
jmp
jns
or
in
mov
scas
pop
xchg
jns
lods
sbb
mov
jno
jmp
mov
in
lea
inc
pusha
fs
jnp
push
cmps
into
stos
ror
xchg
outs
xchg
cwde
pop
test
fwait
dec
mov
xchg
or
rcl
add
mov
pushf
or
mov
mov
jae
push
pop
mov
xchg
(bad)
jmp
pop
jg
arpl
pop
in
addr16
sbb
sar
inc
lods
int
js
push
popf
push
in
pop
ins
out
push
dec
outs
je
or
mov
aam
clc
adc
imul
jmp
mov
jle
bound
jo
test
icebp
aas
xor
fidiv
aam
cmp
push
arpl
xor
xchg
mov
aaa
sbb
test
(bad)
push
test
dec
add
ins
clc
jno
sbb
ins
imul
test
loope
scas
lea
lods
push
stos
out
mov
pushf
pusha
addr16
mov
add
in
(bad)
pop
in
mov
xor
mov
sbb
pop
sbb
test
push
cmps
push
lock
xchg
and
mov
out
out
xchg
popf
aas
mov
std
jl
push
cli
xchg
adc
cmp
lds
mov
sub
pop
bswap
(bad)
cmp
add
jo
push
fisttp
cmp
int
inc
retf
iret
sub
mov
imul
push
leave
inc
inc
pop
call
(bad)
jb
sbb
rcl
xchg
xchg
test
out
shl
pop
icebp
aas
fs
pushf
xchg
mov
mov
jl
out
dec
sti
jmp
bound
xchg
(bad)
(bad)
in
pop
cmp
out
scas
pop
cmps
idiv
ss
sub
and
inc
shr
sbb
pop
cdq
inc
pop
cmp
in
push
sub
mov
push
ins
jns
cmp
scas
sub
adc
sbb
dec
retf
loope
stos
mov
sub
bound
std
ja
pop
or
push
mov
mov
in
test
mov
ds
mov
pop
jb
and
push
movs
and
push
fwait
dec
movs
add
sbb
pminub
shl
sbb
(bad)
aam
cdq
and
cmps
aad
jo
pop
sbb
push
movs
inc
jg
out
add
sub
call
fistp
mov
mov
rol
mov
cmc
popa
fld
stc
int
js
push
mov
xor
cmp
stos
xchg
jp
or
jno
in
cmp
out
lahf
sub
cs
repnz
mov
inc
add
pusha
jne
jne
lods
sbb
dec
adc
and
outs
sub
mov
xchg
jg
fwait
pop
in
cmp
dec
dec
mov
repnz
mov
lahf
jne
outs
add
rcr
int
mov
mov
sub
push
xchg
inc
xchg
xor
dec
enter
adc
lods
icebp
clc
lock
sub
movs
ret
xchg
sub
jae
lods
and
sbb
jno
and
pmaxsw
mov
mov
lahf
and
popf
idiv
dec
test
iret
xchg
or
movs
add
pusha
daa
adc
push
movs
mov
pop
aas
lahf
sbb
mov
inc
retf
jnp
scas
aaa
jnp
out
sbb
inc
scas
jg
pop
mov
add
in
sbb
jmp
xor
rcl
sbb
adc
lea
pushf
call
repnz
fist
dec
fcomp
(bad)
mov
ja
popa
inc
shl
(bad)
in
int
je
out
ret
adc
fstp
scas
sbb
mov
imul
nop
jl
sbb
popa
inc
repnz
addr16
jl
lds
rol
jecxz
cmp
xlat
call
cmc
je
pop
cmc
xlat
ins
lahf
jmp
retf
mov
or
sub
xor
xor
xchg
cmp
dec
pop
repnz
jmp
xchg
mov
fstp
lds
in
ss
int
cmps
stc
adc
mov
jmp
push
jns
fdivr
pop
sar
pop
xor
les
cmp
adc
or
xlat
mov
int
iret
xchg
mov
arpl
and
outs
bound
xchg
mov
adc
int
and
xchg
imul
and
mov
fsubr
mov
loope
mov
dec
sti
xchg
cmp
dec
mov
sub
push
stos
data16
jnp
jb
fsubp
cmp
xor
push
push
pop
test
and
mov
xchg
bound
mov
pop
inc
sahf
jg
fwait
es
pop
cli
xchg
pop
and
dec
pop
adc
pop
cmp
pop
repz
lods
dec
pop
cmc
dec
ror
push
(bad)
dec
arpl
fs
mov
mov
cdq
shl
sbb
popa
mov
xchg
cs
in
mov
mov
ret
push
fstp
and
push
jno
sahf
mov
imul
sahf
and
(bad)
loopne
sar
push
jnp
inc
sbb
clc
mov
xchg
ret
nop
scas
stc
mov
pop
sbb
fbld
mov
enter
inc
push
inc
in
and
dec
nop
(bad)
ret
mov
aam
add
sbb
mov
jo
inc
into
int3
(bad)
ins
sub
fsubr
dec
mov
mov
ficomp
adc
inc
(bad)
xchg
jae
out
and
jmp
cmp
pop
xor
loopne
and
dec
lock
and
in
push
xlat
ins
inc
ret
shr
push
dec
in
xchg
mov
push
pushf
mov
das
push
pushf
ret
stos
jmp
das
mov
dec
adc
sub
movs
ja
add
cli
mov
mov
xor
lds
shl
xchg
cmp
cmp
mov
call
mov
dec
dec
aaa
(bad)
dec
pop
cmp
inc
push
sbb
push
or
cmps
and
retf
arpl
jbe
push
cmc
add
data16
movs
push
bound
mov
call
les
mov
cmc
lock
jno
div
or
sub
dec
cdq
push
nop
xchg
cmp
mov
cmps
mov
into
xor
xor
sbb
and
mov
fidiv
int3
les
xor
add
mov
pop
inc
in
fwait
mov
cmp
sub
out
xchg
mov
mov
movs
loopne
dec
mov
mov
push
sbb
dec
lahf
sahf
inc
xor
int3
add
into
mov
add
jge
(bad)
jne
jle
lods
mov
out
xchg
mov
stc
mov
push
sbb
pop
dec
or
daa
cmp
sub
push
(bad)
sar
jae
outs
loope
sti
mov
(bad)
xchg
ins
push
stos
outs
pop
test
nop
mov
enter
ss
daa
je
mov
fistp
push
cs
jg
bnd
mov
xlat
pushf
mov
mov
ror
pop
int3
jmp
adc
fist
mov
inc
pop
dec
cmp
sar
fnstenv
sub
aad
(bad)
adc
adc
adc
sub
fidivr
mov
ss
dec
rcl
repz
add
pop
adc
push
fsubp
sbb
add
cmc
push
and
or
fst
scas
jne
mov
ror
adc
mov
jb
adc
jl
mov
movs
pop
shl
sti
mov
mov
add
outs
dec
mov
clc
icebp
int
or
push
fld
(bad)
sbb
jle
jmp
xchg
sbb
mov
xchg
pop
cli
and
jns
daa
ret
mov
in
pusha
cld
rcl
sub
fsubr
aas
int
sbb
xchg
into
test
call
mov
inc
sub
je
push
lea
loopne
sbb
xor
pop
ss
or
pop
and
jns
push
or
and
ins
imul
in
or
cmp
pushf
adc
repz
int
mov
add
ds
outs
lods
push
aam
ss
mov
mov
sar
jns
mov
and
pop
push
jno
jns
cmp
les
popf
jae
sub
mov
gs
xor
and
mov
int3
mov
ins
icebp
pop
(bad)
mov
ds
into
data16
scas
add
jno
and
mov
pop
shl
adc
pop
mov
push
jns
jmp
xchg
xchg
xor
movs
push
jge
adc
pop
jmp
enter
into
or
(bad)
xchg
sbb
dec
cmp
out
xor
xchg
retf
cs
arpl
ins
pop
push
scas
inc
test
dec
shl
push
adc
in
jno
xor
xchg
xchg
popf
sbb
jle
pop
mov
aas
xchg
cmp
adc
in
mov
add
test
push
das
dec
lahf
dec
mov
cmp
lea
fdiv
outs
cmp
dec
pop
pop
fs
bound
dec
mov
push
jmp
in
jecxz
push
call
adc
lods
sbb
data16
lahf
(bad)
movs
call
jnp
js
or
int3
xchg
push
mov
dec
xchg
lahf
xchg
pop
jge
pop
mov
test
xor
in
fisub
adc
adc
or
shl
inc
mov
movs
loop
int3
nop
push
jo
aad
mov
js
xlat
mov
dec
popa
enter
cmc
and
push
sbb
sbb
xor
mov
mov
in
cmp
loop
jmp
or
dec
mov
mov
outs
fbld
push
mov
jge
sbb
adc
ret
ret
and
inc
cmp
cmp
sub
mov
aas
cmp
xchg
pop
xor
lahf
xchg
imul
into
lahf
mov
cmp
sub
sub
bound
ss
push
adc
add
mov
pop
pop
jmp
pop
push
jge
dec
fnstcw
std
or
loop
fsub
sbb
retf
pop
xlat
dec
shr
cmps
sub
xor
loope
sub
mov
sub
and
leave
sbb
pop
and
and
xlat
mov
call
mov
pop
sub
outs
jnp
rcr
xor
push
mov
inc
push
loope
mov
push
jge
push
in
sub
jbe
gs
inc
out
push
mov
xchg
or
sahf
sbb
xor
mov
jg
cmp
aam
adc
into
jbe
mov
ror
mov
loop
cmp
adc
sub
fidiv
adc
push
mov
dec
pushf
and
xchg
jecxz
and
sbb
repz
rcr
adc
cmp
fsubrp
popf
loop
pop
sub
out
jge
push
fnstsw
daa
dec
push
out
or
repnz
jmp
dec
cmp
pop
cmps
(bad)
jmp
out
ss
xor
fwait
lahf
adc
sbb
or
fidivr
adc
lods
mov
dec
out
imul
pushf
scas
or
dec
sbb
pop
dec
fistp
out
sub
jbe
iret
jmpw
ds
xor
pop
xchg
and
(bad)
outs
push
call
movs
or
loopne
jne
aaa
or
stos
mov
icebp
push
jb
mov
cs
cwde
mov
lds
repz
scas
jg
inc
sbb
pop
mov
mov
arpl
push
mov
jmp
inc
inc
int3
stos
dec
loop
fs
sbb
test
(bad)
lock
repz
dec
dec
mov
les
int
loope
mul
xor
cmp
adc
ja
adc
cmp
xor
xor
sub
lods
retf
mov
fscale
xchg
push
add
jl
dec
movzx
fincstp
rol
btc
rep
cmp
inc
(bad)
sar
xor
stos
in
pop
fadd
jmp
ja
call
adc
clc
ret
jle
call
jg
int
mov
not
test
mov
js
push
pop
dec
mov
aam
inc
outs
pop
out
pop
push
es
stos
enter
ds
mov
in
js
mov
cs
in
adc
cmp
sub
loop
and
xchg
aam
(bad)
pop
loope
jecxz
je
dec
test
adc
hlt
scas
push
stc
seta
imul
sub
dec
bound
inc
xchg
push
loop
add
cmps
push
test
sahf
cli
retf
pop
and
xchg
pop
xor
mov
add
mov
into
scas
jno
test
cmp
jl
imul
adc
imul
adc
or
push
bound
ins
xchg
lock
jl
sahf
cmp
xchg
int
push
dec
or
sub
inc
jg
push
jmp
cwde
es
inc
fsub
fcom
loopne
or
push
jnp
mov
cmps
repz
movs
adc
sbb
add
xchg
inc
inc
xor
test
ret
outs
inc
jl
jmp
fdiv
call
and
xor
call
mov
sub
mov
lods
xchg
inc
pop
dec
jnp
hlt
and
cmps
sti
mov
out
int3
sub
add
es
push
and
mov
dec
popa
cs
cwde
sub
sub
fist
sub
sar
sar
inc
lock
mov
lea
and
cmps
mov
xchg
dec
adc
pop
push
push
je
mov
in
xor
mov
outs
(bad)
(bad)
out
in
pop
or
or
(bad)
popa
cmp
sub
or
add
sbb
pusha
xor
neg
push
xchg
add
aad
sub
in
cmp
adc
rcl
add
xchg
push
cmp
dec
daa
cmp
dec
cli
pop
xchg
in
dec
sub
adc
fdivr
sub
cmp
sbb
aad
push
push
adc
(bad)
outs
jecxz
(bad)
mov
xchg
std
repz
(bad)
retf
push
dec
mov
jge
sub
xchg
cs
or
mov
adc
add
mov
push
xchg
push
sbb
and
adc
xchg
loope
std
scas
push
or
add
ret
inc
(bad)
in
dec
adc
icebp
ret
inc
pop
inc
cld
mov
lahf
jmp
sbb
rcr
clc
mov
jg
xchg
(bad)
sbb
cmp
pop
sahf
push
or
push
scas
and
xchg
aaa
mov
cmps
fist
pop
push
retf
popf
shl
pop
xor
mov
ins
leave
lahf
jmp
ffreep
(bad)
pop
pop
push
inc
xchg
fld
cli
jmp
loope
xor
xor
dec
cmp
fs
or
loope
push
shl
loop
das
xchg
adc
cs
jmp
pop
push
sti
(bad)
out
mov
(bad)
and
jno
les
mov
rol
xor
ss
push
les
inc
dec
scas
push
inc
sub
adc
dec
daa
xchg
icebp
aaa
les
sbb
in
sbb
xchg
out
loope
xchg
add
ss
add
pop
jb
dec
js
xchg
rcr
loopne
cli
leave
push
push
push
add
xchg
push
pushf
push
dec
inc
adc
jmp
pop
adc
loopne
mov
pushf
movs
add
repz
into
inc
loop
not
call
pushf
xor
repz
sar
xor
pop
test
test
or
inc
loop
mov
xchg
cwde
or
js
imul
jns
(bad)
int
arpl
jno
call
retf
(bad)
push
movs
ds
out
jo
pop
mov
adc
mov
es
imul
push
loop
pop
and
cmc
add
jbe
test
xor
sbb
aad
(bad)
dec
setbe
shr
and
pop
call
or
inc
adc
pusha
sbb
push
repnz
cmp
cwde
out
mov
cmps
xchg
inc
and
and
std
mov
cmp
push
cmps
mov
daa
pusha
iret
sbb
add
out
and
and
cld
dec
(bad)
gs
lds
pop
dec
and
lds
dec
bound
pusha
sti
ficomp
sti
sbb
and
inc
mov
imul
fild
xchg
jl
and
pop
cli
add
sub
jnp
mov
mov
bound
cmp
dec
jnp
add
xor
mov
xlat
jle
arpl
fs
cli
in
jne
pop
mov
mov
stos
mov
mov
pop
inc
push
scas
mov
push
xor
push
cs
sbb
faddp
call
push
ja
lea
sbb
loopne
out
jp
dec
lea
xor
pop
jl
mov
adc
pop
lock
jl
adc
cmp
sbb
mov
jmp
mov
dec
push
inc
or
inc
or
test
lods
aaa
in
sti
rcr
sub
stos
shl
push
add
lods
outs
mov
dec
mov
push
add
inc
shr
(bad)
and
out
dec
mov
out
xchg
push
nop
xchg
dec
push
jg
outs
add
aaa
(bad)
jg
fmul
and
jb
sbb
mov
mov
push
mov
add
scas
push
cmp
pusha
sub
mov
(bad)
dec
loop
cmp
and
ds
adc
nop
loopne
cmp
fimul
jl
ret
cmc
jp
movs
and
aas
sub
int
ds
xor
and
repz
outs
rcl
xchg
(bad)
jp
cdq
pusha
scas
cmp
or
add
nop
xor
mov
jmp
daa
adc
xchg
loopne
adc
into
cmp
ficom
or
sub
leave
cs
movs
out
xchg
xor
and
inc
addr16
sahf
or
adc
in
or
mov
popa
jo
fisttp
das
pop
xchg
les
rcr
inc
mov
jl
jg
add
mov
xchg
dec
ss
sbb
inc
dec
out
jnp
dec
int3
repnz
add
and
scas
cdq
pop
call
xchg
lods
mov
mov
or
arpl
add
adc
cmps
add
ret
and
ficom
push
popa
push
int3
inc
pop
stc
cmp
push
push
adc
xor
push
(bad)
jns
mov
pushf
xor
faddp
mov
xchg
pop
jns
or
add
ja
ins
sbb
(bad)
sbb
jmp
mov
loop
pop
pop
lock
pop
sar
jmp
gs
cmp
mov
adc
sub
cdq
mov
lods
movs
out
inc
push
push
cmp
jae
and
fnstenv
ret
mov
mov
js
xchg
add
adc
shl
clc
icebp
jae
add
out
inc
neg
or
xchg
outs
test
xlat
adc
dec
cmp
inc
sub
mov
ror
cmp
xchg
xor
xor
sbb
push
fldl2t
repz
adc
adc
pop
inc
test
pop
push
(bad)
test
and
pop
mov
mov
shl
ffreep
xchg
std
add
gs
sar
loop
fucompp
adc
push
sub
pop
jno
pop
clc
sub
jmp
pop
movs
inc
jnp
repnz
sbb
push
inc
pop
dec
add
bound
jno
jmp
xchg
(bad)
dec
int3
(bad)
cs
push
idiv
push
mov
vpshldq
dec
call
xor
add
mov
popa
pop
push
addr16
imul
je
xor
cmps
stos
(bad)
std
push
inc
shr
xchg
loop
shl
icebp
sbb
nop
(bad)
outs
pop
sti
sti
dec
ins
inc
push
sub
outs
xchg
data16
retf
sbb
and
out
lock
cmp
pop
popf
enter
inc
mov
mov
push
xor
sbb
pop
sti
push
dec
xor
(bad)
out
push
dec
rcl
and
add
jnp
inc
div
xchg
push
cmp
pop
sub
hlt
sbb
fidivr
mov
les
jge
adc
pop
in
addr16
and
jns
mov
pushf
sar
mov
cli
js
jge
test
ret
pmullw
ss
sbb
lods
xchg
jb
xchg
test
adc
cmps
jmp
stos
mov
ss
rol
sahf
mov
inc
or
jnp
data16
and
xor
sub
pop
inc
pop
shl
adc
xor
sbb
or
mov
pop
mov
lock
jmp
in
rol
out
sbb
or
dec
sar
push
jmp
jecxz
call
loop
jle
cmp
in
inc
repnz
pop
lods
ds
outs
mov
inc
dec
mov
stos
dec
rcr
jne
sbb
outs
xlat
sub
retf
sbb
les
mov
add
or
pop
sub
mov
fimul
ret
and
mov
stos
repnz
inc
add
sbb
icebp
test
jp
pop
or
push
cmp
aad
cmp
xlat
add
das
dec
push
inc
(bad)
xchg
mov
ret
mov
jle
push
sbb
cmp
ins
in
xchg
inc
pop
stos
jecxz
rol
dec
push
cs
pop
dec
dec
push
mov
int
fdiv
stc
inc
shr
sbb
sbb
aaa
jmp
push
adc
xor
push
cmp
sub
jb
mov
sub
sbb
lock
(bad)
mov
adc
jbe
out
test
stc
imul
dec
mov
pop
jbe
dec
clc
mov
mov
mov
ds
xchg
dec
push
popf
mov
cli
lods
rcl
push
and
dec
jb
pop
mov
outs
sub
mov
add
mov
cmp
xor
stos
add
sbb
shr
gs
pop
test
dec
lods
sbb
xchg
mov
cmp
mov
dec
int
shl
and
aas
mov
push
bound
cmp
push
ins
adc
dec
mov
stos
pusha
lods
sbb
or
xchg
jecxz
rol
ror
pop
fild
call
xor
(bad)
push
dec
sub
jbe
xor
or
cwde
in
cs
es
lea
adc
and
cmc
jb
dec
sub
fsubr
lahf
xor
mov
sub
mov
repnz
xor
fbld
jo
pop
movs
push
sub
and
aas
mov
sbb
arpl
std
adc
ja
inc
je
ins
cld
ins
imul
cmp
(bad)
adc
and
aaa
cld
(bad)
pop
xlat
imul
sbb
loope
das
jmp
jno
gs
push
clc
push
js
and
adc
clc
push
adc
xor
push
cmp
push
push
stc
jae
cwde
xchg
repz
std
add
adc
dec
adc
jp
or
jmp
jns
ror
jle
mov
cmp
or
lods
cmp
sub
cmp
jae
sbb
push
mov
movs
test
pop
inc
out
xchg
fisub
mov
adc
push
and
ins
and
cmp
jne
dec
push
or
loope
rol
call
je
dec
add
jae
sbb
imul
cmp
ss
std
sub
sar
addr16
mov
and
call
push
call
popa
ret
sar
add
fbstp
cdq
pop
(bad)
shl
fnsave
adc
pop
or
push
xchg
mov
pop
push
ja
adc
sub
jle
adc
scas
inc
fild
imul
dec
mov
xlat
xchg
sub
fsubr
and
int
out
xchg
arpl
dec
add
loop
mov
shl
bound
fsub
cmp
scas
pop
pop
jnp
ins
and
add
jnp
std
push
lods
pusha
outs
frstor
fsub
and
inc
and
ds
daa
jg
scas
or
movs
mov
dec
ret
jnp
mov
pop
cmp
and
cwde
call
leave
xor
lock
adc
push
cwde
lock
jns
mov
jb
adc
int
imul
jmp
into
fimul
rcr
mov
(bad)
or
push
jmp
repnz
loopne
mov
cmps
push
push
mov
cli
mov
xchg
dec
or
loopne
lahf
ins
lock
mov
xchg
cmps
xlat
xchg
icebp
dec
fild
dec
mov
inc
(bad)
rol
mov
add
or
out
stos
mov
mov
popf
sahf
(bad)
mov
(bad)
cld
dec
mov
add
add
push
push
jb
and
ret
add
in
xor
sub
in
inc
outs
pop
and
(bad)
cli
or
xchg
xchg
mov
cli
mov
pop
mov
adc
mov
jmp
dec
int3
mov
mov
and
mov
pop
dec
sbb
or
inc
imul
jp
sbb
fwait
cs
(bad)
mov
movs
inc
fucomp
shl
hlt
mov
add
add
jb
enter
mov
inc
pop
cmps
xchg
mov
jne
mov
(bad)
adc
cmp
pop
add
jle
cmp
lods
frstor
sbb
sbb
adc
stos
or
inc
jne
sub
xor
push
retf
add
pop
mov
paddusw
retf
das
test
push
push
outs
outs
mov
xor
xor
push
xchg
cmp
push
sar
jmp
imul
stos
add
js
cmps
mov
rcr
aad
mov
mov
sbb
mov
cmc
push
popa
out
or
leave
stos
xchg
outs
aas
aaa
popa
je
int3
pop
test
push
repnz
fsubrp
adc
(bad)
jle
xchg
fld
popa
push
adc
xchg
sbb
xlat
sub
es
popf
dec
add
pop
mov
or
movs
sub
mov
pmaddwd
popf
fadd
std
sbb
aad
out
hlt
jecxz
xchg
js
cmp
into
cmp
int3
add
push
jle
mov
stc
ja
and
not
xor
add
sub
inc
jo
mov
cmc
sbb
bound
push
into
lods
jns
push
jnp
xor
jbe
or
jp
into
pop
outs
lods
jge
adc
fld
mov
pop
repz
ss
aaa
enter
dec
dec
fsub
fnsave
pushf
les
imul
mov
test
xchg
int
scas
cmp
in
mov
je
pusha
cmp
js
add
out
(bad)
mul
gs
das
aas
push
adc
enter
cdq
dec
popf
aaa
cmp
jle
jge
push
mov
xor
fcomp
mov
movs
mov
stc
lock
enter
addr16
mov
fnstenv
xor
mov
sbb
mov
shl
mov
arpl
call
gs
cmc
cmp
mov
add
daa
push
retf
aad
gs
out
mov
cmp
mov
aad
imul
add
jg
xchg
test
lods
fdivr
xor
movs
sbb
rol
jg
shl
mov
mov
xor
ret
retf
cdq
mov
cmp
mov
jae
jnp
xor
popa
(bad)
imul
mov
cmovp
jmp
xor
push
(bad)
call
aaa
ficomp
xor
add
mov
pop
pop
inc
adc
test
mov
fadd
push
cmps
mov
mov
jp
push
adc
push
pop
xchg
push
push
or
sub
dec
or
add
ror
arpl
jmp
mov
jmp
add
dec
push
not
imul
fwait
loopne
xlat
out
or
aaa
mov
dec
xchg
es
xchg
inc
outs
das
jbe
sbb
mov
adc
jmp
test
inc
mov
lods
adc
sub
mov
and
add
add
fimul
push
ds
sub
nop
push
jnp
jmp
(bad)
cmps
push
call
pop
xchg
inc
add
pop
sbb
rcl
arpl
call
fs
jb
mov
xchg
test
lahf
clc
leave
in
pop
jns
dec
cmp
jne
(bad)
call
rcr
and
rol
fst
xchg
cld
lds
lock
rep
(bad)
push
mov
xchg
xlat
inc
mov
mov
pop
or
call
dec
jns
jg
push
push
mov
and
cs
enter
ror
xor
sbb
xchg
out
sbb
sbb
cmps
movs
pusha
hlt
mov
xor
dec
ror
(bad)
stc
inc
xor
iret
push
xor
sub
mov
add
aam
pop
pushf
fdivr
mov
aaa
mov
shl
fidiv
mov
cmp
xor
inc
pop
ficomp
sbb
add
out
js
sti
popf
aaa
sbb
stos
push
test
adc
pop
push
mov
mov
out
xchg
mov
ss
call
push
add
mov
aam
sbb
enter
add
in
fadd
jno
inc
ins
and
retf
das
mov
xor
imul
sbb
inc
test
cmp
push
sbb
mov
push
adc
sub
pop
imul
aam
aad
pop
pusha
sub
cmc
push
fisttp
out
shl
push
loope
xchg
xchg
bound
pop
push
sub
jg
aas
mov
xchg
and
mov
xchg
mov
dec
sub
imul
mov
fnsave
ror
inc
jp
ret
push
add
mov
addr16
push
adc
mov
inc
lods
enter
jae
or
iret
addr16
cli
call
les
clc
cmp
movs
cdq
pop
lods
popf
and
xor
mov
lods
das
jno
sbb
(bad)
jl
mov
jg
fdiv
jg
inc
inc
(bad)
aad
(bad)
out
inc
push
push
inc
and
sbb
cmp
ret
add
add
cmp
xor
cmps
push
dec
sbb
in
sbb
popf
call
into
xchg
adc
imul
dec
push
xor
sahf
xchg
cmps
ret
add
lea
add
pop
cdq
adc
adc
mov
add
lea
jl
adc
add
or
push
in
mov
mov
(bad)
cwde
jp
sub
out
mov
cmc
fist
mov
xor
add
bound
dec
mov
in
test
fstp
jge
cmp
jl
mov
sbb
fucomip
add
adc
mov
dec
xchg
mov
in
jmp
mov
loope
adc
cmp
ss
test
mov
mov
push
add
mov
mov
push
adc
hlt
adc
pop
ja
cld
mov
or
xchg
cmp
xchg
mov
mov
jecxz
(bad)
iret
popf
and
fwait
repz
or
loop
das
xor
ins
dec
(bad)
mov
adc
and
cmp
cmc
enter
repz
inc
and
loope
not
push
in
push
imul
mov
ja
cwde
push
push
std
out
sub
fistp
mov
jns
push
hlt
mov
imul
pop
xchg
push
icebp
mov
push
shl
push
jno
loope
jp
mov
push
gs
cmp
in
mov
fidivr
sbb
jne
ds
pop
pop
ds
ffree
lods
sub
dec
xchg
cmps
xlat
into
pop
rol
mov
adc
dec
jl
into
mov
mov
add
outs
mov
movs
ror
sub
shl
add
inc
or
or
test
(bad)
jl
or
inc
out
lahf
ret
div
test
push
pop
fs
push
mov
(bad)
add
pop
xor
and
outs
mov
cmp
inc
ret
dec
mov
push
fisub
mov
int3
addr16
(bad)
and
jge
stc
adc
sbb
inc
cmp
mov
cmp
push
mov
jo
inc
cmps
(bad)
sar
jno
(bad)
push
sub
jg
movs
mov
mov
jns
inc
movs
movs
and
inc
fist
xor
sbb
loop
pop
push
adc
mov
in
lds
fstp
xchg
xchg
jnp
sub
es
push
(bad)
cmp
(bad)
xchg
ss
sub
adc
sub
mov
mov
mov
cmp
sbb
pop
jo
test
xchg
mov
not
jno
icebp
xchg
mov
or
stos
pop
movs
lock
mov
pop
das
pop
jl
daa
dec
into
mov
popf
xlat
jcxz
lahf
mov
push
mov
mov
and
dec
jae
mov
(bad)
jmp
push
jnp
in
adc
xchg
xchg
xor
jb
or
fdivr
and
sub
inc
mov
sbb
inc
nop
pop
inc
xor
enter
or
cli
jnp
cwde
movs
mov
jae
sub
dec
jle
xor
test
mov
(bad)
cmp
dec
jno
inc
push
sub
test
(bad)
pop
mov
movs
out
mov
test
daa
ret
push
push
mov
in
pop
sub
mov
fist
lods
out
clc
pop
rol
outs
pop
outs
sar
gs
sbb
rcl
jnp
xchg
xchg
add
sar
movs
sbb
jle
jge
push
idiv
cmp
(bad)
pushf
mov
(bad)
inc
push
mov
test
and
leave
cmp
pop
and
jecxz
adc
lds
pop
popa
test
fs
cmp
xor
jno
inc
mov
jmp
dec
sahf
or
and
lods
pop
int3
mov
and
mov
and
jns
push
(bad)
in
dec
sub
(bad)
stc
pop
lods
lea
xchg
or
or
popf
fmul
shr
xchg
push
repnz
inc
and
or
push
jmp
fist
jo
mov
cmp
mov
imul
add
sub
ss
inc
ins
jg
mov
fcmovne
dec
mov
outs
repz
movs
jnp
test
or
ins
ret
sub
add
sub
mov
cdq
push
hlt
or
push
xor
pop
fsub
adc
shr
ja
repnz
pushf
call
pop
popa
mov
fidiv
jle
aam
mov
stc
jbe
ja
xor
sbb
jecxz
fsubp
hlt
or
sub
pop
hlt
push
lods
iret
or
dec
mov
fimul
dec
mov
push
pop
jle
mov
daa
mov
mov
dec
pop
adc
fstp
call
js
test
push
add
adc
adc
sub
mov
dec
cmp
mov
jno
jne
fistp
push
jmp
adc
test
mov
mov
addr16
and
lea
in
test
dec
dec
hlt
and
out
xor
and
jmp
aam
jmp
and
sub
add
and
movs
cmps
push
(bad)
xchg
add
mov
div
jle
sub
inc
sub
jbe
repz
test
int3
or
leave
adc
ret
inc
pinsrw
outs
ret
cmp
mov
dec
sti
xchg
push
dec
rol
inc
pop
mov
jg
xchg
fistp
mov
cmc
les
push
sub
and
test
sar
retf
(bad)
fldcw
inc
jb
outs
jmp
cld
jg
lods
inc
nop
jo
pop
aaa
add
fwait
pop
inc
mov
popf
mov
dec
mov
add
std
ins
fisubr
mov
dec
jmp
(bad)
in
sub
and
adc
jns
test
test
retf
push
xchg
out
pushf
fnstsw
stos
sub
push
xor
sbb
clc
adc
std
stc
scas
fsub
popa
mov
pop
aaa
jp
dec
dec
ins
arpl
fwait
jg
test
fst
jge
clc
mov
ret
(bad)
cwde
mov
or
call
push
cmp
sahf
call
sub
sbb
jno
pop
aaa
stc
popa
dec
retf
scas
movs
repz
xor
aad
mov
popa
lods
imul
icebp
cmps
dec
pop
clc
jmp
ret
push
test
fisubr
pop
fldcw
mov
cmps
and
(bad)
xor
inc
mov
xor
clc
imul
int3
sahf
leave
imul
mov
mov
mov
call
out
dec
leave
mov
cmp
cmp
or
mov
mov
fild
sbb
xchg
xor
movs
(bad)
mov
fisub
jmp
iret
je
lds
inc
push
adc
loope
push
addr16
call
jns
xor
(bad)
lea
mov
sti
dec
leave
push
mov
push
movs
jo
inc
jge
or
cmps
leave
cmps
push
fiadd
lock
pop
aad
outs
icebp
mov
stc
(bad)
xor
fwait
shl
mov
in
jl
arpl
fsin
inc
stc
fimul
dec
jp
ds
jle
inc
xchg
jge
daa
cmp
movs
push
add
push
and
push
xor
pop
into
mov
sbb
pop
xchg
loope
mov
into
mov
jnp
and
pop
int
mov
fs
xor
push
push
das
mul
dec
in
and
iret
in
adc
adc
adc
mov
arpl
jecxz
aad
fsubr
scas
retf
inc
sar
mov
mov
mov
ins
mov
add
in
pusha
sub
pop
xchg
shl
jg
int3
clc
jbe
(bad)
aaa
sbb
jns
mov
jae
mov
sub
and
test
ds
js
adc
dec
adc
xchg
stos
mov
sub
xchg
jb
lea
cmps
clc
adc
clc
stos
out
sub
std
scas
jl
inc
mov
test
loope
jo
inc
inc
imul
aad
cs
add
and
sub
pushf
fimul
pop
inc
(bad)
cmp
push
or
add
pop
dec
out
jae
js
mov
sub
loopne
ss
not
sti
std
clc
clc
pop
xor
mov
mov
and
cwde
fidivr
leave
push
pop
adc
in
jecxz
sub
sub
retf
inc
call
les
pop
push
adc
data16
cmp
pusha
imul
pop
lea
adc
in
lods
dec
jg
or
adc
pusha
and
xchg
inc
mov
les
push
mov
stc
fld
mov
sbb
shl
loope
hlt
mov
or
(bad)
jmp
retf
outs
xchg
and
jno
pop
inc
xor
jmp
and
ror
adc
mov
push
in
mov
xchg
jmp
dec
out
(bad)
(bad)
aad
jge
popf
sbb
jno
int
mov
dec
dec
and
fdecstp
aad
test
inc
adc
pop
aas
mov
scas
add
add
test
dec
push
test
mov
arpl
inc
mov
mov
clc
sbb
ret
rcr
xor
ror
movs
std
ins
pop
pop
popf
mov
test
inc
cmps
pop
jle
sbb
loopne
dec
adc
in
xlat
movzx
dec
shr
mov
outs
xor
enter
add
sar
cs
push
jbe
adc
lahf
push
test
and
cmps
hlt
dec
dec
jmp
mov
sbb
push
push
dec
sbb
icebp
test
xchg
jge
add
adc
push
adc
rcl
data16
dec
pop
push
mov
lahf
clc
pop
pop
cmp
dec
out
psubw
in
and
cmc
or
adc
int
mov
out
xor
enter
adc
cmp
pop
aaa
mov
cs
retf
sub
mul
push
scas
cwde
push
sub
movs
(bad)
fsub
cld
lahf
push
call
dec
call
push
(bad)
call
mov
jns
add
(bad)
std
fsub
movs
cmp
jo
adc
mov
push
std
sbb
xchg
jne
jnp
add
and
inc
inc
loop
popf
mov
sbb
mov
mov
mov
lods
sbb
mov
stos
addr16
jmp
mov
jnp
cmp
mov
and
cmp
push
mov
loopne
rcr
(bad)
mov
call
pushf
imul
mov
test
xor
repnz
jge
jmp
stos
sub
mov
or
lods
sbb
cs
inc
mov
dec
(bad)
fucomp
and
enter
dec
fist
rol
xchg
pop
ins
or
mov
or
neg
es
stos
bound
icebp
xchg
outs
adc
cmp
xchg
pop
dec
inc
mov
sub
mov
xchg
push
(bad)
bound
int3
jo
in
enter
into
push
out
popf
adc
jnp
cmp
cmp
cdq
aas
ja
repz
loop
aad
fistp
mov
ds
adc
shl
(bad)
sbb
xchg
jge
add
scas
cmp
push
push
sub
push
push
cmps
lea
repnz
push
fimul
sub
int3
xchg
push
adc
pop
mov
jmp
rcr
outs
pop
fbstp
in
rcr
or
inc
cs
into
pop
jo
(bad)
and
cli
ret
dec
and
xchg
pop
movs
cli
or
aad
or
xchg
sub
cmp
push
jb
jle
sbb
jmp
jns
shl
push
adc
test
adc
fimul
sub
loop
mov
mov
sahf
jl
xchg
dec
jl
xchg
xchg
or
retf
loope
lods
adc
add
mov
push
xchg
or
retf
std
retf
fld
push
aam
(bad)
mov
imul
xlat
xor
add
dec
mov
jl
cmps
sar
(bad)
loopne
xor
push
pop
jl
jmp
xor
fimul
aas
mov
cld
or
(bad)
jl
xor
inc
add
(bad)
ja
or
pop
jp
outs
iret
jno
inc
mov
lods
test
sub
mov
sbb
xor
mov
repz
ins
xchg
lds
cmp
in
(bad)
jmp
mov
mov
mov
into
loope
inc
pop
je
(bad)
adc
inc
inc
xor
jecxz
push
test
xchg
cmp
push
cli
mov
das
cwde
fwait
rcr
push
scas
ins
fcomp
cmc
mov
imul
sbb
add
jp
shl
and
or
mov
push
sub
cmps
je
jp
std
test
jl
lea
leave
fucompp
fild
mov
sti
test
dec
imul
in
mov
sbb
movs
adc
add
adc
rol
push
(bad)
mov
mov
cmps
sbb
push
stos
push
loop
ror
stos
xlat
(bad)
out
je
xchg
das
stc
mov
mov
movs
mov
das
push
adc
push
clc
js
lods
inc
sub
mov
xchg
jbe
push
xor
inc
out
cmp
and
mov
xlat
ss
sti
inc
into
xor
xor
ins
push
inc
push
or
movs
lock
mov
imul
mov
push
adc
mov
sub
jno
xor
sub
push
cmp
pop
add
icebp
inc
pop
sbb
lods
mov
call
enter
mov
nop
jno
adc
(bad)
mov
mov
push
test
mov
into
mov
xchg
cld
jno
movs
pusha
inc
jnp
test
add
test
js
lds
inc
rsm
fmul
pop
mov
loopne
je
(bad)
retf
push
sub
ret
add
repnz
jmp
cmp
mov
cs
popa
xchg
mov
xchg
(bad)
sub
inc
sub
movs
outs
inc
ins
rol
push
das
jge
hlt
loop
sub
sub
aam
test
push
call
movs
fs
cmp
xlat
pop
es
sub
xchg
(bad)
ficom
push
adc
mov
xor
cmp
ja
pop
(bad)
rol
mov
repnz
jo
fs
rcr
scas
dec
test
mov
lahf
lahf
fldcw
inc
call
pusha
retf
push
je
movs
xor
cld
loopne
pop
(bad)
mov
and
sbb
sahf
(bad)
das
fs
jge
loope
int3
cdq
dec
sub
dec
inc
sbb
je
or
xor
dec
mov
mov
mov
xor
imul
data16
rcr
jecxz
repnz
fimul
ret
jge
pop
inc
xchg
pop
dec
enter
shl
rcr
pop
mov
inc
add
dec
pop
mov
xor
leave
push
arpl
movs
cmp
dec
mov
mov
retf
push
cmps
dec
mov
adc
cwde
ret
inc
push
idiv
fmul
cmc
lods
or
push
popf
stc
add
sub
pusha
inc
dec
dec
jne
in
shl
movs
adc
dec
cmps
popa
mov
or
and
adc
cs
in
inc
fistp
scas
xlat
add
xchg
xchg
mov
outs
cmc
push
push
movs
add
maxps
adc
enter
out
iret
mov
fdiv
xor
add
inc
out
cld
push
mov
jmp
inc
retf
or
rcr
mov
push
mov
sbb
and
xchg
sbb
mov
fisubr
bound
sbb
mov
call
jmp
in
add
or
inc
call
in
push
adc
fld
loope
cwde
jecxz
cmps
add
outs
test
pop
jae
idiv
data16
std
popa
scas
sub
les
push
mov
push
lahf
and
nop
in
push
and
loopne
push
leave
nop
test
push
iret
dec
mov
sub
in
popa
xchg
ror
pop
adc
and
and
cmp
mov
mov
jle
and
mov
imul
push
xor
jge
cmp
jl
scas
repnz
dec
outs
(bad)
mov
aad
mov
test
jbe
xor
mov
xchg
inc
iret
fldenv
inc
loope
ret
jns
fstp
push
cmp
sub
add
retf
imul
test
sub
int3
jge
pop
in
add
jmp
pop
add
call
xchg
fild
clc
sbb
xlat
push
sbb
arpl
inc
cld
add
mov
rcr
and
cmps
lea
pop
and
(bad)
mov
lds
aad
pop
inc
adc
and
mov
mov
and
das
iret
cdq
sbb
or
bnd
je
pop
lahf
sub
sbb
faddp
das
mov
push
jo
pop
adc
xor
sbb
and
gs
mov
shl
push
sbb
add
rcl
popf
in
stos
sub
add
dec
shl
xor
xor
cmp
mov
out
add
retf
fs
mov
rcl
mov
xchg
ret
jmp
dec
(bad)
sbb
arpl
hlt
jb
fwait
rol
mov
xchg
ret
dec
mov
dec
imul
jo
daa
test
fldenv
pop
ins
xor
mov
pop
fyl2xp1
lods
(bad)
sar
adc
xchg
mov
adc
test
outs
gs
cmp
pop
jno
xor
dec
rep
adc
cmps
mov
sub
ins
xchg
fisttp
inc
fdivr
call
cmp
fs
cli
fwait
xor
pop
and
push
sub
(bad)
cmp
cdq
xchg
mov
sti
shl
in
repnz
or
add
movs
sub
xor
mov
clc
(bad)
push
xor
call
js
sub
mov
add
stos
stos
in
jb
mov
loopne
sahf
jbe
and
xchg
mov
inc
arpl
or
cmc
push
pop
lock
jmp
in
mov
jmp
inc
(bad)
xlat
and
into
cli
pop
sub
add
inc
ss
sbb
fild
call
out
movs
cld
retf
mov
outs
mov
jmp
xor
movs
out
sub
jno
sbb
gs
mov
stos
and
fadd
push
(bad)
add
call
fnstenv
jnp
sub
pop
nop
gs
push
out
jne
push
(bad)
and
inc
shl
jnp
sti
or
mov
out
cld
(bad)
jmp
mov
mov
cmp
ret
push
adc
and
in
fdivr
aam
add
stc
fwait
mov
pop
jne
push
and
setle
retf
xchg
jle
inc
lods
adc
sub
retf
adc
push
adc
jns
mov
dec
rcr
add
hlt
and
push
cmp
mov
sub
ret
sub
ins
jo
(bad)
xlat
test
mov
aaa
mov
and
pop
into
sbb
or
mov
fnstcw
xlat
out
mov
rcr
mov
mov
cwde
out
add
adc
aam
shl
sbb
fsub
mov
mov
xor
xlat
fimul
xchg
pop
arpl
xchg
mov
pop
pop
or
cs
push
mov
int
adc
sbb
push
aas
xor
ins
pop
jb
cdq
ret
out
jbe
xor
and
dec
mov
out
mov
ss
out
jge
frndint
push
hlt
push
push
cdq
and
sub
in
outs
rcl
add
arpl
inc
js
xchg
(bad)
mov
mov
pop
pop
cmp
xchg
sar
test
push
push
adc
aam
aam
leave
jbe
retw
inc
mov
jb
or
xchg
in
pop
loope
retf
adc
loop
imul
aad
mov
in
mov
mov
ss
dec
lds
jmp
or
int3
xor
or
call
ret
ja
xor
push
xchg
or
add
aad
lock
inc
jmp
(bad)
popa
call
bound
shl
daa
and
add
or
xchg
dec
push
(bad)
fisubr
repz
mov
jo
stos
add
jg
daa
bound
rcl
jns
xchg
and
aaa
inc
sar
jno
mov
ret
mov
inc
adc
push
and
add
icebp
scas
or
xor
dec
outs
fsubr
ins
dec
fwait
adc
std
jns
test
cmc
push
cmp
jl
adc
(bad)
enter
dec
push
cmp
mov
xor
ret
(bad)
movs
leave
cmps
jo
push
push
or
cld
jno
or
dec
and
test
or
cmp
and
aas
fistp
push
push
not
mov
mov
dec
jno
test
pop
mov
aad
mov
inc
(bad)
ins
or
stos
mov
sbb
or
out
jae
push
cmp
add
jp
xchg
adc
adc
mov
(bad)
std
nop
dec
inc
or
cmp
and
pop
inc
xchg
cmps
jg
repz
(bad)
jo
jl
sahf
dec
dec
inc
stc
dec
rcr
sahf
xchg
mov
fld
test
pop
dec
es
mov
sar
pop
cmp
ja
mov
fdivr
sbb
(bad)
jecxz
fs
ret
xchg
retf
(bad)
stos
daa
cmp
shr
jg
or
enter
repnz
or
test
out
cdq
mov
or
jp
xchg
xor
(bad)
push
(bad)
ins
jg
std
outs
fmulp
add
test
mov
movs
jb
(bad)
data16
(bad)
test
popa
call
outs
imul
test
cmps
dec
jecxz
push
retf
mov
mov
pop
sub
xor
(bad)
push
mov
dec
ficomp
push
push
stos
ins
(bad)
xchg
iret
mov
xor
movs
test
push
push
jb
out
ror
cmps
test
fsubr
or
sbb
es
fidivr
scas
sub
xchg
mov
jno
lea
out
xchg
push
movs
lea
jbe
dec
aam
pushf
mov
dec
mov
push
dec
jnp
out
stos
mov
xchg
aam
ins
dec
push
adc
nop
adc
addr16
ror
xchg
rcr
mov
fdiv
cwde
xor
push
mov
and
outs
mov
fwait
xchg
sbb
scas
and
and
call
push
push
pop
ins
push
jae
push
mov
in
add
pusha
or
and
jmp
stos
test
jns
lea
fs
push
pop
or
inc
test
mov
mov
scas
push
fwait
aad
pusha
nop
xchg
in
adc
jmp
mov
jmp
(bad)
in
movs
adc
fbld
(bad)
or
sbb
add
and
popf
lahf
fimul
add
in
ss
add
xchg
fcmovu
pop
xchg
jmp
daa
pusha
jae
data16
pop
pop
cmp
mov
push
sub
mov
pop
jns
es
pushf
push
clc
pop
daa
xchg
xchg
mov
(bad)
xchg
fwait
add
sbb
push
dec
adc
scas
ret
ins
pop
mov
call
aaa
gs
jp
int
popa
xchg
dec
and
popf
add
push
and
and
mov
mov
shl
das
jns
mov
ret
xchg
pop
loop
loopne
dec
and
int3
scas
dec
pushf
pop
push
adc
and
pop
sbb
cld
xlat
push
push
mov
and
fild
and
gs
ds
dec
push
aas
pop
add
sub
mov
(bad)
dec
jecxz
jmp
repnz
cmp
ins
hlt
ret
repz
cs
cwde
sbb
pop
jb
loop
inc
or
push
lahf
jmp
ficomp
bswap
xchg
mov
int
sub
js
push
push
push
xchg
mov
das
cwde
cmps
or
mov
push
mov
xor
and
cmp
add
fld
test
es
jne
daa
(bad)
jmp
xor
cmc
sub
add
pop
jecxz
adc
lds
dec
aam
int
push
jg
test
mov
fidiv
sbb
sti
(bad)
xor
stos
push
push
cs
push
and
(bad)
(bad)
int3
icebp
das
jl
imul
outs
mov
into
dec
loopne
inc
push
add
sub
pop
test
mov
int3
cwde
into
jne
es
lods
fcomp
data16
mov
test
jnp
push
fs
rcr
sbb
sub
mov
sub
mov
mov
xlat
cld
and
add
xchg
scas
popf
mov
fild
call
mov
cmp
pop
lahf
pop
nop
inc
(bad)
rol
fdiv
mov
lods
popa
cmp
es
dec
ss
or
adc
shl
pusha
dec
test
xor
xchg
jp
sbb
sbb
(bad)
mul
or
stc
mov
cli
mov
push
gs
mov
movs
mov
icebp
rol
push
int3
std
sub
shl
add
xlat
imul
or
mov
stc
add
inc
mov
fadd
sbb
sbb
adc
mov
or
xchg
cdq
jno
inc
jl
sti
cmp
push
jg
xor
in
pop
lahf
mov
mul
pop
loope
xchg
jno
mov
push
in
or
arpl
(bad)
ficomp
adc
cmp
bound
push
add
xchg
(bad)
ss
in
fucomp
jns
sbb
dec
mov
cmp
pop
cmc
mov
mov
test
inc
xor
xor
xor
inc
cli
imul
sbb
pop
inc
mov
popf
imul
loop
jns
pop
stos
cmps
loope
nop
add
in
xor
adc
out
in
js
mov
retf
mov
jmp
call
inc
cmp
jns
xor
and
jbe
ret
sti
xor
push
mov
(bad)
cld
ss
in
ja
sbb
sbb
adc
adc
ficomp
jecxz
retf
cmc
add
sbb
scas
inc
adc
retf
dec
jb
pop
popa
xor
into
jg
cs
dec
(bad)
js
lods
dec
in
push
fld
adc
(bad)
sub
push
push
adc
fdiv
arpl
bound
mov
rcr
js
dec
lds
lock
scas
mov
mov
sar
hlt
cld
cli
push
xchg
cmps
popa
cmp
adc
add
add
(bad)
fbstp
mov
ins
mov
push
jl
cmp
ja
fdivr
call
mov
ins
paddusw
imul
jb
ins
aad
pop
add
inc
push
ss
xchg
jle
adc
push
push
fistp
sbb
in
in
gs
and
ds
mov
sub
xchg
xor
mov
ins
scas
aas
cli
add
cmp
xchg
or
or
push
adc
jo
gs
jecxz
stos
dec
daa
sbb
icebp
cdq
xlat
xor
dec
mov
mov
add
adc
xchg
hlt
adc
dec
repz
pop
xchg
or
icebp
pusha
iret
cld
xor
mov
pop
mov
enter
sahf
sar
push
fbstp
fs
jb
xor
sbb
(bad)
imul
inc
loop
jb
fld
adc
xor
inc
xchg
shr
push
in
fdivr
mov
pop
out
dec
inc
fld
push
mov
sbb
shl
mov
and
mov
arpl
repz
pusha
push
pop
test
fcom
mov
call
xor
test
cmp
retf
fnsave
mov
popf
add
adc
in
addr16
push
stos
aad
aaa
loop
mov
mov
jle
scas
ret
push
ds
cmp
(bad)
ins
lahf
or
ins
(bad)
movs
(bad)
in
mov
push
sub
mov
mov
out
jp
jecxz
sti
or
aam
inc
popf
out
inc
mov
xor
fs
push
fwait
ja
into
int3
sbb
and
and
cmp
movs
ins
push
ret
jbe
xchg
jbe
test
pop
pop
outs
fcmovnbe
es
and
jae
out
pushf
xor
pushf
dec
push
and
push
inc
retf
out
js
out
ja
iret
fild
mov
ja
mov
add
cmp
les
sbb
popa
call
sub
pop
(bad)
aam
jns
shl
pusha
fcomp
aas
cli
mov
mov
std
cwde
ins
xor
dec
xchg
cmp
adc
out
pop
cmp
nop
sbb
in
ret
loop
push
push
iret
out
or
leave
les
test
ret
xor
mov
inc
rol
in
clc
jp
xor
cmp
cwde
sub
shr
jg
cmps
imul
jnp
gs
xor
inc
push
retf
test
xor
and
sar
add
lds
sti
jmp
popa
js
or
push
cdq
cmc
imul
xor
mov
mov
xchg
jns
adc
xchg
jb
and
cmp
es
fwait
and
cmp
in
gs
push
lea
(bad)
mov
inc
loop
mov
sub
outs
lods
out
mov
lea
dec
mov
xchg
dec
repz
dec
mov
iret
fiadd
mov
pop
mov
cmp
push
(bad)
and
call
aaa
aad
jg
(bad)
outs
inc
sbb
and
js
push
mov
sub
arpl
jmp
fstp
icebp
xchg
jp
push
(bad)
adc
arpl
mov
mov
aaa
mov
movs
inc
pop
rcr
cli
and
sbb
cli
lock
and
jl
sub
pop
xor
imul
int3
popa
xor
leave
jge
jne
imul
cmp
mov
(bad)
call
inc
mul
loopne
push
push
xchg
mov
jo
mov
icebp
inc
pop
xor
loopne
dec
jp
xor
cmc
fimul
ret
in
int
mov
js
inc
aas
sbb
or
push
into
or
jo
jl
arpl
add
test
das
and
test
dec
xchg
movs
in
add
clc
lds
aas
imul
mov
ja
lock
ds
leave
mov
mov
test
mov
rcl
pop
jae
xchg
xor
jae
cmc
dec
mov
in
dec
cmps
dec
add
mov
out
(bad)
sub
pop
repz
fwait
and
sub
fwait
mov
(bad)
ins
inc
ins
mov
in
dec
push
ins
push
mov
aam
shr
xchg
or
les
dec
mov
fdivr
in
ss
jb
mov
pop
jns
xchg
daa
sbb
jmp
fist
stos
popf
jae
std
xchg
stc
pop
cmp
jno
ret
movs
(bad)
fistp
fadd
jmp
mov
ja
cmp
imul
(bad)
jb
or
int3
cmp
int
les
add
loope
in
ss
cmps
xchg
test
xchg
lods
ror
mov
push
fst
pop
call
shl
mov
test
inc
push
jbe
stos
idiv
cli
mov
pop
mov
push
fneni(8087
add
das
push
inc
jmp
unpcklps
cmc
jge
xchg
push
adc
bound
in
lock
(bad)
daa
mov
pushf
mov
ins
iret
ss
test
jnp
xchg
in
imul
test
and
pop
es
pop
pop
xor
ins
adc
dec
mov
inc
jmp
pop
cmp
push
cmp
pushf
pop
lods
or
mov
jge
jmp
cmc
into
into
jnp
out
mov
push
jmp
stos
inc
cmp
cmps
xchg
pushf
cmp
push
int
retf
add
dec
lahf
sub
sub
fld
xchg
icebp
push
aas
jl
test
pop
pop
ins
or
mov
retf
mov
cmp
rol
shl
std
mov
mov
pop
jb
push
pusha
cmp
bound
push
test
shr
or
push
cwde
jle
stos
mov
pop
adc
mov
cmp
xor
add
mov
repz
inc
and
adc
adc
sub
das
icebp
xor
js
pand
aas
mov
jbe
int
xlat
out
test
xchg
lods
inc
fld
sti
fnstcw
call
sbb
sub
add
lahf
pop
in
(bad)
in
push
cwde
mov
imul
test
mov
push
loope
and
int3
lds
jmp
cmps
stos
sub
mov
fwait
das
mov
fwait
sbb
in
push
add
pop
gs
xchg
mov
cmp
sbb
dec
lods
xor
pop
scas
sahf
sub
out
pusha
movs
dec
dec
mov
popa
scas
push
add
in
and
adc
rcl
push
test
sahf
cmc
xchg
push
fisub
stc
icebp
pop
pop
lahf
imul
adc
stc
mov
pusha
stc
inc
push
mov
push
push
rcr
and
fld
inc
pusha
fs
xor
scas
pop
adc
lds
jne
jmp
push
lods
xchg
jmp
mov
div
sbb
jl
cdq
test
adc
in
data16
dec
test
sbb
fnstsw
jo
dec
(bad)
test
imul
out
cwde
dec
pop
aad
loope
push
sti
xchg
mov
push
jb
inc
ud1
fs
lock
stos
mov
cmp
push
sahf
fwait
out
mov
into
pusha
pushf
shr
jb
iret
outs
adc
rol
jmp
add
mov
add
fsqrt
mov
in
(bad)
cmp
int
push
loop
mov
cmp
call
xlat
and
sahf
lods
in
test
lock
clc
ret
in
fsub
xor
sahf
sti
lock
imul
test
pop
dec
ins
scas
and
test
adc
leave
fwait
mov
ins
mov
jb
pop
mov
fsubp
ins
and
jle
adc
iret
loope
aad
xor
fucomi
add
inc
test
test
stos
cli
jle
xor
pop
cmp
shr
dec
dec
xchg
loope
sbb
push
std
push
sbb
jle
push
and
fld
and
inc
int
ret
ret
dec
or
adc
das
cwde
mov
popf
(bad)
(bad)
retf
mov
sbb
pop
mov
xchg
mov
or
push
ja
mov
lea
pop
jns
fsubr
mov
das
push
sar
mov
arpl
loope
add
popa
lea
out
cmp
mov
sbb
lea
call
xchg
dec
and
inc
fmul
jbe
dec
les
retf
rol
jle
mov
leave
push
push
test
das
sahf
sbb
mov
loopne
pop
fdiv
sub
in
int
add
into
(bad)
dec
das
ins
jb
inc
cwde
pop
repnz
jecxz
stos
movs
inc
rol
inc
xchg
add
adc
ficomp
mov
pop
push
aaa
adc
popa
sub
sub
xchg
mov
push
inc
push
in
jns
rol
scas
into
jmp
das
cwde
add
jo
std
push
cmp
mov
loop
addr16
data16
xchg
das
mov
sub
jb
mov
bound
loop
xor
retf
shl
sbb
mov
retf
jo
mov
push
ret
mov
das
lea
ins
imul
push
sbb
pop
inc
adc
inc
repz
dec
push
ins
xor
call
pop
and
mov
push
ret
gs
loope
dec
xor
mov
push
and
mov
mov
loop
xchg
outs
(bad)
std
adc
arpl
stos
stos
imul
ss
inc
mov
fdivr
sub
test
(bad)
test
jne
std
or
pop
xchg
arpl
pop
clc
cmp
push
arpl
cmps
je
sti
xchg
pop
dec
add
mov
inc
das
shl
out
or
movs
mov
mov
fisttp
ja
inc
inc
ins
mov
jb
sbb
lahf
mov
sar
mov
dec
retf
scas
imul
sti
lahf
pop
je
jmp
push
or
cld
mov
inc
out
lds
lea
mov
jge
rol
adc
xor
mov
adc
xor
sbb
mov
mov
mov
nop
sub
stc
push
js
xor
scas
cld
test
dec
dec
stc
cld
mov
dec
int
sahf
lds
rcl
xchg
add
pop
mov
mov
lods
sbb
inc
call
scas
cli
and
push
inc
aam
addr16
sub
and
sub
fild
ds
inc
and
(bad)
scas
cld
stc
xor
cmp
jmp
(bad)
sar
pop
ficomp
adc
mov
lock
(bad)
pop
xchg
in
or
xchg
push
adc
ss
cmc
or
fwait
xor
pop
or
add
out
lea
add
gs
sbb
imul
mov
(bad)
repz
call
cmp
sub
pop
sub
adc
and
shr
jge
jmp
cmp
(bad)
pop
cmp
mov
and
out
mov
xchg
ret
clc
sbb
jmp
loop
cld
loope
inc
mov
add
mov
cld
or
push
(bad)
out
(bad)
jmp
sub
xchg
test
sahf
mov
xor
mov
ss
jae
in
aas
mov
jl
in
sbb
xor
xchg
adc
fimul
dec
fld
addr16
clc
pop
and
dec
addr16
sub
stc
mov
ss
sub
inc
fld
pushf
(bad)
lock
pop
lea
loope
mov
into
add
(bad)
adc
and
arpl
pusha
aad
sbb
movs
ror
aaa
into
or
ja
fxch
jl
add
hlt
xor
pop
mov
or
stos
cmp
rol
jp
scas
mov
sti
push
imul
pop
icebp
and
cwde
jecxz
mov
popf
or
das
add
mov
cmp
mov
cmp
jno
jmp
jno
fwait
jnp
ret
sbb
and
sti
mov
(bad)
push
ss
lock
add
mov
adc
bnd
mov
in
fcmovnu
push
fsub
add
or
inc
mov
movs
xor
jl
std
cmc
pop
add
cmp
xchg
bound
pop
or
cmps
into
adc
popa
xchg
jnp
aas
xchg
sbb
mov
(bad)
xchg
repnz
push
mov
repz
test
xchg
lahf
add
mov
or
out
mov
inc
fwait
pmullw
xchg
pop
push
push
mov
aaa
pop
mov
and
adc
fcomp
fninit
cmps
fnsave
mov
push
test
cmp
pop
cmp
sbb
cs
mul
add
and
inc
mov
pop
sahf
or
scas
call
movs
int3
icebp
pop
cmp
or
add
xor
mov
pop
jb
xchg
leave
sbb
pop
ins
mov
gs
adc
(bad)
call
push
sbb
lahf
push
mov
push
pop
pop
scas
outs
bound
gs
sub
cmp
(bad)
rol
(bad)
push
pop
fnstenv
in
repnz
stos
adc
push
xchg
nop
mov
enter
cmc
jecxz
cwde
(bad)
out
and
gs
lock
jle
mov
fst
mov
push
mov
aas
loop
sbb
jae
add
inc
leave
push
gs
test
loopne
sbb
das
movs
movs
hlt
pop
mov
inc
mov
jecxz
sub
or
pop
mov
aad
push
movs
xchg
cmp
lds
cmc
ficomp
sub
ins
and
cmp
mov
(bad)
sbb
push
mov
push
adc
add
cmp
adc
imul
dec
out
adc
aas
sbb
cli
sub
gs
push
jmp
or
push
sub
outs
mov
ss
cmp
stos
sar
cmc
xlat
and
adc
add
dec
cli
pop
push
stos
mov
inc
cmp
sbb
into
jns
enter
mov
dec
mov
jecxz
push
lahf
cmp
fisttp
jnp
lahf
in
mov
cwde
lods
out
out
std
xchg
xchg
xlat
pop
pop
and
and
mov
adc
pop
shl
cmp
cmp
sub
mov
mov
fs
ja
jo
jno
popa
out
sbb
inc
leave
xchg
pop
fxch
into
add
xchg
out
pop
psllw
mov
mov
ret
outs
and
aam
test
hlt
push
lea
shl
push
nop
mov
jbe
mov
dec
mov
ror
xor
pop
xchg
cmp
pop
hlt
xchg
ret
shl
nop
cwde
jns
pop
push
fimul
ror
clc
push
xlat
call
xchg
xchg
mov
or
out
retf
dec
push
fdiv
mov
xchg
sbb
xor
stc
fld
pop
aas
dec
test
push
or
xor
mov
add
pop
and
cli
or
mov
jae
xchg
mov
mov
adc
out
cmp
lds
mov
out
mov
test
xor
ret
retf
push
mov
cmp
add
and
sti
lahf
out
xchg
pop
mov
ins
test
sbb
pop
(bad)
rol
mov
mov
sbb
fcom
fbld
jo
(bad)
bound
mov
sahf
xor
add
fcom
lods
cmc
out
addr16
mov
test
mov
test
mov
mov
mov
mov
mov
jne
lds
adc
lock
ret
repnz
jns
xchg
add
inc
inc
adc
fldenv
sub
inc
xor
cmp
cmp
out
mov
xlat
adc
test
inc
fstp
push
in
repz
inc
cli
mov
sub
retf
pop
jmp
sar
in
mov
dec
cmp
out
xor
rcr
movs
xchg
inc
inc
mov
push
sbb
hlt
dec
inc
stos
xor
leave
aam
test
scas
addr16
mov
cmp
pop
movs
push
pushf
ret
or
dec
sti
dec
inc
and
sti
aaa
jnp
adc
sub
scas
sahf
mov
xor
and
enter
out
sahf
inc
jbe
adc
ds
das
adc
fldcw
sar
in
push
stos
xchg
loopne
clc
pop
not
repz
mov
test
sub
ud1
mov
jl
sub
pop
icebp
lds
retf
ret
mov
cmp
lock
in
lods
sbb
mov
adc
or
lods
cmp
(bad)
out
jecxz
mov
hlt
in
pop
sbb
cmp
mov
popf
mov
sbb
fsub
jecxz
ficomp
pop
dec
addr16
mov
dec
adc
fdiv
pop
mov
mov
out
xchg
xchg
mov
cdq
(bad)
xchg
add
mov
in
mov
sbb
repnz
mov
mov
iret
fld
ins
pop
push
xor
int3
mov
jp
sub
add
pusha
sbb
rcr
scas
int3
call
(bad)
mov
(bad)
imul
mov
fisub
popf
out
and
cld
out
cs
mov
jbe
stos
hlt
cmc
in
push
leave
ins
call
add
jns
xchg
and
std
pushf
inc
jecxz
faddp
repnz
cmps
push
leave
ficom
cld
jle
dec
into
mov
ja
push
push
dec
stc
sbb
add
xor
sahf
jno
jns
xchg
jbe
pop
pop
inc
pushf
push
push
nop
add
jmp
xor
sbb
xchg
retf
cwde
aad
mov
and
stos
xchg
fs
jl
frstor
sbb
jp
int3
jae
jge
dec
dec
inc
mov
pop
or
ret
test
test
(bad)
in
inc
mov
sub
ds
sub
ins
add
jl
das
pop
aad
jne
call
push
dec
dec
cli
dec
enter
lahf
jns
xchg
pop
test
leave
inc
outs
icebp
add
push
mov
and
movs
loop
push
jmp
std
add
out
(bad)
out
loop
or
jne
mov
fidivr
cmp
jl
loop
mov
scas
jp
and
ja
or
xor
xlat
sub
call
jecxz
mov
fcom
movs
push
sub
xor
jmp
popf
push
adc
lock
jo
and
dec
mov
adc
jno
xchg
inc
sbb
sub
gs
add
lea
mov
sbb
add
fmul
mov
mov
mov
pop
retf
test
mov
les
ins
and
mov
fwait
ror
and
cmp
add
push
out
push
das
das
data16
and
shl
mov
lahf
sub
inc
aas
jae
sub
or
(bad)
(bad)
or
or
outs
dec
cmp
add
hlt
adc
sub
call
std
adc
std
pop
mov
xchg
inc
mov
push
fs
pushf
outs
aad
cwde
mov
inc
mov
rcl
jnp
out
jb
add
cwde
mov
hlt
lods
jp
mov
lahf
int
mov
inc
mov
mov
sub
inc
sub
ins
sbb
or
jge
mov
test
push
enter
mov
xor
nop
fild
inc
nop
in
jmp
leave
jno
jnp
inc
xchg
xor
fdivr
mov
or
out
jno
outs
out
ror
(bad)
or
cmp
jmp
push
aad
and
sbb
ins
in
lods
int3
xchg
popa
mov
sbb
xchg
cmp
lock
mov
shl
call
das
mov
sbb
mov
xchg
jae
jbe
hlt
(bad)
sbb
push
jmp
mov
dec
cmp
pop
jns
mov
and
in
or
retf
push
mov
rcl
shr
clc
bound
sub
xor
sub
ins
xlat
dec
push
cs
jmp
daa
jmp
pop
test
mov
mov
mov
rcr
popf
das
mov
jmp
and
add
pushf
fistp
cdq
call
addr16
lea
sahf
outs
jl
push
adc
jmp
jmp
cmps
in
out
mov
pop
mov
cmps
bound
xchg
out
pop
inc
xchg
sti
les
cmp
cld
inc
hlt
fs
fcom
repnz
xor
fsubrp
jecxz
shr
cs
lods
sub
or
sub
mov
or
out
xor
jae
mov
xor
push
popa
stos
mov
ds
or
add
leave
add
add
rcr
xor
sbb
mov
dec
push
push
jecxz
std
fild
push
inc
and
ds
das
rol
stos
cs
cdq
dec
repnz
add
out
jge
pop
(bad)
movs
clc
push
dec
in
test
add
or
les
or
pop
test
imul
jle
scas
dec
ja
jo
addr16
arpl
dec
mov
jae
push
xor
bound
mov
add
sub
jl
imul
xchg
leave
sbb
out
pop
dec
scas
cdq
div
xchg
neg
add
in
and
cmp
fimul
xlat
add
mov
sbb
pusha
fcmovb
jg
jae
and
sbb
or
sbb
idiv
shl
xchg
adc
mov
(bad)
jmp
pop
xor
test
jmp
push
push
mov
cmp
dec
dec
retf
push
js
outs
retf
outs
ret
lods
ficom
and
pop
inc
adc
cmp
add
hlt
dec
inc
aas
xor
dec
pop
add
dec
push
test
push
hlt
or
jg
nop
je
loopne
jle
mov
test
mov
ins
pop
jnp
and
or
ficom
vmovupd
mov
nop
adc
mov
addr16
push
jg
lea
pop
xchg
add
add
sbb
retf
arpl
outs
mov
cmps
call
pop
shr
(bad)
push
inc
or
aad
mov
pop
inc
pop
out
imul
cmps
push
pop
loopne
in
push
(bad)
fwait
cmp
mov
out
jge
rcl
fsub
mov
(bad)
mov
test
add
mov
push
fst
mov
test
inc
mov
cmc
mov
jge
dec
test
cwde
mov
jb
adc
mov
bound
cmc
rcr
jae
dec
mov
push
(bad)
enter
clc
repz
ret
mov
adc
add
jmp
xchg
xchg
mov
fist
lods
sbb
sub
aaa
mov
js
arpl
out
pusha
andps
mov
adc
push
dec
shl
add
push
mov
inc
xchg
mov
lods
lahf
lahf
shl
push
das
mov
sub
imul
in
sbb
lahf
out
cli
ret
pushf
jbe
fdiv
push
and
mov
retf
mov
loopne
inc
mov
jle
xor
pushf
(bad)
ror
movs
daa
add
and
mov
mov
in
fmul
pop
xlat
aad
and
inc
fwait
fwait
clc
imul
jmp
pop
lea
or
daa
popa
repnz
daa
out
push
ss
call
mov
loope
add
jp
aaa
test
jae
lea
pop
repz
movs
pop
mov
add
push
and
out
mov
fisttp
arpl
fistp
sbb
and
call
xchg
sub
dec
(bad)
pop
or
push
xor
add
jae
test
mov
pop
je
movs
(bad)
jmp
cwde
fiadd
jmp
push
nop
push
jmp
not
std
sub
mul
div
cmp
scas
mov
sub
mov
enter
stc
jns
xchg
fld
push
lds
(bad)
adc
dec
jle
loope
xchg
adc
and
bound
loopne
shl
ins
jmp
stos
ins
push
mov
rol
cmp
mov
test
mov
mov
dec
adc
icebp
gs
mov
pop
pop
sti
inc
daa
mov
cmp
adc
shr
jmp
pop
cmc
call
add
jmp
imul
xchg
in
fdivr
mov
frstor
aam
sbb
stc
xchg
fdivr
ss
push
mov
sbb
inc
popf
test
jo
ja
sahf
inc
dec
dec
out
fwait
push
and
add
out
sbb
pop
dec
addr16
and
pop
or
dec
pop
sub
aaa
cli
es
into
ret
adc
push
in
sahf
inc
cmps
out
enter
fucomp
scas
mov
mov
mov
pusha
ds
cmp
cmc
mov
nop
(bad)
jmp
(bad)
xor
es
or
xchg
scas
out
mov
in
cli
adc
cld
push
sub
ror
clc
arpl
pop
jge
adc
retf
das
rol
lock
or
mov
imul
cmps
or
jns
addr16
not
(bad)
ins
mov
dec
jl
fstp
sub
pusha
inc
js
jbe
cmps
adc
pop
neg
ror
mov
xor
dec
jp
push
jo
test
xchg
jmp
iret
jo
pop
xor
sahf
xchg
mov
jge
xor
xor
cmc
inc
cwde
push
inc
sbb
outs
les
mov
jl
lds
int3
jge
jg
mov
fsubr
out
sbb
sub
inc
pop
sahf
push
mov
test
lods
adc
popa
stc
push
stos
imul
sub
rol
add
xchg
xor
rol
ins
jmp
stc
adc
xchg
sub
xor
ins
mov
sub
pop
stos
cwde
cmp
inc
mov
dec
mov
xlat
mov
jns
imul
stc
mov
cwde
or
retf
jg
cmp
sub
inc
cmp
shl
or
ins
arpl
rcl
and
mov
inc
jmp
sbb
stos
xor
jmp
fcomp
ret
mov
aas
out
fdiv
xor
scas
add
sbb
movs
jle
mov
aam
inc
lea
test
pusha
and
xor
mov
sbb
mov
cs
leave
std
fstp
test
inc
or
(bad)
jle
aas
mov
popa
repz
or
push
or
jle
inc
xor
pop
stos
add
adc
mov
sbb
clc
xor
out
sbb
xor
push
js
sbb
mov
out
cmp
sub
xor
jne
(bad)
in
scas
xor
ds
cmp
jmp
add
and
xchg
movs
and
loop
sbb
dec
jmp
adc
push
cmp
jmp
cmps
cld
cwde
fdiv
xchg
idiv
(bad)
cmp
ret
into
mov
or
jp
mov
xchg
loop
inc
loopne
jmp
std
inc
xor
addr16
scas
mov
cs
sub
and
pop
push
push
cmp
jmp
xlat
fmul
(bad)
cmp
mov
mov
ror
(bad)
adc
and
xor
ins
sbb
xor
cdq
test
ins
js
dec
pop
test
push
push
sub
cmc
xchg
add
lods
pop
retf
retf
cmps
jle
sbb
fcom
jbe
xchg
sti
das
xor
xlat
mov
jbe
mov
pop
addr16
int3
js
add
out
es
neg
or
jb
pop
jg
fcom
out
inc
mov
in
outs
or
sub
ja
lock
ja
les
add
sbb
sti
adc
or
cld
clc
icebp
and
sbb
fsub
jo
pop
inc
fistp
dec
hlt
inc
inc
(bad)
dec
mov
std
mov
adc
call
cmp
arpl
daa
cmps
cmp
mov
dec
(bad)
es
push
inc
jmp
push
adc
(bad)
repnz
cmp
call
retf
mov
push
loope
xchg
xchg
add
fs
sbb
mov
aam
popa
xor
cli
ficomp
js
fisttp
jg
xor
addr16
call
retf
push
and
iret
adc
xchg
test
cli
and
push
or
jns
int3
out
push
pop
sub
test
add
pop
test
pop
xchg
jge
fscale
retf
pop
push
inc
jg
push
jmp
jecxz
and
pop
sbb
inc
dec
jmp
mov
adc
gs
cmc
jecxz
mov
push
adc
pop
stc
jg
pop
ret
nop
fnstsw
std
adc
jbe
fcomp
cmp
loop
mov
enter
fwait
inc
push
pusha
dec
pop
sbb
or
inc
cmps
sar
stos
xlat
mov
mov
je
pop
scas
mov
xchg
shr
mov
ret
test
cwde
popa
push
push
clc
xchg
push
adc
data16
out
ret
push
sahf
and
imul
into
mov
push
(bad)
scas
push
push
mov
je
push
ins
pusha
mov
imul
ret
(bad)
aad
inc
fs
cmp
out
pop
leave
and
push
pop
(bad)
lock
jo
jae
pop
cmp
sbb
shl
iret
xchg
dec
aam
sbb
(bad)
adc
push
jecxz
add
mov
in
xor
arpl
sub
sub
stc
lock
(bad)
test
addr16
push
sbb
sti
mov
imul
ds
popf
shl
jae
iret
ins
xchg
lds
mov
popf
dec
push
ins
add
pop
in
cli
xchg
lock
cmp
pop
imul
xchg
popa
xchg
sbb
retf
shl
dec
mov
fiadd
stos
mov
mov
je
xchg
aad
mov
outs
cmp
repz
(bad)
dec
sbb
scas
mov
aas
jb
add
xor
cmp
mov
push
cs
fcomi
xor
or
iret
adc
xor
xor
gs
cmp
rcl
rcr
fld
arpl
retf
xor
loop
pop
xlat
jbe
pop
repnz
in
(bad)
cmp
in
fst
cmp
mov
fucomp
imul
add
(bad)
ss
push
push
fsub
lock
mov
pushf
xchg
ret
cmp
js
cmp
mov
punpckhbw
sbb
gs
ret
repz
cdq
js
movs
gs
xor
mov
inc
sub
test
fmul
div
(bad)
sbb
ja
cwde
mov
loop
mov
test
dec
adc
mov
jnp
xchg
fstp
add
rol
pop
mov
stos
or
cmp
mov
in
lea
ret
out
adc
out
out
push
cmp
in
inc
int
push
and
jo
jge
call
xor
leave
lock
outs
jp
into
outs
cmp
inc
jle
cmp
adc
pushf
mov
xchg
adc
mov
mov
int
imul
test
out
daa
std
cmps
dec
in
sbb
pop
and
and
or
cmp
dec
mov
lahf
ret
fiadd
fldenv
daa
stc
inc
and
mov
push
fnsave
xor
push
loopne
iret
mov
mov
iret
mov
call
mov
adc
mov
aas
or
push
sti
or
cmp
shl
in
or
pop
lahf
pop
stc
push
and
in
jae
bound
addr16
sar
enter
sbb
adc
out
iret
repz
and
imul
popa
cli
mov
je
sahf
mov
lea
into
adc
mov
mov
push
xor
test
int3
call
or
pushf
xchg
rol
(bad)
push
xor
lods
ret
dec
fcom
mov
and
enter
push
add
in
or
add
int
bound
inc
sub
mov
mul
je
icebp
rcl
out
sbb
and
cmp
clc
or
in
sub
fdiv
jp
test
fimul
xchg
and
jo
mov
fidivr
(bad)
pop
sbb
push
dec
loop
fsubr
push
(bad)
push
fadd
test
call
xchg
aad
pop
call
daa
adc
lds
mov
inc
push
sti
fimul
sub
je
cld
cdq
movs
xlat
(bad)
jp
xchg
xor
leave
retf
jo
je
sub
(bad)
adc
xchg
jne
fdivr
sbb
scas
add
mov
push
push
mov
ret
in
sub
sbb
add
mov
push
ret
hlt
and
icebp
mov
(bad)
xor
(bad)
and
ja
and
daa
stos
out
(bad)
inc
pop
out
stc
jmp
xor
cdq
adc
push
cdq
call
mov
push
jecxz
dec
out
jmp
pop
jmp
xor
clc
push
push
dec
inc
dec
dec
jne
popf
cmp
(bad)
(bad)
sti
test
push
js
mov
mov
jno
and
adc
dec
jmp
jbe
lods
fiadd
in
pop
adc
dec
mov
dec
push
int
test
mov
inc
pop
push
jmp
aam
movs
sbb
test
xchg
push
in
popf
pop
mov
shr
lea
test
call
ror
xchg
jne
nop
outs
push
mov
mov
call
jb
jnp
and
add
push
and
test
jb
add
nop
in
in
push
div
jp
or
xchg
aas
mov
mov
mov
sub
cmp
mov
popa
inc
imul
out
dec
ret
sub
inc
or
arpl
mov
jp
pop
add
dec
jmp
push
push
stos
es
inc
push
cmp
mov
mov
aam
xor
fldenv
inc
cmc
aam
mov
int
add
test
dec
sub
dec
and
jns
mov
xor
shr
repnz
xchg
adc
cs
jbe
les
mov
cli
cli
clc
xchg
adc
sub
fucomp
mov
pop
(bad)
cld
hlt
add
popf
and
pushf
inc
js
in
mov
call
sbb
xchg
out
nop
das
adc
adc
in
popf
inc
adc
mov
cmp
retf
sbb
jmp
sub
out
fiadd
xchg
(bad)
mov
jnp
js
and
lahf
hlt
mov
push
rcr
inc
and
and
mov
mov
repnz
scas
mov
aam
shl
in
cs
adc
cli
sub
bound
dec
ret
lds
retf
cmp
and
mov
and
sbb
in
or
pop
nop
sub
add
out
jmp
call
aam
push
push
sub
mov
push
popa
xchg
xchg
movs
in
sbb
sub
dec
cmp
icebp
pop
mov
mov
xchg
sub
enter
inc
mov
jae
cmp
ins
(bad)
mov
in
and
mov
add
pusha
mov
jle
pop
pop
mov
jns
jbe
pushf
fistp
out
xchg
outs
add
in
(bad)
xchg
adc
in
pusha
stos
aam
mov
shr
and
inc
mov
cmp
push
xlat
and
je
pushf
jno
ficomp
ret
dec
inc
iret
aas
cli
rcr
and
inc
ins
std
in
test
stos
mov
cli
les
cmp
jle
sub
push
add
out
and
or
add
xchg
sub
int3
scas
mov
loop
cmps
add
inc
outs
sub
pop
push
loope
int3
mov
add
int3
mul
sub
scas
outs
bound
cmp
aam
outs
addr16
leave
add
test
es
mov
cmp
daa
mov
cmp
ins
pop
stos
and
adc
rol
adc
sbb
mov
sbb
les
mov
sti
and
stos
push
mov
into
cmovp
scas
cmps
mov
push
inc
outs
call
pop
and
in
xchg
inc
adc
test
fild
xchg
loopne
mov
into
pusha
add
jne
in
inc
nop/reserved
push
retf
fisttp
mov
or
mov
lods
cmp
ins
pop
cmp
fwait
pop
sbb
mov
gs
gs
aad
jne
ds
xor
mov
sub
(bad)
sahf
and
jmp
push
inc
(bad)
loop
lahf
pop
les
in
cmp
(bad)
outs
aas
jae
jbe
(bad)
mov
scas
lds
cs
cmp
jl
inc
(bad)
xchg
lods
ss
xchg
sbb
icebp
int
call
cmp
shr
mov
hlt
mov
cld
repnz
xor
test
loop
jb
cld
loope
sbb
test
add
cmp
and
pop
fst
fst
idiv
xchg
push
jg
movs
jbe
dec
sahf
sti
mov
dec
jg
aam
pusha
push
fdivr
inc
clc
sbb
shl
add
and
iret
mov
aaa
jle
into
xchg
mov
mov
dec
aas
mov
jp
ret
or
test
into
sbb
sbb
cmps
or
xchg
clc
sbb
or
mov
ds
push
mov
xor
test
cmp
pop
lods
rcl
imul
jbe
and
sbb
into
repz
sar
mov
enter
leave
add
inc
mov
add
adc
retf
fcom
add
jo
retf
xchg
jge
pop
and
hlt
dec
into
cdq
out
repnz
leave
lock
into
div
mov
add
mul
pop
scas
stc
jmp
sti
xchg
pop
aaa
push
test
sti
clc
adc
xor
add
cmp
jle
sub
int3
jno
xor
mov
sbb
aaa
retf
xchg
(bad)
jmp
bound
mov
pop
pusha
adc
adc
cmp
mov
xchg
ins
push
cmp
or
sbb
cmp
out
fwait
or
pop
div
adc
les
mov
test
jmp
repnz
out
xchg
push
aas
aad
xchg
sbb
mov
xchg
mov
sahf
add
aad
adc
mov
adc
inc
ds
add
nop
cmp
mov
hlt
or
cmp
xchg
mov
in
out
in
lahf
fwait
xor
dec
adc
outs
cmps
scas
loopne
cs
scas
pusha
sub
cs
mov
pop
cmp
je
and
or
mov
in
mov
mov
repnz
add
js
mov
sub
ins
xor
adc
clc
ss
lea
lods
sub
nop
xor
fcos
dec
jnp
and
in
test
jno
dec
mov
data16
push
adc
inc
cdq
pop
xor
mov
into
mov
shl
imul
add
lds
jns
data16
fnstsw
out
add
pop
jae
fs
cmp
add
lods
repnz
aas
clc
sbb
sub
fisttp
rcl
adc
or
sub
xor
xchg
neg
dec
fistp
aam
adc
sbb
mov
mov
daa
fistp
cmp
mov
sub
and
lock
mov
and
cmp
and
out
mov
mov
sub
fld
pop
push
cmp
cmc
rcr
xchg
mov
add
pop
push
jae
mov
inc
inc
xor
add
sbb
inc
add
aaa
scas
jmp
jo
cmp
mov
mov
dec
mov
and
ret
test
sbb
popa
retf
xchg
ss
add
push
pop
sub
push
dec
push
mov
shl
test
dec
iret
test
std
inc
sbb
sbb
mov
or
xchg
xchg
mov
xchg
ss
jp
call
data16
dec
or
(bad)
int
in
jmp
loop
outs
adc
pop
dec
dec
inc
inc
push
movs
call
inc
outs
mov
cmps
push
ss
dec
cld
cmp
inc
cwde
icebp
shr
jmp
push
icebp
imul
adc
les
mov
es
dec
inc
pop
out
rcl
or
inc
and
ja
in
stos
mov
sti
dec
adc
jnp
dec
js
lock
sbb
mov
nop
xchg
sub
and
aaa
jle
jg
mov
sti
das
popf
jb
test
dec
out
sbb
xchg
jmp
mov
scas
data16
jae
js
imul
fwait
das
or
push
push
nop
jmp
iret
imul
pop
xlat
out
aas
mov
movs
ins
mov
dec
cli
test
push
pop
inc
mov
ja
bound
aaa
sbb
jbe
and
and
or
(bad)
and
sahf
out
lahf
jb
add
mov
cli
ret
mov
ror
jg
(bad)
inc
dec
ins
pusha
dec
aad
adc
scas
sbb
jns
pop
or
push
fcomi
or
sub
data16
jge
imul
fbstp
cmp
pop
jp
push
adc
or
pop
aaa
jo
div
and
cmp
or
mov
jp
sti
add
pop
sti
sub
out
jne
pop
fwait
push
dec
add
xchg
das
inc
push
push
mov
das
inc
cmp
iret
mov
pop
shr
out
and
outs
inc
xchg
mov
shl
adc
adc
ds
idiv
mul
add
adc
inc
cmps
sub
sbb
inc
xor
mov
js
jae
adc
pop
push
xor
rcr
cdq
xchg
mov
mov
stc
dec
clc
inc
(bad)
ja
sbb
in
jmp
push
mov
inc
push
loopne
ret
push
mov
xlat
jb
jne
in
cmp
in
outs
icebp
or
cmp
and
dec
or
or
sub
(bad)
outs
repz
into
scas
mov
or
xor
das
mov
test
mov
mov
adc
and
repz
loop
mov
aam
push
stos
clc
retf
cmp
jno
jmp
pushf
clc
lods
sbb
jnp
retf
aas
test
xor
xchg
arpl
xchg
data16
mov
out
neg
push
jge
pusha
pop
cmp
ficomp
sub
imul
sti
(bad)
aad
jnp
pop
cmp
data16
(bad)
pusha
pop
icebp
sti
or
cld
pop
in
fwait
aas
push
cmp
fmul
add
lods
ja
sub
cdq
data16
adc
adc
mov
mov
and
das
sub
dec
sbb
aas
cdq
std
fwait
icebp
outs
ds
call
test
ds
bound
jge
mov
(bad)
pop
add
mov
out
or
test
cmp
xchg
idiv
les
(bad)
jae
bound
imul
stos
sahf
jo
in
ja
fwait
test
mov
xlat
mov
mov
call
mov
popf
lahf
dec
push
sbb
test
fs
push
mov
jle
fsub
ret
xchg
fist
pop
push
jmp
out
retf
mov
and
dec
add
pop
or
clc
sti
mov
sub
aaa
gs
mov
inc
jo
stos
and
push
jne
call
out
or
scas
xchg
(bad)
push
adc
sub
and
push
test
jmp
xchg
sub
pop
and
cmps
imul
popa
mov
imul
add
or
rcl
mov
jl
mov
xor
xchg
enter
out
jmp
pop
arpl
jno
sub
dec
cdq
scas
inc
rcr
push
jno
mov
inc
and
(bad)
cmp
pop
int3
sbb
and
inc
popa
jo
popf
addr16
pop
js
outs
mov
xchg
lods
mov
xor
push
push
fistp
xchg
dec
cmp
sbb
sbb
push
rol
mov
push
dec
sahf
or
lods
outs
mov
xchg
inc
daa
dec
fimul
add
pop
pop
stos
lea
aaa
xor
mov
mov
call
ds
std
jl
mov
xchg
xor
call
jmp
push
xchg
add
mov
push
mov
xchg
ret
inc
arpl
jnp
xor
leave
xor
sahf
add
sahf
popa
inc
pop
es
jle
mov
sub
loope
sar
dec
and
mov
jle
sbb
and
stc
mov
hlt
mov
mov
mov
pop
test
mov
aas
stos
and
and
inc
inc
inc
inc
sub
ret
mov
or
pop
loopne
rcl
mov
mov
and
outs
cmp
test
push
pop
mov
push
mov
repz
mov
xor
xchg
aaa
pusha
scas
jnp
std
jp
mov
add
bound
test
daa
loope
jg
jo
mov
mov
jl
out
cwde
shl
fwait
loop
dec
or
ror
cmps
dec
sub
ja
test
pop
retf
mov
hlt
cmp
mov
xchg
ins
inc
addr16
(bad)
jp
imul
mov
dec
shl
adc
loope
cmp
cmp
push
add
shr
cmp
mov
and
and
and
or
jo
jecxz
imul
je
adc
mov
xchg
mov
jmp
aad
movs
mov
pushf
and
bound
or
call
add
dec
or
jbe
push
cmp
inc
fnstenv
cmp
das
xor
shl
bnd
inc
imul
rcl
addr16
int
lahf
mov
std
mov
pusha
scas
push
push
mov
push
out
xchg
inc
dec
or
dec
cmps
test
(bad)
dec
arpl
aaa
push
lock
adc
cmps
into
enter
out
aam
xor
adc
ss
fbstp
add
out
inc
inc
cmp
cmp
sbb
inc
pop
pushf
js
add
dec
inc
push
inc
adc
or
mov
cmps
mov
stos
sub
jnp
dec
sbb
jmp
scas
stc
ffree
pop
and
mov
xchg
sbb
mov
fdiv
retf
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
add
jle
add
or
add
add
and
jb
outs
addr16
add
add
adc
add
add
push
push
add
add
adc
add
and
dec
inc
add
add
add
or
add
and
outs
bound
add
add
add
push
xchg
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
push
add
data16
add
add
scas
add
push
add
add
add
push
add
add
push
add
add
sub
push
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
sub
push
add
add
add
add
add
push
add
add
add
sub
adc
add
xchg
add
add
add
add
jmp
icebp
add
add
add
add
add
add
push
add
sub
push
add
xchg
push
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
cmps
add
lds
fild
clc
add
pop
push
data16
add
add
add
add
add
add
add
add
mov
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
sbb
mov
add
add
add
add
add
add
add
xchg
sbb
sbb
add
add
adc
add
add
add
add
adc
retf
add
add
pushf
sub
add
add
add
add
add
mov
add
add
adc
jmp
test
add
enter
add
adc
out
nop
add
add
sub
add
add
add
add
add
add
adc
sahf
add
add
add
add
add
adc
jecxz
dec
add
add
xor
add
add
add
add
add
pop
xor
add
add
add
add
xor
adc
int
lahf
add
add
add
add
adc
jmp
rol
add
add
add
adc
in
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
adc
out
pop
add
add
cmp
add
add
add
add
cmp
adc
int
mov
add
adc
add
add
adc
sahf
add
aas
add
add
adc
add
mov
add
add
add
add
add
add
add
add
inc
add
add
adc
add
fiadd
add
hlt
inc
add
add
adc
test
add
add
adc
fild
or
add
inc
add
add
adc
jecxz
and
add
inc
add
add
adc
out
inc
add
add
inc
add
add
adc
int
pop
add
add
push
sbb
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
retf
add
add
mov
iret
add
add
jmp
add
add
add
add
add
add
add
add
sbb
add
jae
or
and
jmp
add
add
add
add
add
add
jmp
add
add
add
jmp
add
add
add
arpl
add
add
add
add
add
jge
or
jno
mov
add
add
add
add
add
add
add
add
add
add
adc
xor
imul
rol
add
aaa
add
inc
add
dec
add
add
add
test
add
jle
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
and
pusha
add
add
add
add
add
add
add
add
add
add
add
adc
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
and
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
and
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
bound
add
add
add
add
or
xor
jns
hlt
add
add
add
je
cdq
add
add
push
add
add
adc
sub
inc
add
jge
mov
add
add
add
add
add
add
pop
add
add
add
add
js
add
or
out
push
add
or
add
add
add
pop
add
add
add
add
or
and
add
add
add
add
add
sub
add
add
add
add
add
xor
add
add
pop
add
add
add
add
add
add
add
add
or
add
add
str
add
lldt
add
pop
add
add
sbb
iret
add
sbb
iret
add
pop
add
add
pop
add
add
pop
add
add
and
iret
add
and
add
add
add
add
add
add
daa
add
add
sub
iret
add
sub
rol
sub
iret
add
sub
add
add
add
add
das
add
add
xor
iret
add
xor
rol
xor
iret
add
xor
add
add
add
add
cmp
iret
add
cmp
add
add
add
add
sub
push
add
add
push
add
cmp
mov
add
push
add
add
sub
mov
add
add
add
add
add
add
add
add
add
add
add
add
xor
stc
add
lods
add
add
add
sbb
add
add
add
add
add
add
add
or
inc
add
test
or
add
add
add
add
add
add
add
adc
inc
add
inc
add
add
add
add
add
add
sbb
cmp
sbb
inc
add
add
pop
pop
pop
outs
gs
outs
fs
add
jb
gs
add
arpl
ins
imul
outs
ja
inc
popa
jae
add
jae
gs
add
jae
gs
cs
imul
inc
outs
jb
jae
cmp
outs
fs
gs
je
xor
push
jne
je
ins
gs
gs
jo
jb
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
imul
inc
jb
popa
jns
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
popa
jb
arpl
outs
jb
push
arpl
imul
jb
je
arpl
inc
je
jb
bound
add
jae
gs
cs
arpl
imul
jb
loope
mov
and
dec
bound
arpl
xor
dec
inc
imul
ins
add
jne
je
ins
inc
je
jb
bound
gs
jb
jbe
fs
push
jns
je
ins
cs
gs
arpl
outs
add
imul
imul
imul
add
jae
gs
cs
dec
cs
popa
arpl
imul
imul
push
popa
jb
add
jb
popa
ins
add
jae
gs
cs
dec
add
je
add
jo
jae
add
jae
ins
bound
outs
jo
inc
jno
popa
ins
imul
outs
add
outs
arpl
add
addr16
outs
je
js
gs
imul
jae
popa
ins
inc
jns
gs
bound
arpl
push
gs
popa
ins
imul
push
jns
je
ins
cs
jne
je
ins
gs
gs
popa
ins
imul
add
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
outs
fs
popa
jae
add
arpl
je
outs
outs
add
ins
bound
dec
outs
outs
add
je
dec
gs
popa
add
jbe
jb
outs
ins
outs
je
addr16
dec
gs
imul
pop
push
je
arpl
jb
arpl
dec
gs
popa
addr16
outs
js
push
push
imul
jae
ins
je
loope
mov
push
push
inc
je
jb
bound
gs
xor
popa
ins
jne
push
jns
gs
xor
sub
and
and
sub
pop
push
jns
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
outs
imul
je
ins
cs
push
imul
gs
inc
jo
inc
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
push
gs
jne
arpl
gs
ins
jbe
add
imul
gs
bound
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
push
je
imul
fs
push
jns
je
ins
cs
gs
add
jo
outs
add
je
imul
add
jbe
imul
gs
js
arpl
imul
ins
bound
loope
mov
outs
ins
jbe
inc
jbe
outs
je
jb
jae
inc
jbe
outs
je
jb
jae
pop
inc
jo
inc
outs
ins
popa
imul
imul
xor
dec
gs
outs
jb
push
je
gs
ins
add
ins
popa
je
push
je
gs
ins
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
jo
gs
imul
add
je
dec
je
ins
add
je
popa
je
add
je
dec
popa
ins
add
outs
je
imul
push
gs
add
jno
popa
je
bound
xor
addr16
push
gs
gs
imul
ins
bound
push
gs
popa
je
add
imul
fs
arpl
popa
arpl
jns
dec
outs
popa
add
arpl
imul
js
push
outs
jne
arpl
loope
test
and
xor
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
je
popa
jb
add
je
je
gs
ins
add
gs
arpl
gs
jns
add
pop
dec
outs
gs
popa
ins
imul
jb
jns
inc
gs
popa
outs
imul
jae
jne
arpl
popa
ins
gs
addr16
dec
outs
addr16
add
je
inc
jae
gs
bound
dec
jo
outs
add
ins
gs
outs
fs
ins
gs
arpl
jae
add
je
inc
outs
je
jns
outs
imul
push
outs
add
outs
data16
gs
jns
je
jb
bound
add
je
imul
and
add
and
add
and
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jo
jb
jae
dec
ins
fs
jae
inc
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
outs
jo
jb
addr16
jb
bound
add
add
add
add
add
add
add
cmp
add
add
add
add
sub
add
add
add
add
sub
add
add
xor
add
arpl
cmp
bound
arpl
data16
add
call
dec
popf
push
mov
add
or
xor
mov
xor
dec
xor
adc
add
add
add
add
add
add
push
adc
push
sbb
sbb
adc
adc
or
sbb
and
add
adc
xor
sub
add
xor
cmp
sbb
add
inc
adc
add
push
push
push
add
add
push
pop
add
adc
xor
and
sbb
dec
sbb
push
sbb
sbb
or
or
or
or
or
or
or
add
adc
pop
add
add
push
add
push
add
add
inc
add
adc
add
adc
or
adc
and
push
add
add
add
push
add
push
add
push
add
adc
push
sbb
add
adc
add
add
adc
or
add
or
add
sbb
add
adc
add
push
and
add
or
sbb
adc
add
or
or
or
or
push
and
adc
add
or
or
or
sbb
or
or
push
add
push
add
and
sbb
sbb
add
add
pop
pop
or
or
sbb
add
adc
add
adc
or
push
adc
or
add
inc
sbb
adc
adc
popf
sbb
and
dec
adc
or
or
or
or
or
or
xchg
push
or
adc
inc
add
add
push
push
or
adc
adc
pop
or
adc
and
add
add
cmp
sub
and
add
add
add
add
add
add
sbb
or
sbb
inc
push
add
or
or
or
and
or
adc
push
or
add
add
adc
or
add
push
add
push
or
and
sbb
and
adc
adc
add
inc
push
add
or
pop
push
or
dec
or
sbb
add
adc
pop
or
or
or
sbb
or
push
add
sbb
adc
add
add
add
add
pop
pop
or
or
or
and
add
adc
push
add
add
or
pop
or
adc
or
add
adc
add
mov
inc
sbb
cmp
or
and
or
adc
push
or
add
cmp
add
add
add
pop
push
or
or
adc
add
push
add
add
push
or
pop
or
or
sbb
and
adc
add
xor
or
or
pop
or
dec
or
or
and
adc
or
add
adc
push
add
or
pop
add
or
sbb
adc
adc
add
push
push
add
or
or
add
or
or
adc
add
push
add
add
add
adc
add
push
add
add
add
pop
push
or
or
sbb
sbb
add
add
add
add
add
pop
pop
or
or
or
and
or
adc
add
push
add
add
pop
add
or
adc
add
inc
sbb
pop
push
or
push
or
sbb
adc
add
inc
push
add
push
or
add
xor
cmp
add
add
adc
add
adc
push
or
pop
or
pop
or
or
and
adc
add
or
add
push
adc
pop
or
push
or
or
add
push
push
or
add
pusha
jns
jo
inc
outs
push
push
sub
pop
inc
or
pop
and
xor
xor
xor
cs
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
push
pusha
jns
jo
inc
outs
push
push
sub
pop
inc
add
adc
add
cmp
outs
ss
push
push
ja
add
add
or
xor
xor
xor
add
add
or
add
or
add
add
push
add
adc
outs
data16
gs
jbe
cmp
xor
xor
add
leave
add
fmulp
add
add
add
ror
add
add
pop
inc
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
add
add
and
