call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
jmp
mov
cwde
outs
dec
movs
sbb
mov
stos
ja
or
xchg
jmp
outs
cmp
addr16
mov
add
out
xor
pop
sub
cmp
shl
std
int
in
rcr
push
mov
jmp
jge
stos
xchg
push
sub
jae
scas
mov
call
les
jne
mov
stos
adc
cli
sar
cmps
pxor
lea
movs
add
dec
and
dec
sub
sbb
pop
cmp
in
ret
data16
jg
les
icebp
les
mov
iret
fwait
jp
cmps
jbe
cwde
ins
xor
gs
test
hlt
push
cmp
loop
sbb
arpl
adc
mov
in
rcl
cmp
mul
scas
xchg
out
xchg
hlt
ret
(bad)
and
xchg
in
mov
push
push
mov
mov
mov
sbb
sub
fnstenv
adc
inc
paddsb
adc
ins
xlat
aaa
sbb
pop
mov
and
gs
test
cmc
dec
cmp
fild
iret
mov
jmp
das
test
mov
jmp
sbb
paddusw
cdq
jp
mov
repnz
ss
jbe
scas
adc
retf
inc
movs
jl
mov
loope
and
shr
or
adc
push
cmps
jge
mov
push
sahf
jle
mov
jecxz
nop
out
mov
in
(bad)
pushf
repnz
lahf
not
das
or
ds
test
mov
aad
push
loop
or
adc
or
or
xchg
fcom
add
jo
xor
dec
xor
dec
adc
ror
or
push
push
das
jne
pop
leave
mov
pop
sub
inc
lods
ins
int
sub
out
lahf
outs
ret
movs
sti
adc
xor
test
and
dec
push
lods
ins
outs
jge
imul
mov
mov
jmp
cmp
sbb
ins
jnp
xor
pop
jecxz
pop
mov
ror
rcl
mov
into
mov
fcmovne
cmps
ja
push
sbb
sar
enter
push
sbb
retf
cmp
dec
cld
jmp
scas
ins
jp
not
lahf
into
clc
ins
jne
sbb
inc
into
int3
add
ret
retf
cs
test
xchg
hlt
gs
xor
arpl
xor
or
xor
push
lods
fst
cmps
aad
pusha
shr
push
mov
shr
ret
push
adc
in
push
leave
fwait
dec
daa
and
push
cmp
pop
retf
loop
ss
das
jne
pop
leave
mov
stos
push
repz
push
xchg
int
js
jg
into
or
retf
pop
xchg
(bad)
cli
es
add
mov
pop
iret
sar
pop
sub
popf
sysenter
mov
xor
inc
or
mov
(bad)
aad
cmp
push
xor
movs
push
xor
movs
push
xor
ror
mov
dec
sti
mov
movs
push
xor
ror
cdq
clflush
movs
push
xor
movs
(bad)
push
cmp
xchg
mov
mov
cmp
mov
test
aas
or
mov
aad
add
or
add
or
movs
push
xor
int
xchg
mov
out
aad
fnstsw
or
cdq
paddusw
or
sub
or
lods
push
xor
movs
push
xor
movs
add
xor
movs
push
xor
movs
push
xor
inc
dec
xchg
mov
movs
push
xor
movs
cmps
aad
add
or
movs
push
xor
mov
or
mov
test
sbb
or
mov
xchg
mov
aas
dec
sub
pushf
cmp
stos
neg
pushf
cmp
and
xchg
fistp
push
xor
inc
pushf
xchg
mov
(bad)
aad
cmp
push
xor
movs
push
xor
movs
push
aaa
sub
xor
movs
push
xchg
data16
mov
xor
movs
push
xor
movs
push
xor
add
mov
mov
xor
movs
push
test
aas
or
mov
push
adc
or
test
sub
ret
or
cdq
das
pop
rcl
or
mov
out
xor
push
arpl
arpl
push
popf
sar
fimul
aas
movs
(bad)
fld
lock
fwait
jns
add
popf
jns
jge
sub
imul
or
jnp
mov
ins
jge
jecxz
push
in
stos
jl
retf
sar
es
jne
sbb
jecxz
inc
lods
ins
ficomp
mov
xor
shr
adc
imul
iret
fwait
xchg
jnp
add
push
dec
xchg
push
test
scas
lds
xchg
dec
leave
and
push
popf
add
cmc
dec
lds
ret
lea
cs
in
push
xchg
lea
pop
shr
fs
inc
add
imul
mov
(bad)
mov
jmp
fistp
(bad)
jae
jmp
inc
jmp
jge
ret
lea
(bad)
jecxz
ret
aaa
test
sbb
lds
retf
xchg
movs
retf
sub
arpl
in
and
or
popf
sbb
ins
ins
cmp
shl
lods
fdiv
stos
leave
push
iret
jmp
clc
ror
fsub
aam
fwait
inc
int
fsubr
push
cs
pop
xchg
sub
faddp
sti
ret
scas
jmp
stos
ins
jnp
push
and
adc
ins
bnd
push
pop
mov
xchg
ins
jge
mov
test
shr
mov
jbe
sbb
mov
in
xor
hlt
xor
or
xchg
in
xor
mov
mov
in
xor
das
lods
mov
xchg
in
xor
scas
adc
mov
jl
xchg
xchg
in
xor
ss
in
mov
(bad)
cwde
cmp
adc
xchg
in
xor
mov
xchg
inc
xor
xor
mov
xchg
in
xor
and
xor
cwde
mov
mov
pop
les
aam
push
or
add
push
or
js
jmp
lock
ror
js
xchg
mov
into
imul
add
test
push
std
sub
dec
loop
jb
xchg
push
inc
ins
xchg
aad
push
xor
jb
xchg
push
inc
ins
xchg
push
dec
ins
lds
or
sub
push
lods
pop
inc
ins
xchg
push
inc
fsub
and
push
popf
push
inc
ins
xchg
push
xchg
dec
dec
jbe
xor
pop
inc
ins
xchg
push
dec
sub
inc
imul
ja
popf
dec
sub
fwait
sub
xchg
xchg
iret
sub
imul
add
pushf
or
push
popf
push
inc
ins
xchg
push
inc
ins
xchg
push
retf
cmp
sub
cmp
mov
sub
jl
push
lods
or
and
lods
jl
dec
lods
dec
out
popa
cmp
or
dec
push
in
fld
out
stos
jecxz
ins
mov
xor
aaa
std
xor
sbb
cmp
adc
cmp
jp
xor
pushf
mov
dec
inc
mov
js
ret
sbb
fisttp
iret
iret
stc
js
mov
in
inc
or
xor
leave
jge
aam
mov
mov
and
lahf
dec
adc
mov
sti
pop
jle
rol
enter
mov
adc
push
mov
push
fdiv
xor
into
inc
mov
lock
(bad)
mov
inc
pop
mov
jo
cmp
xor
inc
jmp
sub
xchg
iret
into
mov
int3
xor
loopne
fs
sti
int3
outs
add
mov
fsubr
mov
cmp
cmp
cmp
add
and
ins
dec
push
pop
loopne
jnp
cmp
mov
lock
mov
pop
cs
cmp
out
popa
scas
popf
mov
les
into
sbb
inc
xor
(bad)
hlt
mov
fs
xchg
lds
mov
inc
int
ret
ins
mov
add
rol
ret
retf
mov
rcr
cld
cmp
(bad)
les
mov
bnd
inc
stos
(bad)
mov
(bad)
jne
ins
aas
nop
xor
les
into
sub
retf
pop
icebp
retf
je
mov
je
aad
and
std
inc
mov
inc
popf
outs
fldcw
pop
fisttp
fcmovnb
xchg
cwde
rol
adc
ror
cmp
add
fstp
sbb
adc
ror
adc
jb
dec
rcr
pop
fistp
(bad)
xchg
cwde
rol
adc
ror
adc
jb
dec
rcr
pop
fistp
fcmovnb
xchg
cwde
ror
adc
jb
dec
rcr
pop
fist
fcmovnb
xchg
cwde
rol
adc
rol
cmp
add
fstp
sbb
adc
rol
adc
rol
cmp
add
fstp
sbb
adc
ror
adc
mov
mov
cmp
sahf
sahf
pop
and
cwde
ds
sbb
inc
push
js
out
inc
cwde
pop
outs
dec
cmc
call
pop
fld
adc
ror
adc
rol
rcl
(bad)
adc
ror
adc
xor
push
pop
rol
adc
ror
adc
xor
pop
pop
aaa
leave
call
adc
rol
push
rcl
(bad)
xchg
adc
pop
rol
mov
xchg
xchg
fwait
mov
mov
daa
mov
push
pop
pop
and
xchg
rcl
(bad)
adc
ror
pop
rol
xchg
rcl
(bad)
adc
ror
sbb
mov
loope
sub
in
daa
test
adc
sahf
cwde
add
adc
ror
pop
rol
xchg
rcl
js
sub
pop
sub
mov
call
daa
dec
xchg
faddp
xchg
sahf
rol
adc
rol
pop
rol
(bad)
adc
ror
adc
and
pop
pop
movs
mov
es
inc
lds
pop
cmp
or
clc
cmp
add
fstp
sbb
adc
rol
adc
push
daa
dec
rcr
(bad)
xchg
xchg
rol
adc
sub
rcl
pop
push
sbb
sbb
pop
xchg
dec
mov
pop
and
xchg
rcl
shr
push
xor
mov
pop
pop
pop
rol
adc
ror
adc
xchg
dec
gs
adc
sahf
faddp
adc
rol
adc
shl
shl
(bad)
adc
(bad)
adc
rol
adc
rcr
push
sbb
pop
cdq
call
or
pop
pop
pop
mov
jmp
pop
xor
xchg
call
fcomp
(bad)
adc
ror
adc
or
pushf
mov
or
mov
xchg
aas
xchg
rcl
les
shl
mov
ror
or
es
into
pop
and
pop
adc
ror
adc
xor
pop
xchg
inc
push
cdq
in
hlt
push
out
xchg
rcl
(bad)
adc
rol
pop
rcl
pop
jnp
fadd
xchg
cwde
ror
adc
push
ins
push
rcr
dec
xchg
cmp
jbe
sbb
(bad)
push
sbb
stc
cmp
dec
daa
es
(bad)
pop
jb
pusha
dec
stos
outs
push
icebp
mov
cmp
jb
cmp
pushf
xor
pop
inc
mov
js
ret
bsr
in
jae
sti
mov
iret
inc
xor
repnz
inc
fdiv
cmp
add
outs
jno
out
ds
dec
fadd
lds
leave
adc
mov
sbb
jle
dec
push
add
ss
xor
ds
ds
fcomi
sbb
add
in
mov
leave
fmul
call
xor
ins
arpl
scas
xor
leave
cmp
adc
out
aaa
add
hlt
mov
mov
into
xor
(bad)
je
inc
mov
xchg
shl
in
adc
add
rol
lods
repz
add
jmp
inc
mov
add
fsubrp
loopne
add
rol
cmc
or
in
js
ins
sub
sub
aaa
out
inc
xor
imul
xor
retf
int
sahf
jg
mov
pusha
daa
push
mov
hlt
dec
call
iret
inc
into
mov
ficomp
jb
push
pop
dec
mov
pop
(bad)
jne
jmp
idiv
mov
pop
hlt
(bad)
adc
inc
outs
into
xchg
inc
fsub
jmp
aas
rol
retf
in
rcr
inc
pop
or
cmp
ja
(bad)
mov
add
hlt
dec
ja
hlt
dec
mul
hlt
dec
ja
hlt
dec
ja
hlt
dec
xchg
adc
(bad)
jle
hlt
dec
ja
hlt
dec
ja
sti
dec
mov
popf
add
loopne
cmp
hlt
dec
ja
hlt
dec
div
dec
mov
cmp
dec
ja
hlt
dec
xlat
mov
je
jle
hlt
dec
ja
movs
dec
xlat
xor
call
cmp
(bad)
jl
xor
xor
fisttp
xchg
push
or
mov
dec
hlt
dec
inc
call
dec
sbb
das
pop
mov
dec
hlt
dec
ja
lahf
dec
mov
cmp
cmp
dec
push
inc
hlt
(bad)
je
hlt
dec
ja
hlt
dec
ja
(bad)
inc
je
jb
hlt
dec
ja
hlt
dec
test
hlt
dec
ja
hlt
dec
ja
hlt
dec
xlat
test
pop
pop
mov
xchg
add
inc
hlt
dec
ja
hlt
dec
ja
clc
dec
ja
je
ja
cld
dec
aaa
rcl
inc
hlt
dec
ja
hlt
dec
idiv
mov
test
adc
pop
inc
hlt
cld
jbe
hlt
dec
ja
hlt
dec
push
inc
hlt
(bad)
je
hlt
dec
xlat
add
ret
je
ja
movs
dec
daa
dec
xor
jae
hlt
dec
ja
hlt
dec
ja
hlt
dec
xlat
or
ret
cmp
add
inc
je
jle
hlt
dec
ja
hlt
dec
ja
xlat
dec
ja
hlt
dec
mul
mov
add
pushf
dec
inc
jmp
cmp
add
xchg
dec
mov
popf
push
jae
je
ja
hlt
dec
(bad)
pusha
hlt
dec
jno
hlt
dec
ja
clc
dec
cmps
add
dec
hlt
dec
daa
or
mov
dec
hlt
dec
daa
or
mov
je
ja
cld
dec
aaa
xchg
pop
jecxz
sbb
mov
xor
mov
mov
mov
cmps
mov
sahf
mov
imul
xlat
and
cmp
add
mov
mov
cmp
aas
mov
and
mul
std
mov
mov
dec
dec
repz
lahf
stc
and
add
add
pop
(bad)
scas
add
mov
xor
sub
dec
dec
div
retf
addr16
push
cli
loop
dec
jge
push
int3
add
mov
cmp
in
imul
outs
mov
fdiv
jle
dec
test
retf
and
and
lock
and
jle
dec
mov
lock
mov
cmps
daa
cmps
imul
or
retf
inc
(bad)
xor
jg
ss
sub
hlt
(bad)
out
(bad)
(bad)
and
dec
into
int
hlt
mov
dec
add
in
sbb
bound
xor
jb
jecxz
cmps
shl
mov
and
(bad)
je
gs
imul
je
sar
jmp
cmp
and
dec
cmp
dec
and
pop
ins
cdq
ins
iret
mov
(bad)
retf
es
or
fcmovnu
mov
add
mov
or
pop
lock
lock
inc
ror
into
mov
les
push
jle
dec
retf
inc
shl
out
enter
iret
jb
fcom
std
cmp
inc
dec
int3
mov
jno
push
jb
lock
shl
push
inc
xchg
jo
lock
fdiv
push
inc
xchg
jo
cli
or
not
inc
push
not
jb
in
sti
dec
not
inc
fcomip
adc
ret
inc
pop
stc
adc
(bad)
repnz
jb
jno
jnp
loopne
retf
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jae
and
jno
and
ret
push
push
pop
adc
cld
inc
hlt
xchg
stc
ret
aad
jo
(bad)
sbb
(bad)
mov
mov
in
cli
or
add
xchg
jmp
mov
mov
mov
jmp
mov
mov
in
cli
or
add
mov
fwait
call
add
mov
mov
(bad)
mov
mov
in
cli
or
add
xchg
jmp
mov
or
xchg
jmp
loopne
xor
cli
or
add
shr
inc
mov
mov
or
pusha
xchg
cmp
inc
mov
ret
test
or
xchg
jmp
mov
mov
sahf
jmp
loopne
xor
cli
or
add
shr
inc
mov
mov
or
add
ret
and
jae
and
jne
and
pop
and
inc
nop
push
or
dec
cmp
add
dec
daa
fstp
retf
add
cmc
jmp
pop
add
push
rcr
ret
dec
repz
ret
aam
inc
bound
jnp
mov
sub
sub
mov
mov
or
in
jmp
mov
add
mov
or
inc
sub
mov
mov
(bad)
in
sbb
add
mov
or
jmp
ret
cmp
cli
or
add
mov
or
rcr
or
add
mov
or
jmp
xor
ret
call
or
xchg
jmp
mov
or
ret
pop
ror
arpl
in
inc
xor
mov
mov
mov
jecxz
jnp
mov
add
mov
mov
jecxz
jnp
or
or
jp
add
shr
jb
pop
bnd
and
jae
and
jge
and
push
aas
add
push
sub
or
mov
ret
jmp
or
test
pop
mov
mov
fcmovnb
shl
dec
repz
ret
aam
ja
(bad)
inc
pop
push
loop
jne
loop
mov
sub
mov
mov
or
and
inc
cmp
repz
das
repnz
inc
dec
shl
pop
(bad)
jae
and
pop
ror
jae
mov
cli
mov
add
lock
inc
aas
push
push
rcr
enter
loop
push
fmul
or
add
mov
or
mov
cmp
pop
inc
iret
add
mov
or
mov
and
inc
cmp
loop
cmc
xor
jae
and
jae
and
jae
and
push
inc
add
imul
in
cli
mov
add
mov
mov
dec
loop
mov
pop
jae
mov
mov
ret
and
xor
fld
je
sbb
(bad)
pop
sub
push
inc
sub
jl
push
int3
xor
sar
jnp
dec
mov
clc
xor
stos
jg
vmovddup
mov
call
mov
and
(bad)
leave
jge
and
dec
add
shr
dec
ins
dec
mov
jge
aas
loopne
sub
int3
je
jmp
fild
push
das
sbb
(bad)
sbb
(bad)
shl
add
gs
xor
stc
jge
add
pop
mov
or
pop
mov
jne
addr16
xchg
outs
hlt
or
dec
imul
pop
mov
jl
mov
mov
xor
cmp
dec
cmp
mov
iret
(bad)
in
inc
int
(bad)
in
in
xchg
add
iret
daa
add
mov
(bad)
jp
into
in
out
cwde
mov
retf
sbb
into
mov
lock
jle
push
out
into
ret
retf
hlt
and
add
push
push
mov
iret
pop
pop
into
daa
pop
cmp
or
aas
int
mov
mov
gs
inc
jo
inc
ret
mov
gs
dec
and
dec
mov
retf
cld
sub
cmc
js
addr16
jl
retf
push
cmp
in
sbb
add
sbb
xchg
lea
ret
mov
rcl
ret
leave
push
inc
jns
xchg
or
pop
push
xchg
lea
scas
mov
rcr
or
pop
aaa
cmc
(bad)
sbb
mov
jae
dec
and
push
inc
ror
sbb
inc
mov
ja
rcr
sbb
or
xchg
outs
xor
cmp
dec
cmp
adc
cmp
xor
mov
mov
ds
pusha
sbb
xchg
ins
cld
aad
adc
fwait
xor
in
pop
lds
xor
push
loopne
je
out
daa
ror
nop
dec
cmp
dec
mov
fist
jae
in
dec
cmc
add
gs
mov
test
leave
cmp
fidiv
fcomp
movs
xchg
adc
sbb
retf
jge
jecxz
jbe
ins
fdecstp
push
inc
sar
inc
pushf
cld
outs
aad
xor
mov
or
mov
pop
stos
xchg
push
xchg
jb
and
xchg
fs
jle
push
mov
mov
jns
xor
ss
in
imul
ja
dec
jecxz
cli
mov
ss
push
ins
cld
in
adc
aam
test
and
xchg
mov
and
cmp
mov
or
ss
ror
gs
and
jbe
cdq
jle
rep
mov
add
ret
mov
and
cmps
dec
xchg
push
les
cmp
and
mov
xchg
jns
shr
sub
xchg
test
push
xchg
adc
mov
or
sub
xchg
pushf
sub
dec
dec
sub
ja
mov
xchg
test
and
xchg
test
xor
lea
cmp
adc
xor
xchg
test
xchg
add
movs
pop
xor
xchg
test
xor
xchg
test
xchg
sbb
sub
xchg
test
sub
sbb
adc
cmp
mov
repz
mov
xchg
test
xor
xor
movs
fild
inc
mov
push
mov
or
mov
xchg
movs
xor
js
mov
xchg
in
test
js
mov
xchg
hlt
lods
and
pusha
mov
test
or
sub
inc
sub
and
call
sub
jo
pop
imul
pop
add
daa
fsubr
adc
inc
jmp
fsubr
adc
inc
retf
mov
adc
fsubr
adc
inc
jp
repz
jnp
cmp
xchg
fidivr
sbb
and
in
add
xlat
add
ret
scas
enter
mov
jb
gs
and
xchg
add
adc
ds
pop
xchg
das
mov
outs
xlat
inc
cdq
in
sbb
repz
sbb
inc
cmp
(bad)
pusha
mov
stos
pop
sbb
mov
fmul
adc
pusha
pop
push
jecxz
mov
inc
sahf
fcomp
pop
mov
jle
xchg
fnsave
mov
adc
inc
inc
inc
jns
rol
xor
ins
shr
imul
cld
and
cld
ficomp
ss
pop
in
ret
movs
rcl
sbb
and
in
retf
cmp
or
adc
nop
cmc
cmc
ja
ins
leave
xor
inc
mov
imul
fnsave
je
inc
pop
in
mov
push
or
inc
push
je
jbe
mov
cmp
xchg
push
test
inc
xchg
mov
dec
and
xor
cmp
pop
movs
inc
ja
hlt
and
enter
ret
xchg
and
adc
pop
dec
out
inc
inc
pop
adc
sub
jb
jbe
xchg
xchg
jecxz
scas
nop
scas
out
mov
jg
xor
scas
sbb
adc
jg
mov
jg
test
shr
sbb
jg
sbb
pop
and
jae
and
jmp
adc
jg
test
ficomp
fwait
shr
sbb
jg
sbb
pop
sbb
jg
mov
jg
test
rcr
jmp
pop
mov
inc
sbb
rcr
out
mov
test
jae
xchg
and
rcr
jecxz
sbb
inc
shr
inc
cmp
stc
push
sub
shr
cmp
popf
mov
rol
and
sbb
xchg
rcr
ret
ret
mov
mov
loop
dec
sub
mov
mov
sbb
retf
scas
rol
lock
loopne
inc
movs
iret
shl
ret
sbb
jmp
cmp
xchg
stc
push
mov
rcr
mov
push
cmp
loope
and
cmp
lahf
cdq
adc
add
push
jecxz
mov
and
xor
ja
sbb
mov
test
ja
ret
test
rcl
sbb
mov
jb
test
repz
sub
push
and
jg
test
and
adc
dec
ret
pop
out
mov
mov
jl
hlt
sbb
fcom
dec
ret
pop
cmps
jmp
mov
jg
push
pop
iret
add
jg
test
call
sbb
mov
out
add
jo
push
outs
outs
pop
sbb
jg
mov
jae
movs
xchg
mov
ins
jnp
adc
fwait
push
xchg
ja
test
out
push
mov
mov
hlt
lea
ja
test
out
sbb
sbb
out
add
mov
sbb
sbb
jae
test
jae
adc
pop
ins
xor
ja
test
out
ror
pop
xor
jg
test
jg
test
jnp
adc
sti
imul
jg
xchg
pop
pop
sbb
jg
mov
or
hlt
sbb
fcom
inc
ret
sub
fwait
call
lea
jb
aam
ss
sbb
sbb
sbb
in
jmp
out
pop
mov
jl
adc
inc
nop
stos
mov
cwde
mov
jno
xor
test
push
sbb
(bad)
sbb
fs
cmp
mov
or
sar
cmp
imul
ja
loopne
pop
add
dec
test
dec
stos
lea
dec
sub
mov
dec
aaa
mov
sbb
mov
sbb
lea
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
jbe
in
fcom
xlat
(bad)
sahf
ins
and
jp
jmp
je
fdiv
mov
pop
add
test
dec
mov
lds
sbb
add
movs
(bad)
mov
jae
jnp
ins
fst
xchg
pop
(bad)
ret
outs
pop
push
cmp
mov
xchg
sub
lock
rol
fwait
je
mov
xor
fstp
jmp
inc
scas
ret
jno
addr16
or
push
dec
xchg
add
xlat
pop
or
mov
mov
shr
adc
sub
repz
sbb
fadd
ror
pop
inc
inc
adc
mov
mov
jns
hlt
(bad)
shr
cmp
jge
stos
jo
adc
nop
repnz
test
pop
gs
stc
dec
xchg
pop
sub
movs
(bad)
stc
sub
add
jle
jmp
ja
hlt
add
jg
add
je
mov
and
add
or
mov
ja
cdq
inc
fmul
jns
xchg
sbb
dec
jnp
adc
xor
adc
and
in
jae
rcr
dec
dec
adc
mov
jno
in
mov
and
ins
dec
jns
xor
test
retf
imul
(bad)
push
retf
enter
clc
jns
jg
add
ffreep
jno
popf
arpl
push
lods
dec
jnp
mov
mov
in
sti
shr
and
add
in
ret
idiv
inc
or
aaa
jecxz
in
dec
fild
sbb
ins
mov
xor
push
sti
bound
push
repnz
hlt
push
icebp
(bad)
hlt
ss
addr16
popa
push
dec
xor
xchg
(bad)
mov
bnd
ret
cli
retf
fs
ja
(bad)
push
ret
mul
cld
jmp
push
inc
rol
xchg
dec
retf
outs
(bad)
dec
xchg
iret
xchg
clc
retf
mov
xor
and
push
repnz
hlt
push
mul
push
sub
pop
stc
je
push
arpl
ret
ss
imul
pop
stc
push
repnz
hlt
push
jmp
mov
repnz
clc
push
repnz
hlt
push
repz
cmps
outs
enter
push
repnz
hlt
push
jmp
out
bound
push
repnz
clc
push
repnz
hlt
push
cli
(bad)
hlt
(bad)
cmps
popa
vpsubd
pop
cs
push
hlt
cmc
push
repnz
lock
mul
movs
ins
arpl
retf
bound
not
(bad)
hlt
push
jmp
push
cli
pusha
(bad)
xchg
jb
not
(bad)
hlt
push
cld
(bad)
hlt
push
mov
mov
(bad)
in
es
mov
or
xchg
pusha
enter
(bad)
repnz
push
repnz
hlt
push
stc
bound
data16
push
push
sti
push
repnz
hlt
push
repnz
push
cmps
call
(bad)
hlt
push
repnz
hlt
push
stc
bound
out
inc
xchg
adc
shl
jg
xor
push
call
inc
out
inc
jecxz
cld
pusha
enter
push
gs
fisttp
add
and
dec
jo
mov
popa
cmps
pop
jb
pop
popf
(bad)
mov
pop
push
xchg
mov
fdiv
stos
movs
pop
mov
pop
movs
test
dec
mov
cmp
add
or
test
lea
xor
in
jbe
mov
mov
mov
dec
xchg
fadd
adc
jb
pop
pop
mov
jns
push
imul
adc
jmp
lea
ret
push
fs
lods
data16
arpl
pop
cld
fiadd
dec
and
cmp
fucom
dec
addr16
add
dec
shl
mov
stc
xchg
mov
cmp
in
ret
push
xchg
push
mov
pop
cmp
sub
push
push
sbb
sbb
js
lods
fdiv
push
div
fwait
sub
dec
mov
mov
cs
fld
add
leave
mov
mov
rol
xchg
mov
shl
sbb
sbb
stos
test
fsubr
stos
or
adc
mov
test
test
xchg
xor
inc
sti
mov
push
mov
ret
mov
popa
adc
mov
jmp
rol
sub
sub
sbb
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
cmp
cmps
jne
inc
xchg
jne
mov
aas
test
mov
lahf
sbb
es
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
cmp
push
pop
xor
jbe
dec
and
pop
mov
and
pop
fwait
and
sbb
and
pop
cmp
push
pop
xor
jbe
dec
and
pop
mov
and
pop
fwait
and
sbb
and
push
mov
daa
push
pop
sbb
pop
jae
cmps
pop
jae
scas
pop
fwait
and
pop
xor
pop
inc
and
sbb
and
pop
cmp
push
pop
xor
jbe
dec
and
pop
mov
and
pop
sbb
sbb
and
pop
cmp
inc
pop
mov
and
pop
stos
and
pop
xchg
and
ds
and
push
cmp
scas
pop
cmp
push
pop
adc
sbb
adc
pop
sbb
inc
sbb
mov
and
ds
mov
daa
push
pop
mov
and
pop
cmp
sahf
pop
xchg
and
cmps
pop
jae
sahf
pop
xor
pop
adc
pop
stos
and
sbb
xchg
and
pop
sub
xchg
sbb
and
pop
cmp
push
pop
cmp
cmps
pop
jae
ss
fwait
and
sbb
and
push
adc
pop
cmp
jbe
fwait
and
pop
pop
and
pop
mov
and
sbb
and
sbb
and
sbb
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
daa
ds
cmp
cmps
push
cmp
scas
pop
adc
pop
adc
push
inc
and
pop
adc
pop
dec
and
pop
adc
pop
xor
pop
fwait
and
pop
mov
pop
pop
and
scas
pop
dec
and
pop
jae
sahf
sbb
and
sbb
daa
ds
daa
ds
daa
ds
cmp
scas
pop
inc
and
sbb
and
sbb
cmp
ss
mov
and
pop
and
stos
and
pop
jmp
pop
pop
dec
and
pop
inc
and
sbb
and
pop
cmp
dec
pop
xchg
and
pop
pop
and
pop
and
sbb
and
sbb
jns
cmp
mov
xchg
mov
mov
and
mov
sub
adc
adc
mov
cmp
mov
sub
adc
adc
mov
mov
adc
daa
adc
mov
mov
mov
stc
push
sahf
scas
push
sub
in
xor
mul
xchg
mov
mov
mov
or
mov
daa
cmp
clc
out
sbb
test
rol
sub
and
and
movs
pop
push
ins
cmp
out
sbb
jns
xchg
les
pop
cmp
push
mov
or
sub
jmp
adc
push
ds
adc
xlat
xchg
test
mov
and
sti
adc
mov
mov
sub
out
mov
and
mov
adc
(bad)
inc
ins
jnp
jge
cmp
outs
sbb
test
rol
sub
and
adc
sub
adc
mov
sub
mov
bt
outs
sbb
xchg
ret
or
mov
lea
mov
cmp
mov
std
movs
dec
out
adc
mov
cmp
mov
inc
cmps
mov
mov
fsub
mov
mov
or
add
pop
sar
cmps
cmp
mov
mov
mov
cmp
mov
xor
and
out
mov
mov
and
cmp
cmps
or
mov
aam
sub
div
mov
adc
daa
(bad)
mov
arpl
and
movs
sub
div
mov
adc
daa
(bad)
mov
arpl
mov
lea
mov
cmp
mov
mov
and
cmp
cmps
or
mov
mov
sub
push
mov
pop
mov
daa
(bad)
mov
arpl
mov
in
sub
push
mov
pop
mov
daa
(bad)
mov
arpl
and
sub
push
adc
sub
sti
es
mov
and
cli
sbb
daa
push
adc
mov
cmp
mov
jge
pop
cli
pop
adc
cmp
cld
ss
sbb
daa
(bad)
mov
jmp
scas
ffreep
sub
cmp
cmps
or
mov
mov
sub
xor
and
mov
and
aas
sbb
add
adc
mov
and
dec
ficom
mov
sbb
das
ffreep
sub
aas
and
std
sbb
cmp
cmp
clc
(bad)
xchg
movs
ds
cmp
push
mov
lods
aaa
das
cmp
stc
ss
mov
jmp
(bad)
mov
cmp
and
push
ds
adc
jae
in
mov
jbe
in
cmp
mul
xchg
mov
mov
adc
(bad)
xchg
movs
aas
pop
cmp
(bad)
mov
and
std
adc
(bad)
xchg
movs
aas
pop
cmp
(bad)
mov
and
std
adc
(bad)
xchg
in
pop
cmp
xchg
mov
adc
(bad)
xchg
in
pop
cmp
xchg
mov
pop
mov
daa
(bad)
mov
arpl
mov
test
mov
lea
sub
push
mov
add
sub
iret
ss
ret
xchg
ins
adc
or
(bad)
push
sub
pop
adc
(bad)
push
sub
adc
ret
or
mov
xchg
sub
jmp
ds
leave
aas
aam
sub
ins
cmp
sbb
cmp
mov
and
ja
mov
add
xor
and
mov
fadd
sub
xor
and
mov
mov
arpl
mov
in
sbb
jns
xchg
test
das
cmp
cld
jbe
in
mov
mov
and
mov
cmp
ds
mov
cmp
mov
adc
mov
cmp
aas
mov
and
retf
jecxz
xor
xchg
je
pop
mov
aas
push
stos
xor
and
pop
cmp
div
mov
sbb
jns
mov
cmp
out
adc
(bad)
xchg
and
pop
cmp
push
mov
fstp
and
test
ret
or
mov
and
cmps
cmp
mov
jg
inc
xchg
fs
sbb
mov
es
test
and
fidivr
mov
in
mov
dec
xchg
mov
adc
mov
rcl
movs
sub
div
mov
adc
mov
and
mov
mov
fwait
mov
mov
lgs
(bad)
cmps
mov
(bad)
push
sub
cmp
mov
and
aas
mov
and
arpl
and
mov
cmp
xchg
or
or
mov
mov
xor
pop
adc
xor
addr16
ss
and
sbb
push
cmp
ffreep
adc
mov
rol
sub
mov
and
mov
adc
sbb
inc
daa
mov
or
mov
xcrypt-ofb
cmps
sub
push
and
shr
mov
rol
sub
mov
xor
and
aas
sbb
sub
and
movups
mov
mov
pop
movs
sub
icebp
xchg
ret
or
mov
pushf
movs
sub
lock
pop
pop
sub
imul
imul
adc
mov
pop
shl
cmps
cmp
mov
test
sbb
and
ds
cmp
sbb
xchg
push
cmp
mov
test
pop
cmp
div
mov
adc
sbb
and
(bad)
cs
adc
sub
mov
inc
mov
mov
lea
mov
cmp
mov
shl
mov
and
aas
sbb
and
adc
mov
mov
sti
aas
adc
mov
mov
shl
cmp
mov
adc
mov
cmp
mov
mov
sti
mov
mov
(bad)
mov
mov
and
cmp
imul
cmp
mov
test
imul
cmp
xchg
fdivr
cmp
lock
xchg
les
pop
cmp
div
mov
mov
cmp
aas
sbb
pop
sub
jnp
mov
mov
or
pop
jns
dec
iret
cmp
jle
cmp
ds
and
out
adc
jbe
in
cmp
mul
xchg
mov
mov
aam
jmp
mov
and
shl
mov
mov
sub
xchg
adc
movs
sub
xchg
cmp
xchg
adc
sub
and
cmp
mov
je
sub
and
cmp
mov
jge
mov
adc
cmps
push
cmp
xor
in
pop
cmp
div
mov
pop
mov
daa
ds
sbb
icebp
adc
(bad)
xchg
test
pop
cmp
(bad)
mov
and
mov
shl
cmps
cmp
mov
(bad)
mov
mov
mov
adc
mov
cmp
mov
(bad)
sbb
aas
adc
mov
mov
and
fstp
mov
and
cmp
mov
and
sub
cmp
mov
push
cmps
jmp
adc
mov
mov
lea
mov
cmp
mov
and
cmps
cmp
mov
lea
mov
cmp
mov
fsub
cmp
out
mov
and
(bad)
sbb
daa
adc
mov
mov
je
sub
sti
es
mov
and
cld
adc
cmps
push
cmp
sub
in
pop
cmp
div
adc
cmp
jmp
cmp
mov
mov
sti
aas
sbb
jns
mov
mov
sti
sub
mov
jecxz
mov
and
aas
adc
mov
mov
pop
jns
lods
(bad)
cmp
jle
cmp
ds
and
icebp
adc
jbe
in
cmp
mul
xchg
mov
mov
lea
sub
div
mov
pop
mov
ins
std
xlat
xor
outs
add
jne
in
test
mov
adc
sbb
inc
daa
mov
or
mov
xor
push
sub
adc
pop
sub
xchg
out
ins
sti
movs
pop
and
cs
mov
mov
cmps
pop
cld
cmp
cmp
mov
(bad)
push
and
outs
cmp
xlat
rol
sbb
mov
inc
ja
push
lods
rcr
jle
out
(bad)
mov
and
sahf
pop
mov
enter
test
retf
jne
mov
inc
in
jl
jns
push
fild
dec
mov
sbb
(bad)
fsub
mov
test
inc
inc
push
jp
sti
xor
mov
push
aad
out
add
sub
xchg
mov
mov
lea
pop
fld
adc
push
inc
sub
jg
int
jp
jmp
sub
mov
aaa
cmp
xchg
outs
cmp
sti
(bad)
out
push
pop
sub
dec
dec
retf
add
pop
gs
adc
jbe
xchg
dec
xlat
dec
and
add
aaa
iret
wbinvd
stos
clc
retf
add
add
repnz
sub
add
xchg
mov
mov
mov
adc
ret
mov
and
mov
js
inc
add
jne
in
add
mov
(bad)
les
pop
test
ja
retf
mov
stos
in
retf
mov
mov
sub
loop
push
aam
and
loop
add
jge
(bad)
pop
jge
test
rcl
fidivr
rcr
stos
jmp
fsubr
jmp
jno
jmp
fidiv
(bad)
jns
inc
sbb
dec
sti
stos
imul
bound
cmp
bound
and
dec
jns
jp
ror
or
(bad)
push
cmp
push
mov
push
push
fstp
call
fstp
enter
retf
test
ror
cmp
sbb
dec
dec
jae
call
rcr
rol
jo
fld
jp
or
push
dec
inc
or
popa
imul
cmp
jae
adc
fldcw
cli
fst
jo
jnp
shl
rol
jmp
shl
jo
sar
call
(bad)
and
dec
inc
sbb
dec
sti
mov
pusha
sti
jnp
jo
sar
call
pop
push
mov
push
fstp
cmp
dec
sbb
push
mov
mov
and
pop
fnstenv
js
dec
mov
f2xm1
sub
pop
xor
mov
fild
js
pop
or
fld
clc
fnstcw
fld1
ret
dec
shl
imul
adc
sub
jmp
jecxz
ror
nop
test
dec
mov
bound
cmp
pop
test
mov
push
repz
stos
test
test
(bad)
ret
or
fst
inc
fld1
add
adc
cmp
jnp
inc
pop
fnstenv
nop
test
enter
repz
fld1
rol
sbb
cmp
shl
nop
rol
dec
shl
lock
enter
rcl
dec
pop
shl
call
mov
xor
repnz
sar
fstp
test
(bad)
cwde
shl
retf
fcmovne
mov
mov
mov
dec
inc
jmp
xchg
adc
pop
pop
repz
repnz
mov
enter
rol
xor
fldcw
jb
dec
and
mov
mov
cmp
xor
dec
inc
test
jo
fist
shl
and
rcl
mov
cwde
fst
jb
dec
cmp
inc
jmp
mov
sbb
fabs
pop
mov
rol
shl
test
nop
icebp
(bad)
mov
icebp
sti
rol
fld
fld
inc
fstp
rcl
mov
cwde
stc
fisttp
mov
sub
jecxz
mov
jno
and
mov
xor
cli
dec
test
lock
add
mov
ret
repnz
mov
inc
fst
call
loope
shl
mov
push
cmp
push
cmp
mov
mov
lock
fcmovnb
jo
jnp
loopne
shl
mov
add
inc
xchg
mov
ror
mov
shl
lock
jmp
loopne
adc
mov
xchg
cdq
call
dec
sti
xchg
loopne
(bad)
rcl
dec
icebp
push
shl
call
mov
adc
sbb
xchg
mov
rcl
push
jno
mov
cdq
mov
or
jno
xor
inc
mov
cmp
mov
mov
jo
dec
mov
push
(bad)
stos
loopne
fisttp
loopne
repz
loope
fnstcw
mov
xor
adc
sbb
fld1
call
cwde
dec
fcomi
loopne
jnp
inc
fst
call
test
fwait
test
cwde
fldenv
mov
mov
jo
fwait
test
call
dec
jnp
call
ror
loope
dec
stos
fld1
pop
adc
clc
dec
fist
rcl
mov
leave
repz
(bad)
loopne
add
icebp
arpl
and
mov
xor
stc
rcr
mov
stos
mov
enter
call
leave
imul
rol
rcr
mov
cli
shr
fmul
mov
mov
fndisi(8087
test
sti
mov
xchg
icebp
mov
test
lock
(bad)
nop
fld
rcl
rcl
lock
stos
rcl
mov
(bad)
adc
popa
sub
(bad)
rcr
or
fldenv
pusha
ror
cmp
fld1
retf
xchg
xchg
sar
lock
inc
mov
mov
jno
cmp
cdq
jecxz
clc
leave
and
leave
dec
test
fwait
icebp
stos
fimul
fstp
mov
fstp
loopne
mov
loopne
jnp
cwde
fnstcw
xor
cli
dec
test
or
rol
jmp
dec
icebp
dec
mov
cmp
xor
ror
repnz
mov
cli
stos
test
fmul
stc
rcl
stos
and
fisttp
mov
xchg
inc
test
clc
test
repz
stos
repz
js
inc
mov
lock
test
sar
stos
or
(bad)
mov
dec
stos
mov
shl
mov
ror
push
dec
shl
call
pop
mov
mov
enter
call
mov
(bad)
mov
mov
stos
mov
lock
dec
test
mov
stos
jmp
rcl
jecxz
mov
push
pop
sub
push
pop
test
test
(bad)
loopne
adc
jp
push
sub
fnstenv
pusha
retf
fwait
and
inc
repz
mov
sbb
dec
inc
sbb
loopne
rcr
call
mov
cmp
retf
mov
or
popa
retf
f2xm1
shl
xor
stos
ror
shl
test
pop
dec
xchg
mov
jmp
call
pop
and
xchg
sti
test
push
dec
fstp
js
fist
nop
ror
add
icebp
fistp
loopne
xchg
shl
mov
sar
mov
stos
shl
shl
popa
js
stos
cdq
call
inc
xchg
shr
fstp
loopne
fist
mov
dec
mov
leave
call
(bad)
lock
fndisi(8087
nop
test
fist
js
mov
or
inc
jnp
loopne
(bad)
loopne
fcmovnb
mov
ror
shl
enter
repz
mov
mov
loopne
fistp
xchg
shl
mov
add
loope
(bad)
sar
and
repz
xchg
inc
mov
mov
sar
mov
mov
fdivr
dec
mov
rcl
mov
lock
stos
test
dec
stc
(bad)
mov
loope
sar
test
cwde
stc
(bad)
mov
inc
stc
shl
fimul
(bad)
dec
dec
mov
mov
dec
shl
push
test
retf
mov
stc
fistp
mov
xor
mov
mov
xor
cli
dec
test
clc
fst
loop
inc
cmp
mov
test
jo
fild
js
jnp
cwde
fnstenv
mov
mov
fprem
cmp
repz
repnz
test
test
fist
inc
jmp
and
fnstcw
mov
cmp
or
push
adc
clc
dec
jae
call
fnstcw
ror
or
pop
mov
fsubr
jmp
xchg
inc
dec
xor
fnstcw
js
jnp
test
sti
mov
mov
mov
call
loope
jno
rcl
push
adc
dec
jmp
xchg
mov
mov
shl
imul
push
sbb
imul
mov
stos
test
pop
dec
fist
mov
fld
sbb
imul
sbb
cwde
mov
mov
mov
mov
add
mov
js
lock
rcl
mov
leave
call
jns
mov
ret
jns
and
fist
mov
inc
fld
nop
rol
jmp
fwait
test
loopne
fld
sar
or
xchg
mov
sbb
or
icebp
adc
js
arpl
enter
test
jae
call
sbb
and
cdq
inc
repz
mov
rol
and
xchg
xor
ror
repnz
mov
lock
push
sub
rcl
jp
fnstenv
nop
mov
imul
dec
fisttp
nop
mov
jnp
shr
mov
xchg
popa
fld
push
fld
test
mov
fld1
mov
popa
adc
ror
call
mov
xchg
cmp
rcl
and
mov
rcl
repnz
test
push
dec
(bad)
rcr
shl
jecxz
and
pop
mov
dec
test
push
mov
jae
call
rol
js
pop
loope
ror
adc
mov
shr
jb
mov
cwde
push
pop
imul
leave
mov
or
xor
pop
mov
add
shr
js
loopne
jo
mov
mov
js
repz
adc
xor
inc
inc
test
clc
(bad)
jns
add
jnp
inc
inc
cmp
inc
inc
test
jo
inc
mov
inc
pop
jmp
repz
lock
mov
mov
test
fldenv
mov
enter
repz
rcl
mov
xchg
add
xchg
repz
rcl
retf
jns
or
fldenv
inc
dec
add
loope
shr
repz
pop
dec
sti
cdq
loopne
sti
cdq
loopne
xchg
and
inc
(bad)
cwde
(bad)
mov
mov
jecxz
(bad)
jno
mov
js
enter
(bad)
clc
cdq
imul
stc
or
nop
mov
mov
enter
mov
inc
mov
mov
ret
icebp
test
fwait
mov
cwde
icebp
rcl
call
sbb
xor
inc
test
sub
jmp
jnp
mov
mov
mov
ret
fwait
dec
rcl
fcom
pop
mov
inc
inc
and
imul
lock
(bad)
mov
call
call
fldenv
enter
mov
jae
call
jno
mov
sar
call
mov
mov
mov
pop
sbb
pop
mov
test
mov
inc
jae
call
loope
and
inc
xchg
mov
loopne
retf
arpl
push
push
sub
pop
fyl2x
pusha
dec
inc
loope
fstp
mov
fcom
cmp
dec
push
test
lock
or
mov
jmp
stos
mov
jno
test
clc
mov
dec
call
inc
mov
call
cmp
stos
dec
sar
fld
shl
dec
stc
mov
shr
mov
dec
popa
xchg
sar
fwait
loope
fcmovbe
mov
dec
fsincos
jmp
retf
imul
mov
stos
mov
(bad)
sti
sbb
call
fldenv
js
repz
ret
mov
jno
shl
repz
mov
add
adc
sbb
popa
xrelease
js
dec
inc
mov
loop
loope
fstp
ror
cmp
mov
fisttp
mov
stc
dec
or
mov
cdq
ret
bnd
(bad)
rcl
shr
xchg
stos
cdq
lock
repz
dec
repz
rol
mov
push
mov
rep
enter
cmp
jmp
fwait
pop
pop
sub
repz
rcl
jmp
mov
jp
test
cwde
test
imul
dec
jnp
loope
xchg
jnp
cwde
stc
mov
mov
enter
dec
(bad)
lock
ret
(bad)
mov
xor
loopne
jo
stos
and
sar
lock
sti
imul
sar
or
sbb
and
pop
loope
f2xm1
test
shl
mov
loope
inc
jnp
cwde
test
inc
rol
shr
sar
push
cmp
adc
fchs
fstp
push
adc
and
mov
cli
inc
test
xchg
xor
jno
cmp
inc
shl
retf
mov
mov
mov
sub
add
fist
mov
jno
and
jno
xor
jno
mov
rcl
call
(bad)
or
inc
stc
dec
xor
rol
dec
fstp
imul
sbb
inc
stos
jmp
imul
loope
jns
rcl
icebp
inc
jmp
jo
rcr
shl
xor
stc
sti
rol
rol
rcl
mov
xchg
mov
mov
jo
mov
call
loope
shl
dec
mov
loopne
mov
xchg
jo
(bad)
loopne
pop
stc
mov
rol
enter
stos
inc
fyl2x
jo
retf
mov
push
dec
adc
fisttp
lock
fild
js
(bad)
shl
add
rcr
test
sub
mov
call
mov
pop
mov
retf
cwde
leave
sar
call
rol
xor
sar
sar
loope
mov
rcl
mov
fist
js
enter
mov
xor
jmp
dec
test
jo
(bad)
clc
fxch
add
sar
jo
jmp
inc
xchg
rcr
call
jns
sub
stos
mov
test
fcmovne
shr
cmp
inc
mov
enter
cwde
jns
or
fidivr
inc
mov
add
xchg
adc
sbb
shl
enter
fwait
test
call
test
jnp
rol
fld1
mov
mov
mov
jns
ret
fld
cmp
push
leave
pop
jae
test
jo
fcmovnb
dec
test
mov
sbb
fld
lock
dec
test
jo
fisttp
mov
stos
jae
jns
dec
jae
mov
repz
loopne
clc
mov
xchg
shl
clc
and
dec
sar
call
adc
xor
shr
test
clc
rcl
cmp
mov
fnstenv
xchg
fld1
repnz
or
dec
mov
rol
call
mov
mov
dec
pop
dec
cmp
push
mov
cwde
leave
repz
retf
nop
adc
push
adc
leave
sub
jnp
ror
rol
loopne
(bad)
jp
pop
and
adc
push
adc
shl
mov
repnz
add
pop
jae
call
test
mov
xor
dec
pop
fld1
mov
test
loopne
dec
mov
loopne
(bad)
loopne
pop
mov
js
fcmovne
jo
adc
loopne
repz
push
sbb
adc
stc
repz
repnz
cdq
call
mov
fstp
js
jnp
push
mov
fld
cwde
mov
xchg
mov
shl
rcr
xrelease
ror
test
js
js
loop
dec
and
ror
call
mov
enter
xchg
shl
stos
jmp
sar
stos
test
js
fild
js
pop
mov
mov
jno
mov
enter
call
icebp
jmp
mov
stos
mov
or
inc
jmp
jecxz
jmp
mov
pop
sar
imul
retf
sar
call
shr
cmp
mov
(bad)
nop
dec
stos
jmp
lock
mov
mov
(bad)
inc
fstp
nop
stc
adc
enter
rol
cmp
adc
adc
dec
jnp
sar
mov
jo
fild
sbb
mov
jo
cwde
or
mov
inc
test
cmp
test
fcom
jecxz
js
fild
mov
mov
xor
test
add
fstp
rol
dec
rcr
sub
fstp
push
mov
mov
push
mov
xchg
mov
fadd
cmp
repz
jb
mov
mov
fnstcw
cwde
cdq
repz
jo
fisttp
inc
fstp
mov
fldcw
mov
rcl
loopne
mov
loop
pop
fist
nop
mov
(bad)
push
cdq
dec
loope
fstp
dec
jno
xor
inc
jnp
inc
fxch
xor
push
rol
call
mov
fld1
ficom
mov
jo
fist
nop
rol
cmp
mov
ret
stc
stos
cdq
push
(bad)
sbb
cmp
dec
push
cmp
call
mov
cmp
sub
loope
push
mov
mov
enter
call
test
stos
mov
fcomp
stos
mov
lock
mov
cdq
call
rcr
mov
dec
mov
cdq
stos
mov
fisubr
add
(bad)
nop
sar
cwde
shl
shr
mov
and
leave
mov
mov
lock
shl
dec
cdq
adc
cmp
mov
jo
jnp
js
xchg
cmp
adc
or
pusha
loope
icebp
ret
stos
mov
sub
pop
test
test
fistp
nop
inc
mov
mov
fdivr
(bad)
cli
dec
jns
jnp
ret
mov
loope
test
mov
dec
repz
jmp
fist
loopne
imul
stc
mov
js
repz
ret
cwde
mov
call
cdq
mov
mov
jo
(bad)
mov
mov
add
repz
js
clc
mov
mov
xor
jp
arpl
sbb
popa
jmp
rol
xor
xchg
cdq
jnp
test
(bad)
loopne
ret
test
mov
stos
and
mov
inc
add
leave
retf
mov
sti
rol
mov
adc
mov
stc
mov
test
jo
inc
mov
mov
jp
jmp
lock
jecxz
loopne
(bad)
nop
icebp
fstp
js
adc
cmp
(bad)
mov
test
add
shr
cmp
push
test
jo
stos
mov
inc
fild
mov
inc
jnp
nop
fxch
xor
sti
mov
call
fldcw
or
jno
rcr
inc
sti
call
ret
test
cwde
popa
xchg
mov
call
fstp
bound
fnstenv
sub
(bad)
mov
enter
shr
cli
popa
xchg
xor
xchg
stos
jmp
loopne
repz
rcr
mov
cmp
dec
add
shl
loopne
lock
jno
mov
call
ror
call
mov
xor
inc
fld
sti
stc
arpl
cwde
dec
jnp
xchg
adc
jmp
mov
test
clc
fstp
sub
ror
call
jno
add
fst
js
retf
mov
dec
inc
repz
xchg
cdq
call
jns
sar
jecxz
enter
call
pop
mov
mov
loopne
fild
js
add
shl
cwde
mov
retf
and
mov
jnp
dec
cdq
ret
mov
mov
sar
mov
mov
stos
inc
pop
popa
sub
fld
js
fistp
js
fisttp
pop
test
dec
loope
rcr
rol
shl
test
xchg
cmp
jmp
repz
js
jae
call
cdq
repz
mov
mov
push
mov
mov
call
fnstcw
rcr
loope
xor
mov
lock
jnp
cmp
leave
test
xchg
fld1
mov
dec
fld1
mov
repz
mov
push
xchg
xor
ror
call
fchs
shl
jae
clc
icebp
repz
mov
mov
sar
mov
rol
test
js
fstp
js
inc
mov
jmp
js
inc
loope
loope
popa
loopne
arpl
js
shl
enter
jmp
add
mov
test
push
rol
push
cdq
fstp
test
fcomi
rcl
cmp
adc
test
fist
rcl
shr
rcl
cwde
rcr
test
retf
fstp
add
dec
(bad)
rcl
sbb
push
popa
and
stc
(bad)
pusha
push
push
and
shl
pusha
push
mov
mov
js
(bad)
pop
fld
cwde
icebp
adc
jo
jnp
jecxz
retf
leave
jo
repz
jo
pusha
loope
icebp
ret
mov
dec
icebp
stos
test
jo
ret
sbb
fcmove
mov
fst
dec
popa
jno
jb
dec
or
add
fldenv
mov
mov
mov
rcr
mov
repz
dec
or
rol
enter
shl
(bad)
stc
(bad)
loopne
rol
add
and
fwait
call
mov
stos
mov
lock
fist
mov
sti
imul
fldcw
test
dec
test
push
(bad)
xor
mov
jnp
call
fld
and
mov
js
shl
dec
jnp
call
sbb
sub
xor
inc
jnp
mov
inc
jnp
nop
xor
xchg
js
ret
loope
rol
loopne
inc
fiadd
test
fstp
cwde
fldcw
f2xm1
xchg
ret
test
mov
jmp
rcl
jmp
loopne
pop
test
lock
leave
enter
mov
bnd
add
dec
pop
loop
cli
fstp
mov
xchg
fldcw
inc
cmp
mov
(bad)
loopne
imul
icebp
fstp
repnz
jno
inc
shl
test
clc
icebp
dec
mov
mov
shr
inc
xchg
fld1
mov
ret
icebp
jo
xchg
cdq
call
stc
mov
mov
push
jns
shl
rcr
nop
jno
mov
dec
fxch
or
repz
stos
dec
test
dec
dec
fist
inc
mov
pop
mov
cwde
inc
(bad)
js
inc
imul
mov
mov
lock
fnstenv
jo
xchg
icebp
dec
ror
mov
mov
mov
cmp
xchg
stos
mov
jo
fcmovne
mov
xchg
shl
ror
loopne
xchg
test
call
fld1
jmp
jo
mov
test
dec
stc
inc
or
ror
call
popa
mov
rcr
fnstenv
or
mov
jo
ror
mov
xchg
cdq
call
test
push
add
fstp
mov
dec
icebp
dec
test
test
rcl
call
jmp
adc
push
icebp
mov
cmp
pop
adc
call
mov
stos
sub
xchg
stos
repnz
dec
fstp
nop
fnstenv
mov
mov
fndisi(8087
cwde
dec
ret
or
icebp
inc
mov
mov
repz
xchg
fstp
nop
mov
mov
jecxz
inc
loop
icebp
(bad)
retf
add
sbb
fcmovnu
xor
jno
push
add
and
inc
popa
xor
js
sub
arpl
jp
fld
js
jecxz
loopne
dec
cmp
inc
mov
jmp
mov
repz
jnp
enter
js
jnp
rcl
xor
repnz
and
shr
call
push
push
and
shl
loopne
xchg
jnp
mov
shl
dec
sbb
push
dec
fldenv
imul
dec
dec
and
xchg
cmp
xchg
mov
loope
mov
fcmovnb
inc
inc
mov
bound
arpl
pop
and
dec
xor
pop
arpl
jp
jno
jb
inc
mov
loopne
(bad)
jb
jns
jp
shr
loopne
inc
or
mov
test
bound
add
mov
call
loope
fld1
mov
mov
mov
pop
xchg
sar
add
ret
popa
rol
call
test
mov
stos
fisttp
or
inc
add
jns
jmp
sub
or
imul
push
dec
inc
stos
arpl
xor
shl
fiadd
or
rcl
pop
adc
add
pop
push
and
push
sub
shr
ret
mov
mov
pusha
sbb
xor
mov
fcomp
push
sbb
jno
loope
mov
push
xor
shl
pusha
sbb
stos
cmp
push
cmp
sbb
jo
repz
clc
dec
jmp
rcl
stos
and
xor
fldl2t
jo
mov
mov
call
fnop
leave
jo
rcr
shl
mov
clc
mov
enter
repz
mov
mov
inc
jnp
mov
push
cmp
jno
jb
mov
loopne
mov
mov
bound
xor
enter
repz
push
jns
pop
pop
fld
js
mov
mov
nop
dec
ror
mov
repnz
jo
jae
loopne
enter
xchg
cmp
adc
jp
jns
jp
inc
sbb
sti
cdq
nop
inc
fwait
test
bound
adc
mov
push
xor
ret
dec
add
(bad)
loopne
shl
push
fld
enter
mov
cli
jmp
enter
test
mov
shl
leave
dec
jmp
fwait
mov
cmp
add
inc
pop
xor
push
or
jno
push
fcomi
loopne
mov
loopne
sti
loope
jmp
mov
leave
call
icebp
pop
add
retf
add
push
add
jno
and
mov
stos
test
push
xor
dec
sti
mov
mov
imul
test
dec
dec
inc
add
dec
cmp
jp
xor
mov
leave
mov
repz
push
imul
sub
dec
mov
clc
cdq
jmp
dec
(bad)
mov
cmp
fldcw
js
adc
mov
sbb
dec
dec
jae
call
inc
fcmovnb
loopne
ror
inc
sar
mov
bound
push
xor
fnstenv
test
rcr
dec
imul
xor
rol
rcr
stos
cmp
cmp
push
xor
dec
xor
fcmove
mov
fild
enter
ror
fld1
xchg
jnp
retf
jns
imul
adc
shl
and
add
repz
inc
push
test
jo
sti
jmp
call
rcr
ret
and
fst
push
sbb
dec
sbb
jp
mov
or
jns
fld1
repnz
mov
ret
icebp
mov
loopne
dec
xor
shr
cmp
dec
stc
add
mov
inc
sar
(bad)
fcom
(bad)
clc
jns
sbb
dec
sti
mov
push
adc
or
push
xor
cwde
xor
jnp
mov
mov
rol
stos
xchg
call
shr
js
retf
mov
mov
rol
call
stc
(bad)
cwde
icebp
dec
sub
dec
xor
jns
jmp
mov
icebp
inc
loop
push
(bad)
mov
fnstenv
cwde
mov
jecxz
popa
popa
cmp
ror
call
pop
push
cmp
dec
icebp
or
jns
jnp
ret
and
inc
jns
jp
rcl
pop
inc
mov
leave
rol
mov
ret
rcr
jo
adc
sbb
bound
sbb
imul
jns
adc
push
adc
push
arpl
arpl
popa
push
shl
call
rcr
stc
mov
jno
mov
lock
(bad)
mov
fnop
mov
xchg
rcl
js
jae
call
rcl
jb
jno
jb
adc
loop
jns
jp
sar
call
dec
fstp
nop
leave
sub
push
pop
and
fnstenv
push
xchg
rcl
dec
pop
dec
sub
fst
jb
jno
jb
adc
push
inc
pop
fld1
jmp
nop
mov
enter
and
inc
fnstcw
js
jmp
inc
popa
repz
xchg
mov
jo
sar
call
pop
dec
test
mov
and
call
arpl
stos
cdq
clc
mov
clc
add
icebp
sbb
enter
mov
mov
shl
push
dec
cmp
sbb
mov
ror
mov
mov
js
loopne
xchg
fnstcw
mov
cmp
cli
and
test
jnp
call
dec
adc
mov
push
sar
jmp
test
pusha
pop
rcr
call
leave
fcmovnb
mov
rcr
and
shl
stos
jecxz
loopne
push
and
inc
cmp
(bad)
inc
push
shl
jo
fstp
test
jnp
nop
xor
jmp
js
mov
cmp
fst
dec
adc
push
push
push
cmp
dec
inc
or
jno
dec
fwait
ret
loop
mov
dec
retf
test
push
test
lock
mov
fst
jmp
adc
(bad)
js
repz
loopne
and
inc
jmp
call
fld
shl
adc
loop
loope
mov
enter
loopne
adc
or
jo
(bad)
mov
fistp
js
adc
push
dec
adc
and
mov
mov
jmp
popa
popa
inc
ror
mov
js
rol
nop
xchg
sti
fld1
jp
rcr
dec
ret
cmp
loope
mov
enter
arpl
jnp
clc
stc
stos
and
pop
fabs
js
adc
jae
dec
cmp
icebp
dec
mov
test
fistp
rol
nop
inc
inc
test
pusha
imul
xor
add
arpl
ret
fist
loopne
imul
cdq
fwait
mov
dec
fld
ficomp
mov
mov
test
adc
inc
pop
push
sub
fldcw
bound
sub
enter
sti
adc
test
push
sub
inc
dec
xor
jae
call
fstp
js
repz
rol
call
stc
fstp
call
loope
xchg
jnp
mov
arpl
jae
sti
loope
jmp
dec
test
mov
inc
mov
rol
sar
loope
inc
xchg
mov
call
mov
test
loop
fstp
nop
inc
fwait
test
loopne
mov
sti
sbb
mov
push
jmp
jnp
shr
loope
mov
fstp
or
jp
dec
mov
inc
jno
cli
js
fild
shl
imul
dec
and
stos
mov
inc
inc
mov
push
arpl
sub
cwde
sbb
jns
jnp
sti
jmp
jo
push
add
push
jns
jb
mov
cmp
test
arpl
jo
(bad)
js
dec
test
jae
jmp
mov
jns
fld1
xchg
stos
test
mov
mov
pop
loope
icebp
inc
cmp
cli
sti
loop
mov
push
mov
cmp
stos
loop
sbb
test
cwde
test
imul
loope
sub
rol
bound
adc
shl
call
fld
or
stc
fld
mov
mov
and
imul
arpl
mov
js
rcr
call
pop
pop
cmp
dec
sbb
and
test
loopne
(bad)
loopne
jecxz
mov
pop
dec
xor
jp
sbb
push
and
fwait
ror
call
inc
jnp
ret
test
adc
xchg
icebp
mov
call
shl
xor
stc
repz
rol
fxch
test
sar
call
pop
push
mov
push
jns
shl
inc
fstp
cwde
cdq
jnp
mov
inc
mov
mov
pop
arpl
js
rcl
call
shl
jmp
sbb
cli
pop
fnstenv
pop
arpl
and
mov
xor
push
sub
jno
jp
fnstcw
pusha
sti
repz
shl
test
rcl
cwde
mov
test
bound
or
jns
(bad)
mov
shl
mov
nop
fldenv
adc
shl
mov
push
xor
jo
ret
or
(bad)
inc
pop
shl
nop
shl
or
icebp
push
test
repz
dec
jnp
call
icebp
(bad)
mov
fldpi
add
popa
adc
push
adc
adc
adc
bound
sbb
loope
stos
imul
fst
jb
popa
imul
xor
bound
popa
dec
jns
jmp
lock
dec
and
push
pop
add
mov
(bad)
cwde
test
mov
mov
fisubr
adc
repz
loopne
jae
inc
sar
cwde
cdq
shl
cmp
rcl
test
cwde
imul
and
add
popa
mov
call
loope
sub
push
fst
loopne
nop
cmp
repz
fld
mov
shr
pusha
sbb
dec
jns
mov
inc
test
repz
xchg
stos
mov
inc
mov
sbb
test
adc
mov
loopne
(bad)
test
stos
or
sub
jp
test
sub
and
xchg
stos
mov
dec
inc
sub
dec
jae
call
push
fld
mov
xchg
dec
jmp
jo
dec
test
jo
fcmovne
mov
dec
(bad)
loopne
inc
sbb
sti
test
enter
mov
dec
inc
test
cwde
jmp
repz
mov
fstp
shl
loopne
(bad)
jo
mov
xor
sti
shl
rol
add
f2xm1
leave
shl
mov
js
pop
sub
push
fld
js
ror
cwde
rol
jmp
sar
leave
cwde
imul
mov
lock
fld
stos
dec
inc
or
fyl2xp1
inc
inc
jnp
inc
cdq
jnp
xchg
jns
add
imul
inc
repz
or
inc
mov
bound
fld
push
adc
inc
fst
cmp
popa
jp
repz
jb
cmp
shl
jo
repz
test
mov
and
mov
and
fldenv
jp
or
(bad)
(bad)
jno
fld
jo
stos
sbb
fst
inc
jns
stos
xchg
imul
inc
rol
test
cwde
jns
sbb
jb
test
mov
fld
cwde
fldcw
xor
repz
and
fild
loopne
imul
cdq
jnp
mov
rol
and
loope
cmp
call
fsincos
xchg
cwde
mov
repz
pop
test
cwde
shl
loopne
xchg
sbb
cdq
xchg
shl
jno
xor
push
dec
xor
ret
and
inc
jns
jp
call
shl
ror
sbb
inc
push
sbb
jb
test
loopne
fwait
mov
call
fld
jo
repz
push
xor
jno
jb
jns
jp
push
cmp
jb
test
mov
fwait
xor
dec
jnp
mov
dec
jnp
cmp
sar
test
mov
retf
jmp
mov
repnz
loopne
inc
jmp
rcr
loope
jno
mov
adc
test
cwde
popa
repz
nop
icebp
(bad)
adc
mov
pusha
sbb
mov
push
dec
jmp
lock
sub
dec
rcr
xchg
adc
sub
icebp
mov
jno
test
inc
mov
sbb
shl
fld
enter
sar
test
cmp
and
xchg
pop
ror
jno
mov
(bad)
inc
shl
jmp
jnp
fmul
stc
rol
loopne
(bad)
mov
fnstenv
cwde
xchg
mov
dec
stc
fndisi(8087
dec
dec
mov
xor
mov
inc
mov
push
jns
mov
fld1
xor
fnstenv
rol
repz
rcr
loopne
mov
xchg
test
dec
stc
shl
shl
jb
fnstenv
test
shl
dec
dec
mov
call
jns
xor
dec
cmp
sar
pusha
xchg
rcl
lock
loopne
mov
imul
or
push
and
dec
mov
jb
mov
fsubr
dec
test
sar
jae
call
push
fyl2x
ror
test
fwait
jns
xor
xchg
jnp
cwde
fldcw
cmp
ror
jnp
loopne
xchg
sar
inc
add
ror
clc
leave
dec
test
cwde
rcl
bound
sbb
ret
mov
push
mov
fist
shl
test
mov
fnstcw
cmp
adc
adc
jp
xor
mov
js
xchg
mov
mov
xchg
mov
mov
stos
add
push
fldenv
sbb
arpl
sbb
imul
mov
cmp
dec
adc
jo
fwait
test
js
mov
xor
mov
xor
dec
mov
rol
enter
jmp
cmp
inc
icebp
sub
jno
adc
mov
push
xor
arpl
jecxz
inc
mov
fnstenv
cmp
inc
stos
arpl
or
fld
pop
mov
mov
cmp
jae
test
js
mov
fld1
jmp
jmp
sub
push
xor
mov
jo
jnp
cwde
fldenv
jp
sbb
jmp
cmp
(bad)
rol
push
and
fist
pop
push
dec
cmp
fld
mov
dec
dec
mov
cmp
ret
jae
xor
fldcw
enter
jmp
xor
fcmovnb
leave
js
sar
repnz
jo
repz
fnstcw
jo
jnp
nop
test
jnp
xchg
stc
mov
loopne
fldenv
cdq
dec
inc
sbb
dec
sti
test
clc
test
push
cmp
sbb
fdiv
mov
loopne
shl
repnz
or
shl
repnz
shl
jno
add
push
push
mov
cmp
shl
shl
js
dec
mov
jnp
jae
retf
ret
fucomi
mov
fstp
jno
arpl
jb
push
test
js
rol
or
jns
dec
shl
jae
mov
jb
or
pusha
jns
rol
inc
test
and
inc
sbb
dec
sti
mov
test
(bad)
ret
stos
js
push
xor
(bad)
mov
jmp
mov
icebp
push
cmp
push
arpl
js
repz
leave
sar
dec
pop
sar
jmp
and
add
loopne
shl
lock
rol
or
jp
ror
mov
inc
mov
call
rol
jp
jno
push
pop
fidivr
call
pop
fnstcw
leave
imul
stc
icebp
push
icebp
shl
jb
repz
dec
enter
fst
lock
inc
arpl
popa
sub
mov
ror
shl
mov
mov
xor
adc
pusha
rcl
and
push
and
add
shl
adc
sar
jmp
mov
stc
arpl
cwde
test
push
imul
imul
cmp
bound
jo
dec
xor
(bad)
dec
mov
icebp
pusha
inc
mov
adc
stos
arpl
test
test
(bad)
test
dec
sbb
fiadd
jae
sbb
pusha
arpl
jae
dec
sbb
jnp
jo
imul
mov
call
and
mov
loopne
dec
xor
or
mov
call
jnp
xchg
dec
jns
jp
sub
jmp
(bad)
dec
stos
jmp
lock
mov
and
fcomp
fpatan
popa
sub
repz
js
jnp
xchg
pop
fldenv
push
or
(bad)
stc
ret
mov
loopne
fnstcw
retf
mov
cmp
shl
repnz
bound
jp
or
dec
mov
stos
or
xchg
stos
sub
dec
jns
jnp
rcl
cmp
xor
leave
rcl
call
cdq
(bad)
clc
cdq
jae
nop
fnop
mov
push
ror
jo
push
cmp
adc
mov
loopne
inc
add
fstp
fcomi
or
cwde
sub
mov
or
clc
rol
inc
cli
fadd
repz
icebp
pop
and
inc
add
inc
jnp
loop
fnstcw
js
jns
imul
sub
inc
shr
lock
stos
and
fcmovnbe
rcr
sub
pop
and
jecxz
xor
popa
adc
call
inc
inc
or
rol
add
retf
pop
rol
mov
and
test
loopne
dec
xor
fsubr
xor
ror
jo
shr
lock
sbb
loopne
sti
adc
jno
repnz
dec
xor
fcmovb
sub
repz
push
dec
inc
adc
dec
sti
sub
stos
mov
add
fwait
mov
cwde
pop
dec
xor
jns
sbb
sub
stos
ret
inc
inc
test
jecxz
sar
mov
ret
and
test
loopne
inc
add
rcr
mov
push
dec
mov
ret
sar
shr
fld
mov
(bad)
inc
fst
mov
mov
fld
cwde
mov
and
fidivr
rcl
enter
leave
mov
fcmovne
dec
inc
test
pusha
imul
pop
dec
cmp
js
mov
push
rcl
and
jns
jp
sbb
retf
sub
fldenv
jp
fst
pop
mov
shl
mov
(bad)
or
js
jecxz
mov
fcmovnu
mov
retf
mov
loopne
dec
xor
retf
stc
or
push
inc
cmp
dec
mov
push
test
enter
and
add
fldenv
inc
arpl
mov
dec
sti
add
adc
add
fisttp
fdiv
cmp
adc
sbb
shr
icebp
shl
cmp
adc
bound
test
enter
bound
pop
imul
pop
mov
jo
xchg
ror
fsincos
retf
call
sar
jmp
shl
push
mov
call
jns
sbb
xchg
shr
cli
repz
stos
push
cmp
rcl
lock
cmp
ret
sub
inc
fldenv
js
inc
adc
dec
sti
mov
jmp
stos
pop
sti
icebp
pop
icebp
rcl
fidiv
sbb
adc
push
mov
inc
cmp
dec
mov
inc
add
fwait
jmp
cwde
(bad)
mov
retf
cmp
ret
sub
push
adc
inc
jnp
rol
bound
mov
retf
icebp
fst
bnd
add
dec
sub
push
or
jp
cmp
shr
icebp
shl
sti
nop
dec
pop
and
push
dec
xor
sti
mov
bound
shr
mov
test
enter
loop
fstp
js
repz
xchg
stos
stos
dec
fld
mov
and
icebp
ret
test
cmp
add
repz
mov
arpl
fcmovnbe
stos
loope
icebp
mov
loopne
dec
cmp
pop
fistp
loopne
sti
xor
jnp
popa
rcl
and
inc
jns
jp
pop
test
jb
push
cmp
or
rol
lock
mov
leave
fist
adc
imul
adc
test
pop
inc
and
push
and
fdivr
retf
cdq
call
(bad)
sub
fstp
nop
dec
fld
cli
jns
adc
js
push
jae
and
fld
cwde
fst
and
xor
jns
jp
fldenv
and
or
(bad)
stc
ret
or
loope
mov
js
fld
jmp
ret
nop
rcl
loopne
shl
loope
fisubr
enter
sub
inc
cmp
dec
mov
pop
and
push
mov
cmp
icebp
sub
shl
mov
cwde
pop
dec
cmp
dec
sub
dec
push
or
repz
bound
mov
jmp
mov
fwait
jmp
ficom
call
and
imul
pop
retf
mov
or
push
adc
shr
mov
test
mov
pop
mov
sub
fldcw
jb
jno
jae
inc
cmp
dec
adc
xor
push
dec
mov
cmp
xor
pop
arpl
bound
test
enter
jecxz
dec
jmp
fst
rcl
pop
fldenv
bound
or
mov
sbb
dec
shl
push
arpl
call
cmp
dec
inc
adc
dec
sti
and
push
adc
dec
rcl
push
push
dec
cmp
dec
sti
or
imul
rol
rcr
cwde
inc
arpl
jo
pop
and
dec
jmp
push
cli
jnp
jnp
push
imul
imul
fprem
sbb
mov
bnd
sbb
repnz
mov
lock
jb
call
dec
fldcw
jp
push
xor
arpl
loopne
imul
dec
inc
adc
dec
sti
and
imul
pop
dec
mov
and
shl
call
stc
push
or
dec
jno
push
rcl
and
jns
jp
fstp
pop
push
xor
(bad)
mov
pop
dec
xor
pop
dec
cmp
mov
add
cli
sub
fcmovnbe
mov
lock
sti
stos
jecxz
ret
and
stc
ret
jno
dec
sbb
push
dec
jns
jnp
shr
mov
sti
stos
jecxz
sbb
jo
fimul
jmp
or
rcr
mov
cwde
or
sub
inc
inc
test
cwde
fld
loopne
mov
imul
pop
test
pusha
dec
inc
or
ret
ret
dec
mov
jp
stos
jecxz
sbb
jp
fldenv
inc
add
loopne
dec
cmp
fld
test
pusha
imul
clc
sti
mov
fwait
jae
call
dec
fldpi
js
dec
and
pop
fldenv
bound
sbb
fldenv
push
inc
jns
jp
test
sub
fld
mov
rcl
ret
sbb
shl
lock
(bad)
enter
bound
stos
pop
dec
inc
(bad)
inc
mov
loop
fldenv
pop
dec
cmp
jnp
mov
imul
icebp
or
jns
jp
jno
and
mov
adc
jp
rcl
call
fld
test
jo
xchg
test
jecxz
sbb
bound
push
cmp
inc
add
dec
xchg
cmp
rcl
mov
jns
jb
push
cmp
shl
lock
fndisi(8087
rol
cwde
mov
cdq
mov
inc
inc
adc
dec
sti
and
imul
pop
jnp
mov
icebp
icebp
sbb
adc
and
imul
push
imul
loopne
mov
mov
pop
arpl
jns
pop
mov
jo
push
cmp
jno
jb
fnstcw
xchg
pop
add
fstp
pop
inc
arpl
jecxz
dec
cmp
imul
repz
push
sbb
mov
bound
and
pop
mov
jo
(bad)
jp
jns
jmp
cmp
dec
mov
inc
add
dec
mov
repnz
fldenv
jp
push
sub
push
and
pop
dec
xor
jp
sbb
shl
pusha
rcr
and
jno
stos
ret
test
inc
jno
sub
push
xor
dec
fld
push
xor
or
loopne
dec
cmp
jns
stos
dec
pop
dec
cmp
dec
cmp
jae
call
pop
dec
xor
fcmovbe
test
loopne
ror
rol
xchg
shr
ror
shl
and
fist
loopne
(bad)
jb
popa
xor
dec
add
popa
adc
dec
adc
mov
inc
inc
or
pusha
sbb
inc
cmp
rol
cmp
jo
dec
test
leave
ret
loopne
test
enter
js
inc
mov
push
stos
arpl
fsubr
jmp
fsubr
jmp
fsubr
jmp
fsubr
jmp
fsubr
jmp
fsubr
jmp
fsubr
jmp
fsubr
jmp
fsub
rcr
fdiv
out
inc
inc
ss
inc
xor
je
je
fidiv
fcmovbe
sub
mov
push
jno
loop
retf
sub
imul
mov
in
fisub
adc
sbb
ss
dec
inc
mov
sub
sahf
jmp
ret
nop
xlat
scas
retf
fcmovu
pop
jmp
or
fldcw
retf
jo
sbb
je
fs
std
pop
nop
adc
rcr
push
fcom
jmp
ss
inc
ds
les
jle
mov
call
loope
in
mov
dec
fsub
out
dec
inc
cmp
je
jae
inc
xor
inc
jb
(bad)
xor
push
inc
inc
inc
xor
in
jp
(bad)
cmps
jecxz
inc
ss
inc
xor
fild
lock
push
fisttp
ss
inc
cmp
xchg
rol
ja
in
ja
add
stc
je
sbb
je
fs
stc
pop
and
sti
cli
out
test
jmp
mov
fild
ss
inc
xor
xlat
or
(bad)
cld
jmp
sub
jecxz
fsubr
sub
adc
dec
inc
ss
inc
into
ja
shr
rol
out
inc
inc
xor
in
xchg
jne
fdiv
test
ss
inc
mov
into
sar
push
call
jnp
aas
(bad)
popa
rol
out
inc
inc
ss
inc
xor
mov
ss
inc
into
ja
shl
jmp
int3
fisttp
ss
inc
mov
call
jo
xor
cmp
sbb
mov
mov
adc
sbb
ss
dec
inc
xor
jae
rol
ficom
jecxz
fcom
shl
imul
fstp
cmps
jmp
inc
ss
inc
ss
or
shl
xchg
popa
fist
jmp
fisub
popa
fistp
mov
sbb
or
and
adc
inc
jmp
xor
jmp
pop
mov
mov
movs
jbe
lahf
fdiv
stc
mov
or
and
inc
or
push
aad
push
sbb
jle
sti
or
mov
add
xchg
push
pop
fs
dec
xchg
jl
sbb
xchg
xor
jno
pop
mov
add
jl
mov
pusha
xchg
jae
ror
jmp
sbb
adc
add
inc
push
cs
pop
sub
xlat
imul
xor
or
pop
push
(bad)
lods
mov
div
mov
mov
test
pop
gs
pop
fst
mov
adc
jb
rcr
jl
push
test
hlt
fdiv
stos
scas
rcl
xchg
mov
enter
aad
(bad)
lea
fsub
and
or
push
xor
lea
xchg
rcl
pop
movs
cwde
xchg
jge
push
and
pop
pop
aas
lea
sub
or
inc
or
jo
inc
mov
ja
mov
test
and
ret
mov
and
jmp
inc
fisttp
gs
and
loop
(bad)
mov
lahf
xchg
pusha
sar
mov
popa
js
stos
cmp
ss
in
test
pop
jg
into
loopne
retf
ins
loopne
push
lock
scas
dec
pop
adc
ins
js
ss
scas
(bad)
in
scas
(bad)
in
scas
cs
push
lock
scas
dec
sbb
(bad)
in
scas
pop
push
mov
xor
in
scas
(bad)
in
scas
(bad)
in
scas
ds
lock
pusha
ss
in
scas
(bad)
in
scas
out
out
push
lock
scas
(bad)
and
test
in
push
cli
in
scas
(bad)
in
scas
into
out
push
lock
scas
(bad)
in
scas
dec
cli
pusha
outs
(bad)
in
scas
(bad)
in
scas
(bad)
in
scas
scas
out
push
lock
scas
(bad)
in
scas
dec
jp
or
ss
scas
(bad)
in
scas
(bad)
in
scas
dec
dec
cwde
cli
in
ss
in
scas
(bad)
in
scas
outs
rcl
repnz
stos
arpl
bnd
pusha
ss
in
lods
sahf
pop
clc
sbb
lock
stos
pop
cld
sbb
push
push
xor
mov
repz
aas
sbb
ins
jp
adc
jne
cmp
rcr
xor
ins
mov
jp
fidiv
enter
fcomp
dec
xchg
add
aad
pusha
icebp
popf
mov
xor
or
retf
jg
mov
data16
inc
mov
push
and
xlat
xor
jb
cdq
mov
xchg
jo
jno
sbb
cmp
jbe
cmps
fcom
aam
shl
mov
adc
imul
in
adc
test
and
jae
jmp
pop
test
lds
fiadd
jecxz
jmp
pop
pop
xchg
inc
stos
rol
(bad)
or
xchg
popa
fnstenv
(bad)
imul
adc
sbb
xchg
mov
inc
mov
ja
jle
dec
and
jmp
rol
ret
dec
mov
sub
mov
sti
mov
ret
mov
and
mov
std
push
movs
or
rcr
push
repz
jae
inc
stos
out
mov
push
hlt
jbe
ss
xchg
jae
cmp
(bad)
mov
push
jno
lea
sub
loopne
fnsave
jb
push
pop
popa
test
inc
movs
inc
out
lods
aas
or
and
xor
pop
mov
mov
jg
out
push
aaa
add
mov
mov
mov
dec
add
xor
call
mov
fidiv
cmp
mov
aas
xchg
aas
lahf
pop
jmp
shl
ins
popf
mov
fnstenv
jo
jne
jl
adc
mov
(bad)
jno
cmp
jmp
es
lods
or
(bad)
jno
mov
mov
inc
pop
mov
(bad)
jno
mov
inc
(bad)
(bad)
mov
out
into
in
xlat
sbb
(bad)
pop
or
into
aam
sbb
mov
adc
jae
xor
pop
pop
adc
mov
sar
sbb
je
fwait
shl
pop
fnstsw
jno
mov
pop
fs
dec
jns
aam
mov
icebp
pop
ret
xor
fadd
pop
pop
pop
mov
fidiv
jecxz
push
ror
gs
add
push
jns
mov
dec
push
les
jb
mov
inc
jg
cmp
xchg
rcl
mov
xchg
sbb
jp
and
jo
xchg
pushaw
icebp
mov
xor
jne
cmp
in
mov
hlt
loopne
aad
fisub
les
(bad)
out
es
test
mov
adc
or
inc
or
mov
mov
bound
imul
mov
fild
pop
jl
cmps
xor
mov
ret
leave
sar
stos
movs
rcl
xchg
and
out
or
push
(bad)
fst
jne
js
push
and
push
pop
hlt
imul
add
sub
adc
dec
pop
sti
test
dec
shl
jns
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
ret
xchg
jne
ret
xchg
jne
sar
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
ret
xchg
jne
ror
cmp
pop
jbe
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
rcl
cmp
xchg
jne
les
ss
xchg
xchg
pop
mov
jmp
ret
xor
loop
pop
xchg
in
movs
scas
or
push
out
ins
bnd
mov
int3
dec
out
pop
or
movs
push
or
ret
pop
lahf
xchg
jne
bound
out
pop
or
movs
push
or
jl
vmwrite
movs
fwait
adc
push
xchg
aad
jl
jp
pop
mov
jmp
and
or
cwde
call
retf
jmp
movs
pop
or
movs
fisttp
imul
int3
cmps
out
pop
or
movs
pop
or
movs
push
or
adc
and
jno
scas
rol
pop
or
movs
pop
or
movs
xchg
or
push
popa
xchg
adc
cmp
retf
and
icebp
test
out
pop
or
movs
pop
or
movs
push
or
movs
pop
xchg
in
movs
pop
or
movs
pop
or
sbb
mov
ret
(bad)
movs
pop
or
movs
pop
or
add
or
cmp
mov
movs
pop
or
movs
pop
or
movs
push
or
enter
xor
in
movs
pop
xchg
in
movs
pop
or
movs
push
or
adc
or
(bad)
pop
imul
push
or
aam
or
(bad)
pop
imul
push
or
movs
icebp
or
sub
scas
jmp
pop
or
movs
pop
or
movs
pop
or
movs
mov
push
mov
in
pop
or
movs
pop
or
or
or
movs
pop
imul
pop
or
movs
push
or
ror
jns
clc
mov
add
push
jae
pop
and
pop
or
movs
push
or
test
movs
and
fldenv
gs
pop
xchg
in
movs
push
or
mov
push
or
movs
jmp
pop
jl
clc
mov
xor
jb
dec
(bad)
(bad)
std
xor
outs
ret
outs
jp
rol
jbe
add
cmp
ja
ja
aad
xchg
cmp
in
pop
or
movs
hlt
or
jle
mov
add
je
mov
jge
inc
fiadd
ret
mov
test
lock
jp
test
mov
rcr
xor
jmp
mov
jno
xchg
fidivr
inc
stos
add
mov
fidivr
lea
cli
xchg
aad
push
retf
ins
cs
imul
int3
out
bound
fisubr
mov
dec
adc
bound
push
sub
or
fisttp
cmp
and
(bad)
jbe
outs
rcl
sbb
mov
ficomp
lea
or
mov
inc
xor
jmp
or
je
mov
mov
dec
sub
jge
or
mov
and
sahf
or
pop
dec
test
mov
add
push
(bad)
stos
loopne
mov
xor
inc
retf
mov
nop
lods
and
sbb
stos
mov
mov
scas
push
or
dec
aad
push
xchg
sbb
cmp
mov
cdq
cld
into
shl
arpl
mov
xchg
outs
and
jge
pop
movs
(bad)
loopne
jne
fidiv
mov
(bad)
jb
mov
stos
inc
xor
jl
jns
lea
xor
hlt
and
aad
pop
daa
jmp
cmps
sub
hlt
jb
jnp
inc
mov
adc
not
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
data16
xlat
pop
idiv
push
xor
seta
outs
push
(bad)
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
outs
(bad)
xlat
pop
ins
mov
push
ins
(bad)
xlat
xor
(bad)
sub
mov
les
aam
ins
pop
aam
ins
not
int3
outs
xchg
pop
ins
data16
ins
(bad)
xlat
xor
(bad)
sub
mov
les
aam
ins
pop
aam
ins
not
hlt
ins
(bad)
aam
outs
outs
aam
ins
(bad)
xlat
jl
not
adc
xchg
aam
ins
mov
cld
ins
data16
ins
outs
aam
ins
(bad)
je
outs
aam
ins
data16
ins
(bad)
xlat
xor
(bad)
sub
mov
les
aam
ins
pop
aam
ins
not
int3
outs
xchg
pop
ins
data16
ins
(bad)
xlat
in
xchg
int3
ins
(bad)
aam
ins
(bad)
(bad)
je
data16
outs
outs
aam
outs
(bad)
xlat
pop
push
out
outs
mov
xlat
sbb
(bad)
and
shl
dec
rcl
cmps
sahf
rcl
pop
bound
inc
shl
dec
sar
mov
mov
in
xchg
jnp
mov
retf
repnz
repnz
dec
mov
dec
repnz
cli
bound
push
call
repnz
int3
addr16
pop
bound
and
repnz
dec
inc
lahf
addr16
ins
std
fistp
test
pop
cmp
out
in
pop
fadd
repnz
cmc
bound
jp
sti
add
leave
inc
shl
dec
shl
dec
sar
sub
in
push
fisub
push
pop
imul
(bad)
repnz
repnz
(bad)
(bad)
fstp
test
stc
xchg
push
push
dec
shl
dec
sar
bound
shl
dec
sar
fstp
test
stc
xchg
push
push
dec
shl
dec
sar
bound
inc
shl
dec
shl
dec
sar
fstp
test
stc
xchg
push
push
dec
shl
dec
sar
bound
shl
dec
sar
fstp
test
stc
xchg
push
push
dec
shl
dec
sar
retf
mov
(bad)
fcmovnb
repnz
inc
sar
fstp
test
stc
xchg
push
push
dec
shl
dec
sar
retf
test
repnz
inc
shl
dec
sar
dec
sbb
fistp
daa
repz
out
pop
repnz
inc
shl
dec
sar
retf
sub
(bad)
fcmovnb
repnz
inc
sar
sti
dec
out
ret
inc
(bad)
aad
repnz
inc
shl
dec
sar
sti
ins
out
ret
inc
(bad)
aad
repnz
inc
sar
sti
or
xchg
fcmovnu
sub
push
pop
push
jb
in
add
sbb
sti
aad
call
repz
fistp
jge
repz
sti
out
pop
repnz
repnz
mul
pop
or
fsub
pop
ss
(bad)
push
pop
popa
test
ins
aam
push
jp
ja
in
add
or
(bad)
jne
mov
retf
repnz
repnz
mov
pop
(bad)
test
bound
repnz
mul
pop
push
out
push
addr16
retf
mov
cli
fistp
jle
or
xlat
add
call
bound
inc
shl
dec
shl
dec
shr
jmp
jle
fcomp
jle
pop
repnz
repnz
repnz
pop
pusha
jmp
outs
aam
jl
inc
repnz
dec
shl
dec
sar
mov
pop
jmp
repz
cli
fistp
jge
pop
imul
sub
sar
aad
int3
scas
adc
bound
sar
dec
push
push
dec
fldenv
and
lahf
stc
dec
cdq
push
push
dec
shl
dec
shl
dec
sar
dec
fldenv
inc
shl
dec
shl
dec
shl
ss
jle
addr16
(bad)
hlt
add
ins
cs
inc
ins
ins
push
fdiv
mov
es
ret
add
lahf
push
pop
bound
dec
sar
cmp
loop
fcmovnb
repnz
inc
sar
fstp
inc
shl
dec
shl
dec
sar
sub
neg
ficomp
jns
in
push
dec
shl
dec
shl
cmp
mov
out
fisub
cli
and
in
loop
fcmovnb
repnz
inc
shl
retf
test
int
adc
fild
(bad)
int3
push
push
and
push
jecxz
xchg
std
xchg
daa
dec
fcmovu
pop
ins
leavew
test
into
lods
je
rcr
push
cmc
daa
pop
xchg
in
mov
xchg
mov
mov
push
pop
bound
inc
sar
dec
nop
(bad)
popa
fistp
inc
sar
dec
jnp
popa
jnp
loop
fcmovnb
repnz
inc
sar
cmp
loop
fcmovnb
repnz
inc
sar
dec
nop
data16
inc
shl
dec
shl
dec
jnp
bound
bound
sar
dec
rcr
fsub
dec
shl
dec
push
(bad)
mov
bound
repnz
cld
(bad)
jmp
inc
into
fadd
repnz
bound
pop
pusha
jmp
(bad)
mov
bound
cli
bound
(bad)
hlt
dec
shl
dec
sar
retf
xchg
loop
fcmovnb
repnz
inc
shl
dec
sar
dec
sbb
jge
pop
outs
ss
inc
outs
mov
fistp
jge
repz
out
pop
repnz
repnz
std
(bad)
fcomi
loop
fcmovnb
repnz
inc
shl
dec
sar
dec
inc
jbe
fistp
jp
shl
dec
sar
fwait
scas
in
(bad)
aad
aas
jge
repz
jge
repz
out
pop
repnz
repnz
sti
(bad)
fisttp
repnz
inc
sar
dec
inc
jbe
fistp
jp
sar
dec
shr
fisub
test
stc
fldenv
xchg
stc
pop
xchg
push
push
dec
shl
dec
shl
dec
rcr
fisub
xlat
pop
(bad)
dec
cli
cli
dec
shr
fisub
xchg
fbstp
xlat
movs
int3
call
popa
shl
es
shl
dec
pusha
dec
pop
pop
popa
scas
and
repnz
cli
bound
fldcw
xchg
pmulhw
xlat
sbb
stc
aad
call
pop
lahf
stc
pop
xchg
push
push
dec
shl
dec
rcr
sub
(bad)
mul
jmp
and
push
jne
clc
fistp
xchg
imul
daa
inc
into
add
pop
and
arpl
sbb
rcr
xor
lea
fdiv
mov
(bad)
xlat
rcr
push
retf
add
fimul
lods
xor
jle
jmp
cmps
jmp
cli
jbe
mov
inc
and
bound
rcr
xlat
call
sar
mov
rcl
sbb
or
aam
fnstcw
fmul
jb
dec
xchg
and
cmp
xchg
clc
jp
dec
sbb
xchg
add
pop
mov
out
or
in
sub
xchg
mov
push
test
imul
sub
dec
aaa
xor
pop
movs
fld
xor
idiv
data16
ds
mov
fadd
inc
out
sti
mov
pop
(bad)
cmps
xor
(bad)
(bad)
outs
adc
xchg
jo
xchg
out
cli
dec
xchg
popa
add
pop
dec
fst
stos
pusha
shr
ins
mov
shr
sar
inc
or
add
mov
outs
ror
push
push
xor
mov
adc
jbe
xchg
sub
jmp
stc
mov
inc
jecxz
xor
jmp
mov
mov
dec
fild
xchg
xchg
xor
mov
sub
lods
jmp
stos
sub
and
cdq
mov
out
ss
out
ss
out
not
mov
ja
xor
call
test
mov
sub
iret
jno
stos
sub
cmp
out
ss
out
mov
or
cmps
xor
ja
xor
out
cmps
jmp
stos
sub
and
cdq
mov
out
ss
jmp
stos
sub
ds
out
ss
out
ss
out
mov
mov
cmp
mov
pop
ss
iret
xor
out
ss
in
xchg
sub
xor
out
ss
out
lods
psubsw
stos
fcmovne
clc
stos
cwde
pop
and
jae
cdq
mov
out
ss
sti
out
ss
inc
xor
out
ss
call
mov
cdq
jnp
xchg
xchg
fist
lods
mov
ret
cmp
or
lods
mov
jmp
lods
mov
xor
int
(bad)
movs
call
xor
sub
rol
sbb
mov
call
fild
lods
mov
shl
sar
sbb
fsubr
clc
push
repz
xchg
mov
inc
sti
xchg
jno
mov
rcr
inc
gs
mov
jmp
stos
adc
mov
jns
aam
jno
repz
xor
jmp
ret
jl
dec
fldenv
push
movs
adc
push
stos
(bad)
mov
fdiv
fbld
loop
test
inc
ret
outs
jbe
jmp
out
push
cs
push
jmp
stos
imul
fcmovnbe
jnp
sbb
movs
fcomp
sub
and
pop
xchg
mov
ret
imul
cs
add
aad
in
add
xchg
jl
xchg
in
sub
mov
sub
push
pop
push
dec
xor
int3
mov
mov
stos
jo
fidivr
inc
mov
mov
inc
fild
inc
in
popa
inc
mov
push
in
gs
xchg
and
inc
inc
mov
stc
ins
mov
push
push
pop
enter
or
mov
dec
cmp
nop
neg
ins
std
inc
jmp
xor
or
cmc
or
sbb
mov
gs
fs
sbb
mov
sbb
adc
mov
sbb
mov
into
jns
add
dec
fmul
imul
sub
gs
or
sbb
int3
xchg
sbb
fcomp
(bad)
jb
sbb
ins
xchg
sbb
cmp
xchg
sbb
sbb
mov
pushf
gs
xchg
sbb
mov
xchg
gs
xchg
sbb
mov
sbb
mov
mov
call
mov
sbb
mov
jae
mov
sbb
mov
sbb
mov
sbb
mov
jae
mov
sbb
mov
sbb
mov
sbb
mov
and
div
xchg
sub
sbb
mov
sbb
mov
sbb
xor
aam
enter
jp
xlat
outs
js
jg
rol
pop
cmc
sbb
sbb
mov
sbb
mov
mov
and
dec
xor
cmp
pop
dec
in
ror
jg
sub
sbb
mov
sbb
mov
sbb
mov
jo
cmp
add
adc
add
in
loope
dec
imul
add
js
mov
dec
outs
xor
das
sub
bound
clc
ss
idiv
adc
inc
jmp
inc
or
daa
fsubr
adc
inc
jmp
xchg
call
adc
inc
jmp
jbe
lea
fsubr
adc
inc
jmp
in
je
daa
fsub
adc
inc
jp
mov
out
daa
fsubr
adc
inc
dec
mov
mov
out
daa
inc
jmp
inc
jp
mov
out
daa
fsubr
adc
inc
jmp
inc
jp
daa
fsub
adc
inc
jmp
inc
mov
fdiv
fild
adc
fsubr
adc
inc
jmp
inc
fcmovbe
fcmovnu
pop
leave
mov
jmp
adc
cmp
fsub
adc
inc
jmp
inc
out
adc
cwde
out
adc
inc
jmp
jmp
daa
fsub
adc
inc
jmp
inc
jp
mov
out
daa
fsubr
adc
inc
dec
mov
mov
out
daa
inc
jmp
inc
jp
mov
out
daa
inc
jmp
inc
jp
jnp
jle
mov
jae
lea
inc
jmp
inc
push
mov
jae
lea
inc
jmp
fdivr
daa
pusha
loop
daa
inc
jmp
xchg
call
adc
inc
dec
cmc
fwait
adc
mov
fdiv
dec
(bad)
je
(bad)
fsave
mov
xchg
sti
ja
mov
mov
adc
cwde
out
adc
inc
ficom
and
in
daa
inc
jmp
inc
push
fwait
(bad)
fdivr
iret
dec
iret
daa
and
daa
inc
jmp
inc
ret
test
adc
inc
jmp
and
inc
mov
dec
iret
daa
and
das
inc
jmp
pushf
loope
daa
fsubr
adc
xchg
lods
retf
clc
ja
mov
fsubr
ficomp
movs
jp
cdq
fiadd
fwait
cld
jg
mov
out
daa
inc
jmp
inc
jp
mov
out
daa
fsubr
adc
inc
jmp
inc
jp
mov
out
daa
inc
jmp
in
adc
and
or
aam
cmc
xchg
rol
fiadd
fsub
adc
inc
push
mov
jae
lea
inc
jmp
inc
jp
imul
(bad)
fwait
das
ror
fdiv
mov
fdivr
mov
aad
pop
and
in
das
inc
jmp
fcomip
ja
fadd
mov
daa
inc
jmp
inc
pop
scas
sti
test
mov
mov
sti
push
neg
fcom
mov
pushf
jmp
adc
inc
jmp
into
adc
mov
(bad)
mov
fdiv
mov
xchg
arpl
dec
(bad)
daa
pusha
out
daa
inc
jmp
inc
call
inc
jmp
clc
loope
daa
inc
jmp
inc
jmp
inc
cmp
push
cmp
adc
inc
jmp
and
adc
jmp
cmp
adc
jmp
lock
daa
inc
jmp
inc
jp
daa
pusha
loop
daa
inc
jmp
xchg
pop
icebp
mov
jle
xchg
fsubp
adc
cmp
adc
inc
jmp
call
jmp
lock
das
inc
jmp
clc
out
adc
inc
jmp
inc
jb
daa
fsub
adc
inc
jmp
nop
loop
sub
mov
das
inc
jmp
mov
jmp
lock
and
(bad)
nop
loop
daa
inc
jmp
inc
cli
adc
and
das
daa
nop
loop
daa
inc
jmp
pop
jle
jecxz
jl
les
cli
xchg
and
adc
daa
inc
jmp
xchg
lods
retf
clc
ja
mov
fsubr
ficomp
movs
jp
xchg
fisub
mov
pop
into
adc
fwait
pushf
data16
xor
test
pushf
jmp
adc
inc
jmp
and
in
and
adc
cmp
fsub
adc
inc
jmp
inc
fistp
neg
out
adc
call
sbb
daa
inc
jmp
inc
jmp
inc
sub
daa
inc
jmp
inc
dec
iret
daa
nop
loop
daa
inc
jmp
lock
and
out
daa
nop
loop
daa
inc
jmp
mov
jl
adc
jle
push
xor
out
sub
inc
fcmovbe
fcmovnu
push
lods
mov
jmp
adc
inc
jmp
and
in
daa
inc
jmp
inc
jmp
inc
jmp
fsubr
adc
inc
mov
jl
int3
pushf
mov
jbe
lea
fsubr
adc
inc
jmp
inc
jp
mov
out
daa
inc
jmp
in
lea
fsub
adc
inc
dec
mov
daa
fsub
adc
inc
sub
mov
call
sar
mov
pushf
jmp
adc
inc
jmp
inc
fcmovbe
fcmovnu
ds
mov
jmp
adc
and
in
and
aam
cmp
fsub
adc
inc
jmp
(bad)
xor
daa
inc
jmp
inc
cmp
daa
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
cwde
out
adc
inc
cli
adc
and
out
daa
nop
loop
and
jmp
jo
mov
rol
(bad)
call
out
adc
inc
jmp
inc
fcmovbe
fcmovnu
push
retf
bound
daa
inc
jmp
inc
mov
arpl
dec
(bad)
daa
pusha
out
daa
inc
jmp
inc
cmp
daa
inc
jmp
inc
retf
test
adc
inc
jmp
adc
mov
sub
adc
adc
inc
jmp
inc
pop
outs
daa
nop
jmp
inc
sbb
daa
inc
jmp
sbb
adc
inc
jmp
in
je
daa
fsub
adc
inc
jmp
in
lea
fsub
adc
inc
jmp
inc
jp
mov
out
daa
inc
jmp
inc
dec
lea
fsub
adc
inc
jmp
inc
dec
or
aam
cmc
xchg
rol
call
out
and
pop
outs
daa
sub
daa
inc
jmp
xor
adc
inc
jmp
inc
push
mov
and
movs
jo
jne
mov
in
adc
inc
jmp
nop
jmp
inc
cmp
daa
clc
out
daa
inc
jmp
nop
jmp
inc
jmp
or
adc
inc
jmp
inc
or
daa
fsubr
adc
inc
sub
sub
inc
xchg
push
jbe
adc
sbb
adc
inc
cmp
inc
jmp
inc
jmp
cwde
out
adc
inc
cmp
das
inc
sbb
jnp
mov
jae
lea
inc
jmp
cmp
clc
jmpw
sbb
mov
pop
cmps
and
xchg
enter
in
daa
call
jmp
sub
adc
cli
ja
inc
les
inc
jmp
xlat
inc
mov
mov
out
daa
inc
jmp
inc
jmp
cmp
adc
fsubr
adc
inc
jmp
inc
dec
retf
mov
mov
pop
(bad)
jp
xchg
ds
inc
sub
pop
into
adc
sbb
xor
inc
fbstp
lahf
dec
adc
daa
inc
jmp
pop
dec
(bad)
daa
pusha
out
daa
inc
jmp
cmp
ficom
push
neg
dec
retf
mov
adc
fsubr
adc
mov
jmp
adc
call
and
adc
cli
cmp
jmp
adc
inc
jmp
fisttp
daa
push
jmp
inc
dec
xor
mov
jbe
daa
fsub
adc
inc
jmp
loop
and
jge
jnp
jb
mov
out
daa
inc
jmp
inc
dec
test
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
jbe
in
fsub
pushf
mov
jp
mov
xor
mov
fild
(bad)
daa
push
jmp
inc
pop
mov
inc
jmp
inc
mov
mov
mov
jecxz
es
jmp
fsub
adc
inc
jmp
inc
call
div
daa
fsub
adc
jmp
pop
fcom
daa
call
dec
mov
mov
jecxz
daa
inc
jmp
inc
fimul
and
sbb
les
inc
jmp
idiv
daa
fsub
adc
and
sbb
les
inc
jmp
ret
fmul
dec
and
cmp
fsubr
adc
inc
jmp
into
adc
stos
stc
jle
xor
jae
daa
fsub
adc
inc
jmp
inc
dec
mov
repz
push
mov
mov
mov
out
daa
fsubr
adc
inc
dec
mov
xor
lea
fsub
adc
inc
jmp
aaa
and
mov
mov
push
mov
mov
out
daa
fsubr
adc
inc
cli
xchg
and
je
out
lock
out
lock
arpl
je
fdivp
arpl
sbb
push
mov
and
in
daa
inc
jmp
inc
jp
daa
fsub
adc
inc
jmp
inc
call
fistp
retf
xchg
mov
fsub
adc
inc
jmp
inc
jmp
inc
push
mov
call
fcom
(bad)
jmp
es
xlat
es
hlt
fild
adc
inc
jmp
inc
retf
fwait
loope
daa
and
adc
inc
call
fdivr
jns
(bad)
fidivr
ss
inc
fst
lea
xor
mov
fdiv
mov
mov
adc
inc
jmp
inc
mov
repz
daa
inc
jmp
inc
dec
lea
fld
cmps
les
mov
fadd
mov
jnp
ss
mov
fbld
mov
fbstp
ret
xchg
daa
and
adc
jmp
xor
adc
inc
jmp
hlt
je
daa
fsub
adc
jmp
adc
in
outs
dec
xchg
test
fwait
jae
stos
mov
mov
mov
and
adc
inc
jmp
xor
jmp
mov
(bad)
sub
and
sbb
les
inc
jmp
inc
pop
mov
fbld
mov
fild
int
mov
adc
inc
jmp
ss
jne
(bad)
or
and
sbb
les
inc
jmp
inc
sub
mov
mov
inc
pop
xchg
div
ja
fdiv
adc
inc
jmp
lock
daa
inc
jmp
sbb
jns
daa
call
jmp
inc
mov
jnp
adc
inc
jmp
inc
push
mov
pushf
and
mov
fbstp
mov
daa
and
adc
inc
jmp
mov
mov
fst
pop
and
in
daa
inc
jmp
(bad)
jecxz
daa
fsubr
adc
inc
jmp
inc
pop
je
je
mov
sub
or
inc
mov
fwait
loope
daa
inc
jmp
inc
pop
bound
fwait
jbe
jmp
es
iret
es
hlt
fist
adc
inc
jmp
inc
cmp
mov
fbld
mov
fbstp
inc
push
retf
xchg
daa
and
adc
inc
jmp
fwait
jmp
adc
inc
mov
daa
lock
adc
inc
jmp
mov
adc
cli
iret
aam
xor
jmp
mov
jmp
and
call
sti
xchg
daa
and
adc
mov
lea
mov
fdiv
pop
and
in
daa
inc
jmp
lea
adc
inc
jmp
inc
call
(bad)
adc
mov
xlat
out
fdiv
adc
and
jmp
and
daa
inc
jmp
inc
jp
mov
jbe
in
fsub
xchg
mov
out
adc
cmp
adc
inc
jmp
inc
jp
mov
jno
(bad)
daa
mov
adc
inc
or
imul
lea
inc
jmp
inc
jmp
shr
daa
inc
jmp
inc
sub
daa
inc
jmp
adc
push
fcom
sbb
loope
lea
fsub
adc
inc
fcmovbe
rol
sbb
push
push
out
adc
inc
jmp
inc
fcmove
daa
sub
daa
inc
jmp
inc
stos
ret
in
adc
inc
jmp
mov
ja
daa
fsub
adc
inc
jmp
inc
push
out
call
cdq
inc
inc
fcmove
daa
sub
daa
inc
jmp
inc
call
inc
jmp
inc
sbb
fwait
jae
stos
mov
and
out
cmp
daa
lock
sub
lea
fsub
adc
inc
push
mov
and
out
cmp
daa
lock
daa
inc
jmp
inc
jp
mov
out
sub
popa
mov
clc
jmpw
pop
dec
mov
js
daa
fsub
adc
inc
or
daa
lock
daa
inc
jmp
cwde
out
adc
inc
jmp
inc
mov
sub
adc
xor
daa
inc
jmp
inc
jmp
hlt
out
daa
inc
jmp
inc
jmp
cwde
out
adc
inc
jmp
inc
sub
daa
and
sub
jmp
sub
daa
inc
jmp
inc
mov
adc
daa
inc
jmp
cmp
sti
jbe
dec
ret
xchg
adc
fsubr
adc
mov
cmc
xchg
sbb
lea
fsubr
adc
inc
call
fdiv
mov
fistp
jmp
out
adc
fsubr
adc
inc
cmp
daa
inc
jmp
inc
sub
xchg
pushf
loope
daa
fsubr
adc
inc
jmp
lock
daa
inc
jmp
inc
jp
mov
loope
das
fsubr
adc
inc
retf
and
adc
inc
jmp
test
cmp
mov
jecxz
daa
fsubr
adc
inc
jmp
inc
cmp
daa
jo
adc
inc
jmp
inc
jp
mov
jmp
daa
fsubr
adc
inc
jmp
out
jle
jnp
pop
lea
ja
cmp
mov
test
mov
push
sub
jecxz
mov
mov
push
jmp
arpl
out
cmp
daa
inc
jmp
sub
daa
inc
jmp
inc
jp
je
fcomp
pop
ds
daa
inc
jmp
inc
jmp
inc
mov
je
repz
adc
daa
inc
jmp
inc
push
mov
and
movs
jo
jne
mov
in
adc
inc
jmp
inc
pop
dec
daa
nop
jmp
inc
jmp
inc
jmp
inc
pop
iret
sbb
(bad)
and
in
pop
outs
out
cmp
sub
lea
fsubr
adc
inc
jmp
inc
call
fistp
retf
xor
daa
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
ficomp
pop
pop
fxch
sti
and
mov
loop
daa
inc
jmp
inc
mov
and
fmul
sti
and
mov
in
daa
inc
jmp
mov
lea
inc
jmp
(bad)
jne
ja
mov
fsub
adc
inc
jmp
fcmovnu
jne
ja
retf
jbe
daa
fsub
adc
inc
jmp
inc
or
jnp
jns
mov
out
daa
inc
jmp
cmp
pop
popaw
fstp
lea
inc
jmp
inc
push
mov
aam
daa
sub
sub
mov
daa
inc
jmp
nop
loop
daa
inc
jmp
inc
push
mov
jmp
daa
fsubr
adc
inc
jmp
adc
inc
jmp
rcr
into
daa
sub
daa
inc
jmp
lock
sub
inc
xchg
mov
jge
daa
fsub
adc
inc
jmp
enter
jo
adc
inc
jmp
inc
jp
mov
out
daa
inc
jmp
inc
jp
mov
jecxz
daa
fsubr
adc
cmp
pop
xchg
adc
cwde
out
adc
inc
dec
mov
daa
fsub
adc
inc
jmp
into
adc
cmp
pop
inc
ja
mov
fsubr
mov
inc
jns
mov
outs
sar
das
jo
loopne
inc
aad
retf
jb
mov
inc
jns
cld
sub
bound
push
sub
xchg
imul
push
push
shl
rol
retf
dec
repz
mov
jns
imul
sbb
jl
neg
xchg
cmp
jbe
inc
fiadd
ret
or
mov
inc
in
shr
and
push
in
fst
or
mov
inc
stos
scas
rcl
nop
add
fwait
cmc
mov
pushf
adc
aam
movs
and
les
lea
js
mov
mov
xchg
jle
xchg
(bad)
ins
icebp
pop
xchg
inc
add
pop
xchg
add
jo
add
xor
inc
movs
mov
out
sahf
sar
and
mov
fnstenv
lea
push
sub
xor
inc
dec
neg
xchg
inc
dec
cmp
mov
mov
jnp
imul
inc
adc
mov
jbe
xchg
mov
mov
in
mov
in
mov
stos
inc
fisttp
in
(bad)
mov
and
mov
test
and
jnp
dec
arpl
or
pand
sub
push
cmp
pop
fimul
or
cmp
pop
push
stc
adc
pop
mov
push
cmp
pop
push
xor
xchg
xor
(bad)
and
push
cmp
pop
or
cmp
pop
push
cmp
adc
cmp
fld
aas
cwde
xchg
test
or
cmp
pop
push
xor
cmps
mov
mov
xchg
cmp
pop
push
cmp
pop
push
xchg
adc
xchg
test
cdq
or
mov
push
cmp
cmps
hlt
mov
sbb
mov
add
cmp
(bad)
push
cmp
add
dec
test
neg
push
cmp
push
cmp
pop
push
clc
adc
push
cmp
pop
push
cmp
pop
fimul
pop
push
cmp
push
xor
cmps
leave
push
retf
add
xor
pop
push
fwait
adc
and
ret
pop
push
cmp
pop
push
xor
pop
push
pushf
adc
sar
femms
xor
pop
push
fwait
adc
xor
ret
pop
push
cmp
pop
push
xor
pop
push
movs
adc
or
adc
push
mov
pop
push
cmp
cmps
mov
xchg
xchg
leave
pop
mov
push
cmp
pop
push
cmp
ja
push
push
ret
pop
add
cmp
pop
push
cmp
pop
inc
lods
pop
xchg
xchg
cmp
pop
push
cmp
pop
push
addr16
push
and
cmp
pop
push
cmp
pop
push
aaa
adc
mov
pop
push
cmp
pop
push
aas
adc
cmps
clc
adc
or
cmp
pop
push
aaa
adc
cs
adc
cmps
clc
adc
or
aaa
adc
cs
mov
pop
push
cmp
pop
push
cmp
pop
mov
out
push
adc
mov
inc
xchg
aam
setbe
mov
pop
mov
push
cmp
mov
xchg
mov
outs
test
ror
and
push
cmp
push
cmp
pop
push
cmp
adc
push
aaa
adc
ds
adc
push
cmp
pop
push
cmp
daa
mov
ret
pop
push
cmp
pop
push
cmp
cmps
leave
or
push
cmp
add
xor
pop
push
pushf
adc
sar
ret
pop
push
xor
pop
push
fwait
adc
xor
rol
push
xor
pop
push
pushf
adc
sar
pop
push
cmp
pop
push
cmp
pop
push
repnz
hlt
movs
xchg
pop
xchg
test
cmp
lods
mov
call
mov
lods
xchg
xchg
mov
outs
sbb
xchg
adc
sub
(bad)
sbb
push
enter
jb
and
mov
fsubr
mov
mov
jo
pop
ficom
sbb
jb
mov
jae
mov
mov
or
inc
inc
loopne
daa
inc
jmp
inc
mov
jb
mov
jmp
inc
dec
sub
fimul
lods
mov
shl
adc
mov
sti
jmp
and
mov
mov
scas
pop
mov
test
lods
inc
test
pop
movs
sbb
lock
dec
xchg
fs
(bad)
not
jb
aam
add
test
fidivr
sbb
fld
mov
je
ja
add
jecxz
jle
out
(bad)
rol
jbe
mov
and
inc
add
sub
mov
aad
fiadd
push
adc
ror
push
push
jp
jnp
xchg
push
imul
jne
cmp
dec
sub
in
scas
or
shl
call
xchg
and
(bad)
or
call
jbe
(bad)
fcom
xor
mov
jb
jg
xor
aad
fadd
shl
inc
xor
in
mov
push
in
mov
sub
movs
lock
aad
xchg
xchg
ja
fwait
cmp
dec
and
ds
in
push
jp
sbb
movs
movs
add
test
imul
sti
loopne
add
mov
pushf
mov
or
or
sti
or
sti
xchg
cwde
fld
or
sti
add
xchg
push
cwde
mov
inc
sti
(bad)
xchg
sub
jns
dec
in
sti
or
sti
or
daa
jnp
sub
or
sti
add
sti
aam
xchg
push
fwait
loope
les
dec
sti
or
inc
sti
mov
xchg
push
pushf
loope
enter
or
sti
or
sti
lds
mov
mul
sub
inc
sti
add
pop
mov
clc
(bad)
fwait
pushf
test
fist
in
outs
in
or
leave
lahf
mov
out
sti
or
sti
add
dec
cmp
and
or
sti
add
dec
repz
cwde
pushf
sbb
addr16
dec
sti
or
sti
add
dec
sar
cwde
pushf
sbb
addr16
dec
sti
or
sti
add
dec
adc
cwde
pushf
sbb
addr16
dec
sti
or
sti
or
sti
stos
jg
popf
fs
fbld
sbb
in
sti
or
sti
or
jns
daa
fwait
out
cwde
or
inc
sti
or
sti
stos
jg
cwde
push
sbb
inc
sti
or
or
pushf
out
fisttp
add
inc
sti
adc
addr16
cwde
mov
inc
sti
pop
jge
mov
cmps
inc
aam
aam
int3
ret
arpl
sbb
fisttp
cwde
or
inc
sti
aam
xlat
addr16
add
sti
or
inc
sti
add
dec
xchg
jp
cwde
aam
aam
pushf
inc
das
enter
or
sti
or
sti
add
xchg
fs
in
cwde
addr16
jno
sub
aam
or
dec
sti
or
sti
or
or
out
popa
mov
in
dec
sti
(bad)
mul
mov
cmp
add
cwde
sbb
or
sti
or
pop
push
stos
scas
aas
popf
fs
dec
cbw
sbb
in
sti
add
dec
jae
daa
cwde
pop
sbb
arpl
daa
js
pop
push
popf
ss
push
cwde
cmp
or
sti
(bad)
mul
mov
dec
adc
aam
sbb
fwait
lahf
cmp
inc
sti
or
sti
jmp
arpl
daa
sub
aam
sbb
inc
call
push
in
(bad)
ror
sahf
in
adc
mov
(bad)
loop
data16
mov
push
push
sbb
xchg
or
(bad)
pop
mov
mov
inc
sti
or
jns
jp
(bad)
in
fisub
xor
or
inc
sti
add
sti
(bad)
jp
data16
mov
add
cmps
dec
sti
or
inc
sti
or
or
outs
out
xchg
test
sbb
hlt
or
inc
sti
mov
push
jnp
sub
inc
push
cld
xlat
addr16
loope
sti
or
sti
or
pop
mov
shl
inc
dec
sti
or
sti
or
or
jge
cwde
ins
add
push
sbb
and
or
or
sti
add
mov
jnp
cwde
arpl
hlt
das
hlt
dec
shl
repnz
cwde
adc
je
nop
mov
and
cwde
mov
inc
sti
pop
jge
xor
jns
aaa
sahf
mov
ret
data16
loopne
sbb
addr16
inc
jmp
mov
loopne
push
and
cwde
popa
inc
sti
(bad)
inc
imul
push
popf
addr16
dec
and
sti
in
pushf
push
sbb
fsub
xchg
dec
sti
add
mov
jnp
cwde
arpl
hlt
das
xor
shl
jmp
add
je
add
out
cwde
mov
inc
sti
add
dec
fstp
cwde
or
inc
sti
add
mov
jnp
cwde
arpl
hlt
das
jl
shl
in
fwait
popf
fs
jle
pushf
sbb
out
addr16
mov
daa
lock
enter
cwde
imul
popf
dec
mov
pusha
clc
jno
dec
in
sti
or
jnp
jl
cwde
ins
data16
aam
aam
xchg
pop
and
jnp
imul
popf
cmp
cwde
outs
cmps
jno
imul
and
or
dec
sti
or
sti
or
sti
cwde
jp
btc
and
(bad)
cwde
imul
popf
outs
dec
sahf
push
or
fdivr
or
dec
sti
or
jnp
jl
cwde
pusha
xchg
addr16
loop
data16
mov
sub
inc
sti
or
xchg
jnp
cwde
or
inc
sti
enter
or
sti
or
sti
or
out
mov
dec
sti
or
sti
or
out
enter
or
inc
sti
or
jg
das
sub
sti
or
neg
or
inc
sti
add
arpl
jns
sub
sub
or
inc
sti
or
cmp
mov
jge
sti
add
jnp
jg
out
mov
dec
sti
or
cmp
pop
dec
cwde
popa
inc
sti
or
jnp
jg
pop
sbb
shl
in
dec
sti
or
sti
or
sti
add
mov
jp
cmp
push
dec
sti
add
stos
jl
xlat
addr16
dec
sti
or
sti
or
sti
add
xor
rcr
pop
in
cwde
or
inc
sti
or
sti
idiv
loopne
into
mov
sti
(bad)
inc
imul
(bad)
jmp
(bad)
cwde
sbb
dec
in
sti
add
cmp
test
shl
in
outs
inc
(bad)
frstor
jmp
inc
cmp
jns
dec
pushf
rcl
mov
sti
push
test
bound
outs
sub
or
inc
sti
add
cmp
jle
sti
or
cmp
jge
sti
push
jge
inc
fs
daa
pusha
and
xchg
fs
cmp
jnp
imul
cwde
sbb
cmp
or
sti
add
movs
fistp
hlt
cwde
push
jge
sti
or
sti
push
jge
inc
arpl
and
sub
and
or
inc
sti
or
sti
or
sti
mov
retf
add
adc
push
rcr
adc
into
xchg
retf
xchg
pop
push
out
js
pop
aam
adc
pop
jne
add
fnstenv
jmp
adc
inc
jmp
inc
jb
inc
in
xchg
test
adc
inc
pop
(bad)
icebp
inc
jp
dec
jmp
xchg
adc
fsubr
adc
inc
retf
jnp
bound
std
xchg
mov
lods
push
jno
movs
jbe
fadd
and
sar
movmskps
jmp
retf
jno
push
test
xor
retf
retf
stos
or
ror
jl
(bad)
fdecstp
xchg
sub
mov
fdivr
aaa
jmp
ds
lock
mov
stos
dec
ror
stc
and
je
mov
and
dec
push
or
enter
adc
xchg
popa
pop
sbb
jle
push
mov
or
popa
ror
push
push
inc
pop
xchg
push
pop
push
out
repz
add
jle
in
push
push
and
fnsave
cmp
je
fidivr
enter
jmp
stos
jo
stos
mov
(bad)
pop
mov
fnstenv
or
lea
ror
or
xchg
shl
rcr
adc
adc
add
jp
sub
je
sub
xchg
fisttp
mov
jecxz
inc
mov
pop
rol
mov
and
jb
jae
mov
nop
(bad)
cmps
ret
mov
and
test
inc
jnp
fstp
sbb
bound
xchg
pop
js
loop
(bad)
xlat
call
adc
cmp
fst
add
leave
mov
cmp
dec
in
pop
mov
mov
push
mov
mov
jno
hlt
cmp
dec
mov
je
jl
xchg
adc
shr
sbb
shr
sbb
jmp
js
int
dec
pop
popf
push
inc
jae
retf
sbb
retf
or
shl
retf
sbb
push
out
test
push
inc
jae
into
shl
retf
mov
mov
sbb
retf
cdq
stos
inc
jmp
dec
jnp
sahf
pop
sub
dec
rol
mov
sub
mov
sbb
pop
inc
sti
test
shl
retf
sbb
(bad)
sbb
in
sub
jbe
push
inc
cmp
shr
sbb
fsubr
sbb
shl
retf
cmp
in
sub
push
mov
scas
jb
jnp
repz
shr
sbb
shr
sbb
in
cdq
push
push
int
shr
adc
(bad)
sbb
arpl
imul
rcr
retf
sbb
in
cdq
push
push
mov
retf
sbb
xlat
out
pop
jnp
xor
retf
sbb
mov
pop
gs
and
cmc
fmulp
jb
mov
and
call
mov
lea
jb
dec
not
mov
fsubr
mov
fmul
mov
fdiv
xor
jle
jecxz
and
mov
sub
popa
and
inc
push
imul
das
jns
sti
mov
loopne
pop
shl
addr16
or
add
inc
shld
jb
adc
mov
jnp
arpl
mov
mov
mov
test
(bad)
mov
add
outs
stos
jae
and
pusha
jns
rcl
pop
push
pop
add
add
fild
iret
popa
mov
ret
in
sub
int3
cmp
cld
or
sahf
fdivr
push
mov
fnstsw
ins
pop
sbb
mov
outs
xchg
jae
pop
sub
mov
(bad)
push
jmp
jb
or
mov
jae
aad
fnstenv
rcr
push
or
sub
sub
fcomp
xchg
sbb
push
sub
cmps
adc
hlt
jmp
jmp
mov
xor
ret
mov
and
sub
mov
js
dec
loop
add
sub
mov
or
cld
fstp
das
in
stos
mov
lea
mov
popa
daa
sbb
inc
cdq
movs
sub
mov
loope
sbb
mov
je
xor
sbb
xor
xchg
mov
cmc
out
mov
and
call
xchg
js
dec
jle
rol
adc
cld
or
mov
mov
fsub
adc
inc
jmp
hlt
je
mov
out
daa
inc
jmp
inc
jp
mov
jo
daa
fsub
adc
inc
dec
mov
inc
jp
mov
out
daa
inc
jmp
inc
jp
mov
out
daa
fsubr
adc
inc
jmp
inc
mov
and
adc
inc
jmp
inc
jp
mov
gs
mov
adc
inc
jmp
inc
mov
mov
fucomi
adc
inc
jmp
sub
sub
mov
daa
inc
jmp
inc
(bad)
dec
and
dec
xchg
adc
fsubr
adc
inc
jmp
nop
jmp
inc
bound
daa
inc
jmp
inc
adc
inc
repz
jb
je
mov
daa
inc
jmp
inc
fisub
daa
lock
daa
inc
jmp
pop
out
adc
inc
jmp
inc
jmp
test
and
adc
fsubr
adc
inc
jmp
inc
push
sbb
xchg
outs
mov
fidiv
jg
xchg
xchg
adc
daa
inc
jmp
inc
jmp
inc
mov
retf
out
adc
and
adc
inc
jmp
inc
sbb
fild
pop
out
daa
sub
daa
inc
jmp
fucomi
adc
and
adc
inc
jmp
inc
out
adc
inc
jmp
xchg
mov
daa
and
adc
inc
jmp
jecxz
mov
fsubp
adc
cwde
out
adc
inc
jmp
inc
jmp
inc
jmp
fisttp
lds
xchg
test
fnstcw
repz
mov
loope
daa
fsubr
adc
jb
mov
loope
daa
fsubr
adc
inc
sbb
cmp
jns
mov
mov
or
daa
mov
mov
sbb
adc
inc
jmp
inc
pop
pop
mov
fist
daa
fsub
adc
inc
sub
sub
je
mov
jecxz
mov
fsub
adc
inc
jmp
inc
mov
mov
je
xchg
(bad)
out
daa
cwde
out
adc
inc
sub
daa
inc
jmp
inc
ficom
and
in
sub
call
daa
cmp
mov
jbe
sbb
(bad)
mov
daa
inc
jmp
inc
mov
mov
mov
and
adc
daa
inc
jmp
or
daa
inc
jmp
inc
jmp
inc
jmp
sub
daa
inc
jmp
fucomi
adc
and
adc
sub
pop
into
adc
mov
pop
out
daa
sub
and
mov
jb
and
adc
inc
jmp
movs
in
adc
inc
jmp
xchg
mov
daa
and
adc
inc
mov
cmp
mov
push
iret
daa
sub
daa
inc
jmp
inc
jmp
inc
jmp
fisttp
lds
xchg
test
fnstcw
repz
mov
loope
daa
fsubr
adc
inc
jmp
repz
mov
loope
daa
fsubr
adc
inc
jmp
inc
mov
cs
mov
mov
or
daa
mov
mov
sbb
adc
inc
jmp
inc
mov
fwait
sbb
mov
pushf
loope
daa
fsubr
adc
inc
sub
sub
je
mov
jecxz
mov
fsub
adc
inc
jmp
inc
mov
mov
je
xchg
(bad)
out
daa
cwde
out
adc
inc
sub
das
inc
jmp
and
in
daa
inc
jmp
ret
mov
mov
jbe
sbb
(bad)
mov
daa
inc
jmp
mov
mov
das
sub
xchg
jbe
adc
cwde
out
adc
inc
jmp
inc
cli
ja
inc
mov
mov
loope
daa
inc
jmp
inc
ficomp
xlat
add
adc
inc
jmp
jecxz
adc
and
adc
inc
jmp
cmp
mov
jns
test
push
jp
repz
mov
loope
daa
fsubr
adc
inc
jmp
inc
jb
daa
clc
out
daa
inc
jmp
nop
jmp
inc
jmp
xor
adc
inc
sbb
daa
sub
das
inc
sub
aam
mov
sub
adc
inc
jmp
fmul
adc
fsubr
adc
inc
sub
add
cmp
mov
sub
(bad)
out
ss
daa
inc
jmp
and
daa
inc
jmp
add
cld
sar
ins
inc
sti
mov
and
or
mov
daa
fsub
adc
inc
jmp
jecxz
mov
fsub
adc
pop
or
mov
jecxz
sub
dec
repz
jns
daa
call
jmp
les
mov
mov
jns
daa
fsub
adc
inc
jmp
repz
inc
daa
push
(bad)
out
xor
adc
inc
jmp
and
daa
inc
jmp
pop
dec
(bad)
daa
sbb
adc
inc
jmp
inc
jp
daa
fsub
adc
inc
jmp
fwait
sar
push
jp
repz
daa
and
adc
and
and
adc
inc
jmp
inc
jmp
pop
out
adc
inc
jmp
xor
mov
es
out
daa
sub
das
inc
push
fadd
jb
cs
iret
daa
sub
daa
inc
jmp
fsubr
adc
ficom
daa
call
jmp
inc
fidiv
dec
repz
adc
jno
dec
shl
xchg
adc
fsubr
adc
mov
daa
and
adc
inc
sbb
les
jg
retf
sub
daa
inc
jmp
in
adc
daa
inc
call
sbb
adc
inc
dec
mov
jb
and
adc
inc
jmp
inc
call
fstp
sbb
pop
iret
daa
sub
daa
inc
jmp
inc
jmp
inc
fidiv
and
in
daa
inc
jmp
(bad)
and
sub
inc
jp
mov
out
daa
inc
jmp
inc
pop
das
daa
sub
daa
inc
jmp
inc
mov
fucomi
adc
and
adc
inc
jmp
inc
fcmovbe
aam
outs
jne
pop
(bad)
daa
sbb
adc
inc
jmp
je
mov
daa
inc
jmp
inc
push
mov
and
test
(bad)
cmp
push
out
cmp
jns
daa
call
jmp
inc
cli
lea
fsubr
adc
inc
sbb
fcomp
and
pop
fdiv
daa
call
jmp
sub
sub
popa
xlat
inc
jmp
inc
jmp
inc
pop
bound
cwde
jmpw
mov
and
push
jmp
inc
adc
and
adc
inc
jmp
or
xor
jbe
sahf
fadd
xor
jb
pop
inc
xor
mov
jl
dec
add
push
mov
(bad)
js
sbb
jmp
mov
mov
imul
shl
sar
pushf
xor
mov
fnstenv
test
ss
add
xor
fist
mov
jae
xchg
inc
cmps
xchg
ja
push
in
icebp
jle
outs
fld
mov
fbld
mov
mov
(bad)
loop
and
mov
adc
arpl
sbb
dec
in
bound
mov
jge
in
mov
dec
dec
test
and
push
sub
scas
loopne
jmp
xor
push
aas
stos
in
push
sub
cs
mov
fsub
jbe
jnp
push
fs
test
inc
sbb
push
xchg
push
sar
inc
or
mov
mov
xchg
xchg
jmp
push
push
jb
and
xchg
push
aaa
pop
movs
or
in
in
xor
mov
imul
jnp
adc
sahf
dec
pusha
and
jp
mov
mov
add
xor
xor
loope
xor
aas
shl
dec
xor
aas
and
cmp
xor
aas
xor
aas
inc
push
loope
xor
aas
xor
aas
lock
loope
xor
aas
xor
aas
inc
scas
and
lods
dec
push
or
xor
push
xor
(bad)
mov
loope
xor
cmp
xor
aas
push
mov
loope
xor
aas
xor
aas
mov
mov
inc
or
loope
and
push
cmp
xor
movs
and
loope
lea
out
aas
push
xor
xor
aas
xor
aas
sbb
mov
xor
aas
cmp
cmp
into
repnz
mov
mov
inc
or
cs
add
mov
loope
mov
loope
xor
aas
xor
fwait
adc
aas
xor
aas
xor
cmp
fcomp
cmps
ins
and
mov
pushf
test
cmps
adc
sti
repnz
movs
in
mov
pop
adc
inc
fcomi
leave
hlt
pop
xor
call
adc
inc
jmp
(bad)
jb
je
mov
daa
inc
jmp
inc
pop
(bad)
daa
nop
jmp
inc
push
inc
inc
fidiv
mov
loope
daa
fsubr
adc
inc
jp
push
fsubp
ja
pop
cmp
fild
adc
inc
jmp
inc
jp
mov
(bad)
call
retf
fidiv
daa
call
jmp
inc
mov
jecxz
dec
(bad)
daa
sbb
adc
inc
cmp
mov
fidiv
mov
fild
(bad)
daa
push
jmp
inc
ficom
daa
lock
sub
or
inc
mov
sbb
jns
daa
call
jmp
inc
jp
daa
xor
adc
inc
mov
adc
inc
jmp
inc
jmp
inc
jmp
inc
jmp
inc
jmp
mov
jne
pop
fnstsw
jns
daa
call
call
mov
fxch
dec
and
xchg
adc
fsubr
adc
inc
jmp
inc
fcmovbe
ja
jns
daa
call
jmp
xor
lea
cmp
fsubr
jbe
movs
fiadd
daa
inc
jmp
push
sar
fdiv
mov
mov
sbb
and
add
in
adc
mov
fsub
adc
inc
jmp
pop
out
adc
inc
jmp
jecxz
adc
inc
jmp
inc
push
mov
sar
dec
fidiv
mov
lea
jno
and
arpl
or
mov
retf
ja
mov
data16
jg
test
sub
in
pop
adc
bound
adc
aad
repz
and
in
sar
gs
and
xchg
in
(bad)
fwait
ins
dec
mov
fisubr
jb
pushf
jge
stos
(bad)
stos
dec
ror
mov
push
and
dec
xor
mov
sub
and
pop
sti
dec
xchg
lea
mov
mov
loopne
ret
mov
mov
fldenv
retf
int3
add
jp
add
push
xchg
test
inc
lea
cmp
mov
mov
aad
es
fld
shl
aad
adc
lock
scas
ret
mov
and
stos
test
pop
gs
adc
pop
hlt
or
ss
ror
cmps
ret
mov
and
push
mov
aaa
xchg
je
sahf
push
out
scas
js
ficomp
stos
ss
pop
les
lods
xor
dec
cdq
outs
add
outs
push
(bad)
outs
les
cld
cdq
inc
mov
push
ficom
pop
pop
fcompp
outs
xchg
gs
or
dec
ins
(bad)
jecxz
movs
fldcw
loope
jmp
sbb
push
(bad)
mov
fidiv
add
aad
pop
(bad)
outs
push
(bad)
outs
xchg
push
push
outs
fs
jmp
fwait
outs
add
outs
push
(bad)
outs
push
jbe
outs
aam
aad
pop
(bad)
outs
push
(bad)
outs
push
jbe
push
mov
daa
inc
fcmovbe
fistp
aad
push
(bad)
outs
push
jbe
ins
les
not
aad
push
ficomp
ins
xchg
outs
lds
push
(bad)
outs
push
(bad)
outs
push
(bad)
outs
hlt
inc
mov
push
(bad)
xorps
fldcw
ins
or
inc
mov
ds
xor
inc
imul
inc
iret
cmp
(bad)
mov
rol
ds
inc
jmp
mov
cmp
sahf
xor
adc
and
adc
inc
jmp
pop
out
add
jmp
inc
sbb
daa
inc
jmp
hlt
inc
mov
in
in
adc
fsubr
adc
inc
jp
mov
add
daa
mov
adc
sbb
jmp
adc
adc
mov
jmp
inc
jmp
inc
jmp
test
adc
retf
inc
push
cmps
mov
adc
inc
jmp
inc
push
in
dec
jp
aaa
or
jmp
sar
sbb
in
push
adc
daa
inc
jmp
mov
adc
inc
dec
adc
daa
inc
jmp
cwde
loop
daa
inc
jmp
inc
stos
xor
xlat
mov
sahf
push
jmp
out
cmp
daa
jo
adc
inc
jmp
inc
dec
adc
daa
inc
jmp
inc
fisubr
daa
call
jmp
inc
cli
in
aaa
test
(bad)
xor
xchg
mov
fcmovu
clc
adc
mov
clc
jbe
adc
push
(bad)
retf
int3
mov
stos
jecxz
sahf
mov
dec
test
push
hlt
inc
or
sbb
mov
mov
mov
push
xchg
mov
and
arpl
inc
ja
fisttp
(bad)
sti
mov
mov
ret
stos
int3
pop
stos
js
mov
popa
inc
mov
jo
movs
xchg
mov
xrelease
mov
ficomp
(bad)
out
sti
cmp
push
rcr
xchg
(bad)
arpl
push
jnp
xchg
mov
sahf
rol
xchg
ss
jecxz
dec
mov
repz
push
(bad)
fstp
icebp
lea
fisttp
or
jmp
xchg
lea
add
inc
fild
or
or
or
fisub
xchg
xchg
pop
arpl
pop
rcr
xlat
xchg
xchg
mov
pop
xor
inc
push
jmp
jmp
das
inc
inc
inc
stos
in
bound
dec
mov
xor
addr16
cmp
xor
jnp
inc
and
cmp
inc
popa
adc
add
(bad)
ds
pop
lea
test
(bad)
adc
(bad)
xor
xlat
repnz
mov
or
stc
and
ins
fimul
mov
mov
mov
movs
mov
lods
ss
inc
retf
hlt
or
xor
mov
pop
dec
out
push
lods
inc
fnstsw
loope
ss
sub
jbe
test
scas
dec
fs
js
pop
sub
and
or
and
push
adc
dec
(bad)
mov
fsubr
mov
inc
test
(bad)
sar
mov
cmp
push
pop
repz
sub
add
inc
mov
cmp
shl
jge
lods
fcom
dec
in
mov
clc
pop
sub
jnp
xor
mov
fdiv
jmp
bound
(bad)
xchg
jno
sahf
ds
stc
scas
cdq
inc
xor
xor
mov
pop
dec
call
fdiv
rcr
mov
push
(bad)
sub
out
or
pop
(bad)
mov
jb
sbb
pop
dec
and
mov
and
dec
adc
mov
or
mov
fucomi
mov
dec
inc
in
and
add
xor
leave
xchg
jle
dec
push
inc
push
xchg
mov
mov
pop
je
inc
push
hlt
mov
(bad)
aam
xor
je
xor
pop
arpl
xchg
adc
sub
mov
stos
xor
mov
mov
add
pop
hlt
fist
pop
jp
dec
les
lods
ds
pop
mov
jecxz
lahf
adc
add
aam
jge
adc
mov
inc
mov
cmps
mov
pop
inc
push
mov
mov
adc
sbb
cld
jmp
hlt
jecxz
xor
(bad)
fist
aas
mov
xchg
cmps
frstor
int3
push
cmc
call
push
pop
int3
call
in
cmp
stos
aad
cld
add
cmps
mov
sub
ja
mov
dec
lahf
or
cmps
ins
rcr
mov
jmp
inc
call
(bad)
cwde
aaa
(bad)
hlt
ror
mov
inc
cmps
frstor
int3
push
cmc
call
push
pop
int3
call
xchg
sti
je
lea
xchg
ficomp
or
ja
mov
dec
lahf
or
cmps
ins
fistp
push
mov
jp
jmp
pop
hlt
jmp
aas
fsubp
test
xchg
mov
push
push
hlt
sbb
push
xchg
aaa
sbb
lea
adc
mov
xor
xchg
dec
and
add
imul
cmp
push
pushf
lods
imul
test
or
nop
icebp
nop
popfw
dec
and
add
outs
or
cmp
adc
adc
jg
cmps
icebp
xchg
(bad)
pop
mov
mov
(bad)
or
jle
jle
jae
or
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
jbe
pop
ffree
mov
pop
add
xchg
daa
mov
add
push
xor
sbb
jns
xchg
inc
jno
int3
cmp
pop
sti
cmp
in
pop
aad
sub
or
loop
(bad)
mov
pop
push
test
stos
xchg
ss
movs
xor
mov
retf
ins
inc
xchg
cmp
push
xor
and
rcr
cmp
mov
fdiv
addr16
fs
fwait
sub
cld
dec
pop
and
popf
push
in
jecxz
rcr
call
mov
scas
rcr
jmp
mov
mov
(bad)
pop
jmp
dec
mov
jnp
add
inc
imul
sub
and
mov
out
jnp
push
test
mov
cwde
sbb
xchg
rcl
push
pushf
dec
xor
mov
add
add
popf
or
popf
mov
xor
sub
inc
shr
aaa
mov
and
mov
mov
push
and
or
add
push
(bad)
push
les
mov
mov
jb
and
in
bnd
pop
xor
jge
mov
(bad)
popa
in
stos
jl
or
stos
pusha
push
inc
xchg
pop
jae
arpl
(bad)
sbb
xor
pop
jg
pop
pop
push
jg
pop
push
jl
pop
jg
sti
pop
jg
sti
pop
movq
pop
ja
imul
pop
jg
sti
pop
jg
sti
pop
scas
jg
pop
(bad)
jl
pop
jg
sti
pop
jg
sti
pop
addr16
pop
jg
sti
pop
fbstp
jnp
fbstp
jnp
addr16
pop
pop
jl
pop
jg
jecxz
jg
sti
pop
jg
sti
pop
jg
sti
pop
jg
sti
pop
push
std
cli
jg
jne
(bad)
jle
rcl
fstp
into
jne
out
push
rcl
mov
sti
pop
jg
sti
pop
jg
sti
pop
jg
sti
out
rcl
shl
inc
jecxz
addr16
pushf
pusha
push
jge
dec
sbb
mov
jl
loopne
(bad)
jecxz
addr16
jecxz
addr16
xchg
xchg
pusha
push
jge
dec
mov
and
shl
addr16
jecxz
pusha
mov
jge
dec
into
jecxz
addr16
sub
push
(bad)
js
sbb
jg
pop
das
jle
inc
rol
out
iret
int
loopne
ret
jecxz
addr16
arpl
push
jge
aas
leave
jecxz
addr16
jecxz
pusha
adc
pop
aas
jl
pop
jg
call
addr16
dec
into
jecxz
addr16
jecxz
addr16
or
dec
jecxz
addr16
jecxz
addr16
cmp
cmp
dec
jg
sti
pop
xchg
stos
in
dec
jo
int
loopne
ret
jecxz
addr16
jecxz
addr16
mov
loopne
(bad)
jecxz
addr16
jecxz
pusha
adc
pop
aas
jl
pop
jg
call
addr16
dec
into
jecxz
addr16
jecxz
addr16
jecxz
xchg
jns
dec
retf
jecxz
addr16
jecxz
addr16
cmp
cmp
dec
jg
sti
pop
xchg
stos
in
dec
jo
int
jmp
bound
loopne
leave
jecxz
addr16
jecxz
pusha
push
jg
sti
or
loopne
(bad)
jecxz
rol
jmp
jo
int3
jecxz
addr16
jecxz
addr16
jecxz
addr16
inc
sbb
ins
jecxz
mov
push
inc
dec
cmp
mov
mov
push
out
dec
jecxz
xor
push
out
dec
jecxz
addr16
jecxz
addr16
sahf
bound
jecxz
addr16
jecxz
addr16
jecxz
arpl
repz
mov
call
loopne
iret
jecxz
addr16
jecxz
addr16
jecxz
addr16
inc
add
push
inc
in
shl
addr16
jecxz
addr16
jg
xor
jecxz
inc
jecxz
xor
push
jge
cmp
popf
mov
imul
loopne
ret
jecxz
addr16
loopne
retf
jecxz
addr16
and
addr16
jecxz
cmp
leave
push
jge
aas
leave
jecxz
addr16
jecxz
gs
jl
pop
jg
sti
(bad)
jecxz
inc
jecxz
addr16
jecxz
add
addr16
ja
loop
mov
add
(bad)
outs
sbb
iret
jg
out
sub
pusha
jns
out
xlat
iret
jecxz
addr16
cmp
jg
cmps
iret
jecxz
addr16
jecxz
addr16
jecxz
fs
cmps
push
out
xlat
int
loopne
ret
jecxz
addr16
and
sti
into
jecxz
addr16
jecxz
addr16
jecxz
addr16
outs
jo
retf
inc
jecxz
addr16
pop
sub
into
jo
into
jecxz
inc
jecxz
addr16
jecxz
arpl
iret
jb
outs
inc
inc
sti
pop
out
pop
int
loopne
ret
adc
(bad)
jns
mov
jmp
mov
inc
loopne
(bad)
ret
jecxz
addr16
jecxz
popa
arpl
loope
cmp
loopne
inc
inc
fistp
loopne
into
jecxz
addr16
jecxz
arpl
retf
push
out
out
int3
jecxz
addr16
dec
dec
gs
jo
int
out
ret
dec
dec
gs
jo
int
loopne
ret
jecxz
arpl
je
push
jg
dec
jecxz
addr16
jecxz
add
pusha
pop
jg
sti
dec
pop
pop
stos
pop
push
jl
or
jg
std
mov
out
dec
jecxz
addr16
jecxz
addr16
inc
gs
dec
into
jecxz
addr16
jecxz
shr
jp
jnp
jl
or
ds
out
jns
mov
jge
dec
into
jecxz
addr16
jecxz
fs
inc
push
(bad)
jecxz
inc
jecxz
addr16
je
pop
pop
pop
call
jne
hlt
out
add
loopne
int
loopne
ret
and
bound
jecxz
addr16
jecxz
addr16
mov
push
out
dec
jecxz
addr16
jecxz
arpl
retf
loopne
(bad)
jecxz
addr16
dec
ins
arpl
pop
retf
addr16
dec
push
fdivr
ins
fs
fimul
inc
retf
hlt
les
jg
ret
iret
jecxz
inc
jecxz
addr16
jecxz
arpl
arpl
loopne
iret
jecxz
addr16
jecxz
addr16
jecxz
pusha
arpl
ret
leave
jecxz
addr16
jecxz
addr16
jecxz
addr16
cmps
dec
fisub
push
mov
loopne
ret
jecxz
arpl
and
out
ret
dec
xor
jecxz
(bad)
jecxz
addr16
jecxz
addr16
inc
arpl
addr16
dec
outs
call
cld
cmp
pusha
retf
loopne
(bad)
jecxz
addr16
inc
ins
arpl
jbe
je
pop
jnp
mov
(bad)
push
rcl
sub
jge
or
in
push
jge
aas
leave
jecxz
addr16
jecxz
popa
repz
out
iret
int
loopne
ret
jecxz
addr16
mov
loopne
(bad)
jecxz
addr16
jecxz
add
pusha
fwait
jns
(bad)
xchg
cli
dec
inc
jae
hlt
push
mov
std
dec
xlat
lods
mov
scas
rol
jge
dec
into
jecxz
addr16
jecxz
addr16
jecxz
fs
mov
and
addr16
dec
into
jecxz
addr16
jecxz
adc
push
lahf
and
iret
jle
push
(bad)
jecxz
inc
jecxz
and
into
jecxz
inc
jecxz
addr16
jecxz
inc
jg
sti
iret
jecxz
addr16
jecxz
data16
mov
push
out
dec
jecxz
addr16
jecxz
addr16
arpl
stos
outs
inc
nop
leave
(bad)
(bad)
jecxz
addr16
inc
pusha
arpl
inc
jae
hlt
push
mov
std
or
jge
aaa
iret
jecxz
addr16
jecxz
addr16
pop
mov
jl
clc
pop
jg
sti
dec
pop
pop
stos
pop
push
jl
or
jg
std
mov
out
dec
jecxz
addr16
jecxz
addr16
inc
gs
dec
into
jecxz
addr16
jecxz
addr16
jecxz
xchg
jns
sti
int3
jecxz
addr16
sub
jae
jne
lods
rol
outs
fs
push
dec
xlat
add
push
jge
aaa
pop
addr16
cdq
jg
and
test
dec
in
dec
jo
int
loopne
ret
jecxz
addr16
jecxz
addr16
add
in
dec
jo
int
loopne
ret
jecxz
addr16
xchg
lods
hlt
push
jge
xor
jo
shl
addr16
arpl
jecxz
fsubrp
out
jo
(bad)
jecxz
addr16
jecxz
addr16
and
ret
jecxz
jg
jecxz
addr16
jecxz
bound
ja
mov
jecxz
dec
(bad)
jecxz
addr16
jecxz
arpl
shl
loopne
ret
jecxz
addr16
arpl
arpl
inc
call
and
test
loopne
retf
jecxz
addr16
arpl
arpl
dec
dec
retf
jecxz
addr16
jecxz
addr16
jecxz
adc
jnp
xchg
sti
out
dec
jo
(bad)
jecxz
addr16
jecxz
addr16
cmp
push
jge
dec
jmp
mov
loopne
(bad)
jecxz
addr16
jecxz
shr
jl
pop
jg
mov
(bad)
push
rcl
adc
js
pop
or
dec
jecxz
addr16
jp
jge
out
dec
jecxz
addr16
jge
jge
dec
into
jecxz
addr16
jecxz
addr16
jecxz
pusha
mov
jge
dec
into
jecxz
addr16
jecxz
addr16
jecxz
fs
into
je
scas
shl
jge
inc
into
jecxz
addr16
jecxz
addr16
jecxz
gs
retf
jbe
das
xchg
aad
daa
idiv
cli
lds
fist
cld
push
jge
dec
stc
(bad)
jbe
pop
pusha
sar
pusha
in
add
or
jae
xchg
mov
ss
in
fiadd
lods
adc
jle
jecxz
push
mov
clc
jle
xor
mov
cmp
test
sub
inc
cs
imul
or
fidivr
fist
dec
push
and
bound
out
outs
rcr
push
push
mov
inc
lods
mov
mov
cli
and
xor
out
mov
jecxz
inc
mov
pop
fld
(bad)
mov
test
scas
push
(bad)
mov
fadd
ins
ror
and
mov
(bad)
shr
(bad)
mov
sub
sti
fstp
mov
ret
adc
add
or
xchg
mov
mov
adc
push
inc
xchg
dec
inc
or
inc
adc
mov
xor
cmp
inc
jmp
xchg
je
fldcw
in
shr
xchg
je
idiv
push
fsub
or
aam
xor
pop
imul
aas
mov
and
lea
mov
(bad)
xchg
and
sub
add
mov
jnp
xor
sbb
add
add
jmp
mov
xor
xor
movs
dec
add
mov
inc
cmp
pop
xor
and
(bad)
retf
imul
repz
rol
fpatan
mov
and
inc
cmp
sub
sbb
jae
xchg
xor
repnz
xchg
inc
fcmovb
test
xor
fcmovb
adc
nop
stos
cmp
mov
imul
mov
rcl
cmp
inc
mov
mov
test
icebp
mov
stos
add
stos
pop
in
fnstcw
cmp
cmp
and
inc
lods
cdq
cmp
cmp
and
stos
inc
loope
mov
mov
sbb
sar
cmp
xor
test
mov
fidiv
and
sub
mov
stc
sti
inc
push
mov
xor
cmp
and
movs
inc
lods
push
fidivr
and
add
adc
movs
repnz
mov
pop
xor
cmp
and
cmp
and
lods
cdq
cmp
cmp
and
cmp
fidivr
test
lods
push
cmp
cmp
and
movs
inc
xchg
or
fidivr
and
movs
pop
lahf
mov
nop
jb
or
xor
cdq
and
cpuid
xchg
jns
jmp
cmp
cmp
mov
lods
cmp
fidivr
and
test
cmp
fidivr
and
xchg
loop
cmp
fidiv
and
cmps
inc
cmp
and
in
mov
mov
movs
ret
jmp
mov
cmp
cmp
and
push
in
mov
or
xor
aas
and
movs
fidivr
and
movs
add
jp
or
mov
push
jp
inc
cmps
fidivr
and
xor
add
movs
inc
mov
inc
cmps
fidivr
and
inc
dec
lods
out
fidivr
and
xchg
jl
mov
fidivr
and
mov
cdq
xchg
fidivr
and
push
inc
lods
cdq
cmp
cmp
xor
cmp
and
cmp
cmp
and
mov
mov
scas
jmp
xor
cmp
and
mov
mov
xchg
jl
mov
fidivr
and
hlt
inc
push
push
sbb
popf
adc
fidivr
and
in
mov
mov
push
in
cdq
aas
xchg
inc
cmp
and
movs
inc
lods
push
fidivr
and
test
xchg
mov
fidivr
and
xchg
pop
imul
or
mov
xor
mov
test
push
mov
jl
mov
fidivr
and
test
mov
mov
cmp
xor
es
cmp
xor
xor
and
cmp
daa
mov
mov
mov
fisttp
stos
inc
mov
mov
fidivr
and
inc
or
mov
or
mov
or
mov
or
mov
jl
mov
fidivr
and
mov
fidivr
and
mov
xchg
sub
fidiv
and
movs
inc
jecxz
push
inc
mov
jns
fidivr
and
movs
add
mov
add
test
stos
aad
ret
stos
inc
lods
mov
fidivr
and
adc
lods
cdq
cmp
cmp
and
push
in
mov
or
xor
xor
and
mov
cmp
cmp
movs
inc
fnstcw
imul
jg
test
mov
jg
push
sahf
xchg
inc
test
mov
jns
sbb
js
and
mov
test
fistp
leave
fimul
nop
push
sbb
lds
inc
push
stos
pop
xchg
sbb
lea
dec
jns
sub
leave
pop
push
shr
jmp
out
jno
sbb
push
aaa
pop
movs
aam
lea
dec
jg
mov
xchg
popa
mov
jle
xor
mov
jns
js
xchg
cs
icebp
push
lock
mov
adc
dec
repz
mov
jns
in
mov
dec
jecxz
pop
xchg
and
jl
inc
and
scas
call
push
xor
mov
hlt
add
jecxz
mov
add
jl
mov
(bad)
js
jl
div
int3
fadd
rcr
sar
stos
lock
fadd
push
in
test
xor
in
cs
cmps
mov
fbld
mov
mov
or
mov
out
cmp
fdiv
add
xchg
daa
jmp
jb
sub
mov
adc
ja
xchg
jns
je
sbb
call
jns
push
sub
pop
test
pmuludq
add
inc
and
xchg
dec
and
les
nop
xchg
inc
mov
add
retf
and
push
out
loope
sbb
test
push
aam
or
inc
and
xchg
inc
and
pop
retf
or
out
or
inc
and
xor
daa
mov
in
sar
movs
or
aaa
mov
loope
xchg
xchg
mov
dec
imul
clc
xor
mov
push
mov
in
jne
inc
fild
xchg
fild
push
mov
ss
xor
fwait
loope
daa
and
adc
inc
jmp
inc
mov
adc
inc
jmp
inc
call
fidiv
loopne
lea
jno
xor
test
add
xor
pop
sub
mov
fidiv
mov
cs
sub
inc
mov
in
push
ret
or
sub
mov
add
call
jbe
scas
call
mov
(bad)
mov
fst
pop
mov
jecxz
movs
scas
fidiv
loopne
jne
ret
xchg
dec
dec
ins
sahf
or
push
or
xchg
jo
rol
ins
add
ror
lds
stos
dec
stc
mov
add
mov
and
mov
xchg
add
pop
push
aaa
fnstsw
retf
outs
inc
xchg
xor
xchg
hlt
xor
into
mov
fst
adc
add
and
add
mov
adc
cmp
fisttp
pop
popa
cmp
aad
push
test
mov
fld
movs
rcl
xchg
loope
mov
xchg
pop
jmp
mov
js
push
push
sbb
in
adc
ret
outs
sub
pop
in
sbb
out
jo
adc
stos
outs
push
pop
test
or
or
sahf
inc
adc
test
push
repz
or
adc
sahf
inc
sbb
test
sbb
in
adc
arpl
imul
clc
imul
clc
imul
clc
imul
jmp
dec
outs
shl
fs
(bad)
fs
cld
outs
bnd
push
data16
arpl
(bad)
outs
outs
clc
data16
cld
outs
bnd
push
data16
arpl
(bad)
outs
outs
clc
data16
cld
outs
repnz
fs
gs
ins
imul
bnd
push
data16
shl
idiv
cld
bnd
jmp
jmp
xor
fs
jmp
add
imul
inc
xchg
lahf
mov
repnz
and
imul
std
outs
inc
sti
(bad)
outs
ins
mov
push
inc
clc
(bad)
imul
bnd
jmp
hlt
fs
dec
ins
(bad)
cmp
repnz
fs
push
int
arpl
outs
outs
clc
bnd
hlt
fs
imul
in
idiv
cld
repnz
outs
pusha
push
jmp
jmp
jmp
repnz
fs
dec
bound
xchg
lahf
pop
imul
jmp
icebp
fs
pusha
cld
idiv
cld
bnd
icebp
fs
in
bound
lahf
mov
imul
rep
ins
xor
ror
popa
repnz
repnz
push
pop
push
arpl
(bad)
outs
outs
clc
data16
cld
outs
repnz
fs
push
inc
clc
(bad)
imul
repnz
push
stos
cmc
ins
pushf
mov
xchg
rcl
outs
add
mul
scas
mov
std
(bad)
outs
and
ss
outs
add
jmp
jmp
hlt
fs
cld
outs
repnz
pop
imul
data16
fs
retf
(bad)
fisubr
cmp
bnd
sti
fs
inc
or
ins
jnp
adc
outs
fcom
out
xchg
cli
out
and
les
add
xchg
pop
sub
(bad)
cld
outs
bnd
jnp
pop
adc
adc
add
outs
dec
xor
scas
inc
and
std
outs
pusha
cwde
pop
jbe
add
idiv
int3
bnd
cld
fs
dec
(bad)
jmp
mov
bound
jo
pusha
ins
clc
inc
push
inc
dec
mov
arpl
pusha
outs
clc
pusha
bnd
jmp
lock
sub
test
outs
and
outs
ins
clc
not
outs
and
push
cld
fisubr
fs
mul
cmp
gs
push
sub
xchg
call
mul
cmp
shr
(bad)
ins
pushf
mov
xchg
retf
push
add
ins
(bad)
cmp
bnd
sti
fs
gs
ins
imul
bnd
lock
stos
ret
push
push
popa
mov
vmovd
imul
sub
(bad)
cld
outs
bnd
icebp
fs
cld
mov
popa
ret
jecxz
sbb
(bad)
idiv
cld
bnd
clc
sbb
sti
cli
and
ret
jecxz
cmp
(bad)
idiv
cld
bnd
and
ja
cmps
push
aad
in
outs
outs
nop
bnd
jmp
and
jbe
cmps
push
aad
(bad)
outs
outs
nop
bnd
jmp
(bad)
sbb
xchg
cli
es
jmp
retf
retf
mov
mov
jmp
popa
bnd
push
data16
arpl
(bad)
outs
outs
clc
outs
repnz
cld
outs
repnz
cmp
sub
loopne
xchg
lahf
xlat
bnd
add
movs
pop
repnz
ret
cld
ins
push
cmp
pusha
stos
adc
xchg
sahf
nop
retf
sti
les
cmp
icebp
outs
(bad)
cld
bnd
jmp
cmp
add
popa
push
inc
push
mov
arpl
outs
outs
shl
fs
(bad)
bound
xchg
out
jbe
sti
les
pop
(bad)
ins
sti
mov
outs
(bad)
cld
bnd
cmp
add
inc
push
inc
push
mov
arpl
outs
outs
inc
arpl
jmp
hlt
fs
fisub
(bad)
and
clc
into
outs
clc
hlt
idiv
cld
bnd
hlt
fs
jg
cli
push
test
or
mul
mov
cli
outs
outs
clc
bnd
mul
dec
mov
imul
shl
dec
inc
clc
arpl
cmc
idiv
cld
data16
fs
dec
adc
dec
inc
stc
sahf
scas
adc
push
xchg
lahf
ja
bnd
jmp
jmp
jmp
icebp
jmp
xchg
(bad)
arpl
icebp
inc
bnd
jmp
and
xlat
cmp
outs
imul
xchg
rcl
outs
and
fs
(bad)
arpl
icebp
inc
bnd
jmp
and
std
and
jbe
outs
test
lds
add
repnz
fs
idiv
fsub
jmp
and
bnd
jmp
push
fs
outs
outs
js
bnd
hlt
fs
and
imul
cld
outs
bnd
and
outs
shl
cld
outs
repnz
and
outs
outs
test
ret
lahf
mov
imul
repz
popa
cli
ins
imul
inc
mov
mov
jle
repz
(bad)
ins
sub
xor
ins
loop
sub
xchg
xor
jns
hlt
lea
adc
inc
jmp
inc
sub
inc
fwait
loope
daa
and
adc
inc
jmp
inc
jp
dec
(bad)
xchg
adc
fsubr
adc
inc
cmp
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
xchg
fstp
mov
fdiv
mov
fdiv
mov
fadd
lea
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fnsave
mov
fdiv
mov
fdiv
mov
fdiv
mov
fsub
(bad)
(bad)
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
pop
ficom
xchg
rol
jg
adc
mov
hlt
rol
repz
clc
xchg
inc
test
sub
ret
inc
popa
mov
or
call
rol
jo
and
sbb
or
js
fs
ins
or
dec
mov
jmp
pop
xor
cld
outs
call
jl
or
fs
dec
xlat
cli
and
adc
scas
add
adc
fsub
sbb
xor
cld
rol
and
movs
add
inc
mov
dec
shr
int
mov
mov
pop
in
cmp
ret
test
push
icebp
mov
mov
je
mov
fcomp
xor
inc
ds
jae
xchg
repz
mov
add
ret
xor
pop
gs
(bad)
outs
inc
popa
movs
inc
sbb
jbe
xchg
mov
pop
mov
es
mov
pop
icebp
dec
mov
cmp
and
xchg
sub
or
ret
mov
and
xchg
xchg
adc
in
mov
sbb
and
and
dec
sbb
ficomp
jb
and
in
mov
stos
and
push
push
add
adc
xlat
call
sub
add
add
outs
jle
stos
outs
scas
into
mov
out
add
adc
ja
add
outs
outs
push
adc
jae
mov
outs
jle
stos
outs
(bad)
mov
mov
outs
fisub
xor
jb
scas
outs
jle
ins
ins
out
lahf
jb
arpl
mov
mov
outs
jle
stos
outs
out
fst
adc
push
jle
movs
outs
fidiv
jne
and
mov
jnp
lahf
mov
fldcw
ins
imul
lahf
jb
adc
or
jmp
or
and
mov
clc
jbe
adc
xor
cld
and
mov
inc
mov
push
mov
fisttp
push
jmp
mov
cmp
test
(bad)
pop
push
ror
push
fs
jmp
std
in
clc
inc
pop
jns
movs
mov
and
gs
icebp
push
xchg
xchg
jnp
jb
mov
jle
repnz
mov
mov
sub
(bad)
int
push
xor
test
sar
(bad)
repz
jnp
dec
push
jnp
pop
xor
inc
dec
scas
pusha
pop
push
hlt
out
sar
sti
mov
add
and
ret
dec
or
mov
or
mov
or
mov
xchg
xchg
pop
outs
icebp
into
pop
mov
xchg
jb
sbb
xor
and
sub
fmulp
shl
ret
mov
add
push
mov
repnz
xchg
jle
dec
or
mov
mov
repnz
aad
and
or
mov
jmp
cmp
push
imul
(bad)
mov
fidivr
mov
fisubr
pop
mov
or
mov
sbb
mov
mov
pop
mov
jg
fnstcw
ss
mov
jg
test
sbb
mov
fcomp
daa
ss
jbe
push
xchg
daa
inc
dec
sbb
mov
jno
mov
fimul
mov
pop
mov
fidivr
mov
fidivr
fcmovu
aas
es
jno
mov
fidivr
jns
jg
mov
fidivr
jns
call
jno
mov
fidivr
push
fdivr
lock
push
imul
add
mov
fidivr
mov
mov
pop
mov
jg
mov
fidivr
mov
dec
pop
jmp
jb
pop
mov
fimul
es
out
sub
arpl
ds
ret
sub
leave
jmp
push
call
mov
xor
pop
fcmovbe
fcmovnu
push
retf
xchg
mov
fnsave
mov
pop
sub
xchg
sbb
dec
mov
mov
adc
push
imul
arpl
call
retf
jo
(bad)
fnstenv
dec
bound
jae
lods
mov
cdq
sbb
retf
sbb
cmp
xchg
and
sti
xchg
add
mov
mov
push
arpl
js
mov
mov
inc
sub
lea
xor
add
xchg
cld
and
cld
into
aam
xor
cmc
fist
jns
mov
xchg
aam
add
rol
or
shl
(bad)
sub
hlt
xchg
lea
adc
pop
push
adc
cmp
inc
stos
in
mov
inc
jae
rcr
and
stos
add
mov
or
mov
xchg
xor
aaa
xchg
sti
sub
mov
sbb
push
xchg
fnsetpm(287
inc
in
shr
xchg
pushf
mov
ja
mov
adc
es
shr
test
fimul
sar
and
mov
push
xor
xchg
jecxz
sbb
jg
pop
dec
in
cli
cmps
(bad)
xchg
sub
jnp
jg
push
aaa
push
std
imul
push
mov
jg
cmps
or
cmps
and
xchg
cmps
ret
adc
hlt
inc
mov
lods
jecxz
cld
adc
lods
dec
arpl
pushf
push
jge
dec
arpl
lods
dec
arpl
dec
imul
ror
jo
out
test
es
mov
cmp
out
xlat
push
sbb
nop
adc
shr
sbb
inc
mov
push
outs
daa
sub
daa
inc
jmp
inc
jmp
inc
jmp
cmp
clc
jmpw
cdq
lods
jl
jp
imul
cmc
fwait
sbb
mov
test
je
nop
dec
outs
popa
sbb
ss
pop
xor
(bad)
mov
inc
xor
mov
jbe
push
fisub
mov
dec
test
bound
jecxz
ret
mov
sub
les
push
mov
lea
mov
rcl
jo
dec
or
jno
jno
and
scas
call
xchg
push
out
jae
dec
mov
fnstenv
out
(bad)
rcr
pop
lods
jl
js
(bad)
sbb
(bad)
loopne
xchg
jbe
jo
dec
fild
push
repz
inc
pop
xor
fnstenv
dec
push
sbb
shl
sub
push
sti
les
sar
jbe
xchg
popa
mov
(bad)
stos
inc
push
push
or
xlat
mov
and
or
sbb
adc
lods
or
(bad)
cmp
test
cmps
pop
pop
pop
xor
push
pop
in
addr16
xchg
test
stc
dec
mov
cmp
mov
push
and
mov
stc
ret
inc
test
mov
and
sub
inc
push
in
fbstp
stos
xor
nop
mov
dec
std
enter
sbb
gs
dec
movs
dec
daa
mov
test
retf
lahf
sbb
sbb
adc
mov
movs
addr16
mov
retf
push
jns
sar
pop
or
mov
mov
iret
sub
dec
repnz
fidivr
dec
cmp
adc
aas
sub
adc
mov
retf
pop
jns
sar
addr16
mov
jnp
jns
jae
jo
mov
mov
jns
mov
adc
cli
(bad)
iret
loop
test
xor
paddq
xlat
mov
outs
je
mov
dec
lahf
xor
mov
ror
mov
les
dec
outs
mov
mov
jne
inc
or
or
and
adc
inc
pop
bound
pushf
cmps
push
inc
sbb
aad
or
mov
frstor
mov
fsub
sar
dec
jnp
je
fwait
enter
push
pop
pop
iret
xchg
sub
lahf
mov
aam
pop
ins
jmp
je
jnp
aas
(bad)
mov
fsub
xor
add
test
push
jae
xchg
xor
and
xchg
mov
mov
(bad)
jns
je
xchg
and
mov
stc
push
stos
dec
push
mov
pop
mov
push
xor
movs
(bad)
jnp
jbe
mov
add
imul
pop
dec
or
mov
(bad)
dec
fst
xchg
(bad)
rol
test
loopne
lds
mov
mov
test
add
imul
mov
pop
cdq
(bad)
popa
sub
push
(bad)
sub
pop
sbb
add
jg
or
adc
mov
and
popa
adc
icebp
sub
test
or
(bad)
(bad)
jnp
popa
mov
sbb
ja
xchg
popa
mov
mov
arpl
xchg
and
adc
adc
std
jbe
sub
sbb
aad
push
daa
dec
in
push
jnp
aam
stc
ins
outs
xor
outs
mov
adc
mov
push
dec
sub
dec
sub
sub
stc
clc
mov
lea
sub
test
pavgb
or
mov
push
dec
sub
or
lea
push
fnstenv
or
sub
clc
dec
ror
fiadd
xor
push
dec
sub
dec
sub
mov
lea
xor
dec
es
mov
sub
dec
sub
dec
das
push
fmul
imul
sbb
adc
out
cwde
or
dec
sub
dec
daa
push
jp
imul
shl
es
pop
xchg
mov
sar
jns
pop
xchg
test
mov
mov
loopne
or
lods
fdiv
xor
sub
mov
clc
jbe
adc
mov
test
fstp
mov
jbe
arpl
push
(bad)
rol
inc
mov
pusha
aaa
add
inc
fcom
mov
and
inc
fisttp
call
push
jae
jmp
cmp
mov
inc
mov
add
repz
mov
adc
mov
test
lea
xchg
mov
shl
daa
pop
jb
fwait
test
ret
jnp
push
mov
mov
(bad)
jb
xor
mov
repz
sahf
push
lods
in
add
jmp
mov
adc
sub
jb
xchg
xchg
sti
scas
jo
jge
mov
mov
push
mov
inc
nop
jne
xchg
xchg
mov
les
mov
sbb
mov
xor
mov
ret
test
mov
and
hlt
xchg
loope
hlt
xor
stos
dec
ror
hlt
xchg
add
add
leave
jbe
xchg
mov
lds
jmp
and
jae
add
mov
loopne
stos
or
sub
mov
adc
pusha
or
add
scas
adc
std
lods
ret
sar
adc
std
lods
adc
std
lods
adc
std
int3
and
sar
outs
mov
fwait
xchg
pop
sbb
mov
pop
loop
cmp
mov
adc
movs
out
cmp
outs
popa
ror
mov
daa
and
xor
pushf
lahf
std
pop
call
fistp
retf
xchg
mov
fsub
adc
inc
jmp
inc
jp
hlt
pop
push
jo
sub
adc
inc
jmp
sar
mov
je
fwait
inc
ja
mov
xor
stos
test
push
pop
test
add
retf
jae
pusha
fldenv
xor
and
es
mov
pop
mov
pop
xchg
loopne
mov
mov
mov
cmp
mov
fidiv
stos
imul
mov
cmp
fnstenv
mov
mov
stc
mov
sub
mov
or
test
in
xor
sbb
add
pop
(bad)
frstor
push
imul
push
data16
fs
cmc
jp
or
add
xor
inc
xor
mov
rcl
sub
sbb
mov
fst
stos
out
xor
dec
sti
adc
inc
ret
mov
idiv
mov
mov
je
outs
fstp
mov
test
pop
mov
in
je
mov
jb
sar
sbb
mov
xor
push
and
mov
and
test
mov
dec
add
mov
dec
xor
mov
jbe
repz
and
je
add
or
sbb
cmp
mov
and
mov
jnp
mov
and
shl
mov
aaa
jae
mov
and
xor
mov
mov
or
aaa
and
sub
aaa
and
mov
and
mov
and
mov
and
iret
mov
xchg
sub
cmp
aad
cmps
daa
xchg
jne
mov
xchg
mov
mov
add
mov
test
fwait
mov
mov
add
je
in
mov
jnp
mov
and
xor
lds
or
push
mov
mov
add
rol
jbe
mov
xor
idiv
or
aaa
repz
mov
and
add
add
aaa
and
ret
stos
out
sub
in
scas
add
xchg
sub
aaa
and
jno
and
push
mov
and
xor
repz
xchg
popf
fsubr
mov
sub
aaa
and
mov
xchg
or
aaa
repz
mov
and
xlat
lods
xchg
mov
movs
and
sbb
mov
push
shl
mov
xchg
das
in
mov
jmp
leave
jmp
jb
hlt
pop
addr16
ret
jecxz
daa
inc
jmp
inc
pop
outs
daa
sub
daa
inc
jmp
inc
jp
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
(bad)
xlat
(bad)
push
jmp
jbe
cdq
mov
mov
pop
test
daa
and
adc
inc
jmp
inc
sbb
in
fbstp
cli
mov
xchg
daa
and
adc
inc
jmp
inc
mov
cmp
adc
push
test
mov
mov
jmp
adc
inc
jmp
inc
adc
and
adc
inc
jmp
mov
mov
daa
inc
jmp
cmp
sti
(bad)
idiv
fild
mov
fnstenv
daa
and
adc
inc
jmp
pushf
mov
mov
push
jmp
inc
mov
imul
(bad)
hlt
pop
ja
inc
dec
out
adc
inc
jmp
(bad)
xor
lods
xchg
ja
(bad)
fld
adc
pop
int
inc
jp
dec
(bad)
xchg
adc
fsubr
adc
inc
cmp
inc
inc
mov
mov
int3
pop
loope
movs
jbe
cwde
fdiv
sbb
rol
sub
lods
rcr
loop
jle
mov
add
lea
aad
test
jae
mov
mov
and
(bad)
psllq
mov
pop
movs
adc
mov
jae
cwde
lods
in
aad
aad
sbb
push
aam
aad
(bad)
mov
rcl
inc
stos
pusha
rcl
or
or
test
ret
lods
test
in
mov
jb
sbb
ret
pop
xchg
jo
xchg
xchg
sti
jle
mov
xchg
stos
mov
stos
call
add
mov
pop
scas
dec
pop
push
push
xchg
shl
jnp
sbb
fbstp
push
mov
in
dec
scas
adc
adc
stos
call
stos
loope
int
add
pop
arpl
mov
hlt
xor
sbb
js
xchg
mov
mov
push
jns
arpl
inc
stos
loopne
mov
xchg
ja
or
movs
xlat
mov
and
shl
nop
icebp
sub
xor
xchg
and
ret
aas
xor
jbe
stos
sti
loope
data16
mov
xchg
clc
mov
push
arpl
cmp
or
push
pop
dec
add
inc
adc
mov
jp
adc
lea
push
push
fld
bound
inc
push
iret
test
dec
rol
test
sbb
test
iret
add
fld
push
pop
dec
movs
cmps
push
movs
mov
xchg
fcomip
rcr
(bad)
enter
mov
imul
arpl
mov
push
pop
scas
sbb
mov
xor
dec
sbb
jae
sbb
ja
ret
and
mov
push
add
xor
pop
xor
add
fild
jns
xchg
adc
lea
push
push
fld
bound
inc
push
dec
rol
push
test
iret
test
iret
lea
iret
pop
inc
mov
fnsave
sbb
iret
test
iret
test
iret
dec
inc
dec
rcl
sbb
test
iret
mov
push
adc
fst
iret
test
iret
mov
push
lock
cs
cmp
mov
test
adc
test
iret
test
dec
das
sti
lahf
pop
cdq
pop
dec
push
fcmovbe
mov
jmp
and
adc
test
iret
mov
adc
sbb
mov
and
dec
fiadd
adc
sbb
iret
test
iret
test
iret
sbb
push
adc
inc
push
iret
test
iret
mov
mov
sbb
mov
pop
vmulsd
adc
test
iret
mov
rcl
lahf
fst
(bad)
out
and
fstp
iret
test
iret
or
repz
sbb
jl
adc
fst
iret
test
ret
add
mov
push
rol
jnp
push
mov
cmp
mov
sbb
push
mov
shl
or
popf
pop
adc
cmp
or
jae
sti
and
xor
adc
and
adc
inc
jmp
(bad)
(bad)
xchg
pop
and
in
and
stos
push
inc
xchg
jno
sti
and
(bad)
and
scas
mov
xor
test
fstp
mov
aaa
push
mov
cwde
mov
mov
in
retf
test
sti
sti
jb
mov
push
shr
add
mov
fist
push
repz
mov
mov
xchg
jl
sbb
mov
fdiv
iret
or
jns
std
(bad)
ret
jb
test
jbe
mov
add
mov
xchg
jbe
sbb
xchg
jg
sbb
xchg
sti
add
mov
inc
aad
push
inc
xchg
xchg
jb
cli
(bad)
push
push
push
and
test
jns
adc
sub
jmp
test
outs
fldenv
movs
ret
jnp
fcom
repz
jbe
nop
data16
dec
mov
and
scas
mov
xchg
adc
jae
fwait
mov
ror
cmp
in
cmp
hlt
mov
push
(bad)
sub
cmps
inc
pop
push
inc
out
loopne
in
mov
push
fild
push
mov
je
pop
cmp
sub
dec
popa
and
dec
mov
sub
dec
popa
sub
dec
xchg
rcr
cmp
mov
push
ja
fcom
add
popa
and
dec
stc
repnz
mov
and
std
nop
inc
lock
mov
inc
inc
cld
mov
dec
or
imul
popa
sub
dec
popa
sub
dec
popa
and
in
rcl
sub
mov
inc
inc
popa
sub
int3
adc
cld
(bad)
mov
jmp
jl
fbld
ja
popa
daa
fisttp
fsubr
sub
dec
popa
sub
dec
popa
sub
dec
popa
cld
(bad)
popa
sub
inc
popa
sub
dec
popa
fisttp
fisttp
or
std
mov
fisttp
fistp
mov
cmp
inc
mov
popa
sub
dec
popa
sub
int3
sar
gs
inc
popa
sub
dec
popa
sub
cld
fild
dec
popa
sub
dec
popa
and
dec
popa
repnz
jnp
add
dec
popa
rcr
ins
adc
clc
lds
pushf
fst
inc
(bad)
enter
cmp
popa
enter
mov
and
sub
dec
popa
and
mov
xchg
clc
call
cmp
adc
add
(bad)
mov
loop
fbstp
dec
inc
popa
sub
dec
popa
sub
dec
popa
das
fisttp
sub
dec
popa
fisttp
(bad)
in
dec
out
inc
push
jo
add
lods
mov
movs
or
dec
popa
sub
dec
popa
sub
dec
popa
sub
in
jmp
pop
movs
sbb
pop
jl
sub
sub
dec
popa
sub
dec
popa
cmps
fistp
sub
jne
inc
push
cli
mov
ror
mov
fsub
inc
inc
movs
scas
or
cmp
fdivr
inc
xchg
iret
mov
(bad)
mov
fdivr
mov
fdivr
xchg
dec
arpl
inc
push
pop
push
inc
enter
shl
push
clc
in
pop
lock
nop
imul
adc
lods
fadd
sub
sbb
movs
cmp
pop
jne
repz
adc
test
jo
js
sub
jo
dec
in
in
fwait
neg
cwde
pop
lock
arpl
pop
adc
js
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
sbb
sar
mov
shl
mov
jne
inc
push
cmc
inc
pop
fcomp
mov
pop
fdivr
mov
sar
mov
rol
clc
inc
clc
int
push
and
mov
fdiv
mov
dec
fdivr
mov
sar
mov
inc
lock
pop
sar
xchg
(bad)
in
xor
std
mov
dec
rcl
xchg
xchg
in
adc
inc
mov
clc
mov
aad
mov
pop
or
std
out
pop
rol
out
push
or
adc
sar
lock
sar
mov
mov
inc
dec
mov
aad
adc
fmul
loope
adc
pusha
scas
push
inc
aam
cmovnp
nop
mov
ficom
shl
mov
cmc
aad
ins
in
ret
sti
jmp
cmc
movs
(bad)
movs
sbb
lea
inc
and
mov
push
loop
xchg
jg
add
lea
dec
sub
push
xchg
in
test
aad
les
mov
push
dec
xchg
ins
jnp
mov
and
int
lds
mov
je
mov
retf
daa
cmp
sub
lods
int
out
ret
mov
mov
pusha
aad
lds
mov
es
xchg
or
aaa
pop
adc
cmp
mov
and
jno
jl
pop
das
shl
push
hlt
rcr
cmp
lea
std
rcr
mov
sbb
adc
adc
addr16
adc
int
add
dec
add
or
sbb
jnp
jp
ins
adc
es
or
int3
popf
pop
xor
mov
push
int3
stc
mov
stc
and
push
ret
(bad)
sti
sbb
lea
outs
push
dec
aaa
sahf
pop
adc
dec
sbb
sub
out
rcl
addr16
push
scas
(bad)
scas
mov
mov
es
add
test
inc
ret
lods
test
sub
pop
out
retf
dec
adc
test
mov
enter
mov
sti
push
pop
or
adc
mov
jbe
call
adc
push
push
ret
adc
xchg
data16
push
stos
jp
xchg
test
fndisi(8087
mov
mov
xchg
and
inc
out
stos
sbb
add
loope
cmp
jmp
jge
daa
mov
pusha
aad
in
bound
push
imul
mov
jb
jp
pop
pop
mov
push
pop
jnp
mov
jb
pop
je
sti
inc
mov
push
test
lahf
adc
outs
and
shl
in
not
push
movs
xor
mov
adc
mov
cmps
mov
out
ins
clc
sub
jo
ror
or
jmp
lods
je
cmc
movs
mov
aad
add
mov
xor
dec
aaa
cmps
loop
aas
xlat
popf
jg
data16
inc
sahf
call
dec
pop
jns
adc
lahf
mov
sub
sbb
ja
cli
js
mov
je
popa
pop
scas
pop
adc
push
ins
inc
xor
retf
mov
(bad)
dec
mov
aad
xchg
jmp
inc
dec
jp
adc
add
fnstenv
mov
pop
mov
pop
sbb
ja
int3
dec
sbb
pop
cmp
je
cmp
xchg
lock
xor
push
sti
jb
fucomi
ret
cld
fdivr
lods
je
shrd
xchg
mov
scas
push
call
xchg
xor
andnps
or
sub
pop
cmc
rcr
push
dec
cmp
adc
into
xchg
xchg
push
push
xchg
pop
push
pop
jge
lds
dec
pop
sub
lea
push
test
cwde
adc
or
int
dec
mov
or
(bad)
bound
pushf
jl
mov
inc
xor
sahf
sar
add
xlat
cli
mov
add
and
std
popa
sbb
div
lahf
shl
fadd
push
adc
add
mov
push
dec
push
inc
mov
mov
adc
cmc
test
addr16
xchg
adc
and
daa
data16
xor
repz
sub
loopne
hlt
push
add
jle
add
jmp
test
xchg
popa
test
fdivr
mov
mov
inc
dec
test
xlat
cmp
jmp
adc
movs
push
test
clc
mov
sar
mov
ret
fs
(bad)
cmp
add
mov
dec
shl
arpl
std
mov
sar
nop
inc
lock
test
pop
cld
xor
dec
and
loopne
mov
and
mov
fprem1
mov
clc
in
cmovge
xor
jnp
bound
mov
push
and
xor
mov
test
fiadd
enter
xchg
push
mov
aad
mov
stos
mov
je
sahf
sbb
dec
repnz
jbe
jmp
in
data16
daa
xchg
clc
and
mov
(bad)
in
mov
not
xchg
mov
xor
xor
lahf
stos
rol
imul
ret
mov
hlt
sbb
sub
jno
pop
mov
pop
jbe
jl
ret
mov
push
xor
pop
lahf
test
or
test
loopne
inc
xchg
mov
out
cmp
pop
shl
push
mov
dec
ret
fdiv
call
sub
jae
sahf
in
inc
push
add
repz
xchg
sbb
push
or
cmp
inc
xlat
sbb
call
cmps
call
sbb
push
aaa
lods
sbb
mov
dec
aas
cli
add
xchg
fs
sti
inc
ja
cmp
xchg
inc
mov
and
jmp
lahf
call
sbb
jg
or
ficomp
or
fsub
or
adc
repz
or
mov
in
fild
shl
test
add
call
lods
int3
stos
jmp
sbb
cld
ds
ja
iret
jp
mov
jb
ret
xchg
mul
adc
aas
jmp
jge
arpl
xor
int3
imul
adc
js
out
inc
dec
pop
imul
movs
inc
add
push
retf
inc
mov
add
jge
mov
ds
push
and
lock
jmp
es
jne
in
add
xchg
ficomp
fisttp
sub
fidivr
mov
lock
inc
shl
test
rcr
cdq
pop
push
jge
jb
std
mov
iret
jno
sub
dec
fidiv
inc
fidivr
hlt
clc
in
lods
pop
inc
test
mov
inc
pop
dec
cmp
mov
cmp
sub
and
popa
aam
pop
pushf
inc
mov
xchg
push
imul
cmovno
add
adc
sub
add
shl
ins
pop
push
sbb
cmp
ja
mov
sar
retf
loopne
stos
rcl
sbb
xchg
test
fcomp
gs
mov
in
ror
(bad)
aad
inc
cmp
pop
xchg
sbb
add
mov
int
mov
mov
aam
retf
sbb
xor
xor
cs
xchg
mov
inc
rol
add
(bad)
push
pop
add
xor
arpl
outs
(bad)
in
stos
enter
mov
sti
or
rol
jb
mov
nop
push
push
je
(bad)
into
scas
cmp
call
jg
ds
and
cmc
mov
int3
rcl
and
in
stos
or
iret
nop
or
test
pop
and
xchg
addr16
imul
arpl
lock
inc
xor
repnz
lods
(bad)
mov
add
ins
cmps
mov
push
sub
ja
xor
leave
adc
sbb
inc
or
in
mov
pushf
out
mov
pop
loopne
shl
cmp
xchg
dec
xchg
lahf
jmp
(bad)
fnstenv
cmps
loope
test
fld
dec
jp
or
(bad)
jmp
adc
sbb
pop
fist
repnz
dec
mov
push
lea
jg
jle
(bad)
and
mov
mov
mov
shl
cwde
pusha
sub
and
mov
stc
fisttp
push
cmp
adc
add
inc
outs
inc
retf
sbb
loop
jae
xchg
and
loope
and
cmps
inc
nop
sbb
cli
rcl
in
jb
cmp
add
jg
ss
fdivrp
cmp
sti
fwait
idiv
int
test
jb
xlat
call
inc
les
pop
or
jmp
or
cmp
mov
(bad)
out
and
out
and
adc
jmp
nop
jne
lods
dec
mov
add
movs
jle
adc
stc
cmp
lds
push
mov
add
cmp
int
and
fsubr
mov
cli
loop
outs
rcl
push
in
sub
push
(bad)
out
loopne
icebp
clc
stos
or
fs
fwait
ins
xlat
arpl
sub
call
push
push
mov
add
(bad)
stc
in
ja
fwait
jae
out
aam
nop
xchg
mov
pop
mov
in
xchg
inc
iret
push
call
xchg
mov
add
cli
das
xor
sub
scas
cwde
pop
pop
pushf
add
push
push
cmc
cs
das
cdq
test
popf
sub
scas
cmp
int
shr
or
loope
inc
aad
push
pop
popa
push
cmp
ds
fld
push
add
call
adc
xchg
inc
cs
inc
adc
pop
cwde
nop
cmp
xor
and
xchg
lods
push
xchg
push
jg
pusha
mov
xchg
call
jmp
fisttp
push
fdivr
mov
inc
sar
push
pop
jl
retf
push
ins
and
in
mov
dec
fidivr
dec
push
push
dec
dec
adc
and
sub
out
rcl
shl
scas
lods
cmp
fbld
mov
fldl2t
call
or
ins
pop
sub
pop
(bad)
xor
mov
pusha
call
in
xor
lods
push
cs
test
popf
clc
jecxz
sub
or
sti
hlt
push
lea
mov
cmc
test
or
enter
(bad)
xchg
push
fst
and
repnz
adc
outs
cmc
jno
xchg
mov
cmps
inc
outs
jae
xor
push
adc
mov
adc
jecxz
shl
repz
push
push
push
xchg
mov
jno
enter
out
scas
mov
xor
dec
cld
in
xor
xlat
test
or
inc
jecxz
cmc
movs
xchg
adc
dec
ss
jbe
jb
sbb
mov
ficom
or
push
dec
fistp
addr16
pop
pop
jmp
or
int
push
fbld
xchg
push
pop
ret
or
add
jbe
inc
arpl
pop
sub
push
mov
int3
jmp
lock
aad
hlt
mov
push
xor
test
call
cwde
pusha
xchg
jne
es
xchg
repz
stc
jne
adc
mov
or
mov
inc
dec
or
xchg
std
dec
adc
xchg
fs
fstp
retf
ret
outs
addr16
push
jg
sub
inc
pusha
jae
mov
dec
xor
fdivr
scas
inc
loopne
mov
cmps
push
mov
out
sbb
icebp
add
int
dec
jge
(bad)
sbb
add
push
xchg
push
adc
mov
gs
out
movs
mov
fcmove
addr16
int
push
bound
and
nop
cmc
sub
mov
enter
loopne
loopne
sar
mov
sar
mov
dec
dec
cmc
cmp
inc
std
cmp
pop
outs
and
call
mov
out
rcl
retf
into
out
popa
shl
fdiv
dec
(bad)
mov
dec
dec
or
test
fidivr
sbb
in
out
inc
sub
sti
sbb
je
loop
ins
lahf
mov
or
xor
loopne
push
jne
call
fistp
std
inc
cmps
cmp
xor
pop
sahf
je
xor
nop
stos
ins
jecxz
jle
add
inc
inc
add
pop
inc
add
iret
test
add
out
cmp
imul
cmps
stos
and
inc
xchg
repnz
test
dec
lds
imul
jmp
int3
mov
xchg
mov
pop
and
and
xchg
jmp
cwde
add
adc
dec
imul
jns
xchg
iret
rcl
sub
cli
dec
cld
mov
xor
sbb
adc
js
push
inc
mov
push
sar
and
inc
jl
sbb
inc
enter
sbb
lea
jne
test
aas
shl
mov
imul
xor
or
cmp
push
jae
sbb
sub
dec
mov
in
add
xchg
push
sub
in
and
mov
push
not
mov
dec
adc
imul
leave
mov
inc
add
and
pop
mov
enter
push
push
retf
arpl
xor
bound
xor
mov
xor
xchg
ins
cmp
je
sbb
mov
dec
xor
inc
out
jns
stos
inc
mov
pop
push
out
jne
(bad)
dec
lds
push
stc
jmp
mov
sbb
add
or
pop
int3
push
mov
jo
mul
retf
test
(bad)
xchg
push
dec
mov
aam
push
cmc
sub
clc
repz
pop
jnp
xor
xchg
ret
or
sub
fild
nop
lds
test
rcl
icebp
lods
jp
out
xchg
loop
movs
imul
lock
sbb
cmp
adc
mov
xor
sub
jbe
jecxz
fs
xchg
scas
sbb
jmp
cmp
push
mov
lods
fsub
jmp
xchg
mov
jno
in
outs
mov
cmps
and
add
xor
mov
jbe
imul
test
fdivr
and
iret
jmp
arpl
mul
adc
push
cdq
push
out
jae
stc
in
push
dec
js
icebp
adc
xchg
adc
add
in
iret
inc
add
aam
mov
jo
dec
sar
and
inc
mov
pop
js
or
bound
jnp
cmp
cmp
retf
iret
sub
pop
jo
js
test
inc
xchg
and
xor
(bad)
jne
ret
push
push
ins
in
hlt
pop
jmp
mov
mov
mov
jge
sbb
mov
retf
or
cmp
and
sbb
sbb
jmp
popf
je
xor
jbe
mov
dec
cs
cmp
adc
(bad)
cmp
les
adc
outs
addr16
push
ja
into
push
int3
not
adc
mov
test
test
push
push
ret
stos
cs
das
scas
imul
mov
(bad)
mov
add
inc
fsubr
cwde
inc
clc
std
mov
dec
fdivr
mov
shl
xor
shl
int3
fxtract
cmp
dec
fdiv
inc
sub
mov
fcomip
mov
dec
push
add
mov
shr
or
xor
jg
loop
pop
movs
cdq
or
sbb
mov
jecxz
lods
loope
sbb
into
dec
push
mov
pop
mov
data16
rcl
pusha
(bad)
sbb
inc
adc
mov
std
shl
sub
nop
addr16
outs
ins
sub
adc
jns
mov
adc
fwait
jl
mov
call
(bad)
adc
loop
loopne
jns
xchg
fwait
pop
retf
in
cmps
jbe
shl
gs
add
sub
or
loope
into
arpl
lods
xchg
repnz
push
xchg
aaa
jle
ret
cmps
out
out
sub
cmp
movs
sub
xchg
ins
call
or
fiadd
mov
add
jo
aam
fldenv
into
ret
or
add
pop
shl
cwde
push
jge
push
xchg
mov
out
shl
loop
xor
inc
ds
aas
xchg
jmp
push
(bad)
bound
jl
or
jmp
sub
mov
nop
lahf
xor
movs
movs
cmps
mov
cwde
jne
xor
shl
xchg
repz
and
pop
mov
mov
mov
push
scas
fiadd
xchg
lock
xor
dec
jg
lea
shl
pop
cmps
mov
or
sub
into
fild
div
jnp
or
test
jae
add
inc
aad
mov
aas
(bad)
stc
in
push
cmp
pop
fstp
push
repz
mov
add
push
test
imul
cmp
cwde
push
loope
xchg
mov
js
lea
add
int
mov
gs
aas
jo
scas
std
adc
mov
(bad)
xor
inc
addr16
inc
sub
mov
add
or
out
mov
push
mov
scas
lock
hlt
sar
fbstp
jae
cmc
jecxz
(bad)
std
stos
xor
cmp
out
imul
pushf
out
rcr
cmp
sbb
mov
stos
mov
inc
lods
mov
int3
dec
cmp
lods
dec
(bad)
and
pop
movs
mov
mul
and
or
pop
jp
jmp
mov
mov
dec
test
pshufw
call
test
mov
retf
movs
mov
lods
stc
aam
aas
pop
out
push
adc
mov
adc
jg
pop
mov
xlat
scas
dec
dec
jae
add
adc
(bad)
fldenv
in
inc
sar
inc
sar
xor
(bad)
mov
(bad)
mov
shr
sbb
sar
mov
sar
mov
adc
nop
dec
aam
mov
xor
mov
rol
xchg
inc
mov
movs
dec
inc
fdivr
fld
dec
js
fcomi
jbe
push
std
mov
push
push
fdivr
aad
fnsave
cwde
xchg
ins
rol
clc
int
repnz
inc
out
add
std
mov
rcl
mov
or
mov
out
lods
in
add
loop
jp
pop
add
mov
sar
dec
cdq
sbb
inc
adc
inc
jge
call
mov
xlat
pusha
push
popa
cdq
ss
arpl
rcr
adc
xchg
or
das
ror
int3
retf
mov
(bad)
jo
in
mov
push
adc
mov
push
std
add
std
nop
ret
sar
mov
outs
aad
mov
xchg
mov
inc
pusha
dec
mov
fdivr
lea
dec
jo
(bad)
mov
sar
mov
aaa
sub
jae
std
mov
loopne
jbe
and
mov
pop
cmc
mov
leave
fisttp
pop
sar
mov
inc
shl
fdivr
xor
int3
(bad)
rcr
dec
fidivr
inc
pop
enter
clc
push
mov
jnp
sti
loop
in
outs
inc
push
push
xchg
dec
mov
xchg
out
inc
(bad)
jg
fisttp
xchg
hlt
or
cmps
mov
cmp
test
out
shl
xchg
test
inc
test
imul
xor
push
pop
mov
pop
aad
stos
xlat
xor
int3
int3
add
stos
push
pop
sbb
pop
xor
sub
xor
cli
jle
pop
fs
cmp
or
lahf
and
xlat
in
retf
rcl
mov
loope
shl
inc
jmp
add
inc
cmc
mov
fcmovnbe
xchg
add
jo
stos
ret
lahf
lock
adc
movs
and
dec
jae
movs
push
pop
stos
jmp
mov
xor
xor
jo
mov
imul
and
mov
sub
xchg
enter
pop
leave
imul
imul
jg
ret
cmovnp
mov
sbb
dec
daa
mov
xchg
stos
mov
stos
jp
pop
fs
jne
sub
cmp
or
sub
add
fimul
lock
jp
leave
inc
jp
int
outs
aaa
jmp
dec
lds
dec
pop
mov
pop
js
mov
(bad)
sti
or
mov
jae
sbb
add
mov
mov
rsm
shl
mov
test
xchg
(bad)
push
sbb
pop
mov
or
pmaddwd
inc
jns
fwait
clc
inc
mov
xchg
mov
not
retf
js
retf
pusha
scas
call
or
(bad)
call
sbb
xor
lahf
push
and
jp
ja
dec
jl
pop
xchg
adc
call
push
scas
jmp
clc
xor
enter
xor
xor
pop
xchg
cmps
out
mov
mov
mov
lea
sbb
dec
aas
daa
retf
xchg
loope
jp
adc
add
lods
mov
jp
pop
or
mov
jg
sub
sub
iret
mov
mov
add
(bad)
add
pop
inc
(bad)
xor
and
inc
(bad)
out
in
lock
shl
pop
mov
cmp
aaa
or
xor
jmp
fist
pop
xor
add
jo
push
push
mov
mov
pop
jl
xor
push
hlt
xor
mov
push
xor
mov
es
movs
push
pop
sbb
mov
push
jno
fcom
mov
test
(bad)
sbb
or
jbe
mov
pushf
inc
repnz
xor
dec
jl
pusha
mov
cmp
test
imul
and
nop
mov
xlat
pop
inc
loope
pshufw
xchg
mov
repnz
pop
or
add
fs
cmp
rol
sbb
jecxz
cmp
mov
arpl
cmc
mov
arpl
std
mov
fdivr
mov
dec
push
hlt
cmp
hlt
cmp
shl
dec
(bad)
inc
pop
add
lahf
cmc
mov
dec
dec
or
jp
add
out
sbb
sbb
push
cmp
xchg
adc
js
mov
jecxz
shr
xchg
lds
xlat
push
inc
pop
test
push
dec
jns
arpl
mov
jbe
ins
inc
(bad)
les
imul
addr16
xlat
pop
mov
cwde
out
in
cmp
arpl
je
lods
out
addr16
inc
pop
test
pop
pop
outs
fsubr
cmps
adc
mov
fisub
jge
push
xor
mov
call
sar
les
mov
pop
push
cs
and
pushf
jp
mov
mov
jne
xchg
xlat
add
sbb
add
addr16
adc
je
jecxz
mov
jbe
daa
jne
mov
or
(bad)
sub
dec
out
add
rcr
sub
xor
ficom
loop
sub
xchg
cmps
out
movs
scas
jns
or
mov
sbb
pop
in
pusha
mov
mov
jnp
cld
pop
xlat
dec
data16
sub
xchg
mov
push
lock
jmp
adc
test
scas
retf
(bad)
jo
(bad)
pop
xor
jbe
mov
rol
call
inc
fcomi
add
jo
jo
fst
mov
inc
shl
xor
xchg
cmp
out
(bad)
aad
out
aad
clc
leave
ins
sbb
cdq
xor
adc
out
pop
dec
jecxz
dec
das
jne
sbb
xchg
inc
or
div
pop
jb
mov
pushf
mov
push
jne
mov
push
stos
xchg
out
clc
inc
cmc
or
dec
lods
xchg
sar
out
jnp
jb
sub
pushf
loopne
inc
sub
add
cmp
and
jo
add
nop
hlt
or
inc
lock
out
xor
cmp
and
sub
imul
repnz
cmp
in
test
shl
push
fdivr
mov
inc
pop
jne
dec
shl
mov
push
je
rcl
int
sti
clc
mov
pop
jge
mov
rcl
cmp
sbb
ret
rol
pop
repnz
je
pop
fst
xchg
out
jecxz
and
xor
test
outs
loope
shr
or
pusha
fidiv
nop
mov
dec
mov
mov
in
xchg
jns
add
push
cld
inc
cs
adc
mov
cmp
sub
out
dec
jbe
sar
xor
adc
sar
sbb
adc
mov
test
jb
ins
mov
adc
jns
push
cmp
inc
sub
push
xchg
pop
les
jg
xor
daa
movs
adc
fist
or
sub
ror
and
mov
mov
leave
clc
xor
out
repz
movs
idiv
jnp
pop
adc
mov
dec
jns
lahf
xchg
das
aaa
mov
cmp
nop
repz
retf
jle
pushf
gs
les
sbb
ret
mov
xchg
cmp
xor
mov
ret
dec
sbb
jp
test
retf
les
xchg
and
and
mov
jbe
js
jae
jle
iret
pop
jmp
jecxz
(bad)
imul
sbb
retf
sub
pop
popa
mov
mov
jno
in
xchg
bound
int3
enter
inc
iret
and
mov
nop
cmp
jns
lds
inc
fcomp
not
rcl
cmp
and
enter
mov
sub
popf
jg
daa
cmp
rcl
mul
jmp
gs
mov
lods
loopne
rcl
dec
and
inc
sbb
push
push
mov
sub
sbb
jo
jge
sbb
push
sti
inc
or
test
mov
int3
xor
aas
fimul
(bad)
icebp
lods
les
push
adc
xor
push
fistp
adc
add
mov
jl
ret
mov
rol
push
js
in
jb
ret
in
popa
jmp
mov
jnp
es
ret
mov
inc
loop
cmp
dec
pop
aad
(bad)
das
pop
idiv
jne
addr16
xlat
and
ins
je
sbb
push
xchg
in
cmp
mov
and
jo
dec
mov
add
jae
xchg
dec
push
(bad)
push
mov
inc
and
js
jns
lods
or
loop
jg
pop
sar
dec
xor
inc
mov
sub
xor
fnsave
push
rcl
sub
sbb
adc
call
xchg
adc
outs
jge
mov
fwait
mov
mov
(bad)
mov
jge
push
xchg
xlat
add
pop
cmp
test
mov
push
repz
out
pop
cs
sub
test
es
jge
neg
push
jge
push
adc
stc
inc
into
into
xor
mov
add
ret
xchg
mov
dec
or
addr16
lock
mov
or
arpl
jo
mov
cmp
in
icebp
stc
jae
fs
jp
cmps
sbb
jno
in
movs
and
sub
mov
sar
jl
jns
not
pop
scas
mov
jo
data16
sbb
push
jecxz
shr
call
popf
dec
pop
adc
push
neg
jb
add
stos
aas
je
inc
iret
mov
shl
adc
in
push
jo
in
fist
sub
inc
sbb
xchg
and
push
addr16
pop
(bad)
in
mov
call
mov
aad
(bad)
ins
and
mov
sub
out
pop
inc
jle
adc
cli
ret
test
push
xchg
sti
mov
jg
pop
inc
mov
push
(bad)
iret
mov
or
(bad)
mov
xchg
jge
dec
and
inc
cmp
mov
out
pop
jnp
scas
xchg
das
xor
cmpxchg
ret
or
fiadd
mov
retf
fucomip
retf
test
sub
in
scas
mov
sub
cmp
fs
mov
sbb
pop
mov
add
sbb
mov
push
lods
mov
push
dec
cwde
(bad)
mov
mov
enter
shl
pop
enter
clc
aad
add
lods
and
fdivr
popf
call
adc
fdiv
push
(bad)
loopne
pop
dec
cmp
inc
pop
sbb
js
shr
dec
sbb
inc
pop
push
and
mov
fsub
cwde
pop
cli
fstp
or
pop
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
pop
jecxz
add
mov
adc
test
fsub
ss
sub
mov
fdivr
test
shl
push
fdivr
mov
sar
mov
inc
lock
inc
shl
add
and
mov
sar
mov
fdivr
mov
sar
mov
lock
inc
fsubr
xor
sar
enter
fsubr
mov
pop
mov
fnstenv
sbb
test
movs
add
sub
add
push
xor
movs
shl
mov
sbb
and
ds
je
(bad)
cdq
inc
jle
inc
mov
push
push
nop
and
pop
mul
jnp
xor
rcl
sbb
push
pop
pop
jnp
je
xchg
hlt
adc
mov
push
jp
inc
fld
push
mov
es
or
aam
jge
bound
gs
sub
test
mov
loopne
daa
xchg
push
icebp
xlat
cmc
xor
gs
shl
sub
lds
dec
or
sub
mov
push
jo
stos
ss
iret
pop
xchg
cld
data16
lahf
add
cs
pop
pxor
jge
sub
std
and
add
dec
sbb
cmps
push
or
mov
mov
aaa
ins
mov
or
sahf
cmp
test
repz
test
pop
retf
or
dec
push
sbb
std
and
je
dec
push
sbb
mov
ret
repnz
adc
movs
sub
stos
sbb
xchg
mov
out
sbb
or
cmp
mov
dec
lds
mov
xor
retf
inc
xchg
adc
int3
mov
std
mov
das
sbb
jg
jo
pop
push
ds
adc
in
mov
inc
mov
dec
lock
pushf
adc
int
dec
mov
sub
lods
loope
xchg
pushf
xchg
add
out
mov
xchg
inc
mov
scas
hlt
mov
scas
outs
int3
xor
imul
js
adc
xchg
or
fwait
push
in
aas
idiv
int3
ja
aad
in
movs
mov
test
inc
mov
movd
mov
dec
pushf
ins
clc
fldenv
or
hlt
pop
retf
cli
or
es
mov
ins
sub
xchg
cmp
stc
xchg
scas
pop
hlt
jnp
and
pop
data16
mov
rol
xchg
popf
cwde
lods
dec
stc
push
aas
xor
adc
fs
shl
mov
mov
ins
jge
ret
cmp
ds
fisub
mov
dec
mov
loope
rcr
or
mov
(bad)
call
cmp
cmc
push
shl
lods
xor
inc
retf
int
scas
adc
mov
and
test
loope
mov
retf
adc
sub
sub
aaa
test
lods
cmp
add
jnp
ins
xor
mul
rcl
mov
fbld
sbb
mov
pop
test
and
lods
sbb
movs
jg
adc
pop
jns
das
enter
cmp
pop
adc
xlat
subps
outs
jo
fisub
pop
hlt
sub
das
add
xchg
push
mov
jg
mov
xchg
jle
sbb
inc
ret
adc
adc
xor
fst
jbe
cli
push
jmp
lods
sub
cmc
sub
xchg
call
dec
sbb
mov
add
pop
jbe
aad
pushf
xchg
js
mov
ret
nop
push
cmc
fimul
in
mov
sahf
pop
mov
dec
and
scas
cmp
sbb
std
pop
push
xlat
push
arpl
ss
adc
fwait
cmps
cmp
or
mov
push
(bad)
push
in
popa
jae
add
and
adc
outs
scas
aam
inc
retf
and
lock
stos
fst
retf
push
xor
stc
xchg
sub
dec
sar
mov
pusha
rcr
cwde
jno
mov
icebp
jge
jbe
les
pop
dec
rcr
cmp
ins
jmp
inc
ins
xor
mov
cmc
lahf
push
out
nop
sub
cdq
mov
push
arpl
mul
mov
imul
or
push
jle
and
sub
fwait
add
das
cs
outs
popf
mov
mov
test
mov
imul
add
add
enter
ja
std
mov
rcr
dec
aam
sbb
and
xchg
sahf
aas
cmp
xor
pop
std
mov
mov
shl
cwde
push
fdiv
mov
fdivr
mov
rcr
inc
fmul
mov
dec
pop
cmp
jo
mov
pop
je
icebp
and
mov
fprem1
mov
dec
sbb
adc
or
mov
fistp
iret
lahf
sub
xchg
jns
mov
dec
movs
ds
sbb
xchg
cmp
push
xchg
jl
(bad)
aaa
sub
adc
test
imul
ret
popf
mov
stos
mov
movs
xchg
inc
fcomp
movs
std
cdq
add
push
mov
push
xor
mov
stos
adc
cs
ret
mov
mov
push
xor
cmp
or
aad
sbb
xchg
xor
pop
pop
xor
icebp
add
push
inc
xor
pusha
jmp
or
inc
jecxz
push
cwde
movs
outs
les
xchg
das
sbb
or
sbb
jmp
jmp
ds
dec
gs
pop
or
jnp
dec
fcom
mov
sub
mov
lods
fidiv
scas
xchg
xor
adc
xchg
fs
adc
in
add
sti
outs
ds
cmp
nop
jns
dec
jmp
cli
(bad)
mov
popa
jl
push
or
adc
xor
add
and
mov
xlat
mov
mov
and
and
pusha
or
or
adc
cmp
stc
ds
mov
sbb
repnz
(bad)
icebp
mov
retf
push
sbb
pushf
fdiv
xor
push
pop
push
xchg
dec
stos
add
sahf
or
cmps
push
xor
sub
jo
add
push
and
jno
rol
nop
jmp
jge
daa
cmc
out
adc
pop
movs
mov
adc
pop
push
idiv
pop
std
add
test
mov
sub
xchg
psubusw
xchg
arpl
mov
mov
and
jo
les
retf
test
arpl
pop
and
outs
mov
shr
rcl
cmps
mov
xchg
ins
hlt
inc
mov
sub
adc
sbb
jns
aaa
(bad)
cs
push
push
popa
push
retf
(bad)
sar
scas
ins
test
into
les
retf
daa
xchg
iret
movs
pop
or
adc
test
jmp
imul
aas
fsubr
jmp
sub
pushf
and
mov
mov
sbb
xor
(bad)
adc
adc
int
jg
stos
movs
pusha
adc
push
push
mov
xchg
mov
sbb
mov
movs
addr16
cmp
imul
xor
imul
out
cmp
xchg
push
call
(bad)
mov
adc
icebp
lods
sub
clc
push
outs
and
rol
cmp
xchg
xchg
rol
jle
or
retf
fldcw
cwde
nop
cmps
fucomp
xor
xchg
cmps
xor
mov
adc
xchg
fabs
test
adc
lock
jne
jl
pushf
adc
jo
call
lock
xchg
xor
jae
mov
push
mov
fcom
leave
push
rol
jge
aas
mov
int3
cmps
jge
jnp
cld
movs
jo
pop
int3
clc
push
popf
dec
ins
and
adc
fdiv
mov
push
retf
xchg
lods
fld
sub
cmp
dec
mov
fisubr
arpl
aaa
dec
jmp
ss
rol
mov
enter
movs
adc
cmps
sti
and
or
out
or
and
bnd
jo
mov
std
xor
adc
pop
cmp
jne
dec
push
or
comiss
jp
mov
out
inc
push
xchg
cmp
adc
mul
mov
nop
je
dec
sahf
xor
outs
pop
cdq
outs
and
stc
xchg
bnd
pop
pop
loop
ret
cmc
repz
and
xor
jbe
xchg
lea
icebp
pop
xchg
cmps
xchg
or
mov
(bad)
adc
jbe
jnp
enter
stc
push
inc
movs
xor
push
shr
cmp
xlat
ins
and
popa
arpl
push
cs
mov
addr16
sub
loopne
jg
jmp
aas
enter
lods
(bad)
loopne
in
add
add
das
jno
cmps
je
sbb
and
sbb
pop
in
call
lea
mov
jl
movs
pop
cmps
xor
and
ds
js
jns
add
popf
scas
repz
pop
sahf
int3
ficom
gs
movs
add
fist
add
xlat
jae
enter
cmp
shr
rcl
push
fisubr
ret
retf
push
mov
arpl
(bad)
fmulp
das
es
je
xor
adc
dec
aam
jns
pop
push
hlt
sub
addr16
aam
mov
imul
stc
clc
push
mov
xchg
mov
in
push
xchg
enter
cmp
mov
adc
mov
push
cmps
int
inc
xor
les
in
jae
add
xor
shr
dec
clc
cmc
nop
imul
mov
shr
mov
pop
(bad)
pop
dec
jne
dec
leave
hlt
sbb
inc
je
inc
push
fs
pop
loope
scas
rcl
aam
mov
inc
pop
sbb
fisttp
xlat
sti
cwde
jmp
add
out
lock
cmp
out
lds
push
aad
mov
sub
sahf
cmp
add
pop
fld
xchg
mov
sbb
(bad)
mov
imul
mov
mov
out
adc
retf
mov
push
call
mov
sub
dec
repnz
call
push
jns
pop
jmp
or
cmps
lahf
cmps
xor
push
mov
cwde
adc
int
mov
sti
jle
fisub
lods
loopne
(bad)
sbb
adc
jb
cmp
add
jg
bound
div
mov
sub
ins
ror
out
or
jbe
inc
std
arpl
mov
inc
ret
inc
cld
test
stos
aas
xor
(bad)
mov
add
sub
arpl
cmp
ja
jns
jmp
(bad)
fsubr
cmp
inc
out
dec
les
(bad)
or
xchg
fs
or
(bad)
pop
(bad)
(bad)
(bad)
jmp
mov
push
pop
jmp
sub
cld
ins
jne
xor
js
jo
ins
xchg
add
out
dec
inc
xchg
inc
jl
ret
inc
test
inc
ret
daa
cmp
movs
ins
sub
popa
mov
cmps
cli
mov
clc
adc
out
dec
les
js
into
dec
add
pop
mov
add
push
and
stos
outs
cmps
push
(bad)
imul
sub
sub
cmp
push
test
cmp
sub
ror
mov
out
cwde
cmp
dec
(bad)
push
xchg
(bad)
or
pop
sub
mov
lock
popa
adc
adc
inc
mov
sbb
mov
lea
or
adc
pop
sub
push
popa
xor
repz
jne
ds
loopne
out
inc
movs
push
cmp
aad
js
add
mov
int
jo
mov
pop
mov
or
mov
add
loopne
add
es
adc
ins
ret
fwait
and
mov
cld
enter
daa
push
test
adc
test
mov
push
(bad)
xor
mov
imul
in
and
sbb
push
int
out
mov
xchg
into
addr16
and
mov
push
xchg
jno
push
mov
dec
mov
ret
xchg
int3
xchg
jle
add
data16
and
mov
scas
cli
jl
mov
cdq
ss
sbb
mov
shl
fldenv
ja
mov
lea
jne
cli
psllq
cdq
bnd
adc
outs
cwde
(bad)
lock
xor
outs
push
sahf
in
and
test
lock
in
test
cwde
movsx
shr
or
sbb
push
xor
adc
cmc
add
xor
mul
mov
enter
push
cmc
adc
xor
call
stos
je
xchg
xlat
pop
jg
fild
outs
rcl
push
mov
add
stc
scas
xor
jns
out
push
ja
gs
out
and
mov
popa
mov
pusha
in
mov
sub
fdiv
pop
cmps
jmp
div
sar
push
push
xor
out
out
out
dec
push
in
jmp
sub
pop
(bad)
hlt
enter
dec
arpl
and
cld
movs
int
pushf
xor
out
cmp
sub
imul
shr
leave
mov
pop
jl
jl
mov
push
test
push
(bad)
loop
cmp
cmp
into
movs
psrld
clc
push
leave
les
icebp
sti
mov
cmps
push
(bad)
mov
sahf
nop
pop
arpl
daa
xchg
out
sbb
jg
stc
mov
sbb
cmc
repnz
sbb
xor
and
jle
push
fist
mov
cmp
cwde
test
outs
in
ins
in
mov
mov
aas
dec
jne
outs
rol
repnz
add
out
shr
xchg
sti
stc
jecxz
push
loopne
xchg
xor
int3
rcl
and
sbb
cmp
pop
test
sbb
dec
inc
das
xor
sbb
dec
loopne
aas
cmp
hlt
jne
cmps
sahf
mov
dec
adc
cdq
sbb
push
adc
jns
sub
mov
mov
inc
sbb
out
add
push
out
jge
add
mov
icebp
movs
rol
outs
mov
dec
xor
sbb
daa
test
fucomp
inc
or
imul
xchg
mov
mov
push
out
retf
js
jge
imul
data16
inc
jo
sub
add
push
aad
jmp
xchg
sbb
stos
pusha
pop
and
or
int
mov
push
adc
mov
test
cmps
lea
jnp
jne
cs
jge
sub
loope
mov
out
cmp
out
sub
cld
mov
mov
test
inc
push
fidivr
jecxz
in
arpl
aad
arpl
std
mov
fdiv
mov
push
dec
cmc
and
in
sub
jno
xor
in
dec
rcl
push
dec
pop
mov
aam
mov
dec
push
sbb
and
mov
mov
imul
ds
aad
stos
movs
dec
int3
test
push
and
mov
lods
aam
cli
inc
dec
jo
sub
pop
(bad)
push
xchg
jae
mov
sahf
sub
into
pop
in
retf
mov
icebp
xlat
stos
lock
mov
movs
imul
add
xchg
add
jle
mov
inc
aaa
pushf
shl
sub
(bad)
inc
fwait
(bad)
push
pop
sbb
ss
rcr
and
retf
in
xor
inc
pop
data16
xchg
ret
jge
add
xor
dec
mov
inc
push
pusha
icebp
or
ror
sbb
and
icebp
cmps
pop
out
mov
addr16
shr
cmp
and
imul
fs
ror
jp
jp
pop
pop
sbb
jns
pop
adc
bound
cmp
out
sub
call
pop
mov
xchg
shl
out
xchg
call
movs
dec
pusha
pop
dec
push
mov
add
xchg
test
xchg
pushf
add
jmp
loope
retf
mov
fidiv
inc
add
mov
pushf
ja
add
add
loope
inc
and
dec
jmp
(bad)
jbe
mov
stos
shr
inc
pop
push
jae
adc
dec
xor
in
push
js
addr16
mov
out
in
push
enter
lea
mov
or
sbb
repz
dec
sbb
popf
add
push
addr16
addr16
iret
call
(bad)
and
xchg
push
mov
mov
mov
call
lds
imul
add
stos
pop
cmps
sub
dec
cwde
and
push
push
jne
push
adc
int3
idiv
fnsave
xchg
mov
sbb
mov
int
icebp
pop
out
ds
fnsave
test
xor
fst
pop
mov
and
jl
push
lods
scas
sub
and
imul
fadd
sahf
xor
fdiv
sahf
dec
mov
fcos
rcr
push
jne
cdq
sub
(bad)
mov
push
shr
mov
jmp
or
jmp
stos
or
push
dec
jne
cmp
retf
mov
sbb
rcr
sbb
inc
cwde
adc
repz
jmp
lods
mov
add
fsub
push
dec
js
imul
ret
mov
psubsw
mov
adc
mov
push
jecxz
add
repnz
lds
(bad)
mov
mov
xor
cwde
sub
push
(bad)
(bad)
add
(bad)
data16
fdivr
pop
add
std
je
(bad)
mov
outs
pop
adc
rcr
push
aad
or
mov
cmps
sub
lods
fistp
pusha
xchg
rcr
neg
jl
xchg
bound
push
scas
outs
sub
xor
jne
inc
and
jae
add
movs
stos
cs
jnp
(bad)
in
loop
call
stc
popa
(bad)
mov
shl
(bad)
ds
ret
dec
sub
add
ins
xchg
mov
cmp
mov
adc
push
loopne
enter
xchg
adc
icebp
out
lea
repz
jecxz
add
stos
aam
mov
cmp
cmp
jnp
clc
bound
int
mov
inc
sub
xchg
daa
into
add
in
pusha
pushf
pop
sub
mov
cmp
inc
mov
mov
adc
test
cmp
mov
lods
js
pop
shr
int
test
and
adc
mov
adc
aam
adc
mov
jns
sub
xlat
inc
sub
loope
fisubr
jge
cmps
xor
fwait
cmp
out
xlat
movs
scas
or
xchg
fsub
inc
imul
jae
and
addr16
jle
in
jmp
cmc
cdq
std
(bad)
add
adc
xor
pop
inc
and
je
dec
fs
fild
es
movs
(bad)
fldcw
cs
cmps
push
out
pop
mov
imul
into
mov
mov
push
mov
out
xlat
mov
aaa
cmp
and
sub
sub
shr
xchg
popf
mov
adc
xchg
and
inc
fwait
or
push
adc
xor
leave
dec
xchg
mov
dec
sub
mov
in
mov
xchg
adc
inc
xchg
mov
sub
mov
jno
fs
cmc
add
pop
lock
mov
or
xchg
xchg
sti
pop
pop
loop
dec
xchg
enter
stos
mov
mov
sbb
adc
ds
mov
sbb
ffree
repz
pop
inc
out
call
retf
add
sub
cs
mov
cwde
lods
lods
mov
pop
dec
scas
loop
retf
or
rol
jmp
call
push
stc
call
inc
sbb
add
std
cmp
ror
inc
stc
push
movs
dec
ret
cmp
in
int
pushf
jle
push
mov
mov
(bad)
imul
fisubr
cmp
xchg
test
in
dec
dec
jmp
(bad)
pop
xor
test
ss
(bad)
xchg
mov
add
fstp
mov
ror
sub
xchg
sub
fs
or
mov
nop
inc
xchg
mov
call
push
int
arpl
mov
inc
(bad)
jg
jnp
(bad)
scas
orps
les
pushf
dec
sub
adc
jmp
daa
xchg
(bad)
shr
push
mov
cs
ja
pop
dec
mov
or
sbb
test
pop
jecxz
or
iret
bnd
xchg
jmp
xor
mov
xor
fdiv
and
test
in
pushw
adc
sub
xchg
idiv
pop
jne
push
xchg
push
pop
pop
scas
scas
inc
js
shr
inc
sbb
cli
and
in
inc
call
repnz
xor
or
into
fsubr
jbe
(bad)
imul
iret
inc
ucomiss
scas
jecxz
cmovge
int
cmps
stos
(bad)
and
add
mov
sub
push
shr
es
std
lahf
dec
aaa
cmp
ins
adc
dec
and
xchg
dec
lods
into
gs
js
xchg
adc
sub
sub
pop
scas
jne
pop
repz
and
call
outs
push
cmc
sbb
or
xor
popa
fmul
adc
lods
push
mov
ror
in
sti
ja
out
nop
mov
fsub
mov
arpl
cmc
cwde
jae
std
mov
sar
push
dec
aad
retf
push
pop
stos
dec
fnstenv
ror
in
cmp
pop
push
sub
aad
fdiv
retf
adc
ret
fucomip
push
lahf
rol
in
mov
inc
dec
xor
icebp
cmp
mov
xchg
ror
jne
sbb
jns
sbb
dec
xchg
push
fsub
lahf
add
aad
mov
test
imul
ins
das
(bad)
hlt
fidivr
push
sub
sbb
int
adc
xchg
out
mov
jae
pop
mov
xor
in
mov
shl
dec
mov
and
stc
ds
adc
pop
jo
push
lds
out
scas
adc
repz
jno
push
mov
sbb
daa
movs
out
out
push
jecxz
mov
add
out
inc
sbb
push
bound
sub
push
out
fnstsw
pop
cmp
cmps
dec
and
or
pop
arpl
push
call
push
in
mov
push
mov
lods
imul
dec
sub
mov
push
enter
mov
aad
into
iret
jl
cli
push
jne
sbb
and
mov
jne
ret
mov
mov
mov
dec
adc
arpl
in
add
xchg
or
pushf
pop
sahf
sbb
sbb
pop
sbb
test
push
inc
sbb
gs
adc
jae
(bad)
cs
iret
xor
and
mov
es
mov
fild
test
mov
mov
mov
jnp
inc
xor
int3
xchg
and
mov
inc
jle
jge
pop
loope
scas
fiadd
bound
ins
pop
hlt
push
jne
jg
ret
into
bound
jle
(bad)
sbb
xlat
clc
adc
lods
repz
fistp
sub
or
add
cmp
mov
add
xor
pushf
int3
jno
add
stos
pop
ds
lds
in
pop
xor
dec
jge
dec
cmp
jmp
dec
mov
int
enter
inc
cmps
leave
mov
mov
cmp
int3
shl
mov
cmp
dec
mov
add
jb
les
mov
xchg
int3
push
stos
mov
add
loopne
std
xchg
out
ror
mov
sub
data16
mov
dec
fsub
xor
test
mov
mov
pop
scas
adc
inc
loopne
jge
push
pushf
or
inc
inc
xchg
sub
imul
jmp
or
sbb
pop
lea
ins
test
in
jne
mov
xchg
int3
add
mov
lods
mov
xchg
pusha
xchg
repnz
retf
pop
js
fidiv
cmps
outs
shr
push
inc
xor
in
mov
out
fsub
jbe
xchg
mov
xor
popa
fnsave
(bad)
in
push
and
arpl
jae
jo
stos
push
jns
mov
mov
inc
sbb
or
mov
data16
clc
or
in
mov
cmp
(bad)
adc
fdiv
addr16
sub
jae
cmp
mov
cmp
dec
out
mov
mov
sub
cmps
push
lds
ins
icebp
sbb
pop
lea
std
aaa
sbb
pushf
hlt
or
mov
scas
add
push
mov
xchg
jmp
maxps
call
aad
hlt
mov
outs
imul
xor
xchg
cmps
sbb
call
jno
mov
add
xchg
stos
into
jmp
lds
test
pop
(bad)
mov
pop
or
xchg
retf
repnz
cmps
cmp
test
imul
mov
xor
call
sub
sbb
les
xchg
stos
je
and
imul
retf
popa
sti
arpl
stos
popa
je
inc
add
je
push
mov
gs
repz
mov
cmp
add
stos
into
mov
mov
ins
pusha
cmc
sbb
(bad)
mov
into
sub
dec
test
into
aam
xlat
loop
test
adc
imul
dec
sbb
stos
(bad)
lahf
pop
sub
in
call
nop
dec
cmp
loop
lds
retf
out
xor
aas
inc
repnz
lds
sub
jp
retf
jnp
push
sbb
jecxz
mov
fxch
sbb
movs
jae
push
jl
sub
jnp
shl
pop
repnz
mov
or
mov
icebp
out
sub
xchg
mov
loope
ret
sahf
lahf
inc
call
les
repnz
jo
(bad)
push
sub
mov
push
add
cmp
add
movs
jnp
mov
sbb
mov
jp
pop
or
movs
pop
or
shr
or
push
in
cwde
mov
jp
mov
jg
add
adc
dec
jecxz
adc
inc
fstp
inc
dec
adc
daa
sub
xchg
pop
sti
and
ss
cmps
xchg
sahf
and
sbb
sar
or
xchg
add
cmc
mov
or
dec
or
data16
add
into
mov
(bad)
xor
sar
jbe
cmp
push
xor
sbb
in
dec
xchg
mov
loop
loope
repnz
call
mov
jne
mov
daa
pop
sub
cwde
add
mov
pop
mov
sar
imul
(bad)
(bad)
loopne
test
test
cli
mov
popf
mov
dec
mov
and
pushf
fidivr
mov
mov
dec
jle
adc
inc
jae
push
inc
mov
and
lods
or
fld
jbe
std
js
aas
into
mov
inc
retf
retf
inc
sub
push
sbb
xchg
mov
in
xor
sbb
inc
xchg
mov
push
jecxz
jle
xor
(bad)
clc
pop
clc
(bad)
pop
ficomp
sbb
push
sbb
adc
mov
lods
jmp
mov
xchg
or
xchg
bound
sub
mov
sub
jmp
dec
shl
xor
ds
xor
push
xlat
iret
popa
jno
movs
cmc
stc
pop
pop
icebp
outs
xor
sbb
mov
mov
shl
pop
(bad)
in
icebp
cmp
stos
aaa
shr
add
xor
add
inc
push
movs
push
test
lds
adc
mov
inc
sbb
sar
daa
retf
arpl
mov
pop
shl
xchg
mov
mov
movs
pop
add
mov
mov
sub
call
fdivr
push
sahf
adc
sbb
xor
or
dec
mov
adc
je
pop
mov
or
loop
adc
retf
fnsave
js
jo
jecxz
out
idiv
jle
mov
call
addps
fild
xchg
lock
mov
cmp
out
add
jmp
dec
imul
out
inc
add
jle
addr16
rol
pop
push
clc
pop
cmp
bound
fidivr
cli
mov
mov
add
int3
xchg
pushf
or
sbb
mov
(bad)
adc
add
mov
cmps
lea
stc
xchg
jbe
(bad)
xchg
ret
push
idiv
out
ret
movs
and
das
cdq
mov
(bad)
jmp
jle
iret
stos
cli
repz
jecxz
cdq
jo
jae
lds
dec
stc
call
push
mov
mov
in
sbb
add
icebp
and
lods
inc
inc
jae
enter
mov
xchg
mov
bound
inc
imul
icebp
stos
cmp
or
xor
popa
and
sar
fld
inc
sbb
pop
mov
or
outs
das
add
mov
cld
jno
icebp
(bad)
mov
cmp
mov
sbb
pop
fidivr
jmp
pop
cmp
jns
and
test
xor
sub
and
dec
jne
mov
jo
js
sub
imul
adc
jge
xchg
jp
cmp
sti
fst
loopne
sub
adc
iret
dec
sub
mov
mov
(bad)
sbb
mov
bound
mov
add
pop
test
sbb
xchg
inc
(bad)
test
adc
cmps
jbe
sub
icebp
push
aad
outs
scas
outs
(bad)
adc
pop
or
test
lock
xchg
jmp
enter
(bad)
xchg
loope
pop
js
aam
cmp
adc
adc
movs
pop
fild
push
jg
sahf
lods
cmp
scas
retf
mov
xchg
fnstsw
jle
xchg
(bad)
xchg
fld
pop
mov
jbe
xor
jnp
push
test
stos
sbb
retf
jae
dec
mov
sub
sub
call
push
xor
es
sbb
sub
or
loope
or
shl
mov
xchg
fnstenv
or
in
xchg
xchg
inc
and
in
push
cdq
sti
out
sbb
and
xor
jne
out
fwait
rcr
(bad)
sbb
adc
stc
fnsave
movs
or
test
jmp
xchg
push
mov
rcl
add
aaa
mov
add
(bad)
cmp
adc
call
mov
leave
jle
push
out
movs
jle
div
out
dec
cdq
or
jb
or
jae
icebp
out
or
pusha
(bad)
aas
retf
mov
lods
mov
mov
retf
push
add
imul
loopne
mov
mov
rcr
xor
leave
sbb
push
jl
inc
fistp
scas
repnz
add
inc
pop
add
or
sbb
setge
sti
imul
leave
mov
bound
or
push
sub
push
and
ret
ss
push
inc
sub
scas
or
movs
push
call
adc
stos
jae
jle
repnz
sbb
dec
xchg
mov
sahf
fucom
loopne
or
(bad)
test
or
sub
sub
pop
mov
or
sbb
(bad)
fld
mov
pushf
aaa
aaa
sub
xchg
mov
fst
out
mov
cli
xchg
clc
test
loop
mov
frstor
sbb
or
mov
ficomp
es
dec
out
or
fist
sub
mov
in
out
pop
mov
loopne
aam
sub
jge
ret
push
cdq
pop
call
pusha
mov
jp
test
lds
in
xchg
cwde
mov
lods
or
jl
imul
data16
cmp
dec
pop
sub
jae
rcr
pushf
fst
mul
bound
or
out
(bad)
scas
xchg
dec
mov
(bad)
and
jecxz
out
in
cli
sub
lods
scas
push
lods
test
inc
lock
out
or
call
mov
xchg
sbb
sbb
hlt
pop
bound
mov
cmp
jge
add
lahf
cmpps
inc
stos
and
nop
xchg
repnz
shl
and
into
or
ins
dec
and
pop
push
addr16
dec
dec
bound
retf
out
xor
and
bound
(bad)
push
(bad)
gs
cmp
aaa
push
pop
jo
mov
jb
inc
int
shr
retf
int3
rol
sahf
cmc
sub
(bad)
push
xchg
inc
out
call
out
or
cdq
mov
sbb
mov
adc
cli
jp
or
add
imul
mov
pop
push
and
aaa
hlt
xchg
push
inc
fadd
lods
inc
cs
(bad)
mov
cmp
mov
lahf
or
in
lods
xlat
mov
ror
and
(bad)
mov
ret
test
add
mov
mov
and
je
hlt
in
ffree
icebp
mov
and
stos
js
add
pop
popa
sub
imul
mov
fld
loop
leave
sar
mov
push
ins
inc
add
ss
test
mov
adc
loop
jnp
mov
jg
mov
into
fstp
mov
jmp
add
lods
es
popa
and
js
jecxz
es
test
pop
pop
sbb
xor
xor
lea
sub
push
jne
add
sbb
test
mov
jg
sub
aas
je
aas
movs
pop
(bad)
inc
in
adc
inc
or
ret
cmp
loopne
push
xchg
fcmovb
lahf
xchg
repz
aad
shl
sbb
sbb
mov
push
or
dec
mov
jnp
sti
outs
mov
cmp
jecxz
push
stos
inc
lds
add
mov
add
stos
(bad)
sbb
mov
movs
mov
jb
cmps
fmul
iret
pop
pop
cmp
inc
jo
push
sbb
mov
sub
and
adc
inc
mov
pop
stc
jl
mov
addr16
add
das
int3
adc
in
adc
fs
xchg
or
pop
xor
ja
cmp
sbb
movs
jne
(bad)
push
in
xor
mov
(bad)
neg
jl
(bad)
fnstsw
sti
rcr
cmc
lods
mov
into
mov
icebp
scas
ror
and
je
(bad)
add
inc
lds
test
push
bswap
jb
out
mov
lods
push
adc
adc
scas
pusha
jnp
ret
xchg
ins
jne
into
mov
sub
stos
sub
bsr
sub
mov
(bad)
mul
cwde
sub
mov
mov
iret
and
ins
sbb
ja
fst
jns
scas
out
sahf
sub
sbb
xchg
enter
push
outs
sahf
lea
fs
mov
and
imul
push
mov
sahf
push
pop
mov
fnsave
sbb
push
adc
and
jb
jae
nop
stc
mov
mov
add
xor
push
or
mov
xchg
or
clc
mov
fsub
mov
arpl
std
mov
shl
inc
pop
hlt
xor
pop
idiv
dec
(bad)
ds
pop
jb
dec
push
add
int
cmc
mov
inc
call
xchg
int
mov
aaa
mov
clc
retf
fstp
fimul
xchg
les
sub
sahf
ins
push
mov
and
hlt
adc
ficom
adc
cli
icebp
and
mov
dec
adc
mov
adc
cmps
adc
jl
(bad)
(bad)
mov
ds
mov
sbb
rol
inc
dec
pop
(bad)
icebp
(bad)
aaa
jno
sub
std
mov
or
loope
movs
loopne
xchg
ins
(bad)
mov
lock
imul
pop
jae
cdq
ja
jp
add
addr16
mov
scas
sbb
test
js
ja
(bad)
pop
pusha
jno
ins
aaa
gs
mov
mov
mov
fmulp
lea
pop
push
icebp
(bad)
jg
pop
jmp
gs
mov
push
loope
ficom
adc
cmp
and
sbb
mov
int3
or
fwait
or
outs
and
in
pop
int
popf
bound
popa
mov
cli
dec
ret
jb
mov
ret
dec
mov
inc
xor
adc
pop
dec
mov
scas
ja
data16
iret
sar
and
cmps
ins
scas
lds
aam
fidivr
dec
and
call
les
mov
rcl
retf
jnp
ret
xchg
call
add
mov
lods
push
out
cmc
adc
in
cmp
cmps
jne
dec
out
loopne
fist
(bad)
jmp
iret
lock
add
lock
aam
add
sub
mov
xor
(bad)
xchg
lods
mov
or
mov
in
xchg
dec
rol
sub
or
in
rol
dec
xchg
push
xor
jmp
mov
push
or
mov
push
mov
xlat
xchg
xor
add
rcl
inc
ds
mov
repnz
fs
rcr
cmc
aam
ret
sti
mov
cmp
cdq
pop
xlat
es
sub
xchg
test
out
mov
sbb
add
xor
mov
sar
dec
push
adc
inc
xchg
arpl
and
add
test
mov
js
addr16
into
jge
dec
pop
sub
add
push
int
repnz
add
inc
push
inc
(bad)
popf
mov
mov
push
pop
retf
mov
xchg
enter
in
daa
jno
jl
or
and
sub
mov
xchg
outs
cmp
xchg
fild
stos
aas
arpl
cmc
xor
loope
jmp
dec
inc
pop
cdq
mov
sbb
retf
repnz
xchg
or
cmps
enter
add
xchg
push
call
mov
mov
adc
mov
sbb
les
ret
imul
xchg
fimul
and
fistp
pop
mov
jmp
jge
out
inc
jl
(bad)
pushf
jbe
mov
push
push
pop
xchg
sar
aam
xchg
loope
cld
imul
pop
jb
fs
sbb
lods
cmp
ja
mov
js
or
xchg
call
xor
hlt
sbb
cmp
sbb
fs
jno
in
and
lahf
jg
ss
adc
mov
mov
or
xor
sub
inc
mov
ficomp
pop
push
std
xchg
outs
hlt
lock
in
mov
js
(bad)
cld
xchg
mov
sbb
push
cwde
stos
sub
(bad)
pop
push
nop
jge
out
xor
ja
dec
dec
rcl
(bad)
div
lahf
fist
jecxz
jns
push
xor
cmp
int
push
xchg
lods
push
imul
stos
rcr
out
and
add
dec
xchg
mov
xchg
ins
pop
jle
call
and
dec
mov
lods
ins
jo
sbb
sub
mov
jno
add
mov
dec
test
jbe
retf
repz
xchg
shl
call
sub
mov
hlt
cdq
or
sub
cld
jp
ins
mov
loop
retf
xchg
mov
jb
(bad)
in
stc
sbb
inc
nop
inc
jmp
xlat
cmp
lods
sbb
add
cmps
je
mov
mov
(bad)
mov
xchg
dec
pop
xchg
dec
adc
das
pcmpgtd
(bad)
imul
xchg
push
scas
sbb
and
xor
jno
xchg
inc
(bad)
fist
scas
outs
lea
mov
out
adc
fist
sub
mov
dec
jnp
push
cmc
pop
in
sbb
xchg
mov
outs
mov
bound
ret
ja
scas
cmp
in
mov
test
(bad)
(bad)
mov
cmp
adc
sub
ja
arpl
sub
dec
or
lods
in
mov
int3
movs
lahf
jecxz
in
and
push
add
es
jne
stos
inc
ret
repz
cwde
test
adc
xchg
test
sub
xor
lods
ror
adc
imul
dec
xchg
popa
jmp
mov
inc
jp
adc
adc
mov
aam
ret
fisttp
push
shl
sbb
sub
pusha
test
jmp
(bad)
or
jo
and
enter
adc
int
jp
nop
xor
js
stos
mov
mov
jp
retf
cwde
out
pop
call
xchg
xor
mov
in
leave
or
mov
lds
movs
sub
cli
sar
fs
call
pusha
pop
aas
inc
dec
(bad)
in
pop
push
stos
xor
(bad)
mov
loopne
loop
and
xor
cmp
adc
mov
mov
mov
arpl
xchg
bound
push
sbb
jne
shl
outs
cmp
out
pusha
imul
std
aam
jo
jo
dec
retf
ja
jne
idiv
adc
call
mov
ja
mov
ja
(bad)
push
inc
es
ret
or
mov
inc
scas
(bad)
popf
xchg
inc
sbb
mov
mov
test
jns
push
stc
dec
fs
add
adc
mov
ds
lock
icebp
(bad)
adc
jg
cmp
push
mov
sbb
mov
mov
test
pop
mov
data16
cmp
adc
add
xchg
test
jl
movs
fbld
aad
cli
mov
retf
addr16
je
call
cld
inc
add
movs
fdivr
jae
jg
in
push
jo
cmp
cs
pop
xor
push
inc
xor
lods
xor
imul
mov
jae
inc
sub
add
xchg
cs
xchg
in
sub
lds
mov
push
cmc
inc
jns
lds
jno
gs
loop
(bad)
lods
adc
cmc
mov
add
add
adc
mov
retf
sbb
xchg
mov
(bad)
fdiv
into
inc
jbe
jle
cmp
add
sub
ret
add
sbb
repz
in
pop
sbb
mov
fistp
dec
stc
mov
(bad)
fbstp
pop
shl
fcomp
(bad)
lock
mov
cmp
sbb
lahf
in
xchg
inc
outs
mov
(bad)
loop
xor
xchg
dec
push
adc
sbb
jns
(bad)
fs
retf
and
mov
push
hlt
setle
loope
mov
sbb
fld
test
not
sbb
mov
loopne
add
imul
sub
lock
ins
pop
cmc
cmps
and
fild
cmp
out
and
ror
add
in
(bad)
jg
mov
dec
cmps
ins
das
cmp
pop
and
loopne
mov
jbe
rol
sub
scas
push
or
inc
(bad)
loopne
sub
addr16
call
inc
add
adc
inc
mov
jmp
cmc
icebp
jge
xchg
push
loopne
mov
jge
data16
cwde
daa
(bad)
mov
mov
xchg
fucom
jbe
sub
or
out
adc
icebp
(bad)
int3
fmul
mov
dec
or
mov
pop
push
or
fcomp
and
sar
aam
dec
jne
enter
sub
dec
test
or
sub
iret
in
(bad)
jl
fst
xchg
or
pop
shl
movs
hlt
cmp
xchg
push
pusha
(bad)
ret
xor
add
inc
add
stc
test
retf
jne
div
popf
sub
dec
xchg
in
gs
xchg
or
ins
pop
in
push
std
adc
adc
add
adc
push
cli
out
cwde
mov
add
cmc
mov
push
loopne
leave
adc
mov
cmp
fcom
ins
rcl
pop
pop
fsubr
jecxz
sbb
lods
mov
pop
out
jmp
pusha
cmp
mov
push
int
push
or
rcr
and
nop
test
stc
xlat
xchg
jno
pop
mov
xchg
push
cwde
retf
dec
dec
push
int3
xchg
mov
mov
ins
cmp
int
cmp
jecxz
aaa
rcr
adc
cld
loop
fimul
xchg
mov
cmp
(bad)
xlat
mov
mov
(bad)
pop
mov
ins
out
inc
mov
fmul
out
sti
pop
retf
pushf
fld
gs
cmp
adc
push
and
aaa
push
pop
mov
(bad)
mov
jae
xor
mov
mov
std
mov
inc
nop
(bad)
sar
outs
mov
ror
jns
(bad)
xchg
(bad)
cmp
adc
(bad)
adc
aam
test
jg
rol
aam
stos
cmp
mov
dec
or
jge
dec
leave
ss
neg
mov
sbb
jbe
xchg
xor
push
add
out
pop
mov
inc
and
(bad)
mov
sbb
mov
mov
outs
rcr
jns
pop
sbb
lahf
jb
test
push
(bad)
push
xchg
dec
jmp
adc
imul
dec
sub
dec
mov
(bad)
fisubr
mov
xchg
fadd
xor
in
mov
dec
enter
fdivr
mov
dec
sar
leave
fnstcw
push
icebp
aas
dec
pop
lock
psubq
mov
pop
push
dec
mov
sti
cdq
xchg
sub
jbe
ud1
ja
(bad)
xlat
ja
adc
rcl
pop
mov
jno
not
jae
inc
mov
sar
in
ror
movs
rcr
pushf
jge
lds
inc
jns
dec
lahf
mov
sbb
sub
push
hlt
jmp
pop
leave
inc
pop
xor
fbld
daa
fstp
arpl
mov
jb
jne
outs
mov
adc
test
(bad)
test
sar
dec
rcl
ficom
int3
not
cwde
push
aad
cmp
popa
test
and
jnp
mov
dec
and
pop
je
(bad)
cmp
daa
out
out
mov
jge
xor
jle
jmp
pop
lahf
in
mov
and
leave
fild
inc
mov
loop
iret
lods
xor
xchg
mov
pop
inc
int3
(bad)
sar
rcr
add
jmp
dec
sub
test
inc
in
xchg
test
ja
ja
nop
mov
clc
mov
sti
sbb
xchg
pusha
xlat
push
jecxz
push
out
call
and
call
jmp
mov
cmp
or
jmp
mov
and
jge
xchg
xchg
dec
jb
add
call
dec
xor
stos
test
popf
push
add
jno
inc
dec
int3
xchg
fsub
dec
adc
pop
adc
mov
jno
and
bound
cmc
and
xlat
pop
xor
mov
mov
add
or
mov
in
fisubr
outs
test
inc
mov
lock
lock
or
add
icebp
fadd
xor
imul
mov
push
or
jno
std
stc
movs
push
(bad)
ret
fcom
ss
repz
add
dec
push
jo
les
inc
add
adc
mov
aad
xchg
xchg
in
pushf
xor
cmp
lahf
sub
scas
movs
or
sub
leave
enter
(bad)
xor
test
inc
xor
mov
je
mov
dec
dec
in
mov
stos
pop
pushf
lock
inc
lock
inc
enter
dec
cli
leave
ret
pop
fld
pusha
inc
pushw
jg
data16
dec
sbb
(bad)
sbb
jg
inc
dec
inc
add
into
add
mov
inc
iret
mov
pop
aam
sbb
mov
mov
enter
test
pushf
dec
dec
test
das
push
nop
lock
imul
leave
mov
lock
adc
icebp
test
jmp
in
mov
addr16
in
sbb
mov
cmp
pushf
xor
ret
(bad)
out
and
sbb
sbb
jo
xchg
test
mov
pop
mov
mov
in
sub
adc
jmp
mov
mov
cld
les
out
inc
push
jne
mov
jo
dec
mov
jne
popf
cmp
lock
sbb
pop
jae
ret
in
lock
iret
and
pop
daa
in
dec
test
retf
mov
sub
iret
fbstp
jae
cmp
dec
pop
loope
push
cli
pop
cwde
dec
loope
ins
ins
imul
ins
jmp
xchg
sbb
jne
add
(bad)
stc
out
push
push
ret
rol
sub
outs
test
xchg
adc
push
dec
push
addr16
and
sti
push
mov
(bad)
mul
cmps
sbb
loopne
ret
xor
mov
int
lock
jge
jno
jg
adc
inc
sbb
sti
lock
fsub
mov
jae
std
mov
inc
pop
hlt
xor
jle
dec
(bad)
inc
fnstcw
int
add
lahf
cmc
mov
dec
dec
(bad)
loop
movs
sbb
std
push
dec
mov
mov
sahf
mov
scas
in
data16
jmp
and
(bad)
mov
and
dec
mov
dec
cmp
cli
xchg
or
cmps
scas
pop
fcmovnb
jae
iret
movs
push
sub
in
xchg
jp
call
inc
sub
mov
shl
push
xchg
xor
adc
clc
mov
xchg
pop
dec
sub
shl
cld
lea
sub
imul
loope
mov
pop
pop
outs
mov
lahf
test
and
pop
repnz
xchg
shr
lods
sub
retf
inc
in
dec
jne
jne
push
xor
rcl
push
ja
xor
icebp
or
add
cli
pop
mov
outs
test
(bad)
cmps
retf
or
mov
push
movs
sar
stc
sbb
test
lahf
gs
xchg
sub
or
lahf
data16
xchg
dec
inc
fmul
mov
sub
test
movs
cmc
popf
adc
test
mov
mov
xor
sti
gs
sbb
xchg
stc
inc
xor
loope
(bad)
sbb
outs
test
retf
sub
ja
mov
dec
mov
int3
cmp
fidiv
enter
(bad)
push
and
add
repz
inc
push
xchg
mov
outs
scas
xchg
push
xchg
fs
aas
add
push
mov
loope
out
jne
(bad)
jmp
popa
inc
nop
mov
int
and
std
pusha
fwait
out
mov
ins
push
xchg
(bad)
mov
(bad)
jp
ds
in
imul
mov
mov
stc
loopne
mov
fucomi
dec
adc
hlt
inc
cmp
mov
jg
sbb
mov
dec
lods
inc
sbb
jnp
call
cmp
stc
int
retf
mov
mov
cwde
loopne
test
retf
and
(bad)
loopne
test
mov
jne
mov
push
add
xchg
ret
add
nop
(bad)
shl
adc
inc
dec
call
mov
xchg
sbb
or
bound
rcr
mov
ds
mov
rcr
mov
push
mov
popf
push
adc
scas
cs
sbb
mov
xlat
out
shl
jmp
mov
dec
fwait
or
ins
dec
shl
xchg
adc
xor
push
int
mov
and
pusha
pop
shl
jge
mov
(bad)
les
mov
jns
sbb
mov
imul
or
fsubp
(bad)
popf
outs
mov
mov
cld
mov
sahf
dec
stos
inc
push
pushf
jg
add
sbb
xchg
xor
cmp
push
and
mov
sbb
push
imul
and
add
inc
jmp
mov
test
xchg
cmc
(bad)
sub
cmp
mov
or
clc
std
push
iret
inc
or
les
call
or
dec
jmp
mov
mov
icebp
lods
fwait
nop
push
push
jno
cs
add
iret
ret
mov
das
xor
test
sbb
xchg
and
xor
adc
cmp
call
mov
adc
jbe
(bad)
fnstcw
inc
test
sub
mov
je
outs
cmc
cld
and
mov
jno
mov
in
leave
and
popa
xor
and
popf
movs
sbb
rcr
mov
call
cli
mov
cmp
cmc
in
dec
adc
pop
dec
mov
xor
jae
das
popa
repnz
(bad)
fdivr
lock
adc
dec
mov
and
jae
inc
inc
add
jp
adc
out
push
add
jo
ror
jnp
fist
call
cmp
xlat
push
inc
pop
add
inc
inc
mov
int
xor
dec
jecxz
and
stos
sub
repz
push
jnp
mov
push
in
(bad)
mov
cld
test
imul
outs
addr16
cmp
dec
mov
nop
pusha
popf
or
pop
and
out
scas
call
adc
cld
dec
sbb
les
div
jge
cmps
je
pop
je
xchg
sahf
and
es
loope
push
fwait
loop
mov
sbb
fwait
jle
shl
add
push
cmp
and
adc
cmp
pop
or
jmp
fld
cwde
movs
lahf
jl
inc
shl
mov
inc
shl
arpl
std
mov
retf
cmp
std
xor
js
dec
pop
jae
dec
push
sti
clc
mov
pop
lea
mov
jns
mov
add
es
mov
mov
pop
cmp
fnstcw
clc
pop
pusha
mov
mov
mov
icebp
stos
hlt
push
leave
mov
add
out
leave
loopne
sbb
repnz
inc
les
int3
or
mov
pushf
pop
add
add
sbb
in
aad
fs
repnz
in
add
mov
mov
in
(bad)
dec
jo
and
adc
(bad)
retf
clc
in
mov
push
mov
pop
push
lock
push
jne
imul
addr16
xor
pop
inc
inc
adc
mov
test
jnp
clc
inc
pop
outs
push
pop
sub
mov
and
outs
mov
inc
addr16
cmp
mov
fnstsw
(bad)
add
cli
sub
add
(bad)
cld
mov
ja
pop
jno
shl
xchg
or
jmp
inc
call
push
xchg
add
mov
mov
popa
int
cmp
stos
ja
fistp
into
cmc
pushf
xor
es
mov
fwait
xor
outs
push
lock
sbb
jae
inc
adc
xchg
xchg
adc
push
mov
int3
or
and
sbb
cmc
cmc
lea
std
jecxz
jg
cmp
sub
mov
inc
jbe
mov
cdq
lahf
shr
std
xor
jae
push
mov
rcl
nop
fdivp
inc
mov
mov
xchg
movs
out
repz
js
cmp
(bad)
in
sub
cmp
daa
(bad)
pop
xor
or
adc
fsub
stos
neg
in
sbb
stos
jo
jo
test
shr
lods
(bad)
imul
call
sbb
cmp
rcl
jne
aaa
arpl
jne
(bad)
paddusb
add
popa
xor
sbb
sub
rdmsr
or
sub
das
ss
lods
dec
inc
pop
jns
jle
cmp
add
push
adc
jbe
mov
sbb
mov
mov
push
sbb
stos
lea
cwde
adc
pop
iret
outs
pop
repz
add
out
ja
push
xlat
cmp
jmp
shr
push
cli
in
and
sub
mov
push
mov
push
push
ins
fild
or
sahf
dec
in
inc
xchg
push
push
out
push
shl
jge
push
repz
mov
push
retf
inc
xchg
mov
add
mov
jae
and
mov
pop
adc
test
shl
test
adc
cmc
push
add
stc
inc
jb
mov
mov
je
mov
or
mov
data16
daa
lock
movs
fcom
xor
iret
scas
pop
sbb
stos
movs
adc
add
inc
and
pop
clc
in
or
inc
xor
jno
adc
fild
mov
(bad)
call
sub
std
mov
add
add
jae
cmp
test
jbe
(bad)
les
pusha
or
stos
call
pop
hlt
sbb
push
and
or
pop
jg
xchg
add
adc
rcr
cmp
jo
mov
scas
mul
pop
je
add
xchg
mov
jb
das
inc
clc
jno
aas
aam
cdq
rol
jb
xchg
add
cli
sub
out
movs
dec
sub
mov
arpl
jecxz
std
jns
mov
test
test
retf
mov
fbld
mov
daa
mov
lods
cmp
fistp
lock
jl
sti
clc
adc
jno
leave
(bad)
aam
xor
xor
xor
data16
cmp
push
(bad)
scas
fistp
mov
xor
cmp
push
aad
pushf
daa
pop
lock
cs
arpl
mov
imul
repz
inc
shl
loop
jo
cmps
sbb
dec
sti
ins
pop
xchg
outs
mov
stc
and
adc
ret
xor
into
shl
dec
cld
les
sbb
pop
stc
jmp
movs
aaa
mov
jne
cld
pop
mov
(bad)
xor
and
and
push
mov
xchg
test
cmp
inc
push
stos
jl
jl
fild
sub
add
sar
xor
inc
lods
fmulp
das
inc
js
xchg
push
push
outs
adc
sbb
mov
into
sub
xor
and
pop
gs
jne
xchg
je
int
or
or
stos
inc
adc
aad
push
leave
xor
std
aad
xor
and
stos
mov
cmp
lahf
jns
sbb
test
mov
sbb
idiv
xor
and
jnp
lock
xchg
cmps
inc
add
pop
xchg
push
mov
add
mov
adc
rcl
xor
gs
xchg
movs
push
add
jbe
add
(bad)
mov
xor
aad
mov
inc
sbb
xlat
jmp
addr16
cmp
jno
pop
aas
add
push
adc
xor
mov
aas
mov
mov
pop
mov
rol
repnz
stos
rcr
and
call
outs
leave
std
lahf
inc
fcmovnu
push
sbb
(bad)
mov
int
xchg
mov
movs
xchg
mov
ins
or
mov
push
sub
xor
mov
into
es
cmp
xchg
fnsave
sbb
mov
ret
movs
mov
ins
in
imul
ins
gs
test
repz
fdiv
xlat
cmps
fs
enter
int3
sbb
xchg
fisttp
sbb
jge
leave
test
jp
std
test
or
xadd
xor
test
adc
cmp
inc
ds
out
xor
test
jbe
les
xchg
sbb
hlt
push
iret
pop
mov
push
gs
and
jmp
(bad)
retf
sub
std
hlt
(bad)
fldcw
test
hlt
in
mov
pop
ret
out
repz
out
xchg
sub
les
test
scas
shr
and
mov
dec
fcomp
xor
push
sub
sbb
fmul
fcmovnb
sub
jns
cld
out
ret
cs
add
lahf
or
inc
stos
lods
sbb
fiadd
aaa
xor
add
cmp
clc
rol
sbb
in
inc
cmp
retf
cmp
movs
xor
push
cmc
fidiv
icebp
pop
repnz
adc
outs
movs
test
mov
inc
and
test
jmp
add
pop
add
xchg
out
cwde
add
inc
pop
jb
dec
aad
sbb
int3
outs
mov
shl
xchg
test
xor
pop
xchg
ds
sub
xor
sar
pop
aaa
jp
fstp
nop
sbb
inc
fstp
retf
mov
data16
jmp
in
mov
imul
mov
out
adc
cld
arpl
push
sahf
out
test
xor
xchg
ins
das
and
mov
out
adc
xchg
lods
(bad)
push
xor
or
arpl
cwde
jle
fsubr
icebp
mov
scas
add
pop
iret
push
dec
mov
icebp
jbe
mov
jmp
sbb
retf
cmp
std
push
push
fild
retf
inc
inc
sbb
in
xor
pop
stos
popf
mov
std
jmp
xchg
push
outs
pop
inc
jae
out
mov
inc
mov
pop
xor
ret
adc
(bad)
xlat
mov
mov
mov
stc
sbb
add
xchg
jnp
push
push
dec
jmp
fcmovb
icebp
imul
stc
lds
fs
shl
imul
or
gs
mov
cwde
inc
inc
adc
pop
and
ja
rcr
test
dec
in
mov
shl
adc
out
push
inc
dec
push
jno
fcom
sub
and
sub
xor
xlat
mov
and
cli
pushf
das
pop
movs
jmp
add
mov
call
fldcw
out
sub
movs
cs
mov
xor
fdivr
adc
cmp
pop
imul
fisttp
xor
pusha
jp
pop
pop
iret
popa
or
xchg
fild
add
mov
ret
idiv
test
push
mov
mov
push
test
and
dec
shr
jns
pop
xchg
pop
scas
div
xchg
pop
lock
je
push
rcr
ret
daa
icebp
pop
(bad)
sbb
or
js
mov
xor
dec
push
mov
adc
push
jb
out
or
call
sub
sti
and
ret
ret
daa
aad
mov
arpl
lock
pop
in
inc
inc
fsubr
dec
sbb
push
scas
inc
push
lea
nop
int3
mov
cdq
(bad)
stos
js
xchg
mov
push
fucomi
test
inc
sbb
into
retf
sub
aam
call
test
icebp
mov
(bad)
xchg
jb
dec
push
(bad)
ins
jecxz
ss
sbb
nop
leave
dec
or
inc
xlat
jmp
mov
push
jmp
xchg
xchg
scas
sub
dec
push
dec
aaa
and
mov
mov
retf
imul
jo
or
push
fiadd
in
mov
sub
imul
mov
gs
pushf
daa
mov
xor
jne
imul
sub
je
jae
aaa
(bad)
in
mul
cmps
xor
test
jmp
ja
retf
jo
fld
retf
jbe
shr
rcr
(bad)
movs
or
mov
out
test
cwde
cwde
popf
jg
pushf
retf
mov
push
push
sbb
jp
mov
ins
xor
out
(bad)
retf
lds
in
loopne
mov
in
xchg
add
sbb
nop
ins
jae
retf
cmp
mov
or
loop
stc
pop
inc
scas
lds
inc
clc
adc
in
ins
jmp
xchg
and
cmps
aas
es
mov
iret
or
jns
fmul
jb
or
or
mov
mov
fs
lods
add
jp
adc
or
adc
sub
ror
add
int
popf
mov
or
outs
std
lods
in
cmp
mov
int3
arpl
xchg
mov
ret
dec
jno
jnp
sbb
les
adc
out
adc
jge
in
jl
pop
add
mov
adc
out
sbb
sar
dec
push
stc
cmp
mov
out
push
nop
test
movs
push
in
(bad)
fcmovnu
fldcw
int
mov
js
loopne
aas
cmp
mov
xchg
mov
dec
dec
cmp
ins
and
fstp
movs
clc
push
pop
or
mov
push
setno
pop
and
mov
imul
cmp
imul
mov
lods
jge
dec
sar
loopne
jns
sub
gs
out
les
and
mov
mov
xchg
in
and
aaa
or
lahf
jg
mov
mov
(bad)
xchg
sti
pop
mov
ret
sbb
call
stc
add
ror
mov
out
ss
bound
int
sbb
mov
lods
cmc
shl
xchg
sub
mov
pop
mov
sbb
hlt
jp
repz
clc
loopne
cmp
(bad)
vorps
xchg
cli
inc
add
jno
jo
adc
lods
jl
in
mov
adc
sub
popa
mov
jno
mov
and
int3
shl
dec
sbb
js
sbb
add
push
std
scas
mov
rcl
mov
ja
nop
fbld
push
pusha
sub
mov
inc
in
stos
push
pop
loopne
dec
pop
repz
daa
movs
es
jge
dec
mov
hlt
and
push
idiv
inc
push
adc
icebp
repnz
jg
std
mov
adc
outs
cmp
dec
jp
push
adc
add
inc
jo
sar
sbb
fucomi
icebp
or
test
and
call
es
push
add
push
js
out
aaa
outs
test
popa
(bad)
mov
add
push
fild
mov
loopne
sub
ins
ins
and
jmp
call
or
mov
rcr
das
frstor
sti
inc
ins
in
sbb
or
in
and
cmp
pop
inc
push
inc
iret
lahf
fisttp
stos
jl
data16
jae
dec
dec
clc
rol
ja
sbb
mov
push
lods
mov
push
dec
cwde
(bad)
mov
mov
enter
shl
pop
enter
clc
aad
add
lods
and
fdivr
popf
call
adc
fdiv
push
(bad)
loopne
pop
dec
cmp
inc
pop
sbb
js
shr
dec
sbb
inc
pop
push
and
mov
fsub
cwde
pop
cli
fstp
or
pop
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
pop
jecxz
add
mov
adc
test
fsub
ss
sub
mov
stos
shl
mov
fdivr
mov
sar
mov
ror
mov
lock
enter
lock
push
dec
shl
mov
fdivr
mov
sar
mov
inc
lock
push
and
mov
enter
pop
in
push
shl
adc
std
mov
shr
fmul
lods
into
add
adc
xor
cli
scas
(bad)
mov
lock
adc
jecxz
pop
call
cmp
leave
rcl
repz
in
stc
fwait
jbe
cmp
std
mov
dec
(bad)
lock
fs
scas
pop
push
(bad)
xor
xor
dec
es
cwde
dec
dec
jl
jl
hlt
out
jbe
test
xchg
lds
movs
inc
pop
push
mov
test
dec
(bad)
repnz
repnz
cmc
push
xchg
push
gs
nop
fwait
jno
in
retf
adc
xchg
fsub
gs
or
xor
addr16
pop
inc
xchg
scas
cdq
fild
jbe
xor
jbe
sbb
xchg
(bad)
leave
scas
lock
ss
push
xor
jge
fs
cmp
test
gs
mov
and
mov
cdq
add
xlat
push
push
mov
nop
pop
movs
mov
push
mov
(bad)
aad
ss
or
icebp
cmp
fwait
dec
frstor
gs
fistp
ss
cmp
cld
xor
sub
(bad)
call
mov
enter
jge
into
mov
imul
add
mov
shr
lods
mov
test
aad
add
lahf
adc
adc
pop
push
add
and
test
or
aam
sbb
sti
ins
imul
popa
sbb
mov
imul
aaa
test
bound
or
push
movs
push
js
mov
out
mov
imul
cmp
das
xchg
sub
fcom
ror
mov
sub
sbb
sub
mov
call
jb
cmps
cld
div
icebp
out
retf
jbe
ficomp
inc
call
fdivr
sub
sbb
jl
lahf
test
xchg
outs
out
ins
mov
jg
shl
test
push
push
xor
ror
adc
pop
push
push
pushf
dec
ret
xor
rcl
jae
loop
inc
arpl
mov
or
jg
inc
xor
push
push
or
inc
mov
sar
scas
iret
retf
dec
mov
mov
es
lods
in
in
sahf
into
and
loopne
ss
sub
fist
dec
adc
lods
ins
addr16
mov
lods
adc
cmp
imul
xchg
jae
lods
jmp
not
sbb
cmps
(bad)
and
mov
push
(bad)
in
sub
nop
cmp
adc
shr
ror
mov
sub
push
mov
lods
dec
mov
sub
sar
out
dec
mov
ds
lock
test
fdivp
das
xchg
into
out
test
dec
das
pop
pop
jge
(bad)
jae
inc
ds
ret
outs
sub
pop
adc
push
mov
arpl
inc
push
xchg
sahf
push
push
in
ins
jl
jne
xor
int
fadd
(bad)
xor
mov
stos
pop
xchg
cmp
push
test
mov
xchg
jg
ss
add
xor
in
int3
test
pushf
cmp
xor
mov
inc
pop
jmp
jmp
das
push
movs
sub
aas
out
mov
jge
pop
inc
ja
mov
or
push
imul
jge
outs
rcr
ins
enter
add
(bad)
mov
sti
push
push
push
mov
mov
cs
and
xchg
aad
ins
stos
inc
or
jb
(bad)
rcl
xchg
inc
ds
pop
ins
mov
clc
mov
sub
repz
adc
push
scas
fiadd
out
pshufw
(bad)
mul
pusha
mov
mov
fwait
sbb
int3
rcr
cmp
imul
dec
adc
(bad)
mov
mov
popa
inc
fdiv
mov
sbb
outs
inc
pop
xor
fdiv
cmps
inc
and
mov
push
shr
arpl
std
mov
inc
rcl
arpl
lds
jae
ins
adc
push
jl
inc
icebp
pop
dec
int3
sar
xchg
dec
xor
scas
dec
jle
pop
out
sahf
(bad)
push
sbb
test
sbb
sub
mov
mov
or
mov
fist
adc
push
les
scas
retf
mov
movs
push
sub
bound
mov
je
xchg
outs
inc
mov
scas
outs
shl
sbb
push
dec
out
sub
cli
mov
call
add
cld
xchg
test
imul
bound
popf
jbe
or
scas
mov
jb
sub
enter
cmps
(bad)
(bad)
mov
sbb
inc
add
shr
mov
xchg
js
sbb
jne
mov
shl
jns
mov
sub
push
xchg
mov
retf
pop
push
pop
sub
loope
add
test
cmc
mov
sub
add
dec
mov
sbb
aam
xchg
jbe
push
jg
loop
mov
mov
pop
or
push
int3
sub
push
mov
push
dec
out
mov
add
in
std
push
or
bound
das
imul
in
mov
cwde
add
into
sub
es
pop
outs
jge
iret
hlt
int
mov
push
int3
push
fidivr
int3
pop
stc
add
push
mov
out
xor
sub
jne
jp
pop
gs
push
les
jns
mov
xor
sbb
repz
xor
cmps
pop
jl
sbb
fimul
jno
in
shl
jle
sub
pushf
inc
lods
gs
push
cdq
popf
es
scas
jge
sub
hlt
jmp
xchg
lods
(bad)
jecxz
(bad)
(bad)
jge
mov
(bad)
push
in
mov
shl
cmp
mov
push
mov
xchg
adc
sbb
jmp
inc
and
push
pop
mov
xchg
jl
xor
cmp
mov
push
push
cmc
inc
lods
and
fwait
in
loopne
in
sub
inc
das
adc
cmp
movs
pop
mov
daa
pop
scas
mov
mov
scas
add
jg
cmc
jle
dec
adc
je
fld
sbb
pop
mov
mov
xor
dec
cdq
xlat
mov
sti
call
sub
adc
movs
das
sbb
adc
imul
call
add
adc
cwde
pop
cmp
dec
pop
(bad)
ins
test
cmp
stos
mov
ret
or
xchg
adc
neg
fisubr
data16
mov
dec
cmp
mov
mov
sub
add
mov
pushf
sub
and
pop
inc
aas
out
inc
or
dec
add
js
aaa
dec
in
cmps
ror
stc
dec
add
aaa
vrcpps
jb
popf
jo
sahf
xchg
out
pushf
test
sbb
lahf
jnp
fist
(bad)
stc
retf
jnp
outs
cmp
adc
shr
scas
jno
in
int
sar
and
dec
sub
mov
mov
(bad)
cmp
jno
fisub
mov
ins
in
jnp
nop
sub
sar
dec
imul
hlt
cmp
fcom
mov
mov
jo
jne
lahf
and
sub
not
sbb
xchg
pop
xchg
inc
dec
mov
push
call
cmp
(bad)
fsubr
pop
ins
push
jbe
daa
(bad)
and
(bad)
call
in
jl
jge
leave
lea
push
out
or
mov
ror
add
lahf
(bad)
xchg
sub
(bad)
fsub
sar
outs
mov
dec
fs
ror
xchg
movs
aaa
sbb
or
adc
mov
dec
fnstenv
sub
sub
rol
repnz
sub
cmp
pushf
inc
fldcw
and
cmp
push
pop
push
cmp
js
push
addr16
cli
xchg
xlat
lea
fdiv
or
and
ret
sbb
and
push
ds
test
cli
adc
fistp
dec
fwait
pop
sub
into
fstp
xchg
push
es
cmp
fmul
pop
psubusb
das
test
daa
push
ret
pop
add
sbb
clc
pushf
ins
dec
pop
(bad)
pop
mov
loop
or
sbb
mov
(bad)
mov
rep
pop
gs
jg
aam
cwde
retf
jle
dec
sub
xor
xchg
outs
jmp
mov
shl
inc
stc
cmp
arpl
adc
arpl
mov
ss
ins
imul
fdiv
leave
stc
cmps
lock
mov
fisubr
scas
pop
pop
outs
test
ret
cmps
cmps
stos
mov
outs
push
pop
push
inc
ret
xor
mov
pop
xor
cmp
xor
lods
ds
jae
push
jecxz
nop
das
pop
gs
(bad)
push
jne
arpl
adc
mov
xchg
gs
inc
mov
or
(bad)
loopne
cmc
add
aaa
push
sti
mov
sub
pop
test
xlat
inc
cmp
jl
jl
(bad)
cli
inc
movs
icebp
retf
pop
inc
(bad)
lea
idiv
test
add
shr
clc
mov
loop
push
jb
and
push
js
dec
pop
mov
aad
xchg
call
daa
fldcw
and
mov
add
inc
hlt
sub
out
push
xchg
xlat
ds
test
mov
outs
bnd
dec
jne
mov
idiv
cmp
shr
pop
call
std
mov
shr
mov
pop
cmc
cwde
pop
pop
jl
ror
mov
rol
outs
mov
jno
mov
pop
add
pushf
cmc
test
dec
clc
int
call
sbb
out
popa
or
mov
jae
lock
in
stos
push
jnp
jb
xor
mov
pop
or
std
xor
inc
cli
fwait
call
cld
fild
hlt
add
xchg
iret
pop
cmp
ret
jb
int
dec
mov
repz
add
ins
test
pop
add
pusha
dec
sbb
cmp
inc
sbb
adc
call
scas
popa
inc
jecxz
dec
inc
icebp
push
loopne
mov
or
push
push
aad
loope
dec
cwde
xor
xlat
shl
ds
in
cwde
dec
movs
adc
dec
xor
mov
nop
ja
jae
dec
sbb
cmps
pop
xor
or
mov
stc
ret
pop
or
cwde
xchg
(bad)
cmp
fnsave
pushf
sbb
sub
sbb
and
add
popa
fdivr
lahf
jae
inc
outs
daa
push
cmp
jl
rep
gs
lods
jge
ins
push
es
shr
aas
int
jnp
ins
mov
cli
jo
push
jnp
loopne
jno
and
and
mov
inc
mov
out
jb
mov
ret
in
lods
or
rcr
repnz
lea
rcl
loope
repz
jge
xor
retf
add
fild
jae
repz
in
retf
fisttp
je
ffreep
outs
lds
sbb
pop
inc
inc
pop
mov
mov
add
add
push
nop
stos
fcmovbe
dec
mov
pop
in
push
inc
mov
imul
sub
mov
or
mov
cdq
jmp
std
mov
hlt
jo
cmp
jge
(bad)
jae
scas
inc
leave
xor
sub
and
in
mov
pop
leave
pop
pop
in
dec
repz
rcr
not
jae
xchg
aam
cmc
mov
cmp
in
jbe
enter
jne
fnsave
addr16
mov
in
pop
adc
xchg
or
inc
cmp
sub
sbb
xchg
push
sub
shr
xchg
(bad)
dec
imul
and
ss
jnp
test
add
xor
fmulp
stos
adc
xchg
or
out
sbb
sar
mov
pop
sbb
fnstcw
mov
imul
or
jmp
or
int3
div
pusha
add
pop
sub
inc
pop
inc
xchg
or
pop
cld
shl
data16
div
pop
and
sub
nop
gs
jne
popa
fisubr
mov
mov
(bad)
popf
scas
xchg
aad
pop
pop
push
int
jecxz
inc
sbb
sbb
in
nop
call
xchg
hlt
lahf
jns
xchg
or
ja
mov
sub
inc
arpl
jg
sub
in
fimul
sub
mov
mov
ins
icebp
mov
int3
scas
xor
dec
scas
push
scas
pop
push
out
dec
add
aad
or
jmp
aaa
out
stc
les
mov
mov
imul
add
sti
cwde
jb
ret
cmc
enter
mov
mov
in
sbb
lods
mov
xchg
(bad)
pop
sub
sahf
sbb
mov
xchg
les
jno
mov
cli
mov
enter
and
sar
pushf
mov
call
or
mov
mov
out
add
adc
inc
loope
scas
shr
cmp
cdq
lahf
sahf
test
scas
hlt
into
sbb
dec
shl
or
in
sbb
xor
inc
inc
xchg
or
and
and
jg
js
pop
jp
sub
imul
adc
xchg
and
pop
int3
movs
fs
call
push
movs
into
jnp
out
(bad)
out
ja
or
test
jo
test
retf
ret
push
in
xor
bound
in
fstp
inc
imul
cmp
ds
sbb
ficom
sub
push
add
shl
jmp
sub
dec
movs
rcr
sbb
pop
sar
arpl
in
mov
rcr
pop
lock
mov
fdivr
mov
dec
inc
cmc
cmp
sar
outs
mov
retf
pop
je
pop
shl
ss
sub
add
hlt
pop
dec
mov
fidiv
out
mov
mov
pop
stos
jne
or
mov
xor
call
mov
push
test
hlt
outs
xor
aam
pusha
xchg
lods
push
push
sbb
jge
pop
in
cmps
out
cmps
cmp
test
(bad)
movs
or
lds
xchg
xchg
cmps
xchg
fcomp
and
and
or
dec
mov
or
retf
out
inc
sti
xchg
jo
enter
fst
outs
mov
jo
pushf
sub
inc
ds
or
jmp
dec
cmc
jge
or
push
push
ins
pop
push
in
pop
xor
cmp
sar
xor
pop
repnz
mov
jb
stos
inc
jg
(bad)
lods
call
(bad)
lea
sbb
inc
adc
movs
or
je
fwait
adc
cli
or
sahf
sub
dec
jg
jbe
dec
mov
push
xchg
inc
sbb
sub
cmp
sbb
pop
push
lods
jle
ja
adc
mov
ret
xor
into
arpl
sbb
mov
cmp
(bad)
and
mov
add
or
aad
sub
inc
(bad)
outs
pop
push
xor
ret
lods
sbb
mov
dec
call
icebp
jns
cmp
xor
push
xor
mov
mov
call
jmp
addr16
jo
mov
ds
cwde
push
mov
cmc
jl
jo
mov
fbld
sub
mov
cmp
xor
fdivr
clc
xor
jno
cmps
cmp
sbb
jmp
fimul
sbb
add
adc
mov
add
ret
movs
sti
stos
mov
add
stos
rcl
ins
retf
jno
and
cmp
and
and
lahf
push
jns
pusha
sahf
sbb
fs
pop
pop
cld
das
and
pop
jns
push
mov
mov
fild
adc
sub
sbb
jnp
gs
(bad)
repz
cmp
lahf
scas
dec
fs
inc
fisttp
inc
push
xchg
repz
cmp
jg
adc
cmp
xor
dec
mov
mov
push
mov
sub
jno
sti
test
pop
lea
shl
pop
repnz
test
mov
xchg
mov
gs
outs
hlt
push
dec
xor
(bad)
or
cmp
jne
into
dec
imul
xor
pop
and
mov
fidiv
in
bound
jns
mov
jmp
int3
sub
gs
mov
in
dec
pop
in
dec
out
jmp
pop
jle
sub
je
add
xchg
and
stc
int
xor
int
push
ror
cmp
retf
retf
adc
mov
xchg
and
xchg
pop
cdq
scas
ficomp
inc
mov
cmp
pop
(bad)
mov
add
jb
dec
or
cli
adc
and
add
inc
jmp
sbb
cmp
cmp
leave
fisubr
out
push
movs
inc
sub
sbb
adc
xchg
std
call
fst
mov
repnz
dec
pop
push
mov
retf
iret
push
sbb
xor
adc
jnp
shl
cmp
push
(bad)
sbb
mov
sub
and
ret
xchg
lea
and
nop
inc
stos
cdq
add
cdq
jg
dec
repz
call
add
scas
add
pop
xlat
fistp
xor
aaa
dec
sbb
in
jb
rep
push
and
loop
xchg
mov
add
xor
test
int3
jmp
xchg
(bad)
xlat
int
mov
sahf
pop
add
lds
xchg
cmp
push
sbb
and
test
test
outs
push
stos
xchg
and
mov
xlat
sub
test
scas
push
or
or
pop
int
aas
out
ficomp
fs
sti
pop
pop
adc
jmp
jno
jl
outs
mov
mov
loopne
sub
scas
sbb
sub
in
pop
cmp
scas
int3
xor
push
dec
test
fnstsw
ins
call
pop
fnstsw
inc
pop
fnstcw
cmp
stc
fbld
dec
stos
cwde
cmps
and
xchg
adc
add
fld
mov
lods
push
mov
iret
leave
dec
sbb
out
into
rcl
imul
test
add
jle
jp
mov
pop
sbb
sti
mov
ret
ror
mov
arpl
std
mov
inc
clc
jne
inc
inc
cmc
stos
push
ja
enter
retf
mov
rcr
cs
push
lock
in
rol
dec
(bad)
jno
(bad)
mov
dec
dec
xor
aas
ins
rcr
cli
icebp
cmp
mov
scas
add
dec
dec
push
cmp
es
and
lods
mov
cld
mov
sbb
bnd
mov
aaa
mov
xor
rcl
jg
mov
and
and
aam
aaa
(bad)
pop
mov
adc
jns
pop
dec
xchg
ret
jns
(bad)
adc
cdq
test
pusha
test
ins
shl
jne
movs
push
xor
addr16
(bad)
xor
gs
mov
xchg
add
push
sub
jb
fimul
(bad)
and
xor
daa
cdq
ss
adc
into
and
and
jns
and
adc
xchg
push
pop
push
(bad)
and
sbb
shl
sbb
test
(bad)
in
or
xchg
mov
mov
push
stos
bound
aas
js
and
mov
imul
pop
setle
or
fstp
mov
xlat
or
pop
cmp
jmp
sbb
int3
sysret
enter
pop
mov
test
sbb
aas
sub
sub
and
dec
fdivr
xchg
clc
popa
jg
enter
jmp
movs
fisub
sti
shl
mov
mov
mov
or
pop
xchg
stc
xor
cmp
inc
mov
add
xor
mov
out
push
and
lods
ss
dec
or
push
push
xor
fmul
repnz
out
stc
mov
imul
shl
outs
dec
sub
cmps
cmp
dec
shl
pop
or
or
xlat
sbb
aam
cdq
les
gs
cmp
xor
and
(bad)
out
addr16
or
lahf
mov
sbb
inc
leave
ror
outs
mov
movs
xchg
jne
lea
add
nop
fisttp
std
test
adc
fdivr
(bad)
imul
pop
shr
and
xchg
xchg
jo
jae
push
pop
adc
mov
xor
and
or
jnp
sub
movs
adc
push
push
dec
lea
pusha
mov
and
push
in
cwde
popf
inc
imul
repz
sbb
and
aaa
add
xchg
push
dec
mov
jns
sete
jae
int3
or
rcr
jg
dec
jbe
sbb
cpuid
pop
pop
in
xchg
or
mov
test
out
dec
adc
push
jge
dec
aad
mov
int
jg
ins
out
and
xor
add
int3
pusha
adc
pop
dec
fwait
xor
xchg
stos
mov
popa
adc
mov
sub
fist
clc
sub
xlat
out
push
sub
xchg
jl
movs
push
lods
inc
inc
sbb
fist
addr16
(bad)
(bad)
mov
call
inc
and
add
(bad)
mov
or
push
jmp
mov
add
das
push
int
scas
shl
ins
mov
sbb
stos
out
jl
push
xchg
int3
or
add
fisub
push
mov
sar
cmp
loopne
pop
fiadd
js
mov
and
adc
push
test
mov
cmp
fbstp
jae
mul
ins
das
(bad)
stc
pop
pop
mov
std
or
pushf
loope
pop
dec
int
test
or
cmps
mov
pop
imul
pop
mov
push
fcomp
out
stos
cmp
mov
daa
adc
xchg
inc
push
out
in
push
into
pop
mov
mov
mov
cli
cmp
or
sub
mov
je
cwde
cwde
dec
xchg
xor
lock
inc
je
popa
arpl
repz
call
jge
adc
dec
rol
cld
jbe
lea
dec
movs
push
xchg
push
and
push
pop
jecxz
repnz
add
inc
inc
adc
and
icebp
adc
addr16
xor
imul
sub
call
mov
mov
outs
pushf
clc
rcr
addr16
cmc
and
push
mov
inc
or
mov
call
jnp
call
lods
jmp
lock
add
adc
mov
and
inc
add
xchg
or
(bad)
neg
sub
lds
sti
dec
mov
add
jecxz
popa
dec
cmp
pop
out
lods
pop
pushf
rol
pushf
mov
xchg
push
mov
or
mov
(bad)
in
xchg
or
mov
ret
imul
daa
sub
push
adc
or
cmp
xchg
loopne
mov
(bad)
rcr
inc
ret
mov
mov
pop
(bad)
in
jmp
adc
pusha
mov
sbb
push
test
mov
push
call
ret
lsl
sub
lahf
adc
fstp
cmc
inc
aaa
or
cmp
push
(bad)
fst
aam
mov
sub
push
mov
js
or
sahf
add
stc
jg
push
in
jg
in
pop
fistp
sbb
ins
call
push
push
outs
cmp
lock
mov
add
loop
test
adc
mul
push
in
int
jnp
fcom
sub
test
fst
sub
loop
mov
jbe
jnp
das
fdivr
test
pop
mov
popa
out
and
cmps
jae
mov
imul
leave
adc
add
pop
xchg
and
inc
iret
or
into
mov
in
repz
shl
popf
pop
mov
jbe
xlat
inc
mov
cmc
push
out
inc
and
outs
mov
inc
pop
dec
jnp
mov
dec
sub
inc
div
(bad)
sbb
mov
mov
sbb
add
mov
push
or
fstp
das
cdq
mov
jge
mov
cmp
mov
add
cmp
fist
enter
mov
mov
mov
(bad)
push
shr
ds
dec
lods
inc
enter
das
pushf
in
jo
shr
shl
jp
push
xchg
adc
das
and
pop
add
(bad)
fld
jmp
mov
and
jbe
stos
push
or
scas
out
jg
adc
mov
add
jle
and
fcmovnb
pop
sbb
jbe
pop
push
test
shl
out
push
sti
mov
jmp
add
cmc
mov
pusha
cwde
jbe
cmp
outs
pop
addr16
pop
outs
sub
ss
jne
sbb
and
ins
into
minps
cmp
in
push
mov
out
loop
jl
imul
adc
call
mov
sbb
clc
(bad)
movs
int3
jns
sahf
clc
js
fldenv
jne
lahf
(bad)
push
mov
outs
or
and
xchg
scas
pop
jmp
cmp
bound
jge
cmp
movs
adc
mov
das
cmp
mov
jp
xor
imul
cmp
push
in
jno
leave
arpl
sahf
cmp
push
xchg
xlat
(bad)
lds
dec
cwde
sbb
dec
or
cs
add
fs
xchg
movs
adc
sti
pop
bound
pop
das
xor
sahf
adc
les
les
pop
shl
cli
ins
and
into
outs
add
lock
sub
cmp
stos
sahf
(bad)
cmp
mov
mov
scas
lahf
and
mov
imul
call
cld
pop
xchg
mov
mov
les
mov
xchg
loopne
out
inc
jmp
mov
dec
dec
push
fnsetpm(287
bound
lds
mov
xor
daa
lahf
or
jmp
and
push
out
inc
sub
inc
test
into
xor
xchg
fs
pop
xor
lods
dec
xchg
lods
mov
stc
gs
pop
sub
fld
mov
or
add
clc
aad
sbb
fdivr
retf
or
or
xor
addr16
out
aaa
mov
loope
mov
pusha
mov
inc
js
les
call
addr16
out
aas
add
inc
pushf
pop
or
js
push
(bad)
outs
dec
test
cmp
sub
inc
ror
dec
(bad)
cmps
and
or
js
sub
mov
adc
lods
lods
jno
pop
pop
inc
pop
adc
push
fdiv
push
ret
fnclex
mov
in
enter
mov
sbb
nop
call
repz
jbe
iret
in
aas
push
jmp
js
not
mov
adc
adc
in
push
push
xchg
inc
and
sbb
das
js
aaa
xchg
dec
pop
enter
add
jg
ret
pop
pop
jl
cmps
jle
in
and
push
xor
mov
mov
in
out
xchg
add
inc
mov
loopne
vpermi2w
add
sub
jb
test
iret
jae
sbb
int
scas
jo
pusha
jl
cli
rcl
fcomi
sub
xchg
jns
add
jo
cmps
stc
dec
jb
aad
hlt
inc
shl
jecxz
ins
pop
adc
pop
xchg
push
sbb
fisub
lods
sub
ret
jbe
les
sbb
add
xor
int
outs
sbb
jp
mov
fdivr
sti
icebp
pop
(bad)
sbb
es
push
shl
test
dec
mov
mov
cmp
jge
sbb
ret
scas
test
mov
push
loop
sbb
inc
out
ror
push
jnp
hlt
push
jp
hlt
das
fimul
cmp
loop
das
add
and
dec
mov
sub
ins
ret
and
ret
mov
jle
ins
lods
std
sub
jle
jl
and
sbb
xor
lea
rol
adc
cmps
sub
sbb
inc
jmp
inc
fild
or
jecxz
bound
push
xchg
dec
scas
xor
jno
cmp
or
or
lods
add
clc
pushf
and
mov
xlat
push
in
or
(bad)
mov
pop
and
xor
arpl
je
stos
and
rol
mov
sbb
mov
sar
xchg
mov
jbe
out
inc
rol
ins
aaa
mov
jbe
pusha
ror
and
push
xchg
adc
mov
call
daa
cmp
inc
mov
mov
ins
nop
(bad)
mov
in
pop
dec
adc
int3
sbb
enter
dec
dec
sub
xchg
pop
sbb
lods
xchg
and
sbb
add
daa
push
jne
ja
aaa
lds
shl
xor
jl
ret
iret
xchg
xchg
xlat
aad
cmps
clc
das
rol
sub
pop
pop
stc
imul
dec
lahf
add
shl
loopne
add
xchg
jecxz
sbb
cmps
adc
scas
movs
fwait
stos
mov
or
or
xchg
in
jne
int3
(bad)
pushf
inc
daa
push
sbb
mov
sub
dec
movs
mov
nop
out
jmp
jne
inc
xor
das
xchg
mov
fs
sbb
lds
sub
fidivr
xor
jno
dec
or
stos
jae
xchg
pop
icebp
mov
inc
fst
mov
outs
fsub
xor
fistp
xchg
cli
sbb
sbb
and
xchg
fidiv
clc
push
cs
bound
lods
in
ficom
sub
jb
cmps
mul
jae
add
imul
inc
in
fs
ja
inc
fs
mov
mov
add
sbb
add
dec
mov
in
leave
inc
add
adc
nop
leave
imul
push
mov
dec
cld
cmp
movs
mov
ret
or
pop
push
je
cli
sub
jno
fcom
fdivr
dec
sub
inc
mov
sbb
scas
mov
jae
iret
popa
pop
cs
fdivr
ret
cmps
shr
push
das
ror
sub
sub
lea
dec
cli
add
mov
aad
and
adc
std
scas
push
lahf
adc
dec
dec
arpl
inc
mov
stos
push
mov
sub
loop
mov
pop
test
inc
push
lea
lods
into
dec
fstp
and
ret
push
out
and
not
mov
add
push
adc
int
add
shr
jae
jg
rcr
out
pop
test
shr
call
sbb
mov
sub
pop
stos
xor
fmul
addr16
xchg
mov
cmps
scas
in
mov
mov
test
mov
iret
mov
xor
or
pop
mov
aad
or
dec
in
sahf
pop
cmp
imul
inc
es
mov
nop
in
push
and
jle
adc
jp
add
push
arpl
sahf
cmp
mov
and
fsubp
(bad)
in
cmc
mov
or
aas
push
inc
mov
lods
popa
outs
adc
sub
mov
sub
ins
adc
outs
(bad)
lock
scas
rcr
mov
(bad)
xor
and
lods
sbb
push
jle
pop
jmp
sbb
mov
daa
xlat
adc
int3
leave
push
shr
xchg
imul
lahf
adc
cmp
fs
dec
adc
aas
xchg
clc
inc
push
test
add
mov
inc
dec
xchg
out
call
mov
sbb
faddp
test
mov
mov
jno
cmp
cmp
int3
pop
fldcw
jmp
dec
call
scas
movs
not
mov
ins
xchg
pop
sbb
jbe
inc
movs
out
add
lods
add
mov
inc
sbb
xor
or
mov
xchg
popf
or
call
dec
or
xor
or
or
scas
mov
jb
stos
sub
mov
and
mov
inc
in
cmp
sub
sbb
addr16
xchg
pop
jmp
xchg
scas
dec
cmp
mov
inc
pop
outs
pop
retf
stos
inc
add
frstor
(bad)
adc
cmp
push
xchg
in
aad
mov
mov
adc
cmps
pusha
sub
ins
dec
or
xor
ins
sbb
aas
stos
mov
jp
imul
sti
dec
xchg
call
sub
jnp
icebp
pusha
push
call
test
(bad)
mov
sub
ja
lock
ins
push
or
cwde
adc
shl
test
fcomp
mov
dec
sar
mov
retf
cmp
dec
fdiv
les
xor
clc
mov
fmul
mov
stos
out
test
mov
sbb
or
mov
xchg
xor
mov
jmp
xchg
mov
test
add
nop
call
dec
jg
push
push
push
sbb
hlt
mov
imul
cmp
movs
sub
mov
pop
fsubr
sbb
leave
int
sub
repz
fld
mov
push
sub
sbb
jns
mov
jmp
pop
dec
sub
arpl
push
fcmovne
dec
dec
adc
rcl
pop
ja
and
les
adc
int
inc
outs
test
stc
outs
jo
mov
js
hlt
sub
pop
adc
js
pop
dec
fstp
jecxz
in
mov
loope
es
repnz
sub
mov
mov
ret
cs
sub
iret
(bad)
jecxz
loope
mov
fs
push
call
aas
mov
fnsave
adc
sub
push
mov
cmps
imul
fdivr
shr
sbb
cmp
push
xchg
hlt
imul
pop
cli
(bad)
test
sub
retf
call
pop
ja
add
push
push
add
loope
adc
adc
and
dec
ret
mov
fnstenv
scas
mov
adc
jo
jecxz
or
retf
call
addr16
sbb
retf
call
jo
cmc
inc
lea
jg
adc
loope
xor
lds
aas
lea
mov
dec
imul
mov
cmps
or
(bad)
jne
sub
mov
enter
cld
or
jb
jmp
data16
shl
lock
ds
and
adc
push
ret
icebp
jo
jle
test
cmps
mov
ins
dec
push
(bad)
fcmovnb
test
or
or
and
push
push
mov
test
xchg
scas
shrd
mov
fadd
popf
mov
bound
test
sbb
sahf
(bad)
fisub
sbb
in
or
jecxz
fsubrp
aad
or
cwde
rcl
fisubr
mov
outs
xchg
pushf
jno
out
inc
jmp
or
test
mov
cmp
sub
loopne
call
es
sbb
or
push
mov
fwait
aad
sbb
push
pusha
clc
movs
retf
not
call
push
(bad)
sahf
or
mov
ss
pushf
icebp
jmp
jb
out
inc
loope
leave
je
mov
dec
jo
xor
xor
add
bndldx
mov
lock
(bad)
push
cmp
je
data16
cdq
adc
jmp
push
mov
mov
sti
out
in
cdq
cmp
leave
scas
dec
xor
stc
sub
dec
xchg
mov
push
cmps
fidiv
iret
pop
icebp
mov
imul
mov
push
xor
mov
outs
inc
sbb
jnp
xchg
jns
sub
cmp
in
outs
je
fsubr
jl
sub
fsubr
hlt
pop
loop
cwde
gs
pop
xchg
clc
int3
(bad)
aam
mov
loopne
cmp
mov
sub
into
gs
xchg
inc
adc
imul
push
jne
(bad)
retf
cmp
fistp
lods
xchg
cmp
repz
mov
mov
adc
jmp
leave
push
xchg
clc
pop
adc
popf
cs
aam
or
ja
daa
cmp
push
out
xchg
rcr
ins
rcl
xchg
mov
cmp
add
add
jp
and
xor
stos
aaa
jle
in
iret
xchg
xchg
push
call
pusha
pop
cli
dec
ja
shl
das
call
and
mov
add
push
adc
in
shl
xor
xchg
out
clc
into
push
icebp
arpl
mov
daa
aam
push
cmps
ja
ss
jg
jl
daa
push
push
jmp
fdivr
cdq
fwait
loop
push
mov
xchg
xor
imul
mov
sub
jmp
movs
(bad)
out
mov
adc
push
iret
sub
test
or
mov
lahf
xchg
ret
iret
cld
test
push
pushf
les
sbb
pop
(bad)
jae
xor
mov
ins
out
fcom
jns
repnz
push
dec
daa
les
je
mov
(bad)
xchg
in
dec
out
enter
sbb
fscale
mov
dec
test
test
pop
out
mov
enter
adc
js
adc
lods
sub
pop
es
adc
lea
pop
pushf
aas
sub
lock
mov
mov
sub
pushw
icebp
push
jnp
jbe
push
pop
out
push
mov
hlt
(bad)
aas
cmp
mov
pop
jg
add
es
mov
cmp
rcr
xchg
add
ret
jno
jno
sahf
test
or
jle
sub
xchg
test
push
hlt
pushf
pop
or
lods
adc
inc
jp
jo
cwde
adc
inc
and
rcr
fadd
arpl
xchg
iret
push
aam
pushf
xchg
push
jmp
mov
adc
jp
iret
lahf
adc
mov
in
ficomp
or
jnp
xchg
in
adc
ret
popf
clc
mov
(bad)
clc
push
and
in
adc
pop
cdq
enter
mov
ror
jmp
mov
pop
pop
jb
or
mov
push
push
call
push
in
and
push
and
leave
jo
out
inc
ror
or
mov
arpl
pop
xor
xchg
into
call
sub
stos
dec
(bad)
xchg
mov
not
sbb
es
stos
shr
out
cdq
adc
jne
pusha
ss
test
lds
mov
pop
or
fs
jmp
mov
lds
adc
int3
push
mov
mov
das
stos
jl
mov
pop
stc
cdq
xchg
xor
push
or
std
jmp
call
ret
mov
int3
enter
cmp
or
test
dec
xor
cmp
data16
cmp
sub
retf
lock
ficom
jnp
sbb
pushf
sub
loop
mov
sbb
jge
or
adc
les
inc
xlat
enter
fnstcw
push
sbb
dec
gs
mov
adc
fsubr
add
movs
mov
mov
adc
aaa
popa
loopne
les
jo
in
sub
daa
mov
xor
mov
test
push
clc
mov
cmp
ja
pop
imul
sar
add
sub
fwait
and
mov
sbb
sbb
adc
push
sbb
aad
push
icebp
pop
jo
inc
sub
jno
push
or
pop
sub
push
enter
jmp
lods
add
in
sbb
mov
push
inc
add
push
jbe
push
div
xor
push
adc
in
popa
xchg
js
or
or
sbb
push
loop
mov
test
pop
push
bound
cmc
push
lods
sub
sbb
cmp
ret
cmp
div
adc
inc
std
and
xor
or
nop
jmp
sbb
test
mov
fst
iret
or
int
imul
or
fdiv
in
je
dec
(bad)
js
fcomp
pop
repz
enter
test
push
les
imul
dec
pop
and
(bad)
mov
and
mov
push
ss
out
(bad)
jb
add
push
icebp
inc
and
or
cs
adc
cdq
mov
mov
pushf
adc
add
mov
cdq
call
pop
ret
mov
mov
push
mov
addr16
pop
pop
mov
cwde
cmp
push
in
iret
rol
or
xchg
add
xor
pop
inc
das
sbb
add
retf
int3
std
imul
nop
push
bound
push
pusha
(bad)
inc
xlat
call
rol
sbb
cmc
lods
fwait
inc
xchg
mov
inc
stc
ret
test
xor
xlat
(bad)
and
aam
std
lock
sti
add
sub
addr16
imul
jae
out
cli
jg
aas
dec
ficom
pop
xor
add
cli
bound
nop
sbb
xchg
push
xchg
fmul
inc
mov
jbe
sbb
mov
popf
and
sar
shl
inc
loope
adc
or
jnp
test
xor
stos
push
cmp
cmp
shl
pop
add
test
and
dec
push
dec
mov
xchg
pop
pop
mov
js
and
cmp
cmp
sub
mov
adc
fimul
sbb
retf
addr16
xor
and
xor
jnp
loopne
mov
xchg
sbb
push
or
inc
das
fwait
xchg
stos
fadd
dec
add
imul
mov
pop
jb
adc
mov
loop
pop
(bad)
or
scas
xchg
xor
test
ja
adc
dec
dec
repz
inc
mov
and
adc
test
dec
(bad)
xor
add
ja
sbb
fucomip
lods
adc
mov
in
sbb
enter
pop
rcr
mov
sar
mov
nop
fisttp
imul
sub
rep
das
or
movs
jns
fwait
out
cmp
mov
mov
and
fwait
div
xchg
mov
mov
xchg
into
out
mov
push
pop
outs
or
add
cmp
inc
or
or
and
pop
test
mov
js
imul
add
cmps
xor
jae
mov
test
xchg
sub
iret
or
aas
inc
xlat
add
xor
add
xchg
inc
sti
push
push
jmp
lahf
(bad)
push
pop
push
jle
mov
loop
cli
ins
cmp
ins
cmc
or
sbb
xchg
fmul
xor
in
test
ror
dec
sar
mov
fdivr
mov
dec
shl
enter
(bad)
push
jp
dec
aad
dec
int3
fnstsw
dec
pop
dec
stos
leave
sar
mov
mov
gs
sub
fwait
(bad)
adc
cld
dec
movs
sbb
mov
test
mov
outs
dec
mov
mov
mov
mov
xchg
pop
inc
jl
and
xor
(bad)
aas
mov
in
in
sahf
xor
inc
fdivr
retf
push
xchg
in
xchg
ds
sbb
loopne
scas
lea
ret
dec
ds
xchg
stc
jl
cmp
pusha
les
xor
adc
lods
bound
ja
xchg
rcl
add
scas
mov
iret
mov
cmp
jg
dec
pop
xor
and
xor
adc
or
data16
xchg
es
in
cmp
ret
gs
cmps
sbb
and
movs
imul
addr16
xchg
jae
add
inc
lods
in
and
into
ficom
(bad)
push
mov
push
xchg
das
mov
mov
add
sub
test
mov
xor
loope
lock
fcmovbe
adc
jae
inc
add
jmp
addr16
mov
xchg
mov
or
loope
scas
std
pop
jle
jle
xor
sar
xor
nop
shr
mov
pop
and
les
inc
adc
sub
xchg
xor
and
ret
push
xchg
mov
add
ror
or
pop
inc
pop
push
cmp
and
xlat
add
add
fild
cwde
sbb
mov
std
add
and
cmp
(bad)
cwde
ror
ds
loope
mov
pop
add
mov
cmp
aas
mov
mov
push
mov
xor
sub
imul
mov
cmps
xor
jmp
inc
and
dec
adc
mov
imul
aad
mov
xor
xor
cld
cmps
or
mov
mov
je
int3
mov
sahf
imul
in
push
mov
lds
mov
fstp
das
lea
pusha
popa
cmp
jl
jg
xor
mov
pop
scas
lods
cmp
push
dec
push
aad
out
mov
add
sbb
cmp
mov
ja
mov
mov
inc
sahf
cmps
sbb
movs
cmp
test
xchg
fisub
push
sar
inc
push
xchg
aad
shl
and
jmp
push
push
sub
inc
sub
pushf
mov
iret
cmp
out
cmps
push
push
out
mov
addr16
and
scas
je
(bad)
pop
jmp
push
mov
stos
mov
(bad)
adc
xchg
dec
call
add
xchg
pop
dec
push
pop
push
lods
mov
scas
movs
cld
ds
mov
inc
aam
jl
inc
sub
mov
pop
and
cmp
add
xchg
jno
out
add
inc
sbb
test
inc
inc
push
push
dec
fs
xchg
not
jmp
mov
ror
cdq
push
leave
clc
fisttp
mov
rcl
jne
push
jle
cs
test
xor
retf
js
add
arpl
cmp
push
mov
ins
into
stc
and
ja
pusha
inc
out
pop
daa
stc
and
inc
clc
push
scas
repz
or
aam
sahf
imul
fcom
aas
repz
out
ret
or
and
das
mov
(bad)
imul
sub
fdivr
xchg
call
inc
sahf
(bad)
xor
std
add
mov
fistp
pop
test
jmp
adc
mov
(bad)
es
movs
lahf
je
inc
shr
inc
ror
dec
sar
mov
inc
push
cmc
xor
idiv
dec
fidivr
push
jo
dec
pop
repnz
clc
mov
push
cmp
or
sbb
add
(bad)
cmp
popa
out
and
push
jmp
dec
iret
sar
hlt
mov
in
add
jmp
(bad)
mov
pop
arpl
loopne
xchg
sub
xor
popa
test
push
inc
in
repz
aad
test
cmp
and
xor
adc
mov
fucomi
jge
aam
pop
ja
dec
int
lds
xchg
or
neg
inc
aad
pop
in
sub
int3
mov
dec
xor
or
repz
mov
retf
cmc
fs
add
in
inc
(bad)
dec
push
mov
push
mov
frstor
mov
out
ret
lock
scas
scas
adc
xor
adc
aad
leave
xchg
or
clc
sub
shl
fwait
cs
fmul
int
xchg
xchg
call
inc
cmp
ja
inc
or
movs
adc
mov
cs
scas
mov
xchg
repnz
adc
pop
test
(bad)
xchg
mov
call
xchg
cwde
ror
movs
movs
std
shl
inc
jecxz
fcmovne
ss
fcmovbe
test
cmp
push
jge
retf
mov
jecxz
test
(bad)
sbb
dec
mov
jle
jg
stos
movs
(bad)
adc
sub
pop
xchg
mov
push
bound
xchg
adc
ja
fstp
jge
popa
fs
int3
pusha
jmp
push
clc
hlt
xchg
push
xor
or
or
mov
int
dec
(bad)
sti
sbb
test
mov
add
sbb
sub
psrld
xor
cs
ins
sbb
cs
jge
sub
scas
inc
adc
test
cdq
mov
out
lock
xor
jle
pop
inc
and
adc
loope
or
pop
pop
(bad)
fld
in
xchg
mov
aaa
or
dec
shr
sar
jmp
mov
jb
or
cmp
pop
ret
mov
mov
lahf
jmp
movs
pop
aam
dec
dec
lods
mov
iret
icebp
or
out
dec
jecxz
mov
jns
sbb
outs
(bad)
jle
and
js
push
and
dec
int3
xor
push
jle
jge
fs
push
mov
and
test
or
scas
inc
retf
call
mov
retf
imul
ins
dec
cdq
or
cdq
mov
ins
lock
mov
lods
mov
xchg
xlat
movs
imul
ins
xchg
cmp
inc
adc
push
pop
mov
pop
cmp
jo
pop
mov
push
and
inc
sub
popf
hlt
inc
sbb
in
fsubr
dec
daa
push
cwde
ud1
stos
dec
sahf
clc
and
cwde
out
aam
ret
icebp
push
push
mov
popa
call
lods
mov
pop
sub
xchg
mov
lahf
lock
push
loop
mov
sbb
mov
jo
push
sub
ror
mov
in
push
push
es
clc
push
jns
cmp
mov
jp
cmp
mov
aaa
imul
xor
(bad)
dec
pop
and
scas
scas
sahf
dec
inc
fiadd
cmp
ds
cmps
(bad)
mov
sub
scas
gs
ins
pusha
not
hlt
fiadd
sbb
cmp
pop
sahf
sbb
aad
in
jmp
test
adc
adc
lods
call
jae
and
inc
leave
(bad)
mov
cld
cmp
in
sub
clc
mov
sbb
jb
sbb
cmp
ret
lahf
in
sbb
ds
inc
outs
adc
(bad)
gs
fs
lahf
repnz
(bad)
xlat
fs
mov
cmp
inc
xchg
ds
xor
xor
add
ins
ss
das
push
sbb
sbb
xor
stc
add
fisttp
push
nop
fyl2xp1
xchg
aas
ret
or
dec
punpckldq
in
(bad)
repz
push
fsubr
mov
arpl
pop
loope
and
mov
cmp
and
inc
pop
fcom
cmp
std
mov
inc
lock
dec
sar
mov
dec
fdiv
enter
retf
pop
je
inc
push
add
sahf
cmc
mov
rol
sbb
sub
add
je
pop
push
adc
xchg
lods
int3
mov
imul
mov
sbb
leave
mov
or
daa
mov
inc
pusha
lods
push
adc
outs
in
gs
sub
(bad)
mov
jg
call
xchg
fiadd
cmc
js
sar
hlt
aad
loopne
fmul
push
nop
cmp
xlat
pusha
xchg
jne
sub
ins
vpmullw
and
mov
pop
push
mov
pop
mov
iret
add
xor
fisttp
icebp
sbb
xor
rol
cmps
ret
mov
out
sbb
sbb
push
popa
xchg
jno
repz
sub
dec
adc
add
inc
mov
dec
fild
popa
pop
sar
jge
mov
imul
push
lds
fistp
and
add
jmp
cdq
push
and
pop
mov
mov
and
call
ins
jle
hlt
jmp
sbb
push
jnp
mov
inc
mov
mov
jbe
mov
mov
jg
lock
mov
fstp
inc
adc
and
sbb
call
fwait
std
hlt
popa
arpl
sahf
push
adc
push
sub
xor
in
inc
mov
test
mov
xchg
std
xor
je
push
lods
popf
shl
mov
call
and
add
inc
inc
ret
lea
push
jp
push
in
mov
jne
xlat
add
adc
or
lds
sbb
sbb
fwait
loopne
cmp
sub
int3
cli
lock
sbb
or
xchg
in
ins
cmp
cwde
push
lods
mov
pusha
pop
pop
inc
in
cdq
cs
pusha
mul
pop
cdq
nop
hlt
dec
rcl
sbb
mov
xor
pop
cmp
iret
adc
in
inc
xor
lods
cmp
retf
inc
sbb
sar
js
adc
ins
popf
scas
out
xchg
mov
jne
push
lahf
jbe
xlat
adc
and
data16
xor
arpl
arpl
jge
int
test
imul
mov
ficom
mov
push
mov
dec
pop
add
cld
outs
mov
pop
test
and
cmp
dec
sub
inc
adc
cmp
movs
add
nop
adc
(bad)
(bad)
sub
cmp
push
stc
arpl
cdq
xchg
not
test
mov
dec
outs
jecxz
and
push
in
pop
pop
in
or
jo
push
aas
loop
nop
aad
in
push
mov
out
imul
mov
pop
adc
mov
jne
mov
xor
xor
and
push
loope
inc
xor
clc
inc
aad
or
push
mov
or
mov
xchg
adc
mov
movs
stc
cdq
sub
popf
mov
retf
jp
lods
inc
and
dec
cmc
inc
push
leave
sub
pop
fsub
sub
push
cld
jecxz
test
cmp
stos
(bad)
aam
mov
push
push
jmp
ror
jbe
popa
push
adc
xor
mov
mov
mov
lea
das
fnstsw
js
jb
fst
movs
rcr
das
(bad)
test
jb
shl
adc
jnp
sar
stc
mov
ret
test
ror
push
and
inc
add
cmc
mov
mov
mov
push
pop
mov
test
outs
in
hlt
pop
into
and
sub
push
call
pop
aam
push
or
fcom
xor
jnp
shr
mov
add
ficomp
lahf
nop
pop
std
call
fcomp
cmp
add
inc
sub
inc
sbb
out
int3
aad
sbb
lock
pusha
stc
fdivr
fwait
add
stc
loop
mov
xor
fstp
test
icebp
inc
mov
out
mov
push
sti
xchg
or
mov
fwait
inc
hlt
cmp
data16
in
jne
and
adc
pop
cld
dec
mov
sahf
and
dec
add
adc
add
jle
add
and
jb
mov
push
cmc
push
data16
xchg
jg
inc
loope
mov
push
stos
mov
xchg
hlt
ja
(bad)
cmp
gs
int
jne
push
jb
cs
pop
mov
or
jmp
or
pop
movs
push
call
mov
mov
int
add
pop
cmp
lods
mov
(bad)
aad
fnstenv
enter
push
xchg
bound
into
cld
icebp
sbb
jnp
out
lea
fbld
inc
xchg
and
cmp
inc
cmps
and
out
ins
mov
push
sbb
mov
cmp
add
xlat
leave
sbb
xlat
aam
jno
rcl
jmp
sar
frstor
sub
xor
and
xlat
lods
fs
add
stc
add
jg
sbb
ret
and
mov
and
mov
loopne
rcr
push
jmp
gs
clc
mov
in
fucomi
test
or
mov
fcomp
lahf
push
cdq
cmp
xor
inc
pop
mov
jmp
cmp
jecxz
loop
mov
sub
mov
adc
mov
cld
push
lods
xor
or
jecxz
outs
into
icebp
mov
mov
sar
fcom
rol
inc
dec
aad
in
repz
loop
loope
call
cmp
mov
dec
inc
clc
dec
(bad)
fwait
ds
mul
je
xchg
dec
push
mov
sbb
cmps
stos
jne
(bad)
(bad)
or
outs
cwde
pop
mov
inc
inc
push
cld
fcom
cmp
fs
xor
enter
enter
sbb
mov
mov
movs
imul
add
dec
and
push
cmp
sti
inc
lods
ja
dec
repz
add
sbb
out
popa
arpl
xchg
mov
dec
cld
outs
repnz
int3
ins
jge
hlt
dec
dec
bound
dec
cdq
jmp
mov
inc
mov
mov
cld
and
cld
or
icebp
mov
in
add
out
in
sub
pop
adc
sub
adc
(bad)
mov
pop
cmp
xchg
cmp
push
popa
xor
jb
push
nop
mov
pop
push
(bad)
xor
imul
(bad)
push
xchg
dec
bound
leave
add
ret
mov
imul
pop
aas
in
aaa
stos
repnz
rcr
mov
test
call
aad
push
sbb
pop
sub
(bad)
push
mov
mov
iret
aaa
outs
cmp
dec
adc
mov
cmp
mov
dec
frndint
cmc
inc
inc
sbb
sbb
ret
jb
imul
cwde
ror
pop
or
mov
adc
scas
cmc
dec
and
aas
adc
mov
gs
mov
add
fild
push
ret
in
jbe
cmp
sbb
dec
mov
cmc
adc
ret
pop
sub
cwde
push
call
lock
rcr
outs
dec
arpl
in
xor
shl
push
out
std
sub
stc
xchg
add
lods
sbb
cmps
ins
cmp
inc
es
or
adc
cli
pop
inc
xchg
mov
cmp
into
xchg
mov
mov
push
inc
rcl
inc
xchg
push
adc
sub
push
push
mov
sbb
stc
sbb
out
jmp
inc
lahf
outs
pop
sbb
push
ret
push
mov
xchg
cmp
ins
xchg
pop
xchg
inc
out
push
je
mov
cmc
outs
mov
mov
ror
add
rcr
out
dec
add
sahf
or
mov
sub
xor
dec
dec
out
push
loop
lea
fild
std
and
xchg
jne
daa
pop
int
add
sub
xor
sub
aas
cli
pop
adc
lods
xlat
call
push
cmp
add
jne
dec
add
sub
xor
adc
push
fwait
mov
lahf
inc
fisubr
js
call
aaa
pop
ficomp
and
repz
add
sbb
pop
mov
(bad)
scas
je
movs
retf
retf
imul
ins
mov
cmp
xchg
pop
data16
pusha
jmp
xor
(bad)
cdq
lock
sbb
xchg
push
mov
call
out
sti
daa
(bad)
stc
test
jno
je
retf
dec
mov
mov
mov
fnstsw
push
outs
push
xchg
psubusw
(bad)
inc
lods
pushf
xor
movs
inc
dec
mov
mov
test
jecxz
fwait
sub
jmp
cmp
push
in
test
mov
and
push
in
or
rol
jbe
mov
fwait
enter
or
push
inc
(bad)
rcl
aas
cdq
mov
inc
jne
jg
xor
arpl
dec
sbb
fidivr
and
sub
jo
mov
jbe
mov
dec
mov
adc
out
mov
sahf
add
fadd
pop
lds
inc
mov
ret
dec
loop
mov
iretw
pushf
(bad)
out
mov
(bad)
adc
mov
movs
sub
fild
sbb
or
inc
loop
rol
jmp
pop
ja
dec
cmps
es
stos
xlat
pop
test
loope
xchg
and
adc
pop
shl
cmp
loope
xchg
jb
stc
dec
outs
push
xchg
ss
and
sbb
outs
(bad)
fst
icebp
div
mov
sub
fsub
jge
lds
mov
fadd
jle
ja
loopne
mov
imul
xor
sub
sahf
int3
mov
push
and
jnp
outs
scas
ins
sbb
or
ins
or
je
dec
inc
movs
mov
bound
sbb
add
mov
cs
loopne
repnz
idiv
dec
xchg
sbb
xchg
test
leave
popf
mov
aas
inc
xchg
cmp
popf
nop
and
sbb
and
rcl
jmp
gs
aad
adc
jmp
mov
stc
cs
sbb
mov
aad
mov
jb
and
mov
lea
sub
inc
fnsetpm(287
mov
movs
ins
xchg
and
imul
movs
out
cmovae
xor
cmps
pop
or
cmp
fcmovnu
aas
aad
mov
cli
popa
loope
adc
and
iret
cmp
int3
pop
and
mov
movs
fmul
popf
enter
pop
call
into
inc
movs
cmp
gs
mov
and
outs
push
xchg
cmc
jecxz
xor
aam
daa
popf
dec
js
aad
lahf
cmc
xchg
xchg
call
jle
movs
adc
adc
iret
cmp
js
and
int
inc
sbb
outs
fist
sbb
out
xlat
or
sbb
dec
inc
push
mov
das
mov
sub
lahf
mov
add
in
clc
xor
icebp
fild
jb
mov
xchg
jo
pop
dec
(bad)
std
mov
loopne
lods
int
sub
jmp
and
inc
add
lock
sbb
push
and
jno
icebp
mov
mov
and
jne
addr16
ins
aaa
cmp
call
inc
in
and
sbb
arpl
mov
and
dec
fistp
pop
lods
(bad)
and
sub
cmc
or
or
jl
jl
ret
fs
mov
aaa
mov
pop
inc
aam
fstp
mov
and
nop
pop
cdq
(bad)
stos
out
pop
mov
es
in
lahf
imul
into
dec
shl
sub
movs
mov
push
enter
xor
mov
pop
mov
and
ja
adc
push
ror
lods
cmp
jno
jmp
add
clc
cmps
adc
inc
cmp
push
push
add
inc
sti
test
popa
mov
out
lds
iret
sub
je
test
lods
pop
rcr
out
sti
ror
inc
mov
dec
sbb
movs
aas
shl
das
xor
shl
jl
movs
ss
mov
cdq
add
test
enter
add
in
bound
ficom
arpl
or
jmp
imul
out
jmp
paddq
out
frstor
aam
mov
out
shl
iret
cwde
dec
ror
out
mov
loopne
mov
mov
add
shl
rcl
sub
pop
mov
les
mov
scas
ja
mov
mov
xchg
call
retf
and
arpl
out
call
push
call
jle
push
or
dec
xor
cli
xlat
test
(bad)
pop
jbe
inc
inc
lock
and
loop
scas
add
enter
jmp
pusha
dec
int3
cmc
stc
pop
ret
inc
mov
add
(bad)
xor
shl
mov
cwde
(bad)
inc
add
mov
push
shl
push
clc
in
pop
lock
nop
imul
adc
lods
fadd
sub
sbb
movs
cmp
pop
jne
repz
adc
test
jo
js
sub
jo
dec
in
in
fwait
neg
cwde
pop
lock
arpl
pop
adc
js
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
sbb
sar
mov
shl
sti
retf
jne
inc
push
cmc
inc
pop
fcomp
mov
fdivr
mov
fdivr
mov
sar
mov
shl
cwde
jae
in
mov
sub
mov
fdivr
mov
pop
fdivr
mov
sar
mov
sar
cwde
inc
rcl
push
sub
mov
enter
pop
in
push
shl
popa
inc
push
std
movs
inc
push
sbb
push
pusha
push
psadbw
and
pop
mov
(bad)
add
imul
ret
push
xor
pop
ret
hlt
sahf
xor
add
push
xchg
jle
push
aaa
popa
mov
jmp
mov
popf
mov
add
nop
sti
and
sar
sti
cmp
push
sbb
pushf
jmp
adc
xchg
add
push
movs
cdq
mov
js
mov
xor
cmp
cld
lods
push
xor
and
ret
in
outs
mov
inc
imul
out
sub
sar
pop
int3
les
inc
jnp
(bad)
sub
inc
ss
dec
and
add
jl
cld
fldcw
pop
sub
out
repnz
out
or
mov
inc
mov
(bad)
lods
mov
test
jmp
sub
push
loopne
iret
jmp
inc
mov
xchg
push
inc
fwait
push
mov
sbb
xchg
pop
aaa
iret
push
out
(bad)
js
arpl
dec
cmps
mov
and
pusha
(bad)
lds
inc
nop
and
cmp
leave
add
inc
(bad)
mov
test
cmc
outs
sub
or
dec
in
cmps
fstp
outs
or
jnp
fadd
js
sbb
xchg
dec
sbb
jns
in
xchg
inc
sahf
ss
mov
and
loope
enter
inc
test
repnz
push
stos
or
pop
aaa
pushf
lods
cwde
add
inc
mov
sub
sub
rcl
test
fs
dec
enter
adc
cmc
cmp
sub
mov
mov
pop
pop
aaa
ja
popf
push
sub
add
test
mov
xchg
pop
inc
mov
ja
xchg
outs
les
loop
or
sar
sar
xor
lea
xchg
pop
xchg
ror
mov
retf
push
dec
mov
push
(bad)
call
pop
call
adc
arpl
pop
lds
add
(bad)
push
ins
push
bswap
or
imul
or
mov
and
iret
sub
add
cwde
push
in
icebp
mov
mov
xor
(bad)
xchg
jge
push
inc
jns
das
ret
test
jmp
cmp
lods
fst
push
adc
cmp
jno
or
mov
bound
fs
ror
and
cli
dec
aam
pop
rol
(bad)
sti
bound
mov
aam
xchg
inc
pop
std
mov
rcr
dec
aam
nop
lds
std
mov
push
call
std
test
rcr
cwde
pop
call
jne
jecxz
les
dec
stc
in
xor
push
mov
and
mov
(bad)
mov
clc
in
pusha
dec
js
cmp
outs
jmp
jo
jnp
psubsb
and
cwde
jge
dec
sbb
scas
mov
fmul
mov
sahf
fcmovnbe
outs
sub
test
les
fwait
xchg
pop
data16
mov
mov
test
fdiv
jmp
sar
int3
pop
ret
xchg
loopne
fwait
gs
xchg
pop
pop
xchg
mov
ins
repz
(bad)
in
push
stos
scas
and
pop
add
mov
ficomp
inc
gs
std
push
push
ds
cwde
retf
(bad)
in
cmp
dec
mov
inc
daa
dec
test
sbb
inc
and
cmc
jp
call
imul
gs
xchg
fidiv
xchg
cmp
in
push
adc
inc
sbb
dec
and
push
push
xchg
mov
ret
pop
cli
xchg
loop
add
mov
test
mov
push
mov
leave
mov
jmp
in
test
dec
sub
sub
adc
enter
jb
in
bound
ins
mov
jne
das
addr16
adc
xor
pop
test
into
inc
mov
xor
pop
aad
push
daa
test
(bad)
push
imul
aas
push
sar
clc
push
dec
daa
dec
pusha
xor
sub
(bad)
mov
sub
popa
cli
icebp
movs
fs
pop
ins
add
ret
(bad)
mov
xor
mov
mov
cmp
scas
add
cmp
pop
(bad)
arpl
imul
pop
dec
cmp
fwait
inc
jle
push
sub
push
ss
pop
jl
add
dec
dec
inc
frstor
xchg
in
pusha
push
data16
push
imul
xor
(bad)
and
retf
clc
outs
push
fcom
mov
push
pushf
test
mov
in
out
aad
sub
pop
xlat
xor
xchg
sbb
cs
sbb
out
int3
ret
or
adc
adc
add
add
jmp
or
inc
adc
lock
push
jge
add
fstp
lds
repz
mov
movs
(bad)
push
xchg
outs
loop
and
imul
das
jne
pop
mov
test
sbb
xchg
or
and
mov
jge
or
adc
inc
sbb
xchg
movs
xchg
rol
push
mov
fistp
cwde
loopne
cmp
out
div
push
mov
push
hlt
sahf
mov
addr16
add
lods
push
mov
mov
push
(bad)
or
pop
loopne
or
or
hlt
mov
inc
movs
call
and
stc
add
outs
in
mov
out
call
xchg
pop
jbe
mov
and
dec
dec
push
(bad)
scas
push
and
loopne
sub
js
xchg
inc
and
loop
fild
fsubrp
mov
mov
jns
scas
pushf
or
int3
out
aad
xchg
fcmovne
mov
mov
outs
in
retf
movs
outs
mov
test
(bad)
not
jne
mov
pop
mov
adc
sti
jl
jp
cmp
sbb
jne
scas
aas
mov
xchg
rcl
jbe
push
adc
repz
cwde
jl
retf
pop
sub
fld
mov
(bad)
cmc
mov
pop
enter
fdivr
mov
dec
inc
fnstsw
leave
shr
xor
inc
jl
pop
shl
inc
fidivr
dec
pop
mov
dec
lock
mov
pop
inc
jb
out
jns
and
xor
ret
(bad)
and
cmps
int3
aas
push
xor
pop
fistp
popa
pop
aas
jmp
mov
pop
sub
dec
nop
push
je
test
(bad)
icebp
inc
jecxz
xchg
cld
lock
shl
mov
cmps
xchg
lods
repz
inc
sub
retf
test
outs
pop
push
je
retf
pop
or
push
add
aad
xchg
int3
mov
add
sahf
icebp
cs
mov
leave
pop
and
pop
dec
xchg
loopne
cs
adc
cs
sbb
scas
enter
or
add
fimul
sbb
pop
jae
movs
xchg
mov
pop
inc
pushf
pop
ds
sub
stc
ins
inc
retf
lahf
test
pop
loope
or
sbb
jg
dec
repz
dec
push
jl
enter
dec
je
mov
ds
dec
imul
retf
and
je
pop
movs
jae
or
adc
movs
jg
(bad)
sbb
pop
hlt
add
cmp
les
xchg
jo
cmps
aad
jb
lods
adc
jnp
inc
pop
and
cmp
sub
fnsave
jge
movs
cmc
xchg
mov
aam
fs
inc
ins
or
inc
loop
jl
(bad)
scas
addr16
mov
pop
imul
aam
push
mov
cs
push
retf
inc
aam
in
int
dec
hlt
inc
shl
xchg
jb
xchg
out
mov
mov
adc
fwait
sbb
adc
jmp
cmp
cli
lock
mov
cwde
fs
add
add
and
cmp
xchg
xchg
mov
push
mov
ja
pop
push
sbb
dec
or
stos
cmp
mov
ret
movs
xchg
fs
mov
daa
rcl
push
jmp
pusha
jecxz
in
xchg
xchg
sbb
inc
jmp
add
stos
push
jmp
int
mov
imul
nop
test
mov
sahf
and
cdq
call
xor
hlt
sbb
loope
call
adc
call
and
add
aaa
jge
jmp
mov
dec
adc
iret
mov
fisub
xor
leave
lea
xchg
sysexit
retf
gs
add
xchg
test
and
xchg
mov
push
and
push
addr16
cs
aas
xchg
shr
jp
jp
in
hlt
sbb
jle
iret
cmp
inc
xor
ss
push
inc
pop
rol
mov
xlat
in
mov
dec
shl
dec
fdivr
mov
shr
mov
clc
jne
pop
push
fs
dec
leave
hlt
adc
inc
je
jmp
daa
leave
pop
add
popf
cmc
test
dec
or
in
clc
fistp
je
cmp
aad
xor
jb
mov
jne
xor
stos
or
adc
hlt
stos
mov
sub
iret
data16
iret
sysexit
mov
movs
or
in
sbb
je
sar
test
addr16
inc
xchg
imul
mov
test
ins
xor
cli
mov
pushf
pop
xor
neg
mov
inc
jmp
pop
pop
mov
and
fcomi
inc
mov
in
mov
jmp
lods
dec
sbb
mov
popa
aam
dec
pop
mov
and
jnp
sbb
pop
mov
leave
sbb
fwait
jmp
mov
(bad)
cmp
out
jge
mov
mov
mov
xor
mov
sar
ins
scas
mov
mov
sbb
dec
pop
lods
jmp
jl
xchg
imul
dec
xor
outs
pop
arpl
jecxz
or
mov
sbb
jns
push
repnz
(bad)
ds
aad
ret
xchg
aad
ins
dec
mov
rol
addr16
fadd
dec
push
xchg
out
mov
sub
adc
es
mov
mov
inc
movs
pop
repz
push
mov
(bad)
call
imul
adc
or
(bad)
fwait
pushf
inc
pop
je
cmp
pop
out
inc
fsubrp
dec
mov
dec
pop
sahf
push
push
(bad)
mov
add
call
mov
retf
xor
mov
xor
imul
das
movs
js
fcomp
(bad)
sub
test
xchg
ins
out
pop
(bad)
pop
mov
ins
mov
inc
outs
mov
push
into
inc
and
imul
pop
cli
lahf
scas
or
pusha
call
test
mov
pop
lea
pop
inc
sub
and
lea
mov
ins
cmp
pop
adc
movs
push
fmul
adc
inc
and
mov
inc
enter
fsub
hlt
mov
mov
cdq
ja
cmp
dec
lds
mov
mov
stos
bound
hlt
add
jg
aas
sbb
std
adc
push
(bad)
fwait
aas
fwait
push
sbb
pop
xchg
mov
push
xor
cmp
mov
add
dec
int3
adc
out
test
mov
mov
in
fcom
xchg
int3
jecxz
inc
push
imul
jl
add
aam
cmp
stc
cwde
scas
retf
out
shl
mov
imul
aaa
and
or
iret
pusha
jb
(bad)
aas
out
pop
je
imul
loop
mov
xor
lods
add
xor
inc
jb
or
(bad)
loopne
dec
cwde
rcl
xchg
xchg
pop
aas
shr
mov
jbe
ret
xchg
push
xchg
push
mov
jge
push
repnz
cmp
hlt
out
stos
enter
sub
add
loope
dec
add
add
and
fldcw
(bad)
mov
shl
retf
xchg
xchg
mov
inc
cli
jmp
mov
test
sub
stc
fstp
push
ret
cwde
rcr
dec
sub
mov
sbb
sbb
sub
and
mov
pop
pop
out
nop
push
ins
adc
cdq
add
dec
ins
nop
mov
dec
ja
stos
pop
ss
(bad)
fsub
or
scas
mov
rol
repz
pushf
cmps
loopne
adc
dec
cmp
xchg
cmps
pop
das
push
dec
push
fs
xor
inc
xor
add
inc
add
pop
std
jl
loopne
push
xchg
jnp
inc
mov
mov
daa
sar
call
sub
adc
(bad)
gs
adc
push
dec
push
mov
or
cli
sti
mov
rcr
push
call
std
mov
inc
pop
(bad)
inc
dec
in
cmp
idiv
dec
cli
pop
stos
retf
mov
shl
dec
dec
out
and
fsqrt
sub
pop
push
cdq
push
jbe
daa
rol
mov
les
pop
or
lock
enter
icebp
mov
sti
adc
clc
and
outs
adc
pop
and
push
sti
(bad)
jle
xchg
dec
pop
jge
pop
xor
sbb
or
ja
test
test
pop
push
push
sti
push
outs
cmp
jle
pop
out
cmps
sub
mov
dec
or
cmp
cld
test
sbb
push
mov
mov
adc
in
pop
xlat
mov
pop
jmp
imul
mov
jmp
mov
ds
fistp
mov
inc
xlat
iret
xchg
push
cmp
retf
pop
jnp
popf
sbb
and
adc
mov
cmps
jne
xchg
clc
push
in
out
xchg
mov
pop
pop
push
aas
stc
sbb
add
sub
pop
inc
int
or
pop
jns
and
fidivr
adc
or
pop
js
stos
in
xchg
out
pop
ss
das
cld
aad
mov
test
add
repz
pop
(bad)
cmp
dec
pminub
cmps
push
fsub
ja
or
aaa
push
fwait
adc
jge
mov
inc
adc
mov
xchg
in
and
sbb
adc
mov
and
sahf
or
sbb
inc
push
pop
adc
fs
aas
aaa
xchg
inc
nop
lea
jmp
into
lods
shl
cmp
and
retf
jmp
sti
add
xor
inc
xor
cs
jmp
call
cmp
push
xor
and
dec
nop
lods
dec
and
je
xor
imul
std
push
movs
mov
out
sbb
jns
push
cmp
add
xor
aaa
fisub
jae
add
inc
jne
pop
cmp
xchg
cmp
cmps
adc
cmp
push
and
cmps
adc
pop
ret
xor
or
call
call
outs
pop
(bad)
or
sbb
ja
and
cmp
jge
jge
enter
hlt
imul
scas
xlat
xor
hlt
xchg
push
push
or
jecxz
(bad)
shr
mov
xchg
dec
sbb
aam
xor
mov
ds
mov
in
aas
dec
aaa
xor
inc
in
cmp
sbb
loop
mul
mov
scas
mov
out
sub
pop
leave
and
fs
popf
xchg
jno
pop
arpl
cwde
dec
xchg
cmc
add
ret
jp
pop
or
or
frstor
(bad)
cmp
pop
xor
(bad)
mov
fwait
lods
adc
pop
sub
test
mov
rol
loopne
aad
jae
dec
es
out
retf
push
into
out
imul
dec
sub
xor
or
or
data16
ins
jmp
push
lock
jle
leave
jecxz
add
ins
xchg
(bad)
mov
retf
add
mov
lods
sbb
sub
xor
fist
add
aaa
outs
or
inc
mov
sbb
pop
xchg
lahf
push
sub
ror
ins
xchg
lds
popf
mov
add
test
mov
aad
test
xor
mov
jmp
(bad)
add
call
or
rcl
pop
xchg
pop
xchg
fstp
push
retf
lods
jo
(bad)
mov
shl
gs
in
dec
leave
shl
or
jg
cmps
test
packssdw
(bad)
fsubr
hlt
cdq
call
(bad)
mov
dec
arpl
add
push
sub
push
jp
ret
vpunpckldq
ja
mov
lods
inc
jmp
and
ret
fdiv
sar
inc
sbb
xor
jmp
push
or
and
aaa
test
mov
retf
xchg
cmps
jge
cwde
mov
cmp
add
mov
rcl
std
mov
into
cmp
pop
sbb
cmp
xor
mov
sbb
scas
push
int
push
jle
retf
cmp
scas
ss
push
lds
push
jp
mov
test
je
movs
gs
cmc
dec
push
(bad)
xor
fidivr
mov
neg
lock
dec
xlat
pushf
xchg
fcomp
loopne
test
rcr
fucomp
aaa
rcr
pop
add
mov
dec
jne
fisttp
pop
jno
jecxz
add
and
sub
iret
mov
cmp
push
loopne
in
cmp
add
inc
jmp
mov
imul
jge
test
sub
mov
out
fdiv
or
add
xchg
ins
sub
and
dec
fnstsw
rol
in
cmp
cmp
cmp
pop
cld
jmp
jne
cmp
dec
sub
adc
or
call
in
jecxz
mov
or
fadd
mov
popf
jge
cs
jnp
cli
dec
pop
icebp
sbb
push
sti
cmovo
test
and
imul
mov
jge
test
xor
les
xor
push
xchg
push
cmp
add
jbe
pop
mov
push
xchg
js
ins
adc
sbb
test
cmp
dec
cld
je
fsubr
mov
jne
mov
das
pop
pusha
mov
mov
cmp
mov
cmp
adc
into
add
mov
or
mov
adc
mov
sub
call
test
sub
scas
jbe
dec
movs
clc
in
loope
in
pop
aam
push
nop
ss
add
nop
push
xor
out
in
fisub
jle
and
mov
push
stos
test
pop
mov
mov
call
mov
fs
call
inc
outs
movs
jbe
mov
xchg
push
sti
sahf
lods
repnz
lods
xor
or
retf
sbb
or
mov
sub
pop
jmp
lods
mov
cmp
xchg
or
repz
fidivr
sbb
cmp
sbb
mov
or
pop
mov
imul
gs
retf
out
dec
pop
mov
cs
icebp
pop
pop
cmps
push
mov
inc
retf
sbb
sbb
add
mov
ja
jp
and
call
add
jg
pop
dec
or
add
fisub
int
div
jmp
pop
imul
mov
sbb
pusha
shr
and
mov
sub
mov
mov
dec
dec
test
push
inc
mov
call
mov
dec
mov
xchg
mov
cmp
fiadd
aas
(bad)
adc
mov
movs
mov
in
jmp
xchg
xchg
fwait
and
xchg
les
push
das
cli
cmp
out
cmc
addr16
jge
fbstp
lods
outs
popf
cmp
jns
and
icebp
mov
push
inc
in
and
sub
mov
(bad)
jmp
fwait
add
(bad)
push
mov
pushf
lock
icebp
sti
xchg
dec
out
je
dec
in
mov
movs
dec
xchg
pushf
out
in
jb
xchg
push
idiv
int
xchg
out
mov
adc
or
fmul
sbb
dec
ret
dec
xchg
push
inc
dec
aam
fdivp
or
daa
lock
sar
ja
(bad)
retf
cmp
leave
pop
hlt
or
or
sbb
or
fimul
sahf
inc
cmc
xchg
les
call
cmps
shl
cwde
inc
sbb
mov
dec
call
fwait
or
push
jg
xor
mov
mov
repz
cmc
xchg
(bad)
out
fldl2e
shl
xchg
or
daa
fisubr
mov
lea
sub
mov
dec
call
add
daa
push
rcl
div
dec
repnz
mov
inc
cdq
lahf
cmp
dec
cmps
mov
and
cmp
fmul
mov
fst
es
out
leave
(bad)
popf
sub
mov
xchg
pop
jp
ret
lahf
repnz
adc
xor
out
mov
mov
loope
imul
jle
out
out
ins
lds
adc
cmp
cmps
es
push
lahf
mov
pushf
pop
iret
js
loope
(bad)
setge
repz
or
cmps
ds
pop
xchg
(bad)
or
cmp
and
push
iret
mov
popf
mov
test
imul
push
sub
das
int3
dec
sub
mov
arpl
cmc
nop
dec
rcr
dec
fdiv
mov
fdivr
mov
dec
fdiv
enter
into
pop
jp
int
repz
inc
fld
push
inc
rol
dec
cmps
pop
cs
aad
sub
(bad)
mov
or
cmps
xchg
sub
lds
xchg
(bad)
movs
dec
(bad)
js
inc
mov
adc
add
jmp
fwait
push
test
fcmovu
sti
and
sbb
sbb
jge
lahf
inc
push
or
mov
outs
lods
fucomp
int3
cmp
cmp
ret
pop
push
mov
das
adc
mov
cwde
call
ja
cld
add
jne
add
or
xchg
jo
shl
call
icebp
pop
repnz
scas
js
sbb
dec
adc
es
in
dec
xchg
jmp
arpl
xchg
call
sti
xchg
cld
mov
push
dec
dec
inc
test
lods
jmp
inc
(bad)
xchg
and
in
test
test
not
or
adc
and
and
pop
scas
push
out
test
aam
ins
sahf
popa
add
adc
mov
inc
call
jmp
dec
add
daa
test
movs
fucomip
xchg
xchg
loopne
rol
clc
loop
xor
or
add
mov
lea
repz
sbb
xor
push
in
cmp
sti
test
inc
out
jp
push
add
jmp
add
fcmovne
lds
pop
rcr
out
pushf
pop
aas
mov
adc
call
pop
sub
adc
sbb
(bad)
cmp
push
aaa
push
jmp
mov
sbb
out
add
fimul
dec
xor
push
pop
inc
adc
icebp
pushf
cwde
outs
mov
xchg
and
ds
jp
or
sar
movs
stos
pop
nop
ins
mov
aas
repnz
ficomp
stos
mov
inc
in
and
adc
icebp
scas
adc
jb
fst
mov
loopne
test
inc
mov
jno
ficom
shl
cmp
aas
imul
test
repz
sbb
fisub
and
jns
and
pop
pop
stos
cs
fidiv
add
mov
in
mov
or
jg
dec
or
jmp
sti
icebp
scas
pop
cwde
stc
sub
rcl
dec
add
lods
repnz
(bad)
lds
or
jo
dec
cmp
(bad)
aam
les
leave
inc
icebp
inc
mov
fwait
sub
sbb
scas
inc
out
icebp
mov
or
jae
jge
or
in
jmp
imul
jle
jle
int
test
mov
sar
pop
dec
mov
movs
mov
cld
mov
xchg
push
sahf
retf
(bad)
push
test
out
test
xchg
inc
lds
test
pusha
stos
ret
dec
xchg
call
adc
dec
in
rcr
es
cmp
mov
push
loopne
xbegin
rcr
test
sbb
nop
mov
fidivr
rcr
loop
popa
sbb
sub
scas
adc
sar
out
into
pop
push
jns
push
xchg
mov
in
imul
jge
int3
scas
mov
mov
inc
dec
aas
dec
lea
dec
push
cmp
xchg
ficomp
mov
push
add
xor
test
or
push
fst
sub
push
mov
push
inc
push
aas
pop
adc
data16
adc
into
rcr
ret
aas
popf
pop
ret
in
adc
xchg
pop
sbb
inc
jecxz
ss
jle
dec
cmc
out
test
repz
sbb
in
push
push
mov
pop
sub
and
in
movs
fld
mov
adc
sti
mov
mov
arpl
rcl
scas
mov
outs
pusha
enter
mov
dec
test
loopne
jno
jmp
gs
repnz
enter
(bad)
call
test
bound
stc
(bad)
xchg
sbb
ror
rol
adc
or
lds
in
dec
ds
imul
inc
leave
inc
sbb
mov
fwait
inc
inc
mov
lods
dec
pusha
xor
jl
sub
fisub
xchg
jmp
std
out
adc
jnp
push
jbe
rol
sub
movs
pop
ftst
sbb
std
mov
stos
test
mov
idiv
(bad)
mov
daa
jle
cmp
jne
dec
call
repnz
or
test
jp
stos
jp
call
mov
loope
hlt
call
jno
lods
fwait
or
xchg
dec
cli
in
xchg
inc
lock
cmp
cmp
(bad)
jo
pop
nop
mov
(bad)
cmp
xchg
repnz
sub
xchg
xor
push
rcl
fbld
sbb
in
sub
loope
fwait
dec
dec
xchg
xchg
pop
adc
sti
bound
or
in
xor
mov
push
daa
out
push
mov
add
shld
pop
cmp
fimul
hlt
popf
mov
cmps
push
repnz
imul
jne
mov
jmp
shr
pop
aad
test
inc
stos
mov
mov
pusha
int3
nop
imul
pop
xor
test
not
fist
icebp
jle
inc
retf
jne
sahf
test
xchg
loope
cmps
fwait
dec
mov
ins
retf
movs
push
fimul
lock
test
add
ins
jecxz
leave
ret
stos
das
pop
ret
ins
adc
push
addr16
movs
hlt
bound
xchg
dec
movs
add
nop
imul
or
mov
in
pop
xchg
xchg
rol
fisttp
dec
bound
mov
shl
lods
cmp
mov
fild
mov
inc
or
dec
sub
pop
inc
out
test
hlt
dec
add
mov
xchg
loope
aam
push
mov
cmp
xchg
call
retf
retf
dec
test
movs
mov
adc
xor
xchg
push
xchg
xchg
adc
repz
lods
push
xor
dec
pop
mov
and
adc
jne
sbb
cld
fdivr
sbb
add
loop
(bad)
jno
sub
sub
mov
inc
add
ja
scas
dec
push
les
fistp
aam
and
cwde
out
pop
fs
lahf
mov
test
inc
sub
hlt
and
jmp
in
jle
pop
lds
das
dec
fisubr
shl
in
mov
push
inc
and
jmp
jmp
and
loopne
rcl
sbb
sbb
ror
push
xor
lods
xlat
push
and
sub
mov
xor
sbb
scas
jmp
push
add
mov
std
mov
inc
nop
push
js
shl
lea
dec
loop
std
js
dec
jp
mov
popf
push
and
adc
adc
cmp
dec
jp
dec
xor
leave
push
sub
cmps
jl
jmp
int
jb
xchg
not
mov
inc
adc
repnz
in
ret
xor
in
xchg
dec
or
ins
jo
movs
jge
stos
pusha
lods
mov
fcomip
rol
mov
inc
lock
nop
mov
enter
shl
push
fdivr
mov
inc
pop
hlt
cmp
(bad)
xor
fdivr
leave
pop
add
xchg
cmc
mov
dec
cwde
mov
push
mov
inc
icebp
sti
out
sbb
mov
cmps
sub
mov
mov
mov
clc
mov
mov
shl
xchg
(bad)
cmp
xchg
aam
adc
xchg
jmp
movs
xor
mov
nop
cmp
cwde
adc
ror
mov
sar
loop
mov
jnp
add
jle
xor
dec
fnsave
mov
mov
ret
les
sbb
mov
push
inc
repz
sub
fdiv
mov
push
sub
popa
arpl
add
sbb
inc
daa
jno
mov
sbb
mov
call
sahf
jle
or
sahf
mov
or
mov
call
mov
jmp
mov
mov
push
mov
pusha
mov
shr
ins
and
push
mov
sahf
push
pop
lahf
cwde
jbe
jle
loopne
rcl
pop
in
mov
push
cdq
stc
mov
mov
adc
add
scas
ret
ror
mov
mov
dec
jp
or
or
cwde
scas
push
nop
push
lahf
int
or
and
sbb
jnp
push
push
pop
add
push
cdq
mov
mov
movntps
std
lds
aad
rcl
inc
gs
or
pusha
pop
inc
sbb
sbb
mov
jb
nop
cmps
addr16
adc
mov
call
xchg
dec
sub
jbe
fistp
lea
js
aaa
sbb
mov
cmp
ins
pop
ja
xor
fnstsw
add
xor
or
aam
je
pop
sti
or
(bad)
shr
stc
mov
add
mov
dec
cmp
fnstenv
sar
cmp
call
push
jne
mov
cmc
shr
imul
xchg
and
sbb
call
and
dec
lds
out
fnstsw
mov
xchg
stos
adc
add
push
rcl
inc
add
mov
ffree
push
xor
popf
add
cmp
sub
int3
sub
mov
pop
cmc
mov
push
rcr
mov
dec
shl
mov
leave
fdiv
retf
pop
icebp
ds
pop
lock
inc
fincstp
xor
add
clc
mov
push
push
sar
fcomip
into
add
out
or
arpl
icebp
add
cmp
test
cmp
and
xchg
push
sub
(bad)
cmc
mov
cs
cmps
loope
lds
mov
loopne
sahf
inc
adc
push
js
mov
push
cmp
add
adc
sbb
sub
inc
sub
retf
dec
int3
dec
adc
xor
imul
pusha
and
and
xor
pushf
rcr
or
or
stc
dec
loop
ret
lahf
addr16
mov
xchg
jo
mov
push
jmp
mov
inc
nop
mov
fist
push
push
stos
enter
pop
test
pushf
mov
aaa
jle
or
add
push
je
and
mov
push
sbb
mov
or
sub
pop
adc
dec
push
push
cmp
inc
fmul
jmp
mov
adc
mov
retf
xchg
sub
xchg
inc
pusha
pop
ds
push
pop
xchg
and
test
sub
mov
xor
mov
ja
cld
adc
add
(bad)
mov
test
call
mov
(bad)
enter
mov
push
int
jle
or
pushf
sub
add
sbb
push
or
jne
pop
lods
push
dec
sbb
mov
dec
(bad)
push
cmc
add
push
clc
or
daa
(bad)
scas
loopne
jmp
mov
adc
sub
in
add
nop
out
test
cmp
fild
pop
jbe
jae
pop
out
dec
add
retf
sti
adc
and
stos
imul
and
cmp
ins
rol
pop
movs
and
inc
sub
sbb
aas
test
xchg
je
das
xchg
retf
or
mov
jmp
xchg
and
or
call
dec
scas
jno
pusha
mov
sbb
mov
mov
lahf
pop
mov
mul
or
xor
loope
jg
cmp
jns
ss
xchg
fisub
mov
pushaw
je
cmp
fldz
lock
pop
xor
xchg
shl
add
xchg
adc
aas
movs
scas
push
movs
sbb
mov
leave
out
xchg
jns
and
adc
mov
ficom
sub
push
mov
mov
cmp
lock
jecxz
sbb
jl
add
adc
outs
sbb
in
aam
mov
adc
adc
or
pop
ret
dec
leave
mov
icebp
call
xlat
mov
inc
in
in
scas
neg
cmp
dec
pop
xor
fstp
test
call
mov
push
push
xor
jg
xchg
in
icebp
xchg
fdiv
addr16
mov
scas
out
pusha
fxch
xchg
or
sub
cdq
mov
cmp
jo
retf
sub
mov
movs
rcl
sub
adc
mov
mov
shr
inc
rcr
mov
dec
fdiv
cmp
je
inc
fdiv
iret
pop
cmc
aaa
into
aam
aaa
dec
(bad)
pop
push
inc
rol
jg
jg
arpl
into
cmc
add
frstor
(bad)
aaa
fcomp
jbe
and
push
pusha
fs
lds
mov
aam
fstp
les
inc
or
pop
adc
xchg
mov
add
test
sbb
jae
ss
ret
out
xlat
dec
popf
jns
jbe
scas
jg
ss
test
mov
loope
xchg
mov
fsubr
pop
imul
jle
lock
pushf
sbb
dec
bound
sbb
mov
pop
push
cmp
ret
mov
arpl
in
dec
test
or
pop
jae
jl
retf
cdq
scas
and
xor
inc
jbe
scas
jnp
inc
sub
(bad)
lods
push
mov
imul
mov
fwait
mov
inc
sbb
nop
mov
push
or
push
mov
mov
and
ret
out
in
std
adc
out
xchg
(bad)
push
xor
movs
jmp
inc
sub
and
pop
ficomp
mov
in
mov
xor
inc
mov
add
mov
xchg
stc
hlt
push
ror
mov
lds
loopne
push
ret
cmp
add
data16
sbb
repz
push
xchg
clc
push
mov
or
pop
pop
repnz
iret
xor
push
icebp
iret
cmp
mov
and
pop
pop
add
ret
mov
and
repnz
out
jp
mov
mov
mov
outs
inc
lods
xchg
cli
xchg
push
jge
cmp
sbb
stc
addr16
mov
gs
lahf
ins
mov
or
jp
fld
fnstsw
aad
pop
in
fst
add
mov
mov
in
or
shl
add
pushf
in
aad
aas
shl
leave
int
cld
repz
and
jae
repz
xchg
retf
mov
or
sbb
mov
jo
cdq
jge
ds
dec
pop
and
mov
inc
ins
es
pop
pop
or
in
adc
mov
shl
mov
dec
jge
clc
jae
hlt
xor
in
mov
out
jmp
adc
push
test
lock
push
push
(bad)
stc
xor
test
inc
icebp
std
pushf
pop
out
ins
push
(bad)
retf
in
mov
jns
xlat
push
xchg
mov
loope
sbb
(bad)
adc
push
shl
inc
std
retf
sti
data16
mov
pushf
jle
push
pop
xchg
pop
stos
jo
rol
mov
iret
out
fnstenv
mov
jb
jl
xchg
retf
icebp
sub
je
push
shl
jmp
movhlps
jge
fwait
sbb
pop
cmc
das
mov
push
or
(bad)
imul
jb
shr
loop
adc
out
push
ins
test
add
pop
xor
inc
cmc
or
sub
das
mov
je
sti
cmp
inc
push
imul
rol
sub
rcl
in
lock
sti
inc
fdivr
aaa
jae
adc
push
mov
cmps
mov
jnp
push
mov
cmp
cmps
jmp
das
lods
div
scas
test
sub
sbb
inc
fdivr
loope
jmpw
shl
xor
or
movs
or
sbb
movs
rol
or
xchg
push
xor
push
loope
push
sbb
mov
sar
loop
mov
lea
(bad)
out
jl
mov
jae
pop
xor
dec
jno
or
push
xchg
jns
outs
push
and
inc
mov
or
and
mov
lock
int3
add
xor
sbb
push
lea
repnz
mov
cmps
int
aam
lods
fucomp
and
loope
cmp
mov
lods
pusha
lods
cdq
push
iret
cmp
mov
xlat
cmp
mov
mov
fild
aad
in
addr16
sub
push
mov
rcr
mov
dec
enter
cld
cmp
or
or
sub
sbb
mov
push
jecxz
out
and
xchg
or
mov
mov
sahf
fdivr
outs
ror
adc
sub
fmul
adc
je
mov
ds
sbb
cmp
scas
push
test
dec
mov
add
sub
xchg
mov
xor
test
iret
shl
nop
xchg
lods
ror
out
popa
inc
arpl
rol
stos
xchg
je
ins
mov
ja
jp
jle
jp
lahf
add
push
aad
sub
popf
or
ficom
jge
rcr
mov
push
sub
clc
mov
xor
push
jle
test
(bad)
inc
mov
lods
lods
add
inc
cmc
sub
fcom
or
cmp
mov
push
add
lds
sti
stos
fwait
nop
push
add
je
hlt
add
sbb
inc
adc
mov
adc
test
push
xchg
pop
mov
cmp
mov
mov
jnp
pop
mov
es
adc
sub
push
jecxz
test
add
add
sub
div
popa
pop
imul
lods
inc
inc
test
(bad)
pop
mov
jl
sub
popw
pop
pop
or
and
mov
adc
stos
aam
and
xor
leave
push
mov
icebp
int3
rol
retf
mov
loop
jne
aad
(bad)
xchg
cmp
and
push
and
mov
fcomp
jae
into
push
loop
bound
sub
inc
or
icebp
push
stc
idiv
pop
sub
mov
mov
mov
push
lods
retf
jmp
mov
sar
and
xchg
bound
mov
xchg
mov
stc
aad
rcl
clc
dec
pop
pop
repnz
hlt
sbb
push
fiadd
cld
inc
pop
sub
inc
dec
je
add
nop
jecxz
pop
jno
pop
push
mov
repz
lods
pop
shl
add
pop
scas
inc
jge
mov
jg
in
xor
shr
xchg
mov
mov
mov
pop
push
(bad)
mov
(bad)
sub
jecxz
inc
add
int3
inc
dec
dec
add
lds
inc
push
clc
ins
in
enter
mov
mov
xchg
movs
cmp
ins
add
push
(bad)
icebp
or
mov
add
jnp
sahf
jnp
push
mov
adc
jg
clc
std
scas
xor
stc
sbb
fisubr
pop
xchg
outs
inc
shl
fimul
mov
ret
fldenv
push
jo
push
rol
dec
sbb
xlat
cld
xor
imul
pop
lock
inc
mov
ror
retf
fild
pop
mov
mov
sahf
inc
and
mul
mov
cmp
sub
xlat
jnp
sbb
cs
cmp
rcl
or
fwait
mov
or
and
lods
clc
movs
xchg
(bad)
xchg
les
pusha
rcr
sbb
inc
xor
aas
jmp
rol
popf
ret
xor
imul
ficom
pushf
xor
and
jp
sti
mov
jmp
dec
scas
(bad)
ret
adc
adc
add
sar
mov
push
cmp
stos
xchg
das
cmp
shl
bound
xor
addr16
cmp
add
xor
lahf
add
div
sbb
fstp
out
fsub
pop
mov
mov
test
sar
cmc
xchg
jge
sub
mov
ins
mov
push
xor
pop
mov
jl
enter
mov
test
not
jmp
push
mov
je
(bad)
pop
cmp
pop
mov
jne
mov
mov
aam
in
pusha
dec
xor
mov
pop
aam
popa
mov
leave
iret
repnz
jno
lds
jb
cmp
rcl
add
cmp
pop
pop
gs
movs
cmp
push
mov
imul
cmp
mov
loope
push
lea
sar
sub
xor
mov
xchg
add
jecxz
mov
inc
xor
jne
aas
ret
loope
mov
cmp
xchg
retf
xchg
rol
and
jle
sub
cld
pop
in
inc
mov
pop
xor
jb
(bad)
or
pop
mov
sbb
mov
inc
loopne
xor
ins
xchg
les
aam
push
cmps
mov
mov
bound
(bad)
sub
mov
clc
sti
les
arpl
or
cli
inc
add
inc
test
sahf
mov
nop
push
mov
sbb
stos
fs
add
sbb
inc
xchg
test
cmp
jb
and
js
dec
push
xchg
adc
loopne
test
pop
pop
adc
(bad)
call
(bad)
xor
shl
mov
cwde
(bad)
inc
add
mov
push
shl
push
clc
in
pop
lock
nop
imul
adc
lods
fadd
sub
sbb
movs
cmp
pop
jne
repz
adc
test
jo
js
sub
jo
dec
in
in
fwait
neg
cwde
pop
lock
arpl
pop
adc
js
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
sbb
sar
mov
shl
sbb
jne
inc
push
cmc
inc
pop
fcomp
mov
shl
mov
fdivr
mov
sar
mov
jnp
in
jae
fidivr
fwait
enter
fdivr
mov
sar
mov
sar
mov
lds
push
mov
jge
inc
sar
mov
adc
adc
shl
cmovnp
pop
xchg
rcl
mov
add
std
icebp
lock
push
xor
fwait
enter
dec
loope
push
cwde
scas
into
xchg
call
xor
and
call
sbb
(bad)
inc
push
push
xchg
or
mov
fs
push
fisttp
lds
add
out
push
lods
(bad)
aad
jp
cs
jnp
loopne
adc
mov
retf
out
addr16
(bad)
push
(bad)
leave
fwait
xchg
in
retf
sub
cdq
int3
mov
shl
fdivr
ret
stos
cli
lea
fldenv
aam
jns
retf
mov
test
sbb
cmc
imul
dec
add
mov
pop
imul
retf
inc
push
arpl
es
and
inc
lahf
cmc
jge
test
adc
jo
xor
cmp
les
mov
cli
(bad)
out
or
add
fnstcw
call
test
or
sbb
xor
jmp
and
pop
jbe
test
arpl
push
xor
(bad)
adc
sbb
outs
mov
ins
add
test
sub
adc
push
dec
xor
test
mov
xor
in
shr
lahf
mov
adc
push
adc
xchg
cdq
pop
add
jb
(bad)
icebp
push
cmp
imul
bound
cmps
aaa
jge
loop
push
adc
jmp
add
push
dec
cmp
add
xchg
jp
push
push
mov
cmps
adc
cwde
mov
dec
push
jl
inc
in
mov
mov
push
mov
outs
pushf
mov
adc
inc
dec
in
mov
pop
add
cwde
inc
push
pop
inc
cmps
and
daa
dec
pop
in
enter
out
adc
xchg
push
mov
or
push
das
jne
cmp
enter
or
mov
push
xor
dec
fldenv
dec
push
lods
retf
jnp
sbb
nop
dec
in
mov
clc
in
test
lock
mov
dec
sar
nop
inc
rcl
push
fadd
sbb
ins
and
push
pop
dec
push
sar
nop
dec
shl
repnz
xor
inc
(bad)
jle
in
inc
cmc
mov
cmp
ss
pop
fmul
cmp
daa
popa
add
ret
cmps
mov
add
pop
pop
jmp
or
inc
xor
push
or
add
test
retf
jmp
jg
shl
daa
shr
ret
fcmovnu
dec
and
test
inc
pusha
mov
jl
addr16
push
hlt
cmps
int
dec
cmp
jne
leave
pop
imul
shl
push
lea
mov
and
push
dec
outs
movs
repnz
mov
adc
xchg
cdq
mov
pop
(bad)
sub
cdq
mov
mov
sbb
bound
sahf
jno
push
or
adc
imul
mov
lea
mov
dec
mov
mov
jmp
hlt
push
js
pop
sub
xchg
fisubr
sbb
ret
mov
clc
aas
daa
ds
xor
sti
jp
aas
jne
fnsave
jecxz
mov
add
lods
mov
pop
cld
mov
adc
or
jl
int3
adc
mov
les
sbb
je
mov
call
(bad)
int
or
mov
adc
ret
(bad)
(bad)
cmp
add
fwait
lock
xchg
jl
in
hlt
mov
imul
movs
add
push
or
mov
xlat
mov
out
jb
adc
lods
xor
jno
dec
mov
ss
cmp
sbb
jecxz
pop
mov
daa
sahf
pop
pop
adc
ins
clc
mov
jo
in
leave
add
xchg
loope
cmp
mov
in
sti
fbld
cs
xchg
pop
jg
aad
adc
sbb
add
cmps
mov
sbb
leave
cmp
add
xor
(bad)
sbb
add
jne
test
fisttp
fst
xchg
mov
adc
ins
retf
xor
iret
mov
mov
push
fisubr
mov
xor
repz
sbb
test
push
dec
and
mov
movs
not
fwait
dec
gs
inc
scas
aaa
jge
lea
fldenv
movs
imul
mov
adc
in
dec
add
loopne
mov
pop
adc
mov
stc
xor
add
xor
fsub
ficom
(bad)
scas
xor
aas
ss
cmp
mov
pop
push
pop
call
aaa
imul
cmp
andnps
push
pop
rcl
push
dec
gs
mov
fwait
push
scas
xchg
enter
mov
fs
inc
in
jno
adc
mov
shl
add
xor
in
cmp
and
add
sbb
and
nop
pop
(bad)
jmp
cli
out
inc
or
(bad)
cli
leave
jb
add
lds
inc
or
pop
mov
mov
cld
retf
xor
retf
mov
pop
jno
frstor
mov
aad
aaa
dec
push
and
sub
stos
adc
sar
pop
or
(bad)
arpl
mov
sahf
sub
out
jb
push
(bad)
and
loope
inc
icebp
mov
mov
and
push
loopne
and
leave
in
inc
fst
sub
aam
sub
or
ror
jo
into
mov
(bad)
out
test
and
ins
adc
popa
mov
lods
loop
stos
push
cmp
jp
lods
call
aad
in
sbb
mov
nop
jmp
aas
xchg
dec
adc
les
ret
enter
fistp
add
daa
jl
mov
dec
adc
(bad)
out
push
or
cmc
sti
cmp
lock
pop
fdivr
mov
inc
fdiv
arpl
and
inc
jl
dec
shl
push
pop
push
mov
ficomp
dec
dec
fidivr
dec
pop
call
cmp
pop
loop
add
fwait
jbe
adc
ret
cdq
shl
inc
ins
lock
jg
iret
in
jns
add
retf
cdq
jo
pop
js
mov
xlat
pusha
pop
sub
mov
stc
pop
pop
xchg
(bad)
fist
(bad)
cld
mov
xchg
mov
mov
jmp
inc
or
das
mov
rcr
pop
mov
mov
sub
outs
push
and
test
call
stc
(bad)
popf
mov
sub
shl
test
lds
repnz
stos
jmp
xchg
outs
adc
popa
jg
ja
imul
out
enter
mov
(bad)
pop
jne
pop
or
add
sub
add
pop
jmp
xor
and
out
div
or
pop
lds
fcomi
sbb
test
mov
je
pop
call
(bad)
jmp
xchg
sbb
(bad)
jns
out
dec
pop
and
xor
xor
(bad)
popa
and
mov
in
es
mov
xor
push
push
xor
push
out
ret
xor
sbb
cmp
imul
dec
lea
jmp
lods
outs
je
inc
shl
dec
cwde
fld
dec
sar
mov
rcr
push
pop
ins
cmp
cmc
mov
pop
iret
sbb
dec
hlt
cmp
call
mov
ja
daa
fcom
pusha
dec
sahf
cmc
test
dec
sub
xchg
out
popa
adc
retf
add
imul
pusha
or
in
jmp
add
pop
mov
adc
xchg
add
data16
pop
inc
iret
jae
mov
mov
jbe
int3
adc
icebp
das
mul
adc
jnp
dec
ret
pop
ror
les
mov
xchg
fs
push
and
loop
dec
pop
fstp
test
jge
les
or
out
repnz
addr16
shr
jo
jne
int
out
fisub
arpl
(bad)
xor
call
cmc
test
sub
mov
pop
shr
add
(bad)
pop
leave
loopne
lock
loope
out
test
loop
shrd
dec
das
xor
in
or
(bad)
cmp
jmp
add
std
ror
dec
and
inc
inc
inc
inc
xor
test
sbb
into
ret
fisttp
inc
stos
aaa
shr
scas
addr16
jmp
ins
dec
jns
ret
cmp
or
cmp
movs
sbb
pop
(bad)
sbb
sar
inc
out
cdq
adc
adc
sbb
repz
iret
mov
je
jbe
push
in
jae
xor
dec
push
xlat
mov
stos
mov
xchg
test
jo
xchg
out
pushf
sbb
enter
adc
rcl
and
add
xor
pop
mov
sti
test
xlat
in
mov
shl
lock
enter
fdivr
mov
inc
clc
jne
inc
shl
fdiv
push
f2xm1
sbb
int3
outs
cmp
push
sti
sub
gs
int
scas
pop
shr
sbb
pop
and
addr16
pop
sti
lock
enter
jno
rol
dec
add
jle
sbb
iret
mov
fild
sub
jmp
xchg
retf
les
cld
pop
call
test
outs
dec
pop
iret
or
mov
dec
and
xor
dec
pop
or
xor
push
in
fidivr
jbe
xor
pop
iret
jmp
test
add
xchg
sbb
mov
into
out
mov
jnp
jmp
iret
ror
dec
into
ja
inc
mov
lea
stos
and
inc
mov
or
int3
pop
gs
and
retf
cmps
mov
test
mov
sub
push
std
sub
cmp
add
dec
cmp
mov
pop
cmp
(bad)
push
out
into
fadd
js
pop
adc
dec
cmp
sbb
ss
dec
shl
inc
push
push
xor
xchg
dec
dec
jg
es
jl
inc
test
add
mov
pop
lods
test
xchg
test
inc
(bad)
fcmovbe
repz
shl
test
jb
popf
jnp
lea
jmp
sub
out
scas
icebp
push
or
cli
jge
xor
into
imul
inc
jns
imul
add
and
retf
movs
(bad)
cmp
or
fwait
(bad)
hlt
dec
pop
push
icebp
pop
push
push
xor
ret
leave
and
xlat
pop
push
lea
lea
(bad)
lock
fidivr
test
out
or
imul
xor
xchg
and
dec
hlt
idiv
cmp
jo
inc
scas
stos
dec
sbb
adc
test
xchg
daa
addr16
mov
test
mov
shr
stos
mov
pop
jno
inc
sbb
push
cs
lds
adc
xchg
(bad)
nop
daa
adc
pop
test
jmp
mov
mov
inc
mov
xchg
or
arpl
sbb
xchg
jmp
or
push
leave
or
push
xchg
aad
mov
out
mov
js
shl
inc
sub
sbb
leave
mov
push
mov
mov
pop
(bad)
add
ds
adc
(bad)
in
pop
bound
mov
test
adc
jne
scas
jb
daa
xor
cmp
pop
sub
and
mov
or
mul
pop
jb
cmp
xor
sbb
sub
adc
cli
(bad)
mov
jae
nop
ret
jo
fucomi
aas
dec
ret
add
cdq
clc
xchg
adc
or
fidiv
inc
mov
push
ret
stos
inc
ins
repz
jmp
shl
sbb
sub
inc
adc
out
push
int
mov
push
shl
or
adc
lds
movs
test
jle
and
xchg
mov
adc
test
or
arpl
repz
xchg
push
lea
movs
movs
pop
sub
inc
out
adc
jnp
mov
pop
js
shl
mov
daa
and
xchg
mov
ficomp
xchg
xchg
(bad)
pop
(bad)
xor
sbb
dec
mov
cmp
and
sub
ret
not
scas
sub
jle
pusha
sub
ret
cld
inc
add
iret
or
lea
fisttp
jle
int
lods
ins
xor
out
icebp
dec
in
(bad)
mov
dec
cmp
mov
xchg
fist
sub
jg
repz
pop
and
sub
sbb
cmps
cmp
mov
mov
push
adc
test
xchg
sub
movs
outs
xchg
dec
pop
jge
sti
lods
rol
cmp
rol
jle
xor
sub
adc
les
inc
jns
dec
xor
adc
out
fcomp
pcmpgtd
pop
jg
shl
test
jl
cmp
push
or
int
cs
dec
dec
or
mov
cmps
or
mov
lds
repnz
scas
jno
repz
leave
popf
jmp
mov
inc
scas
retf
lds
ja
popf
int3
pop
add
mov
xchg
push
add
in
shl
sahf
ja
(bad)
push
pop
dec
or
call
loopne
call
inc
sub
mov
movs
out
outs
dec
dec
ins
inc
mov
jb
push
fist
mov
push
dec
fimul
call
inc
mov
scas
and
xchg
call
int3
sub
in
stc
xchg
xor
xchg
mov
shl
pop
das
mov
(bad)
sbb
xchg
push
(bad)
sbb
gs
outs
shr
or
xor
mov
mov
rol
pop
push
and
ds
jmp
sahf
(bad)
pop
ficomp
pop
push
pop
retf
fwait
nop
inc
push
and
jbe
sbb
not
sbb
add
xlat
std
add
and
cwde
pop
push
inc
pop
and
push
stos
ds
push
das
adc
pop
rcr
or
dec
cmp
repnz
sbb
clc
jge
jge
inc
add
mov
xchg
or
xor
push
sub
pop
pop
pop
push
nop
push
mov
ror
pop
stos
loope
imul
(bad)
daa
(bad)
adc
outs
cmp
adc
adc
movs
sub
movs
pop
hlt
jp
adc
icebp
xchg
mov
test
sahf
sar
sub
pop
out
(bad)
jns
adc
fsubr
movs
xchg
or
(bad)
ins
or
jns
ror
pop
out
mov
ins
cmp
ret
pusha
repz
sbb
cmps
ror
(bad)
stos
fs
dec
mov
mov
dec
push
stos
shl
jb
iret
add
pop
pop
ja
(bad)
push
push
pop
mov
mov
dec
mov
imul
dec
jecxz
ins
pop
fist
xor
mov
inc
jno
mov
dec
jp
mov
xchg
ror
inc
cwde
add
ds
getsec
xchg
call
fs
mov
repnz
xlat
push
jne
ja
ret
sbb
ins
mov
in
mov
or
ins
mov
add
repz
xor
mov
sbb
inc
push
pop
xor
add
dec
pop
in
dec
jmp
movs
fisub
jl
cmc
cmp
push
js
push
test
dec
jbe
cli
cmps
or
xor
js
into
sub
pop
xor
(bad)
fwait
xlat
jmp
add
imul
xor
ja
or
sbb
test
ja
(bad)
stc
adc
dec
mov
sbb
ds
xchg
movs
jp
xchg
mov
xor
(bad)
(bad)
inc
(bad)
leave
push
jle
jmp
jle
xchg
mov
xchg
aad
call
lods
jb
lods
mov
not
jno
push
call
mov
xor
dec
sbb
ret
mov
loope
push
push
cmp
and
je
shl
mov
or
add
retf
enter
and
inc
push
fsub
push
cwde
cmc
cdq
jl
inc
fsubr
cwde
inc
enter
sar
inc
fdivr
mov
shl
cmp
shl
iret
pop
jbe
dec
(bad)
xor
fnstsw
shr
mov
fcomip
mov
sub
popf
dec
or
outs
push
(bad)
add
sub
sbb
add
fmul
lahf
loope
cmp
(bad)
jmp
sbb
pop
add
test
outs
cmp
cmp
and
icebp
cli
add
push
in
mov
dec
xor
repnz
sbb
inc
retf
pushf
cmp
test
xor
lea
or
mov
neg
xlat
in
inc
shr
inc
push
int3
push
mov
adc
adc
cmp
and
shr
mov
std
pusha
mov
pushf
xchg
popa
push
in
popa
retf
gs
xchg
xchg
xor
mov
bnd
iret
imul
movs
ins
repz
adc
ins
push
mov
push
repz
es
xlat
mov
fbstp
sub
into
std
fucomi
jne
xor
in
add
jns
or
stos
inc
fwait
and
sub
jo
push
loopne
pop
les
mov
pop
or
in
pop
mov
inc
sbb
cmp
div
repz
inc
sbb
dec
jecxz
mov
jno
sub
call
in
stos
clc
jl
xor
mov
mov
mov
inc
and
icebp
ficomp
test
inc
icebp
ss
dec
in
jge
(bad)
retf
outs
push
mov
psubb
arpl
jmp
repz
jl
fucom
rcr
popa
inc
add
loope
push
rcl
or
pop
dec
mov
jns
mov
and
test
mov
lods
sub
scas
and
push
or
in
fiadd
icebp
scas
into
push
pop
mov
imul
icebp
pop
lods
push
out
jg
cwde
dec
pop
test
adc
ror
push
mov
lods
jmp
jns
movs
dec
mov
les
repnz
or
pop
mov
ret
out
sbb
out
push
mov
rol
sub
adc
repz
cmp
outs
cmp
test
dec
sbb
push
hlt
mov
xchg
cwde
push
adc
jo
xadd
or
loop
add
mov
xor
shr
push
aas
sbb
iret
xor
add
cmp
dec
repnz
jmp
jmp
cdq
adc
es
in
addr16
in
retf
ja
call
jp
push
push
rcl
mov
pop
fcomp
test
mov
push
inc
add
imul
jb
call
cli
push
test
push
imul
mov
in
ja
movs
das
mov
xor
jb
movs
out
ror
mov
mov
pop
mov
inc
ret
sbb
inc
or
pop
jle
shl
dec
or
cmps
jle
lock
inc
sub
dec
iret
mov
aaa
outs
adc
(bad)
jg
neg
cdq
add
jl
data16
mov
jb
out
dec
mov
jae
test
gs
sbb
dec
xor
adc
repnz
out
inc
adc
mov
pop
and
inc
jno
sbb
call
call
cmp
adc
dec
push
and
arpl
lods
pop
jnp
pop
icebp
outs
ret
int
sub
xor
pop
dec
mov
sahf
in
or
jne
pop
inc
cmps
clc
call
popf
cmp
xor
out
in
sahf
and
inc
sbb
cmp
adc
sbb
mov
ins
and
dec
pushf
lahf
pop
rcl
fst
rcl
test
jge
icebp
ret
cmp
mov
jo
fwait
(bad)
aad
test
push
mov
push
fnsave
cmps
addr16
cdq
scas
mov
xchg
mov
pop
jns
fidivr
xchg
(bad)
adc
inc
pop
call
outs
dec
pushf
je
lea
jp
pop
cmps
sbb
push
push
iret
xor
add
in
push
push
and
enter
pop
and
push
cdq
ret
dec
xlat
push
loop
movs
je
xrelease
enter
push
mov
cmp
inc
mov
fsubr
push
stc
shl
imul
mov
xchg
jns
(bad)
lock
(bad)
xchg
cmp
mov
in
fnsave
fs
outs
pop
sbb
int3
std
jp
fsub
push
shr
popf
outs
daa
xlat
sahf
push
mov
sub
test
enter
or
sbb
aam
jne
mov
frstor
dec
pop
push
in
pop
nop
xchg
inc
mov
jb
xor
(bad)
xor
in
rcl
mov
fstp
mov
pop
adc
outs
aam
mov
mov
lds
ins
sbb
sbb
sbb
mov
sbb
or
clc
and
movs
xchg
xchg
icebp
cmps
or
push
shl
cmp
std
jnp
(bad)
dec
xchg
les
inc
mov
mov
daa
mov
out
mov
(bad)
adc
xchg
out
pushf
and
stos
aam
aam
xor
lea
imul
mov
sub
out
out
add
retf
(bad)
xchg
mov
imul
pop
stc
test
imul
adc
iret
arpl
in
mov
xchg
sbb
mov
pop
adc
pop
mov
pop
test
push
cld
sub
and
push
das
jb
cmc
int
in
movs
popf
jp
pop
inc
sbb
sbb
adc
jno
mov
not
push
fld
mov
xor
pop
add
movs
mov
mov
inc
sar
xor
add
sub
hlt
jl
or
cdq
bound
in
mov
inc
stc
xchg
arpl
ins
repz
inc
lds
xlat
hlt
jge
or
mov
inc
add
(bad)
fdivrp
lock
push
mov
jl
movs
jg
popa
push
std
mov
sar
mov
inc
add
xchg
sbb
fistp
add
push
adc
lods
sti
shr
push
mov
fs
std
mov
push
mov
lods
inc
cld
ins
adc
mov
loop
fistp
or
cwde
gs
je
inc
shr
nop
inc
enter
fdivr
mov
inc
shl
pop
idiv
pop
div
(bad)
pop
lock
dec
(bad)
xor
push
sti
clc
mov
pop
cmc
dec
mov
jle
inc
sub
clc
aas
mov
popa
mov
lahf
div
inc
cli
or
inc
mov
pop
cli
adc
aas
or
mov
cli
loope
(bad)
fdiv
sti
outs
xor
pop
mov
mov
cmp
sahf
sub
fdivr
adc
push
pop
and
pushf
sub
repnz
or
mov
aam
not
outs
(bad)
adc
shr
xor
pusha
mov
test
jns
ins
and
sbb
inc
or
adc
(bad)
ds
pop
mov
pop
out
dec
push
pop
std
and
jle
call
mov
cli
fucomp
pop
xor
mov
ins
push
mov
ret
imul
inc
xchg
bound
and
cld
xchg
ja
sar
imul
mov
iretw
jmp
sar
movs
and
add
loop
lods
and
cmp
mov
inc
popf
hlt
call
es
cmp
jl
in
fs
adc
inc
adc
pop
outs
inc
aam
or
jmp
xor
je
outs
cs
mov
js
adc
pop
adc
mov
retf
outs
jne
fild
dec
sub
sub
daa
cmp
lahf
mov
dec
sub
int
arpl
cmc
test
lock
mov
dec
fdivr
mov
dec
fdiv
inc
pop
jge
dec
aam
mov
int3
(bad)
mov
dec
push
enter
rcl
cmps
pop
(bad)
(bad)
pop
or
adc
pop
(bad)
mov
cli
xchg
ret
push
into
sub
arpl
pop
pop
call
adc
and
inc
dec
jb
mov
cmp
xchg
sahf
adc
aad
cmp
pop
mov
aam
xchg
fwait
mov
adc
mov
pop
sti
add
test
mov
and
mov
xor
inc
mov
popf
mov
je
out
imul
shr
mov
stos
mov
fidivr
cmp
xchg
pop
aam
mov
cmp
pop
push
dec
push
movs
popf
leave
push
mov
retf
leave
dec
fcom
repnz
inc
mov
dec
mov
sahf
retf
fcom
stos
leave
fadd
xchg
cmp
repz
mov
imul
or
push
pop
fs
dec
fiadd
dec
mov
inc
sub
cld
shl
pop
aaa
dec
aas
push
mov
dec
cmp
in
ret
test
dec
cmp
adc
cwde
ss
jle
pop
aam
imul
int
mov
icebp
inc
ds
fist
and
and
cmps
retf
mov
(bad)
sbb
or
fild
and
sbb
and
pop
mov
inc
ja
inc
pop
mov
into
mov
sti
lock
fcomp
test
enter
sar
mov
shl
inc
pop
hlt
cmp
jns
dec
(bad)
xor
pop
jp
dec
(bad)
add
sahf
cmc
mov
rol
gs
pusha
and
jle
cwde
mov
outs
popf
call
xchg
inc
out
sahf
pop
dec
pop
mov
pop
or
dec
ret
sub
adc
lods
hlt
sahf
fucom
mov
in
xor
lods
cmp
in
scas
sti
and
ret
lock
das
mov
xchg
in
sub
and
jecxz
cli
mov
pop
push
int
mov
mov
inc
std
pop
mov
cs
popa
mov
and
stos
sti
push
int3
add
imul
call
cwde
sub
(bad)
popf
loop
cli
out
hlt
(bad)
mov
cmps
cmp
stos
iret
fist
jl
cs
(bad)
sub
mov
mul
(bad)
fisubr
cmc
adc
and
ss
pop
mov
sbb
add
push
jge
inc
jge
imul
inc
es
shufps
cmp
or
mov
pop
addr16
sbb
neg
jp
int3
js
jns
sbb
add
mov
sbb
stc
clc
sahf
mov
mov
das
js
xor
gs
cwde
pop
(bad)
jmp
inc
xor
jle
sbb
cld
fist
add
xor
pushf
xchg
imul
cli
jbe
out
ins
int
mov
cwde
jl
in
fdivp
sti
or
sub
cmp
shl
mov
sub
mov
xor
cli
mov
add
dec
cmp
lea
pop
mov
xchg
cmp
mov
pop
push
fs
sub
mov
div
ret
inc
jo
xchg
xchg
mov
retf
icebp
cli
ret
push
add
fsub
pop
mov
outs
imul
cmc
jbe
add
test
in
xchg
jp
sub
rol
loopne
jne
mov
xchg
mov
cmp
and
mov
inc
mov
push
mov
inc
call
inc
imul
out
das
ins
xchg
lock
mov
shl
repz
and
add
shr
adc
pop
push
or
stos
push
dec
ret
push
jbe
sti
cmps
test
and
jae
mov
ret
lods
mov
jecxz
push
cld
loopne
jno
xlat
add
cmp
pop
mov
ret
and
fnstenv
add
fisub
js
or
sub
sub
mov
js
iret
mov
outs
retf
out
aas
sbb
sbb
mov
add
pop
sub
ret
jnp
xchg
mov
popa
movs
ds
fnstcw
out
lea
sub
xchg
or
clc
sub
dec
stos
(bad)
adc
sbb
aas
jae
cdq
adc
bsr
or
pop
cs
leave
je
cmp
add
data16
les
fcomp
and
stc
pop
retf
push
or
and
fnstenv
idiv
cmp
xchg
sub
popa
inc
mov
repz
sbb
mov
stc
pop
xchg
mov
and
inc
dec
iret
mov
jns
jecxz
cmps
push
mov
pop
out
or
push
fisubr
(bad)
in
leave
stc
leave
push
sub
aaa
or
call
imul
add
lods
shl
in
popf
fcomp
mov
pusha
loop
ret
mov
mov
push
js
cwde
cvtps2pi
fisub
pop
sbb
aas
cdq
pop
sbb
imul
ins
sbb
adc
mov
fmul
jno
cmc
add
dec
pop
inc
lods
dec
sub
mov
das
pop
adc
stos
mov
sbb
cmp
pop
pushf
jp
lea
push
loop
mov
pop
gs
jno
stc
push
jb
pop
sub
adc
dec
jp
mov
lods
and
add
pop
test
(bad)
xchg
xor
aas
ins
dec
push
(bad)
cmp
pop
scas
call
xor
inc
out
xor
cmp
push
jmp
sub
inc
sbb
fs
clc
out
pop
ds
inc
jecxz
sbb
cs
in
lock
cwde
push
mov
out
mov
ds
adc
xchg
mov
bound
sbb
xchg
es
gs
fcomp
mov
outs
in
mov
test
push
push
sbb
fisttp
dec
dec
jmp
dec
call
cmp
sub
mov
jne
lock
dec
inc
xchg
xchg
scas
je
sub
dec
cwde
sbb
neg
les
cdq
inc
sar
repnz
and
pop
xchg
daa
or
jp
jno
cmp
push
add
lock
es
je
adc
loope
sub
lds
imul
cmp
or
sahf
add
push
and
or
pop
and
sub
retf
push
xchg
inc
sbb
xchg
mov
jecxz
fiadd
sbb
data16
leave
data16
popf
sti
or
xchg
push
repnz
sub
repnz
retf
(bad)
mov
mov
(bad)
clc
test
in
cmp
lea
inc
bound
inc
ret
clc
add
iret
mov
scas
out
push
xor
mov
enter
aad
fbstp
js
adc
fst
pop
mov
call
mov
dec
add
int3
xchg
repz
movs
mov
into
cmc
es
lock
scas
mov
in
enter
inc
cmp
jns
cmp
dec
out
sub
or
shr
sub
push
test
(bad)
dec
mov
cwde
dec
aas
rcl
push
popa
xchg
pop
push
fbstp
mov
ror
imul
lds
lock
and
lea
cmp
dec
mov
jecxz
popf
inc
rcr
xor
not
xchg
adc
cld
addr16
dec
test
lods
mov
cmp
in
sub
bound
call
(bad)
out
rol
jle
mov
mov
or
stc
stc
push
(bad)
fdivr
and
sbb
inc
xchg
jge
in
(bad)
jmp
mov
scas
xlat
cmp
inc
loopne
mov
iret
cmp
jns
ret
inc
add
les
inc
jns
jecxz
inc
fadd
jnp
inc
mov
cmps
fstp
mov
repz
mov
jle
fsubr
adc
sar
xchg
add
lods
mov
ins
push
add
mov
lods
jo
cld
enter
mov
inc
test
cmc
retf
ins
xor
jnp
hlt
mov
sbb
ins
xchg
inc
dec
jp
xchg
mov
push
js
std
push
ror
jp
adc
adc
(bad)
daa
add
popf
cmps
xchg
add
std
and
or
mov
fidivr
pop
mov
cmps
pop
sub
xchg
jge
mov
mov
mov
push
add
mov
inc
push
bswap
add
inc
loope
jecxz
je
cld
loop
jmp
or
mov
jmp
icebp
xchg
lods
movs
mov
adc
inc
ror
(bad)
es
fcom
add
jo
scas
mov
hlt
inc
enter
jg
mov
fsub
mov
(bad)
repz
or
push
ret
push
or
or
or
fisttp
mov
or
call
ss
mov
lock
add
dec
mov
push
push
pop
sti
gs
rcr
dec
pushf
jae
jae
or
sbb
xor
jmp
ja
pop
add
inc
loopne
mov
sar
lock
cwde
(bad)
mov
mov
enter
shl
pop
enter
clc
aad
add
lods
and
fdivr
popf
call
adc
fdiv
push
(bad)
loopne
pop
dec
cmp
inc
pop
sbb
js
shr
dec
sbb
inc
pop
push
and
mov
fsub
cwde
pop
cli
fstp
or
pop
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
pop
jecxz
add
mov
mov
std
test
fsub
ss
sub
mov
repz
mov
sar
mov
sar
mov
inc
and
mov
sti
fdivr
mov
fdivr
mov
sar
mov
inc
lock
mov
inc
sar
mov
add
and
std
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
xor
add
test
mov
xlat
std
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
inc
jo
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
lock
scas
aam
mov
aad
mov
sar
mov
sar
mov
sar
mov
sar
mov
inc
mov
jge
inc
shl
mov
enter
fdivr
mov
inc
jo
mov
call
xlat
std
mov
imul
stc
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
outs
inc
fwait
or
loop
add
dec
push
jecxz
pushf
fld
mov
dec
sub
mov
xor
pop
mov
xor
pusha
mov
add
and
scas
jbe
into
cwde
mov
aad
fadd
xchg
popf
retf
or
arpl
mov
out
xchg
bound
arpl
mov
mul
sbb
cmps
jle
pop
mov
mov
cld
xor
pop
mov
xor
pusha
mov
add
and
scas
jbe
into
cwde
mov
aad
fadd
xchg
popf
retf
or
arpl
mov
out
xchg
bound
arpl
mov
mul
sbb
cmps
jle
pop
mov
mov
cld
xor
pop
mov
xor
and
xchg
std
test
fdivr
mov
dec
sar
mov
sar
stos
inc
jo
mov
shr
or
clc
mov
fcomp
jo
pop
shl
sbb
mov
sar
xchg
in
loopne
outs
mov
jl
push
out
mov
ret
outs
nop
lea
mov
sbb
push
scas
jl
add
lock
shl
sbb
mov
sar
xchg
in
loopne
outs
mov
jl
push
out
mov
ret
outs
nop
lea
mov
sbb
push
scas
jl
add
lock
shl
sbb
mov
sar
xchg
cmc
xor
jmp
pop
pop
and
das
xor
int3
push
mov
mov
push
neg
je
retf
dec
adc
repnz
ret
out
dec
out
or
out
hlt
loop
sbb
adc
mov
mov
test
cmp
cdq
lock
scas
je
retf
dec
adc
repnz
ret
out
dec
out
or
out
hlt
loop
sbb
adc
mov
mov
test
cmp
cdq
lock
scas
jl
retf
xchg
(bad)
aam
sbb
cli
sti
inc
mov
sar
mov
dec
sar
mov
shl
mov
js
sub
lock
and
mov
add
hlt
out
dec
sbb
sahf
rcl
popa
mov
sub
and
xchg
cmp
repnz
das
int3
jge
adc
or
add
in
ja
pop
into
nop
xchg
or
xor
call
mov
in
ins
push
dec
and
lods
fwait
adc
ins
pop
sahf
rcl
popa
mov
sub
and
xchg
cmp
repnz
das
int3
jge
adc
or
add
in
ja
pop
into
nop
xchg
or
xor
call
mov
in
ins
push
dec
and
lods
fwait
adc
ins
pop
sahf
rcl
popa
mov
sub
and
cmps
sti
popa
push
push
adc
fcomp
mov
lea
mov
push
dec
push
stos
stc
mov
loopne
add
or
sbb
movs
add
or
sbb
movs
add
or
sbb
movs
add
or
sbb
movs
add
or
sbb
movs
add
or
sbb
movs
add
or
sbb
movs
add
or
sbb
movs
add
or
sbb
movs
add
or
sbb
movs
add
or
sbb
movs
add
or
sbb
movs
add
or
sbb
movs
add
or
sbb
movs
add
or
sbb
movs
add
or
sbb
movs
add
or
sbb
movs
add
or
pop
mov
push
nop
push
std
jl
inc
rcl
mov
push
fdivr
mov
sar
test
bound
mov
pop
aad
pop
js
xor
sti
lock
enter
mov
xor
xor
mov
add
sub
xlat
icebp
pop
(bad)
mov
cdq
clc
cmp
xor
adc
daa
push
xchg
inc
sbb
(bad)
rcl
enter
es
scas
push
mov
sub
jmp
imul
popf
xor
inc
in
loop
ss
popa
mov
inc
cmc
mov
xchg
jbe
and
stos
jo
cmps
jbe
or
shl
rcl
(bad)
imul
sub
xlat
icebp
pop
(bad)
mov
cdq
clc
cmp
xor
adc
daa
push
xchg
inc
sbb
(bad)
rcl
enter
es
scas
push
mov
sub
jmp
imul
popf
xor
inc
in
loop
ss
popa
mov
inc
cmc
mov
xchg
jbe
and
stos
jo
cmps
jbe
or
shl
rcl
(bad)
imul
sub
xlat
icebp
pop
(bad)
mov
cdq
clc
cmp
xor
adc
daa
pop
xchg
push
in
ror
add
lock
or
js
add
(bad)
sub
dec
pop
lahf
add
fisubr
sbb
ja
add
sub
lods
lock
rol
lea
jnp
fimul
cmp
dec
mov
into
cmp
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
mov
fld
popa
in
daa
push
pop
pusha
and
add
in
ret
shl
mov
fdivr
mov
sar
mov
shl
cmp
aaa
dec
pop
push
push
inc
rol
repz
inc
jg
mov
or
xor
sbb
sub
push
cdq
stc
outs
mov
je
fwait
dec
xchg
shl
je
sar
cmps
cmps
or
pop
cmp
fchs
and
outs
std
push
stc
outs
xchg
repnz
xchg
enter
sbb
sub
push
cdq
stc
outs
mov
je
fwait
dec
xchg
shl
je
sar
cmps
cmps
or
pop
cmp
fchs
and
outs
std
push
stc
outs
xchg
repnz
xchg
enter
sbb
and
push
cdq
fsubr
retf
shl
dec
ss
inc
xor
xlat
xchg
push
inc
jno
mov
xchg
fstp
arpl
sub
fisttp
in
outs
fbstp
and
and
dec
fld
dec
enter
pushf
jle
in
outs
fbstp
and
and
dec
fld
inc
sub
sub
mov
leave
cmc
mov
fsub
mov
inc
and
dec
inc
sub
dec
inc
sub
dec
inc
sub
dec
inc
sub
dec
inc
sub
dec
inc
sub
dec
inc
sub
dec
inc
sub
dec
inc
sub
dec
inc
sub
dec
inc
sub
dec
inc
sub
dec
inc
sub
jb
dec
mov
bound
ins
repnz
xchg
bound
ins
repnz
push
fs
fild
cld
ins
repnz
xchg
bound
ins
repnz
cdq
bound
mov
bound
ins
repnz
xchg
bound
ins
cli
or
enter
dec
mov
shr
mov
dec
sar
mov
inc
shl
leave
fdiv
sub
in
add
jl
dec
sub
(bad)
adc
stos
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rol
sub
dec
(bad)
jbe
xor
mov
add
sbb
pop
leave
xor
lods
cmp
jl
imul
(bad)
adc
pop
leave
xor
lods
cmp
jl
imul
(bad)
adc
pop
leave
xor
lods
cmp
jl
imul
(bad)
adc
pop
leave
xor
lods
cmp
jl
imul
(bad)
adc
pop
leave
xor
lods
cmp
jl
imul
(bad)
adc
pop
leave
xor
lods
cmp
jl
imul
(bad)
adc
pop
leave
xor
lods
cmp
jl
imul
(bad)
adc
pop
leave
xor
lods
cmp
jl
imul
(bad)
adc
pop
leave
xor
lods
cmp
jl
imul
(bad)
adc
pop
stc
add
sub
mov
mov
cmc
nop
dec
sar
mov
sar
mov
inc
push
repz
into
and
mov
add
jl
dec
dec
sbb
call
xlat
xchg
into
pop
mov
xor
xchg
into
pop
mov
xor
xchg
into
pop
mov
xor
xchg
into
pop
mov
xor
xchg
into
pop
mov
xor
xchg
into
pop
mov
xor
xchg
into
pop
mov
xor
xchg
into
pop
mov
xor
xchg
into
pop
mov
mov
jle
mov
inc
dec
pop
loop
loopne
sbb
fimul
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
jno
cmps
cmps
inc
loop
or
fidivr
xchg
shl
inc
fdivr
mov
sar
mov
inc
sar
mov
sub
mov
fcomi
mov
dec
fcom
jmp
jg
retf
outs
cmp
adc
sbb
push
jmp
mov
outs
cmp
sub
sbb
push
jmp
mov
outs
cmp
sub
sbb
stos
nop
scas
mov
inc
push
add
test
jne
movs
(bad)
ss
and
test
push
push
pop
sbb
jmp
mov
and
add
movs
push
pop
sbb
jmp
mov
and
add
mov
js
dec
sbb
cmp
fidivr
inc
xchg
iret
mov
(bad)
mov
fdivr
mov
fsub
mov
push
enter
enter
cwde
aad
imul
loopne
loopne
lock
popf
fsub
and
sub
jge
sbb
adc
js
shr
push
ins
pop
jecxz
add
mov
arpl
xchg
loopne
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
sbb
jo
inc
in
jne
push
xchg
rol
jne
pop
pop
cmc
cmps
push
fadd
mov
inc
fdivr
mov
sar
mov
sar
mov
push
call
sti
js
xlat
std
mov
dec
fdivr
mov
sar
mov
shl
test
lock
pop
rcr
xor
std
mov
add
mov
sar
mov
sar
mov
sar
mov
sar
mov
inc
loopne
addr16
adc
mov
inc
mov
mov
shr
add
mov
pop
(bad)
sbb
sbb
stos
je
mov
out
std
mov
or
es
sbb
in
lock
jne
addr16
mov
mov
fadd
xchg
mov
idiv
pop
add
and
aas
dec
gs
jbe
dec
ins
push
inc
cmp
adc
addr16
xor
std
xor
jae
dec
or
fdiv
xchg
lods
sub
test
imul
test
mov
and
iret
lea
sub
out
rep
push
aaa
shl
push
jns
jecxz
sub
cmp
or
mov
aam
xlat
inc
dec
fnstsw
xor
mov
adc
mov
add
or
cli
or
mov
pop
push
mov
mov
mov
pop
xor
jno
pushf
retf
mov
pop
pusha
aaa
mov
jmp
sub
fsub
push
jle
cmp
add
lahf
dec
aaa
pusha
xor
or
fst
mov
aam
jno
sbb
adc
add
sub
inc
mov
imul
sar
sub
ss
arpl
popf
sbb
cdq
mov
push
imul
idiv
mov
stos
jl
imul
jbe
push
push
add
or
pop
xchg
(bad)
shr
test
imul
inc
shl
mov
loope
call
pop
leave
fmul
cmp
adc
mov
std
mov
ret
popa
inc
iret
frstor
lahf
test
xor
cmp
(bad)
and
xchg
xchg
push
inc
cmp
inc
add
mov
cmps
lahf
and
stos
outs
mov
pusha
scas
(bad)
mov
inc
inc
mov
(bad)
rcr
mov
mov
cli
mov
fdivrp
mov
jae
and
or
push
cmpxchg
mov
inc
pop
pop
or
scas
inc
pop
mov
aad
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
and
mov
ret
rcl
test
shr
imul
mov
inc
lock
push
push
ins
mov
enter
push
je
inc
shl
mov
jp
dec
sar
cwde
dec
and
rcl
int3
mov
inc
hlt
(bad)
push
or
gs
pusha
adc
scas
jmp
(bad)
(bad)
dec
and
adc
adc
je
push
sti
ss
dec
dec
fiadd
and
xor
jb
mov
inc
or
push
in
movhps
cmp
xchg
mov
cmps
fimul
adc
and
jmp
xchg
movs
cdq
add
cmc
sbb
and
enter
cmp
mov
ret
inc
enter
xchg
in
add
test
mov
fwait
lea
ficomp
outs
mov
adc
xchg
mov
mov
test
xchg
and
je
push
cmp
mov
jno
xor
and
or
inc
xchg
adc
pop
xchg
adc
lods
pop
ss
loopne
jmp
aaa
jp
ret
scas
mov
ins
or
or
fcomp
into
pop
retf
xchg
(bad)
sub
mov
nop
in
jmp
mul
xchg
outs
int
or
jle
sub
adc
push
ror
repnz
(bad)
loope
in
inc
xchg
test
cmp
out
fwait
xor
aad
mov
shr
arpl
adc
into
and
int3
mov
xor
ja
push
sti
lods
fbstp
je
inc
cld
and
sub
je
xchg
jecxz
jg
rol
mov
sahf
jbe
cld
jb
inc
pushf
xor
push
push
(bad)
mov
sub
mov
push
test
pushf
loop
fild
sbb
pusha
sub
add
or
stos
adc
je
jne
ffreep
es
mov
ja
push
(bad)
jg
push
popa
mov
cmp
add
pushf
mov
mov
dec
and
int3
out
mov
and
loop
jle
jmp
data16
cmp
jge
mov
std
xchg
dec
xchg
xor
and
adc
lahf
pop
sub
push
sti
and
ficomp
push
(bad)
fld
call
rcl
and
pop
loop
arpl
cmp
add
add
or
dec
mov
xchg
jecxz
retf
int3
xor
push
add
jo
jae
mov
in
aad
out
cdq
adc
mov
adc
jno
pop
push
mul
data16
sti
fldz
cmp
popf
cmp
in
inc
clc
aad
push
sar
mov
sar
mov
dec
inc
jne
pop
push
jge
push
icebp
gs
dec
ret
shl
sub
add
hlt
imul
sub
push
int
dec
mov
cmp
jo
push
adc
sbb
mov
mov
dec
xchg
out
loope
or
out
sbb
mov
in
xchg
adc
xor
hlt
sbb
lods
shl
loop
in
sbb
scas
jmp
adc
das
jl
sahf
jo
xor
cli
test
sbb
mov
pop
xchg
outs
xor
shl
(bad)
dec
mov
or
jmp
out
inc
mov
xchg
loop
movs
mov
xchg
mov
sub
dec
xchg
ja
fbld
shr
out
enter
and
adc
mov
sahf
(bad)
outs
aas
mov
std
lods
push
mov
jle
adc
or
and
jns
xor
push
dec
movs
mov
mov
push
out
retf
xor
or
es
js
inc
pop
out
mov
ret
pop
icebp
push
frstor
mov
push
fisub
cli
cs
xlat
je
ret
rol
push
fdiv
jl
dec
int
pop
das
cmp
inc
add
out
popf
jge
adc
sub
fsubr
fadd
int
cwde
ins
mov
aam
pop
shr
mov
inc
jmp
pop
(bad)
in
fstp
loopne
and
mov
in
push
test
fimul
idiv
jne
or
fdivr
jmp
imul
jne
fcmovnu
scas
ret
pop
push
or
ret
stos
adc
mov
bswap
scas
pop
test
adc
addr16
add
test
in
nop
push
enter
fdivr
mov
sar
mov
dec
shl
dec
in
cmp
fsubr
enter
jecxz
je
inc
fld
pusha
inc
fwait
cmc
test
dec
fcom
mov
(bad)
loope
mov
in
sub
mov
and
fdivr
and
pop
adc
cli
call
inc
fadd
into
inc
mov
daa
outs
mov
mov
push
cmp
add
cmp
repnz
push
fnsave
cmps
ret
test
cmp
imul
or
jnp
dec
push
shl
and
sub
in
mov
je
sub
inc
cmp
ja
ins
call
fisubr
jno
hlt
pop
sub
cmp
inc
bound
cmp
mov
pop
cli
jp
rol
in
fidivr
dec
mov
pop
leave
pushf
cmc
add
jb
pop
pop
int
xor
loope
sub
sbb
jb
jge
iret
movs
les
imul
mov
jmp
test
es
jp
xchg
rcr
cmp
jl
jg
dec
cli
ins
fisub
push
fst
ror
mov
cmp
mul
push
icebp
xchg
loop
pop
push
addr16
adc
adc
data16
lods
es
lds
push
in
outs
nop
retf
push
cdq
xchg
mov
popf
clc
mov
push
adc
sbb
test
loopne
push
in
or
popf
add
outs
shl
and
or
and
jp
mov
into
fcomp
push
cld
push
mov
mov
inc
test
ret
or
cld
aad
xor
cmc
test
lock
jae
std
mov
shl
dec
inc
cmc
xor
inc
in
sub
ja
dec
jb
lods
dec
aam
mov
dec
cld
sub
pop
fisub
rcl
out
xor
add
lock
enter
adc
dec
mul
xor
repz
mov
push
into
sub
mov
clc
dec
and
lock
push
xchg
neg
jg
adc
or
mov
test
mov
ss
xchg
xchg
pusha
jmp
inc
out
xchg
out
push
out
mov
sub
(bad)
and
into
fdivr
mov
into
add
mov
lahf
leave
int
cmp
jmp
sbb
mov
xchg
pop
das
mov
push
shr
dec
test
inc
sub
jne
jl
imul
in
adc
std
loopne
out
or
dec
adc
cwde
add
or
jo
add
sbb
cdq
sbb
fadd
mov
gs
repnz
cmps
call
aaa
sbb
lea
cs
pop
mov
mov
popa
jmp
sbb
cwde
je
pushf
sbb
xchg
mov
std
fwait
push
mov
rol
in
mov
and
dec
dec
push
aaa
add
mov
mov
jnp
xchg
xor
xchg
outs
out
adc
(bad)
rcr
div
and
jb
xchg
mov
push
mov
mov
jmp
imul
aad
cmp
mov
int3
cmp
mov
(bad)
push
dec
pop
adc
mov
and
jl
mov
and
inc
jno
and
icebp
fwait
add
dec
or
dec
pop
jb
jne
xor
data16
mov
jno
mul
sbb
sahf
pop
and
xchg
or
gs
leave
add
jo
lods
aam
jo
xor
nop
out
mov
leave
jmp
cdq
pop
jp
xor
cdq
push
out
bnd
pcmpeqw
aad
jnp
or
out
iret
cld
and
pop
fstp
mov
out
outs
fcom
cdq
cmp
popa
sub
sbb
cmp
adc
fwait
cmp
rcr
or
movs
les
lock
popf
dec
push
and
stos
xchg
pop
in
jbe
outs
inc
dec
push
pop
ja
sti
xchg
retf
xor
(bad)
mov
mov
mul
into
leave
repz
clc
push
cmp
push
les
dec
adc
repnz
adc
arpl
xchg
jne
cmp
xchg
cmp
mov
cs
fnsave
pushf
movs
mov
data16
imul
and
(bad)
fdiv
das
outs
inc
bound
mov
inc
aas
clc
pushf
bnd
and
push
xchg
sub
xchg
pop
mov
inc
data16
xabort
movs
xchg
adc
sub
pop
aad
mov
cmps
or
adc
popa
dec
lods
loope
scas
(bad)
sbb
or
and
inc
sub
fistp
loop
push
test
xor
outs
pop
hlt
mov
lock
jo
int3
fwait
cmp
mov
cmp
mov
push
test
popa
dec
inc
shr
sti
pop
push
dec
dec
xchg
xor
add
jl
adc
test
mov
addr16
jl
shr
aad
(bad)
sub
adc
jns
je
aaa
xchg
test
jmp
cmp
idiv
push
out
fnsave
cli
sbb
movs
xor
(bad)
in
dec
mov
stc
sub
test
and
and
or
imul
popa
add
sbb
jnp
(bad)
popf
cmps
stos
sub
xor
bound
dec
mov
inc
ins
pop
mov
outs
add
mov
sbb
mov
and
xlat
pushf
xor
jg
mov
adc
mov
push
sbb
out
je
push
mov
repz
or
pop
ror
enter
mov
(bad)
test
or
xchg
and
(bad)
xor
xchg
aaa
pop
push
jo
pop
cdq
fsubrp
jns
dec
lock
jge
or
push
sub
sbb
push
xor
pop
out
fs
push
retf
(bad)
and
xchg
add
jmp
or
sub
xor
pop
fadd
js
and
hlt
ins
jg
lahf
mov
fld
jmp
jmp
jb
mov
add
mov
ss
jg
or
popf
jno
imul
pusha
or
(bad)
daa
shr
out
(bad)
add
rcl
sti
and
fidiv
sbb
in
push
clc
in
imul
mov
inc
shl
fdiv
int3
pop
icebp
cmp
jl
dec
push
std
aaa
dec
xlat
push
push
inc
rol
mov
inc
push
mov
test
mov
lahf
xchg
dec
cmps
and
sar
test
stc
loop
push
je
jmp
(bad)
icebp
and
xor
iret
repnz
test
shr
sub
mov
pop
cli
jb
or
rcr
sbb
lds
pop
jae
and
xor
pop
cmp
xchg
adc
cli
ss
pop
xlat
test
in
xor
xor
sar
add
add
jnp
lods
movs
mov
int
fcmovb
movs
push
or
inc
push
pop
xchg
or
rol
inc
push
mov
test
fsub
cdq
inc
fcomi
mov
retf
mov
or
inc
imul
not
dec
ret
jmp
rcr
mov
mov
sub
inc
mov
and
outs
test
xchg
xchg
rol
pop
cmp
inc
sbb
push
test
sbb
clc
jo
cmp
jg
inc
sub
lods
xor
mov
mov
and
inc
aaa
or
dec
xor
in
push
sahf
fsub
xchg
mov
add
data16
lods
out
scas
out
dec
or
iret
push
xchg
xchg
imul
ja
jno
adc
dec
loope
fdivr
and
cmps
out
lahf
mov
pop
add
mov
adc
mov
mov
lods
xchg
push
cmps
stos
stc
stc
push
and
(bad)
jle
mov
bound
outs
mov
loop
int3
out
xchg
mov
mov
mov
dec
sbb
xor
loope
pop
int3
sub
jmp
xchg
jns
ret
xchg
movs
cmp
mov
(bad)
mov
or
pop
mov
imul
ret
ret
mov
inc
gs
ror
in
adc
jge
add
sti
popf
call
pop
xchg
gs
nop
pandn
push
repz
or
sar
ins
out
inc
hlt
ficomp
xchg
jns
jg
std
mov
jae
sar
jns
sub
jns
mov
jne
pop
push
and
aad
out
imul
or
fdiv
cmc
cmp
jle
sbb
fidiv
and
adc
dec
scas
mov
in
arpl
xor
sbb
add
loope
arpl
push
adc
jecxz
out
dec
xchg
adc
popf
ins
pop
inc
xchg
fstp
outs
push
and
mov
xchg
hlt
popf
sub
cmp
add
add
daa
dec
jns
stos
nop
push
nop
dec
fsub
mov
inc
mov
sbb
mov
call
or
jmp
cmp
das
mov
cld
retf
mov
inc
and
pop
add
push
dec
xor
adc
addr16
mov
mov
in
push
mov
test
mov
scas
sbb
add
jecxz
sbb
(bad)
out
daa
in
adc
out
out
push
push
mov
je
imul
fimul
xchg
call
jmp
in
cmp
jo
les
sbb
stos
mov
nop
mov
(bad)
bound
xchg
lods
push
dec
push
vpsubsw
dec
adc
ror
lock
icebp
ja
sbb
in
dec
sub
frstpm(287
xchg
mov
jmp
and
mov
mov
shr
test
(bad)
sbb
cdq
daa
mov
(bad)
jge
dec
cs
dec
movsx
stos
rcl
in
or
pusha
mov
add
xchg
daa
mov
ja
repz
mov
jbe
dec
js
int3
repnz
sub
mov
xchg
repz
jp
or
jp
mov
aam
mov
and
mov
mov
les
cmp
dec
ins
push
and
inc
xor
or
test
repnz
test
jae
bnd
add
cmp
fnstcw
mov
push
jp
lods
and
pop
pop
js
dec
mov
inc
aaa
ror
rol
lock
jecxz
dec
jo
cmp
inc
push
lods
cmp
mul
push
loope
push
adc
and
rcl
mov
cld
cld
add
in
push
jae
mov
and
mov
ja
inc
xchg
or
mov
scas
mov
lock
mov
fistp
fistp
mov
xlat
std
mov
inc
pop
std
mov
sar
mov
sar
mov
sar
mov
sar
mov
inc
fdivr
mov
loopne
std
sub
ja
mov
loop
jbe
or
(bad)
mov
rep
cld
mov
add
fwait
mov
loop
pop
inc
xchg
mov
xchg
aam
in
inc
adc
pusha
es
sub
xor
fstp
std
xchg
add
or
popf
(bad)
mov
fs
xchg
std
mov
xor
jb
std
mov
inc
sar
mov
inc
sar
mov
sar
rol
mov
(bad)
std
mov
push
std
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
inc
lock
lock
enter
enter
sar
mov
inc
pop
hlt
mov
pop
jle
retf
mov
int3
fnsave
(bad)
sar
inc
pop
sub
fld
fcom
jno
inc
or
push
test
adc
sbb
cmc
inc
movs
push
fstp
xchg
mov
ror
mov
or
sub
mov
pop
and
ins
jmp
rcl
sub
mov
out
pop
jbe
push
add
cld
jne
mov
pushf
test
dec
push
push
and
aad
inc
pop
data16
or
fwait
ror
enter
dec
loope
mov
push
or
repnz
cmp
fmul
out
(bad)
jg
xchg
mov
xchg
icebp
push
inc
adc
mov
cmp
sub
imul
cmp
shr
cmp
cmp
dec
dec
mov
outs
adc
push
mov
jg
mov
add
or
inc
jmp
cmp
fisubr
outs
xchg
mov
aas
cs
test
repnz
xchg
pop
mov
addr16
ss
cmp
in
mov
and
in
xlat
pop
mov
retf
fld
xchg
hlt
push
jl
mov
sbb
mov
ins
dec
ins
mov
fs
adc
mov
lods
xchg
push
pusha
push
jg
sbb
(bad)
lods
dec
mov
inc
jb
mov
cmps
pushf
popf
mov
adc
jo
dec
inc
lahf
adc
sbb
mov
test
pop
scas
mov
(bad)
(bad)
or
rol
mov
nop
cwde
xchg
ret
add
inc
pop
icebp
call
pushf
test
sbb
idiv
mov
inc
push
pop
mov
sub
cli
mov
dec
lods
mov
mov
sub
xchg
xor
ret
push
cs
adc
adc
out
fiadd
push
scas
imul
inc
dec
fwait
or
sub
inc
test
rcr
sbb
pop
cmps
inc
and
add
inc
shr
inc
shl
imul
mov
inc
push
cmc
cmp
ja
rcr
int3
fdiv
mov
shl
leave
pop
add
fwait
cmc
mov
dec
fsubr
shl
addr16
mov
mov
sub
loop
aaa
cmp
push
mov
ss
call
je
sub
inc
and
inc
nop
adc
and
or
dec
nop
push
or
xor
xor
mov
inc
pop
stos
daa
imul
jle
jb
sbb
mov
lods
bts
add
(bad)
cmp
aaa
lods
mov
jns
xor
jns
mov
mov
sbb
cmc
mov
icebp
xchg
dec
add
push
xchg
aam
icebp
inc
push
lds
mov
cmp
and
(bad)
mov
ja
daa
jg
bound
test
(bad)
push
cmp
push
and
sbb
adc
pushf
rcl
sub
mov
mov
dec
fs
jg
sbb
jg
or
imul
fwait
call
fbstp
push
sub
dec
out
mov
aas
mov
push
adc
aam
es
out
popf
add
sub
(bad)
adc
or
xchg
rol
popf
cmp
popf
xor
or
push
loopne
es
pop
mov
(bad)
push
stos
add
mov
push
mov
xchg
inc
outs
or
dec
push
and
popf
mov
js
xor
cld
sub
int3
dec
fidivr
sahf
lock
loop
aaa
adc
jp
or
mov
pop
test
sahf
push
aaa
sub
cmps
mov
xchg
mov
xor
lock
outs
enter
loope
fcmovb
jmp
inc
ins
adc
jle
or
or
test
adc
jecxz
ins
sub
pop
es
jae
(bad)
bnd
mov
fidiv
sbb
in
mov
pop
sar
mov
inc
shl
dec
shl
iret
fidivr
retf
cmp
pop
std
aaa
dec
xlat
push
push
inc
rol
ds
cmp
sub
dec
mov
add
xlat
in
inc
out
call
jae
jge
jnp
ffree
mul
int3
add
jns
xlat
cmp
fsubr
inc
call
or
dec
mov
sub
mov
inc
lds
mov
push
loope
loope
adc
lahf
(bad)
test
adc
mov
pop
lock
sub
repz
leave
xchg
ja
lods
call
in
loope
loop
jb
pop
dec
test
mov
retf
bswap
inc
cmp
add
shr
push
aam
dec
rcr
xlat
mov
xchg
lock
ficomp
shl
(bad)
imul
mov
mov
not
cmc
loop
or
mov
movs
out
ret
cmp
mov
jmp
repz
(bad)
xchg
mov
mov
aam
xor
mov
pop
push
pop
ret
push
stos
xchg
and
sbb
inc
xor
cmp
and
cld
adc
push
sbb
xor
sahf
inc
jg
mov
outs
jmp
outs
shl
out
int3
retf
pushf
sbb
stc
dec
repnz
bound
addr16
mov
and
in
in
xor
stos
push
int3
inc
(bad)
xchg
adc
pop
mov
xchg
inc
aad
leave
test
repz
lahf
mov
xor
pop
cmps
fwait
push
push
sbb
ds
xchg
or
std
jnp
xlat
cmp
ja
rol
(bad)
jae
mov
xor
repnz
cmp
adc
push
mov
push
push
mov
pop
cdq
push
pop
(bad)
pop
int
add
pop
rcl
imul
and
inc
mov
shl
or
(bad)
jge
or
sub
inc
jmp
test
stc
adc
mov
clc
jnp
jne
mov
push
xor
loopne
push
dec
cld
cmp
pop
pusha
in
xor
cmp
pushf
in
ret
cmp
rcl
(bad)
mul
sbb
push
xor
ror
or
push
mov
add
mov
xchg
sbb
fmul
xor
dec
add
sti
or
xor
mov
mov
hlt
in
cmp
push
push
loopne
lds
or
mov
in
mov
daa
jl
mov
inc
(bad)
stc
mov
push
mov
xor
je
push
cdq
pushf
in
out
in
daa
xor
push
mov
xchg
or
fcmovnbe
(bad)
xor
jl
cwde
pop
not
cwde
sub
push
push
stos
fwait
mov
push
lock
popa
cmps
sbb
ins
sub
or
mov
lahf
fmulp
xchg
arpl
popf
cmp
call
jne
push
sahf
fwait
dec
or
int
and
ins
mov
inc
test
cld
mov
cmp
mov
repnz
mov
push
push
(bad)
jge
in
dec
jo
or
sub
sbb
and
mov
push
test
retf
xchg
mov
mov
js
push
lock
sbb
in
xor
fisub
jmp
pushf
cmp
push
cmp
push
lods
pop
aad
pop
cli
adc
sub
in
shr
je
cmps
in
mov
rcl
lods
or
mov
out
popf
ret
dec
shl
jnp
push
inc
fsubr
jge
mov
jbe
xchg
cmps
(bad)
mov
lods
ds
jg
(bad)
sti
adc
inc
pop
sub
aam
scas
dec
xor
mov
jle
mov
lock
xor
jecxz
aam
sub
xor
pop
arpl
xlat
aam
push
sub
test
sub
aam
fcmovnu
icebp
mov
xor
push
iret
aam
add
jp
mov
cmc
ror
shl
icebp
push
leave
movs
imul
mov
fnstcw
jb
adc
jno
call
arpl
mov
dec
jge
out
sar
cmc
sbb
clc
outs
daa
and
sar
sub
jo
popf
rol
fs
dec
adc
mov
(bad)
aad
inc
fxam
out
or
aas
mov
push
add
xchg
xor
loop
push
mov
push
fs
cli
out
(bad)
ds
test
ins
ins
call
sahf
inc
pushf
not
xor
dec
adc
stc
mov
adc
xor
dec
loope
fidiv
ins
adc
cmc
mov
inc
inc
sbb
add
ret
je
rol
jo
lods
sbb
stc
sbb
sbb
jp
sbb
jecxz
sub
imul
mov
dec
scas
add
imul
fst
jb
mov
push
pop
inc
xor
cwde
arpl
add
in
lea
sahf
push
cmps
cdq
or
fwait
dec
cmps
mov
xor
pop
add
pusha
dec
in
add
xchg
sub
stc
out
ins
mov
xlat
or
mov
push
mov
mov
imul
mov
dec
xor
pop
jle
sub
jecxz
fnsave
sahf
cmp
mov
pop
sub
mov
lahf
ds
add
inc
(bad)
imul
push
in
cli
je
push
and
jae
mov
cmp
scas
and
inc
sub
cmp
add
sub
in
dec
mov
(bad)
test
mov
mov
cmp
rcl
lea
call
push
xchg
(bad)
cmp
or
inc
out
pop
imul
cmps
fistp
mov
inc
jnp
leave
pop
(bad)
test
sub
fstp
ds
pop
push
fild
shl
mov
mov
loopne
popf
pop
or
inc
into
das
xchg
cmp
fstp
mul
and
lds
push
xor
inc
dec
or
movs
xor
ret
(bad)
and
ins
les
lock
dec
mov
adc
cmps
lods
imul
fwait
mov
dec
sbb
push
scas
dec
add
aaa
pop
outs
push
jbe
cwde
stc
pop
xchg
sbb
ss
mov
rcl
pop
not
into
imul
mov
fsubp
and
fcomi
scas
jb
hlt
xor
pop
test
stc
test
adc
rcr
popf
nop
xor
icebp
daa
outs
sub
cmps
mov
pop
inc
int
outs
(bad)
mov
xchg
imul
sub
jmp
leave
mov
adc
sbb
xchg
lea
jns
aad
pop
push
test
mov
cdq
and
ret
imul
jno
test
mov
les
(bad)
movs
es
pop
and
push
outs
(bad)
ins
call
xor
push
adc
or
cmp
shr
call
xor
jge
(bad)
pop
stc
sbb
ret
(bad)
data16
inc
or
mov
shl
push
outs
imul
push
mov
aas
xor
das
xor
cmp
pop
adc
xor
sahf
inc
leave
and
add
loope
push
cs
cs
mov
fist
ror
xor
sbb
repz
and
aaa
sbb
inc
(bad)
xchg
dec
mov
fidivr
inc
xchg
iret
mov
(bad)
mov
fdivr
mov
fsub
mov
push
enter
enter
cwde
aad
imul
loopne
loopne
lock
popf
fsub
and
sub
jge
sbb
adc
js
shr
push
ins
pop
jecxz
add
mov
arpl
xchg
loopne
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
sbb
jo
inc
in
jne
push
mov
mov
pop
pop
cmc
cmps
push
fadd
mov
push
fdivr
mov
sar
mov
inc
rcr
jae
add
mov
pop
fdivr
mov
sar
mov
inc
lock
arpl
add
mov
inc
sar
mov
cmp
push
sbb
jb
repz
sub
and
dec
or
(bad)
call
fwait
mov
jo
lahf
jae
es
scas
xor
sub
adc
outs
jbe
iret
mov
push
call
shl
mov
inc
inc
fild
mov
sar
arpl
std
mov
sar
mov
pop
ror
sub
push
xor
add
clc
mov
enter
nop
sub
sub
lahf
and
push
pop
sub
mov
punpckldq
xlat
fldcw
and
lods
aaa
adc
scas
fs
aaa
repnz
cmp
inc
test
stc
fsubr
cmp
dec
mov
sub
add
stos
imul
(bad)
lds
or
pop
sub
not
fild
fidiv
sub
frstor
add
std
mov
shl
mov
pop
push
hlt
mov
pop
pop
stos
dec
inc
je
pop
inc
in
aas
dec
pop
lock
clc
mov
fsub
hlt
mov
cs
push
sub
scas
cdq
cmp
aaa
or
xchg
mov
push
repnz
pop
push
xchg
movs
shl
mov
gs
ja
das
(bad)
ja
inc
mov
mov
addr16
sub
xor
ds
fadd
mov
jo
mov
push
cmps
pusha
or
inc
or
fdiv
mov
jb
mov
icebp
test
mov
mov
fldenv
mov
sbb
or
jg
mov
xor
aad
jecxz
or
xchg
(bad)
test
arpl
in
inc
clc
fst
imul
mov
dec
lock
inc
push
fs
pop
into
nop
retf
stos
push
inc
hlt
sbb
leave
jbe
pop
add
clc
mov
rcr
aad
mov
in
dec
push
imul
mov
jnp
enter
xor
mov
mov
out
in
mov
mov
jo
xchg
lds
repz
imul
shr
jno
aad
outs
inc
retf
mov
xchg
pop
or
sub
out
scas
int
sbb
sub
cdq
imul
into
sbb
push
daa
mov
aaa
out
leave
xor
mov
mov
add
stc
push
adc
mov
bound
mov
fwait
imul
jp
stos
mov
sub
sbb
ins
cmp
fdivr
mov
jl
xor
mov
fs
add
cs
lock
xlat
or
jb
xchg
inc
out
rcl
xor
test
aad
(bad)
xchg
xor
ror
sub
sbb
fnstcw
xor
or
dec
out
in
push
lock
mov
jbe
jnp
pop
pop
outs
mov
or
mov
inc
fdiv
fdiv
push
fs
pop
mov
xor
adc
cs
mov
sub
jmp
add
jmp
xchg
aad
outs
in
mov
les
cdq
jmp
repnz
rol
pop
jb
ror
into
fsubr
add
mov
cmp
test
mov
add
mov
push
clc
lds
inc
sar
mov
sar
push
dec
aad
retf
shl
fdiv
iret
leave
ins
es
sahf
push
retf
dec
add
lock
enter
adc
xchg
popa
pop
scas
outs
and
xor
xor
pop
fld
or
mov
sahf
ret
stc
dec
js
sbb
cmp
shl
mov
mov
cwde
cmps
jne
cmp
(bad)
mov
xchg
sub
gs
movs
dec
mov
out
fistp
out
add
add
push
enter
and
sub
add
jle
(bad)
push
pusha
sbb
aam
pop
out
in
add
clc
inc
out
popa
bound
jmp
and
pusha
and
pop
pop
mov
out
pushf
pop
jmp
pop
sbb
inc
sbb
push
test
adc
hlt
cmp
jbe
call
adc
and
(bad)
retf
call
sub
mov
push
test
sti
mov
mov
push
push
imul
cmps
pop
jle
movs
xchg
stos
xor
repnz
mov
ins
xor
or
(bad)
stos
adc
and
inc
mov
push
sub
xchg
movs
inc
mov
ss
lock
sub
cmp
std
mov
dec
clc
std
mov
fdivr
mov
dec
fdiv
enter
into
push
add
sahf
cmc
mov
inc
push
mov
(bad)
neg
les
push
cs
jnp
xor
dec
sbb
jp
push
cmp
dec
xchg
(bad)
popa
xchg
imul
pop
int
push
or
dec
hlt
mov
ret
dec
xchg
lea
test
mov
inc
fiadd
sbb
data16
in
sahf
ja
rol
sti
call
neg
adc
mov
and
inc
aaa
mov
xor
mov
push
mov
push
(bad)
movs
lods
lea
(bad)
out
and
fld
mov
add
or
cmc
mov
lods
stos
cs
in
test
es
inc
or
lock
dec
retf
inc
jle
mov
push
inc
sar
inc
sar
cmp
out
test
fisubr
dec
push
(bad)
sti
mov
xlat
std
test
enter
sar
mov
fdivr
mov
inc
pop
hlt
cmp
pop
jbe
dec
pop
repnz
int3
aad
mov
pop
cwde
jge
lds
jae
inc
sbb
adc
and
(bad)
sub
movs
loopne
test
dec
mov
retf
ins
arpl
pop
sub
ja
call
cmp
sub
in
xor
dec
mov
and
shr
pop
loop
push
das
(bad)
xlat
sub
pop
cmc
inc
pop
dec
mov
(bad)
mov
push
ins
cmc
(bad)
push
pusha
mov
lea
(bad)
popf
push
pushf
cmps
or
out
sar
stos
stos
loop
cmp
sbb
icebp
iret
call
cmc
inc
sub
outs
add
dec
rcl
and
stos
jns
in
(bad)
in
idiv
je
pop
jg
data16
fidivr
dec
leave
in
inc
lock
mov
fdivr
mov
inc
shl
pop
lock
dec
or
clc
mov
push
adc
rcr
test
sar
xchg
adc
mov
mov
adc
cdq
xchg
(bad)
retf
stc
cdq
in
(bad)
xchg
pop
jmp
iret
repnz
jae
cld
inc
fisttp
adc
inc
pop
fsub
push
in
stos
pop
rol
retf
cmp
mov
pop
in
iret
retf
xchg
call
imul
sub
jmp
icebp
inc
cmp
bound
stc
jae
(bad)
pushf
rcl
mov
in
(bad)
adc
jmp
dec
bound
add
pop
mul
shl
xchg
mov
mov
and
mov
jge
mov
jno
push
inc
lods
pop
lods
inc
cwde
pop
inc
xor
pop
sbb
dec
or
push
leave
imul
scas
pop
das
test
jp
inc
xchg
daa
iret
jl
outs
push
inc
je
std
cmp
cmc
mov
enter
fdivr
mov
fdivr
mov
push
cmc
mov
enter
into
sub
mov
fcomip
mov
sub
dec
nop
rcr
arpl
sahf
mul
stos
mov
cmp
jns
pop
sbb
push
adc
cdq
jmp
into
xchg
dec
pop
push
xor
scas
xor
je
mov
ja
cmps
jns
rcr
jmp
jno
in
enter
in
mov
addr16
aad
add
xchg
mov
mov
fstp
adc
inc
stc
and
pop
shl
jb
mov
loop
or
mov
xor
mov
mov
(bad)
fst
cmp
cmp
rol
mov
sub
add
clc
add
(bad)
fwait
int3
mov
push
xor
lea
aaa
push
out
push
test
pusha
dec
or
mov
jg
std
sbb
lahf
or
dec
call
inc
cmp
and
out
lock
(bad)
rcr
push
cmp
test
cmp
fidivr
inc
xchg
iret
mov
(bad)
mov
fdivr
mov
fsub
mov
push
enter
enter
cwde
aad
imul
loopne
loopne
lock
popf
fsub
and
sub
jge
sbb
adc
js
shr
push
ins
pop
jecxz
add
mov
arpl
xchg
loopne
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
sbb
jo
inc
in
jne
push
push
icebp
adc
jne
pop
pop
cmc
cmps
push
fadd
mov
inc
fdivr
mov
fdivr
mov
sar
mov
lock
arpl
cmc
dec
pop
fsub
mov
shl
mov
fdivr
mov
sar
mov
inc
clc
lds
mov
enter
fdiv
mov
cs
and
imul
xchg
pusha
ds
test
or
mov
aam
mov
inc
adc
jmp
cmps
push
jle
mov
add
push
lods
xchg
sub
ret
fidiv
inc
rcr
aad
mov
(bad)
lds
or
xor
xchg
inc
loopne
adc
cdq
aam
mov
sar
sahf
inc
pusha
leave
sbb
push
mov
adc
adc
test
add
fstp
clc
mov
sar
mov
inc
jo
sar
ret
jp
in
out
in
sub
addr16
jne
adc
ja
push
aas
inc
mov
aam
mov
mov
xlat
out
lea
leave
pandn
mov
(bad)
out
test
jp
fidiv
pshufw
std
mov
adc
js
into
popa
lahf
dec
lods
mov
jmp
xlat
pop
jmp
push
daa
xor
cli
mov
(bad)
mov
rol
inc
or
mov
(bad)
ds
into
pop
sbb
aam
mov
mov
push
and
sti
js
mov
(bad)
std
mov
inc
and
and
sub
add
sub
mov
repz
ret
das
cs
pop
outs
mov
mov
shl
xchg
jmp
push
stos
sbb
sub
lock
sub
loop
(bad)
adc
inc
mov
fdivr
mov
inc
and
mov
(bad)
mov
sar
mov
sar
mov
iret
(bad)
mov
xlat
std
mov
sar
mov
inc
loopne
mov
aad
mov
sar
mov
rol
push
inc
pusha
push
inc
sar
mov
inc
adc
jo
fdivr
mov
sar
mov
sar
mov
lock
cmp
std
mov
sar
mov
rcl
nop
inc
sar
mov
xlat
std
mov
sar
mov
loopne
inc
inc
enter
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
lock
cmp
cmc
mov
fdiv
nop
dec
sar
mov
inc
loopne
or
gs
jo
mov
dec
dec
mov
add
clc
mov
enter
inc
sbb
sub
xchg
cmc
or
popa
or
call
add
add
or
pop
shl
dec
ss
ret
cmp
xlat
pop
movs
xlat
imul
pop
xorps
in
pop
ds
pop
ds
sbb
les
(bad)
(bad)
xchg
sbb
lahf
inc
sbb
mov
ror
icebp
mov
lods
ds
movs
cmp
jl
sbb
(bad)
adc
fisub
sbb
(bad)
sbb
fisub
mov
mov
mov
mov
or
fdiv
dec
jns
inc
pop
or
data16
add
sub
in
out
jnp
sub
pop
adc
push
dec
push
jecxz
idiv
push
retf
mov
ja
sub
mov
mov
cld
xor
ins
mov
xor
push
and
inc
out
cwde
rol
push
loopne
xchg
jbe
adc
push
cld
test
adc
or
imul
ins
add
rcl
addps
cmp
(bad)
push
fstp
add
add
xor
add
jne
pop
jmp
es
jno
mov
lock
sar
or
retf
xchg
adc
je
and
fsubr
pop
or
dec
ja
push
outs
mov
pop
jmp
out
outs
jmp
push
sbb
jne
sub
out
scas
jmp
push
xchg
std
push
sbb
add
xchg
imul
daa
sub
nop
pop
movups
jge
mov
adc
add
das
pop
or
xor
(bad)
xchg
sub
adc
lds
test
xlat
loop
pop
or
in
sub
sar
jae
add
pop
setb
cld
xchg
or
cld
loope
add
pop
setb
cld
xchg
or
cld
loope
mov
xchg
pusha
fimul
adc
fistp
add
jmp
jmp
jg
jne
cmc
mov
sbb
mov
sbb
add
xor
es
iret
xchg
jmp
nop
mov
pop
jp
pop
and
push
inc
mov
xor
dec
ret
cmps
or
nop
ret
movs
mov
ret
or
mov
add
push
jp
cmp
cmp
mov
pop
inc
stos
or
dec
sbb
lock
loope
mov
fs
ficomp
mov
jl
mov
mov
das
sahf
outs
pop
pop
xor
push
xor
shl
fwait
rol
push
or
jne
jmp
fimul
das
cmp
cli
sbb
push
icebp
dec
pushf
stos
call
adc
(bad)
mov
jae
and
xor
adc
iret
xchg
jo
(bad)
mov
jae
and
xor
adc
iret
xchg
jo
mov
ret
ds
or
cwde
dec
adc
and
inc
movs
(bad)
and
outs
(bad)
xchg
retf
add
fcmovu
outs
push
cld
imul
jns
call
in
ds
sbb
inc
test
icebp
or
xor
out
pop
pushf
jl
sub
rol
mov
xor
jge
sub
popa
and
xchg
test
jmp
xchg
sahf
sahf
fstp
icebp
xor
push
cmp
push
in
cwde
mov
jo
cs
int3
mov
adc
arpl
(bad)
out
cwde
mov
pop
push
dec
in
leave
cmp
add
arpl
mov
dec
push
retf
js
add
stos
xchg
mov
jbe
xor
sbb
and
inc
jecxz
cmps
inc
mov
daa
pop
xchg
mov
sti
rcl
bound
cs
push
(bad)
stc
fdivr
pop
jo
dec
sbb
jne
cdq
sub
mov
or
xor
cs
mov
stos
fdiv
push
xor
sub
cld
ss
jmp
mov
fnstsw
dec
pmaddwd
mov
(bad)
cs
push
scas
imul
in
pop
xchg
mov
fstp
stos
dec
jno
ins
or
bndstx
das
xchg
sub
stos
adc
cmp
sub
cld
es
mov
mov
int
in
ror
dec
(bad)
adc
mov
mov
int
in
ror
dec
(bad)
adc
mov
mov
int
in
ror
dec
(bad)
adc
mov
mov
int
in
ror
dec
(bad)
adc
mov
mov
in
jnp
addr16
and
iret
pop
mov
xor
call
cmp
push
in
stos
fdivr
jb
cs
fmul
ret
(bad)
jecxz
cwde
mov
sbb
dec
dec
cmp
and
add
fcom
xchg
mov
retf
jae
inc
add
nop
mov
clc
fstp
imul
mov
fdivr
mov
lock
lods
dec
inc
imul
lds
mov
retf
mov
(bad)
fidivr
inc
pop
or
mov
mov
sub
fmul
pushf
sbb
pop
dec
jnp
dec
sbb
cmp
add
mov
pushf
add
iret
retf
cmps
pop
ficomp
mov
ret
jb
rcl
movs
sub
test
sbb
or
and
pop
mov
cmc
xlat
inc
mov
out
loop
and
mov
mov
in
pop
retf
jbe
add
test
aam
or
aam
sub
fst
sbb
aam
repz
xchg
ins
enter
pop
shl
dec
cmp
xor
and
mov
das
js
lods
push
push
imul
lahf
add
jmp
or
mov
cld
(bad)
pop
stos
jne
repz
push
cmp
outs
mov
into
add
push
imul
mov
out
sti
adc
xor
out
dec
pop
dec
jnp
arpl
fnstsw
mov
enter
adc
call
xchg
push
in
enter
adc
lock
xor
movs
int
enter
jnp
in
rol
sbb
mov
(bad)
push
add
inc
xor
out
ror
cmps
out
pop
mov
xor
push
(bad)
lods
pop
xchg
pop
push
(bad)
mov
mov
mov
sbb
jae
push
icebp
sbb
mov
mov
(bad)
xchg
jae
cmp
mov
or
jnp
jnp
cmp
enter
ds
in
jg
(bad)
add
xchg
inc
sahf
mov
mov
add
jle
inc
enter
test
mov
cmp
cld
fistp
pop
nop
sbb
cmps
int3
cmp
pop
xor
mov
xor
dec
xchg
aaa
sub
imul
or
pop
or
sti
into
xchg
mov
cmps
pop
adc
mov
ins
push
sti
and
aam
add
lods
out
jnp
sbb
cdq
inc
and
gs
jb
repnz
cmps
mov
or
data16
dec
mov
shl
cmp
xchg
xor
cmp
fwait
outs
and
or
add
fucomip
aam
pop
sti
popf
lea
mov
ins
(bad)
xchg
leave
pop
loopne
pusha
movs
push
adc
xchg
loope
fadd
jle
repz
jecxz
into
loope
shl
sahf
xor
fwait
loopne
inc
ffreep
xchg
mov
loop
cmp
and
jns
stc
fsubr
dec
inc
mov
fistp
and
push
js
jnp
out
int3
int3
or
popf
popa
(bad)
push
inc
(bad)
cdq
call
popf
imul
jecxz
pushf
push
sar
data16
mov
adc
iret
(bad)
cmp
sar
jnp
out
hlt
jle
nop
call
inc
iret
dec
jo
and
imul
icebp
mov
imul
push
test
inc
xlat
sti
nop
(bad)
sub
mov
repz
cmp
mov
xchg
rol
cmp
out
hlt
jle
nop
call
inc
iret
dec
jo
and
imul
icebp
mov
imul
push
test
inc
xlat
sti
nop
(bad)
sub
mov
repz
cmp
mov
xchg
rol
cmp
out
hlt
jle
nop
call
inc
aas
pop
cmps
pop
jo
push
movs
(bad)
sbb
jecxz
pop
cmps
pop
jbe
push
movs
(bad)
sbb
jecxz
pop
cmps
pop
jbe
push
movs
(bad)
sbb
jecxz
pop
cmps
pop
jbe
push
movs
(bad)
sbb
jecxz
pop
cmps
pop
jbe
push
movs
(bad)
sbb
jecxz
pop
cmps
pop
jbe
push
movs
(bad)
sbb
jecxz
pop
cmps
pop
jbe
push
movs
(bad)
sbb
jecxz
pop
cmps
pop
jbe
push
movs
(bad)
sbb
jecxz
pop
cmps
pop
jbe
push
movs
out
sub
fldcw
xchg
and
fistp
iret
sub
test
sti
pop
mov
xchg
lahf
add
std
je
int
shl
inc
pop
fcmovnbe
mov
sub
ins
jmp
popf
std
fldcw
xchg
and
fistp
iret
sub
test
sti
pop
mov
xchg
lahf
add
std
je
int
shl
inc
pop
fcmovnbe
mov
sub
ins
jmp
popf
std
fldcw
xchg
and
in
loope
dec
test
dec
sub
and
add
sub
mov
rcr
retf
sub
mov
inc
mov
lock
adc
out
and
loopne
push
test
and
outs
in
aad
add
inc
jne
pop
call
pop
xchg
jnp
stos
jg
lock
push
test
add
dec
test
hlt
inc
mov
inc
and
aaa
push
xchg
hlt
jge
dec
xchg
fsub
sub
js
push
jne
mov
pop
xor
or
inc
loope
aad
dec
pushf
push
pop
push
dec
out
popa
mov
push
sub
ficom
xchg
xor
mov
(bad)
push
shl
arpl
cs
xor
cmc
inc
sahf
call
push
movs
not
data16
int3
or
sar
fnstenv
test
repz
xor
sbb
stos
out
xchg
mov
stos
inc
and
aaa
push
xchg
call
mov
(bad)
in
mov
dec
sar
jae
std
mov
inc
inc
jne
pop
push
fdivr
dec
dec
cld
mov
enter
fld
pusha
inc
fwait
cmc
test
dec
dec
adc
(bad)
in
into
(bad)
icebp
and
dec
stos
push
or
sbb
iret
push
cdq
test
jg
push
sbb
or
repnz
mov
inc
cmps
int
gs
fadd
mov
adc
sbb
xor
fcmovnu
nop
mov
jnp
sbb
data16
xlat
cs
aas
neg
xlat
fwait
sbb
mov
cmc
shl
rcr
mov
jbe
shl
rcr
imul
in
es
lea
hlt
and
xchg
cmp
sub
or
lods
pop
aas
xor
aas
cmc
or
jne
cmc
lea
inc
sbb
stos
outs
jne
adc
mov
xor
xchg
arpl
and
cwde
jmp
and
aad
pop
cli
mov
rcr
jg
out
fcom
bound
push
call
xchg
clc
stos
popf
out
sbb
imul
loopne
das
inc
inc
pop
cmp
dec
adc
jae
in
fsub
cmp
and
dec
call
xchg
mov
lods
mov
push
out
nop
or
scas
outs
enter
mov
int3
loop
int
das
clc
mul
sar
mov
leave
shl
push
xor
xchg
push
xchg
mov
dec
jo
xchg
(bad)
js
out
cs
loope
sbb
lods
movs
shl
aam
and
inc
dec
add
mov
fstp
sti
js
mov
(bad)
cmc
sbb
fistp
sti
js
mov
(bad)
cmc
sbb
fistp
sti
dec
fsub
mov
clc
push
dec
rol
fsub
and
loope
in
mov
shl
scas
out
xor
sub
ret
scas
sub
pop
or
dec
dec
adc
jae
sti
leave
int
in
aaa
push
leave
ja
dec
leave
scas
(bad)
sbb
inc
xor
jb
addr16
mov
dec
jge
int3
jns
cmp
mov
xchg
or
pop
mov
inc
xchg
or
add
pop
imul
lahf
data16
enter
mov
dec
and
mov
into
shl
mov
je
into
shl
mov
je
into
into
xor
xor
imul
inc
iret
in
imul
lea
jl
ret
fisub
(bad)
pop
les
jbe
out
jae
les
push
jle
xor
push
jg
jecxz
sti
xchg
mov
lock
push
or
add
fist
push
cmp
ror
popf
inc
dec
xchg
daa
mov
jg
popa
sahf
xor
nop
popfw
mov
pop
pop
or
add
nop
and
lock
or
sub
mov
fidiv
sub
loopne
mov
mov
dec
cmc
sub
retf
xor
loopne
ins
ja
mov
pop
not
hlt
pusha
and
call
and
(bad)
daa
adc
mov
shr
sub
xchg
or
scas
mov
pushf
ds
xor
fdiv
imul
cmp
jle
into
cmp
sbb
movs
pop
xor
jle
into
cmp
sbb
movs
pop
xor
jle
into
cmp
sbb
movs
pop
xor
jle
into
cmp
sbb
movs
pop
xor
jb
sahf
test
out
pop
cmc
push
jne
loop
xchg
test
out
pop
cmc
push
jne
loop
xchg
test
out
pop
cmc
push
jne
loop
xchg
test
out
pop
cmc
push
jne
loop
xchg
test
out
dec
cmc
push
gs
adc
dec
cmc
push
gs
adc
dec
cmc
push
gs
adc
dec
cmc
push
gs
adc
dec
lock
and
add
mov
inc
loopne
nop
imul
mov
fdivr
mov
shl
dec
jo
mov
retf
push
sub
out
loope
loop
pop
pop
(bad)
mov
rcr
adc
mov
icebp
dec
aam
mov
dec
dec
sbb
jle
xchg
and
jno
sub
xor
ja
in
jmp
(bad)
jmp
into
cmp
(bad)
and
in
fdiv
outs
adc
int3
(bad)
leave
test
movs
xchg
mov
mov
xchg
arpl
rol
mov
mov
daa
dec
fs
dec
and
inc
sbb
mov
adc
xlat
(bad)
pop
dec
adc
adc
mov
mov
das
pop
les
xchg
mov
mov
jp
jb
jle
xor
mov
pop
dec
jo
shr
adc
mov
outs
test
loope
ins
xlat
sahf
or
test
imul
in
mov
fwait
dec
aam
mov
scas
or
lahf
pusha
sub
pusha
fwait
fs
sbb
mov
mov
add
add
xchg
cmp
(bad)
fdiv
add
mov
push
aad
aaa
jge
inc
pop
mov
pop
xchg
xor
test
lock
lods
cmc
outs
inc
push
cmps
cld
sub
or
mov
xchg
shr
sbb
nop
mov
inc
test
lock
lods
cmc
outs
inc
push
cmps
cld
sub
or
mov
xchg
shr
sbb
nop
mov
inc
test
lock
lods
cmc
outs
inc
push
cmps
cld
sub
popf
movs
fwait
mov
pop
test
jge
add
aaa
adc
push
and
fdiv
xchg
mov
sub
in
into
xor
scas
popa
popa
pushf
ret
pop
scas
outs
inc
xchg
imul
xor
adc
fadd
inc
push
or
js
push
push
add
and
and
mov
gs
std
cmp
pop
mov
cmp
mov
and
mov
sub
fstp
sub
aaa
jg
not
fs
scas
xchg
sbb
xor
sbb
inc
sti
cs
in
jge
js
sahf
xchg
mov
dec
outs
xor
lods
or
inc
sbb
je
shl
mov
cmp
cdq
add
stc
imul
lahf
fmul
shl
sti
fcmovbe
and
push
sbb
(bad)
imul
xchg
in
push
je
shl
mov
jo
mov
jns
lea
leave
push
movs
add
mov
call
dec
mov
imul
hlt
sub
(bad)
(bad)
or
aad
clc
lahf
push
mov
cli
outs
push
dec
das
xchg
mov
xchg
sbb
loop
pop
(bad)
jg
and
jns
and
dec
dec
stc
xor
fimul
and
jno
add
sub
bound
inc
jnp
sub
jne
pop
mov
repnz
cmp
pusha
add
aaa
je
repz
ret
push
test
cmp
(bad)
jnp
lds
in
push
mov
xor
add
xchg
jae
sbb
scas
pop
adc
mov
inc
dec
sbb
stc
mov
xchg
je
es
push
sahf
dec
jp
cmp
sbb
outs
popf
jl
xchg
inc
and
stc
lock
mov
aaa
push
fmulp
rol
scas
xchg
push
xchg
mul
push
in
out
in
out
out
sub
hlt
repnz
push
xchg
lock
arpl
sbb
(bad)
pop
and
sbb
push
rol
jae
movs
or
mov
mov
pop
xchg
add
mov
scas
(bad)
int3
jge
sbb
pop
jo
mov
adc
cmp
fcom
(bad)
shl
xor
sub
movs
jmp
inc
repnz
mov
and
mov
icebp
xor
cmp
repnz
icebp
dec
ror
jne
movs
mov
add
dec
xor
and
in
push
xlat
shr
ret
push
stos
fst
or
pop
int3
shl
(bad)
push
and
mov
adc
repz
or
gs
jo
and
bound
push
(bad)
xchg
inc
shl
fs
mov
int3
sbb
cmp
mov
fwait
inc
rdpmc
stos
lahf
adc
mov
scas
ins
fwait
int
xchg
pop
sbb
or
cmp
dec
jbe
jnp
xchg
mov
sbb
pop
(bad)
ffreep
ja
push
inc
pop
std
pop
loop
mov
add
shr
xor
rcl
hlt
push
cmp
jns
mov
repz
jae
(bad)
and
ret
movs
jmp
sub
xchg
test
push
int3
pop
lea
add
jle
popa
push
fimul
inc
fmul
or
pop
inc
data16
cmp
push
shr
mov
inc
ds
repz
scas
dec
(bad)
push
mov
test
adc
xor
mov
movzx
xlat
es
sub
out
shr
cmc
lock
out
push
sahf
and
je
sub
mov
mov
jb
mov
add
sbb
pusha
ja
dec
sbb
aad
test
in
pushf
jb
or
xor
mov
ins
iret
dec
shl
mov
sbb
xchg
adc
aam
movs
or
pop
adc
mov
test
das
mov
shr
out
xchg
dec
mov
cmp
cld
xlat
xchg
mov
pop
pop
xor
je
or
or
xor
cli
movs
movs
jnp
mov
push
ja
mov
sbb
jnp
cmp
add
mov
(bad)
scas
sbb
sbb
lahf
dec
pusha
(bad)
cmp
in
pop
out
push
sbb
ss
retf
mov
jns
dec
jnp
mov
stos
imul
ds
push
add
call
adc
pop
repz
and
mov
mov
push
stos
jb
std
ret
fisubr
cli
inc
dec
sub
fiadd
addr16
in
imul
inc
loopne
out
sar
jo
out
inc
jmp
sub
int
dec
pop
cs
mov
(bad)
in
jle
mov
aad
in
xchg
push
adc
jmp
mov
pusha
xchg
mov
jne
in
popa
inc
ret
cmp
jae
xchg
cwde
sar
leave
xor
retf
das
and
call
fsubr
sub
ds
mov
xor
call
cmp
dec
ss
jo
retf
xor
out
in
xor
mov
dec
movs
push
xchg
fnstcw
ja
fsubr
addr16
sub
pop
test
in
and
push
mov
jmp
or
jo
sbb
(bad)
leave
fisttp
popa
inc
mov
rcl
mov
movs
push
xchg
fnstcw
jb
fwait
mov
lea
in
adc
or
mov
pop
mov
xchg
and
mov
fwait
dec
retf
scas
jae
sub
cmps
add
scas
pushf
stos
add
push
test
js
sbb
rcl
jmp
sub
pop
and
mov
aad
cmp
es
or
imul
push
div
or
loopne
sub
cmp
fwait
add
mov
add
cmp
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
and
and
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
sar
repnz
fdivr
bound
pop
inc
add
popa
inc
cmp
ins
jl
stc
pop
inc
add
popa
inc
cmp
ins
jl
stc
pop
inc
add
popa
inc
cmp
ins
jl
stc
fimul
inc
mov
mov
cmp
dec
fisttp
inc
mov
mov
cmp
dec
fisttp
inc
mov
mov
cmp
inc
push
inc
cmp
jl
ret
test
mov
inc
lahf
inc
push
lfs
add
out
pop
cmps
sbb
mov
jae
or
(bad)
xor
sub
mov
jp
hlt
aas
rcr
xor
movs
aad
retf
js
and
mov
bound
pusha
sbb
stos
loope
enter
imul
arpl
cmovg
jecxz
push
(bad)
cmp
lahf
jl
ret
test
bound
sub
and
retf
das
jl
mov
pop
jo
mov
pop
bound
sub
and
retf
das
jl
mov
pop
jo
mov
pop
bound
sub
and
retf
das
jl
mov
pop
jo
mov
pop
bound
sub
and
retf
das
jl
mov
pop
jo
mov
pop
bound
sub
sub
push
in
pop
jmp
je
ffree
mov
cli
xchg
rcr
sbb
shl
out
pop
adc
or
outs
jmp
js
adc
add
(bad)
test
xchg
xchg
mov
in
mov
cmp
leave
fist
pop
pop
adc
or
jne
and
hlt
push
push
dec
adc
scas
mov
or
in
stos
jmp
xchg
cmp
into
and
push
in
pop
jmp
and
inc
(bad)
mov
test
lock
nop
pop
sar
mov
fdivr
mov
dec
fdiv
ds
pop
div
int
jle
rcr
ss
sub
mov
fcomip
mov
sub
fimul
rcl
mov
pop
clc
jmp
jo
mov
int3
clc
xchg
inc
sub
aad
and
ret
cmp
push
mov
jno
push
xchg
sar
dec
add
sbb
mov
push
inc
ficomp
xor
ficom
icebp
jle
movs
xchg
sbb
jno
inc
fistp
sbb
test
adc
jbe
push
fist
xor
iret
les
lds
das
adc
xor
into
sub
dec
and
mov
mov
ffreep
mov
in
test
clc
js
jnp
vcvtdq2ps
retf
xchg
jnp
or
adc
mov
jmp
pop
adc
mov
add
ins
out
(bad)
shl
(bad)
xchg
and
cwde
mov
pop
mov
and
mov
push
call
aaa
adc
mov
dec
in
mov
outs
imul
hlt
(bad)
(bad)
xchg
mov
les
and
rcl
pushf
in
mov
push
in
fild
js
retf
or
sar
xchg
popa
mov
sub
cdq
dec
into
mov
das
data16
xlat
movs
push
push
cmc
mov
cwde
jbe
out
dec
call
xchg
xor
iret
add
push
or
nop
ds
das
mov
lds
sub
pushf
mov
or
and
push
cmps
adc
add
clc
test
fild
push
adc
xlat
les
scas
cdq
dec
das
sub
scas
push
adc
call
adc
inc
and
ficom
(bad)
stc
cwde
adc
mov
pop
add
mov
repz
xor
ficom
xor
cld
xor
nop
add
sbb
out
lods
push
gs
sbb
gs
fsub
pop
push
mov
mov
dec
pop
push
inc
cmp
test
dec
cld
adc
sub
jg
pushf
push
test
add
ja
outs
xchg
mov
inc
and
inc
push
adc
inc
retf
jg
pushf
retf
push
xor
push
and
xlat
xlat
icebp
cmp
mov
xor
jb
(bad)
(bad)
and
and
aaa
push
loopne
xchg
rcr
cmps
mov
dec
jae
xchg
mov
mov
adc
mov
xchg
iret
in
(bad)
jmp
push
inc
mov
cdq
or
in
mov
je
push
pop
popf
call
(bad)
push
(bad)
mov
adc
mov
add
jo
daa
pop
loope
add
es
shl
(bad)
clc
adc
in
mov
js
ret
xor
test
(bad)
pop
arpl
mov
xchg
cmp
stc
jb
leave
(bad)
or
movs
or
inc
pop
ds
addr16
cmps
push
int
imul
lods
dec
push
outs
mov
xchg
ds
dec
stc
jb
enter
xchg
mov
xor
imul
aaa
lds
mov
jecxz
jnp
pop
add
cwde
inc
sar
cwde
cwde
call
scas
xchg
add
inc
or
ret
in
push
fnstsw
pop
shl
fsub
xchg
out
das
cli
xor
fadd
out
mov
adc
jg
jmp
inc
jmp
iret
movs
or
call
jl
loope
jp
shl
into
lahf
sbb
pop
xchg
ret
stos
mov
loop
pop
dec
ss
xor
pop
mov
(bad)
pop
icebp
jo
inc
add
fimul
movs
inc
aam
push
icebp
ret
fs
data16
add
rcl
jmp
mov
xchg
mov
loope
rcl
fistp
inc
cmc
inc
jmp
adc
test
pop
mov
fdiv
push
mov
(bad)
fsubp
bnd
jno
add
inc
icebp
int3
mov
inc
push
fiadd
icebp
jnp
add
int
cld
inc
cmp
loopne
aad
inc
jl
lock
lahf
rol
jge
(bad)
ret
add
daa
adc
icebp
inc
test
dec
pushf
jle
pop
and
jecxz
adc
add
aaa
jecxz
mov
xchg
out
mov
(bad)
jmp
push
jb
rol
leave
cwde
mov
les
ds
and
pop
pop
pop
mul
jp
loop
(bad)
pop
cmp
cmp
xchg
pop
(bad)
call
cli
mov
pop
test
(bad)
clc
icebp
dec
in
pop
sar
mov
add
mov
sub
and
mov
sub
jbe
xchg
fsubr
repnz
push
push
adc
jmp
test
xlat
cmp
jmp
xchg
push
pop
adc
or
cmc
nop
arpl
fistp
ret
clc
jge
dec
push
cmc
nop
arpl
fistp
ret
clc
jge
dec
push
(bad)
adc
adc
sub
pop
sbb
and
ret
or
push
fbstp
xor
mov
fs
sbb
sub
dec
pop
jle
in
cwde
cdq
movs
in
mov
mov
aaa
loop
test
popa
adc
lea
(bad)
cli
push
test
aas
push
rcl
mov
movs
push
aam
lock
mov
movs
push
aam
sti
add
leave
jns
add
daa
dec
pushf
mov
xchg
and
arpl
push
mov
ss
push
and
cwde
mov
arpl
int3
dec
fdiv
sbb
leave
and
jmp
xor
outs
pushf
mov
and
mov
data16
push
dec
stos
fdivr
jae
daa
dec
(bad)
js
enter
mov
outs
pop
xchg
jbe
out
sub
add
pop
imul
and
push
inc
sar
inc
sar
cmp
push
ds
outs
movs
imul
test
vcvttsd2si
std
ins
repz
cld
bound
xchg
or
popf
cs
push
cmp
test
xchg
add
cmp
xchg
or
popf
dec
clc
loopne
repz
icebp
ins
repnz
mov
mov
dec
outs
popf
outs
and
sub
iret
add
fld
cld
ins
clc
or
dec
outs
push
pusha
and
sub
(bad)
push
fdivrp
mov
sar
xchg
inc
nop
fild
cld
ins
repnz
xchg
bound
ins
repnz
xchg
bound
ins
repnz
xchg
bound
fild
cld
ins
repnz
lea
dec
outs
popf
outs
and
sub
xchg
or
std
ins
repnz
inc
mov
bound
xchg
or
popf
outs
and
sub
xchg
outs
cmc
ins
and
sub
xchg
or
popf
outs
and
sub
xchg
or
popf
add
inc
fcomp
mov
inc
sar
mov
sar
mov
dec
pop
jb
lds
mov
rcr
dec
inc
fstp
inc
pop
clc
call
stc
test
or
inc
push
sub
and
dec
inc
mov
sub
adc
les
aam
xor
stos
add
cmp
mov
cmp
xor
out
adc
(bad)
nop
jb
retf
retf
add
ffree
(bad)
shl
stc
je
test
push
out
repnz
call
std
ins
rcr
cmc
sub
enter
das
(bad)
hlt
jae
sub
xchg
ret
adc
cwde
add
imul
sti
inc
sahf
shr
mov
cmp
jno
xor
nop
inc
movs
inc
mov
fistp
lods
pop
adc
nop
adc
xchg
ins
mov
paddq
and
xchg
push
pop
jle
adc
dec
cs
and
cmps
sub
in
popf
fadd
jmp
add
mov
mov
std
jae
sar
cwde
fdivr
sub
cmp
shl
pop
cmp
adc
loop
test
sub
xchg
stc
es
data16
mov
or
fldenv
and
cdq
stc
dec
leave
outs
je
mov
xor
fucomi
out
add
cmps
or
mul
inc
addr16
adc
in
lahf
dec
jmp
push
add
cli
dec
aam
mov
sar
mul
inc
xchg
inc
mov
mov
dec
(bad)
inc
dec
push
jg
push
mov
sub
xchg
jne
sub
inc
lahf
xchg
dec
xchg
adc
retf
imul
jne
test
js
jo
in
int
pop
and
fs
fild
(bad)
repz
es
lahf
pusha
hlt
or
add
xor
mov
jb
mov
push
(bad)
popf
xchg
xchg
nop
lahf
std
movs
push
aam
lock
mov
aam
je
jp
mov
push
aam
je
jp
mov
push
aam
je
jp
mov
push
aam
je
jp
mov
push
aam
je
jbe
jp
jmp
mov
cmp
(bad)
cli
adc
nop
or
stos
out
jnp
pushf
push
lods
mov
sbb
arpl
cdq
push
pop
nop
test
out
call
shl
imul
jmp
popw
sub
or
push
xor
jbe
jmp
test
mov
jmp
xchg
enter
test
pusha
pop
test
hlt
jbe
sub
adc
leave
jmp
xchg
enter
test
pusha
pop
test
hlt
jbe
sub
pop
jmp
repz
add
dec
mov
mov
test
pop
inc
test
sub
emms
repz
ja
push
jnp
jecxz
repz
add
dec
mov
mov
test
pop
inc
test
sub
emms
repz
ja
push
jnp
jecxz
repnz
add
stos
lea
mov
clc
les
(bad)
out
clc
rcr
ficom
fnstenv
addr16
or
ret
(bad)
mov
mov
cli
sbb
dec
idiv
jl
ins
stos
rcl
mov
addr16
jns
addr16
in
mov
mov
add
cli
or
sti
lock
rcr
dec
enter
fdivr
mov
inc
shl
pop
hlt
xor
dec
pop
jge
int
add
fwait
cmc
mov
dec
cwde
(bad)
outs
mov
and
inc
dec
jns
icebp
pusha
add
and
jbe
aam
in
repnz
mov
adc
adc
or
das
cmp
xchg
retf
xor
pop
ins
xchg
pop
int3
popf
push
movnti
mov
mov
imul
mov
sahf
push
ds
dec
dec
stc
adc
int
mov
(bad)
xchg
leave
or
addr16
sub
test
fwait
pop
das
fwait
(bad)
cld
jmp
test
cmp
js
cwde
cmp
test
sub
fs
and
ins
repnz
mov
popa
cmp
mov
push
loope
jae
stc
mov
dec
jg
int3
pushf
dec
int
xchg
aas
cmp
pop
mov
cmp
push
xlat
xchg
ficomp
cs
jp
mov
and
out
jae
inc
jbe
sbb
mov
mov
jns
out
in
or
mov
popf
push
mov
aam
je
into
nop
in
addr16
in
cmc
xchg
dec
(bad)
int
xor
push
inc
loop
pop
(bad)
mov
cmp
xlat
lahf
fadd
ja
leave
pop
ja
leave
pop
ja
leave
pop
ja
leave
pop
ja
leave
call
(bad)
push
fst
addr16
mov
mov
mov
xor
xchg
adc
dec
cmps
inc
iret
pop
xchg
movs
test
mov
xor
arpl
idiv
ja
outs
jp
out
mov
nop
(bad)
mov
sbb
test
push
add
cmp
ror
dec
fs
stc
pop
daa
ffreep
imul
pop
cmps
xchg
mov
leave
rcl
jg
cld
mov
push
inc
cdq
mov
nop
fisubr
sbb
mov
clc
bound
jne
cmps
scas
pusha
inc
retf
ins
mov
pop
lods
inc
pop
scas
xor
aam
push
jb
nop
dec
test
shl
mov
leave
fdivr
loope
pop
adc
ss
loopne
mov
stos
fldenv
mov
or
mov
int3
dec
jne
hlt
div
scas
push
jo
jnp
adc
sar
int3
nop
sub
or
ret
sbb
arpl
sub
rol
jle
ds
xchg
mov
cmp
loopne
ret
sbb
arpl
jecxz
sti
cmp
dec
out
ret
push
cmc
in
mov
pop
cmp
inc
adc
neg
jle
dec
movs
xchg
and
ins
repnz
xchg
bound
dec
add
pusha
dec
add
pusha
dec
add
pusha
dec
add
pusha
dec
add
pusha
dec
add
pusha
dec
add
pusha
dec
or
pusha
add
add
test
dec
aad
in
in
icebp
cld
xchg
add
mov
sub
pop
xchg
test
dec
aad
in
in
icebp
cld
xchg
add
mov
pop
cmc
rcr
outs
std
rcr
outs
std
rcr
outs
std
rcr
outs
std
add
ins
fld
mov
dec
shr
inc
shl
push
fdivr
mov
retf
cmp
cli
mov
rcl
push
inc
rol
jae
cmc
sbb
sbb
clc
mov
cmc
movs
add
and
jmp
int
pop
imul
clc
mov
std
jmp
test
stos
mov
mov
cmp
fdivr
outs
cmc
icebp
in
mov
xor
sbb
xor
jle
dec
iret
out
sub
add
call
int3
xchg
mov
mov
add
and
mov
mov
(bad)
arpl
pop
shl
imul
mov
out
and
adc
mov
dec
xor
in
and
mov
push
mov
out
push
push
in
inc
sar
xchg
cli
xchg
sbb
xchg
imul
ficom
mov
call
sbb
aam
fnstenv
sbb
bound
jg
ja
dec
or
mov
js
loop
(bad)
cmp
xor
ret
dec
dec
(bad)
(bad)
rcl
pop
dec
enter
retf
out
inc
dec
ror
cmp
mov
push
cdq
add
xchg
icebp
adc
jmp
call
mov
fidiv
and
jge
cli
movs
jbe
sbb
push
test
cmp
push
sub
sbb
xor
lahf
cld
jmp
jmp
xchg
inc
mov
sahf
or
mov
pop
fsubr
out
push
out
pop
cld
lods
pop
xchg
jae
movs
loope
mov
mov
xchg
dec
xchg
out
test
in
xor
dec
push
mov
fcomip
int3
adc
dec
ror
repz
fcom
das
inc
lods
arpl
arpl
cmp
test
mov
out
stos
gs
daa
push
outs
outs
aaa
push
gs
jo
xchg
lods
je
push
sbb
jmp
in
cmp
xlat
adc
push
(bad)
jmp
cs
lods
fidivr
xlat
test
xchg
(bad)
cmc
popa
xor
ins
icebp
out
push
test
bound
cmp
add
adc
jg
(bad)
cmc
cmp
add
mov
sbb
std
push
jg
push
retf
pushf
mov
adc
fisub
and
loopne
mul
loopne
jecxz
jno
ins
jb
loope
(bad)
fsub
xor
stos
mov
cmp
call
xlat
mov
dec
lods
inc
adc
cld
mov
popa
jecxz
ja
fs
xchg
cmps
imul
(bad)
jecxz
jns
xchg
pop
addr16
shl
mov
cmps
sbb
mov
lods
cmp
outs
sbb
add
dec
dec
int3
mov
loop
movs
frstor
(bad)
mov
adc
cmp
or
hlt
scas
add
call
xor
nop
add
jle
movs
push
mov
mov
push
out
push
mov
retf
pusha
xchg
xor
jne
sti
scas
loop
sbb
test
mov
inc
push
sahf
sar
pusha
stc
repnz
pop
(bad)
stos
inc
pop
jne
jl
jp
nop
(bad)
lock
lock
cmp
scas
mov
cmp
inc
cmp
jp
mov
xor
push
ss
(bad)
imul
imul
xchg
and
or
mov
mov
aad
iret
sbb
mov
or
xchg
or
enter
mov
arpl
out
out
in
lock
add
xchg
mov
mov
or
ret
xchg
or
mov
jmp
retf
xor
push
jae
xor
sub
ret
sub
lods
push
pop
pusha
cmps
inc
mov
push
jb
mov
push
test
mov
mov
inc
clc
in
sub
lock
sbb
and
push
aad
sar
sar
shr
or
aas
call
fcomp
ds
add
loope
into
lds
aas
les
pop
test
idiv
test
dec
adc
(bad)
cld
sub
lea
ret
dec
xchg
push
dec
fbstp
mov
data16
sar
inc
xchg
cdq
movs
popa
inc
mov
or
in
cmc
inc
sbb
das
in
ss
loopne
sub
jge
js
sbb
jecxz
mov
mov
adc
addr16
cmp
sbb
add
sub
dec
xchg
(bad)
enter
js
out
lock
push
pushf
mov
inc
popf
mov
scas
mov
fmul
xor
shl
inc
gs
jmp
mov
lds
sub
inc
xchg
int
push
sub
std
xor
dec
xchg
les
sbb
lock
inc
imul
sub
xchg
mov
fild
inc
out
out
inc
(bad)
fstp
jbe
in
and
mov
jae
pop
dec
and
jo
cmp
xchg
int3
push
sahf
push
das
shl
test
xchg
xor
daa
jbe
inc
jmpw
adc
xchg
fmul
outs
sbb
add
ds
inc
or
dec
sbb
and
adc
out
test
jns
out
xchg
ins
sub
dec
mov
std
cmp
jmp
cmps
push
pop
aad
outs
addr16
cmp
push
adc
fimul
cs
mov
enter
push
push
imul
sbb
xchg
mov
mov
fsub
jae
rcr
ins
sbb
cwde
out
pop
mov
aaa
lods
repz
jb
jecxz
inc
sbb
and
leave
fisttp
sbb
lods
in
xor
lods
test
arpl
and
(bad)
xor
pop
(bad)
aas
les
je
sub
outs
push
sub
outs
adc
movs
lods
and
lea
and
lea
inc
dec
fbstp
inc
pop
fbstp
sbb
xchg
pop
push
outs
cmp
or
mov
sbb
lods
int3
pop
cli
test
enter
mov
outs
pop
xchg
jbe
cmps
mov
adc
add
pop
sti
sub
xor
popf
test
popa
push
(bad)
xor
pop
fistp
les
pop
test
pop
mov
outs
push
sub
dec
adc
movs
in
and
lea
xor
lea
pusha
push
fbstp
sbb
pop
or
cmp
or
mov
sbb
lods
in
xor
popf
fldz
xchg
movs
outs
popf
jle
(bad)
(bad)
jmp
mov
mov
push
call
pop
jp
loop
test
sbb
retf
iret
aas
cmp
mov
or
jbe
movs
mov
add
(bad)
xor
shl
mov
cwde
(bad)
inc
add
mov
push
shl
push
clc
in
pop
lock
nop
imul
adc
lods
fadd
sub
sbb
movs
cmp
pop
jne
repz
adc
test
jo
js
sub
jo
dec
in
in
fwait
neg
cwde
pop
lock
arpl
pop
adc
js
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
sbb
sar
mov
shl
mov
jne
inc
push
cmc
inc
pop
fcomp
mov
dec
fdivr
mov
sar
mov
dec
nop
frstor
push
fdiv
mov
push
fdivr
mov
sar
mov
inc
rcr
imul
dec
push
fcomp
xor
std
mov
dec
sub
int
daa
mov
cs
retf
sti
in
call
jl
xchg
mov
jbe
or
xor
es
sub
int3
pop
or
std
nop
mov
in
mov
sar
xor
inc
inc
loop
xor
jmp
iret
xor
mov
(bad)
imul
push
lods
addr16
fist
mov
or
pop
mov
into
push
xchg
xor
inc
dec
call
pop
mov
(bad)
imul
movs
arpl
and
push
jg
cmp
dec
pop
dec
iret
pop
das
cmp
dec
push
mov
aaa
loop
cli
or
pop
jge
leave
inc
aas
and
loop
stc
mov
mov
cs
stc
cdq
fist
add
jmp
pop
mov
mov
int
nop
xchg
push
iret
sub
sbb
std
iret
inc
repnz
(bad)
faddp
cwde
leave
mov
dec
shl
mov
and
ins
movs
push
fnsave
pop
nop
in
dec
jno
pop
fmul
xor
clc
push
push
shl
imul
add
(bad)
mov
add
pop
retfw
push
jge
and
sub
je
out
sbb
cmp
and
fidivr
bound
arpl
fild
push
push
(bad)
cmps
test
cwde
in
xor
in
popf
push
es
aas
adc
int
sub
adc
push
aad
jmp
mov
dec
out
pushf
mov
xor
mov
inc
push
dec
dec
out
push
mov
popa
mov
out
xchg
daa
aaa
sbb
dec
lds
cmp
pop
or
jnp
pop
ret
dec
outs
inc
push
out
jbe
ret
sub
adc
outs
popf
call
mov
and
dec
cwde
fiadd
out
int3
mov
xchg
mov
sbb
jle
jp
js
ins
bound
jmp
fwait
shl
call
(bad)
das
mov
xchg
xor
fisub
daa
fnstenv
add
pop
fdivr
jp
jns
fcomip
gs
out
inc
out
pop
lods
and
aas
gs
popf
sub
xor
mov
addr16
mov
sar
mov
dec
jns
adc
or
mov
adc
and
sbb
adc
mov
arpl
cld
mov
adc
fadd
(bad)
mov
in
out
mov
inc
call
dec
aas
mov
jb
sbb
mul
inc
repnz
mov
sar
mov
adc
mov
jge
add
ror
lock
ret
loopne
(bad)
nop
xchg
lahf
mov
mov
inc
xchg
stc
mov
sbb
sub
and
repz
xchg
cmps
jns
push
xor
xchg
sti
mov
xchg
jge
inc
stos
inc
inc
inc
sub
mov
cmc
rol
call
fnsave
xchg
ret
aaa
jno
(bad)
data16
(bad)
mov
add
sbb
fcmovu
cmc
mov
repz
mov
inc
cmp
in
addr16
push
dec
sub
inc
nop
imul
push
xor
stc
mov
push
cmp
mov
lock
mov
shl
add
fcomip
sar
shl
inc
sar
inc
push
push
push
nop
jne
add
std
mov
call
jl
inc
enter
clc
frstor
dec
sar
nop
inc
lock
pop
rol
dec
sar
inc
dec
or
js
sbb
cmc
es
mov
fcomi
mov
clc
in
fwait
dec
cwde
sub
fwait
sbb
mov
inc
ja
daa
outs
push
out
lods
shr
or
pushf
dec
mov
es
loop
xor
shl
xor
shl
sbb
rcr
mov
jle
pop
lods
and
out
jmp
xor
pop
and
sahf
aaa
push
adc
je
je
lods
lods
hlt
pop
xor
xchg
and
cmp
sti
pop
imul
adc
out
hlt
(bad)
fdiv
lock
add
mov
cmp
(bad)
jns
or
cmp
and
mov
xchg
ficomp
daa
dec
jg
mov
cmp
xor
test
retf
sbb
mov
das
mov
cmp
in
jae
movs
popaw
sub
mov
cmp
dec
mov
mov
scas
enter
sahf
mov
daa
mov
retf
sbb
stos
xchg
test
xor
dec
daa
mov
ins
test
inc
sbb
jl
pop
cmp
arpl
sub
pop
stos
rcl
rcl
add
adc
dec
out
mov
jecxz
repz
aad
mov
push
into
lahf
xchg
add
stos
clc
lods
pop
pop
sti
ficom
enter
lahf
imul
sbb
stos
out
mov
pop
push
ror
push
lahf
fnstcw
xor
fadd
out
adc
push
push
xlat
into
into
sti
test
jno
mov
enter
jp
ins
fadd
daa
test
push
in
mov
test
sahf
jl
fsub
dec
nop
jl
(bad)
out
shl
cmps
inc
ja
dec
mov
jl
and
push
xchg
inc
add
loope
scas
xchg
jo
icebp
call
sbb
jne
pop
int
jg
pop
push
adc
inc
mov
loope
rcr
into
cmp
cld
(bad)
sbb
xchg
jae
je
or
xchg
mov
out
add
retf
hlt
imul
out
js
jns
int
mov
mov
pop
into
dec
mov
shl
sub
cmp
dec
xor
(bad)
(bad)
ins
(bad)
test
cmp
ret
sbb
mov
shl
jl
mov
adc
sub
jg
aam
sub
jmp
cli
adc
dec
mov
xor
mov
add
pop
dec
inc
call
push
push
jp
pop
dec
rcr
psllq
pusha
mov
pcmpeqb
mov
add
inc
loopne
add
in
and
jge
dec
mov
lahf
xchg
sub
mov
fcom
test
xchg
fs
lahf
sbb
add
adc
cmp
sbb
or
fadd
sti
sti
push
mov
sar
add
std
mov
inc
lock
inc
loopne
or
shl
dec
fldlg2
cmp
outs
es
pop
imul
dec
ins
cs
mov
push
pop
mov
inc
add
xchg
cmc
test
dec
enter
and
repnz
xchg
inc
sbb
fsub
mov
fbld
mov
pop
cs
into
popa
dec
fisttp
xor
cmp
cdq
and
pop
test
and
jmp
xchg
cmp
lock
jmp
cmp
in
jge
es
cld
xchg
inc
nop
sub
fadd
xor
sbb
test
pop
repnz
xchg
inc
sbb
fsub
mov
fbld
mov
pop
cs
into
popa
dec
fisttp
and
cmp
xchg
and
pop
test
and
jmp
xchg
cmp
lock
jmp
cmp
loopne
mov
mov
sub
cmp
xor
adc
sub
nop
movs
popf
loop
add
add
pop
test
cli
add
shl
xchg
or
ss
out
cmp
ins
fnstsw
jecxz
nop
pop
and
xor
ins
or
dec
inc
call
xor
push
inc
mov
cmp
inc
cwde
mov
dec
in
jmp
add
test
xor
cmps
in
push
adc
int3
jle
cwde
cmps
js
or
xchg
dec
and
imul
int3
push
dec
or
cmp
ret
or
jae
popa
pop
leave
cmps
call
sbb
scas
test
mov
(bad)
xchg
lods
cld
out
mov
mov
cmps
js
mov
push
xor
adc
(bad)
pushf
sbb
cmp
xchg
and
and
lea
aad
add
imul
push
jecxz
or
dec
lods
and
jmp
or
cli
push
dec
retf
jnp
dec
xor
seto
mov
sub
in
cmps
cli
fisttp
aam
mov
std
jmp
int3
retf
push
retf
pop
dec
mov
mov
lods
mov
cmp
iret
xor
scas
jmp
aad
pop
jg
pop
push
(bad)
xor
jl
inc
pushf
mov
inc
add
lods
push
mov
mov
(bad)
mov
xchg
dec
aas
mov
add
xor
or
scas
xchg
pop
icebp
jno
daa
pusha
pop
mov
enter
and
mov
sahf
cmp
adc
xor
mov
sub
inc
xlat
xor
loop
dec
mul
sub
xor
cmp
pop
or
jmp
xchg
pusha
retf
popf
adc
sbb
in
xor
sub
adc
add
adc
cli
pop
hlt
push
mov
jb
clc
pop
(bad)
and
outs
retf
enter
add
push
pop
mov
aas
push
inc
mov
out
es
pop
dec
sbb
push
adc
xchg
cmp
xchg
idiv
arpl
pop
inc
xor
jge
in
inc
or
sbb
div
sbb
sub
mov
add
add
hlt
out
and
jne
icebp
cli
adc
push
loope
test
enter
imul
jno
in
(bad)
mov
push
or
(bad)
cmc
jb
lea
xor
call
scas
hlt
and
sub
mov
into
cmp
inc
mov
push
loope
push
je
cli
lods
ret
jmp
inc
sbb
xchg
sti
popa
fst
js
enter
movs
dec
aas
mov
hlt
pop
loopne
sbb
jbe
or
mov
clc
inc
(bad)
xor
sahf
gs
jmp
in
sbb
fidivr
cmps
push
aam
or
sbb
jo
mov
rcr
aad
sahf
in
test
xor
shr
(bad)
xchg
adc
(bad)
leave
sbb
dec
mov
ror
ret
mov
push
push
xchg
mov
hlt
mov
push
xor
push
xor
adc
push
mov
xchg
in
sahf
es
arpl
mov
fst
leave
cmp
xchg
pop
(bad)
out
jne
stc
mov
cmc
bound
pop
loop
scas
jnp
jg
dec
mov
(bad)
in
inc
enter
clc
std
mov
fdivr
mov
dec
shl
pop
aam
ficomp
mov
push
push
jbe
inc
pop
out
fst
dec
inc
fstp
inc
push
mov
jnp
pop
mov
retf
push
xchg
rcl
jle
push
or
push
sahf
rol
mov
mov
xchg
mov
(bad)
sbb
sub
nop
loope
scas
cli
mov
inc
xor
pop
pop
adc
xchg
test
jbe
jmp
ss
dec
xchg
rol
mov
mov
xchg
mov
or
pusha
push
test
jb
push
imul
jge
cmp
cmp
cli
cmp
in
fwait
repnz
inc
sub
dec
retf
cmp
jge
loope
push
cwde
ret
scas
and
call
sub
xchg
add
stos
xchg
adc
jg
ds
push
loop
mov
jo
jmp
div
test
sub
jne
or
icebp
sar
js
cmp
je
sub
out
jp
aam
inc
enter
dec
jg
ret
inc
outs
push
sbb
inc
lea
outs
ss
movs
cli
rol
mov
cmc
scas
push
pushf
push
imul
push
inc
push
icebp
ss
movs
inc
inc
mov
cdq
xchg
and
adc
adc
imul
inc
sbb
pusha
adc
cs
push
fiadd
push
push
cmp
fdivrp
out
test
and
ror
jb
sbb
lea
shr
push
hlt
push
push
mov
inc
mov
pop
xor
je
(bad)
fwait
test
mov
xor
add
jno
and
mov
jo
mov
pop
adc
sbb
push
outs
popf
cmc
xchg
add
js
and
sti
pop
xor
xor
jns
aam
in
inc
shl
mov
dec
pop
fnstcw
pop
jmp
ins
rdmsr
xor
add
jno
sub
clc
ins
jle
mov
and
fild
jle
xchg
mov
outs
adc
iret
pop
lock
cmp
arpl
sub
cmp
lods
lock
mov
inc
push
pusha
aas
cmp
(bad)
sbb
sub
mov
xchg
push
sbb
pop
mov
in
and
jmp
mov
daa
in
mov
popf
sbb
test
int3
xlat
fs
mov
mov
je
test
loope
mov
jmp
dec
pop
test
pop
add
test
jecxz
push
xor
lds
fdivr
sar
mov
sub
mov
outs
fisubr
xchg
fcmovnb
in
mov
jge
ins
adc
or
(bad)
clc
mov
daa
cli
loope
cmp
push
jmp
ja
push
call
popf
sbb
cmc
(bad)
pop
ins
mov
push
adc
push
fbld
mov
scas
das
or
outs
mov
fucomip
mov
push
pop
inc
shl
retf
mov
mov
dec
jl
adc
cmp
in
inc
call
in
mov
inc
shl
dec
push
ins
cdq
inc
js
xor
push
out
sub
ja
loopne
jo
dec
fsub
cmp
shl
push
fnsave
push
shl
xor
pop
addr16
out
ins
and
mov
fcomip
mov
sub
fdiv
pop
iret
pop
cmps
(bad)
enter
dec
push
xchg
pop
and
adc
nop
lds
imul
mov
adc
pop
(bad)
fsub
mov
adc
(bad)
aas
mov
push
mov
push
cwde
mul
mov
cmps
repnz
ja
icebp
arpl
lds
scas
push
addr16
out
xchg
dec
scas
push
mov
xchg
add
or
movs
dec
sub
xchg
cmp
mov
(bad)
into
fidiv
popf
ficom
sbb
pop
gs
jns
repz
cmp
dec
xlat
jp
dec
call
mov
(bad)
in
ret
outs
sti
xor
das
and
adc
pop
(bad)
fsub
mov
adc
(bad)
aas
mov
sbb
int3
icebp
pop
enter
mov
scas
jmp
outs
movs
pop
adc
add
lahf
jnp
sub
pop
mov
sub
dec
inc
sbb
or
push
aad
in
sub
mov
lea
inc
sub
popa
mov
xchg
rol
add
sbb
test
lds
clc
mov
xor
xchg
fst
leave
dec
in
inc
loopne
mov
lahf
in
or
fs
fisub
add
or
sub
ret
or
or
aam
outs
add
ret
sub
js
js
sub
cli
shl
clc
push
fcmovne
std
(bad)
ficom
out
mov
sub
in
pop
cmc
sbb
psubb
stos
mov
lea
mul
add
push
dec
je
out
inc
scas
adc
or
xor
rol
stos
jmp
popf
adc
and
cmp
frstor
leave
es
push
imul
or
sub
mov
pop
aad
data16
mov
in
mov
sub
inc
xchg
stos
xchg
push
movs
mov
stc
cs
cwde
lds
push
adc
mov
in
mov
sub
inc
xchg
stos
lock
inc
xor
int3
ins
dec
mov
add
inc
cmp
pop
adc
or
mov
iret
dec
lea
bound
sahf
jbe
cdq
outs
jns
call
ins
aas
xor
sbb
imul
xlat
bound
scas
cs
inc
pop
es
movs
mov
scas
jb
lods
cmp
repnz
xor
test
lahf
mov
daa
inc
(bad)
pop
mov
test
test
jecxz
sbb
rcr
xor
mov
adc
sbb
leave
jle
mov
sbb
je
xchg
inc
jmp
call
jg
pop
iret
lods
cmps
test
add
out
sub
cmp
mov
(bad)
pop
ins
adc
adc
push
xchg
mov
xchg
call
mov
push
xchg
repz
retf
cs
and
jno
and
fisttp
cmp
mov
pop
jo
pop
cmc
ud0
cmp
scas
pop
mov
or
jbe
pusha
dec
jmp
les
gs
or
in
pop
out
inc
pop
shr
imul
sbb
xchg
out
or
sahf
sbb
leave
lods
out
jle
jno
lock
out
jecxz
xchg
pushf
mov
pop
iret
jl
dec
or
imul
cmp
or
jne
sahf
mov
out
out
sub
call
les
mov
mov
inc
and
xor
mov
dec
neg
emms
inc
or
mov
and
mov
pushf
sbb
sbb
gs
pop
xchg
and
lds
mov
cs
mov
loopne
outs
pop
cdq
xor
cwde
jae
jg
mov
loop
daa
std
enter
push
inc
jle
sbb
adc
je
xor
cmp
dec
repnz
mov
sub
mov
sbb
pop
mov
dec
outs
js
push
jl
enter
xor
out
outs
or
enter
xchg
out
jns
dec
xchg
into
sbb
pop
mov
iret
sub
sub
sbb
data16
lock
mov
add
mov
mov
jge
xchg
push
movs
test
mov
in
test
push
repz
add
mov
fadd
pop
cwde
sub
mov
dec
jbe
hlt
dec
retf
add
repnz
in
(bad)
loope
mov
out
daa
(bad)
fsubr
addr16
xor
bound
retf
jo
xchg
lahf
movs
mov
movs
sbb
in
inc
dec
mov
pop
mov
cmp
xor
sub
(bad)
leave
and
or
adc
mov
(bad)
fisubr
aam
jns
mov
jle
dec
cmp
lods
test
xor
shr
jg
call
jns
aas
int
xchg
mov
add
or
mov
inc
jb
in
imul
xchg
xchg
jo
mov
sbb
mov
out
jbe
std
xor
paddw
add
jecxz
mov
push
jge
push
je
hlt
popa
or
int3
mov
out
fcmovnbe
mul
xchg
data16
sti
jecxz
(bad)
push
nop
and
xchg
mov
cli
mov
mov
or
sub
and
or
fsubr
(bad)
jle
ficomp
pop
mov
fldenv
in
rcl
mov
pop
pop
out
pop
sbb
jb
pusha
test
adc
add
out
test
movs
imul
inc
(bad)
xchg
push
sub
cmp
arpl
xor
mov
push
int3
stc
mov
jbe
fcom
and
dec
pusha
ja
dec
fwait
and
add
add
shl
inc
xor
loope
ret
mov
cli
imul
jl
loop
fwait
aam
adc
arpl
icebp
adc
lock
(bad)
out
mov
dec
(bad)
xchg
les
mov
jg
and
add
jge
cs
xor
fld
xchg
inc
xchg
inc
(bad)
aam
imul
aad
mov
sbb
fwait
mov
aad
js
sub
cmp
ss
pop
ja
mov
addr16
lds
in
add
dec
dec
call
sbb
lds
adc
dec
dec
mov
gs
lock
fimul
rcr
xchg
pop
retf
add
cli
cmp
xor
in
fdiv
call
pusha
cdq
out
xor
jmp
adc
bound
inc
ror
jecxz
fidiv
sbb
in
dec
enter
sar
mov
inc
shl
fdiv
int3
fidivr
push
repz
fdivr
inc
fiadd
push
inc
rol
fmul
mov
(bad)
(bad)
push
stos
xchg
punpckhdq
sbb
test
and
jae
mov
push
popa
xchg
lea
dec
aas
neg
or
cmp
sbb
push
pusha
and
sahf
jmp
push
mov
pop
fs
inc
cmp
test
pop
mov
xchg
scas
call
cli
jmp
inc
scas
add
sub
lds
and
add
jl
jl
jle
or
cs
or
pop
jmp
pop
lgs
sbb
(bad)
cs
loopne
jge
imul
in
push
pop
cmps
jmp
sbb
iret
add
sub
or
jo
or
test
loop
mov
mov
xchg
cdq
shl
mov
mov
xor
mov
dec
(bad)
retf
stos
and
and
das
xor
loopne
cmp
dec
pusha
xchg
pop
xchg
imul
mov
dec
stos
cmp
or
or
ror
pop
xchg
dec
test
arpl
jae
cmp
mov
pop
fbstp
xchg
mov
and
je
push
mov
out
inc
or
mov
hlt
sub
fdivp
jg
pop
mov
and
dec
cmp
cmp
fld
lods
addr16
cmps
sub
pop
(bad)
cli
add
pop
stos
aad
ret
movs
ror
pop
inc
dec
ret
add
mov
scas
push
ror
neg
add
daa
sub
(bad)
mov
call
adc
cmp
retf
fild
ficom
test
(bad)
dec
aad
in
mov
sub
pop
xor
ja
aaa
adc
jge
mov
movs
arpl
sar
sub
add
dec
xchg
stc
iret
and
fs
fdivr
jo
add
jmp
fwait
sbb
js
cmps
cmp
mov
ja
ror
jbe
je
xchg
icebp
add
in
mov
push
lods
repnz
mov
in
clc
shr
inc
push
test
sbb
xchg
imul
movs
jnp
jg
ins
jle
dec
sbb
sbb
cld
cli
mov
in
sub
and
aas
or
pop
popf
mov
fwait
and
movzx
ins
mov
sub
in
movs
xor
add
fcomp
jmp
mov
mov
or
add
inc
ror
mov
and
sbb
jo
inc
je
push
push
int
and
jp
repz
sbb
sub
ret
lahf
cli
xchg
sahf
imul
dec
enter
dec
nop
fwait
nop
test
jnp
cmc
inc
push
push
sbb
call
rol
ss
sti
call
and
mov
mov
fist
pushf
jp
out
imul
in
(bad)
jns
bound
push
jo
into
lods
movs
(bad)
push
pop
fs
fwait
jl
mov
sbb
jae
mov
mov
sbb
sti
fsub
cmp
repnz
and
shl
dec
sub
popf
fcom
enter
dec
push
push
mov
sbb
mov
jae
out
pop
hlt
scas
mov
inc
das
and
and
xor
dec
dec
vminpd
and
test
sbb
jo
adc
out
jmp
loope
inc
inc
pop
arpl
dec
push
and
push
(bad)
scas
push
(bad)
stc
and
jl
sbb
jns
mov
std
std
lahf
xlat
xchg
stos
mov
fwait
ins
pop
cli
sub
mov
pop
adc
xor
dec
mov
(bad)
(bad)
scas
jmp
leave
pop
cmps
inc
test
cmps
mov
(bad)
pop
sahf
mov
imul
jmp
mov
jb
jl
mov
mov
ss
pop
pop
rcr
out
inc
add
pop
ficom
ins
out
jl
addr16
retf
fnstenv
jne
adc
loope
push
jbe
stc
cmps
sti
fstp
imul
xchg
jp
repz
dec
inc
push
push
aaa
push
inc
lods
sbb
add
pop
pop
jmp
and
or
xchg
add
test
sub
movs
push
scas
mov
xchg
xor
pop
aad
fisttp
sbb
pop
add
mov
xlat
shr
and
sub
mov
popf
loop
std
fcom
fwait
int3
mov
mov
xlat
in
sti
icebp
add
rcr
mov
sar
mov
les
pop
repz
add
mov
cs
dec
repz
pop
into
mov
mov
mov
xchg
out
bound
adc
or
or
mov
xchg
inc
scas
inc
mov
mov
sbb
(bad)
cmp
dec
outs
popf
rcl
push
and
imul
test
sahf
mov
arpl
mov
or
jl
out
push
out
add
inc
test
mov
cmp
add
sahf
fld
or
jge
pop
add
(bad)
jno
inc
rol
push
dec
sub
inc
popf
fcomp
mov
mov
xchg
dec
mov
into
aad
dec
pop
add
ds
add
mov
push
inc
jl
lahf
icebp
inc
fcomp
repz
adc
cmp
push
add
jle
lods
or
add
fwait
lahf
add
rol
ds
add
mov
xchg
inc
mov
xchg
fsubr
test
call
std
mov
inc
shl
cmp
push
jg
dec
fidiv
int3
pop
hlt
xor
cli
cmp
(bad)
dec
dec
fidivr
inc
pop
sbb
or
loopne
fs
mov
and
sahf
dec
fistp
lahf
mov
and
push
js
mov
mov
jl
in
push
ficom
out
push
mov
add
jecxz
inc
sbb
push
xchg
loopne
rcl
(bad)
jge
pusha
retf
xor
add
jae
cmps
pop
imul
jbe
clc
jnp
in
push
test
out
push
adc
addr16
adc
pushf
or
call
rcl
or
push
popa
sub
cmc
mov
pop
cmp
push
es
sbb
inc
(bad)
outs
and
adc
add
adc
pop
stos
adc
(bad)
clc
dec
mov
ss
call
sub
lods
pop
jae
inc
xor
and
sub
mov
movs
sub
add
add
mov
pop
pop
imul
adc
xchg
ds
iret
jmp
ins
in
out
mov
fcom
and
cmps
sub
adc
loope
or
mov
ins
enter
jecxz
sub
les
jmp
add
xor
sbb
ins
daa
repnz
bound
dec
jle
loop
into
cli
mov
mov
jns
adc
mov
add
adc
pushf
out
and
mov
dec
push
(bad)
movs
scas
cwde
stos
rcl
jae
in
mov
mov
add
js
sub
out
dec
ror
jne
pop
aad
(bad)
out
pop
or
pop
xchg
push
push
push
sahf
mov
pop
jle
push
(bad)
cs
(bad)
jae
push
dec
sbb
out
dec
push
cmp
js
data16
daa
arpl
outs
fwait
bound
cli
add
mov
cmp
stos
lds
adc
hlt
ins
xchg
mov
test
pop
in
popf
enter
cdq
loopne
push
arpl
pop
xor
daa
pop
inc
fnstcw
jmp
and
lahf
add
pop
sar
sbb
ret
or
dec
loope
test
dec
cmp
fisub
jns
lods
pop
mov
inc
and
sbb
pop
out
push
(bad)
(bad)
cmps
and
(bad)
leave
hlt
and
(bad)
das
ss
jbe
in
mov
add
inc
push
push
bound
dec
ja
xchg
push
or
xchg
pop
aam
pop
ja
dec
jp
int
adc
and
pop
scas
xchg
(bad)
push
imul
cli
mov
push
xchg
pop
pop
mov
ret
addr16
xor
jnp
leave
jae
test
call
add
mov
in
cmp
jmp
xchg
sbb
pop
imul
cwde
fsubrp
dec
(bad)
(bad)
fnstenv
mov
and
out
mov
es
adc
xor
adc
in
repnz
push
mov
add
xor
xchg
lock
rcl
xchg
add
je
cmp
xchg
push
inc
sub
out
mov
inc
pop
ds
outs
dec
shr
cli
mov
mov
push
enter
mov
cmp
loop
dec
jo
cli
dec
add
movs
cmp
in
test
clc
in
mov
dec
fdivr
mov
dec
shl
cmp
fnstenv
into
pop
je
dec
(bad)
jl
dec
push
push
inc
add
clc
mov
push
jge
mov
sbb
inc
add
es
inc
adc
mov
xor
movs
lods
push
jg
xor
inc
int
pop
and
dec
hlt
pop
retf
xor
sbb
mov
xchg
leave
cmp
push
inc
add
es
inc
adc
xchg
pop
je
les
pop
je
addr16
out
jmp
add
jb
jbe
jnp
xor
pop
push
stos
nop
mov
rol
in
or
in
xchg
dec
(bad)
stos
dec
and
sbb
ret
push
mov
lods
sbb
hlt
repnz
xchg
hlt
mov
(bad)
imul
mov
sub
aas
mov
fsub
dec
nop
movs
(bad)
fmul
enter
addr16
cmc
cmc
cmp
jl
mov
(bad)
repnz
hlt
push
sub
adc
fs
mov
cdq
mov
lock
(bad)
cmp
inc
add
pusha
push
add
pop
retf
clc
cmc
fpatan
sub
adc
nop
add
ss
mov
xor
mov
or
int
int
ins
popf
out
ficom
ja
dec
push
mov
rcr
arpl
jbe
cld
sbb
xchg
rol
inc
xor
leave
and
sub
clc
inc
push
inc
fs
out
pop
stc
lea
mov
stc
mov
movs
push
jnp
jbe
push
jmp
stos
and
call
ja
or
pop
dec
jb
mov
les
xor
fadd
out
ins
mov
fldln2
xor
rol
fbld
(bad)
mov
cmp
and
ffreep
and
add
lahf
imul
dec
dec
out
les
loope
pop
loope
pop
pop
sar
add
(bad)
movs
mov
scas
mov
sbb
inc
xor
dec
ins
popa
lock
xor
jb
hlt
adc
jbe
(bad)
popa
mov
and
cwde
ins
out
repnz
rcr
retf
stc
cmp
mov
lahf
inc
pusha
call
inc
sub
icebp
iret
or
das
adc
xchg
xchg
jb
es
adc
jmp
push
jp
xor
xchg
mov
ror
jns
or
(bad)
popw
(bad)
ret
xor
push
push
mov
sub
and
sub
jne
loopne
scas
xchg
popa
jecxz
push
into
mov
jnp
inc
sub
mov
dec
sbb
xor
sbb
jbe
mov
jle
jle
fnsave
cmp
ss
sbb
xchg
sti
shl
cmp
mov
jecxz
scas
sub
sti
jbe
ret
xor
or
jecxz
fisubr
mov
outs
push
outs
inc
shr
out
(bad)
shl
add
xchg
push
jge
sbb
mov
xchg
scas
inc
sub
(bad)
sub
(bad)
addr16
mov
mov
adc
add
mov
and
add
cmps
xchg
(bad)
(bad)
xchg
mov
outs
cld
movs
ror
scas
jg
xor
adc
add
mov
fsubr
mov
pop
cmc
mov
shr
test
sar
mov
dec
shl
mov
retf
xor
mov
fild
push
inc
rol
sar
push
push
or
sub
or
popa
xor
outs
ja
mov
inc
mov
call
push
pusha
mov
sub
xchg
fist
xchg
inc
push
xor
out
hlt
into
mov
push
adc
mov
push
scas
aad
sahf
out
cmp
pushf
outs
lea
jo
sub
retf
pop
cmp
jecxz
pop
fidiv
sbb
and
and
cmps
adc
pop
lock
dec
cmp
pushf
xor
sub
out
push
sahf
or
and
mov
cmp
js
jl
pop
aam
fnsave
test
clc
fild
aam
call
mul
loopne
lods
es
xor
jmp
jmp
mov
xchg
cmp
cwde
nop
sbb
push
sub
bound
popf
cmp
fmul
adc
(bad)
xlat
adc
aas
mov
jb
scas
add
mov
cmp
inc
mov
jmp
and
and
push
fistp
inc
or
int
pop
arpl
scas
mov
adc
mov
call
cs
mov
pop
stc
div
(bad)
sti
mov
out
inc
das
pusha
xchg
and
pop
mov
sub
lods
sbb
lods
jmp
je
aam
lock
mov
test
cli
cmps
icebp
test
mov
ror
inc
out
arpl
jbe
ins
jbe
test
mov
mov
xchg
cdq
mov
pusha
loopne
jns
jle
sbb
or
stos
imul
push
mov
lods
cdq
mov
jl
bound
fimul
add
push
aas
xlat
aad
mov
bound
ins
add
pop
jl
pop
dec
or
pop
xchg
inc
inc
add
mov
cmp
cmp
ds
mov
jnp
cwde
pop
fsubr
xchg
mov
movs
aad
or
jp
or
xchg
mov
shl
cli
lds
out
or
div
hlt
ret
sub
shl
icebp
adc
or
sub
test
je
mov
xor
les
clc
add
arpl
jmp
jb
push
cdq
nop
mov
add
(bad)
retf
push
shl
add
jns
inc
xor
inc
popf
nop
sti
lods
loop
popa
(bad)
cmp
or
mov
cmp
out
and
mov
pop
mov
jmp
xchg
push
ret
xor
add
jge
dec
repz
or
push
movs
popf
fadd
mov
jp
gs
or
mov
cmp
out
shr
push
and
jo
dec
mov
push
dec
fcomp
fstp
stos
gs
and
pop
js
movs
push
repz
sbb
pop
lock
cwde
aas
mov
pop
and
sahf
add
movs
sbb
fld
and
mov
cdq
sbb
cmps
movs
xor
mov
ret
aad
xchg
push
in
xchg
inc
mov
mov
jp
test
add
clc
out
jno
jg
mov
dec
(bad)
cwde
(bad)
popa
dec
shr
icebp
sub
pcmpeqb
jp
retf
xchg
retf
inc
ss
mov
sub
mov
sbb
cmc
gs
cmp
mov
cmp
jb
push
aad
(bad)
nop
mov
and
rcl
xchg
push
imul
push
loope
(bad)
iret
fs
cmp
retf
or
push
repz
nop
or
or
or
sub
push
test
jl
in
pop
xchg
mov
ds
cdq
shl
push
dec
adc
pop
or
jb
or
jo
call
cld
sub
mov
and
jecxz
shl
sbb
cmp
sti
pop
mov
movs
pusha
xchg
lea
jle
pop
nop
fisubr
movs
sub
sub
jo
dec
push
dec
imul
aad
lock
mov
jne
lock
ins
repnz
nop
mov
mov
(bad)
(bad)
inc
shl
pop
sbb
sbb
add
cmp
push
loopne
movs
sti
add
sbb
test
(bad)
inc
loopne
fld
push
fmul
cmp
loop
mov
rcr
adc
xchg
call
cmp
sub
mov
mov
cmps
enter
pop
pop
mov
jb
push
je
pop
pushf
pop
jno
jle
and
mov
inc
scas
out
dec
pop
inc
shr
add
ja
push
js
jge
inc
add
mov
call
ror
pop
retf
jmp
xchg
arpl
(bad)
push
cmps
and
xchg
clc
outs
dec
add
sar
es
xor
add
retf
ins
inc
mov
repz
pop
push
fs
imul
jbe
addr16
loope
dec
out
rol
mov
out
add
xchg
cmc
adc
jo
jno
aas
cli
fcomp
inc
sub
repz
aaa
sbb
pop
loop
cmp
enter
test
(bad)
pop
es
shr
pop
mov
push
cld
push
sbb
and
(bad)
arpl
sbb
mov
jecxz
ret
mov
int
jmp
or
mov
jg
pop
hlt
mov
scas
cdq
jp
scas
(bad)
cmp
rol
in
jns
add
pushf
mov
xchg
cli
adc
int
mov
aam
pop
sub
cdq
jle
inc
mov
mov
xchg
cmp
pop
jnp
ror
out
lods
rol
push
dec
adc
call
outs
(bad)
mov
xchg
cmp
xlat
int3
das
push
fwait
pop
mov
pushf
(bad)
fnstcw
dec
jl
ficomp
aam
xor
jno
add
dec
mov
int
stos
mov
stos
dec
pop
movs
leave
mov
mov
push
lock
arpl
dec
or
into
das
mov
ret
ds
adc
pop
cmp
add
mov
jl
push
pushf
test
test
pushf
mov
pop
scas
jb
iret
adc
jge
inc
cmp
movs
pop
pushf
and
sbb
and
inc
mov
mov
clc
rcl
mov
sar
inc
add
in
fwait
(bad)
in
test
shl
push
rcr
pop
clc
aad
pop
lock
imul
loopne
adc
shl
jge
ret
jo
sbb
mov
add
pusha
pop
jo
jo
sbb
add
mov
dec
clc
aad
imul
adc
xchg
adc
js
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
push
jecxz
jmp
and
mov
retf
shl
clc
sti
push
mov
fdiv
mov
fdivr
mov
sar
mov
inc
lock
cwde
dec
xor
mov
inc
fdivr
mov
fdivr
mov
sar
mov
arpl
in
lock
or
sar
enter
fdivr
in
fstp
aam
mov
mov
lock
nop
fld
mov
stos
and
cmp
inc
adc
mov
adc
repnz
mov
push
mov
pop
sub
outs
push
sub
adc
call
xchg
pop
pop
out
movs
pop
mov
xchg
xchg
arpl
pop
(bad)
lods
push
(bad)
fdivr
sbb
fcom
push
(bad)
mov
inc
adc
mov
dec
int
pop
mov
mov
xor
fwait
arpl
movs
stos
(bad)
stos
ins
out
xor
adc
test
mov
loopne
mov
stc
mov
dec
and
mov
and
std
sub
mov
pop
mov
sbb
out
test
add
and
test
sbb
mov
stc
mov
(bad)
std
mov
inc
loopne
sub
(bad)
mov
jbe
sbb
and
and
mov
inc
xor
daa
mov
ds
adc
iret
dec
sti
sbb
es
mov
rcr
iret
test
mov
hlt
je
inc
inc
sub
mov
add
stos
jb
mov
jae
ja
sbb
das
cli
aas
xchg
call
stos
jb
cmp
xchg
dec
popf
mov
std
shl
cmp
inc
sbb
lock
inc
je
test
inc
fsub
push
shl
push
ins
jmp
xchg
dec
cwde
(bad)
push
test
pop
lods
cmp
mov
mov
dec
imul
into
mov
mov
xchg
fdiv
ret
and
adc
outs
mov
jmp
mov
add
movs
dec
xor
(bad)
movs
adc
mov
jl
(bad)
(bad)
mov
jge
adc
jle
xor
pop
mov
out
clc
aaa
(bad)
sar
scas
sub
daa
sub
or
xchg
mov
mov
outs
(bad)
mov
aam
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
inc
inc
ret
(bad)
mov
aam
mov
sar
mov
dec
call
push
sub
and
std
mov
(bad)
std
mov
sar
mov
xor
sar
pop
mov
sar
mov
sar
mov
inc
nop
jmp
mov
(bad)
mov
(bad)
std
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
inc
rcr
mov
fadd
nop
pop
fdivr
mov
fdivr
mov
shl
cwde
imul
mov
jl
sti
pusha
jge
fiadd
mov
jno
mov
sub
mov
fcomi
mov
clc
in
pushf
dec
or
mov
ss
cmp
lahf
std
pop
xchg
das
pushf
xchg
call
push
call
mov
xchg
mov
je
test
and
stos
in
test
cdq
stos
fisubr
lods
pop
pop
jae
push
push
sub
mov
cmps
cmp
mov
dec
retf
daa
inc
mov
data16
test
mov
pop
sbb
pop
imul
dec
dec
(bad)
fild
sti
xchg
fnstsw
retf
and
or
stos
cs
sbb
scas
call
punpcklwd
ret
ja
call
mov
stos
addr16
aaa
mov
retf
ja
jmp
dec
je
(bad)
mov
repnz
sbb
cmp
rcl
mov
rcr
and
mov
fs
fldenv
push
mov
arpl
and
movs
nop
dec
cmps
ins
xchg
mov
add
pop
cmps
out
lahf
or
test
dec
idiv
je
inc
sub
cmps
das
adc
arpl
fdiv
add
push
stos
add
adc
dec
retf
mov
inc
or
scas
icebp
lods
mov
lds
rcl
rol
dec
mov
nop
pop
adc
mov
(bad)
cld
dec
loopne
inc
xchg
and
aam
lock
xchg
push
sbb
data16
or
rcr
nop
mov
out
daa
scas
(bad)
push
add
(bad)
aad
aas
in
sub
aam
pop
fidiv
les
dec
(bad)
js
pop
pop
dec
pop
push
xor
ret
jb
sbb
sub
loope
push
ret
adc
xor
mov
sbb
mov
sti
in
fwait
inc
lods
pop
inc
enter
mov
sub
in
mov
(bad)
mov
loop
out
sbb
ret
lea
sar
push
mov
ja
add
xor
sbb
push
adc
out
mov
jecxz
jg
dec
in
cmps
adc
cmp
sbb
mov
outs
stos
inc
mov
sbb
lods
aas
dec
push
fdivr
pushw
or
inc
les
inc
cmp
aad
cmp
inc
fwait
jle
iret
mov
mov
add
fucomip
icebp
dec
pop
(bad)
cwde
xchg
cmps
push
je
aam
imul
and
into
les
push
int
aad
scas
add
rcr
cld
inc
or
add
mov
clc
in
inc
loopne
nop
adc
std
mov
inc
rcr
push
pop
cmc
cmp
dec
mov
push
je
push
pop
popa
mov
fcomi
cmp
sub
in
cld
xor
js
mov
(bad)
sar
inc
pop
or
inc
aaa
jmp
sub
xor
or
test
jecxz
sar
pop
mov
mov
iret
jbe
xchg
mov
dec
rcl
pop
ins
xchg
popf
clc
std
outs
mov
cmp
cwde
dec
jae
int
mov
pop
cmc
sub
icebp
push
push
movs
jo
jbe
lahf
test
test
movs
and
repz
stc
iret
adc
push
sub
in
stos
sar
add
leave
das
jae
mul
sti
iret
inc
xchg
aas
(bad)
mov
(bad)
push
jmp
rsqrtps
pop
jb
xor
lock
dec
into
xchg
push
ret
or
(bad)
push
jmp
cmps
pop
dec
dec
pop
inc
test
iret
jge
jo
rcr
fiadd
jle
mov
neg
in
pop
dec
sbb
fwait
out
mov
adc
push
cld
movs
ins
mov
mov
or
mov
jle
shl
idiv
xchg
add
mov
jns
out
inc
pop
gs
dec
jnp
jge
add
rcl
aas
gs
and
add
adc
lahf
xor
bound
inc
lods
fst
in
push
dec
das
sub
cmp
inc
in
mov
int
mov
mov
fimul
pop
pop
mov
imul
fldenv
arpl
rcl
jnp
(bad)
sbb
rcr
jno
es
fwait
jae
and
mov
jmp
outs
cwde
dec
or
lock
jo
lahf
cmp
call
mov
loopne
movs
out
adc
test
and
cmps
call
inc
add
pop
mov
(bad)
aad
inc
test
outs
mov
dec
inc
hlt
add
or
aam
inc
xor
mov
push
das
dec
out
repnz
push
ret
enter
jp
add
and
push
ret
fmul
inc
push
jmp
les
or
arpl
mov
xchg
mov
cmp
(bad)
jmp
sbb
jo
ins
add
xchg
xchg
jge
popa
add
cmp
outs
pop
aas
call
in
and
dec
sbb
enter
sub
dec
jl
out
enter
push
sahf
sti
ins
mov
add
xchg
rcl
push
scas
rcl
(bad)
gs
test
leave
xor
ror
ins
adc
jge
loop
sti
les
xchg
inc
es
dec
sub
out
add
test
add
cmc
mov
push
cmps
adc
add
mov
iret
(bad)
cld
aam
cmp
xchg
aam
adc
adc
xchg
push
mov
fmul
sbb
shl
lock
pusha
inc
or
jmp
add
loopne
adc
push
(bad)
dec
mov
add
pop
pop
jp
sbb
inc
outs
xor
pop
add
mov
popa
xchg
movs
xchg
int3
leave
xchg
retf
adc
dec
xchg
ss
mov
fsub
mov
or
xor
mov
xchg
in
dec
sti
nop
jno
or
sub
mov
mov
fistp
fstp
ror
jns
or
movs
ins
sar
jno
daa
xor
into
pusha
add
jge
inc
pusha
push
mov
jnp
(bad)
fistp
jb
xor
retf
cdq
push
ins
and
mov
stos
ss
mov
ja
mov
iret
mov
add
cdq
push
cmc
mov
mov
test
rol
test
pop
xor
fcomp
cmp
push
arpl
mov
fsub
movs
xchg
int
add
jae
popa
adc
jmp
dec
out
mov
xchg
xor
repnz
sub
adc
iret
repz
call
leave
xchg
cmp
pusha
fcomp
retf
mov
mov
sbb
xchg
push
and
ds
pop
xor
adc
pusha
repnz
adc
loope
imul
mov
je
inc
enter
enter
fdivr
mov
inc
shr
nop
inc
clc
jne
dec
dec
gs
shr
cmp
ret
ret
mov
rcr
ror
(bad)
sar
inc
push
enter
clc
popf
xor
(bad)
mov
pop
add
into
fcomip
jge
mov
inc
call
jge
rcl
(bad)
push
loop
shr
jg
mov
inc
add
aad
stos
outs
pushf
pop
pop
fcmovnu
xlat
jmp
loopne
pop
xchg
fsub
test
xor
popa
pop
gs
push
dec
cmp
icebp
pop
xchg
pushf
test
mov
scas
and
cmps
and
pushf
call
dec
and
xchg
mov
loope
rol
fs
jno
mov
enter
dec
jmp
push
jg
cmp
gs
xchg
shl
mov
out
mov
out
cmc
sbb
push
fmul
cmps
fst
(bad)
adc
xor
lods
push
ins
jmp
add
xor
movs
push
cmp
push
xor
pop
popf
sbb
retf
jo
fbld
popf
sti
out
lods
jae
and
mov
dec
or
or
mov
imul
jge
mov
(bad)
je
mov
xchg
mov
adc
jb
movs
(bad)
jb
rcr
div
lock
mov
xchg
mov
inc
shl
adc
mov
mov
addr16
in
lods
and
sti
lock
or
cdq
not
dec
pop
xor
jmp
or
dec
dec
jno
inc
xchg
aaa
fisubr
in
add
aad
adc
pusha
pop
adc
in
div
cli
or
fist
rol
popf
(bad)
imul
out
mov
sub
ins
push
dec
jmp
dec
fist
mov
jmp
or
jae
add
mov
jl
retf
xlat
mov
jg
cmc
jecxz
push
cld
dec
shl
push
sub
add
cmps
popf
clc
aas
xor
(bad)
out
cmp
or
pop
rol
popf
(bad)
imul
cs
(bad)
(bad)
mov
push
xor
imul
sbb
adc
(bad)
fadd
pop
jp
in
test
cmc
or
mov
aas
mov
push
sbb
rol
(bad)
repnz
dec
jl
(bad)
popa
loope
mov
stos
out
mov
sub
fsubr
cmp
push
sub
enter
or
xchg
clc
mov
in
mov
mov
jb
xor
nop
scas
cmp
data16
stos
pop
pop
or
mov
sbb
aas
and
pop
test
cdq
pusha
push
add
fwait
sub
add
test
fisub
shl
bound
std
das
inc
rcr
fsub
mov
add
mov
test
mov
loopne
shl
and
std
mov
shl
dec
push
cmc
mov
dec
adc
ins
sbb
clc
stos
leave
dec
mov
jge
rcr
out
ds
pop
jo
fmul
fcom
inc
inc
icebp
xor
shr
fsub
sub
add
in
fidiv
mov
push
fucomi
inc
adc
cmp
or
(bad)
cwde
push
scas
pop
shl
dec
cmps
in
jecxz
mov
xchg
add
stc
sub
cmp
mov
stos
pop
or
or
(bad)
pop
icebp
mov
jo
loope
mov
jbe
enter
(bad)
fild
repnz
out
pop
nop
jno
sub
jbe
or
stos
ficomp
lock
cmp
mov
cmp
xchg
lea
xor
sbb
jmp
mov
and
fadd
in
jmp
test
mov
ror
mov
int
pushf
jne
mov
std
jo
sub
jle
push
stc
cmp
cdq
pop
mov
popf
cmp
push
push
rcl
jne
push
push
adc
pop
pop
dec
pushf
or
fidiv
mov
xchg
cs
adc
retf
and
fsubr
push
repz
(bad)
mov
ins
das
jmp
sub
xchg
lock
sub
sbb
(bad)
mov
int
inc
movs
xchg
sub
out
adc
mov
xor
jmp
es
mov
sub
je
lahf
mov
cmp
mov
xor
arpl
call
addr16
pop
inc
push
sub
daa
sbb
jb
fsub
inc
inc
(bad)
fsubrp
and
xchg
inc
mov
repz
mov
pop
pusha
fdivr
leave
and
jnp
add
cmps
xor
or
jbe
sti
and
cs
dec
cmp
sub
jnp
retf
push
mov
pop
out
not
in
jns
cld
mov
cli
sbb
int3
sub
retfw
push
movs
adc
dec
lods
clc
mov
jecxz
aas
push
pop
mov
pop
outs
jmp
mov
fidivr
push
int3
nop
inc
push
mov
push
adc
push
or
cli
ja
(bad)
xchg
lea
loope
jl
cmps
mov
jne
cwde
cmps
cmp
adc
cmp
loopne
(bad)
pop
stc
test
sub
pushf
inc
cmps
dec
xchg
xor
sbb
data16
test
sar
cdq
gs
dec
retf
out
stos
aam
leave
hlt
cld
mov
scas
sahf
mov
and
pop
mov
inc
dec
(bad)
inc
clc
pop
nop
dec
xchg
inc
push
std
test
push
add
mov
inc
test
jo
and
push
mov
mov
sub
pop
fld
push
or
adc
pop
jle
push
xor
inc
xchg
(bad)
loop
in
dec
ror
push
or
(bad)
jmp
sub
jns
jp
dec
gs
mov
mov
adc
scas
sub
rol
push
int3
cmp
inc
pop
fwait
ror
mov
push
aas
psubd
adc
fsubr
scas
xor
mov
mov
sbb
sbb
cmps
mov
adc
(bad)
loope
(bad)
pop
or
mov
jae
lods
out
push
mov
mov
shr
dec
jmp
daa
add
bndstx
push
stc
mov
repnz
push
push
or
ja
xchg
jmp
popa
cmp
jmp
sbb
sbb
push
inc
lahf
bound
lea
dec
add
shr
cli
push
pusha
pop
jl
jno
mov
xor
dec
push
or
leave
jge
or
loopne
xchg
lods
inc
sub
add
inc
dec
ins
rcr
lahf
mov
sub
and
neg
pop
out
inc
outs
pop
xchg
lea
psllw
imul
aaa
(bad)
jae
jne
fs
fneni(8087
into
inc
popf
xor
mov
and
popa
ret
xchg
pop
mov
and
out
cdq
daa
mov
inc
xor
out
mov
mov
push
enter
out
scas
mov
aad
jge
stc
adc
jge
lahf
sbb
std
lds
scas
push
push
pop
mov
bound
sar
out
dec
jle
cwde
or
sub
xchg
xchg
adc
push
sub
pop
pop
in
xor
(bad)
movs
sub
push
push
push
pop
and
scas
sbb
lahf
dec
cmp
movs
loopne
xor
inc
pop
xchg
push
shl
cdq
adc
jmp
adc
push
out
fnsave
mov
xchg
js
xor
jnp
popf
call
(bad)
not
out
call
sub
dec
bnd
movs
adc
mov
push
xor
jb
fcomp
mov
daa
or
xchg
test
inc
aaa
cdq
(bad)
adc
mov
int
(bad)
in
imul
hlt
adc
shl
in
xchg
or
mov
push
inc
in
shr
pop
sbb
mov
into
fwait
jo
movs
fs
xchg
nop
loop
pushf
cmc
and
aam
out
std
jne
dec
ror
or
or
ror
sub
sbb
push
inc
out
sbb
in
sub
dec
test
and
stc
jge
push
push
mov
stos
ret
mov
sbb
sti
jl
repz
sub
inc
xchg
add
repz
inc
mov
jbe
mov
cli
xor
ins
mov
in
push
push
add
mov
jmp
dec
sub
lock
ror
dec
outs
mov
mov
pop
xor
pop
mov
jg
jmp
fiadd
push
sbb
add
jnp
dec
pop
mov
xchg
add
xchg
pop
xchg
inc
psubw
push
pushf
cwde
imul
and
in
mov
inc
cmc
xchg
mov
fwait
hlt
or
nop
inc
mov
enter
enter
sar
mov
inc
shl
fdiv
dec
fidiv
inc
pop
jp
int3
(bad)
jg
(bad)
sar
int3
xlat
mov
inc
dec
jo
lods
dec
sbb
call
push
xchg
sbb
out
pop
stos
jnp
jp
cmp
cmp
add
pop
and
nop
xchg
shr
sbb
test
lea
stos
test
sbb
add
das
inc
xchg
add
fs
jmp
repz
lds
enter
mov
loopne
add
add
pop
(bad)
out
pop
stos
mov
mov
out
test
shr
lods
add
aaa
addr16
and
jg
push
sub
push
stc
dec
adc
outs
(bad)
and
mov
fisubr
pushf
sub
lahf
adc
fsubr
fsub
mov
fs
adc
mov
shl
jne
add
add
rcr
jg
push
std
mov
sbb
cmc
lods
mov
in
mov
xor
dec
adc
cmps
in
xor
jp
jbe
stos
push
inc
test
cmps
or
jge
mov
dec
and
dec
add
aaa
retf
cmp
mov
icebp
lahf
cdq
fistp
imul
outs
mov
xchg
ror
imul
lock
adc
add
add
xchg
dec
sub
fnstcw
fisub
mov
xor
push
and
xchg
repnz
xor
shl
popa
mov
mov
pop
xchg
dec
and
ss
xchg
scas
or
mov
lock
push
inc
icebp
xchg
out
cld
cwde
jns
arpl
pop
mov
push
mov
mov
xchg
sbb
hlt
dec
cmp
inc
test
mov
loop
cmc
dec
ret
ins
pop
cmp
pop
mov
lock
inc
shl
push
movs
cmps
cmps
inc
pop
add
bound
jo
stc
cli
push
xchg
jg
ins
fsubr
cli
xor
ja
jmp
mov
xchg
push
cdq
fs
(bad)
movs
clc
xchg
pop
cli
inc
mov
or
and
push
jae
jns
std
(bad)
xchg
xchg
bnd
mov
popa
pop
out
pop
popa
sub
out
arpl
fnsave
aad
pop
sub
cld
mov
movs
adc
jge
nop
add
jp
clc
dec
sub
cmps
test
push
nop
pop
mov
movs
aad
cli
or
jge
scas
in
(bad)
mov
popa
jl
sub
stc
pop
inc
mov
iret
sbb
jle
cmp
sbb
iret
mov
sbb
adc
(bad)
fild
inc
fwait
jl
sub
sub
jns
stos
jmp
out
xor
cli
jle
nop
(bad)
or
mov
adc
xchg
jle
out
shl
pop
(bad)
mov
out
mov
repnz
mov
inc
stc
adc
mov
dec
sbb
inc
add
push
addr16
clc
jle
data16
clc
push
adc
add
xchg
loope
in
and
cmp
inc
outs
or
jnp
ss
push
fistp
daa
pop
push
inc
fs
adc
adc
mov
sar
loop
pop
retfw
rol
stc
dec
push
fnstsw
(bad)
loopne
xchg
sub
jns
cmp
fnsave
(bad)
jmp
in
lods
clc
hlt
sub
and
add
dec
hlt
xchg
xor
jmp
pop
adc
and
aad
pop
push
hlt
jl
gs
mov
inc
xchg
lock
rcr
xchg
mov
cmp
push
and
cmps
adc
mov
inc
push
inc
retf
push
pop
pop
loop
sbb
mov
push
and
loopne
enter
aam
rol
add
sbb
retf
cmc
mov
fsub
mov
sar
inc
mov
imul
inc
mov
(bad)
test
xchg
bound
sahf
mov
bound
cmp
sub
mov
repnz
xchg
add
popf
sahf
ja
aam
and
or
shr
(bad)
out
ins
repnz
adc
lock
arpl
arpl
(bad)
(bad)
jnp
in
repnz
mov
test
imul
inc
mov
bound
ins
repnz
xchg
bound
ins
repnz
xchg
bound
ins
repnz
xchg
bound
ins
repnz
xchg
bound
ins
repnz
cdq
bound
imul
inc
mov
bound
in
repnz
xchg
bound
bound
inc
mov
bound
ins
repnz
xchg
bound
ins
repnz
xchg
bound
je
inc
fsubr
cwde
inc
clc
aad
push
fdivr
mov
inc
shl
cmp
push
idiv
dec
(bad)
aaa
dec
pop
jb
retf
push
ja
vmovd
sar
inc
pop
fcomp
ret
pop
xor
mov
xchg
out
je
lods
push
fincstp
pop
ds
cs
cli
sub
cmp
mov
inc
loop
and
out
int3
cmps
(bad)
xchg
repz
out
mov
int
and
sbb
test
ja
popa
movs
pop
sbb
add
iret
mov
add
push
jns
loopne
int3
xlat
jl
bound
sub
fwait
adc
inc
sbb
es
inc
xchg
pop
mov
sti
add
jmp
jp
jae
mov
add
push
call
lods
fcom
adc
push
jae
lahf
mov
in
mov
xchg
outs
sar
in
outs
(bad)
fist
lahf
(bad)
leave
aad
(bad)
xor
les
repnz
add
inc
ins
cmp
push
inc
mov
in
pop
or
(bad)
(bad)
xchg
mov
mov
jmp
sbb
test
data16
(bad)
push
popa
push
(bad)
sub
cwde
cdq
das
cli
cwde
cdq
sub
cwde
cdq
sub
cwde
cdq
sub
cwde
cdq
sub
cwde
cdq
sub
cwde
cdq
sub
nop
cdq
sbb
nop
pushf
fldenv
inc
dec
addr16
pop
sub
pop
cld
xchg
mov
or
pop
sub
in
clc
xlat
ss
push
adc
add
fiadd
ja
rol
outs
stos
and
mov
inc
ins
inc
sbb
ins
neg
pop
push
inc
dec
lds
shr
rol
mov
gs
outs
je
mov
ror
test
xor
mov
imul
add
adc
pcmpgtb
sub
inc
xchg
mov
sub
hlt
in
dec
mov
cmp
pop
pop
push
mov
adc
jnp
jae
hlt
xchg
fwait
out
retf
sub
mov
vmread
pop
jmp
aaa
pop
xchg
cmp
adc
lods
add
push
imul
leave
nop
mov
cmp
es
rcr
push
popa
pushf
(bad)
scas
lahf
inc
mov
(bad)
in
stos
and
ins
xchg
jle
(bad)
push
or
ds
cmps
outs
and
mov
jge
or
mov
jmp
retf
and
push
iret
jae
mov
call
push
xchg
inc
in
adc
jge
adc
xor
inc
mov
jge
fs
ds
call
adc
mov
add
and
(bad)
js
shl
push
retf
sbb
mov
jl
pop
mov
sbb
pusha
push
fisub
adc
push
ja
or
lock
outs
sub
popa
dec
(bad)
cmc
fdiv
scas
pop
addr16
test
inc
xor
sahf
or
fldcw
sbb
cmp
ret
int3
cmp
in
cmps
mov
push
sub
ds
les
cmp
xchg
mov
mov
adc
sbb
cmp
out
mov
loop
shl
mov
(bad)
jne
iret
mov
mov
add
and
gs
add
push
pop
ss
repz
retf
jno
mov
push
into
ror
mov
xchg
mov
push
cwde
loope
sbb
xlat
adc
adc
pop
adc
push
xor
mov
in
pop
sub
mov
and
lds
push
fdivr
mov
shl
mov
enter
dec
fidiv
dec
pop
js
retf
aas
dec
push
jbe
inc
sar
inc
push
clc
gs
ret
ror
jne
adc
int
(bad)
jne
out
stos
xchg
icebp
(bad)
nop
scas
shl
out
(bad)
push
xor
stc
mov
lahf
adc
xchg
loope
inc
loop
lea
cli
sub
push
mov
mov
int
jecxz
pop
call
ss
ficomp
in
in
adc
xchg
icebp
jb
nop
movs
shl
in
in
push
push
sti
add
mov
inc
sub
sub
out
xor
movs
adc
push
lods
mov
xchg
inc
fdivr
adc
daa
cmp
pop
push
lea
jmp
stos
cmps
retf
jnp
loope
shl
sbb
cmp
sbb
movs
xor
dec
inc
outs
inc
std
outs
test
mul
push
mov
push
sbb
sub
sbb
clc
add
xchg
lods
push
jns
ss
aam
icebp
push
(bad)
(bad)
sbb
cmp
adc
push
dec
call
arpl
jne
pushf
dec
mov
inc
js
add
mov
add
mov
ins
sbb
(bad)
cli
fiadd
sub
pop
add
mov
stos
pop
cs
test
scas
dec
sti
je
sbb
mov
sbb
jnp
scas
mov
mov
scas
in
jbe
sbb
xor
mov
jge
and
adc
mov
push
pop
mov
pop
mov
push
pop
mov
and
lds
push
imul
add
cwde
and
xchg
mov
sub
jo
(bad)
jg
sub
test
add
xchg
cmps
shl
mov
test
aam
mov
in
into
sbb
inc
sahf
push
shr
jge
test
fistp
cwde
inc
int
and
sbb
mov
popf
icebp
mov
adc
mov
sbb
xor
sar
pusha
daa
and
and
push
pusha
hlt
and
int3
inc
ins
shl
xor
ret
test
fs
in
jb
sahf
adc
adc
or
adc
cmp
aam
fdiv
jp
(bad)
cmp
inc
mov
mov
inc
push
int3
rol
mov
mov
push
and
lahf
pop
loope
mov
ins
push
mov
mov
cld
jnp
xchg
push
mov
shl
xlat
adc
add
stc
and
fcom
pop
mov
jbe
pop
psubb
ins
cmps
push
mov
push
sbb
movs
push
enter
int3
mov
mov
mov
sbb
mov
rol
cwde
mov
jl
inc
shr
test
rcr
dec
fdivr
mov
inc
shl
cmp
push
(bad)
mov
rcl
mov
push
push
push
inc
rol
js
mov
lahf
btc
dec
adc
aad
pop
imul
(bad)
dec
mov
pop
in
dec
dec
push
pop
cdq
call
popa
sub
imul
mov
sub
adc
jge
lds
mov
mov
sub
push
cli
jmp
(bad)
xchg
pop
sar
cmp
popf
dec
cs
out
lods
jnp
inc
mov
pop
int
pop
sbb
call
sub
push
not
add
cmp
push
xchg
push
xor
mov
sub
ror
sbb
xlat
call
rcr
mov
loope
or
addr16
inc
iret
enter
xlat
shl
sbb
stos
arpl
pushf
fbld
loope
jno
adc
jnp
(bad)
jg
push
loop
call
loopne
or
fidiv
xlat
pop
mov
push
rcr
shl
adc
adc
push
and
mov
pop
jnp
add
ficomp
icebp
sbb
xchg
cmp
into
stos
sbb
cs
inc
rcr
loope
lds
in
xor
out
dec
test
cmps
pop
mov
xor
cs
push
mov
pop
push
push
mov
push
fidiv
push
imul
xchg
mov
sbb
dec
and
pop
jmp
loop
push
cli
mov
jge
das
cmp
repnz
test
mov
mov
adc
sub
sar
xor
bound
or
lahf
dec
mul
outs
cmp
xor
mov
xlat
scas
je
(bad)
cld
push
das
xor
xchg
mov
ins
xchg
inc
pop
push
xchg
mov
or
std
stos
mov
jo
push
and
sti
mov
cmp
ror
pushf
or
retf
jnp
jecxz
nop
imul
jp
in
movs
mov
fwait
pop
(bad)
jle
inc
inc
repz
loope
jecxz
push
mov
push
mov
clc
inc
enter
pop
sbb
and
jp
stos
xlat
ins
adc
aaa
shr
test
add
fst
jp
std
ins
repz
(bad)
rol
outs
dec
inc
and
out
jbe
jae
js
clc
mov
mov
xchg
jb
jb
add
sbb
jbe
jmp
pop
aas
aad
xchg
mov
mov
cli
rcr
sar
int3
mov
out
(bad)
sbb
mov
cmp
mov
imul
cmps
xor
sbb
arpl
inc
sbb
arpl
xchg
jb
sbb
pusha
rcr
xchg
pop
dec
add
leave
stos
aad
mov
push
push
pushf
mov
push
jg
sub
jmp
mov
(bad)
xor
aad
clc
retf
out
xchg
fdivp
jmp
mov
inc
inc
xor
jno
mov
stos
xor
sub
sbb
ret
stc
jmp
stos
or
adc
iret
mov
sub
push
cmps
cwde
fisttp
sbb
(bad)
add
dec
mov
dec
cmp
mov
fst
mov
mov
and
repz
iret
push
sub
loopne
out
pop
pop
shr
jp
stc
inc
lea
mov
dec
sub
mov
mov
and
push
sub
test
enter
inc
stc
sbb
xchg
mov
lds
shl
adc
xor
(bad)
jae
inc
pop
mov
sub
and
cmps
jnp
mov
push
xchg
js
mov
lock
jp
jno
or
shl
test
cld
sbb
inc
inc
sub
clc
clc
xlat
mov
push
in
or
dec
ret
in
ret
or
loopne
in
cmp
dec
add
ret
lods
xchg
add
in
cmp
cwde
sub
aam
xchg
(bad)
cld
sbb
out
or
(bad)
lods
fs
imul
push
cmp
mov
or
call
out
inc
les
jae
call
leave
arpl
int3
push
stc
addr16
and
pop
jle
mov
cwde
xlat
mov
dec
fwait
lods
shl
lods
mov
iret
popf
fwait
test
mov
outs
les
mov
jmp
test
cmps
test
call
fiadd
dec
fcomip
in
sbb
ror
and
inc
mov
jge
inc
xchg
iret
mov
(bad)
mov
fdivr
mov
fsub
mov
push
enter
enter
cwde
aad
imul
loopne
loopne
lock
popf
fsub
and
sub
jge
sbb
adc
js
shr
push
ins
pop
jecxz
add
mov
arpl
xchg
loopne
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
sbb
jo
inc
in
jne
push
xchg
mov
shl
pop
pop
cmc
cmps
push
fadd
mov
inc
sar
mov
sar
mov
sar
mov
loopne
mov
mov
pop
mov
fdiv
mov
fdivr
mov
sar
mov
shl
test
lock
arpl
in
inc
sar
sar
mov
add
dec
aad
mov
aam
mov
sar
mov
sar
mov
inc
xor
adc
lock
mov
inc
loopne
sahf
std
xchg
cdq
push
or
test
push
ret
out
nop
test
push
and
lahf
clc
mov
(bad)
jge
inc
rcr
mov
nop
push
jno
addr16
adc
int3
and
xchg
aaa
std
mov
and
fimul
jno
in
jnp
mov
(bad)
mov
xchg
fnstsw
inc
and
nop
push
cmp
(bad)
data16
or
imul
stos
mov
movs
loop
dec
ins
(bad)
pop
mov
pushf
dec
mov
mov
cli
mov
xchg
(bad)
mov
inc
test
push
mov
and
cmova
pop
ss
push
jae
and
std
mov
aad
stos
ret
and
dec
daa
adc
pop
sub
add
ins
jle
add
scas
lahf
pop
xor
sub
inc
in
push
std
mov
inc
push
or
test
retf
fcomp
(bad)
lahf
inc
inc
or
cmp
out
imul
nop
inc
push
stc
mov
in
iret
inc
pop
test
cmp
std
nop
inc
adc
pop
push
or
cmp
add
icebp
dec
cmp
mov
cmp
inc
fsub
inc
mov
inc
pop
push
jg
adc
fdivr
ja
add
jmp
(bad)
dec
push
xor
mov
push
movs
or
mov
hlt
std
mov
sub
xchg
cmp
std
mov
sbb
outs
pop
(bad)
sub
adc
sub
jne
inc
jo
xor
push
inc
inc
fs
fdivr
mov
repnz
mov
dec
sbb
inc
or
pop
fldenv
push
sub
arpl
pop
mov
mov
js
mov
loopne
loop
xor
leave
jge
adc
enter
shl
add
inc
cmps
adc
in
cmp
mov
inc
jne
dec
lock
sub
popa
inc
jge
iret
xchg
data16
sahf
outs
mov
xchg
shl
pop
sbb
call
or
mov
fdivr
inc
rol
int
pusha
inc
mov
mov
xchg
sbb
in
jmp
cwde
xor
cmp
sti
pop
lods
cmp
cmp
push
add
(bad)
arpl
adc
int
lds
dec
fnsave
loope
add
gs
and
and
int3
fs
add
std
and
std
mov
popa
nop
cli
or
sub
push
icebp
pop
std
mov
sar
mov
fdivr
mov
gs
mov
hlt
in
mov
sar
mov
sar
mov
inc
adc
mov
xlat
std
mov
sar
mov
jo
sti
lock
shl
push
shl
arpl
std
mov
lock
inc
ror
mov
pop
ins
adc
jne
jmp
push
inc
rcl
mov
mov
cli
adc
lods
fld
sbb
jnp
pusha
retf
fbld
cdq
push
mov
inc
bound
dec
dec
popa
or
out
jb
jl
pop
sbb
adc
and
cld
xor
fndisi(8087
dec
outs
and
push
into
out
sahf
push
pop
rol
or
or
jle
sub
outs
push
xor
pop
xchg
add
sub
or
dec
sub
mov
mov
(bad)
leave
add
inc
enter
out
and
inc
mov
sbb
jmp
mov
outs
fstp
or
push
sbb
xchg
jge
outs
and
jb
cmp
jnp
pop
in
sub
sub
cmp
push
adc
xchg
sbb
mov
adc
test
pop
aas
loop
ins
jb
mov
xchg
js
es
dec
enter
mov
push
shl
or
sub
cli
in
mov
outs
mov
loope
pop
dec
imul
sub
mov
add
or
pop
inc
sbb
movs
ja
or
(bad)
shl
ret
movs
jecxz
add
mov
retf
xchg
mov
push
xor
inc
mov
pop
jns
add
cdq
pop
scas
ja
jbe
cmc
or
int
mov
and
arpl
jg
arpl
pop
xor
in
rol
ror
mov
enter
sbb
sbb
repz
sub
shl
ins
arpl
lock
call
fcomp
ficom
icebp
ja
mov
dec
xchg
repz
cld
out
push
dec
adc
sti
or
cmp
push
mov
adc
fcmovne
cmp
xor
pop
and
jl
test
arpl
in
inc
enter
clc
std
mov
fdivr
mov
shl
dec
push
aad
inc
pop
je
fcmovbe
jg
push
ftst
xor
push
jbe
ret
mov
or
clc
mov
fadd
xchg
mov
(bad)
push
out
out
pop
mov
push
push
test
hlt
adc
ds
jno
adc
js
inc
push
adc
lock
mov
out
inc
sub
das
cmps
fs
mov
push
push
clc
mov
pop
rol
xchg
repnz
lds
mov
xor
mov
lods
sub
loop
fadd
mov
aaa
repnz
adc
push
les
pop
xchg
inc
pop
scas
mov
xchg
pushf
shr
xchg
fistp
pop
stos
cmp
test
out
imul
sub
inc
inc
push
loop
inc
in
les
pop
mov
dec
stc
mov
int
or
mov
aaa
adc
jle
aad
fcmove
sti
popa
cmp
pop
xchg
movs
fwait
cwde
nop
popf
inc
pop
call
xor
mov
cmp
jno
or
mov
ins
(bad)
imul
pop
repz
pop
sub
fs
pushf
jmp
stos
js
xchg
gs
mov
ror
mov
xchg
add
adc
outs
jb
not
xor
sbb
bound
and
into
and
sub
mov
pop
cmp
int
inc
xor
cmp
in
popf
jbe
mov
xor
nop
mov
jmp
pop
add
xchg
pop
cmp
jo
xchg
clc
push
bound
int
jecxz
ret
fisubr
rcl
ja
inc
mov
jge
pop
or
jno
ret
pop
and
xor
fcmovnbe
repnz
xlat
test
mov
inc
mov
mov
mov
in
(bad)
addr16
lock
push
push
jb
cmps
dec
xchg
test
fld
stos
sbb
out
call
jo
ror
mov
les
dec
sti
stos
jmp
jg
cs
sbb
gs
jg
push
stos
push
xor
dec
enter
or
jmp
mov
mov
pop
push
dec
pusha
cmp
jns
cmp
hlt
arpl
mov
pop
jp
jle
ja
mov
add
push
or
mov
icebp
add
sub
cmp
rcr
(bad)
pop
addr16
cmp
mov
xchg
fistp
je
mov
into
fistp
ins
call
push
gs
cld
mov
dec
aad
int
adc
inc
pop
les
cmp
sbb
imul
aad
xlat
dec
or
ja
jecxz
add
(bad)
add
fs
jge
leave
pop
xor
inc
ror
and
fidivr
inc
retf
push
clc
in
jnp
std
mov
shl
test
lock
pop
loopne
mov
dec
jp
mov
push
icebp
cmp
retf
idiv
(bad)
push
jnp
ror
ins
sub
outs
mov
push
push
or
sar
dec
push
cmp
or
or
shl
(bad)
ja
mov
fimul
mov
(bad)
xor
mov
cmps
int
(bad)
mov
rol
and
inc
cwde
dec
xor
dec
inc
jbe
call
mov
(bad)
jns
xchg
(bad)
call
and
xchg
or
pop
jp
fcomp
sar
cmp
cmps
ret
shr
shrd
or
test
lods
pop
jmp
popa
xor
push
jecxz
mov
out
inc
xchg
outs
ins
(bad)
ins
jno
sub
clc
or
pushf
push
cs
sub
and
cli
imul
and
ss
das
cmpxchg
gs
repnz
fdiv
leave
jl
loope
jo
ror
loope
popa
sub
xchg
call
push
and
hlt
jno
xchg
push
mov
test
lea
loop
fild
mov
cli
ffree
in
adc
rcl
sbb
mov
and
mov
cmp
pop
inc
mov
imul
pop
sub
inc
jmp
dec
stc
xchg
dec
xchg
adc
and
sbb
bound
sub
ds
pushf
xchg
fwait
dec
pop
idiv
adc
add
mov
ss
(bad)
cli
mov
xchg
inc
cli
mov
xor
push
lods
xchg
pop
(bad)
adc
jns
(bad)
sbb
or
pusha
icebp
icebp
repz
sub
in
inc
jmp
jns
and
or
(bad)
mov
adc
lds
pop
pop
imul
dec
retf
and
cmp
into
in
int
scas
xchg
add
jne
xor
xor
mov
ret
pop
gs
mov
xor
mov
cmps
loope
pop
jp
push
add
xchg
ficom
sub
imul
push
call
push
dec
cmp
or
rcl
and
(bad)
sbb
push
and
or
shl
pop
test
pop
loope
repnz
test
jo
push
pop
movs
ins
adc
push
mov
dec
xor
sbb
(bad)
mov
sub
ins
das
cmp
push
mov
outs
nop
dec
mov
fdivr
js
sub
sbb
bound
push
out
je
inc
scas
mov
push
lea
mov
or
cmps
jle
imul
sbb
jne
xchg
mov
push
cmps
scas
push
pop
and
cmp
rcl
xchg
test
sti
jne
(bad)
retf
push
scas
xlat
cmp
dec
(bad)
or
loopne
and
xchg
pop
mov
adc
sahf
retf
ss
(bad)
loope
fnstenv
add
mov
popf
or
shl
dec
test
mov
xor
(bad)
in
push
lea
cmp
adc
xchg
cmp
jge
cmp
cs
push
xchg
outs
xchg
add
fcmovne
popf
in
stc
ss
ja
jge
popa
leave
xchg
out
nop
xor
nop
pop
cmp
loop
int3
ins
out
sbb
mov
jae
call
mov
pusha
jp
push
fnstenv
xor
fimul
mov
push
mov
push
xor
lock
lock
cli
cmp
pop
ja
stc
dec
xor
fs
dec
mov
mov
add
ss
mov
ins
aas
jne
fcomp
inc
in
in
not
adc
or
mov
outs
loop
add
and
nop
inc
rcl
pop
pop
dec
outs
jo
and
pop
cld
sbb
fidiv
mov
pushf
mov
mov
hlt
dec
and
ret
daa
pop
xchg
aaa
pop
sti
in
mov
retf
inc
js
add
pop
jb
movups
daa
call
mov
adc
repnz
out
popf
push
and
loope
clc
test
lods
loop
or
lea
sub
push
(bad)
adc
sub
jmp
in
arpl
push
mov
ja
mov
repnz
inc
les
push
sub
pop
(bad)
mov
test
cmp
adc
mov
jns
push
imul
inc
xor
retf
pop
add
imul
cli
or
jmp
mov
dec
or
(bad)
stc
mov
arpl
retf
and
dec
mov
xchg
xor
je
cmp
and
dec
jno
outs
icebp
ins
outs
add
fsub
std
push
xor
ret
and
outs
int3
je
pop
iret
fild
jp
pushf
add
sub
out
or
mov
xchg
ret
sub
lock
iret
dec
xor
inc
xchg
outs
pop
out
lds
cld
dec
(bad)
frstor
jbe
mov
les
iret
outs
and
leave
lods
push
add
add
mov
xchg
in
push
xchg
fmulp
adc
cli
sub
xor
out
xor
xlat
cmp
or
test
and
add
(bad)
sbb
pushf
pushf
popf
xchg
and
stos
dec
sbb
add
mov
addr16
mov
fwait
arpl
xor
movs
jbe
retf
sbb
cmc
cwde
inc
test
lea
std
pop
int
cmp
dec
js
mov
rol
out
push
jae
sub
sub
mov
pop
std
mov
dec
lock
imul
mov
pop
shl
pop
xlat
xor
cld
test
enter
dec
int
cmp
dec
ja
(bad)
push
jmp
fsub
sub
add
in
dec
je
out
xchg
inc
test
pop
push
(bad)
outs
mov
ret
(bad)
and
jb
cmp
jbe
outs
cli
fidiv
pop
jmp
jl
cmp
sub
sub
jl
loop
pop
(bad)
pop
dec
cmp
add
int
(bad)
outs
into
aad
ja
jle
cmp
in
fist
das
jo
cmp
cmp
mov
mov
shr
(bad)
pop
and
push
xchg
xchg
xor
xchg
cli
cmp
xchg
shl
lods
adc
je
pop
xchg
repz
outs
in
in
xor
pop
mov
test
(bad)
aas
addr16
cmp
cli
fwait
out
sbb
mov
imul
xor
adc
xor
and
inc
inc
xchg
ja
push
stos
test
dec
pop
test
pop
adc
xchg
mov
jmp
fst
stos
fcomp
daa
cli
dec
repz
push
mov
shl
sbb
ror
jmp
xor
mov
mov
inc
sbb
shl
xchg
mov
popf
(bad)
in
daa
jmp
popa
dec
mov
jne
and
xchg
(bad)
xor
bound
sub
inc
cmp
js
mov
jb
push
sahf
jnp
sub
icebp
pop
arpl
xchg
cmp
xchg
or
mov
enter
adc
mov
scas
cmp
sbb
pushf
sub
pop
mov
(bad)
scas
push
imul
jle
aam
fistp
xor
mov
sbb
xchg
xchg
(bad)
xor
jmp
mov
jmp
push
addr16
or
pop
(bad)
jnp
imul
and
jne
sbb
imul
push
scas
in
(bad)
(bad)
fstp
mov
xor
or
mov
adc
jno
jne
call
gs
push
test
jmp
jg
inc
mov
sub
aas
js
sbb
test
movs
into
jo
dec
mov
sti
sub
adc
jge
ja
xor
adc
xor
or
ret
test
or
pop
pop
cmp
mov
arpl
call
sti
mov
lahf
push
mov
jmp
test
enter
sbb
stos
push
push
xchg
sbb
xchg
test
jne
sub
xchg
push
inc
cwde
(bad)
ins
jbe
mov
(bad)
mov
or
xchg
push
or
jne
jns
in
adc
fdivr
nop
cmp
mov
or
inc
aad
push
dec
cli
cmps
lods
fisub
xchg
nop
div
fst
mov
enter
fscale
or
xchg
mov
jo
pop
sbb
pop
popf
add
or
movs
cwde
mov
mov
jns
stos
jp
xchg
fmul
jbe
fcmovnu
adc
mov
xchg
std
ss
(bad)
sub
sub
mov
inc
movs
pop
pushf
lea
out
xor
cdq
pop
in
dec
pop
mov
adc
add
pop
push
ds
and
fsub
add
xchg
mov
mov
xchg
pop
mov
jb
pop
dec
jmp
enter
call
sbb
aam
repz
in
or
push
mov
in
mul
fwait
mov
mov
ss
dec
call
cli
cmps
dec
inc
arpl
popf
test
add
or
mov
lds
jno
mov
divps
jge
ret
add
test
mov
sub
push
xchg
adc
mov
mov
in
test
pop
into
sub
cmp
outs
mov
sti
clc
mov
enter
enter
sar
mov
shl
inc
pop
hlt
cmp
ja
dec
push
je
(bad)
shl
aas
leave
push
repnz
int3
(bad)
mov
inc
dec
adc
sbb
out
pusha
movs
ja
fisubr
mov
dec
outs
inc
lock
sub
sub
test
rol
dec
xchg
inc
rcr
enter
sahf
mov
and
cwde
jo
clc
jecxz
sbb
imul
mov
out
cmp
xor
add
fdiv
in
and
xchg
xor
lahf
inc
loopne
outs
cmp
dec
jl
scas
mov
push
ret
(bad)
addr16
jge
cmc
mov
push
cld
cwde
sbb
jnp
(bad)
fstp
mov
cmp
mov
popf
sbb
retf
cmps
and
sbb
ins
inc
mov
ins
and
jne
push
xlat
aad
mov
sub
inc
inc
outs
lods
add
iret
pop
cmp
cdq
mov
xor
lods
mov
test
(bad)
les
and
add
hlt
cmp
cmp
scas
mov
les
cmps
xor
mov
fnsave
sub
in
mov
fucom
out
sub
mov
fcom
or
and
fistp
inc
sub
jg
jo
pop
or
ds
mov
or
mov
jg
mov
xchg
icebp
rol
cmc
jg
sbb
xor
dec
cmp
popa
repnz
pop
int3
je
sub
stos
adc
std
sub
sahf
cmp
test
sbb
(bad)
clc
fst
dec
sti
push
sub
jle
jle
movs
leave
mov
and
jge
fldenv
pop
les
(bad)
ror
sahf
cmp
stc
and
pop
aas
test
mov
xor
cmp
mov
into
sahf
dec
jmp
mov
inc
pop
pop
mov
sti
rol
push
retf
imul
jge
(bad)
sbb
inc
fldcw
dec
cmp
fnsave
cmp
pop
push
in
cmc
mov
sub
enter
aad
dec
popa
jle
jno
in
mov
in
xchg
fidivr
in
jp
push
stos
int3
fs
sahf
call
inc
test
mov
xchg
mov
aas
push
mov
fld
or
rcl
fwait
dec
jecxz
inc
sbb
rol
dec
jecxz
mov
cmp
leave
dec
add
icebp
pop
pop
aaa
pop
rcl
and
rcl
inc
adc
lds
or
sub
iret
mov
or
xlat
iret
fdiv
adc
sub
push
jo
pop
sub
outs
aaa
adc
fidiv
mov
xchg
repnz
and
xor
pop
xchg
loope
sbb
jae
sub
fsub
movs
jb
dec
mov
daa
xor
stc
xlat
push
mov
xchg
mov
push
mov
and
xor
mov
mov
push
enter
ja
xchg
pop
push
(bad)
dec
jp
push
movs
jne
push
in
pop
push
in
pop
push
in
pop
push
in
pop
push
in
pop
push
in
pop
sub
test
cmc
mov
fsub
mov
sar
inc
mov
outs
popf
outs
and
sub
mov
repz
and
add
mov
repz
and
or
mov
repz
mov
sub
mov
repz
int
fadd
mov
repz
push
or
mov
adc
sub
mov
idiv
add
cmc
mov
adc
sub
mov
cmc
lods
cs
data16
add
outs
cdq
outs
and
cmc
test
sub
cmc
lods
outs
popfw
data16
sub
mov
inc
and
mov
cmc
mov
jo
sub
or
mov
cwde
adc
or
dec
sbb
or
lea
add
clc
popf
cs
shl
add
outs
popf
cs
shl
mov
repz
and
sub
mov
neg
cld
mov
sar
mov
(bad)
shl
mov
rcl
nop
arpl
cmc
mov
fdivr
mov
dec
push
hlt
cmp
fnstenv
inc
pop
cmc
ss
aam
aaa
dec
push
add
lahf
cmc
mov
dec
sub
inc
mov
or
sub
ret
into
cmp
mov
popa
or
or
ja
jmp
inc
xchg
int3
push
stos
and
sub
rcr
bound
adc
push
aaa
(bad)
sub
push
(bad)
sbb
lds
mov
pop
jnp
add
cmps
mov
fimul
mov
retf
(bad)
sub
sub
daa
imul
inc
add
jp
xchg
push
and
std
mov
icebp
mov
jbe
dec
pop
xchg
cwde
mov
cld
xor
jle
test
jne
push
jno
(bad)
jmp
jno
les
or
add
push
dec
mov
mov
xor
ret
pop
jp
cld
mov
push
call
and
retf
cdq
push
jmp
xchg
jne
out
in
mov
sti
call
cmc
sub
push
sub
int3
in
test
movs
sahf
dec
(bad)
icebp
mov
lea
mov
pop
cmps
mov
add
xor
lds
imul
arpl
cdq
test
cmp
and
sub
mov
sbb
arpl
and
xor
cmp
mov
jo
stos
ret
pop
sahf
sub
xor
jecxz
add
outs
mov
arpl
mov
mov
or
mov
std
fidivr
mov
(bad)
lock
aam
sub
jge
(bad)
rol
movs
pop
test
jmp
and
mov
jb
cmp
mov
lods
and
shl
pop
jae
pop
(bad)
cmp
add
shr
ja
xchg
adc
shr
in
xchg
pop
push
jae
cli
add
inc
xchg
inc
push
dec
or
aam
scas
cmp
pop
rcr
jp
adc
and
cdq
push
dec
ror
pop
mov
cdq
in
je
jne
lods
push
scas
push
call
outs
xchg
daa
inc
clc
call
fdiv
fld
inc
iret
push
jg
inc
arpl
fcom
clc
in
jns
push
mov
inc
push
outs
sbb
dec
lods
call
dec
test
out
jno
jmp
ror
je
aaa
mov
inc
inc
imul
jno
loop
test
(bad)
or
idiv
cmp
xor
inc
sahf
dec
jns
js
inc
fsubrp
dec
adc
jmp
lods
or
mov
pop
jge
xchg
add
pop
in
inc
mov
imul
repnz
retf
bound
sahf
mov
fsubr
mov
dec
fdivr
mov
inc
shl
cmp
push
jg
dec
(bad)
xor
push
std
aas
dec
push
jb
int3
aad
mov
push
sub
mov
push
mov
(bad)
mov
jb
fidiv
lock
das
aaa
dec
sbb
add
cmps
ja
push
xchg
(bad)
push
clc
test
std
sub
or
mov
ret
scas
std
ficomp
es
imul
sbb
neg
dec
sbb
dec
nop
rol
mov
imul
loopne
or
daa
jmp
mov
int
cmp
push
and
adc
push
xor
pop
rol
xchg
aaa
clc
in
cld
inc
enter
add
int3
mov
fmul
pop
cmp
lahf
add
int3
scas
in
(bad)
test
add
scas
jp
jmp
out
jg
push
mov
sub
push
add
mov
shl
and
or
movs
call
sbb
push
ficom
mov
sub
mov
aas
jo
pop
mov
dec
jbe
and
stc
mov
arpl
jecxz
fdiv
inc
cmp
lahf
fcom
(bad)
and
xchg
mov
test
pop
stc
popa
and
fwait
out
pop
sbb
add
jecxz
loopne
les
add
dec
retf
test
aad
xchg
fwait
lock
cmp
bound
jb
outs
adc
push
frstor
pop
out
xchg
cwde
or
sub
jl
pop
cli
out
or
xor
pusha
sub
xchg
xlat
inc
or
cli
xchg
rol
mov
xchg
fld
or
push
push
jle
xor
add
fimul
push
stos
jns
loope
push
sub
xchg
xlat
xchg
clc
shr
add
pop
call
jp
test
xchg
popf
mov
addr16
test
sub
cmp
dec
sub
xchg
(bad)
rol
jne
xchg
mov
jbe
mov
dec
or
fdivr
pop
sub
sar
js
add
mov
cmps
cmp
push
dec
jae
fs
cmp
aaa
cmp
add
aad
or
push
lock
int3
jge
mov
(bad)
cmps
sub
add
pop
jo
lds
xchg
fcmovbe
mov
or
ret
adc
cmp
mov
push
xor
jo
dec
(bad)
out
call
mov
xchg
(bad)
cs
pop
pop
int
cmps
sahf
ret
retf
sbb
mov
pop
jmp
int3
ss
mov
push
mov
mov
test
iret
xor
pop
mov
fmul
push
mov
ja
int3
mov
loope
stc
mov
ins
cli
into
push
jae
dec
and
ja
inc
in
mov
mov
(bad)
arpl
and
fisub
stos
shr
jle
adc
mov
push
push
push
mov
je
mov
es
inc
inc
ja
mov
sbb
inc
cli
dec
and
mov
js
cmps
or
mov
in
push
sub
leave
in
test
push
inc
scas
(bad)
sbb
push
clc
inc
pop
retf
ins
jg
xchg
nop
sbb
retf
into
pushf
stos
xlat
call
imul
add
mov
or
outs
mov
sbb
mov
sti
popa
repnz
(bad)
push
mov
shl
pusha
sbb
sar
push
scas
pop
rcr
iret
repz
xor
bound
inc
ins
loope
test
int3
sar
pop
inc
xchg
jge
pop
sbb
imul
scas
push
idiv
and
dec
cdq
pop
rdmsr
ds
mov
bnd
aaa
jno
inc
es
shr
outs
cmp
fst
inc
cld
xor
jns
and
mov
and
inc
out
test
leave
sub
out
nop
mov
push
sbb
mov
das
loopne
or
dec
jmp
mov
rcl
mov
outs
adc
(bad)
pop
adc
adc
stos
mov
not
or
jnp
and
jecxz
aaa
or
retf
dec
jecxz
sbb
outs
and
bound
and
cli
mov
adc
arpl
stc
mov
shl
jl
adc
fistp
mov
aas
dec
push
inc
rcr
cld
outs
jp
out
mov
nop
fld
mov
cmps
mov
nop
dec
adc
xchg
pop
dec
in
ret
sbb
cwde
lods
clc
jl
inc
enter
shl
push
sar
mov
inc
sar
cmp
pop
jg
dec
pop
jle
dec
fcomi
ss
and
mov
(bad)
mov
dec
sub
popa
inc
test
fstp
iret
cmp
xchg
or
je
push
inc
jmp
and
iret
pop
lock
out
scas
pop
jl
push
(bad)
fistp
jp
jecxz
std
mov
ficom
ror
in
test
pop
or
sbb
add
dec
sbb
call
ins
repnz
mov
sahf
addr16
aam
fucomip
mov
into
adc
lahf
jg
jbe
xchg
cmp
mov
(bad)
std
cld
jb
adc
loope
ds
push
sub
add
nop
movs
aas
not
xchg
mov
not
mul
pop
inc
movs
sub
xchg
repz
repnz
repz
xchg
push
inc
mov
nop
jae
push
into
dec
sbb
mov
jge
cmp
cmc
pop
sub
out
xor
push
adc
retf
cmp
iret
sub
adc
inc
aam
push
jnp
mov
xchg
shl
pop
sar
test
adc
ret
push
add
int
and
pusha
repnz
(bad)
and
aaa
jle
inc
xor
add
xchg
sbb
sub
rol
leave
repz
lock
sbb
retf
jnp
movs
mov
(bad)
inc
add
xchg
retf
pop
push
mov
(bad)
outs
and
inc
dec
fisttp
xchg
(bad)
data16
ja
xor
push
cmp
(bad)
xlat
adc
popa
cli
xlat
clc
std
hlt
repz
dec
nop
xor
(bad)
ror
xchg
adc
mov
mov
adc
gs
xor
jl
bound
daa
stc
inc
or
test
bound
ror
in
xor
mov
push
stc
xor
enter
push
bound
test
and
cmps
lea
mov
rol
mov
inc
mov
arpl
push
xor
mov
stc
sbb
add
mov
ret
add
stos
or
jb
into
pusha
out
(bad)
xchg
ja
lahf
mov
adc
xchg
xchg
je
mov
(bad)
fs
xchg
xchg
stc
sbb
jmp
jg
je
dec
test
or
bound
push
mov
and
pop
add
mov
and
ret
inc
call
xor
cmps
pushf
sahf
sar
pop
cdq
repnz
stos
ret
loopne
jnp
rcr
xor
push
movs
jl
pop
cwde
test
sub
test
mov
iret
add
pop
push
icebp
stc
jns
pop
and
ror
xchg
jl
mov
mov
(bad)
in
sub
fsubr
mov
popa
mov
dec
xor
lods
mov
pop
jmp
aaa
lahf
dec
push
adc
mov
ret
push
mov
mov
mov
ins
fimul
fld
and
mov
loope
jno
rcl
test
fadd
mov
lds
(bad)
jl
sub
loop
(bad)
jb
xchg
ja
push
jno
(bad)
fnsave
xchg
aam
std
nop
dec
xlat
mov
sar
pop
fptan
rol
mov
enter
es
fnstcw
shr
inc
aam
jmp
dec
or
add
mov
outs
jno
retf
push
dec
jnp
scas
xchg
fisub
adc
out
xor
xchg
outs
and
imul
inc
and
mov
rcl
(bad)
int3
dec
lds
retf
(bad)
loope
lds
adc
es
jecxz
(bad)
jge
mov
dec
mov
outs
jmp
test
adc
xchg
mov
push
inc
leave
cmp
ss
lea
aas
test
fsubr
jae
aam
inc
icebp
ret
mov
cmp
mov
(bad)
das
stc
mov
adc
cmc
enter
mov
loop
cmp
outs
lea
xchg
cmp
aas
mov
(bad)
jno
pop
ret
dec
or
sub
stos
pop
sbb
and
cmc
cmc
push
sub
xchg
div
(bad)
cmovp
in
xor
adc
test
add
sbb
in
(bad)
test
push
and
mov
dec
rol
fs
imul
xor
into
cwde
data16
sbb
iret
cld
ins
fimul
xor
ret
mov
sbb
test
mov
push
or
out
mov
out
cmp
cmp
out
sbb
and
cld
ins
es
in
and
test
ins
test
scas
cmps
or
mov
mov
shl
inc
fsubr
cli
mov
rcl
mov
sar
inc
add
in
fwait
(bad)
in
test
shl
push
rcr
pop
clc
aad
pop
lock
imul
loopne
adc
shl
jge
ret
jo
sbb
mov
add
pusha
pop
jo
jo
sbb
add
mov
dec
clc
aad
imul
adc
xchg
adc
js
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
push
jecxz
jmp
inc
loop
inc
fsubr
cmp
shl
clc
sti
push
mov
fdiv
mov
fdivr
mov
sar
mov
inc
nop
in
jae
add
mov
inc
fdivr
mov
sar
mov
sar
mov
lock
arpl
cmc
dec
pop
fcomp
xor
std
mov
dec
mov
retf
jecxz
(bad)
fild
icebp
in
out
mov
inc
adc
inc
sub
dec
inc
sar
inc
repnz
scas
ds
mov
fsub
push
sub
sbb
shl
fwait
retf
jg
repnz
imul
rcl
scas
cmps
outs
nop
(bad)
lock
adc
mov
mov
arpl
cmp
push
sub
add
jge
loop
stos
sub
adc
inc
enter
and
dec
mov
inc
sbb
cmps
(bad)
mov
sub
cmc
outs
mov
out
in
or
scas
cmp
pop
jg
jge
out
xchg
lods
xchg
push
push
mov
and
imul
sbb
cli
call
add
out
push
sbb
repnz
push
or
leave
dec
cmp
mov
or
stos
in
and
inc
fwait
push
aad
push
xor
jmp
pop
cdq
adc
mov
mov
ror
sti
gs
jbe
stos
jno
inc
mov
(bad)
(bad)
into
jno
lock
adc
cmp
sbb
leave
ret
adc
(bad)
mov
into
dec
pushf
push
(bad)
xor
icebp
pop
cmc
fwait
jp
call
and
cld
ret
and
add
imul
iret
ins
enter
test
mov
inc
pop
cli
dec
fwait
and
(bad)
jb
daa
retf
dec
cmp
sbb
lds
dec
mov
test
pop
inc
jge
sub
or
ret
sar
in
(bad)
xor
mov
fscale
inc
inc
xor
lds
je
mov
std
mov
adc
mov
sar
mov
sar
mov
sar
mov
sar
mov
shl
mov
xlat
gs
inc
mov
xor
add
mov
mov
inc
pop
stc
iret
mov
fist
test
out
inc
pop
out
dec
push
xchg
jp
mov
adc
es
push
push
inc
fiadd
sbb
pop
xchg
imul
inc
mov
sbb
out
shl
cld
jmp
mov
inc
mov
and
das
pushf
jne
cmp
lods
or
inc
movs
dec
out
inc
addr16
cwde
enter
sub
mov
movs
imul
stos
outs
mov
js
scas
movs
mov
mov
rep
inc
push
pop
jae
rol
or
xor
push
out
fld
and
and
loopne
outs
xchg
sbb
test
(bad)
dec
fbstp
stos
dec
mov
loop
adc
pop
(bad)
das
mov
das
cmps
shl
add
in
mov
jl
ret
pop
loopne
fsub
ret
mov
aaa
ficomp
dec
jg
je
loope
ret
sbb
dec
add
and
js
xor
outs
jle
int
gs
jbe
stos
jns
xlat
imul
sar
std
jae
push
pop
dec
jmp
jle
sbb
ds
adc
ret
push
inc
mov
cmc
into
sub
cmps
xor
xchg
dec
adc
(bad)
add
xchg
sub
jb
cmp
xor
jmp
in
sar
fs
cmp
adc
adc
push
pop
ds
pop
test
mov
adc
xchg
sbb
inc
outs
and
inc
dec
mov
inc
xor
cld
fidivr
popf
xlat
adc
out
pop
dec
sar
inc
xor
pushf
pop
retf
mov
nop
cmp
lock
nop
dec
shl
mov
enter
fdivr
nop
inc
rcr
inc
fsubr
adc
jl
repnz
je
retf
push
pop
push
inc
rcl
test
cmp
add
cwde
mov
or
and
ins
js
add
cmp
dec
cmps
pop
movs
inc
pop
push
arpl
pop
sub
push
stos
inc
(bad)
fidiv
fucomp
clc
mov
mov
jl
in
jge
push
inc
add
add
xchg
jecxz
xchg
or
jb
mov
mov
inc
fild
adc
mov
add
ficom
dec
mov
jle
out
jno
nop
enter
addr16
(bad)
jle
icebp
js
inc
sbb
sub
inc
enter
mov
mov
cdq
inc
into
dec
mov
mov
pop
add
mov
inc
fisttp
pusha
add
add
iret
leave
mov
cmp
xchg
(bad)
dec
mov
inc
fisttp
cld
push
lea
mov
xor
mov
cli
stos
aad
test
push
inc
mov
icebp
sti
sbb
xor
out
shl
add
jb
or
jnp
leave
push
(bad)
cmp
push
mov
adc
stos
int
imul
mov
xor
test
xchg
fidiv
(bad)
jle
cli
xor
mov
fmul
aad
mov
mov
mov
outs
push
mov
xor
cmp
loop
xor
in
jge
adc
xchg
xor
lea
mov
test
out
es
imul
(bad)
mov
sbb
cmp
cwde
in
out
rol
dec
cdq
adc
fstp
sub
das
jmp
retf
nop
mov
jg
jecxz
mov
sub
xadd
(bad)
inc
mov
pop
out
jmp
call
ins
mov
stc
inc
sub
inc
fiadd
dec
fisub
ror
sub
pusha
ins
mov
stc
inc
sub
inc
fisubr
dec
cli
scas
jbe
outs
sbb
iret
dec
hlt
sub
ins
mov
stc
inc
sub
inc
fiadd
dec
fisub
ror
sub
pusha
ins
mov
stc
inc
sub
inc
fimul
or
xchg
(bad)
test
cmp
test
add
movs
(bad)
retf
push
push
mov
sbb
xchg
iret
test
sbb
xchg
movs
cmp
push
mov
and
enter
pop
clc
xchg
out
lea
jle
loop
mov
or
xor
xchg
mov
mov
in
lds
xchg
arpl
push
repz
retf
icebp
inc
(bad)
mov
ret
jmp
int
out
lock
dec
fstp
daa
mov
push
dec
mov
inc
bound
scas
cmps
retf
add
mov
or
xor
sub
pop
add
jge
fcomp
ret
imul
and
sub
mov
dec
mov
or
inc
adc
dec
data16
int
jl
inc
jnp
in
sub
lahf
outs
or
repz
xchg
adc
pop
mov
int
mov
adc
(bad)
fcmovnb
add
in
sub
in
(bad)
mov
mov
and
lahf
in
inc
dec
clc
ficomp
dec
lahf
inc
mov
push
dec
mov
mov
fwait
pop
mov
xor
aaa
add
scas
pop
ror
ror
lea
repz
and
fsubr
data16
inc
scas
repnz
ret
in
sub
iret
add
or
pop
mov
lock
adc
dec
adc
jns
add
aaa
ss
adc
daa
call
hlt
push
test
outs
(bad)
ftst
push
sub
cmp
mov
sub
bound
or
js
pop
jg
ret
mov
arpl
daa
and
fst
push
or
outs
pop
dec
xchg
cld
dec
add
es
adc
(bad)
outs
push
cmp
stos
and
mov
pop
cmp
pop
(bad)
sti
jo
xlat
std
nop
retf
loopne
clc
dec
enter
sar
mov
shl
mov
arpl
je
leave
push
ins
sbb
rcr
dec
popa
mov
rcr
repz
pop
in
das
pop
push
test
(bad)
cmc
dec
pop
or
sbb
or
out
mov
sub
or
fisub
fldcw
repnz
mov
add
loopne
test
das
lea
mov
dec
inc
push
cdq
test
retf
mov
cmc
dec
jl
and
ficomp
aad
jp
jno
ins
enter
pop
sbb
adc
dec
lods
sbb
and
in
sbb
test
dec
out
mov
dec
sbb
fst
addr16
mov
and
xchg
sub
adc
call
mov
dec
inc
popa
(bad)
icebp
retf
inc
std
(bad)
or
sahf
mov
push
xor
pop
fdiv
daa
in
sete
push
pop
aas
icebp
adc
push
jl
xchg
fcomp
inc
test
mov
sbb
xchg
mov
jnp
add
cmp
dec
or
out
and
mov
shl
mov
jmp
pop
sti
mov
adc
adc
jecxz
jp
jmp
cmps
fld
daa
mov
xor
and
xchg
jo
dec
inc
outs
arpl
jno
aaa
js
cmc
and
ret
stc
popf
sti
popa
cmp
shl
rol
inc
or
push
sbb
mov
sub
mov
into
pop
lds
push
(bad)
inc
js
pop
mov
(bad)
pop
lods
sub
push
inc
pop
dec
mov
xor
sbb
push
mov
in
jno
ret
push
mov
mov
stos
inc
fstp
push
fwait
push
test
xor
jbe
(bad)
sbb
push
loop
rol
pop
aas
sbb
xchg
xchg
pop
ss
cmps
pop
addr16
adc
dec
cmps
add
ficomp
push
in
adc
out
ret
xor
inc
jge
sbb
sbb
add
cmp
out
pop
cmp
jno
rol
shl
stos
add
or
loop
sbb
retf
jg
out
push
adc
and
out
and
call
loopne
pop
sub
cmp
into
mov
sub
stos
xor
daa
fistp
cmps
ret
sti
rol
sub
xchg
inc
mov
sahf
cld
inc
shl
jb
jne
cld
add
ds
out
push
dec
out
cwde
sbb
(bad)
js
sbb
add
inc
fstp
mov
mov
int
fisttp
mov
(bad)
nop
jg
xor
pop
and
inc
xchg
or
dec
mov
xchg
mov
mov
dec
sub
mov
ins
jge
int3
dec
pop
jecxz
jmp
mov
cmp
leave
mov
adc
or
lahf
xchg
repz
sti
xor
out
in
imul
push
sub
xchg
adc
std
loope
hlt
sbb
scas
mov
push
scas
push
xor
inc
jecxz
fxtract
or
pop
inc
sbb
in
mov
push
sbb
loopne
push
test
(bad)
stc
ja
xor
ret
cld
inc
icebp
jae
pop
(bad)
mov
dec
mov
mov
and
inc
sub
mov
pop
aas
cmps
add
mov
out
add
fcomp
or
mov
je
push
test
cdq
xchg
sti
cmp
jmp
aad
jp
out
daa
stos
xchg
mov
xchg
sbb
mov
test
or
push
jne
jbe
outs
retf
mov
jnp
mov
(bad)
mov
xor
mov
fcom
cmp
dec
and
ja
push
sub
cmc
cmp
mov
mov
sbb
push
imul
(bad)
adc
mov
xchg
sbb
mov
test
or
push
jne
jbe
outs
retf
mov
jnp
mov
(bad)
mov
xor
mov
fcom
cmp
dec
and
ja
push
sub
cmc
data16
mov
mov
push
mov
or
cmps
push
cmps
test
or
cmp
test
cmp
xor
lock
mov
(bad)
pushf
scas
(bad)
(bad)
add
fiadd
adc
mov
jmp
mov
ds
xchg
fcomp
cmp
sbb
and
mov
pop
imul
sbb
xor
and
std
outs
push
add
mov
cmp
mov
cmps
sar
dec
fcmovu
sub
jo
mov
test
dec
stc
aaa
(bad)
lds
jns
adc
out
int
pop
test
fild
gs
xor
inc
mov
jb
inc
mov
(bad)
pushf
scas
(bad)
(bad)
add
ficom
stos
add
mov
dec
inc
mov
xchg
shl
fnstcw
pop
adc
into
das
pushf
sub
pop
inc
(bad)
pop
and
ss
adc
jmp
mov
es
lods
adc
pop
sahf
push
out
stos
(bad)
mov
sub
mov
push
mov
cmps
mov
mov
mov
cld
push
(bad)
fmul
push
mov
scas
shl
and
fistp
frstor
pop
cmp
cdq
and
adc
jmp
xchg
inc
jns
addr16
or
mov
mov
jne
cmp
int
popf
xor
test
sbb
ins
or
cmps
sbb
sbb
test
sub
xor
cdq
cmp
cmp
mov
enter
dec
js
push
pop
add
and
pushf
mov
es
push
inc
pop
scas
repz
xor
jl
popa
(bad)
fdiv
pop
jmp
rol
or
and
enter
sub
sbb
and
ret
push
push
ins
cmp
in
rcr
leave
(bad)
mov
fmul
or
movs
test
jns
xchg
jae
pop
pop
and
cmp
pop
in
xchg
sub
jge
jo
pop
fs
shl
and
fistp
frstor
pop
xor
cdq
and
dec
adc
add
mov
sub
int3
and
push
lods
cmp
mov
mov
or
xchg
test
std
xchg
jg
dec
add
lods
push
in
shr
cdq
pop
aaa
lods
mov
dec
pop
adc
sbb
pop
xor
ror
mov
rcl
int3
cmp
and
inc
add
out
inc
lock
leave
retf
into
jbe
dec
and
jge
arpl
in
inc
enter
shl
push
fdivr
mov
push
lock
arpl
xor
dec
ins
sbb
inc
pop
mov
leave
jl
retf
ss
and
mov
add
hlt
cli
dec
pop
scas
call
std
aam
jbe
sahf
imul
xor
or
inc
lods
xor
les
ss
out
cli
(bad)
fldcw
push
xor
ret
mov
mov
jb
push
xor
and
jge
adc
fstp
test
in
jb
jle
iret
xchg
imul
sbb
jle
jnp
icebp
data16
jecxz
sub
je
pop
arpl
cmp
inc
mov
pusha
and
hlt
repz
push
rcr
mov
repnz
neg
stos
loop
test
add
sub
ins
mov
sub
dec
jmp
ds
mov
mov
mov
dec
adc
mov
test
push
es
shl
scas
jmp
neg
movs
jo
sbb
push
mov
mov
ret
mov
loope
add
adc
aaa
xor
mov
xchg
cli
cmp
jb
ins
enter
sub
dec
jmp
cmps
(bad)
jecxz
push
xchg
retf
sar
shl
cmc
js
popf
fs
push
and
ret
js
jg
int
into
add
aam
fnstenv
mov
test
jb
adc
dec
repnz
repnz
pop
xchg
adc
loopne
aaa
bound
pop
(bad)
push
or
jbe
xor
repnz
or
rcr
or
add
pushf
inc
inc
mov
push
xor
stos
push
push
outs
inc
out
xor
leave
push
imul
inc
jno
jge
dec
mov
mov
dec
aas
scas
xor
pop
outs
inc
sahf
sti
cmp
shl
mov
dec
mov
scas
inc
jg
inc
aam
lock
xchg
xor
dec
and
mov
imul
aam
lock
xor
dec
and
and
ins
das
dec
in
cmc
dec
jbe
(bad)
adc
push
mov
clc
ins
mov
in
ror
or
mov
clc
ins
add
int3
int
or
movs
loopne
shr
mul
sbb
xchg
(bad)
xor
loop
pop
mul
xchg
dec
lods
(bad)
loop
outs
cmp
or
movs
loopne
shr
mul
sbb
xchg
(bad)
xor
out
dec
fistp
out
push
fidivr
out
push
fidivr
out
push
fidivr
out
fidivr
jmp
mov
push
sub
push
or
mov
mov
mov
add
into
xchg
push
mov
push
pop
and
outs
mov
fs
enter
es
sbb
(bad)
mov
jo
inc
aad
sbb
stos
xchg
push
sbb
mov
pop
stos
mov
pop
stos
mov
pop
sbb
test
lea
xchg
push
retf
data16
test
je
pop
int
arpl
jno
imul
mov
dec
pop
sub
xor
push
(bad)
jne
test
(bad)
cs
sub
mov
sti
test
mov
inc
push
pop
pop
mov
stc
div
jns
nop
int3
sbb
ret
popa
leave
cmp
neg
lds
or
icebp
sub
mov
mov
sub
jmp
xor
into
and
dec
movs
push
cmc
sub
pushf
movs
lods
mov
xor
mov
mov
pop
push
daa
movs
fild
gs
dec
and
int
pop
sbb
add
push
int
pop
sub
jns
xchg
shr
xchg
neg
xsavec
cmp
fldenv
add
js
bound
push
jno
shr
dec
xchg
inc
scas
add
lods
fmul
add
cmp
dec
outs
pushf
xchg
adc
pop
in
sub
inc
mov
out
vprotb
dec
mov
lea
and
pushf
test
(bad)
ds
fwait
cmp
cwde
nop
dec
idiv
adc
pop
cmps
ss
mov
xor
pop
dec
dec
push
push
in
outs
xor
xchg
jg
adc
push
mov
inc
jo
sti
mov
ret
lock
push
lock
jae
std
mov
inc
lock
inc
inc
sar
jmp
pop
mov
fdiv
dec
dec
ja
enter
int
out
inc
rcr
cmp
dec
out
test
rcl
stc
fisub
mov
enter
adc
(bad)
aas
cmps
sub
xor
sti
dec
push
dec
xor
and
int3
mov
popf
xchg
imul
loop
lods
mov
sub
mov
data16
outs
xchg
shl
das
imul
and
inc
and
pop
adc
fsubp
call
ins
aad
(bad)
push
push
fmul
jle
xor
add
xchg
or
fild
test
rcl
sub
inc
xchg
push
jo
cmp
add
aam
cld
fdiv
mov
jae
dec
cmp
add
das
xchg
sbb
pop
dec
mul
jne
cmp
(bad)
sub
adc
rcr
dec
mov
ror
retf
sbb
call
aaa
adc
adc
xor
pop
enter
loopne
or
shr
movs
shl
sbb
sbb
or
cmp
mov
adc
in
pop
fimul
(bad)
imul
mov
outs
fstp
adc
xchg
push
xchg
sub
push
loopne
or
stos
pop
jge
or
xor
imul
bound
or
outs
push
inc
fstp
jg
inc
pop
push
enter
sub
fwait
int3
lods
and
mov
xor
pop
and
mov
std
repz
sbb
sbb
les
inc
icebp
and
mov
and
fcmovu
mov
imul
jge
push
jbe
lods
fwait
sbb
mov
cmp
js
or
cmp
retf
mov
call
sub
jnp
and
fcomp
movs
sub
pop
inc
stos
cmp
pop
out
xor
repz
or
adc
sahf
outs
pop
daa
mov
add
psrld
mov
jno
jae
push
adc
dec
jg
mov
imul
fadd
cmp
and
ret
outs
and
mov
mov
ja
inc
inc
jmp
in
mov
or
lea
loop
push
shr
push
or
neg
pop
popf
pop
(bad)
das
jo
lods
mov
ret
cmp
pushf
test
inc
or
mov
in
xabort
(bad)
arpl
cmc
mov
(bad)
sub
out
xor
xchg
inc
ret
ins
dec
push
rcl
sbb
rcr
pop
retf
add
cli
shl
sbb
xchg
dec
jmp
stos
sub
scas
sub
shr
lds
lock
outs
adc
call
jmp
push
cwde
fisub
push
mov
pop
aad
pop
dec
or
fwait
push
mov
mov
jmp
jecxz
ins
xor
lds
int
and
adc
test
loope
cmp
sbb
add
retf
std
out
xchg
retf
mov
(bad)
jo
and
pop
div
cmp
cwde
lahf
and
mov
mov
sar
xor
ret
mov
popa
cli
jmp
or
xchg
ins
xchg
add
mov
out
lock
adc
mov
mov
pop
push
mov
dec
pop
clc
popf
ror
inc
jbe
sbb
fwait
jno
data16
sar
popf
and
retf
jecxz
push
cmp
add
add
popa
xchg
(bad)
add
adc
pop
jbe
xor
push
out
pandn
inc
(bad)
loope
je
push
mov
enter
and
lods
into
fsubr
ja
(bad)
outs
fbld
ret
inc
int
pop
test
test
test
cwde
and
push
pop
push
cmps
lods
mov
cmp
dec
pop
and
push
mov
push
mov
dec
inc
cwde
xchg
mov
xor
shr
jl
sub
stos
cld
sar
sbb
or
loope
imul
loop
fwait
xor
(bad)
pop
sbb
repz
and
or
jnp
retf
sub
sbb
retf
or
or
adc
sub
enter
cmps
daa
push
movs
clc
add
mov
cdq
shl
inc
jbe
or
lahf
jno
data16
sar
mov
xor
inc
inc
movs
mov
mov
push
adc
daa
ins
popf
cdq
pop
shl
add
ret
push
ja
xchg
adc
add
sar
pop
iret
loop
mov
dec
fdivrp
pushf
shl
inc
jbe
or
lahf
jno
data16
sar
mov
xor
inc
inc
movs
mov
mov
push
adc
daa
ins
fstp
push
pop
test
cmp
jmp
jmp
xchg
cmp
and
mov
cmps
cmp
mov
ss
fimul
cs
mov
push
inc
test
imul
mov
sub
mov
jne
fs
xor
fisttp
cdq
imul
sub
add
push
xor
pop
push
sti
sbb
or
and
pop
sub
cmp
xchg
pushf
jecxz
push
push
rcl
jp
out
in
(bad)
mov
leave
cmp
inc
mov
xchg
xchg
jmp
mov
cmp
jno
out
xor
loope
test
sub
aam
jge
mov
sbb
(bad)
mov
cmp
mov
outs
jbe
jp
imul
fs
dec
sub
dec
ins
jmp
lock
jb
call
mov
xor
leave
jae
and
xor
or
push
movs
out
loop
pop
push
nop
mov
xchg
add
(bad)
movs
stos
dec
add
jmp
imul
inc
pop
pop
jp
std
mov
pop
and
or
add
leave
pop
iret
arpl
ins
test
(bad)
fmul
data16
inc
(bad)
retf
lods
sbb
leave
jge
mov
sbb
sbb
shl
(bad)
mov
lock
(bad)
scas
mov
xchg
push
sbb
pop
arpl
mov
push
ins
jg
cli
push
sar
inc
cmp
rep
inc
inc
mov
pop
pop
add
and
jl
fwait
sbb
(bad)
clc
leave
enter
jp
mov
and
lods
aad
sub
fistp
or
push
pop
push
jg
lods
push
sbb
outs
cmc
cli
or
into
cwde
push
shl
adc
stos
cmps
imul
gs
icebp
aaa
rcr
jecxz
or
add
inc
mov
fisub
and
(bad)
mov
cmp
dec
or
sbb
(bad)
cmp
imul
jns
arpl
mov
repz
mov
test
inc
ins
or
scas
iret
mov
movs
outs
and
mov
frstor
add
push
ret
jp
call
push
shl
icebp
mov
aaa
push
enter
ins
cmps
fcomp
bound
test
dec
imul
sub
lods
jns
adc
(bad)
(bad)
cs
and
fs
das
shl
test
enter
adc
std
xchg
stos
cwde
push
(bad)
loope
fldenv
sbb
fisub
(bad)
jnp
pop
(bad)
out
test
xor
bound
aam
out
add
lock
shr
bound
push
das
dec
mov
cs
mov
or
pop
add
std
mov
sub
fild
cmps
dec
push
add
dec
mov
or
adc
fdivr
push
push
cmc
movs
push
push
pop
mov
mov
xchg
xchg
xchg
xor
cmc
cmps
fbld
icebp
xchg
push
push
jge
jg
dec
mov
add
dec
sbb
nop
dec
xchg
outs
or
cmps
iret
mov
movs
outs
and
mov
frstor
push
fdiv
mov
jle
jnp
xor
sub
mov
mov
sub
pop
std
mov
icebp
int
push
shl
mov
fdivr
mov
shl
mov
leave
fdiv
rcr
dec
fdivr
aad
dec
int3
fidivr
dec
dec
lock
dec
sbb
and
pop
jle
pop
loopne
loope
pop
sti
sbb
das
mov
sbb
sahf
cmp
xlat
in
into
std
clc
xor
mov
inc
repz
cs
adc
sub
mov
pop
mov
pop
or
adc
mov
dec
push
dec
mov
sbb
(bad)
sbb
scas
pushf
sub
or
stos
add
mov
lods
cmp
pushf
inc
push
bound
cli
mov
cld
sar
leave
test
cmp
ins
cmp
idiv
fnstenv
rol
adc
inc
vpunpcklwd
cdq
cmp
(bad)
adc
push
inc
fistp
mov
div
retf
cmp
fadd
std
iret
rol
mov
(bad)
xor
aad
je
je
or
sbb
xor
shl
dec
call
and
mov
pop
mov
out
xchg
jmp
in
xchg
inc
or
sub
mov
jmp
cli
rcr
cmps
ins
hlt
sar
dec
scas
and
(bad)
hlt
ss
push
int3
pop
push
aam
pusha
xor
sbb
mov
pop
dec
mov
rol
in
pop
daa
pusha
into
or
sbb
adc
add
(bad)
and
repz
sahf
cvttps2pi
out
idiv
rcr
mov
inc
fisttp
mov
int3
mov
mov
out
xchg
popf
sub
pusha
mov
cmp
addr16
mov
call
fisttp
shl
imul
inc
sar
loopne
push
aas
or
mov
push
test
jo
aam
(bad)
fwait
arpl
push
fisttp
push
mov
fnstsw
add
cmp
dec
xor
cld
xchg
and
mov
inc
inc
shl
mov
repnz
cmp
hlt
adc
add
mov
clc
movs
jo
mov
inc
mov
mov
xchg
dec
push
pop
loope
adc
popf
test
mov
xor
bound
cmp
fisub
stos
cld
cmp
jecxz
div
sbb
aad
xchg
jno
ror
mov
inc
or
inc
xchg
repz
neg
cdq
test
cdq
sbb
(bad)
sar
sbb
cmp
push
call
jle
(bad)
(bad)
out
(bad)
in
imul
adc
jle
(bad)
(bad)
jmp
stos
cmp
pop
jecxz
idiv
mov
jne
push
rol
movs
stos
xchg
call
xor
dec
and
push
clc
pop
mov
adc
dec
in
cmp
or
jecxz
idiv
mov
jne
push
rol
mov
bound
std
or
mov
inc
imul
mov
cmps
loopne
arpl
mov
rcr
(bad)
push
jne
inc
sbb
cmps
pop
inc
and
pop
rol
mov
sub
nop
push
jecxz
ret
cld
pushf
in
mov
mov
aam
call
ror
xor
and
mov
xor
retf
pop
nop
icebp
ins
stc
or
addr16
mov
repnz
mov
gs
std
jle
fisubr
and
outs
pusha
mov
jp
stc
movs
cmps
fwait
jge
push
pusha
jl
mov
ds
xor
mov
(bad)
repnz
les
stos
cmps
pop
dec
pop
mov
movs
jne
mov
push
push
arpl
jmp
dec
test
jae
shl
add
inc
pushf
xor
push
jae
sub
out
xor
push
jb
xor
sahf
mov
jo
cli
cwde
jo
aas
push
sub
or
imul
xor
movs
fnstsw
push
xor
dec
mov
push
xor
daa
and
ret
dec
ja
cmps
sbb
leave
xchg
rcl
ret
cli
nop
lahf
xor
mov
call
cmp
mov
dec
jnp
or
inc
or
sbb
ret
les
in
dec
push
sahf
mov
mov
arpl
pop
push
popf
cmp
push
nop
xor
adc
cmp
jp
repz
jmp
xchg
dec
dec
add
or
lods
adc
push
xor
fwait
mov
ins
in
retf
jo
xchg
jnp
mov
pop
int
inc
adc
sbb
das
lea
cmp
(bad)
test
sar
pop
ret
add
imul
aam
xchg
ja
mov
and
cld
not
lods
mov
xor
imul
test
dec
leave
enter
lds
or
test
ins
stos
mov
jle
and
ins
(bad)
shl
add
lahf
or
cli
cmp
inc
cmp
mov
mov
push
loopne
mov
and
mov
pop
xor
rcl
cs
mov
dec
fnstenv
mov
mov
fstp
add
sar
enter
pop
or
inc
or
(bad)
inc
inc
inc
xchg
cdq
sti
je
int3
inc
add
gs
je
inc
mov
push
mov
mov
add
iret
nop
das
pop
(bad)
int3
jno
outs
mov
ror
dec
fs
push
icebp
inc
inc
fldenv
xchg
xchg
add
ins
clc
or
cli
dec
mov
sub
dec
inc
sub
dec
inc
sub
dec
inc
sub
dec
inc
sub
dec
inc
sub
dec
inc
sub
dec
inc
sub
dec
inc
sub
inc
inc
sbb
and
clc
add
or
mov
(bad)
push
test
ret
fwait
das
jecxz
mov
mov
aam
jle
or
xlat
imul
std
cli
sbb
fldcw
aaa
cmp
cli
adc
sub
fisubr
jns
nop
dec
fnstcw
cwde
inc
enter
fdiv
mov
fdivr
mov
dec
shl
mov
int
cmc
ss
push
je
inc
and
mov
add
jl
dec
pop
xchg
call
test
pop
enter
add
stos
ret
ror
pop
inc
movs
dec
dec
inc
int3
out
hlt
mov
mov
cmp
jecxz
fucomp
push
dec
in
inc
push
sar
mov
stc
outs
movs
push
ja
aaa
inc
clc
retf
pusha
aaa
add
cmp
std
jae
pop
fld
repz
shr
aam
movs
lock
rol
sub
dec
daa
xchg
(bad)
inc
sbb
test
or
imul
test
hlt
and
inc
fild
fld
addr16
loope
pop
mov
(bad)
cld
movs
repnz
xor
pusha
jecxz
dec
dec
and
mov
cli
add
into
movs
nop
xchg
lds
lock
push
data16
retf
add
cmp
and
mov
movs
adc
adc
or
mov
push
sar
scas
jnp
sti
stc
nop
shl
ins
mov
leave
test
or
pop
cld
jne
icebp
lods
dec
sar
dec
add
repnz
lods
cmp
sub
pop
call
sbb
ins
inc
into
pop
sub
addr16
jae
cwde
call
inc
add
dec
loop
shr
mov
cmp
fmul
ins
std
stc
mov
popf
(bad)
dec
hlt
inc
test
add
pop
icebp
rcr
in
or
inc
inc
push
jnp
ret
shl
sbb
dec
push
sub
cld
mov
adc
or
js
out
jns
or
ret
iret
push
fs
stc
int3
xor
add
cli
das
jne
pop
stc
repz
icebp
stc
inc
int3
int
inc
mov
sub
xor
shl
out
aam
xor
stos
(bad)
jo
cmp
push
(bad)
leave
je
mov
adc
popf
mov
xchg
pop
maskmovq
imul
es
and
or
inc
xor
or
xchg
fld
fscale
sbb
push
pop
gs
clc
xchg
cmp
cmp
(bad)
sbb
cmp
cld
add
ror
cmp
xchg
push
or
stc
ret
std
(bad)
lods
mov
mov
cmp
dec
lods
cmp
xchg
push
or
add
ror
cmp
xchg
push
or
pusha
jl
or
cmp
sbb
dec
xor
jl
jl
or
cmp
sbb
(bad)
repz
in
imul
and
lods
adc
movs
mov
xchg
sbb
push
mov
hlt
xor
adc
movs
mov
xchg
pop
adc
adc
popf
push
xor
je
inc
dec
push
shr
(bad)
or
bound
shr
movs
aaa
push
or
and
adc
shr
push
inc
xor
mov
fs
(bad)
mov
adc
mov
jmp
fsub
ins
outs
pop
in
jbe
pop
sti
jp
inc
sbb
loop
jb
loop
jge
outs
ds
rol
in
leave
mov
add
sub
sbb
dec
stc
mov
mov
mov
adc
jg
in
push
xchg
fstp
test
push
addr16
add
adc
xchg
pop
add
mov
xchg
jg
jp
shl
dec
or
cmp
cmc
aas
repz
xchg
add
lods
push
addr16
ret
in
ins
dec
aad
js
sbb
icebp
push
jns
out
loope
add
sar
mov
retf
dec
add
(bad)
loope
or
std
dec
fstp
pop
sti
inc
retf
push
leave
pop
push
mov
mov
out
aad
repz
int3
push
(bad)
push
jo
jb
jo
push
xor
push
adc
loop
movs
inc
mov
and
inc
sub
addr16
(bad)
jno
rol
test
adc
xor
adc
xor
xchg
retf
arpl
cmp
(bad)
ds
idiv
xchg
pop
test
sar
pop
and
push
repz
dec
dec
xor
ss
ret
lock
shl
sub
std
dec
push
clc
xlat
imul
fistp
xor
retf
pop
retf
stc
shr
pop
mul
outs
mov
lods
mov
mov
mov
scas
cwde
push
cmps
lods
ret
arpl
out
mov
or
xlat
mov
sar
fcmovnb
dec
jo
pop
add
push
add
das
test
sub
loop
dec
xchg
fistp
jb
aaa
cs
out
and
mov
or
lds
pop
fdivr
mov
shl
mov
iret
pop
je
(bad)
pop
jae
retf
xor
jp
dec
pop
sti
clc
mov
push
in
arpl
sbb
aas
xor
xchg
xchg
movs
or
mov
jle
push
pop
sub
sbb
cmp
pop
adc
xchg
ret
les
cmp
pushf
lds
sbb
inc
fadd
xchg
int
add
mov
jbe
jg
fdivr
inc
jp
sbb
dec
mov
pop
xor
mov
sar
mov
xchg
fs
loope
and
(bad)
mov
(bad)
push
inc
and
pop
js
inc
xor
mov
mov
icebp
imul
and
out
sbb
(bad)
mov
lea
mov
mov
inc
retf
fcomp
dec
ret
and
push
outs
sbb
jmp
and
stos
inc
fld
xchg
sbb
ficom
push
xchg
cmc
cmc
test
dec
adc
fwait
push
ins
mov
mov
sbb
daa
in
cmps
iret
sti
add
icebp
dec
push
push
pusha
cmp
pop
ror
add
jmp
sub
icebp
or
test
inc
jmp
mov
pusha
ins
test
fdivr
sti
inc
mov
add
mov
cmp
sahf
mov
idiv
stos
sub
mov
xchg
jnp
loop
mov
or
fimul
push
adc
inc
stc
nop
nop
int
cdq
cmp
out
mov
cwde
dec
push
fstp
inc
test
lock
push
dec
and
pop
(bad)
push
imul
fs
mov
lds
sub
lods
mov
in
outs
rcr
hlt
inc
jp
call
arpl
lock
jbe
pop
stc
xor
leave
mov
push
cmp
dec
(bad)
adc
out
jno
(bad)
out
push
loop
std
nop
sbb
mov
or
test
rol
mov
mov
ror
mov
adc
mov
cs
xchg
jl
jmp
(bad)
push
adc
mov
mov
mov
or
mov
or
mov
or
mov
or
mov
or
lds
add
mov
dec
pop
and
inc
pop
and
inc
pop
and
inc
pop
and
inc
pop
and
inc
pop
and
xor
push
loope
call
xor
enter
and
adc
cmps
pushf
xor
xchg
xchg
sbb
xchg
(bad)
je
mov
ds
dec
js
gs
mov
clc
stc
xor
int3
jmp
imul
mov
jbe
mov
adc
push
mov
rcl
ins
rcl
ins
ror
stc
loope
jecxz
jmp
xor
add
mov
(bad)
stc
adc
test
dec
push
sub
push
sti
into
cmps
mov
aam
in
int3
mov
xchg
sbb
xchg
jmp
lods
push
dec
push
ret
(bad)
cmp
scas
inc
sbb
hlt
dec
fadd
mov
rol
inc
movs
scas
sub
sub
mov
daa
stos
mov
imul
or
mov
pop
rcr
rcl
adc
or
dec
push
ret
mov
xchg
test
cmc
scas
and
out
cmps
clc
cmps
cld
xchg
sahf
mov
test
cmp
adc
pop
or
jge
repz
sub
xor
enter
push
add
xchg
les
cmp
fld
movs
pop
sub
push
jg
stos
inc
inc
jmp
jae
add
out
mov
xchg
pop
fst
lahf
sub
xor
hlt
shr
rcr
(bad)
movs
add
push
cmp
sahf
iret
xlat
add
sti
fwait
nop
vaddpd
enter
mov
sub
mov
pop
cmc
mov
push
clc
cmc
mov
fdivr
mov
inc
shl
dec
shl
retf
pop
stc
aaa
dec
fdivr
dec
pop
clc
dec
int3
fidivr
dec
dec
mov
adc
sub
cmp
pusha
fs
jge
inc
stos
xor
retw
xchg
enter
mov
sub
adc
push
add
dec
lds
jle
scas
mov
leave
(bad)
cmps
das
cmp
mov
test
cmp
mov
and
icebp
stos
jle
inc
jle
test
add
mov
leave
lahf
cmps
icebp
push
push
push
pop
out
cwde
(bad)
xor
daa
cmps
push
jecxz
lahf
(bad)
dec
xchg
in
mov
sub
lea
call
icebp
inc
mov
and
shl
jmp
xchg
dec
add
leave
cli
pop
pop
jecxz
dec
dec
retf
in
lods
push
mov
jb
mov
xor
popa
repnz
sbb
fcom
xchg
(bad)
jg
jbe
mov
pop
add
adc
mov
jl
cld
mov
mov
jns
jne
jg
repnz
aam
and
cli
adc
mov
(bad)
stc
dec
in
xchg
mov
inc
sub
int
stc
mov
fnstsw
jecxz
outs
sub
cmp
js
imul
add
inc
mov
adc
pop
add
lods
inc
mov
sub
stc
fiadd
mov
loope
iret
lea
in
inc
clc
imul
fistp
push
rcl
push
inc
adc
xor
mov
ins
nop
movs
call
and
leave
je
sbb
lods
aaa
test
sub
jnp
jg
lods
mov
inc
sysexit
out
fcomp
fidiv
lods
push
ret
into
pop
ins
shr
mov
push
std
sbb
inc
xor
jmp
push
jmp
stc
rol
xor
dec
dec
xlat
and
sbb
pop
shl
mov
mov
rcl
ja
pop
mov
mov
or
neg
fisubr
jecxz
out
push
in
jmp
xchg
adc
outs
dec
shl
cmps
aam
pop
ror
cwde
push
or
addr16
xchg
sbb
jns
mov
scas
mov
mov
or
add
out
cmp
into
ja
std
mov
scas
fld
ins
mov
xchg
inc
push
repnz
test
shl
dec
fld
in
sar
out
jbe
loopne
mov
or
mov
mov
jmp
xchg
sbb
lea
xor
movs
test
push
frstor
or
dec
xchg
inc
enter
xor
sahf
fs
shl
and
retf
add
add
cmp
cmp
loope
movs
mov
sub
aaa
push
mov
mov
and
aam
xchg
data16
fdivr
(bad)
in
jge
hlt
scas
inc
rcl
mov
js
inc
pop
or
jge
dec
dec
add
sbb
xchg
and
fimul
mov
mov
adc
adc
jg
frstor
popf
test
inc
ror
mov
out
jle
adc
sbb
and
daa
enter
ja
das
xchg
stos
(bad)
fsubr
cmp
outs
(bad)
adc
out
gs
xchg
retf
and
or
or
call
sbb
jge
popa
dec
cmp
scas
and
mov
cmps
data16
xchg
out
pop
jl
pop
sbb
adc
dec
sub
stc
in
xor
or
clc
fwait
sahf
in
in
xchg
arpl
js
mov
aam
mov
in
rcl
cld
pop
(bad)
call
or
and
cld
lar
mov
fstp
xchg
mov
mov
lds
jp
xor
in
mov
pop
inc
mov
iret
jmp
mov
adc
jmp
arpl
push
add
lock
ds
clc
nop
rcr
outs
dec
loope
(bad)
(bad)
es
(bad)
xlat
inc
push
js
mov
cdq
sar
pusha
js
mov
xchg
iret
aam
jmp
add
mov
popf
in
or
pop
jbe
lock
je
fldenv
dec
pop
mov
dec
out
cmp
inc
add
ins
push
push
retf
xchg
loopne
pop
inc
stos
xchg
cmp
shl
je
imul
out
ds
call
xchg
inc
in
dec
jmp
mov
pushf
ins
xchg
sbb
inc
in
dec
ja
xlat
xor
inc
call
jb
mov
cmp
loopne
(bad)
xlat
dec
frstor
or
fxtract
lds
or
push
pop
xor
push
mov
push
inc
mov
gs
pop
push
jbe
cmps
clc
ret
rcr
lods
ret
push
xor
shr
sbb
jno
pop
(bad)
xchg
ins
repnz
cmp
mov
test
pop
sar
gs
std
mov
les
out
inc
lock
outs
(bad)
mov
in
test
or
test
xor
cli
shl
sar
or
fwait
mov
jmp
shr
jmp
jno
sub
push
mov
jge
mov
jmp
xor
test
push
sbb
loop
cmp
or
xor
sbb
outs
inc
repnz
mov
dec
mov
movs
cmp
js
xchg
sar
retf
test
inc
sbb
test
xchg
cmp
jae
jo
pop
jns
mov
in
aad
cmp
(bad)
xchg
push
fs
not
jmp
xor
jmp
aaa
sub
push
shr
adc
cwde
retf
sub
hlt
xor
aaa
div
mov
cmp
xor
jno
push
iret
sbb
(bad)
test
push
repz
and
pop
fistp
(bad)
fcmovnb
loop
sar
hlt
pop
add
mov
ds
scas
ret
enter
mov
in
outs
adc
mov
pop
(bad)
ret
out
jae
scas
adc
inc
das
sbb
jo
(bad)
xor
shl
mov
cwde
(bad)
inc
add
mov
push
shl
push
clc
in
pop
lock
nop
imul
adc
lods
fadd
sub
sbb
movs
cmp
pop
jne
repz
adc
test
jo
js
sub
jo
dec
in
in
fwait
neg
cwde
pop
lock
arpl
pop
adc
js
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
sbb
sar
mov
shl
fcmovne
jne
inc
push
cmc
inc
pop
fcomp
mov
shl
mov
fdivr
mov
sar
mov
inc
nop
in
jnp
fidiv
fdiv
mov
fdivr
mov
sar
mov
inc
lock
pop
loopne
push
inc
sar
sar
mov
push
stc
mov
xlat
std
xor
sbb
push
test
xor
(bad)
mov
sar
mov
inc
jo
cld
and
add
push
clc
mov
aam
mov
lock
shl
xor
repz
sub
push
jno
hlt
(bad)
mov
inc
xor
jo
jp
mov
sbb
push
pop
outs
in
cmp
icebp
rcr
aaa
sti
mov
sar
mov
or
je
push
jne
pop
rcr
imul
mov
std
mov
sar
mov
dec
mov
jno
sbb
repz
mov
xlat
std
mov
mov
fbstp
out
dec
mov
lea
jecxz
sahf
mov
add
mov
pusha
outs
cdq
adc
jb
sbb
sbb
or
jbe
out
(bad)
pop
js
(bad)
mov
(bad)
mov
inc
cmp
test
(bad)
mov
retf
jp
imul
daa
pop
sub
out
jg
mov
sub
pop
adc
or
inc
mov
fisub
sbb
cmc
sbb
repnz
popf
outs
or
or
pop
test
outs
jo
xor
mov
sbb
mov
cmp
mov
push
sub
imul
adc
cmps
jecxz
stos
out
stos
hlt
adc
jbe
aaa
mov
mov
push
mov
adc
lods
and
adc
(bad)
ss
dec
jl
outs
int
das
test
mov
pop
mov
cmp
movs
leave
jne
jge
xchg
push
cmp
and
and
test
fwait
inc
(bad)
out
sbb
iret
stc
mov
retf
aas
icebp
add
mov
sub
inc
jo
mov
in
push
push
pushf
sar
dec
lods
leave
jne
jl
add
mov
xor
jo
cmps
neg
cmps
and
lock
cli
jmp
mov
dec
test
sub
pop
pop
and
ins
sbb
mov
fsub
ja
ins
out
pushf
in
sbb
and
xchg
adc
pop
nop
cmp
out
les
sbb
lock
or
mov
adc
ins
neg
inc
dec
fild
mov
cld
test
cwde
call
fdiv
out
(bad)
jl
sbb
retf
push
jmp
pop
xor
stc
test
out
xor
das
push
in
daa
fdivrp
movs
xchg
(bad)
xchg
mov
loopne
test
div
scas
and
inc
inc
aad
sbb
xchg
fistp
xchg
stos
(bad)
fdivp
or
stc
jmp
pushf
rcl
jno
xor
pop
cs
ja
inc
mov
fbstp
in
cmps
retf
add
inc
or
jl
fist
cmp
mov
lock
jl
fs
add
sub
loope
mov
movs
sbb
sahf
outs
push
sub
dec
imul
out
push
movs
retf
mov
jge
sub
ds
std
or
inc
xchg
sub
hlt
std
or
pushf
fsubr
stos
sbb
movs
sub
or
(bad)
call
sti
daa
mov
test
mov
(bad)
dec
sbb
mov
push
ja
xchg
dec
nop
adc
jae
cmps
sub
adc
(bad)
mov
inc
cwde
add
ss
mov
sub
lds
arpl
in
inc
rcr
mov
pop
sar
mov
lock
mov
imul
jnp
jl
jmp
clc
mov
enter
inc
cli
sbb
std
cs
repnz
fsubr
and
dec
cld
cmp
bound
pop
adc
xlat
std
cs
cmp
add
cli
or
js
lock
iret
push
mov
das
or
or
mov
sub
xor
lahf
and
lds
pop
push
imul
inc
and
adc
ror
push
ror
xchg
out
mov
push
push
arpl
test
aaa
imul
mov
mov
jge
cmp
int
les
inc
cmp
sub
sub
repz
cmps
adc
js
(bad)
outs
xor
bound
fldcw
sub
lods
ins
ins
popf
mov
xor
test
dec
loop
push
sti
std
sbb
and
and
popf
mov
std
xchg
inc
enter
pop
mov
shl
xlat
push
fs
scas
push
sahf
adc
jmp
sub
add
jno
jnp
sbb
mov
imul
push
add
mov
pop
jge
test
icebp
fisub
fucomp
sbb
sub
test
hlt
push
push
cmp
ins
in
lock
inc
pop
inc
cwde
or
mov
retf
jo
push
sti
inc
xchg
and
jbe
mov
jno
jp
push
fs
adc
aas
and
(bad)
mov
outs
(bad)
cmp
mov
pop
cmp
pop
dec
pminsw
popf
jbe
sbb
in
in
dec
inc
aad
out
jmp
out
push
lock
sbb
inc
inc
mov
inc
xor
scas
adc
cdq
pop
imul
popf
popa
push
int3
sub
jb
jecxz
sbb
sub
push
add
sahf
or
or
loopne
adc
lock
xor
sahf
or
sub
add
jge
cmp
xor
mov
ss
inc
inc
into
ins
or
test
pop
dec
call
out
mov
cmps
int
pop
mov
jae
dec
adc
test
std
scas
inc
or
add
je
dec
movs
cmp
movs
(bad)
outs
mov
stc
xchg
fs
js
jmp
mov
fsubr
iret
sti
ins
iret
inc
lahf
add
sar
or
pusha
stos
test
dec
(bad)
retf
jb
fst
xor
and
aam
ja
push
xchg
inc
pop
and
add
push
es
cld
jns
sbb
and
test
(bad)
nop
popf
pushf
lock
loopne
inc
add
push
fnstenv
adc
lods
add
stc
pop
mov
call
sbb
adc
jp
mov
in
lods
cwde
icebp
pop
aas
scas
add
jmp
cmps
fld
cli
and
loope
in
jp
pushf
adc
test
cmp
mov
pusha
sbb
rol
sbb
adc
je
das
or
ins
loopne
dec
cmps
dec
lds
add
ins
mov
push
fcom
jnp
aaa
and
cmc
lea
push
xor
sub
out
add
arpl
jecxz
inc
adc
cmp
sbb
inc
jno
into
dec
adc
nop
jle
jns
dec
or
jl
and
movs
push
mov
jo
jmp
ret
cli
test
mov
shl
add
cwde
cwde
cmps
pop
pop
pop
fidivr
out
jns
sub
movs
or
sbb
dec
adc
pop
ds
cld
sbb
call
xor
xchg
les
jp
jnp
enter
cmps
ror
xchg
fstp
mov
fcmovne
xchg
pop
sbb
repz
jno
sbb
sub
mov
jp
fcomp
or
add
xchg
mov
sbb
push
ss
and
mov
pop
aaa
add
mov
pop
int3
sahf
movzx
push
xor
test
push
xchg
in
ja
add
hlt
pusha
cdq
mov
icebp
xchg
and
imul
ja
jbe
and
repz
inc
call
pop
std
mov
dec
sbb
imul
mov
shl
mov
pop
shl
clc
in
xor
js
dec
dec
je
pop
shl
int3
pop
hlt
mov
icebp
fs
push
loop
push
sub
mov
add
hlt
push
dec
pop
inc
push
bound
cmp
add
xchg
ss
pop
cwde
push
dec
sbb
mov
jnp
dec
test
sbb
pop
cmp
fs
into
cmps
stos
(bad)
push
lods
mov
sub
inc
pop
es
ret
(bad)
mov
sub
repz
mov
(bad)
xchg
test
xchg
lock
or
adc
inc
imul
ret
xchg
mov
out
pop
iret
loop
inc
xchg
shr
psubsb
cmp
mov
pop
cmp
and
adc
aas
daa
jmp
pusha
sbb
daa
leave
(bad)
aad
mov
(bad)
in
outs
and
adc
dec
sbb
cli
loop
xchg
fwait
das
add
add
jne
aaa
fiadd
sbb
jb
stos
das
xchg
(bad)
shl
daa
cli
sub
push
iret
jecxz
add
leave
mov
scas
add
push
aas
fdiv
arpl
cmps
sbb
push
xor
cmps
stos
cmps
mov
ja
call
loop
push
sbb
mov
lea
fisubr
daa
fprem1
shr
xor
jecxz
push
xor
cmp
cmp
loope
xchg
xchg
pop
mov
mov
mov
bound
dec
push
test
jecxz
adc
sahf
pusha
lods
sub
stc
and
out
fwait
and
mov
shl
test
cli
sub
out
mov
cmp
pushf
and
shl
xlat
mov
add
mov
jge
int
pop
fisttp
imul
pop
jbe
cmp
xchg
inc
sar
test
mov
inc
aam
out
add
(bad)
sbb
adc
xor
(bad)
pushf
call
pop
mov
push
jbe
stos
ret
icebp
xor
jge
sbb
mov
pop
ja
xor
(bad)
fdivp
into
mov
xor
add
in
int
cmp
push
mov
retf
popa
retf
movhps
fmul
mov
cmp
sub
js
cmp
xchg
and
cmp
aaa
mov
and
pop
aaa
cmp
lods
jne
push
dec
jge
scas
fst
repnz
dec
clc
jo
mov
mov
cmp
xor
pop
jns
sub
pop
shl
stc
sbb
popf
xor
bound
in
outs
shr
push
or
(bad)
out
stos
push
lods
adc
sbb
daa
jl
call
retf
aaa
out
add
adc
in
mov
dec
arpl
and
imul
cdq
add
jmp
ins
xchg
jno
jae
not
sahf
jg
push
cmp
lahf
je
(bad)
das
add
imul
mov
push
bound
adc
in
jmp
mov
and
and
sub
loop
mov
cmp
or
sub
pop
ins
in
les
jp
movs
in
test
mul
mov
es
inc
outs
mov
dec
lock
loop
lds
rol
stos
(bad)
pusha
sahf
mov
push
mov
push
stos
inc
xchg
pop
xor
add
imul
xor
in
fimul
iret
jmp
leave
out
push
and
xchg
mov
ja
gs
sbb
jns
sar
push
std
pop
mov
dec
fs
inc
mul
(bad)
scas
mov
or
mov
pop
iret
adc
cmc
fwait
add
test
sub
pop
mov
jp
pop
mov
out
sbb
xor
lods
adc
mov
xchg
pop
sbb
cmp
mov
jnp
cli
jmp
xchg
call
inc
xchg
pop
lea
xor
test
(bad)
adc
lds
call
cwde
enter
pop
jne
pop
popf
xor
sbb
cmps
push
addr16
xchg
push
mov
mov
jmp
push
js
dec
gs
xchg
sub
in
ins
std
cmps
fld
jmp
cdq
jne
dec
adc
push
inc
ds
aam
in
(bad)
sbb
int3
cmps
jmp
stc
sbb
sahf
sahf
xor
jbe
jmpw
adc
bound
mov
(bad)
push
rcl
xchg
call
lock
stos
cmp
mov
aam
clc
add
pop
cmp
loop
pop
sbb
mov
lahf
push
add
or
mov
icebp
mov
jae
xchg
pop
in
not
push
pop
xor
data16
pop
icebp
pop
retf
or
retf
test
sbb
push
cmp
popa
adc
iret
int
hlt
test
dec
push
fwait
xchg
aad
addr16
jmp
mov
push
adc
jb
inc
pop
or
movs
or
mov
cmp
push
aas
xchg
mov
cmps
test
sub
aam
in
push
mov
sub
mov
cmps
inc
inc
out
aas
xchg
mov
loop
sbb
in
cmp
inc
daa
dec
stc
mov
mov
fld
dec
mov
xchg
xor
std
jle
mov
push
stc
pushf
jno
mov
rcl
or
mov
xor
aaa
rol
std
dec
ins
arpl
lods
pushf
and
imul
jle
ss
adc
inc
push
ins
and
or
mov
imul
sub
cmp
sub
and
push
cs
pop
push
movs
and
jecxz
fcmovu
jmp
test
sub
mov
mov
cli
jnp
fldcw
and
mov
mov
push
cmp
pop
sti
mov
cmp
(bad)
mov
lahf
icebp
movs
add
mov
leave
mov
xchg
xor
add
sub
fdivr
inc
push
push
lea
pop
fcomp
jmp
sti
lods
sub
pushf
jae
mov
push
xor
das
dec
aam
ins
and
stos
dec
cmps
clc
dec
xchg
in
mov
(bad)
pushf
mov
jbe
push
pushf
dec
inc
retf
mov
(bad)
pop
and
mov
inc
retf
pop
nop
aad
arpl
cmc
mov
pop
fdiv
fdiv
fmul
ins
cmp
shl
(bad)
fdiv
dec
int
stos
rcl
mov
jb
out
das
inc
dec
jae
aam
mov
dec
push
cmp
nop
repz
push
lock
stos
int
push
cwde
out
adc
mov
imul
rdtsc
inc
fwait
daa
adc
xchg
(bad)
arpl
std
jae
mov
in
dec
retf
xor
(bad)
sub
pmulhw
std
pushf
movs
or
sbb
test
clc
jecxz
js
sub
or
rol
loope
xchg
dec
scas
jmp
aas
xlat
add
mov
fcom
lock
out
push
dec
fbstp
add
out
push
ficom
cmp
mov
sar
adc
sbb
stos
das
pop
add
shl
jno
jg
sahf
mov
pop
sbb
mov
fwait
out
call
mov
lahf
jge
les
ror
or
mov
or
mov
bound
fwait
jns
jge
dec
xchg
int3
(bad)
call
repnz
sub
jmp
xor
dec
adc
inc
jbe
popa
loopne
and
add
retf
sbb
dec
fimul
jge
mov
sub
push
ins
mov
sti
das
ja
and
(bad)
ret
or
pusha
pop
(bad)
push
cmps
or
inc
fdiv
int
xor
ins
int
adc
mov
shr
push
rol
mov
jp
and
fprem1
call
add
lods
or
stos
or
ins
adc
movs
add
add
stc
jmp
sbb
ins
iret
push
push
fxch
xchg
jmp
mov
loop
and
pop
jmp
dec
jne
imul
imul
or
outs
aaa
xchg
pop
or
retf
jge
fnstenv
outs
mov
push
cmp
int3
cdq
add
xlat
fmul
call
dec
jmp
lds
mov
jns
mov
mov
push
addr16
cmps
call
imul
adc
in
ret
inc
cmp
fsub
mov
scas
xchg
(bad)
call
pop
cmc
popa
mov
pop
adc
loopne
add
inc
xchg
mov
in
call
push
dec
and
into
(bad)
and
add
in
ja
cwde
sbb
into
imul
mov
xor
push
inc
and
repz
scas
jo
popf
xchg
or
ins
adc
or
mov
mov
aad
xchg
mov
fwait
data16
inc
popf
dec
xor
mov
cdq
or
js
sti
lea
cmp
and
das
sbb
repnz
(bad)
jge
iret
test
stos
xlat
inc
or
movs
mov
lahf
(bad)
cmp
mov
add
cmp
rol
in
das
jo
fs
test
sub
out
or
add
scas
pop
addr16
sub
add
inc
ret
pushf
jmp
mov
mov
add
push
sub
lods
mov
jae
and
add
call
pop
cwde
xchg
mov
popf
inc
fsub
sbb
fyl2xp1
mov
movs
xlat
add
mov
jmp
call
stos
std
adc
add
enter
dec
dec
jns
ret
out
ja
or
mov
jne
push
retf
mov
sbb
xchg
ror
stos
arpl
jmp
jbe
addr16
rol
ret
dec
fsub
in
stos
in
lea
dec
pop
jnp
cmp
xor
or
push
dec
stos
xchg
pop
xlat
jno
shl
aaa
ror
mov
mov
jge
pop
retf
ins
mov
out
in
cmp
sti
add
pusha
fnsave
loop
fwait
into
sbb
(bad)
mov
(bad)
jnp
or
sbb
cs
xor
lahf
fstp
xchg
imul
out
fstp
sar
jbe
jo
movs
aad
push
je
adc
mov
(bad)
fadd
sub
jb
call
call
mov
loope
fdiv
pop
fisubr
dec
sub
lahf
(bad)
sbb
sbb
push
iret
sub
dec
outs
mov
jge
aam
out
je
jmp
sub
add
adc
mov
scas
aad
xor
xor
push
movs
or
scas
sbb
push
jbe
mov
es
mov
shr
aam
fst
xchg
fadd
and
ficomp
add
idiv
push
repnz
arpl
or
or
sbb
add
in
pop
ror
or
lock
stos
test
gs
xchg
sub
mov
mov
retf
les
or
cmp
ret
retf
push
adc
inc
pop
dec
lea
jno
iret
mov
mov
dec
and
iret
pop
mov
adc
cmp
jl
test
inc
adc
cmc
push
mov
ja
int
sbb
not
(bad)
lods
mov
pop
push
xchg
js
and
rol
xchg
out
cli
shl
mov
shr
call
xchg
shl
in
jns
xor
jo
mov
xchg
mov
cmc
jns
ret
ret
add
es
xor
inc
test
shl
xchg
pop
jbe
sbb
ret
or
sti
push
loopne
add
cmps
sub
in
jl
cmp
mov
stos
stos
sbb
(bad)
call
hlt
xor
lahf
iret
call
cli
shl
sbb
aas
pop
(bad)
fistp
mov
jno
xchg
inc
jb
scas
int3
mov
mov
cmc
xor
mov
ins
mov
push
xchg
inc
clc
lock
or
test
inc
(bad)
repnz
out
leave
std
xor
mov
xor
mov
out
in
add
xchg
aam
mov
push
test
fist
int3
retf
inc
dec
or
push
std
mov
es
js
nop
int3
sub
jo
and
mov
lea
cdq
xchg
rol
add
sbb
xor
xor
shr
mov
jp
ins
imul
loopne
jb
in
mov
mov
fcomp
mov
adc
or
push
mov
adc
out
(bad)
and
arpl
jmp
fwait
push
cmps
pop
pop
dec
sub
push
jecxz
shl
cli
dec
loop
dec
mov
scas
ins
mov
jp
ds
mov
mov
repnz
outs
add
cmp
dec
sbb
lods
and
clc
cmp
pusha
inc
js
and
push
(bad)
jns
jo
les
push
sub
inc
aas
ret
cmps
fisubr
ret
xchg
ret
sbb
hlt
sub
jge
mov
out
cmp
or
mov
pop
mov
and
jecxz
aad
es
aaa
push
in
inc
or
and
loope
test
fwait
push
in
fdivr
pop
imul
out
fsub
jno
mov
sbb
pop
ss
gs
dec
xor
xchg
or
(bad)
scas
in
add
xchg
aam
dec
ret
test
mov
mov
and
pop
xor
jmp
dec
inc
lea
dec
pop
xchg
pop
and
inc
mov
stos
leave
pop
mov
push
fs
cmp
adc
cmc
mov
sahf
xchg
jmp
cmps
push
pop
scas
icebp
inc
aad
pusha
mov
jnp
je
pop
jae
dec
in
xor
xchg
jle
(bad)
jmp
imul
std
jae
mov
push
test
popa
add
sahf
cmp
icebp
push
xor
xchg
mov
dec
push
gs
mov
cmp
jne
push
lds
fxch
arpl
or
push
aam
rol
jecxz
retf
std
mov
dec
jmp
shl
stos
aad
rol
loop
fist
dec
xchg
mov
mov
rcr
add
adc
inc
or
icebp
aas
lea
or
movnti
shr
stos
iret
mov
ror
mov
call
cli
retf
sub
ror
mov
bound
pushf
dec
sahf
mov
std
test
sub
in
xchg
pop
pop
push
shr
dec
cdq
imul
imul
rcr
nop
es
push
(bad)
adc
dec
iret
cmp
retf
inc
les
fld
adc
add
test
dec
clc
xchg
sbb
add
cmp
or
scas
stos
out
mov
std
cmp
imul
pop
add
cmp
(bad)
xchg
mov
add
or
or
iret
pop
or
inc
aad
repnz
or
test
movs
mov
push
inc
sbb
lods
xchg
cmp
jecxz
fnstenv
out
sub
and
mov
inc
mov
xchg
aaa
mov
pop
outs
fdivr
les
clc
xchg
cmp
mov
mov
(bad)
lods
and
rcl
rcl
inc
jecxz
les
jae
not
data16
fidiv
push
ret
dec
call
aad
jnp
cmc
mov
pop
lock
dec
shl
enter
iret
shl
int
in
rcl
rcl
adc
dec
movs
inc
stc
ins
mov
push
(bad)
mov
je
ins
aam
cld
pop
nop
ror
lods
aam
mov
loope
imul
mov
shr
pop
jne
push
dec
xchg
scas
enter
jle
inc
dec
sub
sbb
(bad)
jnp
xchg
push
xor
nop
call
sbb
inc
int3
cmp
popa
inc
xor
clc
cmc
idiv
dec
add
stos
loope
call
cmp
jbe
dec
pop
dec
dec
mov
fwait
mov
and
xor
ror
add
xor
add
pop
stc
mov
cmp
jmp
outs
outs
arpl
push
jne
sti
fidiv
mov
popa
push
inc
pop
add
jmp
loopne
nop
jge
stos
(bad)
push
test
pop
rcl
fdiv
int3
(bad)
stos
ficomp
xor
in
lahf
clc
mov
inc
cld
cs
dec
aam
mov
inc
or
and
or
call
fsub
sar
cmc
add
jo
scas
ret
jbe
in
sub
(bad)
out
lds
ins
movs
or
lahf
xor
xor
add
add
pop
sub
dec
fcom
je
or
sub
cdq
pop
rcr
xor
sar
call
cmc
call
sub
mov
xchg
arpl
fisub
retf
mov
test
sbb
mov
fwait
icebp
mov
out
xchg
loopne
inc
xor
sub
std
mov
mov
xchg
inc
pop
scas
std
inc
adc
add
aam
dec
imul
test
sbb
mov
sub
mov
jne
leave
outs
fidiv
sbb
stos
xchg
leave
fsubr
test
cmps
push
dec
ficom
cmp
lods
fild
shl
aaa
outs
out
push
lods
sbb
in
or
and
out
sar
pop
loop
push
xchg
mov
push
stc
bound
mov
push
adc
aaa
scas
dec
xor
cs
jo
push
sub
es
pop
dec
mov
and
inc
jle
int3
pop
mov
out
rcr
or
lods
mov
pop
fimul
push
sub
in
int3
mov
in
mov
sbb
xor
ja
sar
dec
in
ins
jne
xor
pop
ss
rcr
outs
out
cwde
xor
adc
adc
hlt
pop
fistp
cmp
outs
imul
inc
sbb
test
cmc
sahf
outs
test
push
loop
pop
loope
adc
leave
ret
sbb
movs
mov
rol
xchg
jle
add
adc
(bad)
js
leave
nop
inc
clc
mov
iret
push
mov
dec
push
fidiv
cmp
fisubr
cdq
add
push
ins
and
ins
inc
std
pop
fldenv
mov
xor
mov
adc
adc
lods
(bad)
mov
int
sub
jo
hlt
icebp
test
cmp
dec
adc
push
sbb
jp
xchg
xor
pop
retf
sar
test
xor
fld
mov
out
pusha
inc
push
pop
pusha
dec
adc
bound
rcr
fstp
mov
in
mov
cld
dec
popa
jb
sbb
icebp
xlat
sub
fisttp
(bad)
shl
ret
or
in
shl
fld
mov
adc
dec
adc
inc
lea
jo
mov
ret
repz
ins
pop
xor
cmc
lods
sbb
popf
mov
adc
dec
(bad)
call
dec
mov
scas
fisttp
and
(bad)
jns
jbe
sbb
nop
dec
aad
inc
mov
call
loope
aad
rcr
pop
sti
xchg
shl
inc
js
imul
push
sbb
outs
fnstenv
ds
sti
mov
pop
sbb
cwde
aas
mov
fcom
cdq
fadd
fwait
in
jb
sub
mov
ret
repnz
(bad)
sub
and
test
js
xchg
imul
imul
or
not
or
mov
jle
xor
lahf
adc
sahf
data16
xchg
jecxz
sbb
retf
xchg
mov
xor
cmps
push
jns
stos
lods
fwait
or
mov
sbb
mov
adc
xor
repz
mov
lods
and
jbe
mov
xchg
cmps
sbb
mov
fwait
loope
mov
mov
jne
jno
add
cmps
fst
je
outs
pushf
pop
xchg
push
cmps
jne
lods
fmul
or
fwait
enter
movs
mov
je
xlat
sbb
mov
test
mov
push
int3
jl
movs
mov
cmps
pop
test
mov
mov
clc
lock
push
jge
shl
addr16
push
add
fidiv
gs
push
inc
popf
add
mov
xor
stos
stos
xchg
rcr
push
retf
gs
sbb
mov
or
dec
hlt
scas
nop
sub
mov
pushf
jnp
push
ficomp
add
loop
mov
adc
pop
push
pusha
xchg
pop
mov
call
or
imul
xor
or
add
or
xor
cs
test
add
sub
cld
repz
add
sti
push
test
push
jnp
movs
sbb
mov
push
sbb
neg
mov
retf
sbb
sub
iret
cmps
pop
sbb
(bad)
call
cmc
ret
jmp
(bad)
pushf
dec
and
call
loopne
icebp
ficomp
push
jl
or
pop
xchg
movs
push
lods
add
test
ror
push
lea
inc
sub
js
sub
jae
mov
movs
mov
loope
xor
std
pop
cld
fidivr
ins
xchg
fsubr
mov
adc
jns
fsubr
or
imul
rol
mov
adc
rcr
movs
xchg
pop
inc
lods
dec
xchg
mov
lods
pop
daa
sbb
rol
push
dec
popa
out
pop
repz
push
loop
xlat
push
xlat
xchg
dec
jmp
pop
cld
mov
shr
add
fdivp
lods
mov
(bad)
cli
je
push
ja
jge
cmp
push
retf
test
push
outs
cmp
lods
cmp
cmp
sbb
mov
aam
jne
fidiv
jne
add
sbb
dec
out
inc
mov
test
test
mov
xchg
adc
cmp
push
sbb
nop
loop
sub
add
popf
push
sub
mov
jge
inc
xlat
jae
retf
push
lods
add
mov
xchg
mov
adc
inc
push
inc
inc
sar
and
cmp
cmp
push
xchg
dec
clc
adc
pmullw
dec
aaa
in
adc
cli
ins
outs
call
fnstenv
sub
dec
add
fsubr
mov
stos
out
mov
mov
sub
outs
dec
outs
dec
mov
xchg
sub
sub
pop
punpcklwd
and
int3
cli
dec
std
inc
int3
mov
sub
mov
je
pop
into
prefetchwt1
push
pop
cmovnp
push
stos
push
inc
sahf
shl
push
jmp
loop
adc
retf
in
mov
out
cmp
dec
push
push
add
test
ret
cli
or
ss
loope
retf
mov
or
jp
cdq
add
dec
xor
adc
adc
arpl
call
imul
sbb
and
in
sbb
ds
inc
xor
call
repnz
ds
fidiv
stos
sti
sahf
mov
popf
out
jns
dec
ja
xor
test
or
imul
test
mov
mov
pop
and
js
dec
lock
loopne
aam
icebp
cmp
push
mov
test
mov
xor
add
jnp
test
dec
std
mov
inc
and
ret
and
or
scas
dec
add
xor
repnz
test
jmp
cmp
scas
cdq
dec
ret
pop
dec
jl
inc
lock
add
shl
out
in
movs
xchg
sbb
and
xchg
push
jle
frstor
fs
push
loop
mov
jmp
out
adc
fadd
jmp
test
imul
bound
mov
sub
push
jmp
push
add
sub
jg
and
scas
mov
and
mov
jge
out
mov
into
sbb
fild
mov
fucomip
lea
push
jae
add
pop
xchg
cmps
mov
shr
cdq
loope
rol
arpl
or
loope
jno
mov
xchg
ror
sub
ror
push
in
mov
or
arpl
lods
je
(bad)
mov
xchg
loop
dec
mov
into
loop
cmp
xor
out
aam
dec
pop
jns
mov
popa
scas
mov
iret
ins
lds
mov
jecxz
jl
pop
xchg
fwait
sbb
cmps
push
outs
jbe
cmp
(bad)
loope
test
inc
(bad)
clc
and
sti
cdq
add
adc
push
jp
mov
or
jp
inc
add
mov
ret
mov
scas
jo
fistp
mov
ja
adc
push
test
and
xchg
jmp
(bad)
mov
out
aaa
jle
cld
add
fnstsw
sbb
jne
aad
fwait
xchg
shl
dec
(bad)
adc
pop
(bad)
mov
pop
js
es
repz
jno
fidivr
sahf
loop
(bad)
test
mov
xchg
(bad)
movs
sbb
int
xor
jp
inc
or
mov
(bad)
hlt
dec
loope
push
cmp
xchg
cmp
push
repnz
lea
jno
jge
and
pusha
adc
cmps
add
repnz
cs
dec
adc
mov
ret
ins
popf
mov
dec
xchg
setno
sahf
pop
nop
xchg
mov
les
in
(bad)
pop
xchg
push
(bad)
dec
xor
mov
out
sbb
sbb
aam
cwde
in
add
pop
jge
sub
int3
rcr
popa
add
and
xlat
loop
sbb
jecxz
cmp
dec
scas
cmp
call
xor
mov
cwde
add
pop
push
fimul
jp
add
lods
pop
or
mov
mov
or
in
aas
lahf
xor
ja
mov
repnz
outs
inc
pop
mov
xchg
and
stos
inc
cs
ins
fst
pop
lods
jmp
dec
lock
dec
neg
cmovl
jle
pop
mov
fnstenv
dec
add
mov
test
loop
popa
dec
sub
sbb
iret
mov
imul
mov
in
push
push
xchg
mov
jl
inc
enter
rcr
mov
pop
fdivr
mov
retf
mov
into
push
hlt
mov
dec
(bad)
mov
inc
dec
and
push
pop
jns
pop
fisttp
pop
pop
repz
jnp
mov
lds
lea
mov
icebp
xor
jo
aam
jp
iret
call
xchg
rol
add
mov
lds
cmp
pop
mov
adc
pop
add
or
lods
cmp
sub
popf
ins
jmp
ret
jmp
mul
push
push
mov
mov
shl
pop
inc
adc
xor
jnp
and
jmp
cmp
fsubp
dec
push
ret
fs
mov
sbb
jmp
mov
or
nop
aad
jb
(bad)
lds
and
lods
fst
retf
jb
or
add
and
sbb
push
shl
xor
rol
mov
in
adc
xor
mov
test
adc
(bad)
hlt
iret
sbb
jg
in
xlat
push
(bad)
inc
jp
in
je
sbb
push
and
aam
pop
inc
ins
mov
test
and
adc
push
movs
dec
xchg
in
inc
outs
inc
mov
imul
mov
pop
aad
push
jg
fst
mov
gs
out
and
div
jnp
sti
add
sbb
lods
cmps
sbb
and
test
push
lds
inc
adc
inc
inc
int
lock
push
and
fdiv
psllw
pop
sbb
inc
scas
dec
or
inc
dec
sub
in
adc
out
out
add
nop
jb
inc
ins
push
add
jae
jle
leave
jb
js
xchg
les
mov
dec
les
xchg
pop
jmp
test
pushf
fnstcw
add
or
pop
jb
loope
pop
int
cdq
push
inc
aad
ret
mov
inc
fwait
in
mov
call
fbld
mov
jnp
inc
mov
aad
je
xchg
in
adc
and
in
and
dec
jle
cdq
in
xchg
ss
dec
add
adc
fs
jp
xor
rcl
pusha
mov
out
pop
jl
push
inc
std
stc
repz
add
test
xchg
cwde
mov
scas
dec
pusha
jo
clc
into
icebp
mov
fnstenv
shl
mov
inc
push
jle
mov
sbb
pusha
adc
inc
xchg
push
fs
bound
shl
ds
mov
retf
(bad)
repnz
fst
adc
daa
lods
outs
aas
lods
inc
dec
push
shl
arpl
mov
nop
fs
out
shl
add
loope
clc
call
add
rcr
mov
mov
xor
(bad)
jmp
dec
dec
mov
and
inc
dec
push
pop
clc
repz
or
in
call
rcr
adc
push
pop
nop
jle
mov
cmp
or
mov
div
xor
loope
test
fadd
adc
in
and
jmp
cli
sub
sub
add
(bad)
jg
fnsave
outs
pop
loop
sar
outs
cwde
pop
cmp
nop
aaa
inc
adc
inc
dec
fs
push
or
gs
shl
sub
in
and
aas
call
(bad)
sub
mov
ror
mov
stos
pop
sbb
jno
adc
arpl
in
inc
sbb
inc
xor
push
add
addr16
pop
stos
cmp
push
mov
cmp
sub
xchg
fiadd
xchg
cmc
jp
xchg
leave
imul
inc
jge
rcl
icebp
jno
xchg
sbb
pop
test
aaa
lahf
inc
jge
sub
movs
sub
gs
cmc
and
cmc
dec
ret
mov
fucom
push
inc
test
pop
movs
push
dec
mov
push
xchg
fcomi
push
scas
dec
outs
mov
leave
mov
pop
xchg
xor
fsubr
sbb
adc
mov
fwait
lods
nop
xor
mov
jae
and
inc
xor
xchg
fisub
inc
jg
ret
loopne
outs
or
and
mov
mov
test
outs
out
lods
imul
popf
cmp
jl
jno
push
js
hlt
sbb
lds
mov
loope
retf
mov
pop
fcomp
pop
test
scas
ror
(bad)
loopne
test
cdq
pop
sahf
sbb
xchg
cmp
clc
mul
dec
cli
add
fadd
jne
sub
push
test
adc
pop
pop
push
cwde
cmp
mov
mov
push
cmp
ror
paddsb
xchg
iret
mov
fldcw
push
cmp
cs
lods
xchg
dec
push
sbb
daa
shl
lds
sub
push
mov
inc
adc
mov
fistp
stc
cmp
fistp
jmp
xchg
dec
dec
mov
popf
jnp
jo
shl
cmp
jg
dec
adc
xchg
mov
daa
mov
and
xor
adc
repz
neg
div
pop
aaa
stc
sbb
xchg
push
outs
jb
adc
push
mov
ja
xchg
arpl
aaa
bound
xchg
pop
jb
iret
jecxz
xchg
dec
mov
clc
imul
hlt
sbb
pop
out
sbb
sub
loop
ror
mov
aaa
out
pop
jmp
test
out
jns
push
jp
cld
jns
inc
push
jne
sahf
inc
int3
(bad)
mov
sbb
enter
mov
loope
add
fwait
adc
sub
sub
aad
jmp
imul
pop
in
mov
fdivr
inc
inc
add
push
arpl
clc
adc
mov
add
jle
jge
inc
nop
gs
(bad)
pop
mov
cmps
mov
hlt
pop
call
jle
add
pop
mov
gs
ret
icebp
outs
(bad)
cmp
or
pop
xchg
shr
sub
xchg
add
shl
out
enter
adc
aam
test
inc
or
inc
inc
jge
aad
push
pop
outs
movs
ins
(bad)
adc
jmp
push
cli
cmp
loopne
jo
adc
jmp
sbb
xchg
mov
mov
dec
jl
mov
retf
or
add
dec
outs
popf
inc
and
enter
mov
cmps
or
push
into
jp
mov
in
xor
add
ins
xchg
sub
(bad)
ror
push
pop
mov
pop
mov
idiv
pop
(bad)
add
sub
mov
(bad)
stc
push
xadd
jmp
xor
ins
stc
es
rcr
pop
dec
jo
mov
pushf
push
std
cmp
inc
xor
iret
mov
sar
das
(bad)
cdq
test
xor
pop
or
(bad)
inc
jmp
mov
pop
inc
pop
jmp
int3
sbb
(bad)
clc
(bad)
repnz
dec
call
add
fadd
push
jg
sbb
aam
je
outs
test
push
mov
scas
xor
shr
int
in
cmps
jge
add
xchg
push
cmp
pushf
ins
ret
dec
(bad)
int3
imul
cmp
es
iret
jg
sbb
jmp
scas
push
jno
jp
push
mov
mov
arpl
mov
ss
xor
cmp
jmp
movs
or
scas
stos
iret
aam
sub
cmps
mov
mov
in
retf
mov
iret
mov
ins
mov
sbb
ja
pusha
inc
and
ss
shl
dec
rol
pusha
aad
call
gs
inc
sti
retf
aaa
(bad)
mov
xchg
add
in
shl
scas
and
mov
mov
dec
mov
gs
pop
xor
mov
fcomp
and
mov
and
xchg
mov
inc
outs
sahf
(bad)
std
ficom
sahf
sbb
xor
stos
mov
adc
fsubrp
inc
das
xchg
push
cdq
adc
add
out
push
mov
stos
jp
aas
mov
gs
outs
enter
and
lock
shl
ss
in
cmp
mov
and
fwait
pop
into
rol
sbb
loope
(bad)
fst
inc
jl
idiv
lds
pop
retf
cmps
push
aad
rol
jmp
shl
xchg
pop
and
in
adc
and
sbb
mov
or
add
cmp
pop
retf
cmp
adc
or
and
push
stos
call
sbb
jo
adc
dec
push
push
repnz
sbb
(bad)
jge
add
mov
mov
mov
adc
in
outs
sub
jp
cmp
or
jbe
xchg
adc
cmp
std
pop
stos
in
loope
xor
sbb
int3
inc
outs
xchg
cmps
(bad)
or
pop
add
sub
and
mov
imul
dec
out
xor
sahf
in
sub
js
addr16
jb
mov
stc
sar
add
mov
iret
cmc
mov
fsub
mov
sar
inc
lock
or
nop
bound
ins
push
or
xchg
rcr
ins
sti
mov
shl
sub
ds
repnz
movs
arpl
inc
and
cmc
lods
xchg
or
dec
hlt
into
jl
jmp
xchg
leave
mov
std
outs
stos
into
dec
(bad)
push
loop
dec
fstp
xchg
ret
adc
lock
in
fiadd
loope
outs
cmp
scas
addr16
pop
dec
lock
mov
add
daa
lds
xlat
pop
or
fimul
inc
call
adc
jno
xor
xor
(bad)
cld
sti
clc
mov
enter
fdiv
mov
fdivr
mov
shl
inc
pop
hlt
cmp
pop
div
dec
pop
lock
dec
pop
repz
pop
cli
dec
inc
fnstcw
inc
pop
or
mov
fdiv
(bad)
(bad)
mov
pop
(bad)
lods
aam
mov
or
push
repnz
into
cmp
sbb
enter
jnp
inc
or
lds
stos
imul
mov
or
int3
rcl
movs
push
lock
dec
jp
fistp
ret
cwde
xchg
mov
out
and
in
or
out
or
(bad)
pop
or
push
stos
ret
sti
mov
mov
xchg
std
mov
fs
dec
push
test
pop
mov
mov
int
xor
call
sub
sbb
movs
or
imul
pop
mov
push
into
sub
sub
push
fwait
retf
add
adc
inc
push
add
xlat
into
pop
mov
pushf
dec
ins
sbb
or
xchg
ss
call
mov
ss
(bad)
push
or
inc
sub
(bad)
push
loop
xor
ror
inc
repz
jg
loope
pop
cwde
(bad)
jmp
(bad)
sbb
aaa
aad
pop
jmp
adc
inc
mov
jne
xor
stc
cli
mov
ret
je
out
sti
popf
fisubr
jge
jb
pop
sub
or
inc
xchg
fisttp
fucomp
scas
mov
int3
fs
outs
xor
lahf
cld
xrelease
sub
loope
out
mov
imul
xchg
inc
sub
jne
inc
cwde
or
dec
fcomp
das
mov
movs
push
mov
jp
push
jp
shl
popa
push
movs
movs
lods
pop
fnstcw
mov
(bad)
cld
mov
shl
(bad)
fbstp
sub
fwait
mov
les
push
addr16
pop
push
call
push
sbb
test
fimul
dec
stos
arpl
loop
mov
xor
jge
cmp
int
les
(bad)
jmp
rcr
dec
out
shl
xchg
jo
cmps
xor
hlt
xchg
inc
enter
out
leave
test
test
sbb
aaa
mov
pop
repnz
in
sub
xor
call
dec
cmp
adc
mov
int3
mov
test
jo
call
or
fistp
xchg
fistp
(bad)
ja
cmp
mov
mov
imul
pop
iret
gs
mov
jle
aam
sub
lahf
adc
es
or
test
lods
sbb
ret
icebp
mov
ins
sub
mov
cmc
jle
fwait
or
pop
sahf
fldcw
xchg
repz
cdq
xchg
add
cli
jle
(bad)
in
jns
mov
xlat
or
std
daa
or
pop
mov
bound
aad
dec
in
fwait
jne
jae
add
int3
add
(bad)
call
or
rol
mov
inc
jge
mov
sub
xchg
jno
punpckhbw
test
in
cdq
lock
icebp
or
(bad)
std
pop
adc
cmp
adc
cmp
loop
cmova
daa
inc
dec
fwait
(bad)
fadd
add
inc
inc
and
mov
shl
inc
gs
retf
aam
add
sbb
mov
pop
ret
aam
fiadd
pop
sbb
sbb
rcl
xchg
cs
xor
add
nop
imul
add
aas
lods
xor
or
jg
or
fs
mov
xchg
int
push
sub
call
ja
add
icebp
scas
or
push
sub
popa
pop
int
aam
shl
repz
push
pop
sub
fs
movs
mov
push
jo
lock
cmps
xchg
push
or
mov
mov
mov
or
inc
mov
(bad)
cdq
mov
push
test
scas
sub
shl
xor
jne
repz
int3
outs
dec
mov
and
push
pushf
mov
into
pushf
jnp
cmp
xchg
mov
jo
scas
mov
jecxz
or
int3
pop
push
sbb
mov
frstor
call
mov
inc
push
(bad)
call
mov
push
not
cmp
fwait
mov
and
fs
cmp
inc
fst
xchg
popa
and
pop
test
retf
cwde
dec
mov
mov
std
pop
and
jle
repz
(bad)
nop
jbe
mov
sbb
jnp
push
pop
fdivr
or
(bad)
cmp
cld
shl
mov
rcl
mov
int
outs
jne
neg
jbe
std
popf
jbe
push
push
jmp
push
adc
fs
neg
sbb
and
mov
stos
jmp
xor
pop
pop
cmp
push
ins
add
sub
lods
mov
fdivr
sahf
pop
hlt
jns
xchg
out
sti
(bad)
sbb
bound
mov
mov
pop
mov
or
inc
adc
adc
xor
mul
mov
xchg
mov
push
(bad)
jmp
xchg
pop
out
(bad)
xchg
mov
mov
aas
sbb
test
pop
add
pop
outs
sbb
icebp
test
push
add
xor
xor
call
fneni(8087
adc
pushw
jne
mov
jns
jecxz
inc
cmps
outs
pop
int
shl
add
mov
or
stos
adc
adc
mov
cmp
popa
jg
ret
scas
push
mov
nop
test
rol
inc
pop
sub
push
jnp
repnz
push
push
cli
nop
mov
mov
ret
sub
lock
and
jne
(bad)
int3
cmp
fdivrp
mov
mov
and
add
jbe
mov
out
neg
mov
push
rcr
jno
inc
sar
jg
cwde
jbe
lahf
push
cmp
movs
jbe
mov
pop
jmp
add
pop
jle
cmp
sub
sbb
popa
mov
or
pop
mov
push
cmp
cli
call
pop
into
sahf
pop
pop
sbb
idiv
pop
cwde
mov
push
movs
stc
add
adc
out
jnp
outs
and
inc
jne
and
jae
inc
jns
mov
fcomip
js
adc
inc
xchg
daa
div
not
scas
mov
sbb
jmp
mov
mov
mov
cwde
add
and
repnz
jno
xor
in
push
scas
inc
cmps
xor
ja
jecxz
push
loop
pop
xchg
in
js
shl
jg
ins
or
pop
jg
sub
aaa
push
ret
loopne
mov
in
(bad)
aas
mov
and
or
adc
out
ins
push
xchg
jge
jb
ss
mov
movs
stc
push
dec
inc
cwde
mov
adc
mov
or
mov
div
ins
(bad)
dec
cli
leave
mov
push
xor
test
sbb
add
push
add
aas
mov
or
xchg
lahf
je
inc
enter
rcr
pop
fdiv
mov
inc
sar
cmp
pop
idiv
dec
fidivr
dec
fdiv
retf
fnsave
ret
mov
add
jl
dec
push
sbb
fldenv
pop
jb
cli
std
jg
xchg
mov
push
call
push
xchg
and
push
(bad)
fisttp
pop
call
pop
call
shr
cli
fist
mov
popa
bound
adc
inc
ins
mov
scas
xor
mov
xor
int
cmp
loope
xor
enter
cmp
pop
fdiv
shl
mov
dec
div
shr
test
(bad)
sbb
ja
add
aas
jmp
fsqrt
jp
retf
outs
and
fdiv
inc
rol
rcr
in
int
push
add
xlat
jp
(bad)
jmp
cmp
mov
and
movs
and
sti
push
loop
sbb
jle
jge
pop
popa
add
adc
aam
test
dec
push
jns
mov
lods
(bad)
xor
cmps
or
les
push
sbb
mov
leave
aad
js
addr16
call
shl
sub
adc
mov
cmp
mov
call
and
pcmpeqb
cmc
aad
mul
mov
popf
sbb
or
fdivr
(bad)
movs
les
mov
or
mov
and
scas
xor
cmp
xor
fcomp
xchg
mov
dec
int
adc
outs
cmp
inc
xlat
push
mov
mov
imul
push
add
jecxz
adc
xor
(bad)
jle
aas
sub
inc
mov
adc
jo
ret
fdivr
addr16
cmc
out
sub
mov
dec
jne
sbb
pop
sbb
sub
sub
call
loope
fst
mov
xchg
dec
and
and
ret
xor
addr16
xor
add
popa
int3
call
jno
add
nop
movs
xchg
mov
pushf
mov
in
ret
fwait
push
dec
pop
push
mov
sub
mov
push
fmul
fisub
jle
inc
test
shr
mov
inc
sub
jne
sbb
pop
out
add
mov
or
cmp
int3
daa
cmps
fcmovu
add
mov
(bad)
add
sub
sbb
cmove
mov
mov
mov
mov
fwait
shr
adc
loope
sbb
inc
or
cmp
push
int3
js
test
and
cmp
adc
lds
jmp
mov
or
jbe
adc
xchg
add
push
mov
cmp
xchg
mov
jb
mov
stos
clc
jle
loope
mov
scas
pop
test
test
loope
scas
xchg
and
int
fs
jbe
arpl
movs
push
sbb
ins
dec
rcr
js
jg
mov
xchg
sbb
or
cld
outs
out
enter
call
loopne
xchg
jmp
push
repnz
iret
sub
lahf
xor
loope
push
xchg
ins
idiv
mov
aad
icebp
push
and
ja
(bad)
imul
pop
jo
cmc
inc
popa
cld
fisttp
neg
xchg
loopne
in
ror
(bad)
in
and
int
fistp
dec
mov
nop
push
lds
xchg
or
dec
sbb
and
loop
cdq
push
xchg
(bad)
push
or
mov
and
jns
ins
pusha
xor
ret
cmps
rcr
out
pop
pop
lods
enter
cmps
stc
add
xchg
je
pop
adc
add
mov
sub
repz
stc
adc
cmp
cld
fmul
aad
xlat
jno
out
movs
jl
xchg
mov
sbb
iret
hlt
push
out
jmp
jns
ret
dec
call
sub
sbb
adc
jo
not
lahf
daa
or
sbb
push
cld
pop
cli
jl
scas
cs
out
xlat
adc
mov
pop
mov
add
call
retf
repz
xchg
call
ret
movs
dec
push
mov
mov
mov
cmp
stos
pop
push
and
pop
jmp
dec
fmul
dec
sub
cli
(bad)
enter
cs
mov
lock
xor
nop
dec
dec
sbb
fucomp
and
retfw
xchg
mov
mov
sub
stos
jns
vmovupd
xchg
jns
jg
sub
std
xor
(bad)
and
cmps
pop
pop
popf
inc
loopne
cmp
out
xor
fstp
fstp
jb
jb
inc
jno
mov
and
mov
fidiv
jge
ret
inc
fist
pop
stos
dec
push
xchg
dec
cmp
aad
adc
fs
inc
pop
test
jg
into
mov
cmp
push
cmp
leave
shr
movs
pop
xor
nop
xchg
int
ins
sub
dec
pop
ret
pushf
or
xchg
mov
ficom
xchg
inc
cli
jmp
repnz
icebp
cli
jo
int3
cmp
xchg
jle
sub
lahf
xchg
mov
adc
test
push
jle
bound
maskmovq
div
(bad)
xor
sub
ja
retf
mov
and
add
xchg
sbb
push
xchg
adc
movs
push
push
dec
jo
and
and
fwait
mov
lock
fldenv
jge
ja
movs
inc
mov
sar
(bad)
imul
outs
adc
pusha
jo
pop
xor
add
adc
xchg
ins
and
leave
push
test
jmp
lods
cdq
and
lock
fwait
pushf
lahf
loope
iret
sub
mov
sub
or
mov
addr16
xchg
mov
mov
adc
mov
cwde
cmp
mov
mov
push
bound
jnp
mov
sti
add
xor
jo
sbb
pusha
loopne
jp
add
mov
dec
jle
fimul
rcl
fnsave
ins
jae
rcr
aam
push
xchg
pop
cli
aas
sti
sub
xor
outs
xchg
wrmsr
dec
fist
mov
data16
shl
mov
xor
push
jmp
repz
or
xor
iret
cmp
lods
test
cmps
dec
adc
jb
std
mov
jns
out
test
clc
cmp
call
add
fdiv
push
xchg
pusha
pop
jnp
push
call
fwait
mov
mov
dec
dec
sbb
icebp
je
xchg
rcl
je
jns
inc
cld
(bad)
shl
(bad)
fist
or
sar
ja
ins
mov
mov
in
ds
mov
sbb
mov
xor
fisttp
cld
or
ins
or
cmp
daa
mov
nop
push
push
stc
lods
pop
leave
out
jge
fnstcw
adc
cld
push
lock
int
dec
xchg
mov
ss
aad
mov
jmp
into
dec
adc
in
mov
and
xor
mov
sub
dec
xchg
stc
out
push
cli
aad
data16
adc
js
ss
rol
push
cmp
push
xor
ja
xor
dec
in
mov
mov
imul
es
cli
inc
vpmultishiftqb
jo
popa
in
cld
jbe
and
rcr
push
mov
outs
xchg
cli
aaa
add
retf
xchg
popa
push
push
into
xor
sbb
inc
inc
in
pop
adc
push
mov
and
jg
test
or
scas
cdq
(bad)
data16
xchg
mov
(bad)
xor
bound
div
dec
xchg
mov
icebp
xchg
add
ins
inc
ret
les
xchg
jo
and
shr
mov
out
xchg
iret
xchg
inc
jb
test
retf
test
lahf
jecxz
leave
pushf
cdq
xor
mov
xlat
add
xchg
push
ficomp
mov
loopne
nop
ret
test
inc
sahf
sbb
aaa
sbb
mov
mov
pusha
add
adc
in
and
add
(bad)
sub
inc
hlt
xlat
in
xor
cmc
mov
fdiv
mov
pop
fdivr
mov
push
cmc
mov
enter
(bad)
push
icebp
dec
inc
fnstcw
inc
dec
and
xor
shl
fnsave
movs
lds
jecxz
xor
outs
mov
and
push
push
hlt
cmp
ins
pop
ror
adc
daa
ret
clc
pop
lods
or
pop
(bad)
cmc
shr
mov
lock
adc
push
addr16
push
mov
mov
and
nop
dec
jge
repz
lock
xor
push
sbb
xchg
mov
xlat
aad
jl
icebp
adc
xchg
sti
das
inc
rol
dec
xchg
std
cld
addr16
mov
fld
mov
dec
adc
push
pop
daa
xchg
popa
rcr
add
mov
(bad)
je
(bad)
push
and
cmp
and
push
out
mov
cmp
int
adc
or
test
pusha
xor
jle
std
lock
lods
std
mov
mov
push
adc
jns
add
or
in
xchg
xor
pop
and
xchg
mov
ret
lds
dec
pop
mov
mov
jmp
jge
jae
test
leave
adc
out
mov
idiv
push
fidiv
xchg
(bad)
enter
(bad)
dec
cmps
mov
sub
cmp
xchg
jns
sub
out
test
(bad)
fidivr
adc
and
sar
mov
std
pop
mov
gs
aad
sbb
cwde
push
mov
mov
adc
jecxz
cwde
ds
icebp
mov
pop
(bad)
push
aam
push
cmps
push
fs
arpl
xor
in
cmp
pop
nop
push
pop
outs
mov
push
(bad)
push
push
inc
inc
outs
mov
shl
icebp
out
add
es
rol
ret
call
std
xor
jno
into
mov
push
call
push
stos
in
push
mov
mov
push
jnp
shl
popa
sahf
xor
icebp
xchg
jmp
and
arpl
xlat
movs
ins
jp
xchg
sar
int
pop
loope
rcl
sar
jmp
outs
sbb
pop
fidiv
pop
inc
pop
(bad)
(bad)
xchg
dec
sbb
xor
div
mov
lods
pop
js
nop
and
jecxz
cmp
lds
inc
mov
lds
xchg
dec
and
or
xchg
loop
gs
sbb
sbb
adc
rol
retf
sbb
jnp
jmp
test
adc
dec
inc
push
sbb
outs
stos
outs
imul
mov
jnp
stos
xchg
arpl
bound
or
mov
mov
jl
ins
push
jge
outs
cmp
or
nop
arpl
push
shl
outs
add
pop
mov
in
mov
xchg
mov
mov
aam
ins
or
outs
(bad)
clc
clc
leave
jg
cmp
ret
and
in
and
adc
jmp
retf
mov
out
ror
hlt
xchg
jmp
inc
inc
stos
les
lea
fisttp
nop
bound
repz
test
js
enter
mov
push
je
fldenv
mov
cmp
outs
pop
fcmovnu
sub
pop
ins
cs
add
mov
mov
mov
sti
push
mov
mov
fimul
int
(bad)
jmp
icebp
and
inc
xor
push
lock
fimul
mov
pop
cld
retf
inc
int3
scas
popa
iret
pop
imul
push
call
(bad)
inc
sbb
jne
and
inc
inc
cmp
bound
cli
mov
cmpxchg
sbb
(bad)
dec
xor
imul
mov
imul
mov
fcom
xchg
or
push
lods
(bad)
lock
mov
das
sub
mov
hlt
(bad)
in
nop
js
pop
fidiv
popa
repnz
(bad)
dec
xchg
dec
cmp
dec
movs
retf
jge
sub
push
pusha
int
ds
enter
cwde
leave
xor
fbstp
aas
push
or
je
aaa
fist
mov
ja
call
test
cmp
xor
iret
(bad)
xor
out
hlt
xor
imul
lock
cdq
mov
sar
jp
mov
fimul
sti
sti
inc
inc
les
lock
or
bound
gs
inc
inc
pop
cmp
shl
and
jp
pop
fisub
ss
lods
xor
adc
cmp
push
push
repnz
sub
test
ror
jp
xchg
hlt
mov
push
push
adc
mov
xchg
mov
leave
dec
stos
dec
out
fcos
add
inc
mov
pop
fisubr
outs
dec
jnp
fiadd
jne
je
add
js
adc
bound
inc
pop
xor
and
(bad)
mov
jb
mov
shl
pop
cmp
sbb
and
shl
popf
jae
jp
push
pushf
xchg
sub
pusha
cmp
iret
xchg
loope
das
mov
outs
jb
aas
pop
loopne
push
out
dec
ret
mov
inc
int
cmp
ret
xchg
mov
sti
(bad)
xor
mov
jg
dec
dec
fisttp
stos
in
sub
mov
loope
stc
jmp
rol
icebp
jmp
adc
fsubr
and
pop
push
int
in
xor
(bad)
fsubr
outs
jbe
mov
int3
push
sub
sub
cli
out
mov
pop
pop
mov
fimul
and
scas
push
xchg
push
push
jp
loopne
push
pop
sub
and
test
fldenv
rcr
stc
stos
ret
lods
(bad)
imul
sbb
call
fsub
pusha
jl
rol
adc
xor
nop
add
scas
cmp
fsub
adc
popf
or
aam
pop
stos
push
pop
pop
xchg
xor
lea
sbb
in
imul
and
mov
bound
fmul
xchg
ret
movs
push
loop
and
mov
push
xor
arpl
popf
pop
cmp
adc
cmp
jne
mov
sbb
aam
repz
jmp
add
add
push
pop
retf
dec
jns
iret
and
and
out
stos
push
mov
out
cmp
mov
loop
fiadd
sub
pop
loop
pop
mov
test
retf
sub
or
into
mov
mov
or
adc
pop
fdiv
lock
mov
aas
test
aaa
or
rol
or
xor
stos
out
aam
push
push
mov
(bad)
push
movs
stos
inc
sub
ins
jne
push
(bad)
xchg
bound
out
inc
mov
clc
in
test
pop
mov
test
push
xchg
push
sbb
sub
sbb
fwait
jge
xlat
fisttp
dec
jg
cmp
out
aaa
dec
dec
fidiv
mov
ret
sbb
cmps
inc
mov
cmp
jns
mov
bound
mov
jb
(bad)
popf
xchg
in
sub
pusha
cmps
cmp
(bad)
test
icebp
adc
sbb
lahf
mov
and
xchg
jb
and
imul
sub
inc
movs
scas
arpl
cs
xchg
jp
stc
xor
or
idiv
push
sbb
out
(bad)
shr
out
jns
mov
cld
ffree
sub
in
push
aaa
cwde
adc
jge
push
pop
test
push
movs
jnp
test
mov
dec
popf
adc
inc
mov
jae
fisubr
test
adc
or
mov
pop
stc
test
loop
xchg
std
cmps
add
jmp
inc
(bad)
mov
movs
(bad)
int
sti
repz
jae
xchg
test
arpl
movs
mov
loopne
sub
sub
mov
adc
pop
jno
in
adc
dec
dec
xchg
call
pusha
sti
pusha
adc
lock
sti
inc
jne
stos
js
push
div
inc
dec
popa
icebp
jge
imul
ret
faddp
cmps
push
mov
xlat
cmp
jbe
push
jnp
add
or
sbb
push
inc
mov
in
jno
push
mov
inc
mov
pushf
inc
test
jmp
mov
lods
mov
or
stos
test
mov
retf
push
sti
lods
pushf
push
xchg
int3
jo
in
mov
jae
adc
mov
jg
dec
push
jecxz
mov
jno
and
sbb
pop
and
ret
loope
xor
(bad)
in
jg
frstor
ss
fsub
fisttp
xor
rol
or
fcom
hlt
test
and
sbb
std
ret
cmp
icebp
int3
fcomp
rcl
sub
cmp
cmp
(bad)
stc
mov
int
(bad)
xchg
xor
in
fwait
arpl
popa
cmp
ins
cmp
outs
sub
mov
retf
hlt
push
shl
js
mov
pop
pop
inc
fcmove
mov
fucomi
push
add
sbb
sbb
xlat
adc
jle
add
mov
pop
sahf
je
fs
push
test
movs
mov
leave
pop
enter
popf
cmps
gs
test
cmp
fdiv
outs
inc
pop
jbe
mov
stc
and
adc
loopne
jle
inc
jmp
jns
fld
jae
imul
(bad)
add
push
xlat
jae
das
out
sbb
pop
aad
pop
dec
inc
dec
mov
in
inc
dec
jno
leave
jb
or
(bad)
mov
ss
push
fs
jmp
jne
pop
mov
popa
fist
fstp
mov
xor
cmps
aaa
mov
and
mov
dec
adc
mov
data16
rol
jle
rol
ins
mov
sti
jge
jno
xor
dec
lds
adc
xor
sub
jns
mov
sbb
je
in
sbb
xor
cmps
outs
scas
test
pusha
lds
adc
stos
inc
sbb
and
test
add
fstp
imul
rol
cmp
jne
in
bound
(bad)
cli
mov
push
xor
or
in
lahf
adc
mov
xchg
bound
or
hlt
cmp
inc
inc
popf
cmc
inc
lods
fwait
adc
and
xchg
pop
lods
push
push
cmc
int3
mov
shl
stos
push
sbb
mov
sub
test
inc
and
and
or
daa
rcr
pusha
pop
(bad)
das
xchg
mov
jp
xchg
loope
gs
fcmovnu
fistp
sbb
mov
shr
pop
adc
call
jne
pop
in
(bad)
pusha
inc
add
mov
lock
jo
retf
outs
xor
mov
cmp
lods
fbstp
push
call
or
push
mov
ror
add
shl
ss
nop
ss
jo
or
jge
loopne
dec
jecxz
mov
out
outs
fldenv
mov
cmp
ins
test
ins
pop
shr
jmp
addr16
pop
mov
pop
adc
or
ret
mov
push
add
(bad)
xor
shl
mov
cwde
(bad)
inc
add
mov
push
shl
push
clc
in
pop
lock
nop
imul
adc
lods
fadd
sub
sbb
movs
cmp
pop
jne
repz
adc
test
jo
js
sub
jo
dec
in
in
fwait
neg
cwde
pop
lock
arpl
pop
adc
js
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
sbb
sar
mov
shl
cmp
jne
inc
push
cmc
inc
pop
fcomp
mov
dec
fdivr
mov
sar
mov
inc
lock
mov
fdiv
mov
pop
fdivr
mov
sar
mov
inc
lock
cmps
arpl
sub
and
xor
cmc
loopne
sar
mov
movs
arpl
pop
fscale
mov
sar
loope
adc
mov
inc
inc
enter
jge
or
std
mov
nop
sub
xor
cwde
add
jg
int
out
(bad)
in
adc
mov
ret
inc
cwde
mov
mov
mov
add
stc
mov
inc
xor
imul
xor
mov
inc
mov
sbb
shl
icebp
push
and
mov
jb
fiadd
add
jns
or
outs
sub
iret
aas
aas
xor
mov
in
push
mov
in
mov
fstp
push
cmp
inc
call
ret
(bad)
call
stos
add
and
or
cs
sar
push
loop
jbe
or
jo
cwde
mov
mov
clc
push
xor
fucomip
sbb
sub
add
ins
dec
mov
xchg
mov
pushf
dec
loop
and
mov
inc
arpl
add
jmp
and
test
test
add
adc
xchg
call
push
sub
dec
jb
pop
xchg
mov
int
push
lods
outs
pop
stc
cld
lods
or
or
mov
outs
js
pop
mov
lock
lods
loope
and
sub
data16
cmp
iret
jns
xchg
cmp
cmp
inc
jb
pop
cmp
xor
setns
les
dec
pop
fbstp
jg
dec
or
mov
jbe
inc
das
and
loop
push
dec
sbb
and
fdivp
jl
push
lea
stos
mov
xchg
ds
jmp
iret
(bad)
call
or
or
aam
jae
cld
mov
outs
push
add
mov
add
and
dec
jecxz
and
or
sbb
out
and
xor
adc
aaa
inc
lock
push
inc
leave
xor
xlat
int
inc
jo
and
std
mov
sar
mov
sar
mov
and
mov
pop
std
mov
pop
shl
imul
mov
shl
nop
inc
rcl
dec
inc
jge
inc
js
mov
ror
shl
inc
push
add
ins
cdq
cmc
mov
rcl
scas
inc
or
cmp
pop
jns
sbb
mov
scas
(bad)
fdivr
scas
inc
scas
push
jmp
cmp
scas
jl
jge
shr
sub
ss
js
push
test
dec
hlt
popa
xchg
xor
mov
out
ds
xchg
ins
icebp
dec
ins
fld
jns
inc
cmp
jle
mov
jbe
imul
xchg
stc
iret
pop
sbb
push
in
inc
loopne
fist
sbb
adc
data16
xor
stc
mov
or
adc
bound
cmp
test
dec
xchg
call
int
in
mov
jne
movs
xchg
shl
mov
inc
(bad)
dec
pop
and
iret
cs
mov
ins
push
jecxz
sub
ins
ret
cmc
mov
in
add
sbb
je
or
fcom
lods
int
jmp
xchg
retf
dec
scas
push
aam
cs
mov
push
shr
sub
lds
daa
jns
xchg
scas
aaa
or
xchg
out
mov
hlt
push
xlat
and
call
xchg
int
int3
movs
xchg
mov
fmul
mov
dec
retf
in
mov
push
add
xchg
or
cmp
aad
mov
loop
es
imul
lds
xchg
pusha
fs
ds
pop
clc
mov
jns
mov
xor
scas
iret
and
sbb
inc
outs
leave
gs
jp
pop
jmp
ja
adc
outs
ins
xchg
ds
lock
cli
fdivp
pop
dec
not
push
jle
push
jecxz
dec
sti
lods
mov
repnz
adc
xchg
bound
(bad)
push
dec
call
(bad)
cdq
movs
out
and
js
or
sahf
inc
xor
imul
stos
push
out
(bad)
jae
lock
int3
mov
pop
retf
mov
jl
xor
adc
outs
push
movs
dec
push
or
or
test
jmp
addr16
jp
mov
xchg
ror
add
cmp
and
cmp
push
add
sub
pushf
pop
mov
xchg
clc
sub
push
imul
popf
mov
and
sahf
movs
clc
or
sub
mov
sbb
loop
stc
not
mov
js
push
adc
rol
cmps
add
sbb
add
jne
jb
(bad)
(bad)
jmp
out
sti
jb
pop
stos
inc
jmp
stc
gs
(bad)
xchg
(bad)
push
or
in
test
add
or
fnsave
or
in
in
paddb
ja
cmps
xchg
arpl
inc
push
mov
cs
xchg
fimul
pop
xchg
rcl
and
xchg
dec
inc
and
jno
shr
mov
popf
fisub
cli
aad
lea
cmps
sbb
xor
pusha
shl
push
test
mov
sbb
xchg
jne
add
rsqrtps
mov
add
enter
in
cmp
dec
mov
out
les
sbb
(bad)
or
cld
mov
push
push
xor
sub
mov
mov
xchg
push
dec
movs
ins
push
sbb
call
and
fidivr
jecxz
(bad)
imul
mov
shl
mov
shl
fdiv
enter
jo
cmp
shl
push
pop
cli
lods
retf
ds
shl
dec
aam
mov
dec
pop
cmp
dec
sbb
inc
aam
retf
pop
add
pop
hlt
sbb
lahf
pop
rcr
iret
push
jb
adc
pop
daa
(bad)
push
les
ins
or
out
jo
cs
adc
or
aas
out
add
sbb
jno
cmp
add
xor
xchg
in
loope
xor
mov
shl
(bad)
or
sub
stc
(bad)
xor
add
dec
mov
push
mov
sub
inc
sbb
sbb
mov
and
jae
mov
add
retf
cmp
stc
pop
jbe
push
dec
shl
das
mov
cmp
jae
enter
inc
jo
pop
xor
in
mov
dec
mov
stos
cmps
shl
imul
sub
bound
jne
push
cld
mov
mov
fdivrp
shl
addr16
xchg
cmp
push
mov
gs
jbe
pop
xor
inc
adc
pmovmskb
fcom
ins
dec
iret
stc
addr16
fs
pop
pop
add
scas
mov
add
js
dec
adc
pop
adc
jl
loope
je
push
pushf
es
out
cmp
scas
cwde
adc
jo
inc
sbb
test
retf
test
jnp
mov
(bad)
frstor
push
nop
shl
mov
add
into
pushf
sub
mov
sub
dec
or
mov
pop
or
movs
(bad)
pop
out
call
fmul
mov
out
inc
out
lods
hlt
scas
push
mov
jmp
pop
mov
adc
push
mov
std
cwde
and
cli
clc
nop
cmp
shl
xchg
jnp
add
ins
les
or
push
and
das
faddp
loopne
rcr
rcr
cmc
pop
pop
int3
push
xchg
std
pop
or
mov
je
inc
shl
test
enter
sar
mov
inc
sar
push
clc
cmc
and
push
hlt
test
pop
pop
cmps
retf
cmp
aaa
inc
push
jae
retf
mov
add
clc
mov
shl
(bad)
int
stos
in
and
adc
jno
xchg
jle
fcom
ret
test
inc
jl
mov
pop
cmp
sahf
push
(bad)
pop
retf
lahf
mov
mov
movs
dec
push
push
out
inc
pusha
jae
call
adc
(bad)
into
pop
call
adc
inc
pop
mov
mov
mov
xchg
adc
repz
or
dec
xchg
inc
out
sbb
mov
ja
in
xor
imul
mov
pushf
xor
mov
(bad)
mov
int
sbb
push
dec
rol
jp
push
in
or
sub
dec
sbb
in
dec
enter
sub
dec
ror
adc
pop
inc
lods
cmps
outs
mov
jge
lods
xchg
cmp
dec
pop
loop
cld
or
cmp
inc
dec
sub
mov
cwde
dec
test
xchg
ror
mov
jp
mov
ja
or
sti
mov
gs
shl
pop
sub
les
ss
cmps
inc
pop
jns
jne
outs
ror
shl
(bad)
bound
xor
lds
cmp
je
xchg
pusha
(bad)
dec
nop
xchg
bound
xchg
xlat
lods
xchg
and
cmp
outs
jnp
xchg
xchg
hlt
ins
scas
sub
push
mov
jmp
or
cli
adc
xchg
push
pushf
cs
pop
cdq
rcr
push
inc
data16
sbb
mov
mov
push
out
and
sahf
add
pop
jmp
in
and
or
inc
scas
xchg
(bad)
div
inc
enter
cdq
jns
call
xchg
or
aas
out
(bad)
cmp
jbe
and
sub
mov
movs
ret
push
pushf
int3
cdq
addr16
das
std
lock
cmp
cdq
xchg
ret
and
in
call
xchg
outs
rcl
inc
xor
add
mov
push
enter
cwde
in
test
sar
mov
push
dec
cmc
sub
hlt
xor
hlt
lods
imul
jp
retf
push
sub
retf
sbb
dec
out
mov
icebp
cld
xchg
leave
(bad)
outs
test
push
into
add
xchg
cmc
mov
loopne
test
xchg
dec
retf
mov
in
xor
dec
shl
loop
adc
push
scas
into
mov
daa
adc
or
pusha
fadd
sub
sbb
mov
std
xor
xchg
push
je
xchg
pop
dec
inc
nop
pop
repz
dec
jmp
stos
mov
loope
je
jnp
inc
push
add
test
call
std
adc
popa
aad
xor
jge
or
xchg
pop
out
pop
sbb
mov
rol
sub
inc
cs
movs
push
test
inc
push
adc
nop
xchg
popf
xchg
or
push
push
aas
jp
inc
jmp
push
mov
mul
movs
and
push
in
mov
xchg
push
shl
iret
sub
adc
mov
retf
xlat
ins
das
bound
xchg
in
aam
pushf
ins
idiv
mov
inc
mov
dec
sbb
dec
xchg
mov
mov
hlt
mov
and
add
sbb
(bad)
adc
jb
rcr
cwde
adc
div
sub
add
mov
lahf
jbe
lock
daa
dec
dec
fwait
aas
loop
out
pushf
mov
or
or
xchg
cmp
shr
jb
fdecstp
(bad)
pusha
push
ror
mov
leave
adc
out
(bad)
mov
and
fisub
sbb
mov
lods
mov
mov
sub
outs
(bad)
test
mov
inc
and
ret
rcl
sub
lahf
or
add
dec
add
fmul
jecxz
mov
add
movs
mov
movs
out
and
sub
cwde
stc
call
lock
push
xor
and
mov
(bad)
lods
pop
dec
cmp
(bad)
(bad)
cmps
pop
or
lock
xchg
pop
lahf
xor
(bad)
or
cdq
mov
ror
push
jo
ins
movs
shr
ret
lods
push
stos
(bad)
jl
lock
cmc
leave
fld
inc
and
fst
xchg
(bad)
cmp
mov
mov
pop
lahf
lds
nop
pop
or
adc
lock
lahf
sub
or
push
in
adc
add
add
xor
or
inc
sub
xchg
data16
iret
and
inc
out
inc
xchg
and
xchg
push
push
jnp
sub
aam
dec
call
into
jg
adc
sti
dec
sar
mov
push
mov
mov
(bad)
in
xchg
push
pop
jno
loope
jb
stc
ret
es
ss
push
(bad)
sub
cmp
cmp
and
fs
js
int3
sub
cli
pop
int
sbb
inc
outs
(bad)
imul
frstor
xchg
arpl
cmp
(bad)
cwde
retf
pop
test
fwait
or
sbb
inc
mov
or
dec
cli
cmp
cmps
xchg
fwait
mov
imul
addr16
cld
outs
push
fisubr
adc
sti
or
stos
sbb
(bad)
mov
inc
int3
ror
stos
jae
add
sbb
sahf
outs
push
push
mov
ds
mov
jae
push
cmc
mov
xor
retf
cwde
inc
pop
jbe
call
fcmovbe
adc
imul
mov
sbb
adc
sub
jle
mov
jle
js
inc
xchg
jmp
mov
rcl
push
pop
cmp
inc
xlat
loop
and
fwait
push
dec
out
lds
popf
pop
mov
jmp
cli
inc
iret
sti
add
mov
inc
add
ret
or
sbb
lea
xor
pop
push
aad
pop
mov
pop
(bad)
nop
add
cmp
outs
sbb
loope
cwde
or
dec
in
pop
repnz
jnp
push
call
imul
or
cmp
push
test
cmp
int3
jmp
mov
psadbw
aas
jns
inc
sbb
lea
add
push
ss
shl
push
xchg
movups
jmp
gs
xchg
jno
addr16
adc
fbld
lods
push
cmp
mov
pop
dec
out
adc
fucom
inc
xor
xor
sbb
std
adc
mov
mov
xor
retf
jge
push
leave
int
inc
push
sub
and
xchg
div
(bad)
outs
inc
xchg
rcr
cmps
into
leave
pop
pop
push
adc
push
and
inc
sub
mov
mov
dec
out
call
icebp
test
xlat
fwait
lea
xchg
pop
pop
mov
pop
adc
xchg
mov
xchg
ret
leave
mov
jno
xor
mov
popa
in
gs
pop
es
arpl
out
xor
mov
mov
repz
push
ret
in
leave
aam
fcomi
(bad)
popa
pop
jge
rcr
jge
dec
jne
cld
push
or
mov
sbb
sub
lea
xor
xor
imul
cli
sbb
lods
nop
out
fld
ja
pop
fs
mov
xchg
pop
adc
test
sbb
clc
pusha
popf
fistp
or
push
imul
cli
lds
stos
bound
and
out
jns
imul
fs
dec
push
call
(bad)
fdivr
or
mov
pop
jmp
outs
add
push
stos
mov
adc
or
cld
mov
mov
and
imul
mov
pop
imul
sub
push
or
js
lods
xor
mov
dec
jns
lock
add
call
sbb
dec
mov
ficomp
pushf
cmps
jnp
mov
mov
sbb
stos
adc
cs
test
mov
cld
shr
shr
ins
fcom
xchg
mov
cmc
push
xchg
xor
mov
cmps
mov
mov
movs
in
xchg
cdq
sbb
push
pop
mov
loop
sbb
pop
clc
mov
adc
enter
push
cmps
lahf
mov
cmp
test
dec
sbb
imul
dec
pop
push
lgs
push
call
loop
mov
mov
scas
lods
loop
cmps
pop
jmp
stos
dec
adc
or
and
aaa
push
cmp
(bad)
movs
mov
idiv
fnstsw
aam
pop
adc
jge
inc
mov
fs
fwait
inc
dec
leave
add
jp
dec
pop
jmp
fdiv
mov
jg
pop
nop
push
cmp
xor
cwde
xor
in
pop
mov
pop
adc
jno
stos
arpl
sbb
sbb
out
loopne
mov
into
xchg
xor
mov
in
add
sbb
push
and
sbb
push
inc
jl
gs
cmp
repz
imul
addr16
jg
lock
sbb
xchg
je
or
mov
sahf
mov
xchg
sbb
movs
in
pop
in
inc
sub
aas
adc
and
and
(bad)
inc
rcr
cmp
popf
cmp
pop
shr
cdq
fisttp
outs
stos
sub
push
mov
rcr
push
dec
sbb
sbb
cmp
fcmovb
xchg
inc
inc
scas
mov
pop
xor
popf
sahf
mov
in
cmp
cmp
sub
push
mov
jae
scas
sub
jae
fdivr
or
mov
mov
add
xor
push
sbb
push
pop
dec
rcl
(bad)
int
ds
cmps
mov
and
mov
cmp
les
or
push
xchg
and
and
cmp
mov
jb
call
enter
cmps
mov
test
sti
std
cmps
lods
jmp
sbb
xchg
mov
or
cmp
inc
adc
inc
dec
add
jl
mov
mov
mov
mov
fisub
mov
fld
repnz
mov
or
jmp
sub
cmp
in
mov
popa
pop
mov
sbb
fdiv
pop
out
(bad)
xchg
loop
ins
jns
cmp
(bad)
mov
fwait
xlat
or
xchg
out
iret
pop
inc
hlt
sub
pop
addr16
mov
fdiv
test
test
out
xchg
jb
cs
or
sbb
stos
dec
dec
loope
or
std
lahf
xchg
inc
xchg
xor
or
xchg
cmp
jecxz
aaa
push
nop
mov
xor
shl
stos
cmp
iret
fld
mov
rcr
in
scas
clc
scas
xor
leave
in
pop
pop
lods
fisub
push
sub
mov
mov
out
cmps
jl
jae
iret
dec
pop
test
lahf
inc
and
mov
inc
xchg
jmp
sub
xlat
jne
and
or
xlat
jmp
in
int3
dec
enter
cmps
inc
jnp
bound
dec
mov
adc
xor
and
add
call
fiadd
loop
inc
sbb
and
and
or
cmps
rol
mov
and
stos
mov
adc
push
test
push
add
data16
mov
push
sbb
jecxz
mov
dec
and
into
in
fwait
or
mov
ror
sbb
jle
push
cmp
out
adc
sti
rol
push
lds
inc
jg
nop
jmp
cs
es
xchg
(bad)
stos
dec
mov
loop
push
mov
(bad)
fxch
cmps
jecxz
jg
and
mov
jecxz
or
stos
add
xor
das
pusha
out
test
pop
jae
fs
xor
xor
cdq
popf
lods
into
test
sub
sbb
inc
into
popa
cli
adc
dec
add
daa
cmp
mov
cmp
push
out
aaa
pop
add
hlt
sub
movs
popa
mov
xchg
imul
fadd
mov
jge
lds
jmp
dec
jae
call
mov
fcmovnu
cwde
add
in
mov
xor
xor
popa
aaa
and
jb
inc
iret
imul
sahf
les
imul
and
jmp
sbb
adc
xlat
xor
sbb
xchg
or
fisubr
jge
test
jmp
mov
mov
adc
xchg
and
sub
dec
xlat
sahf
jg
test
cmp
push
out
xor
or
add
(bad)
mov
arpl
std
mov
push
shl
jae
std
mov
dec
fdiv
enter
retf
cmp
pop
cli
aaa
dec
push
add
lahf
cmc
mov
inc
mov
in
pop
push
dec
idiv
xor
inc
and
mov
iret
inc
(bad)
dec
shl
out
pop
enter
dec
pop
lods
repz
imul
in
pop
call
pop
inc
popf
adc
iret
lods
dec
jae
jo
mov
xchg
mov
ins
in
das
xlat
div
push
push
push
sbb
pushf
adc
cld
js
sbb
adc
xchg
cmp
aad
xor
sub
pop
inc
sar
lock
push
aam
sbb
btr
jmp
jle
aad
mov
sub
jmp
sub
imul
ja
cmp
lock
repnz
stc
scas
scas
mov
fld
pop
(bad)
cmp
mov
cmps
mov
retf
xor
in
mov
mov
jge
mov
cmc
pop
mov
sbb
add
jo
xor
movs
mov
jg
repnz
and
and
jecxz
xor
rcl
mov
fwait
dec
or
mov
jae
pop
pop
retf
mov
push
fs
add
(bad)
das
inc
fld
jp
sbb
movs
xchg
stc
fisttp
pop
mov
xor
sbb
fld
out
sub
fild
jmp
jns
outs
sbb
ins
push
cmc
dec
test
or
sbb
adc
jo
xor
pop
in
xchg
sbb
jno
(bad)
sahf
or
fiadd
retf
call
xor
pop
pushf
loop
mov
ror
cmp
xchg
mov
loope
mov
mov
mov
xchg
fld
xor
lods
and
int3
sbb
(bad)
dec
fisubr
push
push
jp
dec
add
(bad)
out
pop
stc
jp
jno
and
sbb
mov
jp
test
ret
aam
in
mov
xchg
stos
fist
rcl
cmp
rcl
rol
std
sub
test
jae
bound
enter
arpl
scas
call
das
shl
mov
mov
mov
sbb
jbe
push
fisub
push
mov
jecxz
stos
push
sbb
xchg
fwait
stc
pop
sub
repz
inc
xchg
data16
pop
cmp
lods
or
mov
loop
push
sbb
popa
mov
aaa
mov
lds
not
shl
push
and
pop
add
cmp
sahf
stos
sbb
pushf
mov
icebp
ficomp
mov
adc
fbstp
imul
jmp
ins
cmp
cmc
dec
ins
dec
(bad)
pop
jnp
repnz
scas
in
xchg
rol
xchg
mov
xchg
imul
jne
shl
xor
jecxz
int
(bad)
clc
pushf
pop
pop
test
mov
add
ret
push
xor
sbb
icebp
call
mov
test
mov
lahf
push
xchg
rcr
ror
sub
pop
add
test
mov
jmp
sub
xchg
mov
imul
adc
mov
inc
adc
es
(bad)
adc
fidiv
and
add
repnz
int3
cmps
xor
test
(bad)
dec
mov
cmp
pop
repnz
and
and
loope
push
ss
pop
stos
cld
add
cmp
adc
sub
xchg
add
and
dec
ret
lods
mov
xor
stos
jb
sub
inc
and
jnp
ror
mov
out
fs
mov
mov
adc
xchg
or
aas
dec
jl
and
retf
jmp
(bad)
inc
test
in
xchg
sub
pop
pusha
leave
mov
push
mov
add
ud0
mov
fist
out
dec
in
pop
or
loope
push
shl
or
cwde
dec
fpatan
push
rcl
test
lods
inc
add
jae
into
ds
push
and
inc
adc
mov
and
dec
mov
bound
daa
jnp
push
sbb
stos
popf
or
outs
loop
xchg
jg
mov
mov
popa
xchg
fisttp
pop
adc
out
add
and
rcr
xchg
ins
out
pop
test
sbb
sub
xchg
retf
add
retf
loopne
fisub
or
adc
gs
pop
popa
jecxz
(bad)
repnz
mov
shl
dec
add
sbb
add
int
loop
xlat
std
test
adc
out
loopne
mov
jge
mov
les
add
sbb
fldenv
xchg
push
or
mov
cdq
pop
add
ret
mov
popf
imul
jg
dec
test
cli
cmc
pop
lock
cmp
sbb
fs
scas
fist
xor
dec
icebp
xor
shr
ffreep
leave
mov
or
and
and
mov
or
push
sub
(bad)
and
test
mov
shl
push
xchg
test
push
mov
out
mov
pop
enter
sub
pop
push
inc
bound
(bad)
jmp
jge
jmp
(bad)
or
das
fwait
ins
or
pop
mov
iret
sub
es
in
scas
cmp
dec
push
add
dec
leave
xlat
cdq
and
gs
out
hlt
and
mov
jle
das
int3
and
and
aas
sbb
add
mov
cmp
adc
out
js
cmp
sub
jns
in
jmp
sbb
iret
adc
arpl
inc
sbb
cli
pop
add
outs
xor
or
lds
cmp
dec
sar
push
int3
ficomp
fdivr
sbb
enter
mov
add
hlt
pop
mov
pop
scas
dec
sub
adc
jns
cmp
xchg
test
mov
jg
add
test
mov
add
or
lds
imul
loop
xor
int
test
xor
addr16
or
retf
xor
stos
fiadd
sar
inc
mov
cmps
imul
sub
lahf
mov
dec
adc
std
mov
xchg
loopne
cmp
in
jae
fwait
mov
adc
leave
es
or
pushf
and
jb
mov
in
mov
jle
lea
test
rol
cmp
jmp
jg
aam
popa
retf
add
sar
xchg
xor
in
std
xchg
dec
mov
xor
imul
bound
adc
fadd
push
clts
ds
mov
lock
mov
arpl
test
lea
mov
(bad)
adc
lds
and
bound
xchg
in
lods
in
addr16
push
jmp
inc
mov
cld
in
shr
data16
movs
push
enter
pop
fimul
in
sbb
test
outs
mov
jmp
push
aaa
or
sub
and
cmp
adc
and
imul
sbb
sahf
repnz
stc
push
cmps
mov
lods
pushf
mov
outs
add
push
push
lds
nop
fwait
and
add
cwde
mov
test
test
shl
pop
iret
test
and
rcr
jae
ss
push
mov
mov
out
jne
jl
add
sbb
cmc
mov
fsub
mov
sar
inc
lock
repnz
xchg
bound
je
or
xchg
inc
shr
sar
ins
lock
aaa
cdq
bound
outs
repnz
mov
popa
xchg
fnstsw
push
dec
cdq
loopne
dec
imul
adc
add
mov
mov
cmp
je
arpl
sbb
pop
test
hlt
ins
shl
push
lods
loopne
or
push
out
shl
fld
pcmpeqb
jae
shl
inc
(bad)
mov
xchg
cli
adc
sub
hlt
ins
repnz
mov
bound
ins
enter
clc
mov
enter
shl
mov
fdivr
mov
shl
inc
pop
hlt
mov
(bad)
fdivr
aad
cmp
pop
jp
dec
fistp
dec
pop
sub
jl
fcomp
push
test
retf
xchg
add
inc
xlat
les
dec
jae
xchg
inc
sbb
mov
cli
iret
sbb
imul
mov
imul
in
cwde
fstp
cmc
add
pusha
mov
xor
jo
pop
js
je
jae
cwde
push
sbb
rcr
les
sbb
and
xchg
leave
not
or
lea
add
repnz
popf
jae
xchg
outs
mov
and
push
iret
les
jno
xchg
ficom
mov
out
xor
dec
(bad)
xchg
adc
mov
and
xchg
adc
push
xchg
jb
cdq
jge
jmp
add
lds
push
pop
cld
cmc
pop
cmp
pusha
cmp
in
ret
dec
stc
pop
nop
cmp
fmul
cmp
sub
inc
xchg
sbb
movs
and
and
mov
scas
(bad)
aaa
mov
dec
imul
mov
add
fs
and
mov
cmp
in
inc
mov
outs
fwait
int3
popa
jmp
mov
(bad)
retf
add
(bad)
sub
and
imul
inc
stc
je
xchg
arpl
or
or
js
into
sub
aad
pop
cmp
ror
sbb
jbe
dec
addr16
nop
or
jp
repnz
cmps
dec
and
add
(bad)
mov
pop
fidiv
inc
dec
dec
or
sbb
xchg
push
sbb
inc
or
int
outs
sti
or
inc
mov
xchg
ffreep
dec
ss
inc
adc
aaa
(bad)
aaa
shl
push
mov
sbb
mov
repnz
jae
mov
stos
and
jp
and
pop
in
xor
nop
ror
adc
cmp
xchg
aam
mov
das
or
sbb
jno
dec
xchg
ret
jg
mov
add
jae
fcmovb
pop
call
xchg
dec
arpl
iret
mov
nop
push
scas
add
pop
lods
mov
fdiv
pop
push
jmp
inc
xor
xor
out
mov
cld
in
imul
aad
movs
push
dec
sub
sub
aas
cmp
sti
stos
cli
data16
xor
sbb
sar
pop
cmp
mov
mov
jl
mov
and
aad
xchg
pop
outs
sub
popa
pop
(bad)
shl
or
daa
fidiv
adc
in
cwde
dec
enter
fdivr
mov
inc
shl
pop
cmc
cmp
push
hlt
aaa
iret
push
jnp
dec
pop
repnz
sub
add
jl
dec
js
jp
clc
ss
dec
jne
mov
mov
ds
fld
sbb
int3
or
icebp
mov
adc
sub
inc
loop
ss
pop
paddusb
in
fs
xlat
jmp
in
push
sub
ins
data16
sar
xor
pop
push
mov
xchg
xchg
cmp
jl
loope
inc
jo
push
outs
adc
pop
jnp
jmp
dec
rcr
inc
out
shl
mov
cld
not
dec
inc
aad
aam
mov
pop
inc
loope
repz
jmp
add
rcr
xlat
xchg
sbb
gs
les
test
add
dec
mov
movs
cwde
loope
in
mov
cmps
xor
out
cli
int
ret
cmps
inc
and
cmp
fsubr
test
push
je
or
or
(bad)
cmp
in
retf
dec
mov
cdq
push
xor
sub
inc
add
mov
pop
or
jmp
lds
sti
repnz
sbb
adc
pop
xor
sub
jge
add
mov
adc
test
and
sbb
scas
(bad)
adc
pop
shl
mul
pop
stc
sub
and
mov
inc
popf
dec
jge
adc
lea
jmp
mov
lods
cs
sub
enter
iret
loop
fidivr
daa
cld
dec
jnp
inc
pop
dec
push
jbe
addr16
les
adc
(bad)
push
daa
add
push
jl
mov
fist
call
mov
inc
aam
iret
inc
mov
push
dec
jns
daa
mov
mov
and
popa
sub
pop
in
push
cwde
add
loopne
es
add
adc
adc
xor
dec
std
hlt
sub
pop
stos
mov
out
adc
test
and
mov
inc
inc
ret
outs
rcr
(bad)
push
mov
cld
sub
mov
aas
push
xchg
and
jb
dec
and
pop
cmp
push
lahf
ins
pusha
and
ficomp
out
mov
call
int3
retf
scas
ja
cmp
(bad)
cmp
add
adc
data16
inc
leave
movs
dec
in
or
add
lock
je
js
idiv
inc
cs
cmp
dec
cmp
mov
repnz
fiadd
(bad)
and
add
and
test
aam
rol
push
fwait
inc
das
aam
mov
jp
test
lahf
jp
cld
jg
and
or
adc
and
jne
mov
inc
mov
jmp
xor
xlat
add
sub
pop
or
je
into
inc
jno
pop
sbb
or
and
inc
mov
add
inc
clc
jl
inc
fdiv
mov
enter
shl
push
fdivr
mov
retf
xor
je
inc
push
icebp
ss
sub
mov
fdivp
mov
sub
fdivr
push
sub
adc
mov
hlt
jnp
fnstsw
xchg
or
pop
mov
sub
fsub
pop
js
push
push
cli
xlat
loop
fadd
jl
jmp
xchg
push
pusha
sub
xchg
mov
stos
jl
inc
mov
cwde
push
or
in
dec
mov
push
hlt
test
push
iret
enter
mov
sub
lahf
sub
xor
push
shr
rol
cs
xchg
les
(bad)
imul
sub
xchg
shl
imul
jnp
gs
xchg
out
outs
(bad)
push
in
jmp
jb
mov
jae
dec
adc
test
pop
mov
pop
dec
std
pop
sahf
lods
call
jae
pop
nop
add
add
jecxz
pop
fwait
push
mov
mov
shl
nop
stos
dec
pop
aam
adc
xchg
jno
jmp
add
jae
(bad)
mov
popa
cmps
mov
add
xor
sbb
add
in
test
ja
daa
push
sub
loop
dec
mov
pusha
int3
jb
test
fdiv
and
stos
xchg
cmps
xor
fstp
mov
inc
enter
push
aas
pop
pop
or
fst
mov
sbb
push
ret
rol
call
inc
xor
push
mov
and
push
and
jo
fsub
pop
add
mov
dec
and
jl
xchg
jbe
cmovo
add
xchg
adc
repz
pop
jno
scas
lock
test
jmp
fldcw
loop
sti
(bad)
add
xor
and
sar
cmps
or
jl
sbb
stc
cli
xchg
adc
inc
sub
ret
int
repz
test
enter
mov
rcl
and
fdiv
stos
adc
daa
test
icebp
test
or
pop
fs
mov
pop
rcr
sbb
fs
aam
fnstcw
inc
or
arpl
loop
inc
mov
inc
adc
fbld
inc
rol
imul
mov
jge
dec
adc
pop
inc
fs
or
arpl
mov
cmp
mov
fcmovnb
cdq
outs
(bad)
retf
inc
leave
(bad)
call
xor
outs
mov
push
push
loopne
rcr
push
mov
mov
pop
cld
in
loope
retf
push
loop
dec
push
arpl
jns
sbb
mov
outs
int
inc
mov
or
add
xor
xacquire
lods
and
mov
mov
add
loop
data16
and
stos
inc
pop
das
fadd
push
out
push
dec
bnd
mov
sti
mov
loope
pop
repnz
(bad)
pop
inc
fwait
(bad)
pop
cdq
(bad)
inc
in
sub
pusha
or
scas
das
daa
xchg
fdiv
neg
mov
nop
retf
add
jmpw
dec
inc
add
sar
mov
test
dec
jnp
repnz
sbb
pop
sahf
cmp
outs
and
xchg
xor
mov
ret
mov
mov
pop
pop
sahf
mov
add
rol
mov
add
xchg
dec
shr
adc
pop
mov
and
xor
leave
mul
shl
outs
push
cld
ins
and
xor
mov
outs
or
push
adc
int
push
pop
inc
inc
ret
push
dec
pop
mov
ds
sbb
jo
enter
mov
aas
sub
mov
sahf
in
xlat
mov
add
xchg
sub
rcl
sbb
cmp
aaa
fidiv
cmp
and
and
sar
loope
jmp
and
cmp
jno
mov
out
test
ret
ds
(bad)
rcr
push
push
sbb
stc
xlat
xor
stos
cmp
ins
sbb
inc
push
xchg
ror
inc
xchg
and
aam
push
sbb
jae
mov
jmp
sub
mov
mov
jbe
cmc
cmps
mov
add
hlt
mov
cwde
clc
mov
adc
sub
not
xchg
push
(bad)
jp
jp
cmc
mov
cli
jg
pop
sub
ret
(bad)
call
mov
or
ret
nop
mov
frstor
test
les
mov
stc
adc
pop
cdq
xor
cmp
jp
mov
mov
jnp
out
stc
mov
add
enter
cmps
sar
dec
xchg
jo
rol
xchg
dec
jno
mov
sbb
aas
jb
jmp
and
mov
cli
fbstp
into
in
popa
rcr
test
pop
jo
cmp
jecxz
xchg
jle
cmp
sbb
je
jne
adc
repz
push
stos
adc
je
lods
push
xor
fild
popf
xor
push
xor
mov
enter
push
and
add
and
rcr
jb
jp
xchg
outs
ins
mov
and
sbb
inc
or
popf
mov
je
adc
or
or
jg
mov
adc
and
xchg
pop
stos
cmp
pop
cmp
jmp
scas
inc
push
mov
xchg
push
push
xchg
imul
je
cmps
in
into
xor
std
jl
add
or
fwait
pop
arpl
sub
hlt
outs
gs
fimul
jl
shl
mov
sub
push
jnp
adc
repz
lods
cmp
into
pop
push
cli
push
ret
loope
in
dec
rcl
mov
leave
cmp
xchg
adc
sub
xor
movs
xchg
push
call
pop
jmp
mov
(bad)
rcl
jmp
std
dec
xchg
push
lods
les
or
nop
movs
pop
(bad)
jmp
jbe
fucomip
loope
(bad)
xor
leave
cmp
dec
cwde
push
mov
xchg
stc
cmp
pushf
clc
adc
(bad)
sar
push
add
mov
add
jne
in
jmp
xchg
xchg
inc
es
lods
push
adc
hlt
mov
(bad)
mov
data16
pop
ja
fcos
jmp
int3
add
jb
or
cs
lds
pop
aad
mov
out
aas
inc
movs
dec
in
pusha
ss
push
popa
inc
xchg
jmp
in
lea
aas
mov
nop
test
iret
icebp
sub
std
test
dec
fimul
and
ret
shl
mov
dec
mov
lods
ret
cmp
sub
mov
in
call
mov
fidiv
outs
dec
cld
mov
xor
movs
ss
sub
hlt
int
xor
sbb
sub
outs
cmp
das
fild
jno
sti
sub
mov
xor
in
mov
ret
aas
cmc
movs
data16
xor
xor
mov
lods
mov
inc
enter
xchg
pop
ret
enter
xchg
dec
cli
movs
ja
cli
xor
popf
cmp
jnp
sub
cld
pusha
ss
mov
movs
jnp
or
iret
sub
stc
outs
aad
(bad)
xor
cmps
xchg
and
test
mov
out
jnp
xchg
inc
cmc
adc
xor
mov
push
mov
jne
pop
cmp
push
xlat
mov
xchg
inc
mov
cmp
scas
dec
clc
rcr
mov
into
push
and
push
add
fs
xor
icebp
test
sbb
arpl
or
or
push
or
sbb
fst
sub
aam
cwde
mov
inc
and
stos
cmp
jno
pop
loope
sbb
stc
clc
std
jp
jl
inc
icebp
mov
aas
jecxz
sbb
xchg
dec
mov
inc
ss
or
sub
mov
in
arpl
ror
cwde
fwait
add
fstp
imul
xor
adc
mov
arpl
cwde
aas
in
shl
dec
rcr
inc
push
or
icebp
pop
stc
pop
jns
out
cmp
scas
(bad)
dec
clc
stc
shl
cld
lock
out
ret
mov
pop
ja
pop
add
inc
loopne
mov
sar
lock
cwde
(bad)
mov
mov
enter
shl
pop
enter
clc
aad
add
lods
and
fdivr
popf
call
adc
fdiv
push
(bad)
loopne
pop
dec
cmp
inc
pop
sbb
js
shr
dec
sbb
inc
pop
push
and
mov
fsub
cwde
pop
cli
fstp
or
pop
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
pop
jecxz
add
mov
adc
test
fsub
ss
sub
mov
mov
fdivr
mov
sar
mov
rol
mov
imul
dec
pop
shl
mov
sar
mov
fdivr
mov
sar
mov
shr
inc
fmul
sub
sar
enter
fcomp
inc
fdiv
stos
inc
xchg
jp
jno
lahf
sub
std
stc
dec
add
push
xchg
push
rcr
test
clc
jecxz
jge
ret
push
lock
das
xor
cdq
or
sbb
pop
push
adc
ds
in
fcom
push
cli
push
shr
xchg
jg
push
mov
ss
xor
stc
mov
aas
stos
imul
stc
in
adc
in
cmc
mov
jge
dec
cwde
add
sti
sub
fmul
sbb
mov
lods
or
lods
sub
cmp
shl
movs
or
xchg
scas
cmps
jns
cmp
push
out
or
cmc
outs
push
aas
jmp
aad
add
out
sub
mov
or
adc
push
cmp
not
jno
cmp
xor
in
fbstp
leave
jecxz
push
jno
pop
sbb
xor
mov
jae
std
cmp
mov
xchg
loopne
jle
repz
int
adc
clc
ret
and
int
push
dec
mov
pop
outs
pop
bound
(bad)
sbb
or
es
xor
xchg
pusha
cmp
xlat
mov
mov
les
inc
mov
adc
gs
out
adc
int3
cwde
mov
mov
dec
int
repnz
les
aam
idiv
push
cmp
adc
rcl
push
mov
adc
ror
gs
test
sub
call
mov
adc
sbb
fsubr
mov
jbe
dec
(bad)
jne
ret
and
pop
repnz
ins
cmps
jno
lock
pop
call
xchg
test
fstp
xor
jae
stc
sbb
call
outs
or
xchg
jo
cmp
xor
js
stc
mov
or
mov
cmps
jae
out
fild
lods
jmp
fidiv
scas
and
jmp
out
pop
adc
mov
sub
mov
ror
iret
scas
sbb
cmp
and
pop
inc
in
mov
pop
aas
mul
nop
ret
dec
adc
xchg
jbe
retf
sbb
xor
retf
mov
sbb
jo
popf
mov
scas
push
stos
in
cmp
fsub
pop
and
and
shr
dec
adc
dec
in
mov
xor
jle
(bad)
imul
stos
mov
dec
sub
es
les
mov
mov
popf
test
mul
sub
cdq
shl
push
jmp
fld
jl
inc
shr
push
lock
mov
imul
cwde
inc
ror
imul
and
sbb
je
jmp
push
inc
rcl
mov
cmp
aas
add
test
js
mov
or
or
and
out
sahf
mov
sub
cs
pop
push
in
fucom
jle
repnz
push
jno
sub
pop
jne
ret
sar
add
repz
fld
ret
and
mov
add
fucomp
sbb
cli
aad
pop
or
mov
xchg
in
mov
adc
inc
push
shr
out
stos
repnz
stos
adc
std
add
sub
ret
sti
dec
je
clc
repnz
jnp
mov
fcomp
ret
push
sar
dec
mov
cmp
xor
mov
or
jge
inc
hlt
cmp
std
clc
jnp
jge
mov
ja
adc
call
pusha
hlt
fnsave
inc
outs
pop
shl
ficom
inc
jp
cmps
daa
imul
inc
mov
daa
lds
cli
adc
cs
inc
add
sub
aad
jp
dec
cli
out
in
inc
pmaddwd
fs
std
call
adc
imul
push
imul
stos
retf
xchg
mov
shl
mov
lods
inc
push
addr16
(bad)
push
rep
sub
add
pop
dec
mov
xor
jns
xchg
mov
stos
dec
inc
mov
outs
dec
mov
adc
cmc
mov
sub
(bad)
test
and
mov
jp
leave
std
xor
mov
xor
xchg
outs
std
popf
add
iret
loope
fcom
mov
jl
aaa
pop
addr16
test
mov
div
push
pop
fisub
and
js
das
mov
jp
adc
out
sbb
push
jl
enter
scas
xchg
dec
xlat
adc
jmp
jbe
jge
pop
pushf
rol
imul
call
shl
cwde
inc
push
jb
lds
movs
pop
pop
push
data16
cs
adc
sub
stos
adc
inc
je
pop
mov
mov
lds
test
loopne
pop
mov
ret
pop
cmp
jge
pop
pop
dec
pop
xor
xchg
imul
mov
or
(bad)
aas
push
dec
js
mov
mov
xor
dec
repz
in
jns
int3
adc
dec
(bad)
stc
test
dec
xchg
lods
movs
cdq
mov
js
sbb
push
movs
sub
sub
inc
mov
loope
leave
popa
and
mov
adc
push
addr16
cmps
and
int
jg
adc
(bad)
and
imul
pusha
jne
repnz
cdq
iret
inc
cmp
sbb
mov
scas
or
sbb
xchg
sbb
jecxz
sbb
(bad)
ins
xlat
cmp
push
adc
jo
add
push
test
add
leave
xchg
fst
or
shl
pusha
or
jmp
dec
(bad)
pop
jecxz
ins
sub
jbe
jmp
pop
jl
mov
xchg
nop
or
fldenv
mov
adc
retf
in
or
outs
popf
xor
pusha
idiv
cmp
xor
stos
int
dec
adc
sar
pop
jne
fisttp
push
stos
sbb
sub
inc
mov
cmc
loop
xchg
nop
stos
push
sub
mov
xor
sbb
sub
cmps
out
test
lea
xor
jg
ds
test
mov
clc
sti
sbb
ror
push
call
std
mov
sar
mov
retf
pop
aam
ror
cmp
jge
fcom
in
leave
push
icebp
cmp
jnp
mov
fild
push
inc
rol
mov
jne
jo
test
or
enter
shl
mov
mov
sub
cmps
mov
mov
mov
dec
xor
dec
adc
push
inc
adc
loop
pop
shl
add
jae
lods
mov
loopne
out
enter
popf
inc
jmp
jb
mov
test
or
sbb
mov
mov
mov
xor
add
add
hlt
and
mov
lea
mov
lods
cmc
ds
fst
sbb
ret
jne
call
(bad)
cmp
and
lods
jmp
fcmovnbe
pusha
ret
pop
inc
mov
inc
jae
jp
bound
add
sbb
mov
adc
mov
repnz
mov
fwait
out
cwde
sub
and
pop
xchg
in
push
sbb
and
mov
jae
pop
popf
(bad)
adc
sub
call
cdq
std
test
pop
mov
mov
mov
scas
imul
paddusw
mov
sahf
sub
lock
inc
clc
sti
icebp
movs
xchg
mov
sar
push
fdivr
and
cli
imul
mov
add
jne
mov
push
and
push
mov
pushf
fsub
adc
lods
and
ins
or
shr
jb
arpl
mov
sub
je
mov
mov
icebp
es
push
push
and
or
int3
mov
fldenv
gs
cmp
cli
jo
fisttp
lds
adc
xor
clc
or
jb
cdq
xchg
and
adc
int3
retf
xchg
dec
adc
xor
(bad)
daa
outs
mov
xlat
std
fs
mov
pop
test
mov
dec
stos
fldcw
test
imul
std
fld
push
in
stc
mov
in
push
call
adc
cwde
adc
lods
(bad)
pop
mov
rcl
adc
out
lahf
cdq
ret
data16
xor
jmp
hlt
retf
in
int3
jmp
mov
xchg
or
mov
jg
loope
fs
sbb
sub
xchg
cli
call
and
mov
movs
fmul
sbb
dec
xchg
sub
daa
pusha
scas
imul
mov
cli
repz
leave
push
xchg
fidiv
jmp
in
mov
imul
mov
shl
mov
pop
shl
pop
in
retf
adc
dec
pop
in
cmp
icebp
je
int
pop
xor
clc
mov
rcr
push
dec
sbb
cmp
ss
cmps
lahf
lock
inc
out
mov
or
loop
mov
addr16
xor
push
mov
add
xchg
add
sub
je
push
test
movnti
mov
movs
xchg
cli
or
or
aaa
stos
loope
sub
cmp
pop
stos
cmc
add
or
clc
push
in
xchg
inc
xor
sub
push
push
jl
inc
dec
fwait
push
and
xchg
out
scas
cmp
push
cmp
fsub
fisub
jns
stos
test
sti
and
dec
cmp
xlat
mov
ja
sub
sbb
mov
adc
xor
pop
dec
outs
jg
repz
fwait
push
inc
add
dec
fidiv
and
xchg
in
scas
fisttp
adc
in
push
popf
into
xchg
movs
jmp
clc
mov
call
cwde
sbb
retf
scas
inc
stos
and
lods
add
adc
dec
jmp
clc
push
arpl
adc
retf
adc
pop
in
mov
xor
aam
mov
push
adc
and
test
test
scas
cmp
and
jno
es
or
push
in
xor
pop
jmp
shl
loopne
dec
leave
or
add
ficom
sbb
(bad)
cmps
out
or
fcomp
mov
inc
xor
xchg
cmp
and
scas
cmp
cmps
in
(bad)
int3
mov
jne
push
imul
stc
xor
psubq
dec
cwde
sar
push
inc
push
xchg
int3
in
cld
rcl
jno
ins
sbb
jbe
cmp
mov
(bad)
lea
ja
add
repz
mov
aaa
inc
xchg
enterw
cs
mov
push
scas
xor
jmp
std
pop
sbb
icebp
int
jno
sub
lods
je
mov
fwait
push
mov
bnd
ret
adc
xchg
lods
lea
retf
(bad)
push
jo
ins
cli
call
sbb
stc
mov
mov
mov
cmp
cli
sti
out
ds
mov
(bad)
fs
scas
xor
ficom
ss
pop
(bad)
movs
call
cmp
add
ins
pusha
xor
mov
sub
mov
movs
pop
pop
hlt
xor
add
in
xchg
xlat
push
inc
mov
js
pop
push
fisttp
inc
fisubr
pop
adc
out
retf
and
imul
xchg
call
std
rol
or
push
pop
push
ret
stos
scas
ret
sbb
lods
std
or
add
mov
sti
rcl
rol
outs
mov
(bad)
dec
xchg
fimul
dec
popa
lock
xchg
outs
dec
mov
and
imul
fs
inc
in
jne
sbb
fiadd
clc
push
movs
mov
cli
xor
jnp
xchg
push
nop
mov
aaa
sbb
xlat
stc
or
loope
jmp
xor
cmp
(bad)
mov
mov
outs
xchg
rep
imul
cdq
jne
or
lods
mov
cvtps2pd
cmp
cmp
push
sub
mov
test
stos
mov
das
rcl
sahf
cmp
xlat
mov
jbe
fistp
pop
push
pop
(bad)
dec
loop
sub
ins
loopne
cld
cmp
addr16
push
xor
dec
dec
adc
jne
sbb
mov
xor
adc
loop
adc
test
stos
shr
nop
adc
stos
cmp
pop
adc
mov
sbb
icebp
mov
mov
repnz
rol
outs
dec
mov
test
(bad)
inc
mov
mov
callw
cmp
mov
daa
loope
adc
fs
jcxz
jg
jg
cmps
sub
mov
mov
fstp
sbb
sub
jmp
mov
fs
aaa
stc
sbb
jmp
push
cmp
sbb
xchg
imul
(bad)
fisub
ins
push
(bad)
cld
mov
sbb
adc
sub
fsubr
sub
popf
cmps
ins
in
call
je
mov
ins
fdiv
inc
dec
retf
xchg
dec
pop
and
scas
push
dec
jmp
ret
les
js
and
mov
rcl
mov
pop
inc
xor
sbb
clc
dec
addr16
mov
push
sahf
adc
mov
jle
mov
mov
clc
xchg
shl
sbb
push
xor
fisubr
cwde
es
ror
imul
or
jnp
pop
repz
nop
std
int
mov
dec
enter
call
std
mov
rcr
push
clc
ins
mov
fnstenv
xor
ret
rcr
dec
fsubr
push
push
xchg
dec
push
fs
push
retf
imul
xchg
(bad)
int
dec
add
and
jbe
in
push
shr
sub
mov
(bad)
mov
add
push
mov
mov
es
inc
scas
loope
adc
mov
outs
cmp
hlt
loop
retf
or
mov
(bad)
into
or
cmp
shl
sub
xchg
and
push
aam
enter
fidiv
outs
shl
stos
adc
mov
aas
clc
(bad)
aam
dec
pop
je
xchg
(bad)
outs
xchg
ins
sbb
xchg
pop
inc
imul
int3
test
and
cmp
adc
aas
call
mov
xor
jno
(bad)
ins
mov
retf
and
jbe
pushf
jno
sbb
fisttp
adc
sar
sub
cld
ror
pop
scas
push
push
cmp
dec
mov
pop
(bad)
sub
sub
das
push
sub
dec
sub
stos
dec
scas
aam
cs
imul
int
mov
in
in
ret
xchg
inc
pop
sti
lahf
dec
mov
repz
ss
adc
push
fist
movs
mov
int
lds
imul
pop
add
jbe
nop
sbb
pop
mov
pop
addr16
test
lahf
cdq
inc
mov
sar
call
push
xchg
mov
sbb
push
jmp
fld
movd
dec
or
adc
cmc
mov
fild
xchg
mov
sbb
xchg
stc
adc
sbb
jecxz
fcmovbe
mov
dec
add
fwait
or
adc
icebp
push
mov
xchg
xor
inc
jne
lods
pcmpgtb
push
sub
in
pop
(bad)
mov
fcmovnu
dec
add
and
ficomp
mov
mov
rcl
lock
dec
aas
jns
scas
ror
idiv
shr
cmp
pop
daa
ret
push
dec
or
fwait
pop
cs
into
mul
sbb
js
xchg
fs
xchg
adc
mov
pop
push
loop
jge
adc
cmps
fcmovnu
xchg
and
int3
jg
imul
cld
fwait
dec
xchg
inc
ror
sub
xchg
iret
sbb
fadd
sub
and
shl
or
xchg
jb
lea
inc
aam
sub
in
fcomp
cmps
cmp
ins
das
pusha
push
cdq
adc
xchg
aad
push
xchg
mov
mov
pop
adc
sbb
pop
xchg
enter
inc
sbb
cmp
hlt
push
test
or
xor
call
fnsetpm(287
sub
xor
cmp
cwde
jno
stos
mov
xchg
es
pop
sbb
ret
addr16
cmps
scas
jnp
mov
adc
dec
ret
loope
mov
rcl
add
test
push
mov
mov
pop
cli
rol
scas
dec
movs
push
pop
push
retf
push
pop
daa
rcl
mov
xor
push
imul
jns
sbb
imul
test
das
push
dec
ret
adc
icebp
jno
aas
xchg
inc
cmp
pop
xor
xchg
mov
inc
xor
mov
test
std
rcl
aad
jb
pop
cmp
(bad)
xchg
sti
add
cmps
inc
hlt
dec
jecxz
(bad)
jecxz
fs
cmc
mov
push
xchg
dec
fwait
dec
mov
stos
cmps
shl
enter
shr
ficomp
das
test
cdq
lea
mov
daa
gs
push
iret
push
ins
pop
pop
push
cdq
pop
adc
adc
sbb
ja
imul
jns
and
xchg
retf
call
and
leave
jno
(bad)
jb
test
adc
xor
mov
(bad)
add
imul
jg
test
popa
cmp
(bad)
mov
cmps
mov
int
add
(bad)
mov
pop
jmp
cmp
movs
push
iret
inc
aas
xor
sub
popa
loop
xor
mov
xchg
scas
cld
adc
or
lods
stos
adc
out
stc
add
add
jb
cmp
sbb
inc
adc
jnp
ret
push
pop
adc
adc
adc
movs
and
xchg
les
scas
mov
or
(bad)
ins
(bad)
shr
out
pushf
mov
sbb
mov
or
adc
aam
and
or
arpl
iret
outs
cwde
arpl
sbb
and
fidiv
jns
je
rcl
adc
sub
mov
push
mov
mov
loope
mov
movs
cli
inc
in
leave
cmp
in
push
jb
out
stc
test
imul
pushf
add
add
int3
xor
sbb
arpl
adc
jmp
mov
pop
popa
sbb
xchg
xchg
ficomp
mov
rcr
jecxz
into
cli
xchg
(bad)
mov
pop
sbb
xor
sbb
xlat
mov
lahf
push
inc
test
into
xchg
rol
js
popf
out
call
(bad)
fistp
cmp
xchg
ret
mov
jno
neg
iret
ror
rol
ss
enter
and
jbe
fcomp
xchg
std
mov
xlat
lahf
repnz
lods
dec
(bad)
aam
mov
and
or
and
cld
lahf
or
inc
call
sbb
mov
push
scas
or
(bad)
inc
mov
sahf
test
int
cli
lea
adc
sbb
pop
pop
call
cs
sub
in
mov
fld1
call
push
dec
mov
int3
jns
jnp
mov
push
xchg
cld
xchg
push
es
mov
lock
sti
outs
(bad)
(bad)
inc
or
push
xor
aad
adc
rcr
jmp
inc
ins
sub
call
sbb
lods
rol
scas
and
cmp
pop
sub
xlat
push
adc
jae
in
dec
or
add
inc
loopne
mov
out
scas
sub
sbb
loopne
(bad)
pop
inc
or
push
jns
sti
mov
ror
cli
add
out
test
out
cs
xor
sbb
cmp
adc
sub
popf
inc
adc
push
adc
xchg
cdq
jmp
mov
add
xor
iret
ds
arpl
push
sysenter
movs
(bad)
sub
push
add
lock
out
dec
sbb
fwait
jp
mov
in
push
push
inc
mov
dec
idiv
mov
imul
push
cli
push
cli
inc
clc
jns
les
or
addr16
xchg
xor
pop
jbe
ret
out
and
xchg
ss
stc
cld
aam
fld
je
ja
push
pushf
stos
jmp
outs
dec
inc
sbb
nop
loope
or
xor
jecxz
fidivr
ins
gs
stos
icebp
pop
xor
out
jns
push
push
out
in
add
sub
das
inc
mov
ins
inc
call
jle
scas
je
mov
bnd
jp
mov
or
addr16
ins
add
jmp
out
out
xor
addr16
pusha
dec
pop
sub
and
cmp
fwait
out
repnz
daa
mov
mov
test
push
jmp
or
lds
fsubr
pop
cwde
mov
mov
sbb
pop
enter
shl
push
mov
rcr
test
xchg
pop
fsubr
mov
push
pop
dec
jge
mov
imul
aad
mov
xor
out
mov
das
xchg
inc
and
fistp
std
xor
xchg
sti
out
fdivr
dec
outs
in
inc
stc
loope
neg
(bad)
addr16
bound
(bad)
sbb
push
ja
arpl
xor
pop
and
or
daa
pusha
xor
add
int
shr
fisub
cdq
in
mov
adc
je
into
out
dec
sar
or
mov
xchg
adc
or
jnp
and
xchg
int3
out
arpl
mov
mov
xchg
in
out
popf
fiadd
pushf
leave
lds
inc
xchg
hlt
inc
out
scas
fcom
jnp
adc
push
retf
repnz
je
inc
inc
xor
cs
jmp
sub
sbb
pop
fs
out
dec
cdq
(bad)
scas
jmp
retf
mov
rcl
rcr
js
push
cmp
imul
shr
add
daa
add
cmp
jno
mov
retf
xor
loop
pand
nop
icebp
jg
(bad)
aad
out
jg
ins
pop
arpl
div
aas
mov
xchg
leave
das
movs
ret
dec
cmp
jns
lods
inc
sti
daa
scas
retf
mov
cmp
sub
je
lods
call
dec
push
push
jne
mov
mov
push
or
call
stos
clc
popf
aad
cmp
es
test
psubusw
xchg
icebp
sbb
sub
inc
add
fld
inc
sub
jno
ja
or
js
aaa
push
or
fcmovnu
stos
(bad)
xor
xchg
call
cmp
daa
test
xchg
aad
cmp
int
cmc
out
ins
pop
(bad)
call
gs
jmp
mov
push
imul
jle
mov
cdq
and
lsl
xor
loopne
cmps
(bad)
add
retf
adc
cmp
inc
js
push
int
shl
lods
pop
sbb
pop
mov
clc
arpl
movs
das
mov
add
mov
pop
fwait
add
mov
jb
sbb
pop
or
xchg
xchg
shl
addr16
or
in
pop
fnstenv
cmc
mov
dec
pop
mov
(bad)
jmp
punpcklwd
sbb
icebp
sbb
push
add
mov
push
dec
test
imul
mov
cs
es
cli
(bad)
ficom
hlt
cmp
ds
cmp
jnp
pop
mov
fistp
dec
out
fldl2e
sub
mov
sahf
inc
xor
sbb
pop
push
jnp
xor
dec
sub
pop
pop
test
push
xchg
xlat
pushf
in
dec
int3
pop
and
pop
cwde
mov
shr
inc
shl
push
shl
mov
inc
sar
cmp
pop
div
dec
pop
jns
dec
pop
lock
dec
fld
push
inc
rol
and
int
xchg
pushf
push
psrld
inc
movs
mov
sbb
repnz
add
mov
repz
dec
shl
retf
push
in
mov
push
xor
add
arpl
pop
jns
(bad)
fucom
xor
repz
sbb
mov
dec
fdiv
cli
loop
dec
jp
lea
xchg
jl
or
(bad)
ins
or
pop
cdq
call
xchg
mov
outs
cdq
inc
lods
sbb
xchg
sahf
gs
shl
cmps
pusha
(bad)
xchg
inc
outs
test
push
ficomp
pop
jnp
inc
stos
out
dec
(bad)
ja
and
xor
jl
xchg
cli
push
pop
jae
push
adc
jno
in
mov
fcom
mov
outs
ins
mov
ret
push
pop
xor
xor
jl
scas
xchg
sub
and
push
xchg
sbb
xchg
outs
xlat
imul
fistp
push
xchg
repnz
lods
pop
jmp
ror
sahf
loop
mov
mov
mov
push
mov
mov
popa
repz
std
shl
hlt
std
mov
push
pop
dec
or
in
xchg
xlat
jnp
fiadd
jle
jne
in
mov
leave
pop
jne
(bad)
mov
mov
inc
out
test
pop
int3
push
jno
in
psubusw
fmul
adc
dec
pop
out
fsub
je
or
repnz
(bad)
mov
shl
xchg
cwde
gs
and
mov
test
sahf
dec
dec
push
ret
cld
inc
shr
jne
and
adc
pop
push
mul
iret
cdq
mov
sub
scas
sbb
cmps
xchg
pushf
daa
push
cmp
inc
repz
(bad)
repz
cmp
jge
inc
(bad)
push
and
out
cli
push
dec
scas
imul
dec
add
cmp
mov
out
xchg
mov
aas
test
shl
fbstp
jno
mov
sub
(bad)
jns
mov
data16
jge
dec
and
inc
xor
push
mov
fidiv
rcr
mov
jnp
repz
dec
mov
fild
aam
inc
int
shl
pop
nop
xor
or
sti
jl
(bad)
mov
repnz
cmc
lds
(bad)
mov
int
lahf
data16
sub
pop
cdq
or
aaa
cmps
cmp
cmc
sahf
add
push
in
or
cmovo
rol
int
sub
loope
jg
add
in
xor
rcr
cmps
imul
cmp
into
(bad)
push
jmp
adc
rcr
and
cdq
push
inc
mov
mov
call
shl
mov
mov
add
pushf
or
pusha
sub
popa
or
int3
xor
mov
lea
(bad)
icebp
outs
or
cmp
mov
nop
jbe
in
inc
enter
jne
rol
sub
xor
gs
pop
bound
je
aas
cmps
pop
jo
xor
mov
jnp
scas
mov
cmpps
inc
enter
jp
inc
mov
dec
adc
loop
les
push
call
xor
repnz
les
lods
xchg
pop
jle
xchg
fs
and
sbb
push
call
pop
jecxz
inc
mov
and
dec
lods
repz
xor
and
adc
repnz
enter
add
xchg
mov
int
xchg
fwait
(bad)
out
pushf
jb
scas
fs
jmp
mov
mov
xchg
inc
xchg
aam
lock
je
push
retf
jno
mov
dec
outs
sub
clc
test
leave
iret
shl
xor
add
or
adc
adc
adc
or
sti
push
jo
jle
stos
dec
cmp
and
sub
popa
push
sub
inc
mul
(bad)
xor
jle
dec
in
xor
cmp
mov
cmp
repnz
(bad)
mov
outs
test
add
stc
ins
cmp
mov
or
jne
and
out
(bad)
rcl
jo
mov
aad
sub
sbb
cwde
adc
cmp
inc
inc
jae
mov
shl
clc
mov
cmp
push
popf
mov
cmp
retf
fnstcw
pushf
gs
push
mov
pop
jmp
and
inc
mov
adc
test
outs
add
aam
jg
sbb
dec
sub
lods
scas
push
xlat
jo
cmps
ja
pop
xchg
jmp
xchg
jae
bound
mov
rcl
and
shl
mov
push
inc
fadd
sub
adc
inc
jecxz
jno
sub
sub
aas
jnp
xchg
fcom
cmp
ret
or
push
inc
shl
pop
add
(bad)
and
mov
add
loopne
cld
inc
pop
xchg
cmp
or
leave
pop
mov
cmp
add
imul
sbb
dec
sbb
and
stos
fdivr
stc
cwde
fcom
or
jp
adc
arpl
adc
mov
in
or
das
mov
jnp
ss
xchg
mov
or
jae
mov
fadd
out
dec
fs
test
inc
push
xor
test
mov
inc
inc
aaa
mov
ins
stos
sub
fs
mov
fcom
fld
jae
jge
les
mov
pop
int3
icebp
xrelease
fnstsw
push
cmp
fs
adc
(bad)
xchg
push
mov
and
out
shl
scas
arpl
add
jb
xor
adc
xor
sbb
or
sahf
cmp
xor
sbb
push
test
popf
mov
mov
mov
xchg
push
ret
inc
adc
and
stc
xor
sub
adc
sti
jns
push
mov
popa
or
aad
pop
(bad)
movs
adc
push
call
cmp
test
pusha
push
inc
adc
jl
xor
inc
fcos
(bad)
pop
aaa
aad
(bad)
(bad)
mov
cmp
inc
iret
shr
pop
call
xchg
inc
lds
int3
jnp
fdivr
jae
int
add
loopne
mov
cmp
pop
sbb
xchg
lock
push
fistp
jno
push
or
sar
out
pop
shl
add
xchg
out
inc
or
(bad)
sahf
mov
jecxz
jl
inc
xchg
xor
shr
jmp
and
dec
xor
popf
mov
dec
sar
mov
ret
nop
fild
xlat
int3
psllw
push
popa
xor
(bad)
xlat
sbb
shl
push
jl
cmp
pop
test
mov
loopne
leave
add
sar
xor
rcr
mov
ins
xor
repz
xchg
mov
(bad)
lods
mov
and
(bad)
frstor
sbb
sti
mov
out
sbb
ins
push
push
daa
adc
fistp
jnp
cmc
test
lock
mov
fdivr
mov
shl
mov
leave
pop
div
rcr
dec
pop
lock
dec
fld
push
inc
rol
or
sbb
adc
push
into
ficomp
mov
jecxz
lock
jle
inc
mov
lahf
jne
aad
sub
cli
retf
dec
push
(bad)
sub
(bad)
in
xchg
sbb
xchg
in
jge
mov
sub
mov
push
fsubr
mov
mov
push
push
test
mov
test
push
dec
mov
push
bound
jecxz
add
pushf
adc
pop
jl
imul
in
test
push
add
mov
pop
test
(bad)
push
shl
in
jp
sbb
loope
das
in
and
shl
mov
add
and
mov
(bad)
cld
xor
inc
jmp
and
shr
ins
movs
pop
push
jns
hlt
aam
add
sar
mov
add
jp
imul
aas
gs
pop
adc
out
test
ss
jl
lea
jne
xchg
shl
pusha
xor
fdiv
out
lods
(bad)
cli
mov
cmps
push
cmps
dec
dec
iret
inc
adc
fdiv
xor
push
fimul
cwde
ins
mov
hlt
(bad)
mov
push
lds
cwde
mov
cdq
jmp
outs
jmp
add
jnp
mov
fidiv
and
xchg
sub
and
fs
xchg
into
mov
mov
lds
sbb
mov
aad
out
and
adc
leave
inc
je
mov
out
sbb
(bad)
aam
adc
push
jno
sub
lock
inc
bound
pusha
retf
scas
ja
pop
clc
jno
(bad)
fidivr
test
ror
jg
cmp
sahf
test
out
cmc
aam
xchg
xor
xor
mov
pop
inc
cs
jg
inc
push
xor
jmp
cld
jb
mov
jbe
mov
hlt
cmps
push
push
neg
rcr
inc
scas
adc
outs
push
movs
jl
push
je
ss
xor
out
in
xchg
aas
push
push
mov
out
mov
xor
cmps
jnp
mov
in
stc
add
int
leave
mov
jbe
arpl
fwait
inc
jb
mov
mov
inc
(bad)
mov
sbb
add
cli
test
sub
in
nop
mov
mov
in
lods
mov
lahf
retf
mov
mov
es
mov
inc
mov
push
retf
call
xchg
ret
test
mov
cmps
lahf
mov
sub
mov
pop
cmc
mov
dec
enter
sar
mov
inc
shl
fdiv
iret
pop
jno
dec
pop
jge
retf
dec
(bad)
fnstcw
inc
push
sub
and
add
js
add
addr16
fisttp
jl
fnstenv
xor
mov
test
xchg
es
scas
and
xor
inc
sar
sub
cdq
or
inc
mov
test
jo
sbb
xchg
and
aas
outs
sub
and
sahf
leave
frstor
inc
push
cmp
(bad)
test
jae
sahf
jp
ins
jge
(bad)
jmp
mov
lock
push
call
dec
mov
and
repnz
fsubrp
mov
sub
xchg
cmp
or
inc
pop
in
cmps
cwde
sti
lds
sbb
iret
imul
loope
inc
lock
test
adc
int3
cmp
sub
lods
push
sub
addr16
out
xchg
xor
(bad)
clc
loope
mov
add
je
cmp
xor
loop
xor
add
in
(bad)
je
(bad)
mov
dec
sbb
call
jp
outs
xor
add
les
ds
cmps
mov
call
cdq
sub
mov
xlat
js
push
std
leave
repnz
mov
sub
xlat
(bad)
or
mov
jb
(bad)
xor
sbb
push
(bad)
ret
int
sub
sub
data16
add
ror
cdq
and
push
or
nop
xor
or
sbb
test
xchg
stos
sub
add
cli
fwait
inc
mov
jne
call
push
push
inc
or
(bad)
fdivr
push
movs
(bad)
jmp
fidivr
mov
sub
xchg
(bad)
stos
push
or
push
cmps
xchg
xor
sub
loopne
cwde
xor
nop
add
shl
clc
sbb
pushf
clc
pop
repz
test
js
shl
jnp
call
push
xor
mov
inc
sub
sub
retf
loop
cmps
adc
enter
test
mov
push
mov
cmps
cmp
out
mov
sub
leave
push
ret
mov
or
in
push
xchg
fist
add
push
cmps
xchg
add
jmp
push
aad
jp
xchg
sub
jmp
div
inc
rol
mov
int3
test
inc
je
sub
cmp
push
sbb
adc
mov
jg
adc
mov
sub
and
cmp
popa
rol
cmp
(bad)
in
je
imul
or
mov
push
aam
mov
repz
inc
iret
pusha
and
pop
or
mov
or
(bad)
or
xchg
jmp
out
loopne
and
shl
scas
and
dec
mov
(bad)
mov
mov
add
xor
lods
retf
add
call
into
aas
jg
xchg
jo
push
(bad)
addr16
lea
scas
jno
sbb
and
mov
sbb
mov
sbb
mov
mov
pop
pop
lahf
ds
cld
adc
ins
cmps
outs
shl
jo
aad
loop
inc
fmul
sbb
addr16
dec
cmp
sti
dec
jge
push
pop
and
mov
add
mov
or
mov
sbb
mov
push
cmp
std
sti
popa
mov
scas
call
mov
cli
es
int
push
dec
inc
mov
sub
mov
stc
(bad)
shl
or
add
ins
movs
imul
addr16
jmp
mov
and
xor
mov
adc
call
aam
jb
jb
jle
(bad)
icebp
dec
pop
pop
inc
mov
or
je
shl
cdq
lock
fbstp
cmp
mov
mov
test
mov
(bad)
jb
pop
pop
xor
and
jmp
pop
js
sub
int
inc
ds
jbe
fldenv
add
lods
sub
mov
ja
pushf
mov
jg
retf
bound
inc
ds
fwait
mov
sub
inc
or
call
push
arpl
retf
adc
cmc
data16
cmp
in
out
cmp
gs
sti
pop
fbstp
add
pop
sub
push
lods
xchg
std
stc
addr16
hlt
sub
nop
arpl
jp
dec
test
push
imul
cmps
pop
push
mov
nop
leave
or
push
aad
mov
push
xor
popf
lods
loopne
arpl
cmc
mov
out
xadd
cmps
sub
add
jns
(bad)
adc
sbb
mov
fld1
icebp
mov
push
inc
dec
jnp
and
mov
xlat
arpl
mov
sbb
jle
ss
push
test
leave
loopne
fisubr
scas
or
sbb
outs
jp
cld
mov
retf
adc
lods
ins
(bad)
ds
mov
push
inc
or
leave
lods
pop
js
fisubr
mov
pop
jg
cmc
mov
mov
push
cli
cmp
lods
xchg
dec
jmp
in
int3
sbb
push
les
cwde
pop
mov
sbb
lods
repnz
sti
outs
scas
adc
mov
leave
add
es
push
dec
dec
stc
rol
pusha
pop
(bad)
mov
sub
xchg
mov
xchg
pop
pop
cmp
rdtsc
cmp
inc
stos
xchg
jp
daa
addr16
(bad)
pop
mov
xchg
shr
loopne
popf
jmp
(bad)
sbb
and
dec
lods
jmp
adc
sbb
jle
rol
aad
arpl
std
mov
inc
shl
push
fdivr
mov
dec
fdiv
enter
(bad)
shl
int
add
lahf
cmc
mov
rol
add
shl
jb
mov
icebp
lock
jmp
call
jnp
mov
adc
and
adc
imul
or
lock
lea
int
push
push
stos
shl
jmp
shl
or
pmuludq
dec
in
adc
in
xor
push
adc
mov
sbb
cmp
jne
das
div
outs
pusha
fld
jno
jnp
gs
add
test
dec
jmp
cs
jae
gs
(bad)
push
xchg
imul
nop
add
xor
jbe
adc
pop
rcl
ret
pop
test
xchg
fmul
mov
sbb
(bad)
pop
leave
and
pop
mov
and
cmp
dec
scas
inc
adc
pop
popa
push
in
shl
adc
or
mov
or
xor
pusha
(bad)
out
adc
and
vmovups
cmp
(bad)
fwait
mov
ret
in
mov
inc
pop
ror
push
loop
xor
shl
mov
scas
fmul
out
(bad)
dec
in
sbb
inc
mov
lea
and
into
push
pushf
push
aas
je
jmp
gs
retf
add
mov
ficom
in
int3
hlt
push
not
pop
mov
sbb
inc
fwait
ins
fisubr
mov
push
les
test
stc
push
inc
push
das
nop
cmp
push
mov
in
dec
dec
clc
int
out
ret
push
loop
cld
dec
mov
mov
adc
das
loop
ret
bound
jle
retf
xchg
dec
push
sub
iret
adc
call
adc
inc
(bad)
(bad)
pop
js
fisubr
mov
mov
mov
xor
push
test
lea
jmp
call
test
loope
mov
test
mov
(bad)
rdpmc
cmp
dec
jle
xor
popf
cmc
push
mov
je
jb
ja
sub
adc
inc
xor
push
int3
hlt
xor
and
mov
lahf
sti
inc
mov
cmp
int
jp
shr
pusha
push
imul
mov
cli
ins
pushf
sti
mov
in
cmp
shl
mov
aam
les
mov
ret
cmps
add
mov
adc
call
mov
inc
repz
add
mov
mov
imul
or
inc
xor
jbe
or
or
out
enter
fild
inc
ds
(bad)
push
mov
ins
lods
push
rol
mov
xchg
mov
mov
mov
cmp
lock
enter
inc
imul
js
repnz
cli
and
stc
mov
call
xchg
xchg
inc
jmp
sub
xor
xlat
cdq
in
add
es
sti
pop
jge
daa
jo
out
xor
call
sub
xor
xchg
nop
ins
cli
and
mov
push
mov
mov
inc
or
ds
stos
mov
and
ins
sub
jo
pop
push
mov
cld
ss
fmul
mov
in
inc
adc
mov
hlt
and
shr
mov
push
pop
mov
add
sbb
loopne
adc
leave
inc
push
ja
fild
cli
shl
ret
ins
mov
push
pusha
pushf
cmp
sbb
jbe
pop
push
jmp
adc
fist
or
enter
iret
mov
mov
in
les
mov
xor
fs
add
xchg
adc
xor
fwait
pop
jg
fmul
(bad)
mov
sbb
mov
xchg
jl
leave
pop
pusha
add
xchg
mov
stos
jmp
sbb
je
sbb
pop
push
enter
xchg
out
clc
add
xor
cwde
mov
cld
adc
ins
add
retf
add
mov
pop
out
xchg
sbb
aaa
sbb
inc
(bad)
in
addr16
pop
in
jns
and
jno
xor
imul
popf
aaa
cdq
mov
push
jle
out
sbb
mov
mov
mov
xor
fnop
push
in
mov
fsubr
adc
lock
or
xchg
loop
push
pop
xchg
adc
ds
repnz
dec
sub
xor
test
mov
cdq
das
mov
sti
jge
jno
jno
nop
test
clc
dec
repz
mov
add
je
(bad)
push
pushf
or
std
mov
push
push
cmp
mov
test
retf
inc
inc
jge
emms
rcr
(bad)
pushf
aam
repz
mov
fcom
xchg
or
not
adc
sub
mov
inc
lahf
call
sar
shl
mov
(bad)
adc
lods
int3
add
bound
aas
add
pop
or
cdq
sub
or
xor
ins
aas
scas
pop
stos
inc
stos
dec
inc
jg
fcmovb
cmp
pop
stos
mov
movs
loop
mov
or
dec
and
rcl
and
xchg
or
pop
push
test
jns
sbb
scas
add
pushf
xchg
call
cld
mov
xor
test
mov
rcr
test
out
jno
sbb
rcl
iret
inc
push
out
dec
and
push
mov
cmp
lods
mov
jl
cmps
fs
inc
clc
repnz
xchg
hlt
fwait
xchg
aam
jae
cld
xchg
lods
mov
fwait
sbb
dec
inc
push
pop
int
mov
inc
(bad)
data16
xchg
sbb
adc
pop
jle
and
adc
aas
jnp
pop
ret
stos
arpl
inc
mov
retf
ret
bound
inc
xchg
cmp
leave
fwait
in
arpl
fild
fcmovnu
and
cvttps2pi
and
sti
cmc
xor
arpl
jbe
std
mov
lock
dec
add
call
add
bound
sbb
mov
and
sbb
mov
adc
int3
lods
addr16
gs
fstp
xchg
int
test
sub
int3
call
push
loopne
cli
mov
clc
(bad)
stc
push
sbb
sti
ja
pop
aam
shl
and
add
pop
xchg
dec
fcmovne
xor
loope
xchg
call
and
push
stc
ret
hlt
push
icebp
jge
sub
lds
repz
inc
mov
and
push
sbb
adc
shl
sahf
cmc
out
or
fdiv
stos
aad
or
pop
push
jecxz
mov
daa
mov
mov
ret
retf
fs
(bad)
or
sbb
(bad)
fsub
movs
dec
leave
pop
or
loope
sub
mov
clc
mov
mov
sahf
icebp
sbb
aam
sar
js
pop
call
imul
lahf
fwait
add
cmp
aaa
sbb
jmp
stos
arpl
push
cmp
dec
mov
icebp
scas
stc
xchg
fwait
loop
sti
sub
bound
or
fucomp
xor
sub
sub
xchg
cmp
es
pusha
fcmovnb
fild
mov
pop
sbb
xchg
jle
jne
cmc
std
push
popf
push
lock
lods
sub
dec
cwde
sar
and
xor
cmp
xchg
jo
jmp
ror
xchg
sub
das
data16
nop
xor
jae
rcl
sbb
retf
sub
pop
sbb
pop
cwde
sbb
dec
fscale
scas
inc
or
fsub
add
loope
and
fistp
push
push
mov
aaa
inc
popf
cmps
push
lock
(bad)
stc
ins
in
mov
mov
cmp
jmp
inc
in
push
sbb
ficom
aad
shl
xor
gs
ret
cli
sub
cmc
inc
inc
sti
jb
adc
test
aad
test
dec
loope
fdiv
fcomp
leave
jns
jl
stos
pushf
jns
aaa
into
adc
or
iret
fidivr
push
sub
loop
dec
loopne
fadd
sbb
aam
retfw
fdivp
and
mov
push
jb
xor
das
cli
mov
rcl
mov
sar
inc
add
in
fwait
(bad)
in
test
shl
push
rcr
pop
clc
aad
pop
lock
imul
loopne
adc
shl
jge
ret
jo
sbb
mov
add
pusha
pop
jo
jo
sbb
add
mov
dec
clc
aad
imul
adc
xchg
adc
js
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
push
jecxz
jmp
loopne
mov
retf
shl
clc
sti
push
mov
shl
mov
fdivr
mov
sar
mov
inc
rcr
div
add
mov
push
fdivr
mov
sar
mov
sar
mov
rcr
imul
dec
dec
rcr
xor
std
mov
dec
pusha
inc
fnsave
aas
xor
call
loop
push
leave
aas
push
xchg
cmp
ret
pop
jo
and
push
jp
cdq
lea
add
stos
fstp
sub
xor
xlat
ins
jae
cmps
inc
mov
mov
jbe
ja
or
lea
pop
clc
dec
daa
cdq
sbb
jle
inc
push
xor
inc
adc
stos
sub
stos
jae
in
enter
add
imul
std
push
inc
add
jne
xor
(bad)
fcmovne
imul
adc
icebp
or
daa
jmp
push
and
(bad)
lods
popf
sub
ins
(bad)
jno
daa
mov
faddp
sub
jbe
jno
push
call
das
xchg
icebp
mov
(bad)
int
push
push
sub
les
mov
ror
repz
inc
das
imul
icebp
adc
adc
(bad)
stc
mov
aam
mov
jg
mov
mov
(bad)
sub
std
push
mov
std
dec
popa
pop
sar
mov
std
mov
jp
call
fsubr
cs
push
add
xchg
aad
mov
inc
and
cdq
stc
test
sbb
pop
fcomp
push
mov
cmp
mov
fucomi
mov
inc
jge
into
adc
add
cmp
sbb
xor
xchg
nop
sub
lods
add
mov
xchg
mov
sbb
nop
pop
scas
cmp
lea
ss
or
leave
int3
inc
(bad)
enter
pop
xchg
xor
jecxz
or
dec
int3
mov
or
sbb
inc
gs
xchg
outs
mov
test
xor
lods
in
sub
out
call
jae
ficom
movs
scas
sub
inc
stos
jle
int
(bad)
xor
test
mov
sbb
ret
and
cmc
xor
xchg
imul
or
lods
daa
ficomp
std
add
xor
jno
int3
cwde
cmp
add
push
in
mov
aam
inc
rol
test
(bad)
lahf
sub
pusha
cmps
or
loope
ins
jne
fwait
sbb
out
or
sahf
inc
cmc
lahf
and
test
jmp
pop
mov
or
imul
out
adc
repnz
and
cmp
push
enter
push
mov
mov
xor
sbb
(bad)
mov
sub
dec
jge
jb
pop
push
ret
mov
in
rcl
jl
(bad)
mov
jge
in
iret
adc
mov
xor
repz
icebp
mov
fisttp
(bad)
cli
mov
inc
inc
cdq
pop
nop
xor
xor
std
and
data16
sbb
jmp
xchg
jmp
std
mov
and
dec
jge
jmp
dec
fisttp
lods
outs
mov
mov
or
mov
(bad)
mov
jg
inc
shl
sbb
xor
sar
mov
test
pop
xor
adc
xlat
std
mov
and
mov
and
cmc
mov
jae
std
mov
rcr
mov
push
call
gs
jo
or
shl
dec
icebp
ins
dec
cld
sar
sahf
dec
mov
sbb
sbb
cmps
push
fwait
dec
xor
(bad)
mov
retf
lea
sbb
imul
add
cmp
ins
stos
push
out
sar
push
push
jge
inc
out
bound
sub
and
cmp
mov
ds
push
xchg
call
sti
sub
dec
mov
xchg
imul
stc
pusha
adc
movs
aad
xor
and
add
cmp
sbb
dec
mov
dec
xchg
jmp
pop
loope
fnsave
or
push
daa
cmp
ret
cmp
in
je
mov
lods
hlt
lea
or
aad
enter
lds
ss
mov
mov
sbb
jp
sbb
jb
(bad)
and
test
mov
sub
test
jo
in
test
sahf
jnp
ja
lds
xor
gs
adc
adc
es
pop
outs
adc
sbb
push
jnp
inc
push
pop
mov
pop
jecxz
add
ffreep
dec
jno
sbb
cwde
cmc
repz
retf
xor
inc
int
aaa
jo
xchg
pop
arpl
popa
pop
les
xor
mov
mov
test
ret
inc
je
xor
call
inc
jne
mov
scas
and
repnz
loope
adc
mov
mov
sahf
mov
nop
repz
pop
clc
sbb
sub
nop
int3
mov
mov
push
xchg
ss
push
jmp
xor
mov
frstor
xor
cmc
mov
das
mov
imul
(bad)
call
lock
jge
sbb
sbb
sub
call
in
xor
cmp
bound
loop
pusha
bnd
hlt
pop
pop
mov
call
sahf
inc
sti
not
adc
ds
xchg
hlt
xor
push
repz
dec
les
mov
sub
xchg
sub
adc
pop
pop
add
sub
jmp
hlt
adc
scas
nop
mov
lds
test
sbb
dec
push
fdivrp
rcr
in
fstp
fistp
sbb
fsubr
stos
mov
ror
movs
inc
xchg
lods
fs
nop
test
sub
fstp
icebp
mov
test
pop
or
adc
mov
clc
sar
(bad)
stos
jmp
sub
xchg
inc
push
shl
mov
clc
sar
adc
sbb
mov
push
and
sbb
add
cmps
xchg
(bad)
jp
fwait
out
retf
add
xlat
mov
and
cmp
mov
cmc
push
dec
xor
push
inc
inc
lock
loopne
xlat
in
test
shl
dec
shl
mov
sar
mov
shl
test
lock
pop
inc
cmc
sub
shr
stos
loop
hlt
xor
jno
and
sti
clc
mov
fcom
sub
int3
mov
sub
ja
iret
and
inc
pop
ret
cmp
aas
inc
mov
sbb
jmp
fs
hlt
clc
or
imul
xchg
shl
scas
jmp
xor
inc
sub
icebp
daa
leave
outs
inc
fs
shl
mov
pop
or
out
arpl
push
mov
fidiv
mov
int
cmc
xchg
jo
and
or
popf
inc
into
and
sub
pushf
retf
xor
dec
popa
dec
(bad)
adc
fiadd
add
out
cmp
pand
test
je
sbb
xor
sbb
ins
xor
mov
xchg
xlat
mov
retf
pop
pop
push
aaa
int3
lods
mov
dec
and
adc
shr
jae
push
fcom
outs
push
dec
inc
mov
aas
in
xchg
inc
addr16
add
mov
pushf
in
mov
push
arpl
jmp
or
imul
and
pop
mov
and
mov
or
jnp
xchg
mov
add
adc
into
(bad)
inc
aam
jns
in
cmps
cli
cmp
out
std
push
mov
arpl
add
push
movs
push
jl
addr16
sbb
mov
out
fsubr
xlat
jns
and
or
sub
aas
cmps
retf
push
push
add
or
adc
push
cmp
mov
cmp
xlat
aaa
pop
mov
sbb
mov
mov
(bad)
mov
mov
ja
push
fld
jg
shl
pop
bound
dec
pop
mov
in
and
popf
push
stos
hlt
mov
in
std
bound
mov
sub
iret
fdivr
hlt
outs
mov
mov
pusha
mov
mov
fwait
lods
pushf
fnstcw
call
sub
out
fild
adc
and
pushf
pop
xchg
cwde
or
lods
(bad)
ins
push
sub
cmp
ja
push
(bad)
xor
es
inc
das
jmp
pop
test
jg
out
jne
in
out
xor
nop
and
enter
call
std
mov
inc
shl
inc
push
ins
mov
fdivr
retf
pop
ins
xor
push
mov
pop
stc
pop
cmps
popa
sub
mov
add
hlt
or
pop
sbb
sub
movs
mov
loopne
cmp
in
cmp
cdq
dec
jmp
mov
mov
dec
test
jg
jbe
cmps
jp
sub
in
mov
dec
cmp
rcl
arpl
cmp
mov
mov
(bad)
jmp
fdivrp
outs
dec
push
push
imul
test
sub
iret
inc
adc
jb
xor
mov
xchg
inc
sbb
ficom
fs
inc
clc
test
mov
push
push
inc
repnz
cwde
push
inc
mov
or
mov
add
inc
cld
dec
mov
pop
in
lock
pop
jecxz
mov
enter
mov
mov
pop
(bad)
xor
das
jge
sub
(bad)
push
lahf
imul
mov
mov
cwde
push
pop
xor
and
jb
sahf
pushf
test
pop
shl
add
mov
cmp
mov
sbb
mov
dec
xor
lods
sbb
(bad)
movs
mov
pop
sbb
mov
dec
aam
xchg
(bad)
out
scas
call
pop
jmp
push
ret
dec
ja
in
mov
dec
lea
rol
movs
push
or
dec
and
fidiv
inc
push
dec
sbb
sub
rcr
jmp
pop
mov
and
iret
shl
das
cld
jmp
fstp
cmp
cli
dec
pop
jns
or
and
jmp
cmp
xor
test
xchg
sub
ret
outs
xchg
mov
xchg
loope
pop
ret
imul
outs
mov
push
repnz
fidivr
jae
iret
sbb
adc
imul
pop
mov
jecxz
cmps
inc
icebp
sbb
movs
inc
mov
stos
mov
jg
mov
popa
arpl
or
daa
pusha
imul
aad
dec
scas
pop
cmps
add
scas
(bad)
shr
jbe
js
imul
in
push
inc
xor
jo
minps
xor
mov
aam
pop
pushf
xor
mov
imul
out
mov
add
enter
movs
sub
retf
jne
or
in
dec
xchg
adc
cmp
xchg
mov
and
lds
xor
fwait
mov
and
xor
dec
and
in
xchg
leave
cmp
ret
and
pushf
call
lahf
fucomp
das
outs
ror
pop
sahf
test
outs
pop
loope
add
test
lods
stc
aam
gs
and
and
add
int
mov
(bad)
inc
andnps
(bad)
mov
daa
out
push
dec
mov
mov
mov
pop
pop
int
cmps
movs
retf
push
add
and
icebp
jl
mov
adc
add
fs
stos
mov
lahf
std
into
jle
xor
add
mov
dec
jge
jg
sbb
stc
xor
mov
fdivr
push
das
cld
int3
call
cwde
cli
jmp
cmp
push
pop
push
adc
psubsb
mov
jnp
pop
outs
fisubr
jbe
pop
test
inc
dec
cmp
mov
fbld
sub
or
pop
pusha
movs
pusha
imul
adc
xor
call
inc
push
rol
add
jmp
xchg
in
iret
add
pop
fild
sub
mov
pop
ret
push
cwde
int
jnp
std
mov
shl
test
rcr
xor
aam
ror
je
ficom
mov
pop
ins
mov
ror
idiv
out
jo
dec
dec
imul
out
jns
das
fadd
icebp
pop
push
dec
add
xchg
cmc
mov
loopne
mov
les
inc
push
sub
int3
js
imul
fimul
jmp
xchg
std
hlt
sub
push
shr
xchg
mov
xchg
xchg
add
xchg
mov
add
sbb
(bad)
loopne
repz
pusha
cmp
jmp
adc
xchg
jmp
loop
gs
adc
iret
aam
add
jge
in
cmps
cmp
aaa
pop
inc
(bad)
sub
and
test
test
cmp
popa
sti
pop
jns
aas
cld
xor
inc
jmpw
xchg
push
test
dec
cmp
mov
sbb
sub
ret
call
scas
fiadd
lahf
adc
dec
push
xchg
push
mov
sbb
push
addr16
xor
out
jno
jmp
jg
ds
test
mov
jnp
push
outs
jo
cmp
pop
imul
xor
sahf
cmps
mov
fcomp
fisubr
call
clc
add
pop
push
outs
rol
aaa
enter
jmp
adc
jmp
cs
int3
scas
hlt
cmp
mov
in
sub
mov
or
xchg
lock
fcom
ret
push
cwde
mov
loopne
push
mov
xchg
fisubr
jbe
jmp
xor
jno
pop
movs
imul
or
call
iret
cmp
mov
stos
sbb
pop
rcl
cmp
rol
adc
adc
lods
mov
jmp
call
(bad)
jecxz
mov
mov
push
bound
inc
dec
loopne
jae
mov
cli
adc
or
rol
xchg
cmps
loopne
(bad)
(bad)
mov
jae
push
mov
lahf
xor
cmp
ins
sub
mov
out
scas
not
inc
jg
(bad)
push
(bad)
shr
pop
imul
push
leave
push
or
pop
or
imul
test
addr16
loop
add
mov
sbb
and
test
repnz
xor
fist
hlt
out
lock
in
les
shl
cwde
sub
sar
repz
bound
mov
aam
inc
lahf
out
repz
test
lods
sahf
rol
or
push
jmp
popa
xlat
stc
popa
add
cmp
sub
jae
js
fmulp
pop
push
adc
movs
adc
fidiv
sub
aas
movs
push
fdiv
jp
cli
and
nop
in
(bad)
mov
jecxz
or
aaa
dec
shl
gs
dec
cmp
xor
inc
cmp
pop
cmp
adc
and
lods
mov
adc
mov
cmp
std
loopne
fild
sbb
add
mov
and
stc
hlt
or
pop
cmps
das
lock
mov
sbb
pop
test
push
fstp
mov
cmps
stos
mov
sbb
mov
jmp
fst
stos
mov
sub
lods
jmp
sbb
sahf
pop
popa
or
jl
mov
es
fiadd
push
mov
inc
cmp
mov
(bad)
int3
adc
cmp
sub
and
cmc
adc
cmps
faddp
and
shl
scas
push
xchg
sbb
mov
ja
jmp
or
(bad)
popa
mov
or
mov
lahf
adc
and
(bad)
push
add
popa
pop
xor
icebp
mov
(bad)
mov
or
xchg
dec
pop
pop
jno
popf
mov
out
dec
mul
adc
pop
inc
pusha
or
std
sub
rcl
push
leave
int3
jb
or
fidiv
sbb
push
and
dec
loopne
inc
pop
mov
add
in
cmp
in
fcomp
push
sbb
leave
test
xor
xchg
loopne
push
cmp
jo
mov
xchg
inc
sbb
inc
dec
out
rol
jmp
mov
retf
jbe
adc
push
or
fsubr
adc
jne
clc
pop
in
dec
pop
leave
pop
xor
mov
or
ins
repnz
xor
xor
rcr
cmp
pop
cmps
adc
cdq
mov
ins
leave
sbb
(bad)
imul
in
fdivp
adc
sbb
push
dec
pusha
xchg
cmc
int3
push
icebp
js
arpl
dec
clc
cs
xchg
xor
adc
push
rcl
cwde
(bad)
pop
cmp
add
push
cmp
and
adc
ffreep
jmp
loope
call
pop
pusha
or
nop
les
and
jecxz
pop
and
lahf
add
cmp
add
xchg
jmp
cwde
xor
sar
inc
lock
imul
mov
inc
push
cmc
cmp
jg
dec
fidivr
iret
pop
lock
les
sti
clc
mov
fcomp
pop
mov
push
jg
xchg
and
jne
mov
xchg
lahf
add
iret
mov
jb
and
dec
push
jae
inc
ja
sbb
pushf
pop
mov
scas
pop
xchg
stos
imul
jo
test
push
jnp
inc
pop
inc
push
aas
cmc
xchg
dec
daa
sbb
push
jmp
(bad)
fimul
sbb
pop
sbb
mov
cdq
mov
xchg
fnstsw
movs
xor
cmp
xor
pop
mov
xchg
xchg
cmp
and
out
pop
lea
sub
push
mov
pop
nop
test
outs
mov
ss
sahf
fsubr
ins
push
inc
sar
or
in
mov
fcomp
inc
daa
and
rol
mov
lahf
adc
dec
(bad)
cs
ror
jnp
retf
repz
and
ror
mov
mov
pop
and
imul
les
cmc
or
aad
stos
jmp
pushf
test
xor
mov
xor
adc
aad
test
ja
clc
leave
pop
in
mov
shr
fs
outs
dec
mov
mov
or
xor
repz
sbb
mov
mov
fdivr
scas
and
(bad)
and
lea
rol
popf
popf
lds
fs
in
popa
fwait
stos
jecxz
cdq
xor
push
loopne
test
loop
sub
mov
mov
jge
arpl
stos
push
ins
rol
in
stos
mov
sub
icebp
ss
jne
inc
inc
out
adc
lock
lods
sub
stos
mov
loope
iret
fldenv
sar
in
or
mov
es
pop
mov
jne
mov
and
out
mov
(bad)
xchg
cmc
data16
out
in
retf
jecxz
stc
or
pop
fild
xchg
addr16
bound
bound
pop
or
jne
aam
in
mov
jle
push
sbb
lods
sub
lahf
mov
(bad)
ins
xor
das
repnz
sub
enter
push
fnstenv
sbb
stc
hlt
sub
or
call
enter
pop
in
push
fldcw
pop
loopne
sub
push
lods
mov
jo
mov
pop
repz
mov
mov
add
sbb
push
adc
arpl
rol
test
fucomi
out
call
jno
fistp
pop
lahf
lods
xlat
dec
int
loop
sahf
pop
hlt
jg
aas
les
ret
movs
in
push
and
lea
aam
adc
xor
jl
(bad)
in
mov
sub
xor
push
fadd
push
push
push
push
mov
int
sbb
cdq
loop
xor
sub
add
out
cld
int3
pusha
xor
stos
jbe
cli
xchg
and
imul
cli
aam
add
neg
jo
in
sbb
pop
shl
int3
jns
mov
pusha
mov
mov
and
retf
pop
pop
shr
loopne
sti
inc
icebp
pop
add
ret
leave
div
add
cmp
lahf
mov
push
cmp
push
jge
repnz
pop
push
leave
xchg
retf
inc
dec
adc
xchg
jbe
cmp
test
cdq
stos
inc
add
mov
mov
sub
inc
aad
push
arpl
jmp
xchg
inc
xchg
xchg
scas
jbe
stc
arpl
push
mov
fistp
mov
sbb
mov
mov
stos
lock
retf
shl
bound
cli
loop
imul
adc
pop
imul
mov
aas
jg
(bad)
out
push
push
(bad)
sbb
sub
stos
adc
inc
adc
sti
add
jmp
shl
add
sar
enter
pop
cmp
into
mov
adc
jo
pop
mov
mov
not
cmp
iret
and
sahf
push
add
mov
std
push
inc
add
mov
rcl
sub
in
cmp
stc
mul
inc
loope
mov
push
stc
inc
xchg
mov
loopne
push
fistp
out
push
inc
repz
xlat
jmp
push
xor
fild
xchg
repnz
dec
mov
pusha
xchg
fisttp
sti
sti
dec
mov
enter
sar
mov
fdivr
mov
inc
pop
jl
dec
pop
je
inc
and
mov
add
jl
dec
dec
and
push
cs
retf
out
lds
in
pop
into
add
and
mov
outs
push
outs
xchg
outs
sub
lahf
add
fwait
das
and
mov
iret
or
jo
or
mov
jae
pushf
sahf
add
daa
js
es
in
or
call
inc
sub
xchg
mov
or
cmp
dec
lods
add
enter
in
adc
pop
mov
mov
jl
jp
adc
jo
daa
and
sub
and
popf
jnp
sub
push
cmp
and
and
or
xchg
push
clc
test
cmp
cli
push
adc
call
stc
ds
add
sbb
out
adc
inc
push
xor
inc
inc
icebp
xor
add
pop
mov
sbb
pop
push
mov
movs
adc
push
adc
or
or
sbb
into
mov
or
sub
dec
or
push
cdq
test
dec
add
dec
shl
pop
stos
scas
leave
jmp
push
sbb
pop
inc
xchg
frstor
les
clc
dec
dec
dec
test
or
nop
in
adc
inc
(bad)
mov
push
outs
cmp
pop
movs
adc
jle
or
cmp
scas
imul
or
scas
xchg
push
movs
ja
inc
add
fimul
in
add
cmp
hlt
imul
jecxz
fwait
mov
pusha
mov
sbb
scas
fcmovnb
js
fcomp
loope
inc
imul
arpl
cmc
mov
dec
shl
mov
fdivr
mov
dec
push
cmc
cmp
shl
iret
sub
mov
add
jl
dec
call
add
adc
cmp
sub
mov
nop
scas
repz
mov
push
cmp
dec
jo
push
cmp
ins
pusha
and
push
or
adc
inc
and
or
mov
mov
xor
pop
push
push
push
std
xlat
daa
xor
add
ds
dec
cmps
xor
mov
loop
dec
mov
push
and
mov
out
mov
xlat
push
dec
bound
jmp
jmp
lods
cdq
retf
ds
out
in
push
test
loopne
jp
inc
js
dec
clc
pop
push
cmp
mov
icebp
repnz
mov
rcr
mov
dec
jnp
lods
in
mul
into
call
idiv
dec
scas
(bad)
(bad)
pop
jb
push
loope
sbb
lods
xchg
ins
movs
rcr
or
fwait
lds
test
add
mov
adc
mov
xchg
xor
mov
jb
arpl
cmc
(bad)
(bad)
jbe
dec
push
ss
push
sbb
es
mov
repz
dec
frstpm(287
inc
mov
pop
dec
jnp
cdq
lea
(bad)
adc
aas
or
and
inc
out
movs
cmp
and
in
fldenv
out
fisub
hlt
inc
xchg
je
push
push
pop
into
jae
in
mov
loop
out
lock
sub
sahf
test
push
inc
or
retf
ret
cmp
loopne
adc
aas
jp
pop
nop
sti
(bad)
push
mov
inc
shr
in
ds
aam
movs
pop
fwait
and
mov
(bad)
jns
into
mov
dec
jg
mov
inc
bound
imul
cmp
lahf
mov
jno
fstp
xlat
jb
les
fldenv
int3
(bad)
lods
fbld
pop
jo
mov
pushf
sub
cmps
cmc
pop
js
xor
clc
inc
jnp
adc
and
jge
pop
push
dec
sbb
add
call
test
jnp
jb
mov
sbb
inc
hlt
sti
lock
fsub
cwde
push
enter
fdivr
mov
inc
pop
hlt
cmp
pop
div
dec
pop
js
dec
pop
hlt
mov
push
add
sahf
cmc
mov
rol
js
ss
xchg
cmp
enter
addr16
mov
pop
mov
(bad)
mov
push
stc
imul
gs
clc
iret
lods
inc
inc
movs
pop
out
and
push
sub
mov
mov
inc
and
cmp
xor
xchg
add
jno
and
and
jnp
dec
(bad)
je
fstp
mov
rcr
test
cmp
fwait
adc
lahf
cmp
fdiv
push
jg
cmc
adc
lahf
lds
sahf
or
mov
in
mov
out
cmp
or
ds
adc
jl
ss
sbb
and
pop
and
or
pop
fsub
(bad)
sub
cwde
mov
push
outs
cmp
cmp
inc
mov
push
xchg
mov
xchg
in
pop
jns
jns
mov
out
adc
add
bound
aad
mov
inc
cdq
add
(bad)
xchg
std
push
xor
push
loopne
popa
adc
loop
ror
jmp
mov
ret
hlt
in
inc
jg
cmp
xchg
jno
push
xchg
dec
iret
fisubr
push
xchg
jp
mov
mov
push
jb
dec
jg
xchg
inc
loopne
fsub
mov
(bad)
loope
shr
sub
aaa
cmp
call
aaa
out
outs
jle
in
je
dec
push
imul
scas
test
test
jmp
mov
bound
scas
dec
mov
(bad)
fcmovu
shl
shl
ret
sub
mov
call
pop
sub
jmp
enter
out
mov
or
call
jmp
jge
inc
jmp
or
(bad)
xor
and
jl
int
push
cmps
pop
mov
scas
pop
jle
inc
call
sub
movs
xchg
outs
daa
movs
mov
pop
xchg
lea
jp
pop
sub
push
sahf
adc
ret
fld
mov
test
push
in
mov
sub
nop
push
addr16
rcl
add
(bad)
push
adc
cmc
jb
cmp
(bad)
pusha
pop
push
mov
mov
xchg
fwait
cmp
movs
repz
test
push
(bad)
sbb
xchg
mov
(bad)
pop
and
xor
cmc
xchg
xchg
rol
dec
cli
es
pop
push
lock
xchg
pop
sti
push
test
call
imul
retf
js
cmp
lahf
aad
xchg
sub
or
adc
add
or
(bad)
mov
push
mov
in
inc
dec
mov
mov
jnp
sbb
jnp
mov
dec
bound
push
jl
xor
inc
in
fwait
ins
jne
pop
fistp
out
pop
arpl
ss
mov
out
sub
adc
(bad)
xlat
sbb
dec
cwde
rcl
arpl
adc
loopne
(bad)
push
mov
in
push
dec
push
adc
aaa
cmp
dec
sbb
(bad)
scas
test
lea
ins
or
and
out
shr
call
dec
jmp
movs
cmc
mov
and
cmps
repz
aad
mov
shr
cmc
imul
sbb
lods
and
mov
fstp
mov
push
fdivp
mov
mov
int
or
fsubr
(bad)
pop
vphadduwd
xchg
adc
mov
arpl
iret
pop
dec
push
imul
aas
sbb
stos
repz
sub
jg
mov
repnz
ss
ins
pushf
mov
lods
inc
dec
cmp
cmp
mov
mov
cmps
enter
and
nop
jl
cmc
int
xor
mov
pop
jecxz
addr16
mov
pop
pop
push
sbb
fisubr
sub
cmps
or
fiadd
inc
idiv
pop
mov
icebp
fisubr
fcom
fldcw
sub
shl
test
inc
xor
xor
ret
in
xor
std
jmp
mov
call
adc
in
mov
icebp
push
mov
and
enter
xchg
mov
mov
jbe
mov
and
clc
aas
jmp
popa
fst
mov
xor
jb
test
int3
pop
add
xchg
cmp
test
and
cmp
pop
sub
mov
outs
shl
push
cmps
dec
scas
mov
ds
sub
cs
push
push
aaa
aaa
into
mov
pop
(bad)
cmps
pop
loopne
mov
dec
out
add
data16
popf
ret
push
mov
xchg
mov
jb
fnsave
cmc
push
xor
xlat
inc
add
pusha
and
mov
sbb
popf
mov
lock
push
jecxz
xchg
pop
mov
in
adc
lods
push
inc
dec
adc
leave
or
es
aam
mov
sbb
mov
ret
outs
push
dec
cmp
pop
inc
sbb
mov
dec
ror
xlat
rcl
test
sub
xchg
pop
int3
pop
adc
into
cmps
add
call
xchg
test
sbb
cmps
stos
das
sub
mov
mov
les
inc
mov
in
push
adc
push
jl
dec
les
test
jmp
out
mov
fs
cmps
xchg
cwde
repz
jge
mov
and
pop
lock
dec
jl
xchg
cs
mov
out
dec
add
ret
ins
aad
adc
inc
push
and
(bad)
jge
cmp
fwait
cmp
dec
or
dec
div
clc
jle
sbb
push
pop
in
add
mov
push
lods
mov
push
dec
cwde
(bad)
mov
mov
enter
shl
pop
enter
clc
aad
add
lods
and
fdivr
popf
call
adc
fdiv
push
(bad)
loopne
pop
dec
cmp
inc
pop
sbb
js
shr
dec
sbb
inc
pop
push
and
mov
fsub
cwde
pop
cli
fstp
or
pop
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
pop
jecxz
add
mov
adc
test
fsub
ss
sub
mov
fdiv
mov
pop
fdivr
mov
fdivr
mov
inc
loopne
clc
jae
cmc
dec
pop
shr
mov
sar
mov
fdivr
mov
sar
mov
shl
cwde
inc
clc
int
push
fcomp
xor
std
mov
jo
mov
fdivr
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
dec
sar
mov
(bad)
in
inc
jo
mov
addr16
les
loope
jns
ss
(bad)
into
push
rcl
push
in
xchg
mov
cmp
inc
mov
mov
rcl
xor
les
movs
cdq
jge
cld
repz
(bad)
in
sbb
iret
sub
sbb
mov
pop
fs
addr16
jle
mov
call
(bad)
out
sbb
cs
(bad)
pop
adc
das
out
add
adc
lock
mov
xchg
or
sub
hlt
xchg
inc
jnp
jmp
sub
rcr
adc
in
push
cld
mov
repz
xlat
push
in
push
cs
pop
mov
in
sub
add
sbb
push
sub
sbb
sbb
fisttp
out
in
adc
test
mov
push
(bad)
push
mov
mov
jle
pop
jo
test
mov
or
out
stos
out
stos
int
jmp
and
mov
stos
mov
(bad)
or
(bad)
jmp
and
mov
adc
pop
outs
jmp
outs
push
icebp
sbb
add
test
shl
jae
stos
sbb
cmps
out
jno
data16
test
int
mov
push
call
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
inc
ror
cmp
in
inc
shl
nop
dec
loopne
mov
fdivr
mov
arpl
lds
jae
dec
add
push
fwait
retf
dec
inc
sar
cwde
dec
and
cmp
ror
popa
daa
adc
stos
out
outs
push
es
loope
fsub
fwait
sbb
lods
push
pop
sbb
push
das
or
out
pusha
int
and
dec
mov
push
aaa
gs
stos
push
stos
imul
clc
xchg
dec
stos
ja
cmps
(bad)
xor
mov
pop
dec
in
ja
mov
fbld
pop
pop
call
cmps
jo
mov
or
(bad)
outs
pop
or
push
push
icebp
stc
and
ja
mov
mov
lock
mov
loope
sub
jle
or
ins
xchg
cli
sbb
push
cmovne
jmp
and
rcl
cmp
sbb
icebp
mov
pop
dec
cmp
emms
push
xchg
adc
fidivr
jbe
data16
(bad)
jmp
mov
fcomp
jecxz
push
sub
push
dec
add
dec
sbb
iret
xor
bound
cdq
xchg
sub
pop
lods
add
jb
es
and
mov
sub
mov
fisttp
mov
gs
dec
test
(bad)
jns
repnz
icebp
fwait
jmp
and
push
mov
lods
out
add
enter
scas
mov
push
shl
stc
cmps
mov
sub
and
cmp
ja
cld
outs
add
push
sub
daa
dec
pop
pop
ds
push
icebp
aam
jb
mov
sub
push
pop
jne
imul
mov
mov
bound
jno
test
test
xchg
sub
aaa
dec
rcr
jle
push
push
add
inc
stos
out
es
sub
cmp
or
jl
fcom
out
lds
push
dec
cmp
nop
mov
add
in
adc
mov
mov
and
sbb
cmc
(bad)
repnz
inc
mov
mov
inc
jle
ret
imul
inc
repnz
adc
cmp
mov
out
ds
jnp
outs
or
daa
je
push
adc
aam
out
imul
add
leave
inc
(bad)
push
pop
xchg
cmp
or
stc
mov
int
push
mov
mov
xor
sub
mov
inc
iret
mov
ret
call
push
xchg
pop
dec
xchg
adc
clc
xor
scas
(bad)
ja
xor
inc
push
dec
sbb
sar
retf
pop
xor
aad
dec
test
mov
nop
add
hlt
pushf
push
repz
std
(bad)
jmp
push
dec
pop
adc
aad
cmp
daa
adc
or
sub
lahf
cmps
push
fmul
outs
test
or
movs
adc
xlat
int
jne
inc
adc
push
nop
and
shl
dec
enter
fdivr
mov
inc
rcr
dec
push
ins
mov
dec
pop
sub
dec
je
push
(bad)
fwait
inc
fidivr
push
or
clc
mov
fadd
xor
dec
push
jae
sub
adc
cmp
xor
xchg
imul
adc
jo
mov
dec
in
popa
int3
test
add
jmp
std
pop
out
hlt
cmp
and
out
jmp
jb
lahf
cmps
enter
call
sub
xor
and
int
(bad)
jge
ror
mov
cdq
push
in
arpl
inc
das
(bad)
pop
retf
pop
pop
sahf
lahf
add
adc
out
lea
aaa
lods
cli
out
stos
popa
push
sub
cmp
push
mov
out
sbb
addr16
div
stc
rcr
cmp
sub
pop
xlat
ins
call
(bad)
push
push
aas
dec
add
dec
mov
test
mov
jb
add
xor
push
xor
aam
adc
mov
or
sbb
scas
(bad)
sti
jg
leave
push
adc
cwde
mov
jle
(bad)
outs
pop
in
or
or
in
push
xor
in
inc
cmp
adc
mov
test
xchg
add
pop
out
mov
inc
push
jo
jmp
mov
mov
dec
or
inc
push
inc
cmp
out
iret
mov
inc
fistp
and
sahf
outs
push
je
call
in
ja
mov
movzx
call
sub
stos
enter
out
xchg
ds
push
fst
cli
test
or
mov
xchg
(bad)
xor
jg
enter
icebp
mov
mov
fwait
pop
cmp
jbe
daa
arpl
shl
lds
ffree
jl
jne
in
sahf
ins
fstp
dec
xchg
xchg
dec
pusha
in
in
sbb
mov
int3
jmp
push
movs
lea
mov
icebp
push
mov
push
push
sub
daa
test
rol
add
mov
fidiv
jae
in
push
enter
fdivr
mov
shl
mov
inc
dec
cmc
xor
fcomp
sar
jl
push
and
mov
add
hlt
inc
dec
call
add
repnz
popa
xor
pop
dec
aaa
mov
push
mov
shl
dec
or
mov
fisttp
cli
sub
nop
int
call
pop
jp
std
fidivr
js
inc
dec
cwde
dec
dec
sub
adc
aad
pop
jo
aam
mov
mov
and
pop
stos
retf
mov
(bad)
sub
ja
xor
mov
out
stc
jp
je
push
adc
retf
xrelease
jbe
xor
popf
dec
push
pop
push
and
push
cmc
imul
xchg
test
sbb
ffree
not
xor
dec
aad
push
sbb
shr
cmc
xor
pop
popa
repz
fldcw
std
bound
ret
(bad)
(bad)
aas
in
cwde
xor
push
pop
retf
in
js
or
aas
push
inc
xchg
lea
cmp
bound
pop
imul
inc
xor
shl
push
adc
fisub
aad
sti
jo
xchg
fbstp
pop
push
bound
push
cdq
outs
and
fs
cmp
cmc
test
rcl
push
cwde
aad
pop
fdivr
mov
shl
dec
push
ins
and
je
imul
push
shl
call
cld
fs
in
ja
lds
mov
pop
inc
outs
dec
(bad)
fstp
inc
dec
and
push
push
sub
cmp
xchg
push
ja
jmp
fistp
mov
mov
fadd
(bad)
clc
push
inc
out
and
adc
test
inc
xchg
sub
pop
mov
cs
in
jl
out
xor
call
scas
out
add
mov
aaa
cmps
loopne
sub
push
sar
xchg
pop
or
add
icebp
in
(bad)
xor
mov
gs
cwde
sbb
sti
(bad)
mov
call
cdq
ret
fbld
je
inc
mov
pop
aaa
pusha
add
jp
or
sub
and
mov
push
dec
cld
jmp
push
out
pop
push
aad
leave
stos
cld
xchg
shl
cs
and
hlt
adc
test
fidivr
retf
push
int
mov
mov
dec
jb
or
int3
and
sbb
and
out
or
aad
sub
jo
inc
retf
and
call
movsx
clc
add
fxch
or
mov
stos
mov
push
loop
es
sti
scas
popa
mov
lds
std
cmp
movs
cmp
push
mov
inc
lods
mov
enter
jno
cmp
in
jbe
push
je
dec
out
xor
lods
mov
inc
mov
jne
in
xbegin
sub
lea
fsub
lea
std
popf
jecxz
mov
bound
int3
cld
fld
pop
arpl
cli
loop
cmp
mov
xchg
daa
mov
sub
adc
xor
xchg
fisub
cmp
adc
adc
jmp
sar
push
jae
add
cdq
iret
push
mov
mov
(bad)
mov
sti
test
je
or
mov
mov
test
and
ficom
jl
div
enter
fstp
push
push
jnp
into
std
sub
sbb
out
adc
adc
sub
mov
lock
mov
arpl
pop
push
xchg
push
jae
cld
push
clc
mov
mov
out
adc
stc
sbb
inc
test
je
adc
or
mov
add
in
push
repnz
and
jbe
dec
sub
push
fdivr
push
and
inc
cmp
frstor
sbb
sti
push
repz
mov
and
jmp
scas
mov
fstp
bswap
xor
jmp
mov
fcomp
jno
ins
repnz
out
adc
mov
pop
pop
aas
dec
push
cwde
into
or
sbb
add
fldcw
or
xchg
in
fwait
loop
push
cli
stos
data16
js
mov
retf
iret
sbb
dec
test
add
retf
mov
xor
retf
inc
dec
or
xchg
call
fist
ins
sbb
cmp
call
jmp
(bad)
test
clc
(bad)
sub
inc
mov
push
jmp
addr16
dec
xchg
aam
retf
add
int
repz
inc
in
mov
pop
ficom
lds
sbb
add
js
mov
push
pop
(bad)
xchg
adc
(bad)
pop
shl
adc
inc
jns
cmps
mov
sub
js
je
pusha
sub
mov
jnp
fwait
add
add
cs
popf
pop
cmp
jo
jne
sub
xchg
xchg
scas
mov
mov
xchg
sub
out
xchg
add
mov
jl
push
jle
xchg
pop
sbb
and
leave
aad
in
stc
inc
or
js
sbb
clc
sub
mov
sub
mov
mov
jmp
xchg
ds
jae
scas
add
pop
stos
ja
ins
dec
and
cwde
xchg
adc
xchg
mov
ss
or
dec
movs
ss
adc
call
scas
add
fdivr
xor
pop
std
jnp
lahf
pop
or
das
ins
mov
mov
out
mov
jecxz
cli
mov
push
pop
sbb
xchg
push
(bad)
movs
xor
mov
outs
adc
in
pop
(bad)
adc
in
xor
loope
scas
call
and
loope
sbb
mov
sbb
dec
rcl
cmc
pop
dec
mov
mov
and
retf
dec
lds
daa
ins
mov
adc
bswap
adc
sahf
xor
push
(bad)
xlat
(bad)
(bad)
aam
push
out
das
mov
daa
push
sahf
or
lea
imul
cmps
loope
ins
cmp
push
ins
rol
stc
cmp
mov
push
call
sar
cmp
jbe
xor
loop
jle
mov
fadd
mov
jae
mov
or
(bad)
enter
xor
or
lock
push
std
lods
adc
mov
pop
enter
adc
inc
test
mov
sbb
and
stos
sub
jmp
aaa
adc
mov
sbb
je
sbb
and
int
mov
jecxz
in
stos
test
test
loop
imul
pop
xchg
mov
(bad)
push
cdq
jns
inc
dec
push
xor
das
imul
lahf
lock
imul
aam
es
out
(bad)
fnstsw
pop
sti
pop
jno
cmps
sub
jb
cld
scas
pop
sub
push
fsub
jb
cmp
cmp
fwait
out
dec
aaa
fisttp
lods
adc
scas
jge
jnp
sahf
cmp
fdivr
std
repz
enter
mov
mov
jl
jbe
cdq
sub
jle
or
mov
dec
xor
push
icebp
xchg
jbe
sti
inc
sub
hlt
mov
pop
xor
dec
stc
lods
jne
fadd
and
xchg
test
out
mov
mov
inc
bound
push
pop
scas
enter
ss
jo
mov
xor
jmp
fidivr
jle
mov
sbb
rcr
nop
xor
push
mov
xor
push
in
cmps
add
sbb
sbb
out
fist
xchg
add
out
(bad)
and
push
pop
and
leave
xchg
fadd
jecxz
mov
or
pop
and
lods
in
js
pop
sti
sub
mov
pushf
push
sbb
or
xchg
jo
sub
jne
sti
enter
mov
scas
cmps
jg
ss
mov
mov
mov
xchg
hlt
jle
outs
mov
push
adc
or
xchg
into
jl
or
fwait
cs
retf
test
int
mov
daa
inc
neg
pusha
jmp
mov
ret
sbb
pop
mov
ins
jmp
push
jns
or
rcl
or
retf
inc
adc
cmp
mov
int3
adc
sar
mov
pop
dec
fld
cmps
lea
fdiv
scas
int
xchg
aam
es
adc
js
in
punpckhbw
mov
inc
(bad)
and
dec
jmp
aaa
fisttp
out
inc
cld
call
in
(bad)
hlt
xor
xor
or
(bad)
cmp
daa
dec
push
sbb
sub
add
cwde
jne
jl
inc
enter
shr
push
shl
arpl
std
mov
retf
xor
dec
pop
jne
int
push
enter
dec
fcomip
mov
dec
sbb
test
les
pop
sbb
jge
and
sub
cs
rcr
or
jmp
add
or
pop
stc
mul
(bad)
pop
pushf
fsub
retf
stos
(bad)
jb
pop
clc
or
xor
cmp
push
jle
xchg
xchg
mov
dec
cdq
sub
mov
mov
movs
xor
pushf
xchg
loopne
dec
inc
jp
call
xchg
or
lock
imul
xchg
lods
addr16
loop
or
cmp
test
inc
movs
movs
xor
cmp
jle
rcl
and
loope
test
sbb
dec
rol
sbb
dec
jbe
mov
cmc
icebp
jo
sar
mov
inc
mov
shr
jecxz
leave
sub
aad
hlt
shl
daa
cmps
mov
mov
dec
mov
and
and
jns
adc
and
cmp
inc
adc
or
rcl
in
or
mov
and
and
add
fs
ja
fwait
rcr
out
sbb
and
xchg
sub
push
mov
pop
lock
mov
push
xchg
mov
mov
and
pop
pushf
je
sbb
dec
out
mov
sbb
xor
es
xchg
retf
cmp
cld
jb
dec
pop
or
sbb
xor
sub
popa
xchg
ins
mov
mov
xchg
mov
into
in
xchg
aad
icebp
aas
pop
sti
fist
add
jecxz
sbb
retf
imul
jle
mov
popf
stc
dec
cmc
cmp
sahf
push
cmp
dec
movs
mov
cmc
fcom
int3
sti
adc
xor
cs
test
test
jge
xchg
dec
scas
pop
mov
and
jo
push
sbb
cmc
test
(bad)
out
cmp
cmp
push
sti
push
jns
add
and
rcr
gs
ja
adc
mov
test
adc
push
inc
xor
loope
mov
movs
mov
add
out
loop
lea
fcmovnb
mov
add
dec
xchg
in
or
sub
and
mov
loope
or
dec
fbld
add
popf
outs
or
fcom
xor
cmp
fdiv
dec
test
push
and
ret
jo
jne
xor
mov
cmp
cs
jmp
gs
dec
shl
mov
push
ins
fisttp
xchg
in
dec
mov
jp
sub
xchg
mov
inc
sbb
scas
into
dec
mov
popa
mov
addr16
out
cwde
xor
(bad)
loop
xchg
fadd
add
(bad)
xchg
call
or
(bad)
in
in
push
jbe
add
sbb
int3
imul
cmp
gs
xor
adc
rcr
cdq
adc
fldl2t
in
mov
retf
jb
imul
inc
pop
lea
jl
scas
imul
inc
jecxz
ror
lds
je
add
popf
ror
push
out
and
iret
mov
sub
mov
dec
or
push
and
add
and
(bad)
in
clc
repnz
xchg
cdq
ins
int
pop
jo
jae
pop
mov
cld
jge
xchg
js
xchg
ja
xlat
or
(bad)
lea
fnstenv
jae
cmp
lea
cdq
in
or
cmp
ror
fs
mov
sar
ret
cmp
in
fst
pushf
(bad)
xchg
mov
ins
push
or
popf
(bad)
jnp
imul
ins
jno
dec
ja
mov
out
pop
xchg
test
shr
xlat
cmp
ins
iret
call
push
xchg
retf
add
jnp
pop
iret
sbb
ins
push
inc
mov
jno
test
add
nop
inc
xor
rcl
xor
add
cmp
fwait
mov
jbe
sub
dec
sti
pushf
ss
in
xchg
or
(bad)
mov
enter
shl
aam
pop
cmp
stos
ror
dec
in
mov
push
pop
ins
mov
hlt
mov
fldl2t
jns
pop
ror
fbstp
mov
pop
jl
je
cmps
dec
inc
js
sar
xchg
retf
ins
fwait
shl
fsubr
test
repz
jo
pop
push
cmp
pop
fist
movs
or
push
std
inc
les
aad
inc
mov
das
cmp
clc
mov
scas
shl
mov
and
jmp
movs
icebp
push
push
inc
sar
inc
sar
xor
std
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
shr
mov
sar
mov
nop
(bad)
inc
jo
lock
inc
std
cdq
(bad)
sar
nop
mov
loopne
movs
jl
inc
popf
icebp
call
inc
loopne
(bad)
sub
je
mov
fdivp
push
das
pop
cmp
mov
fdivr
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
mov
mov
je
inc
shr
inc
rcl
dec
fdivr
mov
inc
push
cmc
xor
idiv
iret
fcomi
mov
or
clc
mov
pop
sub
cmps
popa
or
je
jbe
sti
mov
xchg
std
push
es
aaa
jmp
outs
jl
push
test
xchg
in
lea
fnstsw
cmp
and
jmp
jmp
les
xchg
mov
les
push
or
sbb
sub
xchg
xchg
je
pop
repnz
sub
jle
sti
iret
iret
xor
or
fist
pop
rol
call
enter
aam
mov
fs
jmp
mov
pop
pushf
dec
rol
stos
bound
xor
iret
movsx
fild
add
sbb
sbb
sub
call
rcr
mov
xchg
sbb
lock
cmp
mov
adc
inc
xor
mov
mov
pop
cmp
jbe
ficom
mov
add
mov
stos
jb
clc
cmp
jns
push
mov
cwde
test
jmp
outs
or
mov
add
inc
fsubr
test
sar
mov
inc
sar
mov
dec
fdiv
cmp
push
(bad)
ss
and
mov
add
jl
dec
sub
hlt
std
jnp
fild
mov
and
mov
inc
cmp
push
ret
retf
sbb
sar
sahf
xor
pop
call
ret
ds
sub
popf
mov
js
lds
inc
cmp
ds
xor
icebp
pushf
cli
dec
mov
mov
lods
test
ret
jo
inc
jno
lods
or
pop
jbe
adc
adc
mov
pop
mov
mov
push
daa
ja
pop
add
mov
xchg
ins
or
inc
or
sbb
mov
mov
aas
test
fiadd
dec
sub
std
icebp
jp
mov
xor
or
mov
mov
cmp
dec
mov
dec
pusha
push
jae
popa
sbb
push
inc
imul
call
mov
jl
inc
fsub
mov
shr
mov
lock
mov
inc
shl
cmp
push
idiv
dec
pop
std
xor
cli
aas
dec
push
repz
int3
fnstsw
inc
dec
and
jl
sub
lahf
xor
test
add
cwde
mov
stos
stc
pop
out
pop
aad
dec
int3
rcr
push
xchg
aam
jnp
mov
push
into
sbb
loopne
push
mov
pop
shl
popa
in
frstor
pusha
imul
cdq
jecxz
je
adc
pop
or
jae
pop
mov
mov
pop
ds
fcmove
call
outs
cmps
lods
mov
add
fild
mov
sbb
cmp
call
mov
sub
push
sti
std
hlt
(bad)
nop
dec
jo
add
push
sub
mov
test
mov
xchg
mov
xchg
in
inc
or
push
icebp
out
cmp
jg
inc
adc
inc
imul
cmp
add
dec
or
inc
out
mov
jmp
xor
enter
dec
loopne
adc
inc
adc
or
ret
or
(bad)
add
mov
xor
jecxz
(bad)
lock
xchg
or
retf
dec
call
int
call
mov
inc
mov
or
xchg
enter
sahf
xor
data16
(bad)
sub
es
cmp
pushf
cmp
add
sub
and
popf
cmp
int3
dec
std
test
jl
xchg
xor
add
mov
inc
jnp
pop
sub
inc
out
std
xchg
aas
fisub
ror
add
mov
xchg
jne
pusha
lea
and
cmp
fucomp
in
xor
pop
pushf
cmc
mov
icebp
mov
pop
sahf
xchg
test
ret
out
stos
sbb
in
bsr
push
fcmovbe
or
mov
das
pop
xor
inc
and
or
jae
adc
repz
call
jmp
sar
dec
push
fnsetpm(287
in
or
mov
push
pop
lock
mov
mov
xor
xchg
and
loop
stos
pop
js
xchg
aam
pusha
inc
(bad)
(bad)
inc
cmp
pop
ins
xor
(bad)
pop
add
sbb
test
xchg
inc
add
adc
ins
sub
ror
movs
jg
nop
repz
mov
mov
imul
sub
dec
xchg
imul
sub
inc
jmp
jmp
sub
mov
scas
not
mul
or
adc
lahf
sbb
clc
mov
jo
iret
pop
mov
xlat
mov
cmps
int3
repz
cmp
add
mov
xchg
into
pop
call
fwait
fwait
imul
dec
das
jo
cmc
sbb
not
retf
inc
pop
xor
ss
mov
xor
mov
push
(bad)
into
and
call
push
sub
test
add
stc
(bad)
in
repz
fisubr
retf
fnstsw
ins
scas
inc
mov
dec
sub
in
sub
pop
pop
inc
lds
stos
retf
je
arpl
fld
loopne
mov
test
xor
(bad)
retf
cmp
hlt
sub
and
std
adc
int
push
xchg
xor
jmp
push
sub
(bad)
sti
sbb
ss
sub
sub
sbb
or
cmp
jae
scas
into
in
jo
xchg
pop
lods
push
dec
mov
and
aaa
pop
pop
push
loopne
mov
mov
fs
adc
out
out
(bad)
sahf
jge
call
or
mov
inc
inc
sub
fdivr
fwait
inc
adc
rol
ret
sub
das
push
dec
add
cmp
or
cmp
cmp
(bad)
jae
test
rcr
aad
push
nop
imul
mov
jae
movs
dec
out
and
or
test
retf
(bad)
jnp
sahf
fldenv
ins
xor
dec
fstp
repz
adc
std
sub
leave
shl
inc
jo
js
mov
aas
outs
cmc
je
lock
mov
add
mov
mov
mov
hlt
mov
mov
xchg
jmp
in
movs
jmp
mov
or
dec
cmp
hlt
cmp
cmp
hlt
mov
shr
add
cmps
mov
imul
jmp
cmc
in
inc
xchg
outs
sbb
pop
cmps
sbb
jl
jnp
pop
inc
js
int
and
hlt
rcr
inc
inc
adc
enter
push
dec
cmp
jl
jb
cs
jnp
mov
loopne
jle
push
mov
ds
add
aas
mov
out
fcmovnu
xchg
(bad)
jg
dec
lods
outs
loop
(bad)
push
sbb
sbb
dec
fs
mov
mov
jae
jbe
or
cld
mov
jl
jp
fneni(8087
ss
pop
addr16
inc
repnz
xor
jmp
dec
aaa
cmp
out
fwait
inc
mov
mov
add
mov
add
inc
arpl
add
in
xchg
pop
jne
mov
sti
adc
and
mov
sub
push
leave
movs
(bad)
push
out
push
mov
inc
adc
mov
pop
sahf
jbe
cwde
ins
arpl
mov
fcmovu
xchg
dec
pop
lock
and
sar
mov
sar
clc
pusha
mov
adc
jb
push
and
sbb
out
inc
pop
xor
dec
rol
clc
cmp
stos
(bad)
mov
jo
loop
clc
inc
mov
and
nop
lods
test
cwde
shl
jmp
adc
inc
fisttp
pop
sub
mov
sub
inc
mov
jge
inc
xchg
iret
mov
(bad)
mov
fdivr
mov
fsub
mov
push
enter
enter
cwde
aad
imul
loopne
loopne
lock
popf
fsub
and
sub
jge
sbb
adc
js
shr
push
ins
pop
jecxz
add
mov
arpl
xchg
loopne
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
sbb
jo
inc
in
jne
push
xchg
mov
pop
pop
cmc
cmps
push
fadd
mov
dec
sar
mov
sar
mov
sar
mov
push
enter
clc
sti
push
dec
fdiv
mov
fdivr
mov
sar
mov
shl
mov
arpl
sub
and
xor
cmc
xchg
inc
or
mov
jl
mov
std
cmc
arpl
sahf
xchg
ja
(bad)
mov
inc
or
mov
inc
loopne
mov
inc
sbb
movs
xchg
cmp
sti
fstp
add
sar
mov
movs
loop
rol
and
cmp
inc
push
xor
fcomi
xchg
inc
jbe
mov
inc
ret
lods
fnstsw
popf
popf
mov
pusha
enter
out
or
or
cmp
mov
mov
das
mov
inc
jo
mov
inc
cwde
xor
xor
ss
or
add
ret
fcmovbe
adc
shr
or
inc
mov
mov
mov
arpl
dec
or
sub
jno
and
fmul
bound
les
movs
pop
add
push
ror
jns
add
loop
add
int
or
xor
xchg
(bad)
repz
ins
and
or
test
imul
cmp
lds
jmp
sbb
jnp
(bad)
sbb
push
pop
xor
mov
mov
jns
lods
pop
outs
jb
jge
push
fld
mov
mov
aas
mov
fisttp
xchg
imul
adc
jo
and
dec
test
pop
mov
ror
sbb
sub
push
add
cdq
push
sub
push
xchg
repnz
dec
mov
xchg
jbe
mov
(bad)
adc
mov
leave
adc
sub
nop
mov
push
popf
jae
(bad)
mov
sub
add
adc
lea
(bad)
out
mov
lea
adc
jno
or
test
jb
dec
sbb
mov
sub
fsubrp
mov
inc
pop
mov
das
xchg
shl
pop
in
fsubr
mov
out
retf
jp
ds
xor
icebp
jge
rcr
lds
inc
sbb
and
sar
xchg
retf
hlt
adc
inc
ss
mov
std
xor
mov
stc
mov
(bad)
cld
mov
(bad)
shl
mov
inc
sar
mov
fdivr
mov
lock
arpl
lds
dec
push
cld
xor
inc
pop
add
fadd
dec
loope
push
inc
rcl
lods
inc
js
int
(bad)
or
xchg
mov
lods
add
mov
xchg
popf
adc
mov
ds
pop
jbe
test
imul
lock
pushf
adc
and
aas
xchg
loopne
inc
mov
enter
les
ret
out
shl
sub
ins
in
and
fiadd
int
inc
fs
or
leave
mov
mov
cmp
xchg
not
jne
mov
mov
lds
gs
gs
lods
lds
inc
push
push
or
mov
jg
rol
fiadd
adc
cmp
or
in
adc
dec
imul
fisub
aas
xchg
stos
movs
cmps
and
call
push
or
cli
ja
inc
(bad)
(bad)
sbb
or
dec
(bad)
icebp
ss
and
push
xchg
and
mov
ins
mov
dec
out
(bad)
vmwrite
inc
xor
or
jg
cs
ins
(bad)
mov
stc
fcom
pop
mov
jle
xlat
nop
mov
call
adc
repnz
xchg
movs
pop
mov
sbb
jne
(bad)
push
jo
sbb
out
mov
xor
xor
mov
cmp
push
mov
jne
sub
sahf
jmp
bound
push
xor
cs
mov
iret
jne
loop
lds
inc
or
scas
pop
push
cmp
mov
fild
and
test
lods
mov
sub
inc
fadd
or
push
cmps
cmp
mov
popf
aad
loope
sub
add
imul
mov
mov
(bad)
mov
outs
lea
mov
sbb
ja
jno
and
ffreep
adc
addr16
jnp
pop
push
js
sub
stos
jbe
lods
ja
sbb
std
push
mov
push
mov
clc
xchg
shr
cmp
test
aas
pop
bnd
fs
data16
sti
dec
retf
mov
push
xor
dec
std
(bad)
ins
push
(bad)
sbb
mov
fsub
pop
inc
sub
pop
jmp
lds
stc
repz
mov
mov
and
mov
push
int3
inc
xchg
add
(bad)
in
inc
cmps
lods
sbb
lds
in
pop
int
nop
bound
rcr
adc
xchg
dec
shr
jne
fidivr
or
fld
push
fdivr
mov
inc
shr
nop
retf
loopne
sbb
jge
ret
fxtract
or
jl
leave
add
clc
mov
fdivr
mov
and
inc
fsub
jge
mov
shl
mov
out
(bad)
icebp
scas
jne
lods
daa
popa
or
daa
rcr
mov
push
or
repnz
movs
dec
loop
shl
inc
sar
adc
sub
mov
inc
inc
fnsave
dec
mov
or
mov
inc
jle
test
adc
inc
and
mov
in
clc
and
daa
shl
fidivr
and
in
mov
dec
fdivr
mov
shl
mov
shl
dec
cmc
nop
retf
leave
pop
and
jge
dec
retf
jmp
sar
inc
push
fsubr
movs
or
in
inc
xlat
loopne
push
sub
in
scas
or
xchg
fistp
sbb
outs
imul
fld
jnp
sbb
(bad)
sbb
push
or
xchg
std
mov
jle
mov
repz
push
sub
scas
test
gs
jg
ja
movs
imul
push
frstorw
mov
test
out
movs
add
mov
sub
push
cmp
mov
sbb
test
sar
or
nop
neg
pop
call
jmp
adc
adc
mov
iret
jle
cmp
jp
lods
movs
or
scas
imul
push
repnz
aad
xchg
fidiv
repnz
dec
push
aas
sbb
sbb
icebp
ss
xlat
inc
and
push
rcr
mov
in
mov
sbb
mov
ins
pop
les
inc
pop
inc
dec
add
xchg
mov
jmp
sub
push
mov
aaa
xor
pop
ja
(bad)
mov
mov
fwait
pop
sub
aas
mov
(bad)
fs
pop
(bad)
mov
xor
call
pop
sub
pop
fiadd
jae
sbb
cdq
addr16
popf
xchg
xchg
sub
or
push
les
inc
adc
lods
push
xor
pop
xor
sbb
pop
scas
int
lods
and
rcr
sbb
pop
sbb
lock
lea
xchg
pop
in
inc
in
imul
and
adc
call
arpl
test
push
ret
cmp
sub
test
jno
jmp
movs
adc
cld
ret
xor
imul
cmp
shl
xchg
ins
cmp
sar
shr
mov
orps
or
add
jb
xor
or
arpl
(bad)
test
cmp
loopne
sub
cmc
jo
rol
pop
adc
iret
dec
cmp
mov
cld
fs
add
pop
jne
cld
lds
push
xlat
icebp
xchg
jp
xchg
mov
push
mov
dec
test
jg
ins
dec
cmps
test
dec
ds
data16
aas
pop
mov
jl
nop
(bad)
ins
enter
xor
das
gs
mov
mov
popf
sahf
pop
push
pop
xchg
(bad)
imul
hlt
fnstenv
mov
sub
inc
data16
aad
fsub
add
retf
pushf
fstp
out
cmp
jb
(bad)
sub
cli
mov
sub
nop
sub
enter
clc
aad
push
cwde
std
mov
inc
rcr
push
clc
ins
and
js
stos
dec
push
idiv
dec
dec
fs
loope
mov
hlt
pop
mov
push
jb
rcr
push
dec
pop
and
cli
imul
retf
fcomip
mov
sub
bound
in
and
les
push
or
in
cmps
sbb
mov
xchg
cmp
out
cmp
push
inc
imul
push
push
es
xchg
mov
pop
dec
push
xchg
fild
mov
ss
cs
jp
or
ins
sbb
jno
popa
cs
jl
mov
add
sbb
inc
xor
out
mov
jnp
push
xor
add
sbb
(bad)
push
loopne
sub
repz
jns
sbb
cwde
sub
mov
aam
or
in
addr16
sub
jmp
and
outs
ins
cmps
inc
pop
mov
popa
stc
iret
ficomp
pop
mov
(bad)
dec
leave
mov
or
sbb
add
in
adc
mov
sub
add
xor
rcl
stos
push
dec
sub
cmps
(bad)
and
mov
xchg
shl
cwde
(bad)
fwait
in
add
daa
jmp
dec
repnz
movs
jb
test
mov
or
sub
scas
jns
mov
les
(bad)
(bad)
push
out
xchg
dec
inc
outs
xor
nop
push
and
and
jmp
jae
retf
push
mov
ins
cwde
je
xchg
ss
mov
dec
xor
lock
in
aas
fstp
push
and
push
jb
cld
loopne
jns
ja
in
inc
mov
aaa
sub
loop
xchg
ins
jg
aas
mov
jbe
push
ins
pop
ins
add
fldcw
xchg
std
pop
jns
loop
add
outs
out
sbb
sub
mov
dec
jmp
push
das
cdq
repnz
sub
movs
call
(bad)
lock
es
ret
fdivr
cmp
pop
sub
jp
add
data16
or
sbb
mov
mov
outs
pop
stos
stos
cmp
adc
cmp
jne
push
adc
mov
pop
cmp
cmp
lahf
jmp
or
inc
push
icebp
mov
inc
dec
pop
cmp
mov
add
add
jp
mov
sub
push
ins
jge
push
pop
je
je
or
sti
scas
and
in
mov
dec
and
dec
clc
and
ds
outs
inc
jmp
rol
push
lock
xor
and
rol
fsubp
mov
xor
idiv
mov
ja
scas
or
ins
dec
pop
test
and
popf
out
mov
cmp
(bad)
jmp
(bad)
mov
inc
repnz
lea
inc
cmp
lods
adc
sti
xchg
std
cmc
cld
jl
adc
les
push
loopne
mov
aas
icebp
pop
loope
xchg
xor
repnz
pop
fidivr
arpl
in
xor
push
fs
cmc
loope
data16
dec
out
fld
mov
rol
adc
cmc
cmps
dec
mov
and
ins
clc
(bad)
loop
in
sub
imul
cld
ins
xchg
xchg
popf
xchg
xchg
sub
sti
add
adc
push
fisub
retf
ds
cwde
xor
xchg
sub
mov
sub
pushf
scas
cli
ret
sbb
sbb
jp
inc
dec
imul
mov
and
aam
les
shl
xchg
dec
movs
fwait
or
call
pop
(bad)
and
fldcw
pop
cmp
push
retf
mov
add
or
(bad)
sti
loope
push
adc
sub
fdivrp
pop
aad
stos
push
bound
icebp
call
js
xor
inc
mov
jnp
es
ficom
push
pop
push
lods
mov
retf
adc
jo
lods
add
xor
jmp
add
adc
pop
mov
outs
das
fistp
rol
xor
push
movs
aaa
add
sahf
xchg
dec
stc
xor
nop
push
dec
retf
pop
into
mov
pop
sahf
pusha
adc
pop
push
push
cdq
cmp
pushf
out
push
lock
leave
pop
xchg
out
adc
dec
pop
mov
mov
xchg
js
pop
(bad)
xor
push
es
aas
daa
cdq
jnp
or
dec
(bad)
ins
push
xor
rol
fs
neg
hlt
shl
(bad)
jo
adc
call
jbe
addr16
bound
arpl
inc
sbb
call
pop
lods
hlt
push
xchg
jbe
mov
sbb
mov
cmp
pop
sar
sbb
gs
cs
jb
jge
icebp
sahf
cmp
xor
mov
xor
pop
adc
je
or
inc
pushf
adc
cdq
loopne
pop
jle
data16
clc
and
outs
push
ss
pop
or
xchg
adc
and
leave
or
adc
ficomp
dec
aas
mov
outs
pop
into
cmp
out
xor
adc
add
scas
pop
pop
test
loop
xor
jb
jne
add
sbb
cwde
test
fldenv
js
mov
test
mov
cli
repz
aas
stc
adc
fcmovnu
mov
rcl
lea
and
(bad)
idiv
call
xchg
retf
push
mov
mov
das
in
les
mov
sub
jno
enter
scas
inc
xor
fwait
dec
call
push
mov
pop
enter
dec
iret
int3
cdq
loopne
sbb
push
ins
imul
in
shr
repnz
lods
sbb
nop
xor
pop
or
movs
push
fsubr
fild
mov
xor
push
and
sub
addr16
sbb
xchg
mov
cs
lods
adc
loopne
mov
jbe
xchg
lods
dec
fcomi
sbb
or
xor
jns
iret
lods
and
retf
movs
arpl
xchg
cmp
cmps
xchg
pop
jecxz
nop
ins
xor
in
mov
das
xor
ret
sub
(bad)
jo
imul
out
rcr
pop
and
mov
repnz
jl
mov
arpl
pop
fisub
sub
daa
pshufw
mov
cmp
mov
xchg
loopne
imul
dec
or
loopne
ss
mov
fwait
push
jl
repnz
xlat
int3
and
mov
dec
sub
mov
pop
cmc
mov
push
lock
mov
dec
shl
mov
leave
fdiv
iret
fidivr
push
cmc
mov
int3
fnstsw
dec
dec
and
dec
cmp
fcmovnu
push
out
and
mov
test
in
or
lds
dec
cmovs
sbb
or
cdq
mov
sar
or
cmp
xor
ret
stc
ror
nop
cld
dec
fcomp
jno
lods
das
ret
mov
sub
leave
xchg
shl
iret
mov
xchg
mov
dec
push
inc
outs
lahf
push
xor
jg
ds
and
das
push
stos
jo
iret
inc
jbe
mov
out
jg
mov
sbb
adc
xor
push
lods
leave
mov
xor
mov
ins
sub
push
mov
movs
sbb
push
cs
shl
jo
lahf
xchg
lods
pop
mov
loope
dec
sbb
jb
xchg
arpl
arpl
mov
neg
idiv
imul
ret
test
sub
sbb
outs
aas
hlt
data16
aaa
pop
jne
jg
data16
inc
adc
sub
cli
inc
leave
pop
adc
pop
cmp
pop
jnp
pop
adc
sbb
dec
leave
in
daa
inc
in
jmp
mov
mov
fadd
aad
dec
cmp
sbb
and
rcl
loopne
std
xor
add
dec
cmp
pop
rcl
aaa
stos
(bad)
popf
pushf
inc
ins
push
jg
sub
push
cmps
inc
lock
mov
mov
dec
jmp
mul
add
(bad)
sti
es
xchg
add
je
cmc
vcomiss
push
es
cmp
pop
push
ss
dec
(bad)
mov
cmps
(bad)
add
inc
fcomp
lods
out
mov
hlt
std
leave
outs
sar
mov
sub
stos
xchg
push
pop
ret
das
test
mov
movs
fwait
and
and
jle
inc
mov
stc
loop
out
ret
inc
jb
and
pop
mov
imul
xchg
mov
and
mov
and
xor
xchg
outs
repnz
jmp
mov
push
loope
push
les
fadd
lock
push
ss
fs
xchg
ret
int3
cmp
adc
xchg
xor
jbe
aaa
add
in
test
popa
jae
inc
jg
add
gs
out
push
in
(bad)
std
or
out
adc
icebp
fldenv
cdq
push
rcr
bound
and
push
sbb
xor
push
shl
jae
pop
sub
push
mov
dec
mov
pop
xchg
mov
mov
and
xor
dec
test
and
cmp
dec
pop
aam
jne
sub
(bad)
pusha
(bad)
stos
add
out
daa
lods
mov
and
popf
mov
and
sbb
shl
push
push
and
sub
div
lock
xchg
adc
jl
and
pop
jmp
cmp
lock
sub
lea
popf
jmp
inc
cmp
repz
xlat
repnz
cld
(bad)
push
imul
push
mov
cmps
jmp
or
add
out
retf
pusha
mov
in
dec
pop
test
push
(bad)
(bad)
icebp
ss
inc
lds
inc
jle
hlt
clc
out
pusha
cs
sti
call
retf
xchg
(bad)
xchg
test
push
fld
enter
and
mov
cmp
(bad)
jns
inc
jg
fisub
jge
cmp
aam
loopne
dec
scas
xor
sbb
cld
retf
(bad)
jb
gs
out
loop
add
jmp
inc
xor
sub
push
icebp
cmp
in
sbb
cmp
pop
xor
push
outs
mov
mov
jl
add
cld
add
inc
call
in
aaa
dec
push
mov
jecxz
mov
mov
pop
gs
arpl
pop
jnp
sub
dec
lods
(bad)
push
ja
stos
cmc
enter
icebp
out
repz
and
cld
xlat
add
jmp
push
mov
cwde
retf
ins
lock
fld
mov
add
adc
sar
inc
sar
cmp
xchg
enter
jecxz
and
cld
ins
mov
inc
mov
sub
cld
outs
repnz
nop
stos
sar
jecxz
and
fdiv
stc
ins
mul
(bad)
xchg
outs
sbb
mov
cld
ins
mov
adc
movs
loopne
cli
sbb
sbb
push
(bad)
inc
retf
push
dec
mov
fmul
mov
xchg
movs
or
mov
ds
inc
push
mov
adc
push
(bad)
shl
and
pop
sub
dec
outs
cli
or
cdq
pop
xchg
test
xlat
in
retf
shl
push
sar
mov
fdivr
mov
inc
push
jl
dec
pop
je
inc
rol
push
inc
rol
and
pop
pushf
mov
mov
std
jl
add
jecxz
mov
xchg
mov
sbb
mov
int3
sbb
dec
cmc
lahf
or
or
in
xchg
cwde
int
fwait
mov
sbb
cli
mov
mov
push
cwde
sub
int3
mov
in
fist
sar
stos
shr
dec
test
fsub
arpl
mov
mov
sbb
jl
nop
xchg
push
call
jg
pop
adc
push
pushf
jbe
std
in
mov
sub
xchg
outs
lea
jp
cs
mov
cmp
xchg
scas
adc
fnstenv
ja
xchg
add
mov
add
add
jecxz
sti
adc
dec
outs
add
push
frstor
jmp
pop
stc
(bad)
pop
sbb
xchg
add
cmc
jae
adc
xor
dec
lods
fcomi
cmp
in
dec
shl
inc
shl
mov
fdivr
mov
dec
shl
xor
shl
retf
pusha
int
cmc
mov
dec
fsub
jo
sub
movs
sub
dec
push
mov
out
inc
push
mov
(bad)
movs
rol
fstp
push
pop
dec
scas
sbb
outs
xor
cmp
add
dec
jle
add
or
add
mov
inc
dec
pop
adc
mov
into
out
addr16
jnp
mov
xor
sar
sahf
or
pop
sub
pop
rcr
fnstsw
outs
fisttp
jl
pop
ins
jno
sub
not
lahf
dec
jge
adc
push
and
fild
ins
movs
xchg
mov
sar
and
mov
dec
jle
jmp
cld
add
add
or
jmp
inc
lods
sbb
adc
cmp
pop
mov
rcl
pop
pushf
arpl
imul
push
scas
rcr
movs
out
aas
movs
int
fnsave
sub
int3
clc
icebp
dec
sahf
mov
int3
out
stos
jo
jb
shr
adc
inc
sub
and
lahf
mov
or
sub
out
and
push
push
mov
movs
sub
cmps
popf
call
inc
das
(bad)
sub
xor
mov
push
mul
test
aas
sbb
mov
(bad)
gs
fnstsw
sahf
jnp
mov
movs
bound
xchg
sbb
inc
call
push
mov
icebp
dec
dec
jo
(bad)
(bad)
xor
push
add
inc
push
xor
push
scas
mov
jb
imul
ds
cmp
and
daa
test
pop
(bad)
add
mov
out
lods
out
loopne
jle
push
test
jae
push
mov
addr16
xor
cmp
and
fxch
outs
cwde
jns
test
xchg
and
pop
or
leave
aad
ss
pmulhw
ret
jp
dec
pop
jmp
xor
mov
jne
jno
and
push
push
cmp
arpl
jb
mov
hlt
movs
iret
cmp
fidivr
arpl
std
mov
pop
fdiv
mov
inc
shl
fdiv
mov
into
(bad)
int3
fnstsw
dec
dec
mov
jle
pop
mov
out
mov
inc
xchg
pushf
xchg
(bad)
or
aas
mov
cmc
(bad)
mov
test
cli
inc
push
stos
int3
inc
mov
cmp
fcmovbe
(bad)
mov
fisttp
mov
cmp
add
pop
cs
mov
cmp
enter
inc
es
pop
ret
cmp
or
sub
out
gs
or
repnz
add
add
inc
clc
ret
and
dec
add
leave
sub
(bad)
rcl
outs
outs
fcomp
cmp
iret
mov
bound
je
add
(bad)
cli
xor
(bad)
mov
sbb
(bad)
push
movs
mov
loopne
xchg
ds
mov
and
aam
mov
stc
mov
in
or
ficom
(bad)
xor
adc
xlat
pop
rol
cli
and
in
and
xchg
xchg
out
cmps
pop
jae
daa
out
test
enter
jmp
inc
test
pusha
in
popf
push
or
sub
gs
(bad)
or
inc
inc
mov
(bad)
(bad)
sub
call
jns
sub
or
dec
movs
repz
lea
in
pusha
inc
dec
ss
aad
or
imul
(bad)
cmps
fstp
mov
test
inc
outs
xchg
push
sbb
inc
mov
pop
adc
lds
rcr
fisttp
sub
xchg
pop
ret
pop
push
ins
inc
sbb
mov
xor
sbb
dec
retf
retf
jo
push
add
xchg
cdq
pop
jne
xchg
mov
in
outs
fld
stos
cmp
adc
aas
pop
pop
iret
mov
lods
fld
fist
dec
int3
stc
push
inc
add
js
loop
sbb
mov
fsub
add
jmp
mov
mov
shl
loope
repnz
sub
je
pushf
call
cmp
jo
mov
pop
dec
inc
mov
mov
adc
enter
and
push
add
stos
inc
sub
shr
add
enter
and
push
or
jl
sub
dec
mov
int
mov
xor
and
jmp
lahf
xchg
ins
call
cmp
test
xor
jnp
or
lea
mov
pop
cli
fs
mov
pop
in
cmp
out
jle
mov
pushf
dec
(bad)
push
sub
in
test
dec
jnp
and
jne
dec
jge
cmp
scas
and
ds
ja
ficom
(bad)
sbb
push
(bad)
push
sar
jmp
lods
pusha
xchg
jmp
pusha
enter
jl
repnz
pop
cmps
mov
gs
stc
(bad)
pushf
xchg
inc
fld
cmc
or
mov
mov
push
leave
ret
cld
xchg
or
in
cdq
xlat
xor
daa
repz
test
jne
ds
aad
and
retf
jmp
sub
emms
das
mov
xor
fiadd
pop
es
push
cmps
leave
jge
stc
inc
xlat
or
cmp
adc
(bad)
sbb
push
out
jg
dec
std
rcr
sub
inc
add
cld
fbstp
in
add
jbe
lods
sbb
dec
nop
stos
xchg
xchg
(bad)
movs
mov
ret
repz
in
cmp
stc
sub
ret
add
cmps
mov
and
mov
pop
das
push
push
adc
mov
pushf
or
outs
pop
out
(bad)
fdiv
std
fcomip
jl
xchg
pop
rcl
inc
div
xor
mov
lods
ja
mov
out
leave
repz
movs
icebp
cmp
cli
pop
jle
(bad)
jle
pop
cli
aad
xor
loopne
aad
bound
mov
inc
adc
push
mov
jecxz
lds
dec
or
test
ficom
sbb
sbb
sub
jecxz
jecxz
mov
push
cmp
in
or
and
mov
div
cs
fsubr
xchg
xlat
test
or
cmp
sbb
gs
div
sub
mov
push
enter
outs
mov
pop
ror
jnp
or
sub
cmps
lahf
in
sti
scas
cdq
mov
sbb
pop
mov
add
jp
test
nop
sbb
mov
push
int3
aaa
sar
push
out
cmp
mov
(bad)
loopne
(bad)
mov
fdiv
dec
jo
jecxz
std
mov
pop
cmps
pop
out
sbb
xor
and
fwait
movs
jbe
sbb
in
in
xor
and
retf
sbb
cmc
or
xlat
call
mov
fst
rol
in
or
sub
icebp
jns
pop
vpmacssww
fild
mov
test
pop
cmp
jne
jmp
or
pop
ins
pop
push
push
jns
cmp
movs
ins
imul
sbb
adc
jb
push
pop
push
adc
lea
mov
add
loopne
iret
mov
dec
or
popf
cmp
xchg
stos
jb
mov
int3
ins
sbb
pop
sub
cmps
imul
retf
hlt
pop
scas
dec
mov
vcvttpd2dq
ds
popa
mov
call
into
cmp
movs
into
popa
cli
inc
cli
mov
push
lds
jp
push
outs
jae
fnsave
cmc
popa
stos
and
stos
jle
addr16
in
mov
arpl
dec
sub
mov
adc
setg
mov
mov
fs
out
(bad)
mov
jb
mov
ja
in
adc
mov
jne
pop
pop
and
push
or
sub
ret
(bad)
or
push
jmp
xchg
dec
add
inc
push
sahf
mov
xor
pusha
inc
or
(bad)
cdq
or
pop
xchg
jns
pusha
cmp
cmc
test
jo
aam
(bad)
lods
cmp
test
and
lods
jmp
add
sub
sbb
retf
dec
scas
and
mov
lock
and
push
movs
int3
out
mov
xchg
ss
out
pop
sub
and
out
ja
push
cld
sub
scas
mov
add
(bad)
mov
nop
cmc
mov
(bad)
mov
xor
repz
arpl
xchg
sahf
push
and
mov
pop
repnz
loope
mov
in
mov
cmps
std
mov
repz
mov
(bad)
mov
in
out
mov
mov
mov
push
out
mov
jp
mov
repz
mov
inc
call
mov
adc
mov
in
mov
and
mov
jne
mov
dec
in
jecxz
push
jecxz
cld
mov
dec
loopne
jae
cld
mov
xchg
loop
mov
cld
mov
mov
cld
mov
mov
cld
mov
fprem1
mov
shl
mov
rcl
mov
rcr
jmp
in
fcmovnbe
std
mov
sar
mov
lock
mov
fdivr
mov
sar
mov
int3
retf
adc
add
fscale
mov
sar
mov
sar
mov
inc
call
mov
(bad)
mov
sar
mov
int3
retf
jecxz
add
fscale
mov
sar
mov
sar
mov
daa
jmp
(bad)
std
mov
sar
mov
pushf
retf
inc
sub
inc
jl
std
mov
sar
mov
sar
mov
push
out
mov
(bad)
mov
sar
mov
sar
mov
and
std
mov
sar
mov
sar
mov
sar
mov
sar
mov
xchg
cmc
mov
dec
in
jecxz
out
mov
fdivr
mov
push
retf
mov
add
leave
std
mov
sar
mov
xlat
std
mov
adc
mov
xchg
loop
mov
std
mov
sar
mov
push
retf
mov
add
fscale
mov
sar
mov
sar
mov
adc
mov
xchg
loop
mov
std
mov
sar
mov
push
retf
mov
add
fscale
mov
sar
mov
sar
mov
adc
mov
cmc
in
mov
(bad)
mov
sar
mov
push
retf
adc
add
fscale
mov
sar
mov
sar
mov
adc
mov
xchg
loop
mov
std
mov
sar
mov
push
retf
mov
add
fscale
mov
sar
mov
sar
mov
adc
mov
xchg
loop
mov
std
mov
sar
mov
push
retf
mov
add
fscale
mov
sar
mov
sar
mov
adc
mov
xchg
loop
mov
std
mov
sar
mov
push
retf
mov
add
fscale
mov
sar
mov
sar
mov
adc
mov
xchg
loop
mov
std
mov
sar
mov
push
retf
mov
add
fscale
mov
sar
mov
sar
mov
adc
mov
xchg
loop
mov
std
mov
sar
mov
push
retf
mov
add
fscale
mov
sar
mov
sar
mov
adc
mov
xchg
loop
mov
std
mov
sar
mov
push
retf
mov
add
fscale
mov
sar
mov
sar
mov
adc
mov
mov
mov
(bad)
mov
sar
mov
push
retf
mov
add
fscale
mov
sar
mov
sar
mov
adc
mov
xchg
loop
mov
std
mov
sar
mov
push
retf
mov
add
fscale
mov
sar
mov
sar
mov
adc
mov
xchg
loop
mov
std
mov
sar
mov
push
retf
mov
add
fscale
mov
sar
mov
sar
mov
adc
mov
xchg
loop
mov
std
mov
sar
mov
push
retf
mov
add
fscale
mov
sar
mov
sar
mov
adc
mov
xchg
loop
mov
std
mov
sar
mov
push
retf
mov
add
fscale
mov
sar
mov
sar
mov
adc
mov
xchg
loop
mov
std
mov
sar
mov
push
retf
mov
add
fscale
mov
sar
mov
sar
mov
adc
mov
xchg
loop
mov
std
mov
sar
mov
push
retf
mov
add
fscale
mov
sar
mov
sar
mov
adc
mov
xchg
loop
mov
std
mov
sar
mov
push
retf
mov
add
fscale
mov
sar
mov
sar
mov
adc
mov
xchg
loop
mov
std
mov
sar
mov
push
retf
mov
add
fscale
mov
sar
mov
sar
mov
adc
mov
xchg
loop
mov
std
mov
sar
mov
push
retf
mov
add
fscale
mov
sar
mov
sar
mov
adc
loop
mov
std
mov
sar
mov
push
retf
mov
add
fscale
mov
sar
mov
sar
mov
adc
loop
mov
std
mov
sar
mov
push
retf
mov
add
fscale
mov
sar
mov
sar
mov
adc
loop
mov
std
mov
sar
mov
push
retf
mov
add
fscale
mov
sar
mov
sar
mov
adc
loop
mov
std
mov
sar
mov
push
retf
mov
add
fscale
mov
sar
mov
sar
mov
push
jmp
cmp
std
mov
sar
mov
push
retf
mov
add
fscale
mov
sar
mov
sar
mov
push
jmp
cmp
std
mov
sar
mov
push
retf
mov
add
fscale
mov
sar
mov
sar
mov
push
jmp
cmp
std
mov
sar
mov
push
retf
mov
add
fscale
mov
sar
mov
sar
mov
push
jmp
cmp
std
mov
sar
mov
push
retf
mov
add
fscale
mov
sar
mov
sar
mov
push
jmp
cmp
std
mov
sar
mov
push
retf
mov
add
fscale
mov
sar
mov
pop
fadd
sbb
ror
cmc
fdivr
mov
inc
inc
popa
sub
dec
popa
sub
dec
popa
cmps
fucomip
jae
test
cmp
aaa
dec
fcomp
inc
rcr
inc
xor
xor
sbb
adc
int3
xlat
std
sbb
adc
into
xlat
std
sbb
shr
aad
(bad)
mov
inc
inc
popa
and
dec
popa
lock
sub
(bad)
jmp
inc
popa
sub
in
rcl
rcl
std
sub
inc
popa
sub
pushf
xchg
int3
fcmovnbe
gs
inc
popa
das
(bad)
add
mov
fisttp
fisttp
(bad)
jmp
inc
popa
sub
dec
popa
sub
dec
popa
cld
fistp
sub
dec
popa
das
(bad)
add
mov
fisttp
(bad)
outs
mov
inc
dec
popa
and
pushf
sar
fisttp
fisttp
(bad)
lahf
sub
dec
popa
sub
dec
popa
rcr
int3
std
mov
retf
sub
inc
popa
sub
dec
popa
in
fistp
sub
dec
popa
and
dec
xchg
cmp
fdivr
xor
mov
sub
inc
popa
and
cmp
daa
dec
fsubr
inc
inc
lock
daa
jl
sub
sub
inc
popa
sub
dec
popa
sub
dec
loope
fisttp
sbb
ins
mov
cdq
sti
mov
inc
mov
or
mov
inc
dec
popa
sub
pushf
scas
and
aam
inc
arpl
call
inc
inc
pusha
inc
mov
dec
popa
sub
dec
popa
cmps
fistp
test
sar
mov
sbb
mov
mov
cld
pop
imul
inc
and
cmp
repz
or
jmp
mov
mov
sar
lock
mov
adc
mov
fisttp
fisttp
fistp
pop
dec
popa
sub
dec
popa
sub
cmp
adc
fbstp
sbb
gs
inc
popa
sub
dec
popa
and
mov
popa
sub
dec
popa
and
pushf
(bad)
popf
arpl
cmc
cmp
jmp
inc
popa
cs
stc
aad
pushf
dec
xadd
add
mov
fisttp
fisttp
fisttp
sub
inc
popa
sub
dec
popa
mov
sub
adc
push
js
(bad)
push
sar
mov
fisttp
(bad)
test
(bad)
jge
add
lods
mov
jo
or
fbld
ja
popa
daa
fistp
pop
dec
popa
sub
dec
popa
and
pushf
(bad)
lahf
fcmovnbe
add
mov
bound
add
push
or
jmp
inc
popa
sub
dec
popa
and
dec
popa
push
fdivr
sub
fsub
inc
inc
popa
sub
dec
popa
and
dec
shl
jno
add
arpl
std
sub
inc
popa
sub
dec
popa
sub
in
shl
(bad)
mov
inc
inc
popa
sub
dec
popa
sub
in
rol
(bad)
(bad)
mov
inc
inc
popa
sub
dec
popa
mov
test
jo
dec
mov
adc
mov
fisttp
ficomp
jnp
jl
add
push
sub
jmp
inc
popa
sub
dec
popa
sub
mov
fist
ins
inc
dec
mov
dec
popa
sub
dec
popa
sbb
shl
inc
inc
popa
fisttp
fxch
std
mov
inc
dec
popa
and
in
shl
sbb
mov
fisttp
fisttp
(bad)
std
mov
inc
dec
popa
sbb
cli
mov
inc
inc
popa
sub
dec
popa
das
fisttp
ficomp
jnp
fild
cmp
inc
xchg
pop
icebp
inc
xchg
bound
in
add
push
inc
cld
pop
mov
ins
jns
out
pop
and
sar
xor
jno
jl
fbld
ja
popa
sub
fdivr
jmp
inc
popa
sub
dec
popa
cld
fistp
outs
inc
popa
sub
dec
popa
fisttp
(bad)
std
mov
inc
dec
popa
sub
dec
popa
sbb
shl
inc
inc
popa
sub
dec
popa
and
fadd
inc
inc
inc
inc
mov
dec
popa
sub
dec
popa
sub
dec
popa
and
pushf
sar
fmul
fisttp
fisttp
(bad)
std
mov
inc
dec
popa
sub
pushf
inc
aam
mov
mov
inc
popa
sub
dec
popa
das
(bad)
lahf
sub
dec
popa
sub
dec
popa
fcmovu
pop
arpl
and
jmp
dec
popa
and
dec
popa
jecxz
sub
xchg
inc
fsubr
inc
mov
sar
xlat
inc
sar
imul
mov
(bad)
jmp
dec
popa
sub
int3
cmp
gs
inc
popa
and
or
nop
add
jmp
test
sar
retf
jo
int
fdiv
mov
jmp
inc
popa
sub
dec
popa
sub
dec
popa
fimul
shr
std
in
inc
lock
inc
popa
sub
dec
popa
and
jl
lods
or
gs
inc
popa
sub
ins
mov
sub
dec
popa
sub
dec
popa
clc
(bad)
out
mov
inc
dec
popa
and
mov
fisttp
fisttp
fisttp
fcmovne
cmc
mov
fisttp
fild
pop
inc
popa
sub
pushf
push
call
push
dec
popa
sub
dec
popa
in
fistp
test
adc
int3
cmc
mov
fisttp
(bad)
xchg
sub
pushf
push
sub
fdivr
sub
dec
popa
sub
dec
popa
in
fistp
sub
dec
popa
and
jl
lods
or
gs
inc
popa
sub
ins
jmp
inc
popa
sub
dec
popa
sub
dec
popa
clc
fisttp
mov
inc
dec
popa
in
(bad)
fs
inc
popa
and
jl
lods
or
gs
inc
popa
sub
dec
popa
and
lods
in
sbb
stc
dec
jecxz
add
inc
mov
sub
dec
in
out
mov
inc
sar
sub
inc
popa
sub
dec
popa
sub
dec
popa
mov
cmp
mov
dec
rol
adc
add
add
bound
dec
popa
sub
int3
adc
push
sub
dec
in
out
mov
inc
sar
sub
inc
popa
sub
dec
popa
sub
dec
popa
mov
add
mov
sub
inc
popa
and
dec
popa
repnz
xchg
into
ja
add
bound
dec
popa
and
dec
mov
repnz
cli
mov
sbb
pop
add
popa
and
dec
popa
repnz
mov
fidivr
dec
popa
sub
dec
popa
and
sub
stos
add
mov
sub
inc
popa
sub
dec
popa
sub
dec
popa
xchg
dec
jne
imul
popa
sub
dec
popa
and
int3
adc
fdivr
mov
jmp
cli
mov
les
rol
test
jae
or
fbld
ja
popa
sub
dec
popa
fisttp
fld
mov
fisttp
(bad)
and
mov
inc
inc
popa
fisttp
fistp
sti
(bad)
mov
fisttp
fisttp
(bad)
add
mov
mov
inc
popa
das
fisttp
ficomp
cmp
push
mov
inc
dec
popa
sub
sub
enter
inc
int3
out
mov
dec
popa
sub
dec
popa
and
dec
popa
pusha
(bad)
std
mov
fisttp
fistp
shl
mov
rcr
inc
or
mov
inc
inc
popa
sub
mov
rcr
std
mov
rcr
inc
mov
jne
fs
dec
mov
sub
dec
popa
sub
dec
popa
sub
pushf
bound
inc
popa
sub
int3
bound
dec
popa
fisttp
fucomi
cmc
mov
cmp
xchg
cmp
cmc
mov
retf
fnstenv
dec
loop
mov
mov
adc
dec
xchg
jb
mov
push
pop
mov
and
iret
imul
hlt
pop
inc
outs
inc
and
adc
inc
jmp
inc
jp
xor
xchg
jb
call
jmp
inc
dec
outs
inc
arpl
adc
inc
jmp
inc
ficom
and
in
daa
inc
jmp
inc
push
mov
push
jne
out
test
fsub
adc
inc
jmp
inc
jmp
and
daa
inc
jmp
mov
adc
xchg
push
test
daa
cmp
adc
inc
cmp
fidiv
dec
sti
je
mov
push
(bad)
fsave
mov
xchg
xchg
mov
adc
inc
jmp
inc
call
es
mov
jne
cdq
mov
mov
pop
dec
(bad)
daa
pusha
out
daa
inc
jmp
inc
sbb
ss
shl
pop
and
in
daa
inc
jmp
mov
or
xchg
adc
fsubr
adc
inc
jmp
inc
jp
mov
out
daa
inc
jmp
xchg
lods
retf
clc
ja
mov
fsubr
adc
and
lods
retf
xor
hlt
test
push
dec
dec
mov
add
inc
push
out
daa
inc
jmp
inc
cmp
daa
and
daa
inc
push
daa
sub
daa
inc
jmp
cmp
out
stc
xlat
dec
fwait
loope
daa
and
adc
inc
jmp
inc
push
outs
inc
sbb
adc
inc
jmp
inc
mov
and
adc
inc
jmp
fisttp
daa
push
sub
mov
inc
loope
daa
inc
jmp
xchg
xor
and
xchg
jb
lock
daa
inc
jmp
inc
cmp
fiadd
adc
inc
jmp
inc
call
inc
jmp
inc
mov
adc
fsubr
adc
inc
jmp
hlt
jns
mov
(bad)
xlat
rcr
push
or
ss
sub
fnstsw
loop
neg
push
stc
cmps
xor
fmul
stos
bswap
or
pop
cmp
and
xchg
(bad)
pop
sbb
shl
xlat
add
mov
rcl
test
push
dec
jnp
jle
sbb
mov
ja
sub
in
je
test
and
hlt
xchg
push
test
jbe
cmps
adc
pop
lods
xchg
push
ds
mov
je
mov
loop
les
mov
rcl
cmp
movs
(bad)
push
mov
pop
arpl
xchg
add
mov
mov
(bad)
jbe
neg
sub
fisubr
xor
sub
sub
jmp
lea
xor
sti
ins
mov
jne
sub
lods
xchg
xor
or
test
in
imul
mov
test
mov
jae
xchg
jnp
pop
lea
add
mov
dec
mov
rcr
jnp
stos
mov
sub
imul
out
dec
or
std
mov
ds
cmps
pop
jae
cld
cmps
imul
cld
sub
movs
fisubr
les
icebp
addr16
dec
shld
sbb
xor
icebp
addr16
dec
aas
fadd
jecxz
int3
(bad)
icebp
cmps
aam
or
and
dec
aas
mov
(bad)
fs
movs
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
cmc
pusha
lods
cmps
lock
in
pushf
fisub
xchg
enter
popa
lods
cmps
mul
mul
xor
pop
dec
cdq
mov
cmp
sar
imul
(bad)
movs
mov
ins
cmp
gs
ror
jb
(bad)
jmp
xchg
stc
js
cmp
xor
imul
xor
pop
mov
aas
imul
xor
add
imul
xor
addr16
add
jmp
inc
scas
test
lock
or
clc
mov
in
mov
aas
imul
(bad)
cld
xor
hlt
stc
adc
inc
fidivr
int
xchg
movs
imul
xor
out
mov
ss
jnp
scas
pop
inc
scas
pop
push
mov
test
adc
pop
dec
cdq
mov
cmp
xor
stos
sti
and
pusha
sbb
stc
js
cmp
xor
cli
add
dec
cdq
mov
cmp
xor
(bad)
pop
or
aam
cmp
xor
popa
cld
xor
mov
mov
neg
mov
imul
idiv
add
dec
popa
xchg
movs
imul
xor
cmps
push
sbb
test
aad
lods
cmps
std
pusha
mov
test
cmps
repz
mov
pop
add
daa
ins
inc
scas
fbstp
mov
xlat
inc
pop
test
sub
out
inc
pop
pop
out
push
test
loopne
push
inc
and
or
and
xchg
rol
pop
pop
push
mov
cld
popa
test
fmulp
lea
inc
mov
and
mov
mov
cmp
mov
(bad)
nop
leave
dec
test
pop
aam
or
xchg
in
gs
cmp
(bad)
xor
movs
push
imul
mov
jl
shl
mov
and
scas
mov
and
jb
fwait
and
and
les
pop
mov
popa
pop
inc
mov
test
mov
sbb
jae
mov
rcl
push
ja
loope
mov
(bad)
jno
jns
movs
mov
(bad)
ja
call
mov
jns
inc
fnstenv
mov
in
and
cld
mov
xchg
sbb
ror
xor
scas
mov
out
outs
and
nop
cld
and
cld
out
aad
xor
mov
mov
jb
sbb
adc
add
xchg
mov
jns
pop
dec
mov
pop
test
outs
mov
xchg
cwde
addr16
add
clc
mov
add
jmp
outs
nop
popf
inc
outs
nop
add
movs
hlt
add
outs
nop
add
inc
outs
fwait
add
xlat
pause
popf
dec
outs
nop
add
inc
outs
outs
add
retf
inc
stc
dec
outs
nop
add
inc
outs
xchg
add
inc
outs
nop
add
test
xor
aad
nop
adc
add
into
sub
outs
xchg
add
inc
hlt
add
xchg
jno
out
bound
rcl
sub
shl
icebp
div
sti
out
bound
rcl
and
icebp
push
sti
out
bound
rcl
sub
shl
or
not
pop
loop
fild
sbb
icebp
std
push
outs
dec
xor
inc
outs
nop
popf
inc
outs
nop
add
lds
mov
push
cdq
shl
push
or
dec
outs
nop
popf
inc
outs
adc
fcomip
add
xor
test
jmp
cs
add
inc
scas
nop
add
nop
fld
nop
add
test
add
add
inc
outs
nop
add
xchg
mov
out
cwde
pop
hlt
or
xlat
repz
jle
es
imul
add
test
add
nop
add
inc
iret
add
or
(bad)
repz
outs
fwait
add
aad
or
inc
hlt
add
lahf
icebp
je
mov
push
movs
dec
outs
nop
add
inc
outs
nop
cmp
test
add
add
inc
outs
dec
push
(bad)
loope
retf
aad
scas
call
add
inc
outs
nop
add
inc
outs
nop
std
inc
outs
nop
add
test
add
add
inc
outs
nop
add
aad
add
ss
aad
pop
cdq
fistp
cwde
stc
shl
dec
dec
outs
nop
add
test
add
xchg
add
push
hlt
or
(bad)
repz
outs
nop
add
inc
outs
pushf
add
into
pop
cmp
shl
jbe
dec
add
fldpi
out
cwde
pop
hlt
or
shl
sbb
ror
icebp
xor
xchg
(bad)
add
lahf
shl
aam
(bad)
outs
add
fldpi
out
cwde
pop
hlt
or
shl
sbb
xor
add
retf
aad
jl
mov
pop
xor
shl
push
dec
add
fldpi
out
cwde
pop
hlt
or
shl
sbb
and
add
aad
jl
sbb
add
lahf
shl
imul
fldpi
out
cwde
pop
hlt
or
shl
sbb
pusha
mov
cmp
xchg
or
fisttp
add
aad
pop
cdq
fist
call
pop
cdq
fist
call
pop
cdq
fist
fwait
cmp
mov
fist
fwait
cmp
pop
fistp
xor
shl
or
fdivp
movs
call
dec
pop
fdivp
movs
call
jl
fdivp
movs
call
lods
pop
fdivp
movs
call
int3
pop
fdivp
movs
call
in
fdivp
scas
call
add
inc
outs
nop
add
inc
outs
nop
pop
inc
outs
nop
add
in
pop
push
aad
aam
fdivp
nop
popf
dec
outs
nop
add
in
cs
inc
pop
add
inc
scas
nop
add
nop
mov
test
popa
test
popf
inc
outs
cwde
add
xchg
fwait
and
pop
or
add
nop
add
inc
outs
nop
add
pop
or
rcl
nop
gs
outs
lar
cmc
cld
add
nop
dec
shr
imul
inc
outs
nop
add
inc
outs
nop
add
in
inc
jbe
add
aad
mov
mov
dec
outs
nop
popf
inc
outs
xchg
add
dec
outs
xchg
add
dec
outs
cwde
add
inc
outs
nop
lea
xchg
add
int
pop
rol
std
push
ss
add
sbb
mul
repz
mov
repz
xchg
sbb
std
push
dec
inc
xor
inc
outs
nop
popf
inc
outs
nop
add
movs
jl
xor
enter
imul
test
dec
outs
nop
add
inc
out
ss
add
hlt
add
inc
outs
nop
add
inc
das
inc
push
aad
nop
test
nop
add
inc
(bad)
fld
xchg
in
add
outs
nop
popf
inc
outs
fwait
add
xchg
mov
leave
(bad)
std
push
dec
inc
xor
inc
outs
nop
popf
inc
outs
or
test
punpcklwd
mov
(bad)
imul
inc
outs
xchg
add
shl
pop
adc
dec
hlt
or
cdq
adc
sbb
ins
nop
jge
outs
nop
add
dec
hlt
or
or
adc
outs
cwde
sbb
cmc
jmp
cdq
dec
aad
(bad)
jae
lods
dec
outs
nop
add
aad
add
dec
outs
nop
sbb
aad
lahf
add
outs
nop
gs
outs
or
and
imul
inc
outs
cdq
add
aad
nop
popf
dec
outs
nop
add
mov
je
aam
adc
cmps
das
repnz
call
movs
push
out
adc
inc
outs
nop
add
and
imul
inc
aas
inc
add
pause
popf
dec
outs
nop
add
inc
aam
add
rcr
fwait
jno
cwde
data16
jmp
cdq
or
sbb
icebp
add
(bad)
push
pop
(bad)
icebp
add
(bad)
stos
lock
es
push
cmp
icebp
add
(bad)
data16
je
mov
jnp
xor
pop
mov
loope
nop
and
inc
outs
xchg
add
cmc
mov
mov
aad
sub
mov
repz
call
or
rol
push
jp
loope
rol
cdq
repnz
and
mov
test
sub
mov
mov
sub
rol
sbb
js
icebp
daa
mov
xor
adc
add
adc
inc
jmp
xor
or
xlat
jp
sub
je
fdiv
mov
pop
jge
test
cs
pop
inc
dec
xchg
in
cwde
or
push
in
mov
jg
mov
loope
push
aam
push
sbb
sti
jl
jmp
push
mov
add
hlt
xchg
mov
push
inc
fisttp
jo
(bad)
rcr
xchg
cld
and
mov
test
push
xchg
jno
cdq
(bad)
jmp
dec
mov
mov
jne
mov
or
adc
push
scas
mov
jmp
sub
adc
adc
dec
fnstsw
adc
adc
sub
je
mov
and
xchg
sub
scas
xchg
add
mov
mov
dec
stos
cmps
rcl
xchg
jno
in
push
movs
js
leave
js
ins
sbb
popf
les
xchg
push
imul
sub
and
test
sub
in
mov
jb
imul
adc
test
fcomp
stos
out
ret
stos
pop
(bad)
popf
mov
pop
mov
inc
push
loopne
test
sub
inc
sub
xchg
mov
int
lahf
test
stc
mov
lods
mov
test
mov
test
mov
fcmovb
sub
sbb
daa
sbb
and
in
sub
fwait
sub
les
mov
sub
shl
sub
pop
push
dec
mov
jno
sub
js
sub
mov
dec
and
jno
and
jno
and
shr
sbb
and
out
sub
shr
sbb
and
jl
inc
sub
ret
mov
test
jb
xor
sub
mov
sub
sbb
and
jno
and
jle
add
shr
sbb
and
jle
mov
xchg
sub
sbb
and
loope
sub
jno
and
jno
and
jle
jecxz
mov
sub
and
movaps
cmps
loope
sub
jno
and
jb
shl
in
and
jno
and
jo
and
lds
dec
sub
xchg
jno
and
push
cs
lds
out
(bad)
sbb
outs
cmp
sbb
sbb
daa
sbb
inc
sub
or
and
jno
and
mov
cmp
test
mov
mov
popf
in
mov
mov
or
cld
pusha
sbb
iret
xchg
int
out
test
mov
and
shl
inc
repz
or
and
lea
fistp
mov
(bad)
repnz
fwait
jmp
adc
inc
jp
mov
pop
in
retf
push
mov
mov
sub
ins
xor
(bad)
(bad)
mov
lods
xor
(bad)
in
mov
rol
retf
js
mov
inc
jno
pop
sbb
push
push
or
inc
mov
jnp
xchg
xor
push
popf
fucomi
cmp
pop
cdq
cld
mov
cmp
mov
mov
mov
(bad)
(bad)
mov
pop
cmp
jmp
icebp
dec
pop
jmp
dec
mov
fdiv
jb
fdivr
hlt
fld
jnp
jl
mov
or
push
aaa
nop
mov
dec
mov
add
(bad)
out
push
popa
push
push
mov
pop
jnp
jle
mov
or
inc
scas
sbb
and
shl
pop
gs
or
push
xor
ss
loopne
stos
or
mov
fmul
and
idiv
or
scas
mov
or
jbe
xchg
mov
dec
and
jbe
popf
cmps
cmp
jmp
dec
stos
shl
inc
xchg
sub
mov
adc
add
and
cmp
hlt
fmul
jp
popa
inc
xchg
jbe
jmp
loopne
mov
push
push
jo
adc
icebp
fbstp
mov
test
into
popa
test
stc
jl
lods
xchg
cld
adc
pop
jo
imul
xor
jecxz
pusha
scas
arpl
mov
jmp
cmps
or
pop
dec
push
fdivrp
lods
add
xchg
int3
adc
(bad)
loop
dec
data16
pop
bound
mov
cmps
push
inc
and
sahf
xor
test
mov
xor
popf
icebp
fisttp
popf
jl
adc
jne
xor
jb
sbb
iret
call
cld
sbb
aas
sub
cli
in
pushf
inc
cmc
lahf
sub
mov
js
sahf
cmp
jb
je
xchg
jb
dec
out
daa
inc
jmp
inc
call
fdiv
pop
ficom
sbb
scas
mov
pop
push
add
inc
js
in
stos
into
sar
test
xor
dec
sub
loopne
add
fidiv
fcomi
repz
jmp
mov
inc
outs
mov
(bad)
jns
or
je
lods
jb
jmp
rcl
stos
call
pop
dec
push
cmp
mov
je
or
dec
xchg
cmps
dec
dec
imul
or
mov
jnp
jno
(bad)
fnstenv
jnp
add
in
fdivr
mov
fisttp
push
push
or
mov
mov
dec
stos
popa
shl
repz
adc
or
retf
pop
xchg
push
xor
push
push
dec
xchg
clc
sub
xchg
mov
in
gs
mov
jae
pop
and
mov
imul
sbb
ins
fstp
gs
nop
jnp
jno
mov
xchg
ret
and
and
nop
push
in
sti
rcl
sub
adc
nop
cmps
add
or
ja
call
push
or
stos
inc
fwait
or
sub
cmp
sbb
mul
jl
xchg
iret
sub
test
push
jle
sbb
sbb
pop
mov
in
call
dec
or
ret
dec
adc
call
sbb
dec
push
pop
sbb
call
les
test
je
sar
popa
mov
clc
jmpw
jns
stos
xor
pop
imul
in
daa
inc
jmp
xlat
jp
sbb
je
fwait
nop
jo
mov
xor
pop
in
push
imul
or
ins
es
jb
shl
mov
push
stos
dec
imul
cdq
sub
repz
add
adc
stc
mov
test
fdivr
pop
mov
inc
test
ret
scas
ror
jg
adc
dec
or
scas
mov
inc
xor
add
loop
fs
jp
xchg
ds
dec
mov
jne
xchg
push
push
add
xchg
icebp
and
retf
int
out
adc
pushf
nop
push
(bad)
sti
cmp
or
mov
fcomp
out
pop
add
shl
sbb
push
push
loope
push
xchg
popa
jno
xchg
inc
arpl
sahf
movs
rcr
cmp
test
ret
rol
js
(bad)
fld
adc
add
mov
sub
retf
mov
and
xchg
mov
lock
mov
daa
imul
mov
push
or
dec
cmps
pusha
pop
xchg
jle
xchg
jbe
stc
out
cmp
dec
rol
add
xor
or
(bad)
add
and
fist
mov
mov
stos
daa
aam
mov
add
sbb
inc
je
scas
data16
sbb
loop
aaa
sub
(bad)
test
stc
jmp
xor
jmp
lds
xchg
push
(bad)
pop
mov
xor
jmp
xor
jmp
sub
out
sbb
data16
adc
data16
adc
push
mov
cmps
mov
jmp
mov
(bad)
test
stc
jmp
xor
jmp
test
push
scas
arpl
mov
dec
clc
inc
jl
scas
popa
bndstx
and
rcl
(bad)
cli
lods
out
movs
add
lds
lods
sub
in
xchg
add
or
outs
jne
or
and
mov
fld
adc
inc
jmp
inc
push
in
xor
mov
test
jmp
adc
inc
jp
jmp
push
(bad)
fwait
pop
aad
mov
jns
sti
fdiv
mov
ja
rcr
pop
pop
add
xchg
fsubrp
mov
push
or
icebp
pop
aaa
push
stos
mov
int
sub
lea
inc
jns
mov
push
in
ins
xor
jp
rcr
nop
(bad)
mov
ins
repz
mov
jns
sti
(bad)
mov
mov
push
(bad)
sub
mov
gs
inc
loop
push
imul
cmp
mov
mov
ret
sub
xchg
dec
cmp
das
sub
into
scas
mov
sub
test
mov
xor
lock
scas
shl
ret
mov
inc
jae
mov
test
mov
(bad)
rcl
jnp
sbb
stos
enter
rol
in
or
or
xchg
out
and
test
(bad)
xchg
mov
shl
shl
dec
retf
aas
stos
rcr
inc
mov
inc
xchg
popa
inc
mov
jns
sbb
lods
dec
push
arpl
inc
xchg
test
inc
shl
lea
mov
cmp
dec
and
out
mov
cli
je
ins
and
hlt
push
mov
jae
aad
test
rol
mov
inc
add
bound
inc
jno
(bad)
cmp
xchg
popa
adc
dec
pusha
xor
enter
sahf
dec
xor
jnp
shl
scas
jo
repz
jo
imul
add
scas
js
imul
sub
retf
sub
dec
imul
imul
fstp
xor
iret
ret
or
xor
cld
stc
scas
jo
imul
mov
aaa
sti
scas
jo
imul
in
cmp
or
out
adc
out
leave
dec
xor
add
push
clc
scas
jo
imul
ret
pushf
mov
pushf
je
push
xor
cli
scas
jo
imul
adc
out
pop
ret
xor
int3
sbb
xor
mov
retf
cmp
mov
fwait
pushf
ins
retf
mov
pushf
pushf
adc
push
xor
cli
scas
jo
imul
repz
outs
retf
dec
enter
sar
scas
jo
imul
out
push
xchg
(bad)
int3
mov
xor
push
xor
cli
scas
jo
imul
mov
in
scas
jg
addr16
call
out
or
jecxz
push
pushf
aam
push
xor
cli
scas
jg
xchg
pushf
add
stc
adc
hlt
scas
fist
xchg
loop
mov
outs
leave
and
test
inc
xor
dec
mov
loop
in
iret
fwait
sub
xor
cmp
imul
cmp
sti
test
mov
mov
sti
push
neg
fcom
stc
(bad)
repnz
fwait
loope
daa
and
adc
inc
jmp
inc
jp
mov
fistp
mov
(bad)
hlt
pop
daa
ins
inc
jmp
adc
inc
jmp
xlat
jp
sbb
je
fwait
nop
jo
mov
xor
jne
lea
dec
mov
push
sbb
out
outs
popa
scas
sub
inc
icebp
mov
dec
jno
mov
ret
(bad)
aad
pushf
xor
in
ja
repz
pop
pop
push
fwait
mov
mov
xchg
(bad)
mov
jle
and
xchg
dec
xor
sub
xchg
mul
sti
fisub
lds
fisub
shl
dec
stos
cmps
rcl
xchg
mov
inc
mov
jno
dec
in
or
cmp
mov
xchg
and
sar
xor
stos
push
(bad)
out
arpl
xchg
cmp
(bad)
sbb
adc
ja
or
call
dec
push
je
addr16
in
fs
sub
pop
lahf
cs
call
inc
push
mov
and
jmp
push
jbe
xchg
mov
pop
je
push
inc
jecxz
jecxz
hlt
arpl
stos
pop
(bad)
push
cmp
mov
mov
xchg
cmp
test
test
push
or
imul
mov
fsqrt
mov
xchg
xor
loope
push
ffree
pushf
xor
or
xor
loop
xor
loop
xor
jecxz
xor
loop
xor
loope
add
std
sbb
jmp
xchg
xchg
(bad)
xchg
xchg
mov
aam
xchg
xor
inc
xchg
repnz
leave
xchg
push
(bad)
popa
xchg
mov
(bad)
leave
xchg
jp
add
push
(bad)
popa
xchg
mov
(bad)
leave
xchg
repnz
xchg
xor
leave
xchg
xor
loop
xor
aas
xor
loop
xor
loope
(bad)
(bad)
loope
jmp
addr16
int
scas
xor
push
scas
dec
jge
scas
inc
jge
push
cmp
scas
dec
jge
scas
inc
jge
xor
cmp
xchg
cmps
add
dec
jge
scas
xchg
jle
xor
stc
call
out
int
cmp
stos
imul
add
adc
mov
outs
int
cmp
std
mov
scas
xor
push
scas
dec
jge
jnp
jge
in
and
mov
inc
leave
in
sub
out
(bad)
(bad)
lahf
xor
ja
ja
inc
adc
icebp
pop
lods
dec
mov
or
fldcw
add
dec
jge
scas
dec
jle
sar
into
adc
ja
and
fnstcw
scas
dec
jge
scas
dec
jge
ss
imul
dec
in
scas
dec
jge
scas
dec
jge
push
cli
jge
int
cmps
cdq
xor
loope
scas
dec
jge
scas
dec
jge
push
cli
jge
int
(bad)
mov
scas
dec
jge
scas
dec
jge
push
add
sbb
scas
dec
jge
scas
dec
jge
(bad)
or
dec
int
or
idiv
adc
stc
mov
lods
dec
sbb
or
add
sbb
scas
dec
jge
ss
mov
jmp
in
scas
dec
jge
scas
dec
jge
jno
jns
retf
daa
add
stc
add
inc
jge
data16
jns
jmp
addr16
int
scas
xor
push
scas
dec
jge
scas
dec
jge
scas
cdq
jge
lods
dec
int
scas
dec
jge
scas
inc
jge
data16
pop
and
mov
xchg
(bad)
(bad)
loope
(bad)
fidiv
test
jmp
in
scas
dec
jge
scas
and
jne
dec
fs
dec
or
dec
jge
scas
xchg
push
stc
push
xchg
xor
loope
adc
cli
ret
adc
leave
xchg
clc
loopne
mov
ficomp
dec
push
dec
mov
or
sahf
mov
ror
sahf
jb
shl
or
adc
leave
sub
dec
repz
or
daa
icebp
mov
fwait
loope
daa
and
adc
inc
jmp
inc
jp
mov
fdiv
mov
fdiv
mov
fdiv
mov
(bad)
xlat
(bad)
push
push
aam
jne
fild
mov
sti
add
mov
jmp
adc
inc
jmp
(bad)
jmp
daa
fsubr
adc
inc
jmp
ss
jnp
ss
mov
test
mov
push
jmp
inc
jp
fld
pop
(bad)
jecxz
and
xchg
fmul
(bad)
ins
add
sbb
jae
mov
shr
adc
shr
xor
outs
dec
aaa
xor
movs
xchg
mov
inc
out
jne
mov
add
mov
fcomp
rol
sub
and
mov
mov
mov
fnstsw
(bad)
sti
(bad)
mov
xchg
imul
inc
or
mov
sahf
shl
mov
ins
sbb
adc
(bad)
sub
mov
cs
out
(bad)
retf
jbe
in
(bad)
xchg
or
mov
inc
pop
popf
shl
mov
cmp
jae
outs
or
push
aam
add
mov
dec
sbb
add
fisub
inc
mov
jg
call
(bad)
sahf
xchg
icebp
jmp
mov
rcr
xor
mov
fcom
imul
push
(bad)
sub
jmp
ja
xchg
stc
mov
mov
xlat
jne
xchg
popa
shl
and
das
add
pop
pushf
mov
outs
add
mov
fs
pop
jmp
xchg
inc
iret
iret
mov
in
into
xchg
and
mov
nop
jae
and
push
mov
xchg
jae
cs
adc
pop
loope
push
jecxz
and
xchg
jge
cs
push
(bad)
jg
dec
mov
jae
mov
xchg
fwait
xchg
ins
sbb
(bad)
in
imul
and
mov
movs
in
jae
mov
loope
test
ffreep
and
ja
ror
fs
jnp
dec
sbb
jge
mov
inc
ins
sub
int
repz
lods
mov
pop
pop
cdq
or
mov
adc
jne
mov
pushf
ins
loope
jne
mov
fwait
push
fmul
sub
jbe
arpl
aad
jb
mov
xchg
jl
mov
(bad)
int
xchg
jl
test
cdq
xchg
in
adc
mov
dec
mov
fwait
into
mov
xchg
je
test
adc
sbb
addr16
or
imul
sub
pop
mov
ret
xor
(bad)
test
leave
add
lds
or
and
jge
and
hlt
test
xchg
xchg
mov
mov
lods
cdq
jae
mov
mov
in
loope
fcom
and
loope
mov
rol
sbb
jl
shl
je
cdq
retf
int
retf
test
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
into
mov
out
loop
jecxz
and
xchg
ja
out
and
and
or
mov
xchg
std
push
pop
sub
mov
xchg
jae
cs
jae
cs
je
mov
adc
mov
xchg
into
mov
mov
sub
push
cs
jg
(bad)
cmps
jecxz
mov
jae
and
push
pop
sub
jbe
stos
std
retf
pop
sub
jbe
xchg
jae
cs
jo
cs
ja
mov
out
and
jo
retf
loope
cwde
mov
xchg
mov
cmp
mov
out
in
or
into
sub
push
cs
jge
out
or
into
mov
test
sub
push
pop
sub
push
sub
jae
cs
jae
cs
jl
dec
out
aam
xchg
jnp
sub
into
adc
add
add
jecxz
and
push
scas
lock
sahf
add
jecxz
es
jae
cs
jp
cs
push
sahf
or
es
jae
cs
fist
sbb
in
add
into
and
push
out
sbb
in
repnz
iret
mov
adc
mov
xchg
jae
cs
push
pop
sub
(bad)
std
or
into
xchg
bound
mov
icebp
add
and
push
cs
mov
call
jae
cs
jne
mov
hlt
cli
mov
or
cmps
and
rcr
adc
xor
mov
cmps
ja
cwde
or
rol
xchg
jae
sub
push
mov
cdq
lock
cmp
xchg
and
push
cs
push
pop
sub
push
int3
and
mov
sbb
leave
inc
mov
jae
sub
pop
sub
push
sahf
pop
div
mov
nop
jae
and
push
cs
scas
sub
sahf
inc
cmps
ja
cwde
or
shl
xchg
jae
sub
push
cs
dec
push
push
sub
push
sub
jae
cs
jae
cs
jno
push
icebp
add
and
push
mov
xchg
jle
fisub
fiadd
ret
and
xchg
jae
sub
push
cs
jnp
sub
repz
jecxz
and
push
fidivr
fcom
or
outs
sbb
cld
retf
popa
push
popf
lock
in
adc
or
mov
jns
mov
shl
retf
in
retf
and
mov
and
xor
mov
jae
xor
shl
adc
and
sbb
dec
shl
adc
in
sub
adc
in
sub
push
mov
in
scas
sbb
push
aaa
mov
xchg
jae
cs
jge
push
cdq
cld
xor
lock
sahf
or
jecxz
sub
push
cs
jg
out
or
adc
mov
xchg
jae
cs
jo
ds
push
add
jecxz
and
push
out
sbb
in
repnz
iret
mov
xor
mov
xchg
ja
jle
nop
(bad)
es
push
loope
cmps
ja
popf
or
shl
mov
jae
sub
push
scas
in
push
sahf
or
es
adc
mov
adc
neg
sbb
mov
int
retf
adc
add
into
rcl
in
out
retf
and
enter
xor
lock
xor
add
into
and
add
cli
adc
neg
sbb
mov
iret
iret
mov
mov
mov
cdq
out
fs
or
into
fwait
retf
out
cdq
out
fs
or
pop
fwait
stos
sbb
mov
or
ds
jmp
dec
cmps
xchg
dec
mov
mov
sub
push
cs
ja
mov
fist
or
es
jae
and
push
(bad)
daa
add
nop
jae
and
push
scas
sub
push
sbb
dec
mov
pavgw
sub
xchg
jp
cs
push
sahf
or
es
jae
cs
fist
push
jecxz
mov
jae
and
push
psraw
nop
retf
push
push
jecxz
mov
jae
and
push
cs
dec
push
cs
xchg
jmp
dec
cmps
xchg
dec
mov
mov
sub
push
cs
jg
mov
out
mov
or
and
push
out
or
push
push
mov
sub
push
cs
std
push
pavgw
and
push
cs
ja
out
add
dec
add
jae
sub
push
mov
xchg
jnp
cs
and
xchg
jae
cs
jae
cs
jo
fimul
push
mov
(bad)
loope
mov
fucomip
(bad)
mov
pavgw
daa
xchg
jae
sub
push
add
xchg
mov
shl
push
mov
xchg
ja
outs
and
push
mov
in
aaa
mov
ror
xchg
ret
adc
xchg
adc
scas
leave
mov
call
aam
xchg
jae
sub
push
(bad)
in
push
mov
xchg
jae
cs
jae
cs
fist
push
jecxz
mov
jae
and
push
push
loope
xor
es
or
jae
cs
jo
cs
dec
push
cs
xchg
jmp
dec
cmps
xchg
dec
mov
mov
sub
push
dec
cmps
xlat
push
mov
rcl
out
(bad)
not
or
out
(bad)
xchg
xchg
sub
xor
pmaxsw
mov
pushf
ret
jmp
movs
push
jno
xor
cmp
jbe
xchg
js
cs
xor
div
and
push
cs
mov
loope
xchg
jae
sub
xchg
jp
scas
in
push
dec
div
push
popf
xor
sub
out
xchg
xchg
jno
cs
push
jle
out
pop
mov
xchg
jae
cs
jae
cs
jno
push
mov
jae
sub
or
push
(bad)
mov
sub
push
out
mov
out
in
or
into
sub
push
cs
jno
mov
nop
jae
and
push
mov
loopne
mov
dec
outs
mov
loope
pushf
mov
mov
lock
iret
and
out
xchg
sub
rcl
cdq
out
fs
or
cmps
popf
retf
out
cdq
out
fs
not
xchg
call
fs
or
outs
popf
jmp
dec
cmps
or
push
adc
xchg
jae
sub
push
scas
in
push
mov
xor
xor
out
push
mov
xchg
jno
cs
push
pxor
or
into
and
push
push
jno
xor
cmp
imul
jae
cs
jl
cs
mov
int
cmps
xchg
retf
jae
and
push
cs
cld
push
mov
shl
mov
or
les
push
push
aaa
mov
xchg
jl
cs
outs
push
sahf
or
retf
jae
and
push
pop
adc
push
sbb
mov
int
repnz
dec
add
jecxz
sub
jl
cs
jmp
push
push
(bad)
mov
xchg
retf
jae
and
push
dec
adc
push
sbb
mov
int
repnz
dec
add
jecxz
sub
jae
cs
je
mov
or
leave
(bad)
mov
sub
push
cs
js
scas
int3
jecxz
push
adc
push
sbb
scas
int
or
mov
adc
mov
xchg
jae
cs
jl
cs
in
push
mov
cmps
mov
mov
jae
and
push
scas
in
push
mov
je
mov
pop
loopne
mov
cmp
ss
jp
cs
push
sahf
or
es
jg
mov
mov
fbstp
xchg
jae
cs
mov
sbb
in
repnz
iret
mov
adc
mov
xchg
jae
cs
je
sahf
mov
jecxz
mov
jae
and
push
cs
das
push
mov
xchg
jae
cs
jae
cs
jl
push
jns
mov
mov
in
push
test
push
mov
nop
jae
and
push
sahf
pop
cmc
mov
and
(bad)
fs
cmps
xlat
retf
mov
jae
and
push
ficom
in
jle
or
lds
cdq
cld
xor
lock
sahf
or
jecxz
sub
push
mov
into
add
jecxz
sub
push
cs
jo
ds
push
add
jecxz
and
push
cs
fs
cmps
mov
mov
jae
and
push
mov
jecxz
adc
aaa
mov
xchg
jae
cs
jg
jle
inc
aad
in
cmp
pop
in
mov
sahf
dec
cmps
mov
mov
jae
and
push
mov
lock
sahf
add
jecxz
cs
jnp
cs
push
push
sbb
retf
in
mov
pop
in
xor
shl
jae
sub
push
inc
in
push
mov
ja
nop
or
leave
(bad)
mov
sub
push
cs
hlt
push
mov
shl
mov
and
adc
push
aaa
mov
xchg
jae
cs
jl
into
pop
out
dec
cmps
xlat
dec
mov
jae
and
push
mov
in
ss
loope
adc
push
aaa
mov
xchg
jae
cs
jnp
cs
push
push
(bad)
retf
in
stos
mov
push
cdq
mov
jae
sub
push
out
(bad)
push
outs
xchg
and
mov
push
cdq
xor
jg
out
or
cmps
mov
loope
adc
push
aaa
mov
xchg
jae
cs
jg
jle
inc
aad
in
js
or
inc
and
cmps
xlat
dec
mov
jae
and
push
scas
in
sbb
pop
out
dec
cmps
xlat
dec
mov
jae
and
push
outs
xchg
and
jo
retf
loope
sbb
push
aaa
mov
xchg
jae
cs
jnp
cs
push
into
sub
retf
mov
(bad)
adc
es
jnp
sub
jmp
retf
out
inc
cmps
test
xchg
jae
cs
jae
cs
call
jo
or
dec
iret
popf
xchg
or
into
add
jecxz
sub
jnp
cs
push
into
sub
mov
fwait
in
retf
out
inc
cmps
test
xchg
js
scas
int3
out
sahf
mov
ror
not
mov
jl
cs
jmp
dec
or
mov
or
adc
push
aaa
mov
xchg
jae
cs
jg
jle
dec
aad
or
inc
mov
push
cdq
mov
xchg
jae
sub
or
dec
call
ss
into
add
jecxz
sub
jae
cs
jnp
cs
push
into
sub
int
mov
out
inc
cmps
test
xchg
jae
cs
js
scas
int3
jmp
inc
ror
not
mov
jae
cs
push
outs
neg
mov
or
pop
mov
or
dec
test
sub
jae
cs
jbe
cs
mov
mov
sbb
or
jmp
(bad)
pop
popa
inc
cmps
xlat
xor
xchg
jnp
cs
lods
push
mov
lock
sahf
add
jecxz
cs
jae
cs
jg
jle
dec
aad
or
les
push
push
aaa
mov
xchg
jle
sahf
jo
icebp
mov
nop
jae
and
push
out
add
xchg
jne
int3
(bad)
mov
xchg
jecxz
and
xchg
mov
in
int3
cwde
into
retf
jl
div
sub
jae
cs
ja
out
xchg
in
xchg
or
mov
adc
enter
out
retf
out
mov
xor
out
inc
sub
cmps
loopne
out
ds
cs
rcl
inc
mov
sub
out
jp
mov
dec
cld
out
xor
cmp
mov
jb
sbb
(bad)
mov
sub
jmp
mov
dec
(bad)
daa
push
sub
mov
jo
pop
ficom
xchg
fiadd
jle
mov
push
leave
mov
jbe
pop
(bad)
test
mov
push
dec
mov
fadd
pop
mov
add
push
les
jnp
mov
fld
dec
test
retf
jno
push
repz
aaa
shl
das
jmp
add
push
jnp
xchg
fistp
dec
pop
(bad)
enter
push
(bad)
jns
scas
fcom
les
push
cmc
fist
jno
mov
adc
(bad)
adc
jno
pusha
(bad)
xor
arpl
jl
jbe
mov
cs
push
and
cmp
je
test
fist
popa
rcr
sub
js
mov
mov
jns
hlt
fcmovnb
push
xchg
add
mov
arpl
mov
or
cmovnp
sar
mov
mov
and
aad
inc
neg
fwait
mov
pop
les
rcl
stos
fsub
fwait
ret
xor
mul
cmp
(bad)
retf
(bad)
jb
and
pop
push
inc
pushf
je
xchg
sub
scas
and
xor
mov
jb
mov
jnp
and
stc
dec
mov
out
push
test
mov
loope
push
mov
add
xchg
mov
movaps
jl
sub
mov
pop
retf
xor
retf
hlt
or
retf
cmp
ret
ret
xchg
aas
jmp
mov
adc
mov
shl
(bad)
sar
dec
cld
rcr
xor
lea
fsub
jmp
fwait
mov
loop
daa
fsubr
adc
jg
mov
push
bound
pop
push
mov
fistp
mov
jmp
fld
lods
rcr
jle
in
shl
out
sti
cmps
add
fstp
push
ins
loope
leave
mov
rcl
mov
mov
test
pop
dec
jo
xor
jbe
dec
mov
xchg
or
popa
sbb
xchg
call
jmp
lock
adc
jb
jl
xor
rol
out
jnp
jge
mov
fdiv
dec
sti
xchg
push
je
xor
mov
mov
jbe
data16
dec
jecxz
push
les
dec
sti
cmp
mov
mov
xchg
pusha
stc
inc
jns
mov
sub
fdivr
daa
push
pop
xchg
arpl
push
dec
inc
in
lods
clc
in
mov
test
mov
add
xchg
mov
and
xchg
jb
xchg
dec
gs
(bad)
mov
jnp
inc
sub
push
sbb
ror
push
cmp
dec
fisttp
dec
xor
scas
ret
xor
adc
inc
xchg
or
jp
adc
rcr
inc
xchg
xchg
sub
xchg
shr
push
cmc
aam
mov
pop
pushf
mov
cmps
adc
je
rol
cmp
mov
or
add
mov
or
out
cld
or
pop
and
sub
loopne
mov
jl
mov
jl
sub
in
fstcw
dec
or
cs
loop
daa
fs
iret
dec
loopne
mov
out
pop
loop
cmp
hlt
jno
popf
adc
cdq
mov
out
(bad)
(bad)
shl
inc
loopne
stos
and
cmp
inc
loopne
stos
jecxz
cdq
sahf
shl
cmp
(bad)
rcl
loopne
mov
shl
cmp
(bad)
shl
loopne
mov
inc
call
cmp
shl
aaa
pop
bound
(bad)
dec
loopne
mov
jl
sub
jl
sub
in
cmps
fstcw
fistp
fistp
jg
mov
inc
loop
daa
aam
cmps
sub
jl
sub
or
mov
loop
daa
fs
iret
dec
loopne
mov
out
pop
loop
cmp
cmc
jno
fst
sbb
(bad)
(bad)
shl
inc
loopne
stos
and
cmp
inc
loopne
stos
jecxz
cdq
sahf
shl
cmp
(bad)
rcl
loopne
mov
shl
cmp
(bad)
shl
loopne
mov
inc
call
cmp
shl
aaa
pop
bound
(bad)
dec
loopne
mov
jl
sub
jl
sub
addr16
jl
mov
fistp
jg
mov
inc
loop
daa
aam
cmps
sub
jl
sub
in
cs
aaa
ja
enter
loopne
mov
jno
pop
mov
loopne
cmps
addr16
mov
sar
jno
popf
arpl
sbb
mov
add
xor
xchg
inc
cwde
adc
dec
loop
and
xchg
inc
cwde
adc
dec
loop
and
xchg
inc
cwde
adc
dec
loop
and
xchg
inc
cwde
sbb
jb
out
mov
loopne
push
inc
loop
and
hlt
aaa
lahf
inc
js
mov
jl
sub
aam
sub
fidivr
fistp
das
rcr
out
fsub
aaa
ja
jl
mov
dec
loopne
mov
dec
clc
dec
mov
in
lahf
inc
or
mov
loop
and
cmp
inc
mov
daa
and
mov
mov
jno
sbb
dec
loopne
outs
or
jg
cmp
pop
loopne
aaa
bound
enter
sbb
dec
loopne
mov
pop
jno
sbb
dec
loopne
pop
imul
ds
inc
cmp
hlt
jno
mov
into
fwait
mov
loopne
cmps
sar
(bad)
pop
sub
fidivr
aas
rcr
out
fsub
aaa
ja
jl
xchg
fstp
dec
or
sub
enter
loopne
mov
in
xchg
pop
mov
add
fs
xchg
inc
cwde
adc
dec
loop
and
xchg
inc
cwde
adc
dec
loop
and
xchg
inc
cwde
adc
dec
loop
and
xchg
inc
cwde
adc
jle
cmp
dec
loopne
outs
or
jg
cmp
pop
loopne
aaa
bound
enter
sbb
dec
loopne
mov
pop
jno
sbb
dec
loopne
pop
imul
push
mov
dec
inc
aaa
dec
loop
cmp
pop
pop
sbb
fstp
jg
imul
loop
sub
out
ffreep
leave
adc
push
mov
popf
retf
leave
(bad)
cmps
pop
iret
loopne
jge
lods
push
outs
outs
mov
or
and
stos
cmp
pop
jbe
mov
fdiv
mov
jbe
in
fsub
fstp
lea
fidiv
mov
fbstp
mov
out
fbstp
adc
(bad)
mov
fistp
add
jbe
jnp
out
mov
fbstp
xor
jbe
jae
jle
mov
fbstp
mov
fistp
arpl
jle
mov
xchg
mov
dec
mov
fild
sbb
jbe
arpl
(bad)
mov
fstp
(bad)
or
dec
mov
fistp
mov
fist
repz
mov
fnsave
fbstp
mov
fistp
mov
fucomip
mov
fbstp
imul
mov
fistp
mov
frstor
sbb
jle
mov
xor
mov
and
mov
pushf
pop
outs
out
call
lahf
pop
(bad)
in
sbb
xchg
xchg
mov
int3
scas
cld
nop
in
fnstsw
sub
lahf
adc
daa
(bad)
enter
gs
(bad)
sbb
ins
fmul
xchg
cmp
sbb
jns
sbb
je
xchg
pop
mov
jecxz
jl
jmp
mov
adc
movs
ja
dec
ja
inc
hlt
mov
and
fs
mov
fsub
jmp
mov
loope
iret
fdivr
mov
daa
sub
adc
inc
mov
arpl
(bad)
daa
pusha
out
daa
inc
jmp
inc
mov
sub
adc
inc
jmp
inc
xor
pop
jmp
daa
inc
jmp
inc
call
fbld
dec
pop
pop
xor
fsubr
adc
inc
cmp
daa
cmp
adc
inc
jmp
inc
call
inc
jmp
inc
pop
(bad)
mov
jo
lea
mov
out
adc
daa
inc
jmp
(bad)
bound
push
jge
mov
je
cmc
pop
and
in
and
inc
mov
lea
inc
jmp
inc
mov
clc
call
adc
inc
cmp
daa
cmp
adc
inc
jmp
inc
call
inc
jmp
inc
mov
adc
fsubr
adc
inc
mov
inc
xchg
lahf
xor
cmp
jae
(bad)
dec
lods
pop
ds
mov
jg
rcr
jnp
inc
push
bound
jbe
test
mul
and
jp
sbb
cmps
mov
sti
retf
jo
mov
xor
data16
jle
mov
out
sub
jmp
fisub
mov
sti
retf
jo
mov
xor
xchg
jnp
jle
mov
out
daa
inc
jmp
inc
pop
mov
fcom
inc
mov
fcmovnbe
push
sub
cli
inc
fisubr
mov
sti
retf
jo
mov
mov
adc
stos
mov
sbb
test
(bad)
and
xchg
inc
cmps
xlat
fwait
sub
xor
xchg
jnp
fldcw
iret
mov
ret
fisttp
daa
pusha
out
daa
inc
jmp
fcom
push
(bad)
mov
jl
lea
iret
xchg
mov
fnsave
and
int3
fisttp
inc
and
jne
ja
and
fwait
dec
(bad)
daa
pusha
out
das
inc
jmp
push
cld
(bad)
out
adc
daa
inc
jmp
hlt
mov
daa
sub
adc
inc
jmp
inc
push
(bad)
fwait
mov
mov
fdiv
mov
aaa
mov
fdiv
daa
fsub
adc
inc
jmp
pushf
jmp
adc
push
mov
pop
and
jbe
daa
push
loop
and
popa
sbb
(bad)
arpl
ror
cld
sub
popa
leave
shl
fstp
push
jae
mov
sti
retf
jbe
mov
pop
jae
xchg
or
loope
lea
in
bnd
xchg
bound
in
sub
cmp
and
xchg
jg
push
movs
ret
sar
loope
xchg
push
shl
xor
aam
in
mov
dec
fild
sub
add
repnz
adc
mov
add
retf
jns
jae
jbe
pusha
mov
xor
mov
retf
xchg
popa
mov
and
sub
imul
scas
dec
jae
loopne
or
mov
dec
arpl
popa
sub
mov
dec
(bad)
jecxz
jno
jnp
jbe
mov
gs
repnz
jne
xchg
(bad)
loope
dec
(bad)
loop
movs
test
mov
test
mov
movntps
add
mov
fs
rol
cmp
inc
mov
or
and
xchg
imul
test
ret
mov
and
jbe
xchg
xor
xchg
leave
cmc
adc
jae
sub
mov
arpl
loop
movs
(bad)
jp
add
movs
push
imul
retf
movs
sbb
push
xchg
sub
aas
sbb
out
mov
xchg
mov
sub
out
pop
cmp
mov
cdq
cs
stc
add
aaa
repz
xchg
xchg
mov
mov
mov
pop
xlat
mov
out
test
leave
aam
sub
push
fisttp
sbb
(bad)
xlat
mov
mov
test
dec
lock
aaa
add
mov
adc
cld
xor
xor
out
(bad)
pop
mov
aam
leave
or
fbld
mov
jle
and
outs
cmps
cmp
fisub
cdq
leave
fiadd
mov
xchg
retf
xchg
test
sub
mov
dec
cwde
push
aaa
add
mov
stc
mov
xchg
mov
cmps
xchg
icebp
mov
mov
out
test
mov
pop
ss
leave
cld
lahf
cmp
lods
or
push
xlat
mov
out
pop
mov
idiv
and
outs
cmps
cmp
fisub
cdq
leave
fiadd
stc
retf
mov
sbb
fbstp
sbb
xor
(bad)
sbb
cdq
fxch
out
sti
xchg
mul
icebp
xchg
test
sub
mov
leave
and
lods
or
push
xlat
inc
enter
shl
xchg
mov
lods
sbb
xchg
mov
iretw
mov
mov
fimul
mov
data16
adc
mov
icebp
sbb
icebp
mov
mul
icebp
xchg
(bad)
in
adc
outs
pop
mov
xchg
mov
dec
fild
add
mov
not
sub
mov
mov
xchg
or
dec
scas
sbb
xchg
scas
sub
out
jmp
cmps
xchg
fld
xlat
adc
mov
xchg
and
aaa
mov
mov
cld
test
sbb
xlat
sub
xchg
or
out
(bad)
mov
mul
mov
cdq
pop
pop
or
cmps
retf
leave
outs
cmps
cdq
mov
xlat
adc
cmps
retf
test
into
leave
mov
xchg
and
mov
dec
sub
pop
rcl
aas
stc
ret
mov
adc
(bad)
mov
imul
adc
mov
xor
lods
(bad)
ds
outs
pop
loope
mov
test
mov
(bad)
ins
stc
sub
lods
adc
(bad)
xor
sbb
(bad)
cmps
xchg
xchg
inc
xor
scas
dec
mov
test
leave
shr
mov
out
xor
pop
(bad)
repz
outs
cmps
cmp
xchg
(bad)
mov
fisub
mov
cmps
sbb
xchg
fistp
xchg
(bad)
cmps
mov
sub
(bad)
mov
imul
mov
pop
out
mov
cld
in
sbb
jl
sar
ja
sbb
aaa
mov
mov
xchg
test
retf
mov
fld
(bad)
out
jecxz
ins
cmps
stc
xchg
test
icebp
xchg
daa
sub
(bad)
aaa
sbb
out
test
leave
outs
outs
or
mov
sbb
dec
(bad)
xlat
and
dec
out
loope
hlt
mov
fnstcw
(bad)
sbb
test
sbb
xlat
test
mov
imul
sbb
add
jmp
ret
mov
(bad)
adc
inc
out
loope
hlt
xor
sub
mov
cmp
out
mov
mov
xchg
add
xchg
movs
shl
xchg
mov
(bad)
xchg
add
mov
xchg
and
sahf
(bad)
mov
test
nop
(bad)
in
test
(bad)
sbb
and
and
xor
aad
push
xchg
sub
xchg
retf
rcr
and
data16
stc
mov
mov
xor
mov
add
cmps
mov
imul
loope
out
test
mov
(bad)
(bad)
icebp
repz
out
cdq
mov
inc
xchg
test
pop
fisttp
mov
mov
mov
inc
(bad)
stc
mov
fisub
mov
jle
and
outs
cmps
cmp
fisub
cdq
leave
fiadd
mov
sub
int
adc
cmps
dec
loope
aaa
add
xchg
repz
mov
icebp
sub
mov
enter
cmp
cmps
xchg
rol
add
cmps
dec
sbb
add
idiv
rcl
aas
test
mov
pop
out
mov
cld
lods
and
int3
mov
stos
and
mov
mov
mov
rcl
ret
xchg
or
dec
out
loope
hlt
mov
fstp
loope
in
mov
cdq
mov
int
mov
mov
mov
(bad)
scas
dec
mov
mov
out
icebp
mov
sahf
(bad)
repz
cmps
mov
(bad)
daa
adc
out
sbb
(bad)
xchg
test
scas
jmp
mov
out
scas
stc
mov
jle
icebp
mov
(bad)
cmps
cwde
xchg
(bad)
mov
xor
mov
add
ret
xchg
fisub
icebp
and
and
xor
pop
out
icebp
inc
sub
imul
sbb
xchg
mov
out
cmp
outs
cmps
dec
rcr
ret
data16
stos
mov
mov
stc
sahf
cmps
xchg
fsin
xchg
stc
xchg
dec
scas
sbb
(bad)
xchg
sbb
add
imul
adc
pop
out
mov
and
cmp
xchg
mov
stc
(bad)
mov
cdq
mov
leave
rcr
mov
pop
daa
cmp
(bad)
mov
not
sbb
(bad)
aaa
or
psubb
es
sbb
dec
mov
mov
jmp
mov
lahf
leave
sub
in
stc
sbb
icebp
mov
iret
mov
leave
(bad)
lods
and
test
sub
jmp
xchg
pop
cmps
xchg
mov
aaa
retf
mov
cmps
or
mov
xchg
mov
(bad)
xchg
ret
rcr
inc
or
aaa
sbb
aam
test
sub
sbb
mov
mov
inc
or
jl
mov
repz
fistp
mov
data16
xchg
sub
sub
mov
mov
jbe
mov
test
sti
mov
jl
mov
(bad)
cmp
dec
sub
movs
mov
pushf
(bad)
sbb
mov
mov
xchg
mov
icebp
xchg
div
retf
sub
cmps
xchg
fld
cmps
icebp
xchg
(bad)
ins
repz
outs
cmps
xchg
adc
aaa
stc
sbb
aaa
mov
mov
xchg
test
retf
mov
fld
(bad)
out
jmp
ins
cmps
leave
xchg
inc
(bad)
(bad)
icebp
test
xor
and
(bad)
cmps
mov
outs
scas
cdq
icebp
(bad)
xchg
fild
test
add
or
mov
mov
and
faddp
sbb
adc
adc
mov
fild
shl
xlat
mov
mov
xor
ss
stos
mov
pop
and
(bad)
xor
icebp
xor
aas
mov
scas
stc
sbb
(bad)
sbb
out
out
sub
test
loope
mov
ret
fld
cmps
or
outs
cmps
shl
out
xchg
mov
out
fisttp
mov
mul
mov
std
movs
mov
std
movs
mov
std
movs
mov
std
movs
mov
std
movs
mov
std
movs
mov
std
movs
cmp
(bad)
and
icebp
jno
in
sbb
into
out
stc
mov
fisub
adc
pop
cmp
out
(bad)
jmp
dec
xlat
nop
rcl
icebp
mov
adc
inc
enter
cdq
rcr
ret
mov
cdq
test
xlat
nop
rcl
icebp
mov
mov
mov
mov
rcr
cmps
stc
xchg
sahf
out
icebp
leave
(bad)
and
icebp
jno
cmp
jmp
leave
xlat
mov
sbb
(bad)
sbb
scas
xor
mov
(bad)
icebp
stos
out
(bad)
retf
mov
push
pop
repz
scas
cmps
xchg
sub
out
repz
(bad)
cmps
xchg
leave
mov
stos
rcr
mov
(bad)
in
stc
xchg
fidiv
lock
repz
outs
cmps
cdq
adc
(bad)
aas
mov
(bad)
(bad)
icebp
test
mov
movs
mov
xchg
ror
mov
lock
and
repz
cmps
mov
(bad)
cmps
add
xchg
test
mov
xchg
sub
and
mov
pushf
into
or
jl
or
xchg
mov
std
movs
mov
std
movs
mov
std
movs
mov
mul
mov
std
movs
mov
std
movs
cmp
movs
mov
std
movs
mov
std
movs
mov
std
movs
mov
mul
mov
std
movs
mov
std
movs
cmp
movs
mov
std
movs
mov
std
movs
mov
std
movs
mov
lea
mov
lock
xchg
mov
std
movs
mov
std
movs
sbb
std
movs
mov
std
movs
mov
std
movs
cmp
aaa
retf
cmps
mov
std
movs
mov
std
movs
mov
std
movs
sbb
std
movs
mov
std
movs
mov
std
movs
mov
popf
(bad)
sbb
mul
mov
std
movs
mov
std
movs
mov
std
movs
mov
std
movs
mov
std
movs
mov
std
movs
and
mul
mov
std
movs
mov
std
movs
cmp
movs
mov
std
movs
mov
std
movs
mov
std
movs
and
mul
mov
std
movs
mov
std
movs
cmp
movs
mov
std
movs
mov
std
movs
mov
std
movs
and
mul
mov
std
movs
mov
std
movs
cmp
movs
mov
std
movs
mov
std
movs
mov
std
movs
mov
out
jmp
movs
mov
std
movs
mov
std
movs
cli
mov
std
movs
mov
std
movs
mov
std
movs
mov
mov
movs
mov
std
movs
mov
std
movs
mov
std
movs
cli
mov
std
movs
mov
std
movs
mov
std
movs
mov
mov
movs
mov
std
movs
mov
std
movs
mov
std
movs
cmp
std
movs
mov
std
movs
mov
std
movs
cmp
scas
jmp
mov
(bad)
movs
mov
std
movs
mov
std
movs
cli
mov
std
movs
mov
std
movs
mov
std
movs
xor
scas
jmp
mov
(bad)
movs
mov
std
movs
mov
std
movs
sub
std
movs
mov
std
movs
mov
std
movs
cmp
scas
jmp
mov
(bad)
movs
mov
std
movs
mov
std
movs
mov
int
rcl
enter
dec
leave
mov
aas
nop
adc
icebp
mov
stc
sbb
aaa
sti
sbb
xchg
nop
mov
adc
data16
icebp
xchg
fisub
mov
xchg
fld
out
stc
mov
xchg
adc
xchg
xor
xchg
and
out
(bad)
retf
mov
xchg
(bad)
scas
cmp
add
ret
xchg
fisub
xor
cmps
sbb
(bad)
aas
mov
not
and
test
sbb
aaa
lock
sbb
ins
neg
rol
jmp
rcr
mov
nop
(bad)
mov
jno
fild
(bad)
and
cmp
sahf
xlat
mov
test
adc
out
test
and
xchg
mov
mov
sub
scas
hlt
fwait
rcr
xchg
lock
cmps
jmp
outs
or
stc
sbb
cmps
sbb
out
leave
mov
dec
mov
mov
rep
xchg
or
out
sub
in
fnstsw
retf
ret
jmp
dec
sbb
cmps
cmp
outs
pop
mov
icebp
xchg
movs
and
mov
mov
xchg
outs
outs
test
retf
div
jmp
mov
mov
sbb
jle
sub
sahf
scas
jmp
out
jmp
stos
addr16
adc
div
enter
sub
dec
mov
jg
mov
mov
and
(bad)
pop
mov
fiadd
cdq
pop
out
adc
adc
(bad)
ja
mov
xchg
cli
mov
out
sub
cmps
sbb
idiv
sub
aaa
cmps
mov
mov
pop
int
jnp
movs
mov
adc
cmps
or
test
xchg
mov
mov
test
lods
hlt
xchg
sar
fcomip
mov
mov
sub
lods
and
sahf
movs
sbb
dec
xor
jecxz
xchg
stos
sbb
mov
icebp
xchg
hlt
fcmovne
inc
cmp
adc
xchg
movs
loope
sahf
mov
xchg
outs
xlat
test
mov
test
mov
jge
sbb
pop
(bad)
(bad)
loope
xchg
mov
(bad)
mov
mov
xchg
adc
(bad)
mov
jno
xchg
leave
and
(bad)
sbb
cld
cmp
jmp
fsin
int
cdq
scas
(bad)
push
call
mov
jge
sbb
pop
pop
shl
lds
or
fistp
rcr
mov
(bad)
(bad)
cdq
rcl
repz
fldcw
pushf
cmps
adc
cld
mov
jmp
mov
test
sbb
scas
stc
mov
idiv
mov
sar
cmps
sub
xchg
fistp
jno
lds
jno
movs
sub
pop
aaa
stos
and
aas
jmp
mov
(bad)
sub
mov
fs
mov
and
sbb
xlat
stos
jno
movs
cli
jo
into
shl
test
add
inc
adc
(bad)
sbb
lods
sub
dec
mov
outs
xor
sbb
fucomip
sub
into
out
repz
aaa
stos
and
fst
jmp
test
mov
mov
lock
mov
cmp
xchg
adc
mov
mov
cdq
mul
ret
stc
mov
(bad)
int
sbb
pop
sbb
fimul
adc
mov
mov
cdq
mul
ret
stc
mov
(bad)
mov
sbb
(bad)
leave
fisubr
cmp
pop
xor
in
ror
aaa
mov
fidiv
icebp
fwait
(bad)
pop
stc
retf
xchg
stc
mov
outs
xlat
cli
xchg
pop
iret
fcom
in
scas
jmp
mov
test
mov
hlt
mov
adc
and
cmp
sub
mov
jmp
test
(bad)
stc
leave
scas
in
sar
icebp
sbb
(bad)
stc
shl
xchg
test
mov
repnz
out
jmp
fs
mov
out
mov
push
scas
sub
(bad)
xlat
mov
xchg
stos
fld
mov
xor
cmps
jecxz
ja
shr
test
test
mov
mov
mov
inc
mov
fbld
mov
rcl
push
sub
push
loope
pushf
ficomp
mov
mov
rol
mov
add
scas
inc
sub
fdivp
mov
(bad)
in
fucomi
adc
icebp
in
sub
(bad)
aaa
or
in
xchg
cli
push
pop
mov
jmp
add
aam
mov
mov
fs
sti
xchg
fisub
xor
out
sbb
lahf
(bad)
adc
mov
out
icebp
mov
mul
sub
aam
and
out
cmp
icebp
movs
scas
sub
xchg
add
in
xchg
cli
mov
cdq
rol
in
cdq
cli
test
and
div
add
add
icebp
test
sub
mul
adc
out
adc
icebp
push
fistp
mov
mov
leave
xor
retf
mov
lock
fs
mov
mov
xlat
add
div
icebp
fwait
xchg
jmp
jmp
test
sub
push
iret
icebp
mov
iret
loope
out
shr
mov
leave
(bad)
mov
mov
and
mov
xor
iret
jecxz
jbe
jmp
jmp
test
or
mov
icebp
mov
jle
call
mov
sub
fistp
shr
loope
ins
aas
sub
mov
lock
mov
mov
(bad)
mov
jmp
rol
daa
sub
jbe
mov
je
mov
push
xlat
mov
dec
into
fxch
inc
pop
icebp
add
sbb
mov
adc
out
jmp
jmp
outs
(bad)
mov
outs
xlat
xchg
leave
mov
loop
xchg
hlt
cmp
gs
adc
sahf
scas
loopne
hlt
mov
fldz
(bad)
sbb
lods
sub
sahf
movs
adc
out
fist
ret
inc
jmp
sub
sub
mov
loope
fadd
repz
cdq
test
scas
mov
mov
xlat
xchg
add
mov
mov
xlat
call
xchg
stc
icebp
out
out
and
xchg
jmp
movs
sub
ror
mov
hlt
aas
add
cmps
mov
xchg
(bad)
mov
jno
(bad)
mov
mov
mov
sub
xchg
repz
mov
rcr
ja
xor
cld
cmc
mov
(bad)
adc
(bad)
push
test
retf
(bad)
iret
stc
xchg
pop
(bad)
leave
inc
xchg
mov
scas
in
sar
icebp
sbb
(bad)
mov
mov
cdq
test
xchg
or
jle
lock
sahf
(bad)
mov
mov
and
fs
mov
sahf
movs
nop
jo
mov
mov
sahf
into
rcr
xlat
pop
mov
sub
cmps
jmp
mov
sub
sbb
push
aaa
stos
and
mov
ret
out
iret
and
scas
dec
sub
lods
cdq
fsubr
scas
stc
mov
ds
sbb
(bad)
adc
cmc
mov
xchg
lock
mov
xor
cmps
jmp
mov
(bad)
in
fdivr
mov
sar
aaa
mov
lock
and
fidivr
mov
ja
loope
pop
scas
shl
add
mov
push
(bad)
cmps
cmp
lds
and
btc
mov
cmp
mov
loopne
test
leave
ins
fisttp
sbb
xlat
mov
imul
lock
scas
adc
sahf
movs
add
jmp
add
cmps
in
sar
icebp
sbb
mov
and
mov
loope
mov
adc
cmc
mov
xchg
lock
mov
xor
cmps
loope
inc
mov
neg
mov
sbb
mov
mov
jmp
xchg
inc
leave
mov
push
pop
mov
mov
mov
sbb
inc
call
mov
xchg
xor
(bad)
in
icebp
add
xchg
and
xlat
call
xchg
icebp
icebp
mov
mov
and
mov
loope
mov
adc
cmc
mov
loope
out
out
mov
out
stos
leave
xchg
movs
fwait
mov
push
mov
loope
out
out
mov
out
mov
sar
int
adc
cmps
stos
xchg
cmps
or
(bad)
aaa
sbb
push
mov
mov
xchg
mov
outs
mov
movs
in
sar
icebp
sbb
mov
and
mov
rcl
cmps
lods
and
lea
mov
(bad)
mov
xchg
out
(bad)
sbb
lods
sub
dec
mov
pop
outs
sub
xchg
sub
xlat
scas
jmp
cmps
or
shr
xchg
sub
iret
sar
test
mov
xlat
(bad)
adc
mov
jmp
mov
sahf
movs
add
fidiv
sbb
cmps
sbb
ror
mov
mov
mov
jmp
jmp
(bad)
into
xchg
mov
test
fstp
leave
sahf
cmps
xchg
mov
mov
xor
cmps
jmp
mov
(bad)
sub
fwait
xchg
scas
cmp
rcr
xchg
jns
(bad)
test
or
icebp
mov
(bad)
sub
xchg
hlt
leave
mov
mov
leave
sbb
iret
xchg
leave
data16
inc
mov
scas
jmp
jmp
out
(bad)
sbb
iret
xchg
leave
data16
inc
mov
scas
jmp
add
fldenv
xlat
scas
loope
inc
and
pop
mov
stc
into
out
mov
and
sbb
call
leave
pushf
scas
sub
(bad)
sub
cmps
cmp
rcr
xchg
js
(bad)
test
or
retf
mov
pop
aaa
stos
mov
(bad)
mov
mov
sub
xlat
scas
loopne
imul
dec
mov
lods
cmp
rcr
scas
dec
leave
(bad)
mov
stos
shl
loope
xlat
(bad)
jmp
jmp
dec
pop
stc
add
(bad)
jmp
sbb
pop
repz
cmps
xor
sar
loopne
cld
xor
mov
pop
nop
pop
sbb
inc
call
mov
aam
jmp
jmp
(bad)
xchg
mov
xchg
jbe
mov
cld
ins
add
cld
in
cmp
cmps
sbb
xchg
sbb
push
pop
stos
rcl
jmp
je
ret
jmp
sbb
sub
xchg
hlt
leave
cmp
sbb
mov
add
ffreep
sbb
mov
rcl
cmps
sub
rcr
aaa
ret
mov
cmps
nop
xor
cmp
aaa
or
mov
add
into
loope
jg
sti
jmp
xchg
adc
sub
xchg
ins
cmp
je
fisttp
ins
xor
test
sub
(bad)
and
not
sub
(bad)
aaa
loope
out
jmp
jmp
dec
pop
stc
add
mov
sub
xlat
call
xlat
sub
push
scas
mov
sub
xlat
call
add
sar
pop
icebp
icebp
xchg
(bad)
adc
outs
out
sti
icebp
test
xchg
mov
xlat
add
into
jmp
aas
gs
inc
mov
mov
inc
xor
div
sub
jge
adc
(bad)
ds
sbb
test
leave
lods
mov
sub
inc
(bad)
adc
out
mov
add
int
stos
mov
xlat
add
into
loope
outs
mov
jmp
pop
cmps
sbb
sahf
hlt
leave
xor
sbb
xor
jmp
xchg
mov
dec
shl
mov
repz
cmps
sbb
(bad)
pop
mov
neg
sti
fsubr
(bad)
mov
aaa
nop
test
(bad)
xchg
sub
jbe
adc
xlat
(bad)
xor
sub
xchg
mov
dec
push
loope
ins
mov
jmp
pop
cmps
sbb
sahf
hlt
leave
xor
sbb
xor
jmp
xchg
mov
rcl
pop
mov
xchg
stc
mov
mov
lock
xchg
movs
jmp
sar
adc
mov
adc
scas
sbb
mov
mov
push
mov
test
sbb
xlat
xor
cmps
out
icebp
stc
je
mov
mov
pop
out
lock
into
(bad)
retf
adc
and
pushf
xlat
mov
fiadd
sbb
ja
loope
pop
scas
shl
lea
leave
(bad)
cmp
jmp
fldenv
call
mov
aaa
push
xor
test
add
mov
shr
mov
xchg
stc
mov
mov
loop
xchg
hlt
shr
pop
mov
xchg
icebp
mov
(bad)
cmp
cmps
loope
out
dec
mov
mov
icebp
mov
(bad)
mov
(bad)
iret
fcomi
push
or
mov
mov
mov
stos
leave
outs
cmps
and
data16
test
test
(bad)
cmc
xor
lahf
hlt
leave
sub
sbb
scas
xchg
and
xlat
xchg
sbb
hlt
add
aad
mov
mov
xchg
xor
into
jmp
jg
sbb
cmc
mov
stc
xchg
(bad)
pop
fadd
(bad)
adc
fidiv
add
push
sub
mov
lock
fs
mov
mul
mov
imul
loope
out
mov
mov
je
mov
mov
sbb
(bad)
fisub
mov
mov
sbb
(bad)
fisubr
mov
lahf
hlt
leave
test
mov
loope
push
out
repz
xchg
leave
xchg
hlt
leave
mov
fild
test
mov
adc
out
loope
inc
mov
jmp
outs
pop
xor
out
(bad)
sbb
lods
and
sahf
hlt
xor
push
add
and
fsubr
mov
(bad)
and
loope
inc
out
mov
(bad)
mov
sub
scas
or
mov
shl
movs
adc
lea
mov
push
mov
mov
pop
and
sahf
hlt
shr
daa
adc
mov
cmp
xlat
xchg
add
test
fldz
scas
jmp
fs
xor
pop
sub
loopne
in
sbb
std
cmp
mov
addr16
rcl
push
ds
mov
cli
sbb
int
cmp
and
and
mov
mov
addr16
lock
into
fmul
aaa
(bad)
mov
xlat
into
fsubr
(bad)
fsubp
mov
movs
jmp
int
cmp
jae
or
xor
in
jmp
push
or
enter
sub
fisttp
add
popf
xor
dec
sub
sbb
jnp
sub
mov
xchg
xor
outs
aas
ret
xchg
cmps
clc
sbb
lods
jmp
test
dec
sbb
xchg
adc
mov
rcr
mov
retf
fldenv
sbb
xchg
jecxz
dec
xor
icebp
mov
(bad)
lods
xor
hlt
cmp
out
icebp
sbb
leave
fld
iret
shl
out
pop
xchg
mov
mov
icebp
sbb
cmp
shr
xlat
call
mov
out
jmp
out
lock
div
rcr
int
leave
mov
hlt
or
ins
scas
jmp
outs
cmps
cdq
nop
dec
xchg
sub
cmps
adc
idiv
or
lea
add
test
mov
mov
leave
add
push
sbb
test
add
pop
mov
fild
adc
sar
int
jno
cmps
adc
sahf
movs
jmp
ror
stos
enter
xor
ds
mov
pop
out
jmp
int3
out
mov
call
loope
mov
int
loop
pop
add
mov
xor
xlat
cdq
add
daa
and
xchg
std
leave
shl
ret
neg
jmp
jbe
adc
gs
leave
not
mov
fstp
sub
outs
jmp
jmp
(bad)
mov
xchg
sahf
iret
shl
cld
xchg
cmp
cmps
mov
(bad)
xlat
jmp
mov
scas
in
sar
icebp
sbb
xor
aam
cdq
leave
mov
adc
sahf
hlt
loope
(bad)
mov
jno
cmps
and
outs
iret
leave
xchg
inc
mov
(bad)
scas
and
inc
scas
inc
xchg
xchg
repz
jmp
inc
sub
inc
mov
push
ficom
jmp
(bad)
(bad)
fcomp
xor
cld
xchg
shr
(bad)
stc
mov
dec
mov
addr16
mov
out
out
sub
test
mov
ins
movs
mov
rcr
sub
fimul
leave
fstp
mov
out
sub
inc
pop
stc
add
jmp
sub
int
ror
out
and
outs
aas
ret
xchg
out
xlat
call
(bad)
leave
stc
mul
mov
mov
jmp
jmp
test
mov
pop
(bad)
pop
mov
not
mov
(bad)
in
sbb
outs
out
repz
mov
cmp
mov
mov
out
sub
test
mov
hlt
(bad)
mov
test
xchg
fidivr
mov
imul
adc
mov
mov
cmps
or
mov
outs
pop
test
xchg
adc
(bad)
cmps
jmp
icebp
mov
fst
not
mov
(bad)
in
sbb
outs
out
repz
mov
cmp
add
cld
ss
jae
cmps
leave
and
(bad)
mov
cmps
cmps
adc
test
out
adc
mov
and
ins
ja
cmp
cmp
in
xor
fs
mov
jns
in
rcl
iret
fcmovnbe
ss
sti
cmp
sbb
ins
or
jmp
jmp
idiv
rcl
ffreep
sbb
mov
xor
inc
(bad)
sbb
aam
jmp
out
or
jl
xor
push
lock
in
fbld
leave
(bad)
aaa
call
jmp
jne
or
xlat
mov
mul
dec
xor
add
jnp
adc
icebp
rcr
xchg
leave
(bad)
mov
sbb
ffreep
sbb
mov
loope
jbe
sub
out
data16
jbe
sub
out
addr16
mov
iret
loope
jbe
sti
jmp
xchg
adc
sub
xchg
ins
cmp
je
ror
pushf
scas
ret
xchg
daa
movs
xchg
(bad)
cmps
or
(bad)
scas
xchg
icebp
xchg
loope
jbe
enter
and
in
call
sbb
hlt
or
xor
inc
sar
shl
cmp
pop
int
jnp
or
(bad)
std
scas
sbb
ds
mov
xchg
test
mov
(bad)
xlat
xchg
sub
aas
mov
ret
mov
jmp
jmp
mov
aad
mov
cmp
xor
push
sbb
loope
test
sti
sar
dec
retf
mov
dec
jnp
int
jb
sbb
push
sar
repz
fisub
cmp
xchg
fidivr
cmps
int3
(bad)
std
psubsw
neg
mov
mov
cmps
adc
rcr
scas
and
out
jmp
movs
in
rcr
adc
sbb
add
movs
in
sar
sbb
or
movs
cmp
sar
in
cmp
retf
pop
aaa
stos
and
mov
out
sub
sbb
lea
mov
ret
mov
and
scas
mov
or
aad
(bad)
sbb
loope
in
enter
jmp
adc
mov
rcl
fnstsw
leave
movs
mov
sar
wbinvd
mov
out
sar
out
sbb
fsubrp
jmp
(bad)
ja
xchg
xchg
or
xchg
sbb
or
fs
xor
xchg
mov
mov
call
movs
jmp
shl
sub
xchg
hlt
jmp
shl
adc
out
jmp
scas
test
xchg
mov
stc
mov
fisttp
repz
mov
call
in
shr
push
xchg
sbb
pop
xchg
sbb
fucomip
leave
movs
int3
rcl
(bad)
(bad)
dec
stc
scas
stc
sbb
mov
jmp
jmp
outs
scas
cdq
leave
mov
icebp
sbb
fucomip
leave
movs
int3
(bad)
(bad)
out
stc
mov
outs
iret
fst
xchg
stc
mov
outs
xlat
cli
xchg
pop
iret
rcl
ins
push
mov
jbe
(bad)
dec
pop
icebp
add
iret
or
xchg
(bad)
std
aas
leave
mov
hlt
mov
loope
out
scas
sbb
mov
and
out
ret
shl
leave
xchg
iret
fcmovb
cmps
movs
jmp
mov
into
fstp
inc
pop
icebp
add
jmp
stos
mov
jmp
das
and
out
(bad)
jmp
jmp
xchg
(bad)
(bad)
out
lock
dec
pop
xor
in
leave
leave
xlat
adc
out
fucomip
leave
movs
int3
(bad)
cmp
aas
xchg
nop
mov
jmp
jmp
xchg
icebp
mov
movs
int3
(bad)
(bad)
out
icebp
mov
cmps
mov
xor
xlat
call
mov
mov
fmulp
fldenv
xchg
icebp
mov
out
jmp
faddp
mov
sahf
hlt
cdq
xchg
mov
cdq
shl
mov
iret
loop
xchg
hlt
xchg
call
(bad)
(bad)
loope
out
(bad)
jmp
xchg
cdq
shl
xchg
test
imul
cli
(bad)
icebp
and
mov
lods
cmp
dec
mov
pushf
(bad)
mov
(bad)
sub
xlat
call
mov
xchg
hlt
add
test
mov
imul
push
add
xor
lods
cmp
sar
adc
(bad)
mov
xor
xlat
call
mov
icebp
icebp
mov
xor
inc
xlat
cdq
add
xlat
call
daa
or
popw
mov
mov
stc
mov
mov
cli
mov
std
jmp
stos
dec
pop
xor
xchg
scas
ror
in
pop
xchg
xchg
out
fucomip
leave
movs
int3
(bad)
frstor
mov
xchg
stc
mov
ins
(bad)
adc
out
ffreep
and
hlt
adc
jbe
lock
mov
jns
mov
call
mov
shl
sahf
hlt
xchg
sbb
xlat
call
mov
sar
retf
iret
shl
mov
fst
out
mov
mov
sub
scas
mov
rcr
xchg
sbb
xchg
ror
fcom
in
push
sub
scas
in
xchg
rcr
xchg
add
int3
(bad)
mov
lahf
mov
mov
lahf
xor
or
(bad)
mov
out
xchg
jno
movups
cmps
mov
rcr
loope
out
out
repz
data16
call
sub
shr
call
icebp
mov
shl
pop
out
cdq
xor
out
sub
mov
stc
mov
movs
iret
fst
push
daa
or
popw
add
out
sub
mov
stc
mov
movs
iret
fcom
cmps
add
sar
adc
jmp
xor
sbb
fucomip
sub
into
out
repz
aaa
stos
and
fst
xchg
icebp
mov
mov
loop
xchg
hlt
shr
cmc
jmp
leave
inc
xlat
rol
idiv
mov
leave
(bad)
in
sar
add
dec
mov
mov
cli
mov
inc
pop
stc
rcl
test
mov
icebp
repz
icebp
ret
pop
iret
jmp
xlat
push
lock
fnstsw
leave
movs
mov
sar
(bad)
mov
out
and
sahf
iret
fld
mov
repz
movs
fist
jl
and
fs
movs
int3
(bad)
(bad)
out
repz
mov
push
shr
sub
out
stc
mov
and
fxch
mov
sub
push
outs
xchg
test
mov
cdq
icebp
mov
pop
shr
leave
mov
sahf
hlt
xor
inc
xlat
cdq
add
pop
stc
ret
mov
cli
mov
cmps
mov
sar
xchg
mov
dec
shl
push
aaa
sub
mov
iret
loope
(bad)
into
mov
xchg
ja
repz
add
(bad)
aas
fstp
fisttp
adc
xchg
out
xor
lea
add
jl
mov
xor
and
movs
and
shr
fiadd
ins
sub
cmp
ins
(bad)
mov
mov
outs
outs
test
retf
xchg
cmp
fld
nop
adc
icebp
mov
shl
mov
xlat
mov
push
outs
cmp
lahf
mov
jmp
sahf
movs
adc
jl
xchg
adc
adc
data16
mov
sbb
xlat
mov
mov
hlt
lods
and
pop
aaa
and
(bad)
(bad)
and
mov
cdq
test
xchg
cli
mov
cmps
mov
mov
(bad)
and
sub
int
call
repz
adc
xchg
out
xor
mov
loope
out
xchg
jmp
push
aas
loope
out
pop
xchg
jmp
push
aas
icebp
xchg
fiadd
jmp
pop
shr
ret
adc
jge
adc
mov
(bad)
std
aaa
mov
test
xchg
fld
int3
(bad)
(bad)
out
stc
mov
cmps
mov
repz
pop
xlat
xchg
mov
hlt
loope
xchg
ficom
mov
(bad)
sbb
ror
xchg
sub
mov
icebp
mov
sahf
hlt
loopne
not
jmp
not
mov
(bad)
xchg
mov
movupd
hlt
xlat
mov
psrlw
hlt
xlat
mov
scas
and
mov
xchg
mov
data16
mov
add
lea
mov
aas
leave
adc
leave
inc
leave
leave
xchg
xchg
mov
scas
cdq
xchg
push
pop
add
mov
nop
rcl
icebp
mov
mov
mov
mov
rcr
cmps
sbb
mul
icebp
jno
cmp
jmp
mov
div
and
mov
cmps
jecxz
dec
cmps
test
leave
fmulp
mov
leave
(bad)
cdq
adc
int3
rcl
std
outs
ret
cmp
cmps
mov
(bad)
out
stc
mov
mov
mov
div
retf
int
retf
and
in
out
sub
cmps
nop
and
sti
icebp
mov
sub
cmps
mov
jns
pop
sar
sub
mov
fcom
pop
mov
xchg
inc
mov
cdq
(bad)
in
and
fild
mov
mov
sub
test
xchg
outs
(bad)
sbb
mov
cmps
stc
xor
push
loope
test
test
leave
(bad)
mov
sbb
mov
test
repz
mov
sbb
(bad)
cli
test
scas
xor
sar
out
stc
xchg
(bad)
lods
mov
mov
cdq
test
xlat
mov
test
add
loope
mov
test
cmc
in
stc
leave
fidiv
sti
sbb
xchg
nop
mov
sbb
data16
mov
test
sbb
mov
leave
mov
mov
xor
(bad)
lods
stc
sbb
mov
xor
push
cmps
sub
dec
scas
loope
aam
mov
leave
cmps
dec
xchg
pop
aaa
add
xchg
cmps
xor
outs
out
and
icebp
cmp
(bad)
leave
retf
not
mov
mov
xchg
xor
hlt
and
repz
cmps
shr
cmp
mov
leave
fsub
add
xchg
test
mov
jle
mov
mov
xchg
jmp
repz
out
nop
mov
fisub
mov
mov
mov
inc
cmps
and
(bad)
cmps
adc
(bad)
daa
adc
jbe
icebp
mov
(bad)
(bad)
cdq
pop
out
mov
mov
test
mov
in
(bad)
repz
push
(bad)
stc
sbb
fisttp
sbb
mov
inc
sub
xchg
mov
(bad)
scas
and
mov
sbb
test
retf
retf
rol
cmps
nop
enter
icebp
mov
mov
retf
ret
jmp
(bad)
xlat
test
mov
xchg
jmp
xchg
(bad)
sub
fisub
repz
mov
stos
cdq
outs
mov
loopne
xchg
cmp
hlt
and
mov
mov
mov
dec
scas
jmp
(bad)
xlat
add
aaa
add
mov
mov
test
add
xchg
xchg
mov
leave
mov
mov
xor
mov
stc
sbb
out
cdq
mov
mov
pop
mov
dec
sub
test
sbb
daa
mov
sub
cmps
add
(bad)
cmps
fistp
cmps
xchg
xchg
test
cmp
xlat
and
xchg
mov
fsub
rcl
lods
stc
icebp
cld
mov
xor
cmps
mov
mov
out
cmp
pop
pop
jecxz
mov
xor
je
fist
xchg
scas
sar
fisub
add
mov
add
out
mov
(bad)
xchg
loope
out
adc
mov
or
xchg
hlt
jmp
jmp
addr16
adc
data16
xchg
mov
xor
lea
sub
out
stc
mov
mov
mov
cld
movs
mov
mov
xlat
icebp
ret
data16
jmp
jmp
pop
cdq
test
push
fbstp
icebp
scas
out
stc
xrelease
adc
fisttp
cdq
sar
mov
mov
xchg
xchg
pop
mov
shl
sbb
mov
push
pop
rcl
aaa
sub
(bad)
iret
fist
pop
mov
shl
sbb
cdq
loopne
out
icebp
adc
mov
and
cmps
mov
xchg
xchg
xchg
pop
mov
shl
sbb
loope
mov
jno
neg
mov
std
movs
mov
std
movs
mov
std
movs
mov
std
movs
mov
std
movs
mov
std
movs
mov
std
movs
mov
std
movs
mov
std
movs
mov
std
movs
mov
std
movs
mov
std
movs
mov
std
movs
mov
std
movs
mov
std
movs
mov
std
movs
mov
std
movs
mov
std
movs
mov
std
movs
mov
icebp
movs
sub
mov
in
popf
jmp
es
cmp
ror
dec
bound
push
es
cmp
es
mov
std
dec
jmp
sub
mov
cmp
mov
cmp
es
cmp
es
cmp
mov
movs
mov
out
push
jg
cmps
xchg
xor
test
ret
push
ret
and
std
push
jbe
imul
push
es
cmp
adc
push
imul
adc
imul
out
shr
add
cmp
mov
popa
cmp
xor
push
out
cmp
es
xchg
and
loop
fisub
mov
ins
cmp
es
cmp
es
cmp
es
inc
mov
popa
cmp
es
cmp
add
push
out
cmp
es
mov
push
sbb
outs
cmp
es
mov
mov
cmc
cmps
push
cs
push
es
cmp
es
cmp
mov
cmc
cmps
push
cs
adc
loope
frstor
mov
cmp
mov
loope
inc
and
push
jno
imul
inc
inc
adc
aad
pop
inc
inc
sbb
adc
xchg
lods
cdq
push
dec
mov
inc
push
es
cmp
es
cmp
rcr
call
push
es
cmp
and
mov
aaa
or
cmp
es
cmp
es
jo
and
cdq
jb
add
xchg
scas
push
mov
cs
cld
movs
pop
je
adc
movs
push
mov
popa
cmp
and
lea
dec
xchg
lods
xchg
push
(bad)
fsubr
or
push
push
out
cmp
es
cmp
mov
cmp
popa
test
and
int
xchg
mov
cld
adc
mov
icebp
lods
mov
pushf
push
in
lods
call
std
push
in
lods
mov
cmp
std
push
in
lods
mov
stos
icebp
xor
arpl
sbb
arpl
jmp
arpl
sub
mov
cmp
inc
bound
adc
popa
cwde
test
adc
xchg
popa
cmp
es
pushf
push
in
lods
mov
pushf
push
in
lods
call
std
push
in
lods
mov
adc
push
in
lods
mov
(bad)
xor
in
push
popa
or
xor
sbb
popa
adc
add
out
dec
retf
cmps
test
cli
lahf
test
jbe
mov
cld
movs
xchg
popa
cwde
test
adc
xchg
popa
enter
add
es
clc
test
and
push
es
mov
and
cmps
sub
test
shl
or
mov
dec
sbb
mov
shl
mov
int
mov
cmc
mov
mov
lods
xor
push
mov
lods
xor
repnz
ins
inc
push
mov
addr16
stos
arpl
push
dec
dec
daa
popf
inc
push
and
mov
adc
movs
sub
hlt
cmps
cmp
movs
push
mov
popa
cmp
nop
cmc
movs
xchg
cmp
mov
or
mov
dec
sbb
mov
popa
cmp
shl
mov
int
mov
cmc
mov
mov
lods
xor
loop
cmc
movs
fnsave
hlt
cwde
sar
lea
mov
pushf
sub
mov
dec
rep
pop
mov
pushf
add
movs
popf
mov
xor
stos
mov
pop
jge
movs
icebp
movs
cli
mov
jmp
cmps
test
pop
pushf
test
mov
xchg
popa
call
popf
mov
add
dec
mov
repz
push
mov
popa
cmp
and
mov
fisubr
push
jp
pop
mov
nop
in
xchg
cmp
es
xchg
icebp
movs
push
jp
test
mov
hlt
adc
mov
repnz
in
or
mov
pop
xchg
ins
cmp
es
cmp
es
push
inc
test
lods
xchg
pusha
cmp
es
cmp
es
cmp
movs
icebp
movs
and
hlt
cmps
mov
mov
xchg
mov
sar
sub
jle
mov
aad
sbb
icebp
and
mov
or
cmp
mov
ror
sub
movs
push
mov
popa
cmp
nop
cmc
movs
xchg
cmp
ror
push
(bad)
movs
push
mov
popa
cmp
es
cmp
shl
mov
int
mov
cmc
mov
mov
lods
xor
cmp
xor
bound
ins
xchg
push
mov
mov
stos
arpl
dec
dec
ja
inc
xor
pop
mov
icebp
movs
and
hlt
cmps
sub
movs
push
mov
popa
cmp
ror
push
(bad)
movs
push
mov
popa
cmp
mov
cmps
xchg
cs
cld
sub
in
jb
cmps
test
nop
add
lods
xor
loop
cmc
movs
push
mov
pop
push
mov
aaa
push
stos
arpl
push
dec
dec
idiv
nop
cmc
movs
xchg
cmp
es
cmp
nop
cmc
movs
xchg
cmp
es
cmp
mov
cmps
xchg
cs
sub
in
bound
mov
int3
and
mov
int3
ret
icebp
jl
mov
mov
jge
sub
popf
test
jle
mov
movs
xchg
popa
cwde
test
adc
xchg
popa
clc
call
cmp
xchg
ins
mov
xchg
ins
mov
xchg
ins
mov
xor
jge
sub
jge
add
jge
sub
popf
test
jle
mov
movs
xchg
popa
cmp
es
cmp
rcr
call
push
es
cmp
es
clc
call
cmp
xchg
ins
mov
xchg
mov
cld
sub
int3
and
mov
int3
ret
icebp
jl
mov
outs
jge
add
jge
sub
popf
test
jle
mov
movs
xchg
popa
cmp
es
cmp
rcr
call
push
es
cmp
es
pushf
push
in
lods
mov
pushf
push
in
lods
call
std
push
in
lods
mov
cmp
std
push
in
lods
mov
(bad)
xor
in
xor
xor
bound
mul
lods
jbe
push
push
inc
bound
push
es
cmp
shl
mov
int
test
cmc
mov
mov
lods
xor
add
lods
xor
loop
cmc
movs
push
mov
pop
push
mov
aas
push
stos
arpl
pop
dec
dec
inc
inc
adc
lea
push
es
mov
add
(bad)
mov
cmc
test
mov
int
mov
cmc
mov
mov
lods
xor
add
lods
xor
loop
cmc
movs
push
mov
jg
mov
pop
push
stos
arpl
pop
dec
dec
ffreep
inc
inc
pop
jbe
imul
es
cmp
es
clc
call
cmp
frstor
cmc
mov
mov
lods
xor
mov
cmc
movs
fnstsw
hlt
cwde
push
mov
ins
daa
push
mov
(bad)
push
stos
arpl
push
dec
dec
xchg
push
hlt
or
mov
icebp
movs
sub
mov
in
cdq
cvtdq2ps
es
cmp
es
cmp
shl
mov
int
mov
cmc
mov
mov
lods
xor
fwait
mov
icebp
mov
adc
es
and
push
addr16
cmps
mov
push
cmp
cmps
lds
cmp
es
cmp
adc
cli
mov
mov
cmps
mov
mov
mov
pop
stos
sub
cmps
xchg
cs
cld
push
loop
xor
popa
aaa
push
mov
xlat
push
stos
arpl
push
dec
dec
xchg
mov
nop
cmc
movs
xchg
cmp
nop
cmc
movs
xchg
cmp
es
cmp
mov
cmps
xchg
cs
mov
mov
xchg
ins
mov
frstor
in
sbb
in
stc
arpl
fldenv
sbb
rep
xchg
ins
cmp
es
cmp
popa
cwde
test
adc
xchg
popa
test
and
mov
fimul
movs
(bad)
xchg
push
xchg
outs
cmp
es
cmp
adc
push
out
cmp
and
xchg
mov
xchg
mov
cld
sub
in
adc
mov
int3
ret
stc
cld
push
loop
repnz
jge
sub
jge
add
jge
sub
mov
xor
popf
mov
hlt
or
mov
add
push
es
cmp
nop
cmc
cmp
mov
xchg
pushf
push
in
lods
mov
pushf
push
in
lods
call
std
push
in
lods
mov
adc
push
in
lods
mov
(bad)
xor
arpl
sbb
arpl
shl
stos
arpl
sub
cmc
cmps
test
push
movs
push
push
pop
jbe
push
cmp
es
cmp
mov
cmps
mov
cmp
mov
cmc
cmps
mov
or
sar
sub
sar
mov
adc
and
push
adc
and
cmp
hlt
cmps
xchg
cmp
cli
push
fbstp
xchg
icebp
cmp
inc
bound
push
es
mov
cmp
inc
fnstsw
cmc
test
mov
int
test
cmc
mov
mov
lods
xor
add
lods
xor
xchg
mov
ins
out
mov
xchg
arpl
popf
inc
and
adc
cwde
jb
add
push
es
cmp
es
cmp
shl
mov
icebp
mov
shr
cmps
mov
jp
or
cmps
mov
call
mov
and
adc
and
xor
cmc
cmps
test
push
movs
push
push
pop
jbe
push
cmp
es
cmp
mov
cmps
xchg
cs
sub
in
bound
mov
int3
and
mov
int3
ret
icebp
jl
mov
out
jge
add
jl
sub
mov
mov
das
mov
lds
xchg
icebp
cmp
inc
bound
push
es
cmp
es
pushf
push
in
lods
mov
pushf
push
in
lods
call
std
push
in
lods
mov
cmp
std
push
in
lods
mov
(bad)
xor
arpl
jns
or
pop
bound
es
or
cmp
es
cmp
es
clc
call
cmp
xchg
ins
mov
xchg
mov
cld
sub
int3
and
mov
int3
ret
icebp
jl
mov
fidivr
add
jge
sub
mov
mov
aas
mov
lds
xchg
icebp
cmp
inc
bound
push
es
cmp
es
clc
call
cmp
xchg
mov
cld
sub
in
sbb
mov
int3
and
mov
int3
ret
icebp
jl
mov
fidivr
add
jge
sub
mov
mov
aas
mov
lds
xchg
icebp
cmp
inc
bound
push
es
cmp
es
clc
call
cmp
xchg
mov
cld
sub
in
call
ins
mov
xchg
ins
mov
xor
jge
sub
jge
add
jge
sub
mov
mov
aas
mov
lds
xchg
icebp
cmp
inc
bound
push
es
cmp
es
mov
add
inc
fnstsw
cmc
test
mov
int
mov
cmc
mov
mov
lods
xor
add
lods
xor
loop
cmc
movs
push
mov
out
mov
xchg
arpl
popf
inc
xor
pop
mov
add
push
es
cmp
es
cmp
shl
mov
icebp
lods
call
std
push
in
mov
ror
sub
test
jl
sub
jl
add
jl
sub
mov
xor
popf
mov
hlt
or
mov
icebp
lods
mov
pushf
push
in
lods
call
std
push
in
lods
mov
ficom
mov
jmp
mov
or
xchg
arpl
jnp
adc
adc
out
dec
pop
pmaddwd
movs
push
push
pop
jbe
push
cmp
shl
mov
int
mov
cmc
mov
mov
lods
xor
cmp
xor
bound
ins
xchg
dec
cmps
push
stos
arpl
dec
dec
addr16
inc
xor
idiv
icebp
movs
es
or
xchg
cmp
es
cmp
es
cmp
shl
rep
push
mov
popa
cmp
es
cmp
shl
mov
icebp
lods
call
std
push
in
lods
mov
mov
std
push
in
lods
mov
push
xor
arpl
sbb
arpl
ja
adc
add
out
dec
dec
or
cmps
test
call
test
push
mov
cmp
shl
mov
int
mov
cmc
mov
mov
lods
xor
fwait
mov
icebp
mov
adc
es
test
and
dec
push
pmaddwd
movs
push
push
pop
jbe
push
cmp
push
hlt
fsubr
bound
lods
mov
pushf
push
in
lods
call
std
push
in
mov
shr
cmc
cmps
xchg
cs
mov
jge
add
jge
sub
mov
and
popf
scas
movs
sub
mov
add
push
es
cmp
es
cmp
shl
mov
icebp
lods
call
std
push
in
mov
shr
cmc
cmps
xchg
cs
mov
jge
add
jge
sub
mov
and
popf
scas
movs
sub
mov
add
push
es
cmp
es
cmp
push
lock
inc
sbb
and
std
cmps
xchg
sub
push
es
cmp
adc
mov
iret
mov
std
cmps
xchg
sub
push
es
cmp
es
cmp
rcr
push
inc
bound
push
es
cmp
es
dec
mov
dec
and
mov
mul
mov
ins
cmp
es
cmp
es
cmp
and
or
or
movs
rol
or
lds
push
es
cmp
and
or
in
adc
movs
rol
or
lds
sbb
jno
and
loop
mov
cmp
mov
popa
cmp
push
dec
mov
add
jnp
bound
mov
cmp
mov
popa
cmp
push
(bad)
fsubr
cmp
pusha
jbe
add
push
inc
bound
adc
icebp
add
test
popa
pushf
stos
adc
cmp
mov
popa
cmp
es
add
popa
(bad)
xchg
mov
scas
or
mov
push
es
mov
cmp
cmps
push
push
ins
cmp
es
cmp
es
cmp
test
cmp
es
cmp
es
mov
add
popa
cmp
es
cmp
push
out
dec
add
inc
xchg
xchg
out
dec
add
xchg
fwait
ds
cmp
dec
add
gs
xchg
mov
je
push
into
mov
push
(bad)
movs
push
mov
popa
cmp
es
mov
and
cmps
popf
cmp
and
mov
popa
cmp
es
cmp
es
push
(bad)
imul
sbb
icebp
movs
xchg
cmp
mov
mov
in
push
out
dec
add
push
xchg
xchg
into
jl
and
dec
mov
cmp
pop
call
sbb
push
repz
call
push
es
cmp
es
js
and
movs
push
mov
popa
cmp
and
test
jle
lea
icebp
in
mov
jl
mov
pop
cmp
inc
repnz
mov
sbb
test
movs
xchg
ins
cmp
es
cmp
es
push
out
cmp
and
loopne
shl
movs
mov
or
push
cld
lds
sbb
loope
push
and
outs
cmp
es
cmp
shr
popf
(bad)
mov
mov
mov
mul
mov
mov
mov
retf
sbb
mul
mov
mov
push
and
sbb
mul
mov
add
cmps
popf
fidivr
cwde
pop
popf
push
inc
repnz
stos
mov
and
sub
fadd
inc
push
std
push
inc
repnz
stos
mov
and
mov
sti
jnp
ins
push
lahf
(bad)
sbb
or
test
mov
xchg
popa
clc
adc
shl
mov
ins
cmp
and
or
shl
nop
jne
sub
(bad)
or
push
xor
sub
cld
add
and
jecxz
mov
cmp
and
inc
repnz
sub
inc
jp
cld
jecxz
mov
pop
or
xor
sub
pop
out
inc
and
adc
cmps
or
pop
fadd
repnz
movs
mov
sub
js
mov
pop
cmp
inc
repnz
mov
mov
jge
sub
jl
mov
pop
cmp
inc
repnz
mov
stos
lea
jge
sub
mov
inc
inc
repnz
sub
fadd
jnp
cmps
xchg
fidivr
sahf
popf
pop
sub
fadd
cmps
pop
pop
sub
fadd
inc
jb
sub
fadd
inc
xor
mov
mov
mov
stc
cmp
mov
popa
pop
sub
popa
mov
push
movs
fld
jge
shl
mov
push
std
push
inc
repnz
movs
mov
test
push
inc
repnz
stos
mov
test
mov
cld
jecxz
mov
adc
mov
outs
cmp
es
cmp
es
popf
push
inc
repnz
mov
fcomi
cmps
test
fcmove
xchg
call
rcr
lock
xchg
fcmovb
xchg
or
cmps
xchg
fidivr
lods
mov
lock
cmp
fcom
push
mov
add
mov
icebp
cmps
test
(bad)
xchg
call
mov
lock
test
fcmove
xchg
call
rcr
lock
sub
std
jbe
or
or
cmp
cmps
xchg
fidivr
lods
mov
lock
cmp
cwde
mov
mov
add
mov
icebp
cmps
xchg
fisub
sub
fadd
cmps
pop
pop
sub
fadd
inc
jb
sub
fadd
mov
cmp
push
pop
add
mov
cmp
mov
popa
cmp
and
add
(bad)
jge
shl
mov
rol
jge
mov
sub
shl
jge
mov
sub
shl
ret
push
mov
test
clc
movs
push
xchg
outs
cmp
es
cmp
es
cmp
mov
sub
ds
and
and
popf
(bad)
mov
mov
mov
mul
mov
mov
fs
sbb
or
cmp
cmps
jnp
push
mov
mov
xor
sbb
or
adc
mul
mov
mov
add
jnp
add
adc
mul
mov
mov
cmc
and
push
or
adc
mul
mov
cmc
dec
mov
xor
or
cmps
call
std
push
inc
repnz
movs
mov
and
scas
inc
jb
mov
mov
or
mov
lds
mov
hlt
cmps
call
std
push
inc
repnz
movs
mov
and
cs
adc
clc
data16
gs
or
jge
pop
sub
ds
mov
in
rcl
icebp
and
popf
(bad)
mov
mov
mov
mul
mov
mov
cmc
and
sbb
or
cmp
cmps
jnp
push
mov
mov
add
jnp
add
adc
mul
mov
mov
mov
ins
scas
sub
xchg
fist
mov
cmps
leave
icebp
imul
adc
(bad)
xchg
xchg
pop
cmps
cwde
sub
or
and
mov
lock
test
sub
aas
and
xchg
mov
xlat
scas
loope
xchg
stc
leave
mov
scas
cmp
fs
and
neg
mov
and
out
mov
aam
and
mov
(bad)
mov
cmps
cmp
push
out
repz
xchg
mov
(bad)
and
ret
mov
(bad)
fmul
retf
mov
inc
mov
cld
in
mov
(bad)
in
mov
(bad)
movs
mov
(bad)
xor
ret
mov
dec
call
mov
(bad)
mov
mov
(bad)
aam
adc
aam
and
movs
mov
cld
lods
mov
(bad)
in
mov
(bad)
movs
mov
cld
or
xchg
(bad)
fmul
cmp
aam
mov
movs
mov
cld
or
mov
add
and
lods
mov
(bad)
in
mov
(bad)
aam
mov
movs
mov
cld
mov
add
mov
mov
aam
mov
mov
retf
mov
(bad)
in
and
movs
mov
repnz
jge
movs
xor
stos
mov
mov
add
jg
mov
pop
cld
inc
inc
repnz
sub
fadd
jnp
cmps
test
fidivr
call
enter
or
repnz
sub
pop
in
movs
icebp
movs
cli
mov
jmp
cmps
xchg
mov
test
cmps
add
jle
and
outs
adc
or
mov
pop
mov
cmp
adc
or
mov
pop
or
mov
pusha
adc
or
mov
pushf
mov
(bad)
xlat
cmps
or
pop
fadd
repnz
movs
mov
sub
js
mov
pop
cmp
inc
repnz
mov
lods
mov
jge
sub
pop
cmp
inc
repnz
mov
stos
lea
jge
sub
mov
inc
inc
repnz
sub
fadd
cmps
popf
pop
sub
fadd
cmps
pop
pop
sub
fadd
mov
pop
sub
fadd
mov
cmp
pop
mov
loopne
popf
adc
jle
test
mov
pop
sub
pop
mov
push
mov
pop
es
out
inc
and
adc
dec
and
mov
test
cmps
add
jle
and
outs
adc
or
mov
pop
mov
cmp
adc
or
mov
pop
or
mov
pusha
adc
or
mov
pushf
mov
(bad)
xlat
cmps
or
pop
fadd
repnz
movs
mov
sub
js
mov
pop
cmp
inc
repnz
mov
lods
mov
jge
sub
pop
cmp
inc
repnz
mov
stos
lea
jge
sub
mov
inc
inc
repnz
sub
fadd
cmps
popf
pop
sub
fadd
cmps
pop
pop
sub
fadd
mov
pop
sub
fadd
mov
cmp
pop
mov
call
adc
pop
sub
pop
mov
push
mov
pop
es
out
inc
and
adc
jl
inc
repnz
mov
pop
das
jp
cmc
movs
xchg
cmp
es
cmp
and
xchg
loop
cmp
mov
cmp
and
mov
sbb
movs
and
or
cmp
es
sub
jmp
es
cmp
and
and
test
std
movs
jmp
or
cmc
cmps
retf
movs
mov
xchg
lods
cmp
es
gs
or
lds
push
es
cmp
es
cmp
push
hlt
or
mov
push
cmp
and
cmc
cmps
push
scas
cmp
add
mov
icebp
cmps
sub
gs
push
dec
mov
push
hlt
or
mov
pusha
cmp
inc
bound
adc
mov
mov
adc
mov
mov
add
mov
push
test
sti
pop
sub
jle
mov
lods
cmp
(bad)
mov
pop
xor
sub
outs
cmp
and
add
movs
dec
mov
std
push
inc
repnz
movs
mov
sub
mov
mov
jge
lods
sub
mov
std
movs
sbb
mul
mov
cmp
mov
shl
mov
add
sar
cmps
sub
mov
popf
or
les
jmp
jmp
movs
test
je
sub
jg
mov
pop
pop
inc
inc
repnz
mov
adc
and
mov
stc
movs
dec
test
std
push
inc
repnz
movs
mov
sub
mov
mov
jge
lea
adc
(bad)
mov
std
movs
sbb
mul
mov
cmp
mov
popa
cmp
push
hlt
fsubr
stos
add
mov
mul
xchg
call
mov
lock
xchg
ficom
mov
sbb
cmps
sub
lds
mov
lock
sub
cmc
xchg
ins
movs
sub
mov
clc
cmps
retf
movs
xchg
cmp
es
cmp
and
mov
stc
movs
dec
mov
repnz
stos
mov
sub
mov
lods
cmps
jge
or
push
retf
movs
test
pop
sub
jg
mov
pop
pop
inc
inc
repnz
mov
push
es
cmp
es
enter
add
jle
and
outs
adc
or
mov
pop
pop
xchg
and
pusha
adc
or
mov
pop
mov
cmp
adc
or
mov
pop
mov
cmp
adc
or
mov
int3
xor
test
test
push
inc
repnz
stos
mov
mov
push
inc
repnz
mov
cmp
cmps
xchg
fidiv
mov
mov
call
adc
pop
sub
pop
pop
ss
repnz
mov
adc
and
mov
fld
jge
shl
mov
rol
jge
mov
sub
push
std
push
inc
repnz
lods
cwde
movs
sub
mov
js
and
dec
idiv
call
or
mov
or
mov
cmp
mov
add
retf
daa
push
jl
inc
repnz
test
mov
or
cmp
cmps
sar
jge
outs
adc
or
mov
pop
pop
xchg
and
pusha
adc
or
mov
pop
mov
cmp
adc
or
mov
pop
mov
cmp
adc
or
mov
mov
xchg
mov
int3
rcl
icebp
and
popf
(bad)
mov
mov
mov
mul
mov
mov
add
jnp
add
adc
mul
mov
mov
cmc
and
sbb
or
cmp
cmps
jnp
dec
data16
add
cmps
xchg
fiadd
sub
fadd
cmps
pop
pop
sub
fadd
mov
pop
sub
fadd
mov
cmp
pop
mov
call
adc
pop
sub
pop
pop
ss
repnz
mov
adc
and
mov
or
sar
cmps
sub
std
jl
mov
(bad)
cmp
cwde
pop
xor
sub
pop
out
inc
and
adc
cmps
or
pop
fadd
repnz
movs
mov
sub
js
mov
pop
cmp
inc
repnz
mov
stos
lea
jge
sub
mov
dec
inc
repnz
mov
lods
mov
jge
sub
pop
sbb
inc
repnz
sub
fadd
jnp
cmps
nop
ficom
mov
cwde
or
adc
mul
mov
add
cmps
call
std
push
inc
repnz
fstp
(bad)
cmp
cwde
pop
xor
sub
pop
in
inc
repnz
or
cmp
mov
inc
and
push
cld
fdivr
mov
and
mov
cmp
mov
popa
cmp
xor
cli
cmp
mov
or
or
or
mov
ins
cmp
es
cmp
mov
frstor
mov
cmp
mov
inc
and
mov
cmp
mov
popa
cmp
and
(bad)
data16
cmp
bound
push
es
cmp
inc
and
mov
cmp
mov
jno
xchg
cmp
es
cmp
es
cmp
es
push
push
aam
int3
push
retf
push
out
imul
push
(bad)
popa
cmp
es
nop
mov
add
sub
inc
movs
xchg
cmp
mov
popa
sbb
movs
xchg
popa
cmp
and
movs
xchg
cmp
mov
adc
repnz
aas
lods
mov
push
jl
inc
repnz
test
scas
add
jle
and
outs
adc
or
mov
pop
pop
xchg
and
pusha
adc
or
mov
pop
mov
cmp
adc
or
mov
int3
xor
stos
mov
aam
jge
shl
mov
rol
jge
mov
sub
(bad)
es
mov
sub
shl
ret
push
mov
mov
pop
(bad)
xor
add
push
jmp
cmps
jge
push
or
lds
push
es
cmp
mov
sub
ds
and
rcl
and
popf
(bad)
mov
mov
mov
mul
mov
mov
add
jnp
add
adc
mul
mov
mov
cmc
and
sbb
or
cmp
cmps
jnp
dec
mov
mov
mov
nop
cmc
movs
xchg
cmp
add
retf
daa
push
jl
inc
repnz
mov
mov
mov
dec
sub
mov
fxch
rcl
icebp
and
popf
(bad)
mov
mov
mov
mul
mov
mov
add
jnp
add
adc
mul
mov
mov
cmc
and
sbb
or
cmp
cmps
jnp
dec
data16
add
cmps
fidiv
push
inc
repnz
stos
mov
sub
dec
mov
data16
gs
or
jge
pop
sub
ds
mov
mov
jmp
fadd
repnz
movs
mov
sub
js
mov
pop
cmp
inc
repnz
mov
stos
lea
jge
sub
mov
dec
inc
repnz
mov
lods
mov
jge
sub
jge
mov
pop
sbb
inc
repnz
sub
fadd
jnp
cmps
sub
int
call
mov
cwde
pop
xor
sub
pop
out
inc
and
adc
cmps
or
pop
fadd
repnz
movs
mov
sub
js
mov
pop
cmp
inc
repnz
mov
stos
lea
jge
sub
mov
dec
inc
repnz
mov
lods
mov
jge
sub
pop
sbb
inc
repnz
sub
fadd
(bad)
mov
in
test
test
push
inc
repnz
mov
cmp
cmps
nop
cs
sti
sahf
cmp
lods
mov
mov
int3
and
push
or
mov
or
mov
cmp
mov
mov
adc
adc
pop
sub
pop
pop
ss
repnz
mov
push
es
clc
cmps
and
push
push
pusha
cmp
es
cmp
mov
cmps
sahf
cs
inc
mov
popa
cmp
es
jge
shl
mov
shl
mov
mov
sub
push
std
push
inc
repnz
lods
cwde
movs
sub
mov
clc
test
mov
outs
mov
add
mov
arpl
push
es
cmp
es
int3
sub
dec
imul
fisubr
or
mov
or
mov
cmp
mov
mov
cmp
es
clc
test
popa
mov
jge
leave
xor
mov
jnp
cmps
xchg
fidiv
and
(bad)
cmps
sbb
mul
mov
add
cmps
call
std
push
inc
repnz
xlat
cdq
mov
cmp
cwde
pop
xor
sub
pop
popf
push
inc
repnz
jge
lods
xor
stos
mov
test
add
sub
inc
inc
repnz
sub
fadd
jnp
cmps
mov
ficom
fdivr
(bad)
cmp
cwde
pop
xor
sub
pop
popf
push
inc
repnz
jge
lods
xor
stos
mov
test
enter
test
je
sub
jg
mov
pop
pushf
inc
inc
repnz
sub
fadd
jnp
cmps
(bad)
ficom
call
cwde
pop
cld
cmp
cwde
pop
xor
sub
pop
popf
push
inc
repnz
jge
lods
xor
stos
mov
stos
das
enter
test
jg
mov
pop
pushf
inc
inc
repnz
sub
fadd
(bad)
mov
hlt
sub
rol
jge
mov
sub
fisub
jge
mov
sub
fisub
ret
push
mov
mov
pop
(bad)
cmp
add
xor
(bad)
cmps
jge
push
or
lds
push
es
cmp
push
les
push
inc
repnz
stos
mov
cmp
sub
fadd
mov
fisub
adc
mul
mov
add
cmps
mov
(bad)
nop
call
mov
hlt
sub
stos
mov
popa
out
add
sub
inc
inc
repnz
sub
fadd
test
std
push
inc
repnz
stos
mov
and
(bad)
mov
outs
es
gs
or
jge
xor
movs
mov
ins
mov
push
mov
movs
pop
mov
(bad)
cmps
sbb
mul
mov
add
cmps
mov
fcmovb
sbb
xor
stos
mov
movs
(bad)
enter
test
jg
mov
pop
pushf
inc
inc
repnz
sub
fadd
jnp
cmps
sub
cmp
fnstsw
std
cmp
cwde
pop
xor
sub
pop
popf
push
inc
repnz
mov
fcomi
cmps
mov
(bad)
xchg
or
cmps
sub
xor
mov
cmp
cmps
sub
cmc
xchg
ins
movs
sub
mov
js
and
dec
idiv
mov
mov
push
or
mov
or
mov
cmp
mov
add
retf
daa
push
jl
inc
repnz
test
mov
or
cmp
cmps
sar
jge
outs
adc
or
mov
pop
pop
xchg
and
pusha
adc
or
mov
pop
mov
cmp
adc
or
mov
pop
mov
lea
js
sub
pop
cmp
inc
repnz
mov
stos
lea
jge
sub
mov
inc
inc
repnz
sub
fadd
mov
repnz
stos
mov
sub
iret
mov
data16
gs
or
jge
pop
sub
ds
lea
mov
xlat
icebp
and
popf
(bad)
mov
mov
mov
mul
mov
mov
add
jnp
add
adc
mul
mov
mov
cmc
and
sbb
or
cmp
cmps
jnp
dec
mov
movs
sub
inc
add
jnp
add
adc
mul
mov
mov
cmc
and
sbb
or
cmp
cmps
jnp
dec
data16
xchg
mov
mov
retf
nop
gs
push
mov
popa
cmp
es
cmp
es
cmp
ds
shl
adc
push
mov
popa
cmp
inc
repnz
stos
mov
xor
sub
fadd
mov
pop
or
pop
xor
sub
inc
jp
cld
jecxz
mov
pop
or
xor
sub
pop
out
inc
and
adc
mov
mov
mov
mov
hlt
fsubr
and
jge
mov
scas
or
cmc
cmps
push
scas
cmp
es
cmp
es
cmp
and
std
cmp
mov
popa
pop
sub
popa
mov
dec
mov
pop
call
or
cmc
cmps
push
scas
cmp
mov
movs
xchg
push
push
es
cmp
and
and
test
std
movs
jmp
or
mov
cli
movs
mov
xchg
lods
cmp
es
gs
or
lds
push
es
cmp
push
hlt
fsubr
rcr
push
inc
repnz
stos
mov
mov
push
inc
repnz
stos
mov
mov
push
inc
repnz
stos
mov
mov
push
inc
repnz
stos
mov
mov
mov
cld
jecxz
mov
xchg
retf
movs
xchg
popa
pop
sub
popa
mov
xchg
mov
movs
cmc
mov
pop
sub
fadd
scas
pop
pop
sub
fadd
mov
outs
mov
repnz
movs
sti
mov
cmp
push
pop
or
mov
cmp
mov
push
popf
push
inc
repnz
stos
mov
mov
push
inc
repnz
stos
mov
mov
push
inc
repnz
stos
mov
mov
push
inc
repnz
stos
mov
test
mov
cld
jecxz
mov
xchg
retf
movs
xchg
cmp
es
cmp
es
cmp
es
popf
push
inc
repnz
stos
mov
test
push
inc
repnz
stos
mov
test
push
inc
repnz
stos
mov
mov
push
inc
repnz
stos
mov
mov
jp
cld
jecxz
mov
ror
popf
movs
xchg
cmp
and
mov
stc
movs
cmc
mov
pop
sub
fadd
scas
pop
pop
sub
fadd
mov
pop
sub
fadd
mov
cmp
in
icebp
lods
mov
std
cmps
mov
push
mov
sbb
xchg
bound
push
mov
xchg
mov
and
cmps
or
pop
fadd
repnz
movs
mov
sub
js
mov
pop
cmp
inc
repnz
mov
stos
lea
jge
sub
mov
dec
inc
repnz
mov
lods
mov
jge
sub
pop
sbb
inc
repnz
xor
adc
lods
adc
ud2
mov
hlt
cmps
test
fidiv
jge
lods
xor
stos
mov
test
enter
test
jae
sub
jg
mov
pop
pushf
dec
inc
repnz
cmp
icebp
lods
and
hlt
cmps
test
(bad)
sbb
xor
stos
mov
test
enter
test
jae
sub
jg
mov
pop
pushf
dec
inc
repnz
pop
mov
lods
adc
ud2
mov
hlt
cmps
test
(bad)
sbb
xor
stos
mov
test
enter
test
jae
sub
jg
mov
pop
pushf
inc
inc
repnz
and
shl
nop
jne
sub
(bad)
or
push
xor
sub
cld
add
cld
jecxz
mov
pop
or
xor
sub
inc
mov
cld
jecxz
mov
mov
add
mov
pop
lods
adc
aas
mov
mov
cmc
cmps
sub
lds
mov
hlt
sub
stos
mov
popa
pop
add
jg
mov
pop
pushf
inc
inc
repnz
sub
fadd
mov
std
push
inc
repnz
stos
mov
sub
sahf
mov
outs
es
gs
or
jge
xor
stos
mov
add
sar
cmps
sub
test
mov
cld
cmp
cwde
pop
xor
sub
fbstp
cmp
pusha
test
cmc
pop
sub
fadd
mov
std
push
inc
repnz
stos
mov
sub
outs
mov
data16
gs
or
jge
xor
stos
mov
add
sar
cmps
lea
fisub
fnstcw
std
cmp
cwde
pop
xor
sub
pop
popf
push
inc
repnz
stos
mov
cmp
sub
fadd
mov
in
jmp
or
adc
mul
mov
mov
xchg
ins
mov
jge
lds
stos
mov
add
sar
cmps
mov
fiadd
call
js
std
cmp
cwde
pop
xor
sub
jmp
cmp
pop
sub
mov
jmp
std
push
inc
repnz
stos
mov
sub
(bad)
mov
data16
gs
or
jge
xor
stos
mov
add
sar
cmps
lea
fisub
fnstsw
std
cmp
cwde
pop
xor
sub
jg
xor
dec
mov
fiadd
sub
fadd
mov
std
push
inc
repnz
stos
mov
sub
sahf
mov
data16
gs
or
jge
xor
stos
mov
add
sar
cmps
lea
fisub
sar
cld
cmp
cwde
pop
xor
sub
pop
popf
push
inc
repnz
stos
mov
cmp
sub
fadd
mov
in
jmp
or
adc
mul
mov
add
cmps
sub
lds
mov
hlt
sub
movs
bswap
popa
jo
sub
jg
mov
pop
pushf
inc
inc
repnz
and
shl
nop
jne
sub
(bad)
or
push
xor
sub
cld
repnz
ins
mov
fnsave
cld
cmp
mov
outs
adc
or
mov
pop
mov
cmp
adc
or
mov
int3
xor
stos
mov
add
sar
cmps
sub
test
mov
std
cmp
cwde
pop
xor
sub
pop
out
inc
and
adc
mov
mov
mov
mov
xor
stos
mov
or
sar
cmps
sub
adc
int3
mov
cld
hlt
sub
repnz
mov
std
movs
test
jno
sub
jg
mov
pop
pop
inc
inc
repnz
mov
push
es
cmp
es
enter
add
jle
and
outs
adc
or
mov
pop
pop
xchg
and
pusha
adc
or
mov
pop
mov
cmp
adc
or
mov
int3
xor
movs
mov
ins
mov
call
add
jg
mov
pop
pushf
inc
inc
repnz
sub
fadd
mov
pop
sub
fadd
cmps
pop
pop
sub
fadd
lds
sub
test
and
jecxz
mov
mov
in
aas
movs
pop
enter
mov
pop
xor
sub
arpl
push
es
cmp
es
popf
push
inc
repnz
mov
fcomi
cmps
test
ficom
call
rcr
lock
xchg
ficom
sahf
jge
sub
fadd
mov
cmp
pop
mov
call
adc
movs
mov
cmc
cld
stos
clc
push
or
mov
or
mov
cmp
mov
add
retf
daa
push
jl
inc
repnz
repnz
movs
popf
dec
sub
fsubr
loop
std
add
iret
pop
mov
pop
fadd
repnz
movs
mov
sub
js
mov
pop
cmp
inc
repnz
mov
stos
lea
jge
sub
mov
dec
inc
repnz
mov
lods
mov
jge
sub
pop
sbb
inc
repnz
mov
hlt
movs
jge
int
mov
in
test
test
push
inc
repnz
stos
mov
mov
push
inc
repnz
mov
cmp
cmps
xchg
fisub
lods
mov
lock
xchg
js
and
dec
out
fdivr
movs
enter
mov
push
xor
sub
arpl
push
es
cmp
es
popf
push
inc
repnz
stos
mov
mov
push
inc
repnz
stos
mov
mov
push
inc
repnz
mov
cmp
cmps
xchg
fisub
lods
mov
lock
xchg
js
and
dec
out
fprem
movs
enter
mov
xor
sub
arpl
push
es
cmp
es
xor
dec
mov
xor
dec
mov
mov
cmc
cmps
xchg
cs
cmc
sahf
popf
pop
sub
fadd
mov
pop
sub
fadd
lds
sub
shl
ret
push
mov
mov
pop
(bad)
cmp
popa
mov
movs
mov
jg
test
pop
pop
ss
repnz
mov
adc
and
mov
stc
movs
cmc
mov
pop
sub
fadd
scas
pop
pop
sub
fadd
lds
sub
shl
ret
push
mov
mov
pop
(bad)
xor
shl
jmp
imul
adc
jb
lds
push
es
cmp
and
pop
popf
(bad)
icebp
sbb
mov
pop
popf
push
inc
repnz
mov
fcomi
cmps
sub
movs
xchg
or
cmps
xchg
fidiv
sub
fadd
mov
cmp
pop
mov
call
adc
movs
mov
mov
or
mov
or
mov
cmp
mov
mov
xchg
and
lods
push
xor
mov
ficomp
test
cmc
pop
sub
fadd
(bad)
mov
hlt
sub
xlat
push
jge
mov
sub
push
std
push
inc
repnz
stos
mov
mov
mov
cld
jecxz
mov
mov
in
aas
mov
or
frstor
adc
or
lds
push
es
cmp
shl
mov
xlat
(bad)
jge
shl
mov
fld
jge
mov
sub
push
std
push
inc
repnz
stos
mov
mov
mov
cld
jecxz
mov
mov
jmp
or
or
repnz
sub
arpl
push
es
cmp
es
stos
xor
dec
mov
xor
jo
ret
sub
fadd
(bad)
mov
hlt
sub
xlat
push
jge
mov
sub
push
std
push
inc
repnz
stos
mov
mov
mov
cld
jecxz
mov
mov
loop
mov
or
frstor
adc
or
lds
push
es
cmp
shl
mov
xlat
(bad)
jge
shl
mov
fld
jge
mov
sub
push
std
push
inc
repnz
stos
mov
mov
mov
cld
jecxz
mov
mov
in
aas
mov
mov
jmp
and
imul
adc
jb
lds
push
es
cmp
and
sbb
cmp
movs
mov
pop
popf
push
inc
repnz
mov
fcomi
cmps
sub
movs
xchg
or
cmps
xchg
fidiv
sub
fadd
mov
cmp
pop
mov
call
adc
pop
sub
pop
pop
ss
repnz
mov
adc
and
mov
stc
movs
cmc
mov
pop
sub
fadd
scas
pop
pop
sub
fadd
lds
sub
shl
ret
push
mov
mov
pop
(bad)
cmp
inc
mov
mov
std
pop
sub
pop
pop
ss
repnz
mov
sbb
and
cld
or
(bad)
cmp
mov
popa
cmp
and
or
shl
push
hlt
fsubr
loop
dec
rcl
and
popf
(bad)
mov
mov
mov
mul
mov
mov
add
jnp
add
adc
mul
mov
mov
cmc
and
sbb
or
cmp
cmps
jnp
dec
data16
add
cmps
xchg
cs
cmc
sahf
popf
pop
sub
fadd
mov
pop
sub
fadd
lds
sub
shl
ret
push
mov
mov
pop
(bad)
cmp
mov
das
xchg
mov
jg
test
pop
pop
ss
repnz
mov
adc
and
mov
stc
movs
cmc
mov
pop
sub
fadd
scas
pop
pop
sub
fadd
lds
sub
shl
ret
push
mov
mov
pop
(bad)
cmp
shl
movs
mov
jg
test
pop
pop
ss
repnz
mov
adc
and
or
shl
nop
jne
sub
(bad)
or
push
xor
sub
cld
add
cld
jecxz
mov
pop
or
xor
sub
inc
mov
cld
jecxz
mov
mov
add
mov
pop
popf
push
inc
repnz
jge
lods
xor
test
jmp
jge
gs
or
jge
pop
sub
ds
test
std
add
lahf
mov
xlat
cmps
or
pop
fadd
repnz
movs
mov
sub
js
mov
pop
cmp
inc
repnz
mov
stos
lea
jge
sub
mov
dec
inc
repnz
mov
lods
mov
jge
sub
pop
sbb
inc
repnz
out
fild
icebp
and
popf
(bad)
mov
mov
mov
mul
mov
mov
add
jnp
add
adc
mul
mov
mov
cmc
and
sbb
or
cmp
cmps
jnp
dec
data16
add
cmps
nop
ficom
sub
fadd
mov
pop
sub
fadd
lds
sub
hlt
add
mov
mov
mov
or
sub
dec
neg
test
stos
clc
push
or
mov
or
mov
cmp
mov
mov
xchg
icebp
lods
push
xor
mov
retf
adc
cmp
xchg
in
out
fisub
adc
or
lds
push
es
cmp
and
sbb
cmp
dec
imul
mov
or
mov
or
mov
cmp
mov
mov
sub
mov
dec
imul
pop
icebp
stos
clc
push
or
mov
or
mov
cmp
mov
mov
sub
mov
xchg
or
aas
movs
(bad)
enter
mov
pop
xor
sub
arpl
push
es
cmp
es
out
inc
and
adc
dec
sar
into
test
mov
adc
repnz
cmps
sar
jge
outs
adc
or
mov
pop
pop
xchg
and
pusha
adc
or
mov
pop
mov
cmp
adc
or
mov
pushf
mov
xlat
cmps
or
pop
fadd
repnz
movs
mov
sub
js
mov
pop
cmp
inc
repnz
mov
stos
lea
jge
sub
mov
dec
inc
repnz
mov
lods
mov
jge
sub
pop
sbb
inc
repnz
and
lahf
jge
lds
stos
mov
aad
jge
shl
mov
rol
jge
mov
sub
push
std
push
inc
repnz
lods
cwde
ins
movs
sub
mov
call
mov
xlat
mov
shl
mov
rol
jge
mov
sub
push
std
push
inc
repnz
lods
cwde
ins
movs
sub
mov
js
and
dec
idiv
sbb
stos
clc
push
or
mov
or
mov
cmp
mov
add
retf
daa
push
jl
inc
repnz
xor
sub
fsubr
add
dec
rcl
and
popf
(bad)
mov
mov
mov
mul
mov
mov
add
jnp
add
adc
mul
mov
mov
cmc
and
sbb
or
cmp
cmps
jnp
dec
mov
or
mov
repnz
xchg
hlt
movs
out
out
int
stos
nop
add
cmp
mov
popa
cmp
es
xor
popa
cmp
es
cmp
es
clc
inc
and
cmp
es
cmp
es
cmp
and
cmps
pop
mov
outs
and
or
cwde
fisttp
icebp
and
popf
(bad)
mov
mov
mov
mul
mov
mov
add
jnp
add
adc
mul
mov
mov
cmc
and
sbb
or
cmp
cmps
jnp
dec
data16
movs
retf
out
mov
jne
sub
(bad)
or
push
xor
sub
cld
add
cld
jecxz
mov
pop
or
xor
sub
inc
mov
cld
jecxz
mov
mov
add
mov
(bad)
inc
mov
cmp
es
cmp
es
cmp
add
push
out
cmp
es
cmp
es
mov
mov
cmc
cmps
xchg
cs
cmc
sahf
popf
pop
sub
fadd
mov
pop
sub
pop
test
mov
pop
sub
sbb
sti
mov
cmp
pop
mov
loopne
popf
adc
adc
or
sub
cmps
jnp
or
mov
cmp
mov
add
retf
daa
push
jl
inc
repnz
xchg
mov
mov
scas
pop
mov
call
mov
mov
movs
cmc
mov
xchg
mov
shl
inc
inc
repnz
movs
mov
sub
js
mov
pop
cmp
inc
repnz
mov
stos
lea
jge
sub
mov
dec
inc
repnz
mov
lods
mov
jge
sub
pop
sbb
inc
repnz
push
ficom
inc
ret
adc
sub
fcmovnb
jge
shl
mov
rol
jge
mov
sub
push
std
push
inc
repnz
stos
mov
mov
mov
cld
jecxz
mov
mov
out
aas
mov
mov
jmp
sar
push
or
lds
push
es
cmp
and
push
lds
call
mov
cmc
cmps
mov
(bad)
xchg
or
cmps
test
fiadd
mov
sbb
cmps
xchg
cs
cmc
sahf
jge
sub
fadd
mov
cmp
pop
mov
call
adc
movs
(bad)
ror
xor
mov
or
mov
cmp
mov
add
mov
icebp
cmps
mov
ficom
mov
fcomi
cmps
sub
xor
mov
sbb
cmps
xchg
cs
cmc
sahf
jge
sub
fadd
mov
cmp
pop
mov
call
adc
pop
sub
pop
pop
ss
repnz
mov
adc
and
movs
mov
cld
or
mov
repnz
stos
mov
mov
push
inc
repnz
stos
mov
mov
push
inc
repnz
mov
cmp
cmps
xchg
fisub
lods
mov
lock
xchg
js
sub
dec
neg
fnstcw
or
mov
or
mov
cmp
mov
mov
mov
icebp
movs
push
fiadd
jge
int
mov
hlt
sub
fcmovnb
jge
shl
mov
rol
jge
mov
sub
push
std
push
inc
repnz
stos
mov
mov
mov
cld
jecxz
mov
mov
in
mov
or
frstor
adc
or
lds
push
es
cmp
shl
mov
fadd
jge
shl
mov
xlat
push
jge
mov
sub
push
std
push
inc
repnz
stos
mov
mov
mov
cld
jecxz
mov
mov
in
mov
mov
jmp
inc
mov
push
or
lds
push
es
cmp
and
sbb
mov
mov
mul
xchg
or
cmps
test
fiadd
mov
sbb
cmps
xchg
cs
cmc
sahf
jge
sub
fadd
mov
cmp
pop
mov
call
adc
movs
(bad)
xor
stos
clc
push
or
mov
or
mov
cmp
mov
mov
cmps
and
movs
push
ficom
popf
lds
stos
mov
fcmovnb
jge
shl
mov
rol
jge
mov
sub
push
std
push
inc
repnz
stos
mov
mov
mov
cld
jecxz
mov
mov
in
aas
mov
mov
jmp
mov
jne
adc
or
lds
push
es
cmp
and
adc
cmp
mov
mul
xchg
or
cmps
test
fiadd
mov
sbb
cmps
xchg
cs
cmc
sahf
jge
sub
fadd
mov
cmp
pop
mov
call
adc
movs
(bad)
stos
clc
push
or
mov
or
mov
cmp
mov
mov
cmps
and
movs
push
ficom
(bad)
lds
stos
mov
fcmovnb
jge
shl
mov
rol
jge
mov
sub
push
std
push
inc
repnz
stos
mov
mov
mov
cld
jecxz
mov
mov
out
aas
mov
or
frstor
adc
or
lds
push
es
cmp
and
sbb
cmp
mov
mul
xchg
or
cmps
test
fiadd
mov
sbb
cmps
xchg
cs
cmc
sahf
jge
sub
fadd
mov
cmp
pop
mov
call
adc
pop
sub
pop
pop
ss
repnz
mov
adc
daa
icebp
movs
mov
mov
popf
push
inc
repnz
stos
mov
mov
push
inc
repnz
stos
mov
mov
push
inc
repnz
mov
cmp
cmps
xchg
fisub
lods
mov
lock
xchg
js
sub
dec
out
(bad)
movs
enter
mov
pop
xor
sub
arpl
push
es
cmp
sar
loop
frstor
sub
outs
mov
ret
movs
cmc
mov
outs
mov
and
pop
pop
sub
fadd
lds
sub
shl
ret
push
mov
mov
pop
(bad)
cmp
shl
out
(bad)
cmps
jge
push
or
lds
push
es
cmp
and
sbb
cmp
mov
mul
xchg
or
cmps
test
fiadd
mov
sbb
cmps
xchg
cs
cmc
sahf
jge
sub
fadd
mov
cmp
pop
mov
call
adc
movs
(bad)
adc
or
mov
or
mov
cmp
mov
mov
xchg
and
movs
push
ficom
in
xor
stos
mov
fcmovnb
jge
shl
mov
rol
jge
mov
sub
push
std
push
inc
repnz
stos
mov
mov
mov
cld
jecxz
mov
mov
call
or
or
mov
arpl
push
es
cmp
adc
jmp
pop
sub
outs
mov
ret
movs
cmc
mov
outs
mov
and
pop
pop
sub
fadd
lds
sub
shl
ret
push
mov
mov
pop
(bad)
xor
xor
adc
fisub
adc
or
lds
push
es
cmp
and
push
lds
cdq
ud2
mov
mul
xchg
or
cmps
test
fiadd
mov
sbb
cmps
xchg
cs
cmc
sahf
jge
sub
fadd
mov
cmp
pop
mov
call
adc
movs
(bad)
jb
pop
stos
clc
push
or
mov
or
mov
cmp
mov
mov
xchg
icebp
movs
push
ficom
int
xor
stos
mov
fcmovnb
jge
shl
mov
rol
jge
mov
sub
push
std
push
inc
repnz
stos
mov
mov
mov
cld
jecxz
mov
mov
out
aas
mov
mov
jmp
mov
inc
push
or
lds
push
es
cmp
and
fisub
sub
outs
mov
ret
movs
cmc
mov
outs
mov
and
pop
pop
sub
fadd
lds
sub
shl
ret
push
mov
mov
pop
(bad)
cmp
shl
test
mov
ss
repnz
mov
adc
and
or
shl
mov
popf
or
mov
in
movs
cmp
dec
rcl
and
popf
(bad)
mov
mov
mov
mul
mov
mov
add
jnp
add
adc
mul
mov
mov
cmc
and
sbb
or
cmp
cmps
jnp
dec
data16
add
cmps
xchg
cs
cmc
sahf
popf
pop
sub
fadd
mov
pop
sub
fadd
lds
sub
cmc
add
mov
mov
mov
mov
dec
pop
sub
jne
test
pop
pop
ss
repnz
mov
adc
and
mov
stc
movs
cmc
mov
outs
mov
ret
movs
cmc
cmps
pop
pop
sub
fadd
lds
sub
shl
ret
push
mov
mov
pop
(bad)
cmp
adc
add
fwait
jg
test
pop
pop
ss
repnz
mov
adc
and
mov
fld
jge
shl
mov
aam
jge
mov
sub
(bad)
jge
mov
sub
fisub
ret
push
mov
xchg
mov
sub
dec
imul
add
cmps
jnp
or
mov
cmp
mov
add
mov
icebp
cmps
mov
(bad)
xchg
or
cmps
test
(bad)
xchg
call
rcr
lock
mov
(bad)
xchg
or
cmps
xchg
fisub
lods
mov
lock
sbb
icebp
hlt
setp
cmp
mov
test
inc
pop
sub
pop
pop
ss
repnz
mov
adc
and
or
shl
retf
add
mov
mov
aad
or
pop
fadd
repnz
movs
mov
sub
js
mov
pop
cmp
inc
repnz
mov
stos
lea
jge
sub
mov
dec
inc
repnz
mov
lods
mov
jge
sub
pop
sbb
inc
repnz
sub
fadd
(bad)
mov
hlt
sub
aam
jge
mov
sub
push
std
push
inc
repnz
lods
cwde
ins
movs
sub
mov
sbb
setp
xor
xchg
sbb
in
outs
adc
or
lds
push
es
cmp
shl
mov
fcmovnb
jge
shl
mov
rol
jge
mov
sub
push
std
push
inc
repnz
stos
mov
mov
mov
cld
jecxz
mov
mov
out
aas
mov
mov
jmp
sar
push
or
lds
push
es
cmp
shl
mov
push
popf
push
inc
repnz
stos
mov
mov
push
inc
repnz
stos
mov
mov
push
inc
repnz
stos
mov
mov
mov
cld
jecxz
mov
mov
mov
mov
dec
pop
sub
pop
pop
ss
repnz
mov
adc
and
mov
stc
movs
cmc
mov
outs
mov
ret
movs
cmc
cmps
pop
pop
sub
fadd
mov
outs
mov
add
cmp
lods
mov
popf
dec
stos
mov
cwde
or
aas
mov
nop
or
sbb
mov
or
jb
lds
push
es
cmp
mov
sub
ds
mov
mov
repnz
mov
cmc
cmps
xor
cli
movs
cli
mov
cdq
mov
aad
or
pop
fadd
repnz
movs
mov
sub
js
mov
pop
cmp
inc
repnz
mov
stos
lea
jge
sub
mov
dec
inc
repnz
mov
lods
mov
jge
sub
pop
sbb
inc
repnz
sub
fadd
(bad)
mov
hlt
sub
aam
jge
mov
sub
push
std
push
inc
repnz
lods
cwde
ins
movs
sub
mov
sbb
setp
xor
xchg
sbb
in
outs
adc
or
lds
push
es
cmp
shl
mov
fcmovnb
jge
shl
mov
rol
jge
mov
sub
push
std
push
inc
repnz
stos
mov
mov
mov
cld
jecxz
mov
mov
out
aas
mov
mov
jmp
sar
push
or
lds
push
es
cmp
mov
sub
ds
mov
scas
xor
mov
aad
or
pop
fadd
repnz
movs
mov
sub
js
mov
pop
cmp
inc
repnz
mov
stos
lea
jge
sub
mov
dec
inc
repnz
mov
lods
mov
jge
sub
pop
sbb
inc
repnz
sub
fadd
(bad)
mov
hlt
sub
aam
jge
mov
sub
push
std
push
inc
repnz
lods
cwde
ins
movs
sub
mov
sbb
setp
xor
xchg
sbb
in
outs
adc
or
lds
push
es
cmp
mov
sub
ds
and
rcl
and
popf
(bad)
mov
mov
mov
mul
mov
mov
add
jnp
add
adc
mul
mov
mov
cmc
and
sbb
or
cmp
cmps
jnp
dec
data16
add
cmps
mov
(bad)
xchg
or
cmps
test
(bad)
xchg
call
rcr
lock
xchg
cs
cmc
sahf
jge
sub
fadd
mov
cmp
pop
mov
call
adc
movs
(bad)
pop
test
or
mov
or
mov
cmp
mov
add
retf
daa
push
jl
inc
repnz
adc
sub
fsubr
mov
dec
rcl
and
popf
(bad)
mov
mov
mov
mul
mov
mov
add
jnp
add
adc
mul
mov
mov
cmc
and
sbb
or
cmp
cmps
jnp
dec
data16
add
cmps
xchg
cs
cmc
sahf
popf
pop
sub
fadd
cmps
pop
pop
sub
fadd
lds
sub
hlt
add
mov
mov
jmp
movs
test
dec
push
xor
sub
arpl
push
es
cmp
es
popf
push
inc
repnz
mov
fcomi
cmps
test
(bad)
xchg
call
rcr
lock
xchg
ficom
sahf
jge
sub
fadd
ret
push
mov
mov
pop
(bad)
cmp
and
ret
cmps
jge
push
or
lds
push
es
cmp
shl
mov
fcmovb
jge
shl
mov
rol
jge
mov
sub
push
std
push
inc
repnz
lods
cwde
ins
movs
sub
mov
js
and
dec
idiv
pop
or
sub
pop
pop
ss
repnz
mov
adc
and
mov
fld
jge
shl
mov
rol
jge
mov
sub
push
std
push
inc
repnz
lods
cwde
ins
movs
sub
mov
js
sub
dec
test
(bad)
stos
clc
push
or
mov
or
mov
cmp
mov
add
retf
daa
push
jl
inc
repnz
sub
fadd
(bad)
mov
hlt
sub
rol
jge
mov
sub
shl
jge
mov
sub
shl
ret
push
or
cmp
movs
push
xchg
adc
xchg
mov
shl
inc
inc
repnz
movs
mov
sub
js
mov
pop
cmp
inc
repnz
mov
stos
mov
jge
sub
pop
cmp
inc
repnz
mov
scas
mov
jge
sub
pop
sbb
inc
repnz
sub
fadd
(bad)
mov
in
test
test
push
inc
repnz
stos
mov
mov
push
inc
repnz
stos
mov
mov
mov
cld
jecxz
mov
mov
jmp
or
mov
arpl
push
es
cmp
es
popf
push
inc
repnz
mov
fcomi
cmps
sub
xchg
or
cmps
xchg
fisub
mov
cmp
cmps
xchg
fcmovb
xchg
ins
movs
sub
mov
fmul
and
inc
neg
ficomp
or
mov
or
mov
cmp
mov
add
mov
icebp
cmps
sub
jge
call
mov
lock
test
fidiv
mov
sbb
cmps
xchg
fisub
mov
cmp
cmps
xchg
fcmovb
xchg
ins
movs
sub
mov
fmul
and
inc
test
cmp
stos
clc
push
or
mov
or
mov
cmp
mov
add
mov
icebp
cmps
test
fidiv
mov
fcomi
cmps
mov
fidiv
call
rcr
lock
xchg
fisub
mov
cmp
cmps
xchg
fcmovb
xchg
ins
movs
sub
mov
fmul
and
inc
neg
fidivr
or
mov
or
mov
cmp
mov
add
mov
icebp
cmps
mov
fidiv
call
mov
lock
mov
ficomp
mov
sbb
cmps
xchg
fisub
mov
cmp
cmps
xchg
fcmovb
xchg
ins
movs
sub
mov
fmul
sub
inc
test
pop
cli
stos
clc
push
or
mov
or
mov
cmp
mov
add
mov
icebp
cmps
mov
ficomp
mov
fcomi
cmps
sub
popf
xchg
call
rcr
lock
xchg
fisub
mov
cmp
cmps
xchg
fcmovb
xchg
ins
movs
sub
mov
fmul
and
inc
idiv
clc
push
or
mov
or
mov
cmp
mov
loope
cmp
cmps
test
call
sbb
mov
stc
movs
cmc
cmps
popf
pop
sub
fadd
cmps
pop
pop
sub
fadd
mov
pop
sub
fadd
mov
cmp
pop
mov
call
adc
pop
sub
pop
pop
ss
repnz
mov
adc
and
or
shl
push
hlt
fsubr
sub
push
inc
repnz
mov
fcomi
cmps
xchg
fiadd
sub
fadd
mov
pop
sub
fadd
mov
cmp
push
pop
or
mov
cmp
mov
popa
cmp
es
enter
add
jle
and
outs
adc
or
mov
pop
pop
xchg
and
pusha
adc
or
mov
pop
mov
cmp
adc
or
mov
pushf
or
xchg
movs
lahf
enter
mov
xor
sub
arpl
push
es
cmp
es
out
inc
and
adc
mov
xchg
mov
mov
movs
jge
int
mov
in
test
test
push
inc
repnz
stos
mov
mov
push
inc
repnz
stos
mov
mov
push
inc
repnz
stos
mov
mov
jp
cld
jecxz
mov
pop
retf
movs
xchg
cmp
enter
add
jle
and
outs
adc
or
mov
pop
pop
xchg
and
pusha
adc
or
mov
pop
mov
cmp
adc
or
mov
pushf
or
xchg
movs
aas
enter
mov
push
xor
sub
arpl
push
es
cmp
es
out
inc
and
adc
mov
mov
mov
lods
cmc
movs
jge
int
mov
hlt
sub
aad
jge
shl
mov
rol
jge
mov
sub
shl
jge
mov
sub
shl
ret
push
pop
xchg
jecxz
cmp
movs
push
scas
ins
cmp
es
cmp
es
mov
shl
inc
inc
repnz
movs
mov
sub
js
mov
pop
cmp
inc
repnz
mov
stos
lea
jge
sub
mov
dec
inc
repnz
mov
lods
mov
jge
sub
pop
sbb
inc
repnz
scas
mov
cmp
jno
inc
out
(bad)
cmps
jge
push
or
lds
push
es
cmp
mov
sub
ds
mov
stos
xor
dec
push
mov
fisub
ret
sub
fadd
mov
pop
sub
fadd
scas
pop
pop
sub
fadd
mov
pop
sub
fadd
mov
cmp
push
pop
push
(bad)
mov
cmp
mov
popa
cmp
es
enter
add
jle
and
outs
adc
or
mov
pop
pop
xchg
and
pusha
adc
or
mov
pop
mov
cmp
adc
or
mov
pushf
or
xchg
movs
dec
or
xor
sub
arpl
push
es
cmp
es
out
inc
and
adc
mov
mov
mov
cmc
movs
jge
int
mov
hlt
sub
fcmovnb
jge
shl
mov
aam
jge
mov
sub
shl
jge
mov
sub
shl
ret
push
pop
xchg
jecxz
aas
lock
push
mov
popa
cmp
add
retf
daa
push
jl
inc
repnz
test
mov
or
cmp
cmps
sar
jge
outs
adc
or
mov
pop
pop
xchg
and
pusha
adc
or
mov
pop
mov
cmp
adc
or
mov
pushf
or
xchg
movs
lahf
enter
mov
repnz
sub
arpl
push
es
cmp
es
out
inc
and
adc
or
cmp
ss
repnz
mov
push
es
cmp
es
cmp
in
data16
cmp
mov
mov
data16
popa
cmp
es
cmp
and
or
cmp
cmps
jnp
retf
adc
push
mov
adc
adc
xchg
xchg
cmp
es
cmp
es
cmp
es
xchg
mov
ins
cmp
es
cmp
es
mov
retf
movs
xchg
imul
es
cmp
ror
xchg
jl
pushf
(bad)
fadd
jmp
and
ss
sub
call
ins
ss
in
call
adc
or
and
mov
jecxz
daa
inc
jmp
inc
jp
daa
shl
adc
inc
jmp
inc
pop
int3
fwait
call
mov
fidiv
jmp
push
mov
stos
fcom
mov
shr
inc
and
jne
ja
and
mov
jns
daa
call
jmp
cmp
pop
jbe
daa
fsub
adc
inc
jmp
inc
cmp
mul
mov
jno
lea
inc
jmp
inc
pop
int
loopne
xchg
jnp
je
mov
out
daa
inc
jmp
loopne
xchg
je
aam
stos
fidivr
mov
jecxz
daa
fsubr
adc
mul
fmul
adc
inc
jmp
dec
js
daa
enter
inc
jmp
inc
jp
pop
sub
ret
jo
jb
sti
loop
das
inc
jmp
inc
jmp
inc
mov
fnclex
adc
inc
jmp
nop
loop
daa
inc
jmp
inc
push
rep
jle
mov
adc
push
hlt
fisttp
adc
inc
jmp
ret
adc
and
adc
inc
jmp
inc
ficom
jp
daa
shl
adc
inc
jmp
inc
pop
test
daa
and
adc
inc
jmp
inc
mov
fnclex
adc
inc
jmp
inc
dec
and
sbb
inc
mov
daa
fsub
adc
inc
dec
mov
mov
out
daa
inc
jmp
inc
dec
retf
cmps
shl
jnp
jo
mov
jno
jb
sub
adc
inc
jmp
inc
mov
sub
adc
inc
jmp
inc
sub
arpl
(bad)
daa
enter
inc
jmp
repz
daa
and
adc
inc
jp
inc
xor
adc
and
adc
inc
jmp
inc
jp
dec
jg
sub
or
scas
sbb
cmps
xor
out
daa
inc
jmp
and
pushf
mov
and
inc
fwait
loope
daa
and
adc
inc
push
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
jmp
jbe
hlt
pop
xlat
push
inc
dec
loop
daa
inc
jmp
aad
popf
imul
cmc
fwait
inc
jb
mov
xor
inc
cmp
test
aam
dec
fs
inc
jno
sti
add
sti
inc
je
mov
add
push
inc
mov
test
lods
dec
cdq
ins
jecxz
sub
xchg
inc
cmp
fwait
iret
pop
movs
xchg
mov
adc
mov
rcl
add
pop
lods
retf
popf
fs
je
xor
or
cs
cmps
fcomp
(bad)
jmp
sub
jbe
sti
(bad)
mov
mov
push
(bad)
stos
xor
mov
mov
inc
pop
mov
pop
gs
ins
jo
fidiv
mov
push
sub
push
xor
fimul
sub
je
mov
and
xor
pop
xchg
jno
xchg
inc
ins
icebp
sahf
lods
mov
sti
jbe
xchg
sub
and
cmp
rcl
add
mov
mov
jns
stc
(bad)
shl
cs
sub
push
mov
fisttp
in
dec
in
pop
sbb
rcr
add
mov
dec
jae
dec
lods
push
jnp
add
pop
push
clc
or
and
leave
lods
or
push
inc
mov
pop
(bad)
out
sbb
inc
mov
dec
repz
sti
dec
fild
fwait
lahf
fistp
fwait
inc
mov
pop
scas
clc
mov
pop
cmovbe
push
out
repz
setbe
sbb
inc
mov
pop
(bad)
ins
push
mov
inc
mov
pop
cmovbe
fild
mov
jmp
mov
pop
pop
aam
mov
or
push
out
repz
push
inc
mov
pop
scas
ds
lahf
inc
mov
pop
cmovbe
push
mov
inc
mov
pop
cmovbe
lahf
aad
mov
or
pop
cmovbe
sbb
inc
mov
pop
scas
(bad)
sub
lahf
inc
mov
pop
mov
jb
lods
xchg
mov
lods
or
repz
jb
or
and
and
sahf
dec
ret
hlt
or
daa
icebp
mov
fwait
loope
daa
and
adc
inc
jmp
inc
jp
hlt
pop
out
inc
jmp
adc
inc
jmp
aad
std
sti
bnd
fwait
and
mov
xor
outs
jnp
xchg
push
xlat
mov
pop
mov
mov
loopne
sub
mov
(bad)
xor
add
test
push
mov
mov
mov
sbb
xchg
push
jb
mov
mov
dec
fild
pusha
sub
clc
pop
out
into
rcr
add
stos
mov
ficom
xor
shl
mov
add
inc
ins
sub
jl
inc
aad
push
inc
stos
imul
xor
rcl
sub
sbb
push
addr16
jno
movs
mov
test
loop
xchg
jl
mov
rcl
jae
mov
pop
(bad)
stos
jo
in
shl
mov
pop
pushf
pop
(bad)
pop
mov
movs
shl
cs
inc
fisttp
in
dec
in
ja
jmp
rcr
nop
pop
mov
add
ret
shl
jmp
inc
mov
retf
dec
(bad)
mov
js
inc
jecxz
jb
fwait
test
ror
add
sub
mov
push
cdq
mov
dec
es
xchg
in
out
and
clc
sub
movs
dec
xchg
in
dec
xchg
push
cmp
jp
fstp
in
movs
dec
push
loopne
dec
xchg
in
dec
xchg
and
dec
xchg
in
dec
xchg
in
(bad)
xchg
add
fsubr
in
dec
xchg
in
dec
xchg
inc
jp
push
in
dec
xchg
fs
xchg
je
dec
es
push
je
dec
push
call
and
xchg
push
cmp
loope
dec
xchg
in
test
in
movs
dec
push
loopne
dec
xchg
fs
dec
es
xchg
je
fmul
out
dec
xchg
in
inc
xchg
in
jl
push
cmp
loope
dec
xchg
in
dec
xchg
in
test
in
movs
dec
push
loopne
dec
xchg
in
(bad)
xchg
add
fmul
in
dec
xchg
in
dec
xchg
in
not
mov
sub
mov
jb
adc
cmp
xor
and
adc
ret
and
pop
dec
repz
int3
and
jb
sub
fidivr
movs
jb
pop
in
adc
inc
jmp
inc
sub
jecxz
sub
rcr
sub
cmps
jb
mov
adc
inc
jmp
inc
cli
loopne
ss
add
jbe
aam
movs
jb
test
adc
inc
jmp
inc
retf
ss
neg
push
lods
push
fidivr
loope
xchg
mov
fst
outs
ja
or
add
retf
js
mov
dec
jns
xchg
sub
imul
mov
cmps
xor
movs
push
jae
jb
ret
jno
mov
xor
stos
sub
daa
adc
cmp
jle
and
push
(bad)
ins
imul
pop
test
mov
fmul
popa
jnp
jae
mov
add
pop
mov
fld
fidivr
mov
rcr
sub
xor
test
or
or
mov
icebp
pop
in
imul
dec
rol
ss
sub
adc
jp
mov
add
add
repnz
pop
or
mov
adc
stos
mov
add
stos
cdq
fs
xchg
ja
xchg
imul
inc
jae
nop
jnp
push
lea
add
inc
cmps
adc
and
jl
movs
mov
aam
mov
add
and
adc
fwait
mov
fwait
(bad)
pushf
cmp
fisttp
dec
mov
fadd
int3
inc
jno
mov
dec
xor
iret
in
mov
pusha
jns
mov
cld
movs
add
mov
lods
sbb
test
add
mov
test
mov
mov
mov
adc
aas
retf
sbb
cmp
add
and
js
retf
cld
movs
add
mov
push
sahf
mov
cmp
pop
and
add
adc
add
mov
gs
and
add
mov
movs
add
mov
stos
push
lahf
and
retf
lods
add
mov
sbb
and
pushf
adc
add
pushf
pop
daa
jmp
mov
cmps
add
pusha
lods
add
mov
ss
or
jo
and
push
je
mov
pushf
add
fadd
pop
inc
call
mov
neg
adc
and
push
cmps
mov
adc
aaa
pushf
sbb
stos
add
mov
inc
mov
inc
aaa
pushf
sbb
stos
add
mov
push
sbb
sbb
sbb
cmp
and
add
mov
aaa
pushf
sbb
stos
add
mov
test
mov
add
or
add
fnstenv
add
mov
movs
add
mov
xor
sbb
cmp
and
add
mov
inc
mov
inc
ss
sbb
stos
add
mov
xor
sbb
cmp
and
add
mov
ss
sbb
stos
add
mov
(bad)
mov
loopne
pushf
sbb
stos
add
mov
push
hlt
add
xor
sbb
cmp
and
add
sbb
sbb
cmp
and
add
pusha
lods
add
mov
test
add
mov
ss
mov
js
add
and
add
jbe
arpl
mov
cmps
add
retf
mov
cmp
mov
js
add
and
add
jne
arpl
mov
cmps
add
retf
xor
cmp
sbb
sbb
cmp
and
add
mov
mov
adc
mov
add
mov
jbe
dec
and
add
mov
cmps
mov
adc
aaa
pushf
sbb
stos
add
mov
es
test
pushf
sbb
stos
add
mov
test
and
add
and
add
mov
es
enter
mov
movs
add
mov
push
sahf
or
xor
mov
data16
sbb
stos
add
mov
ss
cmp
add
xchg
arpl
xlat
movs
add
mov
ss
mov
stos
add
mov
retf
cld
movs
add
mov
ss
in
and
sub
mov
add
mov
call
add
mov
ss
sbb
stos
add
mov
jge
fs
pushf
adc
sub
sbb
cmp
and
add
jl
pushf
adc
sub
(bad)
dec
ss
vmread
das
stos
add
mov
jbe
mov
mov
add
mov
movs
add
mov
jbe
cmp
arpl
mov
cmps
add
cmps
pushf
sbb
(bad)
xor
add
mov
mov
mov
xor
pushf
test
ret
sub
push
and
sahf
pop
xchg
jecxz
in
ja
ss
cmp
mov
xor
dec
inc
dec
xchg
cdq
lahf
call
(bad)
mov
jbe
or
cwde
fdiv
mov
and
in
and
icebp
xchg
(bad)
jecxz
daa
fsubr
adc
inc
jmp
inc
and
rcr
hlt
mov
in
adc
inc
jmp
lds
sbb
and
sti
iret
hlt
mov
fwait
and
aas
xchg
adc
fsubr
adc
inc
push
mov
adc
inc
jmp
mov
in
int3
and
movs
jb
lock
adc
inc
jmp
ss
mov
mov
sti
pop
ja
mov
jbe
sbb
adc
inc
jmp
inc
pop
(bad)
daa
mov
sub
cmp
pop
(bad)
hlt
mov
jecxz
daa
inc
jmp
lds
sbb
and
sti
iret
hlt
mov
pushf
and
aas
xchg
adc
fsubr
adc
inc
jmp
jl
adc
inc
jmp
mov
sub
and
movs
jb
clc
in
adc
inc
jmp
aad
pop
jmp
je
fwait
cwde
jo
mov
pop
aad
test
es
loop
ins
add
shl
rcl
ins
imul
test
inc
or
jmp
jmp
jne
dec
xchg
mov
xchg
test
pop
dec
(bad)
mov
loope
sti
fstp
mov
mov
retf
les
mov
stos
push
hlt
fcmovne
rol
fs
gs
add
xor
adc
mov
or
loop
sub
mov
mov
ret
jecxz
mov
push
(bad)
stos
cwde
inc
in
mov
xor
mov
jl
mov
fst
lods
lock
and
scas
cmp
inc
xchg
and
arpl
fwait
mov
mov
mov
in
pop
out
je
sbb
adc
adc
mov
cmps
nop
ins
or
stos
mov
ret
xor
frstor
cs
lock
fsub
jb
and
je
shl
xor
and
(bad)
jb
pop
dec
xchg
adc
inc
stc
cmps
rcr
adc
adc
nop
cmps
fiadd
push
call
and
rcl
adc
xchg
bound
inc
fstp
aaa
push
aaa
in
aaa
rcl
ss
aad
ss
aam
ss
in
(bad)
add
fldcw
sub
mov
mov
xchg
inc
ss
(bad)
add
dec
xor
loop
test
sbb
cdq
sub
sub
adc
dec
pop
fmul
call
sbb
jne
xchg
test
sbb
adc
popa
shr
xchg
rcr
test
sub
sbb
into
call
lods
adc
dec
cdq
test
inc
dec
or
adc
dec
pop
push
fdiv
lock
int3
xor
adc
dec
cdq
or
mov
je
mov
sbb
sub
pop
or
stos
(bad)
out
xchg
pop
ret
sbb
data16
or
sti
xchg
sbb
mov
jp
in
fsub
(bad)
mov
jp
mov
je
fwait
js
lea
test
add
bound
xor
inc
lahf
shr
pop
jle
mov
pop
mov
jbe
and
push
adc
and
adc
mov
cmp
test
add
repz
clc
movs
pop
dec
pop
add
mov
mov
pop
arpl
cmp
mov
shl
or
xchg
jg
add
mov
fld
pop
retf
stos
xchg
imul
xlat
sub
stos
retf
(bad)
jmp
fsubrp
jo
mov
rcl
icebp
mov
mov
mov
mov
mov
rcl
adc
or
jb
or
mov
adc
push
mov
aad
fidiv
stos
in
push
xchg
fsubr
push
push
xor
mov
and
inc
dec
ds
push
int3
cmp
dec
outs
pop
out
xchg
mov
dec
shl
add
sbb
pop
(bad)
imul
mov
jnp
mov
mov
shr
dec
pop
aam
push
push
jmp
cmp
mov
aad
repnz
xor
popa
xchg
fs
mov
test
add
ret
push
cmp
inc
sub
lahf
mov
loope
iret
shr
add
outs
pusha
sti
inc
scas
cmp
sbb
loop
out
nop
mov
cmp
add
shl
or
push
push
jnp
aaa
add
fdiv
add
(bad)
xor
jle
call
inc
out
xlat
enter
out
xor
(bad)
xor
sar
in
iret
call
retf
add
fidiv
add
(bad)
xor
jle
dec
nop
fiadd
out
xor
(bad)
xor
(bad)
xor
jns
scas
xchg
loop
outs
out
inc
push
cmp
clc
sahf
xchg
jp
xor
(bad)
xor
(bad)
xor
out
jmp
inc
out
nop
retf
imul
shl
add
(bad)
xor
es
scas
xchg
inc
adc
ret
push
out
lods
add
shl
add
(bad)
xor
jbe
fs
cmp
sbb
inc
scas
cwde
jmp
dec
push
cmp
mov
aaa
and
inc
aaa
add
fdiv
add
(bad)
xor
jle
mov
push
push
lods
add
shl
add
(bad)
xor
jle
call
fidiv
movd
xor
inc
aaa
add
fdiv
add
(bad)
xor
jle
fwait
test
fcmovu
xor
(bad)
xor
jle
nop
sahf
mov
mov
add
lods
add
(bad)
add
(bad)
xor
cli
cmps
div
aad
sar
mov
fidiv
add
shl
add
(bad)
xor
jle
inc
push
jg
lods
xchg
call
or
inc
pop
jmp
xchg
call
mov
cld
idiv
mov
add
shl
mov
enter
loop
xor
shl
add
(bad)
xor
retf
add
fidiv
add
(bad)
xor
jle
xchg
mov
inc
inc
scas
xchg
loop
xor
(bad)
xor
(bad)
xor
jle
dec
add
(bad)
xor
(bad)
xor
addr16
lods
arpl
pop
cmps
pop
in
ins
scas
pushf
loop
mov
inc
jns
addr16
in
ins
scas
pushf
loop
mov
inc
jns
addr16
int
punpckhwd
inc
ja
retf
dec
xlat
adc
imul
retf
xchg
repnz
imul
retf
mov
mov
nop
inc
lods
pop
inc
mov
xchg
xchg
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
dec
(bad)
mov
je
stos
fisub
mov
fdiv
mov
jbe
pop
ficom
xchg
fiadd
ja
inc
sti
loopne
daa
inc
jmp
inc
call
hlt
xchg
xor
cmps
mov
lods
pop
jns
movs
jbe
call
jmp
jmp
mov
dec
test
retf
jp
fst
out
add
inc
outs
fist
js
push
jmp
fcmovbe
mov
nop
int
lods
and
sub
cmps
and
(bad)
jmp
mov
retf
(bad)
mov
mov
xchg
lock
js
clc
jle
sti
shl
fld
sub
pop
jecxz
jmp
test
jg
pop
rcr
sub
sbb
push
and
fisub
int
test
test
jge
mov
ins
inc
xchg
ins
retf
push
in
movs
push
cmps
repnz
jno
xchg
imul
shr
shl
lds
mov
fwait
sub
sub
sub
adc
mov
aad
fldenv
scas
call
aad
stos
mov
xchg
ja
or
sub
mov
and
out
outs
push
xor
or
xor
xor
mov
dec
adc
std
sbb
push
xchg
xchg
pop
pop
push
pop
jg
stc
stc
inc
jne
out
cmps
or
xchg
fisubr
jle
or
stos
and
cmp
ja
into
mov
sbb
lds
pushf
(bad)
xchg
sahf
test
cmps
mov
pop
sbb
pop
ret
test
and
pop
pop
sbb
in
add
jnp
and
fist
fwait
xchg
jbe
add
xchg
daa
add
adc
inc
jmp
call
add
jle
in
gs
cmps
mov
and
sub
cmp
ins
into
push
cmp
mov
(bad)
je
sbb
adc
inc
mov
dec
cdq
dec
ror
dec
cmc
xchg
xor
pop
dec
fwait
test
and
scas
push
test
scas
sar
add
in
je
fld
mov
dec
jnp
js
mov
xchg
popa
inc
mov
jno
pop
stos
push
dec
mov
fdivr
stos
rcr
xor
adc
push
or
scas
rdpmc
or
fist
loope
mov
outs
jecxz
(bad)
mov
inc
jae
pop
xchg
daa
fst
sub
dec
mov
jp
cmp
push
jbe
and
dec
mov
adc
nop
fcom
push
mov
aaa
dec
hlt
jmp
jb
mov
inc
mov
cmp
mov
les
ja
fwait
sub
and
mov
and
popa
adc
mov
ins
fstp
mov
jmp
push
(bad)
les
dec
xchg
movs
sbb
xchg
xor
xchg
or
inc
test
sub
scas
inc
mov
xlat
retf
fisttp
jb
rcl
int
jno
dec
shl
dec
sbb
outs
enter
add
rcl
dec
lods
rol
(bad)
stos
rcl
dec
mov
shr
scas
adc
sbb
or
lds
push
pusha
repnz
or
dec
pop
sbb
sti
sbb
inc
daa
ss
dec
xor
inc
jae
dec
repnz
fcomi
retf
movs
jb
or
adc
inc
jmp
mul
mov
out
daa
fsubr
adc
inc
jmp
inc
mov
and
adc
inc
jp
mov
loope
daa
fsubr
adc
inc
jmp
inc
inc
cmps
mov
les
movs
jbe
call
xchg
pop
mov
xchg
xchg
data16
and
aam
bound
leave
dec
mov
push
pop
shld
jo
mov
adc
inc
mov
fisub
xchg
cld
sahf
xchg
jae
shl
dec
retf
pop
pop
pop
xchg
cmp
pusha
imul
mov
jno
ja
test
jno
mov
jmp
sar
fst
inc
sti
in
aam
cmp
sub
pop
aad
in
xor
stos
push
dec
and
ss
jmp
mov
fist
lea
push
push
push
jecxz
jbe
xchg
imul
jne
cdq
imul
sti
outs
rcr
arpl
cmp
pop
in
jne
hlt
jecxz
jb
jmp
cmp
es
adc
inc
xor
adc
push
inc
mov
push
cmp
test
mov
mov
fld
jmp
mov
hlt
pop
jae
mov
test
and
mov
sub
xchg
imul
push
shl
inc
into
call
xor
test
sti
push
or
rcr
pop
shr
ins
arpl
or
les
sub
in
or
ror
or
xlat
(bad)
mov
cmp
dec
push
adc
cli
mov
or
retf
pop
adc
mov
(bad)
or
push
mov
xlat
cld
xor
jp
xchg
pop
jmp
inc
push
mov
pop
inc
mov
jle
mov
inc
enter
jle
fmul
lods
jecxz
jle
in
rol
add
jle
jl
into
jnp
xchg
scas
jo
jae
cld
adc
jae
sbb
cmp
adc
mov
ror
fs
jge
inc
mov
repz
icebp
pop
dec
mov
imul
imul
jge
mov
les
test
arpl
cmps
enter
into
stos
xor
(bad)
fidiv
cmp
push
xor
mov
scas
push
cmp
sbb
xchg
test
cmps
push
xlat
cld
xchg
xchg
lock
es
cli
scas
lock
test
inc
xchg
sbb
cmps
sbb
ja
add
arpl
jle
out
(bad)
jb
cmp
jb
sbb
repnz
and
cmp
jno
dec
icebp
cmps
mov
xchg
push
daa
(bad)
shr
icebp
nop
mov
fild
inc
loopne
test
mov
jbe
lea
inc
push
inc
jae
jecxz
mov
pusha
lea
sub
mov
stos
xchg
ja
or
cmps
and
cli
mov
adc
scas
repz
bound
mov
and
or
ds
fisttp
push
lods
test
sbb
mov
int3
jae
jb
sub
ins
adc
stos
(bad)
add
jae
and
adc
mov
pop
xchg
push
ret
push
ret
inc
mov
xchg
cmps
popa
fstp
ja
fistp
cmps
popa
fstp
jle
outs
cmp
inc
test
adc
or
jl
outs
inc
in
or
and
mov
cmp
stc
and
lock
daa
inc
jmp
inc
or
inc
xor
cdq
jbe
mov
mov
out
daa
inc
jmp
sub
sub
cdq
pop
inc
jmp
inc
jmp
(bad)
jecxz
daa
fsubr
adc
inc
push
inc
or
jle
mov
mov
fwait
ss
repnz
mov
js
repz
or
xchg
fidivr
mov
(bad)
cmc
add
jae
pushf
aas
fst
and
mov
ror
pop
inc
or
(bad)
cmp
mov
pop
test
xor
int3
mov
jns
scas
fcom
push
in
add
adc
adc
or
sbb
dec
fsub
xchg
dec
mov
mov
fldcw
(bad)
mov
mov
shl
mov
ret
jns
in
(bad)
jl
mov
and
pop
mov
sub
lods
clc
pop
aad
xchg
xor
in
jl
jae
xchg
inc
movs
cli
into
xor
dec
add
cmps
mov
add
adc
xchg
or
mov
mov
js
xchg
(bad)
inc
outs
imul
mov
fistp
jb
and
mov
push
vcvtdq2pd
dec
cmc
je
into
jo
sub
push
stos
add
and
popf
cmps
pop
sub
cmps
sbb
mov
mov
jecxz
hlt
mov
mov
lods
jne
xchg
popa
rcr
and
call
cli
dec
cmp
sub
mov
cmp
sbb
xchg
inc
mov
call
mov
dec
pop
mov
repnz
push
loopne
xchg
jge
or
ins
into
cmp
ret
pop
fisub
pop
adc
aam
ds
mov
sub
mov
fsubr
(bad)
mov
pop
(bad)
aad
push
das
or
cmps
mov
aam
lods
jne
dec
cld
add
fsub
adc
inc
jmp
mov
fiadd
jp
mov
je
mov
out
daa
inc
jmp
inc
jp
mov
out
daa
fsubr
adc
inc
jmp
in
je
daa
fsub
adc
inc
jmp
in
lea
fsub
adc
inc
jmp
inc
cli
lea
fsub
adc
inc
jmp
in
lea
fsub
adc
inc
dec
mov
mov
out
daa
inc
jmp
inc
jp
mov
out
daa
fsubr
adc
inc
jp
jae
pop
(bad)
daa
enter
inc
jmp
inc
push
mov
jecxz
daa
inc
jmp
inc
push
mov
fsub
adc
inc
jmp
out
pop
cmps
div
lock
das
inc
jmp
js
adc
inc
jmp
mov
adc
inc
jmp
inc
pop
and
mov
je
daa
fsub
adc
inc
jmp
inc
sbb
mov
push
cdq
mov
fadd
movs
mov
shl
push
mov
dec
xor
mov
jno
daa
(bad)
stos
jbe
retf
push
ins
mov
dec
mov
(bad)
aam
out
int
adc
repz
mov
jns
ret
fbstp
enter
xchg
data16
jns
jecxz
add
test
xchg
repz
test
pop
and
mov
sahf
movs
mov
rcl
jns
scas
fcom
je
shl
sar
mov
xchg
xor
xchg
in
xor
rcl
shr
mov
xor
add
test
in
cmps
add
cmp
pop
sub
pop
mov
sub
fcomp
hlt
call
cmp
hlt
cmc
aam
hlt
sub
shr
or
push
add
aam
jmp
inc
mov
pop
mov
mov
mov
jbe
fwait
test
rcr
dec
in
out
aam
pop
test
fstp
rcl
imul
pop
pop
xor
jp
or
adc
test
rol
daa
adc
test
lds
fisub
xor
xor
dec
rcl
cli
retf
jg
test
push
xchg
ficom
in
jecxz
cld
inc
xor
inc
push
pop
in
xchg
mov
and
mov
daa
inc
jmp
les
xchg
push
cmps
mov
jl
pop
mov
fadd
mov
add
lock
or
pop
jnp
call
test
retf
je
mov
dec
test
push
in
fist
popa
cmps
jbe
sub
test
fwait
cmp
fs
xchg
and
pop
inc
sbb
xchg
imul
stos
push
mov
jnp
xor
cmps
mov
imul
stc
mov
inc
cmp
sti
ret
jb
mov
xor
stos
sbb
xchg
hlt
jl
adc
pop
cmp
ror
push
je
fldenv
cli
add
fwait
not
fisttp
fdiv
jae
pop
iret
add
pop
ja
jae
nop
mov
cmps
xchg
bnd
cwde
fs
sahf
shr
call
push
daa
fisttp
repnz
adc
dec
xchg
and
imul
xchg
mov
push
mov
mov
jns
ins
fsub
shl
(bad)
jmp
and
sub
add
mov
stc
cmps
mov
push
cmc
and
mov
mov
adc
cmp
cwde
rcr
shl
push
sar
xchg
pop
retf
loopne
push
(bad)
mov
pop
arpl
out
int
sbb
xor
daa
outs
shl
jg
(bad)
jae
popa
jmp
shl
adc
pop
dec
pusha
pop
sbb
xor
in
rol
shl
gs
pop
lock
jne
ins
imul
shl
gs
jne
test
push
imul
imul
ja
jmp
mov
mov
xchg
(bad)
ja
pop
xor
sub
and
ss
adc
fsubr
adc
adc
adc
inc
jmp
inc
dec
adc
daa
inc
jmp
push
loopne
daa
inc
jmp
inc
push
push
mov
das
push
pop
jne
movs
mov
je
ins
ret
lds
adc
xor
mov
jle
mov
inc
add
fisttp
lods
jae
jle
jecxz
push
js
cli
jbe
dec
fsubr
pop
jns
call
push
jl
xchg
jne
icebp
div
dec
adc
sbb
scas
mov
dec
mov
sub
(bad)
aad
xor
pop
ss
movs
mov
test
lea
shl
out
push
mov
aas
je
test
inc
(bad)
mov
fldcw
jg
adc
dec
mov
pop
mov
test
adc
or
(bad)
in
imul
je
stos
push
(bad)
sub
hlt
sub
cld
cs
xchg
xor
mov
arpl
repz
arpl
mov
(bad)
out
sub
jae
js
arpl
cmps
cmp
nop
hlt
or
xchg
mov
dec
dec
and
xchg
mov
fs
test
cmps
mov
movs
push
shl
loop
adc
and
or
mov
test
loopne
aaa
(bad)
add
mov
dec
sar
ins
pushf
cli
push
inc
fistp
pop
pusha
loopne
fild
pop
fild
push
fild
push
jnp
add
aad
dec
into
(bad)
popa
push
ins
fbld
xchg
(bad)
xor
ror
enter
fistp
jecxz
pop
cld
mov
dec
jl
jecxz
sub
cdq
jbe
call
out
daa
inc
jmp
rcr
mov
fsub
adc
inc
mov
xor
pop
enter
test
fstp
mov
jg
daa
fsub
adc
inc
jmp
inc
(bad)
fwait
div
mov
out
daa
fsubr
adc
inc
jmp
inc
pop
(bad)
mov
pushf
mov
(bad)
jp
dec
div
adc
mov
pop
std
xchg
xchg
push
fcom
mov
dec
jns
mov
push
je
mov
loope
shr
push
xchg
cwde
or
mov
sub
lds
jb
(bad)
stos
bound
test
cmps
arpl
sub
xchg
div
xor
push
jne
repz
mov
movs
jle
in
fadd
outs
mov
aam
mov
mov
fistp
in
or
fmul
adc
test
ret
jns
sti
(bad)
mov
ror
fnstcw
mov
or
test
pop
je
leave
inc
in
jmp
rcr
test
xchg
repz
das
inc
test
jle
cs
cmp
cmps
push
imul
push
pop
in
jmp
sbb
jo
shl
mov
push
(bad)
stos
clc
and
mov
push
or
adc
adc
xchg
arpl
push
cdq
inc
jmp
inc
rol
jb
imul
jp
stos
or
out
jl
int3
jbe
jb
and
cmps
mov
jns
adc
mov
dec
cmp
dec
hlt
jae
jb
retf
cmp
cmc
add
push
adc
lods
inc
pusha
add
inc
fucomi
inc
retf
push
adc
imul
push
shl
lds
lea
mov
push
dec
mov
jmp
mov
retf
adc
movs
mov
cmp
jge
imul
mov
(bad)
lea
aaa
xchg
xor
pop
das
and
cli
mov
sub
cdq
pop
push
mov
jecxz
daa
and
adc
inc
sub
test
fbld
scas
sbb
xchg
jae
shl
movs
sbb
jge
test
mov
fidivr
(bad)
hlt
hlt
xor
repz
xlat
and
adc
inc
jmp
inc
push
daa
and
daa
inc
jmp
inc
push
mov
jo
adc
jo
adc
inc
jmp
dec
test
daa
and
adc
inc
jmp
lds
out
cmp
daa
mov
adc
inc
jmp
inc
or
mov
jmp
or
fimul
lods
add
jle
in
(bad)
jo
cli
jle
test
inc
jo
or
inc
mov
retf
js
mov
inc
jns
pushf
and
inc
imul
jnp
and
pop
xor
in
adc
mov
cmp
popa
mov
cmp
fdivr
mov
jbe
push
jae
mov
fdivr
sbb
mov
jnp
fnstenv
outs
shr
inc
mov
mov
mov
mov
ficom
cmp
jle
and
or
and
pop
(bad)
mov
pushf
(bad)
outs
pop
push
js
adc
imul
ins
rcr
imul
jbe
sub
test
pop
gs
adc
sar
add
lds
jb
and
dec
adc
or
jmp
loope
repz
aad
push
xchg
pop
push
mov
pop
add
inc
push
sub
inc
add
inc
mov
inc
xchg
jns
inc
daa
imul
rcr
xchg
imul
aaa
sub
xchg
cmc
dec
out
shl
dec
div
push
cld
inc
xchg
add
push
dec
repnz
mov
(bad)
pop
ficom
inc
mov
ins
(bad)
adc
jb
imul
fwait
pop
bound
mov
mov
mov
xor
lea
fsub
adc
inc
jmp
xchg
daa
add
adc
inc
jmp
inc
jmp
inc
jmp
(bad)
bound
mov
adc
out
hlt
fdivr
pusha
inc
mov
adc
and
adc
ss
xor
push
lods
jecxz
jle
out
es
xlat
fdivr
imul
test
mov
mov
cmps
push
and
push
push
mov
inc
cdq
or
sbb
not
outs
(bad)
arpl
ins
push
mov
mov
jbe
mov
xor
ror
sub
add
push
(bad)
dec
in
push
rcl
xor
stos
arpl
cmp
inc
jnp
mov
adc
lods
rcr
cmp
jbe
or
mov
add
xchg
jbe
shl
sar
mov
push
xchg
add
js
mov
je
add
test
and
or
push
jg
adc
sbb
dec
sbb
shl
and
ins
fstp
ss
das
mov
fnstsw
push
add
xchg
inc
cmp
into
xchg
xor
dec
sti
mov
(bad)
fst
test
push
xor
and
repz
and
inc
jmp
fs
mov
out
repz
jo
gs
sti
jbe
inc
xchg
test
and
loopne
repz
dec
pop
xor
movsx
dec
loop
hlt
dec
cmc
jb
jle
fadd
xchg
dec
inc
push
xchg
dec
inc
push
xor
inc
jne
aam
cmps
mov
repnz
in
mov
repnz
and
dec
lods
repnz
test
outs
hlt
pop
and
fwait
out
daa
inc
jmp
inc
call
icebp
je
fwait
test
lea
test
and
adc
jns
call
pop
cld
(bad)
in
xor
and
and
add
and
fild
sbb
in
push
jl
jae
movs
fisttp
push
bound
dec
cmp
jae
push
stos
or
hlt
xchg
adc
ja
add
sti
clc
jle
fst
inc
mov
js
fwait
adc
mov
les
stc
(bad)
sbb
jno
jnp
jbe
mov
add
sahf
mul
sar
lea
cmps
in
jle
sar
adc
or
hlt
fidiv
cmps
rcl
movs
xchg
and
shr
push
hlt
pop
(bad)
in
ins
inc
xchg
in
aad
xor
dec
aas
out
cmps
xchg
adc
js
clc
jbe
into
inc
inc
pop
and
inc
push
scas
mov
rcl
or
in
aad
xor
push
fs
cmp
xchg
stc
mov
inc
jecxz
jb
sbb
loop
and
add
ja
add
out
(bad)
mov
gs
ret
shl
fiadd
fimul
cs
fistp
pop
ficomp
xchg
(bad)
mov
fnstenv
mov
fidivr
xor
mov
fidivr
inc
fcmovu
mov
movs
fnsave
fnstenv
mov
mov
fnstenv
mov
jmp
jge
int3
mov
outs
test
push
and
mov
pop
mov
bound
mov
cld
or
mov
mov
xor
adc
inc
jmp
inc
jp
fwait
sbb
mov
mov
test
fstp
mov
jg
daa
fsub
adc
inc
jmp
repz
and
out
mov
ss
cmps
fstp
lea
mul
xchg
or
adc
inc
cmp
inc
add
jns
jb
xor
lea
aaa
test
xchg
mov
f2xm1
lahf
not
mov
xor
cld
(bad)
les
popa
dec
sti
inc
xchg
jg
add
inc
xor
pusha
dec
jae
and
and
or
mov
sti
and
mov
in
adc
inc
jmp
pop
jmp
daa
inc
jmp
fs
fst
adc
and
mov
in
daa
inc
jmp
inc
fisub
inc
sar
in
jo
jb
pop
cmp
test
daa
inc
mov
jb
pop
cmp
inc
je
daa
fsub
adc
inc
mov
and
int3
pop
out
daa
sub
das
inc
jmp
pop
or
inc
fwait
jmp
adc
inc
jmp
rcl
mov
mov
cdq
sub
(bad)
jp
retf
lock
fwait
clc
ja
mov
xchg
in
xchg
loopne
outs
les
pushf
cmp
lea
or
mov
mov
pusha
mov
sbb
sar
xchg
sbb
movs
outs
pusha
repz
jnp
jns
mov
push
cmp
mov
jns
repnz
xchg
jo
pushf
outs
icebp
out
inc
mov
cmp
add
mov
out
popa
pop
fs
out
inc
in
arpl
pushf
sbb
pop
in
ficom
ins
dec
xchg
xchg
inc
rep
(bad)
repz
jle
push
js
sbb
xor
fimul
sub
inc
dec
fwait
mov
test
test
in
and
outs
popa
or
push
arpl
call
mov
mov
inc
xchg
test
ror
in
xor
(bad)
sar
pop
lods
loopne
les
(bad)
arpl
sub
push
inc
xchg
sbb
mov
and
pop
add
xor
dec
ret
mov
call
rcr
and
arpl
dec
inc
pop
sub
pop
or
and
mov
(bad)
out
sbb
or
and
jae
and
mov
lahf
movs
xchg
test
test
inc
movs
bswap
out
test
movs
in
neg
hlt
int3
xchg
iret
out
xchg
daa
cmps
in
idiv
movs
movs
mov
mov
add
div
sbb
cmps
iret
out
adc
pop
hlt
in
not
adc
pop
int
outs
cmp
scas
xchg
in
not
sbb
(bad)
in
les
xchg
out
fadd
add
jae
and
out
sbb
or
and
jae
and
jbe
stos
xchg
out
mov
adc
pop
sahf
sub
(bad)
sbb
or
and
hlt
dec
lods
aaa
lods
test
xor
mov
nop
out
mov
mov
fwait
out
mov
jae
and
jae
and
ja
mov
or
and
fistp
mov
adc
or
and
and
rcr
mov
or
es
stc
lahf
mov
xchg
dec
lods
dec
push
push
mov
dec
cmp
jae
and
jae
and
and
mov
test
rcr
jae
and
jecxz
and
sub
jnp
sbb
jae
and
jae
and
jae
es
mov
mov
out
cld
cmp
(bad)
sbb
mov
add
push
mov
jge
jle
fisttp
mov
mov
pop
outs
daa
sub
daa
inc
jmp
inc
pop
lea
into
adc
sbb
mov
xchg
(bad)
mov
sbb
pop
imul
or
xor
inc
xor
mov
jno
jecxz
mov
mov
leave
xchg
xor
jmp
pop
rcl
leave
into
aam
inc
outs
repz
mov
jns
aam
inc
outs
jnp
lea
imul
sbb
retf
and
xor
push
leave
or
sbb
jns
mov
xor
sub
rcr
out
test
fbstp
mov
mov
xchg
pop
mov
mov
lea
imul
adc
repz
test
push
in
addr16
mov
jmp
fs
jle
or
xor
fbstp
jecxz
idiv
push
inc
xchg
outs
xor
jbe
xchg
test
add
rcl
push
retf
mov
cmp
and
cmps
pop
lods
fstp
jb
and
cmp
xor
mov
sar
popa
adc
ins
or
adc
jo
sbb
and
mov
inc
jno
test
data16
inc
ja
inc
jns
test
mov
jle
dec
pop
call
sub
adc
sub
adc
sub
adc
and
xchg
fwait
cmp
fwait
sbb
sub
call
adc
mov
popa
test
call
cs
sbb
sub
loopne
(bad)
das
or
xchg
lock
pop
fwait
and
fwait
sbb
sub
adc
cs
xchg
sbb
test
cwde
adc
lock
mov
sbb
add
gs
sbb
inc
add
push
data16
xchg
xor
xchg
pop
daa
outs
pop
rol
inc
lahf
jno
mov
lea
mov
lea
mov
add
push
inc
pushf
(bad)
and
sbb
mov
ror
push
and
adc
push
test
mov
mov
mov
lea
outs
pop
sbb
nop
pop
cmp
and
sbb
add
cmp
dec
(bad)
fisubr
repz
xchg
add
sbb
pop
sbb
mov
(bad)
and
test
xchg
sbb
mov
lea
mov
add
test
xor
xor
test
xchg
sbb
mov
lea
mov
(bad)
mov
inc
lods
cmp
and
sbb
mov
add
mov
push
add
sbb
mov
add
ror
cmp
and
sbb
mov
lea
mov
jge
call
sbb
add
sub
mov
sbb
mov
lea
jp
or
scas
jno
jmp
jns
mov
inc
xchg
or
sahf
cmp
pop
mov
pusha
ret
lahf
loope
scas
pusha
test
jb
sub
rcl
cmp
adc
sub
pop
into
adc
mov
fcomp
mov
fdiv
je
test
push
dec
leavew
sub
sub
repz
mov
add
es
movs
dec
jns
in
mov
inc
mov
add
pop
les
push
in
leave
sbb
mov
mov
test
mov
jb
mov
pop
inc
cmp
ret
mov
(bad)
xchg
pushf
div
cwde
(bad)
sub
fld
lea
pop
daa
mov
or
cmp
add
pushf
sbb
movs
cmp
arpl
xchg
fs
xchg
sub
cmps
cmp
jecxz
jo
lods
cwde
push
aad
nop
xchg
leave
add
sti
mov
inc
mov
push
popaw
(bad)
out
dec
xor
test
pop
in
cmp
push
xchg
fidiv
out
and
xor
pop
push
add
jnp
jns
mov
add
xchg
sub
jl
sbb
ret
cmp
in
xlat
mov
and
xchg
ja
or
ins
and
pop
jle
sub
rcr
xor
ror
pop
sub
adc
pop
inc
test
pop
sbb
(bad)
bound
dec
jb
jge
jl
mov
enter
clc
jl
inc
jmp
stos
in
sbb
jo
jp
jl
jle
mov
outs
sbb
xlat
fiadd
jp
in
fmul
(bad)
jl
jp
js
jp
jl
jne
cld
imul
in
pusha
(bad)
stc
mov
add
xchg
(bad)
jg
add
dec
out
and
or
popa
mov
(bad)
fimul
out
pop
jp
js
jp
jl
icebp
cld
ins
sbb
mov
sar
pop
jp
jl
jp
jl
mov
mov
jl
push
sti
ins
sub
and
cmp
clc
jl
jne
cld
imul
mov
jp
cmp
fdivr
jp
jo
jp
jl
(bad)
jl
iret
dec
mov
pop
gs
or
mov
fisub
sub
test
adc
pushf
jbe
iret
and
jb
in
mov
jns
mov
(bad)
mov
dec
fimul
lods
xor
jle
out
xchg
in
adc
fsub
cwde
pop
jecxz
and
mov
mov
movs
xlat
mov
lea
data16
in
jb
add
pop
xchg
ja
ja
push
ret
push
jae
pop
sbb
mov
jecxz
mov
cmp
sti
jg
mov
xchg
mov
pop
xchg
and
(bad)
jecxz
push
inc
lock
cmp
dec
add
mov
(bad)
dec
lods
xor
push
in
mov
shl
test
mov
xor
xor
or
jmp
adc
pop
mov
sar
mov
aad
fidiv
stos
pusha
shr
push
(bad)
stos
sub
shl
dec
stos
(bad)
loop
add
xor
push
out
jb
and
mov
stc
push
movs
xchg
jnp
dec
lea
or
xchg
sbb
xchg
inc
push
sahf
mov
and
mov
xchg
je
xchg
icebp
mov
dec
and
xor
stos
mov
cld
mov
sbb
imul
fs
mov
(bad)
mov
test
add
mov
dec
gs
push
clc
push
mov
dec
gs
fadd
xor
test
loope
cmp
xor
dec
std
xor
inc
std
xor
cli
shr
push
jmp
inc
cmps
inc
cmc
bound
add
lods
inc
mov
dec
sub
fyl2xp1
fmul
xor
dec
std
xor
dec
std
add
xor
mov
fyl2xp1
fmul
xor
sti
mov
fmul
xor
fadd
xchg
push
clc
push
mov
dec
gs
int3
mov
into
sbb
cld
cdq
jmp
gs
push
dec
cmp
xor
dec
std
xor
mov
je
mov
jmp
cmp
loope
dec
push
fmul
xor
inc
std
mov
(bad)
push
in
imul
cmp
fisubr
in
inc
lea
add
xchg
sahf
xchg
inc
fxch
cmp
dec
std
xor
dec
std
inc
cmps
daa
jle
call
push
pusha
or
les
imul
fadd
add
in
psraw
push
aas
fadd
xchg
jb
stc
cmp
inc
sub
rcr
fadd
xor
out
call
cmp
push
aas
fadd
shr
shr
push
jmp
loope
inc
fldenv
cmp
dec
gs
test
(bad)
shr
movs
inc
cmp
adc
popa
lods
adc
xor
jmp
popa
add
mov
fadd
xor
(bad)
shl
movs
inc
lds
cmp
movs
mov
fidivr
xor
dec
std
xor
dec
std
icebp
inc
sub
test
jne
cdq
aas
fmul
xor
dec
std
popa
inc
movs
jns
pop
ficom
mov
or
sbb
fadd
xor
call
and
ja
pop
jne
stc
fmul
xor
dec
std
xor
fild
add
dec
std
xor
dec
std
inc
xchg
xor
dec
std
icebp
sti
aad
mov
aas
adc
popa
cmp
fadd
rcr
cmp
dec
std
xor
dec
std
xor
inc
inc
(bad)
fmul
cmp
fadd
xor
sar
and
jge
push
jmp
arpl
fmul
xor
dec
std
mov
pop
or
adc
sub
mov
fnstcw
aas
fmul
xor
inc
std
add
gs
fadd
icebp
push
dec
std
xor
inc
std
loope
fs
mov
rcl
sbb
enter
push
(bad)
sbb
into
fmul
xor
dec
std
xor
dec
std
mov
dec
adc
popa
sbb
push
retf
jns
xor
stc
sub
fmul
xor
dec
std
xor
cdq
std
rcr
or
xor
dec
std
xor
jne
xchg
jb
mov
cmp
fadd
xchg
jb
stc
mov
fmul
xor
dec
std
xor
inc
std
xchg
push
fstp
inc
dec
gs
fsub
inc
inc
fst
fmul
cmp
fadd
xor
sti
mov
fmul
xor
fadd
int3
addr16
add
fldcw
cmp
fmul
add
in
mov
fmul
xor
fmul
loope
dec
std
cmp
inc
std
mov
push
dec
and
xor
inc
std
mov
dec
and
xor
inc
std
mov
jbe
and
xor
inc
std
xchg
inc
cdq
stc
cmp
dec
adc
xor
out
push
ins
dec
gs
fadd
xchg
inc
mov
movs
fmul
xor
inc
std
xchg
inc
test
dec
fsubr
(bad)
popa
mov
mov
add
mov
sub
fmul
xor
lods
and
cdq
xor
dec
gs
fdiv
dec
iret
dec
fnstcw
fmul
xor
dec
std
xor
stc
sti
and
repnz
push
or
in
xor
dec
std
xor
inc
std
loope
leave
stc
test
mov
dec
loop
inc
dec
aad
fmul
xor
dec
std
xor
mov
rcr
int
fmul
xor
dec
std
add
dec
push
fadd
xchg
nop
cmp
dec
std
xor
inc
std
xor
push
push
in
jp
inc
jbe
test
ins
rcl
in
dec
sbb
or
in
fld
bound
fmul
xor
out
add
std
xor
inc
std
xchg
inc
cdq
push
cmps
fmul
cmp
fmul
add
dec
dec
mov
fldcw
fmul
xor
inc
std
mov
cmc
in
inc
(bad)
icebp
pop
adc
leave
xchg
mov
dec
mov
fmul
xor
fadd
popa
dec
sbb
mov
inc
sbb
scas
in
dec
dec
gs
js
inc
ja
jmp
xchg
xor
fmul
xor
and
mov
jmp
gs
fmul
std
and
cmc
popf
mov
loopne
imul
dec
gs
fadd
std
mov
inc
fimul
gs
fld
pop
aaa
pusha
(bad)
add
ins
ins
jne
inc
mov
cmp
retf
cmp
dec
gs
fadd
mov
lds
mov
inc
jb
test
inc
jge
std
inc
mov
mov
into
sub
loop
cli
retf
sub
ja
sbb
fadd
xor
dec
cmp
xor
dec
std
xor
rcl
pop
sub
lods
fisubr
test
sub
aas
push
push
fistp
inc
es
cmp
xor
(bad)
std
sbb
imul
xor
dec
std
push
sbb
dec
add
xor
inc
clc
mov
lds
mov
inc
jb
test
inc
jge
std
inc
mov
mov
into
das
sahf
ret
into
sahf
imul
retf
xor
fadd
popa
mov
push
mov
in
mov
pop
push
jl
cwde
mov
fmul
icebp
retf
test
mov
mov
pop
test
push
(bad)
lea
inc
fld
mov
cmps
inc
cmc
bound
pop
bound
push
pop
or
pop
imul
inc
loope
jle
dec
ja
ret
hlt
push
jmp
loopne
inc
dec
fnstsw
dec
std
xor
(bad)
inc
data16
xlat
inc
fmul
aas
fmul
xor
dec
std
inc
add
dec
int
fmul
xor
dec
std
xor
retf
lods
mov
cmp
push
ret
and
mov
jmp
gs
pusha
stc
call
lods
inc
frstor
(bad)
fidivr
movs
cmp
mov
cld
cmc
pop
mov
cmp
enter
jmp
xlat
sbb
add
dec
pop
mov
shl
cmp
inc
repz
or
and
xlat
rcr
push
retf
adc
daa
inc
jmp
jecxz
adc
and
adc
inc
jmp
sub
jg
ins
push
inc
mov
fadd
inc
pop
aad
sub
push
pop
inc
cmp
mov
pop
xor
sub
es
imul
mov
rcl
pusha
mov
or
bound
sbb
ret
cmp
and
xchg
imul
data16
mov
fdivr
sbb
push
(bad)
or
mov
into
(bad)
arpl
inc
stos
sti
ret
jb
mov
mov
pop
(bad)
cmp
jl
ss
aas
ins
xor
mov
jle
jo
xchg
inc
gs
jle
dec
ret
jecxz
pop
cmp
jp
and
xor
fild
nop
mov
xchg
jp
mov
(bad)
(bad)
push
repz
aam
jle
jnp
inc
stos
ins
rcl
dec
add
push
arpl
test
inc
in
inc
mov
fstp
jbe
push
lods
inc
cmp
movs
xor
and
xor
(bad)
add
cs
mov
ja
xchg
dec
(bad)
hlt
and
pop
mov
add
(bad)
or
test
sbb
rcl
push
jae
jns
mov
inc
test
push
inc
std
jle
cmp
jae
scas
xchg
xor
jns
adc
lods
xchg
cdq
adc
aaa
leave
stos
lods
cmp
stos
lods
cmp
mov
jp
push
xor
(bad)
into
aas
loopne
fwait
cmp
stos
xor
cmp
push
scas
ins
push
cmp
mov
leave
movs
lods
lods
adc
data16
push
data16
push
cmp
mov
cli
cs
push
stos
test
leave
stos
lods
cmp
stos
lods
cmp
lods
lods
sub
cmp
xchg
stos
lods
cmp
scas
lods
cld
push
leave
scas
fs
xchg
cdq
adc
xor
stos
lods
cmp
stos
lods
cmp
test
jge
leave
stos
lods
cmp
stos
lods
cmp
lods
lods
sub
cmp
data16
inc
sub
inc
movs
mov
cmp
jo
sbb
cmp
or
cmp
stos
int
leave
jbe
mov
xlat
or
leave
stos
lods
cmp
mov
stos
lods
push
cmp
add
enter
sbb
cmp
cmp
xchg
test
jl
push
mov
push
or
stos
popf
xor
test
ins
cmp
stos
lods
cmp
popa
scas
lods
xor
xor
cmp
int
mov
leave
mov
test
xor
lods
lods
cmp
push
scas
int3
push
cmp
mov
leave
stos
lods
cmp
movs
lods
cmp
xor
cmp
sahf
mov
lahf
push
stos
test
leave
scas
lods
lods
dec
repnz
sub
jmp
sbb
cs
repz
and
leave
stos
lods
cmp
test
push
push
retf
aas
leave
stos
lods
cmp
mov
scas
lods
push
ss
mov
aaa
stos
ins
cmp
stos
lods
cmp
scas
lods
pushf
push
leave
scas
pop
stos
stos
int
leave
stos
lods
cmp
jbe
lods
push
xor
dec
idiv
cmp
xor
hlt
jns
ss
stos
lods
cmp
stos
lods
cmp
cmps
lods
lods
gs
push
sbb
mov
shl
rcr
jns
leave
stos
lods
cmp
stos
lods
cmp
pop
stos
int3
int
xchg
pop
(bad)
stos
ins
cmp
stos
lods
cmp
pop
lods
lods
or
fnstenv
leave
stos
lods
cmp
stos
lods
cmp
movs
lods
pushf
std
out
sti
xchg
ja
ins
cmp
stos
lods
cmp
push
in
int
int
leave
stos
lods
cmp
stos
lods
cmp
mov
cmp
movs
lods
ins
fs
test
add
cmc
jo
std
push
add
stos
lods
cmp
stos
lods
cmp
or
cmp
stos
int
leave
stos
lods
cmp
mov
test
shl
jmp
out
aaa
test
push
and
stos
sbb
cmp
scas
lods
lods
xchg
pop
add
jge
in
push
fs
jns
aas
enter
cli
push
leave
mov
lods
xchg
cdq
arpl
xor
stos
lods
cmp
stos
lods
cmp
(bad)
inc
xchg
cmp
mov
fwait
cmp
stos
push
cmp
stos
lods
cmp
scas
lods
pushf
push
leave
scas
pop
stos
stos
int
leave
stos
lods
cmp
stos
lods
cmp
ins
scas
cld
retf
dec
push
xchg
ficom
fisubr
scas
int
add
cmp
mov
sub
push
cmc
sahf
push
stos
lea
leave
stos
lods
cmp
movs
lods
cld
jns
test
cmp
mov
test
xor
stos
lods
cmp
stos
lods
cmp
test
imul
leave
stos
lods
cmp
push
scas
lods
push
cmp
cmp
stos
xor
cld
fisub
mov
adc
dec
adc
mov
jns
adc
push
je
push
jle
pop
push
cli
adc
push
cmp
dec
fnsave
mov
xchg
(bad)
into
jmp
or
cmp
leave
scas
dec
stos
sahf
call
stos
test
leave
scas
lods
cld
fisub
mov
adc
dec
adc
mov
jns
adc
ins
adc
(bad)
jle
rcr
fldenv
fcom
sub
leave
add
cmp
cmp
clc
dec
retf
pushf
pop
xor
sub
pop
pop
cmp
pop
ficom
xchg
rol
pop
pop
jp
mov
hlt
test
fstp
mov
dec
jno
and
jns
mov
call
sbb
gs
jnp
lea
add
mov
fstp
add
push
int3
dec
jns
in
stc
xor
retf
adc
mov
hlt
cmps
scas
jb
sti
mov
inc
dec
stos
jo
push
mov
push
sti
daa
push
mov
mov
sub
fldenv
retf
jbe
in
(bad)
fwait
inc
cmp
pusha
shr
mov
and
jnp
jle
mov
call
and
test
and
add
movs
in
mov
dec
push
lahf
je
sbb
xor
jb
and
or
test
test
popa
inc
mov
cld
ror
xor
and
xchg
les
push
movs
xor
mov
mov
sbb
cdq
sbb
mov
or
jp
sub
cmps
mov
xchg
bound
in
test
inc
pop
and
daa
je
sti
addr16
xchg
mov
pop
je
lea
jp
nop
adc
cmp
sub
fnstenv
xchg
jmp
sub
(bad)
sbb
jg
sti
mov
inc
std
iret
dec
sbb
arpl
cli
lahf
xchg
sbb
lahf
gs
cli
lahf
gs
cli
lahf
gs
cli
lahf
gs
cli
xchg
gs
xchg
fs
clc
xchg
sti
retf
fs
xchg
in
dec
xlat
(bad)
cmp
loopne
out
sti
leave
(bad)
out
or
hlt
retf
aam
pop
clc
fisub
clc
(bad)
add
jmp
fs
stos
aad
mov
xchg
dec
add
enter
gs
lds
arpl
aam
pop
clc
fisub
clc
fidivr
jmp
pop
daa
arpl
call
iret
dec
mov
jmp
jl
pop
rcl
addr16
clc
fisub
(bad)
sbb
movs
loopne
fs
pop
jge
inc
jnp
dec
je
sti
into
fisub
pusha
fisub
clc
fisub
clc
mov
das
clc
(bad)
stc
pop
rcr
pop
clc
fisub
clc
retf
cld
inc
stos
iret
xor
push
pop
out
stc
pop
rcl
addr16
clc
fisub
clc
mov
in
loop
ret
lods
mov
jb
sbb
ror
lods
outs
mov
in
in
enter
xor
push
es
lahf
dec
mov
xor
sub
xor
pop
(bad)
xchg
addr16
mov
in
lods
xchg
fstp
dec
mov
mov
adc
cmp
cwde
pop
hlt
xchg
dec
mov
retf
jbe
push
ret
sbb
outs
or
bound
sti
mov
sub
repnz
fdiv
popa
rol
mov
retf
call
adc
ret
jb
movs
fisub
rcl
sub
and
scas
sbb
mov
mov
fidiv
(bad)
outs
sbb
retf
dec
and
mov
popa
inc
mov
ja
or
add
jmp
stos
(bad)
loop
push
adc
enter
lea
mov
inc
xchg
in
(bad)
aad
or
adc
and
scas
push
je
iret
xor
mov
xor
in
mov
jmp
inc
xchg
xchg
or
xor
xor
mov
mov
xor
push
hlt
retf
mov
ret
int
out
mov
or
add
jb
sub
mov
add
add
mov
ins
cld
mov
jb
mov
pop
mov
xchg
inc
jbe
pop
icebp
hlt
aas
in
mov
push
add
fistp
sub
jmp
jmp
iret
and
dec
les
mov
aas
and
inc
jmp
sub
not
adc
pushf
ret
(bad)
dec
aad
mov
pushf
imul
mov
jo
imul
xchg
mov
jb
pop
ficom
rcl
xchg
adc
cwde
out
adc
inc
jmp
inc
jmp
inc
jmp
fsubr
adc
inc
jmp
inc
(bad)
retf
mov
fsub
jmp
stos
mov
daa
push
inc
dec
out
adc
inc
jmp
fbstp
dec
repz
mov
push
(bad)
fsave
mov
xchg
dec
jle
jp
dec
repz
fwait
or
mov
pop
cmp
mov
mov
sub
dec
jno
xor
pop
ins
mov
dec
test
retf
jg
mov
ss
and
cmp
mov
inc
jno
in
jns
mov
push
sti
xor
mov
cwde
mov
fwait
or
sbb
or
mov
ficomp
repz
lea
xchg
je
jp
xchg
mul
mov
mov
ds
imul
test
imul
fdivr
jnp
shl
push
jmp
push
pop
test
xor
jle
imul
xchg
dec
loop
mov
push
fidiv
cmps
pop
push
push
mov
push
pop
hlt
sub
call
mov
fsub
push
jmp
repz
inc
fisttp
in
ret
bound
dec
or
xchg
and
xchg
jb
xchg
out
stc
ds
push
ret
jo
(bad)
mov
rol
enter
stos
fadd
cmps
dec
dec
mov
mov
fld
pop
and
mov
add
adc
jbe
fwait
and
and
sub
pop
gs
xchg
out
not
stos
push
inc
xchg
xor
scas
test
or
fnstcw
not
mov
ins
sahf
das
sti
jmp
mov
push
loope
repnz
dec
mov
jmp
mov
jecxz
mov
push
jmp
mov
jns
sti
push
jmp
mov
push
(bad)
(bad)
and
cdq
psllw
mov
push
in
mov
jmp
mov
push
movs
lea
jns
(bad)
push
jmp
mov
pop
stos
icebp
push
jmp
mov
mov
ret
adc
int3
cli
adc
adc
int3
test
sbb
mov
not
(bad)
xor
mov
mov
push
jmp
push
jmp
mov
dec
cmp
xor
jmp
mov
xchg
cdq
mov
push
jmp
mov
arpl
(bad)
repnz
jmp
mov
push
cmp
cli
push
in
mov
jbe
cmp
iret
xchg
or
je
ins
dec
jbe
popf
pusha
call
(bad)
jns
cld
push
jmp
mov
push
jmp
dec
icebp
push
jmp
mov
push
out
and
(bad)
repnz
jmp
mov
jmp
mov
push
jmp
pop
mov
mov
shr
xor
mov
repz
mov
jns
stc
push
jmp
mov
push
sub
push
jmp
mov
xchg
jns
repnz
jmp
mov
jmp
mov
push
out
jb
pop
(bad)
rol
call
push
jmp
mov
and
(bad)
repnz
jmp
mov
push
jmp
mov
push
out
xchg
pusha
xchg
aaa
ret
ins
cmp
xor
jmp
mov
xor
mov
jecxz
mov
int
push
stc
push
jmp
mov
or
repz
jmp
mov
push
out
mov
rcl
shr
jge
cmp
xor
mov
cld
push
jmp
mov
jge
cmp
xor
mov
cld
push
jmp
mov
or
push
push
jmp
mov
xchg
pop
mov
push
jmp
mov
push
cmp
push
out
mov
int
inc
dec
jmp
mov
retf
jmp
mov
push
jmp
repnz
jmp
xor
jmp
mov
push
jp
or
push
jmp
mov
push
jmp
repnz
lods
pop
shl
les
xlat
lea
les
pop
jmp
(bad)
retf
aaa
arpl
mov
push
jmp
mov
push
jmp
repnz
mov
push
loope
repnz
repnz
inc
(bad)
cmp
or
xchg
jp
aam
shl
std
jmp
mov
push
jmp
mov
push
jmp
mov
rol
mov
push
jmp
mov
(bad)
imul
nop
fnstcw
icebp
push
jmp
mov
push
jmp
mov
push
jmp
dec
repnz
jmp
mov
push
mov
iret
jns
fist
dec
cli
push
jmp
mov
jmp
mov
sub
push
out
xor
mov
push
jmp
mov
push
jmp
mov
adc
(bad)
clc
push
jmp
repnz
sti
mov
(bad)
icebp
push
call
push
jmp
mov
push
in
mov
(bad)
jmp
mov
push
jecxz
jb
cmp
push
out
xor
mov
push
jmp
mov
push
in
mov
(bad)
jmp
mov
push
jmp
mov
ret
jmp
mov
push
loope
mov
rep
push
inc
lods
jmp
mov
push
jmp
xor
jno
popa
xchg
leave
adc
push
jmp
mov
push
jmp
mov
retf
jmp
mov
push
jmp
mov
jmp
mov
push
jecxz
jb
sub
push
loope
repnz
jecxz
loop
jmp
loopne
stc
fcmovbe
push
jmp
mov
(bad)
jmp
mov
push
jecxz
jb
cmp
push
out
xor
mov
push
jmp
mov
(bad)
jmp
mov
push
jmp
mov
ret
jmp
mov
push
mov
or
xchg
pop
sub
push
jmp
mov
push
jmp
xor
fsubr
rcr
push
jmp
mov
push
in
mov
sti
jmp
mov
mov
jns
sti
push
loope
not
mov
inc
sahf
jg
ins
add
lods
fcmovne
ja
push
and
jl
jecxz
push
push
dec
daa
lods
fwait
addr16
push
cmp
mov
sub
cmp
jmp
pop
int3
fwait
call
mov
fidiv
jmp
push
mov
test
push
int3
stos
cli
jo
hlt
pop
push
push
inc
and
daa
inc
jmp
inc
pop
bound
sbb
in
hlt
je
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
jbe
rcr
pop
(bad)
and
or
mov
fcomp
sbb
fldcw
jnp
aaa
dec
mov
and
mov
sbb
js
adc
inc
jns
inc
aaa
sub
push
test
bound
lods
jmp
and
push
je
(bad)
push
mov
cs
or
rcr
dec
stos
popa
rol
push
repz
cld
and
cld
mov
xor
mov
lea
pop
aaa
jp
mov
pop
mov
add
sti
xor
mov
push
mov
jmp
sub
and
sub
adc
dec
cmp
push
inc
daa
adc
mov
pop
xchg
fcom
lea
rcl
xchg
mov
push
(bad)
sub
mov
and
out
mov
mov
jae
inc
repz
and
(bad)
arpl
sub
clc
sbb
xor
arpl
or
sbb
mov
and
xor
push
gs
sub
or
jmp
push
in
loopne
adc
cld
scas
mov
sti
stos
jb
mov
push
into
push
or
sub
mov
and
pop
jnp
lea
xchg
call
push
mov
mov
and
sub
repz
add
mov
je
dec
add
test
std
dec
or
arpl
ret
sub
fld
push
addr16
cdq
int3
arpl
ret
sub
stos
fld
ret
arpl
(bad)
arpl
ret
das
repnz
dec
push
addr16
or
arpl
stos
fsubr
in
std
sti
mov
(bad)
arpl
ret
das
repnz
sbb
dec
or
arpl
ret
das
jb
dec
mov
arpl
ret
sub
fld
push
addr16
cdq
int3
arpl
jb
xlat
mov
fistp
into
arpl
ret
sub
pop
(bad)
(bad)
ret
sub
stos
(bad)
das
push
jg
cmc
sbb
scas
aad
inc
dec
or
jecxz
sub
std
dec
mov
arpl
ret
sub
cld
xchg
cs
xlat
mov
call
or
dec
jmp
(bad)
arpl
(bad)
arpl
ret
sub
fld
push
addr16
cdq
int3
arpl
stos
(bad)
das
push
jg
cmc
sbb
scas
aad
inc
dec
or
arpl
ret
sub
std
dec
mov
arpl
ret
sub
cld
xchg
cs
xlat
mov
call
or
dec
jmp
(bad)
arpl
(bad)
arpl
ret
sub
fld
ret
das
push
jg
cmc
sbb
scas
aad
inc
dec
or
arpl
ret
scas
ret
arpl
(bad)
arpl
mov
data16
push
mov
es
dec
jmp
(bad)
arpl
(bad)
arpl
ret
sub
fld
push
addr16
cdq
int3
arpl
ret
sub
pop
jmp
(bad)
(bad)
clc
lahf
cmps
add
mov
arpl
shl
ret
sub
cld
hlt
lahf
xchg
ds
ja
mov
repz
jbe
pop
mov
push
push
push
dec
jno
xchg
mov
jb
jecxz
xchg
mov
jb
out
out
daa
and
adc
inc
fcmovbe
xlat
inc
jmp
inc
cli
out
push
cld
ja
sbb
mov
daa
inc
jmp
sub
daa
inc
jmp
inc
jmp
inc
jmp
repnz
mov
cmp
add
jecxz
je
daa
fsub
adc
inc
jmp
rcr
clc
in
daa
inc
jmp
inc
sub
xchg
in
adc
js
adc
inc
jmp
clc
in
and
inc
sub
push
jmp
adc
inc
pop
in
daa
clc
in
daa
inc
jmp
inc
jmp
inc
jmp
hlt
xor
daa
and
sub
scas
pop
test
adc
inc
jmp
inc
cli
adc
daa
inc
jmp
inc
sbb
and
push
sub
js
xor
pop
sub
aaa
arpl
adc
inc
jmp
inc
mov
adc
inc
jmp
inc
pop
scas
pop
test
adc
jmp
(bad)
fisubr
mov
rol
std
and
dec
call
push
mov
mov
pushf
mov
call
adc
inc
jmp
sar
jmp
je
fwait
sub
mov
xor
(bad)
cmc
mov
adc
pop
arpl
add
shl
jnp
sbb
shl
(bad)
inc
mov
ins
dec
mov
and
(bad)
or
shld
cmp
push
imul
mov
ds
rol
sti
or
fmul
xchg
fdiv
inc
not
repz
cdq
in
mov
fidiv
fld
mov
push
arpl
xchg
add
cmp
push
and
xor
pusha
adc
popf
loopne
adc
or
pusha
push
hlt
jae
jb
shr
jns
and
cmp
sti
or
push
(bad)
ins
and
mov
xchg
and
in
inc
xchg
mov
in
jo
adc
mov
inc
fisttp
mov
in
and
cmp
pop
movs
xor
jle
mov
popa
mov
loopne
cmp
xor
dec
mov
mov
inc
arpl
jns
pusha
(bad)
mov
mov
sahf
jmp
(bad)
mov
push
jnp
nop
test
jp
dec
pop
(bad)
hlt
jmp
jb
repz
stos
imul
jmp
xchg
xchg
jbe
xchg
popa
inc
mov
jmp
jb
and
sub
mov
call
and
adc
xor
into
cld
lock
dec
cwde
cmc
aaa
shl
sbb
xchg
into
cld
pusha
or
imul
cli
enter
data16
out
bound
retf
or
hlt
lock
div
jg
ins
ins
mov
or
bswap
hlt
lock
lock
icebp
hlt
xor
into
sti
lock
mov
pusha
push
add
xor
or
hlt
pop
or
hlt
lock
lock
lock
into
hlt
lock
hlt
lock
push
imul
mov
xor
stos
fwait
mov
pusha
pusha
jnp
into
xchg
sbb
or
cld
pop
or
and
bswap
hlt
push
or
hlt
lock
(bad)
lock
outs
jno
lahf
mov
pop
cmp
stos
fwait
mov
pusha
pusha
jnp
les
add
hlt
test
into
hlt
lock
clc
repz
xchg
pusha
dec
push
push
retf
xchg
xor
xor
into
cmc
lock
repz
mov
je
mov
pop
lds
jle
cmp
fs
ins
dec
xchg
mov
pop
popa
dec
adc
dec
adc
jle
sbb
mov
dec
inc
mov
mov
inc
nop
pushf
adc
sub
pop
into
adc
pop
std
mov
mov
push
leave
mov
fadd
ds
jnp
in
leave
push
ss
test
retf
jne
mov
dec
jno
xchg
das
jmp
push
int3
inc
jns
pop
xor
pop
imul
pop
movs
push
sub
aam
sbb
outs
test
scas
movs
mov
fidiv
mov
sar
outs
jmp
xchg
mov
mov
(bad)
jnp
xor
fist
gs
sbb
jnp
lahf
mov
(bad)
inc
inc
js
(bad)
out
(bad)
or
push
and
push
pop
(bad)
loopne
gs
je
mov
xchg
pop
hlt
or
dec
dec
or
addr16
and
repnz
jb
cdq
data16
sti
mov
xchg
dec
stos
in
bound
xchg
or
xchg
xor
stos
mov
in
sub
in
stos
enter
shl
sub
retf
xchg
cs
cmp
mov
inc
xchg
(bad)
fcom
mov
add
mov
lods
pop
and
xor
in
test
ret
lea
and
jmp
mov
jb
push
daa
shr
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
ror
sub
pusha
mov
enter
cmp
ret
dec
adc
dec
xor
ficom
sub
dec
mov
ds
xchg
jne
mov
popa
enter
jp
push
or
(bad)
daa
ds
mov
or
mov
dec
adc
cmc
push
and
fiadd
fcom
and
adc
es
dec
adc
dec
jb
mov
inc
pop
je
inc
mov
dec
adc
dec
adc
dec
shl
inc
adc
(bad)
jbe
pusha
ds
mov
mov
inc
adc
cwde
push
hlt
xor
pop
add
je
cmp
sahf
outs
xchg
pusha
out
xor
jmp
ret
mov
mov
dec
adc
aam
fldenv
es
lock
aad
push
ss
add
mov
cmps
push
(bad)
loope
and
aas
add
mov
js
xchg
pop
jmp
inc
cmp
mov
fsub
imul
(bad)
mov
jp
mov
(bad)
clc
xchg
ss
cmp
push
lods
mov
rol
fsub
jle
ins
mov
out
cli
hlt
rcl
lea
push
jno
imul
bts
and
xchg
outs
add
xor
movs
adc
stos
jb
mov
xchg
dec
cmp
mov
idiv
xchg
jb
ficomp
in
shr
shl
lds
fcom
inc
xchg
push
(bad)
ins
mov
and
inc
and
(bad)
out
ss
add
sbb
in
sti
movs
pop
pop
out
or
push
dec
xlat
repz
xor
mov
mov
ins
fwait
ror
xor
mov
jp
clc
xchg
test
fsub
shl
mov
xchg
mov
fnstcw
adc
call
jbe
inc
repz
and
stos
cmps
rcl
xchg
push
pop
in
push
cdq
inc
mov
or
dec
(bad)
jb
repz
call
mov
dec
cmp
xor
jns
xchg
cmp
pop
mov
dec
or
cmp
fnstsw
pop
outs
xchg
sub
sbb
stos
ficom
mov
xor
or
daa
bndldx
outs
jge
or
sahf
and
push
rol
sar
xor
enter
mov
xor
(bad)
shl
ret
shl
sub
mov
in
inc
push
shr
adc
inc
fs
dec
outs
shr
fld
inc
arpl
ins
fst
fld
or
sub
jecxz
jg
sub
ficom
cmp
xchg
sub
ficom
cmp
fwait
sub
retf
rcr
jns
fwait
push
xchg
sub
ficomp
cmp
xchg
sub
stos
fisub
mov
test
xchg
xchg
or
movs
retf
mov
cmp
sub
dec
in
add
dec
ficom
stos
cmp
sub
jmp
mov
pop
das
xchg
sub
fisubr
xchg
mov
inc
push
fwait
sub
mov
jno
jns
mov
cmps
fiadd
into
sub
mul
and
sahf
sbb
fdivr
fild
pop
inc
jbe
xor
add
popa
dec
pushf
test
dec
dec
adc
jle
dec
es
push
outs
popf
aad
and
xchg
outs
test
outs
sbb
xor
(bad)
sbb
inc
outs
sbb
fadd
gs
ror
test
fcomp
xchg
pop
fild
mov
push
mov
sub
bound
fwait
mov
fist
fwait
pop
iret
xchg
sub
ficomp
mov
fistp
ficom
cmp
xchg
sub
fisubr
cmp
fwait
sub
dec
ficom
pop
fucompp
add
sub
jmp
sti
fcom
cmp
xchg
sub
cmp
es
dec
fsub
mov
inc
fstp
retf
cmp
mov
shr
rcr
xchg
sub
ficomp
mov
fadd
call
or
or
fild
in
imul
inc
in
imul
xchg
std
add
setge
fcomp
popf
sbb
push
sub
or
inc
cmp
or
stc
jle
ret
fcom
cdq
daa
(bad)
rcr
mov
rcl
xchg
daa
push
dec
das
and
hlt
mov
rcl
cdq
mov
(bad)
rcr
dec
cdq
iret
(bad)
rcr
daa
data16
adc
push
aad
inc
dec
or
(bad)
rcr
daa
inc
dec
or
aad
xchg
mov
push
dec
xchg
dec
dec
pop
mov
dec
cdq
pand
xchg
daa
push
mov
daa
inc
xlat
cdq
xchg
fcom
xchg
daa
inc
jg
sti
leave
mov
mov
(bad)
cdq
daa
(bad)
adc
and
arpl
inc
(bad)
cdq
daa
(bad)
and
jecxz
xchg
frstor
inc
dec
cdq
mov
rcr
daa
(bad)
rol
inc
dec
or
rcr
daa
(bad)
jae
and
arpl
inc
pop
push
or
iret
(bad)
daa
ret
xor
jnp
mov
daa
xchg
cmp
imul
repnz
push
xor
inc
test
add
mov
dec
adc
fadd
lods
and
jle
loope
inc
dec
mov
scas
jo
fcom
xchg
dec
imul
fs
adc
je
mov
or
push
xor
outs
pop
data16
lock
fwait
in
mov
push
xchg
and
and
cmc
xchg
pop
pop
pop
dec
sti
mov
ret
inc
fdivr
scas
fcom
jl
popa
inc
dec
jns
mov
ja
or
xor
jle
data16
iret
imul
mov
sahf
cmp
add
lahf
and
push
mov
fld
mov
fdivr
mov
(bad)
stos
sbb
sub
imul
push
in
mov
loopne
and
inc
test
lea
add
fldenv
mov
mov
dec
fild
inc
in
repz
cwde
and
aad
add
xchg
sbb
inc
arpl
mov
nop
sbb
int3
jae
jecxz
jecxz
dec
mov
jae
cmp
mov
add
dec
xchg
imul
mov
mov
clc
int
imul
or
push
inc
or
lea
jno
and
sti
lods
inc
mov
sub
out
mov
stos
dec
mov
pop
xlat
mov
mov
(bad)
nop
adc
ret
mov
mov
(bad)
loopne
cld
ret
jo
daa
or
lahf
ror
push
inc
mov
adc
sbb
outs
inc
mov
mov
mov
(bad)
loopne
sub
or
pop
mul
sbb
loopne
push
call
scas
sti
adc
pop
hlt
daa
ins
std
and
fild
cdq
jmp
imul
mov
ja
(bad)
retf
hlt
mov
(bad)
mov
test
and
in
adc
xor
retf
stos
retf
jnp
mov
dec
jno
adc
or
jo
xor
xchg
es
retf
loope
mov
pop
movs
xchg
sub
lea
xchg
mov
pop
aam
inc
push
popa
jb
mov
inc
push
add
and
jnp
ja
mov
cmp
xchg
mov
jns
test
xchg
and
xchg
movs
or
in
sti
jnp
lea
rcl
xchg
ror
push
sbb
xchg
cmc
aam
in
ins
inc
mov
movs
jle
ins
fist
mov
nop
mov
mov
add
pop
movs
pusha
pop
aad
jmp
jnp
sbb
imul
and
pop
repz
mov
pop
cmp
or
dec
inc
or
outs
mov
aaa
push
out
outs
pop
and
retf
jmp
mov
sti
ja
lea
mov
push
adc
daa
and
aad
rcr
dec
outs
sti
jmp
mov
repz
cwde
mov
nop
aaa
or
mov
sub
fmul
jnp
jb
clc
cmp
sub
pop
and
iret
jno
js
aas
jnp
mov
(bad)
xlat
xor
inc
jp
pop
in
in
aas
loope
mov
loope
cmp
jno
or
js
or
jo
sub
mov
out
in
aas
jno
daa
repz
mov
dec
sbb
loopne
pop
jb
mov
out
in
aas
xchg
cmp
mov
jnp
loopne
dec
sub
dec
and
mov
shl
shl
or
mov
in
in
aas
loope
js
and
lock
dec
sub
pop
and
mov
lock
push
jp
aam
repz
test
adc
in
in
aas
loope
mov
cmp
mov
mov
rol
cmps
pop
jb
mov
(bad)
inc
xchg
pop
jb
mov
out
in
aas
loope
sub
mov
xlat
push
cmps
inc
jp
sub
hlt
adc
test
nop
mov
dec
retf
in
mov
in
mov
cmp
mov
and
lods
hlt
adc
test
nop
mov
dec
retf
in
mov
in
mov
adc
fldcw
retf
in
mov
in
mov
loope
mov
inc
push
sub
push
jp
or
jge
sbb
push
mov
push
jp
adc
(bad)
add
push
jp
or
xchg
adc
aad
mov
lea
cmp
imul
sbb
je
fwait
js
lea
xor
sub
fadd
out
pop
aad
and
icebp
dec
jnp
and
cmp
fist
push
gs
in
(bad)
aam
push
xchg
into
sbb
cmc
fidiv
dec
pop
push
fnstcw
jns
dec
fnstenv
retf
sub
push
(bad)
sub
cmps
retf
push
or
dec
sti
and
mov
btc
mov
fcom
push
outs
or
pop
movs
pop
daa
jno
cmp
xchg
mov
jo
xchg
push
ss
pusha
aas
out
(bad)
xchg
xchg
lods
dec
and
mov
stos
in
ret
(bad)
xchg
mov
sub
xchg
shl
push
gs
adc
ret
sub
adc
cmp
mov
and
shr
xor
mul
sub
fdiv
mov
mov
xchg
and
jno
or
aad
(bad)
push
out
ret
cmp
pop
sub
sub
stos
repnz
pop
mov
add
mov
xchg
xchg
adc
or
hlt
and
nop
aad
pusha
adc
call
cmp
mov
js
shl
push
mov
xchg
xchg
xchg
adc
test
xor
or
add
pop
fwait
adc
xchg
adc
xchg
adc
ret
cli
mov
xchg
sbb
sti
test
test
adc
add
movs
nop
xchg
js
push
cmp
cmp
sbb
xchg
xchg
xchg
xchg
adc
xchg
test
xchg
xchg
xchg
adc
mov
adc
adc
test
xchg
sbb
cld
xchg
fcom
sti
xchg
cmps
aam
xchg
xchg
js
nop
xchg
xchg
xchg
adc
mov
adc
adc
test
or
or
pop
mov
adc
xchg
adc
mov
xchg
test
imul
or
xchg
xchg
xchg
adc
mov
adc
(bad)
std
adc
retf
fdiv
add
popa
cwde
pop
mov
out
sbb
inc
pop
jnp
xchg
xchg
adc
xchg
adc
stc
sti
add
pop
fist
xchg
xchg
inc
inc
stc
cmp
cmp
mov
adc
ret
std
mov
xchg
sbb
call
or
add
pop
pop
push
xchg
xchg
adc
ret
std
mov
xchg
sbb
sti
je
and
pusha
adc
call
xchg
adc
jecxz
mov
xchg
sbb
inc
xchg
xchg
xchg
adc
mov
mov
daa
jns
xchg
xchg
xchg
xchg
adc
or
add
pop
jnp
xchg
xchg
adc
xchg
adc
mov
and
pop
mov
adc
call
in
cli
mov
xchg
sbb
stc
xchg
pop
sbb
or
call
sbb
add
pop
mov
adc
xchg
adc
xchg
movs
lock
js
adc
push
or
sbb
(bad)
xchg
jns
xchg
xchg
xchg
cmp
and
push
pop
fist
xchg
xchg
adc
xchg
adc
mov
movs
sub
pop
xchg
xor
jo
xchg
test
shr
add
aam
or
xchg
adc
fsub
test
ins
sar
imul
cmc
fwait
dec
jae
mov
xor
ret
adc
(bad)
sbb
dec
adc
jae
imul
mov
add
mov
jns
in
pop
ins
mov
addr16
dec
test
gs
inc
rcr
je
outs
repz
fcmovnu
jbe
popa
fld
retf
pop
mov
fdiv
in
xor
jecxz
mov
pop
pusha
ja
je
je
sti
ret
jbe
mov
adc
dec
neg
scas
xchg
hlt
dec
cs
mov
shl
dec
xor
pop
aam
ja
jb
sbb
mov
ja
mov
jno
cdq
push
in
rep
mov
or
imul
adc
or
pop
sub
add
rcl
cmp
hlt
xor
xor
inc
mov
fimul
shl
dec
mov
arpl
jmp
lahf
leave
xor
mov
sti
pop
stos
fild
xchg
jle
sar
sub
loopne
adc
cmc
jne
out
sub
pop
dec
pusha
fnstcw
mov
push
mov
mov
iretw
clc
or
mov
mov
push
mov
mov
xchg
mov
mov
push
mov
mov
push
xor
into
sbb
push
mov
mov
stc
sbb
mov
push
xor
out
sbb
push
mov
mov
rcr
pop
mov
mov
mov
xchg
lods
mov
mov
mov
xchg
mov
lods
stc
sbb
xchg
mov
push
mov
mov
cld
sti
pop
sub
js
push
mov
mov
enter
push
mov
mov
push
mov
push
mov
mov
enter
push
mov
mov
push
mov
push
mov
mov
test
push
daa
retf
mov
mov
mov
ja
imul
push
mov
mov
stc
pop
mov
dec
sbb
push
mov
popf
push
or
das
jp
mov
stos
stc
sbb
push
mov
mov
out
hlt
sub
inc
daa
inc
or
xchg
ins
sub
mov
mov
push
mov
sub
push
mov
push
xor
xchg
idiv
push
mov
mov
int
pop
daa
ja
outs
sub
pop
mov
(bad)
lock
push
mov
sub
push
mov
push
(bad)
lock
push
xor
popf
inc
sub
push
mov
push
inc
cmc
std
inc
daa
inc
stc
iret
or
mov
push
mov
mov
je
repz
ja
jo
arpl
sub
push
mov
push
pop
lock
push
mov
push
mov
mov
inc
sub
push
mov
push
test
ins
(bad)
pop
hlt
mov
push
xchg
sub
push
mov
push
mov
mov
inc
and
ins
mov
push
mov
mov
mov
inc
jecxz
sub
and
push
mov
or
xor
retf
mov
mov
mov
inc
and
ins
mov
(bad)
daa
repnz
iret
fwait
sub
push
mov
push
mov
mov
push
lahf
ja
shl
xor
test
and
push
or
ins
popa
cmp
and
ins
sub
sbb
push
mov
mov
iret
cmp
and
push
mov
(bad)
xor
aam
mov
ja
sub
mov
mov
mov
push
test
jge
fwait
hlt
mov
push
xchg
lods
push
pop
adc
ret
mov
mov
push
mov
popf
push
pop
clc
das
into
adc
ins
mov
xchg
cmc
cmc
lods
stc
sbb
push
mov
mov
int3
imul
clc
iret
sbb
das
push
mov
push
mov
mov
push
mov
mov
push
(bad)
lock
jno
cmp
enter
inc
fwait
ins
stc
sub
inc
mov
enter
cmp
or
aas
xchg
push
enter
jbe
pop
std
xchg
mov
mov
iret
dec
fiadd
lods
rcr
jle
jecxz
push
stos
ins
stc
scas
push
aam
xchg
push
mov
out
push
arpl
pop
mov
pushf
push
cmp
lea
add
fs
xor
dec
test
div
xor
mov
mov
sahf
pop
push
jb
push
test
push
adc
sub
mov
adc
mov
and
mov
push
daa
inc
outs
xchg
or
sbb
xchg
popa
dec
mov
adc
jno
mov
in
push
inc
aad
pop
aaa
stos
outs
sar
pop
icebp
xchg
ins
add
xchg
dec
push
adc
fs
cli
mov
dec
stos
outs
rcl
pop
out
mov
fld
push
xchg
sbb
push
(bad)
in
shr
xchg
sub
mov
hlt
adc
pop
test
push
xchg
je
xchg
outs
cmp
push
dec
cdq
jbe
mov
mov
mov
repz
shl
retf
mov
mov
stos
pop
cld
mov
inc
jg
test
lgs
stos
(bad)
into
fs
jmp
pop
fld
retf
fwait
je
fcomip
cli
pop
jns
pop
iret
push
lahf
je
(bad)
pop
stc
ficomp
push
lahf
je
fist
jns
ss
push
fld
push
lahf
je
fbstp
push
jns
fld
push
lahf
je
fist
pop
jns
pop
iret
push
lahf
je
(bad)
pop
stc
ficomp
push
lahf
je
fcom
stc
ficomp
push
lahf
je
fist
jns
jbe
push
push
fld
push
lahf
je
(bad)
inc
jns
fld
push
lahf
je
fist
jns
pop
iret
push
lahf
je
(bad)
pop
stc
ficomp
push
lahf
je
fcom
stc
ficomp
push
lahf
je
fist
jns
inc
ss
push
fld
push
lahf
je
fbstp
pop
jns
pop
iret
push
lahf
je
(bad)
xor
ds
jmp
xor
ds
cmp
cmp
stos
mov
xchg
jo
fld
sbb
cld
pop
jns
pop
iret
push
lahf
je
(bad)
pop
stc
ficomp
push
lahf
je
fcom
stc
ficomp
push
lahf
je
fist
jns
jbe
push
xchg
pop
out
(bad)
je
push
jp
inc
jae
pop
aaa
fmul
jl
jns
pop
lahf
push
(bad)
je
pop
pop
mov
les
jae
dec
loop
dec
push
xchg
xor
jns
repz
jae
jmp
retf
in
pusha
test
fnstcw
mov
aam
jne
div
or
retf
jle
mov
es
dec
jns
movs
sub
push
xchg
dec
cdq
fdiv
js
pop
inc
pop
stc
(bad)
or
adc
push
mov
pop
lds
jge
aas
frstor
mov
jnp
sub
mov
fdivr
arpl
jbe
pusha
fld
jb
inc
seta
into
arpl
add
cli
mov
adc
repnz
add
popf
fs
xchg
outs
xor
rcl
int3
add
data16
sti
lods
mov
test
mov
adc
add
push
imul
xchg
sub
mov
cmp
icebp
jle
push
ret
xor
cmp
shl
arpl
xor
fs
rcl
popa
xor
inc
xchg
mov
and
sub
mov
es
(bad)
ins
stc
fwait
mov
sub
mov
sbb
dec
outs
mov
fnstenv
sar
mov
pop
in
sbb
loop
rcl
mov
pop
in
ds
inc
mov
ror
mov
pop
in
int3
adc
push
fdivp
pop
and
jecxz
sar
rcl
mov
pop
inc
push
dec
adc
dec
out
rcl
mov
pop
in
rcl
mov
nop
jo
(bad)
mov
inc
mov
ror
mov
pop
xor
rcl
in
rcl
mov
pop
and
popa
and
mov
pop
in
lds
xor
rcl
mov
pop
je
push
pop
cmps
popa
popa
loopne
ror
mov
pop
in
add
in
sar
mov
pop
mov
or
repz
add
loopne
add
push
mov
xchg
jmp
pop
les
ror
mov
ror
inc
lds
inc
cs
add
and
(bad)
loopne
rcl
mov
pop
in
push
pop
and
popa
loope
mov
(bad)
loopne
dec
adc
mov
test
jmp
rol
mov
pop
add
inc
cs
pop
je
nop
je
pop
mov
out
rcl
mov
pop
in
jg
hlt
pop
push
adc
shl
add
loopne
leave
pop
in
popa
adc
rol
mov
pop
in
leave
pop
in
push
adc
inc
cs
add
mov
pop
in
leave
pop
in
fs
inc
rol
mov
pop
in
rcl
mov
adc
mov
test
sub
cmp
mov
mov
inc
rol
mov
pop
in
push
pop
mov
ror
mov
pop
and
movs
adc
pop
jmp
rcl
mov
adc
jo
push
mov
mov
(bad)
loopne
rcl
mov
adc
jno
out
les
in
dec
adc
repz
dec
(bad)
popa
jno
into
mov
cmps
popa
and
mov
pop
inc
sub
pop
in
lds
je
jno
out
mov
pop
in
mov
mov
mov
pop
in
rcl
and
je
push
mov
or
xchg
fs
dec
jmp
nop
je
pop
mov
jecxz
rcl
mov
pop
in
into
pop
test
ror
sbb
adc
sahf
lock
push
jae
mov
pop
in
adc
dec
xchg
ins
je
retf
out
mov
pop
in
rcl
mov
pop
fs
rol
mov
pop
in
leave
pop
je
imul
push
jb
mov
mov
test
inc
or
repnz
push
rcl
mov
jno
mov
lea
add
pop
push
repz
rcl
mov
pop
in
call
hlt
pop
push
adc
cmc
rcl
jno
in
dec
rol
mov
pop
in
rcl
mov
pop
adc
sar
enter
mov
aaa
out
rcl
mov
pop
les
ror
mov
test
sbb
mov
je
dec
mov
push
xor
mov
pop
pop
repz
fs
lock
pop
xor
mov
adc
jae
add
shr
sub
movs
jg
pusha
add
push
pushf
inc
push
jno
jg
push
push
xchg
xor
mov
ja
sub
mov
add
pop
pop
cmp
mov
push
adc
out
mov
jmp
push
add
imul
push
rcl
test
push
sbb
jg
mov
jae
fmul
jnp
cld
or
popa
popa
aad
inc
jmp
call
push
call
popa
repz
mov
adc
mov
(bad)
popf
mov
or
pushf
sbb
(bad)
jno
pusha
fld
push
fwait
dec
xchg
ja
or
sub
jle
outs
fld
sbb
fidiv
in
dec
inc
mov
adc
mov
mul
lahf
neg
scas
push
repz
jg
loopne
cmps
pusha
fs
aad
sub
and
fstp
xchg
je
cdq
out
icebp
sahf
push
inc
xchg
mov
(bad)
out
xchg
mov
push
movs
fsub
pop
out
inc
and
jbe
mov
les
sub
xchg
sbb
test
cmps
add
mov
scas
sbb
les
fs
push
repz
xor
jo
xor
add
push
(bad)
fld
inc
in
mov
pop
test
test
ret
xor
fldenv
mov
and
mov
mov
mov
std
xchg
ret
mov
mov
enter
pop
and
mov
es
push
cmp
sbb
mov
outs
inc
and
adc
popa
das
mov
and
les
or
xchg
mov
and
clc
daa
push
mov
and
js
mov
and
cld
and
sub
loopne
mov
sub
pop
lea
push
and
mov
pop
lea
mov
mov
ds
and
sub
inc
mov
out
cmp
lds
and
dec
and
mov
mov
push
(bad)
frstor
sub
les
or
stc
sub
mov
mov
ja
dec
data16
enter
pop
and
es
and
mov
and
pop
and
cmps
ds
and
fdivr
mov
mov
and
cld
and
mov
pop
mov
mul
sub
mov
mov
dec
es
and
and
dec
and
and
rcl
bound
sbb
loopne
cmp
out
inc
in
mov
in
xor
mov
mov
and
pop
mov
xchg
sub
mov
xor
adc
fdivr
mov
clc
push
and
pop
and
(bad)
cdq
std
push
mov
dec
mov
sub
mov
adc
or
mov
pop
lea
mov
mov
es
mov
xor
enter
pop
mov
es
pop
es
mov
mov
mov
mov
xor
xchg
bound
mov
xchg
adc
(bad)
not
mov
cmp
mov
xchg
adc
(bad)
push
in
xchg
cmp
les
push
in
cmp
mov
call
mov
jns
cmp
pop
(bad)
and
popf
xchg
(bad)
mov
dec
jno
adc
jmp
mov
in
sub
cmp
mov
mov
pop
sbb
mov
xor
jmp
fwait
jl
sub
adc
dec
sbb
mov
stc
mov
mov
jbe
test
xchg
jl
mov
sbb
shl
(bad)
sub
scas
sbb
cli
movs
xor
adc
sub
dec
fwait
hlt
test
adc
test
fisubr
clc
in
cli
xchg
rol
mov
call
dec
push
hlt
inc
neg
add
sub
mov
pop
mov
push
xor
data16
mov
pop
test
inc
arpl
out
stos
inc
push
xchg
push
(bad)
mov
push
or
mov
hlt
xor
jb
and
(bad)
ins
mov
rcl
mov
test
mov
mov
cmp
mov
pushf
add
jmp
mov
jae
scas
hlt
sti
mov
arpl
jle
mov
adc
in
imul
mov
stc
jge
pop
mov
sub
push
shl
inc
mov
dec
ror
push
adc
into
xchg
pop
adc
sbb
bound
pop
test
push
mov
outs
add
xchg
push
mov
adc
push
adc
cdq
clc
push
cs
aad
adc
bound
out
iret
(bad)
ficomp
adc
mov
jle
mov
outs
add
adc
push
adc
sahf
(bad)
inc
adc
sbb
outs
add
adc
ds
add
mov
outs
add
adc
push
sub
add
adc
push
adc
push
inc
leave
mov
sar
mov
outs
add
adc
mov
push
push
mov
(bad)
sahf
adc
outs
add
adc
push
leave
cli
push
sahf
lea
cdq
xor
retf
and
mov
adc
push
adc
push
je
add
(bad)
(bad)
sahf
adc
outs
call
shl
sahf
and
push
popa
(bad)
aad
scas
and
pop
popa
(bad)
cmc
shr
mov
outs
call
push
add
adc
outs
add
adc
push
adc
outs
xchg
jle
mov
outs
add
adc
push
xchg
push
mov
adc
push
adc
push
adc
add
mov
outs
call
ins
add
mov
push
push
mov
(bad)
sahf
adc
outs
add
adc
push
adc
outs
mov
test
and
or
and
test
adc
je
aad
stc
outs
call
add
adc
ret
outs
add
adc
mov
pop
push
adc
pop
into
xchg
pop
adc
sbb
and
mov
outs
add
adc
sahf
xchg
shl
or
xchg
ss
lock
call
pop
into
xor
movs
mov
nop
or
call
mov
cs
push
or
add
adc
sahf
dec
std
push
push
jne
or
jne
(bad)
(bad)
or
sbb
outs
add
adc
push
adc
push
adc
outs
add
adc
push
sar
push
adc
sbb
data16
adc
add
adc
outs
call
mov
ficom
adc
outs
mov
lds
adc
push
adc
dec
jmp
push
adc
push
adc
jno
add
adc
push
adc
pop
sbb
outs
add
adc
outs
sar
cdq
adc
outs
add
adc
push
adc
mov
adc
sbb
outs
add
adc
mov
sti
data16
push
mov
adc
push
adc
push
adc
dec
cld
push
fnstsw
add
jno
add
dec
icebp
mov
mov
test
mov
push
ret
mov
adc
push
adc
mov
add
(bad)
(bad)
mov
sbb
outs
add
adc
jle
inc
pop
mov
(bad)
(bad)
xchg
adc
ins
add
rol
pop
pop
adc
sbb
outs
add
adc
add
ret
loop
fwait
mov
outs
add
adc
dec
pop
sub
outs
call
pop
les
mov
test
jns
jmp
lds
jmp
int
(bad)
ins
cmc
std
sub
jne
xchg
jge
lea
scas
add
jp
mov
retf
(bad)
outs
adc
adc
pop
fs
add
(bad)
lea
push
or
mov
adc
sbb
and
inc
into
je
movs
std
lahf
jp
add
push
retf
mov
popa
ret
(bad)
in
mov
rcl
addr16
adc
push
adc
push
adc
loopne
ror
add
adc
push
adc
push
xor
cs
jle
mov
arpl
push
adc
add
outs
and
fsub
jl
(bad)
outs
adc
adc
dec
call
outs
call
outs
add
mov
ret
test
scas
adc
outs
add
adc
mov
xlat
xor
out
mov
shl
sti
into
add
out
mov
fwait
adc
mov
or
arpl
jb
clc
imul
sar
(bad)
adc
mov
sbb
xchg
fimul
mov
dec
mov
sub
out
inc
pusha
sub
jnp
add
mov
imul
pushf
loop
daa
shr
pop
push
shr
sub
xlat
add
retf
imul
or
cmc
xchg
adc
dec
mov
jmp
lea
xchg
popa
rcr
popa
mov
mov
adc
mov
bound
mov
push
fldenv
mov
pop
(bad)
ins
inc
imul
popa
mov
mov
cdq
adc
mov
mov
xor
ins
inc
mov
pop
mov
fdecstp
jns
sub
xchg
test
xor
or
shl
(bad)
sub
dec
cmp
mov
mov
mov
push
and
or
fwait
outs
inc
xchg
sbb
push
test
pop
aaa
in
sti
ins
rcl
jb
and
mov
fs
sbb
repnz
and
xor
inc
cmp
inc
pushf
cld
mov
mov
lods
or
xor
cmp
inc
jmp
push
aam
jmp
sahf
xchg
inc
jns
lods
cmp
aaa
mov
fnstsw
imul
mov
psllw
imul
imul
lahf
fnstsw
imul
outs
and
xchg
daa
imul
das
imul
imul
cmc
cmp
fcomp
cmp
imul
imul
mov
call
(bad)
pushf
xchg
pop
rdtsc
jne
les
imul
imul
sub
and
imul
push
test
and
lods
outs
mov
call
mov
mov
xchg
mov
shl
xchg
mov
mov
mov
xchg
jne
shl
push
(bad)
push
mov
xchg
mov
mov
xchg
adc
daa
imul
imul
ins
psrlw
imul
lods
sub
imul
imul
jmp
daa
imul
imul
xlat
pop
lods
sub
imul
xlat
aas
in
das
ins
pop
sub
imul
imul
imul
xlat
pop
lods
sub
imul
imul
cld
lahf
xlat
xor
jmp
mov
push
es
popa
sub
imul
outs
push
ins
psrlw
imul
lods
sub
imul
test
punpckhwd
imul
in
pop
xlat
(bad)
mov
and
imul
jmp
test
punpckhwd
imul
outs
xor
pop
xlat
(bad)
repz
ins
push
cmps
test
mov
cmc
cmp
outs
jg
jg
pop
packsswb
wbinvd
and
imul
pop
test
popf
pop
fwait
int
cmc
psllw
imul
push
imul
outs
and
push
and
imul
push
xchg
in
shr
mov
(bad)
xchg
xlat
sahf
xlat
ja
scas
jmp
cmp
neg
xor
test
(bad)
jle
neg
fs
mov
fadd
bound
outs
adc
mov
repz
sub
daa
inc
jmp
inc
fimul
sub
daa
inc
jmp
inc
jmp
inc
pop
bound
cwde
out
fwait
ss
add
adc
jle
in
out
icebp
clc
scas
and
jbe
movs
lahf
push
inc
mov
inc
jno
pop
adc
pop
sti
jmp
lea
aad
pop
sbb
push
pop
outs
cdq
cli
out
cmp
lods
or
mov
stc
jnp
inc
imul
mov
jmp
jns
je
xchg
and
adc
sub
in
out
pop
xchg
pop
xor
test
jmp
inc
stos
ins
shl
jbe
neg
jno
stos
mov
cmp
call
mov
ror
xchg
mov
inc
dec
into
jo
outs
fnstenv
mov
leave
xchg
cld
and
jbe
xchg
(bad)
outs
icebp
mul
pop
mov
jge
mov
jbe
cmp
pop
(bad)
in
arpl
call
inc
xchg
or
push
test
jns
adc
lea
xchg
popa
ins
in
xchg
mov
mov
and
mov
mov
sahf
jae
fwait
test
shl
cs
pusha
mov
jbe
aam
xchg
and
jae
cmp
nop
ja
or
movs
std
mov
and
cmp
pop
sub
mov
or
dec
test
sub
das
aas
imul
push
xor
sub
sbb
mov
mov
sahf
and
mov
pop
cmp
cmp
repnz
mov
mov
test
xor
xor
xchg
xchg
cmp
jb
mov
sbb
xchg
ss
mov
fild
lods
xchg
fistp
loope
push
test
stc
jle
aam
pop
pop
mov
inc
jno
sub
mov
lea
shl
icebp
outs
pop
loope
push
xlat
stos
pop
add
inc
pop
mov
inc
cdq
mov
or
xchg
add
dec
mov
dec
(bad)
ins
fldenv
shl
pop
les
test
jmp
xchg
ins
xor
sbb
fisub
xchg
lock
stos
mov
adc
mov
inc
mov
mov
ror
mov
je
mov
and
in
mov
adc
jno
popa
fld
rcr
jecxz
adc
push
aad
xchg
mov
ror
repz
mov
jae
cmps
cdq
jae
sub
mov
adc
movs
add
jns
xor
cmp
cdq
and
mov
mov
add
jmp
sub
jecxz
inc
xchg
adc
xor
shl
cmp
fldenv
push
mov
jne
xchg
sub
test
cwde
add
leave
ret
lea
and
xor
in
sub
(bad)
dec
adc
dec
dec
inc
pop
clc
add
adc
aaa
out
mov
aaa
inc
or
inc
or
repnz
adc
int3
aaa
inc
or
inc
sub
inc
repnz
daa
adc
int3
aaa
inc
or
inc
or
inc
loop
xchg
int3
aaa
sahf
xchg
cmp
dec
fiadd
mov
lds
or
popa
cmps
loop
int3
cmp
inc
or
sahf
or
xchg
lock
fist
int3
aaa
inc
or
inc
or
inc
mov
outs
and
sub
pop
test
aaa
inc
or
inc
xor
aaa
out
mov
aaa
inc
or
inc
adc
push
or
fimul
dec
ret
loopne
cmp
shl
add
jle
pop
xor
jcxz
sar
xchg
jns
push
aaa
push
sbb
jns
fidiv
push
in
jecxz
push
std
(bad)
mov
cmp
dec
fild
lahf
fwait
aam
lea
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
jbe
pop
frstor
int3
mov
push
jns
movs
jbe
sahf
fsub
adc
mov
ins
mov
jmp
retf
jno
mov
dec
jno
in
leave
dec
mov
cld
popa
mov
test
push
mov
aam
pop
lds
or
inc
cmps
mov
mov
fnstenv
mov
or
jp
xor
in
pusha
push
out
gs
in
mov
mov
retf
push
sub
outs
add
int3
rep
jo
add
pop
push
or
xchg
jno
cdq
imul
sar
call
ss
ror
push
inc
mov
add
nop
xor
rcl
jo
shr
rol
jmp
sub
jnp
pop
lea
ret
jmp
dec
mov
sub
mov
jl
adc
popf
cmps
mov
cmps
ror
enter
push
div
loopne
aad
jmp
and
push
mov
(bad)
push
and
cdq
test
int3
mov
test
sbb
jb
and
inc
lods
add
int3
adc
dec
bound
mov
stc
cmps
aaa
ins
stc
sahf
xor
stc
(bad)
xor
stc
outs
xor
into
xor
xchg
cld
nop
xchg
fstp
inc
cwde
test
pop
cli
aam
(bad)
sti
mov
xor
(bad)
nop
jne
pop
aas
xchg
addr16
outs
bound
sub
bound
stos
gs
js
xor
(bad)
xor
cmp
packuswb
xchg
bound
bound
aaa
arpl
bound
bound
adc
sbb
xchg
xor
aam
mov
pop
inc
xchg
bound
bound
shl
bound
bound
lods
or
sbb
loop
add
lock
push
cmp
push
ror
addr16
bound
bound
jmp
cmp
daa
dec
cmp
bound
bound
dec
sbb
div
xchg
bound
bound
mov
iret
stos
xchg
addr16
test
bound
bound
ret
fs
push
addr16
ret
fs
push
fisub
bound
retf
gs
push
lds
xchg
imul
or
(bad)
xor
or
inc
mov
addr16
test
jmp
(bad)
scas
xchg
bound
bound
xchg
push
xchg
addr16
stos
xchg
bound
bound
xlat
frstor
xchg
enter
aaa
std
xor
bound
out
cmps
xchg
bound
bound
hlt
mov
cmp
bound
bound
fst
int
inc
jl
packuswb
xchg
bound
bound
xlat
push
mov
xchg
bound
addr16
icebp
mov
cmp
jo
cmp
jno
add
addr16
popa
bound
stc
arpl
or
bound
bound
rcr
xor
ins
bound
ror
or
retf
bound
bound
mul
xchg
addr16
stos
xchg
bound
bound
out
movs
xchg
outs
cmp
lods
addr16
outs
bound
addr16
bound
bound
data16
pop
jmp
and
sahf
adc
xchg
cmp
or
loop
(bad)
push
test
addr16
test
outs
bound
js
xor
(bad)
xor
cmp
packuswb
xchg
bound
arpl
and
jle
xchg
bound
bound
div
lods
xchg
addr16
test
bound
lods
xchg
fdiv
dec
mov
pop
jo
mov
push
mov
xchg
imul
div
lods
xchg
addr16
test
bound
lods
xchg
fwait
int3
xor
stc
push
jo
mov
jbe
xchg
bound
(bad)
int3
(bad)
hlt
lods
xchg
addr16
test
imul
pop
cli
pusha
jp
sub
xor
(bad)
jb
idiv
xchg
addr16
mov
popa
pop
addr16
and
into
add
test
lods
xchg
outs
bound
add
nop
inc
cmps
cli
pop
fst
push
mov
xchg
loopne
sub
loopne
movs
dec
or
stc
or
fwait
scas
leave
sbb
cmps
xchg
bound
bound
cmps
loop
xchg
or
bound
push
data16
outs
das
dec
mov
addr16
bound
bound
(bad)
pusha
xor
cmp
cwde
ds
mov
pop
packuswb
lods
xchg
push
ins
loope
data16
sub
bound
cmp
or
bound
bound
(bad)
div
xchg
sbb
bound
ret
mov
outs
das
dec
mov
addr16
bound
pop
(bad)
pusha
xor
cmp
cwde
pop
retf
jge
(bad)
scas
xchg
bound
bound
test
lods
xchg
pusha
bound
test
lods
xchg
bound
bound
(bad)
into
cmp
bound
bound
(bad)
scas
loop
repnz
test
xchg
and
out
aad
jae
test
(bad)
loop
hlt
(bad)
push
(bad)
mov
aas
dec
cmp
xor
imul
mov
fist
mov
jp
pop
fnsave
mov
dec
pop
jns
movs
jbe
lahf
fadd
dec
mov
nop
cmp
jnp
hlt
fcomp
pop
mov
lock
dec
jns
in
cmp
xor
pop
pop
adc
clc
xchg
fdiv
outs
fldenv
js
add
aam
lods
jb
sbb
mov
stos
jg
sbb
xchg
jg
add
cmp
jle
pusha
fld
lea
inc
mov
fadd
lea
div
fist
jge
pop
xlat
push
or
aad
fiadd
and
jp
cmps
fcom
mov
shl
pop
gs
pop
inc
in
xchg
push
and
mov
push
pop
mov
or
push
adc
mov
jns
inc
add
dec
(bad)
push
cmp
fmul
sub
mov
lea
sbb
rol
and
push
push
mov
sbb
jmp
sbb
sub
in
xor
or
mov
push
dec
jmp
mov
mov
(bad)
push
test
scas
test
jmp
stos
dec
pushf
jmp
jb
and
xchg
stc
icebp
push
popf
mov
js
movs
bnd
je
xchg
and
push
movs
scas
cmp
mov
ror
adc
sub
lahf
nop
imul
neg
test
pop
dec
test
pop
dec
test
pop
dec
test
pop
mov
scas
mov
das
(bad)
push
cmp
(bad)
sbb
xchg
mov
mov
(bad)
aam
je
add
repnz
pop
push
push
mov
xchg
jg
test
rcr
xor
rcr
xor
dec
(bad)
cmp
(bad)
sbb
ret
xor
iret
pop
push
push
mov
xchg
jg
test
rcl
xor
push
dec
xor
les
dec
test
repz
pop
push
push
mov
xchg
jg
test
push
inc
xor
adc
aam
push
dec
aad
scas
loope
scas
jbe
fidivr
call
stos
into
rcr
xor
rcl
xor
sbb
push
mov
xchg
jg
aaa
retf
rcr
xor
rcl
repnz
pop
push
push
mov
xchg
jg
test
push
dec
xor
les
dec
mov
dec
test
pop
(bad)
sbb
ret
xor
dec
fsubr
dec
sbb
rcr
xor
rcr
xor
rcl
scas
ret
rcr
xor
rcr
xchg
dec
hlt
mov
dec
test
jbe
mov
into
rcl
xor
rol
xor
mov
lahf
movs
in
lods
loope
stos
jbe
jne
pusha
mov
stos
(bad)
rcr
xor
rcl
xor
xchg
loop
xchg
push
push
xchg
pop
push
test
std
das
push
push
push
push
xchg
lods
dec
cmc
out
adc
push
mov
js
inc
lods
add
dec
sbb
rcl
xor
rol
xor
mov
lahf
movs
in
lods
loope
stos
jbe
jne
pusha
mov
stos
(bad)
rcr
xor
mov
push
(bad)
sbb
ret
xor
or
xchg
(bad)
repz
dec
push
push
(bad)
sbb
ret
xor
push
dec
xor
lds
iret
ret
rcr
xor
rcl
xchg
imul
scas
loope
stos
jbe
jne
add
sbb
ret
xor
mov
outs
test
lods
loope
sbb
jne
and
sbb
ret
xor
cmps
inc
pop
out
cmp
push
mov
xchg
sbb
ret
xor
jb
aaa
push
pusha
cmp
(bad)
cmps
xlat
push
pusha
or
pop
pusha
mov
push
lods
ja
dec
repz
push
sub
mov
cmp
add
pop
pop
int3
fwait
call
mov
fidiv
jmp
push
mov
movs
fcom
mov
shr
fild
lods
ret
fidivr
call
stc
jle
mov
popa
movs
popa
push
ret
in
mov
(bad)
xchg
sub
sbb
pop
xchg
loop
shr
lea
data16
sub
lahf
test
jnp
hlt
adc
into
imul
cmc
push
cmp
mov
out
or
mov
lds
jbe
fldenv
cmp
mov
cwde
add
test
iret
iret
dec
xchg
mov
stos
mov
ffree
dec
test
les
(bad)
cmps
push
arpl
jae
scas
fcom
inc
xchg
and
mov
add
sbb
icebp
fdivr
dec
and
cmp
fldenv
mov
xchg
adc
repz
nop
hlt
dec
mov
mov
adc
outs
pop
mov
mov
or
inc
dec
sub
mov
sar
fcomp
cmp
mov
and
dec
movs
stos
daa
ja
xchg
mov
ret
mov
and
xchg
jbe
cwde
(bad)
in
shr
xchg
hlt
cmp
aam
mov
lock
inc
in
mov
jb
and
aaa
jle
jo
hlt
test
pop
hlt
or
sbb
jae
in
(bad)
jb
sti
loope
sbb
stos
jmp
movs
or
movs
or
movs
or
movs
or
movs
or
movs
or
movs
or
movs
mov
lods
dec
(bad)
or
adc
and
lea
cmps
daa
fld
and
jnp
and
add
test
fwait
movs
scas
cmps
fwait
movs
push
cmps
cmp
cmps
or
dec
cmps
mov
movs
mov
cmps
fwait
movs
push
cmps
cmp
cmps
or
cs
mov
mov
enter
mov
out
cwde
scas
repz
xchg
jb
cmp
cmp
push
xchg
push
push
mov
mov
gs
out
cmp
cmp
nop
inc
outs
lods
push
sbb
jmp
cmps
xchg
jb
cmp
cmp
lods
or
and
hlt
inc
mov
and
cmp
mov
mov
jg
mov
add
add
sub
mov
or
cmp
cmp
sbb
mov
or
cli
movs
pop
pop
mov
xchg
cmp
lds
mov
jne
mov
cmp
cmp
out
cmp
cmps
push
xor
push
cmps
and
xchg
xchg
mov
sahf
cmp
cmps
xchg
xor
cmp
cmp
and
movs
add
es
test
fidiv
xchg
cmp
cmp
cmp
test
out
or
imul
cmp
cmp
(bad)
jmp
pop
mov
xchg
cmp
cmp
fstp
and
stos
mov
mov
xchg
jmp
or
and
out
mov
cmps
es
or
sub
xchg
mov
xchg
cmp
cmp
cmp
cmps
and
and
mov
mov
cmp
cmp
es
out
cmps
cli
mov
mov
cmp
cmp
cmp
mov
or
and
out
cmps
mov
xchg
mov
sub
xchg
mov
xchg
cmp
daa
mov
mov
cmps
mov
movs
push
and
push
cmps
xchg
adc
add
mov
or
and
out
cmps
mov
xchg
mov
sub
xchg
mov
xchg
cmp
daa
mov
mov
cmp
push
mov
movs
push
and
push
cmps
xchg
adc
cmp
cmp
mov
(bad)
mov
lock
and
out
cmps
mov
xchg
mov
sub
xchg
mov
xchg
cmp
mov
xchg
push
cmp
cmp
movs
or
sub
sub
xlat
or
and
xchg
adc
cmp
and
test
enter
mov
adc
or
cmp
cmp
mov
cmp
and
ins
das
and
add
dec
lea
mov
mov
and
mov
xchg
cmp
pop
pushf
cmp
in
mov
xchg
ret
xchg
cmp
cmp
dec
das
or
cmps
mov
push
lea
xchg
xchg
mov
xchg
cmp
outs
and
and
cmp
or
and
ins
xchg
es
test
out
aas
pop
out
cmp
cmp
mov
cmp
cmp
dec
ret
cmp
cmps
add
mov
mov
sahf
stos
xchg
pop
out
cmp
cmp
ss
imul
cmps
mov
cmp
cmp
je
or
cmp
cmp
imul
mov
xchg
mov
dec
imul
mov
xchg
mov
mov
cmp
cli
mov
xchg
cmp
nop
inc
cmp
cmp
cmp
mov
call
mov
adc
cmp
cmps
es
mov
xchg
cmp
cmp
popf
sbb
xchg
cmp
movs
daa
mov
cmp
cmp
mov
sub
cmp
in
sti
sub
mov
(bad)
sti
sub
mov
xchg
cmp
mov
es
cmp
cmp
xchg
xchg
mov
out
aaa
ds
xchg
cmp
mov
xchg
mov
cmp
cmp
xor
pop
mov
and
mov
movs
stos
and
push
cmp
sub
cmp
cmp
sahf
and
mov
xchg
popf
add
cdq
cmp
dec
cmp
inc
hlt
or
test
mov
sub
xchg
mov
xchg
cmp
imul
mov
xchg
mov
mov
cmps
mov
es
test
fidiv
sahf
cmp
cmps
xchg
jb
cmp
cmp
in
daa
enter
(bad)
in
pop
inc
mov
cmp
cmp
pop
outs
mov
xchg
mov
mov
dec
jecxz
or
xchg
cmp
cwde
inc
ds
daa
popf
or
xchg
bound
or
inc
or
daa
dec
mov
xchg
mov
jmp
mov
mov
cmp
cmp
movs
xlat
sti
sub
mov
cmp
sbb
xchg
mov
cmps
dec
cmp
test
out
cmps
cli
mov
mov
cmp
cmp
add
cmp
cmp
mov
or
and
movs
add
es
test
fidiv
xchg
cmp
imul
mov
xchg
mov
retf
aas
adc
(bad)
sti
sub
mov
pop
outs
mov
xchg
mov
mov
mov
or
xchg
mov
mov
cmp
jp
mov
cmps
xchg
push
cmp
cmp
and
mov
mov
cmp
mov
dec
mov
xchg
mov
mov
movs
movs
movs
call
or
jmp
xchg
mov
mov
cmp
pop
int3
retf
test
out
push
cmp
cmp
xor
sbb
cmp
mov
xchg
mov
retf
test
mov
gs
sti
sub
mov
pop
outs
mov
xchg
mov
sbb
xchg
xchg
sub
cmp
xchg
mov
cmps
xchg
push
cmp
cmp
and
mov
mov
cmp
jmp
mov
mov
cmps
hlt
aas
mov
movs
dec
or
inc
or
pop
out
mov
xchg
cmp
pop
sbb
popa
sbb
cdq
mov
enter
mov
xchg
mov
mov
xor
sbb
cmp
mov
xchg
mov
cmp
mov
js
mov
push
sub
scas
lea
xchg
mov
mov
or
dec
adc
xchg
mov
fdiv
mov
cmps
(bad)
sahf
ss
nop
(bad)
push
lods
add
jle
in
rcl
adc
in
(bad)
movs
inc
jns
mov
jnp
lea
or
sub
shr
xrelease
xchg
pop
repz
pop
dec
sbb
mov
out
pop
inc
xor
imul
cmp
xor
push
add
out
sti
xchg
js
mov
adc
cld
scas
(bad)
mov
xor
aaa
in
arpl
fwait
pop
call
mov
test
sub
cmp
fist
jno
mov
adc
add
add
mov
adc
jae
sti
mov
dec
jecxz
sar
daa
jmp
mov
or
jge
not
mov
jns
(bad)
cmps
add
inc
jle
in
shl
xchg
fmul
lock
cs
inc
dec
fld
push
mov
div
or
mov
or
mov
mov
sti
ja
xchg
popa
inc
mov
leave
xchg
out
jae
push
in
mov
pop
push
xchg
rcr
mov
jb
or
inc
xchg
and
mov
rcr
push
mov
mov
jg
stc
out
das
test
push
xchg
lea
pop
and
cmp
mov
add
mov
loopne
push
and
cmp
cmp
retf
mov
mov
mov
fnsave
mov
clc
push
outs
cmps
mov
ret
xor
cmp
pop
call
jmp
ds
and
(bad)
out
mov
inc
shl
cmp
mov
movs
push
outs
inc
and
pop
and
dec
out
pushf
or
add
ror
add
mov
mov
icebp
mov
ss
and
cmp
sub
or
ret
(bad)
and
pushfw
or
mov
icebp
mov
ss
and
cmp
out
mov
inc
shl
cmp
mov
movs
push
outs
inc
and
pop
and
int
pop
mov
scas
test
ja
out
mov
retf
in
pop
mov
ret
movs
nop
mov
fisubr
pop
and
lea
popf
dec
lods
inc
out
ret
ins
fbld
(bad)
fsubr
sub
ret
dec
and
or
pop
sub
in
push
and
and
ds
and
std
ret
dec
cmp
jbe
lea
pop
and
cmp
popf
out
outs
mov
outs
(bad)
iret
(bad)
daa
jmp
xor
mov
or
mov
lock
dec
aas
inc
mov
mov
cmp
or
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
(bad)
xlat
(bad)
sahf
dec
and
jp
sbb
cld
jle
mov
pop
pop
sbb
mov
sub
mov
dec
test
push
in
test
lea
mov
push
in
mov
rcl
jns
add
test
lock
mov
mov
jns
stos
fidiv
stos
push
and
nop
xchg
fldenv
or
push
mov
(bad)
add
jle
sub
cmps
pusha
fs
jae
sti
mov
je
pusha
xor
jnp
loop
adc
call
mov
inc
mov
shl
mov
rcr
or
enter
lea
xchg
out
dec
dec
dec
mov
fnstcw
mov
movs
xchg
cld
and
cld
pop
shr
xor
inc
mov
dec
push
sbb
mov
xor
mov
mov
jg
xchg
(bad)
arpl
sahf
int3
jne
out
nop
jnp
inc
lea
pop
cmp
fs
mov
push
adc
aaa
arpl
or
(bad)
mov
xor
fs
fld
rol
and
dec
ins
pop
aam
inc
fist
sub
mov
pop
xchg
repz
daa
rcl
fdivp
and
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
dec
lock
popf
lock
(bad)
rcr
sar
xchg
iret
mov
push
imul
sahf
ret
mov
push
dec
lock
mov
ins
mov
mov
ins
mov
mov
ins
mov
loope
inc
mov
push
jl
push
push
mov
pop
in
mov
mov
mov
ins
mov
mov
mov
mov
ins
bound
mov
js
ja
mov
mov
ins
mov
mov
cmp
fstp
mov
mov
ins
mov
mov
call
adc
(bad)
(bad)
sub
push
shr
shr
shr
add
mov
and
inc
jo
cmp
dec
sbb
aad
mov
mov
lods
mov
mov
mov
ins
mov
push
push
repz
adc
or
dec
aad
mov
mov
mov
mov
mov
lea
ret
icebp
and
out
xchg
bound
(bad)
ins
icebp
jnp
push
push
cmps
bound
(bad)
lea
or
xchg
int3
adc
(bad)
xchg
test
mov
aad
enter
pop
add
inc
pop
xor
dec
inc
lock
mov
popa
xchg
mov
sub
std
jl
mov
aad
pop
lea
xor
jmp
sbb
ins
mov
mov
outs
and
or
gs
mov
ins
mov
mov
rcr
aad
mov
mov
jnp
aas
inc
lock
(bad)
aad
mov
push
sbb
mov
das
test
cmp
or
adc
inc
sub
shr
shr
shr
xor
jo
sbb
test
in
inc
push
mov
push
push
repz
cmp
ins
mov
mov
ins
cmp
dec
mov
rol
dec
sbb
aad
mov
aad
outs
mov
or
mov
(bad)
rcr
ins
xchg
call
outs
mov
mov
ins
mov
mov
mov
mov
aaa
ins
mov
ins
mov
mov
or
mov
fisub
int
call
mov
mov
or
mov
fisub
int
xor
push
jnp
cwde
outs
bnd
add
inc
dec
mov
cmp
pusha
call
mov
mov
in
cld
mov
fsubr
sbb
xor
lea
dec
adc
push
fbld
(bad)
lea
add
mov
mov
pop
outs
adc
inc
test
cmp
inc
or
dec
fisubr
sar
adc
inc
mov
adc
repnz
jecxz
sub
inc
shl
dec
lock
sbb
repz
lea
dec
adc
inc
test
cmp
inc
mov
sub
shr
aad
mov
mov
pop
outs
adc
inc
test
cmp
inc
or
(bad)
fsubr
shr
inc
adc
push
jae
adc
dec
mov
and
mov
mov
push
mov
bnd
mov
test
gs
push
inc
sbb
aad
mov
aad
pusha
mov
mul
adc
inc
push
mov
lea
pusha
dec
cmp
sub
ins
clc
jl
imul
adc
dec
lock
adc
sar
dec
lock
ins
mov
and
out
or
fild
shr
shr
enter
mov
mov
ins
push
mov
push
sub
(bad)
aad
dec
mov
push
adc
pushf
in
inc
push
mov
xor
mov
mov
fisub
frstor
mov
das
sbb
push
gs
and
and
mov
jecxz
sub
loopne
mov
inc
mov
add
sub
xlat
ins
mov
shl
ror
adc
(bad)
ins
mov
mov
or
dec
fild
shr
shr
and
sbb
sbb
cmp
fsubr
shr
xor
fnstcw
mov
enter
shl
aad
mov
aad
bound
iret
adc
push
repz
sbb
repz
sbb
arpl
dec
adc
inc
test
cmp
inc
or
or
shr
shl
inc
pop
inc
sbb
aad
mov
mov
ins
mov
mov
add
outs
lock
inc
call
jo
xor
lock
adc
das
xor
jp
sub
(bad)
sub
retf
cdq
fs
test
add
int
jo
repnz
add
add
adc
jne
mov
mov
sub
popa
mov
clc
jmpw
cdq
mov
jp
sti
div
sub
mov
xor
je
gs
repz
or
pop
and
pusha
sti
mov
xor
sbb
cmp
dec
outs
cmp
inc
dec
shr
pop
jb
and
sahf
fs
jp
repz
mov
adc
mov
xor
in
arpl
xor
mov
inc
xchg
outs
add
jns
add
imul
test
imul
cs
je
mov
pop
sbb
adc
arpl
js
cld
div
sub
mov
mov
fnsave
inc
int
xchg
xchg
imul
mov
ret
cdq
pop
xchg
test
mov
mov
jbe
retf
int3
sub
adc
aad
inc
inc
stos
push
jb
pop
or
jns
sbb
jmp
push
inc
adc
mov
or
cli
dec
and
sbb
cmovnp
mov
mov
out
cmp
in
dec
test
jne
inc
adc
and
out
daa
aam
and
fnsave
(bad)
push
and
mov
mov
pop
and
cmp
scas
mov
das
cmps
test
iret
xchg
pop
movs
das
scas
xor
fistp
pop
fdivr
xor
and
inc
lea
test
pop
xchg
jo
mov
rol
iret
test
aas
fnstsw
ficom
adc
sbb
sbb
pop
sbb
xor
lods
cli
inc
push
shl
inc
enter
pop
lods
pop
(bad)
popf
xor
fmul
dec
fmul
xor
fld
(bad)
push
js
xor
inc
shl
inc
ret
test
fdiv
pop
mov
inc
loopne
adc
rol
inc
shr
daa
(bad)
fs
pop
mov
cmp
mov
xor
inc
iret
test
mov
loopne
adc
rol
inc
shr
xchg
push
jmp
sbb
pop
sbb
inc
mov
fistp
pop
(bad)
jbe
pop
and
(bad)
icebp
pop
xor
sahf
push
jle
ret
icebp
pop
xor
adc
sbb
cs
jb
jb
retf
adc
ins
sbb
sub
pop
into
adc
jnp
pop
(bad)
jae
cwde
(bad)
retf
sub
test
(bad)
mov
and
int3
or
fs
lods
sub
mov
jns
xor
out
pop
mov
inc
mov
bound
mov
inc
retf
outs
outs
repz
mov
(bad)
(bad)
fld
mov
fcomp
jb
xchg
fsubrp
sti
dec
xlat
sub
inc
lea
fist
ret
mov
mov
jns
stc
(bad)
rol
jb
sbb
adc
add
mov
or
dec
jecxz
xchg
xchg
jle
rcl
mov
add
and
test
pop
gs
push
mov
xor
mov
push
(bad)
sub
push
jmp
cwde
aad
mov
mov
sbb
in
daa
or
mov
xor
sub
jle
imul
(bad)
mov
inc
mov
popa
rcr
pop
(bad)
hlt
xor
pop
add
cmps
push
inc
pop
push
add
ror
mov
test
nop
dec
mov
cmp
sub
push
in
jno
int3
and
daa
mov
xchg
xor
fcom
sub
pushf
xor
fcomp
inc
add
and
or
or
pop
add
mov
pop
jmp
add
scas
sub
and
push
ja
scas
dec
(bad)
and
cmc
out
adc
xchg
fcomp
aaa
cwde
fcomp
test
sbb
pop
imul
or
pop
inc
push
stos
fs
pop
mov
sbb
push
clc
cmovo
lods
(bad)
ror
inc
add
popa
iret
push
or
aaa
and
stos
xor
xchg
xor
fcom
in
fcom
xor
ror
inc
add
popa
iret
push
or
aaa
and
stos
xor
xchg
xor
pop
jmp
clc
out
push
sbb
add
sub
cli
xchg
das
or
cmp
cmp
xor
pushf
fcom
enter
mov
add
xchg
fcom
dec
pop
add
imul
adc
xchg
fcomp
aaa
clc
jg
push
jmp
or
inc
test
sub
in
outs
add
sub
sub
push
scas
(bad)
out
sbb
or
xchg
sub
mov
jo
pop
ficom
xchg
rol
out
sbb
leave
js
mov
out
adc
inc
jmp
inc
fimul
nop
jmp
inc
jmp
hlt
je
movs
fadd
xchg
sahf
xor
adc
or
adc
inc
jmp
mov
mov
jns
daa
fsub
adc
inc
jmp
inc
ficom
daa
call
jmp
inc
dec
retf
xor
adc
or
adc
inc
jmp
(bad)
mov
fwait
jmp
adc
inc
call
fnsave
daa
fsub
adc
inc
jmp
sub
daa
inc
jmp
inc
push
mov
sar
retf
div
push
jb
mov
pop
ins
data16
call
jns
fadd
sub
push
or
xchg
jbe
mov
rcl
mov
push
scas
fs
jnp
xchg
aas
mov
out
dec
xchg
les
jo
pop
inc
(bad)
push
je
mov
lea
xor
hlt
(bad)
push
jnp
jge
mov
sar
ror
and
xor
push
pop
xor
imul
jns
jecxz
dec
stos
movs
rcl
xchg
mov
push
xchg
cmp
lea
or
dec
dec
fnstcw
mov
or
push
in
imul
or
stc
mov
mov
sbb
mov
imul
or
nop
inc
pop
and
pushf
push
stc
add
and
(bad)
jle
and
sub
adc
xchg
cmps
adc
xchg
inc
push
dec
dec
jae
mov
int
lods
add
outs
adc
arpl
adc
xor
(bad)
std
inc
dec
iret
xchg
jbe
(bad)
movs
ror
jo
and
test
mov
add
inc
jns
int3
sbb
xor
(bad)
hlt
neg
cld
hlt
neg
cld
std
neg
inc
stc
xor
hlt
fstp
cld
std
neg
(bad)
mov
fucom
rol
repz
hlt
call
cld
sti
hlt
sbb
add
(bad)
clc
pop
cli
mov
neg
cld
push
jnp
clc
test
in
(bad)
push
leave
mov
in
or
inc
pusha
push
imul
push
imul
imul
imul
or
jge
(bad)
clc
mov
mov
ret
dec
pusha
push
imul
ins
xlat
push
fnstenv
dec
pusha
push
imul
push
imul
imul
aam
daa
in
pop
in
out
retf
sar
push
imul
imul
imul
push
imul
imul
jecxz
xlat
mov
push
imul
imul
pop
dec
pusha
push
imul
aam
daa
in
push
in
out
retf
sar
push
imul
imul
push
imul
ins
(bad)
push
je
mov
repnz
scas
lock
stc
(bad)
mov
push
cld
clc
xchg
push
imul
ins
inc
pusha
push
imul
jae
pusha
addr16
mov
ja
mov
inc
shl
cmps
frstor
dec
pusha
push
imul
imul
mov
fdiv
cld
push
imul
mov
ja
sbb
jae
push
imul
imul
sbb
inc
pusha
call
leave
sbb
fs
imul
imul
fwait
push
add
inc
pusha
push
imul
push
imul
fsubr
pop
mov
retf
inc
pusha
push
imul
les
(bad)
cld
aas
(bad)
cld
push
imul
imul
clc
retf
push
imul
outs
pop
sar
ja
pusha
push
imul
fs
imul
mov
(bad)
sar
repz
pusha
imul
push
imul
cmp
dec
pusha
push
imul
jmp
div
repz
in
test
push
add
repnz
test
jnp
push
imul
imul
push
imul
jo
cmps
fmul
jecxz
cld
out
repz
cld
push
push
imul
imul
outs
aaa
std
pop
cld
aad
test
jle
iret
aad
push
imul
imul
or
cld
push
push
imul
cli
idiv
cld
clc
push
dec
pusha
push
imul
cmp
cld
push
push
imul
imul
retf
dec
pusha
push
imul
cli
out
inc
(bad)
les
cld
clc
ja
pusha
push
imul
imul
clc
iret
fldenv
dec
pusha
ins
imul
stos
inc
pusha
push
imul
imul
retf
dec
pusha
push
imul
outs
inc
pusha
push
imul
imul
mov
pop
sbb
clc
ja
pusha
push
imul
push
imul
imul
pusha
imul
outs
inc
pusha
push
imul
test
xchg
clc
ja
pusha
push
imul
push
imul
imul
imul
push
imul
mov
(bad)
sar
add
push
imul
imul
sbb
inc
pusha
push
outs
xchg
adc
int3
frndint
inc
push
leave
add
sti
in
clc
iret
fldenv
dec
pusha
push
imul
or
inc
pusha
test
sbb
inc
pusha
imul
push
imul
pop
lods
inc
pusha
push
imul
imul
pusha
push
imul
imul
push
or
add
(bad)
jae
adc
mov
(bad)
in
fdivr
clc
dec
push
imul
imul
shrd
dec
xlat
fistp
pop
push
(bad)
icebp
(bad)
clc
out
pusha
push
imul
imul
xlat
sbb
retf
cld
clc
iret
frstor
dec
pusha
push
imul
xchg
out
(bad)
mov
push
imul
imul
imul
fcomp
inc
pusha
push
outs
aaa
popf
(bad)
out
aad
sbb
jnp
push
imul
imul
cld
outs
xlat
cld
push
imul
push
inc
pusha
push
imul
clc
iret
frstor
dec
pusha
push
imul
mov
xchg
clc
ja
pusha
push
imul
ins
inc
pusha
push
imul
imul
push
imul
imul
mov
push
movs
push
pop
sbb
clc
ja
pusha
push
ins
inc
pusha
push
imul
push
imul
push
imul
imul
ins
push
push
call
mov
pusha
push
imul
imul
test
mov
push
imul
imul
imul
dec
in
jmp
cld
xchg
cld
push
imul
or
inc
pusha
push
imul
xor
xlat
(bad)
cli
push
pop
(bad)
jmp
sub
or
inc
pusha
push
imul
ins
inc
push
call
mov
pusha
push
imul
sbb
inc
pusha
push
imul
iret
dec
pusha
push
imul
push
imul
clc
push
inc
pusha
push
imul
ins
inc
push
cmp
pusha
push
imul
imul
sbb
inc
pusha
test
xchg
fs
imul
pop
lods
inc
pusha
push
imul
pusha
push
imul
push
or
add
(bad)
jae
adc
mov
(bad)
in
fdivr
clc
dec
imul
adc
daa
(bad)
out
addr16
pop
sar
push
in
cld
ja
cld
push
imul
imul
push
imul
(bad)
scas
inc
std
hlt
pop
(bad)
cmc
(bad)
sti
fbstp
sar
out
repz
hlt
retf
shr
cld
hlt
test
in
icebp
mov
stos
sti
fs
ffree
adc
repz
(bad)
jmp
xor
sar
mov
and
push
imul
mov
pusha
push
imul
mov
idiv
sbb
in
test
pop
aad
jle
(bad)
jnp
adc
(bad)
push
aad
repz
mov
shl
shr
sahf
fwait
psllq
retf
xor
adc
or
adc
inc
jmp
inc
push
mov
fsub
jmp
mov
fwait
jmp
adc
inc
jp
xor
xor
sub
mov
out
mov
or
js
repz
out
mov
retf
jb
fs
push
addr16
mov
sbb
in
push
push
sub
addr16
movs
xchg
mov
jb
pop
mov
inc
jecxz
rol
fnstenv
or
xor
(bad)
cmp
jnp
mov
add
mov
cmp
mov
add
inc
and
rol
adc
cmc
push
hlt
mov
and
das
(bad)
rol
xor
stos
mov
sahf
ja
imul
push
fsub
enter
rcr
ins
xlat
nop
jecxz
sub
add
mov
pop
jnp
nop
mov
xchg
add
mov
adc
sahf
rcl
jne
fistp
fld
pop
in
mov
iret
jp
cmps
pop
(bad)
ins
mov
jns
dec
xchg
popa
rcl
and
stos
test
pop
gs
jns
push
push
and
or
test
xor
sahf
xchg
test
bound
xchg
xchg
dec
mov
adc
and
pusha
and
loop
sar
push
jno
dec
mov
push
xchg
out
and
xor
jns
or
cmp
xchg
xor
or
movs
in
popf
cmp
or
cmc
dec
test
xor
or
mov
js
cmp
jns
or
movs
in
xchg
test
loop
mov
in
xchg
jns
call
xchg
cmp
or
xor
jns
aad
jns
or
xor
sub
or
jle
inc
mov
out
leave
mov
in
call
xchg
xor
or
cmp
or
cmp
jns
or
jne
out
cdq
movs
dec
hlt
nop
or
in
jns
push
call
push
cmps
js
xor
jns
or
xor
sub
cmp
xor
jns
or
xor
ins
lods
scas
cmps
fisttp
lea
push
mov
retf
cmp
mov
sbb
jl
retf
shl
dec
ret
hlt
or
daa
icebp
mov
fwait
loope
daa
and
adc
inc
jmp
inc
jp
mov
fdiv
mov
fisttp
(bad)
hlt
cmp
xor
adc
inc
jmp
sar
dec
repz
fwait
clc
je
mov
xor
(bad)
(bad)
xor
add
scas
xlat
xchg
push
les
add
jnp
jmp
mov
fcomp
ins
loope
xor
or
pop
xchg
push
mov
pusha
sbb
iret
mov
fsubr
rcl
ss
mov
pop
jne
or
jns
aam
push
pusha
out
jmp
push
hlt
into
pop
ins
in
retf
xchg
fidiv
hlt
ja
xchg
test
and
inc
xchg
es
pop
stos
jmp
mov
fst
sub
mov
mov
(bad)
in
cs
mov
push
fstp
add
aam
xchg
stos
gs
push
repz
into
mov
arpl
sbb
aam
jo
stos
movs
rcl
xchg
inc
add
push
arpl
adc
jne
add
or
mov
sub
cmp
jle
fisub
or
xchg
and
jbe
mov
(bad)
jge
or
or
inc
jns
xchg
addr16
mov
dec
mov
push
sbb
cmp
xor
dec
inc
dec
fiadd
xchg
dec
push
pop
and
dec
ret
mov
push
bound
inc
bound
lds
add
les
mov
imul
out
pop
scas
cli
adc
cli
pop
and
sbb
cli
cdq
pop
scas
sti
pop
push
(bad)
jle
lds
cli
rcr
pop
push
adc
dec
out
test
mov
dec
out
inc
sbb
(bad)
loope
jmp
out
and
and
push
jae
arpl
leave
jmp
push
(bad)
hlt
cmp
pop
in
daa
inc
jmp
inc
jp
mov
jbe
in
fsub
cld
mov
js
daa
fsub
adc
inc
dec
mov
mov
out
daa
inc
jmp
inc
cli
adc
mov
ja
daa
clc
out
daa
inc
jmp
inc
dec
mov
mov
call
adc
inc
jmp
adc
daa
inc
jmp
pushf
jmp
adc
inc
fidiv
jecxz
adc
inc
jmp
(bad)
jecxz
daa
fsubr
adc
inc
mov
pop
inc
ficom
daa
call
or
fwait
and
xor
lea
mov
hlt
stos
mov
adc
adc
inc
jmp
(bad)
xor
adc
jbe
test
cmps
jb
clc
in
daa
inc
push
pop
inc
or
mov
push
cmp
neg
mov
aad
sub
push
sub
add
(bad)
sub
xchg
jle
mov
movs
movs
in
jae
add
cdq
bound
int
jbe
std
inc
mov
mov
ror
hlt
int3
fisubr
cmp
mov
jns
jb
xchg
push
in
sti
outs
rcl
mov
jmp
je
dec
fld
mov
cmp
xchg
popa
pop
movs
fisubr
jae
loopne
aad
xchg
inc
stos
in
mov
inc
imul
and
call
lock
mov
pop
hlt
fst
inc
pushf
or
xlat
lods
xor
mov
hlt
std
xchg
jo
mov
add
daa
or
pop
xchg
lock
dec
inc
sti
mov
pusha
rcr
mov
mov
rcr
out
stc
call
mov
fisttp
aam
and
ds
ror
adc
jbe
xchg
icebp
mov
add
inc
jbe
xchg
stc
mov
dec
mov
sub
cmovae
and
xor
xor
mov
pop
or
in
pop
pop
call
ja
imul
imul
je
jbe
lods
add
repnz
repz
ins
clc
jae
imul
mov
pop
rcr
inc
jb
cmc
stos
or
or
push
xor
out
ja
or
jmp
cmp
xchg
daa
or
adc
inc
fcmovbe
fcmovb
cwde
dec
cmp
jp
mov
pusha
je
mov
xchg
and
ja
js
loop
push
shr
ss
jae
lea
sbb
cmp
push
push
imul
stos
jb
fwait
addr16
popf
in
mov
fld
in
retf
imul
int3
mov
inc
inc
call
jp
scas
fcom
repz
loope
in
retf
aas
sbb
jbe
mov
sar
les
aad
ret
cmps
cmp
jne
test
jbe
mov
test
jb
and
mov
or
push
inc
(bad)
mov
or
jae
pop
(bad)
jecxz
leave
(bad)
cwde
ds
xchg
jp
stos
push
(bad)
popa
pop
mov
and
test
shl
or
mov
mov
jae
xchg
fcom
xchg
jnp
jns
mov
or
dec
xchg
popa
pop
je
or
mov
mov
adc
xor
push
and
push
ja
xchg
sub
test
jns
jle
dec
inc
push
xor
fldenv
push
sti
and
xchg
sub
test
sub
in
cmps
mov
es
icebp
shr
cwde
stos
pop
std
cwde
stos
pop
push
cdq
sub
js
mov
std
cwde
test
jo
cmp
shl
icebp
cwde
cmps
pop
repz
pop
adc
test
shl
movs
jg
pushf
stos
pop
lock
repz
add
cmp
mov
ret
ins
add
ret
ins
add
add
add
std
cmp
inc
rol
pop
fisttp
cmp
bound
or
add
icebp
(bad)
dec
ficomp
imul
cmc
addr16
fs
gs
ret
pop
pop
pop
(bad)
cmp
mov
ret
ins
add
add
fdiv
ret
ins
add
ret
in
(bad)
xchg
jmp
mov
aaa
ret
push
mov
stos
pop
repnz
repz
cdq
and
stos
pop
stc
cwde
mov
or
div
(bad)
mov
mov
xchg
mov
sbb
mov
jo
cwde
pop
or
xchg
add
loop
and
xchg
jno
popa
test
sbb
dec
push
sbb
adc
shl
sbb
push
mov
fadd
or
and
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
in
fsub
cwde
mov
pop
(bad)
hlt
dec
mov
adc
inc
jmp
(bad)
mov
fwait
jmp
adc
inc
stos
mov
fsub
adc
inc
jmp
xor
ins
daa
sar
fwait
bnd
fwait
dec
jb
mov
xchg
adc
out
popa
cdq
cld
jo
fwait
in
loop
aad
and
bound
loope
ins
rcl
lea
dec
mov
sub
(bad)
sahf
mov
aam
bound
in
and
ins
and
push
pop
sub
xchg
pop
addr16
sti
sub
mov
inc
stos
movs
rcl
xchg
jno
cmps
fidiv
cs
jno
movs
hlt
test
mov
std
push
ja
movs
xchg
jne
rol
ins
sar
imul
mov
fidiv
lea
xchg
mov
inc
mov
dec
shr
xor
mov
push
(bad)
stos
cwde
cld
retf
mov
jecxz
fst
dec
jb
hlt
repz
xor
sahf
sbb
and
ins
xor
mov
push
(bad)
dec
out
adc
mov
fiadd
pop
jnp
jl
mov
and
jns
and
dec
cmp
mov
je
mov
inc
and
xor
and
stos
(bad)
les
adc
fstp
adc
jbe
xchg
inc
(bad)
push
mov
inc
pop
cmp
push
and
mov
xchg
xor
ficom
inc
stc
cmps
ret
(bad)
jb
and
sbb
cdq
push
sbb
jecxz
stc
rcr
mov
or
mov
or
mov
or
mov
or
and
(bad)
lods
and
mov
shl
and
jmp
lock
cs
(bad)
jl
jne
adc
mov
or
mov
or
adc
fnsave
adc
jmp
xchg
dec
sub
ins
dec
sub
xchg
mov
adc
sbb
nop
sub
test
sub
xchg
dec
sub
fnstenv
scas
stos
fidiv
adc
cdq
data16
mov
cwde
aam
fimul
mov
jo
scas
mov
sub
mov
test
mov
lds
and
out
lods
and
mov
push
es
fnstcw
and
div
out
movs
and
out
or
pop
cmps
and
test
mov
test
popf
cmp
and
mov
xchg
mov
leave
fwait
pop
push
(bad)
hlt
dec
mov
adc
inc
jmp
cmp
adc
inc
call
fistp
adc
fwait
call
pop
ins
pop
xchg
sub
rol
jae
in
pop
shl
sub
adc
xor
ds
mov
mov
test
xor
dec
mov
mov
jbe
xchg
sbb
push
sub
xchg
mov
dec
pop
dec
pop
test
stos
cwde
aad
pushf
mov
test
mov
mov
pushf
test
rol
pop
test
xchg
repnz
push
movs
hlt
inc
push
in
xchg
push
fwait
in
les
sub
sub
in
outs
and
fimul
leave
mov
icebp
add
adc
sbb
mov
or
lock
jle
and
inc
(bad)
loope
scas
add
add
pop
in
shr
xchg
cmp
mov
add
adc
mov
iret
rcl
enter
(bad)
push
sbb
pop
add
or
mov
push
xor
or
out
stos
bound
mov
dec
fs
sahf
sub
or
sbb
nop
pop
aad
jmp
mov
mov
jns
test
xchg
and
push
inc
fwait
loopne
push
aad
pop
mov
das
inc
outs
loope
xchg
stc
fucomip
adc
dec
jnp
out
dec
jnp
loop
jnp
dec
dec
retf
lock
(bad)
dec
jns
mov
lock
push
ds
push
ja
int3
popa
leave
lock
imul
pop
dec
js
into
(bad)
(bad)
in
je
scas
dec
jnp
out
popa
sub
dec
push
fnsave
gs
inc
jb
out
inc
jb
out
jp
out
cs
xlat
push
dec
fild
mov
inc
jb
jmp
and
push
out
adc
fsubrp
test
pop
cld
scas
adc
repz
jo
cmc
dec
pop
xlat
shr
gs
arpl
out
dec
and
jmp
mov
push
xchg
iretw
arpl
(bad)
dec
push
fucomp
icebp
and
push
loopne
fbld
sahf
pop
aas
dec
jbe
aas
push
arpl
ins
sbb
(bad)
jb
int3
popa
leave
lock
lahf
xor
and
mov
sbb
inc
or
or
push
lea
into
adc
mov
movs
push
add
sbb
add
pop
push
pusha
push
inc
outs
jmp
out
rol
rol
lea
push
idiv
in
(bad)
shl
dec
jp
not
xchg
pop
movs
mov
scas
jb
(bad)
mov
adc
js
fild
mov
jo
test
ret
jo
and
inc
imul
retf
ja
dec
cmc
aam
je
mov
and
pop
mov
or
sub
ins
xchg
sbb
pop
fwait
inc
pop
fs
xchg
pop
loop
mov
adc
or
(bad)
xor
mov
add
pop
xchg
(bad)
inc
in
outs
inc
mov
ss
in
gs
mov
push
in
jae
mov
mov
fstp
scas
adc
test
shr
xor
xchg
xchg
inc
aad
pop
mov
stos
or
ret
push
pop
(bad)
retf
push
leave
mov
mov
pushf
push
je
cmp
lea
jae
mov
dec
mov
adc
cmps
pop
inc
or
pop
les
push
imul
mov
add
cmp
inc
mov
add
mov
dec
test
cmp
pop
in
sub
dec
pop
inc
adc
outs
mov
dec
dec
mov
mov
xchg
aaa
sub
sbb
out
neg
dec
rcl
vunpckhps
sbb
dec
mov
sbb
sbb
cmp
pop
lods
pop
sub
rol
and
sti
mov
inc
shr
aaa
movs
xor
rcr
and
fldcw
jmp
jnp
out
mov
imul
dec
jnp
mov
fmul
ret
or
mov
clc
dec
adc
outs
mov
jbe
es
dec
sbb
xchg
cmp
imul
pop
mov
repnz
pop
jno
movs
jbe
cdq
fsub
add
mov
je
outs
mov
or
dec
mov
retf
jne
push
mov
push
cmp
lea
pusha
mov
and
ret
fwait
cli
push
and
add
repnz
cwde
mov
fild
arpl
push
frstor
cmp
dec
xor
jb
mov
xor
aas
add
push
mov
jns
cld
(bad)
sahf
cld
cs
in
test
retf
jg
mov
adc
jecxz
jecxz
lods
or
mov
add
mov
mov
sahf
xchg
in
gs
xchg
add
shl
lds
cs
dec
fild
stos
(bad)
(bad)
rol
push
inc
xrelease
push
ss
cmp
stos
in
ret
push
xchg
sub
ret
or
mov
cmc
and
sub
and
mov
cmp
push
stos
cmp
mov
push
push
call
mov
in
imul
and
pusha
push
stos
add
dec
jl
mov
inc
stos
mov
stos
inc
jae
sub
stc
lods
jnp
adc
add
jl
retf
xor
ins
add
iret
push
popa
popa
fbstp
dec
inc
mov
js
jmp
push
pop
cmps
inc
sti
jmp
arpl
sar
arpl
(bad)
pusha
int3
std
cld
dec
dec
addr16
inc
pop
iret
xor
jmp
fstp
repz
jmp
(bad)
ror
(bad)
arpl
jmp
cld
sar
arpl
(bad)
outs
int3
dec
arpl
nop
fdivr
arpl
arpl
(bad)
addr16
jge
in
dec
ret
loopne
out
push
scas
pop
rol
cli
fcos
arpl
addr16
mov
popa
arpl
sar
arpl
(bad)
mov
mov
(bad)
data16
fnstsw
out
into
lea
idiv
sbb
ret
cli
fcos
arpl
arpl
(bad)
ins
int3
sbb
jmp
(bad)
arpl
lea
movups
nop
ins
sub
stos
mov
sti
arpl
sar
outs
int3
pop
imul
inc
sti
arpl
arpl
(bad)
pusha
int3
fnstsw
jle
ins
inc
mov
jo
arpl
push
popa
imul
inc
arpl
push
popa
inc
ror
sar
xor
push
cmp
jo
dec
mov
jp
dec
cmps
push
imul
jp
hlt
or
jl
scas
outs
popa
mov
mov
ret
lock
xor
lea
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
es
pop
mov
sbb
and
neg
xlat
mov
dec
xchg
inc
jge
stc
or
sbb
mov
fcom
pop
outs
jmp
xor
xor
movs
je
test
out
add
pop
mov
cmp
mov
ja
push
xchg
jae
xchg
jbe
sar
mov
mov
inc
xchg
adc
in
ret
mov
ds
in
ret
push
xchg
inc
or
mov
or
jle
imul
js
sbb
xor
jmp
jae
lea
cmps
xchg
repz
and
push
mov
popf
pop
jecxz
jne
cmc
je
and
jb
in
bound
add
push
xor
mov
dec
mov
dec
mov
test
inc
add
inc
repz
aad
inc
mov
pop
(bad)
stos
sub
ret
xor
mov
mov
lea
bt
add
mov
and
ja
fwait
test
rol
mov
addr16
mov
jns
hlt
and
mov
mov
fidiv
mov
cmc
stos
stos
or
stos
stos
or
stos
jmp
pop
inc
sahf
cmc
sub
or
adc
or
test
add
pop
pop
sub
add
or
stos
or
or
cmps
push
cmc
cmp
mov
movs
stos
pop
cmc
sub
mov
in
xor
xchg
popa
aaa
ss
lods
xor
dec
push
lods
retf
add
movs
mov
in
xor
xchg
imul
test
and
movs
lods
out
xchg
or
cmp
ins
aaa
idiv
or
repnz
add
cmp
xor
xchg
imul
ss
push
out
out
stos
test
or
jae
xchg
or
xor
xchg
repnz
or
cmp
imul
out
push
add
cmp
repz
xchg
gs
es
jecxz
xor
loop
imul
stos
dec
movs
cld
or
jp
stos
repnz
test
lods
(bad)
pop
xchg
imul
xchg
data16
ss
cli
xor
repnz
clc
stc
add
stos
or
push
test
or
xchg
imul
ss
cmc
xor
adc
and
or
jmp
movs
mov
add
dec
push
movs
xchg
imul
data16
push
mov
or
stos
mov
sti
test
adc
lods
or
push
mov
leave
add
xchg
imul
test
or
mov
add
imul
xchg
and
movs
mov
xchg
imul
ss
push
xchg
imul
ss
push
mov
or
xor
add
or
xchg
mov
cmps
or
imul
movs
mov
sub
lods
add
imul
inc
test
div
xchg
ins
aaa
out
imul
ss
addr16
out
cmp
xchg
imul
or
sahf
and
and
cmc
or
imul
mov
div
lods
pop
std
sti
pop
or
lods
add
dec
push
movs
xchg
imul
inc
enter
xchg
imul
ss
mov
mov
xchg
imul
out
pop
xor
xchg
imul
ss
ins
aaa
or
sahf
and
xor
cmc
or
imul
ss
ins
aaa
xchg
imul
ss
test
inc
cmp
imul
ss
shl
xchg
gs
movs
add
stos
test
fisubr
stos
or
cmp
in
cmps
or
test
sti
stos
or
stos
mov
mov
(bad)
fadd
repz
pop
mov
(bad)
inc
mov
mov
jns
pop
xchg
imul
call
push
jbe
or
xchg
imul
xchg
popa
aaa
ss
cmp
ss
imul
xchg
adc
sub
sbb
mov
and
or
dec
jmp
and
inc
shl
or
and
lea
fistp
retf
jb
inc
and
adc
inc
jmp
sbb
adc
ss
lods
rcr
jle
in
mov
in
cli
scas
or
(bad)
push
mov
test
imul
mov
fdiv
pop
fs
out
cmp
pop
hlt
outs
into
push
push
popf
cs
out
push
mov
adc
mov
mov
jle
mov
rcl
and
dec
or
mov
adc
add
cli
movs
cmp
sbb
mov
shl
or
cwde
pop
and
in
xchg
or
xchg
scas
cmp
aam
push
data16
mov
sar
or
(bad)
fdiv
(bad)
call
fistp
dec
or
mov
jnp
xchg
mov
(bad)
gs
jnp
(bad)
mov
and
mov
adc
mov
or
loop
mov
xchg
imul
xor
mov
popa
(bad)
sar
inc
addr16
cmps
mov
xor
sbb
push
(bad)
push
and
into
push
out
mov
or
or
mov
inc
ret
inc
jg
hlt
rol
sub
rol
mov
inc
jns
ins
pop
stc
popaw
imul
adc
out
and
out
and
out
and
xor
into
push
hlt
(bad)
xlat
sub
pop
xor
xor
push
unpckhps
das
sub
fidiv
and
scas
cs
out
ror
out
and
push
sub
push
jmp
jle
sbb
imul
ror
retf
mov
jb
push
sbb
mov
mov
jb
cmp
out
cmc
ja
cmp
retf
xchg
test
inc
shr
retf
mov
jb
mov
jb
clc
mov
(bad)
addr16
adc
sbb
retf
mov
jb
clc
mov
adc
mov
jle
adc
jmp
push
xchg
das
or
call
cmp
scas
cs
out
xor
mov
adc
(bad)
xor
jp
dec
cmc
dec
mov
dec
je
xor
out
into
push
dec
imul
sbb
frstor
stc
mov
repz
cwde
push
push
imul
pop
pushf
(bad)
out
fild
les
push
(bad)
test
mov
adc
mov
inc
mov
bound
jnp
pop
(bad)
hlt
adc
pop
inc
shl
adc
inc
jmp
inc
mov
les
jmp
adc
inc
jmp
inc
jp
in
fsub
cmp
(bad)
hlt
sti
inc
pop
inc
xchg
call
adc
inc
mov
sahf
adc
jbe
add
cmps
jb
mov
adc
inc
jmp
hlt
jns
sti
fimul
jecxz
test
cld
and
fs
and
push
lods
xlat
xchg
pop
gs
fisttp
fimul
push
pop
stos
in
jle
mov
pop
pop
xor
pop
mov
mov
jns
scas
fcom
mov
mov
in
cmp
mov
fnsave
in
(bad)
fwait
mov
xchg
mov
adc
and
scas
cmp
fist
inc
mov
ins
sub
jbe
shr
jl
jmp
(bad)
jmp
push
and
push
dec
jecxz
and
mov
adc
lock
fidiv
fidiv
arpl
xor
data16
cmp
dec
xchg
adc
stos
cli
push
mov
adc
push
fdivr
and
or
cmp
(bad)
mov
push
cmp
jmp
xor
inc
mov
add
ins
dec
adc
nop
jbe
cdq
into
imul
cli
pop
add
movntps
mov
cmp
xor
ss
inc
fisttp
inc
outs
adc
mov
aad
pop
xchg
fs
clc
sub
cmp
xchg
lods
pop
retf
xchg
lods
pop
retf
xchg
movs
pop
retf
xchg
in
pop
retf
mov
dec
pop
ret
xchg
movs
int3
retf
pop
or
inc
pop
repz
popf
push
mov
test
retf
cmp
xchg
sbb
cmp
lods
jl
xchg
lea
xchg
mov
pop
sti
movs
stos
push
out
pop
movs
lds
xor
push
or
rcl
shl
mov
pop
push
or
shl
imul
mov
int3
push
add
stos
lea
fist
xor
push
test
mov
pop
push
or
rcl
rcl
gs
addr16
push
pop
sub
neg
in
mov
fdivr
sti
mov
or
pop
fist
mov
or
retf
aad
ja
push
add
shl
add
xchg
sbb
mov
push
or
rcl
xor
push
or
sbb
or
pop
push
or
rcl
rol
mov
mov
sbb
xor
push
mov
(bad)
in
(bad)
fsub
xchg
movs
sub
call
cmp
xor
xchg
xor
or
rcl
rol
mov
mov
inc
pop
cmp
xor
addr16
test
jae
or
rcl
rcl
shl
mov
pop
or
rcl
rcl
shl
push
sub
cmp
xor
out
mov
add
shl
adc
pop
retf
xchg
lods
pop
retf
xchg
lods
pop
retf
xchg
lods
pop
retf
xchg
scas
pop
imul
adc
lods
(bad)
ins
pop
xchg
lods
mov
stos
test
adc
fisttp
ins
jmp
xchg
scas
ins
leave
xchg
pop
pop
fwait
movs
mov
in
leave
xchg
lods
pop
mov
std
pop
fwait
xlat
pushf
neg
xchg
xor
push
or
rcl
xchg
les
adc
add
or
xor
push
or
rcl
ret
popf
js
xchg
mov
add
or
xor
push
dec
mov
(bad)
fcomp
cmp
or
rcl
rol
mov
adc
or
rcl
rol
pop
pop
jnp
loop
cmp
mov
xor
push
or
shl
popf
ror
mov
rcl
rol
in
ret
xchg
xor
or
rcl
rcl
test
repz
out
pop
mov
xor
or
rcl
movs
les
mov
test
popf
ror
mov
rcl
shl
push
outs
pop
or
js
or
rcl
rcl
pop
mov
leave
xchg
(bad)
test
loope
(bad)
or
xor
not
add
fstp
pushf
push
or
rcl
rcl
shl
mov
pop
retf
xchg
mov
rcl
rcl
rol
mov
adc
or
cmp
push
leave
popf
rol
mov
adc
or
xor
push
or
rcl
shl
xor
push
or
rcl
lds
loope
lods
or
xor
push
or
add
xor
push
dec
mov
mov
xchg
out
push
or
fcom
xor
push
or
rcl
xor
push
or
rcl
pop
mov
or
rcl
shl
icebp
add
or
xor
push
dec
mov
cmps
fst
cwde
push
or
rcl
shl
push
outs
pop
or
mov
push
or
ja
loope
sub
or
rcl
shl
icebp
add
or
mov
push
or
inc
fisttp
mov
xchg
inc
repz
xchg
mov
data16
xor
or
rcl
ret
(bad)
xchg
mov
imul
push
add
xor
push
or
rcl
rol
popf
push
enter
icebp
adc
pop
pop
or
rcl
rcl
les
xor
push
dec
mov
push
jne
jmp
pop
or
rcl
rcl
rcl
lods
jbe
xchg
scas
pop
xchg
mov
pop
jecxz
lea
xchg
movs
pop
jmp
scas
inc
out
in
lds
std
pop
mov
xchg
mov
jmp
iret
jge
movs
scas
dec
jmp
lea
mov
in
push
arpl
jno
push
or
mov
inc
call
pop
or
rcl
rcl
lods
pop
retf
xchg
lods
pop
retf
xchg
movs
pop
retf
xchg
in
pop
jmp
popf
div
mov
movs
int3
retf
pop
sub
xchg
cmp
add
xchg
test
retf
sbb
xchg
sbb
cmp
lods
jl
xchg
lea
xchg
mov
pop
fwait
movs
stos
je
mov
popa
add
or
xor
push
or
rcl
(bad)
(bad)
xchg
xor
or
rcl
(bad)
xchg
xchg
std
pop
mov
push
retf
aad
pop
leave
xchg
push
jnp
pop
test
mov
rcr
xor
push
leave
mov
out
cmp
pop
leave
int
pop
mov
stos
je
mov
pop
repz
movs
add
xchg
icebp
pop
jmp
lea
xchg
movs
pop
jmp
std
inc
das
into
xchg
ss
mov
mov
mov
cmp
lods
sbb
jb
pop
cmp
xor
push
or
rcl
mov
mov
pop
push
or
rcl
rcl
sub
pop
retf
xchg
lods
pop
retf
xchg
lods
pop
retf
xchg
test
adc
lods
(bad)
ins
pop
xchg
lods
mov
stos
movs
rcl
(bad)
ins
test
add
scas
ins
leave
xchg
pop
pop
stos
movs
mov
in
leave
xchg
lods
pop
mov
std
pop
mov
cmp
nop
push
or
rcl
rcl
jno
pop
or
push
dec
dec
(bad)
addr16
ins
mov
pop
or
rcl
rcl
mov
add
xchg
lods
mov
jmp
in
add
mov
mov
jmp
popf
jp
icebp
popf
jbe
xchg
lods
pop
xchg
ret
jecxz
test
pop
fwait
stc
xchg
js
xchg
std
cmp
jns
pop
repz
scas
cmp
aam
test
loop
call
or
rcl
shl
movs
lds
xor
push
or
rcl
mov
out
cmp
pop
leave
int
pop
mov
stos
je
mov
pop
repz
movs
ins
retf
xchg
icebp
pop
jmp
lea
xchg
movs
pop
jmp
std
inc
pop
xchg
ss
mov
mov
mov
cmp
stos
sbb
xchg
sbb
or
shl
movs
lds
xor
push
or
rcl
sub
push
jae
push
inc
push
or
rcl
(bad)
aaa
push
or
rcl
shl
in
(bad)
not
aad
dec
mov
sub
jbe
mov
loop
jnp
pop
dec
aaa
mov
mov
and
call
jmp
adc
inc
pop
bound
pushf
jbe
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
mov
fdiv
in
fsub
sahf
mov
jp
dec
jmp
cmc
fwait
or
mov
pop
fiadd
pusha
dec
mov
jo
adc
jno
push
add
mov
dec
cmp
and
(bad)
mov
xor
mov
add
int3
dec
fisubr
sub
jle
push
in
ret
in
int
jmp
aad
xsavec
mov
jne
ss
(bad)
cdq
in
mov
dec
or
mov
ror
pop
lds
call
mov
mov
dec
aad
push
cmps
mov
and
xchg
sbb
adc
add
jp
adc
sahf
mov
int3
dec
je
pop
jmp
arpl
dec
inc
ja
sub
fs
adc
iret
mov
xor
aam
jns
add
jmp
mov
inc
popf
and
nop
outs
xor
rol
xchg
retf
imul
popa
cmp
sbb
mov
sub
cmps
fcomp
jg
add
mov
mov
and
dec
push
ret
mov
mov
lahf
test
sbb
inc
mov
dec
mov
sbb
popa
clc
inc
test
popa
clc
inc
test
popa
clc
inc
test
popa
clc
inc
test
popa
clc
inc
movs
test
pusha
fcmovne
std
cmp
and
cdq
push
(bad)
std
xor
sbb
into
xor
jmp
fbstp
std
xor
fwait
xchg
repnz
sub
push
stc
push
mov
pop
test
loop
call
xor
std
fstp
std
mov
inc
(bad)
(bad)
std
adc
cwde
neg
xor
std
fstp
std
add
out
rcr
icebp
xchg
retf
pusha
(bad)
std
adc
xor
std
(bad)
stc
xor
std
(bad)
std
push
mov
xor
std
(bad)
std
push
(bad)
aad
hlt
fbstp
std
(bad)
clc
test
shl
cmp
mov
push
or
inc
mov
and
cmp
mov
out
mov
movs
stc
imul
std
(bad)
std
hlt
mov
movs
fldcw
cmp
add
out
rcr
icebp
xchg
retf
pusha
(bad)
std
fs
cli
add
dec
push
jp
and
xor
std
fs
(bad)
hlt
inc
test
cmp
fbstp
std
sbb
stc
je
movs
jmp
(bad)
std
push
and
fbstp
std
sbb
je
movs
and
xor
std
mov
test
inc
lock
popa
pusha
mov
inc
mov
test
cmp
daa
popa
and
arpl
popa
cld
inc
movs
imul
mov
fs
test
imul
cmp
add
out
mov
movs
stc
imul
std
(bad)
std
hlt
mov
movs
fldcw
xor
std
hlt
(bad)
stos
and
call
xchg
out
inc
xor
std
(bad)
std
movs
dec
pop
(bad)
sbb
adc
sti
inc
xor
std
fs
(bad)
hlt
dec
test
test
add
cmps
popa
clc
mov
jno
mov
std
fistp
dec
sbb
jo
or
pusha
mov
outs
mov
rol
push
mov
pop
inc
lahf
mov
repz
rcl
xor
mov
sbb
fiadd
lods
xchg
fistp
jmp
clc
scas
pop
(bad)
fnsave
sub
outs
dec
sub
adc
xor
shl
aam
jle
add
mov
aas
and
jno
mov
or
push
xchg
sbb
mov
cmp
test
shl
outs
out
jecxz
sti
mov
mov
xor
pop
jmp
mov
fcomp
(bad)
call
stos
push
cdq
fsubr
mov
mov
or
mov
and
dec
dec
jmp
jb
and
aaa
inc
mov
imul
lahf
xchg
sti
retf
jns
mov
out
jp
xchg
out
icebp
mov
xchg
in
cmp
test
xchg
jns
mov
ret
inc
xor
jg
out
pop
les
addr16
repz
std
inc
jnp
repz
push
arpl
xchg
cli
or
hlt
in
movs
dec
in
jnp
mov
outs
rcr
inc
sub
and
in
dec
inc
mov
pop
mov
inc
es
dec
out
xor
pushf
jnp
mov
adc
cmc
add
mov
and
iret
int3
inc
jno
add
test
pop
mov
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
cs
sbb
scas
aaa
test
push
aaa
mov
(bad)
aaa
mov
into
aaa
sub
scas
aaa
jl
mov
sbb
out
jl
push
aaa
mov
push
aaa
xor
push
aaa
test
(bad)
aaa
mov
into
aaa
sub
scas
cmp
sbb
cli
jns
inc
xchg
test
and
bound
test
test
add
test
add
jge
test
lods
adc
test
add
xrelease
sub
mov
in
outs
push
push
jne
pop
xchg
adc
sbb
adc
pop
jmp
xchg
pop
out
gs
pop
test
sbb
xchg
jmp
test
sbb
xor
sbb
adc
xor
jmp
test
mov
sbb
sbb
xchg
sbb
out
in
out
pop
sub
mov
pushf
call
test
add
add
pop
stos
sbb
loop
test
add
add
push
stos
cmp
loop
test
add
cmp
sbb
xor
push
push
and
xchg
sbb
movs
adc
xor
jmp
test
mov
sbb
sbb
sbb
test
jle
sbb
cmp
lahf
je
push
les
enter
sbb
sbb
sbb
(bad)
daa
add
pop
stos
sbb
loop
test
add
push
add
add
push
stos
cmp
loop
test
add
cmp
test
add
popf
pop
dec
(bad)
(bad)
and
mov
pop
sub
push
test
add
xor
pop
out
sub
and
mov
sbb
add
ss
sbb
and
mov
adc
sbb
add
leave
jnp
sbb
xor
fsub
in
cmp
adc
sbb
xor
fbstp
add
jecxz
imul
out
sub
test
sbb
xor
jge
push
xchg
add
pop
xor
sbb
in
test
add
stos
sub
adc
sbb
cli
jns
fwait
out
pop
cdq
loopne
(bad)
repz
sbb
add
cmp
sbb
jno
or
(bad)
sbb
add
popf
pop
dec
icebp
sub
add
cmp
lahf
sub
test
adc
push
push
imul
(bad)
sbb
add
test
add
test
add
or
(bad)
rcr
push
test
add
or
sbb
test
add
lds
jmp
lods
sbb
test
adc
or
sbb
sbb
test
sbb
adc
and
lods
adc
sub
sbb
add
cmp
pop
or
sbb
adc
sbb
mov
test
adc
stc
das
mov
test
adc
sbb
mov
test
add
lds
jp
or
sbb
test
add
gs
dec
test
sub
and
push
sbb
test
add
mov
xchg
push
push
les
mov
test
add
push
sbb
xchg
sbb
mov
test
sbb
test
jle
sub
mov
test
ret
test
push
ss
sbb
ss
sbb
ss
sbb
cmp
xchg
dec
mov
sahf
mov
adc
sbb
adc
cmp
xchg
test
add
pop
test
je
and
movhps
aas
cld
xor
lods
xchg
adc
pop
sub
mov
pushf
repnz
ret
jae
in
(bad)
int3
das
mov
or
mov
rol
cwde
or
aam
in
in
je
fwait
cwde
jo
mov
xor
mov
or
ins
and
retf
jns
ins
fnstenv
rcl
jnp
or
xor
jmp
pop
push
cmp
div
shld
jns
mov
xor
pop
push
imul
jno
and
ret
js
mov
inc
xor
mov
aad
fbld
mov
fidivr
mov
sar
xor
bound
scas
mov
bound
and
jnp
jns
mov
add
popf
sub
xchg
popa
sub
jg
imul
dec
push
test
mov
test
push
add
inc
mov
clc
push
xor
in
mov
dec
push
adc
jmp
sub
adc
cmps
inc
pop
imul
or
jle
js
push
in
je
cmp
xor
pop
hlt
outs
repz
push
add
mov
xor
test
rcr
cdq
or
jecxz
mov
pop
xor
push
inc
push
mov
dec
push
xor
icebp
adc
shl
mov
mov
cmp
icebp
sbb
icebp
pusha
call
shl
test
(bad)
dec
sbb
mov
xlat
aam
mov
push
push
pop
jns
cmp
fild
xlat
aam
outs
xlat
aam
(bad)
xlat
push
push
(bad)
jnp
cmp
inc
outs
xlat
aam
xlat
xor
cmc
adc
sbb
inc
inc
jb
dec
fadd
adc
dec
jb
sub
and
inc
pop
mov
dec
mov
rcr
fwait
jmp
dec
es
dec
mov
call
fild
xlat
aam
outs
xlat
add
rcl
lahf
jmp
dec
mov
xor
and
inc
pop
mov
dec
(bad)
pop
call
inc
outs
jg
inc
imul
in
outs
pop
aam
outs
xlat
aam
ins
xlat
push
inc
out
xlat
push
ret
sahf
jmp
call
fld
call
and
mov
push
fild
xlat
aam
xlat
in
sub
inc
and
mov
call
fild
xlat
aam
rcl
test
test
out
cmp
push
shl
sub
stos
cmp
inc
push
sar
jmp
pop
daa
xor
mov
adc
popa
jae
dec
(bad)
mov
mov
fsubr
test
fstp
pusha
popa
mov
xchg
pop
add
adc
retf
jb
mov
dec
mov
and
cmps
inc
inc
mov
cmc
xlat
xor
movs
mov
mov
lea
(bad)
stos
add
sahf
pushf
ret
jb
neg
push
xchg
hlt
and
cld
into
push
xor
mov
lea
(bad)
test
and
mov
sbb
bound
pop
or
mov
and
in
fisttp
pop
add
mov
jecxz
cli
mov
push
lfs
imul
inc
cmp
xchg
sti
and
jb
fwait
xchg
sti
(bad)
mov
arpl
dec
stos
push
push
movs
jge
hlt
xchg
ins
xor
shr
inc
cmps
or
clc
sahf
rol
(bad)
stos
inc
mov
xchg
ret
xor
mov
xchg
and
movs
and
not
icebp
jns
inc
jne
mov
daa
push
les
mov
xor
mov
fild
pop
aam
add
push
test
push
les
arpl
je
mov
sub
jp
lock
inc
mov
in
ins
jbe
outs
mov
inc
xchg
lea
in
(bad)
cs
inc
dec
inc
sbb
stc
cmc
xchg
xor
movs
mov
jb
jae
xchg
mov
ss
mov
fmul
lods
jae
jle
out
cmps
sub
sbb
(bad)
push
push
jecxz
push
mov
ffree
push
push
sbb
add
mov
test
jo
push
push
jle
cmp
sti
(bad)
mov
shr
inc
mov
push
lods
jp
and
or
inc
jae
jbe
call
push
ja
adc
movs
fs
push
popa
inc
xchg
jl
push
aam
lea
out
ins
pop
outs
sbb
and
sub
rol
imul
hlt
and
xchg
mov
stos
call
sub
push
inc
pop
and
pop
je
adc
jb
mov
ins
adc
jmp
mov
and
data16
jne
xchg
adc
inc
xchg
cdq
test
push
and
jbe
fwait
mov
ror
cs
inc
fild
jmp
fistp
lea
push
dec
addr16
dec
xchg
jbe
cdq
xchg
shr
sar
loopne
inc
aam
test
ret
test
jecxz
mov
les
jp
mov
in
sbb
in
adc
data16
fxch
out
sbb
in
push
leave
neg
jmp
in
sbb
(bad)
pop
cmp
mov
ja
(bad)
fadd
jb
movs
cmp
xchg
push
ret
mov
icebp
fwait
mov
push
mov
aas
and
xlat
rol
pop
iret
daa
sub
daa
inc
jmp
nop
fcom
sbb
iret
daa
sub
daa
inc
jmp
inc
cli
adc
mov
jecxz
daa
fsubr
adc
inc
jmp
inc
mov
mov
sub
sub
aaa
sbb
adc
inc
jmp
inc
cli
retf
cmps
(bad)
out
adc
inc
jmp
pop
lahf
lahf
(bad)
fcmovnbe
rcr
push
stos
inc
ret
repnz
cdq
jbe
mov
daa
inc
jmp
inc
cmp
mov
mov
mov
daa
inc
jmp
aad
sub
fsub
adc
inc
jmp
arpl
xchg
scas
adc
test
(bad)
aam
daa
sub
daa
inc
jmp
inc
call
enter
inc
stos
in
aam
rcr
xor
lods
dec
aam
mov
fwait
enter
xor
in
xor
shl
xor
dec
jns
hlt
or
mov
pop
xor
sub
test
fcmovnbe
push
jge
adc
ins
add
pop
in
push
push
mov
inc
cdq
les
arpl
not
int3
push
movs
cmp
sti
arpl
mov
rol
jae
cmp
mov
adc
cdq
inc
xchg
mov
xchg
mov
dec
fild
push
mov
xor
fist
jno
mov
xchg
not
add
ret
test
rcr
lds
inc
mov
xor
xor
retf
jns
mov
add
inc
jae
js
imul
xchg
jg
test
jecxz
xchg
cmp
movs
enter
xchg
imul
cs
and
jno
test
jnp
mov
or
jns
mov
pop
and
scas
mov
je
jo
hlt
imul
jmp
cmps
mov
xor
jns
push
push
dec
mov
xor
mov
psubq
sahf
or
lock
and
inc
pushf
stos
or
not
xor
inc
dec
sub
aam
mov
aaa
outs
push
imul
inc
push
xchg
aaa
es
imul
inc
movs
jnp
fcomp
and
add
push
push
imul
fcomp
and
xchg
aaa
es
imul
inc
xchg
test
iret
aam
jp
and
mov
in
jnp
fcomp
and
add
push
push
imul
sub
adc
push
ds
xchg
aas
dec
aas
test
xchg
aaa
cld
lahf
and
divps
pop
jg
xlat
ins
pop
and
hlt
aaa
imul
inc
jne
xchg
xlat
les
cdq
cmps
out
add
je
inc
aaa
inc
popf
add
in
and
inc
jne
(bad)
je
(bad)
inc
mov
(bad)
ins
ds
cmp
inc
scas
xlat
cmps
and
and
shl
ja
aaa
je
inc
(bad)
in
or
ins
push
(bad)
aam
cdq
outs
sub
cwde
xchg
lahf
dec
pop
and
or
push
add
sub
push
inc
(bad)
je
mov
pop
sub
push
inc
into
je
sbb
jge
add
les
cdq
mov
or
ins
mov
scas
in
pop
cdq
xchg
inc
mov
cmps
pop
push
jno
jl
add
dec
dec
adc
in
pop
cdq
xchg
inc
mov
scas
pop
inc
sub
ins
pop
add
les
cdq
mov
ins
inc
sbb
and
xor
in
add
or
inc
pop
fs
test
ins
inc
xor
or
adc
dec
aas
test
(bad)
in
imul
fdivr
das
cmp
cmps
xchg
aas
fidiv
ss
mov
in
and
(bad)
test
scas
pop
pop
sub
in
adc
aam
rcr
cs
xchg
(bad)
dec
scas
and
in
xchg
xchg
(bad)
in
test
ins
jbe
paddq
xchg
pop
in
and
inc
jne
xchg
aaa
dec
das
mov
scas
outs
push
test
aas
xor
popa
mov
mov
mov
push
mov
daa
cmps
and
in
and
or
aam
cwde
fild
ds
xor
in
and
or
push
enter
cwde
(bad)
push
xchg
aaa
pop
push
and
inc
inc
sub
sub
dec
scas
and
imul
in
and
or
push
and
inc
inc
sub
sub
dec
scas
and
imul
in
add
or
inc
pop
fs
test
ins
inc
xor
or
cmp
cld
pop
jns
xor
cmp
test
mov
daa
inc
mov
ja
mov
fdivrp
(bad)
cmp
les
add
jge
and
in
test
sahf
fst
xor
aas
push
jno
jl
imul
pop
inc
sbb
and
push
cmps
aas
test
jg
mov
pop
or
aam
dec
aaa
ins
sub
cmp
cdq
test
pop
or
dec
scas
popa
out
ins
ds
mov
pop
or
aam
mov
cmps
outs
ds
paddb
aaa
jne
xor
or
sbb
ins
es
(bad)
aam
and
dec
xchg
and
push
inc
fild
aam
push
or
frstor
add
cmp
imul
pop
imul
fs
cmp
in
mov
daa
push
test
(bad)
mov
nop
xchg
ins
push
and
or
push
test
mov
xchg
jns
cmp
and
inc
xchg
cdq
aaa
pop
inc
test
mov
in
xor
in
jns
sub
jns
and
mov
cld
pop
enter
xor
in
jns
sub
jns
and
sub
and
imul
fdiv
mov
pop
or
dec
scas
mov
xor
add
inc
xchg
and
hlt
ss
(bad)
dec
pop
mov
sahf
xor
sahf
and
fmul
scas
xlat
push
test
aas
xor
popa
mov
mov
mov
push
add
jge
cdq
xchg
sahf
test
mov
push
or
or
inc
adc
cmps
popa
out
ins
ds
mov
scas
xchg
scas
outs
push
test
xchg
sahf
mov
xor
and
cmp
sub
les
jo
gs
xchg
out
inc
inc
(bad)
cmp
imul
push
sahf
jno
ins
dec
and
ins
pop
mov
out
inc
and
cld
dec
mov
(bad)
cmps
adc
std
lahf
add
fs
adc
xor
jns
push
ss
std
lahf
adc
xor
jns
pop
daa
test
pop
cmp
xor
adc
fs
jno
or
and
inc
lods
jno
in
jno
or
and
inc
and
cmp
or
inc
xlat
inc
lea
fs
mov
gs
jo
inc
jge
fsub
ds
push
cdq
cmps
das
inc
add
pop
cmps
add
aam
and
fcomp
aas
pop
pop
enter
cwde
pop
pop
dec
dec
sub
or
enter
mov
dec
dec
sub
or
xor
in
xor
dec
dec
xchg
iret
dec
sahf
and
dec
scas
xchg
movs
ins
push
or
or
dec
iret
in
xchg
cmps
ins
push
add
or
sub
in
or
pop
push
jns
lds
mov
ss
xchg
pusha
es
cmc
adc
in
sbb
or
sub
je
jns
cld
xchg
data16
xchg
out
dec
(bad)
mov
cmp
jno
xor
and
inc
push
and
fs
dec
pshufw
push
cdq
fild
pop
in
dec
sub
or
xor
in
add
push
cmps
test
fs
or
ins
scas
test
mov
or
ins
ss
(bad)
les
sub
in
test
scas
xchg
leave
push
in
cmp
cld
pop
cdq
test
or
ins
push
jno
xor
jno
les
mov
dec
lahf
or
or
add
ins
mov
or
ins
sahf
and
fcomp
test
scas
movhps
mov
ss
(bad)
cmp
test
(bad)
inc
adc
sbb
or
sub
fnsave
xchg
aas
and
jns
and
xchg
xchg
xlat
in
mov
cmps
or
cmp
push
and
fs
inc
lods
jno
in
jns
cld
xchg
(bad)
cmps
and
or
push
cmps
fist
mov
push
enter
adc
aam
xchg
xlat
dec
ja
push
pop
push
inc
mov
dec
add
ins
das
test
mov
or
adc
xchg
(bad)
xor
sahf
inc
mov
dec
and
ds
out
cld
pop
imul
in
adc
cld
das
or
ins
push
adc
pop
pop
adc
in
add
sub
imul
dec
push
add
aam
jo
ins
ss
mov
xchg
xchg
(bad)
es
mov
or
ins
jle
aaa
push
pop
and
inc
popf
and
ins
outs
and
in
sbb
in
test
pop
aaa
dec
pop
inc
(bad)
cmp
mov
mov
jno
test
or
in
test
scas
out
scas
and
in
inc
fbstp
cdq
xchg
cmps
pop
push
test
int3
sbb
or
cmp
sahf
adc
test
scas
daa
cmps
and
in
and
in
inc
pop
inc
pop
test
mov
inc
jne
iret
in
and
or
xchg
rol
mov
fimul
xchg
(bad)
aam
and
in
push
and
mov
cdq
xchg
imul
(bad)
outs
ins
ss
imul
ins
cmps
and
pop
outs
and
push
and
inc
movs
and
in
aaa
popa
mov
xor
in
add
aam
or
ins
push
jns
lds
xlat
pop
pop
and
dec
adc
cld
aas
test
pop
fsub
and
or
movs
and
xor
adc
cld
scas
test
out
push
mov
pop
push
jno
pop
scas
and
ins
jbe
xchg
ss
add
or
and
push
cdq
pop
fsub
and
in
mov
in
or
aad
xchg
(bad)
ins
mov
aam
test
ins
xchg
xchg
scas
out
xor
aam
and
fcomp
cdq
pop
fsub
and
in
sub
dec
scas
mov
outs
pop
imul
pop
inc
sub
dec
jg
out
push
inc
ja
scas
inc
(bad)
ins
es
mov
fistp
iret
sbb
cmps
dec
out
cmp
les
xchg
out
ins
or
scas
sar
scas
mov
subps
jo
inc
dec
mov
cmps
outs
dec
jns
pop
cmps
test
fisttp
cdq
out
fmul
xchg
in
ss
gs
push
(bad)
adc
cmp
sub
frstor
jo
inc
adc
cdq
out
fmul
xchg
out
xor
jo
gs
add
pop
pop
mov
in
and
cmp
inc
paddusb
xchg
add
mov
aas
scas
add
and
push
inc
mov
mov
sub
dec
inc
test
pop
or
adc
fsubr
or
or
push
(bad)
cmp
xor
in
rcl
pop
and
add
adc
fmul
mov
in
imul
cmp
xchg
mov
push
or
xor
and
in
sub
in
dec
or
and
adc
fcom
nop
paddusb
call
dec
jns
in
inc
fild
out
sahf
and
fdivr
adc
outs
push
test
xlat
ins
push
and
jl
push
xlat
cmp
and
pop
cs
pop
aas
dec
scas
and
sub
pop
or
daa
push
and
cmp
es
mov
jbe
cmps
daa
push
test
iret
cmp
jno
jl
sub
sub
xchg
scas
outs
push
test
fst
or
jne
mov
mov
(bad)
fs
in
cmp
ins
push
or
ins
xchg
imul
pop
inc
mov
iret
gs
sbb
xchg
imul
pop
inc
mov
iret
jge
sbb
jbe
cmps
daa
xchg
nop
lahf
std
pop
and
aad
jno
ins
ss
lea
lahf
fmul
cmp
cmp
inc
or
cmp
push
and
in
xchg
and
dec
scas
xchg
out
ins
inc
xchg
test
bound
inc
popf
cmp
fbstp
test
lods
xchg
xor
mov
add
or
jmp
xor
fidiv
xchg
cmp
xchg
cmp
mov
mov
cmp
xchg
cmp
mov
outs
test
cmp
xor
pop
mov
xchg
cmp
mov
push
in
add
test
test
cmp
mov
das
test
mov
xchg
xor
mov
or
(bad)
push
inc
fiadd
imul
inc
and
mov
or
ins
jne
xor
adc
in
in
jb
jmp
xchg
mov
ss
pminub
lods
sbb
(bad)
jmp
sti
jle
push
fisttp
mov
inc
jns
xor
pop
dec
mov
inc
test
dec
mov
retf
jle
mov
xchg
dec
in
jno
or
cdq
mov
ss
sbb
out
pop
movs
hlt
ds
clc
movs
fcom
cdq
xchg
adc
fdivr
shr
pop
ins
cmp
outs
jno
dec
mov
mov
ror
mov
enter
fldcw
lahf
les
icebp
mov
fiadd
mov
xchg
jno
movs
call
xor
mov
frstor
rol
pop
mov
mov
repz
mov
adc
push
dec
(bad)
mov
inc
sbb
mov
fldenv
fwait
dec
aad
inc
pop
pop
xlat
sbb
popf
in
xchg
sbb
fisub
mov
mov
jns
xor
xchg
and
mov
mov
sar
adc
cwde
adc
mov
ret
adc
mov
push
into
mov
and
jecxz
dec
jmp
in
sar
dec
xchg
mov
pop
inc
pop
dec
bound
push
add
(bad)
xlat
leave
cdq
jbe
leave
cdq
jbe
int
jae
dec
jmp
jmp
xchg
bound
stos
xor
jmp
adc
in
add
pop
sbb
mov
push
and
sbb
in
add
pop
call
and
in
add
pop
sbb
mov
push
and
sub
in
add
pop
call
xor
in
add
pop
sbb
fcom
pop
cmp
in
add
pop
call
inc
inc
push
adc
add
pop
sbb
pop
dec
inc
push
adc
in
add
pop
call
push
inc
push
adc
adc
std
dec
or
ret
mov
int
jnp
or
cdq
jbe
leave
cdq
(bad)
mov
lea
sbb
pop
shr
cmp
nop
jno
pop
sbb
cmp
outs
pop
movs
push
xor
hlt
xchg
mov
ss
jmp
ret
fnstsw
in
rol
test
cld
jle
push
(bad)
push
mov
dec
jno
fsub
dec
sti
repz
mov
jecxz
scas
rcl
imul
dec
je
jae
mov
dec
ins
push
cmp
pop
jns
mov
dec
push
push
inc
xchg
mov
pop
(bad)
in
shl
aad
pop
cld
call
mov
and
mov
cmps
xor
hlt
out
adc
loopne
push
je
xchg
inc
in
pusha
ret
add
jge
sti
(bad)
mov
xchg
fcomp
add
mov
sub
cld
dec
rcr
inc
mov
gs
mov
test
mov
mov
repnz
sbb
jbe
jecxz
push
fucomi
or
inc
sbb
inc
mov
sub
mov
add
jns
mov
adc
and
inc
xchg
inc
(bad)
out
addr16
les
outs
out
cmp
loopne
scas
sbb
cmps
mov
hlt
push
add
add
mov
and
in
jbe
xchg
scas
mov
imul
push
or
test
sbb
clc
les
fwait
xor
in
pop
fld
fbld
fwait
xor
fmul
stos
in
clc
movs
sub
fwait
xor
in
pop
lahf
xor
in
fcomp
mov
fcomp
xor
in
mov
add
xor
in
sbb
adc
js
xor
in
fcomp
in
fcomp
xor
mov
add
call
aas
pop
mov
mov
ss
or
mov
push
dec
(bad)
mov
cmps
enter
aaa
push
xor
mov
fadd
jb
adc
pop
pop
jmp
xor
adc
mov
mov
in
push
aam
push
movs
mov
inc
mov
cmp
mov
dec
adc
mov
mov
push
les
outs
bound
pop
pop
imul
sub
pop
inc
sbb
movs
xor
mov
sub
jne
jnp
jbe
mov
xor
(bad)
mov
fsub
mov
mov
push
dec
fwait
mov
xlat
and
stos
sti
ret
jp
mov
cs
jnp
jle
mov
mov
dec
or
jmp
mov
adc
jo
sbb
pop
out
xor
(bad)
loopne
inc
mov
adc
test
shl
stos
add
xchg
in
outs
inc
mov
jp
jp
int
and
jmp
cmps
adc
and
adc
mov
sahf
fdiv
cmp
dec
xor
dec
xlat
addr16
dec
inc
add
pop
lds
xor
pop
rcl
cdq
fcmovb
or
mov
fmulp
sub
mov
(bad)
add
and
sbb
push
imul
cmp
or
fdivr
add
jle
loopne
call
pop
call
outs
add
pop
add
out
adc
ins
js
adc
imul
cmp
add
ins
pop
bound
xor
xchg
(bad)
xchg
xchg
shl
in
std
and
fstp
(bad)
xchg
xchg
(bad)
xchg
inc
jecxz
mov
dec
mov
xchg
(bad)
xchg
inc
mov
nop
cwde
xchg
(bad)
xchg
xchg
fcomip
xchg
xor
inc
clc
enter
mov
inc
enter
loope
and
jge
mov
pop
xchg
rcl
mov
push
ins
sbb
mov
mov
push
dec
mov
(bad)
addr16
int
dec
(bad)
sbb
sahf
sbb
pop
or
mov
stc
(bad)
sti
mov
lea
or
sub
cmp
call
add
aam
stos
jg
cmp
mov
fild
in
addr16
ins
dec
sub
xchg
and
sti
cmp
inc
stos
movs
rcl
xchg
xor
sahf
fsubr
pop
in
cmps
rcr
mov
lea
mov
ret
jno
test
push
gs
stc
jmp
or
sub
sbb
dec
push
je
pop
dec
in
popa
ror
inc
mov
mov
push
push
adc
add
jo
mov
movs
mov
mov
add
ret
fs
(bad)
sar
mov
sub
dec
fwait
mov
rcl
add
pop
pop
hlt
jmp
(bad)
jb
fwait
mov
mov
push
and
or
daa
aaa
test
jbe
xchg
test
shl
mov
imul
xor
sbb
dec
arpl
pop
inc
jnp
in
mov
inc
push
pop
push
mov
call
xchg
cmp
adc
sub
movs
sub
gs
xchg
cmc
cmp
cmp
sub
movs
mov
mov
popa
mov
sub
mov
sub
(bad)
sub
mov
les
sbb
les
sar
test
fwait
test
jns
aam
sar
scas
or
inc
mov
mov
dec
or
and
imul
lea
jne
push
jns
lea
ja
lea
ins
jne
repz
jbe
lea
data16
mov
imul
jnp
mov
mov
outs
lea
fidivr
mov
fdiv
cmp
jbe
mov
fadd
lea
fst
sbb
cmc
sub
arpl
xor
in
jnp
gs
inc
arpl
or
int
bound
sub
aad
push
std
ins
and
dec
arpl
dec
push
mov
call
dec
push
xchg
cmp
frstorw
mov
fs
stos
pusha
test
push
gs
ficom
pop
enter
lahf
gs
and
lds
pop
gs
jmp
gs
push
arpl
or
gs
(bad)
pusha
gs
pop
arpl
pop
arpl
sub
std
sub
add
sub
adc
dec
push
gs
jmp
(bad)
repz
gs
sub
cmp
pop
popa
gs
add
test
arpl
cmp
xchg
in
gs
bound
and
popa
gs
cmp
bound
in
mov
gs
das
popa
gs
push
gs
cmp
jge
bound
adc
cmc
das
arpl
inc
ins
gs
push
gs
arpl
push
push
dec
cmc
jp
mov
jns
push
mov
jnp
jmp
jnp
sbb
and
rol
ret
inc
jb
jno
pop
dec
jno
inc
dec
jno
pop
dec
jno
push
dec
jno
sbb
jno
daa
dec
jno
push
dec
jno
dec
dec
jno
push
inc
jno
adc
sub
push
inc
jno
loop
jno
test
jne
dec
jno
out
mov
test
inc
jno
push
inc
jno
clc
inc
jno
mov
dec
jno
stos
lahf
jb
pop
inc
popa
jge
dec
jno
fs
jno
jmp
jno
and
or
jg
jno
pop
dec
jno
push
jno
cli
adc
std
sbb
xchg
or
outs
in
xor
ja
ins
(bad)
xor
div
ins
jne
xor
cmp
ins
frstor
xor
ins
loopne
ins
popf
sub
xor
sbb
ins
adc
out
xor
js
ins
jne
icebp
imul
repz
sub
jae
mov
jecxz
movs
es
jae
fdivrp
jae
add
jae
(bad)
jae
inc
bnd
cmp
jae
(bad)
std
jae
mov
jae
(bad)
icebp
jae
mov
jae
jne
jae
test
jae
fscale
jae
xor
sub
into
sti
jae
hlt
jmp
jae
mov
jae
int
jae
js
jbe
ds
loope
popfw
rcl
pop
or
data16
shl
rcl
popf
test
shl
pop
shl
aad
data16
ins
mov
shl
enter
pop
shl
or
lods
cmp
cmp
lea
popa
imul
popa
jnp
aas
imul
addr16
adc
jnp
and
push
add
add
mov
jnp
lea
fdiv
mov
fdiv
mov
fistp
stos
mov
ss
nop
(bad)
push
lods
jecxz
jle
in
shl
mov
(bad)
(bad)
ss
inc
mov
pop
mov
dec
jge
mov
add
pop
punpckhwd
mov
int3
gs
push
shl
test
jo
sub
and
test
mov
push
ret
daa
xlat
mov
pop
repz
push
inc
mov
inc
jge
pusha
adc
add
dec
popf
fcomp
icebp
mov
fdiv
in
xor
test
and
push
sti
or
mov
adc
sbb
fst
stos
in
ret
(bad)
or
leave
sar
movs
or
test
push
lods
test
adc
adc
mov
dec
nop
(bad)
fld
sbb
jmp
sub
cmp
mov
rcl
mov
ret
mov
and
mov
adc
leave
mov
and
rol
xor
arpl
sub
add
mov
data16
jbe
hlt
jmp
inc
hlt
sti
xor
mov
jne
mov
cmp
rol
imul
adc
jno
je
fldenv
fnstenv
fistp
adc
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
cli
clc
push
clc
clc
(bad)
clc
clc
cld
(bad)
clc
call
lock
loopne
clc
(bad)
call
shr
jo
clc
pop
clc
call
push
out
inc
clc
clc
aas
clc
loopne
imul
sub
out
sbb
clc
pop
clc
call
add
lock
clc
out
stc
loopne
(bad)
call
clc
clc
lahf
stc
mov
clc
(bad)
stc
jmp
cmp
call
out
pop
clc
clc
dec
stc
loopne
(bad)
call
clc
clc
pop
stc
call
adc
add
clc
out
cli
call
(bad)
sar
idiv
jmp
idiv
test
(bad)
stc
clc
lock
(bad)
clc
test
(bad)
stc
clc
lock
(bad)
clc
test
(bad)
stc
clc
lock
(bad)
clc
test
(bad)
stc
clc
lock
(bad)
clc
leave
clc
pop
fdiv
mov
clc
fdiv
jg
repz
fsub
out
cs
out
in
loopne
and
call
jecxz
in
out
sub
mov
clc
cld
cmp
clc
(bad)
cmp
in
loope
and
call
sti
clc
mov
out
clc
cmp
scas
sbb
shl
cld
cmp
sbb
shl
lock
fcom
mov
clc
leave
clc
pop
fdiv
cmps
sti
clc
leave
clc
pop
fcomp
idiv
clc
mov
out
clc
cld
stc
scas
sbb
shl
lock
fdiv
out
clc
leave
clc
pop
fcom
sti
clc
leave
clc
(bad)
js
clc
clc
mov
out
clc
fdivr
scas
sbb
shl
lock
test
leave
call
(bad)
clc
stc
clc
out
pusha
lock
loope
call
jmp
sbb
(bad)
clc
lock
das
ret
xlat
stc
lock
enter
clc
cld
sar
push
fcomp
shr
sti
call
sbb
(bad)
cld
fmul
mov
cld
push
(bad)
std
fcomp
cmp
clc
idiv
leave
clc
pop
fdivr
sti
clc
loopne
out
(bad)
mov
fdivr
mov
lock
cli
mov
sbb
das
shr
sar
lock
sar
sti
shr
sti
shr
fistp
sbb
sar
std
(bad)
clc
cmc
fmul
out
call
(bad)
clc
leave
clc
pop
fcomp
cmps
sti
clc
loopne
das
shr
sar
lock
enter
div
fdivr
loopne
(bad)
idiv
(bad)
lock
push
lock
mov
clc
fdivr
clc
lock
jmp
clc
fdivr
clc
lock
jmp
clc
fdivr
clc
lock
jmp
clc
fdivr
clc
lock
inc
mov
(bad)
lock
sti
sar
std
(bad)
clc
hlt
js
mov
nop
loopne
mov
call
mov
movs
movs
jecxz
mov
loopne
mov
call
sti
clc
leave
clc
lahf
fdiv
cmps
sti
clc
jmp
loopne
sar
sti
mov
repz
cmp
clc
lahf
fdiv
cmps
sti
clc
leave
clc
lahf
fcomp
out
clc
loopne
mov
sbb
cwde
sti
shr
sti
sar
fistp
lock
sti
mov
icebp
fdivr
clc
leave
clc
lahf
fcomp
cmps
sti
clc
loopne
mov
cmp
cwde
sti
sar
sti
ror
fistp
fdivr
mov
lock
fmul
clc
lahf
fcomp
sti
clc
loopne
mov
cmp
cwde
sti
lock
outs
stc
loopne
mul
lock
mov
stc
cli
stc
xor
loopne
shl
enter
clc
iret
and
xor
lock
sbb
(bad)
clc
cld
clc
out
(bad)
mov
enter
pop
push
fsubr
mov
fadd
idiv
cld
cmp
clc
clc
pop
cmp
lock
shr
sti
call
fdiv
jo
cld
fdivr
push
fdivr
sbb
cwde
sti
call
cwde
mov
(bad)
cld
fmul
mov
cld
pop
(bad)
cld
fmul
mov
clc
fmul
loopne
cld
ja
std
fcomp
cmp
clc
idiv
call
xor
inc
sbb
fdivr
shr
sti
call
cwde
mov
(bad)
cld
fmul
lock
(bad)
clc
idiv
loopne
lock
(bad)
cwde
test
fdivr
ja
clc
fdivr
clc
(bad)
clc
scas
rcr
push
(bad)
clc
fdivr
clc
(bad)
clc
scas
rcr
aaa
(bad)
clc
fdivr
clc
(bad)
clc
scas
rcr
pop
(bad)
clc
fdivr
clc
cld
clc
iret
mov
cld
div
std
fcomp
sub
idiv
loopne
scas
ins
call
loopne
loopne
movs
fwait
call
pusha
push
out
loopne
imul
movs
fstp
lock
sti
shr
sti
loopne
cld
pop
jmp
pop
ins
pop
(bad)
cld
fdivr
push
fdivr
ret
scas
cld
fistp
lock
sti
shr
fistp
lock
sti
call
pop
ins
pop
(bad)
cld
fmul
mov
clc
fmul
lock
cld
pop
(bad)
cld
fdivr
push
fdivr
shr
sti
call
pop
ins
aaa
(bad)
cld
fmul
mov
cld
push
(bad)
(bad)
fmul
add
cld
ja
cld
fdivr
push
fcomp
shr
sti
call
pop
ins
aaa
(bad)
cli
fdivr
push
outs
popa
out
lock
imul
call
clc
(bad)
clc
xor
sub
das
(bad)
shl
cld
clc
xchg
clc
enter
clc
(bad)
sbb
sti
clc
fdivr
scas
pop
fadd
idiv
lock
fdiv
out
clc
leave
clc
pop
fcom
sti
clc
fdivr
out
clc
cld
cmp
mov
(bad)
fsubr
inc
in
(bad)
mov
clc
std
js
pushf
fdivr
enter
pop
(bad)
cld
fsubr
mov
fadd
idiv
cld
cmp
clc
cld
sbb
clc
cld
pop
call
clc
clc
js
(bad)
sar
loopne
clc
outs
call
fsubr
adc
cld
fmul
mov
cld
fsubr
mov
fadd
idiv
(bad)
cmp
fdiv
iret
idiv
clc
lock
idiv
loopne
lock
(bad)
(bad)
clc
cld
clc
rcr
mov
clc
clc
cld
clc
iret
(bad)
mov
clc
clc
cld
clc
iret
(bad)
mov
clc
clc
cld
clc
iret
(bad)
mov
clc
clc
std
clc
mov
clc
stc
clc
pop
jge
sar
loopne
sti
dec
loope
movs
fwait
call
int3
dec
out
dec
cdq
scas
dec
loopne
inc
loope
movs
cmp
lods
int3
leave
mov
dec
ss
cld
fmul
mov
cld
fsubr
loopne
(bad)
out
dec
sbb
clc
cld
sbb
(bad)
mov
enter
xor
clc
fmul
loopne
std
pop
(bad)
cld
fsubr
mov
fadd
idiv
std
sbb
clc
std
cmp
pop
fadd
idiv
cld
sbb
(bad)
mov
enter
push
(bad)
cld
fsubr
mov
fadd
idiv
std
cmp
clc
cld
pop
or
fadd
idiv
cld
js
(bad)
mov
enter
push
(bad)
cld
fsubr
mov
fadd
idiv
lock
imul
stc
(bad)
mov
hlt
dec
mov
(bad)
clc
repnz
or
clc
xlat
fdivr
and
clc
enter
lock
out
cld
fistp
lock
fmul
clc
pop
fstp
cmps
sti
clc
loopne
dec
shr
fstp
lock
cli
sar
cli
sar
std
(bad)
clc
std
call
idiv
idiv
iret
leave
call
sti
clc
mov
out
clc
mov
shl
icebp
sbb
fnsave
out
clc
leave
clc
pop
fst
mov
clc
leave
clc
pop
fst
sti
clc
leave
clc
pop
fnsave
(bad)
clc
fdivr
(bad)
lock
or
inc
int3
dec
(bad)
fcomp
shl
std
sbb
clc
icebp
sbb
fnstsw
out
clc
xbegin
sti
lock
mov
idiv
test
(bad)
stc
clc
lock
(bad)
clc
test
(bad)
stc
clc
lock
(bad)
clc
test
(bad)
stc
clc
lock
(bad)
clc
test
(bad)
stc
clc
lock
(bad)
clc
leave
clc
pop
(bad)
mov
clc
fdiv
jg
repz
fsub
out
push
cdq
out
les
call
jecxz
les
out
or
shl
std
cmp
clc
(bad)
cmp
les
loope
add
call
sti
clc
mov
out
clc
cmp
shl
std
cmp
sbb
shl
icebp
sbb
fst
mov
clc
leave
clc
pop
fnsave
cmps
sti
clc
leave
clc
pop
fstp
idiv
clc
mov
out
clc
std
stc
scas
sbb
shl
icebp
sbb
fnsave
out
clc
leave
clc
pop
fst
sti
clc
leave
clc
(bad)
js
clc
clc
mov
out
clc
(bad)
scas
sbb
shl
icebp
pop
test
leave
call
(bad)
clc
stc
clc
out
pusha
lock
ins
shl
(bad)
mov
add
lds
lock
cmpps
xlat
stc
lock
enter
clc
cld
sar
push
fcomp
shr
cli
call
sbb
into
mov
std
push
(bad)
std
fcomp
cmp
clc
idiv
leave
clc
pop
fnstsw
sti
clc
loopne
iret
(bad)
mov
fdivr
mov
lock
cli
mov
sbb
xadd
mov
cli
sar
cli
shr
cli
shr
fistp
sbb
sar
std
(bad)
clc
cmc
fmul
(bad)
leave
call
(bad)
clc
leave
clc
pop
fstp
cmps
sti
clc
loopne
xadd
mov
cli
enter
div
fdivr
loopne
cli
mov
test
jmp
test
add
popa
retf
cli
add
imul
into
jns
mov
fcmove
sti
dec
loope
jmp
dec
test
mov
dec
in
push
shl
sub
add
rcr
loopne
into
jge
push
fmulp
cli
or
outs
dec
les
fs
imul
pop
pusha
rcr
xor
leave
hlt
cmp
fs
mov
hlt
cmp
fs
addr16
addr16
mul
clc
add
das
leave
sti
pop
pop
pusha
inc
add
pusha
fs
ins
imul
pusha
jecxz
pop
(bad)
jg
pop
push
dec
leave
hlt
pusha
ins
fs
push
pop
and
lock
sub
pop
sub
repz
test
das
leave
(bad)
pop
fnstcw
and
repz
sub
call
and
lock
sub
pop
and
lock
sub
pop
sub
repz
xlat
enter
stc
das
leave
lock
fnstcw
xor
leave
lock
fnstcw
and
repz
sub
clc
(bad)
clc
pop
pop
and
lock
sub
pop
sub
repz
xlat
enter
stc
das
leave
repnz
fnstcw
xor
leave
stc
pop
or
push
(bad)
cli
mov
and
sar
aam
inc
cli
lock
clc
or
pop
cs
mov
(bad)
cli
or
pop
cs
nop
stc
(bad)
cli
stc
and
cs
jmp
inc
cli
mov
das
enter
pop
inc
cli
lock
clc
add
ja
ficom
leave
lock
jnp
add
xor
shl
clc
hlt
cwde
bound
arpl
ret
xor
repnz
addr16
fs
and
repz
fs
ins
fs
repz
int3
imul
jecxz
shl
shl
pop
shl
sbb
sub
sbb
shl
hlt
enter
cld
outs
fs
rol
cmp
icebp
clc
hlt
enter
cld
outs
fs
adc
and
repz
fs
adc
and
repz
fs
ins
fs
fsubr
fs
arpl
data16
hlt
and
fs
outs
fs
addr16
push
and
repz
fs
ins
bound
and
repz
into
lods
in
fsub
outs
fs
aad
xor
lock
clc
fs
outs
fs
and
fs
outs
fs
shl
mul
pushf
pusha
fs
adc
out
stos
fs
imul
fs
fs
arpl
arpl
popa
imul
cli
mov
das
enter
xor
(bad)
cli
in
fisub
fs
arpl
jecxz
fs
stos
in
imul
rcl
repnz
test
outs
mov
inc
and
hlt
fsub
arpl
xchg
jmp
hlt
push
outs
fs
arpl
fs
sar
hlt
and
fs
fs
fs
out
pusha
shl
rcl
or
push
hlt
fsubr
fs
inc
dec
les
das
leave
hlt
fsub
ins
arpl
sbb
outs
fs
fsub
(bad)
lock
stc
and
repz
fs
ins
fs
arpl
ret
add
or
add
fs
arpl
into
data16
fcomp
aaa
(bad)
fcomi
repz
stc
(bad)
fbld
(bad)
repnz
fs
fs
gs
hlt
fsubr
fs
arpl
addr16
fs
addr16
addr16
adc
pop
sub
repnz
gs
mov
fs
or
jecxz
test
push
outs
fs
addr16
adc
dec
ins
fs
out
jecxz
call
mov
jmp
lock
add
mov
movs
outs
fs
or
jecxz
jecxz
movs
push
shr
cmp
nop
xlat
loopne
push
movs
out
aam
mov
sbb
leave
hlt
clc
fs
arpl
inc
push
push
sub
fs
fs
mov
loopne
(bad)
stc
or
fdiv
clc
pop
fld
std
hlt
and
pusha
fs
outs
fs
fs
sub
mov
movs
imul
sub
js
imul
cmps
sbb
leave
hlt
mov
arpl
arpl
mov
cli
fs
fs
arpl
arpl
jecxz
add
add
push
test
push
pusha
fs
fs
adc
in
movs
fsub
iret
(bad)
stc
or
fdiv
clc
pop
fld
std
hlt
sub
pusha
fs
outs
bound
cmp
xor
fs
xchg
mov
mov
ins
fs
addr16
jecxz
cld
out
mov
jmp
pop
sub
test
adc
fs
addr16
fs
fs
mov
fs
arpl
arpl
out
jecxz
rcr
xlat
cmp
loope
shr
rcr
mov
hlt
pop
fs
arpl
arpl
arpl
ret
mov
fs
mov
fs
fs
fs
loopne
repz
in
and
shr
cmp
xchg
daa
mov
lock
enter
jo
(bad)
cli
or
jle
rcl
imul
shr
fs
arpl
call
rol
cli
lock
clc
fs
outs
fs
arpl
hlt
mov
addr16
fs
into
hlt
pusha
imul
fs
ret
bnd
mov
hlt
mov
fs
fs
into
hlt
pusha
imul
fs
fs
bnd
icebp
(bad)
cli
repz
stc
and
lock
sub
sub
repnz
fs
arpl
gs
hlt
pop
outs
fs
arpl
arpl
hlt
clc
gs
arpl
pusha
(bad)
clc
fs
outs
fs
inc
cmp
and
push
pop
sar
push
outs
fs
fs
data16
enter
hlt
clc
outs
fs
fs
pusha
arpl
push
push
outs
fs
jcxz
pusha
loope
cmp
pushw
clc
hlt
and
fs
fs
fs
addr16
push
cwde
and
repz
fs
ins
fs
mov
mov
jmp
shr
bound
sub
and
xchg
pop
jecxz
clc
addr16
hlt
push
outs
fs
arpl
lock
sub
pop
jecxz
adc
pop
(bad)
cli
fs
fs
arpl
mov
cli
fs
fs
add
fsubr
push
arpl
mov
inc
clc
jmp
cld
outs
arpl
clc
test
dec
hlt
mov
addr16
arpl
pusha
fs
outs
fs
arpl
repz
test
dec
hlt
mov
fs
repz
cwde
in
lock
lods
xchg
and
pop
add
repz
mov
int
repz
lods
fs
jmp
ins
data16
arpl
mov
push
clc
jmp
cld
outs
imul
pusha
repz
fs
outs
fs
arpl
mov
clc
hlt
shl
fs
arpl
repz
test
push
hlt
mov
fs
arpl
mov
clc
hlt
adc
arpl
arpl
arpl
clc
hlt
mov
fs
repz
cmp
fs
fs
pusha
mov
stos
call
mov
addr16
mov
clc
hlt
push
imul
pusha
jecxz
shr
fs
jecxz
bnd
repz
pop
jmp
imul
mov
arpl
jecxz
test
push
outs
fs
fs
arpl
movs
ins
gs
popa
data16
std
icebp
clc
hlt
call
arpl
inc
pusha
fs
and
push
sti
mov
fs
add
lods
imul
outs
arpl
arpl
add
clc
fs
outs
fs
inc
addr16
inc
repnz
bound
in
fneni(8087
fcmove
and
stc
pop
cmc
and
fs
arpl
repz
hlt
pop
gs
push
jns
mov
ins
fs
inc
out
out
test
rol
pusha
lods
imul
fs
arpl
hlt
fs
arpl
push
fstp
cmps
scas
movs
sub
fs
popa
outs
data16
repz
imul
push
fsub
cli
out
sub
popf
fsub
cmp
sbb
cli
fs
fs
mov
stos
clc
clc
pop
data16
mov
fs
mov
(bad)
fs
fs
outs
fs
arpl
popa
and
hlt
clc
mov
leave
hlt
js
fs
arpl
ret
pusha
lods
imul
repnz
imul
imul
mov
mov
outs
fs
jae
mov
mov
pusha
fs
outs
arpl
in
shl
clc
into
and
pop
and
cmps
fs
pusha
fs
outs
arpl
test
sbb
hlt
mov
fs
arpl
and
hlt
mov
arpl
arpl
clc
hlt
adc
fs
arpl
arpl
fs
fs
arpl
pusha
fs
outs
fs
arpl
pusha
repz
fs
fs
mov
stos
clc
clc
aas
outs
hlt
mov
fs
mov
out
enter
cld
outs
fs
repz
mov
adc
loopne
enter
xlat
mov
pusha
fs
outs
outs
fs
les
fs
fs
arpl
repz
int
leave
hlt
sbb
fs
sbb
leave
lock
xchg
addr16
hlt
sbb
fs
arpl
adc
and
repz
pop
retf
sub
pusha
fs
outs
fs
arpl
repnz
fs
addr16
outs
sar
sub
fs
inc
addr16
gs
hlt
cmp
fs
mov
and
stc
push
jecxz
sub
sbb
das
leave
clc
mov
(bad)
cs
clc
hlt
clc
fs
cld
addr16
arpl
loop
xchg
mul
call
div
push
int3
cli
fs
fs
arpl
rcl
dec
ss
loopne
cli
xchg
cmps
pop
mov
push
movs
sbb
leave
hlt
shl
arpl
add
mov
bound
mov
enter
js
(bad)
cli
pop
das
pop
jns
mov
ins
fs
adc
xor
repz
fs
ins
fs
arpl
mov
outs
outs
fs
shl
nop
shl
cli
cli
xor
push
fs
push
cdq
and
repz
fs
ins
fs
arpl
or
sar
aam
push
mov
ds
dec
in
nop
push
int3
out
loop
push
sti
lock
out
(bad)
mov
fsubr
fs
arpl
mov
aam
jmp
cld
outs
imul
fs
addr16
fs
(bad)
mov
imul
fs
fisub
leave
lock
mov
xor
and
repz
fs
ins
fs
arpl
mov
arpl
shl
fsub
fs
repz
leave
xchg
out
adc
inc
cli
jmp
fidiv
leave
push
xor
enter
hlt
clc
outs
fs
fs
fs
(bad)
sbb
cli
lock
clc
fs
outs
fs
arpl
and
hlt
cmp
fs
arpl
xor
movs
imul
fs
fs
movs
in
fs
fs
jecxz
xor
cli
mul
pop
rcr
sub
clc
cmp
clc
hlt
clc
outs
fs
and
mov
(bad)
and
sbb
clc
icebp
arpl
sbb
add
rcr
sub
clc
hlt
lock
fs
arpl
xchg
sbb
and
push
ss
lods
cmp
cld
fs
arpl
arpl
fs
fs
and
repz
fs
ins
bound
scas
popa
jecxz
aam
xor
mov
fs
mov
fs
arpl
shl
cmps
jg
sub
(bad)
mov
mov
arpl
arpl
repz
and
test
call
and
repz
fs
ins
fs
arpl
add
pop
sti
sti
or
mov
(bad)
lock
dec
std
jmp
fs
arpl
arpl
arpl
pusha
repz
fs
outs
fs
inc
out
pusha
xor
rcl
jl
cld
arpl
sub
pusha
push
jecxz
cli
out
loopne
pusha
add
in
gs
mov
hlt
and
fs
fs
jcxz
xor
sar
sub
fs
fs
arpl
and
mov
fsub
data16
fbld
xor
div
clc
xchg
das
add
xlat
mov
cli
fs
fs
arpl
jecxz
retf
xchg
adc
fs
arpl
rol
xor
into
std
cmp
mov
jno
jo
enter
jo
loopne
jno
mov
jmp
sub
clc
or
and
adc
inc
jmp
inc
push
mov
and
mov
mov
(bad)
ds
fimul
lods
adc
jle
out
jbe
(bad)
sti
jbe
je
mov
and
jno
jl
fldenv
xchg
jns
mov
aam
sub
mov
sub
or
sbb
fistp
inc
dec
fwait
xchg
mov
fcomp
xchg
add
popa
js
mov
add
(bad)
sti
fstp
mov
add
pop
mov
ficom
arpl
jecxz
mov
fadd
outs
dec
(bad)
mov
imul
jl
repnz
xchg
jo
xchg
out
repz
push
and
or
and
outs
imul
pop
aaa
mov
imul
xchg
mov
in
ret
gs
xchg
mov
push
xor
jns
ret
dec
xchg
mov
cmp
xor
arpl
cli
inc
push
xchg
push
mov
test
mov
mov
mov
inc
fwait
cmp
jbe
(bad)
imul
rcl
pop
inc
lds
pop
aad
in
xor
mov
xor
jp
rol
arpl
mov
mov
(bad)
mov
pop
sub
sub
pop
jbe
sar
mov
sub
or
push
popf
jp
jl
movs
hlt
adc
sbb
sar
call
and
or
pusha
(bad)
mov
inc
pusha
fs
call
stos
mov
ins
push
mov
or
and
and
in
adc
inc
jmp
xor
jmp
add
jp
retf
in
je
fwait
dec
je
mov
pop
test
xchg
mov
inc
dec
xchg
popa
mov
sub
fld
imul
jecxz
ja
call
int3
xchg
ret
pusha
mov
inc
dec
jnp
mov
ficomp
fcomp
dec
mov
jle
mov
jbe
mov
adc
mov
add
sub
ficom
mov
xchg
(bad)
mov
stos
sar
call
add
mov
jae
dec
stos
out
sbb
scas
jne
dec
out
aam
je
mov
and
pop
push
xor
or
mov
imul
mov
xor
fstp
dec
fld
(bad)
mov
mov
shl
(bad)
stos
rol
sar
outs
into
push
add
mov
ja
jno
repz
xchg
cli
movs
js
ret
adc
(bad)
jb
and
hlt
xchg
icebp
push
mov
adc
xor
sub
cwde
fs
scas
ja
xchg
imul
fwait
add
dec
(bad)
dec
imul
hlt
mov
aas
outs
mov
xor
xor
test
mov
dec
xchg
mov
and
out
repnz
sar
sti
inc
arpl
dec
cwde
aam
xchg
inc
sub
jmp
cmp
cwde
mov
jae
sahf
(bad)
(bad)
and
jo
mov
in
sbb
mov
xchg
dec
imul
fmulp
fcomp
lods
das
pop
inc
adc
aad
faddp
mov
dec
mov
xor
int3
jle
jp
sti
out
je
fwait
loopne
lea
xor
jecxz
jl
sbb
adc
adc
sub
pushf
pop
jecxz
add
mov
lea
inc
test
sub
push
mov
inc
add
sbb
sar
iret
or
mov
adc
pop
rcl
xor
cmps
xor
mov
cdq
mov
push
out
add
adc
fild
arpl
hlt
sbb
shl
cdq
test
mov
inc
and
or
scas
rcr
push
das
xchg
lds
xor
xchg
dec
in
mov
push
xchg
and
inc
in
jecxz
mov
ins
add
rcl
jno
call
xchg
jl
xchg
mov
nop
or
sbb
shl
mov
adc
rcl
(bad)
stos
call
addr16
lea
push
jns
fwait
xor
stc
push
cmp
inc
xchg
popa
ret
movs
daa
mov
es
sbb
retf
mov
sub
pop
je
fnstenv
rep
call
je
stc
jno
lods
cmp
push
je
imul
jecxz
sbb
repz
outs
jbe
enter
fyl2x
jbe
pop
out
push
push
jmp
icebp
ss
jmp
js
xchg
lea
jmp
icebp
ds
loope
out
inc
out
js
popf
dec
jb
jmp
icebp
ds
fnstcw
inc
out
dec
das
popf
ins
jb
jmp
icebp
ds
shl
push
out
dec
das
popf
sub
xchg
pop
shr
addr16
jbe
pop
out
push
push
jmp
icebp
jbe
shr
jle
xchg
out
js
ror
push
popa
fyl2x
jle
fabs
jbe
inc
out
js
(bad)
push
jmp
icebp
jle
rcr
jle
inc
out
dec
outs
fldcw
outs
jmp
icebp
jle
(bad)
jbe
push
out
dec
outs
fldcw
jle
jmp
jmp
jbe
pop
out
push
push
jmp
icebp
jbe
shr
jle
xchg
out
js
ror
push
popa
fyl2x
jle
fabs
jbe
inc
out
js
fmul
push
jmp
icebp
jle
rcr
jle
inc
out
dec
outs
fsubr
outs
jmp
icebp
jle
(bad)
jbe
push
out
dec
outs
fsubr
jg
jmp
jmp
jbe
pop
out
push
push
jmp
icebp
ss
jle
xchg
out
js
xchg
mov
jmp
icebp
ds
jbe
inc
out
js
cdq
dec
jbe
jmp
icebp
ds
jle
inc
out
dec
das
cdq
imul
jmp
shl
push
out
dec
das
cdq
sub
jmp
jmp
jbe
pop
out
push
push
jmp
icebp
ss
jle
xchg
out
js
nop
mov
jmp
icebp
ds
jbe
inc
out
js
cwde
dec
ja
jmp
icebp
ds
jle
inc
out
dec
das
cwde
push
(bad)
push
jmp
shl
push
out
dec
das
cwde
sub
jmp
jmp
jbe
pop
out
push
push
jmp
icebp
mul
jmp
js
push
mov
jmp
icebp
(bad)
data16
jbe
inc
out
js
pop
dec
ja
jmp
icebp
(bad)
rcr
jle
inc
out
dec
out
pop
push
(bad)
push
jmp
shl
push
out
dec
out
pop
sub
jmp
jmp
jbe
pop
out
push
push
jmp
icebp
push
arpl
jmp
js
cmc
lea
jmp
icebp
pop
arpl
loope
out
inc
out
js
std
dec
jb
jmp
icebp
pop
arpl
fnstcw
inc
out
dec
dec
std
ins
jb
jmp
icebp
pop
arpl
shl
push
out
dec
dec
std
sub
xchg
pop
rol
pop
dec
jp
pop
aad
mov
pop
aad
mov
dec
jp
pop
in
xchg
pop
inc
jp
pop
in
xchg
pop
dec
jp
pop
lds
ins
inc
jmp
jmp
out
or
in
dec
mov
pop
div
not
dec
jp
pop
in
ins
inc
jmp
icebp
call
retf
int
dec
mov
pop
div
div
dec
jp
pop
in
ins
inc
loope
out
(bad)
rcr
jl
retf
int
dec
mov
push
div
mul
popa
dec
jp
pop
aad
ins
inc
jmp
fstp
jl
retf
int
dec
mov
push
div
div
js
jp
pop
aad
ins
inc
loope
out
(bad)
loope
mov
add
lea
dec
xor
adc
jp
pop
lds
ins
inc
jmp
jmp
out
or
ins
dec
mov
pop
div
not
push
dec
jp
pop
in
ins
inc
jmp
icebp
xchg
mov
aas
imul
shl
xchg
jo
(bad)
js
aaa
neg
rcl
xchg
jo
(bad)
jo
aas
idiv
js
jmp
js
aas
idiv
push
mov
neg
pop
shl
xchg
jo
push
aas
imul
shl
xchg
jo
(bad)
js
aaa
neg
rcl
xchg
jo
push
aas
idiv
jns
jmp
js
aas
idiv
imul
push
aaa
not
pop
shl
jo
jmp
xchg
fld
inc
retf
icebp
xchg
jmp
xchg
retf
fld
add
icebp
mov
push
out
js
jle
jns
cs
icebp
imul
rol
iret
jle
jno
cs
mov
pusha
(bad)
xchg
jbe
jbe
xchg
jns
adc
addr16
mov
xchg
out
dec
cmpxchg
sbb
push
in
jnp
mov
push
inc
ret
and
std
enter
add
data16
mov
inc
xor
jl
push
retf
addr16
les
mov
(bad)
xor
and
retf
pushf
fld
fild
xchg
mov
adc
sub
dec
inc
dec
push
cdq
mov
ds
pop
ds
inc
jno
adc
jns
mov
inc
cdq
hlt
push
sub
lock
shl
xchg
imul
xor
inc
cmps
call
outs
and
or
pushf
test
pop
mov
(bad)
pusha
hlt
fwait
mov
ret
dec
push
mov
and
mov
pop
mov
hlt
or
call
and
sti
or
mov
add
sar
(bad)
jbe
sti
lea
dec
fidiv
repz
inc
stos
movs
rcl
nop
xor
and
cwde
movs
test
rcl
cmp
test
jp
add
xchg
je
xchg
(bad)
in
mov
cs
add
je
jmp
std
mov
pop
ret
test
ret
xchg
and
adc
stos
enter
sar
ret
adc
jmp
scas
ror
sub
cmp
xchg
fldenv
add
imul
stc
(bad)
aas
xchg
xchg
cld
aas
repnz
cld
cmp
out
imul
add
arpl
adc
or
aas
push
cld
xor
xchg
mov
test
scas
xchg
xchg
cld
aas
repnz
cld
xor
xchg
div
aad
scas
scas
or
aas
push
cld
aas
repnz
cld
xor
xchg
aam
icebp
mov
mov
pop
lds
push
xchg
cld
aas
repnz
cld
ds
inc
imul
add
pop
leave
push
cmps
ss
xchg
pushf
loope
test
add
mov
mov
mov
aaa
pop
clc
aas
pop
cdq
cld
aas
repnz
cld
cmp
ja
out
jb
cld
aas
push
xchg
cld
cmp
push
mov
test
sbb
(bad)
adc
xor
cli
pusha
scas
mov
cld
aas
push
cld
pop
icebp
pop
cmp
int3
push
scas
push
xchg
cld
aas
repnz
cld
aas
repnz
cld
xor
ja
out
jb
cld
aas
rcl
push
dec
icebp
(bad)
(bad)
aas
xchg
xchg
cld
cmp
div
push
mov
push
sub
push
repz
stos
xchg
and
sbb
xchg
push
sub
mov
jb
push
jl
pop
pop
sbb
pop
std
jbe
mov
aam
sar
dec
mov
add
and
mov
lds
das
aad
sub
out
pop
pop
sti
cdq
mov
push
jl
or
sbb
dec
sub
xchg
sub
or
repz
jo
inc
dec
pop
or
push
or
shl
adc
jb
and
mov
fisub
rol
mov
push
(bad)
stos
clc
jl
xchg
sub
stos
cmps
rcl
xchg
mov
in
jmp
inc
pushf
in
shl
std
and
or
aad
jmp
repz
mov
adc
shl
dec
xor
shr
mov
xchg
je
fst
in
sub
sub
mov
add
test
push
jnp
jne
mov
add
jns
add
or
xchg
and
jmp
jle
shl
mov
xchg
daa
dec
jle
stos
mov
aad
bound
mov
add
(bad)
mov
cmc
mov
fstp
xor
adc
les
fwait
jg
sub
dec
jns
aam
pop
gs
push
and
ret
gs
(bad)
je
adc
ins
shr
test
into
mov
add
int
loopne
mov
lds
into
mov
retf
in
out
and
int
pop
test
jg
pop
mov
add
fild
xor
xchg
gs
sub
sub
sub
jo
adc
pop
inc
aas
int
cli
sbb
stc
loope
rol
test
cli
adc
jns
out
(bad)
ins
sbb
mov
or
pop
pop
jmp
inc
call
fstp
sbb
dec
(bad)
xchg
ret
retf
pop
outs
xchg
fild
mov
and
xchg
mov
sub
test
push
inc
jmp
adc
mov
lea
dec
mov
and
fsubrp
jnp
daa
retf
pop
movs
push
inc
mov
lea
ret
repnz
mov
rcl
stc
jbe
repz
mov
push
(bad)
stos
loopne
gs
xor
jae
scas
fcom
add
jno
sti
(bad)
mov
push
sti
mov
mov
sub
cmps
call
add
fwait
aaa
xlat
clc
rcr
scas
lea
stos
lock
fstp
imul
cld
mov
xor
jae
mov
aas
push
inc
sub
je
test
and
inc
stos
test
push
push
mov
xor
shr
xor
imul
pusha
fnstenv
fstp
xlat
arpl
stos
and
rcl
mov
add
jne
fs
xchg
cld
jnp
cmp
inc
and
inc
xchg
and
nop
out
xor
mov
cmp
mov
mov
lock
loope
push
rol
pop
je
mov
jmp
dec
jo
adc
loop
(bad)
jb
mov
jb
mov
es
mov
mov
mov
aaa
jb
mov
mov
mov
sbb
jp
mov
or
jb
mov
cmp
add
adc
loop
mov
mov
mov
sti
mov
lahf
cs
rcr
mov
mov
mov
es
inc
pop
scas
mov
mov
mov
sti
sub
shl
in
jb
mov
or
out
inc
(bad)
je
test
(bad)
jb
mov
jo
pop
cli
(bad)
jno
mov
adc
mov
into
sub
inc
test
and
jmp
mov
mov
mov
mov
mov
sbb
jb
mov
pop
out
ret
push
call
xor
mov
and
add
mov
fcmovnb
push
clc
sub
shl
mov
jb
mov
mov
and
add
mov
cmp
pop
mov
mov
sbb
jl
push
ret
clts
cwde
outs
into
fild
pop
out
adc
jb
mov
ja
cmp
add
adc
shl
cmc
lea
mov
or
ret
out
inc
(bad)
xchg
aam
fbstp
mov
mov
sub
pop
cli
(bad)
jno
mov
xor
mov
push
or
loope
out
inc
pop
scas
mov
mov
mov
sti
xor
adc
shl
aad
jb
mov
pop
push
push
sub
test
and
imul
js
mov
lea
mov
jno
mov
pop
test
adc
mov
and
fwait
push
sbb
jb
mov
es
inc
(bad)
je
xchg
ds
jb
mov
je
jp
inc
cli
(bad)
jno
mov
bound
mov
into
sub
dec
test
and
jmp
mov
mov
nop
inc
cli
(bad)
jno
mov
push
lods
mov
jb
mov
dec
push
add
into
sub
dec
test
and
jmp
mov
mov
mov
sti
into
push
fadd
mov
jb
mov
mov
add
mov
and
add
repnz
sub
push
cwde
outs
into
fbld
pop
out
adc
jb
mov
jb
mov
mov
add
mov
mov
mov
(bad)
jno
mov
jb
mov
jns
mov
into
sub
dec
test
and
sti
mov
jb
mov
sti
ss
clc
push
cmps
daa
shl
mov
jb
mov
jb
mov
push
or
loope
out
inc
pop
scas
mov
jb
mov
mov
and
adc
shl
xchg
mov
mov
mov
or
(bad)
mov
mov
and
add
sti
stos
fwait
pop
aas
pop
into
cs
scas
pushf
push
pop
loop
mov
jb
mov
mov
sbb
jb
mov
jb
mov
and
add
mov
mov
sti
add
adc
shl
xor
mov
mov
into
sub
dec
test
and
sbb
mov
mov
sti
mov
cmps
daa
shl
xor
mov
mov
push
or
loope
out
inc
pop
scas
mov
jb
mov
mov
add
adc
shl
adc
mov
or
(bad)
mov
and
add
sti
lods
fwait
mov
push
pop
loop
mov
mov
sbb
jb
mov
jb
mov
and
add
mov
and
add
mov
mov
cmp
pop
mov
or
out
mov
pop
shl
mov
jb
mov
mov
add
mov
mov
mov
mov
mov
add
out
rcl
shl
mov
mov
mov
and
add
mov
mov
and
add
mov
and
add
pop
out
fwait
mov
in
sar
sti
mov
out
cs
scas
pushf
push
pop
loop
mov
js
mov
mov
mov
mov
add
mov
mov
mov
(bad)
jno
mov
repnz
mov
jns
mov
into
sub
dec
test
and
jmp
mov
mov
pop
inc
cli
(bad)
jno
mov
repnz
mov
jb
mov
mov
pop
push
or
loope
out
inc
(bad)
je
mov
mov
jbe
jp
inc
cli
(bad)
jno
mov
shr
mov
mov
or
(bad)
mov
and
add
mov
out
and
outs
retf
(bad)
adc
lahf
int3
stos
xor
loope
or
icebp
adc
push
jno
aam
cld
push
cmp
mov
dec
mov
xor
popa
fcmovnu
dec
(bad)
jecxz
test
cld
sub
mov
and
sub
xchg
sub
retf
inc
fwait
test
pushf
xor
aaa
sti
retf
jb
mov
add
les
fld
mov
loop
aam
push
repz
loop
pop
aad
or
lds
les
imul
mov
sbb
mov
out
lds
call
push
pop
lods
xchg
push
dec
dec
add
mov
js
xchg
sahf
arpl
(bad)
out
ins
ret
xor
jecxz
mov
push
(bad)
stos
sub
scas
rcr
cmovnp
pop
xchg
jecxz
inc
mov
jmp
test
sbb
xchg
bound
pop
mov
fnstcw
mov
cmp
add
xchg
in
sub
(bad)
jmp
and
push
adc
std
js
arpl
mov
mov
xchg
pop
data16
jmp
xor
out
inc
fwait
and
and
inc
or
mov
test
pop
cmps
cmp
icebp
jmp
push
sti
mov
push
loopne
movs
(bad)
sbb
cmp
jb
pop
xor
outs
inc
mov
retf
sbb
imul
pop
enter
movs
stc
sti
pop
or
pop
mov
imul
or
cld
cmps
mov
cmps
pop
or
fdivr
out
loope
lods
pusha
into
les
ret
call
xlat
imul
mov
push
imul
lahf
cmps
hlt
sub
mov
ret
js
repz
and
rol
fcmovnu
into
mov
inc
sti
jge
loope
outs
rol
push
sti
dec
jnp
mov
add
sub
pushf
test
pop
add
cmc
xchg
mov
jl
xchg
fs
xchg
pop
sbb
inc
pushf
cld
sahf
(bad)
movs
aaa
test
sbb
sbb
fiadd
in
mov
out
xchg
(bad)
ds
ins
fnstenv
adc
scas
dec
dec
(bad)
nop
rcl
push
mov
mov
movs
into
push
hlt
call
js
mov
pop
inc
stos
arpl
xchg
jbe
jae
pop
in
xchg
push
mov
xchg
push
test
jl
push
adc
inc
gs
push
push
inc
jge
les
stos
shr
cmps
shl
(bad)
jmp
shl
mov
scas
adc
xchg
add
jmp
jae
fwait
sub
in
and
xchg
sbb
stos
push
(bad)
stos
enter
shl
add
mov
mov
jp
xor
jbe
out
mov
(bad)
repnz
inc
and
sahf
ret
lea
and
and
lods
dec
xor
dec
rcl
jg
js
jmp
push
or
mov
retf
xor
mov
(bad)
cmp
adc
xor
push
jno
or
adc
xor
adc
xor
mov
xchg
pop
adc
xor
adc
xchg
pop
jae
cmp
pop
adc
pop
scas
push
mov
mov
jge
mov
mov
lods
mov
test
mov
pop
jmp
pop
jp
retf
repnz
xor
jmp
mov
ss
mov
arpl
jle
out
push
retf
xor
jbe
aam
jle
mov
inc
addr16
dec
mov
retf
js
mov
dec
test
sub
pop
arpl
ss
movs
adc
mov
rcl
cmp
mov
jbe
jecxz
inc
mov
and
xor
jb
(bad)
push
cmps
rcr
cli
sub
jnp
gs
pop
and
jg
mov
xchg
cmps
fcomp
xor
inc
push
scas
mov
ror
jge
or
add
xor
add
jae
push
clc
jmp
enter
mov
lea
test
ss
or
adc
mov
and
pop
aam
out
outs
jecxz
(bad)
mov
(bad)
out
xor
mov
push
adc
lea
and
inc
rol
(bad)
in
(bad)
xchg
adc
push
adc
popf
dec
jmp
pop
jb
inc
jmp
jb
and
push
or
push
imul
out
inc
xor
xchg
stos
jo
ffreep
add
call
jge
sub
out
clc
out
int
inc
inc
jge
sub
out
sub
out
sub
out
xchg
stc
cmp
inc
es
jge
sub
in
test
fcomp
lahf
push
jae
mov
leave
je
(bad)
xlat
scas
ficomp
pop
sbb
inc
(bad)
cdq
mov
jo
pop
cld
and
jo
adc
inc
jmp
xor
and
pop
mov
inc
(bad)
hlt
mov
out
adc
inc
jmp
inc
or
mov
pop
pop
mov
fcom
push
(bad)
mov
jno
sub
sub
inc
cmp
xor
test
out
pop
adc
mov
daa
imul
inc
cmp
cmp
shl
jmp
movs
or
call
imul
or
push
fld
sub
mov
pop
push
in
or
fwait
stos
xor
add
mov
pushf
test
shl
inc
lds
inc
ja
cmps
fcom
aam
adc
jecxz
push
xchg
std
ins
imul
or
xchg
add
mov
xchg
in
pop
mov
mov
add
xchg
cmp
rcr
xor
xchg
sub
movs
add
inc
mov
xor
xor
add
mov
mov
stos
sar
dec
movs
ja
xchg
popa
inc
sahf
and
pop
push
xor
pop
jecxz
repz
push
and
ja
xchg
popa
inc
mov
or
outs
xor
add
xchg
hlt
adc
sar
cmp
push
add
and
or
dec
push
(bad)
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fiadd
pop
std
inc
add
mov
jbe
div
fs
je
mov
add
cmps
cmc
pushf
push
das
dec
sahf
jp
mov
fs
dec
cs
mov
or
sub
cmps
std
pushf
push
mov
movs
sub
data16
popf
dec
push
jp
mov
addr16
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fld
or
fiadd
or
int
or
fiadd
or
ins
add
fst
daa
add
push
pop
ret
add
retf
or
cmp
scas
or
(bad)
lsl
ins
add
add
fist
(bad)
sbb
daa
add
cwde
fst
xchg
pop
or
jge
(bad)
sbb
cmps
or
in
add
mov
lods
push
jmp
cs
add
scas
lea
leave
push
fadd
or
sub
cmps
push
(bad)
jge
cmp
out
paddd
fild
ja
dec
or
js
out
or
add
add
std
add
add
add
adc
mov
fstp
(bad)
or
add
push
std
add
(bad)
fnstenv
lods
add
fcomip
or
jge
jmp
dec
fld
dec
das
fnstenv
jmp
push
or
mov
aad
or
pop
or
shl
pop
jbe
pop
mov
(bad)
lahf
or
cmc
fcom
pop
sbb
imul
ins
add
loope
lsl
mov
mov
xchg
fisub
push
cld
add
or
sbb
push
push
pushf
add
mov
inc
pop
idiv
add
mov
out
jle
add
mov
cmp
or
ins
add
rcr
cs
push
fst
inc
xchg
pushf
add
pop
aam
add
ficom
es
add
dec
(bad)
add
or
test
mov
shr
mov
add
sbb
imul
pop
test
push
mov
xlat
or
fidiv
neg
or
scas
or
lods
pop
jns
fidivr
push
cmp
test
mov
add
ds
push
or
jg
sahf
lahf
add
rcl
jg
pop
out
add
(bad)
das
add
dec
add
ret
(bad)
pop
jg
sub
xlat
mov
(bad)
inc
dec
neg
lahf
or
clc
fnstcw
or
add
mov
pop
in
fnstsw
push
out
add
xchg
(bad)
or
cwde
fistp
dec
inc
leave
adc
add
pop
add
faddp
add
aam
push
push
aas
add
mov
dec
add
mov
pop
add
fisttp
jmp
push
mov
pop
add
dec
fst
push
out
push
or
ja
jbe
add
jg
inc
out
pop
mov
push
or
mov
inc
or
scas
add
adc
(bad)
add
sbb
lahf
push
jbe
add
dec
add
cmovle
xchg
add
aam
push
mov
fcomp
mov
dec
ss
pop
xsha1
cmps
into
add
es
add
(bad)
sahf
add
retf
or
ds
cmp
fimul
add
call
scas
add
cs
in
xchg
or
pop
add
jmp
mov
xchg
shr
mov
add
test
jg
mov
(bad)
cmovbe
test
mov
push
pop
test
es
add
stos
ror
add
add
fiadd
into
mov
mov
ds
pop
jns
fadd
mov
out
dec
pop
sbb
add
add
pop
out
add
popa
(bad)
or
add
ins
shl
or
add
or
sbb
outs
or
add
push
fxch
or
scas
add
fimul
add
fsubr
add
add
cmp
fiadd
test
ss
push
mov
push
cmp
(bad)
(bad)
daa
add
cdq
pop
jns
fcomp
xchg
cmp
fld
fcos
add
cdq
push
jns
fiadd
sub
rcr
mov
fdivr
add
add
(bad)
xchg
add
jns
stc
jmp
aaa
pop
out
imul
fstp
stc
push
stc
test
pop
add
sar
pop
es
add
mov
xchg
or
fdiv
or
mov
sub
mov
mov
sub
dec
or
pop
fcos
or
mov
pop
or
frstor
or
test
xchg
outs
cmp
jns
fiadd
out
pop
fldenv
out
dec
test
(bad)
or
adc
das
or
ror
or
dec
add
add
pop
add
imul
add
leave
add
xor
jg
sbb
cmp
rcl
or
mov
ja
jbe
add
sub
dec
or
cmp
jns
fsubr
pmaxub
xchg
push
push
mov
or
cdq
int
out
callw
cmc
aad
or
std
fst
ftst
xlat
jg
out
pop
jns
(bad)
add
fxch
or
cwde
ror
push
(bad)
test
jns
shr
neg
pop
stc
mov
daa
add
add
fld
leave
mov
sbb
pop
xchg
or
fadd
test
cmps
js
dec
pop
rcr
mov
outs
add
sbb
mov
fadd
ja
inc
into
sub
jg
syscall
mov
add
add
mov
pop
outs
shl
push
inc
mov
stc
adc
scas
add
test
jmp
xchg
cwde
push
test
push
cmp
or
rcr
cdq
xor
lahf
or
cmp
stc
ds
pop
push
cwde
pop
pop
and
addr16
push
aas
or
xlat
(bad)
pop
or
push
jns
fsubr
add
or
fld
fmul
mov
add
fbld
pop
repnz
or
dec
add
jbe
add
in
jg
xchg
stos
push
fldl2t
fsubrp
or
stos
add
fisubr
add
fcmovne
add
cmp
test
xchg
inc
add
fild
jns
(bad)
or
mov
jnp
imul
fisttp
push
stos
add
push
sar
scas
retf
push
fstp
inc
or
stos
add
inc
shr
sbb
xlat
add
sub
cmp
or
fist
mov
outs
stos
add
out
add
or
sub
pop
pop
fistp
stc
add
pop
add
imul
(bad)
mov
out
cmp
test
data16
pop
or
fsub
dec
and
pop
add
fidivr
sub
aad
or
cli
pop
stc
(bad)
inc
add
jp
imul
push
dec
int
pop
es
push
test
inc
stos
add
std
fisub
or
dec
add
aam
add
push
leave
cwde
fiadd
fld
retf
(bad)
rcl
or
push
pop
mov
mov
out
pop
add
mov
stos
add
shr
sub
jmp
imul
cdq
pop
sar
or
jmp
xchg
add
or
add
ja
out
or
dec
add
push
fiadd
or
retf
push
mov
jns
rcr
or
sub
leave
add
(bad)
divps
das
or
fiadd
cmp
fist
stc
cmp
cli
add
and
out
add
das
xlat
dec
add
(bad)
jns
fmul
pop
(bad)
xor
lahf
or
add
jmp
or
mov
sub
adc
(bad)
movd
scas
or
fstp
add
test
jns
xlat
push
or
and
test
test
inc
add
push
fmul
test
jle
add
inc
aad
push
xchg
inc
add
fistp
add
jo
lahf
add
inc
add
shufps
fs
pop
ss
pop
or
fcmovu
or
sbb
jg
mov
fisub
leave
or
pop
pop
(bad)
aad
cmp
rcr
push
cmps
adc
mov
daa
fdivr
out
push
jmp
xchg
aam
or
shl
or
je
test
push
les
sbb
shl
or
fcom
imul
test
or
xor
(bad)
shl
cmp
aam
pop
(bad)
xor
fstp
mov
mov
adc
sub
in
test
pop
inc
add
mov
in
mov
les
stc
lods
(bad)
or
fs
pop
push
fdiv
mov
sar
(bad)
add
(bad)
or
les
or
add
jae
aaa
add
jnp
push
or
fdiv
pmaxub
ins
fcom
mov
sar
sub
xlat
pop
push
xchg
add
out
jle
add
aad
add
add
sub
ror
add
add
mov
add
into
pop
add
push
pop
add
vmovdqu
mov
cdq
retf
add
mov
jmp
inc
test
or
mov
mov
fstp
cmp
fisttp
(bad)
test
fiadd
mov
push
out
sbb
add
fst
ss
add
mov
shr
add
pop
jmp
mul
cmp
mov
add
mov
test
dec
pop
add
inc
sar
push
cs
pop
dec
dec
fucom
add
pop
add
jo
lahf
add
push
add
mov
push
dec
outs
shr
(bad)
xlat
add
adc
out
add
add
add
add
scas
push
jbe
add
out
daa
add
xor
daa
add
ja
sub
aad
or
ja
sub
fsubr
push
pop
add
shl
test
into
mov
(bad)
lahf
or
push
cmp
fistp
or
test
int3
aad
add
push
push
mov
aad
push
xchg
xchg
mov
(bad)
test
loopne
aas
or
push
imul
xchg
imul
shl
fld
push
push
mov
mul
inc
add
mov
test
movs
xlat
(bad)
push
push
xchg
add
inc
fld
cdq
dec
shl
or
add
push
push
add
pop
es
or
test
push
push
add
pop
shl
cs
jns
(bad)
addr16
cmps
xchg
jmp
xchg
stc
psrlq
pop
xor
das
add
add
jbe
add
or
das
fisub
not
or
rol
push
add
mov
sbb
fisttp
push
popa
add
fisub
cdq
icebp
aad
add
add
(bad)
rcr
add
adc
sub
shl
or
out
aad
(bad)
push
add
lahf
xlat
test
xchg
scas
push
mov
or
icebp
add
mov
aaa
pop
push
adc
fnstcw
add
mov
loope
cdq
lods
fistp
or
push
ficomp
push
icebp
add
xchg
stc
pusha
aad
add
outs
fstp
or
xlat
iret
push
xchg
add
add
loope
cmp
fsubr
push
scas
inc
add
inc
push
imul
popa
add
fiadd
push
mul
stc
and
rol
sub
xchg
or
inc
add
rcl
lahf
push
scas
loopne
pop
(bad)
aas
add
and
imul
mov
addr16
data16
hlt
fadd
add
add
std
aad
add
add
loope
pfcmpgt
add
or
push
jns
aad
or
adc
fstp
add
aad
or
rol
mov
and
sbb
push
add
sar
leave
movs
fistp
add
nop
add
lods
fild
or
lock
pop
cmps
pusha
pop
mov
push
or
inc
add
inc
fcomp
add
mov
mov
add
leave
jo
das
add
jg
pop
or
(bad)
(bad)
add
adc
fldcw
daa
add
loopne
stc
adc
test
sbb
invd
(bad)
push
add
pop
xor
(bad)
aam
push
ss
xor
or
pop
stc
cmp
fisttp
push
mov
fild
sahf
and
mov
fst
add
rcr
pop
sahf
xchg
add
scas
inc
add
(bad)
or
fiadd
or
xchg
add
hlt
aam
or
std
aad
add
rol
or
mov
xchg
and
jmp
jbe
add
or
pop
leave
adc
add
mov
jg
fiadd
sbb
and
imul
fstp
add
xchg
push
cdq
lods
fisub
(bad)
xor
mov
push
ret
add
pop
shr
add
add
inc
aad
push
cmps
inc
add
dec
ror
(bad)
mov
das
add
xor
cmp
out
or
jae
or
pop
add
push
rol
or
fadd
jbe
add
add
push
aam
add
xlat
mov
jns
aad
or
rcr
sub
fnstenv
jmp
mov
outs
or
xor
cmp
fcomp
add
rol
or
pop
mov
outs
jb
test
mov
jns
fld
sbb
xlat
aaa
add
xchg
rcl
dec
cdq
shl
or
fmul
pop
mov
(bad)
xchg
add
jns
(bad)
pop
ss
pop
pop
mov
add
cmps
fsub
add
fcos
push
sahf
ret
push
fld
imul
add
inc
shr
out
add
dec
rcr
or
bound
stc
ja
inc
or
add
sub
ja
mov
(bad)
dec
or
add
imul
add
pop
fdiv
sub
fnstenv
push
data16
ds
add
add
xor
out
into
bound
dec
cmp
lahf
add
inc
add
and
cmps
pop
fisub
jns
fcomp
or
retf
fisttp
fcmovne
mov
cmp
int
add
lea
sbb
retf
test
out
add
cli
(bad)
lahf
add
add
add
std
add
or
push
jmp
test
dec
lahf
retf
cmps
sub
or
cdq
(bad)
enter
mov
daa
or
sbb
xchg
jbe
add
leave
das
or
ret
iret
add
ins
add
les
sahf
std
add
inc
into
(bad)
push
pop
add
or
std
add
mov
(bad)
aaa
add
les
add
lods
add
ins
into
inc
pop
xchg
out
cs
add
sbb
cmps
or
lods
add
add
ja
cmps
or
xlat
add
in
add
add
add
cmp
inc
xchg
dec
add
add
in
add
sub
in
add
xchg
ins
add
into
outs
add
add
(bad)
or
sar
repz
sub
or
rcl
pop
or
stc
loopne
xlat
or
add
in
shr
fdivrp
add
xchg
ret
daa
add
(bad)
aas
pop
fidivr
imul
shl
push
sub
mov
pop
add
mov
pop
add
retf
mov
scas
lods
add
scas
int
pop
push
mov
or
int3
add
dec
fadd
fld
dec
(bad)
pop
add
dec
(bad)
das
or
dec
pop
stc
jb
out
push
mov
add
enter
int3
add
(bad)
ds
fldcw
scas
or
adc
mov
jns
ret
push
ins
add
add
ja
dec
cld
pop
imul
fadd
or
pop
dec
ds
out
xchg
mov
(bad)
or
mov
cs
fild
(bad)
scas
add
inc
sub
lds
mov
add
ret
(bad)
out
out
fild
cdq
retf
or
test
add
inc
(bad)
push
cmps
inc
cdq
out
das
push
cs
add
call
dec
add
push
out
add
cdq
retf
aas
add
retf
xchg
push
scas
add
mov
jg
mov
add
mov
fild
mov
sbb
fild
mov
dec
add
scas
int3
xchg
cs
add
push
ret
lar
pop
enter
das
add
inc
rcl
sbb
test
add
push
push
push
dec
pop
sbb
(bad)
jg
fsubrp
add
test
cmp
scas
add
add
push
inc
sub
pop
imul
add
mov
add
fld
aas
add
out
add
rol
or
jle
jns
retf
scas
outs
add
ret
scas
or
cld
leave
dec
add
add
shr
es
pop
jmp
outs
scas
add
retf
xchg
push
outs
push
add
cwde
into
pop
or
into
push
imul
ret
or
add
int3
pop
push
push
fiadd
or
iret
dec
jbe
add
fimul
xlat
or
push
add
or
pop
add
push
xchg
inc
jmp
jle
push
jns
int
(bad)
dec
add
jg
xchg
pop
inc
dec
gs
mov
cmps
pop
push
jmp
inc
mov
fst
shl
cs
sbb
xlat
add
push
add
add
out
mov
push
dec
or
pop
add
aaa
retf
iret
add
add
ror
fiadd
or
push
add
sub
xlat
add
ror
fild
mov
shl
inc
pop
pop
imul
imul
add
push
or
into
inc
mov
jns
retf
(bad)
cdq
pop
leave
loop
das
add
in
(bad)
addr16
xchg
int
add
mov
add
test
xchg
ss
das
add
mov
pop
outs
leave
pop
fnstcw
cmp
test
or
dec
scas
int3
iret
push
jbe
add
push
rcr
data16
test
out
fld
or
iret
or
mov
test
push
sub
jns
lds
or
jns
scas
or
dec
add
fs
push
cmps
cdq
add
push
xchg
ds
leave
adc
pop
add
imul
or
pop
retf
push
sbb
cmp
rcr
push
imul
or
add
cmp
pop
add
retf
pop
pop
scas
cmp
sbb
enter
cwde
add
rol
out
push
push
pop
add
call
scas
add
les
push
(bad)
clc
add
push
mov
mov
callw
out
pop
add
(bad)
test
xchg
rol
pushf
int
add
sub
leave
add
add
mov
out
or
iret
xchg
add
pop
pop
mov
dec
add
mov
clc
add
scas
ret
pop
pop
pop
mov
jle
pop
pop
pop
ret
daa
add
cmp
stc
inc
enter
fadd
jmp
out
push
cmp
out
or
sub
leave
jns
mov
pusha
ror
xchg
mov
xchg
push
out
push
or
add
sbb
mov
fimul
push
add
test
or
femms
push
pop
add
aaa
int3
scas
push
out
add
cmp
test
sub
ror
mov
into
pop
add
or
jns
lds
jbe
push
sbb
lds
out
imul
(bad)
iret
add
imul
into
int
or
hlt
ret
xchg
retf
add
clc
int3
daa
push
push
cmp
add
pop
add
jmp
jmp
(bad)
sbb
add
add
xchg
pop
add
or
sbb
pop
add
cmps
mov
stc
mov
cmp
sbb
imul
scas
ret
jbe
add
xchg
stos
add
pop
retf
push
or
add
inc
rcr
into
mov
mov
sub
inc
pop
(bad)
dec
add
js
out
sub
mov
out
mov
sbb
(bad)
jg
xchg
ja
mov
ret
ja
ds
imul
fild
pop
xor
stos
add
les
mov
int
or
pop
jmp
jbe
push
dec
aam
pop
push
(bad)
jmp
dec
retf
(bad)
push
into
sub
fxch
iret
out
or
jp
mov
rcr
cli
retf
pop
or
jp
leave
jecxz
jg
push
stos
add
in
(bad)
iret
add
xchg
rol
mov
retf
cmps
add
cli
add
test
pop
push
es
pop
mov
sahf
cli
add
mov
pop
or
mov
push
jmp
data16
cmp
sub
cdq
push
retf
ficomp
imul
test
jbe
add
(bad)
sbb
sbb
xchg
push
cli
add
jnp
xchg
or
popa
int
or
add
push
xchg
pop
dec
adc
sub
dec
sbb
xlat
add
add
out
or
cmp
leave
jg
push
retf
aaa
ret
aas
push
fisubr
cdq
cmp
lahf
or
add
and
inc
out
mov
pop
pop
cmps
add
enter
test
stc
fcmovb
ja
ds
xlat
or
and
pop
or
sar
xchg
lds
or
jne
jns
(bad)
fisttp
adc
in
iret
pop
or
add
add
and
daa
push
into
test
imul
iret
or
add
and
mov
cmc
pop
imul
lds
mov
add
ds
pop
pop
(bad)
inc
mov
add
inc
(bad)
pop
push
test
mov
jle
add
ja
lahf
or
add
int
or
test
fs
mov
test
cs
or
int
or
test
dec
sbb
ja
ds
xlat
pop
(bad)
pop
or
pop
add
fcomp
mov
add
add
(bad)
fcomp
leave
enter
(bad)
int
cmp
ficom
xchg
fisttp
dec
std
add
out
outs
add
pop
add
jmp
jge
test
cs
add
out
std
push
jmp
push
popf
add
fidiv
imul
aam
add
add
(bad)
mov
das
pop
jbe
add
fimul
or
pop
add
fild
or
dec
push
cmp
(bad)
add
mov
add
or
fimul
out
pop
leave
imul
pop
mov
lahf
add
mov
pop
or
(bad)
scas
add
or
das
or
dec
add
lea
cmp
lsl
fld
sbb
(bad)
outs
add
xlat
iret
pop
push
in
add
pop
into
in
add
inc
dec
add
(bad)
add
dec
add
iret
fiadd
add
lods
add
repnz
or
add
push
mov
fnstenv
cmp
fbld
dec
xchg
shr
add
lods
add
cs
cmp
sub
sbb
mov
add
fiadd
or
mov
push
or
pushf
add
sahf
cmp
sub
pop
add
sbb
stc
pop
xlat
test
rol
cdq
dec
fdivr
or
int3
add
jae
invd
mov
add
sub
cmp
inc
or
add
imul
pop
pop
adc
pop
add
sbb
dec
add
add
sysret
test
push
mov
mov
pop
cmp
xchg
or
pop
jmp
(bad)
fadd
dec
das
fcmovu
or
aad
ucomiss
aaa
or
add
(bad)
pop
add
int3
fldcw
or
icebp
shr
mov
pop
jns
ror
(bad)
pop
add
out
daa
or
fild
sub
fldcw
or
fild
psadbw
dec
adc
add
mov
test
mov
iret
add
pop
or
pop
push
leave
mov
jg
mov
pop
add
add
pop
aam
add
ficom
push
fild
pop
dec
xlat
test
jo
push
or
jle
scas
push
jle
add
imul
pop
or
fdiv
imul
add
add
iret
add
pop
add
and
(bad)
add
xlat
outs
push
(bad)
cs
(bad)
scas
add
fisttp
add
add
(bad)
sahf
add
retf
add
lock
(bad)
pop
add
(bad)
(bad)
add
pop
add
cmps
inc
stc
call
fiadd
dec
nop
xlat
push
add
dec
add
(bad)
cs
test
pop
or
fucomip
or
inc
leave
mov
dec
movsx
add
mov
inc
pop
mov
pop
add
or
push
add
xlat
push
add
into
add
add
sar
cs
add
dec
fucomip
add
mov
pop
scas
add
fist
cmps
push
add
add
imul
or
mov
aas
pop
outs
sahf
pop
jns
fcomp
or
add
into
add
or
daa
or
push
add
or
aam
push
(bad)
outs
pop
imul
aad
or
sbb
or
fistp
test
fimul
sbb
aam
or
int
mov
(bad)
stc
add
repnz
pop
mov
push
test
xchg
push
or
xlat
mov
mov
push
or
cdq
nop
fadd
sbb
jns
cmp
dec
add
(bad)
add
mov
inc
add
jmp
mov
pop
cmps
aad
push
mov
fld
or
xlat
push
or
or
pop
(bad)
or
sub
add
aad
add
dec
add
(bad)
mov
ja
jbe
push
mov
(bad)
jmp
scas
add
pop
leave
pop
(bad)
or
fld
cdq
sbb
mov
cmp
ficomp
add
dec
push
sub
shl
push
mov
add
outs
jns
jns
shl
or
fsubr
or
stc
push
pop
sub
cmps
push
mov
aad
or
fcomp
inc
add
test
cdq
rcr
pcmpeqd
dec
or
sbb
rcr
add
mov
clc
(bad)
xlat
add
sub
loop
iret
add
enter
fcom
mov
cmp
or
pop
push
or
fadd
or
js
test
outs
clc
add
data16
stc
mov
call
xchg
sbb
mov
pop
or
add
bswap
push
aas
or
sbb
dec
(bad)
add
fcomp
add
jg
pop
add
js
jmp
(bad)
pop
add
outs
(bad)
or
(bad)
add
push
mov
dec
enter
shl
stc
or
xchg
cmps
clc
add
push
dec
fadd
mov
aad
add
js
sub
(bad)
add
add
sub
aas
or
rcr
xchg
push
push
sbb
sbb
aad
add
mov
xlat
push
ds
aaa
or
retf
push
jmp
push
sub
pop
sti
shl
add
mov
stc
in
inc
add
(bad)
out
jbe
add
fcmovbe
add
shl
(bad)
fwait
add
test
xchg
or
(bad)
xlat
add
push
sub
fwait
add
add
shr
or
mov
or
mov
or
dec
add
fsub
sub
pop
add
sub
test
(bad)
or
cdq
jne
scas
or
mov
pop
jnp
(bad)
pop
fldenv
add
mov
scas
or
pop
rcl
or
mov
mov
sahf
sbb
leave
or
das
add
imul
xor
pop
or
add
das
aad
or
or
cdq
rcl
lahf
pop
scas
pop
pop
(bad)
fcomp
es
add
(bad)
or
add
int
aas
add
call
outs
cmp
mov
fmul
jns
(bad)
push
add
cli
add
push
mov
add
nop
fbstp
or
fiadd
jns
xlat
aas
or
mov
pop
pop
into
fiadd
fnstenv
jp
jns
fisubr
add
fiadd
cmp
aas
push
scas
retf
dec
fstp
add
jb
pop
add
push
dec
jle
(bad)
add
popa
xlat
pop
out
jmp
imul
jg
mov
ficomp
push
sbb
dec
xor
daa
or
xlat
xchg
(bad)
inc
fiadd
leave
ret
push
inc
aaa
add
gs
add
(bad)
inc
add
test
pop
lahf
ror
or
in
cdq
mov
xchg
add
test
sub
and
pop
add
in
test
xchg
aad
jns
fcmovu
add
push
add
push
aam
add
pop
shl
add
inc
fidivr
ss
leave
dec
fild
or
in
test
push
lds
sbb
or
imul
add
adc
outs
push
dec
jne
imul
inc
add
or
ror
push
out
cmc
add
push
add
ror
jns
fmul
add
sub
je
test
xchg
aam
or
fbld
or
aad
push
jle
add
inc
inc
add
push
into
in
or
aam
sub
je
fld
pop
mov
hlt
add
cs
jns
(bad)
fldcw
add
fstp
outs
add
fcmovne
pop
les
or
mov
mov
es
or
scas
add
popa
aad
or
and
cdq
outs
fisubr
or
push
add
mov
(bad)
push
jle
add
or
je
jmp
out
test
jmp
(bad)
aam
pop
cmp
movs
push
mov
scas
cmps
add
aam
jg
push
xchg
pop
fstp
aaa
add
add
rcr
or
cmps
add
pop
push
cmps
add
neg
fisttp
xchg
pop
imul
pop
push
jns
ficom
add
pop
add
jmp
xchg
add
push
pop
add
sahf
(bad)
or
mov
cmp
cmps
pop
or
pop
add
(bad)
add
aaa
add
xlat
out
pop
mov
pop
xchg
cmps
add
push
sar
mov
add
or
aaa
add
inc
fmul
add
dec
xlat
outs
add
cmps
add
or
pop
add
pop
ja
sbb
add
sub
pop
push
mov
add
or
aad
pop
sahf
daa
add
add
xchg
mov
rcr
imul
add
mov
add
and
ja
xchg
pop
mov
fidivr
montmul
cmps
xchg
mov
rcr
sub
fdivr
or
add
(bad)
add
xchg
add
push
mov
neg
xchg
or
clc
aam
or
add
ficomp
or
aam
or
push
add
ficomp
add
pop
fstp
pop
jmp
mov
push
cmp
xchg
add
fldenv
out
ss
add
cmps
xlat
addr16
test
das
add
test
push
xchg
add
or
inc
add
inc
fmul
xchg
xchg
jmp
mov
pop
sub
mov
mov
jns
fisttp
push
mov
fldenv
outs
or
inc
add
(bad)
or
rcl
ds
add
sbb
test
fistp
dec
push
add
add
xor
push
push
leave
cmp
dec
push
cmps
add
fstp
mov
pop
sub
fmul
or
(bad)
push
mov
xlat
add
add
(bad)
shl
cmps
popa
push
jns
sar
add
(bad)
sbb
xlat
pop
dec
add
out
out
add
xlat
cmps
add
xchg
rcl
or
lahf
xlat
ja
pop
push
add
jle
pop
or
rol
mov
mov
pop
mov
rol
movs
xlat
mov
scas
fxch
add
loope
stc
push
ror
dec
inc
add
pop
fsubrp
push
mov
add
push
push
pop
sbb
cmps
femms
popa
add
jbe
outs
add
rol
jg
pop
add
pusha
fisub
mov
push
icebp
add
(bad)
or
sbb
push
or
rol
push
popa
add
shl
add
jno
sbb
(bad)
push
mov
add
fidiv
add
pop
mov
dec
sub
out
or
(bad)
fmul
push
nop
add
(bad)
scas
or
(bad)
or
pusha
push
cdq
int3
rol
xchg
mov
aad
pop
ss
dec
clc
fstp
add
add
not
cmps
or
fmul
pop
popf
(bad)
cmp
add
mov
inc
add
push
cdq
mov
out
out
add
add
push
add
dec
jo
cmp
jo
test
cmps
xor
add
pusha
add
mov
add
push
into
mov
mov
jle
add
jns
(bad)
push
mov
xchg
cs
add
adc
iret
push
fidiv
or
fnsave
test
inc
adc
stc
(bad)
push
push
push
rol
fnstenv
or
fnsave
cmps
mov
sub
fstp
mov
add
sub
xchg
aam
mov
mov
rol
mov
stc
(bad)
or
ret
pop
pop
int3
xlat
inc
jle
add
neg
xchg
push
div
add
or
add
jecxz
pop
pop
push
jae
pop
out
shr
xchg
add
cs
fstp
adc
jns
aam
or
mov
ja
(bad)
adc
mov
aas
or
add
or
mov
push
add
push
xor
jmp
repz
pop
aam
or
fiadd
or
dec
rcl
jns
fidiv
push
push
repz
or
data16
fldcw
aaa
add
adc
dec
add
sbb
mov
out
ret
pop
imul
xchg
pop
mov
fidiv
mov
mov
xlat
fisttp
adc
cmp
fnstsw
outs
repz
sub
pop
or
shl
leave
(bad)
lgdtd
mov
imul
add
mov
ficom
add
xchg
add
repz
add
add
pop
push
loop
mov
fadd
sub
frstor
or
add
mov
push
add
xchg
push
stc
test
(bad)
or
add
(bad)
(bad)
cmps
or
xchg
add
mov
pop
or
shl
stc
mov
mov
scas
or
add
push
xlat
mov
jns
rcr
add
rcr
add
fiadd
jns
shr
push
add
outs
add
xlat
(bad)
or
xor
add
adc
dec
push
push
rol
imul
xlat
or
leave
or
(bad)
or
xor
xlat
push
mov
add
cmp
lahf
or
and
pop
into
repnz
test
into
ins
add
inc
int
or
ret
push
ins
add
ret
retf
aas
or
dec
add
shr
test
add
std
add
clc
enter
lods
add
or
sub
aas
or
lods
add
retf
xchg
add
push
pop
add
or
add
mov
mov
out
pop
pop
ins
push
sbb
cmp
pop
push
(bad)
sub
test
push
ror
pop
iret
mov
inc
iret
scas
push
jle
push
cmp
xlat
or
ins
add
cmps
sbb
aaa
pop
sahf
jge
cdq
(bad)
lods
add
imul
add
jge
cmp
retf
femms
(bad)
cmp
dec
add
add
add
sub
dec
add
dec
add
ss
mov
aaa
push
push
int
cdq
daa
int
or
ret
xchg
or
ins
add
ror
lahf
push
scas
int3
pop
test
scas
ins
add
xchg
cmp
cdq
into
les
(bad)
ins
add
repz
inc
or
fyl2xp1
int
add
ins
add
retf
xchg
cld
push
sbb
shl
push
pop
add
pop
ins
add
iret
xlat
add
test
mov
dec
mov
lahf
or
cmp
cdq
mov
mov
mov
pop
add
movs
ror
mov
stc
stos
ret
syscall
dec
sub
sub
pop
(bad)
mov
add
fadd
fld
das
or
dec
int
add
ins
add
inc
fadd
jns
(bad)
fisttp
xchg
dec
add
int
or
add
imul
add
adc
aas
or
push
rcr
add
aas
or
add
xchg
lods
add
xor
mov
ja
scas
sbb
imul
add
sub
iret
or
aas
pop
test
out
scas
add
rcl
syscall
stc
vmaskmovdqu
leave
test
into
(bad)
aaa
add
outs
add
hlt
int3
inc
xchg
inc
sub
(bad)
aas
add
int
or
aas
add
(bad)
out
push
outs
add
xchg
int3
out
into
dec
push
mov
das
add
or
add
mov
aas
or
mov
outs
or
mov
fild
or
add
pop
inc
stc
push
ret
outs
push
(bad)
pop
push
pop
pop
int3
iret
or
lahf
add
inc
ret
out
add
dec
rol
jle
add
jne
outs
add
jnp
out
fdivrp
add
fs
xchg
lahf
add
or
add
pop
scas
add
ret
outs
pop
push
dec
push
jmp
outs
add
cmps
iret
add
or
ds
add
add
and
iret
pop
xchg
aas
add
sub
xchg
jle
add
pop
push
into
pop
jmp
xchg
add
rcr
out
scas
add
enter
push
cs
test
pop
dec
clc
(bad)
dec
inc
push
add
out
pop
or
out
enter
push
add
xchg
enter
scas
add
pushf
lds
stc
test
das
or
add
into
add
int3
lahf
or
add
mov
push
pop
imul
into
outs
add
into
iret
add
pop
(bad)
aaa
add
ds
dec
inc
ret
jbe
add
dec
retf
data16
pop
jmp
mov
invlpg
enter
mov
pop
add
add
iret
mov
test
jle
pop
cdq
add
mov
stc
or
dec
fiadd
mov
leave
xlat
add
push
add
mov
daa
retf
ds
add
or
or
cmp
int
or
aam
or
pop
or
fiadd
or
sub
xlat
add
pop
add
shl
leave
iret
xlat
cmps
add
mov
lahf
add
or
xchg
add
int
dec
out
test
ror
xchg
test
aam
pop
inc
jge
leave
adc
or
ins
add
add
fld
stc
mov
(bad)
bswap
mov
pop
jle
add
mov
lea
imul
fsub
out
or
iret
divps
aas
or
int
leave
dec
(bad)
mov
out
or
add
(bad)
mov
sbb
mov
cmp
out
add
push
fldenv
test
jns
fidiv
sub
fst
or
push
imul
in
push
dec
xor
xchg
pop
pop
fld
cmp
dec
or
fdivr
jle
add
das
fdivr
or
fld
cs
sbb
fcom
inc
jl
mov
into
fadd
fxch
fst
push
sbb
imul
cld
push
jmp
push
pushf
add
jecxz
lahf
or
mov
outs
or
dec
add
xchg
shr
add
mov
out
scas
cld
add
sbb
pcmpeqd
(bad)
shl
push
mov
add
ror
jbe
pop
pop
mov
mov
or
sbb
test
into
cmp
cdq
push
fdivr
stc
pop
fstp
sbb
dec
es
fild
push
mov
outs
add
pushf
push
fldenv
addr16
push
sub
dec
ins
fcomp
push
jle
add
pop
push
cld
pop
fstp
int3
add
add
out
or
sub
sbb
fidivr
test
es
add
xchg
or
cmp
sub
stc
sub
clts
dec
pop
add
aam
pop
add
scas
add
(bad)
xlat
add
pop
imul
scas
add
leave
fcom
mov
add
cs
add
std
fcmovbe
add
pop
add
fiadd
mov
fmul
or
(bad)
aas
add
lahf
add
add
aas
add
adc
add
aas
add
out
mov
xlat
add
mov
pop
add
fisub
jbe
pop
mov
inc
or
mov
dec
pop
aad
or
out
add
es
pop
stc
dec
(bad)
add
fsub
or
jns
iret
or
pop
leave
fs
add
ins
fild
add
add
pop
fcmovnbe
add
push
frstor
or
das
add
pop
fidiv
cmp
fcmovu
add
aaa
fmul
add
jg
test
push
jg
leave
and
inc
or
lahf
add
or
xlat
fidivr
add
fisub
psadbw
push
sbb
xlat
jg
push
mov
imul
dec
add
hlt
xlat
out
or
add
fidiv
sbb
ror
dec
into
add
out
aad
or
push
add
add
add
sbb
ja
push
jle
jmp
mov
add
push
fcomp
push
mov
lar
fiadd
sub
aad
(bad)
dec
add
fldenv
push
sbb
ret
or
enter
dec
dec
add
hlt
rol
or
dec
add
add
aam
pop
into
fld
sub
fbstp
imul
or
cmp
cdq
lahf
rol
or
sbb
add
mov
das
push
push
or
jmp
es
add
mov
mov
or
ficomp
cmps
test
(bad)
push
out
add
jbe
add
jbe
add
dec
shl
pop
mov
fadd
or
mov
aas
or
mov
mov
dec
imul
or
cdq
add
adc
mov
push
jns
fstp
fmul
push
pop
push
jns
(bad)
lahf
bswap
mov
push
push
out
pop
jns
fisttp
ficomp
daa
or
push
imul
test
mov
sbb
rcl
or
(bad)
iret
add
aad
add
retf
fdivr
imul
js
cdq
(bad)
(bad)
add
fadd
push
js
sub
fld
or
pop
add
xchg
aad
cmovbe
stc
call
cmp
test
mov
neg
push
cmp
mov
imul
sar
pop
jbe
add
or
fnstsw
or
add
pop
fisubr
mov
out
add
dec
rcr
add
mov
jg
idiv
fnstcw
outs
add
mov
outs
push
scas
or
mov
push
fidivr
das
or
ror
pop
clc
add
add
cmp
leave
push
rcr
sub
(bad)
iret
pop
ficomp
add
pop
jbe
add
fdivr
or
sub
sti
add
ror
push
push
stos
push
jmp
push
imul
vmovdqu
leave
fmul
add
cmp
cmc
fisttp
cmps
jnp
imul
imul
jecxz
wbinvd
push
imul
mov
aas
add
push
leave
mov
out
(bad)
sbb
imul
sar
or
scas
rol
or
imul
push
rcl
sub
or
retf
add
inc
fadd
imul
pop
test
or
pop
push
cmp
or
xchg
cmp
add
adc
scas
or
sbb
mov
(bad)
mov
or
imul
ss
add
sub
sub
fcos
add
sti
add
sar
or
shl
push
push
dec
push
jmp
es
cs
pop
cdq
rcl
add
aad
push
dec
cmp
mov
aam
or
mov
push
push
stos
add
loope
pop
add
cli
add
in
fsub
add
fld
push
out
cli
add
(bad)
or
cmp
mov
scas
or
mov
pop
add
fiadd
mov
stos
add
mov
call
mov
add
push
aam
or
add
fisubr
push
fiadd
fld
out
or
fcmovnb
push
mov
add
rol
inc
fiadd
mov
sahf
call
out
call
mov
rcr
add
push
sub
(bad)
or
aad
add
jp
jmp
dec
or
stc
xor
das
push
push
retf
cmp
das
cmovle
jns
aad
push
push
sbb
mov
(bad)
inc
add
(bad)
xor
dec
add
mov
cmp
xlat
scas
add
and
addr16
lock
pop
out
in
or
(bad)
add
jne
mov
rcr
add
pop
sbb
rcr
or
inc
add
sahf
(bad)
dec
cmc
add
or
add
dec
add
aad
sub
add
mov
in
dec
cmps
fld
movzx
add
scas
xlat
xlat
or
push
fild
add
fldenv
ss
add
inc
shl
push
mov
fnstcw
imul
imul
add
pop
inc
add
push
push
add
fild
pop
(bad)
aad
leave
sbb
inc
mov
lahf
or
movs
add
mov
xlat
mov
jns
(bad)
(bad)
add
push
out
add
fisttp
jle
add
xlat
fiadd
not
fst
aas
or
and
jns
ficom
outs
aam
mov
fcmovne
or
inc
add
outs
add
jmp
fisub
cmp
fsub
mov
(bad)
(bad)
ss
add
xchg
sar
or
adc
dec
call
dec
test
lahf
pop
out
test
sub
and
jns
shl
pop
mov
hlt
add
inc
mov
pop
scas
shr
push
fs
push
xlat
(bad)
clts
in
jns
aad
add
add
fimul
stc
dec
fdiv
add
inc
add
jb
aaa
or
add
into
mov
sub
fild
mov
add
push
mov
ss
jle
fild
or
(bad)
pop
or
fistp
or
mov
stc
xor
wbinvd
push
add
jns
aad
add
add
push
les
sub
xlat
push
or
add
xlat
rcr
or
out
stc
fst
daa
psadbw
add
pop
push
inc
add
or
pop
add
fild
mov
add
fisttp
add
pop
pop
mov
aam
add
push
add
jmp
fiadd
or
pop
or
fisttp
mov
fcomip
or
add
shl
dec
lea
mov
sar
sub
xlat
iret
or
or
(bad)
lea
jns
(bad)
inc
out
sub
pop
pop
mov
push
cmp
lods
add
xlat
xlat
add
add
add
mov
scas
push
sahf
lods
push
fnstenv
mov
out
pop
imul
pop
push
dec
std
push
or
pop
push
or
pop
add
sbb
lahf
or
int
leave
inc
(bad)
pop
or
jge
mov
cmps
or
lods
add
add
in
add
mov
xlat
pop
add
push
test
(bad)
int
or
int
or
fcmovnb
add
or
syscall
(bad)
lods
add
or
scas
add
jge
cmp
fsubrp
or
cmp
push
or
cmp
addr16
sub
ja
scas
or
or
(bad)
add
lods
push
test
scas
or
cdq
rcl
push
lods
add
iret
fild
jmp
neg
add
sahf
jl
pop
out
test
call
ins
push
stc
xchg
(bad)
mov
data16
add
or
add
ficomp
add
in
add
mov
mov
fnstcw
pushf
add
dec
cmp
sbb
fadd
or
add
pop
shr
(bad)
dec
add
shr
pmaxsw
add
add
je
iret
or
mov
cmps
push
jbe
add
arpl
fild
push
cmp
fldcw
ja
es
add
adc
cmps
add
ficom
test
xchg
ins
push
sub
fcmovbe
pop
ds
pop
xlat
ja
xchg
add
pushf
add
and
cmps
add
dec
add
or
xlat
rcr
or
aas
add
(bad)
stc
(bad)
fld
pop
dec
aas
add
retf
fsubr
f2xm1
(bad)
cmps
add
pop
add
fld
add
dec
add
outs
aas
pop
leave
out
ror
cmp
add
push
das
add
pop
jbe
add
mov
iret
or
fild
leave
mov
inc
sub
add
test
dec
push
es
add
push
xlat
pop
or
outs
push
mov
ss
add
jbe
add
dec
dec
add
je
movd
sub
aaa
pop
cs
add
pop
outs
push
sbb
pmaxub
mov
rcr
pop
lahf
add
pop
shl
(bad)
inc
add
pop
add
push
(bad)
or
xor
pop
pop
leave
cmp
fild
push
lahf
add
rcl
or
das
pop
pop
sub
daa
pop
jbe
add
xlat
xlat
pop
or
out
add
(bad)
xchg
add
rcr
or
add
enter
ds
pop
mov
xchg
outs
pop
fyl2xp1
fisub
(bad)
sahf
add
mov
aam
or
sar
sbb
sahf
add
(bad)
inc
pop
mov
fadd
pop
pop
ds
cdq
mov
mov
pop
movs
fist
cmp
inc
jns
aad
pop
imul
add
add
add
push
sahf
add
dec
(bad)
push
neg
pop
or
int
stc
fcom
jg
(bad)
sbb
iret
push
lods
add
push
sub
aas
or
fld
push
jbe
add
xchg
aad
pop
jbe
pop
stc
lahf
fild
or
sbb
test
mov
xlat
add
popf
add
mov
outs
push
cs
add
mov
in
add
dec
fld
stc
stos
aam
or
sbb
iret
or
or
add
jmp
outs
lods
add
push
push
sbb
pop
or
add
dec
std
add
shl
fldcw
xchg
sbb
pop
or
(bad)
jns
shl
or
or
pop
scas
dec
add
fmul
add
cmp
scas
add
add
test
pop
retf
add
add
cmc
sar
pop
jle
add
add
dec
add
rcr
or
out
fisttp
or
pop
pop
stc
nop
aam
push
ds
push
fstp
mov
mov
(bad)
ins
push
(bad)
int3
add
fimul
pop
in
add
add
movs
fmul
add
sub
dec
test
ja
cs
add
push
aad
or
pop
(bad)
add
jl
stc
inc
sar
add
int3
add
dec
ror
fnstcw
or
rcl
jle
add
psadbw
push
frstor
or
xlat
daa
or
fild
cdq
or
dec
data16
add
pop
ss
push
cdq
cmp
mov
pop
and
pop
or
cs
add
pop
add
pop
cdq
(bad)
scas
add
fisttp
pop
pop
iret
add
int3
(bad)
out
push
outs
add
scas
lahf
add
add
iret
add
in
fbstp
or
lsl
xchg
ror
cmovbe
das
or
add
sbb
add
(bad)
pop
cs
add
mov
inc
pop
push
pop
add
ss
add
movs
(bad)
mov
out
das
pop
imul
fmul
add
pop
add
pop
leave
inc
fisubr
xchg
das
add
(bad)
fild
jle
add
or
fnstsw
cmp
test
push
mov
jns
xlat
push
add
aad
push
jbe
add
scas
add
or
verw
xor
mov
jbe
add
cmp
scas
or
(bad)
jns
ror
stc
rcr
daa
or
fcmovnbe
fild
sahf
out
add
push
jle
push
jmp
out
add
hlt
fbld
pop
mov
mov
cs
add
xlat
mov
cmps
push
push
(bad)
aad
add
push
add
push
push
jle
pop
cwde
aad
or
xchg
out
(bad)
cs
mov
push
push
mov
leave
mov
(bad)
push
jns
aam
setbe
add
or
add
stos
fistp
add
pop
test
out
mov
xchg
xchg
mov
sub
pop
or
pop
add
pop
jle
add
jae
xlat
psadbw
ja
xchg
pop
pop
imul
add
(bad)
push
jle
add
adc
mov
imul
scas
add
pop
aam
or
into
add
pand
scas
fiadd
cmp
mov
test
push
push
add
sub
pop
add
aad
push
inc
or
fst
dec
add
fbstp
or
into
(bad)
xchg
or
fst
or
xlat
xchg
in
scas
push
sahf
mov
test
pop
jmp
(bad)
or
dec
add
or
imul
(bad)
sub
cdq
(bad)
ror
dec
mov
addr16
xchg
jmp
mov
mov
imul
or
leave
add
push
fdivr
or
cmp
sbb
aaa
or
add
shl
imul
add
xlat
daa
pop
out
add
add
add
fimul
stc
ins
fsubr
push
(bad)
pop
add
ss
fld
fild
mov
fld
add
cmp
add
and
pop
or
add
mov
pop
leave
rcl
iret
add
shr
or
(bad)
add
cwde
push
stc
enter
outs
cmp
pop
neg
pop
or
(bad)
xlat
daa
add
add
loop
xchg
or
xlat
addr16
cwde
add
xchg
xlat
cmps
add
dec
add
(bad)
fbld
out
sbb
or
cwde
add
mov
or
pop
movs
fcomp
divps
push
pop
lods
xlat
xchg
mov
add
push
xlat
pop
add
pop
fst
push
fadd
stc
inc
shl
or
dec
fld
or
sub
jb
aaa
push
into
sub
jns
xlat
or
pop
pop
sbb
pop
sahf
clc
add
push
cmp
adc
outs
or
cmp
add
mov
out
out
add
xor
iret
pop
imul
push
sbb
fistp
imul
fild
pop
rcl
iret
or
imul
(bad)
fisttp
mov
pop
add
iret
sar
jns
fidiv
or
xlat
das
add
jmp
pop
loope
mov
xchg
jnp
sub
pop
test
sbb
sub
fild
ds
add
push
pop
add
pop
fld
add
sbb
out
push
jnp
dec
add
outs
add
ror
add
fild
stc
ss
inc
add
fild
add
fcmovb
add
sti
add
add
rcr
outs
or
cli
add
(bad)
dec
or
sar
(bad)
sub
mov
ficomp
pop
mov
sub
fdivr
push
data16
add
call
lahf
add
jecxz
pop
add
cmp
test
cmps
or
test
(bad)
rol
or
xlat
pop
or
push
mov
mov
imul
dec
add
shl
jns
(bad)
or
std
add
xchg
add
into
int
cdq
loop
inc
push
(bad)
jge
mov
sub
test
xchg
pop
add
mov
lahf
or
fimul
cmp
add
mov
sub
inc
add
mov
xlat
push
(bad)
dec
add
or
add
add
in
add
ja
wbinvd
jbe
add
jle
out
pop
int
mov
push
std
add
push
pop
or
pop
add
add
pop
fldenv
mov
lahf
or
or
outs
add
xor
dec
pop
mov
ss
pop
add
add
fincstp
or
jl
mov
fsubr
push
fadd
pop
(bad)
mov
scas
pushf
push
dec
(bad)
or
sbb
pop
leave
aad
or
pop
sub
fbstp
or
clc
aad
or
out
scas
or
add
(bad)
cld
pop
sub
add
push
ds
stc
adc
add
pushf
push
leave
(bad)
rcl
leave
mov
inc
or
mov
cld
pop
cdq
movs
fiadd
(bad)
lods
add
lods
(bad)
mov
leave
push
fisubr
idiv
add
int3
push
leave
inc
shl
setle
add
add
jae
inc
or
fdivp
push
inc
cmp
fldenv
outs
pop
scas
mov
jg
cs
or
(bad)
(bad)
push
pushf
add
sbb
iret
or
jl
or
frstor
or
push
(bad)
fidivr
inc
cld
add
xor
pop
add
jl
sub
(bad)
pop
outs
sub
leave
and
daa
or
fist
push
(bad)
pop
add
rcl
xlat
add
mov
femms
(bad)
verw
(bad)
add
out
add
fucomi
add
iret
add
sahf
fild
sbb
fcmovb
add
fild
sub
fistp
push
dec
add
in
fisttp
add
nop
rol
pop
dec
syscall
pop
cdq
(bad)
jmp
(bad)
iret
push
test
ds
add
add
fadd
push
mov
scas
or
add
add
add
push
shl
leave
inc
ror
(bad)
pop
add
fcmovnbe
or
pop
pop
leave
jbe
pop
add
fcomip
or
addr16
add
jg
or
add
outs
add
add
iret
add
sbb
xchg
xchg
inc
add
aaa
add
fild
test
sahf
mov
daa
push
outs
jg
cmp
aad
push
(bad)
iret
pop
dec
and
out
xchg
jg
jmp
out
add
add
ror
add
into
add
add
add
leave
fdiv
pop
add
ss
add
clc
fadd
dec
push
add
or
fild
push
sahf
add
add
lahf
sar
or
push
add
sbb
push
stc
(bad)
aad
pop
jbe
add
fiadd
stc
mov
out
add
add
scas
(bad)
or
fisubr
xchg
push
add
inc
mov
jns
fisub
cmp
mov
jns
fisttp
push
cmps
jle
leave
jg
iret
push
push
add
push
inc
cdq
imul
push
leave
pop
fcmovnbe
push
push
inc
imul
outs
add
xlat
fild
out
push
or
fnstsw
pop
push
into
pop
fnstenv
rcl
sbb
(bad)
add
outs
add
fadd
or
add
sub
ja
(bad)
cmp
sbb
aam
add
fadd
push
push
stc
add
or
jns
test
jbe
add
neg
(bad)
cmp
test
push
fld
mov
mov
push
jmp
xchg
mov
fild
test
xchg
or
add
or
mov
pop
add
ficom
sbb
add
mov
sbb
mov
fidivr
outs
add
fist
or
push
test
fisubr
jmp
xchg
add
push
cmp
add
pop
jmp
out
test
inc
pop
fimul
(bad)
or
or
jns
ror
cmp
xchg
or
dec
pop
jns
fisub
add
jmp
iret
add
ficom
jle
add
or
cmp
stc
fisubr
sub
fsub
add
add
fnsave
inc
sub
pop
(bad)
ficom
(bad)
dec
add
iret
ror
test
cmps
js
mov
fstp
es
add
(bad)
or
mov
push
mov
jns
ficom
scas
test
cmp
enter
sar
or
mov
dec
es
add
mov
dec
add
enter
rcr
cs
fild
lods
aad
or
push
aam
push
push
sub
or
dec
add
add
add
mov
pop
push
xchg
dec
or
add
(bad)
fisubr
sbb
daa
add
clc
add
mov
ror
scas
sub
leave
add
das
add
add
or
push
add
ss
or
add
fisubr
sbb
test
fldcw
ficomp
dec
mov
(bad)
fild
push
jmp
(bad)
shl
or
fild
fld
shl
or
mov
inc
add
hlt
(bad)
pcmpeqd
add
clc
xlat
ja
cmps
mov
jmp
push
stos
add
jmp
daa
add
push
jmp
fild
stc
fwait
rcl
add
fisttp
jmp
push
retf
add
mov
inc
pop
pop
sbb
cdq
mov
cmp
or
stos
add
pop
sti
add
or
dec
pop
ficomp
or
dec
add
inc
aam
or
dec
fimul
push
imul
dec
sbb
mov
imul
data16
or
aad
or
sti
add
adc
ja
into
sub
jns
fcom
mov
add
test
(bad)
jnp
cdq
xor
jg
outs
pop
add
cmp
or
cdq
and
xlat
pop
mov
aad
add
push
(bad)
fsub
fidivr
add
fcomp
test
ds
xchg
mov
daa
add
fiadd
push
cmps
retf
out
mov
jmp
mov
jle
add
popf
ror
fld
sub
push
xchg
daa
add
mov
fiadd
mov
mov
daa
add
or
mov
imul
add
es
add
rol
mov
pop
pop
(bad)
jmp
test
fnstcw
pop
or
add
movzx
add
push
out
add
add
adc
test
sbb
xchg
add
mov
add
or
or
aam
add
dec
add
fst
push
xchg
or
fcom
add
sbb
dec
and
cmps
paddd
mov
(bad)
or
add
push
in
dec
fcmovu
aas
movzx
pop
or
fbld
add
movs
add
or
add
repnz
jmp
push
xchg
add
in
dec
add
push
add
jmp
test
add
fcomip
add
xchg
mov
cmp
inc
add
mov
cmps
add
ror
cmp
add
test
inc
add
gs
mov
xchg
add
out
add
xor
inc
add
movs
add
(bad)
adc
add
stc
js
dec
or
pusha
fidiv
push
lds
or
dec
push
gs
adc
dec
add
and
mov
pop
fidivr
jbe
add
fisub
stc
aaa
shl
not
add
fisttp
sahf
lds
fldenv
fisubr
push
aad
sub
shl
xchg
add
rcl
aas
add
add
(bad)
lahf
or
adc
stc
ret
push
out
les
mov
(bad)
in
leave
hlt
xlat
jg
push
fs
or
fidiv
push
mov
fild
add
out
rcr
dec
xchg
fisubr
add
fistp
scas
test
stc
xchg
fild
jle
add
mov
xchg
or
and
jns
fimul
cmp
pop
sbb
pop
jmp
out
inc
pop
jmp
pop
mov
dec
pop
aad
add
push
mov
inc
pcmpgtd
or
fnsave
add
adc
jns
fsubr
or
add
popa
rcr
cmp
add
add
dec
adc
daa
add
and
dec
sbb
movs
add
add
out
push
scas
test
leave
push
shl
or
ss
add
push
pop
cmp
cmps
or
inc
add
fstp
or
sub
outs
add
sar
add
add
(bad)
push
push
xchg
mov
(bad)
cmps
push
or
aad
or
clc
frstor
imul
out
sbb
ficom
dec
addr16
fst
add
mov
fbstp
(bad)
ja
cdq
mov
pop
or
push
add
mov
test
pop
(bad)
pop
jns
shl
xchg
mov
pop
fisubr
mov
push
add
inc
pop
leave
dec
ficom
xlat
add
je
fild
dec
push
push
test
jbe
add
add
mov
pop
ins
xlat
pop
or
xchg
add
adc
inc
pop
push
test
or
mov
xchg
inc
add
fcmovnu
push
mov
fistp
(bad)
out
or
fimul
or
aam
add
rcl
jg
out
add
or
(bad)
(bad)
xchg
push
xchg
add
retf
add
neg
dec
cli
xlat
xchg
or
push
dec
out
fild
fidiv
add
jmp
push
add
shl
push
add
shl
push
push
pop
or
add
xchg
add
push
xchg
jns
shr
cmps
mov
pop
push
add
inc
mov
push
rcl
add
push
add
fsub
or
add
inc
(bad)
or
fstp
push
mov
je
xchg
pop
(bad)
inc
add
(bad)
push
add
shl
scas
ss
jns
shl
not
cmp
fadd
add
xchg
or
fstp
or
cmps
add
add
es
or
pop
or
ror
push
pop
push
push
cmp
fistp
add
mov
and
test
fld
stc
aad
out
pop
add
or
ret
or
into
(bad)
iret
push
out
add
neg
jg
test
or
fistp
sub
rcl
outs
and
stc
jmp
imul
cmc
pop
or
aam
push
push
jge
sbb
frstor
xchg
push
pop
out
add
pop
lods
add
scas
lea
push
es
add
or
pop
mov
cmps
cmp
mov
fwait
aad
or
pop
push
test
es
add
mov
mov
pop
or
rol
add
cmp
addr16
mov
xchg
dec
dec
add
xlat
aas
or
jg
mov
(bad)
fld
jns
(bad)
addr16
adc
pop
or
sbb
aaa
push
out
mov
pop
pop
push
pop
add
sar
push
outs
popf
add
xor
mov
inc
push
(bad)
mov
out
or
add
add
jl
mov
rcr
(bad)
aad
pop
sahf
cmp
leave
rcl
push
cmps
dec
add
cs
or
xlat
xlat
or
add
xchg
or
ror
push
out
add
out
fst
add
or
cmp
pushf
add
rcl
or
mov
cmps
fisubr
cmp
mov
jmp
dec
int3
add
inc
fmul
xchg
dec
aad
add
fldcw
stc
jg
or
or
xlat
push
out
pop
sbb
out
fsubrp
pop
or
rcr
cmps
dec
pop
mov
out
add
mov
ror
jmp
(bad)
cld
add
cmp
sbb
leave
shl
test
into
mov
out
add
add
shr
add
pop
add
ret
shl
sub
rcr
or
ficomp
add
pop
jmp
pop
stc
out
mov
sbb
rol
stc
xchg
aam
(bad)
inc
imul
aad
add
add
mov
xchg
aas
add
mov
xlat
or
mov
dec
add
or
test
fisttp
pop
pop
pop
sub
xchg
or
inc
cdq
pop
rcl
add
out
add
fiadd
or
out
push
mov
pop
jmp
push
outs
add
fst
sub
test
push
lahf
or
scas
pop
jns
fsubr
jle
add
sbb
pop
pop
into
iret
add
add
or
test
push
pop
add
xor
pop
add
cmp
outs
add
daa
ror
jle
(bad)
or
rcl
or
out
add
or
inc
ret
rcr
add
ds
mov
ss
push
stc
(bad)
fst
imul
out
add
fimul
outs
into
add
xchg
frstor
(bad)
cs
call
test
(bad)
sahf
add
mov
aaa
or
sahf
add
setle
add
fbstp
ss
add
add
add
rol
cmovle
add
push
rcr
push
outs
add
pop
rcr
or
sahf
add
inc
fistp
stc
dec
xlat
aaa
push
push
out
pop
mov
scas
nop
push
mov
ds
add
aad
or
inc
jns
ror
or
add
or
push
pop
test
push
outs
add
fnstsw
cs
add
push
aam
or
cs
sub
shl
mov
rol
push
sahf
push
test
sahf
out
add
(bad)
or
cdq
xlat
rcl
(bad)
mov
push
sahf
mov
daa
add
add
(bad)
pop
or
mov
pop
or
leave
add
pop
idiv
push
or
fst
or
pop
stc
jmp
out
add
add
xchg
aad
or
or
test
ss
xchg
push
leave
add
mov
inc
add
jns
cdq
mov
daa
add
jns
cdq
mov
jmp
fild
lods
sar
or
mov
mov
pop
pop
mov
add
inc
aam
or
dec
fld
(bad)
cmp
jo
fisttp
push
jmp
xlat
add
test
aaa
or
add
add
adc
push
movsx
pop
add
test
pop
push
jbe
add
aad
add
stc
push
or
fild
sub
test
inc
mov
sysret
fadd
stc
(bad)
fsubr
push
out
enter
fidiv
pop
(bad)
fistp
dec
leave
fidiv
imul
cwde
add
add
fcomp
add
xchg
fcomp
or
cwde
add
mov
add
scas
cwde
push
(bad)
mov
push
add
rol
or
add
cmps
ficom
jns
xlat
mov
fimul
test
pop
aam
add
inc
fadd
pop
xchg
test
mov
xchg
or
or
dec
add
es
test
inc
mov
mov
scas
js
mov
pop
add
sbb
inc
or
add
pop
fld
push
mov
mov
fmul
sub
sub
fdiv
sbb
fist
into
call
iret
or
add
pop
out
sub
cmp
shl
sahf
pop
push
pop
fcmovu
jg
outs
sti
push
pop
vpxor
pop
mov
mov
fidivr
add
repz
cdq
std
fistp
add
sub
cdq
out
inc
imul
jmp
scas
or
nop
fcom
push
inc
imul
fwait
xlat
aaa
add
add
adc
add
mov
lahf
push
push
fwait
pop
cmp
sbb
leave
mov
retf
add
sahf
fwait
add
(bad)
add
push
(bad)
pop
pop
push
mov
pop
add
dec
add
jle
add
dec
fstp
xchg
fnstenv
pop
add
aad
add
retf
add
add
outs
rcr
or
ficomp
or
dec
add
(bad)
jmp
outs
pop
add
push
fwait
add
xor
mov
mov
fldcw
mov
aad
or
rcr
dec
aad
mov
push
fiadd
test
idiv
push
or
mov
das
or
call
call
pop
add
mov
fxam
fst
fldlg2
(bad)
push
or
dec
add
xchg
push
test
ficomp
add
xchg
fild
push
mov
daa
pop
jbe
push
mov
push
imul
xlat
outs
add
stos
pop
cmp
fiadd
push
(bad)
outs
or
push
dec
pop
aam
push
into
retf
inc
aad
or
rol
movsx
add
je
pop
mov
test
mov
pop
sub
pop
or
fiadd
or
call
out
push
imul
push
leave
pop
fidiv
pop
neg
mov
xlat
out
xchg
retf
ss
or
add
(bad)
jmp
push
retf
sub
out
push
cs
add
xlat
shl
sbb
shl
or
adc
xchg
or
add
int3
rcl
add
inc
add
not
mov
xchg
(bad)
push
lds
sbb
aad
add
mov
sub
ficomp
add
xor
scas
add
push
pop
sbb
add
xchg
push
push
xchg
add
or
push
or
xor
test
cmps
xlat
test
stos
shl
or
add
push
aad
add
xlat
dec
push
jle
push
stc
inc
fst
add
test
imul
add
add
add
mov
add
popa
fidiv
or
cmc
add
outs
fsub
add
(bad)
mov
or
rcl
xchg
mov
(bad)
aam
or
add
fnstenv
nop
pop
or
shr
or
xchg
add
(bad)
cmps
push
inc
je
sbb
fstp
stc
(bad)
(bad)
pop
or
add
iret
fidivr
scas
push
add
ds
pop
std
rcr
add
xchg
pop
pop
loope
iret
add
add
cmp
ror
or
push
add
(bad)
pop
test
inc
dec
xchg
add
fsub
sbb
les
imul
fstp
ds
test
mov
push
rcl
mov
inc
push
mov
mov
push
outs
xor
sbb
push
push
push
push
add
jb
or
mov
fild
in
stc
pusha
rcl
push
ficom
ins
fistp
cmp
jg
push
les
mov
mov
add
push
adc
dec
or
push
push
mov
add
xor
inc
push
fisub
cmp
dec
push
out
hlt
add
daa
rcl
or
aam
stc
sub
scas
add
pop
add
rcl
xchg
or
pop
add
push
dec
xchg
add
push
addr16
or
aad
or
icebp
fnstenv
pop
sti
fadd
cdq
jecxz
mov
mov
fmul
dec
xchg
shr
scas
pop
add
es
add
adc
add
daa
add
(bad)
fsubp
add
ja
pop
mov
aaa
or
xchg
dec
mov
inc
push
stc
cmps
(bad)
add
mov
imul
fst
or
add
xlat
add
inc
fist
mov
dec
or
jb
out
push
xchg
add
mov
or
ins
fucomip
or
cmps
add
push
sar
pop
push
sar
add
xlat
add
push
ror
add
push
fdivr
add
xor
(bad)
pop
pop
cmp
pop
pop
data16
push
mov
fld
jbe
add
(bad)
add
mov
rcr
iret
push
dec
push
add
aam
add
fst
fsubp
add
add
(bad)
pop
add
push
add
(bad)
fild
or
test
out
fisttp
(bad)
cmps
add
call
push
add
nop
add
cdq
fidivr
or
xchg
mov
leave
(bad)
fstp
mov
out
fnstcw
xchg
cmps
frstor
(bad)
jbe
cmp
ss
mov
add
cmps
add
(bad)
out
stc
inc
(bad)
add
add
dec
fidivr
add
add
fisttp
push
(bad)
(bad)
add
jnp
pop
out
push
pop
jmp
dec
jbe
mov
mov
pop
push
fist
mov
fcmovnu
add
ss
fld
aaa
push
push
test
fld
stc
xor
lahf
pop
pop
out
or
fstp
or
fisub
cmp
aad
or
add
outs
push
pop
mov
(bad)
pop
add
jno
pop
ret
or
(bad)
addr16
add
movd
push
test
push
inc
push
mov
frstor
fst
add
mov
not
xchg
rol
dec
mov
fisttp
scas
add
or
add
pop
mul
push
cmp
xor
cdq
stos
aam
add
push
add
push
fisttp
imul
add
inc
xlat
inc
push
add
xchg
add
add
jg
addr16
add
or
xchg
add
fidivr
jmp
push
add
sbb
shl
xchg
add
fisub
cs
add
or
pop
or
ror
push
mov
pop
add
loope
mov
rcl
(bad)
adc
or
pop
pop
leave
(bad)
or
add
rol
dec
loopne
out
add
add
out
aam
or
xor
sbb
add
mov
add
sbb
or
adc
jmp
xchg
add
mov
pop
or
xlat
xchg
data16
pop
mov
rol
rcl
add
push
fdivr
push
data16
pop
pop
fcomp
sahf
mov
scas
or
lock
dec
shl
pop
sahf
rol
dec
jae
pop
add
aad
add
add
fmul
dec
imul
or
rol
(bad)
jg
pop
rol
push
and
jns
rol
add
mov
xchg
outs
mov
mov
jle
add
cmp
out
or
mov
pop
or
sub
inc
add
push
rol
cmp
aam
pop
push
jecxz
or
fucomip
add
neg
aas
or
fmul
cs
add
in
dec
jle
add
call
jecxz
leave
xchg
aam
add
fwait
rcl
inc
jae
test
inc
add
(bad)
ror
add
rol
leave
mov
or
cmp
add
mov
add
cdq
test
push
pop
pop
push
xlat
xchg
push
out
pop
leave
pop
fiadd
pop
(bad)
repz
inc
aam
push
push
ret
add
dec
shr
or
ret
add
rol
jle
fst
test
not
aaa
or
xchg
push
cmp
fadd
add
add
cdq
sbb
xchg
(bad)
xchg
push
cmp
fistp
imul
jae
sbb
fidivr
add
inc
add
(bad)
push
mov
(bad)
add
ret
add
add
aam
daa
or
ret
fstp
pop
push
loop
cdq
(bad)
shl
push
fidiv
mov
xor
jmp
outs
xor
cdq
cld
fsubr
paddd
scas
add
ret
call
rol
or
adc
or
add
out
bound
mov
inc
add
mov
mov
test
mul
sub
scas
push
xchg
jb
stc
pop
fild
push
jle
pop
or
outs
or
repnz
ficom
(bad)
mov
lahf
pop
ficom
(bad)
xchg
xchg
pop
cmps
loop
imul
add
or
xchg
push
fstp
fadd
mov
xlat
xlat
or
add
faddp
push
push
rol
sub
fistp
(bad)
rol
cmp
rol
jns
fidivr
inc
rol
sub
fmul
add
int
or
ins
push
cdq
fmul
inc
add
add
ret
rcl
push
in
add
ds
add
icebp
retf
push
jge
mov
enter
sub
dec
or
retf
push
cmp
out
(bad)
in
push
mov
cmps
std
add
or
push
mov
add
mov
pop
or
into
aaa
add
pop
add
push
(bad)
pop
add
push
popf
push
dec
pop
les
or
fld
add
pop
pop
or
pop
add
in
add
jbe
(bad)
add
jl
xlat
or
arpl
scas
or
outs
rol
pop
add
adc
inc
or
popf
add
int3
dec
cs
scas
add
bswap
addr16
data16
mov
jle
pop
test
(bad)
or
cmps
add
lea
imul
lods
add
fcmovne
xchg
mov
(bad)
retf
jle
add
retf
add
dec
push
add
cld
add
out
or
stc
jmp
mov
stc
xchg
(bad)
mov
or
cmp
mov
sahf
pushf
push
or
mov
sbb
mov
mov
int3
add
mov
or
cmp
sub
mov
mov
pop
enter
pushf
add
inc
enter
sub
or
mov
jle
add
or
lds
mov
add
leave
pop
add
in
add
adc
invd
(bad)
int3
add
sbb
int3
pop
pop
add
out
pop
pop
cld
add
or
wbinvd
sahf
lods
add
idiv
jns
retf
pop
push
or
mov
ret
mov
ret
out
scas
add
out
pop
sbb
rol
inc
cmp
leave
iret
or
ret
scas
push
into
(bad)
fxam
enter
outs
add
jmp
iret
add
nop
ret
sahf
out
add
retf
iret
push
dec
jg
dec
add
or
push
cmp
outs
pop
or
outs
add
(bad)
outs
add
mov
das
push
sbb
add
xchg
iret
push
cdq
inc
into
mov
push
outs
add
pop
out
add
add
das
add
jp
scas
add
out
add
or
fild
leave
imul
add
inc
cmp
int
or
sbb
lsl
or
out
mov
les
add
out
pop
stc
cmp
pop
add
mov
inc
cmps
pop
pop
or
rol
ds
add
aam
dec
pop
push
out
add
fadd
cmps
cmovbe
dec
leave
rcl
push
pop
push
sbb
enter
sahf
pop
test
push
jle
jmp
push
mov
or
add
xchg
shl
jle
add
add
(bad)
aaa
or
add
pop
lahf
or
add
add
mov
pop
add
mov
dec
add
ret
push
scas
add
push
les
mov
idiv
cdq
inc
leave
out
or
outs
add
dec
(bad)
aas
or
scas
add
ja
test
ret
addr16
out
push
push
imul
leave
push
push
or
push
add
ret
mov
sahf
outs
add
sbb
pop
push
mov
leave
add
xchg
push
shl
dec
add
or
iret
xchg
or
push
push
dec
das
(bad)
jg
push
jns
test
dec
or
push
into
mov
mov
jle
add
cmc
ret
into
pop
add
ret
push
leave
add
es
add
or
mov
sahf
imul
or
sbb
jns
shl
ss
daa
add
leave
add
mov
mov
sbb
lods
rol
push
(bad)
jg
imul
int3
out
out
leave
add
inc
retf
push
imul
push
cmp
add
add
jge
out
out
add
add
(bad)
addr16
pop
rcr
sbb
stc
add
add
out
outs
jmp
aas
push
or
or
xchg
pop
cmps
test
mov
jbe
add
psadbw
push
leave
sub
sub
sbb
into
out
sahf
enter
int
add
into
das
add
dec
add
cmc
les
push
mov
test
loope
xlat
or
jmp
cwde
push
cmp
js
jns
enter
cwde
pop
pop
or
or
mov
out
mov
(bad)
lahf
or
add
pop
sub
stc
mov
cwde
add
test
das
or
push
(bad)
wbinvd
(bad)
mov
xlat
or
clc
add
leave
out
jbe
add
dec
leave
daa
or
je
pop
call
xchg
or
test
imul
add
add
(bad)
push
or
sbb
fisttp
push
enter
mov
or
daa
or
mov
dec
into
enter
retf
mov
ror
test
imul
rol
push
cmps
fwait
add
int
outs
push
xchg
add
pop
ds
add
cli
(bad)
lahf
add
pop
add
jecxz
fild
jbe
add
add
push
pop
xchg
retf
pop
add
pop
add
les
sub
jnp
(bad)
dec
add
jle
iret
pop
add
jnp
imul
leave
jg
xchg
add
push
rcl
cmps
sti
pop
leave
pop
les
jmp
push
mov
dec
(bad)
dec
or
ja
push
add
sti
add
jp
lsl
cmp
imul
add
xchg
dec
pop
cmp
enter
or
cdq
pop
(bad)
pop
add
fild
fld
(bad)
dec
add
pop
add
push
iret
push
add
or
mov
jg
neg
add
ds
lahf
pop
sub
leave
and
out
(bad)
imul
sub
das
push
mov
add
ret
mov
push
imul
or
or
shl
enter
data16
add
icebp
int
pop
outs
jmp
into
mov
inc
pop
dec
fiadd
add
add
xchg
retf
mov
jle
push
sbb
pop
add
ds
cdq
mov
xchg
es
mov
call
dec
add
movs
(bad)
cmps
push
es
add
stos
retf
cmps
or
sbb
leave
push
int
add
sbb
imul
add
inc
(bad)
das
or
dec
pop
cdq
dec
iret
xlat
or
ret
push
pop
push
sbb
pop
add
retf
arpl
scas
add
iret
addr16
fiadd
dec
pop
les
cdq
sbb
call
(bad)
call
data16
stc
xor
(bad)
movd
dec
push
push
jp
leave
es
xchg
xchg
add
rol
mov
fdivp
add
push
mul
addr16
leave
shl
inc
push
jmp
test
or
ret
pop
or
in
leave
invd
push
in
leave
xchg
leave
(bad)
or
cwde
(bad)
xchg
or
pop
test
jbe
add
les
out
xor
pop
push
es
fild
sahf
add
outs
or
ret
daa
add
push
retf
es
jmp
dec
mov
jmp
jle
add
dec
ret
xlat
or
aad
imul
add
jns
xchg
outs
and
pop
add
aad
mov
mov
iret
push
xchg
movs
add
sbb
pop
or
add
add
inc
pop
leave
or
jne
mov
leave
pop
ucomiss
mov
in
or
int
femms
add
push
add
enter
adc
cdq
ret
(bad)
inc
movs
add
int3
lds
imul
hlt
add
es
jns
ret
jbe
add
iret
pop
add
aam
stc
xchg
enter
je
mov
add
xchg
pop
add
add
leave
mov
inc
pop
push
hlt
add
or
mov
hlt
pop
cmp
add
(bad)
les
cdq
push
ror
scas
and
test
xchg
in
cdq
inc
(bad)
(bad)
or
dec
shl
(bad)
aam
imul
push
test
xchg
or
mov
stc
outs
enter
inc
pop
mov
push
add
leave
out
jle
add
add
cmps
add
int3
das
or
xchg
add
or
add
cmp
ja
xchg
add
daa
les
or
test
das
shl
xchg
push
cmp
ret
scas
add
fcmove
outs
or
vpxor
addr16
test
cmps
out
imul
out
jmp
sahf
xchg
push
jns
retf
jle
push
sbb
into
pop
push
out
mov
mov
test
(bad)
mov
mov
fiadd
add
ret
jle
add
mov
ja
or
pop
pop
imul
ret
inc
mov
imul
add
(bad)
inc
push
mov
cs
pop
dec
jae
out
mov
int
add
(bad)
rcr
cmps
pop
sub
daa
push
(bad)
addr16
sbb
cmps
push
jle
add
add
out
test
mov
iret
pop
pop
not
add
xor
xlat
add
cmp
test
(bad)
ja
sub
leave
iret
or
rol
xchg
outs
inc
add
fmul
inc
mov
add
data16
int
jg
jbe
add
or
push
pop
cdq
std
int3
dec
outs
xchg
mov
ret
scas
test
xchg
(bad)
outs
or
out
jns
retf
(bad)
ss
add
mov
push
push
cmps
inc
add
les
pop
push
cmps
add
mov
add
iret
scas
push
out
test
stos
leave
daa
pop
dec
inc
add
push
(bad)
das
add
data16
pop
into
pop
jle
add
inc
(bad)
out
pop
add
cs
cmp
lahf
add
(bad)
push
or
das
or
(bad)
add
addr16
ds
add
adc
jbe
mov
test
add
add
or
ja
mov
int
push
xchg
xchg
add
ss
add
and
xlat
add
push
cdq
cs
xchg
push
push
push
(bad)
(bad)
data16
dec
fadd
aas
push
push
icebp
add
ror
or
loope
stc
leave
shr
lock
mov
out
xor
cmp
ret
push
inc
add
push
sahf
xchg
add
xchg
(bad)
test
iret
pop
or
push
leave
or
or
push
sub
xor
mov
inc
or
rol
movs
int
add
adc
jmp
push
add
into
mov
leave
pop
retf
xchg
xchg
add
or
dec
enter
loope
cmp
(bad)
or
inc
add
into
popa
add
push
jle
add
lds
mov
add
ucomiss
add
or
(bad)
out
or
xchg
add
or
pop
add
ss
aaa
push
jbe
add
cmp
xlat
or
rol
jmp
push
push
push
fldcw
retf
mul
pop
rol
aas
or
nop
add
fcmovnb
iret
add
(bad)
iret
or
xor
leave
iret
lds
sahf
nop
push
imul
inc
push
sbb
rcr
out
mov
aas
add
int
add
ret
sahf
mov
leave
pushf
leave
cmps
or
add
or
jo
imul
enter
adc
jmp
mov
cmps
ret
push
xor
push
push
rol
push
retf
xlat
add
inc
add
push
xor
leave
inc
ret
push
push
mov
add
dec
int
add
add
jo
pop
(bad)
lock
js
mov
(bad)
dec
mov
(bad)
aas
add
add
cmp
sar
inc
add
sbb
nop
push
cdq
add
pop
or
and
pop
or
xlat
or
mov
mov
stc
cmp
push
add
and
or
(bad)
(bad)
nop
jmp
mov
add
ror
addr16
repz
dec
fmul
inc
or
ret
pop
jmp
mov
test
xchg
adc
pop
test
push
mov
xchg
add
into
repz
jmp
dec
push
xchg
imul
enter
inc
push
jmp
cs
cdq
mov
prefetch
push
leave
mov
xlat
add
(bad)
push
adc
sub
push
push
pop
test
mov
cdq
pop
ret
out
ds
inc
int
or
push
pop
dec
(bad)
fild
ret
add
into
cmps
add
add
jns
mov
test
adc
outs
iret
iret
or
add
add
add
dec
sbb
pop
push
add
add
add
or
ret
cs
add
xor
pop
add
cmp
iret
pop
jle
add
and
test
les
pop
push
loop
imul
mov
pop
pop
test
or
ret
retf
retf
scas
ret
hlt
int3
pop
out
add
dec
push
pop
jns
rcr
mov
fild
jbe
add
or
add
jbe
add
test
fisttp
mov
das
add
inc
add
data16
mov
into
add
pop
cmps
rol
or
ret
push
shl
pop
int3
pop
inc
retf
pop
loop
dec
dec
lds
leave
jo
lahf
shufps
mov
pop
push
out
push
test
push
xor
cdq
ins
shr
bound
push
inc
mov
ret
push
xor
or
into
test
or
pop
xor
pop
add
xor
jns
(bad)
xchg
repnz
into
inc
add
shl
xlat
inc
ficomp
lsl
hlt
dec
add
add
or
pop
cmp
test
std
sti
pop
add
loope
iret
or
pop
fldz
icebp
das
or
lods
add
imul
push
push
int
sub
sbb
dec
pop
lea
pop
(bad)
cld
mov
jns
imul
push
ins
add
mov
sbb
test
stos
lock
push
jbe
add
push
cs
add
pop
cld
out
or
jge
leave
inc
cmc
(bad)
into
int
mov
mov
hlt
xchg
mov
fild
fs
mov
add
push
idiv
dec
pop
test
push
lea
sub
cld
(bad)
jbe
push
stc
add
popf
add
or
lahf
or
add
xor
mov
cmp
(bad)
or
and
sub
mov
pop
(bad)
repz
pop
cld
add
fdivr
mov
shl
or
enter
neg
or
add
stc
stc
jg
(bad)
ins
pop
sub
hlt
aas
setle
or
or
mov
lods
add
sahf
mov
pop
or
(bad)
repnz
or
lods
add
mov
das
pop
push
jl
jns
icebp
pop
or
mov
or
or
jl
cmp
inc
bswap
cld
add
inc
mov
pop
add
pop
add
dec
icebp
pop
add
int3
add
add
jp
ja
jle
push
dec
addr16
aaa
or
outs
clc
xchg
add
int3
add
cmps
pop
push
cdq
sbb
out
ds
cmps
or
or
dec
dec
in
pop
leave
ss
pop
add
jl
imul
stc
mov
pop
sub
aas
push
stc
aam
cmps
pop
push
das
pop
cmp
repz
pop
pop
pop
sbb
(bad)
push
or
div
daa
or
add
loop
xlat
or
dec
push
leave
out
cli
pop
mov
std
iret
or
outs
add
or
cmp
or
scas
add
add
mov
mov
cdq
mov
pop
add
movs
(bad)
jg
mov
add
test
iret
add
push
cmc
xlat
add
pop
mov
pop
pop
stc
inc
(bad)
pop
add
fild
mov
pop
push
sahf
pop
add
add
scas
add
cli
pop
add
cli
test
ins
(bad)
aas
add
das
add
hlt
pop
or
pop
stc
sbb
pop
push
pop
pop
or
add
or
addr16
xor
jg
fnstcw
pop
or
stc
mov
mov
push
add
push
add
repnz
or
fdiv
aas
or
push
add
sar
pop
push
out
add
iret
not
push
dec
add
or
cs
dec
push
mov
imul
fiadd
sub
div
sub
dec
add
cwde
push
push
inc
outs
add
cmp
add
mov
pop
push
push
mov
dec
pcmpgtd
pop
dec
mov
mov
jg
(bad)
sahf
push
dec
lods
call
add
scas
pop
cmp
iret
paddd
sub
xchg
out
add
(bad)
outs
add
dec
push
or
add
std
mov
dec
jns
outs
add
std
mov
imul
add
adc
prefetch
sahf
pop
stc
pop
repnz
add
add
push
hlt
das
push
(bad)
inc
cmp
std
jg
xchg
add
jmp
sbb
stc
outs
or
fiadd
push
pop
scas
pop
jns
std
fild
shl
ud2
jbe
pop
pop
fdivrp
fild
mov
push
dec
shl
pop
pop
mov
iret
or
idiv
aas
or
pop
add
push
outs
(bad)
fld
add
sbb
jmp
mov
xchg
cmc
clts
sahf
cdq
add
icebp
scas
or
pop
add
xor
pop
outs
pop
add
or
cmp
pop
mov
clts
(bad)
fld
add
fld
or
add
lock
push
(bad)
stc
add
std
pop
pop
ds
add
mov
add
push
push
dec
add
dec
std
out
out
fadd
or
ret
dec
std
add
(bad)
pop
push
sbb
(bad)
or
or
jg
pop
lea
cmp
sar
or
sub
lahf
or
std
add
stc
(bad)
xchg
jbe
add
or
pop
add
jmp
cmp
mov
fstp
std
add
adc
push
push
pop
push
mov
ss
jns
fadd
add
add
or
popf
add
fisttp
push
lea
leave
scas
fist
or
push
ficom
sub
ja
data16
mov
fisttp
outs
int
jns
fld
add
pop
sbb
out
or
sub
lahf
push
outs
in
push
cmp
or
lods
pop
mov
or
adc
addr16
std
add
fistp
push
sbb
add
lahf
add
add
or
lea
or
shr
dec
cmp
pop
add
ss
add
sub
int3
add
fnstenv
(bad)
fist
push
mov
shl
lods
push
or
faddp
setle
or
(bad)
fadd
or
(bad)
(bad)
or
int3
add
out
shl
push
in
add
fld
mov
cdq
(bad)
push
pop
mov
(bad)
sub
sbb
pushf
add
jbe
push
sbb
fadd
mov
jl
sub
jl
cmp
inc
push
dec
add
fsubrp
push
sbb
or
dec
fld
stmxcsr
or
dec
push
leave
jle
xchg
data16
push
pushf
pop
stc
imul
add
adc
aas
add
mov
xchg
or
add
out
or
lods
add
jle
add
or
cmp
pop
or
int3
add
and
addr16
cs
add
aas
add
add
add
(bad)
test
ret
add
add
shl
dec
repnz
es
push
jmp
sahf
pop
add
add
jmp
pop
add
xchg
sar
test
(bad)
outs
add
xchg
pop
add
add
pop
outs
add
mov
(bad)
or
frstor
data16
mov
out
jg
sbb
lahf
add
push
sar
or
aas
pop
mov
movsx
add
xlat
aaa
add
mov
xchg
add
inc
sub
das
setle
mov
(bad)
pop
mov
xchg
add
rcl
cmp
sysret
jns
aad
or
frstor
dec
fild
jmp
mov
aad
or
fsub
es
add
or
ds
fcom
aas
add
(bad)
aam
add
out
add
int3
shr
mov
rcr
add
mov
push
or
shl
push
mov
addr16
add
xchg
rol
or
frstor
mov
out
add
mov
out
jbe
add
push
scas
pop
jns
fsub
fldenv
into
pop
jmp
into
outs
add
fcom
add
outs
add
pop
aam
push
(bad)
out
push
dec
inc
fiadd
or
add
dec
shl
mov
out
push
add
jp
(bad)
add
fidivr
(bad)
or
push
add
or
xlat
test
fisttp
(bad)
shr
add
xor
push
add
scas
push
dec
cmp
pop
or
add
and
mov
push
into
add
fisub
mov
add
rcl
iret
add
add
fcmovbe
outs
or
add
(bad)
fld
pop
into
shl
or
stc
push
imul
test
cmps
push
out
pop
add
(bad)
jns
mov
shr
or
xchg
fldcw
or
fwait
ror
sub
add
(bad)
sub
fnstenv
add
shl
cs
addr16
stos
fcos
clts
or
push
ficomp
scas
dec
add
pop
fnstenv
fld
dec
push
cs
add
dec
rol
or
ja
jg
push
fld
cmp
pop
push
push
or
arpl
out
push
dec
add
push
ja
cmps
or
dec
adc
pop
or
rol
(bad)
mov
pop
ss
aaa
add
xor
mov
jns
rol
fldenv
fldenv
add
fld
mov
pop
push
push
pop
add
aad
outs
add
fmul
add
dec
push
cmp
(bad)
pop
pop
fsubrp
add
sbb
pop
repnz
lahf
add
(bad)
aas
add
or
add
mov
iret
add
cwde
add
xchg
fisubr
movd
add
add
sbb
add
mov
mov
aaa
or
clc
push
mov
pop
enter
fisub
leave
movs
aam
or
rcl
sahf
sub
or
das
or
pop
fimul
cdq
inc
aam
or
add
dec
fisubr
cdq
jae
(bad)
or
add
add
cwde
add
popa
fst
jns
xlat
pop
pop
push
clc
push
fst
aam
add
add
pop
fisub
add
clc
add
add
test
(bad)
(bad)
jg
out
add
fstp
pop
fidivr
test
push
fadd
or
fnstsw
leave
sub
cmp
imul
imul
(bad)
mov
cdq
(bad)
fistp
cmp
(bad)
pop
add
jnp
imul
jnp
or
ficomp
pop
sub
stc
loope
mov
pop
out
fcomp
or
mov
xlat
add
cmp
cwde
fadd
cmps
imul
test
inc
ucomiss
add
mov
out
jle
add
out
sub
mov
sub
mov
sub
sub
jmp
mov
or
push
jmp
(bad)
mov
pop
add
push
test
(bad)
jmp
fnstenv
daa
or
add
rol
fldenv
ja
out
pop
push
mov
mov
ror
mov
fild
mov
add
add
cmp
leave
or
sub
test
push
fild
jmp
into
stos
add
(bad)
push
cmovbe
pop
leave
sub
test
(bad)
sar
jmp
fisttp
push
cmp
mov
fst
or
call
ss
pop
test
or
sub
fdiv
mov
add
out
xlat
add
pop
push
sbb
rcl
mov
test
or
adc
pmaxub
jg
push
sbb
leave
mov
fisttp
mov
jns
ror
push
mov
pop
add
aad
add
cmp
jns
xlat
aas
pop
out
pop
push
cdq
pop
fcom
test
sbb
imul
add
jno
aas
bswap
push
pop
jle
lahf
or
shr
push
cli
add
push
data16
mov
out
fiadd
sbb
(bad)
ficomp
cmp
fsub
add
push
sbb
aaa
or
aaa
aad
push
push
sbb
cdq
ds
bswap
retf
and
dec
pop
mov
ficom
mov
out
push
(bad)
fdivr
sbb
xlat
addr16
cs
leave
into
sar
jmp
cmps
movs
add
stc
fidivr
(bad)
adc
outs
or
(bad)
cmps
add
aad
jns
xlat
pop
push
(bad)
xchg
add
jbe
pop
cmp
aad
imul
fcmovnu
pop
(bad)
adc
pop
add
aad
jmp
cmps
aad
jmp
mov
add
ds
add
push
push
add
or
add
inc
adc
out
or
test
pop
(bad)
and
scas
add
adc
outs
cmovbe
iret
or
add
fidiv
(bad)
mov
stc
add
add
mov
(bad)
movs
add
ficom
add
in
cmp
push
add
fld
ss
add
das
(bad)
add
rcr
inc
add
movs
add
push
movs
add
(bad)
fld
stc
retf
push
jbe
add
repz
cmps
mov
pop
std
fnsave
(bad)
hlt
add
out
fild
xchg
add
or
aam
(bad)
and
dec
xchg
fisub
cmp
aam
cdq
sbb
or
test
jmp
jle
add
mov
iret
or
add
add
fistp
data16
sbb
add
or
aad
or
add
pop
cmps
inc
add
dec
xlat
pop
add
fstp
add
fs
pop
jnp
jg
dec
adc
sub
pop
shufps
xchg
les
stc
adc
fisttp
sbb
aaa
or
les
pop
fcom
stc
or
pop
push
xchg
push
add
aam
add
xor
mov
ficomp
sub
les
jns
shl
push
sahf
addr16
(bad)
(bad)
push
add
daa
add
fcomp
aas
or
(bad)
ficomp
or
aam
or
aam
divps
xchg
(bad)
out
jns
aad
add
add
in
xlat
mov
cs
mov
xchg
jns
fnstcw
or
xlat
push
fld
ja
or
test
or
shr
xchg
pop
mov
xchg
pop
dec
test
aaa
add
xchg
mov
xchg
(bad)
pop
add
or
rol
stc
dec
fmul
push
es
add
shl
sahf
mov
add
ja
fldenv
xlat
or
xchg
push
fldcw
fild
ja
sub
fild
leave
sbb
addr16
xchg
add
cmps
push
outs
xchg
imul
cmps
push
leave
ss
add
addr16
imul
addr16
and
inc
pop
scas
xchg
sub
iret
or
(bad)
daa
add
add
fcmovu
aas
add
mov
jns
rol
add
push
stc
retf
aad
or
repnz
imul
(bad)
add
in
scas
add
inc
add
mov
fld
fisub
push
jmp
scas
data16
adc
or
add
mov
fisttp
fiadd
das
add
mov
out
leave
movs
(bad)
xlat
add
add
test
xchg
add
fistp
or
push
push
(bad)
pop
mov
inc
ss
jmp
xchg
pop
je
pop
add
push
add
jnp
pop
or
mov
stc
arpl
push
or
outs
(bad)
xchg
push
add
or
sbb
pop
push
ss
add
fisttp
sahf
es
or
(bad)
mov
es
aas
shr
imul
fisttp
or
add
add
fcmovnbe
out
add
mov
xchg
pop
push
xor
leave
retf
shr
or
rol
jns
fisubr
or
mov
mov
(bad)
or
add
push
add
dec
xchg
fsubr
push
loope
or
add
jns
aad
add
rcl
sub
add
mov
add
dec
mov
mov
aaa
movzx
add
ds
add
or
jno
sbb
pop
add
add
sahf
and
sbb
aaa
or
add
stc
popa
fcmovnb
add
add
cmp
aad
bswap
add
or
shl
pop
push
push
add
xor
fldenv
aad
add
fcmove
add
rcl
inc
(bad)
out
add
(bad)
dec
add
int3
aad
or
lock
lock
stc
(bad)
fsub
add
rol
loope
pop
or
nop
add
cmps
xor
xchg
fucomp
or
adc
pushf
xlat
iret
add
mov
fld
xor
add
ffree
push
inc
and
leave
mov
mov
cmp
rol
scas
fnstenv
or
nop
add
push
ror
cdq
pop
shr
add
xlat
inc
data16
jno
xlat
add
rol
add
jo
pop
pusha
aam
push
push
jo
cdq
adc
inc
rol
pop
fistp
ficom
imul
lock
cmp
add
imul
add
sub
dec
or
add
fsubp
add
add
add
fcomp
pop
pop
repz
test
mov
inc
aam
add
je
xchg
or
xlat
push
add
jecxz
mov
xchg
xchg
add
push
xor
or
fstp
or
rol
mov
xchg
sbb
(bad)
add
bound
sbb
sar
mov
xchg
adc
mov
push
mov
sbb
push
add
mov
cmps
or
repnz
or
inc
add
cmps
rcr
add
fisubr
push
push
add
push
fxch
push
xchg
add
sahf
xor
sbb
xlat
or
xchg
push
mov
(bad)
adc
mov
or
shr
sub
dec
push
push
loop
mov
out
or
xchg
add
adc
aas
add
add
pop
fld
dec
inc
add
add
addr16
(bad)
dec
push
and
or
add
ds
or
push
pop
leave
daa
fiadd
cdq
sub
popf
add
(bad)
int3
outs
or
retf
mov
xchg
sub
jg
push
sbb
fild
xchg
jg
ds
add
iret
pop
or
shl
out
retf
scas
pop
inc
cmp
lmsw
int
mov
ins
add
or
add
mov
mov
ss
add
ret
lahf
add
mov
aas
add
movs
ret
sahf
dec
push
mov
push
in
add
push
leave
pop
push
in
add
pop
iret
invd
fmulp
add
inc
retf
daa
add
ins
pop
jns
into
wbinvd
sahf
pop
pop
test
ds
pop
or
int
fldenv
pop
push
fld
add
adc
lahf
add
int
leave
sbb
outs
add
add
les
stc
or
dec
(bad)
lea
pop
xor
dec
push
dec
cmp
lar
std
add
and
pop
add
add
iret
out
jle
add
(bad)
(bad)
pushf
add
clts
pushf
add
int3
retf
idiv
push
test
ds
add
cld
lds
mov
add
jecxz
iret
or
jmp
imul
mov
xchg
xchg
add
int3
add
int
pop
data16
pop
mov
mov
add
or
sub
lods
add
push
int
or
shr
jle
add
into
sub
sbb
lahf
add
add
test
ret
pop
or
fs
or
push
cdq
outs
retf
mov
into
pop
or
mov
add
sub
sbb
verr
retf
jbe
add
into
jg
(bad)
lods
add
cmp
inc
or
add
(bad)
mov
jmp
(bad)
lahf
add
add
add
faddp
aaa
or
sar
pop
pop
mov
push
mov
or
stc
inc
pop
add
add
loop
pop
or
aas
add
push
fild
or
pop
add
into
pop
add
test
xlat
or
add
add
retf
push
lahf
push
jns
(bad)
lahf
add
aas
add
data16
add
stos
ror
imul
fild
inc
das
add
(bad)
ds
pop
jns
into
pop
add
scas
push
cdq
dec
iret
xchg
or
out
add
jo
push
add
out
push
sub
xchg
outs
add
retf
inc
or
iret
pop
stc
push
out
(bad)
add
orps
sbb
inc
leave
add
cmps
or
or
scas
or
add
xor
push
or
add
cmp
mov
and
push
add
int
or
fld
or
pop
or
pop
add
fnstenv
add
pop
leave
call
mov
leave
push
fmul
or
rcl
aaa
or
(bad)
cmps
add
xor
aaa
push
into
and
mov
nop
fisubr
push
mov
aad
push
into
jbe
pop
lods
fcomp
or
mov
cmp
test
pop
xlat
mov
xchg
mov
mov
add
pop
fcomip
or
add
shr
dec
dec
fnsave
scas
add
imul
or
pop
or
push
mov
sahf
stos
add
cmp
fild
leave
and
test
mov
pop
add
or
fldenv
jns
fnstsw
pop
pop
cli
pop
pop
ins
aam
add
fldcw
push
dec
add
and
outs
movhps
daa
or
adc
iret
add
movs
add
cmc
fisubr
or
add
stc
fsubr
cs
aam
or
fimul
out
aam
dec
retf
fiadd
mov
not
(bad)
push
out
add
cli
shl
add
hlt
add
shl
or
add
fbld
outs
les
sbb
(bad)
or
pop
pop
or
fiadd
or
inc
jnp
dec
inc
fwait
xchg
dec
xchg
fwait
and
dec
inc
fwait
xchg
stos
push
sahf
adc
cli
sar
stos
ins
iret
add
cli
sar
fwait
dec
inc
fwait
xchg
push
sbb
das
cdq
dec
inc
fwait
xchg
dec
inc
fwait
xchg
dec
inc
fwait
cmc
adc
push
ds
sub
icebp
sub
pop
test
cs
mov
dec
inc
fwait
xchg
dec
dec
fwait
add
jns
push
and
sub
xchg
gs
xchg
dec
inc
add
aad
lahf
or
cli
fdivrp
test
popa
inc
dec
inc
xor
add
aas
pop
into
inc
or
dec
inc
fwait
xor
inc
sahf
dec
dec
fwait
xchg
dec
in
(bad)
sub
dec
dec
fwait
xor
dec
inc
add
dec
dec
fwait
xor
(bad)
rol
cdq
dec
inc
fwait
xchg
dec
inc
fwait
xchg
jmp
sahf
dec
dec
add
and
enter
fwait
xchg
dec
inc
fwait
xchg
fiadd
add
sub
add
dec
inc
fwait
xchg
dec
inc
fwait
xchg
sub
test
sar
and
cmc
pop
in
sub
dec
fld
repz
dec
inc
fwait
xchg
dec
dec
fwait
xchg
xchg
loop
cmc
sub
pushf
dec
inc
fwait
xchg
dec
dec
fwait
xchg
dec
xchg
cwde
xchg
and
push
popf
dec
inc
fwait
xchg
sub
(bad)
aas
mov
scas
clc
xor
or
inc
add
dec
inc
fwait
xchg
xchg
jne
add
dec
inc
fwait
xchg
dec
lods
fwait
xor
cli
rol
xchg
dec
inc
fwait
xchg
dec
inc
fwait
xchg
dec
inc
fwait
and
fsubp
xor
cwde
dec
inc
fwait
xchg
dec
inc
fwait
push
inc
cwde
xor
pop
loope
nop
dec
inc
add
dec
dec
fwait
inc
loop
cwde
xchg
dec
dec
fwait
xchg
shl
cwde
movs
jne
pop
xchg
dec
inc
fwait
xchg
dec
inc
fwait
push
cmp
popf
xor
dec
inc
fwait
xchg
dec
inc
fwait
xchg
dec
sbb
xchg
dec
inc
fwait
and
dec
inc
sub
out
adc
add
inc
adc
dec
fwait
inc
or
repz
dec
dec
fwait
mov
and
dec
dec
sti
xchg
dec
aam
test
jns
je
pop
xchg
dec
inc
fwait
xchg
dec
dec
fwait
adc
push
inc
dec
xchg
dec
inc
fwait
xchg
dec
fistp
xchg
dec
inc
fwait
xchg
dec
inc
fwait
xchg
dec
dec
fwait
add
mov
gs
or
adc
dec
dec
fwait
xchg
(bad)
cdq
jne
shl
mov
mov
out
fwait
dec
inc
fwait
xchg
dec
dec
fwait
xchg
call
xchg
dec
inc
fwait
xchg
mov
popf
xchg
dec
inc
and
dec
xchg
fwait
and
dec
inc
fwait
adc
dec
inc
fwait
xchg
dec
dec
fwait
inc
loop
lahf
xchg
dec
inc
fwait
xchg
dec
inc
fwait
xchg
dec
inc
fwait
adc
dec
dec
fwait
inc
loop
lahf
xchg
dec
inc
fwait
xchg
dec
inc
fwait
xchg
fisub
cwde
gs
add
popf
dec
inc
fwait
xchg
dec
inc
fwait
xchg
dec
popf
cwde
inc
(bad)
aam
lock
push
daa
aam
add
jo
lods
nop
dec
inc
add
dec
sbb
xchg
dec
dec
fwait
add
dec
inc
add
cli
shl
xchg
dec
inc
fwait
xchg
retf
xchg
inc
or
pop
cdq
dec
inc
fwait
xchg
dec
dec
fwait
xchg
leave
or
add
xchg
dec
inc
fwait
xchg
mov
popf
push
aas
adc
out
inc
dec
xchg
dec
inc
fwait
xchg
dec
xchg
fwait
lds
sub
dec
dec
fwait
xchg
cli
aad
add
dec
inc
sub
mov
popf
xchg
dec
inc
ret
xchg
dec
inc
fwait
xchg
dec
inc
fwait
xchg
inc
or
pop
cdq
dec
inc
fwait
xchg
push
cwde
aad
bound
push
fild
dec
cli
jno
xchg
dec
inc
fwait
xchg
dec
inc
fwait
in
inc
pop
xchg
dec
inc
fwait
xchg
dec
sbb
xchg
dec
inc
fwait
gs
pop
xchg
dec
dec
fwait
adc
cli
icebp
add
dec
inc
fwait
xor
push
xchg
dec
test
add
dec
fstp
dec
push
push
icebp
xor
dec
vpandn
dec
sub
mov
dec
inc
fwait
xchg
dec
rcr
call
rol
dec
inc
fwait
xchg
dec
inc
fwait
xchg
shl
mov
dec
inc
fwait
push
push
inc
push
mov
xchg
xchg
inc
dec
inc
stos
fwait
dec
inc
fwait
xchg
dec
inc
fwait
and
dec
inc
fwait
xchg
dec
dec
fwait
inc
aad
lahf
or
push
popf
sub
ror
cdq
dec
inc
fwait
xchg
dec
inc
fwait
xchg
mov
xchg
dec
inc
jecxz
dec
inc
fwait
xchg
dec
dec
fwait
add
(bad)
sar
xor
and
xchg
fwait
xchg
dec
inc
xor
dec
dec
fwait
push
retf
xchg
dec
inc
fwait
xchg
dec
inc
fwait
xchg
dec
inc
fwait
xor
dec
inc
fwait
xchg
dec
sbb
xchg
dec
dec
fwait
xchg
call
xchg
dec
sbb
xchg
call
xchg
dec
dec
fwait
add
xchg
push
stos
mov
cli
mov
rcr
xchg
sub
xchg
dec
inc
fwait
xchg
dec
inc
fwait
add
xchg
aad
push
(bad)
and
or
jg
or
popa
pushw
dec
inc
xor
dec
inc
fwait
test
sti
sahf
dec
inc
fwait
xchg
dec
inc
fwait
add
sub
inc
(bad)
jns
add
out
aas
fwait
dec
dec
fwait
xchg
sub
xchg
dec
dec
fwait
xchg
sbb
and
adc
jg
or
popa
pushw
dec
inc
xor
dec
inc
sti
sahf
dec
dec
fwait
xchg
sbb
and
xor
out
lods
clc
jns
add
fs
xchg
dec
inc
add
dec
inc
fwait
cmc
push
inc
fwait
xchg
dec
inc
fwait
xchg
dec
dec
fwait
cmc
jns
cwde
push
fs
xchg
dec
inc
add
push
inc
fwait
xchg
dec
inc
fwait
xchg
dec
inc
fwait
xchg
dec
iret
cdq
movs
iret
sar
push
cs
sti
jns
mov
imul
and
xchg
dec
inc
fwait
xchg
call
xchg
dec
int
add
dec
inc
add
dec
dec
fwait
inc
jmp
inc
add
inc
or
pop
cdq
dec
inc
fwait
xchg
dec
dec
fwait
xchg
xchg
test
cdq
dec
dec
fwait
xchg
dec
sbb
dec
cli
jno
xchg
dec
inc
fwait
xchg
dec
inc
fwait
xor
cmp
or
inc
and
inc
dec
xchg
dec
inc
fwait
xchg
dec
lds
jp
dec
push
push
cmp
adc
dec
inc
fwait
xchg
retf
inc
jmp
adc
mov
sbb
rcl
xchg
dec
inc
fwait
xchg
dec
inc
fwait
xchg
mov
pushf
xchg
dec
inc
jecxz
dec
sbb
aaa
xchg
dec
dec
fwait
xchg
dec
cmc
call
aad
or
inc
add
cli
xor
xchg
dec
dec
fwait
and
dec
inc
fwait
xchg
dec
dec
fwait
adc
dec
inc
add
idiv
sahf
xor
(bad)
rol
dec
inc
add
dec
dec
fwait
xor
(bad)
shl
cdq
dec
inc
add
dec
dec
fwait
xor
(bad)
rol
dec
inc
fwait
xchg
dec
dec
fwait
add
xchg
jg
cmp
std
add
rol
dec
inc
add
mov
daa
sub
mov
inc
add
xchg
lods
rol
xchg
dec
inc
add
dec
mov
add
xchg
dec
inc
add
idiv
sahf
cmc
icebp
hlt
data16
inc
xchg
(bad)
rol
xchg
dec
inc
fwait
xchg
push
cwde
movs
cmc
xchg
pop
popf
dec
inc
fwait
xchg
dec
dec
fwait
movs
cmc
mov
dec
and
cdq
push
xor
mov
jns
or
lahf
or
inc
or
dec
xchg
fwait
xchg
dec
inc
mov
dec
and
and
das
stc
and
sub
mov
sub
xor
inc
fwait
xchg
dec
aad
xor
lahf
mov
mov
rcl
pop
pop
dec
inc
add
dec
dec
fwait
xchg
xchg
popa
mov
xchg
dec
inc
fwait
xchg
dec
inc
fwait
add
jne
mov
pushf
dec
inc
fwait
xchg
call
xchg
dec
dec
fwait
push
jp
call
in
cdq
xor
je
pop
xchg
dec
inc
fwait
xchg
dec
inc
fwait
xchg
dec
xchg
fwait
gs
xor
xchg
dec
inc
fwait
xchg
dec
cwde
fwait
test
in
cmp
inc
jnp
dec
inc
fwait
xchg
dec
dec
fwait
inc
loop
cdq
xchg
dec
inc
fwait
xchg
dec
inc
fwait
and
dec
inc
fwait
xchg
dec
dec
fwait
inc
loop
cwde
in
ficomp
and
add
call
pushf
xchg
dec
inc
jecxz
dec
inc
fwait
xchg
dec
aad
xor
ds
xor
inc
imul
inc
fwait
and
dec
inc
stos
call
pushf
xchg
dec
inc
jecxz
dec
inc
fwait
xchg
dec
aad
xor
ds
xor
mov
call
fwait
xchg
dec
inc
cwde
jne
dec
es
cli
xor
xchg
dec
inc
fwait
xchg
mov
pushf
xchg
dec
inc
jecxz
dec
inc
fwait
xchg
dec
dec
fwait
add
(bad)
sar
jno
call
lahf
in
icebp
lods
fwait
dec
inc
jecxz
dec
dec
fwait
xchg
dec
popf
cwde
add
xor
inc
fwait
add
(bad)
xor
fwait
dec
inc
fwait
xchg
dec
inc
fwait
xor
dec
inc
sub
xor
dec
in
dec
inc
sub
dec
inc
fwait
xor
dec
inc
jmp
dec
dec
fwait
xor
into
out
fldpi
mov
add
mov
popf
xchg
dec
inc
and
dec
inc
fwait
inc
rcl
lahf
or
(bad)
inc
or
cli
rcr
xchg
dec
inc
fwait
xchg
dec
inc
fwait
movs
xor
inc
fwait
xchg
dec
fstp
inc
loop
add
xor
inc
fwait
xchg
dec
inc
fwait
xchg
dec
fstp
pop
jmp
xor
jmp
pushf
dec
inc
add
dec
sbb
xchg
dec
dec
fwait
in
rcr
xor
jle
inc
sub
add
or
inc
push
(bad)
mov
cmp
je
sbb
dec
inc
stos
call
pushf
add
dec
inc
fwait
xchg
dec
dec
fwait
inc
cli
adc
xchg
dec
inc
fwait
movs
xor
inc
fwait
xchg
dec
dec
fwait
push
cmp
cdq
xchg
dec
inc
fwait
xchg
dec
inc
fwait
cmc
fadd
popf
dec
inc
fwait
xchg
dec
inc
fwait
xchg
dec
sbb
xchg
retf
lds
inc
add
dec
inc
fwait
in
inc
pop
xchg
dec
inc
fwait
test
rcr
sbb
es
xor
ds
adc
xchg
dec
dec
fwait
xchg
dec
aad
xchg
lods
pop
push
pop
mov
fwait
xchg
dec
rcr
adc
mov
xchg
dec
dec
fwait
xchg
call
cwde
dec
inc
fwait
xchg
dec
dec
fwait
movs
hlt
xchg
dec
popf
dec
inc
fwait
xchg
dec
dec
fwait
xchg
mov
popf
inc
dec
inc
and
dec
dec
fwait
xchg
dec
dec
cdq
and
dec
inc
add
dec
(bad)
fwait
add
mov
fwait
dec
inc
fwait
xchg
ret
and
dec
inc
fwait
xchg
dec
inc
fwait
xor
test
push
xor
sahf
xchg
dec
inc
inc
xchg
dec
inc
fwait
xchg
dec
inc
fwait
push
mov
fwait
popf
dec
inc
fwait
xchg
dec
inc
fwait
xchg
enter
dec
inc
repz
dec
inc
sahf
lds
and
dec
inc
sti
xchg
dec
inc
fwait
xchg
dec
dec
fwait
xor
or
and
dec
inc
and
dec
xchg
fwait
xchg
dec
inc
xor
(bad)
inc
fwait
xchg
dec
inc
fwait
xor
xchg
inc
fist
dec
sbb
xchg
dec
inc
fwait
xchg
call
inc
ret
xchg
dec
dec
fwait
adc
pop
jg
push
repnz
cmps
xchg
dec
inc
and
dec
sbb
xchg
dec
dec
fwait
xchg
pop
in
and
out
fnstsw
pop
(bad)
shr
or
add
(bad)
cmps
cmp
jle
xor
scas
pop
out
not
pop
push
mov
fadd
sub
mov
xchg
jb
sti
sub
add
dec
inc
test
daa
add
ja
jmp
adc
inc
call
fsub
outs
stc
fbstp
mov
xor
ja
loope
daa
and
adc
movzx
fild
lods
repz
out
test
jmp
pop
xchg
loopne
ss
adc
sbb
leave
retf
jns
mov
(bad)
fwait
mov
clc
pop
or
xor
push
adc
dec
mov
lea
xchg
sub
mov
test
sar
xor
stos
inc
arpl
mov
fdivr
or
jbe
outs
fld
int
xor
mov
jbe
dec
fldenv
mov
inc
xchg
jae
cdq
sahf
jecxz
(bad)
mov
outs
jmp
jp
or
nop
xor
jae
add
stc
cmp
push
and
cmps
pusha
pop
pop
hlt
xchg
adc
mov
mov
leave
jmp
lock
les
lea
(bad)
mov
shr
push
aam
test
mov
(bad)
push
inc
fild
mov
dec
mov
pop
sbb
or
mov
and
mov
push
out
rol
mov
sti
lods
inc
mov
xor
arpl
xchg
imul
xor
bound
call
jecxz
dec
imul
dec
mov
mov
sub
pop
test
mov
jbe
adc
inc
sbb
mov
dec
dec
jp
out
scas
or
jecxz
in
out
aas
push
jl
mov
xor
cmps
or
add
and
std
cld
ja
out
xchg
dec
adc
jge
mov
or
sub
js
jne
jmp
xchg
xchg
cld
jge
je
mov
and
pushf
mov
rcr
js
mov
mov
or
sti
pop
cmp
jns
xchg
push
and
mov
call
and
cdq
inc
jl
push
add
daa
ds
xor
add
repz
mov
or
xchg
pop
jbe
dec
dec
es
cmp
ret
xchg
rcl
jb
xor
sub
imul
xor
xchg
dec
out
movs
scas
fnstenv
push
mov
pop
and
movs
pop
arpl
in
bound
mov
shl
or
inc
dec
mov
inc
retf
add
xchg
in
sub
adc
lds
movs
outs
cmp
ret
xchg
shl
cmp
dec
cld
jno
pop
sub
imul
xor
xchg
dec
out
in
fcom
popa
push
cmp
mov
movs
pop
arpl
in
bound
mov
retf
aam
inc
inc
mov
push
inc
retf
add
xchg
in
sub
adc
js
jns
jle
movs
outs
cmp
ret
xchg
rcl
cmp
js
xor
sub
imul
xor
xchg
inc
out
hlt
(bad)
fsub
jb
cli
push
and
movs
pop
arpl
in
bound
mov
enter
int3
inc
dec
mov
inc
retf
add
xchg
in
sub
adc
cld
ja
data16
movs
outs
cmp
ret
xchg
shl
cld
jne
or
cld
jno
pop
sub
imul
xor
xchg
inc
out
or
fsub
push
jo
jb
jp
and
movs
pop
arpl
in
bound
mov
into
out
cmp
(bad)
repz
retf
add
xchg
in
inc
xor
push
push
jo
xchg
lods
fs
movs
jg
xor
ret
xchg
shl
pop
jle
and
cld
jno
pop
and
arpl
shl
imul
dec
(bad)
and
(bad)
fsub
pop
dec
pop
jb
fiadd
and
movs
pop
arpl
in
bound
mov
enter
xchg
inc
dec
mov
hlt
lock
ret
xchg
inc
rcl
int
cmp
je
mov
jno
pop
xor
jae
shl
jnp
xchg
dec
out
in
sbb
nop
cwde
pop
push
cli
(bad)
and
movs
packsswb
in
bound
mov
inc
out
dec
sub
inc
or
jnp
or
mov
mov
xchg
std
inc
sub
rcl
jecxz
std
mov
fs
ret
xchg
inc
pop
aad
jae
shl
and
xor
jae
shl
jnp
xchg
inc
out
int3
push
sbb
nop
add
bound
and
movs
packsswb
in
bound
mov
inc
out
adc
push
or
mov
mov
xchg
std
inc
sub
aam
lock
pop
shr
fs
ret
xchg
inc
add
dec
xor
bnd
mov
jno
pop
xor
jae
shl
jnp
xchg
inc
out
mov
nop
rcr
cli
xlat
and
movs
packsswb
in
bound
mov
inc
out
push
rol
adc
add
xchg
std
inc
sub
xlat
push
xor
inc
out
stos
(bad)
movs
jmp
or
push
add
(bad)
dec
mov
xchg
dec
dec
xchg
pop
xor
shl
sbb
push
push
mov
pop
jecxz
and
mov
jne
int3
dec
sub
ds
sub
sar
push
(bad)
(bad)
fs
add
push
add
or
jle
fcom
push
pop
xor
shl
sbb
xchg
dec
push
push
cmp
and
pop
jecxz
and
mov
xor
mov
and
dec
sub
ds
sub
retf
cli
mov
xlat
aas
lods
ds
out
fs
add
push
add
add
xchg
dec
dec
xchg
push
pop
xor
shl
sbb
arpl
mov
sub
(bad)
xor
repz
pop
jb
fiadd
and
pavgw
mov
pop
xor
je
dec
dec
mov
push
(bad)
xor
add
rcr
out
outs
pop
movs
jg
aaa
mov
sbb
and
mov
adc
int3
cmps
mov
xor
shl
fldenv
jb
pop
push
and
pavgw
mov
pop
xor
sbb
mov
push
out
jno
shl
fwait
repz
repnz
dec
xor
add
adc
fadd
add
sahf
movs
pcmpgtb
in
jecxz
in
adc
xlat
sti
and
mov
dec
sub
(bad)
out
jno
shr
pop
mov
shl
pop
bound
movs
mul
jp
adc
add
inc
mov
nop
inc
dec
cmps
xchg
push
dec
xor
add
adc
fadd
cs
movs
pcmpgtb
in
jecxz
in
adc
shr
xor
adc
int3
dec
sub
(bad)
out
jno
shr
pop
jae
rcr
xchg
and
mul
jp
adc
or
xchg
inc
dec
es
push
dec
xor
add
adc
fmul
mov
pcmpgtb
in
jecxz
in
adc
mov
dec
sub
(bad)
out
jno
shr
pop
and
clc
pop
bound
movs
mul
jp
adc
add
nop
dec
dec
cmps
add
xor
add
adc
fadd
pop
out
push
movs
pcmpgtb
in
jecxz
in
adc
xlat
jmp
xor
adc
dec
sub
(bad)
out
jno
shr
pop
add
mov
test
push
test
and
and
aaa
mov
add
call
fcom
pusha
push
jle
fs
mov
rcl
aaa
data16
mov
jb
nop
xlat
push
(bad)
mov
xchg
adc
(bad)
je
mov
xchg
xor
imul
daa
adc
adc
inc
jmp
inc
jp
mov
fistp
stos
lock
frstor
sahf
cmp
adc
adc
adc
inc
jmp
test
mov
fdiv
mov
jbe
sbb
ss
jl
ins
sub
js
mov
je
(bad)
ss
mov
jp
cdq
in
mov
sbb
lea
fdiv
fwait
out
mov
fdiv
mov
fmul
mov
push
ret
aas
sti
xlat
fisttp
lods
jae
jle
out
out
lahf
jmp
push
aam
or
mov
push
dec
jl
jns
cld
bound
lea
or
sub
adc
mov
shl
xor
xchg
pop
repz
pop
pop
les
test
push
mov
xchg
xchg
neg
cmps
cwde
xchg
std
xchg
and
cwde
aam
scas
shl
stos
jae
fwait
sub
dec
and
mov
in
dec
dec
fild
jne
adc
push
mov
std
in
(bad)
je
xor
mov
xchg
xchg
call
add
stos
push
(bad)
stos
and
push
adc
cmp
stos
jo
out
sar
cmp
jnp
repz
inc
shr
jb
jmp
nop
or
adc
or
mov
adc
loopne
and
ret
jns
fist
jns
add
add
mov
add
mov
and
aaa
xor
scas
cwde
hlt
in
sahf
ror
shr
je
xchg
xchg
out
scas
loopne
add
rol
sbb
retf
mov
lds
add
add
push
or
bound
movs
ja
add
xchg
pop
push
or
push
add
bound
add
movs
push
hlt
jne
fldenv
outs
push
mov
lds
add
bound
add
mov
fbld
jne
aaa
ror
shr
lds
add
add
cdq
mov
sbb
push
gs
push
push
pop
xchg
pop
cli
jge
lds
add
mov
pop
cli
mov
shr
lds
add
outs
add
cli
gs
shr
lds
add
push
pop
xchg
pop
cli
cmp
add
pushf
add
mov
or
xor
xchg
shr
lds
add
fiadd
add
push
pop
(bad)
xchg
and
pop
mov
sbb
xor
pop
(bad)
(bad)
in
aaa
add
push
add
out
xchg
and
pop
mov
sbb
leave
fwait
pop
scas
sahf
clc
jne
mov
test
clc
int
pop
or
sub
test
lds
add
outs
add
test
jo
in
fdiv
popf
pusha
cmps
push
pop
lds
add
add
add
aam
sti
jne
js
call
pop
push
push
add
outs
add
test
hlt
mov
rcr
xor
or
push
add
push
add
outs
add
test
jg
mov
add
push
add
push
add
push
rol
add
int3
jne
cwde
add
push
add
push
add
push
rol
add
mov
ficomp
fcomp
jne
jp
in
int3
pop
pop
call
push
add
mov
mov
lds
pop
lds
add
out
xchg
and
pop
mov
and
leave
dec
cmps
or
fimul
mov
neg
mov
sub
arpl
or
pushf
pop
push
pop
lds
add
bound
add
ret
push
xor
int
mov
and
gs
and
fisub
sahf
pusha
cmps
movs
inc
neg
fwait
xor
dec
bound
push
gs
push
push
add
push
add
outs
add
push
pop
lds
add
bound
add
xor
in
jle
nop
pop
test
mov
lds
pop
lds
add
mov
mov
lds
pop
lds
popf
cmp
mov
push
mov
push
imul
in
call
fs
cld
gs
sub
fimul
(bad)
xlat
loopne
xor
shl
cmps
movs
inc
neg
fwait
xor
dec
bound
push
gs
push
push
add
push
add
outs
add
push
pop
lds
add
bound
add
xor
in
ficomp
cmp
push
mov
pop
cli
gs
push
add
or
aam
fnstenv
sub
mov
loopne
mov
(bad)
fldenv
cmps
or
or
ins
add
mov
mov
push
mov
pop
cdq
popa
aas
loopne
mov
or
gs
jl
bound
clc
gs
mov
push
xor
dec
cmps
pop
push
or
push
add
mov
mov
lds
pop
lds
test
jmp
cmps
or
add
push
add
push
add
fld
and
or
lds
add
bound
xchg
pop
neg
imul
cdq
mov
pop
loop
jmp
add
push
add
add
pop
add
push
mov
pop
cdq
popa
aas
loopne
mov
mov
btr
inc
bound
stc
gs
pop
or
loopne
xor
dec
cmps
pop
push
or
bound
aam
cdq
add
cmps
push
pop
lds
add
out
xchg
and
pop
(bad)
pop
repnz
test
cmps
cli
and
add
push
add
push
add
or
nop
shr
lds
add
bound
movs
ja
lods
arpl
push
add
stos
add
push
or
push
add
outs
add
push
pop
lds
add
fiadd
add
bound
add
loope
mov
lds
pop
(bad)
je
mov
or
cmps
or
add
addr16
(bad)
retf
push
hlt
stos
push
add
push
add
bound
add
add
push
add
push
test
pop
add
cmps
or
add
push
add
outs
add
push
pop
lds
add
imul
lods
and
jns
cmps
add
test
jne
lods
arpl
cli
fisttp
lds
add
ins
add
fldenv
cmps
push
fidiv
(bad)
push
pop
lds
add
fld
and
push
sbb
lds
add
push
xchg
xor
leave
sub
cdq
sbb
loope
xor
pop
pusha
das
cmps
add
xor
fs
shr
lds
add
add
inc
repnz
sbb
aaa
pop
dec
bound
push
gs
push
push
add
push
add
bound
mov
mov
cdq
or
push
add
or
adc
aam
retf
jne
fadd
aam
aam
call
ins
or
aam
or
lods
and
scas
mov
aam
lods
ja
or
push
add
push
xchg
xor
leave
sub
pushf
sbb
loope
xor
into
cmps
pop
push
or
push
add
bound
add
mov
call
sub
fs
push
pop
lds
idiv
and
test
cmps
pop
push
or
outs
add
pop
cdq
add
mov
add
das
cmps
or
add
push
add
ins
add
add
ins
idiv
cmps
pop
and
lds
add
outs
add
mov
add
push
or
add
push
or
push
add
imul
mov
push
add
push
add
outs
add
push
or
push
add
arpl
test
stc
and
sub
cmp
push
or
push
add
push
add
sbb
and
push
call
push
xor
scas
cmps
pop
push
or
push
add
add
or
pop
push
push
add
popa
add
test
pop
cs
cs
pop
push
or
push
add
push
add
out
mov
inc
jbe
neg
loop
popa
dec
fs
shr
lds
mov
push
add
push
add
in
xchg
icebp
cs
jns
inc
and
neg
inc
dec
fs
shr
lds
add
aam
aam
cmc
in
je
add
shl
mov
rcl
movs
retf
sbb
(bad)
or
gs
sbb
mov
pusha
sub
mov
fsubr
test
fwait
pushf
jbe
mov
push
stos
mov
push
dec
sti
in
test
push
mov
cmps
fcom
fscale
xor
test
movs
and
jle
mov
cmps
sbb
push
lods
sbb
(bad)
in
shl
sbb
fnstcw
xchg
push
dec
jno
push
fdivrp
inc
imul
mov
fsubr
dec
mov
inc
jno
stos
sbb
pop
jno
sub
movs
aam
mov
lea
sti
mov
dec
arpl
mov
xchg
and
jo
cdq
sti
cmp
jnp
pop
movs
inc
cmps
jae
stos
rcr
inc
xchg
xor
shr
ss
ret
or
or
or
ret
jl
stos
fcmovbe
mov
mov
xchg
int3
inc
stos
out
ret
xor
mov
js
or
inc
inc
imul
mov
fcomp
xchg
adc
xchg
and
retf
sub
add
push
es
inc
arpl
jg
imul
push
mov
push
or
xor
sub
ins
mov
js
jbe
je
test
outs
mov
cmp
imul
fdivr
nop
clc
or
fsub
test
and
jbe
inc
cdq
add
shr
lds
jns
scas
adc
mov
add
mov
jne
cdq
cs
mov
je
xchg
jns
sub
jmp
xchg
loop
mov
or
pop
push
pop
xlat
pop
dec
pop
xlat
ror
jecxz
adc
jo
cmp
cmp
test
sub
rcr
xlat
pop
dec
pop
ja
dec
pop
jae
or
leave
sbb
stos
pop
jae
sub
pop
pop
int3
ret
loop
push
jae
xor
mov
xchg
shl
pop
sub
or
out
xchg
loopne
mov
pop
jb
aam
mov
daa
adc
adc
sub
mov
jo
mov
inc
sub
fimul
lods
xchg
fidivr
loope
mov
sub
jbe
add
mov
inc
clc
inc
test
and
retf
popf
or
xor
(bad)
ins
mov
inc
mov
bound
sub
pop
and
and
lds
jbe
jmp
fdivr
fild
jno
retf
inc
(bad)
xor
lea
jbe
inc
xchg
inc
aad
pop
inc
aad
inc
cmps
and
fstp
cmp
xchg
jne
(bad)
rcr
aaa
inc
jmp
xchg
repz
mov
mov
push
lods
push
jbe
inc
jb
stos
in
ret
mov
push
movs
mov
jns
mov
jbe
xchg
xor
mov
push
pushf
ja
xchg
out
aaa
in
mov
rcl
test
retf
mov
push
fwait
int3
jbe
xchg
popa
inc
nop
and
cmp
mov
dec
add
fild
add
dec
(bad)
mov
mov
and
dec
xchg
xrelease
ja
mov
lock
and
dec
stos
push
xchg
xor
jbe
xchg
test
pop
int3
ret
imul
(bad)
jne
in
adc
mov
jge
add
pop
dec
xchg
mov
xchg
fcmovne
or
add
data16
loopne
lea
gs
mov
dec
popf
xor
or
retf
data16
cmp
push
outs
add
test
mov
test
jns
jno
xor
sub
js
ins
aad
adc
std
stc
fs
stc
fs
stc
stc
fs
stc
stc
fs
stc
stc
inc
popa
adc
icebp
stc
ins
inc
outs
ficomp
sub
enter
idiv
xchg
adc
fnstsw
mov
jne
or
adc
adc
dec
cmp
xchg
sti
leave
or
adc
fmul
adc
popf
add
xchg
push
retf
or
and
mov
gs
xor
fiadd
jmp
movs
pop
pop
sbb
sbb
inc
cmps
pop
pop
push
inc
imul
lahf
imul
sbb
imul
xchg
popf
leave
pop
and
imul
adc
les
lahf
imul
mov
stc
rol
imul
ins
les
pushf
adc
mov
stc
rol
imul
mov
jnp
pop
in
call
mov
(bad)
les
popf
stc
rol
imul
push
cdq
test
leave
inc
paddd
xor
or
pop
push
sbb
imul
sbb
retf
push
arpl
sub
rcl
sub
inc
add
pop
xchg
stos
pop
icebp
and
add
inc
(bad)
retf
lods
dec
jno
fwait
hlt
xchg
mov
jb
pop
ficom
xchg
fiadd
mov
mov
ja
ja
loope
daa
and
adc
ss
daa
fisttp
lods
rcr
jle
out
(bad)
pusha
xor
jbe
test
outs
push
outs
imul
retf
jnp
(bad)
fst
push
mov
ret
mov
sub
(bad)
sbb
ror
in
fmul
pop
mov
jns
(bad)
(bad)
jp
cld
jle
neg
xchg
cld
jbe
jnp
in
mov
sub
imul
xchg
mov
jle
jns
(bad)
(bad)
sar
push
mov
add
ins
mov
xchg
mov
movs
nop
cld
clc
mov
iret
jecxz
jns
outs
fldenv
daa
push
jnp
pop
les
test
xchg
mov
sbb
or
pop
movs
and
push
in
xor
pop
mov
lods
mov
rol
mov
pop
(bad)
stos
inc
lods
mov
rol
rcr
adc
xor
and
dec
pop
inc
xchg
adc
mov
sahf
shl
rcr
js
js
lods
jecxz
aad
dec
mov
(bad)
les
dec
mov
cmp
stc
into
test
jo
xchg
jnp
ins
lea
mov
jbe
jno
inc
jecxz
jb
and
cmp
cmp
xor
test
mov
rol
jbe
rcr
jbe
rcr
jbe
rcr
jbe
rcr
jbe
sar
jbe
rcr
es
xchg
fidiv
fcmovu
(bad)
push
and
imul
dec
inc
jmp
sbb
jne
out
ret
jecxz
inc
fucomp
mov
fld
and
dec
inc
jmp
sar
loope
pop
mov
pop
sub
jbe
jmp
push
dec
ins
out
dec
inc
jmp
inc
jp
dec
in
mov
jmp
inc
jp
fimul
std
out
jo
(bad)
and
dec
inc
jmp
ret
jecxz
dec
fucomp
mov
push
cmp
fldz
ret
jecxz
dec
fucomp
mov
or
out
jbe
sbb
push
fldz
xor
mov
out
mov
inc
call
js
adc
shl
xchg
inc
mov
mov
cwde
out
dec
inc
jmp
inc
dec
push
dec
jmp
dec
inc
dec
push
dec
jmp
dec
inc
jmp
jmp
dec
inc
jmp
jmp
dec
inc
jmp
shl
mov
out
mov
cmp
sahf
inc
jmp
pop
jmp
dec
inc
jmp
inc
sub
dec
test
mov
jmp
inc
push
fcom
adc
jle
sub
dec
jbe
xor
(bad)
dec
test
mov
jmp
inc
push
fcom
adc
jle
sub
xor
test
mov
retf
inc
jp
fisttp
rcr
fstp
dec
jo
mov
fidivr
mov
jmp
inc
retf
xchg
cmp
test
mov
jmp
push
jns
pusha
jle
sub
shr
jmp
sbb
icebp
je
dec
fucom
mov
jmp
cmp
outs
and
dec
in
in
dec
inc
jmp
and
jo
les
dec
inc
jmp
inc
mov
dec
outs
and
dec
in
in
dec
inc
jmp
inc
mov
cs
mov
sub
sub
fldl2e
jae
mov
dec
ins
out
dec
inc
jmp
jae
mov
dec
ins
out
dec
inc
jmp
jae
mov
dec
ins
out
inc
inc
sub
ds
jmp
inc
jmp
xor
pop
loope
movs
cmp
je
push
push
push
and
push
jg
lock
sub
test
jg
mov
cmp
sub
icebp
push
push
fwait
stc
or
daa
mov
mov
cmps
push
ja
jmp
adc
inc
call
fcmovne
mov
shl
lahf
inc
fcom
rcr
push
stos
and
loop
or
aam
dec
cmp
je
fwait
nop
jno
mov
xor
out
jge
xchg
lds
add
retf
(bad)
mov
fstp
mov
loopne
xlat
shl
lock
in
jle
xchg
push
hlt
lea
inc
pop
and
push
pop
push
mov
jns
sti
(bad)
mov
xchg
cmp
test
xchg
(bad)
in
add
xchg
sbb
pop
in
jno
test
jne
in
adc
or
or
cmp
loope
and
jnp
jns
mov
enter
arpl
fwait
sub
sub
or
add
pop
inc
jg
dec
xchg
test
mov
std
mov
and
jge
mov
push
movs
and
out
cmp
addr16
pop
pop
and
mov
(bad)
mov
mov
pop
in
dec
ds
push
xor
popa
dec
hlt
fisttp
repnz
rcr
ja
or
inc
dec
jb
arpl
inc
clc
or
pop
ret
ficom
jo
or
jb
and
jg
add
cmp
mov
and
adc
je
xchg
test
shl
enter
mov
pop
sub
jne
outs
sub
daa
mov
int
(bad)
fbstp
push
enter
cmp
lock
lock
jle
cmp
in
cmp
outs
fmul
sub
xchg
mov
pop
pusha
xchg
push
icebp
lock
lock
cld
adc
adc
ret
ins
fs
xchg
push
xchg
call
es
jmp
cmp
lock
jle
cmp
add
in
je
cmp
shl
cmc
lock
pop
icebp
sti
adc
(bad)
ds
stos
inc
movs
mov
ret
std
outs
xchg
jae
xchg
into
and
push
cmc
lock
pop
icebp
repz
into
adc
push
cmc
lock
pop
icebp
not
retf
cmp
sahf
retf
add
sub
into
xchg
xor
add
fisub
nop
and
int3
outs
cdq
xor
ret
jmp
jae
fst
pop
icebp
lock
lock
hlt
adc
jmp
pop
icebp
lock
lock
icebp
adc
scas
pusha
adc
es
mov
es
mov
nop
sub
cmc
scas
jo
lock
mov
scas
pusha
std
lock
mov
ret
call
ins
pop
dec
jmp
sub
ret
int
adc
ins
add
je
xchg
into
mov
pop
pusha
hlt
push
icebp
lock
call
pop
cmp
imul
enter
jne
pusha
adc
icebp
repz
les
cmp
aam
clc
outs
lock
lock
cld
adc
inc
int3
adc
outs
xchg
push
imul
(bad)
outs
in
mov
inc
lods
mov
outs
and
xchg
xchg
imul
jp
mov
es
pop
push
cmp
mov
fdiv
mov
jbe
pop
ficom
sbb
mov
mov
and
cmps
dec
mov
loop
push
aam
push
and
dec
jns
loope
mov
inc
repnz
push
pop
mov
dec
jno
pop
gs
test
movs
hlt
je
jb
adc
mov
shr
jo
pusha
fst
dec
inc
or
jle
fwait
repnz
add
mov
fsubr
bound
sub
mov
push
imul
mov
adc
xchg
add
jae
fisubr
rcl
rcr
adc
rol
mov
mov
jle
jmp
mov
lds
ror
dec
xor
movs
fcmove
or
pop
stos
js
adc
jg
jecxz
cmps
mov
imul
jno
mov
adc
bound
adc
movs
fild
lds
jnp
ins
sub
sar
sar
and
aam
test
and
hlt
dec
jns
adc
imul
inc
jns
add
cdq
jp
push
ins
das
dec
push
xor
jl
sub
jl
xor
and
cld
popa
and
fs
mov
clc
das
daa
jo
mov
mov
loopne
popf
mov
loopne
mov
sub
ins
mov
das
dec
movs
shl
clc
cmp
dec
jne
sub
jnp
add
addr16
rcr
outs
add
push
jne
nop
mov
pop
lock
push
lea
ss
sti
pop
fmul
lods
push
fnstsw
out
xchg
(bad)
scas
inc
neg
jbe
and
xor
pop
and
sar
(bad)
arpl
mov
retf
mov
fiadd
mov
push
shl
cmc
int3
xor
aaa
jg
cmp
and
xchg
lock
stos
sti
sti
jle
mov
popa
jnp
push
sub
mov
adc
arpl
dec
das
leave
(bad)
mov
mov
ror
adc
rcl
and
sbb
push
mov
push
daa
push
cmps
rcl
(bad)
out
mov
loop
test
sbb
or
or
add
out
dec
imul
ds
mov
adc
mov
adc
retf
sub
repz
cmp
inc
sti
mov
pop
(bad)
sub
dec
sbb
mov
xor
sub
out
test
mov
cld
jle
mov
add
jbe
fwait
cmp
inc
and
(bad)
test
jbe
xchg
mov
adc
shl
and
in
jmp
data16
add
addr16
jno
xchg
or
(bad)
in
or
test
mov
ins
sbb
test
stos
mov
stos
mov
or
or
add
xor
lahf
mov
add
xchg
pop
mov
or
or
cmp
mov
jno
mov
fdiv
mov
in
jge
mov
fcom
mov
inc
or
mov
xor
out
xlat
ja
mov
mov
cmc
mov
aam
mov
sbb
jg
ins
pop
mov
dec
out
ja
sub
xor
jno
ja
les
jle
pop
pop
jae
add
mov
js
mov
mov
repnz
test
stos
outs
push
cdq
cs
jl
xchg
loop
jmp
xor
mov
mov
fucom
inc
ds
mov
fmul
xor
dec
fist
sbb
loop
(bad)
fcomp
test
das
in
in
mov
sbb
scas
leave
cdq
pop
adc
popf
rcl
add
in
rcr
dec
aam
repz
mov
js
and
adc
add
aaa
sub
mov
push
or
push
mov
outs
rcl
sahf
cmps
enter
jl
data16
outs
les
(bad)
mov
inc
jl
push
mul
and
and
(bad)
loop
loopne
xchg
mov
inc
fisttp
cli
sahf
push
sbb
loop
xor
mov
push
cmp
add
jae
cmp
cmp
pop
in
out
mov
mov
cmp
dec
jecxz
int
sub
add
pinsrw
ret
mov
push
sub
test
cs
pop
sbb
lds
movs
dec
maskmovq
test
mov
xor
xchg
mov
retf
aas
and
shl
in
xchg
add
mov
(bad)
mov
xlat
cld
xchg
mov
inc
ds
loop
cwde
lods
xchg
push
dec
push
dec
or
call
mul
jl
cli
cmp
inc
loope
xchg
cmp
fld
in
sub
pop
in
fisubr
mov
shl
je
sub
test
adc
icebp
add
mov
or
arpl
add
sbb
sub
mov
jge
cdq
fcmove
test
mov
pusha
and
ficom
(bad)
das
loopne
dec
rcl
mov
retf
pop
pop
out
shl
lock
push
sbb
pop
push
mov
iret
loopne
mov
and
jp
xchg
or
mov
mov
ins
push
jl
(bad)
sub
xlat
sbb
sub
push
inc
fimul
cli
adc
retf
mov
add
inc
pushf
add
pop
loopne
sbb
arpl
sbb
add
cmp
dec
mov
test
adc
std
enter
cmp
add
pop
adc
jmp
mov
sbb
sub
mov
and
mov
retf
add
inc
pop
sbb
fisub
mov
(bad)
ret
xchg
ficomp
cmp
add
mov
and
pop
js
ds
in
push
dec
add
int3
adc
xlat
shl
sbb
addr16
inc
sbb
mov
or
sub
mov
(bad)
mov
loopne
xchg
fcomi
mov
mov
mov
mov
or
retf
dec
ds
lock
mov
stc
mov
dec
push
push
enter
or
jmp
jo
das
adc
ins
and
fldcw
mov
xor
pop
inc
in
scas
cwde
mov
mov
fcom
jle
ins
cs
inc
loop
std
xchg
imul
pop
pop
test
ret
repz
fbstp
sub
jne
pop
mov
rcl
scas
aaa
jns
xchg
sub
mov
lahf
xor
loop
mov
loopne
mov
imul
cmc
adc
jmp
add
add
push
cld
test
shr
test
daa
nop
push
inc
mov
outs
pop
dec
mov
sbb
pop
adc
sbb
add
adc
sub
cli
fwait
icebp
in
mov
pop
pop
mov
cmp
cwde
jmp
xor
jno
fcmovnb
add
push
mov
lea
movs
cwde
add
cmp
push
dec
add
or
fimul
cmc
iret
mov
imul
ficomp
je
rol
mov
sar
lock
push
inc
mov
push
mov
push
xchg
pop
adc
push
fadd
push
jmp
std
adc
xor
clc
in
daa
js
jb
fadd
stc
xor
pop
dec
xor
push
dec
xor
dec
cmp
dec
cmp
dec
cmp
dec
jns
pop
dec
sbb
fimul
inc
push
inc
cmp
or
pop
inc
aas
not
cmp
cmp
cs
pop
inc
cmp
ret
xor
or
es
add
ins
sub
inc
loopne
iret
or
out
and
pop
imul
arpl
push
cwde
call
sub
push
xchg
jl
dec
fild
xor
mov
mov
cmp
xor
xor
mov
mov
push
xchg
jbe
dec
adc
mov
data16
mov
ds
jmp
mov
xchg
out
sub
(bad)
add
push
dec
das
mov
sub
mov
(bad)
stc
popf
pop
lahf
rcl
imul
fstp
outs
ds
inc
pop
mov
jecxz
adc
push
mov
cdq
jno
cmp
cdq
aad
fbstp
jl
pop
mov
xchg
pop
lods
jg
repz
iret
lea
inc
hlt
(bad)
int3
mov
jl
dec
shl
push
xchg
ins
sub
dec
lods
mov
cmc
popa
push
mov
movs
pop
ss
leave
(bad)
jmp
loope
cmp
dec
and
ins
and
sti
test
mov
sub
jg
and
xchg
pop
(bad)
and
adc
and
test
cmp
xchg
sub
xchg
pop
lods
mov
lods
jne
mov
inc
icebp
sub
xchg
fst
or
test
(bad)
xchg
cmp
pusha
mov
cmps
xchg
aaa
adc
mov
cmp
rcr
inc
pop
lods
pop
ja
push
(bad)
push
lods
cdq
adc
cmp
mov
addr16
and
iret
cmps
mov
retf
push
sub
and
stos
lods
in
xchg
repnz
in
xchg
bnd
sti
or
adc
mov
or
pop
xchg
push
mov
(bad)
xabort
jbe
lea
sub
outs
add
inc
pusha
xchg
dec
jbe
and
xchg
pop
out
arpl
mov
icebp
mov
adc
popf
cld
xchg
inc
push
adc
add
leave
ins
rol
rol
(bad)
inc
jle
pop
sti
xor
and
retf
int3
cmps
mov
stos
sub
push
sbb
ret
pop
push
push
idiv
rcl
ret
push
xchg
push
punpckhdq
and
sub
sar
mov
ret
int3
ja
js
mov
pushf
daa
cld
push
jb
fidivr
xor
and
mov
test
fmul
cmp
jge
pusha
sbb
ficomp
out
pop
push
call
les
push
cmp
les
mov
pushf
(bad)
adc
push
icebp
xor
lock
mov
ins
jo
lock
dec
into
add
iret
inc
(bad)
stc
ret
bound
pop
iret
bound
scas
fadd
jo
dec
repnz
call
dec
push
inc
mov
shl
and
pop
outs
cld
stos
sub
xor
repz
inc
inc
js
into
or
movs
test
xchg
sub
pop
add
mov
and
dec
pop
call
mov
ret
mov
ror
mov
repz
nop
mov
adc
pop
pusha
rcl
test
call
adc
or
jo
dec
scas
sub
rol
sub
and
lods
shr
std
and
pop
cmp
movs
data16
mov
lods
dec
jnp
sbb
pusha
cli
in
(bad)
stos
mov
dec
jne
mov
add
push
jmp
dec
push
mov
cmp
ret
int3
stos
mov
out
test
data16
sbb
pop
bound
sahf
int
ins
dec
arpl
mov
pop
jmp
nop
or
lea
sub
pop
fdivrp
jge
xlat
sbb
pop
lahf
aas
xchg
mov
sbb
int3
jl
in
adc
retf
add
daa
xchg
idiv
xor
imul
fmul
imul
xchg
add
xor
jg
ret
inc
mov
mov
iret
lahf
aam
or
shl
imul
jle
jnp
loopne
dec
adc
mov
retf
push
inc
cmp
mov
push
int
add
dec
fucom
inc
dec
test
jno
std
shl
in
inc
(bad)
mov
popa
mov
xchg
cmps
pop
lock
hlt
dec
mov
push
iret
xchg
ins
retf
push
inc
call
mov
ror
shr
add
xchg
fcomp
xchg
jb
xchg
les
pop
std
push
adc
call
mov
gs
mov
pop
mov
test
mov
ss
stos
or
xlat
pop
and
jnp
jmp
rol
xchg
xor
or
sti
mov
in
xlat
(bad)
push
push
pop
xlat
cmps
in
cld
fild
stc
mov
cwde
jp
femms
mov
aad
out
mov
mov
jp
dec
imul
gs
ja
jmp
push
mov
iret
(bad)
mov
lods
mov
test
arpl
inc
retf
mov
fwait
adc
dec
jmp
add
scas
inc
cmp
je
pop
inc
mov
pop
push
xchg
lods
addr16
xor
(bad)
das
shl
cmp
in
add
mov
bound
cmp
add
xchg
xchg
arpl
not
add
int
pop
aam
lods
pop
das
mov
jmp
and
mov
push
sub
mov
xchg
fcom
scas
test
sub
call
ds
sub
enter
push
add
adc
mov
mov
push
lods
push
out
cmp
jno
pop
pop
rol
(bad)
sbb
shl
jae
sbb
inc
or
push
push
xor
outs
jne
xor
in
add
sbb
repnz
rcl
pop
(bad)
push
mov
and
imul
mov
hlt
arpl
fucomp
push
ror
(bad)
jl
mov
ja
xor
mov
pusha
scas
jno
mov
int3
stos
ret
dec
aam
loope
or
mov
aas
sbb
push
jge
push
jmp
lods
push
jne
or
push
test
mov
adc
addr16
cmp
add
pusha
xchg
popf
gs
cmp
push
pop
(bad)
frndint
jno
dec
call
cdq
add
push
(bad)
cmc
push
shr
mov
outs
aas
pop
mov
xchg
add
rol
nop
sub
fcom
dec
mov
clc
mov
or
xor
imul
pop
mov
dec
aas
into
es
cmp
(bad)
test
neg
cmc
pop
and
xlat
xchg
lock
ins
test
push
inc
adc
push
or
mov
or
aam
add
mov
or
sbb
dec
loop
or
cmp
xchg
add
hlt
and
in
and
ins
dec
inc
sbb
xlat
or
jbe
push
add
dec
lea
jnp
inc
retf
push
movs
sbb
test
xchg
pop
sar
sub
xchg
jle
ror
(bad)
mov
es
dec
mov
jne
gs
ret
mov
mov
pop
mov
mov
stc
call
jae
in
push
int3
sub
fisubr
imul
cld
cwde
or
lods
cmp
pop
cmp
mov
lods
daa
repz
imul
int3
call
ins
xlat
int3
dec
arpl
or
dec
mov
pushf
jae
inc
xor
mov
pushfw
mov
sub
fs
adc
shr
mov
mov
xor
iret
push
aaa
and
ins
push
sub
rep
scas
xchg
inc
ror
jae
push
lods
pushf
sbb
lea
inc
or
pop
mov
pop
call
jns
jge
es
(bad)
jbe
or
test
cmp
std
call
or
sub
and
cli
pusha
inc
das
jae
mov
cmp
dec
in
mov
pop
out
fisttp
ins
cmp
fcmovbe
jg
xor
ins
jne
mov
pop
aaa
test
sub
not
ficom
push
fsubr
xor
loope
loopne
dec
shl
or
(bad)
sbb
mov
xor
dec
gs
test
jmp
(bad)
cmps
push
dec
sahf
mov
aas
sar
loopne
gs
xchg
das
clc
inc
and
stos
and
neg
lods
jnp
cmp
jecxz
mov
mov
fwait
mov
arpl
sub
push
inc
push
xor
add
sti
jle
popa
or
xor
dec
push
imul
push
xchg
and
jle
shl
out
inc
bnd
dec
clc
aam
dec
jae
jl
push
dec
xor
out
sar
repnz
cdq
sub
xor
dec
mov
sub
ror
xchg
xchg
pop
test
and
ret
loopne
repnz
ror
imul
cmp
(bad)
or
rcr
loopne
cmps
loopne
push
adc
and
xor
pop
enter
and
inc
mov
inc
test
push
dec
mov
fidivr
shr
pop
sub
dec
outs
jmp
xchg
dec
imul
jl
(bad)
sbb
jmp
adc
xor
pusha
add
mov
imul
out
cmp
push
call
jns
pop
jge
jg
xor
(bad)
nop
inc
mov
aas
push
sbb
mov
aas
sbb
les
push
or
cmp
xchg
std
cld
in
mov
mov
adc
or
sbb
lock
mov
inc
outs
cmps
mov
sbb
sub
jmp
dec
repz
push
outs
ins
or
xor
sbb
mov
sahf
jmp
jmp
push
arpl
icebp
inc
jnp
sbb
or
jmp
sbb
icebp
ret
data16
sub
clc
cwde
je
xor
dec
mov
dec
in
cwde
pop
and
add
out
sbb
and
mov
lock
mov
rcl
jg
sub
push
xchg
pop
inc
xchg
push
fisttp
jbe
push
sbb
rcr
xlat
dec
dec
dec
or
ret
and
jg
inc
inc
or
add
test
or
pop
retf
or
jae
add
loop
mov
mov
jmp
jmp
add
xor
mov
pop
mov
pop
popa
jecxz
add
out
(bad)
lods
pop
bound
inc
(bad)
sbb
je
lods
repz
leave
outs
or
xchg
jmp
push
outs
xchg
sbb
popf
leave
or
cmp
or
fiadd
ins
rcr
div
jbe
mov
adc
cmp
sub
scas
std
jecxz
scas
sbb
mov
jo
sar
shl
or
jmp
inc
jb
cmp
outs
sbb
out
out
ins
or
mov
cmp
sub
cmp
les
pop
dec
loope
std
dec
adc
cwde
ss
(bad)
xchg
dec
dec
inc
shr
(bad)
neg
or
in
call
test
add
aad
shr
mov
pop
in
push
xchg
inc
in
lock
xchg
(bad)
(bad)
aaa
jns
sub
sar
mov
iret
imul
mov
test
lahf
mov
inc
in
mov
icebp
mov
xor
iret
lahf
in
cmp
loop
repz
xor
pop
in
call
push
mov
cdq
test
pop
sub
xchg
add
mov
dec
adc
sub
arpl
adc
mov
cs
movs
pop
mov
and
pop
dec
push
push
dec
pop
push
dec
push
add
iret
lds
mov
inc
call
sbb
inc
outs
inc
push
std
je
mov
xchg
sbb
push
sub
repz
sub
in
shl
mov
mov
jno
pop
sub
lea
lods
adc
out
mov
popa
push
sbb
cmps
dec
movs
sub
or
addr16
mov
cmp
lds
push
or
pop
adc
ins
mov
push
cmps
push
sub
sbb
cmc
jp
iret
aam
jmp
cmps
sbb
iret
fld
push
cmps
lds
sbb
stc
popa
sahf
jns
pop
lahf
int3
stos
mov
push
shr
add
je
push
xchg
aam
or
(bad)
and
cmp
retf
int3
mov
pushf
fs
jg
cmp
dec
test
or
test
repnz
mov
cmc
daa
push
sub
enter
aas
jb
xchg
mov
sahf
and
ins
mov
add
es
adc
test
ja
lods
sti
popf
xchg
ret
xor
stos
aad
mov
mov
dec
push
pop
fstp
js
add
das
xor
out
and
(bad)
sbb
das
pop
jns
test
hlt
mov
mov
les
adc
mov
movs
and
jl
sub
push
ins
lea
rcr
jge
jae
dec
inc
cmp
pusha
sbb
dec
xchg
mov
bound
call
mul
dec
aam
cdq
jecxz
mov
adc
mov
xor
sub
push
or
in
and
enter
cmp
rol
pop
sar
pop
inc
dec
movs
jg
inc
(bad)
ror
cdq
mov
fwait
rcl
ins
(bad)
leave
jb
ret
shr
inc
xor
push
xchg
xor
mov
popa
push
jle
icebp
dec
xchg
pop
jmp
and
mov
adc
and
(bad)
in
shl
movs
stos
pop
xchg
cmps
dec
push
loop
push
mov
mov
stc
repnz
ror
out
movq
sbb
push
or
aad
inc
or
pop
xchg
xlat
int
inc
ror
fistp
add
xchg
or
dec
or
dec
imul
sub
cmp
aaa
fsubr
test
or
imul
mov
arpl
push
add
pop
or
jb
xchg
test
nop
mov
rol
mov
pop
repz
xchg
cs
xchg
mov
adc
adc
add
pop
das
jmp
popa
aas
inc
jb
xchg
aad
sbb
jmp
adc
add
stc
push
movs
xchg
rcr
xor
pop
push
(bad)
icebp
and
rcl
into
leave
call
add
std
(bad)
(bad)
xor
xor
inc
add
fldcw
adc
shr
lea
in
sbb
dec
sub
dec
pop
mov
push
shl
push
inc
ins
in
mov
bound
xchg
mov
in
xor
dec
and
loope
cld
call
bswap
(bad)
dec
int3
test
cwde
pop
psadbw
pop
push
ins
jmp
inc
fdivr
jp
jae
sbb
movs
frstor
lds
rol
mov
inc
pop
add
lods
outs
pusha
repnz
pushf
sub
les
jmp
fcom
cli
js
push
pop
stos
inc
add
call
in
dec
jns
ffreep
pcmpgtw
scas
xor
popf
dec
adc
jp
cwde
int3
xor
(bad)
dec
(bad)
cmp
dec
or
shl
imul
mov
(bad)
sbb
push
int3
mov
pop
and
mov
xchg
imul
jg
push
shr
data16
(bad)
xchg
inc
scas
mov
(bad)
cwde
inc
jmp
aas
mov
pop
push
ins
movs
cs
cmp
or
mov
pop
push
inc
dec
leave
adc
enter
or
or
jmp
out
les
ins
inc
cmp
gs
inc
hlt
sub
rol
jmp
fscale
mov
stc
ret
mov
call
pop
neg
jmp
inc
cmps
xor
or
xlat
sub
imul
add
jno
loop
stc
fdivrp
sar
pusha
call
ins
(bad)
inc
dec
cmp
out
adc
xchg
sar
add
adc
push
cmp
fdiv
(bad)
aam
jp
fiadd
inc
cmps
mov
mov
xchg
xchg
jae
retf
jge
(bad)
in
pop
cmp
push
(bad)
push
mov
std
test
and
in
mov
clc
inc
sbb
lods
push
and
lahf
stos
test
mov
jle
test
mov
fst
in
add
cmp
cmps
stos
inc
fistp
mul
dec
pop
hlt
push
or
push
jmp
jp
std
or
pop
bound
(bad)
or
pop
or
sbb
add
jmp
retf
out
or
stos
sub
aaa
sub
jno
adc
pusha
xchg
(bad)
hlt
xchg
cs
mov
jl
mov
mov
stos
dec
xchg
loopne
mov
xchg
je
arpl
sub
xchg
mov
pusha
nop
sub
jmp
jp
mov
lods
sub
nop
movs
sahf
xchg
retf
nop
xor
pop
pop
scas
add
inc
sub
cmp
and
pop
lock
xchg
add
int
jns
or
fimul
loop
dec
mov
adc
sbb
in
jge
pop
in
push
pop
in
in
scas
fs
pop
cli
ja
aaa
or
sar
jge
adc
outs
xchg
pop
pop
stos
lods
sub
sub
ja
adc
cmps
jo
xor
sbb
mov
inc
mov
bound
sub
inc
push
pop
leave
movs
mov
dec
or
push
cmp
xlat
dec
adc
mov
cwde
(bad)
lock
in
xor
shr
xchg
pop
jmp
xor
scas
mov
icebp
lods
adc
mov
adc
mov
shl
adc
add
jae
xchg
cmp
mov
cwde
das
mov
xchg
fimul
ret
mov
lea
push
mov
xchg
mov
and
mov
repnz
lahf
les
scas
cs
fwait
pop
push
fst
mov
(bad)
int3
nop
movs
cmps
jmp
adc
add
jmp
cmp
in
and
mov
mov
pop
push
lahf
mov
loope
add
fst
movs
lahf
in
jge
shr
fs
add
dec
pop
mov
ret
xchg
imul
push
jecxz
stos
mov
cmp
gs
mov
add
sbb
mov
adc
dec
adc
mov
cmps
and
outs
pop
call
cmp
sub
xchg
adc
push
pusha
and
xor
push
xchg
outs
mov
rcr
call
movs
ror
push
mov
push
xchg
push
cmp
xor
sub
mov
push
push
and
mov
add
cdq
push
lea
sub
sahf
cmp
push
mov
sbb
nop
sub
call
adc
jae
cmp
stos
ds
out
pushf
dec
or
jg
and
jo
out
lea
mov
jns
sti
jnp
push
xlat
shl
mov
mov
xlat
sub
sub
mov
dec
mov
fmul
xchg
jnp
daa
test
pop
call
pop
repz
addr16
test
pop
push
add
xchg
push
rcr
(bad)
dec
sub
mov
test
jmp
pop
std
stos
mov
loop
xchg
jp
mov
inc
mov
retf
loope
push
pop
inc
gs
mov
shl
inc
mov
cmps
aas
test
mov
sahf
in
or
dec
jg
jae
push
aas
pop
pop
in
sbb
stc
pushf
movs
movs
lods
shl
ret
stos
push
lds
xor
addr16
call
sub
retf
outs
dec
mov
xchg
outs
sbb
mov
push
ret
dec
pop
out
mov
fwait
(bad)
pop
xor
mov
sbb
xor
pop
xor
jecxz
or
pushf
adc
cmc
pop
test
mov
sbb
loopne
mov
or
jmp
stos
mov
xor
cmp
and
sub
mov
inc
daa
or
nop
retf
dec
outs
clc
mov
std
aad
push
retf
xchg
jne
xchg
fstp
cmp
dec
div
enter
out
push
ficom
lock
pusha
call
outs
xchg
mov
test
(bad)
adc
popf
inc
jge
mov
arpl
inc
xor
xor
adc
push
sub
xchg
cli
fisttp
inc
xchg
stos
stos
sub
movs
xchg
in
push
stos
stos
sub
jo
pop
popa
aad
or
adc
and
mov
push
cld
test
retf
push
jp
jp
mov
addr16
stc
inc
outs
das
sahf
sbb
mov
sar
mov
repnz
and
retf
jmp
sbb
dec
inc
push
ds
mov
xor
dec
xchg
popf
(bad)
fimul
or
xor
dec
js
push
loope
adc
mov
push
mov
sar
mov
fldenv
rol
or
imul
mov
sbb
and
call
jnp
jmp
mov
and
mov
inc
or
and
xor
push
(bad)
dec
enter
out
cmp
adc
pushw
cmp
xor
pop
or
mov
scas
aas
jge
cdq
das
adc
test
pop
inc
xchg
jmp
pop
lods
sbb
pop
retf
dec
pushf
mov
ins
xchg
das
xor
fistp
mov
inc
or
cs
sbb
sbb
test
ficomp
ds
in
mov
push
out
jge
or
inc
mov
jp
aas
jae
mov
mov
int3
iret
jnp
pop
imul
mov
jmp
mov
xchg
hlt
cs
int3
test
jns
cmp
inc
aad
arpl
lock
stos
repz
xchg
mov
out
hlt
repnz
push
sbb
pusha
xor
jae
push
and
popa
ret
popa
mov
in
inc
pop
shr
jmp
int3
ins
test
outs
rcl
outs
mov
xor
(bad)
pop
es
jns
scas
into
outs
cmp
mov
fld
(bad)
pop
cmp
movs
sti
xor
adc
rcr
cmp
sub
shr
dec
xchg
add
mov
lea
pop
loop
cmps
mov
pop
xchg
lods
shl
xor
push
(bad)
daa
call
ja
pop
dec
jbe
xor
push
sar
outs
ja
cdq
inc
in
jbe
sbb
pop
mov
and
loope
clc
push
sub
retf
in
(bad)
xor
or
cdq
pop
int
popa
xchg
(bad)
xor
add
xlat
sti
mov
pop
or
adc
push
mov
xor
adc
add
sahf
jmp
(bad)
adc
inc
or
rcl
test
push
enter
push
pop
fcom
push
mov
jmp
arpl
mul
icebp
inc
jge
adc
xor
pop
shr
cmp
xor
test
cmp
loope
popf
adc
mov
or
lods
pop
adc
adc
std
call
cmp
xlat
ss
jmp
xchg
inc
pop
test
or
sbb
ins
xchg
adc
inc
xlat
fild
dec
jle
sub
test
and
pop
repz
rcl
clc
mov
or
das
popf
in
push
sti
fmul
data16
dec
or
push
and
int3
jp
fistp
inc
pop
repnz
call
pmaddwd
stc
push
sub
retf
jns
retf
(bad)
mov
push
scas
call
movs
test
enter
mov
rcl
mov
mov
popf
imul
call
sbb
dec
xchg
mov
xchg
hlt
push
sar
gs
shr
push
xchg
jg
ins
cli
fst
pop
jge
sbb
jg
inc
inc
mov
mov
stc
xchg
mov
inc
jae
ins
pop
ins
ficomp
jmp
idiv
mov
mov
mov
and
dec
sub
in
pushf
cmp
cmp
enter
lahf
mov
rol
cs
fisubr
loopne
les
cmp
adc
enter
call
imul
sub
jno
fsub
jbe
inc
jae
cmc
pop
nop
mov
mov
pop
fsub
cmp
dec
cli
mov
add
and
int
retf
test
(bad)
(bad)
ror
fcomip
and
sbb
jl
and
fdiv
pop
cmp
lods
and
jge
cmp
sub
push
dec
and
adc
test
cmp
or
test
pop
into
ficomp
gs
pxor
loope
nop
mov
dec
pop
(bad)
lahf
ins
mov
in
fistp
mov
fcmovne
push
inc
push
and
popf
xor
push
mov
mov
pop
scas
add
xchg
mov
add
hlt
out
loop
sub
or
pop
jle
arpl
jle
nop
dec
mov
mov
fistp
stc
push
pop
and
hlt
xchg
jle
cmp
shr
ds
mov
jge
cmp
repnz
leave
xor
pop
aam
pop
adc
mov
mov
inc
mov
inc
aam
sub
dec
and
sbb
sub
xor
in
adc
ins
sar
std
nop
adc
out
pop
lds
ins
pushf
push
xor
cmc
loopne
inc
mov
xchg
push
mov
(bad)
add
push
in
into
mov
jo
es
jge
push
inc
add
test
hlt
fnstcw
mov
scas
call
push
push
aad
jns
push
dec
ror
dec
cwde
sub
outs
cmp
test
pop
and
push
(bad)
test
mov
dec
jbe
in
ret
movs
fisttp
aas
repnz
jae
xchg
call
xor
push
xchg
pop
sub
mov
rcl
xor
out
fs
mov
(bad)
mul
in
hlt
in
pop
xor
pop
es
ins
sbb
movs
mov
mov
and
sub
stos
daa
jge
in
and
mov
jnp
pop
aas
xchg
xor
xchg
pop
pusha
cli
jno
cmps
test
xor
cmp
xor
sub
and
(bad)
ins
cmc
in
pusha
std
mov
mov
push
call
test
popa
mov
(bad)
cmp
sub
lods
inc
xchg
fcmovbe
sbb
imul
stos
push
daa
iret
jge
and
add
dec
pop
dec
mov
dec
pop
les
adc
xor
sbb
pcmpeqw
scas
leave
mov
mov
imul
(bad)
daa
call
(bad)
pop
sub
fadd
popa
pop
push
xor
sub
test
jp
jg
imul
cs
ret
dec
je
cs
imul
inc
or
xchg
xchg
repz
shr
vcvtpd2dq
repz
aam
inc
push
and
pop
xchg
dec
cdq
xchg
stos
mov
nop
in
cwde
and
inc
in
lahf
xor
pusha
imul
mov
movs
mov
cmp
jmp
mov
pop
push
movs
ret
lahf
repnz
xlat
xor
mov
adc
enter
js
rcl
hlt
fdivr
sub
cmp
cmp
pusha
jl
aad
xor
stos
fidiv
imul
scas
repz
xor
cmp
and
mov
mov
dec
push
mov
xor
xor
inc
mov
and
adc
scas
das
mov
ror
aaa
mov
push
mov
pop
daa
stos
lods
aas
cmc
cli
mov
inc
imul
(bad)
call
sbb
dec
data16
mov
aaa
mov
dec
scas
jg
or
push
pop
or
imul
(bad)
aam
std
pop
aaa
pop
xchg
pop
push
movs
aad
jno
aaa
push
dec
(bad)
pop
mov
nop
(bad)
push
mov
jl
inc
push
arpl
pushf
scas
sub
sbb
xor
es
inc
(bad)
inc
cmp
iret
push
ret
inc
fnsave
addr16
pop
jae
iret
test
jns
sar
arpl
mov
or
sbb
std
iret
sub
push
fld
cli
xor
aas
push
mov
(bad)
jnp
mov
pusha
pop
xor
jle
neg
ficom
pop
inc
mov
jle
dec
xor
test
dec
aad
rcl
add
dec
add
sahf
xchg
inc
(bad)
outs
rcr
jl
xchg
dec
jp
mov
and
push
inc
les
mov
out
or
xor
or
inc
pop
mov
add
inc
jmp
pop
dec
dec
push
jns
pop
sar
mov
into
dec
out
sbb
clc
mov
mov
jns
jne
loope
out
push
js
mov
loopne
outs
mov
sar
cmp
jp
pop
int3
dec
rcl
int
cmp
pop
jle
push
dec
xchg
push
pop
jno
push
cmp
je
dec
cdq
pop
out
jmp
xor
add
sub
xor
es
add
imul
loope
jne
cwde
rcr
push
xchg
cli
sbb
adc
loop
mov
and
cwde
sbb
fstp
and
enter
mov
jge
ins
xor
pushf
jno
mov
lods
out
and
dec
xor
clc
fcomp
stos
stos
sbb
fsub
loope
jmp
in
and
dec
cmp
pop
test
test
sub
mov
fmul
enter
or
push
mov
adc
repz
sub
test
sub
stos
in
push
pop
call
jnp
pop
(bad)
push
jmp
pop
sahf
(bad)
ret
mov
into
mov
in
test
push
dec
pop
call
sbb
pop
mov
pop
xchg
mov
movs
les
sub
xchg
mov
adc
dec
rcr
add
jecxz
mov
cld
jno
mov
dec
sti
and
adc
or
mov
mov
dec
xor
loope
test
outs
adc
in
jne
sub
add
push
popf
cld
rcr
ins
popf
sbb
jecxz
sar
(bad)
repnz
fwait
sbb
into
adc
pop
outs
xor
adc
ins
outs
ins
mov
sbb
daa
push
fisttp
iret
push
push
rcr
dec
dec
add
mov
(bad)
(bad)
out
aas
mov
jno
mov
dec
sti
push
xor
cmovno
das
cmp
sahf
shl
or
and
adc
(bad)
fidiv
inc
adc
test
fcomp
aas
neg
mov
jnp
pushf
outs
or
jb
inc
mov
push
jp
mov
dec
ficomp
outs
xor
lea
push
ins
pop
mov
in
retf
cmp
call
out
stos
sub
repz
xchg
mov
call
iret
mov
inc
mov
mov
inc
aas
cmps
pop
call
mov
adc
jmp
jbe
cmps
call
scas
xor
fcom
movs
fmul
or
enterw
test
lods
pop
or
dec
int3
repz
ret
push
(bad)
shr
xor
shl
cmps
ret
pop
aam
(bad)
icebp
ins
sub
rcl
mov
into
push
in
mov
cld
xchg
jno
fwait
mov
in
enterw
sub
out
nop
loop
cmps
jmp
scas
sub
mov
dec
cmps
cmp
inc
jo
fild
aad
add
mov
movs
rcl
in
retf
xor
inc
dec
inc
test
sub
xchg
and
push
mov
mov
rcl
add
ret
push
out
sub
mov
test
test
push
inc
fadd
xor
lods
ret
imul
(bad)
dec
popa
push
jb
and
or
cs
popf
enter
popf
dec
test
cdq
xchg
sbb
aas
or
add
neg
scas
jno
xchg
jnp
in
je
into
aad
div
jno
iret
xchg
mov
mov
loope
sbb
push
rol
loop
pop
fwait
jbe
daa
mov
popf
sub
fwait
adc
imul
loop
add
outs
fist
and
jg
pop
daa
ins
retf
aas
lods
aas
pop
mov
jecxz
or
pop
cmps
cmp
(bad)
xchg
loopne
cmp
pop
jg
cmp
jbe
mov
rcl
push
dec
daa
stos
push
jne
and
lods
in
mov
and
fs
mov
inc
stc
inc
xlat
stos
mov
outs
js
(bad)
sub
push
and
pop
sub
lea
loopne
(bad)
and
mov
xchg
adc
jmp
loop
push
inc
outs
or
jae
fs
shl
int3
gs
fwait
adc
int3
sbb
call
push
pop
fxtract
in
retw
mov
bound
pop
loop
into
mov
in
cmp
sbb
sbb
mov
mov
xchg
mov
(bad)
dec
sub
jnp
push
int
and
xor
in
(bad)
ror
daa
les
ss
vsqrtpd
add
lods
(bad)
adc
or
fmul
in
add
loope
jle
dec
cmps
daa
inc
cli
movs
mov
jmp
mov
push
sub
push
jb
imul
gs
jle
ja
push
jae
add
pop
sub
mov
xor
xchg
les
adc
ret
mov
sub
mov
jecxz
lahf
ficom
pop
jge
rcl
lock
inc
push
les
sub
mov
xchg
push
cmp
jns
bound
dec
push
mov
sbb
movs
cmc
gs
mov
cld
inc
adc
popa
pop
rcl
adc
mov
ficomp
mov
addr16
jl
inc
inc
adc
jge
in
or
daa
mov
loop
sbb
movs
or
or
(bad)
fisttp
sbb
jg
pop
not
loopne
(bad)
es
push
inc
(bad)
popa
ret
jg
mov
sub
(bad)
sahf
(bad)
dec
mov
mov
ja
mov
leave
pushf
xchg
cmp
enter
(bad)
pop
loopne
cmp
xchg
inc
add
inc
xchg
rol
mov
ror
int3
cs
test
dec
adc
sar
sahf
mov
movs
cmp
jnp
xchg
or
test
adc
pop
dec
xchg
or
sub
xor
test
in
sar
test
add
xchg
mov
cdq
push
jne
aam
pop
cdq
(bad)
(bad)
not
fidiv
cwde
mov
xchg
xor
je
pusha
sahf
xchg
xchg
dec
mov
adc
pop
ja
xor
and
(bad)
inc
fld
and
adc
jmp
and
addr16
mov
jnp
push
test
and
jnp
loopne
add
xlat
add
js
(bad)
ror
jnp
fild
xchg
cmps
in
sub
mov
adc
jmp
mov
mov
mov
add
xchg
sbb
cmps
int3
jecxz
mov
lods
add
fs
mov
daa
fistp
jae
xlat
xchg
cmp
mov
cmp
push
inc
shr
mov
arpl
xchg
mov
inc
sahf
shl
jp
adc
imul
fild
repz
enter
(bad)
(bad)
div
push
push
retf
push
lods
sti
pop
ja
and
jmp
jmp
int
rol
xchg
adc
rcr
bts
mov
cmp
or
repnz
repnz
cmp
mov
pop
cmps
shr
(bad)
test
mov
sti
imul
sbb
fnstsw
mov
dec
push
fmul
cmps
sbb
xchg
xor
pop
std
fisttp
or
xchg
or
pop
xchg
into
jle
jle
jp
or
mov
(bad)
push
nop
loop
cs
das
mov
repnz
bound
shl
and
shr
int3
dec
mov
ret
nop
sub
mov
xor
cmc
xlat
push
ret
inc
inc
mov
retf
inc
popa
inc
jg
jge
dec
inc
sbb
or
ror
sub
inc
mov
and
stos
in
adc
add
enter
mov
pusha
ror
xor
push
pop
outs
into
mov
and
xor
out
mov
xchg
mov
int3
xor
inc
jmp
adc
cmps
call
out
pop
jp
test
je
loope
and
adc
sbb
outs
gs
dec
arpl
out
pop
mov
jle
lea
rol
jns
xchg
cmp
xchg
or
lahf
sbb
xor
cmp
xor
and
jmp
test
cld
int
mov
imul
dec
add
mul
add
xchg
xor
outs
and
mov
int
push
jo
rcl
cmovb
sbb
sub
and
ins
pushf
(bad)
cmp
mov
or
pop
mov
cmp
pop
out
mov
(bad)
gs
or
gs
stos
sti
out
movs
or
cmp
clc
push
test
adc
adc
popf
push
mov
sbb
call
push
xchg
psubsw
fistp
(bad)
mov
cmps
jns
in
mov
(bad)
adc
push
daa
xchg
repnz
mov
pop
xchg
pop
pop
pop
ins
or
into
pop
xchg
mov
test
(bad)
loope
daa
fsubr
push
and
das
sbb
je
mov
push
(bad)
(bad)
sbb
push
loop
bound
daa
into
mov
out
lea
not
pop
stos
jbe
movs
dec
icebp
mov
lods
fst
xchg
mov
push
mov
(bad)
cmp
sub
movs
cwde
cmp
xlat
pop
int3
xor
pushf
lods
or
out
(bad)
jb
gs
mov
outs
jecxz
in
xchg
adc
fisttp
scas
jnp
dec
cmp
jmp
mov
or
pop
mov
addr16
push
push
jg
addr16
int3
mov
pop
test
push
jle
loope
adc
pop
push
mov
mov
push
adc
adc
xor
cmp
jb
mov
not
pop
aas
out
(bad)
jb
sub
cmp
not
jmp
ror
mov
add
fwait
cmp
not
cli
push
inc
inc
push
mov
adc
int
addr16
mov
sbb
inc
jnp
dec
and
sub
ss
fisttp
jge
dec
int
sbb
inc
out
add
scas
(bad)
pop
fisubr
gs
add
and
add
sub
cmp
xor
test
call
mov
sub
sub
retf
loopne
clc
nop
cmp
shl
movs
pop
js
mov
pop
sub
xchg
popa
sub
xlat
adc
rcl
xchg
dec
sub
(bad)
or
(bad)
out
cmp
pop
ffree
fld
cmp
pusha
jno
mov
je
cwde
les
xor
cmp
push
fsubp
inc
inc
ins
jmp
mov
xor
ins
std
adc
repz
and
xor
and
inc
movs
dec
in
dec
lock
jns
pop
rcl
fsub
xchg
and
adc
mov
xchg
xor
adc
dec
jmp
mov
cs
fldcw
shr
es
cdq
or
setae
into
pop
fs
mov
repnz
xchg
pop
jmp
ret
mov
aaa
not
and
imul
sbb
mov
sub
movd
fcomp
jmp
inc
data16
icebp
(bad)
dec
jg
repz
and
and
cmp
arpl
adc
dec
xchg
pop
movs
and
mov
xlat
(bad)
stos
push
jb
mov
in
(bad)
and
jb
mov
in
pop
sbb
idiv
adc
call
arpl
push
in
inc
and
arpl
fcmovu
dec
aas
jae
je
mov
test
stc
into
mov
jno
push
std
lock
and
push
ficom
and
and
hlt
sbb
dec
sub
aam
ds
into
push
iret
push
sub
adc
mov
jbe
fsubrp
add
cld
or
fcomp
sub
push
pop
cdq
(bad)
xchg
mov
or
imul
adc
or
xchg
cmp
fst
jnp
fisttp
xor
sub
outs
(bad)
rcr
shl
jno
jle
das
mov
push
and
scas
fcom
xchg
and
std
mov
jge
lahf
call
jge
mov
pop
repnz
stos
inc
mov
stos
dec
lock
es
push
mov
sbb
dec
dec
fs
test
dec
jns
push
jmp
xchg
push
in
jbe
jns
fstp
push
loopne
out
jno
sbb
push
sbb
sbb
xchg
dec
dec
scas
sbb
jge
add
add
pop
adc
cdq
push
(bad)
mov
mov
jle
inc
aam
mov
mov
push
cmp
sub
mov
test
stc
clc
iret
inc
test
add
xchg
push
xor
mov
or
cli
fisttp
(bad)
cli
sahf
nop
rcr
lds
mov
aam
aam
inc
popa
inc
push
(bad)
and
mov
repnz
and
pop
mov
mov
jo
mov
ret
xor
mov
inc
sbb
jae
or
mov
jl
pop
mov
jl
enter
cwde
and
fcom
sub
out
push
xchg
or
push
jecxz
pop
jae
test
in
dec
std
sbb
jns
(bad)
scas
cli
mov
pop
fmul
xchg
or
inc
int3
sbb
stc
shl
and
fdiv
or
scas
imul
or
mov
sub
scas
push
test
out
sbb
and
mov
ds
xor
sti
jecxz
jg
mov
popf
jne
cmp
pop
stos
rol
xchg
call
push
pop
out
ret
rcr
addr16
not
push
sub
imul
rcl
push
xor
cmp
(bad)
lods
aam
push
in
inc
not
push
dec
lock
mov
sbb
out
push
xlat
adc
mov
xchg
in
mov
rcr
psubsb
stos
test
in
add
cmps
sub
pop
mov
sbb
push
cmp
xor
(bad)
call
jmp
pop
and
dec
push
call
sbb
mov
xchg
rcr
int3
fld
daa
push
fucomi
aam
and
mov
jecxz
test
xchg
(bad)
inc
repz
and
ror
xor
mov
sbb
in
xor
cwde
retf
push
add
retf
mov
jmp
xchg
ins
int
aas
icebp
neg
add
inc
ins
xor
sub
outs
cwde
pop
mov
or
mov
jnp
pop
jg
out
jecxz
pushf
loopne
and
int
xor
mov
dec
inc
push
cmp
ins
pop
stos
mov
add
ret
hlt
push
xor
mov
push
shl
mov
mov
mov
imul
dec
lock
sub
xchg
xchg
xor
out
(bad)
retf
mov
pop
pop
and
and
pop
out
cmp
in
push
sbb
push
test
jp
cwde
je
jo
test
pop
enter
push
and
push
or
or
mov
hlt
cmps
lea
outs
shr
ins
pop
scas
inc
(bad)
or
je
inc
retf
adc
or
push
mov
push
sti
xor
(bad)
cli
add
div
imul
add
and
ja
pop
jb
adc
xor
(bad)
imul
int
into
(bad)
ins
push
popa
cwde
and
aad
scas
push
sbb
(bad)
ss
adc
cmps
mov
and
mov
(bad)
shl
cmp
sar
in
and
dec
sbb
cmp
jmp
lahf
pushf
(bad)
xchg
nop
cs
jp
mov
ret
ror
add
sub
mov
cmp
cld
mov
dec
arpl
inc
xchg
data16
cmp
stos
test
fnstcw
lds
or
and
jmp
dec
test
push
fild
mov
pop
je
mov
ss
xor
test
mov
loope
sub
push
push
xor
outs
xor
pop
clc
sub
pop
jbe
in
jl
inc
(bad)
nop
movs
sbb
mov
imul
cli
mov
js
mov
push
push
mov
repnz
je
jmp
call
xor
das
or
push
xchg
pop
sbb
adc
mov
sbb
aam
outs
repz
fild
ret
adc
jmp
rcl
mov
les
movs
sub
cmp
sbb
cdq
test
sub
xchg
add
jecxz
pop
adc
push
cmp
pop
cmps
push
sbb
xor
scas
(bad)
cmp
stc
jae
xchg
aam
jae
cmp
std
cmps
rcr
les
pop
jbe
push
sub
ds
pop
cmps
popa
(bad)
movs
in
pop
fst
jle
imul
outs
sbb
loope
and
push
mov
cmps
pusha
outs
popa
bound
loop
sbb
rcr
push
inc
pop
scas
mov
ss
push
fmul
jmp
push
pop
cmps
test
rol
movs
in
rol
mov
gs
mov
test
mov
pop
xchg
fs
jp
xchg
into
shr
inc
xchg
add
xchg
mov
enter
push
leave
xchg
xor
out
into
mov
into
mov
push
(bad)
jno
mov
sti
xor
(bad)
cmp
test
and
test
gs
jmp
repz
fisub
mov
mul
stos
ss
into
xchg
test
push
bound
xor
xchg
fild
ins
xor
int3
es
lods
sub
repnz
in
sbb
cld
pop
(bad)
in
inc
pop
out
mov
xchg
cmp
repz
mov
loope
dec
sub
ret
int
call
xchg
outs
xchg
push
lock
into
push
jbe
adc
(bad)
inc
inc
retf
mov
ja
int3
jg
push
pop
xchg
scas
inc
cmp
mov
dec
pop
movs
(bad)
sti
dec
xor
xchg
mov
dec
jg
sub
ins
xchg
es
sar
jne
cdq
lea
mov
or
outs
pop
imul
and
fmul
mov
xor
adc
stos
adc
leave
jb
cmps
mov
jo
cmp
adc
dec
push
add
mov
cmp
jno
sub
call
outs
icebp
ss
adc
jp
sub
mov
daa
mov
shl
jno
xchg
shl
sub
stc
or
jo
push
push
inc
fwait
(bad)
xor
and
xchg
repnz
int
ror
aam
jae
mov
xchg
imul
fiadd
into
pmuludq
inc
jg
jnp
cmp
jmp
push
add
xor
ret
fstp
cmp
call
daa
inc
and
sub
push
mov
inc
aaa
mov
pop
loope
sahf
jmp
mov
dec
push
nop
mov
or
push
dec
jle
aaa
pop
jl
mov
inc
push
imul
mov
add
dec
cmps
fstp
pop
aam
sbb
and
or
test
pusha
cld
dec
xchg
lahf
ss
and
fdiv
stos
and
aas
sub
cs
mov
sahf
ins
mov
sub
xor
push
test
jmp
mov
daa
sub
inc
xchg
into
jge
mov
(bad)
fs
cmps
sti
icebp
mov
mov
js
or
push
out
cmp
dec
(bad)
mov
sbb
or
mov
mov
dec
mov
dec
ja
test
scas
stos
sahf
clc
push
jmp
les
ror
pushw
or
jl
pop
div
cmp
mov
cmp
hlt
xchg
dec
test
jo
mov
mov
loope
push
xchg
clc
imul
test
(bad)
xor
jecxz
sbb
popa
inc
inc
mov
cmp
outs
cli
xchg
ror
mov
ret
mov
adc
jne
pop
and
fmul
jbe
jno
push
jb
or
div
pop
outs
out
pushf
xchg
sbb
dec
jno
sub
cmp
cmp
lea
mov
pop
lea
mov
mov
imul
add
shr
cmp
mov
out
inc
add
cmp
and
dec
mov
inc
cmp
mov
fsubrp
repnz
inc
jns
dec
retf
dec
jmp
stos
inc
sar
jns
jne
out
iret
xor
mov
adc
xchg
ret
ror
mov
(bad)
lds
(bad)
stc
aaa
inc
push
mul
sub
xor
pop
aam
rcl
fst
cmp
sbb
pop
jae
pop
push
stc
std
mov
mov
mov
mov
les
ins
sub
test
cmps
xor
cmc
addr16
(bad)
(bad)
and
cmc
dec
sub
jmp
loop
imul
test
sbb
jle
in
out
pop
(bad)
dec
mov
test
cmp
lock
outs
pop
add
adc
pop
fs
repnz
push
out
jbe
hlt
mov
cmc
xor
pop
leave
and
jmp
iret
and
pop
pop
aaa
int3
pusha
popa
aaa
push
push
fucomi
lock
inc
imul
inc
adc
push
ret
loopne
mov
push
sbb
aas
retf
jecxz
retf
(bad)
out
jecxz
mov
call
push
mov
mov
push
xor
mov
adc
jg
aam
into
cmp
stos
xor
test
push
sub
aas
addr16
mov
rol
pop
mov
fmul
test
movhps
test
fbstp
xlat
push
call
dec
push
dec
mov
mov
cdq
jl
sbb
addr16
sub
adc
stos
mov
retf
(bad)
cld
jno
jecxz
pop
dec
lahf
xor
cmps
push
leave
push
jns
fs
sbb
sub
mov
shl
movs
pop
iret
imul
cmp
add
int3
retf
(bad)
cmps
mov
not
je
mov
mov
fsubr
sub
(bad)
and
cmps
mov
dec
jae
pop
mov
aad
pop
sbb
pop
or
aad
jae
ret
rcl
xchg
enter
sbb
dec
xchg
inc
sub
push
sub
stc
dec
in
adc
daa
sub
dec
addr16
scas
(bad)
or
mov
test
loope
inc
xchg
cld
xor
pop
pusha
aas
or
cmp
(bad)
loope
fwait
out
rol
test
cmp
es
mov
pop
xor
cmc
(bad)
xor
test
outs
stos
sub
inc
adc
int
mov
ja
add
cmp
(bad)
stc
push
cmp
add
xor
cmovg
mov
sbb
(bad)
xchg
mov
mov
sub
jmp
fidiv
mov
outs
jb
pop
mov
fisttp
xor
sbb
mov
add
dec
jg
pop
std
fsub
mov
enter
adc
or
inc
dec
(bad)
and
push
jp
cmp
sub
pop
adc
lods
push
leave
fiadd
sub
sub
fst
fld
jle
outs
ins
ret
mov
push
(bad)
cmp
and
dec
fstp
div
cmps
ja
test
mov
(bad)
out
sbb
mov
mov
cmp
shl
push
jmp
push
shr
pusha
pushf
pusha
ds
pop
xchg
and
cmp
dec
jmp
adc
adc
xchg
loop
inc
push
bound
mov
push
mov
and
adc
pop
and
daa
mov
std
jl
fstp
push
pop
dec
idiv
mov
cmp
xchg
add
jbe
dec
sub
push
out
ror
xchg
call
xor
xlat
dec
leave
mov
pushf
jbe
jo
dec
jecxz
fist
xchg
mov
ror
push
push
and
sub
xchg
xor
cmp
lahf
call
cmp
dec
iret
fist
es
loope
inc
mov
inc
or
and
sub
add
add
push
mov
and
jl
mov
out
je
nop
mov
pop
add
call
sub
cmp
cmp
or
(bad)
mov
icebp
inc
or
sbb
pop
test
cs
adc
ror
cmp
dec
xchg
call
lea
jae
sbb
cmps
int
inc
aam
es
mov
cmp
(bad)
int3
mov
mov
sub
pop
xchg
neg
xchg
(bad)
lahf
hlt
mov
push
call
xor
pop
(bad)
push
mov
(bad)
mov
mov
and
xchg
sub
xor
mov
in
retf
push
dec
add
clc
xchg
(bad)
cmc
cld
cmp
jmp
xchg
ja
inc
test
sbb
ja
and
(bad)
iret
test
pop
pusha
cmp
xchg
cmc
les
mul
xchg
cli
mov
popa
push
hlt
cli
es
scas
sbb
dec
xchg
push
test
fimul
fwait
sub
push
pop
scas
push
pop
dec
jp
and
loopne
xor
push
movs
inc
mov
mov
cmp
sbb
ret
xor
seto
fidiv
add
sbb
cli
in
adc
daa
cmc
rol
pop
mov
cmp
inc
movs
dec
pop
push
setno
imul
xor
mov
add
les
cdq
dec
lahf
rcr
mov
retf
loop
rcl
xchg
push
ret
stc
add
mov
push
mov
outs
mov
mov
int3
rcl
mov
xchg
sub
sbb
push
xor
add
hlt
mov
adc
es
pop
sti
and
aam
mov
add
sbb
or
hlt
xchg
or
rcr
xor
ret
fs
dec
test
cmps
cwde
scas
or
stc
shl
repz
push
adc
mov
jns
mov
jo
adc
sub
mov
fsubr
and
pop
stos
outs
push
mov
call
dec
inc
pop
lock
pusha
stos
mov
(bad)
stc
mov
lods
push
stc
push
bound
into
jle
jecxz
adc
outs
sbb
data16
mov
adc
add
mov
add
sub
aad
xchg
daa
or
mov
jp
xor
mov
pop
mov
jl
mov
mov
and
jmp
movs
les
mov
add
stc
push
push
cmp
retf
loope
mov
lahf
jmp
out
les
(bad)
jbe
sti
push
leave
mov
mov
hlt
push
mov
out
enter
popf
add
nop
mul
mov
stc
xor
mov
sub
and
in
popa
push
mov
jnp
add
out
inc
mov
push
mov
ins
sub
pushf
dec
or
xor
sbb
(bad)
mov
and
popa
movs
inc
push
mov
mov
xchg
cmp
jp
mov
xchg
arpl
out
push
pop
pop
stos
jle
mov
cwde
push
adc
loopne
and
cmp
jo
cdq
repnz
push
cmps
jmp
or
push
in
pop
shr
and
inc
pop
xchg
xor
xor
loope
rcr
inc
and
mov
add
xchg
mov
sbb
mov
and
sti
mov
or
or
sbb
sti
mov
movs
pop
outs
loopne
and
mov
test
cmp
sbb
sub
push
xchg
xchg
and
sub
xor
cmp
fld
shl
mov
aaa
stos
sbb
bound
nop
nop
fmul
pop
xor
push
out
clc
jne
jmp
loope
fwait
mov
or
inc
(bad)
mov
ss
jns
inc
jl
fiadd
cmp
cmp
push
in
mov
sub
scas
aaa
cmp
dec
push
cld
stc
xchg
shr
and
(bad)
cdq
xchg
fiadd
pop
xlat
or
cwde
or
cmp
ds
pop
enter
call
stc
pop
inc
(bad)
cs
sbb
pop
in
inc
push
xchg
gs
pop
mov
sar
inc
xchg
add
rcl
aad
aam
outs
xor
(bad)
sar
fimul
arpl
mov
stos
test
sub
sub
lds
fcmovnu
ss
mov
or
stos
in
add
pop
cmp
shr
cmps
popf
mov
cdq
int
push
lods
cmp
test
addr16
and
sar
adc
inc
mov
pop
fistp
dec
mov
xchg
pop
sbb
sbb
push
lods
pop
(bad)
out
ss
shl
mov
ins
cmp
outs
sbb
pop
mov
rol
push
sub
inc
jno
aad
adc
out
leave
out
int
cdq
hlt
push
ja
shr
fild
cmp
or
std
clc
pop
aas
mov
movs
out
cmp
stos
hlt
add
xor
xor
or
and
push
adc
and
cwde
sub
(bad)
sub
stc
cmp
adc
mov
cdq
scas
pop
jb
xchg
imul
rcr
in
push
aam
inc
dec
mov
mov
cmps
jmp
sub
rcl
call
daa
add
nop
frstor
aas
call
leave
pop
dec
jge
sub
xor
aas
clc
push
hlt
cmp
sub
imul
cld
mov
mov
shl
and
daa
pop
outs
jb
mov
and
pushf
cmc
mov
gs
mov
mov
push
test
scas
jne
cmps
cs
aas
push
aaa
test
xchg
(bad)
adc
in
sub
bound
ret
adc
pop
xor
stos
xor
and
dec
push
stos
into
jo
xchg
adc
inc
fadd
je
pop
into
aaa
loop
shr
sbb
pop
jmp
adc
(bad)
rdmsr
adc
and
dec
adc
ja
xchg
xor
addr16
push
sub
loope
arpl
int
clc
xchg
push
ds
xchg
call
in
(bad)
pop
mov
ins
and
mov
mov
icebp
push
imul
in
and
push
inc
pushf
dec
inc
clc
int
jge
adc
xor
or
sbb
push
dec
and
out
pavgb
mov
ret
or
repnz
cmc
add
not
int
push
jl
inc
adc
or
ret
jbe
adc
lock
les
add
sti
ds
add
jns
arpl
cmp
add
jge
jns
adc
cmp
xchg
push
out
lea
div
pop
mov
inc
into
std
int
mov
ret
jp
cmp
jg
mov
and
jmp
sub
fwait
sub
adc
loope
aad
imul
cmp
push
mov
or
mov
popf
cld
into
loopne
inc
(bad)
loope
xchg
scas
cmps
bound
(bad)
adc
jns
cld
inc
js
pop
lods
dec
(bad)
xchg
fistp
jno
dec
adc
and
pop
push
sub
ins
movs
push
jg
sub
fist
sbb
xchg
stc
cwde
cmp
dec
into
mov
xor
fwait
mov
mov
adc
sub
adc
push
xor
cwde
lods
cmp
xchg
pop
mov
adc
pop
inc
inc
mov
inc
cmp
imul
repnz
fucomp
xchg
pusha
add
fistp
mov
ins
xchg
dec
int
daa
fwait
popa
cmp
es
rol
push
lahf
inc
(bad)
add
adc
adc
fs
sbb
or
fwait
sbb
cmps
adc
sub
jl
mov
add
enter
in
les
xchg
inc
and
int
fimul
mov
mov
fld
repz
or
push
adc
jb
add
mov
sbb
jecxz
neg
stc
popa
jle
push
sub
xchg
inc
nop
mov
jo
push
clc
stos
bound
lar
jecxz
push
jae
inc
fwait
lods
push
icebp
dec
pop
sti
(bad)
mov
add
mov
xchg
jl
push
sbb
mov
movs
dec
call
es
fimul
mov
mov
jmp
xchg
inc
push
fsub
imul
in
popa
mov
rcl
out
aas
pop
repz
inc
loope
jae
imul
adc
push
jae
ds
or
arpl
sbb
ins
les
scas
sub
sahf
icebp
lea
dec
cmp
imul
mov
movs
dec
cmps
cmp
xchg
rcl
stos
mov
ds
sbb
mov
dec
xchg
xor
mov
hlt
mov
mov
cmp
and
mov
popf
inc
pop
dec
movs
pop
pusha
daa
or
adc
fidiv
dec
and
nop
call
jno
rcr
sbb
pop
cmc
jbe
push
xchg
jo
pop
xlat
jge
bound
jmp
jns
or
pusha
jns
jge
shl
loop
inc
(bad)
mov
and
xchg
or
sub
(bad)
pop
add
cmps
sub
or
sar
inc
inc
movs
mov
(bad)
xchg
jle
xchg
inc
xchg
sub
cmps
gs
jmp
mov
adc
out
mov
jb
and
xchg
mov
mov
add
(bad)
mov
enter
(bad)
je
and
sub
push
retf
mov
or
push
xchg
mov
je
dec
adc
pop
pusha
mov
pushf
cwde
mov
mov
xor
out
cdq
or
dec
lods
mov
lds
pop
(bad)
pop
xchg
jge
xchg
mov
adc
test
dec
imul
pop
lock
lods
rol
adc
push
inc
or
pop
xor
push
aam
test
ror
inc
push
pop
xor
mov
(bad)
setno
daa
fist
test
fsubp
fxch
jg
cs
pop
xor
and
(bad)
and
pop
icebp
jns
sbb
sbb
cmp
mov
dec
lock
xor
sbb
sbb
retf
or
push
xchg
movs
push
mov
bound
imul
sti
jle
out
js
jg
stos
or
adc
and
inc
out
jns
dec
gs
jl
sub
data16
jo
push
int3
ret
frstor
adc
mov
xchg
dec
daa
das
jnp
mov
cmp
push
bnd
imul
(bad)
fndisi(8087
mov
push
cld
pop
mov
(bad)
pop
pop
push
mov
inc
jmp
repz
idiv
sub
jb
adc
ss
sub
fld
repnz
inc
push
test
shl
push
xchg
(bad)
push
aad
jno
nop
icebp
out
pushf
stos
ret
or
stos
aaa
(bad)
mov
movs
lock
js
adc
jle
(bad)
imul
mov
sar
push
sub
sbb
retf
sahf
in
adc
mov
push
jne
ss
and
cwde
popf
jbe
mov
aas
jmp
pop
ins
les
add
repnz
ja
lods
cmps
mov
stc
int
pop
fistp
scas
cmp
lock
icebp
adc
mov
enter
mov
xchg
sbb
sbb
cdq
mov
test
popa
adc
out
inc
xchg
test
arpl
ins
xchg
dec
mov
push
and
pop
inc
cmp
in
outs
adc
inc
scas
imul
mov
dec
jge
je
into
out
sti
ret
imul
mov
sub
repnz
xor
pop
retf
jo
jb
adc
xor
dec
and
rol
jo
sti
out
arpl
push
fwait
shl
sub
inc
add
in
and
hlt
push
loope
aam
jl
jl
jg
push
sub
and
dec
jg
sub
and
rcl
adc
jg
mov
out
jecxz
fucomip
jne
dec
sar
sbb
out
add
adc
jl
(bad)
mov
es
in
cmps
retf
adc
inc
pop
dec
mov
ret
dec
cwde
pushf
sbb
hlt
mov
add
and
(bad)
or
xor
fdivr
dec
lods
gs
int3
cmps
cmp
gs
ja
cdq
mov
outs
clc
push
push
shr
pop
pop
ins
stos
rcl
test
mov
popa
xchg
test
icebp
mov
loope
hlt
mov
(bad)
adc
cmp
inc
cwde
pop
out
in
dec
int3
pushf
push
or
cmps
rol
ficom
cmp
imul
pop
hlt
inc
aaa
jmp
scas
cmp
jb
pop
mov
jno
lods
cld
dec
sub
dec
push
mov
lock
cs
inc
mov
pop
push
in
mov
ins
jp
or
dec
adc
cmps
push
out
push
loop
call
icebp
sbb
aad
push
add
pop
pop
cmc
inc
arpl
and
pop
sub
rol
xchg
arpl
fmul
and
xor
mov
add
movs
sbb
or
call
add
jl
fbld
leave
push
cmp
cmp
aaa
xchg
cwde
xchg
add
add
dec
mov
stos
inc
inc
or
mov
fnstenv
adc
clc
jbe
cwde
ret
mov
call
aad
dec
sub
jne
inc
jmp
and
sbb
push
push
lock
push
stc
mov
test
sbb
cmp
mov
ficom
and
jne
dec
cmp
inc
cdq
add
fcomip
cmp
mov
dec
mov
sbb
cmp
das
lods
pop
pop
or
jne
or
ins
repz
pop
lea
sub
push
sub
jns
fpatan
adc
inc
add
sub
mov
sbb
xchg
dec
cmps
sbb
test
xor
aad
sbb
mov
div
ror
cmp
mov
fs
dec
dec
lods
das
aaa
mov
int
and
pop
shr
daa
push
retf
mov
out
stos
cmp
daa
sbb
pop
in
mov
cmp
mov
jp
popf
mov
arpl
rcr
lock
movs
aad
add
or
inc
pop
div
push
cwde
sbb
xchg
arpl
jge
adc
xor
sbb
lock
sub
mov
jmp
bound
pop
rcl
popa
repnz
cmp
pushf
push
jmp
or
xor
outs
and
jecxz
xchg
test
(bad)
mov
arpl
loopne
add
mov
call
lea
cmp
mov
cwde
sub
pop
mov
sbb
stos
push
push
or
dec
aaa
popa
aas
xchg
jmp
cmp
jmp
jne
adc
ins
mov
cmp
push
out
je
lock
adc
jg
push
aam
cld
xor
dec
jmp
sahf
stos
xchg
frstpm(287
loope
sti
xchg
cmp
ss
adc
shr
xchg
cmp
stc
push
outs
mov
sbb
aaa
cwde
push
mov
int3
call
cmc
popa
pop
xor
fwait
lods
cli
out
push
pop
xchg
mov
rcr
push
div
pop
outs
or
dec
adc
stos
out
pop
sbb
stc
out
and
and
icebp
cdq
xor
rol
mov
scas
div
dec
or
rcr
or
xchg
std
dec
xchg
fs
fs
aad
sbb
ss
pusha
(bad)
stc
add
add
es
mov
xor
adc
xor
daa
sti
push
and
inc
and
test
mov
retf
dec
mov
shr
push
movs
shr
(bad)
scas
sub
and
sti
addr16
inc
add
rol
lods
test
jp
jne
dec
mov
movs
inc
pop
loopne
jg
ds
push
rcl
cmp
ret
in
neg
hlt
nop
jmp
(bad)
lods
jle
stos
jl
popf
retf
scas
in
jmp
int
repnz
inc
movs
adc
adc
sahf
ds
push
int3
jno
addr16
sbb
lea
(bad)
mov
in
add
or
ficom
cdq
sti
fldenv
nop
and
pop
push
xor
dec
test
aad
cmp
call
xchg
pushf
ss
call
and
fcomp
in
cmp
jmp
inc
push
push
xchg
cmp
sub
and
cmp
xchg
test
fild
pushf
rcr
bound
jge
push
lds
test
or
adc
hlt
fdiv
inc
mov
inc
test
scas
dec
imul
xchg
and
mov
xchg
or
mov
std
xchg
jmp
mov
xor
cmp
pop
test
pop
ror
jo
push
jnp
pop
inc
scas
pusha
push
sub
dec
and
sbb
hlt
push
scas
das
stc
or
into
nop
cmps
aaa
push
mov
jns
fld
jmp
jge
sbb
push
pop
ds
cmc
neg
mov
mov
ret
push
bnd
jno
jne
lods
jge
sub
push
mov
ja
sbb
cmp
aad
mov
ret
jb
xchg
dec
mov
fidivr
and
mov
pop
jl
mov
xchg
retf
sahf
(bad)
(bad)
mov
adc
pop
xchg
mov
int
push
cmp
mov
(bad)
xchg
push
and
lds
mov
retf
aam
add
out
wbinvd
jne
inc
(bad)
punpckhdq
push
and
lods
cmp
inc
test
sbb
cmc
ret
sbb
iret
pop
dec
xchg
lods
push
xchg
nop
pop
adc
ror
movs
movs
mov
fild
popa
jb
dec
sub
mov
mov
mov
cwde
sub
jno
frstor
aaa
jmp
push
addr16
pop
call
dec
cmp
xor
inc
rcl
das
jne
les
retf
ins
out
push
pop
push
js
jne
and
xchg
sub
jbe
test
inc
pop
jmp
sbb
(bad)
into
jmp
mov
dec
dec
inc
pop
mov
pop
sar
in
lods
(bad)
push
mov
(bad)
adc
jmp
clc
sahf
mov
in
(bad)
push
jo
call
adc
xor
add
jmp
xor
test
inc
mov
mov
jg
cld
call
enter
pushf
out
and
cdq
push
xor
inc
mul
add
push
push
sbb
add
jae
pop
sub
pop
data16
xor
dec
mov
into
(bad)
outs
push
in
mov
pop
ins
scas
jb
xchg
pushf
dec
or
stos
add
test
into
je
loop
sub
or
inc
scas
int3
aad
pop
movs
arpl
gs
js
jge
ret
jb
sti
popf
imul
mov
sub
aad
inc
mov
sbb
add
xchg
scas
sub
inc
call
sbb
mov
pop
inc
pop
xor
jg
call
in
ret
jg
dec
movs
gs
mov
add
jl
mov
mov
sub
push
xchg
mov
pop
sahf
sbb
xlat
pop
mov
and
xlat
mov
mov
cmp
jnp
popa
jmp
jecxz
in
icebp
xchg
xor
mov
and
daa
imul
adc
daa
pop
add
cmp
retf
fsubr
mov
or
jo
pop
out
inc
mov
orps
jno
cmp
retf
cwde
jp
mov
push
pop
xchg
cmp
mov
data16
jmp
outs
or
add
aam
xchg
pop
dec
jmp
cli
imul
pop
(bad)
(bad)
cmp
stos
dec
cmp
jle
mov
out
or
adc
inc
out
ja
add
out
out
repnz
jae
sub
loop
aaa
adc
inc
xor
sub
xchg
xor
push
push
adc
cli
js
adc
out
movs
add
js
out
out
jecxz
int
cdq
push
clc
mov
bound
mov
cld
xor
daa
pop
push
(bad)
imul
je
repnz
movs
jo
loope
(bad)
and
mov
dec
cmc
dec
out
call
or
pop
test
cwde
jecxz
jo
(bad)
and
push
out
mov
and
cmp
adc
add
in
xor
enter
mov
xchg
push
mov
gs
rcr
cs
mov
test
or
push
or
mov
jo
dec
sar
jmp
sub
mov
cmp
dec
ret
icebp
arpl
pusha
inc
xchg
jmp
pushf
imul
aaa
and
mov
daa
rol
test
in
imul
add
es
lods
sub
or
ret
mov
sub
xor
test
test
rol
pushf
sub
or
mov
test
stos
xchg
jnp
mov
push
inc
pop
add
add
mov
jns
test
test
loope
std
ud0
dec
jecxz
fxch
lods
fistp
dec
inc
lock
scas
mov
jmp
imul
clc
mov
sbb
jno
or
pop
outs
jecxz
pop
cwde
arpl
rcr
xchg
mov
jnp
cdq
jmp
bswap
bound
push
les
clc
in
fs
shr
inc
xor
int3
ret
cmp
mov
push
jle
sub
and
dec
ret
aad
and
cli
dec
hlt
inc
push
xor
cs
(bad)
sub
out
popa
mov
pop
dec
dec
bound
push
cli
cmp
xor
(bad)
test
jecxz
pop
sti
outs
inc
stos
cmp
pop
cmps
jnp
neg
push
xchg
inc
mov
xchg
push
or
mov
aad
arpl
ror
sti
xor
mov
cwde
iret
dec
jbe
les
xor
jmp
inc
jno
lods
jb
mov
cmp
cdq
adc
cwde
jle
inc
pusha
pop
pop
sbb
inc
inc
in
cmp
bound
push
test
imul
add
ret
push
(bad)
dec
sbb
mov
dec
cmp
and
or
dec
ins
mov
and
(bad)
xor
mov
mov
xchg
xlat
test
stos
pop
xor
mov
(bad)
dec
pusha
cwde
es
fsubr
lods
mov
and
or
(bad)
xor
sbb
mov
daa
inc
clc
and
dec
and
sbb
call
repnz
ja
and
sub
sahf
test
cld
sub
jbe
mov
stos
call
or
mov
sbb
fadd
neg
mov
sahf
mov
popf
mov
imul
mov
sbb
aas
xor
std
mov
mov
and
out
outs
leave
cmp
mov
xchg
mov
adc
mov
xor
out
sbb
setns
mov
lock
cmc
push
xchg
pop
loop
fdiv
mov
mov
jmp
xchg
pop
cmp
cmps
pop
clc
neg
js
fidivr
xchg
add
mov
ret
repz
dec
sub
mov
sti
(bad)
cmp
test
and
xchg
mov
sbb
jb
add
jnp
inc
push
mov
imul
inc
sub
adc
daa
aam
add
cwde
ret
ins
push
jle
sbb
push
mov
push
jmp
pop
cs
das
call
inc
xchg
loop
(bad)
sub
inc
(bad)
stc
imul
fidiv
pop
or
femms
scas
dec
dec
cmc
jmp
jno
rcr
sub
inc
push
(bad)
int3
outs
cmp
or
lahf
into
mov
dec
repnz
fs
nop
mov
cmp
jae
imul
cmp
(bad)
or
inc
jnp
ja
(bad)
rcr
push
jno
aaa
push
inc
dec
mov
lods
jae
leave
and
shr
into
add
call
retf
xor
mov
xchg
jnp
stos
push
aam
or
push
fmulp
jge
inc
mov
mov
das
mov
sub
mov
cmp
xor
cmp
and
sub
mov
rol
jo
inc
mov
sub
add
sbb
sbb
jmp
and
pop
aad
(bad)
outs
dec
add
cmp
or
jecxz
enter
fisttp
fidivr
pop
add
jne
cmp
mov
xchg
cmp
call
jb
aas
xor
bound
cmp
aaa
scas
arpl
popf
add
add
jmp
xor
cli
cdq
test
imul
mov
fst
and
das
xor
outs
push
mov
retf
rcl
mov
(bad)
push
mov
lea
(bad)
scas
mov
ja
in
ins
movs
push
inc
jno
cld
sbb
das
dec
xchg
adc
xchg
call
or
dec
cld
dec
pop
les
mov
or
pop
cmps
scas
xor
jb
retf
pop
sti
lods
adc
add
ret
push
xlat
ins
imul
add
mov
pop
pop
std
jl
jmp
cmp
cmp
pop
mov
ret
dec
push
les
mov
pusha
retf
push
mov
sti
and
daa
enter
cld
mov
dec
xchg
lock
repnz
cdq
gs
push
rcr
mov
cmp
mov
inc
(bad)
popf
inc
and
addr16
and
mov
jge
shl
repz
inc
sti
cwde
in
nop
xchg
std
push
outs
add
sub
mov
arpl
jbe
or
or
daa
or
add
popa
retf
dec
(bad)
scas
ret
adc
scas
cmp
nop
fld
lods
add
jle
mov
push
mov
and
cmp
pop
bound
hlt
push
pop
mov
and
mov
dec
fistp
pusha
and
inc
neg
mov
sahf
jmp
push
push
imul
mov
js
xlat
out
mov
push
out
sub
mul
imul
mov
fbstp
mov
adc
sub
mov
ins
aaa
aaa
bswap
xor
(bad)
ss
and
mov
in
mov
cdq
mov
ins
inc
mov
mov
lods
and
(bad)
add
leave
jbe
sti
jbe
test
and
jns
xor
push
cs
push
mov
and
xor
pop
addr16
outs
rol
addr16
pop
pop
jnp
xchg
jecxz
rcr
jbe
test
lds
pop
das
push
cs
jo
into
xchg
outs
inc
cmp
rol
iret
bnd
aas
shr
push
in
inc
mov
ja
scas
addr16
dec
call
test
dec
jbe
pop
imul
inc
jg
fild
dec
lds
or
retf
ret
repz
gs
mov
mov
mov
and
lahf
hlt
mov
lds
(bad)
mov
hlt
cmp
movs
mov
jecxz
mov
mov
mov
(bad)
std
push
movs
imul
mov
fdivr
mov
(bad)
dec
lods
mov
fwait
stos
push
cmp
push
outs
cmp
jge
jp
jno
sbb
shr
(bad)
int3
ror
js
sbb
or
pusha
push
fistp
imul
das
in
(bad)
std
(bad)
cmps
push
xchg
xor
popa
or
aaa
mov
retf
inc
xchg
in
dec
cmps
aaa
aam
or
cmp
inc
fst
mov
(bad)
pop
dec
or
pop
enter
pop
xor
mov
mov
ins
out
lds
loope
pushf
sub
push
fwait
je
cmp
and
int
call
sbb
xchg
call
xchg
aam
mov
movs
jmp
mov
dec
shl
sub
xchg
xor
mov
xchg
xor
aaa
mov
pop
rcr
(bad)
xchg
mov
test
call
mov
arpl
stos
(bad)
dec
push
hlt
mov
rcl
jmp
or
or
and
daa
push
pusha
lods
dec
pop
pop
fwait
jg
shl
hlt
out
retf
add
or
inc
sti
inc
(bad)
push
adc
int3
inc
neg
mov
repz
test
xchg
iret
fcmovbe
add
cmps
retf
sub
les
and
cmc
movs
popa
ror
mov
cli
xor
nop
mov
pushf
pop
xchg
mov
pop
push
pop
enter
mov
or
jno
(bad)
jmp
xchg
cmp
imul
int
mov
fcmovb
lds
mov
cdq
lods
pusha
lods
rol
fnstcw
or
mov
xlat
xor
sahf
das
dec
inc
stos
adc
into
and
inc
xchg
and
dec
iret
clc
aad
fdivr
mov
mov
xchg
mov
in
call
test
jnp
dec
push
add
data16
jge
dec
jge
int
sahf
sub
adc
cmp
add
mov
and
cld
imul
out
int3
add
aam
inc
jb
mov
add
dec
xchg
push
cmp
push
ja
mov
repnz
sbb
push
jno
pusha
adc
aam
mov
jge
test
push
mov
xor
mov
test
outs
fidiv
dec
call
xlat
cmp
add
icebp
adc
push
outs
in
jbe
sbb
mov
pop
inc
mov
iret
xchg
sub
fs
lahf
cdq
mov
lds
pop
repz
inc
xchg
dec
xor
or
add
call
mov
jo
or
fnsave
add
out
mov
pop
daa
mov
neg
rol
int3
push
cli
cmc
cmp
out
cmp
push
fiadd
sub
into
test
in
mov
outs
int3
arpl
and
data16
or
retf
push
jno
(bad)
dec
adc
pop
ja
movs
clc
arpl
sti
or
xor
or
xor
aam
in
mov
jno
mov
ss
rol
push
lahf
mov
add
fild
iret
retf
adc
loopne
into
xchg
test
rcr
fwait
imul
in
xor
clc
popa
or
cmp
lods
jno
mov
int
sbb
inc
xor
bound
test
jmp
pushf
pop
jne
jb
cli
mov
ret
ret
add
test
mov
lds
enter
cmp
rol
ins
into
and
retf
(bad)
jmp
nop
ss
jb
lahf
into
and
sti
scas
mov
push
fiadd
nop
add
cmps
dec
movs
sbb
cli
repz
ror
lahf
xor
sub
xchg
adc
dec
push
or
jecxz
psubsw
mov
or
mov
push
cmp
sbb
xchg
(bad)
in
das
or
sahf
xchg
lock
dec
ficomp
push
je
jge
cs
cmp
scas
cwde
ret
ret
outs
test
inc
les
mov
push
xlat
mov
scas
sbb
push
adc
mov
xchg
loope
mov
jno
daa
add
out
add
bound
dec
push
clc
inc
jmp
inc
jmp
arpl
je
in
jmp
aad
cwde
stos
in
add
mov
adc
mov
repnz
xchg
cwde
or
sub
cdq
sahf
cmp
stos
dec
lahf
sbb
inc
call
pop
dec
sub
cmps
jbe
jno
icebp
ins
inc
sub
jbe
xor
adc
in
or
stc
or
sub
in
inc
ins
sbb
lods
pusha
push
mov
bnd
mov
inc
push
xchg
mov
call
loopne
dec
aam
mov
add
pop
mov
ret
stos
sub
push
push
mov
or
mov
mov
and
push
or
or
push
sub
cmp
xchg
push
adc
(bad)
lock
dec
mov
or
imul
fld
dec
mov
inc
mov
dec
adc
dec
push
lods
loopne
shl
dec
add
jne
pop
scas
ds
jl
and
pop
xchg
cmps
loopne
ins
jb
push
xor
sub
jno
pop
mov
imul
iret
mov
es
loope
fcom
inc
push
inc
xchg
xchg
push
push
pop
pop
add
xlat
mov
mov
out
pop
cld
xor
mov
dec
fxch
retf
xchg
jnp
mov
rcl
adc
mov
xchg
test
push
add
push
dec
jno
fidiv
bound
mov
xor
or
inc
pop
adc
and
out
jmp
out
leave
dec
adc
arpl
dec
pop
sub
sub
sub
pop
push
movs
scas
sbb
push
jmp
ror
xchg
into
(bad)
in
mov
aaa
inc
mov
ja
daa
stos
jge
sahf
mov
lods
clc
mov
xor
jmp
mov
and
and
cmp
int3
jg
or
xchg
add
inc
mov
dec
retf
stos
ins
jo
mov
loopne
dec
jo
or
leave
pop
sbb
aad
ds
mov
push
hlt
stos
in
inc
dec
xchg
aad
dec
out
fwait
cdq
sti
add
repnz
fld
sahf
xchg
imul
inc
in
jne
xchg
xlat
retf
adc
addr16
outs
cmps
sub
fisub
sbb
imul
xor
pop
sbb
nop
and
push
xor
jl
(bad)
mov
int
sbb
cmp
sub
(bad)
push
mov
(bad)
adc
into
rcl
xchg
dec
mul
push
sub
cmps
out
fstp
mov
push
xchg
arpl
cmc
lar
div
aaa
adc
aaa
lahf
sub
cmp
and
loopne
add
or
xchg
jge
sbb
mov
ret
push
pop
das
gs
pop
jno
out
pop
nop
std
push
inc
and
jmp
or
repz
mov
jmp
jl
shl
and
xlat
push
aaa
pop
sbb
(bad)
mov
rol
dec
mov
dec
xchg
pop
(bad)
cmp
and
sti
call
xor
xor
mov
jno
xor
and
repnz
cwde
xchg
pusha
or
pop
and
mov
cmp
jmp
test
(bad)
mov
add
cwde
push
jge
xor
std
mov
movs
leave
shl
cmp
xchg
push
mov
mov
xlat
lods
mov
fs
mov
movs
pop
test
and
out
std
and
cmp
int3
arpl
test
pop
xchg
rcl
or
cli
loopne
adc
sar
popa
ss
push
cli
aas
daa
adc
sub
scas
mov
jl
mov
or
mov
jns
adc
push
stos
mov
daa
aam
xor
push
test
dec
pop
imul
fwait
pusha
mov
mov
(bad)
jmp
cmp
mov
sti
int3
mov
std
mov
ret
push
cmps
jl
(bad)
pushf
mov
call
fst
pop
sbb
xor
scas
nop
imul
dec
pop
dec
(bad)
sbb
mov
pop
fisub
or
in
pop
(bad)
dec
mov
mov
ror
jno
scas
mov
daa
pop
lods
mov
xor
test
cmp
sbb
in
scas
mov
pop
cmp
icebp
cmp
out
xchg
out
mul
or
xchg
(bad)
sub
rcl
js
imul
sbb
cwde
int3
xor
sub
mov
movups
inc
jne
test
sub
mov
and
pop
push
fidivr
shl
clc
cld
xor
lahf
jg
sbb
loopne
or
pop
jbe
cmp
and
cdq
inc
arpl
mov
cmp
das
adc
inc
xchg
push
inc
cmp
sub
dec
mov
fsubr
(bad)
dec
xor
sub
cmps
inc
push
loope
pop
jnp
mov
xchg
test
inc
sar
adc
mov
fld
retf
std
fcom
inc
push
add
adc
pop
mov
pop
mov
popf
int
mov
add
jp
hlt
fs
pop
ror
in
sbb
shr
cmp
call
ins
in
shr
adc
hlt
pusha
lahf
lahf
cld
das
ins
mov
nop
xor
iret
dec
add
mov
and
lods
daa
cli
lods
and
rcl
out
outs
dec
sub
push
sub
jne
ins
cmps
std
rcr
rcr
(bad)
lahf
dec
fs
stc
in
pop
sub
pop
sar
sbb
xchg
call
sub
ins
mov
imul
data16
lods
aas
ret
mov
xchg
mov
sub
sub
outs
lds
and
sub
(bad)
das
int
push
inc
and
sub
sbb
add
sbb
cs
div
adc
out
mov
sti
or
or
adc
xchg
fwait
or
or
dec
push
push
mov
out
adc
pop
sub
cmc
or
push
ret
or
or
dec
sbb
cld
pop
pop
mov
popa
sbb
mov
or
(bad)
clc
arpl
sub
push
dec
xchg
xchg
jmp
mov
jns
inc
mov
sbb
jo
jno
jae
sbb
std
dec
mov
adc
imul
leave
es
mov
and
dec
sbb
and
mov
dec
stos
adc
sahf
bound
cdq
sub
pop
out
fistp
aam
xchg
add
fdiv
cmp
pushf
jb
push
stos
lahf
enter
xchg
dec
mov
stc
and
jp
icebp
ins
add
cli
adc
pop
mov
adc
daa
outs
mov
jno
mov
popf
mov
and
(bad)
cmp
jmp
cdq
dec
movs
inc
pop
xchg
jmp
xchg
or
(bad)
xchg
aas
sub
mov
mov
data16
aaa
pop
sub
mov
mov
add
fwait
es
dec
mov
push
hlt
jb
loope
popf
scas
mov
xor
xchg
pushf
icebp
fstp
pop
jb
jl
dec
push
jne
xor
fstp
(bad)
mov
rol
sub
dec
xor
in
fcomp
addr16
xor
ret
jp
dec
shl
lods
test
cdq
lods
mov
aaa
xor
mov
jg
in
adc
mov
cmps
pushaw
cmp
mov
icebp
or
cmp
adc
dec
and
lds
ret
jae
and
test
pop
retf
rol
ror
imul
(bad)
push
loop
mov
fwait
(bad)
xchg
mov
xchg
jmp
cmp
ret
fidiv
pop
call
mov
add
ja
(bad)
adc
lock
push
and
or
daa
or
int
pop
xor
push
cld
imul
clc
or
out
in
xor
add
into
mov
push
loope
xor
movs
popa
xchg
push
xor
into
cli
cwde
scas
loope
jge
fs
loopne
ret
(bad)
and
(bad)
cmp
(bad)
js
push
cld
(bad)
mov
xchg
pop
mov
sahf
fsub
or
mov
and
push
xor
pushf
cs
(bad)
stos
aam
jns
mov
mov
sbb
cmps
or
cmp
fidiv
sbb
aaa
ss
(bad)
push
xchg
fdiv
add
ret
ins
lds
inc
cmps
ins
leave
fucom
jbe
cwd
pop
push
fild
sub
add
aam
mov
cdq
fwait
call
mov
shl
mov
inc
fcom
fnstcw
lock
or
mov
rcr
xor
push
mov
daa
fdivr
loop
xchg
dec
push
in
inc
je
pop
mov
sbb
loop
sbb
aam
mov
out
and
cmp
mov
mov
jnp
sub
add
shl
or
loopne
pop
inc
add
ds
rcl
int
and
add
fwait
mov
dec
stc
sub
hlt
ins
es
mov
dec
mov
push
xchg
jbe
sub
rcr
jg
xor
dec
retf
lds
pusha
icebp
xor
in
add
imul
out
jae
push
ss
adc
cli
(bad)
adc
fiadd
xchg
outs
lods
ret
rcl
xor
sbb
mov
xchg
jp
jnp
inc
or
pop
jne
push
adc
mov
cmp
inc
dec
movs
retf
dec
aas
jo
popf
inc
add
enter
popf
mov
addr16
hlt
pop
mov
jg
lea
jp
jecxz
test
fcomi
sub
mov
push
jnp
enter
xchg
mov
mov
jg
fcmovne
sbb
fimul
movs
sbb
adc
retf
inc
jl
cwde
clc
or
fcom
leave
jno
inc
push
dec
int3
xchg
cmps
mov
add
and
cmovg
or
inc
in
push
jo
jo
ds
das
pop
cmp
cmc
dec
adc
pop
leave
xchg
pop
push
adc
addr16
pop
jo
test
inc
jb
test
sub
js
pop
test
out
jnp
es
(bad)
loope
xor
jo
int3
sub
mov
out
jnp
outs
(bad)
int3
rol
jae
imul
jne
mov
inc
cmp
xchg
mov
jb
test
iret
and
ret
cmps
add
sub
push
ss
jle
call
xchg
xor
ds
xor
dec
in
adc
outs
retf
out
stos
push
sub
pusha
sbb
pop
xchg
jnp
dec
adc
daa
pusha
add
cld
add
popf
jns
jge
cmp
(bad)
pop
sbb
inc
call
js
push
stos
sbb
fisttp
out
push
mov
pop
aam
enter
push
not
mov
jmp
sub
out
ins
xlat
dec
out
clc
mov
imul
push
mov
cmp
ja
pop
rcl
mov
jnp
pushf
inc
mov
movs
(bad)
or
cmp
test
inc
and
inc
or
aaa
push
inc
lds
adc
cmp
xor
std
mov
call
or
int
outs
jb
mov
pop
jg
movs
sti
sbb
add
cmp
pop
add
and
jg
xchg
repz
loope
sahf
dec
adc
or
push
iret
addr16
mov
cmp
pop
sub
call
adc
sub
push
sub
iret
loopne
ret
(bad)
mov
jmp
aad
pop
mov
inc
fwait
out
lock
jl
mov
fstp
push
ret
repz
mov
lods
add
(bad)
mov
cmps
mov
xchg
mov
mov
jmp
xor
loope
and
mov
xchg
(bad)
push
xchg
lods
mov
mov
and
sub
pushf
xor
lods
mov
jmp
inc
(bad)
and
loope
xor
ret
shr
xchg
xor
mov
mov
inc
or
mov
icebp
mov
sti
pop
mov
pop
fisubr
pop
loope
arpl
mov
and
call
daa
or
arpl
outs
(bad)
add
fiadd
addr16
sub
sar
mov
push
call
lods
cli
sbb
retf
dec
nop
ret
ins
(bad)
mov
cli
lds
mov
mov
out
push
lahf
retf
mov
int
jns
sub
js
in
jle
popf
inc
push
mov
dec
xor
dec
imul
je
dec
mov
add
jle
xlat
gs
xor
xor
sbb
jnp
jne
mov
out
xchg
in
lea
mov
sbb
inc
and
les
or
xor
sti
inc
sbb
mov
inc
retf
jae
xchg
enter
push
inc
dec
(bad)
mov
pop
(bad)
push
xchg
je
jecxz
xchg
scas
clc
mov
pop
mov
push
cmp
cmp
xchg
jne
jnp
dec
loopne
xor
scas
aad
aas
xor
rcl
dec
or
dec
sar
push
xchg
jg
sahf
xchg
jbe
mov
icebp
lods
dec
jmp
hlt
jmp
or
pop
(bad)
test
cmps
(bad)
and
xchg
xor
sub
(bad)
sahf
xor
dec
xor
xchg
rcl
inc
in
mov
retf
(bad)
jle
shl
cmc
add
rol
scas
mov
sar
in
sub
ret
push
jmp
xchg
loop
push
pop
call
fldenv
(bad)
retf
cdq
lods
inc
mov
cmp
repz
inc
cmp
jbe
scas
inc
movs
push
icebp
lea
sub
push
fwait
pop
push
xchg
out
xchg
icebp
mov
jmp
push
xor
dec
dec
in
xchg
lods
mov
test
adc
sahf
jns
popf
jae
addr16
pop
aad
mov
pop
cmp
aam
loope
push
adc
xor
in
xchg
jmp
add
adc
xchg
cmp
in
in
fs
sahf
loope
test
xor
dec
jmp
cmps
jno
mov
nop
sbb
pop
stos
stos
mov
rsqrtps
mov
out
int
xlat
mov
xor
sbb
mov
cmp
rcr
(bad)
sti
outs
hlt
es
ins
push
jmp
cs
push
retf
ins
jmp
xor
in
push
or
outs
xchg
mov
adc
mov
mov
in
ss
inc
pop
sub
inc
test
dec
stos
in
mov
and
fisub
push
mov
(bad)
xor
mov
scas
xor
ins
push
leave
sbb
retf
dec
jmp
sbb
aad
jg
dec
aaa
mov
imul
mov
xchg
mov
jns
xor
sub
cld
cmp
addr16
repz
xlat
push
arpl
mov
sbb
fcmovnu
xchg
in
xchg
aam
sbb
xor
xchg
dec
jne
fist
ret
scas
call
pop
das
cmp
ins
stc
shl
int3
pop
xchg
sbb
in
jae
out
scas
or
or
mov
mov
aam
shr
enter
mov
enter
call
cmps
xchg
adc
jbe
pop
jle
cs
rcl
pop
repnz
scas
xchg
fistp
jbe
and
lods
fwait
mov
fld
jp
xchg
and
pop
arpl
xlat
push
jb
cs
adc
repnz
hlt
shl
cmp
pop
dec
setno
jo
stc
je
jp
or
lods
push
lock
fcmovnbe
mov
movs
xor
fnstcw
dec
inc
cmp
repnz
pop
sub
inc
dec
test
jnp
push
mov
lds
add
jno
pop
icebp
sbb
daa
or
or
data16
mov
movs
ret
or
xor
xchg
stos
mov
inc
test
stc
mov
add
mov
outs
call
mov
ficom
pop
es
scas
out
adc
movs
lods
push
or
xchg
call
push
daa
sti
push
cmp
sbb
(bad)
push
dec
jmp
adc
test
adc
cdq
retf
retf
mov
adc
push
in
push
pop
inc
pop
dec
(bad)
in
gs
lahf
add
mov
retf
stos
or
or
mov
daa
loope
add
loopne
lock
xor
ret
add
adc
push
cli
mov
push
daa
gs
sbb
jns
adc
lahf
movs
(bad)
xchg
hlt
xchg
mov
and
jmp
stos
jmp
mov
inc
ja
cmp
xchg
fwait
sahf
movs
(bad)
ficom
lds
push
or
push
and
int
dec
jbe
and
cmp
loope
cmp
call
sbb
mov
retf
mov
mov
add
pusha
arpl
rcl
adc
scas
pushf
jns
xor
pop
sbb
je
and
adc
sbb
cmps
push
lea
inc
lahf
ins
movs
shr
sub
bound
mov
mov
cmps
cwde
mov
addr16
jge
mov
sbb
test
movs
shl
gs
or
or
dec
and
xor
outs
(bad)
sub
mov
je
add
dec
pcmpgtd
and
mov
xchg
ds
add
loopne
sub
jmp
push
or
cmp
or
fmul
lods
jno
mov
mov
push
out
jge
sbb
std
cld
cmp
mov
je
mov
add
and
push
out
push
sti
sbb
xchg
pop
pop
je
popa
xor
jmp
mov
movs
mov
inc
stc
inc
jae
adc
jmp
pop
adc
int3
pop
in
push
cmps
or
mov
adc
div
call
mov
cs
popf
add
and
in
inc
int3
pop
mov
std
xchg
mov
ins
mov
mov
xor
std
int3
ja
add
lock
jl
cli
daa
je
mov
fisttp
addr16
fwait
(bad)
movs
retf
push
stos
add
imul
and
ins
fisttp
cmps
cmps
mov
push
mov
arpl
fmul
imul
ds
mov
(bad)
iret
inc
and
adc
inc
sub
and
sub
mov
mov
test
popf
cmp
mov
push
popf
outs
sub
cmp
sub
ss
mov
or
mov
ret
push
dec
leave
mov
call
cmp
mov
and
leave
pop
mov
xlat
or
add
mov
int3
xchg
loopne
aam
push
dec
loop
mov
mov
enter
jne
mov
inc
retf
int
js
mov
adc
mov
adc
pushf
gs
out
xor
inc
mov
mov
in
sar
out
add
and
add
sub
call
jg
sub
rol
dec
movs
sub
sub
sub
and
xchg
ins
jge
enter
dec
stos
jns
ds
fisttp
pop
les
in
add
pop
and
jae
(bad)
fisttp
lods
add
and
and
mov
not
xchg
shl
js
retf
push
xor
pop
add
mov
fstp
pop
sub
fisttp
add
(bad)
xor
add
lods
std
xchg
mov
lods
fisub
cli
jmp
jg
mov
jle
mov
test
jg
jecxz
jnp
push
add
imul
xor
jmp
popa
cld
pop
dec
mov
xor
call
push
out
cwde
dec
or
push
cmp
add
push
mov
push
bound
mov
mov
popf
in
inc
loopne
into
push
push
mov
dec
and
gs
pop
in
cli
add
sub
jnp
inc
jl
mov
jmp
sub
xchg
inc
mov
daa
push
retf
mov
std
mov
push
jecxz
mov
shl
dec
ret
cmp
sti
push
push
js
or
leave
jno
pop
jne
clc
ret
and
cmove
hlt
loopne
cmp
clc
and
inc
mov
dec
hlt
lahf
sbb
cmp
cmps
enter
push
jmp
movs
ins
add
cmp
push
aam
out
shl
outs
into
push
outs
or
and
mov
fld
aad
mov
jle
lea
jle
ret
inc
std
jmp
mov
retf
jp
shl
jns
leave
mov
rol
out
enter
or
fiadd
or
sub
jmp
cli
in
out
fcomp
jmp
adc
popf
(bad)
inc
in
enter
adc
aam
and
jmp
xchg
sbb
leave
out
inc
int3
ja
pushf
mov
mov
lods
push
les
outs
imul
or
xor
pop
or
jo
xor
dec
out
sbb
pop
mov
in
sbb
(bad)
push
jg
scas
inc
in
mov
and
fadd
mov
push
(bad)
cmp
add
or
or
and
mov
inc
pop
mov
add
add
(bad)
sub
mov
dec
pop
sbb
push
and
cwde
jo
xor
mov
fbld
test
pop
test
popf
adc
movs
gs
or
inc
and
test
in
sbb
mov
add
add
fcom
adc
adc
call
int
imul
mul
cmp
out
ret
mov
test
push
outs
or
out
sub
fcmovne
mov
in
xor
push
and
xchg
push
push
(bad)
aam
dec
jb
cmc
stos
hlt
fnstsw
nop
(bad)
pop
pop
mov
push
mov
push
adc
and
add
push
pop
sub
pusha
jbe
add
mov
loop
ins
cmps
pop
inc
jge
cli
inc
inc
xor
unpcklps
sub
sar
pop
inc
scas
rol
aaa
adc
cmp
cmps
or
je
test
jl
daa
leave
adc
sbb
mov
sbb
rcr
sbb
gs
jle
pop
popf
sub
xor
mov
jae
push
mov
es
pop
mov
cmps
xchg
inc
sbb
(bad)
push
cmp
push
pop
mov
mov
xor
adc
sbb
xchg
js
dec
hlt
pushf
fidivr
pop
rcl
pop
sbb
jno
jmp
gs
pop
inc
and
mov
setp
outs
cmc
xchg
xor
fnsave
mov
dec
shl
mov
sub
and
jb
popa
(bad)
call
jle
mov
lock
fmul
xor
mov
mov
mov
cli
dec
push
push
mov
mov
pop
lea
inc
sub
fdivr
sub
mov
mov
pop
call
inc
shr
loop
test
cli
test
bound
ins
jnp
or
mov
test
in
icebp
push
mov
mov
movs
sbb
enter
xor
xchg
dec
push
out
jmp
push
loopne
dec
retf
xchg
ins
ins
inc
icebp
das
mov
inc
clc
mul
ins
cmp
xchg
sbb
or
pop
xor
mov
xchg
mov
mov
es
call
or
(bad)
shl
mov
pop
push
and
pop
adc
repnz
and
mov
pcmpeqd
push
inc
mov
jmp
or
push
mov
jl
jo
pop
push
into
jge
iret
jecxz
popf
shl
rcl
outs
push
pop
(bad)
cmp
movs
jne
pop
sbb
mov
sbb
mov
das
mov
lahf
lock
icebp
add
(bad)
mov
int3
push
pop
dec
inc
cmps
jp
xor
and
sub
das
mov
xor
seto
in
jge
and
sbb
and
xchg
mov
mov
xchg
stos
or
sub
aam
std
or
scas
sub
lea
neg
fisttp
dec
sub
jecxz
loopne
leave
dec
push
pushf
idiv
addr16
and
sbb
or
xor
jge
inc
fcomp
sti
shl
inc
data16
mov
cmp
or
daa
dec
xor
or
out
and
push
or
mov
mov
and
push
dec
test
cmp
ja
call
loop
push
ror
aas
fidivr
int3
dec
aaa
and
std
cmps
xchg
int3
dec
ss
cmps
add
imul
fs
sbb
outs
and
pop
sub
iret
jno
inc
pop
repz
pop
retf
inc
out
fs
pop
aad
inc
rcl
lds
push
sub
test
ins
fstp
jmp
inc
sbb
sti
retf
or
xchg
jne
out
lea
lahf
shr
enter
inc
int
or
rep
jns
jo
mov
push
xchg
cmp
gs
pop
shl
loope
out
leave
outs
inc
jmp
adc
icebp
or
xor
lahf
ds
shl
addr16
add
xor
dec
and
and
repz
cli
vpsubusb
bound
sbb
scas
adc
xchg
into
mov
sti
xor
or
jl
mov
pop
outs
jb
jbe
adc
imul
sub
jmp
sub
xchg
mov
jmp
sub
add
pushf
push
scas
inc
cmps
lods
push
mov
adc
sub
and
scas
aam
or
retf
popa
push
jo
inc
and
and
mov
jmp
dec
xor
sbb
(bad)
inc
outs
rcr
mov
loop
push
jmp
rol
xchg
jno
int3
dec
mov
jo
adc
jmp
xchg
pop
xor
imul
lods
sbb
xchg
ret
dec
cmp
xor
or
adc
add
arpl
popa
xor
loopne
ds
xchg
mov
shr
pop
xchg
sbb
xor
std
int
mov
pop
and
lds
sahf
xchg
xor
pop
add
xor
jmp
sub
add
out
push
adc
xchg
inc
pop
loope
inc
sub
test
sti
jmp
xor
div
ja
nop
mov
call
sub
pop
and
(bad)
fldcw
aas
add
mov
nop
lock
ins
and
fdivr
lea
sbb
jns
jno
inc
xor
jg
sub
cmp
dec
mov
std
add
cli
mov
add
sar
push
xor
arpl
push
or
ja
mov
mov
xor
pusha
or
out
mov
mov
into
dec
rcr
mov
mov
mov
cmp
out
pop
mov
dec
inc
push
in
mov
cmps
dec
std
cmps
outs
sar
dec
jmp
std
mov
cmp
push
ja
fwait
shl
aam
or
or
dec
stos
mov
fstp
in
xchg
mov
sbb
and
inc
mov
pop
push
call
cwde
sbb
mov
stos
cwde
mov
jnp
jle
mov
dec
and
mov
mov
rcr
dec
adc
add
mov
daa
jns
pusha
inc
jl
push
sub
mov
lods
mov
mov
mov
xchg
popf
clc
xchg
jbe
dec
daa
mov
xlat
inc
rcr
pop
cs
mov
jge
movs
out
mov
sbb
inc
xor
daa
push
neg
and
inc
mov
imul
test
jnp
in
push
xchg
sub
mov
sbb
out
adc
push
cli
or
sub
test
mov
adc
mov
cld
inc
xchg
dec
mov
and
add
ins
mov
lea
mov
xchg
mov
inc
xchg
push
jle
add
fldenv
jno
inc
sub
popa
fmul
dec
out
mov
push
adc
mov
sbb
xor
test
xor
repnz
leave
and
mul
jl
xchg
cmp
scas
mov
xchg
pusha
je
cld
or
popa
sub
mov
mov
add
cmp
retf
out
pop
inc
jno
mov
xor
ror
pop
sar
mov
push
aad
jge
aas
inc
lock
ss
dec
outs
ffreep
jb
xchg
or
scas
aaa
ret
stos
loopne
dec
add
push
add
or
ja
jne
es
jp
mov
shr
xchg
jns
mov
aam
lock
pop
jnp
cmps
neg
mov
jecxz
mov
call
push
unpckhps
ds
outs
xchg
in
fdivrp
shl
popf
xor
sahf
inc
jmp
leave
inc
sahf
movs
lea
jnp
clc
dec
sub
test
lds
sub
lea
inc
ins
dec
mov
push
inc
mov
cmp
test
daa
fbstp
cdq
jno
adc
mov
pop
daa
cmc
in
mov
push
fisttp
pop
mov
mov
fld
hlt
(bad)
xchg
mov
mul
fidivr
mov
mov
jecxz
inc
ja
mov
aaa
add
sti
dec
pop
pop
stc
movs
repz
add
in
xchg
fidiv
jg
call
mov
(bad)
loop
cli
push
adc
in
(bad)
pop
jbe
paddsb
cmp
add
or
push
push
mov
rep
(bad)
adc
mov
dec
xchg
pushf
jnp
pop
shl
lock
pushf
imul
sub
push
jle
jl
stos
cmp
adc
in
rcl
mov
push
sbb
sti
xor
bnd
dec
pop
aad
dec
clc
mov
sahf
aam
stos
and
xor
iret
inc
and
mov
in
add
pop
adc
(bad)
cmp
xchg
std
push
aam
popf
gs
and
shl
call
xor
mov
fcmovnbe
pop
pop
push
cmp
sbb
bound
aaa
aad
mov
int3
dec
test
mov
shl
push
pop
jbe
jb
jae
cmps
lock
inc
jl
mov
xor
mov
bound
and
shl
mov
xor
cdq
stc
test
pushf
dec
dec
retf
cdq
and
daa
jle
cs
call
mov
inc
ins
fnstcw
idiv
mov
mov
aam
es
outs
(bad)
aas
inc
dec
ret
imul
leave
mov
inc
fs
add
cld
mov
xchg
or
mov
shl
push
lock
pop
fst
or
retf
jns
xrelease
xor
inc
jg
pop
lods
sti
jno
ja
jno
and
mov
inc
xor
pop
out
jmp
jg
imul
xor
or
pop
xor
push
cmp
xchg
sbb
jno
sbb
ja
hlt
or
(bad)
mov
bnd
dec
fwait
push
dec
inc
mov
cli
cmp
stc
test
mov
xlat
jae
js
ror
pop
mov
popf
jl
movs
sbb
push
(bad)
jmp
mov
test
push
mov
sbb
popf
int
mov
or
shl
int
ins
imul
call
jnp
push
cmps
push
xchg
xor
pop
xchg
clc
mov
jmp
push
outs
jno
add
or
mov
jmp
mov
pop
sub
fld
imul
lds
push
mov
test
rcl
sar
dec
mov
sbb
pop
push
mov
jg
push
les
adc
addr16
adc
push
pop
dec
push
push
pop
dec
and
sar
aas
mov
pop
(bad)
test
pop
or
lock
pop
xchg
mov
ss
jne
cmp
xchg
pop
xor
add
inc
clc
pusha
and
ins
cli
add
mov
mov
mov
std
cmp
pushf
lods
sub
fstp
out
mov
cmp
mov
mov
rcr
in
outs
enter
es
mov
fst
add
ja
aaa
aam
aam
pop
daa
test
fs
in
adc
mov
sub
(bad)
sub
dec
leave
xor
lods
xchg
hlt
in
xchg
sbb
shl
aam
hlt
shl
jge
dec
ss
retf
fst
neg
inc
call
mov
adc
adc
mov
cmp
call
mov
retf
cmps
mov
in
xor
dec
adc
adc
(bad)
jl
or
imul
push
push
lods
xor
cmps
add
cmc
mov
outs
enter
nop
lods
shl
mov
mov
nop
test
sar
popf
fild
cmp
mov
mov
jp
mov
pop
sbb
loopne
mov
cmp
inc
sar
jae
adc
int3
repz
xlat
loope
movs
outs
scas
inc
dec
pop
jg
mov
inc
mov
ror
mov
or
mov
adc
and
mov
adc
push
popf
push
inc
fsub
jp
pop
bound
test
push
add
cmp
dec
lea
out
imul
scas
fcomp
lds
lds
pop
mov
mov
adc
jns
(bad)
mov
shl
push
mov
pop
adc
adc
fsub
test
cwde
pop
mov
arpl
adc
sahf
or
jecxz
push
pop
push
push
mov
(bad)
jp
inc
es
mov
xchg
jb
or
call
clc
ds
inc
cmp
in
aas
imul
mov
aas
jle
push
clc
pop
mov
push
add
or
mov
dec
jecxz
imul
and
pop
push
add
cmps
sbb
push
lock
sbb
push
xchg
popf
inc
fcom
lahf
pop
enter
arpl
xchg
mov
je
and
inc
xlat
ins
adc
mov
mov
repnz
mov
xchg
bound
adc
lea
shl
sbb
mov
push
sub
cmp
aam
dec
xor
pusha
add
lahf
mov
push
or
push
mov
push
pop
dec
jecxz
aaa
xchg
jne
add
sub
xor
or
or
push
retf
aas
fwait
sub
adc
xor
push
sbb
mov
jno
mov
sub
iret
jb
inc
pop
mov
mov
sbb
jge
jl
test
dec
xchg
sub
pop
jge
popf
sbb
rcr
mov
not
fidivr
pop
out
leave
inc
and
aas
int
lods
jp
jecxz
sub
or
lahf
push
ins
and
mov
inc
movs
mov
cli
pop
and
or
fist
hlt
add
cmp
nop
sub
sbb
imul
add
mov
in
sub
cmps
mov
cmp
push
sub
call
jnp
jmp
add
cmps
sbb
cmp
fmul
dec
xchg
mov
retf
fstp
cmp
xor
int3
movs
sub
repnz
mov
js
or
add
mov
mov
jno
mov
xchg
into
out
js
addr16
push
int
jo
test
sbb
fisubr
pop
ja
pop
out
dec
fwait
dec
aam
fisttp
cmp
cmp
enter
addr16
js
cmp
adc
mov
mov
(bad)
sbb
test
mov
gs
pusha
pop
add
or
lds
xchg
aam
ins
pop
loop
sub
xchg
xchg
dec
mov
inc
sub
xchg
inc
call
mov
cli
cmp
test
xchg
test
xor
call
inc
loop
xchg
sbb
int3
pop
dec
pop
adc
ret
xor
scas
sub
daa
xor
add
and
hlt
adc
cmps
pop
and
sbb
xchg
adc
adc
jmp
cwde
loope
inc
sbb
mov
(bad)
fcomp
push
mov
scas
rcr
loop
and
rcr
fist
ror
jns
aad
das
mov
not
fs
mov
jp
pop
xor
adc
mov
adc
stos
mov
imul
test
dec
dec
push
iret
cmps
or
or
mov
mov
xchg
mov
jmp
cmp
ins
js
add
sti
ins
mov
xchg
or
mov
and
mov
xlat
aas
fs
mov
push
movs
es
fwait
gs
loopne
idiv
xchg
ds
mov
cmp
test
lds
and
fsub
inc
jge
(bad)
dec
popa
clc
clc
xor
push
ret
data16
mov
cli
push
ss
adc
fimul
xchg
jmp
inc
cli
in
jnp
add
lahf
add
pop
rcr
or
mov
ret
std
push
mov
sub
and
mul
pop
mov
in
div
push
cmp
inc
mov
cmp
sbb
stos
xchg
push
push
lea
sub
jle
inc
dec
add
(bad)
das
add
stos
xchg
inc
inc
or
push
ror
test
in
fistp
xchg
jmp
add
sahf
jp
test
ret
sub
pop
scas
es
sub
push
scas
daa
es
sub
add
and
mov
test
pop
loop
mov
inc
sbb
rcr
lods
repnz
outs
(bad)
fwait
mov
sbb
std
pop
(bad)
fsqrt
xchg
push
int
mov
xchg
and
push
std
data16
int
ret
por
ret
sbb
dec
int3
jp
lds
add
cmp
(bad)
fwait
in
xchg
sub
and
push
cmp
inc
mov
sbb
and
inc
shl
sub
add
ret
scas
and
and
sbb
or
mov
inc
(bad)
ins
jle
cmp
add
mov
or
mov
cmp
test
mov
and
dec
shl
jmp
inc
inc
adc
ror
bound
jo
aaa
(bad)
mov
(bad)
jge
movs
or
push
rol
inc
test
movs
fidiv
ror
movs
and
(bad)
pop
adc
and
mov
push
clc
xor
sbb
adc
pop
add
xor
test
mov
push
adc
in
aad
and
loope
mov
adc
fild
jne
jg
push
mov
cmp
(bad)
aam
push
adc
test
fiadd
inc
xor
mov
adc
adc
popa
pop
clc
(bad)
movs
xchg
cwde
xchg
out
xor
mov
mov
rcl
push
loope
dec
jle
pop
loope
ret
popf
out
test
js
addr16
es
out
xor
xchg
xor
lds
jns
cmp
mov
pop
sbb
cmp
call
imul
ds
pop
lock
iret
dec
xor
out
jo
(bad)
dec
lea
mov
fs
mov
test
pushf
push
fdiv
and
js
loopne
and
lock
in
inc
movs
fwait
test
shr
xor
mov
es
adc
shl
lea
inc
je
sub
jns
shl
test
inc
out
or
sub
jne
xchg
fwait
push
lods
(bad)
mov
stc
adc
int
xor
cwde
xchg
ror
jp
push
inc
clc
xor
xchg
scas
out
pop
jle
jp
inc
mov
out
stc
adc
movs
push
mov
iret
shl
jo
push
mov
mov
outs
repz
or
aas
aad
stc
dec
dec
jecxz
(bad)
jl
pop
push
or
shl
les
pop
into
sub
jno
in
outs
push
in
add
mov
pop
or
xor
sti
nop
ret
outs
xchg
test
popa
loopne
jg
icebp
pop
stos
sub
add
mov
retf
push
sub
mov
jbe
fcomp
sbb
jbe
xchg
mov
jmp
pop
div
mov
not
in
xor
dec
adc
stos
pop
sbb
cli
or
retf
les
xchg
or
cmc
mov
int
pop
mov
dec
mov
jle
shl
sti
dec
xor
push
xchg
dec
xor
in
(bad)
add
jg
ror
xor
bound
sub
fwait
inc
push
dec
enter
retf
and
(bad)
add
adc
ss
stos
repnz
xor
mov
ffree
scas
sbb
ret
jbe
fsub
aas
dec
pop
adc
cmp
out
mov
mov
fdivr
xor
xchg
sahf
ret
push
(bad)
xchg
into
pop
sbb
cld
mov
daa
mov
lahf
test
test
stos
mov
int
add
arpl
enter
in
mov
or
cwde
in
test
dec
inc
cmps
in
mov
cmp
aas
(bad)
daa
mov
fimul
(bad)
call
sub
rcl
js
adc
out
stc
push
inc
mov
and
imul
jmp
add
jmp
mov
jbe
sbb
cmc
sbb
into
ss
jl
icebp
push
add
cmp
mov
add
inc
xchg
cmp
outs
mov
retf
test
out
mov
cmc
lods
mov
test
in
jmp
and
test
pop
push
jle
pop
std
dec
sub
mov
and
mov
xor
enter
jecxz
cs
sbb
xchg
in
mov
movs
adc
(bad)
(bad)
mov
jne
mov
fs
shl
jmp
adc
stos
mov
outs
les
cmp
lods
push
aam
mov
fadd
mov
scas
and
xchg
adc
pop
sbb
in
retf
repz
(bad)
into
scas
mov
cmp
imul
and
into
shl
and
(bad)
pop
mov
dec
jge
add
ds
push
imul
jge
mov
popf
hlt
cli
repnz
aad
xchg
lods
and
sti
dec
push
aaa
mov
jbe
mov
push
ret
rcr
jns
or
xlat
add
addr16
xchg
inc
dec
sub
stos
mov
aam
loope
aad
cmps
cmp
dec
aad
adc
mov
(bad)
push
sahf
mov
and
hlt
outs
and
enter
sbb
mov
lods
pop
fsubr
js
fwait
ins
bound
inc
ds
js
ins
mov
mov
fs
rol
bound
add
pop
jle
repz
adc
js
sub
inc
sub
push
mov
es
jo
aam
jb
jp
push
mov
jne
sbb
pop
cmp
dec
add
test
mov
adc
pop
cdq
add
aam
adc
addr16
cld
cmp
jge
push
pop
ins
jmp
adc
gs
inc
(bad)
mov
retf
pop
cmp
mov
sub
push
inc
xchg
sub
cmps
xchg
jp
cmc
or
xchg
mov
int
and
fdiv
in
xchg
xchg
outs
pop
lods
fisubr
mov
and
push
addr16
cmp
jmp
loope
stos
xchg
aam
(bad)
mov
aaa
or
pop
jmp
test
inc
xchg
jmp
stos
cdq
and
movs
push
or
push
repnz
gs
loopne
cmp
cmp
or
mov
fnstenv
test
push
popa
adc
fisttp
fdivrp
mov
cmp
pop
pop
or
call
bound
(bad)
push
fs
mov
out
push
xchg
enter
pushf
in
stc
shl
cmp
and
neg
mov
dec
in
sub
pop
faddp
and
cli
sub
push
push
fild
add
jmp
stos
in
pop
push
adc
outs
lods
ins
xor
addr16
xchg
cdq
shr
addr16
lods
fisttp
leave
cmp
push
xchg
repnz
imul
out
xchg
add
imul
jne
ss
call
call
dec
aas
dec
jmp
inc
in
int
(bad)
push
aam
push
popa
pop
fdivr
mov
xchg
mov
scas
add
cmps
retf
lahf
ins
ret
adc
mov
add
jge
mov
pop
(bad)
jns
out
imul
push
data16
push
loop
outs
es
and
aas
xchg
imul
mov
jg
div
cs
pop
push
fmul
mov
jns
retf
in
push
xor
push
mov
pop
or
push
fcmovbe
lods
arpl
cdq
or
(bad)
xor
pop
bound
push
in
xchg
dec
or
jmp
cdq
sbb
(bad)
push
jl
retf
mov
aad
inc
sbb
clc
(bad)
fild
in
fdiv
arpl
inc
sbb
hlt
(bad)
outs
mov
push
aam
ss
cmps
(bad)
(bad)
mov
popf
push
xor
fwait
dec
dec
arpl
in
sub
repz
xchg
sub
stos
add
xchg
ds
aaa
bound
jno
lea
aaa
into
int3
fnstenv
(bad)
leave
mov
(bad)
mov
sbb
cmp
cmps
stos
jmp
sub
dec
or
xchg
inc
fst
inc
and
mov
mov
cli
gs
fxtract
sbb
scas
in
idiv
adc
fsub
adc
jae
xchg
aaa
xlat
das
fnstcw
mov
push
jnp
nop
mov
sahf
and
cmp
xchg
mov
push
xor
call
lds
shl
hlt
add
or
test
sti
dec
fs
add
mov
fimul
rol
push
gs
xchg
add
push
sbb
jge
jmp
lds
idiv
mov
out
mov
push
nop
adc
mov
retf
fnstcw
or
popf
loope
lods
mov
ret
push
adc
add
sti
sbb
iret
mov
in
ror
jle
push
adc
sahf
aaa
movs
sbb
pand
call
sbb
jp
repz
repz
dec
cmp
mov
xchg
and
push
mov
shl
or
jmp
stos
ins
sub
fadd
std
push
push
cdq
test
cmp
inc
int3
seto
adc
pop
test
mov
jno
xchg
je
xor
les
loop
cmp
inc
sbb
cmc
ret
inc
paddq
movs
xor
pop
jmp
pushf
sbb
call
mov
gs
xor
ins
push
mov
pusha
ja
inc
lods
cmp
inc
cmp
mov
movs
fdivr
enter
add
std
repz
or
sbb
fisttp
and
add
adc
popa
jl
pop
ficom
jne
arpl
xchg
jecxz
pop
mov
shl
jo
jp
push
jmp
pusha
mov
stos
add
mov
push
mov
je
xor
sahf
xchg
leave
mov
or
sti
sub
sbb
imul
jecxz
les
adc
jle
(bad)
dec
sub
enter
mov
add
(bad)
shl
fnsave
push
adc
cdq
shr
scas
pop
repz
fs
fcom
mov
jbe
das
adc
scas
dec
mov
sbb
or
mov
pop
icebp
xor
cli
call
and
es
pop
pop
or
adc
jl
mov
in
das
and
dec
cmps
jnp
sahf
sbb
or
div
sub
(bad)
xor
jl
mov
adc
mov
hlt
ss
call
retf
out
add
jnp
std
fnstsw
jno
adc
dec
adc
xor
push
test
sub
dec
mov
std
(bad)
xor
aad
inc
dec
and
mov
sbb
mov
in
inc
inc
push
int3
mov
scas
cmc
retf
ss
test
fcmovu
dec
fcomip
aas
sub
add
pop
adc
xor
pop
pop
shl
sub
jge
mov
jmp
mov
in
xchg
inc
(bad)
shr
sub
adc
push
cmp
add
xchg
dec
iret
sub
jnp
pushf
lahf
sbb
shr
sbb
in
call
mov
mov
push
xchg
into
loop
and
mov
push
pop
jo
add
je
adc
(bad)
cld
bound
cdq
not
lods
mov
add
cmp
sub
bound
(bad)
mov
fwait
popf
cmp
ret
sub
pop
xchg
(bad)
popf
mov
jge
add
sub
cwde
sbb
call
call
pop
cmps
mov
mov
or
js
imul
lock
cmp
mov
rcr
push
cmp
(bad)
std
inc
inc
jle
pop
mov
movs
add
out
and
pop
jge
sbb
shl
mov
aad
movs
jle
xchg
in
int
inc
aam
mov
adc
test
sub
xor
xchg
cmp
and
dec
test
out
or
loop
xor
inc
xlat
scas
pop
scas
jle
jmp
mov
out
leave
pop
test
popa
mov
ror
jle
out
sub
inc
dec
mov
fst
or
xchg
cli
addr16
jp
bound
pop
push
dec
push
jno
std
call
(bad)
scas
mov
outs
retf
cmp
inc
or
cmovnp
rcl
mov
pop
xor
outs
mov
es
mov
movs
mov
dec
lods
push
push
mov
mov
and
fisttp
xchg
ret
xchg
or
and
mov
inc
pop
fdiv
imul
ss
push
aas
ss
sub
fnstsw
in
push
addr16
xchg
push
int3
cmp
xchg
jo
ds
jecxz
mov
jb
ficom
sub
jbe
call
push
and
or
lock
cmp
xchg
xchg
xchg
pusha
test
and
mov
test
call
mov
pop
repnz
sbb
xchg
sub
iret
addr16
mov
not
ret
clc
dec
pop
xor
into
aas
pop
shl
jne
and
jp
jg
add
dec
add
cli
sbb
rol
outs
cdq
jns
jl
daa
xchg
push
cmps
mov
stos
jecxz
cmps
pop
jnp
cmps
into
aad
or
mov
mov
gs
aam
inc
retf
out
fwait
dec
out
std
(bad)
pop
sub
in
mov
mov
(bad)
out
inc
inc
push
pop
adc
lods
pushf
mov
mov
aaa
add
lahf
adc
leave
nop
push
push
cmp
aas
xor
test
mov
fstp
or
and
inc
fistp
lods
shr
fidiv
inc
or
adc
and
push
jbe
pop
cmp
adc
out
iret
fdivr
pop
push
(bad)
(bad)
(bad)
push
dec
test
call
mov
or
push
or
ja
sub
in
ret
inc
ds
mov
je
push
test
xor
stos
pop
xor
sbb
cmp
push
mov
cmps
gs
mov
xchg
jns
fcmovu
cmp
pop
cs
xchg
jecxz
adc
in
jmp
daa
scas
adc
inc
adc
sbb
loopne
imul
adc
cmp
out
ja
ror
in
lock
jge
and
aad
fiadd
push
scas
pop
fstp
cwde
cli
and
xor
cmp
add
mov
adc
retf
or
test
xor
dec
sti
data16
mov
in
sahf
cmc
sbb
sahf
adc
cdq
repz
pop
dec
and
sub
jbe
int3
iret
lock
arpl
mov
in
cmp
aam
retf
std
je
dec
cmps
adc
fst
inc
mov
or
ret
push
inc
add
jns
mov
data16
jge
fisubr
add
sub
mov
and
lods
add
leave
adc
cmp
mov
mov
pop
xor
in
jl
lock
out
inc
movs
mov
inc
mov
cmp
push
push
mov
push
sbb
push
jle
aaa
mov
retf
faddp
push
fisttp
mov
test
fnstenv
or
fnsave
mov
cmp
push
aaa
sbb
jmp
(bad)
mov
out
cmp
sbb
pop
repz
sbb
xchg
out
xor
cmp
das
xchg
pop
pop
lsl
icebp
mov
leave
and
jb
out
loop
fisubr
or
or
sub
cwde
or
jmp
in
fidiv
xor
sti
jecxz
mov
test
repz
in
cmovnp
cs
mov
popf
mov
xchg
int
pop
out
adc
push
outs
mov
sbb
or
jle
mov
scas
cmp
xchg
gs
mov
mov
jne
out
push
mov
add
mov
mov
or
je
cmp
sub
sub
ja
push
adc
dec
lock
stos
mov
mov
mov
push
repnz
sbb
out
add
arpl
dec
neg
xchg
sub
fnstenv
jp
or
sbb
adc
sub
mov
stos
outs
sub
jp
adc
fstp
adc
cmps
sahf
mov
sub
mov
jae
push
inc
in
fiadd
stos
xchg
and
outs
sub
mov
nop
movs
mov
sub
add
jmp
xchg
push
sub
jmp
std
not
add
jle
in
mov
ds
add
not
pusha
(bad)
xor
hlt
les
(bad)
and
xor
dec
pop
mov
xchg
jp
jmp
dec
sbb
sar
adc
lds
mov
unpckhps
outs
ins
pusha
and
or
dec
push
(bad)
std
jge
cs
inc
push
jbe
(bad)
pop
mov
or
xor
ret
xor
ficom
cmp
(bad)
pop
adc
cdq
jmp
jle
out
imul
test
pop
and
sbb
jno
ins
int
fst
pop
lds
sbb
out
test
and
shl
movs
ror
jp
sbb
pusha
not
adc
fisttp
sbb
and
mov
inc
xchg
xchg
sbb
das
sti
(bad)
dec
cmp
sub
outs
lock
pop
adc
add
rcr
fdivr
iret
jge
mov
dec
or
push
mov
or
outs
mov
test
pop
sbb
outs
push
jg
dec
jl
jne
add
dec
dec
and
addr16
push
in
xchg
(bad)
leave
enter
scas
and
push
add
jle
imul
add
add
cmc
dec
and
or
mov
faddp
jnp
mov
xor
and
push
das
sbb
xor
adc
repz
js
repnz
rol
mov
int
ss
repnz
pop
inc
or
ror
cmp
pop
inc
(bad)
test
shr
das
outs
adc
fistp
cmp
mov
xor
push
sbb
cmp
mov
ret
inc
push
xchg
fst
or
fnsave
test
ja
jns
mov
test
push
movs
push
or
pop
add
lods
jle
push
jo
inc
int
retf
mov
(bad)
bound
xor
push
mov
push
jae
adc
movs
dec
mov
sbb
sbb
or
pop
mov
je
add
stc
fist
jle
mov
add
rcl
adc
mov
sub
dec
movs
cli
xor
sbb
retf
pop
adc
jmp
stos
xchg
test
loope
std
fisttp
fld
xor
cmp
rol
scas
mov
xchg
clc
ss
pop
jno
pusha
fild
mov
sti
movs
inc
rcl
xchg
lds
popa
(bad)
or
cmp
inc
lods
xor
and
(bad)
hlt
aas
gs
shr
enter
sub
gs
push
loop
aad
and
ja
or
fimul
test
or
in
jb
daa
xor
jp
xchg
stc
inc
xchg
out
mov
cmc
inc
push
pusha
hlt
outs
cs
outs
xlat
ins
imul
cmp
loop
mov
pop
lea
sub
mov
inc
jns
test
test
clc
repnz
dec
loopne
jmp
jne
(bad)
dec
sbb
repz
inc
push
arpl
mov
loop
push
ins
test
sbb
jae
fiadd
and
je
and
push
dec
push
add
mov
mov
or
push
add
gs
sbb
xchg
xor
stos
shr
or
retf
lock
pop
aam
es
adc
or
aam
sbb
lock
mov
dec
cmp
sub
cmc
js
adc
cld
lea
leave
inc
lods
sub
sahf
jne
ret
sar
add
out
inc
jle
popf
jg
sub
pop
movs
xor
fs
stos
jl
pop
adc
mov
ret
inc
cwde
lods
clc
mov
push
lahf
mov
xor
movs
loope
pop
popf
ins
addr16
cmp
xor
or
mov
sti
mov
inc
stc
rcr
stos
pop
push
scas
mov
pop
int3
fwait
scas
push
pop
sub
push
fwait
jnp
sub
mov
pop
jge
jle
inc
lds
inc
call
mov
stos
jnp
push
sbb
sub
dec
jp
out
cmp
movs
mov
jns
add
push
dec
jne
xchg
repz
cdq
sub
xrelease
imul
int
adc
sub
xchg
aad
fs
outs
sub
jns
jle
jmp
mov
xchg
retf
jle
neg
pop
pop
movs
int
add
sahf
paddusw
jns
cli
ins
mov
mov
push
(bad)
loop
inc
xor
xchg
in
outs
leave
or
push
xor
mov
imul
mov
add
push
movs
cmp
sbb
or
inc
or
mov
xchg
push
and
aaa
lds
cmp
jbe
sbb
enter
mul
adc
pop
sbb
shr
jp
fs
jbe
aaa
add
cmp
(bad)
push
scas
jge
push
fisub
pop
pop
mov
lods
add
scas
mov
mov
xchg
test
fisubr
add
dec
lea
bound
sbb
ins
ins
icebp
add
xchg
scas
pop
popf
outs
test
imul
or
or
inc
pushf
adc
mov
mov
xor
xor
fs
adc
retf
pop
lock
pop
es
popf
cli
ficom
dec
jl
xchg
adc
test
fcmove
imul
fstp
or
and
ret
push
les
fimul
xor
aas
rcr
or
jmp
push
lea
or
xor
lods
ins
or
dec
aam
cmp
push
out
popf
jl
inc
mov
push
inc
mov
pop
pop
mov
adc
cmc
ja
and
dec
push
or
mov
in
dec
cli
loope
adc
or
imul
mov
es
aad
fcmovu
in
pop
jle
lock
dec
pop
movs
mov
inc
test
gs
cli
mov
jmp
dec
sub
xchg
mov
retf
sbb
std
mov
or
fild
jl
or
xchg
inc
cmp
push
mov
jg
std
sbb
mov
xchg
push
push
test
mov
call
mov
and
push
mov
and
arpl
shr
mov
stos
pop
inc
dec
jnp
inc
int
inc
ficom
and
mov
xor
inc
xchg
push
sub
cli
xchg
mov
test
or
sbb
mov
mov
leave
lahf
call
cwde
ja
xor
sti
mov
test
xor
into
adc
xchg
in
in
cld
arpl
(bad)
inc
fnsave
out
adc
push
cld
push
pop
cmc
mov
pop
sti
bound
unpcklps
sub
repnz
repnz
push
sahf
add
mov
call
add
loope
je
out
adc
push
repz
pusha
js
xor
imul
cdq
xchg
mov
xchg
pushf
pop
or
inc
sub
dec
push
fdivr
fldenv
push
mov
lock
pop
cmc
sbb
div
nop
jmp
pop
dec
jo
out
cmp
add
cdq
sahf
pop
push
and
sub
jb
mov
sbb
scas
jle
and
adc
push
ds
xchg
adc
adc
jo
xchg
cmp
retf
fdivr
iret
or
dec
mov
or
repz
outs
bound
mov
(bad)
dec
mov
shl
(bad)
shl
shl
lods
and
in
sub
stos
jp
jae
(bad)
rol
das
add
mov
stos
sbb
stos
or
retf
into
pop
jl
jge
jo
movs
push
mov
cwde
pop
jo
sub
out
mov
(bad)
cmc
scas
(bad)
sbb
repnz
daa
and
pushf
push
ss
nop
sbb
or
xchg
xcrypt-ecb
cmps
dec
jge
test
jmp
(bad)
loop
imul
in
inc
lahf
test
stc
jmp
pop
call
and
icebp
cmp
pop
dec
sub
test
xor
mov
dec
mov
imul
leave
les
xchg
or
mov
mov
mov
movs
mov
ror
pop
rcr
mov
mov
shr
push
icebp
ret
jae
xchg
inc
outs
fistp
movs
repnz
in
inc
pop
mov
icebp
(bad)
(bad)
push
into
aam
shr
out
or
sub
mov
xchg
pop
fsubr
adc
inc
dec
xchg
jmp
shl
lods
retf
pop
sbb
repnz
push
cli
push
sub
sahf
jb
jge
or
push
in
pusha
(bad)
(bad)
js
sbb
and
fdiv
add
in
dec
cmp
dec
jb
fcmovb
cmp
dec
repz
cmp
mov
sbb
ja
fld
jb
lahf
fwait
dec
xchg
xor
xor
jae
pop
xlat
inc
in
loop
jb
in
xchg
dec
jns
xor
mov
push
mov
push
loope
xchg
xchg
in
jno
add
cmps
aam
mov
leave
xchg
mov
jle
or
mov
clc
mov
xor
jl
or
jo
clc
pop
inc
push
repz
movs
add
jmp
cs
fdivr
out
repz
push
xchg
shr
fmul
popa
pop
sub
mov
test
rep
fbstp
(bad)
xor
shr
add
mov
das
jl
enter
mov
enter
cwde
retf
mov
mov
test
rcl
(bad)
stc
sub
cmp
inc
popf
outs
out
(bad)
adc
call
push
sbb
adc
xchg
pmaxsw
or
(bad)
jp
jmp
push
xor
dec
popa
jg
out
cwde
pusha
ins
out
out
(bad)
mov
stos
sti
test
cdq
(bad)
xchg
mov
dec
aam
xchg
mov
arpl
or
dec
cwde
pop
add
outs
push
push
repz
lea
retf
test
cld
and
jle
inc
mov
cmp
lods
jg
sti
xchg
fisttp
test
dec
push
popf
cmp
xchg
rcr
loopne
sar
or
test
cmp
fwait
dec
inc
or
lock
(bad)
xchg
or
dec
jb
adc
push
pop
imul
dec
jp
jg
inc
mov
push
inc
inc
mov
inc
xor
cdq
fucomp
std
stc
xor
jno
mov
xor
sti
pushf
xor
sub
fidivr
and
ret
sbb
and
data16
sbb
sub
in
aam
stos
imul
xchg
jg
add
mov
out
jns
adc
sbb
out
clc
mov
(bad)
xor
or
es
aas
sti
nop
in
and
mov
icebp
pop
xor
and
sbb
pop
sbb
dec
mov
cmc
cmps
xchg
retf
ja
aam
and
push
or
mov
adc
enter
test
in
add
and
mov
into
aad
xchg
fisub
popa
jae
pop
dec
imul
(bad)
test
mov
sahf
(bad)
test
or
rcr
mov
out
fld
call
or
fwait
sub
test
outs
in
lods
sti
and
int3
adc
push
xor
repnz
jle
jg
add
xchg
pop
xchg
enter
pop
cli
popf
dec
loop
sti
int
cmc
fistp
inc
sbb
jb
test
cmp
sub
stos
test
jns
out
xor
call
dec
xchg
cdq
pop
push
dec
adc
icebp
out
movs
adc
xor
jnp
push
and
adc
sbb
(bad)
add
or
cmps
loope
(bad)
dec
(bad)
out
ret
aad
push
(bad)
push
shr
push
or
mov
scas
cmps
cmps
xor
lahf
add
and
out
cmp
mov
outs
mov
mov
sub
jbe
scas
xor
dec
or
mov
pusha
and
push
stc
jmp
je
pop
les
addr16
xchg
xor
shl
test
cmp
mov
or
fldln2
pop
xor
xchg
inc
sbb
ins
push
loope
shl
pop
out
xor
lahf
adc
xlat
arpl
inc
sbb
and
and
push
mov
test
out
(bad)
aad
hlt
push
ficomp
(bad)
fwait
pop
retf
cmp
mov
mov
cdq
mov
ret
inc
lds
xchg
and
and
out
inc
adc
add
push
pushf
sbb
xor
mov
inc
retf
pop
pusha
je
retf
dec
out
xchg
pop
pop
sbb
retf
(bad)
mov
mov
push
aaa
imul
mov
fcmovbe
xor
int
xchg
retf
sbb
loopne
scas
fld
jbe
stc
add
adc
ds
add
test
pushf
cs
mov
mov
push
sar
(bad)
xchg
(bad)
mov
mov
push
das
mov
call
dec
sub
mov
xchg
rcl
arpl
aaa
inc
ret
imul
ja
mov
sbb
sub
mov
(bad)
pop
mov
xchg
ins
cs
repnz
sub
pop
pop
or
je
test
enter
sbb
imul
xor
(bad)
or
(bad)
ins
mov
in
pop
xchg
test
test
cmp
fst
js
mov
mov
and
in
mov
clc
lods
pop
sub
jmp
test
pop
pop
and
rcr
adc
adc
sub
xchg
hlt
fcmovnu
ds
mov
cmp
push
ret
imul
les
fwait
retf
xchg
ds
push
xor
or
dec
in
ss
push
adc
mov
mov
jp
int3
adc
dec
movs
sub
and
ret
movs
cmp
sar
jge
jl
nop
jnp
das
fidiv
add
(bad)
popf
imul
lea
cmp
mov
jnp
in
or
rcl
das
addr16
xchg
jae
mul
mov
fidiv
adc
pop
push
fld
jmp
dec
adc
cwde
pop
push
jmp
push
clc
out
xchg
loopne
lahf
inc
cmc
lea
push
cmp
retf
push
jle
fisttp
sbb
adc
and
loope
shl
mov
dec
jecxz
dec
push
outs
test
cmc
lea
ret
out
cmps
push
xchg
in
cmps
push
imul
fcomp
addr16
sub
sub
in
mov
imul
sbb
mov
dec
sbb
jp
add
es
(bad)
adc
dec
lahf
ret
sahf
jae
push
sar
ds
shr
test
aaa
ja
dec
or
dec
sbb
xchg
loop
outs
(bad)
mov
std
mov
neg
test
jp
icebp
in
pop
jge
jbe
push
add
call
test
add
lock
dec
out
repz
jae
popa
mov
in
sub
adc
push
(bad)
add
popf
test
mov
cmc
mov
adc
fdiv
sub
and
jns
and
pusha
cmp
ret
sub
xor
sub
out
inc
or
aad
cmps
cmp
fistp
stos
jae
(bad)
retf
pop
or
sub
xor
pop
imul
push
mov
jecxz
sti
arpl
mov
add
mov
daa
and
lahf
push
sub
out
popa
add
repz
scas
mov
mov
xchg
cld
mov
jnp
fcom
mov
bound
push
and
jb
std
rcr
and
adc
les
mov
(bad)
push
mov
lahf
(bad)
adc
sbb
jns
mov
bnd
xchg
fldenv
mov
jnp
sbb
scas
mov
retf
sub
mov
out
test
cmps
sub
and
jmp
fstp
sub
stc
xchg
inc
bnd
xchg
mov
sub
pop
arpl
mov
in
data16
ret
add
mov
fwait
sub
out
xchg
ins
xchg
enter
jecxz
pop
mov
mov
addr16
xchg
jae
cmps
inc
jmp
rol
iret
push
jle
retf
xchg
es
mov
or
shr
jp
je
xchg
lahf
mov
cmp
call
daa
inc
and
ss
repz
test
pop
jbe
dec
jae
jmp
xchg
dec
sub
add
or
push
xchg
jp
out
sti
push
in
imul
in
das
cmc
sub
push
xor
sbb
mov
fstp
aaa
sar
ins
mov
jp
stc
mov
call
cmc
dec
cli
mov
ficomp
pop
das
aaa
outs
mov
enterw
dec
jo
inc
dec
lds
fsub
mov
loop
mov
lods
sub
ins
mov
rcr
xlat
je
add
es
sbb
ins
movs
cmp
jl
(bad)
std
aaa
adc
sub
and
or
adc
test
and
sub
std
retf
imul
leave
ss
mov
dec
test
repz
push
(bad)
push
ficomp
dec
int
enter
adc
lds
repz
rol
movs
hlt
aas
fst
enter
popf
ins
cmp
out
retf
sti
pop
sar
mov
scas
lods
sahf
test
mov
sbb
cli
mov
mov
mov
sar
xchg
mov
jge
inc
xchg
jp
or
out
jmp
add
ins
icebp
adc
mov
cmps
aaa
mov
jmp
adc
xchg
ins
(bad)
iret
pop
mov
fidivr
dec
call
jl
and
daa
sahf
lods
add
mov
cmp
dec
push
push
xchg
(bad)
sti
retf
lock
or
adc
jno
pop
in
sbb
add
mul
(bad)
xlat
and
into
xchg
or
push
sar
repnz
ins
cli
in
in
sar
lock
inc
out
ss
scas
mov
hlt
mov
push
popf
mov
sar
mov
xchg
push
and
or
jo
xchg
cdq
fcmovnu
movs
mov
lods
push
push
lods
push
adc
retf
or
xor
stc
clc
xchg
add
mov
pop
cld
lds
and
dec
ret
cli
sar
pop
add
stc
aas
or
pop
add
stc
fxch
fsubr
and
(bad)
cmps
int3
mov
popf
test
add
dec
in
scas
daa
test
mov
push
sbb
popa
(bad)
nop
push
xchg
fnstsw
fbld
(bad)
test
jl
and
shr
xor
dec
in
push
or
push
add
adc
add
repnz
(bad)
in
jnp
(bad)
pop
not
jmp
jecxz
inc
jg
sub
(bad)
cmps
mov
jecxz
pop
push
cmp
pop
test
aam
movs
sbb
or
dec
mov
test
pop
(bad)
retf
popf
test
jno
adc
cmp
sbb
stos
icebp
mov
into
sub
mov
mov
xor
enter
pop
test
(bad)
pop
sbb
enter
retf
inc
ret
repz
mov
jl
retf
mov
fistp
or
or
les
jno
cmp
je
cmps
adc
hlt
movs
push
inc
jno
call
sbb
in
fwait
jno
jge
xor
(bad)
jmp
mov
mov
jmp
jae
lods
push
jne
pushf
mov
inc
ret
push
outs
cmp
bound
and
jecxz
adc
pop
clc
stos
or
and
and
cli
cmp
dec
inc
fs
inc
out
daa
in
(bad)
cmp
in
aam
dec
dec
(bad)
sub
call
cmp
aam
in
fstp
aas
out
sub
dec
stos
das
inc
stos
push
rol
loop
jmp
inc
push
inc
dec
push
aad
mov
inc
sub
inc
addr16
pop
pop
xchg
adc
cmp
xchg
clc
pop
call
adc
xchg
js
in
jo
push
sar
mov
mov
pop
packuswb
or
pop
dec
std
mov
or
pop
mov
pop
sub
cmps
in
movs
mov
mov
fs
sub
and
ffreep
xchg
sti
or
xor
jl
cmp
ss
add
(bad)
jl
pop
and
mov
fstp
jmp
jb
add
push
xor
rcr
mov
mov
mov
inc
cmp
movs
maxps
jne
xchg
pop
add
add
in
pop
adc
loopne
ds
movs
sbb
mov
adc
mov
add
aam
jge
lods
and
jns
or
mov
jecxz
fisub
retf
dec
dec
loop
or
repnz
mov
in
inc
dec
jnp
xor
adc
shr
ds
push
in
jb
icebp
xchg
nop
(bad)
adc
movs
int
xchg
jp
mov
out
mov
sub
dec
imul
out
retf
add
push
outs
xchg
mov
test
sub
pushf
sub
and
leave
push
out
sbb
lock
je
push
js
dec
adc
sub
sbb
and
out
in
jns
jg
jo
paddb
je
test
enter
jmp
out
ds
retf
movs
jae
bound
mov
xchg
push
push
cdq
std
and
dec
xchg
dec
shl
fwait
dec
ror
test
das
(bad)
icebp
xor
int3
mov
mov
dec
push
fisttp
mov
aas
mov
mov
lock
cmp
in
and
sub
cmc
push
dec
icebp
cmp
mov
push
sahf
jle
jmp
lods
push
fstp
and
mov
jecxz
push
sub
adc
cmps
jp
rcl
scas
jge
shl
and
outs
and
fimul
inc
test
retf
lds
or
sub
les
push
out
pushf
leave
mov
mov
(bad)
xor
pop
fnstenv
mov
xchg
lods
mov
xchg
(bad)
cmps
in
nop
call
ficom
fist
jg
int3
sbb
add
or
bound
test
jae
fcom
(bad)
sbb
add
stos
ficom
not
push
(bad)
mov
pop
jne
leave
push
add
aam
xor
sub
movs
dec
xor
push
dec
not
mov
or
stc
add
ror
adc
ror
popf
add
cmp
sbb
int3
pop
sbb
test
sub
fs
mov
jbe
push
push
retf
in
pop
pop
jo
(bad)
repz
sbb
cmps
ss
shr
addr16
xchg
in
mov
retf
neg
(bad)
jg
adc
sub
arpl
pop
lea
sub
data16
dec
xchg
cmp
in
sub
sub
jecxz
jle
cmc
jno
and
fucomip
test
and
sbb
push
and
repz
ret
mov
jne
mov
mov
mov
cmp
inc
mov
and
xchg
jge
(bad)
cdq
int3
sub
ror
xor
mov
mov
pop
jmp
imul
cmp
pusha
mov
mov
mov
loop
cli
jne
addr16
push
fistp
in
mov
popf
and
sbb
xchg
push
dec
dec
push
jns
mov
fisttp
sbb
sub
push
inc
mov
jmp
out
add
dec
inc
inc
push
inc
pop
sbb
jno
and
popf
(bad)
loopne
inc
cwde
push
and
ret
retf
cld
pop
lods
dec
fwait
ins
sbb
add
mov
aas
in
sbb
test
xor
es
stos
lea
cwde
test
xor
jecxz
xor
into
cli
aas
in
push
cmp
pop
iret
int3
loop
jnp
jle
sub
add
mov
pop
jp
pusha
push
pop
aam
sbb
sahf
jnp
mov
mov
xor
add
sub
cmp
jl
pushf
dec
pop
push
xchg
inc
clc
mov
xchg
and
movs
shl
shr
mov
mov
leave
mov
mul
add
in
je
push
push
cmp
aam
adc
ret
hlt
addr16
adc
loope
std
jg
xor
sub
xor
sub
sbb
push
mov
shl
ja
push
das
and
and
mov
idiv
mov
mov
mov
mov
adc
pop
gs
and
rcr
jp
xor
iret
jg
(bad)
sub
sub
mov
fcomp
stos
shl
outs
jne
(bad)
popf
loop
(bad)
out
lods
dec
pop
jo
xchg
dec
fs
je
inc
add
inc
mov
push
xlat
sub
dec
loopne
mov
fistp
push
ror
mov
inc
jne
xchg
pop
adc
mov
adc
ret
clc
or
cmp
cs
aam
sbb
and
pusha
jae
les
jg
(bad)
pusha
push
dec
dec
ret
out
and
jo
mov
hlt
movs
ret
(bad)
sahf
fnsave
out
adc
sub
add
outs
inc
pop
jnp
scas
nop
xchg
loop
or
fwait
or
icebp
dec
fwait
cdq
sbb
or
pmaxsw
stos
bound
mov
fimul
je
test
mov
dec
(bad)
jmp
retf
leave
xor
into
mov
pushf
data16
sub
outs
pop
xor
in
jns
push
or
jb
ja
pop
cs
mov
cld
mov
adc
inc
leave
(bad)
aas
lahf
mov
into
push
sub
push
add
dec
sar
shl
or
xchg
hlt
cmp
arpl
xchg
jmp
(bad)
clc
aam
fwait
pushf
fcomp
test
mov
xchg
or
cmps
and
shl
dec
data16
inc
icebp
push
sti
jne
and
jb
sub
mov
jmp
(bad)
push
sub
mov
je
inc
and
jb
push
inc
out
pop
xlat
outs
jno
outs
jecxz
fist
push
stos
or
fstp
mov
pop
outs
jae
cmp
je
add
and
mov
inc
cmp
add
cmps
dec
or
sar
int3
imul
int
(bad)
es
xchg
add
into
xor
seto
sbb
adc
data16
xchg
lds
movs
ret
xor
and
shl
cmp
inc
ins
ins
mov
add
fs
mov
movs
adc
out
adc
adc
hlt
int
rol
dec
mov
or
outs
mov
arpl
xor
jge
fisubr
mov
ret
push
adc
adc
ror
or
aam
call
adc
mov
js
aaa
fcmovbe
fwait
jmp
lods
les
pop
push
repz
lods
ret
call
fs
mov
test
dec
inc
sbb
cmp
xchg
fld
jo
imul
adc
pop
push
adc
pop
or
arpl
cmp
test
sub
scas
loope
cmp
clc
sub
pushf
or
or
mov
jbe
push
je
les
not
movs
xor
cmps
sar
mov
movs
sub
imul
cmps
(bad)
mov
xor
add
retf
cld
inc
je
les
jmp
jnp
jle
sbb
out
pop
or
and
adc
and
lea
adc
inc
js
mov
out
(bad)
cmp
fxtract
fmul
mov
inc
data16
ja
ja
aad
ror
mov
cs
mov
push
outs
inc
popf
inc
popa
addr16
aad
loope
push
test
aam
cmp
xor
daa
jae
mov
mov
and
push
inc
mov
and
nop
shl
out
es
in
clc
(bad)
xchg
imul
test
cmp
sub
pop
pop
repz
(bad)
in
cmp
cwde
jne
mov
mov
cmp
gs
inc
cld
pop
aas
inc
fst
mov
jnp
rcl
cmp
lahf
mov
mov
push
in
xchg
(bad)
inc
stos
xchg
shl
or
jbe
jne
outs
sahf
cs
ret
aam
popaw
imul
push
pop
mov
cld
mov
xchg
push
in
ror
mov
inc
loop
cmc
sbb
aas
cmp
or
or
mov
int3
fidiv
lods
(bad)
retf
test
imul
pop
ja
and
test
mov
mov
jae
adc
aas
ror
jo
jle
mov
(bad)
xchg
jl
std
loopne
inc
inc
cld
sub
pop
cmp
xchg
aaa
inc
push
cmp
fbstp
icebp
das
mov
out
inc
xchg
jmp
cld
push
push
paddd
ss
sbb
xchg
scas
dec
adc
cmp
retf
mov
mov
mov
mov
test
jmp
and
test
mov
push
cmp
ret
and
stos
push
adc
or
jmp
setno
arpl
sub
imul
cmp
dec
dec
lods
xchg
jb
push
dec
sar
xchg
scas
cli
scas
mov
repz
das
jmp
xchg
in
test
stc
jb
or
hlt
and
jp
and
xchg
xlat
ror
mov
fild
push
inc
es
inc
jge
push
xor
stc
movs
add
cld
xchg
adc
hlt
mov
fnstsw
sahf
push
stc
aas
sahf
pop
and
add
and
xor
arpl
xchg
stos
mov
into
out
xchg
rcl
sar
fld
mov
popf
or
xor
cmp
xchg
out
mov
adc
mov
mov
cmps
fs
jle
inc
pop
jge
jmp
mov
pop
in
xor
sahf
retf
out
fldenv
fwait
mov
xor
xor
cmp
and
or
mov
aad
iret
retf
mov
jl
adc
pop
(bad)
mov
mov
shl
imul
jo
aad
ss
addr16
adc
imul
xor
pop
and
mov
repz
jo
push
push
mov
xchg
add
pop
ret
and
mov
cli
xchg
jmp
fisttp
sbb
sub
imul
outs
pop
test
jl
adc
(bad)
paddusb
mov
daa
inc
loopne
outs
mov
pop
sub
jnp
sub
dec
div
cmp
sahf
add
or
in
sub
stos
mov
outs
dec
into
fidiv
test
jle
inc
jne
sub
inc
call
mov
pop
std
loopne
inc
std
or
dec
or
mov
ss
sub
lea
push
loope
enter
add
mov
popf
jge
enter
mov
into
inc
ja
hlt
retf
mov
sahf
pop
push
pusha
das
call
xchg
rol
add
aas
in
jge
mov
sub
or
pop
inc
jp
das
(bad)
fstp
adc
dec
test
shl
ins
push
xlat
push
mov
pushf
adc
imul
sub
out
and
sbb
fist
mov
test
ins
cwde
aam
xor
clc
fiadd
dec
pop
sub
lock
pop
int
rol
lods
call
push
inc
jle
pop
push
dec
dec
sub
fstp
jle
push
cmc
cmps
cmp
mov
fmul
iret
imul
mov
push
jne
mov
push
arpl
je
mov
(bad)
jle
in
adc
iret
(bad)
jnp
sub
xchg
cmps
in
sbb
push
fstp
out
and
test
scas
div
and
out
xor
ja
xchg
retf
sub
lea
adc
and
jns
cli
pusha
imul
outs
sub
fs
js
stos
cli
out
jl
jl
pop
jmp
pushf
fidiv
cmp
lock
shl
pushf
lods
mov
jns
cmps
inc
dec
xchg
clc
jo
push
xchg
and
(bad)
xor
pop
daa
repnz
in
push
out
adc
mov
ret
jp
inc
jae
lods
xor
rol
xor
mov
xor
sbb
push
lock
int
rcr
pushf
mov
inc
or
loope
ds
rcl
sbb
movs
dec
outs
repz
shl
test
add
pop
or
icebp
mov
add
imul
loop
lahf
inc
push
loope
sbb
pop
daa
retf
jmp
pop
in
or
cmp
mov
dec
cmovne
(bad)
rcl
xlat
popf
call
jp
shl
push
mov
popa
push
adc
push
(bad)
add
xchg
mov
jmp
inc
mov
mov
mov
ja
cmp
xchg
icebp
or
add
call
push
retf
in
mov
inc
sub
rol
or
(bad)
and
or
or
lods
dec
sub
shr
arpl
loope
xor
pop
clc
cdq
push
out
(bad)
rol
sbb
(bad)
fcomi
sub
shl
or
jmp
scas
rol
pop
ins
mov
sbb
pop
loopne
icebp
jo
adc
sbb
sub
inc
fild
rcl
push
aad
ret
inc
pop
and
cli
in
sub
cdq
push
sub
mov
adc
xlat
and
mov
out
imul
ss
(bad)
fstp
mov
pop
push
mov
fdivp
pop
fs
gs
lods
mov
pop
dec
es
mov
add
pop
push
cwde
mov
and
hlt
pop
nop
scas
jge
push
inc
ret
push
dec
cmc
jbe
pop
aam
add
mov
pop
sub
xchg
sub
pop
jb
xchg
les
jmp
aad
sbb
adc
sbb
loop
out
jnp
in
jb
add
cli
cs
mov
out
inc
jmp
dec
in
out
fcmovbe
dec
cmp
lods
imul
or
ja
js
xchg
dec
call
sbb
lods
mov
add
lock
mov
ss
jbe
movs
ds
cmp
dec
cmp
repnz
loope
or
mov
inc
fstp
aad
adc
ds
sbb
int3
je
jns
aas
in
pop
das
sub
(bad)
jle
gs
and
mov
adc
jns
stc
imul
add
mov
arpl
ss
jge
rol
inc
pusha
movs
fisub
pop
stos
sbb
adc
pop
fisubr
and
push
mov
out
(bad)
add
dec
push
aas
mov
push
jmp
adc
dec
cli
cdq
(bad)
push
sbb
mov
push
xchg
ffreep
leave
cs
dec
mov
imul
ficomp
push
pushf
xor
rcr
(bad)
mov
xchg
jne
aaa
ror
mov
add
adc
dec
out
cwde
push
ror
or
sbb
iret
adc
inc
push
mov
dec
shl
mov
add
call
popf
xchg
mov
dec
cmp
out
fld
jp
sbb
popa
cdq
shl
sub
cwde
out
ror
mov
push
retf
adc
mov
sbb
dec
or
loop
mov
and
mov
test
test
fisttp
test
lahf
xor
fnstsw
push
mov
les
adc
call
cmp
int
stc
jo
mov
jno
xlat
xlat
popf
jp
jle
mov
gs
test
or
popf
jle
rcr
dec
xchg
clc
xchg
imul
xchg
pop
xchg
inc
(bad)
add
add
les
xor
push
sub
in
cmp
aaa
jge
(bad)
mov
pop
inc
lds
xlat
cmp
mov
cdq
dec
push
mov
(bad)
fsubr
pop
inc
add
es
jne
fucomp
jle
dec
pushf
mov
stos
lods
xchg
js
sbb
sub
add
dec
rcr
(bad)
hlt
dec
int
or
inc
mov
push
dec
jae
jecxz
cmp
inc
in
stos
out
adc
out
bound
outs
ss
les
js
stc
ins
repnz
into
adc
push
js
mov
inc
sbb
cdq
jns
in
loopne
cmp
mov
inc
imul
mov
je
(bad)
das
pop
call
aas
in
outs
inc
nop
or
lods
cmp
aas
adc
sub
xlat
inc
sbb
mov
and
dec
sub
xor
or
add
sub
repz
out
or
add
add
retf
mov
bound
sbb
aas
dec
rol
inc
adc
push
std
frstor
fld
cdq
inc
fcom
ja
pop
mov
ficomp
int
sub
int
into
outs
int
push
sbb
sub
jo
mov
pop
cmp
and
mov
jo
xchg
xchg
dec
fst
fcomp
mov
repz
push
add
inc
mov
popaw
fidiv
nop
inc
add
jb
cmps
mov
int
xchg
lea
ret
add
repnz
mov
mov
cmc
add
xor
in
gs
and
sar
xor
outs
fst
ins
lods
loop
ror
xor
add
mov
lahf
lock
pop
leave
jle
inc
add
sub
andps
jge
adc
std
jl
add
lds
jecxz
and
test
icebp
xor
(bad)
repz
add
cmc
addr16
js
movs
sbb
xor
and
inc
in
sbb
cli
sub
dec
push
xchg
repz
jns
ficom
out
retf
into
int3
jb
sbb
jno
mov
fcmovb
out
fild
mov
lds
out
and
stc
in
mov
inc
push
push
cwde
ja
int
inc
dec
icebp
shld
mov
in
xor
xlat
and
fs
mov
xor
(bad)
adc
inc
outs
call
into
imul
cmps
shl
and
jecxz
not
inc
outs
mov
xchg
mov
retf
dec
jno
std
sub
mov
xchg
cwde
add
sbb
icebp
mov
(bad)
fsub
or
iret
push
fst
jg
jl
adc
and
jae
ret
and
xor
mov
out
mov
ss
push
in
js
pop
push
cmp
cdq
add
js
mov
in
sub
xor
xor
inc
add
dec
push
pop
mov
mov
add
into
into
ja
iret
jle
nop
(bad)
aad
jmp
ins
fs
leave
retf
mov
or
add
in
retf
retf
cld
in
add
add
cli
in
mov
xchg
sub
pop
repnz
push
jns
push
jge
pop
loope
xor
mov
call
std
stc
jecxz
push
mov
sub
fcmovb
inc
xor
dec
adc
loope
(bad)
cmps
in
mov
imul
push
fisubr
in
fadd
mov
dec
(bad)
jle
add
call
xchg
cmp
sub
bound
inc
rol
arpl
in
jae
pop
push
cs
iret
push
or
(bad)
ja
cdq
les
mov
sbb
arpl
cmp
cmp
add
xchg
(bad)
stc
cmp
int
mov
loopne
dec
jmp
and
sbb
mov
in
ss
jmp
scas
xor
mov
cmc
out
mov
mov
mov
f2xm1
push
mov
call
adc
cli
pop
out
or
fld
pop
dec
jbe
pop
fist
pop
cmp
mov
inc
push
adc
sub
and
lock
nop
mul
adc
pop
rcl
cdq
add
in
and
jne
int
movs
lea
(bad)
mov
mov
repz
mov
push
int
push
pop
rcr
adc
mov
adc
dec
fld
ja
inc
mov
popa
inc
xor
imul
bound
clc
test
pop
scas
sub
repz
and
fcmovne
stos
xor
add
repz
inc
xchg
rdmsr
outs
sti
lods
fs
dec
jo
pop
mov
test
int
leave
scas
dec
jmp
sub
xchg
or
retf
push
not
pusha
data16
inc
jl
mov
mov
sub
xchg
push
lods
inc
pop
and
(bad)
stc
push
fdivrp
test
std
loop
pop
jnp
idiv
jle
xor
jmp
mov
fstp
stos
jl
(bad)
inc
dec
rol
daa
and
out
mov
pop
and
sti
push
lock
jmp
shr
sbb
in
mov
add
pop
or
popa
inc
rol
fimul
in
mov
push
mov
pop
aad
jle
cmp
shr
popf
addr16
test
mov
int
add
xchg
out
xchg
push
test
shr
test
scas
cmc
jns
sbb
(bad)
pop
sar
pop
pop
nop
push
sti
imul
pop
out
and
xchg
pop
ds
add
inc
mov
adc
mov
inc
inc
jp
mov
addr16
add
push
or
push
inc
cdq
inc
and
ret
in
or
mov
or
dec
push
arpl
mov
push
xchg
test
pop
mov
and
jmp
and
fbld
mov
mov
ds
xor
test
repz
fnstsw
fisttp
add
adc
mov
aam
mov
mov
fild
fistp
dec
push
imul
xchg
out
dec
sbb
xor
xor
ret
fimul
data16
ss
aaa
mov
xchg
mov
mov
repz
xor
and
jl
cli
push
mov
mov
fadd
jp
xchg
push
les
jbe
(bad)
retf
arpl
dec
xor
fldcw
pop
cmp
arpl
idiv
(bad)
jle
or
movhps
jmp
not
or
iret
fisub
icebp
int3
loopne
add
aam
imul
add
test
in
ret
xchg
out
xchg
sahf
xchg
idiv
mov
add
lds
cld
cld
pop
fild
call
loop
pop
push
mov
int3
repz
adc
data16
out
sub
jnp
test
cmp
cwde
cmp
hlt
gs
xchg
push
clc
out
imul
test
sbb
shl
call
lock
popa
xchg
cmc
mov
pop
aam
out
div
xor
sahf
cmp
pop
push
jno
scas
mov
and
fst
jp
cmp
xlat
test
shr
xor
and
xchg
pop
xor
out
mov
jmp
mov
cmp
ror
(bad)
cmp
sbb
xor
jbe
push
dec
jbe
jmp
enter
pop
jo
dec
xchg
jbe
add
mov
adc
xchg
cld
mov
xor
ret
iret
and
popf
jnp
mov
call
mov
shl
mov
cmp
push
aam
(bad)
pop
data16
mov
push
sub
cdq
das
jnp
add
ins
mov
movs
lock
sbb
or
pop
movs
sti
pop
imul
icebp
das
or
test
push
xchg
push
movs
pusha
arpl
ret
mov
push
out
pop
(bad)
hlt
movs
mov
sub
push
in
jne
(bad)
daa
hlt
stos
es
pusha
shl
clc
repz
out
and
dec
or
fucomi
xor
mov
cmp
fist
hlt
pop
push
leave
xor
nop
shr
xor
push
add
out
mov
shr
jae
push
aas
data16
push
dec
vpsadbw
hlt
push
sahf
and
gs
jmp
xor
adc
pmaxub
jnp
cmp
int3
aaa
dec
ja
loope
lods
cmp
mov
psllq
mov
je
les
and
imul
inc
jmp
into
push
scas
jp
iret
sbb
xchg
fdivr
cmps
mov
jns
imul
add
fucom
and
rol
test
imul
cmp
push
shld
out
sbb
(bad)
push
pop
cmps
and
dec
cmp
mov
or
stos
sar
mov
sbb
retf
and
int
fs
(bad)
dec
pop
je
test
pop
push
xchg
push
leave
pop
adc
push
pop
sub
add
sbb
sbb
xchg
sti
push
jbe
xchg
xchg
push
pop
sbb
lods
mov
pop
jg
jg
and
lds
retf
(bad)
inc
push
adc
in
cmp
or
pop
mov
push
cs
push
mov
stos
pop
div
cmp
or
mov
lods
adc
add
add
movs
sbb
and
in
jne
or
stc
dec
sbb
(bad)
hlt
pop
shl
sub
xlat
mov
and
fwait
gs
push
fdiv
cmp
movs
cwde
push
xchg
call
or
sub
inc
and
enter
and
(bad)
sti
and
pop
xchg
xlat
sti
xor
adc
imul
arpl
inc
aam
bound
push
mov
stos
push
(bad)
rcr
sti
dec
jo
xchg
add
jbe
xchg
jle
sbb
repnz
or
mov
into
push
popa
hlt
stc
call
movs
clc
idiv
mov
dec
stc
(bad)
ret
pushf
fbld
mov
in
push
dec
xor
pop
ret
pop
in
mov
loop
adc
inc
clc
sti
jle
jmp
cmp
movs
adc
and
test
xchg
cmps
aad
lods
pop
aam
out
cmps
movs
or
out
les
push
jb
shl
sbb
stos
mov
int3
lds
sbb
push
mov
inc
sbb
jo
xor
push
mov
and
out
push
aam
lock
fild
nop
pusha
xor
pushf
mov
inc
movs
ror
daa
mov
inc
dec
mov
mov
js
add
call
sahf
ins
pusha
and
and
cmp
fild
fisttp
xor
dec
std
xchg
test
std
fldcw
rcr
popa
or
xchg
mov
sar
xor
es
sbb
jb
xchg
mov
xchg
movs
mov
test
sbb
ins
cwde
cld
xchg
mov
outs
push
fmul
push
adc
mov
or
popf
cld
rep
aad
(bad)
pop
mov
outs
movs
clc
mov
dec
test
cdq
push
daa
rol
mov
lock
ins
add
imul
(bad)
into
movs
mov
es
in
ja
out
xor
jns
jle
push
cmps
test
out
data16
ja
aaa
mov
mov
in
test
fcomp
addr16
xor
add
inc
fmulp
jnp
xchg
cmp
or
sub
ror
ror
shr
jns
lea
loope
push
arpl
repz
iret
sbb
lods
pop
sahf
and
push
xchg
sbb
lahf
mov
bound
lahf
(bad)
(bad)
(bad)
xor
push
aas
push
data16
inc
call
xor
shr
gs
xlat
xchg
mov
scas
bound
xchg
cwde
xchg
sti
stc
sub
push
xchg
outs
pusha
sbb
out
cmc
add
dec
sbb
jge
lods
enter
jno
scas
mov
inc
cmp
sti
push
push
data16
movs
and
fwait
es
(bad)
or
mov
fistp
cmp
call
stc
and
in
or
push
outs
pushf
ja
sbb
ins
std
jne
jbe
lahf
xchg
jae
stos
sub
push
js
or
xlat
adc
pop
xchg
mov
pop
std
cmps
mov
fnstcw
mov
jo
not
outs
xchg
pop
fsub
xor
cmp
movs
jle
jb
xor
sub
push
jns
jmp
inc
(bad)
xchg
mov
and
push
cmp
xchg
(bad)
xlat
rol
fmul
sub
xchg
int
adc
into
(bad)
in
xchg
enter
mov
push
mov
dec
xchg
(bad)
push
dec
lea
cmps
scas
sub
jl
stc
push
push
xchg
loopne
push
inc
lods
aad
pop
pop
arpl
mov
cmp
push
shl
and
pushf
leave
push
xchg
cld
xor
sbb
add
adc
call
in
sbb
sub
aam
or
push
cs
icebp
repnz
mov
cdq
into
jo
xchg
mul
daa
out
int3
sbb
jns
mov
push
das
mov
(bad)
pop
jne
les
repnz
dec
cmp
fdivr
movs
popf
pop
cmp
dec
push
(bad)
mov
push
fild
dec
push
dec
inc
dec
mov
test
push
mov
xchg
pop
mov
mov
arpl
xchg
push
ins
pop
jns
mov
(bad)
mov
cmp
in
ficomp
mov
popf
rcr
and
dec
jge
les
add
inc
arpl
out
mov
enter
iret
and
xchg
popa
(bad)
cmc
push
lock
lods
push
push
add
mov
fcmovnu
ss
and
lea
data16
push
cmp
(bad)
sub
and
test
adc
sbb
xchg
sahf
outs
mov
push
push
push
std
xchg
sub
cmp
inc
neg
add
mov
imul
pop
xchg
mov
nop
pop
inc
aad
bound
enter
ss
cmp
arpl
xchg
test
adc
adc
sub
ins
out
bound
xor
cmc
les
push
imul
jmp
mov
sbb
inc
mov
(bad)
jno
cmp
pop
mov
cld
test
in
or
sahf
aad
ins
rcr
mov
cmps
cmp
daa
sbb
test
out
imul
or
cmc
jae
mov
scas
int
shl
popa
clc
and
pop
jo
mov
add
mov
xor
push
or
movs
cmc
mov
cdq
jbe
jmp
pushf
push
cmps
push
dec
cmps
pop
into
lea
adc
lahf
lock
pop
cmp
scas
mov
sahf
retf
jmp
dec
sbb
and
fdiv
rcl
(bad)
xor
pusha
bound
into
sbb
idiv
test
call
ret
and
mov
inc
aad
pop
inc
inc
aam
inc
(bad)
into
mov
addr16
mov
adc
pop
pusha
cmp
hlt
xor
xchg
test
or
mov
dec
sub
inc
into
jmp
cmc
sbb
out
jmp
add
das
and
ficom
sti
mov
shl
pop
enter
dec
rcr
into
aas
xlat
cli
jne
ja
stos
lea
xchg
arpl
imul
and
sti
sub
xor
retf
pop
adc
pop
fwait
clc
or
movs
cmp
cwde
std
out
inc
dec
push
outs
cmps
jmp
jecxz
aad
inc
xor
sub
push
das
mov
aaa
and
inc
mov
jp
pop
mov
add
adc
sub
and
inc
pop
mov
js
jns
(bad)
popf
aam
and
push
dec
jo
retf
add
mov
or
sbb
stos
sbb
int3
add
in
dec
call
dec
ret
mov
iret
jecxz
lock
pusha
(bad)
cld
es
dec
adc
mov
icebp
mov
test
in
cdq
ss
inc
cmc
and
xor
cmps
dec
rol
inc
dec
jge
cmp
gs
js
test
mov
cmp
neg
imul
clc
cmps
in
fcom
retf
mov
push
cmp
mov
inc
mov
out
mov
mov
lahf
mov
cdq
dec
sahf
mov
rcr
lahf
jp
inc
fidiv
lahf
je
adc
xor
adc
sar
cmp
jno
leave
add
imul
adc
pop
jl
and
cli
inc
push
add
and
jmp
xchg
mov
sbb
add
outs
in
test
popf
int
(bad)
xchg
and
aam
sar
ss
adc
repz
test
cmp
std
jns
(bad)
mov
outs
mov
push
int
push
jmp
mov
idiv
into
and
repnz
fcom
cmp
push
iret
in
push
lds
fnstsw
out
push
cli
enter
add
loope
ins
repz
sbb
je
in
pop
and
and
pop
and
push
retf
cli
pushf
jo
jnp
sar
inc
loopne
xor
je
jl
xchg
(bad)
fucomp
mov
js
sbb
sub
mov
stos
or
inc
mov
cli
mov
mov
jns
add
ficom
mov
or
cmp
bound
pop
cmp
pushf
fsubr
mov
adc
clc
ins
add
pop
xchg
jne
popa
fsub
xchg
loope
mov
sub
mov
(bad)
sar
xchg
jmp
sar
repnz
cmp
push
mov
loopne
mov
sub
call
add
inc
test
je
jp
or
jge
dec
movs
lods
shr
fist
cli
out
xchg
cwde
call
out
jl
mov
retf
xchg
call
ja
ja
sbb
cmp
pushf
add
sub
rcl
scas
and
cwde
sti
je
fsub
push
cmc
mov
movs
movs
mov
(bad)
call
arpl
xchg
bound
adc
adc
add
xchg
mov
jecxz
mov
jmp
test
stos
xor
sub
inc
jge
ja
mov
iret
sbb
out
in
mov
mov
mov
mov
xor
xchg
into
shl
jae
popf
and
add
and
aam
mov
sbb
cmp
inc
ins
pop
cmp
cmp
inc
sbb
dec
cmp
fsubrp
jnp
add
call
popf
sub
push
lahf
and
test
cmp
xor
or
add
ds
pop
push
mov
pop
mov
add
inc
mov
mov
push
outs
addr16
stc
pop
mov
pusha
mov
hlt
fist
sub
fiadd
fs
inc
jo
sahf
mov
test
xor
push
in
mov
push
ret
gs
xlat
sbb
leave
movs
lahf
sbb
jmp
or
add
pop
inc
hlt
mov
push
loope
call
in
out
cwde
mov
mov
add
fisubr
fwait
inc
ds
sbb
and
imul
(bad)
sbb
data16
or
push
mov
btr
push
std
fisubr
push
mov
mov
xchg
or
push
sbb
push
cmp
ins
shl
cdq
adc
mov
push
sbb
sub
pop
inc
pop
pop
mov
mov
xchg
mov
enter
cmp
test
push
jns
xor
cld
jae
dec
fisubr
mov
leave
sbb
sub
xor
push
mov
imul
cli
fist
push
das
add
cmp
rcr
or
out
out
sub
cmp
popa
int
mov
sti
sub
mov
cs
imul
add
aas
xchg
and
iret
mov
retf
sbb
add
mov
ja
outs
sti
xchg
in
xor
loope
xchg
push
scas
jg
fldenv
nop
push
or
inc
mov
lock
jmp
mov
and
stos
stc
clc
outs
daa
cs
sbb
int
push
xor
gs
xchg
push
xor
pop
arpl
call
js
sub
cmc
mov
lods
daa
inc
jge
in
gs
not
in
cmp
cwde
out
adc
lods
mov
es
ins
cmp
movs
cmc
rcl
cli
dec
and
adc
inc
imul
sbb
jg
sbb
and
lods
push
xchg
add
movs
add
xchg
icebp
out
xchg
outs
xor
xchg
add
push
int
inc
xchg
lahf
ins
fs
ins
sbb
popa
int
sar
out
mov
movs
ds
call
rol
mov
inc
jns
fwait
(bad)
(bad)
push
push
jl
and
dec
push
push
xchg
xlat
xchg
shr
sbb
sub
pop
scas
sbb
push
push
iret
cmps
arpl
cmp
adc
xor
arpl
lock
fcmove
or
add
xchg
mov
jbe
sub
push
dec
inc
push
cs
ret
inc
(bad)
adc
or
mov
push
mov
jnp
add
mov
mov
add
scas
xor
sub
stos
dec
rol
lds
adc
inc
outs
shr
out
test
cli
dec
mov
mov
imul
cld
or
fisubr
dec
outs
adc
sub
dec
loopne
sub
xchg
jecxz
mov
sub
imul
in
lods
inc
add
mov
adc
mov
mov
sub
or
outs
jge
fucom
and
mov
lock
bound
dec
mov
xchg
pop
ins
pushf
movs
neg
rol
inc
push
inc
lods
jne
xor
vpcmpeqd
fcomp
sbb
push
cmps
shr
cmc
cmp
inc
mov
fwait
mul
sbb
xchg
push
loopne
rol
cdq
adc
call
jmp
fnsave
jnp
ins
jg
cmp
fmul
sbb
icebp
push
shl
stos
mov
cmp
fild
jo
mov
(bad)
xchg
(bad)
xchg
mov
in
dec
leave
cld
add
ja
jno
div
(bad)
leave
push
test
xor
imul
bound
lea
sbb
movs
jle
add
int
dec
out
(bad)
jg
(bad)
sti
imul
sbb
xchg
or
in
jae
das
stos
lods
fild
cwde
out
dec
popa
movs
retf
fstp
jle
not
(bad)
sahf
or
test
inc
xlat
xchg
into
xor
pusha
dec
push
xchg
or
gs
jb
fcom
mov
mov
shl
push
or
cmp
je
mov
add
adc
inc
daa
push
out
scas
ins
pushf
push
outs
and
sub
add
push
pop
movs
ror
mov
mov
(bad)
test
cmp
out
xor
xor
and
fwait
aas
add
xor
push
pop
lods
mov
cmp
or
fstp
pop
cli
in
xchg
loop
inc
xchg
xlat
inc
sbb
fsub
ror
cs
fsub
aam
ins
loopne
xchg
sbb
push
fucomi
jp
jae
mov
push
cld
jbe
dec
ja
fst
fsubr
xchg
retf
jg
jg
leave
mov
out
mov
or
icebp
jns
mov
inc
mov
cmp
add
sbb
xor
fbstp
mov
dec
or
and
ja
in
shl
fsub
pop
clc
sub
into
jmp
mov
test
and
lds
jo
push
and
fadd
in
loope
imul
xchg
push
cmp
and
in
mov
out
push
hlt
sbb
adc
sbb
lahf
adc
jo
int3
or
jmp
lds
mov
cwde
iret
fsub
int
xor
das
mov
jbe
mov
fisub
sahf
or
and
call
test
ss
dec
mov
and
cmp
and
jle
pop
mov
repz
sbb
cmps
adc
std
rol
add
mov
fstp
outs
mov
push
mov
add
or
movs
clc
dec
jg
jae
xchg
pop
pop
addr16
aas
adc
cmp
aad
out
lock
mov
pop
leave
push
aam
pusha
pop
cdq
mov
inc
sbb
add
add
loope
mov
mov
and
fist
and
ret
(bad)
or
mov
das
pop
(bad)
arpl
aas
aas
mov
scas
test
adc
lea
arpl
pop
cmp
jb
adc
cli
mov
lods
or
rol
xchg
mov
and
mov
adc
loopne
inc
lahf
mov
xchg
push
or
inc
inc
mov
or
adc
rol
mov
inc
or
adc
jnp
pop
pop
sbb
inc
lods
xor
test
mov
add
mov
sahf
aas
push
push
sbb
push
les
cwde
dec
cmp
(bad)
repz
cmp
stos
mov
test
jg
out
jne
fst
push
xchg
addr16
and
stc
lea
aad
cmp
arpl
clc
leave
test
pop
lea
test
add
xchg
pop
mov
cld
xchg
mov
dec
(bad)
mov
push
push
add
aad
sub
sbb
xchg
dec
clc
jnp
or
xchg
ja
sbb
clc
mov
rcl
fnsave
ins
jge
ins
rcl
xor
mov
mov
mov
stc
jmp
into
mov
gs
loope
js
adc
pop
lods
xor
repz
data16
cmp
mov
dec
cmp
dec
call
adc
out
dec
xchg
movs
out
std
ss
(bad)
xchg
mov
push
pop
add
sub
adc
fidiv
sub
movs
(bad)
adc
enter
jbe
shr
enter
xchg
push
dec
and
stc
and
sub
cmps
(bad)
cmp
xchg
mov
pusha
addr16
or
adc
push
ins
leave
mov
and
cmp
pop
stos
std
mov
pushf
out
mov
mov
jne
stos
push
mov
dec
mov
adc
mov
enter
cmp
dec
push
fistp
inc
and
rcr
ds
and
push
and
outs
lock
dec
mov
add
or
pop
pop
shl
(bad)
aam
repnz
ja
xchg
outs
push
int
push
xchg
xchg
mov
sbb
adc
inc
jg
xchg
enter
cmp
je
(bad)
sub
jbe
leave
cmp
je
jge
pop
test
xchg
bound
adc
js
cmp
cmp
out
in
cdq
dec
jbe
jo
mov
jmp
mov
pusha
stos
xchg
dec
dec
inc
rcl
jbe
mov
push
xchg
popf
adc
jb
mov
mov
push
test
ins
cmc
jecxz
ins
push
or
dec
push
pop
mov
mul
xor
cmps
and
lds
mov
mov
and
cmp
adc
test
pop
add
not
xlat
xchg
cmp
dec
xchg
push
ret
xor
mov
(bad)
adc
shl
mov
test
bswap
and
sahf
test
lds
mov
adc
aaa
push
cmps
clc
push
in
cld
mov
sbb
push
sbb
les
out
cld
loope
add
std
ds
fsubr
jnp
pop
in
fstp
mov
repz
fcomp
gs
jo
sbb
out
test
xchg
push
xchg
loop
jb
in
movs
push
push
inc
mov
mov
cld
pop
sub
aam
test
add
call
push
push
mov
jp
xchg
mov
or
cmps
cmp
hlt
or
std
inc
pop
rcl
pop
mov
and
sub
es
(bad)
(bad)
sbb
sbb
mov
bound
addr16
sbb
loope
mov
out
xchg
ror
ret
push
mov
sbb
dec
lock
pusha
cwde
jae
add
xor
sbb
adc
push
add
movs
mov
fwait
les
push
(bad)
out
daa
pop
out
xor
dec
and
sub
or
clc
shl
sti
adc
ins
sbb
mov
fistp
cdq
and
xor
lea
xchg
cmps
(bad)
mov
mov
cli
dec
inc
adc
mov
aaa
outs
test
sub
pushf
xchg
and
sub
pop
out
add
inc
cmps
push
mov
fsqrt
inc
jmp
stos
imul
das
call
mov
icebp
stos
jl
imul
mov
les
cmp
jb
nop
adc
mov
ja
pop
movs
inc
pop
or
scas
stc
ficom
dec
dec
aad
nop
fdivr
push
fcomp
shl
mov
push
adc
inc
sar
bound
cmps
cdq
add
in
pop
fstp
stos
xlat
in
jb
fisub
xor
mov
sar
adc
and
sbb
mov
and
pop
repz
out
les
sbb
mov
add
int
adc
dec
das
pop
cmps
out
inc
mov
js
nop
xchg
in
sahf
xor
inc
mov
xchg
inc
xor
sub
icebp
sbb
aam
mov
inc
pushf
sub
mov
fst
or
mov
fimul
retf
xchg
jle
adc
mov
sub
retf
rol
sahf
iret
adc
fdivrp
sub
retf
je
add
sbb
and
push
loopne
movs
add
add
mov
vmovq
jno
rol
rol
imul
retf
mov
pop
dec
ret
inc
fwait
cli
fwait
and
call
jp
mov
and
xor
cmps
mov
push
xlat
cli
cmp
push
stc
push
jmp
movs
lea
rcr
add
cwde
mov
int3
xchg
mov
int3
das
test
mov
inc
out
js
retf
jbe
bound
or
sar
icebp
mov
test
sbb
js
into
xor
and
fisub
outs
and
cmp
std
inc
jbe
ficomp
fcomp
shl
(bad)
push
les
rol
xor
fisubr
or
dec
push
dec
cmps
out
mov
sbb
pop
in
adc
inc
jno
sbb
es
or
call
icebp
add
movs
stos
pushf
clc
inc
arpl
inc
pushf
and
loopne
je
sbb
xor
mov
cmp
(bad)
pushf
cmp
xchg
cmp
out
into
sub
loope
xchg
xchg
daa
imul
mov
test
fwait
movsx
outs
mov
movs
mov
(bad)
push
xor
sti
fiadd
stos
ret
mov
rcr
adc
outs
sbb
push
repnz
in
xor
pop
call
(bad)
(bad)
icebp
sub
and
(bad)
adc
cwde
jae
pop
popa
push
and
les
inc
ins
(bad)
cld
push
mov
rcr
push
adc
test
sbb
mov
add
dec
(bad)
jmp
xchg
xlat
in
loope
rcr
mov
in
sti
pop
ret
jae
enter
in
mov
ins
pusha
add
fcmovu
jne
popf
sbb
dec
fs
imul
xchg
adc
and
es
jae
jnp
jge
inc
pushf
adc
lea
and
(bad)
stc
ja
inc
imul
jmp
jnp
pusha
xor
xor
mov
ins
bound
inc
mov
jo
in
fcmovnbe
fnstsw
ins
add
scas
test
jnp
mov
bound
mov
adc
push
(bad)
adc
js
ss
fsub
xor
lahf
fsub
cmp
and
call
repnz
sub
cmp
icebp
pop
icebp
push
sub
jb
xchg
(bad)
iret
sti
arpl
xor
cmps
or
popa
adc
outs
jp
aas
xor
cmp
dec
mov
mov
lds
sahf
fwait
mov
dec
or
ds
add
jmp
add
cs
jne
add
adc
xchg
jbe
add
imul
xchg
scas
bnd
iret
in
xchg
dec
and
(bad)
out
adc
push
sub
or
cmp
cli
lahf
xor
imul
aam
jb
fwait
and
pushf
sbb
inc
mov
add
fcmove
xchg
jno
ret
test
add
mov
stos
adc
ss
mov
mov
add
jnp
pop
mov
or
dec
repnz
or
and
in
pusha
clc
mov
call
jbe
imul
clc
arpl
rcr
call
add
imul
pop
adc
bound
cmp
or
pop
lods
cmp
pop
adc
and
shl
test
std
mov
xchg
or
xor
xchg
add
xor
or
adc
out
lds
out
pop
xor
out
sub
movs
push
mov
fs
hlt
enter
out
and
fisub
mov
pop
jecxz
repnz
mov
or
jmp
loope
int3
jle
add
stc
dec
ss
outs
and
movs
cmps
ret
pop
(bad)
enter
mov
repz
sbb
out
mov
jns
inc
or
jp
or
add
ss
push
mov
cdq
adc
(bad)
xchg
inc
cmp
mov
sar
into
fild
ja
iret
dec
jg
dec
lock
cmp
mov
fld
push
in
mov
sbb
(bad)
mov
push
pop
ss
and
cdq
fs
arpl
lock
mov
or
repz
cwde
(bad)
imul
push
popa
sbb
xor
dec
sub
(bad)
in
lods
lods
jl
xchg
fbld
shr
mov
(bad)
in
mov
push
call
mov
mov
loope
mov
pop
jnp
ds
leave
sub
cmp
outs
loopne
dec
out
inc
dec
xchg
mov
loopne
xchg
movs
sahf
jbe
sub
hlt
pop
mov
cmp
ret
cwd
(bad)
jns
sbb
mov
mov
mov
cmp
add
outs
mov
inc
ins
in
push
sahf
inc
in
mov
sbb
cmp
test
mov
loop
and
mov
sahf
push
inc
imul
cmps
cwde
dec
add
cmp
add
ins
or
mov
lahf
cmp
les
adc
and
(bad)
pop
adc
stos
(bad)
mov
cmp
inc
jge
pop
outs
xchg
iret
ins
or
cmp
repnz
out
mov
xchg
mov
aaa
mov
pop
enter
add
adc
inc
repnz
fwait
mov
jne
inc
sbb
stc
sub
call
js
test
mov
mov
pop
xacquire
xchg
fisub
jbe
sub
push
push
fdiv
cmp
out
out
sub
sub
rol
jnp
mov
xor
or
out
mov
jp
mov
das
xor
sbb
xchg
stos
push
aaa
jno
jge
cmp
stos
fwait
pop
dec
xchg
mov
dec
adc
inc
aas
test
adc
inc
test
dec
(bad)
rcr
push
cmp
sbb
jl
movs
pop
das
(bad)
xchg
jo
sub
sub
ret
addr16
xchg
adc
das
stos
or
in
scas
sub
mov
popf
aaa
mov
mov
sbb
out
dec
or
mov
inc
daa
xchg
inc
fbld
test
ficom
sbb
mov
and
loop
test
xor
aas
cwde
add
int
test
cs
mov
shl
addr16
jmp
mov
arpl
add
cmp
scas
xchg
push
lock
pop
pop
int
nop
xor
fbstp
mov
lds
lds
sbb
or
stos
ss
das
dec
pop
stc
out
push
and
xchg
out
xor
pop
bound
bound
bound
imul
enter
mov
jns
dec
dec
in
adc
cdq
cli
repz
jo
adc
jmp
adc
jns
pop
retf
inc
xchg
jo
fsubr
pop
and
mov
add
or
xor
push
inc
sbb
retf
mov
int
outs
shl
sub
jg
js
mov
sar
cmp
pmulhw
sbb
add
mov
pop
dec
jecxz
clc
cmp
sub
lea
in
mov
pop
je
xchg
out
into
retf
push
sub
xor
or
mov
shr
xor
scas
js
jmp
adc
mov
cmp
lods
jb
fidiv
call
ins
sub
and
fmul
fs
das
ficomp
mov
stos
cmp
sub
push
sub
sub
dec
and
aam
shl
pop
push
adc
pop
mov
push
daa
ja
test
retf
cli
stos
je
pop
jl
pop
lahf
shl
repz
fwait
adc
push
imul
stos
loopne
xchg
(bad)
call
sub
leave
xchg
stos
mov
mov
push
daa
in
in
ret
lock
jbe
jecxz
aam
sub
push
std
mov
arpl
cmps
xor
(bad)
ret
sub
push
ret
jnp
lods
inc
imul
push
sub
mov
enter
int3
mov
mov
pop
xchg
or
ins
sub
je
xchg
scas
(bad)
mov
(bad)
cmp
ror
xchg
mov
fmul
shl
jg
pop
dec
jne
and
punpckhdq
adc
rcl
and
jae
xchg
inc
sbb
jno
mov
leave
pop
and
movs
(bad)
cs
or
retf
mov
xor
sub
out
jne
dec
popa
clc
mov
sub
fucomp
mov
cmp
inc
add
or
std
inc
inc
inc
dec
sahf
ffreep
sbb
add
aaa
mov
in
jb
dec
outs
(bad)
sub
scas
loop
or
movs
mov
je
popa
sub
cmp
bound
jb
sub
shl
ret
jb
inc
(bad)
pop
and
and
mov
mov
or
call
into
ds
(bad)
repnz
inc
cmp
popa
pusha
mov
(bad)
inc
and
aas
icebp
sub
dec
push
sbb
or
loopne
inc
cmp
jmp
movs
sbb
sahf
out
test
cmovge
imul
xchg
inc
sbb
mov
jne
or
nop
pop
fcomp
cmp
rcr
mov
and
add
mov
and
mov
imul
mov
inc
mov
imul
mov
or
shr
nop
lock
jae
pop
adc
popf
out
xchg
lds
pop
cmp
cmp
sbb
shr
mov
shl
push
sub
daa
push
pop
xor
cmp
xchg
pop
ins
xchg
loope
sub
pop
adc
iret
xchg
dec
mov
outs
rol
ins
bnd
add
xor
pop
scas
and
outs
cmp
test
jecxz
int
fcmovu
dec
push
sbb
or
popf
jbe
pop
adc
retf
and
fisttp
push
movs
movs
xchg
dec
mov
fcmovnb
inc
xchg
pop
push
imul
leave
mov
in
aas
mov
mov
add
mov
mov
in
add
icebp
aas
ror
rol
mov
xor
idiv
test
pop
mov
cmp
jne
out
cmc
xor
cmp
mov
test
add
xchg
ins
and
int
jmp
lock
loope
jns
cmc
sub
pusha
adc
jmp
pop
iret
fistp
sbb
mov
mov
popa
push
push
cmp
pop
fcomp
ficom
inc
out
shl
das
aas
mov
push
pop
lods
cli
xlat
jbe
add
adc
xor
adc
emms
jmp
data16
mov
sub
inc
xor
test
ret
mov
sbb
mov
icebp
mov
mov
pusha
call
pop
jae
loop
repz
in
stc
mov
and
mov
push
(bad)
ds
mov
test
in
shl
out
jne
mov
xor
jge
fst
ja
mov
cmc
out
neg
jp
pop
popa
cmc
mov
pop
rcl
pop
mov
outs
call
out
cmp
out
xchg
jae
ins
loope
sub
aad
mov
jns
xchg
js
in
imul
and
shl
shl
push
mov
adc
sbb
idiv
imul
aas
sbb
xor
add
jno
dec
mov
fimul
jle
aad
sar
repz
mov
dec
test
sbb
loop
mov
jnp
add
imul
sub
sbb
retf
push
xor
rol
(bad)
jb
cmp
int
pop
loop
push
xchg
movs
or
mov
ds
xor
mov
inc
sbb
sbb
call
sub
out
adc
sub
xor
ret
push
fst
inc
jmp
xlat
rcl
retf
lods
(bad)
fbld
or
daa
jne
xchg
mov
(bad)
fs
ja
xchg
xchg
mov
div
mov
in
les
ja
hlt
mov
ret
mov
dec
mov
test
test
call
jle
hlt
retf
test
mov
ds
pop
dec
pushf
fucomip
and
mov
jne
lock
sub
or
cmp
scas
mov
pop
sub
xchg
loopne
imul
mov
jo
push
sub
jae
clc
xchg
fadd
mov
in
out
pop
clc
push
add
rcl
mov
inc
mov
jecxz
push
lods
pop
sbb
xor
fsubr
cmp
daa
loopne
test
mov
fldcw
test
sbb
dec
in
pop
inc
xchg
sub
adc
pop
icebp
cwde
cmc
test
rcl
xchg
out
add
xchg
inc
mov
repnz
mov
pop
les
mov
xor
or
retf
in
dec
fldcw
fist
dec
scas
inc
xor
inc
mov
mov
js
test
jge
ins
leave
ss
dec
imul
fdivr
and
leave
mov
adc
ja
mov
retf
jg
sub
sub
pop
cdq
mov
jns
add
js
and
daa
push
sbb
mov
and
(bad)
xor
test
jns
and
aam
push
sti
fdecstp
inc
sub
dec
aam
in
cmps
sub
cmps
std
in
xchg
into
jno
cli
(bad)
push
adc
pop
mov
into
pushf
out
xchg
mov
inc
bound
fsub
mov
cmps
cmp
inc
sbb
xchg
push
mov
outs
mov
dec
mov
xor
pusha
dec
sub
push
fmul
in
jae
nop
bound
jecxz
xor
mov
lea
push
data16
mov
dec
jle
call
jmp
icebp
jle
cmp
loopne
jns
jb
or
cmp
in
int
loope
repnz
mov
mov
lock
mov
mov
inc
arpl
xchg
mov
mov
pop
sub
lods
jp
add
dec
pop
or
aam
pop
add
outs
into
cmp
(bad)
jg
not
or
dec
fiadd
sahf
sub
or
xor
pop
js
(bad)
jp
fiadd
xchg
test
and
cmp
rol
fimul
fwait
cmp
dec
stc
(bad)
pop
in
les
ficomp
or
iret
mov
(bad)
fst
sbb
inc
sbb
(bad)
es
mov
fidiv
jo
aam
xchg
inc
add
(bad)
pop
out
cmp
jle
inc
add
sbb
inc
xlat
call
inc
mov
jmp
lods
or
mov
adc
mov
call
and
adc
fs
fwait
pop
jmp
add
fnstcw
pop
push
fwait
mov
lea
mov
scas
and
xchg
push
xchg
pop
sbb
in
jg
ret
xor
and
fistp
inc
ds
xor
sub
jbe
sbb
fcmovne
(bad)
add
inc
push
leave
xchg
xor
pop
pop
ds
or
mov
scas
sbb
jo
in
call
xchg
xor
scas
cmp
mov
cmps
cmp
jnp
loopne
push
jo
push
and
and
cmps
jnp
retf
mov
xchg
mov
or
fcmovnbe
bound
sar
adc
jbe
or
mov
jns
into
hlt
sub
xor
adc
data16
mov
mov
mov
icebp
inc
ror
je
loop
mov
jl
mov
mov
es
(bad)
sub
shl
mov
aad
mov
push
sub
pop
xchg
push
in
scas
call
xchg
add
push
aaa
jp
icebp
push
mov
pop
sbb
adc
into
into
mov
in
dec
adc
test
ret
mov
pop
cmps
scas
hlt
push
sbb
or
cmps
pop
out
push
in
pop
idiv
rol
sar
out
inc
call
and
arpl
mov
inc
push
cmp
xchg
imul
mov
xchg
fs
xchg
ret
aad
xchg
sub
pop
jle
mov
out
xchg
add
jmp
loop
sub
dec
into
dec
jmp
mov
and
sub
shl
loope
rol
xchg
iret
aad
inc
sbb
sub
push
jge
out
jl
sar
and
ds
push
leave
sbb
cmp
push
cld
(bad)
xor
out
push
jb
mov
sbb
sbb
data16
mov
icebp
shl
ja
inc
or
sub
repz
inc
arpl
pop
pop
fmul
mov
jb
push
cs
inc
inc
sub
inc
(bad)
out
mov
cmp
mov
ins
and
mov
pusha
sbb
repz
out
popa
dec
or
cmp
(bad)
push
lds
rcl
inc
sbb
mul
fild
popa
cwde
inc
jmp
leave
(bad)
or
(bad)
inc
lods
ins
daa
retf
mov
(bad)
les
mov
xchg
popf
sub
sti
jp
inc
(bad)
and
test
xor
and
inc
dec
adc
dec
add
test
int
dec
lahf
lods
ins
mov
in
xor
xor
push
mov
add
push
mov
int
stc
xor
pop
mov
or
cmp
xchg
mov
mov
ins
repnz
add
out
test
retf
test
sub
sub
stc
leave
pusha
ret
add
mov
pop
jae
fstp
retf
push
sbb
call
scas
sbb
mov
rcr
and
cs
bound
xchg
jbe
(bad)
inc
enter
mov
pop
les
test
jecxz
cmps
cli
popf
inc
mov
jmp
adc
jns
dec
dec
std
add
imul
in
and
mov
or
neg
fidiv
call
cmp
clc
repnz
out
mov
pop
jmp
cmp
dec
jne
addr16
jecxz
lods
jmp
dec
mov
stc
mov
dec
cmp
xchg
cmp
mov
mov
scas
cmc
call
push
push
mov
das
dec
es
xchg
stc
sbb
mov
dec
in
adc
inc
loopne
clc
enter
pop
loop
test
out
sar
scas
pusha
mov
cmp
push
out
mov
test
push
mov
jb
jae
test
sub
in
sbb
sbb
pop
repz
inc
cld
(bad)
nop
mov
add
sbb
call
repnz
fs
loop
adc
and
push
sub
stos
and
(bad)
cwde
rcr
xchg
push
loop
xor
int
xchg
in
(bad)
mov
add
xor
mov
xchg
push
cwde
imul
or
fimul
xchg
cmp
movs
mov
and
xchg
test
adc
jae
sbb
mov
loop
push
test
xchg
pop
mov
mov
repz
push
add
dec
xor
ret
mov
imul
dec
sahf
pop
mov
ret
add
fwait
retf
mov
dec
int
mov
iret
mov
add
push
sub
lods
and
sbb
add
in
shl
les
xlat
dec
je
out
inc
sar
mov
jg
mov
or
mov
fdivr
out
scas
clc
add
and
add
sub
cmp
mov
cdq
inc
pop
in
test
push
push
add
and
repnz
push
add
mov
lds
push
test
and
dec
pop
mov
lahf
mov
mov
jecxz
dec
push
pushf
adc
sbb
inc
add
xor
pop
mov
add
std
out
(bad)
dec
cmp
sbb
inc
lahf
loop
xchg
jnp
loopne
clc
mov
sbb
xchg
inc
shl
jge
cs
mov
neg
cs
push
or
ss
add
test
xor
loop
stos
jns
mov
scas
mov
add
push
dec
sbb
add
jecxz
add
call
repnz
out
cmps
pop
dec
dec
call
jmp
ja
ror
push
(bad)
or
xchg
pop
xchg
sbb
jo
or
cmps
retf
mov
sub
xor
shr
test
aaa
xchg
test
jecxz
mov
push
sub
and
aas
ds
cmp
in
mov
into
stos
hlt
scas
mov
fwait
adc
sbb
pop
pop
dec
mov
(bad)
mov
dec
fld
inc
out
lock
jb
inc
addr16
xor
dec
int
sub
jmp
jecxz
scas
enter
xchg
rol
sbb
mov
inc
fwait
adc
(bad)
(bad)
mov
into
push
inc
leave
push
cmps
(bad)
xchg
jbe
jb
dec
jne
pop
aas
(bad)
in
jae
xchg
popf
dec
mov
or
pop
out
in
pop
shr
sbb
sub
inc
mov
mov
ss
pop
aad
cmp
stos
(bad)
cmp
and
fsubr
push
push
cmp
push
retf
xlat
stos
mov
pushf
lock
adc
mov
les
ror
scas
imul
mov
pop
adc
cmp
leave
aas
repz
stos
adc
shl
lock
fcmovnb
dec
dec
add
sti
popw
push
sbb
mov
fs
cwde
out
and
das
sbb
in
into
pop
aas
movs
add
shl
clc
mov
(bad)
jns
out
pop
sbb
mov
xchg
hlt
mov
or
clc
imul
mov
pop
aaa
(bad)
icebp
leave
pop
cmp
ret
jae
pop
push
xchg
(bad)
setge
xchg
xchg
imul
lea
sub
push
enter
jp
(bad)
fwait
jb
mov
add
push
push
pushf
mov
ins
and
adc
lock
test
inc
or
dec
cmp
mov
push
fsubr
rcl
lods
cmp
shl
pop
out
stos
adc
inc
shl
adc
inc
clc
sahf
push
xchg
and
mov
repz
mov
(bad)
in
jp
pop
jg
add
(bad)
fmul
js
and
pop
xor
xchg
mov
std
push
mov
adc
pop
nop
mov
fidivr
add
out
adc
test
and
push
ja
xor
sub
dec
inc
dec
pop
push
(bad)
aaa
fst
movs
into
push
dec
add
lods
out
mov
pop
push
push
shl
iret
loopne
hlt
jb
les
fcom
or
cmp
pop
jns
pop
inc
jg
cmp
pop
test
mov
fstp
mov
mov
outs
ins
cmp
(bad)
pusha
loopne
lds
rcr
pop
inc
pusha
loopne
push
scas
dec
js
xchg
call
mov
(bad)
lahf
push
aaa
or
and
adc
popa
jo
std
mov
test
ins
add
out
inc
jb
pop
in
out
leave
popf
xchg
sbb
arpl
std
in
sub
and
cs
mov
fst
push
rcr
aam
clc
mov
popf
fabs
xlat
in
gs
fld
gs
sbb
mov
rol
mov
pop
inc
dec
test
gs
add
sub
xor
adc
leave
adc
pop
mov
dec
xchg
scas
ficom
nop
(bad)
scas
in
pop
les
out
fbstp
xchg
push
outs
(bad)
adc
jo
dec
xchg
xor
cmp
and
nop
dec
push
xchg
dec
cld
pop
data16
xor
ins
adc
adc
jne
adc
ret
scas
xor
mov
imul
pop
mov
or
ds
neg
jno
xchg
pop
mov
push
add
lahf
adc
inc
add
or
cmp
or
je
arpl
xchg
mov
inc
enter
jmp
in
enter
adc
pop
cmp
mov
push
xor
adc
pop
pop
or
add
nop
add
out
add
cmp
scas
push
dec
add
inc
push
call
dec
call
and
and
or
dec
test
(bad)
inc
mov
inc
xchg
call
pop
cs
psadbw
push
push
mov
(bad)
and
adc
mov
ret
loope
movs
(bad)
mov
or
mov
pop
or
mov
arpl
mov
ror
mov
add
xor
(bad)
add
mov
mov
fist
push
loope
xchg
stc
out
mov
data16
hlt
imul
in
inc
mov
push
or
xchg
js
sbb
and
mov
popf
(bad)
data16
imul
sub
add
push
inc
adc
movq
lds
jmp
jae
jo
mov
mov
lock
repnz
sbb
mov
lahf
cwde
jmp
hlt
xchg
cwde
xchg
push
imul
jecxz
or
pop
in
mov
mov
movs
rcl
sbb
or
mov
mov
call
mov
rcl
lods
jge
(bad)
jle
push
inc
xchg
inc
icebp
int
in
push
ret
xchg
jmp
sahf
ja
loop
mov
imul
pop
repnz
ins
(bad)
pushf
dec
add
or
rol
xor
movs
xchg
mov
(bad)
repnz
bound
or
lds
div
adc
aad
out
xor
mov
pop
push
jb
out
pusha
in
leave
add
(bad)
call
ficom
adc
call
push
sti
dec
cdq
mov
mov
clc
jge
jbe
shr
not
loope
lds
neg
lock
cmps
movs
aas
or
sub
movs
jle
jg
jp
dec
stos
fisttp
and
mov
push
icebp
lds
out
popf
retf
inc
fpatan
out
repz
retf
mov
dec
add
jbe
stos
sbb
mov
dec
daa
sti
ds
jmp
sub
mov
sub
nop
hlt
add
div
rcr
pop
mov
adc
sbb
xlat
fistp
clc
ins
imul
data16
pop
call
sub
shr
data16
rol
rcr
xchg
ret
(bad)
jp
mov
adc
rcr
mov
cmp
mov
aad
mov
je
xor
int3
leave
jae
cmc
adc
pop
mov
jmp
pop
arpl
fild
fs
sti
sbb
and
or
stos
inc
fdivr
jmp
(bad)
sub
lods
ret
mov
mov
pop
fwait
and
sub
and
jns
hlt
lahf
(bad)
sbb
int
fistp
nop
and
enter
adc
sub
dec
ins
pop
lods
mov
icebp
push
xchg
test
push
dec
pop
es
xchg
or
je
push
dec
repnz
sar
cli
movs
dec
das
sbb
pop
mov
sbb
mov
inc
hlt
cli
dec
add
movs
push
mov
out
daa
(bad)
mov
inc
xor
sahf
push
and
pop
daa
daa
add
call
sub
push
fcmovbe
jo
into
or
and
mov
in
sub
movs
fyl2x
imul
hlt
ret
adc
cmp
rcl
pop
adc
add
push
or
sbb
in
xchg
nop
xor
(bad)
cli
imul
daa
icebp
inc
add
hlt
imul
cmps
mov
lea
test
push
add
push
mov
fst
into
mov
jle
xor
out
cmp
and
mov
push
js
inc
add
aaa
shl
pop
push
xor
in
inc
inc
cmp
loope
pop
and
xor
mov
sub
std
leave
xchg
sbb
nop
xor
(bad)
push
sub
ds
sub
mov
ss
lods
sbb
xor
mov
das
sahf
sbb
push
xchg
idiv
sbb
jns
mov
(bad)
push
sbb
aad
(bad)
mov
out
push
adc
aas
mov
in
jno
stc
jmp
pushf
outs
movs
push
xchg
jae
mov
stos
scas
leave
xor
fnstsw
xor
test
(bad)
ja
daa
call
into
stos
mov
imul
movq
clc
and
or
enter
jmp
test
push
das
cmp
push
and
fistp
sbb
and
in
les
adc
pop
lock
cmps
call
push
sbb
cmp
mov
inc
adc
das
pop
cmovg
push
shr
sbb
inc
cmp
xchg
mov
jno
cmp
es
jmp
mov
mov
xchg
and
data16
sti
xchg
sbb
cli
mov
out
retf
je
dec
ins
add
(bad)
xchg
inc
sub
cmps
enter
jno
nop
fs
push
xchg
push
(bad)
jo
frstor
xor
(bad)
jmp
dec
test
idiv
into
xchg
jne
test
cmps
mov
sti
loope
(bad)
and
test
enter
cdq
imul
xchg
fldcw
inc
pop
mov
dec
or
cmc
push
les
stos
fxam
mov
mov
fs
lock
cmps
scas
fmul
mov
cmps
fneni(8087
aad
popf
push
stos
jne
adc
imul
icebp
arpl
mov
jmp
pop
in
adc
(bad)
xor
sbb
mov
in
cli
repz
clc
sub
imul
shl
es
jle
je
(bad)
stos
or
popf
pusha
pop
inc
mov
jno
lods
pusha
leave
in
call
sbb
inc
outs
xor
adc
and
jle
popf
lock
into
stos
icebp
jge
sub
xchg
cli
data16
ja
outs
xchg
or
push
dec
scas
mov
add
inc
imul
push
repz
sbb
dec
fcomp
fcomp
sbb
xchg
iret
lock
sub
outs
inc
mov
adc
mov
mov
sbb
mov
ins
push
push
adc
sub
adc
sti
inc
mov
mov
xor
push
or
mov
jns
ins
fsubr
push
jnp
mov
shr
jge
jae
xor
fimul
jae
or
lds
arpl
jle
push
popf
retf
jnp
sahf
int3
xor
jl
sbb
push
add
scas
xchg
movs
retf
sub
cmp
mov
fwait
(bad)
push
mov
mul
push
imul
pushf
gs
jp
mov
dec
leave
bound
ficom
sub
mov
aad
dec
bound
div
cli
mov
rol
mov
xchg
loope
xchg
stos
pushf
gs
xor
or
ror
(bad)
pop
hlt
outs
cli
mov
xchg
dec
nop
xor
dec
shr
adc
pop
aas
cli
sbb
sub
fistp
ss
popf
add
xchg
inc
retf
lods
pop
call
test
(bad)
mov
fstp
gs
lods
fsubr
retf
gs
jecxz
popf
xor
sbb
aas
call
loop
outs
jae
ja
icebp
mov
push
js
movs
icebp
xchg
push
push
or
cmc
jecxz
inc
call
jmp
push
fwait
cdq
xchg
push
ja
push
xchg
leave
xchg
scas
retf
jge
jg
jp
in
daa
push
std
mov
xchg
jo
dec
test
call
test
jo
pop
retf
mov
imul
dec
mov
dec
scas
inc
adc
test
popf
icebp
dec
aaa
(bad)
call
repz
mov
mov
push
ror
shr
dec
out
dec
stc
mul
jl
dec
std
mov
xchg
test
cmp
idiv
ret
test
test
push
xor
push
push
mov
jo
or
out
ins
sbb
inc
xchg
xor
sbb
jns
inc
popf
adc
xchg
sti
inc
inc
call
aaa
adc
dec
mov
(bad)
dec
pop
xchg
arpl
mov
arpl
pushf
test
xor
bound
jno
aam
mov
inc
xchg
inc
xor
lahf
call
ror
jge
adc
loope
or
test
dec
jae
push
mov
add
sub
test
ret
cmps
outs
dec
loope
bound
out
fadd
adc
sti
out
in
and
(bad)
enter
jne
int
inc
addr16
movs
mov
mov
push
lods
or
jb
cwde
mov
add
cmps
(bad)
pop
sub
and
aaa
cmc
pop
mov
mov
xchg
int3
outs
add
mov
add
ins
mov
inc
xchg
and
std
sbb
pop
mov
mov
add
push
in
aam
stos
lods
pop
fs
imul
rol
xor
inc
clc
jge
adc
adc
ret
cmp
xchg
xor
out
cmp
add
or
imul
dec
and
adc
into
inc
and
inc
mov
cmp
stos
xchg
push
icebp
leave
pop
mov
retf
aam
push
fldenv
aaa
daa
jo
dec
cld
lds
xchg
call
jnp
push
xchg
addr16
and
fcomp
sub
and
push
fcomp
mov
xlat
pop
sub
out
out
pop
mov
ret
fist
in
retf
rol
rcl
lods
arpl
sub
mov
mov
cwde
xchg
push
jge
push
fsub
mov
mov
push
push
ja
addr16
popa
das
ss
imul
xchg
pop
jns
cmp
cmp
cld
out
jg
mov
jb
cdq
cmp
jo
pop
pop
movs
lods
and
in
pushf
je
cmp
add
xlat
add
movs
jge
push
shr
xchg
cmc
mov
aas
pop
sbb
and
nop
dec
xadd
sub
push
push
into
inc
jne
sub
mov
loop
js
sbb
rcl
adc
jmp
sbb
aaa
test
mov
add
stos
add
ret
or
dec
mov
xor
pop
inc
inc
xchg
push
jecxz
cld
adc
xchg
add
fnstcw
movs
repnz
fsub
mov
or
pop
xchg
pop
jp
mov
sbb
int
sbb
jno
sahf
enter
sub
popa
dec
(bad)
cmp
xchg
dec
fwait
iret
call
xchg
push
mov
popa
in
mul
cwde
mov
iret
pop
mov
mov
add
cmps
js
xor
fldenv
cmp
inc
xchg
shl
cmp
loopne
and
or
fsub
or
je
rcl
jne
cmp
add
pop
jmp
imul
push
jno
dec
inc
xchg
repnz
cmps
and
cmp
jno
(bad)
mov
add
mov
pop
jle
cmp
mov
(bad)
stos
test
dec
sub
idiv
(bad)
pop
icebp
test
mov
cmp
and
int3
int3
mov
and
cmp
imul
es
inc
sar
xchg
enter
call
retf
movs
cmps
mov
sbb
xchg
or
xchg
jnp
in
repz
xchg
xchg
jmp
mov
movs
aaa
or
adc
std
and
mov
dec
mov
(bad)
sbb
rcr
das
push
push
shl
inc
ficomp
jg
add
mov
outs
loop
xchg
sbb
iret
adc
ds
mov
or
scas
inc
jae
test
shl
dec
lods
push
mov
xchg
cwde
mov
mov
data16
int3
lods
cmp
or
sahf
xor
or
or
inc
jg
(bad)
dec
mov
retf
jge
xchg
loope
jns
sbb
(bad)
cmp
test
mov
mov
mov
pop
leave
push
mov
push
adc
inc
sub
icebp
and
popa
retf
push
psrld
scas
repz
ins
dec
aaa
test
movs
mov
popa
mul
push
leave
push
ins
xor
in
push
daa
repz
shl
scas
push
sub
stos
and
jl
xlat
xchg
pop
(bad)
mov
and
lahf
fild
mov
cmp
fisttp
ja
test
mov
inc
add
outs
and
xchg
adc
mov
or
or
inc
mov
sub
sahf
test
sbb
js
test
int
push
ror
stc
dec
xor
into
fwait
ret
jge
div
mov
xchg
ret
and
or
jno
lock
sbb
mov
imul
and
xor
(bad)
mov
pop
out
sub
call
jno
pop
dec
scas
std
cmp
ret
jmp
push
add
cmps
mov
and
push
sbb
jbe
sub
push
pop
inc
pop
pop
pop
or
dec
std
push
inc
cmps
sbb
sbb
mov
sbb
mov
xchg
jnp
mov
rcl
xabort
xchg
fist
cmp
jecxz
inc
sub
xor
mov
jnp
shl
dec
or
and
scas
repz
bound
mov
mov
outs
adc
les
add
xchg
fs
sbb
pop
ds
arpl
xchg
leave
in
cmp
dec
rcr
inc
dec
and
mov
or
loopne
iret
jg
push
jnp
repz
or
push
pop
test
jne
loop
inc
inc
loop
pop
sti
les
pop
hlt
adc
test
push
ss
pop
dec
js
ret
mov
outs
and
add
adc
je
dec
mov
cmp
or
ins
jns
and
bound
gs
(bad)
mov
mov
and
fisttp
pushf
retf
sub
or
cmp
push
loope
(bad)
leave
call
and
stos
fcmovu
addr16
cli
push
hlt
sbb
fnstsw
(bad)
jnp
or
mov
loopne
pop
lods
psubusw
adc
out
add
stos
ror
cwde
movs
and
jmp
xor
vpaddd
push
ret
jge
in
call
mov
jmp
add
arpl
int3
mov
out
adc
cmp
mov
mov
xlat
dec
sub
js
je
clc
iret
mov
sub
xor
mov
(bad)
mov
xchg
pushf
adc
outs
inc
inc
xchg
retf
push
adc
std
mov
ja
sub
test
rcr
leave
jmp
retf
call
sbb
cld
pop
loope
xchg
cmp
sub
popf
push
xchg
les
pop
(bad)
mov
sahf
adc
in
retf
push
push
(bad)
iret
jmp
xor
sub
push
(bad)
mov
jae
mov
jmp
mov
mov
aaa
push
addr16
or
pop
das
bound
in
pop
sub
int
jb
test
int3
or
jmp
pop
inc
mov
aaa
add
pop
loopne
mov
pop
sbb
jno
add
leave
(bad)
dec
sub
dec
in
(bad)
ficom
shl
dec
jns
ret
cs
or
adc
dec
adc
push
dec
xor
xchg
jle
fwait
cmp
pop
push
xor
loop
add
or
cld
ss
pop
cmp
mov
test
inc
fild
and
cmp
hlt
aaa
or
sbb
fs
dec
dec
jae
retf
push
pop
in
retf
aad
xchg
push
js
enter
mov
cmovo
mov
jmp
js
cwde
mov
daa
push
fld
lods
mov
and
cmps
xor
ror
xor
(bad)
ins
dec
test
aad
or
inc
xchg
jb
inc
sbb
pop
jno
mov
cmp
(bad)
out
dec
mov
xor
mov
stos
xchg
mov
test
jecxz
leave
je
mov
imul
jg
hlt
inc
sub
sbb
lods
dec
enter
push
repnz
xor
jmp
inc
jmp
lea
xchg
clc
fiadd
test
shl
test
jl
mov
out
inc
test
fcmovnb
cmp
mov
push
je
ficom
xor
mov
cmp
xchg
or
cli
sub
stos
or
dec
leave
retf
int3
out
mov
fld
jnp
or
pop
aaa
adc
fistp
adc
cmp
mov
xor
mov
ja
arpl
mov
out
mov
push
mov
sub
sar
cmp
stos
leave
add
jno
daa
pop
ret
lods
jmp
(bad)
xor
std
pushf
lea
imul
pop
add
xor
cmp
adc
lds
mov
add
sbb
inc
jmp
jle
jns
fistp
int3
push
rol
inc
sbb
int3
ss
dec
movs
dec
test
mov
mov
inc
sub
into
out
scas
fcmovu
sub
add
fisubr
xchg
sbb
sbb
addps
xchg
push
inc
mov
int
or
imul
(bad)
pop
ins
sub
lds
daa
lods
movs
xlat
dec
sbb
push
sbb
push
mov
mov
aas
retf
inc
sbb
jmp
mov
or
cmp
fcom
shl
test
and
cmp
addr16
les
mov
sub
bound
xchg
adc
adc
sub
in
sbb
lods
fisub
xor
pop
out
test
cwde
cmp
mov
sbb
mov
mov
fadd
das
jmp
(bad)
stc
cdq
add
or
mov
(bad)
inc
add
mov
out
dec
jmp
rcr
popf
jne
cli
(bad)
mov
aad
or
stc
in
fmul
or
sbb
out
xchg
pop
push
out
(bad)
call
jle
xchg
sub
inc
fdivr
sub
lahf
cs
push
dec
dec
sbb
add
xchg
dec
sbb
add
rol
sar
xchg
bound
jnp
dec
or
cli
pop
dec
inc
pop
pop
imul
mov
cmp
and
xchg
xlat
fnstcw
es
out
jns
inc
mov
jle
imul
fild
jbe
shr
inc
mov
ja
aad
xor
(bad)
cmp
mov
jns
js
nop
in
inc
sub
call
(bad)
arpl
jge
and
jb
mov
inc
sbb
dec
push
jo
int
dec
lock
enter
mov
cmc
cs
inc
push
cdq
add
in
push
aam
sbb
mov
aas
fistp
push
and
inc
out
add
cmp
pop
mov
(bad)
jb
xchg
mov
cdq
cmp
push
jecxz
ficomp
sbb
leave
push
jecxz
les
jl
retf
in
adc
mov
jo
cmps
pop
ret
push
pop
mov
scas
xchg
int3
sbb
sbb
mov
xor
cmp
sti
test
fisttp
stos
xor
jle
inc
cmp
test
inc
pop
imul
repz
scas
popa
scas
jb
(bad)
not
mov
lds
pushf
xlat
fwait
xor
xlat
mov
inc
pop
inc
pop
xchg
sahf
shl
inc
(bad)
cdq
mov
or
fisub
and
sbb
cmp
xor
xchg
pushf
or
rcl
add
dec
sub
into
mov
in
(bad)
je
push
pop
fwait
sbb
inc
jge
cmp
cli
jb
sar
aas
lahf
add
movs
cs
sub
pop
push
mov
sub
mov
cmp
fsub
inc
in
fcomi
and
(bad)
jae
and
pop
sbb
add
xchg
clc
idiv
or
sbb
push
pop
scas
das
jae
add
imul
repz
inc
inc
mov
mov
clc
and
je
mov
or
stc
adc
rol
test
mov
mov
lea
cmp
int3
fadd
cmps
mov
cs
repnz
ret
inc
xor
rcr
xchg
ins
pop
iret
cmp
jns
add
inc
sbb
jle
add
push
call
(bad)
inc
fsubr
pusha
das
dec
push
pop
inc
jb
and
scas
pop
out
mov
mov
shr
aam
dec
jns
lahf
push
nop
mov
adc
lock
cmp
mov
jno
retf
inc
push
or
mov
(bad)
std
(bad)
dec
mov
int3
push
pushf
fisub
pop
lock
fistp
dec
pop
scas
inc
dec
inc
and
dec
inc
xor
scas
in
or
push
aad
cmps
push
xchg
and
(bad)
jecxz
ror
pop
loop
xchg
pshufw
xor
into
xor
in
jmp
in
sar
jmp
and
clc
loop
movs
cmp
jecxz
je
mov
call
push
hlt
pop
out
pop
je
cmp
push
shl
scas
pop
imul
xor
mov
xor
add
add
aam
mov
push
push
aad
jmp
call
cmp
rcr
push
xchg
in
sub
into
movs
jo
push
push
xchg
pop
fistp
xchg
push
pop
lock
fidivr
sti
bound
sbb
sbb
das
adc
out
xor
test
or
xchg
and
dec
add
mov
jp
daa
add
mov
or
(bad)
fild
ds
jp
in
mov
test
add
jp
jno
pop
rol
add
ins
call
xlat
inc
jae
lea
dec
mov
dec
xor
repnz
arpl
add
or
mov
aaa
sbb
pop
jae
cmps
xchg
addr16
test
and
outs
je
jmp
sbb
rcr
jg
jp
push
lods
sahf
mul
lahf
mov
mov
inc
icebp
sbb
dec
push
bound
push
repnz
cmc
retf
jmp
dec
std
and
js
inc
in
cdq
out
pop
dec
cmp
jecxz
push
imul
(bad)
cs
bound
and
jno
mov
mov
or
dec
push
jle
xchg
(bad)
lea
sub
(bad)
rcr
stos
jo
into
pusha
aas
dec
jo
cmp
ja
xchg
mov
repnz
xor
dec
dec
jecxz
popf
sbb
jp
xchg
jl
scas
dec
repz
sub
jo
je
jne
call
and
and
mov
ins
rol
ss
jae
push
adc
sbb
xchg
arpl
cli
dec
push
mov
push
xchg
push
xchg
fs
inc
push
out
ins
outs
ins
pop
fwait
pop
pop
mov
fsub
xor
test
sbb
idiv
dec
push
sub
inc
adc
jo
xor
cmps
lds
into
dec
popf
nop
xchg
push
jb
mov
sahf
inc
jns
mov
retf
mov
stos
xchg
jmp
xchg
loop
inc
xor
gs
or
sbb
xor
movs
or
add
fdivr
cmp
dec
pop
mov
retf
out
xor
cmp
push
and
add
ss
jge
push
stc
pop
rcl
out
jecxz
push
pop
not
(bad)
fnstcw
lods
in
xchg
mov
icebp
push
cmps
push
cmp
push
mov
stc
or
pop
sub
jns
pop
imul
jbe
sbb
mov
mov
arpl
test
add
out
sbb
cwde
shl
or
inc
inc
add
les
imul
push
fldenv
xchg
cmp
test
fistp
ror
stos
push
jnp
mov
jns
jle
popa
jle
cld
mov
and
popf
sbb
aam
cmc
jb
cmp
cmp
sbb
inc
push
movs
mov
jmp
adc
das
retf
call
mov
add
add
rcl
es
or
inc
sahf
jle
or
xchg
inc
lahf
ret
cmps
pop
sub
cmp
dec
mov
cmp
mov
fsubr
push
pop
loopne
mov
mov
nop
js
outs
push
aad
in
pop
mov
jge
mov
jp
add
cmp
stos
xor
pop
data16
jmp
add
lods
add
inc
push
and
jl
bound
movs
nop
gs
cmc
jmp
dec
mov
outs
mov
mov
xchg
mov
mov
jge
adc
lock
add
pop
and
cmps
movs
pop
cli
pusha
mov
mov
fwait
enter
mov
xor
mov
cmp
test
(bad)
dec
pop
in
xor
retf
sub
dec
adc
scas
xor
retf
fld
sbb
enter
in
adc
clc
call
(bad)
test
inc
mov
imul
xchg
xchg
das
loopne
pop
inc
push
xor
movs
sub
mov
cmps
test
rcl
movs
jl
sti
(bad)
dec
jnp
(bad)
dec
jne
mov
test
cmp
jb
pop
sbb
dec
pop
mov
pop
imul
in
bound
fld
imul
or
inc
loopne
(bad)
jmp
fld
jbe
icebp
ret
inc
jae
sbb
(bad)
mov
mov
jecxz
ret
pop
fstp
shl
inc
fsub
and
jo
lock
pop
scas
push
jle
pop
add
mov
pop
neg
cmp
into
daa
div
icebp
or
push
dec
nop
nop
in
arpl
ss
adc
push
mov
(bad)
fisubr
push
and
dec
inc
(bad)
aam
xor
xchg
cdq
or
jne
stos
push
sub
addr16
test
test
iret
pop
inc
pop
jecxz
xchg
sub
stos
mov
retf
cmp
jno
aas
(bad)
sbb
(bad)
in
adc
jne
clc
pop
sub
jg
fiadd
pop
leave
(bad)
out
iretw
stos
adc
fisubr
hlt
adc
es
adc
push
jne
in
hlt
xchg
or
lock
jns
mov
jno
test
push
icebp
fisub
pop
jns
aad
mov
sub
cmc
ror
xor
hlt
mov
xchg
(bad)
stc
repnz
mov
or
scas
daa
test
inc
sub
and
stc
ins
mov
pop
mov
(bad)
ret
pop
mov
push
call
jnp
loop
(bad)
dec
sbb
pushf
or
adc
pop
hlt
ins
mov
sbb
retf
and
mov
fs
inc
mov
movs
inc
out
xor
adc
maxps
popa
(bad)
fxch
pop
cmc
mul
mov
dec
add
dec
pop
nop
mov
sbb
sar
mov
pusha
stc
repnz
jae
and
push
retf
add
les
mov
rcl
fist
sub
lds
lock
push
mov
push
retf
in
or
jno
sbb
xor
in
cmc
data16
add
jg
scas
outs
pushf
int
call
repz
or
ret
mov
outs
xchg
xchg
mov
add
fs
mov
mov
nop
pop
pusha
stos
jmp
and
mov
inc
into
ret
jns
cmp
push
call
pop
cmp
nop
je
stc
cs
push
dec
sbb
mov
jae
xchg
pushf
not
in
mov
cmp
sub
mov
xor
inc
test
aam
repz
and
dec
fist
(bad)
cdq
in
addr16
inc
in
ret
add
cwde
adc
or
sbb
test
jnp
dec
add
push
in
(bad)
mov
jle
xchg
std
arpl
jns
sub
retf
jae
mov
and
or
dec
push
into
dec
loope
sub
and
neg
sub
out
icebp
mov
loop
les
ss
add
xchg
imul
dec
cmps
ja
rcl
dec
cwde
add
cmps
fucom
test
jg
or
xchg
dec
sti
clc
and
mov
pusha
jecxz
(bad)
movs
sub
mov
xchg
pop
mov
or
mov
int3
xor
out
xchg
popa
shr
ret
sbb
test
popa
pop
mov
sbb
fstp
outs
lock
mov
mov
hlt
dec
pop
daa
cmp
xlat
sub
push
mov
lods
push
xor
test
outs
cmps
popf
push
stc
push
xlat
push
addps
loope
pop
and
cmps
dec
jbe
mov
mov
ret
or
imul
js
sbb
ins
jg
fdivr
push
jmp
cs
xchg
aam
or
rol
or
out
sub
outs
(bad)
push
outs
inc
test
outs
inc
inc
sbb
and
sub
or
stos
repz
stos
sbb
mov
add
ins
in
jae
fs
test
sub
fmul
mov
imul
sub
ja
jge
dec
repnz
mov
dec
xor
push
dec
pop
mov
cmp
cmp
in
push
mov
mov
ror
and
inc
jae
inc
movs
fst
test
loopne
push
mov
shl
ret
xor
mov
fistp
sub
ret
dec
push
mov
int
test
inc
test
push
jmp
or
inc
sub
mov
cmp
test
xor
xchg
mov
mov
mov
adc
inc
jp
push
cmc
pop
xchg
xor
(bad)
or
sub
push
sahf
movs
fwait
mov
es
repnz
inc
ins
sub
jl
inc
push
xchg
or
in
rcl
cwde
inc
mov
mov
ror
xchg
jb
movs
jp
out
je
leave
or
out
pop
push
das
pop
das
fcom
xchg
imul
push
loope
and
out
mov
add
lods
fs
mov
pop
push
mov
cmp
popa
ret
shr
jmp
cld
push
shr
call
mov
mov
nop
xor
imul
lods
hlt
pop
cs
push
mov
push
mov
movs
ins
gs
(bad)
add
cmps
stos
adc
int
add
popf
xor
jnp
mov
inc
mov
pop
repz
mov
adc
rol
les
data16
mov
(bad)
fsub
fisubr
aaa
or
xor
lock
sbb
pushf
sbb
pop
repnz
outs
(bad)
sahf
out
xlat
add
es
cwde
inc
sbb
test
idiv
ret
idiv
pop
inc
or
jmp
push
ins
stos
shl
popf
fcom
mov
and
std
pop
cmp
outs
mov
daa
enter
mov
fs
mov
cs
adc
cmp
sahf
pop
test
mov
call
fiadd
cs
xchg
mov
out
mov
push
rcr
sti
loopne
jmp
test
push
dec
push
pushf
aad
fiadd
test
jl
xadd
imul
xchg
sti
out
jae
popa
add
and
push
jmp
adc
or
ret
out
aad
xchg
or
mov
ret
adc
cmc
std
pusha
test
lock
or
or
inc
ret
add
dec
pop
retf
(bad)
xchg
add
mov
push
lock
arpl
inc
jnp
bound
retf
les
ins
iret
or
enter
iret
ror
ins
and
aas
mov
pop
pop
sbb
inc
dec
and
sub
leave
cmps
in
imul
and
idiv
dec
stc
rcr
push
xchg
sub
push
dec
in
adc
sub
mov
xor
xchg
inc
iret
inc
fild
call
(bad)
jmp
sub
jnp
das
fistp
rcl
test
cwde
mov
(bad)
sbb
mov
dec
cmp
mov
hlt
hlt
inc
adc
pop
inc
mov
(bad)
mov
jae
gs
mov
add
fstp
call
add
dec
adc
call
pop
xchg
lds
cmp
not
cmps
mov
adc
mov
jo
lods
pop
xor
call
lock
xor
ins
popa
mov
(bad)
pop
and
js
retf
mov
pop
dec
ds
call
arpl
repnz
data16
je
adc
test
(bad)
or
mov
ficomp
or
dec
dec
add
inc
xchg
iret
stos
repnz
push
mov
add
lods
jne
fstp
(bad)
mov
je
add
stos
aaa
sbb
inc
mov
loopne
pop
pop
push
enter
push
dec
ret
dec
loope
loopne
and
and
pop
cmps
mov
outs
inc
mov
xor
mov
out
sub
div
mov
aas
mov
jns
icebp
jg
jns
xor
mov
(bad)
push
fdivr
push
popa
cmp
or
loopne
(bad)
push
dec
add
xchg
pop
push
jge
mov
jo
xor
mov
(bad)
cmp
les
test
inc
pop
out
jmp
cmp
inc
fsubr
das
mov
arpl
pop
in
push
or
mov
push
mov
push
cmp
call
add
out
xchg
cmp
sbb
sbb
fild
cmps
mov
cmp
adc
movs
mov
or
cli
jmp
lods
xor
movs
push
xchg
std
out
push
mov
loop
sbb
xor
and
mov
xchg
fcomp
aad
imul
bound
jmp
imul
out
retf
out
push
push
sbb
nop
scas
rol
cdq
adc
cmps
ret
xchg
test
cmp
stos
fsub
push
mov
and
sub
movs
call
sbb
jl
out
stos
jnp
ret
and
test
add
mov
pop
pop
(bad)
mov
sub
mov
aas
sbb
aaa
push
pop
jge
inc
enter
sbb
cmp
sbb
fcom
cwde
bound
fsub
call
je
jecxz
mov
adc
push
fcom
shr
(bad)
(bad)
and
adc
and
punpckldq
sub
inc
mov
sub
jnp
dec
mov
sbb
pop
cmp
xchg
mov
inc
lock
div
ins
push
jg
adc
or
adc
scas
(bad)
iret
mov
(bad)
sub
shl
xchg
rcr
nop
jp
ins
add
repz
inc
das
xchg
cmp
mov
xor
push
ror
outs
mov
adc
call
push
mov
dec
sbb
jp
bound
cld
fstp
lds
mov
jnp
jae
dec
inc
in
rcr
push
shl
ja
in
lock
aas
cdq
pop
stos
or
dec
iret
call
cmc
sub
sub
movs
mov
sbb
cmp
push
mov
push
jecxz
jl
pop
jmp
sub
jecxz
and
xor
cmps
sbb
push
adc
(bad)
push
and
add
xchg
icebp
sti
mov
pop
mov
xchg
cli
cmp
repnz
arpl
pop
ffreep
xchg
add
lods
xchg
mov
outs
iret
loop
aas
gs
aam
cld
gs
in
cld
retf
test
mov
or
imul
das
xchg
mov
test
ret
aad
addr16
lock
and
in
xlat
lahf
mov
xchg
dec
in
icebp
int
and
dec
leave
sbb
mov
xor
push
mov
sbb
jecxz
adc
int3
loope
shl
adc
arpl
sub
popf
dec
in
ss
mov
sub
push
das
sub
fs
dec
or
and
add
outs
jo
jl
sub
out
fsubr
jae
popa
sub
mov
cdq
ficom
cdq
dec
inc
push
(bad)
cmp
jl
cli
pushf
lock
mov
jl
div
enter
lds
jg
and
mov
aas
fiadd
cdq
outs
xor
out
inc
sbb
movs
aam
pop
dec
jg
outs
cmps
aas
ins
jmp
mov
cdq
xor
inc
jl
xchg
sti
mov
add
sub
fiadd
jno
stc
xlat
das
mov
stos
mov
push
inc
(bad)
out
push
xchg
cli
pusha
pop
test
gs
xor
or
in
hlt
dec
aam
jp
pop
clc
popa
ins
mov
pop
ds
pop
stos
std
test
pause
repnz
cmp
sub
cld
fld
les
outs
loope
enter
jo
push
inc
or
pop
jmp
mov
mov
mov
pusha
pop
dec
add
sub
ret
cmp
cli
mov
cld
fisttp
pusha
popa
xchg
stos
lods
bound
rcl
dec
pop
xchg
cmp
push
out
push
pop
in
(bad)
pop
jmp
mov
push
jbe
sysret
(bad)
jg
in
xor
inc
push
inc
stos
mov
jmp
mov
stc
js
sti
xchg
xchg
(bad)
imul
push
shl
cmps
and
scas
loop
add
jl
and
fwait
dec
cdq
fisttp
imul
cwde
outs
dec
in
je
out
sub
mov
sub
and
add
mov
dec
inc
cmps
xor
cmp
int
icebp
movs
pop
(bad)
adc
xchg
xchg
outs
in
out
fsubr
nop
les
sub
(bad)
jb
les
mov
psraw
and
mov
jle
in
mov
add
inc
sbb
add
dec
xchg
rcr
dec
xor
retf
aam
dec
jle
dec
push
xchg
sbb
cwde
aas
cmc
fld
mov
in
hlt
xchg
cmp
loopne
inc
into
in
outs
imul
ret
push
imul
je
push
out
retf
sbb
cdq
cmp
or
dec
inc
inc
mov
mov
int
xor
out
dec
dec
stc
(bad)
imul
mov
retf
dec
or
add
pop
(bad)
mov
ja
gs
sub
adc
iret
sub
arpl
cmp
inc
fwait
shr
fnstcw
push
sub
inc
stos
call
fist
test
xor
mov
inc
ds
inc
cmp
sub
sub
mov
add
xor
dec
jge
push
js
jo
cld
stos
fidiv
mov
jmp
clc
inc
in
popa
sahf
pop
sti
push
repnz
cld
push
mov
xchg
sbb
mov
out
ins
test
xor
add
stos
je
fs
popf
adc
inc
dec
cwde
aas
add
push
sub
les
jle
adc
push
lock
jnp
inc
jg
in
imul
push
cmp
or
push
pop
xchg
sub
push
pop
pop
cmp
mov
fcmovnb
dec
movs
mov
sub
jmp
icebp
out
inc
add
je
(bad)
div
xchg
jge
cmc
(bad)
sahf
int
cmp
add
fdivrp
jg
jecxz
aam
in
hlt
dec
mov
out
lahf
adc
xor
jbe
mov
cmp
movs
fcomp
fist
ret
lea
push
add
jecxz
jb
das
mov
aam
ins
xchg
cmp
add
xor
addr16
push
fidivr
stc
sub
aaa
sub
mov
je
or
data16
pop
fldenv
outs
pop
inc
clc
out
(bad)
xor
push
mov
(bad)
jmp
jmp
pop
push
xchg
and
mov
add
in
and
movs
loop
imul
jmp
add
popf
ja
push
shr
pop
push
push
or
jb
jl
pop
mov
inc
mov
dec
and
mov
add
inc
scas
int
daa
fldenv
ret
frstor
mov
fldcw
mov
mov
(bad)
jne
addr16
cmps
(bad)
pop
pop
dec
or
jns
stos
lods
pop
jno
sub
dec
out
jbe
test
cmps
xchg
clc
cmp
retf
pop
out
aam
ret
jle
mov
fucom
mov
in
pop
add
pop
sbb
in
xchg
leave
mov
mov
inc
mov
and
cmps
pop
mov
jg
sahf
xchg
xor
test
lock
mov
mov
and
mov
mov
(bad)
fs
hlt
jle
jne
outs
and
call
fcmovne
test
ja
test
ret
push
lea
js
push
adc
pop
pop
dec
out
out
xor
leave
mov
sahf
in
ja
test
sub
out
xchg
in
daa
cmp
pop
xchg
pop
fsubrp
mov
idiv
iret
fadd
pop
jnp
mov
sbb
xchg
inc
test
mov
jecxz
js
loope
imul
ror
repnz
pop
xchg
sbb
pop
lods
imul
lahf
imul
and
mov
mov
jnp
push
lahf
fdivr
inc
push
(bad)
enter
cwde
out
pshufw
or
int
(bad)
mov
fild
cmp
inc
test
jecxz
inc
aaa
in
adc
mov
sbb
xchg
mov
jb
add
dec
push
das
jle
jae
or
fnstenv
and
pop
loop
scas
xor
xchg
repnz
iret
jmp
jmp
jne
and
sahf
adc
inc
mov
outs
jmp
adc
retf
dec
adc
test
jnp
pop
cmp
(bad)
sbb
jp
mov
cld
and
add
fnop
rcl
and
rol
retf
fisttp
stos
and
les
mov
(bad)
cmp
mov
jno
fld
mov
jmp
stc
jnp
dec
daa
aad
bound
cdq
xchg
xor
cmpxchg
jno
jl
pop
mov
adc
repnz
pop
or
xor
push
jo
inc
adc
cmc
ret
mov
jmp
imul
add
bound
sbb
lds
mov
pop
inc
outs
and
cmps
cmp
scas
imul
in
sbb
xchg
adc
data16
adc
lock
mov
(bad)
bound
fwait
dec
mov
enter
aam
inc
jmp
bound
fiadd
push
xchg
lea
mov
mov
mov
add
addr16
xchg
xchg
push
pavgb
pop
add
imul
cwde
sbb
or
dec
(bad)
jne
daa
push
mov
repnz
jo
ror
and
cwde
pop
clc
(bad)
mov
inc
xor
mov
call
imul
jg
int3
pop
mov
cwde
cmc
shl
sub
add
mov
pop
jbe
push
je
sub
loop
and
mov
std
pop
out
retf
(bad)
xor
xchg
mov
push
pop
gs
jge
gs
pop
dec
cmp
(bad)
dec
fisttp
mov
push
imul
outs
out
jno
test
out
push
dec
dec
xchg
inc
mov
push
cmp
cmp
xor
jmp
dec
xor
sar
jo
pop
rcr
bound
aam
jo
dec
(bad)
or
ficomp
(bad)
jle
jb
stos
dec
and
pusha
iret
(bad)
add
stos
sar
push
ds
cdq
push
mov
mov
cdq
push
mov
cli
dec
shl
out
out
dec
outs
fsub
mov
jmp
adc
stos
sbb
cmp
adc
clc
pop
mov
mov
push
fld
fwait
sbb
dec
shl
mov
or
stos
mov
push
add
cs
cmp
dec
loopne
ret
nop
push
movs
inc
inc
and
lea
out
adc
loop
(bad)
ins
dec
repnz
ror
out
sbb
js
daa
mov
sub
jp
jns
movs
cmps
fidivr
sbb
mov
pop
test
push
pop
inc
pushf
sbb
dec
mov
dec
scas
xchg
inc
adc
ret
add
(bad)
test
or
jae
fs
je
cmp
fld
imul
in
shl
xchg
inc
xor
mov
sar
outs
stos
repnz
and
shl
xchg
cmp
cs
in
xchg
and
mov
xor
fstp
fwait
dec
inc
rcl
adc
mov
(bad)
arpl
push
nop
jle
cmp
sbb
mul
icebp
addr16
rol
and
and
sahf
xor
xor
loope
das
imul
xchg
jp
xor
xchg
and
imul
adc
shr
sub
mov
adc
pop
mov
add
mov
mov
pop
test
or
and
loope
sub
shl
int
dec
jno
icebp
lods
add
aas
inc
sub
pop
jle
xchg
xchg
mov
test
add
pop
fist
xchg
jp
push
cld
xor
jmp
mov
mov
int3
stos
mov
sar
addr16
mov
pop
jbe
inc
ins
cmp
adc
inc
jnp
jno
adc
mov
inc
fadd
mov
adc
push
imul
jnp
test
ret
inc
dec
xchg
rol
(bad)
inc
push
or
jmp
xchg
std
cmp
shr
jo
jbe
pop
ret
xor
sub
push
jnp
repnz
fldl2t
aad
into
cmovno
aam
add
inc
iret
sbb
mov
clc
push
bound
loope
cmp
test
retf
push
repz
pop
jno
adc
clc
mov
movs
ins
xor
mov
dec
cwde
imul
test
out
mov
outs
or
push
test
std
inc
repnz
scas
std
out
jns
pop
push
jno
lahf
in
and
(bad)
sti
mul
pusha
cld
loop
mov
push
pop
(bad)
mov
jmp
aaa
push
repz
and
cdq
test
jne
sbb
test
outs
pop
movs
loop
push
ficom
mov
adc
addr16
adc
pop
stos
nop
fs
sar
in
js
mov
sub
push
cmp
imul
cdq
popf
fnsave
cmp
mov
ror
lods
in
arpl
aad
push
inc
xchg
out
xor
mov
mov
out
arpl
call
mov
push
mov
xor
sbb
ss
dec
loopne
push
lods
adc
ficomp
int
int3
add
mov
mov
push
fwait
dec
pop
jle
dec
dec
jecxz
in
loopne
hlt
ror
aas
dec
fist
int3
inc
cmp
sub
mov
mov
adc
(bad)
std
test
retf
jg
scas
enter
fwait
push
cs
cmp
test
out
sub
(bad)
cmp
cmps
pop
enter
mov
inc
les
cmps
shl
push
inc
or
test
pop
cmp
sbb
cli
push
popa
loopne
rcl
int3
sahf
out
in
jmp
(bad)
out
xor
cvtps2pd
ins
shl
loopne
pop
xchg
jecxz
stc
jecxz
out
xor
popa
and
leave
xor
sub
push
xchg
outs
neg
mov
stos
out
sar
dec
mov
xor
icebp
push
sbb
lods
pop
pop
stos
push
stos
push
push
stc
push
push
mov
outs
jo
mov
out
and
pop
inc
daa
dec
dec
gs
call
test
in
fisttp
retf
inc
jmp
retf
xor
jle
push
or
adc
xchg
pop
push
mov
mov
and
lods
call
js
xchg
out
les
mov
pop
pop
es
sbb
xor
jbe
mov
sbb
popf
cmp
inc
xlat
push
push
shl
push
cwde
fnstenvw
aam
pop
sahf
dec
mov
pop
adc
adc
sub
das
ins
add
test
ds
sti
mov
frstor
xor
cmps
daa
fbstp
and
je
fadd
shl
add
push
sahf
xor
sbb
mov
ins
test
out
pusha
js
in
shr
stos
mov
cmp
js
out
cmp
ins
(bad)
jle
jp
daa
sub
adc
jb
xchg
ss
jae
pop
out
mov
sbb
mov
adc
xchg
movs
mov
mov
push
retf
dec
lds
loop
mul
xchg
movnti
ss
aas
sbb
call
jg
(bad)
mov
in
mov
cwde
cld
fcmovnbe
popa
into
xchg
and
push
pop
aas
out
add
pusha
stc
test
jmp
test
xchg
ss
push
sub
stc
(bad)
loopne
dec
repnz
mov
lds
nop
xchg
iret
pop
cmc
and
in
push
(bad)
aas
add
push
sbb
test
and
xchg
rcl
sti
pop
fiadd
push
cdq
sub
hlt
sti
fist
or
shl
or
cwde
cmp
add
dec
idiv
mov
ds
mov
inc
mov
inc
jae
and
push
or
je
sbb
mov
mov
fidiv
ja
js
retf
push
ja
bound
push
fistp
jns
xor
xchg
call
(bad)
push
ror
cmps
dec
or
test
xlat
ins
and
inc
or
pop
sbb
xor
add
mov
fcomp
loopne
pop
jle
lods
retf
cli
test
push
mov
inc
jle
cmp
cmps
jbe
push
push
js
(bad)
rcr
mov
repz
sub
jecxz
mov
rcl
jge
push
loop
js
cdq
mov
dec
adc
pop
stos
xchg
cmp
out
movs
scas
fistp
mov
out
adc
lahf
mov
int3
mov
mov
fdiv
push
ror
push
test
push
xchg
(bad)
xchg
ds
xor
dec
das
mov
mov
xchg
mov
hlt
sti
or
into
stos
not
xchg
sbb
pop
std
mov
xor
das
mov
mov
(bad)
jb
aas
jl
int3
cmc
pop
je
sub
loopne
cmp
es
test
jo
mov
push
imul
rcl
xchg
push
gs
sub
dec
scas
or
imul
push
loope
(bad)
jbe
popa
out
test
in
pusha
adc
arpl
xor
sub
add
lahf
test
inc
fadd
push
sub
inc
mov
dec
or
and
loope
pop
inc
clc
imul
mov
sub
out
add
mov
sti
stos
dec
mov
and
jg
cmp
push
(bad)
adc
(bad)
jmp
sbb
xchg
mov
push
jae
je
sbb
(bad)
out
push
call
xchg
loope
push
and
ins
adc
sub
jno
and
sahf
dec
and
pop
fistp
mov
sar
jmp
ins
jns
mov
inc
sbb
dec
jmp
xchg
out
pop
push
xor
lahf
ins
lock
pop
xor
dec
in
(bad)
sti
cwde
mov
test
fist
jo
adc
mov
sahf
and
mov
add
adc
dec
cmp
mov
inc
mov
adc
mov
cmps
cmp
bound
mov
push
sbb
sahf
stc
xorps
inc
mov
loope
sub
jl
stc
mov
ret
rcl
lods
dec
imul
leave
mov
mov
out
dec
cmp
or
into
pop
pop
(bad)
xor
hlt
fisub
sbb
push
sbb
dec
adc
test
or
and
dec
bound
mov
add
mov
test
sub
mov
or
jp
or
push
je
out
push
(bad)
retf
clc
jne
enter
xor
jge
imul
psignd
mov
mov
out
aam
push
push
jp
push
retf
mov
call
mov
nop
aam
aaa
ds
dec
mov
inc
or
xor
hlt
jp
call
xor
cmp
fistp
aam
(bad)
cmp
sub
scas
das
les
fistp
xor
ss
ret
ja
inc
inc
mov
sbb
jns
inc
sahf
loope
pop
xor
or
adc
(bad)
call
and
jns
sub
mov
das
sbb
xchg
js
dec
pop
inc
sbb
cmp
call
fisub
and
arpl
pop
mov
shl
jns
fist
mov
adc
jmp
out
mov
inc
ins
retf
or
pop
dec
lock
aam
adc
inc
dec
push
fisubr
sbb
(bad)
jnp
jmp
cmps
call
and
add
test
jae
idiv
(bad)
cmp
lods
repnz
xor
mov
cld
imul
out
jmp
xchg
mov
daa
xchg
xchg
clc
add
push
and
retf
stos
(bad)
mov
mov
cmps
mov
mov
shl
fcmovu
sbb
mov
mov
icebp
add
(bad)
sbb
fadd
shl
lods
jno
xchg
sbb
xor
cmp
(bad)
xlat
popw
mov
bound
stc
call
in
(bad)
bound
inc
aaa
inc
scas
cmp
cmps
add
jmp
mov
lock
stos
hlt
xor
add
cs
push
(bad)
stos
jg
movs
les
test
ja
jnp
test
outs
(bad)
cmc
aaa
inc
fcmovnu
push
mov
into
js
data16
and
(bad)
rcl
xchg
or
cmp
cmp
mov
stos
inc
inc
mov
loopne
repz
push
test
mov
fcomip
cmp
mov
sbb
push
xchg
xlat
xlat
mov
les
call
pop
and
stc
jnp
or
fcmovnb
sub
dec
adc
ret
call
jg
jbe
inc
in
in
mov
sub
loopne
sbb
nop
(bad)
cmp
push
add
ss
cmp
enter
mov
pop
xchg
cmp
leave
mov
push
add
mov
daa
js
fwait
iret
test
movs
in
fldcw
mov
mov
fwait
mov
add
xor
icebp
cmp
push
lock
and
xchg
mov
and
fld
test
add
mov
or
pushf
xor
xrelease
clc
scas
jmp
sub
or
mov
xchg
retf
movs
test
add
jno
and
pop
addr16
sti
(bad)
push
scas
sbb
stos
mov
sbb
mov
inc
xchg
in
loopne
iret
lods
jae
and
add
xor
out
or
icebp
mov
outs
jnp
dec
jl
ins
cmps
sub
cmp
(bad)
hlt
adc
ins
xchg
neg
and
loop
add
and
lods
add
add
jno
sub
jp
stos
sar
scas
pop
test
arpl
push
stc
sub
cmps
nop
je
push
outs
das
and
mov
js
mov
mov
or
jnp
adc
ins
xor
rcl
jle
js
clc
dec
xchg
jl
mov
jns
xchg
xchg
mov
les
rcr
pusha
push
(bad)
or
sbb
and
cmc
xchg
lods
lods
not
or
and
popa
or
or
sub
addr16
ret
adc
aam
mov
inc
shl
mov
inc
in
mov
and
hlt
bound
out
loopne
(bad)
sbb
inc
xchg
daa
call
pop
jnp
xor
loopne
push
and
dec
or
mov
loope
jle
cmc
mov
(bad)
out
leave
mov
mov
repnz
inc
mov
push
mov
ja
jl
sti
push
mov
gs
in
bound
loope
dec
mov
pushf
cmp
iret
or
test
adc
and
inc
inc
jae
hlt
ja
cs
scas
out
adc
cwde
fst
cmc
jg
and
jno
arpl
sbb
rol
retf
lods
push
add
and
or
outs
pushf
add
cdq
mov
or
js
add
lds
pop
inc
lods
inc
xor
pop
mov
mov
inc
dec
mov
rol
sub
repnz
add
adc
and
cmps
pop
loope
mov
(bad)
(bad)
iret
mov
into
cwde
cwde
int
pop
(bad)
sub
(bad)
out
lods
adc
idiv
mov
in
push
fist
frstor
xor
outs
ja
call
into
mov
sub
aad
mov
push
scas
mov
and
or
mov
sub
daa
sub
ins
das
sar
jae
or
xchg
retf
je
xor
mov
sahf
xor
rol
mov
dec
dec
pop
int3
fdivr
add
push
fwait
jg
daa
inc
ja
retf
mov
push
sbb
push
(bad)
les
ja
into
mov
dec
mov
repz
inc
shl
and
outs
and
sbb
dec
ds
add
lods
pusha
pop
aaa
(bad)
aam
jne
or
jecxz
daa
lods
loop
mov
jge
and
ins
rcr
in
test
addr16
add
imul
in
add
int
icebp
neg
xor
xlat
cwde
shl
mov
and
movs
push
xor
jo
hlt
sub
and
jmp
and
fiadd
and
inc
pop
ds
es
mov
sbb
sar
mov
sar
fisub
bound
sahf
pop
jnp
pop
imul
pop
sub
xchg
leave
and
mov
imul
pop
sbb
sub
out
fist
(bad)
fistp
push
xrelease
inc
shr
(bad)
es
or
xchg
xchg
push
cmp
call
dec
in
and
(bad)
aaa
test
sbb
xchg
xchg
xchg
ins
jl
jo
cs
mov
pop
leave
mov
pop
imul
mov
movs
xchg
fbld
jno
pop
leave
int3
or
add
ds
das
and
mov
fwait
es
jno
pop
ins
or
stos
loope
sbb
aam
xor
popa
sub
iret
mov
lock
lds
dec
push
popa
outs
pop
mov
stos
icebp
leave
mov
shl
fwait
xlat
nop
cmc
cdq
test
add
ret
xchg
pusha
jnp
popa
mov
pop
jl
add
lods
jno
add
dec
add
xchg
xor
push
mov
ficomp
xchg
cs
pop
or
pusha
int
and
stos
mov
and
mov
mov
rcl
lds
inc
xchg
iret
loopne
aad
loopne
sub
xchg
adc
test
pushf
loop
jle
fist
test
sbb
sbb
(bad)
repnz
fs
push
xchg
xor
lea
lds
(bad)
iret
gs
maskmovq
test
rcr
ret
add
test
lahf
test
sbb
and
fcmovbe
push
or
cs
mov
sbb
mov
ror
xor
and
or
or
retf
dec
pop
ins
pop
sub
cmp
adc
mov
fisub
xor
ss
pop
dec
pop
xchg
mov
xor
aas
and
sub
jmp
jbe
inc
out
sub
hlt
and
call
xchg
xchg
xchg
cli
adc
adc
(bad)
sbb
push
pmulhuw
fdiv
or
sub
mov
mov
sub
js
cmp
aas
mov
stc
adc
and
lods
sub
xchg
dec
gs
mov
jge
cmp
sub
das
lock
retf
idiv
and
mov
inc
push
mov
xor
or
arpl
loopne
in
adc
cmps
sbb
add
out
mov
jbe
enter
dec
push
pushf
dec
rcl
retf
xchg
mov
pop
mov
fisub
punpckhbw
aaa
scas
inc
or
mov
in
fwait
push
mov
rol
(bad)
movs
pop
push
dec
add
sub
xchg
loop
xor
add
or
pop
or
gs
add
mov
and
ins
loope
(bad)
call
inc
adc
out
(bad)
mov
jbe
push
inc
sbb
or
dec
stc
inc
xchg
fimul
movs
push
or
adc
mov
mov
int3
(bad)
test
popa
pop
mov
(bad)
xor
dec
(bad)
sbb
popf
pusha
push
add
mov
jge
fwait
ror
dec
dec
rcl
dec
push
inc
jecxz
push
mov
pop
cmp
adc
pushf
add
dec
mov
inc
push
fscale
inc
shr
es
inc
xor
or
imul
mov
out
sub
jne
mov
sbb
xchg
add
add
adc
adc
push
push
rcl
push
inc
mov
fwait
mov
ret
pop
cmp
mov
dec
das
jmp
cmps
sub
push
push
or
and
adc
js
adc
or
cmp
leave
xchg
cmp
and
dec
and
mov
mov
fs
mov
cmp
das
push
xor
xchg
call
cs
lahf
mov
sbb
mov
(bad)
or
mov
add
daa
mov
push
fs
mov
add
mov
push
sub
enter
cld
fld
movs
fistp
xchg
inc
jmp
sti
inc
cmp
ins
repnz
js
stos
xchg
movs
repnz
adc
mov
cmp
cmp
fadd
inc
cmc
(bad)
xor
mov
cdq
jns
out
(bad)
in
or
jp
sahf
xor
shr
jle
pushf
mov
stos
push
(bad)
inc
jno
lock
xchg
cmp
ret
aaa
pop
cmps
pop
cmp
cli
mov
add
in
popf
mov
ret
jo
push
rcr
push
inc
imul
xchg
sub
movs
dec
call
jno
jmp
jmp
adc
lods
jge
out
pop
xchg
push
xchg
(bad)
ficomp
jb
lods
xor
sahf
lahf
stc
adc
out
ja
dec
jecxz
int3
jmp
adc
test
pop
push
(bad)
xor
rcl
push
push
outs
outs
sbb
sti
stos
stos
mov
out
pop
add
push
sahf
sub
cwde
sub
xchg
fsub
xchg
data16
lea
jns
cwde
jne
fild
xor
into
std
inc
or
inc
push
icebp
rcl
jb
lods
imul
stc
test
ficomp
push
ret
mov
cmps
(bad)
call
(bad)
add
and
sub
imul
xchg
ret
stos
and
adc
cwde
dec
inc
mov
imul
xor
and
jp
retf
push
sbb
jb
xor
scas
int
jns
into
pop
data16
mov
add
xor
sbb
dec
movs
or
ret
mov
rol
add
dec
adc
xor
adc
inc
add
adc
inc
(bad)
hlt
xchg
test
mov
fist
pushf
jmp
xchg
mov
mov
lahf
test
lods
out
fld
push
jg
or
shr
sbb
mov
or
xchg
cmp
stc
xor
ja
scas
je
movs
data16
addr16
sub
out
adc
sbb
dec
in
cmp
dec
scas
nop
loop
lods
lea
dec
int3
pusha
test
popa
sub
mov
mov
icebp
call
iret
js
arpl
push
xchg
xor
mov
cmp
dec
jmp
xchg
sbb
push
xchg
sbb
es
pop
inc
push
mov
add
js
inc
sub
(bad)
cmp
mov
aam
and
data16
dec
loopne
(bad)
push
sub
mov
sti
icebp
cmp
or
es
jg
push
mov
int3
ficom
mov
mov
xor
sub
dec
test
mov
xchg
jp
and
add
(bad)
scas
cmp
lods
push
shr
adc
jo
adc
ret
sti
sbb
lock
shr
dec
cmp
mov
dec
inc
sbb
fldenv
movs
imul
(bad)
rol
add
pop
std
es
mov
lds
fadd
pushf
sbb
frstor
jg
mov
cld
sbb
scas
jmp
fdivr
jmp
xlat
jae
xlat
ret
mov
lods
inc
not
cmp
push
ins
jmp
jbe
and
add
sti
cdq
jne
jns
jnp
mov
iret
mov
xchg
jnp
dec
push
cmp
cmp
lock
dec
jle
(bad)
div
packuswb
push
sbb
nop
push
cmp
retf
pop
xchg
inc
(bad)
mov
jns
aas
mov
mov
jnp
add
sub
xor
popa
rep
out
repnz
frstor
rol
in
pop
cmps
shr
jg
and
pop
scas
ror
ins
rol
jge
test
mov
int3
rcl
and
test
test
mov
xchg
add
popa
mov
mov
es
sub
addr16
jne
pop
jbe
push
scas
mov
stc
sbb
mov
add
test
scas
ret
mov
inc
sahf
(bad)
inc
push
mov
push
jge
jmp
pop
lds
push
sub
into
mov
sahf
mov
add
rep
xchg
push
mov
ja
repnz
mov
dec
es
out
rcr
lea
test
pop
leave
sub
mov
mov
test
and
or
retf
popf
mov
icebp
scas
mov
rcl
dec
out
adc
pop
mov
cs
xchg
dec
push
xor
mov
dec
mov
xor
mov
cmp
or
das
shl
mov
fisttp
fdiv
adc
fidiv
add
adc
bound
push
jmp
sahf
push
out
push
std
jl
sbb
xor
ja
cmp
xchg
inc
xchg
ret
fs
push
leave
xchg
jl
and
jge
inc
inc
in
lock
mov
outs
aam
sub
push
cbw
cs
ficomp
cmp
je
cmp
fldcw
adc
push
hlt
inc
adc
sub
jmp
test
aas
and
daa
repnz
fstp
and
adc
pusha
stos
stc
stc
jle
push
push
movs
jo
sti
daa
das
xchg
xor
test
cld
lds
out
mov
pushf
in
pop
jmp
xor
call
and
les
popf
ror
fst
call
mov
(bad)
cmps
jp
mov
aaa
ja
jp
test
fst
push
adc
inc
pop
xor
(bad)
mov
jp
call
add
fsubp
rcr
mov
and
call
push
test
rcl
push
pop
or
mov
mov
mov
(bad)
rol
inc
(bad)
mov
cmps
xor
or
mov
lods
push
ret
push
and
lock
out
sbb
adc
pop
xchg
rcr
add
sub
cmp
in
push
push
ficomp
mov
jb
aas
(bad)
mov
ds
into
jo
scas
outs
add
sbb
mov
mov
movs
push
xor
(bad)
ja
xor
jae
push
retf
xchg
cmp
dec
push
fistp
inc
arpl
mov
mov
jmp
lods
inc
pop
test
js
jmp
iret
jl
lock
and
jmp
sbb
lea
in
repnz
push
and
add
and
es
xor
js
lahf
inc
sub
cwde
ins
shr
enter
cmp
xchg
mov
push
xchg
mov
lods
and
aaa
ins
jne
mov
inc
xchg
or
ror
jbe
adc
stc
inc
cmc
push
sbb
mov
lahf
mov
sub
or
cmps
cs
repz
jp
lahf
std
nop
jno
ins
push
cmp
call
and
sbb
inc
pop
mov
inc
pushf
sbb
fist
add
movs
sub
aad
lock
lods
lock
add
sub
push
sub
inc
rcl
outs
push
push
icebp
arpl
loope
ins
jle
xor
mov
int3
mov
jmp
add
not
cli
imul
dec
mov
je
xchg
cmp
shl
out
mov
inc
fild
sahf
xchg
adc
jbe
cmp
jno
add
lds
scas
jnp
mov
retf
cmp
cdq
rcl
sub
pop
(bad)
mov
aam
mov
cmp
xchg
lods
popf
push
xchg
unpcklps
sub
mov
push
cmp
pop
push
leave
icebp
adc
sbb
add
je
or
push
stos
repz
push
mov
pop
shl
jge
inc
inc
jae
dec
add
popf
xchg
xchg
repz
aaa
jo
scas
push
sub
(bad)
loop
mov
push
lea
std
imul
push
push
cs
push
jmp
push
jecxz
sub
dec
movs
pushf
or
aam
ret
sub
sub
push
fs
inc
xchg
movs
mov
lds
retf
jge
and
cmp
rcl
cs
imul
sub
inc
int3
jb
in
loope
test
add
pop
cmp
push
add
outs
jne
lock
shl
adc
jae
push
mov
pop
mov
gs
es
mov
xor
je
xchg
sub
and
out
and
xor
or
in
sbb
jle
rcl
push
jnp
or
fs
cmp
or
out
stos
cmp
pop
jecxz
inc
inc
push
dec
pop
mov
mov
adc
add
inc
scas
or
dec
inc
push
pop
lahf
sbb
int3
sbb
lods
jle
mov
inc
dec
lds
loop
jmp
sub
xchg
movs
mov
mov
cld
sub
xchg
iret
scas
pop
loop
(bad)
jecxz
xchg
mov
xlat
aaa
push
ret
cwde
and
mov
push
gs
std
xchg
ss
jae
add
mov
aam
lods
sbb
rcl
shl
jp
adc
pop
cmp
adc
xlat
bound
call
xchg
and
dec
mov
div
mov
stc
add
adc
out
add
icebp
in
jbe
inc
sti
mov
jecxz
pop
inc
push
rcl
pusha
xchg
push
pop
inc
pop
xchg
and
ss
cli
loop
fstp
inc
pop
dec
clc
(bad)
cmc
xor
cmp
bnd
xlat
imul
dec
mov
mov
pop
out
jecxz
ror
adc
xchg
das
add
sub
pop
ucomiss
loope
test
mov
jmp
iret
shl
xor
gs
inc
les
imul
leave
mov
jle
imul
dec
push
sub
repnz
mov
mov
mov
outs
repnz
bound
or
int
inc
icebp
cdq
sbb
pop
cmp
jle
pop
xor
std
stc
pop
add
xchg
mov
lods
mov
push
es
das
aaa
pop
cs
fdivrp
xor
add
xor
fwait
cwde
xor
jmp
xor
pusha
mov
mov
jns
jmp
adc
dec
push
fimul
lods
mov
jnp
cmp
sar
adc
fsub
lock
sub
scas
jnp
xchg
ins
sub
cmp
mov
call
jns
das
jmp
lods
jl
xchg
mov
call
push
add
jb
or
(bad)
cmp
xchg
(bad)
mov
pop
mov
mov
ins
mov
push
nop
fcmovbe
sub
mov
aam
push
jmp
rcl
mov
(bad)
(bad)
mov
sub
mov
cmps
push
cmp
out
mov
jne
sbb
dec
adc
jne
and
mov
xor
fidiv
mov
adc
pop
mov
jb
jbe
jo
or
xchg
and
jmp
inc
hlt
jle
cmp
addr16
xor
rol
(bad)
retf
mov
sbb
and
and
and
rcl
rcl
mov
xor
cmp
call
mov
call
pushf
mov
jne
cmps
test
aad
lock
out
stos
dec
push
(bad)
loop
add
push
bound
mov
sub
fcom
xchg
pop
loop
pushf
vshufpd
movs
inc
mov
pop
jb
ja
inc
sbb
pop
jbe
jl
sub
push
aaa
jecxz
push
jl
mov
xor
movs
scas
nop
scas
jmp
add
cmp
adc
lock
arpl
pop
dec
push
retf
push
(bad)
test
pop
movs
push
pop
sub
inc
je
add
xor
dec
push
xor
inc
aaa
cvtps2pd
mov
dec
rol
inc
ficomp
mov
pop
inc
mov
cmp
or
jle
pop
jg
jbe
adc
retf
sub
retf
xchg
cmp
xor
pop
ret
adc
xchg
push
and
js
xor
fdiv
xchg
adc
xor
mov
inc
sar
into
xchg
jo
hlt
std
into
out
jmp
inc
lods
xchg
dec
aad
dec
xchg
xchg
or
nop
aam
jmp
jmp
(bad)
push
dec
(bad)
sti
test
gs
dec
das
inc
jge
ficom
pop
retf
sbb
aas
cdq
mov
cmp
ss
les
jns
mov
ror
push
cmp
lock
pushf
xor
aad
mov
(bad)
pop
mov
(bad)
inc
jnp
fisttp
scas
pop
scas
ins
and
jae
je
mov
pusha
retf
mov
pop
ret
push
jnp
jge
mov
rol
pop
push
pusha
mov
inc
ja
imul
ins
mov
test
dec
iret
and
push
cmp
mov
(bad)
int3
loop
mov
mov
sahf
add
pusha
lods
add
xor
scas
xlat
push
int3
dec
ins
xor
adc
mov
pop
and
push
cmps
add
and
jbe
jl
pop
inc
xchg
or
repnz
adc
dec
sahf
or
ins
xor
or
adc
test
cs
push
jp
add
jle
and
push
pop
adc
outs
mul
mov
jns
xor
xchg
leave
sub
fstp
sti
cmp
sti
xchg
outs
sub
jno
push
fcom
inc
xor
xchg
push
mov
push
mov
js
aad
add
jo
cli
(bad)
aaa
xchg
sub
cdq
in
xchg
push
ins
and
jmp
add
xchg
jg
add
push
add
in
fimul
mov
push
mov
jle
xchg
js
dec
or
inc
loope
push
xor
out
xor
test
mov
sbb
cmp
(bad)
add
sub
mov
cmc
push
out
jbe
loop
ins
call
out
fbld
inc
stos
out
into
inc
push
and
mov
setp
loope
pushf
sub
sub
(bad)
xor
test
sbb
jle
daa
inc
es
push
xchg
scas
lahf
paddsb
adc
or
test
pushf
push
jne
stos
dec
std
pop
ja
dec
mov
mov
sti
cmc
mov
arpl
pop
pop
inc
rcr
cmp
mov
xchg
ja
xchg
cmp
jecxz
cli
dec
xchg
pop
adc
mov
pop
and
add
lea
cwde
sub
iret
sbb
ss
call
jl
mov
test
repnz
or
ds
mov
int3
cmp
int3
push
add
cmp
sub
sti
and
mov
or
sub
or
fadd
inc
mov
jmp
loop
rol
mov
gs
pop
mov
das
xor
fsub
in
push
stos
push
sbb
out
fild
pop
in
stos
sahf
repnz
push
lods
std
nop
sbb
inc
sbb
and
xor
leave
or
js
shl
nop
rcl
daa
xor
add
cld
pop
std
jno
jbe
scas
aad
cdq
inc
jp
inc
dec
sub
mov
or
pusha
inc
leave
mov
cli
push
leave
call
mov
cmps
mov
retf
mov
sub
pop
cmp
pop
jne
mov
pop
out
add
cmp
iret
lods
xchg
sti
fcmovnb
sub
call
out
gs
sub
xchg
mov
cmps
sti
add
mov
jmp
in
push
dec
cli
cwde
mov
cmp
or
pop
call
push
and
icebp
stc
rol
sub
stos
sub
push
push
popa
jg
pushf
xlat
imul
leave
cmp
push
call
inc
and
rcr
fcomip
xchg
fsubr
mov
rcr
stc
dec
adc
icebp
lahf
cmps
mov
nop
push
sbb
out
call
lahf
and
fiadd
and
in
test
jge
je
or
out
push
out
stos
jp
fdivr
cmovp
xor
and
movs
dec
mov
push
dec
adc
add
rol
jmp
mov
xchg
iret
sub
mov
push
aad
es
ins
pop
fs
pop
retf
inc
fist
jne
inc
cs
mov
je
mov
adc
pop
lahf
push
jge
jge
or
retf
add
mov
or
cwde
test
xchg
dec
and
movs
repnz
push
cdq
call
mov
cdq
cmps
dec
add
xchg
push
movs
mov
sub
loopne
scas
or
loop
cmps
(bad)
popa
adc
dec
repz
enter
push
mov
aad
repnz
sbb
jne
cmp
icebp
loopne
retf
xor
cmps
inc
push
out
lods
out
jg
mov
jge
mov
std
cdq
add
sbb
retf
fdiv
data16
sub
sbb
mov
mov
mov
(bad)
push
xchg
and
dec
push
push
sbb
std
imul
ret
jecxz
mul
cli
shl
or
rcl
sbb
ja
(bad)
push
dec
(bad)
pop
ret
and
movs
xor
xchg
cwde
mov
and
inc
pop
bound
mul
mov
push
pop
mov
shr
pusha
imul
pop
xchg
dec
jbe
lea
mov
xchg
adc
dec
cmp
in
lahf
push
jg
dec
adc
push
cmps
test
mov
leave
or
pop
sub
pop
sub
inc
and
(bad)
enter
push
cmc
popf
sbb
jecxz
sbb
mov
jbe
mov
ins
out
add
sbb
pop
sub
adc
sbb
popa
retf
movs
pop
mov
rcr
push
xchg
rol
or
adc
inc
dec
stos
in
shl
xchg
push
cld
mov
call
in
leave
js
enter
mov
cmp
inc
mov
jle
adc
or
out
sub
xchg
jecxz
push
add
mov
jg
push
shr
cmp
je
cmp
jne
xchg
retf
test
repnz
test
pop
ror
mov
or
mov
dec
adc
inc
js
sbb
push
cmps
add
jecxz
dec
cmps
push
mov
mov
rcr
jno
mov
jmp
pop
imul
rcl
popf
xor
jl
std
das
adc
ins
adc
jnp
das
xlat
pop
pushf
loope
jmp
out
push
push
popa
and
das
sbb
sbb
and
mov
xchg
cmp
and
test
push
jb
iret
mov
fsub
adc
inc
xor
or
repnz
out
sub
xchg
stos
popf
fdiv
rcl
sub
into
mov
jno
in
cli
add
xlat
call
adc
(bad)
into
aas
pushf
adc
fstp
cs
mov
je
and
aas
sbb
xchg
cmp
mov
mov
jno
mov
stc
mov
xor
mov
push
dec
stos
dec
xor
mov
fdivrp
outs
aad
mov
shr
nop
jnp
ds
scas
adc
fcomip
jo
cdq
dec
int3
rcl
sub
jg
inc
js
sar
sbb
cld
ret
adc
lds
mov
(bad)
repnz
sub
and
mov
xor
pop
outs
or
and
pop
pop
and
inc
(bad)
bnd
ss
int3
ffreep
adc
lods
cmc
popa
xor
pop
mov
lock
cmp
dec
das
mov
mov
cmp
and
ins
pop
sub
pop
fisub
xor
sub
mov
outs
jns
test
js
bound
sub
cs
call
jae
retf
inc
fiadd
mov
fs
jb
sub
leave
lods
jp
sbb
es
dec
scas
cmp
out
mov
aas
add
lahf
or
int
dec
push
rcr
loope
xchg
cmp
(bad)
adc
pusha
ret
test
rcr
rcr
mov
out
mov
lods
(bad)
aas
push
in
ja
xchg
mov
xor
aas
popa
lock
push
ror
xlat
shl
bound
(bad)
hlt
adc
call
ja
mov
ds
mov
sub
or
shl
in
jne
xor
js
cmp
add
daa
repz
dec
cmc
call
cmp
jbe
sbb
out
test
xchg
pop
imul
mov
dec
shr
mov
sub
mov
clc
fdiv
jle
fsubr
add
dec
and
cmps
jl
stos
fcom
or
ds
xchg
popf
xchg
cmp
pop
xchg
out
inc
pop
add
xor
xor
xchg
pop
xor
cld
(bad)
loopne
adc
aas
mov
mov
into
dec
movs
ds
ds
mov
(bad)
in
pop
or
pop
push
xor
cmp
add
pop
push
adc
pop
jmp
push
dec
dec
add
psubusw
lods
push
pop
loopne
sub
aad
mov
mov
je
mov
xchg
inc
out
popf
push
je
cmp
or
adc
add
stos
ss
imul
pop
into
jae
cs
out
jnp
stos
pop
pusha
jbe
sbb
int3
daa
push
out
ret
stos
mov
(bad)
clc
mov
cmp
adc
jae
and
or
sub
push
add
aas
push
dec
or
pop
mov
cmp
pop
jp
jge
call
jmp
mov
sbb
ret
adc
in
dec
and
shld
cmp
xchg
loope
ret
stc
mov
mov
test
jp
aas
jg
add
cld
fucom
pop
jne
xor
add
lods
movs
popf
addr16
aam
outs
into
mov
pop
mov
test
call
fimul
pop
mov
(bad)
sar
push
mov
js
adc
dec
cmps
inc
fcom
loopne
hlt
inc
lea
mov
hlt
test
mov
ja
push
adc
pusha
out
gs
dec
fstp
ins
pop
ins
jne
xchg
xor
jb
dec
inc
inc
icebp
(bad)
(bad)
pop
mov
xchg
es
ret
add
packsswb
dec
movs
xor
std
push
ret
lock
repnz
in
or
and
jge
cli
out
jl
mov
movs
xchg
sbb
hlt
mov
aas
and
adc
pop
scas
fbstp
dec
in
or
adc
out
pop
test
push
pusha
jmp
push
repnz
dec
arpl
js
xchg
mov
push
mov
jmp
or
sub
inc
ja
mov
jl
(bad)
leave
pop
mov
mov
in
icebp
mov
addr16
mov
imul
sbb
xchg
mov
lods
cld
push
push
pop
xor
sub
mov
lock
jmp
xor
(bad)
jg
sub
mov
addr16
sti
(bad)
adc
jo
push
repz
and
gs
add
mov
dec
cmp
mov
push
repnz
pusha
or
lock
adc
shl
xchg
rcl
push
xor
sub
mov
dec
jne
add
fwait
cmp
xchg
or
nop
fnstcw
lods
out
mov
sar
in
mov
push
stos
mov
pop
shl
sbb
mov
loop
adc
popf
out
aad
push
retf
dec
fadd
jp
inc
mov
mov
(bad)
leave
sbb
jbe
movs
(bad)
out
or
push
mov
(bad)
ficomp
cmp
mov
lahf
xchg
mov
xchg
call
popf
add
stos
mov
mov
les
xor
lods
inc
cmc
mov
mov
mov
mov
ror
imul
push
pop
outs
adc
jnp
adc
inc
scas
(bad)
sbb
lods
outs
aam
hlt
and
(bad)
or
or
xchg
dec
mov
inc
push
test
pop
sbb
aam
xlat
retf
fnstenv
rcr
push
into
jns
xchg
cwde
ret
ret
push
and
inc
jle
mov
xor
jno
sbb
stos
leave
dec
mov
shl
mov
or
xchg
jae
push
ret
add
arpl
icebp
(bad)
stc
pop
(bad)
leave
retf
daa
mov
push
add
rcr
inc
sahf
dec
retf
inc
inc
outs
int3
movs
shl
ds
shl
imul
xchg
fst
shr
cmps
sti
pop
push
and
jo
(bad)
out
inc
or
ja
push
cwde
cli
pop
ret
add
(bad)
test
add
ins
stc
add
sahf
and
cmpxchg
sub
or
xor
jp
pop
lock
sbb
and
jge
xchg
lods
dec
inc
dec
cdq
lods
mov
push
mov
std
enter
add
int
add
pop
std
push
loope
in
pusha
mov
push
jbe
in
cwde
dec
jns
sbb
ins
inc
mov
add
mov
fstp
or
and
(bad)
mov
mov
in
mov
mov
sbb
cmp
pusha
mov
stos
adc
jg
std
cmp
sbb
jae
mov
loopne
xor
js
outs
fcomp
cmp
sbb
and
sub
xchg
gs
add
rcl
div
jo
lods
jno
or
jmp
or
les
sbb
fidiv
clc
aaa
mov
push
or
adc
iret
jns
sbb
xchg
xchg
mov
mov
fcmovnb
mov
retf
mov
xlat
shl
(bad)
retf
in
imul
aaa
sbb
fcomp
lock
xor
popf
push
sahf
mov
sbb
push
daa
xchg
push
vmwrite
add
jmp
sahf
rcl
dec
jno
jns
arpl
lods
addr16
push
les
jns
movs
inc
jno
add
dec
sub
mov
leave
clc
sub
test
push
fsubr
shl
or
imul
aam
call
add
jns
ds
sub
jnp
sbb
push
in
nop
fsubr
daa
(bad)
scas
fldcw
push
out
adc
scas
stos
sbb
stc
pop
mov
jg
fiadd
xchg
dec
mov
dec
sar
cmps
xor
xlat
ret
cmp
lods
mov
mov
lods
sar
adc
icebp
loope
dec
pop
sbb
jns
movs
popa
ins
das
xchg
(bad)
mov
fmul
aaa
lods
xor
fdivr
pop
pop
cs
aam
ret
cmp
ret
movs
sbb
std
(bad)
shl
aas
in
adc
pop
(bad)
pinsrw
sbb
xchg
dec
xchg
ror
lea
iret
movs
scas
nop
rcl
sub
repnz
push
outs
fdivr
mov
scas
clc
in
fsub
call
fs
push
sub
sbb
pusha
cmps
mov
adc
sbb
xchg
jo
dec
test
sbb
fmul
mov
jmp
xor
cmp
popa
mov
mov
or
in
data16
xchg
mov
scas
fstp
fwait
daa
jle
or
shl
or
ret
xor
and
push
xchg
sub
retf
mov
push
ds
call
lahf
in
idiv
pop
or
inc
call
(bad)
je
push
or
push
xchg
movs
sub
(bad)
sbb
shl
test
push
inc
stos
aad
das
adc
int
cwde
mov
cmp
push
push
shl
mov
das
hlt
std
and
daa
push
ss
xchg
iret
jns
rcl
adc
sub
repz
mov
int
xchg
jge
pop
fs
icebp
cmp
mov
push
pop
stos
cmp
outs
les
mov
mov
mov
jge
xor
mov
jecxz
xor
pop
popf
popa
inc
dec
push
repz
xchg
jp
test
inc
or
ret
aas
cmp
int
sbb
adc
push
mov
dec
sub
sbb
pop
dec
pop
adc
rcl
retf
hlt
xchg
jp
int3
push
aad
xor
and
pop
mov
or
fild
fs
xor
cwde
vcvtsd2ss
xor
mov
add
inc
fiadd
adc
push
jl
in
mov
mov
sbb
sbb
mov
data16
jne
dec
int3
dec
jg
xor
inc
shl
mov
and
cmp
jmp
mov
(bad)
repz
mov
loope
add
out
mov
xlat
test
dec
pop
popa
xchg
dec
adc
popa
stc
cmps
push
xor
inc
das
push
call
lahf
in
call
lods
push
stos
mov
mov
jmp
mov
mov
jg
outs
es
mov
jno
jmp
mov
mov
pop
pop
pop
xchg
add
push
in
xchg
add
out
in
adc
ins
mov
jns
nop
dec
ins
test
cwde
dec
int
pop
lods
dec
daa
mov
test
movs
add
push
fld
icebp
sti
lahf
(bad)
xor
scas
xchg
jae
cdq
push
jno
jnp
(bad)
push
jp
sub
xchg
jo
xchg
shl
inc
or
push
mov
push
ds
or
scas
adc
call
mov
add
aam
out
and
mov
jns
in
popa
bswap
jmp
lods
adc
xor
rcr
push
mov
stos
shl
lock
retf
cmp
jl
adc
add
jp
fidivr
mov
cld
xchg
fisttp
and
stc
jae
jge
call
stos
cdq
xchg
dec
test
push
out
jge
xor
jl
xlat
jns
outs
arpl
imul
and
mov
(bad)
jnp
push
jb
pop
add
lds
out
rcr
push
add
jmp
bound
icebp
fcmovu
and
rcl
sub
xchg
jb
jmp
das
jo
ins
js
pop
jbe
je
in
add
pop
loop
fisub
lea
imul
in
adc
mov
sub
cmp
xchg
das
adc
push
push
dec
mov
mov
push
bound
xchg
ins
adc
add
dec
imul
loop
je
adc
mov
cwde
dec
hlt
inc
push
mov
ror
sbb
jmp
mov
xor
test
movs
push
shl
push
outs
nop
mov
call
push
stos
jbe
out
jp
cdq
bound
inc
push
clc
or
mov
jnp
xor
stc
sar
adc
movs
jmp
rcr
shr
out
mov
ds
es
jmp
lahf
xchg
dec
imul
int3
xor
sbb
sub
add
dec
jge
dec
add
or
shl
hlt
xchg
test
call
cmp
and
cmp
lods
jp
(bad)
push
ret
mov
push
adc
mov
lea
fs
shl
jp
dec
pop
mov
inc
ja
shr
cli
jl
fcmovnb
and
mov
cmc
inc
or
and
mov
dec
sbb
mov
ins
pop
push
jl
mov
daa
test
icebp
sub
mov
(bad)
cmp
and
push
mov
je
mov
push
xor
fsubr
push
sub
fmul
sub
cs
xchg
cmp
es
nop
je
call
lods
mov
clc
aas
sub
in
lea
jmp
jmp
xor
jne
mov
push
mov
dec
xchg
jle
sbb
dec
mov
push
ficom
mov
ins
sbb
push
or
xchg
pop
mov
jmp
aad
test
push
out
jne
mov
xor
int
mov
push
pop
inc
mov
push
loope
gs
inc
sbb
and
and
xor
mov
retf
mov
sahf
into
push
mov
ret
dec
dec
lahf
stos
pop
imul
or
(bad)
adc
mov
movs
in
adc
shl
lods
test
jae
movs
ja
and
imul
stc
cmp
movs
pop
dec
xor
js
cli
sub
mov
cmp
add
gs
jmp
mov
jb
or
in
jb
push
pop
jecxz
jp
test
push
dec
inc
and
push
mov
ja
sub
(bad)
ins
pop
or
movs
cmps
(bad)
or
retf
call
jmp
hlt
pop
xor
pop
shl
fwait
outs
enter
rcl
stos
sub
jnp
xor
(bad)
fwait
cdq
fcomp
hlt
jns
sbb
lahf
ja
sti
add
pusha
pop
push
xchg
ja
ret
inc
and
(bad)
aas
jmp
dec
sbb
pop
dec
loope
(bad)
mov
fwait
mov
fdivr
jmp
call
mov
push
retf
shl
in
scas
mov
popa
or
(bad)
clc
loopne
adc
push
loope
fstp
ret
popf
pop
xchg
pusha
outs
hlt
call
add
aas
xchg
push
adc
les
xor
jnp
sub
or
xor
push
inc
sbb
gs
std
call
movs
cmp
sbb
out
xor
out
lds
loope
fs
stc
cmp
sbb
les
push
push
cmp
xlat
sub
nop
fsubr
mov
add
iret
mov
popf
xor
and
and
add
in
ror
mov
mov
test
sbb
mov
shl
fmul
xor
xor
leave
(bad)
fisub
mov
mov
sub
stc
xor
xchg
xchg
cmp
daa
mov
jecxz
pop
xchg
jge
mov
mov
dec
mov
fistp
gs
xchg
(bad)
fsubr
or
adc
fnsave
cmp
jg
shl
fmul
pop
std
push
dec
iret
aam
sub
and
retf
jecxz
cmps
xchg
sbb
or
loop
xor
ret
bound
add
sar
xor
cdq
imul
(bad)
sti
nop
cs
xor
mov
ja
loop
xchg
xor
sahf
shr
ds
aam
and
xor
sub
inc
pop
je
jmp
popf
jne
or
inc
dec
add
imul
mov
inc
add
clc
jmp
sti
and
mov
lea
jge
pop
mov
jbe
adc
and
pop
jne
xchg
inc
pop
mov
aaa
stc
jmp
xchg
jne
mov
cs
leave
outs
sbb
jecxz
outs
xchg
jns
sahf
inc
rcl
and
repz
fisttp
ja
pop
icebp
movs
sbb
adc
enter
mov
js
mov
pop
pop
and
xchg
outs
pop
cmp
fbstp
fimul
add
cwde
jo
outs
aas
fldenv
repz
xchg
jl
push
mov
sbb
pop
jl
dec
ins
cmp
lods
push
dec
push
sbb
mov
arpl
jnp
jb
adc
loopne
pop
mov
sti
mov
test
pusha
imul
stc
test
or
gs
les
dec
mov
mov
push
jns
ficomp
xor
pop
das
inc
in
lahf
jecxz
daa
mov
shr
cmp
or
jmp
inc
add
(bad)
lods
xor
jbe
sti
enter
outs
jnp
les
and
pop
mov
xor
lds
ret
mov
imul
lods
jae
jns
dec
div
aad
les
push
aas
mov
sbb
loop
(bad)
sar
ins
dec
fwait
dec
lods
sub
jecxz
jns
push
fs
(bad)
inc
(bad)
dec
mov
sub
out
cmps
sbb
inc
loope
repnz
jnp
test
push
cmp
mov
sub
div
(bad)
jbe
adc
cmp
pop
pop
and
dec
jne
test
sbb
pop
fdivr
add
nop
jl
jp
jnp
adc
sbb
adc
dec
jl
add
inc
sub
or
popf
leave
mov
push
cs
sub
call
sbb
dec
cmp
das
cmp
mov
xor
adc
mov
mov
(bad)
adc
jmp
mov
xchg
sbb
push
sub
ins
push
aas
xor
dec
in
xlat
in
in
dec
jnp
mov
and
or
jae
inc
nop
call
mov
sti
add
add
mov
inc
aaa
mov
xlat
xchg
xchg
mov
cld
in
(bad)
in
inc
into
cmps
(bad)
out
pop
pusha
cmp
push
cli
inc
movs
and
sub
or
sub
dec
lods
mov
pusha
dec
mov
push
push
(bad)
jle
dec
xor
pop
push
lds
dec
jae
push
lahf
adc
leave
xchg
and
sbb
fisttp
in
mov
push
in
aaa
push
dec
jne
fsubr
and
dec
ins
inc
adc
mov
sbb
aaa
push
mov
cmps
xor
leave
loope
clc
inc
jecxz
inc
and
inc
loop
(bad)
or
and
fmul
repnz
retf
xor
push
xor
ret
dec
psrlq
fiadd
shl
dec
jle
loop
pop
cwde
cwde
cli
xor
adc
loop
inc
cld
cmp
inc
adc
ja
cs
push
xchg
push
jmp
sub
clc
aam
scas
jmp
daa
xchg
dec
xor
pop
les
dec
cwde
lds
cwde
add
lock
cmp
pop
add
ret
push
int3
jle
pop
ins
je
mov
repnz
sub
sub
xchg
and
loop
in
movs
adc
push
pop
fistp
or
xchg
loopne
mov
xor
jmp
fbld
cld
fs
adc
scas
outs
imul
int
sbb
pop
pop
shr
inc
and
sub
pop
mov
pop
mov
out
sub
push
lock
rol
push
add
jno
hlt
add
cmp
ror
push
mov
push
retf
cwde
or
push
mov
sar
mov
push
mov
xchg
lods
pop
xchg
mov
(bad)
or
xor
push
cmps
sar
cmp
neg
fs
adc
fsub
xchg
push
pop
enter
gs
rcr
into
mov
jmp
loope
xchg
test
call
mov
fsubr
lods
mul
rol
jmp
mov
fnstcw
movs
dec
cmp
add
xchg
rcr
xchg
push
inc
pop
xchg
imul
call
lods
fnsave
sbb
fcmovnu
leave
jo
inc
dec
sbb
in
and
dec
stos
adc
cmp
pop
out
mov
jae
jns
pushf
daa
or
out
mov
xchg
push
fdiv
mov
lods
fld
int3
adc
mov
cmp
push
ins
or
aad
mov
pop
push
iret
dec
cmp
in
add
add
fistp
in
add
xchg
sbb
or
sbb
and
rcr
loop
dec
cmps
imul
xor
in
dec
mov
rcr
inc
mov
sbb
dec
les
lds
pusha
test
test
into
rol
or
jg
leave
daa
popa
(bad)
dec
int3
push
test
mov
mov
das
inc
pop
retf
and
cmp
jnp
pop
dec
shr
jne
push
mov
adc
pop
stos
imul
mov
fs
pop
aas
mov
adc
sbb
sub
sub
fxtract
xor
out
cmc
pop
int3
lods
dec
movs
test
push
pop
dec
call
push
sbb
xchg
out
cwde
xchg
in
out
push
out
or
dec
bound
es
push
mov
xchg
adc
aam
push
out
nop
fwait
dec
xor
idiv
adc
push
in
ins
shl
test
add
int3
sub
inc
ja
pop
les
fidiv
mov
and
mov
sbb
cmp
inc
dec
out
es
data16
mov
push
popa
sti
push
mov
pop
and
mov
or
dec
retf
shl
inc
aad
outs
and
cmc
jecxz
daa
and
dec
mov
call
mov
repz
call
scas
ret
jne
pop
pop
(bad)
call
arpl
stos
and
rcr
jnp
lods
iret
adc
push
arpl
add
mov
add
xchg
aas
fwait
cld
(bad)
cmps
jae
pop
scas
push
mov
push
mov
cmp
int
push
ret
(bad)
mov
push
cmp
fcmovnb
out
sub
pop
push
nop
xor
mov
cmp
dec
or
mov
dec
sbb
popa
imul
and
sub
aaa
push
mov
bound
push
aam
(bad)
push
cmp
mov
pcmpgtb
repnz
lds
pop
fucomp
ret
jno
pop
lods
nop
inc
pop
cmp
ins
int3
add
test
or
iret
lods
shld
jg
ins
inc
jp
test
push
shr
sbb
jge
out
stos
sub
and
rol
push
mov
jl
jb
or
mov
int
xlat
dec
cmp
push
fwait
cdq
dec
inc
xor
cmp
fild
prefetch
or
push
lods
gs
and
cmp
sub
cld
cmp
aaa
jmp
not
jge
xchg
inc
push
aam
test
retf
aam
fadd
push
push
out
push
lock
(bad)
mov
push
cmp
es
sub
and
bound
or
aaa
xchg
cdq
or
adc
out
cmp
push
rcr
inc
rep
push
or
mov
nop
popf
daa
adc
sbb
add
jns
(bad)
in
ds
dec
inc
mov
inc
adc
test
fwait
(bad)
push
xor
test
aad
xor
add
push
call
out
in
outs
sti
fisubr
verw
mov
or
pop
enter
mov
xor
and
cdq
cld
mov
cmp
xchg
cmp
movs
pop
or
outs
or
mov
xchg
mov
add
loope
inc
mov
push
dec
or
adc
jl
fisttp
sub
add
ins
icebp
cmp
inc
or
dec
jnp
sub
jns
ins
jb
sbb
cmp
pop
ds
out
clts
inc
pop
or
stc
not
mov
sub
pop
ins
sub
aad
inc
xor
ret
xchg
mov
std
cld
int
mov
ins
mov
pop
ins
add
fcomi
les
or
jle
push
xor
aaa
or
jb
pusha
or
fwait
and
out
push
inc
xor
cmp
pop
sub
adc
mov
repz
mov
adc
and
ss
dec
adc
pop
lods
cld
lods
scas
das
lds
stc
retf
mov
(bad)
mov
retf
push
retf
mov
clc
and
mov
iret
mul
fadd
je
xor
fnstenv
mov
in
jo
adc
stc
xchg
dec
add
jno
outs
sbb
loop
mov
pop
fdivr
ins
jno
sbb
fidiv
cmp
aad
mov
jle
inc
mov
shl
jl
mov
and
adc
mov
adc
push
sbb
std
mov
cmp
aaa
adc
pop
add
nop
lea
std
stos
ficomp
sbb
loopne
ds
fsubr
jnp
mov
add
fnsave
push
int
pop
push
and
pop
inc
sub
xchg
bound
jb
dec
dec
sub
in
movs
in
mov
xchg
inc
aad
xor
scas
xor
xchg
test
adc
xchg
imul
dec
pop
in
push
xchg
mov
js
adc
(bad)
mov
ret
pushf
xchg
mov
dec
xor
test
xchg
push
inc
in
mov
and
(bad)
popf
mov
dec
aas
cmps
mov
push
sbb
clc
push
mul
ja
aad
inc
mov
xchg
sub
mov
xchg
test
mov
aam
add
push
or
clc
sub
outs
loope
xchg
test
hlt
mov
push
mov
xor
jl
jae
push
sar
call
gs
dec
and
stc
mov
add
scas
fnstenv
push
dec
aam
push
adc
test
out
push
inc
xchg
lahf
sar
test
fidiv
adc
fcomp
sub
jmp
ds
stos
mov
mov
jmp
jp
loopne
mov
scas
xor
inc
fsubr
pushf
movs
xor
jle
pop
pop
adc
xor
(bad)
ins
nop
cmps
push
push
sbb
call
stc
mov
pop
and
mov
mov
cdq
jnp
sbb
stos
rol
aaa
popa
mov
push
inc
or
sahf
test
sub
jle
add
test
dec
cwde
add
and
cmp
int
xor
test
repnz
push
dec
call
mov
movs
addr16
sub
pop
xchg
enter
enter
mov
push
or
push
jg
leave
repnz
ror
es
jno
cs
mov
jns
pop
test
push
push
or
aam
sbb
adc
xchg
jle
jnp
sbb
push
dec
adc
(bad)
int
dec
add
jl
repz
jg
ins
xor
lahf
adc
jne
or
mov
sahf
and
dec
enter
xor
test
cmc
add
(bad)
jmp
xchg
mov
arpl
lods
xor
inc
fsub
jmp
scas
cmp
mov
or
pop
push
stos
adc
adc
fld
jge
dec
lods
add
push
fnstcw
into
inc
xor
sbb
test
cmp
jp
jp
adc
mov
mov
pop
in
jecxz
sbb
idiv
frstor
xchg
sub
pop
retf
inc
bound
cdq
dec
jae
xchg
dec
outs
xor
mov
add
mov
aad
add
cmp
or
nop
retf
jle
popa
int
and
mov
sbb
popf
mov
cmps
or
sub
nop
ror
inc
aas
mov
add
mov
in
sbb
clc
cs
and
and
push
and
or
push
sbb
inc
sub
aas
lahf
xchg
pop
and
mov
dec
sub
nop
out
inc
sar
call
mov
icebp
clc
in
into
push
out
rcl
pop
xchg
pop
loope
lahf
fwait
inc
imul
(bad)
jmp
iret
push
xchg
cs
sub
pop
imul
push
adc
sbb
xor
iret
cmc
push
aaa
icebp
or
movs
sub
hlt
sub
xchg
sub
test
dec
loope
mov
push
stc
mov
icebp
sbb
int3
repz
adc
xor
fcomp
ffreep
shl
pop
cmc
adc
xlat
sub
loopne
xchg
push
mov
mov
and
push
jmp
cmps
inc
and
ret
sub
fcomp
pop
stos
ins
pop
lock
mov
iret
mov
loope
jg
mov
scas
mov
fwait
rcl
sub
jg
ds
mov
mov
leave
mov
dec
xor
jns
or
xor
lds
cmp
mov
and
loope
dec
mov
push
fdivr
jnp
(bad)
retf
call
adc
xchg
jns
sti
cli
in
or
out
jmp
jg
retf
test
mov
cmp
cmc
mov
push
iret
push
adc
movs
push
xchg
adc
pop
xchg
rcr
test
fs
enter
and
les
cmc
ins
xor
mov
push
mov
jae
pushf
xchg
fldcw
and
imul
leave
or
cmp
aaa
push
popf
jle
jp
out
gs
call
stos
lds
add
mov
movs
repz
pop
cld
sti
pushf
in
pop
sbb
lock
fsubp
and
test
add
data16
cmp
dec
popa
jmp
cmp
sahf
cmc
mov
push
sub
jae
repz
sub
pop
pop
inc
sar
sbb
dec
xor
or
xlat
test
ficomp
stc
les
mov
std
aam
test
xchg
lods
mov
jg
test
mov
test
enter
cmp
pop
jae
es
scas
sahf
cmp
jg
sbb
xor
add
adc
xchg
sub
(bad)
pop
xchg
test
out
je
retf
mov
xchg
xor
mov
push
addr16
jecxz
and
hlt
cmp
test
movs
mov
hlt
xchg
cmps
(bad)
mov
push
push
cs
sub
sahf
adc
aam
out
daa
pop
in
pop
jbe
icebp
in
hlt
lods
out
(bad)
adc
rcr
lods
xor
adc
pop
outs
add
popa
aas
mov
xor
into
mov
push
xchg
xchg
mov
xor
add
dec
ja
sub
mov
fs
mov
cmp
push
(bad)
stos
loop
shl
inc
mov
mov
scas
fild
stc
jge
popa
xor
pop
inc
inc
cmp
lahf
jnp
(bad)
mov
pop
jns
in
xchg
xchg
cmp
test
daa
add
jmp
fwait
and
and
and
xor
jbe
(bad)
sbb
pop
shl
aad
inc
std
push
seto
push
cmp
cmp
pop
pop
pop
jno
push
popa
icebp
gs
adc
push
pop
add
mov
dec
cmps
inc
xchg
cwde
ins
xchg
loopne
nop
jo
outs
pusha
retf
int3
mov
loop
and
cmp
fs
xor
out
cmps
sbb
cmp
fwait
arpl
mov
xchg
pop
sub
jmp
sahf
(bad)
inc
adc
push
and
ffree
jmp
jmp
out
mov
clc
addr16
jbe
xor
or
jmp
sbb
mov
sbb
pop
jmp
mov
add
adc
rcl
xor
test
test
fimul
stos
sbb
push
popa
sub
adc
jp
mov
mov
sub
add
adc
test
jecxz
dec
daa
aaa
push
std
mov
iret
cmp
bound
jnp
test
test
mov
std
inc
xchg
scas
sub
dec
mov
stos
bound
pop
add
cmp
sbb
std
into
pop
inc
mov
aas
cdq
and
cs
mov
enter
jmp
adc
mov
xor
and
sar
arpl
push
or
nop
call
lods
xor
mov
mov
ror
repz
xchg
push
dec
ja
mov
jle
cmp
mov
mov
(bad)
enter
es
lds
xor
inc
and
sub
mov
dec
push
test
jne
push
cwde
hlt
sub
pop
popa
jo
inc
xor
lods
mov
pop
aad
push
cmps
mov
mov
sub
mov
popa
xor
xor
or
pop
mov
push
xchg
xor
sbb
add
(bad)
mov
ret
jecxz
stos
sbb
(bad)
mov
mov
xchg
pextrw
sbb
inc
cwde
sbb
xor
sahf
dec
dec
test
jns
sar
push
repnz
lock
and
and
ja
sar
mov
loopne
mov
ret
dec
arpl
ins
sbb
iret
mov
scas
push
mov
adc
cs
imul
mov
aas
add
sahf
sub
xor
test
adc
call
jb
add
push
fbld
push
xchg
call
jg
mov
mov
adc
or
pop
iret
pop
int
nop
or
mov
test
scas
xor
jo
lds
mov
dec
(bad)
mov
fistp
repz
sub
push
(bad)
push
adc
add
aam
into
inc
ins
(bad)
push
mov
xlat
xchg
xchg
add
rol
xor
daa
clc
data16
and
sar
xchg
lock
(bad)
(bad)
fnstenv
mov
mov
inc
cwde
inc
cli
in
dec
mov
scas
lea
mov
dec
and
pusha
(bad)
fst
dec
mov
push
scas
sahf
mov
xchg
xor
jnp
jl
add
dec
inc
in
mov
cmp
lods
jle
in
out
ja
mov
aaa
inc
fstp
test
mov
dec
mov
push
lea
mov
lds
xrelease
lods
xchg
sbb
jmp
add
cmps
loop
scas
shl
mov
cmp
fnsave
mov
pop
pushf
sti
adc
shr
pop
mov
in
into
int3
into
stc
and
push
and
push
xchg
int3
retf
mov
clc
jae
in
jbe
mov
jae
push
xchg
xchg
test
and
adc
jle
xor
sub
fidiv
in
ret
bnd
push
in
fstp
jmp
mov
xor
(bad)
into
push
adc
mov
pop
out
out
jecxz
mov
mov
ss
push
or
sub
daa
lods
pop
or
lahf
push
add
sub
jge
mov
inc
data16
dec
mov
sub
mov
jg
add
pop
lea
ret
sub
out
rcr
and
popa
call
and
not
add
add
dec
movs
in
sbb
cmp
(bad)
xchg
cld
aam
call
xchg
inc
mov
ins
and
popa
movs
mov
sbb
or
not
xor
pop
nop
je
add
mov
cmp
mov
jo
sbb
hlt
mov
div
adc
cld
mov
lea
inc
mov
aas
xchg
mov
ds
aas
adc
(bad)
and
xor
xor
sbb
hlt
dec
mov
inc
inc
cmp
retf
cmp
or
lea
imul
int
dec
stos
xchg
pop
adc
imul
jne
sahf
sbb
leave
cmp
enter
fnsave
in
js
arpl
push
out
xchg
xor
add
sub
or
and
add
mov
fdivr
ins
jb
hlt
sbb
pop
xchg
xor
adc
inc
adc
shr
xor
push
mov
jmp
pop
and
pop
push
call
popa
mov
push
fcmovbe
cli
call
add
or
xor
stos
inc
sbb
cmp
aam
cli
push
pusha
pop
jb
mov
js
popa
jmp
js
mov
pop
out
inc
out
aaa
(bad)
fld
imul
mov
add
imul
mov
out
push
jg
mov
ins
mov
ret
cmp
test
hlt
not
sbb
hlt
test
fimul
sbb
out
add
push
pusha
inc
pop
ja
or
add
test
xor
mov
jne
neg
sbb
cld
and
ds
fistp
cmps
in
pusha
fcom
in
in
xor
mov
inc
(bad)
push
fisub
xor
inc
pushf
mov
push
sti
shl
mov
xlat
push
adc
pop
xchg
and
dec
and
mov
scas
loope
lahf
stos
idiv
pop
sahf
fld
sahf
int3
cmp
outs
mov
bound
or
outs
mov
jbe
dec
sub
std
mov
clc
(bad)
rcr
cld
lods
in
gs
dec
pop
sbb
(bad)
mov
fistp
and
stc
mov
addr16
mov
cmps
cmp
adc
fstp
xor
adc
dec
xchg
jmp
mov
adc
loop
loopne
retf
xor
sbb
sub
ja
es
pop
and
mov
xchg
fisubr
xchg
(bad)
(bad)
jns
cli
mov
ja
dec
int3
jno
das
mov
(bad)
sbb
cmp
mov
ja
pusha
ror
push
inc
ja
aad
push
and
xor
ficomp
div
test
or
fs
sub
fcmovnbe
adc
loopne
push
mov
sub
mov
jmp
jno
sub
(bad)
jbe
imul
repnz
xor
test
dec
jl
sbb
adc
add
sbb
mov
mov
cmp
mov
inc
push
imul
pushf
sbb
jbe
and
inc
push
adc
retf
mov
jg
pusha
repnz
int3
(bad)
dec
sbb
loopne
mov
push
iret
mov
mov
mov
xchg
pusha
clc
aaa
adc
pop
sbb
dec
lahf
daa
cmps
loop
lock
mov
push
pop
inc
mov
rol
push
movs
enter
or
add
sub
in
int
in
sbb
mov
add
mov
ins
lods
fs
call
lea
inc
test
into
sub
add
jl
lods
stc
or
cmps
(bad)
imul
mov
scas
jle
lahf
scas
pop
push
ss
retf
dec
pushf
jns
rol
movs
xchg
add
mov
ficom
jbe
movs
mov
hlt
lods
fistp
pop
fistp
mov
sub
xor
jle
inc
sar
leave
test
dec
pop
cli
shr
dec
push
hlt
adc
adc
outs
lds
out
pop
pop
xor
xchg
pop
dec
leave
jae
(bad)
cdq
jo
sub
daa
mov
xor
ins
pop
cli
movs
lock
aas
pop
pusha
mov
pop
sub
mov
shl
mov
ja
pop
xor
cmp
je
gs
hlt
dec
fldcw
add
and
jp
and
popfw
loope
pop
inc
and
sahf
pop
inc
mov
adc
stos
pushf
cmp
pusha
sub
jb
xchg
(bad)
adc
cwde
(bad)
dec
push
cmc
cmp
call
div
mov
lods
leave
pop
inc
add
outs
mov
and
sbb
inc
adc
popa
mov
mov
sbb
dec
das
aaa
in
push
aaa
fdivr
sbb
mov
shl
jb
test
mov
pop
adc
outs
lods
cmp
cwde
adc
cmp
push
lods
hlt
mov
adc
imul
dec
aam
push
dec
inc
xchg
xor
jecxz
mov
mov
dec
jl
cmc
daa
cmp
inc
fcom
hlt
and
into
adc
icebp
out
and
(bad)
push
jl
or
arpl
jbe
jle
jo
push
fisttp
(bad)
(bad)
movs
push
fwait
mov
xor
mov
outs
inc
loope
out
cmp
mov
shl
nop
inc
(bad)
lock
into
imul
inc
xor
xor
adc
gs
scas
fdiv
push
leave
lahf
mov
dec
iret
mov
fld
push
(bad)
loopne
fs
cmp
js
retf
out
sti
std
out
pop
or
stos
mov
retf
push
mov
mov
mov
int
mov
(bad)
mov
addr16
jmp
inc
lods
jne
cld
popf
push
mov
dec
cmp
sbb
sbb
mov
inc
fs
add
ffree
ret
stos
mov
es
cmp
jl
arpl
inc
outs
enter
js
enter
mov
loopne
call
push
inc
mov
jl
mov
fimul
sbb
jno
mov
mov
lods
cmp
jae
cs
std
jae
mov
fld
hlt
dec
mov
lea
inc
aam
dec
movs
shl
or
pop
shr
into
fnstcw
and
mov
icebp
idiv
inc
jmp
ins
out
mov
ss
cmp
pop
stos
test
les
sub
inc
push
outs
cmps
sub
jl
ins
js
sbb
pop
jae
shr
lahf
inc
(bad)
add
mov
bound
cs
(bad)
cmp
mov
fcmovbe
xor
ins
sar
xchg
fsubr
fld
add
dec
fld
mov
push
shr
push
inc
push
or
loope
pop
inc
out
push
cmp
mov
and
std
jle
mov
mov
add
jns
mov
(bad)
repz
test
retf
inc
fmul
ins
stc
adc
push
test
or
sub
in
icebp
out
xchg
push
mov
test
dec
outs
movs
sar
aad
aas
sti
add
mov
mov
xchg
neg
std
cmp
test
and
mov
(bad)
cmps
dec
mov
mov
dec
mov
cmp
push
pop
std
mov
ss
mov
adc
(bad)
je
sahf
(bad)
scas
adc
call
push
fst
in
pop
sub
mov
xor
jno
lods
sti
int
fcmovnb
inc
push
mov
cli
and
imul
(bad)
mov
in
std
sti
out
cmova
call
int
dec
int
jp
mov
push
push
lea
jge
pop
outs
hlt
pop
mov
in
mov
jmp
ins
pop
add
dec
pop
mov
lods
sbb
test
ret
stos
jno
mov
mov
sbb
xchg
pushf
xor
sub
cdq
in
aad
jno
mov
enter
add
scas
loope
pusha
pop
iret
in
add
xor
sbb
sub
lock
sar
pop
mov
xchg
inc
sub
add
inc
sub
test
sti
rcl
push
xchg
shl
test
xor
push
pop
jmp
dec
xor
int3
xchg
daa
jbe
push
xor
lea
movs
daa
push
in
lods
add
rcl
cld
jl
add
nop
add
(bad)
rcr
pop
adc
or
mov
xchg
arpl
jbe
jg
cmp
mov
inc
mov
xor
bnd
inc
inc
popa
je
or
retf
mov
add
cmp
pop
sbb
call
jno
jns
pop
jp
mov
push
mov
add
pop
dec
cmp
jno
pop
pushf
push
into
pop
xor
rol
mov
jl
xchg
mov
aas
mov
test
xchg
pop
outs
pop
test
push
xchg
aas
bt
sbb
in
(bad)
xchg
pop
sub
shl
out
jb
sbb
call
dec
inc
and
jle
loopne
out
sar
ss
or
fidivr
test
popf
pushf
sahf
mov
nop
push
out
out
xor
xchg
loop
stos
jns
add
add
fwait
inc
xor
imul
rol
xchg
repz
dec
and
dec
call
cmp
sbb
ins
xchg
(bad)
in
sbb
in
mov
cmc
adc
(bad)
pusha
das
call
call
push
stos
jno
test
cmp
xor
pusha
jg
outs
dec
lods
imul
ins
mov
sub
loopne
(bad)
and
fmul
jecxz
jmp
dec
push
xor
push
push
pop
adc
mov
mov
add
test
aas
pop
and
add
loope
xor
rol
inc
sub
mov
xchg
mov
add
cdq
mov
(bad)
xor
popf
les
fwait
push
sub
popf
outs
ret
lahf
xchg
ret
enter
inc
addr16
out
pop
and
inc
jb
inc
jmp
push
(bad)
clc
and
pop
inc
mov
cmps
and
pop
pop
mov
jns
push
movs
(bad)
mov
xor
ret
push
xchg
adc
cdq
and
aad
mov
mov
inc
lock
xlat
mov
jle
inc
ror
into
jno
arpl
pop
out
xor
sub
nop
in
pop
lock
mov
loope
or
cli
cmc
add
cmp
inc
int3
jg
pop
pop
mov
mov
iret
xor
adc
cmp
jne
clc
xor
leave
das
mov
(bad)
(bad)
jmp
cmp
adc
mov
mov
mov
or
push
xchg
xor
mov
movs
jmp
inc
cmp
or
mov
xor
mov
xor
mov
push
in
cld
cmp
push
lods
arpl
jle
call
xchg
push
sub
mov
into
(bad)
cmp
inc
lods
sbb
sahf
out
fldln2
test
fist
mov
mov
outs
test
cmps
mov
jmp
xchg
xchg
rcl
scas
outs
leave
xor
jb
lods
je
xchg
div
xor
cmp
push
test
inc
and
pop
push
dec
push
jnp
loopne
xchg
xor
dec
shl
pop
inc
mov
push
jne
mov
sbb
fiadd
adc
sbb
sbb
in
add
sahf
adc
inc
adc
jl
rcr
shl
retf
dec
clc
inc
add
popa
fidivr
dec
jbe
cmps
push
jmp
pop
adc
sub
push
jmp
pop
dec
xchg
cwde
pop
lahf
cmp
(bad)
cld
aas
mov
out
imul
push
mov
cmps
lahf
lds
push
out
mov
jae
mov
jmp
sub
mov
or
push
movs
mov
imul
or
pop
mov
cmp
adc
cdq
mov
jge
mov
scas
xchg
push
dec
dec
cmp
jo
mov
out
and
cmp
push
xchg
xchg
rcl
popf
jb
cmp
and
mov
in
fisub
mov
xchg
inc
cmp
jg
adc
mov
sub
int
movs
lods
mov
sub
pop
mov
std
cmp
xchg
jnp
cwde
lods
enter
inc
adc
mov
mov
js
jbe
jb
imul
xor
mov
adc
xchg
fwait
sub
out
or
or
mov
pushf
into
add
sbb
xchg
xchg
dec
cmp
pop
adc
jbe
scas
in
jecxz
ins
sub
sti
pop
xor
mov
sub
pop
xor
and
push
mov
dec
sti
mov
jp
and
into
adc
(bad)
jmp
test
(bad)
mov
(bad)
jmp
mov
and
arpl
pushf
sahf
arpl
sub
pop
popf
xchg
shl
scas
call
popa
daa
hlt
xor
(bad)
into
pop
lods
xor
push
inc
mov
sbb
inc
push
mov
pop
jg
mov
jp
jnp
iret
scas
mov
xchg
cmp
mov
test
movs
lea
jae
inc
pop
loop
fdiv
imul
jmp
push
adc
fidivr
mov
fnstsw
outs
pop
mov
pop
inc
push
lock
xchg
fimul
and
mov
not
mov
dec
pusha
clc
push
dec
out
sub
push
xor
ins
xchg
adc
jmp
dec
clc
into
xchg
jbe
ins
movs
retf
fucom
icebp
ret
out
push
lods
add
mov
mov
and
fmul
call
fld
xor
test
adc
jbe
xor
jns
popa
aas
xchg
xor
shl
mov
adc
sbb
sub
mov
sbb
cmps
mov
push
(bad)
mov
loop
sti
stc
cmps
push
mov
mov
sbb
dec
push
cmp
and
jbe
int3
pop
cmp
cmp
jg
xor
aas
jle
lods
mov
pop
dec
test
cmp
test
loop
xchg
inc
sub
xor
mov
mov
push
test
push
fldenv
pop
xor
mov
mov
sub
dec
lods
int
cwde
jmp
push
xor
cmp
dec
(bad)
aam
cdq
je
adc
inc
jbe
inc
mov
pop
shr
hlt
mov
xchg
(bad)
lock
addr16
out
mov
mov
push
or
(bad)
ss
pop
mov
lock
dec
sbb
cs
jmp
sbb
jmp
or
aas
xchg
pusha
in
jg
jp
sub
xchg
outs
cmp
pop
mov
shl
int
stos
imul
jecxz
dec
repnz
leave
ror
lods
pop
sub
push
rol
push
cld
jle
imul
push
dec
ins
add
push
mov
dec
retf
adc
mov
inc
jge
in
jge
cmps
dec
add
xor
rcr
cwde
mov
sbb
(bad)
(bad)
mov
call
in
pusha
xor
inc
sub
es
daa
test
xchg
test
aas
sub
adc
push
inc
ror
ins
xchg
jl
mov
or
ja
add
(bad)
jl
es
mov
scas
add
data16
push
std
(bad)
jne
add
repz
fld
jmp
mov
(bad)
cwde
pmuludq
cmp
sub
test
leave
mov
data16
gs
adc
push
ficomp
loope
lds
addr16
getsec
stc
ss
js
ja
push
popw
sub
dec
fstp
outs
push
jl
jmp
mov
ret
int3
lds
scas
shr
sub
shr
fwait
add
sub
pusha
pop
movs
dec
mov
scas
ins
in
inc
sbb
add
in
aam
fist
pusha
or
pusha
stos
repnz
jbe
retf
add
mov
outs
mov
xor
sub
push
es
cwde
xor
dec
push
dec
das
out
js
imul
not
sbb
mov
pusha
inc
mov
mov
push
jne
cmps
pop
jb
loope
xchg
pushf
adc
cmp
lds
ret
adc
cld
fsubr
adc
sub
xor
retf
xor
(bad)
mov
xchg
es
pop
jb
sti
mov
mov
sahf
(bad)
mov
(bad)
and
adc
push
push
push
xor
dec
pop
ds
jmp
test
cld
inc
mov
popa
jp
fs
jle
push
imul
pusha
mov
push
jbe
adc
(bad)
fdivr
lock
daa
mov
jns
and
sub
ror
sbb
pushw
mov
aad
pop
inc
rol
das
pop
mov
xchg
sub
jns
out
mov
aad
xlat
dec
pop
jge
out
mov
leave
push
lods
jne
xor
xor
mov
ror
inc
push
sar
mov
jne
ins
cmp
jno
popa
cmp
mov
loope
js
addr16
lea
sub
test
mov
(bad)
jnp
xchg
scas
(bad)
in
sar
sbb
iret
mov
push
jae
cdq
jns
aaa
and
pop
and
adc
pop
mov
pushf
pop
cmp
sbb
test
mov
fcmovu
xor
test
popf
repnz
arpl
inc
and
pop
push
leave
cmp
inc
ret
dec
clc
(bad)
dec
add
pop
pop
jno
dec
add
inc
lahf
rcl
push
out
out
pop
nop
pop
leave
or
lea
sbb
push
and
or
fwait
sbb
aam
shl
out
jp
sub
and
xlat
jne
xchg
or
mov
add
icebp
inc
dec
push
in
fisttp
cs
sbb
ss
xchg
push
push
add
cwde
adc
jp
or
lock
sub
adc
stc
push
xor
xor
mov
arpl
jmp
jmp
imul
jl
add
cmp
pop
mov
std
das
call
jp
pop
cwde
stc
fwait
adc
(bad)
push
push
jno
lea
push
test
push
dec
icebp
inc
xor
xor
lahf
test
fs
scas
add
scas
ret
add
outs
or
repz
adc
mov
arpl
dec
xor
push
iret
add
add
imul
setnp
jae
jg
repnz
hlt
outs
push
dec
and
cli
rol
pusha
aad
addr16
cmp
imul
mov
mov
adc
or
mov
xchg
pop
ins
inc
scas
jecxz
into
jne
ds
test
dec
popf
in
imul
or
xchg
inc
es
into
pop
test
test
clc
inc
lods
and
cmp
daa
ins
ss
ds
pop
int
fwait
mov
icebp
rcl
jns
and
push
push
inc
pop
mov
fst
pop
dec
dec
into
popa
jbe
pop
xchg
not
aas
dec
mov
stc
pop
outs
pop
in
shr
mov
and
mov
pop
les
pop
call
sbb
and
stos
mov
(bad)
jp
(bad)
jne
fld
pop
ss
mov
outs
pop
or
add
jo
out
test
outs
ins
jns
cmps
sub
movs
fwait
ret
into
push
movs
stc
push
retf
mov
dec
mov
ret
add
push
push
ss
retf
inc
test
outs
add
retf
cmp
jle
push
jp
ins
xchg
mov
stos
sbb
sbb
ror
pop
cmps
shr
(bad)
loopne
ret
enter
mov
addr16
stos
pop
xchg
in
dec
cdq
addr16
aaa
sbb
aam
in
daa
outs
add
dec
pop
mov
push
lds
lds
daa
fcom
xchg
mov
mov
shl
std
mov
ror
mov
ret
xchg
repz
adc
lods
mov
inc
xchg
mov
mov
imul
pop
inc
xchg
addr16
rol
sbb
out
xchg
push
mov
icebp
mov
cmp
call
inc
cld
pop
iret
inc
dec
lds
jbe
mov
sub
ja
cmp
(bad)
mov
mov
jnp
adc
jae
jb
cmc
mov
sub
push
nop
stos
test
mov
rcl
cmp
hlt
cmp
int3
mov
stos
add
loop
lahf
inc
push
xlat
lahf
sbb
push
pushf
xchg
or
mov
push
inc
cmps
js
shl
push
inc
in
sub
(bad)
push
add
sbb
pop
dec
sbb
das
out
fs
mov
xchg
or
cmps
stos
dec
pop
pop
fidiv
daa
sub
mov
iret
(bad)
addr16
cmps
jno
or
sub
jg
nop
add
sahf
or
lods
fpatan
mov
ins
jae
(bad)
rol
call
das
jbe
cmc
data16
pop
sar
push
cmp
sahf
and
mov
ja
iret
mul
arpl
out
int3
and
push
cli
adc
cmp
dec
mov
mov
sub
(bad)
jnp
fild
fimul
mov
push
dec
inc
call
dec
in
xor
cmp
int
dec
xlat
int
inc
dec
pusha
push
(bad)
pop
enter
add
lock
int3
scas
int3
jae
shl
bound
clc
and
jg
jns
inc
push
je
stc
addr16
and
inc
inc
add
adc
fisttp
mov
cmp
inc
sbb
jns
jecxz
jbe
push
mov
or
ret
dec
scas
sbb
mov
inc
pop
dec
std
std
daa
fnstenv
inc
or
ret
mov
push
inc
cli
xor
je
out
xchg
fpatan
jne
jge
cdq
mov
mov
fistp
outs
int3
sub
cmc
mov
jle
dec
adc
pop
(bad)
js
dec
lock
mov
add
ja
ror
mov
adc
fisttp
imul
addr16
cs
daa
push
and
xor
and
leave
jmp
add
mov
fmulp
fwait
popf
mov
adc
leave
mov
int3
test
inc
xchg
xchg
mov
xor
cmp
inc
daa
adc
mov
js
jns
aaa
call
pop
jbe
dec
nop
cmp
fistp
push
inc
jns
test
sub
(bad)
out
fbld
pop
jmp
cmps
lds
inc
xor
call
dec
xor
cmp
retf
xor
sub
mov
dec
iret
call
mov
mov
je
les
inc
and
mov
push
clc
mov
mov
out
mov
jb
inc
and
inc
ror
aas
int
cmp
lahf
jo
xor
out
or
add
or
sub
xor
push
sub
lds
cmp
int
mov
aam
int
push
jb
jp
mov
pop
dec
and
add
jge
les
mov
jmp
lahf
jbe
shl
(bad)
cmc
xor
mov
mov
stos
push
pop
mov
imul
test
jb
aam
aaa
fdiv
pop
cmp
pop
in
push
xor
dec
jns
push
lock
sbb
mov
sbb
sar
xchg
out
cmp
mov
jmp
pop
jmp
sbb
sbb
add
mov
push
adc
sub
dec
pop
arpl
mov
xchg
mov
cmp
jb
shl
jae
pop
mov
lds
mov
scas
ror
xchg
mov
sti
fsubr
push
lock
nop
retf
mov
sbb
fs
lods
(bad)
inc
dec
ss
cmp
sahf
pop
and
and
sbb
xchg
xchg
add
dec
push
add
cmp
fisttp
and
hlt
inc
jno
push
test
cmp
(bad)
stc
xor
add
mov
jp
std
sbb
ds
shl
cs
and
inc
push
(bad)
addr16
jecxz
xchg
cwde
out
push
fdivr
jge
add
inc
jecxz
xchg
retf
cmp
xlat
xchg
outs
in
xchg
dec
mov
sub
push
or
dec
dec
shr
pop
dec
jb
fistp
sub
add
call
dec
pop
sti
add
stc
stos
push
cmp
popf
icebp
pop
cmp
jo
loop
(bad)
hlt
fwait
cli
mov
add
push
pop
pop
int3
add
pop
into
lahf
pop
add
adc
mov
pop
(bad)
add
pop
push
xchg
test
stc
or
sub
addr16
or
or
shl
stos
dec
push
cld
mov
jo
xor
fs
jecxz
pop
outs
mov
xchg
sub
stos
add
iret
loopne
ret
fmul
int
data16
mov
add
sub
jnp
les
inc
ins
mov
push
sbb
push
lods
or
push
popf
mov
popa
dec
test
push
mov
sbb
ret
jae
mov
out
icebp
mov
rcl
dec
push
mov
out
aam
push
jb
leave
(bad)
dec
outs
lods
jmp
(bad)
pop
mov
shl
xlat
inc
inc
xchg
cmp
fisubr
push
and
(bad)
pop
push
xlat
mov
ins
and
cli
sub
xor
push
add
jnp
leave
pop
and
sub
pop
(bad)
inc
jns
in
lea
push
xchg
cmp
mov
sbb
adc
pop
jbe
fadd
mov
test
mov
xchg
and
xor
pusha
prefetch
jp
xchg
jno
aaa
and
addr16
cdq
iret
adc
(bad)
loopne
dec
and
push
retf
jns
xlat
fidiv
push
inc
mov
push
add
lds
aaa
dec
cmp
xchg
and
adc
pushf
pop
xchg
xor
int3
and
lahf
cmp
push
sahf
cmp
mov
or
push
inc
xor
rol
xor
inc
int3
fistp
in
das
push
rol
push
out
add
dec
dec
dec
mov
loop
jg
jns
mov
xchg
cmp
loope
lahf
xor
pop
adc
and
mov
lds
mul
or
and
push
lods
pop
adc
adc
cld
dec
jno
lahf
mov
ins
pop
sub
or
jmp
icebp
shl
xchg
ret
inc
lea
push
scas
jb
imul
es
int3
cs
call
dec
adc
inc
sub
jne
sub
xor
jne
out
test
jle
inc
pop
repz
cmps
test
ins
fld
(bad)
xchg
mov
fld
and
and
fucomi
xchg
jg
mov
add
(bad)
cwde
ja
repnz
repz
andps
movzx
pusha
fiadd
pop
jecxz
(bad)
push
loop
dec
popa
mov
inc
mov
sub
stos
test
xchg
mov
pop
cwde
xor
sar
mov
cmc
jbe
xchg
cmp
mov
and
push
xchg
(bad)
cmps
xchg
or
ss
inc
shl
aad
jge
sub
cmp
mov
sub
xchg
push
daa
enter
adc
inc
cmp
clc
shld
ja
jp
js
out
cmp
pushf
sub
mov
fmul
dec
imul
push
aad
push
pop
jns
dec
xchg
or
out
mov
ds
scas
out
cs
ins
push
push
add
pop
in
loopne
dec
fwait
loopne
shr
inc
retf
mov
jl
sbb
push
jbe
call
add
adc
inc
test
addr16
xchg
xor
(bad)
fcmovb
hlt
mov
jnp
ins
and
sahf
cmp
or
and
jge
stos
rcr
jmp
shl
rol
cmp
inc
xor
xchg
lods
nop
push
push
push
and
lahf
xor
push
cs
std
ret
mov
pop
mov
xchg
or
push
popf
loope
jecxz
in
or
mov
dec
mov
fisub
lahf
jmp
stos
mov
jmp
(bad)
ret
setl
mov
inc
out
or
addr16
add
inc
mov
ret
adc
pop
add
rcl
push
sbb
ds
adc
jmp
inc
pop
ja
enter
jl
in
or
xchg
sub
and
or
mov
pop
clc
icebp
mov
icebp
push
mov
sbb
loop
xchg
icebp
out
jecxz
sbb
xor
js
(bad)
sbb
mov
and
mov
in
fcomi
aas
hlt
push
or
mov
push
or
scas
adc
sbb
out
add
mov
ror
fs
popf
xor
ss
mov
pop
pop
mov
test
(bad)
retf
xchg
mov
inc
pop
test
mov
xchg
in
stos
ins
es
sub
retf
repz
leave
in
mov
push
and
add
mov
xor
inc
lahf
hlt
push
push
inc
pusha
outs
retf
dec
jecxz
fistp
in
mov
in
cmp
test
(bad)
sbb
push
test
mov
adc
dec
ins
inc
imul
inc
mov
adc
add
(bad)
add
mov
or
push
xchg
cmp
cmp
dec
mov
jns
adc
imul
push
gs
adc
fwait
sahf
dec
cmp
retf
ins
sbb
shl
dec
in
jnp
iret
push
(bad)
jmp
mov
dec
ins
jmp
test
xlat
and
fcomp
ret
xor
and
sub
sbb
lahf
add
clc
mov
lahf
push
push
std
les
outs
push
adc
scas
xor
pop
int3
cmp
fstp
(bad)
mov
adc
ret
fld
mov
clc
in
popa
arpl
mov
mov
mov
ret
imul
sti
fiadd
mov
jns
mov
dec
adc
retf
mov
enter
lods
sub
mov
cmp
pop
push
xchg
lea
aaa
es
call
xchg
xlat
pusha
jno
sub
adc
and
sub
(bad)
cmp
xchg
(bad)
stos
mov
cmp
jmp
fwait
cdq
shl
arpl
pop
xchg
cmp
call
mov
fstp
fisub
retf
or
outs
(bad)
shr
dec
add
pop
ret
aad
cs
inc
or
xchg
(bad)
or
ja
inc
add
imul
lods
inc
in
in
and
ret
mov
das
aam
xchg
iret
jmp
iret
aaa
std
pop
dec
fnstenv
cmc
inc
jecxz
fstp
add
jae
loope
ins
push
inc
adc
pop
push
dec
test
outs
xchg
loopne
scas
cwde
and
add
inc
lahf
xor
add
ins
addr16
dec
jg
xchg
push
push
daa
sbb
push
xor
dec
idiv
mov
sub
loop
dec
cmp
inc
and
call
lahf
cmp
cwde
add
mul
xchg
jno
cmp
mov
inc
fdiv
pop
mul
pop
retf
popf
pop
xchg
push
sub
ja
jmp
test
pop
xchg
xchg
add
ss
lock
xor
push
stos
int
sub
div
call
cmp
adc
mov
pop
pop
psubq
loope
leave
inc
inc
daa
dec
dec
sub
xor
stos
sub
sub
test
into
scas
lods
in
retf
and
ins
xchg
popf
mov
inc
add
pop
adc
outs
ins
add
pusha
mov
xor
xchg
push
out
loopne
fldenv
cmp
ret
aaa
jecxz
push
or
scas
mul
ja
push
stos
xor
fidivr
into
push
fld
in
dec
pushfw
cmp
loop
mov
sbb
lock
shl
lea
ret
add
test
shl
sbb
pop
jl
mov
mov
jg
jmp
sub
hlt
(bad)
movs
inc
jo
ins
rcl
inc
rol
add
vmovntps
retf
cs
add
dec
imul
(bad)
daa
xor
dec
pop
or
and
or
mov
jns
(bad)
lods
dec
sbb
hlt
aaa
call
sbb
loop
retf
data16
fs
data16
fst
push
aad
in
scas
inc
inc
je
daa
jle
pop
arpl
hlt
pop
stc
add
or
inc
pop
pop
dec
enter
(bad)
retf
cmp
out
mov
loop
mov
ins
push
pop
scas
cmp
bound
dec
and
sbb
mov
je
sbb
sbb
adc
stos
dec
ja
cmps
mov
loop
push
ficomp
(bad)
xchg
jmp
test
call
xor
or
push
fisubr
out
and
adc
adc
js
jb
out
xor
push
retf
ss
xlat
lds
gs
mov
(bad)
push
inc
std
dec
popa
nop
jns
or
push
gs
pop
or
push
push
jg
jo
bound
aad
mov
fadd
retf
mov
jae
push
inc
clc
xchg
jl
inc
js
cmp
shr
xchg
stos
mov
and
loope
xchg
add
mov
sti
std
cmp
stos
(bad)
mov
repz
movs
rol
push
jp
mov
popf
sub
test
jmp
adc
subps
dec
movs
popf
dec
sub
cli
dec
(bad)
xchg
ss
out
jo
out
pusha
test
inc
not
das
(bad)
retf
cmp
jp
cmpxchg8b
(bad)
int
arpl
jmp
pusha
xchg
sbb
adc
(bad)
movs
bound
nop
xchg
dec
cld
mov
sbb
cmps
bound
xchg
add
jbe
jb
rcr
push
dec
cmp
inc
push
pop
inc
stos
movs
push
pop
fldenv
sbb
faddp
ja
pusha
popf
xor
bound
sbb
nop
xchg
ja
mov
jne
pop
mov
adc
push
push
loope
fisubr
test
mov
xchg
jae
push
add
or
jbe
call
adc
dec
adc
adc
int
jo
scas
pop
push
fdivr
outs
mov
aas
dec
pop
xchg
mov
inc
clc
add
cmp
ret
pop
out
dec
bound
or
push
mov
jecxz
xor
popf
faddp
retf
jno
imul
addr16
inc
push
call
adc
das
addr16
push
mov
xchg
pmaxsw
gs
ror
imul
mov
inc
mov
or
repz
xor
xor
in
xor
jno
dec
ss
loop
imul
and
lahf
dec
inc
mov
pop
movs
mov
adc
push
pop
mov
fwait
pop
sub
lock
imul
mov
test
ror
das
stos
test
fcmove
popa
inc
mov
adc
cdq
fist
cmp
pop
(bad)
mov
in
(bad)
push
mov
dec
dec
leave
outs
in
xlat
dec
push
out
jge
fild
stos
jae
inc
jmp
les
fdivr
adc
mov
data16
and
push
push
ins
nop
inc
outs
repnz
test
ficomp
(bad)
jecxz
nop
adc
pop
cmp
inc
cmps
arpl
fiadd
mov
retf
bound
repz
out
cs
cmp
call
jmp
jnp
xlat
xchg
nop
jnp
sub
jl
inc
nop
adc
stc
inc
ret
(bad)
adc
fwait
retf
scas
fdiv
or
fwait
mov
ja
in
jae
pop
(bad)
adc
add
sti
jbe
cwde
sub
faddp
leave
pop
scas
sahf
mov
and
repz
pop
call
pushw
dec
ja
mov
jae
(bad)
out
inc
dec
push
and
test
ins
dec
fnstsw
ficom
sub
or
(bad)
dec
js
(bad)
and
add
dec
cmps
add
mov
mov
pop
(bad)
hlt
xchg
in
push
and
stos
add
aad
icebp
dec
dec
jbe
dec
xor
jbe
and
(bad)
bound
sub
rol
(bad)
je
lock
push
inc
iret
inc
push
inc
sbb
pop
push
ja
sbb
pop
xchg
loop
cmp
xchg
mov
sbb
xor
jno
out
or
adc
push
sbb
adc
je
mov
mov
hlt
scas
loope
dec
lods
dec
pop
jnp
mov
pop
idiv
jmp
adc
int
dec
jg
sub
in
mul
add
push
mov
jmp
(bad)
ins
jnp
or
ret
test
iret
mov
(bad)
aam
jmp
es
adc
sbb
dec
mov
mov
nop
int3
mov
mov
jbe
mov
dec
test
mov
or
test
mov
(bad)
leave
aas
pop
dec
rol
lahf
imul
ret
ds
jg
inc
arpl
idiv
pop
xchg
mov
xchg
stos
(bad)
mov
retf
movs
jne
dec
jmp
in
inc
imul
ds
mov
fstp
into
or
push
shl
xor
push
retf
mov
or
bound
scas
add
or
dec
or
mov
imul
adc
loope
adc
stos
adc
je
xchg
xor
gs
jmp
sub
popf
sub
into
dec
cmp
xor
ficomp
cmp
push
push
lods
shr
jmp
call
pop
mov
std
inc
xchg
adc
(bad)
push
jge
push
cmps
add
popa
cmp
mov
mov
out
sbb
mov
sbb
imul
loop
out
push
mov
fisub
lea
idiv
fistp
push
imul
push
mov
push
push
push
mov
test
popf
push
mov
push
sahf
cdq
movs
jecxz
cmp
add
add
cld
push
adc
dec
cmc
call
aad
cmp
popf
rcr
add
lahf
jp
or
push
(bad)
fild
pop
aam
cld
shr
mov
push
add
xor
aam
outs
jne
fcom
and
inc
enter
ins
mov
fbstp
cmps
sar
mov
pusha
js
shl
imul
imul
aas
mov
push
jbe
aaa
sub
adc
xor
adc
push
mov
cmp
mov
jl
jo
cmps
jle
cmp
pop
push
bound
test
jb
enter
inc
jmp
mov
in
cmp
mov
rcr
add
xor
jl
pop
adc
outs
cld
rcr
mov
sub
stos
cmp
push
cld
xchg
lods
cmc
pop
add
push
dec
into
inc
stos
xchg
mov
mov
dec
lahf
sub
lods
movs
jp
sbb
lods
addr16
aam
cmps
sub
jno
adc
mov
cmp
sub
dec
jecxz
and
(bad)
pop
out
jb
je
fadd
adc
inc
sbb
add
lea
push
push
pop
fstp
in
or
in
stos
aas
ins
push
repnz
pop
ins
sbb
push
lods
pop
dec
pop
loope
jg
dec
arpl
push
xor
adc
mov
inc
or
push
sub
xchg
inc
es
cld
mov
adc
xchg
mov
fistp
xchg
mov
jle
sub
(bad)
and
lea
pop
pop
pop
repnz
clc
in
icebp
pop
adc
int3
mov
and
sti
mov
cmp
out
out
mov
fs
mov
xchg
movs
je
(bad)
frstor
das
sbb
mov
imul
inc
jnp
and
mov
out
mov
and
and
pop
clc
mov
inc
ja
sub
mov
fdiv
popf
stos
or
shl
bound
mov
retf
sub
pushf
jmp
cmp
mov
mov
pop
cs
cmp
ret
and
jb
out
mov
pop
das
dec
push
je
inc
mul
cmp
clc
inc
out
lahf
(bad)
mov
test
rcl
xchg
adc
mov
test
pop
dec
das
pop
fcmovnu
mov
xor
fstp
xchg
mov
je
sar
(bad)
in
daa
sub
aad
xor
adc
jae
test
jae
xchg
adc
jmp
jge
(bad)
xchg
mov
mov
fs
xchg
mov
imul
adc
scas
ret
cmp
jno
cwde
xchg
jb
xor
popf
jle
pop
jo
add
jmp
ss
or
es
push
and
mov
ret
addr16
sub
out
push
mov
pop
xor
cs
push
arpl
dec
pop
(bad)
and
jl
pop
push
mov
jnp
xchg
int
fdiv
sub
adc
mov
imul
enter
ja
dec
fnsave
(bad)
enter
push
test
repnz
and
cmp
in
inc
mov
pop
adc
xchg
bound
sbb
gs
enter
add
loope
mov
aaa
mov
inc
xchg
fs
addr16
cmp
mov
aam
jb
xchg
jb
int3
imul
int
test
icebp
pop
test
dec
push
and
xor
out
loope
call
ds
mov
(bad)
loopne
mov
adc
lea
je
fisttp
mov
push
xchg
shr
movs
ins
leave
data16
clc
jg
outs
nop
push
es
and
dec
dec
push
adc
test
aam
jl
neg
popf
in
push
pushf
sbb
scas
rcl
mov
mov
inc
sbb
lds
xchg
push
pop
inc
push
dec
out
xchg
fisubr
cmps
fnsave
dec
lock
adc
bt
mov
sub
push
jno
adc
push
cmp
sti
add
sbb
outs
repz
dec
inc
pop
push
aam
sti
fnstenv
jo
out
dec
add
daa
jle
cmp
test
mov
leave
jnp
clc
stc
pop
xor
int
das
sub
mov
ret
lds
popf
pop
(bad)
jmp
or
sub
pop
mov
cmp
cmp
cmps
jge
mov
push
dec
push
test
mov
pushf
(bad)
cmp
daa
fwait
lahf
mov
fwait
in
and
fwait
jmp
in
xor
cmp
aad
lods
and
lods
pop
jmp
dec
mov
in
out
xchg
ja
and
loop
mov
test
(bad)
mov
add
ins
mov
mov
test
jmp
jb
push
dec
in
mov
xchg
sub
les
test
mov
lahf
cmp
mov
ret
sub
jnp
les
hlt
cmp
pushf
cli
push
jne
push
call
inc
pop
mov
jecxz
test
sub
jno
push
sub
(bad)
retf
mov
mov
dec
fstp
dec
push
into
push
xchg
xor
lahf
push
sbb
mov
test
jae
and
or
out
cli
shl
jbe
aad
jmp
inc
add
test
or
in
xor
cmc
dec
push
xchg
cdq
out
push
std
sub
adc
inc
push
fnsave
js
sub
call
inc
inc
ror
addr16
xchg
(bad)
push
add
or
mov
lock
sar
icebp
jg
ds
mov
cmp
fist
clc
repz
repz
xor
inc
jl
jo
jne
sub
pop
push
mov
mov
into
xor
aam
dec
aas
jge
mov
adc
(bad)
mov
stos
loopne
pop
popw
popf
sub
or
mov
ret
mov
or
dec
(bad)
or
iret
fmul
dec
add
lods
cmp
int
jmp
sbb
inc
fiadd
inc
mov
adc
mov
cdq
dec
out
adc
xchg
test
xor
xchg
cld
adc
mov
sub
leave
in
jle
pop
cs
in
std
or
xchg
push
int3
push
addr16
fld
cmp
pop
in
movd
inc
and
fs
inc
mov
retf
sub
mov
xchg
hlt
pop
in
dec
mov
ret
std
cli
int
inc
push
enter
jne
pop
jg
jmp
push
mov
stc
dec
cmp
(bad)
call
dec
inc
mov
test
mov
inc
ja
stc
fiadd
repnz
cmp
ret
sub
dec
jmp
cmp
jnp
fwait
out
mov
mov
cmc
test
retf
mov
mov
or
cli
popf
inc
push
jge
jb
pop
pop
xchg
stos
out
retf
sub
es
lea
push
stos
mov
mov
fwait
mov
xchg
cs
mov
push
inc
xlat
dec
cmc
int
push
daa
addr16
retf
sbb
adc
dec
xchg
pop
ror
and
call
and
xchg
(bad)
pushf
iret
jp
dec
add
sub
xor
inc
popf
dec
jbe
pop
std
cmp
mov
xor
adc
dec
in
xor
jns
sbb
fcomp
sbb
je
mov
add
sahf
cmp
inc
inc
and
add
dec
add
(bad)
and
ss
clc
xor
jbe
popa
push
jl
ror
(bad)
jnp
mov
dec
pop
mov
jle
fucomi
xchg
push
adc
fild
mov
sbb
mov
faddp
add
push
popa
dec
pop
dec
in
mov
adc
fild
xchg
mov
(bad)
fucomp
pop
mov
inc
stos
mov
in
xchg
sti
jle
push
xchg
push
push
popf
inc
push
xor
fcmovbe
jmp
movs
mov
pop
dec
push
jl
adc
popa
fld
jmp
imul
mov
and
inc
cmp
pop
lahf
cmp
lea
cs
imul
mov
bound
out
lods
sti
xchg
sbb
mov
and
enter
(bad)
out
lods
rcl
jns
je
push
xor
jbe
fdiv
in
push
hlt
jno
test
das
push
jo
sbb
lea
shl
cmps
scas
add
sub
adc
inc
shl
fyl2xp1
jge
and
adc
das
jmp
ror
mov
adc
sbb
inc
mov
jo
imul
into
repz
imul
in
sbb
sub
dec
scas
pop
es
push
cld
loop
mov
sahf
sbb
adc
mov
push
into
add
jmp
not
lea
jmp
cmp
mov
jl
mov
cmp
outs
scas
cwde
(bad)
loope
and
in
out
push
test
xor
cmp
les
mov
shr
das
mov
(bad)
popa
mov
(bad)
pop
dec
ss
sbb
in
push
pop
(bad)
fsub
sub
shl
int
dec
popa
adc
fdivr
or
adc
call
outs
ficom
pop
je
sub
neg
dec
xchg
paddd
ret
inc
mov
jmp
arpl
fwait
xor
sahf
sub
outs
and
pushf
mov
inc
push
jle
sbb
dec
mov
or
scas
int3
aaa
add
mov
sbb
lock
add
les
xor
sbb
xor
adc
push
mov
jle
inc
neg
mov
ret
fucomip
mov
cmps
xchg
inc
adc
nop
or
fsubp
inc
mov
mov
cmc
adc
pop
mov
push
sub
test
fwait
comiss
pop
shl
shl
sbb
add
jp
popf
mov
pop
jp
mov
retf
xor
jecxz
adc
out
mov
dec
mov
xor
test
sbb
inc
fnstsw
(bad)
retf
movs
dec
xor
or
test
push
push
into
ins
stc
inc
xor
retf
pop
adc
(bad)
or
aas
mov
outs
cmp
inc
icebp
mov
and
out
mov
loope
ins
(bad)
pushf
fsubrp
loope
pop
dec
int
lds
xchg
sti
repnz
dec
push
mov
xchg
mov
fs
adc
push
dec
push
adc
mov
ins
sbb
aam
pop
test
in
inc
mov
push
or
xchg
loope
push
fcmovnu
xchg
xchg
dec
dec
xor
pushf
jno
jp
outs
push
pop
das
or
push
xchg
mov
mov
rcl
push
(bad)
cmp
xor
cli
pop
rol
das
push
adc
rol
xor
(bad)
in
push
into
add
jo
out
inc
cmps
sbb
(bad)
bound
ins
sbb
stos
or
inc
inc
mov
inc
lods
imul
jmp
and
dec
repz
push
sbb
add
pop
xchg
mov
cmps
loopne
sti
or
cs
xchg
nop
jmp
clc
cmp
inc
xchg
cwde
cmp
(bad)
push
jecxz
sub
and
mov
sbb
mov
bound
push
(bad)
sbb
sub
sbb
fild
out
das
and
and
test
dec
ja
push
into
cmps
(bad)
loope
ret
adc
jb
mov
mov
fwait
cdq
mov
add
repnz
dec
outs
in
or
and
scas
pop
mov
xchg
scas
sbb
pop
stc
jmp
mov
mov
ss
mov
pusha
cmc
add
push
cwde
pop
cmp
movs
jnp
jbe
or
push
xor
ja
fadd
pop
dec
sbb
std
pop
aam
sub
and
inc
adc
sub
ja
mov
enter
push
ror
pop
ja
je
and
sti
mov
inc
mov
push
retf
test
dec
sub
cmp
int
bound
inc
mov
jns
pusha
pop
sub
repnz
mov
fucomp
cmp
push
inc
stos
imul
jo
fwait
ins
clc
lods
retf
xor
sbb
cmps
enter
data16
jecxz
test
mov
inc
(bad)
dec
fbld
call
in
fistp
das
in
out
push
in
fnstenvw
xor
bound
imul
into
inc
pop
scas
cmp
pop
push
pop
mov
dec
(bad)
fist
pop
push
pushw
sub
idiv
fstp
jp
push
adc
add
call
add
or
imul
cmp
xlat
ror
sub
repz
or
retf
xor
sti
push
stc
stos
and
mov
sbb
cli
push
je
mov
jge
stc
nop
cli
dec
test
cmps
out
sub
xor
cmps
inc
push
nop
jecxz
jo
cs
dec
pushf
retf
inc
xor
push
jl
xchg
pop
hlt
mov
sub
push
jp
sub
sub
xor
(bad)
dec
iret
inc
push
push
mov
sar
fstp
imul
mov
add
xchg
ins
mov
mov
and
cmp
lock
push
daa
call
jns
not
leave
mov
sahf
inc
movs
rcl
or
add
imul
cmp
cmp
push
cs
jae
(bad)
dec
mov
rcr
jg
jl
ret
pop
dec
arpl
int
mov
dec
add
inc
fst
vpmadcswd
xor
fcom
mov
and
lods
sub
xor
sub
cld
out
mov
cs
fistp
scas
imul
gs
xchg
test
pop
pop
mov
jg
mov
and
ins
pop
xchg
loope
ins
push
ror
in
cmps
mov
xchg
jmp
mov
ins
iret
pushf
adc
retf
xchg
pop
mov
jbe
mov
ficom
adc
xor
mov
or
xor
sbb
inc
popa
adc
aad
in
push
sbb
xor
(bad)
and
cld
mov
daa
ret
mov
cmp
ja
jp
inc
and
ja
cmp
call
imul
sub
dec
adc
(bad)
mov
jbe
neg
mov
mov
cmp
xchg
xor
xor
btr
mov
dec
cmps
hlt
xlat
(bad)
(bad)
stos
test
mov
addr16
daa
mov
mul
mov
mov
mov
inc
stos
ja
cmp
lds
call
jo
hlt
xchg
lea
xor
ret
ror
lds
inc
nop
in
loop
fisttp
jbe
lods
mov
mov
push
xor
cmp
out
mov
gs
fwait
adc
mov
lds
outs
lock
jbe
sub
jle
retf
jp
xchg
imul
mov
sub
sbb
dec
xchg
push
xchg
rol
cdq
hlt
or
ja
and
in
rep
xor
cmps
pop
loopne
push
cs
(bad)
lods
outs
jg
inc
cmps
dec
xchg
push
retf
dec
(bad)
sahf
sti
inc
in
mov
cmp
jb
les
and
push
ds
dec
adc
push
push
or
mov
pop
wbinvd
inc
daa
cmp
adc
xchg
dec
inc
mov
pushf
out
nop
mov
pushf
sub
mov
repz
repnz
xor
daa
adc
seto
jle
push
adc
pop
xchg
jl
pop
icebp
mov
outs
cs
stc
dec
je
xchg
int
ins
push
push
aam
ss
dec
das
mov
(bad)
loopne
aaa
push
fwait
push
push
xor
push
stos
cdq
(bad)
push
push
(bad)
xor
pop
inc
and
mov
cmp
clc
mov
xor
les
or
mov
ret
xchg
iret
ss
(bad)
(bad)
dec
ret
or
pusha
leave
adc
(bad)
repz
adc
xor
xor
mov
aas
add
ins
or
and
mov
rcl
push
mov
push
out
xor
add
aaa
push
call
shl
mov
cwde
or
mov
mov
outs
add
push
out
enter
xlat
cmp
inc
xchg
cmp
jmp
int
dec
xchg
gs
stos
mov
sbb
jne
ror
ja
push
push
in
inc
nop/reserved
sbb
mov
lods
lods
es
cmps
arpl
int3
(bad)
jg
and
daa
mov
pop
movs
jo
jp
push
ins
dec
stos
inc
mov
test
ins
inc
mov
stos
inc
movs
mov
adc
retf
iret
pop
(bad)
ret
in
js
add
in
mov
sub
movs
add
ret
inc
adc
inc
aaa
ins
adc
sbb
test
or
aaa
sbb
aaa
pop
pop
imul
cmp
lods
ds
pop
jno
dec
adc
xor
inc
dec
or
xor
xor
(bad)
movs
jbe
inc
mov
cmp
mov
mov
outs
push
sbb
cmp
and
adc
mov
loop
mov
jbe
ja
add
imul
clc
inc
pop
loope
pop
ja
gs
ins
xchg
dec
push
and
pushf
add
inc
dec
imul
retf
xor
and
jb
jo
xchg
cmp
sub
outs
mov
les
xchg
jmp
add
jecxz
in
cli
push
call
jmp
cmps
scas
inc
pop
outs
sbb
xor
(bad)
push
adc
lods
icebp
test
push
and
cmp
pop
cmc
scas
xchg
int
mov
cmps
add
div
in
retf
xchg
pop
cmp
pop
and
push
mov
jg
mov
add
sti
jecxz
mov
arpl
jp
(bad)
hlt
leave
sbb
jmp
test
pop
inc
scas
fs
pop
in
sub
mov
and
push
std
lods
test
adc
sub
iret
jecxz
push
mov
out
daa
call
ret
(bad)
fnstcw
aas
movs
les
je
lods
test
lods
xchg
sub
das
or
fstp
pop
enter
(bad)
cmp
(bad)
ret
xor
push
mov
push
retf
cmp
jl
es
push
fidivr
stos
and
test
push
cli
inc
or
or
push
mov
test
div
out
pop
sub
mov
lock
cmp
add
jb
mov
xor
or
int3
push
popf
mov
mov
lds
mov
arpl
cmp
adc
mov
out
pop
arpl
fdivr
fdivr
mov
sub
pop
cwde
inc
in
cmp
imul
xor
(bad)
pushf
add
bound
inc
std
imul
les
cmp
ja
mov
loopne
push
or
cwde
adc
inc
xchg
cmp
or
fld
add
scas
rcl
popf
pop
imul
fld
cli
and
jle
iret
push
(bad)
and
aad
adc
in
sar
in
and
cmp
pop
mov
clc
push
movs
pop
sti
xchg
gs
sti
inc
push
cmp
pop
inc
dec
shl
daa
es
cmp
and
push
sti
xchg
sahf
out
or
pushf
adc
inc
adc
mov
jb
fwait
inc
movs
jmp
mov
and
stos
mov
add
not
out
adc
or
adc
sbb
sub
cmp
jmp
jnp
(bad)
pop
retf
xor
xchg
lea
jecxz
in
and
fs
ror
adc
aad
cli
fist
aam
outs
inc
sar
jmp
push
sub
sti
add
xor
ror
push
mov
xor
xchg
add
xchg
cwde
mov
mov
add
inc
cmp
rcr
or
or
and
jp
clc
xor
jae
out
je
dec
shl
(bad)
sbb
int3
fdiv
add
push
xchg
mov
jnp
and
push
ja
ds
(bad)
fndisi(8087
cdq
repz
or
lods
dec
mov
sbb
pop
cmp
loop
jmp
mov
(bad)
sbb
jg
(bad)
jle
or
push
repnz
mov
ds
iret
aaa
adc
jmp
cmp
iret
sub
(bad)
imul
dec
mov
push
inc
cli
in
fistp
test
test
push
out
inc
pop
cmp
and
pop
adc
aaa
popf
xor
sti
mov
and
cmp
test
mov
cld
repnz
cmp
ret
jg
call
scas
cmp
(bad)
test
movs
mov
(bad)
outs
popf
mov
pop
mov
xor
les
mov
mov
les
xor
ja
xchg
test
pop
popf
jg
xchg
fmul
xlat
aas
jae
xchg
mov
int
pop
dec
cmp
mov
out
sti
pop
add
ror
dec
mov
hlt
push
lods
fdiv
mov
adc
jmp
or
dec
add
out
fisub
push
scas
cmp
mov
pop
or
pop
dec
popa
xor
(bad)
dec
es
or
push
or
(bad)
jmp
jecxz
adc
pop
sti
(bad)
jecxz
in
and
mov
loope
aas
cmps
sti
jmp
aam
inc
or
stos
inc
pop
retf
clc
mov
add
fwait
(bad)
adc
xchg
jbe
enter
std
stc
mov
push
repnz
out
jecxz
repnz
ss
jbe
cmp
out
repnz
in
add
iret
jo
cmp
adc
aad
outs
or
push
pop
cmp
jnp
das
dec
pop
pop
ret
pop
dec
xchg
(bad)
in
loop
jns
sub
adc
adc
leave
imul
movs
mov
xor
outs
fst
jge
push
es
push
lea
mov
jmp
push
(bad)
int
sti
sahf
out
ds
jo
addr16
and
inc
xchg
ror
ror
rcr
xor
test
addr16
daa
inc
sahf
push
fnstsw
loope
inc
ins
jns
sbb
xchg
in
les
cmp
sbb
push
int
pop
scas
cmp
jns
ins
lods
sti
cmp
je
dec
fs
cli
ret
repnz
(bad)
scas
push
jle
push
lock
mov
fs
xchg
and
call
ja
cmp
les
push
push
mov
lea
stos
mov
sar
inc
int
iret
mov
scas
cmp
fistp
scas
enter
test
std
in
aaa
adc
xchg
mov
(bad)
aam
pop
mov
adc
inc
out
gs
iret
mov
push
fst
or
push
aaa
push
mov
(bad)
dec
and
pop
xchg
cmp
test
adc
pop
push
mov
xchg
jb
xor
cmp
sub
dec
retf
push
out
int
sub
inc
mov
push
or
sbb
retf
or
adc
xlat
(bad)
cmps
aaa
push
dec
setb
inc
inc
sti
in
int3
das
push
movs
nop
xchg
push
pop
repz
add
dec
xchg
cmp
dec
push
adc
retf
pop
mov
fnstcw
xchg
mov
cmps
fnstsw
call
aas
jmp
je
idiv
dec
loope
test
lods
inc
loop
jle
pusha
mov
inc
sti
add
dec
aas
jno
xchg
shl
or
mov
xor
or
mov
test
cmp
xor
mov
lods
add
jnp
nop
stc
loope
jl
fxch
lahf
lea
mov
mov
mov
js
jne
push
sub
fst
cmc
movs
mov
out
mov
scas
mov
jne
sub
cwde
adc
dec
cmc
dec
dec
push
push
outs
mov
out
inc
ret
jbe
push
aaa
stos
mov
mov
push
test
lea
mov
dec
and
(bad)
sti
adc
push
ret
xor
into
mov
pushf
inc
xrelease
out
pop
adc
xchg
imul
jo
fsubr
jp
jp
xchg
mov
cld
jmp
mov
(bad)
mul
pop
call
fwait
mov
arpl
(bad)
and
dec
sub
cmc
sti
jecxz
jo
mov
inc
xchg
jnp
add
(bad)
fwait
daa
xor
leave
mov
ss
fcmovu
cmp
and
ja
dec
aas
lock
nop
inc
adc
popf
ror
push
loop
jg
ret
or
imul
ficom
sar
sbb
jns
and
cld
fild
mov
jnp
out
fbstp
cmp
int
arpl
retf
popf
lahf
out
adc
adc
lahf
(bad)
pop
xchg
cmc
rcr
pop
iret
out
rcl
(bad)
lods
pop
lds
cmp
popf
jg
push
stos
fwait
(bad)
jle
or
in
lock
popa
int3
jmp
rcr
or
test
inc
inc
int
xor
mov
push
in
inc
int
lds
popf
ret
cwde
ja
jnp
enter
test
setnp
arpl
push
sbb
rol
push
pop
jmp
(bad)
pop
fnsave
adc
cmp
mov
aam
cld
add
inc
push
sti
xor
fisttp
movs
call
cmp
aas
lods
int
xor
movs
addr16
cmp
adc
es
xor
into
mov
pusha
je
inc
inc
mov
sub
cmp
cmp
jmp
sub
mov
fdivrp
mov
lods
cmp
mov
test
xchg
rol
js
scas
cmp
add
cmp
inc
sbb
pusha
popf
mov
fnstsw
rol
enter
sahf
jae
daa
cwde
add
xor
inc
nop
xchg
sub
jo
int3
or
out
xor
es
inc
stc
add
cmp
pusha
fwait
enter
leave
add
aam
loope
inc
fsubr
jbe
gs
fimul
in
cmps
jp
(bad)
fstp
push
aad
lock
jmp
arpl
das
push
into
dec
cmp
dec
xchg
call
jle
or
jb
inc
dec
cs
popf
mov
imul
adc
icebp
aaa
mov
jecxz
pop
inc
dec
push
cld
and
rcl
push
push
add
js
mov
xchg
pushf
jne
add
inc
xchg
fcomp
dec
dec
add
inc
sbb
aam
mov
mov
popa
dec
pop
sti
mov
mov
cli
into
sti
fwait
inc
dec
cmps
inc
das
int3
int
jbe
add
cmp
dec
sub
mov
xor
shrd
adc
int3
fidivr
jns
scas
dec
jns
pushf
dec
ret
arpl
jae
jg
int3
out
dec
pusha
mov
mov
sti
aam
lahf
movs
pusha
jle
mov
sbb
aad
jo
lds
icebp
mov
cld
or
push
fsubp
push
les
xchg
out
or
adc
sbb
dec
xchg
mov
or
mov
ror
inc
call
fs
movs
sub
test
scas
or
aas
iret
arpl
int3
push
scas
cmp
fst
add
ror
sub
ins
inc
adc
(bad)
mov
ins
push
enter
movs
ss
retf
jg
or
jge
xchg
dec
shl
aas
mov
xchg
adc
ret
and
pop
push
test
mov
(bad)
loope
mov
dec
call
jb
retf
lods
or
sbb
rol
push
rcl
sub
dec
mov
das
loopne
cmps
jp
test
xor
cmc
inc
sub
pop
add
cdq
mov
jecxz
imul
or
push
ror
jno
lods
out
push
popf
jle
sbb
xor
xor
jo
mov
jne
mov
adc
push
icebp
out
loopne
lock
sub
xchg
xchg
sbb
clc
(bad)
dec
pop
popf
xor
loope
sub
out
push
jle
hlt
mov
jecxz
movs
inc
xchg
shl
jnp
cmp
test
jmp
xchg
aam
push
push
jl
mov
ja
and
leave
or
repz
js
aad
add
or
pusha
or
in
gs
xchg
pop
fs
out
mov
push
or
fist
adc
sbb
pop
lahf
les
mov
(bad)
mov
js
or
ficom
jne
or
dec
int3
and
xchg
sti
jmp
into
xor
fucomi
add
cmp
scas
jae
aaa
bound
push
mov
adc
sbb
ja
ins
or
mov
out
jo
cmps
mul
jns
test
aaa
mov
aaa
loopne
fnstenv
aam
inc
retf
ins
mov
add
push
fstp
call
movs
std
xor
dec
and
(bad)
dec
inc
mov
pop
cs
or
pop
adc
fidivr
pop
xchg
outs
jmp
and
movs
cmp
jne
add
push
retf
sub
sub
jb
sar
mov
test
mov
(bad)
imul
fwait
xchg
cmp
fisttp
mov
pop
sar
jmp
inc
int3
ja
fnsave
and
pushf
jb
mov
dec
pop
fnstsw
bound
mov
add
xor
mov
test
int
inc
dec
jp
hlt
sti
sub
loope
push
call
retf
aam
xchg
add
in
mov
jns
mov
jmp
loop
imul
push
xchg
mov
xchg
xor
sbb
mov
pop
cmp
lock
daa
shl
push
mov
cmp
aaa
cmp
pushf
aaa
pop
push
aam
ins
pop
ss
adc
or
stos
or
add
pop
mov
sub
lea
or
push
aad
out
sbb
mov
push
cwde
popa
call
xchg
(bad)
outs
cmp
sub
mov
lods
and
out
ret
push
xchg
and
cwde
sub
mov
iret
and
sbb
test
xor
(bad)
loopne
add
push
(bad)
cmp
xor
lea
push
clc
jmp
mov
nop
pop
fisubr
stos
mov
int
stos
cli
sar
movs
sub
sub
popf
xchg
and
xchg
sahf
inc
and
scas
xor
jmp
bound
lods
les
pushf
inc
mov
cli
jmp
mov
lea
out
clc
or
(bad)
or
jecxz
in
daa
bound
mov
add
cs
push
aaa
mov
sar
mov
cmp
ffree
jmp
or
fwait
xor
les
imul
in
popf
nop
movs
jno
jae
dec
add
int3
mov
loopne
test
mov
cld
sbb
rol
xor
and
push
jnp
sbb
cli
dec
gs
sbb
sub
add
lahf
or
and
mov
mov
pop
dec
xchg
inc
jge
sub
cmc
out
std
hlt
mov
jmp
adc
push
ja
movs
inc
test
lock
in
repnz
jmp
jno
mov
cmp
pushf
push
iret
pop
shr
aaa
dec
ds
test
sbb
outs
fidivr
mov
xchg
mov
js
out
stc
js
adc
xchg
js
jge
(bad)
pop
in
call
stos
push
je
inc
mov
imul
fisubr
adc
popf
mov
hlt
fnstcw
add
out
dec
mov
push
mov
ror
leave
ins
jne
jnp
loop
and
dec
(bad)
ins
add
push
xchg
xor
pop
pop
shr
mov
push
aaa
xor
out
fst
pop
mov
icebp
xlat
lea
sub
jmp
mov
loope
push
and
ret
retf
mov
retf
mov
jge
lock
or
mov
jnp
xor
push
and
mov
dec
pop
lods
mov
pop
pop
sub
jp
out
fs
add
pop
fwait
ins
lods
sahf
sbb
jns
inc
test
xchg
(bad)
sbb
test
and
adc
addr16
lea
and
pop
xchg
je
dec
inc
sub
and
adc
and
pop
or
sbb
ins
xlat
daa
or
sahf
mov
xor
mov
(bad)
in
adc
into
scas
ja
xchg
xchg
mov
loopne
xchg
xchg
inc
lods
mov
fcomp
and
retf
xor
sahf
sbb
aaa
dec
icebp
mul
out
mov
xchg
test
idiv
fst
mov
xor
leave
dec
pusha
sub
mov
jge
in
(bad)
in
aaa
in
mov
cmp
aas
mov
mov
shl
jne
xor
not
pop
pop
add
inc
sar
mov
mov
mov
push
cmc
cmp
cld
enter
mov
imul
push
push
rcr
(bad)
push
sbb
aas
leave
in
mov
add
das
(bad)
loope
imul
or
mov
aaa
pop
dec
sub
outs
sbb
imul
pusha
test
gs
jb
cmps
popf
pop
push
push
loope
xchg
add
mov
mov
fmulp
ja
pop
mov
mov
dec
lea
push
xor
xor
les
icebp
push
pop
inc
jb
and
cmp
mov
sahf
push
arpl
adc
cmps
jmp
and
sub
enter
bound
dec
aas
shl
bnd
jle
pop
cmps
mov
mov
and
imul
sub
jno
in
je
dec
add
popf
pextrw
inc
and
js
mov
mov
aad
xor
lock
xor
repz
mov
das
jb
shl
or
adc
stc
sub
jnp
sbb
cmp
sub
(bad)
fbld
std
adc
xchg
out
push
retf
and
call
cmp
sbb
test
imul
sbb
sahf
sbb
xchg
inc
push
iret
repnz
movs
push
pushf
or
test
and
jle
adc
lahf
push
and
pushf
(bad)
aad
imul
mov
(bad)
iret
int
push
sbb
xchg
fist
out
jp
mov
lea
cmp
mov
hlt
stc
sbb
ror
inc
cs
retf
outs
jo
outs
sub
adc
adc
mov
mov
jge
pusha
add
rcl
and
(bad)
xor
mov
add
fld
jae
inc
jbe
pushf
sti
and
xor
inc
data16
dec
mov
in
out
popf
js
jmp
lahf
dec
adc
shl
add
in
jo
(bad)
addr16
in
adc
lea
dec
cmp
cmc
test
inc
stc
xor
les
inc
pop
mov
sbb
in
adc
sub
lahf
pop
aad
add
pop
sub
call
cmps
paddusw
cmp
push
data16
cmp
mov
cmps
cmp
cmp
cmc
call
xor
dec
xchg
or
ror
mov
or
mov
sbb
out
push
out
fwait
jg
xor
out
mov
mov
rol
inc
call
inc
nop
or
mov
lock
(bad)
mov
dec
fcomp
jb
inc
ret
(bad)
leave
mov
jns
jmp
jecxz
sbb
bnd
sub
dec
stc
addr16
and
clc
xchg
adc
inc
in
dec
mov
jle
dec
push
ffree
sub
jmp
mov
in
(bad)
mov
test
fldenv
rol
(bad)
(bad)
xor
(bad)
out
mov
pop
cmp
push
jg
pop
repnz
jae
cmp
retf
retf
outs
fs
scas
or
divps
inc
jb
retf
inc
test
mov
pop
mov
(bad)
adc
iret
add
jle
push
ret
cmp
push
push
addr16
add
(bad)
push
sbb
mov
repnz
dec
out
push
inc
cli
jge
jp
cmps
stc
pinsrw
pop
call
push
mov
mov
jmp
aas
sub
dec
ss
dec
leave
mov
jno
mov
or
rol
pop
mov
fsubr
fld
xchg
and
(bad)
sub
add
mov
leave
push
jg
xchg
push
dec
sahf
(bad)
and
pop
pop
xchg
mov
hlt
xor
jp
inc
gs
imul
in
(bad)
aad
jmp
lock
int
pop
mov
enter
sub
dec
aam
cmps
shl
mov
daa
inc
cmp
cmc
inc
add
mov
sub
mov
add
pop
iret
adc
imul
arpl
pop
stos
stos
fidiv
cwde
ss
cmp
rcl
pop
push
pop
mov
std
adc
xor
fild
jle
dec
mov
adc
and
dec
test
lods
div
mov
sbb
xchg
enter
mov
dec
inc
mov
fild
push
aam
repz
pop
cmp
sub
cld
pop
cmp
sub
push
cld
call
cmps
sub
rcr
pop
and
pop
lods
cld
xchg
mov
sbb
xchg
stos
dec
push
xor
or
xor
jo
push
mov
mov
scas
dec
mov
es
inc
div
cmp
leave
popa
test
cmc
mov
enter
mov
out
mov
rcr
xor
xlat
push
fwait
hlt
test
lock
and
out
add
fcmovne
rcl
pop
adc
scas
mov
push
dec
lsl
retf
and
test
or
div
push
xor
repz
push
cmp
ss
aad
push
cmps
and
test
mov
jg
out
pop
loope
mov
jp
jge
mov
mov
add
adc
fcomp
cmps
and
and
fistp
daa
sbb
inc
arpl
aam
outs
mov
call
add
or
xchg
pushf
jmp
lods
push
pop
into
and
enter
xor
ja
and
sbb
popf
pop
sub
sbb
enter
jmp
stc
xor
repz
scas
pop
in
mov
out
push
dec
mov
xor
mov
mov
in
or
dec
sub
shr
in
xchg
mov
(bad)
cli
pusha
dec
xchg
jnp
push
dec
dec
clc
(bad)
jmp
jle
adc
push
jecxz
enter
inc
sbb
mov
ss
push
leave
scas
sub
scas
and
shr
and
push
sahf
sbb
enter
xor
dec
xchg
jbe
mov
or
adc
(bad)
add
test
sub
or
pop
xor
outs
outs
gs
add
xor
cmp
cmp
dec
dec
data16
and
movs
lods
test
ja
loope
mov
sub
test
sub
inc
push
bt
jp
lea
and
dec
hlt
mov
mov
movs
fdivr
jle
sahf
nop
mov
mov
cmp
xor
dec
xchg
xor
xor
sub
lods
and
rol
scas
mov
ss
aad
mov
cli
test
sahf
push
out
push
ds
adc
lock
std
lahf
aad
aas
mov
aad
cmp
cmp
(bad)
ja
inc
out
inc
lahf
mov
scas
sub
rcr
(bad)
into
inc
ins
idiv
xchg
jmp
sub
xor
dec
scas
sub
cdq
out
idiv
sub
adc
out
(bad)
cmp
jp
cli
inc
mov
and
das
add
adc
inc
aas
inc
pop
in
mov
sub
repnz
sbb
out
sbb
out
add
push
out
enter
inc
push
or
adc
stos
adc
cmps
pop
pop
out
shr
xor
jl
not
inc
jbe
loopne
movs
ret
es
call
std
fs
leave
xor
inc
test
pop
inc
dec
sub
push
call
not
(bad)
adc
sub
lahf
pop
call
mov
mov
jg
pop
bound
dec
add
enter
add
imul
or
cmp
pop
fwait
adc
pop
retf
adc
jbe
pop
push
imul
adc
cdq
aam
inc
add
mov
inc
or
cmp
sub
mov
pop
test
gs
pop
xchg
adc
shl
mov
sbb
push
mov
in
imul
retf
nop
(bad)
jnp
rol
daa
ret
xchg
or
jge
push
out
div
shr
ror
dec
add
inc
xchg
js
fstp
out
hlt
sbb
(bad)
xor
loope
push
cmc
lea
fstp
and
mov
cld
sbb
sub
add
je
iret
adc
or
mov
mov
adc
cmp
mov
aad
pop
mov
pop
dec
nop
shl
mov
mov
or
icebp
and
inc
out
sub
pop
imul
jnp
mov
nop
retf
jge
push
call
loopne
pop
ss
cs
mov
inc
stos
mov
inc
ss
pop
cmp
dec
enter
mov
scas
mov
pop
mov
or
test
mov
push
fstp
xchg
jnp
push
mov
push
jmp
pop
adc
dec
into
jge
xor
aam
cmps
push
dec
fucom
stc
out
sub
in
xor
xchg
pop
scas
sbb
jmp
xor
lock
jge
pop
bound
lea
dec
lahf
cmp
popf
rol
dec
stos
data16
(bad)
ror
mov
jo
adc
mov
sub
fnsave
push
mov
movs
outs
pop
jecxz
pop
clc
xor
fsubr
pushf
add
sti
sbb
and
inc
push
xor
fdivr
dec
pop
arpl
ret
addr16
(bad)
cmp
retf
jp
pusha
or
xchg
lea
xor
adc
jne
loopne
mov
mov
adc
mov
test
mov
inc
es
fnstsw
push
scas
mov
mov
xchg
add
call
mov
adc
cmc
mov
sub
mov
add
out
mov
xchg
mov
xor
dec
call
je
adc
jnp
(bad)
popf
push
scas
adc
xor
or
sbb
mov
int
mov
and
jp
push
jno
lahf
xchg
test
fisub
sahf
xchg
pop
inc
xchg
lds
inc
les
and
inc
inc
pop
or
sbb
or
fstp
jne
adc
mov
push
scas
push
popf
and
pop
cmps
fwait
retf
sti
cmp
mul
xchg
dec
loope
and
cmp
or
mov
add
dec
fild
fsubr
fwait
push
add
fdivp
dec
aam
jns
mov
mov
xchg
repnz
fsubr
ffreep
loopne
out
out
pop
adc
sub
dec
lea
mov
(bad)
std
jl
ficom
or
push
jge
out
xor
std
xchg
jmp
pop
or
pop
sti
aad
jmp
lock
pop
xor
cmp
push
(bad)
popa
xchg
aad
or
mov
mov
adc
retf
call
movs
or
leave
mov
retf
or
lock
sbb
fstp
xchg
adc
div
xlat
cmp
ins
arpl
add
stc
icebp
mov
push
inc
pop
dec
push
and
cmp
mov
iret
loope
outs
sub
and
inc
fwait
pop
dec
push
(bad)
das
mov
call
bound
cmp
out
push
ds
inc
sub
je
sbb
mov
ret
popf
push
cwde
cwde
inc
fnstenv
xor
popa
and
popf
jmp
mov
mov
pop
jmp
pop
push
pop
xor
xor
scas
daa
fld
pop
and
cmp
adc
pop
pop
mov
pop
cmp
mov
jmp
or
mov
jne
mov
cdq
rol
mov
sub
int
sti
mov
stos
mov
jg
pop
mov
xchg
inc
dec
xchg
movs
cmps
jg
push
dec
inc
je
xor
mov
sbb
stos
cmps
xchg
popf
mov
mov
or
sub
xor
not
mov
mov
xchg
movs
aas
xchg
mov
jge
fnstsw
fistp
mov
xchg
inc
test
push
mov
fisttp
lds
or
fdivr
imul
cmps
arpl
mov
cmp
mov
mov
js
pop
dec
inc
ss
jmp
fsub
cmp
push
jg
ficom
adc
sbb
xor
cmp
add
aad
mov
jg
into
xor
push
xor
push
or
add
mov
ja
or
xor
lea
into
(bad)
icebp
pop
in
fsubr
sbb
jbe
(bad)
lds
loope
or
les
fs
fld
pop
jl
push
cmc
mov
add
mov
sar
or
jnp
push
xchg
or
repnz
leave
push
add
js
rol
sar
outs
push
outs
and
dec
in
jne
jno
mov
pusha
cwde
mov
stos
mov
and
or
or
push
pop
(bad)
sahf
dec
jns
out
mov
mov
test
push
and
pop
mov
mov
mov
ret
adc
jmp
or
shl
sbb
fs
ds
adc
jbe
dec
mov
popa
(bad)
repz
scas
xchg
mov
inc
sub
mov
push
mov
dec
lea
aas
adc
out
jg
push
cs
jmp
gs
sbb
ds
int
shl
cmp
out
cld
lock
push
mov
mov
and
pop
adc
or
or
out
pop
movs
dec
fwait
push
shl
(bad)
(bad)
aas
je
push
dec
jmp
test
es
jmp
sub
aaa
(bad)
lods
aad
push
(bad)
jb
xchg
mov
int3
mov
inc
add
into
dec
cmp
das
shl
add
dec
cmp
push
cmp
or
dec
mov
xor
stos
int
jge
inc
outs
gs
loop
repnz
ja
xor
pop
fwait
adc
pop
jnp
pop
cdq
jl
stos
jle
and
pop
and
stc
push
or
sub
sbb
add
inc
mov
into
or
lods
sbb
fwait
imul
test
xchg
jl
xor
fistp
xchg
adc
push
(bad)
test
stos
pop
loope
jmp
enter
pop
pop
mov
pop
inc
icebp
push
cmp
mul
fst
imul
call
push
add
test
add
pop
scas
pop
iret
icebp
mov
sti
clc
and
jge
ds
movs
mov
push
xor
repz
btc
sub
fwait
mov
push
ins
sub
retf
dec
pop
mov
idiv
mov
ret
imul
adc
fsubr
xchg
stos
sub
sbb
pop
inc
push
or
jnp
mov
hlt
bound
or
push
fwait
dec
xchg
mov
dec
movs
loope
das
mov
(bad)
pusha
fwait
shl
sbb
xor
mov
push
clc
push
cwde
add
mov
adc
ja
xor
sub
sar
dec
jmp
xor
jl
test
add
mov
ins
inc
push
sub
xor
arpl
jg
jne
push
dec
inc
push
test
xor
jno
in
pushf
or
imul
jecxz
stos
jmp
sub
loopne
dec
retf
es
jnp
lds
nop
inc
cmp
cmp
xlat
nop
xchg
test
xchg
or
push
pop
jbe
and
add
xchg
jae
add
ss
(bad)
jmp
push
xchg
ror
movs
clc
int3
push
aaa
sbb
les
push
jle
cmp
arpl
add
sbb
and
sub
xor
cmp
call
retf
sub
sbb
out
jnp
mov
mov
retf
cli
fld
xor
adc
sbb
jne
xor
inc
xchg
add
movs
and
lods
movs
cmp
mov
js
pop
jne
fcmovnb
stos
mov
daa
push
sub
push
rol
jmp
push
test
popa
lahf
jnp
rol
ins
bound
mov
or
out
out
xchg
das
ins
mov
sub
leave
inc
jg
out
add
push
pop
mov
push
jle
sub
jne
fisttp
xchg
sbb
into
or
xchg
fs
mov
repz
call
xchg
xor
out
test
add
inc
fsub
neg
lock
lods
sub
jns
in
adc
jp
seto
push
xchg
retf
rol
adc
jb
bound
pop
sbb
(bad)
stc
test
pop
mov
lds
and
xor
data16
add
mov
add
pop
mov
mov
inc
jl
mov
mov
shr
mov
test
xlat
xor
push
add
adc
dec
call
test
cld
repz
mov
mov
pop
gs
mov
sub
loop
pop
cwde
cmp
push
jle
add
and
lock
iret
inc
xor
daa
cs
mov
dec
and
xor
and
hlt
xchg
mov
aad
and
pop
dec
xchg
mov
xor
jb
unpckhps
jae
fcmovnu
inc
add
xchg
aam
sub
das
mov
push
loope
inc
sub
push
data16
mov
push
daa
add
jge
shl
fistp
je
ret
add
jg
das
pushf
mov
cmp
cmp
ins
or
shr
push
mov
scas
rcl
fidivr
push
mov
stc
rcr
icebp
mov
es
vrcpps
push
cmps
stos
inc
inc
push
ret
jmp
mov
fist
jmp
retf
jne
pop
adc
(bad)
cmp
cmps
or
call
adc
and
mov
movs
add
fcom
das
sbb
aad
push
pop
xchg
pusha
test
nop
in
bound
cld
inc
shr
mov
movs
mov
addr16
inc
ins
hlt
cld
push
adc
xchg
adc
cld
aad
jp
int
sbb
lds
into
inc
imul
mov
call
enter
das
mov
sub
fidiv
je
dec
cmps
jns
mov
xor
adc
xabort
js
sbb
ja
stc
or
fimul
(bad)
pop
mov
out
mov
stc
shr
cdq
xchg
sub
fdivr
jmp
or
xor
sbb
inc
cmps
jbe
pushf
jle
jb
retf
xor
idiv
dec
xor
xor
push
dec
shl
inc
xlat
add
fimul
dec
sub
dec
out
and
out
sbb
aas
loop
xchg
cmp
mov
pop
test
cwde
push
add
(bad)
mov
stc
ss
inc
fcomp
fwait
je
jno
pop
ss
mov
ror
cmps
xor
dec
mov
jp
pop
jbe
mov
dec
sub
pop
iret
dec
cs
xchg
fnstcw
shl
inc
jae
mov
ds
ror
out
adc
inc
xchg
and
dec
lea
arpl
in
mov
daa
lods
xor
movs
pop
mov
ret
push
push
adc
cli
push
popa
movs
xchg
cmp
jg
fistp
sti
test
test
aad
fistp
shl
sbb
outs
mov
dec
or
add
or
fld
ds
in
push
mov
jne
(bad)
jne
test
pop
in
clc
int
adc
mov
xchg
shr
retf
out
or
or
clc
xchg
std
jmp
xchg
pop
in
adc
mov
xchg
sub
push
aaa
push
inc
xchg
clc
adc
bound
adc
ret
and
sbb
aam
stos
out
push
sbb
or
leave
pop
pop
push
retf
test
push
imul
or
rcr
int3
inc
push
xlat
out
mov
popf
(bad)
cmps
test
cmp
xchg
(bad)
jno
div
pop
mov
inc
and
sub
or
rcl
mov
xchg
cs
push
push
push
mov
sub
or
dec
aaa
bnd
movs
jl
jp
ret
xor
rep
and
retf
sbb
(bad)
call
adc
or
(bad)
(bad)
inc
pop
cmp
mov
push
in
rep
(bad)
mov
es
dec
pop
paddq
cdq
jno
mov
pop
mov
js
push
adc
aam
xor
mov
mov
jnp
ret
popf
sub
xor
inc
std
cmp
push
dec
mov
shl
jg
in
lods
aam
test
cs
or
lods
mov
aaa
cmp
or
clc
ret
mov
movs
cli
ins
fcom
xacquire
fiadd
pusha
fisttp
das
outs
stos
fmul
push
sar
cmp
call
xor
pop
xchg
push
or
sbb
mov
cmps
mov
pop
and
call
in
sub
sahf
jbe
mov
cmp
sbb
xchg
add
rcr
jbe
add
mov
fs
mov
pop
mov
push
sbb
adc
inc
nop
jecxz
xor
mov
cdq
les
scas
mov
mov
repz
cmp
mov
daa
mov
outs
leave
sbb
push
lea
cmp
adc
fdiv
mov
into
cdq
(bad)
std
bound
retf
jle
xlat
push
mov
mov
jp
jmp
in
scas
retf
daa
mov
sar
imul
pushf
scas
mov
sub
dec
cmp
xchg
sbb
push
popf
retf
clc
enter
les
inc
cs
inc
cmps
nop
pop
inc
cmp
add
sub
arpl
xor
mov
pop
popf
mov
stc
icebp
enter
pop
int3
int
mov
sub
shl
or
push
adc
pop
scas
in
push
mov
adc
xor
push
adc
inc
mov
adc
xchg
jb
sbb
lea
jo
pop
ret
test
pop
aam
xlat
test
das
leave
sbb
push
adc
and
rcr
fstp
jae
xchg
retf
cmp
test
mov
pop
inc
pop
xor
test
xchg
js
mov
aam
cdq
sar
sub
mov
in
retf
xor
push
mov
mov
movs
mov
xchg
out
xor
and
mov
fcmovnb
sub
fwait
cld
nop
mov
(bad)
loop
lock
fdiv
outs
jl
jp
fbld
(bad)
stos
sbb
xor
mov
les
test
push
prefetcht1
adc
scas
mov
inc
xor
in
ret
pop
pop
addr16
push
sti
test
mov
xchg
iret
test
mov
retfw
xchg
cmp
inc
mov
push
cli
movs
xchg
mov
pop
shl
lds
push
ds
or
es
int3
ret
inc
xor
xchg
dec
stos
mov
pop
nop
ret
je
mov
sbb
icebp
pushf
rcr
add
sub
pop
cmp
pushf
icebp
dec
inc
enter
dec
mov
call
adc
jecxz
lods
pop
push
push
xchg
push
push
push
rcr
fcmovb
sub
jo
cmp
cmp
je
jmp
movs
sub
movs
xchg
jl
cmp
cmp
je
rcr
fdivr
sub
pop
dec
push
(bad)
(bad)
call
add
adc
jno
fsubr
xor
and
mov
mov
out
mov
addr16
lods
ds
xchg
add
and
mov
cdq
cmc
adc
inc
mov
ret
push
ds
dec
pop
mov
scas
in
ret
xor
div
(bad)
clc
ins
test
push
inc
xchg
test
cmp
mov
dec
mov
cmp
dec
call
movs
out
push
jbe
mov
xchg
sahf
bound
mov
push
xor
std
std
xchg
jbe
test
inc
stc
icebp
sbb
sbb
xchg
push
adc
stc
add
call
mov
add
sbb
aad
jo
je
addr16
call
stc
in
mov
pusha
pop
hlt
call
stos
cmp
inc
repnz
loopne
lea
pop
or
adc
or
and
xor
mov
adc
push
retf
dec
xchg
or
or
lods
shr
cdq
mov
push
jl
pusha
stos
in
(bad)
loop
xor
push
jmp
loopne
dec
push
jmp
cmp
adc
cmp
imul
sahf
cmp
mov
ret
xor
imul
js
and
push
test
xchg
movs
mov
aas
sti
xlat
fcomp
push
repz
push
add
cld
xchg
jmp
xor
mov
lods
fsub
int3
popw
jae
adc
sbb
xchg
add
xchg
dec
jmp
stos
les
sbb
ret
jo
mov
out
jne
xor
sub
shr
jmp
(bad)
jmp
loope
xchg
in
je
shl
in
sti
in
icebp
(bad)
and
test
(bad)
push
mov
cdq
aad
dec
jnp
mov
fwait
dec
inc
xor
in
ins
dec
xchg
add
xchg
pop
add
pop
xor
adc
and
add
pop
pop
jmp
mov
(bad)
test
scas
mov
xchg
sahf
call
jle
dec
movs
push
fsub
adc
xchg
fst
push
fnstsw
pushf
int
std
(bad)
ins
add
scas
xchg
ins
pop
fisttp
cmc
jbe
daa
xor
mov
mov
mov
xor
shl
scas
jmp
cld
out
dec
loope
sar
(bad)
mov
outs
sbb
xchg
xor
and
movs
push
or
pop
movs
and
xchg
cs
rol
movs
fiadd
out
cld
leave
mov
das
test
push
dec
repnz
dec
dec
stos
mov
cmps
sbb
or
xor
mov
mov
sbb
movs
call
cmp
xchg
ror
mov
mov
pop
ds
ret
fsubr
dec
leave
les
or
rcl
dec
add
retf
xor
sbb
xchg
icebp
jo
fcom
fcomp
sub
jnp
rcr
into
inc
xchg
stos
cmc
lock
mov
add
rol
jle
imul
and
movs
sbb
jb
dec
cdq
inc
int
pop
ss
add
jge
rcr
adc
dec
add
int
push
test
(bad)
lock
stos
inc
xor
fmulp
mov
push
or
xor
inc
xor
sbb
sub
bound
(bad)
push
(bad)
dec
push
sub
cmp
push
pop
outs
pop
nop
rol
stos
sub
aam
div
jmp
test
js
lea
dec
ret
mov
popa
pop
xchg
push
xor
adc
clc
push
dec
mov
in
ret
push
cmps
and
inc
sbb
fild
jmp
test
mov
mov
inc
mov
or
cmp
cmp
xchg
shl
xor
shl
adc
sub
mov
xor
out
lahf
adc
xor
or
fcom
lea
and
xchg
xchg
and
inc
mov
imul
xchg
jns
sbb
in
nop
jne
dec
pop
push
and
fisttp
shl
stos
in
lods
jp
jmp
fidivr
les
ficom
cld
xchg
push
push
dec
daa
push
fiadd
pop
inc
ret
je
inc
xchg
adc
jp
xchg
pushf
and
out
jns
push
mov
clc
sti
jmp
cmp
mov
hlt
cmps
add
ins
mov
sub
sub
inc
adc
loop
inc
(bad)
repnz
dec
pop
push
call
bound
call
pop
dec
rcl
mov
adc
or
or
sub
fsub
das
fdiv
jae
in
adc
or
shl
xchg
fcmovnbe
not
mov
jns
jl
jmp
jne
inc
add
or
sbb
ins
bound
mov
cld
test
mov
ds
aas
push
mov
mov
das
jge
jmp
inc
and
test
cmp
daa
sub
jbe
cli
mov
ss
add
mov
mov
aas
jmp
cmp
je
jb
(bad)
sti
pop
aaa
std
xchg
push
jge
rcl
fcmovb
pop
hlt
xchg
mov
ins
mov
or
xor
jp
int3
nop
jbe
jns
pop
stos
xchg
add
outs
xor
mov
std
out
sbb
mov
or
dec
jnp
xor
je
sub
gs
inc
fcomp
clc
push
jle
sar
adc
fimul
popa
out
dec
xchg
pop
sub
mov
movs
aad
inc
cmp
jle
cld
fdiv
cdq
dec
mov
lock
mov
lds
loop
xchg
mov
stc
aas
scas
jg
push
jns
mov
cwde
mov
and
mov
adc
or
xchg
cmc
and
repnz
push
ja
dec
jbe
xchg
pushf
xchg
imul
aas
mov
ins
mov
or
rol
lea
popa
add
xor
icebp
hlt
jl
pop
fild
mov
fsub
dec
adc
pop
enter
inc
mov
dec
xchg
push
mov
add
pop
sub
xlat
adc
cmp
or
push
loope
sub
inc
xchg
add
jmp
mov
add
mov
ror
mov
sub
xor
xor
and
jmp
call
mov
not
and
xchg
shr
add
xor
add
add
bswap
jmp
xor
and
ror
dec
shr
rol
and
shl
and
jmp
push
xor
not
sub
add
mov
jmp
call
inc
and
add
xchg
sub
dec
mov
and
jmp
xor
shr
add
mov
sub
sub
jmp
push
mov
mov
or
neg
dec
mov
xor
ror
and
xchg
mov
add
jmp
rol
sub
sub
shl
not
xchg
and
mov
mov
add
jmp
call
and
bswap
mov
xor
add
mov
not
xor
not
ror
jmp
pop
xchg
sub
xchg
and
mov
mov
or
sub
jmp
push
xor
xor
xor
shr
not
add
xor
and
xor
sub
sub
xor
not
or
jmp
add
and
xchg
or
xchg
mov
shl
inc
jmp
call
xor
add
and
mov
dec
sub
and
sub
xchg
jmp
call
sub
sub
xor
or
bswap
sub
ror
shr
add
xor
not
xor
or
jmp
pop
mov
xchg
xor
or
xchg
dec
neg
xchg
add
xor
add
inc
mov
jmp
ret
add
xor
and
and
xor
add
add
ror
xor
add
add
and
or
nop
dec
jmp
pop
shr
add
sub
xchg
bswap
dec
xor
jmp
call
and
or
add
bswap
or
add
jmp
xor
add
sub
xchg
xchg
xchg
sub
not
mov
inc
xor
mov
and
sub
jmp
mov
sub
neg
shr
sub
shr
inc
and
add
add
or
add
dec
and
or
jmp
mov
xchg
sub
mov
dec
mov
and
or
add
and
sub
dec
jmp
mov
shr
and
xor
and
mov
and
jmp
push
mov
xor
add
sub
mov
mov
add
sub
rol
xor
nop
jmp
mov
ror
and
mov
and
and
sub
sub
and
or
xor
jmp
pop
mov
sub
xor
mov
sub
sub
add
and
xchg
dec
add
or
jmp
mov
inc
xor
bswap
jmp
push
sub
ror
not
mov
add
mov
xor
shr
mov
mov
xor
and
add
xor
rol
or
jmp
push
xor
xor
sub
sub
xor
jmp
push
mov
xchg
sub
and
shl
xor
and
inc
not
sub
inc
xor
mov
mov
jmp
not
and
sub
and
jmp
pop
sub
not
dec
or
shr
sub
mov
ror
or
add
sub
add
jmp
pop
or
not
and
neg
shr
xchg
mov
mov
sub
neg
jmp
pop
xchg
dec
sub
sub
xor
xchg
ror
jmp
pop
ror
sub
sub
rol
xchg
sub
and
xchg
or
jmp
pop
shl
xor
shr
xor
and
mov
xor
jmp
call
and
bswap
add
sub
shl
and
and
xor
and
sub
mov
sub
shr
mov
xchg
and
jmp
add
or
inc
mov
and
nop
xchg
xor
or
and
jmp
push
and
rol
or
sub
add
xor
and
xor
xor
xor
xor
jmp
mov
and
rol
add
shl
mov
xor
shr
jmp
pop
shl
mov
add
add
xchg
jmp
push
xchg
or
or
xchg
xchg
sub
xchg
xor
jmp
mov
and
and
or
not
xor
xchg
mov
sub
sub
jmp
push
add
shr
xchg
or
xor
shr
or
bswap
or
sub
and
jmp
jl
xchg
xor
add
and
and
xor
sub
add
rol
ror
jmp
rol
sub
xchg
or
sub
bswap
and
jmp
call
not
dec
mov
or
ror
jmp
mov
sub
xor
or
inc
sub
xchg
shr
sub
and
neg
rol
xchg
jmp
push
add
add
or
shr
add
jmp
call
mov
and
xchg
inc
nop
xor
jmp
pop
mov
mov
and
or
neg
shl
xor
or
not
shr
shl
inc
mov
jmp
pop
or
nop
or
or
mov
or
sub
inc
jmp
pop
sub
sub
add
add
or
or
or
and
xor
not
add
and
bswap
sub
and
jmp
call
sub
ror
or
jmp
call
xor
add
xchg
shr
and
or
mov
bswap
or
xor
xchg
dec
xor
xchg
jmp
push
and
shr
ror
or
shl
xchg
add
add
or
shr
rol
and
inc
sub
jmp
call
neg
or
sub
add
sub
mov
add
add
xchg
and
jmp
cmp
jmp
rol
bswap
mov
add
sub
jmp
pop
sub
mov
sub
bswap
or
and
sub
jmp
pop
or
not
xor
shr
mov
sub
xor
xchg
sub
jmp
pop
sub
add
mov
bswap
or
and
add
mov
or
or
jmp
pop
add
or
neg
shl
add
neg
shl
xchg
rol
inc
jmp
pop
mov
and
or
xor
or
add
bswap
sub
jmp
push
dec
not
mov
sub
or
xchg
xchg
bswap
jmp
pop
add
sub
xor
sub
xor
add
bswap
add
jmp
rol
sub
xchg
xchg
xor
xchg
bswap
inc
jmp
pop
mov
and
or
sub
xchg
bswap
xor
sub
shr
xor
jmp
add
rol
or
xor
add
and
jmp
push
xchg
rol
and
shl
add
or
and
sub
dec
and
xchg
sub
xor
and
add
ror
jmp
push
xchg
sub
rol
sub
sub
not
bswap
xchg
add
jmp
add
mov
shr
sub
xchg
sub
sub
xor
neg
add
sub
jmp
call
neg
mov
shl
and
xor
add
add
bswap
jmp
add
mov
xchg
inc
or
or
mov
rol
shl
add
xor
jmp
push
or
xchg
or
or
or
and
add
or
mov
jmp
call
not
add
shr
shr
mov
mov
or
add
mov
jmp
call
dec
not
shl
add
mov
inc
dec
rol
shr
xor
xchg
bswap
shr
jmp
push
or
add
sub
add
add
xchg
bswap
sub
shl
add
jmp
push
sub
xor
add
shr
xor
xor
xor
inc
xor
xchg
add
or
add
and
sub
jmp
mov
dec
or
sub
add
xchg
sub
xor
nop
rol
mov
mov
or
or
inc
jmp
push
or
neg
sub
mov
and
add
mov
xchg
add
sub
jmp
mov
or
add
bswap
ror
sub
add
sub
mov
rol
rol
or
mov
shr
shr
dec
xor
jmp
mov
or
and
sub
or
mov
xchg
and
xchg
sub
xor
shl
inc
or
and
jmp
pop
add
ror
and
inc
neg
or
xor
sub
and
or
bswap
jmp
mov
add
rol
and
add
and
nop
not
jmp
push
xchg
neg
or
shr
xor
mov
inc
or
and
mov
xor
xor
jmp
pop
sub
sub
xor
sub
xchg
bswap
add
sub
jmp
push
xor
neg
or
and
mov
add
and
xor
mov
sub
not
or
rol
xchg
jmp
mov
xor
ror
xchg
nop
and
bswap
and
inc
add
add
not
xchg
sub
add
jmp
pop
sub
and
sub
ror
xor
sub
or
jmp
push
ror
xor
mov
not
sub
sub
jmp
call
or
bswap
and
xor
or
ror
jmp
push
add
shl
and
bswap
add
add
sub
ror
or
inc
shr
jmp
mov
xor
or
mov
add
neg
shl
bswap
rol
or
and
jmp
push
ror
inc
not
nop
add
and
nop
bswap
sub
or
xor
add
jmp
mov
bswap
neg
add
mov
sub
mov
and
shl
and
sub
rol
add
jmp
pop
and
mov
neg
mov
dec
xor
xchg
mov
bswap
jmp
mov
and
sub
not
shr
and
add
xchg
xor
xchg
jmp
pop
rol
sub
xchg
sub
xchg
shl
xchg
xchg
xor
jmp
rol
bswap
inc
neg
xor
sub
xchg
inc
jmp
push
sub
add
ror
mov
or
xchg
and
sub
bswap
xchg
rol
jmp
mul
xor
neg
mov
ror
xor
jmp
mov
or
add
inc
sub
and
or
add
mov
mov
inc
jmp
call
xor
shl
add
and
ror
xor
jmp
pop
and
xor
or
xor
xor
xchg
add
shl
sub
jmp
ret
not
sub
or
add
mov
mov
or
shr
and
add
or
jmp
push
mov
sub
add
add
rol
or
jmp
call
or
dec
or
xor
or
shl
and
and
xor
jmp
pop
and
and
or
shr
or
rol
xchg
xor
xchg
bswap
ror
mov
xchg
or
not
jmp
cmp
jmp
push
xchg
add
mov
and
bswap
xor
ror
or
jmp
push
or
xchg
mov
add
sub
sub
and
mov
xor
jmp
mov
xor
sub
jmp
inc
add
and
xor
jmp
call
add
sub
sub
ror
or
add
and
and
and
sub
xor
add
jmp
inc
xchg
mov
add
xor
or
dec
bswap
xor
shr
jmp
mov
not
add
mov
bswap
xor
xor
mov
xor
ror
jmp
call
neg
xchg
rol
add
add
mov
mov
sub
add
sub
and
xor
or
or
xchg
bswap
jmp
pop
add
and
xor
xor
bswap
or
ror
add
and
or
inc
bswap
and
jmp
pop
and
bswap
or
or
sub
xor
add
jmp
nop
sub
or
xor
ror
xor
jmp
mov
sub
or
or
dec
add
xchg
add
jmp
call
xchg
xor
and
add
jmp
push
add
not
not
shr
and
bswap
add
mov
add
sub
xor
or
jmp
push
xchg
or
xor
and
mov
or
shr
xchg
or
or
and
add
ror
jmp
pop
and
dec
inc
sub
neg
xor
xor
or
or
jmp
mov
add
ror
shl
mov
mov
add
xor
add
xchg
jmp
pop
and
add
bswap
sub
and
sub
bswap
mov
xchg
xchg
mov
bswap
or
inc
jmp
mov
shl
or
add
xchg
and
and
xchg
and
sub
and
xor
neg
sub
mov
jmp
pop
neg
and
or
xor
add
xchg
not
and
not
sub
jmp
mov
add
sub
not
sub
jmp
push
not
add
add
and
xchg
xchg
jmp
mov
add
sub
bswap
mov
and
or
xchg
add
or
and
add
xchg
jmp
call
or
bswap
add
jmp
mov
bswap
xor
or
rol
bswap
sub
bswap
mov
jmp
push
mov
add
and
xchg
neg
xchg
xor
not
jmp
pop
not
xor
mov
or
xor
shl
add
sub
xor
rol
sub
xor
jmp
add
bswap
xchg
and
xor
and
not
or
shl
xchg
and
jmp
shl
mov
add
or
shr
add
ror
xor
mov
jmp
push
and
sub
xchg
xor
shl
add
sub
add
sub
mov
shl
add
add
or
jmp
mov
and
sub
sub
add
shr
xchg
xor
or
and
add
jmp
pop
sub
inc
or
or
sub
xchg
sub
xchg
mov
jmp
pop
and
sub
mov
mov
and
inc
xor
xor
jmp
push
and
mov
xor
bswap
neg
or
shl
not
xor
or
jmp
pop
mov
xor
nop
mov
mov
mov
rol
sub
mov
jmp
pop
mov
xchg
xchg
ror
sub
xor
add
xor
xor
add
and
jmp
rol
xchg
not
ror
inc
or
shl
or
nop
ror
add
jmp
mov
xchg
inc
mov
and
and
jmp
push
xchg
xor
add
or
sub
or
or
or
rol
bswap
add
sub
jmp
push
xor
xor
xor
bswap
sub
dec
shr
xor
rol
sub
or
xor
add
jmp
ret
or
not
inc
add
add
sub
xor
xor
sub
jmp
call
sub
sub
mov
shl
sub
or
jmp
pop
mov
xchg
xor
xchg
sub
and
mov
mov
xchg
sub
mov
xor
xor
jmp
push
dec
not
xchg
or
xor
mov
or
shr
shl
ror
sub
jmp
push
neg
and
sub
rol
mov
sub
xchg
jmp
call
xchg
not
and
xor
add
xor
bswap
or
shl
jmp
call
mov
mov
add
xor
dec
or
xor
sub
xor
sub
jmp
push
or
or
bswap
inc
add
sub
xchg
xchg
not
jmp
push
sub
xor
shl
sub
xor
xchg
xor
jmp
push
add
and
xor
mov
add
jmp
push
rol
sub
and
or
add
and
nop
xor
xor
jmp
push
dec
mov
jmp
push
ror
inc
xor
xor
not
ror
ror
xchg
and
mov
xor
jmp
push
or
mov
add
xor
mov
ror
shl
xor
add
xor
not
jmp
pop
ror
bswap
and
add
dec
and
and
inc
or
jmp
mov
rol
xor
rol
or
mov
mov
xchg
jmp
push
not
rol
add
shl
and
neg
mov
mov
and
inc
add
dec
not
or
jmp
or
and
shl
shl
and
sub
add
sub
jmp
call
or
xor
xor
mov
sub
add
xor
or
sub
add
and
jmp
mov
add
shl
sub
not
sub
add
mov
or
xor
jmp
pop
shr
rol
xor
xchg
shr
sub
mov
jmp
pop
xchg
ror
xor
mov
and
mov
sub
mov
sub
xor
dec
shr
rol
xor
or
inc
jmp
mov
xchg
or
shr
xchg
add
mov
dec
or
jmp
shr
and
or
jmp
rol
xor
rol
xor
ror
sub
xchg
sub
jmp
push
mov
mov
or
not
add
and
xchg
inc
and
xor
jmp
mov
neg
xor
xchg
and
and
ror
mov
add
xchg
or
jmp
mul
rol
mov
dec
add
and
mov
mov
ror
neg
jmp
push
not
xchg
xor
bswap
mov
not
sub
mov
xor
xor
ror
xchg
sub
jmp
push
xor
mov
add
and
xor
add
jmp
push
and
xchg
add
mov
xchg
rol
add
and
or
jmp
pop
and
ror
add
add
ror
shl
and
or
and
xchg
not
inc
jmp
push
add
sub
sub
and
add
shr
shr
xor
and
add
jmp
mov
add
or
xchg
sub
sub
and
ror
mov
jmp
call
xchg
and
add
sub
or
and
and
ror
mov
xchg
jmp
xor
sub
add
xor
sub
bswap
inc
add
xchg
sub
xor
sub
dec
jmp
push
or
shr
inc
xor
sub
shr
neg
mov
or
add
or
not
jmp
call
shl
add
and
rol
add
xor
and
xor
xchg
xor
jmp
mov
or
mov
xor
mov
inc
add
neg
ror
add
inc
jmp
push
and
mov
xor
add
ror
neg
jmp
call
mov
not
ror
add
inc
xchg
mov
ror
jmp
add
xor
add
add
sub
xchg
or
or
bswap
xor
sub
dec
jmp
pop
bswap
and
sub
rol
and
and
mov
mov
sub
xchg
xor
mov
jmp
mov
xchg
mov
sub
add
not
xchg
xchg
bswap
or
ror
mov
add
and
and
shl
jmp
cmp
jmp
add
sub
sub
sub
or
xor
add
sub
ror
jmp
mov
neg
xor
and
xchg
and
xchg
xchg
neg
add
and
or
jmp
call
neg
add
xchg
xor
jmp
jne
xchg
sub
rol
xchg
or
xor
or
or
or
sub
add
mov
dec
xor
jmp
push
neg
mov
xchg
not
sub
and
shl
and
add
jmp
mov
inc
neg
xor
add
and
ror
and
mov
xor
xchg
jmp
call
inc
mov
mov
xor
sub
neg
or
sub
jmp
pop
sub
mov
ror
xchg
sub
inc
shl
shl
dec
jmp
dec
or
add
bswap
inc
neg
sub
add
jmp
push
dec
shl
xchg
mov
add
xor
inc
mov
dec
jmp
pop
xor
sub
sub
sub
xor
and
xchg
jmp
mov
and
mov
and
xchg
jmp
call
or
xor
and
mov
or
or
xor
jmp
nop
sub
or
xor
sub
mov
xor
sub
rol
and
or
not
xchg
jmp
pop
xor
sub
add
or
and
sub
mov
not
jmp
pop
or
xor
or
bswap
add
xchg
sub
add
or
xchg
inc
jmp
call
xor
mov
and
xor
jmp
push
xor
mov
mov
xor
bswap
and
or
mov
xor
mov
jmp
mov
sub
sub
mov
xor
add
add
sub
xor
bswap
xchg
jmp
mov
xor
not
and
sub
or
ror
or
sub
and
jmp
mov
shl
mov
xchg
and
sub
xor
mov
or
ror
rol
mov
sub
jmp
ret
sub
shr
or
dec
ror
xor
neg
and
or
xchg
xchg
jmp
sub
xchg
xchg
xor
add
sub
mov
jmp
pop
and
and
ror
add
jmp
pop
mov
rol
shr
neg
jmp
call
and
and
and
or
and
sub
shr
xor
add
and
jmp
add
mov
or
shl
not
xchg
inc
add
xchg
jmp
pop
or
dec
mov
xor
xchg
and
rol
xor
or
dec
jmp
pop
rol
xor
neg
add
neg
xor
neg
dec
inc
nop
or
xor
jmp
pop
sub
mov
xchg
neg
dec
mov
add
add
and
dec
xchg
xchg
or
sub
xchg
jmp
add
mov
ror
mov
sub
sub
add
jmp
mov
and
rol
sub
rol
jmp
mov
inc
shr
add
rol
jmp
or
neg
mov
and
shr
and
neg
dec
xchg
inc
jmp
push
and
xor
mov
xor
add
xchg
not
sub
sub
mov
jmp
push
add
mov
sub
or
and
jmp
pop
add
xchg
add
rol
mov
mov
shr
xor
and
ror
xchg
not
jmp
push
and
and
ror
xor
ror
bswap
shr
shl
or
inc
sub
jmp
nop
mov
add
mov
sub
xor
xor
and
xchg
jmp
mov
and
xor
xchg
dec
xor
add
and
jmp
call
bswap
and
and
add
inc
not
sub
not
shl
add
jmp
pop
mov
add
rol
xchg
mov
mov
neg
neg
jmp
mov
neg
inc
add
xor
mov
add
sub
add
or
or
jmp
add
or
sub
and
sub
xor
not
xchg
dec
sub
jmp
push
ror
or
add
and
mov
xor
not
and
or
jmp
pop
xchg
xchg
sub
shl
and
xchg
and
bswap
jmp
push
bswap
xchg
rol
dec
mov
or
or
add
jmp
call
or
xchg
xchg
or
sub
add
xor
not
add
jmp
mov
mov
xchg
xchg
xor
add
add
sub
jmp
push
xor
xchg
dec
sub
or
inc
bswap
add
jmp
rol
mov
or
sub
or
add
jmp
push
or
add
ror
mov
mov
and
sub
sub
shl
mov
xor
add
bswap
jmp
mov
xor
sub
or
and
rol
xor
dec
xor
sub
jmp
call
inc
shr
or
ror
xor
jmp
mov
sub
add
xchg
sub
add
add
mov
jmp
pop
add
inc
or
add
xor
mov
inc
or
sub
mov
jmp
push
and
xor
or
xor
and
add
jmp
call
ror
and
mov
rol
not
shr
xchg
sub
dec
bswap
jmp
pop
xchg
mov
sub
and
bswap
xor
sub
and
inc
inc
sub
jmp
mov
mov
xchg
and
or
and
not
and
add
xchg
jmp
add
shr
sub
add
add
inc
bswap
or
jmp
call
xchg
or
add
add
and
inc
shl
sub
jmp
call
or
sub
add
rol
inc
shl
xor
mov
add
mov
inc
or
or
shl
jmp
call
xor
and
or
add
xor
or
add
or
rol
xchg
xchg
or
shr
add
jmp
pop
bswap
and
jmp
or
inc
and
shr
and
and
bswap
jmp
mov
not
shr
neg
neg
xchg
xchg
add
add
xor
and
not
inc
jmp
push
mov
add
ror
and
add
sub
or
nop
or
mov
jmp
mov
rol
xchg
shl
add
add
or
shr
dec
and
xor
mov
jmp
ret
mov
mov
and
bswap
sub
and
neg
xchg
neg
add
dec
neg
mov
mov
jmp
pop
bswap
xor
jmp
call
sub
add
or
add
xor
and
sub
xor
add
xor
xor
jmp
pop
xchg
mov
or
xor
xor
and
mov
jmp
call
sub
sub
or
add
bswap
add
xor
or
xchg
xchg
sub
shr
and
or
ror
add
jmp
push
sub
and
add
add
or
sub
xor
not
add
jmp
rol
ror
sub
or
sub
dec
ror
jmp
mov
neg
mov
bswap
add
jmp
xor
and
or
add
xor
xchg
mov
and
mov
jmp
push
sub
mov
and
neg
sub
inc
and
add
inc
xor
shr
and
add
and
not
sub
jmp
rol
add
or
dec
mov
add
jmp
push
xchg
mov
jmp
push
neg
and
sub
bswap
mov
ror
neg
jmp
add
xor
inc
shl
add
xor
and
rol
add
jmp
push
dec
add
xchg
xchg
add
sub
mov
or
or
bswap
inc
jmp
mov
nop
ror
neg
shl
sub
mov
jmp
rol
sub
sub
neg
and
xchg
or
not
jmp
push
xor
or
rol
and
shr
neg
sub
jmp
push
xor
and
xchg
and
sub
rol
xchg
dec
bswap
sub
jmp
pop
add
add
mov
xor
mov
jmp
push
or
ror
neg
add
mov
add
nop
xor
xchg
neg
jmp
call
add
add
mov
xor
xor
inc
dec
inc
sub
mov
or
not
xor
neg
sub
jmp
pop
shl
xchg
neg
sub
shl
add
neg
sub
rol
sub
add
add
mov
xor
xor
jmp
mov
xor
or
or
dec
and
sub
and
xchg
or
jmp
mov
and
mov
or
sub
mov
sub
xor
or
or
jmp
mov
neg
dec
xor
sub
or
ror
or
sub
xor
xor
xchg
add
sub
shr
jmp
pop
sub
sub
mov
or
mov
or
shl
jmp
push
and
inc
sub
bswap
jmp
pop
sub
mov
add
mov
ror
or
xchg
add
jmp
pop
nop
xchg
add
add
mov
or
inc
not
bswap
jmp
push
and
rol
and
xchg
sub
neg
shr
xor
add
jmp
pop
add
or
or
sub
mov
and
add
mov
or
sub
nop
rol
mov
mov
add
jmp
mov
neg
xor
and
add
shl
xor
mov
sub
sub
inc
and
or
xor
and
jmp
pop
add
shr
bswap
xor
neg
shr
jmp
push
add
neg
and
add
dec
jmp
push
or
mov
sub
or
shl
sub
sub
bswap
sub
dec
sub
or
jmp
mov
dec
rol
mov
neg
xchg
xor
add
shl
sub
jmp
push
and
add
ror
xchg
neg
add
rol
mov
and
jmp
push
add
and
sub
mov
inc
rol
xor
mov
add
mov
shl
jmp
mov
shr
xor
xor
or
or
add
xchg
xor
xor
xchg
sub
jmp
add
add
inc
and
jmp
mov
xchg
xor
and
or
xor
xor
add
xor
shl
jmp
pop
xchg
shr
mov
or
sub
rol
jmp
add
dec
and
add
sub
add
or
xchg
add
or
nop
and
sub
xor
jmp
mov
add
xor
sub
mov
mov
mov
xor
jmp
mov
xchg
add
mov
xchg
not
mov
jmp
call
mov
and
or
mov
or
add
ror
jmp
pop
add
and
shl
xor
xor
or
bswap
shr
xor
sub
jmp
xchg
or
or
not
and
xor
and
jmp
push
not
mov
xor
sub
xchg
xor
mov
xor
add
mov
jmp
push
sub
or
xchg
dec
mov
shr
or
xor
mov
and
nop
and
jmp
push
add
sub
sub
xchg
xor
xchg
and
add
jmp
call
and
neg
add
not
and
jmp
mov
or
inc
sub
add
ror
jmp
ret
shl
xchg
sub
add
xor
shr
xchg
dec
bswap
dec
jmp
pop
mov
sub
mov
and
not
shr
xor
add
shr
jmp
call
dec
bswap
mov
neg
and
xchg
xchg
sub
bswap
and
mov
jmp
pop
mov
sub
xor
sub
and
mov
mov
or
not
jmp
push
or
add
jmp
call
add
mov
sub
or
xchg
mov
xor
jmp
call
xchg
ror
mov
jmp
mov
neg
dec
and
sub
or
xchg
dec
jmp
call
rol
mov
xchg
inc
and
mov
and
mov
jmp
pop
or
xchg
and
or
shr
inc
not
and
xor
xor
jmp
movzx
sub
add
sub
jmp
push
xchg
sub
or
mov
add
add
jmp
mov
and
xchg
and
add
and
sub
rol
xchg
and
xchg
jmp
pop
xor
dec
mov
and
xor
sub
sub
xchg
sub
xchg
mov
jmp
push
rol
not
or
and
shr
jmp
pop
not
and
mov
dec
add
xchg
sub
jmp
jne
sub
or
add
xchg
jmp
pop
rol
mov
mov
mov
sub
jmp
call
or
add
jmp
pop
add
not
add
and
rol
sub
mov
or
dec
jmp
call
add
xor
sub
xor
xor
xor
bswap
add
add
jmp
pop
rol
dec
and
or
xchg
add
or
add
jmp
push
or
xchg
inc
xor
or
and
mov
rol
jmp
push
inc
mov
bswap
xchg
xchg
and
sub
inc
xor
jmp
pop
xchg
add
or
xor
and
sub
and
jmp
push
sub
xor
jmp
call
mov
xor
or
mov
neg
xchg
dec
and
ror
sub
rol
jmp
nop
xor
add
or
mov
or
dec
rol
xor
jmp
pop
sub
or
mov
add
jmp
call
mov
neg
mov
add
xor
or
xor
mov
neg
jmp
mov
add
mov
and
not
xchg
jmp
push
or
or
mov
neg
sub
add
mov
sub
xor
ror
add
jmp
call
xor
not
sub
inc
shl
xor
xchg
jmp
add
add
and
xor
mov
not
shr
add
add
sub
jmp
pop
and
sub
and
xchg
xchg
dec
and
or
or
xchg
jmp
call
mov
rol
shr
xor
jmp
pop
neg
xor
mov
or
sub
or
xchg
neg
jmp
ror
mov
xor
xor
mov
neg
sub
ror
shr
xor
dec
ror
mov
jmp
pop
xor
add
or
shl
sub
add
and
mov
add
jmp
mov
shr
neg
sub
or
xchg
mov
jmp
ret
mov
bswap
xor
or
jmp
push
shl
shr
sub
sub
and
or
xor
sub
mov
jmp
push
xor
or
or
xor
jmp
shr
and
xor
mov
xor
mov
jmp
call
xor
sub
or
mov
or
inc
and
and
xor
jmp
push
add
xor
xor
rol
add
and
not
add
xchg
ror
xor
and
sub
jmp
push
add
sub
and
add
xchg
not
mov
and
inc
sub
and
mov
jmp
push
bswap
mov
add
jmp
push
add
sub
xor
dec
ror
bswap
and
jmp
pop
mov
shl
neg
rol
or
ror
xor
jmp
mov
xor
add
or
xor
and
shr
xchg
sub
sub
jmp
call
add
mov
shl
rol
ror
and
bswap
or
xor
add
xor
shl
jmp
pop
sub
xor
bswap
or
neg
xchg
mov
and
and
jmp
call
add
inc
sub
bswap
xor
and
xor
sub
xor
xor
dec
jmp
pop
and
add
mov
inc
sub
mov
jmp
pop
or
or
xor
dec
xchg
add
sub
rol
and
mov
shl
sub
or
sub
jmp
mov
add
ror
or
shr
add
inc
sub
jmp
call
inc
and
dec
mov
xor
mov
sub
add
and
xor
add
shl
jmp
nop
add
and
not
sub
sub
shl
or
xor
neg
or
jmp
pop
mov
or
mov
ror
inc
rol
and
neg
mov
jmp
add
add
add
xchg
sub
and
and
xchg
sub
and
xor
jmp
pop
sub
add
nop
add
shr
add
xor
not
and
add
mov
jmp
push
add
sub
add
or
mov
or
or
xchg
jmp
pop
add
sub
mov
sub
bswap
dec
dec
xchg
shl
jmp
add
sub
sub
dec
xchg
sub
jmp
ret
add
and
xchg
mov
mov
xor
mov
dec
neg
jmp
pop
xor
xchg
sub
add
shl
sub
and
and
xchg
or
and
xor
jmp
pop
rol
add
and
sub
xchg
add
shl
jmp
call
mov
and
shr
dec
xor
inc
and
not
jmp
push
sub
or
mov
or
xor
add
add
xor
inc
add
add
jmp
nop
add
add
add
sub
sub
xor
jmp
push
and
add
inc
jmp
push
rol
mov
add
ror
bswap
sub
inc
shr
jmp
call
xchg
and
add
sub
or
xor
xchg
dec
ror
mov
xchg
jmp
call
mov
or
add
and
add
add
xor
or
mov
shl
jmp
call
and
add
add
and
shr
or
and
and
sub
sub
jmp
mov
ror
xor
inc
add
mov
xor
xor
or
dec
and
and
inc
mov
ror
xor
or
jmp
pop
rol
sub
bswap
mov
mov
mov
and
not
xor
and
jmp
pop
mov
add
ror
mov
shr
sub
jmp
mov
mov
shl
xchg
neg
and
or
ror
mov
mov
xor
and
jmp
pop
and
neg
or
mov
sub
or
mov
ror
add
sub
add
dec
jmp
push
or
shr
mov
jmp
add
or
xor
xor
add
and
add
sub
or
xor
add
and
jmp
push
or
xor
and
inc
ror
xor
add
add
sub
jmp
pop
and
ror
mov
and
mov
sub
jmp
pop
xchg
or
xchg
or
and
and
xor
or
jmp
pop
xchg
add
add
mov
sub
xchg
add
xor
and
rol
shl
not
xchg
rol
add
jmp
add
or
xor
sub
xor
or
xchg
dec
xor
xor
xchg
or
sub
jmp
push
sub
mov
xchg
and
mov
add
not
shl
sub
xor
mov
bswap
jmp
mov
add
xor
add
rol
sub
add
sub
add
and
sub
xor
jmp
pop
shr
inc
xchg
bswap
xchg
shl
sub
or
add
and
dec
xor
jmp
pop
add
and
xchg
mov
xor
neg
jmp
push
shl
or
neg
xor
mov
rol
or
add
and
or
mov
ror
and
bswap
xor
jmp
call
or
add
add
and
add
xor
mov
ror
and
shr
xchg
jmp
sub
shr
and
sub
xor
xor
shr
add
bswap
and
jmp
jmp
jmp
jmp
jmp
