adc
pusha
xchg
bound
and
imul
inc
je
push
and
cmps
jo
xor
addr16
je
dec
xchg
or
xor
fs
pop
fs
in
push
push
and
jecxz
ins
test
push
inc
sbb
inc
push
jb
push
push
jecxz
xlat
test
inc
ins
test
push
fs
mov
(bad)
mov
out
and
out
cmp
js
xor
(bad)
cmp
xor
fs
and
div
fwait
adc
or
and
cmp
in
mov
cwde
xor
cmp
xor
cmp
sub
es
jne
aam
push
fs
fsub
push
out
and
loope
cwde
cmp
es
and
fs
pop
sub
call
push
sbb
daa
push
jmp
mov
pop
aam
and
xor
xchg
sub
ins
(bad)
pop
xchg
sub
cmp
jo
push
aam
and
push
push
xchg
sub
in
pop
xchg
sub
pop
aam
and
cmp
fdivr
pusha
jle
out
cmp
popa
movs
adc
adc
pop
pusha
aaa
mov
xchg
fwait
fwait
mov
js
aaa
retf
stos
call
fs
daa
out
daa
das
xchg
xor
sub
pop
ins
scas
fs
pop
out
push
fcom
adc
push
fdivr
mov
fst
push
fs
je
popa
push
push
outs
retf
jmp
fs
mov
inc
dec
push
es
fs
pusha
mov
out
ins
movs
push
outs
fsub
push
pushf
fwait
push
inc
xor
push
js
and
out
sub
mov
adc
mov
push
cmp
stos
test
cmps
mov
push
gs
mov
add
ret
xor
and
(bad)
hlt
or
and
xor
je
and
(bad)
je
push
fs
mov
cmp
xor
push
inc
add
mov
inc
mov
add
fsub
fs
dec
aam
and
inc
aam
push
fs
push
inc
aam
and
fs
push
dec
aam
and
inc
jo
sub
push
fs
loope
cwde
jae
cs
and
cmps
inc
retf
fs
fs
sbb
retf
(bad)
adc
xor
pushf
rol
aaa
push
loope
xchg
(bad)
nop
xchg
fwait
in
in
fs
and
addr16
and
fs
push
hlt
and
xor
push
inc
and
xlat
call
adc
test
or
push
call
push
call
push
pop
and
mov
push
gs
retf
scas
in
push
pushf
nop
xchg
fwait
xor
dec
gs
mov
and
push
jecxz
(bad)
js
scas
jne
int
fs
in
loope
fistp
rcl
fistp
movs
jl
aas
lods
loopne
in
xor
push
ins
sbb
mov
inc
push
xor
xchg
xor
and
pop
fs
push
fs
push
push
fstp
fs
in
mov
ins
aad
pusha
push
jecxz
pop
fwait
push
jo
adc
xchg
adc
push
adc
and
mov
std
pop
push
pusha
push
jecxz
jb
pop
nop
adc
and
ins
mov
push
cmp
mov
xlat
lahf
inc
(bad)
adc
push
inc
push
and
cmp
and
ins
mov
fs
scas
ins
xchg
push
ins
push
movs
enter
cmp
js
and
cwde
mov
fs
scas
fwait
adc
cmp
push
push
movs
enter
arpl
sub
pushf
in
mov
jbe
and
je
adc
sub
jo
xchg
in
cmps
adc
popa
adc
pushf
fs
xchg
fs
dec
pop
mov
cmps
and
popa
adc
and
xchg
gs
test
ins
imul
pop
pop
repz
out
fsubr
in
and
popf
sbb
nop
out
data16
and
sbb
(bad)
pop
fwait
push
cmp
add
nop
and
shr
lods
fwait
arpl
pop
and
enter
out
and
loope
out
xchg
and
pop
imul
jmp
fsubr
cmp
lods
cmps
jbe
sbb
retf
push
adc
xor
test
push
loope
xchg
call
in
cwde
fst
in
icebp
fist
adc
popa
push
movs
out
xchg
and
pop
imul
scas
loope
and
in
xchg
enter
or
jo
stos
cld
popa
and
sbb
fst
call
xchg
xchg
rcr
call
xchg
in
loope
xchg
call
in
popa
and
gs
cmps
xor
cmp
xor
xchg
rcr
fdiv
xchg
in
and
loope
cwde
adc
sbb
and
sbb
sub
xor
in
movs
aam
movs
sahf
and
popf
jnp
mov
cmps
out
or
jo
cs
mov
sub
and
cbw
xchg
add
loope
mov
xor
xor
test
push
dec
fbld
out
and
loope
push
loope
xor
retf
cmps
adc
sbb
sub
xor
in
movs
aam
movs
sahf
and
popf
jnp
mov
cmps
out
or
jo
cs
mov
adc
xchg
in
and
loope
cwde
fsubr
shl
out
and
scas
pusha
jl
aaa
cmp
jmp
xor
je
xor
loopne
(bad)
sub
and
loope
push
loope
xor
popa
push
out
and
fisub
loope
dec
shl
sub
(bad)
jo
sbb
and
sub
mov
or
mov
movs
cmp
lods
cmps
jbe
xor
neg
xor
nop
push
pushf
stos
scas
fwait
popa
push
fsub
fcomp
es
and
(bad)
cmp
cmp
ret
xor
pop
cdq
fdivr
out
cmp
sub
xor
mov
inc
enter
aam
in
and
loope
cmp
lods
cmps
jbe
xor
stos
jbe
and
loop
and
in
mov
nop
scas
push
fs
push
fs
jne
adc
push
fs
mov
fs
and
push
pushf
in
in
pusha
push
and
xchg
cmp
lods
cmps
jbe
xor
adc
icebp
ds
pop
clc
sub
fs
arpl
clc
sub
xor
jo
aaa
sub
and
push
pusha
out
cmp
fwait
push
test
fwait
aaa
sub
pushf
xchg
(bad)
stos
scas
mov
jge
lods
cmps
jbe
and
je
adc
pop
xlat
add
pushf
dec
fndisi(8087
mov
add
push
adc
and
and
push
fs
loopne
pushf
gs
mov
imul
movs
adc
or
ret
push
daa
add
cwde
xor
ja
fs
stos
push
movs
sub
and
cwde
out
daa
cmp
ret
out
and
xchg
jo
and
fs
stos
in
imul
adc
movs
in
data16
push
ins
push
movs
arpl
pushf
in
in
mov
xchg
fwait
cmp
js
cmps
xor
imul
ds
scas
sbb
dec
stos
mov
mov
pop
fsub
fcom
out
pop
fsub
fs
sbb
popa
push
loopne
and
out
data16
sbb
sub
call
pop
clc
sub
fs
jo
clc
sub
xor
pop
fwait
xor
jmp
fs
hlt
(bad)
and
fsubr
jmp
fdivr
fwait
adc
cmp
and
gs
fwait
test
and
loope
fcom
lahf
fsubr
mov
and
(bad)
and
cmp
push
ins
fs
xchg
jo
push
xor
pushaw
out
and
cmp
pop
fdivr
js
xchg
out
xlat
push
fs
in
dec
and
add
push
es
in
mov
sti
xchg
call
fsub
fs
nop
pop
es
and
arpl
push
adc
and
sbb
nop
in
es
fs
push
fs
stos
stos
add
test
pushf
in
data16
xchg
sub
cwde
xor
push
mov
mov
loope
frstor
push
out
sbb
jecxz
pusha
je
pop
fwait
je
in
and
loope
xchg
shl
mov
loopne
sbb
mov
test
es
and
push
fs
and
popa
movs
adc
mov
jmp
fdivr
(bad)
sub
push
fwait
repz
fs
sub
jno
es
and
and
in
mov
pop
mov
push
es
lds
jecxz
fwait
jne
fwait
and
jecxz
nop
sbb
fsubr
inc
clc
sub
fs
sub
and
fwait
call
lods
cmps
jbe
and
je
test
mov
adc
adc
inc
cmp
push
out
and
call
loope
and
ins
clc
sbb
gs
xchg
stos
nop
xchg
sub
sbb
rol
sub
nop
je
jle
and
addr16
pop
adc
adc
or
ins
jmp
dec
clc
(bad)
and
out
sub
pushf
xchg
(bad)
stos
scas
mov
and
ins
movs
push
ins
out
fild
sbb
push
les
and
add
popa
push
gs
stos
scas
out
fild
mov
stos
sub
js
clc
sbb
pop
rcr
and
push
pop
sbb
pusha
pop
adc
fs
fistp
in
in
out
and
call
loope
fcom
fs
xchg
adc
adc
std
and
xor
mov
push
push
pusha
dec
push
fs
fs
bound
inc
dec
push
push
dec
push
push
or
push
movs
out
xchg
and
pop
imul
in
nop
jb
fwait
adc
xchg
adc
add
pushf
xor
and
xchg
test
fwait
adc
or
and
pushf
aam
in
and
jecxz
xchg
stos
scas
fwait
adc
sbb
js
cmps
xor
push
mov
add
xor
inc
adc
fist
and
fwait
call
outs
and
fwait
fs
mov
and
loope
xchg
call
xchg
xor
push
xchg
fwait
fwait
jp
movs
imul
mov
push
and
mov
dec
push
fwait
call
cmps
fwait
xchg
movs
fwait
call
fwait
xor
sbb
mov
push
cmp
push
aam
fst
test
mov
jecxz
fwait
je
in
and
popa
movs
adc
loope
enter
in
loopne
loope
fcom
test
and
loope
fcom
fwait
jo
push
and
adc
fs
push
call
push
xor
sub
loope
sub
or
enter
frstor
ficom
in
mov
fcom
fwait
call
in
mov
scas
in
ficomp
mov
jecxz
fwait
je
in
and
popa
movs
imul
out
popf
xchg
call
push
fwait
call
fs
imul
cmps
xchg
fwait
call
fwait
out
fs
mov
fcom
pop
and
loope
xchg
call
addr16
and
imul
xor
in
cdq
fst
and
fs
mov
ret
fwait
mov
bound
out
rcr
dec
fsub
and
cmps
and
in
mov
gs
mov
fs
cmp
and
fcom
fwait
fwait
and
inc
dec
imul
sahf
xchg
fwait
call
fwait
out
fs
fsubr
adc
scas
loope
fcom
fs
and
movs
test
or
sub
mov
popf
fwait
fwait
mov
xchg
fs
dec
push
gs
rol
fcom
xchg
fsubr
mov
and
mov
fsubr
and
gs
mov
fs
cmp
and
fcom
fwait
fwait
and
inc
dec
imul
fdivr
mov
(bad)
xchg
fwait
out
fs
fsubr
adc
scas
loope
fcom
fs
and
mov
popf
fwait
fwait
mov
xchg
fs
dec
push
gs
rol
fcom
xchg
fsubr
mov
and
mov
fsubr
fs
mov
(bad)
fcom
gs
mov
fs
cmp
and
fcom
fwait
fwait
and
outs
in
int3
fst
push
gs
jmp
and
xor
bound
xchg
xlat
xchg
fwait
out
fs
fsubr
adc
scas
loope
fcom
fs
and
sbb
popa
push
fs
pushf
fwait
fwait
mov
xchg
fs
sub
gs
rol
fcom
nop
fsubr
mov
and
adc
popa
push
call
xchg
out
das
push
fwait
fwait
and
outs
in
int3
fst
in
outs
arpl
aad
fst
popa
adc
sub
in
cdq
fst
fwait
fwait
jp
jne
es
and
xor
fsub
fs
mov
mov
ficom
jg
and
xchg
ins
fs
in
mov
out
cmps
mov
call
cmp
xchg
ins
movs
sub
xchg
pusha
and
loope
xchg
call
xchg
fwait
xor
push
fwait
xor
loope
cwde
stos
mov
mov
fild
loope
ins
fs
xchg
fs
ret
and
shl
fcomp
lods
frstor
jmp
fs
in
cld
fst
les
and
loope
xchg
call
xchg
fwait
xor
in
mov
out
adc
xchg
xchg
xchg
in
cmps
scas
in
mov
fst
es
hlt
fst
jo
and
fs
sub
loope
daa
push
fwait
call
call
mov
and
stos
stos
out
fild
loope
ins
fs
in
mov
cmps
mov
out
pop
fdivr
pop
in
xchg
ins
movs
sub
test
xchg
iret
pop
fs
retf
xchg
call
xchg
fwait
xor
push
fwait
xor
loope
cwde
fwait
dec
push
and
fwait
call
imul
loope
fcom
mov
sbb
cwde
in
sti
pop
mov
cwde
and
add
push
add
rcl
pushf
fst
fs
fdivr
mov
push
out
iret
xchg
call
push
pcmpgtb
jmp
fs
xchg
test
cdq
fcom
test
and
loope
fcom
or
mov
mov
cmps
loopne
call
fwait
call
fwait
jmp
fdivr
jmp
fwait
mov
shl
and
shr
out
xor
sbb
push
out
fxch
xchg
call
inc
in
and
popa
movs
imul
rol
xchg
fwait
mov
push
call
push
call
push
fs
and
popa
movs
imul
xchg
sub
fs
fdivr
out
loope
xchg
call
add
and
popa
movs
imul
ror
xchg
fwait
fs
and
fs
add
loope
push
sti
loope
add
in
adc
fst
int3
fst
call
xchg
xor
xchg
sbb
je
(bad)
frstor
push
rcl
xchg
fwait
out
js
sbb
shr
int3
fwait
call
adc
xchg
fcom
shl
cmp
xchg
fwait
in
loopne
sbb
and
out
in
fwait
call
call
push
call
push
fs
and
popa
movs
imul
fchs
fcom
ins
and
loope
xchg
call
pushf
fwait
call
fwait
xor
push
fwait
xor
loope
cwde
stos
mov
mov
fild
loope
push
fld
xchg
fwait
ins
sub
test
(bad)
call
push
fwait
cdq
fdivr
fwait
ror
call
jmp
ins
stos
scas
and
sahf
xor
ret
fs
xor
imul
push
xchg
fst
push
pusha
(bad)
int3
fst
call
push
call
push
jmp
out
xchg
and
pop
imul
xchg
fwait
in
je
and
fwait
jmp
fdivr
out
loope
xchg
call
xchg
fwait
xor
test
loope
xchg
call
push
call
push
xchg
sbb
push
fwait
call
in
fst
xor
xchg
xchg
xchg
in
cmps
fsubr
int3
fst
call
xchg
imul
xchg
fwait
fwait
test
rcr
xchg
xor
clc
fst
xor
mov
(bad)
xchg
call
xchg
imul
xchg
fwait
fwait
mov
xchg
adc
loope
fcom
fs
fwait
call
fwait
call
ins
out
mov
adc
in
mov
fst
xor
mov
fst
loope
fcom
fwait
xor
jecxz
mov
test
fwait
xor
jecxz
mov
test
fwait
xor
loope
push
sti
loope
out
cmps
mov
push
fdivr
ins
lea
fwait
fwait
jl
aas
lods
loopne
in
or
fs
js
fs
leave
fs
add
push
xor
stos
or
pop
push
mov
(bad)
sub
and
mov
push
fs
arpl
and
mov
fsubr
pop
in
sub
mov
push
in
cwde
fcom
and
sub
mov
fld
sbb
loope
push
fucom
adc
fist
cmp
mov
and
push
xor
aas
add
loope
xchg
(bad)
stos
scas
or
xchg
sub
add
dec
and
dec
push
add
mov
and
lods
cmps
jbe
and
test
ins
ficomp
fild
stos
cwde
gs
stos
scas
fwait
popa
push
fsub
fs
mov
inc
daa
clc
and
and
xchg
gs
mov
and
sbb
and
ins
mov
fs
mov
bound
and
popa
addr16
and
fs
mov
and
bound
shl
sub
and
scas
push
and
and
jmp
push
fmul
xchg
sub
jo
and
and
fwait
es
and
in
dec
imul
and
test
sub
and
imul
sbb
fs
push
imul
push
fs
and
bound
adc
leave
mov
bound
popa
sbb
and
popa
sbb
and
sub
popa
and
popa
sbb
and
and
fs
es
and
adc
fs
xchg
arpl
imul
std
and
arpl
push
fcom
sti
and
adc
fs
cs
and
imul
fcomp
fs
push
outs
push
movs
retf
fs
mov
in
jo
and
mov
enter
mov
jl
sub
outs
push
movs
retf
fs
xchg
dec
shl
mov
and
iret
cmc
and
fs
fcomp
fs
outs
push
movs
retf
fs
mov
fs
jo
and
addr16
and
fs
fcom
fs
es
sti
and
shl
mov
and
and
(bad)
and
sti
bound
jp
push
and
mul
and
mov
push
popa
sbb
and
fs
and
bound
popa
sub
and
retf
fs
mov
bound
popa
sbb
and
and
fs
push
sti
and
and
in
rol
in
in
popa
pop
mov
loop
and
(bad)
in
imul
push
push
and
lods
and
sub
imul
ins
movs
pop
cmp
pushf
sub
arpl
popa
push
sbb
stos
and
pop
fmul
xchg
sub
jo
and
fsubr
shl
(bad)
dec
add
mov
xchg
popa
pop
mov
pop
xchg
in
in
imul
push
movs
retf
fs
xchg
int3
imul
es
and
fs
in
mov
lods
(bad)
leave
es
cwde
dec
xchg
stos
scas
imul
sbb
and
and
and
shl
leave
es
xchg
imul
xchg
pop
movs
and
imul
sbb
es
hlt
and
jmp
imul
fs
arpl
and
pusha
hlt
and
jmp
and
jge
sbb
push
sahf
bound
out
sub
and
and
pusha
adc
call
fs
cwde
gs
stos
scas
in
lods
(bad)
cmc
and
cmp
in
and
call
imul
and
popa
ins
mov
fs
stos
cwde
dec
xchg
stos
scas
out
das
clc
and
and
out
jno
clc
and
test
push
std
and
mov
lds
clc
and
sbb
hlt
arpl
mov
and
inc
das
clc
and
and
out
jno
clc
and
test
rol
and
lds
mul
hlt
arpl
mov
popa
push
(bad)
pusha
mov
fs
jecxz
cmp
jmp
xor
adc
jns
test
push
and
push
fsub
fs
popa
fisub
and
in
mov
and
mov
jl
fs
jg
es
inc
fisub
and
mov
xor
and
and
in
mov
and
mov
jl
fs
xlat
cmc
and
and
mov
jl
fs
adc
and
and
mov
push
es
lods
cmps
jbe
and
je
mov
mov
fsubr
shl
or
cdq
sub
shl
xor
and
fs
mov
mov
iret
push
and
push
pop
fs
add
xchg
popa
adc
mov
mov
mov
scas
and
sub
fadd
fs
in
and
sbb
es
and
push
fs
(bad)
and
xchg
scas
and
and
mov
adc
frstor
push
and
push
fwait
jno
cmc
and
mov
mov
sub
push
fs
ins
push
(bad)
fcomp
fs
sub
shr
fdiv
and
fwait
popa
push
fsub
fs
push
fs
and
pusha
push
and
adc
and
push
hlt
in
loopne
adc
and
fs
push
fsubr
and
cmp
fs
or
push
lods
cmps
jbe
and
fisttp
and
cwde
stos
sub
xchg
add
loope
mov
fs
and
jecxz
je
and
fs
icebp
loope
mov
add
in
pushf
jae
and
push
push
fcomp
sti
and
enter
fistp
and
xor
jl
loope
dec
fndisi(8087
mov
and
fwait
jno
mul
and
in
mov
stos
(bad)
out
das
cmp
xor
fs
popa
push
fsub
adc
pop
fwait
and
adc
shl
adc
pop
fwait
and
adc
shl
adc
pop
fwait
and
adc
shl
adc
pop
fwait
and
adc
shl
adc
pop
fwait
and
imul
and
addr16
test
push
mov
shl
imul
ins
push
fsub
imul
push
pop
cmps
sub
repz
sahf
imul
imul
sahf
out
push
shl
jle
cmps
push
adc
sahf
mov
jl
pop
loope
or
fucomi
mov
fisub
push
and
cmp
sub
jmp
and
mov
xchg
cmp
jmp
and
xor
jg
fs
sub
out
xor
in
ja
imul
out
ins
in
and
jecxz
je
sub
popa
and
xor
and
pop
shl
fadd
movs
jo
push
popa
mov
sub
addr16
fsubr
push
fcom
shl
and
pop
pop
daa
sbb
in
and
nop
out
and
pop
bound
sbb
mov
push
bound
pop
in
pushf
mov
ins
bound
sbb
pop
popf
push
in
pushf
mov
outs
inc
adc
js
xor
ins
out
daa
jmp
arpl
push
adc
pushf
sub
push
bound
xor
pushf
mov
outs
adc
pushf
out
imul
and
nop
out
daa
shl
push
mov
adc
and
xchg
out
xor
in
ja
imul
mov
loope
pushf
test
je
imul
jmp
pusha
test
pushf
in
aaa
ins
gs
pop
sbb
nop
sub
pop
outs
adc
pushf
out
push
pop
and
nop
out
and
pop
bound
sbb
mov
fisub
pop
push
adc
xchg
fs
pop
fsubr
fs
jo
int
push
jmp
sahf
mov
jge
and
in
push
out
ficom
lods
cmps
jbe
and
je
popa
adc
pusha
(bad)
js
xchg
(bad)
arpl
popa
and
fadd
xchg
in
and
sbb
test
push
sbb
fs
mov
shl
imul
js
xchg
jecxz
jno
stc
and
adc
xor
cmps
sahf
fwait
fwait
jp
popa
adc
ins
jnp
retf
push
pop
lea
push
add
sti
imul
test
outs
fwait
and
leave
pusha
hlt
arpl
and
sbb
stos
ins
jp
addr16
out
and
and
mov
gs
sub
gs
jbe
in
je
jne
hlt
arpl
lahf
es
out
xchg
in
xchg
and
gs
daa
loope
pushf
in
push
lea
cmp
popa
adc
xchg
dec
pushf
scas
cmp
popa
and
and
push
gs
xor
xor
data16
pop
jge
fsub
mov
fist
cmp
js
cmps
xor
push
fs
xor
in
xchg
fwait
xor
push
arpl
fsubr
loope
xchg
adc
aad
mov
xor
loope
xchg
add
sub
jb
fld
mov
fwait
and
imul
in
es
and
enterw
mov
mov
std
xchg
fwait
psubsw
push
and
mov
jp
fs
mov
mov
icebp
jae
and
xchg
int3
xchg
fwait
psubsw
push
and
movs
xchg
loope
sar
fwait
fwait
pop
jge
std
bound
cmp
mov
jno
stc
and
mov
xchg
imul
shld
es
sub
xchg
fwait
mov
fsubr
shl
test
jno
mov
fs
(bad)
pusha
and
shl
test
jno
mov
mov
popa
adc
mov
loopne
imul
loope
mov
es
es
icebp
mov
xchg
fwait
in
lock
jb
sti
ins
fs
loope
xchg
inc
dec
push
mov
jnp
fs
in
xchg
gs
in
xchg
aad
mov
xchg
and
loopne
je
and
nop
int3
xchg
fwait
adc
in
loopne
xchg
fwait
xor
aaa
cmp
and
fs
test
call
fcom
mov
sti
mov
fwait
retf
addr16
fsubr
mov
ins
jecxz
push
out
call
out
stc
mov
sub
stos
mov
mov
test
cwde
out
pop
shl
and
rcr
fild
and
fsubr
and
mov
and
imul
ins
fs
push
fwait
fwait
enter
and
mov
push
cwde
mov
xchg
fwait
fwait
jp
loope
int3
xchg
fwait
and
out
cmps
in
fadd
fwait
and
loope
xchg
fcom
es
mov
pop
je
lea
fs
icebp
xchg
int3
xchg
fwait
movs
shr
ss
cmc
and
loope
nop
int3
xchg
fwait
out
pushf
mov
xlat
xchg
in
cli
test
data16
xchg
out
push
retf
mov
fwait
test
nop
mov
xchg
movs
xchg
loope
movs
retf
test
imul
and
loope
int3
xchg
fwait
in
pushf
mov
and
rcr
and
fld
push
xor
sahf
sub
ds
in
les
and
and
in
mov
mov
sbb
push
loope
mov
fwait
test
les
mov
stos
js
and
loope
std
xchg
fwait
out
cmps
enter
jecxz
lock
xchg
fwait
addr16
loope
std
xchg
fwait
in
cmps
les
mov
xchg
fwait
in
cmps
mov
fadd
js
cmps
sar
sar
mov
fwait
retf
or
fs
loope
cld
xchg
fwait
pop
cmps
aam
fcomp
mov
sar
xchg
fwait
cmps
mov
fsubr
fld
push
stos
or
and
push
and
icebp
sar
xchg
fwait
movs
leave
fs
mov
mov
push
and
icebp
(bad)
mov
fwait
enter
push
fsub
fs
icebp
xchg
int3
xchg
fwait
movs
shr
push
mov
fcom
icebp
and
addr16
rol
out
aaa
jge
cmc
arpl
icebp
xlat
xchg
and
mov
push
mov
imul
sbb
loopne
and
out
cmps
pushf
mov
push
and
pusha
imul
jg
and
loope
xchg
and
out
xchg
jmp
loope
mov
fwait
in
(bad)
mov
mov
rol
mov
fwait
stos
cwde
sub
sbb
dec
stos
cwde
out
and
pop
fs
jbe
xchg
mov
push
out
daa
call
in
xchg
mov
push
test
and
icebp
xor
in
xchg
jge
mov
xor
bound
and
pop
gs
mov
in
push
daa
loope
cmp
fwait
(bad)
mov
jecxz
nop
int3
xchg
fild
out
xor
je
sbb
cmp
(bad)
fcom
(bad)
mov
and
fdiv
mov
fwait
in
fs
push
gs
adc
call
fs
and
adc
call
fs
popa
and
adc
das
(bad)
lods
sub
loope
std
xchg
fwait
ins
jecxz
shl
pusha
adc
addr16
rol
sar
xchg
mov
adc
das
call
fwait
fs
sub
rcl
fwait
fwait
and
icebp
nop
int3
xchg
fwait
movs
shr
loop
movs
ret
sub
jecxz
jno
mov
fwait
stos
ins
jne
cmps
pushf
mov
int3
xchg
fwait
fs
push
popa
adc
xchg
fwait
fwait
mov
xchg
imul
shld
es
dec
fcom
lods
cmps
jbe
and
je
cmp
pushf
call
jbe
and
and
imul
adc
push
out
and
loope
test
sub
in
and
loope
pushf
scas
adc
fldenv
and
imul
shr
fldenv
and
arpl
xchg
shl
fs
movups
call
and
cmp
fs
xor
cmp
adc
call
outs
in
xchg
gs
xchg
jne
(bad)
scas
and
and
addr16
xor
sub
call
and
out
and
and
and
and
and
push
sub
daa
gs
test
fs
pushf
and
ins
in
fsubr
shl
in
cmps
mov
ins
adc
xchg
popa
adc
jmp
and
ins
in
fsubr
shl
xchg
daa
and
arpl
fld
pusha
mov
sub
cmps
in
jbe
imul
imul
mov
ins
in
fsubr
and
and
outs
aad
gs
push
ins
in
fsubr
fisubr
sbb
addr16
xchg
fwait
fwait
in
cwde
fs
sub
xor
push
outs
in
fsubr
outs
mov
adc
in
fcmovnb
and
shl
jmp
and
imul
lods
cmps
jbe
xor
sub
aam
jmp
in
addr16
fs
xchg
fs
push
fs
outs
ss
xchg
out
xchg
and
pop
imul
call
arpl
enter
fsubr
mov
stos
cmp
js
cmps
xor
push
fs
fcmovnu
dec
ja
in
fistp
mov
dec
fndisi(8087
mov
fwait
push
pusha
jmp
fwait
jae
jb
and
loope
mov
and
mov
fndisi(8087
mov
lods
loopne
in
xor
mov
push
ins
push
and
cmp
loopne
in
and
ja
in
and
and
fs
push
push
fs
imul
push
mov
push
call
push
push
pushf
aam
in
and
loope
push
jecxz
ss
and
mov
push
movs
je
add
out
fs
sub
and
fs
fs
jecxz
push
and
sub
aaa
fwait
push
xchg
xor
or
fild
pushf
in
in
cmp
jmp
xor
dec
or
pushf
and
or
and
push
daa
add
add
test
adc
sbb
and
mov
and
call
xor
push
and
mov
jb
fs
fs
movs
mov
push
gs
xchg
in
cmps
dec
push
aaa
fwait
push
xor
push
push
dec
cwde
test
and
mov
jb
fs
mov
and
mov
and
fs
aas
lods
loopne
in
and
jl
inc
fs
and
call
pusha
push
and
fs
push
ins
mov
cmp
scas
in
pushf
aam
in
and
loope
out
xchg
adc
test
dec
dec
push
fs
push
fs
push
fwait
adc
xchg
adc
sbb
push
in
mov
and
movs
arpl
cmp
jb
xor
test
ins
mov
test
out
and
in
cld
and
ins
pop
gs
pop
sbb
adc
aaa
fcomp
es
adc
fs
adc
dec
push
test
and
out
xor
(bad)
xor
pusha
cmp
sub
cmp
lods
ins
daa
sbb
fwait
(bad)
pop
and
dec
and
adc
or
ret
sub
cmp
lods
ins
out
xchg
in
cmps
and
cmp
jmp
xor
ins
test
push
jae
pop
in
fild
test
mov
adc
pusha
pop
jae
push
test
mov
out
and
sbb
fs
cmps
ss
out
and
loope
gs
xor
loopne
in
and
push
push
in
sti
imul
inc
test
and
fs
mov
imul
rcr
or
mov
and
loope
in
js
adc
jo
out
pushaw
imul
push
and
or
or
mov
and
loope
imul
popa
xchg
mov
test
sbb
push
pusha
mov
add
and
or
imul
scas
test
push
in
xchg
pop
add
xchg
imul
ins
xchg
out
jbe
and
call
pusha
out
and
xchg
gs
xchg
fs
loope
xchg
shl
mov
das
shl
cmp
dec
mov
test
and
shl
imul
imul
mov
retf
loope
dec
data16
outs
mov
gs
and
shl
and
fbstp
bound
mov
imul
imul
imul
shl
dec
mov
sub
(bad)
bound
stos
cmp
js
cmps
add
clc
hlt
hlt
mov
fs
push
and
mov
sbb
xor
hlt
loope
clc
hlt
hlt
mov
dec
hlt
mov
hlt
push
sub
hlt
hlt
mov
hlt
hlt
mov
hlt
and
clc
hlt
hlt
mov
hlt
hlt
mov
hlt
and
clc
hlt
hlt
mov
mov
adc
clc
hlt
hlt
mov
fs
push
es
and
sub
loope
clc
hlt
hlt
mov
js
mov
hlt
push
sub
hlt
hlt
mov
movs
pusha
mov
hlt
pop
sti
clc
hlt
hlt
mov
mov
mov
hlt
add
mov
(bad)
in
xor
hlt
hlt
mov
add
clc
hlt
hlt
mov
popa
push
push
sub
dec
pop
and
clc
out
jl
clc
hlt
hlt
test
pusha
hlt
mov
out
xor
clc
hlt
hlt
adc
hlt
mov
out
daa
clc
hlt
hlt
sbb
sbb
mov
clc
out
and
hlt
hlt
push
mov
add
hlt
inc
adc
je
push
sbb
xor
fs
push
and
sub
hlt
mov
fs
push
hlt
hlt
mov
hlt
hlt
mov
hlt
out
push
ss
mov
hlt
fbld
loope
hlt
mov
hlt
dec
loop
hlt
hlt
mov
mov
mov
hlt
xor
clc
hlt
hlt
mov
lods
hlt
mov
hlt
xchg
aam
hlt
hlt
mov
hlt
hlt
mov
hlt
cmp
clc
hlt
hlt
mov
sbb
xor
hlt
push
adc
hlt
hlt
mov
pushf
hlt
mov
hlt
xchg
clc
hlt
hlt
mov
fs
push
hlt
hlt
mov
ss
mov
hlt
fcomip
mov
fs
mov
dec
loop
hlt
hlt
mov
mov
mov
hlt
xor
clc
hlt
hlt
mov
lods
hlt
mov
hlt
xchg
aam
hlt
hlt
mov
hlt
hlt
mov
hlt
cmp
clc
hlt
hlt
mov
and
sub
push
adc
hlt
hlt
mov
pushf
hlt
mov
hlt
xchg
clc
hlt
hlt
mov
hlt
hlt
mov
hlt
add
push
jne
fsubr
out
cmp
xor
test
ins
out
data16
mov
pop
inc
jecxz
cwde
stos
stos
cmps
stos
cmp
mov
(bad)
clc
push
gs
jae
cli
xchg
fcom
xor
push
outs
mov
dec
retf
cmp
fs
and
and
arpl
imul
xchg
in
popf
or
movs
out
data16
xchg
(bad)
cmps
in
jbe
fdivr
inc
xchg
in
and
loope
cwde
test
sbb
pop
pop
je
sti
imul
jmp
ins
jp
shr
push
js
mov
xchg
js
shr
dec
scas
stos
js
and
fstp
and
ins
or
push
xchg
xor
(bad)
sub
shl
fdivr
in
mov
call
gs
sub
and
bound
mov
xchg
jae
push
sub
push
mov
push
sbb
add
sub
push
out
xchg
fwait
fwait
jl
aas
lods
loopne
in
and
mov
dec
and
fisubr
imul
mov
popf
jnp
mov
cmps
in
jbe
out
out
es
and
push
fwait
adc
sbb
fcom
mov
dec
and
imul
out
jo
(bad)
fldenv
and
pop
mov
es
mov
xor
adc
fwait
push
push
rcr
and
xchg
addr16
lods
fldenv
and
mov
das
add
imul
sub
xor
and
jl
jmp
es
sub
cmps
or
push
and
popa
push
cwde
pusha
and
test
sub
xchg
push
mov
and
and
push
and
and
fldenv
and
out
nop
pusha
(bad)
es
fldenv
pop
and
sbb
fs
sub
fs
mov
cmps
sub
mov
sar
stos
push
mov
popa
push
fs
sub
fs
and
jecxz
mov
loope
shl
hlt
loope
mov
arpl
(bad)
popa
push
movs
fldenv
xor
ret
and
mov
aad
fs
sub
pop
shr
nop
test
mov
popa
push
nop
pusha
and
test
sub
pushf
push
mov
and
and
sub
fldenv
and
out
cwde
pusha
(bad)
es
fldenv
pop
and
sbb
mov
xchg
cmp
jo
ret
aad
fs
mov
popa
push
xchg
addr16
lods
fldenv
and
xor
mov
sbb
push
es
fs
in
dec
imul
mov
sbb
jl
xchg
sub
addr16
out
es
leave
cwde
fcom
fs
and
pushw
and
fs
push
ins
mov
and
sub
jae
and
fs
push
mov
fwait
push
mov
push
mov
retf
scas
sub
and
and
fsub
fs
shl
mov
stos
cmp
js
cmps
xor
push
fs
xor
std
pop
into
pop
fwait
(bad)
sbb
in
cmps
test
in
sbb
es
fs
jns
cld
sub
pop
xchg
in
in
fisubr
and
mov
or
test
arpl
stos
mov
mov
icebp
fcom
fwait
gs
push
adc
push
je
loope
xchg
leave
test
jnp
jmp
stos
out
inc
loopne
pop
fcom
fwait
gs
push
scas
mov
fsubr
xor
fs
loope
cmps
gs
data16
fwait
adc
fwait
push
mov
push
fwait
fwait
jae
hlt
lds
or
cld
sub
xchg
cdq
fdivr
mov
push
fs
and
fs
and
fs
jmp
fwait
jae
mov
and
loope
xchg
fcomp
es
bound
and
fs
in
xchg
cdq
fcom
fs
nop
fldenv
and
fwait
mov
and
cwde
gs
stos
scas
fwait
rcl
xchg
fwait
fwait
retf
stos
and
popa
adc
mov
es
loope
fst
cs
loope
ficom
mov
fst
fs
push
fs
vpsraw
xchg
popa
adc
mov
fs
movs
mov
fst
fs
push
es
adc
fs
mov
push
in
jl
fs
aas
lods
loopne
in
and
xlat
push
sbb
or
adc
popa
push
in
and
loope
out
xchg
fs
xchg
xor
and
pop
fs
push
fs
push
push
inc
push
fs
shr
lods
fwait
arpl
pop
and
fwait
adc
ds
gs
push
adc
and
mov
push
mov
jge
lods
cmps
jbe
xor
jb
mov
push
mov
push
fwait
adc
xchg
adc
push
push
and
out
jo
cmp
cmp
fild
fistp
in
mov
scas
sub
je
push
fs
adc
and
push
lods
cmps
jbe
xor
fistp
in
in
and
add
push
push
fs
push
adc
sub
and
adc
pop
movs
(bad)
adc
adc
jo
push
je
fcomp
mov
imul
jecxz
push
pop
imul
jecxz
jne
fild
in
in
adc
and
and
mov
out
xor
xor
push
jl
and
push
in
and
xlat
fild
jmp
fs
fs
fistp
in
in
and
and
fcomp
mov
jecxz
pusha
push
jecxz
pop
jmp
dec
push
je
push
xchg
mov
jecxz
push
movs
fs
jle
push
xchg
mov
fs
jl
das
ror
sub
cmp
jb
xor
pushf
into
add
cmp
mov
out
xchg
mov
and
inc
retf
outs
and
mov
gs
in
pushf
adc
mov
and
pushf
push
inc
push
movs
arpl
mov
fs
push
mov
and
push
fs
jge
and
adc
pop
movs
(bad)
xor
sub
cs
sub
xchg
cmp
cmp
cmps
fnsave
std
jbe
mov
out
and
ins
jmp
fs
cmp
loope
xor
push
pusha
out
cmp
scas
and
test
cwde
in
loope
cmps
in
jbe
in
mov
sbb
nop
dec
mov
sti
cmp
and
push
pushf
dec
sti
jecxz
je
ins
data16
nop
out
and
mov
and
in
push
fs
popa
mov
pop
and
in
and
sub
in
fucomip
inc
fs
mov
xchg
and
fs
scas
in
fucomip
add
fwait
adc
loope
gs
cmp
and
and
loope
dec
loope
xor
enter
jl
aas
lods
loopne
in
and
scas
and
sbb
fs
retf
cmp
fs
and
scas
ins
xor
mov
pusha
push
push
xchg
enter
daa
pop
out
push
popa
movs
adc
shl
jmp
adc
sbb
or
scas
and
sub
sbb
stos
nop
fnstsw
push
in
mov
scas
add
jle
push
mov
mov
loope
mov
aas
out
sbb
aas
or
cld
sub
adc
fs
mov
call
pushf
push
mov
and
loopne
in
sbb
push
sub
fist
and
rcl
int
ficom
fwait
call
call
loope
in
shr
in
in
mov
lea
arpl
aad
fst
mov
popa
push
jbe
and
adc
sub
and
loope
xchg
cdq
fwait
fwait
jno
and
fwait
in
cmps
mov
fnstcw
mov
cdq
fcomp
icebp
not
pop
fs
push
mov
popa
push
fwait
call
fs
push
pusha
or
and
mov
cwde
dec
xchg
stos
scas
out
and
loope
mov
xchg
fwait
in
loop
lods
fwait
arpl
pop
and
ins
out
mov
fwait
cdq
fsubr
ss
pop
test
ins
dec
cmp
adc
and
mov
and
fwait
mov
fs
sub
fs
xchg
popf
mov
add
fist
and
mov
xchg
stos
scas
mov
push
fs
ins
sbb
xchg
and
pop
and
xchg
fidivr
out
(bad)
xchg
call
push
fs
sub
fs
popf
mov
add
fist
and
mov
and
fwait
mov
sub
mov
sub
fs
popf
mov
add
fist
and
mov
fs
outs
and
xchg
(bad)
sahf
popa
pop
dec
mov
inc
push
popf
ss
cwde
fst
es
add
and
mov
dec
jp
es
loope
fcom
mov
sub
out
in
out
fs
dec
and
outs
and
xchg
(bad)
sahf
popa
pop
jnp
xchg
ret
sub
xchg
fwait
call
out
sub
outs
mov
fist
and
mov
fs
outs
and
xchg
(bad)
sahf
popa
pop
jnp
xchg
ret
sub
xchg
fwait
call
out
sub
addr16
fist
daa
fs
mov
fs
outs
and
xchg
(bad)
sahf
popa
pop
dec
mov
pusha
push
fs
aad
fst
es
cli
daa
and
mov
and
sub
in
mov
and
mov
push
or
std
sub
mov
cdq
fdivr
mov
pusha
push
fwait
cdq
fdivr
fwait
adc
jecxz
cwde
fcom
mov
xor
out
mov
push
fs
ins
sbb
ja
fs
pop
and
xchg
fidivr
out
(bad)
xchg
call
push
fs
lahf
sub
mov
mov
fs
popf
mov
add
fist
daa
fs
mov
fs
outs
and
xchg
(bad)
sahf
popa
pop
jnp
scas
std
sub
xchg
fwait
call
out
sub
(bad)
push
out
es
es
cwde
fst
fs
pusha
in
xchg
adc
mov
jo
in
cwde
fst
es
sbb
and
mov
and
outs
and
std
aam
out
es
es
cwde
fst
fs
pusha
mov
push
fs
ins
sbb
cwde
test
and
fwait
mov
fs
sub
bound
icebp
xchg
popf
mov
and
push
fs
aam
ss
sahf
xchg
fwait
call
fs
xchg
and
je
adc
loopne
and
shl
cdq
fwait
and
mov
fwait
and
mov
push
push
fwait
cdq
fsubr
sbb
xchg
addr16
xchg
cdq
fwait
sbb
pushf
fst
mov
(bad)
xchg
cdq
fwait
sub
pop
pop
stos
nop
fnstsw
push
out
inc
cmp
pushf
call
mov
es
xchg
and
aam
cdq
fsub
mov
in
xor
sahf
push
or
cld
sub
push
mov
out
fmul
fs
vpsraw
fcom
loope
fcom
fwait
cdq
fsubr
fs
adc
xchg
pushf
fwait
call
fs
fwait
call
fs
ja
fs
mov
fs
outs
and
xchg
(bad)
sahf
popa
pop
jnp
cmp
sub
xchg
fwait
call
out
sub
(bad)
push
out
es
es
cwde
fst
fs
pusha
in
xchg
adc
and
and
outs
and
xchg
(bad)
sahf
popa
pop
jnp
xchg
ret
sub
xchg
fwait
call
out
sub
loope
fcom
fs
cmps
pushf
fwait
call
fwait
pop
cmps
lods
fwait
cdq
fsub
sti
fst
fwait
cdq
fsub
xchg
xchg
vpsraw
sbb
and
loope
pushf
fcom
fs
xchg
imul
xchg
push
shl
mov
fs
fs
cmps
nop
fwait
call
fs
cmps
nop
fwait
call
fwait
fwait
push
jl
cmp
cmps
pushf
fwait
cdq
fdivr
mov
push
jmp
fwait
mov
push
gs
xchg
in
mov
fcom
xchg
in
in
loope
and
loope
fcom
nop
ficom
fs
in
nop
ficom
fwait
fwait
mov
cwde
fwait
cdq
fcom
fwait
fwait
push
jo
rcl
xchg
cdq
fwait
test
cwde
fst
es
ret
push
loop
and
outs
and
std
aam
out
es
es
cwde
fst
fs
pusha
in
xchg
and
pop
fs
outs
and
xchg
(bad)
sahf
popa
pop
jnp
scas
std
sub
xchg
fwait
call
out
sub
(bad)
push
out
es
es
cwde
fst
fs
pusha
fwait
rcl
xchg
cdq
fwait
retf
stos
pop
fs
mov
fwait
cmps
pushf
fwait
call
fwait
xor
fstp
or
push
call
call
push
call
jmp
ins
retf
stos
pop
fs
outs
and
xchg
(bad)
sahf
popa
pop
jnp
cmp
sub
xchg
fwait
call
out
sub
(bad)
push
out
es
es
cwde
fst
fs
pusha
in
xchg
aam
in
loope
xchg
cdq
fwait
stos
scas
mov
sbb
push
popf
out
ins
sbb
cwde
test
and
fwait
mov
lods
ins
or
mov
fs
cwde
fst
fs
pusha
mov
push
fs
ins
sbb
dec
pop
fs
pop
and
xchg
fidivr
out
(bad)
xchg
call
push
fs
push
fs
popf
mov
add
mov
fist
pop
fs
mov
dec
and
mov
push
fs
ins
sbb
mov
rcr
xlat
push
fs
push
fs
popf
mov
add
fist
pop
fs
mov
fs
outs
and
xchg
(bad)
sahf
popa
pop
dec
mov
inc
push
popf
ss
cwde
fst
es
adc
push
dec
mov
fist
pop
fs
mov
xchg
stos
scas
mov
push
fs
ins
sbb
cwde
test
and
fwait
mov
fs
mov
fs
cwde
fst
fs
pusha
mov
push
fs
ins
sbb
cwde
test
and
fwait
mov
push
fs
mov
fs
cwde
fst
fs
pusha
in
and
scas
pop
fs
outs
and
xchg
(bad)
sahf
popa
pop
jnp
xchg
ret
sub
xchg
fwait
call
out
sub
loope
fcom
cwde
fst
es
ret
push
loop
and
outs
and
std
aam
out
es
es
cwde
fst
fs
pusha
or
std
sub
xchg
fwait
call
out
sub
(bad)
push
out
es
es
cwde
fst
fs
pusha
fcom
pop
push
loope
fcom
jle
and
mov
push
in
mov
scas
je
and
out
sahf
xchg
fwait
call
fs
addr16
fs
mov
fs
outs
and
xchg
(bad)
sahf
popa
pop
jnp
xchg
ret
sub
xchg
fwait
call
out
sub
mov
rcr
xchg
call
jmp
ins
retf
fistp
and
outs
and
xchg
(bad)
sahf
popa
pop
jnp
xchg
ret
sub
xchg
fwait
call
out
sub
xchg
pop
pushw
scas
push
fs
popf
mov
sbb
and
pop
and
std
aam
ss
sahf
xchg
fwait
call
fs
pop
pop
fs
mov
and
fwait
mov
lods
ins
push
and
fs
and
fs
and
fs
fwait
adc
and
push
cdq
fwait
mov
push
call
add
pushf
fwait
call
fwait
call
fwait
mov
fs
mov
adc
xchg
fwait
call
in
xchg
and
repnz
and
loope
xchg
cdq
fwait
jl
aas
lods
loopne
in
and
imul
nop
xchg
sub
in
mov
enter
xchg
xor
test
es
in
fwait
call
fs
nop
push
pushf
stos
scas
push
fs
out
mov
fst
fs
xchg
out
aas
call
and
dec
push
fs
mov
fs
imul
xchg
or
jmp
fs
mov
fs
cmp
and
mov
rcl
in
jg
fs
cmps
xor
push
fs
xor
mov
stos
nop
push
pushf
stos
scas
out
mov
jecxz
ins
mov
test
test
loope
hlt
ficom
out
pusha
imul
xchg
fwait
in
fild
in
in
mov
mov
retf
and
and
xor
popaw
popa
loope
(bad)
ficom
push
fs
loope
ficom
cdq
fadd
out
xor
jecxz
sbb
xchg
fwait
jmp
ja
gs
std
cld
cdq
fcom
in
mov
and
loope
xchg
(bad)
les
adc
sbb
fcom
fwait
mov
pop
fs
ins
out
scas
adc
outs
es
adc
xchg
fwait
jmp
ja
gs
std
in
cdq
fcom
fs
push
ficom
push
fwait
fwait
mov
push
jmp
fwait
jae
pop
and
xor
push
pop
and
pusha
and
loope
xchg
fwait
fwait
jae
retf
mov
jmp
fs
push
xchg
fsubr
mov
imul
push
movs
retf
and
or
and
jmp
fdivr
jmp
fwait
jae
push
push
and
shl
(bad)
cdq
fcom
(bad)
in
cdq
fcom
(bad)
les
cmps
fcomp
sub
xchg
fwait
out
dec
in
loope
xchg
fwait
fwait
sub
pop
push
and
movs
retf
and
les
fist
into
pop
and
pushf
or
rcr
cmps
xchg
call
push
fwait
fwait
stos
in
loopne
fcom
jmp
fwait
jae
jb
and
mov
fndisi(8087
mov
fsubr
and
fwait
and
add
in
mov
mov
xchg
adc
push
mov
fwait
and
mov
scas
in
fcomp
xor
loope
ficom
fcomp
and
fs
add
fs
and
fs
fdivr
push
fs
lahf
push
and
imul
ror
ficom
fs
nop
dec
pushf
stos
scas
fwait
shl
jp
and
sbb
fist
into
push
and
mov
ficom
in
sub
cwde
call
es
dec
push
fs
cmps
ins
jecxz
jg
retf
imul
push
fs
loope
ficom
pop
cdq
fcom
ins
mov
pop
push
fs
xchg
adc
add
push
fs
imul
xchg
xor
retf
fist
and
gs
mov
fs
in
cwde
call
fwait
fwait
mov
xchg
fs
dec
out
mov
cmp
hlt
cdq
fsubr
mov
enter
mov
jmp
fs
fdivr
mov
pop
push
fs
in
loope
xchg
fwait
fwait
stos
scas
xor
push
fwait
fwait
retf
stos
push
and
fwait
mov
in
clc
cdq
fcom
outs
and
cdq
fsub
mov
cmps
daa
push
mov
xor
jle
fnclex
sub
pop
pushf
in
in
adc
push
fs
cmps
add
pop
pushf
in
in
adc
rcl
and
cmps
add
js
leave
adc
in
loope
in
xor
cmp
loope
in
xor
shl
frstor
xor
imul
xlat
in
je
cmp
fs
rcl
and
mov
and
out
je
imul
bound
daa
in
jl
loope
and
sbb
and
mov
stos
cwde
out
cmp
push
fs
xchg
jmp
xor
dec
push
fs
pushf
dec
fndisi(8087
mov
shl
jmp
shl
jmp
mov
pop
fs
shl
fucom
and
shl
fild
imul
xor
adc
and
mov
and
add
sbb
mov
push
(bad)
push
and
and
cmp
mov
pop
fs
ds
and
and
aaa
cmp
jmp
jnp
push
fs
jne
out
cmp
xlat
and
paddsw
loop
and
test
cmps
aam
fsubr
jnp
and
loope
ret
xchg
fwait
xor
in
movs
test
xchg
xor
inc
mov
fs
stos
dec
fs
mov
hlt
and
in
sub
fwait
shl
mov
fs
mov
jnp
(bad)
das
or
push
in
loope
mov
movs
arpl
test
and
loope
ret
xchg
fwait
xor
in
movs
test
xchg
xor
retf
pop
dec
and
adc
loope
dec
fndisi(8087
mov
test
xchg
mov
push
ins
movs
push
jno
shr
mov
mov
inc
fs
mov
push
movs
cmp
lods
cmps
jbe
sbb
retf
sti
dec
and
xor
test
ins
fimul
scas
inc
push
and
xchg
and
pusha
and
cmp
cli
jmp
fwait
arpl
pop
and
ins
in
stc
imul
ins
dec
cmp
mov
pop
push
in
mov
fs
cwde
dec
xchg
stos
scas
or
cld
sub
push
mov
push
mov
sub
fs
ins
sbb
cwde
test
and
loope
ret
xchg
fwait
xor
xchg
push
fs
mov
fs
outs
and
xchg
(bad)
sahf
popa
pop
inc
mov
adc
fld
fs
aad
test
xchg
xor
mov
fs
aad
test
xchg
xor
lods
je
mov
bound
icebp
xchg
popf
mov
add
and
cli
push
and
mov
shl
mov
fs
in
fs
xchg
xor
cmps
pop
fs
pop
fs
popf
mov
add
and
cmp
push
jle
and
outs
and
std
aam
out
es
fs
popf
jno
fldenv
fwait
xor
mov
fs
xchg
fwait
xor
xchg
push
fs
mov
or
mov
fs
in
fs
xchg
xor
add
fs
xchg
xor
call
mov
lahf
sub
pushf
mov
mov
bound
icebp
xchg
popf
mov
add
and
stos
push
and
mov
popa
push
fwait
fwait
jae
ficom
push
adc
push
fs
aam
out
es
es
in
fs
xchg
xor
mov
fs
mov
fs
in
fs
xchg
xor
mov
lods
ins
in
rcr
mov
mov
pop
fs
popf
mov
cmp
push
fs
aam
ss
fdivr
or
jmp
fs
fdivr
mov
push
or
std
sub
push
mov
push
mov
sub
fs
ins
sbb
cwde
test
and
loope
ret
xchg
fwait
xor
xchg
push
fs
mov
es
loope
ret
xchg
fwait
xor
adc
jmp
ins
stos
cwde
push
xchg
stos
scas
mov
adc
(bad)
push
popf
out
ins
sbb
cwde
test
and
loope
ret
xchg
fwait
xor
xlat
push
fs
mov
es
loope
ret
xchg
fwait
xor
ret
push
fs
mov
fs
outs
and
xchg
(bad)
sahf
popa
pop
jl
xchg
ret
sub
push
mov
adc
out
pusha
in
mov
fs
test
jmp
fs
fdivr
mov
push
mov
push
fs
ins
sbb
cwde
test
and
loope
ret
xchg
fwait
xor
push
push
fs
mov
es
loope
ret
xchg
fwait
xor
dec
push
fs
mov
fs
outs
and
xchg
(bad)
sahf
popa
pop
jl
xchg
ret
sub
push
mov
push
fcomp
push
loope
cld
xchg
fwait
in
in
retf
push
fs
aam
in
mov
scas
je
and
jmp
fdivr
or
jmp
fs
fdivr
mov
adc
out
js
sbb
push
fs
ins
sbb
cwde
test
and
loope
ret
xchg
fwait
xor
repz
fs
mov
es
loope
ret
xchg
fwait
xor
out
push
fs
mov
and
adc
(bad)
push
popf
out
ins
sbb
cwde
test
and
loope
ret
xchg
fwait
xor
xor
jmp
ins
retf
jg
fs
outs
and
xchg
(bad)
sahf
popa
pop
inc
mov
push
fs
aad
test
xchg
xor
mov
fs
aad
test
xchg
xor
lods
je
repz
fs
in
fs
xchg
xor
das
pop
fs
add
add
add
sub
mov
in
cwde
mov
jmp
test
xchg
xor
das
inc
fs
push
fwait
fwait
je
jmp
fwait
je
rcr
mov
fcom
fs
jecxz
(bad)
bound
scas
cmp
js
cmps
xor
ins
fs
xor
int
lahf
rsm
nop
xchg
sub
in
mov
fcom
mov
out
jle
aaa
mov
cmp
gs
mov
cdq
fsub
pushf
xchg
(bad)
fcom
cs
and
mov
inc
fs
push
nop
fsubr
mov
or
mov
dec
fs
loope
ficom
fs
fdivr
mov
daa
imul
xchg
xor
mov
and
fs
mov
dec
ins
movs
sub
leave
and
pusha
and
jmp
fdivr
jmp
fwait
jae
pop
dec
and
pushf
and
les
cmps
fcomp
dec
fst
ins
movs
sub
adc
(bad)
jmp
fs
fdivr
mov
or
fcomp
loope
xchg
fwait
fwait
jae
repnz
and
xchg
(bad)
xchg
fwait
in
cmps
lock
fsub
pushf
gs
mov
jmp
fdivr
mov
push
in
xor
fs
fcomp
and
loope
xchg
fwait
fwait
and
mov
xchg
adc
push
mov
fwait
and
mov
scas
in
fcomp
cmp
loope
ficom
fcomp
and
fs
add
fs
and
fs
fdivr
push
fs
xchg
dec
and
imul
ror
ficom
fs
nop
gs
stos
scas
fwait
rol
jp
and
sbb
fist
(bad)
dec
and
mov
fcom
in
push
push
fs
in
cwde
call
es
inc
dec
fs
mov
or
imul
dec
fs
loope
fcom
sbb
push
mov
ins
and
shr
mov
fs
nop
dec
pushf
stos
scas
or
and
jmp
fdivr
xor
imul
cmps
clc
cwde
fdivr
mov
nop
xchg
fwait
out
fs
fsubr
imul
loope
fcom
aam
fcom
movs
imul
fs
xchg
cld
cdq
fsub
loope
fcom
dec
fs
xchg
sbb
fs
fdivr
fwait
shl
and
fsub
mov
fadd
or
jmp
mov
inc
fs
outs
mov
fild
mov
sbb
es
xchg
dec
fs
stc
clc
ficom
aaa
in
loopne
xchg
aaa
(bad)
lock
fcom
fwait
out
fs
jnp
in
clc
cdq
fcom
xor
fadd
out
das
jmp
fs
outs
dec
and
fwait
and
jmp
fdivr
mov
fld
in
in
fs
xchg
int3
cdq
fadd
fwait
rol
ja
fs
loope
ficom
xchg
push
push
lods
cmps
daa
push
mov
xor
jle
fist
in
xor
mov
or
in
xchg
fwait
adc
sub
and
xor
in
xor
push
and
adc
loope
aaa
jne
inc
inc
and
mov
kmovb
inc
fs
gs
outs
inc
and
mov
xchg
xor
and
or
jge
fs
and
mov
inc
fs
scas
push
fwait
jne
fimul
in
pushf
aam
in
and
loope
jmp
retf
sub
and
mov
add
fs
xchg
cmp
js
cmps
xor
push
fs
fist
addr16
inc
in
popa
push
and
popa
fwait
push
pusha
mov
in
pushf
dec
fndisi(8087
mov
push
jecxz
daa
or
fs
in
gs
fcom
dec
and
gs
push
fs
fwait
jae
and
fcom
fwait
fwait
and
pusha
stos
cwde
(bad)
jbe
lahf
jp
and
data16
retf
push
cmp
jmp
push
mov
in
mov
fs
scas
and
sub
and
popa
push
mov
aam
cmp
nop
jae
fs
imul
push
imul
or
mov
fs
sub
dec
fs
mov
xor
push
fs
push
inc
sti
and
and
fwait
xchg
imul
xchg
out
cs
cmp
stos
xor
(bad)
jmp
push
sbb
fmul
pusha
fs
in
and
loope
push
and
pushw
and
fs
add
and
fs
and
hlt
and
fs
push
mov
push
or
push
pushf
in
in
xor
fwait
push
cmps
leave
es
out
and
xor
fwait
push
retf
cmc
and
and
xor
fwait
push
mov
pop
dec
and
xor
fwait
push
maskmovq
mul
and
xor
fwait
push
aas
std
and
retf
daa
dec
fs
mov
jne
fs
and
push
push
fcomp
sti
bound
pop
or
push
and
push
push
fcomp
sti
bound
dec
or
push
and
push
push
fcomp
(bad)
popa
push
fs
and
push
push
fcomp
lds
mov
push
xchg
in
in
xor
fwait
push
adc
and
and
xor
fwait
push
shl
and
and
xor
fwait
push
mov
es
mov
xor
fwait
push
mov
stos
inc
fs
ror
xchg
sub
cmp
cmp
cmp
and
cwde
fwait
push
cmp
and
mov
and
dec
xchg
fwait
push
retf
cmc
and
and
cwde
fwait
push
call
inc
inc
and
pop
mov
out
and
dec
xchg
fwait
push
mov
jg
fs
xchg
sub
push
fist
fs
dec
fs
add
push
dec
sti
bound
mov
xchg
push
js
sub
dec
fs
and
je
arpl
cwde
fcomp
icebp
arpl
lods
add
xchg
push
dec
mov
dec
fs
and
je
arpl
cwde
fcomp
sti
bound
rol
push
inc
mov
dec
fs
add
push
inc
sti
bound
in
push
pushf
in
in
cwde
fwait
push
in
lds
and
(bad)
js
sub
out
and
dec
xchg
fwait
push
cmps
leave
es
aas
inc
and
cmps
xor
ds
xlat
adc
jns
xchg
xchg
clc
sub
pusha
mov
fist
mov
mov
lods
je
sub
and
mov
fs
push
xor
push
and
out
xchg
dec
and
cmp
and
inc
and
add
cmp
cld
sub
mov
fs
push
pop
inc
and
and
xchg
push
push
mov
cmp
pop
test
pushf
dec
cbw
out
inc
cmp
jo
jl
fs
xor
out
es
mov
and
mov
dec
fs
loope
dec
fndisi(8087
mov
push
mov
xchg
push
and
imul
cwde
out
inc
cmp
xor
and
xor
push
mov
mov
dec
fs
and
fs
and
fs
and
popa
push
and
fs
and
fs
push
fs
push
push
jo
outs
inc
fs
mov
push
fcomp
sti
bound
add
push
push
push
mov
xchg
push
and
add
and
add
or
and
or
mov
fs
mov
and
mov
fs
push
push
push
push
mov
xchg
push
and
add
and
sbb
inc
or
and
or
mov
fs
mov
and
mov
dec
fs
and
fs
push
pop
sti
and
push
sub
and
repnz
add
push
mov
mov
retf
mov
and
push
fcomp
sti
bound
fcomp
les
push
je
adc
and
fisub
push
dec
dec
push
jmp
sub
or
and
jo
sub
xchg
push
push
mov
xchg
push
add
sub
add
or
push
or
and
xor
push
mov
mov
fs
out
pop
push
es
push
fs
pop
inc
and
adc
dec
sub
and
mov
dec
fs
push
and
push
inc
enter
inc
gs
push
or
push
or
and
xor
push
mov
mov
dec
fs
es
mov
push
and
fs
and
fs
imul
push
fs
imul
mov
loope
sub
sub
mov
xchg
fwait
fwait
dec
push
and
push
addr16
js
pop
dec
mov
add
and
or
mov
fs
mov
and
mov
clc
(bad)
es
pushf
xchg
(bad)
stos
scas
push
fcomp
sti
bound
fcomp
les
push
je
jmp
fwait
and
jo
push
fs
cmp
mov
retf
das
inc
fs
adc
popa
push
push
sti
bound
fcomp
les
push
je
(bad)
jl
push
fs
push
es
clc
sub
sub
push
fs
and
fs
and
fs
xor
cdq
and
push
and
push
inc
add
cmp
stc
sub
mov
fs
push
fs
shl
and
push
pop
mul
push
addr16
js
xor
gs
les
or
and
or
mov
fs
mov
and
mov
cld
(bad)
and
fs
push
pop
sti
and
push
or
and
jl
punpckhwd
stc
fs
jo
and
xor
mov
and
gs
and
mov
fs
and
fs
push
pop
sti
and
push
or
and
jl
mov
stos
fs
jo
and
xor
clc
(bad)
and
gs
and
mov
dec
fs
loope
dec
fndisi(8087
mov
push
mov
xchg
push
add
sub
add
push
or
and
xor
push
mov
and
add
mul
push
pop
mul
push
inc
enter
jo
add
fs
jo
and
xor
mov
and
gs
and
mov
dec
sti
and
push
pop
sti
and
push
sub
and
mov
shl
add
and
xor
mov
mov
retf
sbb
and
cld
(bad)
popa
push
fwait
in
fild
in
in
jecxz
fcom
xor
(bad)
jmp
jl
aas
fist
(bad)
js
fistp
in
in
xchg
mov
sub
in
mov
and
mov
xchg
fwait
out
js
ins
mov
inc
pushf
in
in
fs
push
pusha
sti
and
and
and
cmp
mov
dec
fs
push
and
out
xchg
dec
and
cmp
and
inc
and
add
cmp
cld
sub
mov
fs
push
mov
and
and
xchg
push
push
mov
cmp
pop
test
pushf
dec
cbw
out
inc
cmp
jo
jl
fs
xor
jmp
and
mov
ins
sti
and
addr16
push
push
mov
xchg
push
and
imul
cwde
out
inc
cmp
xor
and
xor
push
mov
mov
fs
and
fs
and
fs
and
popa
push
and
fs
and
fs
push
fs
push
push
jo
repz
fs
mov
push
fcomp
sti
bound
popf
cmp
fs
and
fs
and
fs
inc
add
push
aaa
add
and
xor
mov
and
loope
popa
push
jnp
and
mov
bound
mov
jle
fs
adc
or
imul
push
fs
and
daa
and
push
retf
cmc
and
fs
pop
hlt
sub
push
fs
imul
push
cmp
and
(bad)
jo
push
gs
mov
fs
push
and
push
inc
enter
inc
gs
push
push
aaa
add
or
push
mov
mov
retf
aas
jnp
and
in
popa
push
in
mov
pop
mul
push
inc
enter
inc
gs
pop
push
aaa
add
and
addr16
xor
push
mov
mov
ja
add
sbb
xchg
push
fcomp
sti
bound
fcomp
les
push
je
jmp
or
imul
add
mov
clc
sub
cmp
sub
push
and
fs
and
fs
xor
add
push
fs
fs
or
stc
sub
mov
fs
push
fs
adc
and
and
in
mov
pop
mul
push
addr16
js
cdq
and
or
push
or
and
or
mov
fs
mov
and
mov
fs
fwait
push
pop
sti
and
push
sub
and
jne
frstor
or
and
or
push
mov
mov
retf
dec
jp
and
lock
popa
push
push
sti
bound
fcomp
les
push
je
mov
and
and
jp
push
sbb
clc
sub
or
sub
push
and
fs
and
fs
xor
cdq
and
fwait
and
push
cmp
cmp
cli
sub
mov
fs
push
mov
mul
push
inc
enter
jo
out
push
jo
and
xor
clc
(bad)
and
gs
and
mov
fs
jmp
fs
and
fs
and
fs
cmp
dec
push
add
and
xor
mov
and
gs
and
mov
jne
add
and
fs
push
pop
sti
and
push
or
and
jl
inc
add
push
aaa
add
cmp
cld
sub
mov
fs
push
bound
push
fs
and
fs
and
fs
xor
jmp
or
and
push
cmp
cmp
cli
sub
mov
fs
push
fs
mov
fst
and
sub
mov
cmp
stos
xor
(bad)
jmp
jl
ds
add
push
stos
sub
fs
push
push
fs
imul
push
mov
cmp
in
in
call
push
(bad)
jge
push
sar
push
mov
fs
pushf
xchg
(bad)
stos
scas
jmp
and
cmp
and
cmp
shl
or
and
mov
fwait
fwait
mov
xchg
pop
and
fwait
adc
add
mov
cli
sub
fs
adc
cmp
cmp
and
ins
push
pusha
scas
sub
je
push
fsub
fs
imul
xchg
out
cmp
pushf
push
fndisi(8087
mov
cmps
jbe
and
and
xor
xchg
inc
jp
stos
cwde
gs
stos
scas
in
nop
cs
retf
and
loope
fcom
jl
and
(bad)
push
in
mov
xor
adc
add
aam
push
fwait
fwait
jae
push
jl
push
in
mov
push
jns
mov
cmps
push
mov
push
adc
add
loope
xchg
fwait
fwait
jae
data16
push
adc
jl
es
loope
fcom
jae
and
xchg
gs
mov
adc
add
push
fwait
fwait
jae
stos
jae
push
adc
and
es
loope
fcom
jae
and
sbb
inc
fldenv
fs
in
fcom
fs
jns
out
sub
push
mov
xor
fs
rol
in
in
sbb
sbb
fcom
fs
jns
mov
cmps
push
mov
xor
fs
xchg
outs
adc
add
popa
push
fwait
fwait
jae
pop
jae
push
adc
dec
(bad)
es
loope
fcom
jae
and
sbb
sbb
es
in
fcom
fs
cwde
xchg
sub
in
mov
push
jns
xor
push
mov
and
fs
mov
fs
and
fcom
cli
and
fcom
fs
fldenv
fs
sub
and
fcom
fs
jb
mov
lahf
sub
nop
call
xchg
fwait
fwait
jge
lods
cmps
daa
push
xor
test
ins
fcmovnb
ins
div
stos
nop
dec
pushf
stos
scas
in
xchg
jne
loop
and
cmp
popa
mov
sub
xor
ss
cmp
ins
xor
pusha
fs
xor
and
sahf
adc
and
mov
push
fs
sbb
es
loope
aam
fwait
xor
inc
jb
and
(bad)
push
in
icebp
rcl
xchg
pushf
fcom
enter
jmp
fwait
jae
call
nop
fwait
fwait
and
es
in
mov
(bad)
jge
mov
xchg
adc
add
loope
lahf
fwait
fwait
jae
scas
jno
push
fs
vpsraw
in
fst
push
jns
gs
sub
test
lds
push
pushf
fsubr
jne
jno
es
loope
aam
fwait
xor
out
jno
and
fst
push
jns
push
nop
sub
test
or
push
pushf
fsubr
jne
daa
xlat
es
loope
aam
fwait
xor
cmp
and
xchg
gs
mov
fsub
jne
add
es
loope
aam
fwait
xor
pop
jno
and
fst
push
jns
out
nop
sub
test
jge
push
pushf
fsub
jne
ret
and
loope
aam
fwait
xor
xchg
jo
and
fst
push
jns
lods
nop
sub
test
xor
lahf
sub
mov
in
fwait
pushf
fsub
dec
adc
and
loope
aam
fwait
xor
xlat
jo
and
fst
push
jns
addr16
sub
test
shl
fs
fwait
pushf
fsub
jne
dec
shl
and
loope
aam
fwait
xor
jecxz
and
adc
popa
push
fwait
fwait
jae
jo
fcom
in
loope
lahf
fwait
fwait
stos
scas
or
sub
or
fisub
fs
xchg
mov
stos
in
mov
rcl
imul
fsubr
loopne
imul
in
and
xchg
aam
in
loope
lahf
fwait
fwait
stos
scas
dec
xchg
stos
scas
push
mov
sub
mov
fwait
fwait
mov
test
cmps
mov
and
in
fist
lods
and
in
xchg
cwde
fcom
loope
imul
xchg
pop
imul
loope
fist
push
and
xchg
fsub
mov
fdivr
or
cli
sub
xchg
cwde
fdivr
mov
cmp
out
fs
fist
dec
mov
fs
stos
repz
cmp
movs
aam
movs
sahf
and
popf
jnp
mov
mov
pushf
fcom
fs
push
hlt
lds
or
cli
sub
xchg
call
push
xchg
in
in
hlt
lds
or
cli
sub
xchg
pushf
fdivr
mov
out
(bad)
pusha
fs
loope
fist
jo
and
xlat
cmp
push
mov
fcom
cwde
pushf
fcom
es
in
cwde
call
fs
imul
fist
jae
and
mov
call
fs
in
cwde
cwde
fcom
jmp
fwait
jae
sahf
mov
fist
push
jae
push
fs
fdivr
mov
aaa
push
nop
mov
fist
stc
fcom
movs
imul
loope
fist
xor
(bad)
jle
fs
loope
fist
sub
mov
mov
fsub
loop
imul
xchg
or
sub
or
mov
fs
in
cwde
pushf
fcom
fs
fisub
fs
in
cwde
call
fs
in
cwde
call
fs
in
mov
fcom
mov
fcom
call
in
mov
fcom
call
in
xchg
fcom
fwait
fwait
and
mov
rcr
xchg
fsub
mov
fsub
loope
fst
mov
cwde
fst
jb
and
mov
pushf
fcom
fs
in
lods
xchg
fcom
fwait
fwait
je
(bad)
ja
push
fwait
fwait
scas
adc
je
add
ret
jp
fs
in
nop
pushf
fcom
fs
in
cwde
pushf
fcom
pushf
fadd
jmp
fwait
jae
adc
push
fwait
fwait
je
fst
pop
outs
gs
cmp
and
loope
fist
fwait
rcl
nop
fwait
fwait
dec
mov
and
add
cmp
and
mov
jns
fs
in
cwde
cwde
fcom
mov
xchg
fwait
out
fs
cmps
sub
(bad)
mov
push
sub
and
cmp
push
ss
sahf
fdiv
cmp
jmp
fadd
fs
shl
cmp
xor
loope
push
sti
loope
or
fsub
fs
push
mov
jp
fs
in
ror
jl
mov
fs
imul
and
and
retf
push
sti
bound
popa
jae
and
fs
mov
xchg
xchg
in
cmps
dec
cmp
and
and
fwait
and
or
leave
es
dec
jne
and
xor
add
mov
push
fs
fdivr
fwait
adc
sub
dec
clc
lds
and
loope
int
fwait
xor
arpl
fsubr
mov
and
jp
push
shl
and
inc
push
fsub
fsubr
shl
in
inc
jb
fs
retf
jo
and
mov
inc
js
in
loop
mov
cmp
scas
in
repz
mov
fchs
icebp
(bad)
into
xchg
fwait
mov
fsubr
push
retf
sbb
and
fst
mov
in
movs
aam
movs
sahf
and
popf
jnp
mov
mov
xchg
stos
cld
pop
(bad)
into
xchg
fwait
in
fisttp
loope
test
movs
mov
push
fwait
fwait
and
in
cmps
aad
adc
xchg
fwait
push
in
into
mov
xchg
push
jmp
fdivr
or
sub
or
mov
fs
in
sti
mov
xchg
xor
das
jl
mov
push
sti
mov
xchg
xor
cmps
(bad)
sub
cmps
test
jmp
fdivr
mov
jo
fs
in
sti
mov
xchg
xor
daa
jns
fs
imul
and
fnstcw
sub
mov
fs
sub
and
and
fld
fwait
fwait
scas
pop
pusha
mov
push
fs
inc
int
sar
sub
leave
es
scas
mov
les
mov
xor
in
sti
inc
mov
dec
int
fwait
jmp
and
jns
and
add
push
fs
mov
fs
dec
hlt
and
and
and
fld
test
mov
push
fs
inc
int
(bad)
sti
sub
leave
es
scas
mov
cli
bound
jno
push
jmp
fwait
scas
pop
mov
ins
and
xchg
xchg
mov
push
and
fs
daa
add
add
sub
mov
fs
sub
fs
and
mov
sub
mov
and
and
xchg
push
push
fwait
fwait
mov
push
gs
xchg
push
fs
sbb
(bad)
int3
xchg
fwait
xor
sbb
fs
push
push
dec
cwde
test
and
imul
jp
push
fwait
imul
jmp
loope
xchg
jne
push
fwait
fwait
mov
push
gs
xchg
push
fs
sbb
(bad)
int3
xchg
fwait
xor
sbb
fs
push
push
dec
cwde
test
and
imul
ror
arpl
and
mov
and
xchg
xchg
out
loope
test
popa
ret
fs
sub
and
jmp
and
and
add
fs
sub
fs
push
fs
mov
imul
fs
mov
push
and
in
and
scas
and
and
fs
mov
mov
out
fs
fs
sub
imul
fwait
push
pop
sti
and
and
fs
and
fs
and
fs
sub
mov
fs
push
fs
and
and
and
fs
and
push
fs
retf
fsubr
mov
and
fs
push
dec
dec
std
mov
imul
sub
dec
imul
fwait
in
iret
jae
and
push
gs
icebp
enter
mov
fsubr
and
mov
jmp
fdivr
jmp
fwait
jae
or
popa
push
fs
fsub
fs
imul
xchg
out
cmp
adc
inc
or
ins
or
popa
push
mov
mov
mov
int3
int
fwait
xor
push
adc
and
fs
and
xor
stos
fs
in
int3
mov
xchg
xor
and
fs
sbb
dec
push
imul
fs
and
nop
and
fcomp
sti
bound
cmp
cmp
and
and
cmps
push
push
fs
sub
push
and
fs
and
fs
ja
fs
aas
lods
loope
xor
push
fs
xor
cmp
mov
push
pushf
je
in
hlt
and
push
nop
imul
scas
ins
and
jne
push
and
and
jg
jns
and
leave
sub
pop
sbb
fs
sbb
push
fs
add
and
loopne
push
mov
or
sub
mov
cdq
fcom
in
mov
and
fwait
mov
mov
in
cmps
sbb
ficom
mov
cs
loopne
and
jmp
fdivr
fwait
push
addr16
lahf
push
adc
test
xchg
fwait
dec
cmps
mov
fsubr
mov
std
mov
fcom
fwait
fwait
sbb
sbb
xchg
fwait
fwait
mov
mov
icebp
test
xchg
fwait
pop
repz
push
and
loope
ficom
cdq
fdivr
out
loope
xchg
fwait
fwait
or
mov
push
and
fs
push
sub
and
and
xchg
packuswb
push
add
popa
push
arpl
add
popa
push
fs
pop
pop
fs
inc
add
push
adc
popa
push
mov
mov
push
arpl
push
or
sub
mov
arpl
push
in
mov
and
ins
sub
add
push
imul
lds
fs
pushaw
adc
ins
mov
gs
jb
and
cdq
fsub
mov
fs
jo
cmps
nop
call
push
(bad)
and
pop
es
and
pop
es
std
and
es
stc
and
es
(bad)
and
pop
es
and
pop
es
sbb
pop
es
and
es
and
and
xchg
adc
push
pushf
fst
lds
and
pop
es
sbb
pop
es
std
and
xchg
js
fcomp
fs
xchg
fwait
fwait
and
push
dec
and
sub
in
mov
fcom
cdq
fsubr
loope
xchg
fwait
fwait
jae
jmp
xchg
fwait
fwait
mov
push
fs
fild
in
in
fwait
and
loope
xchg
fwait
fwait
jae
push
mov
bound
aad
fcom
fs
and
aaa
mov
retf
aas
outs
and
mov
arpl
sahf
popa
fs
pushf
push
fndisi(8087
mov
fsub
loope
ficom
cdq
fsubr
pop
push
fsub
and
(bad)
and
or
push
fcom
lds
and
jmp
fwait
mov
push
gs
xchg
out
sbb
and
cmp
and
call
push
fwait
fwait
and
inc
dec
push
mov
mov
bound
pop
loopne
popa
push
lea
fs
out
pop
and
cdq
fsub
mov
fdivr
jmp
fwait
jae
dec
mov
(bad)
xchg
fwait
fwait
jae
out
and
mov
and
loope
xchg
fwait
fwait
jae
push
js
sub
popa
fs
xchg
adc
add
add
popa
push
outs
and
mov
bound
sahf
pusha
fs
jmp
out
xchg
and
pop
imul
dec
push
fs
push
fs
and
fwait
push
aas
std
and
retf
cmps
ins
and
mov
fwait
and
fcom
fcom
daa
push
pop
sbb
add
add
fs
mov
and
mov
jmp
fcom
fcom
in
pushf
or
fcom
cdq
fdivr
or
sti
sub
popf
cdq
fdivr
mov
sub
out
js
fwait
and
jmp
fdivr
fwait
push
mov
xchg
ins
fs
fldenv
xchg
fwait
fs
dec
push
fs
push
fs
and
fwait
push
mov
jg
and
in
sub
fs
in
fcom
cdq
fdivr
or
sti
sub
popf
cdq
fdivr
mov
push
or
and
jmp
fdivr
fwait
push
maskmovq
mul
fs
fldenv
xchg
fwait
fs
dec
push
fs
push
fs
and
fwait
push
maskmovq
mul
and
in
pushf
adc
fcom
cdq
fdivr
or
hlt
sub
popf
cdq
fdivr
mov
out
or
and
jmp
fdivr
fwait
push
or
and
fs
fldenv
xchg
fwait
fs
dec
push
fs
push
fs
and
fwait
push
or
and
and
jmp
fwait
mov
push
gs
xchg
out
and
push
and
fs
mov
mov
sub
fwait
push
inc
sti
and
and
pusha
and
mov
fsubr
pop
sub
loope
fst
fcom
pop
pop
pop
dec
push
fs
push
fs
and
fwait
push
or
and
and
in
fcom
loope
fst
fucomp
fild
in
in
loope
fcom
xchg
cdq
fcom
es
in
xchg
cdq
fcom
fs
push
fcom
sti
and
and
fldenv
xchg
fwait
fwait
and
fs
mov
mov
and
fs
push
dec
sti
and
and
sub
push
call
fsubp
call
fcom
pop
pop
pop
dec
push
fs
push
fs
and
fwait
push
add
and
and
in
fst
jmp
out
xchg
and
pop
imul
xchg
fwait
fwait
sbb
push
pushf
stos
scas
jmp
fwait
jae
loope
ficom
mov
xchg
ficom
ins
fs
mov
and
cdq
fsub
loope
ficom
fs
and
pusha
push
and
fs
push
sti
and
and
loope
xchg
fwait
fwait
dec
push
fs
push
fwait
fwait
retf
retf
popa
fs
pop
adc
sub
das
jmp
mov
push
gs
xchg
in
cmps
dec
push
fwait
fwait
jno
or
mov
pushf
call
push
xchg
cdq
fcom
xchg
test
fwait
rcl
xchg
fwait
fwait
retf
xlat
popa
fs
jmp
out
xchg
and
pop
imul
cwde
cdq
fdivr
xor
mov
cmp
fwait
retf
sti
popa
and
fs
fdivr
push
dec
cwde
test
and
fwait
mov
fs
nop
call
fs
push
sub
and
and
fs
push
push
fs
push
inc
hlt
arpl
frstor
push
call
loope
sbb
fwait
out
cmps
mov
push
and
fs
and
fwait
mov
gs
(bad)
popa
push
in
and
popf
stos
stos
push
fs
std
xchg
cdq
fcom
(bad)
and
fwait
mov
ins
fs
push
fwait
fwait
jae
gs
mov
nop
call
fs
xchg
pushf
call
push
es
fs
nop
dec
pushf
stos
scas
push
pusha
dec
ins
or
xchg
sub
mov
fs
cmp
and
gs
mov
scas
xchg
fwait
out
jo
popa
fcomp
sti
bound
mov
push
fs
in
loope
xchg
fwait
fwait
stos
scas
(bad)
jne
sbb
fwait
adc
xchg
adc
popa
and
cmp
jmp
out
js
xor
ins
pushf
or
inc
loope
gs
mov
and
imul
sbb
loope
and
pop
push
in
lds
and
stc
and
and
pushf
aam
in
and
loope
pop
push
cmp
and
lds
and
pop
push
mov
arpl
fs
pop
pusha
and
dec
mov
xchg
push
js
sub
ins
fs
nop
xchg
sub
push
js
sub
xchg
push
dec
mov
ins
fs
sti
bound
outs
fcomp
sti
bound
dec
daa
push
sti
and
push
sbb
and
outs
fcomp
stc
bound
jne
push
sti
and
push
sbb
and
jb
pop
loopne
popa
push
fs
xchg
(bad)
stos
scas
push
mov
bound
bound
push
es
outs
out
jns
mul
sti
bound
bound
push
fs
icebp
arpl
bound
push
and
jns
leave
es
sti
bound
bound
push
es
outs
out
jns
mul
jbe
sbb
fwait
adc
ds
mov
fs
and
ss
lods
loope
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xor
mov
add
fld
xor
jae
fs
xchg
ins
movs
push
inc
in
mov
mov
cmp
(bad)
arpl
sbb
out
dec
adc
popf
outs
ins
movs
push
ins
out
add
push
and
push
gs
fs
push
mov
jp
mov
fs
and
cmps
ins
inc
pop
and
fs
or
ins
inc
fwait
ret
fs
inc
ins
adc
fwait
jecxz
call
test
inc
ins
mov
sbb
fwait
shl
mov
cmps
ins
and
fmul
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
xchg
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
nop
popa
push
fs
fs
