add
mov
add
cmp
add
adc
add
sbb
add
std
and
aaa
stos
das
mov
inc
xchg
fstp
or
imul
retf
dec
out
repz
sti
xchg
pop
jbe
mov
or
mov
push
adc
and
int
mov
push
inc
ja
pop
mov
ficom
add
and
mov
xlat
xchg
add
mov
mov
inc
or
cmc
icebp
mov
xor
scas
jge
ins
xchg
adc
aam
fs
mov
ins
dec
test
cmp
ins
mov
aaa
test
jmp
and
mov
xchg
lods
push
js
rol
mov
out
and
jnp
(bad)
push
aaa
pop
push
adc
jae
loopne
sbb
pop
loop
loopne
leave
movs
adc
lea
xor
xchg
jg
sub
cmp
loope
pop
(bad)
jne
ror
xor
(bad)
(bad)
cdq
xlat
retf
or
dec
frstor
aad
add
pusha
stc
mov
mov
stc
sub
out
sub
test
pop
int
test
jecxz
xchg
sbb
jmp
and
mov
ror
push
es
or
inc
cmp
cwde
inc
aas
mov
test
sub
lods
jl
(bad)
shl
sbb
xchg
fst
sbb
cmovnp
mov
mov
jno
ja
das
pop
(bad)
int
push
pop
push
sbb
inc
rcr
imul
mov
iret
pop
xor
jmp
in
dec
sub
fsub
aaa
fild
bound
imul
test
xor
pop
xor
leave
jo
in
push
inc
dec
imul
push
inc
mov
mov
jbe
pop
dec
add
aad
cli
movs
jb
bound
inc
test
pop
ja
dec
inc
dec
pop
in
test
(bad)
(bad)
sbb
xor
fnstcw
mov
and
scas
pop
jo
lock
or
(bad)
inc
cmp
jae
xor
repz
test
gs
inc
adc
sub
pop
mov
les
(bad)
pop
mov
(bad)
or
dec
jp
sub
iret
or
inc
hlt
xor
fild
adc
push
outs
cmp
cs
cmp
jecxz
(bad)
nop
out
xchg
in
aam
xchg
imul
mov
add
js
in
(bad)
rol
sbb
lahf
inc
xchg
and
stos
mov
out
inc
add
push
or
int3
(bad)
push
div
mov
mov
(bad)
sti
cli
in
xor
lods
or
stos
mov
mov
and
std
neg
jg
enter
sub
and
in
scas
jp
movs
ins
repz
into
ror
ret
or
inc
(bad)
mov
je
mov
mov
adc
or
xor
sbb
dec
test
mov
stos
xchg
mov
mov
pushf
adc
cmp
sti
add
xchg
adc
pop
pop
into
sub
or
xchg
adc
inc
pop
sbb
(bad)
mov
icebp
aaa
mov
(bad)
das
jb
imul
mov
inc
xor
push
xchg
aam
movs
call
in
mov
call
jo
mov
push
or
mov
or
inc
dec
cmp
mov
cmp
jne
ficomp
retf
adc
test
or
in
in
rol
mov
int3
std
push
stos
mov
dec
out
xchg
adc
jnp
add
sar
in
cmp
push
and
sbb
jmp
mov
cmp
mov
pop
pop
imul
fwait
pop
and
pusha
cvtps2pi
lea
pop
popa
rcr
nop
pop
inc
shl
jl
fld
adc
aaa
rol
push
mov
ds
mov
jp
mov
lods
jle
cmp
push
aam
je
cmp
jns
push
cmps
xor
lds
fsub
pop
push
bound
and
fcom
popf
mov
mov
ror
es
pop
sar
repnz
inc
int3
cmp
push
repnz
fistp
gs
aam
test
sbb
movs
dec
xor
jmp
rol
jecxz
inc
dec
fisub
out
in
pop
pop
sub
xchg
mov
mov
pop
outs
xor
test
mov
push
mov
call
and
sbb
cmc
(bad)
fucomp
and
push
sbb
mov
jb
push
add
dec
push
(bad)
(bad)
or
push
mov
sub
cmps
pop
sub
or
xchg
ins
nop
sub
add
jno
xchg
(bad)
cmp
mov
mov
ret
je
push
lock
dec
add
loop
push
dec
adc
pop
xchg
outs
push
pop
sbb
push
(bad)
xchg
out
push
inc
test
neg
(bad)
mov
and
lods
mov
lods
mov
adc
mov
or
xlat
or
daa
or
icebp
mul
mov
(bad)
jmp
jbe
cli
in
sub
push
in
cs
pusha
mov
push
mov
stos
add
out
inc
mov
xchg
or
xchg
cmp
je
inc
mov
adc
ror
retf
cmp
les
sbb
dec
add
aad
fidivr
pop
dec
gs
cmps
das
sub
std
dec
push
or
bndldx
fnstsw
inc
das
xchg
jnp
(bad)
cmc
mov
add
cdq
(bad)
jge
jnp
daa
xor
cld
sub
dec
adc
cdq
dec
neg
xchg
push
fcmovnb
or
test
dec
xor
test
mov
sti
pop
enter
sbb
fcom
jnp
(bad)
inc
push
sbb
outs
cmp
shr
xchg
pop
cmps
mov
lods
xchg
mov
popa
xchg
mov
cmp
or
retf
mov
mov
and
or
jmp
dec
in
inc
jge
pop
addr16
mov
stc
adc
lock
shl
sub
or
clc
fcomp
push
pop
lahf
cmc
lods
mov
xchg
mov
(bad)
call
scas
in
lods
mov
dec
xor
push
in
sbb
mov
aad
lahf
loop
retf
out
xchg
sti
mov
ret
pop
into
int3
movs
or
sar
add
ss
scas
inc
fadd
cs
ret
adc
loop
xchg
out
xor
xor
sub
xor
ss
xchg
shr
je
and
pop
sub
inc
and
popf
dec
das
stc
dec
in
pop
ror
cwde
test
(bad)
in
shr
adc
lods
pusha
push
clc
cmps
push
mov
inc
add
jp
fcmovne
jno
inc
pop
int3
and
addr16
and
retf
ins
sbb
shr
sub
pop
pop
popf
call
mov
mov
pusha
pop
dec
xor
fst
dec
and
sub
adc
out
shr
repnz
repz
xlat
in
sbb
das
hlt
jbe
sti
fld
inc
inc
arpl
mov
adc
movs
(bad)
(bad)
out
stos
sar
fst
xchg
add
or
dec
and
add
add
mov
sbb
add
fwait
jp
inc
lods
in
cmps
sti
imul
push
push
mov
retf
into
push
mov
jns
mov
ss
mov
and
lods
jmp
repz
or
gs
mov
call
and
stos
adc
sbb
push
inc
xchg
(bad)
in
dec
xor
ror
daa
mov
popf
push
je
adc
and
or
sub
xor
fnstenv
out
inc
fidivr
out
jge
pusha
dec
pop
adc
xlat
adc
gs
out
icebp
add
imul
sub
clc
adc
aam
xor
dec
inc
les
pop
cli
add
push
jmp
xor
imul
iret
cdq
cmps
clc
fmul
cwde
xor
out
mov
cli
pushf
shr
mov
jns
fdivr
shr
sub
mov
outs
dec
cdq
loope
sub
push
imul
shl
cmp
mov
and
or
dec
dec
dec
pusha
add
or
mov
shl
jp
(bad)
out
out
push
xchg
popf
stc
es
or
rdpmc
xchg
(bad)
mov
bound
imul
cli
pop
add
hlt
sti
dec
call
fcomp
fnstcw
push
(bad)
sub
pmuludq
mov
push
pop
xor
mov
jg
mov
cmc
jbe
adc
out
fwait
adc
addr16
ins
inc
cmp
xor
aas
nop
xchg
push
cmp
fldcw
dec
sar
ja
adc
sub
stos
popa
leave
mov
clc
fwait
inc
sub
loope
ss
jo
shl
jecxz
icebp
popa
fcom
jg
fistp
jg
jmp
pop
(bad)
imul
outs
sbb
mov
push
test
mov
rcl
pop
and
je
jl
bound
push
retf
pop
and
add
cs
stos
xor
ds
and
jo
outs
jo
or
jmp
test
loope
mov
(bad)
aas
sar
jp
jo
xlat
fst
jbe
dec
cwde
xor
sar
jns
push
xor
(bad)
lahf
call
hlt
or
add
out
cmps
(bad)
dec
das
shl
jne
adc
ja
sbb
in
sub
sbb
jo
add
mov
retf
int
lahf
in
aas
mov
sbb
cli
xchg
(bad)
cmc
into
nop
cmp
ss
jo
dec
jp
sbb
das
movs
retf
add
icebp
sub
xchg
and
pusha
dec
jnp
ins
mov
adc
inc
dec
dec
and
add
jmp
enter
fwait
jp
rcl
test
addr16
shl
cld
xor
and
lea
test
fidiv
mov
mov
cmps
pop
retf
ds
test
mov
pushf
jo
inc
cmp
enter
cmp
pop
rep
pop
add
xchg
dec
xor
xchg
bound
sub
jmp
ds
scas
fstp
inc
and
repnz
(bad)
cmp
fist
inc
push
sub
(bad)
in
arpl
and
push
cmp
mov
sub
lahf
add
xchg
jecxz
mov
adc
icebp
cmps
imul
sub
out
cmc
jbe
xchg
pop
push
adc
mov
sub
mov
mov
push
fldz
ins
ds
cld
xlat
loope
dec
iret
and
mov
test
fdivr
push
or
sbb
pop
shr
push
jbe
mov
xchg
mov
cmp
clc
push
and
mov
(bad)
fwait
mov
push
in
mov
jecxz
sub
mov
movs
adc
or
cdq
adc
ss
jne
mov
inc
ror
rol
xor
dec
pop
in
idiv
cmp
sub
cli
icebp
lock
jecxz
icebp
into
rcl
xchg
mov
retf
ret
mov
nop
in
es
shl
add
xchg
gs
xchg
push
push
shl
and
jge
adc
es
scas
les
fwait
outs
cs
outs
and
sahf
pop
lahf
fld
ins
repnz
inc
pop
jl
sbb
shr
(bad)
retf
bound
fdivr
dec
and
push
int3
pop
xor
shr
cs
in
arpl
jbe
push
lods
sbb
in
mov
call
cmps
stos
inc
mov
lds
mov
imul
mov
dec
mov
scas
inc
and
leave
sbb
inc
lds
mov
repnz
in
mov
pop
sar
in
pusha
push
mov
imul
jp
pop
sub
leave
cmp
xchg
shl
jb
dec
and
mov
mov
repz
jl
mov
daa
jno
cdq
aam
arpl
pop
clc
and
lahf
ds
xchg
pop
mov
cmc
subps
pop
mov
and
jo
cwde
add
jle
inc
dec
(bad)
fist
jo
aam
pushf
or
rcr
inc
ins
adc
dec
jne
jl
test
push
rol
in
push
pop
sbb
in
or
leave
retf
sub
inc
aad
pop
bound
jns
or
pop
imul
mov
out
aaa
movs
ds
pop
test
dec
sbb
imul
mov
push
pop
mov
jg
xor
inc
jnp
lea
lds
fwait
lds
adc
sub
out
sar
scas
add
cmp
pop
pop
mov
or
sub
pop
xchg
xchg
ficomp
popa
out
repnz
jb
cdq
mov
daa
ins
dec
gs
mov
shl
cmp
test
dec
dec
mov
sbb
imul
cmp
add
xchg
aas
test
das
(bad)
in
push
popf
xchg
ins
xor
repnz
inc
enter
sub
xchg
in
dec
xchg
cwde
and
mov
ret
pop
lock
cmp
cmc
fdivr
sub
adc
pop
fdiv
cmp
sbb
in
test
push
mov
inc
call
cmp
jbe
add
fmul
int3
fcmovnu
push
jae
mov
sbb
add
inc
popa
cmp
inc
sub
jno
scas
or
cmc
cs
test
repz
movs
sbb
cmc
add
cmp
mov
xchg
std
xchg
or
ja
(bad)
push
mov
movs
imul
dec
jae
dec
xchg
out
ja
iret
pop
retf
arpl
stos
xor
jae
iret
xchg
add
xlat
sbb
pop
ret
pop
xor
fiadd
mov
xor
sbb
push
gs
pushf
icebp
arpl
sbb
mov
das
ret
add
adc
in
aaa
icebp
cwde
xchg
push
dec
out
adc
push
call
shl
pop
or
pop
cmp
ss
xor
fdiv
mov
sub
leave
lahf
cs
adc
xchg
data16
daa
jae
mov
lahf
xor
push
add
imul
push
fcomp
mov
jmp
and
cmp
jae
inc
repnz
sub
mov
mov
push
retf
arpl
mov
pop
or
into
cmc
sub
inc
add
aaa
cmp
fistp
pop
(bad)
sub
icebp
int3
int
icebp
mov
cmp
test
mov
xchg
hlt
std
mov
outs
jle
popa
xor
pop
sbb
shl
cmp
dec
sar
push
loopne
push
bound
add
push
sahf
jne
in
pushf
inc
sbb
in
ss
dec
mov
ror
lock
xchg
xchg
inc
inc
aad
dec
pop
adc
ins
aam
xor
push
add
or
mov
xor
jmp
pop
ss
mov
xor
add
in
sub
mov
(bad)
ror
xor
aad
sahf
mov
jle
lea
add
jl
mov
bound
hlt
mov
adc
dec
add
push
loopne
nop
ja
out
push
inc
call
std
cmps
add
and
mov
outs
push
shr
call
clc
enter
outs
inc
leave
movs
les
pop
mov
arpl
popf
fist
adc
imul
dec
dec
pop
mov
dec
cs
and
and
arpl
mov
in
std
push
jle
repnz
xor
out
sbb
cs
mov
mov
into
pop
adc
mov
xchg
or
push
mov
jecxz
push
fld
shl
push
loopne
push
dec
shl
pop
mov
hlt
inc
scas
sub
lahf
daa
xchg
mov
dec
pop
push
cdq
out
adc
mov
sub
mov
mov
mov
and
lock
into
aam
jmp
cmp
and
or
dec
imul
lods
pop
repz
js
cmp
pop
lahf
pop
ret
mov
pop
clc
xchg
nop
adc
or
push
(bad)
sbb
or
xlat
das
mov
(bad)
fcmovnu
sahf
lea
pop
push
jns
dec
pop
push
pop
test
mov
xor
and
imul
cli
and
out
mov
mov
bnd
mov
inc
and
xchg
mov
lods
cmp
out
loope
ret
add
ds
sbb
test
ss
and
push
fdivr
pop
sbb
nop
call
xchg
add
nop
outs
mov
rcr
pop
cwde
iret
mov
xchg
sahf
cmp
dec
xor
push
cdq
or
daa
jmp
dec
popf
cmp
jae
in
out
xchg
push
jmp
mov
ret
stc
pushf
push
jae
fwait
shl
lods
std
pusha
xor
lock
sub
push
push
shl
les
lods
rcr
aaa
pop
inc
loopne
add
xchg
mov
test
sbb
in
pop
xor
in
pop
or
push
xlat
scas
sub
push
push
mov
fist
fst
sub
std
add
push
push
add
jne
adc
into
adc
retf
jo
mov
sbb
stos
push
jle
lods
cmp
or
fmul
adc
cmps
sub
lods
mov
or
push
pop
dec
ja
mov
movs
lods
jp
xor
inc
add
adc
nop
push
mov
(bad)
(bad)
cmp
(bad)
clc
into
and
xchg
cmp
cwde
(bad)
call
ins
or
ss
and
cld
jge
sbb
mov
nop
mov
fld
daa
ds
aaa
ins
out
ds
and
mov
shl
popa
sub
imul
shl
add
lods
sahf
jno
cmp
fidivr
mov
mov
popa
loope
shl
add
push
rcl
lahf
cmp
icebp
cs
das
imul
dec
mov
call
(bad)
sbb
add
mov
repz
mov
push
cli
or
(bad)
iret
clc
rcr
cld
aaa
retf
sbb
sub
icebp
mov
scas
sbb
push
jbe
jle
and
sbb
jmp
ret
jp
mov
movs
out
cmc
in
jno
stos
std
sub
pop
mov
test
iret
gs
jmp
sbb
cmc
std
lods
test
jg
dec
(bad)
ja
inc
add
(bad)
pop
int
mov
out
mov
test
pop
leave
(bad)
lds
sbb
leave
jmp
push
cmp
cmp
pushf
mov
sar
popa
lahf
jmp
xor
xchg
mov
sub
mov
imul
in
or
sti
cmp
out
mov
jbe
out
cmp
mov
dec
(bad)
adc
xchg
cmp
nop
jp
inc
mov
push
fs
test
outs
push
pop
imul
enter
addr16
adc
and
dec
sbb
in
and
inc
jno
xor
mov
repnz
mov
sub
dec
jle
loopne
push
mov
adc
jmp
(bad)
imul
sub
scas
das
lahf
or
jl
cwde
inc
xor
pusha
and
stos
dec
add
arpl
fidiv
or
xchg
xlat
push
and
mov
push
call
retf
loop
in
mov
aaa
push
push
add
mov
jne
mov
or
sar
xor
dec
adc
dec
adc
xor
push
sub
adc
aam
in
xchg
retf
int3
push
jmp
or
jmp
movs
jmp
push
aas
pop
push
lahf
push
jno
add
and
mov
icebp
inc
lahf
movs
test
mov
dec
int3
aaa
iret
test
push
scas
imul
inc
dec
xchg
sub
scas
mov
into
pusha
push
pop
cli
es
xor
jae
push
jbe
mov
mov
out
add
repnz
mov
movs
mov
sbb
inc
sahf
cmp
test
mov
out
mov
or
jle
cdq
(bad)
push
iret
push
in
pushf
into
test
sub
(bad)
cwde
or
jns
dec
call
in
ud1
xchg
in
leave
scas
cmps
or
adc
sub
cli
mov
arpl
bound
into
dec
pop
dec
mov
(bad)
hlt
pusha
pop
pop
jmp
mov
out
inc
daa
lods
cmp
test
jp
jl
pop
xor
jl
jb
int3
jb
add
pop
scas
cwde
dec
mov
call
mov
mov
fisttp
fisub
ror
out
jge
mov
push
mov
mov
adc
js
mov
push
mov
xchg
sbb
mov
mov
clc
repz
movs
stc
xor
cmps
icebp
ins
sahf
push
and
xchg
repnz
out
pop
jl
test
bound
mov
or
jmp
in
sub
int
push
sbb
pop
mov
repnz
jno
cmp
jp
cmps
fidivr
push
push
and
push
and
mov
loop
test
(bad)
pop
sbb
test
mov
add
pop
jb
enter
les
lods
push
cdq
inc
jmp
sub
push
fdivr
clc
out
mov
pop
pop
ds
jp
fadd
or
fs
xchg
loope
es
retf
in
sub
cdq
mov
sahf
test
xor
jecxz
dec
out
loope
neg
repnz
cmc
mov
dec
xor
iret
mov
inc
xor
xchg
imul
ss
mov
lock
sub
rol
clc
adc
out
mov
(bad)
jb
add
(bad)
inc
push
std
(bad)
out
adc
cwde
or
mov
cdq
xchg
mov
je
add
jp
pusha
fsubrp
lahf
xchg
mov
rcl
mov
inc
mov
mov
jge
gs
bound
inc
jmp
sbb
leave
jb
dec
cmc
mov
call
out
mov
cmp
loop
fstp
add
mov
(bad)
cmp
bswap
and
cmps
mov
and
inc
repnz
fldenv
sub
pop
adc
test
movs
ror
jecxz
cmc
or
psubd
daa
pop
mov
fst
mov
add
dec
mov
jp
je
aas
sub
push
xchg
int3
(bad)
in
out
mov
add
mov
and
shr
mov
push
add
out
(bad)
mov
popa
icebp
cmp
test
push
mov
xchg
push
leave
push
mov
or
test
call
or
cmp
or
pop
daa
mov
(bad)
add
cmp
jg
and
cmp
mov
aaa
repnz
loopne
xchg
pop
das
add
es
daa
jb
int3
ret
xor
xchg
aaa
jp
enter
pop
call
std
xchg
xor
leave
call
mov
mov
dec
xor
xchg
pop
jne
push
jle
popf
pop
scas
push
mov
pop
adc
pusha
fcomip
sub
(bad)
inc
call
xchg
outs
pushf
mov
fs
(bad)
dec
mov
inc
(bad)
lods
and
pop
xchg
mov
or
and
add
push
or
push
cmp
ins
in
inc
inc
js
fist
xor
fdecstp
or
pop
pop
mov
xchg
lea
cwde
push
pop
daa
outs
cmp
imul
dec
retf
(bad)
mov
or
xchg
ret
mov
outs
mov
stos
mov
(bad)
in
jmp
pusha
jns
stc
mov
jne
hlt
mov
shr
mov
ret
xchg
sti
pushf
inc
push
dec
js
xor
leave
sti
add
daa
adc
xchg
pavgw
jg
imul
and
(bad)
out
add
pop
in
mov
jge
int3
add
pop
mov
pusha
mov
adc
pusha
adc
cmp
std
jne
push
mov
repz
adc
mov
ss
sbb
ficomp
aad
pop
inc
push
pop
xchg
sbb
sahf
in
jg
mov
pop
jnp
sbb
adc
jmp
and
jmp
dec
fs
inc
dec
add
add
jmp
mov
rcl
xchg
fistp
adc
enter
in
jg
(bad)
xchg
ins
loop
mov
stos
mov
sub
dec
push
or
ins
mov
push
test
fisttp
das
fisub
sub
mov
subps
loope
fsubr
aad
xor
add
dec
outs
pop
into
pop
out
mov
mov
inc
lods
movs
pop
mov
cdq
adc
xchg
test
mov
out
cmp
iret
pop
out
ins
mov
neg
sbb
popa
sbb
sbb
or
out
cmp
shr
xor
mov
mov
pop
test
pop
les
mov
jg
cmps
inc
cmp
dec
stos
xchg
repz
mov
cmp
adc
jge
fimul
adc
xor
xor
pop
leave
lock
dec
xor
iret
xor
sbb
pushf
jmp
ret
in
aaa
mov
xchg
cli
dec
fwait
sbb
mov
xor
dec
sbb
and
mov
jo
pop
push
inc
mov
jl
in
loopne
push
repnz
bound
xor
mov
scas
dec
or
sbb
scas
call
test
mov
ror
jmp
cmp
stos
pop
fisubr
push
mov
sti
stos
xchg
aad
in
sub
jo
cmps
int3
retf
cwde
mov
cmp
loop
mov
or
fwait
xor
js
in
xor
(bad)
mov
cwde
pop
adc
pop
aas
lea
push
(bad)
adc
push
ror
lods
adc
add
cmp
jecxz
xchg
int
inc
push
ret
data16
(bad)
cmc
mov
mov
pop
sub
test
sbb
xchg
xor
inc
into
test
add
jnp
or
add
mov
repnz
mov
mov
(bad)
push
sub
push
add
push
imul
or
sub
xchg
sub
cmp
imul
pushf
repnz
data16
movs
scas
fcomp
fimul
lods
jmp
push
hlt
cmp
loopne
in
pop
fld
cmps
sbb
jbe
or
or
adc
jae
mov
xor
jecxz
pop
mov
rcl
test
mov
jmp
and
mov
xor
lods
loopne
mov
stos
mov
sub
mov
lds
xor
inc
adc
push
and
in
sti
xchg
daa
mov
aaa
shl
cs
push
or
cs
mov
pop
mov
lds
add
cli
adc
mov
(bad)
rcl
aas
inc
and
not
bswap
sub
enter
icebp
sub
ret
mov
sub
bsr
out
sub
retf
sub
xchg
and
call
out
(bad)
push
mov
std
loope
call
stos
jge
ret
xor
jb
mov
add
bound
test
lods
xor
test
mov
jnp
rol
sub
mov
mov
idiv
fwait
sbb
test
mov
movs
mov
clc
cmp
cwde
das
adc
scas
test
sub
or
test
iret
cmp
push
push
push
pop
sbb
in
inc
inc
and
popf
ds
ret
sub
cli
popf
dec
test
mul
xor
mov
push
call
mov
shl
or
push
mov
mov
stos
or
push
in
jo
hlt
jmp
in
leave
mov
adc
dec
jmp
mov
ret
xor
fstp
cli
and
add
sbb
sbb
jb
das
sti
imul
ret
loop
inc
xor
push
xor
cmp
push
loop
inc
push
cli
iret
add
mov
push
je
cmp
or
stos
aad
push
repnz
cmp
(bad)
retf
data16
mov
aam
mov
fdiv
inc
mov
mov
sbb
xlat
cmp
pusha
in
nop
push
xor
push
fcomp
xor
lahf
je
push
test
jecxz
call
mov
ror
push
xor
or
sbb
mov
adc
shl
pop
sbb
and
dec
jl
mov
sbb
mov
or
mov
cwde
cmp
push
push
sbb
lahf
xor
inc
outs
adc
push
xchg
ins
adc
mov
sub
daa
(bad)
adc
xor
xor
mov
xor
shr
sub
add
dec
call
sbb
inc
push
scas
xchg
cmp
push
or
jp
imul
sbb
jno
or
repnz
dec
(bad)
jmp
mov
pop
pop
cmp
adc
inc
imul
sub
adc
xchg
pop
test
outs
int
adc
or
xchg
gs
cmp
jne
jno
push
in
sti
jecxz
xchg
cmp
push
adc
mov
pop
and
jge
cmps
or
leave
imul
movs
xlat
int
and
jmp
stc
shl
cmp
mov
aad
add
mov
sbb
imul
cs
xchg
cld
or
mov
dec
sbb
retf
not
dec
adc
cwde
jbe
out
jle
lahf
fwait
jg
jo
pop
cvtps2pd
jne
cli
ret
fstp
mov
push
test
ins
in
mov
jge
data16
add
mov
cs
sar
sbb
mov
mov
pop
in
fisubr
push
push
add
adc
mov
dec
mov
frstor
ja
cmp
inc
bound
mov
imul
xchg
mov
repnz
xchg
sbb
mov
mov
adc
into
call
jp
outs
inc
jl
jge
mov
xchg
sub
in
push
fimul
and
jmp
jnp
jmp
shl
in
repz
mov
and
xchg
add
sub
(bad)
mov
jno
out
adc
out
pop
or
mov
fs
pop
xor
repnz
push
les
cld
in
cmp
dec
hlt
and
mov
add
cs
and
sbb
jb
push
nop
nop
pop
or
fcom
cmc
das
add
and
push
jns
inc
in
jmp
pop
pop
push
mov
jb
pop
popa
fst
outs
xor
stos
mov
movs
jle
mov
sub
fild
or
inc
sub
and
cmp
ds
and
aas
xchg
sbb
mov
and
push
xchg
mov
jne
adc
jb
add
mov
sbb
loopne
jecxz
clc
test
and
jne
jle
(bad)
fistp
bound
push
jge
aad
mov
ret
mov
sti
fs
bound
sahf
cdq
clc
pusha
fcmove
icebp
ret
bswap
cmp
push
xchg
sbb
cmp
pop
clc
and
int3
das
popf
xor
mov
sub
retf
sub
fcmovnbe
daa
sbb
test
jg
rep
mov
add
fldcw
or
jp
je
mov
je
jecxz
mov
push
mov
lds
xlat
or
scas
mov
addr16
cmp
mov
mov
nop
and
jne
fisttp
jp
cmp
call
adc
mov
out
sbb
mov
loope
out
mov
repz
pop
iret
fldenv
(bad)
aad
pusha
and
pop
add
inc
stc
retf
cmp
stc
sub
das
push
mov
retf
cdq
jle
into
push
mov
iret
push
push
xchg
jle
js
dec
fiadd
or
push
das
fwait
and
or
xor
mov
rcr
pop
aaa
and
fwait
mov
rcl
jnp
test
into
pop
fwait
cmp
retf
pop
aam
pop
rcr
jge
and
mov
rcr
add
jle
pushf
sub
push
push
xchg
jno
mov
arpl
inc
mov
push
ss
mov
lods
scas
xchg
mov
cdq
hlt
out
sub
int3
cmp
cld
mov
sbb
sub
xor
fidivr
ret
cmps
sbb
fbstp
fst
xor
mov
out
(bad)
stos
cs
sbb
push
or
or
mov
pop
test
xchg
sbb
add
cld
popa
dec
loope
inc
dec
ret
je
cmp
int3
xchg
xchg
mov
addr16
out
inc
shl
cmp
repz
in
iret
retf
and
mov
ds
inc
ins
dec
dec
xchg
idiv
sub
mov
cmp
fmul
inc
jle
mov
popa
nop
arpl
aaa
mov
cdq
mov
je
sbb
xchg
call
fcom
retf
mov
xor
push
jae
cmp
mov
or
enter
aaa
ins
cmp
out
mov
fisttp
jecxz
nop
or
jne
xchg
adc
pusha
fucomip
jnp
inc
sub
stos
xor
pushf
dec
push
gs
mov
push
jge
push
mov
pop
(bad)
(bad)
mov
out
dec
and
and
xchg
add
push
cmp
clc
mov
outs
in
cli
imul
sub
jno
int3
inc
adc
cmc
mov
cmp
cmp
int3
mov
js
sar
pop
retf
jb
mov
mov
inc
pusha
je
mov
movhps
pop
shr
jb
cmp
dec
xchg
es
pusha
shl
std
dec
movs
pop
lock
ins
icebp
xchg
ins
xor
ss
das
jae
sbb
mov
int3
adc
push
push
pop
or
cld
adc
call
fucomip
adc
add
into
xor
ins
scas
push
cmp
and
adc
and
sub
test
mov
and
mov
movs
out
or
pop
(bad)
das
je
mov
cmp
jmp
aaa
or
add
add
add
cmc
call
xor
sub
es
sub
je
ret
pop
adc
ror
mov
frstor
movs
xlat
ins
fldenv
mov
jecxz
mov
or
iret
mov
in
mov
push
icebp
fnsave
push
ds
(bad)
(bad)
not
jnp
call
imul
sub
push
push
push
mov
(bad)
jmp
mov
and
push
sub
add
std
jmp
cld
sub
pop
into
xchg
ins
pop
pop
or
cmps
inc
iret
jae
les
aaa
mov
popa
or
mov
jg
pop
inc
cdq
shr
dec
ds
fldenv
js
mov
daa
mov
or
aad
jno
and
(bad)
loope
jmp
cmp
adc
lea
test
into
mov
xchg
je
lds
movs
inc
mov
xor
mov
jo
test
cmovns
add
rol
jno
pop
inc
out
aam
rcr
cli
mov
lock
and
dec
mov
push
addr16
adc
ficom
js
mov
mov
add
lods
movs
sub
fnstcw
cld
or
add
lock
adc
add
in
sub
ins
xchg
(bad)
jle
(bad)
int
xchg
dec
jne
dec
ret
dec
sub
int3
mov
lds
movs
pop
xor
pop
fst
dec
arpl
jmp
cmp
mov
out
test
outs
ins
mov
push
fcomp
aas
jge
mov
pop
inc
add
stos
pop
or
call
fisubr
mov
xor
call
outs
in
cli
inc
jp
jmp
jno
pop
jo
sub
shl
adc
retf
jle
xchg
push
cld
(bad)
dec
sub
int
fcomp
(bad)
(bad)
dec
ror
mov
shl
push
cmp
pop
push
jno
jne
in
iret
clc
loop
js
mov
test
cmps
cmp
(bad)
sbb
or
xchg
retf
sar
rep
mov
mov
jo
pop
retf
call
fsub
cmp
and
mov
arpl
mov
xor
(bad)
fwait
push
mov
fwait
inc
ret
je
xor
sbb
xor
sub
cld
fidiv
(bad)
test
ret
inc
sub
inc
dec
push
xor
ror
lea
aas
stc
call
dec
(bad)
add
fdivrp
fdiv
push
fucomi
or
bound
cmp
cmc
xchg
mov
arpl
and
mov
lock
sahf
xchg
pop
lahf
and
ins
icebp
imul
mov
fsub
repz
mov
lods
aas
pop
mov
sub
mov
push
and
add
mov
bound
sbb
sub
xchg
push
adc
daa
inc
inc
call
test
ins
cmp
mov
jns
pusha
ja
xchg
push
dec
fistp
test
jae
dec
hlt
fs
sahf
movs
cmp
loop
xchg
dec
dec
cmc
pop
retf
not
stc
sbb
mov
and
les
pop
mov
stos
mov
cmp
movs
shl
mov
test
in
xlat
adc
jl
mov
out
ins
(bad)
jp
pop
mov
cmp
cmp
xor
pusha
pop
pop
imul
dec
rol
outs
fs
add
push
(bad)
push
call
stos
test
jl
mov
adc
mov
adc
dec
adc
jns
fsubr
and
push
(bad)
stos
adc
mov
out
call
mov
add
js
ins
mov
jno
fndisi(8087
aam
pop
xchg
sub
out
aaa
sbb
cwde
ins
dec
test
scas
popa
pop
fnstsw
dec
dec
xchg
lock
mov
jge
sub
test
inc
sbb
(bad)
and
sahf
jle
ret
pop
hlt
repnz
add
mov
and
(bad)
push
mov
add
sub
cmps
cld
ja
jne
dec
and
mov
sbb
xchg
in
verw
(bad)
adc
ss
ins
xchg
ss
in
pop
add
dec
fistp
mov
ds
xchg
xchg
sbb
jne
in
cwde
push
(bad)
jnp
stos
xchg
mov
dec
into
out
gs
inc
mov
in
jge
test
push
sub
dec
pop
mov
xor
mov
int3
stc
(bad)
std
imul
xor
mov
mov
scas
popf
cmp
enter
xchg
xor
pop
and
aas
pop
retf
in
and
and
fidiv
fwait
add
(bad)
pushf
scas
arpl
pop
js
dec
pop
fst
or
or
ss
add
aas
jb
dec
or
sbb
jo
cmp
sub
xchg
icebp
or
scas
dec
dec
adc
ror
pop
cmp
pop
lea
dec
mov
das
in
clc
pop
pop
push
mov
mov
repz
pushf
sbb
div
lock
xchg
es
(bad)
mov
dec
dec
inc
fwait
scas
mov
loope
retf
xchg
jnp
fsub
add
loopne
aaa
pusha
aad
cs
ins
adc
call
xchg
(bad)
fiadd
xchg
inc
add
xchg
ins
leave
jno
push
pop
adc
int
pop
call
mov
xchg
xor
pusha
push
push
out
in
std
bound
and
scas
(bad)
jmp
repnz
fdivrp
sbb
pop
sbb
retf
push
mov
adc
pop
inc
jle
dec
out
adc
pop
ret
xchg
push
push
call
ja
leave
adc
lahf
enter
in
outs
cmp
mov
and
xchg
push
xchg
fdiv
sub
fnstcw
mov
mov
xchg
stc
lods
lock
popa
repz
std
aam
js
xor
stc
dec
push
(bad)
cld
scas
in
push
fistp
pop
sbb
inc
out
push
lods
std
mov
inc
(bad)
xchg
cwde
loopne
lock
push
push
adc
stos
add
out
adc
or
and
dec
mov
pop
adc
fist
mov
mov
sbb
retf
stos
jmp
add
aam
in
in
jae
repnz
pop
pop
mov
xchg
push
xor
cmp
cwde
mov
arpl
ja
sahf
cmp
xchg
lahf
das
cmp
cdq
fwait
push
cmp
ja
xchg
inc
inc
add
lahf
jnp
pop
add
scas
adc
pop
int
cli
inc
cmc
mov
repnz
cmps
leave
inc
mov
outs
or
ret
add
jle
xchg
add
rol
and
sbb
rol
bound
mov
sub
dec
inc
sub
sub
test
dec
xchg
inc
outs
sbb
add
xchg
add
or
jp
into
mov
dec
pop
test
ins
dec
movs
mov
stos
stc
in
push
mov
inc
out
or
outs
push
mov
pop
data16
cwde
sub
clc
xchg
cmps
(bad)
pop
xor
and
sbb
sahf
jae
aas
(bad)
cs
fcomp
retf
loop
leave
in
push
loop
ins
out
sub
ds
adc
sbb
into
dec
xchg
adc
sub
dec
movs
sbb
mov
jno
sti
cmp
or
jae
jae
sbb
test
loop
mov
mov
pop
stos
add
sar
cdq
cmps
cli
mul
retf
sub
add
xchg
(bad)
pushw
pop
adc
sbb
nop
aam
inc
daa
stos
fiadd
mov
mov
or
jmp
push
call
jge
add
(bad)
jecxz
(bad)
mov
call
popf
fisttp
fst
ins
jp
cli
mov
or
mov
sub
jno
mov
test
std
mov
sahf
(bad)
mov
push
sti
test
mov
and
push
push
cmps
add
inc
outs
in
xchg
mov
(bad)
cmp
addr16
inc
mov
cmp
inc
or
aaa
xor
or
add
push
aam
or
pop
adc
dec
sti
lods
scas
es
in
inc
fistp
fdivr
sub
xchg
sub
test
cli
imul
mov
loop
nop
mov
inc
loope
call
sub
inc
xchg
lahf
inc
jp
out
or
jmp
div
sti
or
pop
icebp
adc
test
inc
mov
cmp
jmp
push
or
xor
jmp
xchg
fmul
push
(bad)
loop
xor
and
add
xor
in
cmc
pop
adc
push
lahf
stos
inc
push
ins
in
pusha
dec
dec
jbe
xchg
outs
addr16
mov
jg
ss
mov
test
sub
xchg
xchg
int
jle
cmps
dec
mov
sbb
(bad)
cmp
inc
sar
add
xchg
(bad)
mov
xor
or
or
out
dec
pop
mov
shr
fld
sbb
pop
or
pop
in
mov
mov
sbb
mov
mov
dec
test
shr
lods
add
adc
in
jbe
in
push
dec
mov
in
(bad)
leave
ret
stc
(bad)
(bad)
mov
cdq
push
sub
push
pop
cwde
pop
call
loopne
test
std
push
and
sar
enter
mov
or
push
dec
test
add
in
lea
jmp
xchg
int3
inc
mov
imul
or
add
mul
xor
jge
xchg
jb
mov
jmp
(bad)
sub
inc
jae
pop
cs
and
add
and
inc
idiv
xchg
sti
enter
sub
mov
imul
add
sub
inc
ja
scas
inc
aam
sub
pop
in
pop
sbb
mov
popa
sub
(bad)
fmul
inc
aas
adc
sub
shl
repz
and
rcl
sbb
sub
int3
mov
push
inc
clc
aam
xchg
and
pop
mov
cli
pslld
lahf
gs
jno
cmp
in
out
(bad)
mov
or
sbb
scas
or
cwde
dec
(bad)
xchg
push
add
cmp
arpl
adc
js
loope
mov
repz
pop
push
(bad)
sub
pop
xchg
and
inc
retf
mov
(bad)
ins
push
jbe
(bad)
jl
retf
shl
dec
mov
aaa
cmp
xor
sbb
ins
ins
jge
pop
mov
call
daa
int
iret
rcl
cmp
js
ret
push
cwde
call
push
pop
lahf
inc
fcomp
adc
sub
adc
ror
fistp
xchg
inc
jnp
repz
std
jp
shl
mov
pop
or
and
adc
or
mov
(bad)
lods
ret
arpl
jmp
leave
outs
push
pop
stos
movs
sub
leave
popf
mov
jmp
aam
pushf
(bad)
lods
push
in
jmp
mov
sbb
ins
(bad)
xchg
sub
cmp
inc
mov
std
pop
into
sub
lods
sub
mov
inc
bound
xchg
cs
jo
sbb
mov
into
movs
push
scas
or
lods
xchg
mov
shl
mov
sti
lock
addr16
je
and
mov
cmp
sub
loopne
mov
push
or
retf
dec
enter
imul
jns
out
aaa
sbb
lea
mov
(bad)
lods
sbb
(bad)
outs
popf
(bad)
sti
xor
mov
cmp
fcmovbe
sar
mov
cmp
push
xor
inc
add
rcr
mov
and
jbe
je
pop
retf
aas
push
dec
sub
or
aam
cwde
jno
sti
repz
ins
jle
out
add
shl
outs
and
cmc
cmp
adc
sbb
pop
mov
jl
mov
neg
jo
pop
pop
jns
stc
or
cmp
nop
(bad)
loopne
aaa
loop
or
xor
out
adc
and
xor
ds
adc
mov
lahf
xlat
add
pop
mov
std
xchg
mov
dec
out
out
retf
popa
xor
mov
and
adc
mov
and
call
pop
jmp
jo
std
pushf
cdq
lock
call
inc
push
mov
es
add
shl
push
cmp
cmp
pusha
scas
stos
and
popa
aad
xor
test
fwait
ret
enter
into
rol
push
mov
xlat
or
xor
cmp
jp
xchg
fisub
test
shl
mov
rcl
xor
mov
fidiv
xor
pmulhw
push
js
mov
xor
dec
xchg
ret
lea
xchg
lock
adc
out
jmp
mov
or
loop
iret
mov
xchg
mov
xor
add
adc
stos
pop
sub
push
outs
test
adc
adc
jge
mov
hlt
je
fmul
add
cs
xor
sbb
push
ds
sub
and
sub
inc
add
cwde
gs
fcom
cmp
sub
adc
(bad)
push
lock
rcr
aad
sub
adc
add
push
fild
ret
test
jns
mov
mov
int3
in
dec
push
pop
sbb
nop
xlat
mov
cmp
jp
data16
cmp
cli
addr16
out
mov
jg
into
sbb
cmp
xchg
lds
and
add
aam
xchg
fwait
adc
dec
test
inc
push
sbb
fcmove
sub
loopne
or
push
xchg
pop
in
jmp
ja
sti
sahf
(bad)
std
push
mov
rol
imul
and
or
idiv
out
fs
cmp
dec
(bad)
(bad)
dec
push
push
test
ss
test
test
mov
outs
call
ret
mov
callw
mov
push
pop
xchg
pop
push
or
mov
ja
jo
pop
arpl
cmp
jns
das
mov
fist
out
loopne
dec
mov
les
call
push
fiadd
cmp
sbb
ret
cld
pop
push
mov
xor
pop
mov
mov
cmp
sub
adc
or
mov
loop
mov
xchg
and
(bad)
aad
loope
sbb
mov
cdq
popf
(bad)
inc
outs
pop
adc
retf
cmps
inc
div
into
fwait
(bad)
iret
shl
cwde
and
xchg
lahf
retf
push
shr
push
rcr
fiadd
hlt
cmp
xor
jmp
xor
dec
push
xchg
pop
stc
jge
sar
test
addr16
(bad)
mov
daa
xor
jae
ins
cdq
pop
fsubp
gs
xor
bound
dec
rcr
mov
add
scas
add
out
inc
jle
clc
sub
stos
pop
lea
aas
rol
(bad)
test
xchg
addr16
add
and
nop
ror
pop
push
aam
jecxz
sti
or
int3
arpl
pusha
test
xchg
adc
out
cmp
or
test
adc
aam
adc
xchg
retf
popf
pop
xchg
jb
lahf
jae
jmp
mov
ss
into
clc
leave
xor
inc
pop
add
jl
mov
push
jmp
rol
fldcw
dec
xor
jbe
sbb
xor
das
fld
lea
jmp
jno
ds
cmp
mov
xor
iret
imul
in
(bad)
jmp
arpl
mov
xchg
ror
xchg
lods
call
(bad)
retf
fidivr
xchg
inc
iret
push
mov
xchg
icebp
(bad)
mov
or
sti
pushf
in
mov
in
mov
mov
sti
add
fld
or
daa
and
xchg
pop
ins
std
inc
mov
icebp
fimul
mov
scas
sbb
adc
and
xor
mov
sbb
or
(bad)
jnp
jb
dec
inc
sar
shl
clc
repnz
imul
aaa
cmp
repz
mov
xchg
sub
out
or
test
aam
ja
xchg
loopne
mov
dec
inc
sub
mov
dec
mov
sbb
cld
gs
test
xchg
sahf
mov
idiv
or
loope
into
fisub
add
jmp
aaa
jnp
sub
inc
jmp
cmps
cli
add
mov
fcom
and
xlat
movs
cli
jle
clc
adc
aas
add
adc
cmc
jnp
dec
push
pop
inc
pop
pop
out
cmp
and
retw
mov
cdq
test
dec
addr16
rcl
cli
int3
jae
pop
sar
inc
sub
dec
xor
push
xchg
mov
xchg
add
outs
cmp
pusha
fldenv
inc
adc
retf
cmps
add
js
xlat
cmp
call
fisttp
or
and
adc
fxch
retf
cwde
mov
cld
jmp
out
inc
mov
ss
lds
sbb
mov
push
jae
push
popa
add
sub
shl
and
xor
out
sbb
in
ffreep
(bad)
fisttp
cmp
loope
outs
jns
into
adc
bound
sub
and
jp
(bad)
ins
popf
shl
add
(bad)
sub
push
neg
jb
sub
or
pop
movs
mov
ss
inc
loopne
jns
push
push
jmp
cmp
jp
rcl
sbb
mov
xchg
js
or
mov
outs
ds
mov
inc
jno
popf
out
cmp
mov
icebp
push
movs
aas
into
test
shr
in
or
or
sub
pop
repnz
add
push
mov
adc
outs
sub
fldcw
pop
sti
or
add
xor
(bad)
mov
mov
repz
push
(bad)
jmp
retf
or
imul
(bad)
and
retf
dec
scas
retf
mov
dec
clc
inc
and
mov
aaa
loope
jle
jo
js
jo
arpl
pusha
xor
or
pop
mov
scas
fdivp
enter
lods
stos
push
adc
test
cld
dec
sbb
or
add
fisub
pop
iret
retf
push
inc
pop
mov
lock
xor
jno
jg
inc
cld
pop
(bad)
(bad)
pop
adc
leave
js
hlt
aas
mov
les
sub
rol
mov
jo
inc
sahf
cld
aam
in
popa
and
enter
sti
repnz
mov
out
inc
xchg
push
mov
jecxz
jbe
pop
or
xchg
into
call
sub
popf
(bad)
pop
mov
leave
lods
lods
adc
fs
shl
pop
dec
mov
sub
pushf
pop
ja
aas
mov
push
fist
xor
jmp
call
fcomp
mov
jb
sub
mov
out
xor
cmps
pusha
and
or
sub
pop
jne
outs
xor
xchg
add
pop
(bad)
ja
ret
cs
ds
push
cmp
loope
mov
fsub
dec
(bad)
push
cmp
je
pop
sbb
das
imul
mov
mov
push
retf
loop
imul
sbb
int
push
xchg
inc
out
cmp
cld
mov
fisubr
pop
inc
ficom
xlat
(bad)
lock
add
out
(bad)
pop
(bad)
sbb
js
loope
push
sbb
ss
call
das
mov
cmovne
cmp
inc
push
(bad)
inc
int3
imul
add
movs
lea
div
or
lahf
aas
test
mov
into
test
xor
cmp
pop
pop
xor
cmp
add
push
jae
js
add
cdq
(bad)
sub
jmp
inc
jge
outs
clc
int3
mov
sbb
push
aad
(bad)
and
std
ret
dec
gs
push
xchg
inc
mov
and
sar
jo
test
gs
mov
js
fld
xchg
pop
fiadd
add
sbb
xlat
xchg
jo
fstp
iret
daa
jae
jo
add
cmp
fcomp
je
shl
push
jnp
aaa
mov
imul
cs
pop
xor
xchg
(bad)
jge
and
mov
cmp
test
and
mov
mov
fcmovu
imul
je
cwde
call
imul
aas
(bad)
cld
fstp
pushf
pop
xchg
push
inc
adc
popa
push
sub
test
sub
push
scas
call
sbb
pop
xor
or
loop
mov
test
sar
movs
cmp
mov
(bad)
test
idiv
je
loope
adc
mov
cmp
out
xor
mov
dec
pushf
cld
iret
je
fcmovb
mov
mov
dec
dec
hlt
xchg
cld
dec
shl
and
mov
xor
loopne
add
pop
imul
shl
cmp
pop
xlat
sub
or
in
stc
or
lea
xchg
mov
(bad)
nop
xchg
lahf
movs
lods
(bad)
cmp
xor
push
into
jnp
cmp
ss
imul
fst
lea
inc
iret
test
pop
repnz
je
sub
test
ja
pop
repnz
dec
out
(bad)
repnz
dec
mov
dec
lahf
cmps
push
push
xor
into
or
mul
int
cli
daa
sbb
pop
xor
add
jne
(bad)
ficomp
ins
sahf
daa
mov
int
pop
xor
repz
dec
inc
dec
ret
xchg
and
add
imul
lods
pusha
or
loopne
xor
retf
mov
out
jle
loop
fimul
test
or
stos
loop
les
mov
(bad)
retf
push
ja
xchg
enter
sub
sub
jnp
ficomp
dec
and
ss
in
inc
push
out
je
push
int
setle
inc
es
fs
lea
mov
fstp
outs
sub
pop
mov
sti
jmp
lahf
inc
add
std
fldenv
das
fwait
inc
sahf
sbb
inc
mov
(bad)
jbe
jns
rcr
or
xchg
mov
test
sub
dec
scas
xchg
add
lea
cmps
stos
mov
xor
xchg
leave
pop
jo
inc
or
mov
sub
mov
cmps
fild
int3
in
pop
inc
fwait
or
das
and
sub
imul
mov
sbb
mov
adc
lds
sbb
sub
xchg
adc
adc
dec
adc
loope
hlt
add
bnd
cmps
jg
push
adc
jg
sahf
mov
xchg
push
or
in
out
fs
jae
(bad)
cmps
shr
icebp
add
cmps
test
ret
inc
pop
mov
cmps
adc
mov
pop
repz
mov
leave
sub
mov
mov
sub
cmp
pop
push
leave
mov
mov
ret
and
in
jmp
out
(bad)
icebp
jnp
aas
dec
loope
mov
mov
mov
add
xor
add
dec
mov
or
imul
add
loope
ins
out
lods
mov
push
lods
xor
cmc
stc
call
jg
and
cmc
dec
xor
cmps
lahf
xor
jno
dec
add
retf
mov
out
gs
sahf
push
cmp
jns
push
pop
jns
imul
cs
mov
lahf
xchg
cmp
mov
sbb
popa
cli
test
or
mov
push
cmp
call
sbb
in
movs
push
fdiv
and
sahf
(bad)
xor
call
add
jmp
ja
adc
dec
inc
jmp
or
popf
and
icebp
push
int
leave
addr16
les
cmp
fcom
popf
sub
dec
add
xchg
ins
hlt
fcomp
rcr
(bad)
(bad)
mov
xor
inc
fwait
sub
sub
outs
lock
aam
dec
clc
mov
push
ins
rdpmc
addr16
stos
mov
sbb
stos
ja
xchg
movs
sar
xor
repz
outs
ja
scas
and
dec
pop
mov
push
mov
jmp
xchg
jmp
adc
and
fisttp
stos
mov
xchg
shl
push
sub
fistp
sbb
adc
inc
jmp
mov
add
mov
stc
inc
js
mov
mov
fbld
pop
mov
lds
sbb
sbb
jo
mov
scas
mov
jae
in
int3
cwde
lahf
add
fst
push
imul
and
retf
test
pop
sub
xor
jnp
xchg
outs
sub
stos
dec
sub
jecxz
(bad)
push
xor
retf
adc
xor
mov
test
lahf
cwde
mov
addr16
(bad)
jae
scas
ins
jmp
fist
dec
and
jp
test
fisubr
xor
adc
push
adc
push
or
inc
jmp
jge
(bad)
mov
shl
pop
popf
imul
pop
das
fs
adc
dec
or
imul
out
push
fcmovnu
arpl
mov
add
jns
adc
les
sbb
fs
jo
xchg
ja
and
sbb
add
jns
out
sub
xchg
in
movs
jmp
mov
mov
cli
call
inc
mov
sbb
xor
lahf
push
out
sub
pop
stc
sbb
mov
push
or
(bad)
jns
pop
jne
lock
je
push
loope
(bad)
test
rcr
push
pop
lods
stos
pop
jno
imul
in
test
mov
mov
add
and
(bad)
cmp
sbb
sahf
and
sbb
js
retf
or
pop
fisubr
sbb
fld
push
or
jecxz
jl
sub
inc
mov
mov
arpl
or
jbe
(bad)
outs
jl
fstp
pop
xchg
into
mov
movs
push
nop
pop
adc
inc
pop
adc
frstor
mov
add
xchg
jp
out
and
dec
es
xchg
or
out
cmp
(bad)
jmp
adc
mov
(bad)
js
ror
lds
jmp
dec
les
pop
dec
pop
(bad)
fsub
add
(bad)
sbb
out
test
sub
mov
or
pop
cdq
mov
cmc
nop
cmps
pop
movs
fsubr
xlat
sub
sbb
mov
pushf
or
mov
add
test
(bad)
fistp
push
lock
sub
(bad)
mov
iret
push
jbe
dec
je
push
dec
div
lods
mov
inc
and
test
jns
test
adc
test
imul
cwde
push
xor
cmp
push
enter
lds
ror
iret
add
into
adc
sub
sti
push
in
mov
pop
loopne
push
lods
xor
(bad)
je
lahf
lahf
add
lods
ins
repz
fldenv
cmc
enter
fisttp
into
inc
mov
push
jnp
test
stos
das
cmps
in
push
adc
mov
push
mov
in
(bad)
and
out
dec
add
xchg
(bad)
jnp
adc
in
and
add
sub
ja
sbb
sub
pop
ss
retf
mov
mov
dec
xchg
clc
adc
xchg
push
call
jnp
in
push
adc
arpl
jns
les
sub
jnp
mov
push
mov
inc
lods
fmul
sbb
dec
loope
popf
in
out
call
pop
fwait
xor
sar
sbb
add
inc
inc
lock
popa
loope
sahf
push
xor
jecxz
sub
lds
retf
rcr
sub
inc
xchg
pop
rol
cmps
sbb
xchg
push
stos
jns
push
fwait
or
rcl
out
loope
test
xchg
mov
or
mov
dec
and
and
pusha
ins
adc
jae
test
mov
cmp
xchg
jp
out
mov
dec
in
test
mov
push
pop
mov
pop
push
mov
jecxz
aas
aaa
ror
sub
sub
sbb
imul
mov
mov
push
lods
and
cmps
bound
pop
mov
clc
adc
pusha
dec
fiadd
outs
pop
jle
mov
and
int3
les
sahf
or
imul
scas
lds
xor
stos
daa
pop
jl
in
out
adc
or
out
mov
inc
inc
icebp
enter
inc
cli
fmul
mov
int
pop
jl
xchg
movs
jecxz
pop
inc
ins
sahf
cmp
and
call
ret
mov
xor
cmp
xor
mov
stc
call
popa
dec
rcr
adc
cs
loop
xor
test
jp
and
dec
add
jne
popf
sub
push
imul
ficom
lea
push
prefetch
sbb
sbb
inc
pusha
pop
pop
xor
fdiv
mov
imul
(bad)
dec
jecxz
(bad)
cmp
lds
mov
add
aas
test
xchg
mov
imul
mov
xchg
cmp
neg
out
push
jg
push
dec
loopne
sbb
test
popf
pop
mov
cmp
sbb
add
xchg
fistp
aad
adc
sbb
xor
xor
js
dec
sub
dec
or
pop
push
loope
sub
fsubr
fst
adc
push
or
cmp
fmul
jp
lahf
add
sub
outs
xchg
mov
(bad)
mov
cmp
hlt
cdq
(bad)
pop
dec
sbb
pop
sub
inc
inc
cdq
loopne
imul
in
clc
ret
fidiv
into
mov
or
(bad)
out
out
or
add
add
nop
fstp
ret
fwait
mov
jle
les
cs
aas
retf
inc
pop
jbe
or
dec
xor
imul
push
fadd
lahf
adc
push
call
adc
xor
cmps
jecxz
gs
out
mov
xchg
cmp
shr
adc
push
xor
xchg
or
gs
dec
adc
(bad)
fnsave
or
mov
dec
repz
cli
call
fbld
ret
jp
add
push
(bad)
cdq
sbb
sti
and
(bad)
(bad)
ficom
and
jle
pop
hlt
outs
sub
lds
cdq
jge
gs
pop
sbb
and
lods
mov
mov
gs
pushf
push
jno
mov
in
rcr
shl
addr16
rep
pop
push
jmp
xor
push
gs
xor
sbb
aad
ins
ins
pusha
lahf
gs
sti
icebp
dec
es
dec
mov
sbb
(bad)
in
add
call
xchg
jns
push
dec
or
loopne
out
adc
rcl
xchg
es
mov
out
aaa
loopne
cmp
jmp
sub
jl
or
add
in
adc
pop
mov
and
inc
imul
icebp
sub
repnz
movs
das
shl
stc
loope
push
inc
and
dec
pop
xor
mov
shr
jecxz
mov
pop
pop
mov
lods
mov
add
push
mov
jecxz
adc
sbb
jae
and
out
arpl
test
adc
nop
addr16
or
imul
push
movs
fs
imul
shl
test
add
and
jbe
icebp
cli
(bad)
sub
fisub
ror
repz
dec
xor
jo
mov
mov
cmp
mov
mov
lds
cdq
push
adc
stos
xor
xchg
jl
in
and
push
jge
mov
movs
pop
xchg
iret
or
fld
mov
in
adc
cmp
pop
ficom
mov
arpl
inc
mov
gs
mov
add
xchg
loopne
imul
inc
xchg
(bad)
push
lea
dec
scas
fiadd
gs
add
inc
inc
mov
mov
je
lds
adc
popf
into
in
cmps
mov
mov
or
mov
jmp
mov
sub
add
in
shl
popf
(bad)
call
mov
dec
xor
int
sub
pop
mov
sub
adc
jge
cmp
fs
cdq
enter
jp
(bad)
retf
push
int3
mov
aas
into
inc
cmp
add
jp
or
repz
push
jne
fcom
ss
inc
test
das
jle
cld
pop
in
xor
xchg
mov
lods
inc
mov
sahf
dec
sbb
enter
jl
je
add
ret
movs
sbb
loop
or
clc
movs
jle
fmul
int3
scas
mov
adc
adc
dec
sbb
pop
fidivr
mov
xchg
mov
in
sbb
inc
pop
cld
int3
daa
mov
call
jmp
push
popa
data16
stos
jl
xchg
sub
scas
push
pop
cdq
cwde
jecxz
pop
jecxz
sbb
data16
lock
jmp
pushf
loop
and
or
adc
push
repz
cmp
xchg
xchg
lahf
jae
mov
adc
inc
adc
xchg
jmp
push
das
sbb
adc
in
cdq
adc
jae
add
mov
xor
mov
retf
(bad)
cwde
ins
add
ficom
xchg
scas
adc
sub
movs
pop
pop
ins
pop
mov
mov
and
out
jp
push
dec
jno
fs
retf
add
cld
movs
ins
out
aaa
dec
mov
sar
out
loop
out
out
cdq
dec
arpl
inc
shl
and
cmp
out
into
dec
ins
push
jmp
or
mov
xlat
mov
xor
sbb
(bad)
clc
xchg
xor
out
retf
and
pop
cwde
jge
pusha
xchg
lahf
iret
mov
pop
in
cli
pop
cli
mov
shl
test
push
in
jp
out
test
mov
ss
mov
call
dec
aaa
stos
es
cld
cld
cmps
or
fstp
cli
mov
dec
ror
pop
xchg
cwde
add
sbb
test
inc
sub
leave
scas
in
xor
or
dec
sub
loop
fisub
jecxz
lods
or
jmp
mov
fisubr
dec
sub
mov
mov
cdq
mov
ds
push
or
mov
dec
pop
mov
jb
mov
push
scas
fiadd
jne
mov
cmp
mov
inc
rol
stos
add
dec
xchg
sbb
call
xchg
xchg
jbe
int
mov
es
fcom
repz
and
pop
xor
push
scas
movs
scas
lods
stc
stos
fld
in
sbb
sub
rcl
rol
arpl
fmul
retf
dec
bound
test
inc
retf
mov
xchg
shl
lods
arpl
mov
in
pop
xchg
ins
aaa
imul
or
pop
sub
mov
inc
pushf
adc
jg
push
pop
and
sub
jge
xchg
ins
add
enter
dec
in
bound
loop
and
push
dec
cmp
push
inc
gs
scas
inc
mov
dec
hlt
pop
xor
call
or
das
mov
xor
sub
mov
dec
repnz
and
loope
imul
loope
mov
call
(bad)
inc
ja
sahf
int3
and
cwde
add
pop
retf
aas
in
jo
in
ins
leave
xor
test
cmp
jbe
jae
sbb
outs
jb
xor
sbb
mov
sbb
lock
hlt
cmp
dec
sahf
sub
jnp
lods
adc
cmp
push
aas
sub
jp
mov
inc
pop
lea
in
pop
mov
mov
cmp
ret
sbb
sbb
and
and
fisttp
cli
sbb
or
pop
or
sbb
sub
arpl
pop
icebp
and
sub
xchg
cmp
lds
adc
mov
aas
in
(bad)
adc
mov
lds
dec
jecxz
hlt
mov
rol
xor
sub
dec
movs
pop
mov
cli
pop
das
cmps
xor
stos
clc
mov
xor
pop
fnsave
mov
mov
dec
cmc
aas
pop
mov
fild
sahf
push
push
pop
lds
popf
aad
rcr
std
mov
sub
mul
lock
mov
sahf
shl
xor
jnp
jmp
push
add
into
jo
out
pop
inc
pop
icebp
pop
mov
leave
iret
fistp
retf
mov
into
es
les
aam
mov
imul
mov
sbb
jo
sbb
pminub
sub
retf
dec
push
add
add
(bad)
retf
dec
or
push
mov
rcr
sahf
xchg
cmps
add
jle
mov
cmc
stc
sbb
jae
cs
jnp
sahf
pop
rcl
adc
dec
jge
movs
ds
not
mov
jb
retf
fs
jo
inc
sbb
xchg
jp
out
nop
into
mov
cli
sub
push
pusha
jo
push
jmp
mov
fsub
mov
and
adc
add
movs
inc
push
aad
aam
dec
and
out
mov
pop
adc
fxch
or
mov
test
mov
(bad)
xor
ror
ficomp
jmp
ss
mov
js
inc
int3
cmp
jns
cli
and
rol
dec
cmc
call
aaa
clc
sub
jmp
(bad)
fnstenv
or
cmp
dec
bnd
ds
cmps
int
movs
push
xlat
outs
bound
pushf
jbe
inc
out
dec
int
jmp
stos
mov
call
pop
shr
(bad)
sbb
outs
test
sub
xchg
push
aaa
mov
scas
sbb
or
pop
push
pop
pop
les
inc
into
adc
add
adc
leave
ror
add
arpl
sbb
cmp
fs
push
dec
js
(bad)
pop
dec
outs
ins
push
fldcw
jnp
jno
push
addr16
cmps
dec
sbb
ja
cmps
fcomp
imul
cwde
nop
pop
xchg
xchg
test
inc
cwde
mov
test
nop
fmul
mov
pop
xchg
adc
ds
ret
cmps
xor
int
pop
jns
leave
push
enter
aad
rcl
and
lock
adc
mov
jge
stos
dec
out
ss
xchg
arpl
and
cmp
push
mov
xor
mov
inc
pop
push
hlt
sbb
add
xor
adc
xchg
adc
jmp
dec
or
adc
out
sub
(bad)
push
jb
je
lds
pop
loope
sahf
sub
and
stc
sub
stos
pop
sub
aad
jns
lods
ja
int
cli
imul
push
mov
sbb
jg
int
mov
into
lea
lds
dec
mov
mov
sub
mov
push
and
sbb
xchg
in
pop
movs
mov
mov
cld
adc
mov
test
scas
ss
in
sti
xchg
mov
add
arpl
dec
nop
jecxz
out
int
mov
fwait
in
xor
xor
in
call
dec
mov
sbb
xor
inc
add
ja
mov
xor
adc
test
mov
jmp
aas
int3
clc
mov
push
jg
rol
lahf
push
cmp
sar
cmps
adc
lock
jle
xchg
mov
rep
cmps
scas
xchg
mov
jg
popa
fimul
call
mov
repnz
rcr
sbb
data16
dec
fimul
aad
and
out
dec
sbb
pop
movs
repz
jne
jnp
jnp
xor
xchg
inc
adc
push
scas
int3
mov
jmp
sub
push
ins
arpl
(bad)
pop
stc
je
dec
mov
jge
imul
push
push
jb
scas
dec
cmps
jne
dec
xchg
test
push
stos
mov
pop
jmp
cmp
call
ja
jle
add
(bad)
jmp
and
adc
xchg
pop
mov
scas
dec
add
test
into
sub
sub
mov
je
clc
clc
and
add
imul
mov
pop
call
cmp
xchg
or
mov
mov
pop
xchg
out
dec
in
mov
out
stos
hlt
test
adc
lods
enter
sahf
test
xchg
lods
test
test
popa
jmp
mov
and
xor
mov
jp
pusha
in
sbb
sbb
jnp
push
movs
ds
ins
int
inc
rol
fdiv
ins
pop
cmp
out
mov
(bad)
cmp
lea
sub
out
and
fild
imul
shr
fcom
shr
or
sar
popf
and
into
jno
ja
loope
retf
add
and
sar
loop
jecxz
cmp
pop
stos
ror
out
(bad)
stc
(bad)
clc
fsubr
es
popf
(bad)
push
add
cmp
mov
mov
push
or
adc
lods
sbb
cdq
out
loopne
push
bound
xchg
or
inc
ja
mul
stos
and
pop
mov
xor
xchg
jp
movs
add
jno
call
pop
lock
(bad)
data16
sbb
daa
sub
cmps
movs
aaa
push
icebp
sti
jb
aaa
or
js
dec
femms
cld
inc
add
add
xchg
(bad)
push
data16
xchg
enter
adc
iret
xor
int
sahf
fadd
mov
xchg
fdiv
push
adc
push
in
inc
xchg
push
jae
adc
ror
gs
in
ds
hlt
jns
ret
clc
jne
pop
jecxz
in
popa
push
ins
popa
xlat
inc
cmp
aad
sbb
sbb
add
adc
pop
mov
repnz
pusha
adc
(bad)
cld
dec
into
dec
add
jmp
inc
fidiv
cs
and
(bad)
hlt
lds
sbb
sub
test
dec
inc
adc
push
aaa
jmp
retf
sbb
fdiv
jo
dec
push
repnz
pop
jg
and
cdq
(bad)
scas
iret
jns
add
std
push
xchg
xchg
sahf
cwde
mov
inc
pop
mov
xor
stos
jp
mov
popa
adc
xchg
xchg
push
imul
adc
ins
jl
cmp
shl
mov
psllw
cmp
cmp
lock
jns
scas
dec
push
and
imul
xchg
adc
lock
mov
into
pop
and
outs
pop
jno
imul
ds
dec
fild
test
mov
out
adc
lahf
test
sbb
mov
and
ret
push
dec
out
test
mov
jge
mov
iret
mov
pop
push
bound
cmps
and
repz
sbb
lock
mov
push
add
jnp
push
adc
cmp
(bad)
jo
add
gs
xlat
sar
out
sbb
scas
ins
ds
mov
pop
shl
push
xor
pop
popf
mov
addps
dec
and
rol
mov
stc
ds
outs
pop
loopne
test
add
sub
imul
add
xor
outs
cli
cmps
inc
jge
cwde
fbld
shl
mov
iret
xchg
ds
jo
(bad)
xor
jae
ins
rcl
sbb
add
arpl
or
inc
(bad)
mov
call
cmps
push
cmc
push
mov
sar
iret
icebp
int3
daa
repnz
xor
add
in
and
test
xchg
xor
shr
add
cld
mov
xchg
scas
jge
sub
sbb
stos
imul
xchg
jb
add
inc
sub
imul
cwde
shl
ret
mov
pop
and
and
ror
sub
push
jb
rol
push
aad
out
inc
mov
enter
xlat
scas
ja
nop
lds
gs
out
int
mov
or
or
push
clc
scas
xchg
daa
mov
and
mov
movs
pcmpeqd
outs
xor
xor
mov
popa
imul
(bad)
repz
int3
outs
sbb
mov
fimul
cmp
add
push
adc
loopne
call
add
dec
jl
push
push
mov
inc
jle
pop
or
mov
mov
lods
push
jecxz
cmp
sub
sbb
rcr
into
inc
dec
mov
push
mov
xor
(bad)
out
or
sbb
pop
(bad)
jmp
mov
retf
(bad)
movs
inc
movs
imul
je
mov
icebp
cmp
inc
dec
(bad)
sti
adc
out
or
fbld
jmp
and
mov
not
xchg
popa
neg
adc
mov
hlt
or
cmp
sbb
into
test
or
call
cmps
bound
lldt
mov
cmp
aam
or
out
fistp
xor
aad
push
xchg
ins
pop
iret
mov
jg
std
or
movs
shl
mov
dec
fmul
pop
adc
inc
mov
dec
cmp
mov
jle
sub
stos
cmp
fucomi
pop
adc
fwait
mov
push
inc
int
dec
xor
push
ins
arpl
jmp
mov
es
inc
sbb
in
js
addps
cmp
mov
shl
adc
mov
push
adc
test
(bad)
(bad)
ins
adc
push
movs
fnsave
xchg
mov
sar
daa
test
arpl
mov
in
daa
mov
xor
cs
sbb
xor
jo
jmp
and
addr16
aas
into
test
cmp
repz
or
fmul
lods
pop
push
mov
fbld
sub
add
(bad)
pop
xor
test
ja
pop
cmp
push
fistp
dec
xlat
push
fidiv
nop
das
add
mov
jecxz
dec
inc
aam
cmp
fiadd
push
retf
sub
mov
dec
xchg
call
rcl
push
fwait
xchg
aaa
push
jg
popa
and
add
xchg
dec
pushf
inc
test
out
hlt
push
cmp
sub
cmp
adc
mov
mov
aam
adc
inc
leave
dec
sub
clc
(bad)
out
push
add
movs
test
aas
adc
sub
add
dec
inc
xchg
xor
inc
repnz
push
or
sub
inc
pop
pop
fistp
cmp
stc
ss
or
cwde
idiv
in
pop
mov
pop
mov
dec
gs
push
clc
and
xchg
mov
shr
ror
xchg
push
call
(bad)
fnstcw
push
mov
mov
mov
pop
push
in
(bad)
repnz
dec
xor
add
inc
dec
and
mov
jge
repnz
cmp
inc
mov
int3
popf
add
fs
lahf
mov
cli
adc
ret
pop
or
cmps
out
movs
cmps
lods
jle
ficomp
repnz
push
cmp
push
adc
lock
mov
xor
(bad)
and
xchg
imul
push
(bad)
cli
loope
js
or
fadd
lods
stc
mov
xor
mov
pusha
stos
ss
enter
nop
and
xchg
in
sbb
push
xchg
pop
mov
dec
sub
push
stc
push
mov
push
jg
adc
mov
inc
sbb
repz
lods
xor
repz
adc
xor
pusha
pop
xor
std
pop
pop
test
ja
aas
aam
ins
shr
in
push
and
mov
aam
fwait
jnp
push
outs
inc
and
push
or
sbb
add
jmp
push
dec
out
outs
(bad)
sub
jns
int3
fistp
je
mov
and
(bad)
xchg
add
inc
xlat
test
cmp
xchg
mov
jo
push
rcl
mov
cmovg
ret
dec
dec
push
xlat
sbb
ins
leave
mov
loope
int
out
xchg
mov
sbb
imul
outs
call
adc
dec
mov
or
sbb
scas
sbb
or
clc
ja
mov
call
in
jns
pushf
fcom
cmp
and
leave
enter
inc
lea
cli
lock
xor
mov
ss
out
packssdw
gs
or
cs
sub
ret
or
lods
mov
(bad)
mov
jmp
pop
pop
pop
enter
dec
adc
xchg
mov
jecxz
sub
dec
jb
frstor
xchg
dec
dec
cmp
mov
xor
arpl
pusha
into
mov
sbb
js
sar
mov
test
loop
cmp
loope
(bad)
outs
pop
fcom
enter
xor
jne
pop
fsubr
cmp
es
in
adc
lock
nop
adc
add
aas
or
add
mov
test
icebp
xchg
xchg
sub
mov
cwde
mov
sbb
inc
ja
sbb
push
jge
es
sub
aaa
cmp
mov
sub
pop
fs
sbb
mov
fistp
and
jns
or
and
into
or
pop
(bad)
jmp
add
(bad)
jl
(bad)
xchg
pusha
jbe
mov
pop
add
retf
fadd
mov
jnp
fistp
in
adc
popf
mov
popf
add
and
ins
ds
cmc
sub
pop
fs
ins
div
mov
mov
jp
fs
cmp
pop
pop
xlat
outs
(bad)
mov
push
jmp
or
xchg
cmp
test
dec
xchg
jle
movs
not
stos
mov
es
mov
add
mov
mov
addr16
sahf
or
sbb
mov
mov
jo
xchg
out
repnz
fcom
inc
mov
in
movs
neg
popa
repnz
sub
call
ins
cs
sub
sbb
pop
mov
sub
loope
arpl
aas
cmc
aam
mov
out
cli
mov
or
mov
addr16
adc
sbb
push
sub
jne
xchg
clc
mov
test
in
cmp
test
fcomp
and
mov
daa
or
and
shl
ret
add
cmps
aad
je
sbb
cmps
les
add
adc
xlat
out
inc
dec
push
popf
sti
imul
cmp
pop
fnstsw
leave
int
pop
data16
out
mov
dec
fadd
fsin
push
or
xchg
dec
enter
fild
pop
cmp
add
hlt
pusha
cmps
in
mov
scas
jl
mov
push
xchg
fstp
imul
std
xor
add
jbe
sub
pushf
sbb
jmp
out
sub
pop
jg
mov
pop
repnz
pushf
jmp
stos
sahf
bound
add
sub
fsubp
push
aaa
and
dec
add
int
and
mov
dec
push
or
stc
mov
(bad)
mov
mov
mov
push
fsubr
imul
xor
mov
sbb
sbb
mov
xor
(bad)
rcl
mov
jl
pop
std
lea
mov
(bad)
jmp
clc
shl
pushf
inc
sbb
mov
into
or
sub
push
test
lock
cld
in
xor
(bad)
rcr
cmp
adc
jecxz
xchg
pop
push
xchg
scas
fdiv
dec
add
loopne
mov
lea
sub
sbb
ins
push
ja
cmp
loopne
push
rol
repnz
movs
ss
lods
adc
or
inc
sbb
aas
sbb
fcomp
daa
in
(bad)
cs
mov
mov
mov
enter
imul
xchg
add
cmps
and
jl
mov
jo
shl
jb
ds
cmc
cmp
or
mov
xlat
xchg
push
mov
icebp
or
xchg
(bad)
xchg
in
or
out
jns
mov
xchg
int3
mov
test
pop
and
sub
ins
and
adc
inc
nop
push
xor
cmps
mov
pop
xchg
test
mov
inc
inc
mov
xlat
enter
xchg
scas
push
into
mov
push
mov
jmp
in
jmp
sub
push
test
aas
fs
xchg
dec
test
fist
add
retf
inc
cmp
mov
push
in
scas
mov
test
inc
shr
jle
stc
stos
cmps
mov
cld
cmps
imul
dec
icebp
mov
xchg
dec
mov
out
add
loopne
imul
jbe
pop
outs
mov
retf
outs
mov
xchg
or
cs
xchg
jge
dec
push
or
loopne
sub
sti
ja
jge
mov
mov
repz
bound
jbe
shl
out
inc
add
jmp
pop
or
aaa
or
in
fist
and
inc
cli
jb
pop
repz
outs
jg
add
pop
xchg
test
add
sub
dec
(bad)
lahf
lahf
mov
clc
iret
pushf
push
test
ja
movs
sub
icebp
sbb
dec
out
sbb
cmp
jns
cmp
fadd
(bad)
fld
adc
push
or
xor
jge
mov
ss
dec
jns
cdq
in
cmps
sti
stos
mov
xchg
out
cmp
jnp
ret
enter
jle
xchg
push
(bad)
test
fstp
adc
sbb
test
movs
in
push
ret
push
jbe
out
(bad)
jbe
jecxz
bound
xchg
xchg
sub
jo
imul
popw
or
sub
dec
xor
mov
test
or
ret
mov
jmp
mov
iret
adc
(bad)
or
mov
mov
mov
retf
and
mov
push
ficomp
rcr
lahf
cmp
jmp
pop
push
push
xor
xor
pop
(bad)
repnz
inc
pop
push
out
adc
ja
cmp
aaa
mov
xor
ins
shl
xchg
cmp
repz
je
dec
rol
iret
ret
jnp
pop
data16
jne
cmp
adc
push
daa
fistp
inc
xchg
xchg
out
(bad)
jno
push
sbb
popf
stos
dec
fnsave
sub
sbb
xchg
jnp
cmps
pop
mov
pop
or
jbe
loope
push
xchg
add
rcl
mov
pushf
jae
dec
aam
sub
movs
imul
sbb
rol
cvtps2pd
lods
sbb
adc
xor
dec
movs
inc
or
mov
sahf
or
rol
lods
jmp
or
push
or
xchg
mov
inc
mov
pop
add
mov
mov
cli
movs
xor
dec
adc
pop
fnstenv
outs
loope
jge
call
jne
xchg
stc
pop
pushf
lahf
pop
js
pop
dec
(bad)
jnp
jb
pushw
push
push
dec
or
inc
inc
fnstsw
int3
lea
push
sbb
adc
cmp
xor
jno
mov
(bad)
cdq
mov
lds
pop
push
and
retf
scas
mov
fs
lea
loope
stos
sbb
cmp
rcr
(bad)
idiv
mov
jp
out
cmp
cmps
mov
rcl
and
icebp
mov
jmp
mov
xchg
add
dec
mov
outs
mov
cmp
xor
dec
or
imul
cmps
jl
and
sbb
mov
xor
out
add
add
sbb
pushf
xchg
add
jae
or
jge
(bad)
mov
test
cmp
cmp
dec
ss
mov
push
into
mov
push
pop
repnz
out
xchg
aad
lods
bound
icebp
aam
mov
or
ins
sbb
scas
pop
push
hlt
out
or
push
and
sbb
jg
enter
into
push
push
retf
cmps
fadd
ss
pop
call
adc
dec
cmps
xlat
and
mov
(bad)
fldenv
jl
js
mov
pop
mov
mov
xor
pop
jo
sub
out
and
lods
sbb
enter
data16
jne
sbb
mov
mov
out
es
pop
nop
push
(bad)
ins
in
mov
mov
cs
and
movs
push
or
jecxz
jle
add
dec
xchg
(bad)
sbb
rcr
int3
out
add
test
je
or
sub
mov
leave
fist
cmp
sbb
mov
xchg
add
int
in
dec
aaa
sahf
cwde
fs
out
loopne
ds
repz
ret
xchg
jo
or
aad
fbld
pop
ret
jne
xchg
mov
and
cmc
cli
std
dec
sub
cwde
xor
cld
cs
gs
(bad)
pop
adc
nop
jg
adc
add
and
sub
js
mov
cmp
and
push
sbb
jp
add
loope
xchg
stc
fs
aaa
movs
dec
cmp
scas
cld
mov
mov
stc
adc
mov
xchg
jmp
xlat
mov
mov
js
test
xchg
add
sub
rcl
div
or
dec
or
cwde
inc
fadd
mov
cwde
icebp
xchg
(bad)
add
cmp
imul
lock
mov
sbb
mov
js
dec
fcmovnb
scas
fst
call
shl
adc
(bad)
cmps
dec
iret
pop
cdq
add
push
int3
and
cmp
push
pushf
pop
leave
sbb
arpl
loopne
iret
hlt
xor
xor
ins
add
int
pushf
adc
jge
hlt
pop
popf
(bad)
inc
cwde
cmps
push
js
cmps
add
mov
xlat
add
mov
outs
jge
jl
cmps
call
xchg
sbb
loopne
pop
sub
dec
cs
xchg
sar
cld
xor
and
mov
scas
fisttp
stc
icebp
(bad)
inc
cmp
aas
cmp
jg
in
popf
dec
(bad)
cld
dec
int
sbb
jns
rol
imul
xor
pop
add
cmp
mov
jo
adc
add
jmp
push
out
je
test
pop
mov
ss
cmps
jno
or
xchg
and
repz
mov
retf
sbb
xchg
aas
pop
movs
mul
dec
pushf
fiadd
mov
pop
push
pop
mov
call
or
arpl
pusha
retf
pop
cld
aad
int
inc
stos
adc
retf
sahf
es
or
and
and
pop
add
mov
in
push
enter
xchg
pop
mov
mov
mov
pshufw
jl
and
cmp
jle
aam
leave
mov
pcmpgtw
push
out
arpl
arpl
sub
add
pop
jb
stos
jg
jae
dec
ss
jb
aam
sbb
jae
jno
lahf
nop
xchg
cmp
inc
enter
ins
cmp
pop
pop
cli
or
jne
pop
mov
xchg
adc
(bad)
or
stos
ret
ins
sub
fld
retf
movs
retf
in
jb
mov
xchg
mov
addr16
shl
xor
cs
in
or
int
mov
push
adc
and
xchg
cmp
stc
mov
cmc
adc
push
and
adc
mov
jmp
cmp
out
lds
push
pusha
xchg
(bad)
cdq
pop
push
add
enter
dec
mov
int
(bad)
sub
fimul
jbe
ds
mov
inc
pop
ficom
xor
test
fisub
dec
cmp
sahf
mov
mov
or
cmps
pop
jbe
push
repnz
adc
cmps
dec
lods
test
stos
adc
sbb
imul
outs
stos
mov
leave
add
and
and
sub
test
std
and
mov
or
ins
mov
sbb
rcl
sbb
push
cld
enter
mov
repz
push
jmp
ja
sti
and
(bad)
pop
push
outs
icebp
dec
fcmove
pop
push
or
in
neg
mov
int3
xchg
scas
bound
mov
add
xchg
ja
jp
cmp
mov
out
ins
mov
inc
dec
enter
aas
mov
xchg
sub
pop
in
test
jo
inc
pop
pop
jno
add
or
push
cmc
imul
pop
jp
and
mov
shl
ins
cmc
xlat
stc
jmp
cdq
mov
push
mov
mov
pop
cli
push
or
js
inc
push
mov
stc
inc
(bad)
adc
test
dec
mov
mov
cmp
jae
add
jle
cmp
ins
fdivr
pop
adc
push
outs
retf
lahf
sbb
jl
enter
xor
ror
jecxz
sbb
inc
jnp
enter
pop
mov
inc
fs
(bad)
mov
xor
in
and
hlt
pushf
xor
shl
stc
jge
mov
into
push
movs
fst
in
pop
add
jbe
add
inc
aaa
pop
(bad)
and
fist
test
jns
inc
pop
adc
(bad)
cmp
jl
(bad)
mov
stos
or
ror
push
call
dec
xchg
popf
or
int3
cwde
jnp
xchg
inc
scas
bound
popa
loop
dec
push
mov
mov
jl
iret
clc
dec
xlat
jae
in
imul
sti
lds
neg
mul
inc
lea
sbb
mov
cmp
xor
pop
das
mov
pop
xor
loopne
sti
es
mov
jge
inc
in
repz
ins
sbb
mov
mov
push
leave
shufps
jnp
lahf
int3
adc
sub
sub
(bad)
lods
daa
cmp
mov
pop
adc
adc
dec
or
push
pop
stos
lds
call
jnp
and
jo
xor
mov
and
addr16
adc
dec
cdq
inc
aam
(bad)
push
cld
jp
push
mov
fimul
shl
fild
xor
push
je
out
int3
dec
xchg
pop
leave
sub
mov
imul
cmps
shl
mov
nop
or
test
jb
repz
aas
adc
push
add
jp
bound
inc
fmul
cli
cmp
mov
cmc
int
aad
fldenv
enter
stos
add
push
xchg
jno
into
mov
push
pop
xor
jmp
(bad)
outs
add
shl
mov
ret
sar
dec
push
aam
shr
inc
inc
jmp
xchg
dec
imul
fcomp
xlat
sub
hlt
mov
jns
out
mov
mov
pop
outs
mov
aam
mov
test
inc
jmp
rcl
cmc
and
adc
inc
push
mov
sbb
daa
retf
int
add
(bad)
mov
pop
stos
add
sbb
inc
in
sbb
pusha
cmp
clc
push
lahf
neg
rol
mov
inc
dec
aas
jl
push
push
pop
jo
ja
xchg
call
fmul
daa
and
fs
or
jmp
(bad)
std
jecxz
dec
and
movs
push
enter
loop
xor
popf
sub
mov
xor
outs
scas
jmp
mov
mov
xor
jno
jne
jnp
dec
mov
pop
popa
mov
mov
std
fisttp
gs
lock
dec
cmp
jb
lahf
add
dec
add
pop
out
xchg
(bad)
xlat
push
push
fcomp
jnp
mov
iret
sub
mov
xor
movs
test
jle
ss
fsubr
fiadd
fwait
xchg
mov
xchg
push
xchg
push
pop
rol
dec
inc
mov
sar
mov
push
cmc
and
out
lock
out
gs
dec
pop
stos
mov
jge
ins
shl
ret
mov
mov
(bad)
hlt
psrlq
inc
test
test
sbb
repz
ins
sub
jecxz
dec
mov
jo
cmp
leave
adc
iret
mov
pop
and
jae
and
push
mov
pop
jnp
fst
and
add
push
cmp
scas
movs
cwde
dec
rcr
stos
mov
adc
in
push
lahf
dec
shl
movs
ja
pop
jnp
pop
mov
pop
push
mov
mov
mov
std
lods
adc
mov
test
lock
mov
push
je
xchg
or
ja
pop
cmp
cs
mov
xor
imul
xchg
mov
jp
idiv
mov
sub
inc
imul
dec
sbb
add
cmps
scas
lock
(bad)
jecxz
sub
ins
xchg
add
popa
mov
jmp
loop
bswap
pop
lock
es
ret
or
dec
pop
shr
call
fldenv
xor
into
or
and
stos
push
sbb
ror
push
repz
push
dec
repz
fadd
into
outs
sbb
xchg
xor
sub
mov
add
inc
jb
push
retf
adc
push
jl
sub
mov
mov
mov
push
pushf
dec
add
cdq
mov
inc
pop
in
leave
adc
xlat
lds
xlat
cwde
push
jl
inc
repnz
not
mov
and
test
pusha
out
push
fdivrp
movs
in
adc
add
xchg
popf
ror
inc
or
xor
or
push
lds
or
loope
repz
xchg
sar
repnz
rol
dec
mov
imul
icebp
cmp
mov
cs
and
shl
cdq
mov
inc
pop
jnp
es
pop
push
mov
les
out
jmp
ins
and
pushf
ror
cmp
dec
fldenv
xchg
sbb
and
mov
mov
sbb
mov
dec
sub
call
jecxz
pop
mov
sub
mov
daa
xchg
mov
mov
cs
sub
fsub
(bad)
out
(bad)
adc
loop
int3
push
jmp
into
add
mov
sub
cmp
mov
xchg
lahf
aam
push
pusha
es
jecxz
add
scas
ins
cmp
sub
nop
daa
mov
sahf
adc
fimul
dec
push
je
jns
test
adc
in
fmul
mov
cmps
retf
push
sahf
xchg
ins
call
loope
arpl
stc
push
sub
or
mov
sbb
out
dec
int3
mov
pop
mov
retf
pop
and
sbb
inc
out
or
push
leave
aad
in
push
clc
cmp
div
lods
sbb
xchg
cmps
cmp
out
push
and
mov
jecxz
inc
cmp
pop
enter
out
sub
(bad)
lahf
push
cmp
cld
fdiv
and
repnz
xchg
sbb
cmp
daa
movs
ffreep
fwait
int3
ins
pushf
jns
pop
xchg
ja
and
mov
das
movs
dec
fiadd
push
into
inc
jp
int3
push
jo
fimul
push
pop
iret
push
shl
adc
xchg
pop
lea
out
cmps
mov
je
mov
ds
or
fnsave
and
(bad)
push
adc
pop
mov
adc
mov
ror
stc
pop
pop
and
add
sbb
stos
inc
jae
pop
xlat
push
(bad)
jle
pop
test
lods
or
shl
mov
jno
ret
cdq
dec
stos
les
mov
push
add
ja
fst
nop
push
mov
mov
rcl
cwde
inc
cmp
movs
loope
das
(bad)
clc
cmp
push
push
cmp
fidivr
ss
inc
mov
push
dec
add
rcr
cs
adc
inc
mov
mov
jns
mov
push
push
push
jno
sbb
rol
mov
mov
sub
mov
ror
ss
in
fs
and
xchg
dec
ds
pop
cmps
mov
mov
inc
push
fild
mov
push
and
sti
sbb
fwait
push
inc
adc
in
cmp
mov
mov
pop
ds
das
je
aaa
xchg
(bad)
icebp
ds
sub
inc
push
aam
dec
or
movs
add
pop
lds
sub
and
(bad)
mov
sub
push
pop
mov
rcr
fsub
adc
inc
leave
pop
arpl
cs
add
push
push
ror
ror
lock
and
or
xchg
sub
push
cmp
adc
or
ret
xchg
stos
add
jle
bound
test
push
dec
test
mov
inc
dec
jmp
ret
xlat
ins
inc
sub
jne
pop
add
movs
lods
or
mov
add
scas
mul
icebp
mov
push
dec
lods
dec
sahf
push
adc
add
mov
test
out
xor
sti
jo
push
das
sbb
inc
mov
aas
cli
ret
mov
push
mov
into
push
xor
in
cmp
sbb
xor
daa
mov
gs
(bad)
jo
push
ins
neg
mov
(bad)
shld
xchg
adc
pop
jp
cld
pop
out
jb
mov
pusha
xor
mov
rcl
add
adc
add
dec
scas
adc
and
mov
sti
addr16
jecxz
inc
push
stc
(bad)
xchg
ret
ins
jb
les
inc
inc
into
push
cmps
pushf
cs
mov
or
movs
push
inc
ss
sbb
ins
cld
mov
add
das
ds
je
and
dec
pop
mov
mov
(bad)
push
hlt
xor
pop
into
movs
or
js
jbe
iret
popf
out
pop
out
cli
rcr
lock
adc
(bad)
in
sub
rcl
scas
xchg
dec
sub
jge
jb
(bad)
jmp
iret
and
adc
cmc
jle
mov
mov
out
dec
mov
mov
xchg
sahf
push
loope
sub
push
call
jle
shl
es
into
inc
inc
mul
leave
in
jecxz
or
add
imul
cwde
adc
dec
scas
or
leave
clc
iret
aas
and
shr
and
dec
push
pop
and
jg
mov
jmp
pop
xor
lds
xor
movs
sub
dec
mov
dec
hlt
aaa
mov
mov
loope
xchg
sahf
ins
sub
data16
sub
je
aam
ret
xchg
cmc
mov
sub
je
icebp
je
sub
sbb
xor
add
and
nop
mov
jb
scas
loope
out
int3
cmps
adc
jns
das
pop
mov
pop
pushf
in
je
stos
sub
xchg
adc
xchg
cmps
aad
sar
fstp
pop
pop
cmc
sahf
iret
pop
mov
scas
ret
jmp
jmp
push
push
mov
fldcw
push
cmp
mov
sbb
inc
call
xchg
pop
out
sbb
mov
cmp
or
add
imul
pop
inc
xor
cmp
push
retf
add
rol
repnz
(bad)
fld
js
xchg
xor
pop
adc
scas
xchg
enter
out
rcr
xor
mov
dec
sub
or
rol
and
test
add
ins
mov
das
gs
dec
fidiv
mov
cmp
int3
jge
mov
or
mov
sti
or
mov
hlt
inc
imul
mov
jae
push
adc
cld
sbb
in
pop
movs
push
mov
push
cmc
out
push
jb
mov
fs
imul
iret
xchg
add
loope
jnp
and
into
test
pop
mov
xor
popf
mov
mov
mov
test
pop
sbb
mov
addr16
mov
leave
in
jg
outs
or
imul
loopne
mov
dec
push
mov
and
sbb
mov
or
pusha
and
pop
leave
outs
lds
call
or
mov
sub
and
or
adc
cs
fsub
push
adc
and
jb
lods
loop
xchg
pop
imul
push
fs
inc
js
loope
sbb
lea
pop
and
repz
ja
jno
cmp
jle
out
jecxz
sub
aam
and
dec
sbb
cld
jae
dec
movs
pusha
scas
das
sbb
add
mov
mov
ins
cmp
fadd
or
pop
ret
movs
out
add
sar
dec
dec
rcr
cmc
sub
jge
ret
adc
sahf
sbb
pop
lods
sub
lods
or
test
ss
cmps
loope
xchg
ficom
or
les
mov
mov
loopne
cmps
lods
xor
xor
aad
jg
pop
js
or
sub
popa
sbb
push
fcom
(bad)
push
sbb
cwde
test
outs
xchg
mov
shr
dec
retf
push
sub
and
mov
cwde
ret
xchg
add
jns
test
aaa
aaa
std
vunpcklps
scas
fisttp
shl
je
jns
xor
test
mov
push
cli
retf
cs
sub
jnp
add
cmp
jmp
inc
jl
adc
inc
sbb
mov
std
xor
jge
pop
into
jge
nop
jmp
cwde
and
lds
pop
nop
inc
inc
jg
jp
fistp
imul
fsubr
mov
sub
mov
add
and
cwde
xchg
pop
jno
push
jle
mov
lahf
jle
ins
adc
retf
mov
cdq
loopne
out
inc
sbb
add
fsub
pop
popf
mov
push
xchg
pop
cmps
add
inc
pushf
std
loop
xor
in
inc
mov
leave
fidivr
gs
push
pop
add
push
sbb
mov
daa
dec
dec
add
stos
popa
nop
jmp
add
mov
fnsave
cmp
loope
popa
(bad)
mov
mov
jb
jmp
(bad)
xchg
fs
mov
cmc
clc
mov
mov
retf
add
or
mov
push
fadd
adc
in
fsubrp
ins
pop
je
pop
loop
add
mov
adc
inc
call
imul
mov
pop
arpl
xchg
test
call
mov
in
inc
ret
inc
not
jae
lods
sbb
ds
add
shl
js
and
iret
scas
mov
sbb
stos
retf
pcmpeqd
nop
push
xchg
lds
call
sbb
jnp
inc
add
rcl
stc
mov
cmp
pop
in
das
lods
adc
leave
jbe
das
in
aad
xor
rol
mov
(bad)
scas
jle
xchg
daa
sbb
and
xchg
scas
repz
scas
mov
ret
movs
iret
xor
push
std
scas
aad
lea
sub
push
cdq
adc
sub
sub
int
xchg
and
pop
movs
push
inc
shl
pop
mov
das
(bad)
cmp
ss
sub
shr
cmps
jle
push
pop
mov
mov
fnstsw
pop
pusha
mov
mov
sub
arpl
fld
xchg
lock
cs
or
scas
xchg
ror
jae
pop
adc
in
leave
js
and
cli
addr16
ret
mov
xchg
jmp
in
enter
lsl
push
in
inc
xor
push
not
idiv
add
data16
jecxz
cwde
adc
xor
(bad)
test
dec
bound
repz
and
test
(bad)
xor
aam
xor
dec
fmulp
pop
xor
in
fisttp
push
pop
aas
ror
pop
or
test
sbb
push
cmc
inc
inc
dec
xor
push
loop
retf
ret
ja
dec
mov
pop
add
push
mov
cmp
xchg
rcr
movs
adc
xchg
daa
push
inc
into
fsub
mov
retf
jns
jno
or
push
je
mov
adc
pusha
inc
loope
cwde
cld
arpl
pop
mov
fs
and
fcmovb
fiadd
hlt
neg
leave
test
add
lahf
jbe
sub
imul
dec
pop
jl
dec
hlt
inc
cmp
adc
in
daa
fdivr
jno
mov
mov
push
add
add
loope
shl
push
(bad)
retf
pushf
(bad)
mov
cmc
outs
sar
jl
call
xor
add
xlat
out
push
shr
enter
adc
stos
dec
pop
jno
into
jecxz
jo
xchg
icebp
cs
pop
push
sahf
inc
pusha
inc
pop
(bad)
loop
arpl
pop
cmp
xor
add
repnz
sub
push
jge
sbb
pop
mov
and
test
fiadd
or
bound
lods
inc
das
jne
pusha
neg
ret
and
pop
xor
push
push
movs
arpl
(bad)
cmp
in
inc
(bad)
(bad)
xor
mov
out
(bad)
fld
lods
movs
iret
mov
mov
inc
movd
(bad)
cmp
and
pop
push
xchg
jmp
lock
bound
jmp
cs
jb
push
xor
je
int
clc
clc
std
jg
push
xchg
pop
push
xor
sub
in
push
call
adc
pop
push
xchg
push
std
jmp
jb
std
fsubr
sbb
and
cmp
add
pop
inc
cwde
add
dec
ja
outs
fbstp
mov
mov
xchg
in
cdq
sar
mov
cld
sar
xor
mov
and
stos
into
mov
mov
dec
jp
jo
jmp
pop
das
or
xchg
xor
fcom
aam
or
call
xor
or
scas
inc
cmp
pop
or
int
arpl
lock
ret
rcr
inc
inc
int3
pop
xchg
jno
mov
sahf
push
fidivr
push
pop
mov
mov
imul
or
mov
arpl
xchg
idiv
fwait
sub
pop
pushf
(bad)
(bad)
nop
lds
mov
dec
mov
jle
clc
lea
outs
lods
mov
in
sbb
sar
addr16
loope
dec
push
jl
mov
neg
sbb
stc
ins
loopne
sbb
sbb
mov
dec
mov
and
mov
gs
loopne
mov
mov
rol
movs
xor
stos
iret
or
mov
mov
int3
icebp
in
mov
cmps
xchg
stc
rol
ret
loop
retf
aam
call
pop
call
std
loope
inc
imul
pand
add
sbb
adc
out
fdiv
cmp
retf
out
or
fbstp
cmps
mov
mov
jp
nop
int
pusha
mov
pusha
xchg
cwde
add
push
mov
sub
xchg
int
out
dec
fmul
jp
or
push
push
jecxz
stos
add
jge
and
inc
std
mov
retf
jne
dec
add
inc
xor
push
and
pop
ins
adc
loope
cmc
(bad)
jb
imul
lahf
mov
and
fcom
dec
and
push
push
push
(bad)
rcl
imul
call
cmps
gs
xor
aam
sbb
or
and
call
and
movs
dec
sub
inc
aad
sub
lahf
push
xchg
bound
jmp
cmps
jo
push
outs
mov
push
mov
push
sar
cmp
leave
fld
xlat
mov
add
ror
stos
inc
mov
pop
jns
mov
out
jp
mov
mov
cmps
test
lea
push
es
sbb
push
dec
sub
lea
out
jne
daa
in
xor
jb
clc
out
and
adc
and
mov
xchg
adc
in
xchg
mov
dec
add
sbb
aad
mov
aaa
push
add
loopne
adc
repnz
test
pushf
dec
adc
inc
inc
aaa
js
xchg
shr
mov
jnp
push
test
into
iret
jns
xor
xchg
xchg
xor
ins
outs
push
fld
aas
arpl
or
leave
sub
clc
daa
pop
hlt
adc
jecxz
jmp
jp
stos
jbe
add
sub
dec
sub
(bad)
cmp
ss
dec
sbb
leave
dec
cld
sub
xor
fstp
imul
(bad)
cmp
cs
loopne
call
leave
lock
mov
mov
inc
fs
mov
les
cdq
and
das
sub
retf
je
jae
jb
data16
xchg
mov
out
std
cdq
into
sbb
add
scas
outs
pop
inc
test
push
xor
adc
shl
sub
fcmove
fs
dec
mov
xor
addr16
pop
or
arpl
push
and
xchg
mov
xchg
push
imul
clc
push
(bad)
shr
stos
inc
in
cmp
movs
out
(bad)
shl
mov
fsubr
std
(bad)
lock
mov
cdq
xchg
sbb
mov
daa
xor
jge
das
lods
jg
rcr
ret
fdiv
mov
test
sbb
xchg
cmp
int3
mov
test
das
xor
das
jecxz
push
xchg
and
push
or
dec
outs
mov
call
cmp
push
xchg
mov
mov
dec
mov
inc
pushf
mov
test
xchg
stc
mov
inc
aas
das
and
int3
pop
pop
push
stc
in
inc
sub
xchg
das
pop
push
mov
pop
clc
cwde
xor
inc
ror
dec
mov
into
test
jae
ret
fistp
sbb
les
mov
jns
xor
and
mov
mov
inc
hlt
mov
add
jecxz
xchg
setle
stc
dec
dec
sbb
jne
or
sar
pushf
adc
jl
cdq
mov
es
jnp
repnz
ja
add
imul
mov
push
push
or
jnp
retf
or
aas
bound
add
mov
call
js
push
arpl
fnsave
imul
cs
mov
push
sbb
jnp
pusha
xchg
xchg
aas
fisub
dec
push
sbb
pop
sub
fsub
sbb
jns
jnp
pop
push
mov
ror
dec
pop
loop
sbb
or
inc
mov
shl
dec
dec
xchg
mov
dec
lea
repz
sbb
sar
pop
sub
ins
push
loope
mov
ss
mov
pop
push
retf
push
xchg
shl
mov
or
test
sbb
inc
dec
pop
and
sbb
pushf
retf
stos
xchg
sub
sub
cdq
push
pop
popf
sub
fild
xchg
cmc
or
add
js
mov
lods
sbb
sbb
pop
imul
cld
sbb
add
repz
inc
repz
(bad)
into
call
mov
or
xor
pop
mov
in
or
mov
in
and
cli
movs
movs
outs
push
lods
shr
aaa
nop
sub
and
xor
cli
jae
jno
imul
mov
lds
add
(bad)
mov
loop
pop
add
loopne
fisttp
ret
add
pushf
jp
jle
inc
dec
fcmovnb
jnp
cld
push
jp
call
in
push
loope
pop
bnd
xorps
clc
sbb
jp
sbb
movs
push
push
push
sbb
mov
je
push
xchg
and
pop
sar
push
or
bnd
das
xchg
or
mov
adc
sbb
pop
ds
lock
dec
and
add
maskmovq
neg
(bad)
xor
xchg
aad
addps
loop
ins
aad
ror
and
mov
in
xor
test
dec
fcomp
mov
imul
and
sti
in
daa
jge
cdq
fucom
das
test
popf
mov
add
test
fcmovu
add
push
in
out
jecxz
shl
rcr
ret
inc
ja
dec
xor
sub
xchg
cmp
(bad)
addr16
retf
and
in
cmc
mov
call
fistp
xlat
retf
mov
ja
sar
and
sbb
cs
mov
lea
loop
inc
xchg
jae
call
mov
mov
ret
xchg
in
ss
adc
cmp
or
push
int3
sbb
out
pop
or
outs
rol
fimul
mov
dec
movhlps
jne
mov
inc
cmps
lahf
cwde
mov
rcl
cmc
lds
or
sar
fld
push
and
mov
int
ja
mov
pminsw
xchg
hlt
nop
int
ins
ja
test
and
movs
jnp
or
jb
jmp
pop
(bad)
sbb
aam
data16
out
jo
fs
sbb
loope
ret
mov
xchg
pusha
add
repz
mov
sub
push
ins
call
sub
cmp
cdq
pushf
pop
jb
out
push
mov
ret
sbb
jnp
fwait
sub
sahf
test
out
xor
les
cmc
ds
outs
xor
sub
out
in
push
lods
loopne
sbb
dec
mov
test
xchg
mov
pop
jno
in
jb
out
scas
rcl
jmp
in
fwait
add
bound
loope
ja
push
sub
inc
mov
fcomp
pop
push
lahf
and
jo
sbb
cmps
xor
xor
scas
test
cmp
jl
mov
dec
or
jge
pop
cs
lea
cmp
leave
mov
inc
ds
movs
dec
arpl
xchg
bound
adc
and
ret
push
addr16
mov
cmp
dec
push
dec
sbb
mov
mov
mov
addr16
lods
inc
outs
leave
js
jns
adc
sub
test
cs
out
stos
div
enter
int3
movs
ss
push
cmp
adc
push
mov
nop
cmp
push
(bad)
xor
xor
jle
das
stos
cmps
cmps
inc
jne
sub
xor
mov
fbld
popa
cmp
fcomi
stc
cmp
loope
mov
add
push
mov
jle
xor
ins
je
out
mov
push
pusha
sub
sub
lea
outs
pusha
or
jno
lahf
out
or
int3
push
(bad)
mov
mov
jg
bound
inc
repz
jo
lds
les
xlat
hlt
dec
in
or
(bad)
frstor
mov
sub
adc
pop
shl
imul
cmp
add
repnz
xchg
ss
add
jmp
daa
mov
push
sahf
pop
lods
push
jle
fstp
repz
into
jns
push
cmp
stos
jecxz
lods
xchg
mov
movs
add
pushf
sub
inc
mov
ins
jmp
out
sbb
mov
mul
push
mov
stc
les
push
test
jmp
pop
push
dec
adc
arpl
xlat
dec
movs
xchg
push
mov
cwde
popf
dec
sbb
mov
ins
stc
jmp
jmp
sbb
cmp
bound
mov
out
mov
xor
mov
retf
imul
loope
and
pop
and
and
sbb
xchg
inc
push
pusha
sbb
es
jmp
repz
add
jae
xlat
test
outs
mov
lods
inc
imul
pushf
scas
mov
rol
pop
add
stc
dec
mov
pusha
pop
or
mov
mov
ins
ja
jg
rdtsc
or
cli
mov
push
fimul
(bad)
stos
push
clc
sbb
dec
mov
je
jmp
mov
scas
mov
cmp
sub
(bad)
jecxz
popf
xchg
fisubr
in
and
daa
hlt
inc
mov
pop
adc
cld
fmul
bound
outs
push
pop
add
lahf
push
add
pop
mov
or
jae
scas
jmp
jle
daa
or
out
aam
daa
aas
jecxz
cmc
ja
dec
sub
jnp
(bad)
push
bound
mov
sub
xchg
addr16
cmps
jg
adc
or
xor
push
add
or
and
into
fs
cmp
xor
jne
cdq
sub
xlat
movs
stos
push
push
and
xor
dec
jae
ins
mov
jl
jmp
pop
mov
icebp
push
push
mov
test
test
aam
cmp
xlat
inc
iret
cwde
leave
jl
mov
mov
xchg
call
dec
cdq
fcom
jp
adc
out
iret
shl
mov
mov
xlat
pop
jnp
out
bnd
movs
jle
sub
ins
adc
sub
fcomp
(bad)
cmp
shr
mov
mov
int3
or
jecxz
(bad)
data16
dec
outs
push
xor
rcr
cmps
mov
and
aaa
add
scas
jmp
outs
push
push
(bad)
pop
push
pop
popf
xlat
xor
fdivr
pop
pop
nop
push
mov
adc
sbb
lods
inc
aaa
xchg
mov
popa
cmp
or
std
or
les
movs
(bad)
bound
push
adc
cdq
sub
aam
push
pop
lea
and
stos
jecxz
imul
leave
(bad)
repnz
push
scas
fnsave
add
mov
sti
into
les
out
cmp
out
mov
call
jp
mov
jmp
ins
sub
pop
movs
std
xor
and
pop
jmp
jae
leave
push
dec
fsub
jecxz
mov
jbe
dec
aas
pop
and
jne
push
mov
mov
mov
test
mov
fisttp
jmp
push
mov
fiadd
adc
sbb
fidivr
push
dec
imul
cmps
in
scas
push
xchg
sub
repnz
sbb
pop
pusha
hlt
push
out
int3
in
jo
shr
stos
jb
jmp
jmp
adc
lds
cld
pop
push
cli
and
fild
mov
xor
loopne
dec
and
push
mov
mov
(bad)
push
pop
push
add
popa
aas
cmp
add
mov
add
sahf
call
adc
data16
mov
(bad)
clc
inc
xchg
cmps
repnz
push
jnp
in
movs
test
inc
mov
fldl2e
pop
inc
retf
leave
lods
cmp
mov
dec
in
pop
lock
mov
bound
loop
push
push
jmp
fimul
xor
or
jl
or
in
outs
cmp
das
dec
xchg
adc
jecxz
add
in
movs
dec
iret
adc
add
mov
out
add
cmp
pop
sbb
repz
inc
mov
cdq
test
or
fwait
scas
fld
cmps
mov
retf
mov
out
sbb
rcl
cmps
and
movs
mov
je
iret
ins
test
hlt
sub
cmp
mov
dec
mov
out
sub
stos
fwait
repz
das
mov
inc
inc
cld
mov
shl
fisub
push
and
lock
pusha
sub
push
xor
or
inc
jp
stc
ss
not
jle
xor
mov
adc
xchg
mov
rcl
xor
hlt
retf
stos
(bad)
sti
imul
int
test
cmp
mov
call
popa
hlt
lahf
imul
pusha
aad
adc
into
adc
mov
sbb
push
jmp
sbb
cmp
jmp
inc
aas
scas
retf
cmp
pushf
inc
enter
sar
push
adc
mov
jb
push
or
jp
add
xor
stos
test
les
dec
cmp
das
pop
and
cwde
mov
dec
data16
fld
jmp
vpunpcklbw
iret
psadbw
jmp
adc
dec
pop
loop
jp
mov
sbb
(bad)
cld
sub
sahf
aad
loopne
fdivr
add
mov
shr
mov
popa
rcl
add
inc
jg
mov
popa
add
dec
mov
fisttp
leave
xlat
(bad)
mov
jbe
out
pop
jnp
and
jle
mov
mov
cmp
mov
inc
jl
int
lock
mov
pushf
scas
test
nop
and
fsubr
in
cmps
fwait
push
dec
(bad)
and
cmps
ret
cmps
repz
sub
pop
stos
pop
les
xchg
repnz
fidivr
cmps
pop
jmp
fcomp
lahf
test
push
lods
sti
test
unpcklps
push
dec
mov
ins
fcomp
push
push
mov
(bad)
fsubr
shr
inc
mov
rol
dec
or
push
stc
sub
jns
rcl
push
pop
sub
or
or
jnp
inc
jmp
mov
mov
mov
ror
mov
pop
jge
mov
mov
mov
push
sbb
aad
inc
push
std
shr
and
jle
fld
enter
neg
xchg
push
repnz
loop
sub
outs
fstp
or
jg
mov
jle
loopne
fs
test
dec
xchg
xchg
push
dec
repnz
enter
jmp
cmp
(bad)
arpl
ror
cs
lods
nop
dec
mov
mov
mov
ret
in
cmp
jmp
pop
js
pop
sbb
mov
cmps
pop
leave
xchg
repnz
in
rcr
test
push
pop
sub
jg
mov
sub
mov
jmp
xchg
(bad)
fist
outs
ret
rcl
into
js
pop
inc
dec
es
add
cmp
xor
push
sub
and
push
int3
aad
add
add
out
inc
fnsave
and
sub
jge
and
clc
and
push
arpl
addr16
shr
es
cs
inc
cmc
sar
data16
or
(bad)
loopne
rcr
xor
mov
call
push
mov
xor
inc
in
or
sub
ss
mov
xchg
push
fwait
inc
mov
cdq
cdq
aas
nop
cmp
cmp
cwd
mov
fldenv
adc
rol
add
(bad)
retf
cld
(bad)
scas
jae
and
nop
push
jmp
cmps
retf
movs
outs
repz
dec
inc
mov
sub
pop
xor
and
mov
push
inc
push
adc
lods
stc
add
and
lock
adc
int
inc
xchg
xchg
inc
mov
dec
inc
pop
mov
inc
adc
test
and
xor
leave
xor
jp
(bad)
mov
hlt
add
es
dec
jne
or
cmc
push
mov
pop
jae
lods
add
test
add
push
add
not
ret
add
sbb
loop
push
hlt
adc
push
aam
aam
rcr
outs
pop
push
sbb
pop
loop
cmp
in
sbb
mov
xor
add
shl
pop
fisubr
mov
(bad)
sahf
pop
add
mov
xor
or
test
xchg
out
jg
mov
not
or
or
aad
cld
adc
pop
fdiv
jle
test
or
add
sub
scas
lahf
xchg
aam
loop
push
out
jg
test
lock
inc
fwait
mov
ins
not
mov
jbe
pop
dec
push
jmp
pop
mov
sbb
and
rcr
mov
sub
adc
dec
mov
iret
mov
inc
push
sub
sahf
(bad)
xchg
push
fidivr
in
pop
int3
cmps
push
mov
mov
outs
clc
adc
les
ins
scas
mov
mov
out
fadd
retw
mov
jnp
or
dec
pushf
and
stos
pop
fmul
rcr
shl
fiadd
hlt
fild
mov
cmp
mov
jge
mov
jnp
xor
mov
inc
xchg
sub
je
mov
fnsave
adc
dec
pcmpeqb
stos
and
dec
inc
or
pusha
cmp
fs
jae
mov
jns
mov
std
fs
mov
xchg
xor
aad
or
or
inc
popa
sub
sub
and
mov
mov
std
pusha
sbb
(bad)
pop
lock
out
add
sbb
shl
imul
xchg
hlt
add
xlat
div
and
inc
inc
(bad)
inc
mov
data16
inc
icebp
dec
clc
cmp
xchg
inc
sti
fwait
mov
lods
xor
cmc
add
adc
mov
mov
pop
push
dec
mov
xor
pop
inc
cmp
jne
mul
aaa
and
scas
sbb
data16
inc
test
xchg
into
adc
repnz
inc
adc
mov
jl
mov
mov
seto
or
(bad)
mov
push
xor
hlt
or
jg
(bad)
xchg
shr
inc
data16
in
jae
jge
cmp
in
fild
lahf
cwde
or
or
or
repnz
ds
cld
sub
fs
jnp
cli
adc
dec
in
xchg
inc
stos
repnz
(bad)
fdivrp
add
or
iret
dec
cmp
push
lahf
clc
(bad)
and
pusha
fimul
xor
xchg
xor
(bad)
mov
icebp
neg
pop
and
and
xchg
nop
adc
outs
jmp
inc
and
mov
out
push
out
mov
enter
inc
pop
out
mov
lds
repz
cmp
fiadd
push
sbb
pop
in
outs
test
popf
adc
mov
cmp
inc
in
adc
pop
dec
and
push
jg
es
out
fild
push
inc
xor
std
lods
mov
call
jecxz
inc
sub
popf
iret
xor
mov
mov
mov
mov
cmc
add
popa
mov
dec
fs
stos
outs
into
outs
test
test
jl
sub
(bad)
cmc
xchg
push
jae
push
dec
xchg
test
dec
repz
add
daa
xlat
imul
inc
jns
inc
cwde
shl
cmps
add
aad
mov
mov
xchg
lahf
popf
push
adc
loopne
xor
dec
sti
mov
data16
cli
sbb
or
xor
fs
jmp
imul
ret
fs
or
jmp
sbb
movs
imul
out
push
add
sbb
imul
fs
aam
enter
dec
pop
jae
js
and
pop
loopne
add
ret
cwde
(bad)
out
or
mov
fisttp
sub
xchg
test
sub
stos
jle
(bad)
push
sbb
pop
fdiv
cwde
inc
mov
pop
xchg
adc
ror
push
and
sbb
add
cmps
fs
or
push
es
push
sbb
iret
aaa
lea
fcomp
repz
test
pop
push
jnp
cmps
mov
cmp
xor
mov
dec
jp
call
xlat
xchg
sti
and
adc
sbb
aaa
iret
pop
pop
adc
mov
inc
or
loop
sub
dec
pop
sete
inc
or
or
jecxz
ja
js
arpl
ja
mov
push
int
(bad)
into
add
mov
in
out
call
popf
or
xchg
cmp
mov
retf
repz
jle
dec
adc
dec
mov
mov
shl
mov
fwait
(bad)
repnz
cs
test
repz
jmp
jp
push
cdq
cmps
cmps
retf
add
push
xor
add
sbb
test
gs
push
mov
pop
pop
adc
nop
ret
jmp
lods
repz
hlt
in
push
xchg
dec
cmp
pop
dec
pop
scas
pushf
mov
ja
xor
adc
sub
push
mov
add
xor
cs
xchg
mov
cs
xor
aas
stc
loop
pop
inc
movs
cs
cmp
cmp
ds
jae
invd
stos
imul
into
and
jae
xchg
xchg
es
daa
and
out
dec
aad
cmp
aad
push
mov
adc
mov
push
xchg
cmp
jg
inc
pop
cdq
push
inc
sub
pop
int3
mov
movs
or
jmp
add
stos
mov
mov
inc
mov
daa
mov
adc
mov
xchg
cmp
adc
push
in
pop
jae
mov
add
test
mov
mov
loopne
dec
in
repz
aas
sbb
leave
mov
cli
shr
push
(bad)
mov
or
repnz
pop
icebp
adc
mov
sub
popa
daa
and
jl
(bad)
pop
jecxz
add
mov
imul
mov
loope
test
scas
jb
xchg
xchg
repnz
fist
and
(bad)
sub
pop
pop
ror
jl
jbe
pushf
push
jne
test
add
dec
jae
push
mov
add
mov
test
adc
data16
xor
pop
popa
out
adc
enter
inc
xor
xchg
out
retf
mov
push
pop
lods
(bad)
movs
pop
cs
mov
dec
fs
pop
mov
mov
mov
test
ss
sbb
mov
out
pop
inc
outs
dec
ds
mov
push
mov
test
out
xor
xor
mov
and
jle
xlat
and
ins
lods
das
pop
pop
and
lea
adc
push
push
repnz
fs
jmp
cmp
add
movs
add
push
scas
inc
inc
lea
mov
jno
retf
mov
mov
or
pop
ret
xor
pop
xor
loop
lock
ins
fstp
je
mov
and
xlat
jns
and
arpl
ds
pusha
dec
push
mov
retf
xor
aam
ror
mov
repz
inc
jmp
cmp
pushf
mov
push
rcr
daa
cs
xchg
cwde
fdiv
ror
xlat
aas
fst
pop
and
inc
and
loop
jbe
mov
xchg
or
rol
xor
cmp
mov
push
jo
stos
add
aaa
mov
mov
jno
daa
pop
and
dec
js
ins
js
pop
(bad)
jl
in
pushf
mov
sbb
into
ret
xchg
or
sub
shr
cmp
inc
and
dec
imul
cmps
mov
push
jmp
add
pop
js
aas
jne
or
sti
mov
popf
call
aas
cli
(bad)
push
xor
popf
loope
into
inc
xor
(bad)
mov
adc
and
jnp
mov
jmp
xchg
popa
adc
sbb
test
dec
test
ret
rcr
shr
mov
and
dec
pushf
aam
mov
rcr
pop
xchg
cmp
daa
jmp
pop
clc
cmps
dec
cmc
pop
dec
push
cmps
mov
mul
push
or
outs
jb
dec
retf
xor
sbb
mov
or
or
cdq
cs
jg
hlt
movs
(bad)
sti
add
clc
add
ins
ret
cdq
jl
sub
(bad)
lds
popf
dec
cmps
push
clc
fimul
pop
addr16
inc
das
jae
lds
xchg
mov
pop
and
push
mov
aad
push
or
js
pop
push
test
push
push
cmp
mov
popa
test
aas
in
mov
xor
pop
adc
dec
test
dec
icebp
xchg
pop
test
in
retf
outs
in
nop
loope
add
adc
mov
pop
inc
(bad)
pusha
xchg
add
(bad)
cmp
sbb
pop
xor
and
out
adc
xchg
or
adc
and
pusha
xchg
dec
test
adc
lock
add
lahf
and
sbb
add
imul
jno
js
rcl
inc
sub
pop
xchg
out
test
dec
cmp
dec
jns
pmuludq
xchg
push
pop
push
cmp
or
scas
inc
movs
and
sbb
adc
mov
pop
adc
and
pop
jmp
pop
push
call
push
mov
inc
into
xor
jns
pop
add
jge
stos
add
enter
sbb
aad
adc
xchg
jge
mov
pminsw
fnstcw
push
sbb
and
xchg
je
idiv
cmc
push
adc
data16
lds
cdq
dec
pop
stos
icebp
(bad)
fld
push
retf
push
mov
gs
add
lahf
neg
cmp
sub
jnp
arpl
and
cmp
lahf
repz
jno
aam
push
and
mov
ret
xlat
js
cmp
das
xchg
outs
movs
lds
popf
push
xchg
ss
mov
pushf
stos
ret
and
ret
mov
dec
into
xor
stc
ret
pop
pop
mov
mov
inc
mov
dec
push
es
adc
shl
es
inc
out
jmp
push
pop
nop
cmps
mov
rcl
pusha
bound
data16
jp
sub
pop
sub
inc
les
(bad)
int
mov
mov
mov
and
xchg
test
mov
or
pop
loop
lds
mov
xor
xor
jno
xchg
lea
sbb
jmp
cli
jb
xchg
inc
arpl
add
retf
test
(bad)
adc
dec
fnstenv
js
cmp
add
inc
sbb
fdivr
gs
push
or
cdq
pop
dec
jg
outs
je
pop
mov
call
sbb
mov
stos
not
jmp
xor
vpinsrq
dec
arpl
mov
xlat
jo
mov
inc
pop
iret
mov
lock
dec
mov
add
sbb
mov
shr
mov
pop
shr
scas
add
push
cmp
stos
fistp
js
pop
sbb
adc
xchg
push
add
push
frstor
adc
push
or
mov
pop
mov
sbb
mov
xlat
dec
lods
cmps
pop
(bad)
mov
sbb
cmp
jp
pop
inc
dec
mov
jae
xchg
mov
inc
rcl
fld
sub
or
shr
cmc
test
push
call
ror
loopne
jl
daa
out
into
in
fbld
push
or
inc
rol
fadd
pop
sbb
loopne
xor
jae
ins
fs
not
mov
inc
xchg
add
mov
sbb
push
xor
bound
out
jecxz
xchg
mov
pusha
mov
mov
pop
mov
pusha
xchg
xor
add
and
cmc
jp
stos
rcr
sub
jmp
mov
ja
movs
and
push
jmp
mov
test
frstor
aaa
mov
adc
lds
push
das
mov
sbb
(bad)
push
pop
call
inc
(bad)
inc
xor
mov
inc
fs
scas
fisubr
and
sbb
mov
push
push
ret
push
test
sbb
mov
push
ret
(bad)
fs
sbb
xchg
sbb
test
int3
fsubr
adc
lahf
inc
pushf
sub
imul
lock
add
mov
std
add
sti
or
jne
stc
sub
cmp
adc
hlt
mov
aad
xchg
outs
pop
add
cmp
test
mov
pop
push
cmc
xor
pop
shr
es
movs
pop
mul
and
les
js
jl
xchg
sti
jbe
add
outs
sar
cli
push
inc
inc
arpl
enter
xchg
pop
test
or
enter
loope
sub
es
outs
push
pop
cs
stos
sub
fnstcw
jb
data16
push
xchg
(bad)
clc
jns
add
adc
outs
and
pop
imul
push
cmp
inc
(bad)
repz
push
shl
das
push
jl
outs
add
mov
je
jp
in
pop
cld
movs
xchg
jae
pop
and
cmc
dec
outs
cmp
cmp
ds
dec
inc
ins
xchg
add
push
mov
in
sbb
jle
sbb
add
cmp
jb
outs
test
data16
jbe
pop
push
xchg
push
lock
sbb
dec
test
dec
push
cmps
mov
mov
icebp
dec
xor
sub
inc
sub
loopne
aaa
movs
xor
and
repz
add
xor
push
stos
shr
mov
js
mov
(bad)
sar
sub
gs
xor
or
pop
mov
jae
mov
fistp
fld
gs
pop
xor
mov
xchg
or
aam
int3
ins
mov
adc
frstor
xlat
push
or
ds
push
stos
mov
xor
xor
test
sub
movs
bound
(bad)
cs
add
pop
outs
and
pop
adc
dec
loopne
ins
sti
in
(bad)
aam
inc
and
add
jb
mov
sbb
and
push
pop
daa
mov
sbb
(bad)
xchg
sbb
rol
out
adc
ror
test
ret
(bad)
cmp
xlat
mov
ds
cmps
ret
pushf
adc
popf
adc
mov
stos
mov
push
lds
stos
dec
stos
leave
loope
adc
rcl
jae
(bad)
adc
clc
pop
les
mov
cdq
clc
into
inc
test
inc
adc
push
les
out
mov
clc
lock
sti
add
mov
inc
(bad)
jne
(bad)
popa
and
aad
add
das
jl
retf
fild
cdq
das
sahf
xor
pop
sbb
ret
hlt
jnp
mov
pop
scas
cmp
cli
outs
fld
ins
hlt
out
les
xchg
sub
mov
jecxz
ss
xchg
pushf
(bad)
rcl
cmp
pop
outs
sbb
shl
adc
push
cmovnp
inc
add
inc
mov
daa
xchg
jb
rcl
enter
dec
pusha
gs
cmps
xchg
pop
push
and
dec
leave
jmp
fist
fild
(bad)
repz
cmp
adc
jmp
xchg
in
push
frstor
adc
mov
int3
iret
pop
push
retf
ds
movs
xor
aam
push
icebp
sbb
arpl
push
out
loope
mov
inc
adc
jg
je
mov
sbb
pop
pop
clc
repz
test
lock
leave
jge
popf
jge
outs
xchg
jbe
pop
jmp
scas
pop
in
mov
icebp
mov
sub
push
movs
mov
ret
jnp
jmp
adc
in
(bad)
jp
cmp
or
(bad)
adc
push
dec
adc
daa
or
test
mov
lock
ret
add
pop
jmp
mov
push
js
cmps
or
lods
mov
push
jg
mov
test
or
jno
imul
xor
fimul
jp
pop
mov
dec
ret
aas
add
adc
or
jge
gs
arpl
sub
pop
xor
ret
push
mov
sbb
call
mov
pusha
aas
add
int3
test
int3
or
sub
iret
push
dec
add
lods
cs
jno
(bad)
ficom
call
cmp
sbb
jo
jo
push
inc
inc
jmp
int
loope
in
cmp
int
xchg
push
xchg
pop
in
test
jge
add
sbb
adc
out
jmp
data16
(bad)
lods
push
sbb
bound
movs
ja
mov
and
adc
push
mov
je
xor
sahf
fs
js
dec
pop
movs
mov
xchg
mov
push
outs
dec
mov
dec
push
or
(bad)
jmp
cmp
imul
test
arpl
test
popf
or
(bad)
aam
mov
sub
pop
ret
loop
dec
mov
bound
xlat
push
inc
outs
sar
xchg
in
and
mov
mov
push
pop
mov
pop
dec
xor
pop
iret
pop
cmps
fild
or
ins
cmp
aam
jg
lock
adc
fidiv
cli
jp
in
fcomip
cmp
fldcw
mov
dec
or
test
mov
sub
jo
dec
in
loop
dec
loop
xor
cdq
jnp
dec
aaa
lahf
jns
xchg
dec
sahf
mov
pop
mov
into
or
test
mov
and
es
sub
cmps
push
out
add
std
pop
xor
add
jecxz
pop
push
mov
out
aam
mov
in
je
inc
push
xor
cmp
ds
loope
movs
cmps
mov
in
call
lods
jle
pushf
mov
sub
bound
loopne
fadd
(bad)
pop
push
(bad)
imul
loop
(bad)
std
aam
sub
ds
cmp
push
xlat
jno
hlt
shl
push
pop
sub
jmp
xchg
lahf
dec
or
xor
cmp
repnz
in
mov
and
enter
ja
fidivr
jb
leave
adc
push
es
nop
or
xor
retf
(bad)
push
leave
int
daa
rcl
aas
mov
cmc
ins
icebp
call
and
stc
sub
call
sbb
mov
dec
lods
mov
add
add
sub
push
xor
icebp
int
xor
jae
xlat
fidiv
mov
fld
test
xor
xor
dec
push
mov
pop
fisub
inc
jecxz
and
mov
cmps
fst
fidivr
mov
clc
pop
dec
pop
sub
add
adc
inc
xor
sbb
xor
cmc
jno
adc
cmp
(bad)
clc
test
bound
push
icebp
(bad)
xor
shr
icebp
imul
scas
fs
sbb
mov
add
(bad)
jg
mov
xchg
jmp
pop
dec
or
add
lock
mov
and
adc
jg
add
test
jmp
ins
or
xchg
daa
aad
pop
in
fmul
jne
xchg
or
gs
dec
fwait
std
pop
or
loopne
popf
or
shl
out
(bad)
push
ss
call
popf
imul
into
scas
(bad)
icebp
out
cmc
dec
xchg
mov
cmp
xchg
(bad)
aad
lea
dec
jae
fcmovb
push
push
sbb
int
leave
fsubr
jbe
mov
outs
xchg
fcomip
loopne
scas
mov
ds
cld
(bad)
imul
fld
adc
(bad)
pop
push
dec
mov
movs
pop
imul
push
out
icebp
xor
fidivr
push
cmp
data16
cdq
inc
xchg
data16
loope
pop
aad
(bad)
(bad)
mov
xchg
mov
jmp
or
cmps
gs
(bad)
push
imul
add
inc
popa
lods
pop
mov
sbb
mov
add
cmp
jns
jg
clc
push
neg
push
stos
xchg
or
xor
ins
sub
inc
shr
leave
add
mov
sub
xchg
imul
mov
adc
mov
sub
sbb
or
jge
mov
xchg
push
jns
push
mov
add
mov
lock
(bad)
push
adc
repnz
push
lods
mov
xlat
test
leave
sub
push
in
cmp
dec
add
arpl
sbb
mov
and
(bad)
sub
stos
je
outs
xor
hlt
adc
mov
mov
out
or
sahf
leave
adc
bound
call
loop
stos
xor
jbe
ret
push
xor
xchg
outs
stos
or
stos
xor
lods
push
mov
or
jl
add
add
lods
push
stos
shl
jmp
push
push
and
ret
dec
call
push
pushf
outs
iret
fimul
jecxz
jae
cmp
xor
and
sub
jecxz
dec
add
cmc
sti
push
cmc
inc
into
mov
fnstcw
movs
scas
adc
int3
and
jmp
jmp
ja
out
ja
jle
pop
adc
(bad)
fnstcw
cdq
sar
data16
fimul
ins
shl
jmp
lock
xchg
daa
cli
mov
ds
hlt
sti
or
jnp
addr16
daa
and
pop
add
in
push
sbb
scas
adc
loopne
pop
pushf
lsl
push
push
sub
add
pop
out
pop
sub
push
push
cwde
into
jle
cmp
addr16
call
stos
inc
pop
js
jecxz
lods
add
je
xlat
pop
cmp
xchg
adc
js
xchg
fbstp
retf
mov
cdq
push
jge
call
mov
fisttp
cdq
lock
int3
pusha
loopne
ins
xor
movs
sub
inc
sysenter
mov
aas
push
ins
bound
sub
ins
mov
jp
and
cmp
xlat
imul
cdq
jp
mov
or
push
fs
test
or
mov
sbb
cmp
lea
or
(bad)
push
add
and
sahf
or
das
and
iret
dec
nop
in
xchg
sbb
pop
jp
aad
in
mov
pop
in
lea
or
mov
icebp
stos
pop
add
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
repnz
jne
mov
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
fcmovbe
push
add
add
add
add
add
add
sub
add
push
add
add
add
add
fcmovbe
push
add
add
add
add
add
add
inc
add
add
add
push
fcmovbe
push
add
add
add
add
or
add
add
in
lock
test
add
push
fcmovbe
push
add
add
add
add
add
add
add
add
add
push
fcmovbe
push
add
add
add
add
or
add
stc
add
adc
add
push
fcmovbe
push
add
add
add
add
rol
add
add
push
fcmovbe
push
add
add
add
add
or
add
add
add
add
add
mov
add
add
add
add
add
add
add
or
add
add
add
add
add
add
aad
xor
add
ror
or
add
push
add
repnz
lds
add
jnp
add
mov
cmp
add
mov
add
sbb
add
repnz
add
mov
add
je
add
shr
add
xchg
xchg
add
repnz
mul
and
adc
jae
lds
jae
bound
add
add
add
add
add
add
add
add
add
add
add
add
pop
sbb
adc
push
push
add
add
adc
push
push
pop
or
adc
or
add
add
adc
push
push
add
add
add
add
or
or
sbb
add
add
add
movlps
adc
adc
adc
push
add
add
add
add
pop
or
or
or
adc
adc
add
add
add
or
or
or
or
sbb
add
add
add
adc
adc
add
add
pop
or
or
or
or
or
add
sbb
pop
pop
adc
adc
pop
sbb
pop
or
or
or
or
or
or
sbb
sbb
adc
adc
pop
or
or
or
or
or
or
or
add
add
or
sbb
sbb
sbb
add
add
adc
add
or
or
pop
add
add
sbb
sbb
sbb
sbb
or
add
add
add
add
or
pop
add
add
sbb
add
sbb
sbb
sbb
add
add
add
add
or
or
or
add
add
add
sbb
sbb
sbb
sbb
sbb
add
add
add
add
or
or
add
add
add
sbb
sbb
sbb
sbb
sbb
add
add
add
add
add
or
add
add
add
add
sbb
or
sbb
or
sbb
add
add
add
add
add
or
adc
sbb
adc
sbb
add
add
or
sbb
sbb
sbb
add
add
pop
add
add
add
add
add
and
add
add
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
fiadd
add
add
push
add
add
outs
add
inc
add
ins
add
dec
add
data16
add
mov
add
add
xor
xor
xor
xor
bound
xor
add
dec
add
add
add
outs
add
jo
popa
add
jns
dec
add
ins
add
add
add
jp
add
outs
add
push
jne
jne
jne
jp
outs
add
imul
push
outs
add
jp
push
add
add
add
push
add
add
add
jb
outs
add
add
je
dec
add
ins
add
add
add
jp
jp
jo
jo
data16
push
imul
add
add
push
jo
push
jo
jp
outs
add
add
jp
add
add
add
inc
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
add
add
add
add
sti
add
test
add
icebp
sti
add
(bad)
sti
add
(bad)
sti
add
int3
sti
add
or
add
aam
add
adc
add
fdivr
add
push
cld
add
sub
add
cmp
add
dec
cld
add
pop
cld
add
push
add
add
add
add
add
mov
add
add
add
xchg
cld
add
add
add
mov
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
dec
inc
push
dec
xor
cs
dec
dec
add
push
inc
push
push
cs
ins
add
inc
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
ins
ins
outs
arpl
add
jb
jne
ins
inc
jb
add
add
imul
jae
add
dec
outs
imul
inc
outs
outs
je
outs
ins
jae
js
add
gs
inc
outs
dec
outs
imul
add
dec
gs
popa
addr16
outs
js
add
add
jb
jns
jne
outs
add
gs
jne
outs
add
gs
jne
outs
jb
xor
bound
xor
xor
data16
gs
addr16
gs
gs
gs
gs
gs
addr16
gs
jns
jne
outs
and
or
mov
arpl
lock
or
pushf
sbb
movs
xor
adc
mov
pop
inc
mov
aaa
mov
mov
es
adc
fisub
call
loope
sbb
icebp
mov
enter
movs
test
aad
adc
push
mov
add
mov
ins
mov
jno
mov
mov
pop
push
jne
xor
jno
fdiv
push
mov
dec
push
push
xchg
inc
setnp
cmps
wrmsr
sbb
(bad)
dec
and
cmp
mov
outs
rcl
mov
and
mov
fbstp
ins
out
or
mov
repz
popa
mov
inc
mov
stos
add
mov
cmp
xchg
jge
inc
rcr
lods
out
and
mov
int3
mov
mov
xacquire
or
dec
push
les
(bad)
aam
mov
jp
dec
sub
lea
add
gs
fadd
int3
repnz
dec
pop
cs
push
ins
rol
sbb
sbb
cmp
mov
adc
adc
mov
mov
lds
push
adc
outs
pop
aas
enter
adc
ins
lods
fwait
ret
repz
pop
retf
cld
aam
pop
daa
cmp
cmovne
cmps
imul
mov
jae
es
jmp
std
addr16
push
and
retf
or
pushf
mov
cs
mov
sbb
mov
shl
pop
cs
out
push
xor
aas
sub
mov
sahf
mov
inc
mov
gs
sub
out
iret
lods
int
bound
jle
jl
or
std
nop
das
add
mov
mov
lods
pop
ins
cs
data16
pop
aas
xor
es
bound
or
jnp
shl
sub
lea
sbb
fmul
fcom
dec
neg
addr16
jae
(bad)
std
cli
mov
and
and
and
mov
push
mov
imul
adc
shl
adc
adc
aad
pop
xchg
dec
fcomi
test
cdq
pop
lods
fmul
inc
in
and
xchg
pxor
shl
das
sti
js
dec
inc
scas
pop
popf
mov
add
repnz
retf
push
addr16
int
cld
mov
xor
rol
scas
in
scas
std
mov
jl
loopne
shr
out
mov
aad
popa
add
fistp
mov
outs
rcr
es
dec
and
and
push
pop
(bad)
imul
and
jnp
jmp
jmp
mov
out
outs
(bad)
push
jl
fldenv
push
mov
adc
push
stos
cmp
pop
adc
cwde
inc
pop
(bad)
int3
fdivr
pop
and
daa
xor
or
out
jae
xor
leave
xchg
pusha
mov
sub
push
mov
fnsave
leave
mov
xor
ds
js
stc
push
movs
mov
dec
test
or
sub
inc
jae
lds
xor
fistp
dec
ins
cld
cmp
add
add
call
mov
leave
push
sbb
xor
adc
stc
jmp
cmp
in
sbb
pop
pop
or
jmp
cld
mov
dec
add
(bad)
xor
js
sub
sub
cli
jo
mov
pusha
hlt
call
or
or
xchg
clc
or
mov
inc
(bad)
sbb
dec
cwde
(bad)
lds
call
mov
fcom
popf
lds
stc
sbb
cld
imul
sar
xor
mov
mov
or
pop
sub
xor
shl
retf
out
cmp
mov
icebp
ss
stos
add
pop
dec
cmp
stos
pop
cwde
and
js
or
test
inc
outs
jae
cmp
cli
nop
(bad)
repnz
cmp
cmps
mov
inc
(bad)
and
cwde
push
mov
cli
mov
not
jnp
inc
mov
test
jg
lods
cdq
and
pop
nop
(bad)
xchg
and
inc
mov
sbb
jno
(bad)
stc
pop
dec
add
xor
xchg
sar
xchg
mov
xchg
bnd
out
int
fist
scas
or
stc
sub
add
pop
jbe
sahf
sub
sar
pop
push
test
and
mov
ss
inc
sti
or
pop
cmp
aad
fucomi
imul
cmp
cld
or
pop
inc
loope
or
add
jo
cmp
mov
daa
adc
inc
shl
bound
mov
cmp
hlt
call
stc
xchg
xor
stos
shl
push
outs
(bad)
or
popa
push
int
and
imul
fwait
out
les
aad
dec
sbb
sbb
es
aam
cdq
pop
add
cmp
dec
pushf
lahf
lods
into
out
fimul
ret
(bad)
std
jecxz
lock
xor
std
stos
rol
pop
aas
int3
dec
mov
popa
popf
adc
stos
push
test
in
push
outs
out
int
cmp
and
imul
test
loopne
or
movs
mov
xchg
mov
sub
cmps
sbb
cld
sub
pop
xchg
jge
sbb
shl
push
and
into
mov
sahf
cmp
sbb
neg
add
cmp
mov
cmp
push
shl
call
lods
stc
scas
aas
aaa
add
jmp
ror
aas
rol
mov
daa
mov
fnstenv
mov
stos
pop
or
scas
or
or
jbe
jecxz
pop
and
xchg
outs
cmc
or
push
mov
sbb
mov
mov
pushf
sub
adc
not
push
cmp
fild
inc
mov
jo
ret
lock
mov
div
hlt
and
jne
pop
out
mov
or
push
adc
dec
pop
push
adc
and
xor
neg
cmps
sbb
mov
or
mov
lods
ret
jns
mov
pop
in
ret
bound
inc
loopne
push
int
mov
adc
dec
sti
or
lock
dec
mov
or
stos
cmovl
lods
lds
rol
cmp
mov
inc
mov
arpl
les
loope
mov
dec
push
aad
sbb
xor
push
push
adc
retf
inc
pusha
shl
mov
pop
(bad)
adc
mov
sub
dec
jecxz
mov
xlat
cmps
mov
in
stos
neg
mov
push
and
test
xchg
inc
aad
aad
ret
dec
adc
xchg
ficomp
cmp
rcr
lea
ror
xor
jmp
pop
and
lods
sub
cmps
mov
mov
sbb
adc
mov
inc
clc
xchg
dec
test
mov
add
jl
ror
xor
mov
int3
fwait
mov
outs
ja
call
out
gs
cmc
std
cmps
arpl
xchg
mov
stc
jbe
arpl
xchg
bound
add
imul
out
adc
or
push
outs
push
ret
and
xchg
mov
dec
fsub
lds
pop
sbb
bound
mov
mov
sub
add
and
pop
xor
inc
sti
and
cmp
lock
int3
scas
stc
in
jns
push
inc
push
mov
enter
inc
leave
cli
inc
aaa
sub
pop
push
fdivp
pusha
and
adc
sub
xchg
pop
cmp
pushw
iret
mov
push
dec
xchg
mov
(bad)
and
lds
cmp
sbb
or
add
fs
call
xor
stc
enter
push
test
clc
push
pop
out
xor
pop
pop
mov
lea
idiv
aam
xor
and
outs
mov
xor
dec
mov
dec
pop
cmps
cmp
call
jmp
fistp
add
jle
mov
jns
jmp
push
cli
repnz
adc
mov
lea
or
pop
mov
push
leave
jl
ret
cmp
add
or
cli
mov
test
(bad)
dec
sbb
pop
hlt
sbb
pop
mov
mov
pop
sbb
mov
add
cmps
or
xor
inc
push
push
mov
add
fbstp
cmp
xor
sub
aad
pop
in
js
dec
jo
pop
sub
aad
sub
mov
data16
pop
push
leave
sahf
into
xor
jl
add
popf
outs
add
(bad)
enter
jmp
mov
dec
fbstp
fwait
bound
das
add
cmc
sbb
pop
jae
mov
retf
dec
scas
push
xchg
and
xor
sbb
xchg
push
into
(bad)
pop
mov
paddq
mov
cmp
jb
jns
jne
outs
sti
retf
enter
jns
inc
xchg
or
jo
xor
push
loope
push
jl
mov
int3
xchg
add
and
jle
sahf
out
cmps
movs
pop
mov
jbe
xor
mov
cmc
icebp
mov
sbb
movs
push
(bad)
push
cmps
push
call
and
jl
mov
fs
mov
dec
mov
sbb
iret
inc
inc
neg
xor
jmp
xchg
jae
cdq
mov
pop
xchg
inc
mov
inc
in
inc
xchg
sbb
inc
inc
add
inc
pop
call
inc
out
test
cs
jbe
stos
mov
in
cdq
aas
xchg
dec
or
add
aam
mov
jo
pop
or
idiv
arpl
and
mov
loopne
shl
aad
cmp
xchg
jg
cmp
call
push
aaa
jbe
xor
xchg
or
cmp
int3
cdq
adc
xchg
or
je
pop
xchg
mov
mov
ret
xchg
imul
xchg
xchg
test
data16
mov
stc
and
out
add
mov
mov
jp
sbb
cmp
and
pop
in
mov
sub
dec
xor
gs
loope
mov
and
out
mov
(bad)
cwde
lods
pop
sub
dec
outs
psubb
(bad)
mov
cmp
lods
inc
sar
out
sti
int3
in
push
jge
leave
xchg
pop
(bad)
rcl
mov
inc
dec
xchg
adc
lds
pop
clc
push
mov
mov
mov
and
adc
pop
loop
or
xor
pop
xlat
std
es
jle
pusha
popf
stc
shr
stos
push
lods
(bad)
cmp
jbe
sub
fistp
and
pop
call
mov
cmp
jl
fwait
in
cld
pop
xor
mov
lods
fmul
daa
pop
pop
jae
or
ins
push
mov
xor
sbb
loop
sbb
mov
outs
out
stc
popf
out
or
inc
sbb
mov
jns
mov
or
adc
mov
call
mov
sbb
pop
div
nop
dec
sub
xchg
mov
(bad)
pop
clc
jmp
jnp
(bad)
fcomp
cwde
mov
ja
pusha
popa
idiv
movs
adc
xlat
pop
test
dec
ins
retf
or
popf
pop
movs
leave
push
xor
ret
cli
adc
arpl
mov
pop
iret
jnp
test
dec
mov
sahf
int
ss
add
mov
ret
push
xor
and
dec
jmp
fldenv
jmp
push
rcl
js
mov
and
(bad)
pop
fld
fist
dec
and
fist
mov
out
cmp
mov
repz
adc
jns
lods
add
hlt
std
sahf
cmp
daa
mov
push
pop
ja
cmp
and
outs
add
lock
xchg
imul
pop
jbe
inc
ds
mov
push
jnp
dec
outs
leave
arpl
js
jg
push
pop
and
mov
ds
scas
xchg
add
jmp
push
pushf
or
pop
mov
xor
cmp
fdivr
arpl
cdq
ja
adc
fmul
mov
rcr
sub
sbb
mov
shl
jp
dec
(bad)
ja
sahf
leave
cli
dec
(bad)
ins
cmp
sti
retf
xchg
push
pop
arpl
fdivp
ja
xor
or
cmp
sar
iret
fst
sbb
jecxz
sub
inc
add
inc
arpl
fucomp
lock
aam
cmp
cmps
daa
arpl
xchg
shl
in
test
mov
fisub
jo
stos
mov
in
pop
(bad)
pop
in
int
dec
repz
es
sub
cld
dec
enter
mov
fwait
cmp
add
les
push
pop
dec
ror
jg
fwait
repnz
jo
neg
mov
add
jns
sub
xchg
cmp
cld
inc
daa
dec
or
cli
sub
inc
mov
fwait
push
dec
push
push
cwde
pop
jnp
dec
outs
out
xchg
cmps
mov
(bad)
cmp
retf
push
aas
xor
cmp
push
mov
add
inc
mov
lock
push
or
inc
(bad)
xor
dec
test
xchg
push
push
mov
pop
loop
ins
iret
push
fwait
rol
cli
xor
out
sar
adc
jb
jno
sar
out
ror
push
mov
mov
popf
scas
add
mov
out
lds
adc
sbb
adc
sub
fwait
cdq
cmp
add
imul
xchg
mov
push
or
jge
arpl
dec
hlt
jecxz
sar
pusha
sub
sbb
lahf
inc
dec
rol
xor
fsub
aas
mov
in
xlat
xlat
inc
mov
movs
sub
retf
dec
mov
push
test
or
jmp
stos
cwde
and
sub
push
ins
or
mov
ret
push
out
dec
pop
sub
je
(bad)
(bad)
mov
xor
jmp
popa
aaa
dec
xor
lods
lods
in
popf
adc
sub
in
ins
scas
cmps
fistp
sbb
dec
fidivr
sbb
mov
push
jae
sub
xchg
pop
add
or
test
xor
imul
mov
mov
imul
data16
mov
cmp
clc
loop
pop
cmp
xchg
inc
loope
test
mov
hlt
jmp
xchg
popa
sysexit
pop
mov
mov
in
mov
addr16
push
xchg
dec
mov
stos
stos
and
cmp
outs
lds
daa
fbstp
add
or
xchg
sub
int
shr
in
call
pusha
lods
out
sbb
out
adc
add
or
fnsetpm(287
mov
mov
fwait
mov
inc
inc
xor
dec
test
std
and
out
outs
dec
cwde
mov
retf
test
push
lods
jmp
cwde
mov
jnp
mov
push
mov
mov
js
mov
les
and
push
jae
mov
or
mov
mov
(bad)
pop
jg
fisttp
xor
fdivp
imul
rol
loopne
jnp
pop
frstor
sub
jnp
stc
dec
dec
sbb
fdivr
and
mov
mov
and
not
jns
out
shl
or
je
retf
pop
loop
mov
mov
movs
xor
lods
push
shr
ins
dec
mov
push
inc
jg
mov
ret
scas
stc
sbb
push
pop
and
inc
jno
add
sahf
jge
shl
jg
ins
loopne
jmp
cs
or
outs
push
xchg
cmc
mov
sbb
lahf
pop
jecxz
retf
jl
ja
in
add
or
cs
les
xchg
push
adc
push
je
scas
mov
push
fs
test
test
adc
sbb
and
xchg
les
aad
repz
push
retf
push
ins
cs
sbb
clc
mov
out
pop
mov
shr
inc
dec
push
scas
rol
jge
xchg
jmp
scas
(bad)
sbb
data16
jo
xor
scas
xor
xchg
arpl
imul
mov
push
and
mov
(bad)
(bad)
pop
clc
sahf
mov
dec
jg
push
jp
xor
mov
push
and
nop
in
mov
das
lods
add
cmps
outs
shl
fld
or
xor
(bad)
jb
leave
outs
push
in
inc
int3
cmps
cs
xor
(bad)
dec
xlat
clc
lods
dec
pop
mov
mov
test
int3
jmp
dec
pop
sti
cdq
adc
enter
jl
jmp
mov
xchg
shr
loopne
push
jge
ds
inc
out
sub
cmp
cmps
stos
dec
mov
retf
and
arpl
jmp
jmp
rcl
or
pop
adc
mov
fist
(bad)
repz
xor
or
or
fistp
and
movs
or
in
ss
retf
mov
mov
push
imul
sub
test
sahf
popf
mov
leave
mov
pop
fs
ret
sub
retf
clc
inc
cld
je
dec
ffree
jns
mov
add
popa
jns
dec
pushf
push
fiadd
mov
in
or
outs
scas
imul
test
loopne
call
into
shl
pushf
and
jno
dec
int
sub
xor
lds
lds
pop
sbb
sub
push
pslld
push
cmp
out
aad
fiadd
mov
push
or
jl
fcomip
loop
xchg
dec
jge
sub
dec
fsubr
cli
dec
stos
fidiv
loope
push
dec
push
cld
std
xchg
pop
pop
dec
adc
pop
pop
xchg
add
mov
xor
enter
jnp
push
and
mov
xor
loope
push
sub
lock
rcl
std
jmp
rcr
push
ja
scas
adc
arpl
(bad)
push
adc
push
sar
shl
inc
(bad)
push
dec
fldenv
xor
push
dec
push
imul
div
add
(bad)
aad
mov
popa
sbb
adc
sbb
add
inc
clc
int3
xlat
jecxz
movs
test
out
dec
cmp
dec
pop
stc
js
loopne
dec
mov
ror
mov
sar
ins
into
hlt
loop
mov
les
jmp
popa
pop
inc
sub
dec
adc
imul
pushf
int
cli
imul
or
cmp
jl
aas
in
ja
addr16
int3
in
inc
arpl
fcom
ja
add
mov
pop
pop
test
cmps
xor
aaa
out
jg
rcr
test
xchg
mov
rcl
jmp
aad
clc
pop
adc
fsubr
adc
mov
inc
out
inc
sub
outs
loopne
sbb
xor
jbe
jg
mov
inc
int
(bad)
adc
sub
movs
and
adc
sbb
mov
mov
sbb
cmps
cmp
cli
aam
(bad)
push
inc
push
call
call
cmp
xchg
inc
int3
mov
aam
jmp
in
cmps
and
imul
in
mov
xor
jbe
push
fcom
xchg
inc
in
mov
loop
clc
ja
pop
test
cmp
inc
or
xor
push
xchg
sbb
adc
outs
cmp
mov
loop
mov
mov
jo
cmp
push
jle
jbe
cmps
jo
xor
mov
sub
jle
(bad)
imul
sahf
cwde
inc
adc
push
sub
add
not
lods
jne
pop
nop
cmps
inc
mov
and
cmp
int
clc
xchg
adc
xchg
loopne
aad
push
adc
inc
pop
retf
aam
mov
dec
mov
push
xor
lods
daa
pop
push
cmp
and
pop
arpl
adc
fucomi
sahf
or
mov
or
lods
sar
ror
mov
jp
sahf
xchg
shr
jbe
inc
or
retf
push
cmps
pushf
sub
cli
rol
dec
nop
add
adc
push
jle
fidiv
cmps
add
push
aam
pushf
pushf
xor
shl
mov
repnz
loope
jl
mov
pop
jp
int3
lods
hlt
(bad)
sbb
sub
mov
fcmovb
repnz
xor
mov
fidivr
leave
cmp
pop
stos
enter
and
out
call
and
lods
adc
ss
ja
mov
lea
jge
imul
mov
xchg
push
nop
dec
fsubr
mov
(bad)
sub
or
xchg
repnz
stc
mov
icebp
xchg
push
mov
mov
in
inc
cdq
adc
mov
cmovno
pushf
add
fdivr
mov
sbb
movs
xchg
sbb
sub
loope
dec
iret
mov
test
mov
das
push
data16
imul
movs
movs
idiv
lea
dec
call
or
mov
adc
xchg
in
out
dec
dec
outs
adc
add
int3
dec
jae
data16
movs
int3
xchg
leave
xor
inc
ins
sub
scas
mov
out
fs
mov
xchg
mov
in
in
icebp
es
cmps
enter
inc
sbb
and
fs
add
mov
sar
adc
push
lea
addr16
cmps
adc
jl
cmp
sbb
adc
test
dec
mov
jg
or
push
test
adc
xchg
movs
sahf
shl
mov
test
adc
dec
imul
sbb
sbb
mov
or
mov
push
sub
adc
mov
mov
sti
push
int
out
push
test
pusha
icebp
sub
cmp
sbb
pop
push
xchg
pop
cmp
loopne
fild
(bad)
xlat
(bad)
sbb
ja
jnp
pop
nop
jno
and
fst
mov
cmp
adc
jmp
mov
or
lods
das
pop
push
dec
xor
cmp
add
jmp
popf
dec
hlt
dec
cdq
sahf
int
pop
(bad)
das
cmp
cmp
xchg
fisttp
sbb
movs
test
addr16
jecxz
cmps
in
sbb
cmc
les
in
das
jecxz
mov
sub
sbb
outs
in
inc
out
cld
int3
or
mov
(bad)
aas
mov
or
add
xchg
mov
mov
(bad)
addr16
jb
in
pop
out
dec
xor
lock
lods
mov
xchg
mov
out
sar
jmp
sub
scas
xor
mov
ud1
mov
or
mov
pop
adc
xchg
into
mov
mov
inc
adc
or
fsubr
retf
mov
or
sub
test
pop
or
cmps
mov
popa
mov
dec
mov
dec
cmps
dec
and
pop
dec
pop
or
jno
out
jne
int
inc
inc
fadd
xchg
or
jl
sti
out
inc
jo
mov
out
repnz
push
dec
call
sub
popa
fs
inc
push
and
stos
add
in
cdq
pop
and
mov
jnp
mov
jmp
in
inc
scas
shl
adc
mov
pop
das
sbb
xchg
jl
inc
xchg
dec
sub
add
push
arpl
push
pop
bound
repnz
jbe
movs
jno
or
(bad)
es
sar
lahf
cmps
sub
push
mov
std
sub
xchg
leave
or
call
sub
mov
jae
les
xchg
loopne
cmp
mov
fwait
inc
pop
xchg
fwait
mov
mov
icebp
jne
mov
arpl
pop
stc
and
cmc
addr16
sbb
cmp
scas
popf
icebp
and
dec
daa
or
push
jnp
sub
jb
(bad)
xchg
leave
hlt
out
mov
mov
ds
test
ret
rol
jp
or
xor
xor
or
xchg
sub
in
ins
cmp
adc
sbb
sbb
mov
mov
dec
pop
cdq
data16
popf
pop
inc
fcomp
int3
pusha
lods
mov
xor
cwde
(bad)
push
fs
mov
lds
mov
out
pop
adc
jmp
cmp
leave
mov
pop
jnp
sbb
(bad)
out
mov
pop
(bad)
push
in
xor
sar
dec
dec
or
setp
(bad)
xchg
xor
scas
xlat
std
cmc
mov
int
popa
sub
adc
mov
(bad)
sub
aad
(bad)
mov
inc
ds
or
cmp
jo
cmp
adc
ins
xor
pop
into
call
push
xchg
push
xchg
adc
loope
(bad)
daa
shl
push
mov
pop
mov
(bad)
push
ror
pop
xchg
ret
mov
cmp
out
ret
stc
mov
jno
fs
xchg
in
bts
pop
repnz
pop
and
ins
fld
push
cdq
ror
hlt
sbb
stos
shl
and
into
adc
adc
sbb
jmp
pop
inc
repz
mov
inc
pop
sbb
sbb
cld
stos
jno
lahf
and
push
lock
stos
push
sar
nop
cwde
xchg
ret
out
adc
jp
mov
in
imul
loope
daa
retf
or
cmps
and
fild
jne
cmps
mov
adc
xchg
mov
sub
adc
(bad)
ret
mov
xor
cmp
xor
jmp
ret
push
dec
cmps
fmul
mov
and
dec
pop
inc
sub
inc
push
test
movs
inc
push
sbb
ret
call
cwde
(bad)
mov
imul
je
jae
push
pushf
test
je
icebp
inc
add
sbb
in
std
or
jnp
test
js
xchg
dec
addr16
push
shl
outs
fstp
mov
(bad)
les
mov
js
cmp
fadd
sub
outs
es
jne
in
fwait
adc
retf
dec
mov
xor
(bad)
jnp
leave
imul
cmp
(bad)
mov
test
xchg
jp
(bad)
sub
es
mov
pop
ds
and
add
scas
push
ds
aas
xchg
inc
or
fimul
in
cmps
sbb
(bad)
imul
icebp
xor
jne
dec
pop
adc
lock
bound
push
ror
cmp
shl
sub
xchg
jg
pop
and
cmps
adc
inc
fnstcw
jge
fwait
stos
xadd
cs
(bad)
adc
cmp
scas
iret
push
xchg
pop
pusha
pop
imul
daa
sub
lea
sbb
scas
pop
pop
push
lea
pop
aad
and
ins
push
pop
add
push
arpl
fdiv
jo
pop
jle
adc
xor
pop
jo
push
stos
or
sub
pop
mov
lods
bound
popf
cdq
adc
aam
aas
test
outs
fimul
shl
call
or
stos
xchg
mov
mov
aad
xchg
les
loopne
shl
mov
call
(bad)
(bad)
retf
jae
jo
outs
fistp
cdq
sbb
sbb
or
and
push
mov
pop
mov
and
inc
mov
retf
or
add
adc
scas
jno
xchg
(bad)
call
test
not
sub
xor
sub
fild
out
scas
add
push
popf
sub
xor
mov
and
mov
lds
mov
icebp
push
dec
mov
adc
add
das
repz
cmp
nop
cmp
dec
stos
leave
pop
out
jae
jle
enter
addr16
xor
gs
add
fs
call
outs
sbb
call
mov
jl
test
sub
inc
loop
pop
cli
call
lods
lahf
in
mov
inc
mov
mov
shl
ins
push
leave
inc
lock
sub
jp
jo
fsub
jo
inc
dec
jp
icebp
jnp
icebp
mov
popf
test
cs
jo
aam
pushf
arpl
sub
pop
mov
cli
out
mov
icebp
imul
jo
mov
pop
lods
fmul
xchg
xor
add
(bad)
jo
(bad)
jg
xchg
inc
sub
sbb
nop
sub
iret
xchg
dec
inc
and
inc
repz
aad
std
div
jb
add
jmp
loope
icebp
inc
cmp
add
ja
jmp
out
sbb
out
jg
pop
call
mov
fcom
and
cdq
push
(bad)
dec
inc
jle
imul
loop
retf
stc
mov
ds
call
jecxz
popf
int
xor
xchg
inc
imul
jle
xchg
xchg
movs
dec
ret
cld
call
xchg
call
xor
jp
jle
lea
cwde
out
mov
in
loope
sub
in
bound
xchg
pop
inc
popa
jl
fcmovnbe
push
dec
jecxz
push
test
jg
adc
dec
mov
outs
sub
mov
sbb
aam
(bad)
push
pop
and
mov
lds
and
aaa
mov
xchg
mov
sbb
cdq
fwait
js
(bad)
gs
shl
mov
mov
enter
cwde
and
and
clc
(bad)
aad
inc
movs
sub
xor
inc
clc
jne
jmp
and
mov
mov
mov
pop
(bad)
repz
mov
movs
push
mov
mov
pop
sbb
cdq
bound
xor
inc
inc
(bad)
push
clc
mov
lods
mov
aad
mov
movs
cli
test
jge
mov
rcr
cmp
enter
pop
mov
mov
xchg
in
std
fs
lock
jo
or
out
jmp
mov
(bad)
xor
cmp
add
mov
ret
addr16
sbb
cmp
je
pop
clc
mov
rol
in
ret
div
push
shl
lods
bound
adc
adc
test
dec
push
inc
outs
add
adc
addr16
ror
mov
sbb
dec
push
dec
fld
(bad)
xlat
xor
or
repnz
cmp
ret
outs
aam
and
(bad)
mov
pop
or
xor
push
dec
mov
jg
aas
outs
jmp
mov
jmp
pushf
dec
or
or
cmp
add
fisub
mov
int
jle
pushf
cmc
outs
xor
out
add
cmc
movs
shl
int3
ins
add
aaa
loopne
dec
(bad)
loop
push
mov
inc
sub
xchg
sub
jl
shr
sub
shl
retf
pop
inc
je
push
sbb
movs
sub
outs
jmp
lds
jp
sub
push
jno
push
outs
adc
out
mov
xchg
xchg
add
push
jns
fnsave
(bad)
pop
and
out
xor
pusha
pop
xor
imul
add
aaa
repnz
(bad)
movs
sbb
call
or
pusha
jno
fld
cwde
(bad)
and
xor
call
inc
mov
nop
inc
(bad)
cwde
cli
mov
adc
test
or
mul
sub
push
(bad)
daa
(bad)
mov
mov
xor
imul
(bad)
lds
mov
cdq
mov
adc
data16
lods
sbb
push
sar
jecxz
(bad)
adc
pop
lea
ret
sub
mov
xchg
xchg
(bad)
outs
iret
popf
shr
or
pushf
jp
sbb
leave
adc
clc
retf
or
daa
xor
push
mov
mov
mov
sbb
cmps
pop
aas
pop
std
data16
cmps
pop
mov
enter
arpl
aaa
push
shl
lahf
or
add
add
pop
hlt
jb
das
or
jo
jno
shl
jle
push
add
xchg
sbb
dec
pusha
int
fst
into
mov
fadd
imul
or
pop
rol
ret
xchg
sub
add
out
sub
pop
or
xchg
mov
dec
(bad)
sbb
dec
ja
leave
mov
rol
lea
fld
jo
cmp
xchg
(bad)
das
dec
or
(bad)
not
enter
ss
repnz
mov
push
in
xchg
ror
xor
cmps
fwait
lods
xchg
mov
stos
and
loopne
ds
mov
push
fwait
xor
call
jle
mov
jl
xchg
sbb
outs
mov
mov
out
or
xlat
aad
xor
cwde
shl
hlt
jmp
sbb
mov
or
xor
into
int
cmps
fmul
push
fxch
mov
xchg
scas
sbb
cmps
dec
inc
pop
retf
in
add
add
dec
sub
push
dec
gs
dec
jae
inc
sbb
mov
jb
adc
xor
cmp
push
jp
xor
mov
mov
pop
xor
mov
or
sub
inc
jnp
cmp
pop
(bad)
outs
ins
shl
sub
nop
loopne
dec
add
sub
dec
sahf
sbb
add
mov
or
push
mov
enter
sub
inc
pop
mov
cmp
jecxz
mov
adc
imul
jecxz
mov
sub
std
(bad)
movhlps
fild
imul
or
je
jg
lds
mov
fwait
sub
push
cmc
ins
adc
pop
ins
mov
sar
sti
xchg
icebp
jg
push
jbe
sub
mov
ins
push
jecxz
cli
std
or
loopne
shl
loopne
sub
int
cmps
pop
xchg
imul
ds
inc
push
ror
inc
add
(bad)
es
daa
fwait
dec
jae
adc
add
dec
add
jp
mov
push
xlat
mov
aaa
dec
mov
xlat
inc
cmp
pop
add
pop
out
sti
xor
xor
sub
arpl
imul
push
push
sbb
punpckhdq
dec
push
sbb
push
pop
jnp
jne
ficomp
jmp
sub
(bad)
(bad)
out
jmp
mov
out
jns
sbb
add
xlat
add
push
xchg
jp
imul
les
ffree
inc
cmps
mov
aas
sub
or
outs
dec
push
or
out
aam
out
outs
jle
arpl
pop
aad
sbb
push
sti
idiv
add
cwde
retf
cmc
enter
addr16
xchg
and
pop
mov
std
mov
int
mov
sahf
mov
xor
mov
inc
mov
bound
or
mov
dec
stos
fwait
xchg
xchg
pop
cwde
aam
arpl
arpl
jmp
js
pop
push
xor
lahf
xor
lock
rcr
inc
ret
xchg
sbb
inc
push
dec
push
aad
add
or
pop
jo
cdq
xor
sar
sbb
(bad)
sahf
inc
mov
popa
inc
ret
xlat
lock
or
pop
mov
mov
mov
adc
in
mov
mov
test
mov
ss
cmp
outs
lods
push
bound
lods
leave
inc
fs
jb
pop
lock
std
push
jb
test
or
jecxz
fbstp
mov
arpl
sub
lahf
pop
fs
or
xor
adc
stos
xor
inc
lahf
push
into
inc
ret
(bad)
shl
mov
loop
jbe
cmps
and
mov
push
cmp
fnstsw
inc
mov
jmp
xor
leave
test
mov
adc
stos
iret
pop
popa
inc
addr16
shl
arpl
jle
mov
test
dec
sti
push
push
retf
pop
mov
pop
add
mov
sub
mov
fisttp
mov
pop
pop
test
hlt
js
add
ins
sbb
dec
mov
mov
fld
addr16
pop
mov
xor
shr
add
add
or
xchg
pop
movs
or
mov
(bad)
(bad)
push
inc
xchg
out
scas
dec
mov
inc
add
(bad)
and
pop
or
adc
sbb
call
scas
jo
dec
dec
sbb
mov
or
pusha
or
cs
and
cs
fsub
sbb
mov
sub
jle
(bad)
sub
adc
adc
popf
pop
(bad)
fld
test
(bad)
or
retf
sub
dec
fistp
and
pop
into
repnz
cmc
int
test
xchg
push
dec
ja
cmp
imul
pop
rol
fcom
mov
inc
lds
push
popf
icebp
fdiv
xlat
enter
push
xor
das
mov
mov
cmp
dec
and
in
or
jno
fwait
xchg
pop
sbb
in
sub
add
rol
rol
push
jno
sti
or
inc
push
sub
xchg
pop
ins
cmc
je
cli
cmp
jle
repnz
shr
cmp
inc
ja
mov
push
gs
std
jae
in
xchg
fwait
pusha
adc
js
lock
scas
call
add
jns
xor
or
jb
or
sub
in
xor
pusha
dec
out
sub
dec
aad
adc
sub
cmp
int
pop
icebp
push
adc
mov
adc
and
(bad)
call
stos
add
pop
mov
into
adc
dec
outs
mov
jne
jmp
xchg
inc
in
push
lods
push
and
retf
mov
outs
stos
ja
xor
mov
mov
add
out
push
shl
cs
cld
sbb
int
pop
loopne
out
ins
mov
or
inc
pop
xchg
and
hlt
cmc
sbb
retf
leave
pop
push
cmp
dec
inc
push
sar
sub
add
push
mov
add
test
or
jl
adc
movs
add
mov
cmp
jae
ror
iret
xchg
push
mov
jo
ins
sbb
icebp
pusha
pop
shr
push
xchg
pop
nop
and
ror
and
inc
lahf
push
push
jp
dec
mov
imul
movs
dec
xor
test
jmp
pop
dec
enter
xor
(bad)
in
adc
imul
adc
add
inc
mov
xlat
push
sub
test
mov
mov
xchg
pop
dec
or
fnstsw
(bad)
(bad)
bound
gs
call
push
xlat
pop
sar
or
in
or
fld
test
or
data16
jmp
add
in
xchg
fistp
jae
sbb
sub
addr16
lea
push
xchg
imul
jle
mov
scas
imul
pop
mov
jg
fld
sub
test
mov
leave
cwde
daa
xchg
mov
push
cdq
dec
(bad)
ja
ror
icebp
pop
cmp
popa
sbb
jo
push
cmp
daa
neg
lods
loope
sbb
test
inc
into
fidivr
adc
loop
fwait
mov
cli
sbb
sub
retf
mov
xchg
adc
push
lea
adc
cmc
ins
imul
cdq
xchg
cmp
ss
and
icebp
adc
(bad)
push
cmp
mov
loop
rcl
js
adc
sub
mov
(bad)
shl
sub
or
lahf
add
inc
imul
in
addr16
sbb
mov
inc
fcmovbe
call
repz
or
div
or
dec
movs
xchg
in
outs
add
and
(bad)
mov
jg
jno
mov
mov
(bad)
mov
pusha
or
sbb
and
fdivrp
fmul
inc
push
jno
jo
loopne
inc
and
add
sub
cmp
repnz
push
cmc
xchg
cdq
xchg
pop
push
sahf
sbb
scas
inc
inc
jnp
xor
dec
fst
sbb
test
mov
mov
pop
push
cmps
mov
stos
jae
inc
shr
pop
push
(bad)
cmc
add
inc
aas
mov
(bad)
loop
out
sub
mov
inc
jno
jp
sbb
xchg
test
test
push
jmp
in
gs
ror
bnd
cs
pushf
fmul
jbe
mov
cmp
aas
cmp
in
jns
sti
mov
clc
fadd
lds
inc
jb
mov
jmp
sbb
mov
mov
adc
cmps
fst
add
jmp
inc
rol
cdq
jnp
xor
push
cmps
push
mov
movs
clc
std
xchg
cli
jle
jne
aam
ja
lock
repz
mov
jl
retf
push
lods
ror
inc
movntps
es
inc
enter
cld
sub
in
lods
retf
push
and
dec
btr
rol
ficom
mov
mov
pop
sti
stc
add
scas
add
fstp
jl
mov
shl
iret
gs
sbb
cmp
mov
xor
scas
xacquire
push
scas
aas
les
fld
jne
retf
retf
icebp
sbb
jb
xchg
pop
xchg
call
cmp
cdq
js
add
add
xchg
cs
add
imul
scas
sti
jle
jg
push
ins
popa
jbe
mov
and
inc
loope
inc
mov
or
sbb
add
sbb
xor
lds
add
xchg
mov
mov
sbb
mov
lds
xor
mov
shl
pushf
lods
sub
cmp
sub
ins
add
mov
ret
imul
xchg
(bad)
and
cmovl
mov
or
es
push
scas
ret
ret
dec
(bad)
addr16
cmp
mov
push
rol
mov
shr
or
push
adc
out
push
imul
leave
lea
ins
pop
push
jno
add
clc
jo
rcr
jb
movs
rcr
outs
pop
mov
imul
rcl
xchg
movs
pop
fsubr
mov
out
retf
stc
js
pop
inc
movs
xor
outs
rcl
out
mov
mov
push
jae
movs
push
imul
cmps
cdq
inc
(bad)
das
or
pop
fnstenv
jae
sub
jnp
fsub
jbe
mov
xchg
mov
retf
push
adc
mov
retf
enter
lahf
leave
jl
gs
(bad)
lock
lods
and
sub
lods
enter
mov
or
mov
cdq
xchg
mov
test
and
lea
dec
sar
ss
(bad)
jae
jne
ror
(bad)
mov
clc
lock
sub
inc
dec
rcpps
adc
arpl
fldenv
rol
pop
sub
adc
cs
retf
ret
prefetch
mov
js
or
daa
adc
stos
xchg
lea
lock
jbe
push
cdq
xlat
or
js
out
sub
into
jnp
clc
push
cmp
rcl
mov
stos
cmps
dec
in
push
pushf
add
icebp
mov
xchg
or
cmp
jnp
mov
idiv
loop
movs
idiv
xor
adc
jbe
jns
push
jp
pop
ins
mov
inc
xor
and
mov
out
pusha
sbb
gs
in
punpckhbw
jb
retf
loop
test
and
je
xchg
ss
shr
imul
dec
shr
and
xchg
adc
pop
cmp
cdq
loope
pop
pop
mov
sar
sti
mov
adc
aad
ret
cmps
xchg
lahf
aad
xor
sub
retf
push
and
stos
leave
retf
test
inc
enter
or
or
imul
fistp
sub
sbb
sbb
cmps
fsubr
cmp
mov
test
sub
dec
pop
mov
pop
or
xor
jnp
cmps
xchg
mov
and
int3
(bad)
mov
push
mov
mov
(bad)
mov
add
std
test
loop
fwait
push
cdq
mov
les
enter
data16
mov
or
pop
sub
aam
mul
bound
ror
loope
cmp
jo
mov
push
fwait
repz
mov
mov
aaa
sbb
lahf
sub
xchg
push
xchg
xor
dec
sar
mov
ret
outs
push
jo
push
pushf
add
pop
fs
dec
addr16
outs
and
jno
xor
jg
adc
fnstsw
das
gs
push
cmp
pop
mov
fdiv
mov
movs
ret
ficomp
in
outs
sub
pushf
rol
or
cdq
pushf
inc
jmp
(bad)
fcmovbe
mov
add
push
or
jmp
adc
mov
sar
movs
and
jb
sbb
popf
push
sbb
cmp
pop
cs
mov
pop
dec
mov
adc
test
mov
cld
sub
cli
test
loop
(bad)
into
ffreep
xchg
xor
cmc
gs
dec
xlat
and
cmp
push
add
cld
int3
cmp
cli
stos
mov
and
faddp
xor
pcmpeqb
xlat
xor
test
adc
jge
sub
push
(bad)
push
sub
loop
xor
cmp
fidiv
es
add
push
int3
cmp
bound
pop
arpl
inc
aas
xor
jge
jns
mov
dec
das
in
and
mov
fild
mov
push
dec
and
push
movs
lea
cmps
icebp
mov
pop
call
iret
pop
push
mov
into
mov
jb
addr16
nop
cmp
pop
aad
pop
xor
jns
cmp
mov
inc
test
shr
mov
xchg
push
jmp
in
sub
adc
cmp
cld
lahf
(bad)
push
jo
xchg
ds
idiv
add
in
pop
in
daa
mov
in
mov
inc
push
outs
mov
jle
in
cmp
inc
adc
add
mov
sub
jp
rcl
retf
or
pop
adc
lods
xchg
cmp
jle
and
call
mov
bound
mov
mov
mov
pop
lock
add
push
or
jbe
inc
jl
cmp
push
lahf
sbb
jle
inc
retf
rcl
out
movs
adc
ret
or
mov
push
add
or
lock
jg
pushf
mov
dec
stc
daa
cld
jo
pop
sub
inc
mov
test
push
inc
jns
out
retf
icebp
cmps
jmp
in
aas
xor
add
jl
shl
inc
xor
cmp
jno
sub
int
add
push
inc
ret
clc
out
in
div
mov
out
rcl
or
enter
jl
lds
inc
rcr
push
pop
cmc
push
test
cmps
ds
sti
es
pop
adc
adc
stc
xchg
test
leave
ds
and
sbb
(bad)
push
jge
js
dec
push
jno
or
inc
and
scas
inc
add
or
test
and
adc
or
aaa
sti
retf
dec
cmp
inc
ins
push
(bad)
mov
rol
int
enter
addr16
mov
xor
daa
pop
or
mov
xchg
jnp
dec
std
xlat
xchg
icebp
aam
or
xchg
sbb
loope
adc
mov
in
push
nop
xor
jge
cmp
ins
retf
inc
and
cmp
jl
pop
jmp
sbb
add
jae
push
fdivr
imul
enter
mov
jo
dec
call
mov
enter
ror
pop
lahf
add
icebp
jecxz
pop
pusha
fwait
rcr
cmp
ds
mov
fs
cs
fsubrp
xchg
data16
xor
cmp
cmc
mov
xor
cli
push
mov
adc
sbb
out
jp
or
(bad)
test
and
leave
test
and
call
ror
sub
xchg
xor
add
stc
pushf
int3
mov
cwde
pop
mov
out
dec
jge
ret
test
sbb
lods
retf
cmps
retf
sub
mov
sbb
xchg
movs
pop
xchg
add
jmp
out
xchg
aad
ret
daa
fsub
(bad)
pop
sbb
or
mov
push
stos
and
inc
mov
into
xor
jb
ror
pushf
(bad)
rep
jecxz
pop
xor
inc
imul
mov
or
pop
imul
mov
cmp
cs
repnz
jp
jl
pop
jmp
mov
call
push
jle
sbb
or
inc
das
mov
aaa
lods
sub
push
dec
(bad)
(bad)
(bad)
adc
pop
mov
push
test
in
push
mov
or
xor
clc
cdq
mov
add
mov
add
mov
dec
pop
ins
inc
in
push
xchg
cmp
cmps
or
sbb
(bad)
je
mov
mov
in
mov
test
add
inc
cwde
xchg
cmp
cwde
icebp
push
jl
cs
mov
loopne
loope
ret
and
jno
sub
mov
daa
push
or
call
ffree
pop
add
iret
pop
ret
cli
mov
adc
aad
sub
aaa
sbb
mov
push
mov
out
fld
mov
js
mov
xor
mov
enter
into
in
or
inc
cli
aad
xor
and
mov
fwait
mov
pop
xor
pop
in
cmp
sub
jnp
xchg
and
mov
mov
mov
pusha
lds
mov
add
dec
sub
mov
or
inc
in
jae
movs
mov
movs
neg
shl
or
fdiv
push
inc
and
and
sbb
mov
out
out
adc
aam
retf
xor
push
int
frstor
in
iret
lods
xor
jmp
mov
loopne
mov
cmc
ja
pop
int3
cmp
jno
jne
push
aad
push
out
leave
inc
dec
ret
cmc
mov
jmp
add
test
mov
ret
stc
fld
mov
push
cdq
movs
inc
sar
(bad)
in
sbb
inc
pop
jecxz
xor
popa
adc
push
inc
xchg
pushf
jmp
ret
mov
adc
pop
ret
aad
aam
fnsave
mov
nop/reserved
jbe
adc
cld
les
and
enter
mov
aaa
push
aas
pop
mov
or
mov
ror
mov
cmp
pop
loopne
daa
out
fisub
sbb
(bad)
sbb
sub
cwde
sub
xor
sbb
push
jmp
cmp
lds
icebp
sbb
mov
mov
hlt
push
xor
call
and
xor
pop
cmc
fild
fwait
daa
stos
(bad)
cmp
bound
pop
popf
inc
lods
mov
cmc
mov
pop
push
push
xor
adc
xor
xlat
adc
rcr
pop
xor
xchg
fdiv
lea
stos
fisttp
jno
adc
add
dec
jmp
and
fcom
push
jmp
ficom
push
aaa
jno
gs
js
sar
xchg
mov
stos
push
and
xchg
pop
mov
ss
jno
out
or
or
xor
popf
push
or
push
and
shl
leave
shr
or
sub
cmp
mov
mov
js
icebp
dec
lock
cld
cmp
test
cmp
ds
outs
mov
inc
jo
xchg
add
inc
cmc
int3
movs
mov
inc
shl
sbb
dec
mov
cmps
lahf
sbb
aaa
div
fld
ds
cmp
or
jno
add
int3
sub
lahf
and
mov
push
adc
arpl
push
es
out
add
loope
or
add
xor
frstor
sub
mov
xchg
fadd
pop
dec
scas
and
ret
rol
repz
call
pushf
sar
inc
hlt
mov
js
pop
push
cwde
adc
aad
sbb
fcom
ds
add
push
or
pop
mov
imul
loopne
dec
scas
xchg
fmul
rcr
mov
mov
xor
cmps
out
js
sbb
imul
inc
nop
cli
sub
jae
fcom
repz
and
loop
cmp
mov
push
es
push
sub
sahf
cld
(bad)
popf
mov
push
scas
cmps
xchg
adc
nop
pushf
(bad)
arpl
data16
cmp
xchg
call
sbb
add
sub
pop
xor
sub
ins
loop
adc
jae
cmp
mov
adc
out
xchg
aas
outs
fcom
nop
mov
jl
push
fmul
pop
lds
stc
mov
add
and
daa
loope
call
add
sbb
push
mov
clc
xchg
pop
cmp
in
jl
imul
add
push
push
(bad)
mov
ins
ret
pop
loop
pusha
sbb
mov
popa
call
pushf
nop
dec
aas
repz
std
jbe
out
mov
stos
in
aas
inc
loop
xchg
fbstp
jecxz
pusha
jecxz
aaa
adc
mov
jle
cmp
mov
pop
dec
inc
cld
jmp
pop
cld
add
lea
in
jle
sar
(bad)
push
call
sbb
in
stos
cmc
fucom
jp
xchg
xchg
pop
jmp
jmp
ror
mov
cs
int3
or
shl
push
xor
int
stos
(bad)
xor
or
mov
les
fiadd
sub
call
push
add
outs
adc
push
jp
fst
push
xor
sub
adc
push
mov
pop
(bad)
dec
sub
pop
ja
retf
sahf
scas
(bad)
dec
loopne
jb
stos
dec
les
mov
push
sub
shl
pop
shl
int
fimul
pop
sbb
pop
jg
call
sub
ret
(bad)
call
aad
xchg
xchg
cdq
sbb
sahf
stos
inc
jecxz
jmp
xchg
lea
les
dec
adc
call
sahf
scas
test
int
mov
mov
mov
jmp
jb
or
les
mov
je
ss
sbb
or
mov
sbb
push
xchg
mov
push
adc
ror
sub
ins
js
cmp
bndstx
add
sbb
or
ds
neg
test
test
fdiv
jns
xor
xchg
jmp
stos
leave
fmulp
and
sbb
mov
pushf
cmps
daa
addr16
dec
jl
pop
cwde
jbe
adc
sbb
pop
(bad)
xchg
push
jmp
push
xchg
aaa
outs
inc
cmp
addr16
leave
push
in
ins
sub
fnstenv
sbb
jnp
cmp
cmps
(bad)
add
clc
and
add
call
sub
sub
sbb
mov
jns
jnp
mov
rcl
jne
jo
inc
jb
sbb
imul
xor
out
push
add
cmp
imul
and
iret
jne
ret
adc
outs
test
outs
loopne
sub
mov
iret
fs
pop
push
jl
xor
xlat
pop
inc
scas
xchg
sti
shr
push
push
fs
adc
adc
inc
fidivr
pop
mov
jecxz
jge
push
icebp
cmps
in
mov
cwde
movs
test
push
in
sbb
mul
sub
push
(bad)
jmp
push
mov
ds
imul
mov
clc
mov
dec
std
xorps
(bad)
rcr
xor
pop
cmc
daa
clc
fidiv
cdq
xor
inc
mov
idiv
lock
in
test
stos
call
je
test
jbe
cld
into
in
dec
out
jb
sbb
nop
xlat
in
xchg
cmp
pop
or
(bad)
mov
mov
push
dec
jbe
js
call
aad
push
test
js
xlat
test
test
test
jb
gs
nop
(bad)
jge
ins
cmp
out
lock
dec
mov
(bad)
fidivr
pushf
ins
test
lock
dec
dec
in
mov
sbb
jmp
push
jno
or
or
add
mov
popa
scas
dec
test
xchg
fstp
mov
cmp
adc
and
mov
stc
dec
fmul
xlat
inc
fs
repz
cmp
jmp
shl
(bad)
loope
cmp
lock
and
push
jo
jmp
sbb
add
jge
xchg
mov
push
or
jnp
lahf
data16
dec
mov
add
xchg
call
mov
mov
in
js
adc
lea
push
mov
push
xchg
push
pop
inc
and
(bad)
ror
nop
rol
mov
aad
push
dec
push
je
cdq
sbb
xchg
jmp
add
and
sbb
pop
iret
mov
test
pop
xor
std
and
mov
mov
cld
sub
pop
out
mov
mov
nop
(bad)
aad
dec
dec
adc
mov
xlat
out
inc
rcl
adc
and
fwait
das
mov
pop
fs
push
out
imul
jnp
sbb
dec
into
sbb
dec
cmp
push
adc
mov
jae
dec
enter
sbb
(bad)
fcmove
hlt
ds
cmp
push
ins
cs
inc
out
inc
push
xor
and
(bad)
dec
pop
xor
adc
das
add
mov
(bad)
call
mov
pop
sub
and
xchg
dec
add
or
adc
cmps
jbe
retf
sar
pusha
xchg
mov
sti
cdq
dec
adc
jbe
sahf
push
xchg
jbe
xchg
ffree
aas
(bad)
pusha
add
shr
mov
or
or
int3
out
inc
lock
xchg
hlt
data16
cdq
pop
es
mov
add
inc
jmp
sbb
sub
cmc
jns
jae
ja
add
mov
inc
push
adc
inc
mov
stos
or
and
mov
push
shl
adc
push
dec
adc
jl
je
push
or
scas
xchg
xchg
aad
fdivp
add
xchg
fldcw
sbb
je
cdq
sti
inc
push
jo
cmp
sub
inc
dec
repnz
js
cmp
cli
inc
mov
(bad)
mov
lods
and
and
imul
(bad)
stos
xchg
pop
arpl
and
or
lahf
loopne
shl
imul
repnz
shl
into
in
sbb
pop
bound
fcom
or
stos
jno
iret
push
and
inc
push
inc
jnp
pusha
mov
pop
js
fstp
sti
jle
dec
aaa
inc
pop
xchg
pusha
ja
popa
pop
adc
dec
test
mov
addr16
hlt
adc
les
sub
dec
cmp
out
shl
cmp
mov
mov
jbe
or
sbb
lea
push
push
sbb
fidivr
mov
sbb
outs
in
in
sbb
cmp
or
aaa
in
aaa
or
xor
xchg
inc
mov
nop
cs
pop
daa
fistp
call
cli
cmp
mov
shl
cmps
pop
sub
loop
push
mov
in
mov
dec
inc
mul
pop
aaa
jae
test
js
fidivr
lods
lahf
js
jne
movs
rcr
pop
pop
fdivr
(bad)
and
xchg
sbb
add
ins
(bad)
loop
add
(bad)
out
and
retf
ret
adc
jmp
jmp
xchg
adc
push
cmps
pop
cld
mov
aas
xchg
mov
jbe
xor
mov
jmp
mov
rol
mov
std
data16
enter
cmc
sbb
sub
stc
or
cli
jp
inc
and
xor
jbe
or
adc
cdq
arpl
cmc
cmc
loopne
push
push
mov
mov
(bad)
jp
push
arpl
fwait
in
mov
mov
xlat
in
mov
inc
call
xor
push
lods
aam
ins
nop
cli
add
fisubr
fwait
mov
out
retf
ucomiss
iret
adc
push
dec
imul
out
inc
sub
stos
or
xlat
mov
jg
dec
cmp
inc
xchg
pop
out
adc
jp
pop
mov
xor
sbb
jmp
loop
cmp
je
lahf
aad
xchg
cmp
scas
dec
cmps
sub
pop
pop
fwait
sar
cmp
jge
jp
dec
inc
iret
fs
and
aaa
stos
lahf
and
mov
lock
pop
mov
mov
xchg
mov
fldenv
out
or
xchg
out
aam
mov
push
lods
fidivr
test
xor
mov
adc
(bad)
adc
mov
dec
call
inc
fcmovb
pusha
aas
jmp
les
or
push
ret
sub
mov
add
push
lahf
mov
aaa
dec
loopne
adc
lods
fist
ss
sub
test
aas
sahf
in
pop
(bad)
les
out
outs
(bad)
ffreep
mov
add
mov
fcomp
iret
mov
call
es
sbb
mov
push
xor
arpl
cs
dec
pop
mov
mov
fsub
pop
lods
jp
inc
je
cmp
sbb
imul
push
imul
cli
jnp
shl
outs
pop
xor
xor
mov
mov
mov
inc
jo
cld
cmp
bswap
mov
jecxz
repnz
dec
pop
pop
jmp
push
cdq
add
fsubr
rcr
mov
mov
jbe
mov
xor
and
xlat
mov
add
imul
ins
mov
fild
dec
bound
add
into
js
cmc
loopne
icebp
pop
add
test
mov
mov
add
dec
push
mov
mov
jl
ret
cmp
jo
retf
enter
xchg
movs
dec
in
lahf
mov
mov
cmps
pop
jns
jecxz
cmps
add
je
into
cmp
xlat
fbstp
xor
dec
pop
shufps
inc
jo
pop
jmp
lods
mov
inc
clc
inc
pop
jns
aam
shr
push
stos
arpl
imul
mov
into
sar
or
mov
lea
lds
xchg
sbb
retf
inc
sbb
mov
lahf
cs
inc
shr
cmp
lahf
jae
rol
push
fst
inc
xor
jmp
repz
test
sub
sbb
daa
mov
mov
lds
rcr
jle
xchg
out
lock
xchg
adc
icebp
scas
fild
jmp
jbe
(bad)
popa
popf
xor
sub
enter
aad
add
push
lea
movs
inc
adc
and
dec
loope
inc
test
fcomp
adc
(bad)
aas
int
add
dec
aam
push
push
jne
loope
adc
or
pushf
mov
xchg
mov
int3
shr
call
iret
mov
cmp
lahf
sbb
xchg
xchg
inc
push
cs
enter
mov
retf
xchg
dec
jmp
ret
emms
mov
adc
ds
and
cmc
mov
sbb
pop
jno
sahf
ja
out
and
cmps
daa
cmp
ins
out
dec
lock
call
in
pushf
ss
loope
add
xchg
sub
test
sbb
xchg
(bad)
outs
repnz
fnstenv
or
add
push
fsub
mov
out
popa
out
aaa
call
adc
add
loopne
add
sub
xchg
sbb
xor
or
std
inc
pop
mov
jge
cli
sbb
rcl
sti
outs
jb
jg
or
mov
and
in
and
les
(bad)
fisub
pop
add
pop
sbb
mov
xchg
xchg
loop
jae
jb
call
jne
adc
scas
not
inc
sub
std
inc
sub
aas
and
ret
mov
jno
pop
(bad)
cmp
nop
and
adc
pop
adc
or
or
xor
pop
lahf
sbb
mov
sbb
rol
stos
sub
pushf
mov
cdq
std
sbb
mov
jmp
dec
push
jp
or
gs
push
fdivr
jb
mov
jno
add
adc
push
js
mov
push
scas
xchg
and
rcl
pmulhuw
dec
inc
int3
mov
stc
scas
push
popf
movs
popa
fcom
dec
pop
mov
call
inc
cwde
fidiv
aas
mov
out
mov
cli
bswap
sub
lock
pop
(bad)
popf
jns
lahf
dec
add
fwait
icebp
jle
dec
xchg
ja
enter
test
repnz
fldcw
and
call
cdq
ss
inc
aas
jle
outs
shl
or
sub
pop
and
ins
jns
push
jae
and
push
add
rol
cmp
lds
aam
shl
js
mov
pop
imul
or
inc
adc
pop
xchg
sbb
pop
fcmovbe
pop
push
repnz
xor
add
mov
pop
mov
inc
mov
mov
mov
cmps
dec
pushf
aam
movs
or
cmp
retf
cmp
dec
xchg
sub
loop
xchg
sbb
push
mov
xchg
push
add
test
fwait
pop
cs
leave
mov
addr16
jl
mov
or
inc
fld
xor
jb
mov
scas
repnz
loopne
mov
out
gs
test
xchg
xor
sub
ss
sbb
inc
jg
push
out
(bad)
inc
push
pop
cs
mov
iret
adc
cmps
add
bound
push
pop
xchg
jno
mov
xor
jne
sub
pop
sub
fild
fucomp
inc
xlat
cmp
mov
pop
pop
pop
push
std
jecxz
xor
xchg
in
call
retf
cmps
cdq
int3
sub
jge
fwait
sbb
fist
shl
mov
shl
cmc
adc
pop
retf
loope
adc
push
pop
mov
pop
push
xchg
dec
adc
ins
sbb
cs
fchs
fsubr
jae
imul
fdiv
sub
sub
sub
push
xor
adc
adc
cmp
xchg
mov
pop
mov
mov
addr16
jo
mov
call
jp
sbb
sub
adc
and
bound
mov
push
push
jge
sar
ins
in
fisubr
or
loopne
sbb
loope
cmp
xchg
inc
or
daa
mov
sbb
pop
rep
or
imul
loope
outs
nop
loopne
(bad)
xor
loop
jg
hlt
neg
jbe
dec
out
push
mov
push
retf
add
adc
push
push
pop
sbb
and
(bad)
and
movs
cmp
ins
add
jbe
test
aas
les
pop
retf
push
in
push
push
popa
retf
ins
xor
nop
inc
(bad)
in
xchg
sub
(bad)
popf
ins
retf
cs
inc
jmp
icebp
jbe
cmp
and
ror
add
sub
and
stos
jge
add
mov
sub
dec
sbb
outs
or
jl
xor
cmps
icebp
xchg
dec
jp
movs
jmp
jp
arpl
adc
jb
(bad)
in
xor
jmp
add
sbb
inc
inc
xor
aad
retf
std
sbb
bound
out
(bad)
adc
arpl
ret
aas
es
or
cmp
and
xor
push
xor
mov
sub
dec
jbe
lea
add
ds
xchg
test
nop
lea
mov
movs
aad
xchg
aad
repz
xchg
jl
sbb
icebp
fld
das
(bad)
cmps
retf
cmp
push
rcr
mov
jmp
xor
rcl
arpl
loope
sahf
or
lock
inc
and
mov
dec
xor
rcl
imul
iret
les
(bad)
loopne
add
sti
pop
fcomp
aaa
das
xor
jae
push
icebp
lea
add
ins
and
adc
fcmovne
fmulp
rcl
sub
xchg
push
popf
xor
cmp
push
popf
sub
ret
pop
jne
add
mov
lods
inc
xchg
test
imul
dec
cs
xchg
sbb
jae
into
icebp
inc
sahf
iret
mov
fistp
push
jno
inc
and
add
fcomp
pop
movaps
jo
jno
cli
stos
ror
jae
cs
push
sub
fiadd
xor
je
and
dec
mov
je
inc
dec
sub
push
pop
bound
jmp
scas
add
in
xor
mov
cli
jbe
retf
sti
shl
adc
xchg
lods
loopne
xor
jmp
adc
and
cmp
repnz
and
rcr
or
lods
push
ja
xor
out
fist
(bad)
push
cmp
outs
stc
inc
into
push
movs
aaa
xor
and
jb
mov
inc
shl
pushf
jbe
dec
imul
mov
dec
js
lods
sub
push
add
add
jle
pop
xor
dec
or
popa
push
div
pop
mov
mov
dec
mov
retf
test
jl
jmp
mov
mov
aaa
mov
and
xor
popa
xchg
inc
stos
rcl
xchg
aaa
push
xchg
mov
jg
daa
je
(bad)
and
jno
lods
loopne
ja
adc
mov
fmul
je
and
out
lea
bound
cmp
shl
sahf
pop
xchg
or
(bad)
xchg
jle
xor
stc
movd
push
fimul
je
ficom
cmps
js
gs
outs
jle
call
sahf
scas
lock
loope
push
into
xchg
mov
sub
mov
test
leave
popf
mov
or
int
adc
pop
outs
mov
or
pop
cmps
and
(bad)
daa
sbb
(bad)
out
and
cmps
xchg
xlat
sbb
pushf
imul
jb
sbb
sbb
fldcw
ins
test
pop
mov
jp
cmc
clc
mov
and
add
sub
imul
adc
jle
inc
mov
add
stos
sub
les
and
push
jbe
cmp
mov
in
xor
lods
sbb
aaa
pop
frstor
inc
mov
cs
sbb
in
mov
repz
mov
jne
jle
adc
cmp
rol
cmp
jl
loope
scas
arpl
fistp
mov
mov
lods
and
xor
push
xor
jmp
mov
lds
inc
push
mov
push
sub
cmp
mov
into
fsubr
imul
lahf
out
xor
gs
or
xchg
mov
(bad)
sbb
test
es
push
pop
adc
cmps
pusha
in
xchg
cmc
iret
jmp
ficomp
or
(bad)
(bad)
cmp
and
int3
mov
xor
daa
es
mov
xchg
mov
jp
mov
cmp
in
cmps
adc
in
adc
mov
sbb
jmp
ins
hlt
int
cmps
lods
in
cmp
aad
not
arpl
sub
jp
sub
in
sub
xchg
scas
sub
icebp
push
sahf
push
mov
dec
push
sub
sub
inc
pop
cmp
stc
mov
mov
lods
sbb
jns
and
bound
jp
(bad)
leave
fnstsw
push
fwait
addr16
mov
sahf
fdivp
fstp
xor
mov
fwait
cld
mov
(bad)
repnz
pushf
sub
lds
loop
arpl
dec
lods
(bad)
xor
jne
xchg
inc
mov
shr
jecxz
sub
out
stos
inc
scas
pop
mov
popf
fsub
pop
adc
out
mov
inc
popa
inc
jne
adc
mov
addr16
push
xor
movs
xor
push
pusha
enter
or
das
xchg
push
sub
fst
xor
mov
pop
and
and
mov
jmpw
call
mov
dec
cmps
addr16
mov
push
cmc
push
xchg
push
add
addr16
and
cmps
cmc
cmps
ins
xchg
xchg
and
inc
lods
xchg
pusha
and
jmp
xor
icebp
popf
(bad)
cwde
mov
int
sbb
and
test
loope
mov
xchg
add
cld
call
scas
xchg
push
pop
popf
or
cmp
fwait
pusha
jmp
xchg
mov
jl
jnp
fsubr
pop
adc
call
xchg
sbb
pop
scas
fsub
sbb
dec
inc
or
out
inc
call
add
idiv
cdq
mov
(bad)
call
push
xchg
mov
mov
test
add
(bad)
(bad)
daa
jmp
rol
xchg
mov
inc
push
or
adc
into
sbb
mov
adc
in
pop
pop
jg
lods
dec
cmp
fisub
lahf
adc
or
fcomi
addr16
ins
jbe
stos
or
test
xchg
ja
lahf
retf
mov
xchg
fdivr
push
int3
mov
xchg
mov
xchg
shl
out
jge
es
mov
adc
add
test
pushf
and
xchg
aam
aam
into
dec
sahf
sub
xchg
inc
test
mov
imul
and
fwait
mov
xchg
fmulp
cwde
test
call
jp
and
int
sub
pop
push
sbb
in
loop
bound
dec
mov
int
ins
inc
test
xchg
sbb
popa
dec
fimul
pop
in
push
iret
fidivr
hlt
outs
cld
add
mov
xchg
shl
sub
loop
xchg
das
jl
pop
mov
loopne
add
mov
call
ror
inc
mov
inc
outs
or
xchg
dec
mov
rcl
lods
mov
dec
jle
fisub
jmp
fucompp
sbb
add
cmp
cmp
add
push
xchg
and
jp
lds
pop
inc
int
xchg
das
fs
jl
mov
mov
les
int3
fwait
sahf
dec
and
xor
mov
rcl
push
mov
popf
inc
mov
pop
adc
or
fisttp
jg
fsub
lods
jp
push
inc
jo
out
xchg
mov
mov
mov
and
cmps
mov
out
push
leave
fnstsw
test
repz
lods
xlat
add
mov
cld
stc
mov
or
inc
mov
popf
xor
movs
ja
dec
stos
ss
test
xchg
xor
sub
sub
lods
pop
add
xlat
xchg
test
pop
sub
inc
(bad)
inc
xchg
jle
pushf
inc
aam
fsubp
mov
jp
pop
ja
in
iret
and
cmp
push
and
or
es
jle
xchg
mov
jb
retf
aas
cdq
mov
jb
mov
adc
mov
jp
fild
rcl
ins
adc
dec
fidivr
ficomp
mov
shl
jnp
cmp
inc
(bad)
adc
or
cmp
shl
js
popf
inc
je
icebp
push
push
mov
popa
(bad)
pop
add
fimul
mov
cmp
sub
inc
outs
jp
iret
adc
int3
push
pop
sbb
cmc
pop
dec
aam
xchg
jecxz
jl
pop
sbb
shr
mov
mov
fst
and
adc
sbb
or
es
cmp
jmp
ret
inc
test
daa
mov
adc
and
rol
xor
stos
pushf
mov
es
inc
les
je
add
mov
inc
mov
sbb
cmc
add
cmp
pop
xchg
and
fisttp
shl
leave
data16
mov
jo
repnz
cmps
pop
push
inc
jno
pop
ss
scas
mov
dec
shr
rcr
cld
xchg
gs
data16
mov
bound
(bad)
out
dec
int
les
ss
xchg
mov
stos
pop
pop
or
ret
cmps
pop
int
jp
bound
bound
sbb
dec
lock
or
adc
enter
and
inc
in
loope
mov
inc
cmp
bnd
pop
enter
das
es
and
lea
mov
ss
and
adc
and
mov
sub
sub
sti
test
adc
xor
sbb
mov
add
xchg
lock
pop
sbb
inc
push
jne
adc
adc
mov
add
jmp
stc
push
sbb
cmp
inc
and
in
icebp
test
cli
sti
test
inc
loope
dec
arpl
cmp
jo
xchg
inc
repz
aam
push
in
xchg
pop
xor
lea
sub
pop
mov
adc
cs
aad
int
add
inc
or
push
mov
mov
sahf
js
mov
mov
sahf
sbb
sub
push
shl
cmp
rol
sbb
(bad)
ins
fmul
aam
adc
call
mov
stc
cmc
sbb
and
inc
push
dec
pusha
add
cmc
push
retf
push
ins
sbb
fld
xlat
jmp
sub
je
jg
test
xchg
mov
adc
dec
adc
sub
aad
or
daa
lahf
ret
cli
pop
jmp
into
sub
push
inc
or
xchg
add
jmp
je
inc
pop
or
cmc
sbb
pop
cmp
iret
iret
pop
popa
mov
dec
stc
repnz
dec
loop
mov
retf
in
jp
test
test
stos
mov
adc
aas
cld
jg
mov
test
aad
popa
cmp
mov
mov
xor
in
mov
jle
xchg
aas
jo
jo
mov
xchg
pop
fisttp
in
jo
sub
sub
mov
xchg
mov
xchg
xchg
mov
dec
fiadd
sub
lock
div
sbb
mov
cmp
iret
sbb
enter
cmc
stos
test
jecxz
jo
mov
pop
jnp
adc
loop
shl
ss
arpl
xchg
inc
xchg
pop
mov
in
fs
pop
pop
push
push
sub
and
xchg
test
gs
cmp
cwde
lock
push
sbb
inc
nop
enter
xlat
fimul
push
inc
or
pushf
xlat
mov
mov
inc
add
inc
adc
jb
fstp
cdq
xchg
mov
add
pop
out
pop
