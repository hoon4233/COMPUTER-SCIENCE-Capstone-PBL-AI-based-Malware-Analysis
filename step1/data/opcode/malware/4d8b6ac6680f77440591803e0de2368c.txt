inc
(bad)
lods
ds
fwait
js
int
lods
call
push
inc
loop
pusha
retf
pop
scas
and
cmp
icebp
dec
enter
push
cmps
rcl
and
ss
dec
jle
add
dec
lods
inc
pusha
outs
jbe
sar
xor
(bad)
and
dec
shl
mov
dec
lods
leave
inc
and
aam
dec
hlt
add
pop
and
pop
sti
jp
push
inc
and
repz
inc
and
hlt
push
inc
and
cmc
push
inc
and
not
and
not
and
clc
push
inc
and
stc
push
inc
and
cli
push
inc
and
sti
push
inc
and
cld
push
inc
and
std
push
inc
and
(bad)
push
inc
and
call
and
add
and
mov
lea
jbe
inc
and
aad
xchg
cld
pop
sti
and
aas
xchg
call
icebp
fimul
push
ret
fstp
sbb
fisttp
in
ret
fidivr
xor
inc
and
stos
shr
mov
push
sub
scas
mov
or
add
add
(bad)
(bad)
dec
add
add
add
adc
add
outs
add
mov
add
ror
add
add
add
add
add
sbb
add
imul
jbe
and
(bad)
clc
jae
mov
sbb
inc
jnp
push
cmp
xchg
sub
jmp
pop
and
leave
rcl
test
dec
out
lods
cli
and
push
(bad)
(bad)
(bad)
(bad)
stc
jb
call
add
sahf
dec
into
fidiv
cmp
cmps
pop
xchg
ficomp
pop
stos
lahf
lods
jl
push
jecxz
(bad)
call
(bad)
(bad)
(bad)
jmp
sbb
lahf
inc
mov
das
adc
jnp
sbb
push
mov
or
imul
add
jb
(bad)
into
mov
pop
fcos
jl
stc
xchg
mov
call
mov
shl
mov
jb
les
out
jecxz
loopne
jbe
jne
lahf
jne
jmp
or
cmp
push
arpl
push
or
mov
shl
call
shr
inc
and
nop
push
ja
ficomp
ins
add
add
or
pop
in
clc
jmp
test
pop
pop
pop
pop
pop
stc
jb
pushf
xchg
stos
sbb
sub
xchg
ret
dec
mov
(bad)
cmp
leave
xor
mov
sub
jmp
(bad)
or
add
push
pop
jae
shr
dec
not
fcmovu
movs
or
push
jae
push
ins
cld
ret
js
retf
pop
mov
lods
pop
jae
ins
(bad)
imul
(bad)
shr
and
jecxz
in
(bad)
dec
inc
add
loop
js
loope
dec
pop
sbb
push
fstp
push
loop
mov
stos
pop
push
stc
sbb
jmp
(bad)
inc
scas
fistp
push
in
and
loopne
in
push
mov
aas
inc
in
cmp
pop
jg
xor
xlat
jne
jae
xchg
test
clc
add
add
jmp
(bad)
pop
pop
push
jnp
cdq
out
stc
adc
jmp
sub
sbb
adc
stc
jmp
std
movs
xlat
mov
dec
fcom
jb
aad
pushf
out
fs
jmp
xor
mov
stc
fld
xabort
sub
(bad)
jmp
push
(bad)
push
mov
clc
push
push
push
push
push
jae
pop
(bad)
jg
in
sbb
in
sar
outs
pop
shl
xchg
dec
stos
cmc
imul
or
fisttp
jb
call
pop
dec
in
mov
inc
and
jl
fstp
mov
icebp
ret
mov
cwde
dec
movs
jmp
in
retf
shl
movs
mov
js
je
inc
xchg
or
shr
je
dec
sbb
ret
dec
mov
icebp
push
or
add
or
inc
(bad)
lods
dec
pop
js
push
fist
das
je
push
movs
jmp
xor
lds
fstp
and
stos
enter
mov
xor
xor
cmc
fisub
and
pop
and
cwde
inc
lock
inc
mov
cdq
dec
inc
and
es
stc
jl
dec
loop
push
sar
lods
push
movs
jmp
jno
jno
in
cwde
xor
add
add
or
add
add
dec
xor
dec
movs
jg
lods
or
pop
sar
xchg
imul
std
jg
bound
mov
in
(bad)
mov
icebp
mov
mov
lock
scas
and
lock
int3
fldenv
stos
dec
inc
inc
aaa
adc
mov
scas
and
mov
inc
and
mov
xchg
and
jo
popa
icebp
fidivr
sub
jb
inc
or
inc
and
xchg
xor
and
jns
or
dec
inc
stos
ss
push
mov
jle
sub
fisttp
js
lods
sub
push
push
add
and
rol
add
hlt
dec
inc
lods
ss
sahf
shl
cld
mov
add
xor
sbb
pop
ror
repz
inc
pop
ss
push
scas
iret
push
inc
and
stos
inc
icebp
dec
and
(bad)
and
dec
scas
and
stos
dec
cmp
js
es
sbb
pop
leave
retf
repz
inc
lods
dec
shl
mov
fwait
js
gs
xchg
xor
loope
aam
and
dec
shl
mov
and
dec
(bad)
pop
xchg
pop
loopne
add
mov
cmps
pop
dec
inc
and
jno
push
inc
and
dec
pop
xor
mov
push
call
xor
(bad)
repz
inc
lods
test
sub
pop
into
in
ret
and
lock
rcr
je
push
pop
pextrw
jae
inc
shl
pop
loopne
popa
icebp
lahf
inc
aaa
mov
aad
and
dec
xchg
scas
jbe
inc
and
mov
inc
movs
mov
mov
(bad)
(bad)
out
dec
inc
js
cmp
dec
fwait
or
jo
and
scas
gs
inc
scas
jbe
inc
and
mov
mov
icebp
fmul
(bad)
out
dec
inc
mov
test
inc
cmp
inc
icebp
dec
enter
shl
mov
data16
retf
inc
mov
hlt
pop
retf
dec
inc
pop
mov
shl
fnstcw
and
fidivr
sub
jb
inc
or
lds
mov
shl
cmps
xchg
js
ds
ror
xor
mov
inc
icebp
dec
sahf
call
xor
xchg
repnz
inc
and
cs
push
inc
lods
ss
and
fld
sbb
rcr
jp
cmp
movs
push
inc
and
stos
outs
pop
sub
call
xor
scas
gs
inc
or
cwde
inc
and
add
popa
jb
inc
js
xchg
loope
lds
ss
pushf
jno
addr16
test
lods
das
(bad)
(bad)
out
dec
inc
jb
aad
push
lock
xchg
movs
mov
sub
and
shl
inc
cmp
dec
enter
retf
dec
inc
jne
rol
icebp
mov
inc
and
(bad)
xchg
and
jo
popa
icebp
sar
xchg
or
xchg
stc
inc
mov
pop
sub
pop
inc
aaa
stc
mov
adc
dec
hlt
mov
inc
jb
inc
or
aad
pop
lock
xchg
scas
jbe
inc
and
mov
inc
scas
ss
xchg
scas
jbe
inc
and
mov
inc
movs
mov
shl
inc
dec
pop
and
mov
dec
call
xor
je
inc
(bad)
popa
icebp
lahf
inc
aaa
icebp
mov
mov
div
inc
or
mov
inc
repnz
iret
data16
jo
ss
out
mov
mov
nop
inc
or
pop
mov
fsub
addr16
fadd
popa
icebp
cmp
ss
jle
xor
jle
les
dec
cs
(bad)
inc
jp
lods
inc
xchg
add
mov
fst
and
ror
enter
lock
xor
lods
push
jno
inc
and
cdq
and
cld
mov
icebp
aaa
adc
jg
adc
lods
xor
sub
mov
mov
stos
stc
fimul
ins
je
movs
jmp
dec
dec
xchg
cld
dec
mov
and
sahf
jp
mov
cld
cmps
inc
cwde
cmc
aaa
cmp
icebp
dec
sahf
jp
xchg
ins
stos
psubusw
lods
aaa
mov
jg
mov
stos
dec
jo
das
inc
mov
mov
adc
stos
cmp
cdq
ja
les
dec
mov
mov
lods
jmp
dec
mov
and
mov
inc
js
ror
cs
imul
inc
je
jp
jp
jge
push
mov
movs
mov
into
push
or
inc
lock
ins
and
pushf
and
inc
js
ror
xor
xor
je
inc
and
(bad)
pop
push
fwait
js
xchg
jge
add
inc
and
lods
mov
movs
ror
inc
fstp
sub
cmp
jp
inc
lods
aaa
jo
data16
fimul
lods
aaa
add
idiv
push
push
shl
jnp
stos
ss
shl
je
dec
xor
dec
and
dec
push
sub
and
lahf
pop
inc
pop
mov
and
aam
daa
icebp
dec
push
xlat
hlt
ficom
and
popf
inc
cmc
rcr
sub
mov
ss
enter
or
and
stos
aas
push
pop
imul
dec
and
cmp
loop
pop
dec
dec
inc
pop
into
aaa
fsub
shl
cmps
xchg
scas
ss
scas
xor
or
dec
mov
and
inc
xchg
int
shr
dec
enter
mov
xor
inc
and
mov
dec
and
dec
cs
lock
inc
dec
inc
pop
shl
ficom
and
dec
enter
cs
std
fmul
and
fist
xchg
adc
ret
pop
leave
pop
test
cmps
push
enter
inc
outs
in
and
sub
pop
mov
cmp
lods
ds
shl
inc
pop
inc
lock
inc
and
pop
retf
dec
inc
stos
aaa
push
js
sub
into
data16
ret
dec
mov
cmps
xor
xchg
pop
sbb
imul
ficom
inc
and
rol
sbb
cmc
dec
inc
movs
outs
inc
inc
xor
inc
and
ficom
xchg
adc
mov
cmps
ins
pop
rol
stos
inc
dec
mov
stos
ss
xor
sbb
iret
outs
loope
ret
les
jmpw
push
dec
cmps
sub
lods
aas
or
add
mov
adc
pop
mov
mov
fs
shl
sbb
cmp
or
sbb
cmp
ja
mov
sbb
add
mov
fs
jo
cmp
xchg
adc
push
jo
jp
xor
xor
dec
and
fimul
movs
push
pusha
inc
pop
mov
mov
in
mov
sub
mov
lock
and
movs
mov
outs
in
push
mov
sbb
mov
lock
das
daa
lock
inc
lods
ds
enter
movs
outs
dec
inc
xor
dec
and
pop
sti
and
mov
and
popf
inc
cmc
rcr
sub
push
sub
push
or
fisttp
and
fimul
add
sar
aas
add
and
jb
es
xchg
push
inc
and
xlat
or
or
shl
movs
stc
push
inc
and
lahf
inc
cdq
sbb
inc
je
push
stos
aaa
pop
retf
aam
and
stc
pop
enter
enter
or
cmc
dec
inc
and
loop
pop
enter
mov
fs
shr
sar
and
in
push
push
movs
cmp
inc
and
push
dec
movs
push
pusha
inc
and
dec
sbb
cli
xchg
dec
fs
dec
stos
ds
xor
jl
dec
lods
ss
shl
shl
fldenv
inc
movs
pop
pop
dec
loop
pop
dec
stos
cmc
fnop
outs
cmc
dec
mov
jl
dec
loop
pop
enter
push
xchg
xchg
rol
sub
pop
lods
aaa
pop
shr
fimul
test
je
and
xchg
dec
or
cmps
shr
dec
mov
jb
dec
mov
and
dec
sub
movs
mov
into
in
add
and
jo
sub
dec
shl
ficom
add
adc
daa
je
gs
jne
inc
and
dec
sub
shr
icebp
dec
shl
mov
sahf
in
push
push
movs
je
inc
and
push
pop
lods
ds
enter
inc
outs
in
and
sub
mov
fisttp
loope
test
jl
pop
inc
ss
shl
push
shl
jp
xor
cmps
cwde
inc
stos
ds
mov
lods
mov
xchg
sub
aaa
pop
into
xor
fcmove
inc
and
sar
xor
push
scas
sub
dec
scas
xor
jmp
(bad)
movs
rcr
loop
fcom
scas
add
ret
outs
dec
inc
xor
inc
and
pop
sti
xor
popf
push
movs
push
pusha
inc
and
dec
sbb
movs
dec
fs
push
sub
and
(bad)
stc
ficom
loope
test
adc
dec
and
inc
shr
les
dec
loop
sahf
dec
dec
ss
shl
ficom
or
shl
inc
jle
inc
and
dec
inc
lods
inc
inc
dec
repnz
push
test
push
inc
and
xor
enter
xbegin
aaa
pop
shl
dec
xor
adc
ja
fmul
xor
adc
iret
outs
stc
cmp
and
dec
popf
scas
sub
adc
mov
and
dec
inc
jb
popf
sbb
popf
xor
jae
sbb
std
shl
movs
shr
and
dec
inc
bound
dec
inc
jb
cmp
cwde
std
fmul
and
enter
ret
pop
retf
dec
inc
js
lds
xchg
loope
mov
and
ror
ss
push
movs
lods
push
inc
and
dec
call
icebp
fimul
stos
aaa
jo
data16
fmul
stos
cmp
sbb
pushf
stos
adc
mov
jp
jns
aad
inc
and
movs
jmp
push
inc
and
and
mov
and
fimul
in
fisttp
sub
jp
sahf
jns
ss
shl
fst
es
mov
fimul
movs
outs
push
push
cmps
dec
push
inc
and
or
dec
inc
and
call
icebp
adc
and
jae
inc
stos
aaa
jo
data16
rol
sub
dec
inc
and
nop
inc
lods
ss
into
addr16
mov
ss
iret
push
clc
fsub
push
mov
jl
cmp
mov
ss
into
addr16
mov
ss
iret
push
ss
into
addr16
mov
pop
push
inc
lods
mov
mov
inc
repnz
dec
lods
ss
iret
addr16
dec
or
cli
dec
inc
and
nop
inc
or
dec
mov
and
enter
lahf
jp
pushf
inc
cwde
std
dec
mov
lods
ss
or
cli
dec
inc
and
nop
inc
stos
aaa
jo
data16
mov
shl
(bad)
dec
fldenv
xchg
dec
lods
ss
iret
addr16
dec
enter
inc
and
dec
enter
mov
and
dec
shl
dec
mov
lods
ss
into
addr16
xchg
dec
lods
mov
dec
stos
adc
sub
stos
aaa
test
loopne
dec
inc
lods
ss
scas
sbb
ss
into
addr16
xchg
dec
lods
mov
dec
stos
adc
sub
stos
aaa
test
mov
not
and
dec
mov
stos
aaa
test
icebp
ficom
pop
aas
or
jmp
pop
into
outs
adc
xchg
sub
ds
iret
jo
ficom
dec
add
and
shr
fst
call
icebp
fimul
addr16
mov
ss
iret
push
clc
fsub
pop
shl
(bad)
data16
mov
shl
fmul
stos
cmp
sbb
into
inc
repnz
dec
lods
ss
iret
addr16
arpl
je
push
or
in
push
and
test
mov
test
mov
ins
test
jecxz
test
stos
outs
test
mov
and
jno
and
and
mov
popf
adc
cmps
sub
and
inc
cwde
sbb
inc
lock
imul
adc
dec
pushf
inc
je
push
mov
mov
lods
ss
inc
xchg
sbb
inc
je
push
cmps
mov
pusha
stos
ds
enter
lea
jnp
push
test
add
lea
cmp
in
(bad)
movs
(bad)
ja
lds
jl
dec
lods
neg
mov
dec
test
jmpw
inc
jl
dec
stos
ss
shr
(bad)
pop
rol
dec
mov
xor
jl
jno
mov
mov
cli
pop
int3
cmp
dec
inc
and
push
and
dec
inc
xor
inc
and
rol
sbb
pop
(bad)
test
dec
inc
lods
ss
fwait
stos
cmp
data16
fmul
aaa
push
shl
fisttp
daa
repnz
dec
stos
dec
test
pop
sti
add
xor
add
inc
stos
ss
shl
jp
inc
lods
aaa
push
sar
(bad)
movs
mov
into
data16
fimul
cmp
jo
cmp
dec
lods
cmp
je
push
and
cmp
cmp
cmp
je
dec
stos
cld
cmp
xlat
xor
into
fs
fimul
call
icebp
fimul
xchg
sbb
ret
pop
leave
jl
dec
inc
lods
ss
shr
shr
sbb
push
inc
hlt
rcr
sub
ss
dec
or
fisttp
loope
test
jl
dec
inc
ss
shl
add
mov
add
xchg
sbb
sbb
jbe
iret
outs
fld
pop
lods
xor
test
lods
ss
das
out
out
dec
inc
lods
cmp
add
pop
movs
rcr
ins
stc
fiadd
call
icebp
cmp
sbb
push
inc
and
adc
jne
dec
and
push
dec
sub
dec
inc
or
fisttp
xchg
sbb
ret
pop
leave
aam
dec
inc
lods
ss
shr
shr
sbb
push
inc
hlt
rcr
sub
ss
dec
or
fisttp
loope
test
jl
dec
inc
ss
or
hlt
dec
inc
and
mov
shl
sbb
push
stos
xor
shl
mov
jl
push
pop
ss
mov
and
aam
and
dec
shl
fist
and
popf
cmp
add
xchg
push
and
dec
leave
data16
push
xor
jl
retf
nop
inc
lods
cmp
push
loop
xchg
xor
cmps
cwde
inc
xor
pop
shl
and
pop
mov
mov
stos
cmp
shl
fmul
and
dec
cs
out
dec
inc
sbb
push
inc
and
push
lods
cmp
mov
sub
fisttp
xchg
sbb
ret
pop
leave
in
repnz
inc
lods
ss
shr
shr
sbb
push
inc
hlt
rcr
sub
ss
dec
or
fisttp
loope
test
jl
dec
inc
ss
or
test
les
shl
sbb
shr
sbb
shl
or
dec
sbb
ins
dec
xor
dec
jecxz
xchg
xor
mov
retf
dec
and
xor
inc
and
aam
xor
inc
and
fimul
loope
arpl
mov
xchg
add
ret
dec
dec
mov
xor
jl
xor
xchg
dec
dec
mov
ja
cmp
js
(bad)
movs
mov
xor
xchg
sub
push
push
shr
jnp
lods
inc
jl
in
push
stos
ds
mov
lods
cmp
repnz
mov
or
fimul
and
mov
leave
inc
repnz
inc
lods
ds
xchg
push
iret
sub
xchg
ss
lods
ds
in
xchg
dec
push
shl
fst
xor
inc
and
shr
fidivr
add
and
fimul
loope
arpl
mov
xchg
add
ret
dec
dec
mov
xor
jl
xor
xchg
dec
dec
mov
ja
cmp
das
icebp
dec
sar
(bad)
movs
mov
xor
xchg
sub
push
push
shr
jnp
lods
inc
jl
in
push
stos
ds
mov
lods
cmp
repnz
mov
or
fimul
and
mov
scas
stos
cmp
enter
int
xor
mov
data16
fmul
cmp
cmc
dec
xor
push
dec
and
dec
or
or
mov
adc
mov
jp
popa
lods
ss
iret
addr16
fimul
das
jp
inc
outs
stc
fcomp
icebp
push
dec
sub
dec
inc
call
xor
jmp
xchg
push
stos
cmp
data16
fmul
aaa
push
shl
dec
mov
das
jp
inc
outs
stc
fcomp
icebp
rol
sub
lds
pop
pop
dec
and
dec
inc
outs
in
dec
mov
ja
cmp
cs
dec
sar
ror
sub
xchg
sub
jl
dec
stos
inc
ins
shr
fst
lods
retf
stos
call
sub
jns
aas
pop
dec
sub
dec
inc
lods
ss
scas
and
lods
ss
into
push
jp
dec
lods
ss
shr
sbb
into
daa
repnz
dec
stos
dec
test
inc
jl
push
mov
(bad)
cmp
jmp
xchg
inc
lods
mov
push
xchg
sub
jns
dec
cmp
icebp
dec
enter
mov
inc
xor
inc
xor
inc
xor
inc
xor
inc
xor
inc
xor
inc
xor
dec
xor
dec
xor
dec
xor
xchg
adc
pop
inc
xchg
sbb
inc
dec
test
leave
or
data16
pushf
lods
outs
push
jns
push
jo
js
(bad)
stos
ds
into
in
fisttp
sbb
mov
fimul
loope
mov
jl
retf
nop
inc
stos
ss
data16
fimul
loope
test
jp
sub
cmp
and
dec
shr
add
inc
hlt
rcr
and
dec
leave
jecxz
cmp
lods
ss
outs
add
scas
cmc
adc
stc
fcom
xlat
cmp
movs
pop
push
inc
and
cmp
cmp
bnd
push
pop
mov
mov
xor
inc
and
ficom
loope
test
adc
dec
imul
push
dec
stos
ds
retf
adc
add
fst
adc
push
lea
ds
sbb
add
mov
jmpw
sbb
stc
pop
sti
and
xor
lock
cmp
pop
jp
dec
lods
ss
outs
add
ins
push
scas
cmc
adc
cmp
(bad)
stc
pop
sti
imul
pusha
mov
xor
inc
and
ficom
loope
test
adc
dec
and
push
push
xlat
or
pop
sti
imul
popf
push
dec
ret
movs
aam
xor
push
xchg
sbb
mov
pop
inc
addr16
xor
sub
icebp
fcmovb
cmp
lea
ss
shr
fst
(bad)
stc
ficom
outs
std
shl
ins
shl
sbb
push
stos
or
pop
stos
dec
push
xchg
imul
or
sub
sbb
inc
iret
outs
std
lds
ds
sar
fimul
ss
test
ds
int
inc
shr
fist
cmp
nop
inc
outs
in
cmp
or
pop
sti
imul
and
outs
or
popf
xor
adc
push
inc
and
enter
mov
fiadd
xchg
and
in
pop
mov
cmp
test
mov
dec
pop
mov
inc
lods
mov
lods
dec
call
lock
xor
sahf
dec
lods
mov
xchg
sbb
mov
inc
lods
mov
cmp
jl
dec
lods
mov
xchg
sbb
mov
inc
lods
mov
dec
inc
and
outs
shr
fiadd
dec
ds
or
popa
icebp
adc
and
jl
or
and
fisttp
lods
retf
jecxz
push
jo
jp
popa
lods
inc
dec
dec
jmp
sahf
dec
lods
mov
fimul
stos
cmp
jl
adc
gs
adc
pop
mov
mov
into
jno
(bad)
cmp
clc
fdiv
xor
add
dec
leave
in
add
mov
rcl
gs
or
rol
inc
icebp
ret
push
loope
pop
fwait
jno
jmp
and
test
inc
cwde
sbb
inc
je
popa
and
js
dec
adc
lods
xor
cmps
js
sub
push
movs
ret
push
inc
and
jg
ins
rol
and
dec
enter
jge
jbe
inc
and
fidivr
xchg
clc
mov
inc
and
into
gs
outs
push
gs
nop
inc
stos
outs
js
lahf
adc
je
pop
xor
cmp
mov
and
enter
or
aaa
ins
mov
xchg
jl
imul
jp
push
sahf
stc
fimul
jns
sar
sub
enter
nop
lods
aaa
ins
sbb
aaa
ins
shl
inc
push
cmp
push
push
push
popa
icebp
lahf
fwait
or
cmp
popa
movs
mov
into
bound
enter
mov
cmp
lock
lahf
lods
mov
stc
inc
and
test
scas
pop
fdiv
mov
inc
std
dec
mov
and
push
or
dec
inc
and
in
(bad)
jne
fstp
adc
leave
and
dec
inc
pop
aaa
ins
push
movs
out
inc
and
push
push
movs
fist
and
and
dec
pop
mov
mov
scas
shl
fisttp
rcr
repz
inc
and
push
shr
aam
xor
inc
and
cwde
inc
push
jl
sar
pop
sti
sub
dec
lods
aaa
ins
shr
shl
xor
push
lds
stc
ret
pop
stos
sub
mov
leave
rol
call
icebp
dec
xor
jl
dec
loop
push
enter
lea
addr16
into
pop
mov
nop
inc
or
pop
inc
and
dec
inc
lods
aaa
push
retf
aam
and
dec
shr
xchg
inc
push
jl
into
outs
stc
ficom
xlat
or
shl
adc
sub
adc
xchg
(bad)
push
lods
dec
pop
movs
stos
sub
mov
jae
inc
call
icebp
dec
cs
lock
inc
sbb
inc
and
call
icebp
cmp
lock
cdq
ja
rcr
cmp
and
in
rol
popaw
shl
fnstcw
aaa
ins
enter
cs
int3
lds
dec
pop
enter
retf
dec
inc
lods
aaa
ins
sar
fmul
xchg
add
dec
shl
ror
cs
push
and
or
std
dec
inc
and
adc
pop
inc
sub
dec
inc
lods
aaa
push
retf
aam
and
dec
lea
aaa
pop
shr
(bad)
jle
pop
sti
and
pop
shl
dec
dec
call
icebp
fimul
movs
jns
inc
and
and
pop
into
addr16
pop
sti
sub
lods
dec
pop
push
add
push
lea
jl
popa
and
push
inc
sub
dec
inc
lods
aaa
push
retf
scas
shr
cmp
sub
dec
xor
(bad)
and
pop
shl
dec
dec
call
icebp
fimul
push
jl
lea
aaa
pop
into
addr16
pop
sti
sub
lods
dec
pop
inc
imul
push
shr
mov
and
dec
into
pop
mov
nop
inc
or
adc
hlt
icebp
dec
inc
lods
aaa
ins
sar
push
inc
and
dec
inc
lods
aaa
push
retf
mov
aaa
pop
shr
(bad)
jle
pop
sti
and
pop
shl
dec
dec
call
icebp
fimul
fnstsw
and
pop
into
addr16
pop
sti
sub
lods
dec
pop
push
add
push
lea
jl
popa
and
push
inc
and
aaa
push
retf
loop
das
cmp
sub
dec
xor
(bad)
and
pop
shl
dec
dec
call
icebp
fimul
movs
push
dec
inc
and
and
pop
into
addr16
pop
sti
sub
mov
push
lea
jl
popa
and
fimul
call
icebp
cmp
aaa
ins
into
pop
jl
popa
call
xor
xor
scas
mov
addr16
dec
inc
mov
cmp
mov
cmp
dec
push
nop
inc
lods
push
nop
inc
push
and
inc
movs
and
inc
add
nop
inc
pop
push
nop
inc
jl
nop
inc
stos
pop
nop
inc
fcomp
nop
inc
add
nop
inc
and
nop
inc
sub
nop
inc
jbe
cmp
movs
push
dec
inc
ja
lds
cmc
mov
inc
js
ror
cs
pop
cmps
mov
dec
mov
test
jns
mov
inc
xchg
add
lds
icebp
mov
pop
and
sub
lods
leave
ror
dec
je
inc
xchg
cli
push
mov
adc
addr16
dec
lods
ss
enter
dec
mov
pop
mov
icebp
jecxz
and
cmp
(bad)
ins
and
sahf
lods
mov
mov
lods
fst
xor
icebp
dec
inc
lods
ds
cwde
ja
fcmovnb
sub
jge
call
call
call
clc
into
jbe
fstp
stos
inc
or
jbe
fstp
stos
inc
sbb
sbb
loop
dec
mov
jge
mov
xchg
add
mov
adc
push
push
mov
mov
sahf
adc
aad
sub
adc
pop
xchg
(bad)
cmp
fst
outs
adc
sahf
pop
pop
lds
je
dec
pop
mov
cmp
jo
data16
dec
stos
ss
xchg
adc
sub
fnstcw
fnstsw
xor
inc
and
nop
enter
sub
ret
loope
sub
jl
jp
jle
jp
sbb
iret
jle
pop
int
repnz
inc
and
(bad)
jno
dec
inc
stos
sub
js
hlt
fwait
xor
fadd
xchg
loopne
mov
and
adc
mov
pop
lods
jge
xchg
and
dec
shl
(bad)
cmps
cmp
mov
bound
js
cmp
shl
lock
and
push
lods
ss
jbe
(bad)
sbb
mov
and
dec
iret
mov
dec
inc
and
sub
out
push
inc
and
scas
cmp
gs
into
outs
(bad)
add
lods
icebp
fimul
data16
out
dec
inc
lods
ss
in
xchg
inc
xor
inc
and
ficom
and
ss
data16
pop
mov
mov
addr16
into
outs
stc
ficom
mov
jp
jp
xor
lods
data16
jmp
jnp
or
stc
ret
sub
dec
xchg
or
fwait
and
ror
pop
or
js
inc
and
mov
test
iret
jbe
fdivr
jb
out
icebp
dec
push
test
push
inc
and
scas
cmc
adc
jbe
(bad)
xor
dec
inc
stos
repz
jmpw
xchg
and
int
stos
movs
aad
and
dec
shl
fcom
retfw
lods
mov
lods
cmp
leave
jnp
jecxz
push
jo
jp
push
stos
ins
adc
stc
fimul
stos
stc
fimul
xor
adc
ss
shr
jns
stos
ss
sbb
test
mov
dec
out
sub
or
ss
mov
and
fidivr
ret
cmps
test
sbb
push
lods
ds
push
sub
xchg
test
add
xchg
xor
lods
ss
mov
sbb
movs
hlt
xlat
fist
cmc
(bad)
shr
fst
jl
sbb
lods
(bad)
adc
and
mov
cmp
jl
sbb
popf
cmp
mov
or
in
leave
cmps
cmp
push
shr
dec
and
adc
cmp
les
ds
leave
or
jp
inc
fdiv
shl
dec
xchg
or
sub
inc
and
xchg
inc
movs
xor
ss
inc
lds
add
push
pop
lock
jg
rcr
in
dec
inc
movs
outs
cmp
jne
inc
and
mov
inc
and
mov
ror
icebp
movs
rcl
adc
and
(bad)
ins
and
enter
mov
adc
or
push
inc
and
scas
ss
xchg
lods
dec
pop
inc
xchg
adc
dec
inc
xchg
add
aam
popa
icebp
mov
xchg
xor
je
lds
or
je
outs
cmps
mov
mov
pop
icebp
ret
les
data16
in
mov
mov
and
inc
xchg
adc
lods
and
inc
mov
dec
mov
sbb
sbb
add
cmp
xchg
cmc
mov
push
add
cmp
push
icebp
cmp
jmp
xchg
pop
aad
nop
inc
or
sar
push
icebp
cmp
jmp
xchg
pop
lea
sar
push
icebp
mov
inc
xchg
sbb
dec
lock
imul
scas
push
in
xchg
imul
jl
imul
xor
sub
sub
xor
gs
loop
and
or
cmp
je
fstp
sub
dec
test
push
ss
iret
outs
std
lds
dec
jl
push
leave
mov
aad
xchg
sti
rol
xor
lds
push
pusha
inc
and
jo
jp
push
lods
aaa
mov
loope
arpl
and
fist
movs
mov
into
push
dec
xlat
repz
inc
and
shl
push
mov
pop
ss
mov
pop
aaa
test
outs
std
les
aas
test
jg
fisttp
addr16
sar
jbe
mov
sbb
push
enter
inc
add
shl
aad
xchg
add
xchg
and
inc
bnd
push
stos
aaa
mov
in
fmul
in
cmp
in
ror
repnz
push
lods
ss
iret
push
jp
jne
ss
movs
jg
sbb
ja
cmp
or
inc
fstp
lods
ss
into
mov
sub
and
sbb
leave
mov
scas
popf
jae
inc
jno
jo
and
ror
cs
mov
mov
lahf
sub
lods
jmp
test
cmp
or
and
aad
jnp
push
scas
sbb
cmp
mov
sub
daa
jle
or
and
test
inc
xchg
adc
pop
sub
jp
adc
adc
dec
inc
jp
sbb
out
mov
fcmovnb
inc
stc
cmp
and
dec
shl
jl
imul
add
inc
bound
mov
and
dec
mov
and
dec
les
shl
loop
clc
inc
and
sar
cmps
mov
push
retf
inc
and
out
and
dec
inc
xchg
repz
scas
push
xor
jle
inc
or
fcom
call
pop
and
or
push
bound
mov
sbb
les
or
mov
dec
les
dec
jns
jl
enter
inc
and
sar
push
jne
mov
and
push
mov
and
dec
mov
cmp
sub
lods
stos
or
mov
adc
or
adc
shl
pop
movs
in
les
fstp
or
mov
pushf
imul
jnp
xchg
mov
inc
and
les
daa
icebp
dec
inc
and
and
dec
les
shl
loop
clc
inc
and
sar
cmps
mov
ja
aad
imul
gs
and
dec
inc
xchg
repz
scas
xor
ins
adc
fld
and
xor
ins
adc
fld
and
repnz
mov
es
dec
sahf
jp
sbb
out
mov
(bad)
jns
fstp
lods
outs
pop
shl
jl
dec
out
dec
mov
mov
call
dec
mov
movs
rcl
sbb
shr
dec
push
(bad)
add
ficom
je
dec
and
dec
push
icebp
mov
sbb
nop
inc
mov
je
popf
sub
test
sub
mov
daa
jns
iret
repnz
mov
jnp
inc
loop
push
int
repz
and
jmp
inc
xchg
jg
icebp
fmul
daa
jns
iret
repnz
and
xchg
inc
movs
mov
enter
sub
cmp
lock
or
nop
inc
mov
and
daa
jns
mov
ficom
movs
jmp
inc
xchg
jg
icebp
fmul
and
mov
and
mov
and
xchg
rol
jl
ror
jp
aam
jl
ror
jl
rcl
jp
aam
jl
rcl
jl
rcr
jp
aam
jl
rcr
jle
shl
icebp
dec
inc
and
push
cmp
pop
xor
and
mov
and
mov
and
jg
sbb
mov
push
int
jl
dec
jg
sbb
mov
push
int
jnp
inc
test
stc
lods
movs
jmp
int
jnp
inc
test
repz
mov
jl
dec
jg
sbb
mov
les
jle
jle
call
dec
mov
movs
rcl
sbb
rcl
cmc
inc
and
push
shl
call
add
jl
add
jmp
dec
mov
mov
mov
mov
test
ror
dec
inc
ret
and
adc
and
sar
sub
inc
adc
xchg
and
mov
jnp
dec
inc
ret
and
xchg
inc
loop
push
int
repz
and
aas
dec
movs
jmp
sbb
sub
inc
mov
xchg
dec
inc
ret
and
xchg
inc
test
repnz
and
xchg
inc
movs
fist
adc
sar
sub
rcr
adc
xchg
and
mov
and
mov
and
mov
and
test
push
xchg
sar
jl
sar
jp
aam
jl
shl
jl
shl
jp
aam
jl
shr
jl
shr
jp
aam
jl
shl
jle
shl
icebp
dec
inc
and
push
cmp
pop
xor
and
mov
and
xchg
dec
jg
sbb
mov
xchg
dec
test
stc
lods
movs
jmp
dec
test
repz
mov
jl
dec
jg
sbb
mov
xchg
dec
test
repz
mov
jnp
inc
test
stc
lods
movs
jmp
push
js
(bad)
mov
add
cs
mov
movs
mov
enter
inc
movs
out
xor
mov
push
mov
daa
icebp
dec
rcr
dec
aad
xchg
sbb
scas
sub
test
aaa
and
dec
retf
and
enter
test
icebp
ret
pop
ja
mov
and
aam
jnp
fs
inc
mov
inc
and
ror
cs
movs
jg
adc
fmul
lods
gs
cmps
out
imul
test
loope
les
fnstcw
dec
and
test
jg
mov
in
icebp
dec
pop
pop
popa
nop
inc
jg
movs
ror
arpl
test
push
icebp
inc
and
dec
xchg
test
inc
and
dec
enter
fwait
js
mov
and
cwde
mov
icebp
adc
vcvtpd2ps
mov
dec
inc
stos
(bad)
mov
popa
icebp
adc
sub
sbb
cs
jmp
push
jmp
les
and
add
or
fnstcw
and
dec
pop
gs
nop
inc
les
test
fldenv
and
repnz
dec
or
pop
inc
and
outs
dec
and
fdivr
jno
test
std
dec
inc
stos
ss
cmp
push
mov
cmc
fcom
sub
inc
xchg
lea
mov
icebp
lahf
sub
stos
ss
or
pop
inc
and
lods
stc
fimul
ds
push
and
test
in
mov
and
sub
movs
cs
fbld
push
mov
and
dec
mov
xor
icebp
dec
inc
and
and
popa
icebp
test
in
lea
xchg
div
push
xchg
adc
push
inc
jp
dec
inc
and
dec
pop
ins
popa
nop
inc
in
test
xchg
adc
dec
inc
jp
adc
popf
adc
dec
mov
and
dec
retf
lds
xor
dec
mov
and
dec
retf
lds
push
mov
pushf
lods
gs
pop
es
popa
icebp
(bad)
push
ja
ret
icebp
aam
jnp
ins
retf
push
scas
and
or
je
ss
push
inc
push
inc
out
test
lock
xor
in
sbb
out
mov
sbb
out
jl
imul
and
shl
pop
pushf
lods
jmp
sti
je
dec
xchg
stc
jp
stos
clc
xchg
mov
rcr
loop
sbb
add
push
push
lods
mov
cmp
test
test
jmp
mov
scas
or
xchg
pushf
fbld
aam
xchg
add
inc
cmc
dec
push
cmps
mov
mov
in
adc
push
mov
inc
pop
xor
pop
inc
and
in
jb
gs
xchg
xor
loope
mov
pop
or
push
inc
and
mov
shl
inc
aaa
inc
rol
repnz
or
pop
push
inc
push
inc
out
test
lock
xor
loope
pushf
in
icebp
les
je
mov
xor
movs
push
cwde
in
icebp
dec
scas
and
dec
pop
nop
nop
inc
xor
dec
inc
jns
icebp
(bad)
shl
shr
xor
sub
add
jp
sub
add
sub
or
add
frstor
std
ficom
bound
(bad)
dec
bound
in
rol
push
dec
adc
jl
rcr
repz
inc
ins
jp
inc
scas
jge
mov
icebp
dec
into
jle
fst
pop
mov
into
outs
jmp
push
scas
pusha
cmp
adc
hlt
fadd
sub
sub
pop
sub
shr
sar
inc
fs
add
icebp
dec
(bad)
fst
inc
ins
add
lods
ds
pop
fdiv
ror
inc
and
iret
sbb
jl
push
scas
cmp
jno
shl
pop
mov
inc
push
shr
pop
rcr
cmc
ficom
xor
push
mov
stos
dec
inc
rcr
dec
dec
jo
dec
test
jl
inc
movs
rcl
outs
fstp
shl
inc
dec
inc
dec
shr
adc
es
(bad)
into
jbe
cdq
lahf
pop
mov
push
into
jbe
fimul
and
jp
cmp
lock
xchg
pop
jmp
inc
lods
jmp
adc
pop
fist
pop
inc
pop
mov
movs
jmp
and
xor
ret
jno
shl
fist
inc
je
es
dec
inc
mov
std
fcom
inc
test
or
icebp
dec
inc
sub
shr
jo
and
inc
pop
shr
fmul
lods
inc
push
shr
fmul
movs
outs
cmp
xchg
cli
mov
sub
icebp
dec
shr
fst
jl
dec
stos
cmp
loope
push
sbb
dec
stos
inc
push
shr
fcom
pop
cmp
test
dec
and
ds
inc
jecxz
pushf
dec
and
add
das
lods
push
inc
and
adc
(bad)
xchg
sub
push
lds
add
mov
add
xchg
add
xor
cmc
fcom
jno
xor
and
dec
dec
pop
jl
cmp
jp
pop
sbb
jmp
inc
and
aam
xor
inc
and
ficom
nop
nop
inc
lods
cs
popa
icebp
adc
xor
xchg
push
fdiv
iret
inc
and
test
icebp
mov
push
pop
nop
nop
inc
ret
test
stos
push
inc
and
xor
inc
pop
out
nop
nop
inc
lods
dec
test
je
int
icebp
dec
inc
and
fiadd
ret
test
jl
push
mov
cli
shl
shl
enter
mov
and
inc
stc
xchg
xchg
in
icebp
dec
mov
pop
push
inc
push
inc
out
test
lock
xor
imul
fmul
mov
dec
lods
mov
push
jo
jle
push
or
inc
mov
inc
lods
ss
enter
push
imul
lds
fldenv
cmp
pop
test
xor
and
xor
test
jg
sbb
ja
cmp
or
xor
ss
cmps
shl
jae
mov
jp
inc
scas
cmp
add
fst
push
dec
data16
call
adc
les
leave
outs
jmp
cmp
mov
leave
jmp
(bad)
mov
ret
xor
test
jl
add
or
nop
and
jmp
lds
mov
cmp
mov
jle
lds
stos
dec
pop
mov
lods
sub
xchg
sbb
push
lock
enter
sub
leave
lds
xor
and
enter
mov
jle
lds
retf
mov
cs
dec
and
enter
xor
leave
lds
sub
and
cld
jp
dec
xchg
add
dec
inc
jp
fwait
push
stos
repnz
xchg
clc
add
jp
test
xor
fs
push
movs
jmp
iret
jbe
les
jge
or
icebp
dec
rcr
jmp
lds
adc
and
fidiv
inc
inc
leave
xchg
push
shr
pop
sbb
jl
leave
and
dec
inc
addr16
jae
sbb
lods
out
jae
sub
les
lods
inc
dec
shr
and
scas
jmp
inc
gs
inc
stos
ds
shr
xchg
push
lods
adc
inc
ds
movs
cmps
mov
xchg
xor
jl
cmp
sti
jp
adc
outs
jmp
rol
outs
push
scas
pusha
dec
mov
jne
inc
and
fimul
xchg
push
rol
jnp
and
dec
lds
dec
rcr
jp
xor
fmul
pop
add
jge
dec
pop
shr
jno
or
fst
jno
xor
sub
jns
inc
and
inc
sbb
dec
push
stos
dec
cmp
sub
lods
dec
lods
ds
ins
cmc
cmp
dec
pop
shr
fidivr
and
dec
lods
cmp
stc
fdivr
and
dec
shr
fcmovnb
adc
fcom
jp
dec
stos
cmp
jb
fimul
lods
cmp
stc
les
movs
out
jo
outs
cld
int3
outs
pop
mov
ret
xlat
xchg
daa
cmc
les
icebp
dec
inc
mov
cli
mov
icebp
dec
lds
dec
dec
popf
jns
xor
adc
sahf
cld
dec
int
not
cs
and
mov
cmc
ficom
in
dec
inc
scas
aas
xor
icebp
dec
(bad)
pop
jl
ds
retf
jmp
push
sbb
jmp
and
outs
repnz
cmp
inc
shr
jbe
rcr
or
inc
xchg
add
xchg
sbb
xor
sub
shl
inc
lods
ds
iret
sub
dec
or
in
cwde
in
icebp
ficom
nop
nop
inc
ja
add
jne
xor
push
xchg
and
pushf
in
icebp
cmps
inc
push
inc
out
test
lock
xchg
xor
call
sub
test
add
xchg
shl
out
nop
nop
inc
lods
(bad)
fwait
in
icebp
mov
arpl
dec
scas
sub
lds
mov
jns
lock
xor
call
sbb
inc
and
inc
xor
cmps
inc
aaa
dec
rol
std
les
addr16
pushf
and
mov
pop
pop
popa
nop
inc
push
mov
pop
movs
aas
pop
inc
stos
das
fld
and
xor
addr16
dec
and
jg
movs
ror
inc
cmps
pushf
lods
bound
(bad)
stc
and
mov
dec
repnz
mov
pop
adc
icebp
dec
lahf
scas
jne
mov
icebp
dec
into
in
fld
movs
mov
(bad)
xchg
in
inc
mov
adc
mov
pop
inc
and
lds
icebp
cmps
inc
aaa
dec
rol
je
inc
or
inc
xchg
icebp
dec
sbb
mov
push
lock
or
jle
inc
xor
dec
or
in
inc
push
and
fmul
jns
xor
and
icebp
dec
xor
and
push
inc
scas
cmp
jmp
pop
shl
fst
icebp
mov
dec
stos
xor
imul
lea
jp
dec
movs
push
out
mov
jp
in
icebp
dec
inc
stos
aaa
xchg
iret
jmp
jl
dec
test
cli
(bad)
dec
fcomi
dec
inc
mov
call
fimul
or
in
icebp
aam
xchg
repz
push
mov
rol
popa
icebp
aaa
adc
icebp
dec
lods
and
icebp
iret
test
(bad)
inc
and
ror
xor
mov
and
dec
enter
mov
pop
push
inc
xchg
adc
dec
inc
movs
mov
or
push
movs
pop
cs
fbld
les
gs
and
mov
inc
aaa
push
rol
icebp
mov
into
pop
mov
test
jns
fnstcw
xchg
and
icebp
aam
xchg
adc
push
dec
nop
nop
inc
ja
rol
ret
not
add
movs
fist
and
test
fs
test
pop
lds
aaa
jo
icebp
dec
sahf
jp
jo
popa
icebp
mov
mov
icebp
dec
inc
jp
aad
jge
pusha
inc
xchg
adc
jmp
xor
in
fstp
inc
std
ret
not
add
movs
mov
xor
dec
adc
xchg
stc
aaa
jnp
icebp
dec
retf
pop
leave
inc
repnz
inc
lods
dec
pop
retf
aam
and
dec
enter
push
movs
push
pop
inc
mov
cmps
cs
repnz
inc
movs
in
push
push
movs
out
inc
and
mov
stc
ficom
mov
cmc
sar
sub
aad
and
dec
shr
push
out
and
mov
push
dec
repnz
mov
lahf
push
fnstsw
sbb
rcl
inc
(bad)
shr
je
push
imul
and
mov
push
sub
push
dec
lea
dec
inc
or
(bad)
aad
icebp
btc
xor
and
dec
xor
loope
and
mov
inc
and
cmp
loope
pop
or
pop
out
and
inc
and
xchg
xchg
std
push
dec
lea
dec
inc
or
(bad)
aam
icebp
btc
xor
and
dec
xor
cs
and
mov
inc
and
dec
jnp
xchg
sbb
test
jg
pop
enter
xchg
and
test
in
xor
jmp
pop
inc
aaa
pop
rol
inc
je
lods
(bad)
mov
popa
icebp
mov
xchg
(bad)
ret
pop
scas
and
cmp
popa
icebp
rol
and
jle
mov
pop
ror
xchg
dec
pop
add
inc
push
mov
leave
pop
sbb
test
icebp
les
shl
inc
fstp
nop
nop
inc
stos
test
addr16
push
aam
xchg
add
loope
cmp
sub
dec
les
push
adc
push
fcomp
inc
addr16
mov
jnp
leave
loope
push
add
adc
dec
nop
nop
inc
ja
lds
fs
inc
and
mov
jnp
jg
bound
ja
pop
xor
lock
xor
jle
add
icebp
dec
inc
jno
mov
xor
push
ins
jmp
fstp
and
test
test
sub
pop
inc
cmps
sub
lods
fldcw
mov
adc
dec
and
stc
mov
inc
and
inc
pop
fnstcw
enter
dec
push
sub
jmp
inc
or
fldenv
mov
mov
popa
icebp
push
inc
and
stos
or
cmp
jb
and
push
js
popa
icebp
movs
pushf
xchg
div
sti
xor
dec
add
mov
inc
and
inc
aaa
adc
movs
in
icebp
fdivr
mov
pop
xchg
repz
scas
ss
xchg
je
cmps
sub
lods
ss
shr
fisttp
inc
cmp
adc
dec
rcl
je
pop
pop
in
dec
mov
aaa
adc
dec
lahf
scas
ss
xchg
scas
ss
xchg
lods
ss
shl
fldenv
and
fimul
imul
movs
jg
rcr
icebp
stos
push
in
(bad)
lods
ds
fwait
movs
adc
xchg
add
inc
and
dec
inc
lods
ss
retf
pop
into
pop
je
dec
stos
outs
pop
lds
lds
mov
jne
mov
sbb
loop
icebp
push
mov
pop
gs
iret
xor
mov
push
retf
and
mov
dec
inc
cmps
out
dec
mov
sub
xor
mov
repnz
xchg
neg
push
test
xor
sti
out
inc
mov
std
dec
inc
cmps
out
dec
stos
or
arpl
sar
inc
gs
leave
repz
lds
cli
les
cmps
ret
lds
fcomp
pop
gs
lds
or
pop
icebp
pop
leave
add
dec
inc
stos
add
aas
inc
gs
lds
cli
les
fadd
pop
icebp
pop
leave
jmp
lock
sub
or
jp
push
lods
inc
fs
and
xchg
dec
and
dec
inc
push
int3
sar
push
test
(bad)
pop
adc
jno
mov
mov
sahf
or
push
mov
inc
push
mov
and
outs
pop
js
sub
iret
jbe
and
lods
les
mov
imul
mov
repz
jno
xchg
xor
aas
sub
enter
mov
cmp
push
and
je
loop
icebp
push
mov
popa
lock
iret
xor
mov
pop
sti
repz
inc
mov
hlt
pop
push
test
dec
dec
inc
and
mov
addr16
cs
dec
inc
cmps
lock
sbb
add
jl
push
mov
leave
mov
jb
popa
nop
inc
ja
and
out
inc
pop
mov
js
(bad)
(bad)
call
icebp
push
inc
and
cmp
push
int3
mov
icebp
fidivr
or
dec
inc
call
icebp
push
inc
and
cmp
and
dec
enter
retf
dec
inc
pop
in
push
and
(bad)
jecxz
dec
inc
xchg
outs
shl
gs
test
mov
jmp
adc
rcr
rol
xor
cwde
stos
xor
fld
jbe
push
xor
jnp
xchg
imul
inc
mov
fwait
je
dec
sbb
and
push
or
inc
and
mov
inc
add
test
jl
xor
dec
dec
xchg
cmp
dec
pop
popf
popa
nop
inc
lods
jmp
mov
les
sub
sbb
mov
out
or
jl
fwait
or
inc
lahf
pop
in
dec
push
out
push
jbe
cmps
sub
movs
mov
pushf
and
shl
repz
dec
adc
or
dec
mov
sub
lods
loope
retf
pop
scas
cmp
pop
xor
lock
test
mov
push
gs
dec
shl
sub
mov
and
call
adc
test
je
dec
es
push
inc
and
xor
gs
nop
mov
icebp
mov
popf
adc
adc
mov
aad
xor
inc
and
fidiv
pop
push
std
and
dec
inc
pop
loope
popa
dec
ins
push
rcl
sub
ret
je
popa
icebp
mov
and
dec
sub
cmps
mov
mov
shl
gs
clc
fmul
and
dec
inc
pop
mov
pop
mov
stc
dec
or
neg
xor
mov
icebp
cmp
movs
mov
out
test
ins
or
sub
shl
js
jbe
les
push
enter
jnp
ds
cmp
bnd
jae
mov
mov
lods
popa
nop
inc
cmps
mov
arpl
push
enter
dec
cmps
adc
test
jle
or
stos
ds
int
cmc
xchg
mov
or
xchg
jo
popa
icebp
rol
stc
popfw
retf
xchg
dec
mov
dec
cmp
mov
cmp
or
leave
loope
mov
test
jl
leave
and
les
rcl
gs
push
icebp
dec
inc
stos
das
sar
outs
cmc
(bad)
xor
je
dec
xchg
sti
iret
xchg
and
aas
push
lds
dec
popf
mov
inc
nop
nop
inc
and
aam
popa
icebp
scas
mov
data16
adc
inc
(bad)
jne
cmps
call
mov
dec
or
pop
inc
and
mov
in
pushf
imul
repnz
inc
and
shl
pop
shl
pusha
into
and
adc
inc
add
xchg
popa
icebp
mov
push
icebp
dec
inc
and
push
icebp
dec
inc
lods
xor
pop
rcl
gs
xchg
adc
test
ins
adc
rol
aam
dec
mov
and
fimul
and
dec
inc
jbe
pop
xor
push
fisttp
icebp
dec
inc
movs
mov
movs
jg
adc
push
fist
icebp
dec
inc
mov
xor
xor
lods
inc
pop
jle
stc
les
repnz
inc
and
test
fcomp
jb
enter
ficom
stos
xor
into
mov
test
jecxz
dec
adc
inc
xchg
ja
dec
xchg
jne
inc
(bad)
movs
fstp
ja
movs
inc
lods
dec
pop
shl
inc
xchg
add
(bad)
and
dec
into
jmpw
xor
inc
scas
ss
iret
fs
fstp
movs
out
dec
mov
movs
ins
fisttp
gs
fwait
jbe
mov
dec
jle
(bad)
push
imul
movs
mov
ror
dec
inc
and
scas
std
lds
sub
mov
and
fisttp
jp
push
and
dec
lods
ins
pop
shr
fdiv
std
and
dec
inc
or
or
icebp
dec
xor
inc
fnsave
or
adc
jle
push
inc
and
lods
movs
jg
fld
jg
movs
shr
pop
ror
xchg
popa
jno
xchg
pop
jno
leave
inc
and
ror
sub
dec
and
sar
loope
jp
pop
(bad)
and
les
in
push
inc
and
push
icebp
mov
mov
inc
and
mov
sub
jp
movs
ror
icebp
dec
shl
or
jns
test
sub
mov
bound
push
ss
inc
pop
or
mov
test
jbe
inc
and
lock
repnz
leave
or
dec
inc
cmps
mov
push
movs
cs
popa
icebp
push
push
movs
enter
jb
inc
and
dec
push
movs
loop
inc
and
mov
and
pop
push
inc
aaa
adc
adc
pop
lock
scas
cmc
xchg
inc
jno
shr
and
test
inc
and
cmps
xchg
scas
scas
lods
inc
and
cmp
je
adc
dec
inc
jb
stos
sub
lock
and
shr
sbb
mov
xchg
stc
dec
inc
movs
mov
shl
pop
add
popa
icebp
lahf
sub
scas
jbe
inc
and
cmps
xchg
or
xor
and
movs
and
dec
scas
shl
inc
jno
outs
sub
lock
cld
lods
xchg
inc
and
mov
inc
mov
jo
and
movs
and
dec
scas
test
(bad)
dec
and
ror
dec
push
cmp
pop
rcl
jge
test
pop
push
xchg
and
cmp
lock
lahf
jno
xchg
xchg
xor
and
pop
mov
icebp
lods
push
in
sbb
out
mov
(bad)
jns
fstp
lods
outs
pop
shl
jl
dec
out
dec
mov
mov
call
dec
mov
movs
rcl
sbb
shr
dec
push
cdq
movs
test
jl
add
ficom
je
dec
and
dec
push
mov
test
lock
fld
inc
mov
je
pop
inc
nop
inc
mov
mov
test
adc
daa
jns
iret
repnz
mov
jnp
inc
loop
push
int
repz
and
jmp
inc
xchg
cdq
popa
icebp
fmul
daa
jns
iret
repnz
and
xchg
inc
movs
mov
enter
sub
cmp
lock
leave
inc
nop
inc
mov
and
daa
jns
mov
ficom
movs
jmp
inc
xchg
cdq
popa
icebp
fmul
and
test
jne
test
ins
movs
test
movs
test
pop
movs
test
push
movs
test
dec
movs
test
jl
rol
jl
ror
jp
aam
jl
ror
jl
rcl
jp
aam
jl
rcl
jl
rcr
jp
aam
jl
rcr
jle
shl
icebp
dec
inc
and
push
cmp
jne
push
shl
test
movs
test
mov
movs
test
jl
dec
jg
sbb
mov
push
int
jl
dec
jg
sbb
mov
push
int
jnp
inc
test
stc
lods
movs
jmp
int
jnp
inc
test
repz
mov
jl
dec
jg
sbb
mov
les
jle
jle
call
dec
mov
movs
rcl
sbb
rcl
cmc
inc
and
push
shl
call
inc
fwait
popa
icebp
fmul
and
jmp
dec
mov
movs
test
lock
popa
inc
nop
inc
mov
movs
test
imul
dec
inc
ret
and
adc
and
sar
sub
inc
adc
xchg
mov
jnp
dec
inc
ret
and
xchg
inc
loop
push
int
repz
and
aas
dec
movs
jmp
sbb
inc
nop
inc
mov
xchg
dec
inc
ret
and
xchg
inc
test
repnz
and
xchg
inc
movs
fist
adc
sar
sub
rcr
adc
xchg
mov
in
test
in
movs
test
cmc
movs
test
std
movs
test
add
cmps
test
adc
cmps
test
jl
sar
jl
sar
jp
aam
jl
shl
jl
shl
jp
aam
jl
shr
jl
shr
jp
aam
jl
shl
jle
shl
icebp
dec
inc
and
push
cmp
ja
push
shl
inc
cmps
test
dec
cmps
test
pop
cmps
test
ins
cmps
test
jl
dec
jg
sbb
mov
xchg
dec
test
stc
lods
movs
jmp
dec
test
repz
mov
jl
dec
jg
sbb
mov
xchg
dec
test
repz
mov
jnp
inc
test
stc
lods
movs
jmp
mov
and
dec
enter
push
xlat
xor
je
movs
jns
loop
icebp
les
ins
je
and
push
fdiv
xchg
outs
mov
adc
adc
loope
push
or
cmp
or
lock
jns
inc
and
pop
es
popa
icebp
fdivr
and
dec
js
sub
push
movs
inc
push
inc
and
dec
nop
inc
pop
and
mov
mov
xchg
call
shl
mov
mov
icebp
sar
and
dec
scas
popa
and
lahf
loopne
in
test
je
sub
mov
fldenv
(bad)
nop
inc
xor
inc
and
iret
ret
pop
leave
fdiv
dec
inc
scas
ds
shl
jne
push
movs
lahf
push
inc
and
push
xchg
add
sbb
pop
int3
mov
dec
inc
mov
icebp
push
test
mov
add
mov
jns
jp
inc
jecxz
push
out
scas
(bad)
icebp
iret
and
sbb
movs
ret
les
cmps
push
push
xlat
jmp
or
add
loop
mov
repnz
test
xor
xchg
lock
inc
movs
mov
enter
mov
jl
dec
call
icebp
push
inc
and
lahf
call
or
push
jb
xor
adc
call
(bad)
fsub
inc
and
aad
and
dec
mov
dec
ror
and
lea
dec
mov
inc
cmp
and
dec
sahf
(bad)
cmc
in
test
mov
push
inc
and
dec
xor
jp
inc
mov
mov
loope
icebp
cli
lock
fcomp
mov
pop
sub
or
adc
and
dec
stos
push
in
xchg
imul
jmp
push
cmc
mov
icebp
dec
inc
inc
(bad)
rol
add
dec
ror
inc
and
call
cmp
stc
mov
loopne
icebp
push
inc
and
adc
gs
dec
inc
xchg
adc
sub
or
ret
push
imul
dec
and
add
mov
dec
sub
dec
or
add
mov
scas
popa
dec
add
in
out
push
mov
ss
mov
test
xchg
push
jecxz
icebp
cli
lock
push
adc
test
ss
jno
test
aaa
test
test
je
inc
xor
inc
and
add
jns
dec
or
sub
mov
call
lock
loope
xchg
xor
mov
cdq
push
jnp
scas
lods
push
xor
lock
xchg
adc
inc
jl
pop
or
inc
icebp
lods
mov
cli
xchg
xchg
inc
cmps
mov
adc
scas
jbe
inc
and
dec
jnp
(bad)
nop
inc
and
cmp
popa
icebp
lahf
shl
inc
mov
dec
and
mov
inc
and
dec
jnp
mov
retf
dec
inc
js
cmps
inc
push
cmc
in
test
fnstenv
inc
scas
jbe
inc
and
dec
jnp
mov
retf
dec
inc
js
mov
inc
push
cmc
in
test
(bad)
or
adc
scas
fisttp
and
push
pop
mov
mov
mov
test
pop
lock
into
mov
jmp
and
ins
cmp
repz
push
mov
icebp
outs
iret
mov
cmp
lock
mov
icebp
dec
test
mov
xchg
mov
(bad)
push
mov
inc
and
dec
enter
pop
movs
jmp
fadd
xor
stos
mov
fadd
xor
inc
je
cmps
xchg
add
cmp
test
adc
or
add
inc
mov
sub
mov
movs
cs
popa
icebp
dec
mov
dec
in
dec
inc
jnp
push
ins
shl
inc
and
dec
or
sub
movs
jmp
and
mov
popa
icebp
dec
pop
and
jmp
fstp
popa
nop
inc
mov
mov
mov
stc
mov
pop
push
mov
clc
pop
cmp
popa
icebp
cmps
call
and
repz
mov
pop
and
fistp
ret
test
jbe
mov
lods
leave
dec
mov
inc
or
inc
or
test
push
scas
mov
sbb
sub
imul
inc
add
dec
inc
lods
ins
je
xchg
clc
adc
and
mov
mov
push
aam
xchg
sbb
and
(bad)
push
jecxz
push
mov
xchg
(bad)
(bad)
jns
mov
inc
shl
pusha
mov
jmp
gs
int
cmp
inc
and
pop
dec
and
dec
mov
or
les
xchg
jmp
mov
xor
xchg
mov
into
shl
hlt
pop
leave
adc
add
pop
ror
es
cmps
ret
les
out
arpl
mov
inc
and
ret
push
sbb
lds
stos
or
pop
mov
icebp
fcomp
shl
and
dec
inc
stos
or
dec
push
ret
fstp
push
js
cmp
dec
push
mov
dec
movs
mov
shr
and
adc
adc
mov
mov
icebp
mov
and
dec
inc
jno
fldcw
icebp
dec
inc
movs
(bad)
dec
fldcw
pop
shr
test
xchg
pushf
js
push
mov
popa
icebp
or
fwait
js
gs
xor
loope
pop
into
ds
test
fdiv
js
mov
fwait
js
gs
xor
loope
aam
and
dec
or
shr
test
repz
inc
and
int
lahf
add
xor
(bad)
push
inc
and
into
add
mov
repz
data16
inc
xchg
or
xor
pop
inc
xchg
stc
dec
pop
push
popa
nop
inc
or
push
inc
and
xor
inc
and
mov
inc
pop
out
mov
pushf
js
lds
pushaw
shl
inc
push
cmp
xor
pop
shl
lods
leave
fldenv
movs
lea
and
inc
scas
cmc
push
loope
jae
or
mov
lods
mov
mov
je
inc
and
arpl
xchg
add
leave
outs
in
dec
sar
mov
std
gs
and
inc
xchg
add
push
inc
xchg
adc
shl
cmps
mov
xchg
js
mov
mov
and
jl
popa
icebp
fidiv
sbb
cmp
push
mov
xor
inc
and
mov
xchg
or
dec
mov
and
inc
aaa
sbb
adc
adc
and
rol
push
fst
icebp
dec
inc
or
in
xchg
inc
and
dec
inc
scas
cmc
test
loope
jae
or
push
inc
and
sub
add
and
bound
xchg
add
xchg
sbb
sub
mov
xchg
aad
mov
and
inc
aaa
sbb
adc
js
lds
dec
cmp
ins
inc
xchg
or
inc
and
lds
push
enter
fidiv
xchg
lock
inc
lods
mov
mov
lock
shl
pop
shl
push
retf
fisttp
pop
icebp
ret
dec
popa
jl
(bad)
cmps
out
cmp
idiv
inc
cmc
adc
jecxz
movs
ror
addr16
inc
mov
mov
inc
and
dec
xchg
test
inc
and
dec
enter
fwait
js
mov
ret
aad
test
and
and
aad
scas
and
lods
dec
addr16
inc
ja
gs
loope
push
shl
fsubr
data16
fwait
mov
mov
sbb
test
jbe
push
movs
mov
push
popf
(bad)
aad
test
je
dec
xchg
adc
adc
popa
icebp
dec
mov
and
inc
xchg
stc
lahf
inc
aaa
sbb
test
(bad)
inc
and
sar
and
dec
jle
or
dec
ret
test
jp
pop
je
dec
mov
lods
ss
cli
or
leave
add
(bad)
xchg
and
inc
aaa
xchg
rol
mov
test
dec
dec
rcr
fimul
fnstcw
stos
or
xchg
int
cwde
ja
(bad)
and
ror
fcomp
and
rol
out
xchg
sbb
sbb
add
mov
mov
dec
mov
xchg
xor
in
pusha
inc
xchg
add
pop
inc
aaa
xchg
rol
jle
adc
dec
and
scas
mov
out
mov
sbb
out
inc
lea
icebp
dec
shr
pop
mov
jb
inc
xor
dec
jb
add
cmps
repnz
icebp
dec
mov
in
push
rol
jl
shl
lahf
or
lock
xchg
xor
out
mov
sbb
out
inc
(bad)
jns
mov
ret
push
add
cdq
stc
dec
mov
and
(bad)
dec
jnp
mov
gs
jb
sub
xor
mov
xchg
or
mov
cmc
nop
jge
and
or
cmp
lock
inc
and
shl
sti
(bad)
dec
jnp
mov
gs
xchg
je
imul
ficomp
xor
dec
inc
movs
mov
jge
sub
je
inc
jge
scas
push
in
(bad)
jae
lea
je
cmps
mov
movs
jmp
push
inc
and
xor
rol
and
fisub
and
mov
ret
test
xor
sub
mov
inc
jp
cmp
adc
test
jnp
popf
inc
mov
add
or
mov
sub
push
push
sbb
pop
lds
jns
dec
test
cli
iret
stos
sub
xlat
mov
mov
fcom
jno
xchg
dec
jno
dec
jnp
mov
inc
and
cmps
mov
repz
mov
dec
xor
pop
sti
data16
pop
sti
outs
in
adc
sub
adc
ja
cmp
lods
ss
shr
sar
and
dec
inc
cwde
std
ficom
mov
xchg
fisttp
mov
stc
pop
sti
repnz
fwait
and
mov
and
inc
stos
ss
mov
fcomp
xchg
push
int
in
mov
dec
mov
mov
xchg
scas
ss
xchg
mov
aaa
stc
sbb
or
sbb
xor
pop
push
.byte
