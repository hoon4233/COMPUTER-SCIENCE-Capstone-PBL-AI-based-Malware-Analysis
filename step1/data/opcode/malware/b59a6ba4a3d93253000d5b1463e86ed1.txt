(bad)
pop
add
add
add
dec
add
add
add
add
add
or
add
add
add
hlt
and
add
and
add
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
add
jle
add
add
xor
add
and
jb
outs
addr16
add
add
add
add
and
add
add
adc
add
and
dec
inc
add
add
add
add
inc
ins
outs
bound
add
add
add
add
add
add
add
add
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
loopne
add
add
add
aas
add
add
add
add
add
ja
add
shl
add
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
rol
add
add
add
(bad)
add
add
add
test
add
add
jnp
gs
xor
xor
fs
sub
sub
arpl
arpl
bound
jge
cmp
outs
fs
gs
jae
jb
jae
jne
arpl
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jne
je
imul
add
add
adc
loop
dec
mov
inc
cmps
in
sub
mov
and
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
cwde
retf
repz
cwde
enter
pop
mov
dec
mov
xchg
and
(bad)
movs
test
jnp
sahf
out
sti
xchg
jns
jae
or
pop
mov
mov
retf
dec
cmps
cmps
sbb
dec
pusha
scas
push
xor
idiv
mov
call
jl
xchg
mov
arpl
popf
lods
cvtdq2ps
mov
(bad)
xor
mov
pop
mov
jnp
or
or
mov
out
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
dec
jmp
pop
add
add
xlat
add
add
inc
add
dec
add
add
outs
add
je
js
add
add
and
mov
fisttp
(bad)
cwde
aad
jb
das
sbb
popa
or
out
test
not
add
and
pop
pop
jnp
jle
add
or
add
movs
leave
lods
fs
add
add
cmp
sub
xchg
add
int
aad
push
call
jg
pop
mov
out
pop
popa
cmps
sub
xlat
or
test
icebp
pop
sti
popf
cmps
push
in
pushf
sbb
fstp
jmp
ficom
das
into
xor
cld
jg
leave
(bad)
sbb
adc
pop
jb
es
loopne
out
out
or
add
aam
sbb
xor
fidiv
pop
jge
dec
daa
ss
lahf
sbb
sub
das
pop
icebp
lahf
push
cwde
inc
rcr
dec
and
mov
fidiv
push
dec
arpl
jnp
mov
mov
mov
jl
lea
clc
pop
xchg
pop
mov
fidivr
mov
call
sub
enter
mov
or
in
xchg
scas
sahf
pop
test
rol
stos
retf
jne
stc
inc
cmp
iret
jmp
in
mov
clc
xchg
scas
aad
ret
test
mov
js
cwde
fisttp
aam
mov
mov
push
xchg
setnp
inc
jecxz
iret
retf
push
and
fist
fst
popa
cs
fldcw
xchg
push
jecxz
jp
dec
lods
rcl
push
retf
push
movs
stc
jb
(bad)
pop
dec
sbb
jecxz
mov
cdq
shl
inc
inc
sbb
sbb
mov
xor
push
dec
mov
rol
jl
sbb
test
leave
push
ret
stc
dec
mov
mov
popf
scas
pop
jl
sbb
or
je
je
ror
dec
or
mov
stc
inc
outs
xor
je
popf
rcl
lock
out
mov
dec
dec
aas
retf
and
icebp
pop
push
jg
(bad)
pusha
out
cmp
addr16
add
ficomp
mov
cmp
dec
int
lahf
push
or
jl
stos
aas
jmp
movs
dec
inc
xchg
aaa
repz
cmp
nop
ins
inc
push
aas
icebp
inc
xor
mov
jo
xor
xor
clc
push
fisttp
data16
retf
sar
(bad)
cmp
sahf
dec
xchg
cwde
jle
dec
and
inc
aas
aad
push
lock
xchg
xor
dec
(bad)
xor
cwde
popf
adc
jle
cmc
jno
lahf
inc
mov
lods
jnp
mov
push
out
rcl
dec
mov
mov
add
add
mov
ss
mov
push
shr
sub
not
stos
loope
xchg
push
or
and
sub
inc
pop
mov
out
pop
gs
mov
call
popf
sub
xor
jmp
neg
sti
nop
or
sub
mov
dec
aas
pusha
daa
ja
data16
adc
(bad)
shl
push
mov
stos
cmp
xchg
xlat
loope
jge
and
imul
psllw
(bad)
pop
cmps
cs
(bad)
jns
call
cmp
imul
sub
pop
(bad)
scas
mov
das
jns
sbb
fmul
inc
gs
(bad)
mov
add
mov
cmp
cmp
lahf
imul
stos
(bad)
outs
rol
cmps
dec
sbb
jns
retf
mov
pop
jmp
in
or
shl
or
lods
sti
cs
loop
mov
inc
cdq
jae
inc
into
pop
jns
sub
jle
es
sar
es
jbe
cmps
sar
add
and
sub
or
(bad)
jmp
jo
mov
cmps
retf
add
(bad)
xchg
and
pop
ins
scas
fisttp
mov
stos
cmp
das
push
push
ins
lock
dec
and
pop
and
xor
je
(bad)
fimul
popf
popa
adc
add
les
add
scas
jo
push
arpl
inc
imul
fimul
push
mov
xor
mov
shl
fdiv
jle
push
dec
(bad)
in
fild
add
xor
cmp
int3
jmp
mov
dec
cmp
adc
out
or
not
jecxz
sahf
aad
cld
js
inc
sub
inc
push
pop
push
pop
loopne
sar
fiadd
and
lods
fst
pop
jns
xor
rcr
mov
rol
fnsave
xchg
addr16
shr
jecxz
popf
add
aas
lods
(bad)
jl
out
sub
push
sti
jle
sbb
xlat
outs
sar
pop
cmp
scas
mov
stos
and
mov
add
xor
push
and
mov
mov
(bad)
or
adc
lea
aaa
cmp
xchg
cmp
aad
pop
int3
add
(bad)
xor
cmp
mov
xor
pop
mov
mov
add
pop
imul
xchg
xchg
loop
mov
out
xchg
call
loop
pusha
mov
test
fcom
lods
pop
push
popf
sbb
and
cmps
sbb
pop
out
inc
fimul
add
ins
stos
pop
sub
cmp
sub
enter
inc
xor
cmp
mov
push
or
xchg
cli
dec
daa
add
push
call
jg
add
retf
cli
sbb
cld
(bad)
sub
inc
ins
xchg
pop
fs
adc
clc
pop
in
fs
jl
pop
dec
(bad)
push
loop
adc
scas
(bad)
push
and
jmp
aas
(bad)
mov
(bad)
xor
add
loope
fwait
(bad)
add
xor
out
pushf
xchg
cdq
outs
movs
mov
out
adc
shr
shl
mov
adc
xor
sbb
push
lock
and
test
popa
sbb
xchg
ins
cmps
out
call
mov
pop
in
xchg
xor
in
out
inc
add
fcom
repz
or
in
push
or
push
adc
dec
and
cmp
in
cdq
cmp
sti
push
mov
mov
cld
sbb
test
mov
mov
les
test
int
sbb
movs
adc
jbe
fld
jo
inc
pop
push
xor
lock
stc
pop
aas
inc
sbb
dec
sub
(bad)
mov
outs
pushf
fcomp
jmp
in
push
mov
ja
shr
enter
sub
mov
jae
pop
or
lock
push
test
test
int
xchg
sub
pop
jne
ret
int
stc
sub
cli
xchg
cmp
jl
xor
fisttp
popf
stos
dec
clc
mov
rcr
inc
lahf
cmp
mov
and
into
int
dec
aad
or
loop
pop
loope
dec
in
test
movs
mov
div
enter
mov
adc
jl
(bad)
cli
stc
popa
enter
inc
movs
adc
cli
sbb
jbe
pusha
enter
inc
nop
scas
aad
or
dec
xor
cld
call
arpl
xor
fst
and
into
cwde
mov
scas
xor
xor
repz
cwde
xor
push
push
repnz
pop
inc
or
loope
iret
iret
mov
stc
jo
pop
in
pushf
pop
scas
test
retf
mov
jns
loop
add
mov
imul
outs
ret
stos
ficom
dec
mov
jge
mov
or
or
dec
inc
pusha
into
dec
dec
add
sar
inc
fs
stc
vunpckhps
imul
clc
imul
mov
mov
jb
or
mov
add
test
imul
jp
sbb
xchg
xchg
sbb
ret
xchg
cmp
pop
dec
out
sar
cmp
lea
cli
push
sahf
cmp
cdq
add
pop
neg
xchg
xchg
(bad)
fmul
mov
ins
xlat
sub
test
and
gs
loop
int
dec
jmp
jge
pop
ror
mov
push
pop
or
sahf
lock
mov
inc
push
pop
mov
imul
daa
sbb
in
lea
push
sbb
movs
or
cmp
mov
arpl
pop
sub
nop
push
adc
mov
xor
retf
push
xchg
(bad)
inc
hlt
test
ret
xor
fsubr
push
sub
jae
fwait
loope
(bad)
nop
jno
lea
out
mov
push
inc
out
xor
in
dec
loopne
push
fbld
and
ss
add
jg
mov
ret
xchg
shl
mov
mov
mov
xchg
repnz
jg
pop
or
pushf
jmp
retf
ss
xor
and
retf
movs
mov
or
je
jno
xor
xchg
(bad)
mov
(bad)
out
call
scas
fscale
out
jge
mov
cs
(bad)
rcl
cmovge
cmp
mov
scas
outs
jg
call
push
stos
(bad)
push
test
push
js
push
pusha
clc
mov
cs
int3
fucom
outs
aaa
enter
movs
(bad)
out
lods
dec
daa
xchg
add
mov
push
nop
push
sbb
out
stc
cmp
jo
cwde
lock
ret
dec
pop
lods
fs
nop
dec
push
ss
retf
jecxz
out
pop
cmp
add
mov
aas
inc
add
mov
retf
mov
clc
mov
aad
mov
adc
xchg
not
fimul
mov
push
out
pop
sbb
gs
mov
dec
mov
int3
outs
xchg
shl
or
gs
jno
jae
in
push
adc
cwde
push
push
retf
pop
or
mov
out
jne
cmp
push
aad
jle
ds
push
icebp
add
sub
jo
cld
je
xor
(bad)
cmp
sbb
push
xchg
les
mov
adc
loope
push
movs
add
and
test
out
push
(bad)
out
ds
stos
and
mov
inc
fs
test
movs
pop
(bad)
or
cld
cmp
sahf
fiadd
mov
repz
sub
ss
lea
jnp
push
ins
fstp
pushf
or
sti
xor
mov
xchg
mov
imul
stc
ret
xchg
xchg
mov
sbb
cmp
ret
push
cmp
inc
ret
lock
sub
test
push
addr16
icebp
push
adc
lods
popa
add
xchg
mov
bound
push
js
sub
inc
loope
add
xchg
stos
fadd
mov
shr
xchg
sub
adc
aam
imul
mov
inc
repnz
ja
dec
shr
mov
xchg
and
jecxz
cmps
arpl
and
lea
lods
stos
das
into
stos
ins
push
inc
push
(bad)
aaa
xchg
sbb
test
add
mov
xor
cmp
mov
jecxz
fbld
in
lahf
push
inc
bnd
shr
sbb
and
mov
int3
pop
push
(bad)
stc
pop
sbb
mov
jl
push
fsubr
pop
xchg
je
ins
aaa
ror
dec
loopne
je
mov
jge
ret
scas
pop
and
sar
ret
jne
xchg
push
enter
sbb
sub
xor
jmp
mov
push
ret
pop
stos
out
adc
test
add
xchg
xor
dec
out
push
jp
in
xor
pop
aam
mov
and
fcmovnb
xchg
rol
cmp
adc
cli
add
in
aaa
sti
pushf
data16
fimul
push
cdq
cwde
clc
retf
sbb
adc
adc
pop
fbld
xchg
in
mov
cmp
sahf
pop
and
cmp
pop
xchg
int3
mov
lods
iret
bound
sbb
add
test
icebp
push
ret
rol
aas
push
fidivr
mov
js
add
push
test
arpl
popf
in
cli
or
or
dec
cmc
out
mov
sbb
push
jne
or
mov
movs
push
loopne
pop
inc
push
mov
int3
mov
daa
pushf
mov
sbb
enter
hlt
ret
sub
pop
icebp
xchg
movs
inc
xchg
repz
lods
jp
mov
addr16
jmp
cmp
inc
das
adc
mov
mov
nop
xchg
xchg
rcl
out
outs
sbb
jb
mov
enter
xor
xchg
dec
(bad)
fbld
mov
imul
das
lock
mov
adc
add
push
cmps
retf
inc
jbe
popf
call
mov
lds
inc
mov
xor
in
outs
fdiv
add
pop
lds
jns
adc
inc
mov
inc
pop
add
retf
(bad)
das
addr16
in
add
pop
nop
call
(bad)
xchg
enter
gs
into
ret
adc
mov
outs
jns
js
cs
je
aad
rep
push
(bad)
cdq
aam
push
or
aad
pushf
pop
aaa
sbb
cdq
sbb
sbb
or
fadd
lods
int3
cmps
fwait
in
add
pop
xchg
fistp
sub
sbb
movs
leave
xchg
popf
clc
jno
and
mov
test
or
inc
(bad)
pushf
jne
xlat
and
xor
pop
sub
addr16
and
mov
xchg
cli
retf
hlt
pop
jns
xor
sub
jns
out
int
mov
xchg
dec
lods
test
xor
out
int3
popa
or
sub
jg
out
fsubr
pop
xchg
add
test
push
sbb
inc
push
jge
cmp
div
push
imul
aam
pop
mov
outs
lea
mov
pop
jp
lock
data16
inc
mov
mov
test
std
push
sub
inc
in
cmp
shr
lahf
cmp
mov
rol
clc
neg
cmp
sub
js
mov
test
inc
out
imul
mov
inc
(bad)
popa
ins
dec
or
movs
pop
leave
mov
fst
pop
mov
and
xchg
or
cli
jmp
jo
xchg
pusha
push
pop
fistp
or
mov
mov
xor
div
sub
jb
mov
in
or
lock
call
and
jmp
inc
xchg
push
popf
int3
shl
add
push
adc
jbe
jmp
dec
sub
jns
adc
scas
rcl
add
lock
xor
int3
lahf
mov
jne
jl
in
(bad)
jo
push
lock
pushf
or
sbb
outs
ret
sti
dec
sub
pop
popa
adc
jmp
and
loop
mov
outs
and
sar
icebp
dec
ror
adc
or
mov
(bad)
popf
xor
out
test
js
push
mov
add
je
sub
les
xor
std
in
repnz
sbb
dec
mov
sub
out
xor
sti
nop
sbb
inc
lea
inc
ret
retf
mov
cli
xchg
int3
fcomp
cmp
test
push
cmc
fwait
mov
push
mov
retf
arpl
dec
jle
push
jmp
cmc
call
icebp
and
movs
cs
fdiv
jl
jmp
mov
sub
loope
push
xchg
fs
lea
ficomp
stos
repz
cli
movs
daa
dec
ins
call
push
adc
aad
iret
out
dec
or
retf
pop
mov
mov
sbb
cmp
rcr
int3
and
repnz
jmp
and
shl
pop
lds
stc
cmp
cmps
mov
jmp
pop
pushf
scas
inc
int
jecxz
xchg
test
and
bound
enter
jecxz
sub
test
icebp
int3
leave
push
push
adc
xor
mov
and
adc
lods
mov
push
nop
in
enter
jo
mov
int3
cld
push
inc
movs
or
adc
jl
cdq
test
repnz
cli
xor
mov
cmp
push
mov
lds
dec
or
iret
or
dec
dec
pop
fld
cwde
jno
add
inc
lea
jp
int
arpl
or
xchg
xchg
xchg
jne
movs
pop
jo
test
into
push
ja
inc
mov
mov
cs
into
call
adc
retf
xchg
inc
cmp
mov
cs
jmp
adc
jnp
int
pop
call
sti
imul
das
popf
outs
mov
ss
leave
ins
bound
adc
sbb
jb
push
pop
push
retf
jns
xor
sar
imul
cvtps2pd
ins
mov
mov
add
pushf
add
xor
and
sbb
mov
xor
cmp
lock
pushf
xlat
hlt
xchg
cmp
jmp
cmc
scas
push
xchg
dec
icebp
mov
jmp
jnp
or
cmp
mov
sub
jmp
xchg
dec
xchg
adc
dec
aad
and
scas
(bad)
add
cmp
jl
popf
mov
imul
mov
mov
mov
push
add
mov
dec
inc
jno
(bad)
and
xchg
lea
or
jnp
mov
out
imul
add
mov
inc
xor
mov
xchg
xor
mov
add
jl
and
stos
fwait
mov
push
sbb
cwde
push
push
fadd
add
sub
push
into
and
mov
mov
mov
adc
pop
mov
add
inc
or
jl
pushf
jle
scas
dec
adc
shl
repnz
cs
push
dec
retf
call
cmp
mov
dec
imul
push
aas
sbb
adc
add
gs
adc
push
sbb
cld
xor
out
push
jno
cld
arpl
pop
stc
push
sbb
add
js
mov
pop
jae
(bad)
jo
outs
dec
jg
xor
sub
sub
je
std
lds
fdivp
sti
xor
test
or
(bad)
jo
inc
jne
stc
(bad)
mov
retf
test
cld
xor
(bad)
fnstsw
xor
imul
cmps
dec
jmp
enter
dec
push
sbb
sbb
loope
mov
xor
cli
sbb
adc
aad
in
pop
add
or
rol
popa
pop
ins
movs
jbe
fwait
jnp
xor
aam
call
xchg
inc
enter
mov
push
mov
mov
adc
scas
adc
iretw
div
sbb
add
jge
add
pop
dec
sub
jb
mov
iret
dec
adc
jmp
cmp
out
xchg
dec
lea
push
pop
sub
sti
xor
out
cwde
aam
or
test
mov
mov
xchg
mov
fdiv
push
xor
popa
ss
pop
(bad)
or
rol
lahf
pushf
jl
hlt
stos
cwde
jns
pop
aas
icebp
push
pop
in
push
rcl
mov
and
rep
iret
sub
mov
(bad)
cmp
retf
enter
jbe
pop
test
or
xchg
in
sbb
push
jmp
shl
pop
ss
pop
sbb
xor
stc
call
es
push
dec
add
pusha
cmp
or
pop
in
lahf
icebp
xchg
or
rol
aad
je
imul
jmp
vmwrite
in
and
fucom
fld1
pop
shl
repnz
and
psubq
xor
nop
cmp
push
dec
cmp
out
cmp
jl
sahf
in
push
sbb
inc
not
inc
shl
inc
movs
neg
mov
ins
mov
pop
imul
push
push
and
popf
sub
ins
inc
cmps
jmp
bound
xchg
fmul
or
pop
or
mov
mov
mov
xchg
dec
fmul
pop
or
pop
into
jp
std
sub
ret
xchg
sbb
jmp
xor
cmps
in
imul
jle
dec
mov
aas
jo
mov
mov
adc
aam
adc
fstp
into
ficomp
data16
(bad)
inc
jl
mov
add
jae
mov
sbb
jns
cmp
add
sub
popa
add
je
jecxz
dec
in
adc
je
int
aaa
adc
ins
dec
push
iret
(bad)
outs
icebp
add
repz
adc
add
mov
mov
test
jmp
ror
popa
test
shr
adc
std
neg
movs
sbb
push
pop
jns
dec
ret
mov
sar
stos
into
loop
pop
test
dec
xchg
test
dec
adc
mov
enter
jecxz
jle
adc
icebp
in
pop
adc
add
pop
mov
sub
pop
inc
xor
mov
nop
xor
mov
inc
or
retf
retf
call
imul
daa
xor
fidivr
or
enter
mov
sub
mov
sub
loopne
cld
and
lods
fbstp
js
pop
call
jmp
xor
sti
cmp
mov
lds
jmp
ds
push
std
adc
pop
add
loop
(bad)
fbstp
aas
sbb
rcl
sbb
cli
mov
add
cld
adc
stc
push
shl
arpl
sub
hlt
mov
ret
adc
inc
dec
or
call
lds
xchg
loope
dec
add
movs
in
add
xchg
xor
pop
fmul
adc
and
dec
xor
mov
imul
adc
mov
aaa
sub
cmp
mov
sub
(bad)
pop
xor
add
fild
and
out
scas
ins
adc
(bad)
jae
mov
mov
jle
sub
fs
jb
lahf
(bad)
xchg
outs
sbb
mov
(bad)
fist
int
cmc
js
(bad)
ins
cmps
aam
cld
inc
mov
jae
sub
mov
retf
iret
push
inc
pop
push
cwde
imul
cmc
repz
pop
adc
enter
mov
or
mov
pop
cmp
aad
sub
(bad)
neg
sbb
mov
xchg
rcr
push
dec
xor
adc
addr16
sbb
pslld
dec
js
xchg
inc
sub
push
mov
push
imul
sub
repz
xor
xlat
push
idiv
dec
test
mov
ja
jecxz
cs
jmp
mov
and
(bad)
cmp
cmps
fstp
and
out
fwait
imul
dec
fstp
rcr
aam
test
enter
fadd
mov
cmp
push
ror
sbb
fild
movs
div
retf
push
shl
ins
arpl
das
xchg
fadd
adc
xchg
je
push
out
mov
rol
loope
inc
push
mov
or
jne
out
retf
out
icebp
cmp
jmp
lahf
lahf
xchg
and
xchg
(bad)
rcl
cld
xor
imul
mov
dec
jp
jp
mov
xchg
cmp
cmps
scas
ss
loope
mov
or
xchg
imul
rcl
push
mov
mov
mov
and
in
int
(bad)
cmp
stc
mov
outs
outs
mov
sahf
xchg
fxam
aam
std
sub
std
loopne
or
icebp
push
loop
and
mov
jae
add
dec
addr16
push
pop
dec
in
lock
test
fsubr
cmp
sbb
in
xor
mov
and
pushf
cs
jle
xlat
cld
stos
in
or
mov
xchg
aas
ins
jge
(bad)
pop
cli
xchg
jge
aas
and
ss
sub
xchg
cmps
retf
ins
loopne
(bad)
nop
mov
les
repz
dec
fs
sub
cmp
loopne
push
sub
(bad)
push
bound
mov
cmps
sub
pusha
inc
lds
fiadd
jo
stos
lock
out
xchg
popa
leave
cmp
jmp
ret
xor
(bad)
in
push
sbb
xor
mov
jg
sbb
test
lea
add
movs
pop
jmp
shr
scas
pop
jne
mov
iret
mov
addr16
das
mov
aam
push
fidivr
add
pop
jle
mov
int3
xor
call
jle
push
pop
push
fwait
cmp
or
ret
inc
pop
add
mov
movs
xchg
or
aad
in
push
dec
push
ss
js
int
mov
mov
add
cmp
add
sti
cmp
push
stc
jne
out
mov
inc
and
mov
shl
dec
or
icebp
pop
dec
sub
movs
(bad)
inc
pushf
cld
jno
loop
sub
jb
add
pusha
add
inc
movs
jb
inc
(bad)
ret
dec
and
fistp
sahf
jge
jnp
sbb
push
cmp
ins
in
mov
xor
lahf
imul
jno
and
(bad)
push
repz
aas
test
mov
xchg
in
push
es
hlt
sbb
mov
adc
lds
pop
stc
idiv
push
nop
mov
int
fnstenv
add
(bad)
iret
cmp
dec
xor
lds
adc
dec
mov
(bad)
or
movs
mov
dec
pop
call
jge
stos
pop
fwait
pop
xlat
mov
jge
and
outs
popf
jb
in
push
jg
retf
pop
inc
xlat
ficomp
jae
popf
add
pop
pop
jmp
nop
push
lahf
in
shl
stc
gs
les
inc
add
cld
mov
add
sbb
jno
adc
dec
push
lahf
jno
xchg
dec
mov
punpcklwd
mov
mov
lock
lods
inc
ret
mov
movs
ins
push
push
mov
ds
pushf
loopne
or
xor
mov
loope
mul
jbe
sbb
sub
gs
jbe
fcom
(bad)
outs
in
cmp
xor
add
sar
int
in
shl
xchg
(bad)
sbb
push
arpl
jae
and
inc
outs
rol
repz
loope
adc
mov
lahf
sub
cmp
inc
hlt
add
mov
cmc
pop
push
jge
ins
jmp
shl
cmp
enter
xor
addr16
outs
jo
push
jne
out
iret
or
pop
xor
popf
jno
scas
sar
aas
sub
test
push
lahf
cmp
xchg
mov
add
push
dec
mov
push
dec
xor
ins
loopne
repnz
popa
xor
ds
imul
ret
mov
mov
sbb
(bad)
mov
es
mov
int
out
ror
in
dec
sbb
sub
push
mov
and
js
cmps
sub
add
rol
cdq
fsubr
jns
and
sub
add
(bad)
and
or
(bad)
mov
cwde
pop
into
iret
loop
fcmovu
sar
pop
mov
addr16
inc
mov
xchg
movs
xchg
imul
(bad)
mov
ret
inc
jecxz
sbb
mov
in
or
cld
or
dec
sar
hlt
dec
adc
repz
xchg
xchg
sbb
mov
pushf
js
sub
out
add
sbb
xchg
lods
push
fild
mov
push
mov
inc
push
push
inc
mov
imul
dec
ret
shl
sahf
scas
ss
ret
sbb
cmps
data16
es
xor
and
dec
gs
(bad)
mov
and
es
xor
inc
addr16
clc
jmp
or
int
arpl
mov
pop
dec
test
cmp
rol
dec
mov
sbb
cmps
dec
sahf
das
loope
cmp
adc
int
fwait
lahf
sbb
cdq
retf
pop
jns
es
dec
mov
sbb
pop
xchg
push
cmps
jns
jge
fbld
aas
cmp
push
sub
movs
fst
xchg
push
repz
or
xchg
sahf
icebp
lock
enter
fs
call
add
xor
movs
rcl
mov
jecxz
dec
and
ins
inc
jns
cld
retf
or
dec
dec
icebp
jge
(bad)
sub
movs
movs
aaa
je
in
mov
mov
xchg
mov
imul
pop
add
dec
xor
push
or
nop
xor
jne
push
add
inc
sub
or
ja
xchg
iret
fisttp
pushf
loop
add
xchg
cs
add
or
sub
inc
imul
jecxz
je
dec
jno
pop
call
jbe
stos
test
jns
cmps
and
fmul
lock
std
out
jbe
sbb
inc
push
mov
pop
jmp
xor
push
sub
popa
test
dec
cli
das
mov
dec
in
push
imul
aaa
sbb
jg
fs
cmps
adc
sbb
xlat
sbb
movs
pop
shl
out
pop
ds
jae
or
sbb
jo
mov
fwait
lahf
adc
xchg
test
bound
rcl
xchg
dec
adc
cdq
push
sti
out
jg
aas
add
aam
adc
dec
and
in
inc
fwait
test
sbb
das
scas
jmp
popa
fcmovnbe
mov
sbb
es
xchg
xchg
inc
sbb
dec
inc
int
sbb
outs
pop
dec
lods
xor
(bad)
fiadd
lods
lock
push
and
jg
sbb
pop
xchg
les
idiv
adc
push
(bad)
ror
es
xor
mov
dec
jecxz
xchg
sbb
push
outs
not
push
lahf
repnz
aam
fcmovnb
push
ret
popf
or
fistp
pop
push
or
loop
inc
cs
pusha
pop
lods
repnz
jne
pop
imul
xor
inc
inc
push
call
xchg
xlat
push
shr
xor
pop
jae
imul
mov
aad
jnp
push
arpl
pusha
adc
out
retf
in
inc
out
sbb
xor
retf
push
scas
pop
dec
in
or
xchg
xchg
fwait
jbe
cwde
test
jmp
fs
loopne
cmp
addr16
retf
into
adc
push
lahf
outs
mov
dec
gs
out
daa
clc
mov
sbb
lds
push
lahf
sub
js
test
clc
loope
ds
cmp
adc
icebp
in
sbb
mov
ins
jns
test
fldcw
or
(bad)
pop
dec
or
pop
push
mov
jp
mov
inc
retf
movs
jl
sub
mul
push
mov
jne
push
jmp
aam
pop
fsub
mov
imul
in
cmp
pop
test
cwde
xchg
or
or
xor
jle
xchg
push
ret
cmc
neg
aaa
repnz
inc
xchg
mov
jecxz
js
test
push
in
scas
es
leave
xchg
mov
jno
add
xor
xchg
sub
sub
push
mov
fld
arpl
add
sub
inc
mov
cmps
mov
pop
js
add
mov
sub
aam
call
push
cmp
inc
dec
in
lock
lahf
mov
xor
sub
push
fdivr
cdq
and
fs
pop
and
(bad)
jae
(bad)
dec
retf
lahf
enter
jl
(bad)
xchg
fdivr
out
add
std
jmp
jmp
sar
adc
in
pop
and
sub
inc
push
pop
in
test
push
inc
or
das
out
push
inc
mov
iret
fild
push
retf
xor
bound
pop
loop
loopne
das
inc
test
(bad)
aam
jecxz
sub
inc
lock
push
pop
(bad)
movs
inc
cmp
dec
or
test
inc
push
xor
sar
dec
(bad)
lods
mov
cwde
mov
inc
mov
enter
mov
sbb
push
inc
out
push
outs
neg
push
mov
and
push
(bad)
mov
cmc
or
dec
mov
retf
inc
mov
jle
cmp
pop
and
mov
(bad)
ret
mov
push
mov
pop
pop
mov
mov
(bad)
stc
and
cmp
dec
mov
into
ja
test
cmp
fcos
mov
leave
inc
inc
dec
nop
in
loopne
mov
ja
sub
cmp
punpckldq
cs
mov
into
jbe
cmp
or
mov
xchg
jg
mov
movs
pusha
repnz
call
xor
in
pusha
or
add
leave
add
sbb
jg
mov
jmp
lods
xlat
xor
sub
mov
pushf
jle
mov
mov
xchg
(bad)
in
mov
ins
pop
push
sub
lods
into
arpl
retf
sbb
jg
call
cmps
xchg
or
fucompp
xchg
adc
iret
test
pop
aad
dec
icebp
shl
stos
jne
dec
rol
adc
inc
push
lods
push
das
adc
jmp
and
inc
imul
sub
jbe
popa
cmp
xchg
enter
les
test
fldenv
push
inc
adc
xchg
xor
movs
test
sub
jno
and
int3
mov
lea
das
pop
in
push
cld
mov
and
outs
add
mov
retf
pop
cmp
and
daa
adc
inc
mov
jne
dec
dec
lea
jp
and
mov
mov
and
in
mov
cmc
xor
pushf
fimul
out
cmp
inc
call
ja
jg
mov
outs
or
mov
sub
dec
push
inc
dec
mov
jmp
xlat
test
cmp
sub
dec
dec
ins
sub
inc
ror
ss
pop
mov
stos
popa
add
cmc
sar
fnsave
mov
add
out
pop
in
ja
fisubr
ss
xchg
or
scas
imul
imul
fwait
mov
xor
es
sbb
aad
mov
xchg
gs
jl
gs
shr
xor
inc
push
ror
out
retf
push
inc
into
cs
rcl
pop
dec
fild
mov
dec
mov
push
enter
(bad)
jno
mov
add
cmp
test
ret
adc
lods
mov
fsub
jecxz
sbb
in
cli
out
stos
inc
or
adc
adc
pop
mov
dec
jecxz
xor
popf
add
pop
pop
mov
mov
dec
or
out
mov
(bad)
pop
adc
dec
cmp
xchg
cmp
(bad)
fst
test
inc
out
aam
xor
idiv
jns
mov
pop
es
pop
(bad)
cmc
push
fcmovne
jle
(bad)
jmp
mov
mov
sub
xchg
fadd
inc
loopne
add
mov
cmps
inc
or
add
push
popf
das
sbb
sbb
sub
out
inc
jle
inc
retf
cs
das
mov
add
shl
sar
lds
std
ror
test
push
test
mov
inc
fwait
std
div
adc
xchg
sub
push
fucom
cmp
leave
jle
retf
sbb
push
ss
pop
push
mov
sbb
and
shr
imul
mov
(bad)
loope
jp
bound
adc
mov
loop
ret
nop
xchg
(bad)
and
test
shl
mov
cmp
clc
and
inc
cmp
arpl
test
scas
cmp
jb
(bad)
addr16
ror
push
mov
add
call
push
lock
inc
scas
cmc
repz
and
jmp
scas
pop
(bad)
shl
inc
jmp
es
mov
sbb
inc
fidiv
xchg
test
mov
iret
in
adc
sub
xchg
cdq
or
popa
push
out
dec
(bad)
jecxz
mov
xor
cmp
mov
into
out
sbb
jp
mov
sbb
dec
cmp
or
outs
pop
scas
xor
lock
xchg
and
(bad)
repnz
xor
loope
outs
jae
cwde
les
fwait
jno
push
mov
xor
sbb
xor
les
ss
pop
lock
cmps
ret
mov
inc
sbb
push
add
cmp
movs
cmp
xchg
xlat
sub
pop
jae
sbb
ror
aaa
fs
jge
inc
int
test
xchg
out
mov
and
leave
sbb
cdq
fmulp
mov
mov
xchg
shl
shr
push
div
inc
mov
cmp
inc
dec
sub
ret
pusha
pop
jmp
movs
notrack
scas
push
or
das
(bad)
lock
fbstp
iret
mov
and
dec
push
ja
repz
stc
xchg
or
dec
js
adc
mov
mov
test
jb
push
jg
in
dec
push
inc
inc
in
sbb
inc
push
pop
ja
jmp
add
jg
into
pop
cdq
pop
dec
jecxz
mov
or
sbb
retf
retf
test
retf
sub
xor
mov
jle
cmp
mov
mov
cmp
ds
pop
push
xchg
xor
add
loope
sbb
inc
jae
or
adc
mov
aad
ror
mov
ins
jae
dec
dec
hlt
stos
mov
(bad)
div
push
xchg
mov
dec
mov
int3
adc
mov
cmp
and
mov
mov
jae
mov
in
push
or
outs
cmps
div
fnsave
sub
pushf
test
out
aas
call
dec
pop
dec
lds
or
pusha
in
sti
sar
inc
fadd
(bad)
jne
mov
mov
aaa
js
pop
mov
push
push
push
inc
mov
ds
in
inc
xchg
mov
ins
xor
dec
fldenv
cmp
shl
cmps
in
jno
jnp
scas
sbb
cmps
pop
shl
sub
pop
inc
movs
adc
aam
lods
or
sahf
test
sti
call
push
mov
adc
pop
cdq
xor
cmp
xor
adc
repz
fistp
dec
fcom
out
dec
jne
pusha
cmp
inc
leave
ret
xchg
std
jno
dec
enter
sub
addr16
mov
fdivr
mov
dec
xlat
(bad)
inc
es
inc
leave
inc
xor
xor
repz
(bad)
and
jmp
jmp
mov
lock
gs
or
mov
call
pop
retf
out
int
int3
loope
xor
push
popa
nop
imul
cmp
sub
sahf
ss
in
mov
sub
jg
adc
imul
ins
push
(bad)
mov
or
lahf
push
es
mov
jns
js
jecxz
leave
int
jne
in
or
sub
adc
stos
daa
lds
imul
aas
loopne
sbb
xor
retf
pop
dec
retf
dec
and
mov
shr
sub
mov
bound
loop
ror
xor
mov
imul
xor
xlat
push
cmp
sbb
dec
add
push
or
pusha
xchg
iret
ja
cmps
out
das
mov
popa
or
adc
jns
sub
shr
xor
mov
adc
inc
test
sbb
mov
sbb
inc
pushf
imul
and
pop
pop
in
(bad)
mov
int3
cmp
ins
push
dec
cdq
into
jg
mov
or
sahf
add
xor
lods
loope
or
pop
stos
mov
cmp
push
mov
pushf
cmc
cmp
(bad)
retf
imul
mov
mov
scas
push
in
mov
leave
inc
add
pop
xchg
pop
sahf
or
dec
fcomp
jp
cs
ret
lds
lock
mov
push
push
(bad)
jmp
cmp
and
or
push
in
or
adc
std
xchg
int3
push
pop
mov
xchg
adc
stos
add
icebp
inc
addr16
jbe
ret
popf
xlat
mov
icebp
test
xchg
aaa
sbb
mov
xchg
mov
lds
lds
cmp
adc
lds
in
pop
cld
aam
hlt
dec
mov
jg
jmp
mov
or
rol
mov
mul
das
lock
lock
mov
cmp
stos
and
stos
or
sti
cmp
xlat
or
aad
(bad)
ins
loop
adc
std
mov
mov
sub
jl
mov
cmp
add
and
call
mov
push
in
push
fisttp
data16
test
cmps
cmp
imul
mov
sahf
sbb
ja
fnstenv
icebp
scas
daa
das
jno
retf
adc
ret
das
mov
push
pop
jmp
jmp
pushf
or
sub
int
and
aam
cmps
rol
sub
mov
mov
adc
retf
pop
in
mov
xor
push
dec
ins
iret
into
adc
bound
mov
or
lods
pop
into
inc
out
and
pop
xor
retf
jmp
cdq
mov
xor
ss
xor
es
movs
push
adc
retf
loope
call
cmp
dec
xchg
push
out
sbb
push
rcr
dec
pop
add
xor
mov
cmp
sahf
or
loop
in
jl
cld
add
stc
ss
or
cmp
aas
push
mov
jge
neg
(bad)
cdq
nop
dec
rcr
cwde
push
push
push
fld
fcom
idiv
(bad)
neg
(bad)
xor
xchg
push
pop
sub
ret
sub
sub
pop
mov
test
jb
inc
cmp
std
sbb
add
arpl
fwait
inc
cld
ins
into
cld
jo
mov
cmp
cmp
cmc
mov
std
clc
jmp
mov
lahf
pop
lods
js
stos
push
and
stos
mov
sub
fldenv
iret
aas
call
dec
sar
sub
(bad)
cmc
and
fs
push
jmp
mov
movs
inc
rol
xchg
cmp
sub
push
mov
cdq
ins
out
add
int
mov
div
mov
cmp
(bad)
ret
push
and
push
cs
add
or
adc
(bad)
cmp
and
test
pop
test
inc
or
xor
imul
mov
cwde
or
maxps
stos
inc
in
mov
push
mov
jnp
aas
mov
dec
repnz
out
out
push
and
pop
lods
out
iret
xlat
inc
iret
or
hlt
jo
out
cs
call
addr16
jns
movs
lods
jns
xor
fisubr
repz
(bad)
stos
sbb
xchg
sbb
add
pusha
dec
inc
cwde
sbb
xchg
mov
in
sub
test
cmps
jae
xor
sub
std
dec
jmp
or
arpl
jne
retf
bound
mov
shl
dec
cmp
xchg
cmp
inc
jmp
pushf
adc
(bad)
push
mov
test
and
and
jg
cmp
push
add
arpl
add
pop
sub
mov
lahf
rol
les
shr
mov
dec
jo
and
jns
dec
mov
mov
jb
inc
sub
bound
lds
fdivr
or
mov
mov
retf
xchg
xchg
inc
loopne
xchg
jns
bound
push
popa
icebp
push
xchg
xor
jl
fnclex
inc
ss
daa
or
mov
mov
rcl
mov
in
mov
je
(bad)
aaa
sbb
sbb
int
add
cmp
push
retf
pop
(bad)
repnz
jmp
and
gs
retf
xchg
(bad)
jo
xchg
push
push
(bad)
xchg
scas
fwait
pushf
adc
push
xchg
jmp
lods
out
xchg
sbb
dec
aaa
je
and
adc
adc
lahf
inc
push
cmps
sub
or
fs
mul
mov
cli
sahf
cmp
jmp
in
retf
adc
std
jno
adc
xchg
(bad)
and
adc
mov
dec
add
sbb
jo
adc
scas
les
jmp
sbb
stc
adc
(bad)
mov
std
xor
pop
or
aas
mov
loop
ins
adc
xor
je
mov
mov
sub
das
es
retf
xor
idiv
pop
push
bound
pop
mov
gs
dec
xor
push
dec
fisttp
mov
inc
add
pop
(bad)
or
in
fild
ins
test
hlt
sub
pop
(bad)
mov
inc
ins
call
stc
mov
imul
xor
mov
add
mov
(bad)
lods
lods
pop
and
and
jge
xchg
in
xor
cmps
add
jg
cmp
repz
js
enter
jp
inc
xlat
xor
popf
imul
movs
mov
bound
dec
pop
xchg
ins
mov
(bad)
lods
and
push
dec
pop
clc
mov
ror
cwde
div
bound
in
ror
mov
xor
jb
scas
ins
mov
dec
mov
or
lods
adc
inc
push
or
xor
fsubr
push
loop
bound
sti
out
ds
dec
retf
fst
fimul
mov
dec
xor
xlat
and
push
jg
jecxz
cmp
cld
stos
jle
inc
popf
outs
sahf
into
in
pop
sbb
mov
repz
or
inc
bound
out
xchg
add
xchg
mov
(bad)
jmp
fwait
stc
shr
test
fcmovu
adc
dec
loope
jl
fidivr
fcmovnb
fdivr
neg
xlat
jnp
pushf
iret
sahf
outs
or
cmps
or
inc
add
fsub
loop
ds
data16
push
outs
cwde
mov
jg
mov
or
fdiv
add
sti
stos
fcmovne
and
je
rol
sbb
(bad)
xor
loope
ds
mov
loopne
mov
mov
adc
jecxz
xchg
xchg
push
sub
mov
aam
fld
das
popa
repnz
fld
in
mov
das
pop
movs
aad
test
test
das
and
push
loop
(bad)
(bad)
(bad)
out
mov
cs
dec
cmp
mov
adc
cs
stos
mov
dec
clc
sub
xchg
jnp
retf
jne
dec
into
and
lock
repnz
and
leave
jecxz
shl
or
out
xlat
push
jne
stos
sbb
sub
das
cmps
xchg
pop
clc
jmp
add
aaa
push
rcr
ror
dec
fs
jne
(bad)
or
gs
cmps
sub
nop
push
scas
out
es
repnz
pop
sbb
push
shl
fstp
adc
cwde
fnstsw
sub
std
push
cdq
pop
xchg
xor
imul
push
in
cmp
mov
jp
(bad)
inc
lods
mov
test
mov
pop
mov
mov
cmp
cmovnp
fincstp
lods
inc
xlat
addr16
jb
mov
adc
cmps
fsub
sbb
adc
push
xchg
leave
icebp
add
adc
xor
inc
dec
cld
or
dec
pop
mov
clc
imul
movs
mov
mov
add
adc
and
sti
pop
add
idiv
(bad)
rcl
shl
add
fnstcw
push
dec
sub
push
xor
stos
pop
push
imul
mov
arpl
mov
sbb
adc
shl
jnp
clc
mov
or
or
ds
pusha
and
push
adc
pop
sbb
test
jp
ja
daa
mov
sub
movs
xor
adc
jl
aaa
int
mov
or
dec
sub
mov
mov
nop
ret
mov
je
lea
arpl
xchg
cmp
enter
xor
movs
lds
mov
mov
(bad)
mov
les
ret
fisubr
pop
mov
les
jp
lods
imul
sub
cmp
lds
mov
stc
movs
mov
add
sbb
retf
push
clc
cli
ja
aaa
fsub
sub
add
xor
stc
mov
inc
pop
cmps
scas
test
lods
sti
das
pop
outs
les
jae
in
dec
adc
cld
pop
and
mov
int3
push
cdq
jnp
int
jl
or
dec
fwait
inc
xor
adc
lds
or
jno
lods
loop
push
pop
sub
push
test
jp
cmp
or
adc
je
fsub
repz
cmps
xlat
sbb
movs
ins
xor
sbb
inc
rcl
out
xlat
shl
mov
jnp
sub
rcr
mov
pop
jno
shr
dec
xor
mov
pop
xor
adc
lods
xchg
mov
aas
inc
and
xor
scas
cmp
pop
ins
mov
adc
je
les
ret
xchg
aaa
add
repnz
sub
jle
or
push
pop
fsub
sbb
dec
push
jno
pop
inc
repnz
cdq
fstp
xchg
ds
aaa
repnz
cli
cmp
test
ficomp
push
addr16
xor
mov
mov
inc
in
and
sbb
xor
adc
stos
daa
icebp
inc
pop
mov
jmp
repnz
inc
sbb
jno
pop
sar
popa
imul
and
rol
push
scas
popa
(bad)
out
inc
pop
mov
cmp
jns
pop
ja
mov
pop
mov
fld
dec
xor
das
call
mov
fimul
jl
cmc
in
test
add
fnstcw
jae
lods
cs
lock
das
outs
sub
jbe
(bad)
rol
jg
cmps
cmp
idiv
xchg
xchg
mov
pop
stos
cld
add
mov
ja
sbb
adc
jecxz
push
popf
and
retf
out
pop
call
addr16
iret
mov
adc
icebp
into
push
jnp
sti
leave
mov
mov
push
dec
jo
push
push
int
adc
mov
fxch
std
mov
loop
push
imul
jg
data16
scas
sub
push
lock
mov
pusha
xor
je
jae
push
adc
fwait
mov
xchg
fnsave
cmp
mov
ins
mov
pop
push
aaa
push
pop
sub
(bad)
pop
sub
inc
sbb
(bad)
leave
out
leave
mov
mov
sti
cmp
scas
hlt
and
mov
xchg
xchg
cmps
iret
sbb
je
xchg
mov
mov
shl
aaa
mov
and
data16
mov
jmp
rol
sub
xchg
add
and
outs
mov
mov
enter
push
dec
repz
test
jl
and
js
call
iret
sub
daa
and
inc
push
mov
push
sub
lea
mov
ins
out
xchg
gs
mov
jne
lea
mov
cmp
jne
xchg
inc
mov
into
fadd
jge
mov
pop
sti
les
cmp
mov
pop
loop
(bad)
stc
(bad)
cmp
pop
ja
leave
sbb
sub
iret
xor
into
cmp
daa
sub
movs
mov
aam
inc
movs
scas
ret
add
call
das
scas
aam
add
or
aas
sar
mov
xchg
scas
cmp
or
mov
aas
jb
push
(bad)
or
popf
add
push
pop
mov
cs
xchg
das
jnp
leave
mov
aad
pop
ds
cmp
or
outs
mov
fstp
xchg
inc
outs
scas
aam
mov
dec
and
sub
xchg
inc
pop
xor
push
test
xchg
mov
pop
add
mov
aaa
imul
inc
mov
sub
cs
dec
cmp
popf
in
shl
mov
xchg
sub
pushf
fs
loopne
leave
xor
ret
repz
cli
cmp
xchg
or
es
cli
ret
daa
mov
inc
fld
mov
cld
aas
mov
jle
dec
inc
cdq
lds
js
retf
inc
or
mov
pop
int3
or
dec
clc
mov
daa
jne
push
add
mov
jo
ficomp
push
(bad)
and
xor
lea
and
arpl
mov
setge
lahf
jge
jb
jmp
mov
adc
js
and
and
xor
add
xor
sbb
pop
sbb
pop
(bad)
shld
(bad)
sbb
je
fisubr
mov
outs
retf
xchg
dec
mov
call
adc
shl
sbb
paddsw
in
mov
xor
pop
dec
jmp
adc
lock
mov
push
inc
push
test
xor
jne
jecxz
pushf
pop
popf
shr
sbb
sahf
or
sbb
ret
sar
hlt
sbb
clc
(bad)
clc
repnz
je
and
(bad)
push
retf
mov
lods
and
js
add
push
or
and
mov
clc
rol
fidiv
repz
mov
xor
add
dec
lds
adc
movs
push
xchg
mov
jp
sub
dec
sub
call
inc
or
arpl
je
push
or
sub
pop
cmc
add
gs
jecxz
cli
aam
mov
retf
mov
push
push
data16
push
adc
out
sti
neg
xchg
mov
pop
sub
test
sti
in
pop
sub
sub
dec
xor
mov
xchg
jg
repz
hlt
popf
jbe
imul
mov
sub
xchg
jl
inc
mov
mov
xchg
loopne
push
test
loop
aas
xor
test
sbb
push
je
inc
out
cmps
cmc
shl
ss
mov
fwait
fwait
cmp
xchg
adc
inc
(bad)
mov
or
push
and
add
mov
xchg
popf
(bad)
ins
and
jmp
call
xchg
fdiv
and
lods
push
jb
ins
(bad)
mov
out
mov
arpl
dec
xchg
cdq
pop
retf
loop
enter
fsubrp
mov
popf
sbb
mov
(bad)
mov
xchg
push
xor
pushf
inc
std
fisttp
inc
mov
pushf
dec
(bad)
shr
out
inc
lahf
pop
xlat
adc
loope
jb
push
out
mov
pop
(bad)
in
addr16
sbb
cmp
push
idiv
cmp
(bad)
inc
push
mov
ror
test
retf
xchg
and
cmp
cmp
cmc
jle
dec
pop
fbld
repnz
mov
bound
loop
adc
pop
rcr
mov
out
lea
cli
add
mov
(bad)
adc
fcomp
ret
retf
adc
mov
inc
aad
nop
add
(bad)
mov
je
aam
jle
loopne
dec
retf
addr16
outs
mov
fistp
dec
ja
jo
jne
(bad)
ss
scas
add
ror
push
cmp
mov
xlat
cmp
cmp
sbb
and
stc
ja
cmp
mov
scas
push
cs
sbb
imul
mov
lods
mov
mov
inc
sub
inc
jae
push
mov
dec
sbb
je
icebp
mov
cmp
adc
int
or
out
pop
push
jmp
jbe
jae
or
adc
data16
das
into
daa
jmp
in
sbb
stc
mov
stc
ds
fild
mov
mov
ret
popa
mov
sub
imul
ss
dec
mov
in
mov
push
shr
and
jae
push
pop
jb
mov
jp
in
cmp
push
sti
dec
in
sbb
adc
or
mov
jns
aas
xchg
mov
pop
dec
push
dec
push
ror
adc
int
jge
neg
out
addr16
pop
std
call
sbb
pusha
mov
jmp
aas
jmp
xchg
outs
and
into
leave
neg
add
xlat
fistp
bnd
enter
xchg
inc
inc
shr
sub
add
and
scas
dec
fistp
lahf
pop
sar
int
or
mov
fiadd
inc
into
int3
and
add
js
aaa
lahf
sbb
and
cmp
outs
cmp
pop
mov
shr
test
sub
pop
vmwrite
rol
(bad)
cmp
xchg
outs
sti
jl
call
scas
outs
sbb
test
lock
imul
sbb
imul
dec
jns
test
jns
bound
fstp
pushf
adc
out
aam
and
imul
dec
(bad)
scas
fisubr
adc
stos
adc
test
cld
gs
sbb
jo
pop
out
jle
lods
lods
loope
ss
cld
sbb
(bad)
call
loop
ds
lds
loopne
cmp
jl
cmp
cli
iret
pop
jae
lock
rcr
push
outs
and
pop
daa
sbb
inc
and
mov
in
mov
test
imul
pop
(bad)
mov
stos
or
or
sub
retf
icebp
(bad)
cmp
fmul
in
mov
push
pushf
aaa
push
sub
lea
std
jecxz
mov
nop
mov
and
fwait
xlat
sub
pop
jmp
ins
sub
mov
mov
cli
mov
push
jge
sbb
dec
xlat
inc
pop
pop
jo
daa
(bad)
sub
xor
test
dec
dec
loopne
dec
int
pop
xchg
inc
adc
jno
cmc
inc
xor
mov
sbb
popf
repnz
icebp
out
adc
xor
mov
fwait
inc
sbb
inc
fmulp
push
lahf
adc
push
xor
(bad)
fptan
mov
inc
imul
push
cli
test
adc
push
(bad)
push
xchg
pop
cmp
dec
movs
rcl
js
ja
iret
loop
xchg
sbb
jge
or
pop
shl
and
les
jne
in
xchg
inc
imul
in
pop
xlat
arpl
adc
pushf
fst
enter
xor
adc
cmc
sub
sbb
jo
enter
inc
lahf
repnz
not
aad
ja
(bad)
shl
jp
mov
push
rol
push
cmp
mov
add
or
loope
jle
mov
loope
shl
sbb
daa
push
jle
(bad)
fisubr
push
mov
aam
sbb
aaa
ss
ins
xchg
xor
imul
sahf
and
mov
pop
fs
and
cld
retf
and
adc
pusha
imul
scas
mov
test
dec
repz
outs
cmp
imul
dec
push
mov
call
ss
or
ret
xchg
in
push
sbb
push
into
and
fstp
jmp
dec
or
popa
xor
daa
xor
cs
mov
mov
adc
and
mov
and
aaa
push
je
push
adc
pop
sub
push
arpl
shl
gs
cwde
into
(bad)
ss
jae
xchg
imul
adc
scas
pop
push
add
or
dec
ss
mov
mov
pop
mov
mov
scas
sbb
sub
add
scas
sub
mov
jo
(bad)
cmp
jno
hlt
pop
(bad)
add
into
xchg
pop
push
repnz
sub
std
dec
mov
fisttp
test
jne
pop
jle
adc
dec
cmps
inc
jbe
ficomp
jl
popa
pop
mov
sub
in
call
sbb
adc
shl
push
jecxz
fistp
push
fsqrt
pop
aad
pop
int
in
jnp
lahf
cmp
outs
test
call
jg
aas
hlt
cmp
aam
fcmovnb
and
inc
dec
dec
mov
dec
push
es
push
jns
push
cmp
pusha
inc
cld
fst
sbb
aaa
addr16
imul
lods
or
sbb
mov
mov
adc
pop
aaa
enter
xchg
jae
popf
mov
andnps
or
and
in
mov
cmp
pop
stc
or
sahf
(bad)
scas
inc
mov
push
int
pop
ins
or
dec
or
fidivr
fs
mov
aad
into
in
lahf
ror
fdivr
pop
loopne
add
lock
jmp
ror
add
addr16
arpl
push
jl
add
push
popf
jge
add
sbb
cmps
pop
adc
scas
aas
call
cmp
inc
iret
adc
(bad)
repz
rcl
sbb
fild
mov
lock
mov
(bad)
out
fidiv
push
mov
xchg
push
dec
xchg
jmp
call
jl
mov
xchg
jmp
int
push
jne
and
cs
push
mov
out
jno
xchg
xor
dec
pop
sub
adc
test
enter
in
sar
pusha
xchg
nop
test
sub
sbb
fcomp
pop
loope
push
jmp
repnz
sub
ret
push
mov
pop
xchg
or
pop
out
cmps
ja
cmc
add
or
mov
aaa
xchg
(bad)
sub
pop
aaa
fstp
add
mov
lods
jle
outs
stos
outs
aaa
aaa
sub
retf
dec
(bad)
ds
and
cmps
xchg
xor
mov
repnz
rcl
loope
inc
stos
push
push
out
aad
adc
lock
lds
les
push
pusha
(bad)
cld
movs
dec
(bad)
hlt
cmps
xchg
cmps
(bad)
or
xchg
(bad)
pushf
mov
push
icebp
loopne
mov
sbb
xchg
mov
std
ja
push
add
sub
(bad)
cmps
or
adc
sub
dec
sbb
mov
rcr
mov
js
pop
clc
and
cmp
stos
inc
leave
jns
inc
xchg
fldenv
xchg
(bad)
fdivr
inc
(bad)
mov
mov
aas
xchg
adc
pop
fldcw
jo
test
sub
andnps
ret
je
pusha
or
(bad)
and
mov
xor
mov
into
dec
(bad)
aad
mov
int3
pop
adc
xor
enter
cli
lods
sbb
add
sub
jge
outs
mov
out
sub
mov
hlt
cmp
out
mov
retf
(bad)
jle
pop
jge
mov
imul
repnz
mov
cmc
retf
ins
push
fmul
sbb
out
mov
cmc
or
adc
(bad)
push
add
addr16
inc
dec
push
in
dec
lds
rcr
dec
nop
ins
mov
and
and
or
in
je
jmp
xchg
xchg
(bad)
out
stc
jmp
mov
out
jb
add
(bad)
(bad)
push
cmp
jmp
mov
leave
inc
jle
mov
cmp
mov
loop
sbb
repz
xor
ror
fisubr
scas
push
aad
into
movs
cli
jbe
lods
in
inc
adc
test
std
outs
loopne
push
jg
add
xchg
sub
arpl
loop
jp
retf
jecxz
xchg
fs
test
test
inc
cld
and
pop
xor
lock
retf
inc
push
nop
add
ret
inc
ins
lahf
enter
and
sub
retf
sbb
frstpm(287
jne
cmps
daa
xchg
push
inc
add
and
dec
lds
sbb
pusha
jo
jp
xor
fcom
mov
repnz
stos
inc
sbb
pusha
outs
inc
mov
outs
add
leave
mov
(bad)
enter
retf
data16
sti
mov
jnp
pop
div
xchg
sahf
jnp
or
sub
loop
iret
retf
cmp
(bad)
jbe
fnstenv
out
stos
out
adc
mov
jno
mov
sbb
jp
xchg
in
retf
sbb
push
jbe
pop
inc
das
push
or
sub
adc
mov
sbb
in
or
push
das
pop
mov
(bad)
xor
fld
(bad)
xor
mov
mov
or
scas
in
cmp
xchg
cmp
sub
rol
mov
ds
ins
in
mov
inc
cmp
jmp
jo
fistp
push
xchg
xor
pop
scas
adc
adc
and
push
ins
loop
cmp
inc
pop
cmp
div
cmp
push
scas
es
push
xchg
add
out
mov
or
stos
icebp
repz
clc
daa
dec
cli
pop
daa
mov
mov
retf
and
cmp
xor
inc
mov
das
push
pop
jecxz
movs
cmp
loopne
ins
and
lock
ficomp
inc
bound
and
mov
shl
push
mov
xchg
dec
shr
mov
jns
jge
shl
xor
adc
dec
sub
adc
shl
sbb
arpl
ret
lock
jmp
and
mov
sub
mov
enter
or
cmps
shl
push
push
sub
add
test
test
lea
repz
sbb
(bad)
in
(bad)
rcl
lds
sub
push
jae
arpl
sti
inc
push
add
xchg
sar
popf
inc
cmc
mov
out
arpl
hlt
ror
mov
inc
arpl
push
mov
pop
xchg
in
gs
sbb
repnz
dec
dec
int
pop
out
dec
leave
ins
call
jns
cmp
loop
addr16
dec
test
jno
mov
sbb
std
or
outs
arpl
sub
div
sbb
jbe
div
adc
rol
mov
or
shr
or
stos
dec
cmps
mov
mov
dec
mov
sti
mov
jne
push
jne
loopne
ins
jg
xlat
dec
xchg
shr
pushf
mov
leave
push
int
js
adc
cdq
xor
xchg
push
daa
pop
pop
sbb
pop
jnp
mov
scas
test
sub
xchg
jnp
xchg
nop
(bad)
cmp
les
scas
ret
(bad)
jg
dec
ins
lea
fwait
ret
jmp
mov
faddp
fs
xor
jp
xor
sbb
movs
es
sar
xchg
mov
leave
(bad)
call
xchg
cmps
push
loop
mov
adc
cwde
mov
jmp
ret
out
pop
aam
in
inc
test
push
je
or
mov
push
movs
icebp
test
outs
dec
lsl
mov
mov
div
dec
pop
rol
lock
js
aaa
cmp
and
adc
or
dec
push
pop
scas
retf
(bad)
jns
int
adc
call
lods
int3
cmps
mov
dec
or
sub
dec
mov
idiv
popa
dec
ret
dec
imul
enter
sysret
repnz
lock
in
jns
jg
pop
int3
stos
repnz
(bad)
retf
add
mov
xchg
(bad)
sbb
mov
cmps
add
cld
mov
mov
and
inc
es
sub
mov
xor
jge
not
sub
sbb
pushf
(bad)
xlat
clc
jno
mov
xchg
mov
xor
neg
cmc
and
cmp
pusha
mov
ja
mov
sub
pop
fwait
push
sub
or
inc
xlat
test
(bad)
aad
or
in
ds
jmp
out
(bad)
and
das
jp
test
adc
xchg
cmps
pop
lds
cmp
mov
repz
in
inc
adc
mov
push
dec
lea
jecxz
push
mov
ret
adc
xchg
cmp
inc
mov
jbe
lea
sahf
add
stc
hlt
in
mov
lds
retf
adc
xor
mov
shl
jb
jns
and
pop
sbb
clc
mov
push
and
cmp
pop
clc
add
cs
ds
add
addr16
mov
rol
loope
sub
sbb
jle
cmp
out
jbe
fisub
cmp
rol
cld
jbe
inc
xor
imul
lahf
loope
dec
push
xchg
jnp
xor
mul
enter
mov
je
adc
adc
mov
xor
in
adc
adc
aaa
jl
das
adc
add
sbb
enter
xchg
push
push
mov
ror
outs
(bad)
mov
and
aad
jnp
pop
sbb
jge
lea
stos
and
cmps
gs
inc
mov
mov
push
fbld
jl
aas
test
and
adc
xchg
xor
retf
and
ins
pop
dec
inc
push
pop
repnz
je
xlat
fisttp
in
in
int
cmp
dec
ret
dec
sbb
add
fmul
adc
sub
pop
push
inc
in
lods
xor
shr
mov
sahf
and
mov
inc
test
and
xchg
or
sbb
cmc
mov
sbb
(bad)
(bad)
inc
(bad)
loop
push
xchg
fpatan
call
(bad)
repnz
sub
retf
lock
lea
fdivrp
dec
ja
xchg
pushf
mov
lods
(bad)
pop
hlt
push
inc
mov
inc
cmps
repnz
(bad)
out
push
data16
repnz
pop
std
lds
cmp
shl
sbb
and
dec
mov
cmc
stc
mov
push
dec
inc
es
or
dec
fucomi
mov
xchg
sar
sub
mov
mov
jnp
shl
div
push
jle
lea
jge
push
dec
mov
dec
and
pusha
sub
jp
and
jl
in
aad
shl
sbb
scas
mov
xor
adc
cmps
inc
cli
pop
dec
pop
mov
push
adc
stos
lahf
xchg
sub
dec
lea
push
sub
icebp
aas
call
add
or
or
data16
pushf
shl
dec
(bad)
leave
ss
or
xor
cmp
aaa
rcr
fs
(bad)
addr16
xor
scas
or
retf
or
or
mov
cmp
les
mov
mov
in
jecxz
das
push
scas
push
xchg
fwait
push
out
sbb
in
rsqrtps
or
pop
mov
xchg
cmp
dec
push
clc
push
dec
scas
les
or
sar
sbb
jmp
(bad)
cmp
or
pop
pushf
add
fnsave
mov
dec
arpl
mov
dec
pop
mov
push
push
imul
addr16
jnp
xchg
loop
sbb
xchg
les
dec
push
mov
xchg
and
(bad)
xlat
fmulp
xchg
cmps
pop
shr
mov
and
lods
and
cdq
fld
mov
sub
imul
or
call
or
xor
pop
das
stos
or
out
add
xchg
ffreep
jecxz
lds
push
outs
jl
ja
sub
cs
mov
aad
es
cmps
sub
neg
xchg
jae
es
lods
xlat
and
les
ds
push
and
adc
push
mov
test
inc
add
cwde
enter
(bad)
dec
inc
jg
mov
hlt
mov
cmp
int3
cs
ins
gs
retf
hlt
fcomp
leave
das
out
(bad)
fnstenv
aaa
dec
pop
pushf
nop
imul
(bad)
in
in
(bad)
sti
adc
inc
mov
sub
mov
sbb
pushf
test
inc
jmp
xchg
and
push
and
jne
rcl
imul
fbstp
sub
ds
outs
in
push
stos
out
xchg
call
sub
ss
neg
int
dec
enter
xchg
jmp
outs
adc
cmps
sub
xchg
pop
movs
mov
sub
rcr
stc
shr
push
stc
daa
cld
(bad)
adc
inc
xchg
inc
imul
loope
mov
loope
jns
pop
(bad)
jmp
jo
push
or
fild
mov
sti
or
shr
js
sbb
loope
jmp
fs
xlat
lds
mov
psrld
shl
aas
cwde
mov
movs
jecxz
pop
call
mov
popa
fs
sbb
ror
adc
cmp
fiadd
cmp
sub
aaa
jg
lods
push
inc
retf
mov
test
pop
inc
stc
fmul
and
pop
out
mov
ins
in
out
pop
mov
call
fsubr
cdq
mov
test
int
stos
mov
jno
es
cmp
bound
arpl
fidivr
outs
pushf
mov
ds
ins
xlat
sub
adc
addr16
iret
cs
hlt
pop
sub
jp
mov
and
xchg
mov
cmp
into
cli
add
mov
(bad)
cmp
daa
add
outs
sbb
nop
pop
adc
daa
inc
jo
or
xor
jmp
mov
neg
ror
fisub
cld
scas
bswap
cli
pop
push
pop
sbb
adc
pop
aad
leave
bound
ins
mov
icebp
jae
xor
jnp
add
pop
loopne
sub
call
mov
fisub
out
or
push
xchg
add
push
popf
fnstcw
mov
or
mov
lock
mov
js
ret
das
(bad)
std
adc
shl
sbb
xchg
xchg
test
pop
fisttp
fisub
test
mov
xor
cmc
cld
stos
cmps
lods
jo
dec
xchg
pop
(bad)
push
xor
cmp
loopne
xchg
cmp
mov
jno
retf
jge
xor
jns
push
sub
dec
mov
outs
loop
out
fidiv
sub
popa
repz
jo
pop
mov
and
sub
or
push
mov
out
imul
fcom
pop
sub
inc
imul
pop
frstor
fldenv
call
in
daa
test
test
in
jge
test
and
sbb
leave
or
call
mov
xchg
cwde
push
clc
je
stos
mov
sbb
cdq
jge
shl
pop
out
cmp
ds
bnd
jp
stc
mov
dec
jl
mov
outs
sbb
fst
sub
outs
out
or
and
xchg
loop
pop
push
dec
dec
adc
dec
xor
adc
adc
test
cmp
sub
stos
or
mov
cmc
dec
ins
inc
jge
and
cmps
inc
or
repnz
mov
xchg
fmul
push
lock
sar
pushf
mov
pop
push
fwait
or
add
call
jg
repnz
or
mov
mov
push
das
(bad)
(bad)
into
mov
and
adc
data16
in
mov
test
pop
xchg
je
xchg
xor
or
adc
loopne
adc
push
or
daa
or
pop
push
gs
movs
mov
and
pop
adc
add
repz
arpl
cmp
(bad)
xchg
int3
cmp
(bad)
xchg
sub
jo
mov
pop
sub
cmp
and
jnp
loopne
in
mov
xchg
sbb
dec
and
sub
stos
adc
out
xchg
dec
jbe
jecxz
xchg
xchg
or
jl
aaa
or
mov
cmc
rcl
pop
push
push
ss
sbb
fwait
pop
adc
add
in
in
mov
retf
jb
leave
std
mov
pop
sub
pop
and
pop
retf
pop
inc
pop
ret
bnd
xor
sbb
xor
in
jne
mov
mov
sub
or
pusha
int
inc
xchg
pop
jns
fs
neg
icebp
sbb
dec
xchg
(bad)
(bad)
sbb
fcomp
mov
jne
mov
and
std
cmc
sbb
iret
push
std
rcl
mov
dec
or
test
int
fisubr
mov
push
pop
add
call
xchg
scas
(bad)
cmps
push
into
jl
mov
xchg
lds
clc
daa
imul
xor
and
adc
rcr
add
sub
mov
mov
fdivr
pop
lea
dec
xor
sbb
adc
push
add
cli
adc
xchg
mov
inc
test
les
pop
adc
cmp
adc
xor
repnz
inc
test
out
dec
or
outs
fwait
inc
stos
mov
pop
jl
push
jmp
pop
leave
(bad)
in
cmp
or
comiss
pop
(bad)
in
mov
ins
cmp
shl
dec
inc
(bad)
push
nop
icebp
push
push
loope
jno
mov
xchg
xchg
and
and
stos
or
push
xor
invlpg
xchg
push
sub
jnp
push
test
sbb
(bad)
pop
idiv
mov
cmps
pop
(bad)
clc
ins
ins
mov
add
add
mov
mov
mov
test
test
cmp
pop
addr16
jb
lock
inc
mov
bound
pusha
mov
or
mov
stos
mov
mov
push
lea
inc
sub
xchg
xor
repnz
or
xor
call
test
repz
adc
mov
mov
out
cwde
pop
xor
mov
cld
cs
dec
rcl
(bad)
movs
inc
aad
xchg
ret
repnz
lds
pop
loope
mov
inc
lods
not
addr16
pop
mov
inc
out
je
mov
inc
mov
add
mov
mov
lahf
mov
or
xchg
ror
out
mov
fs
movs
add
fsub
mov
xor
mov
adc
or
icebp
xor
dec
jbe
rcl
push
or
add
xchg
jns
and
das
lds
leave
xor
fbld
xor
cmp
mov
jne
int3
xor
inc
jne
retf
mov
sub
jp
ss
ror
mov
or
mov
(bad)
push
jns
cld
fisttp
xor
das
adc
or
scas
pop
push
in
mov
js
loope
pop
nop
mov
adc
jmp
daa
mov
dec
adc
(bad)
scas
and
jno
gs
inc
stos
cmps
mov
push
push
push
into
pusha
pop
and
xchg
idiv
mov
scas
das
fneni(8087
(bad)
into
loop
ds
daa
in
inc
mov
jecxz
ss
sub
movs
int
fsubr
aas
imul
cmp
jae
push
dec
in
repnz
(bad)
xchg
fild
mov
test
and
and
sti
dec
aam
lock
jnp
sbb
adc
ds
mov
js
pushf
cmp
out
sub
ret
xchg
sub
sub
sub
adc
es
pop
repnz
pop
dec
fsubr
add
mov
push
shl
and
fldenv
pop
cwde
clc
std
inc
in
push
in
xlat
jmp
pop
lds
pop
movs
push
pop
inc
mov
pop
arpl
in
ds
std
rcl
dec
add
pop
xor
iret
adc
es
adc
sub
int3
mov
(bad)
call
mov
mov
fmul
cld
adc
xchg
into
popa
lods
in
xor
or
leave
call
pop
or
gs
inc
push
xchg
xchg
ret
add
jne
sub
and
pop
leave
fwait
jae
int
mov
inc
pop
(bad)
cmc
mov
jmp
xor
aam
cmp
mov
leave
sti
adc
fwait
xor
das
xor
fs
repz
xchg
dec
adc
fsub
retf
xor
popa
sub
mov
cmp
or
imul
jmp
cvtps2pd
test
jmp
or
xchg
sahf
push
fdiv
pop
and
xchg
push
adc
out
mov
std
jns
sub
rcl
and
mov
push
push
mov
dec
jge
and
add
or
mov
(bad)
jnp
push
daa
cmp
cmps
movs
loop
das
inc
or
sub
or
dec
sbb
popa
mov
(bad)
pushf
sub
dec
push
test
cmp
scas
daa
clc
sub
and
(bad)
ins
add
loop
xchg
xchg
out
call
cs
mov
cmp
cmp
cmc
das
cli
xlat
icebp
xor
ret
movs
xchg
pop
lea
cmps
jge
pop
sub
pop
lds
push
popf
clc
sub
out
push
sub
cmp
ret
call
sahf
pusha
dec
movs
xchg
inc
xchg
repz
popa
sub
or
sub
aam
ror
mov
iret
inc
std
ret
popa
xcrypt-ofb
cmps
sub
mov
mov
inc
lods
mov
dec
popf
enter
jecxz
and
push
jb
fsub
xchg
out
ja
or
retf
cmc
pusha
push
out
movs
retf
lahf
loope
loop
add
push
cmp
xor
outs
sbb
lods
rcr
pop
in
scas
cmc
pop
xchg
je
sub
lea
sbb
ret
test
ins
mov
and
scas
push
std
mov
jb
adc
mov
inc
fnstcw
aaa
repz
std
nop
mov
push
push
out
dec
and
test
and
or
mov
jecxz
(bad)
(bad)
lods
daa
mov
mov
scas
rcr
xchg
mov
cmp
xor
dec
push
jnp
out
retf
jmp
int3
inc
add
inc
outs
sub
(bad)
test
xor
stc
lods
ret
or
daa
pop
jg
rol
push
icebp
cmpxchg
es
jl
(bad)
or
sti
dec
mov
retf
xor
fs
push
cdq
jne
or
jbe
xor
xor
fs
push
mov
jp
push
or
xor
mov
dec
dec
xchg
daa
mov
ret
aas
cmp
adc
cs
imul
cmp
mov
jmp
dec
mov
ds
cmp
leave
scas
or
shr
bound
sar
sub
adc
push
or
add
sbb
out
dec
or
or
and
cmp
jns
sub
mov
lds
mov
xor
jno
dec
out
mov
dec
imul
mov
jnp
int3
rol
sub
fsub
jmp
push
adc
push
fidivr
fmul
or
and
lods
mov
ins
mov
cmp
out
xlat
loopne
rcr
push
adc
push
fistp
daa
inc
inc
inc
(bad)
in
ins
mov
and
inc
lods
pop
lock
add
fld
push
pop
pop
or
stc
(bad)
sbb
lods
cli
sub
lock
mov
push
hlt
dec
lahf
sub
ja
arpl
jl
inc
mov
dec
ficom
xchg
mov
cmps
sti
addr16
xchg
mov
xor
(bad)
(bad)
adc
sub
xchg
pushf
mov
push
jge
test
xor
scas
dec
dec
and
sti
test
sub
jge
pop
aam
pop
dec
xor
outs
sbb
cmp
scas
shl
cwde
mov
adc
fsubr
mov
push
hlt
mov
sar
cs
mov
xlat
pop
fsub
loope
das
movs
push
add
xchg
adc
loopne
sbb
xor
mov
jns
push
pop
lods
sbb
mov
sbb
xor
mov
shl
jp
add
setnp
add
sub
test
cmp
imul
std
aaa
xchg
cmp
daa
dec
push
test
(bad)
jnp
ins
iret
add
cmps
jmp
inc
(bad)
xchg
sti
add
dec
ret
cs
inc
rcl
inc
pop
mov
test
mov
mov
and
xchg
inc
(bad)
popa
test
dec
addr16
sbb
jbe
pushf
cmp
or
dec
aas
pop
ret
add
jmp
addr16
pushf
retf
imul
fwait
pop
fmul
imul
xchg
pop
or
xor
jp
out
cmp
pop
das
and
push
fstp
jne
push
push
xor
aam
dec
cmp
loopne
std
inc
inc
xchg
pop
ja
mov
pusha
je
mov
pop
in
aam
jge
retf
aas
or
(bad)
adc
sbb
je
dec
inc
ror
xlat
xchg
inc
add
adc
sbb
sbb
xchg
and
xor
sbb
(bad)
jmp
mov
pop
lods
stc
sub
(bad)
ds
call
(bad)
cdq
stc
mov
xor
retf
(bad)
sub
(bad)
(bad)
cmp
inc
xor
ins
pop
(bad)
enter
rcr
pop
lods
ins
push
(bad)
jo
jmp
xchg
xor
dec
xchg
ins
inc
push
push
daa
pop
mov
dec
sahf
push
push
mov
push
jbe
loopne
mov
pop
pushf
aam
mov
fld
pushf
cmp
enter
ficomp
add
les
jmp
je
pop
outs
pop
mov
test
push
cmp
fcomi
test
and
xchg
inc
push
jp
aaa
xor
cmp
popf
les
out
(bad)
lea
push
jmp
sar
and
jmp
mov
fistp
in
jae
mov
pushf
xor
dec
jne
mov
les
adc
fld
dec
aam
and
call
inc
aam
mov
cmp
xor
jno
and
out
data16
pop
jbe
fimul
rcr
popf
pop
mov
or
ja
pop
dec
lods
or
jb
rcl
mov
jg
aas
pusha
(bad)
js
xor
xor
clc
ja
xor
ficom
div
pop
sub
ficomp
fwait
mov
add
mov
loope
fild
push
sbb
sbb
push
leave
hlt
je
rol
sbb
jno
sub
inc
dec
pusha
aas
loop
je
adc
iret
mov
lahf
xchg
pop
cmps
div
retf
add
fistp
add
(bad)
lods
imul
push
out
mov
add
fisub
cli
cdq
xchg
pop
(bad)
popa
xor
es
push
add
mov
adc
in
cmp
sti
rcr
dec
ret
push
into
sahf
dec
xchg
push
dec
adc
pop
rcl
ror
xchg
sub
push
test
int
lds
mov
call
pushf
call
inc
ficomp
sub
iret
jno
ins
cmp
popa
in
jae
and
or
outs
xor
fnstsw
pushf
xchg
fsub
ret
neg
xchg
sbb
mov
call
add
shl
mov
inc
mov
push
out
int
call
dec
(bad)
mov
pop
push
mov
jle
call
ins
xor
pusha
jbe
push
and
call
mov
dec
cdq
sub
mov
mov
loopne
inc
ss
mov
cmp
sbb
pop
and
sbb
xchg
sti
xchg
mov
mov
sub
mov
not
or
add
sahf
into
pop
jl
(bad)
push
bound
mov
fistp
or
sahf
inc
lock
(bad)
add
sbb
sub
xchg
imul
test
movs
add
adc
inc
jno
add
xor
(bad)
stos
jae
or
mov
mov
jmp
jae
pop
mov
adc
loope
pop
daa
xchg
add
addr16
push
sub
call
in
repz
movs
sbb
aam
ss
push
push
popf
mov
cmps
xor
std
fisubr
pusha
cmp
icebp
mov
fcom
fldenv
sbb
ret
and
fnstsw
imul
fistp
fdiv
cmp
hlt
test
vpconflictd
mov
xchg
xchg
fdivr
sbb
and
aas
ret
push
pop
add
dec
movs
xor
aad
dec
or
lahf
fs
xor
mov
pop
or
jne
addr16
pushf
cwde
imul
lahf
adc
jo
sbb
cmc
mov
and
inc
das
and
xchg
jns
inc
mov
fmulp
add
inc
into
out
cmp
sbb
push
pop
pop
outs
jg
and
inc
retf
pop
pop
push
cld
and
je
push
push
push
dec
add
(bad)
push
cmc
jb
jno
ret
mov
leave
jl
mov
cmp
inc
aam
in
pop
fsub
hlt
fmul
int
cmps
stos
sbb
(bad)
xchg
xchg
lock
mov
jns
ss
test
aaa
push
scas
loope
shr
cs
sub
leave
mov
inc
jmp
frstpm(287
inc
pushw
inc
test
out
repnz
ret
dec
inc
inc
lea
cmp
sub
dec
and
mov
adc
ja
xchg
sub
enter
jp
jle
xchg
pop
mov
adc
pusha
xchg
or
rol
loope
push
jno
mov
inc
cmp
jg
imul
push
dec
jp
xchg
pop
rol
ins
sar
out
imul
call
loop
jge
push
movs
jecxz
push
mov
sbb
aas
adc
mov
cwde
mov
xchg
or
cmc
mov
xor
sub
ror
mov
sahf
fnstcw
push
push
enter
cmp
fs
(bad)
enter
stos
aam
push
adc
pop
leave
dec
xor
ins
daa
nop
fisttp
hlt
push
rep
inc
lods
push
aas
mov
loopne
sbb
inc
dec
pop
fimul
pop
mov
ficom
push
(bad)
adc
popa
mov
lahf
jecxz
mov
sbb
pop
ds
into
pop
ins
test
mov
mov
stos
das
add
rcl
stos
mov
jg
jnp
cmps
xchg
popa
push
test
push
xchg
test
mov
in
shl
xor
dec
js
mov
mov
aad
gs
pushf
adc
or
addr16
mov
int3
dec
sub
cmp
xchg
js
repz
mov
stc
hlt
call
xchg
xchg
lea
loopne
mov
sar
pushf
jo
pusha
or
rol
xor
clc
icebp
mov
xlat
sar
adc
std
movs
cmp
mov
lods
pop
mov
aad
add
cmc
push
jbe
mov
hlt
jb
ror
(bad)
jecxz
fld
sub
into
leave
repz
fild
inc
xchg
pop
mov
and
ud0
dec
mov
mov
ins
push
xor
add
aaa
ds
pop
ss
aaa
aad
dec
sbb
(bad)
lock
mul
rcl
mov
scas
xor
aam
ja
mov
push
sti
dec
add
xchg
xor
xchg
jp
and
iret
mov
jns
stos
or
sbb
movs
mov
mov
jl
add
mov
iret
and
cmps
sbb
mov
mov
cmp
mov
popa
sar
inc
mov
mov
lahf
xchg
dec
mov
fbstp
sar
xor
pop
test
and
aas
sbb
jae
icebp
cli
mov
xchg
adc
xchg
jae
gs
adc
stos
mov
(bad)
mov
adc
int3
arpl
outs
sub
jg
iret
gs
sub
hlt
ins
xchg
addr16
in
lea
or
(bad)
cmp
jg
hlt
mov
push
jns
adc
loope
dec
cmp
aad
mov
fstp
mov
popf
xor
in
cmp
iret
lahf
sub
push
mov
and
movs
ror
(bad)
mov
fsubr
out
add
mov
mov
outs
in
xlat
and
xor
outs
lods
leave
cmps
repz
mov
adc
in
cwde
add
lods
pop
ret
pop
leave
and
lahf
sub
add
lock
loop
inc
in
leave
test
xchg
pushf
lods
mov
cdq
mov
mov
out
jmp
(bad)
jl
aad
jmp
sar
rcl
or
xchg
call
addr16
xlat
sub
mov
cld
xchg
sub
add
aam
or
test
xchg
clc
cmp
popa
and
push
jno
jnp
out
dec
in
jbe
leave
popf
cmp
fwait
movs
rol
or
leave
stos
dec
(bad)
lods
jecxz
arpl
(bad)
aam
push
mov
lods
sub
adc
movs
mov
cli
in
fcmovne
add
sahf
push
icebp
mov
add
call
pop
mov
(bad)
mov
lock
and
push
mov
loop
push
stos
mov
fdivr
sub
cmp
cmps
jo
das
jb
push
scas
jecxz
test
outs
icebp
sar
cdq
inc
out
mov
mov
(bad)
stos
dec
int
(bad)
call
mov
test
xchg
mov
scas
jae
cmp
inc
out
jmp
les
out
(bad)
lahf
inc
xchg
pop
cmp
xchg
and
repnz
add
xor
int
movs
test
bnd
sbb
dec
mov
pop
adc
sub
xor
mov
or
aaa
xchg
dec
and
fisttp
adc
push
or
cmp
movs
dec
push
bound
std
adc
jbe
test
daa
adc
mov
cmps
jl
add
sub
push
sbb
(bad)
gs
(bad)
repnz
test
add
sbb
les
je
push
push
sbb
mov
and
mov
push
dec
(bad)
pop
cmp
mov
popf
call
or
mov
sub
adc
icebp
shl
mov
mov
jns
push
int3
(bad)
mov
dec
je
in
daa
mov
and
mov
cli
mov
inc
jno
je
adc
cmp
rcr
std
mov
xchg
add
in
popf
ret
mov
xor
ret
adc
scas
jno
and
pushf
mov
jg
fdivr
out
fmul
gs
cwde
outs
and
pop
push
inc
ss
repnz
fwait
int
xchg
call
fidivr
push
fiadd
retf
and
mov
pushf
ret
dec
iret
mov
out
fisttp
xchg
pop
popf
lods
mov
jge
(bad)
fnstcw
pop
int
imul
jno
fst
xchg
sub
(bad)
div
call
cwde
sub
jmp
sub
lock
repnz
nop
xor
cmps
mov
shl
add
mov
pusha
outs
adc
jo
cmc
ja
push
popf
xchg
inc
fsubr
clc
sub
bound
lods
ja
stos
rol
inc
and
syscall
mov
dec
stc
adc
sbb
out
idiv
adc
mov
push
adc
dec
inc
cmps
mov
movnti
push
xchg
cmp
mov
inc
dec
mov
pop
popf
jge
call
add
inc
ret
aad
and
jne
pop
test
cdq
lfs
ss
jmp
mov
and
enter
lods
sub
inc
pop
clc
icebp
mov
adc
xchg
lds
in
jmp
xchg
and
das
retf
push
xchg
pop
jp
hlt
call
add
shr
mov
mov
fucomi
and
ja
pop
aad
push
in
mov
imul
popf
fild
mov
and
sub
inc
nop
loopne
mov
call
movs
pop
adc
dec
movs
bound
in
mov
sar
and
cmp
cs
out
mov
xor
sub
sub
xchg
dec
aas
push
cli
shr
and
cmp
int3
repz
xchg
fnstenv
je
xor
outs
leave
jp
pop
in
lahf
in
fcom
imul
mov
mov
cmp
xor
jnp
ins
add
iret
pop
(bad)
out
shr
lds
movs
cmp
out
ret
xor
jmp
loope
dec
cld
mov
push
and
pop
mov
ss
pushf
and
adc
xchg
lahf
jae
test
mov
mov
hlt
fsubr
mov
mov
arpl
mul
cmps
fidiv
inc
jno
mov
xor
std
sub
push
lods
lock
clc
into
mov
mov
les
aad
sbb
sub
aas
push
cmp
je
cmp
or
ja
enter
inc
imul
xor
lock
adc
mov
and
gs
dec
pop
pop
mov
jmp
sti
or
xchg
mov
sbb
aas
shl
and
inc
into
sub
imul
movs
lds
sub
sub
pop
out
xor
jae
out
std
inc
ja
sbb
ret
push
pusha
xor
repz
retf
push
aas
pop
mov
mov
pop
pop
pop
xor
mov
inc
xchg
inc
mov
js
mov
xor
repz
cmps
popa
pop
cli
ss
popf
in
test
call
xchg
aam
mov
(bad)
mov
cld
loope
pop
adc
adc
loop
xacquire
xlat
cmp
test
and
es
xchg
mov
fldcw
mov
ficom
jge
mov
jl
mov
test
(bad)
jo
sub
bound
test
mov
pushf
mov
int
push
rcr
retf
xor
or
cmp
outs
xchg
retf
in
and
push
adc
sub
mov
popf
imul
sub
in
jle
stc
push
sbb
jnp
push
lods
sbb
inc
fiadd
lods
cld
sbb
loopne
dec
inc
fs
call
inc
ins
sbb
lea
call
pop
stc
rol
leave
mov
into
dec
test
jb
cli
lods
adc
aas
(bad)
sti
out
sbb
lock
ins
(bad)
xchg
test
mov
jg
call
jns
dec
icebp
daa
jno
mov
shr
out
aaa
idiv
add
fild
push
dec
shl
mul
loope
test
mov
clc
adc
data16
outs
adc
jae
out
mov
jmp
mov
test
mov
call
mov
xchg
pop
scas
mov
jp
inc
push
stc
lahf
pushf
mov
push
pushf
pop
sbb
hlt
or
out
fdivr
xor
xchg
mov
cmp
rol
dec
frstor
cmp
fyl2x
sbb
sub
retf
jg
inc
js
xor
xor
inc
mov
cmc
and
or
adc
dec
out
loope
jbe
call
dec
xchg
push
jb
and
leave
rcl
mov
imul
dec
xchg
xchg
sbb
inc
call
push
movs
ror
mov
loope
mov
adc
stc
arpl
scas
and
aaa
imul
push
jne
xor
mov
xchg
sub
cmp
test
cmp
scas
cmp
add
icebp
ret
dec
inc
mov
dec
sbb
pop
cmp
mov
xor
pop
mov
enter
mov
dec
push
fs
jl
jle
and
sbb
fdiv
fwait
xchg
or
pop
daa
mov
psubsw
scas
ins
aam
fld
loop
xchg
movs
fs
je
inc
add
pop
add
xor
lods
cmp
mov
ins
mov
outs
js
inc
add
push
add
mov
jnp
or
rcr
out
movs
and
add
out
add
icebp
pop
xor
sbb
imul
jl
or
or
xchg
enter
mov
mov
into
jbe
push
or
push
pop
fild
adc
movs
pop
adc
mov
scas
add
mov
mov
mov
pop
scas
and
push
call
pop
sahf
stos
mov
scas
dec
sbb
stos
repnz
pusha
(bad)
(bad)
push
(bad)
push
jp
and
lock
cmc
cmp
test
xchg
adc
out
jne
and
cli
dec
in
gs
mov
call
outs
and
mov
lock
sahf
mov
cmp
outs
aad
cli
xor
mov
ins
mov
xchg
fnstenv
jp
add
int3
inc
cs
sbb
enter
bound
mov
xchg
jns
test
out
inc
daa
lock
lds
sbb
jns
sahf
pop
push
push
mov
mov
xor
lea
es
mov
jb
loopne
jmp
enter
pop
in
mov
push
push
cli
push
fcomp
(bad)
lea
rcl
lods
sbb
dec
int
mov
cmp
out
stos
adc
xchg
cmp
pop
inc
scas
pop
lock
cmp
xor
jae
jle
mov
mov
mov
iret
test
lods
dec
add
cdq
inc
mov
int3
repz
or
enter
rol
or
(bad)
xchg
lds
push
or
mov
jmp
cmps
pop
shl
cmp
add
repz
fistp
dec
push
les
inc
cmps
dec
(bad)
xlat
sbb
sbb
ret
xchg
dec
push
push
inc
(bad)
mov
fwait
aam
test
cwde
rol
adc
jle
add
dec
scas
push
xchg
inc
loop
and
lods
sbb
(bad)
jmp
push
jg
inc
outs
outs
mov
movs
jecxz
jo
mov
pusha
loope
or
out
mov
push
js
bound
iret
mov
fucom
pop
sti
lahf
sti
lods
jp
dec
and
jecxz
push
push
hlt
fdiv
mov
in
lock
clc
mov
mov
jae
jo
push
jnp
sbb
add
hlt
aas
dec
(bad)
retf
pop
jae
mov
repnz
aas
ret
dec
repnz
call
and
rcl
and
adc
fnstcw
add
xchg
(bad)
into
daa
outs
lock
sti
retf
pop
push
add
inc
xor
sti
jbe
mov
aad
pop
cli
repnz
in
int3
stc
outs
dec
enter
(bad)
mov
add
(bad)
dec
jp
and
inc
pusha
inc
mov
(bad)
cld
jne
in
xchg
loop
ret
fwait
test
enter
add
(bad)
or
and
xor
or
xchg
jg
(bad)
rcr
je
mov
xchg
sub
adc
stos
inc
adc
sbb
push
pop
cmp
mov
xor
jg
add
xor
outs
cmp
xor
pop
xor
dec
sbb
int3
mov
push
sbb
scas
xchg
out
loope
retf
dec
jae
fmul
sbb
mov
ror
ret
mov
jl
sahf
adc
mov
test
test
int
repz
out
mov
push
fwait
pop
mov
adc
inc
jne
ins
mov
jecxz
jmp
cdq
pop
icebp
adc
jo
mov
(bad)
jmp
cmps
fs
js
scas
dec
enter
stos
mov
pop
pop
dec
xchg
pop
adc
int3
mov
push
push
retf
out
push
mov
xor
cmp
call
jge
jne
dec
xor
pop
xchg
outs
xchg
mov
in
repnz
cmps
iret
rol
shl
ss
mov
fsub
cld
and
push
jl
add
mov
adc
pop
cli
das
ficom
arpl
bound
dec
rcr
mov
xchg
jbe
(bad)
adc
add
es
fldcw
imul
or
sbb
sar
retf
xor
sar
(bad)
fs
mov
inc
out
stos
outs
clc
or
sbb
mov
mov
pop
jo
mul
xchg
sub
imul
inc
(bad)
ret
dec
aam
fstp
xlat
jg
ret
add
cmp
pop
pop
cmp
ins
bound
enter
sahf
cmp
stc
xchg
inc
inc
sbb
adc
mov
and
into
push
loope
and
pop
sub
clc
in
stos
inc
mov
pop
fs
xlat
pusha
aas
mov
lea
pushf
mov
das
outs
nop
(bad)
jl
out
sar
icebp
mov
test
xlat
xchg
or
sahf
sub
les
hlt
cmps
mov
in
ror
out
mov
out
into
sub
mov
in
jne
push
inc
add
cmp
sbb
popa
dec
add
xor
fs
push
(bad)
mov
xor
mov
retf
fadd
iret
lock
dec
mov
mov
and
xchg
rcr
jbe
jge
xchg
call
nop
mov
lahf
sbb
in
sub
mov
ret
mov
mov
or
adc
adc
mov
cmps
mov
into
daa
icebp
cmp
cmc
(bad)
push
mov
cmp
ftst
jno
pop
cdq
mov
mov
inc
fdiv
jae
inc
aam
cmc
jbe
enter
and
int3
(bad)
dec
pop
loope
push
sub
movs
fld
test
imul
and
cdq
mov
sbb
inc
pop
mov
cmp
sbb
xlat
and
dec
shr
mov
push
and
fistp
js
inc
hlt
pop
popa
inc
pushf
lahf
aad
xchg
jg
xor
imul
xchg
fdivr
pop
in
clc
mov
in
loope
sbb
stos
leave
retf
or
faddp
cs
push
mov
stc
add
jge
or
xor
xchg
inc
loopne
and
cwde
pop
jbe
mov
mov
aad
cmp
imul
test
sbb
stos
pop
jb
and
jge
(bad)
cld
sti
stos
mov
loope
in
jae
ret
(bad)
out
lods
fild
fsubr
add
ret
sbb
(bad)
call
mov
pop
shl
mov
fist
sbb
dec
push
(bad)
and
sahf
fisub
ins
test
push
xor
push
and
xchg
arpl
mov
lods
int3
mul
sbb
out
jp
popa
mov
mov
push
push
out
lods
xchg
movs
push
sbb
icebp
mov
fadd
addr16
adc
or
rcl
pop
sbb
test
jnp
pop
cmp
dec
sbb
or
xor
daa
mov
fist
mov
and
pop
mov
inc
xchg
aas
pop
sbb
cwde
dec
dec
ja
cmc
dec
cmps
movs
pushf
sbb
ja
sbb
addr16
sti
test
push
mov
dec
push
in
fadd
adc
fistp
mov
adc
fwait
ret
hlt
cmp
stos
xchg
jmp
pop
shl
(bad)
cld
or
adc
fnsave
ret
xor
loope
and
retf
jae
fwait
cmp
icebp
in
data16
jle
(bad)
fchs
shl
cmp
mov
pushf
addr16
pop
aad
cli
sbb
pusha
in
in
xchg
shl
cmc
icebp
xchg
les
outs
ffree
pop
scas
cmp
ss
fwait
stos
mov
call
sahf
jmp
ds
push
jmp
ins
gs
ficomp
add
push
into
aam
test
out
jmp
ror
(bad)
out
and
or
addr16
hlt
movs
jl
push
cmp
dec
mov
fist
jae
je
xor
ins
ds
pop
pop
pop
or
inc
inc
cmp
pop
mov
sub
xor
es
scas
fiadd
mov
mov
int3
inc
das
stc
push
adc
inc
mov
xchg
es
pop
rcr
dec
(bad)
or
xlat
loop
xor
dec
jns
out
sub
xchg
pop
xchg
sbb
and
movs
retf
lods
push
popf
shl
add
mov
aas
movs
mov
mov
dec
pop
jbe
ror
push
addr16
ss
mov
call
sub
sar
mov
jne
cs
xchg
push
call
or
adc
movs
shr
je
pop
sub
enter
mov
or
dec
or
or
push
sar
rcr
dec
jnp
push
inc
div
ins
addr16
adc
jl
push
pop
push
push
mov
addr16
(bad)
push
mov
ror
dec
int
mov
retf
js
mov
mov
sar
dec
int
call
test
push
dec
dec
mov
add
arpl
push
push
xor
fdivrp
dec
sbb
pushf
mov
push
stos
add
xchg
pop
aaa
xchg
add
stc
nop
call
xchg
pop
pop
into
and
and
sub
jle
pop
js
pusha
imul
sbb
jo
arpl
add
sbb
loopne
aad
ror
add
mov
adc
push
stos
daa
adc
mov
stos
xchg
test
int
jge
dec
scas
out
or
and
cmp
pop
cmp
jecxz
pop
xor
pop
xchg
add
push
lods
pop
aam
mov
bound
xchg
push
dec
inc
mov
jg
(bad)
push
test
or
mov
pop
sub
or
mov
push
ins
dec
and
jecxz
jbe
pop
dec
pop
daa
sar
shl
push
xchg
xor
jmp
and
mov
mov
mov
and
sub
or
dec
dec
enter
dec
popf
jg
cmc
and
ja
push
mov
pusha
and
fild
scas
xchg
jle
movs
inc
fimul
dec
fst
cmp
add
loop
mov
and
gs
jno
or
es
mov
dec
mov
(bad)
mov
imul
xor
sahf
and
adc
cli
mov
in
mov
or
dec
ins
rdmsr
loope
stc
pop
ret
inc
sbb
ficom
(bad)
jl
repnz
movs
cmp
icebp
push
imul
mov
inc
sub
pop
dec
pushf
call
dec
hlt
push
(bad)
mov
pushf
call
xchg
xchg
popa
movs
je
popf
pop
lock
push
mov
jge
sbb
sti
pop
mov
mov
aam
bndldx
or
xor
aaa
call
push
jo
div
dec
or
pop
shl
inc
arpl
(bad)
out
fsubr
xlat
iret
xchg
stos
fidivr
cmp
push
inc
xor
aam
fldenv
or
ins
mov
push
inc
jl
mov
bound
push
cmp
mov
inc
lods
jno
or
movs
sub
das
push
(bad)
in
xchg
and
int3
test
cmp
in
ror
jmp
pop
ret
pop
pop
fild
imul
std
sbb
mov
mov
cmps
into
js
call
repnz
neg
aam
adc
ins
movs
sahf
jae
fisubr
xchg
rol
aad
cmp
mov
shl
mul
in
pop
daa
push
(bad)
fsub
add
xor
nop
sahf
pop
scas
pop
popf
add
or
mov
ds
sbb
aaa
das
(bad)
jo
push
jo
je
gs
xchg
xor
xor
cmp
adc
mov
pop
sahf
rcl
cmps
push
jg
iret
mov
shl
mov
sub
out
cli
jbe
call
call
push
cvtps2pi
adc
push
and
cs
sahf
fist
sub
mov
test
and
adc
adc
inc
adc
pushf
(bad)
adc
sub
xchg
inc
scas
mov
fsubr
fldcw
inc
icebp
fwait
out
xor
pop
shl
mov
cmc
fcom
cmc
stc
pop
mov
inc
xor
adc
inc
xchg
dec
sub
sbb
in
add
outs
jge
mov
xchg
fst
inc
dec
adc
jp
iret
cmp
xor
mov
sub
inc
shl
pop
jg
cli
push
ret
pop
adc
push
mov
inc
sbb
cmp
jbe
or
sar
mov
push
pop
add
fstp
mov
stos
imul
out
cmp
icebp
dec
xchg
push
xor
fwait
mov
sahf
rcr
scas
imul
shl
lds
push
fiadd
mov
jmp
or
fwait
push
dec
jns
push
shl
int3
cs
ss
arpl
mov
adc
xchg
mov
not
pop
(bad)
fwait
jnp
mov
mov
hlt
jge
imul
xor
data16
loop
dec
inc
retf
iret
mov
punpckhbw
fcom
mov
ins
xor
jp
in
xchg
jbe
sub
clc
fsubr
imul
push
inc
int
sar
aad
icebp
lahf
or
mov
imul
push
fld
fisttp
dec
gs
outs
aaa
out
jecxz
mov
es
adc
mov
cmp
iret
fsubr
in
sbb
pop
cmp
sti
dec
or
jl
repz
push
addr16
xchg
mov
retf
out
rep
pop
rol
mov
push
lds
hlt
push
addr16
scas
in
cmps
das
mov
cmp
movs
sti
cld
push
dec
lods
mov
clc
cs
mov
push
mov
mov
mov
pop
ret
add
lds
jae
mov
je
xor
or
retf
sub
jmp
cli
fnstenv
add
cmp
call
call
and
daa
xor
dec
and
nop
or
sub
adc
fbld
inc
and
or
push
lock
add
cmps
sbb
mov
fdivr
data16
test
cmp
lahf
sub
lock
scas
gs
mov
jp
pusha
rcr
or
loop
jmp
push
shl
lahf
pushf
xchg
cmp
(bad)
call
mov
jne
add
int
sbb
rol
mov
clc
sbb
add
fiadd
cmp
jg
leave
mov
ds
clc
adc
(bad)
aaa
cmp
ja
mov
mov
inc
popa
or
lds
mov
mov
pop
pop
xchg
and
push
pop
repnz
sub
(bad)
out
mov
arpl
sub
mov
sbb
dec
jb
not
xor
or
in
jle
je
lahf
and
pop
neg
daa
je
call
call
cdq
in
cs
fistp
sbb
adc
and
push
xchg
jbe
je
sti
call
pop
retf
inc
lods
jmp
cli
xchg
pop
pop
outs
fs
scas
xchg
(bad)
xchg
sub
add
xchg
pop
mov
mov
xlat
fld
inc
ret
mov
gs
and
mov
push
enter
in
in
xchg
sub
jmp
xor
jmp
pop
hlt
pop
nop
repnz
mov
xlat
daa
or
jnp
imul
adc
test
add
sub
or
stos
jle
test
or
cdq
xchg
cmps
lods
cwde
inc
push
(bad)
sti
sub
daa
push
(bad)
pushf
(bad)
adc
cmp
or
scas
pop
call
mov
popf
push
call
sbb
adc
jno
jle
jge
cs
pop
and
cmps
mov
sti
inc
inc
sbb
mov
sub
and
adc
sbb
xchg
pop
push
xlat
in
gs
push
and
loopne
push
inc
push
cli
or
outs
pop
pop
int3
mul
mov
in
or
mov
or
cmc
jp
or
sbb
cmc
add
pusha
mov
push
sbb
fild
sbb
xchg
pop
jle
inc
inc
add
pop
cs
movs
rcr
mov
mov
xor
pop
pop
(bad)
dec
pop
xchg
xchg
retf
in
and
cmp
dec
call
pop
int3
cmp
push
fidiv
(bad)
ffreep
xor
outs
xchg
cmp
mov
fldcw
call
pop
inc
or
add
add
loop
cmp
clc
xor
je
in
fild
movs
mov
jl
ss
test
push
sub
mov
dec
sub
(bad)
mov
mov
mov
jg
movs
jb
dec
rcr
inc
xchg
sub
sub
fs
jno
mov
popa
std
js
mov
mov
cmp
cmps
lods
sub
sbb
cmps
sub
jge
xor
test
xor
mov
retf
jg
cmovbe
leave
shr
dec
mov
xor
sub
inc
add
pop
les
mov
rcr
adc
sbb
dec
and
and
inc
pop
and
sbb
pop
retf
call
xlat
lea
ss
scas
cmp
aad
mov
cs
into
arpl
and
mov
ss
sbb
scas
cli
jecxz
sub
rcl
mov
mov
addr16
pop
push
adc
cmc
mov
add
int
jb
inc
in
add
int
jge
loope
(bad)
sub
xor
sti
test
cmp
cld
cmp
test
nop
mov
popf
push
adc
xchg
imul
and
mov
rcr
mov
sbb
stc
xor
mov
mov
fsin
in
retf
add
add
xor
in
outs
stc
push
xchg
xor
mov
mov
je
add
out
xchg
(bad)
aaa
in
repz
adc
(bad)
arpl
xchg
fadd
jge
jmp
and
mov
loope
or
xchg
adc
adc
int3
push
xchg
mov
mov
jb
shl
enter
mov
loop
call
fldenv
inc
adc
mov
jno
clc
(bad)
fld
aad
cmps
pop
test
popa
in
xchg
push
jl
fld
(bad)
or
int
jl
xor
fdivr
sti
aad
gs
pop
nop
js
pop
adc
cmp
xchg
daa
dec
popf
push
or
das
in
fucomi
test
push
inc
push
jnp
or
adc
out
cdq
dec
pop
cli
inc
pop
test
inc
push
add
cmp
adc
inc
outs
adc
add
push
xchg
in
mov
push
sahf
xchg
iret
jmp
(bad)
jmp
outs
mov
mov
fsub
xor
and
sbb
pop
ret
xchg
sub
lods
inc
xchg
addr16
mov
test
adc
ja
test
sbb
cmps
sbb
icebp
in
ror
into
xor
das
sahf
daa
and
movs
jle
repz
pop
je
or
add
popa
jmp
(bad)
mov
ja
cwde
dec
ror
xchg
popf
cmp
cdq
jg
outs
mov
stos
jg
test
inc
jnp
pop
arpl
mov
cmp
jno
xor
popf
mov
test
jnp
add
push
rcr
cmp
out
mov
js
fcmovnb
nop
es
push
nop
mov
lods
setge
push
mov
push
daa
pushf
mov
ja
or
shld
xchg
dec
jns
in
adc
retf
dec
push
adc
push
add
or
pop
bound
aaa
into
jge
mov
pop
into
jne
fwait
xchg
mov
test
or
test
(bad)
or
enter
popf
mov
in
pop
movs
sbb
add
ja
gs
inc
loope
inc
mov
mov
dec
pop
and
lods
adc
shl
(bad)
sub
hlt
pushf
mov
jo
data16
sub
js
mov
aas
out
popa
mov
jp
pusha
shl
out
icebp
push
int
out
add
stos
cmp
xchg
sar
adc
and
(bad)
cmp
retf
add
shr
sub
jb
adc
rcr
test
jmp
scas
inc
jns
(bad)
push
xchg
ss
pop
dec
and
scas
lods
pop
cmp
mov
pop
xchg
xchg
and
sbb
(bad)
ins
ret
sub
call
add
push
iret
jmp
push
jb
mov
or
imul
cmp
ficomp
cwde
xchg
and
jmp
inc
push
jo
push
lods
es
xchg
call
fmul
pop
push
outs
fist
iret
add
clc
ffree
mov
jg
mov
movs
stos
mov
xlat
push
enter
push
fisubr
push
cmc
sbb
imul
or
add
cmc
adc
or
fsin
xchg
cmp
xlat
mov
sub
push
adc
or
add
cmp
xor
mov
add
push
stc
inc
rcl
out
(bad)
mov
or
xor
push
loope
movs
jp
pop
mov
push
dec
lods
bound
cdq
stos
adc
aaa
inc
lods
push
pop
inc
or
nop
mov
mul
sub
mov
mov
mov
adc
jb
or
inc
dec
jnp
push
stos
cmp
inc
sub
sar
cli
add
mov
adc
adc
push
pop
jns
(bad)
movs
sbb
mov
(bad)
(bad)
jecxz
(bad)
pop
mov
jnp
ja
push
pop
pop
inc
fs
jbe
cmc
loop
cli
xor
lock
mul
pop
mov
jmp
dec
mov
leave
or
push
cmps
inc
pop
cmps
div
inc
test
out
and
push
inc
pop
inc
sbb
jmp
sbb
lahf
push
ds
inc
mov
cmp
lahf
gs
lock
call
mov
(bad)
sar
rcl
jmp
call
push
mov
jb
mov
mov
adc
stos
(bad)
es
cdq
int3
jne
cmp
or
(bad)
mov
fnstenv
adc
xchg
cmp
repnz
lahf
xlat
push
add
cmc
shl
fidivr
mov
jmp
sub
jl
das
xchg
dec
dec
ds
pushf
adc
in
jno
loope
loopne
sub
xor
inc
mov
imul
jnp
add
rol
adc
xor
aaa
aam
bound
mov
xchg
lock
cdq
retf
dec
fwait
sbb
mov
imul
adc
mov
sar
add
xchg
xchg
out
lods
hlt
movs
loop
jmp
outs
cmps
inc
pushf
lea
mov
sti
iret
sti
mov
fcom
jmp
sub
mov
mov
aam
cld
mov
mov
jne
test
mov
or
dec
or
ss
enter
gs
sti
daa
test
das
xor
jg
dec
mov
inc
call
mov
outs
scas
jmp
jne
xchg
in
sub
mov
aad
and
xor
cmp
xchg
das
inc
push
adc
aam
sub
pop
int
push
mov
movs
mov
cmp
sahf
dec
jns
outs
repnz
push
rol
xchg
cmp
cmp
jb
xor
imul
out
xchg
mov
ret
cmp
mov
cmp
mov
test
mov
jno
xor
and
sub
icebp
mov
sbb
sbb
retf
out
(bad)
stos
(bad)
and
xlat
xchg
jmp
pusha
xor
pop
rol
retf
inc
and
jge
cmp
call
xchg
test
pop
mov
icebp
mov
inc
leave
out
inc
dec
inc
adc
mov
adc
xchg
push
dec
adc
push
lods
or
loope
jbe
mov
sub
sub
out
dec
fisttp
(bad)
xor
mov
jb
popa
aaa
lar
sub
cwde
mov
mov
pop
jl
in
inc
cmp
jl
dec
sti
fs
xor
in
int3
or
nop
gs
lods
pop
jp
test
fld
pop
or
xor
test
cmp
and
test
mov
nop
push
dec
or
jge
push
adc
xchg
call
push
push
add
loopne
cmp
enter
push
cmps
aaa
and
or
adc
cmp
out
dec
aaa
gs
adc
test
cli
sbb
cmp
inc
push
mov
les
pop
xor
inc
xor
lock
cmp
push
sub
xor
inc
pop
xor
ficomp
pop
fsubr
sub
pusha
addr16
dec
fcomp
stos
test
or
xor
imul
adc
std
out
cmp
hlt
imul
jmp
push
sbb
xchg
mov
push
bound
lock
xor
or
retf
cs
mul
mov
jl
xchg
or
jns
out
push
lods
dec
out
mov
into
nop
adc
mov
ss
adc
retf
popa
stc
xor
pop
test
(bad)
jp
xchg
dec
add
adc
sub
push
adc
retf
stos
ror
cmp
fwait
xchg
cs
imul
(bad)
scas
sbb
push
cmp
add
fldcw
inc
in
push
nop
test
test
cmp
lods
mov
mov
jge
(bad)
ja
leave
cmp
adc
cld
pop
repnz
out
mov
imul
outs
iret
pop
gs
inc
in
fld
int
adc
fmul
fisubr
push
pop
mov
inc
test
ds
(bad)
pop
push
clc
pop
lea
aas
xchg
mov
daa
xor
popf
out
push
push
cmp
mov
imul
dec
mov
cmp
xor
rcl
aam
stos
xchg
dec
adc
jb
lods
aaa
bound
mov
add
cdq
arpl
inc
jbe
mov
pop
ds
jno
mov
lods
stos
jb
xor
sub
xor
in
push
mov
call
and
mov
jg
scas
dec
ss
cmp
(bad)
and
push
pop
adc
sub
pop
cmp
mov
aam
jmp
clc
adc
popa
ds
inc
mov
dec
mov
jb
test
jmp
add
sbb
jle
sub
repnz
shl
pop
lea
xchg
jo
out
xor
retf
dec
or
out
jecxz
mov
and
mov
xchg
aam
push
mov
and
lock
xchg
mov
cmp
sbb
push
cmp
or
jmp
sbb
or
and
fld
retf
inc
xchg
sahf
inc
shr
mov
test
imul
(bad)
in
xchg
mov
dec
jg
cmp
dec
sti
xor
shr
and
int
retf
leave
and
and
(bad)
addr16
test
iret
mov
mov
out
imul
mov
lods
cmc
in
mov
cmc
or
sbb
or
jmp
sub
pop
push
sub
push
jle
sbb
pop
out
std
or
je
pop
addr16
or
xchg
lds
adc
test
movs
dec
sbb
or
dec
inc
cwde
(bad)
jno
mov
mov
lds
rcr
or
mov
jns
into
call
jmp
mov
lods
jb
xchg
xor
scas
xchg
add
sti
iret
popf
stos
xchg
xchg
sbb
ds
adc
add
mov
xchg
and
sub
enter
mov
cli
pop
fimul
or
mov
jg
xchg
inc
jne
sbb
sar
xchg
adc
sub
nop
lods
movs
arpl
cld
pop
aam
add
dec
cmps
stos
and
repnz
div
clc
outs
adc
sub
mov
scas
mov
inc
xor
and
xchg
retf
pop
and
lahf
jb
cwde
dec
jp
(bad)
push
mov
cmp
and
inc
aas
adc
and
out
adc
sub
jp
dec
hlt
mov
outs
arpl
pop
cli
mov
outs
sub
push
xchg
sub
push
std
es
in
inc
push
inc
scas
and
jg
mov
adc
adc
jns
ret
(bad)
sub
inc
dec
jae
push
jge
mov
mov
and
inc
mov
pop
and
cmp
outs
sbb
mov
repz
ret
arpl
mov
cmps
gs
out
jne
dec
out
les
enter
ins
aaa
push
loop
icebp
cs
frstpm(287
retf
out
lods
pop
cmp
cdq
test
or
inc
adc
sbb
or
xor
jae
xchg
ret
shl
call
ja
aad
mov
js
or
inc
retf
ja
jno
loopne
add
es
div
and
out
sahf
daa
jb
dec
sti
leave
ror
xchg
inc
push
(bad)
mov
add
sub
pop
test
data16
sbb
xchg
or
pop
push
jmp
ret
mov
repnz
mov
(bad)
in
push
scas
sahf
pop
jg
xchg
fstp
push
(bad)
xchg
out
rol
aam
loope
daa
fcmove
(bad)
fld
call
sub
mov
std
pop
fnsave
fwait
sbb
xchg
push
call
mov
and
nop
sub
mov
leave
xor
mov
sbb
adc
push
cmps
mov
jmp
(bad)
(bad)
loope
retf
fs
jge
aad
cli
mov
js
lds
sahf
rcr
xchg
outs
mov
add
loopne
mov
ja
out
push
mov
fdiv
hlt
movs
jle
and
mov
retf
mov
sub
rcr
in
ins
dec
dec
xchg
imul
adc
pop
push
pop
das
pop
sbb
mov
cdq
push
xor
inc
scas
les
mov
xchg
sub
fadd
xor
rcl
jno
and
fs
js
aas
in
dec
sub
inc
out
adc
mov
test
sub
scas
mov
dec
enter
sbb
fmulp
dec
shr
nop
cmp
gs
pop
push
out
(bad)
xor
sub
clc
sar
mov
xor
cld
dec
(bad)
cmc
and
test
(bad)
sub
jge
retf
paddd
push
xchg
inc
(bad)
scas
push
popf
enter
fcom
pop
mov
ins
jmp
mov
jg
icebp
xchg
mov
jge
cmp
push
ins
lods
ja
xor
push
mov
sub
cmp
out
and
mov
mov
jmp
sbb
xchg
jb
push
inc
inc
aaa
ss
pop
mov
repz
fisttp
sbb
lock
fidivr
shl
outs
fcom
fcom
iret
stc
dec
sub
mov
ins
xchg
jo
out
lock
and
mov
pop
push
sbb
into
dec
xchg
and
xor
int3
xchg
jmp
mov
xchg
stc
pop
lods
(bad)
dec
inc
mov
sub
(bad)
xchg
xchg
out
out
dec
jnp
cmp
dec
pushf
or
in
mov
xchg
nop
out
je
shr
mov
push
mov
lods
(bad)
cmp
add
jns
test
jge
push
retf
mov
icebp
adc
or
jmp
ficom
jmp
hlt
int3
add
jmp
cmc
jo
fisttp
ins
lock
(bad)
out
cmps
add
push
and
cmc
sub
stos
sbb
push
test
mov
pop
mov
rcl
pop
jnp
in
lods
adc
xchg
(bad)
aam
movs
arpl
mov
(bad)
aam
mov
pop
sub
imul
push
(bad)
xor
in
inc
or
mov
clc
bound
int
repnz
and
sub
aam
lahf
inc
out
jb
and
xor
out
push
sbb
mov
adc
fucomp
pop
sbb
or
lea
lds
mov
or
mov
aas
push
(bad)
mov
out
push
loope
(bad)
xchg
push
fdiv
movs
int
and
sub
mov
push
mov
imul
sub
add
bound
fnsave
cdq
mov
ss
jb
sub
loope
(bad)
pop
stc
icebp
repz
imul
jmp
outs
je
push
aad
inc
add
das
hlt
pusha
repz
imul
gs
stos
repz
adc
jle
pop
inc
or
pop
scas
pop
out
enter
clc
adc
add
sub
fimul
mov
test
jle
and
fyl2x
push
bound
fwait
daa
add
(bad)
or
addr16
imul
xor
aas
sub
cs
sub
fld
mov
adc
popa
(bad)
loope
test
pop
arpl
(bad)
int3
xchg
cwde
sbb
xchg
mov
xor
adc
lods
and
add
cmp
lock
jne
and
leave
sub
xchg
dec
(bad)
ja
and
or
cli
cmp
sti
pop
pop
xor
not
push
shr
cmp
in
int
pop
push
out
add
add
jnp
sbb
cmp
jecxz
outs
stos
xchg
das
fimul
or
out
adc
adc
adc
mov
lock
mov
and
jns
and
adc
frstor
leave
movs
mov
push
out
fwait
out
adc
leave
jnp
mov
push
sar
call
add
dec
push
pop
dec
ins
aaa
ins
stos
rcr
sub
mov
cmp
cmc
loope
dec
popf
jp
ror
pop
(bad)
imul
xor
inc
pop
pop
inc
mov
lahf
dec
data16
adc
jle
pop
int3
ds
ja
adc
mov
arpl
sub
ret
ret
push
cmps
imul
fwait
push
lods
push
std
in
enter
test
fwait
sbb
mov
push
cmp
cmp
cld
js
fdivr
add
sbb
cmp
popa
stc
cmp
mov
stc
iret
push
mov
adc
sbb
clc
or
out
movs
mov
js
jo
jmp
out
lods
aad
dec
lods
jmp
rcr
mov
adc
xchg
test
jecxz
push
cs
dec
sub
popa
fs
pop
and
sahf
fwait
and
add
jl
cmps
xchg
je
test
adc
call
lea
mov
movs
jns
into
xchg
sub
xor
aam
push
dec
sub
adc
xor
lock
pop
jbe
jge
push
or
into
jecxz
(bad)
js
mov
xor
loop
mov
aas
arpl
add
daa
mov
or
test
in
jg
outs
dec
outs
cmp
(bad)
mov
mov
gs
dec
out
jecxz
pop
mov
and
ds
xor
bound
cwde
and
dec
fwait
xchg
dec
out
push
dec
cmp
cmps
jl
push
dec
outs
inc
sbb
cmp
out
jae
pop
cmp
and
in
jne
inc
call
xor
scas
call
push
cld
xchg
or
not
pushf
mov
stc
into
pop
arpl
fwait
icebp
sub
rcr
movs
or
cwde
das
std
sahf
push
sbb
adc
mov
pop
sbb
pop
sub
ins
sub
repnz
xchg
inc
sub
pop
push
sub
lea
sub
dec
sbb
cmp
test
push
inc
push
jae
sbb
les
fldenv
movs
leave
or
rol
pop
ret
call
adc
mov
fcmovnbe
icebp
cdq
cmps
xor
cmps
dec
fadd
ins
js
enter
push
mov
inc
and
mov
jno
xchg
sbb
mov
std
inc
arpl
sar
retf
hlt
push
enter
pop
fmul
in
ror
fiadd
ss
repz
sahf
test
jns
mov
vmread
jns
scas
mov
xor
sub
mov
pop
jge
fs
jae
cmps
nop
xchg
outs
xor
inc
mov
ins
into
popf
popa
sub
call
jg
mov
adc
mov
aam
shl
push
loop
(bad)
push
movs
jecxz
hlt
pop
push
or
add
add
dec
fidivr
rol
and
std
gs
xor
mov
sub
das
adc
ins
shl
rcr
repnz
add
test
out
hlt
push
mov
jno
fs
gs
arpl
mov
outs
cdq
pop
push
jo
in
pop
nop
jne
cmp
cdq
ret
or
mov
clc
test
in
pop
sti
dec
add
mov
mov
and
ja
std
(bad)
cmp
retf
adc
jnp
lea
and
sbb
push
mov
sub
jmp
pusha
sar
xor
xchg
cld
jg
adc
cmp
inc
adc
test
daa
retf
icebp
popf
or
aad
retf
shr
xor
pusha
cmp
in
cmp
arpl
loopne
cmp
push
jb
fs
(bad)
fcomp
loop
sbb
and
cmp
rcr
mov
xor
xor
inc
cld
ret
loop
dec
and
cld
je
mov
and
dec
push
movs
push
dec
data16
aam
mov
jae
mov
mov
fistp
lds
push
int
or
loop
mov
mov
push
pusha
imul
mov
outs
adc
dec
sbb
push
test
cmp
test
cmp
mov
xchg
lds
sar
rcr
add
jge
test
jno
fdivrp
jmp
loopne
mov
cdq
fdiv
movs
je
xchg
push
mov
es
pop
xchg
jmp
mov
gs
or
sbb
(bad)
ins
mov
adc
sub
jge
ins
add
push
loop
fcmovu
pop
xor
inc
push
in
jg
sub
push
or
cs
inc
retf
add
jno
ret
ins
jmp
(bad)
and
ss
rol
push
dec
mov
sbb
inc
pop
aas
cdq
out
mov
inc
(bad)
adc
mov
dec
imul
sbb
mov
repnz
sar
or
sub
mov
(bad)
push
lea
sar
cld
psadbw
pop
(bad)
add
pop
aaa
int3
outs
out
push
aaa
das
mov
sbb
xor
and
mov
jne
sbb
fsubr
push
push
(bad)
pop
and
jl
mov
hlt
or
in
dec
(bad)
int
in
es
mov
pop
and
jb
pop
mov
dec
gs
dec
cmp
ins
sbb
jae
scas
xchg
xchg
push
shl
push
jns
mov
fst
inc
adc
xchg
not
les
or
adc
shr
fist
and
sub
icebp
jl
jg
pop
pusha
dec
jle
jp
ins
adc
sbb
pop
loop
jns
lods
(bad)
retf
call
jno
mov
out
stc
add
imul
inc
ret
iret
mov
inc
inc
mov
add
and
imul
ja
xchg
add
ss
out
xchg
cmp
mov
outs
dec
jge
mov
inc
mov
jno
mov
lea
out
movs
sub
aad
push
out
(bad)
push
inc
fidiv
into
or
pop
stc
out
cmps
add
push
adc
add
call
std
mov
in
jmp
mov
mov
retf
push
lahf
jmp
aam
fs
or
popa
dec
arpl
or
sbb
or
xor
ret
out
fdiv
xor
fisttp
push
cmps
aam
icebp
fs
addr16
(bad)
loop
repnz
call
xchg
ja
push
out
lods
sbb
cmp
rol
dec
sub
stc
mov
adc
pop
out
popf
stc
or
or
mov
daa
rcl
pop
outs
xchg
xchg
mov
jmp
jno
or
test
xor
mov
pop
sbb
aaa
test
lock
cmp
sub
rcr
out
xor
jb
dec
mov
xchg
or
push
add
jmp
lea
scas
clc
jo
mov
fptan
ret
pop
aas
lods
imul
adc
jne
dec
addr16
loop
ja
push
lea
out
mov
mov
push
std
push
add
clc
cmps
xchg
call
adc
fucomi
test
pop
aad
or
test
mov
(bad)
pop
popa
dec
lods
add
xchg
adc
sub
lods
mov
mov
(bad)
aam
ffreep
loopne
pop
nop
ja
scas
mov
(bad)
mov
out
pop
push
enter
data16
inc
out
push
sub
cli
mov
mov
repz
idiv
call
add
mov
push
gs
ss
std
mov
repz
sbb
xor
mov
jno
push
pop
(bad)
std
add
popf
sbb
xchg
cmp
add
xor
sbb
sbb
lods
mov
jo
push
pushf
mov
xor
js
outs
mov
inc
(bad)
dec
fisubr
movs
jb
or
test
mov
add
ja
(bad)
jmp
jo
int3
fisubr
clc
adc
mov
cmp
jle
sub
jle
mov
sbb
test
vandps
or
jl
and
dec
fimul
into
jo
enter
add
into
xchg
out
ja
test
or
jl
popa
lea
clc
je
push
repz
or
sbb
mov
push
test
mov
inc
add
scas
push
repz
jnp
add
mov
push
call
pushf
jbe
jo
cld
sub
div
dec
dec
cmps
scas
fcom
out
lods
pop
and
and
shl
sub
rcl
jb
pop
push
dec
or
sub
cmp
int3
mov
push
loope
ret
adc
pop
dec
ret
jl
enter
pop
inc
jbe
aad
dec
or
mov
inc
jle
and
jno
or
mov
cli
xor
mov
cmp
loope
sbb
add
inc
iret
jne
ja
call
sub
add
mov
cmp
or
verw
fcmovnb
(bad)
ja
pop
rcl
mul
and
adc
cld
add
inc
scas
(bad)
cs
mov
push
push
ror
mov
ins
jl
mov
dec
mov
ins
dec
(bad)
or
or
push
imul
fbstp
hlt
idiv
clc
push
push
dec
xor
jnp
popa
in
inc
dec
sahf
call
add
stos
and
stc
ja
cmp
pop
mov
sub
pusha
cmp
jle
test
cmp
or
dec
jmp
outs
jge
add
out
xchg
les
inc
ins
adc
fld
pop
sbb
shr
sbb
(bad)
(bad)
(bad)
and
jns
sbb
or
mov
aas
(bad)
mov
popa
mov
inc
fcom
(bad)
cmp
dec
sahf
enter
jo
int3
ds
(bad)
ins
jno
imul
sub
jbe
xchg
mov
movs
mov
mov
ja
adc
mov
and
sar
(bad)
mov
popa
mov
adc
cdq
enter
pusha
adc
mov
jg
mov
dec
jmp
add
fist
push
sbb
imul
fistp
loope
leave
add
sub
outs
mov
hlt
(bad)
fisttp
jns
pop
aaa
pushf
addr16
jnp
hlt
scas
pop
lods
mov
pop
xchg
loop
test
mov
stos
mov
mov
jecxz
pop
mov
cld
ds
jecxz
cs
and
(bad)
jbe
scas
cmp
fld
xor
imul
xor
jno
jne
push
pop
arpl
and
jae
sbb
fwait
pop
cmp
cmp
cmp
fidivr
mov
in
pop
ds
jge
(bad)
sti
adc
lds
rcr
(bad)
arpl
loopne
(bad)
mov
fcmovnb
sar
mov
jo
inc
out
imul
mov
sahf
cld
test
push
imul
mov
jmp
xchg
cmps
mov
nop
shl
outs
cli
pop
jo
hlt
cli
jp
or
or
clc
addr16
mov
xchg
fild
cmc
and
cdq
clc
sahf
sub
aas
ds
xchg
out
dec
mov
sbb
cmc
push
(bad)
bound
jle
rcl
es
popa
xchg
clc
mov
mov
inc
or
es
int
loopne
cmp
cs
repnz
push
test
sub
das
sbb
imul
addr16
clc
adc
shl
rcl
retf
push
imul
je
sbb
pop
fcom
gs
sbb
jle
jnp
add
dec
or
sbb
fwait
mov
mov
inc
neg
loopne
out
and
jae
fisttp
sub
fadd
aas
pop
pop
xor
xor
loopne
push
cld
and
loope
or
jnp
sub
jl
cmc
xor
lods
adc
lods
icebp
inc
ds
mov
ret
sbb
test
jp
push
sti
sbb
ror
sbb
pop
inc
push
adc
inc
xor
or
push
cs
mov
out
jg
nop
mov
imul
sub
push
xchg
xor
jg
clc
cmp
fcmovu
ret
imul
stc
lds
inc
call
les
cmp
in
outs
mov
pop
xchg
and
push
xor
(bad)
stos
add
mov
xchg
sub
push
ja
clc
mov
add
inc
cmp
mov
mov
call
jne
cmp
outs
addr16
or
retf
outs
jo
aaa
mov
xor
pop
push
(bad)
jmp
cli
xor
cli
push
pop
sbb
jp
jl
cmp
xchg
adc
mov
lods
out
aas
ja
cwde
mov
(bad)
lds
xchg
sbb
mov
rcl
enter
mov
inc
sub
or
mov
pop
inc
out
fsub
dec
add
pushf
arpl
dec
fisttp
jmp
xchg
adc
inc
rcr
fs
adc
sub
test
sti
inc
loopne
leave
mov
mov
cmp
xchg
cli
pop
and
pop
or
mov
pushf
mov
ss
stc
push
jb
retf
xchg
add
and
pop
and
pop
pop
adc
sub
mov
sahf
add
daa
add
and
outs
std
xor
jecxz
jecxz
push
out
sbb
imul
js
aam
pop
cmp
dec
mov
dec
mov
or
pop
jg
push
loopne
and
lea
add
int
ds
and
(bad)
jl
adc
(bad)
pop
std
xor
cmp
lock
(bad)
popf
xor
shl
in
dec
dec
cmps
mov
adc
adc
ret
xor
fs
or
imul
div
push
push
(bad)
ja
scas
mov
aas
inc
jno
sbb
pushf
aaa
sub
fcom
cli
jmp
xchg
cmovne
lods
jmp
bound
add
mov
mov
(bad)
stc
adc
cli
rcr
jo
xor
fdivr
cmp
adc
call
iret
push
mov
mov
outs
xor
ret
cmp
fmul
cmp
mov
popf
push
cmps
pop
mov
ret
into
inc
xor
mov
pop
jecxz
nop
std
xchg
xchg
int
loope
mov
inc
sub
enter
les
fild
sub
or
sub
pop
xchg
bound
movs
push
push
inc
test
out
rcr
sbb
mov
(bad)
xchg
sbb
pop
mov
adc
xchg
lods
ins
cs
in
into
inc
out
mov
fcmovb
jmp
leave
dec
push
jl
dec
mov
nop
mov
add
and
pop
out
(bad)
int3
pop
ror
mov
bound
and
popa
cmps
ins
cmc
sub
jb
push
lods
xchg
add
in
pushf
sub
dec
sbb
cmps
cmp
push
out
pushf
xchg
dec
ror
xchg
leave
xor
stos
ret
push
jmp
jnp
test
add
lds
movs
pop
mov
mov
adc
imul
pop
cdq
repnz
jnp
clc
fptan
pop
mul
(bad)
jecxz
rcr
fwait
icebp
adc
ins
jno
mov
cs
pushf
call
idiv
mov
in
pop
mov
xchg
jp
sar
mov
mov
push
fdivr
aaa
mov
cdq
pop
dec
xor
dec
nop
inc
call
lods
frstor
adc
mov
adc
and
push
mov
retf
mov
pop
inc
fdiv
cs
in
and
push
jp
enter
push
pop
sahf
lock
(bad)
jno
mul
out
jmp
sub
and
stos
into
ds
ins
fstp
jb
cdq
imul
mov
mov
leave
dec
push
fild
mov
xchg
pop
push
dec
imul
call
mov
fldenv
cld
out
mov
repnz
out
pop
aad
fs
fisubr
mov
or
sahf
inc
icebp
add
int3
add
test
fiadd
add
dec
cmps
stc
movs
(bad)
mov
pop
adc
mov
mul
imul
int3
cdq
pop
push
sbb
jle
xor
(bad)
dec
rcl
sub
inc
sub
push
mov
icebp
push
cmp
stc
loopne
and
std
adc
mov
jp
cmp
movs
js
mov
adc
stos
dec
mov
ret
jbe
push
add
sti
inc
mul
or
lods
js
pop
lods
in
ficomp
call
psllw
adc
int3
mov
and
imul
addr16
(bad)
(bad)
clts
xchg
mov
hlt
(bad)
fadd
ror
sub
mov
mov
ss
shl
repnz
(bad)
xchg
out
add
pop
in
xor
rcl
inc
rcr
out
in
adc
loop
mov
inc
mov
mov
dec
inc
xor
inc
loope
mov
test
bound
jg
adc
lds
(bad)
pop
cmp
xchg
hlt
(bad)
and
sub
fwait
nop
xor
or
into
out
inc
push
or
mov
pop
xchg
mov
xchg
leave
push
mov
push
dec
push
shl
bound
les
sti
aam
pop
jb
pop
repz
cmps
dec
das
ret
std
test
ins
out
push
xor
add
fisub
cmps
mov
xchg
aam
push
int
pop
(bad)
xor
xchg
adc
sar
mov
jmp
jecxz
add
add
jbe
jl
test
mov
ss
das
pop
jae
and
xchg
xor
jp
pushf
sub
cdq
xchg
stos
int
adc
sub
jle
frstor
or
(bad)
adc
mov
(bad)
sub
ja
inc
in
stc
out
xchg
push
adc
add
cmp
jmp
(bad)
shl
mov
outs
or
rcl
mov
adc
cmp
xchg
pop
scas
jo
sub
xchg
fnstenv
sub
cli
mov
add
push
daa
(bad)
out
nop
aam
push
es
movs
dec
add
lahf
sbb
mov
repz
cmp
fwait
sbb
mov
shl
test
repnz
in
and
and
push
lea
jbe
pusha
sbb
adc
dec
sbb
adc
mov
enter
jmp
leave
push
push
retf
sub
jae
pop
pop
and
lds
in
add
fadd
jne
or
adc
sbb
jmp
xlat
(bad)
aad
jae
inc
jne
sti
cld
or
std
dec
jge
movs
mov
stc
in
cld
push
call
ins
cmp
push
out
lea
add
into
jnp
dec
mov
retf
retf
(bad)
stos
jmp
and
push
nop
gs
loop
sub
dec
xlat
repz
jle
jle
push
mov
popf
std
dec
ror
int
enter
into
lods
cld
mov
add
hlt
xlat
push
adc
leave
mov
jbe
(bad)
retf
pop
pop
stos
dec
mov
cld
rcr
mov
jo
mov
mov
mov
stos
mov
adc
jl
aaa
(bad)
dec
int
jecxz
jmp
or
stc
in
mov
cmc
mov
es
into
scas
xor
lea
sbb
leave
add
dec
out
lods
mov
sub
jnp
movs
aaa
cwde
rol
and
pop
jge
xchg
std
das
shl
hlt
arpl
test
xchg
xchg
adc
inc
xchg
xchg
leave
add
hlt
mov
or
or
adc
rcl
xchg
daa
pop
sahf
iret
cwde
cmp
xchg
shl
lods
sbb
sbb
outs
outs
mov
or
stos
add
ss
js
iret
ins
add
icebp
and
in
jp
and
sbb
jns
pop
daa
sub
fdivr
mov
sub
loopne
sti
imul
scas
nop
inc
cmp
cdq
dec
sub
enter
push
mov
push
ret
pop
or
push
ficom
mov
hlt
sub
mul
sti
adc
scas
addr16
add
pusha
mov
cdq
cdq
sbb
pop
pushf
sbb
pop
das
and
mov
lahf
icebp
nop
jae
add
dec
fistp
lock
fcom
bound
test
js
push
icebp
or
dec
iret
xchg
jbe
sub
popa
popf
lahf
add
pop
xor
dec
or
fild
ja
sub
scas
lods
add
out
mov
rcr
in
push
into
fisub
out
sbb
(bad)
loopne
or
jno
pop
shr
dec
jle
jg
xor
aas
mov
inc
push
ds
dec
pop
retf
adc
repnz
call
in
arpl
xor
cdq
scas
inc
mov
(bad)
retf
jl
add
xor
push
(bad)
mov
adc
push
jbe
jmp
and
dec
mov
loopne
add
mov
add
cmp
and
fwait
mov
xchg
mov
xchg
loopne
scas
pop
fwait
mov
xor
dec
xor
int
ins
iret
popa
hlt
cmps
sbb
out
popf
push
fnstcw
xchg
mov
mov
cdq
loop
arpl
and
pop
(bad)
out
aam
cdq
iret
push
fsubr
jmp
fsub
shl
inc
and
pop
mov
pushf
std
nop
adc
adc
and
pop
add
xchg
jl
test
sbb
push
in
xor
sbb
cdq
cdq
jmp
pop
push
push
inc
sbb
cmp
je
xor
xchg
(bad)
out
test
popf
and
sbb
loop
test
sub
cdq
aas
movs
dec
call
push
lods
(bad)
mov
lds
mov
cmps
pop
pop
push
stos
fisub
mov
cmp
fcmovbe
mov
dec
rcr
ins
lds
xchg
pop
sbb
cld
loopne
mov
lods
sub
ret
add
jno
cmps
leave
pop
lods
sbb
sub
sti
pop
scas
jb
fdiv
adc
xor
imul
lods
jl
mov
enter
test
or
shl
inc
jmp
icebp
pop
aaa
mov
std
leave
jge
xor
ficomp
movs
xchg
xor
fsubr
xor
mov
push
ret
jae
mul
aam
mov
add
loopne
cmp
ret
mov
(bad)
(bad)
or
in
inc
pop
xor
out
sbb
or
fisttp
mov
or
js
fucompp
lahf
jmp
push
lods
outs
or
mov
hlt
and
lds
mov
inc
popf
add
lods
fcomp
ds
and
mov
jb
inc
mov
pop
add
inc
clc
lock
hlt
stc
lds
add
push
or
pop
xor
mov
push
and
jnp
pop
test
and
ins
(bad)
mov
shr
xchg
loopne
xchg
stc
leave
and
arpl
jp
and
dec
je
inc
outs
cmps
sar
mov
loop
adc
xchg
rcl
aad
push
and
in
mov
icebp
inc
jl
ror
inc
or
or
jnp
pusha
mov
cmp
aas
arpl
dec
jbe
or
sub
sahf
in
out
test
xor
imul
inc
inc
in
jp
cs
mov
js
enter
outs
test
sbb
inc
pusha
xor
mov
repz
inc
neg
or
jmp
ja
imul
std
push
dec
push
loop
jne
and
stc
cmp
and
jae
sar
sbb
jno
adc
ret
hlt
dec
mov
imul
not
jmp
push
push
pextrw
xchg
inc
pop
fs
lahf
push
or
(bad)
aas
xchg
das
xchg
imul
in
or
xchg
mov
sar
push
push
aad
outs
jne
inc
mov
and
pusha
xchg
cmc
or
mov
jecxz
cmc
(bad)
pop
ss
es
das
fld
pusha
pop
xchg
push
jnp
fld
ret
xor
cmp
std
fdiv
xor
sbb
inc
mov
pop
xor
aas
mov
mov
adc
lds
dec
adc
push
repnz
fist
ja
js
inc
imul
sbb
adc
add
inc
fstp
add
or
push
shr
inc
inc
mov
retf
mov
mov
jns
out
jae
(bad)
mov
shl
call
push
jnp
ficomp
mov
fld
push
dec
sbb
inc
adc
lea
je
ret
sbb
pushf
iret
imul
xor
shl
out
or
bound
pop
mov
ret
xlat
pop
xchg
aas
mov
pop
movs
jns
jns
mov
xchg
retf
add
je
cmp
je
sub
scas
stos
ret
xchg
jns
inc
mov
outs
pushf
inc
inc
nop
xchg
out
add
icebp
xor
fwait
push
pop
jl
test
add
mov
ret
jne
dec
fcmovne
loope
out
ss
inc
push
cdq
das
mov
aaa
sub
xor
loopne
and
push
sbb
das
inc
clc
dec
inc
fs
in
shl
push
inc
adc
pusha
outs
fidiv
xor
xlat
and
inc
pop
xchg
xchg
mov
push
dec
pop
or
das
or
(bad)
popf
and
and
pop
adc
xchg
inc
jno
adc
shl
pushf
adc
aad
push
in
sub
mov
popf
mov
dec
add
pop
sbb
repnz
and
div
mov
out
or
ror
cdq
cld
imul
cwde
ret
dec
sbb
fild
(bad)
pop
ffreep
push
rol
fcom
xchg
ret
cwde
aam
cmp
lds
loopne
out
push
ins
data16
(bad)
push
rcl
xchg
(bad)
adc
lods
cwde
push
mov
add
and
outs
(bad)
mov
aaa
dec
ins
or
mov
mov
imul
xchg
loopne
lods
sub
icebp
outs
pop
jge
mov
adc
xchg
sbb
push
xchg
mov
mov
jg
jbe
rol
lock
mov
in
int
or
mov
sub
nop
add
dec
icebp
dec
ins
(bad)
das
add
or
aam
imul
das
adc
cmp
and
les
cmp
std
stc
jmp
test
idiv
lods
push
lods
(bad)
aas
add
sub
pop
pusha
in
mov
(bad)
popa
shr
mov
xor
leave
xor
cs
mov
xor
(bad)
call
push
dec
adc
push
jle
xchg
adc
mov
add
movs
cmc
xchg
push
cmps
sbb
sub
out
fimul
fwait
xor
adc
fst
cmps
popf
mov
std
(bad)
fst
dec
mov
repz
pop
imul
inc
or
out
push
push
mov
cmp
jnp
xchg
jo
outs
bound
jnp
ret
lea
inc
jo
adc
retf
jg
dec
sub
addr16
test
xor
fwait
adc
jmp
xchg
sub
sbb
shl
push
jb
nop
ret
mov
out
sahf
aad
or
jb
xor
jg
shl
push
loope
test
or
push
pop
mov
cmp
fbstp
and
adc
or
sbb
test
inc
sbb
jge
fnsave
int3
sbb
adc
js
(bad)
xchg
jno
outs
sbb
leave
sbb
inc
push
iret
sub
and
mov
outs
push
cmp
push
push
int
mov
in
mov
cmps
sub
push
dec
or
(bad)
call
sbb
xchg
cmc
xor
mov
xlat
add
jns
push
xchg
jns
shl
jb
pslld
sub
push
std
and
aas
inc
mov
or
cmp
cmps
or
fst
adc
cmps
mov
pop
or
sbb
push
cmp
dec
repz
or
addr16
leave
in
fadd
add
xor
pop
stos
mov
aad
std
push
fcom
mov
lds
add
mov
mov
adc
pop
lods
pushf
adc
ss
cmp
int
mov
mov
xor
or
imul
stos
inc
adc
imul
ss
movs
or
call
movs
cdq
jle
lock
fld
mov
out
mov
loop
xor
xor
push
movs
pop
xor
add
mov
or
mov
dec
pop
pop
int3
inc
sbb
jle
xlat
pop
or
movs
push
mov
push
xchg
std
and
sub
(bad)
sub
jp
and
xchg
xchg
sbb
or
pop
mov
mov
out
push
(bad)
cld
pop
cmp
push
pop
test
das
in
pop
mov
or
cmp
(bad)
in
xchg
push
stc
push
(bad)
rcr
ret
and
dec
add
inc
and
xchg
popa
adc
rcr
xor
neg
cmp
cdq
and
jo
std
sbb
and
ja
mov
and
adc
inc
xlat
stos
or
std
lea
fcom
mov
adc
rcl
in
repnz
jl
pop
sbb
ret
rol
mov
stos
lods
out
push
mov
jb
adc
jmp
xor
mov
ret
mov
mov
out
stos
test
out
or
mov
leave
ret
aam
or
cmps
pusha
add
adc
adc
mov
jno
(bad)
imul
mov
test
jnp
jmp
jnp
daa
shl
rol
jmp
popf
into
mov
mov
jmp
ds
jecxz
pushf
sub
outs
sub
push
push
inc
lods
inc
mov
cmp
pop
test
xchg
or
out
rcr
push
retf
sbb
or
or
jno
jno
into
adc
scas
lock
pop
add
jecxz
dec
add
frstor
jle
retf
std
lahf
sti
mov
gs
iret
shl
retfw
stos
jb
lods
out
bound
fist
fs
mov
bound
mov
fimul
dec
mov
ja
push
jge
dec
dec
jp
jmp
jecxz
jg
pop
sbb
mov
rol
fadd
lods
jne
mov
sbb
sub
movs
cmp
xchg
mov
cmp
std
inc
mov
outs
(bad)
mov
inc
hlt
mov
sti
jecxz
sub
adc
fwait
out
dec
loop
add
push
sbb
pop
push
pushf
add
or
push
push
mov
pop
fst
and
sahf
popa
call
xor
mul
pushf
or
pop
mov
dec
and
adc
je
mov
int3
xchg
test
loop
shl
retf
sub
(bad)
hlt
mov
les
adc
scas
push
ja
adc
out
pop
and
dec
test
lahf
or
in
xchg
(bad)
add
mov
aas
mov
or
mov
sub
pop
popf
(bad)
mov
xor
add
dec
cwde
mov
xlat
sbb
cmp
cmp
cmps
add
push
mov
push
mov
pop
pop
or
mov
push
fcomp
movs
lods
js
push
fdiv
nop
mov
xchg
imul
stc
xor
test
lahf
test
dec
into
jmp
adc
div
mov
loop
scas
xchg
pop
pop
fmul
in
cmp
cmp
imul
add
shl
jno
pop
pop
in
xchg
push
pop
pusha
dec
outs
xchg
sbb
sahf
dec
push
cmp
movs
and
lahf
sub
and
pop
int3
mov
cmp
pop
stc
ja
sbb
lock
pop
cli
dec
or
cmc
xchg
fiadd
and
sahf
es
mov
add
mov
dec
jbe
imul
div
shl
cld
and
lods
cwde
jg
and
mov
loopne
push
sbb
push
ror
pop
cmp
push
push
xchg
xor
inc
inc
sti
jl
in
dec
aas
xchg
cdq
dec
or
mov
pop
aam
(bad)
lods
outs
cmps
jl
jae
jo
cli
das
std
cmp
or
ins
popa
jmp
cdq
mov
sbb
sub
pusha
out
nop
push
bound
outs
jg
fwait
test
(bad)
cmp
bound
xchg
(bad)
mov
test
push
pop
and
cmp
add
jecxz
xchg
popf
out
out
shl
push
cwde
sbb
sub
jns
sub
mov
xchg
mov
data16
add
scas
lahf
xchg
fs
jnp
sub
int
popa
icebp
(bad)
push
push
aas
mov
fmul
or
push
adc
jae
mov
sub
mov
inc
inc
pop
shr
push
jl
pop
loope
jp
or
inc
hlt
out
shr
add
dec
xchg
lea
and
pop
movs
es
adc
pushf
pop
clc
add
pshufw
jmp
hlt
adc
cmp
push
mov
mov
loop
mov
xor
pop
and
adc
fimul
push
(bad)
adc
push
cwde
cmps
xchg
fdiv
shr
push
lea
pop
push
pop
(bad)
cmp
push
repz
dec
mov
(bad)
cmps
dec
aas
mov
addr16
pop
pop
mov
push
xchg
cmp
push
dec
cmp
clc
lds
lods
push
(bad)
jle
xchg
(bad)
push
cmp
xchg
data16
and
(bad)
fldenv
add
lds
xchg
scas
cmp
fwait
cmp
call
mov
cmp
fs
xchg
pop
jmp
nop
add
mov
dec
int3
outs
mov
nop
aas
cmp
xlat
pop
outs
fisttp
mov
jmp
add
xchg
mov
add
mov
lock
into
test
inc
mov
xlat
leave
idiv
ja
les
mov
lock
dec
and
test
jnp
xor
data16
and
out
(bad)
fsubr
in
cld
add
ss
pop
das
pop
imul
pop
jge
test
fidiv
jl
ds
(bad)
cs
xlat
jle
sub
add
push
dec
je
mov
dec
aad
fisttp
and
cdq
jmp
cmp
loop
push
dec
add
pop
dec
cmps
xor
(bad)
movs
push
ret
out
mov
lea
xchg
mov
out
sub
jl
add
pop
pop
dec
pop
scas
nop
mov
or
adc
xlat
in
cld
mul
inc
mov
gs
in
scas
idiv
and
xchg
rol
push
jmp
fs
adc
retf
gs
pop
sub
outs
fisttp
(bad)
call
rcr
cs
fadd
pop
test
mov
cmp
enter
mov
push
sub
lea
repnz
nop
mov
movs
inc
call
data16
adc
outs
loope
out
out
jne
jle
mov
mov
push
jmp
out
add
mov
(bad)
jae
inc
sbb
jno
sar
out
movs
js
cmp
xchg
pusha
pop
repz
fscale
outs
aad
dec
scas
cmp
or
rcr
int3
stos
sbb
imul
test
xchg
(bad)
popa
and
int
adc
ficomp
ja
and
add
cmp
fbstp
sbb
jno
hlt
pop
push
scas
xor
dec
outs
mov
mov
xor
mov
jo
jmp
mov
ret
xor
icebp
sbb
lods
cmp
outs
arpl
sahf
lds
push
aam
(bad)
arpl
push
add
push
inc
rol
cmp
or
ja
xchg
leave
add
mov
jns
std
xchg
push
mov
sahf
mov
jae
(bad)
xchg
push
outs
ret
jp
aaa
cli
test
inc
push
sbb
neg
ds
sub
cmps
test
pop
mov
cmp
jmp
cmp
test
cwde
cwde
das
pop
jg
mov
scas
out
fld
dec
jp
shr
mov
jbe
jne
ret
jle
cmp
cmp
cmp
add
inc
xlat
ss
cmp
pop
cdq
xchg
test
imul
sbb
adc
ret
mov
cmp
mov
(bad)
adc
mov
jne
(bad)
add
out
repnz
jb
punpcklwd
in
loope
inc
(bad)
adc
ja
xchg
dec
mov
adc
push
add
(bad)
xchg
fwait
add
out
fld
mov
test
dec
xchg
xchg
mov
push
shl
sbb
push
mov
mov
nop
mov
stos
loopne
in
gs
pop
mov
push
test
test
jno
lock
mov
cmc
mov
jno
test
out
test
jno
ret
(bad)
mov
in
or
mov
adc
(bad)
ss
out
lods
pop
repnz
adc
and
idiv
pop
mov
stos
sub
loope
(bad)
out
pop
mov
iret
fdiv
bound
jmp
add
mov
push
daa
loopne
xlat
sbb
hlt
xor
cmp
fmul
add
xor
rcr
mov
fdivr
and
dec
stos
icebp
ins
dec
ret
adc
lahf
mov
mov
pop
gs
pusha
or
ja
push
(bad)
mov
jb
xchg
call
movs
pop
movs
xor
mov
jnp
mov
je
add
jb
out
mov
ds
dec
sbb
push
sbb
cmp
pop
pop
cmp
adc
adc
cmp
sub
shl
frstor
inc
mov
cmp
aas
enter
hlt
jo
adc
push
leave
xchg
cmps
mov
jnp
mov
test
out
pushf
rcl
retf
or
sub
add
outs
clc
xor
vmovntpd
and
bound
mov
cmp
sub
loop
sahf
mov
adc
ins
aas
push
fiadd
inc
jecxz
inc
and
(bad)
mov
mov
jne
jmp
mov
xor
xor
imul
pop
pop
add
sbb
test
add
xor
sbb
mov
cld
outs
pop
fmul
mov
push
sbb
cmp
cmp
aas
call
add
pop
inc
xchg
pmuludq
movs
mov
or
nop
leave
xchg
lods
pop
pop
mov
jmp
addr16
xor
xchg
call
xor
cmp
sub
push
sbb
cmps
mov
les
push
rcr
or
in
mov
mov
adc
xlat
(bad)
push
push
and
loopne
push
je
or
push
jmp
outs
sbb
enter
xchg
lods
cli
fsincos
mov
ret
or
pushf
int3
nop
and
mov
inc
mov
and
std
jg
nop
cmp
add
das
stc
popf
jl
inc
sub
inc
xor
fnstsw
xor
xchg
vmovlps
add
pop
fild
bnd
xchg
movs
dec
loop
inc
(bad)
pop
cmp
aaa
test
bound
mov
xchg
out
dec
jno
out
sub
xor
inc
inc
sub
mov
cmp
test
imul
mov
xor
inc
pop
xchg
add
push
popa
rcl
fs
mov
mul
xor
movs
arpl
mov
sub
inc
int
and
leave
outs
push
mov
adc
or
xchg
mov
add
cmp
xor
xor
fdiv
push
pushf
push
sub
movs
in
and
iret
and
jmp
in
repz
add
jmp
sbb
es
jmp
dec
cmp
push
xchg
mov
mov
push
into
daa
int3
addr16
pop
lds
(bad)
jp
in
mov
mov
fisub
gs
je
cdq
retf
call
in
std
mov
push
inc
popf
and
popa
fsubr
dec
rol
push
loop
or
fwait
stc
mov
mov
dec
pop
ins
into
sbb
lods
adc
xchg
xor
das
ins
mov
fs
adc
inc
mov
call
dec
pop
std
xchg
ins
jb
fiadd
inc
sbb
or
call
shr
push
sbb
jmp
in
jns
mov
in
leave
leave
test
pop
stos
sbb
(bad)
ss
loopne
cmp
sub
rcl
xchg
pop
cmp
mov
lds
push
cmp
arpl
iret
clc
pop
mov
inc
(bad)
jno
xlat
fsubr
retf
mov
add
jmp
stc
mov
jbe
xchg
jl
std
xor
and
mov
add
mov
xchg
lds
push
mov
jns
or
sbb
sub
mov
inc
sar
stos
leave
shl
push
cmp
mov
add
and
inc
pop
pop
clc
xchg
and
mov
fsub
pushf
dec
dec
push
cwde
xor
shr
mov
or
or
(bad)
(bad)
and
fs
inc
inc
jge
add
mov
pop
daa
pusha
cwde
setp
and
ret
inc
ror
fucom
xor
rol
lea
mov
cmp
inc
fwait
int3
ds
dec
mov
out
outs
test
inc
xchg
ss
inc
clc
mov
mov
push
popf
lds
and
test
cmp
imul
aad
ds
cmp
dec
push
cdq
std
shl
mov
mov
push
(bad)
pop
leave
arpl
xchg
jmp
ret
aad
fidiv
mov
sub
jns
jp
mov
jnp
xor
imul
and
sti
sbb
and
cmp
aam
pop
push
popa
adc
cmp
mov
mov
mov
or
push
and
jp
test
lods
scas
mov
jg
cmp
enter
cmp
pop
sahf
aam
dec
rdpmc
arpl
cmp
pusha
shl
inc
push
pop
sub
(bad)
pop
jo
repnz
pop
push
pop
cmp
paddd
xchg
cdq
(bad)
jno
dec
ret
pop
call
pop
sub
push
xlat
sub
rcl
je
xchg
aam
outs
pop
mov
or
add
aaa
shl
arpl
cmp
test
add
(bad)
dec
mov
jnp
cmp
xchg
pop
and
push
outs
or
adc
jl
dec
jg
pop
fsub
sti
rep
jmp
mov
pusha
test
iret
fcomi
(bad)
fidivr
rcr
xor
push
cs
and
clc
loope
mov
sar
sub
and
sub
xchg
test
add
mov
fcmovnu
cmc
fist
adc
jmp
mov
sar
outs
leave
mov
imul
out
repz
jge
(bad)
and
sahf
add
xor
out
movs
mov
inc
sbb
scas
int3
inc
xchg
hlt
call
sbb
aam
xchg
xor
mov
mov
imul
mov
or
(bad)
mov
pop
push
or
stos
test
push
ret
jae
mov
inc
add
sbb
push
popa
stos
xor
in
int
ds
adc
jns
or
pop
sbb
lods
cs
or
xchg
stc
out
mov
push
adc
sbb
stos
inc
sahf
or
mov
add
call
jnp
mov
pop
add
(bad)
cmp
xor
or
xor
jo
aad
fdiv
add
cmp
retfw
adc
int3
cmp
and
cmp
cmp
fisub
mov
dec
fcomp
ja
mov
rcl
retf
mov
push
out
dec
jle
mov
(bad)
mov
inc
jg
clc
ins
aas
test
push
xor
jns
packuswb
and
outs
pop
fidivr
pusha
test
dec
mov
loopne
pusha
xchg
(bad)
fisttp
push
fsubrp
lds
pop
or
jge
pop
mov
ds
(bad)
pop
push
sbb
mov
test
(bad)
dec
mov
imul
cmps
and
pusha
shl
mov
mov
rcr
pop
jmp
jne
aaa
sbb
jle
and
dec
lds
out
ds
add
std
pop
not
not
push
inc
in
imul
xchg
int3
lods
stc
(bad)
push
aas
ja
pop
pop
out
fist
retf
and
dec
adc
lods
sub
aam
cmps
xchg
movs
cmp
gs
xor
loop
inc
sahf
repz
sbb
sub
xor
inc
aaa
ret
movs
sbb
out
sti
outs
cwde
fwait
ret
arpl
jl
mov
int3
and
mov
sti
jo
test
or
mov
retf
out
sbb
mov
out
pop
pop
dec
mov
sbb
xchg
jmp
retf
sti
adc
xchg
adc
call
jge
out
pop
(bad)
mov
push
shl
sbb
cmps
pop
ins
std
lea
push
inc
adc
in
arpl
jl
pop
cmp
push
mov
mov
xchg
iret
es
lahf
jmp
xchg
imul
mov
and
inc
inc
stos
inc
dec
push
push
test
repnz
pop
idiv
call
(bad)
jae
push
xchg
push
jmp
hlt
hlt
xchg
fadd
fisttp
mov
or
or
pop
ret
dec
rcr
mov
pop
ret
pop
cmp
sti
iret
mov
cs
or
push
cwde
inc
sbb
out
push
jmp
leave
sub
int3
jp
das
cli
xchg
(bad)
jecxz
cmp
jg
xchg
sbb
push
int3
xor
daa
(bad)
xlat
mov
and
test
sbb
pop
test
jne
add
jmp
test
sub
enter
sar
mov
scas
lahf
or
mov
test
pop
repz
ret
scas
lods
dec
sub
ins
test
jae
mov
jle
cmp
(bad)
dec
sbb
cmp
add
into
scas
lock
jne
pop
xchg
arpl
test
shr
jns
scas
or
jb
idiv
ins
icebp
repz
cmp
mov
mov
leave
jl
inc
pop
sti
cmp
adc
mov
int3
lock
ret
mov
cmp
imul
push
adc
stc
sar
mov
inc
stc
shl
(bad)
push
repnz
test
jl
mov
xor
cmps
push
aam
push
add
jle
call
cmp
jg
xchg
test
xchg
jl
inc
and
in
pop
mov
pop
dec
sub
fsubr
aas
pop
addr16
loopne
pop
mov
test
push
mov
push
das
cwde
into
retf
push
or
or
xor
and
jmp
pop
mov
sub
xchg
inc
jo
sub
outs
pop
dec
ss
inc
hlt
sbb
mov
cld
or
jns
and
out
jnp
xchg
jp
mov
mov
ret
mov
push
jbe
and
pop
xor
in
outs
and
mov
cs
repnz
mov
push
das
outs
fadd
icebp
mov
pop
ficomp
mov
cmp
push
jmp
xor
jae
jg
pop
jge
cs
in
shr
jne
xchg
xchg
imul
shl
mov
ds
test
out
lods
sar
sbb
lahf
pop
fwait
data16
sbb
adc
and
mov
iret
fcmovbe
fld
jae
pop
or
enter
mov
mov
mov
add
aad
push
es
retf
add
orps
add
jne
ficomp
inc
loope
cmc
inc
mov
int
call
das
dec
push
inc
xlat
cmp
daa
pmaddwd
cmp
or
mov
adc
(bad)
popa
pop
mov
mov
mov
mov
(bad)
jae
aaa
cmp
scas
mov
pop
or
cmp
xor
das
xor
xor
int
mov
inc
inc
sub
ficom
mov
test
popf
cmp
dec
pop
push
xlat
hlt
inc
sar
and
and
pop
sub
jne
jmp
push
and
cmp
retf
cmp
aaa
aam
inc
inc
gs
mov
pushf
inc
dec
(bad)
cmps
int
fdivr
gs
pop
adc
stc
cmp
out
addr16
outs
enter
mov
repnz
mov
pop
into
mov
jg
leave
(bad)
cld
push
jecxz
jnp
ja
mov
fst
out
(bad)
mov
ja
push
scas
aas
ins
mov
and
pusha
pop
xor
mov
add
inc
xor
cdq
add
or
cmc
dec
lahf
imul
pop
push
mul
mov
sahf
mov
dec
fsubr
in
pop
ins
std
jno
xchg
cli
fwait
scas
int3
sub
hlt
mul
xor
(bad)
out
rcr
cdq
into
mov
int3
sub
pop
push
xchg
sar
movs
bound
xchg
xor
sti
push
jne
xchg
xlat
xchg
pop
call
out
lock
mov
sbb
loope
push
xchg
cmp
or
fdivr
push
addr16
neg
ss
adc
stos
shl
pop
shl
call
sahf
and
retf
sub
mov
add
or
and
adc
das
sub
jnp
jns
mov
aas
xor
in
mov
mov
push
xchg
loope
jp
mov
pop
shl
mov
xor
pop
loopne
push
movs
pop
mov
cli
(bad)
mov
xchg
int
scas
pop
scas
dec
jg
cmp
test
icebp
mov
mov
das
dec
loopne
xchg
mov
mov
dec
arpl
push
leave
icebp
(bad)
pop
and
stc
xor
paddd
jmp
out
aam
sbb
pop
(bad)
pop
sub
popa
psadbw
add
jae
cmp
js
std
mov
sbb
xchg
jmp
ret
icebp
fild
(bad)
shl
out
push
cmp
ins
out
push
fs
loopne
pop
xlat
dec
and
out
(bad)
xor
mov
mov
push
sub
out
or
ror
retf
loop
icebp
in
and
aam
push
jo
xchg
jp
mov
jo
and
dec
mov
test
(bad)
in
mov
push
(bad)
cs
scas
stos
clc
adc
cwde
int
ss
push
iret
jb
dec
inc
jbe
or
outs
pushf
hlt
inc
dec
scas
jl
dec
pop
ja
retf
add
rcl
call
das
mov
lahf
xchg
cs
mov
or
daa
cdq
lahf
mov
fs
mov
loop
repnz
dec
dec
pop
jp
mov
packssdw
mov
push
mov
std
cmp
mov
add
sahf
mov
mov
pop
adc
cli
mov
popa
and
enter
dec
ss
add
add
push
lock
leave
or
and
jnp
jge
dec
add
das
sub
icebp
xor
out
scas
pop
test
hlt
pop
pop
dec
imul
ins
bound
xor
sub
jb
fs
xchg
and
and
call
(bad)
and
adc
jae
fst
add
mov
std
push
xchg
shr
aas
inc
call
jle
repz
into
sub
jbe
fwait
or
fldcw
inc
mov
jmp
adc
(bad)
into
and
(bad)
enter
in
xor
aaa
enter
add
dec
xor
or
out
or
icebp
pop
jb
mov
xchg
std
lods
cmp
cmp
ss
out
mov
adc
xor
mov
lahf
repz
xor
add
pop
and
pop
(bad)
and
add
jae
xor
sbb
stos
inc
mov
ret
inc
in
sahf
add
push
fs
sbb
(bad)
iret
leave
icebp
aaa
out
fwait
int
hlt
ret
lods
(bad)
in
or
gs
out
mov
push
ret
lods
test
push
jecxz
dec
in
xchg
sub
cdq
mov
sbb
mov
or
mov
fucomi
arpl
xor
sub
fmulp
sti
aaa
push
enter
jns
jbe
push
mov
cmp
(bad)
xchg
cmc
cmps
xchg
pop
dec
xchg
push
xor
vandps
mov
rol
inc
or
xor
mov
fs
in
and
dec
jecxz
cdq
je
cmp
inc
mov
sbb
lods
sub
cwde
pushf
cmp
xor
pop
xor
mov
(bad)
jle
push
sbb
push
inc
sub
or
sub
adc
icebp
fidivr
lds
mov
imul
mov
fadd
or
adc
shl
sub
mov
sar
or
dec
add
sub
lea
pop
push
and
imul
pop
sbb
jmp
mov
dec
and
ret
fwait
dec
not
xchg
mov
cwde
jp
cmp
pushf
in
fstp
ret
inc
adc
push
add
js
(bad)
loopne
cdq
mov
jmp
cmp
mov
mov
mov
cli
push
inc
out
push
inc
outs
pop
and
retf
inc
mov
cmp
dec
push
jecxz
and
mov
mov
cmpxchg
jle
mov
push
add
pop
jmp
popa
scas
je
cmp
js
inc
add
push
mov
nop
or
sbb
pcmpeqw
lahf
fnstenv
pushf
shl
repz
push
test
adc
int
ds
mov
jmp
out
fdiv
(bad)
ins
data16
and
call
dec
or
cdq
push
mov
mov
outs
xlat
sub
xchg
bound
adc
or
pop
mov
pop
jns
jne
outs
loopne
jmp
cli
(bad)
or
mov
mov
xchg
lock
fs
retf
sbb
fisub
fcmovnbe
inc
sar
and
push
call
adc
dec
pop
fst
cmps
and
into
xor
pop
je
pop
mov
push
lods
imul
cmps
cwde
(bad)
and
scas
xor
adc
sbb
xchg
mov
cwde
call
scas
dec
inc
retf
scas
test
je
in
jge
and
add
and
pusha
xor
mov
movs
xchg
pop
sub
pop
(bad)
cmp
inc
pop
in
int
add
jmp
and
lahf
aam
jae
mov
add
scas
aaa
pop
cmp
sbb
cdq
sar
xor
pop
inc
retf
rcl
not
arpl
mov
sti
sub
inc
sub
pop
mov
adc
mov
ret
and
push
mov
pop
push
or
shr
push
pop
and
jge
mov
mov
into
jb
cwde
daa
aad
mov
test
jno
push
fistp
sbb
mov
mov
dec
aas
xchg
push
loopne
call
jl
mov
retf
mov
push
mov
into
jno
(bad)
and
push
xchg
popa
mov
sbb
out
les
push
dec
movs
cmp
cmc
jo
inc
nop
adc
cwde
(bad)
mov
push
rcl
ficomp
dec
and
mov
jge
fsub
cld
sub
(bad)
gs
add
call
sub
pop
cmp
out
push
pop
cmp
fisttp
sbb
push
mov
lock
and
xor
mov
cmp
test
test
dec
jecxz
retf
ja
xor
and
pop
jns
mov
mov
test
mov
clc
dec
xor
nop
cmps
nop
jmp
ins
int3
xchg
inc
lods
pushw
es
mov
jp
stos
add
out
fwait
int
add
imul
cli
inc
dec
sti
dec
popf
jb
ins
inc
adc
in
pop
out
imul
jae
cwde
je
add
sbb
test
mov
push
ds
repz
(bad)
adc
cld
push
mov
xchg
fcomip
das
mov
lahf
mov
shl
shr
sar
mov
adc
in
(bad)
cld
and
icebp
jbe
(bad)
in
retf
push
mov
aad
aad
out
or
ins
shl
bound
iret
outs
fst
dec
adc
mov
dec
mov
mov
and
push
adc
push
add
rcl
and
repz
stos
(bad)
repnz
je
rcl
jl
jmp
movs
xor
xchg
inc
ficomp
cmps
mov
pop
xchg
push
(bad)
fwait
add
fwait
jae
mov
xchg
adc
popa
pop
add
cdq
(bad)
aam
mov
pop
dec
dec
sti
loop
or
jp
and
stos
and
sbb
in
inc
shl
out
sbb
not
(bad)
(bad)
repnz
add
lea
adc
mov
pop
cvtps2pi
and
and
inc
pop
mov
adc
xor
(bad)
xor
les
test
sahf
mov
sbb
(bad)
or
xor
sub
and
(bad)
jo
adc
popf
xchg
in
fs
(bad)
out
mov
jo
fild
cmp
push
jge
jne
sti
fist
jo
push
int
xchg
or
pop
cdq
push
mov
popa
ror
or
xchg
cmp
retf
movs
cwde
dec
sar
mov
cli
retf
mov
pop
es
clc
clc
iret
out
jg
mov
xchg
push
shl
add
mov
int3
jb
fdivr
mov
fst
loope
sbb
pop
push
clc
dec
fidivr
fnstenv
loope
test
loop
icebp
inc
cmc
pop
sub
fild
cmp
fld
aaa
cli
sub
aam
retf
mov
jl
arpl
cmp
pop
jg
dec
(bad)
iret
push
pop
xchg
mov
imul
stc
js
(bad)
sti
cmps
data16
stc
xchg
pop
push
cmp
adc
ror
gs
jno
repnz
in
cmp
fnstsw
xchg
lods
jne
mov
fdiv
jns
gs
loope
push
jns
or
outs
int
loopne
jns
xchg
mov
bound
iret
inc
inc
mov
retf
pop
jb
mov
cmp
or
cld
sar
inc
fisttp
jbe
sub
stos
int3
mov
sbb
in
or
shl
hlt
mov
lea
outs
je
xor
mov
int3
leave
jo
pop
push
cdq
cli
inc
cs
jp
or
jmp
out
outs
mul
and
cmps
clc
repz
jmp
xor
shr
clc
jp
jne
ins
cmps
mov
ins
shl
ret
outs
pop
mov
adc
jg
inc
or
shl
or
int
adc
lods
sub
test
inc
ss
xlat
xchg
fld
shr
sbb
inc
adc
sub
movs
mov
adc
es
lods
arpl
jb
call
add
sub
adc
ja
test
adc
test
and
xchg
xchg
das
pop
add
xchg
and
inc
imul
aam
fnsave
xchg
mov
pop
xchg
sub
arpl
cmp
(bad)
cld
mov
xor
xchg
out
mov
iret
xchg
and
leave
jb
pop
or
xor
sbb
push
inc
cdq
ins
xchg
fild
cdq
loopne
and
cmps
sbb
add
imul
icebp
fs
push
seto
add
pop
movs
add
push
int
jno
in
mov
jns
scas
push
xchg
or
call
jmp
inc
jae
fistp
fs
and
sub
mov
add
push
xor
(bad)
(bad)
clc
mov
mov
add
sbb
push
loopne
or
and
ss
popa
sub
dec
cmps
ds
test
mov
push
ror
dec
in
(bad)
or
inc
aaa
push
push
pop
mov
call
repnz
movs
dec
popa
fdiv
pusha
cmc
and
sbb
stos
sbb
cmp
test
sub
out
push
sub
push
dec
in
and
sahf
mov
dec
sti
push
adc
mov
mov
jl
or
ja
cmp
xor
or
mov
dec
xchg
pusha
adc
jno
scas
jnp
dec
inc
idiv
xor
jle
rcl
jmp
test
dec
rol
mov
pop
iret
imul
loopne
lds
push
mov
int
or
cmc
jns
add
inc
push
push
or
in
dec
into
rcl
xor
dec
cmp
out
aaa
sbb
les
pop
fwait
out
pushf
xchg
cmp
fsubr
xchg
out
xor
out
icebp
test
les
call
fisubr
inc
cld
clc
loop
or
ret
push
mov
xchg
jp
and
cmp
and
adc
gs
arpl
mov
jmp
pop
inc
cli
mov
add
xor
pop
aaa
or
clc
jmp
add
loop
push
js
mov
jle
(bad)
mov
mov
int3
adc
fwait
es
inc
in
imul
int3
mov
mov
jnp
aad
sbb
xchg
and
push
or
inc
cmc
cmp
dec
mov
cmp
dec
sahf
ret
xor
out
pop
jne
aaa
xchg
(bad)
into
inc
bound
test
not
adc
repnz
(bad)
mov
xchg
shr
inc
rol
jns
mov
xchg
out
clc
jbe
push
mov
and
ror
popa
jae
adc
pushaw
sub
sub
(bad)
fcmovnb
pop
and
push
test
test
fndisi(8087
fs
xor
lea
add
imul
bound
mov
shl
jbe
stos
daa
push
and
ds
cli
imul
stos
or
in
mov
je
jo
hlt
das
add
aaa
jmp
ss
mov
push
mov
xchg
push
rol
hlt
mov
iret
out
add
ror
mov
xor
xchg
jnp
push
jp
mov
cmps
out
adc
pop
pop
cmp
adc
mov
inc
ins
mov
inc
inc
lods
rcl
(bad)
movs
cld
push
popf
lods
lods
jo
push
gs
sub
or
mov
jmp
hlt
mov
xchg
inc
xlat
pop
inc
pushf
rcl
(bad)
scas
xor
and
and
hlt
imul
jge
cmp
sbb
jl
sbb
aaa
pusha
imul
in
mov
adc
cmps
out
idiv
sti
addr16
and
sahf
push
jb
je
out
push
loop
inc
call
or
or
mov
rcl
dec
fsub
xor
push
mov
pop
push
lods
sub
or
dec
sbb
enter
mov
cwde
sbb
lock
stc
mov
cmps
loope
ret
sar
pop
or
aaa
mov
into
xchg
hlt
daa
pop
je
outs
scas
xor
inc
shr
scas
jbe
rcr
push
dec
pop
cmp
jo
out
call
cmp
dec
inc
push
pop
xchg
fnstenv
hlt
out
dec
mov
sahf
cdq
loop
out
pushf
cmp
in
dec
icebp
jle
adc
push
fld
jmp
in
cmp
cmps
fsub
or
adc
cli
xchg
mov
cmp
iret
jl
pop
fcomi
mov
ret
and
outs
push
sbb
pop
lahf
jcxz
or
loop
push
sub
mov
push
icebp
mov
gs
ret
movs
and
cli
loope
fisttp
push
aas
xlat
test
sbb
hlt
stos
sbb
rcr
sti
test
out
leave
pop
mov
cmps
add
mov
iret
ins
pop
mov
pop
adc
push
test
out
sub
daa
push
test
and
xchg
stos
jnp
aas
iret
mov
and
xchg
call
rcr
dec
adc
push
fcomp
cmc
push
jmp
jge
push
test
sub
sub
in
ins
xchg
stos
mov
jno
and
mov
fadd
fdivr
data16
lea
(bad)
pop
and
jnp
cs
clc
mov
adc
lock
cmps
xchg
std
hlt
not
je
sub
inc
dec
or
pop
in
jbe
stc
push
shr
lea
gs
(bad)
dec
pop
stos
cld
cld
add
xchg
inc
cmp
mov
retf
ja
sub
xor
xor
cmps
dec
mov
push
cli
sahf
aas
cld
lahf
and
inc
dec
mov
je
mov
mov
aas
movs
sub
push
and
inc
popf
adc
pushf
mov
mov
push
add
mov
repnz
out
push
call
jns
dec
jl
jo
jns
je
lea
adc
dec
inc
(bad)
jne
mov
in
inc
mov
out
mov
call
jl
mov
(bad)
ins
pop
pop
pextrw
push
out
push
stc
or
(bad)
out
in
mov
int3
enter
adc
mov
jle
ja
test
loope
dec
les
je
xchg
leave
dec
mov
pop
call
test
sar
inc
push
and
xor
div
xchg
std
neg
dec
mov
sub
pop
lahf
shr
fsubr
jp
cmps
pop
call
arpl
and
pop
mov
inc
lds
jns
inc
retf
mov
(bad)
xchg
jmp
ja
ret
jo
adc
sub
xlat
repz
xor
push
int3
scas
push
cwde
sub
fiadd
mov
ins
mov
out
les
cmp
retf
jp
fsub
jne
adc
(bad)
fnsave
jns
dec
test
mov
dec
add
cdq
xchg
inc
into
dec
push
aad
or
imul
pop
add
icebp
sub
jmp
ja
push
stos
adc
mov
xchg
push
or
push
pusha
pop
cli
jp
push
add
push
jb
ret
sbb
mov
and
push
and
adc
cmp
mov
ins
fadd
push
js
sbb
sbb
lea
dec
test
or
or
test
outs
xchg
xor
sbb
imul
stos
out
out
aam
jbe
into
addr16
adc
arpl
popa
outs
mov
push
stc
data16
sbb
inc
fnstcw
ficomp
adc
jae
sbb
dec
jmp
stos
push
mov
call
adc
mov
in
mov
mov
xor
aam
retf
mov
jnp
inc
add
xchg
pop
cdq
sti
sbb
mov
adc
jg
mov
cmc
xchg
jne
movs
imul
jmp
pusha
aad
jl
lahf
fucomip
loopne
mov
std
jns
sbb
aad
mov
stos
call
es
retf
(bad)
out
aad
sti
ss
push
inc
push
xor
pop
jmp
pop
les
mov
and
mov
inc
xchg
mov
(bad)
scas
repz
ja
call
aaa
mov
xchg
jg
not
mov
sub
dec
push
jne
test
sub
pusha
and
ret
xchg
loope
das
xchg
dec
iret
les
out
and
sbb
out
mov
add
mov
jns
sub
sub
arpl
or
fadd
repnz
mov
pop
inc
je
push
(bad)
jnp
call
mov
sbb
aad
loope
(bad)
pop
shr
cs
inc
adc
imul
pop
fisttp
sahf
push
leave
and
or
ins
jo
call
mov
into
clc
dec
push
xor
gs
hlt
ss
movs
stos
push
aas
xchg
push
inc
in
inc
sub
push
jg
sbb
arpl
mov
call
add
into
(bad)
and
cmp
pop
and
fcomp
push
pop
rcl
nop
outs
je
(bad)
sar
imul
jno
stc
sbb
and
enter
adc
push
mov
push
mov
in
push
test
test
pusha
aas
and
imul
jg
pusha
cmp
adc
int
sti
dec
movs
dec
jb
or
retf
mov
pop
outs
outs
jge
sbb
push
ror
stc
sub
mov
enter
(bad)
retf
push
or
adc
push
scas
jno
jmp
xchg
sbb
xchg
push
sbb
push
adc
cmp
dec
dec
mov
sbb
mov
sbb
jle
xchg
loopne
pop
push
pop
ss
mov
push
jl
ds
loope
pop
mov
dec
fnstsw
add
cmc
pushf
fsub
adc
rol
cs
rol
js
sbb
sub
outs
xor
xchg
sti
int3
sahf
push
icebp
test
movs
cmc
adc
into
cld
fs
push
adc
inc
dec
sbb
es
jbe
mov
femms
or
xchg
shl
sub
mov
cmc
sub
movs
xchg
xchg
push
test
jae
mov
les
xor
aaa
inc
in
fcom
sti
sub
add
push
iret
pop
xchg
jecxz
mov
loop
pushw
jns
(bad)
sub
adc
dec
inc
(bad)
jne
mov
mov
jb
add
test
into
mov
bswap
pop
test
or
and
push
pop
add
aas
cmc
ds
mov
rcr
cmp
mov
inc
push
mov
les
mov
ret
fs
pop
inc
setb
js
hlt
sbb
ffree
jno
jae
ret
lds
sbb
loope
push
jecxz
jmp
mov
retf
fmul
cmps
xchg
inc
sub
fdiv
inc
(bad)
cmp
ret
out
sti
call
cwde
lods
rol
push
mov
sbb
inc
xchg
icebp
cs
test
enter
mov
mov
popa
nop
add
out
mov
pusha
test
mov
pusha
pushf
cmp
sub
xchg
popa
adc
adc
imul
dec
and
xchg
jns
or
movs
pop
pusha
inc
cmp
mov
neg
outs
ror
lods
icebp
push
pop
jle
call
inc
adc
jno
mov
aad
inc
sar
les
push
pop
inc
xchg
jecxz
mov
mov
push
dec
pop
popf
rcr
lods
je
inc
dec
inc
jns
out
push
pop
addr16
pop
cmp
pushf
cmp
ss
pop
cmp
pop
dec
out
cmc
enter
dec
mov
dec
in
js
fild
aam
fisub
call
test
and
call
icebp
push
in
sub
shl
cmps
sbb
jae
sub
mov
popf
add
std
cli
fs
lods
mov
cmc
inc
sub
in
mov
(bad)
repnz
or
js
xor
scas
cwde
sahf
(bad)
xchg
imul
adc
xchg
jl
pop
sub
cwde
push
out
mov
adc
jae
jns
outs
stos
dec
mov
popa
add
dec
popf
popa
popa
call
lods
push
bound
dec
fld
fnstcw
inc
or
movs
jns
mov
xchg
push
adc
cmps
inc
cli
in
rcr
clc
lea
jo
push
push
arpl
(bad)
or
inc
popa
les
leave
pop
jp
dec
xchg
(bad)
out
mov
sbb
clc
jne
cwde
lea
mov
push
mov
add
scas
sar
push
(bad)
in
int3
mov
add
sbb
push
inc
push
imul
mov
addr16
mov
push
(bad)
fistp
xor
lock
xchg
pop
fidiv
int
or
jmp
int3
dec
cmp
outs
dec
mov
mov
jns
and
and
ret
cdq
fdiv
(bad)
in
lea
adc
aam
dec
ficom
jb
rcl
and
push
mov
(bad)
popf
xor
xchg
(bad)
dec
push
sub
jmp
shr
dec
xor
jae
pop
retf
cmp
(bad)
adc
push
push
or
jo
jl
inc
fwait
xchg
mov
ss
arpl
popa
retf
add
inc
iret
and
ins
mov
xchg
fdivp
pop
or
xor
cdq
cmps
fstp
(bad)
(bad)
xor
outs
ror
popf
pop
jb
mov
cmp
stc
xor
mov
int3
call
fdivr
inc
sbb
(bad)
push
out
popfw
sub
add
add
call
imul
or
stos
inc
add
or
add
add
jg
push
push
retf
call
and
mov
dec
retf
scas
jno
mov
pop
ja
das
add
das
ror
adc
jmp
call
mov
jmp
xchg
cmp
rol
loope
push
push
sbb
ins
jns
add
hlt
adc
ret
adc
and
mov
sub
mov
sahf
jno
lds
out
add
push
fstp
jb
jno
mov
dec
js
stos
stos
sbb
inc
xchg
adc
dec
mov
into
mov
inc
icebp
out
cmp
nop
jno
add
fwait
loope
lods
call
add
inc
cmp
mov
xchg
jp
dec
mov
sbb
jno
gs
jno
mov
mov
lds
sbb
(bad)
loop
repz
dec
ss
aad
idiv
jne
push
push
push
out
aam
int3
scas
imul
inc
sbb
sub
jb
outs
fdivrp
add
sbb
scas
dec
mov
push
push
add
repnz
mov
push
fs
push
stos
cmp
out
mov
cmp
jo
cmps
adc
test
adc
icebp
mov
leave
mov
repz
mov
adc
test
push
pop
inc
leave
jb
inc
outs
sub
pop
xchg
pop
neg
dec
mov
std
add
in
(bad)
fild
imul
sub
mov
jge
push
adc
outs
cmps
aad
addr16
cmp
es
jno
test
xchg
(bad)
sub
outs
in
mov
out
mov
aaa
jp
mov
fwait
int
cmc
dec
mov
icebp
shr
push
push
push
out
mov
xor
fucomp
outs
out
mov
xor
dec
jbe
sbb
jbe
sub
mov
push
mov
push
mov
imul
pop
aad
jge
xchg
jg
movs
enter
scas
scas
mov
push
jns
jmp
test
(bad)
mov
popf
pop
xor
shl
cmp
les
je
test
add
add
adc
fsqrt
sub
xchg
add
fisttp
rcr
xor
xchg
mov
mov
call
(bad)
fistp
aam
jp
sar
sti
cmps
sbb
pop
retf
aaa
mov
push
sahf
cmp
in
dec
lods
cmps
(bad)
retf
sbb
mov
cmp
sbb
jo
cwde
dec
pop
mov
mov
(bad)
scas
jbe
sub
pop
push
mov
xor
mov
dec
(bad)
sub
fs
arpl
repz
sbb
push
adc
call
shl
aas
inc
sbb
dec
pop
pop
rol
jl
adc
pop
fadd
pop
stc
sbb
push
push
cs
push
pop
adc
mov
int
xor
(bad)
mov
cs
push
jmp
jmp
dec
xlat
in
loope
aaa
arpl
outs
jge
xchg
mov
lods
lea
in
daa
or
adc
jp
xlat
push
lds
sar
movs
adc
pop
cs
je
xchg
cdq
xlat
rcl
pop
adc
mov
xlat
popf
fisttp
push
xchg
add
xor
adc
popf
lahf
or
mov
sahf
push
(bad)
in
xchg
and
int
jmp
xchg
jmp
add
jo
test
mov
lods
mov
xchg
lea
or
fld
shl
and
mov
push
inc
xchg
dec
rol
xor
pop
jne
jo
out
fs
sub
jmp
fxch
dec
(bad)
retf
test
sbb
mov
mov
mov
je
(bad)
out
push
rol
stc
rol
loop
jp
cmps
xchg
repz
fstp
(bad)
outs
xchg
lock
jmp
jge
dec
mov
xchg
push
js
cli
aas
das
push
ins
(bad)
push
add
popf
xor
sbb
sub
icebp
mov
mov
adc
repnz
out
cld
sbb
(bad)
mov
movs
retf
mov
sbb
lock
mov
jae
ficom
ja
aad
mov
jbe
push
lods
pusha
jecxz
call
xor
xchg
repz
mov
rcr
fwait
stc
cs
shr
mov
and
sbb
imul
mov
pop
repz
addr16
cmps
sub
push
mov
sbb
xor
mov
xor
jmp
or
pushf
adc
xchg
pop
pop
and
add
pop
in
and
mov
cli
retf
jo
into
ja
sbb
mul
add
cld
or
pop
mov
xchg
inc
add
sbb
in
push
push
lock
shl
inc
imul
sbb
cmp
pop
sub
mov
xchg
mov
pop
adc
or
ss
mov
jbe
loop
cmp
icebp
pushf
pop
out
inc
sahf
sub
imul
push
stc
sub
sahf
das
fdivr
das
mov
jnp
sbb
mov
aam
gs
ret
fcom
mov
jo
(bad)
in
cmc
adc
xor
and
(bad)
dec
pop
inc
ins
sahf
xchg
or
sbb
imul
cmps
jne
jecxz
jmp
inc
add
cmps
push
in
mov
inc
in
jne
fnstsw
ins
icebp
sbb
cli
shr
fcom
ret
inc
stos
add
or
icebp
sub
data16
retf
add
(bad)
call
call
adc
dec
movs
cmp
(bad)
cli
aam
iret
nop
push
add
ins
inc
test
(bad)
jno
mov
lahf
add
push
cmp
sub
jg
cld
mov
adc
fstp
ret
in
pop
pop
mov
nop
sbb
mov
xchg
or
mov
xor
jge
scas
push
mov
nop
mov
dec
or
out
stos
jg
in
pop
retf
inc
pop
retf
scas
call
mov
stos
in
in
mov
and
cwde
sbb
loopne
xchg
and
push
inc
movs
pop
xchg
push
popa
adc
mov
dec
out
jne
jp
pop
mov
lods
sbb
lods
xchg
pop
jae
test
rcl
in
cmp
(bad)
and
pop
mov
test
lods
mov
mov
add
pop
dec
or
or
(bad)
mov
mov
and
push
jae
and
cdq
mov
dec
leave
xor
push
hlt
sbb
and
cs
mov
push
iret
cmp
jmp
(bad)
sbb
(bad)
repz
sahf
(bad)
out
xchg
mul
sub
and
adc
mov
mov
pop
inc
(bad)
loopne
cmps
shl
and
clc
repz
add
test
fistp
sub
mov
mov
jae
xlat
not
or
inc
(bad)
jae
jecxz
sbb
popf
push
mov
mov
pop
add
adc
lea
test
stos
rcr
and
scas
cmp
fcmovu
leave
mov
mov
pop
mov
xchg
mov
adc
arpl
cs
xchg
arpl
xlat
and
jne
outs
inc
xchg
or
and
repnz
push
test
aad
movs
ror
shr
lock
imul
out
pusha
mov
jno
xor
mov
neg
scas
fldenv
push
das
les
sub
(bad)
and
sub
fcmovu
mov
and
mov
fwait
mov
pop
add
imul
adc
(bad)
outs
adc
or
ja
lods
(bad)
aad
les
or
inc
pusha
xor
push
mov
mov
mov
adc
add
mov
es
popf
aaa
out
(bad)
or
repnz
mov
xchg
jl
aaa
inc
push
cli
mov
inc
addr16
sub
add
cli
adc
loop
(bad)
mov
ret
icebp
push
xor
in
add
push
sbb
lods
or
jmp
out
lock
mov
fiadd
je
in
or
imul
jmp
sti
sub
mov
inc
mov
xchg
ins
xor
out
and
daa
retf
pop
xchg
and
xor
pop
leave
outs
icebp
iret
ja
add
sub
mov
mov
clc
push
and
js
call
mov
repnz
in
dec
add
and
sti
ds
adc
push
jle
leave
dec
retf
jae
call
mov
cmps
cmc
bnd
ins
mov
push
mov
mov
sbb
dec
sub
fiadd
xor
pop
data16
inc
ja
pushf
shl
in
mov
iret
xchg
dec
add
jle
mov
into
shl
mov
ret
jae
jl
scas
xlat
xchg
rcr
scas
inc
(bad)
xlat
push
or
hlt
adc
(bad)
xchg
mov
mov
inc
xchg
adc
out
dec
je
jmp
fbstp
pop
inc
ja
push
(bad)
add
cmps
(bad)
sahf
mov
aam
clc
ror
aas
imul
pop
(bad)
jmp
arpl
jle
xor
es
stc
int
jge
mul
pop
stos
call
inc
aaa
outs
(bad)
data16
leave
mov
hlt
mov
pushf
mov
xor
(bad)
in
(bad)
nop
jg
bnd
ins
ja
pop
pop
fistp
(bad)
sub
je
pop
sub
test
xlat
and
jl
je
ja
cmp
sub
popf
mov
inc
lods
clc
jecxz
dec
dec
test
mov
fs
icebp
std
sbb
push
adc
mov
mov
adc
mov
and
mov
sub
dec
mov
fwait
inc
sbb
fldz
dec
sbb
sub
pop
xchg
repz
cmp
adc
cmps
inc
or
push
xor
pushf
bound
and
pop
push
pop
test
sbb
test
sub
jle
lods
test
lea
pmullw
xor
push
cmp
lock
adc
or
dec
mov
jmp
ins
div
loopne
(bad)
and
fisub
xor
movs
xchg
adc
daa
scas
push
xchg
pop
scas
popf
mov
mov
push
or
jl
adc
(bad)
addr16
add
mov
cmp
xor
or
jo
or
dec
jecxz
out
adc
sub
ffree
adc
mov
jl
sub
cmp
pop
add
and
xchg
aas
jl
cmp
inc
cmp
outs
mov
or
and
lock
xchg
or
jo
movs
dec
and
sub
rol
or
pop
xchg
lock
dec
outs
push
and
cmp
(bad)
es
mov
imul
pop
dec
fs
pop
pop
pop
aam
xor
int3
xor
pusha
pusha
stos
inc
add
cmp
adc
ret
out
and
int
arpl
in
push
xchg
or
sub
push
jb
mov
jb
and
mov
mov
push
mov
out
lock
jae
mov
cs
rol
out
lock
jmp
arpl
mov
movs
or
cmp
iret
xchg
and
lahf
movs
pushf
dec
mov
adc
dec
mov
ret
fisub
stc
(bad)
dec
in
push
mov
sbb
stos
sbb
outs
sub
call
xchg
movs
arpl
mov
pop
(bad)
sbb
sub
call
arpl
inc
in
nop
jmp
cmp
xor
pop
add
push
adc
sub
daa
enter
ins
imul
loope
in
mov
sti
inc
test
mov
and
jb
xchg
retf
popa
inc
icebp
xchg
adc
dec
test
outs
cmp
push
dec
out
test
dec
lods
and
pop
or
mov
sub
not
push
iret
xchg
(bad)
xor
icebp
or
mov
jmp
wbinvd
pop
mov
xchg
js
dec
sbb
in
repnz
div
lods
mov
hlt
mov
dec
(bad)
pushw
jle
into
mov
mov
pusha
mov
adc
jmp
outs
jbe
shl
mov
cmp
xlat
inc
das
adc
ins
imul
jne
xchg
pop
out
push
imul
movs
push
mov
call
pusha
mov
mov
mov
mov
sahf
js
mov
mov
test
push
push
aad
cmps
sbb
mov
mov
and
jg
imul
nop
(bad)
retf
jl
mov
ss
dec
call
ss
les
nop
cli
stc
aam
push
dec
cmp
mov
mov
inc
sub
mov
adc
out
fdiv
je
fidivr
xor
jae
xor
or
sbb
retf
in
rcl
sbb
ret
and
test
sbb
(bad)
ins
mov
jg
jae
push
cmp
mov
aad
lea
pop
ret
sbb
call
dec
cmps
add
sar
lock
add
jle
movs
pop
retf
cdq
xchg
dec
mov
in
pop
xchg
jmp
pop
mov
loope
sub
ror
dec
push
lock
xlat
std
sub
xchg
mov
(bad)
cli
add
mov
ds
ja
bound
rcl
push
and
addr16
pop
push
push
push
lahf
sub
jae
jo
adc
pop
mov
retf
xchg
pop
fldcw
js
mov
ins
fucom
pop
pop
popa
push
pop
imul
push
pop
jmp
adc
mov
push
mov
mov
or
xlat
or
xor
sar
inc
mov
sub
sub
or
pop
push
pop
or
pop
cli
stos
or
(bad)
cmp
push
xchg
ss
ficom
imul
or
pushf
xchg
imul
mov
test
rcl
sbb
mov
push
fisubr
fidiv
div
enter
sbb
sete
(bad)
(bad)
out
sub
fbstp
or
je
cmps
popa
push
and
test
test
movs
ficomp
out
je
int3
imul
(bad)
add
dec
sbb
ins
mov
rcr
mov
mov
das
inc
mov
xchg
test
jecxz
in
jo
sub
imul
pop
lods
pop
cdq
stc
(bad)
movs
mov
cmps
arpl
fadd
sub
ret
adc
dec
ins
sub
(bad)
adc
jp
pop
rol
stos
imul
cmp
fcom
scas
sub
mov
xor
stos
fst
xchg
pusha
adc
lahf
das
cmp
push
xor
push
stos
aad
pop
xlat
test
stos
mov
cmp
sbb
sti
cld
lods
shl
jle
jge
sbb
push
icebp
test
mov
mov
test
mov
sbb
sbb
xor
pop
not
repz
mov
and
daa
psubusw
add
cmp
(bad)
cmps
retf
mov
jecxz
add
inc
lods
dec
ret
sar
inc
mov
fs
add
gs
dec
mov
jg
push
push
xor
lea
lds
mov
jns
cmp
ficomp
shl
retf
mov
add
or
pop
push
push
cmp
cwde
test
jg
push
imul
and
arpl
or
movs
inc
jbe
add
nop
(bad)
into
call
mov
in
inc
sub
or
and
enter
adc
in
mov
push
fdivrp
jno
test
std
xor
loopne
out
xchg
add
hlt
lahf
or
(bad)
loope
and
push
push
mov
or
pop
sub
in
inc
adc
adc
cmps
imul
out
loopne
dec
test
out
cmp
int3
pop
hlt
xchg
dec
test
xchg
cmps
mov
cmp
frstor
push
add
call
and
inc
adc
call
ins
fwait
adc
mov
add
xchg
cli
jp
xchg
ret
jae
xor
scas
jb
and
adc
push
rcr
outs
test
add
cmp
(bad)
icebp
hlt
movs
and
xchg
mov
aad
fst
fdivr
sbb
or
sub
lea
into
pop
xchg
sbb
xor
and
or
jmp
push
ss
mov
xchg
pop
xlat
lahf
je
(bad)
mov
das
shr
hlt
adc
push
nop
jbe
rcr
inc
pop
fistp
fdiv
jg
lods
and
cmp
push
das
pop
(bad)
xor
pop
sahf
sti
(bad)
imul
adc
sbb
or
xchg
pop
cmp
scas
mov
cld
scas
dec
jb
dec
jno
adc
fcmovb
jmp
int
movs
push
mov
pop
lods
inc
push
fmul
and
xchg
pop
stos
jmp
icebp
stc
fsub
or
jecxz
scas
cmp
sbb
dec
pop
repz
jecxz
mov
jnp
mov
rol
mov
xchg
dec
cmc
push
sbb
mov
ins
mov
or
repnz
inc
sub
jno
addr16
fdiv
cmovs
xchg
pop
rcr
jne
arpl
mov
mov
jne
and
cmp
dec
repz
dec
xchg
nop
xor
push
jge
and
mov
add
push
cmc
in
repz
fldz
(bad)
push
loop
adc
sub
sbb
mov
movs
ficom
js
sbb
outs
sub
add
call
lds
inc
fistp
xchg
inc
lods
aam
jl
cmovp
idiv
xor
and
scas
js
mov
outs
les
retf
(bad)
retf
gs
(bad)
jmp
lods
dec
adc
mov
jb
xchg
popa
fadd
or
add
test
sbb
fild
movs
mov
sbb
cmc
or
ds
dec
jle
lea
and
ror
(bad)
cmc
cmp
(bad)
cmp
adc
and
inc
inc
sub
pushf
loopne
pop
jno
repnz
fwait
dec
push
(bad)
(bad)
mov
adc
push
icebp
js
ds
ss
add
dec
loopne
leave
mov
mov
sub
aas
adc
cmps
iret
xchg
das
int3
mov
jle
cmp
fistp
adc
dec
mov
(bad)
and
push
test
out
add
iret
test
enter
je
mov
ret
mov
cmps
shl
adc
scas
(bad)
jns
xor
add
jl
inc
ret
push
mov
xor
js
jmp
mov
stc
loopne
mov
mov
xchg
nop
mov
pop
iret
push
not
repz
(bad)
mov
pusha
bound
lods
mov
push
fnstenv
les
pop
inc
cmp
int3
rol
jg
outs
cmps
sub
jae
inc
rcr
nop
inc
jmp
nop
mov
sbb
pop
cmp
in
cmp
sub
jle
sbb
jl
nop
and
jne
jo
push
jnp
and
pushf
pop
cmp
les
mov
clc
stos
adc
sahf
out
pop
xchg
repz
lahf
xchg
or
sbb
xor
rol
dec
bswap
and
add
fisttp
js
sub
cmp
cdq
sti
sbb
int
sbb
xor
cmp
std
inc
je
sbb
xor
movs
mov
fldcw
mov
nop
jnp
sub
adc
call
cmp
les
dec
jp
pushf
xchg
xor
inc
aas
dec
int
mov
fwait
addr16
jb
mov
fidiv
mov
xor
ret
pop
dec
inc
(bad)
mov
inc
and
push
mov
or
js
add
fild
cmp
icebp
clc
je
ret
lods
sub
shl
sbb
mov
imul
xchg
idiv
sub
shr
xlat
ja
test
sub
mov
retf
xlat
sub
sahf
f2xm1
arpl
popa
hlt
out
and
loop
push
mov
(bad)
scas
and
in
stos
adc
pop
adc
adc
pop
ror
dec
lods
cli
imul
retf
mov
shl
xchg
mov
aad
sbb
bound
int3
sbb
icebp
dec
dec
pop
push
adc
cmp
test
xor
cld
adc
xchg
cmp
adc
lods
(bad)
pop
mov
(bad)
(bad)
push
mov
lock
pop
jl
lds
pop
es
and
sub
jecxz
adc
test
nop
jle
mov
or
loope
sbb
je
or
mov
shl
(bad)
sbb
cmp
scas
ja
xor
mov
mov
dec
enter
ins
ret
dec
xchg
pop
jns
bound
push
jle
into
jp
dec
and
dec
add
loop
mov
mov
and
pop
stos
jno
std
push
cmp
push
aam
xor
or
mov
pop
in
mov
cmp
out
sub
jp
fiadd
les
lahf
adc
call
fcomp
jno
cmc
add
int3
(bad)
sub
cmp
xchg
jmp
mov
inc
fimul
(bad)
(bad)
mov
stos
dec
outs
cdq
sti
in
cli
dec
dec
xchg
int3
into
lahf
fisttp
xor
inc
mov
xor
push
mov
fadd
mov
loope
and
sbb
xor
push
and
and
adc
jb
nop
rcl
add
push
mov
cmp
jbe
(bad)
ins
fcom
aam
rcl
je
pop
(bad)
push
(bad)
adc
inc
or
popa
test
cmps
test
dec
and
rcl
popa
jne
jae
pop
aam
xlat
leave
in
shr
dec
es
stc
ret
pop
shl
cli
neg
js
rol
mov
and
mov
push
xchg
hlt
sti
scas
jo
lods
push
sub
jmp
jl
fld
dec
sub
push
mov
push
dec
mov
add
jo
mov
mov
rcr
fcmovnbe
fnstcw
cs
ss
addr16
fwait
sbb
xor
nop
dec
(bad)
inc
sub
jb
ficom
mov
adc
add
ror
cmps
imul
push
jmp
gs
fidivr
sub
loopne
fstp
push
and
push
xchg
movs
mov
inc
dec
repnz
adc
xlat
and
rol
ficomp
jg
fidivr
pop
dec
aas
sub
movs
test
idiv
mov
jmp
mov
inc
jecxz
aam
dec
add
add
xor
sub
es
xchg
inc
imul
add
mov
sbb
(bad)
add
and
mov
mov
sbb
and
or
mov
mov
pop
xchg
pushf
ss
push
or
push
stos
jecxz
iret
add
jb
pop
pop
push
add
data16
ret
and
icebp
jmp
or
inc
sbb
jae
jns
sbb
dec
dec
mov
xchg
cmp
jnp
test
out
ss
les
or
jge
jmp
fld
shl
adc
sub
fld
xchg
dec
mov
add
or
mov
jg
bound
jmp
mov
mov
jb
push
sbb
jo
nop
and
dec
icebp
pop
or
scas
dec
cmp
fwait
out
cmp
cmps
sub
xchg
add
mov
push
mov
out
cmps
mov
out
push
inc
mov
push
adc
call
xchg
adc
out
xor
cmp
mov
loope
call
fild
scas
adc
cwde
xor
push
mov
inc
jl
enter
xchg
mov
xchg
pop
dec
xchg
and
jnp
(bad)
cmp
cld
mov
fwait
pop
adc
in
jns
adc
inc
shl
sbb
mov
add
sbb
dec
dec
hlt
inc
mov
mov
loopne
or
imul
sar
mov
pop
inc
ficom
ss
or
(bad)
fisubr
fldenv
push
inc
mov
mov
push
adc
popf
and
mov
sar
sub
popf
leave
ror
mov
xor
jnp
cli
retf
mov
iret
jge
in
and
mov
mov
push
jns
fwait
push
push
mov
hlt
push
fstp
and
jo
add
shl
loopne
sbb
pop
in
adc
jp
adc
(bad)
nop
mov
xchg
cli
jp
push
cmp
push
pop
fistp
mov
pop
push
scas
mov
mov
sbb
pop
ret
jecxz
pop
ins
or
lods
shl
jl
push
aaa
jmp
iret
lods
jg
jmp
call
stos
fistp
sub
add
jns
icebp
out
cmp
xor
jno
imul
sbb
mov
dec
xchg
cmps
dec
popf
sbb
ror
mov
jbe
jno
fld
push
fistp
cmp
(bad)
out
dec
(bad)
movs
out
test
in
mov
push
repnz
movs
in
stos
dec
inc
mov
das
jae
dec
scas
(bad)
cmp
push
dec
test
cmps
sahf
daa
enter
idiv
sbb
test
inc
pop
popf
fidiv
out
sbb
jnp
out
(bad)
pop
or
nop
cwde
cs
jno
cdq
xor
lds
test
cmp
jmp
or
mov
pop
mov
(bad)
inc
aas
test
inc
movs
adc
xlat
hlt
fcomp
fmul
or
add
mov
mov
mov
mov
dec
fstp
jp
mov
ss
fimul
cmp
push
aad
les
mov
sar
out
add
loopne
cld
xor
stos
data16
mov
adc
adc
push
and
and
(bad)
popa
push
not
jo
or
fwait
push
mov
mov
push
jbe
pop
fisub
(bad)
test
mov
shl
mov
gs
jecxz
test
mov
in
std
pop
and
test
fldcw
pop
mov
enter
push
idiv
imul
cmp
sub
fcmovne
mov
jle
sahf
adc
push
or
cs
xchg
test
mov
jns
inc
dec
imul
inc
in
pop
mov
dec
test
popa
sub
or
push
xchg
scas
(bad)
fld
xor
sub
rol
gs
cmp
cmp
(bad)
lea
sub
adc
rcl
jbe
in
jg
pop
add
or
sahf
push
cli
lea
idiv
sbb
movs
jmp
pop
out
mov
mov
repnz
(bad)
push
sub
in
popa
jge
dec
dec
pop
adc
cmp
push
mov
idiv
or
add
test
out
ja
movs
cmps
push
or
cmp
pop
mov
arpl
fwait
mov
aaa
imul
xor
out
lds
neg
lock
hlt
lds
popf
dec
call
mov
push
inc
inc
mov
les
or
les
xchg
mov
fwait
in
std
loope
inc
and
jle
cmp
mov
xor
sub
and
cmp
ds
sti
push
sbb
mov
jge
add
in
or
sahf
jno
xchg
test
cmp
arpl
iret
or
lea
jg
imul
ja
dec
pusha
sar
fidivr
or
mov
shl
mov
fxch
jg
inc
in
push
ja
lock
adc
cmp
or
xchg
jecxz
xchg
and
imul
mov
jo
xchg
stos
add
rol
lahf
pop
xchg
cmp
test
fild
mov
stos
test
cmps
inc
ffreep
arpl
ret
jecxz
cmp
inc
inc
inc
repz
fwait
int
sti
mov
cld
lea
push
dec
add
lods
sub
cli
cmp
scas
mov
xchg
mov
mov
icebp
(bad)
loop
xor
add
dec
mov
sbb
cmp
cmp
clc
(bad)
cdq
sbb
mov
into
jae
pop
adc
jge
test
test
and
dec
xchg
in
xor
jno
add
and
shl
xchg
adc
sbb
arpl
scas
mov
jns
cmps
jmp
push
jnp
(bad)
xchg
lahf
nop
retf
add
cmp
jno
movs
out
cmp
ror
pop
addr16
gs
xlat
sbb
mov
jno
shr
dec
add
xor
add
call
or
popf
add
mov
ja
stc
shl
push
icebp
ins
scas
xor
lods
(bad)
mov
scas
dec
sbb
inc
outs
xor
mov
and
cwde
jmp
pop
adc
and
xchg
int
xchg
push
mov
ret
sub
push
sahf
dec
push
inc
leave
jnp
dec
aaa
imul
pop
xor
cmp
sbb
inc
cmc
push
cmp
push
not
test
jle
arpl
push
add
in
cwde
in
fbld
sbb
jbe
inc
xor
inc
in
ror
test
mov
addr16
movs
fidivr
fnstenv
ins
mov
mov
scas
shl
mov
out
aad
in
jbe
(bad)
rcr
mov
in
or
cmp
jae
repz
mov
in
pop
cmp
js
imul
dec
push
mov
sbb
scas
sbb
jo
mov
inc
mov
fisubr
push
int
mov
jns
xor
fnstenv
mov
xchg
in
daa
setp
out
sbb
mov
or
scas
add
pop
sbb
sahf
push
jae
outs
or
cmps
sbb
je
xchg
add
sub
add
(bad)
jmp
adc
push
push
in
sub
out
jecxz
clc
mov
xchg
imul
lea
retf
push
adc
inc
enter
in
adc
sti
(bad)
mov
fist
push
adc
and
daa
mov
imul
test
or
sbb
add
seto
cmp
out
scas
and
das
push
shl
dec
and
je
and
rcr
fldenv
cli
leave
rcl
jl
cs
dec
jbe
jb
fist
dec
loope
out
in
adc
sbb
(bad)
xor
lods
out
popf
int3
sbb
cmc
fwait
jo
sbb
int
cmp
leave
mov
cwde
dec
add
outs
or
dec
mov
cdq
pop
lock
inc
cdq
mov
ret
adc
(bad)
jl
ror
shld
push
movzx
in
scas
ss
jg
xchg
enter
add
int
inc
and
mov
fdiv
movs
pop
fadd
cld
lods
xor
enter
das
call
adc
sub
fmul
or
mov
mov
or
mov
add
add
rcr
movd
and
into
cli
push
movs
retf
xchg
ret
repnz
xchg
movs
retf
outs
adc
pop
mov
inc
clc
loop
adc
sahf
inc
xor
aam
dec
into
mov
rcr
lahf
dec
imul
shl
adc
jbe
xchg
mov
int3
shl
clc
aaa
mov
icebp
xchg
repnz
dec
cmp
push
sub
aas
sub
icebp
clc
int3
inc
test
sbb
sbb
cmp
inc
call
inc
pop
cli
in
push
jecxz
cmp
jle
xchg
mov
and
mov
jbe
ret
jle
rcl
push
hlt
rcl
loope
pop
sar
dec
jmp
outs
stos
mov
or
push
mov
cwde
imul
adc
pop
loop
inc
mov
imul
xor
test
xor
movs
inc
and
cmps
sub
fbld
xchg
mov
adc
shl
in
outs
retf
popa
(bad)
std
adc
cmp
out
shl
mov
inc
(bad)
jno
ds
mov
and
(bad)
int3
adc
xchg
aad
pop
(bad)
addps
pusha
imul
xor
dec
push
mov
jbe
in
pop
fsub
cdq
lea
ret
sbb
push
pop
movs
jmp
fninit
mov
xchg
sbb
pop
popa
js
mov
or
xor
das
dec
ins
in
clc
ror
dec
imul
loop
add
movs
mul
push
retf
repnz
jae
fs
push
xor
mov
in
jmp
test
dec
add
or
scas
int3
inc
movs
mov
les
das
xchg
lods
movs
add
mov
mov
pop
or
pop
jnp
fst
mov
ins
adc
cmc
stos
lods
push
sbb
xor
add
jae
ret
idiv
sbb
mov
mov
pop
cmps
jmp
adc
inc
jne
out
mov
lahf
cmps
cdq
xor
dec
add
cmp
cmps
pop
and
fadd
aaa
aas
icebp
push
into
cld
jl
push
aad
pop
push
clc
xchg
ja
outs
daa
and
test
leave
mov
pop
nop
cmp
addr16
xlat
movs
mov
cdq
scas
inc
gs
stos
and
push
arpl
push
push
popa
icebp
lea
shl
stc
aam
inc
xor
add
inc
into
out
lock
jo
pop
sub
js
push
sub
mov
mov
ret
rdtsc
sbb
jge
cwde
ret
lock
jbe
add
pop
fistp
pop
movs
cbw
sbb
jecxz
lods
(bad)
(bad)
call
lahf
add
fcomp
sar
pop
std
push
xchg
clc
push
mov
xlat
xchg
pop
xor
pop
push
mov
nop
out
scas
aas
add
sti
sub
data16
mov
aad
or
aas
mov
mov
pop
sbb
imul
test
jnp
fisub
xchg
pop
push
(bad)
in
retf
sub
xor
jo
sub
mov
xor
cmp
cmp
adc
xchg
addr16
pop
movs
pop
adc
retf
dec
mov
jge
lds
mov
test
fidiv
adc
(bad)
out
test
or
mov
add
je
repnz
and
mov
jge
jmp
adc
xor
or
lock
je
pushf
fwait
(bad)
retf
cmp
scas
mov
push
test
repz
mov
stos
cmp
ins
mov
in
jmp
(bad)
jb
mov
out
lods
sbb
loopne
jmp
data16
lahf
inc
push
mov
push
test
sti
aaa
ins
xor
shrd
dec
fscale
(bad)
int3
cmp
mov
(bad)
push
mov
outs
mov
sub
retf
xchg
mov
shl
ss
and
cld
rcl
sbb
add
sar
xor
xchg
sub
mov
mov
out
inc
add
dec
rcr
nop
clc
call
cmps
and
in
add
fisubr
jmp
popf
adc
sub
mov
or
dec
jnp
rol
das
(bad)
int
add
mov
cli
rol
jno
imul
adc
cdq
popa
int3
out
inc
pop
add
cld
aam
fld1
or
jns
les
xchg
push
ins
out
push
mov
xchg
movs
xor
ret
sub
dec
xor
dec
sbb
xor
and
test
jmp
mov
add
add
cmp
mov
cmp
cmp
fstp
sbb
mov
cmp
xor
mov
jno
movs
sar
sub
fiadd
nop
arpl
ds
sub
jp
or
add
mov
or
movs
out
push
mov
sbb
adc
push
xchg
fimul
shl
xchg
(bad)
dec
xor
add
test
xchg
sub
pop
dec
(bad)
movs
aad
rcl
stc
mov
mov
and
mov
add
repz
dec
mov
ret
cli
fwait
jne
hlt
iret
sub
jb
fstp
cmp
push
mov
dec
mov
cmp
push
scas
mov
or
dec
xlat
dec
in
in
mov
or
(bad)
cmp
xchg
ror
data16
ffree
jg
imul
mov
fs
jne
sub
adc
jmp
lock
xchg
call
movs
fimul
inc
mov
leave
sub
ret
cmp
loope
adc
repnz
fndisi(8087
mov
jo
xchg
ret
add
dec
rcr
pop
add
xor
mov
xchg
pusha
ss
jecxz
sahf
xor
dec
xchg
out
rcr
sub
sbb
fwait
mov
test
sub
xchg
cmps
and
scas
fdiv
ins
lea
mov
in
cmp
ror
add
mov
xor
sub
test
xchg
fwait
repz
add
es
mov
in
or
popa
icebp
mov
sub
imul
clc
add
xchg
stos
data16
push
aam
fst
sub
jp
cmps
loop
les
mov
adc
rcl
pusha
mov
loop
sub
(bad)
imul
mov
cmp
stos
jmp
mov
xchg
ror
mov
inc
imul
xchg
test
stos
xchg
ficomp
dec
popf
lods
pop
jne
iret
ret
inc
icebp
fistp
mov
jns
fwait
sub
push
imul
cmp
addr16
lock
scas
or
mov
xchg
xchg
mov
(bad)
add
cmp
push
shr
(bad)
push
xlat
hlt
je
leave
and
iret
stc
dec
dec
(bad)
scas
outs
test
add
dec
call
mov
fdivr
pushf
lar
out
pop
xlat
popf
add
xor
(bad)
gs
lea
ror
pop
sub
mov
addr16
pop
movs
jg
push
sub
hlt
push
cli
pop
cs
xor
test
xchg
pop
rcr
inc
scas
mov
dec
sub
mov
lods
push
std
jns
fwait
lds
mov
add
or
sub
repnz
fxch
arpl
fwait
xor
xor
enter
addr16
icebp
sbb
mov
ss
das
mov
sahf
fild
jno
xchg
or
mov
cmp
iret
gs
mov
into
sub
sub
pop
jae
arpl
lods
ss
xchg
xchg
rcr
enter
je
(bad)
xchg
xchg
into
or
sti
(bad)
aam
test
fnsave
out
adc
fsub
std
mov
imul
shl
sbb
inc
xor
cmp
adc
les
dec
fucomip
pop
and
xor
sbb
sub
test
jae
inc
retf
repz
xor
jnp
shl
out
mul
adc
or
push
leave
pop
enter
xchg
mov
repnz
jg
dec
adc
cmps
aam
dec
enter
sti
js
cs
repnz
push
mov
fdiv
pop
inc
sbb
in
stos
scas
scas
(bad)
xor
dec
ja
imul
not
rcl
jmp
xor
lock
test
mov
and
shr
retf
mov
das
retf
sbb
mov
rcr
inc
push
cmp
out
push
cmp
fsubr
in
es
call
popf
icebp
jnp
xchg
sub
gs
sub
mov
inc
xchg
pop
xchg
rcr
daa
jge
mov
and
add
(bad)
les
xor
(bad)
mov
aas
rcr
(bad)
sub
retf
or
dec
push
jmp
dec
rcr
sbb
inc
mov
out
pop
std
push
std
xchg
xor
(bad)
xchg
cmp
and
aad
ins
rol
xor
sub
fld
or
xchg
test
mov
sbb
or
ret
and
xchg
hlt
adc
daa
mov
(bad)
scas
in
and
imul
dec
inc
bnd
pushf
iret
pusha
inc
stc
in
ds
or
or
xchg
cld
xor
jle
popa
cld
sbb
neg
(bad)
adc
push
scas
mov
sub
ss
mov
das
test
aaa
cmp
mov
and
loop
ss
jmp
clc
das
fild
mov
mov
jg
in
in
xchg
and
mov
jo
jl
std
jnp
iret
iret
aaa
jg
fwait
sbb
add
inc
jp
xchg
xchg
adc
jno
icebp
push
adc
test
add
mov
mov
jb
inc
ret
stc
cld
xor
or
sub
into
push
and
mov
dec
in
mov
mov
mov
(bad)
fs
aam
fbstp
scas
cdq
jnp
add
iret
xor
clc
push
aam
loope
xchg
bound
push
cmc
sbb
and
data16
push
push
sub
and
sar
dec
inc
inc
inc
xor
shl
sahf
(bad)
adc
push
add
rep
push
dec
dec
add
ror
add
and
scas
into
jp
pop
and
mov
popa
sbb
jp
(bad)
sbb
imul
cli
pop
mov
retf
sub
cs
out
adc
pop
sub
aam
cmp
out
dec
fwait
jp
fstp
daa
sub
mov
paddusb
les
in
sub
sub
(bad)
bound
mov
add
lock
mov
jmp
movs
ror
(bad)
es
enter
mov
xor
lods
mov
fwait
add
inc
daa
(bad)
loope
sub
aad
stos
or
pop
pop
div
out
jl
(bad)
int3
leave
mov
cmp
mov
xchg
jp
mov
xlat
cdq
ja
and
mov
test
je
inc
aam
inc
lock
inc
xchg
jle
out
pop
xchg
adc
scas
cmp
dec
jmp
pop
ja
ret
pop
and
and
jmp
les
cmc
jmp
aas
mov
jmp
fist
dec
jmp
(bad)
push
mov
xchg
test
push
(bad)
pop
scas
pop
xchg
pushf
mov
stc
js
add
cmc
int3
out
enter
std
mov
jle
mov
addr16
push
xor
das
sbb
in
cmp
dec
cmp
ror
mov
not
stos
xor
mov
push
mov
fidivr
mov
and
mov
xor
and
pop
adc
and
xlat
sub
xchg
mov
in
fistp
xchg
add
aad
test
ins
pushf
call
xchg
mov
ret
mov
sub
mov
inc
aad
jnp
jno
enter
int
fwait
popf
inc
pusha
mov
and
addr16
retf
jl
jp
addr16
xlat
inc
xchg
dec
lea
push
mov
push
xchg
shl
or
cli
mov
ja
push
mov
out
and
mov
lods
(bad)
and
pop
pop
gs
fisub
nop
aaa
push
dec
dec
iret
mov
ja
mov
(bad)
in
mov
xchg
mov
push
iret
movs
outs
stos
or
test
mov
push
pop
scas
push
cmps
mov
call
int
cs
dec
mov
addr16
loop
in
das
xor
fstp
das
mov
and
adc
jecxz
out
scas
retf
jle
test
push
cmp
stos
adc
cmps
ins
inc
jnp
adc
out
lods
xchg
ror
pop
mov
leave
test
out
mov
jl
push
adc
ins
in
mov
sub
mov
jno
pop
loop
sbb
stc
xor
mov
mov
add
clc
jmp
and
cmps
(bad)
mov
out
fsub
in
cmps
enter
pusha
stc
kortestb
add
aas
push
out
inc
push
sbb
loopne
popf
push
ins
test
ds
dec
jg
push
cs
ds
sbb
fmul
enter
jp
inc
mov
pop
or
add
and
sub
stc
cs
(bad)
je
add
push
shl
clc
test
out
mov
ins
or
test
mov
sbb
scas
and
or
test
in
lds
in
add
push
xor
aaa
xor
xor
out
add
popf
mov
es
stc
gs
pop
mov
ins
inc
sahf
adc
loop
pop
retf
sbb
js
fistp
dec
fs
pop
mov
mov
call
bound
xchg
jae
inc
bound
loope
sbb
mov
mov
push
or
adc
lahf
cmp
cld
stos
mov
(bad)
in
stos
gs
ret
inc
push
popf
jns
or
push
mov
ret
pop
retf
or
mov
mov
adc
rcl
cmp
mov
adc
mov
in
(bad)
in
pop
mov
shl
dec
mov
add
int
movs
test
xlat
mov
ret
pop
or
imul
icebp
lea
popf
mov
repz
mov
xchg
push
aas
test
adc
js
shl
dec
int
fbstp
retf
in
pop
out
cmp
repnz
call
lods
dec
aaa
pop
push
loop
xlat
pop
clc
and
mov
lahf
mov
push
xor
mov
dec
lods
dec
mov
bound
mov
and
xor
lds
xor
into
or
(bad)
push
cmp
mov
in
add
fdivr
std
mov
jge
imul
cmp
into
in
enter
dec
xchg
sbb
sbb
or
adc
sub
rol
xor
(bad)
push
cmps
mov
push
hlt
xor
test
xchg
repz
inc
cli
scas
(bad)
mov
fidiv
lods
(bad)
out
lods
repz
in
fwait
clc
les
mov
int
xchg
and
mov
inc
push
rol
inc
mov
dec
mov
mov
outs
lods
fstp
out
out
push
stos
(bad)
call
dec
iret
imul
push
jns
xchg
les
mov
mov
cs
xor
fst
jecxz
jge
adc
shr
xor
inc
push
xchg
sbb
pusha
(bad)
mov
stos
mov
rcl
cwde
fisttp
aas
sub
dec
int3
retf
xor
sub
xchg
fcomp
pop
xor
and
sar
inc
shl
and
cwde
test
sbb
outs
ret
jmp
dec
pop
mov
cmp
arpl
icebp
pop
in
call
mov
icebp
imul
push
pop
jecxz
out
fwait
sub
retf
std
jecxz
mov
leave
je
and
cs
bound
pop
sbb
out
jle
or
sbb
xchg
pop
push
push
mul
pop
sub
fs
retf
aaa
mov
retf
(bad)
xlat
xchg
outs
cmp
xor
(bad)
xor
out
xchg
xchg
mov
sbb
repz
outs
fisttp
ds
xchg
test
(bad)
jo
pop
mov
sar
dec
dec
stos
popa
fsubp
repnz
jmp
gs
mov
mov
in
pop
xchg
ss
mov
jne
cmc
repnz
xor
push
mov
push
inc
inc
push
rcr
iret
fs
sti
xchg
jge
push
test
xchg
loope
adc
imul
xor
and
ret
push
in
(bad)
mov
shl
popa
mov
xchg
dec
push
loopne
pushf
push
cmps
shr
xor
mov
shl
sub
mov
imul
jecxz
add
and
iret
xchg
icebp
cmp
sub
xchg
xor
cmps
shr
mov
sbb
mov
cdq
dec
pop
(bad)
cmp
loopne
sar
and
mov
mov
pop
ja
jo
mov
push
dec
rcr
or
call
push
in
cli
jmp
data16
sti
and
pop
fisttp
jl
stc
repnz
push
out
push
cmps
popf
call
popa
js
dec
mov
test
inc
mov
movs
xor
xchg
dec
stc
leave
dec
iret
dec
popa
sbb
xor
mov
sahf
sub
xchg
mov
jecxz
jmp
aaa
test
mov
inc
adc
dec
mov
mov
push
push
icebp
mov
sar
fist
sbb
mov
ret
push
sub
adc
call
pusha
ror
sbb
dec
mov
or
ss
shr
out
daa
in
adc
inc
push
cdq
ss
adc
mov
push
and
inc
mov
div
test
push
fs
sbb
cmp
pusha
xlat
clc
xchg
sub
cmp
sub
icebp
xchg
mov
mov
lahf
dec
mov
add
imul
pop
jnp
push
xchg
js
mov
cdq
scas
push
lahf
nop
xchg
aas
and
inc
lahf
push
add
or
sub
and
add
add
mov
cmc
dec
loope
jnp
daa
outs
leave
lahf
cmp
push
daa
mov
pop
imul
in
dec
dec
mov
cli
mov
lea
cld
retf
push
pop
mov
std
ret
das
sbb
in
je
ja
arpl
cmps
addr16
and
ss
xor
xchg
out
ror
lea
jp
and
xor
inc
shr
mov
and
aad
(bad)
cli
test
mov
aam
pushf
dec
pop
cdq
cmp
fsin
test
or
popa
jno
or
sub
jno
js
pop
pop
ss
and
or
push
xchg
inc
push
xor
push
fdiv
add
imul
cdq
adc
loope
dec
inc
ins
cmp
mov
pop
inc
and
mov
addr16
jmp
les
push
fucom
jnp
out
fistp
mov
push
nop
int
daa
call
push
mov
je
sar
pop
leave
pop
shr
scas
lock
(bad)
mov
push
mov
cmps
fsub
mov
shl
xor
add
adc
push
rol
loope
stc
dec
sbb
or
(bad)
jae
movs
pop
cwde
lea
int
push
xor
or
test
mov
cmp
jg
fldcw
jae
movs
xchg
mov
xor
pusha
mov
out
and
sub
sub
jg
push
scas
(bad)
and
jns
jl
adc
cs
fsubr
out
or
retf
test
jb
sbb
inc
jb
jmp
icebp
push
movs
out
cmp
pop
jo
jae
jmp
pushf
add
xor
xor
pop
sub
pop
ror
pop
xor
js
gs
mov
cld
dec
xor
sar
xchg
jb
jns
dec
xchg
add
lods
(bad)
pop
xchg
mov
int
sti
adc
cs
(bad)
aaa
and
leave
pop
xchg
cmp
jmp
inc
push
pop
push
adc
into
mov
scas
xchg
stos
into
scas
movs
hlt
or
rcl
cdq
sbb
rol
pop
lock
cld
out
sbb
test
fbstp
jmp
test
add
and
ror
imul
add
xor
or
pop
int
add
pop
add
jmp
jne
add
mov
rol
std
loopne
inc
push
hlt
gs
jge
xor
nop
mov
inc
or
sub
loopne
adc
stos
adc
lock
neg
xor
ins
iret
sbb
cmp
cmp
ds
lods
and
not
ins
clc
push
sub
mov
adc
pop
out
arpl
rol
retf
and
add
push
aas
ja
aas
idiv
jb
pop
jecxz
add
mov
mov
inc
idiv
(bad)
jge
jne
js
mov
inc
sbb
dec
bound
lock
xchg
cwde
xor
test
mov
inc
xlat
outs
fmul
xchg
add
sub
and
lods
lds
push
mov
add
pushf
push
push
int3
repnz
add
xlat
aaa
push
cmps
popf
clc
in
inc
(bad)
aaa
dec
jns
rcr
jg
shl
push
cmps
call
xchg
or
aad
inc
jae
imul
mov
pop
dec
sbb
addr16
mov
dec
in
and
or
xchg
sub
(bad)
mov
xor
cmp
je
fstp
inc
xchg
je
(bad)
ins
cmps
xor
ins
hlt
and
dec
(bad)
cli
push
es
jg
clc
xchg
lea
adc
sbb
dec
fst
fcom
xchg
mov
bound
adc
push
xor
and
stos
dec
fist
lods
add
leave
lock
movs
mov
xchg
add
mov
mov
icebp
adc
jns
xchg
xor
in
jb
mov
leave
sbb
sti
push
jae
mov
sbb
stos
jo
xor
fs
mov
sbb
repnz
or
adc
mov
fnstenv
pop
sti
arpl
xor
es
jl
push
dec
jmp
xchg
imul
ret
fist
pop
adc
push
out
je
les
test
retf
bound
sbb
xchg
mov
sub
mov
and
mov
imul
rol
invd
mov
(bad)
pop
in
mov
and
jmp
xchg
(bad)
ss
mov
test
pop
fnstcw
sub
inc
sbb
repnz
fnsave
das
jmp
fmul
xchg
xor
add
(bad)
jb
pop
stos
retf
lock
push
dec
das
rcr
ins
hlt
cmp
and
and
loopne
pop
(bad)
popf
lea
cmp
push
imul
jb
push
test
inc
add
xor
test
sbb
outs
push
fs
(bad)
rcr
push
xchg
sub
aaa
and
push
push
leave
pop
lods
test
rcr
popf
inc
inc
cs
call
or
sbb
sub
mov
sbb
sub
sbb
mov
inc
mov
es
das
xchg
jmp
lds
ret
pop
push
div
add
jae
fisttp
mov
pop
mov
retf
lahf
xor
rcr
in
test
pushf
xor
jecxz
stos
inc
aad
outs
call
xchg
mov
sbb
push
fs
fcomp
dec
addr16
lea
jbe
lock
mov
jmp
sbb
lock
xchg
dec
int
fwait
js
inc
es
mov
or
xor
xchg
inc
push
call
push
mov
lods
cs
in
es
movs
retf
stos
mov
adc
pop
lods
push
aaa
cmp
mov
mov
or
push
xchg
inc
mov
dec
jae
dec
shl
popa
push
iret
sub
sbb
push
mov
cmc
std
cmc
push
jmp
(bad)
pop
cmp
jne
cdq
add
leave
jno
pop
and
shr
les
jp
adc
mov
fimul
and
push
out
loopne
in
push
mov
loopne
push
sahf
inc
or
(bad)
xchg
and
jb
mov
inc
and
call
call
ja
push
fcmovbe
pop
rcl
shr
jecxz
mov
dec
and
out
in
in
loopne
or
inc
mov
pop
sbb
sub
jg
xlat
ins
sbb
mov
mov
mov
push
retf
(bad)
sbb
into
mov
inc
outs
bound
daa
outs
ret
mov
inc
mov
cld
addr16
test
jmp
adc
icebp
push
leave
retf
mov
outs
xchg
mov
sbb
pop
fucomi
icebp
adc
xor
outs
cmp
nop
push
ficom
loopne
lea
test
nop
das
mov
addr16
popf
stos
sub
popa
fisub
adc
push
mov
add
icebp
pop
sar
cmc
cld
dec
movs
cmp
test
test
shl
out
jecxz
mov
movs
js
sbb
mov
inc
jecxz
xor
cmp
sbb
je
rol
dec
call
sti
sbb
lods
mov
outs
xchg
test
xor
inc
jp
jnp
jl
xchg
or
repz
stc
leave
push
sub
push
pop
mov
addr16
xchg
sbb
sbb
jbe
or
movd
outs
rol
inc
mov
sti
xchg
pop
nop
mov
or
fcomp
push
mov
jle
xor
ds
push
pop
xchg
cmp
xor
push
dec
cwde
xchg
in
mov
aas
cmp
fist
lods
cmp
jp
add
push
cmps
or
xchg
fxch
leave
adc
adc
fcom
sahf
sub
mov
push
sub
scas
ins
pop
out
mov
jne
out
je
mov
rcl
into
push
rol
adc
inc
push
cld
movs
mov
stc
aam
enter
cmp
fstp
pusha
ins
into
sbb
mov
mov
mov
das
clc
lods
and
aaa
lods
out
cwde
leave
mov
fld
int3
jle
js
xchg
xchg
xor
mov
in
add
lods
xchg
push
je
mov
jp
cmp
shl
ins
or
push
jge
xchg
pop
in
scas
imul
mov
mov
adc
xor
cmps
(bad)
(bad)
mov
shl
pop
and
aam
cmove
sbb
outs
push
out
cmp
loop
pop
lds
mov
das
inc
stos
push
retf
mov
(bad)
jmp
lods
stc
cld
bound
jns
xor
or
add
jns
sti
sahf
mov
dec
jecxz
cdq
hlt
ds
or
out
sbb
inc
xchg
mul
jmp
jnp
mov
sbb
fistp
xor
push
push
inc
or
in
je
ins
test
dec
lods
add
xchg
(bad)
(bad)
scas
aam
out
stos
ss
push
adc
mov
sub
test
daa
mov
outs
mov
dec
pop
(bad)
jle
pusha
test
jae
jge
cmc
aaa
jo
cwde
icebp
dec
cmp
push
cs
push
xchg
bound
xor
xor
data16
mov
mov
test
xor
call
cmp
fisub
(bad)
shl
cmp
mov
cmp
xchg
outs
movs
fwait
jb
add
push
xchg
pusha
cmc
add
scas
cld
adc
call
pop
cs
bswap
punpcklwd
xchg
mov
int3
(bad)
fcom
pop
movs
jb
dec
push
inc
add
jmp
sbb
rol
pop
test
ss
pop
aam
jle
ins
sbb
fistp
ins
pop
add
add
xor
inc
mov
add
in
in
jge
ret
iret
jmp
add
push
dec
test
sub
xchg
pop
add
fisttp
je
clc
test
fwait
loop
pop
call
sbb
into
retf
stos
mov
call
mov
call
aas
sub
cmc
pop
add
jnp
dec
xchg
pushf
pushf
cmp
mov
pop
mov
xor
lods
push
aam
fcomp
adc
and
mov
push
out
mov
std
push
jl
pop
in
cld
repz
sti
popa
leave
dec
jo
mov
pop
cmp
(bad)
dec
adc
pop
int
mov
or
and
mov
xor
jl
mov
pop
and
or
xadd
and
xchg
adc
mov
add
mov
pusha
add
jns
xor
push
cli
fidivr
xchg
fimul
push
movs
sbb
push
sbb
xlat
in
fstp
pop
cmc
mov
mov
cmp
jl
push
data16
inc
repnz
dec
pop
pop
sahf
inc
ret
cs
ret
pop
sub
mov
iret
adc
sbb
(bad)
add
pop
and
pop
loope
add
xchg
sub
out
cmp
retf
pop
shl
or
dec
in
(bad)
int3
icebp
call
mov
fcmovne
xchg
mov
(bad)
fadd
bound
rol
mov
jmp
dec
mov
leave
jmp
nop
cmps
scas
and
push
int3
pop
cdq
mov
punpcklwd
shl
inc
cmp
dec
mov
fs
adc
test
rol
idiv
cdq
push
mov
call
inc
out
and
dec
mov
ret
xchg
ret
rol
inc
ror
mov
call
mov
ror
into
imul
jp
jp
call
sbb
stos
in
into
mov
jo
mov
imul
jmp
movs
js
clc
sub
dec
dec
sbb
clc
(bad)
push
out
and
int
test
test
jne
push
xchg
or
test
outs
in
(bad)
sti
cmps
(bad)
je
jb
leave
xlat
cli
sub
mov
push
inc
fistp
in
adc
stos
mov
jne
adc
dec
mov
mov
mov
push
xchg
adc
and
push
mov
pop
jl
add
push
adc
jp
rol
mov
loopne
and
mov
and
gs
push
or
xchg
push
lds
fadd
les
cmp
repz
stos
popa
sub
sbb
aad
outs
mov
in
(bad)
mov
xchg
stos
movs
mov
mov
cmp
popa
add
pop
add
sbb
idiv
cmp
mov
jl
cmp
shl
(bad)
sbb
push
jmp
loop
jb
fld
push
jg
dec
dec
cmp
sbb
mov
push
test
add
push
push
js
pop
mov
adc
cs
rcl
dec
mov
aaa
mov
in
iret
popa
xor
lds
xchg
adc
dec
repz
add
pop
xchg
pop
mov
adc
pop
pop
adc
jp
sub
neg
adc
mov
cmp
ret
xor
adc
aas
fcomp
adc
sub
clc
xchg
cmp
mov
jmp
rcr
or
inc
push
sbb
dec
clc
fwait
ja
mul
sahf
inc
cmp
and
push
loopne
xor
popf
mov
add
or
mov
adc
int3
pop
adc
movs
clc
inc
add
mov
movs
das
dec
int
mov
mov
(bad)
ss
lea
in
xchg
push
mov
sti
xor
fld
mul
cmps
mov
pop
dec
push
sbb
mov
jecxz
in
dec
in
or
sub
cmp
retf
and
mov
in
xchg
jns
mov
lds
and
or
(bad)
sbb
adc
je
mov
int
out
test
fs
sub
mov
ja
or
adc
jecxz
fbld
mov
rcl
mov
call
pop
jecxz
data16
push
xchg
dec
fcomip
out
movs
pop
mov
sahf
xchg
in
pop
das
(bad)
ja
pop
mov
xor
mov
arpl
inc
add
inc
or
mov
int
jp
int3
cmp
xchg
test
(bad)
shl
cmp
(bad)
fs
jo
xor
jbe
inc
or
repnz
nop
inc
xchg
sub
inc
mov
stc
ja
shr
sub
jg
xchg
out
shl
imul
adc
ja
cmp
or
in
jo
sub
adc
or
sbb
sahf
dec
push
lock
push
push
sub
inc
adc
adc
in
ret
jno
add
xchg
dec
mov
adc
call
imul
push
fwait
sbb
sub
or
scas
inc
cmp
pop
fild
dec
int
bound
call
retf
xchg
and
push
xor
push
setae
call
and
cmps
retf
stc
ja
imul
jle
cmp
xchg
jno
cli
repnz
aam
(bad)
test
mov
es
cmp
mov
rcr
adc
jnp
jp
mov
cdq
mov
sbb
ja
dec
xchg
popf
sbb
mov
(bad)
shl
push
and
lock
dec
cmp
xor
aaa
push
jle
pop
pop
aaa
sbb
sbb
test
fcom
mov
jge
mov
stc
popf
sbb
loopne
es
pusha
sbb
cmps
sbb
push
or
add
sbb
jmp
(bad)
out
push
xor
jg
inc
add
cli
ret
mov
mov
retf
xor
inc
and
xchg
inc
lods
sub
lahf
std
mov
test
repz
xchg
(bad)
xchg
mov
sub
mov
adc
dec
push
into
jb
dec
imul
bnd
movs
fcomp
out
jecxz
jg
or
jb
push
aam
imul
not
int
jecxz
int3
dec
jle
jg
sub
sub
(bad)
out
lahf
(bad)
call
es
pop
sub
sub
pop
mov
mov
or
push
mul
cmps
or
gs
push
cmp
(bad)
lock
inc
xor
adc
or
push
adc
adc
sbb
mov
sbb
mov
ret
push
xchg
(bad)
pushf
add
xor
fild
std
call
sub
jne
inc
pusha
aad
call
popa
xor
cmc
sahf
sbb
sub
arpl
mov
xchg
fild
cmp
enter
aas
push
ficom
in
pop
pop
int
adc
mov
mov
push
and
jmp
ja
and
shl
pop
popf
cmp
inc
js
push
aad
inc
in
hlt
stos
mov
cmc
outs
or
xor
xlat
pop
pop
and
sti
into
sbb
daa
dec
mov
les
add
data16
dec
out
bnd
fdivr
mov
push
cmp
xchg
xor
and
loop
xor
loopne
cmp
add
bound
xor
out
leave
jae
pop
xchg
call
out
pop
inc
outs
mov
add
loop
imul
shld
imul
ret
mov
dec
add
pop
xchg
mov
test
cmc
outs
in
push
sub
mov
js
movnti
out
pop
add
or
mov
in
retf
inc
fld
mov
inc
aas
adc
sbb
ss
jbe
and
mov
adc
in
ins
pop
fwait
sub
(bad)
stc
(bad)
push
clc
icebp
pop
jnp
out
cmps
push
mov
repz
data16
xchg
mov
sub
pop
cld
cmp
or
sub
cmovae
popa
adc
mov
pusha
sub
ja
or
jg
adc
shl
ins
add
lea
adc
loop
lea
clc
inc
pop
pop
lahf
out
aaa
cld
inc
in
rcr
push
lock
ror
pop
xor
mov
cdq
mov
pop
mov
scas
fistp
xchg
ss
adc
loope
sahf
js
jmp
sbb
pop
icebp
popa
lods
pusha
aaa
sub
cmp
iret
mov
test
xchg
outs
test
rol
cmp
adc
xchg
xchg
fidiv
cmp
jbe
pop
sub
adc
push
jp
sub
push
push
add
es
fisttp
fsubr
xor
lods
push
push
mov
jbe
fcmovnb
inc
ror
daa
icebp
dec
jo
(bad)
dec
outs
push
or
adc
mov
in
xor
test
mov
xlat
test
inc
mov
mov
xlat
inc
sbb
inc
cmp
loope
jae
(bad)
jbe
inc
xor
dec
dec
fwait
popa
adc
mov
sub
hlt
mov
lods
je
xchg
je
shl
clc
sbb
xlat
mov
fcom
imul
lods
iret
dec
pop
or
icebp
and
dec
scas
sbb
mov
push
call
(bad)
int
std
addr16
mov
loop
ins
xor
adc
sbb
xchg
enter
cmp
and
fdiv
mov
cmps
aaa
add
movs
push
dec
idiv
retf
sbb
test
pop
pop
or
push
xchg
outs
push
push
add
sub
ds
(bad)
out
adc
sti
jb
and
out
enter
or
jmp
ins
sub
xchg
outs
outs
jg
sbb
push
jno
dec
daa
mov
in
xor
cwde
sub
retf
loope
sbb
sbb
fistp
mov
out
inc
or
mov
ret
cmps
inc
jge
scas
lahf
fist
fiadd
(bad)
xor
pop
xchg
div
adc
fild
stos
push
outs
pop
lods
aaa
mov
pop
push
clc
aad
pop
cli
and
adc
scas
je
and
sbb
adc
pop
mov
pop
add
out
ret
cmp
mov
inc
sbb
sar
cmp
pop
ret
sti
sub
mov
push
mov
cmps
loop
sahf
fstp
pop
loope
add
dec
outs
push
mov
mov
loop
pop
inc
adc
cmp
xor
push
jo
mov
sbb
out
adc
fcom
iret
(bad)
inc
ins
dec
jne
fwait
sub
pop
add
pop
mov
inc
mov
(bad)
enter
mov
mov
jno
sub
ss
je
mov
sbb
(bad)
(bad)
scas
dec
mov
gs
add
cmc
std
xchg
pop
loop
inc
push
adc
cld
mov
jo
jne
sbb
das
pop
mov
les
mov
das
fld
mov
clc
mov
push
stc
bound
xchg
and
mov
imul
je
loopne
mov
inc
inc
loope
popf
int
repnz
rol
out
mov
jmp
sahf
test
fnclex
jne
imul
xchg
mov
pop
pushf
jae
out
fild
push
js
fstp
movs
out
mov
xchg
jne
cmp
and
into
bound
fst
push
jecxz
(bad)
sti
mov
je
mov
adc
push
jecxz
out
movs
fdivr
adc
(bad)
fidivr
fisttp
cdq
fsubr
fiadd
mov
mov
hlt
add
ret
pop
nop
pop
cwde
inc
cmp
inc
jo
cmp
and
lock
xor
out
test
lods
(bad)
cmp
jmp
outs
xor
adc
outs
adc
sub
das
xor
pop
movs
fsubr
cmps
out
and
or
(bad)
sbb
lods
xlat
mov
cmps
outs
jmp
mov
ss
sub
retf
cli
push
mov
scas
ret
cmp
nop
aam
scas
sbb
fimul
scas
fistp
push
xor
inc
test
fadd
aam
xor
or
hlt
das
out
aaa
cmp
pop
out
jle
mov
mov
inc
rcl
jmp
dec
mov
mov
inc
mov
movs
or
das
mov
pop
jo
push
out
mov
mov
mov
dec
jmp
(bad)
pop
movs
ds
push
rol
cmp
add
sbb
fisub
ds
popa
xchg
cli
jnp
cdq
es
mov
mov
pusha
inc
mov
dec
movs
lahf
xchg
es
add
dec
ins
xchg
sub
or
pushf
add
neg
(bad)
push
mov
lea
sbb
add
sti
jp
xchg
sub
aam
icebp
jp
push
dec
jbe
mov
mov
mov
push
dec
sbb
arpl
mov
mov
dec
in
lds
std
aam
mov
pop
or
in
pusha
xor
aaa
in
cdq
mov
sbb
and
jg
pop
cmps
push
adc
pop
loop
jae
(bad)
dec
pop
mov
add
retf
imul
mov
or
xchg
cmp
jbe
xchg
or
(bad)
pop
(bad)
push
loope
mov
js
loope
aam
mov
xor
fnsave
cli
pop
add
mov
mov
mov
mov
jo
pop
data16
clc
out
daa
out
addr16
adc
not
je
nop
loope
aas
imul
je
xchg
mov
xchg
jbe
mov
jo
jecxz
dec
hlt
mov
adc
cmp
xor
mov
lock
cmp
sbb
arpl
sub
sub
mov
jae
jmp
jno
pop
sbb
(bad)
dec
rcr
sub
arpl
fcos
push
punpcklbw
cmp
fiadd
mov
or
sub
xor
push
inc
inc
cmps
out
cs
mov
stos
stos
inc
(bad)
loopne
jmp
sub
adc
or
inc
stc
sub
outs
push
add
sub
dec
int3
bound
(bad)
jmp
sbb
mov
inc
popa
ficomp
fs
mov
jmp
cs
test
rcr
retf
and
dec
mov
lods
dec
int3
into
pop
sahf
lock
mov
iret
and
jb
pop
into
std
add
jnp
stos
push
cs
(bad)
rcr
or
loopne
add
in
es
out
and
mov
sub
call
addr16
xchg
sahf
xchg
xchg
xchg
daa
out
lods
jb
jo
dec
mov
mov
cmps
push
dec
inc
push
rol
ins
mul
mov
cmp
cmp
psrad
inc
das
std
cmp
nop
rcr
fnsave
sahf
out
pop
mov
pop
aad
sub
pop
pop
push
aam
xchg
mov
int
push
sub
mov
or
mov
gs
mov
in
sub
adc
data16
pop
in
pop
and
mov
je
(bad)
pop
inc
retf
ja
xor
rcl
popf
inc
mov
retf
and
jmp
ss
ds
lods
inc
popa
dec
fistp
ins
xchg
icebp
and
adc
cli
push
adc
imul
and
mov
popf
push
into
hlt
inc
scas
pushf
cmps
enter
adc
les
cld
xchg
leave
and
movs
push
jecxz
mov
int
cmp
dec
cdq
ficomp
xchg
cmps
or
push
jmp
popf
js
scas
sti
xchg
add
and
and
jmp
inc
pop
xor
rcr
movs
cmp
add
shr
ror
inc
hlt
repnz
mov
mov
pusha
jnp
pop
xor
inc
mov
in
(bad)
in
mov
pusha
and
imul
mov
retf
pop
jmp
and
adc
jno
aad
add
ja
sar
inc
pop
mov
jne
fidivr
mov
xchg
in
and
(bad)
lock
int
jb
sub
mov
mov
mov
cmp
rol
push
jg
repnz
in
sub
push
mov
mov
scas
or
mov
jo
mov
mov
adc
mov
xchg
cwde
(bad)
in
add
loopne
push
or
cdq
jl
dec
pop
(bad)
mov
hlt
gs
or
add
sbb
aas
pushf
jmp
icebp
jp
fimul
(bad)
jo
(bad)
out
(bad)
cli
jge
cmc
repnz
or
dec
xchg
mov
ins
adc
addr16
repz
cld
in
xor
mov
fst
dec
loop
sar
adc
jmp
iret
aaa
fwait
ja
cmp
aad
test
add
add
imul
jne
add
xor
mov
mov
cmc
and
jmp
aam
mov
ja
cli
sbb
loopne
jno
imul
sbb
or
mov
fadd
push
test
or
iret
inc
jecxz
(bad)
arpl
dec
jp
arpl
dec
call
xor
xlat
popf
out
jecxz
fwait
xchg
imul
fwait
inc
lods
fnsave
fcmovu
mov
inc
mov
cld
sub
add
jns
aam
jno
popa
mov
pop
lods
scas
inc
inc
(bad)
adc
dec
out
sbb
inc
ror
shl
or
mov
aas
scas
pop
or
rcl
(bad)
shl
fcmovb
push
mov
dec
int
lock
mov
xchg
loopne
mul
xor
test
mov
pusha
dec
mov
push
or
lahf
mov
cmps
loop
dec
cmovl
test
mov
retf
xchg
stos
xchg
into
sbb
push
hlt
jo
ins
sbb
bswap
test
sti
push
pop
imul
push
je
and
xor
xchg
loopne
je
and
jle
mov
in
in
adc
call
dec
data16
add
add
clc
fistp
call
(bad)
movs
sbb
mov
aas
sbb
xor
sbb
sub
cmp
dec
pop
mov
arpl
xor
sub
push
mov
retf
push
sbb
and
cs
int3
lahf
cmps
mov
cmps
in
pop
adc
sub
add
and
mov
out
jae
or
inc
ror
ins
fwait
iret
fwait
sbb
fmul
inc
cmp
mov
(bad)
or
and
jecxz
mov
cdq
inc
out
cmc
xchg
and
ja
nop
cld
call
int
pop
jns
cwde
cmp
in
popa
adc
or
mov
scas
mov
add
adc
out
push
pop
mov
pop
jle
jne
ins
cmp
add
sub
mov
xor
xchg
cmps
js
sar
adc
rol
jle
dec
sahf
add
into
inc
je
sbb
int
hlt
or
dec
and
and
ja
dec
out
adc
ss
or
sub
add
adc
lea
or
stc
in
push
mov
or
ss
push
or
pop
xor
and
mov
in
and
push
fild
cdq
loopne
inc
int
addr16
es
sahf
push
je
and
repnz
or
inc
aas
mov
sub
push
adc
adc
imul
xor
not
daa
lea
add
sti
add
in
jg
out
int3
pop
xchg
sbb
xor
cdq
div
jp
test
pushf
(bad)
dec
or
stc
(bad)
fistp
ret
pop
and
xchg
pop
jmp
mov
sub
cmp
cmps
pop
or
sbb
sbb
ret
sti
popf
jo
pop
add
jmp
adc
mov
xchg
adc
cwde
or
lods
xchg
in
pop
test
cmp
xor
out
cld
push
inc
pop
scas
dec
sub
pusha
mov
mov
lock
sub
stos
aaa
call
xor
imul
mov
inc
sar
mov
fistp
shl
push
stos
push
sub
call
addr16
dec
ins
out
aaa
daa
jo
add
push
inc
push
push
mul
cmps
mov
and
je
adc
pop
fiadd
sbb
fnsave
neg
cmp
sub
pop
leave
lea
or
mov
fidivr
mov
cmp
push
lods
jno
mov
pop
xchg
xor
push
xor
fisttp
mov
pop
jne
loope
hlt
sbb
jge
fwait
(bad)
data16
pop
mov
sub
xchg
aad
mul
jbe
fadd
int3
mov
pop
or
cld
nop
ins
sbb
je
xor
mov
in
sbb
aam
rcr
mov
push
add
jae
add
pop
mov
xor
sbb
pop
mov
les
cmp
iret
adc
movs
das
(bad)
in
outs
daa
cdq
add
jmp
adc
xor
xchg
lock
adc
scas
enter
lahf
(bad)
aam
test
sub
stc
out
nop
enter
std
mov
js
adc
ss
mov
pop
adc
or
pop
xchg
cs
int
fidivr
imul
leave
mov
push
out
(bad)
out
sbb
hlt
out
jge
cmp
fnstenv
push
push
cld
adc
mov
imul
jne
test
mov
mov
jge
sbb
hlt
pop
pop
int3
lahf
jns
das
inc
inc
fsubr
(bad)
test
out
icebp
mov
mov
mov
repz
std
inc
pop
mov
retf
int3
jg
adc
arpl
enter
push
jnp
and
and
mov
test
and
and
clc
pop
xchg
lea
pop
adc
push
mov
dec
dec
ins
cwde
daa
shl
ficomp
jge
or
push
and
lea
sbb
ret
jle
nop
jne
lahf
mov
sahf
test
xchg
aam
xchg
out
pop
xchg
and
je
and
fwait
xchg
imul
div
jmp
loop
(bad)
mov
xchg
lock
aad
mov
addr16
pop
dec
daa
push
pop
push
test
sar
xor
test
mov
dec
xor
stos
pop
js
mov
lds
loope
mov
mov
scas
cmps
sbb
push
adc
inc
bound
mov
adc
mov
push
popf
mov
or
cld
push
mov
repz
pop
lods
sub
fld
lods
inc
push
bswap
or
rcl
data16
cld
repz
faddp
fist
lahf
mov
movs
adc
mov
add
fist
mov
jmp
(bad)
mov
hlt
cwde
push
and
test
mov
(bad)
push
sbb
movs
(bad)
das
and
sub
add
and
jnp
lea
lahf
ds
repnz
loope
dec
push
mov
jbe
xchg
mov
idiv
xchg
ins
cmps
inc
ins
xor
in
xor
cld
adc
mov
jbe
xchg
stos
add
jge
mov
(bad)
xchg
outs
cmp
pop
lea
(bad)
fnsave
xchg
xchg
jge
adc
cmp
jl
aad
nop
and
or
call
pop
jo
xor
ret
inc
cs
dec
inc
add
aaa
sub
or
fwait
ins
retf
(bad)
nop
add
xor
retf
sbb
jmp
je
jae
cmp
(bad)
push
outs
xor
add
repz
mov
jbe
mov
cmp
add
out
xor
xlat
fwait
xor
mov
and
mov
stos
test
cwde
pop
loop
add
adc
xlat
mov
ins
int
pop
mov
jmp
mov
(bad)
leave
data16
sub
or
sbb
ins
push
(bad)
es
push
dec
sbb
push
cld
push
jne
lods
pop
out
push
je
not
es
inc
xor
movs
and
fstp
dec
push
ret
enter
das
std
fld
lds
xor
sar
pop
daa
jmp
je
jne
rcl
adc
lahf
popa
pop
dec
push
jmp
mov
retf
hlt
sub
or
das
xchg
das
ins
mov
push
ret
push
(bad)
outs
ins
jl
out
pop
clc
imul
in
jp
call
pop
bound
cmp
push
mov
and
enter
cmp
push
imul
in
les
(bad)
ds
mov
push
and
cli
jmp
xchg
jl
test
inc
mov
jge
hlt
pop
cs
mov
pop
into
ins
dec
mov
test
cmp
in
pushf
xchg
xor
out
lahf
addr16
jmp
mov
jo
and
vpminuw
push
sbb
sub
movs
and
add
sahf
test
loop
xlat
inc
inc
jg
or
push
xlat
jg
adc
addr16
inc
cmc
jae
inc
add
lock
std
push
jnp
dec
ss
push
xchg
sbb
shl
inc
add
push
out
xor
iret
repnz
adc
mov
iret
(bad)
clc
out
lods
push
stos
jg
addr16
pop
fstp
mov
movs
hlt
les
sub
inc
mov
(bad)
pop
daa
cli
scas
mov
push
push
add
mov
mov
sbb
ret
lea
lea
ret
das
outs
xor
inc
xor
movs
add
stc
or
jns
sbb
adc
dec
or
inc
jmp
inc
popf
sub
das
in
xchg
push
cmp
push
or
sub
xchg
popa
int3
ds
or
loop
(bad)
inc
add
push
rcl
cmp
sub
push
mov
jecxz
addr16
and
cmp
dec
outs
xchg
sti
gs
pusha
jno
imul
xchg
imul
adc
mov
and
adc
xlat
int3
mov
dec
dec
sbb
ins
ds
test
xor
in
mov
into
add
push
jo
aam
push
mov
mov
es
inc
pop
sbb
(bad)
push
stc
pop
loop
xchg
push
(bad)
xor
test
pop
sub
aam
push
sbb
fcmovne
xchg
addr16
jbe
stos
addr16
in
mov
repz
mov
jecxz
lock
pop
jg
fwait
mov
mov
mov
mov
mov
loop
(bad)
int3
push
call
rcr
out
addr16
mov
add
sub
cmp
mov
sub
or
dec
ror
xlat
popa
out
dec
into
int
add
cmc
adc
adc
js
cmp
mov
(bad)
iret
push
aas
movs
dec
sbb
icebp
pop
ror
jp
addr16
sbb
and
movs
adc
xchg
cwde
mov
jb
movs
add
cmp
cs
push
and
adc
fstp
sub
mov
sbb
(bad)
push
and
sub
dec
push
pop
xor
add
js
cmp
cmp
lds
mov
inc
mov
pop
out
ds
xchg
mov
cs
cli
mov
or
rcl
adc
inc
xchg
fmul
sbb
mov
mov
jo
xor
cmc
add
dec
push
repz
movs
sub
stos
mov
sbb
mov
and
nop
shl
cmp
or
bound
aad
jmp
push
dec
retf
movs
and
fwait
movs
or
loope
pusha
dec
movs
xor
pop
add
mov
xchg
push
(bad)
push
or
in
push
je
cdq
loope
mul
or
xchg
sub
xchg
xchg
add
fnstenv
xchg
pushf
pushf
sbb
retf
mov
push
fist
inc
lds
jae
pushf
pop
scas
dec
mov
mov
pop
xor
push
xchg
sahf
push
xor
mov
sar
scas
test
mul
outs
mov
sub
test
jne
mov
fsubr
int3
cs
loop
nop
aad
in
jle
mov
je
fnstsw
jmp
cmp
out
cmc
mov
scas
cmp
jns
fwait
add
call
dec
xchg
mov
sbb
mov
or
add
call
push
jp
je
xor
and
test
mov
iret
and
test
xchg
mov
sub
call
mov
mov
mov
out
shl
add
(bad)
out
rcl
jno
jbe
(bad)
loope
shl
jno
shr
retf
mov
(bad)
and
adc
in
and
pop
ficom
(bad)
xor
pop
xchg
test
sub
sbb
ret
inc
sbb
pop
adc
(bad)
pop
add
mov
mov
movs
add
repz
xchg
sub
sbb
xchg
les
jmp
mov
adc
fldenv
dec
fld
bound
push
xchg
call
popa
jecxz
test
movs
mov
xchg
xchg
push
push
psrlw
sbb
jecxz
jge
mov
xor
mov
xchg
fdivr
push
adc
mov
push
sqrtps
cwde
jne
pop
and
xor
jle
mov
enter
dec
sbb
cli
sbb
and
sahf
fisttp
mov
test
cmp
mov
mov
add
push
ret
jo
in
sahf
test
enter
adc
movs
into
pop
mov
sar
scas
or
fistp
jae
call
and
nop
rcr
lods
pop
fidiv
or
(bad)
push
dec
inc
xchg
and
pop
shl
push
pop
pop
or
dec
sbb
xor
xchg
add
mov
push
push
loopne
jne
int3
adc
xchg
arpl
mov
sahf
cwde
adc
mov
pop
add
add
mov
outs
cli
pop
cs
(bad)
push
or
dec
fild
nop
or
test
dec
mov
pop
mov
call
jmp
jns
and
adc
call
push
cwde
sub
into
imul
aaa
rcl
scas
sub
mov
(bad)
movs
(bad)
in
pop
push
mov
repz
mov
daa
add
test
ins
mov
inc
xchg
xlat
(bad)
and
xchg
enter
push
xchg
(bad)
cmp
fst
jmp
mov
or
ja
ja
jecxz
cvttps2pi
sahf
cmps
jbe
movs
push
not
cmp
and
les
push
xchg
dec
add
jbe
clc
loope
push
cmc
in
out
(bad)
pop
mov
and
mov
data16
pop
lock
idiv
movs
aaa
scas
inc
jge
and
jmp
enter
mov
stos
jge
das
pop
xor
xor
call
ins
xor
hlt
xchg
and
rol
dec
pop
sbb
(bad)
mov
mov
les
in
leave
and
sbb
push
adc
aas
mov
adc
sub
push
xchg
push
ret
imul
stc
in
repnz
pushf
add
mov
fstp
stos
pop
nop
lods
xchg
(bad)
ja
icebp
add
sahf
in
jmp
mov
fld
adc
cmpps
pop
pop
pop
mov
nop
jl
mov
xor
pop
sub
stc
sub
(bad)
push
pushf
cmp
jp
fwait
test
inc
out
ret
cmovno
sahf
inc
sub
push
xor
inc
xor
call
repnz
fistp
push
ficomp
jge
loop
mov
out
mov
cmp
int
xor
inc
jo
cld
dec
sub
inc
adc
aam
and
inc
test
test
mov
loopne
popf
cs
mov
pop
rep
mov
test
push
mov
add
in
cmc
cs
push
inc
xlat
cwde
retf
clc
cdq
call
cdq
pop
lea
mov
dec
and
xor
arpl
adc
pop
pop
repz
cs
out
cli
sub
ins
add
clc
arpl
jmp
mov
fs
inc
repnz
(bad)
inc
adc
scas
shl
cwde
mov
inc
repz
xor
(bad)
out
xor
add
jne
sahf
mov
test
pop
sub
in
cmp
cmc
cmp
pushf
or
push
loop
sbb
aas
cli
pop
fs
jmp
cmp
aas
mov
les
int3
mov
mov
sbb
jg
mov
outs
adc
pop
gs
mov
lods
repnz
pop
sbb
je
xchg
xlat
rol
das
jle
sub
jl
dec
cmp
cwde
xchg
pop
jns
mov
mov
and
scas
push
pusha
xchg
mov
sbb
jle
dec
data16
arpl
cmps
push
int3
aam
mov
ja
std
bound
jb
ins
xchg
dec
mov
jl
sbb
hlt
retf
inc
and
adc
xchg
(bad)
cmc
jne
jne
ror
vpmaxub
push
mov
jmp
in
es
or
adc
ds
leave
and
or
inc
mov
nop
adc
aaa
cmc
(bad)
xor
sbb
mov
mov
mov
xchg
addr16
lods
dec
jge
push
(bad)
fmul
inc
mov
mov
pop
lock
sub
ror
std
sub
xor
ds
xchg
cld
jge
jge
sub
loop
xchg
arpl
jge
movs
icebp
xchg
xchg
sbb
cmp
jnp
or
jae
hlt
(bad)
mov
jo
xor
lea
fucomp
jmp
dec
push
mov
adc
xchg
sub
cmp
fisttp
jb
(bad)
mov
pop
inc
xor
mov
aaa
xor
ret
cli
mov
sbb
shl
pop
sbb
add
mov
add
out
and
(bad)
jecxz
xchg
xchg
add
pop
xchg
in
js
push
or
fldcw
xchg
pop
jo
inc
pop
ss
inc
xchg
pop
jne
mov
mul
ja
(bad)
cld
movs
call
mov
scas
push
cmp
outs
int3
jecxz
sub
leave
(bad)
xor
mov
sub
jne
xor
cmp
std
inc
cmps
pop
out
and
lock
adc
push
add
mov
repnz
mov
mov
mov
add
stc
pop
test
inc
jp
inc
cmp
cmps
mov
out
jno
jb
pushf
and
or
adc
dec
mov
and
jp
gs
mov
fcomip
daa
leave
inc
(bad)
mov
(bad)
adc
dec
xor
lock
dec
je
iret
leave
ret
mov
cmp
jne
jge
xor
cdq
pop
sbb
dec
sbb
jb
fwait
and
jmp
add
inc
push
dec
(bad)
pushf
fist
pop
cmp
bound
mov
and
stc
add
dec
addr16
cld
add
inc
cmp
std
sbb
vmovdqu
pushf
dec
(bad)
mov
les
and
xchg
retf
push
pop
popa
lods
adc
adc
lods
or
jp
add
xor
mov
and
bswap
jne
jmp
nop
ror
aaa
sub
sub
(bad)
cdq
push
movs
push
sub
pop
jg
retf
loope
adc
ss
cwde
jb
mov
inc
mov
rol
xchg
test
mov
icebp
pop
pop
pop
cmp
pop
adc
adc
sub
xchg
aaa
mov
iret
mov
and
adc
sbb
sub
lahf
and
sbb
ins
sbb
nop
or
pop
rcl
(bad)
xchg
pop
in
int
ret
ins
mov
pop
loope
pop
add
mov
xchg
xor
jae
cmp
(bad)
lea
test
push
add
in
enter
pop
inc
add
or
into
(bad)
(bad)
fistp
repnz
(bad)
push
adc
push
dec
push
bnd
sub
paddq
fiadd
mov
sbb
xlat
adc
outs
xor
mov
cmc
and
test
sbb
cmp
mov
iret
cdq
repz
test
sbb
retf
stos
or
test
sbb
mov
inc
out
cmp
int
xor
adc
inc
cmps
ds
xor
(bad)
add
pushf
movs
std
cmp
lods
inc
xchg
stos
xchg
adc
push
sub
adc
test
jne
test
daa
lea
xchg
pop
cmps
jbe
addr16
push
sub
into
das
pop
mov
dec
cmp
(bad)
pop
das
imul
mov
in
shl
dec
stos
add
ficomp
jle
leave
popf
(bad)
sub
push
or
sbb
inc
xchg
mov
imul
cmp
adc
test
add
loope
mov
add
add
test
and
push
fwait
(bad)
and
pop
mov
mov
enter
js
mov
xor
sbb
jne
rcr
xlat
enter
jb
jne
sbb
add
(bad)
jle
sar
mov
sti
sbb
xchg
ja
cmps
icebp
or
xor
jg
xchg
inc
aad
arpl
repz
or
js
call
test
cmp
test
cmp
adc
popf
xor
mov
mov
imul
cmps
xchg
pop
shr
mov
mov
outs
mov
test
cs
(bad)
pop
dec
pop
sub
mov
xchg
retf
je
mov
loopne
pop
xchg
push
cmp
mov
jg
test
inc
retf
idiv
and
jg
xor
or
jmp
inc
fdiv
(bad)
push
aas
out
push
jo
jle
cmovg
into
cli
(bad)
inc
or
les
in
lods
mov
iret
sbb
shr
mov
cmp
adc
(bad)
aaa
xor
adc
pop
sub
push
add
iret
and
pushf
test
pop
sar
jne
dec
fstp
repnz
cmp
clc
add
mov
dec
add
push
inc
nop
stos
call
mov
sub
test
xor
(bad)
pop
mov
adc
stos
out
adc
inc
add
mov
mov
add
xchg
adc
pop
jmp
les
jbe
push
or
or
push
add
push
cmp
sar
sbb
retf
lea
pop
pop
jp
sub
add
sbb
stos
mov
push
lods
int3
mov
scas
rcr
js
push
test
repz
cmps
jecxz
push
sbb
sbb
repz
hlt
aad
bound
(bad)
out
ret
in
push
leave
xchg
dec
inc
cmp
shl
mov
test
fist
mov
ss
inc
adc
sub
mov
cmp
pop
inc
mov
push
lods
cmp
cli
jne
xor
mov
test
or
or
and
sbb
xchg
(bad)
fimul
jle
retf
xor
add
jno
test
scas
push
shr
jno
and
sar
iret
sbb
div
and
add
adc
push
imul
adc
std
popa
adc
in
xor
mov
xchg
xor
jmp
scas
ins
mov
je
(bad)
lock
or
out
mov
std
fnstenv
sbb
sbb
das
mov
adc
ja
and
xchg
bound
call
jge
cdq
shl
push
mov
push
sub
pop
in
retf
push
daa
xchg
sbb
fmul
push
movs
pop
fdivr
dec
ja
ret
push
mov
movs
sbb
cmp
dec
jb
bnd
out
fcmovne
cld
xor
pop
jmp
or
mov
adc
xchg
int
sub
jp
xchg
sub
jne
pop
jge
cs
fst
add
lds
retf
dec
es
cmps
push
popa
adc
ins
rcr
rdmsr
push
push
sbb
jne
add
(bad)
call
repnz
retf
shl
(bad)
jecxz
imul
mov
mov
add
lea
cmp
push
mov
sub
ss
test
xchg
xchg
test
xlat
pushf
xchg
call
cmps
sbb
(bad)
mov
aad
loope
mov
adc
sbb
pop
ret
ds
jecxz
clc
repz
(bad)
jp
mov
mov
retf
xchg
xchg
shr
xchg
mov
rcr
xchg
push
mov
mov
mov
sbb
add
pop
sub
xchg
leave
inc
inc
push
mov
jp
ss
aas
mov
add
push
xchg
shl
in
cld
adc
mov
mov
adc
cld
inc
pushf
je
push
add
cmps
fdivr
ret
fldz
dec
push
sub
push
dec
jb
pop
jbe
sbb
psubq
aaa
dec
popa
call
movs
fs
out
cs
cdq
loopne
jnp
sub
cmp
cmp
adc
out
mov
cwde
aad
dec
aaa
push
fldcw
je
scas
cmp
sti
out
sub
pop
cmc
iret
cdq
iret
pusha
or
je
jg
iret
or
std
xchg
xor
test
fidivr
test
cmp
cmc
push
sahf
xchg
jns
fld
jb
test
cmp
mov
adc
cli
sbb
repnz
mov
xchg
cdq
(bad)
mov
je
jns
ins
sti
enter
cmp
cmps
jns
fldcw
cld
cmp
cli
lea
stos
mov
pop
scas
lods
dec
add
and
outs
xlat
les
push
mov
stc
xor
jmp
mov
ss
jle
jnp
call
inc
ss
pop
addr16
cmp
dec
xlat
add
jle
test
xchg
mov
shl
dec
and
mov
les
jnp
and
repz
sbb
out
lds
sbb
inc
cmp
movs
or
out
push
pushf
pop
ror
jnp
ror
jmp
inc
dec
and
cmp
sahf
dec
adc
jae
sub
add
shr
fimul
and
fsub
or
mov
pop
hlt
inc
imul
mov
call
(bad)
shld
push
mov
jge
mov
mov
jg
shl
push
loop
lods
fs
lods
loopne
jle
repnz
inc
int
pop
daa
stc
imul
in
mov
sbb
and
dec
push
sbb
fnstsw
gs
loope
inc
data16
xor
sub
retf
aas
pop
leave
jne
test
lahf
test
inc
xchg
push
mov
push
lods
shl
bound
(bad)
adc
jp
movs
pop
or
cmp
pop
ins
in
aam
pop
dec
stos
add
add
xchg
sbb
outs
imul
push
push
push
xor
test
pop
dec
inc
call
aam
pop
fsubp
je
scas
jmp
addr16
cmp
jge
pop
div
outs
clc
xchg
dec
or
inc
mov
mov
dec
sbb
jg
mov
inc
mov
(bad)
mov
sub
adc
sbb
push
pop
sub
dec
cmp
xor
popa
jmp
out
cld
jge
lock
fsub
sbb
xor
je
sbb
xchg
aam
ret
jb
adc
xor
pop
adc
push
mov
stc
popf
dec
xchg
ss
or
cmps
jno
and
or
mov
add
(bad)
cmps
jne
sti
adc
and
ins
int3
and
lods
pop
mov
(bad)
jecxz
mov
or
xchg
xor
rcl
xchg
arpl
or
pop
jg
ja
lea
pushf
repnz
call
adc
xor
or
mov
cld
or
fwait
push
sub
sar
cdq
stc
sti
pop
mov
lods
mov
xchg
mov
add
gs
test
mov
or
stos
imul
rcl
push
adc
ds
dec
inc
adc
jge
in
jno
sub
inc
lock
(bad)
mov
adc
clc
and
pop
cmp
mov
mov
push
bt
call
bound
or
bound
pushf
xlat
bound
xchg
fwait
call
loope
adc
xchg
dec
hlt
shl
imul
push
daa
loop
dec
mov
dec
xchg
loop
push
jbe
lods
mov
sub
test
pop
sub
stos
sub
lds
mov
jns
out
enter
fmul
movs
mov
test
cld
dec
ja
push
cmp
cs
fisttp
sub
nop
xchg
cmp
xchg
outs
pusha
int3
test
not
push
push
leave
repz
push
mov
movs
xor
loop
sbb
or
dec
inc
push
call
add
iret
jge
(bad)
(bad)
in
mov
sbb
jo
sub
dec
lock
retf
adc
adc
ins
aaa
sbb
sub
dec
test
or
aam
cli
fwait
jmp
inc
or
into
dec
repnz
cmp
push
popf
mov
cmp
xor
loopne
icebp
aas
lods
ins
cmp
fst
and
push
outs
dec
xchg
ficom
xchg
bound
sbb
jecxz
aas
inc
and
inc
retf
sbb
sub
xor
inc
gs
ins
hlt
cmp
xor
movs
in
pop
mov
cmc
mov
xor
or
push
mov
pop
jnp
test
cmp
inc
leave
iret
inc
repz
data16
mov
xchg
fmul
jp
or
push
ins
inc
arpl
outs
int3
mul
inc
pushf
mov
cmp
push
xchg
mov
sub
and
mov
sbb
fidivr
aaa
das
out
inc
add
mul
push
ret
pop
and
lds
mul
fidiv
sbb
(bad)
ja
fwait
cmps
shl
xchg
add
in
mov
xor
imul
test
adc
sub
xor
stos
pop
sbb
sahf
add
adc
jl
(bad)
cmp
cmp
adc
and
jmp
in
icebp
jecxz
out
retf
mov
sub
aas
push
shl
cmp
popf
std
out
in
mov
cwde
xor
push
lods
mov
gs
rcr
adc
adc
sbb
fwait
mov
xor
mov
std
push
mov
pop
aad
push
xor
popf
stos
jge
fisttp
out
dec
jmp
mov
xor
test
xchg
xchg
inc
and
sub
jmp
inc
arpl
in
movs
jge
(bad)
push
ins
xor
icebp
int
stc
lea
pop
push
lock
aas
mov
outs
outs
pop
lock
xor
push
adc
and
or
xchg
call
pop
xchg
jmp
lds
cmp
adc
call
dec
push
mov
xor
xor
in
das
aam
mov
popa
xor
jle
aad
sub
enter
sub
or
fcmovbe
pop
cdq
pop
mov
xor
stos
pop
mov
fstp
dec
call
popa
jo
inc
jg
xchg
in
gs
add
push
mov
sbb
mov
xlat
inc
out
and
mov
cmps
mov
daa
in
lahf
aaa
dec
cmp
mov
cmp
mov
aad
in
mov
cmp
imul
mov
out
mov
xchg
out
and
in
jb
cdq
push
sahf
rcr
cmp
in
cmps
jmp
ins
imul
aad
aad
int3
dec
call
add
cmps
mov
mov
sbb
xor
push
push
and
xchg
adc
adc
mov
mov
xor
shl
test
imul
sbb
cmps
pusha
icebp
mov
push
test
dec
shr
jle
xchg
out
xor
call
sar
(bad)
pop
addr16
and
cli
shl
xor
inc
fdivr
jg
dec
xchg
lods
pop
sub
cmp
inc
fidivr
loop
dec
dec
mov
pop
add
fdivr
jo
(bad)
push
icebp
xor
cdq
rol
ror
dec
pop
enter
mov
hlt
push
call
cmp
pop
sahf
cmps
sub
repz
mov
sbb
sbb
adc
ret
pop
dec
adc
dec
xchg
push
xchg
xor
push
jmp
xchg
comiss
jno
inc
cmc
mov
cmp
xchg
js
push
jae
(bad)
cld
push
adc
push
xchg
das
inc
ffree
jmp
xor
fcmovnu
bound
and
jns
sub
inc
loop
inc
jnp
pop
ret
xor
out
push
je
pop
sbb
call
shl
or
cs
jns
jo
or
stos
adc
mov
mov
das
popa
mov
mov
repz
xchg
cmp
mov
in
gs
cmps
cdq
or
adc
cmp
pop
or
repz
aaa
xchg
cld
dec
movs
add
xchg
push
adc
mov
ret
sbb
(bad)
ds
je
cld
loope
ret
js
mov
mov
inc
sub
int
pop
jno
not
xchg
es
aad
aaa
cmp
push
and
dec
mov
pop
pop
gs
xchg
clc
rcl
pop
or
ins
push
sub
or
and
mov
popa
mov
mov
fiadd
xchg
movs
sbb
fsub
call
pop
out
or
jmp
pop
xchg
add
mov
fwait
sub
jmp
les
in
jecxz
dec
out
mov
retf
mov
rol
xor
pop
mov
dec
mov
or
out
xor
mov
(bad)
ins
es
scas
jp
adc
mov
cmps
mov
call
fbld
inc
jg
mov
rcl
dec
into
or
imul
rcl
push
pop
js
shl
and
ret
movs
jle
cld
sub
btc
ds
mov
lea
stos
sbb
fwait
cmc
pop
mov
jb
daa
cmp
xor
xchg
stc
adc
push
push
lock
mov
out
sbb
mov
lahf
xchg
pop
into
(bad)
jge
jne
iret
call
(bad)
mov
imul
js
les
cmps
rol
ss
sbb
test
clc
push
mov
pop
aad
pop
(bad)
add
test
imul
mov
push
push
dec
jno
pushf
cmp
sbb
call
lods
lods
cwde
ins
adc
icebp
out
bound
adc
iret
inc
mov
sub
ja
jnp
icebp
lock
ss
icebp
stc
xor
retf
adc
mov
in
jbe
and
jne
push
cmp
mov
js
jb
sub
or
in
mov
push
inc
(bad)
paddd
sub
fcompp
movs
rcr
cmp
(bad)
aas
or
repnz
call
jmp
add
and
dec
jne
jb
sub
and
adc
lahf
pop
or
mov
mov
retf
mov
dec
mov
jae
push
test
sbb
in
enter
fcomp
or
out
push
iret
fs
fcomp
mov
mov
dec
mov
(bad)
inc
in
add
cmps
pop
sti
cli
push
fsubrp
cdq
dec
(bad)
retf
lahf
iret
xor
xchg
lahf
and
adc
or
ss
loope
mov
cld
push
add
sar
xor
or
lods
inc
sbb
and
fstp
or
mov
and
mov
xchg
xor
movs
pop
add
imul
jo
or
call
jle
pop
sub
add
ret
add
adc
aam
imul
mov
push
push
in
jmp
shl
adc
cmp
jmp
ror
pop
pop
enter
out
or
or
dec
neg
inc
sub
rcr
dec
push
fstp
jno
test
rol
xchg
cmp
call
out
fisttp
mov
out
or
std
mov
push
jmp
add
cs
push
cmp
pop
das
int
dec
mov
out
and
outs
nop
in
std
xchg
imul
add
sbb
test
sub
sbb
daa
pop
cmps
in
hlt
dec
pop
add
pop
cmp
xor
out
mov
nop
jecxz
or
pop
cmp
cmps
fstp
sbb
outs
sqrtps
out
imul
hlt
inc
repz
push
push
ret
cmp
and
nop
mov
enter
repz
xor
or
int
fisttp
cmp
icebp
or
or
adc
imul
sbb
sub
call
fsubr
inc
add
jnp
xlat
pop
mov
jne
cmovle
sub
imul
and
cmps
(bad)
in
adc
and
sub
fisttp
mov
and
dec
enter
sub
outs
leave
mov
adc
lock
lds
jmp
sahf
add
and
dec
adc
pop
pop
push
jg
fisttp
iret
dec
mov
add
mov
ja
outs
jmp
jne
jp
fcomp
push
cmps
and
inc
outs
xchg
dec
fs
ret
xchg
lods
mov
dec
shl
leave
push
leave
jmp
and
jo
test
push
dec
shl
sbb
aaa
icebp
mov
mov
shl
cmps
retf
mov
pop
or
adc
jmp
xor
lock
fcmovb
retf
(bad)
xlat
mov
daa
sub
sub
push
pop
mov
push
idiv
(bad)
div
mov
adc
call
dec
jl
gs
push
js
pop
mov
jne
and
sub
xlat
mov
push
xor
dec
push
push
outs
sub
cmp
cmp
pop
sub
iret
push
std
xor
loopne
enter
and
xchg
mov
inc
cmc
sbb
je
sar
test
mov
jb
bound
pop
jbe
jge
(bad)
pusha
and
daa
cmp
push
loopne
jne
dec
lds
retf
shl
popa
int3
xor
dec
cmp
pushf
xor
pop
cmps
mov
test
xchg
lods
mov
mov
out
jno
sahf
xchg
js
mov
in
sbb
xlat
stos
add
out
sub
sub
arpl
cmp
xor
cwde
or
pop
xchg
xor
test
mov
popa
sbb
xor
adc
add
ins
inc
nop/reserved
mov
mov
and
call
retf
shl
mov
sbb
xor
adc
shr
add
pop
add
push
call
jb
movs
mov
loope
mov
xor
js
pop
es
(bad)
ja
xor
in
test
arpl
adc
push
cmp
(bad)
fidiv
inc
and
mov
daa
into
lahf
pop
js
gs
add
jbe
stc
outs
xchg
add
mov
xor
or
cs
and
and
aad
es
jl
(bad)
clc
push
jecxz
xchg
add
pop
xchg
(bad)
in
and
clc
sbb
lea
jp
sar
cld
ins
inc
and
mov
or
leave
loop
and
mov
ficom
imul
sub
dec
add
xlat
xor
pushf
dec
xchg
popa
in
push
movs
add
sub
ds
add
fidiv
mov
or
sbb
cld
rol
hlt
test
mov
bound
xchg
fbstp
cli
cmp
hlt
push
lock
jae
dec
jl
mov
mov
cld
aaa
scas
pop
hlt
es
lock
or
add
mov
rol
mov
dec
mov
xor
lahf
push
pop
mov
out
jmp
dec
(bad)
pop
lods
fidivr
sar
adc
daa
jp
out
inc
popa
mov
jl
mov
div
jl
cmps
fs
(bad)
sti
retf
shr
pop
and
mov
push
mov
jmp
rol
mov
sub
sti
arpl
sar
pop
dec
sbb
mov
pushf
sbb
add
in
popf
or
dec
mov
or
mov
xchg
call
push
sbb
arpl
jns
in
xor
(bad)
cmps
mov
or
pop
xor
mov
mov
mov
jno
push
or
jbe
sub
push
xchg
dec
xor
jg
mov
mov
out
iret
or
(bad)
jo
int3
in
(bad)
mov
xchg
sub
out
test
retf
add
fnstcw
cmps
xor
push
aam
mov
mov
or
cld
cmp
mov
jb
or
dec
cmp
call
mov
inc
dec
addr16
lods
daa
inc
push
jnp
xor
and
pop
lds
push
sub
push
gs
out
aas
shl
xchg
adc
aaa
test
inc
leave
cmps
mov
not
pop
sub
pop
leave
push
dec
jl
dec
lahf
pop
aas
pop
sahf
pop
mov
pop
adc
add
add
fst
jno
int
(bad)
jb
mov
cmp
pop
mov
push
popf
xor
or
movs
sbb
sbb
test
pop
bound
jecxz
push
adc
jmp
and
push
rol
out
jbe
push
inc
xchg
and
push
add
cli
in
(bad)
push
cmp
into
mov
dec
push
mov
pop
movs
movs
fistp
psubsw
adc
lea
mov
rcl
cmp
pop
xchg
loopne
sub
dec
dec
pop
jne
dec
cmp
mov
int3
cmp
into
ins
cmp
loop
inc
mov
sar
outs
bound
test
jecxz
xchg
cmp
ret
aam
nop
rcl
outs
stc
mov
mov
movs
cmp
push
jmp
jg
dec
int
pop
rcr
mov
inc
jmp
xor
pop
vrsqrtss
pop
cld
mov
addr16
test
mov
mov
call
jb
mov
push
jl
lods
dec
int3
push
jmp
jmp
out
xor
loope
sbb
fisubr
ficomp
push
ficom
sub
push
loop
and
mov
and
sbb
adc
cwde
mov
sbb
nop
cmps
ins
loope
in
adc
loope
mov
call
(bad)
cdq
fs
loop
mov
call
pusha
mov
jmp
push
lods
test
icebp
pop
movs
sbb
icebp
or
jp
hlt
in
mov
lods
out
sub
rol
test
lds
xchg
mov
dec
push
adc
cld
jl
nop
test
pushf
inc
cmp
adc
and
repz
mov
cld
inc
adc
inc
pop
data16
pop
dec
mov
retf
sub
cmp
push
push
dec
lods
inc
add
repnz
retf
xchg
push
pop
push
add
add
loope
pop
xor
adc
inc
mov
push
daa
ja
movs
cmps
pop
mov
add
aad
dec
inc
das
dec
pop
out
or
sahf
in
or
cmps
inc
xchg
jo
xchg
pushf
aad
xchg
push
and
aas
lods
aam
pop
and
push
sti
test
pusha
out
adc
in
out
mov
outs
jb
push
test
call
pusha
add
lods
clc
std
ja
add
jl
mov
push
and
sub
leave
xchg
mov
mov
sub
xchg
xchg
loope
fdiv
jb
mov
iret
dec
and
add
loopne
repnz
jae
loope
inc
out
inc
jmp
call
fwait
ds
aaa
repz
sub
repz
addr16
adc
(bad)
div
(bad)
out
cmp
je
(bad)
(bad)
sub
pop
in
ds
sub
shl
adc
xchg
into
inc
fisub
cmp
mov
pop
pop
les
not
ret
add
popa
pop
in
sub
and
fisub
fwait
hlt
jmp
aad
push
mov
mov
fadd
or
adc
ins
mov
push
enter
jnp
dec
gs
pop
scas
sbb
hlt
jecxz
arpl
add
pop
lods
pop
rcr
or
adc
or
jmp
xor
jo
cdq
mov
add
outs
ret
sahf
mov
pop
add
push
pop
ins
mov
cs
rol
mov
movs
inc
or
in
ret
add
(bad)
sbb
lahf
mov
clc
leave
pop
ja
add
sub
xchg
mov
pop
xchg
popa
hlt
add
pop
repz
fadd
or
sar
jae
xchg
mov
sbb
jmp
inc
lods
dec
stos
and
pop
xchg
and
es
test
mul
xor
lea
data16
pop
cmp
lds
dec
sub
call
repnz
mov
dec
xor
push
ror
les
push
cmp
dec
fsubr
jg
ins
add
sbb
out
je
sub
ret
fdivr
pop
mov
lock
mov
mov
xchg
movs
and
sbb
push
mov
sub
pop
mov
and
scas
xor
jbe
pop
inc
js
inc
jecxz
dec
in
aaa
and
push
sub
and
mov
push
xor
mov
and
in
and
mov
xor
sbb
cdq
jbe
fsubr
jnp
(bad)
mov
pop
or
mov
inc
outs
cmc
in
(bad)
sub
pop
pop
ds
add
xor
(bad)
cmps
test
test
ficom
fcom
out
xor
or
into
cdq
mov
xor
mov
sub
aaa
inc
mov
call
sub
adc
pop
lahf
pop
arpl
(bad)
cwde
push
jg
mov
jl
and
retf
(bad)
aaa
pushf
(bad)
dec
push
xor
inc
scas
push
adc
jl
mov
imul
mov
xchg
icebp
cmp
hlt
jmp
mov
cdq
imul
outs
lock
pop
jmp
jns
xor
enter
or
aaa
mov
mov
cwde
js
outs
sub
inc
stos
cmp
loope
jl
jo
mov
bswap
cld
aaa
popf
aam
(bad)
into
inc
mov
jne
and
sub
iret
cmps
mov
jg
lock
inc
ss
test
sahf
out
lods
xor
mov
test
rol
dec
fistp
or
mov
pushf
dec
sbb
jp
xor
sti
cmp
sbb
xchg
or
jb
out
cmps
xor
push
in
fild
shr
cli
mov
jno
sub
push
ja
inc
adc
mov
push
xor
out
mov
add
xor
inc
rol
cmp
mov
fs
test
adc
imul
lods
fmul
dec
or
pop
jg
je
loop
mov
push
xchg
mov
jge
mov
cmp
mov
and
jns
sti
popa
(bad)
lods
push
push
xchg
pop
js
call
mov
adc
mov
inc
dec
cwde
push
inc
add
fwait
les
into
push
lods
xchg
and
xor
fs
xchg
ins
repz
ret
ficom
sbb
aas
xor
mov
mov
mov
xchg
int
xlat
mov
dec
sti
js
rcl
sbb
(bad)
in
and
jnp
aam
xchg
into
int3
xchg
inc
outs
ret
ror
cmp
enter
ret
adc
and
pop
rcl
movs
xchg
sub
imul
add
mov
cmp
inc
jle
int3
movs
shl
pop
jmp
imul
mov
xchg
xchg
sub
push
(bad)
lods
mov
cs
or
data16
cmp
fld
div
idiv
outs
sbb
iret
stos
daa
mov
shr
dec
xchg
mov
xor
inc
mov
aas
sti
int3
popa
mov
and
xchg
and
cmp
or
push
add
cmc
jp
push
jmp
jmp
jae
mov
out
and
add
push
(bad)
lea
lods
push
adc
in
and
jnp
xchg
dec
int
sub
(bad)
and
ins
mov
pop
cmc
lahf
inc
popa
out
pop
cdq
dec
cmc
jbe
pop
pop
pop
add
stos
xor
repz
mov
mov
movs
or
or
dec
pop
sub
push
pop
sbb
pop
pop
adc
mov
enter
xor
cmp
inc
push
aad
inc
and
mov
jmp
or
push
popf
mov
xchg
jns
adc
test
sbb
rcr
aas
dec
ret
(bad)
aad
bound
fcomp
loopne
push
inc
pop
jno
pop
and
(bad)
hlt
xchg
mov
into
jno
cmps
in
movs
push
dec
add
cmp
js
push
aad
jmp
iret
loop
xchg
push
push
pop
ret
fadd
(bad)
div
xchg
push
push
mov
cwde
cmp
shl
and
mov
inc
jge
mov
or
inc
aad
add
sbb
xchg
addr16
idiv
jg
movs
xchg
neg
jns
pop
pushf
dec
cmp
or
dec
retf
adc
loopne
mov
xchg
cs
and
mov
call
sub
mov
aas
sbb
jo
jmp
sbb
adc
mov
(bad)
je
mov
out
(bad)
and
gs
and
cmp
stos
loope
mov
inc
movs
div
jne
xor
xor
(bad)
xor
leave
(bad)
ror
cmps
and
add
jne
ror
retf
pop
xchg
and
ds
sub
jge
and
xchg
xchg
push
xchg
cwde
in
imul
cmp
hlt
cmc
lods
cmp
jmp
mov
add
mov
adc
lock
movs
aam
sbb
dec
(bad)
cli
pop
stc
xor
inc
add
or
pextrw
pop
test
sbb
jne
cmp
ss
mov
mov
lock
or
pop
push
inc
mov
sbb
cmp
in
(bad)
stc
xlat
aas
push
mov
xor
repz
adc
es
enter
out
push
call
push
pop
and
sub
mov
push
add
adc
cmc
pushf
call
jle
hlt
sub
mov
jmp
rcr
stc
pop
loopne
rol
pop
lods
or
adc
mov
data16
and
aas
test
mov
push
inc
xchg
push
cwde
push
mov
hlt
dec
ret
dec
jne
dec
ins
mov
sbb
hlt
mov
fucomi
popf
and
adc
jb
push
xchg
sbb
cli
pusha
lahf
cmp
push
mov
sar
jno
add
popa
push
mov
ja
dec
xor
pop
ds
and
jp
jg
push
push
rcr
cmps
xchg
and
lahf
dec
pusha
cli
test
(bad)
aad
popa
xor
sahf
ja
out
sub
add
xor
aas
in
jmp
ins
adc
jmp
push
cmp
xchg
div
iret
xlat
enter
jo
repz
icebp
xor
push
xchg
inc
je
adc
shl
xor
loopne
pop
aam
mov
stos
mov
xchg
inc
xor
loope
xchg
(bad)
sbb
or
shl
daa
or
cmp
and
ja
pop
xchg
mov
or
outs
mov
jbe
cli
ins
fs
cmp
push
gs
dec
fsubr
(bad)
mov
shr
cs
add
add
in
(bad)
dec
add
or
xor
in
imul
inc
xchg
test
imul
adc
into
jmp
jle
and
sub
or
mov
ret
sahf
stc
gs
ins
xchg
mov
sub
ror
enter
dec
fiadd
cli
fmul
je
dec
mov
(bad)
int3
adc
icebp
cmp
fcmovu
ja
add
xor
and
sub
iret
and
sahf
cmps
in
mov
pop
sbb
jb
pop
ror
fisub
sbb
ins
fiadd
xor
mov
push
xchg
popa
mov
pop
clc
xor
imul
retf
mul
outs
shl
repnz
jge
mov
das
jp
cmc
repz
jns
sbb
iret
jne
scas
add
je
push
in
cwde
sbb
lods
pop
ret
adc
pop
movs
mov
jne
test
mov
ret
fdiv
inc
jne
loope
add
and
cvtps2pd
movs
icebp
cmp
mov
inc
adc
int3
jmp
push
neg
xor
cmp
add
sbb
xlat
push
cmp
jmp
test
lods
sbb
int
sub
xchg
push
into
sub
retf
dec
adc
stos
jmp
into
and
mov
sbb
cmp
pop
adc
xchg
xor
out
sub
ror
imul
retf
pop
push
ret
test
into
je
pusha
mov
out
cli
xor
jb
cmc
dec
int3
pushf
es
mov
shl
sbb
aas
lods
div
mov
mov
add
sub
rcl
xchg
xchg
mov
mov
push
and
pop
jb
ror
mov
call
mov
movs
pop
test
cmps
jge
test
xor
adc
out
arpl
ret
mov
mov
mov
jbe
xor
cwde
call
neg
mov
and
jbe
(bad)
imul
cli
add
jmp
leave
dec
and
and
inc
xor
rol
inc
jnp
jmp
dec
xchg
popf
stos
mov
mov
push
adc
cmp
jo
and
lock
cmp
or
lahf
add
loope
lds
stos
lods
ret
or
xor
shr
daa
mov
add
imul
dec
test
fidiv
jno
les
xchg
ds
mov
leave
dec
pop
(bad)
push
pop
adc
popa
int3
fs
int
je
fwait
add
ficom
out
(bad)
js
movd
in
mov
fdivrp
jo
jae
arpl
sub
repz
jmp
or
pop
or
(bad)
cmp
mov
in
mov
push
popa
lods
mov
nop
sbb
push
jns
je
xchg
rcr
xor
int
adc
xchg
sti
mov
ins
xchg
(bad)
lds
das
xor
test
mov
gs
adc
push
adc
scas
fbld
pop
jmp
xchg
out
mov
scas
in
inc
jl
jmp
dec
inc
mov
dec
lods
std
sbb
add
add
dec
movs
mov
xchg
and
sbb
ss
jnp
retf
leave
stc
(bad)
movs
shr
xor
loope
mov
jb
imul
int3
(bad)
and
sti
dec
jne
nop
fisubr
cld
push
mov
inc
jb
pop
ret
stc
cmps
or
pop
mov
in
xchg
dec
mov
mov
mov
mov
jle
(bad)
sti
or
xor
dec
cld
cmp
loop
test
mov
pop
(bad)
cld
push
popf
mov
lahf
and
daa
loopne
or
aaa
adc
imul
mov
mov
mov
jbe
pop
dec
adc
into
not
inc
xor
dec
mov
rcl
cwde
les
test
mov
sbb
cmp
(bad)
pop
push
pushf
push
mov
mov
pop
imul
into
pop
cmp
sub
push
mov
mov
mov
enter
jno
outs
fs
or
inc
mov
mov
pop
inc
add
fbld
push
mov
cmp
movs
les
or
gs
xor
and
jp
cmp
jg
arpl
scas
fisttp
cmps
stos
cmp
mov
adc
movs
xor
mov
mov
dec
mov
in
repnz
jecxz
add
dec
adc
outs
xchg
cs
dec
xchg
push
and
sbb
cmp
xchg
repnz
inc
ss
js
and
inc
pop
push
jne
mov
push
div
fabs
inc
scas
pavgw
stos
fild
jmp
push
jne
daa
xchg
adc
repnz
clc
in
mov
xchg
sbb
data16
dec
imul
pop
sahf
daa
sahf
ss
xchg
jmp
imul
jle
push
jnp
fisttp
pop
or
movs
sub
sub
in
adc
dec
ja
fistp
pop
(bad)
and
xchg
pop
icebp
adc
inc
scas
sub
fbld
dec
pop
fwait
popa
ds
and
in
xor
imul
pop
jbe
mov
inc
popa
xchg
push
int
call
jnp
inc
mov
inc
add
addr16
int3
adc
fbstp
sbb
mov
sub
push
fst
sar
xor
imul
sbb
add
dec
push
xlat
pusha
data16
and
cmp
mov
in
fwait
mov
pop
dec
or
pop
(bad)
out
out
mov
test
popf
imul
movs
ret
jl
vpackssdw
or
xchg
stos
or
jne
mov
add
mov
mov
fild
scas
cmp
bound
loopne
aas
scas
cmps
push
dec
add
sbb
aam
sahf
stos
(bad)
inc
(bad)
sub
add
mov
hlt
push
scas
out
call
adc
sar
iret
icebp
pop
mov
xor
xchg
sbb
add
dec
test
mov
mov
je
cwde
dec
sub
ds
adc
push
sub
call
ror
shl
cmp
fs
(bad)
out
mov
push
gs
cwde
sti
adc
cmp
daa
cmps
das
loop
int3
shl
xor
shl
lock
mov
adc
cmp
pop
test
and
je
xor
adc
cmp
jno
pop
mov
sub
inc
imul
or
lahf
dec
repnz
(bad)
jecxz
mov
es
icebp
in
mov
mov
movs
push
fldcw
stos
jae
call
les
inc
cwde
inc
sbb
pop
mov
cli
inc
sub
jns
pusha
add
mov
outs
mov
sbb
mov
movs
push
shl
jne
cmp
sbb
mov
rol
cmps
nop
test
nop
sub
int
retf
mov
adc
adc
xchg
iret
or
cs
xor
mov
dec
nop
jno
pop
jmp
sbb
inc
into
clc
loop
imul
mov
sbb
fsub
retf
jge
xor
xchg
xor
or
jge
mov
fsubr
aaa
adc
fistp
adc
jecxz
lock
push
xor
xor
xor
mov
jle
in
mov
push
mov
call
and
cmp
inc
adc
xchg
outs
inc
and
or
outs
fild
add
ret
in
sub
ins
dec
sub
dec
pop
add
std
push
int
pop
out
mov
xchg
(bad)
mov
adc
stos
pushf
ins
imul
lods
push
imul
mov
mov
fstp
cmc
jle
jecxz
lods
xchg
jecxz
pop
and
loope
jge
jne
lock
push
jmp
loop
int3
pop
test
repz
retf
js
xchg
or
xchg
hlt
cmps
into
cmc
stos
dec
ins
mov
rcl
aas
mov
popa
xor
adc
cwde
das
xlat
sub
mov
or
mov
stos
mov
fist
xor
push
sahf
jae
out
push
add
das
lock
pop
repz
or
mov
enter
pop
xchg
jb
pop
out
cmp
ins
push
pop
dec
push
mov
jmp
aam
aaa
stos
rol
data16
and
out
adc
lods
mov
fild
adc
push
and
ss
inc
jl
in
sub
scas
bound
xor
sbb
fs
test
out
push
mov
mov
fdiv
inc
jae
add
not
mov
jp
cmp
ins
fldcw
in
and
icebp
jae
cld
mov
xor
call
ins
sbb
into
dec
jmp
aad
lahf
out
mov
jb
cmps
inc
mov
add
sub
sub
cmp
fdivr
rol
call
je
call
mov
adc
push
jle
push
int3
lock
icebp
mov
dec
movs
add
mov
mov
sub
loop
hlt
or
xor
loop
jne
and
mov
push
jo
daa
lahf
out
and
pop
ins
xchg
mov
jmp
ins
shr
call
scas
nop
fistp
rcr
fldl2t
push
sti
adc
xor
fstp
les
imul
lods
jmp
cdq
loope
or
pop
jge
sbb
repz
movs
inc
(bad)
cmp
cmp
inc
jmp
sub
loop
xor
pop
pop
out
jo
mov
jnp
lods
ins
enter
sub
aaa
in
stc
fs
xchg
adc
imul
shl
mov
pop
enter
fist
clc
int
pushf
shr
mov
dec
in
out
ja
and
repnz
add
icebp
and
pushf
movs
cli
jno
inc
pop
xlat
dec
outs
ins
jne
jl
ror
dec
push
pop
cmp
shr
test
cmp
pop
adc
popf
sbb
jge
xor
cmp
jns
mov
jmp
mov
jb
xlat
push
dec
(bad)
and
fsubr
or
ins
dec
and
(bad)
hlt
mov
mov
pop
jp
or
and
mov
test
std
cmp
jno
ins
sbb
pop
adc
test
dec
daa
inc
adc
dec
cmp
les
in
add
in
nop
inc
retf
das
xchg
jnp
xlat
ins
jle
xor
not
ins
hlt
rcl
cmp
repnz
retf
pop
into
or
xchg
mov
mov
rcr
cmp
clc
sbb
fsubr
sub
pmulhw
jae
sub
aaa
data16
lds
in
xchg
and
xchg
adc
mov
inc
push
adc
inc
pop
adc
pop
inc
jns
jb
inc
and
push
cs
cmp
outs
xor
jmp
xchg
jno
adc
and
jbe
cmp
int3
mov
jmp
sti
inc
dec
and
dec
jle
mov
mov
in
lods
adc
inc
test
lds
ror
and
imul
pushf
mov
mov
out
inc
ins
sub
daa
jo
dec
(bad)
sub
adc
cmp
xlat
inc
mov
ret
(bad)
and
aaa
test
and
loop
icebp
lods
or
or
(bad)
inc
outs
inc
dec
inc
cmp
jnp
sbb
int
cmp
lock
jl
xor
add
mov
jo
addr16
add
pop
out
or
push
sub
jno
test
fisttp
fcom
lahf
fld
adc
pop
pusha
mov
nop
shr
call
jns
push
jp
adc
gs
inc
mov
fcom
xchg
sar
push
test
jbe
int
push
(bad)
cmp
dec
cmp
pop
(bad)
out
inc
rcr
pop
xor
jbe
ret
pop
cmp
xchg
dec
jge
fneni(8087
std
std
jge
and
mov
call
stc
cmp
jmp
mov
sub
cdq
les
pop
bound
dec
xor
call
adc
ret
aam
out
jg
cmps
jl
push
loop
loope
pop
(bad)
cmp
inc
test
sbb
sbb
jno
or
xchg
adc
daa
inc
add
mov
ins
int
pop
sub
cwde
neg
mov
mov
fwait
rcl
int
push
(bad)
shr
ror
cli
jae
out
icebp
out
push
(bad)
stos
adc
movs
das
in
jo
jns
lea
lods
cmp
mov
cld
iret
ins
inc
je
call
fst
mov
jnp
retf
pop
cmp
xchg
jg
mov
jmp
xchg
psllq
stos
std
cmp
iret
inc
(bad)
aad
outs
in
xor
adc
mov
push
aaa
arpl
out
(bad)
pushf
fld
retf
daa
inc
test
in
jmp
inc
aad
add
xchg
out
inc
pop
sub
es
cmp
hlt
loope
pop
in
and
imul
das
retf
push
mul
inc
stos
mov
and
sbb
repnz
dec
pop
into
or
ret
cwde
stos
test
xor
push
outs
aaa
retf
jg
jo
imul
les
mov
xchg
stos
mov
jno
das
jl
dec
jge
and
leave
cmp
mov
or
je
sub
jb
jmp
add
clc
mov
xchg
retf
inc
lds
gs
outs
daa
es
int3
jnp
les
push
cld
pavgw
lods
shl
jle
loop
cli
aas
ja
cmp
cmp
mov
lods
rcl
mov
movs
shl
sub
mov
pop
jnp
push
xlat
dec
or
mov
push
pop
imul
outs
enter
xor
jp
lzcnt
scas
addr16
das
int
xchg
adc
lea
pushf
sbb
movs
xchg
mov
push
xchg
pop
jg
imul
int3
int
aas
sbb
pop
lock
je
jl
stc
fwait
mov
inc
mov
xchg
pusha
mov
ret
xor
xor
fnstsw
fistp
jmp
pop
bnd
shl
add
mov
push
dec
mov
jecxz
add
out
mov
lahf
mov
das
repz
push
ins
cwde
sub
xchg
(bad)
ss
cmp
iretw
ror
imul
mov
inc
aad
cmp
adc
inc
inc
mov
push
cmps
inc
dec
jmp
push
fld
leave
(bad)
push
dec
or
mov
stos
je
dec
call
iret
lea
ret
jae
pop
shr
test
mov
sbb
jbe
out
sub
mov
add
jnp
jae
add
inc
fnstsw
mov
das
xchg
xchg
cmp
inc
xor
fdivrp
pop
or
jecxz
sbb
test
data16
adc
sub
mov
cli
jp
and
mov
or
js
out
xor
retf
adc
fstp
movs
inc
(bad)
jecxz
mov
push
mov
out
and
rcr
push
(bad)
adc
in
jp
or
fstp
inc
or
outs
add
les
pop
and
push
pop
push
jbe
xor
lds
enter
push
dec
popa
pop
sbb
add
rol
icebp
shl
adc
inc
mov
push
inc
sbb
clc
cwde
mov
ss
repz
gs
or
xor
push
push
std
dec
sub
sbb
retf
sub
inc
cmp
pop
pop
shr
inc
pop
aam
stos
(bad)
adc
cmp
repnz
pushf
in
ror
dec
inc
add
sub
ss
mov
xchg
xchg
xor
pop
clc
push
sub
push
iret
jns
cmps
pcmpeqw
mov
push
xchg
pusha
das
mov
jl
test
mov
clc
fild
adc
sub
xchg
xchg
jg
iret
inc
jp
push
jbe
call
push
sub
xor
push
xchg
inc
das
ss
int3
add
dec
jle
js
jbe
scas
cmp
pop
icebp
retf
leave
jp
sub
inc
test
aam
fldcw
mov
push
imul
nop
jae
mov
in
mov
loopne
test
test
std
fsub
mov
xchg
dec
and
inc
sub
rcr
inc
adc
shl
sbb
xor
pop
aam
and
mov
jmp
out
pop
cmps
es
fmul
imul
das
int3
jge
arpl
das
xor
test
je
rcr
daa
sub
adc
cld
ds
neg
sbb
pop
stos
outs
ret
push
sbb
in
std
xchg
das
push
ss
and
sti
(bad)
hlt
cmps
pop
pop
mov
sti
loop
xchg
mov
push
imul
imul
mov
add
ins
sbb
cmp
icebp
loope
call
or
out
jp
jge
mov
bswap
cld
aas
sar
or
xchg
enter
nop
pop
push
mov
sub
mov
adc
push
xor
loopne
outs
aad
lds
cmp
lods
pushf
pop
inc
push
or
ret
ds
imul
call
loope
push
push
cmps
out
outs
out
mov
cmc
jg
cmp
mov
or
dec
push
push
pop
clc
aas
sbb
retf
push
dec
shl
or
test
int
sub
ret
(bad)
shr
lock
cmps
cli
sbb
cdq
pop
fnstcw
sub
add
test
push
inc
movntq
cmp
call
inc
adc
sub
jecxz
mov
mov
lahf
lahf
in
ja
cmp
aad
cld
jg
fdivr
sti
add
jmp
mov
sub
arpl
or
(bad)
pop
loope
pop
scas
fst
and
in
lahf
mov
sub
mov
retf
xor
fistp
fdivr
dec
out
sbb
retf
jge
mov
les
lods
inc
mov
xor
in
outs
push
(bad)
pop
imul
lock
mov
mov
es
fst
inc
sbb
mov
stos
add
aaa
cmp
mov
cwde
in
fs
mov
or
(bad)
pop
popa
mov
lods
cs
mov
jo
hlt
stos
js
jns
inc
lds
lea
or
nop
fidiv
in
in
jg
test
xor
loopne
nop
sti
mov
aad
xor
xchg
or
add
dec
mov
loope
jmp
dec
test
fistp
addr16
in
not
(bad)
stc
aas
jp
rol
pushf
std
iret
adc
mov
pop
outs
xchg
and
data16
popf
adc
(bad)
(bad)
and
fstp
cmps
sub
cmp
dec
dec
int3
mov
pop
cs
loop
das
dec
sbb
adc
cmp
stc
sub
in
test
jmp
inc
movs
and
ins
jo
and
inc
push
data16
sbb
out
mov
mov
ror
loopne
cmps
or
dec
pop
dec
(bad)
(bad)
sbb
in
cmp
ds
imul
sub
dec
push
cmp
mov
xchg
ss
int3
aas
pop
jmp
lahf
stos
mov
inc
das
stos
call
scas
jg
ficom
dec
scas
stc
xor
pop
inc
and
push
retf
cmc
int
mov
cwde
loopne
imul
mov
sti
jl
sbb
out
add
sahf
aam
push
push
jbe
or
jmp
clc
(bad)
(bad)
int
into
add
icebp
aad
popa
jae
loope
pop
leave
or
mov
push
dec
xor
cmp
mov
and
pop
pop
jecxz
test
xchg
loopne
jmp
les
ret
mov
jge
test
push
mov
push
push
movs
xor
je
mov
shl
inc
pop
or
adc
nop
mov
mov
js
inc
(bad)
add
mov
cmp
pop
mov
cld
push
aad
hlt
or
jmp
sub
jmp
sbb
push
pusha
sahf
clc
pop
or
(bad)
mov
cmp
in
jecxz
or
in
push
fwait
imul
cmp
mov
pop
jge
retf
add
and
hlt
mov
fistp
retf
jge
ins
ds
xor
mov
adc
sub
xchg
mov
out
jne
shl
lock
fdiv
pop
mov
and
inc
jmp
jbe
mov
sbb
daa
push
pop
push
jo
pusha
jno
jo
shl
jno
mov
mov
inc
cmps
pushf
add
test
ret
add
mov
mov
ins
mov
loopne
add
clc
sbb
and
ret
stos
ja
ins
adc
test
scas
and
inc
inc
sub
out
xor
pop
inc
out
ret
ins
call
cmp
sbb
fist
stos
xchg
xor
pop
dec
pop
xchg
cmc
fst
imul
dec
jecxz
(bad)
dec
lock
jne
in
or
mov
sub
mov
sti
in
sbb
repnz
shr
mov
pop
jg
dec
aam
sub
aas
jl
inc
adc
lock
pop
sub
adc
xor
push
jne
add
inc
sar
mov
rcl
out
jp
pop
add
rcr
neg
adc
jo
mov
shr
inc
push
dec
retf
lods
pop
and
in
sbb
in
pop
ins
shl
sar
sbb
sahf
mov
pop
clc
mov
enter
cld
mov
add
jae
movs
fnstcw
lea
sti
push
rcl
ins
out
push
not
(bad)
iret
xchg
cmp
repz
loope
sub
lods
add
xchg
fiadd
jns
or
enter
cwde
mov
addr16
div
bound
dec
fdivr
(bad)
push
cwde
push
mov
inc
jg
sbb
xor
in
push
push
jle
frstor
retf
push
fwait
lods
and
lea
movs
ins
mov
push
xchg
call
xlat
rcr
push
sub
xor
push
test
adc
add
jb
adc
mov
mov
push
aaa
dec
xor
test
(bad)
(bad)
push
xchg
adc
rcl
push
sar
sub
inc
std
inc
xchg
(bad)
cmp
mov
test
push
jne
rcr
cmc
icebp
push
aam
out
in
cmc
clc
rcr
ret
repnz
xchg
repnz
cmp
and
jg
idiv
xor
jle
sub
out
sbb
ret
pushf
outs
inc
cli
mov
cmp
hlt
mov
xor
pop
cmp
dec
and
add
add
jg
push
and
cmps
pushw
pop
cmp
jle
cmp
xchg
icebp
dec
test
mov
push
addr16
lods
mov
gs
add
mov
hlt
loop
xor
cmps
imul
inc
cmps
push
sbb
pop
nop
cmp
fist
cmc
xchg
ja
dec
mov
adc
push
ds
jo
sar
jno
daa
xor
adc
outs
outs
(bad)
arpl
(bad)
pop
push
cmp
jne
mov
jg
psrlw
mov
jg
imul
push
mov
mov
or
pop
xchg
jae
pop
adc
adc
dec
adc
push
test
sub
stc
mov
arpl
int3
add
sahf
out
sub
stos
test
sub
lock
jnp
(bad)
aad
inc
add
ins
dec
test
sub
push
sub
rol
dec
clc
pop
sbb
lods
out
push
arpl
(bad)
mov
push
sbb
mov
pop
ins
daa
aaa
jnp
das
in
dec
dec
nop
clc
(bad)
(bad)
les
aam
add
and
xlat
sub
inc
push
cmc
sbb
ins
jbe
es
in
dec
(bad)
xor
test
adc
pushf
pop
or
(bad)
sti
jo
cmc
push
int
dec
retf
in
popa
iret
sbb
out
or
push
mov
shr
loopne
scas
fadd
sbb
mov
adc
xchg
arpl
sub
pop
loop
lods
or
arpl
aas
retf
mov
jae
ror
or
mov
loopne
push
add
dec
call
inc
dec
adc
dec
jge
mov
jmp
mov
pop
add
jbe
inc
test
je
jns
lds
clc
xor
pushf
mov
or
out
outs
fsub
loope
test
or
dec
cwde
cmps
inc
out
imul
xchg
repnz
addr16
xchg
ret
pop
enter
mov
in
xor
out
pop
adc
sub
retf
call
xchg
sub
jne
jge
mov
inc
jle
arpl
test
dec
fidivr
iret
add
pop
rcl
mov
lahf
cmps
jp
dec
or
repnz
inc
xor
xor
seto
outs
gs
sti
cli
dec
inc
mov
xor
adc
int
pop
or
fldcw
pop
icebp
xor
retf
inc
mul
fsub
outs
push
std
cmp
imul
shr
es
mov
addr16
loope
mov
dec
jge
jmp
movaps
sbb
adc
adc
add
(bad)
(bad)
cmps
pop
push
push
into
lock
in
movs
cmp
jo
inc
loope
loopne
fbstp
out
jg
and
fst
cmps
fwait
mov
mov
enter
out
jns
add
dec
rol
sub
and
test
cmp
inc
dec
adc
add
gs
mov
ffree
imul
inc
ja
out
cld
pop
or
push
push
clc
out
jns
dec
icebp
lds
add
mov
push
in
into
push
mov
add
in
(bad)
mov
xor
ss
pop
sub
loopne
(bad)
inc
mov
ja
xor
jge
push
xor
cmp
xchg
push
sub
movs
adc
outs
mov
arpl
bound
scas
lahf
push
aam
and
or
inc
sub
mov
js
scas
push
xor
lds
or
outs
enter
cmp
cs
pop
sbb
pop
repz
or
test
aas
fbstp
pop
jnp
sbb
or
loope
xchg
stc
sub
inc
or
clc
sahf
xor
pusha
or
loope
iret
or
(bad)
loopne
or
mov
sub
mov
push
and
mov
dec
sub
loop
adc
rcr
jmp
into
xchg
dec
mul
adc
inc
and
(bad)
jmp
aas
or
cmp
xlat
cmp
dec
or
stc
pop
sbb
pop
test
xchg
cmps
sbb
adc
dec
cli
xchg
xor
fstp
jb
lods
jmp
rcr
pop
adc
icebp
retf
pusha
cmp
jmp
or
rep
(bad)
imul
loop
cmc
cmp
mov
cmp
stc
sub
push
mov
(bad)
movs
call
push
mov
sbb
pop
fcomp
test
in
cli
fidivr
jg
stc
push
mov
sbb
inc
mov
dec
retf
adc
test
cmps
sar
pop
pushf
adc
or
or
retf
lock
and
inc
mov
sbb
in
sub
pop
retf
sahf
inc
adc
xor
(bad)
(bad)
and
sbb
xchg
aaa
sub
sar
inc
xlat
(bad)
sbb
jl
inc
xchg
cmps
mov
xchg
lock
dec
or
pushaw
xchg
sbb
js
mov
mov
jge
mov
mov
mov
iret
fsub
push
call
xor
sub
fcomip
sub
(bad)
dec
mov
in
mov
xor
fcom
cmp
cmps
js
mov
mov
push
scas
push
jmp
mov
pop
ror
dec
xor
jmp
pop
stos
mov
and
dec
inc
inc
inc
xor
adc
cmp
mov
loop
leave
pop
out
scas
in
xchg
mov
xor
fs
push
enter
sbb
xor
jbe
or
shl
and
push
retf
mov
sub
inc
jp
movs
or
push
xor
cdq
cdq
and
push
inc
mov
cmp
lods
cmp
and
xchg
in
mov
les
jge
sub
pusha
icebp
iret
(bad)
imul
call
leave
rcr
sub
mov
test
xchg
xchg
out
or
stos
stc
es
imul
push
dec
loopne
add
leave
or
loop
lds
scas
mov
stos
(bad)
mov
fmul
push
jecxz
or
stc
fs
sahf
mov
adc
mov
or
in
mov
sbb
push
mov
mov
rcr
cwde
ds
out
je
out
xor
mov
repz
sub
or
fs
cmc
lds
rol
stos
stc
push
sbb
push
xor
and
xchg
in
(bad)
ror
stc
sbb
leave
mov
and
jo
iret
sbb
dec
repnz
mov
adc
cld
push
mov
push
imul
adc
push
addr16
mov
cmc
adc
movs
jae
mov
cmp
push
cld
pop
inc
mov
ins
ss
add
mov
mov
push
mov
(bad)
out
jle
inc
test
sbb
ret
in
retf
dec
xchg
pop
jae
pop
(bad)
push
and
inc
aas
scas
(bad)
in
xchg
ret
inc
mov
sub
lahf
iret
cwde
add
jge
pushf
and
lods
xchg
jle
push
fcmovne
in
mov
movs
jns
and
mov
stos
retf
mov
shl
sbb
push
leave
(bad)
fnstenv
dec
sbb
sbb
add
aam
pop
fiadd
sub
pop
push
inc
pusha
adc
or
sbb
retf
push
fimul
inc
xlat
push
out
add
jecxz
ja
sbb
sar
es
xor
push
dec
adc
fdivp
divps
jg
sbb
mov
(bad)
sbb
dec
loopne
and
ret
jno
test
push
or
fcom
lahf
(bad)
loop
sbb
pop
or
das
jb
hlt
jp
mov
pcmpgtw
les
(bad)
dec
sub
jmp
in
cwde
cmp
cld
xor
adc
inc
(bad)
iret
getsec
mov
dec
xor
idiv
cmc
mov
or
ffreep
xchg
sub
retf
jmp
adc
jp
jg
in
movs
imul
fmul
sub
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
pop
add
in
add
add
add
(bad)
pop
add
add
add
add
pop
inc
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
and
