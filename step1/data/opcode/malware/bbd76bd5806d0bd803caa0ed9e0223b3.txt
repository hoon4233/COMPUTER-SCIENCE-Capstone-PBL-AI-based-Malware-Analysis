mov
mov
or
mov
xor
ret
nop
nop
nop
nop
nop
nop
nop
dec
or
jnp
ret
mov
push
push
mov
call
pop
mov
pop
pop
pop
ret
push
mov
push
mov
push
push
mov
cmp
mov
jae
call
mov
mov
sub
cmp
jae
mov
mov
cmp
jne
push
add
push
mov
call
push
push
mov
call
pop
mov
pop
pop
pop
ret
cmp
jbe
call
mov
mov
cmp
jae
mov
push
push
mov
call
mov
test
jbe
cmp
jb
mov
jmp
test
jne
cmp
mov
jb
mov
pop
mov
mov
pop
pop
pop
ret
lea
pop
mov
mov
pop
pop
pop
ret
add
cmp
lea
jb
mov
jmp
mov
mov
push
add
push
mov
push
push
call
add
cmp
mov
jb
mov
mov
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
cmp
push
lea
jb
mov
jmp
mov
mov
cmp
jb
cmp
jb
mov
jmp
mov
mov
add
cmp
jbe
cmp
jb
mov
mov
push
sub
push
push
mov
call
pop
pop
pop
pop
ret
mov
cmp
jbe
call
mov
mov
cmp
jae
mov
push
push
mov
call
mov
test
jbe
mov
cmp
jb
mov
jmp
test
jne
cmp
mov
jb
mov
pop
mov
pop
mov
pop
pop
ret
mov
push
push
push
push
call
add
cmp
mov
jb
mov
mov
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
lea
push
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
push
mov
xor
cmp
je
xor
cmp
mov
jbe
push
lea
mov
mov
test
mov
je
mov
lea
mov
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
test
mov
jne
mov
add
cmp
mov
jb
xor
pop
mov
push
call
mov
add
mov
mov
mov
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
xor
cmp
je
cmp
jbe
push
lea
mov
mov
test
mov
je
lea
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
test
mov
jne
add
cmp
jb
xor
pop
mov
push
call
mov
add
mov
mov
mov
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
lea
call
mov
mov
push
lea
push
push
call
mov
mov
add
push
push
call
mov
mov
add
lea
or
lock
dec
test
pop
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
push
mov
jne
xor
push
push
call
mov
pop
pop
ret
mov
push
lea
mov
add
test
jne
sub
pop
sar
push
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
call
test
jne
pop
pop
pop
ret
push
push
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
xor
test
je
test
jne
push
movzx
push
call
test
je
push
push
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
push
mov
xor
cmp
je
xor
cmp
mov
jbe
push
lea
mov
mov
test
mov
je
mov
lea
mov
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
test
mov
jne
mov
add
cmp
mov
jb
xor
pop
mov
push
call
mov
add
mov
mov
mov
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
mov
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
call
xor
mov
lea
mov
push
mov
mov
push
mov
mov
push
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
push
mov
call
mov
mov
mov
mov
mov
pop
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
push
mov
mov
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
mov
mov
call
test
je
push
call
add
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
lea
mov
push
lea
call
add
push
lea
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
xor
push
mov
push
lea
push
mov
mov
call
mov
lea
mov
mov
call
mov
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
mov
call
mov
lea
mov
call
mov
mov
lea
mov
mov
call
xor
mov
lea
mov
mov
call
or
mov
mov
mov
lea
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
call
mov
mov
xor
cmp
mov
je
mov
cmp
jne
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
call
mov
mov
cmp
mov
je
mov
cmp
jne
mov
mov
mov
mov
mov
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
mov
push
mov
call
mov
lea
mov
call
mov
lea
mov
call
mov
lea
mov
call
mov
call
mov
call
mov
push
call
mov
movzx
push
push
lea
call
mov
mov
mov
mov
mov
pop
mov
pop
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
mov
lea
call
mov
mov
lea
mov
mov
call
mov
mov
lea
mov
mov
call
mov
lea
call
mov
mov
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
push
mov
call
mov
mov
call
mov
call
mov
push
call
mov
movzx
push
push
lea
call
mov
lea
mov
mov
call
mov
lea
mov
call
mov
lea
push
mov
call
mov
push
mov
call
mov
mov
add
or
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
pop
mov
pop
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
mov
mov
lea
mov
mov
call
mov
mov
lea
mov
mov
call
mov
lea
call
mov
mov
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
lea
mov
call
mov
push
call
mov
call
test
je
push
lea
push
push
call
mov
call
mov
mov
push
push
mov
call
mov
call
mov
sub
push
call
lea
add
mov
mov
lea
push
lea
call
mov
lea
lea
or
lock
dec
pop
test
jmp
push
call
mov
call
test
je
lea
push
push
call
mov
call
mov
mov
push
push
mov
call
mov
call
push
lea
call
mov
lea
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
cmp
je
lea
call
test
je
lea
call
test
jne
lea
call
test
je
lea
call
test
jne
lea
call
test
jne
lea
push
lea
call
mov
ss
shr
jo
fs
mul
sub
ss
in
int
sahf
(bad)
(bad)
push
cmps
xor
jp
das
xor
push
std
pusha
ins
inc
fwait
or
push
mov
push
scas
std
push
xchg
add
push
jae
out
xchg
jae
push
mov
aaa
or
xchg
and
xchg
ss
ins
aad
mov
or
dec
cmps
dec
call
retf
ja
test
add
into
mov
inc
mov
mov
xchg
test
xor
sbb
pop
iret
jnp
or
xchg
div
mov
scas
add
sub
sub
js
add
inc
mov
enter
fsubr
test
cmps
test
enter
stc
pop
aad
test
nop
ss
cmp
(bad)
js
pop
scas
int3
push
aad
lds
sahf
sbb
or
add
mov
test
idiv
jb
jb
call
out
pop
dec
call
cmp
ret
cmp
and
adc
xlat
fcomp
les
in
xor
push
movs
jo
inc
lods
dec
push
(bad)
dec
mov
sbb
jg
cmp
es
pop
or
xlat
xchg
in
mov
js
call
out
mov
jl
cs
jmp
push
mov
push
rcr
mov
mov
shr
popf
mov
ret
push
adc
jg
imul
inc
pusha
mov
mov
ss
call
xchg
mov
(bad)
int3
pop
arpl
arpl
mov
std
test
xchg
aad
xchg
aam
mov
fwait
jmp
sub
out
sbb
mov
sub
test
xchg
sar
or
xor
pop
and
dec
in
(bad)
dec
gs
stc
fisttp
jmp
jge
or
ret
or
scas
push
xchg
jae
jl
add
cmps
not
jecxz
(bad)
xchg
fwait
sbb
pop
and
inc
cmp
inc
icebp
leave
mov
mov
jle
fmulp
test
dec
xchg
or
popf
sbb
inc
sub
adc
xchg
lds
mov
sahf
pop
sbb
push
adc
cmp
mov
sbb
adc
shl
(bad)
imul
jns
not
enter
push
mov
dec
mov
jl
pop
jge
jne
int
addr16
xlat
scas
mov
jle
jb
sar
pop
mov
jmp
loopne
add
push
or
push
test
retf
or
std
jmp
loope
fmul
pop
adc
push
xchg
add
lock
popf
xchg
inc
repnz
lea
pop
pop
mov
imul
xor
das
push
or
xlat
popf
into
test
mov
imul
sbb
xchg
adc
in
jmp
mov
scas
rol
sbb
lods
cmp
(bad)
fild
cmp
repnz
in
dec
push
loope
or
jge
add
test
ror
scas
(bad)
push
outs
lods
jbe
inc
push
mov
jle
cmps
aad
fidivr
jecxz
outs
adc
mov
xchg
inc
out
data16
xchg
sub
ficomp
sar
test
pop
out
xor
mov
lods
test
add
xchg
pop
cmp
ins
lods
(bad)
xchg
push
cmp
pop
in
jb
sbb
outs
in
mov
gs
movs
add
idiv
jge
xchg
cmp
cmp
dec
daa
imul
pushf
add
lds
mov
mov
sub
jle
pop
inc
inc
sbb
push
sbb
fnsave
jge
xchg
inc
mov
adc
sbb
stos
and
outs
fld
out
mov
cs
sbb
test
sar
out
aaa
scas
aam
daa
push
jae
icebp
jno
imul
lods
cmp
in
mov
push
aad
adc
fs
test
sahf
call
sti
adc
clc
mov
daa
adc
jne
cmp
xor
cwde
mov
outs
sub
mov
mov
cmp
(bad)
or
in
jno
cmp
imul
jle
int
cmp
test
icebp
test
test
clc
pusha
test
or
(bad)
jae
push
clc
mov
pop
or
adc
or
(bad)
sub
jle
cs
gs
sbb
or
mov
int3
xchg
aas
cs
cmps
inc
xor
sub
sub
imul
or
data16
and
sbb
ins
pop
pop
cmps
pop
pop
sbb
sti
mov
pushf
pusha
and
lahf
stos
rcl
in
adc
(bad)
cmp
(bad)
xlat
je
fwait
pop
adc
iret
daa
xor
xchg
mov
mov
and
iret
xchg
iret
cmps
push
mov
imul
pop
fbld
popf
lods
in
xchg
sti
pop
loop
mov
(bad)
pop
imul
mov
cdq
imul
fucomip
stos
loopne
jecxz
pop
xchg
xchg
jae
cli
je
mov
jge
in
dec
dec
cwde
xor
cld
xchg
es
xor
clc
fidiv
sub
and
divps
das
mov
pop
or
push
xchg
mov
sub
lea
sbb
or
xchg
inc
gs
pop
movs
test
sbb
fld
addr16
dec
in
mov
aam
adc
(bad)
ja
out
mov
mov
mov
popa
sar
and
es
ret
test
(bad)
mov
cmp
aam
aas
adc
(bad)
mov
dec
inc
dec
data16
(bad)
mov
dec
pop
into
dec
loop
clc
adc
mov
push
movs
(bad)
jmp
lahf
cmps
cmc
push
adc
sub
push
je
or
jle
into
mov
xchg
xchg
push
fst
aad
and
outs
jne
sub
call
into
rol
mov
lods
add
(bad)
je
adc
in
shl
lea
hlt
clc
jl
pop
mov
outs
aam
add
mov
sbb
pop
jno
call
mov
push
sub
sbb
or
lods
dec
jl
test
add
lahf
or
jae
mov
xchg
and
in
(bad)
mov
data16
test
cmp
pop
shl
test
fild
repz
ins
imul
test
mov
sahf
sbb
arpl
dec
int
(bad)
fnstsw
dec
add
xchg
sbb
jmp
test
(bad)
mov
pop
mov
pop
cld
mov
push
push
mov
mov
ja
and
lahf
lods
test
jl
hlt
xor
stos
dec
mov
pop
lock
ret
fwait
std
lea
div
cmps
pushf
push
push
mov
mov
jae
(bad)
sub
xchg
leave
pop
mov
or
test
jbe
jle
out
movs
pop
out
repnz
xchg
jge
xchg
pop
jge
jle
jge
stos
jb
or
sub
fistp
dec
iret
aam
and
mov
push
fwait
or
ins
mov
ficom
out
pusha
lods
(bad)
scas
sub
cmps
mov
sbb
push
adc
jae
adc
sub
test
(bad)
cmp
mov
ins
mov
stos
xchg
or
ffree
dec
mov
fld
lds
xlat
cmc
push
pushf
jp
jbe
out
or
rcl
jbe
jp
cmp
sub
mov
xchg
pop
sar
xchg
cld
stos
hlt
mov
or
or
cmp
(bad)
adc
and
test
out
retf
xchg
ds
mov
icebp
nop
fdivp
xor
popa
fcmovnu
push
inc
outs
push
jge
retf
xchg
jg
fisub
sbb
neg
fwait
gs
icebp
ss
popa
push
cmps
jnp
not
cmps
sub
push
fcomp
ja
push
cmc
shr
stos
cwde
scas
jne
pop
add
jae
jbe
(bad)
push
inc
cwde
test
test
sti
jb
aaa
dec
pop
fld
sbb
(bad)
pop
dec
xchg
scas
aam
test
daa
push
jne
aas
stos
in
xor
jmp
test
xchg
icebp
cmp
adc
pop
push
adc
push
jl
cdq
jo
retf
out
icebp
cmp
inc
pop
je
std
xchg
push
int
push
cwde
aas
dec
push
scas
sub
fninit
lea
loop
pop
jge
ds
adc
and
inc
movs
jbe
pop
sub
inc
fldcw
mov
int
inc
jbe
xchg
sub
or
dec
pop
pop
push
xchg
jbe
adc
inc
out
jle
popf
(bad)
or
int
pop
out
and
out
cmc
aam
daa
jl
jo
ins
jle
pushf
add
test
inc
xlat
push
in
outs
mov
push
or
jge
pop
push
out
xchg
dec
xor
cmp
rcl
fiadd
pop
adc
pop
push
lods
sbb
sub
les
mov
and
hlt
scas
sar
repnz
pusha
aas
pop
xor
popf
daa
dec
lahf
cmc
nop
push
jle
mov
retf
cs
clc
mov
mov
pop
popf
hlt
or
outs
push
fist
push
out
mov
in
pop
xlat
ins
cwde
jl
idiv
jge
addr16
in
call
out
lahf
fnstsw
add
rcl
(bad)
mov
push
pusha
dec
push
outs
movs
and
mov
rcl
rol
add
ja
icebp
pop
out
jb
mov
or
pop
xchg
cmps
push
mov
addr16
pushf
out
jl
inc
repnz
inc
sar
push
cld
data16
retf
out
(bad)
jnp
xchg
xor
into
stc
(bad)
pushf
adc
and
sub
mov
push
ins
lahf
sub
adc
imul
mov
cmp
mov
push
pop
sub
das
push
lods
dec
das
add
and
daa
push
test
cli
lahf
imul
mov
(bad)
jmp
mov
ret
sbb
ja
push
sub
xor
xchg
mov
test
aam
xor
or
xchg
jl
or
push
ins
dec
ret
mov
scas
cwde
push
popf
je
out
add
sbb
push
add
mov
aas
outs
int3
hlt
gs
mov
cli
jle
mov
pop
and
push
imul
pop
mov
push
stos
loopne
and
or
add
push
loop
ret
ds
add
iret
test
ret
xor
push
(bad)
sbb
pop
inc
jbe
cmp
into
or
xchg
lahf
sar
sbb
add
das
jmp
out
fld
cmp
sub
cmp
pop
inc
add
or
sahf
test
mov
sahf
xor
jb
outs
or
mov
or
xchg
stos
ss
xchg
xchg
mov
ds
sub
sbb
out
inc
aas
push
div
jl
mov
dec
imul
xor
into
data16
jne
sbb
xchg
lahf
rcr
call
(bad)
mov
jmp
shl
inc
sub
arpl
int
jg
xor
retf
cli
inc
repz
mov
adc
xor
addr16
lahf
addr16
adc
ins
push
cmp
dec
daa
push
pop
mov
dec
(bad)
test
xchg
clc
or
ret
stc
dec
ret
fsubrp
loope
add
das
xor
jp
call
cmp
test
frstor
mov
xchg
in
cmp
(bad)
pop
mov
iret
mov
inc
ins
ss
in
sbb
mov
and
mov
jbe
pop
cmp
cdq
lods
jl
sahf
or
shl
inc
or
push
jle
adc
or
mov
in
es
cmps
or
not
xchg
jno
ds
pop
data16
dec
sbb
xlat
movs
jbe
xor
mov
inc
cmc
adc
push
in
imul
lods
mov
in
xor
les
xchg
jmp
pop
retf
or
pushf
pop
fcom
pop
stos
jmp
fcomp
and
lds
add
out
popf
jp
dec
in
movs
es
sbb
(bad)
(bad)
lods
jecxz
pusha
jp
ret
inc
mov
jg
or
and
(bad)
fld
sub
add
mov
push
outs
jg
pop
loopne
cmps
cwde
mov
sub
xchg
xchg
cdq
cld
cmp
or
cs
xchg
jbe
lods
mov
cmc
setbe
ins
cld
test
repnz
push
cmps
out
push
cmp
pushf
xchg
add
mov
stos
outs
retf
push
aaa
imul
jae
mov
pop
cs
aam
jb
adc
(bad)
in
mov
mov
mov
pop
jo
inc
ins
add
push
aas
and
add
(bad)
xor
push
test
ja
and
add
jbe
addr16
out
jmp
mov
outs
fdivrp
push
les
add
pop
push
inc
hlt
jle
je
scas
ficom
jae
(bad)
cld
ja
jae
cmp
xor
imul
dec
pop
push
ret
adc
loope
xchg
cmps
out
push
adc
psrad
shr
gs
jg
xchg
scas
xchg
lock
fnstsw
ja
cmp
xchg
cmp
push
arpl
movs
rol
aad
xor
test
push
sar
inc
pop
or
mov
xchg
jns
mov
mov
pop
les
sbb
jmp
aam
pop
pop
int3
dec
bound
popa
cmp
test
mov
add
pop
push
cs
in
inc
in
or
ja
cmp
push
dec
stc
push
cmps
std
ss
call
mov
aad
cmps
cmc
(bad)
xchg
mov
push
cmp
add
mov
js
fnstsw
into
cmps
ds
sbb
cmps
loopne
out
xlat
fwait
sti
ret
push
mov
sub
jmp
(bad)
movs
aaa
fadd
mov
js
les
arpl
aaa
stc
fisub
jle
jne
mov
or
retf
jp
add
push
pop
(bad)
fld
test
test
or
xchg
pop
mov
jmp
test
std
das
inc
shl
sub
scas
add
repnz
out
lds
repnz
dec
pop
cmp
mov
div
call
into
add
dec
jge
dec
dec
ins
xchg
mov
mov
xchg
sub
or
lods
mov
(bad)
js
aaa
test
push
loop
(bad)
ja
popf
cwde
or
and
cmp
mov
popa
push
inc
dec
repnz
outs
push
xor
out
sti
inc
push
in
ds
pop
cmp
mov
ins
add
cmps
lea
jne
bound
xchg
(bad)
jge
pusha
xor
fwait
push
ja
shr
xchg
(bad)
daa
mov
jnp
mov
outs
lahf
sub
aas
outs
movs
ds
test
sahf
cmps
sub
mov
dec
fcmovnu
mov
pop
push
icebp
cs
std
sub
adc
jnp
mov
or
in
sub
iret
add
in
jbe
inc
mov
div
add
inc
jns
je
or
in
mov
in
int3
and
mov
pop
mov
sub
out
jp
jo
and
pushf
aam
in
add
and
ins
int3
push
scas
xchg
dec
in
bound
pop
dec
and
repz
jns
out
jnp
icebp
fucomip
sbb
(bad)
ror
sti
ins
sub
add
(bad)
out
je
call
ins
mov
push
(bad)
and
push
ret
pop
mov
std
xchg
push
(bad)
ret
jnp
mov
jl
inc
(bad)
pop
fsub
fcmovb
mov
jle
jle
push
mov
(bad)
or
ss
xor
ins
jnp
ja
push
mov
or
test
and
inc
test
lds
mov
and
sub
mov
xlat
pop
xchg
cmp
cmp
sbb
ja
out
adc
sbb
lea
inc
(bad)
or
dec
ins
add
pop
or
int3
xor
xor
(bad)
cld
push
(bad)
cs
jne
add
inc
cld
data16
jne
mov
loopne
sar
add
mov
jmp
push
int
jle
inc
cmp
push
pop
sub
pop
push
or
imul
sbb
cmp
or
mov
out
fistp
and
xor
jb
pop
sub
ins
jb
mov
fst
in
out
shl
mov
and
sbb
jge
push
cmp
aaa
push
icebp
sbb
dec
and
jmp
cdq
jo
out
dec
aaa
into
ret
imul
push
sub
in
ds
dec
mov
push
repz
lea
aad
xchg
cmps
mov
es
xchg
sbb
push
xor
mov
icebp
sub
cmc
pop
aam
jl
push
fidivr
in
sub
loope
inc
test
test
or
mov
inc
(bad)
push
and
xchg
mov
inc
or
pushf
xchg
pop
jnp
lea
out
pop
(bad)
sub
test
mul
in
(bad)
jecxz
and
mov
rcr
shr
dec
cmc
jne
cdq
pushf
fst
ds
add
xchg
movs
sbb
mov
mov
hlt
daa
inc
pop
dec
cwde
cmp
mov
or
enter
(bad)
into
outs
ret
xor
push
inc
push
in
fs
pop
ja
mov
push
jne
imul
or
xchg
mov
xlat
stos
test
mov
cld
mov
jg
sbb
imul
dec
inc
scas
stos
jbe
xchg
aas
and
mov
lds
or
pop
sub
dec
and
fs
and
out
aam
xor
sti
out
and
lock
cmp
ds
push
cwde
dec
cmps
retf
sahf
sbb
movs
in
imul
sub
inc
outs
arpl
sbb
mov
lock
jecxz
sbb
mov
cwde
push
push
push
jp
test
xor
fucomp
push
popf
add
in
(bad)
mov
dec
ja
sub
or
out
jge
cmps
(bad)
xlat
cmps
std
jbe
xchg
leave
leave
imul
jle
inc
hlt
xlat
jo
imul
(bad)
loopne
sub
jmp
sub
cmp
mov
or
nop
ror
int
add
mov
out
mov
js
mov
adc
ss
push
jge
imul
xchg
xchg
call
lods
xchg
(bad)
fld
and
add
aam
rol
pop
dec
dec
mov
stos
jne
aad
std
fsubr
fsub
fnstenv
mov
jne
push
or
push
adc
mov
scas
std
enter
mov
mov
xor
dec
add
inc
lods
pop
cwde
mov
movs
int3
fisub
and
out
lods
lea
mov
call
cmps
inc
aad
es
sub
add
mul
add
add
pop
clc
call
aas
mov
cmps
pusha
jmp
(bad)
pop
sbb
lds
mov
pop
sub
mov
cwde
cmp
dec
leave
cwde
mov
lock
xchg
or
push
outs
test
cli
and
cs
retf
fistp
js
hlt
mov
ret
lea
mov
push
rcl
js
xor
add
call
mov
test
cmp
ja
inc
out
retf
jge
(bad)
jg
in
lahf
and
cmp
cmp
add
add
xchg
sub
(bad)
xchg
sahf
shr
sub
sbb
aas
push
add
scas
mov
adc
push
repz
xchg
stc
pop
imul
cmp
pop
cmc
lods
test
mov
mov
ror
jle
jge
mov
(bad)
dec
jb
adc
cmp
mov
jle
ss
xor
or
dec
mov
push
test
leave
push
mov
idiv
push
ins
(bad)
test
sbb
scas
mov
mov
mov
mov
mov
into
pop
and
xor
sar
jae
jne
mov
retf
pop
(bad)
fsubr
fstp
add
mov
lahf
fs
rol
add
(bad)
(bad)
in
adc
jecxz
push
cmps
sbb
test
cmp
push
jge
mov
jl
idiv
cs
clc
dec
xchg
push
dec
(bad)
push
retf
popa
push
in
not
je
xchg
pushf
ins
cld
mov
pop
mov
jmp
mov
int3
lods
lods
mov
mov
aaa
sbb
mov
ja
movs
or
call
out
add
ror
pop
(bad)
push
mov
fdiv
mov
inc
push
or
xor
and
push
push
int
lahf
mov
jge
jno
inc
mov
jmp
cmps
(bad)
adc
mov
sub
ins
mov
jae
popa
cmps
out
mov
pop
outs
sbb
jo
(bad)
fsub
dec
xor
mov
loopne
stc
repz
fwait
xor
fmul
and
xlat
pop
pop
(bad)
mov
push
xchg
jge
xchg
mov
jmp
in
iret
aas
repnz
sub
cmps
push
or
call
in
call
in
sub
ins
adc
sbb
loop
lahf
inc
out
inc
or
cmp
inc
pop
add
(bad)
not
mov
sbb
fmul
es
ins
and
pop
rol
inc
fisttp
dec
outs
neg
ja
out
mov
adc
ja
sti
shl
popf
xlat
or
shl
jecxz
push
in
arpl
mov
mov
(bad)
loopne
clc
dec
inc
fsub
out
(bad)
cmp
aam
push
inc
mov
je
loop
inc
xchg
jnp
jae
xlat
mov
add
nop
ins
iret
sub
and
inc
mov
popf
movs
fnsave
mov
rol
pop
push
fldcw
cmp
dec
scas
inc
dec
push
jp
or
lods
mov
xor
ja
adc
loopne
adc
daa
xor
sahf
inc
inc
shr
fsub
xchg
pushf
xchg
and
nop
mov
xor
ja
cwde
mov
ss
mov
stc
cwde
pushf
and
xchg
cmps
mov
jo
mov
add
xchg
(bad)
cmp
mov
jbe
lods
xchg
dec
bound
fcmovbe
push
mov
movs
sbb
dec
cmp
cwde
mov
inc
xchg
iret
test
aas
movs
mov
scas
adc
movnti
lds
push
cmp
pop
xchg
dec
jg
mov
or
retf
jle
push
mov
rcr
stos
das
push
xchg
pushf
test
repz
ins
test
(bad)
out
out
fld
xor
cwde
imul
ins
aad
fwait
mul
int3
sahf
fnstenv
jecxz
pop
xchg
mov
dec
out
jge
(bad)
hlt
pop
push
add
pop
push
push
(bad)
jge
jb
ins
mov
mov
or
push
aas
pop
adc
or
pop
cmc
movs
sub
inc
cmp
and
std
sub
xor
cmp
pop
cmp
leave
call
jno
mov
pop
mov
movs
add
fild
lea
(bad)
mov
loop
sbb
dec
xchg
call
push
jg
pop
fst
pop
ja
jns
out
inc
pop
pop
iret
ds
lea
mov
retf
in
push
push
dec
hlt
mov
push
data16
add
fcom
xor
and
xchg
fadd
dec
mov
inc
in
xor
test
pop
mov
dec
jle
or
push
int
cwde
pop
jnp
jmp
div
aad
pop
or
xchg
cmc
shl
aad
jmp
div
repz
loop
dec
inc
popa
adc
xchg
fwait
les
call
dec
pop
jmp
fist
adc
dec
push
cmp
push
sbb
add
mov
jge
adc
(bad)
xchg
retf
aaa
or
sar
add
mov
mov
rcr
iret
js
imul
and
inc
jmp
daa
js
out
pop
sbb
popf
fstp
push
clc
mov
and
cmp
sub
jne
xchg
push
mov
ldmxcsr
(bad)
cmc
xlat
fdivr
xor
inc
adc
mov
xchg
(bad)
idiv
xchg
pop
mov
data16
sbb
adc
sbb
and
dec
inc
scas
adc
and
loope
dec
xor
push
cmp
in
clc
std
loop
es
push
add
pop
dec
cmps
jnp
(bad)
retf
int3
push
sbb
xchg
inc
sar
jno
inc
repz
addr16
push
dec
add
add
xor
jbe
enterw
out
xor
ins
nop
fidiv
dec
push
outs
push
pop
out
or
xchg
outs
jns
xchg
mov
adc
adc
jmp
adc
popa
mul
(bad)
cmp
sbb
int3
data16
popf
std
ins
push
sub
iret
in
(bad)
mov
outs
lods
not
push
jp
lods
(bad)
in
sar
mov
es
dec
push
xor
xchg
cmps
lea
xchg
call
scas
and
(bad)
retf
test
jle
ret
mov
cmps
call
pop
fnstenv
cdq
jge
sub
dec
add
(bad)
sbb
jle
lock
imul
add
dec
xchg
mov
out
cmp
gs
inc
sub
ret
hlt
popf
and
movs
pop
mov
add
std
enter
add
scas
jo
nop
lods
push
add
or
(bad)
lea
retf
daa
sbb
jg
add
bound
addr16
inc
jl
outs
mov
push
out
fistp
rcl
enter
xchg
ins
add
push
push
jle
imul
in
sub
xchg
jne
jmp
daa
mov
xor
pop
shr
sbb
lea
in
mov
push
lods
movd
sti
xchg
and
jb
pop
dec
mov
cmps
and
cmps
scas
in
mov
or
push
addr16
scas
pop
(bad)
push
inc
push
add
mov
inc
pop
inc
sahf
fbstp
pop
and
jne
loopne
mov
dec
jle
xor
push
lods
loop
out
fimul
leave
sbb
mov
mov
push
dec
pop
lahf
adc
xchg
sub
test
cmps
jbe
out
mov
out
aas
movs
cmp
jo
inc
in
add
pop
pop
out
std
(bad)
jp
ins
scas
xchg
ret
jnp
test
inc
out
out
xor
jle
in
and
(bad)
out
iret
jecxz
pop
jne
mov
mov
lods
rol
jno
(bad)
push
in
jg
cmp
loop
cmps
imul
test
rcr
xchg
xchg
cmp
or
jl
sub
pop
xchg
or
jns
sub
push
cwde
mov
dec
xor
sbb
mov
cmc
and
push
mov
cmp
xchg
movs
pusha
xchg
loopne
iret
jg
mov
inc
pop
rdmsr
(bad)
ins
ss
repnz
mov
push
mov
xor
or
xchg
cmc
cmps
mov
push
sub
popa
outs
push
jbe
lea
enter
xchg
add
and
(bad)
(bad)
shr
stc
xchg
inc
repnz
mov
push
mov
popf
frndint
idiv
pop
jp
inc
xor
jg
mov
adc
lds
mov
sbb
addr16
push
scas
fwait
rcr
add
jmp
inc
out
in
or
cmp
popa
sahf
ins
popa
xlat
mov
and
cmps
shr
pop
repz
jbe
das
not
in
aam
sbb
lea
neg
push
js
add
cmp
inc
add
jmp
push
sbb
ja
inc
daa
aas
or
inc
lds
jo
repnz
fwait
ret
shr
cmc
data16
int3
adc
ins
pop
mov
or
popa
cmps
dec
inc
add
int
cmp
jbe
push
or
mov
aaa
(bad)
cld
frstor
stos
adc
mov
ret
cmps
cmp
jge
jge
push
mov
cmp
out
fmul
jo
xor
ror
inc
(bad)
data16
inc
mov
lahf
xor
clc
fistp
in
in
pop
xor
push
push
adc
jp
push
fdivr
adc
xchg
mov
inc
test
imul
jb
aas
retf
jg
test
ja
dec
shr
popf
(bad)
xor
jge
(bad)
fcmovnbe
lods
mov
push
dec
inc
pop
dec
sbb
add
clc
(bad)
cwde
lods
inc
in
xchg
and
call
pop
(bad)
sub
fidiv
and
out
pop
cmp
adc
test
sbb
call
or
cmp
rcl
ins
pop
cs
jge
aas
sub
cs
pop
push
movs
push
inc
ja
fisttp
fst
mov
pushf
jo
psubusw
mov
pusha
hlt
popf
mov
mov
(bad)
fsubrp
daa
sbb
gs
test
inc
mov
cmp
mov
dec
int
sub
lds
in
jmp
fld
(bad)
push
xor
push
sbb
sub
aaa
hlt
sub
stc
les
ins
pop
(bad)
fcom
aas
mov
mov
push
add
fld
stos
ss
mov
outs
repnz
int
(bad)
pushf
into
xor
fcomp
(bad)
xor
(bad)
add
jne
mov
gs
ficom
push
cmp
dec
dec
lods
xlat
or
or
pop
nop
and
inc
add
xor
stc
cmp
aaa
xor
dec
das
dec
mov
rcl
dec
pusha
add
and
push
sub
xor
ds
pop
sub
in
in
mov
lods
neg
sbb
pop
call
xor
test
call
mov
dec
test
lea
(bad)
lods
fstp
outs
lock
sbb
mov
jmp
xor
dec
aam
mov
popf
out
jbe
imul
mov
jne
mov
xchg
cdq
enter
mov
(bad)
std
mov
movs
push
cmp
fwait
or
or
mov
enter
xchg
push
pop
shl
inc
aas
aas
test
imul
jl
add
dec
xchg
jo
bound
cdq
inc
sub
(bad)
push
aaa
movs
push
jl
sub
adc
popa
sbb
jbe
xchg
mov
or
sbb
loope
outs
xchg
add
add
stc
and
jbe
and
neg
mov
mov
and
daa
adc
push
xchg
cmp
mov
neg
and
pop
out
loope
pop
pop
dec
cmps
jmp
mov
fldln2
or
and
mov
fdivr
pop
jl
inc
and
add
out
xchg
clc
push
fs
shl
loop
cdq
jg
sub
aam
ret
dec
sbb
ins
add
push
lods
jbe
pop
jbe
mov
mov
and
(bad)
iret
jae
sar
jmp
pusha
fdivr
pop
or
cmp
rol
fs
in
dec
push
xor
push
adc
push
xor
ffree
jb
icebp
pop
or
or
bnd
xchg
xchg
push
mov
cmp
jecxz
sbb
add
sbb
inc
or
dec
mov
mov
out
es
lds
or
add
cli
pop
daa
icebp
je
fstp
ficom
stos
xchg
mov
mov
(bad)
(bad)
dec
in
test
out
push
cmp
inc
jge
jno
push
into
fisttp
nop
test
(bad)
aam
xor
(bad)
pop
cs
push
adc
fcmove
mov
int3
jbe
mov
lahf
xchg
pop
stos
in
sub
out
jne
pop
popa
pop
popa
cs
outs
or
xchg
loopne
mov
mov
add
add
stos
pop
sbb
inc
pushf
push
in
jmp
clc
leave
(bad)
sub
mov
or
push
pop
data16
(bad)
movs
aad
pop
fmul
xchg
mov
mov
xor
cmp
adc
push
in
ins
or
in
pop
mov
or
lods
test
jge
das
lahf
fcomp
retf
mov
and
xor
js
pop
and
stos
pop
in
stc
xlat
and
data16
xchg
ret
imul
test
sub
pop
daa
lds
and
in
sub
rcr
inc
cmp
sbb
push
pop
int3
push
inc
lods
in
scas
es
pop
in
(bad)
and
mov
cmp
pop
cwde
adc
xchg
scas
xchg
dec
in
repnz
sub
lahf
cmps
data16
(bad)
ror
cli
or
dec
ins
push
popf
mov
fs
push
data16
js
jmp
cmc
and
mov
add
xchg
pop
imul
jne
add
or
pop
cwde
pop
in
std
push
pop
mov
sub
cs
inc
jg
test
and
or
fdivr
test
idiv
out
pop
or
add
jno
popa
(bad)
test
mov
add
mov
cmps
mov
mov
and
pop
mov
(bad)
sub
mov
sbb
sbb
adc
xor
gs
xor
push
sbb
dec
jns
jg
sub
cmp
xor
jmp
shl
add
jecxz
bound
xchg
outs
jne
push
ror
add
xor
xchg
xchg
(bad)
cli
out
fisttp
sub
fldenv
dec
mov
lahf
shr
xor
fwait
jns
not
inc
rcl
mov
xor
sbb
jl
pushf
lods
sti
jb
inc
mov
pop
mov
dec
in
xchg
mov
pop
inc
push
cmc
or
jb
clc
mov
outs
xchg
inc
(bad)
jl
mov
aas
add
jno
add
les
add
ins
fldenv
gs
mov
jbe
(bad)
fwait
bnd
mov
xor
loope
(bad)
icebp
rcr
neg
mov
cmc
call
ss
mov
sub
jg
mov
lahf
mov
in
pop
cmp
mov
or
hlt
aas
imul
mov
leave
call
inc
sub
pop
mov
sbb
aam
jle
sbb
jo
mov
sbb
rcr
arpl
jns
push
mov
xor
pop
push
push
retf
mov
inc
popf
or
imul
pop
adc
and
inc
sbb
mov
inc
std
cmp
mov
push
test
add
push
add
cwde
xor
inc
xor
inc
rcl
xlat
lea
ins
cmps
adc
mov
add
inc
ja
(bad)
xor
sub
cmc
cwde
cmc
inc
in
popf
sbb
xchg
out
dec
jne
mov
leave
ins
jbe
push
push
daa
ss
jle
pop
arpl
mov
aam
cs
(bad)
fiadd
lods
cmp
jge
xchg
sbb
add
sahf
sub
or
cmc
mov
cmps
and
lods
test
mov
repnz
dec
add
and
call
(bad)
pushf
out
pop
adc
mov
div
jno
jle
mov
and
adc
in
and
inc
iret
repz
enter
lods
aad
ret
arpl
ins
(bad)
mov
mov
out
in
lods
sub
(bad)
pop
xor
push
push
aas
cmp
sbb
call
sahf
mov
std
pushf
faddp
jmp
int3
xor
inc
stos
jnp
daa
pop
idiv
repz
(bad)
xor
mov
xchg
lods
mov
aaa
leave
dec
outs
dec
(bad)
fisub
add
xchg
and
pop
inc
and
repnz
lock
push
imul
add
(bad)
cmp
lds
test
ss
(bad)
fstp
lods
xchg
jge
cli
test
xor
add
cld
jmp
pop
daa
pushf
or
mov
push
(bad)
sar
and
xor
add
test
in
ins
popa
push
arpl
inc
data16
(bad)
push
enter
cmovbe
std
ret
cdq
inc
dec
sbb
and
adc
int3
cld
sub
repz
int3
aam
in
pop
cmp
bound
push
push
cmp
call
nop
sbb
push
data16
push
rcl
xchg
das
mov
xchg
pop
movs
enter
clc
movs
ins
daa
cmp
add
fld
cmps
adc
fstp
sbb
push
loope
(bad)
cli
cmp
sub
and
dec
dec
ins
push
pop
xchg
loopne
(bad)
sub
mov
pushf
fdiv
retf
or
pop
xor
and
xchg
inc
ret
jmp
sub
and
push
adc
ret
pop
mov
addr16
cwde
jmp
mov
inc
out
int3
mov
stos
xchg
addr16
lods
add
push
fmulp
push
out
fwait
les
iret
sub
sbb
iret
xor
mov
inc
add
mov
mov
cmp
outs
and
fdivr
pop
fmul
std
movs
ror
jg
mov
mov
nop
(bad)
adc
mov
jp
and
jle
popf
repnz
out
jle
cmp
call
xchg
(bad)
mov
jmp
jge
inc
add
je
push
inc
sub
push
int3
(bad)
test
cmp
and
lahf
cmp
retf
fdivr
sbb
retf
rcl
inc
mov
retf
sbb
in
or
dec
push
xor
imul
outs
xchg
and
add
ja
mov
mov
not
pop
sub
jns
add
ss
inc
push
test
mov
or
fdiv
ss
or
ror
jns
pop
push
jl
sbb
pop
xor
dec
in
(bad)
out
(bad)
sbb
inc
xchg
test
(bad)
ret
shl
mov
dec
push
test
retf
dec
sbb
add
cmps
sbb
jge
fcom
push
xor
test
mov
sub
mov
ss
std
call
(bad)
movs
jb
mov
fsub
jg
xor
aaa
jp
push
cmps
sti
adc
iret
test
sub
jge
inc
popa
xor
xor
sbb
retf
jle
push
int
aad
call
loopne
hlt
xchg
sub
jbe
push
pop
sub
ins
sbb
arpl
xchg
lods
add
jne
or
push
repz
inc
ins
popf
dec
push
jno
jge
fwait
pop
das
stos
sbb
ins
sub
mov
ds
jg
sub
mov
push
adc
dec
mov
mov
mov
xchg
inc
jle
(bad)
inc
call
lahf
inc
test
inc
dec
dec
ins
(bad)
cmp
repz
movs
test
idiv
cmp
or
lea
jecxz
scas
inc
neg
fldenv
popf
push
mov
inc
(bad)
or
(bad)
(bad)
rol
fnsave
outs
inc
leave
mov
cmp
mov
xchg
cmp
dec
fldcw
push
add
xor
popf
fwait
pop
arpl
lods
jb
pop
mov
mov
sub
pop
jg
fmul
fwait
push
fnstcw
dec
scas
int3
sti
fld
cmp
shr
fwait
adc
es
cmp
call
push
nop
ins
cmp
mov
dec
or
sbb
or
xor
xchg
rcr
xchg
mov
mov
jp
inc
out
xchg
add
dec
or
(bad)
mov
jg
xchg
jae
mov
lock
out
outs
out
dec
fs
adc
dec
cld
imul
ins
mov
(bad)
xchg
inc
xor
into
pop
adc
cld
addr16
sub
fbld
loopne
out
addr16
ins
xchg
xchg
push
jecxz
sbb
and
ret
pusha
jle
daa
pop
js
mov
fadd
sbb
mov
loope
vmwrite
pop
popa
push
jmp
aas
mov
fcmovu
mov
fwait
enter
push
jne
push
dec
aam
push
or
jne
xor
pop
push
jp
xor
leave
out
aam
and
scas
data16
dec
in
ds
sub
lods
push
movs
adc
inc
lods
sbb
in
jmp
test
or
cmps
dec
jno
pop
ins
mov
inc
scas
xor
and
iret
push
mov
sbb
xor
ins
in
sbb
ret
scas
jge
mov
mov
sar
or
or
cmp
dec
call
and
(bad)
sbb
lods
add
shl
inc
jle
dec
xor
add
pop
cmp
dec
adc
xchg
sbb
cmp
(bad)
jne
mov
ds
inc
cmp
popf
xchg
in
jbe
mov
sub
sub
push
arpl
mov
xor
retf
xlat
jmp
es
add
adc
cwde
mov
inc
std
or
lods
inc
sub
fimul
sub
push
mov
movs
popf
test
es
sub
call
addr16
sbb
inc
push
lods
icebp
xchg
jl
loopne
mov
callw
mov
fst
add
test
test
cs
fst
ror
xchg
push
sub
push
fmul
lods
retf
ins
adc
dec
lds
inc
sub
push
cmps
xchg
mov
in
lahf
xchg
int
scas
mov
pop
xor
addr16
data16
mov
(bad)
xor
fs
cwde
adc
sbb
pop
or
je
sub
iret
fwait
mov
mov
arpl
push
and
lods
cmp
jle
push
pop
fistp
mov
sub
lods
(bad)
mov
xchg
ins
ja
hlt
test
daa
dec
out
ins
push
cmp
or
mov
movs
push
inc
fucom
mov
or
add
adc
adc
lods
(bad)
imul
cwde
dec
ret
xor
jno
pop
xor
call
inc
call
loope
push
out
ins
(bad)
fdivr
dec
xlat
pushf
push
and
mov
(bad)
ficomp
out
jno
popa
popf
xchg
stc
ja
pop
cs
xlat
pop
dec
outs
dec
aad
jb
sub
sub
dec
test
jecxz
movs
test
mov
xchg
loopne
loop
and
daa
pop
cmp
or
shr
call
mov
shr
jne
int
xchg
xchg
adc
ret
(bad)
dec
pop
jg
bound
repnz
paddsw
out
(bad)
fld
inc
ss
in
arpl
jae
xor
ret
test
(bad)
dec
into
iret
sbb
fwait
push
mov
inc
into
test
xchg
push
inc
sbb
fsub
push
and
lea
out
cmps
in
jno
adc
pop
mov
push
into
aaa
int3
cs
cld
and
out
push
out
in
repz
cmps
or
xchg
xlat
add
push
loope
fiadd
cmp
daa
adc
adc
rol
clc
stc
daa
cdq
(bad)
std
call
clc
mov
rcl
xchg
push
mul
jg
sub
(bad)
and
jnp
adc
lock
or
jmp
call
out
cmps
mov
mov
sbb
sbb
push
and
mov
xor
mov
or
push
stc
cmp
movs
loope
jecxz
es
pop
jle
data16
mov
mov
ss
out
pop
mov
xchg
mov
data16
push
fdivr
jno
shr
mov
mov
cmp
xor
push
popa
loopne
sub
addr16
xchg
mov
shl
xchg
(bad)
rol
pop
sysenter
ins
fldcw
adc
mov
jmp
les
inc
add
in
scas
jp
arpl
imul
mov
(bad)
int
jg
in
leave
cmc
cmc
cmp
cmc
cli
mov
ja
jl
imul
or
dec
(bad)
push
mov
lahf
fbld
and
in
pop
adc
pop
inc
ds
and
movs
mov
xchg
test
loopne
shl
lods
jbe
push
jecxz
adc
push
inc
out
mov
jge
pop
ds
dec
jae
sub
jo
pop
popf
(bad)
cld
bound
std
sub
popa
dec
dec
sti
inc
mov
jecxz
aas
(bad)
enter
jbe
mov
dec
nop
adc
in
inc
dec
add
mov
and
int
inc
fdivr
mov
cmp
inc
push
xchg
(bad)
into
test
xchg
pop
inc
outs
rcr
dec
data16
stc
int
and
lahf
add
sahf
cmp
push
lea
mov
cwde
sub
and
sub
sbb
int3
int3
int
dec
inc
and
inc
sbb
(bad)
xlat
mov
ds
fadd
mov
lock
test
cs
inc
mov
mov
mov
std
push
ins
inc
push
ror
add
pop
pop
and
mov
test
(bad)
(bad)
adc
mov
icebp
cmp
or
push
std
mov
lods
or
inc
std
adc
push
loopne
shl
movsx
dec
(bad)
shl
cmp
cmc
pop
xlat
(bad)
lods
or
mov
cmp
xor
lods
jle
adc
push
ret
iret
pop
call
ds
aam
cdq
inc
mov
aam
xchg
iret
jmp
add
mov
cmps
lods
cwde
sub
lods
mov
jns
cmp
jae
mov
mov
push
loopne
ror
dec
repz
jne
inc
pop
adc
pop
jge
fldenv
ds
sub
jp
in
push
mov
clc
xchg
int3
jbe
cmp
popa
cmps
in
in
fcmovne
xor
sar
xchg
icebp
mov
sub
repnz
adc
daa
or
jge
popf
and
add
jne
xlat
in
mov
stos
pop
sub
fistp
inc
jge
push
jne
sub
sbb
mov
pop
lahf
out
xor
or
inc
ss
xchg
std
fs
or
adc
xor
mov
(bad)
nop
cmps
inc
sub
bound
adc
gs
or
dec
popa
mov
out
jle
fwait
xor
inc
mov
jns
leave
mov
pextrw
ja
inc
je
push
jne
push
push
mov
mov
(bad)
mov
xchg
adc
dec
data16
mov
out
jg
pop
fnstsw
fwait
sbb
fadd
mov
and
push
push
movs
adc
lods
data16
jb
ins
iret
or
or
fucomp
adc
xor
push
retf
sbb
inc
pop
movs
lods
addr16
cmp
xor
pop
and
ss
ret
sbb
cmp
in
push
lods
xlat
mov
cmps
push
pop
push
cs
ficom
cmps
mov
arpl
or
mov
xchg
sbb
lahf
jge
mov
jb
and
mov
inc
sahf
popa
(bad)
xor
cmps
sub
test
jmp
dec
test
fldenv
leave
jmp
pop
ret
shl
daa
lods
test
and
pop
xchg
retf
push
int
(bad)
pop
mov
xchg
ss
neg
(bad)
sbb
nop
pop
js
(bad)
mov
cmps
lods
pop
movs
mov
fstp
(bad)
out
pusha
adc
int
inc
rcl
mov
jb
in
sbb
fisubr
call
mov
outs
push
cmps
mov
push
xor
mov
and
jmp
aad
push
jb
(bad)
sbb
jge
pusha
pushf
pop
and
int3
push
xor
fild
xor
jle
xchg
pop
jne
popf
pop
pusha
sub
pop
mov
sub
cdq
fist
daa
add
imul
int
pop
frstor
lods
inc
leave
daa
outs
xchg
sbb
in
mov
int3
nop
jmp
push
stos
xor
adc
xchg
add
or
lods
jmp
jg
es
mov
out
rol
xchg
push
fidiv
push
push
dec
rol
sbb
xor
pop
sub
xor
adc
jmp
lea
ret
outs
jmp
test
ins
ret
in
xchg
inc
ds
mov
jne
arpl
mov
cs
mul
sub
imul
(bad)
jmp
sbb
bnd
xor
mov
add
inc
cmc
sbb
(bad)
inc
push
push
test
or
(bad)
out
mov
fisub
sub
outs
cmp
(bad)
fidivr
cdq
cmps
or
les
aam
out
(bad)
ins
ficomp
pop
pop
push
adc
movs
loop
in
in
mov
ss
test
mov
and
adc
mov
adc
out
popf
scas
fsub
(bad)
shl
pop
jo
lods
jno
cmp
(bad)
jno
or
xchg
out
and
xlat
cmps
mov
pop
push
sub
pop
push
xchg
fucomi
xor
fidivr
inc
mov
(bad)
mov
ins
je
rcr
xchg
sub
sbb
arpl
enter
test
data16
push
jne
cmp
fdivr
xor
push
xor
sar
sub
sub
or
pop
xor
add
pop
or
jge
div
(bad)
sbb
js
int3
retf
std
lahf
and
imul
jbe
push
nop
xchg
scas
ret
jo
aaa
fnclex
xchg
stos
cli
clc
cmps
pop
cmp
sar
cli
dec
mov
xor
inc
inc
arpl
or
(bad)
sub
in
jns
push
mov
pop
sub
jno
dec
or
loopne
lahf
ror
rol
dec
and
cmc
mov
cmp
mov
push
mov
test
sbb
xor
mov
in
sti
mov
icebp
add
int
dec
gs
lea
jge
mov
lahf
aad
jge
inc
pop
pop
jno
xchg
xor
add
call
ds
and
cmc
add
xchg
mov
and
pop
mov
push
sbb
sbb
cdq
xchg
(bad)
push
and
or
inc
ret
xor
pop
mov
pop
sar
daa
xor
jge
pop
neg
or
ret
arpl
cmps
or
es
aaa
sbb
popa
loopne
jl
mov
dec
xchg
xchg
iret
gs
cmps
mov
mov
lods
lock
pop
cmp
retf
adc
ficom
sbb
leave
mov
push
lds
adc
xchg
int
rcl
inc
int
pop
xchg
mov
mov
mov
mov
cmp
es
mov
pop
int
in
mov
cwde
or
sahf
jge
lods
es
push
(bad)
lds
sub
fadd
test
cmp
push
test
outs
in
cmps
mov
and
and
push
lods
shr
push
loope
std
dec
fisttp
or
jbe
push
fst
mov
(bad)
xor
stos
mov
or
inc
aad
je
data16
scas
push
enter
int
sub
inc
sbb
or
shr
nop
push
inc
adc
int
pusha
aaa
ja
jb
std
movs
scas
jae
mov
(bad)
jp
in
cmp
mov
in
mov
xchg
mov
xor
fld
int
inc
outs
pop
loop
popf
stc
hlt
fwait
test
pop
cli
test
push
sbb
xchg
cs
setb
jo
cmp
repz
popf
xlat
fidiv
pushf
inc
fbstp
pop
or
mov
cmp
mov
xor
cmp
outs
xchg
(bad)
lock
(bad)
fsubr
mov
xor
int
arpl
scas
jb
adc
dec
cs
cwde
adc
push
cmp
or
push
inc
jbe
lock
xchg
add
mov
call
jbe
sti
in
jne
call
repz
call
jl
add
movs
add
mov
or
jns
inc
cmc
mov
jecxz
xchg
lea
jge
inc
jmp
inc
ja
loop
je
aas
pushf
mov
xchg
lds
and
cmp
cmovp
mov
and
data16
and
enter
ret
xchg
jmp
dec
int3
sbb
scas
or
je
test
sub
pop
repz
in
inc
xor
push
cwde
mov
mov
cwde
leave
fmul
and
xchg
out
fld
push
mov
mov
das
sahf
mov
mov
pop
and
retf
inc
or
xor
aas
scas
xor
mov
or
xchg
in
mov
xchg
aad
movs
mov
out
sahf
(bad)
neg
dec
jg
jl
pop
or
lods
out
jle
sbb
mov
loopne
bnd
nop
jb
or
and
dec
je
out
mov
call
es
jmp
pushf
dec
jp
mov
sub
movs
xchg
int
pmullw
dec
inc
ins
movs
xchg
jno
cld
mov
push
fadd
ds
sub
inc
or
ret
sbb
das
add
mov
test
js
in
xchg
pop
or
xchg
ss
in
mov
jmp
test
scas
inc
les
rcr
mov
test
push
mov
sub
pushf
test
retf
lods
inc
jns
test
cld
mov
cmc
fisttp
out
fwait
and
arpl
adc
iret
adc
cmc
mov
outs
fdivrp
int
test
data16
cmps
sar
imul
popa
lods
ss
das
inc
cdq
fsubr
or
pop
jbe
aaa
test
inc
int3
ins
(bad)
mov
out
or
(bad)
push
mov
stos
inc
adc
pop
fdiv
ins
data16
ja
out
hlt
in
mov
add
call
jne
xchg
addr16
add
sbb
dec
sub
mov
aaa
ins
in
mov
xor
mov
mov
push
lods
gs
add
cmps
bound
adc
lods
out
xchg
mov
lea
fidiv
mov
mov
mul
mov
sbb
inc
cmp
xor
lods
scas
imul
push
adc
and
xor
jmp
xor
sbb
cld
nop
hlt
fdivr
test
push
mov
nop
xchg
nop
sub
inc
mov
mov
jecxz
imul
mov
iret
mov
fst
in
icebp
xchg
ds
leave
ret
in
into
inc
push
ret
jo
fcomp
pop
jns
jo
sbb
push
outs
shr
and
adc
movs
mov
add
xor
fbstp
aam
pusha
and
jno
hlt
xor
cmps
xchg
ret
fucomi
gs
(bad)
push
cmp
inc
ss
or
dec
or
xchg
icebp
xchg
mov
rcl
dec
xchg
cmc
pop
call
rcr
xchg
dec
push
je
movs
pop
sbb
mov
sbb
mov
sbb
pop
or
pop
out
pusha
jl
js
scas
and
mov
push
(bad)
clc
(bad)
retf
sub
push
pop
ds
add
sbb
loop
add
mov
int
and
mov
or
stos
cwde
sbb
bound
add
int3
inc
mov
arpl
cmps
and
out
inc
xor
pop
cmp
shr
dec
mov
js
hlt
fld
push
iret
fst
popa
xor
sar
sub
cmps
mov
and
mov
imul
or
cmp
or
enter
test
mov
xor
push
or
call
mov
mov
mov
add
ja
out
lods
imul
xchg
fdivr
add
jne
mov
fisttp
xchg
jmp
imul
hlt
inc
push
es
push
test
fwait
sub
daa
mov
mov
cmp
push
push
into
fsubrp
rcl
fadd
lahf
es
jnp
xchg
pop
xchg
inc
cwde
mov
das
xchg
sbb
xchg
cmp
or
push
xchg
mov
popf
loopne
fild
int3
mov
int
mov
mov
cmp
mov
pop
fwait
xor
ins
mov
mov
imul
cwde
pushf
cwde
push
jne
test
sub
cmp
jle
pop
cmp
cmps
mov
push
add
jg
push
sbb
and
out
pop
sub
dec
ret
clc
lahf
adc
mov
mov
cs
or
lock
lea
test
push
lds
push
pop
cmps
add
sbb
sbb
and
inc
jle
cmps
test
lods
and
movs
cmp
pop
pop
ret
xchg
dec
out
and
inc
cmp
pop
hlt
in
inc
inc
push
mov
mov
sub
ins
push
inc
repnz
inc
sub
xor
dec
ins
(bad)
adc
stc
test
cmp
xchg
sub
push
out
out
jle
pop
pop
mov
cmp
sub
shl
ds
mov
arpl
les
adc
faddp
out
test
shr
(bad)
jg
fwait
jl
(bad)
push
call
mov
jg
bnd
pop
push
pop
xchg
mov
test
sub
push
data16
and
xor
push
jl
pop
push
sti
mov
mov
mov
ficom
loope
jbe
inc
push
inc
in
push
pop
push
lods
(bad)
call
repnz
inc
dec
cld
cmps
lods
out
dec
dec
mov
or
jge
pushf
test
mov
ss
out
unpckhps
dec
aas
sub
fcmovbe
mov
xor
fsub
scas
mov
push
xchg
inc
lods
mov
adc
dec
cs
in
mov
dec
mov
xchg
jmp
test
mov
neg
je
aam
inc
mov
into
mov
imul
xchg
add
jne
add
in
sub
loope
mov
enter
mov
pop
sbb
adc
(bad)
cmp
lahf
push
inc
gs
cmp
jnp
sahf
pop
cmp
fiadd
test
adc
mov
mov
mov
call
dec
mov
fs
pop
push
push
push
jno
jb
mov
imul
mov
cwde
test
ins
data16
add
lea
mov
jae
fst
(bad)
cmps
xor
aad
pusha
shr
fs
cmp
pop
and
mov
xchg
shl
ja
in
mov
(bad)
rcl
sub
jmp
outs
push
das
test
scas
jbe
xchg
mov
xor
loope
dec
sub
jmp
and
out
stos
jge
lahf
pop
fcomip
(bad)
xlat
icebp
mov
bound
dec
cmc
xor
dec
leave
pop
jg
push
adc
loope
(bad)
rcl
jo
pop
mov
hlt
xor
out
fimul
inc
pop
addr16
inc
mov
loope
cdq
and
not
jl
xchg
ds
cmp
loopne
outs
xchg
inc
add
fidivr
cli
jne
xor
pop
call
pushf
cmps
in
aam
jl
es
or
cmp
clc
iret
lods
mov
jno
and
enter
retf
int
movs
xchg
(bad)
popa
add
cmp
jb
out
xor
jle
add
fild
jo
mov
add
cmps
lods
test
into
aad
pop
dec
enter
addr16
je
inc
jae
inc
test
mov
mov
mov
cmp
inc
sbb
cmp
cmps
sub
iret
in
jae
push
out
ins
sahf
inc
ja
jmp
add
inc
mov
xor
es
stc
push
std
aaa
sbb
xchg
in
push
dec
xor
push
popa
and
xor
jbe
fdiv
mov
call
add
mov
stc
sub
lods
mov
and
arpl
pop
xchg
cs
cmp
sbb
aaa
in
sbb
mov
jp
ret
ds
popa
cmp
fwait
iret
push
lea
mov
loope
pusha
pop
enter
je
mov
add
jge
dec
jb
mov
sub
out
scas
adc
xor
stos
daa
sbb
pop
arpl
ficomp
pop
dec
mov
mov
xchg
fist
sbb
fnsave
inc
(bad)
call
dec
adc
push
push
shl
(bad)
imul
mov
inc
push
or
scas
and
hlt
test
mov
out
cwde
cmp
cmp
ret
pop
ds
ss
(bad)
xchg
in
mov
pop
adc
xchg
daa
into
sub
pop
inc
dec
mov
xchg
or
jge
fnstsw
shl
jbe
mov
sbb
fs
inc
or
push
xchg
movs
outs
not
out
push
fnsave
add
js
icebp
adc
sbb
fld
inc
jne
xchg
out
pop
out
js
push
imul
adc
sub
clc
pop
ins
jmp
mov
ficomp
and
neg
push
dec
ja
in
inc
inc
push
dec
jmp
mov
cdq
push
jns
or
xor
std
pop
jg
outs
call
push
xchg
mov
jns
or
cdq
sub
lods
push
ss
mov
pop
in
or
jle
loopne
jl
cdq
and
mov
push
fdivr
(bad)
lods
ja
test
adc
dec
lock
dec
jmp
inc
xlat
icebp
xor
push
movs
pop
push
xchg
movs
xchg
xor
retf
and
test
fs
jecxz
addr16
jb
aad
mul
aam
dec
popf
cmps
sbb
pop
xchg
mov
inc
loopne
fsub
or
mov
sub
push
sub
cmp
(bad)
frstor
daa
inc
xchg
ret
(bad)
cmc
push
outs
sub
int3
dec
mov
movs
cmps
clc
cmp
mov
or
lock
cmp
sub
push
std
mov
out
aam
sahf
jge
cmp
int
cmp
daa
(bad)
in
inc
gs
mov
nop
iret
data16
cmc
stos
out
mov
popa
dec
in
gs
ret
inc
xchg
cmps
std
cs
adc
mov
outs
cmp
dec
push
push
ins
sbb
je
sub
loope
sbb
dec
aas
cmp
movs
sbb
and
xchg
ja
dec
addr16
jnp
call
ja
xor
adc
js
ja
inc
mov
adc
dec
in
retf
push
cld
fucomp
pop
pop
and
dec
and
or
lahf
movs
repz
jne
push
mov
arpl
daa
stos
mov
les
out
xchg
arpl
enter
inc
inc
gs
sub
mov
ja
es
into
sbb
outs
sbb
imul
movs
inc
pop
(bad)
std
test
in
movs
cmp
popa
pop
inc
mov
retf
pop
inc
xchg
es
test
outs
test
mov
aam
inc
aaa
mov
mov
dec
pop
pop
test
fmul
data16
into
ret
or
sub
int
(bad)
fist
xchg
and
sbb
shl
hlt
inc
mov
cvtps2pi
xor
cdq
push
xchg
addr16
jne
jns
cmps
arpl
not
jmp
iret
push
dec
sahf
pop
or
xor
daa
neg
push
aam
loope
nop
(bad)
fucomip
xchg
movs
xor
mov
dec
adc
xchg
loope
or
paddw
cwde
cmp
mov
aas
mov
cmp
push
cmp
add
loope
cmp
iret
adc
out
cmp
in
push
push
sbb
int
jne
add
in
push
xbegin
push
xor
sbb
cmp
xor
and
sbb
cs
sub
sbb
aas
dec
test
cmp
or
mov
daa
outs
dec
push
push
int3
push
cmps
ins
xlat
cmp
mov
mov
mov
shl
dec
sbb
inc
into
aaa
sahf
adc
pop
sbb
test
in
and
jmp
add
inc
jbe
cmps
pop
fisub
minpd
add
leave
fild
mov
scas
ds
rcl
push
out
mov
imul
add
and
into
cs
(bad)
in
leave
repnz
dec
cmp
cmp
scas
(bad)
shl
mov
rcr
and
push
jmp
sbb
or
adc
fbstp
(bad)
ss
shr
jg
xchg
mov
aam
mov
cmps
loopne
imul
sbb
lahf
(bad)
xor
cmc
icebp
fsubr
mov
scas
test
and
and
jg
int
ins
jo
push
fwait
and
push
fcmove
adc
cld
or
call
dec
push
icebp
mov
dec
iret
xor
es
xchg
gs
mov
fisttp
std
mov
addr16
adc
sbb
pextrw
and
dec
in
movs
lea
loopne
fiadd
std
dec
adc
adc
sbb
inc
sbb
inc
xchg
jmp
popf
ja
mov
(bad)
adc
pop
dec
or
and
add
daa
std
cmps
(bad)
xchg
lock
mov
push
dec
rcr
jmp
je
and
fsubr
mov
addr16
xor
(bad)
icebp
push
or
pop
outs
xchg
mov
adc
dec
sub
js
add
jb
aaa
and
xchg
pusha
jb
and
les
pop
lods
jnp
test
jae
outs
cmps
pop
gs
out
leave
(bad)
aad
ins
ret
dec
pop
ret
iret
mov
xor
or
and
fs
lods
mov
xchg
enter
fwait
lahf
daa
or
lods
ds
add
mov
gs
and
mov
cs
fsubr
xor
inc
push
test
jo
jmp
out
mov
dec
jmp
and
sub
hlt
test
xchg
jbe
pextrw
jp
fild
pop
add
jecxz
dec
cli
repnz
out
mov
xlat
mov
mov
xchg
es
in
and
cmp
sub
pop
sbb
mov
mov
jp
inc
std
jo
push
xor
add
mov
cmp
stos
ret
ret
or
mov
push
inc
push
in
xchg
mov
fistp
out
cdq
inc
inc
xor
xchg
cs
ins
sbb
es
cmp
clc
mov
int3
sub
xchg
lods
push
fisub
jecxz
aas
sbb
cli
mov
mov
dec
(bad)
test
sar
std
(bad)
ins
inc
lods
pop
fldenv
retf
addr16
addr16
cmps
hlt
push
or
loop
ja
xor
xchg
sub
or
adc
xchg
lods
cmps
fldenv
or
mov
push
mov
(bad)
fld
lea
add
(bad)
cmp
xlat
xchg
push
mov
mov
pop
jae
mov
xchg
xlat
out
adc
and
push
pop
jmp
fadd
pop
xchg
arpl
jle
ins
adc
aam
das
sbb
mov
repnz
adc
jle
in
mov
(bad)
and
popa
repnz
or
dec
push
lea
push
sar
xchg
fldz
outs
fwait
cmp
adc
aad
cmp
add
popf
popa
inc
inc
test
push
lea
mov
ror
cs
lds
sbb
addr16
enter
mov
adc
inc
dec
into
fidiv
adc
sub
retf
test
test
push
clc
fidivr
inc
jae
in
outs
add
(bad)
and
and
inc
or
ds
pop
cmp
inc
pop
and
mov
clc
gs
add
push
sbb
jge
sbb
push
mov
inc
ds
je
daa
cmc
add
mov
stos
xor
inc
cdq
fld
rcr
or
cmp
pop
stos
inc
xchg
pop
adc
jmp
imul
dec
(bad)
lods
scas
jae
pusha
rcr
mov
imul
sbb
add
in
(bad)
push
pop
sub
(bad)
jge
dec
and
inc
sub
stos
push
xchg
jno
jl
or
sahf
ds
push
mov
iret
test
sar
pop
jecxz
std
std
ret
shr
mov
cmps
xchg
xchg
aaa
call
in
push
pop
sub
pushf
dec
sub
in
push
inc
sbb
jecxz
xchg
int3
(bad)
mov
mov
sbb
mov
and
addr16
pop
jmp
popf
mov
adc
cmps
jecxz
sub
cmc
lods
xchg
mov
ins
rol
std
adc
imul
fwait
movs
arpl
xor
mov
daa
push
push
lods
ins
mov
push
cmps
mov
shr
dec
stos
(bad)
dec
retf
and
or
jmp
mov
lods
jnp
(bad)
cld
lods
cmps
cmp
retf
xor
cs
pop
out
jmp
push
cmp
int3
xchg
add
xchg
mov
inc
mov
out
mov
jmp
dec
cmp
aam
dec
pop
inc
cmp
shr
ins
pop
sar
daa
mov
(bad)
pop
fisttp
sbb
ss
sahf
dec
mov
xchg
out
cli
or
dec
retf
inc
push
dec
inc
into
pop
cwde
jb
adc
pop
fmul
loop
aam
int3
ss
das
jmp
mov
fwait
shr
jp
inc
pop
push
mov
cmp
cmps
dec
mov
(bad)
dec
jle
mov
lds
mov
aam
js
dec
mov
ja
pop
dec
sbb
mov
popfw
test
fs
push
inc
movs
addr16
repnz
mov
in
iret
sahf
stos
out
sbb
ds
push
jecxz
xor
ret
jg
fwait
jle
push
xchg
stos
and
(bad)
xchg
scas
add
mov
ja
sub
pop
jge
ds
sub
or
ss
rcr
push
iret
into
rcr
or
fwait
cmps
dec
sti
lahf
cmps
mov
adc
test
ins
std
mov
out
add
jb
inc
fs
ins
popa
dec
movs
cs
pop
movs
dec
aas
mov
dec
jmp
pop
jne
scas
cdq
jae
xlat
ins
(bad)
call
hlt
inc
add
(bad)
cld
dec
pop
lahf
mov
ss
sub
jbe
inc
jne
addr16
daa
pushf
dec
popf
and
sub
mov
cmps
lods
adc
je
push
adc
fdivr
fcmovnbe
mov
pop
aaa
int3
imul
sahf
lea
sub
add
clc
mov
sbb
in
test
and
sub
fisttp
jae
adc
mov
cmc
mul
dec
mov
(bad)
das
icebp
mov
das
and
pop
jmp
iret
mov
sahf
aaa
cmp
dec
(bad)
mov
push
movs
arpl
xchg
mov
cwde
xor
iret
ds
inc
adc
arpl
js
(bad)
idiv
inc
int
aaa
xor
mov
lods
push
mov
pop
push
mov
add
sbb
jmp
in
add
in
or
inc
adc
dec
inc
call
inc
lds
jne
mov
or
leave
pop
cli
push
idiv
fstp
pop
push
lods
pop
push
ja
out
xchg
pop
jecxz
ss
sub
jnp
sub
jne
or
add
add
fnsave
sub
fidivr
cmp
dec
sbb
imul
out
mov
xor
fnstsw
das
sub
(bad)
dec
add
xchg
mov
mov
dec
sbb
aaa
or
ficomp
mov
pop
mov
mov
push
loope
ins
and
stc
adc
and
ins
ret
jmp
es
xchg
mov
add
sbb
inc
pop
cmp
sub
dec
adc
dec
cmc
test
(bad)
cmp
rcr
das
jmp
add
jno
inc
pop
push
imul
mul
sbb
ss
fisttp
icebp
cdq
sbb
fcmovu
jbe
or
movs
es
sub
gs
mov
pop
sbb
xchg
cmc
adc
dec
xchg
scas
jno
scas
mov
jae
je
add
cmc
sahf
mov
push
mov
sbb
mov
daa
xlat
or
dec
sub
les
in
mov
push
ds
sub
stc
pop
leave
mov
mov
inc
cmc
pop
(bad)
fisubr
mov
outs
jge
and
xlat
out
int
or
jnp
outs
xchg
movs
dec
xor
adc
jmp
sbb
sub
inc
test
jnp
les
mov
push
rcr
clc
xchg
mov
push
cmp
xchg
(bad)
jmp
inc
push
jbe
inc
sbb
js
out
ficom
push
add
and
sub
iret
(bad)
mov
push
pop
ror
scas
outs
loopne
and
push
arpl
aas
ins
cmps
out
mov
mov
lods
icebp
and
mul
push
sbb
fidivr
in
in
(bad)
mov
push
ret
js
in
ffree
mov
pushf
xchg
(bad)
jnp
cmp
idiv
jbe
rcl
sti
mov
push
adc
lods
xchg
jne
jmp
xchg
sbb
mov
adc
xchg
in
dec
pushf
xor
xor
dec
mov
pop
outs
mov
mov
xchg
popf
xor
movs
mov
fdivr
dec
xchg
mov
shl
mov
rol
sahf
cld
into
movs
cmp
jae
adc
inc
sub
stos
pop
in
mov
sti
(bad)
inc
or
leave
popf
jp
jae
sbb
xor
(bad)
cmp
pop
push
xchg
mov
push
loope
cmc
ret
ss
cmps
mov
in
mov
inc
fsub
pop
cmp
mov
lods
test
xchg
movs
cmp
call
pop
sbb
jno
adc
addr16
dec
xlat
or
pop
inc
fcomip
in
sar
pusha
jmp
or
iret
out
jne
addr16
loopne
ds
ss
and
daa
push
mov
xchg
fldenv
mov
inc
dec
mov
sbb
cmps
mov
xlat
ja
sbb
in
jns
xor
xor
sub
cld
gs
aaa
jecxz
add
push
and
in
daa
pop
pop
cmp
daa
cs
push
popa
movs
sbb
mov
sub
mov
jmp
inc
jnp
js
iret
push
std
pop
push
mov
outs
cmp
xlat
in
xchg
lods
popa
or
xchg
mov
sti
cmc
push
in
enter
(bad)
std
add
pop
push
ds
sbb
fld
cmp
cwde
inc
cmp
outs
inc
test
and
fwait
push
xchg
jb
cmc
pop
xchg
mov
sub
inc
jle
dec
pop
push
loopne
test
ret
lds
popf
cmp
and
sub
xor
popa
into
ins
mov
add
mov
ret
mov
ins
xor
and
and
pop
pop
in
jecxz
xor
out
aam
xchg
shl
mov
fisub
push
aad
ja
jle
jl
fistp
in
les
xchg
mov
mov
jp
data16
xchg
mov
pop
iret
jp
mov
jmp
adc
in
adc
push
inc
pop
mov
loop
dec
mov
into
jge
push
fwait
(bad)
push
call
dec
and
jmp
fwait
dec
mov
jns
xchg
sar
or
js
pusha
mov
ds
mov
lea
sbb
outs
push
movs
ins
fisttp
ds
daa
fcmovb
popf
xor
popa
in
inc
pop
add
lahf
aam
push
cmp
inc
mov
push
fmul
cmps
ss
stc
stos
xor
iret
fsub
dec
rcl
jge
and
inc
mov
xlat
fwait
jmp
push
test
and
cmp
push
or
jecxz
out
mov
sub
fstp
sub
inc
inc
push
push
das
push
scas
test
mov
mov
int3
pop
sbb
jno
aad
and
clc
push
lods
aas
adc
xchg
and
lea
push
push
mov
mov
sbb
push
inc
(bad)
int3
(bad)
mov
pop
sub
mov
mov
imul
sahf
and
cwde
mov
dec
push
ds
(bad)
mov
daa
movs
mov
loop
(bad)
mov
dec
jmp
or
lea
sub
jecxz
(bad)
xor
cmp
std
push
ins
add
jge
xchg
imul
mov
push
mov
fsubr
aaa
mov
rcl
ss
pop
cmp
pop
add
jle
add
xor
push
enter
and
pop
call
popa
repz
shl
add
lds
hlt
push
aas
aam
lock
push
fptan
adc
call
xchg
popa
jl
mov
dec
(bad)
outs
mov
push
(bad)
es
popa
pop
sar
lods
mov
fisub
mov
ror
xchg
js
xor
or
jge
push
xor
xchg
aam
ins
xchg
or
mov
mov
push
mov
and
adc
aad
pop
or
js
fsub
push
lods
dec
aas
jge
pop
repz
jle
sbb
int3
jg
add
int3
push
addr16
inc
cmp
xor
clc
into
lds
lds
add
loopne
aas
mov
push
call
cmps
popf
mov
popf
add
ins
and
daa
xchg
push
adc
and
ins
outs
outs
adc
mov
push
(bad)
xor
imul
(bad)
sbb
ins
fnsave
xor
not
xor
into
dec
and
sbb
xchg
(bad)
fld
inc
sbb
cld
push
pushf
out
mov
xor
sahf
xchg
lods
(bad)
aad
out
adc
jmp
cli
sub
mov
inc
add
pop
bnd
das
push
push
add
jge
test
jns
xchg
(bad)
iret
mov
cmp
xor
into
sbb
pusha
pushf
xchg
pop
xchg
bound
mov
push
(bad)
repnz
xchg
out
movs
jbe
jle
dec
ret
jecxz
and
push
jl
movs
in
xchg
dec
dec
in
xor
les
cmp
mov
mov
data16
push
call
and
pop
sbb
rcl
retf
retf
adc
in
and
push
(bad)
cmc
sub
mov
lds
sar
inc
loopne
mov
es
mov
dec
inc
ret
jo
lds
mov
dec
mov
mov
xor
enter
mov
xlat
mov
ret
jge
inc
inc
fidivr
mov
adc
push
sbb
xchg
xchg
xor
pushf
mov
das
add
nop
cs
shl
push
adc
cmp
sbb
or
xchg
cmc
lock
inc
scas
sbb
cmps
or
shr
outs
adc
xchg
jmp
xchg
add
fnstcw
lods
aas
mov
adc
dec
jo
mov
mov
mov
mov
mov
or
fs
jb
sbb
sub
pop
push
dec
inc
cld
sub
mov
in
or
int3
fisub
push
ror
adc
dec
xor
sub
jecxz
(bad)
jne
cmp
mov
push
call
fcomp
je
dec
das
movs
pop
jge
jp
lods
add
vmovaps
(bad)
or
dec
push
push
mov
(bad)
mov
xchg
pushf
add
mov
scas
dec
push
in
fdivrp
adc
fidiv
mov
push
xchg
jge
pop
mov
xchg
fcom
in
jmp
sub
popa
lea
push
pop
cdq
xor
(bad)
and
stos
aaa
sbb
dec
mov
inc
fcomp
jbe
aaa
cmp
mov
(bad)
gs
fldenv
iret
cmp
add
call
mov
popf
mov
in
aad
std
(bad)
iret
dec
xor
sti
cmps
xor
aas
push
xchg
cmp
jge
test
pushf
fdivr
imul
leave
retf
leave
fst
std
adc
sbb
rol
push
mov
push
inc
push
push
jae
test
inc
fadd
push
dec
adc
pop
pop
mov
dec
clc
ret
sub
leave
scas
(bad)
ins
(bad)
fmul
lea
pop
adc
jbe
xchg
outs
fsubr
scas
out
lods
mov
retf
lods
cmp
out
ja
lods
and
(bad)
repnz
inc
ror
pop
arpl
dec
je
lods
cmp
sbb
inc
dec
inc
dec
iret
in
mov
test
loopne
out
or
ss
jae
(bad)
bound
shl
mov
dec
sub
pcmpgtd
out
in
mov
cmp
xor
ret
adc
imul
mov
jmp
adc
xchg
push
sbb
jae
movs
jmp
jns
cmp
jb
es
and
retf
push
call
xor
cmp
fwait
mov
test
ins
(bad)
es
xor
xlat
cmp
je
les
push
jmp
sub
lods
int3
fcmove
xor
push
pop
jecxz
int3
lods
pop
gs
jge
rcl
inc
rol
xor
push
stos
add
dec
push
pop
ins
ins
repnz
lahf
xor
inc
ds
stos
dec
dec
ss
rcr
(bad)
cs
fs
cmp
and
or
inc
jmp
ja
push
mov
sahf
pop
shr
or
ffreep
cld
fsin
stos
in
and
(bad)
out
test
push
cmps
mov
xor
adc
cld
aaa
cmps
scas
test
jbe
dec
jbe
push
cmp
std
sbb
lds
fiadd
xor
out
lds
and
scas
mov
jns
cli
sbb
or
pop
and
add
pop
inc
push
xor
xchg
lods
or
and
sub
xchg
mov
ins
cmps
push
cs
es
fild
push
cs
cmps
xchg
in
repz
(bad)
das
adc
aas
push
imul
outs
cwde
popa
pop
push
pop
sbb
push
cmps
pop
xor
cmp
ins
dec
out
jnp
in
sar
inc
cmps
popa
enter
push
cmp
sbb
or
es
inc
outs
push
inc
hlt
iret
mov
cmp
mov
pop
bound
mov
imul
(bad)
cmp
xchg
dec
and
and
pop
or
lock
xchg
push
jg
data16
jle
lods
sbb
push
add
sar
or
out
xchg
adc
retf
fnstenv
add
test
std
push
mov
pop
push
mov
lods
hlt
arpl
outs
in
imul
xchg
push
xchg
and
mov
call
jns
push
adc
enter
enter
xor
popf
fstp
mov
cmps
pop
jge
sub
push
mov
pop
movs
rcl
call
loop
cwde
jle
int3
push
fnstenv
mov
pop
(bad)
xchg
neg
cmp
mov
mov
xchg
jmp
loop
jl
and
cmp
pop
rcr
clc
jne
out
aad
out
pop
ret
inc
pop
bound
cmp
ins
mov
mov
mov
xchg
xchg
test
ret
cmp
dec
jo
inc
cmp
sub
lahf
xor
cmps
fimul
pop
lahf
sub
mov
test
popf
xchg
and
in
and
jmp
test
ret
aas
jecxz
adc
pop
aas
xlat
movs
sub
and
xchg
push
add
scas
call
mov
and
ja
push
jnp
push
pop
loop
ss
jno
jecxz
mov
xor
adc
mov
ret
mov
popf
push
stc
into
mov
cdq
fsubr
sub
cld
mov
ss
cwde
jmp
sbb
inc
ins
sbb
(bad)
jecxz
fadd
dec
outs
(bad)
adc
dec
movs
cmps
pop
es
rcr
stc
and
cmps
stos
mov
ins
ret
jo
lahf
mov
test
push
fwait
into
mov
out
add
and
xor
arpl
fnstsw
pop
mov
jmp
mov
cmp
data16
add
xor
xchg
es
dec
in
inc
iret
ins
sub
mov
adc
inc
mov
mov
and
xchg
ds
xor
pop
pop
jne
test
(bad)
int3
clc
sbb
out
add
or
jmp
ror
adc
(bad)
push
cmp
mov
shr
sub
push
mov
sahf
push
or
outs
adc
adc
xchg
stc
sbb
mov
cmps
inc
enter
pop
int
sbb
xchg
fs
xor
lods
stos
fwait
arpl
pushf
push
pop
adc
jno
adc
push
es
sub
inc
xlat
movs
lea
mov
adc
pop
xchg
dec
sbb
and
cmp
in
cs
iret
std
inc
mov
and
mov
(bad)
stos
in
inc
and
outs
mov
into
fdiv
in
mov
in
(bad)
not
data16
xchg
or
jnp
xchg
pop
add
cmp
or
in
or
jl
or
out
pushf
mov
xchg
loopne
or
pop
push
ret
mov
add
and
mov
test
mov
(bad)
sar
aaa
sbb
daa
pop
in
push
mov
int
mov
or
fsub
pop
inc
int
lods
xor
outs
lahf
rol
push
int
adc
jmp
push
xchg
enter
cld
adc
or
xlat
cmps
sbb
mov
(bad)
clc
jmp
push
pop
inc
in
mov
adc
push
pmullw
outs
adc
push
sub
mov
inc
call
pop
mov
arpl
xchg
std
shl
aam
push
mov
add
push
sbb
xor
push
addr16
(bad)
jmp
enter
lahf
add
push
xor
ds
andps
mov
mov
xchg
shr
(bad)
clc
dec
push
xchg
js
daa
repz
out
dec
into
pop
popf
pop
lock
stos
test
aas
mov
mov
pop
es
adc
iret
jp
inc
and
sub
cmps
jmp
and
xor
adc
or
pop
int
sub
cmp
xchg
jle
xor
sbb
jecxz
fimul
fbld
xor
inc
xchg
cmps
sub
sar
push
outs
mov
mov
bound
rcr
jecxz
sbb
and
pusha
pop
sub
jl
shufps
pop
adc
mov
ss
inc
div
shl
mov
popa
cmp
xor
in
adc
push
out
movs
(bad)
imul
mov
jb
pop
jge
jne
(bad)
jae
sbb
stos
pushf
xor
push
(bad)
fisub
pop
and
sbb
cmp
in
sub
pop
ins
enter
inc
pop
(bad)
push
repnz
jo
hlt
imul
and
in
lods
(bad)
jo
pop
inc
fnsave
ret
pushf
jge
xchg
mov
(bad)
(bad)
mov
inc
jmp
mov
(bad)
cdq
cli
xor
mov
dec
lea
xchg
adc
arpl
psubb
adc
gs
mov
(bad)
pop
add
lods
xor
cmps
sub
ja
xor
dec
sbb
into
dec
xchg
out
das
mov
fisttp
jge
outs
push
es
stos
adc
mov
ss
out
inc
fidivr
test
neg
xor
outs
sbb
dec
sub
push
call
or
cmp
inc
jge
dec
push
aam
sub
mov
jb
js
(bad)
into
into
jbe
pop
jle
and
repz
ret
(bad)
es
or
mov
sub
sbb
cmp
fcomp
(bad)
or
push
xor
or
mov
out
xchg
or
popf
mov
ret
icebp
test
push
xchg
fdiv
gs
sbb
popa
sahf
mov
sbb
sub
inc
xchg
ss
dec
or
sub
data16
add
in
push
out
lods
push
les
aas
sti
aam
idiv
xchg
cmp
jne
pop
push
mov
sbb
mov
push
push
(bad)
mov
jbe
inc
sbb
pop
rol
stc
pushf
xchg
mov
stc
in
jge
popa
push
pop
inc
enter
sbb
inc
cmc
(bad)
adc
shl
inc
shr
inc
mov
adc
lods
loope
push
push
hlt
add
or
lea
push
jbe
jno
es
xor
(bad)
arpl
adc
xor
push
shr
cmp
mov
inc
imul
nop
mov
mov
xchg
daa
popf
cmp
sar
cmp
in
mov
pop
cli
sti
leave
cmp
idiv
std
ja
into
lock
add
xor
inc
icebp
jmp
ret
mov
loop
push
jge
retf
dec
data16
in
push
inc
pop
jnp
cmp
inc
jb
mov
pusha
cmp
dec
push
je
sar
jae
sbb
clc
shl
inc
stos
arpl
stos
pop
aad
inc
test
mov
mov
arpl
and
daa
out
mov
dec
mov
int
jl
ficom
push
mov
(bad)
fmul
jne
psllq
sub
repnz
or
ffreep
movs
xlat
mov
ss
ucomiss
and
pushf
shl
mov
fcomip
lea
jmp
mov
scas
push
or
push
inc
xchg
sahf
test
mov
adc
test
cmp
mov
and
inc
daa
mov
in
movs
mul
push
push
out
xchg
inc
dec
pop
or
cmps
mov
fnsave
xor
cmp
(bad)
into
pop
push
aad
add
push
(bad)
movs
(bad)
aam
(bad)
jnp
addr16
retf
or
(bad)
cmps
add
ss
or
inc
pop
(bad)
rol
pushf
push
adc
sbb
mov
dec
xor
or
pop
cwde
or
jne
sbb
je
movs
lods
gs
call
hlt
icebp
push
jmp
je
std
push
out
int3
lock
lods
mov
les
fs
aas
sub
mul
adc
sub
inc
rol
jmp
inc
lds
sub
inc
sub
dec
out
mov
mov
jno
and
pop
fucom
ins
xchg
adc
sahf
mov
mov
cli
pop
push
int3
loop
mov
ja
cmc
jg
int3
ror
sbb
cmp
cdq
xor
add
jp
pop
and
int3
ret
mov
neg
aas
mov
sbb
outs
add
inc
(bad)
jmp
test
ret
sbb
es
jecxz
es
push
xor
out
sub
scas
cld
push
and
arpl
scas
call
(bad)
xchg
out
xor
in
inc
(bad)
sub
in
jge
push
sti
aam
mov
pop
xor
pop
jmp
add
iret
pop
cwde
dec
repnz
xchg
pop
add
push
and
cmp
mov
xor
std
dec
push
cmp
and
pushf
xchg
push
gs
mov
add
fisubr
lods
ja
in
cs
inc
cs
lea
mov
out
pusha
inc
push
nop
es
add
adc
xchg
xor
cmp
pop
or
xchg
lods
div
movs
fucomip
adc
je
add
jecxz
push
(bad)
xor
in
enter
(bad)
jle
cmps
and
pop
mov
stos
ins
aas
push
or
out
inc
dec
pop
dec
setae
popf
stos
lea
pop
int3
jge
in
int3
addr16
mov
movs
sub
ins
jle
movs
jbe
lds
mov
sbb
mov
in
sbb
adc
cmp
sbb
xchg
lods
test
mov
shl
pop
cld
fist
test
pop
mov
jne
add
mov
or
adc
jmp
sbb
ret
mov
xchg
sub
adc
inc
iret
lds
mov
xchg
xor
fdiv
iret
pop
or
jp
pop
daa
or
or
mov
push
mov
shl
sahf
and
imul
hlt
jmp
invd
mov
ins
inc
adc
push
sbb
ja
repz
xchg
jne
test
sub
or
sbb
movs
fwait
retf
addr16
xchg
add
mul
call
neg
bound
into
cmps
cwde
mov
int
dec
xlat
mov
push
dec
adc
movs
mov
sar
into
adc
xchg
mov
dec
jg
sbb
xchg
sbb
sbb
ja
hlt
lahf
test
cwde
test
outs
pop
adc
xchg
dec
rcl
or
(bad)
fs
adc
xchg
(bad)
jmp
test
into
scas
loope
pop
cmp
stos
push
das
repz
or
(bad)
leave
or
pop
jbe
jns
xchg
jge
sbb
cmp
fcmovnu
int
inc
loope
inc
push
cld
xchg
test
mov
in
cmp
in
sub
(bad)
mov
sti
dec
ins
add
daa
movs
push
out
rcl
mov
pop
push
mov
fidivr
cmps
mov
mov
stos
les
cmps
and
stos
clc
dec
fs
pop
repnz
add
enter
jnp
adc
mov
cmp
push
loop
mov
push
pushf
and
inc
(bad)
and
mov
jge
js
mov
lock
jmp
mov
sbb
mov
xor
in
mov
mov
addr16
xchg
cmp
jmp
mov
mov
cmp
pop
in
xchg
out
clc
mov
cdq
adc
sbb
pop
ds
ror
sub
jns
pushf
leave
mov
add
and
mov
inc
mov
xor
push
scas
jp
aaa
cwde
jbe
push
fst
and
test
cs
ds
js
out
adc
xchg
pusha
outs
mov
xchg
add
hlt
mov
adc
dec
and
jg
test
test
clc
in
mov
daa
or
mov
(bad)
std
mov
addr16
adc
dec
push
fnstcw
adc
pop
pop
(bad)
mov
aad
les
adc
loope
add
add
ss
ds
xchg
ins
jnp
or
out
movs
pop
jae
cmp
push
pop
test
fsub
adc
cs
(bad)
adc
push
pop
and
mov
push
fs
shr
xchg
mov
fdivr
mov
mov
call
sbb
xchg
jo
cli
mov
jg
xor
out
inc
call
aaa
pop
loopne
jp
ror
mov
aad
scas
or
shl
ja
pop
push
test
or
(bad)
dec
xor
xchg
push
(bad)
ins
(bad)
xor
or
inc
nop
xor
dec
movs
mov
jbe
nop
mov
sbb
pushf
fisub
pop
add
stos
pop
call
rcr
fbld
les
lea
std
lods
imul
add
jg
xchg
jmp
and
shl
or
jecxz
(bad)
cmp
inc
cmps
ret
test
repz
cmp
adc
mov
or
or
outs
nop
inc
bound
sbb
inc
push
scas
outs
out
les
cld
cmp
and
jns
cwde
std
mov
icebp
push
push
pop
pop
movs
and
call
jp
cmp
jb
lods
xchg
xchg
int3
inc
dec
inc
loope
cmc
jae
or
sub
enter
or
xchg
mov
inc
aaa
sahf
fmulp
mov
mov
cmp
aas
iret
mov
dec
idiv
dec
push
test
or
cmc
sahf
std
mov
mov
rol
call
dec
cmps
imul
mov
mov
das
adc
cmp
aad
std
adc
mov
pop
pushf
lea
jge
call
(bad)
push
jnp
dec
mov
out
enter
xor
push
push
mov
std
cs
sub
jno
out
in
inc
jle
movlps
clc
lds
mov
arpl
adc
inc
jae
outs
cmps
cmp
xchg
hlt
stc
repz
enter
jecxz
push
test
xchg
int3
and
(bad)
bound
jno
shl
jnp
mov
mov
fdivr
into
nop
(bad)
cli
aad
push
add
adc
popf
into
sub
adc
pop
pop
push
jmp
(bad)
cli
ja
gs
cmp
in
mov
jne
sub
mov
rol
and
daa
loop
fucomp
(bad)
in
ss
mov
addr16
mov
cwde
ss
or
stc
scas
jecxz
(bad)
fs
loope
add
add
xor
push
stos
popa
dec
mov
in
sub
aas
cmc
cmp
call
xor
push
xchg
sub
shr
jnp
movs
jp
xchg
mov
push
cmp
mov
pop
jg
rol
je
mov
inc
loop
cmp
push
pop
enter
fsub
daa
push
mov
sbb
push
idiv
sub
adc
push
(bad)
jne
xor
mov
in
out
ss
xchg
pop
js
loop
jmp
arpl
xchg
test
cdq
xchg
mov
add
stc
call
add
mov
outs
repnz
in
add
ret
pop
pusha
arpl
xor
xor
ja
std
xchg
mov
in
push
mov
in
repnz
adc
mov
push
inc
fmul
out
lds
add
sub
cmp
in
aam
or
or
mov
pop
mov
cmp
and
mov
sub
test
mov
push
push
sub
or
or
pop
(bad)
push
adc
mov
(bad)
(bad)
and
mov
lods
xchg
xor
es
mov
xchg
xchg
shl
lods
loop
xor
mov
cmp
and
dec
das
dec
jae
pusha
loop
mov
pushf
xor
xchg
sbb
test
js
sub
out
mov
push
sub
pop
xor
adc
add
cmp
or
aas
pop
push
sub
scas
mov
in
mov
cmp
lock
cmps
loop
or
adc
rol
xlat
stos
sbb
mov
cmp
xchg
cmp
and
into
or
push
sub
jecxz
sbb
frstorw
icebp
out
inc
inc
mov
call
lods
adc
jle
push
push
push
push
test
cli
mov
xchg
adc
out
ds
aam
arpl
sub
outs
in
sub
mov
test
sub
std
jmp
cld
sti
fsubr
in
lods
jo
jge
rol
jp
lds
mov
in
call
in
lods
in
popf
mov
jmp
test
clc
aaa
jns
lea
nop
xchg
(bad)
aam
mov
sahf
dec
cs
rcr
push
add
scas
stc
xor
mov
rcr
or
push
out
mov
std
pop
jge
cld
push
jge
test
dec
in
push
pop
xchg
mov
setb
or
cmps
fwait
dec
out
ret
push
mov
out
jo
mov
shl
ds
xchg
or
inc
ins
pop
sbb
mov
repz
sbb
jne
xlat
loope
push
shl
and
push
pop
xor
xor
push
sbb
xlat
jbe
test
push
(bad)
add
cld
xchg
push
das
push
cmp
fisttp
out
js
xchg
shr
or
(bad)
mov
in
(bad)
push
out
push
aas
xchg
sub
loopne
mov
call
sub
lods
rol
add
xchg
add
jnp
lods
push
mov
add
pop
fwait
pop
jp
mov
addr16
stos
or
push
mov
lods
fdivr
mov
push
mov
or
test
mov
ja
mov
jge
test
mov
aaa
pop
pop
enter
ret
enter
mov
lea
adc
cmp
xchg
mov
test
sbb
adc
dec
aaa
lds
inc
inc
push
mov
nop
(bad)
ficomp
(bad)
in
outs
in
lea
dec
popa
loope
dec
sahf
std
fidivr
xchg
xor
pop
movs
das
and
icebp
rol
loop
jnp
inc
fst
ret
inc
cmp
sti
lea
xchg
dec
sub
mov
mov
es
pinsrw
add
and
cs
push
xchg
jno
mov
jnp
pop
std
and
mov
push
sub
sahf
and
fwait
dec
cmp
xchg
pop
mov
sub
int3
test
push
jl
add
push
in
adc
(bad)
popf
push
sar
mov
pop
push
jmp
daa
inc
outs
std
gs
push
std
stos
std
dec
es
xchg
inc
test
popa
mov
shl
hlt
adc
ins
(bad)
cmp
push
dec
cs
out
scas
lods
mov
xor
mov
xor
sub
call
(bad)
lahf
xchg
push
ficomp
pop
loopne
sbb
in
ins
sbb
inc
mov
das
mov
mov
or
ja
div
and
mov
add
jmp
pop
dec
push
sbb
ret
cld
into
adc
mov
int
jge
xor
rol
cmp
stos
xlat
inc
outs
dec
mov
lea
stc
stos
add
loopne
jno
xor
fdivr
push
rol
hlt
pop
popf
rcl
retf
adc
pushf
frstor
and
hlt
mov
jae
mov
fild
mov
das
lods
cwde
push
std
cmp
push
inc
jle
fadd
ss
pop
(bad)
inc
xcrypt-ctr
cmps
cdq
mov
das
jge
mov
out
ret
or
mov
cmp
in
jb
push
or
add
fmul
out
mov
mov
test
inc
inc
inc
xor
xor
aam
xchg
mov
fisub
aad
jmp
dec
sbb
imul
xor
jmp
or
fdiv
cld
gs
dec
xor
(bad)
pop
mov
fucom
repnz
or
sbb
dec
xchg
scas
pop
inc
jbe
push
push
ret
das
cmps
dec
jecxz
pop
clc
fwait
mov
pop
adc
inc
fs
pop
(bad)
dec
cmps
call
or
movs
loope
xchg
cmp
jmp
pop
lea
push
ret
pusha
cmovo
imul
out
jge
adc
jns
mov
xchg
in
ja
sbb
push
jl
aas
pop
sti
test
iret
mov
sub
and
mov
cmps
lock
push
sub
and
retf
jb
cmp
pop
stc
push
out
mov
call
xor
jmp
inc
and
lds
pop
xor
retf
daa
jge
lahf
leave
rcl
shr
das
ror
push
into
test
repnz
xchg
jecxz
imul
push
out
adc
daa
adc
dec
lahf
adc
(bad)
mov
mov
dec
mov
push
fnstsw
ins
xlat
xor
int3
xchg
and
sbb
out
cmc
bound
pop
das
(bad)
pop
dec
lahf
pop
(bad)
cmp
lods
aaa
cmp
jb
xchg
sbb
inc
dec
imul
not
leave
(bad)
mov
xchg
sbb
cmp
pop
jo
jp
(bad)
cmps
pop
mov
mov
data16
push
sbb
sbb
jle
mov
or
add
adc
add
jle
mov
test
pop
add
ret
cmp
push
(bad)
movs
stos
pop
sbb
jae
xchg
out
fstp
lds
mov
ss
dec
and
enter
cmp
jb
dec
repnz
dec
aam
add
mov
fdiv
aaa
or
jecxz
push
fisub
repnz
dec
ins
sbb
sub
xchg
lods
inc
int3
(bad)
out
jnp
and
pop
(bad)
mov
(bad)
mov
jo
jb
xchg
popf
loope
add
(bad)
xchg
pop
fnstsw
leave
mov
ja
mov
jmp
pop
inc
repnz
fs
clc
jbe
enter
or
lahf
adc
ret
mov
xchg
popa
dec
pop
(bad)
dec
(bad)
sub
sbb
outs
add
lea
(bad)
lods
retf
or
and
mov
inc
pop
adc
jl
lods
jle
int3
(bad)
jbe
jmp
call
mov
pop
inc
inc
dec
mov
push
jbe
cs
in
pop
lods
fimul
sbb
sub
push
(bad)
mov
repnz
mov
shr
fnstenv
mov
data16
inc
fs
xor
xchg
xchg
xlat
dec
xchg
add
xor
shr
xchg
hlt
mov
ins
mov
sbb
ret
retf
xlat
retf
inc
push
mov
mul
stos
pop
push
push
(bad)
and
div
jne
dec
lods
sbb
lahf
outs
cmp
js
aam
inc
fisttp
mov
and
xor
out
sbb
outs
imul
cmp
movs
or
inc
or
shr
outs
push
and
loope
(bad)
mov
shl
lods
cdq
jge
lea
leave
test
repz
cmc
sbb
sbb
xchg
jecxz
cmps
lea
fsub
call
and
xchg
mov
pop
mov
xchg
mov
cmp
xlat
sbb
jl
cmc
xchg
pop
lds
xchg
xchg
pop
jae
jne
mov
repz
jmp
stc
fsubp
cmp
push
sahf
push
sbb
bound
xor
add
pop
sbb
popf
jo
repnz
and
loop
sub
pop
ror
inc
movs
mov
ret
stos
fstp
cmp
inc
push
adc
cld
sbb
mul
fld1
imul
into
mov
mov
adc
lods
sahf
mov
neg
or
ss
inc
repz
cdq
(bad)
lock
jo
stos
pop
pop
inc
or
lods
add
cmp
adc
or
repz
lods
shr
adc
pop
inc
push
mov
lods
mov
mov
xchg
stc
lea
xlat
mov
jg
lock
mov
mov
bound
xchg
out
(bad)
push
adc
adc
je
sbb
push
std
hlt
pushf
scas
retf
mov
pop
sub
cmps
mov
and
retf
adc
sub
nop
fs
mul
jo
(bad)
ret
enter
adc
movs
sbb
sbb
les
lea
ja
fs
jl
les
sub
lods
movs
imul
mov
xchg
lahf
sar
mov
inc
call
mov
push
mov
add
add
stos
das
add
lahf
sub
mov
xchg
shl
test
lods
sbb
es
retf
jnp
xor
gs
retf
and
jmp
retf
add
adc
out
pushf
push
fmul
mov
imul
xor
push
arpl
test
xor
xchg
add
loop
(bad)
or
xchg
sti
nop
pop
nop
cmp
sub
push
adc
(bad)
mov
test
xchg
sbb
sbb
sbb
sbb
loope
sub
pop
lahf
jnp
and
fidiv
jmp
adc
xlat
sub
jbe
pop
mov
cmp
or
(bad)
sbb
cmps
popa
daa
jae
movs
stos
sub
(bad)
pop
cwde
mov
dec
mov
cmp
jbe
push
push
adc
xchg
and
pop
int
sub
lods
aad
mov
add
fs
cdq
add
lds
push
jle
ja
push
and
stos
es
xor
pushf
out
jae
dec
in
fsub
mov
leave
stos
sub
xor
and
imul
and
mov
(bad)
and
adc
mov
cs
or
inc
ins
icebp
mov
mov
mov
sbb
mov
pop
std
(bad)
push
test
and
clc
jb
inc
adc
fucom
out
test
jnp
mov
xchg
sub
fadd
cmp
mov
pop
enter
(bad)
lea
mov
jg
fiadd
push
push
add
or
cmp
inc
sub
loopne
cmp
inc
jae
mov
std
xor
push
adc
fs
sub
cmp
mov
sbb
shl
in
pop
psubusw
es
dec
fisub
xchg
cmps
leave
les
fwait
addr16
jecxz
ja
add
dec
fisttp
jecxz
test
adc
cmp
jg
pop
inc
jae
sbb
aaa
ffreep
(bad)
sub
push
test
out
sbb
mov
fld
or
imul
pop
daa
push
movq
lahf
fsub
pop
hlt
test
imul
cmp
loopne
jge
dec
sub
out
test
mov
fnstcw
scas
jb
iret
cmp
pusha
push
cli
lea
pop
push
dec
push
outs
retf
fidivr
repnz
dec
pop
or
hlt
clc
mov
je
enter
dec
sub
dec
jp
aam
je
pop
repnz
jecxz
pop
xchg
popf
out
cmps
(bad)
jns
hlt
cmp
int
out
mov
int3
inc
push
es
pushf
ror
psllw
gs
enter
mov
push
call
mov
xadd
adc
test
and
pop
sbb
cmp
jbe
fimul
inc
paddw
adc
cmp
dec
jle
(bad)
mov
sbb
inc
xchg
mov
inc
int
push
lea
inc
scas
jne
jmp
(bad)
pushf
mov
cmp
and
out
cmp
pop
or
(bad)
(bad)
out
cwde
mov
dec
sbb
arpl
and
scas
shl
dec
xchg
stc
mov
or
in
retf
jmp
push
or
inc
sub
outs
sbb
adc
pop
jmp
sub
and
add
je
dec
popa
xchg
mov
aad
enter
and
out
(bad)
and
out
pusha
push
shl
mov
mov
mov
enter
add
sub
inc
cmp
rcl
fsub
mov
inc
lods
adc
das
hlt
xor
or
rcr
fnsetpm(287
ret
dec
nop
pop
sbb
adc
xchg
sub
ret
fiadd
cmc
ja
pop
(bad)
(bad)
rol
cmps
scas
cs
(bad)
(bad)
out
mov
xor
and
lea
jl
(bad)
(bad)
or
hlt
xor
mul
ja
push
sub
push
push
test
inc
ds
push
xor
cmp
cs
pop
xor
ret
dec
lea
fisub
(bad)
jbe
vpcmpeqw
sbb
sub
xchg
mov
inc
and
data16
mov
test
es
or
and
ficomp
mov
adc
in
dec
test
pop
mov
mov
or
imul
iret
iret
push
outs
jl
sbb
push
test
popa
jne
mov
xchg
in
mov
inc
ins
mov
mov
cmp
(bad)
or
xor
into
inc
ds
adc
sub
imul
pushf
mov
mov
dec
adc
scas
call
inc
fwait
and
aam
out
lock
pushf
pushf
mov
xchg
dec
jbe
cli
in
enter
jbe
add
lds
xor
and
ret
(bad)
clc
ret
outs
mov
jns
jle
ret
push
mov
repnz
pop
bndstx
outs
push
bound
push
test
xchg
push
inc
mov
shl
inc
aad
jecxz
(bad)
push
ret
(bad)
mov
dec
pop
(bad)
jne
push
mov
pop
fdiv
dec
nop
loop
push
ss
ja
imul
mov
movs
mov
jbe
(bad)
sahf
mov
ret
(bad)
in
shr
fistp
mov
movs
push
add
pushf
mul
jl
test
stos
movs
dec
adc
mov
fnstsw
sbb
or
adc
out
dec
pushw
lods
xor
scas
(bad)
cwde
(bad)
nop
lods
and
cmp
outs
and
(bad)
or
dec
ds
iret
popa
sar
push
(bad)
addr16
ds
and
push
cmp
fbld
or
inc
mov
jmp
adc
inc
jg
cs
xchg
int3
xor
jb
inc
pop
push
idiv
repz
sub
ret
mov
push
or
push
repz
fidivr
lock
push
(bad)
mov
and
adc
add
add
jmp
push
ja
add
pop
mov
cmp
xchg
dec
mov
mov
push
push
fst
or
push
jns
jb
jle
pop
stos
xchg
in
hlt
lods
movs
sub
inc
nop
retfw
pop
or
inc
outs
sbb
jne
sbb
bound
cs
repnz
rcl
lds
push
add
mov
cmp
sub
mov
jl
cli
mov
push
add
push
pop
pop
xchg
mov
sub
add
lock
cli
lods
adc
cmp
ds
mov
ins
mov
and
retf
cmc
nop
(bad)
fistp
pushf
les
push
and
jg
(bad)
or
xor
lods
out
sti
push
lods
mov
jmp
push
(bad)
push
xor
fadd
mul
call
or
dec
push
push
jge
inc
test
data16
jl
pop
cmp
not
sub
xchg
leave
inc
xor
daa
aaa
sub
pop
jmp
(bad)
ins
test
inc
(bad)
js
cmc
push
ds
pop
data16
push
or
push
imul
push
xchg
popa
iret
jno
daa
into
sbb
pop
dec
add
rcl
push
inc
cwde
fsubr
shr
sub
stc
aad
xor
daa
sub
(bad)
test
fsub
adc
and
pop
push
jo
movs
inc
shr
sbb
or
jmp
gs
sub
(bad)
rol
pop
mov
push
les
ja
mov
mov
call
xlat
out
inc
out
sbb
xchg
pop
inc
dec
test
cmc
arpl
out
fld
jbe
push
(bad)
lods
fwait
movs
inc
jbe
cmp
push
movs
xor
mov
pop
or
outs
rcl
pop
jle
sbb
cmc
icebp
test
or
gs
js
mov
arpl
ret
cs
push
dec
sub
pop
sub
or
ja
retf
mov
aad
or
jo
xor
jmp
clc
sub
je
jne
xchg
xor
mov
mov
ret
jp
xor
push
aad
fldenv
call
mov
xchg
fdivr
cmps
mov
arpl
scas
sub
aaa
mov
xchg
dec
ss
push
in
call
push
ja
jno
pop
int
lea
pop
aaa
(bad)
xchg
push
mov
aaa
dec
cmps
add
aaa
test
stc
sub
mov
mov
hlt
ins
scas
outs
adc
sbb
mov
and
pop
jne
movs
lods
lods
in
pop
xor
in
mov
test
fistp
jle
cmp
rol
aas
sbb
in
stc
outs
into
add
jbe
inc
mov
mov
scas
mov
mov
lea
xchg
mov
addr16
add
xchg
mov
pusha
sub
(bad)
fdivp
mov
je
push
sub
jb
loop
fld
or
neg
jno
icebp
ins
in
(bad)
push
arpl
je
push
and
adc
addr16
xchg
sahf
xor
pop
xchg
inc
jbe
sbb
or
sub
xor
xor
in
out
xchg
or
icebp
in
xchg
jecxz
dec
mov
sbb
dec
and
jg
outs
push
call
les
lea
std
lds
sub
adc
(bad)
push
out
jb
jle
repnz
std
enter
scas
out
xor
jbe
ss
xchg
sbb
gs
fld
jnp
mov
movs
popf
jecxz
cmps
cs
iret
cmps
aas
test
and
pop
pusha
mov
xor
sbb
add
mov
and
mov
outs
xchg
hlt
popf
out
adc
adc
and
jo
inc
jne
std
inc
pop
hlt
mov
(bad)
push
fsub
mov
psadbw
xchg
(bad)
jne
in
ror
gs
mov
cs
mov
loop
xchg
lea
sbb
add
fstp
call
pop
and
pop
mov
sub
xor
sub
jl
add
sbb
sti
repnz
mov
shr
push
sbb
test
lds
jl
ins
mov
cmp
cli
std
cmps
adc
arpl
fistp
pop
std
scas
cmp
sub
loop
dec
clc
lods
sub
jg
mov
push
inc
les
stos
push
cli
cmp
in
sbb
rcl
pop
int
xor
sar
mov
push
outs
sbb
es
clc
inc
icebp
xchg
dec
mov
inc
mov
out
xchg
in
ds
cmps
ins
es
xor
bound
sti
mov
mov
lock
loopne
enter
and
test
mov
lods
rcpps
sub
in
stos
adc
add
jbe
inc
inc
xchg
ins
adc
bound
and
repz
push
fld
sbb
add
inc
stc
inc
sub
jge
jge
xchg
jbe
loope
add
dec
mov
mov
fldenv
mov
sbb
sbb
sbb
push
aas
call
cdq
repz
sub
dec
movs
adc
ins
ins
pop
or
rcl
push
or
sti
push
cmps
push
adc
(bad)
mov
imul
mov
xchg
pop
add
xor
cs
mov
xlat
lods
jne
call
xchg
fisttp
push
cmp
bound
out
push
jge
es
cli
inc
bound
stc
jge
pop
xchg
int
iret
xor
hlt
ror
into
dec
pop
inc
inc
out
sub
std
movs
loop
and
sub
lds
jmp
adc
pop
cmps
inc
push
xchg
enter
cs
xor
loope
cmp
aas
xchg
inc
inc
sbb
in
inc
mov
(bad)
jmp
dec
loope
fidivr
mov
test
mov
lea
and
mov
ror
out
cld
cmps
sar
jle
mov
jo
aas
jge
push
(bad)
mov
loop
jne
or
mov
(bad)
cld
jnp
stos
cmc
ss
ss
jg
fwait
cmps
hlt
mov
loopne
into
out
mov
call
xor
dec
cwde
push
pop
inc
push
or
sub
aas
pop
mov
jo
aad
vmovsd
mov
aam
pop
(bad)
mov
iret
xor
mov
adc
inc
cwde
push
arpl
dec
or
pop
xchg
push
mov
retf
xchg
jge
inc
fdivr
pop
adc
sbb
push
mov
mov
ja
push
cmps
dec
out
clc
pop
adc
int
dec
or
call
sub
jbe
outs
jl
cwde
and
(bad)
sub
mov
ins
xchg
push
or
dec
pop
mov
sub
ss
mov
das
ins
sub
lods
leave
test
dec
pop
and
loop
outs
or
xor
xchg
popf
scas
std
ss
cs
gs
adc
cmp
ret
cwde
jg
ins
jbe
push
aam
sub
bsr
in
push
dec
sti
inc
jmp
lods
jae
pop
cmp
outs
rep
mov
pusha
outs
and
les
mov
mov
xor
inc
pop
lea
(bad)
retf
adc
fwait
leave
in
loopne
neg
shr
and
inc
push
daa
mov
cmp
mov
mov
mov
or
jns
push
stos
pop
and
mov
mov
dec
jle
lods
xlat
mov
sbb
leave
push
std
pop
xor
arpl
gs
pop
sbb
push
fpatan
push
jne
shr
xchg
aas
sub
movs
sbb
aaa
jae
icebp
xor
cld
int3
mov
sbb
out
xchg
test
bound
sub
cs
adc
xchg
cmps
mov
jecxz
es
mov
and
sub
pop
jo
jle
stos
pushf
dec
sti
xlat
xlat
mov
in
mov
mov
ds
lea
aad
data16
mov
daa
into
mov
sti
add
div
outs
hlt
in
pushf
outs
out
push
outs
imul
xor
push
cmps
cwde
repnz
sahf
fs
xor
sahf
or
xchg
in
push
pop
push
inc
inc
movs
adc
xor
aaa
lods
cmp
data16
out
dec
add
sbb
lods
pop
pop
loop
retf
pop
dec
jle
int
sub
xor
clc
ret
fwait
jle
sbb
arpl
jnp
aad
pop
out
(bad)
movs
out
pop
jl
repnz
push
mov
add
sub
cwde
imul
mov
and
xor
mov
data16
inc
xor
fist
imul
jge
ins
inc
inc
cmp
jno
xchg
std
sub
test
outs
jno
sbb
call
out
jmp
cmps
xchg
and
pop
(bad)
pop
push
or
std
mov
cmps
sub
jl
sbb
jmp
lea
popa
ja
and
fld
cmc
stos
mov
pushf
and
fwait
or
mov
lea
push
mov
pop
push
stc
scas
cmp
in
dec
cmp
ds
cmp
jb
into
aad
xchg
sub
popf
rcl
call
in
mov
(bad)
ins
jg
inc
inc
inc
mov
call
icebp
inc
ss
sbb
dec
dec
cmp
pop
cs
push
mov
push
loope
xchg
js
adc
mov
repnz
mov
mov
mov
mov
icebp
mov
push
or
outs
mov
mov
mov
jmp
and
cmps
cmps
adc
sbb
mov
xor
std
int3
inc
bound
inc
scas
adc
loop
push
adc
cmps
pop
std
cld
push
jmp
outs
mov
aam
loopne
jecxz
movs
std
dec
addr16
sti
sub
jmp
ins
ja
movs
data16
test
test
pop
(bad)
stc
(bad)
int
iret
adc
xor
mov
pusha
outs
repz
int3
xor
loope
in
enter
addr16
repnz
nop
inc
xor
sbb
ins
jns
cmps
sbb
shl
repnz
or
popf
daa
sbb
sar
ret
lds
in
in
test
xor
cs
or
fild
xchg
popa
jle
sbb
call
sub
test
mov
lods
mov
dec
cli
int
jl
mov
scas
sar
test
jp
loope
mov
xor
lods
(bad)
leave
imul
mov
lds
les
neg
aas
ss
test
jbe
das
sub
inc
jp
and
add
loop
mov
in
fwait
mov
call
mov
fstp
inc
fwait
inc
sub
daa
jno
cld
test
cmp
mov
mov
mov
inc
dec
daa
sub
sbb
imul
xchg
arpl
push
adc
neg
fscale
xor
mov
push
sub
cli
mov
mov
xor
fidiv
cdq
int3
dec
aaa
mov
and
dec
adc
call
jge
movs
leave
add
dec
es
sar
movs
stos
out
nop
cmp
out
(bad)
dec
and
gs
mov
ja
bound
(bad)
ja
ja
pop
dec
mov
mov
mov
push
cmps
fist
shl
xchg
lods
sbb
adc
outs
pop
mov
lds
and
xchg
inc
add
fcmovu
ffree
ret
daa
stos
jbe
sub
sub
loopne
mov
scas
in
in
aad
fsubr
fisubr
pop
pop
sbb
mov
sbb
sahf
mov
add
inc
dec
add
add
xchg
pop
push
cwde
push
in
mov
aaa
mov
mov
push
jge
popf
jb
mov
jmp
push
dec
inc
jo
mov
fbstp
call
dec
sbb
xchg
pop
js
or
dec
add
stos
push
pop
mov
leave
mov
push
cmp
aas
adc
aaa
and
cmp
in
pop
mov
fisub
imul
mov
pop
ins
clc
push
cmp
movs
xchg
push
push
scas
rol
push
hlt
dec
push
scas
mov
shl
in
cmp
loope
pop
xchg
idiv
into
popf
xchg
jle
outs
cmp
jbe
and
cmp
jle
add
loope
pusha
dec
jle
mov
mov
and
add
push
outs
add
repz
xchg
dec
xor
out
mov
dec
jno
mov
mov
xlat
call
sub
or
pop
aam
mov
push
aaa
mov
std
ja
imul
cmp
fmulp
add
mov
sar
cmp
jb
mov
push
add
xor
sbb
pop
mov
cmp
int3
jae
push
add
add
push
aad
sub
popa
pop
xchg
and
nop
sub
sahf
sbb
cmp
ss
mov
pop
jge
and
dec
cmps
popf
push
rcl
mov
gs
dec
call
sub
add
inc
jnp
retf
dec
inc
popf
int3
in
dec
jae
sub
hlt
adc
dec
inc
loope
retf
aas
sbb
icebp
gs
sar
test
jecxz
cmc
xlat
clc
add
dec
and
dec
sub
fmul
mov
adc
fs
call
(bad)
(bad)
xchg
xor
jmp
into
icebp
repz
dec
push
test
mov
push
sahf
push
or
mov
(bad)
fdiv
pop
cdq
adc
cs
inc
xor
imul
cs
jb
dec
jb
popa
sar
(bad)
sbb
add
les
inc
fld
sub
jnp
adc
fisub
movs
repz
and
mov
movs
cmps
push
mov
test
cmc
movs
popf
pusha
cmp
dec
ja
add
mov
cmp
adc
stos
(bad)
jp
cmp
add
fld
jbe
test
add
mov
icebp
cwde
cwde
test
test
inc
data16
lahf
jg
mov
fcmovnbe
std
pop
stos
xchg
push
push
es
imul
and
jge
out
jne
pop
shr
aam
jg
(bad)
cli
push
jae
mov
aas
push
mov
loope
jl
je
pop
mov
lea
sbb
fnstenv
dec
pop
cmp
jl
jp
or
popa
int
mov
mov
dec
inc
(bad)
jecxz
in
aaa
xor
pop
inc
fisttp
fs
xchg
inc
push
push
or
scas
or
cld
xor
or
mov
popa
xor
xchg
pop
or
std
loope
push
loope
push
jge
fld
fidiv
mov
(bad)
mov
out
(bad)
mov
add
mov
push
loop
dec
adc
popf
pop
arpl
sbb
xor
rcl
sub
retf
sub
nop
push
gs
jbe
or
ds
mov
jmp
test
outs
jnp
pop
arpl
es
hlt
call
pop
jo
rol
push
retf
sub
fcomp
test
mov
and
mov
push
dec
xlat
sub
push
jle
shl
rol
(bad)
jp
aaa
cs
pop
inc
popa
add
das
shl
retf
push
sahf
jne
ja
xor
div
push
in
pop
inc
sahf
and
push
mov
into
into
lods
pop
mov
or
out
mov
inc
repz
mov
jbe
mov
dec
sub
dec
xor
(bad)
xchg
lods
cdq
cwde
sub
cmp
int3
lds
pop
sar
cs
sub
frstor
stc
push
cli
enter
fiadd
jmp
mov
addr16
xchg
(bad)
push
loopne
in
inc
mov
inc
jns
mov
lods
mov
fild
ss
push
sub
enter
jge
push
push
adc
in
sub
int3
xchg
jbe
sbb
popf
inc
push
movs
jl
call
xchg
outs
mov
sub
int
cmp
cmp
aaa
shr
xchg
cdq
add
add
jp
(bad)
lahf
push
data16
cmp
ss
call
push
mov
jle
out
out
loop
ds
imul
icebp
mov
mov
mov
adc
out
ja
dec
repnz
ins
jno
out
call
sbb
nop
and
inc
popf
mov
movq
test
mov
jl
mov
call
outs
or
stos
cmp
hlt
sbb
dec
out
out
stc
or
cmp
call
xchg
ins
push
sbb
mov
pop
idiv
dec
pop
add
loopne
mov
push
sub
les
mov
xor
or
aam
mov
ja
rcl
push
inc
pop
popa
movs
ins
std
xchg
mov
cmp
(bad)
mov
fidivr
mov
dec
(bad)
in
aaa
jmp
pop
mov
adc
(bad)
or
jns
test
mov
out
ds
js
outs
imul
mov
xchg
inc
out
frstor
in
xchg
aas
jb
aas
ja
mov
outs
lods
cld
lods
xor
ss
mov
xor
mov
sar
add
or
or
add
in
xor
or
xlat
mov
push
jae
ins
retw
cmps
xor
scas
pop
push
in
fadd
push
stos
xchg
sbb
push
scas
addr16
pop
xlat
imul
pushf
dec
add
movs
push
fcmovu
mov
in
out
push
sub
dec
add
inc
in
adc
dec
inc
retf
not
iret
bound
cld
in
cmps
ins
into
fs
cmp
jl
stos
dec
mov
(bad)
cmps
cmp
in
or
mov
and
les
movs
ss
bound
adc
aad
aam
test
cmp
call
xlat
xor
jns
loope
or
push
leave
xor
out
lods
or
(bad)
xlat
inc
dec
pop
push
xor
pushf
cmp
pop
(bad)
xchg
or
inc
mov
sahf
(bad)
jecxz
push
es
retf
scas
dec
cmp
inc
icebp
std
inc
lea
cmp
std
xchg
sub
sar
inc
imul
(bad)
fwait
mov
sub
jecxz
cdq
inc
test
ins
pop
inc
popf
dec
sbb
push
shl
mov
nop
dec
cmp
dec
dec
loop
pop
ins
loope
and
mov
fs
cmps
inc
sub
lea
jbe
pop
push
push
add
mov
(bad)
sbb
js
ds
pop
and
cs
mov
mov
(bad)
jle
lea
jnp
aaa
cmp
push
xchg
cmp
add
retf
dec
xchg
push
sbb
(bad)
push
sub
imul
nop
scas
test
pop
push
fist
bound
pop
xor
test
ror
mov
mov
mov
pop
fidivr
and
cld
test
sbb
mov
test
and
movs
dec
xchg
clc
fbld
lods
xchg
cmp
mov
mov
cs
jle
mov
push
push
and
lods
mov
(bad)
sub
add
xor
xchg
in
cmp
ficomp
push
jle
(bad)
out
xor
add
shr
pop
jnp
in
popf
mov
xor
(bad)
xor
and
call
mov
rol
cs
test
jmp
in
push
out
daa
fucomp
popf
shr
in
push
and
sbb
lahf
jg
mov
push
push
hlt
in
pop
jns
cs
loop
fisttp
aaa
fs
xor
scas
cld
jmp
hlt
test
int
fimul
or
push
inc
aam
fldenv
and
mov
lds
push
pushf
bound
(bad)
int3
js
aam
or
inc
xor
js
cwde
jb
xor
dec
mov
mov
daa
adc
cwde
adc
and
imul
jno
imul
es
mov
fild
fdiv
iret
mov
and
mov
data16
or
in
fnstsw
mov
mov
adc
mov
dec
aas
mov
arpl
sahf
and
test
fwait
xlat
arpl
mov
and
mov
push
ins
int3
enter
pop
mov
repnz
in
stos
mov
sbb
fst
jmp
push
leave
imul
add
sahf
test
push
ins
adc
cmp
out
rol
mov
adc
mov
pop
mov
mov
adc
jle
pop
out
mov
lods
mov
mov
mov
pop
cld
jl
lods
inc
movs
sbb
adc
pop
cs
sbb
loop
push
push
ins
xbegin
inc
xchg
jb
pop
dec
dec
(bad)
adc
(bad)
cwde
mov
bound
je
into
not
jno
nop
aas
arpl
dec
mov
int
xchg
lods
jne
ficom
sbb
xor
(bad)
retf
icebp
or
jl
(bad)
push
adc
pop
xchg
pmaxsw
ja
and
xor
test
sub
mov
add
sbb
pop
and
xor
sahf
jbe
sub
sbb
sub
dec
dec
or
jl
retf
int
pop
retf
addr16
sub
sahf
inc
or
or
xlat
jmp
(bad)
in
pop
stos
dec
inc
lds
lds
mov
hlt
adc
test
add
xchg
nop
add
(bad)
pop
xchg
movs
dec
js
xchg
mov
lds
mov
push
mov
jbe
popf
int
js
cmp
popf
icebp
adc
es
andps
in
inc
jl
mov
popf
and
(bad)
inc
add
test
lds
shl
cmp
in
inc
ins
jnp
mov
push
cdq
push
jg
std
aam
je
xor
mov
push
xchg
push
mov
sbb
lea
leave
(bad)
stc
ret
and
xor
pop
loope
bound
dec
popf
mov
or
cmp
cmp
in
jg
out
mov
frstor
arpl
scas
sbb
xor
ret
not
xchg
repz
out
and
jge
dec
pop
mov
hlt
retf
cld
add
retf
lds
push
mov
xchg
xchg
push
and
pusha
jae
cmp
ror
mov
mov
repz
scas
mov
icebp
loop
aam
xchg
or
leave
inc
push
mov
or
retf
fnstenv
std
mov
retf
or
mov
xchg
out
adc
loop
mul
jle
fidiv
(bad)
pop
sub
xlat
push
jno
in
es
leave
shl
sbb
pop
pop
div
(bad)
sub
xor
bound
inc
adc
inc
pop
xchg
fcomi
scas
bound
lock
repnz
inc
out
add
sub
test
mov
(bad)
cmps
xor
mov
mov
add
push
jnp
add
and
add
(bad)
mov
pushf
mov
sbb
gs
movs
es
add
pop
xor
and
movs
jle
jnp
mov
mov
int3
sub
arpl
push
(bad)
loop
sar
out
sub
idiv
mov
xchg
xchg
mov
pop
test
fdivr
push
fsubr
pop
adc
(bad)
aad
mov
pop
(bad)
mov
(bad)
mov
clc
inc
pop
adc
xchg
ret
sub
lds
jmp
add
mov
push
(bad)
retf
mov
xchg
jg
stos
ins
cmps
out
pop
enter
dec
add
or
test
(bad)
ins
mov
push
ds
lods
add
shl
adc
js
add
inc
or
dec
mov
mov
mov
aam
jb
hlt
les
sbb
std
xor
or
rcr
jmp
mov
imul
das
sbb
movs
sub
pop
sbb
popa
inc
inc
cmp
cdq
sti
mov
repz
mov
xor
jbe
sub
sbb
push
xchg
mov
repz
hlt
mov
les
retf
push
jmp
cwde
pop
leave
daa
cld
push
jbe
jmp
mov
cmp
sbb
push
movs
jbe
ret
std
push
jp
ins
pusha
int
dec
jbe
outs
mov
imul
mov
dec
mov
jae
cmp
mov
into
jb
jl
lea
add
sub
(bad)
cmp
or
jle
and
leave
mov
(bad)
xlat
icebp
fistp
div
mul
shl
sub
cmp
push
ins
pushf
mov
sbb
pushf
xchg
ins
push
pop
ja
jmp
in
sub
fmul
and
push
int
pop
pop
mov
mov
jecxz
loope
sbb
or
je
push
push
and
daa
stos
sahf
cmps
dec
xor
mov
pop
sub
and
sub
cmp
fucom
adc
sar
push
push
sbb
and
test
and
sahf
cmps
inc
jbe
push
popf
push
mov
jne
jge
sbb
mov
lods
xor
add
push
arpl
pop
jbe
adc
and
cwde
leave
xchg
hlt
pop
out
cmp
je
fnstsw
and
loop
push
push
pop
jae
lock
mov
test
push
in
leave
pop
imul
les
sub
xchg
ins
das
fnstsw
daa
dec
mov
shr
loopne
imul
int
loopne
mov
adc
cld
fnstsw
pop
sbb
loopne
xor
mov
call
sbb
push
pop
sbb
ficomp
aaa
mov
mov
(bad)
lock
or
pop
bound
popf
pop
test
dec
(bad)
jns
popf
pusha
push
aas
cmp
imul
mov
pop
(bad)
pop
aas
xchg
push
add
call
out
push
iret
scas
fdivr
lock
pushf
fnsave
(bad)
adc
pushf
push
call
add
jp
xchg
inc
xchg
cmp
dec
inc
ret
cmp
sbb
or
cmp
fcmovnbe
xor
sub
mov
dec
leave
push
jbe
outs
xor
cmp
(bad)
out
push
jae
add
jp
movs
mov
lock
push
dec
int
popa
and
cmp
aad
cmp
mov
push
in
mov
cmp
mov
bound
jnp
into
jns
jg
addr16
jmp
jmp
mov
jmp
xchg
(bad)
jg
out
xchg
mov
es
push
test
das
xor
aaa
fstp
add
pop
or
xchg
(bad)
or
jnp
cmp
or
push
adc
out
repnz
push
mov
pop
adc
rcl
scas
out
cwde
and
mov
and
movs
into
fs
jae
push
jle
dec
not
mov
loop
in
popf
into
repnz
cmp
ret
and
pop
leave
ins
into
mov
fst
mov
or
sbb
sbb
and
xor
mov
xchg
sbb
fld
jg
enter
sbb
es
sub
fcmovbe
gs
int
sub
mov
aad
shl
sub
inc
sbb
mov
scas
mov
aaa
fsub
sahf
xchg
outs
pop
push
jge
add
pushf
jmp
in
test
jl
jne
push
neg
in
jmp
cmp
push
mov
adc
test
fild
call
test
sub
sbb
and
nop
pop
cwd
mov
popa
add
xchg
jp
fimul
sahf
fs
add
or
dec
sbb
cmp
xchg
es
in
(bad)
dec
xchg
cld
jp
pushf
jecxz
jns
std
dec
dec
or
dec
lds
xor
scas
mov
cs
and
jns
push
or
into
ja
hlt
(bad)
cmp
dec
shl
mov
out
xchg
mov
aas
pop
cs
jno
ins
repz
cmp
xor
mov
out
idiv
jl
rcr
jne
push
xor
add
fdiv
jae
scas
mov
ss
push
jmp
bound
idiv
sbb
add
mov
rol
scas
xor
sysexit
xchg
out
cmps
dec
xchg
rcr
mov
xchg
enter
scas
movs
out
mov
shr
ficomp
push
cmp
cmp
and
gs
dec
pusha
push
sahf
sub
cld
outs
mov
fsub
push
sub
dec
int
sub
out
jbe
fild
outs
pop
jo
scas
les
(bad)
int
or
in
mov
mov
test
int3
sub
and
(bad)
in
sbb
cmps
dec
sub
mov
ss
mov
jbe
rcl
dec
mov
arpl
into
mov
dec
(bad)
ret
sub
pop
ss
and
mov
int3
jmp
pop
movs
sub
scas
aam
sbb
push
ret
iret
sar
ss
int3
ins
jg
or
stc
xchg
jg
mov
test
mov
lea
cmc
jnp
pusha
jmp
jb
xchg
in
cld
cmps
call
adc
out
sbb
adc
push
fs
iret
gs
jns
scas
pop
addr16
xlat
std
pop
div
in
jmp
xchg
and
adc
push
call
and
xor
test
call
and
cs
es
in
pop
jb
addr16
and
rep
sub
idiv
xor
xchg
call
push
pop
xor
sub
push
sub
out
daa
lods
sahf
fnstcw
lods
mov
ret
add
or
pop
xor
lods
out
push
in
cmp
and
stos
jbe
(bad)
jmp
push
adc
inc
and
std
inc
jl
sbb
jge
cmc
out
sub
pop
out
scas
retf
movs
mov
sbb
mov
sub
xchg
gs
and
cs
mov
lods
sbb
dec
imul
outs
push
mov
stos
cmp
pushf
inc
sahf
popa
push
inc
dec
repz
cvtps2pi
sar
jns
xchg
jg
jl
mov
mov
(bad)
cld
adc
pop
sbb
mov
and
jae
push
(bad)
mov
cmp
outs
in
repnz
and
out
enter
mov
push
(bad)
(bad)
push
mov
data16
xchg
xchg
jl
mov
(bad)
fidiv
and
jbe
push
inc
pop
(bad)
or
xor
add
(bad)
loope
adc
loop
lds
mov
imul
cmc
inc
jne
add
out
mov
push
inc
xor
and
stc
push
in
cs
and
jns
cdq
xor
and
and
add
outs
aaa
cmp
push
scas
hlt
popf
(bad)
popf
push
mov
out
popa
movs
mov
add
push
(bad)
clc
sbb
adc
sub
in
movs
mov
out
mov
push
pop
pop
push
fadd
jge
imul
sub
cmps
pop
push
cmp
mov
into
retf
inc
adc
les
test
dec
lods
pop
ins
dec
out
lahf
ret
and
xchg
fmul
push
stc
adc
sub
dec
cmps
int3
pop
mov
mov
icebp
add
dec
cld
mov
add
int3
cmp
outs
fcom
(bad)
cmp
lock
xchg
in
out
cmp
mov
rcr
jae
push
ins
cmps
mov
lods
loop
repz
mov
xchg
std
popf
add
scas
mov
or
inc
xor
mov
dec
test
cwde
cmp
into
mov
add
xchg
call
sahf
jl
fldcw
repnz
ins
mov
mov
and
arpl
jl
xchg
mov
fld
int
push
xor
xor
push
sti
not
dec
pop
inc
jge
fs
pop
mov
iret
call
fmulp
mov
and
pop
mov
stos
add
adc
dec
push
out
out
js
mov
loopne
dec
add
outs
lods
pop
(bad)
fwait
push
jmp
out
dec
(bad)
hlt
lods
and
imul
xor
sub
push
jno
sub
pop
push
fwait
xor
inc
(bad)
stc
test
xor
push
or
sbb
pushf
cmps
mov
les
dec
ja
mov
(bad)
je
sub
jmp
push
repz
(bad)
mov
pop
xchg
sub
movs
pop
cld
push
pop
in
lods
xchg
mov
fisub
daa
out
push
mov
mov
jb
pop
frstor
aaa
ins
mov
add
mov
enter
cmp
retf
xchg
dec
dec
push
adc
stc
add
sub
hlt
fcmove
repz
sub
in
adc
pop
sub
inc
push
std
dec
outs
mov
mov
adc
sbb
sub
sub
out
xlat
inc
push
inc
not
cwd
mov
jnp
call
call
in
and
mov
or
pop
jle
mov
push
jmp
pusha
daa
sub
int3
pcmpgtd
xor
je
dec
dec
dec
dec
add
pop
inc
push
cwde
aaa
cli
lock
push
fdivr
fbstp
outs
shr
jbe
aad
mov
(bad)
push
mov
ins
enter
xchg
aas
mov
out
jle
outs
dec
cmovp
or
aas
and
inc
add
iret
les
adc
test
and
in
xchg
sbb
retf
(bad)
pop
ins
mov
or
cmp
test
sbb
in
cmc
pop
retf
push
inc
cmps
std
and
ja
push
dec
sbb
push
jb
push
cmp
test
enter
add
fiadd
push
pop
push
cmc
jle
pop
push
inc
or
sbb
les
int3
dec
sbb
iret
popf
outs
cmp
push
jmp
cmps
imul
mov
mov
aas
cmps
xchg
mov
sbb
rol
inc
sti
test
jle
cwde
dec
sub
pop
int
inc
mov
fucomp
sbb
lods
pop
iret
add
jns
ret
repz
add
jb
dec
mov
in
stos
out
rcr
mov
mov
dec
jg
pop
pop
sbb
in
rol
mov
xchg
sbb
inc
aad
xchg
int3
repz
add
sub
fist
repnz
xor
pushf
or
mov
adc
push
mov
xchg
pop
pop
sbb
rcl
lahf
out
jp
sbb
pop
adc
adc
push
aaa
push
call
mul
jge
inc
(bad)
push
jbe
ins
xchg
in
cli
icebp
cli
add
(bad)
adc
cmp
and
or
lahf
in
sbb
sti
outs
xchg
call
add
jl
iret
mov
or
and
sbb
ret
cli
pop
gs
xlat
xor
stos
xlat
pop
inc
mov
sub
push
sbb
loope
and
xchg
jno
addr16
jb
lds
mov
or
sub
test
mov
ins
or
daa
cwde
jmp
mov
stos
int3
add
cmps
xor
out
bound
in
jbe
je
int
inc
pusha
jae
daa
int
cld
sti
lea
add
xchg
push
jbe
movs
xor
in
imul
fucomip
fnstenv
pop
mov
sub
xchg
mov
jmp
cmp
sti
push
adc
push
aam
mov
or
lods
movs
sbb
ins
rcl
dec
push
std
cmp
mov
push
fcmovb
jmp
xlat
cmp
in
stc
jge
sahf
push
dec
jno
add
movs
pop
cld
sub
jle
ja
or
xchg
addr16
pushf
stos
jnp
lods
pushf
std
and
push
cmp
xchg
fdiv
(bad)
test
dec
cmp
lds
and
mov
bound
das
lods
addr16
(bad)
in
inc
pop
movs
fstp
jo
ins
pusha
ja
retf
cmp
lods
fwait
in
pop
add
jg
movs
xchg
je
xchg
mov
fs
cmc
xchg
xchg
movs
adc
int3
sub
call
add
dec
or
sbb
stc
jge
inc
push
(bad)
cmp
add
scas
aad
pushf
and
fsubr
loopne
cmp
test
mov
ret
mov
and
cdq
jno
add
movs
xlat
xchg
clc
pop
movs
data16
into
mov
dec
sub
xor
cmps
fimul
dec
inc
push
sbb
lds
(bad)
fbld
xor
mov
adc
in
inc
mov
idiv
loope
cmp
xor
add
push
xor
fadd
cmp
fmul
lods
aaa
sub
sub
pop
jne
loopne
aas
fisubr
movs
adc
mov
into
inc
(bad)
mov
dec
data16
add
mov
imul
stc
jg
adc
push
dec
cmp
call
shr
bound
sbb
mov
xchg
ds
fdivr
cmps
jmp
push
push
test
les
cmp
dec
jns
jns
add
pushf
mov
push
or
jo
test
push
(bad)
adc
cmp
pop
fs
jno
sub
cwde
push
not
xor
ds
outs
aas
cs
pushf
ja
ja
pop
jbe
jge
and
mov
fs
mov
out
jbe
sub
add
pop
enter
push
or
fwait
or
(bad)
or
movs
sbb
xchg
sahf
adc
cmp
cmp
out
fadd
and
sar
inc
jmp
aaa
daa
imul
xchg
frstor
cld
scas
mov
not
jl
lods
cmp
inc
pop
or
adc
rol
push
les
push
or
enter
push
aas
or
pop
lea
and
push
or
or
cmps
inc
out
pop
mov
mov
mov
pop
xchg
cmp
mov
test
mov
ret
push
pop
fdivr
adc
cld
cmp
adc
dec
cli
sbb
bnd
rol
shr
out
popa
jp
inc
pushf
popf
pop
pop
(bad)
addr16
test
jle
aam
xchg
mov
mov
cmp
or
pop
mov
neg
jge
pop
frstor
jmp
jecxz
add
addr16
mov
pop
jbe
mov
es
inc
sbb
mov
loopne
cmps
cmc
loopne
aad
aaa
test
sbb
fs
bound
cld
lahf
je
test
inc
fbstp
or
jne
imul
leave
(bad)
sahf
into
hlt
add
popf
int3
popf
inc
imul
mov
cwde
sbb
aaa
mov
mov
lods
cwde
mov
fcom
jecxz
loopne
aad
jae
ss
mov
pushf
dec
jbe
or
fsub
mov
arpl
(bad)
out
ss
in
sbb
adc
inc
loopne
enterw
fwait
ret
sub
(bad)
leave
pop
outs
cmp
and
fcomp
xor
loop
(bad)
xlat
fsub
loop
(bad)
pop
(bad)
sub
fdivp
fstp
adc
movs
push
gs
mov
arpl
or
fst
cmp
aaa
adc
pop
or
fcom
retf
lods
fdiv
std
xchg
and
fisubr
cmc
ins
jmp
(bad)
jecxz
push
int3
fucomp
jo
ja
nop
jo
cmp
fs
movs
ret
pop
jge
jne
sbb
or
ja
add
out
pushf
and
cld
push
jmp
neg
add
lahf
fidiv
dec
aas
and
ins
mov
addr16
ds
ror
dec
xchg
inc
push
(bad)
lods
cmp
gs
imul
scas
mov
test
inc
sub
mov
mov
jne
adc
movs
mov
mov
ins
lock
retf
sbb
push
in
not
clc
push
ror
lea
stos
iret
loopne
int
inc
mov
enter
cmp
cmp
pop
cmp
push
cmc
pop
(bad)
aaa
das
cli
mov
mov
add
div
int3
jecxz
adc
pop
pop
jbe
mov
inc
dec
scas
pushf
out
cmp
sub
cmp
iret
dec
adc
mov
outs
inc
fs
cmc
lea
mov
fs
nop
push
sbb
iret
dec
add
sti
aas
sahf
jne
push
pop
ins
push
push
jl
or
daa
push
add
pop
retf
push
stc
mov
data16
push
cmp
mul
jg
outs
mov
aas
sub
(bad)
imul
fcom
xchg
(bad)
add
xchg
aas
sbb
mov
jp
adc
inc
pop
stos
outs
lds
mov
fimul
je
adc
pop
sahf
lods
(bad)
(bad)
not
cmp
mov
out
xchg
add
(bad)
mov
xlat
jle
in
sbb
retf
cmp
sbb
mov
dec
mov
inc
leave
mov
pushf
inc
aad
jbe
test
mov
in
sub
movs
jbe
cmp
std
or
mov
lods
jl
(bad)
jmp
lods
pop
and
fsubr
sar
cmps
out
xchg
add
repz
stos
adc
scas
cmps
cs
push
xor
mov
adc
scas
adc
out
clc
in
into
inc
push
(bad)
jns
push
mov
xchg
fisubr
out
dec
out
mov
mov
xor
arpl
mov
xor
xchg
pop
pop
sub
aad
vmovlps
lods
stc
aas
inc
jl
xor
ret
std
loop
jae
movs
mov
cmp
dec
fisttp
xchg
mov
or
xchg
retf
aad
sub
pop
push
out
popf
xor
in
inc
add
(bad)
mov
out
(bad)
sbb
pop
std
es
sahf
sub
lea
mov
xchg
jge
loope
sub
xchg
or
ins
mov
js
ins
xchg
frstor
lods
ss
(bad)
icebp
(bad)
out
push
jno
(bad)
jne
cmps
lods
call
lea
icebp
push
mov
jmp
rcr
cli
inc
lea
push
jl
inc
popa
jl
push
mov
cmp
sub
pop
in
(bad)
daa
cmp
fcmovb
sbb
or
jp
push
(bad)
jge
ins
out
mov
out
imul
jbe
movups
lea
cdq
into
sub
push
sbb
loopne
int3
adc
sub
sbb
outs
cmp
addr16
adc
mov
push
jmp
mov
out
sub
sbb
jnp
push
or
push
dec
cmp
xchg
retf
add
cmp
dec
or
dec
loopne
or
cwde
and
cmps
leave
retf
mov
mov
aaa
lahf
(bad)
neg
jle
sub
push
lahf
or
pusha
mov
shr
sub
and
adc
xor
inc
xchg
imul
outs
jbe
gs
cmp
pop
mov
lds
in
jl
xchg
(bad)
push
dec
pop
cmp
or
jo
sub
or
xchg
js
arpl
test
fist
sub
mov
sbb
xchg
mov
pop
scas
stos
mov
inc
pop
sar
xor
std
lahf
push
and
das
sbb
or
aam
in
xchg
or
pop
sub
cmp
or
ins
push
(bad)
retf
jno
(bad)
fisttp
int3
or
iret
mov
ja
inc
outs
cmps
(bad)
fs
mov
mov
dec
std
dec
rol
lods
and
jns
or
cmp
repnz
mov
(bad)
(bad)
cdq
repnz
cmp
sub
cmp
and
lds
clc
ins
add
mov
jl
fs
out
pop
or
inc
cmp
sbb
inc
shl
xchg
mov
inc
or
add
jge
inc
cmp
sub
pop
inc
cmp
test
stc
pop
loop
ror
mov
jbe
out
std
ss
push
popa
pop
xchg
outs
mov
inc
ins
pop
push
and
dec
arpl
mov
cmp
pop
cli
imul
retf
sub
adc
pop
push
xor
adc
mov
xlat
jmp
fst
xchg
sub
mov
add
adc
mov
xor
ror
pusha
imul
hlt
sbb
add
jnp
or
xchg
enter
mov
mov
inc
add
adc
push
rcl
lods
jle
push
pop
push
movs
fimul
push
cmc
xchg
ins
adc
jbe
cmp
dec
sbb
fwait
ins
popa
lods
or
push
aad
lea
xor
jne
ss
add
jbe
xor
sub
cmps
stos
or
lods
loopne
dec
dec
push
or
dec
fld
xchg
jns
out
pop
xor
in
std
pop
bnd
pop
(bad)
pop
push
sub
sub
std
xchg
mov
sub
mov
enter
xor
sbb
push
or
rcl
push
push
daa
imul
xchg
mov
cmp
mov
shl
int
(bad)
hlt
xchg
mov
vcvtdq2pd
push
dec
bnd
sub
push
lods
xchg
sub
inc
xor
push
(bad)
pushf
jge
(bad)
in
arpl
push
adc
push
jmp
push
jne
push
jbe
push
mov
add
sub
std
es
mul
jmp
fs
out
loopne
daa
ins
sub
ss
(bad)
std
jp
loopne
push
or
jne
mov
cmps
std
sbb
lods
add
sub
leave
js
bound
push
push
(bad)
out
je
cmovge
xlat
pop
shl
dec
fstp
fwait
sti
jge
hlt
jecxz
push
hlt
mov
push
mov
jno
or
xor
jp
mov
fdiv
mov
inc
test
adc
mov
scas
inc
popa
push
outs
xor
mov
lahf
bnd
(bad)
aam
ret
jbe
loope
ds
jne
data16
inc
ins
sub
test
push
mov
in
sub
mov
jne
push
cld
ins
jnp
loopne
int
or
pop
xchg
retf
cmps
xchg
stos
mov
cmps
ds
xor
dec
jo
pusha
ret
adc
loope
push
in
rol
mov
out
aad
movs
into
push
out
adc
addr16
ins
mov
test
pusha
mov
mov
stos
push
jle
push
das
mov
cmp
push
shl
movs
sub
mov
icebp
loop
mov
daa
xor
xor
popf
sub
and
and
dec
sub
imul
push
int
jne
mov
test
cmp
push
jp
bnd
mov
jns
xchg
retf
xchg
cmc
in
stos
std
test
ins
mov
cmp
add
xchg
push
and
cmp
add
sar
dec
push
cmp
nop
dec
cmp
xchg
fs
fwait
xchg
mov
cli
fmul
or
iret
jno
push
inc
inc
mov
pushf
xor
ins
iret
or
pop
(bad)
mov
adc
jge
iret
and
fmul
pop
imul
add
inc
ficomp
hlt
int
pop
cmc
cdq
loopne
(bad)
xchg
xchg
xor
dec
push
mov
dec
add
jp
outs
mov
dec
jno
add
xor
es
sub
push
and
pop
jo
inc
push
push
pop
cmps
lods
call
mov
mov
fdivr
(bad)
ss
push
in
inc
push
xor
pop
aam
mov
in
sbb
or
xor
sbb
out
sbb
add
lods
test
clc
sub
ins
(bad)
scas
les
nop
or
and
mov
jbe
xlat
rol
int
int
or
or
pop
jno
lds
xchg
mov
cmps
popf
xlat
loope
icebp
in
loop
inc
std
pop
xor
cmps
ds
pop
lods
mov
xor
mov
mov
sub
pop
std
sbb
mov
push
loopne
push
cmp
cmp
jnp
cmp
sbb
mov
mov
ins
scas
xor
loope
out
cmp
and
loope
daa
adc
push
sbb
mov
jp
push
mov
mov
loopne
add
ins
dec
in
mov
xor
(bad)
int
(bad)
mov
repz
iret
call
push
or
mov
jp
addr16
xchg
int
jne
pop
mov
dec
js
fmul
ja
pop
add
sub
mov
xchg
arpl
cli
sbb
mov
adc
jg
cmp
loope
sbb
add
inc
mov
inc
or
mov
v4fnmaddss
xchg
or
popa
fcom
sbb
pop
xor
retf
pop
es
test
jb
xor
cmp
sbb
mov
sub
cld
jmp
inc
mov
sti
pop
inc
shl
mov
push
out
retf
jmp
fcom
fistp
cwde
ss
fld
out
xchg
fwait
retf
shr
popa
xchg
call
adc
cwde
ds
retf
mov
push
pop
and
mov
fwait
xor
or
xchg
jnp
xchg
ins
pop
movs
sub
fnstcw
xchg
dec
cmp
idiv
mov
sub
js
and
sbb
jns
xchg
mov
and
jge
mov
int
push
aaa
jmp
xor
push
sbb
mov
pop
pushf
neg
xchg
cmps
or
int
std
cwd
mov
es
xchg
push
and
push
ins
or
ds
xchg
jge
clc
mov
mov
rol
sbb
out
xlat
inc
inc
daa
jp
push
xor
jg
(bad)
popf
mov
(bad)
adc
mov
or
ja
adc
cmp
push
xor
fidivr
clc
rcr
mov
push
cmp
ds
and
push
pop
sub
push
jbe
xor
cmp
sti
retf
stc
in
ret
mov
and
inc
push
xchg
cwde
push
out
mov
fild
rcl
cmp
xchg
xchg
call
dec
imul
sub
inc
xlat
sub
pop
jl
hlt
shl
fadd
xchg
inc
or
xor
mov
sbb
pop
daa
call
leave
ja
xor
jbe
sbb
jns
jge
pusha
jle
xchg
dec
sub
dec
cmp
jl
and
mov
scas
pop
retf
ficom
add
rcl
daa
push
xchg
and
xor
out
arpl
add
pop
adc
inc
inc
xor
xchg
fmul
cmp
scas
repnz
lods
into
xchg
in
sbb
aas
ret
cdq
mov
out
mov
inc
push
arpl
arpl
test
inc
pop
cmc
ss
ret
jb
cmps
sbb
push
mov
jne
mov
add
cmp
mov
mov
frstor
ins
and
cmp
mov
outs
jno
inc
pop
lods
aas
push
and
xor
and
push
retf
fisubr
sub
into
in
mov
iret
jmp
ins
int3
and
outs
int
in
push
aaa
std
shr
fistp
cmp
inc
jns
fwait
retf
mov
test
fmul
or
jge
sub
cld
xor
fyl2xp1
aad
add
int3
xchg
mov
cmps
lock
jecxz
sbb
adc
ins
jb
jo
jmp
mov
shl
cld
pop
sub
or
sub
rcr
test
adc
pop
mov
xchg
rcl
mov
fisubr
dec
xchg
aas
mov
jge
sbb
sub
pop
inc
inc
stc
mov
cli
jl
xchg
sub
mov
xor
mov
mov
push
sub
ret
call
sub
popf
pop
push
retf
sub
daa
scas
and
enter
dec
xchg
pop
cmp
mov
jp
outs
std
cli
in
aaa
jle
cs
sbb
data16
add
mov
nop
xchg
std
in
(bad)
mov
aaa
or
retf
inc
push
push
inc
ins
mov
or
lea
mov
out
push
push
mov
das
ds
call
push
pop
mov
pop
dec
sub
mov
jbe
xchg
xor
xor
pop
jmp
push
dec
jns
sub
test
rcl
xchg
ret
std
mov
jns
mov
adc
stos
cmp
cld
inc
mov
inc
xchg
or
rol
rol
pop
push
push
jle
popa
mov
mov
rcl
std
xlat
int3
cmps
and
(bad)
cmp
adc
push
sbb
or
cdq
mov
movs
pushf
loope
into
repnz
test
xor
adc
call
and
cmp
push
mov
mov
fld
pushf
and
in
add
fstp
xchg
(bad)
xchg
cwde
push
fcomp
xor
jb
repnz
pop
add
and
sub
adc
scas
mov
cmp
cmps
sbb
dec
or
mov
jbe
xchg
fsub
pop
cmp
mov
push
mov
add
push
inc
mov
jnp
xor
mov
rol
movs
and
ret
and
add
pop
jg
neg
ins
jbe
int3
out
dec
inc
xchg
hlt
int
pop
cmp
into
dec
cmps
adc
ret
or
mov
aas
bound
mov
sbb
adc
jge
fucomp
das
aam
test
call
cmps
adc
xchg
cli
jle
test
arpl
sbb
cmp
sub
stos
pop
cwde
fld
pop
jmp
or
jmp
cld
neg
div
ss
dec
xchg
lods
or
hlt
enter
call
xchg
mov
fild
sub
adc
ins
sub
cmps
mov
je
lea
mov
ss
lods
or
push
ss
inc
dec
(bad)
shr
sar
inc
gs
jne
xchg
ins
sbb
sbb
dec
sbb
sub
stos
(bad)
(bad)
hlt
(bad)
jnp
cmp
(bad)
cmp
push
jecxz
push
int
(bad)
xchg
sar
into
out
pop
popa
sbb
and
call
inc
int
pop
repnz
xchg
or
loop
jmp
xor
(bad)
push
jbe
xchg
pop
mov
pushf
jns
jmp
xchg
dec
adc
mov
bound
and
inc
or
push
jmp
je
leave
xor
addr16
cmps
test
mov
cli
cmp
shr
push
or
mov
or
idiv
add
adc
gs
pop
and
call
in
std
inc
mov
xchg
adc
inc
or
add
fucomp
dec
mov
push
push
dec
mov
pop
js
or
and
and
mov
retf
sbb
xchg
sbb
test
leave
out
jmp
std
(bad)
out
lods
stos
test
and
dec
pop
push
test
mov
cmp
pop
ja
push
idiv
or
mov
mov
call
xor
into
fbstp
add
xor
cmp
mov
jp
retf
inc
xchg
mov
jmp
push
sub
out
sbb
and
jbe
mov
ins
dec
lock
(bad)
cmp
repnz
pop
int
or
push
add
ins
mov
inc
ss
sbb
push
dec
dec
xor
ret
and
in
mov
jmp
ins
push
xor
xor
int
shl
or
imul
jmp
stos
dec
retf
adc
ins
out
push
data16
sub
sub
in
sub
mov
loope
lea
arpl
pop
jmp
leave
xchg
inc
in
ficomp
shl
arpl
cmp
cli
dec
bound
or
cs
add
cld
ss
mov
jge
cmp
call
hlt
xchg
mov
add
cmp
neg
push
push
(bad)
jbe
mov
sub
lods
test
push
fidiv
pop
dec
fistp
or
sbb
enter
jmp
shr
sbb
sbb
imul
or
jbe
enter
mov
sub
jge
fsave
loop
sbb
adc
fidivr
jmp
je
pushf
mov
sbb
int
sbb
outs
mov
retf
push
ja
sti
and
shl
or
retf
pushf
fwait
adc
xor
push
cli
les
cmp
cmp
or
pop
pop
nop
jl
adc
xchg
pop
jo
in
sar
(bad)
daa
(bad)
clc
(bad)
iret
(bad)
(bad)
pusha
xchg
inc
ins
cli
inc
mov
mov
shl
enter
div
pop
cmp
xor
movs
xor
js
popa
mov
daa
inc
xchg
cmp
neg
out
rcl
xchg
cmp
out
jbe
std
jl
cmp
ins
xchg
cld
scas
xchg
mov
int
std
(bad)
int
(bad)
(bad)
imul
jbe
stos
(bad)
popf
iret
lahf
adc
out
pop
ss
add
(bad)
in
adc
(bad)
out
push
xchg
sahf
pop
mov
cwde
call
mov
mov
mov
and
sbb
push
and
push
dec
mov
adc
ficom
(bad)
xchg
rcl
mov
neg
mov
popfw
pop
in
dec
ins
mov
pushf
inc
es
out
xor
(bad)
loope
sub
pop
sbb
int
(bad)
jge
xchg
int3
push
scas
add
or
retf
jb
lods
inc
pushf
xlat
sbb
inc
and
cwde
ins
jp
push
push
mov
retf
lods
jmp
sub
or
les
xchg
pop
cli
cmp
setno
adc
mov
shl
mov
mov
jmp
adc
xor
lods
pop
ds
call
movs
test
addr16
cmps
shr
cmp
mov
rol
shl
sbb
inc
pop
cmp
mov
adc
pushf
mov
mov
dec
mov
mov
and
(bad)
sub
stos
pop
data16
pushf
cmps
mov
dec
cli
fmul
pop
shl
dec
and
clc
fyl2xp1
(bad)
lock
jp
dec
dec
xchg
jge
sbb
push
or
jae
sbb
test
jl
jne
jae
inc
xor
xchg
mov
or
scas
mov
ss
or
div
xchg
inc
pop
int3
sbb
data16
xor
cmc
in
addr16
in
jmp
call
(bad)
push
imul
mov
sub
cdq
xor
ror
loop
cmp
xchg
leave
dec
jge
adc
jl
pop
dec
fistp
dec
inc
mov
jle
cmc
push
push
cmp
push
inc
mov
dec
ss
and
xchg
(bad)
(bad)
fucomp
pop
pop
pop
dec
xchg
jns
xchg
lods
imul
pop
jmp
dec
push
std
int
(bad)
cld
push
shl
std
idiv
mov
out
push
dec
xchg
xchg
test
add
xchg
imul
inc
mov
mov
test
xchg
xchg
xlat
sbb
pop
or
rcr
adc
adc
pop
idiv
jne
or
cmp
add
(bad)
pop
jbe
jne
push
cs
imul
cdq
imul
aaa
(bad)
xlat
pop
sub
setns
loop
sub
mov
jno
pop
cli
rol
cmp
gs
scas
int
and
xor
dec
jl
xlat
mov
std
mov
out
retf
cmp
jnp
pop
ins
ja
in
dec
ss
mov
xchg
call
cld
jo
sti
(bad)
int
paddusw
xchg
inc
fucomi
ins
sub
lahf
test
cmp
adc
daa
sbb
mov
xchg
dec
xlat
push
cmp
aaa
loopne
lods
push
inc
call
in
(bad)
xor
rcl
push
mov
xchg
adc
sub
rcr
out
cdq
inc
sbb
inc
jge
nop
inc
stos
ins
jge
lods
xchg
lods
iret
adc
enter
gs
int3
pop
in
xchg
sub
inc
mov
push
fsub
and
sub
out
sub
or
fistp
das
add
mov
mov
mov
mov
push
mov
leave
jl
mov
mov
repnz
sub
out
push
dec
dec
mov
ds
dec
mov
inc
scas
xchg
test
movs
fisubr
mov
or
or
jns
or
inc
jns
in
or
jmp
mul
aam
add
mov
mov
push
shl
push
mov
xor
add
mov
add
adc
push
shl
dec
test
mov
mov
mov
test
sbb
aaa
dec
je
icebp
ss
jmp
test
mov
jmp
inc
sub
leave
adc
outs
stos
popf
jbe
es
ins
mov
xchg
stc
xchg
xchg
xchg
cmp
clc
add
cld
es
lods
shl
ror
pop
jne
jne
jnp
xor
xor
out
aad
mov
cdq
pop
sub
sbb
mov
sar
jp
int
mov
call
cmp
pop
mov
iret
out
clc
out
(bad)
fidivr
ss
and
xchg
dec
jae
mov
dec
fs
jge
jge
enter
cld
in
push
jl
dec
shr
(bad)
scas
bound
imul
or
mov
or
aaa
cmc
sbb
aaa
xor
pop
out
in
or
xchg
ins
stos
push
mov
adc
loope
scas
or
cmps
cmp
push
push
or
adc
aas
push
mov
mov
dec
add
xor
add
rol
xchg
jnp
ret
xchg
imul
cmp
rcl
loopne
lahf
lods
sbb
enter
pop
lock
shl
xchg
(bad)
mov
xchg
add
sub
ret
in
(bad)
aaa
sbb
mov
cmps
push
movs
imul
lods
dec
mov
lods
cmp
pop
or
pop
mov
jle
pop
mov
xchg
bound
cmp
int3
pop
pop
mov
cmp
add
call
sub
mov
addr16
adc
ss
dec
sub
ja
xchg
fwait
mov
lock
inc
and
add
es
xchg
push
xor
push
xor
ins
adc
push
xchg
fwait
cmp
std
fldenv
aam
sub
loop
mov
sub
rol
mov
stos
(bad)
ss
int
fdivr
(bad)
bound
imul
pop
mov
fs
jg
xor
xchg
mov
(bad)
in
and
xor
sub
jg
ja
inc
inc
jnp
mov
sub
or
jmp
hlt
push
pop
inc
dec
sbb
outs
neg
xchg
rcr
fdiv
(bad)
es
push
adc
adc
xchg
xchg
sbb
test
adc
xor
inc
ins
stos
jmp
(bad)
and
fsub
adc
push
test
std
cli
sub
cmps
loope
shl
dec
prefetch
or
mov
and
xlat
dec
mov
dec
daa
xor
sbb
jmp
loop
out
mov
push
mov
or
cmp
jmp
cmp
scas
fsubr
xchg
xchg
jb
in
xchg
sub
int
popa
(bad)
push
fbld
and
stos
pop
inc
jo
imul
lea
fdiv
popa
aaa
repnz
jecxz
scas
jb
aas
push
and
cmps
imul
jmp
stos
popf
outs
sahf
es
shr
push
loopne
clc
and
or
(bad)
mov
dec
and
cli
out
jno
xor
lahf
mov
retf
push
daa
pop
loopne
icebp
icebp
dec
outs
and
inc
dec
test
std
fmul
outs
mov
mov
shl
ret
and
lods
push
icebp
sbb
popf
test
push
sbb
movs
add
test
push
lock
cld
aaa
pop
mov
xor
dec
sub
xchg
adc
(bad)
(bad)
lods
xchg
movs
mov
sub
sub
stc
cld
repnz
stos
loopne
or
jge
int
push
fidivr
xor
adc
and
mov
fisttp
and
mov
imul
sahf
adc
in
je
jb
js
mov
jecxz
push
je
inc
fwait
jne
lahf
push
inc
jl
inc
sti
jmp
sbb
in
pop
jo
or
retf
inc
cmp
mov
or
jne
pushf
add
jmp
mov
and
mov
clc
and
lea
sub
in
neg
lock
inc
loopne
pop
mul
xor
mov
jp
scas
aad
popf
lods
test
sbb
pop
fwait
jp
ror
retf
push
pop
dec
mov
sub
mov
call
stc
sbb
jecxz
and
dec
pop
scas
xchg
imul
dec
icebp
jge
or
sbb
jmp
mov
mov
repnz
cdq
push
shr
dec
ds
leave
(bad)
jg
in
arpl
stos
ret
mov
imul
jb
jo
push
pop
and
xor
pop
out
xchg
leave
dec
sti
inc
sbb
ins
mov
xor
cmp
xor
test
std
inc
out
push
push
call
cmps
mov
and
ins
and
(bad)
jp
xlat
mov
jmp
or
mov
pop
xchg
dec
or
push
cwde
push
fistp
mov
ss
add
xor
push
and
jbe
add
dec
mov
movs
mov
retf
jl
add
inc
je
jle
ds
jbe
dec
pop
cmps
sub
aas
mov
(bad)
cmp
cmps
call
pop
fdiv
and
pop
adc
jno
repz
mov
into
mov
ror
mov
inc
test
push
jne
push
jle
jle
loopne
sti
adc
xchg
leave
popa
leave
jnp
ror
mov
stos
(bad)
push
sub
repz
stc
sub
sar
arpl
imul
cmps
mov
cdq
and
xlat
xor
sbb
out
push
inc
push
enter
sbb
popa
test
mov
(bad)
fcomp
scas
mov
shl
and
adc
jl
pop
das
cmp
cdq
loope
and
mov
pushf
rcr
fimul
jp
xlat
pop
cli
ins
fldcw
call
in
xlat
cmp
ja
ret
fadd
dec
mov
loope
jb
addr16
inc
sub
xor
xchg
xchg
cmps
and
loopne
fdivr
mov
push
jg
push
arpl
or
lods
push
not
add
(bad)
mov
jmp
pop
cmps
or
inc
push
gs
xchg
xchg
xchg
div
loop
imul
cs
or
cmp
jo
mov
stc
mov
nop
xor
mov
adc
push
int
or
mov
lods
jb
inc
jl
scas
mov
jmp
je
xchg
cmp
leave
std
or
cmp
daa
pop
inc
lods
inc
imul
pop
sbb
push
xchg
inc
in
gs
cmp
push
cmp
push
lahf
repz
(bad)
cld
sub
mov
std
dec
int
mov
push
popa
adc
fisttp
test
xor
in
jmp
mov
mov
arpl
cmp
popa
mov
out
xchg
bound
fstp
ret
or
xor
fnstcw
scas
outs
popa
fiadd
or
xor
sbb
(bad)
xchg
dec
push
xor
cmp
push
rcl
frstor
or
clc
push
mov
dec
mov
(bad)
dec
inc
dec
call
retf
aas
push
popf
in
mov
jl
push
movs
das
cmp
sub
xchg
xor
dec
sbb
push
add
aas
test
mov
ror
mov
stc
out
push
sub
dec
neg
add
loopne
cmp
xor
sbb
leave
xlat
xlat
or
imul
dec
bound
jle
mov
pusha
xchg
mov
mov
adc
cmps
or
or
push
jge
add
jmp
stc
adc
push
add
jmp
pop
dec
xchg
dec
and
call
mov
(bad)
jb
pop
scas
es
loop
xor
cmp
sar
test
ret
test
and
popf
adc
aaa
xor
gs
jb
cmp
dec
div
xchg
pop
cmp
test
push
mov
mov
and
int
cmp
xor
mov
pop
push
mov
out
int3
sbb
call
mov
push
(bad)
push
scas
push
inc
pop
movs
pushf
adc
xlat
dec
push
in
test
or
dec
popa
push
jno
sub
adc
int3
leave
repnz
retf
sbb
repz
fwait
dec
push
mov
pop
push
cwde
cmps
ror
mov
sbb
mov
dec
mul
add
mov
(bad)
int
ds
scas
cmp
(bad)
add
jge
iret
ret
pop
jb
mov
movs
pop
jns
adc
fucomp
add
shl
sbb
movs
call
push
or
jp
jns
push
pushf
int3
stc
shr
fwait
inc
call
mov
fs
outs
push
ins
xor
shl
(bad)
shl
in
(bad)
sbb
dec
ds
and
jle
rcr
or
nop
push
lds
cmp
push
xchg
and
outs
popa
dec
xchg
mov
out
or
imul
ins
bound
push
gs
mov
ins
fiadd
loopne
std
cli
std
imul
xor
lods
xchg
bound
ins
outs
pusha
fdivr
add
fmul
sar
xlat
fsubr
xor
test
add
fwait
push
dec
rcl
outs
cmp
addr16
pop
push
jb
clc
ins
mov
cdq
lock
inc
pop
lods
popf
push
fmul
push
ret
xchg
sub
adc
ss
es
nop
jmp
pushf
jmp
bound
adc
outs
out
out
enter
cmp
mov
inc
push
cmp
popa
jl
fwait
mov
pop
or
aam
ds
pop
test
int
sbb
jmp
(bad)
movs
pop
ins
shr
or
inc
test
inc
pop
or
jb
jo
push
jge
mov
es
and
ret
push
in
es
mov
sahf
(bad)
xchg
ja
imul
jmp
repz
push
imul
test
mov
popf
popa
pop
jnp
pop
xor
sub
retf
cmp
fild
sahf
pushf
cmps
jb
cmp
xlat
stos
ret
mov
push
xor
fistp
fst
sbb
stc
jecxz
dec
pushfw
push
sbb
mov
jns
mov
fldenv
and
aas
adc
pop
aad
cdq
adc
sbb
jecxz
sub
xchg
xchg
(bad)
pop
movs
(bad)
in
xchg
push
stc
cmp
sub
fist
pop
ret
loop
xchg
jae
enter
fmul
stc
fwait
arpl
xchg
jecxz
sbb
fcmovnu
bswap
pop
(bad)
pop
pand
push
mov
add
xor
pop
pop
js
ins
ja
push
shl
cmc
mov
fcmovbe
pushf
and
jecxz
sub
xchg
cmp
mov
jl
sbb
or
ds
out
cs
push
out
push
xor
or
and
lea
les
push
shl
neg
pop
(bad)
pop
mov
inc
jns
mov
fwait
sahf
or
xor
cld
test
and
lea
fld
pop
ss
rcl
mov
(bad)
lahf
mov
icebp
repnz
loope
je
inc
dec
cmp
jg
jmp
sti
inc
cwde
popa
ficomp
leave
adc
cli
push
in
jecxz
sbb
mov
pusha
ins
inc
add
repz
add
add
out
xchg
js
in
aaa
adc
aaa
push
outs
inc
pop
mov
mov
mov
push
inc
jae
ror
loop
jae
iret
push
xor
cld
fucomi
push
outs
fwait
aas
aaa
inc
add
xchg
nop
xchg
dec
jb
repz
jl
mov
imul
cmp
dec
stos
dec
popf
xchg
fwait
pop
(bad)
in
fmul
adc
shl
inc
xchg
idiv
or
imul
jno
stos
ror
mov
sqrtps
data16
jb
pusha
adc
dec
stc
mov
pop
mov
ret
in
push
int3
sahf
fwait
jbe
mov
mov
pusha
mov
pop
sahf
mov
int3
dec
add
(bad)
jl
int3
jecxz
push
dec
retf
push
or
popf
fnsave
stos
ret
aam
jbe
ja
push
outs
add
and
push
loopne
adc
aad
sub
clc
sbb
cmc
arpl
in
lsl
(bad)
cmc
ds
fsub
jecxz
aaa
les
idiv
in
sar
push
clc
dec
popf
movs
mov
jle
loop
jle
stc
stc
mov
pop
cmps
pop
sub
push
jle
jnp
pop
out
test
mov
or
jns
scas
inc
test
int3
(bad)
icebp
(bad)
call
lds
(bad)
ja
jle
sub
pop
jge
repnz
and
(bad)
mov
leave
fsub
dec
adc
popf
in
nop
aaa
mov
jo
stos
ret
xor
push
lahf
xchg
int
lods
xchg
xor
sti
xchg
data16
call
cmp
mov
push
arpl
iret
adc
xchg
daa
pop
ja
pusha
or
sti
test
out
inc
sbb
vpscatterdd
push
bsr
fld
mov
pop
pop
mov
cmps
mov
(bad)
push
addr16
pop
out
les
ins
outs
dec
call
dec
mov
int3
cmova
inc
or
out
ins
dec
or
loopne
into
pop
sub
int3
outs
in
sbb
daa
inc
movs
jg
pop
out
xchg
shr
mov
call
into
mov
outs
hlt
cmove
lods
ret
jg
shl
call
out
loope
dec
mov
xor
add
pop
stc
push
ds
mov
popa
setge
dec
push
jg
out
das
adc
mov
daa
sbb
cdq
imul
or
cld
jp
das
fs
mov
lods
iret
mov
call
dec
mov
lahf
sub
sub
add
inc
add
int3
mov
sub
iret
jp
inc
in
mov
ror
lea
out
call
mov
push
retf
rcl
adc
cmp
sub
stos
ins
inc
ja
and
mov
sub
mov
sub
sub
mov
mov
outs
aaa
movs
into
pop
mov
sub
mov
mov
scas
lahf
(bad)
fsubr
mov
(bad)
jno
jecxz
cmp
arpl
rcl
(bad)
fsub
xchg
scas
sub
pop
mov
mov
mov
ret
mov
push
adc
adc
mov
outs
ss
cld
xchg
xchg
mov
arpl
in
sub
sbb
cmp
sbb
jno
mov
cs
xchg
scas
outs
lods
je
fcom
mul
aam
pushf
or
or
fld
mov
push
outs
sti
shl
mov
cld
(bad)
jnp
cdq
outs
rol
mov
mov
cmp
lods
mov
inc
xchg
scas
pop
scas
lahf
ret
adc
cwde
stc
adc
out
and
pop
scas
int3
bound
aaa
fdivr
adc
cmp
jl
sbb
nop
mov
pushf
daa
xchg
(bad)
hlt
mov
cmp
rol
movs
dec
fsubr
enter
lods
ds
cld
jns
or
push
or
mov
mov
dec
cmps
scas
xchg
scas
jo
push
and
rcl
adc
jle
mov
ficom
or
and
cdq
scas
cmp
pop
(bad)
mov
scas
cmp
ret
scas
inc
scas
ins
mov
je
cld
loop
and
cs
push
jmp
mov
mov
or
mov
or
cld
mov
idiv
inc
sahf
mov
rcl
xchg
push
sbb
cmps
call
xchg
movs
mov
pop
sbb
sub
push
fwait
adc
call
and
call
pushf
cwde
push
sbb
mov
fistp
xchg
(bad)
jg
call
fstp
nop
iret
push
fmul
sbb
pop
call
pop
mov
rol
xor
and
or
leave
mov
dec
test
and
pop
movs
fwait
int3
fwait
or
outs
add
adc
rcr
xlat
fwait
or
(bad)
repz
mov
call
repz
and
pop
mov
sbb
sbb
push
add
add
call
dec
push
fld
int3
shr
pop
(bad)
repz
and
aam
inc
push
sbb
add
adc
sbb
jg
adc
xor
ltr
adc
fwait
or
nop
sbb
or
call
dec
or
add
mov
jg
or
pop
sub
add
sar
aas
sub
inc
(bad)
in
pop
or
jle
mov
mov
nop
rcr
(bad)
nop
dec
add
fisttp
test
sbb
pop
mov
sbb
(bad)
pop
cmc
cmps
pop
inc
fbld
fldenv
cmps
pop
mov
pop
dec
fbld
fild
adc
pop
inc
iret
lods
cdq
push
fbld
fild
cmps
pop
push
outs
sbb
clc
mov
out
es
mov
adc
jecxz
fisttp
sbb
sbb
pushf
ss
sub
sbb
fisub
or
mov
(bad)
and
retf
aad
(bad)
mov
sbb
push
cmps
xor
js
int
mov
sahf
out
out
cmps
mov
sbb
dec
daa
fist
mov
clc
iret
(bad)
mov
dec
xchg
retf
push
and
ficomp
push
retf
add
jecxz
add
ins
inc
cdq
cmp
cmp
mov
fadd
fsub
dec
(bad)
fild
mov
jne
push
stos
ficom
mov
stc
iret
(bad)
sti
fisttp
pop
dec
pop
inc
pop
mov
or
movs
pop
lea
aaa
lds
inc
inc
sbb
sub
fldcw
sbb
std
jg
lahf
sub
push
fist
or
mov
dec
mov
jecxz
sub
js
sub
pop
push
push
test
(bad)
dec
dec
jns
cmps
fistp
cmp
(bad)
or
pop
mov
sub
pop
jge
aas
push
in
lods
xor
mov
(bad)
xlat
outs
dec
mov
and
mov
loop
cmp
push
jl
shl
cld
dec
cld
and
inc
cld
fs
mov
or
mov
ja
jg
(bad)
dec
cmc
xchg
in
jl
cld
dec
sahf
nop
dec
xor
ins
jl
jp
jl
mul
dec
hlt
cld
sub
cmp
mov
lods
(bad)
cld
jae
(bad)
imul
dec
jge
mov
cmp
add
movs
mov
inc
add
mov
or
mov
ds
repnz
mov
popa
mov
jg
mov
lods
hlt
pop
mov
loop
(bad)
out
lahf
xor
addr16
cld
fs
mov
daa
les
ja
mov
add
call
push
test
movs
shl
add
mov
xor
ja
mov
mov
ror
jl
cld
or
lahf
sar
push
mov
pop
test
lods
arpl
fcom
test
movs
mov
jnp
add
jecxz
mov
in
rcl
loopne
or
fwait
jl
div
les
ins
loopne
loopne
js
mov
jp
mov
xor
inc
cmps
fs
lods
mov
mov
ja
or
js
lods
shl
fcomp
cli
les
arpl
shl
inc
rcr
lahf
shl
retf
out
jl
ror
cmp
push
cmp
out
jp
and
dec
aaa
clc
daa
in
les
cwde
jnp
rcr
addr16
and
lahf
inc
ja
pop
pop
int3
and
js
in
mov
inc
in
push
xor
mov
cmp
push
fwait
mov
and
pop
repz
dec
js
inc
fisubr
xchg
jle
cdq
sbb
push
mov
mov
test
jae
pushf
test
pop
dec
jns
mov
(bad)
cmc
cmp
fmulp
pop
ficomp
pop
es
xor
ds
fimul
dec
iret
or
cmp
dec
pop
out
dec
inc
mov
jno
adc
cmp
call
mov
add
fcomp
inc
aam
cmp
jae
mov
fidivr
std
inc
xchg
je
xchg
push
sbb
hlt
cmp
push
sbb
push
pushf
mov
outs
cmp
imul
adc
xor
popf
jl
xchg
int3
push
aaa
rol
test
xor
rcl
xchg
imul
pop
loop
ins
jbe
xchg
and
fcom
jbe
movs
mov
mov
call
js
scas
dec
neg
and
shl
cmp
xchg
mov
adc
fbld
scas
les
jbe
dec
cmps
adc
push
movs
mov
xor
scas
aam
xor
fwait
dec
int3
xchg
add
mov
je
test
push
pop
add
add
sub
mov
retf
fsubr
add
push
arpl
or
mov
push
ss
mov
xchg
sub
pop
mov
pop
ror
dec
in
test
sbb
aas
sbb
hlt
(bad)
sub
mov
jbe
test
mov
and
push
out
cmp
mov
ret
mov
xor
out
pusha
hlt
fwait
xchg
dec
sub
mov
add
or
aas
mov
(bad)
fldenv
or
enter
mov
call
and
mov
sub
sbb
retf
sub
and
das
add
push
pop
loopne
add
jbe
push
or
out
ror
pushf
clc
mov
inc
inc
and
mov
or
xchg
lea
xor
dec
xor
faddp
retf
add
rcr
dec
pop
sahf
inc
xchg
mov
das
add
xor
gs
add
test
add
or
nop
cmp
call
in
ror
mov
add
retf
mov
not
arpl
fwait
xor
sub
retf
rol
cld
or
in
jl
jmp
repnz
mov
add
outs
sbb
loopne
rol
add
gs
movs
cmp
mov
sub
dec
xchg
lods
pop
or
add
aas
fld
mov
mov
retf
dec
retf
stos
or
retf
and
ror
sub
mov
test
fwait
xor
mov
inc
inc
iret
sub
or
sub
cld
pop
or
sub
mov
jl
popf
cmp
mov
fs
rdpmc
dec
sub
mov
xchg
int
push
(bad)
call
jmp
sub
int3
ins
dec
inc
or
xor
cmp
outs
and
or
cs
stos
inc
outs
loopne
dec
xchg
popf
mov
lods
or
call
add
int
cs
dec
push
or
inc
jmp
scas
addr16
dec
mov
and
adc
push
fdivr
cli
push
out
jb
iret
lods
in
adc
outs
mov
iret
dec
mov
fisttp
mov
out
lea
iretw
in
dec
inc
in
test
and
bound
push
adc
push
add
in
clc
(bad)
in
movs
jo
jg
iret
ror
pop
in
fistp
in
sub
iret
in
cmps
dec
and
jo
fs
dec
data16
dec
mov
das
add
sub
call
pop
dec
jg
iret
mov
pop
pop
jmp
adc
push
xor
hlt
dec
fild
test
out
pop
(bad)
fild
lds
inc
out
push
iret
pop
pop
ins
retf
int3
dec
dec
mov
addr16
ins
pop
inc
out
sub
pop
outs
in
dec
(bad)
outs
fs
pushf
out
and
mov
sub
inc
outs
in
imul
sub
ins
inc
int3
outs
jl
xor
(bad)
ja
ins
inc
dec
out
dec
(bad)
int3
dec
stc
ret
sub
push
mov
shr
or
arpl
dec
outs
sub
sar
(bad)
int3
dec
stc
setle
or
and
loope
add
lahf
and
cwde
imul
add
out
push
ror
jne
dec
jno
test
call
add
push
icebp
and
cmp
push
mov
push
mov
xor
push
ja
pop
ss
std
inc
popf
aaa
je
cmp
je
jle
adc
aas
cmc
add
aad
cmc
cmps
cwde
xchg
sbb
adc
add
(bad)
fwait
sbb
scas
adc
pop
stc
or
ja
cmp
mov
lods
icebp
aam
fdivp
sahf
cmp
not
cmc
iret
gs
mov
lds
mov
adc
call
popf
sbb
xchg
inc
hlt
cmc
mov
push
movs
(bad)
xlat
or
fild
mov
pop
out
addr16
inc
xor
and
movs
aad
cmc
cmps
push
ret
retf
and
ja
aaa
mov
and
imul
cld
aaa
xchg
xor
mov
fisub
mov
xor
popf
xchg
xor
cmps
aaa
xor
inc
popa
push
test
mov
std
pop
jno
jae
mov
aad
sar
inc
mov
mov
sbb
movs
push
in
lds
jae
xchg
push
cmp
into
xchg
leave
pop
xchg
ja
inc
clc
test
clc
xchg
cwde
push
mov
inc
mov
mov
push
xlat
mov
nop
jae
xchg
sbb
xchg
arpl
pop
xor
dec
xor
aaa
sbb
mov
xchg
jae
xchg
dec
push
movs
fnsave
xchg
jb
stos
cmc
dec
sahf
push
sahf
mov
push
repz
push
imul
inc
xchg
jne
adc
pop
mov
xchg
push
cli
imul
push
cmc
fisubr
or
std
push
sbb
jg
push
adc
addr16
jb
ins
aad
jle
inc
sbb
xor
push
mov
ins
and
mov
div
ja
mov
iret
ja
add
retf
mov
(bad)
pushf
and
or
fcmove
mov
jg
(bad)
inc
(bad)
test
and
retf
jmp
mov
ins
jecxz
arpl
(bad)
aas
xor
or
push
mov
pop
lea
sub
and
mov
retf
pusha
hlt
stos
xor
mov
arpl
inc
call
xor
mov
(bad)
and
imul
and
mov
out
add
popa
retf
add
retf
in
mov
push
out
or
pusha
retf
test
sub
or
jmp
stos
das
mov
xor
sub
sti
pop
jbe
ret
dec
retf
mov
fcmovne
das
(bad)
pop
jbe
ret
dec
retf
mov
ffreep
dec
test
retf
shr
inc
and
rcr
fidiv
int
add
sub
daa
and
add
or
iret
add
jae
pop
inc
in
mov
inc
test
retf
and
mov
mov
mov
shl
or
(bad)
and
mov
sub
dec
pusha
sti
mov
mov
and
and
ret
out
and
fst
pusha
fwait
nop
retf
stos
hlt
add
pop
or
fwait
ror
adc
cmp
mov
mov
lods
pop
or
xchg
dec
cwde
push
push
stc
mov
jmp
aam
xchg
clc
stos
mov
pop
addr16
pop
stos
mov
and
repz
adc
shr
(bad)
mov
mov
push
mov
and
popf
xor
inc
dec
add
or
loop
jge
repz
call
xchg
repnz
call
enter
inc
or
jo
add
fwait
adc
pop
daa
ja
cmps
jae
push
ror
call
xchg
rcl
push
jle
mov
out
pusha
enter
fs
mov
(bad)
sbb
sbb
sbb
pushf
sbb
js
sbb
mov
jae
sub
fcomp
fcomp
pop
xchg
lahf
xchg
sub
scas
push
fistp
adc
sahf
xor
push
out
push
mov
or
mov
xchg
lock
xlat
and
fisub
jp
leave
mov
aam
sbb
out
iret
pop
cmp
in
mov
shr
jne
pop
dec
pusha
pop
lea
daa
sbb
fmul
mov
cmp
mov
cmp
dec
imul
lea
and
mov
or
mov
data16
pop
xchg
lods
dec
dec
pop
sub
xchg
rcl
xor
int
lahf
shl
leave
cmp
sbb
xchg
xor
xchg
(bad)
ficom
cmp
cli
ins
icebp
mov
cmps
lods
dec
ins
jmp
pop
jne
aas
sub
imul
daa
push
scas
in
retf
pop
cmp
fldcw
inc
push
push
lock
mov
jae
imul
mov
dec
jle
push
enter
loopne
mov
cmp
push
mov
ret
aad
les
pusha
inc
mov
ret
fmul
les
inc
xor
retf
aam
aam
push
test
push
dec
inc
test
in
aam
into
ret
push
mov
dec
daa
dec
mov
mov
push
jno
dec
fs
mov
leave
dec
mov
jmp
push
pop
mov
xchg
mov
movs
jle
cmpxchg8b
xchg
stos
sbb
dec
retf
ror
int3
jo
xor
lods
sbb
dec
js
mov
or
cld
out
lods
lahf
sbb
mov
rol
and
mov
scas
mov
and
jns
movs
mov
into
xchg
repz
cld
push
or
gs
movs
mov
(bad)
repz
shr
add
cmps
movs
stos
shl
out
(bad)
aam
mov
push
or
jl
scas
(bad)
iret
(bad)
hlt
clc
aam
mov
and
shr
(bad)
test
mov
or
in
out
scas
lods
mov
xor
dec
scas
scas
scas
int
loop
lds
outs
push
inc
sti
mov
loop
out
retf
or
retf
movs
std
leave
call
test
ins
dec
mov
retf
in
rol
iret
nop
sti
lock
adc
xor
(bad)
cmp
or
dec
popf
int
xchg
sub
jno
retf
test
out
inc
dec
inc
sub
loope
or
mov
inc
dec
fcom
lock
out
sub
es
inc
les
(bad)
std
mov
inc
cmp
(bad)
cdq
into
ja
ins
lods
out
in
mov
ret
mov
or
(bad)
pop
mov
sbb
mov
jb
and
movs
push
xchg
jns
(bad)
cmc
dec
cdq
ja
inc
mul
mov
sahf
xor
daa
mov
nop
ss
xchg
adc
repz
sbb
add
test
pop
hlt
fdivr
jne
and
movs
sbb
push
mov
dec
test
xlat
es
and
xchg
and
xor
neg
lahf
cmp
idiv
adc
pop
adc
inc
xchg
fmul
int3
(bad)
inc
pop
std
out
pushf
out
xlat
adc
mov
pop
pop
dec
dec
xor
movs
int3
and
mov
ins
xor
aas
and
mov
out
adc
xchg
fdivp
dec
cmp
push
sub
shl
aas
pop
push
rcl
cmp
mov
jp
jns
shr
mov
cld
sbb
sub
fs
fsubr
add
and
(bad)
or
stc
fs
jno
sub
pop
fnsave
fs
xor
aaa
xchg
cmp
daa
in
ficomp
jecxz
(bad)
sub
imul
sbb
sub
out
add
int
test
jg
sbb
and
jno
xor
in
not
int3
push
cld
push
das
test
ss
xor
test
ret
cmp
adc
or
sbb
jbe
sbb
sbb
sbb
imul
jb
aas
cmp
in
imul
pusha
rcr
pop
fidivr
adc
push
jno
sub
sbb
jg
ds
xor
or
adc
adc
cmp
das
fiadd
icebp
cmp
sub
add
mov
repz
jbe
sub
or
adc
cmp
ins
fbstp
adc
aad
shl
cmp
cmp
adc
xor
adc
pusha
jecxz
icebp
(bad)
jg
and
sub
jno
sbb
or
jg
sub
xor
sub
sbb
or
adc
xor
cmp
ins
(bad)
aas
cmc
or
mov
sub
or
xor
cs
push
out
push
sub
adc
ins
out
int
xlat
outs
out
pop
(bad)
outs
xlat
xor
add
bound
pop
shl
div
pop
mov
mov
sub
out
fcom
jae
sub
push
cmc
and
inc
call
outs
icebp
dec
mov
xchg
rcr
xchg
out
xor
jae
fs
dec
xchg
pop
out
pop
aam
repnz
call
jg
push
js
inc
shl
dec
xchg
dec
aam
imul
pop
jmp
jbe
jae
jb
pop
lea
sub
jge
outs
fisub
out
jne
das
mov
retf
jg
xor
pop
imul
in
das
shl
mov
push
enter
not
jle
imul
popf
push
nop
pop
test
(bad)
jg
push
xchg
jb
jae
jge
and
fidiv
out
dec
retf
sub
push
xchg
and
push
nop
xor
dec
std
xor
ds
sub
jbe
sub
dec
sti
push
out
jg
and
push
xchg
pop
lds
dec
xchg
gs
and
sub
imul
popf
push
xchg
push
mov
outs
popf
sub
sub
je
jnp
push
lock
pop
mov
dec
out
and
sub
dec
repz
js
sub
ds
pop
fdiv
xor
ins
mov
ds
repz
mul
push
int
retf
pop
mov
(bad)
pop
aam
retf
sub
dec
popf
ins
call
jp
sub
jp
jbe
inc
sti
(bad)
aam
retf
ja
pop
call
push
sti
aaa
cld
outs
sti
jnp
das
out
and
dec
out
(bad)
ds
ins
out
data16
fcomp
push
ds
(bad)
cmp
sbb
cmp
mov
outs
int3
jle
or
add
cmp
mov
push
xlat
aas
shr
je
xchg
cld
and
je
push
leave
cmp
mov
cdq
daa
mov
das
out
sub
and
aam
xchg
sbb
jno
sub
xchg
outs
scas
es
and
dec
popf
outs
cld
outs
mov
sub
cli
retf
in
push
mov
jge
sti
pop
sbb
popf
jl
cmp
cld
fnstcw
sbb
mov
fsub
mov
ficomp
dec
std
sub
xor
jge
push
xchg
sbb
pop
stos
aas
cwde
cmp
or
rcr
add
jne
js
jge
xor
and
add
cs
cmps
aas
cmp
cwde
sub
pop
mov
mov
cwde
cs
enter
call
jno
sbb
mov
pusha
mov
or
add
sbb
out
mov
mov
mov
lock
ds
(bad)
aas
outs
fsubr
mov
mov
lods
and
or
add
cdq
mov
mov
fwait
mov
scas
movs
lea
mov
(bad)
mov
jmp
add
mov
rcl
popf
fcom
lahf
loopne
call
xchg
sar
cld
mov
lods
xchg
adc
mov
cdq
mov
mov
sbb
lods
mov
test
mov
jecxz
arpl
ret
out
mov
jg
neg
mov
(bad)
sti
mov
dec
mov
mov
loopne
mov
addr16
cld
call
jmp
test
jecxz
or
sti
repnz
jecxz
fdivr
repnz
rcr
mov
(bad)
int
jmp
nop
sti
pop
dec
mov
xchg
xchg
adc
xchg
jecxz
in
mov
in
mov
sub
sbb
mov
test
mov
imul
in
mov
gs
inc
(bad)
fisub
lods
inc
scas
inc
in
addr16
int
ss
neg
std
and
mov
(bad)
(bad)
pop
icebp
mov
jl
xor
aas
cwde
cs
mov
cli
je
jg
dec
jmp
fs
xor
fs
pop
mov
adc
arpl
shl
adc
push
int
jmp
(bad)
bt
cmp
mov
pop
xchg
pusha
fdiv
(bad)
xor
daa
rcl
ja
bound
scas
pop
stos
movs
push
loopne
movs
xor
jle
add
into
div
in
inc
mov
aaa
call
and
les
(bad)
daa
stc
jnp
push
(bad)
aaa
clc
sbb
cmps
push
fndisi(8087
xor
popa
lods
and
adc
in
aam
add
outs
fdiv
jl
aaa
sti
sbb
stc
push
fdiv
sbb
ficomp
outs
call
jecxz
les
test
sti
jp
outs
cld
scas
add
cbw
and
cmp
adc
std
pop
loope
aaa
sti
popa
(bad)
data16
jns
es
xor
mov
mov
add
gs
and
adc
lods
inc
dec
mov
(bad)
or
je
push
pop
hlt
inc
jno
push
xchg
adc
je
dec
std
inc
loopne
inc
sahf
add
or
scas
jae
aaa
stc
popa
mov
(bad)
push
mov
push
dec
gs
scas
inc
sbb
or
dec
fdivr
frstor
test
add
fwait
imul
pop
hlt
xor
push
push
fwait
and
out
dec
stos
inc
pop
in
std
push
and
push
dec
test
jae
adc
je
jne
jno
xchg
and
pusha
xchg
and
inc
cmp
push
je
pusha
xlat
dec
lds
in
inc
cmp
ror
xor
in
and
add
xor
push
cmps
aaa
mov
dec
adc
ja
dec
mov
dec
mov
inc
dec
fadd
adc
imul
int3
ss
jo
xor
xor
jo
pop
mov
cmps
push
in
ficom
sbb
push
(bad)
sub
push
sti
ss
je
push
pop
retf
jg
jae
adc
dec
jne
inc
mov
and
sbb
mov
add
and
loope
bswap
push
add
xor
ret
nop
sbb
jg
ins
xchg
pusha
daa
xchg
xor
ins
rol
outs
or
inc
mov
add
(bad)
xlat
xchg
add
rol
ins
mov
push
mov
push
mov
in
sub
mov
(bad)
ins
xor
les
retf
arpl
pusha
jne
mov
mov
inc
mov
push
and
and
mov
pop
add
test
and
dec
sub
add
aas
pushf
xor
mov
mov
xor
inc
aad
xor
and
in
mov
loop
lds
xor
add
jb
jl
cmps
or
sub
outs
call
mov
xchg
fdivr
rcl
or
ret
outs
lock
xchg
xchg
jno
or
push
xchg
(bad)
push
fadd
retf
mov
out
pop
mov
sub
ins
retf
gs
adc
mov
nop
and
lods
pop
xchg
push
into
jl
stos
sub
adc
iret
jae
fdiv
mov
adc
in
adc
aad
(bad)
xor
stos
jbe
loope
ins
pop
or
lods
imul
fst
arpl
cld
mov
shl
cwde
loop
push
cwde
mov
retf
mov
jl
ja
xchg
mov
div
jge
pop
mov
test
(bad)
mov
xchg
dec
and
xchg
out
xchg
fcomp
rcr
loop
nop
test
inc
mov
stc
call
ja
je
pop
out
loope
mov
aam
jmp
inc
xchg
cmps
call
jg
inc
dec
mov
mov
(bad)
rcr
and
aas
bound
sar
test
mov
(bad)
shl
cli
inc
jae
push
scas
mov
fisttp
je
adc
mov
rol
mov
jbe
jle
pop
mov
scas
mov
pop
sub
push
in
in
repz
mov
pop
jecxz
xchg
ret
icebp
shl
lock
dec
mov
test
mov
sub
mov
lock
jae
sub
loop
sti
out
mov
out
mov
cmp
sub
mov
icebp
aad
xor
push
pop
js
mov
adc
add
out
dec
aam
mov
and
or
fst
or
test
in
sub
mov
mov
in
pop
nop
jp
jne
cmp
xor
push
retf
fldenv
inc
lods
dec
cmps
cmp
shl
xchg
out
stos
inc
ret
xor
sub
mov
mov
push
aam
dec
int3
sub
mov
icebp
dec
mov
(bad)
push
push
mov
or
mov
pop
push
mov
scas
aaa
aad
(bad)
sbb
out
jno
xor
dec
(bad)
pop
leave
xor
iret
push
pop
(bad)
jge
outs
test
xor
sub
xor
retf
cmp
jg
arpl
and
test
sbb
pop
ret
or
mov
mov
mov
mov
sub
dec
(bad)
or
psubusb
inc
mov
jmp
test
jecxz
cs
ja
pop
cmps
enter
out
mov
mov
dec
jmp
cmps
pop
retf
and
ds
enter
loope
add
cmp
dec
mov
inc
cmp
mov
mov
push
into
add
adc
popf
xchg
or
into
and
adc
mov
rcr
push
sub
sbb
lods
cmp
fsub
test
mov
mov
cmp
push
cmps
sbb
mov
outs
fild
ror
push
jnp
outs
mov
add
mov
and
jmp
jns
dec
into
pushf
push
fidivr
push
jnp
or
je
mov
push
lods
jp
or
mov
inc
jmp
inc
mov
adc
add
inc
cld
arpl
jne
test
scas
ins
cdq
sbb
add
and
cmps
aas
fld
hlt
inc
dec
movs
cmp
push
sbb
fiadd
jno
jg
mov
or
mov
daa
xchg
mov
push
pushf
adc
jne
sbb
sbb
jge
sub
push
sahf
cs
les
repnz
or
aaa
pop
mov
jnp
push
jmp
pop
cdq
es
cmp
jecxz
mov
add
test
sbb
jge
pop
std
out
pop
mov
idiv
mov
mov
(bad)
cmp
cmc
or
jnp
das
xchg
sub
jmp
sbb
or
ins
iret
ss
inc
icebp
push
movs
imul
sub
jg
js
push
arpl
addr16
data16
inc
hlt
jae
jno
and
adc
jnp
sbb
cdq
retfw
pop
in
sbb
jnp
pop
hlt
inc
adc
jp
ins
hlt
pop
test
inc
jmp
fsubr
cld
dec
xchg
push
sti
or
jmp
aad
retf
pop
sub
clc
and
push
out
(bad)
pop
dec
sti
jne
jle
das
in
push
imul
in
pop
movs
sbb
inc
les
jl
pop
leave
sbb
pop
push
xchg
gs
or
fistp
sbb
pop
mov
hlt
outs
int3
push
scas
rcr
call
scas
sbb
adc
or
cs
jle
sub
sbb
call
push
or
push
cld
data16
sbb
adc
dec
cli
push
test
cld
pop
pop
sbb
cs
fidiv
or
lods
pusha
ror
sbb
inc
int3
sub
sub
(bad)
pusha
fisttp
retf
sub
enter
int3
sub
cmp
cli
mov
stos
imul
push
lods
push
fs
ret
pusha
in
jp
out
call
lahf
jns
arpl
pop
je
pop
mov
clc
sub
cmp
gs
mov
inc
pop
xlat
jg
fs
sbb
or
cmp
or
ins
mov
popf
sbb
mov
inc
pushf
sub
cli
into
sbb
dec
iret
add
nop
mov
sbb
sub
jmp
mov
pushf
pop
sub
pop
loope
test
cwde
in
popa
xchg
push
je
jle
mov
fnstcw
adc
push
adc
das
mov
int
scas
aad
push
scas
inc
fsubp
sbb
clc
frndint
mov
jns
jne
(bad)
jmp
mov
aas
push
jg
push
sar
xlat
mov
movs
cmp
xchg
sub
inc
cdq
jb
data16
int
dec
dec
push
pop
dec
dec
popf
dec
sar
imul
pop
(bad)
int
das
dec
jno
(bad)
(bad)
(bad)
out
jns
push
repnz
outs
jg
fwait
test
mov
retf
popa
push
jmp
(bad)
pop
mov
jo
adc
dec
push
jge
fild
mov
rcr
test
leave
mov
into
in
add
sbb
(bad)
dec
movs
enter
cmps
and
pop
and
test
(bad)
addr16
into
jge
pop
and
push
sub
push
dec
fisub
mov
sbb
jle
or
stos
xlat
scas
gs
jbe
aas
push
pop
es
fst
(bad)
stos
aam
xchg
add
pop
cmp
add
mov
push
mov
jbe
out
setle
(bad)
add
lods
pop
or
lds
mov
or
out
scas
mov
cmps
adc
ins
(bad)
imul
pop
xchg
pop
lahf
fist
inc
lahf
and
cmps
sub
mov
lods
xor
sti
ss
fistp
js
push
js
sbb
(bad)
fld
pop
stos
cmp
cmp
daa
fmulp
(bad)
jmp
je
daa
or
icebp
adc
(bad)
das
repnz
out
push
and
dec
ret
fdivrp
sub
fbld
adc
repnz
(bad)
(bad)
mov
fild
cs
pop
stos
mov
mov
cld
sub
ins
pushf
xchg
cmp
push
daa
repnz
dec
loopne
cmps
retf
mov
adc
jb
and
xor
or
add
fistp
push
stc
mov
bound
test
sbb
fsub
outs
sbb
leave
mov
cdq
repz
shl
mov
add
xchg
imul
arpl
(bad)
sbb
out
push
shl
fild
loop
mov
jl
fcomi
scas
pushf
jg
pop
es
and
mov
pop
mov
repz
cmp
jl
sbb
or
js
adc
icebp
adc
les
mov
add
and
inc
std
gs
dec
icebp
(bad)
repz
mov
xor
ret
repz
pop
xor
bound
jns
mov
rol
inc
iret
xor
xor
sbb
shl
cmp
xchg
imul
mov
xchg
pop
mov
ficom
cmp
jl
jbe
jb
std
aaa
mov
lea
push
and
jo
add
test
ret
jno
movs
cmp
inc
mov
ror
mov
mov
mov
adc
push
sub
add
mov
push
jno
les
cmp
(bad)
movs
rcl
(bad)
je
and
mov
inc
xchg
dec
mov
ja
cmc
adc
and
in
in
xchg
jae
out
dec
jae
xchg
xchg
mov
mov
ja
mov
xor
and
inc
add
adc
sbb
popa
arpl
aaa
jae
inc
mov
mov
xchg
addr16
push
xchg
adc
test
inc
and
xor
mov
icebp
and
movs
pusha
les
mov
pop
test
hlt
gs
jno
pop
xchg
(bad)
xor
adc
add
icebp
rol
les
jnp
jge
adc
in
lock
pop
adc
pusha
out
out
fstp
sbb
jns
sti
push
stc
js
push
sar
mov
ret
ret
xor
adc
jae
jne
xchg
popa
fcom
das
mov
pop
shl
(bad)
daa
add
xchg
push
adc
sar
or
repnz
inc
and
shl
and
test
mov
sti
hlt
pop
mov
movs
push
out
sub
mov
and
xor
mov
jl
xchg
ror
mov
and
cmc
xchg
and
cmc
icebp
mov
xchg
xchg
inc
cmp
cmp
cmps
lods
cmp
imul
popf
xchg
imul
xchg
lds
imul
sub
sti
mov
jo
push
jge
dec
pop
cmp
dec
jb
aas
sbb
and
lods
xchg
fdiv
fldenv
cmp
xchg
mov
inc
ins
and
sub
jl
frstor
out
add
loopne
cmp
push
popf
ror
cmp
sub
adc
repz
xchg
jbe
outs
or
sub
sub
in
popf
push
inc
(bad)
fiadd
shr
xchg
lahf
adc
in
push
dec
shl
pusha
std
cmps
lea
sar
and
sub
dec
inc
dec
xchg
xchg
pop
push
adc
gs
dec
and
mov
(bad)
dec
into
fbld
and
push
ins
test
jecxz
pop
sbb
add
jne
sub
fwait
push
fdiv
cwde
ret
std
icebp
aaa
xor
sub
jmp
mov
movs
bound
dec
ins
xor
clc
mov
sbb
arpl
das
jge
fs
mov
cmp
std
dec
sbb
push
cmp
push
lods
(bad)
loopne
or
loop
sahf
jmp
les
inc
push
je
adc
stos
mov
daa
rol
push
lea
retf
loope
lds
cmps
pop
aam
jno
push
mov
push
stos
dec
mov
loop
jge
pop
shl
scas
jnp
ret
sbb
mov
cmp
jge
mov
loop
xor
scas
pop
fwait
adc
sbb
bound
not
test
pusha
fidiv
popf
push
loope
cmps
jecxz
out
xchg
je
pop
lods
sub
fwait
adc
mov
iret
sahf
outs
call
xchg
sbb
cmp
int
adc
inc
jae
retf
mov
ror
cs
mov
xchg
push
inc
loope
adc
hlt
adc
int3
adc
(bad)
sti
jle
fwait
sub
aam
aam
push
push
pop
dec
push
ret
and
sbb
add
in
adc
fwait
push
(bad)
mov
std
sub
adc
in
push
inc
test
and
sub
ret
movs
repz
inc
dec
(bad)
rcr
(bad)
pop
retf
adc
dec
adc
sub
fbstp
inc
xor
pop
jg
mov
adc
(bad)
ficom
jg
dec
lods
or
cld
adc
loope
cli
cmps
mov
leave
out
cmp
xchg
lock
xor
std
sub
jnp
dec
jno
sbb
pop
int
pushf
ror
push
jl
xor
pushf
aaa
(bad)
pop
cld
test
aas
mov
nop
mov
adc
lea
in
mov
loopne
add
mov
jo
mov
fidivr
stos
sahf
adc
aas
dec
jae
int3
lahf
sbb
jmp
cmovno
out
mov
dec
mov
pop
ins
or
pop
jle
dec
out
ins
mov
fild
cmp
inc
not
lahf
pushf
pop
mov
out
sbb
mov
mov
call
inc
je
xchg
jmp
mov
fbld
test
cwde
(bad)
push
adc
and
fild
push
dec
lea
(bad)
push
mov
jl
push
fisub
mov
sub
mov
(bad)
mov
rcl
pop
inc
pop
mov
sub
popf
or
sub
lods
jns
pop
ins
fadd
scas
mov
js
xchg
pop
scas
mov
sbb
movs
nop
pop
fisttp
cld
in
mov
int3
loopne
shr
inc
mov
push
push
sbb
mov
ror
cmp
jle
pop
xchg
sbb
cmp
std
ds
movlps
mov
or
fild
push
sub
shl
mov
fst
loop
cmps
int3
xor
test
dec
pop
xchg
seto
pop
repnz
jl
imul
or
jno
paddusb
vpmacsdqh
dec
pop
addr16
stos
mov
jl
jl
out
aas
jo
pop
in
jmp
and
jmp
sub
or
std
std
cmp
int
lea
dec
mov
int
out
jl
mov
scas
or
in
adc
lea
adc
adc
pop
cmps
(bad)
mov
ins
cmps
dec
add
mov
fisub
mov
sahf
loope
popf
jmp
scas
mov
mov
mov
push
loopne
inc
xor
inc
cmp
in
inc
movs
jbe
push
dec
cmp
mov
aaa
jl
fdivr
lods
jg
pop
mov
jle
lahf
into
xchg
and
and
pop
mov
push
mov
jl
mov
ds
pop
pop
mov
test
icebp
or
mov
icebp
fstp
popf
cmp
or
xchg
jle
push
mov
lods
cmp
xor
repnz
jecxz
sbb
pop
in
xchg
pop
sbb
pushf
inc
add
int
inc
xchg
ja
int
paddd
enter
outs
sbb
pop
sbb
and
push
push
jne
dec
add
loope
pop
loope
sub
outs
pop
cmp
lods
jle
mov
jmp
lea
push
in
push
push
test
mov
mov
xchg
lods
fcomp
pusha
xor
adc
lahf
mov
mov
push
sub
sub
ret
mov
inc
jno
je
ja
sahf
sub
adc
rol
ds
fdivrp
dec
call
into
xor
push
std
xchg
ds
enter
pop
adc
outs
rcr
sub
in
rol
lods
ins
and
imul
cs
ins
rcr
out
mov
cmp
test
sub
(bad)
mov
loope
mov
sub
mov
cmps
xlat
or
sub
inc
pop
shl
dec
xor
sbb
mov
jle
sahf
or
pop
in
pop
mov
pop
in
shl
sub
in
adc
push
jg
aas
in
jle
xchg
add
hlt
inc
xor
jle
lods
out
dec
mov
cmps
inc
ret
jl
sub
jno
into
in
xchg
(bad)
xchg
sub
jl
fdiv
mov
pop
and
pop
pop
mov
fwait
and
sub
sahf
cmp
push
call
ins
inc
xor
push
mov
(bad)
jmp
mov
mov
xchg
or
cld
retf
scas
xor
cs
sub
pop
sub
adc
(bad)
in
jle
jno
out
adc
fisttp
ja
outs
das
repnz
dec
nop
jp
cli
mov
dec
sbb
push
sub
in
pop
dec
adc
jne
sub
(bad)
dec
cmp
adc
cmp
and
pushf
pop
leave
xchg
jbe
popf
test
test
push
inc
test
ins
mov
mov
sbb
jbe
sbb
rcl
xchg
fisttp
lods
das
stos
xchg
mov
popf
fld
mov
cmc
mov
iret
aas
int3
sbb
ret
push
and
xchg
ds
out
sbb
push
and
push
sub
cmp
mov
cmp
push
pop
inc
mov
test
jae
cmp
and
outs
pop
je
jmp
push
inc
loopne
dec
push
sub
inc
dec
mov
pop
sub
popa
lea
push
push
movs
push
pop
jnp
(bad)
call
pop
and
mov
pop
inc
cmp
inc
cmovle
push
inc
scas
stos
and
push
stos
mov
pop
bound
push
shl
dec
scas
ss
stos
mov
add
xor
mov
mov
fwait
push
dec
xor
mov
in
inc
jg
mul
push
push
jo
mov
dec
js
jns
fistp
xchg
inc
test
push
add
aam
sbb
jo
mov
inc
cmp
pop
test
inc
test
bnd
mov
xlat
sub
pop
lock
inc
retf
stos
jge
ret
dec
mov
mov
inc
cmp
hlt
dec
inc
jb
push
int3
out
fiadd
pop
xor
sub
push
mov
scas
mov
adc
mov
ins
mov
push
jp
add
cmp
xchg
xchg
(bad)
fwait
push
pop
jo
mov
lds
mov
xor
lock
dec
aam
pop
jae
fimul
outs
pusha
and
push
xchg
mov
stos
mov
cmp
dec
lock
cdq
jno
mov
movs
sti
mov
je
jbe
xor
shr
scas
sbb
inc
outs
or
jle
pusha
jne
rol
inc
push
mov
dec
xor
gs
push
and
jno
adc
pop
inc
push
test
rcr
and
iret
push
xchg
mov
stos
je
sub
push
dec
js
outs
or
scas
xor
push
in
popf
gs
rol
sbb
and
mov
cmp
fimul
push
cdq
adc
ja
dec
outs
pop
mov
leave
mov
in
add
pop
lock
adc
push
pop
mov
push
or
dec
jp
cwde
mov
sahf
scas
sbb
and
inc
ss
shl
call
mov
push
add
fcomp
lock
das
xchg
fucomip
out
mov
ja
add
out
add
push
push
leave
xor
adc
jmp
das
adc
outs
mov
mov
push
(bad)
outs
icebp
push
push
stc
pop
outs
pop
mov
test
sbb
(bad)
sub
test
aam
loope
adc
das
test
scas
pop
test
xchg
iret
cld
scas
lods
mov
loop
push
mov
dec
pop
xor
stc
inc
adc
mov
in
sbb
daa
push
pop
outs
ss
aad
pop
out
enter
aaa
or
or
aaa
das
fbstp
xor
cmp
sub
and
das
mov
aaa
daa
push
or
push
les
retf
adc
adc
jl
mov
pop
xor
push
std
ss
addr16
jecxz
pop
sub
call
loopne
xchg
xor
in
sbb
sbb
movs
loopne
lock
test
cdq
clc
sbb
mov
adc
mov
das
xor
xchg
and
adc
call
cmps
add
push
and
mov
out
es
mul
sub
in
bound
jl
test
xor
and
repnz
stc
lds
ja
inc
adc
mov
scas
inc
cmp
das
out
add
xchg
mov
jne
imul
sbb
xchg
push
ss
cwde
mov
add
adc
add
inc
addr16
or
jne
jbe
pop
jp
dec
test
xchg
mov
pop
(bad)
int
jns
or
cmps
aam
je
adc
ror
jmp
mov
test
inc
cdq
mov
pop
add
xor
adc
adc
or
imul
push
jle
cmc
cmps
push
aaa
adc
push
xlat
retf
(bad)
jmp
xor
xchg
sbb
enter
cmps
push
(bad)
in
xlat
jecxz
loop
fild
adc
je
xor
adc
push
pop
push
stc
gs
xor
pop
test
mov
adc
cmp
inc
repnz
jecxz
adc
add
push
out
stos
out
xchg
adc
inc
out
aad
cli
adc
adc
aad
push
sahf
inc
cmp
push
js
out
inc
loope
rol
sbb
mov
in
out
loop
sbb
leave
inc
sbb
xchg
fcmovnu
mov
in
ja
add
jns
dec
push
movs
pop
in
jmp
shl
je
inc
daa
inc
adc
or
in
push
or
mov
in
and
inc
ret
aad
push
inc
inc
dec
xor
push
gs
mov
mov
mov
div
push
adc
icebp
dec
or
sbb
pop
lock
cmp
mov
mov
dec
loopne
or
pop
data16
adc
sti
lds
mov
test
clc
neg
pop
test
or
cli
cmp
scas
and
push
sub
(bad)
movs
cmp
(bad)
push
out
clc
inc
les
cmps
mov
js
sub
cmps
xchg
in
imul
out
jmp
jb
adc
stc
ja
xor
inc
fs
and
call
ja
jo
xchg
jne
movs
movs
cmp
scas
(bad)
shl
(bad)
ror
jbe
push
jo
cwde
jmp
es
jbe
jle
out
mov
jo
fld
ins
cmp
je
jo
xchg
xchg
in
cmp
rcr
mov
(bad)
arpl
mov
xor
imul
jae
ja
dec
dec
cmp
adc
retf
(bad)
cmp
jnp
mov
(bad)
mov
aam
mov
cwde
add
push
sub
movs
and
cmp
cmp
add
push
cwde
sbb
imul
push
dec
(bad)
out
repnz
add
icebp
jle
sbb
add
fbld
fwait
(bad)
fs
or
cmp
jbe
je
jae
xor
mov
jnp
enter
outs
ja
jo
push
jmp
add
repnz
mov
test
ja
jl
jns
add
cmp
mov
iret
mov
fcomp
xchg
jno
lock
push
add
sub
das
dec
mov
test
push
cdq
jmp
(bad)
pop
jae
jns
shl
jae
call
jp
les
sbb
fnsave
mov
in
shl
cli
movs
xchg
stos
xor
lahf
xor
xchg
(bad)
stos
stos
(bad)
fisub
aas
sbb
and
push
ror
and
hlt
in
movs
inc
test
adc
cmp
lods
push
and
and
js
sub
popa
add
jae
bound
add
xchg
pop
shl
dec
pop
cmc
sbb
lds
jle
loope
add
inc
(bad)
mov
leave
ins
fild
xchg
xor
cmp
bswap
push
xchg
and
and
push
popa
adc
test
loopne
dec
pop
rcl
jne
retf
mov
(bad)
les
and
or
repnz
imul
cmps
add
and
ja
xchg
(bad)
dec
and
xor
sub
xor
adc
mov
mov
or
adc
repz
and
pop
iret
sub
push
mov
inc
loop
frstor
cmp
(bad)
loop
(bad)
retf
cmp
jb
and
push
in
dec
mov
sti
add
xor
pop
push
sahf
ret
dec
sub
call
cmc
push
retf
jb
ror
movs
fild
jmp
add
cmp
movs
stos
lock
adc
xchg
sbb
sub
repz
std
mov
das
jl
stos
das
ins
sub
stc
push
pmaxub
dec
dec
dec
sub
js
imul
pop
pop
stc
sbb
das
mov
or
(bad)
cmp
add
mov
stos
or
jne
or
imul
dec
dec
pop
mov
jl
inc
or
mov
or
cld
mov
dec
dec
btc
dec
fsub
xchg
sbb
mov
test
pusha
jecxz
cmp
scas
pop
jg
mov
cdq
sub
int
or
pop
stos
mov
in
das
loop
push
push
cdq
fisttp
pop
cld
dec
mov
pop
mov
enter
dec
retf
cwde
jg
or
in
jmp
jp
test
mov
mov
jp
das
int
sahf
or
test
fnstsw
fstp
pop
pop
mov
(bad)
cmp
mov
out
repz
mov
sbb
cmps
addr16
lds
pop
(bad)
jbe
das
mov
inc
mov
push
out
inc
sti
imul
adc
cmp
test
jl
push
or
pop
into
jnp
loop
mov
call
cmp
dec
add
sub
jle
out
pop
enter
dec
fnstsw
xchg
outs
(bad)
mov
push
por
jmp
bound
inc
sahf
pop
mov
outs
popf
sbb
cmp
mov
je
xor
xchg
cmps
pop
clc
gs
movs
(bad)
in
xchg
add
shl
xchg
loope
xchg
adc
xchg
int
fisubr
fld
dec
mov
inc
call
pop
ins
adc
retf
int
sbb
in
xlat
push
in
dec
icebp
mov
sbb
int3
imul
adc
cwde
inc
add
jno
jne
inc
loopne
fsub
push
dec
inc
xchg
repz
fstp
(bad)
cli
or
push
xor
fmul
lea
mov
cwde
mov
cmp
ficomp
cs
jle
in
mov
in
pop
fidivr
jnp
mov
xor
dec
adc
adc
fdiv
lock
mov
scas
inc
jns
je
std
stos
mov
xor
jmp
ins
jg
mov
rcl
lea
int3
mov
xchg
mov
sbb
or
je
jb
push
movs
mov
xor
cli
pop
in
push
jnp
dec
(bad)
enter
dec
or
icebp
fwait
jno
mov
pop
xlat
test
xchg
mov
out
jne
in
and
push
push
iret
(bad)
stc
xor
xor
or
jno
aad
into
loopne
xchg
jbe
xchg
xchg
sub
push
sbb
int3
jo
pop
xchg
adc
mov
out
cmps
cmps
cmp
addr16
mov
vpshaq
add
shl
ins
(bad)
sbb
(bad)
pop
adc
inc
sahf
stos
and
inc
mov
xchg
and
fiadd
xchg
push
js
stc
cmp
adc
pushf
call
mov
push
(bad)
mov
cmp
xchg
pop
arpl
jbe
cmp
cdq
push
add
loope
mov
dec
and
jo
xchg
rol
xchg
out
jae
add
mov
xchg
in
xor
adc
(bad)
popf
jecxz
stos
outs
jg
mov
mov
mov
shl
pop
loop
dec
in
gs
or
leave
popa
dec
xchg
test
add
test
das
out
leave
mov
and
movs
into
enter
js
or
fcom
push
es
adc
inc
mov
sar
mov
stos
das
push
xlat
mov
push
add
mov
jle
retf
loopne
enter
inc
mov
push
and
enter
push
ret
movs
repz
rep
scas
pop
out
shl
and
push
jge
cs
dec
scas
pop
scas
mov
data16
inc
jecxz
inc
mov
add
scas
imul
jmp
int3
jmp
inc
push
out
mov
fst
xor
adc
xor
and
data16
in
inc
and
xchg
mov
mov
aad
push
push
aas
push
xor
push
mov
enter
mov
ins
mov
mov
sbb
inc
cmp
mov
lods
push
mov
cwde
fwait
lods
xchg
sub
out
xchg
fisttp
mov
fadd
push
test
inc
nop
icebp
dec
push
out
stos
inc
imul
fist
pop
jmp
in
jmp
not
mov
mov
pop
jb
das
outs
mov
mov
aam
std
test
shl
sbb
pop
popa
mov
sbb
sub
ins
(bad)
sbb
rcl
ret
or
(bad)
mov
jp
xchg
icebp
rcr
loope
jp
sbb
sbb
sub
dec
or
jbe
mov
stos
push
xchg
pop
inc
push
mov
adc
pop
xor
es
imul
addr16
jbe
(bad)
cmp
or
(bad)
arpl
ss
adc
sub
hlt
jecxz
popa
sub
jae
test
xchg
mov
pop
push
mov
(bad)
stos
push
sub
sbb
lds
pop
shr
xchg
mov
repz
gs
xchg
call
push
shl
jecxz
adc
sbb
dec
adc
mov
inc
sti
data16
or
inc
xlat
sub
ss
outs
ss
push
mov
sbb
jns
imul
or
dec
ror
int
push
cdq
cmp
ret
push
mov
sbb
(bad)
mov
jp
cmp
adc
jns
test
jnp
cwde
jno
jecxz
and
das
xchg
pop
ret
xchg
nop
mov
idiv
mov
jns
xchg
push
or
(bad)
pop
jmp
ror
push
dec
or
push
fdivp
pop
and
retf
cmps
ss
xor
sub
outs
and
xchg
out
mov
sbb
sar
fisttp
adc
sub
adc
inc
lds
pop
add
add
xor
sti
clc
mov
stos
and
cmps
sub
and
lods
cmp
retf
mov
stos
inc
xchg
cmp
push
mov
mov
dec
sub
or
mov
cdq
in
inc
jmp
ja
xchg
pop
jns
cmps
push
mov
nop
ins
imul
xchg
sbb
jge
xlat
(bad)
or
pop
(bad)
shr
in
pop
ja
daa
pop
shr
clc
arpl
cmp
sti
sub
add
ret
ins
movs
lods
test
cwde
push
rol
add
sbb
mov
fwait
out
(bad)
hlt
popf
bound
mov
sub
lea
jae
mov
lods
add
icebp
xor
jnp
pushf
jecxz
xchg
xor
fs
add
aas
pusha
mov
enter
ret
jo
sbb
lods
mov
aad
mov
(bad)
pop
call
push
sub
dec
push
jge
dec
aaa
add
add
ror
movs
xor
std
sbb
jecxz
gs
pop
jp
stos
out
fwait
int3
xlat
mov
cli
mov
aam
dec
fs
inc
movs
dec
enter
push
mov
dec
(bad)
rol
(bad)
popf
push
or
mov
icebp
inc
aas
cmp
sbb
scas
aam
lods
sub
adc
mov
out
push
mov
sti
imul
mov
adc
aam
push
(bad)
xor
sub
jle
sub
jge
pop
mov
pushf
sub
jge
addr16
imul
mov
cmps
pop
xchg
retf
jns
xchg
fisub
aaa
mov
ror
enter
pushf
lock
dec
ins
cmps
sbb
push
das
and
jne
jbe
ja
xchg
mov
cmp
in
scas
das
push
sub
in
retf
int3
dec
shl
jb
jbe
jb
push
leave
jns
xchg
test
aad
(bad)
mov
popf
pop
loopne
es
(bad)
inc
dec
bound
add
fstp
fsubp
mov
pushf
add
mov
jo
jp
stos
mov
xor
ror
bound
adc
inc
inc
cld
sbb
adc
xor
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jle
push
push
call
add
cmp
je
sub
sar
cmp
je
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
push
push
push
call
mov
call
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
call
mov
mov
mov
push
push
push
mov
call
jmp
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
mov
mov
call
mov
mov
mov
push
push
push
mov
mov
call
test
jne
mov
test
jne
xor
jmp
mov
lea
mov
add
test
jne
sub
sar
push
push
mov
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
xor
mov
mov
mov
mov
push
mov
call
mov
lea
push
push
mov
call
mov
call
mov
mov
cmp
setne
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
push
lea
call
mov
mov
mov
mov
lea
push
mov
push
push
lea
push
mov
call
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
call
test
je
push
lea
call
mov
lea
push
mov
call
mov
lea
call
mov
call
test
je
mov
call
test
jne
mov
call
test
je
mov
call
test
je
mov
pop
mov
pop
pop
mov
mov
pop
ret
call
mov
mov
mov
push
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
lea
push
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
push
mov
push
push
push
push
mov
call
mov
mov
push
push
call
add
test
jne
call
mov
push
push
mov
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
mov
cmp
je
push
call
mov
call
test
jne
mov
call
test
je
mov
call
test
jne
call
mov
mov
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
lea
push
mov
call
mov
mov
call
test
sete
mov
lea
call
cmp
je
lea
push
mov
call
mov
lea
push
mov
call
mov
lea
call
mov
lea
call
push
push
lea
call
test
jne
call
mov
push
push
mov
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
push
mov
call
lea
push
push
call
mov
call
mov
push
lea
call
mov
lea
call
lea
push
push
call
mov
call
mov
push
lea
call
mov
lea
call
mov
mov
cmp
je
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
lea
push
push
push
push
lea
mov
mov
call
mov
cmp
je
call
mov
push
push
push
mov
call
add
mov
lea
push
push
push
push
lea
mov
call
mov
cmp
je
call
mov
push
push
push
mov
call
add
mov
lea
call
mov
mov
cmp
je
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
lea
push
push
push
push
lea
mov
mov
call
mov
cmp
je
call
mov
mov
push
push
push
call
add
mov
lea
call
mov
mov
lea
call
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
pop
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
call
mov
mov
push
push
lea
push
lea
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
push
jne
push
push
mov
jmp
lea
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
push
mov
lea
push
call
mov
mov
sub
push
call
add
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
cmp
jne
mov
add
push
call
lea
add
mov
mov
lea
push
lea
call
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
test
je
lea
call
test
je
lea
call
test
jne
mov
lea
push
mov
call
push
push
lea
push
lea
call
cmp
jne
call
mov
mov
push
push
push
mov
call
add
call
mov
mov
push
push
push
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
pop
pop
mov
mov
add
lea
or
lock
dec
test
pop
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
mov
push
push
push
push
call
mov
add
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
lea
push
mov
call
lea
mov
call
lea
lea
push
call
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
lea
call
push
mov
call
call
mov
push
lea
mov
call
mov
call
mov
call
push
mov
lea
mov
push
mov
call
mov
mov
mov
call
call
mov
mov
push
push
push
push
mov
call
add
push
lea
lea
push
mov
call
lea
push
mov
call
lea
mov
call
mov
push
mov
call
lea
push
call
lea
mov
call
mov
push
mov
call
mov
call
push
mov
mov
call
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
lea
push
mov
mov
call
mov
call
lea
mov
mov
call
test
jne
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
mov
call
lea
add
push
mov
call
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
mov
call
test
je
mov
push
push
call
test
je
lea
call
mov
push
push
lea
call
lea
push
lea
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
mov
push
lea
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
lea
call
mov
push
push
lea
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
lea
mov
sub
push
call
add
add
mov
mov
lea
push
lea
call
mov
push
push
push
push
push
push
push
call
mov
cmp
je
mov
push
push
push
push
lea
call
push
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
pop
pop
pop
jg
mov
mov
push
mov
call
lea
call
mov
call
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
mov
mov
pop
ret
mov
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
call
mov
mov
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
mov
push
lea
mov
call
mov
mov
mov
mov
lea
push
mov
push
mov
push
push
mov
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
call
test
je
mov
call
test
jne
mov
call
test
jne
call
mov
mov
push
push
push
mov
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
mov
cmp
je
push
mov
call
mov
mov
mov
mov
mov
pop
mov
pop
pop
ret
int3
int3
int3
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
push
call
cmp
lea
jl
cmp
jne
mov
mov
lock
mov
pop
pop
pop
ret
mov
mov
mov
push
push
mov
call
mov
test
jne
jmp
mov
mov
mov
add
push
add
push
push
lea
push
call
add
mov
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
mov
test
je
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
lea
push
mov
je
cmp
lea
jge
cmp
jge
push
call
mov
mov
pop
mov
pop
ret
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
call
add
mov
pop
pop
ret
call
cmp
je
call
mov
call
xor
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
push
call
add
mov
mov
test
je
mov
mov
lea
test
je
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
call
add
push
push
call
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
ss
add
adc
or
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
arpl
popa
cmps
push
mov
add
dec
cmps
mov
ret
sbb
inc
jns
addr16
out
push
mov
jle
jnp
out
pop
mov
lock
dec
adc
jl
mov
add
pop
inc
inc
aam
mov
out
lock
ret
adc
inc
int
and
std
int
sub
inc
add
es
or
imul
lea
xchg
dec
or
movups
xchg
dec
test
and
ret
sahf
pop
push
cld
cli
or
push
imul
cld
jle
aaa
test
sbb
mov
psllq
and
(bad)
xor
movs
leave
les
mov
int
sub
or
scas
xor
mov
sbb
cmp
fidiv
sar
or
sub
cmp
mov
ins
mov
popf
jmp
add
push
fld
pop
mov
dec
jb
sub
push
setl
into
inc
xchg
or
rcl
sub
stc
adc
inc
pusha
sbb
add
mov
cmps
mov
cmp
and
dec
test
fdivr
cmp
sbb
rol
sbb
and
movs
add
xchg
jmp
mov
test
xchg
push
push
in
js
xchg
cdq
mov
or
mov
leave
xor
or
sbb
addr16
mov
test
adc
or
cmps
leave
in
popa
sub
adc
std
xchg
inc
gs
pop
lea
jmp
pop
inc
push
push
cli
bound
das
mov
add
lock
xor
mov
inc
loope
inc
(bad)
mov
adc
xacquire
fidiv
adc
retf
ss
add
pushf
dec
xchg
mov
sub
jmp
mov
or
cmp
add
fadd
push
lock
mov
movs
inc
pop
fsubr
xchg
dec
mov
ss
push
or
cmps
std
imul
shrd
(bad)
jl
test
ss
pusha
cmps
inc
hlt
lock
popa
dec
sub
outs
jmp
sbb
jb
mov
mul
repnz
push
add
adc
mov
clc
cmps
(bad)
push
mov
or
pop
leave
inc
push
call
adc
push
pop
imul
or
cmc
jmp
xchg
div
clc
inc
iret
in
mov
push
ret
adc
scas
ret
jle
repz
cdq
mov
and
jl
repz
imul
iret
mov
sahf
inc
mov
xchg
mov
pop
dec
pmulhuw
add
mov
pusha
fmul
cli
div
shr
jbe
test
jle
mov
out
rcl
xor
inc
ret
jae
jle
imul
cs
int3
xchg
xor
int3
jl
in
jne
pusha
aad
jle
repz
adc
dec
movs
add
sbb
xor
add
inc
ss
clc
jge
add
xchg
sub
ror
xor
sbb
sbb
ss
fadd
std
cld
jbe
pshufw
xor
dec
mov
js
sub
or
test
inc
mov
iret
inc
pop
je
pop
div
ins
rol
pop
mul
aam
clc
loop
mov
mov
leave
push
int3
test
dec
mov
movs
shr
and
adc
mov
cmp
mov
dec
popa
or
test
jle
pop
jb
jecxz
xchg
shl
cld
cmc
adc
sbb
inc
aas
add
sahf
or
and
dec
outs
push
jmp
and
xor
icebp
push
fsub
dec
add
es
add
jbe
xchg
dec
mov
(bad)
cmp
sub
dec
repz
mov
cmp
retf
retf
es
(bad)
xor
dec
ja
dec
pop
bound
scas
push
clc
inc
cmp
sub
sbb
psllq
add
mov
loop
mov
dec
js
mov
dec
cmps
mov
mov
jecxz
into
jge
sub
pop
push
xchg
shr
dec
add
out
xchg
pop
dec
das
sub
ret
and
push
lods
xchg
in
dec
test
loopne
daa
leave
shl
xor
dec
cmp
and
lock
and
ret
cdq
or
cmp
retf
lods
aas
cmp
dec
or
mov
stc
test
or
push
sbb
mov
out
xor
push
shl
iret
nop
hlt
push
cmp
xor
movs
shr
in
adc
fcmovnb
mov
ds
test
dec
sbb
mov
ss
or
add
ins
dec
hlt
sbb
mov
mov
mov
cmps
std
imul
rcl
adc
xchg
mov
cmp
mov
sub
sar
sahf
jle
push
(bad)
xor
lods
dec
mov
aad
or
cmp
inc
xchg
mov
mov
or
inc
movs
mov
(bad)
adc
push
cmp
ret
into
cmp
mov
repz
mov
es
(bad)
mov
aad
or
mov
ror
int
dec
mov
in
or
sub
cmp
mov
sar
adc
sub
mov
jl
out
push
pop
inc
cmp
xor
ror
jae
enter
sbb
mov
stc
cmps
sar
aad
daa
mov
or
in
mov
jle
mov
out
addr16
mov
push
inc
mov
adc
lods
or
aaa
pop
repz
xchg
mov
jno
jg
mov
sti
retf
xor
repnz
push
shl
in
xchg
pop
into
mov
stos
and
xchg
sub
out
dec
sbb
out
cmps
ret
ret
mov
in
ret
jnp
push
test
cmp
in
int
es
rol
cli
xchg
pop
jns
mov
push
dec
cmc
sahf
jbe
mov
leave
int
and
jg
and
jbe
and
int3
test
xchg
dec
add
(bad)
jg
mov
inc
inc
jb
mov
and
inc
popa
movs
clc
xor
dec
sar
(bad)
inc
push
or
stc
ins
xor
mov
nop
nop
nop
nop
nop
nop
push
push
push
mov
mov
push
call
add
mov
mov
mov
test
je
mov
mov
mov
lea
test
je
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
call
add
push
push
call
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
mov
lea
call
mov
lea
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
add
mov
mov
push
mov
call
mov
mov
mov
mov
pop
mov
mov
pop
ret
push
mov
push
push
mov
push
mov
push
push
add
mov
mov
push
mov
call
mov
mov
mov
mov
pop
mov
mov
pop
ret
push
mov
push
push
mov
push
mov
push
push
push
push
mov
mov
mov
lea
mov
lea
push
push
call
mov
mov
add
test
mov
mov
je
lea
mov
add
sub
jne
cmp
jle
mov
push
lea
call
mov
mov
push
push
push
push
call
add
test
jne
xor
jmp
mov
lea
lea
mov
add
test
jne
sub
sar
js
cmp
jg
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
pop
pop
pop
mov
mov
pop
ret
push
call
int3
push
mov
mov
push
push
push
mov
push
mov
mov
mov
push
push
call
add
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
xor
push
mov
mov
mov
mov
mov
push
push
lea
push
push
call
mov
call
mov
mov
push
push
lea
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
lea
or
lock
dec
test
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
push
sub
mov
push
mov
call
add
add
mov
mov
mov
mov
pop
mov
mov
pop
ret
int3
push
mov
mov
mov
mov
mov
mov
cmp
mov
je
push
lea
mov
push
call
add
cmp
mov
jne
pop
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
shr
push
mov
add
mov
movzx
push
push
push
call
test
je
push
push
push
call
mov
add
test
jne
pop
pop
xor
pop
pop
ret
movzx
call
push
push
push
push
push
lea
push
push
push
mov
call
mov
mov
sub
mov
sub
mov
sub
or
jge
push
mov
call
movzx
mov
push
push
push
push
push
mov
push
push
call
push
call
test
jl
mov
cmp
jg
mov
mov
pop
mov
pop
mov
pop
pop
ret
push
call
int3
int3
int3
int3
push
mov
push
push
mov
test
mov
jne
call
pop
pop
pop
ret
mov
test
jne
push
call
mov
mov
mov
push
mov
sub
mov
sub
mov
sub
or
jge
push
mov
call
mov
cmp
mov
push
ja
lea
push
push
push
call
jmp
push
push
push
call
add
test
pop
jl
mov
cmp
jg
mov
mov
mov
pop
pop
pop
ret
int3
int3
push
mov
sub
mov
push
xor
cmp
push
mov
mov
je
mov
push
mov
xor
cmp
jle
mov
cmp
jne
test
jne
mov
mov
sub
mov
sub
sub
or
mov
jge
push
mov
call
mov
mov
mov
add
mov
lea
sar
cmp
jl
test
je
test
jl
mov
cmp
jg
mov
mov
mov
pop
mov
pop
pop
mov
pop
ret
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
call
mov
mov
mov
push
push
push
push
call
add
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
mov
push
mov
push
lea
call
mov
mov
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
push
mov
test
push
push
mov
jg
jl
mov
cmp
jae
mov
xor
jmp
mov
push
push
push
push
call
push
push
lea
mov
mov
call
mov
mov
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
mov
push
mov
add
mov
mov
adc
mov
cmp
jl
jg
cmp
jbe
push
push
lea
call
mov
mov
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
mov
pop
ret
int3
int3
push
mov
push
mov
test
je
mov
mov
mov
or
jne
mov
push
push
mov
call
mov
mov
push
push
mov
call
mov
pop
pop
ret
push
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
call
cmp
je
push
call
mov
call
push
push
call
mov
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
mov
mov
jne
jmp
lea
push
push
call
test
je
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
mov
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
push
mov
lea
push
call
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
mov
push
push
add
mov
mov
push
mov
call
add
add
mov
mov
push
push
call
test
je
jmp
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
push
push
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
mov
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
push
push
push
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
mov
lea
add
cmp
je
cmp
lea
jl
mov
cmp
jne
push
call
mov
add
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
add
mov
jmp
mov
push
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
push
push
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
push
lea
push
mov
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
mov
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
push
push
push
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
mov
add
lea
cmp
mov
je
cmp
jl
mov
cmp
jne
mov
mov
call
cmp
lea
jl
cmp
jne
mov
mov
lock
jmp
mov
mov
mov
push
push
mov
call
mov
test
je
mov
mov
mov
lea
push
add
lea
push
push
lea
push
call
add
mov
add
or
lock
dec
test
jg
mov
mov
mov
push
mov
call
add
mov
jmp
mov
push
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
dec
adc
mov
js
cwde
or
or
call
ins
cmps
imul
enter
mov
xor
xor
mov
test
jle
test
js
mov
repz
dec
mov
push
dec
or
cmp
fsubr
add
push
rcr
jmp
add
inc
in
xchg
fsub
in
inc
addr16
cli
or
pop
xchg
inc
cmps
cmp
int
adc
fadd
mov
add
enter
je
sub
aad
out
sahf
int
or
hlt
sbb
add
lods
inc
dec
adc
stos
nop
loop
sbb
push
jg
test
adc
imul
push
and
je
fisubr
lock
arpl
retf
loop
add
and
sub
inc
popa
ins
push
loop
(bad)
leave
popa
mov
xchg
test
cmps
mov
jmp
mov
jmp
cwde
jge
cmp
sti
mov
add
add
push
jnp
mov
das
sbb
mov
ret
mov
mov
retf
pusha
out
mov
aas
(bad)
sub
retf
jl
pop
push
or
(bad)
fdiv
xchg
pop
pop
mov
mov
popa
mov
leave
sub
and
or
retf
inc
inc
aaa
mov
into
jne
out
sub
retf
xlat
sub
add
cmp
inc
inc
call
pop
jmp
arpl
fxch
mov
rcr
push
imul
loop
pop
lods
pop
adc
and
push
outs
adc
mov
js
sbb
cmp
inc
inc
ror
fs
mov
arpl
mov
ss
push
pop
inc
iret
dec
sub
call
push
out
test
popf
and
mov
shr
adc
stc
mov
mov
push
dec
pusha
xchg
and
push
ret
inc
push
movs
out
cmp
js
push
loop
cmp
outs
add
leave
rol
pop
xor
push
pop
inc
mov
jp
out
loop
out
arpl
pop
jbe
push
je
mov
cdq
call
and
pop
push
pusha
mov
and
push
inc
sbb
pop
jmp
xchg
inc
int3
hlt
call
jbe
fld
test
ins
fdivr
(bad)
outs
inc
sub
mov
(bad)
sub
icebp
add
xchg
es
jne
mov
(bad)
cdq
dec
retf
mov
rcr
push
outs
lods
bound
push
sbb
gs
stc
add
sbb
mul
mov
ror
fdiv
mov
mov
lods
pop
loop
push
push
and
mov
(bad)
push
cmc
sbb
xchg
dec
mov
enter
cmp
scas
mov
jp
(bad)
and
mov
xchg
sti
(bad)
push
adc
mov
test
mov
inc
push
stos
bnd
cmp
inc
(bad)
or
repz
xor
jmp
xchg
int
add
fld
bound
daa
clc
shl
lahf
add
push
jle
adc
xor
and
pop
rcl
xchg
xchg
sub
xchg
popf
les
mov
pop
xchg
jb
dec
jmp
repnz
mov
cmps
xor
xor
rcr
adc
sub
mov
jmp
mov
je
dec
xor
cli
xchg
mov
jp
mov
fst
jg
jmp
sbb
mov
jo
jge
ss
fldenv
mov
push
inc
xchg
xor
les
cmp
sbb
xchg
mov
rol
adc
in
sahf
xchg
test
and
dec
pop
mov
adc
int
sub
idiv
mov
jb
cmp
outs
mov
daa
jns
imul
in
mov
mov
shr
cmp
std
dec
inc
inc
push
jns
adc
stc
push
shl
sub
ds
jecxz
bound
mov
loope
(bad)
(bad)
xor
sub
shl
inc
das
clc
mov
addr16
(bad)
and
in
retf
jbe
dec
fdivr
mov
cmp
fs
dec
xchg
daa
dec
mov
sbb
pop
push
inc
cs
mov
and
rcl
popa
jle
cmps
push
outs
sub
pop
dec
pop
xchg
sti
jo
jmp
adc
cmps
adc
mov
ror
add
imul
rol
out
jge
jl
in
or
iret
popa
js
les
icebp
push
out
jmp
scas
or
jp
sub
shr
fistp
pop
repz
mov
aaa
sbb
les
sub
nop
and
sti
adc
adc
rcl
inc
pop
mov
jbe
jmp
dec
outs
mov
mov
je
js
std
pop
sbb
cmp
pop
addr16
lock
dec
push
(bad)
call
push
cmp
dec
mov
add
mov
xchg
pop
mov
aad
mov
xor
int3
pop
sbb
xor
sub
shl
xor
gs
mov
mov
stos
jno
cmp
fdivr
xchg
aaa
inc
mov
and
mov
cmp
xor
arpl
inc
or
arpl
jns
push
mov
adc
jbe
cmp
mov
(bad)
(bad)
sbb
cdq
cli
pfrsqit1
aam
repnz
imul
cdq
(bad)
loopne
mov
mov
inc
aaa
adc
and
(bad)
sbb
adc
xor
or
dec
es
push
mov
xchg
xchg
ds
add
push
pop
inc
mov
mov
loopne
pop
add
or
arpl
mov
pushf
mov
and
les
sbb
iret
dec
loop
cs
cli
or
ret
mov
push
jmp
out
pop
and
mov
push
pusha
sbb
ret
mov
ret
outs
sub
jbe
shl
(bad)
clc
xchg
sub
mov
fiadd
jbe
xchg
cli
sbb
sbb
test
push
in
test
jmp
mov
jecxz
repz
(bad)
jns
bound
jp
call
daa
pusha
daa
adc
fadd
mov
enter
mov
faddp
lahf
add
cmps
call
mov
cs
pop
cmps
mov
cmp
repnz
scas
cmp
je
cdq
jg
adc
sahf
push
ins
inc
adc
out
out
sahf
dec
xchg
inc
xlat
sub
movs
sbb
pop
pop
fadd
mov
inc
das
push
sbb
adc
pop
pop
mov
bound
cmps
(bad)
sbb
test
sti
(bad)
mov
push
dec
pop
clc
cmps
(bad)
mov
dec
clc
inc
xor
and
clc
ret
cmp
mov
(bad)
popf
xchg
jne
arpl
inc
addr16
pop
jecxz
add
mov
es
cmp
cwde
fsqrt
push
cmc
add
bound
mov
call
aad
and
sbb
enter
js
inc
add
and
cmp
jg
sub
push
or
sbb
push
jns
add
out
sub
sub
imul
outs
aaa
xchg
test
pop
outs
movs
dec
pop
xor
mov
stos
jmp
mov
sbb
mov
jge
and
dec
cmp
sub
push
push
bnd
sub
adc
add
retf
dec
aaa
retf
bound
mov
arpl
add
les
xchg
add
mov
(bad)
xor
and
push
or
scas
dec
pop
(bad)
sti
pop
push
jmp
mov
mov
push
in
and
adc
es
xchg
and
xchg
jne
jmp
add
mov
jecxz
push
add
dec
xchg
fbstp
mov
pop
add
cmps
icebp
jmp
test
shl
jno
or
shl
sub
lds
sub
add
movs
and
mov
fidivr
in
sub
jns
and
pop
or
loop
or
add
inc
into
sbb
stos
jnp
or
cmp
ds
inc
and
cmp
sbb
lar
(bad)
cmp
xchg
js
jmp
repz
call
mov
pop
stos
push
lea
or
in
push
sbb
push
sub
mov
xor
test
les
mov
fsub
jmp
lods
jmp
mov
mov
loope
mov
mul
pop
(bad)
stc
or
mov
clc
dec
gs
xchg
into
inc
mov
dec
xor
lock
jnp
dec
cdq
ret
jl
cmps
out
cmp
push
scas
cmp
sub
js
push
bswap
inc
in
(bad)
icebp
fs
sub
es
dec
jnp
push
mov
adc
or
pop
cmc
loop
push
movs
xchg
inc
mov
mov
push
fidiv
mov
or
dec
test
adc
shr
sub
pop
mov
mov
rcr
jae
fs
sahf
xor
inc
dec
out
sbb
neg
jo
cmps
jns
retf
dec
(bad)
popf
mov
leave
jmp
dec
lock
fisubr
outs
xor
add
aas
js
add
sbb
call
add
push
pop
inc
dec
test
dec
mov
je
push
or
inc
mov
dec
test
out
mov
call
jge
mov
idiv
imul
sar
in
sbb
sbb
loop
mov
push
fsub
and
jle
(bad)
(bad)
push
(bad)
inc
lock
push
call
mov
xor
in
adc
js
popf
loope
(bad)
sbb
enter
stc
jo
push
lea
shl
retf
xchg
push
mov
mov
cdq
mov
or
stos
aaa
push
outs
cmp
push
and
dec
test
or
out
aam
jecxz
xchg
mov
les
out
out
pushf
and
sub
fldenv
cwde
push
jno
xor
fcomip
shr
adc
xor
ss
push
push
pop
scas
mul
adc
xor
or
inc
fsub
popa
jmp
pop
and
imul
imul
sbb
cmp
mov
push
outs
mov
jno
jbe
ins
sbb
mov
or
pop
mov
mov
add
rcr
xor
cmps
jg
push
xchg
cli
scas
in
mov
cmp
mov
mov
es
inc
bound
sbb
pusha
push
out
push
pop
ja
push
add
pop
sub
cld
iret
inc
in
pop
dec
push
jbe
cwde
cmp
dec
jge
mov
fcom
(bad)
xor
popf
adc
jns
call
stos
mov
mov
cmp
test
imul
xor
jbe
jmp
cmp
add
mov
stos
jle
xor
stc
sti
std
mov
in
cmp
enter
xor
icebp
pop
push
sbb
cmp
je
mov
xchg
std
adc
bound
and
or
clc
int
inc
dec
mov
cli
sar
repnz
pop
dec
add
dec
shr
fsubr
stc
nop
mov
js
push
out
jo
cwde
in
sbb
fstp
adc
jmp
mov
jnp
sub
cld
fistp
jne
imul
lods
ins
into
inc
scas
bound
xlat
cwde
push
xor
cdq
ret
test
pop
mov
int
cwde
cmp
and
jae
pop
jnp
daa
mov
fsub
dec
fst
pop
jno
xor
leave
(bad)
repz
imul
test
(bad)
shl
and
push
jp
adc
mov
addr16
clc
ins
bnd
xor
adc
jb
jbe
push
out
stc
push
mul
or
fwait
(bad)
fst
xor
sub
or
or
adc
xor
add
test
inc
ror
pop
sbb
xor
rol
(bad)
sti
call
cmp
jns
cmc
icebp
sbb
stos
aam
sbb
test
bound
stos
(bad)
scas
lock
mov
dec
shl
mov
lock
jbe
aaa
call
adc
push
jp
das
push
add
sar
sub
mov
stos
push
arpl
inc
or
xchg
add
push
jmp
lea
mov
xchg
add
xor
rcl
fcomp
mov
mov
iret
adc
adc
inc
mov
repnz
retf
xor
push
mov
in
xor
jb
fild
(bad)
jae
jb
adc
mov
mov
and
sub
repnz
mov
(bad)
js
aad
xor
popa
fisttp
add
movs
mov
call
inc
sar
(bad)
das
loopne
lods
xchg
xchg
sti
imul
cmp
add
mov
push
scas
xchg
int
pop
cld
pop
or
lahf
ficomp
pop
pmuludq
jb
pushf
je
dec
mov
daa
repz
or
dec
(bad)
dec
test
retf
mov
mov
push
cmp
sub
(bad)
dec
test
jae
imul
pop
inc
mov
fisubr
outs
push
sub
cmp
and
push
dec
ret
xor
push
ret
inc
mov
dec
stc
aas
dec
shr
cwde
sub
mov
cdq
pop
push
cli
sahf
ins
loope
cwde
sbb
mov
in
ins
sub
mov
jnp
repnz
adc
loope
add
mov
sub
clc
cmp
(bad)
iret
mov
push
fild
stos
shl
mov
add
retf
jle
aas
inc
cmp
mov
push
cmp
cli
mov
adc
or
pop
(bad)
stos
js
int
pop
mov
dec
pop
dec
lahf
ja
dec
rcr
dec
(bad)
inc
jns
mov
shr
rep
ja
mov
or
dec
or
push
mov
repz
and
leave
or
push
pop
test
push
push
bound
and
sbb
or
jns
arpl
mov
mov
pop
nop
push
test
inc
cli
retf
pushf
mov
xor
(bad)
mov
push
out
ins
adc
jmp
xor
and
adc
out
xchg
ins
jl
xchg
or
int3
int3
aad
in
idiv
sbb
push
mov
jp
mov
pop
test
pop
ss
clc
mov
scas
mov
push
sub
ss
adc
jecxz
ret
stc
pop
push
fiadd
mov
dec
in
add
mov
pop
jmp
jbe
mov
pop
jl
sbb
pop
lods
adc
inc
enter
(bad)
xor
adc
aam
into
push
xlat
out
shl
mov
retf
or
stos
sahf
rcl
and
pop
jg
cmp
sbb
mov
jbe
jne
and
int
xchg
sub
repz
and
loope
inc
or
(bad)
out
cld
jmp
push
jns
xor
cmp
(bad)
cmc
popf
popa
xor
fdivr
retf
sub
stos
data16
dec
mov
sar
cmp
inc
mov
mul
mov
mov
cmp
sbb
cmp
inc
out
cmp
and
imul
jmp
adc
dec
ret
pop
inc
mov
cmp
ja
fisttp
ret
aad
jp
jmp
fstp
pop
or
dec
inc
or
mov
stos
gs
jb
push
loope
in
adc
sti
xchg
mov
inc
jmp
jns
cdq
das
shr
or
pop
push
cmps
pusha
mov
popf
ret
sbb
or
xor
(bad)
out
cmp
xchg
ins
nop
jae
mov
imul
pop
adc
jmp
inc
outs
bnd
stos
add
clc
sbb
fistp
(bad)
jl
dec
test
cmp
jle
push
loop
sbb
mov
jb
xchg
xchg
bound
sub
jo
into
jns
in
shr
push
mov
(bad)
pushf
push
xlat
jb
adc
add
scas
mov
pusha
aas
stos
out
mov
ret
mov
movs
sbb
add
outs
shl
js
inc
out
das
mov
inc
sbb
dec
xchg
scas
es
cmps
jmp
or
iret
and
mov
lock
and
mov
mov
arpl
mov
cmps
bound
ss
jp
xlat
mov
rcr
ss
lahf
push
add
mov
sub
ror
jmp
push
scas
ds
add
mov
(bad)
pop
cmp
push
cmps
(bad)
pop
mov
repnz
jle
lahf
cli
mov
std
imul
xor
ret
add
xchg
sbb
dec
jb
or
aad
sbb
sub
(bad)
in
aad
or
jae
into
cmp
jb
mov
sbb
ret
add
fcomp
(bad)
or
add
xor
(bad)
and
sub
loope
movs
mov
cmp
mov
mov
mov
mov
jnp
jb
jle
add
mov
pusha
push
pop
xchg
and
or
mov
jp
mov
and
xor
adc
or
pop
jmp
out
xchg
mul
and
cli
ror
cmp
push
stos
inc
lea
pop
test
push
ins
dec
cmp
call
and
sub
and
xchg
xchg
inc
mov
out
inc
vhaddps
shl
fbld
inc
xchg
fst
aad
sub
test
cmps
add
jb
inc
(bad)
cdq
into
mov
mov
mov
test
xor
or
xchg
dec
shl
mov
aas
cwde
sar
repz
fwait
clc
pop
pop
and
into
sub
or
and
in
mov
xor
or
fmul
xchg
gs
push
mov
push
pushf
loop
jmp
mov
pop
push
fldenv
mov
test
inc
js
push
xor
dec
hlt
sub
xor
cmp
add
mov
xchg
lods
outs
lahf
fs
sbb
xchg
sub
sbb
mov
push
mov
mov
mov
mov
mov
repz
jmp
lods
cmps
test
jle
(bad)
mov
pop
leave
jecxz
lock
or
iret
call
cmc
adc
lods
icebp
sub
add
call
cmp
popa
pop
fimul
mov
cmp
add
inc
dec
mov
ret
sti
and
in
sbb
xchg
push
inc
xor
inc
outs
mov
add
retf
movs
pop
pop
rcl
(bad)
repnz
fstp
ror
sbb
xor
sbb
mov
jge
call
xor
push
arpl
mov
xchg
add
adc
call
or
push
add
dec
fcmovu
shr
cmp
fldcw
popf
aaa
jno
aam
loopne
mov
dec
xor
repz
mov
lea
and
cli
fistp
or
pop
sbb
pop
xor
pushf
fwait
xor
(bad)
test
lea
inc
out
pop
scas
fsub
les
push
and
pusha
cmp
cmp
(bad)
jle
aas
icebp
pop
adc
mov
es
mov
int
cs
xor
jge
cmp
xor
daa
popf
aad
fiadd
mov
pop
dec
out
hlt
stos
sub
and
jl
add
mov
cs
test
out
pop
pxor
push
enter
sbb
lock
mov
sbb
mov
push
rcl
sub
and
(bad)
xlat
stc
div
cmps
cmc
add
pop
in
fisubr
ud1
dec
fwait
sub
inc
pop
sar
sbb
mov
mov
sar
stc
stos
sub
xchg
jne
cmp
hlt
pop
aad
and
jno
dec
ins
lock
cdq
rol
mov
adc
mov
and
mov
js
dec
popf
cmps
ins
mov
pusha
sbb
pop
sub
jb
pop
push
and
mov
loopne
mov
sbb
or
jns
adc
push
ja
xor
mov
pop
push
or
dec
pop
push
add
cwde
or
jo
jle
in
xchg
aad
or
dec
xor
shl
addr16
imul
add
ins
leave
xor
inc
fldenv
jmp
mov
dec
(bad)
add
dec
and
bound
rcr
xchg
cdq
mov
rol
popf
xor
mov
mov
mov
popa
dec
sbb
in
mov
mov
dec
push
jbe
(bad)
repnz
xchg
sub
test
test
repnz
cdq
scas
stc
mov
clc
push
lds
(bad)
fadd
ds
fdiv
imul
fild
aas
sub
(bad)
mov
jmp
push
or
arpl
mov
or
add
jns
jb
pusha
sbb
ins
adc
cmp
dec
mov
jb
add
inc
ret
call
push
scas
arpl
pop
xor
lock
pop
add
jecxz
dec
stc
pop
adc
(bad)
adc
dec
leave
add
ror
cmp
pop
int
fmul
imul
cmp
sub
mov
lods
fnstenv
cld
mov
mov
call
aas
and
cs
inc
dec
mov
pop
jecxz
(bad)
enter
in
sub
inc
enter
sub
sti
fsubr
jnp
sti
pop
jge
dec
add
xchg
mov
xchg
in
iret
mov
(bad)
cmp
movs
sub
leave
and
ret
dec
rol
cmp
mov
pushf
and
sbb
xchg
sub
dec
dec
mov
push
cli
cmp
dec
adc
sbb
sbb
dec
mov
xor
dec
loopne
and
xor
inc
lea
fdivr
jbe
xchg
jp
pop
pop
retf
repnz
xchg
mov
sbb
lea
fst
xchg
xor
and
xor
pop
adc
lods
xchg
inc
sub
add
aad
sub
add
mov
dec
ins
arpl
pop
and
loop
push
daa
lock
or
sar
jbe
pop
adc
mov
clc
test
jmp
mov
jo
inc
pusha
jb
pusha
or
addr16
mov
and
inc
or
stos
adc
adc
addr16
or
xor
mov
cwde
(bad)
(bad)
jmp
push
fnstcw
stc
sar
adc
scas
lock
push
mov
call
mov
mov
and
dec
mov
ins
lock
pop
and
(bad)
nop
mov
fwait
pop
fsub
daa
mov
inc
jo
or
xchg
leave
or
mov
rol
cmp
push
or
je
xchg
sbb
test
jne
shl
pop
and
inc
pushf
cwde
and
pushf
mov
jb
xor
sbb
mov
dec
jo
shl
pop
xlat
mov
and
sbb
adc
shl
inc
aam
cs
pushf
mov
sub
mov
xor
sub
nop
dec
call
call
xchg
jbe
or
clc
stc
test
adc
call
jl
stos
and
mov
cmps
(bad)
add
add
ins
fwait
cs
fwait
daa
mov
retf
cmc
mov
cmps
call
and
and
add
sar
sbb
mov
addr16
pop
loopne
and
sub
mov
aaa
xor
ds
movhps
(bad)
mov
pop
cld
fisttp
lahf
aaa
xchg
rcr
xchg
sub
fsubr
enter
mov
jmp
popf
sbb
push
sub
mov
add
shr
push
ret
cmp
push
shr
sti
inc
push
xor
sub
mov
cmc
mov
or
cmp
repz
pop
push
imul
sub
(bad)
(bad)
pusha
dec
ror
mov
(bad)
and
pop
inc
pop
aaa
sbb
cmps
fwait
xor
pop
and
(bad)
cmp
sub
cmp
lock
daa
cwde
arpl
pop
xchg
pushw
jo
push
jmp
mov
and
fmul
dec
ja
or
mov
lahf
sar
push
and
or
fcmovbe
jmp
xchg
sahf
call
retf
lea
or
jbe
xchg
jo
cmp
mov
movs
pusha
bndstx
xlat
sub
pop
loop
cmps
mov
aas
mov
and
sub
pushf
test
or
dec
xchg
cmp
mov
movs
test
sahf
loop
jb
xor
fist
sub
call
or
jle
add
pop
out
pop
fadd
test
mov
add
or
shl
test
cmp
dec
ret
inc
das
dec
sub
cmp
or
xchg
sub
mov
and
add
sbb
sbb
sbb
imul
xlat
int3
movs
push
add
xor
mov
es
fwait
cdq
mov
pop
test
fisttp
call
ins
jnp
pop
out
shl
mov
mov
and
mov
cmp
fstp
lods
fild
pop
arpl
mov
js
adc
(bad)
sbb
lds
adc
or
mov
cmp
fldcw
les
icebp
dec
sub
cld
retf
int
aaa
(bad)
repnz
push
int
add
mov
mov
jle
pop
into
call
adc
aad
dec
int3
and
fsubr
pop
cmc
xor
push
jbe
arpl
mov
into
aas
aas
mov
rol
lock
aad
outs
loop
pop
repnz
call
mov
hlt
arpl
or
retf
popa
pop
xor
adc
sahf
imul
nop
cmps
push
pop
cmp
inc
adc
call
dec
jmp
mov
add
push
les
dec
ret
or
xchg
pushf
xor
pusha
rol
jg
enter
aad
adc
ret
pop
sbb
mov
mov
mov
out
cmp
jp
mov
mov
aam
fcmovnu
aad
call
test
jmp
pop
cwde
gs
pop
push
int
stc
xor
ret
jl
or
xchg
mov
sbb
dec
std
pop
xchg
call
in
fsubr
pop
in
aas
retf
mov
imul
call
sbb
ins
push
push
inc
sbb
sbb
sub
ins
ror
pop
xor
xchg
dec
sub
inc
rcl
(bad)
cmp
mov
mov
jmp
stos
xchg
arpl
fdivr
or
mov
loopne
jns
inc
sti
jns
imul
xchg
stc
adc
cmps
or
and
pop
clc
mov
movs
cmp
clc
(bad)
jae
imul
jp
push
or
dec
cmc
dec
pop
outs
repz
jno
dec
jns
test
repz
and
mov
mov
jecxz
lock
or
nop
mov
sub
push
fisubr
jp
xchg
and
repz
xor
dec
mov
and
pop
loope
fnstenv
cwde
xchg
retf
pop
fsub
sar
inc
test
inc
test
push
shl
dec
cmps
(bad)
lock
mov
add
xchg
xor
outs
sub
out
mov
adc
or
jo
(bad)
mov
ss
xor
and
loopne
rcr
push
call
cmp
hlt
test
cmp
jnp
jp
inc
dec
(bad)
stos
ds
daa
push
movs
or
jo
push
mov
mov
mov
pusha
cs
sub
cdq
js
mov
push
adc
sub
jmp
(bad)
ffree
je
xchg
repz
push
xor
jg
out
mov
mov
mov
or
rcl
les
and
(bad)
jb
cmp
jmp
pop
cmp
xor
sbb
xlat
xchg
cdq
push
iret
fisttp
add
fs
jo
jb
(bad)
loope
les
pop
xor
jnp
jno
jns
push
adc
and
sbb
adc
adc
or
arpl
mov
jg
xor
sbb
push
dec
ins
cld
cmp
cmp
inc
(bad)
pop
jl
mov
inc
popa
fdivr
pop
xchg
xchg
add
stos
cld
adc
pop
adc
inc
cmps
sahf
jno
sbb
pop
dec
add
inc
cs
push
push
addr16
push
xchg
and
sub
jmp
bnd
push
or
shr
fadd
cmp
inc
aaa
xor
pop
fsub
push
clc
push
dec
(bad)
push
and
out
leave
fiadd
enter
pop
loop
in
loope
jno
cwde
sub
not
enter
mov
inc
rcl
push
bound
jp
dec
sbb
add
icebp
popf
imul
cmp
mov
cld
fistp
mov
jmp
sahf
sar
cld
or
clc
outs
pop
mov
fwait
inc
ficomp
test
and
push
dec
mov
jns
pop
fistp
in
aad
push
mov
or
popf
and
mov
sub
call
ins
les
pusha
inc
mov
cmp
dec
inc
xchg
fsubp
fimul
sar
jne
je
sbb
stos
pop
sbb
pop
call
loope
and
mov
lea
sub
xor
add
mov
repz
xor
test
test
jge
repnz
daa
lods
in
push
outs
sub
in
xlat
or
push
add
pop
jecxz
les
ds
jno
jo
cmp
dec
test
fnsave
sub
or
jmp
cli
call
xor
sbb
add
adc
outs
sub
push
cmps
mov
dec
sub
je
pushf
xchg
push
js
cli
shr
in
fwait
jns
cmp
mov
dec
push
mov
sbb
dec
dec
cmps
lock
rcl
stos
std
dec
dec
fldenv
add
pop
icebp
ja
or
scas
cmp
push
dec
jo
ins
adc
adc
jns
clc
dec
enter
mov
push
xor
or
cwde
jb
pop
adc
test
mov
cmp
call
dec
lock
jo
stos
cs
adc
mov
pop
call
jmp
hlt
aad
jbe
test
cmp
dec
pop
fwait
push
push
fidiv
pop
or
fdiv
jmp
mov
les
loop
fs
push
scas
cmovns
jae
stc
aaa
inc
xor
hlt
cmp
cs
repz
cmp
sti
cmp
jnp
jmp
push
cmp
ds
pop
push
push
or
adc
dec
call
cmp
(bad)
pop
pusha
inc
sar
inc
mov
shl
sub
push
push
push
loope
cmp
fdivr
mov
sbb
sbb
aaa
pusha
mov
push
push
repz
mov
retf
push
add
into
push
leave
lods
ja
das
imul
jo
jmp
mov
sar
mov
ret
cmp
repnz
dec
push
retf
cmp
sbb
jbe
and
jb
ins
pop
inc
sub
daa
rcl
jne
and
imul
cwde
adc
dec
out
jmp
mov
mov
(bad)
outs
mov
fistp
dec
rcl
das
daa
cld
inc
lods
and
xor
std
popa
bnd
aad
call
pop
vmread
jbe
cmps
(bad)
les
mov
ret
sbb
loope
out
mov
or
loop
add
rsqrtps
int
jo
dec
or
repnz
out
shr
mov
ds
or
addr16
cld
call
retf
pop
arpl
cmp
dec
fisub
and
iret
add
xor
bound
mov
popa
xor
and
xor
pop
jp
fstp
push
mov
and
mov
add
cmp
xor
and
pushf
and
arpl
add
js
jns
pop
sub
mov
loop
mov
call
or
dec
jp
jo
aas
add
mov
sbb
lea
lds
int3
jne
loopne
xchg
mov
pusha
ficom
cdq
loope
xor
xor
push
pushf
sbb
int3
out
out
call
add
cmp
ins
and
imul
lods
fwait
mov
or
adc
or
imul
into
xor
daa
cli
jo
jb
cmp
mov
add
xor
and
in
xchg
xchg
adc
mov
push
xor
mov
xor
test
test
aam
mov
daa
adc
xor
inc
shl
sar
cmp
out
adc
cmc
or
bnd
std
loop
inc
in
loopne
bound
cmp
out
cwde
adc
push
sub
shl
(bad)
cmp
mov
out
or
xor
pop
mov
sub
mov
jb
push
inc
dec
cmp
loop
ret
pop
and
ror
sti
adc
test
mov
inc
xchg
lods
pop
push
jmp
push
dec
or
int3
retf
into
cmp
mov
push
imul
push
call
icebp
or
pop
iret
adc
cmp
test
adc
pusha
jbe
neg
jmp
ja
out
mov
lods
jg
test
inc
add
push
cmp
jmp
cmp
dec
sub
mov
adc
test
aad
mov
push
rsm
pand
sub
adc
jg
push
cmps
std
rol
xor
lock
lea
lods
add
add
scas
(bad)
sbb
cmps
cmp
rcl
push
cdq
sbb
fs
xchg
dec
cmp
js
push
adc
mov
mov
sub
xchg
popf
xor
dec
(bad)
mov
xchg
ss
(bad)
sbb
bswap
enter
adc
test
mov
sbb
and
cmp
sbb
push
fnstsw
inc
mov
(bad)
pop
shr
mov
jl
icebp
enter
in
mov
(bad)
mov
mov
repnz
test
neg
jge
push
call
popf
lds
scas
clc
inc
cmp
call
pop
lahf
sub
sahf
repnz
add
mov
sub
cli
mov
jp
add
adc
mov
and
mov
mov
push
push
adc
pop
jae
dec
cmp
sbb
xchg
sbb
in
loop
cdq
aas
out
dec
jecxz
test
dec
jmp
gs
jp
ret
leave
adc
jmp
jmp
test
jp
push
mov
sbb
adc
out
dec
ins
cmp
add
sub
jl
inc
adc
mov
dec
push
loopne
sti
(bad)
xchg
sar
add
and
call
mov
pop
adc
mov
cmc
call
xchg
test
retf
cmp
sbb
jge
repz
cs
movs
stos
push
jge
push
jg
xchg
jbe
test
nop
cli
jecxz
inc
mov
popf
mov
jmp
sbb
jmp
mov
mov
dec
inc
cmp
js
jg
add
sbb
repnz
fldcw
push
sbb
adc
and
ret
jle
pop
pop
test
adc
and
push
pusha
jae
jns
inc
adc
add
lock
or
push
cdq
in
int3
jp
push
and
sbb
inc
int3
push
cmp
test
dec
xchg
xor
mov
mov
mov
push
dec
push
pusha
lods
xor
fdivr
xchg
mov
loopne
call
jp
xor
mov
mov
rcl
lods
call
ror
fisttp
or
mov
ss
and
inc
movs
pop
fs
cmp
cmp
loop
adc
push
es
cmp
cld
dec
stc
mov
je
ins
jns
fld
mov
jle
mov
dec
cmp
fild
shl
cs
cmp
pop
xchg
xchg
push
movs
sub
pop
lahf
mov
dec
call
push
xchg
les
or
pop
push
xchg
in
mov
fnstsw
xchg
push
push
push
pop
push
jl
inc
(bad)
cmp
pop
push
hlt
mov
cmp
jge
(bad)
mov
lock
leave
int3
push
push
sar
pop
mov
jo
mov
mov
mov
mov
in
ins
push
dec
enter
adc
push
clc
pop
sbb
into
inc
xchg
add
mov
ret
sbb
add
lds
push
xor
jg
setbe
xchg
int3
mov
lahf
lods
dec
sti
and
out
pop
jle
jg
cmp
popf
test
loopne
call
int3
aad
mov
mov
cwde
dec
xchg
repz
cmp
jo
loop
cmp
mov
dec
mov
ins
cld
pop
pop
stc
out
mov
push
pop
scas
xor
aaa
jp
sbb
mov
(bad)
(bad)
loop
cmp
pop
test
push
mov
arpl
pop
cmp
retf
in
add
jb
fbld
daa
sti
sub
xor
adc
cmp
inc
push
xchg
les
and
inc
mov
std
xchg
add
(bad)
fild
pusha
call
mov
xor
jle
cmps
add
loopne
mov
pop
mov
add
mov
mov
mov
test
enter
(bad)
retf
push
xchg
das
scas
xchg
cmp
out
jecxz
sar
test
jo
mov
das
add
fldcw
call
xlat
dec
fdivr
pop
shl
int3
loope
or
repnz
shr
mov
jl
xor
popa
adc
test
adc
in
jns
fs
jecxz
jmp
iret
add
jmp
jo
(bad)
sub
lds
and
pop
iret
(bad)
pop
vmwrite
fsub
repnz
add
ss
xor
adc
cmp
sub
fs
inc
cli
sub
jmp
sti
add
inc
mov
enter
dec
lea
xchg
mov
arpl
stos
in
pushf
pop
xor
jo
cmps
jnp
les
gs
sub
sbb
xchg
push
loope
rcl
ins
xchg
mov
retf
xor
stc
sbb
cwde
adc
mov
loopne
mov
imul
cmp
in
or
cmp
xor
dec
cli
adc
lea
addr16
sub
or
fist
seto
mov
loop
mov
pusha
jnp
inc
jge
cmc
push
sbb
sub
fstp
fdiv
ins
cwde
cmps
arpl
pop
xor
icebp
clc
fild
sub
dec
mov
push
inc
aaa
xlat
or
jo
fiadd
jecxz
push
xor
and
fsub
clc
push
leave
pusha
popa
xor
dec
mov
pushf
sbb
adc
mov
mov
hlt
mov
es
xchg
call
adc
cmps
adc
cdq
test
iret
add
xor
or
mov
dec
mov
push
pusha
ins
add
mov
add
sbb
sar
outs
push
jmp
or
mov
out
and
ret
mov
xor
and
push
adc
sbb
imul
fist
xor
les
mov
sbb
pop
mov
mov
shr
xchg
(bad)
mov
ret
int3
add
adc
mov
cmps
arpl
jae
xchg
mov
or
jae
push
mov
repnz
add
xchg
icebp
(bad)
(bad)
mov
repnz
mov
lock
and
xchg
out
out
pop
fidiv
mov
inc
das
mov
mov
fwait
mov
mov
xchg
call
pop
jmp
(bad)
sar
stos
fmul
shl
retf
dec
mov
sbb
push
movs
sbb
jmp
sub
retf
cmps
xor
xchg
cwde
retf
sub
stc
clc
call
push
mov
or
inc
jnp
bound
sbb
push
mov
jp
mov
(bad)
daa
popf
mul
aad
pop
fsub
cmc
add
push
fs
inc
xchg
fild
stc
mov
dec
jo
xor
cmp
dec
lds
and
test
hlt
aas
mov
bound
mov
popf
dec
push
mov
sub
add
inc
xlat
cwde
rcl
or
xor
call
pop
out
cmp
dec
in
mov
mov
cmp
iret
cmp
xor
and
or
mov
(bad)
xchg
repnz
sub
stos
gs
push
and
sub
push
or
out
xor
lods
or
inc
pop
xor
fcomp
test
mov
jmp
or
rcr
test
in
fist
pushf
cmps
xchg
sbb
push
cwde
les
fist
popf
shl
xchg
mov
lods
rol
push
mov
clc
sub
mov
xor
pop
loopne
cmp
inc
call
add
mov
test
shl
xor
ficom
push
push
adc
push
mov
sbb
sbb
mov
inc
ret
std
bound
pop
cmps
mov
call
mov
inc
in
inc
sbb
xchg
xchg
xor
pop
xchg
jge
sub
xor
sub
mov
movs
mov
add
push
mov
sbb
aas
hlt
inc
ins
xor
and
movs
arpl
jb
inc
stos
add
or
dec
enter
jns
xchg
mov
enter
shl
popf
into
fcomp
or
retf
call
xor
outs
mov
rol
jmp
push
add
xor
mov
lds
arpl
jae
leave
add
jmp
jo
add
jo
pusha
jmp
aam
repz
dec
add
sbb
dec
arpl
pop
int
stos
xor
dec
ror
ins
repz
add
dec
mov
sbb
fnstenv
dec
adc
sub
sbb
cmps
cmp
cmp
or
mov
aad
add
push
stc
movs
scas
outs
scas
mov
push
push
or
into
xchg
mov
mov
fdivr
sbb
xor
dec
dec
fnstenv
in
dec
push
push
or
dec
cwde
movs
call
popf
add
add
imul
not
or
sbb
mov
push
(bad)
ret
daa
mov
jb
and
push
bound
jbe
cli
aam
dec
cmp
outs
scas
sbb
call
icebp
cmp
mov
clc
les
inc
jb
dec
bound
mov
jno
xlat
sbb
xchg
mov
fsin
out
mov
ss
or
dec
test
and
fiadd
xchg
cmp
shl
or
xor
fadd
xor
or
sub
(bad)
dec
pop
(bad)
(bad)
repz
lock
ss
xor
sbb
and
cwde
ror
daa
fs
(bad)
stc
enter
cmp
bound
retf
arpl
iret
retf
xor
cwde
addr16
lods
out
mov
cs
cmp
ret
mov
fild
in
xchg
fsub
or
mov
pop
call
mov
and
cmp
sbb
mov
sub
mov
cmp
mov
data16
inc
clc
pop
std
cmp
repnz
cmp
dec
js
lods
push
sub
lea
cmp
or
scas
push
xchg
fs
inc
and
inc
mov
data16
ret
cmps
mov
cmps
test
pop
fs
stc
mov
aam
pop
jbe
imul
enter
sub
(bad)
push
jecxz
sub
push
call
xor
jb
icebp
pushf
lods
cmp
(bad)
cmp
cli
push
enter
cmps
xor
popf
xchg
call
jecxz
jb
sbb
in
test
call
mov
pusha
jp
pop
inc
mov
inc
jns
dec
cmc
and
sbb
(bad)
cmp
push
pushf
mov
push
dec
push
(bad)
(bad)
inc
iret
push
je
fsubr
xchg
adc
mov
loop
ins
sub
call
or
mov
sar
jecxz
xchg
in
out
mov
shl
and
call
add
xchg
nop
sbb
pushf
andps
sbb
dec
mov
sbb
inc
dec
dec
jmp
mov
push
pop
mov
cmp
xchg
stc
adc
xor
ret
cdq
mov
ds
mov
add
cmp
loop
loopne
or
mov
or
jg
push
inc
inc
inc
cmp
cmp
sub
ss
mov
adc
stc
sbb
xchg
lods
enter
ret
and
push
addr16
fsubr
mov
push
push
inc
sub
popa
dec
push
fwait
adc
int
mov
nop
sbb
and
(bad)
out
neg
fnstenv
add
push
gs
fwait
add
nop
pop
retf
mov
outs
sahf
and
rol
loop
jo
add
fist
cli
arpl
push
syscall
cmp
push
and
pop
sbb
push
movs
les
xchg
addr16
sub
inc
repz
pop
imul
fisub
mov
mov
mov
arpl
xor
test
jmp
pop
or
xchg
pop
and
xor
add
nop
and
dec
mov
inc
pop
and
popf
xor
sub
mov
jns
shl
push
mov
xor
sbb
or
or
adc
loopne
test
jns
pop
adc
xor
test
sbb
and
stc
push
xchg
bound
gs
dec
hlt
xchg
lahf
add
and
loop
mov
les
xor
mov
push
cli
sub
adc
fisttp
mov
sub
ror
retf
hlt
cmp
cmp
aam
inc
pop
shl
mov
test
dec
add
retf
jmp
sbb
jmp
sbb
enter
add
fisub
xor
pop
mov
sbb
pusha
mov
pop
xlat
dec
lock
pop
xchg
push
sbb
mov
dec
cmp
sbb
jmp
mov
mov
sbb
mov
scas
leave
cmp
fwait
daa
inc
jb
das
lods
push
jns
mov
fcomp
call
imul
fild
addr16
xchg
mov
inc
shl
and
lahf
add
inc
mov
pop
mov
mov
push
xchg
push
sub
or
es
movs
xchg
pop
push
(bad)
cmp
mov
adc
in
test
sub
cwde
push
or
mov
ror
loopne
pop
std
cmp
dec
sbb
ret
bound
fistp
out
cmp
cli
sbb
jne
or
bnd
adc
pop
push
push
loop
mov
xchg
sub
jno
xor
sub
or
jns
cmc
or
outs
adc
(bad)
aas
or
(bad)
sbb
cld
es
jbe
ret
rcr
pop
test
stos
and
adc
stos
add
stos
lahf
and
add
push
jmp
mov
fist
mov
imul
enter
dec
inc
enter
test
mov
sub
jge
adc
das
xlat
cmp
cmp
sub
sub
mov
stos
mov
dec
sbb
mov
adc
sbb
xlat
clc
push
dec
sahf
pop
call
push
mov
dec
arpl
jge
add
pop
cwde
dec
xchg
loopne
cli
mov
pop
outs
enter
mov
adc
dec
div
loop
or
ins
or
adc
arpl
jmp
test
pushf
sub
mov
mov
(bad)
inc
sub
sbb
fiadd
fwait
inc
cmp
rol
mov
lods
jp
arpl
jae
sahf
mov
unpcklps
inc
jle
fisttp
or
mov
mov
dec
xor
int
adc
xchg
inc
ins
or
loopne
mov
xor
icebp
mov
lock
pop
and
mov
out
xchg
jle
mov
arpl
mov
in
cmp
arpl
loopne
add
rcl
jns
sbb
jl
shl
fld
ret
ret
outs
xchg
inc
pop
fistp
xor
les
adc
pop
fistp
nop
inc
into
mov
(bad)
fld
fwait
mov
pop
mov
pusha
push
test
cwde
idiv
inc
ja
clc
test
mov
call
inc
xor
or
xor
inc
xchg
mov
js
pop
inc
jmp
jb
push
push
pop
add
dec
mov
enter
push
into
leave
pusha
sbb
outs
push
or
add
sbb
pop
add
mov
std
and
pusha
cli
data16
or
push
dec
and
push
sub
cmp
outs
pusha
pop
jcxz
dec
test
push
inc
ret
outs
jae
jb
mov
mov
pusha
call
mov
adc
and
and
pop
test
sbb
and
mov
mov
test
jecxz
sub
dec
push
stc
into
leave
icebp
fnstenv
out
xor
mov
mov
jmp
sbb
clc
retfw
jno
jecxz
cmc
mov
jbe
mov
mov
xchg
xor
(bad)
stc
retf
leave
sti
shl
jno
jnp
push
pop
jl
jmp
mov
adc
cdq
xor
ss
cs
or
cmps
fstp
dec
popf
sbb
jnp
jp
xchg
jg
bound
inc
es
adc
dec
aad
sub
mov
xor
retf
pop
enter
sub
add
hlt
jecxz
mov
mov
loop
js
les
rcl
mov
jns
scas
repz
cmp
rcl
pop
std
pop
cmps
loopne
xchg
dec
push
mov
popa
leave
cmc
leave
xchg
push
mov
dec
and
pop
popf
retf
gs
ins
outs
sbb
call
ins
xor
inc
jp
xor
cmp
pop
push
mov
xor
lods
and
or
sub
sbb
dec
add
dec
dec
out
add
mov
xor
sahf
dec
sbb
ret
jmp
or
inc
call
test
xor
mov
hlt
mov
arpl
lds
jnp
mov
lea
cdq
jmp
(bad)
retf
and
sbb
clc
repz
repnz
mov
jno
pushf
or
rcr
sbb
xchg
jae
pop
and
mov
dec
fcom
cld
sbb
push
gs
adc
repnz
xor
pusha
arpl
scas
mov
jb
jns
push
imul
call
int3
pushf
out
mov
and
popa
jle
(bad)
mov
popa
push
bound
stos
test
pusha
adc
cli
mov
(bad)
bound
lock
pop
dec
out
dec
ins
add
fwait
mov
jp
stc
call
out
mov
lock
stos
mov
clc
repz
adc
xor
imul
retf
icebp
test
fwait
mov
jnp
arpl
add
movs
out
mul
in
rcl
stc
dec
mov
push
outs
and
or
(bad)
cmp
or
or
mov
leave
popf
sbb
cld
arpl
add
ret
cmp
mov
call
fist
inc
xor
add
xor
jns
sbb
sub
adc
jge
and
(bad)
mov
aam
stos
call
jne
pop
fwait
ss
call
mov
addr16
dec
and
mov
adc
lods
push
sub
fiadd
cli
fmul
xchg
adc
leave
stc
push
fwait
sbb
mov
jb
jbe
jno
stos
add
and
add
sub
xor
mov
add
leave
bound
mov
add
mov
jle
shl
dec
add
mov
push
cmps
add
and
(bad)
mov
pushf
cmp
push
lock
movs
push
and
mov
ficom
frstor
out
mov
sar
fs
dec
mov
jecxz
add
loop
call
fiadd
push
ficom
pop
sbb
or
add
mov
imul
fistp
lods
add
movs
fistp
loop
and
cwde
shl
pop
mov
popa
cmc
and
aaa
dec
inc
mov
arpl
jae
imul
into
arpl
pop
shl
stc
jecxz
mov
push
test
enter
dec
mov
pop
popf
fldcw
ret
mov
sub
xor
pop
imul
mov
inc
push
cmc
enter
xor
scas
test
xchg
call
xchg
popa
arpl
pop
sbb
push
add
sbb
sub
mov
mov
(bad)
jo
cmp
sbb
and
and
ds
(bad)
call
mov
xchg
ins
adc
xor
xor
jo
jb
es
clc
or
ficom
retf
hlt
xor
inc
ret
cmps
retf
scas
sub
test
shl
xchg
repnz
push
mov
retf
add
push
push
sub
xchg
sub
imul
mov
sub
dec
pushf
mov
or
sbb
sub
dec
mov
cld
dec
in
push
(bad)
fcom
adc
adc
jg
rol
retf
mov
mov
dec
push
stos
cmp
mov
xor
push
fiadd
ret
cmp
jmp
xor
out
shl
es
jmp
loop
pop
outs
mov
fidiv
addr16
hlt
jmp
cli
movs
cld
test
mov
jle
data16
push
loop
enter
js
shl
fmulp
ficomp
fidiv
fisubr
imul
call
or
fdiv
add
cmp
cld
retf
pop
frstor
jmp
add
lea
mov
lahf
and
rol
and
lods
call
mov
mov
cli
repnz
mov
aaa
cwde
inc
xchg
adc
leave
aad
cmp
xchg
cmp
cmp
mov
mov
je
sbb
mov
mov
push
add
bound
ret
call
jl
sahf
and
sub
rol
and
inc
mov
cmp
fucom
pop
rcr
pop
fsub
and
gs
adc
mov
push
mov
stos
mov
pop
fisttp
cmp
jg
fld
adc
add
push
push
mov
cli
mov
push
cmp
int3
fsub
nop
and
xchg
jp
sti
dec
inc
jne
cmp
push
(bad)
and
aas
std
js
mov
jnp
push
dec
add
(bad)
pop
(bad)
adc
repz
fcom
int3
es
nop
movs
shl
retf
mov
data16
mov
mov
adc
push
pusha
dec
scas
sub
push
sbb
pushf
fstp
stos
adc
mov
(bad)
sbb
sbb
push
mov
data16
adc
pop
ror
xor
and
or
leave
dec
jnp
xor
fwait
arpl
dec
stos
add
ins
cwde
mov
nop
and
imul
loop
push
and
cmp
mov
jmp
mov
and
adc
and
mov
and
movs
mov
jae
shr
jb
lods
stos
cmp
enter
enter
inc
pop
mov
icebp
test
pop
cld
outs
cdq
mov
adc
rcr
loop
sub
inc
push
pop
xor
xchg
sbb
push
and
inc
not
jne
dec
jecxz
shl
pop
not
outs
pop
cmp
jb
std
push
adc
test
xlat
cli
pop
mov
sbb
push
shl
xor
imul
shr
cmc
jge
pusha
cmc
inc
push
test
mov
add
push
icebp
sub
mov
ret
cld
push
pop
xchg
loop
mov
mov
ror
ds
and
nop
add
je
sbb
stos
xchg
cmp
or
sub
xchg
ins
call
and
jmp
js
bound
std
movs
mov
push
mov
or
scas
or
test
push
shr
xor
nop
adc
jmp
push
test
mov
push
hlt
fdiv
retf
(bad)
in
shr
inc
mov
shl
cwde
imul
mov
mov
adc
push
adc
and
cmp
xchg
jmp
ret
sub
enter
ss
and
inc
ins
pop
add
dec
repnz
test
fucompp
push
mov
cmps
ret
(bad)
mov
stos
inc
jle
aaa
aad
push
sub
pop
int
push
sub
or
stos
inc
xchg
nop
jecxz
inc
xchg
jne
ins
fild
mov
outs
test
repz
nop
jbe
or
retf
push
je
jb
mov
push
mov
js
mov
pandn
add
ret
pop
mov
mov
adc
or
sar
xor
adc
cwde
mov
repnz
clc
xchg
fisttp
sti
loopne
fimul
data16
sub
mov
jnp
cmp
outs
inc
inc
sub
sub
pop
stc
out
arpl
cdq
sbb
or
adc
rcr
lahf
push
pop
in
pop
(bad)
push
test
pop
out
aas
test
retf
addr16
rcr
imul
clc
sbb
pop
push
jmp
movs
ds
mov
loope
pop
popa
sub
das
jae
xchg
les
inc
jp
and
cdq
push
xchg
cdq
mov
push
push
test
and
mov
adc
(bad)
and
push
test
inc
sub
inc
call
adc
xchg
movs
shr
leave
test
sbb
xor
fcomi
leave
push
arpl
jle
(bad)
adc
jmp
sar
dec
sbb
jle
lock
out
dec
test
popf
add
jno
jb
or
pop
jmp
mov
adc
sbb
mov
fdivr
mov
adc
mov
sti
lods
xchg
test
(bad)
scas
clc
enter
rcl
add
lea
loope
add
pop
jae
sbb
xor
mov
arpl
imul
mov
icebp
sub
jns
add
jnp
jno
lahf
xor
imul
mov
(bad)
lahf
mov
xor
push
stos
sub
mov
xchg
adc
sub
push
stos
outs
cmp
xchg
push
loopne
bound
push
enter
jge
mov
icebp
imul
jnp
cwde
in
pop
inc
push
sbb
call
mov
int3
cdq
std
cmp
mov
pusha
imul
ss
std
jl
call
xchg
pop
call
dec
jnp
loop
xor
mov
in
xchg
add
dec
rol
nop
jno
and
pop
jl
pop
xchg
repz
adc
sbb
mov
ret
push
int3
sub
adc
rol
add
inc
xlat
mov
(bad)
(bad)
and
popa
bound
dec
ror
xchg
pop
sub
xor
mov
(bad)
inc
movs
or
mov
repz
push
fisub
shl
or
std
sub
cmp
ds
in
or
lods
jb
sbb
in
add
jmp
inc
pop
fcmovu
repnz
adc
and
fcmovnu
cld
outs
xchg
dec
fwait
push
dec
repnz
mov
mov
mov
icebp
mov
push
add
stos
adc
call
fucomi
dec
mov
lahf
mov
lahf
scas
test
inc
jmp
cmp
mov
sbb
ret
test
inc
pop
xchg
or
clc
jecxz
jo
gs
ins
dec
nop
sub
icebp
adc
shl
cmp
imul
xchg
pop
cmps
adc
push
push
adc
cmp
je
xor
push
ret
pop
in
retf
mov
lock
inc
repnz
test
push
dec
xor
pusha
jl
lds
add
rcl
ret
cmp
push
or
mov
stos
mov
dec
imul
mov
cmp
out
outs
add
cmp
xor
loopne
xchg
mov
lods
lods
lods
fwait
push
(bad)
inc
leave
or
sub
(bad)
jmp
add
fwait
es
cmp
push
add
pushf
aad
int
cmp
rep
sbb
dec
jnp
and
adc
jmp
xchg
mov
sub
shr
and
pop
and
sbb
int3
push
hlt
adc
(bad)
pop
pushf
je
loop
xchg
cmp
fs
fwait
mov
jno
push
mov
cmp
(bad)
mov
sub
adc
pop
adc
inc
xchg
inc
je
mov
aam
jmp
sbb
mov
aad
cwde
mov
add
xchg
jno
inc
mov
push
repz
adc
ror
adc
xchg
mov
fsubr
int3
fucomp
test
call
xchg
jae
js
clc
cmp
fadd
retf
pop
xchg
pop
cli
seta
fdivr
jmp
dec
sub
nop
adc
cs
mov
mov
cmp
dec
sub
xor
rcl
cmp
and
cwde
loope
xor
ds
in
push
addr16
jns
dec
enter
mov
test
in
cs
inc
hlt
aad
retf
mov
push
sbb
out
sar
mov
sbb
and
xor
pusha
adc
stos
pusha
xchg
sbb
pop
and
scas
sub
push
out
add
outs
test
test
dec
ret
mov
cmps
cmp
jle
(bad)
nop
popa
and
ins
push
sub
adc
test
push
call
aam
dec
nop
and
dec
cdq
enter
push
mov
push
pop
retf
pop
push
jo
jmp
or
inc
leave
adc
or
pop
mov
adc
(bad)
sub
enter
pop
cwde
pop
cdq
cdq
aaa
jne
nop
mov
leave
adc
iret
rcr
mov
dec
sbb
outs
sar
adc
adc
mov
test
mov
push
fs
pusha
sbb
sub
(bad)
repnz
xchg
sbb
stos
mov
fs
push
clc
retf
sub
sbb
jle
or
xor
mov
mov
jno
pop
movs
sar
pop
in
pop
repnz
xlat
int
jmp
fiadd
out
inc
gs
lea
and
adc
xlat
jle
fs
xor
mov
test
addr16
push
pop
ja
jns
or
adc
xchg
and
mov
xlat
sbb
mov
jge
js
fwait
mov
xchg
(bad)
cwde
cmp
mov
mov
aas
cmp
leave
or
pushf
shl
in
dec
cli
aam
mov
jno
pop
push
sbb
ja
and
dec
rcl
out
or
(bad)
pop
out
(bad)
js
aaa
sbb
je
and
or
xor
and
sbb
xor
and
adc
adc
xor
out
in
mov
and
imul
idiv
cli
mov
mov
sub
(bad)
ficom
rcl
mov
mov
sbb
movs
inc
push
adc
and
aaa
pusha
dec
mov
cmp
pop
and
dec
add
xchg
cmpxchg
sti
xchg
mov
xchg
ins
xlat
sbb
(bad)
mov
loop
dec
sti
sub
add
ins
pop
test
sbb
adc
stc
mov
pop
stos
mov
jnp
inc
imul
cmp
out
jmp
call
hlt
in
cld
xchg
(bad)
mov
cmp
push
call
(bad)
jp
mov
xchg
inc
(bad)
or
div
pop
dec
pop
mov
mov
pop
xor
in
adc
sub
stos
loop
js
mov
sub
loopne
and
call
xchg
mov
jge
xor
ins
xchg
xor
jg
mov
xchg
int3
or
clc
lea
xchg
jp
pop
and
sub
enter
jns
stos
mov
js
jge
scas
mov
dec
jb
xor
dec
jmp
arpl
test
cmc
lds
cmps
test
cmp
cdq
call
jb
sbb
adc
aad
lods
cdq
push
push
lahf
cdq
nop
sub
pop
cmc
lods
and
add
sub
xchg
iret
add
jecxz
cmp
dec
imul
cwde
(bad)
mov
(bad)
stos
push
push
ss
repnz
cmp
pop
call
(bad)
xchg
out
add
sti
stc
rol
shl
aam
and
jns
cmp
leave
int
or
ret
dec
inc
xor
imul
sbb
fcmovbe
outs
shr
jbe
call
movs
or
sbb
xchg
dec
test
rol
adc
xchg
jo
repnz
(bad)
sar
adc
cdq
out
xchg
jmp
mov
sti
xor
dec
mov
ss
jl
xor
fadd
sar
inc
aam
xchg
pop
fwait
jns
or
shr
lea
and
data16
aas
pop
fistp
push
(bad)
sbb
cmc
add
push
jb
ins
clc
jg
fidivr
inc
shr
test
ror
push
or
xchg
mov
dec
ins
pop
inc
in
xchg
data16
mov
addr16
pop
pusha
mov
dec
mov
lgs
xchg
outs
icebp
(bad)
mov
and
nop
xchg
call
cdq
cwde
imul
das
jae
cvtps2pi
aaa
add
icebp
jmp
rcl
int3
and
sti
sti
sbb
jno
mov
js
or
xchg
ins
jo
push
cmp
leave
sbb
xor
mov
lods
(bad)
stc
push
adc
add
cwde
imul
xchg
retf
push
ficom
aaa
sub
push
aad
jmp
leave
jno
call
cwde
jmp
jb
cmp
clc
stos
mov
dec
mov
xchg
xchg
or
mov
int3
xor
cmp
or
dec
pop
pushf
sar
aad
or
push
fisub
clc
test
add
clc
cmp
mov
mov
jns
ret
shl
cmp
mov
mov
cdq
jle
pusha
dec
bnd
movs
cwde
in
jmp
sub
or
outs
fbstp
ds
mov
adc
jmp
push
enter
ds
pusha
aam
test
adc
sbb
xchg
fsubr
push
adc
xor
aam
mov
sub
cdq
mov
push
cmp
repz
sub
(bad)
cld
popa
xor
pop
adc
cmp
pop
and
inc
rol
cmp
mov
scas
fs
pop
repz
ret
dec
rcl
bound
je
fs
(bad)
sbb
rcl
loop
mov
add
jmp
imul
cwde
push
movs
xchg
cwde
and
xchg
(bad)
lahf
mov
push
retf
aas
or
adc
test
push
in
cmp
call
jp
pop
jl
jl
fadd
dec
pop
mov
adc
mov
mov
mov
in
es
add
js
std
dec
iret
leave
push
fsub
sbb
pushf
jb
in
dec
mov
call
dec
(bad)
adc
xor
cmp
adc
nop
ret
mov
cwde
xor
xchg
jge
clc
pop
mov
imul
std
clc
mov
lahf
lock
scas
add
xor
dec
dec
pop
add
dec
jnp
rcl
add
icebp
jno
jb
adc
ret
inc
mul
cmp
pop
(bad)
(bad)
repz
dec
sbb
xor
sub
imul
mov
or
sbb
push
pop
loopne
jmp
xchg
stc
adc
inc
aam
movs
push
fdiv
test
ss
or
inc
pusha
push
mov
clc
pop
pushf
mov
aam
push
adc
adc
pop
mov
mov
stc
dec
lea
int
adc
cmps
dec
sbb
add
inc
push
mov
or
mov
pop
push
das
je
add
adc
lahf
out
jl
or
adc
inc
inc
dec
scas
pop
fdivr
mov
and
es
fimul
jne
jo
pop
sub
repz
cs
ja
(bad)
push
cmp
bound
scas
sub
adc
mov
cmp
lahf
and
add
scas
leave
pop
cmc
inc
and
sbb
lock
jge
or
cmp
push
fld
ja
or
xor
stc
outs
add
adc
pop
or
add
fistp
repz
and
sti
cdq
fsubr
xchg
add
cmc
inc
ret
test
jmp
lea
out
lods
add
cld
mov
popf
scas
cwde
ret
or
cmp
push
xchg
push
mov
or
cmp
pop
sub
jo
dec
and
xchg
mov
inc
mov
push
mov
mov
or
loope
repz
arpl
outs
loopne
sub
rcr
xor
hlt
ds
hlt
inc
pusha
enter
ss
sub
shr
push
pusha
stos
inc
(bad)
mov
and
adc
ins
jne
(bad)
and
and
sub
test
pop
jl
shr
push
call
mov
leave
or
xchg
cmps
retf
jbe
adc
cwde
xor
mov
sahf
pop
rcr
stc
fist
test
xor
enter
adc
mov
in
jecxz
(bad)
mov
add
or
jmp
loopne
mov
pop
lea
xchg
jp
pop
cmc
xchg
ror
sbb
cld
outs
and
xchg
leave
stc
stos
cmp
lahf
or
aaa
adc
pop
pop
xchg
aas
jp
bound
repnz
push
cs
gs
js
jg
sbb
pop
mov
adc
mov
lods
cmps
iret
popf
leave
ss
aas
(bad)
pusha
fstp
call
leave
mov
sahf
push
loope
es
aad
imul
ficom
(bad)
hlt
mov
cmp
out
jne
sbb
les
mov
mov
sbb
fdiv
cmps
xchg
and
sbb
mov
sbb
cmp
mov
inc
jle
hlt
imul
dec
lods
fstp
in
push
sbb
mov
mov
mov
(bad)
out
sub
pop
cmps
pusha
repnz
cmp
iret
mov
mov
dec
bound
xchg
pop
adc
and
scas
fs
and
push
cmps
nop
fcom
call
jmp
or
sub
mov
inc
jecxz
inc
mov
cmps
arpl
or
popa
xchg
das
leave
fidiv
or
inc
fidiv
pushf
lahf
out
mov
out
das
daa
sbb
mov
test
inc
cmp
jbe
nop
or
ins
cmps
cmp
lods
push
mov
ds
int
mov
mov
out
cwde
mov
mov
fcom
sbb
add
push
mov
xor
cwde
pop
aad
sub
into
jbe
lods
out
mov
mov
aad
call
mov
mov
outs
loope
addr16
cs
outs
xchg
mov
call
add
mov
int3
stos
movs
in
mov
or
aaa
add
cmps
mov
mov
pop
xchg
in
loopne
in
xchg
or
jno
loope
popa
imul
inc
shl
leave
mov
jge
push
dec
loop
sub
arpl
dec
fcom
loope
mov
arpl
sub
mov
arpl
sar
mov
fisub
nop
in
(bad)
movs
int3
mov
or
sahf
sub
sub
stc
loop
es
inc
or
in
mov
loopne
std
aas
push
adc
jge
sbb
icebp
into
sub
jl
inc
cmps
push
jmp
dec
jb
mov
jnp
aam
xchg
adc
or
cmp
and
sub
adc
mov
add
or
sbb
into
cmp
ds
push
repnz
cdq
adc
jbe
or
enter
fmul
mov
mov
mov
lea
test
stos
push
mov
xchg
xlat
sbb
adc
inc
xor
sbb
dec
cld
dec
pusha
mov
test
adc
jno
cmp
or
std
mov
adc
test
scas
jp
push
or
cdq
in
or
sbb
ror
shl
into
xchg
popf
stos
xor
pop
fisttp
mov
nop
lea
cmp
sub
mov
xor
add
sti
cwde
xchg
inc
dec
pushf
test
mov
pop
push
xlat
inc
add
pop
sub
mov
jno
jae
xchg
jae
cld
push
iret
push
(bad)
call
fwait
mov
dec
(bad)
push
ret
xor
scas
shr
ins
jecxz
pop
es
loopne
dec
call
pop
xor
cs
sbb
adc
les
stc
rol
push
inc
pop
cwde
inc
or
jae
(bad)
mov
(bad)
adc
jnp
mov
(bad)
jecxz
cmp
retf
pop
pop
mov
aam
and
or
repnz
jb
enter
inc
or
or
jo
lods
iret
(bad)
stos
int3
xchg
mov
idiv
push
out
dec
xchg
jnp
stos
sar
pop
iret
mov
dec
out
call
stos
push
jmp
out
sbb
xchg
mov
sbb
xor
sahf
dec
outs
call
ins
outs
mov
jb
sbb
imul
mov
repz
mov
adc
or
in
movs
cmp
adc
ret
mov
in
inc
(bad)
mov
ins
adc
scas
nop
(bad)
pop
ja
inc
popf
jle
rcl
adc
adc
mov
repz
dec
out
dec
push
call
dec
imul
mov
mov
mov
adc
pop
hlt
stc
dec
mov
repnz
sub
xor
mov
cmps
bound
aaa
(bad)
cwde
retf
test
mov
pop
cmp
mov
in
cld
loop
push
push
cli
call
sub
pop
cmp
aaa
repnz
scas
adc
mov
push
mov
out
pusha
fdivr
adc
loop
cmp
test
retf
and
nop
and
out
adc
add
add
mov
mov
or
mov
adc
mov
pop
xchg
cmps
(bad)
int3
out
jns
cmc
add
push
add
outs
mov
cwde
cmp
enter
and
lahf
retf
mov
adc
xchg
xchg
js
out
add
aam
sub
dec
ror
ds
test
mov
pop
f2xm1
xchg
pop
bound
(bad)
shl
pusha
mov
psubb
call
sbb
cmp
int
xor
std
jg
test
push
push
dec
das
retf
mov
add
stos
or
jle
fucomi
add
cmc
fdivr
xchg
jnp
ret
cwde
(bad)
arpl
mov
data16
xchg
sub
pop
jae
xor
fmul
cmp
in
loop
sub
(bad)
xchg
call
(bad)
sbb
mov
jmp
loopne
mov
push
or
xchg
and
sahf
xchg
lods
bound
dec
and
xor
or
xor
dec
xchg
mov
sub
cmc
pop
mov
imul
mov
xchg
enter
inc
enter
mov
sbb
out
inc
jmp
sub
shl
ret
jnp
in
aaa
pop
or
pop
in
mov
cmp
jno
pop
leave
and
inc
mul
jns
xchg
sbb
dec
hlt
aam
dec
push
pop
add
std
push
inc
push
or
jge
cmp
xor
ret
jo
nop
add
inc
cwde
loop
jbe
mov
or
jmp
pusha
sub
shl
sub
mov
jp
(bad)
cld
ds
pop
mov
loop
imul
lea
mov
clc
repnz
ds
stc
scas
or
lods
push
in
test
aaa
xor
push
repnz
xchg
cmp
imul
hlt
sbb
mov
xor
push
inc
xchg
jb
je
pop
enter
shl
or
hlt
cmps
cmc
test
sub
fstp
mov
cdq
mov
cmp
lahf
out
idiv
adc
pop
mov
ja
fld
inc
sar
dec
das
xchg
aas
xor
jmp
cmp
mov
or
or
push
into
jp
xchg
imul
add
push
(bad)
loop
rcr
push
mov
dec
cmp
retf
cmps
cdq
sahf
sub
push
adc
add
int
pop
mov
mov
nop
jae
imul
pop
ret
pusha
shl
leave
cmp
dec
mov
adc
mov
adc
leave
loop
inc
pop
push
jbe
(bad)
push
mov
add
test
pop
cli
dec
cld
cld
mov
ds
call
sbb
mov
sub
ror
(bad)
jmp
cs
mov
lods
(bad)
aad
inc
jmp
sbb
loopne
jp
pop
or
stos
mov
cmp
outs
sub
shr
and
push
popa
retf
inc
idiv
imul
mov
jl
mov
sub
das
push
es
add
push
push
xchg
sub
mov
add
minps
loopne
test
test
enter
jne
(bad)
jp
js
cmp
inc
cwde
xor
retf
test
mov
ror
jmp
xchg
mov
mov
dec
adc
jmp
xchg
aaa
xchg
and
and
ins
shl
fdivr
adc
popf
das
push
or
add
cmp
sub
pop
mov
push
push
jp
bound
mov
int3
nop
cmp
jnp
clc
jge
push
leave
mov
fdivr
and
mov
sbb
mov
stc
ins
repnz
mov
inc
rcl
pop
ret
add
lahf
ror
pusha
cmp
inc
in
lock
popa
jecxz
pop
pop
sub
or
add
out
add
outs
aad
shr
cmps
push
xchg
and
retf
fld
cmp
mov
add
dec
int3
inc
push
fidivr
int3
cmp
cld
sub
cdq
or
outs
cmp
and
push
cmp
pushf
jecxz
pop
outs
push
or
leave
jle
or
enter
faddp
cmp
jb
or
mov
loopne
or
sbb
sbb
jmp
add
inc
mov
fs
pusha
outs
mov
pop
and
leave
pop
inc
jmp
push
scas
pop
sbb
ins
mov
xor
clc
data16
inc
enter
movs
fild
hlt
inc
xchg
xor
(bad)
mov
cmp
or
repz
call
arpl
and
jmp
sahf
and
push
out
pop
mov
or
movs
in
(bad)
sbb
popa
jmp
push
mov
ret
mov
push
cmp
sbb
or
sti
popa
push
xor
push
pop
retf
mov
jae
les
and
mov
div
inc
jl
ss
xor
add
stos
push
push
stc
mov
rcr
lock
adc
aas
jb
xchg
in
cmp
pop
lds
mov
bnd
mov
inc
mov
aad
es
sub
pushf
imul
and
push
ss
pushf
add
clc
add
(bad)
sub
xchg
dec
daa
jnp
stc
cwde
jo
inc
div
leave
mov
xchg
push
or
fmulp
mov
mov
mov
add
xchg
nop
jl
mov
cld
std
ror
inc
sahf
xor
cmps
arpl
xor
call
sbb
xchg
push
scas
inc
xlat
(bad)
(bad)
jp
add
pushf
hlt
inc
and
jmp
push
xor
adc
mov
sbb
xchg
imul
jnp
mov
int3
out
dec
sub
rcr
(bad)
out
mov
push
sbb
out
repz
sbb
inc
jmp
and
add
mov
inc
mov
cmp
sbb
or
(bad)
xchg
pusha
sbb
fisubr
dec
cmc
leave
push
cld
mov
mov
pop
push
clc
pusha
jmp
scas
or
push
cmp
jp
pop
sbb
cwde
pusha
cwde
adc
push
xchg
push
and
adc
mov
push
bound
jmp
call
add
imul
cmp
xor
loope
imul
(bad)
js
inc
mov
inc
leave
jmp
pushf
sbb
cs
nop
mov
inc
sbb
push
adc
repz
inc
mov
test
mov
leave
sub
jae
repz
cmp
js
mov
xor
stos
loopne
add
sbb
ins
imul
xor
ror
leave
pop
jbe
ins
nop
xor
js
pop
mov
test
adc
xor
xor
mov
dec
lahf
gs
mov
es
inc
nop
inc
test
mov
sbb
dec
sub
push
dec
pop
js
mov
adc
mov
(bad)
cmp
and
dec
jp
xlat
jg
inc
sub
retf
sub
push
cwde
ss
cwde
mov
sbb
xor
sub
enter
ds
pusha
push
fwait
in
enter
shl
mov
ins
xchg
clc
(bad)
fwait
xor
cld
jmp
inc
pop
lock
sub
stos
(bad)
xor
mov
sbb
sahf
pop
pop
add
fcom
jo
adc
(bad)
clc
shl
xor
xchg
mov
jmp
mov
and
jb
shl
aam
cmp
xchg
inc
push
enter
push
call
pop
dec
loopne
arpl
movs
xor
mov
mov
push
movs
xchg
sbb
pop
sahf
imul
ret
mov
sub
fsubr
mov
pop
mov
mov
enter
out
push
cmps
xor
push
and
stos
add
mov
xchg
jecxz
cmp
mov
pop
shr
inc
jnp
loopne
mov
mov
adc
push
es
inc
lahf
mov
mov
ror
repnz
test
leave
inc
push
jge
call
inc
jb
push
jmp
inc
add
ins
in
inc
push
adc
and
and
shl
sbb
pop
sub
fld
call
imul
dec
or
mov
sbb
hlt
mov
dec
jge
int
shl
stc
mov
mov
cdq
sar
xchg
push
out
mov
aam
mov
sahf
jae
ins
pop
retf
push
scas
loopne
ja
sub
call
in
fidiv
jg
int3
jae
movs
or
imul
jge
ja
in
mov
inc
and
cmp
mov
mov
or
cmp
cld
mov
push
jmp
es
xor
mov
mov
pop
push
stc
adc
leave
js
ficom
retf
fsubr
clc
inc
loopne
jns
mov
jle
push
es
dec
pushf
cmps
mov
mov
cli
mov
mov
imul
scas
lock
jge
push
std
pop
xchg
mov
out
jmp
adc
ds
mov
pop
sbb
sub
xchg
fidiv
mov
dec
inc
mov
xchg
dec
jmp
or
fstp
jnp
and
(bad)
mov
mov
or
pop
jo
int
push
sbb
push
xchg
repnz
movs
dec
pop
mov
or
jae
add
mov
ins
or
add
sub
mov
mov
outs
inc
pop
and
push
lods
js
inc
pusha
daa
leave
inc
jl
lock
cmp
mov
push
repnz
add
pop
sub
in
cmp
inc
inc
xchg
out
adc
mov
js
test
dec
std
clc
lods
dec
movs
out
mov
outs
scas
cmp
push
inc
mov
mov
sub
pop
pop
repz
ins
fsubr
jge
pop
jp
iret
dec
push
mov
push
add
fwait
cmp
dec
cmp
and
lds
shl
xor
push
and
js
cmp
stos
sub
fistp
mov
sbb
or
lahf
dec
or
cdq
test
ja
inc
sub
shr
outs
cld
call
int
add
mov
and
iret
lds
dec
or
lods
call
sbb
cmp
shr
cmps
int3
pop
jmp
xchg
or
push
call
jmp
sar
dec
lahf
xor
and
lods
dec
mov
addr16
push
stos
or
pop
mov
shl
mov
xchg
rol
sti
ins
fnstcw
mov
adc
jl
pop
mov
lods
ds
mov
push
add
cmps
int3
and
mov
loopne
adc
iret
js
nop
sub
mov
xchg
int3
and
or
(bad)
push
adc
cli
int
pop
retf
inc
cmp
cmp
or
xor
shr
push
mov
jae
in
imul
shr
add
cmp
test
(bad)
mov
jmp
adc
aas
sub
shl
dec
call
add
cmp
sbb
jmp
or
dec
sub
loop
js
repnz
sbb
pslld
les
adc
sbb
(bad)
sub
es
mov
pop
mov
int
cmp
cmp
push
rcr
jg
xor
jmp
into
dec
mov
mov
inc
mov
sbb
jb
jns
xchg
xchg
dec
mov
inc
(bad)
aad
(bad)
int
or
adc
push
inc
pop
loop
addr16
pushf
dec
cmp
fcmovnb
pop
jmp
jne
test
jb
xor
ret
dec
xor
mov
push
pushf
retf
cmp
fmul
stc
add
in
xchg
push
dec
push
mov
jb
push
pop
repnz
cdq
or
js
sub
movs
ds
dec
ret
inc
fisttp
xchg
pop
stos
dec
bound
call
ret
aad
scas
cmp
ds
aam
outs
inc
lds
push
or
hlt
jecxz
jb
cmp
stos
bound
add
ret
imul
out
mov
shl
sub
jae
retfw
add
out
lods
jb
stos
sub
pop
inc
int3
cmp
(bad)
sbb
mov
popa
jle
rcr
mov
push
(bad)
out
cmp
cli
or
mov
sahf
fs
and
sub
jo
leave
fcmove
mov
mov
inc
lahf
rcl
(bad)
out
inc
pop
pop
in
xchg
fiadd
retf
cmp
or
out
cmp
push
sub
imul
std
mov
jle
fmulp
stc
jb
jp
test
inc
std
js
(bad)
repnz
dec
fadd
push
es
pop
dec
sub
call
cwde
mov
adc
pusha
xchg
jo
fisttp
loope
xchg
lods
inc
fsubr
mov
mov
jmp
pop
bound
push
mov
pop
add
jo
mov
(bad)
jb
adc
xor
test
add
lods
fsubr
xchg
rol
jg
or
sub
adc
sub
into
xor
adc
fwait
dec
jge
ins
stos
lods
repnz
and
cmc
jns
sub
retf
pop
in
call
es
js
ins
xor
test
mov
jb
pop
pop
movs
inc
sub
push
fucom
cmp
push
in
aas
cmp
pop
aad
(bad)
icebp
clc
mov
stos
imul
sbb
mov
push
push
push
icebp
fsub
rol
cs
sbb
in
jle
mov
fldcw
loop
je
xchg
xchg
loopne
mov
imul
test
stos
bound
push
xchg
sbb
(bad)
retf
xor
icebp
scas
mov
xor
and
sub
gs
sub
jp
xchg
pop
daa
clc
in
adc
pusha
aam
dec
add
and
add
sti
rep
xor
xor
add
call
popa
sbb
icebp
and
inc
dec
sti
lods
sub
cmp
cwde
inc
mov
adc
and
js
imul
inc
and
fcomp
sub
pusha
xor
aam
mov
scas
add
add
cmps
sub
cld
sub
ret
aad
out
jl
pop
jbe
sub
rcr
xor
push
mov
call
outs
vpunpckhdq
push
cmp
arpl
or
aaa
xchg
in
(bad)
mov
add
xor
cdq
add
imul
xchg
(bad)
in
sub
fild
dec
inc
and
xchg
inc
ss
aaa
ret
cmp
add
jns
mov
pop
repnz
hlt
adc
in
push
leave
or
jnp
jle
or
retf
add
push
sub
and
pop
mov
inc
xor
mov
push
lods
les
test
bound
lock
sti
mov
(bad)
int3
loop
outs
xchg
add
sbb
sub
enter
jl
push
in
jmp
sub
xor
ret
pop
sub
dec
push
xor
sti
out
imul
adc
xchg
iret
inc
jg
push
lods
lods
add
mov
inc
inc
fnstsw
inc
neg
mov
jb
loop
jbe
not
in
lock
cwde
ss
push
and
push
retf
arpl
ret
dec
mov
jp
repnz
push
jns
popf
cmps
cmp
mov
les
mov
sub
push
dec
lock
gs
and
lea
cmp
sub
mov
sti
adc
pusha
out
les
lea
push
stos
inc
rol
movs
ins
inc
pushf
sbb
and
xor
repnz
push
fldcw
xchg
cmp
sub
or
or
(bad)
call
sbb
xor
std
pop
(bad)
not
push
cmp
pop
jg
and
data16
cmps
jnp
adc
stc
xor
xchg
and
push
ins
pop
(bad)
mov
mov
inc
mov
js
fisttp
xchg
pushf
cmp
push
sub
cmp
out
out
int3
fdiv
xor
sub
out
shr
shr
icebp
xor
dec
call
mov
outs
ret
push
adc
mov
xor
fistp
inc
add
jns
push
cwde
cmp
mov
sub
pop
sub
jnp
hlt
pusha
sub
aam
shl
loope
mov
mov
inc
dec
or
repnz
(bad)
ja
js
jl
lods
cld
jg
cmps
xchg
mov
stos
loope
movs
jmp
stos
xor
sub
mov
(bad)
pusha
push
jg
add
xchg
add
mov
popa
push
jle
repz
lock
clc
retf
addr16
jns
dec
inc
pop
push
lods
outs
movs
ficom
ret
ss
inc
mov
cld
ret
inc
daa
or
sar
inc
or
stc
idiv
sbb
dec
in
in
in
lea
cwde
xchg
push
bound
pop
inc
aam
add
ins
pop
sahf
out
rol
xor
pop
pop
aaa
rol
sub
js
ret
xchg
push
inc
push
inc
imul
mov
or
cmp
xchg
adc
cmp
fwait
add
mov
dec
(bad)
fs
jo
push
mov
xor
jo
mov
adc
cdq
mov
(bad)
fmul
push
cmp
and
pop
popf
arpl
rol
jno
xor
cmp
add
jae
pop
gs
push
ret
int3
(bad)
push
mov
inc
into
aam
push
stos
sbb
add
jmp
pop
jae
dec
dec
add
xor
dec
aam
or
mov
mov
ss
inc
test
pop
mov
add
scas
jb
in
in
and
sub
xchg
data16
in
call
je
ins
lahf
js
cmc
or
dec
scas
dec
or
mov
cdq
xor
mov
mov
out
jg
inc
jmp
push
cld
and
nop
xchg
les
sti
shr
cmp
into
mov
(bad)
cmp
pop
push
xchg
(bad)
mov
in
dec
out
pop
sbb
push
sub
jp
(bad)
mov
cmps
push
add
dec
call
push
add
xor
inc
rcr
jl
push
(bad)
xor
movs
rcl
aam
aas
xchg
arpl
imul
fdiv
jbe
mov
test
inc
adc
mov
repnz
adc
loope
repz
jge
movs
xor
rcl
sahf
cmps
inc
dec
xchg
pusha
mov
mov
outs
inc
add
shr
enter
jmp
mov
mov
mov
retf
or
lock
icebp
fisubr
enter
or
shl
in
mov
jnp
sbb
xor
adc
fsubr
sub
out
(bad)
mov
adc
lods
add
or
fs
push
in
outs
jnp
mov
test
shl
out
xor
dec
mov
sbb
loop
and
mov
stos
pushf
push
cmp
sub
repnz
call
xor
repz
mov
cmp
adc
sub
pop
stos
push
add
pop
mov
out
and
and
pop
dec
retf
mov
dec
push
je
(bad)
jbe
mov
pop
bound
jae
cld
dec
in
loop
std
popa
pop
div
dec
cs
sar
or
push
stc
mov
jo
movs
adc
adc
jo
scas
dec
retf
imul
add
inc
shr
loope
pop
(bad)
cmp
jae
xor
aam
ret
dec
xchg
push
fs
data16
sbb
or
cwde
dec
in
retf
leave
jbe
stos
scas
inc
iret
gs
push
mov
xchg
adc
push
(bad)
ss
outs
mov
mov
or
loopne
and
xchg
pop
push
mov
mov
mov
loope
and
out
sub
cmp
push
mov
test
and
mov
pushf
es
pop
pop
rdmsr
dec
in
cmp
or
scas
ret
jg
inc
sti
repz
movs
mov
mov
data16
jae
pop
mov
inc
nop
das
pop
cmps
fcomp
add
in
cli
adc
or
mov
pop
leave
arpl
push
sub
fsubr
sbb
jno
fisttp
add
add
lock
fcomp
xor
xor
and
shr
iret
xchg
retf
sub
push
jnp
mov
cmp
pop
test
inc
fidivr
std
aaa
sahf
movsx
clc
sbb
xor
nop
sbb
inc
or
cmp
push
cmps
bound
or
push
in
inc
sub
lock
mov
sub
aam
jmp
rcr
push
ret
or
xor
jmp
in
loope
xor
mov
dec
sbb
or
push
cs
sbb
mov
sub
xchg
add
inc
cmp
vmovapd
cmp
js
sub
out
xor
mov
stc
in
ror
add
adc
cwde
out
popf
pop
jecxz
stc
(bad)
xor
inc
xchg
dec
lea
adc
adc
lock
clc
dec
fwait
scas
rol
and
int3
fidivr
aam
and
addr16
rcr
sti
bound
stc
cmovp
xchg
adc
fcom
pop
dec
inc
mov
jb
add
repz
xlat
jmp
test
pop
adc
add
lods
int
ficomp
stc
imul
nop
and
bound
arpl
bound
int3
add
fs
jne
cdq
push
mov
enter
test
adc
sbb
fwait
sub
loop
xchg
adc
dec
dec
lock
cwde
lea
and
ja
shl
ret
adc
(bad)
xchg
mov
icebp
or
mov
data16
add
push
adc
fadd
or
jmp
xor
sbb
xor
js
lods
mov
mov
lahf
call
add
shr
cmp
bound
jmp
lods
cmp
push
mul
cwde
adc
pusha
dec
jnp
mov
bound
jo
or
loop
or
and
cmp
leave
push
popa
mov
xchg
jo
or
mov
jmp
data16
push
enter
stos
adc
pop
inc
push
dec
jl
and
shl
loop
outs
mov
stc
jo
pop
mov
jo
mov
leave
shl
test
rcl
cmp
push
(bad)
xlat
icebp
xchg
pop
sub
jle
pop
pxor
js
imul
sub
sub
cmps
or
lds
cdq
outs
leave
das
outs
xor
scas
adc
jno
out
mov
xchg
jo
ret
pop
cmp
arpl
bound
jns
mov
inc
lahf
sti
ret
fdivr
leave
popa
test
nop
arpl
retf
dec
mov
inc
pop
dec
inc
mov
mov
adc
out
enter
test
scas
stos
cmp
mov
adc
nop
shr
ins
mov
fs
mov
test
loop
mov
repz
loopne
das
sbb
jmp
cmp
sub
loopne
popf
cmps
xchg
outs
lds
sbb
sub
dec
popa
xchg
mov
and
in
rol
(bad)
mov
inc
dec
mov
repz
push
retf
call
out
es
jecxz
jo
pop
dec
and
movs
xchg
fwait
pop
shl
jmp
push
or
mov
iret
adc
bound
push
or
cmps
ror
adc
dec
mov
pop
sbb
js
sub
xchg
out
aam
mov
sbb
and
inc
add
add
test
cli
pop
ficomp
cwde
arpl
outs
ret
shl
mov
mov
pop
push
cmp
pop
lods
retf
adc
xlat
inc
cmp
sbb
enter
mov
cmps
and
leave
push
jnp
and
ret
jbe
sbb
xor
jae
(bad)
mov
rol
rcr
pop
adc
add
mov
sbb
adc
add
aaa
aad
fnstenv
fsubr
jae
xchg
push
cmps
adc
out
inc
outs
xchg
mov
mov
mov
out
sbb
mov
xchg
push
dec
imul
sbb
cwde
add
mov
or
js
xchg
popa
gs
pop
(bad)
(bad)
jge
or
push
inc
leave
iret
mov
adc
xor
pop
hlt
jne
popf
scas
inc
mov
enter
sti
rcr
div
xchg
stos
loope
leave
int3
mov
int
imul
ret
pushf
je
inc
adc
push
retf
neg
loopne
or
add
test
pop
pusha
(bad)
(bad)
test
cld
jns
sar
dec
mov
inc
test
push
inc
es
mov
js
mov
jns
cli
in
jmp
int3
daa
lock
stos
mov
jns
ret
or
test
push
push
imul
retf
jae
ret
fidiv
sbb
inc
jae
shl
mov
cmps
lea
jmp
cwde
out
out
dec
sub
fwait
inc
dec
sbb
(bad)
nop
ret
aam
inc
mov
sbb
jae
mov
xchg
adc
scas
add
pop
pop
sub
xor
fld
fsubrp
nop
adc
xor
jo
or
div
cmp
mov
jle
mov
(bad)
in
push
jns
cmp
(bad)
sub
jecxz
loopne
in
ins
xor
sub
das
nop
mov
jle
pop
les
mov
std
mov
loope
(bad)
sub
sti
jmp
pushf
mov
(bad)
cmp
test
add
jno
(bad)
mov
sbb
jecxz
ins
inc
cwde
nop
sub
aaa
push
push
rcr
mov
xchg
adc
jne
sbb
mov
iret
stos
ins
inc
push
or
ss
jbe
ins
jle
adc
jns
xor
push
lock
icebp
xor
scas
xor
add
jge
bound
or
ja
js
inc
mov
or
mov
xor
push
or
and
sbb
push
jne
inc
add
cmp
and
dec
adc
jnp
sub
test
int
loop
adc
aas
aas
adc
dec
(bad)
sub
int
data16
adc
push
pusha
jmp
jge
dec
mov
test
pop
push
ss
or
scas
ins
sar
xchg
pop
addr16
mov
xchg
push
push
xor
jle
aaa
ret
clc
xor
aad
pop
xchg
xchg
dec
popf
push
pushf
mov
push
shr
sub
ds
ror
sahf
push
lock
push
mov
call
aaa
or
jne
mov
imul
cmps
pop
fwait
daa
in
push
(bad)
fadd
gs
mov
push
sub
add
fwait
test
fisttp
(bad)
xor
cmp
mov
(bad)
popa
jae
push
jl
test
mov
xor
gs
fnstcw
jmp
cdq
imul
test
pop
stos
and
inc
out
mov
mov
ins
sbb
fstp
jg
dec
cmp
int3
add
fucomi
ins
and
scas
jp
in
mov
bound
mov
cmp
inc
and
imul
push
cwde
js
es
jbe
sbb
int
mov
loopne
(bad)
mov
dec
cs
enter
mov
mov
add
imul
adc
lods
cs
xor
fstp
test
xlat
sti
inc
xor
fist
xchg
inc
pop
pop
inc
adc
ret
push
mov
iret
cwde
in
int3
sub
mov
sbb
jns
mov
adc
fincstp
inc
shl
mov
imul
test
sbb
movs
outs
inc
(bad)
out
out
iret
push
cli
xor
xchg
sub
(bad)
fadd
xor
frstor
icebp
push
cdq
loope
test
pop
xchg
cwde
and
into
loopne
pop
mov
retf
xchg
mov
repz
je
test
mov
test
addr16
mov
nop
fcomip
xchg
das
xchg
and
ins
xor
test
dec
mov
(bad)
ja
ficom
or
mov
sub
adc
or
and
es
sbb
fdiv
dec
adc
xor
pop
pop
add
cmp
bound
lds
and
fcmovb
imul
pop
scas
call
fimul
into
push
ss
stos
pop
sub
mov
push
dec
loopne
je
(bad)
jmp
cli
dec
es
xor
jg
sbb
mov
or
or
(bad)
or
pop
xchg
cmps
pop
jnp
imul
addr16
rcl
shl
rcl
push
mov
pusha
data16
mov
push
and
in
push
jo
stos
fimul
xor
lea
outs
in
das
jbe
ret
jg
adc
and
jbe
or
push
push
sbb
push
dec
lock
addr16
jp
inc
mov
adc
(bad)
inc
popfw
stc
push
xchg
fwait
test
adc
dec
ret
pop
cmp
ins
movs
adc
fcomp
pop
call
cmp
out
retf
dec
or
retf
push
adc
nop
xchg
arpl
mov
pop
pop
enter
jno
dec
mov
add
and
pop
loopne
fmul
gs
mov
shr
pop
pushf
sub
add
hlt
in
mov
cmps
addr16
xor
inc
pop
jle
xchg
adc
xor
add
dec
stos
fs
jl
mov
pop
adc
push
or
add
xor
jo
test
inc
or
fsubr
sbb
pop
dec
retf
loop
es
scas
sub
mov
pop
jmp
call
in
ficom
push
jns
subps
retf
out
add
and
inc
fcomp
cmp
add
clc
inc
sbb
iret
push
repnz
xor
ror
mov
push
sub
mov
clc
pop
call
adc
push
mov
inc
adc
stos
mov
sbb
scas
push
jbe
cwde
test
or
sub
xchg
xchg
popf
loope
jb
dec
ret
vsubsd
inc
mov
test
int3
jmp
jae
es
pusha
mov
test
pop
jb
fild
rcr
xchg
jp
repnz
int
cmp
ret
mov
xchg
or
adc
xchg
repz
jmp
aas
mov
mov
mov
adc
jge
mov
and
(bad)
retf
jg
div
mov
and
sbb
in
xchg
clc
cmp
fcmovnbe
mov
repnz
push
and
xchg
or
add
scas
adc
xchg
cld
push
aam
inc
es
jae
repnz
shl
mov
adc
push
mov
enter
inc
stos
jb
jnp
mov
and
xchg
push
inc
loop
jl
add
inc
sti
adc
xor
add
push
cmp
push
inc
movs
or
cmp
imul
les
pop
loopne
sub
sahf
ins
ins
fsubr
or
js
(bad)
jo
fdiv
std
jne
jp
add
adc
ret
push
fild
inc
sar
les
imul
cmp
sbb
xchg
das
or
test
add
jae
or
loope
ret
ror
(bad)
and
cdq
movs
cmp
lods
icebp
in
mov
ret
enter
cdq
sub
lock
std
std
xchg
or
and
jne
inc
mov
mov
jnp
add
xlat
cmp
sbb
add
mov
xor
stc
in
enter
push
lahf
jb
movs
movs
repz
int3
movs
push
dec
sahf
sub
test
loop
pop
push
mov
push
cld
movs
mov
outs
retf
fmulp
fcmovnb
mov
nop
out
sub
cmp
shr
adc
mov
aaa
cs
ror
aam
add
adc
xchg
push
jl
mov
jns
jns
jmp
sbb
jg
mov
jmp
rol
ins
fisub
js
ret
xor
shl
mov
push
adc
dec
add
data16
stc
mov
jno
adc
cmp
inc
xlat
mov
pusha
rol
call
pop
enter
int
lock
mov
pop
mov
dec
jp
rol
mov
inc
das
cli
clc
lods
sbb
and
pop
ror
sub
out
cs
or
popf
lods
mov
jle
ja
or
loope
in
cmp
hlt
lea
xor
pop
cwde
pop
ds
sbb
inc
fcomip
fsub
xchg
dec
push
xchg
ficom
xlat
push
push
jmp
and
xlat
es
mov
cmc
sar
mov
inc
dec
sub
sti
leave
or
sbb
fs
dec
or
xor
loop
(bad)
fnstenv
pop
sti
sub
and
not
loopne
sbb
inc
mov
and
sub
nop
pop
mov
xchg
mov
sahf
imul
xor
sub
sbb
fadd
test
ja
sbb
jle
clc
lods
mov
adc
shl
jl
push
or
(bad)
int3
cmp
imul
cmp
add
(bad)
xchg
push
aad
push
or
xchg
sub
cli
loope
rol
cmp
mov
ins
ins
mov
out
clc
add
(bad)
std
in
ret
jo
test
loopne
dec
mov
jb
add
lea
mov
int3
not
adc
adc
clc
popa
stos
test
mov
xor
dec
jmp
stos
retf
call
int
je
pop
into
enter
cmp
xor
aaa
mov
jp
sub
mov
xchg
out
std
cmp
xchg
(bad)
sbb
int
(bad)
pusha
call
sub
push
add
xor
xor
xor
mov
(bad)
push
sbb
xbegin
add
(bad)
push
push
stos
stos
sbb
fld
inc
neg
int3
jl
outs
pop
and
add
clc
pusha
adc
cmps
jmp
test
cdq
into
pop
pop
jge
loop
movs
mov
xor
(bad)
(bad)
hlt
mov
bound
pop
imul
(bad)
mov
jl
imul
pusha
push
pop
jle
test
fdiv
xchg
push
push
idiv
add
ins
lock
movs
ss
in
mov
dec
sub
hlt
mov
push
dec
cmc
sub
adc
inc
add
mov
jns
xchg
repnz
mov
test
or
test
add
rol
dec
xor
stos
out
fisub
inc
dec
neg
xor
jl
pop
mov
sbb
push
jne
push
xor
repz
jmp
xlat
xchg
add
ret
out
loop
int3
jmp
outs
bnd
int3
xchg
call
out
jo
int3
in
add
mov
aam
mov
aas
test
movs
jecxz
scas
stc
inc
cdq
es
jbe
mov
stos
mov
leave
pop
sub
pop
ins
cmp
mov
push
sbb
inc
sub
sbb
ja
mov
ret
je
sbb
rcl
jae
ret
adc
(bad)
dec
and
les
dec
sbb
shl
push
clc
stos
rol
ret
pop
cmps
push
push
mov
iret
inc
xor
mov
push
sub
loop
adc
mov
jl
cwde
cmp
adc
and
fsubr
cmps
inc
(bad)
retf
push
stc
pushf
in
test
lods
clc
mov
cdq
es
stc
jecxz
repz
cwde
mov
add
push
mov
jl
ss
dec
xchg
mov
std
jg
fs
cmps
(bad)
lock
ins
ins
mov
clc
out
xchg
(bad)
jno
cmps
mov
mov
test
rcr
imul
add
(bad)
xor
test
call
sbb
mov
push
mov
jb
inc
jne
xchg
push
das
ins
fdivr
or
lock
push
into
loopne
cmps
xor
popf
scas
sbb
test
data16
adc
adc
sbb
pop
dec
sub
cld
scas
aas
adc
leave
jb
push
dec
mov
arpl
addr16
add
out
clc
and
clc
(bad)
dec
shl
bound
leave
xchg
cmp
icebp
repz
ss
jecxz
les
inc
sbb
jp
into
rol
mov
adc
jbe
stos
ins
ftst
movs
xchg
jge
in
shl
adc
cmp
mov
mov
pushf
jbe
fsubr
add
ror
inc
(bad)
outs
in
sub
mov
into
out
(bad)
and
jle
fs
stos
icebp
push
shl
inc
jmp
xchg
add
out
not
pop
xchg
push
in
jae
out
lds
add
sbb
mov
push
xor
inc
dec
mov
adc
popf
popa
call
jae
inc
lods
pop
imul
and
mov
mov
mov
adc
mov
cmp
xchg
movs
lock
jns
cmp
dec
call
jne
sbb
jecxz
enter
mov
shr
mov
cmp
cmps
or
leave
dec
mov
dec
retf
push
sub
call
inc
mov
rol
sub
push
sub
sub
arpl
and
test
inc
pop
mov
jbe
inc
pop
shl
or
cld
repnz
iret
arpl
clc
xchg
sti
scas
dec
dec
jle
pop
or
jbe
lods
imul
in
ror
mov
sbb
fstp
test
iret
es
sbb
cwde
das
clc
push
mov
push
or
cmp
sbb
dec
stos
mov
jns
(bad)
movs
jns
call
bound
out
daa
data16
sbb
shl
sub
rcr
inc
test
pshufw
mov
loop
(bad)
cmps
mov
lock
cmp
cwde
mov
enter
cwde
jo
cdq
jnp
pop
sub
ins
cmp
fld
leave
mov
xchg
push
sub
sar
enter
test
lock
inc
and
jmp
pop
je
mov
das
repz
mov
call
movs
xchg
lahf
imul
sub
mov
int3
fbld
ret
mov
or
cli
mov
sbb
call
(bad)
in
pop
mov
push
cmp
call
cdq
shl
cmp
mov
rcl
arpl
stc
push
movs
sbb
mov
or
mov
js
test
ins
inc
pop
inc
xlat
(bad)
pop
add
arpl
pop
les
jle
ror
and
out
sub
add
call
add
xchg
and
xor
ret
pop
in
xchg
cld
xchg
cmp
loop
push
mov
mov
mov
test
or
xchg
push
mov
pop
push
call
sub
mov
addr16
int3
add
jo
pop
call
push
inc
js
xor
test
xchg
jecxz
mov
add
or
mov
test
xchg
fld
out
movs
repnz
inc
xchg
jmp
in
inc
adc
lahf
aas
ror
cmp
push
test
xor
sub
push
sbb
in
pop
shl
ins
mov
hlt
sub
mov
adc
call
stos
or
sbb
dec
(bad)
fs
xchg
sub
es
enter
lods
fcmovnu
pop
mov
xchg
outs
cwde
les
addr16
addr16
cmp
sti
daa
jb
out
aaa
jae
jle
adc
cmps
sbb
sbb
dec
push
ja
or
cdq
nop
inc
cmp
jle
push
call
call
push
imul
shl
inc
ins
ja
inc
dec
jge
sub
lock
adc
adc
movs
push
arpl
mov
loop
movs
cmps
and
add
adc
mov
lea
jge
retf
and
enter
call
xor
cmp
push
mov
dec
mov
or
js
pusha
jnp
outs
and
jbe
cmps
xlat
stc
jmp
push
mov
inc
call
lock
out
or
jp
sbb
pop
mov
pop
rol
mov
mov
aas
mov
fcom
vcmpss
stos
push
into
out
and
aam
push
pop
add
sub
or
push
repz
pusha
lea
in
sub
mov
add
or
and
sbb
xchg
stc
lahf
fisubr
push
leave
push
cmp
push
mov
push
pop
or
shr
mov
push
jns
lahf
js
xchg
push
hlt
dec
pop
daa
out
push
mov
mov
imul
mov
inc
cwde
je
xlat
dec
cmps
ss
pop
mov
aas
mov
(bad)
bnd
ss
jno
je
sub
or
imul
shl
xor
and
sub
inc
nop
mov
xchg
(bad)
(bad)
inc
jp
sub
sub
pop
enter
xchg
jae
loop
or
inc
add
sbb
outs
les
adc
aaa
sahf
pop
xor
ss
outs
adc
rcr
mov
mov
adc
xor
pop
ret
ja
call
and
aad
mov
popf
mov
enter
dec
ja
dec
push
xchg
adc
and
imul
pusha
shl
and
mov
ds
addr16
jb
push
push
sbb
xor
bnd
dec
xchg
sbb
aaa
sub
mov
mov
cmc
push
aas
inc
push
pop
(bad)
push
imul
and
(bad)
fmul
iret
(bad)
leave
mov
pop
int3
dec
adc
test
sbb
mov
fsubr
(bad)
sub
in
xchg
adc
leave
mov
cwde
mov
xchg
cmp
push
loope
xchg
inc
in
fs
loope
test
dec
or
fcom
xchg
add
mov
loop
pop
test
out
clc
in
inc
outs
loopne
pop
repnz
sub
mov
mov
out
adc
jno
mov
call
fadd
add
call
and
jmp
(bad)
aam
jp
out
jbe
cmp
mov
inc
stos
adc
push
fistp
enter
int3
sti
and
mov
xchg
int3
pop
out
(bad)
cmp
(bad)
jbe
xor
lds
bound
sub
icebp
sub
fld
clc
cld
cwde
call
mov
adc
sub
inc
out
fistp
std
adc
repnz
and
mov
ja
sbb
xchg
mov
retf
popa
in
ret
popa
inc
push
cmp
pop
fdivr
mov
retf
or
fdivr
test
call
rcr
add
dec
and
sbb
and
adc
shl
jne
sbb
mov
xor
inc
adc
lods
int3
xchg
mov
test
cmp
and
or
xchg
in
push
push
sub
xchg
jmp
jp
stos
cmps
push
push
(bad)
call
fimul
fist
pop
pushf
pop
jae
retf
push
xor
fwait
inc
loope
push
pop
mov
inc
nop
adc
arpl
(bad)
call
xchg
dec
xor
lods
fimul
jecxz
sbb
stc
sbb
fwait
(bad)
sahf
(bad)
clc
inc
nop
add
adc
jp
push
sar
mov
in
mov
test
popf
mov
and
dec
js
ss
xor
mov
adc
mov
shl
mov
mov
mov
adc
pusha
add
movs
dec
pop
adc
xor
inc
loope
sub
enter
xor
mov
int3
daa
xor
inc
or
fnsave
loop
bound
fnstsw
xchg
sub
arpl
pop
sub
repnz
or
mov
imul
adc
add
xchg
pop
(bad)
mov
jg
inc
es
dec
mov
push
imul
ins
pop
fs
cld
repnz
push
inc
push
loopne
pop
pushf
push
(bad)
mov
popa
xor
data16
dec
jmp
clc
dec
popf
or
xchg
pop
retf
dec
div
ins
scas
clc
pop
xor
jp
stc
jmp
add
and
shl
inc
and
sbb
stc
or
(bad)
xor
cmp
pop
jb
cmp
sbb
shl
retf
jb
inc
sub
jnp
js
dec
dec
leave
(bad)
push
sub
(bad)
xlat
fcom
push
les
mov
add
and
addr16
stc
js
adc
jnp
xchg
nop
aam
xlat
fmul
call
loopne
fild
nop
lods
arpl
fs
jns
mov
fbstp
xor
test
repnz
pop
inc
xchg
push
jmp
scas
xchg
push
mov
pop
xchg
imul
pop
(bad)
pop
lock
jb
or
cmps
cmp
inc
popf
add
and
xchg
(bad)
xor
dec
pop
std
sub
test
nop
dec
sub
sbb
jmp
(bad)
scas
and
xchg
xchg
and
jle
pop
(bad)
jmp
jbe
jl
jecxz
and
ret
xor
xor
rcr
xchg
pop
mov
mov
pop
jb
fld1
push
(bad)
call
call
rcr
shl
add
pop
jno
mov
(bad)
mov
xchg
ins
leave
cmps
cvtps2pi
or
leave
or
add
jmp
test
outs
jnp
bound
push
xor
xchg
or
je
or
mov
push
dec
fidivr
or
xchg
pop
bnd
and
mov
jg
test
into
add
push
(bad)
fsub
xchg
call
ins
jns
cld
xor
pcmpeqb
inc
dec
or
mov
dec
cwde
jns
sub
nop
push
out
add
inc
imul
jns
push
mov
cmp
aad
jnp
push
inc
lahf
adc
cmp
push
gs
mov
addr16
cmp
aaa
cmp
or
xchg
fcmovu
sub
mov
scas
sahf
je
and
xor
push
dec
dec
or
or
or
js
mov
mov
sbb
or
sbb
test
mov
adc
mov
lds
fwait
or
pop
inc
pop
std
inc
push
pop
stos
or
(bad)
rol
outs
dec
inc
push
mov
jo
and
fnstenv
add
pusha
jnp
fisttp
pop
sub
mov
pop
mov
adc
push
stos
inc
inc
rcr
pop
call
and
mov
jo
cmp
sub
sti
loop
fisub
popf
aaa
adc
mov
and
push
cs
fsubr
(bad)
test
(bad)
mov
mov
xor
mov
and
test
push
scas
inc
enter
sub
adc
pop
mov
and
rcr
sbb
ins
cdq
ficom
push
out
push
mov
push
xchg
jbe
sub
mov
mov
add
xor
dec
fldenv
jae
add
push
popf
dec
mov
ret
sar
mov
pusha
push
dec
in
fidiv
enter
fidiv
shl
out
mov
fiadd
cld
lds
loopne
fst
lods
xor
popf
jmp
rcl
loop
add
mov
imul
fbld
call
jbe
pop
sar
pusha
pusha
mov
sbb
ret
add
jl
mov
(bad)
adc
and
mov
shl
cmp
push
add
adc
jns
jae
retf
or
push
imul
sbb
dec
adc
push
mov
jmp
push
sub
jae
mov
call
mov
stos
enter
repz
adc
call
ds
ins
int
add
pop
test
xor
shl
fcomp
jbe
xor
test
adc
repnz
jl
xchg
add
in
adc
jae
adc
xchg
xor
cmp
outs
dec
neg
or
mov
mov
outs
out
sub
retf
dec
iret
imul
cli
xor
retf
in
(bad)
pop
add
push
into
adc
dec
test
adc
push
loopne
xchg
aam
repz
jle
push
mov
in
jecxz
std
sar
stos
and
fcomp
and
push
jle
or
stc
popf
ins
imul
xlat
dec
adc
xor
mov
xchg
push
aaa
movs
loopne
sub
inc
ins
movs
in
jl
loop
mov
push
fdiv
push
out
sub
les
call
call
pushf
and
xor
inc
shl
stos
pusha
or
inc
les
(bad)
movs
rcr
jb
jp
xchg
stos
or
cli
jmp
fidiv
adc
add
pusha
sbb
xor
repnz
pop
stos
loope
clc
cmp
out
mov
mov
xchg
fs
mov
sub
and
pop
push
pop
rcr
les
not
loope
jno
xor
add
add
std
and
leave
xchg
rol
repz
xor
adc
mov
popf
ins
and
and
mov
aas
add
jecxz
fist
inc
dec
mov
cmp
mov
sub
frstor
fmul
scas
int
loopne
cmps
sbb
or
push
inc
stos
out
jp
jae
mov
fsub
push
mov
shl
nop
shr
push
jle
jmp
(bad)
push
lods
je
dec
or
imul
adc
mov
jnp
inc
push
mov
sub
lea
xchg
aam
or
pop
aam
mov
sub
fucomi
jmp
sub
and
cdq
pop
outs
jae
pop
pushf
adc
inc
adc
cmp
sub
out
sub
rcr
cli
xor
jns
je
or
shl
aam
inc
jge
cmp
inc
(bad)
into
outs
mov
mov
mov
mov
push
cmp
(bad)
mov
cs
adc
inc
call
push
mov
add
cmp
xor
mov
lods
jbe
push
mov
push
into
push
imul
sbb
jl
push
ret
sub
jp
dec
jno
sti
and
add
sbb
fsub
nop
sar
adc
add
shl
add
sbb
mov
or
dec
je
jmp
out
fcom
dec
xor
mov
(bad)
fsub
dec
rcr
and
retf
mov
(bad)
in
stc
or
ss
int3
push
mov
out
pop
imul
pop
pop
pop
dec
jg
pop
arpl
arpl
or
xchg
loop
fcmovnu
cmp
mov
rcr
push
pop
icebp
adc
in
push
cmp
sub
dec
shl
xor
es
sbb
mov
cmp
mov
pop
aaa
mov
jg
xor
jns
stos
test
jns
shl
jle
mov
cmp
inc
mov
mov
std
jle
sub
(bad)
jg
mov
mov
pop
add
add
test
or
rcr
cmp
sbb
cmp
jb
sub
lock
outs
out
in
cli
sbb
add
or
int
xchg
xchg
mov
scas
xchg
push
sub
fnstcw
add
lock
shr
xor
jbe
pop
movs
cmp
push
cmp
xchg
sbb
sti
stos
(bad)
das
mov
in
fsubr
sub
inc
add
call
jp
dec
or
xchg
(bad)
add
add
xor
xchg
fdivr
mov
fwait
mov
xchg
xchg
jle
sbb
dec
loope
xlat
(bad)
lahf
js
retf
pop
mov
cli
dec
imul
xchg
xchg
xor
test
cmp
cwde
jae
bound
xchg
add
xor
cld
sub
lahf
jae
jb
imul
lea
sbb
stos
cmp
xchg
int3
icebp
add
push
repnz
loop
lahf
psllq
ror
rol
inc
mov
pop
imul
and
pop
jg
retf
je
mov
in
jecxz
sub
(bad)
xor
retf
dec
add
fsub
jge
dec
jb
cmp
imul
mov
lea
out
idiv
xor
icebp
or
mov
mov
jbe
mov
imul
ins
cmp
into
push
fwait
mov
lds
imul
inc
inc
inc
adc
pop
or
or
call
mov
mov
jmp
jb
daa
out
(bad)
out
call
nop
popa
stos
mov
lea
outs
cmps
mov
retf
in
lock
arpl
test
mov
inc
ret
or
sub
jmp
adc
js
aas
call
push
mov
jmp
popf
push
shl
inc
pop
and
jp
cmps
retf
mov
ret
les
add
fist
mul
pop
mov
jb
mov
mov
shl
sahf
cld
lds
mov
cmp
sub
xlat
shl
xchg
lea
jp
mov
add
pop
out
and
xor
stos
xchg
int
jp
xor
hlt
out
cdq
int
stc
bnd
fcmovbe
pop
std
mov
push
pop
(bad)
fidiv
add
push
lods
push
mov
inc
add
inc
sub
pop
add
xchg
imul
mov
mov
jp
sahf
dec
mov
mov
adc
inc
fist
cmp
or
cdq
sub
cwde
cmps
cmp
sub
das
mov
pop
cld
lods
jb
mov
inc
les
mov
sbb
inc
inc
dec
jge
sbb
or
std
pop
push
ins
push
sbb
adc
xor
jo
cmc
call
jns
cmp
enter
mov
push
xor
ss
ret
call
imul
fmul
sti
dec
ficomp
pop
adc
sbb
hlt
inc
xchg
xchg
xor
loop
sbb
jp
pop
ins
clc
leave
fidiv
ret
xchg
pop
fiadd
retf
in
aas
stc
push
clc
cmps
push
loopne
into
and
mov
sub
adc
loopne
inc
push
sbb
pop
mov
in
add
pop
lea
push
pop
mov
enter
cmp
sar
adc
aad
add
out
mov
add
pop
shl
psrld
xchg
(bad)
xchg
fisubr
stc
xor
cmp
pop
and
cmp
into
outs
xor
cmps
jmp
lods
adc
mov
fcomip
inc
xchg
in
inc
and
pop
or
inc
leave
pop
jno
ins
cmp
mov
sub
mov
inc
retf
pop
add
ret
outs
jge
sub
and
jns
pop
loop
dec
mov
imul
or
jmp
mov
xor
dec
and
fabs
and
add
pop
nop
cmp
inc
loop
or
in
ss
mov
jl
ja
in
mov
xchg
add
or
sbb
sbb
out
mov
cld
xchg
dec
adc
inc
pop
cmp
pop
scas
scas
lods
repnz
xchg
sbb
pushf
mov
jae
jmp
pushf
loop
push
test
out
ss
push
xchg
call
cmp
clc
xlat
mov
jmp
sbb
fadd
mov
enter
cmp
retf
pusha
jmp
xchg
or
mov
fcomp
sbb
test
shl
call
and
outs
icebp
clc
mov
pop
cmp
inc
stos
test
mov
push
retf
add
adc
aas
nop
outs
mov
pop
call
arpl
xor
fdivr
out
loop
cmp
call
and
sti
xchg
lods
ror
mov
push
pusha
mov
js
enter
sbb
sti
pop
or
retf
repz
ins
and
dec
leave
jno
jmp
das
in
mulps
pop
test
mov
leave
pop
and
std
inc
pop
inc
add
into
ins
jne
cmps
fcom
push
lock
fwait
test
out
and
lods
cmc
out
dec
fstp
push
mov
push
and
stos
add
pop
cmps
cdq
mov
loop
xor
add
mov
mov
(bad)
ror
xchg
dec
inc
movs
xchg
call
xchg
dec
data16
ret
shl
loopne
pop
into
scas
add
jo
push
pop
sub
mov
shl
rcr
push
add
cmp
mov
mov
in
fiadd
in
pop
jmp
push
xor
adc
sbb
js
(bad)
hlt
push
mov
mov
adc
int
fisub
adc
leave
jmp
lods
out
retf
xor
test
mov
pusha
(bad)
js
jle
xchg
jp
(bad)
pusha
sub
mov
out
loopne
mov
out
and
jno
pop
test
inc
repz
push
loop
sub
adc
xor
fs
mov
cli
sub
shl
lea
sti
sbb
add
je
or
cdq
repnz
add
inc
inc
ror
jb
adc
push
pop
clc
nop
scas
cmp
sub
aam
sbb
shl
dec
add
out
inc
sti
in
jb
sbb
xchg
test
idiv
add
inc
rcr
pusha
mov
mov
cmp
inc
mov
push
or
push
add
es
push
or
cmovbe
push
outs
push
push
xchg
sub
pop
jae
neg
xchg
mov
sqrtps
and
push
mov
mov
mov
cmps
or
xchg
fld
enter
fild
dec
xor
mul
call
xchg
ret
mov
movs
shr
je
por
aaa
push
popf
mov
ins
pop
in
dec
add
jmp
adc
ins
cmp
sbb
repnz
add
sub
adc
call
jecxz
gs
and
dec
int
ss
cmp
xor
mov
test
sbb
sbb
rcl
mov
jb
bound
in
test
repnz
mov
lods
fisttp
pop
clc
pop
outs
dec
fsub
or
fcom
call
loop
xchg
ins
loopne
mov
repz
add
mov
ja
inc
test
test
or
dec
lods
cmp
lock
or
xor
bswap
or
inc
pop
fisttp
imul
sbb
or
pop
mov
(bad)
jl
inc
popf
jae
adc
and
loope
dec
sbb
sub
stc
add
xchg
es
add
dec
test
dec
in
push
sbb
pushf
cwde
imul
mov
in
hlt
fidivr
pop
bound
daa
mov
out
pop
lock
mov
cmp
clc
dec
lock
xchg
ins
repz
sub
dec
add
dec
or
xor
cld
cmp
sub
mov
sti
jmp
loope
xor
jmp
dec
nop
sbb
mov
mov
xor
push
add
nop
mov
sahf
lock
movs
rcl
loopne
loope
xor
mov
jecxz
pop
loopne
xchg
nop
xor
pop
pop
imul
add
cmp
sbb
arpl
mov
call
mov
cmp
(bad)
pop
lds
std
or
pop
lods
xchg
mov
mov
mov
not
in
enter
cdq
sub
xchg
std
push
fdiv
test
dec
pusha
rcr
dec
bound
xchg
ret
jge
int3
push
rol
push
adc
inc
es
leave
cmp
in
add
test
cmps
mov
mov
lock
sbb
in
push
int
sar
mov
jmp
mov
and
cmp
mov
jno
push
call
js
jns
enter
xor
xlat
inc
cmp
xchg
mov
daa
repnz
jo
out
stos
cmp
mov
jmp
cwde
enter
xchg
jmp
mov
mov
fwait
es
cli
push
sub
add
dec
jle
or
in
(bad)
mov
in
and
out
add
lods
adc
push
outs
xchg
xchg
ror
and
jne
js
scas
fcomp
pop
fcomp
aad
inc
jl
and
and
fisubr
sbb
in
sbb
mov
jmp
xor
movs
sti
lahf
mov
and
repnz
mov
mov
jnp
mov
push
and
cdq
xchg
mov
or
cmp
pop
mov
rcr
mov
and
mov
std
mov
pop
stc
xchg
xchg
mov
cmps
jge
popf
cdq
mov
cmc
pop
lods
stos
add
popa
retf
jb
out
mov
(bad)
imul
adc
sbb
mov
clc
dec
cmp
lock
retf
test
mov
sub
jg
cmp
adc
adc
pop
jecxz
pop
sub
mov
add
lods
dec
jae
and
or
scas
shl
add
mov
pop
jae
dec
fild
sbb
ret
js
xor
imul
or
pop
in
arpl
mov
test
(bad)
adc
jnp
inc
push
(bad)
cmp
lock
jmp
mov
sbb
sub
shr
push
aad
retf
fdivr
into
pop
xlat
push
dec
mov
and
add
xor
ins
push
push
mov
loopne
mov
push
xor
push
lds
(bad)
mov
add
and
jg
setl
stc
(bad)
inc
sub
popa
loop
xchg
xchg
test
bound
xchg
jno
scas
mov
inc
push
stos
sub
enter
mov
out
push
out
dec
xchg
and
fmul
mov
fdivr
jp
xchg
pop
into
ror
outs
pop
and
enter
xchg
and
aas
ins
xchg
sbb
add
clc
add
shl
jno
fsubr
rcr
retf
xor
sahf
shl
pop
mov
imul
clc
or
and
clc
inc
sub
and
dec
cmp
mov
(bad)
push
retf
push
jo
fcomip
inc
adc
xchg
jno
dec
push
imul
mov
(bad)
jecxz
fistp
push
fidivr
inc
sbb
lods
xlat
sar
aad
jg
btr
push
mov
out
or
add
lea
fst
and
and
or
inc
outs
ins
jb
adc
bnd
mov
repz
pop
bound
push
jbe
cdq
mov
push
mov
ss
cmps
mov
dec
inc
sbb
mov
or
lock
push
rcr
or
push
xchg
xchg
jle
(bad)
stc
jb
scas
aad
pop
mov
sub
adc
sub
imul
push
ror
mov
(bad)
push
test
inc
arpl
sbb
in
sub
push
xchg
lods
in
add
xlat
out
imul
sbb
or
jmp
xchg
or
mov
pop
scas
jmp
lods
stos
ret
scas
retf
in
fcom
aas
out
in
mov
jle
ficomp
pmulhw
xor
shl
push
pop
sahf
gs
jmp
(bad)
js
inc
ret
or
and
adc
sub
jno
gs
push
adc
call
dec
dec
adc
std
js
jns
sbb
arpl
jmp
xchg
(bad)
and
fcom
test
mov
xor
jmp
pop
aad
add
inc
pop
inc
cmps
(bad)
cli
gs
setb
lea
and
dec
sub
out
mov
xlat
mov
leave
pop
add
outs
dec
aam
imul
push
xor
mov
stos
lds
sub
test
push
dec
sbb
mov
aam
mov
lock
mov
pop
push
cmp
sbb
mov
and
mov
call
mov
loop
sbb
push
cld
push
in
loop
(bad)
mov
push
enter
rcl
dec
xor
adc
pop
scas
(bad)
xor
movs
cmp
sbb
or
sub
iret
or
dec
loopne
mov
push
xchg
fnstenv
xchg
mov
adc
push
fs
mov
add
sahf
push
pop
fadd
leave
pop
or
push
dec
jmp
test
bound
mov
sbb
fsub
pop
sub
or
pop
addr16
retf
fidivr
out
push
fsub
inc
add
dec
loope
or
adc
enter
sub
or
das
xchg
jg
aas
je
push
inc
sbb
mov
xor
push
jp
mov
loopne
jp
cs
fsubr
outs
jl
ins
sahf
xor
stc
ins
jno
dec
(bad)
outs
out
test
mov
ds
mov
mov
in
sbb
aad
mov
lock
sub
arpl
sbb
mov
mov
xchg
shr
pop
add
sub
mov
sub
mov
pop
xchg
mov
stc
lahf
sub
ja
jle
cmc
loopne
and
cs
mov
in
shr
popf
leave
sbb
loope
fbstp
ins
fisubr
dec
mov
jae
fnstenv
add
add
shl
shl
cdq
pop
int
push
ror
dec
push
xchg
jo
cmc
arpl
ins
scas
fiadd
cli
jl
and
cwde
jae
ins
dec
xchg
clc
cmps
cwde
pusha
cmp
lods
test
fadd
outs
add
shl
inc
dec
dec
lahf
leave
jae
data16
xor
xchg
mov
mov
icebp
add
ret
cdq
movs
test
addr16
dec
xor
aaa
push
add
cmp
mov
and
jo
ret
cmp
adc
jl
push
mov
dec
bound
(bad)
jge
loope
mov
shr
ins
hlt
sbb
jne
xor
pop
or
push
xchg
into
dec
mov
ret
add
test
mov
cmc
sub
jg
xor
adc
aaa
add
mov
js
jo
mov
lods
mov
xor
sub
push
add
shl
jp
push
jne
jp
outs
cmp
call
sti
std
cmp
dec
ror
add
adc
mov
clc
int3
outs
mov
out
test
adc
test
xor
aaa
scas
push
(bad)
jl
stos
dec
jb
xor
stc
adc
popf
pop
test
sub
jle
leave
xchg
jo
sbb
mov
pusha
push
mov
stos
aad
push
jae
jg
inc
mov
sahf
pop
mov
arpl
retf
push
sti
mov
push
dec
mov
bound
cmps
out
dec
loope
and
adc
xor
inc
xor
push
(bad)
or
pop
or
pop
ret
pop
rcr
imul
pop
xor
jp
jns
dec
loopne
bound
jo
pop
push
jnp
inc
(bad)
mov
loope
and
call
mov
popf
jb
inc
xor
out
mov
xchg
fsubr
inc
cmp
cmp
sub
fsub
ret
cmps
xor
ja
sbb
shr
jae
test
or
xlat
lea
lods
loope
(bad)
jmp
cli
std
mov
inc
fmulp
pop
dec
(bad)
cmp
xchg
clc
or
loop
xchg
cmps
jle
pop
(bad)
pop
push
clc
jmp
mov
mov
out
ja
shl
cwde
sti
jp
add
cmp
mov
into
mov
stc
pop
scas
js
pop
les
mov
(bad)
cmp
aam
(bad)
retf
sub
les
jns
lea
mov
cmp
movs
pushf
shl
mov
sbb
and
neg
shl
or
pop
dec
mov
stos
repz
or
jecxz
lods
hlt
inc
pop
xor
int3
add
inc
lods
pop
mov
leave
aad
sbb
stos
(bad)
and
movs
ins
jno
mov
jl
and
sub
jbe
in
jecxz
xchg
cmp
xor
mov
jp
mov
xchg
ret
dec
inc
and
push
es
or
leave
arpl
loopne
mov
lods
push
jmp
mov
call
cdq
push
adc
loop
fstp
push
test
xchg
cmp
jae
das
repnz
test
add
xor
push
imul
inc
nop
and
popf
int
js
cmp
jl
or
jp
adc
nop
shl
and
mov
icebp
cmp
rcr
loope
cmp
out
icebp
js
rol
inc
out
clc
call
mov
in
mov
out
xor
dec
xchg
movs
leave
aas
cmps
mov
ja
rcr
mov
push
clc
pushf
xchg
mov
or
out
sbb
adc
and
xchg
lock
mov
ss
(bad)
scas
fcmovne
loopne
imul
fcom
loopne
jl
xchg
cli
jo
ret
xchg
xchg
mov
adc
jle
pop
icebp
lock
pop
jb
lock
mov
call
jg
cmp
fild
dec
shl
add
or
xor
push
imul
sbb
aaa
push
es
call
xchg
and
pushf
jmp
jns
out
adc
mov
mov
mov
jbe
pop
sub
stc
add
in
push
retf
sub
adc
inc
cmp
ds
push
jle
movs
pop
xchg
fdiv
adc
jb
pop
inc
jl
xor
mov
or
mov
jmp
lods
call
ret
adc
add
data16
sub
lock
loope
icebp
sbb
jl
test
adc
xchg
scas
push
xor
out
js
dec
(bad)
push
sbb
ror
inc
js
push
ficomp
push
aas
mov
(bad)
arpl
in
jne
gs
mov
iret
aad
jp
sar
mov
cli
imul
dec
sti
cmp
(bad)
lods
mov
and
outs
mov
cli
retf
jmp
int3
push
mov
sbb
(bad)
push
push
cmp
xor
cmp
sub
pop
retf
xchg
pop
outs
ret
or
sub
imul
stc
sub
in
into
js
mov
retf
pop
dec
scas
pop
mov
xchg
ins
mov
mov
rcl
push
out
test
mov
xor
jns
mov
add
or
cld
mov
js
in
mov
pop
sub
dec
cs
cdq
pop
pop
xchg
loopne
push
adc
push
fdivr
pop
mov
sub
jno
mov
ss
jge
int
cmp
jne
lods
push
add
sbb
jge
pusha
(bad)
(bad)
call
(bad)
push
cmp
jmp
add
cmp
cmp
fbld
leave
ret
inc
or
and
jne
or
not
out
icebp
add
and
imul
cli
movs
cdq
cli
icebp
test
cli
xchg
addr16
jecxz
push
and
scas
sub
rcl
mov
add
pop
inc
cmps
lods
jecxz
adc
out
mov
pop
ins
mov
mov
js
retf
mov
jne
push
repz
(bad)
inc
(bad)
pop
push
pop
daa
adc
jns
pop
fistp
loop
fdivrp
daa
cmps
rcr
cmp
fist
sub
fisttp
jo
ins
loopne
test
or
stos
jl
ret
mov
xchg
mov
cmp
test
mov
pop
stos
(bad)
lock
pop
adc
pop
push
adc
push
cli
(bad)
es
imul
les
mov
retf
cdq
(bad)
jp
dec
ret
int
push
mov
jns
(bad)
push
data16
mov
call
cli
pop
test
jp
lds
pop
add
mov
call
retf
hlt
mov
and
mov
in
repnz
stos
hlt
mov
cmp
cmp
or
mov
push
in
cli
and
push
jg
mov
add
push
dec
xchg
add
(bad)
fdivr
dec
mov
mov
add
in
frstor
jbe
add
add
adc
es
jmp
scas
pop
ins
or
and
pop
sti
jp
add
push
out
mov
popa
adc
repnz
in
or
mov
or
push
test
and
daa
sbb
mov
leave
iret
imul
loopne
xchg
adc
dec
(bad)
popa
xor
ds
xor
aam
das
mov
(bad)
jge
shr
pop
cmp
fwait
cmps
repnz
dec
ins
dec
mov
imul
and
push
add
xor
inc
dec
mov
ss
cld
jp
push
retf
arpl
call
dec
pop
dec
mov
mov
jns
test
in
stos
jae
dec
mov
cmp
(bad)
mov
push
hlt
shl
call
add
inc
mov
frstor
xor
dec
lahf
pop
xchg
push
push
test
lods
cdq
inc
retf
test
xchg
movs
xor
in
dec
jg
dec
sbb
and
test
popf
jnp
scas
call
ret
add
imul
in
sub
add
test
out
or
leave
outs
mov
sub
mov
iret
adc
enter
sub
add
mov
sub
push
and
outs
pop
push
retf
mov
or
and
int3
or
rcl
retf
mov
mov
pop
adc
out
pop
repnz
mov
jns
add
sbb
adc
scas
stos
lock
repnz
adc
xor
jae
gs
stos
and
fwait
sti
test
xor
mov
sub
sub
scas
frstor
push
xchg
iret
push
pop
adc
mov
mov
(bad)
fadd
add
out
ss
inc
sbb
adc
rcl
cs
xchg
mov
pop
stos
mov
fsub
jns
ror
cld
pop
inc
push
jnp
add
rep
test
xor
ins
(bad)
(bad)
push
call
sbb
lss
mov
loope
nop
repnz
pop
(bad)
fst
inc
test
sar
adc
js
call
and
push
add
and
popa
push
gs
loopne
mov
mov
(bad)
sbb
bound
jl
iret
mov
sbb
mov
in
loope
gs
pop
cli
pushf
fcom
test
aam
pmulhuw
cmc
arpl
or
call
xchg
inc
leave
loopne
leave
adc
mov
inc
mov
or
(bad)
test
mov
(bad)
retf
mov
mov
clc
fdiv
push
mov
fist
pop
popf
push
es
lods
mov
scas
push
shl
int3
bound
cmp
inc
repnz
fsub
inc
shl
daa
dec
or
push
and
aaa
jno
push
xchg
stos
les
cld
repz
js
pusha
out
mov
xchg
out
jno
add
retf
imul
mov
ins
pop
xor
xor
loop
pop
sbb
popa
(bad)
call
and
jmp
fs
retf
test
mov
mov
xchg
shl
xor
mov
test
xor
mov
cdq
add
pusha
test
mov
and
and
inc
ret
rcr
mov
popa
xor
or
inc
(bad)
mov
cld
adc
or
xchg
into
arpl
and
movs
xchg
push
sbb
call
jmp
push
mov
push
mov
mov
test
into
or
pop
push
jl
sub
inc
inc
ds
adc
adc
mov
push
leave
cmp
pop
mov
data16
mov
mov
inc
mov
push
inc
jae
mov
dec
call
fcom
stos
pop
test
xchg
dec
mov
and
icebp
(bad)
inc
xchg
idiv
inc
mov
(bad)
repz
or
repnz
data16
into
sbb
and
scas
dec
in
test
push
jns
lds
mov
es
mov
cmps
popf
push
mov
mov
jmp
add
cdq
jb
mov
pop
push
in
mov
push
cdq
cmp
cmp
lock
adc
into
addr16
cmp
inc
cmp
out
xor
gs
pusha
retf
outs
mov
repz
mov
push
enter
xor
sbb
sbb
call
adc
add
inc
popa
mov
ins
jae
cli
mov
inc
in
sub
lods
cmps
pop
shl
jo
retf
push
call
mov
cmp
dec
jecxz
adc
jmp
fwait
add
lahf
push
ret
lock
jecxz
popf
cmp
mov
xchg
stc
sar
retf
pop
cmps
xchg
add
retf
xchg
mov
fxch
enter
sub
mov
sbb
mov
shl
xor
movs
or
pop
push
mov
push
sub
push
dec
adc
dec
pop
fsubr
jle
(bad)
call
out
ret
push
and
mov
and
xor
fcom
or
cwde
mov
iret
nop
mov
nop
inc
repnz
loop
xor
dec
ja
enter
xchg
cmp
test
pop
mov
(bad)
jnp
enter
test
add
mov
(bad)
mov
js
push
repnz
movs
adc
and
xor
adc
jp
cwde
push
nop
popa
push
addr16
into
movs
(bad)
dec
or
leave
mov
stc
repnz
in
aam
out
jb
sub
adc
aas
mov
fisubr
sbb
dec
fstp
shr
sti
ss
push
mov
jne
test
ret
mov
jecxz
sub
scas
in
movs
jle
jb
inc
call
(bad)
js
mov
clc
in
xor
mov
and
mov
and
jbe
scas
idiv
cmp
jmp
sbb
or
adc
pusha
and
mov
and
pop
mov
mov
(bad)
jp
or
pop
imul
je
fs
addr16
pop
test
cmc
xor
xchg
movs
movs
sbb
or
mov
(bad)
or
push
test
stc
sub
xor
ins
mov
aad
push
inc
dec
mov
and
ins
in
add
inc
mov
js
push
lods
ins
xchg
das
ror
in
or
and
mov
mov
call
mov
mov
sbb
movs
int
cli
jg
(bad)
aam
fsub
int3
ja
aas
test
loopne
cmc
inc
add
pop
and
pushf
or
clc
inc
inc
or
mov
mov
in
loop
cmp
(bad)
mov
popa
(bad)
jns
or
popf
imul
mov
and
lods
mov
pushf
adc
enter
push
jmp
repz
ficom
mov
enter
ins
jnp
fcom
add
sub
aas
xor
mov
stos
popa
push
imul
les
sub
or
xor
pop
loop
cmps
sub
inc
adc
lds
popf
std
cmp
cli
jmp
out
hlt
inc
lods
add
std
jmp
(bad)
bound
sahf
sbb
add
int
dec
hlt
adc
sbb
into
push
cmp
ins
cwde
call
sbb
call
sbb
cdq
xor
mov
mov
xchg
cmps
pushf
mov
test
adc
cwde
cmp
outs
in
mov
into
and
xchg
(bad)
out
adc
sti
cmp
sub
xchg
ins
sbb
aam
mov
or
dec
fisttp
cwde
mov
mov
mov
inc
jge
dec
scas
adc
push
xchg
mov
sub
sbb
xlat
push
mov
shr
int
pushf
test
mov
loop
jb
dec
pop
sahf
out
jo
jns
mov
je
pop
out
inc
ss
pop
push
adc
enter
xchg
lods
aaa
inc
js
pop
retf
pop
or
lods
data16
ror
ins
sub
addr16
lock
pop
mov
outs
ror
leave
cmps
icebp
mov
imul
xchg
mov
icebp
jle
push
lea
test
and
pop
fsub
jbe
arpl
stos
cld
sbb
xchg
dec
stos
cli
lods
les
repnz
xchg
xor
rcr
inc
ja
jae
movs
ds
jmp
jno
jne
and
xor
repnz
push
push
aam
fisub
in
bound
mov
or
outs
xlat
ret
loop
sti
call
mov
xor
push
mov
xchg
sub
inc
push
and
fstp
mov
ffree
scas
add
mov
sbb
xchg
xchg
shl
dec
jb
cmp
pop
cwde
mul
(bad)
push
push
arpl
leave
sub
xor
jmp
xor
(bad)
repz
shr
loop
cli
mov
mov
pop
dec
retf
cmp
jae
jb
xor
je
inc
pop
cwde
gs
cmp
ret
(bad)
std
and
int3
jo
loop
pop
data16
push
clc
cs
add
adc
xor
inc
mov
cmp
or
test
mov
mov
and
ss
fdiv
in
add
adc
sbb
ret
inc
xchg
mov
addr16
test
js
mov
and
rol
fild
sub
adc
hlt
in
ficomp
lods
scas
push
fisub
iret
repz
in
push
call
adc
les
add
inc
sbb
xor
clc
icebp
jmp
jecxz
test
xchg
loop
inc
aas
sbb
fidiv
push
cs
push
imul
pop
add
fstp
push
jge
or
pop
jle
std
imul
add
test
add
sbb
sti
add
adc
pop
(bad)
fst
dec
ret
xchg
push
out
adc
mov
ds
mov
or
cmp
push
test
(bad)
out
stos
(bad)
clc
inc
test
enter
jecxz
fbstp
sbb
mov
mov
in
addr16
adc
pop
mov
xor
stc
xor
loop
mov
mov
enter
out
adc
mov
pushf
mov
push
xchg
xor
push
lock
iret
test
aad
mov
and
sub
ffree
fadd
sbb
adc
dec
(bad)
mov
jle
movs
and
jmp
imul
mul
sbb
es
loope
rcr
arpl
adc
(bad)
test
jmp
add
(bad)
call
mov
and
dec
add
jo
jbe
inc
aam
mov
inc
push
push
inc
addr16
cmps
cli
test
mov
pop
ret
cdq
mov
cmp
cmp
scas
cmc
pop
xor
aam
or
sbb
pop
dec
adc
or
jle
cmp
retf
mov
bnd
bound
inc
test
xor
jle
jae
call
jns
je
pop
xchg
dec
out
push
loope
hlt
out
and
mov
sub
add
scas
mov
imul
jo
imul
nop
mov
aam
mov
inc
or
dec
and
xlat
out
cwde
jmp
and
lahf
jmp
xor
push
jns
fcom
pop
fiadd
mov
mov
jb
push
aam
retf
jl
adc
repz
ret
rcl
jecxz
pop
(bad)
int3
aad
mov
imul
fst
xchg
fld
adc
ror
mov
test
je
and
ret
shl
cmp
jo
inc
jecxz
xchg
inc
arpl
adc
and
in
leave
cmp
pop
xor
sub
sahf
adc
fstp
inc
(bad)
dec
cmc
movs
push
call
mov
gs
jae
mov
lahf
loop
inc
inc
arpl
test
dec
gs
loop
add
shl
jae
jecxz
add
in
jg
repz
out
jge
(bad)
fucomip
movs
pop
pop
call
mov
pushf
out
xchg
fwait
pushf
movs
jo
cli
aad
sti
in
(bad)
xor
and
xor
xor
movs
retf
add
outs
cmp
call
xor
stc
sub
sbb
jmp
mov
jg
push
ss
sbb
dec
cli
xchg
iret
int3
cmp
cmp
outs
adc
mov
sbb
mov
or
enter
rcl
bound
xchg
cdq
mov
push
adc
and
pop
add
sbb
test
pop
popf
aaa
xor
mov
mov
dec
cmp
or
xor
add
add
sar
faddp
imul
sub
xchg
pop
movs
js
xor
xor
rcr
jmp
retf
jo
xor
sub
dec
in
mov
add
xchg
xor
outs
fwait
sub
out
add
adc
sbb
cs
xor
sar
and
pop
inc
lea
push
inc
add
leave
pop
xchg
scas
stc
cld
push
in
or
mov
mov
out
xor
nop
lahf
out
xchg
xor
jnp
retf
mov
jl
popa
mov
xchg
jne
pop
and
ins
mov
xchg
inc
lods
(bad)
rcr
push
loopne
rcl
xchg
mov
mov
sub
rsm
test
dec
aam
and
inc
rcr
mov
xor
push
mov
mov
dec
jl
inc
mov
jbe
inc
mov
sti
push
and
xchg
push
mov
mov
add
mov
in
loop
pop
and
cld
dec
sbb
fneni(8087
cmp
ret
out
ss
xchg
push
cli
test
push
push
sbb
pop
jnp
add
in
addr16
jo
jb
clc
mov
imul
sub
into
jnp
gs
test
arpl
jle
xchg
(bad)
cs
pop
imul
or
add
cwde
ror
pushf
outs
(bad)
fucomp
enter
push
shr
leave
repz
stos
aaa
dec
add
lahf
stos
hlt
push
or
mov
sbb
inc
pop
pop
mov
push
push
in
or
push
push
out
inc
stos
mov
or
out
test
ja
bound
and
add
add
mul
mov
add
iret
pop
and
div
js
dec
jl
loopne
pop
xchg
dec
mov
lahf
mov
sub
enter
repnz
in
adc
pop
cmp
rep
xor
mov
sub
dec
or
dec
mov
xchg
xlat
xchg
mov
fiadd
ds
int
ror
jmp
xor
shl
jbe
lods
out
mov
dec
adc
out
nop
dec
mov
dec
lds
xchg
push
in
pushf
call
push
cmp
int
loop
lods
cmp
ror
jae
or
rcr
aam
fwait
add
test
push
(bad)
dec
ret
ins
cmp
adc
mov
jl
pop
add
xor
sbb
xchg
ds
xchg
fist
and
adc
jb
imul
push
frstor
or
mov
loop
and
and
dec
mov
js
lea
and
dec
jecxz
adc
ret
mov
test
jae
les
hlt
into
pop
scas
mov
inc
es
fdivr
je
sbb
xor
shl
jl
shl
cld
add
xor
and
call
add
xchg
enter
pop
adc
adc
repz
adc
sbb
mov
cmps
add
arpl
mov
pop
nop
retf
std
push
mov
xor
ins
cmps
mov
pop
jecxz
xor
xchg
inc
imul
fs
ins
xchg
xor
test
pusha
pop
or
popf
retf
ins
sahf
xchg
or
add
push
lods
push
cmps
mov
sub
pop
std
stc
test
push
and
jnp
pop
cmps
ret
mov
fiadd
pop
data16
aaa
xor
(bad)
std
push
push
add
cmp
pop
push
(bad)
push
dec
arpl
mov
inc
lock
mov
jg
adc
cmp
jg
repnz
sbb
add
xchg
outs
in
mov
test
rol
in
jge
or
sub
sbb
pop
mov
pop
jno
aaa
rol
xchg
adc
xor
daa
dec
pop
outs
cld
or
cmp
lods
loop
loop
and
movs
(bad)
(bad)
sysenter
push
push
mov
dec
sbb
sub
imul
aam
bound
mov
sub
and
and
mov
loopne
mov
les
mov
pop
cwde
arpl
xchg
jle
iret
out
out
ret
outs
popf
or
adc
cs
movups
inc
inc
xchg
(bad)
aas
add
xchg
add
mov
pushf
cmp
fild
add
mov
aas
outs
leave
ins
outs
push
pop
loope
cmps
mov
outs
gs
ret
cld
jle
(bad)
fnsave
out
fsub
repz
leave
aam
sub
lods
jecxz
jg
and
dec
pop
adc
rol
scas
clc
pop
push
js
xor
mov
lahf
retf
pminub
je
test
sub
adc
xchg
mov
enter
loope
arpl
add
mov
int3
iret
jno
out
ins
xchg
and
add
int3
gs
add
jnp
push
ja
jmp
test
fstp
repz
xor
push
sbb
sub
or
outs
sbb
push
push
mov
pop
cwde
mov
mov
outs
stc
pop
fnstsw
sub
mov
xchg
mov
lock
xor
mov
(bad)
cmp
loop
sub
clc
sub
inc
das
fs
aad
jmp
mov
lods
sub
movs
mov
fcomp
pop
aas
mov
sbb
pop
fisttp
idiv
bound
mov
out
idiv
mov
pop
cmp
push
clc
push
and
dec
jmp
jp
ss
imul
ret
push
jb
cmp
push
mov
mov
into
les
loop
fdiv
gs
retf
push
sub
cmc
out
sar
cwde
jae
jae
scas
out
sbb
lods
imul
jae
xchg
repnz
shl
lahf
dec
add
push
fcomp
sub
adc
(bad)
xor
cmp
jnp
call
ret
outs
xchg
or
repnz
cwde
cmp
push
dec
sub
cmps
test
pop
enter
or
xchg
movs
std
pop
out
mov
call
add
test
push
je
rcr
shr
push
cld
mov
vmread
out
lock
dec
adc
nop
dec
test
adc
scas
seto
push
xor
sbb
les
mov
enter
dec
add
(bad)
out
pusha
mov
sti
mov
(bad)
fldpi
ror
cmp
jmp
mov
add
sbb
gs
dec
ret
add
dec
test
jmp
ss
popa
jo
rcpps
mov
lahf
xchg
aaa
mov
outs
jno
popf
shl
jns
pop
shl
mov
aam
xchg
pop
push
aas
mov
jmp
stc
and
or
ror
xor
repnz
xlat
test
data16
in
push
out
int3
xchg
aam
rcr
scas
dec
add
jge
ins
out
mov
(bad)
enter
mov
clc
es
repnz
mov
ja
push
mov
js
shl
xor
sbb
test
ret
test
lods
xchg
inc
sub
outs
stc
inc
enter
sub
adc
push
bnd
cs
das
je
in
fsub
fdiv
mov
jmp
jg
mov
inc
jmp
lock
(bad)
(bad)
mov
cs
hlt
mov
adc
mov
retf
sbb
pop
js
sub
push
pop
arpl
mov
cs
hlt
fwait
aad
fsub
iret
sub
or
movs
pop
test
dec
scas
push
and
ret
and
loop
sub
push
(bad)
aad
je
cmps
ret
push
(bad)
ja
pop
bound
dec
xbegin
in
mov
xor
and
fst
int3
nop
out
sub
mov
ss
call
adc
pop
adc
iret
xor
sub
fs
lods
stos
xlat
loop
xor
pop
mov
adc
jb
cmp
add
mov
(bad)
xlat
mov
push
mov
xor
fdivr
xchg
pop
mov
mov
jo
sbb
aad
cmp
pop
push
mov
jg
icebp
stc
add
cmp
jle
out
jns
xor
test
dec
mov
xor
adc
fstp
das
adc
jns
xor
mov
(bad)
adc
adc
dec
fs
je
in
mov
arpl
fs
mov
sbb
lods
jmp
push
push
pop
imul
test
fimul
pop
or
fstp
or
movs
cdq
add
in
cwde
jnp
scas
jns
and
push
add
imul
out
out
jno
dec
add
call
xor
aas
and
inc
xor
test
into
cld
and
dec
aas
stc
jmp
adc
xchg
lea
outs
fist
sub
xchg
lds
call
mov
and
shl
test
imul
movs
ret
mov
pop
aas
xor
lods
in
cmp
adc
js
ficomp
enter
test
xchg
daa
aad
xchg
mov
jae
mov
ins
pop
fwait
popa
jnp
ins
mov
mov
punpckhbw
ins
or
fisub
inc
ss
sbb
rcr
test
mov
cdq
fisub
inc
sub
and
xchg
push
aaa
scas
ror
cmp
pop
and
gs
jne
sub
cwde
jle
daa
call
iret
lea
jnp
xor
std
imul
push
enter
cld
mov
mov
mov
das
loop
ds
cmps
fistp
pushf
jbe
out
out
jle
jb
xor
out
js
xchg
sbb
adc
or
out
pop
mov
inc
pop
cmp
mov
test
sub
gs
jae
fidivr
adc
pusha
stc
inc
jae
data16
sub
cdq
(bad)
ins
adc
clc
xchg
lods
(bad)
and
add
dec
scas
dec
mov
mov
cmp
xor
fisubr
add
mov
jns
sti
inc
or
sbb
loop
es
jbe
ja
mov
jae
jb
sbb
inc
fs
jmp
ds
mov
jle
std
sbb
xor
stc
ret
imul
mov
xchg
cdq
jae
and
mov
and
sbb
mov
(bad)
mov
jae
push
mov
loop
xor
fdivr
jb
cmp
out
call
mov
loop
cmp
fs
scas
imul
sub
aad
adc
sbb
sti
fs
cmp
push
add
lods
shl
dec
xchg
inc
or
sti
jb
dec
mov
imul
jmp
(bad)
mov
dec
les
ret
mov
sub
mov
sub
xchg
cmp
js
add
pop
mov
sbb
adc
cmp
int3
ds
or
ins
cmp
mov
sub
xchg
xor
or
jecxz
out
out
ins
das
fwait
cs
loop
pop
hlt
mov
sbb
je
dec
lods
sbb
scas
jg
cmp
js
enter
je
aaa
push
cwde
inc
xchg
pop
pop
xor
sbb
add
icebp
out
mov
sub
ror
mov
jnp
push
aam
mov
and
outs
push
iret
xchg
pop
movs
mov
push
ror
adc
in
xor
or
neg
aam
xor
or
inc
mov
push
xchg
mov
add
movs
in
jns
in
fbstp
leave
xor
out
sbb
fidiv
mov
add
mov
jne
cmp
add
and
dec
pop
mov
jne
pop
(bad)
pop
out
test
(bad)
mov
push
sub
(bad)
out
push
test
jae
mov
xchg
into
cdq
mov
mov
cs
pop
and
rcr
jae
shr
mov
and
inc
loope
inc
adc
jmp
int
jmp
(bad)
stos
sbb
and
into
dec
jecxz
scas
clc
adc
push
les
(bad)
sahf
retf
dec
cmp
jmp
ret
gs
sub
jne
adc
call
jne
out
sbb
(bad)
xchg
push
jge
ds
mov
mov
into
ss
dec
dec
sub
sbb
mov
test
jle
popa
push
mov
repnz
dec
and
and
push
outs
pop
inc
test
js
adc
inc
int3
call
stc
retf
xor
xchg
cwde
ret
sub
lods
sbb
and
or
push
in
cmps
push
(bad)
repz
enter
mov
adc
cdq
fiadd
stc
das
inc
into
enter
gs
in
pop
xchg
sbb
test
push
mov
xchg
arpl
mov
in
fild
inc
push
mov
mov
xchg
adc
xchg
les
(bad)
adc
xor
cmp
cmc
pop
imul
sub
pop
jo
stc
mov
cmp
ins
leave
xor
mov
add
enter
cwde
ffreep
cmc
div
(bad)
mov
xchg
fwait
fs
or
pop
jns
stos
xchg
scas
pop
repnz
mov
pop
cmp
test
mov
daa
cmp
aam
out
jmp
push
les
cwde
jecxz
xor
xor
push
mov
movs
mov
or
ud0
or
out
xor
repnz
mov
lahf
and
xchg
movs
or
xor
stc
leave
mov
arpl
mov
popf
or
adc
mov
xchg
stos
in
aaa
(bad)
lahf
mov
cwde
adc
jae
push
enter
push
pop
sbb
leave
cs
js
(bad)
(bad)
cwde
mov
cmp
jle
iret
add
ja
into
(bad)
mov
jp
(bad)
aaa
std
into
add
int
aas
jp
xor
hlt
div
xchg
enter
adc
sbb
js
in
(bad)
adc
outs
mov
jmp
sti
xchg
inc
scas
loop
pop
out
and
ret
pushf
and
loopne
retf
stc
fwait
mov
movs
(bad)
shl
lods
xchg
movs
pop
mov
cwde
xor
fs
push
test
leave
or
adc
popf
int
scas
sbb
ja
pop
jle
mov
push
cmps
and
cli
scas
je
outs
cmp
xchg
shl
dec
jne
fs
adc
and
and
(bad)
xor
pop
and
imul
cs
(bad)
mov
popa
sub
mov
lods
xchg
in
ret
push
aam
jbe
pop
movs
enter
sub
les
popf
repz
xchg
rcl
push
js
push
add
call
sahf
pop
adc
cld
jmp
(bad)
and
sbb
std
es
jmp
lahf
push
and
push
in
enter
call
scas
mov
mov
push
dec
add
mov
test
sbb
iret
and
test
jmp
jbe
(bad)
pop
fwait
mov
adc
ja
sub
jmp
test
jmp
bound
ror
(bad)
(bad)
sub
bound
jl
xor
lea
mov
fidivr
xor
jmp
xlat
jb
add
pop
inc
ds
mov
dec
loope
and
out
enter
jne
xor
dec
jnp
pushf
jle
add
mov
pushf
and
jo
cmc
mov
and
ror
mov
mov
inc
cwde
jnp
nop
stos
mov
and
mov
idiv
pop
dec
mov
mov
int
test
push
(bad)
loop
mov
xor
imul
push
jae
ret
inc
pop
pop
cmp
dec
adc
and
enter
out
data16
icebp
das
and
jecxz
outs
aas
ret
xor
cs
(bad)
mov
pop
pop
jb
jp
les
dec
into
or
pop
lods
retf
gs
add
outs
push
adc
push
push
mov
iret
adc
mov
sbb
xchg
aam
sbb
jb
pusha
dec
popa
sbb
or
out
ss
push
mov
xchg
je
inc
pop
out
push
xchg
push
mov
test
cmp
and
mov
das
div
icebp
sbb
sub
(bad)
jae
in
sbb
out
popa
mov
cwde
inc
(bad)
add
push
lods
jo
ss
bound
or
outs
je
xchg
xchg
pop
mov
test
fwait
ret
js
cmp
xor
imul
aad
sub
(bad)
mov
fistp
movs
lods
inc
(bad)
dec
test
ins
or
in
sbb
nop
std
js
jl
cmp
rcr
cli
push
xor
inc
mov
xchg
push
lock
sub
sub
pop
loop
ja
jbe
push
fwait
adc
fcom
mov
and
jge
pop
stos
pop
inc
dec
mov
out
cwde
int
dec
stos
popa
scas
jb
sub
aas
cs
sahf
shl
enter
ds
mov
push
pusha
xor
pop
ins
nop
and
or
jmp
jle
and
(bad)
ja
inc
lods
push
add
push
clc
lods
sub
call
out
(bad)
mov
add
push
pop
pop
repz
ds
(bad)
ds
or
pop
shl
call
div
cmp
sahf
adc
mov
jns
in
push
scas
ret
retf
push
loop
cmp
test
cwde
cs
repnz
pop
sbb
inc
aad
fs
js
cwde
dec
or
lods
cs
mov
sbb
outs
js
mov
or
in
ja
mov
or
mov
js
pop
out
mov
mov
xchg
add
mov
addr16
cmp
dec
fst
scas
ss
jmp
and
push
push
jmp
sahf
and
pop
dec
pushf
pop
imul
call
outs
mov
adc
sbb
add
fsubr
popf
pop
sti
cli
mov
mov
mov
dec
push
or
or
mul
push
leave
aaa
out
rcl
je
xor
outs
out
mov
addr16
das
stc
dec
cmp
mov
loop
in
and
in
push
repz
and
loope
xchg
sub
je
dec
aam
clc
lea
fist
xor
ror
jmp
call
mov
ret
jbe
pop
ins
sahf
jp
fstp
fnsave
mov
(bad)
fistp
icebp
mov
retf
add
cli
fst
jp
loopne
repnz
loop
or
cld
add
test
(bad)
ret
test
mov
call
mov
fst
push
sub
push
int
push
jmp
push
push
inc
sbb
mov
loop
popf
(bad)
mov
sub
or
mov
leave
push
loop
rol
pop
sahf
adc
mov
retf
cmp
xchg
mov
cld
inc
or
(bad)
in
repnz
fsub
adc
adc
sub
fs
fadd
bound
lds
adc
shl
pusha
mov
scas
mov
or
xchg
(bad)
cwde
adc
jb
push
cdq
loop
xchg
cwde
sub
sbb
jae
ret
mov
aaa
or
pop
pop
js
lea
mov
mov
fwait
repnz
sbb
jno
aaa
sub
add
add
pop
scas
adc
xlat
jge
cmps
inc
enter
xchg
inc
mov
out
pop
loopne
nop
mov
js
dec
repnz
adc
xchg
push
jb
pop
xchg
pop
adc
or
out
aad
sub
fadd
xchg
aam
cmp
leave
mov
jnp
pop
out
leave
adc
iret
push
pop
pop
mov
hlt
pop
cwde
fist
js
jl
and
js
dec
ret
xchg
push
jecxz
and
call
ret
cmp
rcl
stos
test
retf
jp
inc
out
push
ss
cmp
ins
mov
test
stos
in
ja
shl
cli
add
add
sbb
xor
or
cmps
xchg
cmp
ret
daa
repnz
add
fs
xlat
push
enter
out
xor
sbb
xchg
pop
jge
jle
ds
(bad)
cdq
mov
sar
mov
sub
xchg
movs
hlt
pop
fild
inc
pop
and
int3
test
jns
hlt
and
data16
ins
call
mov
inc
mov
push
test
test
xor
fst
mov
js
test
pop
dec
mov
fistp
mov
lea
sub
aaa
mov
aas
test
call
or
repz
arpl
mov
int
seto
(bad)
ret
pop
js
inc
dec
(bad)
enter
aaa
call
add
xor
pop
call
push
xor
add
cwde
xchg
xlat
mov
and
lods
sti
test
ins
test
(bad)
cwde
out
and
and
inc
xor
(bad)
fcom
jae
xchg
fisubr
sub
jmp
pop
les
lea
jg
dec
mov
push
jnp
xchg
inc
call
inc
std
fiadd
hlt
or
and
and
dec
rol
loop
and
ja
mov
inc
sbb
out
and
out
add
cli
jb
pop
jge
jne
xchg
xchg
cmc
cmp
mov
and
ins
stos
and
mov
adc
xchg
hlt
push
into
xchg
mov
popa
adc
je
shl
sahf
mov
mov
aas
iret
ja
cmp
daa
ror
add
jecxz
and
fcom
push
retf
adc
inc
inc
adc
pop
sub
sbb
add
std
adc
out
retf
pop
pop
or
dec
xchg
inc
or
fadd
push
not
sub
mov
das
xchg
push
lahf
arpl
jp
gs
xchg
jmp
mov
pop
imul
add
stc
add
xor
fs
push
add
mov
push
sahf
cmp
xchg
add
pushf
dec
aas
es
xor
ins
iret
mov
lahf
xchg
dec
and
pop
pop
or
jl
mov
dec
fld
xor
jb
ficom
es
dec
push
adc
and
mov
and
stc
rol
jae
mov
in
mov
mov
and
mov
xchg
push
jecxz
mov
push
mov
hlt
mov
ror
inc
cdq
add
lds
mov
repz
dec
fmul
fisttp
push
sbb
mov
or
loope
dec
xchg
mov
sub
lock
fs
mov
push
ret
sbb
push
pop
in
mov
repnz
test
bound
iret
ja
mov
jno
jge
fnstsw
pop
sbb
mov
xchg
test
mov
xchg
mov
std
pushf
aas
cmps
out
rol
mov
jle
test
jae
mov
and
mov
ins
adc
cdq
out
add
(bad)
(bad)
inc
cmc
mov
(bad)
jle
and
pusha
(bad)
in
ds
and
push
fistp
into
sub
or
adc
in
(bad)
xchg
outs
icebp
jno
jno
daa
retf
jge
and
adc
pop
inc
loope
adc
sub
inc
mov
push
or
cwde
aad
dec
gs
leave
xor
nop
fwait
mov
mov
sbb
addr16
adc
and
mov
fisub
imul
push
daa
jb
jmp
mov
mov
mov
aad
daa
rol
pushf
stos
mov
test
sbb
fsubr
add
data16
inc
push
pop
mov
iret
stc
adc
mov
jge
jnp
mov
sbb
call
test
dec
cwde
adc
or
mov
cmp
repnz
mov
mov
mov
repnz
cli
lods
sahf
pop
cmps
adc
shl
and
int
fnstsw
fld
repnz
hlt
sbb
pop
dec
inc
jb
popa
sub
hlt
mov
mov
sbb
stc
dec
shl
hlt
dec
aam
adc
add
xor
xchg
mov
sar
cmp
ret
js
jo
pop
pop
aam
loope
lock
xor
push
daa
je
jg
adc
shl
mov
mov
or
ds
or
mov
imul
push
sub
dec
sar
add
and
cmp
je
add
lahf
enter
jecxz
loop
(bad)
and
cmps
xor
fcom
inc
cmp
imul
jge
mov
adc
xor
mov
(bad)
cmps
int3
hlt
pushf
fisub
out
mov
or
fwait
data16
out
out
pop
push
jmp
or
and
hlt
jge
rcl
push
test
dec
xchg
mov
sub
adc
adc
sub
jecxz
inc
fstp
pop
mov
mov
rcr
sbb
push
jge
pop
aam
hlt
jnp
out
jo
xlat
lds
dec
push
jl
mov
and
push
jp
fcomi
inc
mov
ins
stc
(bad)
stos
js
xor
xor
test
(bad)
cmp
jo
cli
daa
or
hlt
movs
adc
jl
sbb
push
and
scas
cmp
cwde
sub
cwde
and
sub
pop
das
pushf
inc
push
retf
cld
aas
sbb
xor
dec
movs
cwde
clc
(bad)
je
sub
xor
out
les
cld
mov
cmp
(bad)
das
mov
pop
adc
add
sbb
das
addr16
(bad)
sbb
cmp
sbb
push
mov
jmp
push
mov
adc
das
imul
aas
scas
pop
fwait
pop
rol
stos
inc
daa
mov
ds
(bad)
jmp
pop
ins
sub
scas
hlt
das
cwde
lods
jbe
pop
lahf
je
or
dec
lock
lods
jns
pop
das
pushf
mov
push
scas
sbb
rol
dec
cwde
scas
mov
scas
fsub
cmp
pop
cs
adc
pushf
loope
mov
sbb
cmps
das
mov
or
cmp
pop
or
aad
and
pop
scas
or
shr
test
mov
fidivr
mov
jmp
fsubr
lods
out
mov
mov
lock
(bad)
cld
xchg
lock
sbb
sbb
mov
movs
in
enter
sbb
jo
pop
or
(bad)
pop
pushf
cmp
jo
add
pop
cmp
imul
cwde
movs
jl
or
lock
pop
and
cld
jg
and
or
repnz
bound
xchg
gs
cdq
(bad)
adc
cdq
xor
dec
ins
mov
aaa
mov
sbb
xchg
mov
ss
mov
and
mov
iret
mov
leave
retf
fimul
xchg
les
mov
dec
ficomp
pop
adc
cmp
sbb
mov
cdq
fsub
jno
adc
cmp
xor
aas
jno
mov
fist
mov
mov
mov
xor
jge
mov
pop
in
or
add
fisubr
shl
pop
mov
jbe
jno
jae
icebp
sbb
ins
xor
or
call
push
pop
pop
mov
cdq
mov
(bad)
icebp
scas
popa
cmps
nop
icebp
pop
xchg
mov
cmp
leave
mov
jb
pop
pop
add
cs
(bad)
cdq
mov
mov
hlt
icebp
ds
cs
(bad)
(bad)
pop
and
inc
cdq
icebp
ins
mov
int
(bad)
fnsave
cdq
mov
fcmovu
fnstenv
adc
or
dec
mov
mov
mov
and
fcomp
and
inc
pop
ss
mov
pop
mov
cmp
push
and
ins
inc
mov
cdq
mov
adc
sub
mov
cwde
test
jmp
les
(bad)
movs
mov
into
dec
les
cdq
ret
movs
nop
pop
aaa
(bad)
push
sbb
cmp
mov
mov
xor
mov
aaa
sbb
inc
mov
mov
dec
cmp
jmp
cmp
xor
cmp
jle
(bad)
shl
mov
shl
les
stc
aaa
ss
fnstcw
fbstp
lock
cmp
add
add
mov
int
aam
mov
mov
pushf
mov
sub
call
addr16
mov
lods
sbb
movs
std
xor
js
sbb
pushf
cmp
int
iret
or
out
lods
xor
mov
cli
test
or
mov
movs
js
mov
mov
xor
(bad)
in
cmp
pop
sar
dec
jns
push
mov
aas
ds
ds
ds
cmp
mov
outs
ror
mov
inc
dec
cmp
jnp
sub
jecxz
cld
mov
lods
jge
xor
clc
lods
jge
mov
pushf
mov
mov
mov
cmp
clc
retf
cmp
mov
jge
mov
cld
stc
jle
test
add
aas
mov
inc
jge
cmp
dec
sti
imul
lds
xor
sub
dec
arpl
in
jns
xor
dec
cmp
cld
mov
mov
xor
in
cmp
adc
mov
add
cmc
fist
xchg
mov
cli
adc
mov
stos
aad
stos
cmp
jno
cld
add
popf
ds
call
jnp
or
inc
inc
push
mov
inc
(bad)
lds
pop
mov
jge
rol
aam
mov
fs
or
inc
jle
scas
mov
and
fmul
imul
sbb
clc
std
sbb
mov
jne
inc
jne
and
sti
(bad)
and
jns
and
in
imul
gs
out
add
and
(bad)
loope
dec
clc
dec
jle
push
jno
(bad)
mov
push
cmp
mov
ja
jae
shr
push
and
(bad)
xchg
(bad)
fs
mov
mov
add
ds
jo
inc
xchg
jne
stc
outs
xor
mov
cli
inc
xchg
sti
or
xor
mov
adc
ss
push
jae
fimul
iret
(bad)
loope
adc
inc
add
ficom
xchg
ficomp
cmc
inc
jle
call
jae
(bad)
sbb
jno
xor
repz
mov
loope
mov
mov
pushf
ins
inc
xor
jmp
pushf
jl
pop
cdq
jle
(bad)
sbb
cmc
mov
adc
xor
jae
mov
jae
(bad)
jle
or
jae
mov
jle
pop
fst
push
(bad)
xchg
jae
fimul
sub
push
sbb
fcmovbe
adc
cmc
xor
std
or
push
repz
mov
test
or
and
jae
or
sbb
push
jns
jmp
mov
xchg
dec
jae
or
cdq
fnstsw
imul
inc
outs
or
(bad)
and
ss
inc
xchg
fcomp
test
or
repnz
inc
outs
mov
xchg
les
push
loop
scas
jnp
inc
pop
outs
mov
mul
xchg
dec
fild
cmc
add
es
add
rcl
add
imul
sahf
mov
outs
sub
push
imul
mov
fwait
inc
in
mov
ret
gs
test
popa
sbb
push
xor
jb
sbb
bnd
adc
mov
les
mov
push
jne
inc
mov
jmp
ss
les
jne
xchg
stos
cs
or
fimul
les
imul
dec
es
std
or
pop
(bad)
mov
sub
adc
inc
mov
adc
daa
xor
inc
call
xor
ror
cmp
pop
inc
icebp
push
mov
xor
addr16
icebp
mov
mov
aam
push
addr16
pop
mov
sub
idiv
inc
or
cmp
cwde
or
mov
pop
add
daa
out
js
or
mov
ror
das
inc
cmp
mov
sar
daa
sbb
cmp
push
adc
and
xchg
dec
sbb
cs
inc
inc
repnz
inc
lea
cmp
je
cwde
aad
jmp
shl
ds
cwde
rcr
sbb
sub
inc
js
iret
adc
jo
js
sbb
daa
sets
js
hlt
sub
daa
sbb
adc
push
mov
addr16
cmp
test
iret
lahf
(bad)
(bad)
icebp
inc
pop
push
imul
jl
jne
iret
maxps
enter
xchg
mov
mov
retf
cmp
jo
rol
in
inc
mov
inc
aad
adc
pushf
jl
push
adc
cmp
cmp
js
hlt
inc
xor
sub
mov
lock
xlat
clc
push
sub
jge
inc
out
cld
jb
js
pop
jmp
shl
cmp
sbb
js
fmul
xor
inc
js
mov
rcl
ror
mov
or
mov
jmp
xor
mov
jo
cmp
aam
xor
js
pop
add
inc
sub
fadd
sub
cli
jecxz
pop
cmp
push
inc
adc
adc
add
inc
sar
cdq
shl
adc
je
adc
jae
mov
out
dec
mov
push
(bad)
(bad)
cld
(bad)
hlt
mov
pop
nop
retf
inc
scas
jne
xchg
xor
std
mov
ficomp
js
dec
mov
mov
lock
sub
or
movs
ja
lock
clc
retf
push
stos
push
fisub
mov
sub
nop
(bad)
mov
retf
fisttp
dec
or
inc
lock
loop
test
hlt
rcl
or
stos
rol
jl
dec
clc
jp
add
stos
jmp
mov
sub
mov
nop
retf
cmp
cmps
jmp
sbb
shr
inc
or
neg
xchg
sbb
inc
lock
shr
jo
into
and
psubb
sbb
jo
aaa
not
and
leave
cmps
shl
fldl2e
loope
pop
jp
into
adc
fsub
push
fdiv
adc
sub
mov
mov
add
pop
les
lods
pop
aam
sbb
mov
mov
mov
ins
stos
pop
sbb
push
je
in
sub
pop
aam
push
xor
mov
sbb
xchg
mov
aam
fs
cmp
jb
fwait
push
mov
push
sbb
sbb
inc
cmps
mov
pop
stos
inc
aam
clc
xor
sub
fwait
cmp
mov
shr
(bad)
aam
mov
(bad)
inc
fistp
dec
in
or
push
call
mov
nop
inc
mov
sub
inc
or
outs
out
enter
lock
push
xchg
inc
sub
lods
ret
movs
cmp
mov
dec
hlt
ss
cmp
sahf
je
fidivr
retf
repz
icebp
lock
or
add
movs
add
ins
(bad)
ret
add
lds
loope
lds
dec
or
and
add
cdq
scas
syscall
inc
out
es
retf
aad
aad
pop
mov
push
shl
stc
into
ins
mov
mov
test
dec
inc
mov
adc
popa
add
hlt
push
ins
and
mov
outs
mov
push
push
cmps
xchg
mov
in
add
bound
or
pusha
push
push
test
ins
popa
test
es
loop
add
xchg
add
bound
test
jmp
adc
and
(bad)
cmc
into
ins
ds
pop
daa
and
add
ja
mov
mov
movs
dec
dec
and
test
(bad)
in
mov
syscall
inc
mov
jne
add
aam
sbb
shl
inc
mov
jle
pop
add
mov
ror
movs
cmp
mov
in
inc
leave
dec
mov
xchg
push
cmps
ficom
leave
and
add
data16
add
outs
mov
xchg
sub
icebp
push
movs
xchg
or
ins
or
in
loope
push
add
bound
add
in
stc
and
push
and
xchg
inc
or
add
daa
dec
pop
test
mov
ins
out
pop
add
mul
cmp
ret
movs
add
add
inc
inc
xchg
inc
pushf
xchg
out
inc
mov
pop
jne
add
sahf
lds
adc
sub
push
pop
add
dec
ja
ins
cld
shl
jo
push
enter
(bad)
enter
xchg
pop
jae
imul
cmp
(bad)
nop
adc
jbe
aad
cmc
inc
adc
fstp
into
js
enter
movs
mov
cmp
les
scas
jo
xor
add
ror
xchg
push
xchg
scas
shl
inc
clc
jl
add
inc
out
cmp
mov
js
xor
xchg
jl
ret
addr16
cmp
mov
mov
addr16
leave
sbb
clc
inc
gs
xchg
out
arpl
stos
xchg
sub
add
adc
xchg
out
addr16
stos
xchg
sub
add
push
xchg
dec
xor
cwde
pop
add
xor
cmp
jle
sbb
xor
loop
inc
sbb
(bad)
mov
mov
or
cmp
sub
nop
pop
mov
adc
xchg
mov
jl
(bad)
pop
or
add
adc
dec
add
retf
cmp
sbb
imul
sbb
add
sub
adc
push
or
dec
adc
inc
push
push
mov
inc
sbb
push
imul
xor
cwde
pusha
sub
cmovnp
push
bound
add
sbb
dec
aad
sar
clc
jno
add
clc
sub
aam
lods
cmp
jge
cmc
sbb
pop
mov
dec
les
popf
add
or
jmp
lea
cs
jg
das
int3
int
push
or
cmp
enter
lods
jb
inc
in
add
aam
shl
and
inc
dec
jbe
cli
fcomp
fmul
add
fs
inc
inc
addr16
pop
(bad)
in
(bad)
mov
imul
jle
addr16
stc
(bad)
mov
pop
outs
imul
jecxz
inc
addr16
pop
(bad)
out
mov
les
inc
jnp
jmp
test
mov
mov
stos
sub
sub
sub
push
jmp
sub
mov
cmp
les
add
mov
jl
in
push
sbb
xor
loope
mov
inc
call
push
cmc
or
ret
inc
sub
popf
xlat
sti
test
cmps
adc
call
into
xor
push
jno
mov
jmp
mov
(bad)
adc
aam
aam
out
jmp
mov
inc
ficomp
repnz
cmp
push
enter
add
mov
and
mov
xchg
or
adc
jo
(bad)
or
xor
xchg
sub
mov
lods
cs
aas
mov
cwde
es
cmps
adc
xchg
or
adc
jae
xchg
adc
movs
aas
int
jb
inc
stos
daa
mov
cmps
pop
enter
push
mov
dec
mov
icebp
aas
movs
mov
fisub
stos
movs
pusha
movs
jb
push
cli
and
popa
cmps
xlat
ds
shr
mov
inc
mov
movs
jp
push
movs
mov
stc
daa
mul
mov
movs
dec
movs
mov
push
lock
rcl
retf
sbb
push
int
icebp
and
dec
movs
ins
sar
rcl
fimul
movs
js
ins
loope
rcr
push
retf
and
mov
ds
pop
(bad)
push
aad
and
repz
into
ficom
cli
sbb
sub
fadd
clc
ret
fadd
inc
mov
mov
inc
shl
sbb
or
pop
pop
jmp
push
lods
dec
cmp
shl
jae
(bad)
out
xchg
and
mov
sbb
push
outs
das
sbb
cwde
jmp
sub
or
jo
cmp
jge
cmp
jge
sbb
cmp
ja
pop
push
pop
cs
std
add
fldcw
sbb
jle
fs
dec
push
and
cwde
ret
mov
jae
add
outs
ja
sbb
hlt
out
adc
or
pusha
jo
data16
adc
sub
or
jg
push
fs
not
sub
add
sbb
adc
shl
mov
ja
ins
pop
jo
inc
push
das
sti
lods
mov
inc
inc
inc
jnp
sub
jno
mov
mov
sub
outs
cmp
jb
lahf
add
xor
das
xor
cmps
or
dec
cmp
movs
pop
pop
mov
mov
jg
fadd
cli
loop
mov
in
mov
call
fsubrp
jb
push
movs
out
inc
retf
js
clc
pop
stos
hlt
dec
cs
mov
cwde
push
push
int3
nop
jb
mov
mov
and
inc
loopne
rcr
add
mov
ret
push
loopne
mov
and
xchg
aaa
call
(bad)
push
mov
jmp
nop
sbb
icebp
jge
out
test
mov
and
mov
push
retf
mov
mov
mov
dec
mov
movs
mov
cmp
aaa
sar
sub
out
fwait
sbb
inc
mov
das
hlt
shr
js
pop
out
mov
mov
pop
add
stc
add
jbe
jecxz
test
(bad)
arpl
arpl
pop
sub
into
popf
jmp
sbb
xchg
push
shr
and
pop
call
inc
mov
outs
out
cs
loopne
cli
and
pop
loopne
repz
cld
scas
fsubr
out
in
or
mov
push
push
movs
mov
repz
icebp
stos
test
mov
and
cwde
xor
xchg
sti
mov
mov
mov
mov
xchg
mov
not
in
cmp
mov
in
les
pushf
hlt
cdq
jmp
loopne
nop
stos
neg
mov
loopne
mov
not
lods
mov
popf
xchg
cmp
neg
mov
xchg
mov
pop
test
icebp
mov
mov
cmps
inc
in
xchg
xchg
cdq
lea
mov
imul
mov
out
arpl
popf
stos
repnz
cmps
xchg
xchg
test
mov
ficomp
mov
cmps
cmp
mov
mul
xchg
fild
xchg
cmps
or
xor
mov
mov
pop
dec
loopne
scas
mov
jge
mov
test
stos
lods
test
xchg
call
mov
xchg
jge
mov
lock
mov
mov
mov
mov
mov
test
ror
pushf
fadd
in
lods
ret
cdq
imul
scas
mov
scas
stos
icebp
mov
(bad)
repz
repz
cdq
lds
stos
mov
icebp
xchg
loopne
iret
sub
scas
retf
aam
rcl
mov
mov
mov
in
mov
mov
jmp
cmps
call
shl
mov
mov
shl
iret
into
sahf
aam
idiv
lds
loopne
mov
loopne
out
leave
retf
mov
mov
(bad)
in
icebp
mov
retf
mov
cld
int3
xlat
aam
lahf
stos
adc
cmps
mov
xchg
shl
into
cmps
xchg
repnz
nop
aad
cmc
and
mov
popf
(bad)
mov
repz
mov
fmulp
out
fldln2
xchg
iret
sahf
out
xlat
aad
in
mov
int
into
into
ror
xchg
fstp
in
sbb
loop
mov
mov
ret
leave
mov
mov
mov
retf
xchg
cmps
xchg
icebp
mov
mov
loop
enter
ror
cld
mov
rol
mov
loopne
mov
xchg
repz
mov
icebp
int3
icebp
retf
iret
mov
cdq
mov
ror
mov
xchg
cmc
mov
leave
lahf
ret
mov
cmps
ret
fisttp
mov
cmps
mov
mov
mov
mov
shl
fimul
xor
push
movs
pop
mov
retf
adc
data16
or
outs
mov
call
dec
nop
and
cmp
push
mov
sub
jae
sbb
ficom
cmp
repnz
push
call
adc
call
xor
iret
mov
les
fisubr
xor
shr
mov
mov
in
pop
sbb
dec
leave
fucomip
or
in
cli
mov
mov
jle
mov
cmp
cmp
mov
push
ret
or
mov
daa
mov
jl
dec
fbstp
fsubr
or
ins
fimul
mov
stos
push
mov
xchg
pop
(bad)
fcmovb
xor
jae
jnp
sub
movs
cmp
lea
fisttp
sahf
daa
mov
cmp
aaa
aad
mov
pop
pushf
sar
pop
test
add
xchg
sbb
dec
nop
es
jo
xor
sbb
inc
shr
dec
mov
into
ret
push
cmps
or
sbb
cmp
cmp
repnz
(bad)
in
(bad)
mov
sti
fsub
icebp
xor
loop
mov
shr
ss
sub
xchg
mov
xchg
xchg
xchg
jmp
sbb
mov
jmp
(bad)
mov
jb
mov
lea
mov
lea
xchg
cmps
loopne
adc
mov
xchg
mov
xchg
xchg
lock
cmps
call
sar
mov
sti
scas
shl
mov
rcr
lds
mov
mov
cmps
mov
mov
xchg
mov
mov
retf
mov
add
mov
lods
mov
xchg
xchg
fidiv
ss
mov
neg
xchg
push
(bad)
mov
cmc
(bad)
(bad)
mov
fwait
mov
leave
hlt
xchg
mov
xchg
lock
xchg
mov
shr
mov
fs
xchg
mov
mov
movs
scas
pop
fwait
movs
cmps
popf
icebp
loope
xchg
cli
scas
leave
(bad)
jmp
daa
add
pop
daa
imul
push
jns
sbb
adc
das
adc
and
cmp
cmps
cmp
imul
dec
outs
inc
sub
cmp
or
mov
pop
and
cmp
sbb
adc
sub
push
sbb
jle
push
and
fild
dec
jno
push
cmovo
and
or
dec
mov
and
or
or
sbb
push
and
cmp
ds
pop
cmp
je
push
pop
(bad)
fmul
sub
push
push
and
or
cmps
out
cmp
push
cmp
js
and
or
pop
(bad)
retf
sub
dec
or
cmp
stos
sbb
or
xor
or
sub
into
pop
push
and
pop
wrmsr
pop
and
add
sbb
es
adc
push
adc
push
stos
iret
cs
bound
and
sbb
or
arpl
popa
push
push
xor
push
(bad)
push
pop
add
or
cmp
inc
jmp
xor
cmovb
ss
push
les
cmp
jae
or
inc
add
push
gs
pop
push
cmp
pop
cwde
lods
nop
inc
xor
pop
ins
push
push
dec
push
xor
inc
retf
test
or
pusha
push
inc
push
bound
add
pop
ret
mov
or
jae
or
sbb
arpl
cld
int3
add
ins
pop
inc
adc
inc
out
ror
jns
pop
outs
sbb
inc
sub
call
jge
pop
jno
pop
jp
aas
adc
xchg
mov
xor
bound
cmp
jnp
imul
inc
pop
cmp
dec
jl
pop
sub
lods
sti
push
or
push
imul
or
loop
pop
add
and
or
push
pop
das
arpl
or
js
outs
inc
and
test
ins
pop
inc
sub
add
pop
adc
lea
inc
inc
or
cmp
idiv
push
dec
inc
dec
sbb
push
cmp
je
mov
and
add
aaa
adc
stos
lea
add
cmps
inc
ins
and
cs
dec
and
jmp
call
mov
jp
adc
loop
dec
or
xor
sub
shl
add
or
test
xchg
dec
stc
into
fild
retf
jnp
aad
add
ds
add
add
jle
int
push
xor
rol
fwait
inc
ret
(bad)
xor
pop
lds
adc
fiadd
ret
mov
push
fbstp
inc
mov
call
mov
push
mov
aaa
hlt
adc
in
add
jmp
mov
shl
jae
in
inc
pop
inc
and
in
cmc
add
xlat
dec
int
test
cmp
shl
add
add
jno
adc
jb
jno
xor
cld
push
lds
ret
dec
cdq
jg
lods
push
lods
jge
addr16
sub
loope
sbb
pop
test
cmp
ds
not
fst
cmp
mov
cmp
lock
adc
cmp
jg
add
lds
push
fisub
pop
test
inc
add
out
ret
cmp
fst
mov
mov
sub
ret
xlat
inc
int3
jp
dec
cdq
pop
fiadd
adc
dec
xor
pop
repnz
mov
in
test
popa
pop
xor
inc
jmp
(bad)
fadd
dec
adc
sbb
push
sub
sbb
pop
jl
inc
bound
or
fstp
and
push
sbb
ret
dec
rcl
arpl
or
xor
(bad)
xor
add
jns
and
(bad)
xchg
xlat
cli
mov
ss
push
push
jle
add
jmp
mov
aas
sbb
jno
inc
push
pop
xor
sti
jmp
je
push
outs
push
add
(bad)
fdivrp
or
or
dec
pop
arpl
retf
iret
cwde
sbb
or
inc
sub
xor
xor
push
and
sub
or
fistp
push
dec
jno
pop
add
cmp
mov
clc
jmp
dec
cmp
sbb
or
int3
fiadd
jb
push
dec
pop
pop
outs
inc
(bad)
cld
cld
retf
xchg
cmp
aas
push
jno
outs
jbe
pusha
add
and
jg
gs
and
xchg
fucomip
leave
pop
add
sbb
xor
mov
vmread
add
dec
jge
add
and
jmp
dec
arpl
inc
jno
fst
sti
repz
add
or
bound
das
jmp
(bad)
jmp
add
dec
pop
sahf
stos
movs
les
jne
mov
(bad)
lock
adc
add
rol
sti
hlt
inc
pop
cld
mov
mov
push
inc
outs
dec
int3
cdq
(bad)
shr
call
xchg
pcmpgtd
mov
mov
xchg
shl
pop
xor
cdq
in
les
dec
push
arpl
cdq
shl
xchg
xchg
cmp
test
movs
iret
xchg
pop
movs
cdq
mov
div
int3
fsubr
push
outs
sub
xchg
mov
ror
das
dec
push
outs
jle
rcr
(bad)
(bad)
mov
dec
adc
lea
out
rol
pusha
imul
fstp
adc
call
cmps
mov
push
jo
movs
xlat
cmc
in
jmp
adc
inc
xchg
xchg
(bad)
or
push
xor
out
loope
mov
push
pop
mov
fwait
clc
aam
aam
xchg
dec
inc
lea
rcr
mov
and
out
jecxz
test
sub
outs
push
xchg
sub
pop
jb
dec
jl
mov
stos
(bad)
fst
sbb
push
mov
loop
fsub
add
call
mov
popa
cmp
jg
cld
nop
test
xchg
and
push
outs
cmp
clc
mov
xchg
loope
and
sbb
(bad)
xchg
rol
popf
out
in
pop
dec
xor
sar
cmps
cwde
fdivr
cmp
add
add
mov
test
les
inc
sub
inc
xlat
mov
clc
mov
mov
push
push
fdivp
mov
mov
xor
xor
cmp
ins
sub
stc
pushf
fucom
ret
stc
lahf
adc
adc
enter
or
push
pop
pop
(bad)
test
shl
mov
adc
(bad)
mov
repz
push
xor
pushf
test
lea
cmp
and
pop
out
mov
jmp
add
inc
in
mov
sbb
dec
imul
mov
js
add
dec
xchg
xchg
int
(bad)
addr16
xor
mov
inc
mov
xor
hlt
or
add
jmp
inc
mov
fwait
jp
in
lock
fisttp
sbb
fwait
push
fwait
pusha
call
in
imul
jmp
inc
rcr
frstor
jbe
mov
or
dec
adc
cdq
stos
or
xchg
sbb
(bad)
push
(bad)
sub
dec
sbb
jnp
out
(bad)
ret
xchg
push
imul
fist
into
cli
pop
icebp
dec
xlat
inc
std
inc
out
leave
popa
int
scas
dec
clc
mov
inc
loop
mov
or
loope
out
sub
cli
(bad)
dec
cmp
jnp
das
cli
scas
dec
enter
lods
dec
outs
popf
cmp
lods
inc
(bad)
jp
dec
mov
xchg
sar
mov
int
ins
std
jle
das
sar
lods
retf
or
sbb
jle
sub
int3
pop
jmp
lahf
pop
scas
in
inc
(bad)
ins
cwde
push
fstp
ret
dec
ret
call
mov
mov
push
lods
mov
sbb
popf
mov
out
das
lock
fs
push
jo
shl
out
loope
out
imul
jmp
mov
inc
jmp
loopne
fsubr
pop
fldcw
fmul
imul
test
sahf
fistp
cmp
nop
inc
sahf
jns
inc
scas
popf
imul
das
rcr
pushf
jl
fidivr
sbb
das
out
jnp
(bad)
mov
scas
mov
in
loopne
xchg
pushf
push
sbb
pop
xchg
mov
sti
ss
mov
push
or
adc
xor
data16
and
xchg
mov
xchg
gs
pop
dec
fld
mov
mov
xchg
retf
push
pop
jbe
data16
xor
in
loope
loop
mov
pop
popa
jae
or
push
cdq
out
jbe
xor
ja
dec
shl
stos
(bad)
lahf
adc
sbb
mov
int3
jmp
cld
shl
jp
pop
dec
pop
dec
test
mov
pop
jb
imul
retf
jno
jp
or
mov
xchg
fist
ss
jb
hlt
pushf
enter
cld
mov
push
jmp
sbb
cmc
ss
jle
ss
push
sub
scas
ficomp
lods
mul
ss
sub
jbe
pop
mov
cmc
and
fs
xor
neg
push
ja
aas
out
adc
jecxz
hlt
into
lods
cld
xor
imul
mov
fist
cmps
jge
jge
sbb
out
cdq
xchg
frstor
enter
jmp
cmc
popa
add
cmp
mov
jecxz
dec
cmp
fstp
out
loop
jmp
ins
push
jge
hlt
mov
xchg
cmp
pop
inc
push
cmp
inc
fld
fs
cmp
jl
jmp
dec
cmp
fucomi
jecxz
les
pop
clc
cmps
arpl
pop
out
(bad)
jmp
fsub
xor
stc
ins
out
sar
test
pop
cmp
es
sub
xchg
(bad)
out
jecxz
pop
jb
fcmovnb
cdq
push
mov
jmp
push
xchg
pop
push
leave
sub
mov
(bad)
push
push
fdivr
or
idiv
(bad)
lods
ins
sbb
sub
das
pop
fdiv
jmp
or
sub
test
shl
mov
ins
jle
sub
jmp
jnp
cwde
ficom
jo
dec
mov
cmp
or
fst
jmp
sti
ins
sub
jbe
mov
int
jmp
imul
mov
jmp
pop
jo
mov
mov
dec
jae
cmp
or
pop
push
jl
mov
rcr
sub
fiadd
pop
push
aad
xlat
je
lods
out
bound
call
int
or
add
test
shr
js
enter
pop
aad
(bad)
sbb
test
lahf
int
mov
sbb
fmul
daa
sbb
loope
mov
imul
movs
push
pop
loope
mov
dec
cmc
call
fldpi
mov
lock
(bad)
test
dec
adc
adc
neg
mov
cmp
out
fcmovne
fdivr
jo
mov
hlt
sub
cmp
xor
xchg
repnz
xor
loop
test
cmp
pop
cmp
cs
addr16
sahf
inc
mov
xor
iret
xchg
push
jecxz
sub
out
(bad)
ds
xchg
retf
sub
(bad)
sbb
cwde
dec
int3
test
push
mov
(bad)
fwait
and
addr16
adc
adc
sbb
test
int
je
and
push
add
and
xchg
xchg
xchg
adc
inc
mov
aam
cmps
ss
and
push
dec
int3
adc
(bad)
mov
dec
mov
loopne
push
jle
aaa
xlat
add
or
inc
inc
div
loopne
push
inc
adc
add
fs
out
mov
dec
add
mov
loopne
adc
xchg
and
int
sub
mov
mov
test
cs
and
les
push
loope
inc
cmp
mov
inc
mov
push
shl
repz
loope
aaa
icebp
ss
sbb
jae
cmps
jge
imul
lock
test
xlat
add
xor
mov
inc
outs
push
push
sub
or
push
div
sbb
jmp
call
add
cmps
dec
sbb
push
push
cmc
pusha
shr
test
ja
int
loope
aad
adc
adc
rcl
fsubr
pop
icebp
lahf
sar
mov
(bad)
fild
fisub
sub
imul
xchg
cwde
rcr
adc
inc
or
out
lds
fild
verw
xchg
out
and
mov
jecxz
jmp
or
ror
cwde
push
cld
xchg
in
hlt
mov
jo
inc
cmp
std
mov
rcr
inc
les
jmp
or
out
cmp
and
leave
clc
add
mov
xor
pushf
cmps
jbe
test
fsubp
mov
lods
cwde
mov
jno
iret
cmps
mov
jmp
repnz
scas
mov
loope
inc
movs
aam
cmps
test
xchg
mov
push
into
data16
pop
push
call
int3
cmc
iret
rcr
fldpi
mov
jmp
jg
(bad)
call
cli
fisub
popa
movs
mov
addr16
pusha
mov
mov
mov
push
(bad)
das
cmps
xlat
push
retf
xchg
into
sub
cmp
mov
scas
loopne
jb
stos
xor
sbb
push
or
imul
dec
(bad)
jnp
add
xchg
push
mov
pop
adc
sub
dec
push
ret
dec
inc
mov
mov
pop
adc
add
push
bound
rol
adc
movs
inc
pusha
cmp
cli
retf
(bad)
mov
dec
daa
push
adc
ja
inc
in
repnz
jb
push
adc
jo
xchg
imul
cmp
inc
ins
and
mov
shl
or
repnz
jge
adc
ja
jp
mov
daa
arpl
xchg
and
xchg
mov
in
inc
lahf
cmp
jb
rcl
add
xchg
ins
enter
xor
call
mov
xchg
mov
dec
add
and
mov
mov
mov
lods
mov
popa
push
cmp
enter
fadd
jae
xor
dec
in
lea
ins
lods
pop
ret
pop
dec
and
jp
in
(bad)
std
fcom
push
pop
popf
fldenv
das
pop
lods
ret
shl
jmp
mov
mov
mov
jae
xchg
cmp
(bad)
lds
mov
cmp
imul
adc
arpl
sub
and
mov
loopne
push
mov
es
mov
cmps
in
gs
out
loope
pop
or
dec
xor
push
das
adc
pop
les
fwait
je
inc
add
js
push
jp
cmp
es
push
xchg
mov
push
sbb
movs
test
out
or
in
cwde
hlt
jmp
or
dec
sub
add
imul
enter
jmp
dec
aam
sbb
cld
jnp
mov
or
(bad)
in
cmp
je
jge
std
jnp
push
pop
mov
cmp
pop
daa
cwde
inc
mov
sub
repnz
retf
fs
jecxz
jae
sub
int
imul
sbb
bound
jnp
jp
xchg
mov
or
inc
add
scas
rcr
xchg
in
jecxz
jmp
cmp
and
xor
mov
and
stos
cmp
or
(bad)
xor
pop
(bad)
sbb
fwait
and
fs
sub
scas
in
and
and
aaa
test
push
add
fwait
jmp
ficom
cli
je
pop
mov
add
arpl
jne
push
and
gs
dec
call
sub
sahf
jmp
xchg
push
mov
xchg
std
les
sbb
sahf
in
retf
dec
xchg
fcmovbe
mov
adc
mov
mov
cmc
jne
adc
es
adc
test
push
jp
call
push
and
or
(bad)
pop
aad
jmp
fwait
mov
pop
je
arpl
clc
pop
xchg
in
in
jne
movs
test
pop
pop
inc
outs
sbb
iret
and
aam
and
sbb
mov
das
retf
pop
lahf
aam
mov
dec
loope
arpl
sbb
mov
adc
push
sbb
mov
sbb
movs
or
and
test
mov
sub
fwait
into
fwait
das
cmp
xor
or
call
pop
in
sbb
mov
sbb
movs
and
cmp
sub
call
popa
pop
mov
mov
mov
retf
jbe
xchg
and
pop
scas
jl
ins
inc
aad
stc
or
sbb
jae
iret
jmp
push
imul
(bad)
jmp
mov
lahf
adc
daa
xchg
dec
or
mov
cmp
rol
add
lahf
fcomp
call
call
out
sub
jmp
dec
jo
jno
dec
push
in
(bad)
mov
jne
pop
fucomi
add
fmulp
cwde
iret
or
pop
mov
and
cmp
setp
mov
dec
add
out
or
rcr
fmul
push
ins
or
test
les
cmc
imul
xchg
fisttp
mov
sub
lahf
dec
loopne
scas
dec
or
pop
imul
pop
aaa
dec
xchg
dec
dec
mov
dec
jle
pop
add
jbe
mov
jl
cmp
enter
retf
clc
xchg
jb
call
fadd
lods
mov
dec
sub
(bad)
jmp
jbe
jb
ds
mov
out
dec
lods
fisubr
jmp
xor
ja
dec
adc
bound
and
mov
adc
scas
movs
push
ins
and
hlt
jns
sbb
pop
sbb
stc
or
test
retf
lods
in
push
test
add
movs
call
ror
and
daa
std
mov
(bad)
fmul
cmp
fstp
push
fsubr
push
dec
cmps
dec
or
or
mov
xor
jg
xchg
sbb
pop
jge
out
clc
dec
mov
mov
sbb
dec
aam
(bad)
fdiv
js
dec
add
xchg
cmc
out
xchg
dec
mov
add
iret
xor
(bad)
out
daa
cmp
or
mov
fs
and
or
mov
out
pop
sar
pop
fsub
ss
jmp
stc
retf
or
push
adc
mov
rcl
and
push
pop
es
dec
sbb
xchg
fiadd
pop
shr
imul
or
das
cmp
fiadd
sbb
xlat
jb
push
ffree
push
push
repz
daa
mov
cwde
pop
push
or
ds
enter
or
mov
sahf
lock
pinsrw
fisttp
neg
leave
push
mov
mov
sub
adc
or
mov
or
push
cld
or
les
clc
jl
pop
mov
cli
(bad)
in
jg
stc
cwde
out
jmp
outs
mov
imul
(bad)
cmp
pop
jmp
dec
mov
in
cmp
fisubr
ret
xor
pop
dec
fild
mov
xor
pusha
dec
mov
xchg
or
movs
fsubr
fucomi
call
fs
dec
movs
ss
sbb
mov
inc
ret
push
in
xchg
in
push
sub
fs
dec
jle
inc
(bad)
stc
adc
shr
mov
inc
aaa
mov
dec
inc
pop
inc
shl
fwait
xchg
xor
(bad)
jns
pop
and
es
mov
lea
dec
movs
je
mov
pusha
mov
std
cmp
mov
es
shr
arpl
(bad)
dec
scas
je
cdq
cwde
push
ins
mov
jo
sub
lahf
dec
mov
pusha
mov
ret
sbb
sbb
cmp
inc
add
push
mov
jnp
sbb
imul
mov
arpl
sub
inc
push
mov
mov
jle
adc
mov
(bad)
(bad)
leave
inc
and
pop
xchg
xchg
cld
add
je
dec
add
push
dec
mov
cmps
bound
jb
(bad)
pop
mov
in
(bad)
(bad)
fld
or
inc
xchg
bound
inc
ds
cmp
inc
jbe
jne
je
mov
rol
inc
test
ret
aad
mov
imul
lahf
ins
push
adc
xor
js
ret
ins
ins
jle
neg
pushf
out
mov
movs
inc
mov
jb
outs
dec
inc
jbe
jmp
push
jg
inc
add
jecxz
movs
xchg
xchg
mov
and
pop
movs
push
pslld
adc
push
sub
mov
in
cmps
push
jmp
add
bound
ret
loope
or
ins
mov
or
ins
cmp
fcomp
shl
pop
mov
ins
xor
fsub
xchg
mov
cmps
inc
outs
mov
pop
xchg
test
mov
and
pop
mov
inc
sbb
mov
xor
lods
push
cmp
leave
bound
sbb
pop
mov
sbb
in
bound
pop
adc
xchg
sub
jl
dec
inc
fs
push
lds
pop
cmp
dec
or
jno
inc
popa
inc
jge
push
inc
pop
cli
aam
sar
(bad)
in
jp
sbb
cmps
les
add
cld
jecxz
xchg
test
call
clc
out
ja
push
sub
mov
dec
(bad)
out
shl
add
es
imul
push
or
mov
mov
lock
in
dec
sub
test
jecxz
retf
(bad)
inc
stc
sbb
cmp
adc
(bad)
add
scas
scas
(bad)
dec
repnz
cwde
loop
leave
sub
dec
jb
sbb
out
ins
cwde
in
sub
jnp
ja
je
call
pop
enter
int3
jns
push
mov
call
pop
fistp
(bad)
jbe
dec
stc
jmp
jmp
cmp
in
fld
mov
std
es
jmp
jns
jmp
imul
movs
xor
hlt
cmp
sbb
sbb
cld
add
js
cmp
mov
jmp
clc
push
push
push
mov
pop
(bad)
les
dec
add
retf
pop
push
movs
in
rcl
pop
js
mov
(bad)
push
mov
pop
pusha
or
mov
pop
loope
and
imul
lahf
inc
into
mov
iret
sbb
and
cs
mov
test
cmp
xchg
in
popa
mov
(bad)
sbb
cld
ret
dec
shr
mov
mov
out
cwde
sbb
jno
xchg
push
sub
loope
lds
push
shr
xchg
add
loope
push
push
inc
inc
std
int3
daa
(bad)
icebp
ret
mov
pop
into
dec
int
xor
sub
jae
dec
scas
movs
int3
(bad)
scas
and
(bad)
sub
push
mov
fisubr
push
mov
shl
call
xchg
mov
cld
popf
scas
xor
xor
neg
sub
inc
imul
and
jno
(bad)
sub
add
push
jg
fcomip
cmp
std
or
mov
sar
pop
(bad)
(bad)
and
pop
xchg
cmp
jp
rcr
jg
ja
cmps
cs
mov
call
xchg
lods
and
inc
jecxz
sub
push
ret
retf
fnsave
fidivr
and
add
sar
mov
std
xor
test
icebp
retf
adc
xor
rcl
pop
mov
stos
es
mov
push
sbb
shl
jge
adc
test
dec
jb
cmps
outs
retf
jno
imul
std
push
jne
hlt
push
push
inc
cmp
push
sbb
push
sub
cmps
sub
sti
push
movs
adc
push
retf
jb
jns
pop
mov
je
fcom
aam
and
and
out
ror
mov
cli
repnz
ror
ja
inc
fucomip
cmp
fsub
mov
mov
ret
inc
fbld
dec
ficomp
stos
rol
push
fstp
pop
out
xchg
sbb
test
fst
pop
xchg
nop
xor
inc
push
xchg
rcl
push
shl
mov
inc
jmp
ret
(bad)
adc
sbb
ror
sbb
int3
lods
and
jge
rol
cld
or
fmulp
adc
push
sbb
cli
mov
int
cmp
jne
dec
(bad)
mov
inc
shl
lahf
push
fisttp
and
repz
cmp
into
fisub
fcmovne
cwde
int3
movs
jae
fild
sahf
fmul
hlt
mov
out
fistp
and
enter
into
(bad)
jmp
aaa
mov
repnz
push
pop
sub
fcomp
(bad)
or
jecxz
in
int3
jp
xchg
retf
repz
push
lea
les
inc
aad
out
(bad)
sbb
dec
icebp
cwde
xlat
jo
cmp
iret
enter
ficomp
mov
cmp
(bad)
cmp
xchg
adc
jge
rol
inc
fadd
mov
sub
in
aas
or
outs
cdq
or
pop
sub
or
cmp
push
lahf
enter
inc
repz
push
repz
and
xchg
in
fstp
pop
xchg
in
adc
inc
mov
add
xchg
iret
or
mov
mov
call
sub
pop
pop
push
jo
add
jbe
jb
inc
mov
inc
pop
push
in
push
adc
movs
push
daa
mov
push
and
mov
lods
or
jb
inc
adc
outs
in
arpl
test
push
xor
push
adc
mov
jnp
rcl
out
jecxz
push
xchg
mov
jb
test
mov
sahf
mov
es
push
mov
jecxz
bound
mov
push
ja
mov
outs
jg
pop
jge
repz
sbb
daa
(bad)
std
loopne
dec
ret
adc
ret
jbe
dec
out
xor
pop
mov
jecxz
inc
push
mov
test
arpl
neg
mov
push
mov
dec
pop
repnz
sbb
ins
xchg
push
cmp
movs
sub
mov
in
enter
lods
pop
arpl
add
ins
mov
lea
xchg
adc
inc
jb
ds
gs
or
xchg
xor
push
imul
xchg
mov
inc
mov
pop
inc
mov
mov
mov
lods
mov
sub
in
and
jb
pop
mov
xor
mov
add
inc
nop
aas
and
pop
inc
jb
adc
push
aad
jne
jne
inc
and
xchg
push
xor
inc
bound
icebp
mov
mov
push
dec
push
inc
mov
shl
pop
or
je
inc
jnp
cdq
and
cmp
ja
es
mov
xor
xor
jmp
mov
test
push
sub
mov
adc
pop
sub
ins
pop
push
xor
sbb
sbb
adc
hlt
movs
mov
push
jg
imul
adc
imul
fld
dec
adc
jnp
inc
dec
adc
cmp
adc
push
and
sub
jnp
mov
repnz
pop
movs
(bad)
xlat
daa
outs
sbb
dec
(bad)
ins
je
pop
ins
bound
stc
call
or
xor
xchg
out
arpl
jae
inc
push
cmp
xchg
sbb
cld
test
cmp
ret
jae
inc
out
push
call
jo
sbb
pop
inc
push
cld
es
xchg
cmp
pop
adc
xor
or
ret
adc
sbb
out
jne
push
fadd
jg
cs
mov
add
push
push
imul
push
sbb
(bad)
jnp
daa
fwait
sub
and
and
or
jo
daa
and
jge
push
pop
cmp
cwde
aas
dec
jle
sub
sbb
imul
and
mov
sub
fwait
in
ins
in
ins
mov
push
in
(bad)
dec
stc
ins
iret
sbb
mov
(bad)
js
xor
test
mov
mov
test
inc
sbb
and
outs
aam
int3
dec
jnp
adc
or
mov
add
cmp
ror
xor
outs
mov
mov
sub
ins
adc
dec
popf
mov
sar
cmp
mov
mov
add
aam
inc
lds
nop
adc
(bad)
loop
or
pop
mov
daa
cwde
sahf
jne
and
cli
int
ret
test
cmc
jns
inc
dec
daa
add
imul
or
jno
rcl
test
xor
push
cdq
in
xchg
mov
fld
xlat
loopne
icebp
and
mov
jmp
xor
cli
add
retf
sti
retf
jnp
sub
iret
jb
adc
mov
push
add
and
stos
mov
dec
pop
iret
fwait
in
push
or
push
pop
jle
imul
mov
imul
adc
xchg
ja
jns
push
adc
jge
cli
mov
xor
sub
add
or
sbb
add
cmp
sbb
xchg
movq
or
and
xor
mov
xchg
inc
push
sti
adc
mov
inc
mov
cdq
test
push
pop
dec
(bad)
icebp
sub
cmp
cmc
adc
pop
pop
sbb
mov
push
cmp
and
dec
aas
add
pop
dec
arpl
sub
xor
mov
pop
jae
sbb
pop
dec
les
push
xchg
push
mov
mov
dec
ret
push
pop
or
(bad)
dec
or
or
dec
int
or
push
test
inc
enter
mov
les
dec
add
ret
dec
or
pop
int3
inc
into
inc
or
(bad)
dec
or
ret
test
ret
dec
int
mov
mov
enter
or
cmc
dec
test
test
lds
dec
add
pop
mov
dec
ror
mov
retf
inc
retf
inc
or
les
or
ror
add
or
pop
int
int3
inc
or
jne
mov
mov
leave
inc
enter
or
test
test
les
dec
pop
mov
mov
dec
ror
or
dec
ret
dec
add
ret
pop
mov
int3
inc
iret
inc
jne
leave
inc
mov
mov
retf
dec
xchg
mov
mov
dec
ror
or
add
ret
or
inc
xor
push
bound
movs
cmp
fs
push
scas
outs
call
mov
(bad)
icebp
enter
mov
inc
ret
push
cmp
jns
push
mov
push
and
mov
dec
fwait
mov
(bad)
out
xor
push
sbb
xor
call
pop
leave
pop
or
and
dec
sub
lock
test
inc
icebp
inc
arpl
pop
mov
jmp
push
xchg
mov
sar
in
test
push
sbb
outs
mov
sar
repz
ja
push
inc
dec
in
(bad)
sbb
retf
jae
(bad)
les
les
sbb
sahf
jo
(bad)
dec
or
pop
or
mov
add
jge
cmc
rcr
gs
nop
pushf
int3
neg
pop
sub
cli
pop
push
into
sbb
(bad)
pushf
(bad)
mov
pop
adc
sbb
adc
fstp
sub
adc
ret
lods
rcl
and
pushf
inc
adc
je
mov
cmp
popf
loope
iret
inc
cmp
retf
out
shr
je
push
mov
sbb
daa
add
cmp
mov
jb
popf
add
xor
mov
mov
ss
lods
and
dec
inc
fisttp
xor
ret
and
lods
sbb
xor
cmps
retf
leave
cmc
es
call
mov
nop
ds
outs
js
xchg
jmp
clc
mov
(bad)
(bad)
cmp
(bad)
pop
push
xchg
fs
push
jae
add
ins
fdecstp
xchg
add
xor
pop
out
lahf
cmp
pop
in
test
jg
xchg
cmps
sbb
std
es
push
mov
jg
call
jecxz
in
sbb
into
stos
pop
pop
ffreep
pop
adc
iret
jp
push
int3
out
xchg
ss
cmps
xchg
xor
jb
push
xchg
stos
mov
adc
and
sub
push
retf
sbb
or
cdq
arpl
xlat
addr16
gs
ins
les
fisub
or
xchg
sub
ja
or
xor
push
adc
(bad)
xchg
ins
loop
repnz
aam
es
mov
pop
(bad)
cmp
mov
(bad)
mov
push
or
inc
retf
fs
xchg
adc
pop
js
ins
xor
retf
stos
call
es
dec
out
fisubr
ror
stos
add
adc
in
retf
in
in
fs
mov
movs
out
jecxz
ins
ss
data16
inc
xchg
jns
fnstenv
add
adc
std
xchg
or
test
(bad)
cs
sub
cmps
pop
xchg
(bad)
xor
lods
movs
cmovs
gs
or
pop
loop
clc
loop
mov
test
push
and
leave
bnd
jae
add
cmp
or
int3
cmp
call
cmps
outs
(bad)
mov
in
dec
or
(bad)
sbb
pop
into
cmps
xchg
cmc
daa
push
and
scas
push
push
je
movs
xor
dec
mov
pop
sub
push
cmp
xlat
push
popfw
nop
xor
addr16
add
adc
pop
ins
pop
jns
or
stos
dec
daa
mov
add
push
dec
ret
cwde
adc
push
cmps
pop
lods
xor
pop
pop
scas
inc
repz
(bad)
dec
and
icebp
pop
xor
push
ins
rcl
jbe
adc
inc
jmp
cmp
xor
inc
mov
aad
nop
jnp
sahf
fwait
sbb
lds
push
js
stos
push
leave
clc
fwait
scas
pop
pushf
call
jb
xor
neg
adc
sbb
enter
jae
xchg
adc
sbb
adc
jnp
rol
push
pop
xlat
aaa
sub
imul
xchg
push
out
enter
pop
xchg
test
jmp
shl
leave
pop
xchg
mov
sub
cmp
test
push
aaa
xor
xchg
xchg
push
les
sub
mov
repnz
add
ror
pop
sahf
(bad)
fdiv
pop
or
lock
pop
sbb
xchg
mov
mov
sbb
mov
xchg
inc
jo
(bad)
or
ins
repnz
and
(bad)
jle
add
mov
es
inc
loop
cmp
jmp
xor
test
add
in
add
push
mov
inc
dec
mov
adc
jmp
dec
imul
inc
mov
or
call
sbb
lea
push
lea
call
mov
mov
mov
mov
jmp
xor
xor
mov
mov
mov
or
jne
mov
mov
mov
mov
mov
or
jne
mov
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
sub
lea
mov
xor
mov
push
mov
call
mov
xor
mov
lea
push
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
push
push
mov
mov
mov
call
push
lea
push
call
push
mov
call
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
push
sub
lea
mov
xor
mov
push
mov
call
mov
xor
mov
lea
push
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
push
push
mov
mov
mov
call
push
lea
push
call
push
mov
call
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
push
lea
sub
mov
xor
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
lea
push
mov
call
mov
mov
xor
pop
call
add
leave
ret
mov
mov
cmp
ja
je
cmp
ja
je
cmp
ja
je
cmp
ja
jmp
xor
jmp
push
jmp
push
jmp
push
jmp
cmp
ja
je
cmp
ja
je
sub
je
dec
je
dec
dec
je
dec
jne
push
jmp
push
jmp
sub
je
dec
je
dec
dec
je
dec
dec
jne
push
jmp
push
jmp
push
jmp
add
cmp
ja
jmp
push
jmp
cmp
ja
je
cmp
ja
je
sub
je
dec
je
dec
je
dec
je
dec
je
dec
dec
jne
push
jmp
sub
je
dec
dec
je
sub
je
dec
je
dec
dec
jne
push
pop
ret
mov
cmp
ja
je
cmp
ja
je
sub
je
sub
je
dec
je
dec
je
dec
jne
push
jmp
sub
je
dec
je
dec
je
sub
je
jmp
mov
cmp
ja
je
sub
je
sub
je
sub
je
sub
je
sub
jne
push
jmp
sub
je
sub
je
dec
dec
je
sub
je
jmp
sub
je
dec
je
dec
je
dec
dec
je
xor
inc
jmp
lea
inc
xchg
inc
add
xchg
inc
add
inc
add
inc
add
cwde
inc
add
inc
add
cdq
inc
add
cdq
inc
add
inc
add
cwde
inc
add
cdq
inc
add
inc
add
inc
add
inc
add
inc
add
cwde
inc
add
cwde
inc
add
cwde
inc
add
cwde
inc
add
inc
add
cwde
inc
add
inc
add
cwde
inc
add
cwde
inc
add
cwde
inc
add
ret
push
mov
call
mov
xor
cmp
je
cmp
je
mov
cmp
mov
je
mov
add
mov
call
push
lea
call
lea
push
lea
mov
call
mov
cmp
mov
jne
push
lea
call
mov
mov
push
add
push
lea
push
call
push
push
push
push
call
add
lea
call
mov
add
call
xor
inc
jmp
xor
call
ret
push
mov
call
push
call
pop
mov
mov
xor
cmp
mov
je
push
push
push
call
or
mov
push
lea
push
call
int3
cmp
je
push
push
push
call
push
call
ret
push
mov
push
push
mov
test
jne
call
mov
mov
call
mov
xor
cmp
setne
mov
jmp
mov
jmp
mov
cmp
jne
cmp
jne
mov
cmp
jne
mov
cmp
je
cmp
je
jmp
mov
cmp
ja
cmp
jbe
add
mov
cmp
jne
mov
test
jne
xor
pop
pop
pop
ret
push
mov
call
mov
mov
and
or
push
push
push
call
mov
xor
cmp
jne
xor
jmp
mov
cmp
je
mov
mov
cmp
jl
cmp
jle
cmp
jne
mov
jmp
mov
mov
xor
cmp
setne
mov
jmp
mov
xor
cmp
mov
setne
sub
mov
mov
je
dec
je
dec
je
dec
jne
mov
lea
push
push
cmp
push
mov
mov
je
push
call
jmp
call
jmp
mov
cmp
mov
je
push
call
jmp
call
and
mov
jmp
mov
lea
cmp
mov
push
mov
je
push
call
jmp
call
mov
xor
cmp
sete
mov
jmp
lea
push
call
and
cmp
mov
je
push
push
lea
push
push
call
push
call
add
inc
mov
xor
push
pop
mul
seto
neg
or
push
call
mov
mov
pop
lea
shl
push
mov
push
shl
push
push
call
mov
mov
add
shl
lea
mov
mov
mov
lea
lea
push
push
lea
push
push
push
mov
call
cmp
mov
movsx
mov
je
push
call
pop
jmp
mov
mov
test
je
push
push
call
mov
call
mov
mov
ret
mov
mov
test
jge
mov
test
je
mov
cmp
je
mov
mov
mov
call
ret
mov
mov
jmp
mov
test
jne
ret
mov
ret
cmp
je
mov
mov
jmp
xor
ret
cmp
jne
push
push
call
push
call
ret
mov
mov
jmp
push
mov
test
je
call
mov
push
mov
push
mov
call
jmp
push
push
call
pop
ret
cmp
jne
push
push
call
ret
mov
mov
jmp
cmp
jne
push
push
call
ret
mov
mov
jmp
push
mov
test
jne
call
push
call
test
jne
cmp
je
mov
mov
pop
jmp
cmp
jne
push
push
call
pop
ret
cmp
jne
push
call
ret
mov
mov
jmp
push
mov
cmp
jne
push
push
push
push
push
push
call
jmp
push
mov
push
mov
push
push
call
pop
ret
cmp
jne
push
push
call
ret
mov
mov
jmp
cmp
jne
push
call
ret
mov
mov
jmp
cmp
jne
push
push
call
ret
mov
mov
jmp
cmp
jne
push
call
push
call
ret
mov
mov
jmp
push
mov
mov
mov
test
je
mov
lea
push
push
push
push
push
push
call
pop
ret
cmp
je
push
push
push
push
push
push
call
add
ret
cmp
je
mov
mov
jmp
push
push
call
ret
push
mov
mov
test
je
push
push
push
push
call
test
je
mov
pop
ret
mov
call
test
je
test
jne
xor
pop
ret
xor
inc
pop
ret
cmp
push
mov
jne
push
add
call
jmp
push
mov
call
test
je
mov
test
je
cmp
jne
and
mov
mov
pop
ret
mov
mov
mov
mov
cmp
je
call
mov
mov
ret
mov
mov
mov
cmp
je
call
mov
mov
ret
mov
ret
mov
mov
test
jne
call
mov
mov
mov
ret
mov
mov
test
jne
call
mov
mov
add
ret
mov
mov
test
jne
call
mov
mov
mov
ret
push
mov
cmp
jne
mov
test
je
mov
push
push
push
push
push
push
push
call
pop
ret
mov
mov
pop
jmp
push
mov
test
je
cmp
jne
push
call
mov
push
add
call
test
je
cmp
je
mov
mov
push
push
mov
call
pop
ret
jmp
push
mov
push
push
push
mov
cmp
jne
xor
jmp
test
push
push
jne
mov
push
push
jmp
mov
call
test
je
mov
call
test
je
mov
call
test
je
mov
push
push
call
push
call
mov
test
jne
cmp
je
mov
mov
jmp
mov
mov
mov
add
call
test
mov
je
mov
lea
push
add
call
cmp
mov
je
cmp
jmp
mov
test
je
mov
jmp
mov
test
je
call
cmp
je
mov
test
je
mov
cmp
je
cmp
jne
jmp
test
mov
jne
xor
jmp
cmp
jne
mov
add
call
mov
mov
lea
push
add
call
mov
mov
call
cmp
je
test
je
test
jne
test
je
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
push
mov
je
push
push
push
push
call
cmp
mov
je
mov
push
push
add
call
mov
mov
mov
lea
push
add
call
jmp
mov
lea
add
push
call
mov
mov
mov
call
test
jne
mov
cmp
je
push
push
push
push
call
cmp
je
cmp
jne
mov
mov
mov
lea
push
add
call
jmp
mov
lea
add
push
call
mov
cmp
mov
je
push
push
push
push
call
cmp
je
mov
call
test
jne
cmp
jne
jmp
mov
push
push
push
push
call
pop
pop
pop
leave
ret
push
push
mov
push
mov
push
mov
call
mov
jmp
cmp
je
lea
cmp
je
mov
push
call
dec
test
jg
pop
mov
pop
pop
ret
push
mov
call
mov
cmp
jne
push
push
push
call
jmp
call
push
lea
call
mov
mov
and
lea
push
call
push
push
push
push
call
add
push
call
mov
add
mov
call
mov
call
ret
push
mov
push
push
push
lea
push
call
mov
push
call
mov
leave
ret
push
mov
sub
push
push
lea
call
lea
push
lea
call
jmp
mov
call
shr
test
jne
mov
cmp
jne
lea
push
mov
call
mov
test
jne
lea
jmp
call
lea
mov
push
call
mov
pop
leave
ret
push
mov
push
push
push
mov
push
mov
call
push
lea
push
mov
call
jmp
mov
mov
call
shr
test
jne
mov
lea
push
call
lea
cmp
je
mov
push
call
cmp
jne
mov
pop
leave
ret
push
mov
push
push
mov
test
je
lea
mov
test
mov
mov
jne
xor
leave
ret
mov
test
je
mov
cmp
je
lea
push
call
mov
test
jne
jmp
call
int3
push
mov
sub
mov
test
mov
jne
leave
ret
push
push
add
push
mov
mov
mov
jmp
mov
mov
test
je
mov
jmp
mov
test
je
call
cmp
je
mov
test
je
mov
mov
cmp
je
mov
lea
push
call
mov
test
jne
xor
pop
pop
pop
leave
ret
mov
jmp
push
mov
sub
push
push
mov
push
push
lea
call
xor
cmp
je
mov
lea
push
call
mov
test
je
mov
call
shr
test
je
lea
push
mov
call
push
lea
call
mov
test
je
test
jne
inc
push
call
test
pop
jne
lea
push
mov
call
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
push
lea
call
xor
mov
test
je
mov
call
shr
test
jne
mov
lea
push
call
jmp
lea
push
mov
call
push
lea
call
cmp
je
test
jne
inc
mov
test
je
push
call
test
pop
jne
lea
push
mov
call
pop
pop
leave
ret
push
mov
push
push
push
mov
cmp
je
cmp
je
push
call
jmp
call
test
je
mov
add
mov
lea
mov
call
mov
test
je
mov
jmp
xor
pop
leave
ret
push
mov
push
push
push
mov
cmp
je
cmp
je
push
call
jmp
call
test
je
mov
add
mov
lea
mov
call
mov
test
je
mov
jmp
xor
pop
leave
ret
mov
ret
mov
ret
mov
test
je
mov
push
call
ret
push
mov
mov
test
push
mov
je
cmp
je
mov
mov
push
call
mov
pop
pop
ret
mov
cmp
jne
and
cmp
jne
and
ret
push
mov
push
mov
jmp
mov
xor
cmp
sete
push
push
mov
call
inc
cmp
jle
pop
pop
ret
push
mov
mov
lea
push
push
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
mov
push
mov
push
lea
push
push
call
test
jne
test
je
and
xor
jmp
push
push
push
lea
call
mov
jmp
push
call
mov
movzx
push
call
test
pop
jne
movzx
cmp
je
cmp
jne
push
call
mov
movzx
push
call
test
pop
pop
pop
je
mov
test
je
cmp
push
lea
push
push
je
call
jmp
call
add
mov
xor
pop
call
leave
ret
push
mov
call
test
je
push
mov
push
call
ret
push
mov
sub
mov
xor
mov
cmp
push
push
push
lea
push
push
mov
je
call
jmp
call
push
call
mov
add
lea
push
push
mov
call
mov
xor
pop
call
leave
ret
push
mov
call
test
je
push
mov
call
ret
xor
cmp
setne
ret
push
mov
jmp
push
call
cmp
je
push
push
call
mov
test
jne
mov
pop
ret
push
mov
push
add
call
ret
mov
add
call
ret
mov
mov
mov
mov
mov
xor
ret
push
mov
mov
test
je
push
mov
test
push
mov
je
mov
push
call
test
mov
mov
je
mov
push
call
pop
pop
xor
pop
ret
mov
ret
mov
ret
push
push
push
mov
push
push
call
mov
mov
pop
ret
mov
ret
push
mov
call
mov
mov
mov
xor
cmp
mov
jne
cmp
mov
jbe
mov
mov
push
call
inc
cmp
jb
or
mov
call
call
ret
push
mov
push
call
test
je
mov
mov
push
call
xor
inc
pop
ret
push
mov
push
add
call
ret
mov
add
call
ret
mov
ret
mov
and
mov
ret
xor
cmp
setne
ret
push
mov
call
push
and
call
call
ret
xor
cmp
je
mov
call
push
call
pop
push
push
call
int3
push
mov
call
push
and
push
call
call
ret
xor
cmp
je
mov
call
push
call
pop
push
push
call
int3
push
push
mov
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
mov
push
rep
mov
or
repnz
not
sub
mov
mov
mov
mov
mov
shr
rep
mov
xor
and
mov
rep
mov
or
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
call
test
je
mov
xor
mov
rep
mov
mov
rep
call
pop
xor
pop
ret
call
mov
mov
mov
mov
mov
push
mov
push
push
push
mov
mov
mov
mov
call
add
call
pop
xor
pop
ret
nop
icebp
call
mov
mov
pop
ret
push
push
mov
call
xor
test
setne
mov
pop
mov
ret
push
push
push
push
call
push
call
ret
push
mov
call
mov
mov
lea
xor
cmp
jne
mov
push
call
cmp
je
cmp
jne
mov
call
mov
mov
push
call
or
mov
jmp
mov
call
mov
ret
mov
xor
cmp
jne
mov
mov
mov
mov
add
call
mov
push
call
cmp
je
mov
mov
mov
test
jne
push
or
mov
call
push
call
mov
test
je
mov
push
push
call
test
je
test
jne
xor
cmp
setne
call
ret
jmp
push
mov
call
mov
mov
push
mov
push
lea
xor
push
mov
mov
push
mov
call
cmp
je
cmp
jne
call
xor
cmp
setne
mov
cmp
jne
call
call
push
mov
mov
push
call
mov
or
jmp
mov
call
mov
ret
mov
xor
mov
cmp
jne
xor
jmp
mov
cmp
je
push
push
push
push
push
push
call
jmp
push
mov
push
push
push
push
push
push
push
push
push
call
xor
test
setge
cmp
mov
je
push
call
cmp
pop
je
mov
mov
mov
mov
jmp
xor
push
lea
call
mov
cmp
je
push
lea
mov
call
mov
mov
mov
cmp
je
mov
jmp
mov
cmp
je
mov
push
call
mov
call
ret
push
mov
sub
mov
xor
mov
push
push
mov
mov
and
push
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
lea
push
push
movs
movs
push
lea
push
mov
movs
push
push
movs
call
mov
pop
pop
xor
pop
call
leave
ret
push
mov
call
xor
cmp
je
cmp
jne
push
push
push
push
call
jmp
push
mov
mov
push
push
push
call
add
ret
push
mov
mov
test
push
je
mov
push
push
call
mov
test
jne
push
mov
mov
call
test
je
mov
mov
mov
pop
pop
ret
push
mov
call
test
je
push
push
push
push
call
ret
push
mov
call
push
mov
call
xor
cmp
jne
xor
jmp
cmp
jne
push
push
push
push
call
jmp
lea
push
push
mov
push
mov
call
mov
cmp
jne
xor
inc
call
ret
mov
call
and
mov
ret
mov
add
push
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
add
push
call
ret
push
push
mov
call
mov
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
push
mov
test
push
mov
je
push
mov
call
test
je
push
push
mov
push
push
push
push
push
push
push
push
push
call
jmp
xor
pop
pop
pop
ret
push
mov
call
mov
mov
mov
mov
test
mov
mov
je
lea
mov
lea
push
mov
call
mov
test
je
mov
test
je
cmp
jne
push
mov
call
mov
call
push
call
pop
mov
test
jne
cmp
je
lea
mov
call
mov
test
je
mov
call
push
call
pop
cmp
jne
lea
call
lea
push
call
and
lea
push
push
mov
call
test
jl
push
pop
lea
mov
lea
push
rep
call
test
je
push
push
call
test
je
push
call
pop
mov
mov
push
call
lea
mov
call
lea
mov
call
or
mov
call
call
ret
push
mov
push
push
mov
test
mov
je
push
lea
lea
push
mov
call
mov
mov
test
je
cmp
je
and
mov
mov
mov
lea
push
push
push
call
mov
test
je
push
mov
push
call
mov
mov
push
call
cmp
jne
pop
leave
ret
push
mov
sub
push
push
lea
push
mov
call
push
mov
push
mov
push
mov
push
sub
push
mov
lea
push
lea
push
push
mov
push
mov
push
sub
push
mov
mov
mov
call
pop
leave
ret
push
mov
push
mov
test
push
push
mov
je
lea
lea
push
mov
call
mov
test
je
cmp
je
mov
mov
call
cmp
je
cmp
jne
xor
pop
pop
leave
ret
call
mov
jmp
push
mov
push
mov
test
mov
je
push
lea
lea
push
mov
call
mov
mov
test
je
push
mov
call
cmp
jne
pop
leave
ret
push
mov
push
mov
test
mov
je
push
push
lea
lea
push
mov
call
mov
mov
test
je
push
add
push
push
call
mov
mov
mov
add
push
push
push
call
cmp
jne
pop
pop
leave
ret
push
mov
mov
and
push
mov
cmp
push
push
ja
cmp
jae
cmp
je
cmp
je
cmp
jbe
cmp
jbe
cmp
je
xor
pop
pop
pop
pop
ret
cmp
jb
cmp
jbe
cmp
jbe
cmp
jbe
cmp
jbe
cmp
ja
mov
test
je
cmp
je
mov
push
jmp
mov
test
jne
mov
test
mov
je
lea
lea
push
mov
call
mov
mov
test
je
cmp
je
mov
movsx
shr
movsx
push
add
push
push
call
test
jne
cmp
jne
jmp
mov
test
je
mov
push
push
mov
push
push
push
call
neg
sbb
inc
jmp
push
mov
push
push
mov
push
xor
cmp
mov
mov
je
push
mov
push
lea
lea
push
mov
call
mov
mov
cmp
je
cmp
je
mov
mov
mov
mov
lea
push
push
push
call
mov
cmp
je
cmp
jne
xor
jmp
mov
mov
push
push
push
push
push
push
push
push
push
push
push
call
test
jl
mov
mov
mov
push
call
mov
cmp
jne
pop
pop
mov
pop
leave
ret
push
mov
sub
push
mov
push
push
xor
cmp
mov
mov
jne
xor
jmp
mov
cmp
mov
mov
mov
je
lea
push
lea
call
mov
mov
xor
cmp
mov
mov
jbe
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
mov
test
mov
je
lea
push
lea
call
mov
mov
jmp
and
jmp
mov
mov
shl
cmp
je
cmp
jne
mov
test
je
mov
push
push
jmp
push
push
call
push
mov
push
call
mov
test
pop
pop
jne
mov
mov
test
je
mov
mov
push
push
call
mov
push
call
test
pop
je
mov
mov
and
mov
mov
mov
jmp
xor
push
call
test
je
mov
mov
add
cmp
mov
push
je
push
call
jmp
call
mov
mov
inc
cmp
mov
jb
xor
inc
pop
pop
pop
leave
ret
push
mov
call
mov
mov
xor
xor
test
mov
mov
mov
mov
mov
mov
je
mov
xor
push
pop
mul
seto
neg
or
push
call
mov
mov
pop
mov
mov
xor
cmp
je
lea
push
lea
call
mov
cmp
je
mov
mov
mov
push
call
mov
mov
mov
inc
mov
jmp
push
call
pop
mov
mov
cmp
mov
je
push
push
call
jmp
xor
or
jmp
mov
mov
ret
mov
mov
xor
cmp
jl
mov
add
mov
jmp
cmp
je
cmp
jbe
mov
mov
push
call
inc
cmp
jb
mov
call
ret
push
mov
sub
push
push
lea
push
mov
call
push
mov
push
mov
push
mov
push
sub
push
mov
lea
push
lea
push
push
mov
mov
push
sub
push
mov
mov
mov
call
pop
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
mov
mov
call
mov
xor
push
lea
mov
mov
mov
call
push
lea
mov
call
or
or
mov
mov
mov
mov
mov
mov
mov
mov
call
ret
push
sub
lea
mov
xor
mov
push
mov
call
mov
xor
mov
mov
mov
cmp
mov
je
cmp
jne
push
lea
call
test
jne
push
lea
call
test
jne
mov
jmp
lea
lea
push
push
push
call
lea
push
lea
mov
call
mov
mov
mov
mov
movzx
mov
movzx
mov
movzx
mov
movzx
mov
mov
cmp
mov
mov
jge
neg
mov
push
lea
call
push
push
mov
call
mov
mov
imul
cdq
idiv
add
push
mov
mov
call
push
push
lea
push
call
test
jge
mov
lea
mov
call
mov
add
call
or
lea
mov
call
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
push
mov
call
mov
mov
lea
cmp
ja
movzx
jmp
mov
or
mov
xor
inc
jmp
mov
and
jmp
mov
mov
mov
jmp
cmp
jne
push
lea
call
mov
push
push
push
push
call
push
call
push
mov
call
lea
mov
call
cmp
mov
mov
jne
mov
jmp
mov
mov
jmp
cmp
jne
mov
call
push
mov
call
cmp
je
mov
mov
mov
mov
push
call
mov
mov
jmp
mov
mov
mov
call
neg
sbb
mov
jmp
mov
mov
call
mov
jmp
call
push
lea
call
and
mov
lea
mov
call
mov
add
mov
call
jmp
call
push
lea
call
push
lea
mov
call
jmp
xor
call
ret
nop
sbb
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
add
add
add
add
add
add
push
mov
call
mov
mov
and
and
mov
xor
push
pop
mul
seto
neg
or
push
call
pop
mov
jmp
mov
call
mov
ret
mov
cmp
jne
mov
jmp
mov
mov
xor
call
ret
push
mov
push
mov
xor
cmp
jne
mov
jmp
cmp
je
mov
cmp
sub
std
out
fnstcw
cmp
das
in
push
xor
loope
nop
btc
jg
jg
sub
and
push
ror
dec
out
push
wbinvd
lahf
gs
call
jmp
cmp
mov
outs
loope
aaa
mov
out
mov
push
cdq
pop
in
test
push
bound
lock
and
aam
das
imul
pop
test
sbb
inc
sbb
mov
jmp
cli
sbb
test
fldenv
jmp
sub
pop
push
les
xor
push
imul
jle
pop
test
cmp
dec
in
aas
pushf
data16
pop
inc
clc
fxch
in
lahf
adc
jmp
adc
mov
(bad)
popf
mov
jge
(bad)
cmp
lock
dec
aam
or
or
pushf
sub
stos
imul
into
fmul
dec
stos
mov
aaa
imul
cmp
int
popf
mov
stos
(bad)
mov
into
imul
int3
ss
fsubr
gs
iret
or
inc
adc
inc
xor
in
xchg
mov
(bad)
push
mov
sbb
call
loop
cmp
dec
out
xor
inc
sahf
push
out
gs
shl
jmp
mov
and
dec
cwde
dec
sub
(bad)
pop
addr16
mov
pop
jmp
or
daa
retf
cwde
pop
cwde
mov
pop
in
fwait
movs
mov
jle
push
jl
int
add
mov
psrlw
mov
outs
fistp
adc
jl
push
sbb
xor
retf
pop
mov
mov
lahf
popa
call
ficom
(bad)
std
sar
sub
int3
cmp
out
jnp
iret
fldcw
cmp
pop
loope
stc
iret
jnp
xor
xchg
cmp
rol
dec
out
fmul
out
xor
dec
mov
mov
fcom
jmp
adc
mov
jne
pop
(bad)
and
fwait
pusha
bound
push
aaa
nop
aam
fisttp
push
mov
push
add
retf
mov
mov
in
aas
retf
shl
xchg
jg
cmp
mov
fst
or
push
mov
sbb
lods
in
in
call
call
ror
mov
fdivr
inc
pushf
fild
jle
(bad)
fimul
not
mov
pop
ret
int3
push
sub
inc
cmp
(bad)
jmp
mov
dec
lods
push
nop
fsub
push
(bad)
sbb
pop
pop
mov
(bad)
stc
gs
into
int3
add
popf
mov
sub
leave
loope
loope
pop
dec
and
test
pop
cmps
or
jg
dec
xor
pop
push
mov
loope
test
sub
call
xchg
sbb
pop
xchg
fmul
push
int
jns
repnz
dec
fmul
xlat
neg
xchg
jns
mov
sbb
loop
jns
mov
sub
arpl
and
jmp
jmp
retf
lods
sbb
stos
ja
jg
scas
icebp
lds
or
dec
lea
loop
sub
cmp
aad
mov
rcr
frstor
sub
sti
adc
scas
xchg
mov
ror
pop
(bad)
sar
inc
sub
push
jp
lea
cmp
jg
rdpmc
outs
mov
sub
mov
jmp
inc
xchg
pop
ss
mov
cs
movs
pusha
pop
(bad)
or
pop
add
sub
xor
outs
xor
or
neg
stos
fist
jnp
pop
jp
and
or
cdq
aaa
int3
iret
inc
sbb
sub
mov
sbb
cmps
dec
clc
mov
xlat
ss
sub
push
out
enter
cli
jge
aas
stc
dec
lock
enter
stc
loop
ds
jnp
or
pop
test
enter
mov
mov
or
ss
call
adc
push
jmp
inc
mov
mov
jbe
pusha
cdq
cmp
call
test
aas
rcr
(bad)
jo
and
retf
js
pop
jge
adc
mov
ja
stos
imul
sub
cmps
dec
adc
fstp
add
(bad)
clc
sub
enter
icebp
bound
test
push
mov
jmp
mov
enter
sbb
or
pop
mov
mov
sub
cmp
iret
mov
cmp
int3
dec
(bad)
ds
ds
mov
xchg
mov
outs
mov
cmc
test
sub
push
xor
into
outs
mov
icebp
aas
les
pop
call
xchg
mov
and
add
int3
jne
sbb
in
aas
mov
jmp
push
pop
mov
jmp
imul
sti
xchg
inc
jmp
lods
cmp
dec
sub
jle
scas
sub
int
jecxz
mov
xor
mov
daa
xchg
(bad)
loopne
shr
into
dec
mov
scas
popf
imul
sbb
loope
push
adc
cwde
ror
push
fwait
test
pop
stc
and
mov
sbb
mov
rcr
ret
mov
dec
and
xor
imul
add
pop
mov
imul
mov
loopne
jbe
shl
jmp
cmps
call
outs
icebp
pushf
cdq
sahf
mul
mov
iret
test
mov
jmp
push
cdq
or
aad
retf
add
mov
dec
jg
jno
ret
(bad)
ror
(bad)
out
movs
clc
scas
in
jnp
out
lods
jg
ds
sbb
clc
js
js
mov
adc
(bad)
in
mov
pushf
cmps
jbe
rcr
int
mov
pop
or
and
push
jge
fstp
jl
cdq
in
rcr
ficomp
or
sub
iret
(bad)
outs
retf
sbb
jge
mov
out
jnp
mov
js
xor
jg
cmp
cmp
sub
out
pop
xor
dec
jno
lods
int3
aad
push
ret
cmp
mov
test
addr16
sbb
loope
ror
out
imul
aas
loope
mov
(bad)
jl
je
enter
sub
cmp
dec
pusha
call
mov
or
xchg
ret
arpl
rcr
lods
dec
sbb
mov
clc
cmp
(bad)
adc
clc
lea
lods
dec
mov
jge
outs
not
in
jnp
loopne
mov
ret
fldcw
push
pop
adc
das
aad
xchg
inc
mov
mov
aad
jge
gs
mov
pop
inc
sbb
mov
jne
pop
stc
sbb
jns
loopne
cmp
cmp
lods
stos
fwait
rcr
(bad)
fcom
adc
iret
pop
sbb
push
ror
movs
iret
add
mov
loop
or
ja
(bad)
push
jmp
xor
inc
pop
jmp
jne
xor
out
cld
jge
repz
int3
inc
mov
sbb
push
push
and
jmp
sbb
push
icebp
push
sti
stc
ja
mov
js
push
out
or
xchg
(bad)
ficom
stos
mov
into
or
mov
and
push
sub
and
mov
mov
imul
(bad)
scas
jno
jmp
xchg
fisttp
sub
or
pop
fimul
fucomi
mov
pop
loopne
dec
add
icebp
cmp
inc
(bad)
add
dec
or
dec
stos
test
xchg
pop
retf
pop
cli
jle
add
lods
dec
fcom
adc
sar
mov
dec
cwde
add
aas
xchg
dec
add
mov
jno
and
mov
dec
std
(bad)
add
dec
pop
mov
cld
std
(bad)
out
test
sub
out
mov
sub
xor
push
push
out
adc
jl
pop
cdq
pop
test
xchg
out
mov
mov
or
cmp
fild
daa
sub
aad
shr
mov
outs
dec
cmp
rcl
fbld
mov
jae
inc
(bad)
stos
rcr
inc
leave
push
loope
jge
sar
sub
sbb
retf
ficomp
test
out
(bad)
jg
add
fisttp
jnp
adc
sahf
out
xchg
aaa
mov
and
idiv
dec
add
xor
aaa
lahf
sub
std
mov
jmp
mov
xchg
or
repz
retf
pop
inc
test
jnp
stc
mov
push
inc
add
push
fmulp
call
retf
(bad)
lock
std
outs
stc
mov
jmp
mov
out
aad
sbb
or
add
out
lea
sar
dec
cmp
das
xchg
mov
inc
inc
sub
in
jno
add
jle
or
retf
mov
jl
addr16
sbb
out
retf
test
inc
shr
call
fcmovne
stos
sahf
retf
int3
jae
mov
outs
iret
push
jecxz
(bad)
mov
push
jg
add
call
xor
daa
shl
or
pop
and
or
jecxz
xor
ins
in
xor
sbb
jg
jne
dec
nop
mov
aad
lahf
pop
mov
sub
mov
rol
popa
push
xchg
aaa
mov
or
test
jne
sbb
or
pop
pusha
pop
(bad)
in
stos
and
mov
(bad)
push
jns
in
push
daa
test
sbb
daa
pop
(bad)
mov
aas
inc
icebp
loopne
stos
cmps
xlat
adc
repz
movs
icebp
jns
mov
push
fimul
xlat
std
cmp
mov
xchg
cmp
dec
push
stc
fist
test
or
into
das
std
ret
and
xlat
sub
call
adc
jmp
clc
in
cdq
ret
clc
jmp
(bad)
outs
jmp
mov
test
test
adc
or
(bad)
std
jmp
jmp
movntps
sub
jns
push
in
out
dec
sbb
mov
jmp
imul
mov
and
mov
dec
test
and
fwait
sar
pop
scas
adc
jp
jnp
sbb
pop
sbb
jl
cmps
pop
popf
jmp
pop
xor
punpckhbw
rol
pop
cdq
mov
pop
pop
dec
xchg
pop
push
(bad)
jns
out
mov
or
push
mov
dec
mov
cmp
pop
dec
scas
mov
pop
fwait
jmp
pop
xchg
iret
test
aaa
popa
inc
pop
js
fsubr
jge
dec
adc
sub
arpl
js
ss
in
shl
cmc
in
(bad)
xor
ret
outs
dec
dec
jbe
cmps
push
xchg
fbld
mov
int
pop
fsubr
dec
(bad)
ret
fnsave
cli
fadd
xchg
ret
sbb
mov
pop
int
or
sbb
inc
mov
cmp
or
test
jp
mov
push
lds
ds
int3
imul
les
fs
ja
push
or
icebp
xchg
mov
xchg
not
lods
and
inc
call
push
inc
in
mov
dec
leave
dec
jo
cmps
jl
(bad)
sub
cli
nop
mov
dec
test
mov
jo
jle
jae
cmp
(bad)
jns
and
rcr
mov
push
mov
outs
mov
xor
vmptrld
mov
rcl
mov
fiadd
fadd
push
cmps
stos
add
xor
xchg
xor
or
cmps
pop
repnz
leave
mov
push
leave
jnp
neg
jp
mov
fstp
in
or
xchg
nop
mov
dec
push
outs
pop
pop
scas
adc
stos
outs
mov
(bad)
icebp
cwde
mov
jmp
push
loope
sub
fldenv
das
(bad)
mov
mov
add
inc
push
pop
(bad)
cld
sbb
push
dec
xchg
jle
pop
fstp
xchg
pop
sub
popf
jno
push
int
or
sahf
aaa
adc
dec
dec
fcomp
xchg
jg
call
xchg
test
jmp
out
inc
pop
cli
arpl
cli
ja
outs
clc
(bad)
jg
xor
push
loop
lahf
call
and
rcr
mov
les
(bad)
mov
clc
addr16
loop
adc
aaa
cs
mov
or
mov
xchg
jns
aaa
pop
aas
and
leave
test
jmp
(bad)
dec
cmp
sub
in
loopne
sub
sub
xchg
aaa
sar
(bad)
jnp
imul
(bad)
jg
dec
leave
cwde
jmp
cmp
sub
mov
nop
mov
jbe
pop
dec
cmps
adc
cdq
int3
ds
fstp
cmc
pop
push
rcl
push
fldcw
outs
mov
adc
(bad)
mov
(bad)
imul
cdq
das
and
or
pop
sub
cli
pop
pop
scas
ss
sbb
js
int3
call
add
jmp
jns
(bad)
cli
rcl
enter
xor
test
sar
mov
ret
fs
lods
outs
mov
es
dec
xor
sub
stc
mov
cld
data16
popf
pop
inc
jg
lock
ror
xor
lds
sti
push
bound
xchg
(bad)
fisubr
lea
pop
cmp
dec
into
mov
rol
fcomp
pop
out
loopne
sub
movs
les
add
xor
mov
in
fs
mov
fisubr
js
cmp
push
imul
out
lods
xor
push
mov
dec
not
or
inc
les
in
loop
hlt
sub
outs
mov
dec
jle
pop
cmp
mov
ds
std
in
xor
and
lahf
sbb
jnp
in
sbb
mov
or
cmp
sub
iret
add
mov
mov
fisttp
scas
mov
fldcw
iret
jmp
pop
mov
adc
push
mov
push
mov
je
and
mov
xchg
movs
and
repnz
mov
sti
and
icebp
enter
mov
clc
(bad)
in
xor
ja
sbb
mov
in
pop
add
xorps
lock
mov
sbb
adc
mov
xor
std
or
or
mov
jns
mov
push
inc
repz
cs
adc
sbb
ins
rol
ja
mov
inc
mov
pop
das
jmp
comiss
sbb
fcom
std
imul
jg
lods
push
cdq
(bad)
xchg
loopne
fwait
pop
sbb
repnz
inc
cs
pop
stos
mov
mov
fldcw
jmp
popa
mov
lods
nop
das
jg
test
ret
(bad)
std
out
int3
mov
mov
pop
loope
repnz
outs
mov
inc
(bad)
sub
inc
(bad)
aas
fmul
pop
sub
or
packuswb
mov
dec
fwait
mov
jg
push
iret
lds
jg
mov
add
mov
ret
test
(bad)
dec
out
nop
das
jbe
ins
call
hlt
popa
int
test
jecxz
pushf
mov
adc
sbb
jae
and
adc
and
sbb
ror
push
dec
or
or
jne
add
mov
(bad)
sbb
aas
sbb
dec
or
lods
and
loope
fdiv
aad
pusha
sbb
mov
lds
daa
out
sbb
inc
mov
jmp
xor
fnop
push
out
iret
hlt
jmp
(bad)
mov
sub
xor
imul
cmp
out
add
ins
ffree
dec
push
dec
nop
fmulp
imul
cmp
js
sti
js
pop
jb
xor
or
push
iret
push
inc
push
xchg
mov
xor
outs
push
or
in
ins
into
ror
cmps
sbb
dec
inc
mov
iret
fcom
mov
daa
sub
sub
aad
scas
cdq
call
les
cdq
imul
xchg
imul
cld
jo
int3
xchg
btc
and
call
out
or
sub
or
pop
ret
xor
dec
xor
or
out
out
ret
jmp
ret
(bad)
iret
lahf
mov
and
add
pop
push
clc
ret
jmp
jle
ins
xor
ins
cwde
clc
cmp
sbb
mov
mov
retf
mov
pushf
cmp
mov
mov
pop
cld
mov
das
fadd
adc
out
mov
cdq
retf
aas
inc
jno
loope
or
xlat
jg
xor
dec
pop
push
(bad)
pop
int3
xchg
jns
into
jne
in
and
test
add
scas
and
loope
retf
fnsave
(bad)
pushf
xchg
and
or
push
ins
mov
jno
sub
into
push
stc
iret
mov
xchg
push
dec
cmp
in
adc
jo
cmps
pop
or
sbb
fild
out
call
cmp
add
cmc
mov
sbb
cmp
shl
call
or
xchg
mov
pop
das
cmp
inc
int
(bad)
or
sub
or
les
jmp
mov
mov
xor
xor
inc
sub
pusha
pop
inc
xor
jne
repz
int
out
pop
lahf
push
jg
fld
cdq
std
or
jne
xchg
push
fcmovu
cli
and
xor
mov
and
imul
jmp
das
data16
retf
mov
scas
or
fadd
jae
push
xor
add
dec
or
leave
xor
push
dec
es
(bad)
xor
push
sbb
push
jle
out
or
sbb
fisubr
das
ins
sub
sub
pop
sub
inc
lods
push
fs
fsubr
addr16
mov
mov
xchg
ins
mov
fwait
lahf
sub
dec
xchg
imul
loope
sbb
mov
movs
add
mov
inc
mov
mov
mov
fbld
pop
rcl
jl
iret
imul
aas
sub
cmp
mov
add
imul
jmp
in
cmp
dec
pop
test
cdq
ds
addr16
mov
popf
outs
les
pop
jnp
leave
jo
movs
pop
mov
dec
push
sub
jbe
mov
adc
jmp
cmps
loop
pop
sbb
mov
add
loop
mov
and
fnstsw
inc
shl
add
sbb
fisub
mov
push
adc
in
in
inc
in
ja
enter
pop
inc
dec
mov
in
out
pop
loope
test
mov
popa
jb
or
adc
add
sbb
sti
cld
pop
mov
dec
test
cmp
repnz
inc
pusha
iret
aad
xor
dec
in
push
and
push
dec
stos
call
jnp
inc
mov
cmp
in
push
xchg
in
aaa
inc
jge
shr
test
xchg
icebp
daa
cwde
mov
mov
fistp
ret
jmp
mov
loop
fisubr
or
adc
(bad)
sbb
test
mov
fwait
pop
(bad)
frstor
jne
(bad)
sbb
stos
pop
jp
sub
fadd
inc
pop
cwde
mov
pop
jb
data16
sub
xchg
xchg
jb
outs
jmp
popf
xchg
dec
retf
push
scas
idiv
cdq
push
inc
xchg
addr16
xchg
inc
pop
mov
jno
cli
imul
int3
mov
add
mov
push
sti
sti
mov
bound
(bad)
mov
pop
(bad)
ficom
das
push
leave
cmp
stos
(bad)
mov
dec
icebp
test
arpl
in
mov
sub
inc
and
and
add
lock
dec
xlat
shr
icebp
test
aas
jle
sti
fwait
jmp
dec
mov
xchg
addr16
test
cmp
xlat
ret
sar
movs
lock
xor
inc
scas
adc
in
dec
nop
push
rol
sbb
addr16
shl
mov
lahf
mov
sub
fldcw
sbb
push
cmp
mov
or
jo
call
leave
mov
pop
push
fs
cmp
sbb
dec
into
xchg
sbb
fisttp
sbb
dec
inc
popf
push
push
bound
mov
inc
pop
dec
js
test
mov
xchg
xor
jnp
fs
push
adc
cmp
test
mov
in
cmp
mov
lods
adc
(bad)
xor
cli
fwait
call
dec
das
ror
adc
or
push
mov
jmp
(bad)
jns
pop
rcl
jmp
std
push
pop
scas
cmp
in
fcomp
retf
int
outs
icebp
mov
push
shl
sub
mov
loopne
mov
loop
rcl
pop
out
cli
pop
bound
cmp
jmp
and
adc
lock
adc
cmps
sbb
xchg
dec
fnsave
push
cmps
mov
js
jns
movs
dec
mov
pop
xchg
(bad)
jns
jmp
jmp
inc
mov
inc
jmp
mov
(bad)
fcmovnu
cmp
or
or
popf
jnp
pop
pop
add
test
sub
aam
push
inc
xor
clc
dec
dec
cmp
sahf
cmp
ret
call
test
sbb
xchg
jno
jo
dec
and
push
sbb
cs
test
inc
out
(bad)
cli
xchg
xor
cmp
sbb
fs
mov
add
(bad)
mov
sub
ins
and
mov
cmc
pop
push
call
dec
int
xchg
into
mov
data16
mov
cs
nop
cmc
test
cmp
hlt
in
lds
sbb
lahf
cmp
gs
jmp
loope
mov
xchg
cld
sbb
jmp
xchg
cld
push
mov
aaa
stos
cmp
fimul
fstp
push
(bad)
lahf
mov
test
call
xlat
or
push
rol
fidivr
call
sub
inc
fdiv
outs
cmp
adc
hlt
es
(bad)
mov
dec
fisubr
retf
or
in
dec
or
jae
jg
jecxz
cmp
inc
ror
or
jns
push
push
mov
loop
sbb
pusha
push
stos
clc
dec
sti
push
cmp
xchg
pop
mov
push
cmp
add
rcl
fscale
and
mov
aam
pop
sbb
cld
xor
iret
ret
test
xchg
fdiv
sub
sub
aaa
ins
pop
mov
xchg
aas
cmps
mov
inc
mov
mov
(bad)
adc
(bad)
aas
ss
les
sub
xchg
adc
shr
scas
inc
(bad)
mov
xor
cmp
rol
pushf
jmp
fs
xchg
icebp
push
movs
shl
and
lods
test
add
pop
int
pop
dec
push
ins
pushf
xor
ins
fistp
jne
push
sbb
add
dec
mov
jbe
sahf
pop
push
sahf
inc
pushf
pop
ffreep
retf
sbb
mov
push
ins
jge
add
iret
pop
mov
(bad)
pop
mov
loope
icebp
in
adc
mov
stc
mov
sub
aaa
ds
cmp
call
arpl
xor
jo
adc
mov
lock
mov
xchg
mov
(bad)
jmp
std
or
and
ins
leave
mov
fdivr
cmp
xchg
pop
movs
add
mov
add
push
rcl
movs
outs
add
xor
dec
out
lods
out
fcomp
repz
fmul
jns
test
ucomiss
repnz
dec
jle
jb
or
pop
mov
dec
jl
lock
daa
fdivr
mov
mov
mov
mov
mov
fnstsw
jns
push
sbb
mov
outs
(bad)
xchg
push
stos
xlat
fisub
ja
jae
cmp
ja
lods
mov
cmp
xchg
retf
call
das
cmp
fxch
jge
adc
pop
iret
sbb
pop
mov
inc
das
jnp
dec
cs
pop
outs
inc
loope
int3
ss
std
jns
lods
inc
(bad)
cmc
push
inc
jg
and
and
scas
sahf
pop
push
sbb
out
mov
loope
pop
loopne
neg
lods
xchg
test
mov
(bad)
lods
fidivr
out
outs
pop
adc
mov
pop
pop
inc
mov
in
xchg
cmp
movs
mov
js
stc
fstp
pop
jns
sub
pop
out
ret
(bad)
push
push
inc
outs
das
mov
sub
add
cdq
aas
add
out
addr16
push
fcomip
cmp
inc
int3
jg
setl
(bad)
jns
mov
das
xlat
sub
sbb
push
repz
outs
sbb
xchg
mov
cmp
add
dec
jmp
das
push
sub
popa
jp
call
jmp
jno
inc
mov
nop
loope
lea
jg
data16
pop
movs
ss
and
pop
mov
or
dec
or
xor
das
mov
leave
jbe
(bad)
xor
jg
mov
xor
mov
pop
iret
mov
mov
call
jno
sbb
das
dec
mov
mov
(bad)
nop
je
pop
cmp
fdivr
xchg
mov
sar
(bad)
fst
test
pop
dec
mov
mov
cmp
jmp
sub
pushf
cmps
pop
cmc
fild
push
inc
cmp
xor
cdq
or
push
push
out
inc
pop
loopne
push
ins
xchg
mov
dec
out
fsubr
lea
push
adc
(bad)
sbb
inc
push
add
call
jno
sbb
(bad)
push
aad
sub
or
outs
cwde
popf
cmc
jnp
cs
stos
sahf
cli
ins
loop
mov
stc
int3
mov
outs
cwde
add
cmp
fimul
call
and
xor
js
add
xchg
nop
pop
es
adc
inc
fcomp
cwde
or
and
cmps
or
mov
and
inc
mov
dec
xchg
jg
inc
stos
(bad)
clc
rcr
bndcl
fisubr
add
mov
test
pop
fcos
sti
pop
jb
retf
pushf
jge
je
cmp
inc
pushf
adc
loop
lds
mov
cmp
out
adc
mov
into
ds
popa
xor
mov
das
ret
sbb
inc
push
jns
xchg
jmp
xchg
scas
stc
scas
icebp
mov
dec
mov
mov
enter
fimul
cld
fld
pop
fst
pop
adc
or
(bad)
push
sahf
popa
call
stos
push
hlt
jo
mov
mov
(bad)
push
jg
adc
es
pushf
dec
test
inc
loope
mov
in
jmp
add
icebp
sub
fmulp
sub
sub
dec
inc
cmp
fsubr
ja
test
pop
sti
cs
std
push
(bad)
dec
pop
jbe
mov
xchg
sahf
mov
in
pop
pop
pop
enter
cmps
push
cli
mov
xlat
sbb
mov
pusha
sbb
pop
or
test
xchg
imul
pop
data16
mov
fcmovb
popf
fcmovnu
in
retf
fbld
mov
pop
(bad)
imul
sub
xor
adc
jp
pop
and
mov
ret
aas
cmp
das
mov
jae
das
sti
pop
jp
inc
jne
or
push
mov
shl
js
dec
jecxz
fistp
into
and
jle
push
jns
into
movs
mov
or
ror
scas
sbb
ins
test
sbb
add
call
mov
dec
fnstsw
leave
xlat
push
cmp
xor
cmp
cmovle
cdq
sbb
and
cmp
call
inc
lods
fadd
imul
out
or
xchg
les
std
or
mov
in
mov
aam
out
stc
aas
push
xchg
or
iret
xchg
out
mov
xor
add
dec
scas
ja
call
in
ror
mov
xlat
push
inc
push
jecxz
scas
out
cdq
stc
test
cmp
adc
inc
xchg
mov
lods
or
adc
xor
daa
popf
cld
xchg
inc
lahf
clc
(bad)
adc
icebp
test
ds
popa
rol
push
mov
jg
push
pop
sbb
push
aaa
pop
call
fcom
mov
push
sbb
lds
(bad)
in
adc
mov
addr16
xchg
dec
dec
mov
add
int
and
sar
mov
enter
xchg
pop
mov
into
imul
test
aas
xlat
and
dec
stos
mov
mov
xchg
pop
jo
(bad)
sbb
xlat
push
(bad)
retf
bound
lea
std
dec
(bad)
or
xchg
or
loopne
cmp
(bad)
popa
inc
inc
dec
pop
sbb
movs
test
add
add
call
jecxz
jecxz
leave
fbstp
push
pushf
adc
or
cmc
mov
push
stc
ror
fimul
stos
sub
fdivr
cmp
test
cmps
pop
inc
stc
(bad)
push
dec
cmp
test
(bad)
shl
mov
jp
popf
in
pmaddwd
xchg
fdiv
push
push
sbb
dec
adc
outs
outs
push
mov
mov
adc
in
(bad)
xlat
rsm
fdivr
mov
aaa
cmp
jle
nop
cmp
push
scas
push
cmps
dec
cmc
imul
jecxz
pop
mov
mov
jmp
loope
dec
pusha
sbb
popa
mov
or
pop
fimul
jmp
cvtps2pd
les
adc
nop
inc
shl
inc
out
sbb
gs
xchg
sahf
in
in
push
xor
iret
inc
and
repnz
push
pop
add
mov
(bad)
jle
aas
hlt
add
dec
call
and
xchg
loope
aaa
ret
xchg
idiv
pop
jmp
mov
inc
push
jg
stc
jl
lahf
ret
adc
popf
jo
enter
xchg
popa
fst
or
adc
popf
inc
cdq
jg
cmps
loop
mov
call
outs
mov
cmp
out
retf
pop
pusha
ja
aas
cmp
push
or
push
pop
xor
imul
test
loope
imul
fimul
push
sar
cmp
jle
loop
in
das
scas
ja
int3
xor
xchg
lahf
in
fwait
push
push
cmp
loope
inc
fnstsw
adc
jge
push
scas
sub
push
sahf
push
cmps
lahf
scas
jmp
jge
clc
cs
scas
fstp
cmp
stos
mov
sbb
xor
dec
out
xchg
or
pop
sub
(bad)
es
(bad)
lock
in
adc
pop
and
push
pusha
pop
mov
fs
add
(bad)
clc
fisubr
cmp
ins
cmp
icebp
retf
xchg
lahf
jmp
daa
jecxz
sbb
mov
das
push
aas
jmp
adc
mov
test
cmps
xchg
xchg
psubw
retf
inc
std
dec
into
inc
xor
pop
test
jg
stc
sbb
adc
pop
push
mov
jae
push
cmps
xchg
not
lea
and
mov
mov
outs
scas
retf
lahf
cmp
ret
shl
mov
clc
ins
jle
mov
out
popa
or
out
jnp
sub
popa
ins
adc
push
(bad)
dec
push
outs
loopne
in
mov
ins
xchg
addr16
mov
sbb
dec
into
pop
mov
fisub
mov
test
retf
fldcw
fisubr
or
xchg
add
fidiv
aad
into
out
out
or
fnstcw
fist
call
xchg
sub
dec
mov
pop
xor
mov
pop
pop
mov
pop
sar
pop
mov
ins
jno
xor
and
das
sub
sbb
daa
dec
jne
or
push
sbb
jns
loopne
(bad)
ds
and
dec
lahf
pop
into
sub
mov
mov
xchg
lea
add
scas
adc
test
jmp
loop
push
fcmove
loope
test
and
sbb
leave
and
imul
imul
sub
fist
test
leave
int3
repz
sbb
repz
cmp
pusha
push
jns
sbb
mov
jg
mov
xchg
(bad)
in
ficom
or
retf
ja
and
dec
push
loopne
into
loop
frstor
(bad)
cmp
fistp
dec
mov
mov
inc
push
pop
or
cmp
push
scas
jmp
leave
dec
pop
stos
pop
pop
jnp
xor
dec
test
push
gs
(bad)
fistp
fistp
xchg
test
dec
movaps
push
or
mov
push
cmp
leave
push
mov
jmp
sbb
jmp
adc
mov
xlat
xor
sub
mov
retf
(bad)
adc
frstor
cmp
or
sahf
mov
pop
imul
inc
cmp
pushf
jnp
addr16
ds
and
icebp
cli
mov
sub
sub
fimul
xor
inc
xchg
push
xchg
movs
add
lahf
push
push
pop
iret
or
push
sbb
call
(bad)
push
adc
das
mov
xor
mov
cdq
mov
call
push
sub
dec
adc
repnz
test
ins
jecxz
xor
xor
in
sti
shl
and
shr
sub
not
xchg
push
test
das
xor
lahf
jmpw
mov
push
inc
mov
addr16
jmp
dec
fwait
ret
cmp
or
dec
imul
adc
aam
test
loop
test
(bad)
xor
pop
imul
lods
aaa
mov
xchg
(bad)
shr
push
jle
or
popa
sbb
inc
retf
inc
add
pop
jmp
jmp
jne
push
sub
pop
mov
js
sub
jae
jno
sbb
cld
push
ja
addr16
push
icebp
iret
loope
outs
test
inc
fs
dec
adc
mov
data16
inc
sbb
jno
cdq
aaa
or
enter
in
fstp
test
dec
mov
sbb
in
jmp
in
sub
jmp
jnp
xchg
jns
clc
aas
or
mov
mov
inc
add
cdq
das
push
push
aaa
aas
pop
sub
jbe
shl
cs
mov
out
(bad)
fs
je
les
ds
lea
jmp
in
retf
mov
pop
movs
pop
or
or
mov
sub
les
retf
out
inc
jg
lahf
adc
jns
ret
leave
fadd
mov
jl
dec
ja
lock
and
mov
jl
xor
mov
adc
icebp
jae
dec
dec
int
jae
addr16
mov
js
jge
jnp
jg
sbb
scas
xchg
cmps
movs
jp
inc
jnp
and
push
test
sbb
and
dec
imul
mov
add
ins
les
sub
fisubr
adc
ja
jnp
mov
push
dec
cmps
sub
mov
fscale
into
jmp
shr
xchg
dec
ja
jl
inc
imul
mov
lea
loopne
outs
movs
xchg
(bad)
ficom
push
xor
adc
fdivr
pop
sbb
pop
icebp
imul
or
retf
push
mov
cmp
inc
jmp
or
(bad)
or
jnp
pop
jbe
xchg
fcomp
jecxz
iret
cwde
adc
dec
fcmovne
mov
adc
rcl
inc
jns
enter
test
outs
jmp
dec
or
and
test
addr16
jmp
(bad)
repz
sub
sub
pop
mov
fnstsw
imul
test
cmp
scas
xchg
dec
wrmsr
cmp
xchg
push
(bad)
mov
sbb
fdiv
mov
jmp
xlat
sbb
shl
inc
in
xchg
mov
mov
(bad)
pop
inc
faddp
dec
std
shl
cld
mov
mov
mov
mov
inc
repz
xchg
or
jmp
ins
lods
(bad)
scas
fst
int3
xor
pop
ja
add
mov
pop
mov
fnstenv
sub
(bad)
sub
mov
cld
repnz
or
popa
mov
jno
ja
xchg
mov
(bad)
mov
sub
cmc
jno
fs
xor
test
ret
mov
adc
sbb
push
adc
in
shr
popa
(bad)
fiadd
imul
out
dec
pop
outs
adc
xlat
mov
sub
dec
jle
pop
adc
or
jge
dec
dec
loope
call
dec
test
jmp
arpl
dec
sbb
dec
fld
fwait
and
sbb
(bad)
cli
sub
jmp
sbb
mov
repz
add
stos
cmps
mov
add
stc
push
inc
jo
lea
add
pop
iret
add
aas
(bad)
cs
stos
push
push
sar
mov
(bad)
outs
div
pop
adc
dec
loop
pop
(bad)
in
jnp
push
pop
adc
les
cs
sar
scas
inc
jle
add
adc
lods
std
jb
pop
pop
jle
out
sti
inc
pop
jbe
sahf
je
adc
and
outs
inc
jns
push
jae
xchg
and
mov
mov
push
pop
cdq
push
aaa
out
xor
pop
jb
xchg
pop
enter
aam
fcom
fdivr
rcr
out
push
xchg
fisub
sbb
cld
in
fiadd
imul
imul
pushf
out
fld
jecxz
jns
xchg
out
stc
int3
dec
stos
cmp
imul
sbb
lods
out
xchg
std
int3
retf
or
movs
mov
inc
imul
push
cmp
aas
pusha
sub
sbb
fmul
inc
xor
jecxz
jae
sub
hlt
or
movs
and
mov
in
fwait
pop
icebp
cmc
sub
jmp
(bad)
pop
jmp
jns
cmp
sbb
mov
push
pop
mov
and
and
(bad)
lods
enter
das
rcr
sub
push
loop
inc
popa
rcl
mov
inc
shr
fst
add
dec
aad
leave
pop
enter
xor
pop
push
outs
loop
or
ds
xor
jmp
imul
addr16
push
mov
(bad)
xchg
inc
aad
fsub
out
das
inc
add
push
inc
sub
jmp
(bad)
mov
(bad)
pop
jge
lahf
jecxz
(bad)
dec
cmp
sbb
jl
pop
xchg
jl
jae
pop
xor
or
les
mov
sbb
pop
mov
adc
aam
out
int3
jle
sbb
mov
sub
sub
push
call
mov
xor
scas
dec
push
leave
mov
call
or
inc
inc
into
jge
mov
jl
jnp
cmps
push
xor
xchg
push
sub
fidivr
lea
out
mov
push
test
out
in
or
jae
leave
das
(bad)
cwde
movs
sbb
imul
sub
jecxz
xor
mov
jmp
pop
mov
out
gs
and
in
mov
add
jg
pop
pop
add
or
fucomip
int
int3
mov
cmp
pop
jbe
loope
or
cmp
retf
or
aaa
xchg
dec
or
mov
lods
bound
daa
mov
pop
fsubr
mov
lods
dec
mov
std
sub
push
cld
mov
stos
leave
add
pop
jb
stc
xor
jmp
pop
or
mov
dec
idiv
mov
dec
xlat
inc
sub
inc
neg
cmp
sub
fild
fst
into
dec
jbe
aas
stos
test
jp
cmp
mov
leave
lock
jnp
push
sbb
dec
mov
aas
enter
test
(bad)
das
and
mov
lds
loopne
dec
mov
js
repz
daa
sbb
mov
push
clc
mov
xlat
or
call
pusha
lods
push
scas
bsr
out
in
pop
mov
and
or
push
out
cmp
das
ret
lods
jmp
or
iret
mov
fistp
sub
mov
loop
ror
shl
scas
leave
or
jmp
jle
push
mov
sub
add
mov
rol
sub
pop
cdq
dec
jp
cwde
jae
das
or
and
push
(bad)
dec
repz
or
(bad)
jmp
sbb
add
dec
int
shl
mov
aas
sub
cmp
mov
call
div
test
fistp
enter
and
int3
jmp
inc
dec
xchg
imul
xchg
sbb
mov
in
inc
cld
and
mov
nop
in
faddp
das
mov
dec
or
jle
ins
or
shl
rcl
mov
ret
ficomp
mov
dec
fisttp
ja
(bad)
mul
sub
mov
ret
lock
loope
jns
or
loop
or
inc
imul
push
add
mov
inc
retf
xchg
sub
push
cmc
add
inc
cwde
je
pop
int3
cmp
pop
jnp
sbb
test
mov
lahf
add
ins
jmp
test
cld
cwde
add
and
aaa
fcomp
xor
pop
mov
test
push
out
xchg
pop
arpl
call
pusha
(bad)
jp
in
clc
pop
adc
inc
lods
(bad)
cli
xchg
dec
fmul
sub
outs
cmp
pop
test
mov
(bad)
sbb
cwde
dec
inc
cmp
mov
mov
jp
mov
stc
inc
or
cmp
repnz
xchg
rcr
or
movs
mov
js
xchg
fucomp
push
pop
ins
daa
add
bound
push
adc
dec
inc
jns
jns
xchg
in
mov
jl
data16
(bad)
sub
icebp
cmp
push
push
in
jecxz
lahf
fisttp
or
xchg
jns
cld
ja
test
sub
dec
cmc
mul
xchg
or
jle
push
imul
lss
pusha
out
add
mov
cs
xchg
xchg
iret
lods
or
inc
imul
mov
mov
cmp
dec
(bad)
push
scas
fsubr
iret
jns
aas
and
xlat
dec
adc
stc
jbe
or
push
mov
pop
add
iret
sbb
lahf
ror
fstp
jns
pop
sub
or
jmp
in
pusha
call
out
cmp
push
nop
pop
and
outs
sub
jle
push
push
cmp
imul
cmp
call
cli
push
cmp
cmps
fcomp
jg
xchg
test
and
inc
and
inc
jmp
leave
gs
loope
iret
stc
mov
pushf
das
push
int
jle
lahf
clc
pop
in
in
xchg
mov
scas
mov
scas
jmp
adc
xchg
sbb
jne
test
mov
sti
imul
aad
sub
sar
pop
add
hlt
dec
or
xor
int
inc
scas
out
mov
xchg
(bad)
fldenv
adc
xlat
dec
pop
lods
mov
mov
leave
dec
push
ja
cmp
cmp
jnp
mov
sbb
add
mov
mov
xchg
sti
loop
loop
jns
scas
or
cdq
mov
or
cmp
retf
outs
loop
add
sbb
outs
cdq
call
or
xlat
mov
add
pop
sub
xchg
xchg
dec
sub
(bad)
arpl
push
ret
(bad)
mov
cmp
(bad)
fiadd
cmp
add
(bad)
inc
pop
mov
cmp
repz
arpl
jno
inc
retf
fist
jns
dec
int3
push
pusha
xor
sub
xchg
dec
mov
mov
mov
sbb
lock
(bad)
sbb
and
cmps
cli
push
(bad)
out
mov
out
mov
outs
cld
aam
sbb
std
push
mov
(bad)
mov
add
cli
inc
clc
pop
(bad)
pushf
fisubr
adc
ret
cmp
dec
adc
das
mov
push
leave
jns
inc
dec
jle
mov
std
xor
cmp
daa
cmp
mov
arpl
dec
ds
mov
and
in
dec
sahf
push
scas
retf
cs
or
mov
daa
inc
push
xchg
mov
ret
fucomi
dec
mov
bound
inc
(bad)
jb
lods
(bad)
repnz
sysenter
pop
sbb
sar
pop
jle
scas
or
test
outs
mov
adc
std
push
xchg
ins
fmul
cs
and
sbb
into
cmp
cmp
outs
outs
or
call
add
add
mov
sub
int3
cmp
jge
pop
cmp
mov
push
and
out
movs
pop
or
mov
push
mov
fistp
js
cmp
hlt
outs
xor
jp
sub
push
mov
jmp
jmp
pusha
inc
sub
scas
jle
(bad)
sub
sub
sbb
xchg
sub
xor
mov
scas
sbb
cmc
or
fwait
jmp
pusha
inc
cmpxchg
sar
adc
mov
outs
cli
sahf
sbb
ins
out
add
aas
stc
pop
sbb
bound
jg
xor
cmps
das
outs
mov
mov
out
sbb
sub
cmp
stos
add
push
jmp
jmp
fisubr
lds
or
pop
lods
cmps
sbb
add
retf
test
pop
mov
dec
scas
lods
popf
ror
pop
stos
mov
addr16
aas
inc
and
xlat
nop
xchg
retf
test
ds
out
jae
lock
dec
imul
jl
inc
call
or
jmp
movs
dec
sbb
pop
inc
out
inc
xor
lods
xlat
inc
push
cli
sub
jne
mov
and
xlat
in
cli
out
das
xchg
rol
retf
and
out
jmp
mov
or
mov
sub
mov
jae
dec
lds
pushf
xor
pop
into
loop
adc
mov
push
in
lea
push
hlt
stos
jo
mov
pop
cmp
jnp
add
mov
imul
(bad)
mov
cmps
enter
lock
mov
inc
push
stc
cmp
clc
xor
or
test
stc
adc
popf
jp
pop
imul
cmp
popa
test
out
pusha
mov
cmp
jmp
add
bound
xacquire
imul
sbb
jae
fsub
cmp
stos
sbb
sbb
pop
cmp
cdq
shl
(bad)
push
vmwrite
imul
sub
cmp
popfw
jnp
lahf
outs
adc
cdq
add
push
into
pop
rcl
cmp
cwde
add
jnp
dec
fnstcw
addr16
cmp
push
es
or
jp
cmc
ret
add
add
cwde
or
nop
inc
cwde
dec
out
imul
pop
mov
(bad)
aad
les
js
ficomp
out
fimul
mov
ss
pop
movs
pop
push
adc
enter
cmp
mov
fsub
sbb
repnz
or
mov
push
sbb
add
xor
mov
jmp
inc
pop
test
fwait
rcr
and
cmps
fmul
addr16
stos
sub
xor
mov
pop
cmp
sub
stos
sbb
test
pop
adc
push
xor
call
cdq
sti
jp
sbb
sub
test
out
dec
mov
outs
jns
cmp
dec
dec
retf
pop
idiv
jne
shl
mov
pop
out
int3
adc
sub
xchg
pop
test
push
(bad)
sub
inc
fstp
xchg
sub
xchg
xor
xor
pop
ror
js
ins
xlat
jge
ret
jo
mov
jbe
int3
das
in
fwait
retf
cwde
inc
pop
cmp
mov
imul
into
adc
jp
adc
sbb
or
clc
or
(bad)
sti
pop
in
add
mov
jns
shl
ins
dec
pop
fidiv
or
fdiv
mov
add
ror
mov
or
mov
add
mov
cmc
inc
(bad)
pop
inc
jns
jb
int
mov
fistp
out
and
cmp
mov
pop
push
jmp
adc
test
mov
popa
ja
fld
cli
in
or
(bad)
(bad)
hlt
fucomi
or
pop
mov
sbb
imul
lods
dec
pushf
adc
dec
ret
pop
mov
cmp
dec
out
test
rol
addps
sahf
mov
mov
dec
jnp
fcom
ja
fld
cmps
cmp
clc
mov
add
mov
pop
sub
sub
and
(bad)
loope
sahf
jg
fwait
push
jmp
or
aad
jmp
push
add
or
scas
int3
add
or
cmp
pop
or
ins
loope
jns
cmp
(bad)
cmp
inc
stos
push
stos
jle
jge
jno
pop
push
xchg
ret
repnz
mov
in
out
out
ja
out
pop
mov
sbb
int
lahf
ins
xchg
imul
stos
or
jae
out
addr16
dec
rcl
mov
pop
cld
scas
and
aad
or
mov
call
xchg
jmp
fistp
popf
push
add
ins
cld
or
ss
test
sub
fsubr
xchg
sahf
jg
lods
fidiv
push
imul
push
mov
add
(bad)
ds
jae
dec
push
mov
pushf
mov
nop
jg
call
int
fild
shl
pop
mov
mov
mov
xchg
pop
fisubr
call
repz
js
pop
jmp
xor
inc
imul
in
in
iret
inc
mov
ds
cmp
mov
add
ret
repz
adc
jge
sbb
fnstcw
call
enter
arpl
leave
fdiv
cmp
inc
pop
in
stc
ja
push
repz
sbb
inc
retf
popa
mov
call
dec
mov
mov
sub
icebp
arpl
jo
push
sub
ror
cmps
retf
mov
fnstenv
test
and
outs
fs
call
lea
leave
cmp
sbb
cmp
sbb
xor
out
arpl
sub
add
les
fidiv
retf
imul
aaa
cld
std
fcomp
mov
es
and
sahf
inc
sub
inc
inc
fcmovnbe
mov
imul
add
jmp
ja
or
adc
jle
stos
into
pop
mov
aas
lds
add
pop
inc
das
rcr
push
test
mov
and
lea
(bad)
fcmovnu
jmp
stc
jg
xchg
inc
js
dec
imul
pop
cld
jmp
(bad)
mov
xlat
mov
add
js
leave
(bad)
(bad)
jbe
cmp
xlat
or
add
mul
jmp
cvtps2pd
jns
sub
in
sub
fnstenv
mov
cmp
pop
inc
dec
ret
cs
shl
dec
fsubr
cmc
(bad)
and
movs
cwde
call
inc
jmp
fmulp
push
in
jae
das
jmp
(bad)
or
mov
xchg
or
push
push
xor
mov
fisubr
loope
or
fmul
and
int
push
js
shr
dec
xchg
adc
sub
imul
outs
add
test
iret
xor
push
shl
mov
mov
sti
dec
jb
inc
mov
and
imul
push
lahf
loop
pop
or
fcom
and
fisubr
lea
test
dec
jmp
pop
add
fnstcw
mov
sbb
mov
pop
stos
mov
push
jl
int
fwait
into
sbb
sbb
sub
adc
iretw
inc
mov
push
jnp
mov
mov
cmp
pop
nop
mov
add
pop
out
add
leave
out
fnsave
call
dec
data16
ret
fwait
sbb
inc
push
rcr
mov
into
call
popf
sub
xor
out
jge
lods
jle
or
call
and
popf
dec
inc
ds
mov
mov
call
cwde
inc
imul
cli
std
outs
cmp
test
cmc
jle
dec
mov
jnp
sub
mov
int
add
push
add
fwait
mov
in
imul
out
sbb
sbb
cmc
popa
xor
into
test
push
pop
add
push
or
jmp
xor
dec
ss
scas
ins
shl
adc
cdq
mov
push
iret
cwde
mov
imul
sub
fwait
imul
into
cmps
push
xchg
sub
(bad)
mov
scas
cmp
shl
das
push
mov
pop
fnstsw
std
shl
cld
cmp
jmp
cdq
repnz
push
das
out
and
outs
sub
call
mov
arpl
test
mov
leave
push
cmp
sbb
jns
cwde
or
cmc
pop
loop
adc
leave
adc
cmp
sub
aam
enter
jns
add
mov
dec
push
fisubr
mov
(bad)
ins
jo
pop
clc
dec
jns
(bad)
fcom
push
es
ja
mov
outs
xor
dec
stos
stos
lods
leave
mov
xlat
mov
mov
mov
cwde
or
adc
pop
xchg
push
ins
jmp
or
sahf
ret
cmp
out
mov
or
mov
xchg
pop
rcl
lods
or
xlat
or
retf
fs
pop
fcmove
add
ss
das
(bad)
or
sbb
rcr
mov
push
dec
push
loopne
pop
cmp
pop
or
pop
jmp
pop
xor
xor
jno
or
pop
retf
and
clc
push
(bad)
aas
lods
cmp
jge
fucomi
sti
dec
mov
mov
fnstsw
xor
pop
fld
fwait
and
icebp
int
xor
jne
adc
sbb
push
sbb
mov
mov
cmp
pop
aaa
or
push
ficom
iret
and
mov
out
inc
cld
add
sahf
adc
add
xor
xor
jecxz
fst
je
jmp
das
rcl
shr
sbb
ins
(bad)
loop
lods
imul
mov
or
ja
je
imul
jb
stos
sub
dec
push
outs
jnp
dec
dec
(bad)
call
push
cmp
movs
out
jb
aad
clc
jmp
mov
push
movs
add
imul
xor
ss
or
pop
and
sub
nop
daa
ret
das
cdq
sti
std
(bad)
mov
hlt
mov
pop
outs
sub
dec
std
sbb
mov
mov
or
pop
adc
jg
cld
push
ins
jns
jecxz
arpl
sub
retf
aaa
out
cld
retf
xor
mov
sub
pop
imul
push
cmp
cdq
push
int3
lods
mov
fistp
jmp
xlat
add
hlt
xchg
xor
pop
sahf
pop
aad
mov
popf
push
add
scas
ins
punpcklbw
lahf
adc
mov
cdq
pop
or
ficom
pushf
pop
lods
imul
int
sub
pop
(bad)
jmp
cmp
or
and
push
fsub
imul
movs
pop
jb
mov
dec
out
sahf
icebp
setge
mov
mov
dec
jge
dec
call
call
ins
popf
mov
sbb
mov
xor
jne
ins
sti
je
pushf
int3
cmp
retf
aaa
or
sbb
gs
or
push
xchg
mov
xchg
mov
or
icebp
test
cmp
in
jmp
repz
jae
or
mov
mov
daa
sub
and
inc
fwait
mov
jmp
test
inc
inc
cld
cmp
scas
pop
popa
jge
xor
adc
psrlq
fwait
sub
inc
mov
mov
std
ds
fild
lock
aaa
fstp
pop
jle
sbb
scas
mov
ins
hlt
pop
xor
push
pop
or
pop
mov
inc
aas
lea
jge
xor
cmp
cmp
mov
mov
jae
xchg
jge
add
out
jmp
les
mov
add
pop
xchg
sbb
dec
dec
or
ss
ins
or
dec
xor
retf
mov
mov
and
xchg
cmc
xchg
aam
inc
push
push
jno
jmp
fisubr
dec
cli
pop
imul
sbb
fld
or
dec
mov
(bad)
iret
(bad)
xchg
std
(bad)
pushf
pop
xchg
cmp
sub
out
cld
adc
jp
dec
test
xchg
sub
sbb
dec
lea
jle
aas
mov
test
sub
adc
jmp
sbb
sbb
loopne
mov
or
pop
cmp
push
sub
mov
daa
retf
lods
ins
pop
stos
pop
(bad)
inc
jns
ret
test
cmp
sub
pop
xor
sub
in
stos
mov
mov
mov
push
imul
sub
(bad)
push
fiadd
pop
dec
loop
(bad)
mov
pop
add
popf
pop
(bad)
inc
jg
loope
push
ficomp
leave
retf
lahf
(bad)
sbb
sub
mov
es
fsub
dec
repnz
fsub
xor
pop
dec
outs
call
out
xlat
push
daa
dec
inc
in
enter
pop
push
aam
cmps
jmp
xchg
call
stc
aas
xlat
or
jle
ins
adc
xchg
dec
mov
sub
xor
sbb
mov
cdq
pop
sbb
std
push
mov
jns
scas
(bad)
jbe
fnstcw
sbb
loope
pop
add
dec
pop
out
outs
out
mov
or
dec
scas
dec
les
test
jmp
push
pop
jne
mov
imul
data16
(bad)
aaa
clc
sbb
xor
sbb
jg
inc
fld
scas
mov
mov
jns
fsubr
pop
imul
mov
loop
fcomip
pushf
or
dec
test
rcl
add
pop
xlat
movaps
outs
je
push
push
mov
cli
mov
mov
xchg
mov
cmps
arpl
adc
leave
sub
dec
xlat
adc
and
sbb
push
mov
mov
or
retf
cmp
out
pop
and
sub
dec
enter
cld
mov
pop
cmovs
jmp
test
lahf
cs
test
clc
loopne
pop
retf
dec
dec
popf
push
xor
neg
das
adc
inc
jle
jecxz
xor
movs
frstor
ins
inc
mov
aam
mov
adc
inc
mov
clc
gs
sbb
not
fisttp
pop
cmp
mov
add
inc
sahf
in
sbb
movs
or
aas
enter
sbb
(bad)
jae
push
and
test
fwait
mov
cdq
mov
jno
push
cdq
sub
mov
push
xor
das
and
idiv
push
scas
sti
mov
inc
ficomp
push
push
cld
pop
icebp
aam
mov
jg
int3
inc
add
fild
lahf
mov
mov
add
mov
sahf
rcr
cmp
and
pop
popf
mov
jnp
clc
cmp
push
xchg
pop
sbb
xlat
(bad)
retf
push
fisub
dec
xor
jno
(bad)
adc
ja
jnp
sub
mov
scas
cmp
int
pop
pusha
sbb
imul
je
mov
mov
xbegin
jns
(bad)
repz
popf
popf
mov
fistp
dec
jl
daa
xchg
jmp
movs
mov
dec
cmp
loope
ja
stos
into
push
(bad)
cmp
xor
mov
cmp
mov
jg
mov
je
jb
scas
mov
popa
pop
mov
or
dec
(bad)
inc
or
out
sbb
dec
addr16
lods
mov
mov
dec
not
(bad)
fwait
mov
bound
mov
scas
test
ds
aam
test
into
mov
imul
out
sbb
adc
or
cmp
test
sbb
out
jmp
retf
sbb
xor
pop
sub
ja
hlt
imul
fistp
push
mov
and
sub
addr16
sub
(bad)
out
adc
fidivr
addr16
lods
ins
adc
(bad)
jmp
xor
out
nop
cmp
dec
daa
(bad)
mov
pop
xchg
pop
xchg
jb
jo
mov
inc
push
in
fist
loopne
mov
push
or
cld
ret
sub
jmp
sti
cmp
js
push
(bad)
dec
dec
and
or
jno
dec
or
imul
or
xor
sub
push
sub
jmp
jl
scas
mov
dec
lea
dec
dec
imul
popf
(bad)
jb
xchg
mov
bound
cmc
xor
test
ja
mov
mov
add
inc
pop
inc
cmps
call
lods
and
fsqrt
or
mov
in
data16
retf
pop
push
or
cmps
add
jbe
jnp
ficomp
or
pop
mov
mov
ja
pop
lahf
mov
cmp
add
fs
leave
mov
dec
(bad)
test
rcl
push
scas
cwde
scas
sub
xchg
retf
mov
pop
mov
add
in
out
ret
xchg
test
addr16
outs
push
sub
push
sar
mov
jns
outs
lahf
or
js
cli
xor
pop
mov
sub
mov
test
je
push
inc
dec
aam
mov
inc
mov
sti
cli
mov
and
das
sub
jmp
(bad)
call
adc
or
xchg
jnp
or
enter
addr16
pop
cdq
data16
cmp
pop
jb
cmp
mov
dec
repnz
sbb
ds
jns
push
dec
sbb
addr16
cmp
sahf
enter
out
fadd
mov
sbb
or
cmp
imul
mov
xchg
and
or
pop
mov
imul
jmp
adc
or
jmp
pop
fld
mov
mov
mov
cmps
js
cmp
sti
into
cmp
mov
mov
or
ret
scas
inc
arpl
add
enter
fdivr
sbb
pop
in
mov
call
arpl
sbb
inc
js
stos
popa
mov
leave
or
les
mov
sub
cmp
fmul
mov
sub
mov
sub
adc
outs
test
scas
cmc
pop
scas
loop
xchg
pop
xchg
jp
xchg
shr
imul
pop
rcr
popa
pushf
sbb
pop
inc
sbb
pop
xor
pop
mov
dec
mov
call
rol
mov
mov
shl
pop
icebp
pushf
ret
inc
xchg
jle
push
fwait
call
mov
ds
adc
xor
push
push
inc
mov
add
jns
jb
jmp
lahf
sub
add
cmps
inc
iret
pop
jp
jno
push
imul
pop
dec
cmc
xor
adc
mov
sub
in
push
jp
hlt
adc
push
dec
stos
in
repnz
outs
mul
js
mov
mov
mov
jae
ret
jge
rcr
sub
(bad)
icebp
mov
(bad)
dec
jmp
leave
inc
add
icebp
int
sub
(bad)
fld
sti
mov
repnz
aaa
fsub
xchg
dec
bound
imul
mov
fisttp
mov
fwait
das
faddp
lea
xchg
ret
popa
std
jge
mov
or
shl
imul
sub
in
fwait
(bad)
pop
mov
stos
leave
jmp
leave
xchg
pop
aas
sbb
xor
outs
mov
mov
pop
(bad)
jmp
cs
cld
sti
cs
fwait
jne
inc
xchg
test
(bad)
icebp
stos
mov
inc
lahf
nop
inc
mov
xor
popa
fild
pop
jg
pop
nop
mov
pop
das
outs
std
and
xchg
jns
dec
(bad)
adc
std
dec
and
test
mov
push
stc
ret
sub
loopne
stos
pop
stos
inc
shl
cwde
mov
std
retf
pop
(bad)
imul
test
js
aaa
push
ja
adc
add
jno
xchg
pop
push
lahf
fcmove
xor
call
or
(bad)
shl
loopne
jl
sbb
push
push
jg
imul
sbb
sbb
inc
div
imul
leave
shr
in
into
hlt
push
js
mov
je
int
pusha
js
push
retf
leave
fmul
in
retf
or
outs
loope
or
rol
out
sti
mov
jne
jle
imul
dec
or
(bad)
imul
dec
imul
lea
out
sub
cld
cli
jno
or
sar
ror
in
adc
xor
mov
sub
pop
dec
enter
push
mov
call
jae
out
scas
sub
dec
mov
mov
fidivr
out
mov
pop
leave
dec
out
push
dec
push
fsub
sbb
jne
unpcklps
cmp
pop
mov
stos
lahf
int3
add
ds
pop
mov
cwde
or
sbb
push
test
fimul
pop
pusha
sub
or
mov
cmp
mov
pop
cmp
sti
mov
retf
(bad)
retf
xchg
and
(bad)
(bad)
bound
pop
fld
fcomp
and
add
push
arpl
jge
scas
sbb
(bad)
jns
daa
jl
push
sub
xor
and
jne
(bad)
lahf
fld
in
hlt
fdivr
mov
mov
test
mov
sti
push
fist
pop
out
mov
lods
sub
test
xchg
jg
int
fadd
cmp
arpl
sbb
mov
or
out
jmp
pop
cmp
xchg
pop
pop
mov
mov
das
stc
xor
loope
outs
clc
sbb
or
test
push
pop
or
test
mov
scas
mov
adc
mov
sub
fisttp
xchg
or
sub
fstp
test
es
and
ror
fwait
or
cmp
jns
fwait
dec
jb
stc
push
or
ds
das
push
imul
sub
rcr
jge
fimul
ja
mov
cdq
adc
push
shl
les
dec
and
add
std
xchg
out
ffreep
jmp
stos
aas
inc
push
call
push
enter
mov
mov
adc
mov
xchg
pop
push
xchg
xchg
fist
xchg
pop
sahf
movs
sub
cmp
xor
or
adc
je
out
push
sub
outs
clc
mov
je
cmc
mov
sbb
pop
adc
dec
ins
mov
push
jnp
push
push
mov
in
mov
add
call
fisttp
das
mov
pop
sbb
dec
or
js
lock
scas
mov
jmp
jge
push
addr16
lahf
or
xchg
mov
stc
sub
mov
and
cmp
sbb
or
loope
jno
stos
aas
xchg
lsl
in
lea
repnz
sbb
jno
popa
xchg
push
push
mov
mov
push
mov
shr
mov
jnp
ror
inc
cs
cdq
clc
pop
mov
int3
push
stos
add
in
sub
leave
fisub
mov
xchg
push
mov
cmp
push
call
outs
cmps
cmp
rcl
movs
cmp
jne
push
sub
popf
jg
data16
xchg
cli
fdivrp
xlat
sub
push
pop
fs
or
das
mov
sbb
xchg
pushf
xor
cmp
mov
mov
dec
call
ficom
sub
or
sar
out
push
mov
pop
dec
xchg
and
push
jnp
mov
jge
pop
xchg
dec
sub
sub
stc
jge
lea
jne
lea
out
mov
stc
aas
push
push
adc
inc
cdq
pop
aad
(bad)
arpl
lock
test
jp
pop
mov
mov
dec
pop
ds
ds
add
inc
aaa
cwde
adc
sub
jl
push
cmp
jmp
inc
mov
mov
out
ins
push
add
retf
jns
repnz
inc
enter
sbb
jb
or
sub
jo
fiadd
(bad)
cvtps2pd
mov
lods
sahf
adc
pop
aas
push
fnsave
or
dec
gs
add
push
js
daa
test
mov
(bad)
test
jmp
aam
mov
int
pop
pop
pop
(bad)
enter
out
pop
and
add
pop
mov
jns
ins
dec
or
gs
test
pop
outs
xchg
xchg
out
mov
data16
pop
lods
xchg
scas
jmp
pushf
jl
outs
add
cmp
fisubr
repnz
dec
cwde
arpl
xor
xchg
cmp
cmc
cmp
(bad)
xchg
xchg
push
cmp
fsub
jp
fldenv
pop
iret
mov
dec
push
inc
mov
mov
cmps
jns
mov
mov
outs
enter
enter
popf
aaa
in
leave
jle
or
cwde
jmp
rcl
(bad)
lods
xor
test
fadd
(bad)
ds
jmp
jle
push
fcomp
pop
jne
out
aam
adc
cmp
mov
out
(bad)
jns
pusha
sar
cmp
push
sub
sbb
ins
test
iret
mov
pop
loopne
aas
xlat
mov
xor
jo
das
(bad)
sub
(bad)
pop
int
jmp
and
into
neg
aas
fbstp
call
lods
mov
xor
jae
xchg
xor
mov
je
dec
std
pop
repz
push
cmp
jg
(bad)
data16
cmp
add
sub
inc
sbb
inc
add
jbe
jmp
adc
fdiv
icebp
test
sub
mov
das
leave
mov
out
shr
ins
mov
and
mov
dec
movs
jae
sti
js
mov
scas
add
pop
sub
or
pop
pop
mov
scas
sbb
sbb
sub
test
repnz
jbe
jmp
mov
push
lahf
inc
(bad)
shl
mov
mov
jnp
dec
pop
retf
dec
hlt
jp
out
fistp
loope
rol
cmp
mov
scas
sbb
jg
push
pop
pusha
paddsw
jb
sub
xchg
loope
test
and
push
push
push
and
fwait
ss
dec
out
mov
sub
ins
cld
or
inc
mov
repz
mov
lahf
(bad)
adc
ins
in
mov
xchg
sar
aas
mov
iret
adc
out
or
(bad)
stc
jmp
scas
das
and
cmps
call
adc
jmp
pop
jo
mov
jns
ret
mov
scas
mov
arpl
cli
pop
sub
in
(bad)
xor
mov
popa
(bad)
dec
outs
rcr
dec
js
ja
xchg
shl
or
frstor
xchg
xchg
scas
retf
cdq
fs
dec
ds
push
and
add
push
fwait
push
clc
sti
std
inc
jnp
pop
xor
xchg
ins
rol
pop
mov
xchg
fdivp
mov
and
mov
jp
jg
imul
xchg
push
sbb
add
push
mov
pop
pop
xor
je
mov
lea
movs
xchg
xchg
scas
aam
ins
mov
outs
mov
iret
mov
enter
lods
mov
mov
loope
stc
and
out
pop
leave
sti
or
imul
aas
dec
into
(bad)
push
sbb
cdq
loopne
fldcw
cli
push
inc
and
sub
shl
dec
clc
mov
mov
outs
xor
xchg
test
jae
test
push
fsub
mov
icebp
mov
test
leave
xchg
and
cli
mov
inc
(bad)
xchg
ret
ja
aaa
ret
cmp
jmp
cmc
dec
dec
mov
push
outs
out
jp
(bad)
out
xchg
ret
lahf
mov
inc
push
sub
test
push
lea
mov
out
and
test
jno
and
jmp
inc
dec
popf
pop
and
int
mov
push
adc
in
daa
out
sbb
sub
sbb
jmp
add
mov
jne
lods
scas
sbb
sbb
cmp
movs
(bad)
mov
sub
dec
jmp
sbb
out
stos
push
(bad)
and
sbb
pop
inc
mov
and
shr
ror
loop
dec
fisubr
pusha
sbb
push
cwde
mov
push
imul
les
jnp
movs
cmp
ficomp
shr
outs
cmp
xchg
rcl
dec
cmp
arpl
test
lahf
sub
imul
xchg
sub
xor
mov
outs
and
xchg
jmp
cmp
xchg
nop
popf
push
ja
hlt
mov
(bad)
call
aaa
dec
fs
es
scas
or
sbb
push
lods
test
dec
pop
pop
cli
sub
xchg
push
and
push
out
push
pop
add
push
movs
mov
jnp
aaa
imul
cmc
and
popa
jo
jb
out
jl
jbe
hlt
call
and
dec
fstp
jno
mov
cmp
add
mov
xor
mov
call
sub
test
cmc
ins
sbb
dec
cmp
fs
mov
jg
push
ins
loope
fcomp
daa
aam
cwde
mov
xchg
jecxz
jg
pop
mov
into
push
(bad)
stos
push
mov
lahf
mov
cmp
(bad)
jmp
pop
mov
pop
or
push
(bad)
and
jbe
jp
mov
(bad)
adc
jl
pop
jl
push
dec
sahf
test
popf
jg
out
dec
int3
call
cmp
call
clc
inc
sbb
out
mov
dec
and
jle
jg
xchg
mov
cs
xlat
jg
into
mov
scas
cmp
fcomp
xchg
add
add
sbb
hlt
xchg
or
jecxz
mov
xchg
cwde
jno
sbb
rcr
xor
xchg
dec
fwait
jecxz
pop
(bad)
pop
adc
fld
(bad)
iret
arpl
adc
sub
pop
pop
cli
fidivr
repnz
jns
mov
jb
pop
sub
push
xchg
push
hlt
sti
jae
mov
mov
or
pop
mov
or
ds
out
push
fld
aaa
sub
stc
and
sub
jno
jle
xchg
adc
mov
dec
adc
lock
mov
add
out
(bad)
mov
cmp
fnstsw
and
sbb
cli
sti
int
sub
imul
mov
dec
or
push
mov
in
rcl
lods
mov
mov
test
add
push
int
imul
fs
jno
jo
(bad)
shr
repz
ins
les
and
or
mov
(bad)
test
pop
fsub
xchg
xor
cdq
jle
fs
mov
fiadd
call
clc
js
in
sub
pop
outs
pusha
sub
retf
test
pop
cli
das
call
mov
cmp
int
or
jae
mov
jnp
mov
(bad)
pop
test
fstp
aam
lods
jmp
sub
inc
sub
xor
aas
ficomp
sbb
xchg
jge
lea
xchg
xchg
adc
rcr
sahf
xor
adc
daa
inc
sbb
lahf
in
shl
out
xchg
push
clc
popa
pop
dec
je
int
pop
or
ret
(bad)
(bad)
loopne
pop
adc
xchg
cmp
jno
mov
bound
fiadd
fisub
aad
cmp
test
loop
popa
xlat
pop
fimul
sahf
inc
test
sub
in
std
dec
imul
xlat
and
pushf
xor
sub
test
aam
sub
xchg
movs
cmp
cdq
cmps
js
aaa
leave
imul
or
adc
call
fisttp
stos
fcmovnu
cmp
rol
leave
mov
jns
rcl
cmp
imul
cmp
loopne
das
mov
fld1
fstp
out
lea
mov
idiv
mov
loop
rcr
jnp
inc
ins
adc
pop
pusha
adc
pop
mov
push
aas
in
jl
imul
pop
stc
not
dec
lahf
aad
iret
pusha
outs
mov
fcmovnu
ds
cli
repnz
cmp
pop
push
retf
pop
ror
add
sbb
push
jno
aaa
(bad)
mov
jmp
out
mov
and
dec
mov
jmp
jnp
cmp
dec
jnp
leave
or
js
ins
mov
jb
fcomi
xchg
ss
aaa
retf
pop
dec
or
dec
out
in
cs
mul
scas
jmp
cli
push
test
ja
hlt
xlat
cmp
pop
add
mov
nop
lods
or
lahf
scas
fnstcw
jmp
dec
cmp
iret
mov
int
je
push
das
dec
idiv
jge
scas
test
idiv
xchg
inc
dec
call
lods
pop
pushf
pop
scas
dec
ins
mov
or
add
retf
adc
cmp
push
pop
into
pop
mov
add
mov
outs
pop
(bad)
pop
mov
pop
fisub
cmp
and
inc
push
dec
cwde
movs
pushf
jmp
dec
mov
pop
nop
sahf
imul
shl
inc
push
cmp
push
fmul
adc
cmps
lds
jb
lea
sbb
mov
lock
mov
adc
and
(bad)
mov
jmp
inc
scas
jle
ret
cmp
hlt
test
cmp
popf
fdiv
sub
jge
fdivrp
(bad)
and
adc
sub
iret
jmp
mov
lahf
adc
push
ds
in
dec
mov
mov
cmp
jne
mov
xor
pusha
mov
dec
xchg
lea
test
clc
dec
or
dec
cmps
mov
test
xor
or
test
(bad)
cmps
inc
sar
inc
jl
pop
loope
add
mov
imul
mov
leave
push
mov
dec
jmp
in
sti
pop
push
push
pop
fild
push
sti
sbb
test
bound
adc
pop
inc
sahf
dec
out
dec
jg
mov
push
sbb
jnp
jecxz
daa
sub
mov
fbld
or
mov
xchg
ins
scas
jl
pop
test
mov
pop
inc
xchg
jle
ret
in
jg
jb
test
cmp
fldcw
dec
iret
fwait
shld
dec
mov
sbb
xchg
adc
xor
sub
xor
popa
pop
jbe
dec
fild
cmp
pop
mov
(bad)
push
dec
(bad)
lock
push
add
and
test
out
dec
ins
cmp
dec
(bad)
in
movs
call
scas
ror
loope
(bad)
jmp
js
sbb
mov
xor
cwde
cmps
hlt
aaa
jmp
aam
cmp
mov
(bad)
mov
mov
jns
ficomp
out
jmp
pop
int
xor
cmp
pop
dec
cdq
mov
jns
jmp
mov
fld
xchg
mov
jmp
sub
fadd
sbb
dec
outs
jge
push
sahf
in
pop
push
cmp
jle
jnp
jmp
pop
lea
movs
sub
sub
ja
xchg
sbb
lods
or
cwde
pop
push
mov
add
(bad)
or
mov
retf
push
fistp
or
int3
out
lahf
and
test
fild
or
cmp
lea
movs
(bad)
aas
dec
cs
in
mov
mov
cmp
cmp
inc
ficomp
adc
push
jmp
mov
jns
stos
js
jle
hlt
fild
es
push
mov
add
push
add
stos
lods
out
push
or
sub
pusha
sbb
popa
sbb
retf
adc
popa
fld
cli
test
pop
mov
jmp
fstp
sar
jbe
or
pop
lahf
and
fcomp
xchg
jnp
mov
outs
(bad)
mov
in
sub
cmps
int
pop
jmp
pushf
mov
pop
pushf
fidivr
xchg
retf
or
pop
js
sub
int3
ror
cmp
(bad)
and
jmp
fisttp
sub
dec
adc
jne
mov
mov
int3
or
pop
dec
mov
rcl
mov
loop
test
outs
xchg
out
xor
jmp
sbb
neg
pop
jmp
mov
scas
popf
mov
or
push
fs
lea
pop
pusha
das
out
pop
adc
mov
call
cmps
or
push
sbb
xor
cmp
cmp
mov
(bad)
fimul
cwde
out
sbb
pusha
call
xor
xchg
mov
out
ficomp
ret
std
in
neg
jg
inc
mov
test
cs
pop
pushf
push
lods
outs
fdiv
ds
adc
test
stc
pop
outs
xcrypt-ofb
cmps
test
sar
dec
mov
xchg
cmove
call
(bad)
mov
or
mov
mov
and
js
js
call
mov
ret
out
in
ins
add
xor
push
jle
mov
(bad)
daa
fucomip
fisttp
and
push
push
jne
or
pop
sub
aaa
pop
popf
mov
jle
inc
addr16
sbb
or
pop
mov
mov
xchg
mov
jg
pop
cmps
repnz
xlat
(bad)
stc
sti
jmp
dec
movs
pushf
sbb
or
out
stos
fcomp
ror
outs
sti
fist
lahf
mov
fwait
stos
leave
ss
(bad)
imul
iret
sbb
sbb
pushf
jge
aaa
adc
mov
loop
push
(bad)
fcmove
mov
outs
sbb
pop
jl
mov
icebp
je
cmc
es
xchg
push
xlat
mov
cmp
aaa
dec
xchg
loopne
movs
lods
mov
sub
in
cdq
in
call
(bad)
(bad)
(bad)
iret
pop
xlat
mov
xor
addr16
loope
lds
call
call
pop
test
movs
push
mov
xchg
or
jg
dec
cdq
mov
add
mov
pop
mov
retf
idiv
out
mov
mov
xchg
mov
sbb
pop
sbb
and
rcr
or
in
cld
movs
enter
lods
dec
sbb
mov
popf
jmp
ja
icebp
cli
and
cwde
jecxz
je
jbe
adc
cs
push
jle
out
call
iret
mov
mov
int
in
leave
js
cmp
mov
mov
mov
dec
out
stc
test
cs
das
out
jnp
hlt
cwde
lods
adc
retf
sub
lahf
xchg
push
movs
lds
and
pop
fadd
cmp
push
outs
fld
mov
jo
xchg
arpl
push
popa
pop
lods
mov
imul
pop
mov
add
mov
or
(bad)
fst
test
sbb
into
mov
icebp
neg
mov
adc
mov
mov
fiadd
loop
sbb
ins
jmp
arpl
jns
fcomp
pop
inc
cs
fcom
ret
cmp
mov
out
loope
push
leave
mov
stc
call
shl
mov
test
(bad)
addr16
sti
test
neg
and
pop
mov
mov
mov
lods
sub
fistp
sbb
sbb
outs
push
aas
mov
jmp
js
mov
cs
out
imul
mov
jmp
jge
push
jne
cs
mov
mov
cmp
sbb
inc
lods
aas
sbb
(bad)
cmp
je
scas
sbb
cmp
aaa
dec
int3
(bad)
pusha
rcr
mov
sub
mov
or
mov
mov
sub
push
and
gs
imul
fnstcw
imul
retf
cld
xchg
cmp
cwde
cmp
mov
int3
imul
mov
pop
pop
xchg
mov
pop
dec
test
mov
push
nop
jmp
movs
and
ins
out
addr16
nop
rcl
je
push
loope
mov
jnp
das
scas
push
test
sbb
cmp
daa
or
add
jge
mov
aas
ret
sub
fsubr
iret
or
mov
adc
test
test
mov
mov
inc
ins
call
xchg
cmp
(bad)
ror
jmp
mov
shr
imul
pop
sbb
add
shr
out
adc
pop
into
pop
cmp
cmova
repnz
js
xor
arpl
jp
in
scas
fcmovne
stos
mov
scas
sbb
in
loope
mov
popa
add
jmp
out
call
mov
mov
pop
dec
test
jne
xchg
(bad)
mov
les
mov
cld
psubw
cmp
cdq
push
addr16
jae
sub
pop
push
cmp
push
out
dec
imul
inc
adc
push
into
icebp
add
(bad)
ja
repz
push
(bad)
movd
(bad)
lock
sub
jmp
outs
sbb
push
fdivr
xor
push
sub
mov
sub
xor
mov
scas
jmp
(bad)
ins
pop
pop
jmp
mov
sbb
xor
cmp
out
in
adc
sbb
push
iret
add
ja
dec
inc
shl
or
push
iret
retf
cld
jl
outs
(bad)
fild
push
sbb
fisub
sahf
or
clc
pop
test
inc
fld
fsubr
mov
sbb
pop
fst
mov
in
cmps
fcmovu
pop
pop
inc
test
icebp
std
sbb
repz
xchg
cmp
cmp
dec
xlat
pop
xchg
sti
push
(bad)
or
jg
or
scas
jno
int3
lock
add
pop
cmp
add
dec
mov
and
xchg
scas
add
jmp
pop
loope
and
pop
mov
imul
mov
mov
inc
sbb
nop
xchg
cwde
sahf
sub
or
jns
aaa
fmulp
cmps
inc
sub
sbb
dec
popw
mov
cmc
or
cmp
cdq
(bad)
cld
pop
pop
lahf
inc
xchg
into
imul
adc
(bad)
addr16
jb
sub
inc
out
and
push
lea
(bad)
dec
retf
cs
sar
and
sbb
jmp
ds
nop
mov
ds
or
int
in
xchg
sub
mov
adc
leave
mov
clc
stos
fnstsw
nop
pop
rol
push
add
(bad)
in
jns
pop
int3
iret
arpl
in
jb
test
pop
int
cmp
mov
sahf
pop
lea
add
dec
sub
mov
enter
sub
test
fcomp
push
mov
call
cs
mov
mov
ds
inc
xchg
ds
mov
ud0
dec
out
fstp
add
mov
dec
in
xor
sbb
cmp
inc
jmp
cmp
mov
lock
jge
cwde
and
mov
xor
mov
mov
sbb
fwait
mov
mov
mov
hlt
mov
pop
stos
sbb
or
fild
sar
xor
or
pop
rcr
(bad)
jge
iret
inc
sar
retf
xchg
sbb
pop
movs
mov
cmp
cmp
mov
pop
push
sbb
pop
fucomip
enter
xor
mov
add
sar
push
dec
fadd
mov
test
hlt
rcl
mov
(bad)
push
or
lods
mov
mov
lahf
js
(bad)
jns
leave
and
das
mov
(bad)
adc
pop
xchg
dec
inc
aaa
cdq
fwait
xor
xchg
jnp
lds
jmp
cmp
jbe
mov
sbb
(bad)
adc
jmp
jne
rol
mov
dec
mov
and
out
stc
test
fild
jp
inc
inc
sbb
mov
mov
inc
or
xlat
jno
pop
jmp
retf
xchg
pop
sub
mov
jnp
addr16
sub
outs
fwait
jnp
jge
enter
mov
repz
pusha
shr
jp
pop
jb
xchg
fstp
bound
mov
les
lods
jmp
enter
mov
jns
popa
jg
pop
(bad)
out
push
in
mov
out
popa
test
cmp
mov
jl
mov
sbb
sub
push
lahf
mov
push
fld
add
or
out
dec
pop
adc
pop
ja
and
mov
test
xchg
inc
movs
call
mov
dec
retf
mov
cwde
xlat
mov
ins
(bad)
mov
and
push
fisub
fnstcw
aas
xchg
push
push
jb
inc
fldcw
mov
fidiv
into
pop
cs
add
dec
xchg
fs
xchg
inc
mov
push
loope
sahf
xor
sbb
mov
scas
jmp
or
adc
cmp
push
jb
sbb
in
mov
call
dec
jmp
jg
xchg
pop
dec
push
jno
mov
mov
dec
and
mov
mov
push
pop
cmc
jnp
sti
inc
fisub
xchg
cmp
inc
sub
fcmovnu
push
gs
sub
imul
pop
pop
lods
mov
push
cld
je
jp
cmp
jge
aaa
fcomp
sbb
(bad)
inc
mov
pop
fisubr
mov
xor
fistp
pop
retf
or
mov
sar
jp
in
jo
cmpps
cwde
call
mov
jg
iret
fs
mov
mov
nop
xchg
push
cmp
mov
int3
xchg
popf
cmp
xor
loop
clc
movs
push
xlat
dec
add
dec
stos
ror
das
add
ja
mov
scas
mov
dec
sub
jno
fistp
pop
lahf
sub
mov
jns
mov
aad
lahf
call
cmp
outs
call
push
test
sub
pop
jl
iret
mov
sbb
xchg
inc
sub
mov
xlat
adc
mov
mov
(bad)
fimul
fwait
div
sbb
or
inc
pop
ss
dec
std
pop
push
sub
mov
sbb
sbb
push
out
pop
dec
ins
js
das
jne
jge
cs
lods
scas
and
xchg
xor
je
lahf
jmp
mov
lahf
mov
(bad)
dec
aad
xchg
sahf
xor
inc
scas
xor
xor
pop
dec
pop
jne
sbb
sub
enter
sub
pop
jg
and
mov
dec
daa
jo
inc
(bad)
mov
mov
sti
dec
jmp
or
mov
sub
jnp
aas
fstp
pop
rcr
pop
cmp
int
fisttp
out
loop
repnz
jmp
adc
push
mov
pop
rcr
jno
push
fstp
idiv
out
sbb
test
inc
pop
inc
das
fdivr
hlt
je
xor
cs
push
mov
cmps
rcr
icebp
test
stos
pop
jnp
stos
xor
dec
lea
push
scas
mov
sbb
or
loopne
ja
mov
les
aaa
cmp
dec
sbb
pop
push
aaa
jns
add
add
stos
push
push
leave
fild
mov
lahf
div
jns
das
retf
cwde
cmp
mov
inc
mov
popa
dec
call
ss
imul
int3
sub
pop
pop
push
scas
sub
push
sub
pop
sub
adc
and
cmp
or
sub
cmp
sti
cmp
dec
movaps
(bad)
das
pusha
pop
scas
dec
sar
push
sub
(bad)
(bad)
arpl
add
dec
inc
mov
mov
popa
in
xchg
cmp
adc
movs
push
or
add
icebp
or
aam
jmp
or
jmp
enter
dec
or
dec
mov
fidivr
std
lods
adc
and
mov
adc
inc
dec
add
psrad
mov
inc
shl
jge
push
fst
dec
shl
mov
loope
jno
idiv
cld
xchg
mov
xchg
sbb
xlat
das
test
js
loopne
leave
in
push
sub
jne
adc
fld
dec
lahf
int
outs
lock
mov
xchg
cmp
mov
mov
in
aaa
fidivr
fucomp
xchg
push
sub
gs
fldenv
aas
test
xor
jg
lods
and
mov
pop
shl
nop
mov
fidivr
sar
pop
(bad)
(bad)
jno
push
mov
pop
cmp
mov
pop
icebp
arpl
popf
mov
or
das
mov
(bad)
xchg
xor
leave
adc
fsubr
fs
fidivr
fcom
call
lock
pop
inc
outs
or
adc
cdq
pop
cli
cmp
sahf
cmp
dec
mov
pop
xchg
cmp
jns
(bad)
fld
sub
lea
int3
push
sub
ins
mov
mov
ficomp
es
push
mov
mov
stos
add
scas
mov
cld
or
push
mov
push
push
dec
adc
jb
push
mov
push
fiadd
pop
xchg
inc
jmp
cs
xor
jl
test
adc
mov
fst
push
mov
push
mov
mov
ss
mov
jmp
sbb
sub
lods
sub
je
push
mov
mov
jns
enter
mov
aas
sbb
pop
mov
ins
pop
jl
mov
adc
rcr
iret
mov
bound
inc
scas
jle
cwde
mov
aaa
push
fnsave
xchg
loopne
cmp
ret
enter
inc
push
jle
mov
mov
and
adc
leave
das
outs
sub
es
popa
fidivr
jnp
push
adc
jmp
mov
mov
push
pop
mov
mov
or
pop
and
sbb
push
cmp
pop
ret
cmp
test
inc
popa
pop
scas
pusha
aas
mov
pushf
out
sub
les
or
jge
lahf
sbb
data16
jecxz
stc
leave
and
les
sbb
mov
mov
fstp
mov
idiv
sub
cli
arpl
cwde
test
or
jns
fnstcw
movs
ja
cmc
mov
ss
mov
sahf
pop
dec
pop
sub
aaa
adc
xchg
adc
sbb
pop
add
jmp
push
imul
push
fldcw
scas
xor
frstor
out
mov
mov
sar
fisubr
sahf
sahf
fidivr
lea
dec
in
scas
mov
cwde
ins
rcr
sub
imul
sub
cmp
xor
(bad)
je
ja
cdq
sbb
fnstcw
test
mov
out
jnp
mov
or
sub
pop
jle
jg
push
pop
push
mov
mov
fild
mov
push
aas
jg
js
fwait
dec
pushf
das
jp
sbb
push
in
jmp
and
sub
cmp
inc
mul
or
jns
jge
retf
push
pop
sbb
mov
and
mov
xor
mov
or
cdq
lds
push
mov
xor
add
sbb
xlat
mov
cdq
push
cli
ret
in
xor
add
pop
mov
mov
das
(bad)
es
mov
ret
out
inc
jbe
cld
repz
fcomp
lods
mov
sub
cdq
sbb
mov
xchg
pop
test
enter
mov
jl
mov
test
mov
cs
mov
add
pop
or
ja
fmulp
push
xor
test
lods
jl
int
jmp
pop
outs
outs
or
fstp
cdq
sbb
ror
sbb
dec
add
adc
adc
add
sub
add
mov
mov
mov
lods
stc
rcl
or
fsub
push
jp
mov
aaa
sub
retf
jp
stos
sbb
shl
scas
fist
into
test
outs
dec
mov
(bad)
icebp
pop
fistp
or
fmul
xchg
add
aas
fdiv
pmaxsw
das
sti
inc
jmp
dec
inc
scas
mov
out
dec
mov
pop
push
jmp
or
pusha
data16
imul
(bad)
fnstsw
ins
dec
cli
out
fcomp
xor
fbld
pop
cmp
call
sbb
mov
sbb
lahf
pop
mov
pop
sub
(bad)
aam
mov
dec
stos
scas
(bad)
fld
mov
movs
addr16
fist
mov
sub
into
retf
sar
xchg
imul
mov
test
ror
arpl
icebp
pop
or
jns
repnz
dec
pop
fcom
test
or
iret
(bad)
inc
cmp
mov
out
mov
aas
and
rcr
sar
ret
xchg
dec
xchg
jnp
xor
jg
jmp
retf
jge
mov
pop
outs
pop
out
xchg
sbb
mov
sub
fcom
push
scas
out
push
shr
int
sbb
push
mov
clc
sub
push
or
sti
jmp
adc
xor
fstp
pop
dec
jmp
nop
aaa
mov
mov
pop
addr16
lock
adc
leave
stos
xor
pop
pop
fisttp
out
(bad)
sbb
sahf
dec
or
in
add
repz
push
outs
xchg
sbb
in
mov
sti
test
mov
or
push
add
xchg
xor
push
out
sub
mov
cmc
jp
cdq
dec
sbb
retf
fcom
xchg
mov
sub
dec
add
sbb
or
xor
jb
jl
ds
scas
push
stos
test
loop
repnz
das
dec
cdq
imul
lahf
xchg
outs
pop
dec
or
adc
popf
dec
loop
fs
mov
xchg
lods
out
shl
neg
jnp
mov
imul
imul
xlat
(bad)
ins
inc
inc
pop
xchg
stc
lock
fistp
sbb
cmp
jae
pop
in
es
ds
xchg
arpl
mov
and
int
mov
fisttp
pop
fidivr
and
stos
js
(bad)
adc
mov
mov
jno
sbb
jbe
std
inc
popf
mov
imul
inc
or
mov
loopne
sub
imul
call
fucom
mov
mov
dec
cdq
lea
rcr
sbb
imul
cs
sbb
aaa
xor
cmp
imul
adc
and
(bad)
dec
(bad)
or
outs
(bad)
push
sub
mov
jl
push
mov
mov
inc
adc
inc
jns
int3
ret
test
jns
mov
leave
lods
and
and
(bad)
or
xchg
(bad)
js
cdq
fs
cld
scas
mov
jbe
test
mov
or
sub
ficomp
pop
pop
ror
pop
mov
mov
cmp
add
test
cli
call
cmp
dec
inc
das
cmp
ja
call
ja
xchg
(bad)
aad
fs
jne
ret
dec
cwde
jno
call
mov
(bad)
jge
(bad)
iret
or
push
xor
mov
lahf
cmp
ror
ss
mov
sbb
fisub
into
and
test
in
loopne
stos
into
ret
mov
popa
je
pop
cli
push
mov
xchg
sub
cmp
and
in
sub
jno
cmp
dec
xlat
add
dec
fimul
(bad)
sub
lea
retf
fcom
cmp
pop
xchg
jne
pushf
cdq
js
cs
icebp
inc
or
into
jg
xchg
(bad)
xchg
fst
ds
push
pop
fwait
pop
or
dec
imul
mov
cdq
outs
xchg
dec
and
aas
in
xchg
xchg
jnp
add
fcomp
xlat
mov
push
push
push
inc
sub
mov
sbb
add
aas
mov
neg
lahf
sub
scas
fwait
mov
test
mov
mov
pcmpgtd
(bad)
xchg
mov
mov
shr
push
xchg
inc
or
mov
int
ins
add
(bad)
xchg
cs
jge
popf
add
jge
(bad)
cmc
and
add
fs
adc
mov
ja
stos
lea
sbb
fscale
or
loop
xchg
or
or
outs
fnstcw
stos
jmp
imul
cmp
pop
or
pop
push
scas
call
fnstenv
lods
xchg
sub
mov
fsubp
mov
in
(bad)
les
fldcw
pop
(bad)
and
(bad)
or
scas
ins
jp
mov
and
daa
mov
stc
xchg
xor
or
push
pop
scas
sbb
lods
mov
push
sar
mov
scas
add
sub
inc
push
scas
and
ficom
mov
scas
mov
mov
push
and
cs
xor
inc
lahf
ss
pop
xlat
pop
dec
scas
or
mov
cmp
lea
push
pop
ja
mov
pop
outs
fs
sbb
jge
pop
mov
adc
ds
dec
addr16
mov
fstp
imul
push
sub
cli
fstp
pop
fs
mov
inc
imul
sub
enter
movs
movs
xor
ds
jnp
dec
sbb
sbb
xor
in
or
mov
(bad)
mov
mov
sub
lea
dec
std
dec
dec
(bad)
inc
xchg
mov
xor
bound
enter
or
addr16
js
out
pop
sbb
push
cdq
gs
test
mov
inc
xlat
jmp
shr
dec
mov
xchg
mov
pop
push
enter
test
test
push
cmp
mov
fmul
mov
or
shr
addr16
cmps
pop
(bad)
dec
fisub
xchg
lea
or
loope
cdq
(bad)
push
push
mov
ss
cmp
or
or
sbb
push
sahf
pop
sub
test
sbb
push
jmp
adc
push
cmc
pop
dec
jno
fwait
retf
stc
adc
mov
cmp
les
dec
fcom
nop
inc
xor
call
fbstp
mov
or
fcomp
ins
dec
mov
mov
jmp
int3
or
or
unpckhps
and
pop
aaa
js
jge
inc
sbb
adc
sbb
loope
push
mov
mov
stos
sub
out
jo
fidiv
push
lahf
sbb
pop
mov
mov
in
std
add
imul
mov
jae
dec
cmc
add
mov
outs
xor
call
lock
push
in
mov
or
push
or
push
jmp
mov
(bad)
ss
mov
imul
in
add
jecxz
out
(bad)
inc
outs
jns
pop
fidivr
and
inc
inc
or
mov
mul
cmp
mov
sub
xchg
adc
xchg
push
test
jns
mov
xchg
(bad)
stos
lods
mov
imul
mov
xchg
pop
popf
aas
mov
sbb
mov
loopne
(bad)
ficomp
jle
arpl
mov
mov
in
sbb
mov
js
(bad)
mov
add
pop
mov
jle
or
pusha
fidivr
dec
rcl
and
fisttp
and
xchg
icebp
jno
es
xlat
retf
icebp
xor
frstor
hlt
sub
sti
dec
and
fmul
sahf
xor
int
lahf
sub
dec
addr16
in
sbb
cmp
inc
jmp
mov
aaa
dec
cmp
cmp
jbe
fwait
dec
std
sub
pop
mov
push
movs
(bad)
enter
dec
push
arpl
add
xor
mov
movs
mov
pop
jg
add
mov
sti
clc
mov
mov
or
stos
int3
data16
mov
repz
sub
scas
jecxz
xor
dec
sbb
mov
stc
or
dec
dec
outs
dec
jns
jo
cdq
jne
(bad)
call
jbe
dec
dec
stos
cmp
pop
fidiv
pop
or
cmp
pop
sub
fnstsw
sbb
dec
jae
dec
push
stos
inc
mov
jmp
movs
inc
mov
imul
push
pop
sbb
mov
mov
xchg
test
xor
aam
pop
mov
imul
fnstenv
scas
cmp
push
ret
add
sbb
mov
cli
mov
into
lock
mov
push
mov
dec
push
call
out
cmp
pushf
mov
or
out
xchg
or
sti
dec
sub
push
or
lods
pushf
add
cmp
and
aaa
comiss
pop
mov
repnz
sub
mov
ss
sbb
cmp
or
rcr
adc
sbb
sub
push
pusha
mov
cdq
loope
stc
or
loop
clc
ins
fnstcw
pop
jmp
fistp
mul
cli
pop
xchg
mov
(bad)
ds
pop
retf
sbb
push
das
lahf
ds
out
jne
push
shr
push
hlt
(bad)
and
jge
jecxz
gs
mov
popa
inc
mov
pushf
call
cmovg
in
adc
je
xchg
fbstp
aaa
mov
retf
shl
push
mov
ins
sahf
out
xlat
jmp
pop
retf
das
es
lods
push
cmp
jnp
out
mov
xchg
xor
xchg
ins
mov
in
ins
sti
mov
jns
gs
das
inc
int3
mov
push
js
mov
jge
lea
jnp
pop
pop
rol
gs
into
imul
loop
adc
mov
fisttp
xor
(bad)
addr16
in
dec
pop
stc
mov
adc
mov
dec
fnstcw
lea
adc
or
jl
stc
and
or
and
ins
pop
mov
lahf
sbb
ins
jmp
dec
mov
sbb
addr16
jl
xchg
call
dec
pop
lahf
xchg
push
ds
mov
pop
or
adc
inc
(bad)
les
sti
cmp
push
jbe
adc
rcr
push
iret
stc
sub
add
stos
xor
aam
cmp
adc
jae
push
out
xor
pop
retf
and
lods
loope
jmp
dec
inc
lahf
add
outs
mov
ja
pop
call
js
and
or
inc
dec
and
nop
mov
fcmovnbe
cmp
sbb
das
neg
stc
in
sub
push
jnp
bound
xlat
aas
and
test
xor
das
icebp
sbb
fst
repnz
stos
data16
sbb
int
dec
mov
sbb
mov
add
push
push
in
add
pop
push
enter
push
(bad)
stos
daa
xchg
push
jmp
jno
clc
in
pop
or
inc
call
dec
mov
adc
daa
popa
xchg
push
pusha
loope
clc
mov
sub
ss
mov
ror
(bad)
jmp
adc
les
sub
iret
cli
xchg
call
mov
lods
std
jne
ror
pop
test
xchg
jnp
(bad)
out
sar
sub
dec
or
cs
ror
mov
cld
dec
mov
push
and
imul
inc
iret
sub
inc
mov
dec
cmc
stc
(bad)
popf
adc
or
mov
fdiv
enter
pop
cmp
call
push
sbb
dec
sub
(bad)
cmp
mov
in
inc
mov
iret
fs
in
jg
into
rol
mov
fwait
mov
movs
dec
sbb
dec
dec
sub
mov
ins
fstp
scas
popa
ins
ror
adc
lods
ins
push
cmp
mov
pop
mov
cmp
leave
fild
rdtsc
imul
jnp
or
mov
dec
sbb
or
jmp
dec
or
popa
pop
gs
imul
mov
(bad)
mov
(bad)
std
jl
scas
mov
sub
clc
jo
repz
cdq
adc
mov
dec
(bad)
or
xor
cmp
xlat
ins
scas
fld
je
or
outs
(bad)
or
xchg
in
pushf
push
(bad)
dec
adc
in
lods
xchg
mov
dec
test
pop
mov
mov
pop
push
rcr
xchg
(bad)
js
out
sub
pop
xchg
push
loop
adc
push
mov
cmp
mov
out
int3
fist
pop
pop
loop
xchg
frstor
test
fadd
mov
sbb
pop
jno
add
into
movs
inc
cmps
dec
add
aas
movs
cdq
or
daa
jo
mov
push
fimul
push
or
jecxz
jne
mov
cmp
adc
jbe
jno
push
pop
cdq
(bad)
and
test
jb
in
loop
dec
add
jnp
in
out
inc
das
rol
push
push
push
(bad)
sub
and
(bad)
fldenv
add
into
xchg
outs
jnp
cmp
inc
inc
bound
mov
jno
adc
in
ss
mov
push
pop
sbb
jmp
ror
mov
push
jmp
ins
adc
call
fimul
data16
and
mov
cmp
sub
pop
sub
cld
pop
push
mov
daa
pushf
mov
mov
dec
cmps
cmp
mov
sub
add
jbe
cmp
aaa
pusha
jmp
sbb
mov
fidivr
xchg
mov
fs
jns
out
lods
mov
sbb
xchg
xchg
icebp
mov
push
fcom
dec
stc
cli
int3
jle
sub
in
and
cmp
arpl
add
repz
push
adc
(bad)
jp
cmp
add
fsubr
pop
call
inc
xor
or
test
aam
jno
fwait
mov
mov
pop
imul
pushf
cmp
pop
jmp
xchg
outs
push
(bad)
jg
pop
mov
push
and
jecxz
fild
inc
adc
pop
stos
lock
fimul
sub
lock
into
loopne
sub
mov
int3
mov
leave
outs
push
scas
pop
sub
les
clc
sbb
push
sub
xchg
dec
in
pop
test
pop
out
cmp
add
or
push
push
loop
mov
je
inc
fstp
xor
cmp
or
cmp
fprem1
aas
or
fdivr
mov
test
dec
jo
stc
dec
mov
jbe
xchg
and
int
sbb
ins
rcr
scas
repz
adc
dec
push
call
xor
xchg
lods
scas
test
int
fistp
(bad)
xchg
push
sysret
inc
das
inc
test
sbb
dec
jg
pop
jmp
push
pop
test
pop
arpl
outs
mov
dec
xchg
test
jge
(bad)
push
sbb
push
xlat
sbb
mov
inc
sbb
xchg
shl
cld
das
ss
sahf
(bad)
addr16
cmp
push
push
push
mov
push
fldcw
test
cs
shl
mov
push
adc
pop
loope
cmp
mov
bound
retf
mov
pand
xlat
ins
retf
sub
out
jge
js
sub
dec
jge
movs
addr16
mov
(bad)
int
push
jnp
adc
jns
or
pop
dec
jno
aaa
jp
inc
(bad)
lds
icebp
leave
mov
imul
dec
pop
or
dec
retf
fisttp
movs
in
(bad)
mov
pop
(bad)
nop
in
dec
jmp
sar
stc
pop
fist
stos
sub
jmp
icebp
lods
jle
ss
jbe
push
adc
push
test
das
cld
dec
(bad)
sub
test
dec
mov
call
mov
mov
cmp
popf
faddp
outs
aaa
pop
jge
pop
nop
sub
jno
and
ds
cld
mov
xor
paddw
int3
call
jb
fdivr
pop
popf
and
xchg
fwait
and
pop
gs
ror
call
mov
scas
ins
or
mov
out
pop
aam
int
mov
fldcw
je
jne
sub
push
sub
retf
repnz
adc
cs
mov
hlt
stos
sti
imul
pushf
sbb
mov
loope
stc
(bad)
sbb
sahf
jp
sub
loope
mov
rcl
or
xor
inc
stos
test
imul
mov
or
fistp
xchg
retf
repnz
cdq
jge
push
push
adc
mov
mov
fisttp
cmp
rcr
pop
jg
add
xlat
inc
adc
mov
or
imul
inc
mov
outs
lea
lods
(bad)
push
aas
cs
push
cmp
rcr
dec
push
and
repnz
jl
or
das
loope
mov
sub
mov
jp
dec
ret
int3
add
clc
xchg
or
(bad)
addr16
prefetch
into
mov
jno
jl
sahf
adc
enter
out
pop
leave
mov
pop
sbb
mov
or
cmp
or
cmp
es
outs
stos
xchg
dec
iret
jno
mov
mov
sbb
or
into
loopne
ficom
js
retf
call
sub
xchg
pop
in
pop
movzx
or
popf
(bad)
sub
pop
retf
mov
call
mov
dec
pop
sar
or
fdivr
sbb
xchg
shr
xchg
mov
dec
mov
cs
popf
sar
sbb
add
(bad)
push
mov
push
mov
push
adc
xor
adc
fcomi
bound
pop
scas
sbb
bound
(bad)
lock
cmp
leave
pop
push
ins
mov
dec
stc
push
repz
call
mov
int3
sbb
inc
pop
pop
call
icebp
ds
mov
scas
popa
aaa
sbb
cmp
lahf
xor
rcl
dec
jmp
cmp
shl
ds
cli
hlt
push
sbb
sub
mov
dec
fild
add
ret
jl
and
(bad)
cmp
mov
int
jecxz
test
cdq
out
iret
mov
ss
popf
(bad)
sub
inc
lods
jbe
pop
data16
add
adc
fimul
leave
clc
inc
cwde
inc
pop
fsubr
scas
and
push
out
pop
sbb
sar
sub
cmps
out
lods
ror
dec
mov
ds
das
fst
lahf
outs
ins
frstor
(bad)
fsubr
out
popf
jno
retf
test
cmp
daa
dec
push
cdq
mov
pop
push
stc
(bad)
cld
stc
or
repz
rcr
cmps
jmp
fs
stos
addr16
jne
mov
loopne
mov
movs
push
and
inc
dec
jns
push
nop
mov
fs
adc
idiv
fbstp
nop
xchg
into
jl
xchg
out
inc
or
ja
leave
cmp
dec
popf
retf
mov
lods
movs
rol
icebp
sub
mov
push
jmp
mov
daa
inc
outs
ja
mov
xor
xlat
cli
fdiv
cld
sti
and
push
mov
bound
mov
sbb
pop
dec
mov
aas
jns
jns
sub
sbb
clc
mov
fincstp
jb
cli
jecxz
mov
enter
(bad)
iret
xchg
outs
jns
mov
xor
or
lahf
push
or
ficom
mov
cmp
pop
fdivr
call
jmp
sahf
je
nop
loop
inc
pop
jge
std
cmp
jle
imul
bsf
push
mov
jb
and
xchg
mov
inc
or
mov
push
lock
or
sub
xor
call
or
fist
fdivr
mov
mov
scas
mov
push
push
push
mov
jmp
xor
lahf
dec
test
cmp
iret
sbb
ret
xor
popf
nop
into
lahf
inc
fs
mov
xchg
(bad)
cmp
mov
mov
mov
pop
cmp
icebp
(bad)
test
jae
dec
or
mov
test
xchg
cwde
sahf
push
push
nop
sub
imul
xor
cmp
ds
scas
data16
or
mov
sbb
and
adc
out
mov
fidivr
ja
mov
jl
sub
dec
test
push
or
fbstp
rcr
loope
pop
ret
xor
pop
jp
bound
sbb
adc
movs
or
jg
mov
cs
sti
popa
pop
add
ds
retf
add
aaa
xchg
ret
pusha
movs
dec
mov
dec
nop
sar
mov
xor
fucomip
mov
xchg
push
or
je
jl
sub
(bad)
call
int
clc
sbb
jp
fisub
pop
das
sub
in
cmp
cli
mov
pop
jg
add
iret
or
pop
mov
daa
jle
lahf
sbb
dec
push
out
push
jno
mov
jae
aad
adc
ds
sub
dec
das
sbb
jg
inc
neg
sub
addr16
ins
int3
cmc
push
test
sbb
bound
lahf
fidiv
(bad)
sub
jle
cmp
dec
(bad)
cmp
dec
iret
iret
test
sub
adc
inc
std
imul
out
iret
cmp
sub
lahf
mov
pop
cmp
push
cs
or
mov
mov
je
(bad)
jmp
sbb
xchg
shrd
mov
pop
inc
jge
mov
sub
dec
adc
inc
or
mov
scas
dec
xchg
xor
cwde
pop
and
sbb
jp
sar
fcomp
mov
adc
adc
push
push
inc
call
cwde
cmp
pop
pushf
fptan
jle
xchg
pop
and
imul
in
out
fisttp
imul
and
imul
lahf
inc
outs
sbb
or
shr
jne
jo
mov
sub
mul
call
mov
aad
or
int
icebp
test
cmp
shr
lock
ret
mov
cmp
pop
(bad)
into
inc
std
pop
and
or
imul
add
mov
sbb
mov
cmp
pusha
test
mov
stos
jb
pop
mov
cmp
rcr
push
fbld
shr
out
sbb
mul
out
fld
(bad)
jno
je
sahf
outs
jl
push
mov
sbb
jno
dec
addr16
test
call
es
cmp
push
lea
pop
push
stc
lods
aas
imul
dec
mov
dec
outs
add
mov
inc
jb
ss
mov
cdq
inc
or
shl
int3
sub
cmp
mov
aad
iret
or
xlat
jp
jbe
or
or
repnz
pop
xor
scas
cmc
push
sbb
push
adc
enter
ins
outs
sahf
or
and
ss
or
imul
stos
pop
in
pop
in
push
pop
imul
pop
cld
sar
xlat
ja
out
cmp
into
out
idiv
not
add
sbb
jno
and
xor
sub
mov
sar
lock
pop
adc
cwde
xor
mov
hlt
dec
adc
xchg
xchg
ret
mov
cmp
push
mov
(bad)
mov
or
out
cld
pop
add
sub
(bad)
out
dec
inc
in
mov
xor
cmp
lock
outs
(bad)
xchg
fwait
stc
cmp
ss
xchg
dec
add
aaa
jo
fsub
adc
jae
in
into
mov
mov
add
jp
dec
push
cs
add
in
sub
test
inc
mov
loope
rcl
(bad)
int
shl
adc
std
adc
das
popf
icebp
jbe
inc
xchg
push
stos
(bad)
jb
inc
or
dec
mov
cwde
mov
mov
dec
outs
loopne
fcomi
popf
pop
xor
jg
sbb
mov
les
mov
mov
sub
pop
fdiv
out
pop
cmp
pop
aad
xor
vxorps
add
and
jo
adc
out
dec
pushf
cwde
pusha
jbe
jle
cmc
rcr
push
popa
inc
aam
dec
xchg
arpl
mov
jmp
xor
jbe
imul
sar
mov
xlat
call
sbb
jg
push
push
std
mov
mov
xchg
mov
outs
add
in
test
addr16
push
cli
jmp
xor
push
mov
pop
sbb
(bad)
arpl
fist
push
fs
xchg
xchg
das
cmp
std
int3
xchg
add
lea
push
push
in
into
cmp
lods
sahf
mov
out
sbb
sub
sti
or
iret
test
push
pop
sbb
das
and
shr
mov
cmp
pop
adc
xchg
mov
mov
pusha
jmp
imul
xchg
jnp
popa
xchg
adc
mov
ins
stos
js
cli
pop
stos
cmp
jmp
cld
push
adc
aaa
sub
fwait
in
mov
pop
outs
rep
jmp
mov
fsubr
cwde
dec
call
cwde
xor
xchg
sbb
ficomp
inc
jns
adc
jne
cmp
pop
hlt
sub
dec
sbb
jb
xchg
rcr
xchg
icebp
sbb
mov
xchg
adc
icebp
jmp
or
mov
sub
jp
fs
loope
jecxz
cmp
mov
push
(bad)
sub
test
mov
cmp
cmp
sbb
mov
cmps
push
jmp
outs
call
(bad)
imul
or
sub
aam
std
mov
(bad)
test
int
mov
std
stos
cs
adc
jne
mov
cld
fstp
or
xchg
test
pop
dec
nop
imul
enter
fs
pop
pop
jge
sbb
xor
sbb
out
scas
test
push
pop
mov
rcl
dec
rol
nop
sub
jnp
mov
dec
scas
imul
or
mov
icebp
fdiv
jg
enter
push
dec
aaa
adc
nop
pop
addr16
popa
in
jge
cmps
jge
jmp
sbb
(bad)
jmp
cmp
mov
jns
scas
sahf
rcr
mov
popa
jns
adc
mov
mov
dec
mov
dec
pop
outs
and
hlt
aas
jnp
fst
mov
dec
ja
add
shl
je
mov
sbb
ret
push
pop
maxps
cmps
sbb
gs
daa
adc
ret
xchg
cmps
stc
xor
popa
jo
jne
dec
call
inc
sub
pop
xor
jmp
jmp
(bad)
retf
out
(bad)
fidivr
dec
lfs
pushf
mov
sbb
shr
mov
mov
hlt
dec
stos
int
pop
adc
pop
push
or
push
sub
sub
jle
sub
stos
adc
or
mov
mov
lea
inc
imul
jns
adc
xchg
mov
ret
popf
test
sbb
and
sub
jno
push
jb
outs
lods
inc
loope
cmp
out
pusha
rcl
popf
(bad)
int3
das
cmp
push
iret
aas
sbb
nop
das
fnsave
ror
add
mov
mov
imul
pop
mov
daa
clc
dec
mov
sub
fst
or
sar
cmps
iret
lock
inc
(bad)
call
cmps
push
nop
(bad)
ror
xor
mov
shr
(bad)
shr
add
mov
std
int3
jg
rcr
mov
ret
cmp
pop
mov
test
jmp
pop
cmp
and
mov
xor
call
int
lahf
mov
int3
xlat
push
push
popf
pop
fst
ss
in
sub
retf
int3
pop
arpl
xchg
inc
inc
gs
cmp
test
fs
dec
int3
pop
stc
ret
pop
scas
ja
push
out
paddb
ror
fdivr
mov
stc
pop
jae
pop
dec
leave
fild
sub
jmp
scas
or
out
jg
inc
imul
scas
mov
dec
or
mov
ins
pop
ja
ja
mov
mov
xchg
mov
cli
adc
stos
lea
inc
push
aaa
arpl
fcomp
jp
cmp
leave
ds
xor
sbb
in
jle
sub
pop
pushf
rcr
in
dec
std
mov
cs
add
push
jmp
scas
fidivr
icebp
and
add
sub
sqrtps
ret
dec
adc
pop
mov
mov
cmp
iret
pop
aaa
cmp
cmps
xchg
(bad)
fmul
imul
aas
mov
jmp
jg
lea
cs
or
mov
mov
fxch
cmp
idiv
push
in
out
je
or
cmp
rol
fcom
pop
call
gs
cmp
fld
mov
mov
ins
and
out
imul
xchg
jbe
pop
mov
cmps
inc
les
clc
push
(bad)
std
mov
jmp
or
pop
add
cs
data16
int3
push
xlat
add
cli
push
jle
ss
add
lods
cmps
cdq
es
gs
(bad)
jl
outs
int3
jnp
loope
mov
pop
repz
repnz
cmps
cs
cs
iret
pop
add
test
fwait
ds
ins
int
and
dec
(bad)
retf
mov
push
dec
adc
imul
icebp
push
cmp
(bad)
adc
jmp
idiv
lods
mov
pop
dec
dec
mov
pop
sub
cmp
pop
dec
dec
mov
int3
cli
jne
cs
jns
dec
pop
mov
test
sub
cmps
and
jnp
daa
gs
xlat
rcr
sti
repnz
cmp
push
into
loop
sbb
sub
in
xor
jge
ins
pop
jno
mov
into
imul
int
fimul
mov
jne
data16
sub
fwait
pop
jp
lahf
daa
fistp
add
cdq
in
test
repz
jmp
das
pop
(bad)
pop
dec
out
cmp
jge
das
jge
test
in
ret
in
(bad)
or
mov
adc
lahf
mov
scas
inc
push
clc
pop
fild
aas
xchg
movs
(bad)
jmp
or
fcmovnb
movs
int
sub
sar
lahf
stos
std
mov
mov
xchg
jns
pop
(bad)
fisub
jne
ficom
cmc
push
sbb
jno
hlt
mov
sahf
jmp
adc
mov
inc
adc
sbb
ins
leave
jle
daa
push
sbb
fdivrp
out
into
mov
dec
jae
mov
and
xchg
fsub
fnstcw
ins
mov
adc
cmps
loopne
pop
cmp
cs
cwde
ins
das
not
out
popa
adc
pusha
in
jmp
call
rcl
fwait
sahf
call
xchg
mov
sbb
std
movs
push
mov
or
xchg
icebp
push
call
cwde
mov
mov
inc
pop
leave
outs
push
mov
gs
jns
rol
fs
mov
fucom
cld
loopne
je
cmc
inc
pop
pop
scas
jnp
(bad)
scas
cmp
std
movs
jmp
and
stos
or
mov
fcom
jl
inc
jge
jecxz
dec
shl
cmps
daa
jmp
or
xlat
sub
cmp
popf
outs
add
rol
xor
xchg
sub
push
xchg
xchg
pop
mov
cli
push
dec
je
xchg
mov
repz
sahf
imul
mov
mov
loopne
mov
and
in
enter
xor
sub
movs
cmp
sub
clc
fwait
stc
out
fisubr
pop
sti
pop
icebp
push
and
cdq
loopne
cmp
stos
push
aas
call
jmp
pop
cwde
gs
cs
pop
pop
repnz
mov
fnsave
js
jno
push
cmp
sub
test
pop
test
std
ja
and
inc
cs
fnstsw
dec
and
add
dec
pushf
cdq
pop
jmp
pop
ret
ins
fnstcw
mov
clc
sbb
shr
(bad)
add
dec
arpl
jle
leave
test
add
ret
push
xlat
adc
aad
dec
popf
xlat
mov
mov
inc
sbb
ret
pop
mov
test
push
push
mov
retf
cmp
adc
mov
aaa
in
xor
js
jge
xchg
adc
leave
(bad)
fnstenv
pop
movq
sbb
cmc
popf
imul
lods
xchg
sbb
jecxz
or
mov
or
cmp
pushf
repz
cmp
mov
pop
xchg
cwde
(bad)
mov
adc
jmp
fadd
bound
es
add
pop
inc
and
fsubr
push
sar
rcr
shr
in
scas
push
xor
(bad)
call
(bad)
aaa
dec
int
fst
lahf
mov
jmp
addr16
pop
push
test
stos
sub
push
sub
bound
ret
or
sub
mov
movs
mov
in
mov
in
stos
fcmovb
in
movs
mov
sbb
cmp
movlps
hlt
cmp
mov
pushf
dec
xchg
repz
jae
jmp
sbb
in
xchg
dec
int3
jg
fild
loop
shr
pop
into
inc
jmp
ja
jg
mov
loope
mov
sbb
cmp
pop
je
cmp
scas
mov
dec
ins
dec
mov
jmp
loop
in
dec
pop
cmp
mov
inc
in
dec
dec
jle
or
sub
ins
pop
mov
sbb
or
sti
lods
icebp
outs
iret
pop
sahf
(bad)
cmp
cdq
iret
mov
dec
dec
sub
adc
inc
and
sub
ds
or
fild
mov
sbb
cdq
loope
call
jb
mov
dec
test
or
push
or
jp
movs
xchg
push
(bad)
mov
or
ret
pop
jbe
sbb
call
xchg
pushf
stc
test
mov
cli
cmp
imul
leave
pop
sub
fisttp
sahf
icebp
sub
mov
sbb
addr16
cmp
or
out
add
inc
inc
arpl
fisttp
scas
jmp
jle
cli
sub
mov
xchg
sub
loope
push
dec
pop
popa
push
out
fs
movs
imul
repnz
sbb
lods
or
mov
movs
nop
inc
ret
sbb
mov
mov
mov
(bad)
fild
pop
adc
pop
pop
xor
mov
in
bound
inc
mov
jg
add
xor
sbb
inc
out
ins
aaa
jl
inc
xor
clc
je
cmp
fisubr
dec
push
or
push
jns
push
xchg
fwait
pusha
adc
mov
mov
mov
retf
fisubr
(bad)
out
sbb
repnz
in
mov
addr16
outs
mov
or
mov
lea
imul
enter
jo
mov
call
sti
dec
dec
sub
nop
cmps
or
aad
mov
push
mov
fwait
jecxz
jbe
cmp
aas
cmps
cs
jecxz
inc
xor
leave
xchg
out
dec
add
and
call
std
enter
inc
pop
pop
xchg
dec
jmp
js
mov
ins
fmul
mov
cmp
lods
jmp
xchg
mov
add
or
sbb
lods
fwait
dec
or
xor
xor
cli
jge
rol
xchg
jge
es
inc
xchg
push
xchg
outs
nop
xor
inc
sub
outs
inc
clc
jo
jp
pushf
lock
and
or
ins
mov
loopne
xchg
sahf
and
cmp
call
sub
test
sti
push
or
sbb
sub
and
or
shl
dec
fsubr
in
cmc
call
sub
cmp
leave
push
nop
jmp
repz
scas
lods
push
dec
jg
and
(bad)
cli
pop
mov
fiadd
push
or
retf
pop
mov
loop
jge
dec
sahf
inc
out
arpl
xchg
imul
sbb
int3
jnp
(bad)
cld
sar
mov
mov
xchg
dec
fwait
addr16
mov
inc
mov
sbb
pop
mov
or
lea
adc
fbld
or
(bad)
jl
shl
arpl
out
out
or
jns
dec
xchg
push
sbb
in
sub
or
cmp
jecxz
push
ficomp
xchg
sub
adc
retf
jmp
xor
fstp
inc
or
sub
pop
mov
jmp
mov
sub
dec
(bad)
js
push
jmp
xchg
push
mov
mov
pop
scas
popa
or
hlt
das
inc
mov
push
(bad)
(bad)
(bad)
std
es
outs
loop
cmp
pop
cmp
ficom
or
mov
les
not
test
pop
loope
lods
mov
xor
dec
or
sbb
jns
xor
mov
std
sbb
sub
cmc
push
jg
movs
cs
fwait
mov
jecxz
into
dec
iret
and
into
cmps
sbb
jp
jge
imul
push
pusha
nop
dec
outs
sbb
ja
scas
pushf
test
push
stos
lods
add
imul
les
jmp
mov
lock
adc
dec
mov
out
enter
dec
stc
fiadd
sbb
and
push
iret
lahf
out
sub
fcom
inc
lods
lods
xchg
xlat
xchg
retf
adc
stc
jle
out
sbb
sbb
data16
scas
adc
push
or
xor
(bad)
pop
lea
mov
ds
cwde
mov
pop
scas
ds
mov
aam
inc
fiadd
outs
fnstsw
pop
mov
js
dec
xchg
xchg
jne
sub
ins
push
in
mov
in
jne
mov
out
fucomip
(bad)
mov
mov
ds
js
ins
test
(bad)
fild
inc
out
retf
ret
mov
adc
push
dec
xchg
dec
mov
out
pop
nop
cmp
fld
scas
or
movs
sbb
xchg
retf
adc
test
pop
push
imul
pop
push
push
and
scas
ret
cmp
mov
outs
fs
cmp
dec
std
bound
add
ins
sahf
mov
push
or
pop
cmp
popa
pop
or
pop
wbinvd
rcl
pop
rcl
rcr
ins
dec
sbb
leave
stos
jge
pop
iret
lock
loopne
aas
push
push
sbb
je
cmp
(bad)
jp
mov
mov
pop
jns
jns
sub
in
add
out
dec
aaa
add
sub
bound
jmp
sbb
jmp
div
xchg
pop
repz
cdq
or
lods
add
call
pop
dec
pop
mov
loop
inc
jmp
lea
mov
int3
mov
dec
adc
mov
loop
mov
add
fstp
lods
xchg
mov
add
in
(bad)
stc
das
xlat
fisubr
cmp
or
sbb
(bad)
pop
rol
mov
cmp
int
fnstenv
mov
pop
test
or
xchg
retf
out
jge
and
addr16
adc
pop
push
(bad)
jmp
lahf
mov
loop
push
pop
jle
inc
mov
xlat
sub
mov
std
loopne
adc
sub
or
inc
xchg
xlat
dec
jnp
mov
cmp
adc
clc
in
mov
iret
shr
mov
out
adc
mov
(bad)
jle
dec
out
mov
cmp
or
or
jns
jbe
mov
sbb
jne
test
jb
mov
adc
outs
add
dec
scas
lods
aaa
gs
push
scas
test
pusha
sub
cmp
pop
call
js
mov
jbe
test
rcl
data16
cwde
cwde
mov
cwde
pop
lods
lods
nop
(bad)
ss
dec
dec
out
ja
test
dec
outs
lods
add
sti
aaa
(bad)
pop
ins
(bad)
sub
sar
push
lea
fstp
int
sahf
sahf
sbb
cmp
jb
mov
sbb
out
push
stos
xchg
sub
call
xor
fwait
inc
int
scas
outs
jno
jmp
into
mov
ins
int
addr16
jnp
xor
sub
pop
adc
ins
sub
sbb
push
xor
or
shl
jno
loop
mov
dec
mov
xchg
jmp
pop
inc
adc
test
lods
gs
mov
fwait
call
cmp
sub
arpl
(bad)
sbb
test
cmp
mov
sub
dec
iret
dec
sar
cmp
lahf
jns
pusha
jnp
popf
and
movs
scas
jns
ret
inc
cmp
retf
cmp
jns
hlt
xchg
repz
sub
scas
loope
out
push
pop
das
inc
dec
imul
arpl
pop
sub
sahf
xchg
pushf
mov
test
fdivr
fistp
lods
pusha
xchg
(bad)
xchg
dec
push
xchg
xchg
ficomp
clc
mov
or
cmp
dec
popf
out
jno
cmp
(bad)
xor
sbb
or
icebp
(bad)
sbb
mov
popa
iret
mov
jno
push
xchg
pop
jne
sbb
inc
cmp
sbb
sub
sbb
mov
jge
stc
call
mov
push
mov
push
or
and
dec
stc
pop
loope
mov
sbb
loopne
or
push
sbb
sbb
pop
dec
fild
push
mov
sbb
ds
lods
ficom
push
inc
pop
push
add
pop
cli
jg
popf
out
push
jnp
outs
outs
fisttp
jg
mov
jle
mov
stos
xor
(bad)
pop
jg
out
jl
stos
cmp
cmp
outs
into
enter
sahf
fmulp
daa
mov
adc
jle
outs
ss
scas
(bad)
(bad)
mov
add
cmp
icebp
inc
pop
outs
bound
dec
stc
pop
inc
retf
psraw
jns
mov
in
fidivr
int
(bad)
or
mov
inc
push
retf
sub
lahf
mov
enter
jo
cmp
xlat
inc
pop
bound
mov
pop
dec
sahf
mov
ret
xor
pop
dec
nop
daa
rcr
mov
mov
xchg
aas
arpl
pop
push
jae
ins
mov
fstp
inc
jno
dec
aaa
cld
or
(bad)
ss
cdq
dec
or
cmp
dec
xor
mov
fmul
xlat
push
jmp
adc
pop
push
sub
push
dec
mov
arpl
arpl
jns
mov
lahf
in
pop
add
inc
sbb
sahf
dec
xchg
inc
dec
mov
xlat
sahf
daa
repnz
pop
jle
jge
inc
rcl
das
jecxz
sti
jns
dec
dec
test
movs
cs
jp
pop
sub
push
jo
sqrtps
mov
leave
fistp
pop
pop
mov
xor
and
cmp
out
push
or
aam
lods
sbb
dec
jle
sahf
adc
mov
movzx
loopne
into
jbe
mov
mov
mov
test
mov
fstp
cmp
aaa
aas
mov
rcl
jns
test
push
mov
test
xor
mov
xchg
cmp
cmp
ret
loope
dec
cmp
int3
xor
(bad)
stc
sahf
dec
pop
jnp
mov
idiv
aad
gs
cdq
inc
rcr
adc
and
cdq
pop
xor
aas
adc
ud2
mov
sub
ins
xor
sub
xchg
fidivr
cmc
rcr
ds
sbb
and
lock
mov
pop
xchg
ret
(bad)
outs
pushf
mov
fst
xor
dec
cmp
or
jns
mov
jbe
int
(bad)
mov
inc
and
loop
cmp
(bad)
lahf
or
fistp
rcr
call
push
cld
fidivr
enter
push
scas
cmp
jg
(bad)
dec
adc
and
mov
mov
ins
mov
pop
test
addr16
pop
mov
imul
xchg
scas
js
das
jl
ret
sub
sbb
inc
lods
(bad)
stc
popf
test
sub
and
jg
mov
jno
ds
or
in
pop
imul
adc
js
push
lahf
ret
test
push
or
mov
pop
imul
js
xchg
cmc
or
pop
mov
add
push
pop
cmps
jg
movs
and
mov
mov
inc
ss
dec
lods
xor
aaa
(bad)
(bad)
xlat
sbb
adc
jae
fs
or
pop
out
dec
dec
jnp
ins
or
stos
xlat
adc
mov
pop
jmp
xchg
retf
into
cld
(bad)
pop
fisttp
mov
jle
or
fld
mov
jp
iret
xchg
test
mov
ret
daa
test
mov
lods
loope
xor
sub
push
or
push
and
jg
idiv
pop
enter
adc
and
xor
mov
js
mov
cmps
lock
mov
mov
sub
pop
lea
fs
outs
dec
iret
fisttp
ja
mov
test
dec
outs
call
jg
mov
xchg
fmulp
inc
outs
into
cld
dec
pop
jmp
add
call
xor
jp
mov
ja
(bad)
jmp
add
fst
cmp
sub
test
daa
in
repnz
fcomp
cld
cwde
pop
and
xchg
and
fild
int3
sub
(bad)
in
mov
adc
sbb
push
push
out
cli
call
sub
repz
hlt
jp
xchg
je
push
sar
jno
(bad)
ds
jno
or
jle
ja
cmp
add
mov
cmps
sbb
push
xor
jle
inc
jmp
mov
out
or
xchg
ja
push
dec
or
sti
cdq
jmp
retf
cmp
xchg
mov
mov
inc
shl
out
or
mov
ror
jge
push
addr16
cdq
mov
(bad)
cmp
out
mov
cmp
shr
pop
movs
push
xor
push
ss
and
aad
stos
cdq
(bad)
jmp
ficomp
and
in
dec
daa
out
pushf
into
ss
lock
aad
call
fidivr
mov
fcomp
pop
push
cmps
ffree
mov
dec
bound
shr
or
cmp
jmp
mov
dec
mov
imul
(bad)
sbb
cmp
push
inc
int3
repnz
and
data16
or
xchg
mov
(bad)
jg
jmp
push
cmp
add
rol
cmp
sahf
jge
add
popf
cmps
imul
xor
faddp
sub
ror
jmp
xchg
mov
and
jle
imul
sbb
shr
dec
daa
pusha
xor
push
stc
or
enter
mov
fs
xor
jbe
pop
cmp
pop
mov
jmp
sbb
cld
sub
xor
popf
pop
xchg
mov
mov
mov
loop
cmc
add
jge
call
push
ja
xor
adc
sub
adc
popa
xlat
retf
pushf
mov
xchg
xor
addr16
push
push
movs
mov
jmp
xor
call
sub
(bad)
int3
cli
cwde
sub
inc
jl
cli
call
and
fwait
push
mov
cmp
stc
dec
outs
xor
mov
adc
push
fimul
dec
and
dec
inc
fdivr
loopne
enter
mov
mov
mov
adc
imul
push
dec
std
enter
sub
jbe
inc
stc
pop
lods
push
popa
in
retf
or
cmps
fistp
je
pop
mov
stc
dec
data16
cmp
mov
push
mov
inc
repnz
push
cmps
pop
push
scas
push
push
or
out
jg
jnp
mov
test
outs
arpl
mov
sar
pop
fidiv
lea
in
(bad)
dec
cli
or
and
xlat
lock
js
pop
stc
or
je
loop
jnp
outs
push
dec
xor
fnstcw
fcom
dec
sub
push
call
cwde
push
loope
jmp
call
scas
jae
repnz
in
pop
cdq
icebp
mov
jle
inc
(bad)
sub
pushf
(bad)
fbstp
std
or
inc
xchg
mov
psubusw
ret
mov
mov
nop
ficomp
inc
adc
push
fucomip
sub
pop
(bad)
push
mov
stos
mov
test
das
iret
xchg
and
call
int
sbb
adc
mov
in
pop
popa
jmp
cmp
fisttp
sti
mov
sub
mov
dec
pop
hlt
pop
clc
sub
std
mov
cs
pop
fnsave
std
mov
sbb
(bad)
push
imul
adc
dec
pop
mov
lahf
fdivr
in
fld
repnz
data16
loope
sbb
cdq
or
popa
mov
pop
push
lea
xor
jns
fs
fstp
inc
retf
js
jle
mov
mov
test
popf
into
cmp
ja
sub
call
adc
iret
call
mov
adc
outs
mov
dec
dec
lods
mov
retf
cld
jmp
leave
dec
dec
cwde
(bad)
(bad)
or
or
loope
xchg
addr16
mov
hlt
or
push
or
repnz
addr16
frstor
rcr
test
xchg
arpl
dec
xchg
pop
pop
rol
das
or
jae
das
stc
inc
inc
scas
js
mov
jge
ins
dec
inc
push
inc
pop
(bad)
xlat
mov
mov
or
(bad)
fnsave
cs
test
out
fisub
mov
dec
imul
xor
enter
inc
out
aaa
sub
cdq
dec
adc
dec
iret
xor
addr16
sbb
jecxz
push
sbb
fldcw
or
mov
add
dec
or
scas
push
js
cdq
adc
push
pop
out
call
and
push
es
sub
add
pop
adc
(bad)
xchg
and
push
fucom
push
imul
xor
and
add
lahf
and
jl
xlat
gs
ja
cmps
adc
lahf
pop
fisttp
cs
dec
xor
push
push
jns
jmp
mov
cmp
xchg
into
mov
cwde
and
pop
and
add
mov
push
jb
pushf
dec
fsubr
add
jle
mov
xor
xchg
inc
jmp
and
mov
arpl
mov
dec
outs
stos
ins
stc
popf
xor
js
lods
cs
sar
push
mov
stc
dec
stos
ins
call
and
cmc
pop
mov
sar
fild
jne
jnp
sub
push
push
adc
in
or
or
cmp
and
lds
mov
das
xlat
xchg
xchg
movs
mov
add
mov
call
(bad)
das
sbb
sahf
test
out
inc
lods
jge
jno
mov
jb
xchg
cwde
call
cmp
dec
bound
mov
rcr
sar
sbb
lock
int
stc
add
or
stc
rcl
cld
daa
mov
sub
sbb
jo
das
pop
xchg
add
fwait
push
je
lahf
pop
mov
ja
gs
mov
cmp
cmps
loopne
inc
stos
or
loop
lods
lea
js
aaa
sub
add
push
movs
jne
inc
and
xchg
cmp
and
and
loopne
fxch
xchg
pop
cmp
xor
stc
cmps
sbb
mov
js
mov
cmp
mov
loope
imul
inc
inc
test
cmp
jne
clc
shr
mov
mov
pop
xchg
sub
cmp
ins
and
test
mov
es
pop
outs
sahf
test
jb
dec
outs
xchg
lods
cld
dec
icebp
add
xchg
mov
cmp
sub
sub
loope
or
mov
mov
adc
dec
not
add
mov
sbb
mov
jnp
sub
das
xchg
push
clc
mov
sbb
std
call
out
idiv
out
leave
lock
sub
in
int3
mov
cli
fcomp
xchg
test
inc
dec
mov
imul
dec
cmps
jp
jle
adc
adc
je
sub
outs
pop
out
dec
mov
sbb
mov
push
imul
out
dec
sbb
movs
mov
mov
pop
mov
mov
inc
aam
mov
xlat
push
mov
jns
mov
cmps
add
jg
or
cmps
int3
inc
inc
push
(bad)
ins
mov
(bad)
mov
outs
mov
mov
test
(bad)
and
nop
or
(bad)
ja
dec
dec
popa
(bad)
out
cmp
adc
xchg
outs
in
jmp
xor
pop
pop
sahf
push
iret
cwde
xor
stos
or
and
addr16
or
or
lahf
pop
pop
cmp
mov
mov
xchg
and
lahf
stos
cmp
out
scas
cld
fcmovnu
mov
sti
popa
inc
sar
mov
dec
popf
cli
xor
jge
sub
out
dec
mov
mov
sbb
mov
mov
sahf
mov
xor
scas
xor
pop
(bad)
out
add
cmps
mov
jnp
xchg
adc
sub
ja
gs
dec
jle
or
push
and
arpl
add
int
int3
out
rol
xchg
pusha
fidivr
pop
dec
dec
into
pop
pop
jae
pop
test
and
or
test
out
mov
call
sbb
fs
xchg
sbb
shl
pop
push
les
push
mov
xchg
xlat
loope
call
xchg
mov
(bad)
mov
fdiv
xlat
inc
add
or
loopne
sub
inc
mov
pop
(bad)
dec
xor
bound
ds
add
cwde
mov
lds
sbb
pop
ja
push
ds
dec
sub
(bad)
xlat
mov
pop
in
push
into
mov
pop
(bad)
in
mov
out
(bad)
lds
fisttp
and
jo
out
dec
xchg
in
adc
pop
mov
stos
sbb
repnz
mov
fdiv
mov
(bad)
call
out
clc
mov
push
iret
pop
fcomp
sbb
iret
sbb
xchg
lea
rcr
cwde
jle
jecxz
xchg
popf
(bad)
mov
loope
mul
jle
or
push
(bad)
loop
xchg
test
xchg
das
pop
pop
out
(bad)
out
test
cmp
out
ficom
int
bound
loope
ins
and
icebp
shl
scas
int3
mov
pop
mov
shr
ror
test
mov
add
mov
ins
fucomp
call
ret
stos
mov
xor
nop
test
jno
push
aas
lahf
shl
mov
jmp
(bad)
xchg
push
repz
jecxz
mov
(bad)
pop
xor
pop
sub
dec
lods
inc
mov
fmul
aaa
clc
mov
hlt
popf
sbb
mov
mov
add
ins
aaa
and
sbb
js
test
lea
adc
movs
mov
cs
pop
inc
jae
and
cmp
xchg
mov
cmp
out
xchg
mov
jno
sub
cmps
add
add
xchg
pop
jmp
out
mov
jge
inc
cmp
jnp
inc
(bad)
jg
pop
xor
mov
int3
push
dec
loope
mov
adc
adc
push
repnz
push
or
stos
cmps
daa
xchg
push
sub
ins
jno
adc
sbb
rol
cmp
cmp
rcr
icebp
daa
mov
pushf
ficomp
or
xor
push
jbe
out
test
xor
retf
mov
dec
mov
lds
cmp
or
pusha
inc
aas
jns
push
dec
shld
das
test
leave
dec
in
cmp
das
fld
cmp
adc
mov
movs
fdiv
(bad)
aaa
fild
sub
outs
pusha
push
pusha
imul
repz
mov
jmp
in
cmc
ror
pop
fld
call
imul
fbld
das
jmp
mov
add
cmp
cmps
jbe
dec
in
xchg
aas
mov
cmp
inc
stos
stc
arpl
jae
sub
jp
outs
gs
push
lds
aas
xchg
dec
stc
pop
jmp
sub
cmp
sbb
jnp
mov
pop
das
lea
dec
scas
outs
call
int
sar
(bad)
(bad)
sbb
pop
imul
jg
push
ficom
ret
stc
or
aam
push
cmp
int3
jne
jl
pusha
sbb
jge
cmc
cmp
pop
mov
sbb
lods
jle
add
(bad)
jmp
out
mov
test
inc
or
test
cmp
xor
dec
pushf
dec
dec
jecxz
addr16
fisttp
or
(bad)
mov
inc
mov
es
push
cdq
push
adc
leave
mov
idiv
fs
jge
arpl
pop
loop
mov
das
xor
pop
stc
arpl
sub
cmps
movs
mov
fimul
cmp
sub
icebp
sbb
in
pop
lods
repnz
mov
outs
dec
in
inc
int3
aas
iret
into
arpl
rcl
(bad)
pop
jmp
aaa
fistp
dec
mov
cmc
push
lods
leave
loopne
jl
scas
fdivr
lock
mov
xor
xor
leave
mov
pop
adc
cmp
add
sbb
pop
fnsave
push
cmp
add
pop
mov
lea
jnp
xchg
mov
imul
add
test
pop
jmp
xrelease
jb
aas
mov
not
mov
aad
cdq
mov
mov
test
xor
adc
aam
lds
sub
jp
pop
dec
add
dec
cwde
xchg
mov
call
sub
mov
fistp
sub
dec
lock
pop
mov
fdiv
sbb
or
or
sub
add
aam
xchg
inc
aam
cdq
inc
mov
jmp
ds
jns
fsubr
bound
test
hlt
or
jge
mov
int
push
lahf
and
add
xchg
xor
sbb
xlat
cmps
(bad)
das
dec
ud1
cmp
cdq
in
jg
and
pop
imul
call
dec
je
mov
pop
jno
cs
outs
dec
mov
xchg
pop
leave
dec
dec
mov
call
ret
mov
or
lods
outs
int
fstp
and
das
xor
stc
cwde
lgs
(bad)
int
adc
dec
gs
int
stc
lahf
scas
mov
push
std
sti
xor
stos
fisub
fnstcw
ins
test
stc
or
ins
movs
int3
dec
add
leave
fnstenv
jno
cmp
and
mov
xlat
add
push
rcr
and
fwait
stc
cmp
sbb
repz
or
dec
mov
rcr
cmp
(bad)
jg
outs
and
push
(bad)
mov
jmp
mov
push
js
xchg
loopne
push
mov
mov
push
dec
jl
lahf
dec
jmp
cdq
hlt
mov
movs
jmp
lods
ret
cmp
or
jl
stos
sti
jns
mov
cmp
int3
pop
sbb
push
sub
icebp
shl
cmp
sar
or
dec
imul
data16
lahf
sbb
lahf
test
das
icebp
push
in
pop
cs
mov
mov
inc
(bad)
jns
paddd
fldenv
jae
mov
cdq
mov
(bad)
cmp
in
pop
iret
push
xor
cmps
(bad)
in
adc
das
mov
push
adc
mov
xor
pop
jl
and
shr
(bad)
push
into
push
loop
in
imul
ds
cli
imul
cwde
sar
lahf
xor
iret
push
fisttp
xor
mov
xchg
inc
test
lds
imul
and
dec
adc
cs
pop
movs
call
push
pop
cmp
in
xchg
dec
mov
push
cmps
pop
jp
mov
jmp
and
out
leave
or
jns
dec
stc
push
mov
sub
ficomp
imul
xchg
pop
inc
(bad)
aad
clc
cmp
or
or
enter
cld
pop
cs
jecxz
mov
lods
dec
mov
iret
in
dec
(bad)
jg
ds
jecxz
cmp
mov
leave
push
xor
cmp
popf
dec
in
sbb
or
or
stc
pusha
fst
mov
test
mov
lods
or
cmc
pop
call
pushf
in
outs
jmp
xor
lahf
mov
movs
addr16
pop
jle
push
movs
jg
xchg
sahf
mov
into
mov
sahf
out
mov
(bad)
ins
fld
out
push
out
stc
mov
lahf
push
dec
xchg
movs
add
mov
jns
fldenv
mov
sub
fisttp
lahf
push
lds
out
inc
into
or
cdq
test
test
dec
cli
jno
jle
mov
sub
and
jno
(bad)
out
fucomp
sbb
popf
(bad)
out
jecxz
fidivr
(bad)
pop
dec
inc
jo
sbb
dec
imul
and
mov
or
sbb
mov
push
pop
inc
aas
inc
sub
jg
outs
lea
dec
jmp
inc
cld
sub
sahf
add
cmps
or
xchg
inc
clc
pop
xor
in
or
int
inc
or
mov
in
(bad)
int
stc
sub
push
ss
sbb
scas
or
and
xchg
pop
or
test
mov
fbld
pop
xor
push
sub
sbb
and
dec
push
sub
jns
mov
(bad)
push
or
jle
mov
outs
sbb
push
cmp
jle
inc
adc
xor
aaa
or
wbinvd
mov
mov
mov
sbb
push
mov
jmp
arpl
outs
clc
jmp
sbb
xor
mov
mov
push
xor
stc
xor
push
jns
fdivr
fstp
and
(bad)
ret
js
pop
lss
gs
jecxz
iret
pop
inc
stc
inc
popf
lds
fisttp
jle
fbld
lock
adc
and
cmc
xchg
int
sub
popf
dec
sub
xchg
xchg
push
(bad)
dec
mov
push
iret
sar
sbb
ret
xor
add
sahf
mov
mov
loope
jg
fiadd
sub
rol
xlat
cmps
out
mov
adc
mov
movs
outs
inc
jno
iret
stos
ret
xchg
xor
in
pop
into
mov
jg
push
daa
inc
inc
xor
dec
push
or
adc
pop
(bad)
mov
dec
int3
(bad)
sahf
and
dec
jmp
sahf
fs
dec
in
pop
jle
inc
test
imul
test
adc
adc
mov
test
rol
inc
dec
mov
rcr
mov
test
cld
add
dec
sub
xchg
scas
adc
cli
pop
fnstsw
mov
sbb
sbb
sbb
in
retf
jns
sub
and
push
int3
cli
mov
arpl
dec
cmp
cld
mov
sbb
out
mov
xchg
jl
call
and
enter
cmp
imul
in
mov
mov
xchg
pop
dec
xor
js
cmp
inc
mov
outs
stos
mov
cmp
int3
sbb
adc
dec
mov
xor
in
push
outs
lds
jns
or
stc
xor
inc
mov
and
aas
leave
lods
leave
out
jl
stos
mov
cdq
sbb
jmp
into
aam
sub
xor
scas
jns
jbe
loopne
int3
jl
mov
fidivr
fiadd
mov
dec
sub
fild
loope
retf
sub
in
enter
adc
cmp
call
add
iret
push
fst
and
lea
mov
xchg
imul
shr
imul
les
and
(bad)
and
shr
mov
outs
or
cmp
pop
dec
sub
push
cld
lock
inc
add
call
adc
mov
icebp
push
push
ins
or
fidivr
xchg
jmp
cld
inc
mov
cmp
sbb
scas
lahf
add
pop
mov
mov
inc
xchg
mov
rol
sub
and
sub
pushf
push
cmps
mov
pop
mov
jp
lods
dec
mov
push
scas
xor
mov
out
paddusb
xor
mov
xchg
int
je
pusha
mov
shl
add
les
sbb
arpl
push
jle
pop
ret
jl
aas
jecxz
lods
int
mov
xchg
iret
stos
push
sub
mov
adc
inc
mov
lods
cwde
xor
jbe
scas
cmp
jp
popa
jb
push
ins
push
xchg
jecxz
ror
xor
add
sbb
mov
xchg
mov
mov
mov
cld
jb
jne
sub
push
sbb
lods
stos
cs
adc
or
or
cmp
jo
ficomp
pop
sbb
xor
cs
out
cmp
mov
sti
scas
xor
xor
je
dec
dec
xchg
je
scas
sub
call
imul
fistp
xor
adc
sbb
aad
adc
lahf
ins
mov
mov
mov
out
fmul
cdq
push
cmc
mov
xor
push
movs
in
and
stc
sbb
push
or
or
outs
or
or
cli
and
cmps
je
outs
dec
xor
fcom
je
test
or
push
mov
cmp
test
mov
jnp
mov
lods
mov
cwde
cmc
(bad)
jmp
mov
adc
dec
dec
mov
mov
mov
push
outs
jae
xchg
fisttp
rcr
sbb
add
mov
leave
test
jae
stc
ja
imul
idiv
adc
inc
jge
jl
add
cmps
test
int3
lods
cwde
scas
mov
inc
dec
ror
ud1
sbb
mov
sub
das
sbb
sub
mov
out
lods
inc
loopne
(bad)
ins
xchg
mov
pushf
ret
pop
repz
add
ror
out
cmc
mul
retf
add
push
and
mov
fsubr
or
xchg
xor
lock
fmulp
das
mov
xchg
mov
cld
in
mov
inc
dec
sbb
pop
cmp
inc
pop
pop
lea
lods
neg
cmp
pop
pop
pusha
push
or
test
xchg
dec
sub
test
jge
out
clc
pop
mov
sbb
inc
pop
pop
cmps
sbb
mov
mov
aas
test
test
shr
push
jno
sub
(bad)
clc
cmps
cmp
lods
(bad)
pop
lahf
ins
sbb
pop
xlat
repz
cwde
and
mov
leave
jg
mov
mov
mov
push
adc
or
fisubr
jno
popf
and
js
fwait
lahf
add
or
pushfw
sub
das
dec
sti
mov
xchg
dec
daa
in
jmp
fnstcw
push
pop
fld
leave
fistp
jg
aas
pushf
sub
push
cmp
adc
daa
mov
pop
mov
nop
stos
add
sbb
enter
push
cmp
or
cmp
jmp
shl
pop
scas
call
inc
jg
cmp
adc
clc
pcmpgtd
jmp
scas
sbb
inc
call
(bad)
imul
clc
dec
scas
dec
push
mov
(bad)
arpl
dec
sub
ins
les
pop
gs
into
out
jg
scas
sahf
out
pop
ss
push
dec
jne
stc
ds
lods
movs
lock
push
push
fdivr
data16
xor
neg
(bad)
mov
jb
pop
ficom
bound
add
jne
fdivr
jbe
sbb
xor
inc
and
xchg
sbb
cmp
sbb
cwde
into
add
mov
repz
fistp
mov
pop
xchg
outs
xor
mov
mov
pusha
data16
enter
stos
test
lahf
pop
nop
sahf
stc
adc
rcr
xchg
sar
sub
int3
add
les
pushw
out
mov
mul
jne
sub
sahf
jge
jbe
inc
mov
mov
pop
xchg
ror
dec
jmp
mov
sbb
jle
dec
cmps
je
enter
pop
mov
sub
mov
sub
sbb
ja
outs
mov
test
mov
inc
repnz
dec
hlt
call
dec
add
xor
add
imul
cmp
or
fcmovb
mov
mov
mov
push
sub
xor
fild
dec
mov
xchg
repz
rcl
iret
stc
add
xor
inc
lods
aaa
jmp
movs
sbb
sub
stc
xchg
ss
pslld
mov
test
addr16
cwde
in
inc
sub
xlat
js
xor
adc
mov
js
out
aad
out
xchg
jmp
xchg
imul
call
xor
enter
retf
neg
mov
pop
cmp
mov
mov
loope
cmc
dec
cmp
iret
add
adc
in
pop
add
sub
(bad)
dec
inc
stc
in
je
push
iret
cmp
test
and
cmps
scas
or
xchg
stc
mov
add
push
mov
pcmpgtd
mov
mov
or
xchg
mov
push
adc
gs
mov
shr
ret
shr
push
rol
add
add
mov
sbb
jecxz
nop
jecxz
cmp
inc
add
pop
jne
xchg
mov
mov
pop
scas
cmc
inc
mov
and
test
(bad)
daa
out
mov
adc
jle
das
sub
cdq
mov
ja
js
movs
test
push
mov
pop
loop
loopne
and
ret
mov
pop
jecxz
adc
mov
(bad)
out
push
push
dec
sub
gs
sub
add
(bad)
(bad)
cmc
jp
xchg
idiv
cmp
test
inc
stc
mov
push
xor
test
or
repnz
mov
dec
mov
ret
and
lods
sbb
cmp
push
mov
adc
pop
push
leave
in
jge
add
mov
and
jp
inc
mov
cmc
mov
jg
cmp
jl
dec
(bad)
jmp
shr
sbb
in
imul
cmps
or
pop
cmp
lock
mov
push
pop
out
ret
shl
add
cmp
arpl
jae
inc
and
mov
clc
es
stos
jae
test
outs
sub
jmp
mov
pop
dec
imul
xchg
scas
movs
xlat
sbb
mov
xchg
ss
sub
(bad)
call
pop
out
hlt
lahf
xlat
mov
dec
out
adc
das
inc
jg
test
icebp
push
sbb
dec
dec
adc
inc
je
jne
xchg
add
arpl
jmp
pop
in
xor
sahf
sub
aad
adc
sub
mov
das
test
stc
outs
cdq
jae
ficomp
jns
add
pop
sub
mov
pop
fbstp
dec
pop
imul
push
scas
stc
adc
(bad)
mov
inc
jne
sub
adc
or
jecxz
outs
or
sub
pop
in
adc
retf
adc
sub
test
fidiv
sbb
repz
push
sti
outs
adc
test
scas
fisubr
cdq
sub
js
jmp
(bad)
mov
cmp
pop
pop
jo
movs
mov
lahf
or
jg
sar
mov
mov
cld
out
fcom
loop
xchg
adc
enter
aad
movs
sbb
pop
outs
push
mov
sbb
dec
xor
call
stos
or
idiv
fimul
or
in
por
(bad)
xor
scas
bound
adc
outs
inc
(bad)
mov
movs
sub
test
repnz
(bad)
cmp
(bad)
scas
sbb
stos
idiv
push
inc
arpl
test
cmp
xchg
scas
test
data16
movs
sbb
fild
repnz
(bad)
jg
mov
mov
movs
ja
cmp
popa
jmp
aam
cdq
ret
jbe
or
pop
cmp
addr16
pop
fdiv
mov
arpl
jg
mov
xchg
pop
jnp
ret
mov
sbb
or
call
out
sbb
inc
out
mov
arpl
add
and
dec
inc
into
ss
sub
dec
inc
shl
fdiv
jb
jmp
jne
ins
cmp
mov
fnstsw
je
dec
nop
xlat
add
ud1
out
fld
and
sbb
inc
ret
inc
mov
inc
stos
push
add
fmul
outs
movs
or
mov
push
test
(bad)
fimul
sbb
mov
jg
cdq
mov
cmp
mov
jle
mov
lods
push
inc
mov
test
mov
fdivrp
dec
mov
sahf
push
jnp
inc
adc
or
pop
je
pop
je
enter
and
into
and
push
mov
inc
cmp
and
pop
xor
cwde
aas
ret
mov
cmp
imul
xchg
adc
jge
(bad)
jmp
(bad)
push
retf
adc
adc
rol
adc
loop
pushf
into
in
outs
lds
stos
leave
scas
pop
add
sbb
mov
or
mov
xchg
repz
ret
mov
js
movs
aas
xchg
ds
repnz
mov
leave
es
xchg
jecxz
retf
aas
ss
sub
xor
out
cs
outs
call
mov
sub
push
dec
cwde
sub
inc
call
lahf
neg
aad
(bad)
popf
sub
mov
dec
and
dec
push
lea
in
stc
daa
add
loopne
mov
jmp
push
stos
push
js
add
sub
xchg
add
mov
pop
inc
jg
ins
clc
mov
scas
(bad)
movs
ret
movs
dec
fidivr
cwde
out
fist
cwde
push
out
and
mov
out
inc
add
fimul
fwait
inc
out
pop
dec
movs
shl
cld
xor
popf
and
mov
cwde
cmp
or
pop
cmp
sub
xchg
cmp
enter
add
mov
test
inc
xchg
push
int
mov
dec
es
dec
sub
xor
mov
cmp
fld
or
jnp
add
xor
bnd
arpl
mov
lea
int
pop
cmp
push
mov
adc
cdq
fld
cli
jno
push
and
push
imul
gs
lock
or
clc
add
add
dec
dec
lahf
adc
arpl
cmp
add
xor
sub
jb
stos
jg
stos
repz
push
jecxz
mov
dec
test
sub
(bad)
adc
cmp
jne
and
push
xor
std
sub
dec
lahf
sbb
jp
iret
ds
adc
fidiv
lds
xor
in
push
mov
cmp
movs
or
sbb
or
call
sar
cwde
fidiv
sbb
imul
inc
(bad)
mov
std
xchg
loopne
dec
inc
scas
xor
jns
sub
cmps
ret
sub
mov
mov
cwde
sub
push
xor
sar
add
jns
add
jl
cmp
xchg
repnz
imul
lahf
call
mov
fld
adc
and
ins
inc
in
xor
cli
fs
call
mov
popa
lahf
inc
fisubr
dec
mov
cmc
jecxz
fisubr
jecxz
mov
sbb
leave
mov
jne
movs
lea
imul
test
ja
dec
add
push
cdq
sub
sbb
fs
and
push
iret
mov
pop
into
mov
mov
xchg
(bad)
xor
imul
mov
fbstp
mov
pop
jne
popa
aam
mov
cmp
into
dec
inc
js
push
bound
xor
jmp
inc
aaa
inc
fidivr
and
into
mov
rcr
fist
jne
xor
add
xchg
ds
and
push
jne
(bad)
xor
pop
rcr
jg
leave
out
push
mov
jecxz
fcomp
sub
push
fisubr
mov
push
popa
xchg
ss
dec
cmp
push
cmp
lock
push
mov
inc
aam
stc
jmp
cmp
and
iret
test
(bad)
out
stc
pop
dec
jb
adc
nop
dec
iret
pop
aas
push
jecxz
das
and
mov
push
stc
cmps
push
ds
dec
push
sbb
sti
add
imul
adc
add
or
xor
jae
cmp
hlt
movs
nop
movs
or
xchg
aas
or
pop
imul
scas
call
out
call
mov
xor
pop
sbb
sub
sbb
iret
sub
jns
xchg
push
push
(bad)
xchg
paddq
pop
mov
pop
mov
outs
stc
mov
cmp
cmp
inc
cmp
mov
adc
rol
cdq
jecxz
icebp
gs
cmp
jmp
xor
mov
lods
lods
jno
iret
je
jns
add
lahf
ins
nop
xchg
mov
sub
adc
ret
inc
ret
imul
xor
jns
jbe
pop
or
add
(bad)
ds
(bad)
ins
(bad)
sub
xchg
xchg
adc
int3
adc
push
xchg
out
aaa
sub
mov
repnz
xor
mov
retf
popa
jg
imul
push
mov
outs
xchg
push
call
mov
repnz
and
into
push
(bad)
lods
push
pop
iret
cs
ret
inc
nop
fcom
cwde
and
jmp
jae
iret
cdq
popf
fsub
mov
aam
add
fadd
pop
cmps
scas
retf
pushf
sbb
mov
aad
pop
loop
fist
shr
inc
aam
mov
adc
push
inc
ins
stc
arpl
test
mov
dec
or
out
das
jne
enter
xchg
adc
(bad)
mov
(bad)
push
and
pusha
mov
fs
pop
xor
xchg
adc
xor
jns
loop
es
mov
xor
(bad)
mov
inc
and
mov
aaa
call
push
lock
sub
out
scas
out
cmp
sbb
inc
stc
and
pop
cmp
loopne
leave
pop
cdq
inc
test
mov
stos
inc
rep
dec
test
nop
sub
lods
lods
ja
sub
lds
enter
mov
lock
repz
int
cs
pop
pop
repnz
test
(bad)
stc
out
or
test
jmp
mov
ins
ror
cmp
sbb
xlat
(bad)
inc
js
cmp
mov
imul
dec
iret
sbb
rcr
dec
mov
fld
stc
aas
fstp
sub
psubw
cmp
mov
mov
push
das
push
jge
call
sub
jmp
sbb
pop
mov
cmp
mov
call
mov
test
cwde
stos
daa
(bad)
mov
or
push
jns
test
adc
enter
loope
dec
stc
iret
leave
in
stc
scas
sub
(bad)
mov
lods
sub
mov
dec
mov
cs
das
fbstp
or
cli
pop
sub
mov
(bad)
pop
sub
shl
enter
ror
cld
fwait
lods
cmp
push
dec
dec
ror
sbb
(bad)
int3
adc
or
stos
inc
inc
cli
rol
retf
mov
jmp
dec
pop
jg
adc
xor
jne
jg
or
cld
xchg
adc
jmp
out
mov
and
cld
sbb
jecxz
push
sbb
scas
into
ret
dec
xchg
xchg
fbld
pop
sbb
outs
iret
retf
mov
out
nop
imul
fwait
or
dec
mov
pop
xchg
sub
mov
lahf
mov
ds
fwait
jge
jmp
arpl
cmc
xchg
mov
sbb
out
cmp
call
jge
sbb
mov
sub
jg
jo
inc
sub
(bad)
shr
inc
cbw
jecxz
push
mov
aas
add
pop
cmps
imul
mov
arpl
or
jge
cmp
mov
adc
inc
dec
not
sbb
or
(bad)
out
mov
xchg
fcomp
repz
add
adc
mov
pushf
jg
sub
stc
cli
or
mov
dec
lahf
xor
iret
iret
dec
sti
jle
je
ins
adc
sub
mov
leave
push
js
sbb
dec
ret
pop
and
imul
ja
mov
sbb
lea
xchg
jg
pushf
pop
and
nop
movs
cdq
ins
adc
sub
and
pop
ins
les
imul
ja
outs
mov
stc
add
dec
mov
jecxz
in
adc
push
inc
jns
mov
adc
outs
enter
fst
xchg
sbb
lods
dec
stos
inc
push
in
or
int
adc
out
ds
xlat
rcpps
jmp
adc
cli
(bad)
(bad)
rcr
fnsave
jmp
sahf
sbb
int3
sbb
dec
in
pop
pop
shr
jns
xlat
fist
inc
or
cli
push
(bad)
ins
and
outs
cmp
adc
mov
shr
add
mov
inc
add
inc
adc
jl
(bad)
cmp
adc
(bad)
outs
pop
jecxz
xchg
dec
xor
sbb
sbb
dec
push
mov
stos
push
push
jge
mov
call
mov
fadd
push
fbstp
stos
adc
call
sub
dec
xchg
scas
mov
mov
mov
jns
dec
loopne
adc
out
push
add
push
sub
push
cmp
sub
pop
repz
lahf
jns
and
cdq
mov
pop
(bad)
outs
add
sar
cmp
mov
mov
adc
or
cdq
repz
jae
jle
cmc
sub
aas
or
gs
mov
cmp
and
retf
xchg
or
es
pop
repz
sbb
mov
jb
jl
ins
mov
cmp
gs
or
sbb
scas
dec
fldl2e
dec
iret
pop
arpl
pop
icebp
sbb
movs
inc
jp
out
mov
sub
or
sbb
dec
pop
jns
movs
scas
mov
dec
and
(bad)
fstp
lods
or
pop
iret
push
ds
mov
push
and
pop
or
jmp
cmc
mov
mov
push
dec
mov
mov
dec
bound
push
js
push
jae
nop
ss
add
or
xchg
push
imul
inc
sub
std
push
mov
sub
jg
(bad)
or
das
(bad)
test
cld
mov
js
imul
lock
jp
sbb
mov
imul
dec
mov
inc
ror
sahf
push
fcmovu
fwait
std
lahf
sub
adc
ret
jne
xchg
xlat
pop
pop
mov
aam
mov
imul
outs
push
not
ficom
mov
jae
push
xchg
xor
repz
pop
test
sub
cmp
add
inc
sbb
shl
in
imul
(bad)
sub
jle
loopne
jmp
adc
cdq
das
les
pushf
push
adc
jg
shl
fldenv
test
psubb
leave
add
lahf
or
mov
mov
sub
inc
leave
pop
xor
push
neg
mov
jmp
enter
cmps
xor
xchg
out
out
or
jmp
jl
dec
adc
push
dec
fsub
(bad)
adc
inc
fcom
mov
inc
dec
ror
pop
pop
rol
jg
iret
aam
mov
or
mov
push
jg
and
adc
aad
xor
mov
lds
(bad)
xor
xlat
test
adc
stos
add
pop
bound
lock
fs
dec
add
stos
or
movs
jb
jl
out
iret
inc
test
test
jge
imul
jo
cmp
nop
outs
push
scas
adc
inc
out
sub
jae
mov
inc
outs
xor
pop
jmp
cdq
lahf
mov
arpl
cmp
call
mov
fwait
mov
call
mov
retf
sub
adc
xor
fwait
pusha
xchg
mov
jl
mov
test
mov
psubb
test
push
push
test
js
push
mov
pop
rol
mov
and
mov
dec
loop
dec
sbb
mov
pop
ret
fdivr
lea
jb
jno
dec
cmpxchg
mov
cmp
(bad)
ins
loope
sub
pop
lea
xor
fbld
adc
aad
loopne
test
mov
cmp
xchg
jle
pop
gs
ds
fst
cmp
add
fisubr
mov
sub
(bad)
aas
jmp
or
fucomip
aas
fdiv
in
dec
sbb
jl
dec
or
outs
add
mov
pusha
fsubr
pop
scas
out
sub
mov
mov
aas
and
test
fwait
jbe
pop
pop
xchg
out
inc
mov
sbb
sub
shl
jle
(bad)
mov
dec
pop
pop
jb
dec
sti
xor
pop
pop
mov
call
dec
mov
mov
xchg
mov
mov
scas
cdq
and
xlat
sub
mov
or
mov
cmp
sbb
mov
aas
cwde
or
outs
cmp
repnz
mov
jmp
push
jp
mov
mov
or
scas
(bad)
cli
idiv
std
ds
jmp
and
dec
mov
xchg
cmp
mov
test
pop
pop
pop
mov
or
aas
jb
aam
ret
cmp
test
mov
fisub
das
adc
push
mov
lahf
jl
inc
nop
dec
mov
mov
(bad)
jmp
add
test
cmp
pusha
mov
sbb
sbb
push
dec
or
popa
lahf
pop
xor
or
mov
mov
pop
push
out
outs
adc
fnstcw
xor
cmp
ins
adc
ds
push
pop
leave
jbe
mov
hlt
mov
or
jne
xor
jno
or
pushf
sub
(bad)
lock
jmp
test
mov
sub
mov
cmp
xchg
lods
push
popf
xor
push
rol
cwde
pop
pop
pop
in
push
pop
inc
(bad)
mov
in
add
pop
lods
ftst
jg
call
mov
push
idiv
cmp
lahf
sub
push
sbb
ds
mov
xchg
pop
jno
push
popa
arpl
xchg
add
lea
cmp
cdq
mov
leave
sub
inc
xor
adc
test
push
and
xor
je
loop
sbb
into
mov
outs
adc
jbe
mov
or
and
mov
into
xor
add
pop
loope
in
push
icebp
stos
sbb
and
add
pop
push
push
iret
xor
gs
mov
add
jl
unpcklps
mov
sub
sub
fiadd
into
loope
nop
cmp
and
into
out
jle
lods
lods
shl
and
or
loope
mov
jno
outs
pop
push
movs
or
jne
mov
push
xor
lods
out
(bad)
test
mov
sar
sub
xor
jmp
mov
jle
not
add
ss
mov
scas
ror
push
movs
push
jnp
sbb
loope
mov
push
jb
test
leave
(bad)
cmc
jb
stos
dec
push
add
adc
mov
jge
dec
sbb
xor
adc
push
add
jb
mov
add
jbe
enter
ror
retf
jp
sbb
and
add
mov
sub
sbb
cli
sbb
ret
sbb
mov
push
je
adc
add
stc
stc
adc
int
adc
mov
adc
push
cdq
imul
sahf
sbb
popa
jns
rol
pushf
or
adc
sbb
add
adc
mul
jp
and
xchg
add
mov
(bad)
pop
data16
je
add
xor
pop
ss
adc
adc
cdq
cmps
test
xchg
je
mov
(bad)
in
push
push
and
mov
jp
jne
lahf
mov
cld
push
push
(bad)
cld
rcl
adc
popf
inc
xchg
stos
pop
lahf
xchg
adc
cmc
xor
popa
out
adc
inc
xchg
cmps
inc
je
ret
mov
hlt
cld
pop
ficomp
imul
xor
xchg
xor
adc
jbe
lock
adc
lds
xchg
inc
rol
xchg
stc
add
inc
jp
cmp
adc
div
and
mov
aam
neg
cdq
xchg
xor
push
sbb
inc
arpl
les
adc
xchg
adc
jmp
cmp
in
test
mov
add
ins
adc
cld
mov
push
xchg
es
sbb
pop
xor
cdq
ret
pop
inc
mov
loopne
mov
adc
pop
xchg
or
dec
pop
iret
xchg
in
push
ret
jne
pushf
push
xchg
ss
adc
xor
adc
fdivrp
lahf
cld
ss
sub
inc
loop
push
stos
xchg
adc
sbb
mov
aaa
xchg
xchg
xchg
add
test
xor
imul
dec
test
movs
lods
pop
test
iret
xchg
cmps
in
loopne
add
dec
or
ret
and
sub
cmp
push
ret
inc
(bad)
loop
dec
stc
dec
jns
sub
stos
iret
popa
inc
in
lea
int
or
je
imul
shl
shr
jne
ror
jmp
(bad)
add
jmp
int
ins
out
movs
and
int
int
dec
cmp
mov
int
xchg
sub
dec
out
mov
or
fsub
movs
dec
gs
js
sub
aad
mov
mov
dec
cmp
ror
(bad)
in
sub
(bad)
movs
dec
xor
xchg
mov
imul
dec
retf
or
ja
test
mov
and
lods
into
cdq
fnstsw
sub
int
or
pop
jle
pop
cmp
push
pop
cmp
ins
fnstsw
sbb
cmps
push
shl
pop
movs
jbe
repnz
mov
sbb
fnstsw
call
sub
adc
shrd
jno
out
dec
sbb
popa
inc
sub
(bad)
test
test
lea
imul
xchg
or
dec
sub
ins
dec
test
adc
retf
push
gs
mov
dec
in
xchg
sbb
test
mov
outs
mov
int
dec
push
js
inc
out
inc
push
loope
test
loop
inc
inc
inc
push
mov
sti
pop
mov
fisttp
inc
dec
movs
prefetchw
and
jmp
jle
jle
fld
lods
seto
outs
xchg
out
sbb
and
punpcklbw
dec
outs
xor
dec
cmp
mov
shld
or
enter
fdiv
mov
movs
(bad)
pop
inc
and
aas
push
or
and
inc
inc
rcl
gs
mov
or
pop
jae
dec
bound
loop
loop
loop
and
outs
rcl
pusha
and
xor
and
iret
call
fisttp
clc
mov
iret
shl
inc
popa
inc
es
mov
imul
gs
(bad)
mov
call
mov
test
(bad)
outs
or
out
in
adc
jne
in
add
xchg
ret
out
gs
and
dec
jl
add
mov
dec
gs
in
nop
shl
adc
push
mov
cmp
ins
in
mov
lahf
mov
jecxz
push
rcr
pushf
mov
sbb
mov
adc
lea
jle
inc
out
dec
inc
clc
daa
fs
cwde
jno
adc
lods
jns
sub
jge
icebp
sub
cmps
cmp
addr16
cmp
sbb
mov
int3
js
pop
xchg
div
pop
and
jl
jmp
xchg
cmp
mov
push
mov
ret
inc
and
xchg
cmp
mov
jo
mov
pop
aam
sbb
clc
push
sti
data16
cmps
mov
jbe
test
rcl
cmp
xor
mov
idiv
js
sti
xchg
loopne
mov
iret
dec
push
jp
(bad)
arpl
add
js
addr16
inc
push
sub
mov
out
mov
inc
cmp
pushf
xchg
addr16
loope
push
mov
mov
push
pop
mov
inc
clc
inc
mov
addr16
jo
cmp
das
hlt
outs
test
pushf
fidivr
jo
mov
pop
hlt
outs
mov
nop
cmp
sub
addr16
mov
std
dec
mov
je
xor
mov
cmp
jmp
mov
inc
cld
addr16
rol
add
retf
mov
pop
mov
sub
rcl
sbb
xchg
mov
out
pop
cmp
mov
clc
add
and
outs
pushf
sub
pop
mov
add
mov
add
fwait
hlt
outs
lods
addr16
inc
cld
xchg
cmp
xor
jg
sub
shl
xor
dec
jg
xor
movs
mov
sbb
fldcw
inc
aam
mov
shr
dec
add
movs
add
fadd
mov
outs
adc
aad
push
popa
iret
dec
dec
cdq
inc
mov
fistp
mov
push
mov
xchg
dec
sub
adc
clc
push
add
push
add
mov
jae
lock
inc
xor
mov
ins
aaa
data16
inc
xor
push
lds
daa
push
sub
mov
icebp
sahf
adc
cmp
xchg
mov
inc
xchg
or
push
sub
sbb
mov
call
mov
mov
jae
push
out
fsub
inc
dec
mov
hlt
ds
jl
pop
xchg
adc
pop
jecxz
jo
das
and
lds
hlt
cmp
cdq
cmp
and
adc
mov
pop
add
lods
ret
repnz
neg
xlat
push
sub
mov
mov
sub
mov
adc
add
les
push
cmp
cmp
adc
pop
adc
or
or
das
push
bound
lds
jg
out
bound
retf
out
sti
jmp
and
mov
push
mov
test
mov
lods
push
imul
cmp
or
test
pop
fs
fisub
leave
sbb
jg
jnp
(bad)
loopne
and
mov
jmp
or
sub
lahf
scas
pop
xchg
out
cmp
or
and
ret
push
fwait
jecxz
pop
ins
(bad)
mov
mov
scas
jae
dec
out
cmp
sbb
jo
dec
aas
repz
pop
jg
(bad)
dec
psadbw
out
js
dec
aas
(bad)
mov
or
sub
jg
es
scas
xchg
sub
loopne
das
sbb
inc
mov
fs
fist
and
jnp
movs
or
jmp
scas
mov
sti
out
mov
sar
fwait
out
add
fstp
or
or
repz
fistp
shr
retf
pop
mov
pop
jae
and
mov
jns
movs
ja
fnstcw
add
sub
xchg
xchg
jmp
mov
(bad)
scas
sti
(bad)
out
out
jnp
xor
scas
fist
xlat
fwait
sar
adc
xlat
sti
imul
das
test
fwait
adc
scas
fld
xchg
inc
cmp
icebp
xchg
imul
jnp
lods
sub
or
fst
loop
ins
sub
sub
aaa
adc
and
(bad)
fstp
jnp
xchg
pop
cmp
(bad)
movs
pop
(bad)
xchg
out
mov
movs
lock
dec
mov
jg
pop
mov
xor
imul
jmp
gs
imul
shr
mov
scas
dec
retf
das
pop
dec
repnz
aam
lods
(bad)
sti
fcomp
sub
pop
add
les
pop
loope
mov
pop
mov
cmps
xor
imul
pop
lea
mov
fisttp
add
or
jne
dec
mov
out
ret
jp
inc
ins
ins
iret
inc
pusha
scas
ja
mov
lods
or
or
adc
inc
and
or
sahf
mov
in
dec
xor
sub
inc
cmc
stos
mov
adc
dec
setp
int
jg
add
mov
mov
shl
movs
or
push
and
push
mov
(bad)
inc
add
das
dec
push
push
sub
aam
and
sar
lods
mov
mov
es
xor
sahf
mov
scas
imul
and
test
jno
xor
int3
mov
jb
cld
gs
std
mov
rol
loopne
rcl
push
into
xor
xchg
jle
sahf
mov
or
jecxz
push
mov
out
adc
bound
popa
push
ss
xor
scas
cmp
outs
and
push
mov
out
lods
mov
outs
ret
out
xlat
data16
adc
loop
xchg
push
mov
push
into
(bad)
out
adc
mov
or
push
ins
gs
mov
retf
and
xchg
mov
out
dec
inc
and
and
sub
scas
push
add
stos
push
push
ins
arpl
pop
mov
fimul
inc
sub
sbb
push
mov
rcl
mov
add
dec
xchg
inc
cmp
and
nop
xchg
int
jae
push
shl
mov
fdiv
lods
push
cmp
movs
add
bound
cmp
adc
adc
mov
dec
adc
aas
int3
adc
sub
push
or
dec
inc
xchg
adc
mov
xchg
xor
add
je
mov
jp
mov
pushf
jp
pop
fs
fdivr
movs
dec
les
pop
pop
and
scas
adc
data16
push
or
push
sub
je
mov
das
ss
dec
push
mov
push
cdq
enter
fwait
repz
xchg
fdivr
lock
pop
jb
mov
hlt
cmp
sbb
sbb
int3
xchg
mov
jb
pop
bound
push
in
sar
cmp
jle
inc
rdpmc
stos
jbe
cmp
call
rcr
or
fs
xor
daa
and
test
les
add
les
in
xchg
aas
xchg
and
dec
xor
cdq
rcl
push
repnz
xchg
lea
sbb
movs
repnz
pop
add
fcom
pop
xchg
test
push
ffreep
xor
inc
in
int3
pop
sti
xchg
loop
in
xor
push
inc
mov
jmp
pop
into
test
jo
ror
je
scas
jbe
retf
paddb
pop
xor
ins
adc
(bad)
jmp
pop
mov
xor
fld
dec
and
add
and
xchg
push
and
rdmsr
dec
mov
aas
dec
mov
push
ins
sub
fsubr
mov
add
mov
scas
aaa
popa
inc
(bad)
mov
enter
mov
jo
mov
out
out
(bad)
scas
cmps
pop
jno
xchg
call
push
out
scas
xchg
sub
into
cs
stos
sbb
cmps
mov
das
push
out
jae
stos
mov
shl
push
and
scas
das
outs
xchg
into
pop
jle
mov
mov
test
ins
fisubr
fild
out
jae
add
jb
out
fwait
jg
aas
fstp
cli
jg
jg
mov
(bad)
mov
scas
fimul
retf
jle
jnp
cmp
fimul
fisttp
jnp
cli
das
pop
dec
fwait
retf
dec
sti
retf
and
mov
test
repz
stos
sub
dec
call
cmps
add
lahf
outs
icebp
or
scas
pop
imul
add
imul
or
scas
mov
adc
pop
sub
and
mov
cmp
(bad)
jo
cmp
mov
outs
xchg
mov
in
mov
bound
and
test
and
pop
out
mov
or
and
scas
pop
out
adc
out
fwait
in
mov
daa
scas
call
xor
fsincos
push
and
cmp
jmp
sbb
jo
adc
xor
pop
out
scas
adc
(bad)
stos
out
fwait
mov
(bad)
jnp
adc
clc
mov
jp
mov
fistp
sar
test
push
adc
sbb
sbb
inc
mov
bswap
dec
cmps
sub
jle
jmp
xlat
int
in
lahf
int3
mov
mov
pop
stos
pop
lock
test
mov
cmp
lahf
sub
pop
cwde
std
ror
test
jg
xchg
push
sub
rcl
jg
es
push
push
es
(bad)
aad
aad
aad
aad
push
es
push
push
es
(bad)
aad
aad
aad
aad
push
es
push
push
es
(bad)
aad
aad
aad
aad
push
es
push
push
es
(bad)
aad
aad
aad
aad
push
es
push
push
es
(bad)
aad
aad
aad
aad
push
es
push
out
test
(bad)
(bad)
adc
outs
xchg
stos
xlat
inc
test
and
xor
jge
mov
pop
jnp
push
ins
int
cmp
addr16
imul
test
pop
add
test
sahf
pop
mov
push
jb
(bad)
stc
imul
xchg
retf
cmp
sub
outs
jbe
mov
adc
adc
je
inc
test
ror
repz
mov
dec
cmc
sub
out
xchg
adc
adc
adc
xchg
mov
xchg
xchg
mov
push
adc
adc
adc
adc
xchg
mov
xchg
xchg
mov
push
adc
adc
adc
adc
xchg
mov
xchg
xchg
mov
push
adc
adc
adc
adc
xchg
mov
xchg
xchg
mov
push
adc
adc
adc
adc
xchg
mov
xchg
xchg
mov
daa
push
fs
jns
data16
not
stc
push
in
sti
cmp
inc
(bad)
popa
js
pusha
ss
mov
leave
mov
push
dec
jge
pop
pusha
cmp
aad
dec
xlat
out
dec
push
pusha
jge
inc
jge
clc
hlt
out
loopne
out
pusha
push
add
and
ror
jmp
cmc
sar
jp
inc
popa
adc
dec
sbb
(bad)
and
fcom
sar
pusha
ja
jo
push
ja
loope
loope
aad
loopne
addr16
jl
mov
ss
shl
rcl
arpl
pusha
not
out
cmc
retf
popa
push
pop
jo
push
ins
es
loope
shl
mov
adc
push
jp
jg
and
shl
jnp
pop
das
jnp
fwait
out
add
sub
inc
add
adc
pop
out
cmp
test
in
xchg
or
jnp
stos
xchg
(bad)
dec
jo
shr
fnstenv
jnp
sub
pushf
(bad)
out
ret
sahf
in
jmp
push
das
pop
pop
pxor
cmp
fld
push
das
pop
jae
mov
xchg
(bad)
out
or
pop
pop
or
mov
sahf
xchg
enter
pop
das
jnp
fcomi
scas
fcmovne
add
das
xor
sbb
xchg
imul
cwde
retf
mov
mov
aaa
jae
out
out
out
xchg
scas
xchg
ret
sti
mov
pop
jae
out
mov
aad
(bad)
out
adc
pop
jnp
fwait
out
mov
xchg
scas
mov
ja
ja
ror
lock
retf
jmp
jae
pop
pop
jmp
pop
sub
bound
or
scas
(bad)
mov
test
repz
pop
rol
mov
(bad)
fs
cwde
xchg
bswap
dec
ret
scas
mov
inc
leave
clc
pop
(bad)
clc
out
jle
pop
stos
daa
xchg
inc
jns
call
aam
cwde
add
imul
dec
cmps
and
inc
mov
xchg
jnp
or
out
add
sub
jnp
mov
or
dec
shr
movs
add
mov
add
add
fs
popf
adc
xchg
sbb
and
or
ja
xchg
push
repnz
xchg
neg
adc
sar
jmp
dec
scas
mov
rcl
mov
xchg
jne
inc
je
fstp
and
lahf
retf
mov
movs
in
inc
push
movs
add
out
mul
stc
adc
loop
bound
and
push
push
adc
xchg
les
adc
es
pop
cmps
dec
inc
scas
cmp
mov
inc
aaa
mov
inc
xchg
dec
popf
push
pop
inc
jns
dec
outs
and
inc
xor
jb
pop
dec
addr16
inc
sbb
inc
es
sbb
pop
punpcklbw
inc
jnp
mov
pop
push
arpl
sbb
jg
jge
je
pop
inc
sbb
xor
je
inc
pop
popaw
sbb
push
push
push
pop
inc
jnp
pop
and
pop
push
sbb
pusha
inc
adc
dec
outs
and
pusha
add
and
dec
inc
jle
inc
pop
dec
jns
bound
retf
dec
fs
pop
dec
and
push
sbb
jnp
dec
xor
aas
dec
jo
js
rcr
arpl
pop
push
add
push
imul
jb
push
pop
popa
adc
inc
adc
cmps
pop
jbe
je
and
sbb
inc
shufps
dec
jne
dec
cmp
pop
popa
js
pusha
mov
gs
je
pop
and
jge
data16
pop
xor
dec
jns
outs
pop
pop
inc
sbb
xor
je
dec
jno
and
xor
arpl
pop
dec
test
outs
jl
cmp
jne
adc
push
push
outs
sahf
subps
add
cmp
imul
pop
inc
mov
sbb
inc
push
push
dec
mov
push
jbe
inc
jp
dec
push
jne
inc
sar
mov
xchg
test
xchg
icebp
mov
jecxz
pop
cwde
mov
mov
repnz
mov
xchg
jmp
xchg
mov
test
xchg
mov
jmp
xchg
mov
mov
shr
(bad)
xchg
cwde
(bad)
lahf
test
scas
mov
mov
xchg
xchg
out
mov
xchg
mov
call
mov
lea
icebp
ret
out
xchg
mov
xchg
call
stos
mov
out
lea
nop
cwde
scas
ror
mov
mov
stos
fisubr
mov
jecxz
mov
mov
ret
repnz
xchg
fwait
(bad)
cld
cwde
stos
enter
xchg
mov
mov
in
sub
cmps
sar
mov
xchg
les
(bad)
xchg
test
jmp
mov
xchg
lahf
mov
xchg
lahf
out
leave
cld
cmps
xchg
add
test
mov
xchg
nop
mov
icebp
xchg
xchg
mov
lods
mov
mov
fst
rcl
les
test
mov
out
out
cmps
mov
les
xchg
mov
stos
mov
lods
cwde
mov
fwait
test
cwde
mov
jne
(bad)
hlt
or
add
mov
xor
cmc
xchg
jne
adc
sbb
add
adc
enter
xor
mov
mov
xchg
outs
test
nop
sub
inc
hlt
sbb
push
mov
nop
test
or
mov
stc
adc
inc
mov
cld
push
call
and
add
les
stos
sub
inc
lds
xchg
ja
(bad)
and
mov
xor
pop
cmp
and
push
mov
rol
bound
rol
lock
and
in
inc
mov
cmp
lock
xchg
xchg
test
adc
xchg
pop
mov
mov
adc
rep
mov
or
inc
jmp
xchg
sbb
mov
sbb
cli
stc
add
cmp
xor
(bad)
add
xchg
(bad)
cs
mov
lods
push
cmc
adc
add
or
jb
xor
scas
lds
cmp
and
xchg
add
jb
and
aas
sub
push
ss
imul
sub
das
jp
imul
xor
dec
xor
jns
sub
out
jb
dec
or
cmp
inc
add
(bad)
pop
dec
jns
ins
cmp
jno
cs
cs
mov
dec
sbb
push
push
adc
das
jl
gs
mov
and
pop
cmp
push
jbe
aaa
ja
pop
xor
aaa
and
xor
sub
popa
and
push
js
pop
dec
pop
push
jo
push
adc
scas
sub
dec
aaa
xor
jl
dec
sbb
fs
and
push
imul
mov
sub
adc
imul
mov
dec
cmp
sub
sub
outs
dec
cmp
stos
jle
push
add
dec
adc
sub
mov
jns
pop
push
dec
cmp
popa
imul
push
inc
push
dec
xor
pop
push
mov
or
jnp
sub
dec
adc
push
cmp
imul
or
and
add
xor
(bad)
(bad)
pop
cmps
ss
stc
retf
xlat
ficomp
cli
adc
dec
lea
mov
(bad)
icebp
std
xchg
rol
(bad)
mov
test
xchg
int3
xchg
out
in
int
fadd
ss
icebp
enter
mov
cli
hlt
and
sar
loop
ret
cmps
mov
cdq
repz
adc
mov
mov
out
mov
or
pop
adc
(bad)
test
repz
shr
loope
cs
(bad)
mov
in
fldenv
add
cdq
mul
clc
fxch
test
fcmovnbe
xor
sar
sbb
xchg
aam
in
ret
into
aas
inc
int
mov
stc
int3
pop
push
in
sti
stc
cmp
(bad)
shl
rcl
ret
mov
aad
mov
dec
(bad)
fsubr
adc
fptan
retf
out
jmp
mov
pop
mul
xchg
mov
(bad)
clc
fs
cmps
in
ret
mov
fisubr
cmp
call
fs
and
push
adc
or
pop
pop
jg
and
stc
ffree
or
jp
cmp
inc
push
das
sbb
add
push
push
push
inc
add
inc
push
cmp
in
inc
add
pop
cmp
je
adc
mov
fucomi
xchg
or
sub
outs
inc
sbb
inc
psadbw
(bad)
dec
sub
jge
and
xor
add
mov
inc
ds
dec
inc
and
mov
push
sub
pop
jle
add
cli
xchg
add
jl
push
and
aas
pop
out
sti
sti
pop
sbb
add
outs
push
adc
and
push
sar
cmp
daa
sub
outs
pop
inc
pop
arpl
std
stos
adc
push
sbb
cmp
leave
repnz
cmova
jnp
daa
adc
pushf
ffreep
sub
sbb
sbb
inc
js
xor
xor
outs
jl
pop
add
es
(bad)
cmp
sub
sbb
jmp
push
and
or
and
dec
aam
xchg
dec
jg
lds
ja
mov
cwde
repnz
pop
scas
jb
inc
jbe
js
jle
push
xor
dec
inc
js
add
dec
xor
fbld
xlat
xlat
or
pop
(bad)
out
mov
cvtps2pd
test
adc
int3
xor
or
(bad)
cwde
pop
push
sbb
icebp
(bad)
cmp
mov
xchg
jno
add
(bad)
test
nop
xor
xor
out
in
add
push
mov
stos
lock
das
hlt
xchg
shl
lods
xor
mov
mov
mov
and
out
ss
mov
adc
mov
mov
lods
xor
sbb
loope
jbe
sub
sar
(bad)
rcl
push
pop
mov
jne
adc
jge
aas
xor
out
in
ja
xor
pop
xor
je
sbb
jno
mov
mov
or
sub
ja
dec
dec
imul
test
inc
hlt
inc
je
jne
push
shl
fnstenv
add
popa
btc
xor
aas
mov
mov
mov
xor
pusha
xor
out
fs
daa
or
jae
fsub
sbb
cs
mul
pop
leave
jp
clc
ja
ins
clc
sub
leave
cmp
dec
es
mov
out
sti
ja
adc
imul
cwde
jmp
sbb
lods
mov
clc
out
cmps
in
js
or
sub
nop
test
and
mov
icebp
mov
pop
push
push
loop
in
jmp
fadd
push
sub
clc
lods
mov
cmps
mov
push
or
leave
mov
mov
int
shr
push
or
mov
mov
mov
nop
retf
imul
lock
cmp
and
ror
lods
lahf
neg
adc
rcl
in
rcr
or
mov
fdiv
hlt
stc
scas
ret
push
ds
sub
pop
aad
enter
xchg
mov
outs
fnstenv
xor
lods
mov
cs
mov
stc
cli
mov
pop
or
mov
popf
(bad)
clc
out
iret
jnp
pop
sub
mov
rcr
mov
sbb
test
scas
test
test
test
push
jo
mov
imul
leave
mov
dec
pop
jae
pop
in
mov
cmps
cli
test
pop
imul
out
repnz
pop
xor
leave
repnz
and
pop
jns
mov
test
add
or
or
or
jecxz
mov
adc
pushf
cmp
imul
outs
push
sbb
sub
jo
leave
mov
jbe
push
dec
sub
adc
je
das
adc
xor
pop
sahf
xchg
jmp
xor
sbb
jp
shl
mov
sysret
push
sub
add
mov
jle
cmp
sub
and
int3
cwde
nop
test
sub
ds
pusha
pop
add
xchg
stos
nop
mov
xor
xor
outs
fs
mov
adc
sub
pop
jnp
xlat
in
retf
push
push
dec
add
dec
sub
stos
rcl
dec
dec
add
inc
sub
dec
iret
pop
dec
cmp
sub
lahf
cmps
pushf
mov
add
pop
push
mov
rol
or
sbb
inc
jno
dec
mov
sub
xor
jb
outs
movs
mov
mov
push
push
or
sbb
iret
test
inc
cmp
cmp
dec
fs
mov
mov
aas
sbb
add
test
xchg
daa
or
or
push
jge
aaa
dec
mov
hlt
fist
push
xchg
in
xchg
xchg
(bad)
mov
dec
pop
push
push
aam
mov
mov
dec
inc
jae
mov
jmp
push
gs
inc
movs
xchg
pushf
mul
in
(bad)
movs
jecxz
adc
or
fwait
mov
dec
sbb
inc
inc
fimul
pushf
(bad)
sti
outs
push
dec
jb
inc
add
ret
mov
jne
jecxz
jmp
jle
popa
and
adc
xchg
mov
inc
pop
imul
ret
int3
test
xor
ss
mov
neg
mov
pusha
inc
mov
out
cli
retf
test
xor
fsub
cwde
stc
int
(bad)
cld
pop
push
push
jbe
add
lods
xlat
jmp
push
ins
fidivr
cli
rol
bound
adc
in
in
shr
sub
lahf
mov
call
mov
imul
in
icebp
int
lods
mov
dec
push
inc
cmp
rol
push
ds
mov
jecxz
jl
pop
lock
inc
xchg
(bad)
call
mov
push
cmps
pusha
cmps
stos
sub
(bad)
jns
inc
sbb
cwde
lds
call
loop
fistp
(bad)
push
popf
xlat
sub
cmps
xchg
js
jne
pop
clc
inc
sub
mov
inc
sti
dec
in
aad
mov
jne
sbb
pop
in
push
out
jne
pop
repnz
sar
push
stos
and
xchg
sub
cmp
leave
clc
jno
add
ss
jae
jl
and
(bad)
mov
jb
mov
dec
cmps
pop
movs
lock
fbstp
adc
mov
ds
adc
xlat
ret
loop
push
xchg
adc
imul
xchg
and
repnz
inc
loop
shr
lock
sti
daa
loopne
cmc
xchg
loop
xor
into
and
and
addr16
and
push
jecxz
mov
(bad)
dec
stos
push
ret
out
ret
adc
inc
mov
or
xor
jle
mov
je
aaa
shl
xor
push
pop
rol
xchg
daa
pusha
(bad)
repnz
mov
xchg
push
pop
movs
pop
aam
dec
xchg
jo
jns
lock
jbe
ins
adc
arpl
in
mov
jecxz
mov
movs
lods
cmps
xchg
pop
icebp
push
loop
(bad)
push
mov
jo
mov
mov
add
adc
icebp
inc
aam
inc
adc
pop
loope
mov
push
xchg
in
inc
inc
xchg
and
lds
hlt
and
push
scas
jge
dec
mov
fldcw
pop
dec
outs
dec
jno
scas
call
lea
pop
int3
ins
dec
mov
pop
cmp
clc
pop
push
leave
outs
cmps
sbb
sub
ins
lahf
out
mov
sub
scas
jg
imul
test
stos
push
sub
sub
jg
cli
lea
test
js
add
clc
jl
sbb
test
add
stc
dec
fucomip
cmp
fwait
sti
ret
arpl
inc
pop
jo
inc
mov
in
(bad)
sub
jg
dec
sub
int3
sbb
jg
jae
arpl
out
cdq
mov
arpl
jne
pop
sbb
or
retf
dec
leave
dec
or
lea
ror
leave
iret
loopne
pop
dec
ins
lods
sbb
jg
outs
outs
int3
jle
mov
nop
movs
cld
xor
and
js
nop
test
call
cmp
fxch
in
mov
pop
test
push
es
iret
mov
int3
mov
dec
(bad)
jmp
stos
scas
jle
fwait
sub
jg
lahf
aad
fwait
add
jge
sub
sti
aam
aad
out
add
push
sbb
add
sbb
call
icebp
dec
inc
pop
ss
xchg
(bad)
mov
mov
in
and
push
dec
pop
sbb
iret
mov
nop
(bad)
dec
and
xor
mov
inc
cmp
and
iret
mov
mov
or
dec
fcomp
and
jns
dec
adc
call
daa
pop
pop
sub
outs
lock
push
iret
lea
pop
pusha
sub
test
inc
adc
lods
dec
lock
add
adc
inc
ret
xor
push
and
lock
add
stos
sub
push
adc
add
xchg
ret
lock
add
fisub
dec
cwde
stos
push
xor
or
or
retf
xchg
stos
mov
in
clc
or
jg
out
aad
xchg
xchg
(bad)
sbb
aas
sbb
add
retf
or
cwde
dec
mov
mov
inc
mov
outs
add
aad
outs
push
out
xchg
aaa
add
bound
jno
in
retf
jmp
lock
inc
inc
outs
sbb
mov
test
mov
cmp
inc
jle
into
out
xchg
dec
fidivr
scas
xor
icebp
in
add
sub
push
call
cli
daa
std
jns
mov
mov
addr16
mov
cmp
pop
push
add
in
jno
aad
mov
push
push
inc
(bad)
ins
lods
mov
fadd
cmp
clc
jle
fisubr
mov
xor
inc
ss
in
pop
scas
mov
push
or
add
mov
mov
mov
pop
int
(bad)
xor
out
jo
adc
xchg
lahf
(bad)
sahf
fs
mov
sub
data16
mov
ins
aaa
cld
adc
addr16
mov
pop
ret
stos
cmp
cmp
out
int
cli
add
mov
ds
retf
cdq
mov
repnz
daa
inc
jmp
xor
dec
int
(bad)
jge
in
imul
gs
and
lods
test
mov
adc
test
pop
pop
iret
xor
shr
repnz
fimul
lds
test
ins
repz
inc
hlt
xor
sti
jmp
loop
test
loope
add
and
jo
dec
fbld
push
mov
fld
movs
aam
xor
push
movs
inc
push
sub
(bad)
popa
loopne
rol
mov
shl
add
aam
inc
inc
ret
out
adc
xor
cmps
lds
loop
adc
sbb
jecxz
mov
add
jg
int3
push
jecxz
int3
mov
inc
bound
add
repnz
xor
shl
xor
cmps
adc
inc
arpl
movs
xchg
xor
pop
jae
xchg
xlat
xor
push
loopne
xor
adc
fs
inc
mov
jb
mov
push
xchg
push
push
mov
mov
mov
add
rcl
inc
in
push
mov
inc
add
or
push
xlat
push
mov
and
xchg
xor
add
xor
lods
pop
fstp
push
mov
imul
pop
bound
rcr
sti
das
jle
cmp
adc
dec
and
std
lahf
jmp
jp
sbb
call
ins
mov
xchg
inc
mov
mov
pop
push
dec
into
pop
mov
pop
jns
pop
add
popf
cmp
jp
sub
fcmovnu
fcmovnu
or
js
pop
outs
push
inc
pop
pop
mov
stc
(bad)
ret
das
sbb
or
or
push
cmp
sub
or
lahf
fyl2xp1
gs
and
das
pop
sbb
ret
fdivr
jl
ins
jns
pusha
addr16
lods
fldcw
cmp
(bad)
stos
sbb
add
push
mov
lods
fucomp
lods
cmp
dec
and
stos
pop
sar
aam
ficomp
ja
xchg
int3
pop
mov
sub
(bad)
outs
imul
jl
add
nop
int
mov
mov
cmp
cmp
and
clc
sahf
(bad)
sub
xor
jmp
(bad)
jmp
add
retf
push
inc
push
shl
mov
and
jnp
push
fwait
add
cmps
mov
mov
inc
push
fcmovb
xchg
out
ror
pop
cmp
(bad)
fmul
aam
xchg
std
and
jge
stc
(bad)
ror
loope
fdivr
add
mov
add
movs
cmp
fs
aaa
adc
mov
sbb
test
in
xchg
dec
pop
jge
test
lods
push
adc
jb
mov
jmp
inc
pop
in
mov
xor
mov
cmp
lea
xchg
cmc
or
sti
gs
js
push
lea
fst
mov
jae
jbe
mov
ret
xchg
std
pop
or
dec
push
fwait
enter
mov
jb
dec
mov
(bad)
mov
and
aad
xchg
js
or
cmp
ins
addr16
ret
stos
mov
retf
add
ror
push
ret
and
scas
fdivr
jecxz
inc
mov
pop
push
jae
jnp
in
repnz
dec
popa
mov
int
(bad)
ror
pop
enter
push
dec
jo
ins
mov
mov
mov
lods
cmc
fwait
dec
nop
pop
popf
xchg
lods
cwde
imul
test
add
xchg
mov
add
xchg
out
pop
add
xchg
mov
sbb
jecxz
sub
into
mov
sar
ds
push
pop
xchg
pop
adc
outs
xchg
adc
push
arpl
aas
out
jno
push
addr16
add
movs
adc
or
push
dec
push
mov
jecxz
dec
js
jo
(bad)
pop
jle
mov
mov
pop
jmp
cdq
mov
push
jle
add
lods
push
test
inc
add
push
das
adc
xor
movs
popf
les
push
jae
cmp
pop
arpl
push
pusha
sub
outs
das
mov
push
push
sbb
push
iret
repz
movs
adc
xor
ficomp
xor
xchg
mov
mov
jle
jl
inc
xchg
stos
xchg
lock
inc
into
sar
push
loope
inc
mov
jne
push
jae
lahf
inc
inc
add
dec
pusha
inc
mov
push
xchg
or
sub
fmul
jp
outs
imul
add
loopne
mov
and
fld
fcomp
pop
sahf
sar
dec
(bad)
push
scas
sub
xlat
adc
dec
sahf
push
mov
mov
cmp
outs
push
push
pop
mov
push
push
xchg
push
push
outs
push
sub
cli
ds
scas
jae
out
xchg
out
xchg
sub
push
push
rcr
push
scas
icebp
push
imul
das
adc
xchg
jg
sahf
mov
add
push
xor
push
daa
pop
jge
pop
mov
fisttp
(bad)
ss
push
xchg
mov
jbe
pop
mov
xor
jmp
jg
sub
jb
dec
ins
mov
push
mov
stos
popa
sar
push
pop
pop
in
outs
dec
dec
mov
sar
xor
cld
or
fsubr
imul
adc
pusha
dec
add
int
push
ds
das
jns
jle
popf
adc
aas
fdivr
test
ins
or
mov
xchg
mov
(bad)
adc
pop
fist
cmc
or
rol
fs
enter
(bad)
lahf
loop
add
movs
int
and
xor
mov
jge
test
dec
sub
add
icebp
ins
mov
mov
ret
pop
movs
add
test
adc
rcl
data16
movs
cli
mov
fs
fsubrp
js
retf
les
mov
pusha
loop
cmp
ret
in
pop
(bad)
inc
movs
rcr
xor
mov
fcom
cdq
rol
push
(bad)
hlt
jbe
dec
std
fs
(bad)
leave
int3
outs
jmp
aam
fs
out
dec
dec
add
retf
shr
popf
and
ret
pop
mov
mov
test
fmul
ins
dec
rol
test
push
je
xor
jp
xchg
ret
lods
int3
movs
sbb
mov
dec
mov
add
mov
fsub
push
(bad)
mov
jne
xchg
call
mov
dec
or
xor
and
loop
ret
or
mov
xor
inc
adc
jmp
fs
adc
test
pushf
jne
pop
add
xor
test
cmp
ret
inc
xor
lds
je
in
movs
and
pop
push
test
mov
and
mov
ins
jb
push
retf
clc
int3
lods
and
ror
and
ret
out
loop
adc
fild
and
mov
clc
fwait
fs
addr16
cmp
pushf
repnz
rol
ds
xor
jg
movs
and
push
xor
int
and
mov
mov
and
xor
xor
inc
scas
push
or
mov
pop
rcl
int3
inc
cld
fs
mov
push
aas
mov
shr
dec
fmul
pop
adc
pusha
xor
movs
fisubr
sub
aaa
lds
xor
rcl
sar
dec
jmp
mov
xor
in
mov
jnp
inc
lods
and
mov
xlat
pushf
jle
jb
inc
xor
stos
jge
lods
stos
mov
and
hlt
ret
jge
mov
scas
adc
mov
and
mul
pop
std
and
mov
ret
sbb
sub
fsubr
adc
mov
inc
aaa
movs
pop
mov
xor
mov
out
cmps
mov
inc
in
push
repnz
mov
mov
inc
iret
pop
push
retf
and
bound
sbb
stos
ret
pop
push
stos
push
jmp
mov
test
ret
xchg
jne
ins
scas
sub
inc
gs
fs
mov
xor
xor
jp
xchg
jns
movs
shl
pusha
aas
sbb
cmp
sbb
mov
ja
add
pop
enter
lods
icebp
scas
xor
jno
and
mov
leave
mov
in
cli
cld
add
sbb
popa
cmp
stc
mov
(bad)
ficomp
test
leave
mov
push
mov
sbb
mov
sbb
and
mov
stc
xor
sbb
jl
add
in
neg
jmp
test
xor
xlat
sbb
sbb
test
mov
ja
popf
sub
jbe
std
xchg
(bad)
stc
mov
cwde
fnstcw
stc
ret
rcr
xchg
popa
stc
mov
mov
or
sbb
or
fs
lea
mov
sbb
push
test
ret
or
fmul
cmp
test
push
jge
jmp
arpl
(bad)
in
imul
sahf
adc
sbb
clc
dec
(bad)
sbb
xchg
ret
fsubr
out
in
sbb
sub
call
out
jp
jbe
popf
pop
loop
cs
scas
pushf
retf
popf
and
push
pushf
mov
pop
clc
or
out
jmp
fdiv
jns
stc
dec
shr
sbb
fldenv
in
xor
stc
test
jp
pushf
jmp
xchg
xchg
fdivr
mov
jae
adc
call
scas
cdq
call
(bad)
ss
fsub
mov
dec
inc
jmp
(bad)
mov
sub
popf
xchg
cmp
or
stc
(bad)
stc
pop
ret
mov
mov
cdq
pop
je
(bad)
sub
jge
dec
pop
mov
frstor
jge
pushf
outs
jle
xchg
stc
and
xchg
arpl
mov
sbb
(bad)
cwde
xchg
jbe
xor
icebp
nop
outs
mov
sub
or
jmp
cdq
mov
xchg
loope
mov
xchg
sub
mov
adc
inc
mov
jbe
cdq
jae
leave
sar
mov
test
push
xlat
leave
stos
fdivr
(bad)
scas
dec
jo
std
int
(bad)
js
es
sbb
jnp
sbb
cmp
xchg
add
adc
sbb
jmp
jmp
and
fidiv
sub
out
stc
js
out
sbb
adc
(bad)
leave
pop
out
(bad)
in
hlt
call
ins
int3
mov
add
xchg
mul
out
into
inc
dec
fisttp
out
imul
(bad)
jmp
mov
psubq
jmp
ins
stos
cmp
jae
or
rcr
mov
jp
ds
movs
jp
shl
sti
gs
push
clc
ins
mov
xor
mov
xchg
aad
mov
mov
scas
lds
jnp
movs
or
rcl
(bad)
adc
jne
ins
ret
in
or
sub
iret
sub
xchg
fld
dec
xchg
leave
push
cmp
inc
jnp
adc
add
imul
fnstsw
inc
mov
out
sub
cs
cmp
fnsave
and
adc
cmps
inc
fldcw
call
lea
iret
and
cdq
mov
xchg
xbegin
adc
aaa
and
mov
je
(bad)
or
mov
xchg
and
cmp
call
push
fadd
add
or
xlat
stos
pop
jns
push
aam
(bad)
pop
enter
and
(bad)
lahf
and
(bad)
frstor
out
push
mov
clc
mov
sub
cmp
loope
daa
mov
fisttp
jbe
xlat
enter
js
mov
out
mov
neg
mov
ja
xchg
xchg
shl
push
cmc
mov
sbb
js
mov
fnstcw
icebp
imul
call
sub
(bad)
xlat
fnsave
movs
mov
test
xlat
not
fdiv
inc
call
(bad)
or
xchg
int3
in
lods
je
sub
jmp
iret
adc
xchg
loop
mov
and
push
adc
mov
fs
(bad)
ja
je
xor
cmp
pop
cmp
jl
mov
loope
cmc
je
push
xchg
jnp
and
or
loopne
cs
je
out
in
sub
je
inc
in
test
icebp
repnz
sub
sub
std
mov
aad
ret
rcr
out
mov
jnp
sub
je
or
repnz
push
mov
enter
xor
mov
xor
xor
xchg
lea
in
ins
add
sub
(bad)
adc
cdq
sub
bound
imul
sbb
aam
ins
add
push
xchg
enter
ret
in
mov
in
push
jge
mov
add
mov
in
leavew
jbe
add
jp
stos
adc
ins
mov
jno
add
jnp
inc
mov
mov
loop
add
xor
in
xchg
jmp
mov
das
sub
out
out
mov
jae
jnp
or
xchg
je
icebp
aaa
(bad)
mov
add
push
stos
retf
sbb
and
cmp
test
xchg
pop
retf
mov
and
fld
sahf
push
rcl
movs
or
pop
dec
in
and
test
popa
nop
push
mov
ins
add
sub
rol
sbb
inc
int
xor
minps
sub
xor
mov
jne
imul
pop
jns
sub
stos
stos
pmaxub
sub
neg
fdivrp
stos
fimul
sub
push
lea
jecxz
ret
jg
push
xchg
mov
sub
shl
jmp
jmp
aas
(bad)
lock
adc
jmp
push
sbb
push
pop
ds
ret
jmp
retf
xchg
iret
mov
(bad)
movs
iret
and
popf
add
mov
ins
inc
push
push
fimul
inc
sbb
sub
sub
pop
cs
fwait
push
stos
mov
push
sub
mov
pop
sub
aam
and
mov
cli
lds
cvtpi2ps
ffreep
or
cmp
adc
sahf
xchg
jnp
(bad)
mov
or
and
lea
sahf
fstp
push
xor
pop
movs
mov
xlat
scas
mov
outs
xchg
fnstsw
bound
test
inc
add
xchg
xor
mov
ins
mov
int
xlat
xchg
sbb
push
cs
stc
jg
xchg
mov
mov
mov
repnz
xor
loop
add
jg
mov
jb
jg
(bad)
scas
mov
mov
aas
inc
ret
adc
adc
or
mov
scas
pop
pop
out
inc
or
mov
pop
jl
sahf
xor
pop
mov
mov
xor
jl
and
jle
xor
push
mov
cmp
add
mov
inc
lahf
loop
ins
arpl
push
pop
xchg
cld
lods
fwait
jge
repz
jno
and
cmp
push
adc
or
popf
mov
jo
cld
pushf
mov
mov
out
jb
jecxz
rcr
mov
or
inc
mov
in
mov
daa
loop
inc
in
bound
les
mov
jmp
add
mov
jmp
ins
rcl
add
mov
stc
popf
repz
mov
(bad)
fwait
movs
stos
jae
mov
sbb
test
arpl
aad
xchg
stos
test
mov
dec
cmps
(bad)
fnsave
inc
inc
mov
sub
xchg
lods
xor
outs
mov
inc
push
pusha
or
mov
push
mov
popa
ins
adc
inc
jge
pop
xor
popa
mov
and
add
daa
push
pop
das
pop
daa
ret
add
cmp
popa
dec
push
or
cmp
(bad)
test
or
adc
xor
or
mov
add
mov
sbb
retf
fwait
pop
adc
jne
call
sar
js
sbb
enter
jl
daa
retf
cli
xchg
push
popa
cs
push
dec
xor
cmps
cmp
out
push
jl
test
cs
neg
popa
jl
sbb
push
adc
scas
outs
inc
sbb
mov
scas
loopne
push
scas
mul
mov
(bad)
mov
adc
jb
add
inc
cmp
test
enter
dec
mov
and
or
pop
or
ins
push
or
inc
dec
cmc
pop
add
or
or
cs
and
and
xchg
xchg
dec
and
cmp
add
inc
and
adc
add
mov
dec
push
pop
mov
sbb
mov
(bad)
jb
xor
mov
pop
popf
loope
inc
xchg
sbb
cmps
mov
xchg
add
push
xchg
push
push
shl
jo
xchg
fimul
mov
sbb
ret
xchg
cs
mov
icebp
test
sub
fwait
loop
call
ds
xchg
mov
not
in
xchg
test
test
es
and
push
call
xor
mov
fcom
clc
jns
lea
mov
push
ficomp
sub
dec
out
jne
jmp
cmp
mov
das
add
in
in
pop
dec
push
xchg
jo
jbe
imul
add
xor
mov
lock
gs
push
in
ja
(bad)
loop
je
dec
(bad)
mov
and
pusha
cwde
out
jns
test
sbb
sbb
mov
sti
out
adc
jne
test
push
jp
and
or
cwde
mov
enter
cmp
(bad)
jl
push
xor
addr16
cmps
inc
test
outs
(bad)
cmc
add
and
mov
repz
xchg
adc
aas
repnz
in
sti
lahf
push
cmp
je
int
fsub
mov
ins
dec
or
pop
pop
popa
inc
ins
test
lods
dec
ja
mov
fmul
mov
mov
jne
or
imul
jge
mov
mov
or
arpl
cli
leave
cwde
or
lods
aaa
inc
ds
add
push
sbb
(bad)
sti
repnz
mov
xor
leave
mov
mov
xchg
ror
xchg
add
loop
pop
cmp
in
out
or
mov
push
jecxz
push
test
xor
mov
inc
fst
add
mov
sub
mov
test
aam
fs
sub
jne
fdiv
cmc
push
mov
xchg
and
mov
test
(bad)
leave
inc
je
aam
data16
imul
and
cmps
mov
retf
mov
jnp
mov
(bad)
adc
inc
xor
mov
jae
movs
dec
sahf
mov
add
add
je
call
xchg
xchg
retf
sahf
jg
daa
add
leave
mov
and
aaa
sub
enter
fs
inc
jl
mov
das
mov
pusha
xchg
shr
xchg
jb
push
push
cdq
add
sbb
cli
test
ins
dec
mov
sub
or
adc
and
pop
ror
jg
scas
mov
add
fcomp
cmp
mov
push
hlt
ret
mov
cmp
(bad)
push
pop
inc
movs
xchg
in
add
mov
or
pop
mov
jge
mov
into
movs
stc
ret
pop
test
cmp
jns
cli
in
adc
adc
ins
(bad)
jle
popa
(bad)
adc
(bad)
mov
sub
jns
loop
(bad)
xor
stc
js
dec
rcl
jns
push
and
push
xor
sbb
push
movs
cmp
pop
lock
imul
fmul
or
and
outs
adc
push
movs
push
push
add
pop
or
cmp
push
jb
outs
inc
stos
sub
xchg
xor
icebp
dec
sbb
push
int3
xchg
ret
out
outs
lahf
or
idiv
jo
mov
les
pop
add
fsub
pop
push
xchg
cmp
dec
jbe
adc
nop
and
std
jge
pop
cmp
push
sbb
inc
pop
pop
push
cmp
mov
adc
gs
push
inc
leave
ret
sbb
push
out
or
clc
das
dec
push
out
aad
cs
mov
xchg
jmp
inc
mov
nop
push
clc
nop
mov
mov
arpl
ja
adc
pop
dec
cmp
add
in
xchg
mov
out
mov
sbb
or
and
or
pop
mov
ror
vsqrtss
clc
adc
iret
fisubr
xchg
daa
jns
scas
dec
pop
mov
(bad)
lock
test
mov
dec
cmp
mov
jmp
jecxz
je
in
repnz
cmp
inc
ja
push
pop
dec
add
add
lods
int
inc
dec
fistp
scas
in
mov
jnp
mov
test
repz
ds
sub
leave
xor
daa
mov
jo
xchg
push
sub
int
or
mov
mov
mov
xlat
stos
mov
xor
fsub
daa
mov
cmp
imul
push
dec
in
mov
ins
inc
adc
(bad)
cmps
cld
ror
lea
out
ficom
in
arpl
inc
adc
sbb
adc
sub
gs
push
xor
(bad)
lds
je
(bad)
test
aam
movs
add
dec
scas
mov
das
dec
jb
inc
stc
lods
push
push
mov
std
inc
mov
in
mov
arpl
lea
xchg
xlat
sub
outs
mov
xchg
cdq
mov
sbb
movs
jg
lods
jmp
mov
mov
in
inc
jle
test
movsx
fbld
jecxz
les
loopne
jbe
movs
adc
add
and
or
(bad)
shl
and
mov
and
or
add
scas
test
loopne
sub
dec
push
out
push
mov
stos
in
das
(bad)
sahf
mov
mov
aam
into
outs
sub
lds
aas
(bad)
xchg
and
inc
ret
inc
cld
addr16
inc
inc
xor
sbb
jb
lahf
mov
sub
push
gs
rcl
imul
loop
jmp
shl
fisttp
inc
in
(bad)
jo
add
lsl
movs
and
dec
bound
popf
or
mov
ss
(bad)
clc
add
ret
movs
std
jo
xchg
ret
jbe
xlat
inc
test
scas
iret
xor
pop
add
push
mov
mov
dec
rol
push
or
mov
loopne
scas
pusha
(bad)
jge
sbb
lea
out
sbb
mov
dec
out
test
mov
(bad)
das
scas
scas
jle
(bad)
xchg
sti
mov
pop
stos
das
cdq
xor
scas
or
jo
cdq
fistp
xor
jo
dec
mov
fisttp
(bad)
pop
dec
shr
jb
test
iret
imul
sub
dec
out
jp
dec
mov
imul
xor
xchg
leave
or
pop
mov
stc
out
mov
aad
rol
xor
pop
out
inc
sub
in
xor
in
adc
inc
call
pop
xchg
(bad)
sbb
mov
add
dec
popa
pop
mov
lods
jae
sub
fdiv
mov
add
jecxz
std
sbb
cdq
fidivr
mov
mov
jmp
adc
or
jge
sbb
sbb
pop
scas
pop
or
sub
sbb
pop
ins
or
scas
jecxz
sbb
(bad)
jns
cmp
dec
jp
cdq
icebp
sub
call
dec
pop
adc
imul
dec
in
call
mov
inc
push
call
test
pop
pop
mov
je
push
push
push
call
add
jmp
and
mov
mov
pop
pop
pop
ret
push
mov
push
mov
mov
mov
mov
test
mov
push
je
test
je
push
call
mov
inc
push
call
test
pop
pop
mov
je
push
push
push
call
add
jmp
and
jmp
mov
pop
mov
pop
pop
ret
cmp
mov
je
push
call
pop
ret
mov
test
jne
mov
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
push
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
jmp
pop
leave
ret
pop
pop
xchg
jmp
push
mov
push
push
push
push
push
mov
mov
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
cld
mov
xor
push
push
push
push
push
push
push
push
call
add
mov
pop
pop
pop
mov
mov
pop
ret
push
cld
mov
mov
xor
call
push
push
push
push
push
push
push
push
call
add
pop
ret
push
mov
sub
push
cmp
jne
mov
mov
mov
xor
inc
jmp
and
mov
mov
lea
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
and
and
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
lea
push
mov
push
call
pop
pop
and
cmp
je
mov
mov
mov
mov
mov
jmp
mov
mov
mov
pop
leave
ret
push
mov
push
push
cld
mov
mov
xor
call
mov
mov
and
je
mov
mov
xor
inc
jmp
jmp
push
mov
push
mov
push
mov
push
push
push
mov
push
push
call
add
mov
cmp
jne
push
push
call
push
push
push
push
push
lea
push
push
call
add
mov
mov
mov
mov
jmp
xor
inc
pop
leave
ret
push
mov
push
push
push
push
mov
mov
mov
mov
mov
jmp
cmp
jne
call
mov
dec
mov
imul
add
mov
cmp
jge
cmp
jle
cmp
jne
dec
mov
mov
cmp
jge
mov
inc
mov
mov
mov
cmp
ja
cmp
jbe
call
mov
imul
add
pop
pop
pop
leave
ret
mov
push
mov
mov
call
mov
mov
call
mov
mov
pop
ret
call
mov
jmp
mov
cmp
je
mov
test
jne
inc
ret
xor
ret
push
call
mov
cmp
jne
call
mov
mov
pop
ret
call
mov
jmp
mov
cmp
je
mov
cmp
jne
pop
jmp
mov
mov
pop
ret
push
mov
sub
mov
and
lea
xor
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
lea
mov
push
push
push
call
mov
mov
mov
mov
leave
ret
push
call
test
pop
je
call
push
call
push
push
call
add
jmp
push
mov
sub
mov
push
push
push
pop
mov
lea
rep
mov
mov
test
pop
mov
pop
je
test
je
mov
lea
push
push
push
push
call
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmp
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
push
call
and
dec
js
mov
sub
mov
call
jmp
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
ret
call
mov
mov
call
ret
push
push
call
and
mov
mov
imul
add
and
dec
js
sub
mov
call
jmp
mov
mov
call
call
ret
cmp
jne
push
push
push
push
call
ret
push
push
push
call
add
ret
jmp
push
push
call
xor
mov
mov
mov
mov
cmp
jge
mov
mov
call
add
mov
inc
jmp
mov
mov
call
call
ret
cmp
jne
push
push
push
push
call
ret
push
push
push
push
push
push
call
push
mov
mov
call
mov
cmp
pop
pop
jb
mov
sub
lea
cmp
jb
push
call
mov
cmp
pop
jae
mov
cmp
jae
mov
add
cmp
jb
push
push
call
test
pop
pop
jne
lea
cmp
jb
push
push
call
test
pop
pop
je
sar
push
lea
call
pop
mov
push
call
mov
add
push
call
pop
mov
mov
pop
jmp
xor
pop
pop
pop
pop
pop
ret
push
push
push
call
mov
push
call
add
test
mov
mov
jne
push
pop
pop
ret
and
xor
pop
ret
push
push
call
call
and
push
call
pop
mov
mov
call
mov
call
ret
call
ret
push
call
neg
sbb
neg
pop
dec
ret
cmp
jne
call
push
call
push
call
pop
pop
ret
cmp
jne
mov
cmp
jne
cmp
jne
cmp
jbe
xor
cmp
setne
mov
ret
xor
ret
push
push
call
and
lea
push
call
mov
mov
push
push
mov
call
push
call
mov
test
jne
push
call
pop
jmp
mov
push
call
push
push
test
jne
call
push
call
jmp
mov
mov
mov
mov
mov
mov
mov
and
call
push
call
mov
cmp
je
or
mov
mov
shl
mov
add
mov
mov
mov
mov
mov
call
mov
xor
inc
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
test
je
push
call
pop
call
test
je
movzx
jmp
push
pop
push
push
push
push
call
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmp
jne
push
call
call
mov
mov
jmp
xor
inc
ret
mov
mov
mov
call
ret
call
jmp
push
push
mov
push
xor
or
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
test
je
push
call
push
mov
call
push
call
push
call
add
test
jge
or
jmp
mov
cmp
je
push
call
pop
mov
mov
mov
pop
pop
pop
ret
push
push
call
or
xor
mov
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
test
je
mov
mov
call
ret
push
call
pop
mov
push
call
pop
mov
mov
call
jmp
mov
push
call
pop
ret
push
mov
sub
mov
xor
mov
mov
push
xor
cmp
push
push
mov
jne
call
push
push
push
push
push
mov
call
add
xor
jmp
mov
cmp
je
jbe
mov
cmp
je
push
call
mov
lea
mov
inc
cmp
pop
ja
mov
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
mov
cmp
je
lea
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
mov
cmp
je
push
lea
lea
push
push
push
push
push
call
add
cmp
je
cmp
je
cmp
jne
push
push
push
push
push
call
add
jmp
push
mov
push
push
lea
push
push
push
call
add
test
je
push
lea
push
push
push
push
push
call
add
cmp
je
cmp
push
pop
je
cmp
jne
push
push
push
push
push
call
add
cmp
jb
call
mov
mov
cmp
jbe
dec
jmp
mov
push
call
pop
push
call
mov
cmp
pop
jne
mov
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
lea
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
push
push
push
push
call
add
ret
push
mov
sub
push
mov
push
xor
cmp
mov
mov
mov
jne
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
push
push
push
push
call
mov
add
cmp
je
mov
cmp
mov
jg
jl
cmp
jae
call
push
pop
mov
jmp
cmp
jl
jg
cmp
jbe
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
call
lea
push
call
test
pop
je
push
push
push
push
push
call
add
lea
push
call
test
pop
je
push
push
push
push
push
call
add
lea
push
call
test
pop
je
push
push
push
push
push
call
add
mov
mov
cmp
mov
jl
jg
cmp
jbe
mov
cdq
sub
lea
push
sbb
push
mov
mov
call
cmp
pop
pop
jne
cmp
je
push
call
test
pop
je
mov
cdq
sub
lea
push
sbb
push
call
cmp
pop
pop
jne
mov
jmp
push
push
call
cmp
pop
pop
jne
cmp
je
push
call
test
pop
je
mov
mov
add
cdq
mov
mov
mov
mov
cdq
mov
sub
mov
sbb
mov
mov
jmp
mov
cdq
mov
mov
mov
cdq
sub
sbb
mov
mov
push
push
push
push
call
cmp
mov
jge
add
add
adc
mov
push
push
push
push
call
mov
mov
mov
cdq
push
add
adc
push
push
push
mov
call
cmp
mov
jge
add
add
adc
mov
push
push
push
push
call
mov
mov
mov
cdq
push
add
adc
push
push
push
mov
call
cmp
mov
jge
add
add
adc
mov
push
push
push
push
call
cmp
mov
jl
jg
cmp
jbe
mov
add
push
cdq
pop
idiv
add
mov
add
xor
pop
pop
pop
leave
ret
cmp
jg
jl
cmp
jae
mov
lea
cdq
push
pop
idiv
add
mov
cmp
mov
jg
add
add
add
dec
mov
mov
jmp
push
call
mov
test
jne
pop
ret
push
push
call
neg
sbb
pop
not
pop
and
pop
ret
push
mov
push
push
lea
push
call
mov
mov
push
add
push
adc
push
push
call
mov
test
je
mov
mov
leave
ret
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
mov
jmp
xor
cmp
setne
cmp
je
push
call
mov
push
call
pop
pop
mov
mov
dec
test
je
mov
movzx
push
push
call
pop
pop
add
cmp
jne
or
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
xor
jmp
xor
mov
cmp
setne
cmp
je
xor
cmp
setne
cmp
je
call
mov
cmp
jne
call
mov
jmp
mov
cmp
jne
call
mov
push
lea
push
push
call
add
jmp
push
push
push
push
call
add
mov
mov
call
mov
call
ret
push
call
pop
ret
push
push
mov
mov
mov
and
xor
cmp
jne
test
je
mov
push
mov
sub
test
jle
push
push
push
call
pop
push
call
add
cmp
jne
mov
test
jns
and
mov
jmp
or
or
pop
mov
and
mov
pop
mov
pop
ret
push
mov
test
jne
push
call
pop
pop
ret
push
call
test
pop
je
or
pop
ret
test
je
push
call
push
call
pop
pop
neg
sbb
pop
ret
xor
pop
ret
push
push
call
xor
mov
mov
push
call
pop
mov
xor
mov
cmp
jge
mov
lea
cmp
je
mov
test
je
push
push
call
pop
pop
xor
inc
mov
mov
mov
mov
test
je
cmp
jne
push
call
pop
cmp
je
inc
jmp
cmp
jne
test
je
push
call
pop
cmp
jne
or
mov
call
inc
jmp
xor
mov
mov
push
push
call
pop
pop
ret
mov
call
cmp
mov
je
mov
call
ret
push
call
pop
ret
push
push
call
xor
cmp
jne
push
call
pop
jmp
push
call
pop
mov
push
call
pop
mov
mov
call
mov
call
ret
push
call
pop
ret
push
call
pop
ret
push
mov
sub
push
lea
call
movzx
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
push
push
call
pop
pop
ret
push
push
call
pop
pop
ret
push
push
call
pop
pop
ret
push
mov
sub
push
push
push
lea
call
mov
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
push
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
mov
cmp
jne
movzx
cmp
jb
cmp
ja
add
movzx
movzx
cmp
jb
cmp
ja
add
inc
inc
inc
inc
test
movzx
je
cmp
je
jmp
movzx
lea
push
push
call
movzx
movzx
lea
push
inc
push
inc
call
add
inc
inc
test
movzx
je
cmp
je
movzx
movzx
sub
cmp
je
mov
and
pop
pop
pop
leave
ret
push
xor
cmp
push
jne
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
je
movzx
cmp
jb
cmp
ja
add
movzx
movzx
cmp
jb
cmp
ja
add
inc
inc
inc
inc
cmp
movzx
je
cmp
je
movzx
movzx
sub
jmp
push
push
push
call
add
pop
pop
ret
mov
mov
mov
inc
inc
test
jne
mov
dec
dec
cmp
je
cmp
jne
mov
sub
neg
sbb
not
and
ret
cmp
push
mov
jne
xor
pop
ret
test
push
push
jne
cmp
je
call
mov
call
test
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
call
mov
push
call
mov
add
push
push
push
push
push
call
mov
push
mov
push
call
xor
pop
ret
nop
sub
push
push
xor
mov
call
mov
lea
push
call
mov
mov
cmp
je
test
je
mov
mov
mov
push
not
push
push
push
push
push
mov
call
mov
jmp
mov
mov
push
mov
mov
mov
xor
pop
xor
cmp
je
test
jne
mov
mov
not
mov
mov
mov
cmp
mov
je
test
je
call
mov
pop
not
mov
pop
add
ret
mov
lea
xor
push
mov
mov
call
push
call
mov
mov
mov
xor
xor
cmp
je
test
jne
mov
mov
pop
not
mov
mov
pop
add
ret
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
push
mov
push
push
push
push
push
call
push
call
mov
xor
mov
sub
je
mov
push
push
push
push
call
add
test
jne
sub
mov
mov
mov
mov
add
push
push
push
mov
lea
lea
mov
mov
mov
mov
mov
push
push
inc
call
mov
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
push
mov
add
push
push
lea
push
mov
xor
mov
mov
push
call
mov
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
push
push
push
push
push
call
inc
cmp
jle
pop
pop
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
call
mov
push
or
push
mov
call
mov
push
or
mov
call
mov
push
push
push
push
push
or
push
push
mov
call
mov
mov
mov
or
or
push
or
mov
call
mov
mov
mov
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
push
or
push
or
push
or
mov
call
mov
mov
mov
mov
or
mov
or
push
or
or
or
mov
call
mov
mov
or
mov
push
or
push
push
or
push
push
mov
call
mov
push
push
push
or
push
push
mov
call
mov
push
or
push
push
mov
call
push
push
push
call
mov
push
call
mov
lea
or
push
push
mov
call
mov
push
push
or
push
push
mov
call
push
push
call
mov
push
or
mov
call
mov
push
push
push
push
push
or
push
push
mov
call
mov
push
push
push
or
push
push
mov
call
mov
mov
or
mov
push
push
call
mov
mov
or
push
or
mov
call
mov
push
or
push
mov
call
mov
mov
or
push
or
mov
call
mov
push
or
push
mov
call
mov
push
or
mov
call
mov
push
or
push
mov
call
mov
push
or
push
mov
call
mov
or
mov
push
mov
call
mov
push
or
mov
call
mov
push
or
mov
call
mov
lea
or
push
lea
push
push
lea
push
push
push
push
push
mov
call
mov
mov
mov
or
or
push
push
push
push
push
push
push
push
push
mov
call
mov
mov
or
push
push
mov
call
mov
mov
or
or
mov
push
push
mov
call
mov
push
or
push
mov
call
mov
push
or
mov
call
or
call
mov
mov
or
push
or
push
mov
call
mov
push
or
push
mov
call
mov
mov
or
push
or
push
mov
call
mov
push
or
push
mov
call
mov
mov
or
or
mov
call
mov
mov
or
or
mov
call
mov
mov
mov
or
or
push
or
mov
call
mov
mov
or
push
or
mov
call
mov
or
push
push
push
mov
call
mov
push
or
push
mov
call
mov
push
or
push
mov
call
mov
or
push
mov
call
mov
push
or
mov
call
test
je
or
mov
xor
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
and
rep
or
mov
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
and
rep
or
mov
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
and
rep
mov
or
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
and
rep
mov
or
repnz
not
sub
mov
mov
mov
or
repnz
dec
mov
shr
rep
mov
and
rep
or
mov
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
and
rep
or
mov
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
and
rep
mov
or
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
and
rep
mov
or
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
and
rep
mov
or
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
and
rep
mov
or
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
and
rep
mov
or
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
and
rep
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
push
cmp
mov
mov
jbe
mov
test
mov
je
mov
shr
shl
or
mov
inc
mov
mov
mov
and
sub
cmp
jae
mov
mov
cmp
jae
test
mov
je
test
je
xor
xor
mov
mov
shr
shl
or
jmp
xor
mov
and
inc
cmp
mov
jbe
mov
and
shr
cmp
ja
jmp
and
inc
jmp
mov
and
add
add
xor
mov
jmp
inc
add
jmp
mov
lea
cmp
ja
mov
inc
xor
mov
je
mov
and
shl
lea
jmp
xor
mov
shr
inc
shl
lea
jmp
mov
shr
test
je
and
add
add
mov
mov
xor
mov
jmp
and
inc
mov
mov
xor
mov
je
mov
and
jmp
xor
mov
shr
inc
cmp
je
add
jmp
mov
mov
and
lea
cmp
ja
mov
test
je
xor
xor
mov
mov
shr
shl
or
jmp
xor
mov
and
inc
cmp
je
add
jmp
mov
lea
cmp
ja
mov
test
je
xor
xor
mov
mov
shr
shl
or
jmp
xor
mov
and
add
add
cmp
je
mov
cmp
jb
mov
add
cmp
ja
mov
sub
mov
dec
test
je
mov
add
mov
mov
cmp
jae
mov
mov
mov
mov
inc
inc
mov
dec
test
mov
jne
jmp
test
je
xor
xor
mov
mov
shr
shl
or
jmp
xor
mov
mov
mov
mov
inc
mov
inc
mov
mov
inc
shl
cmp
mov
mov
jl
jmp
mov
test
je
mov
mov
and
shl
inc
jmp
mov
and
shl
mov
mov
and
add
lea
mov
lea
cmp
ja
mov
dec
test
je
mov
mov
cmp
jae
mov
mov
mov
add
mov
add
mov
mov
dec
test
jne
mov
mov
and
sub
cmp
jb
mov
mov
mov
xor
pop
pop
pop
mov
pop
ret
mov
pop
pop
pop
mov
pop
ret
mov
pop
pop
pop
mov
pop
ret
mov
pop
pop
pop
mov
pop
ret
pusha
mov
and
popa
mov
pop
pop
pop
mov
pop
ret
mov
pop
pop
pop
mov
pop
ret
pop
pop
mov
pop
mov
pop
ret
lea
icebp
xlat
inc
add
xlat
inc
add
fadd
sbb
inc
add
nop
nop
nop
nop
nop
nop
nop
call
mov
push
add
mov
push
mov
call
push
mov
mov
mov
push
push
push
push
call
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
lea
mov
mov
xor
mov
rep
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
call
mov
push
call
add
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
lea
push
mov
push
call
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
add
jmp
mov
mov
call
mov
mov
mov
mov
push
mov
push
call
push
mov
mov
push
call
mov
mov
mov
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
jne
call
mov
pop
jmp
cmp
mov
mov
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
cmp
pop
mov
jne
xor
jmp
cmp
je
push
push
lea
push
push
push
push
call
add
cmp
mov
je
mov
push
push
push
push
push
push
call
cmp
mov
jne
xor
jmp
jle
cmp
ja
add
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
call
add
push
push
push
push
push
push
call
cmp
mov
jne
xor
jmp
push
lea
push
push
push
push
push
call
mov
mov
add
neg
sbb
and
push
call
pop
jmp
push
push
push
push
push
push
call
mov
cmp
je
push
call
pop
mov
cmp
je
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
push
push
mov
xor
mov
mov
push
push
xor
cmp
push
mov
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
cmp
je
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
cmp
pop
je
mov
add
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
mov
pop
jmp
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
cmp
pop
jne
xor
jmp
cmp
je
push
push
lea
push
push
push
push
call
mov
add
cmp
je
mov
push
push
push
push
push
call
cmp
mov
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
sub
test
movzx
movzx
mov
mov
jne
or
leave
ret
and
push
push
mov
lea
push
push
push
xor
inc
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
push
push
push
or
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
push
lea
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
mov
push
lea
push
push
call
add
or
mov
pop
mov
pop
leave
ret
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
ret
push
push
push
push
mov
cmp
mov
je
xor
push
inc
push
call
mov
test
pop
pop
jne
mov
jmp
mov
call
test
je
push
call
push
call
pop
pop
jmp
mov
jmp
mov
add
mov
cmp
je
add
push
call
mov
xor
pop
pop
pop
pop
ret
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
ret
push
mov
sub
push
mov
push
xor
cmp
push
mov
mov
jne
cmp
jne
mov
mov
mov
jmp
push
push
call
mov
cmp
pop
pop
mov
jne
xor
inc
jmp
mov
push
pop
push
rep
call
xor
cmp
pop
mov
jne
push
call
pop
jmp
mov
cmp
je
push
call
cmp
pop
mov
jne
xor
inc
push
call
push
call
pop
pop
mov
jmp
mov
mov
movzx
push
push
push
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
mov
lea
push
push
call
add
or
je
push
call
pop
or
jmp
mov
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
cmp
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
inc
mov
mov
test
je
mov
mov
test
mov
je
push
call
mov
test
je
push
call
test
jne
push
call
push
call
pop
pop
mov
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
ret
push
mov
sub
push
push
mov
push
xor
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
mov
jmp
push
push
call
mov
cmp
pop
pop
jne
xor
inc
jmp
push
call
cmp
pop
mov
jne
push
call
pop
jmp
mov
cmp
je
push
call
cmp
pop
mov
jne
push
call
push
call
pop
jmp
mov
movzx
lea
push
push
push
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
push
lea
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
je
push
call
push
call
push
call
push
call
add
jmp
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
cmp
jne
jmp
push
pop
mov
mov
rep
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
inc
xor
cmp
mov
je
mov
mov
mov
cmp
je
push
call
mov
cmp
je
push
call
test
jne
push
call
push
call
pop
pop
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
xor
push
mov
cmp
push
mov
mov
mov
mov
mov
mov
mov
je
lea
cmp
jne
push
movzx
push
push
lea
push
push
call
add
test
jne
push
call
push
mov
push
mov
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
add
cmp
mov
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
mov
xor
mov
mov
adc
add
jb
push
xor
mov
nop
scas
fnsave
rcr
jecxz
adc
sub
adc
dec
mov
adc
jmp
test
xchg
dec
mov
push
jl
jge
aad
mov
inc
or
push
mov
jo
clc
push
xchg
rcl
dec
aam
mov
sub
imul
ds
pop
test
stos
outs
retf
pcmpeqw
and
push
add
in
mov
outs
sar
mov
fisttp
add
and
dec
push
jnp
ja
mov
(bad)
jnp
jg
mov
mov
inc
jb
test
add
sbb
dec
out
fs
(bad)
fistp
jo
mov
xchg
mov
outs
sbb
jnp
mov
leave
jno
xchg
dec
mov
scas
cwde
cld
nop
cmps
jmp
in
(bad)
xor
sbb
into
xchg
mov
fild
xor
sub
outs
stc
popf
sub
jo
imul
call
jo
dec
(bad)
retf
sub
mov
mov
dec
push
in
cmp
adc
adc
test
inc
add
test
loop
pop
sub
add
cmp
push
fld
pop
jne
or
cmp
test
(bad)
mov
repnz
outs
pop
sub
lods
push
mov
jo
ds
leave
xchg
sub
fs
mov
add
mov
fidivr
jle
adc
ds
imul
adc
sti
adc
xlat
outs
dec
popf
jo
and
push
bnd
pop
inc
adc
cmps
mov
add
enter
fdiv
pop
sbb
push
sub
popa
cmps
sbb
mov
stos
push
mov
cwde
iret
shr
(bad)
adc
loopne
pop
pop
mov
scas
loope
imul
mov
es
jle
mov
xchg
imul
push
pop
add
add
dec
aad
outs
test
cmps
sbb
mov
mov
and
out
movs
mov
shr
sub
push
sub
cli
call
add
or
jb
pusha
jnp
sbb
outs
mov
(bad)
out
fst
cs
mov
rcr
xor
aas
sbb
icebp
fwait
je
nop
imul
scas
cmp
and
aaa
add
out
xchg
xchg
js
jmp
mov
rcr
cmc
daa
xchg
jnp
xor
jmp
cmp
push
or
inc
jb
clc
jecxz
inc
and
lock
stos
out
mov
xlat
clc
push
push
jne
ficom
inc
ror
push
aad
test
add
dec
or
cmc
nop
(bad)
(bad)
jbe
inc
jle
sti
int
(bad)
das
(bad)
into
dec
cmp
or
shl
test
jo
cs
cld
mov
push
push
push
dec
and
adc
pop
cmp
sahf
inc
iret
mov
or
lahf
inc
dec
mov
int
(bad)
adc
sub
mov
inc
clc
not
movs
inc
add
or
aas
retf
mov
popa
bound
add
sahf
es
dec
ins
repnz
mov
sub
jno
jno
into
call
push
mov
mov
or
and
push
add
push
pop
mov
pop
ds
mov
mov
cmps
jge
push
imul
imul
leave
cmp
outs
pop
cmc
imul
es
pop
xor
out
dec
add
popa
and
cs
iret
js
and
cld
(bad)
test
adc
add
cwde
jno
cli
adc
xor
es
pop
nop
stos
enter
jne
fistp
inc
dec
fs
adc
cmp
retf
loopne
or
cmps
movs
mov
mov
xchg
jb
jge
bound
jle
or
cmovno
leave
jg
enter
xchg
mov
data16
cdq
scas
stc
add
dec
add
xchg
icebp
fisttp
(bad)
jb
repz
xchg
sbb
adc
sahf
mov
mov
bound
pop
inc
and
cmp
or
loop
imul
pop
(bad)
adc
jo
mov
inc
jne
movs
lds
jbe
bound
in
lahf
lods
outs
jl
cmp
jae
mov
inc
cmp
jnp
wrmsr
xchg
pusha
lea
mov
push
aaa
hlt
pop
ror
pop
inc
push
dec
sbb
jg
xor
scas
fsubr
mov
cs
xchg
icebp
icebp
fild
lods
jo
in
cmc
enter
dec
and
imul
nop
hlt
mov
cmc
shl
pop
lods
popa
lds
je
jbe
and
fst
inc
pop
loopne
mov
imul
xchg
mov
mov
pop
ins
arpl
sbb
xchg
call
dec
in
in
jnp
xchg
(bad)
adc
ins
sar
mov
pop
std
cli
aas
pushf
xor
lods
xor
jb
mov
push
cli
rcl
xchg
xlat
xor
es
shl
sbb
imul
jge
and
outs
or
xchg
mov
xor
cdq
mov
mov
mov
xchg
out
inc
sbb
add
sbb
data16
pop
das
ins
repnz
ret
sbb
sub
rcr
es
or
inc
or
aas
leave
jo
sub
cs
loop
or
aas
sbb
mov
inc
xor
(bad)
jle
clc
mov
dec
pusha
inc
ror
xchg
stos
ss
or
jno
cld
loop
cmps
or
mov
mov
sub
xchg
jmp
(bad)
idiv
inc
scas
mul
int3
inc
and
or
mov
jno
mov
mov
ret
rcr
iret
pop
xor
inc
xchg
imul
xlat
cmc
mov
stos
xchg
sbb
cli
xor
xchg
inc
scas
shr
cmp
fstp
adc
popa
mov
enter
pusha
mov
xchg
xor
adc
clc
push
mov
or
and
mov
mov
sub
adc
xchg
push
dec
jno
mov
rsqrtps
inc
retf
rol
fimul
cmp
and
push
mov
sbb
outs
jb
je
mov
inc
dec
in
mov
and
das
jp
mov
inc
adc
add
push
push
jmp
in
dec
add
push
mov
pop
scas
inc
rcl
(bad)
fmul
or
fwait
inc
dec
push
out
push
cld
(bad)
sbb
adc
xchg
das
and
mov
scas
not
ret
pop
xchg
pop
les
inc
mov
das
jno
call
xlat
call
rol
mul
sub
icebp
std
mov
pop
and
in
sti
out
je
stc
jp
out
test
adc
fdiv
into
mov
jns
jmp
lea
shl
test
cdq
jge
rol
xlat
push
das
into
adc
aad
add
push
shr
push
push
cmp
and
sbb
popf
popa
aas
dec
fldcw
cmp
pop
scas
mov
movs
ret
cmc
test
mov
inc
inc
fst
enter
ret
addr16
jno
gs
inc
sti
and
pop
nop
xor
ins
xchg
jnp
dec
loope
push
retf
sbb
jle
scas
push
mov
mov
and
in
int3
xchg
(bad)
fisttp
jbe
fs
pop
ss
sbb
sbb
inc
dec
push
sahf
popf
push
mov
addr16
lds
push
inc
pop
scas
cmp
cmps
pushf
pusha
(bad)
aas
inc
out
lods
leave
out
mov
or
icebp
int
ret
add
js
jle
push
mov
inc
mov
movs
xor
pusha
pop
jae
and
xor
shl
inc
jle
mov
lahf
mov
mov
add
cdq
gs
(bad)
es
dec
or
fisubr
dec
movs
mov
sbb
pop
xor
enter
add
push
out
icebp
push
jns
pop
test
or
sahf
int3
mov
(bad)
adc
mov
jp
shl
cs
cmps
scas
pop
pusha
and
arpl
xor
jmp
push
push
fistp
je
jle
mov
shr
fnstenv
or
scas
int3
and
loop
fs
push
lods
cmp
aam
imul
jmp
jnp
xor
sub
ror
sub
in
sar
hlt
mov
jnp
imul
fcom
push
or
ds
cmc
shr
cmp
stos
mov
cmp
sbb
sbb
add
cmp
scas
mov
xor
jb
add
inc
std
outs
call
repnz
pop
or
shr
pop
xor
add
sub
or
cmovae
jnp
enter
cmp
lods
repnz
(bad)
adc
mov
push
push
push
inc
icebp
push
push
pop
xor
mov
mov
pushf
mov
inc
cmp
or
inc
mov
adc
sbb
neg
mov
adc
mov
cmp
ds
inc
je
inc
add
push
xchg
loopne
jmp
mov
adc
inc
mov
and
cmp
call
fidivr
mov
pop
(bad)
xchg
daa
loopne
inc
xor
popa
dec
mov
rol
jo
mov
rcr
dec
add
shl
cwde
into
jno
push
jne
mov
sbb
out
jle
out
jae
out
arpl
icebp
pop
lds
out
test
aas
scas
cmp
fidivr
(bad)
cmps
pop
clc
ss
(bad)
sti
scas
jno
cmp
adc
cmp
jecxz
xorps
and
sub
(bad)
fdiv
pop
cmp
lock
fdivr
je
push
and
and
scas
jo
push
js
xchg
outs
cwde
out
xor
or
mov
sub
jb
int
push
xchg
pusha
dec
jbe
ror
mov
sbb
jp
xor
enter
ret
jae
adc
test
out
js
loope
mov
pop
jecxz
loop
inc
mov
mov
add
xor
aaa
fimul
outs
ret
mov
das
or
lods
adc
cmp
xchg
xchg
add
rcl
pop
xchg
mov
ss
test
es
push
fcomip
repz
ss
mov
int
inc
das
cdq
or
les
and
jae
in
push
push
cmps
cdq
push
inc
xchg
or
xchg
int
pusha
dec
sbb
in
jne
inc
and
and
xchg
outs
call
out
ret
rcr
push
mov
xchg
rcr
push
push
sbb
test
and
sub
and
fdivp
push
enter
lock
mov
or
push
aad
loop
retf
sbb
popa
mov
pop
pop
loope
fcmovne
cmc
jg
mov
mov
cs
pushf
icebp
inc
mov
add
or
pop
jbe
sbb
cmps
loopne
dec
nop
mov
mov
cwde
ja
in
mov
gs
or
(bad)
ror
test
stos
xor
outs
mov
ins
xor
adc
and
arpl
jbe
mov
push
xor
lahf
retf
(bad)
jmp
icebp
and
pop
sahf
pop
push
rcr
add
xor
shufps
es
jmp
loopne
loopne
inc
xor
ds
icebp
xor
xchg
jbe
mov
fwait
xor
rcl
cmp
(bad)
(bad)
jle
dec
lds
paddsw
aas
gs
test
sti
out
xchg
mov
adc
adc
xchg
fidiv
mov
les
push
test
ds
inc
mov
iret
dec
fsubr
es
shl
rol
mov
xchg
lods
aam
test
popa
jecxz
inc
popa
sbb
sub
aas
ja
cmp
frstor
sub
pop
aam
jae
or
jmp
inc
int
push
xor
fimul
mov
sbb
rcl
gs
xor
aaa
pop
sbb
ds
stos
sub
push
(bad)
jecxz
and
sar
xchg
(bad)
(bad)
push
push
add
cs
inc
xor
scas
into
add
das
call
ret
pop
nop
out
push
push
dec
bound
xchg
mov
adc
add
cmp
mov
es
ret
dec
les
and
push
daa
popa
push
jo
movs
push
aam
in
xor
(bad)
call
loopne
push
stos
add
ins
jbe
shl
add
push
fistp
loope
(bad)
lea
lea
sbb
inc
sub
shr
scas
xchg
or
cmp
push
adc
scas
pop
cld
repz
bound
push
daa
xchg
scas
and
xchg
push
out
pop
jb
sbb
cmp
jmp
lahf
jmp
push
retf
add
mov
jl
or
sar
jo
push
push
jbe
ficom
jno
push
sub
repnz
pop
push
test
sti
dec
(bad)
leave
into
adc
sbb
and
or
mov
ret
mov
mov
xor
and
inc
jno
outs
and
cs
mov
ins
pop
jg
ins
jmp
les
in
jne
popw
sbb
repnz
xlat
mov
sub
scas
adc
out
push
movs
pop
fcom
outs
jge
icebp
lds
jle
sub
test
add
pop
shr
and
inc
ins
cmp
pop
mov
inc
pusha
setno
sar
test
xor
lahf
sub
cmps
or
add
add
jo
xchg
daa
pop
es
rcl
es
inc
aaa
ds
xor
imul
xor
add
das
xchg
sub
lea
mov
fucomi
jle
ficom
cmp
jne
push
cli
jb
dec
bound
ror
cdq
or
mov
add
sbb
push
mov
adc
xchg
inc
jae
dec
push
mov
loopne
in
lds
and
mov
rcl
and
aaa
inc
xor
add
xor
std
out
jl
sbb
sbb
sbb
fiadd
(bad)
push
es
arpl
jns
dec
test
aas
adc
xchg
(bad)
lock
rol
pop
add
xchg
sub
push
popa
stc
mov
scas
sub
sti
dec
mov
dec
mov
outs
inc
inc
loopne
mov
jo
sbb
add
loop
push
rcr
mov
repz
hlt
jle
(bad)
mov
xchg
dec
fadd
cmp
pop
fmul
daa
shr
dec
pushf
clc
jmp
(bad)
push
mov
jno
pop
add
mov
cmp
nop
adc
test
std
sbb
sub
inc
push
aad
and
je
inc
mov
(bad)
(bad)
(bad)
jo
push
pushf
adc
sub
adc
cmp
fsubp
in
fs
dec
dec
adc
and
cmc
nop
sbb
add
hlt
adc
out
test
stos
and
scas
sub
xchg
xchg
loop
outs
or
loopne
xchg
ss
sbb
mov
daa
mov
dec
pushf
pop
and
add
pop
popa
fs
(bad)
mov
or
cs
outs
fdivr
add
inc
pop
(bad)
inc
inc
faddp
jge
shl
xor
mov
cmp
sahf
shr
inc
sbb
mov
outs
inc
mov
bnd
pop
popf
inc
xchg
jne
hlt
dec
rol
psllq
or
sub
loope
push
ins
inc
mov
jbe
cwde
pop
jbe
retf
adc
xor
mov
inc
inc
in
(bad)
bound
std
shr
ret
xchg
pop
fdiv
xor
sbb
jmp
mov
clc
jns
sar
pop
sbb
frstor
mov
push
cwde
(bad)
xchg
or
mov
hlt
in
ins
pushf
popf
dec
cmp
movups
push
call
leave
ror
push
cmp
cmp
adc
mov
jae
xor
iret
dec
xchg
and
mov
mov
mov
or
push
(bad)
pusha
sub
pushf
jmp
push
sbb
(bad)
dec
(bad)
mov
xlat
imul
js
sbb
mov
in
sbb
in
fnsave
bound
cli
cmp
in
adc
int
xor
xchg
mov
fsub
mov
mov
scas
bound
cmp
and
sub
push
jmp
sbb
movs
jb
aas
dec
call
jl
clc
loopne
mov
xchg
inc
mov
ja
jne
pop
daa
stos
jno
or
ins
or
mov
out
mov
shr
rcl
xor
rcl
mov
cli
jmp
cs
xor
mov
lds
fild
aaa
fidiv
xchg
imul
sbb
add
xor
inc
(bad)
int3
mov
and
jmp
or
(bad)
sub
xor
std
mov
cli
mov
dec
mov
mov
adc
jl
jp
and
lods
scas
xor
jl
repnz
pop
push
cmp
mov
add
dec
inc
dec
xchg
push
cmp
mov
cmp
aam
lahf
iret
or
shl
fadd
pop
adc
int
sub
mov
sar
jmp
dec
divps
mov
popf
adc
dec
aaa
cmp
aas
sbb
das
push
mov
mov
imul
mov
adc
pop
shr
sbb
outs
das
xchg
mov
adc
mov
and
fwait
sub
jge
pop
retf
dec
and
cmp
adc
mov
adc
or
and
lods
int
cmp
xor
pusha
iret
jle
cmp
cmp
and
pop
clc
xchg
in
jb
bound
addr16
outs
loope
mov
cmp
js
in
push
(bad)
loop
mov
pop
dec
or
adc
je
ss
retf
mov
xor
xchg
movs
movs
ror
ss
pop
add
jmp
jbe
test
nop
inc
in
sub
xor
mov
stc
movs
fist
xor
fdiv
cwde
cs
outs
fidiv
jmp
sahf
neg
mov
nop
iret
cmc
mov
xor
out
fldpi
push
and
neg
into
jb
int3
push
pop
sbb
and
adc
das
es
and
push
mov
js
mov
push
rcl
push
fadd
xor
rcl
xchg
sahf
inc
gs
mov
pop
mov
xor
loope
ret
adc
sub
cmps
icebp
retf
pop
mov
arpl
push
add
stos
pop
loop
leave
out
xchg
or
push
and
test
add
dec
sbb
inc
sbb
das
out
pop
dec
lock
xor
retf
dec
adc
jg
ins
enter
icebp
stos
stos
lods
dec
scas
add
pop
push
sub
shl
fidiv
inc
and
(bad)
mov
movs
cld
movs
test
call
test
push
push
leave
sbb
movs
xchg
push
popf
aas
pop
pusha
lock
jns
add
shl
jle
mov
in
push
add
cmps
mov
or
icebp
sub
scas
adc
(bad)
fisubr
fisttp
push
mov
mov
cmps
inc
fwait
pop
ror
jecxz
cwde
lods
jmp
outs
or
lock
not
jnp
pavgw
ret
outs
imul
lea
mov
popa
mov
sub
ds
std
xchg
popf
push
sbb
(bad)
in
mov
std
enter
in
push
push
inc
arpl
(bad)
and
push
pop
imul
push
push
dec
rol
sbb
dec
push
ret
add
sub
outs
retf
inc
nop
sub
mov
out
mov
sbb
das
jae
sbb
retf
pop
jmp
stc
jg
jle
mov
xchg
dec
adc
sbb
loop
jnp
add
mov
aad
sub
mov
adc
shl
sti
call
cdq
in
rcl
into
push
pop
mov
cdq
fstp
mov
mov
icebp
fild
adc
rcl
cmc
mov
mov
or
jne
sbb
jmp
(bad)
cmc
cmp
out
mov
icebp
adc
ins
cwde
pop
xor
out
add
cmp
fstp
dec
pop
aaa
xchg
loope
je
push
and
aas
or
sbb
xor
arpl
or
(bad)
xor
push
test
fisubr
push
sub
dec
sbb
sar
dec
fisubr
loopne
dec
push
repnz
cmp
push
add
push
int3
inc
jnp
dec
mov
fs
push
sbb
dec
inc
pop
and
scas
outs
movs
sbb
mov
shl
jl
lods
sahf
pop
sar
adc
push
mov
sbb
jns
les
ret
push
iret
lock
sub
pop
pop
inc
jmp
retf
xchg
scas
cmps
xadd
jmp
mov
xchg
xor
and
jns
and
jge
inc
loopne
in
aas
out
fimul
mov
dec
lahf
(bad)
arpl
xor
ss
clc
popa
mov
mov
cli
push
push
xchg
push
cmp
scas
sbb
cmp
fisttp
xchg
dec
xor
jmp
push
dec
sbb
(bad)
mov
add
lods
cmp
(bad)
sub
jge
fiadd
cwde
gs
jae
lock
or
jmp
pusha
xor
cmp
sbb
xlat
and
mov
cmps
aas
pop
cs
push
ror
ja
(bad)
pusha
pop
shl
jo
(bad)
loopne
addr16
sbb
push
cmp
(bad)
call
push
push
inc
iret
cmp
xor
lods
inc
xchg
test
into
mov
ret
cld
inc
mov
pop
push
mov
xchg
ret
add
sub
out
int
daa
mov
xchg
mov
loop
mov
out
inc
sub
cdq
cmp
imul
jae
rol
xor
es
repz
inc
dec
add
imul
mov
dec
xor
push
ins
fistp
rcr
jbe
push
push
add
push
inc
pop
test
(bad)
test
push
adc
popa
fdiv
leave
xchg
jp
fbld
sbb
and
inc
jae
dec
(bad)
xor
push
mov
xchg
mov
add
mov
jbe
repnz
ret
mov
aas
aaa
ja
cmp
xor
arpl
lods
cli
mov
pop
int3
jg
mov
imul
popa
test
test
stc
out
mov
sahf
mov
jne
mov
mov
jp
xor
add
xchg
imul
(bad)
(bad)
stc
pop
int
ret
scas
or
or
mov
mov
mov
loop
(bad)
cmc
shl
push
xchg
fcom
xchg
iret
sbb
test
mov
cli
xchg
push
push
pusha
jo
dec
fwait
dec
xchg
sbb
jnp
dec
adc
scas
adc
shr
rcr
stos
nop
push
mov
jecxz
ins
(bad)
push
or
icebp
arpl
jle
pop
outs
jmp
mov
shl
scas
xor
push
shl
xchg
mov
xor
fisubr
into
jmp
mov
add
in
push
clc
mov
adc
movs
sub
clc
sbb
cmps
pop
(bad)
push
scas
stos
pop
xor
mov
jbe
sub
mov
ds
jmp
cmp
sbb
sub
sub
or
pop
fdiv
mov
xor
js
shr
cdq
inc
or
dec
push
std
mov
mov
push
repnz
dec
push
das
rol
push
add
jo
ds
enter
stc
aam
or
scas
cmps
push
sbb
push
push
inc
mov
pop
add
or
jbe
in
into
lods
dec
inc
mov
shl
inc
imul
outs
or
cmp
inc
fld
pop
jo
inc
inc
mov
iret
pop
push
mov
lahf
and
sub
popa
push
inc
sub
jnp
fisubr
(bad)
mov
pop
in
outs
jge
ds
push
sahf
dec
and
pop
cs
loope
(bad)
out
daa
xor
xchg
aad
jnp
push
retf
cmp
push
cs
in
pop
in
mov
test
loop
ror
shl
or
and
adc
(bad)
cmp
retf
or
xchg
xchg
rcr
test
mov
lock
les
push
sbb
jl
cli
jge
cmp
bound
pop
sub
lods
or
div
jns
call
icebp
scas
lock
aaa
cmp
(bad)
jl
push
test
jb
pop
sub
dec
fimul
retf
pop
mov
in
push
pop
sub
cmp
ins
pop
and
or
rcl
xchg
aad
jp
out
fadd
outs
sub
loop
imul
and
mov
or
mov
jo
push
jmp
pop
xchg
xchg
push
push
mov
(bad)
bound
retf
adc
out
push
(bad)
adc
pop
mov
push
add
jle
push
mov
movs
mov
psubsb
jle
sbb
or
or
jge
push
or
(bad)
aam
sbb
inc
dec
stos
push
rol
xor
mov
inc
push
rol
fbld
jp
imul
jle
dec
in
out
or
push
sub
adc
dec
mov
sub
loope
add
pop
mov
adc
add
sahf
dec
push
cli
fisttp
lock
ret
ret
pop
add
adc
lock
fcom
cmp
icebp
mov
lods
lea
add
mov
xchg
cld
ds
mov
es
sbb
mov
lods
mov
push
sub
imul
outs
jae
in
in
mov
call
retf
sub
xor
jge
out
les
add
nop
sbb
in
cs
rcr
and
pop
mov
push
push
les
pop
loopne
stc
mov
clc
inc
or
lock
add
inc
loope
fild
mov
mov
ret
fwait
inc
xor
fsubr
(bad)
pop
mov
cld
into
lds
fcmove
not
and
and
adc
add
addr16
push
test
adc
mov
push
dec
push
in
jb
add
call
gs
dec
add
xor
lods
mov
adc
aam
aam
rcr
inc
test
outs
in
push
cdq
jne
mov
inc
push
or
xor
adc
repnz
jo
adc
outs
sub
sahf
fisttp
cmp
dec
mov
mov
mov
dec
rol
aad
pop
xor
dec
and
jno
dec
push
pusha
loope
mov
shl
mov
sbb
cmps
adc
mov
mov
(bad)
sub
ins
mov
push
repnz
aam
pusha
mov
cmps
lock
xchg
dec
mov
mov
ss
(bad)
fdiv
aad
je
outs
xor
ror
adc
mul
sub
fistp
pop
and
ret
dec
xchg
mov
nop
sub
mov
mov
outs
sar
aaa
sbb
int3
int3
arpl
mov
fmulp
(bad)
fild
pusha
stc
hlt
lock
test
inc
and
ds
in
stc
push
jecxz
cdq
cmps
int
retf
mov
or
push
adc
xchg
mov
test
movd
xchg
push
sahf
pusha
push
add
xchg
fwait
cmp
xor
push
retf
jmp
jo
jbe
data16
add
scas
jmp
loope
xchg
xchg
dec
test
(bad)
xor
aaa
add
(bad)
or
inc
cmp
jo
scas
inc
cli
adc
push
jb
outs
adc
sbb
adc
push
jne
fmul
cmp
fs
or
jns
xchg
lds
lods
scas
pop
pop
or
scas
jo
inc
cld
mov
push
dec
jg
lods
xor
add
jno
shl
fwait
mov
aad
idiv
xchg
pushf
add
xor
mov
dec
or
dec
jbe
inc
jl
inc
mov
push
sar
inc
retf
mov
push
popf
movs
mov
cs
aas
imul
hlt
inc
xor
dec
(bad)
mov
cwde
ds
mov
inc
aam
ret
test
fsubr
fild
mov
mov
(bad)
icebp
adc
adc
add
cmp
jge
and
scas
ror
out
mov
ret
rol
popf
ror
int
outs
gs
es
scas
in
and
push
sahf
xchg
fisttp
(bad)
mov
xor
cmps
push
fnsave
or
xor
rol
test
jb
inc
js
mov
mov
stos
jmp
ins
adc
(bad)
and
js
mov
pop
hlt
std
cdq
jbe
fst
adc
cmps
fcomp
mov
add
inc
dec
mov
inc
outs
add
iret
lock
jo
mov
push
outs
inc
mov
jb
clc
dec
sti
out
xchg
cli
sub
jle
jne
pop
sbb
adc
jnp
arpl
dec
sbb
push
(bad)
mov
mov
js
es
push
push
xor
arpl
test
fistp
and
dec
and
(bad)
lods
not
gs
cmp
mov
rcl
jae
xchg
call
pop
call
push
sub
adc
push
pusha
ins
xchg
dec
xchg
icebp
and
jnp
sti
call
fcomp
iret
and
repnz
ja
mov
in
into
fisub
(bad)
inc
or
mov
or
(bad)
outs
cmp
mul
je
int
mul
and
stc
push
into
rol
adc
iret
rol
jo
popa
sbb
out
adc
or
mov
jmp
xchg
add
or
sbb
stos
push
sub
cmp
ds
add
(bad)
cld
inc
dec
push
jge
push
jle
jbe
push
or
mov
cmc
cs
inc
pop
call
pop
pop
adc
pminub
iret
out
out
retf
stos
loopne
bound
retf
push
sub
jle
pop
xor
xor
add
scas
fs
dec
dec
dec
stos
mov
mov
test
pop
and
bnd
gs
arpl
pop
outs
(bad)
adc
jecxz
leave
pusha
sub
mov
push
push
(bad)
cs
es
jo
sar
sub
jae
mov
xor
jge
icebp
adc
dec
addr16
sub
mov
jno
mov
push
bound
ficom
add
and
or
aad
adc
(bad)
mov
daa
(bad)
mov
addr16
inc
and
and
nop
retf
fsubr
fmul
ds
enter
in
iret
add
out
popa
js
jbe
sub
outs
aam
outs
add
ds
push
scas
jno
std
mov
adc
shl
or
jae
shl
mov
fist
cmc
add
dec
fmul
xor
add
psllq
popf
add
add
jle
add
loopne
or
fmul
cli
pop
aaa
outs
aaa
push
adc
fst
inc
dec
pusha
fcom
push
push
mov
inc
mov
mul
mov
daa
pop
std
add
shr
fdiv
lods
fld
add
or
ja
mov
jmp
popa
lahf
int
call
and
sbb
adc
popa
push
cmp
fdivr
sub
into
jbe
xor
lods
je
mov
fwait
inc
mov
movs
jg
mov
push
jns
iret
xchg
clc
push
(bad)
push
push
push
ret
xchg
gs
je
mov
ins
pop
jp
xor
push
mulps
sub
cmp
retf
jmp
lods
xlat
push
cmc
sub
pop
nop
push
push
sub
push
xor
sti
push
pusha
fild
pop
cmp
mov
lock
pop
dec
xor
push
push
push
xchg
aas
inc
inc
ds
ss
jmp
punpckhbw
pop
out
movs
cs
or
jmp
and
push
or
pop
test
push
xchg
jnp
shl
in
or
xor
scas
mov
add
push
in
dec
and
dec
mov
mov
ror
loopne
dec
pop
je
jmp
lahf
addr16
xchg
xor
adc
pop
sbb
ret
add
popf
mov
rcr
retf
xchg
icebp
pop
push
(bad)
mov
psllw
fist
sar
inc
lea
ins
popa
inc
pushf
movs
loopne
cmp
cmp
sub
push
das
dec
and
fidiv
ja
jp
cmp
push
repnz
je
inc
mov
and
leave
push
pop
sbb
lahf
push
test
sti
mov
jo
cmc
dec
fsubp
scas
push
jne
jp
les
dec
add
cmp
loopne
call
(bad)
add
aad
scas
shl
jne
cmp
xor
mov
xor
xchg
mov
pop
and
inc
mov
cmp
sbb
cmps
adc
pop
mov
xor
pop
outs
mov
popa
adc
sbb
inc
in
ret
ds
adc
push
jno
ror
movs
icebp
mov
push
jns
repz
out
cmp
sub
lock
xchg
lods
add
btc
in
test
and
rcr
xchg
sahf
cmc
stos
fnsave
popf
sbb
je
add
jbe
inc
rcl
clc
lock
sti
mov
lock
fdivr
popa
test
mov
cdq
popf
leave
mov
jmp
sbb
aaa
jno
fldcw
loope
in
mov
cmp
mul
add
and
jge
jns
or
int3
repnz
jp
fcmovne
lahf
sbb
inc
cld
or
mov
xchg
or
sahf
cmp
das
inc
fst
mov
xor
ins
popa
out
(bad)
fsubp
test
std
cmp
je
add
and
sbb
rcr
inc
dec
push
xor
popf
outs
mov
sbb
xchg
std
sub
mov
scas
sahf
shl
les
mov
aaa
add
mov
rcl
fdiv
or
cmps
pop
call
nop
mov
into
add
jl
sbb
adc
pop
dec
mov
movs
sahf
mov
call
cwde
mov
sub
or
retf
lods
mov
outs
cmc
jae
enter
jno
loopne
or
sar
and
das
sub
das
(bad)
cmp
mov
adc
fucom
jge
and
and
inc
dec
and
mov
inc
call
loop
ins
lahf
and
jo
sub
mov
jmp
cmp
mov
loop
dec
mov
(bad)
inc
pop
push
pop
mov
ret
mul
mov
std
or
add
push
out
xor
jle
and
scas
fadd
and
nop
or
mov
mov
bound
cdq
mov
jg
ins
mov
inc
ds
fisub
ret
xlat
push
neg
pop
mov
sbb
inc
scas
inc
das
adc
lds
mov
scas
mov
rol
inc
xchg
mov
inc
mov
aam
cmp
push
rcl
jnp
popf
sub
cmps
les
pop
fisubr
(bad)
or
jbe
cs
pusha
ins
mov
xchg
sbb
xor
mov
adc
and
jmp
gs
jno
xchg
test
dec
int
jbe
fwait
lods
mov
dec
data16
(bad)
ds
push
pop
or
push
mov
inc
out
mov
sahf
push
call
stos
xlat
adc
push
inc
xchg
dec
arpl
fiadd
xchg
xor
rcr
hlt
ds
push
jle
(bad)
call
in
aad
inc
ds
cmp
cmp
inc
retf
xor
cmp
jb
jb
jle
loope
sub
mov
mov
out
push
mov
mov
dec
(bad)
push
mov
mov
xor
out
jg
imul
xchg
sti
xor
call
data16
xchg
dec
sub
icebp
mov
cmp
pop
or
(bad)
arpl
inc
pop
pop
pop
ins
fdiv
push
push
mov
pop
jb
jo
jmp
push
or
fidivr
in
sbb
sbb
jp
push
popa
or
or
hlt
add
(bad)
jecxz
xchg
mov
pop
and
xchg
push
aam
or
mov
sub
inc
lea
int
loopne
int3
in
addr16
sti
out
push
sub
les
mov
dec
(bad)
cwde
data16
push
movs
mov
int
adc
dec
push
mov
add
push
mov
sub
fisttp
dec
and
adc
mov
movs
sbb
leave
xchg
add
mov
mov
nop
out
xchg
mov
xor
rcr
in
or
pop
fstp
push
xchg
in
fist
pop
ds
mov
ret
add
jae
cli
aaa
or
and
dec
mov
nop
gs
bound
bound
or
mov
ins
mov
adc
adc
dec
inc
int3
xchg
aaa
ins
add
xchg
jb
in
add
jmp
push
lahf
jmp
sub
jbe
sub
outs
out
repnz
iret
jp
jmp
mov
imul
fmul
imul
ss
inc
push
xchg
dec
sbb
or
nop
jle
imul
sbb
mov
retf
push
fild
mov
inc
int
pop
adc
xchg
clc
je
in
dec
clc
ror
push
dec
xor
dec
inc
dec
mov
std
xor
sub
ds
xchg
push
test
push
push
mov
mov
pop
imul
add
jmp
cmp
and
pop
bound
mov
int
jno
(bad)
dec
iret
call
scas
pop
outs
sub
jge
mov
or
loope
jg
jbe
retf
out
xor
cmp
ds
popa
lods
stos
pop
mov
pop
jae
pusha
fucomip
outs
pop
mov
out
dec
daa
mov
ret
dec
mov
xor
daa
adc
cmp
dec
sub
scas
xor
push
and
ret
jg
daa
add
enter
sbb
xor
in
mov
movs
in
mov
popf
stos
test
add
arpl
sbb
test
cli
push
cmp
cld
scas
or
sahf
add
jne
scas
in
test
cmc
popa
out
mov
in
jecxz
sbb
aaa
cmp
adc
js
adc
pusha
pop
jmp
lock
aam
or
je
div
repz
inc
sbb
add
fwait
js
(bad)
jne
hlt
imul
lock
loopne
cmp
mov
mov
dec
jo
mov
jmp
shr
outs
mov
loopne
jbe
inc
ret
inc
outs
push
out
push
or
mov
mov
cmpxchg
repnz
aam
cmp
inc
cli
mov
outs
pop
stos
in
sub
(bad)
aad
and
icebp
xlat
sar
inc
add
cmp
jg
ins
mov
push
inc
inc
xor
pop
nop
int
push
push
in
stos
xchg
mov
mov
xchg
stc
xchg
outs
ss
cmp
sub
(bad)
sbb
scas
loopne
mov
mov
fist
sub
jno
inc
leave
adc
(bad)
mov
loop
or
(bad)
inc
ret
outs
inc
sbb
jg
cmp
out
mov
adc
outs
mov
mov
sbb
mov
xor
enter
push
imul
daa
fistp
jg
push
xor
div
mov
int3
pop
and
jmp
jle
punpckhbw
fstp
fsubrp
mov
mov
ds
daa
call
out
xchg
fisttp
fbstp
mov
in
loope
sti
jle
xchg
mov
or
pop
iret
mul
not
cs
gs
xchg
cmp
test
es
pusha
js
mov
fucomip
inc
fbstp
inc
es
push
xor
dec
add
add
inc
pop
push
dec
ret
sub
stc
hlt
push
mov
pop
jb
outs
xor
pop
jg
and
imul
fld
test
pop
stos
jb
inc
push
fdiv
das
mov
data16
jmp
add
jb
jo
xor
mov
imul
and
aam
cwde
jno
cmp
xchg
into
adc
(bad)
nop
dec
jle
mov
or
lods
fcomp
jo
mov
ss
jmp
sahf
(bad)
loop
jbe
jb
push
xor
adc
cmp
lahf
pop
into
ror
mov
popa
xor
mov
loop
push
das
jo
sbb
in
sar
nop
pusha
(bad)
jg
xchg
and
test
and
outs
loop
inc
pop
and
xchg
pop
xchg
cdq
rcl
mov
add
js
xor
scas
pusha
adc
xchg
or
push
scas
dec
cmp
inc
outs
pop
sbb
fsubr
adc
adc
inc
scas
bound
dec
retf
nop
dec
adc
fcmovu
in
aas
push
inc
(bad)
cmp
xor
jl
pushf
das
jb
mov
cli
sub
mov
pusha
lds
pop
loopne
xor
xor
setnp
sub
jl
pop
dec
(bad)
sbb
push
(bad)
jmp
fwait
jmp
sub
and
movaps
push
add
mov
nop
jmp
stc
fisub
sbb
std
popa
test
push
or
and
outs
mov
imul
adc
xor
fsub
xor
iret
sbb
cmps
jle
push
movs
sub
out
and
jl
retf
dec
mov
cwde
std
push
push
repnz
push
pop
jb
shl
icebp
xor
mov
sbb
fs
stos
or
pop
xlat
repz
loop
mov
and
mov
lods
jbe
inc
and
fisubr
jmp
test
xlat
adc
cs
mov
sub
and
add
jns
cmp
or
fadd
scas
hlt
lock
jl
or
sbb
sub
arpl
sbb
mov
cmp
int3
push
jnp
sub
ja
jl
and
mov
daa
das
ins
and
lds
mov
mov
adc
loop
addr16
nop
sbb
es
sub
lahf
aaa
add
or
in
(bad)
lahf
retf
es
int3
dec
mov
dec
or
jge
into
jl
call
and
test
cs
cs
stos
(bad)
(bad)
scas
sub
jae
pop
mov
dec
push
aam
test
call
aam
lock
add
pop
popa
sbb
rcl
mov
adc
ret
mov
mov
mov
(bad)
out
xchg
jl
push
test
or
xchg
xchg
jmp
and
jecxz
addr16
adc
jg
mov
sti
aaa
pop
mov
jb
shr
ss
mov
mov
and
loopne
dec
add
mov
dec
adc
push
nop
out
pusha
loope
call
sahf
mov
movs
inc
sahf
dec
jp
(bad)
xor
jne
shr
mov
in
cmp
retf
test
aam
xor
mov
clc
xchg
push
(bad)
fs
pop
mov
pop
inc
dec
mov
icebp
push
jge
cmp
movs
dec
mov
add
outs
shr
loopne
cmp
jl
fnstsw
cmp
js
inc
fsub
jae
dec
loop
std
call
outs
or
mov
loope
xchg
into
imul
push
push
and
in
xor
cmps
push
push
mov
fdivrp
inc
rol
and
das
dec
add
pop
and
test
push
jbe
popf
mov
adc
push
shr
sub
or
pop
mov
test
jb
sets
mov
sahf
push
ds
add
pop
sbb
xchg
pop
jle
adc
retf
and
shr
and
inc
out
fwait
xor
ds
push
cmp
ret
outs
cmp
add
out
ss
repnz
and
les
out
mov
adc
(bad)
push
cmp
je
rcl
repz
arpl
mov
cmp
dec
inc
div
cmp
ins
ja
jmp
fcmovu
aam
push
cld
jne
cs
popa
sub
mov
lds
in
(bad)
inc
loopne
xchg
inc
mov
stc
cmp
and
jo
xchg
stos
mov
dec
ret
mov
jl
scas
sub
add
or
jb
push
das
adc
arpl
icebp
fstp
pop
jecxz
pop
sqrtps
fild
cwde
shl
popa
ins
jo
shr
call
jb
jecxz
mov
das
jp
xor
fstp
and
pusha
mov
cmp
mov
aaa
dec
mov
cmp
xchg
mov
mov
pop
bound
adc
inc
loop
not
out
repz
adc
and
dec
pushf
cwde
js
les
sub
test
and
mov
loope
outs
imul
mov
jno
dec
shr
xchg
outs
xchg
je
and
sar
dec
mov
sub
cmp
iret
aad
movs
mov
or
loopne
pop
dec
pusha
xor
jge
aas
fdivr
lods
fisttp
clc
lock
(bad)
jmp
mov
test
add
imul
pop
and
mov
mov
push
pop
pushf
adc
sar
adc
xchg
or
out
cmp
push
div
and
sahf
nop
cmp
push
add
das
ret
out
fist
cmovno
dec
dec
push
not
dec
sbb
inc
or
ins
rep
xchg
or
xchg
push
and
xchg
pop
add
inc
jp
idiv
pop
mov
adc
out
data16
cwde
jmp
mov
pop
jo
imul
fst
retf
xor
push
mov
ja
inc
(bad)
xor
xchg
leave
jno
jl
jmp
jmp
fisub
imul
ret
pop
add
dec
ss
ins
xchg
scas
clc
add
pop
cmp
sbb
jmp
mov
xor
sub
xor
out
adc
push
data16
rcl
inc
sbb
ins
cs
nop
adc
mov
outs
mov
inc
pop
jno
adc
sbb
adc
inc
out
mov
inc
mov
add
mov
push
mov
cmp
or
mov
movzx
data16
xor
inc
ja
push
es
cmp
adc
cld
mov
push
inc
or
test
adc
pop
cmp
dec
add
cmc
inc
push
xchg
jl
(bad)
mov
cmp
stos
test
ret
mov
and
jle
mov
movs
sub
add
fisubr
adc
ins
lock
es
adc
sbb
cmps
push
fadd
inc
or
jmp
cmp
adc
lea
dec
inc
xor
pop
jnp
bound
shr
adc
cmp
imul
out
sub
das
pop
(bad)
scas
mov
sub
ds
jle
dec
sbb
push
cmp
pop
shl
add
fiadd
daa
add
stc
outs
loop
cli
push
push
pusha
cmp
dec
adc
cdq
icebp
loop
jne
cld
adc
add
mov
fmul
cli
mov
inc
js
sbb
mov
outs
(bad)
jmp
movs
cmp
test
adc
daa
(bad)
and
pop
iret
add
scas
rcr
das
shl
je
xor
mov
dec
or
jae
add
xor
xchg
std
adc
out
nop
mov
jmp
sti
ds
adc
cmc
sub
inc
fcmove
xor
push
(bad)
xchg
xor
add
gs
popf
loope
loopne
retf
cmc
dec
inc
jg
call
lea
daa
and
and
xor
lock
ins
dec
push
lea
scas
pusha
mov
lea
cmp
jno
push
les
cwde
cmp
jne
ret
es
xor
imul
sub
mov
aam
dec
xor
jge
jo
adc
sub
adc
xchg
sub
jns
fcom
ffreep
add
fsubr
inc
adc
cmp
retf
dec
loopne
ds
inc
(bad)
pop
mov
inc
bound
or
mov
pusha
jno
add
dec
ss
loopne
(bad)
cwde
rcr
es
rcl
scas
mov
hlt
mov
add
(bad)
ss
mov
mov
scas
inc
xchg
addr16
xor
lddqu
adc
enter
cli
cmp
sbb
iret
jl
test
and
sub
inc
dec
test
pop
xchg
pop
rcl
dec
sub
jb
adc
xor
imul
mov
lods
inc
dec
inc
and
inc
mov
sar
jmp
jbe
repnz
mov
icebp
call
xor
xchg
cmp
push
in
xlat
fcomi
cmps
or
mov
leave
cmc
or
sub
ror
pop
imul
mov
mov
imul
jmp
cmp
inc
pop
(bad)
lds
dec
cmp
(bad)
cmps
jle
jg
mov
movs
sub
xor
add
jbe
ret
and
add
jno
adc
jecxz
mov
(bad)
rcr
adc
mov
jo
inc
psraw
in
jg
jo
inc
js
mov
sahf
xlat
in
push
into
mov
xchg
retf
rcl
push
sub
sub
into
inc
cmp
pop
ficomp
les
push
xchg
test
cmp
jmp
ret
pop
loop
mov
fwait
mov
cli
dec
shr
dec
and
gs
adc
out
push
adc
cld
sbb
mov
add
or
or
add
push
inc
cmp
push
xchg
out
xor
retf
push
stos
cmp
stos
mov
fnstsw
movs
push
(bad)
call
call
stc
sub
lods
mov
mov
lea
xor
mov
in
retf
mov
add
pop
retf
rol
inc
int3
sbb
or
inc
fisub
loop
push
icebp
ss
fwait
(bad)
inc
inc
mov
ret
sub
pushf
or
jp
xchg
inc
cli
mov
ss
mov
jecxz
or
add
jp
jle
ret
repnz
aad
and
int
xchg
push
jmp
pop
cmps
enter
or
pop
je
xchg
push
aas
inc
inc
lds
jne
pop
cmp
out
add
jl
jmp
inc
sub
push
push
jge
and
add
dec
and
iret
mov
inc
pop
or
xor
jg
mov
add
inc
test
mov
jg
paddd
pop
retf
push
pop
cmp
push
xchg
xchg
fs
imul
std
dec
mov
mov
mov
hlt
mov
mov
sub
mov
into
xchg
stos
lea
dec
mov
pop
jns
jle
pop
scas
pop
sbb
cmps
jnp
sub
pop
cld
and
lock
stos
sbb
test
test
cmp
push
stc
into
mov
cmps
pop
pop
mov
loopne
mov
imul
popa
repz
jo
cld
sub
loope
lahf
xchg
dec
aam
ds
cdq
into
pop
in
out
cmp
jmp
push
sbb
jns
into
xchg
dec
cwde
mov
cs
(bad)
fucomi
xlat
xchg
cld
stos
das
sub
push
mov
push
sbb
shr
mov
jge
into
and
inc
cmc
test
ret
xchg
push
push
push
adc
es
test
ror
iret
adc
sub
adc
jns
inc
into
push
cmc
cmc
js
xchg
cwde
stos
xor
push
mov
mov
call
or
call
add
mov
push
cld
sar
mov
inc
adc
or
ror
mov
push
pop
push
retf
movs
hlt
test
movs
scas
nop
stos
xor
dec
and
xor
dec
add
out
mov
stos
movs
shr
cs
int
cs
cwde
and
jnp
imul
xor
inc
mov
aas
or
push
inc
xor
cmp
aas
push
popa
sub
mov
setge
mov
into
fnsave
stos
std
sub
push
ror
mov
ins
and
adc
sub
sahf
push
(bad)
xor
stos
cmp
lock
add
jae
jmp
int3
push
inc
jns
test
test
mov
ja
out
mov
test
jg
aas
adc
inc
inc
fs
into
xchg
mov
pusha
js
addr16
aaa
test
mov
push
mov
adc
xor
mov
retf
rcr
add
mov
jge
dec
inc
dec
mov
push
call
jecxz
dec
xlat
cmps
out
into
or
jg
fdivr
pusha
push
mov
shl
call
les
xor
pop
push
fstp
loope
xchg
outs
inc
cs
xchg
adc
jno
(bad)
sahf
pop
mov
out
wrmsr
imul
mov
inc
int
xchg
mov
repz
(bad)
xchg
retf
inc
pop
imul
js
scas
adc
xchg
and
mov
mov
push
dec
sbb
mov
fcom
add
mov
jp
(bad)
mov
and
repz
(bad)
cmp
jne
data16
cmp
jbe
xchg
cmp
inc
cdq
sahf
pop
add
jae
test
jnp
xor
shr
ins
mov
hlt
mov
aam
out
push
add
loop
ror
sti
mov
jp
jl
push
sub
pop
das
(bad)
out
shl
movs
pusha
dec
dec
ins
mov
push
call
cmp
scas
aad
imul
xchg
cmp
sub
inc
inc
inc
mov
adc
cmp
pop
push
fsubr
mov
push
ins
mov
mov
xchg
imul
jmp
dec
imul
clc
adc
aas
pop
cmp
add
push
not
arpl
repnz
push
push
nop
mov
aam
rol
gs
lea
push
pop
adc
xchg
mov
and
add
aas
cs
or
sbb
xor
adc
das
outs
push
sub
out
add
sbb
xchg
ret
daa
shr
and
je
mov
es
dec
shl
mov
push
dec
repnz
mov
dec
inc
jne
sbb
retf
adc
int3
lock
jecxz
mov
adc
xor
dec
out
(bad)
movs
loopne
mov
pop
push
stos
mov
out
test
mov
sub
jo
outs
shl
pop
loop
pop
ins
movs
jmp
pop
cli
nop
push
call
cmps
ss
jmp
icebp
push
mov
xor
(bad)
lea
mov
xor
sub
jecxz
aas
into
loopne
inc
cld
ret
sbb
sub
adc
or
outs
adc
lods
sahf
pop
jl
and
push
pop
and
mov
inc
ror
xor
les
cli
push
cmovg
outs
xchg
mov
scas
or
xchg
sbb
in
lods
mov
ins
cmp
neg
gs
cli
mov
mov
popf
shl
test
adc
push
out
and
les
mov
push
mov
movs
xchg
xor
sbb
or
and
cmp
je
push
stos
test
mov
cmp
mov
rcr
adc
mov
adc
test
push
adc
ror
and
fwait
iret
mov
js
mov
aas
lea
pop
or
ds
hlt
enter
lods
rol
mov
aaa
int
retf
xor
ret
xor
rcr
dec
shr
push
fiadd
aam
jg
xchg
sub
aaa
sub
and
mov
jl
push
sub
fwait
(bad)
dec
movs
int3
and
inc
jo
scas
fwait
adc
jmp
mov
enter
scas
push
popf
cmc
sbb
repnz
xor
mov
aas
in
or
xor
pop
jg
les
or
jb
or
movs
jmp
ins
out
retf
jbe
ret
mov
popf
xlat
sub
shr
cmps
or
mov
push
sbb
imul
je
mov
(bad)
mov
pop
dec
ret
mov
int3
sub
pop
js
jb
jle
pop
adc
pop
ss
js
xlat
and
xchg
pushf
into
mov
stos
data16
scas
add
mov
push
cmp
je
(bad)
out
mov
test
clc
repnz
call
mov
mov
sub
ror
into
inc
clc
frstpm(287
je
add
out
ss
(bad)
pusha
inc
mov
inc
mov
imul
pop
cmp
rep
dec
pop
jg
push
jg
mov
ds
push
and
adc
jg
out
fisubr
sahf
xchg
sahf
jns
rcl
mov
unpckhps
xor
inc
inc
movs
js
xchg
sahf
call
cmps
xchg
sar
out
pushf
or
adc
imul
test
in
and
lock
add
call
sbb
js
mov
iret
enter
mov
add
jp
call
adc
dec
sub
cmp
stos
xchg
add
xor
ret
mov
pop
jp
iret
push
sbb
arpl
out
cwde
push
add
clc
mov
div
mov
or
ins
das
int3
dec
adc
sub
(bad)
pop
int
popf
push
adc
pop
or
adc
and
fistp
add
hlt
sub
fdiv
cmp
mov
inc
xchg
enter
mov
sub
scas
cli
enter
mov
push
aam
mov
lds
sar
cs
dec
gs
das
inc
jns
mov
je
dec
movs
loopne
shl
ja
sti
loopne
shr
sub
jg
cmp
jbe
jo
(bad)
lock
jp
mov
sbb
mov
call
pushw
popa
dec
cmp
aas
jmp
xor
sti
ins
mov
sub
es
in
jle
mov
outs
lock
into
in
dec
mov
push
ins
adc
push
rol
outs
mov
scas
repz
ret
lods
rol
adc
cmps
movs
sahf
xor
jmp
mov
lock
scas
sar
push
(bad)
sub
adc
stc
and
daa
shr
mov
xchg
into
(bad)
add
mov
iret
out
ror
pop
je
das
bound
jo
ds
out
inc
xchg
fild
mov
icebp
jg
cmovge
xor
push
inc
cmp
and
shl
xchg
adc
jg
les
gs
adc
sub
or
jg
int3
hlt
cmp
loop
retf
repz
cmps
push
xor
shr
int3
ss
popf
sub
adc
leave
cs
sub
pop
stos
inc
aaa
enter
sahf
mov
xchg
cwde
stos
call
les
jp
adc
cmc
mov
push
push
in
xchg
cmp
cmps
jo
pop
push
add
sub
inc
test
push
inc
std
rcl
test
xchg
cmp
sbb
jge
lds
ror
or
cmc
(bad)
stc
sub
mul
sub
add
cmp
ss
out
scas
icebp
sbb
cmp
(bad)
jmp
fsubr
pinsrw
adc
pop
jmp
mov
outs
pop
fadd
fdiv
mov
je
or
sub
add
ds
jecxz
jge
fcom
mov
out
dec
mov
or
aad
int3
adc
adc
pusha
das
in
xor
jns
mov
idiv
aad
jecxz
mov
jo
adc
loope
pusha
cld
push
sub
popa
mov
out
pusha
pop
add
push
add
push
push
and
daa
ja
mov
fiadd
xchg
movs
mov
cli
out
inc
cmp
loope
pop
mov
imul
adc
test
in
jg
adc
pop
sti
or
nop
jno
daa
xor
jbe
stos
cmp
pushf
shl
outs
xchg
pop
mov
xor
sbb
jae
lds
imul
fdivr
in
aas
movntq
scas
jp
xchg
rol
cmp
mov
push
jl
push
outs
sbb
dec
scas
lock
dec
push
cmc
push
mov
and
iret
dec
iret
cmp
and
mov
mov
dec
stos
inc
mov
push
adc
adc
sub
cmp
pusha
push
(bad)
mov
sbb
scas
cdq
jae
and
fadd
div
jl
enter
int
(bad)
loop
adc
fwait
mov
jmp
xor
inc
outs
les
adc
adc
cs
rol
xchg
repnz
fucomip
mov
sbb
mov
cmps
pop
loopne
add
cmp
add
jcxz
mov
xor
mov
mov
pop
push
loope
dec
inc
scas
std
dec
test
sbb
stos
dec
jge
or
sbb
outs
js
or
jne
mov
(bad)
call
push
mov
sbb
lahf
jle
cmp
sbb
push
inc
push
cmp
xor
ins
mov
inc
das
jno
add
and
das
adc
cmp
sub
lea
mov
call
adc
dec
jle
cmps
inc
outs
inc
dec
inc
hlt
div
test
mov
add
imul
sbb
mov
cwde
(bad)
(bad)
cmc
icebp
cmps
sbb
aad
daa
clc
mov
mov
in
jg
mov
iret
mov
pop
push
xchg
lahf
jge
or
cmp
(bad)
xor
mov
(bad)
sahf
lods
frstor
cmp
sub
outs
repnz
mov
loop
(bad)
xchg
jo
ret
inc
movs
pushf
mov
add
sub
inc
push
mov
int
fcomp
xchg
fdivr
out
int3
jecxz
adc
outs
movs
test
push
fidivr
imul
das
dec
inc
ror
add
adc
mov
cmps
cmps
ror
ror
not
leave
sub
pushf
lea
mov
pop
or
xor
aad
loope
cwde
mov
cmp
push
pop
lods
in
xchg
and
sbb
mov
mov
cmp
sub
imul
imul
add
inc
sar
retf
loope
(bad)
scas
inc
leave
test
daa
test
fild
inc
sbb
sbb
push
xchg
mov
push
dec
mov
addr16
xchg
lods
xchg
mov
es
pop
inc
mov
fild
outs
call
mov
push
or
pop
lock
jmp
jo
cmp
jae
cwde
xadd
pop
mov
retf
jo
(bad)
sahf
cld
call
pop
push
sbb
dec
push
xchg
or
sti
sahf
add
clc
xchg
sar
in
or
sub
or
add
imul
mov
dec
arpl
stos
inc
mov
enter
rcr
loop
mov
call
aas
cld
sbb
jmp
fsub
(bad)
xor
xor
jbe
mov
jecxz
and
and
push
aas
push
(bad)
lock
xchg
jl
add
mov
mov
mov
or
mov
and
adc
add
cmps
jnp
dec
or
pop
loope
sub
sub
pop
add
or
(bad)
daa
lock
mov
push
jp
lods
fs
shl
dec
inc
inc
jbe
gs
cs
mov
dec
and
push
cmp
and
pushw
dec
sub
add
xor
adc
retf
add
lods
and
dec
push
xor
mov
xlat
fcomp
adc
and
std
jne
push
dec
lahf
push
xor
inc
stos
ret
ins
add
jle
mov
cmp
lock
xor
mov
xchg
mov
mov
rol
lds
shl
(bad)
jno
sub
xor
call
sti
imul
dec
inc
cdq
pop
cdq
mov
sub
sub
jle
push
(bad)
lods
stc
into
inc
add
cmp
lock
movs
adc
push
hlt
inc
mov
fisttp
mov
into
mov
cmc
and
jo
ret
push
mov
xor
pop
fcom
sar
clc
loop
ins
inc
pop
xchg
ins
mov
xchg
es
pusha
xor
mov
in
mov
out
sbb
fnsave
sbb
push
jnp
outs
and
jne
cmps
fs
sub
add
mov
add
mov
sbb
mov
pop
push
cmp
addr16
into
or
popf
ret
adc
aam
xor
outs
ins
jo
in
test
fisttp
int
xor
outs
ret
cdq
fmul
or
add
dec
inc
je
ja
mov
jge
imul
stos
jg
sub
mov
(bad)
out
sbb
mov
push
pop
push
rcr
hlt
lahf
hlt
mov
adc
add
sbb
mov
sbb
lahf
mov
inc
sbb
test
cwde
fild
lahf
adc
xor
pop
imul
and
popf
or
adc
test
mov
clc
pop
call
cmc
mov
pop
mov
rcr
iret
or
hlt
mov
ss
adc
push
xchg
es
sub
mov
mov
int3
test
sub
xor
jo
push
cmp
iret
scas
in
fwait
loope
clc
cld
icebp
mov
jle
shl
add
pop
dec
aad
enter
jns
or
jg
cld
inc
cmp
adc
fbld
mov
push
(bad)
ja
(bad)
sahf
inc
xor
xor
out
or
lea
mov
push
test
dec
dec
jl
fidivr
sub
stos
push
adc
cmps
cmp
fisttp
sbb
ror
mov
xlat
in
cmp
in
pop
fdivr
jno
loope
adc
xchg
mov
jecxz
jl
js
mov
(bad)
test
out
repz
loope
and
repnz
pop
xchg
sbb
inc
cmp
mov
xchg
jecxz
jecxz
ffreep
not
cli
jmp
jp
add
jmp
fwait
jmp
lods
call
ror
repnz
fdiv
or
push
test
ret
pop
mov
mov
sub
jp
xchg
or
pop
call
push
loop
inc
mov
push
sar
jl
mov
mov
xchg
lods
outs
or
call
add
pop
inc
arpl
in
mov
mov
ret
into
inc
cli
xor
or
inc
cs
aas
jmp
pop
inc
pop
lahf
xor
or
add
xor
ss
loope
popf
shl
add
xchg
xor
xor
jge
bound
push
jno
cmc
jnp
or
mov
sbb
sub
mov
mov
cmp
xorps
add
pop
daa
push
lods
fnstenv
cmp
(bad)
scas
test
bound
push
dec
jns
xchg
mov
mov
add
sbb
xchg
mov
scas
scas
loop
mov
ins
pop
rol
dec
stos
jmp
es
icebp
push
mov
mov
std
and
cmp
pop
or
mov
or
mov
sahf
fdivr
adc
int
mov
xor
popa
fimul
mov
mov
push
push
jle
push
push
adc
adc
hlt
and
mov
jmp
jo
and
std
mov
xor
xchg
push
adc
mov
and
pushf
push
or
faddp
repnz
xor
mov
repnz
pusha
sub
je
leave
icebp
pop
sbb
mov
jmp
dec
icebp
bound
fcomp
mov
jl
dec
ret
fadd
jp
xchg
pop
ins
xchg
jp
fistp
mov
sbb
popa
adc
mov
mov
mov
in
xchg
dec
inc
aad
jb
hlt
mov
mov
pop
sar
mov
fiadd
fldenv
pushf
sbb
sbb
xor
outs
mov
jns
xchg
imul
ficom
test
mov
std
cmc
outs
add
retf
stc
mov
add
push
jae
stos
sub
and
rol
dec
sti
jg
jp
mov
mov
sub
cdq
cmp
outs
scas
adc
inc
enter
lfs
cwde
js
test
adc
mov
pop
mov
lahf
xlat
into
dec
pop
xchg
pusha
adc
(bad)
stc
pop
lods
out
test
sbb
or
push
dec
test
in
mov
inc
sahf
mov
mov
jno
adc
shr
pop
push
inc
mov
push
push
call
cmps
test
test
jo
jno
rcl
adc
cmp
push
jno
inc
xor
add
mov
xor
dec
dec
test
push
xor
mov
wrmsr
cmp
popa
into
cmp
ds
cmp
xchg
retf
dec
mov
test
(bad)
push
xchg
sub
jg
mov
mov
imul
jbe
cmp
dec
mov
mov
inc
jmpw
loope
loop
push
pop
xchg
adc
fld
mov
cmp
add
inc
bound
les
mov
pop
xor
into
test
daa
xchg
(bad)
fcomp
xchg
movs
sbb
sub
shr
ror
int
mov
mov
jecxz
retf
aas
es
jo
iret
ja
(bad)
psllq
ins
shl
xchg
add
inc
pop
sub
and
cmp
xchg
sub
sub
out
icebp
add
pop
enter
mov
cs
enter
cmps
cmc
int3
push
xchg
repz
mov
mov
pop
rol
cmp
scas
and
loope
addr16
stos
into
or
es
lods
push
ja
scas
jno
or
jle
stc
test
mov
popa
ret
mov
mov
xor
jbe
push
popa
cmp
popf
shl
or
add
ds
dec
cmp
pop
pop
lea
mov
mov
xor
dec
dec
je
sub
add
ds
popf
mov
mov
cmp
xor
mov
jo
icebp
push
xor
mov
mov
nop
pop
pusha
out
cs
pop
ins
push
neg
jp
pop
adc
test
add
adc
bound
shl
jb
xor
mov
jmp
imul
jno
inc
ds
cwde
test
int3
iret
loope
mov
push
dec
inc
arpl
arpl
push
fadd
cmps
add
adc
sbb
ror
sahf
mov
jecxz
adc
adc
sub
stos
inc
aam
or
mov
cmp
jecxz
cmps
movs
lods
xchg
pop
mov
push
cmc
ja
jp
iret
repz
jp
inc
into
adc
dec
pop
rcr
lock
xor
add
pusha
retf
xor
out
add
push
mov
sar
pop
pop
xchg
mov
fs
nop
mov
shr
lods
repz
jb
jae
push
lods
mov
sub
add
inc
dec
and
sar
mov
jne
mov
cli
jle
push
add
outs
mov
pop
and
pop
hlt
shl
push
ds
icebp
imul
fbstp
sbb
nop
push
cs
jl
jbe
js
fbld
xor
and
adc
repz
arpl
inc
test
sar
xor
je
fiadd
pusha
and
sahf
ins
sbb
push
aad
retf
jnp
mov
pop
mov
inc
loop
in
sbb
inc
out
cmps
sub
aas
inc
or
fisubr
xor
xlat
cld
jg
pop
mov
or
mov
jmp
cli
and
adc
rcr
push
int
(bad)
xor
das
jne
sbb
mov
fadd
bound
(bad)
out
pop
ror
pushf
add
ficom
rep
sub
xchg
push
push
jl
fsub
jl
xor
fidiv
mov
gs
pushf
jle
xchg
enter
call
mov
das
rcl
in
xchg
pop
test
outs
adc
das
out
fnstsw
inc
cwde
mov
out
pop
mov
jno
xor
js
icebp
in
pushf
scas
and
addr16
push
jmp
gs
sahf
inc
jmp
jmp
repnz
out
pop
add
fistp
jmp
sbb
aam
bound
xor
sar
call
xchg
add
ss
call
cs
(bad)
sub
inc
push
arpl
push
test
and
add
fisub
or
mov
outs
pop
imul
cmps
jne
aam
inc
mov
les
rcr
or
aam
push
stc
dec
mov
jno
or
and
xchg
sbb
cmps
xor
into
push
pop
xor
pop
aam
jmp
cmp
std
lods
cwde
cmp
outs
mov
rcl
pop
stos
sbb
mov
out
call
sub
aaa
adc
cmc
ins
sbb
scas
ror
and
push
add
lock
push
xor
jle
test
inc
lahf
sar
stos
sbb
imul
pop
retf
cmp
mov
xor
inc
inc
stc
call
cmps
outs
into
sbb
ds
adc
ins
outs
scas
xlat
out
mov
mov
imul
addr16
ret
(bad)
enter
jp
or
sahf
adc
mov
inc
popf
jle
adc
and
enter
jle
push
hlt
jae
xor
test
int3
or
fistp
out
ja
or
cmc
stos
jl
retf
mov
jecxz
jo
inc
or
and
out
movs
aaa
pop
(bad)
popa
pop
mov
mov
push
sbb
xor
mov
popf
xchg
into
inc
sbb
add
xchg
push
loop
xlat
mov
ds
stos
(bad)
test
jp
outs
jle
mov
push
xor
lahf
icebp
aaa
aaa
pushf
jmp
or
jb
cwde
mov
into
out
sahf
pop
mov
iret
sbb
mov
js
or
scas
retf
cld
push
jg
enter
popa
sbb
int3
add
or
popf
mov
or
cmp
pusha
ds
outs
and
mov
sub
les
dec
inc
dec
faddp
loop
mov
adc
jo
pop
shl
shr
adc
fdivr
sub
das
sbb
ds
popa
or
inc
mov
ins
xor
xchg
pop
mov
add
mov
popa
test
pop
mov
cli
movs
sub
sbb
leave
outs
add
xor
stos
bnd
cmp
xchg
inc
adc
and
sar
(bad)
xchg
not
loop
xchg
inc
dec
(bad)
xchg
loope
out
retf
mov
outs
ins
addr16
repz
cmove
mov
jo
or
inc
xchg
xchg
push
arpl
xchg
jae
xchg
jmp
push
out
xchg
nop
(bad)
aam
out
mov
sahf
jb
clc
(bad)
dec
add
sub
pusha
movs
pop
adc
rcr
inc
loope
nop
dec
xor
xor
xchg
ss
mov
inc
add
mov
push
cmp
dec
jb
ret
dec
xor
out
push
push
int
out
xor
cmp
ins
fsub
push
out
pop
or
out
jg
out
test
xor
cmp
sub
test
mov
cmp
xchg
jmp
xor
icebp
dec
retf
sbb
cwde
imul
jb
add
imul
mov
retf
cmp
lods
mov
adc
outs
adc
dec
dec
scas
and
repz
(bad)
jne
or
and
das
mov
cmp
pop
xor
pop
loopne
inc
pop
pop
inc
data16
imul
sti
(bad)
scas
mov
pop
(bad)
pop
cs
enter
inc
rep
cs
mov
mov
sbb
aad
out
les
mov
ss
pop
push
das
test
dec
fs
lock
push
mov
imul
xor
add
jnp
or
sbb
mov
outs
dec
scas
sub
test
xor
std
xchg
sti
adc
pop
sar
in
popf
fld
push
fdivr
ror
jno
adc
xor
sub
or
scas
dec
daa
add
fnsave
into
xchg
dec
loop
stos
pop
rol
cs
in
jle
push
xchg
mov
jb
and
jns
fisubr
xchg
rcr
xchg
ficom
jbe
sbb
pusha
scas
pop
or
mov
xchg
stc
xchg
push
data16
push
cmp
hlt
aad
mov
test
lods
(bad)
sar
rcr
aam
mov
das
pop
and
jbe
loopne
pusha
icebp
inc
sbb
stos
lahf
jmpw
fdiv
and
jg
and
outs
lods
push
and
jmpw
add
adc
call
add
inc
sbb
sbb
repz
lods
js
test
mov
xlat
pop
pop
push
ins
jp
hlt
sbb
sub
jo
and
scas
pop
push
repnz
sub
stos
push
sbb
pop
cmp
shl
jnp
outs
inc
and
inc
sub
sub
and
ss
adc
fisttp
js
mov
add
popf
repnz
test
les
push
pop
sub
push
push
repz
adc
and
adc
(bad)
popa
push
push
in
mov
mov
test
cli
pop
bound
ret
out
les
daa
mov
not
es
fbstp
inc
and
jmp
ficomp
icebp
adc
pop
retf
pop
jbe
ds
cmp
(bad)
je
(bad)
addr16
enter
mov
ffree
jnp
push
fcom
xchg
call
jb
inc
adc
jmp
outs
xor
add
lahf
frstor
jno
push
scas
jg
shl
jnp
cs
xor
in
daa
jg
push
clc
rol
nop
test
pusha
stos
test
fs
scas
adc
or
in
sub
add
(bad)
adc
pusha
mov
retf
scas
sbb
popf
shl
call
push
bound
cmp
rcr
out
jecxz
sub
out
fstp
imul
psubsw
cmp
stos
call
fs
dec
push
jb
push
mov
adc
movs
mov
ret
add
or
das
test
inc
or
fs
mov
test
cmps
mov
mov
mov
pushf
mov
xor
pop
dec
push
jg
pusha
or
aad
icebp
imul
dec
lock
add
mov
jecxz
and
inc
fwait
push
test
adc
enter
add
add
sar
xor
inc
sbb
out
dec
(bad)
adc
rcr
dec
int
pop
mov
mov
stos
rol
push
mov
rsqrtps
add
mov
sbb
mov
xor
call
sbb
jecxz
xlat
stos
pushf
nop
mov
xchg
jno
pop
xor
jns
mov
cld
rol
sahf
(bad)
mov
add
inc
imul
jo
cmc
ss
fld
xor
movs
nop
call
pop
in
sub
into
mov
adc
xor
xor
xchg
popf
push
mov
scas
mov
in
push
push
mul
mov
push
sbb
xor
xor
bound
(bad)
pop
sahf
pop
push
cmp
xchg
or
add
mov
inc
mov
loop
cli
mov
push
nop
inc
loope
push
and
pop
dec
dec
push
jp
jp
push
lods
cmps
popa
cs
into
mov
xchg
enter
sahf
int3
scas
rol
icebp
retf
pop
or
lods
xor
add
scas
jbe
push
sahf
jb
fld
stos
pop
je
dec
repz
imul
adc
mov
rcr
ror
inc
into
lds
int3
sub
xchg
adc
out
push
addr16
or
cmp
ret
test
ins
enter
test
xchg
nop
fcmove
and
gs
or
lahf
jo
call
jno
push
fadd
jge
lods
push
mov
cs
inc
lea
sub
fwait
out
bound
pop
mov
pop
dec
and
inc
add
mov
lods
outs
inc
outs
leave
sbb
sub
add
pushf
mov
stos
mov
imul
out
add
adc
cmp
jecxz
jmp
inc
fwait
mov
(bad)
or
xchg
lahf
sbb
xchg
push
lea
pop
pop
sub
jo
mov
fsubr
lahf
fsubp
mov
and
sub
sbb
repnz
push
cwde
cld
pop
les
jbe
add
adc
movsx
mov
mov
dec
aam
enter
cmp
jo
mov
ins
fmul
test
pop
inc
jbe
scas
add
shl
enter
sar
mov
loopne
add
rcl
inc
adc
or
fdivr
(bad)
xchg
mov
jl
dec
enter
add
pop
pop
pop
dec
loop
jg
mov
sub
lods
and
ficomp
jns
pop
arpl
stc
or
add
mov
adc
mov
in
sbb
ins
dec
nop
scas
shr
test
dec
ins
shl
bound
push
and
sub
inc
dec
mov
jle
pop
retf
and
pushf
js
cmp
mov
cs
xchg
(bad)
mov
retf
jl
push
add
lods
dec
cmp
and
mov
sub
lock
xchg
scas
dec
cmc
ins
inc
dec
test
bound
or
xor
dec
or
jnp
(bad)
lock
scas
adc
pusha
jns
outs
adc
std
mov
sbb
lock
test
cdq
movs
(bad)
jmp
sub
and
inc
aas
push
cmp
std
dec
wrmsr
pop
mov
inc
mov
mov
mov
ins
xchg
adc
in
cli
inc
xor
jmp
adc
adc
inc
popf
lahf
jbe
jge
push
sbb
sub
xchg
adc
sub
in
cmp
mov
mov
push
shl
fadd
(bad)
pop
adc
inc
fsubr
adc
ins
mov
in
gs
(bad)
(bad)
sbb
cmp
xor
inc
jle
aas
xchg
xor
mov
push
imul
sub
sbb
mov
outs
loopne
and
(bad)
cmc
rcl
(bad)
(bad)
adc
lahf
dec
ret
push
xor
push
lods
mov
cmp
scas
movs
enter
adc
stc
and
inc
sub
xor
repz
and
sar
idiv
fwait
sub
es
icebp
pop
jo
lds
aam
fiadd
loope
movs
inc
xor
cmp
js
adc
mov
xchg
mov
icebp
sub
sahf
xchg
out
mov
jle
sbb
jge
dec
je
mov
repz
loop
jge
popf
cmps
jnp
(bad)
out
and
into
loope
imul
rcr
inc
dec
loop
rol
outs
das
call
mov
imul
ds
xor
or
pmaxsw
push
out
mov
jp
jp
ror
mov
pop
jno
pmaddwd
pusha
pop
or
inc
adc
in
mov
cmps
(bad)
dec
rcr
outs
mov
push
dec
popa
dec
repz
mov
(bad)
iret
jmp
sar
call
mov
add
jmp
sub
dec
into
pop
xor
out
push
popa
rol
sar
ins
mov
ds
push
pop
arpl
mov
test
stos
add
ror
xor
scas
push
add
imul
lea
lds
scas
mov
jge
mov
or
lahf
cmp
int
test
(bad)
in
das
pop
pusha
xchg
out
adc
or
mov
mov
push
sbb
cmp
xchg
push
xchg
je
mov
pop
jecxz
sbb
or
sbb
shl
dec
xor
ror
fisub
fcmovnbe
retf
inc
sub
pop
(bad)
pop
and
inc
sub
mov
sbb
fld
cmp
sahf
repnz
cli
into
imul
outs
in
fdiv
(bad)
sahf
out
das
or
xchg
shr
cmp
retf
push
push
cmovne
(bad)
and
inc
js
retf
dec
sub
or
dec
cmc
sbb
addr16
cs
retf
iret
popa
je
mov
das
xchg
dec
push
add
call
bnd
mov
and
jbe
xchg
int
jmp
mov
fcmovnb
sbb
push
mov
push
out
mov
xchg
pop
dec
xchg
ins
pop
loop
std
mov
sti
xchg
mov
mov
jne
fst
outs
xchg
jb
jae
pushf
enter
sub
mov
jmp
xor
popf
push
pop
xor
and
mov
mov
(bad)
push
and
ret
mov
jl
das
imul
sub
cwde
mov
jns
mov
xchg
int
mov
loopne
rcl
not
push
sar
mov
push
fadd
pop
push
ret
pop
and
push
xchg
push
(bad)
and
pusha
mov
test
or
pcmpgtb
and
js
pop
sub
push
xchg
mov
lods
push
jle
mov
pop
bswap
loop
add
aad
icebp
sbb
aad
jg
mov
xchg
retf
add
ss
lods
cli
add
(bad)
mov
and
aas
rol
xor
and
mov
call
popf
loopne
addr16
push
imul
popa
ds
lahf
out
sub
loop
adc
icebp
pop
loope
lea
and
out
pusha
pop
inc
push
adc
test
call
sub
dec
mov
inc
cmps
mov
(bad)
idiv
push
das
aam
ja
loopne
mov
xor
iret
call
outs
jae
icebp
push
cdq
dec
loop
scas
jmp
cmps
push
clc
mov
cmc
xchg
xchg
shl
mov
pop
in
imul
(bad)
jmp
popf
xor
scas
dec
lods
pop
push
test
push
ins
and
pop
ret
jne
xor
out
add
xlat
mov
mov
movs
cmp
add
ret
jae
or
mov
mov
sbb
mov
jg
jno
and
adc
push
stc
sub
push
push
ret
or
aad
xchg
fidivr
scas
lock
mov
ret
packsswb
inc
das
je
mov
mov
or
add
or
lea
call
pop
add
add
bound
xlat
scas
pusha
repnz
mov
out
dec
shl
and
out
push
fisubr
ds
inc
repnz
pop
pusha
std
sub
into
lock
fcmovne
mov
clc
xor
adc
shr
popa
(bad)
mov
and
data16
cdq
jnp
js
mov
mov
(bad)
xor
dec
jge
cmps
inc
inc
add
jb
dec
bound
or
outs
sti
cdq
arpl
leave
dec
sub
dec
add
cmp
and
and
ins
(bad)
xchg
mov
nop
popa
cdq
jb
inc
cmps
add
cld
inc
pop
and
xchg
inc
fwait
test
mul
daa
loopne
pusha
nop
into
hlt
cs
ret
stc
in
sub
xor
adc
jecxz
test
add
into
xchg
out
repz
lock
inc
pop
loope
repz
das
fldenv
imul
popf
push
aaa
dec
mov
pop
mov
sub
xchg
sar
lds
sbb
ds
pop
bound
jae
jno
inc
(bad)
sbb
ds
das
nop
push
leave
mov
mov
popf
je
cmp
jge
adc
xchg
adc
xchg
pop
fiadd
jmp
dec
loope
popf
pushf
mov
mov
rcr
add
push
outs
test
mov
pop
dec
dec
ds
mov
lds
scas
push
pop
adc
test
lods
gs
mov
mov
cmp
fwait
pusha
cmp
loopne
fmul
es
xor
ins
push
or
cmp
xor
fsubp
outs
sbb
xchg
fldenv
mov
daa
fadd
stos
jmp
mov
or
jbe
and
pushf
sti
pop
mov
xchg
dec
int3
pushf
mov
pop
outs
data16
(bad)
mov
loop
inc
or
iret
bound
xor
jmp
stc
movs
jnp
dec
push
mov
cmp
hlt
jbe
das
das
inc
rep
xor
popa
jo
sbb
xor
test
nop
mov
stos
sahf
sar
xchg
fbstp
sub
cmps
inc
push
adc
cmc
retf
lock
mov
pop
mov
and
cmp
es
xchg
or
arpl
sub
jno
lock
(bad)
jb
and
jno
jbe
je
dec
dec
sbb
inc
adc
mov
jp
pushf
pusha
call
shl
nop
cmp
fcmove
pop
inc
mov
test
dec
pop
xor
pop
jge
retf
stc
mov
push
outs
clc
or
fbstp
out
inc
add
test
retf
pop
pop
xor
ss
movs
jae
(bad)
push
dec
xchg
xor
repz
or
push
enter
and
dec
mov
scas
ror
add
jbe
pop
pusha
lods
and
xor
mov
sti
idiv
cmp
outs
jp
or
adc
lock
ins
out
aas
sub
sbb
pop
mov
and
push
test
cmp
lahf
call
and
and
adc
(bad)
pop
xchg
sub
push
jg
sub
and
push
lock
fwait
cwde
mov
sub
fnstenv
pop
add
xor
rcl
ror
imul
or
outs
pushfw
fsub
mov
adc
leave
out
test
pop
mov
ret
std
xchg
jmp
adc
sbb
data16
jg
fsubr
cmp
xchg
mov
cmp
sti
jg
push
and
int
push
inc
xchg
cmps
lea
rcl
pop
aas
inc
adc
sti
mov
push
mov
setns
push
pusha
mov
mov
mov
iret
adc
aad
adc
popa
in
push
adc
and
iret
cli
jmp
shr
call
lea
daa
inc
fwait
test
xchg
push
jb
push
std
cld
fadd
dec
popa
outs
jecxz
clc
jle
and
test
test
out
or
into
mov
in
dec
rcr
and
mov
and
inc
fdivr
add
out
shr
sub
sbb
add
dec
arpl
pushf
dec
push
or
cs
cwde
inc
xchg
test
sar
add
jge
pop
jno
in
ds
ja
lock
mov
(bad)
pusha
mov
gs
push
pop
xor
sbb
das
sub
or
aam
rcl
aas
xchg
pop
xchg
adc
adc
ret
inc
das
retf
sbb
dec
jbe
ins
add
add
fsubr
pop
enter
mov
pop
fisttp
in
stos
push
xor
adc
imul
and
mov
fnstcw
lahf
mov
cdq
xchg
ins
adc
cmp
ror
clc
stc
dec
add
jge
rcr
add
mov
arpl
pop
arpl
or
(bad)
popf
cli
lods
inc
jno
aas
jmp
jo
jno
sbb
sbb
les
(bad)
in
xor
sub
push
jns
mov
es
add
mov
or
add
inc
push
adc
pop
add
nop
adc
ret
shl
loope
jb
cmp
jmp
dec
mov
add
dec
std
fsubr
cmp
xlat
repz
popa
dec
into
push
retf
repz
xor
push
xchg
fisttp
jno
test
ret
adc
mov
jecxz
in
test
push
repz
jmp
into
bnd
adc
(bad)
icebp
and
outs
fsubr
add
lock
loopne
or
push
aas
nop
outs
dec
data16
popa
retf
and
ins
mov
movs
mov
adc
stc
dec
lods
dec
out
sbb
fld
sbb
gs
cs
test
retf
add
xchg
sbb
dec
pop
xor
out
mov
test
push
into
in
mov
jg
iret
jno
dec
pop
add
dec
mul
out
fistp
ror
div
mov
icebp
or
bound
stc
xor
mov
fmul
sbb
jns
cmc
fisttp
inc
inc
fnsave
xor
add
sahf
popa
mov
adc
cwde
in
dec
xchg
fadd
cmps
push
jecxz
fs
inc
ss
or
add
daa
ror
pop
ret
or
cmps
jl
add
pop
(bad)
xchg
add
pop
xchg
push
sub
or
mov
mov
cmp
cwde
inc
sar
adc
sar
inc
addr16
add
test
shr
and
rol
jle
nop
mov
adc
inc
add
out
(bad)
sti
inc
(bad)
dec
sub
clc
add
fbld
out
mov
mov
xchg
xchg
sub
xchg
loop
sub
jbe
mov
inc
push
dec
inc
data16
pop
sub
cmc
and
push
enter
ret
in
outs
xchg
outs
push
dec
and
out
and
das
and
js
xchg
es
pushf
xchg
add
push
gs
cld
push
mov
pop
add
nop
mov
call
and
mov
cmps
sbb
arpl
cmp
sbb
jge
das
popa
jecxz
mov
xor
sub
fsubrp
xor
add
pop
icebp
pop
inc
pop
push
rcl
sub
imul
pop
enter
call
das
retf
call
mov
lods
cdq
or
lahf
scas
xchg
mov
enter
mov
adc
mov
imul
arpl
mov
adc
shl
shl
lea
mov
mov
adc
push
into
loopne
cmps
lahf
mov
pop
jmp
dec
cwde
imul
scas
cmp
mov
loop
mov
scas
pushfw
push
out
dec
mov
jnp
jbe
cmps
arpl
sub
sub
and
pop
xchg
adc
nop
arpl
cmp
fwait
push
add
adc
in
cmp
loop
adc
in
(bad)
fsubr
add
jmp
inc
pop
fs
pusha
push
cmp
test
cs
add
cld
fwait
pusha
dec
add
aas
inc
call
jmp
fild
out
(bad)
ja
movs
or
mov
fimul
(bad)
pop
dec
das
adc
inc
and
rcr
pavgw
pop
movs
test
movups
mov
sbb
or
loop
test
out
outs
int
sub
outs
push
loope
adc
fcomp
push
jnp
push
or
dec
popa
pushf
push
das
(bad)
mov
sub
cmps
lock
mov
pusha
rcl
inc
cmp
jae
adc
test
shr
add
mov
ins
and
nop
dec
and
jno
mov
mov
add
mov
lods
push
mov
mov
jg
out
xchg
pop
xor
in
jno
xchg
sub
popa
jo
in
and
movntq
out
cmps
push
icebp
dec
xor
stc
test
or
dec
popa
jae
sahf
(bad)
sahf
adc
ja
pop
xchg
shr
xor
fbld
mov
sbb
icebp
les
in
iret
add
cld
loopne
ret
ficomp
inc
es
pop
scas
test
mov
stc
dec
xchg
push
pop
xor
neg
mov
push
int
jle
movs
test
xchg
add
mov
cs
mov
fld
sub
push
sbb
and
fsub
inc
jmp
or
mov
sub
arpl
add
adc
mov
mov
mov
xor
enter
js
pusha
mov
into
mov
movs
jge
icebp
test
mov
pop
lea
adc
mov
mov
js
mov
jne
popa
adc
ret
stc
mov
fucom
dec
enter
adc
repz
or
sbb
(bad)
retf
lock
in
inc
pusha
adc
cld
fistp
mov
pop
pusha
lahf
or
dec
or
ret
dec
sahf
fdivr
mov
mov
out
daa
push
mov
(bad)
cwde
inc
pop
fistp
out
(bad)
loopne
icebp
and
cwde
jno
adc
cs
pop
inc
add
fimul
vandnps
and
mov
pop
pop
ja
jg
pop
sbb
jge
push
sbb
inc
dec
jne
mov
sbb
xor
sbb
stos
imul
stos
imul
ds
fwait
sar
inc
(bad)
fwait
into
jle
scas
into
adc
lahf
ror
sbb
je
enter
loopne
out
cmps
ret
out
and
enter
add
sahf
and
pop
push
and
pushw
data16
mov
push
scas
jle
jle
sbb
dec
shl
outs
nop
aam
push
inc
sahf
cmp
mov
pop
mov
rcr
add
rcr
push
ins
mov
jge
ret
push
or
popa
sar
and
push
sahf
out
mov
push
dec
jl
push
inc
jp
sub
and
pusha
into
in
addr16
out
xor
lds
mov
fcomi
adc
repnz
arpl
jo
mov
std
jl
jns
psraw
aaa
push
loop
repnz
stc
sub
int
movs
or
add
pop
push
push
jmp
jb
js
adc
xor
retf
pushf
pop
scas
cmp
ret
pop
adc
cmp
mov
ror
mov
out
scas
fst
mov
pop
mov
jmp
test
sbb
ret
ja
mov
pushf
xchg
push
aas
into
jmp
inc
cmc
pop
inc
inc
retf
into
popa
rol
mov
lahf
inc
adc
les
push
arpl
clc
dec
das
(bad)
xor
nop
shr
xchg
daa
adc
ret
and
sub
ds
xchg
mov
pusha
shl
sub
stos
dec
push
dec
mov
or
mov
and
es
daa
in
adc
js
pop
push
mov
(bad)
mov
xchg
mov
dec
and
cmp
shl
add
sbb
push
rcl
mov
and
fistp
out
ret
cmp
outs
push
sbb
jg
sub
loopne
lea
outs
jmp
je
jnp
aad
xor
test
dec
xor
call
(bad)
mov
mov
ds
adc
jmp
ret
out
cwde
ret
repnz
and
addr16
push
push
not
sub
jo
cmp
and
inc
mov
and
fsub
js
jle
ret
jl
stos
dec
mov
lock
int
fmul
sar
les
lds
or
adc
vandps
loopne
icebp
stc
jmp
test
fistp
mov
mov
(bad)
jecxz
fucomip
mov
fisttp
mov
fld
inc
mov
adc
pop
test
jle
rcr
mov
ds
in
mov
fs
xchg
arpl
outs
fistp
lock
xchg
and
dec
aaa
out
xor
call
xlat
jle
mov
inc
ins
(bad)
pop
pop
scas
mov
mov
loopne
jmp
imul
jmp
mov
jp
in
add
mov
mov
std
mov
xchg
mov
loopne
add
movs
cwde
xchg
jecxz
scas
mov
retf
mov
sbb
cmps
xchg
ror
ins
dec
jp
sub
ja
vunpckhpd
cmp
or
stos
xchg
add
mov
js
mov
ja
and
mov
inc
dec
jmp
dec
sar
add
dec
jp
add
icebp
into
ss
gs
sar
adc
xor
pop
nop
fld
or
into
ja
cmp
iret
inc
push
push
(bad)
jmp
xchg
pop
popa
int3
js
mov
cs
popa
dec
mov
mov
mov
int
jecxz
retf
jne
pop
mov
add
rcl
push
push
mov
mov
cmp
pop
sbb
ins
or
jmp
inc
in
xor
in
jmp
or
(bad)
adc
fiadd
sbb
add
not
add
movs
fild
dec
inc
fwait
out
shr
mov
push
ficomp
or
out
jmp
shr
iret
les
mov
push
xor
mov
and
pop
jo
fld
sub
push
xor
jnp
nop
push
adc
lock
icebp
cmp
cmp
call
out
fisubr
mov
sub
and
push
mov
dec
push
mov
das
scas
gs
out
fld
shl
push
add
push
addr16
push
mov
into
push
dec
fisubr
iret
cmp
mov
fmul
je
mov
jge
push
pop
jo
push
lods
mov
(bad)
std
jnp
lods
call
pop
jmp
mov
sub
mov
ret
sbb
jbe
or
cmps
jmp
das
xchg
push
mov
rcr
mov
loopne
pusha
and
pop
pop
jmp
in
loop
jle
out
sar
mov
mov
nop
jge
and
sbb
mov
push
lock
mov
or
dec
inc
iret
dec
fs
sti
ss
jle
ret
test
gs
pop
xchg
sub
into
lds
ins
jmp
cmps
xor
pop
neg
fcom
mov
adc
or
xor
dec
mov
xor
test
and
push
mov
in
or
test
stc
aaa
pop
jg
sub
pushfw
mov
fs
pop
xchg
push
pop
ins
jecxz
fidiv
pop
inc
cwde
push
gs
outs
in
pushf
scas
fcom
mov
in
fwait
pop
jo
pop
loopne
push
jle
or
test
fcom
mov
mov
xor
jg
pop
ret
lock
adc
xor
mov
popf
in
mov
sub
or
cdq
fidivr
sub
(bad)
cli
and
push
imul
xor
test
and
bound
jb
adc
sbb
call
add
ficom
test
lds
dec
mov
fs
inc
outs
mov
add
mov
mov
sub
int
cwde
xchg
jb
add
dec
or
scas
loopne
mov
mov
in
shl
loopne
jmp
das
nop
xchg
xor
and
sub
cmp
mov
out
fsub
jecxz
cli
shl
push
jo
sti
mov
inc
inc
ins
push
imul
xor
jo
dec
mov
sbb
movs
pop
cmps
add
push
push
dec
sub
sub
sub
dec
push
add
rcl
or
dec
mov
int
aas
pop
add
or
inc
and
les
retf
or
or
xor
movs
imul
mov
pushf
cmp
fsub
push
cs
or
bound
jmp
mov
mov
clc
retf
les
cmp
aas
ror
stc
mov
(bad)
jmp
(bad)
lea
xchg
mov
repz
cmps
adc
(bad)
and
push
sub
dec
add
test
cmp
nop
and
lods
test
inc
cmp
ret
add
aas
lods
cmp
xlat
xchg
add
pop
rol
mov
ret
popa
jbe
xor
jne
mov
iret
mov
lock
test
call
inc
and
fstp
dec
sti
and
adc
out
pop
lods
shr
je
xlat
int3
inc
add
(bad)
adc
mov
or
inc
mov
fnstcw
rol
lock
mov
pop
dec
in
push
inc
es
rcr
xchg
adc
inc
(bad)
adc
dec
enter
push
arpl
and
out
jp
push
push
fdiv
xchg
jecxz
adc
scas
fisubr
fmul
fbstp
sbb
ffreep
in
fdecstp
lock
push
in
adc
push
fsubr
mov
fmul
jecxz
test
jmp
cdq
push
mov
pop
cmp
jo
dec
imul
cs
(bad)
sbb
ja
jg
add
pop
shr
sub
xor
rcl
test
push
inc
xchg
int
jo
inc
call
pop
fs
dec
xchg
outs
fwait
xor
sbb
daa
xor
or
loopne
icebp
mov
lock
fnstenv
and
movs
pop
fucomip
call
lods
js
adc
test
mov
enter
aam
(bad)
ds
adc
jne
(bad)
aad
fist
ror
mov
cs
scas
mov
out
call
dec
sub
dec
dec
scas
xchg
fdiv
xor
jmp
sub
sar
dec
fld
mov
jg
jle
sub
je
lahf
into
sar
lea
cmc
xchg
cmc
lock
ins
push
add
adc
mov
or
(bad)
imul
mov
out
sbb
out
mov
lods
pop
xchg
jmp
adc
jg
inc
adc
popa
mov
push
xlat
or
pop
pop
daa
cmp
mov
pop
jmp
popa
pop
and
mov
out
pop
popa
test
leave
pop
sub
cmps
mov
into
ror
fnsave
cmp
dec
add
push
fld
nop
or
out
leave
repz
and
add
adc
sbb
jp
pusha
xchg
icebp
sbb
out
fist
lahf
jecxz
int3
repnz
lock
hlt
ret
cmp
outs
jp
push
sbb
dec
dec
into
jmp
lahf
aam
cmc
push
pop
push
pusha
outs
int
add
cmps
ins
adc
jns
repnz
lock
push
fbstp
dec
sub
popf
mov
ds
xchg
rcr
pushf
jae
pusha
fild
mov
loope
pop
jae
push
movs
test
add
sbb
cmp
stc
mov
call
push
retf
loop
sbb
inc
loopne
pop
xchg
jge
sysenter
into
sub
scas
js
mov
push
add
aam
loopne
hlt
dec
mov
and
sbb
test
dec
aas
scas
and
push
les
lock
outs
test
inc
adc
push
(bad)
xor
xor
cmp
daa
ret
xor
adc
xor
movs
mov
loopne
pop
scas
stos
mov
adc
jp
push
jge
lds
pop
mov
mov
sti
push
and
fs
xor
cli
xchg
fsub
mov
sbb
adc
loope
or
outs
test
nop
or
icebp
mov
lock
push
and
in
scas
test
or
xchg
lds
fwait
test
push
ins
iret
sbb
xchg
in
mov
fld
pop
stos
inc
stos
jge
aas
adc
scas
out
sahf
pop
pusha
mov
add
cmps
outs
leave
jbe
and
and
out
sub
lea
jno
adc
sar
cli
clc
xor
sar
and
xchg
jnp
movs
or
sbb
(bad)
shl
jecxz
imul
out
mov
jl
ins
int3
into
fidivr
enter
xchg
pop
test
jo
xchg
in
xchg
imul
into
dec
push
cmp
jae
push
push
push
mov
out
push
mov
pop
pop
popf
pop
dec
mov
cmp
test
and
scas
clc
mov
mov
or
mov
repnz
cmps
fsub
sbb
xchg
pusha
(bad)
mov
out
fsub
je
mov
out
mov
jnp
mov
cdq
outs
in
add
mov
addr16
sub
dec
(bad)
in
cmp
jle
pop
lods
xor
stos
or
loopne
add
les
(bad)
int
outs
mov
ins
sbb
(bad)
imul
cli
das
cmps
icebp
or
cwde
sbb
ret
sar
rcr
(bad)
ins
pop
call
cmc
fistp
adc
cmps
ja
mov
jmp
cmps
mov
cmp
mov
(bad)
and
es
in
pop
push
or
int
outs
les
repz
add
loopne
ror
fiadd
aam
or
mov
inc
les
add
pop
mov
pop
scas
nop
inc
ret
shl
or
js
sar
lahf
ret
xor
xchg
jmp
jae
mov
mov
sahf
cld
inc
out
iret
cmps
jmp
cwde
dec
xor
movs
mov
adc
jo
ds
xchg
cmps
dec
stos
and
test
add
add
and
es
hlt
and
jnp
mov
movs
pop
in
lock
aam
add
in
dec
adc
enter
shr
mov
shl
enter
hlt
jmp
jnp
mov
idiv
cmp
ss
xchg
and
sbb
mov
xor
sub
adc
cld
inc
mov
icebp
and
sub
les
jecxz
int
xchg
pop
mov
dec
jge
(bad)
sub
pop
aad
push
sahf
mov
jno
cmps
stos
xor
int
pop
ins
mov
mov
xor
xor
fmul
repnz
pop
pop
imul
xchg
pusha
idiv
mov
and
inc
out
push
or
jo
dec
cmp
test
pop
jmp
or
lock
cld
in
mov
push
or
nop
mov
or
sbb
mov
dec
xchg
push
inc
test
jmp
add
inc
sbb
push
pop
rcr
ret
mov
int3
fnstsw
mov
pusha
add
push
and
mov
js
stc
jb
dec
cmp
scas
jg
call
pusha
pop
pop
jb
in
popa
dec
xor
mov
int
nop
test
and
in
push
retf
test
mov
js
or
hlt
data16
cmp
inc
mov
dec
xchg
es
bound
repnz
mov
outs
mov
test
cmp
das
imul
pushf
repz
jle
xor
add
or
stc
into
es
sbb
test
retf
fdivp
mov
push
xor
test
dec
and
stc
aaa
push
rol
inc
leave
xor
pusha
push
in
inc
ins
sub
add
call
xor
xor
aaa
sub
push
in
ror
stos
loope
jns
iret
xor
sbb
pusha
cmp
add
push
fsubr
bound
in
loop
xchg
ret
cmp
cmps
dec
les
loope
xor
pop
vmread
xor
test
sub
dec
mov
inc
test
and
sub
mov
inc
jno
cmp
fsubp
outs
dec
or
cwde
icebp
jle
ins
js
jnp
adc
aam
xchg
cwde
adc
rcl
adc
(bad)
mov
mov
mov
add
push
jne
sbb
mov
addr16
call
scas
dec
repnz
inc
mov
jl
retf
inc
mov
shl
or
mov
add
dec
jbe
inc
fidiv
jnp
sbb
jge
add
enter
add
push
leave
popa
and
pop
inc
jmp
outs
and
and
xchg
dec
jae
jl
mov
jns
cmp
lock
pop
mov
into
sub
arpl
sub
sbb
adc
bound
dec
icebp
dec
pop
maxps
fucomp
cmp
push
pushf
out
lods
ds
xchg
iret
push
ins
int
add
popa
aas
pusha
push
inc
pusha
and
or
push
dec
jmp
sar
stos
not
xor
into
push
pop
ret
jns
lock
lods
adc
xor
in
rcr
scas
ja
sub
mov
(bad)
mov
add
fst
das
scas
cmp
pop
pop
stos
xchg
call
cmps
adc
mov
outs
loop
stos
fwait
jmp
or
ins
scas
loope
loop
cdq
mov
std
pop
sub
repz
pop
pop
js
cmp
or
add
jle
rcr
scas
cmp
sar
push
icebp
mov
loop
shl
rcr
das
pop
jno
inc
dec
dec
inc
mov
or
sbb
(bad)
cmp
call
pop
leave
jbe
inc
inc
scas
mov
mov
out
push
cmp
xor
push
inc
sar
jbe
xchg
stos
mov
shl
inc
outs
cmp
imul
ret
int
xchg
cs
icebp
mov
out
lods
adc
mov
xlat
iret
jmp
inc
in
jp
loope
test
pop
push
mov
xchg
dec
iret
pop
into
out
pop
add
xchg
shl
jmp
mov
and
and
jae
inc
mov
adc
ret
imul
lea
rcr
sbb
mov
dec
stc
push
mov
ins
sbb
adc
fwait
xchg
xor
mov
sar
jl
jnp
nop
addr16
pop
sahf
cwde
in
pop
test
push
mov
or
sbb
fiadd
pop
cwde
stos
add
into
cmp
and
add
pop
icebp
mov
sbb
sbb
ins
or
xlat
into
sub
adc
ss
fdivrp
push
icebp
jg
add
hlt
jae
test
in
sub
stos
pop
push
ss
add
lods
int
cs
cmp
sbb
push
lahf
mov
lahf
in
test
mov
push
call
xchg
dec
movs
dec
pop
ror
rol
pusha
mov
push
xor
lods
jbe
jb
dec
retf
inc
mov
sbb
sub
inc
xor
(bad)
js
mov
sbb
pop
mov
jns
(bad)
loope
cmps
rcr
mov
jle
js
stos
mov
fsubr
pop
call
lock
out
lahf
cs
and
nop
ds
dec
and
not
mov
test
(bad)
bound
inc
movs
je
ins
mov
out
scas
pop
jmp
mov
ror
cmp
int
xor
movs
or
xor
push
sbb
dec
adc
aas
pop
movs
popa
out
push
jle
mov
mov
xor
in
cmp
out
mov
cmps
inc
dec
outs
jp
fs
fstp
sbb
(bad)
pop
adc
mov
pop
fld
les
leave
push
hlt
cld
dec
push
xor
lock
jg
adc
push
dec
int
retf
test
jmp
inc
xor
xor
and
adc
cdq
out
iret
mov
adc
push
cs
loopne
cmc
inc
fist
xchg
pop
xchg
in
ins
mov
jo
cmp
iret
xlat
scas
mov
wrmsr
sbb
lock
lea
dec
pop
jnp
and
lods
push
dec
inc
add
or
dec
lea
mov
inc
shl
ja
mov
repnz
outs
test
test
sub
icebp
xchg
scas
ror
ds
inc
jmp
cmp
inc
xor
pop
xchg
inc
ret
call
adc
nop
pop
test
add
in
(bad)
into
cmp
fmulp
pop
jmp
xchg
out
dec
jbe
sub
push
in
je
jge
mov
call
cmp
cmc
sub
dec
push
ins
and
inc
imul
dec
pop
mov
mov
rcl
sub
(bad)
das
sub
push
push
mov
push
or
lea
inc
ficom
xchg
out
mov
dec
loop
punpckhdq
test
adc
dec
hlt
nop
retf
les
push
inc
test
mov
cmp
loop
out
mov
les
sub
mov
mov
pusha
ins
sbb
ins
add
push
pop
push
stos
in
pop
mov
scas
(bad)
sub
mov
mov
xchg
mov
pusha
(bad)
mov
sbb
gs
xchg
adc
adc
sbb
mov
and
inc
cmc
xor
or
pop
pop
adc
repz
push
scas
lock
dec
out
inc
push
push
mov
push
stc
sbb
fidivr
shl
outs
and
pop
and
lds
xor
in
and
add
pushf
outs
adc
outs
mov
hlt
sub
sbb
mov
ss
adc
mov
cld
retf
call
pop
adc
push
cmp
pop
mov
mov
xchg
(bad)
loope
pop
rcr
shr
aad
and
ins
mov
pushf
clc
repz
mov
or
test
inc
cmp
jo
ret
nop
mov
mov
xchg
iret
aas
dec
xchg
dec
mov
ins
push
scas
mov
adc
pop
or
adc
fwait
add
push
jp
add
ror
cmp
sar
lock
and
jecxz
mov
inc
imul
gs
out
fdivr
sahf
mov
cli
jp
fbstp
push
mov
pop
neg
mov
dec
lahf
out
pop
cli
pop
icebp
mov
adc
iret
add
sub
inc
lock
add
add
cs
cmp
push
sub
or
ret
push
push
xchg
ror
inc
jecxz
cmc
mov
jmp
cli
cdq
js
(bad)
popa
xchg
sahf
inc
mov
sub
jb
rcl
test
ja
cwde
push
not
mov
aam
adc
jge
out
fwait
adc
pop
mov
add
out
pop
data16
jnp
and
xchg
xor
repz
iret
xchg
ss
arpl
xor
(bad)
mov
lock
dec
sbb
pop
xor
arpl
jno
and
nop
stc
neg
fadd
scas
sbb
and
and
test
ror
in
mov
jmp
pop
loope
push
loopne
jle
lods
xor
dec
push
inc
cs
mov
add
(bad)
jbe
jne
sti
sub
push
arpl
jbe
and
xchg
xor
mov
xchg
or
mov
scas
out
hlt
retf
sub
outs
adc
dec
dec
cs
push
sbb
loopne
fwait
stos
pop
dec
repnz
rcl
mov
aaa
movsx
inc
pop
int3
xchg
pop
dec
push
in
mov
push
iret
repz
mov
sbb
xor
daa
pop
cmp
mov
ds
cmp
out
daa
add
and
mov
add
inc
or
sbb
add
push
mov
jo
fbstp
sub
cmp
add
add
loopne
mov
mov
daa
adc
jmp
push
inc
aas
xchg
cld
lock
nop
into
ficomp
xchg
dec
push
enter
jmp
xchg
fs
arpl
(bad)
push
xor
cmps
mov
call
cmp
hlt
enter
ins
mov
imul
sbb
xchg
push
scas
sahf
mov
into
pushf
jle
xchg
inc
or
or
cmp
nop
jmp
fdivr
cmp
js
xchg
inc
cs
jmp
add
dec
jb
jg
xchg
nop
test
adc
mov
jle
or
jle
cs
cwde
(bad)
mov
jle
nop
aas
loop
shr
mov
jp
scas
les
jnp
scas
ret
jmp
push
popf
push
loop
jnp
xchg
stos
xor
test
or
push
ja
add
leave
xor
test
inc
mov
lods
mov
test
cmps
xchg
test
jmp
push
test
or
jnp
aam
test
mov
or
outs
bound
dec
scas
scas
mov
shl
mov
lahf
loop
pop
scas
jo
rcr
xor
and
shl
inc
mov
pop
mov
sub
mov
jnp
jle
ins
mov
(bad)
and
scas
xchg
cmp
xchg
xlat
xchg
add
pop
adc
mov
and
pop
je
adc
popa
mov
ja
loop
inc
xor
mov
mov
lock
xor
ficomp
das
sbb
mov
or
jb
or
inc
sub
push
jge
cmp
js
adc
dec
fadd
xchg
aam
dec
and
in
test
xchg
and
call
mov
movs
out
bound
lods
xchg
mov
pop
lock
push
js
pop
aaa
jl
stos
rcl
mov
imul
in
lods
(bad)
mov
pop
mov
retf
sahf
jo
adc
jge
adc
(bad)
into
xchg
test
and
adc
mov
imul
scas
adc
sub
jae
inc
push
add
jle
lods
xchg
push
into
add
pop
add
pop
test
jle
push
mov
inc
out
stc
inc
int
test
icebp
pop
sub
cs
sbb
clc
sub
add
add
retf
dec
aad
hlt
inc
mov
idiv
mov
das
(bad)
lods
gs
jnp
add
imul
jl
ds
xchg
inc
and
mov
imul
xchg
push
loope
add
inc
mov
lock
dec
loope
iret
add
rcl
iret
push
mov
mov
or
push
add
loopne
out
ss
ret
shl
scas
shl
pop
jo
pop
test
loopne
dec
xor
sub
jns
in
lock
ror
int
fiadd
mov
pushf
iret
xchg
lea
ins
cld
add
sbb
ret
sub
inc
sbb
mov
sbb
lods
idiv
int3
fcom
pop
stos
push
dec
jl
jmp
dec
mov
repnz
rcr
call
(bad)
sahf
jb
mov
addr16
dec
loopne
repz
adc
pushf
and
pushf
add
mov
rcl
clc
add
xor
dec
mul
out
shr
dec
scas
mov
outs
cmps
xlat
dec
push
or
inc
ins
test
test
inc
les
adc
xlat
sub
ror
jb
sbb
pop
mov
lock
xchg
int3
xchg
dec
scas
scas
int
popa
rcr
dec
outs
(bad)
sbb
outs
jle
push
sub
mov
add
ds
fild
jle
mul
push
add
pusha
pusha
leave
es
or
mov
push
pop
ds
jg
push
out
jo
rcr
dec
(bad)
mov
mov
sbb
adc
retf
sub
xchg
push
xor
sbb
lods
jno
mov
adc
dec
adc
mov
mov
push
shr
xchg
sbb
retf
mov
clc
push
or
push
push
imul
cdq
inc
add
ret
push
jmp
aaa
pop
and
inc
out
xor
shl
mov
retf
leave
shl
sbb
into
scas
mov
or
stos
nop
jo
jo
lods
cmps
into
pop
enter
bound
add
(bad)
jp
icebp
xor
cwde
fldcw
sahf
test
hlt
aas
fmul
stc
fistp
jo
movs
pop
push
push
or
dec
mov
cmp
movs
mov
int
dec
test
test
and
in
das
iret
and
cmp
stos
call
pop
iret
call
or
add
scas
in
dec
aas
jge
aad
jge
mov
movs
mov
(bad)
jp
sbb
fstsw
xor
push
jge
mov
mov
xor
bswap
dec
mov
rol
fisttp
sbb
fisubr
fldenv
xor
stos
in
loope
test
mov
leave
jl
inc
push
mov
aad
xchg
mov
push
int3
inc
jno
clc
mov
mov
jb
dec
pop
mov
test
call
cmp
jg
inc
xor
xor
bound
dec
stc
scas
push
clc
mov
(bad)
cmp
shl
jg
dec
sub
cmc
inc
cmp
sar
int
in
rcr
adc
aad
and
scas
stos
outs
popf
pop
jo
and
outs
pop
sbb
mov
in
cmp
pop
adc
cwde
xor
cmp
lahf
test
jbe
daa
sets
or
scas
movs
or
sub
arpl
xor
add
or
add
xchg
xor
cli
sub
mov
call
and
stos
mov
mov
call
cmp
cli
jle
lock
nop
jmp
aas
scas
jns
inc
sar
stos
mov
out
ins
les
sahf
(bad)
repnz
xchg
fwait
out
add
sar
inc
adc
sub
ficom
sbb
mov
in
push
dec
(bad)
stos
bound
pop
cmp
xchg
sbb
in
mov
inc
loope
jns
out
mov
fild
sbb
loop
std
pop
bound
cmps
pop
add
jp
dec
cld
mov
(bad)
pop
loope
loopne
(bad)
push
and
jo
ds
jne
jae
inc
mov
mov
push
loop
icebp
test
push
push
sub
pop
cwde
je
movs
mov
out
rcl
inc
sub
dec
aam
outs
mov
retf
dec
mov
ficomp
cmc
pop
ds
stos
adc
das
nop
mov
sbb
lock
or
js
mov
jo
add
mov
push
inc
dec
adc
loop
aam
dec
pop
or
sbb
daa
jle
loope
dec
mov
mov
lods
mov
and
ficomp
add
jmp
es
lods
dec
in
sti
jecxz
inc
push
dec
imul
call
dec
and
cdq
je
jle
inc
mov
pop
pop
xor
add
xchg
inc
les
movs
cli
fcomp
or
add
int3
lds
mov
jb
out
push
sbb
(bad)
xchg
pop
sub
idiv
jle
mov
adc
ss
js
xchg
mov
stos
lock
rol
in
add
inc
fild
adc
arpl
push
jno
inc
push
gs
mov
mov
jo
sbb
mov
and
mov
lahf
sub
or
push
jne
mov
cmps
mov
hlt
test
sbb
jno
(bad)
jg
es
cld
sub
adc
(bad)
outs
ret
or
stc
shr
mov
jb
adc
cmp
jg
stos
bound
jecxz
mov
inc
ret
mov
sub
aas
aaa
push
or
push
xchg
test
rol
mov
inc
jle
push
pop
into
jmp
add
mov
add
add
add
pusha
(bad)
rcl
and
push
call
ret
popf
adc
cli
push
(bad)
adc
cmp
xchg
stos
(bad)
clc
test
stos
out
retf
mov
sub
call
ins
out
fnsave
cmp
call
popa
shl
and
ds
xchg
popa
push
out
push
xchg
lock
cmp
nop
mov
jmp
xchg
mov
jae
or
jae
or
rol
dec
nop
dec
xor
cmp
xchg
hlt
add
cmp
lods
jo
std
mov
or
pop
and
sbb
lods
jmp
aad
ins
and
fild
(bad)
(bad)
fdiv
adc
mov
stos
enter
add
mov
mov
inc
jo
iret
into
mov
mov
pop
cmps
pop
gs
(bad)
mov
lock
mov
rcl
adc
setno
fmul
sbb
adc
shl
jae
sub
scas
jo
dec
out
out
repnz
(bad)
out
mov
retf
scas
dec
vmovd
cdq
push
push
sub
and
adc
sbb
scas
lods
push
in
shr
into
test
cmp
sub
ds
sar
push
inc
into
xchg
retf
ret
sub
data16
mov
mov
(bad)
ret
sbb
aad
mov
cld
mov
xchg
jae
push
fidiv
pop
dec
push
or
outs
push
stos
xor
sub
in
lea
fs
inc
pop
pop
dec
mov
dec
sub
(bad)
jo
xor
aad
mov
retf
test
pop
icebp
jmp
in
jnp
adc
pop
adc
into
xchg
pop
fucomp
dec
(bad)
or
or
mov
push
test
inc
fcomp
stos
cmp
jg
jo
rcl
fucomp
idiv
popa
inc
mov
fwait
stc
mov
dec
xor
bound
mov
jmp
pop
inc
aas
mul
and
fld
adc
jno
fsubp
adc
push
int
lock
cli
cmc
inc
and
movs
bound
xor
or
daa
(bad)
sub
sahf
sbb
icebp
sub
(bad)
xchg
mov
test
test
jp
push
inc
cs
jo
cmp
mov
lods
js
cmp
fist
jne
xchg
das
pop
or
js
push
jl
xor
jns
pop
mov
dec
mov
pop
test
add
pop
cs
lods
fidiv
add
nop
fisub
jmp
mov
jp
lods
in
jp
jle
popa
div
test
bound
push
nop
in
inc
sbb
xchg
cld
sbb
fisubr
jecxz
cs
jge
repnz
cmp
cmps
in
dec
into
xchg
cdq
push
or
rcl
fcmovne
mov
or
not
aas
inc
push
inc
push
rcr
jl
fisubr
loopne
(bad)
hlt
inc
shl
out
mov
nop
or
popf
push
call
mov
pop
sbb
jecxz
das
cwde
rcl
das
test
xchg
inc
adc
ja
xor
push
in
cmp
ds
fwait
movs
mov
retf
jmp
(bad)
imul
push
(bad)
push
jg
movs
inc
cmp
pop
pushf
(bad)
xchg
out
xchg
pop
add
xor
pop
push
and
stos
into
cmc
xor
pop
add
or
adc
sbb
fs
sub
xor
icebp
jle
ins
(bad)
mov
push
fdivp
loope
cmp
out
aaa
push
add
cmp
dec
in
js
shl
(bad)
loopne
shr
xchg
sbb
ja
lods
mov
mov
mov
fisub
mov
sbb
mov
push
jmp
pop
cdq
and
stc
out
mov
mov
cmp
mov
inc
in
pop
push
cli
dec
adc
inc
add
sub
mov
dec
outs
lahf
fldenv
mov
lahf
aam
pop
push
jo
sub
das
or
aam
scas
cmp
fs
mov
in
xchg
pop
xor
jo
sbb
lods
into
mov
xchg
mov
push
mov
push
cld
cdq
jp
ss
and
adc
inc
and
shr
mov
aad
mov
adc
push
xor
retfw
mov
inc
cmp
and
push
scas
pop
mov
mov
imul
rcr
iret
mov
mov
jns
inc
push
or
aam
jecxz
adc
cmp
push
pop
scas
or
push
loope
mov
out
lods
int
call
mov
push
jmp
jno
movs
pop
push
fnsave
push
mov
mov
push
stos
loopne
cmp
sub
addr16
adc
icebp
retf
jmp
ins
adc
(bad)
bound
jno
adc
test
pop
test
(bad)
pop
aaa
call
sub
jo
xlat
(bad)
xchg
add
push
mov
mov
xchg
adc
lahf
cmc
leave
xchg
adc
in
shr
ficom
jo
add
(bad)
adc
pop
mov
(bad)
cmp
inc
dec
(bad)
add
jo
lods
mov
mov
push
scas
add
and
sub
scas
jle
mov
mov
out
movs
ret
icebp
shr
pusha
push
jle
push
aam
rcr
cwde
imul
inc
into
dec
retf
and
mov
mov
xor
push
xchg
or
cmc
das
jmp
loope
dec
adc
in
mov
pop
aad
fcomp
jns
push
inc
push
mov
loope
dec
fnstsw
mov
dec
pop
jecxz
call
fmul
enter
push
jnp
add
inc
jmp
push
mov
and
js
adc
pop
rcl
mov
mov
jne
mov
call
jle
cli
inc
dec
and
and
inc
add
push
adc
stc
inc
nop
adc
lods
cmps
inc
das
dec
add
dec
rol
cmc
add
into
into
mov
(bad)
sbb
(bad)
push
packssdw
loop
fidivr
outs
xchg
fiadd
(bad)
add
shl
sahf
sub
sahf
and
mov
test
add
jmp
(bad)
jl
sbb
out
leave
adc
bound
retf
(bad)
clc
inc
orps
xor
jb
jnp
mov
iret
dec
pusha
and
mov
pop
ins
call
fimul
pop
cli
retf
imul
mov
(bad)
xor
jecxz
push
inc
dec
jg
test
and
inc
push
pop
loope
mov
mov
scas
push
xchg
call
push
lods
loop
jo
mov
and
ins
mov
or
sub
push
dec
xchg
push
push
dec
fisub
repnz
mov
call
inc
inc
xor
(bad)
pop
sar
fsubr
mov
adc
bound
xchg
mov
movs
xor
loop
or
mov
imul
xchg
sub
adc
pusha
and
(bad)
push
mov
xchg
sbb
int
sahf
mov
outs
pop
dec
fs
rcl
(bad)
pop
out
aad
std
ins
fst
les
fucomi
mov
mov
cmp
xor
push
push
adc
lahf
lods
cdq
mov
push
iret
es
iret
ins
leave
retf
clc
pop
inc
xchg
cmp
repnz
ins
cmps
ret
add
mov
add
sar
and
add
and
addr16
sbb
popa
aad
pusha
dec
jle
mov
and
in
push
cmp
stos
push
adc
cs
mov
push
mov
cmp
and
sbb
jbe
mov
aad
aam
lock
push
sub
shr
test
es
jbe
mov
jbe
dec
in
imul
pop
and
lods
ja
cld
call
inc
add
sub
mov
pop
out
pop
mov
mov
das
and
add
cdq
add
out
fwait
or
add
or
xchg
imul
ja
ins
jae
lock
fs
mov
mov
scas
push
sbb
inc
sar
mov
add
shl
and
xor
add
(bad)
ins
loop
inc
les
sub
lods
out
cmp
cmps
cmps
aas
ror
push
add
iret
outs
aas
or
and
pop
rcr
jae
int3
aad
in
repnz
mov
xor
push
mov
mov
jmp
pop
fs
push
xor
stos
fs
or
jle
addr16
mov
jmp
mov
jl
dec
cmps
add
sbb
push
nop
or
cmp
dec
adc
mov
das
shr
rcl
adc
mov
dec
iret
adc
and
pop
retf
xor
clc
mov
xor
sub
mov
daa
push
mov
fidivr
and
sub
int
inc
hlt
dec
push
mov
push
les
pusha
jnp
sub
(bad)
mov
imul
callw
into
scas
stos
je
(bad)
out
and
iret
jne
mov
or
out
(bad)
inc
xchg
(bad)
mov
ins
cmc
out
lds
add
sahf
ds
pusha
sbb
cmp
ror
scas
cmp
mov
mov
xchg
(bad)
mov
je
lahf
inc
pop
sub
or
pusha
mov
fs
mov
icebp
popf
in
jecxz
pop
icebp
call
call
ds
sub
push
dec
ficomp
mov
sub
out
cmc
retf
sahf
mov
mov
ss
mov
mov
xor
xchg
lods
jns
ror
shr
xor
inc
(bad)
lock
sbb
mov
into
rol
into
xchg
xor
xchg
push
sub
or
adc
cli
push
in
jg
in
ror
pop
icebp
lds
loope
dec
mov
or
mov
mov
imul
ret
call
push
mov
sub
add
mov
fisubr
mov
das
ds
mov
fild
adc
stc
lods
push
popf
sbb
call
outs
out
pop
adc
jne
(bad)
fsub
push
xor
ret
pusha
out
fdivr
xor
stos
call
gs
cld
(bad)
dec
pop
push
mov
dec
mov
ds
or
inc
rcl
dec
mov
nop
mov
cdq
xor
out
rcl
outs
imul
cmp
dec
adc
data16
push
imul
mov
hlt
and
jo
or
imul
int3
test
xor
mov
adc
add
outs
idiv
push
outs
push
retf
add
sbb
mov
cmp
not
cmp
jmp
ret
add
cmp
icebp
jecxz
mov
cwde
stos
inc
bound
sar
jo
inc
pop
fs
xchg
pop
fst
jmp
jge
call
mov
clc
dec
clc
(bad)
mov
iret
and
cmp
es
sbb
adc
mov
shl
jnp
adc
dec
sub
pmaxub
push
fwait
xor
fcomi
push
fucom
xor
push
mov
test
mov
sub
test
push
div
mov
xchg
cs
fwait
es
icebp
fsubr
sbb
pop
ds
xor
jg
sbb
imul
cli
ds
xchg
adc
mov
xchg
or
add
or
fidivr
dec
cmps
sbb
sub
push
jns
cs
mov
lock
aam
test
jb
call
cmc
stos
jae
out
adc
adc
jne
and
dec
dec
outs
xchg
aad
jecxz
sub
cmc
mov
xor
dec
push
inc
or
cwde
in
pop
popa
xor
push
rcr
(bad)
shl
lahf
rcr
popa
push
mov
push
push
fsubp
fcmovb
dec
cmp
mov
icebp
cmc
xchg
dec
lahf
cdq
and
fdiv
shl
stos
enter
sbb
cmps
pop
and
dec
dec
sbb
mov
mov
test
or
sub
aad
push
mov
mov
retf
mov
outs
push
jbe
dec
jns
mov
aas
mov
sbb
or
pop
out
adc
ror
dec
imul
jo
adc
inc
icebp
xor
popf
into
vandnps
addr16
mov
jg
call
dec
dec
push
mov
adc
iret
jnp
jo
adc
fwait
repnz
mov
(bad)
sub
jp
fwait
ins
adc
pusha
in
sbb
jge
mov
pop
mov
mov
xchg
pop
add
xor
scas
lea
ret
cmp
nop
stos
mov
(bad)
fild
dec
push
jno
loop
sti
and
and
cli
or
xchg
rol
sub
fcom
shl
add
repnz
dec
sbb
dec
push
nop
xor
enter
sbb
out
mov
sbb
inc
dec
mov
mov
add
dec
retf
jo
or
xchg
mov
add
cld
outs
fsub
mov
mov
add
jnp
outs
cmp
push
ret
pinsrw
xor
push
mov
xchg
add
je
jae
and
sbb
xchg
sbb
and
inc
dec
or
enter
or
inc
pusha
cli
mov
xor
(bad)
cmps
pop
inc
dec
pop
mov
xchg
push
lahf
shr
dec
mov
push
pop
(bad)
pop
jae
int
je
sub
jae
popf
ret
leave
cwde
or
mov
mov
loop
mov
aad
into
xor
fisttp
jge
or
pop
dec
in
xor
(bad)
mov
pushf
jno
scas
fld
out
dec
add
imul
push
outs
repnz
scas
or
mov
add
test
dec
pop
and
inc
outs
mov
(bad)
(bad)
adc
ror
adc
int3
or
int
jae
inc
fadd
aaa
pop
mov
(bad)
ds
jns
sbb
xor
(bad)
xchg
lds
shr
xchg
and
fadd
xchg
out
add
lds
cmp
mov
or
daa
int
jmp
mov
pusha
xor
push
neg
sahf
add
imul
mov
cmps
(bad)
adc
lods
cmp
pop
shr
adc
ffree
sub
cld
scas
or
dec
dec
inc
mov
push
inc
mov
loopne
imul
add
add
add
aad
xchg
icebp
dec
movs
pop
rcr
add
aas
out
adc
xor
jne
pop
mov
fidiv
and
push
cmp
popf
cmp
cld
mov
jg
push
dec
cmp
pusha
(bad)
in
mov
xor
sub
ror
push
xchg
cmp
mov
xor
fistp
mov
popa
dec
mov
(bad)
cmp
dec
call
inc
xor
out
pop
(bad)
popf
xchg
push
mov
cmp
inc
dec
push
dec
mov
and
pop
jo
jae
jle
jns
shl
icebp
adc
jle
icebp
dec
(bad)
and
push
neg
jg
enter
retf
lods
pop
rol
loope
mov
pop
pop
dec
mov
mov
push
sub
sub
aas
repnz
popf
pop
mov
and
popf
lds
mov
sahf
push
jbe
pop
test
sahf
and
mov
imul
(bad)
ins
mov
(bad)
jg
pop
cs
jb
cli
sub
in
shr
pop
inc
std
pusha
sub
push
scas
mov
scas
cdq
imul
push
add
pmulhuw
aad
adc
sbb
bound
xlat
movs
push
imul
test
shl
lods
ret
push
xor
and
mov
push
shl
mov
mov
lods
pop
js
mov
dec
xor
pop
jge
mov
pusha
push
shl
jmp
pop
mov
sbb
mov
ja
pop
loopne
in
cld
or
adc
test
xchg
push
xor
push
ffreep
cmps
mov
pushf
je
jno
mov
pop
inc
cmp
popa
push
and
outs
aas
nop
stos
sbb
mov
dec
mov
mov
cwde
dec
call
pop
sub
nop
dec
jo
adc
fnsave
imul
push
xchg
inc
and
pusha
and
scas
cmp
jbe
push
add
jle
push
xchg
ja
inc
stos
nop
pop
jae
add
xor
or
shl
sub
pusha
cmc
loopne
or
ins
shl
pushf
stos
dec
xor
and
lahf
xor
popa
dec
popa
sub
das
push
int3
jb
add
nop
and
pop
xchg
pusha
cdq
cwde
ins
or
in
addr16
mov
dec
cmc
mov
jg
mov
jo
xchg
rcr
pop
jl
push
fwait
int
hlt
sub
aas
in
pushf
xchg
rcl
jle
mov
xchg
jg
dec
(bad)
shl
adc
sbb
lds
ror
lahf
fmul
test
mov
sbb
ins
push
dec
cwde
jno
cmp
sbb
jno
dec
cdq
add
mov
xchg
and
sar
xchg
pop
retf
sbb
adc
dec
mov
xchg
das
sub
pusha
es
repnz
frndint
mov
scas
cli
mov
test
iret
push
pop
or
sub
push
push
or
std
xor
repz
or
rol
mov
mov
ror
sub
retf
clc
jmp
(bad)
add
ror
adc
and
loope
es
dec
sbb
loopne
and
mov
je
out
sub
jl
outs
ror
mov
jnp
(bad)
aaa
retf
or
mov
aas
test
dec
cmp
push
adc
mov
iret
pop
scas
ret
mov
and
dec
or
lods
in
aad
bound
je
add
cmp
pushf
fst
test
sub
and
adc
stos
cli
arpl
adc
mov
(bad)
into
fdiv
xchg
dec
jge
push
add
movs
stos
adc
cmp
push
popf
(bad)
adc
hlt
scas
mov
(bad)
jle
jae
(bad)
popa
or
(bad)
xchg
test
xchg
(bad)
xchg
inc
mov
inc
out
in
jns
xchg
pop
sbb
pusha
ins
test
scas
jbe
in
movs
push
jecxz
fsub
sub
es
in
fisub
dec
stc
or
bound
dec
mov
into
push
rcl
cs
push
cmps
cli
jge
outs
imul
outs
mov
dec
in
add
aas
jne
xchg
lods
(bad)
mov
mov
shl
inc
rcr
ja
push
add
push
xor
mov
jb
cmps
adc
les
fisubr
and
pop
mov
jne
sahf
in
nop
push
or
lahf
call
dec
dec
ss
shl
inc
arpl
ja
or
jg
les
jne
cmps
hlt
sbb
dec
cmp
mov
jne
ins
or
int
xlat
clc
jae
pop
mov
test
add
add
jne
push
mov
or
pop
inc
stos
out
stc
hlt
xchg
out
loope
call
bound
jl
dec
lods
jbe
sbb
xor
mov
sbb
sbb
aad
jne
mov
lds
jp
div
adc
fsub
and
push
(bad)
daa
jb
ss
adc
outs
xchg
xchg
jle
fsubr
add
mov
stos
mov
xchg
pop
inc
push
sahf
in
(bad)
dec
sub
movs
loop
mov
mov
sub
ins
repnz
fst
push
mov
sbb
icebp
lods
inc
add
adc
ror
stos
lods
xchg
xchg
sub
shr
rcr
push
push
and
shl
mov
cs
adc
aaa
jae
mov
jb
pop
push
mov
(bad)
cmp
cmp
push
aam
mov
(bad)
jl
add
ds
stc
add
push
loop
repnz
sbb
sub
mov
cmp
pop
pop
jbe
dec
pop
cmps
mov
aas
mov
nop
jnp
sbb
push
in
mov
jmp
jnp
out
mov
mov
outs
shl
or
fmul
je
(bad)
imul
jl
imul
leave
sbb
out
add
nop
(bad)
icebp
mov
repz
fistp
xor
sahf
mov
lds
(bad)
push
push
jmp
adc
sub
inc
xchg
pusha
mov
out
push
bound
and
pop
mov
sub
mov
add
mov
mov
ins
fadd
daa
lods
cmp
lock
fst
mov
hlt
and
call
int
iret
sbb
and
inc
mov
inc
rcr
shl
adc
lods
je
sub
ins
sahf
aam
gs
push
inc
das
cdq
or
mov
in
lods
cmps
movs
pop
mov
push
push
jle
ss
jg
in
loopne
cmp
cmp
sar
lods
outs
outs
div
or
and
stc
retf
push
push
test
push
xlat
loope
fcomp
popa
test
repz
cmps
push
(bad)
or
stos
ror
loopne
outs
rcl
ror
mov
xor
(bad)
nop
cmps
xchg
popa
dec
test
push
cs
add
or
push
in
data16
xchg
into
movs
scas
(bad)
(bad)
lock
jp
sti
rcr
ins
push
test
call
ja
in
lds
rol
cmps
dec
test
enter
ins
push
sub
xor
repnz
bnd
pop
jnp
push
xor
dec
and
sahf
icebp
out
movs
and
div
cli
fsubr
aam
xor
add
mov
or
lods
sub
loope
fstp
aas
jle
lahf
shr
jmp
mov
or
or
dec
pop
xor
(bad)
jo
std
movs
and
jmp
sbb
popf
mov
aaa
(bad)
or
lock
fidiv
jno
scas
mov
aaa
adc
and
xchg
inc
add
pop
dec
jg
dec
inc
sub
nop
xor
dec
sub
(bad)
in
div
stc
adc
cmp
retf
(bad)
jb
mov
movs
out
sbb
arpl
or
push
rol
pushf
xchg
add
and
call
inc
fisub
in
clc
inc
pop
push
cwde
inc
fcom
les
test
jecxz
xchg
imul
cdq
ins
lahf
lahf
lock
xchg
pop
xor
stos
test
daa
scas
add
loopne
add
xchg
mov
cmp
arpl
aas
mov
rcr
dec
mov
std
(bad)
(bad)
dec
adc
or
or
jmp
jle
mov
inc
loop
inc
aas
dec
adc
adc
and
lahf
fld
imul
cmc
or
or
fidiv
jne
(bad)
in
jne
jl
(bad)
aad
xchg
mov
xchg
pop
cmp
adc
dec
bound
add
add
outs
cmps
neg
xor
adc
not
lock
shr
inc
and
mov
outs
or
pop
jns
int
inc
loop
sbb
add
in
adc
mov
scas
mov
add
jae
adc
or
mov
test
jnp
push
mov
sub
sbb
je
das
shr
pop
movs
not
lods
mov
cmp
cdq
jmp
or
hlt
cs
push
push
repz
sti
jge
lods
test
and
sbb
cmp
sub
adc
fnstcw
ja
jnp
push
adc
pusha
or
mov
lock
pop
mul
xchg
adc
adc
push
sahf
mov
pmaxsw
jae
sub
jle
ins
in
and
jns
test
dec
push
adc
lock
dec
fld
inc
xchg
dec
and
push
shr
sbb
jg
mov
(bad)
and
outs
and
mov
inc
ficomp
xchg
call
xlat
loopne
xor
ret
cmp
repnz
inc
ds
(bad)
cwde
jmp
shl
xor
test
pop
add
adc
js
leave
dec
xor
and
call
xchg
das
inc
inc
mov
xchg
and
mov
push
inc
pop
stos
aas
cmps
xchg
call
das
in
hlt
mov
cmc
mov
fwait
push
sbb
shl
rol
push
adc
out
sub
fnstcw
pop
scas
sar
mov
dec
arpl
scas
pushf
cwde
cmp
mov
fcmove
adc
std
push
ficom
mov
jmp
retf
mov
pusha
pushf
popf
push
(bad)
call
adc
pop
prefetcht2
xor
adc
dec
in
mov
xchg
into
jmp
xchg
push
mov
ss
ret
hlt
mov
iret
mov
cld
cmp
inc
push
retf
cmp
dec
jg
(bad)
pop
es
pop
pop
ret
not
mov
xchg
imul
out
inc
mov
sub
xlat
fist
inc
mov
test
daa
aam
sti
pop
js
mov
xchg
cwde
pushf
or
mov
xchg
mov
mov
dec
les
xor
retf
cmp
dec
out
retf
inc
movs
cmp
mov
inc
push
mov
ins
nop
mov
xlat
jl
pop
add
and
pusha
out
sbb
jno
loopne
inc
mov
or
lahf
iret
jecxz
shl
pop
inc
in
(bad)
sbb
(bad)
push
cmp
imul
enter
fmul
push
mov
sub
inc
in
mov
in
icebp
pop
gs
xchg
mov
rol
cld
xchg
loope
fs
or
jnp
jl
test
nop
mov
or
push
ins
mov
les
jp
xchg
inc
add
push
addr16
lods
fcom
ss
mov
rcr
adc
add
push
push
(bad)
loope
scas
mov
mov
xor
inc
das
out
cmp
je
icebp
stos
sti
ins
add
outs
pop
mov
cmps
xchg
(bad)
mov
push
or
les
mov
push
ror
xor
jbe
add
jnp
cmc
dec
adc
es
mov
adc
jl
push
call
pop
xchg
inc
lahf
out
imul
pushf
push
ins
push
mov
add
cwde
aad
push
aam
int3
loopne
mov
xchg
or
or
mov
adc
jle
or
sub
pop
or
jno
pusha
push
lock
dec
in
xor
loop
out
arpl
cld
jnp
mov
or
pop
mov
inc
and
lods
push
push
repnz
jp
pusha
mov
cld
(bad)
loopne
cmp
and
jle
jl
and
jo
ror
cld
mov
lea
dec
call
ret
cmp
cmps
into
lock
loopne
mov
int3
outs
adc
js
push
pusha
cs
xchg
add
sub
jle
pop
aad
shr
fs
mov
pusha
outs
jo
mov
imul
movs
outs
mov
repnz
sbb
shr
mov
or
xor
push
pop
push
sub
push
or
mov
fs
loopne
bound
nop
dec
(bad)
or
jle
or
sbb
test
ds
jmp
pop
dec
lock
repz
and
shl
push
rcr
sub
jno
popf
sar
xor
enter
outs
out
add
inc
sbb
shr
jno
mov
rcr
loop
sar
and
xor
test
lods
and
fsubrp
mov
push
sub
mov
out
mov
add
loopne
adc
mov
jle
and
scas
xor
push
pop
lea
rol
leave
shr
dec
test
jle
pop
loop
scas
push
mov
sahf
je
outs
add
in
jns
add
cmp
cmp
pusha
retf
push
pop
jge
inc
push
jo
xor
inc
popa
pop
test
test
in
and
punpcklwd
or
add
and
mov
test
or
and
sub
dec
imul
fmul
xor
dec
into
pop
add
mov
jecxz
sahf
push
sahf
sbb
jns
pop
mov
mov
push
and
and
mov
adc
sahf
jne
xlat
xchg
pop
adc
or
jle
xlat
xchg
mov
pusha
cmp
mov
xchg
adc
ficomp
bound
outs
lock
sub
es
ds
mov
into
xor
out
cld
inc
outs
shr
dec
jecxz
jmp
(bad)
into
into
push
add
loopne
lock
ins
fld
jge
inc
push
lea
sbb
lods
sub
and
jmp
add
jb
add
mov
and
jno
xchg
aas
ja
nop
mov
adc
mov
loopne
xor
in
gs
aas
arpl
int
cs
xchg
mov
mov
push
and
(bad)
dec
enter
outs
(bad)
and
or
jno
iret
pusha
fisubr
jp
adc
sahf
xchg
test
stos
xchg
pop
xor
test
jnp
mov
and
int
fnsave
test
inc
inc
mov
test
mov
ds
dec
or
sub
mov
out
push
adc
call
sub
pop
mov
jbe
inc
imul
pop
call
neg
fisub
rol
scas
vmread
xchg
push
sub
std
push
dec
inc
cmp
loop
mov
or
adc
ds
push
lock
lock
push
sbb
push
dec
ins
pop
adc
movs
call
loop
jge
scas
popf
sbb
mov
div
mov
js
add
cmp
repnz
adc
inc
in
cmp
ss
and
dec
sbb
jbe
mov
adc
xor
cmp
mov
xchg
lock
je
xor
out
adc
in
pop
jl
sbb
test
vmovhps
push
xor
inc
dec
lock
mov
or
cmps
outs
icebp
sub
add
add
jo
and
pop
xor
push
push
pusha
xchg
into
inc
jo
int
add
push
mov
pop
(bad)
ret
mov
fcmovnb
xchg
mov
lods
add
sbb
sbb
in
dec
sub
outs
dec
sbb
push
cld
sbb
jecxz
fmulp
or
bound
mov
int
jle
sbb
inc
xchg
push
mov
add
fwait
sbb
popa
adc
loope
mov
sbb
js
fadd
repz
cmc
push
fdivr
push
cmp
mov
push
mov
stc
add
je
fimul
xor
out
test
in
loopne
ins
mov
and
sbb
jp
sub
(bad)
and
arpl
push
outs
lods
lahf
jne
push
call
loopne
shr
mov
add
pop
outs
outs
into
mov
(bad)
mov
cmps
jg
xchg
fs
mov
xchg
mov
adc
adc
jne
in
mov
dec
dec
iret
sub
dec
shl
add
int3
test
das
push
mov
fiadd
fist
and
aaa
and
nop
sbb
dec
inc
mov
out
jb
bound
and
outs
dec
pop
in
mov
adc
push
mov
mov
mov
out
pop
out
mov
test
shl
or
push
sub
scas
jae
fidivr
fldenv
icebp
mov
lods
jae
fld1
cdq
jge
leave
fist
sbb
jae
scas
jg
aad
sahf
pop
add
mov
jecxz
cmp
int
pop
neg
push
xor
sub
inc
or
vmovdqa
push
mov
jp
(bad)
and
shl
ds
xor
es
daa
dec
inc
and
inc
retf
sahf
cmp
rcl
xchg
xlat
scas
movs
shr
add
xor
sbb
jno
push
lods
into
xchg
fiadd
into
mov
cld
enter
jmp
adc
daa
pop
mov
call
pop
dec
imul
cmps
rcr
pop
pusha
scas
in
sub
out
inc
daa
adc
mov
test
in
data16
mov
mov
addr16
xor
jb
ret
ficom
in
lock
xchg
sub
(bad)
lahf
inc
rcl
push
shl
ins
popa
jo
jno
and
pop
movhps
fiadd
push
pop
push
adc
add
dec
jle
fwait
(bad)
and
stos
xor
jno
jl
xchg
enter
xor
icebp
mov
in
pop
sbb
sub
xor
test
fimul
movs
scas
cdq
jle
xchg
rcr
or
add
mov
or
das
dec
out
jno
add
cmc
push
int3
push
fsubr
icebp
push
loope
iret
inc
sbb
sub
xchg
leave
adc
pop
loopne
and
daa
mov
mov
jp
aad
xlat
stos
daa
repz
jg
ds
add
mul
jnp
jne
ror
mov
fs
jne
scas
icebp
sub
inc
and
jg
jge
(bad)
shl
ror
mov
push
mov
add
iret
cmpxchg
mov
aam
xor
mov
loop
push
vmwrite
mov
fnstenv
aaa
pop
xchg
dec
xor
jno
nop
push
cwde
std
mov
xchg
xor
and
pop
out
push
inc
rol
jae
inc
int
int3
mov
and
sbb
xchg
jbe
mov
(bad)
loopne
adc
and
inc
inc
add
mov
xor
jle
outs
neg
dec
adc
adc
push
jle
dec
dec
sub
mov
add
pop
cli
jno
enter
ds
pushf
ins
mov
std
mov
(bad)
shr
sbb
or
mov
adc
shr
arpl
dec
push
lds
adc
arpl
inc
repz
inc
xor
mov
aas
outs
adc
cmp
scas
inc
jmp
ins
fild
xchg
in
call
loope
xchg
jmp
xchg
in
mov
sbb
into
lds
ins
scas
dec
sar
shl
ss
sub
sub
add
pop
bnd
adc
int3
fisubr
mov
gs
int
xor
cmc
jno
stc
repz
outs
pusha
ret
js
int3
loop
sub
mov
sub
pop
add
fist
push
inc
out
jno
add
icebp
stos
hlt
xchg
xchg
mov
jl
ds
xchg
pop
xor
pop
nop
push
xchg
jle
lods
add
xlat
js
stos
mov
and
hlt
lea
in
sub
pop
cs
ss
pop
fist
stos
rcl
(bad)
repz
mov
inc
je
mov
sbb
pop
xchg
push
arpl
shr
cmp
xor
sbb
shl
scas
ins
in
int3
jmp
mov
jl
scas
push
or
inc
jno
cmp
cmp
fbld
dec
lods
pusha
adc
in
xchg
mov
mov
jno
pop
jle
mov
es
xor
inc
cmp
cmp
add
outs
ss
sub
push
aas
outs
iret
lods
add
into
mov
and
nop
mov
scas
icebp
dec
inc
jnp
mov
inc
cdq
adc
inc
xor
test
(bad)
addr16
lods
jae
dec
and
push
scas
xor
lahf
or
js
add
int
push
ror
jl
push
adc
arpl
push
jecxz
ds
sbb
mov
inc
mov
mov
rcr
xchg
rol
(bad)
fidivr
ret
and
cmp
dec
pop
xchg
pop
add
mov
ss
mov
jae
sahf
pop
adc
mov
mov
retf
lods
sar
mov
pusha
imul
lods
sbb
or
adc
add
sbb
jb
pop
jo
inc
ror
push
pop
pop
dec
add
mov
sahf
xor
call
jbe
or
inc
jno
ins
push
mov
add
cs
mov
movs
clc
int3
xor
sub
sbb
fcomp
out
add
jmp
sti
and
mov
mov
icebp
adc
daa
ins
adc
test
repz
icebp
jo
inc
xor
dec
adc
nop
in
mov
sahf
loope
xlat
pop
push
lahf
loope
lock
pop
ret
loope
mov
lock
adc
pop
nop
outs
and
in
adc
sub
and
push
into
mov
jge
fadd
sbb
js
and
push
fcmovb
shl
aas
nop
dec
mov
out
rcr
push
cs
push
jnp
cwde
cmp
in
stos
scas
mov
mov
push
sbb
or
or
aas
mov
into
call
std
dec
(bad)
rcr
sbb
ins
add
sub
xchg
xor
shr
dec
aad
cmp
adc
ret
and
jo
stos
sub
fdivp
jmp
enter
push
dec
adc
outs
sar
dec
ret
sub
rol
inc
mov
dec
ror
xchg
fwait
out
jbe
or
bound
jne
xchg
pop
inc
and
jl
gs
out
cmp
ficom
dec
mov
icebp
adc
pop
sbb
and
jno
das
fwait
jo
into
and
dec
cmp
jmp
sbb
popf
fild
add
mov
pusha
adc
inc
xor
(bad)
ret
push
xor
add
xor
movs
int
ret
in
cmps
jecxz
jmp
push
jmp
das
push
(bad)
push
leave
and
xchg
or
fbld
mov
pop
xor
pop
inc
cld
popa
jle
cmp
pop
sub
or
mov
lods
stos
sar
pusha
xor
push
pop
test
push
mov
das
sbb
scas
les
test
in
mov
pop
cmp
pop
pusha
sbb
push
jnp
push
loope
gs
sub
lods
xchg
push
arpl
mov
push
in
jp
js
pushf
sbb
cmc
and
aas
add
mov
xor
fnstcw
icebp
(bad)
fwait
outs
aad
stos
jo
aas
inc
pop
xor
mov
rol
mov
popf
outs
sub
ja
gs
leave
or
sub
inc
cmp
sti
fild
iret
mov
push
bound
aaa
cld
sbb
xor
rol
inc
stos
rol
mov
and
rcr
das
popf
adc
jmp
pop
btr
cmp
jl
sbb
nop
add
inc
lods
xchg
sub
sbb
mov
pop
sub
add
add
das
bound
jg
cld
scas
jle
iret
or
lahf
ja
xor
test
arpl
test
adc
scas
cmp
mov
inc
pop
jl
ds
dec
push
push
sbb
mov
lds
ret
out
jno
ror
dec
adc
mov
push
scas
inc
cld
cmp
and
push
dec
stos
adc
retf
inc
and
sub
inc
outs
je
and
jmp
cmp
mov
sbb
and
sbb
push
add
cs
mov
jo
mov
fwait
xlat
outs
shr
add
sub
xchg
sub
outs
fild
push
dec
xchg
mov
test
add
aam
xchg
mov
jg
jo
push
fidiv
or
dec
sbb
jnp
dec
icebp
mov
div
outs
pop
inc
sub
push
fwait
push
sahf
dec
icebp
cmps
xor
jb
cs
mov
aad
dec
cmp
out
adc
pop
inc
sbb
lods
push
adc
mov
jge
lods
mov
fist
ins
xchg
dec
popf
std
outs
mov
mov
outs
pop
inc
daa
jo
pusha
addps
and
leave
pop
outs
popa
cli
cmps
out
pop
int3
dec
mov
sbb
aaa
jo
fiadd
jae
inc
add
inc
push
int
xor
enter
xor
gs
inc
mov
push
shr
loopne
popf
hlt
cwde
push
into
xchg
inc
mov
fsub
jb
lods
mov
ins
sti
adc
sub
sub
cdq
dec
std
add
fbld
ret
pop
jb
shl
and
push
inc
jo
psrld
call
mov
mov
or
push
outs
lods
ds
pushf
cs
add
xchg
cdq
pop
and
add
dec
ret
outs
adc
adc
mov
sub
jo
lods
int3
adc
cmp
mov
jmp
push
mov
out
and
sub
ror
xor
jg
and
sub
jecxz
cmps
cld
rol
and
loope
into
adc
push
adc
loopne
sahf
pop
push
and
push
sahf
retf
mov
sbb
cmps
mov
push
in
mov
xchg
sbb
xlat
test
jb
mov
cmp
les
cmp
in
or
into
adc
cmp
jge
outs
sub
aad
dec
jmp
jo
fdiv
in
mov
xor
adc
or
int
dec
nop
dec
inc
movs
mov
xchg
dec
adc
dec
rcr
sub
mov
or
add
dec
fist
adc
ror
jmp
(bad)
bound
add
loop
popf
call
mov
imul
outs
mov
mov
data16
in
int
xor
jp
push
mov
mov
push
(bad)
mov
loopne
aam
popf
cs
shl
pop
and
pop
fld
loopne
ins
into
push
je
sahf
mov
mov
mov
adc
fdiv
into
sub
lahf
dec
adc
jl
and
push
fiadd
dec
sub
jb
dec
adc
fsub
pop
sbb
stc
push
rol
push
(bad)
nop
push
sbb
lods
mov
lds
jb
add
aam
outs
mov
lock
jnp
ins
loop
jle
adc
shl
xchg
shr
jle
mov
push
test
jp
xor
push
rol
cmps
push
(bad)
ror
rcl
data16
push
or
ds
popa
adc
sbb
test
jmp
adc
sahf
mov
and
add
ds
test
inc
sub
sbb
xchg
pop
or
pop
add
pop
fstp
(bad)
add
std
push
push
(bad)
push
xor
movs
aas
mov
scas
push
pop
inc
dec
std
scas
jmp
add
xor
lods
adc
aas
xchg
fistp
add
out
popf
arpl
mov
or
mov
xor
fist
ins
int3
sub
mov
retf
retf
pop
inc
pop
mov
lods
jae
iret
mov
fnstenv
mov
add
inc
outs
icebp
dec
sbb
lock
xchg
cmps
mov
out
jmp
in
mov
sbb
dec
mov
adc
xchg
jecxz
add
sar
popa
mov
mov
mov
mov
sub
into
mov
pop
push
pop
outs
fwait
cli
inc
cs
sbb
popa
into
mov
aad
sub
and
xchg
out
aas
iret
shr
add
push
popf
ret
ss
rcr
push
scas
mov
jp
add
add
fist
clc
loopne
dec
adc
neg
jmp
inc
sbb
lahf
dec
ret
or
and
mov
mov
ins
fimul
aam
rcr
push
add
adc
fs
xchg
adc
repnz
icebp
sbb
add
mov
adc
rep
xchg
xor
add
push
adc
adc
shl
add
xor
pop
pushf
cdq
jecxz
pop
inc
adc
sbb
mov
pop
add
std
inc
addr16
ror
out
lods
inc
cwde
mov
mov
scas
and
xchg
gs
cli
movs
xor
dec
pop
mov
out
cmc
pop
pop
push
dec
js
mov
fcom
lahf
jmp
xor
pop
lods
ins
aas
mov
push
push
packsswb
popf
stc
adc
dec
adc
pop
add
rol
pop
loope
xchg
cs
ret
bound
mov
sahf
mov
mov
mov
rcr
sahf
dec
out
push
jo
ins
pop
(bad)
pop
add
out
cwde
add
scas
iret
sub
mov
xchg
push
push
std
sbb
xchg
add
xchg
and
das
lods
into
pop
fiadd
lea
mov
icebp
sbb
add
fs
loope
xor
fsubr
push
ret
ror
(bad)
iret
add
scas
mov
inc
pop
out
sub
popa
sete
(bad)
(bad)
bound
pop
pusha
int3
dec
dec
pop
push
shr
mov
jb
xor
out
in
sub
ins
das
jl
inc
stos
or
and
fldcw
mov
jno
sar
and
aad
dec
ins
xor
repnz
add
push
and
pop
sbb
cmp
iret
out
xor
ins
pushf
jb
rol
jg
int
mov
(bad)
(bad)
dec
sub
sbb
xor
repnz
in
das
pop
repnz
jp
iret
mov
lods
mov
push
cs
in
ss
in
ficomp
ins
in
rcl
push
pop
push
push
pop
repz
out
push
pop
sub
or
nop
aas
(bad)
dec
ret
push
sub
out
loop
pusha
xchg
cld
out
xchg
xor
(bad)
jne
adc
mov
and
test
fstp
pop
xor
inc
xor
in
mov
int3
xor
loope
sar
repz
inc
fwait
mov
lahf
and
(bad)
mov
dec
mov
jg
out
repz
fnsave
popa
das
jle
rcl
pop
stos
mov
data16
add
add
jns
rcl
sbb
lock
out
mov
sub
adc
setl
mov
sbb
loopne
lock
add
cmp
or
test
xor
or
mov
bound
addr16
sub
or
lahf
jle
dec
rol
xor
lods
inc
popf
inc
and
sbb
lods
jecxz
and
dec
xor
ficomp
add
stos
loope
xor
in
xchg
repz
lods
shl
shr
cmp
inc
xor
loope
jnp
mov
and
lock
(bad)
cmp
inc
lds
stos
mov
sbb
mov
pop
in
pushf
popf
jae
int3
stos
jmp
(bad)
push
rol
and
cwde
scas
and
sqrtps
and
pusha
out
fdivrp
push
test
les
sub
sbb
into
imul
call
ret
dec
pop
test
aas
cmp
xor
outs
mov
or
xor
fwait
fs
add
popf
add
jmp
mov
jp
movs
scas
mov
shl
or
add
mov
in
stos
test
dec
cmp
dec
ret
lea
lahf
popf
sbb
(bad)
in
jno
scas
xchg
dec
add
mov
push
fistp
lahf
mov
sahf
or
jecxz
jg
xor
and
push
xchg
mov
retf
fcom
pushf
in
loopne
and
adc
and
icebp
(bad)
and
out
scas
xor
xchg
ins
mov
es
dec
jmp
mov
outs
hlt
add
mov
ins
fisttp
ja
stos
push
jecxz
stos
data16
add
cmp
in
jb
out
adc
sub
jo
mov
lods
mov
aaa
lahf
(bad)
loop
rcl
or
cli
add
stos
xchg
mov
mov
(bad)
int
mov
sahf
inc
inc
xor
cmps
push
jle
lock
pusha
add
add
sbb
xchg
out
push
ja
jecxz
repz
fucomi
xor
dec
mov
test
popf
ret
mov
sar
jae
inc
popa
mov
inc
stos
lods
outs
nop
repz
fs
lods
test
inc
mov
push
jle
addr16
mov
fwait
xor
pushf
jmp
pop
lea
add
mov
cmp
mov
leave
out
push
pop
pop
mov
mov
lods
mov
mov
ret
pop
jo
ins
cs
imul
xchg
mov
sub
lods
mov
mov
sbb
bound
ins
ins
pop
mov
aas
fidivr
pusha
sub
fnstcw
cld
mov
pop
mov
mov
push
fdivr
xchg
sbb
push
adc
data16
and
cmp
sbb
adc
add
stos
pop
push
adc
ins
out
cs
adc
repz
and
xlat
push
pop
pop
mov
cli
fcomp
loop
add
ins
outs
add
or
sbb
bnd
(bad)
mov
adc
repz
into
lods
or
int
test
fsubr
inc
popf
push
retf
push
add
mov
adc
shl
in
outs
and
sti
cmp
mov
int3
inc
dec
loop
cmps
dec
jl
dec
push
das
jl
(bad)
aas
call
pop
sub
stc
push
ret
xchg
and
or
pop
std
test
inc
sub
push
xor
inc
inc
inc
outs
mov
sbb
out
mov
sbb
dec
and
fild
xor
push
retf
jo
inc
into
in
sub
test
push
shr
outs
mov
(bad)
ja
sub
and
out
ret
cld
les
cmp
dec
adc
data16
push
cmp
xchg
ja
jae
pop
sahf
fdivr
push
into
(bad)
or
or
mov
es
(bad)
jle
nop
push
lea
mov
adc
sbb
cmp
adc
and
jae
fldenv
repz
shl
in
push
pop
mov
and
add
jg
mov
mov
loop
fdiv
fistp
test
add
fwait
dec
inc
(bad)
out
test
ret
push
mov
addr16
dec
inc
xchg
lock
arpl
cmovae
das
lods
out
outs
ror
popf
arpl
retf
sbb
add
popf
jb
sub
jg
mov
jno
std
mov
xchg
std
dec
fwait
jmp
pop
push
lea
imul
cli
jns
inc
cmps
ficomp
loop
(bad)
retf
mov
or
push
jae
mov
and
adc
or
icebp
in
push
cmp
cli
stc
test
inc
jno
jge
mov
mov
inc
or
in
scas
not
call
test
xchg
jne
cmp
cmp
and
iret
sub
xchg
std
mov
dec
xchg
sahf
and
clc
outs
inc
scas
js
pop
jmp
jecxz
shl
cs
sub
stos
fdivr
mov
aam
adc
js
sbb
jmp
push
mov
and
fstp
cdq
(bad)
xchg
fnsetpm(287
in
cmps
pop
into
pop
loopne
ret
bound
dec
sbb
sbb
or
call
hlt
outs
xchg
(bad)
movs
fst
mov
icebp
dec
test
cmp
jo
push
in
inc
cs
or
repnz
call
outs
xchg
adc
ret
inc
dec
xchg
ins
mov
ins
stos
and
pusha
sahf
nop
test
adc
dec
outs
into
pop
inc
xchg
fdiv
je
push
loope
sub
int3
or
mov
mov
xchg
outs
ret
lods
aas
xchg
dec
icebp
call
jo
mov
(bad)
dec
xchg
into
popa
ret
xchg
adc
outs
xor
test
stc
inc
adc
jno
cmp
lahf
cmp
sub
ins
pushf
inc
out
mov
scas
lock
dec
adc
rol
pop
aaa
stos
std
int
aas
jl
and
pop
sub
repnz
hlt
sahf
inc
scas
cld
mov
add
jb
clc
xchg
pop
das
or
mov
nop
mov
mov
dec
shl
push
jecxz
ins
ins
xor
and
mov
aad
sahf
iret
jnp
jno
into
xchg
retf
add
add
add
jns
mov
dec
loope
push
inc
loop
cmps
jg
mov
das
fucomi
push
jbe
sbb
ins
dec
shl
xchg
jmp
xlat
xchg
mov
or
cmps
nop
fldenv
push
and
jo
repz
out
fistp
gs
add
dec
inc
adc
add
dec
movs
pop
int
ja
mov
pop
test
cmp
fsub
cmp
and
or
out
jo
das
push
(bad)
(bad)
loopne
loope
movs
mov
sbb
jmp
mov
jmp
scas
xor
push
and
(bad)
mov
adc
jo
xor
dec
ss
jbe
in
loopne
pusha
xor
int3
mov
mov
dec
movs
mov
lods
push
mov
pop
aas
aas
xor
sar
sar
mov
popf
xor
push
int
jle
movs
and
mov
outs
outs
cwde
jne
mov
inc
ins
fisttp
xor
xor
cmc
iret
div
inc
pop
(bad)
(bad)
stc
test
call
or
loop
loopne
(bad)
push
and
inc
retf
push
ds
pop
mov
push
in
in
sbb
sbb
adc
mov
int
fidiv
xchg
lahf
xchg
fild
dec
jo
and
loop
cli
pop
xchg
out
jb
bound
jb
adc
sbb
retf
repnz
loopne
int3
push
fsubr
mov
push
and
mov
inc
cs
push
add
fiadd
scas
enter
jno
pop
test
outs
ins
and
push
push
or
ds
mov
test
xchg
sti
loopne
fstp
mov
scas
ins
push
aad
push
push
pop
jb
aas
mov
and
and
adc
arpl
sbb
test
retf
shl
nop
push
inc
adc
ss
fs
xchg
sub
jle
cmc
push
int3
in
pop
push
xchg
inc
addr16
cmps
cld
mov
lea
iret
lock
jnp
xor
xchg
aaa
mov
(bad)
popa
rcl
xor
inc
in
pop
(bad)
imul
in
(bad)
loop
shl
loope
iret
jb
lods
int3
push
int
in
jo
dec
adc
pop
jae
mov
inc
add
ss
jl
push
mov
dec
outs
fstp
mov
pop
rcr
repz
xchg
leave
loope
jg
jmp
sbb
jp
bound
xor
cdq
cwde
dec
or
outs
adc
adc
mov
mov
scas
enter
pause
vmwrite
lock
pusha
(bad)
cli
mov
or
push
mov
lock
in
jb
je
movs
push
add
xor
mov
adc
nop
scas
aas
out
mov
pop
les
aam
pop
repz
push
outs
pop
data16
mov
add
dec
loopne
out
fist
test
push
mov
sbb
popa
push
out
mov
jge
and
xchg
mov
xor
(bad)
cwde
imul
fldenv
sti
out
add
jle
add
inc
test
dec
pop
push
sub
sub
mov
and
arpl
fild
adc
or
xchg
loop
in
or
sub
stos
push
shl
sbb
dec
xchg
push
jno
adc
xor
lock
scas
fisub
sbb
push
pusha
das
mov
adc
push
adc
push
stos
das
js
outs
cs
mov
fisttp
sub
loop
outs
jg
shl
add
xor
lahf
pop
push
adc
int3
lahf
adc
(bad)
retf
sbb
jae
rcr
sahf
mov
adc
sub
xchg
add
or
nop
scas
repz
into
in
(bad)
out
add
xor
or
cmp
pop
scas
popaw
fidivr
rcr
pop
mov
outs
adc
aam
sub
jo
xor
sbb
add
xor
not
fst
cmps
dec
jne
push
popa
mov
inc
cmc
bound
mov
ret
pop
loopne
adc
fbstp
pop
gs
enter
test
xchg
test
cmp
adc
rol
jo
icebp
jmp
stos
pop
pusha
(bad)
inc
pop
xor
fldln2
mov
aad
cmps
(bad)
xlat
and
push
leave
add
add
jb
mov
or
out
retf
sar
mov
add
(bad)
xlat
inc
cmp
lds
imul
jb
or
push
int3
or
ror
addr16
shl
mov
in
xchg
sbb
adc
jle
dec
out
je
pop
sbb
fcmovnbe
sub
cmc
mov
jmp
mov
jmp
jp
fwait
outs
inc
in
add
dec
push
pop
mov
cld
movs
(bad)
lods
mov
adc
icebp
mov
pop
mov
loopne
loope
sub
xchg
sub
lahf
push
jmp
pop
add
ins
pushf
nop
sbb
inc
dec
mov
jmp
(bad)
xchg
pop
repnz
call
outs
sub
das
dec
fnsave
xchg
fmul
xchg
movs
out
popa
addr16
cwde
push
mov
rep
movs
loop
ror
(bad)
sbb
xchg
dec
and
dec
sti
test
lea
mov
inc
push
ror
stos
popa
mov
and
loopne
int3
(bad)
fld
mov
jg
inc
mov
test
inc
aas
into
mov
ficom
enter
lock
xchg
push
fcom
fstp
or
addr16
xchg
movs
rcr
add
shr
lahf
or
leave
repnz
lock
dec
lods
(bad)
out
push
push
lea
ret
(bad)
push
call
and
jno
jmp
pop
and
push
xchg
mov
lock
mov
xchg
or
dec
jo
jge
jae
xor
out
pop
outs
into
scas
shr
loopne
in
add
in
push
outs
jnp
adc
(bad)
out
popf
or
retf
mov
scas
outs
mov
inc
mov
mov
mov
outs
add
xchg
(bad)
dec
out
cmc
cli
fwait
sti
xchg
mov
push
push
outs
ins
ins
mov
out
aas
(bad)
outs
and
pop
mov
shl
fadd
fdiv
sub
loop
rcr
or
pop
mov
sub
push
xlat
leave
mov
ror
dec
sub
mov
mov
pop
mov
xchg
mov
adc
pop
push
add
into
outs
(bad)
cmps
pop
retf
mov
outs
repnz
sbb
(bad)
sahf
(bad)
dec
das
mov
and
(bad)
sti
cmp
fwait
popf
adc
fwait
lea
push
jae
push
sub
repz
jnp
xor
jae
fwait
mov
stos
jge
sbb
call
jmp
stos
aas
or
repz
adc
dec
pop
cmp
repz
shl
test
fmul
cld
adc
cdq
repz
or
xchg
cmp
mov
popf
sub
dec
add
retf
pop
and
xor
les
retf
std
jae
pop
pmovmskb
lea
arpl
pop
stc
not
adc
mov
fsubr
xchg
xlat
or
xchg
ds
mov
push
sub
js
aaa
pop
movs
xchg
jae
clc
push
fild
xchg
outs
inc
or
(bad)
xor
aaa
neg
pop
add
lahf
jnp
dec
jp
cmc
in
add
cwde
sub
inc
es
adc
lock
ins
lock
and
int
leave
js
and
imul
idiv
and
jge
push
je
jb
aaa
div
retf
xlat
shr
je
cmps
jle
(bad)
loopne
xor
loop
or
jmp
push
sub
push
jp
je
inc
jmp
inc
ins
or
(bad)
retf
dec
inc
cmc
iret
into
dec
iret
xchg
dec
rol
cmp
pop
popf
mov
cmps
dec
mov
mov
test
cs
dec
mov
jne
dec
jb
push
xor
xchg
sbb
(bad)
fisub
in
data16
xchg
push
sbb
dec
outs
inc
xchg
fisubr
add
mov
mov
and
mov
add
mov
add
jb
iret
into
pop
mov
push
dec
sbb
mov
repz
xchg
push
lds
inc
push
xor
das
lea
rol
sub
mov
into
push
or
inc
and
lds
out
frstor
push
sbb
dec
dec
ret
sub
sub
xor
into
push
sub
jb
cmps
(bad)
fisub
cs
jmp
dec
dec
ds
inc
(bad)
jmp
arpl
test
mov
jmp
mov
or
or
cmps
sbb
or
and
bound
inc
and
mov
bound
mov
es
push
inc
inc
bound
out
or
dec
fwait
dec
jmp
repnz
push
dec
sbb
(bad)
fxch
bound
dec
push
sbb
icebp
mov
scas
mov
push
dec
inc
jp
dec
pusha
popa
mov
sub
lods
dec
repz
mov
jl
movs
mov
(bad)
cs
cmp
in
in
sahf
and
sti
xor
in
scas
ret
sub
sbb
and
lods
(bad)
lods
outs
push
retf
rol
cmps
cmps
fisub
imul
push
fisub
into
ror
mov
mov
push
fsubr
cmp
pop
movs
sub
outs
test
or
push
into
xor
jmp
cmp
lods
dec
lods
jbe
mov
addr16
sbb
jp
mov
lods
outs
les
jne
jmp
dec
pop
mov
retf
lods
mov
xor
jmp
mov
add
mov
fstp
es
push
stos
pop
sub
jmp
cmp
dec
cmps
add
jne
xor
sub
ror
or
cmp
jp
bound
add
les
cs
mov
test
retf
pusha
int3
push
loope
dec
sub
iret
xchg
or
sbb
inc
xor
sub
push
lods
adc
xchg
adc
int3
and
or
jo
imul
pusha
add
or
popa
cmps
add
loopne
fnstsw
scas
or
cmps
ins
push
pusha
imul
rep
cmc
pop
mov
or
sbb
lods
adc
or
mov
push
push
mov
ret
and
jnp
push
ja
mov
(bad)
out
dec
push
test
mov
xchg
test
fild
mov
pop
pusha
pushf
dec
or
or
cwde
jnp
cmps
mov
pop
fcomp
pop
pop
mov
add
push
pushf
mov
or
or
xlat
fwait
stos
sub
inc
dec
sbb
pop
and
sbb
ja
xlat
sub
cli
int3
fisttp
rcr
add
xor
cli
mov
neg
dec
js
sbb
fisttp
fisttp
fmul
fmul
pop
(bad)
pop
(bad)
pop
(bad)
pop
sbb
add
dec
fisttp
mov
add
js
cwde
or
inc
aam
lods
push
dec
push
push
sbb
xchg
jnp
add
add
ja
mov
fwait
add
dec
lahf
ja
nop
sub
sbb
fbstp
call
inc
aam
jg
cdq
dec
mov
sti
xor
or
enter
fst
mov
pop
inc
pop
mov
pusha
push
ja
pusha
sub
pop
iret
iret
mov
fs
pop
sbb
fs
sub
or
push
add
ds
fisub
stc
(bad)
(bad)
lock
mov
nop
xchg
enter
cwde
jmp
cdq
xchg
dec
pusha
jge
mov
sbb
test
fidiv
inc
in
cmp
mov
pusha
gs
stc
ins
mov
enter
enter
xor
jecxz
dec
mov
es
inc
jl
sar
mov
xor
ds
xor
add
repnz
ja
pushf
fidiv
cld
mov
xchg
mov
push
pusha
jns
mov
dec
jecxz
inc
hlt
mov
xchg
dec
sbb
xor
ss
mov
jno
mov
scas
push
dec
sub
and
aam
push
push
jns
push
push
xlat
jecxz
push
std
repz
stos
dec
out
ret
cdq
(bad)
out
ret
test
and
pop
imul
sub
mov
xor
xor
ja
outs
mov
cmpxchg
hlt
into
cmp
in
in
ret
xor
xor
not
imul
(bad)
cmp
cld
add
das
mov
std
cs
xchg
icebp
dec
adc
mov
stc
xor
xchg
ds
mov
icebp
dec
and
arpl
aas
sti
mov
lods
nop
icebp
es
mov
sbb
std
cmps
mov
xchg
jle
pop
mov
add
mov
cmp
pop
push
call
out
push
fild
pop
arpl
out
ins
cmpxchg
adc
jno
cdq
xchg
out
ins
aaa
stc
imul
popf
jecxz
cmp
jno
sbb
ret
add
sub
mov
aad
push
cdq
push
push
dec
imul
cmp
mov
sahf
idiv
std
sub
adc
adc
loope
adc
repz
and
or
in
pop
loope
into
arpl
ja
test
mov
not
cmp
xor
and
(bad)
or
mov
mov
cld
aaa
pop
add
dec
das
movs
sub
sbb
sub
fsubr
dec
das
or
aaa
sub
add
(bad)
fiadd
popa
xchg
mov
mov
mov
jb
mov
or
mov
scas
and
jo
in
(bad)
movs
pop
fs
test
cmp
xchg
xchg
dec
xor
sbb
mov
mov
sbb
or
int3
inc
in
jmp
or
fsub
mov
aam
loopne
xchg
or
in
ja
(bad)
dec
cmp
jb
add
fisttp
pmaxub
dec
sbb
aaa
repnz
lock
jmp
or
jmp
iret
stos
lahf
je
sub
jae
test
push
into
fs
or
int
mov
mov
loopne
push
ins
jg
aaa
or
or
pop
ret
imul
lds
bound
fdiv
pop
sahf
nop
jmp
push
or
punpcklbw
sbb
push
inc
nop
bound
cmp
dec
ret
mov
repnz
push
cmps
adc
add
cmp
cmp
mov
cmp
mov
js
jo
add
ret
push
(bad)
jmp
push
adc
inc
xor
lock
aam
mov
cmps
fdivp
add
push
aaa
cmp
fisub
mov
jo
inc
adc
xchg
(bad)
xchg
push
jo
push
jge
out
imul
push
adc
loop
mov
inc
ins
push
loop
fwait
xchg
cmp
scas
leave
icebp
and
shl
xchg
xor
shl
xchg
xchg
sahf
mov
jo
daa
ret
ds
xchg
jno
and
and
jno
loop
inc
lock
inc
jmp
push
mov
mov
adc
mov
(bad)
xchg
jmp
adc
bound
test
paddb
jmp
bound
dec
retf
mov
ret
adc
shl
fsub
jmp
sbb
addr16
les
es
retf
mov
ret
adc
fimul
xchg
push
jno
stos
ror
or
shl
jb
jmp
lahf
call
arpl
xchg
jmp
ret
mov
adc
dec
mov
addr16
pop
std
rcr
pop
jmp
push
nop
inc
push
shl
pop
out
arpl
cmps
mov
fsub
jecxz
cmps
xor
adc
js
sub
mov
mov
(bad)
xlat
inc
and
push
mov
mul
add
test
sbb
mov
cmps
rol
mov
loop
mov
sbb
adc
enter
fwait
xor
jbe
(bad)
stc
mov
jae
sbb
xchg
adc
addr16
pop
dec
pop
sbb
pop
call
mov
call
bound
or
mov
mov
jno
inc
pop
mov
ins
in
repnz
pop
push
jmp
pusha
cmp
xchg
sbb
xchg
pop
aaa
repz
sub
push
and
pop
sbb
or
idiv
pop
xchg
mov
sub
or
out
arpl
scas
div
sub
pop
jl
nop
sbb
or
cmp
xor
jnp
xor
cmp
add
mov
cld
das
sbb
pushf
mov
repz
jnp
and
ret
lods
retf
sbb
pop
(bad)
and
out
jbe
adc
jnp
cmp
pop
xor
pop
mov
mov
pop
fwait
into
jnp
xchg
xlat
popf
xchg
jne
or
push
ins
xor
add
lea
lock
cmp
call
adc
sbb
inc
aad
add
cmp
retf
popf
test
lea
std
in
inc
sub
fwait
lea
ins
sbb
adc
mov
adc
sbb
mov
repz
mov
addr16
ret
lods
xor
mov
pushf
hlt
jnp
xchg
xchg
fldenv
pop
aad
or
std
repz
xlat
push
xchg
cmp
sbb
lahf
xor
push
jne
dec
jnp
repz
jo
loop
nop
jae
imul
pop
inc
jo
nop
outs
jne
pop
lods
inc
jp
dec
sub
aas
mov
mov
cmp
lods
pushf
pushf
out
in
inc
aam
pop
movs
cld
sbb
push
add
js
xchg
mov
push
and
fcomp
enter
and
sbb
adc
push
inc
mov
jo
push
mov
add
xchg
sbb
adc
xchg
je
and
mov
shl
adc
out
and
push
jmp
inc
(bad)
jecxz
inc
pusha
fadd
mov
dec
(bad)
call
test
xor
push
je
or
push
xchg
xchg
cld
adc
lods
lahf
lahf
movs
popf
mov
push
and
stos
ja
sbb
iret
mov
pushf
pop
jb
adc
mov
movs
das
add
pushf
or
shl
jge
xchg
xor
pushf
jmp
pusha
and
cld
in
dec
(bad)
fsubr
pushf
add
pusha
sbb
jp
pop
rcr
nop
cmp
cld
fs
mov
and
rcr
int3
push
mov
push
xchg
xor
dec
icebp
xor
pusha
pop
add
cmp
dec
add
rcl
inc
cmp
cmp
xchg
sar
adc
fs
pushf
jmp
push
imul
shr
cld
sub
dec
pop
and
dec
dec
jnp
movs
sti
in
(bad)
push
xor
cmp
lea
stc
lods
mov
or
cmp
jecxz
mov
inc
pushf
je
jmp
jg
inc
mov
add
fisttp
xchg
add
add
and
ret
sbb
inc
pop
fmul
fmul
mov
sub
pop
or
inc
pop
jg
loopne
test
xor
inc
jp
out
jge
mov
mov
sub
and
mov
push
and
or
icebp
hlt
rcr
jb
test
pop
movs
and
(bad)
scas
adc
popa
mov
not
imul
push
xchg
adc
push
pop
sbb
iret
sub
adc
les
jg
pop
sbb
shr
jmp
hlt
xchg
retf
or
pop
rol
shl
or
(bad)
xor
sbb
cmp
aam
aas
loop
ret
pushf
adc
jno
xor
mov
adc
cmps
adc
inc
cmc
adc
adc
xchg
loop
and
push
cmps
xchg
loop
bound
cmc
or
inc
rcl
and
and
bound
je
xchg
es
push
and
bound
je
inc
inc
das
scas
and
bound
xor
sub
xor
pushf
mov
xchg
inc
jecxz
push
jge
push
lock
ret
jl
in
adc
push
(bad)
fsub
mov
or
and
bound
adc
and
ja
lahf
(bad)
cmp
inc
xor
lahf
dec
or
xor
jb
loop
lods
mov
popf
xchg
shl
inc
dec
jno
add
clc
jns
popa
loope
(bad)
sahf
loop
ret
push
cmp
xchg
or
loop
out
xor
leave
cs
call
xchg
sbb
js
sub
rcr
cmp
or
loope
scas
in
in
ficom
adc
rol
popf
repnz
push
push
jno
movs
dec
sbb
cmps
pop
in
hlt
jg
xchg
les
and
lock
ret
or
xchg
shl
mov
popa
xchg
mov
call
sub
pop
add
inc
pop
push
ja
popf
mov
cwde
mov
imul
xor
sar
popf
data16
fisttp
or
mov
xor
adc
and
adc
mov
es
cmp
dec
or
ja
pop
add
add
mov
test
cmp
shl
mov
enter
iret
mov
dec
mov
add
fidiv
adc
in
pushf
and
es
xchg
mov
sub
mov
and
jnp
mov
mov
dec
stos
addr16
push
pop
jb
stos
pop
jnp
push
fadd
xchg
(bad)
mov
dec
arpl
nop
or
jnp
(bad)
in
mov
push
(bad)
js
scas
or
mov
mov
fdivr
cmps
mov
pop
mov
and
and
mov
mov
xchg
jg
test
inc
mov
jmp
ds
movs
pop
(bad)
ins
push
js
inc
mov
call
aad
aas
mov
mov
sub
xchg
or
pop
mov
shr
cmp
adc
scas
cmp
cs
ret
fistp
push
cmp
paddd
mov
nop
jne
inc
ficom
into
adc
sub
pop
lods
pop
mov
int
sub
cmp
sbb
sar
cdq
pop
xchg
jns
pop
sti
sbb
cmp
ds
retf
aas
mov
dec
push
sbb
mov
dec
xchg
imul
std
fidivr
stos
jbe
jnp
dec
hlt
je
repnz
ds
fisub
lods
dec
nop
outs
fist
sub
fnstsw
jecxz
rcr
xor
push
xchg
jg
or
pop
mov
xchg
ja
je
mov
xlat
sub
out
cmp
mov
daa
mov
mov
frstor
sar
and
xchg
jp
jmp
dec
movs
std
adc
arpl
data16
mov
sbb
inc
xlat
pop
push
icebp
jne
push
test
cmp
sub
push
xchg
xor
xor
and
jge
pop
mov
icebp
(bad)
push
int
ret
push
or
inc
xchg
cmp
shr
out
rol
out
out
cmp
jb
push
rcr
(bad)
xor
bound
ret
cmp
fild
icebp
jne
or
not
jnp
pop
lea
mov
or
jbe
adc
lock
xchg
sbb
loopne
xlat
adc
stos
push
mov
adc
pusha
loop
mov
fs
push
movs
jb
int3
mov
shr
sub
inc
and
sub
sbb
test
call
dec
sub
or
mov
mov
jmp
jg
inc
push
scas
mov
sbb
fdivp
(bad)
shl
push
lds
aad
jbe
and
cwde
mov
jbe
rol
cmp
pop
xor
sahf
or
jmp
xor
enter
adc
sbb
cmp
push
or
xchg
ja
cmp
into
cvtpi2ps
ds
sub
pop
mov
pop
movs
iret
and
scas
cmp
and
sbb
setl
loopne
nop
pop
into
cmp
stc
imul
cmp
sub
or
out
mov
adc
fimul
shl
mov
lahf
imul
mov
fidivr
stos
loope
push
dec
add
scas
mov
cmc
lods
imul
sbb
mov
out
add
inc
sub
imul
mov
(bad)
pop
and
(bad)
scas
aam
out
neg
fnsave
rcr
ret
inc
repnz
jns
cmp
sub
adc
mov
sub
pop
cmc
ds
cli
cmp
push
cmc
and
rcr
ror
out
push
ret
popf
cli
adc
inc
out
les
xor
or
or
(bad)
fsub
inc
cmps
or
inc
ret
sbb
loope
stos
inc
(bad)
mov
ss
add
push
mov
int3
dec
clc
es
add
pop
fcom
fist
out
inc
cmps
or
dec
clc
xor
in
movs
ins
les
out
xlat
adc
cmp
pop
fdivr
(bad)
out
daa
not
add
inc
jecxz
aam
cmps
sbb
fcmovne
xor
sbb
mov
inc
out
adc
sub
mov
(bad)
scas
pop
mov
sub
sar
cmp
sub
fcmovu
aaa
out
sar
lds
adc
xor
addr16
mov
or
sbb
pop
scas
pop
ret
pop
fucomp
aad
mov
sbb
cmp
mov
repz
aad
xlat
and
add
cmps
add
sub
mov
xor
inc
(bad)
ss
pop
movs
pop
mov
add
push
loope
jmp
out
and
push
scas
and
loopne
mov
stos
shr
mov
shr
xchg
mov
icebp
stos
(bad)
cli
loope
aam
cli
scas
int3
mov
loopne
idiv
cmc
or
lock
iret
sahf
into
mov
fwait
sub
les
xchg
hlt
shl
cli
std
xchg
sahf
enter
enter
sti
sbb
and
loopne
sub
lds
in
cwde
fiadd
retf
hlt
loop
enter
xlat
out
les
mov
aam
in
(bad)
neg
in
in
adc
(bad)
cmc
int3
test
clc
call
xchg
or
add
hlt
popf
hlt
mov
iret
popf
out
popf
shl
xchg
lock
loopne
nop
call
hlt
out
lock
(bad)
xchg
xchg
(bad)
call
cdq
jmp
cwde
aad
les
sahf
cli
loopne
in
sbb
xchg
popf
cmp
out
add
shl
retf
cld
call
cmc
aad
in
mov
lahf
stc
mov
neg
xchg
xchg
mov
fiadd
retf
mov
xchg
(bad)
xchg
xchg
nop
mov
repnz
sahf
mov
movs
les
shl
jmp
xchg
xchg
sbb
(bad)
hlt
fldenv
out
cwde
(bad)
mov
ja
lods
jmp
rep
rcl
lds
pop
shr
mov
pop
aad
fisub
fmul
outs
rcr
xor
cdq
retf
ja
jp
pop
fisubr
or
repz
cmps
pop
(bad)
(bad)
xor
dec
retf
enter
or
ins
mov
ror
sub
mov
out
mov
cdq
stc
fs
ins
mov
(bad)
add
adc
fldenv
dec
mov
or
cli
nop
mov
xchg
or
pop
xor
pop
xchg
push
or
loopne
ins
outs
mov
jge
imul
(bad)
sbb
inc
stos
lods
jmp
pop
fnsave
push
(bad)
addr16
pop
movs
pop
in
lock
std
outs
ficomp
mov
push
std
adc
xor
(bad)
mov
data16
fld
jmp
fadd
movs
inc
std
sbb
push
out
cmps
pop
stc
mov
daa
rol
dec
sti
dec
retf
cmp
outs
stc
sub
shl
jbe
push
hlt
cmp
mov
pop
sti
mov
pop
jecxz
aad
aad
in
dec
ret
ins
hlt
mov
add
pop
fistp
paddsb
push
jae
mov
inc
retf
jge
push
push
ja
jo
jl
pop
fimul
lds
sahf
dec
pop
push
push
lea
pop
jmp
stos
dec
imul
and
or
shld
push
je
inc
xchg
pop
ror
test
or
push
jns
mov
push
loope
fisubr
retf
dec
ds
adc
inc
lods
push
(bad)
jle
pop
push
push
mov
outs
test
int3
push
scas
or
outs
setge
add
ja
add
sbb
ins
lods
push
nop
push
shl
sbb
jg
pop
repz
call
ins
mov
ins
push
lahf
add
je
push
popf
push
ja
adc
in
xchg
or
push
popf
push
mov
xlat
ja
dec
movs
dec
mov
outs
les
iret
add
pop
les
push
lds
cwde
sbb
ja
pop
fwait
imul
jae
dec
xchg
ja
push
lea
jl
dec
xchg
adc
cwde
dec
lock
mov
fisubr
pop
mov
mov
xchg
fs
call
aas
lods
movs
adc
popf
inc
in
and
jne
sub
mov
daa
shl
inc
mov
scas
fmul
jp
pop
repnz
inc
xlat
jbe
stos
sbb
pop
xchg
ins
hlt
push
sar
lods
sbb
inc
mov
addr16
repz
jmp
push
rep
push
jp
outs
retf
inc
repz
xor
add
ja
pop
mov
push
mov
jge
push
and
mov
rcl
and
inc
xchg
popa
mov
pop
mov
aam
not
rcr
cmp
jns
cmp
or
ins
lahf
mov
stos
popa
test
sar
jne
sub
lods
add
sub
mov
lods
jg
or
dec
fwait
pushf
push
arpl
push
in
jge
pop
fisubr
jg
hlt
outs
int3
push
mov
or
dec
pop
mov
mov
(bad)
(bad)
(bad)
cmps
xchg
xchg
and
xchg
pushf
hlt
fstp
xchg
jmp
fdivr
cwde
jmp
mov
mov
mov
loopne
jecxz
add
mov
pop
pop
cmps
(bad)
sahf
fdiv
mov
sahf
shr
iret
(bad)
ror
cmp
xor
lock
fcmovb
fidiv
mov
mov
shl
pop
bound
mov
mov
mov
mov
(bad)
mov
ret
add
dec
es
ret
mov
fwait
mov
stos
xlat
rol
adc
mov
test
ret
add
xchg
loop
ret
ret
push
dec
mov
movs
ret
not
xchg
inc
jl
xchg
fcomp
xor
cwde
fld
movs
mov
test
xor
out
stc
iret
test
loope
(bad)
adc
sub
les
lahf
stos
in
inc
sub
adc
les
adc
pop
(bad)
stos
sti
repz
or
cmp
es
mov
xchg
mov
pop
mov
cmp
fld
dec
inc
push
mov
aam
jge
mov
sbb
mov
push
lods
inc
stos
push
sub
fiadd
jo
rol
and
dec
into
xchg
sti
movs
xchg
or
push
cmp
xor
pop
sbb
and
sbb
lods
inc
scas
jge
push
test
cmps
fcom
sbb
mov
pop
aaa
loop
or
lds
in
mov
cmp
int
mov
(bad)
pop
fimul
jne
jle
inc
mov
(bad)
mov
and
sar
adc
lods
add
pop
aad
mov
out
xor
push
(bad)
popa
mov
mov
hlt
mov
jb
sbb
daa
mov
sbb
pop
test
pop
retf
or
in
jmp
iret
cmps
inc
shl
jne
imul
add
push
pushf
push
fadd
mov
pop
fistp
add
xor
mov
jns
dec
test
sbb
sbb
adc
sbb
push
cwde
aaa
test
xchg
test
cmp
mov
fimul
mov
imul
jo
retf
xor
ins
cmps
jb
sub
adc
stos
add
and
dec
or
jecxz
mov
jbe
data16
push
push
adc
ss
jae
dec
mov
test
xlat
sbb
hlt
add
cmp
pop
rcl
cmps
sub
cmp
in
daa
mov
jae
xor
movs
jae
out
jo
daa
push
enter
stos
dec
stos
jo
je
icebp
xor
popa
add
sub
xor
enter
sub
xor
fbld
(bad)
cmp
jl
xor
sbb
and
(bad)
cmp
outs
mov
std
push
jo
out
jmp
xor
sbb
jno
inc
mov
jo
out
mov
dec
test
mov
jmp
cmps
push
sbb
xor
sub
data16
adc
aaa
repz
bound
adc
sub
ficom
outs
out
adc
push
jmp
jno
inc
mov
sbb
gs
mov
or
or
mov
fld
call
jle
xor
idiv
in
or
sub
push
fwait
xor
icebp
sub
cmp
shl
inc
jecxz
add
(bad)
ds
push
aam
sahf
bound
sbb
push
rcl
cdq
ja
fisubr
fcom
sbb
push
rcr
call
xchg
push
xchg
arpl
pop
sub
pop
repz
jmp
dec
cmps
xor
pop
xor
add
and
push
mov
or
imul
shl
xchg
sub
shl
fdiv
loope
lahf
push
cmp
fwait
and
ret
fs
pushf
dec
retf
add
push
fs
push
leave
mulps
test
push
out
jo
rcl
mov
pop
div
push
repnz
sub
or
or
mov
shr
or
sub
lea
sub
sbb
rcl
movs
pop
sti
xor
inc
rcl
add
es
and
adc
pop
lock
and
sub
add
lahf
adc
movs
and
push
and
lock
mov
inc
xchg
xor
dec
les
or
cs
dec
lds
out
out
and
pop
movs
jnp
dec
test
in
fs
push
out
add
lea
stos
iret
clc
les
add
push
mov
retf
scas
cmps
add
xor
jl
lea
(bad)
int3
push
sub
pop
inc
addr16
xchg
in
clc
(bad)
sahf
xlat
inc
adc
sub
lods
mov
cdq
fistp
dec
add
and
mov
retf
mov
ret
fistp
push
pop
cmp
leave
mov
mov
jb
jo
sub
xchg
xchg
leave
xchg
mov
ror
sbb
inc
sbb
jmp
int3
ret
xor
cmp
in
call
pop
arpl
push
(bad)
mov
mov
in
fcmovbe
leave
cmp
adc
mov
(bad)
mov
dec
and
mov
ret
fidivr
xchg
add
popa
imul
in
loop
call
add
dec
fnstcw
cdq
in
lock
aas
movs
mov
in
call
and
dec
inc
js
mov
ret
cld
leave
movs
pop
sub
xor
call
mov
jle
dec
fistp
call
outs
and
fimul
cli
cmc
mov
ss
lods
ins
mov
sub
lahf
xor
sar
and
mov
jg
aad
mov
sar
(bad)
sahf
outs
cwde
setl
pop
sub
cmps
push
in
mov
(bad)
jp
sbb
xor
cmp
or
cwde
sub
xchg
cmps
ja
(bad)
aaa
mov
sub
stc
jbe
das
mov
xchg
add
and
lea
test
(bad)
or
cmp
mov
pusha
mov
aas
repz
nop
sbb
sub
retf
jbe
cmp
pushf
or
mov
ds
and
faddp
ins
push
mov
in
ror
mov
hlt
sub
fld
add
and
and
fmul
and
out
imul
push
into
in
and
jnp
mov
test
fwait
movs
xabort
lea
es
push
into
adc
mov
xchg
dec
in
cmp
xchg
sbb
icebp
sti
vmovhps
cmp
retf
(bad)
push
movs
jmp
and
xor
and
ja
aaa
ds
mul
inc
mov
lods
or
scas
sbb
movs
es
xor
ja
xchg
add
sub
push
inc
fisttp
dec
inc
retf
mov
sub
loopne
inc
mov
xchg
lods
inc
jmp
dec
rcr
call
mov
sahf
adc
or
and
inc
ret
pop
movs
push
int3
outs
jns
jmp
cmp
cmp
shr
ins
or
dec
pop
dec
jmp
sahf
sub
sbb
outs
push
or
cdq
pop
in
jge
pop
in
xor
pop
clc
sub
sub
push
in
push
(bad)
pop
or
aas
enter
inc
sahf
jp
arpl
es
ins
add
imul
mov
push
aam
das
pop
sub
jle
int
sub
pushf
push
dec
fdivr
js
call
inc
mov
inc
hlt
js
jae
sar
sub
fnsave
xor
lods
lods
push
or
out
in
xchg
lods
add
cmp
outs
cli
cmp
jmp
idiv
sbb
loop
cmc
fsubr
test
cmp
jmp
lahf
cmp
xor
cli
sub
and
add
sbb
scas
in
aas
es
imul
push
xchg
sbb
enter
mov
jmp
imul
int3
pop
jns
(bad)
mov
pop
pushf
lea
mov
inc
or
mov
pop
mov
in
pusha
ins
scas
push
mov
sbb
fistp
arpl
stc
push
mov
das
or
mov
scas
out
jmp
pop
jno
mov
cmc
ss
cli
cld
lahf
dec
pusha
jl
cwde
jl
leave
aad
fimul
add
pop
leave
call
pop
jp
lea
inc
xchg
ins
fisubr
clc
pushf
xchg
jns
jb
lods
mov
jmp
jmp
push
sbb
fild
(bad)
pop
sbb
cmp
pop
(bad)
fcmovnu
ins
outs
fisubr
ins
mov
fnstsw
pop
(bad)
ds
(bad)
mov
fcmovu
sahf
mov
(bad)
pop
cmp
push
es
pop
xchg
xchg
jmp
shr
nop
cmp
ins
xchg
lea
sbb
xchg
push
mov
jg
loop
dec
sbb
jge
scas
call
retf
(bad)
cs
pop
fidivr
mov
ins
pop
out
adc
scas
mov
enter
outs
add
dec
fwait
cs
mov
jmp
pop
enter
lods
mov
jb
mov
push
jle
cs
or
add
dec
fiadd
(bad)
mov
rol
ins
jnp
sub
jae
cdq
mov
test
in
lods
and
sar
fld
inc
adc
sbb
inc
mov
inc
ins
inc
push
or
xor
nop
aad
ins
and
jb
xchg
mov
cmp
inc
xchg
gs
sbb
mov
mov
outs
sub
push
cmp
ins
xchg
xchg
out
ins
ds
mov
adc
jecxz
fimul
add
or
out
push
js
scas
lods
sub
or
add
and
cmp
push
fst
mov
(bad)
cmps
pop
jp
sub
lods
imul
cmp
cdq
xchg
mov
dec
repz
ja
push
repz
pusha
adc
lea
and
or
adc
add
ret
mov
adc
sbb
rol
mov
arpl
cmp
outs
shr
inc
arpl
daa
leave
out
adc
fcom
adc
and
jecxz
lods
cmps
sbb
js
jnp
cli
mov
add
outs
in
jmp
cmp
nop
sbb
mov
inc
sbb
lock
ins
cmps
sub
or
call
xchg
jb
adc
retf
xchg
sub
xchg
dec
call
es
push
xchg
push
nop
mov
ficomp
or
pop
mov
push
sbb
fmul
dec
mov
pushf
popa
int3
and
es
pop
je
nop
xchg
xchg
push
jp
mov
mov
mov
pop
stos
rcr
mov
add
push
test
sub
jae
nop
mov
jl
stc
call
push
pop
ret
cmp
mov
jl
ins
test
retf
jnp
data16
outs
hlt
ficomp
or
scas
push
mov
idiv
inc
and
je
xchg
and
add
push
nop
mov
ret
or
ja
mov
pop
pop
xchg
push
ficom
ret
ret
not
adc
pop
hlt
popa
mov
add
xchg
push
retf
adc
add
aam
popa
xchg
push
rol
mov
ret
mov
and
xor
rcl
bound
mov
shr
cmps
repz
lock
xchg
or
mov
push
popa
cmps
push
ret
fiadd
mul
bound
loop
shl
mov
(bad)
xor
xchg
pop
popf
ins
cmps
aam
push
mov
hlt
int3
(bad)
jb
in
ret
ficom
out
xor
add
(bad)
xchg
inc
ror
ss
xor
movs
jg
jno
inc
cmp
icebp
inc
scas
dec
(bad)
or
test
jle
fcom
adc
std
in
xor
add
shl
xchg
push
pop
ret
inc
add
lock
sub
pop
shl
mov
mov
jno
test
out
sbb
hlt
ss
dec
icebp
cmp
sbb
(bad)
arpl
fst
add
int3
inc
imul
jmp
jns
mov
xor
add
sbb
(bad)
mul
push
adc
cmp
fcomp
bound
xor
push
and
ror
pop
mov
shl
mov
adc
adc
cmc
sbb
and
push
cld
dec
fcomp
adc
push
push
loop
xchg
pop
stos
add
adc
mov
(bad)
mov
xchg
hlt
inc
pop
cmp
pop
xchg
and
fild
dec
shl
mov
ss
xor
pop
ds
jae
jecxz
loope
mov
aam
out
cmp
ss
ss
add
daa
sbb
icebp
push
cmp
xchg
ss
or
aad
sbb
pop
adc
xchg
push
mov
ss
retf
into
icebp
sub
push
xchg
(bad)
fpatan
je
addr16
out
cmps
xor
jno
push
add
jns
cs
ficom
out
ss
test
push
int3
adc
cmps
in
ss
mov
xor
pop
or
xchg
cmps
imul
loop
mov
xchg
ins
stc
jle
adc
sbb
pop
xchg
or
popa
jb
js
xor
push
jnp
frstor
mov
jne
or
adc
push
test
cmp
mov
xchg
adc
mov
adc
xor
mov
push
inc
sbb
std
jb
lods
cld
xor
dec
inc
pop
jo
adc
int
and
rep
pusha
sub
xchg
mov
xchg
jge
cmps
into
std
inc
ins
add
(bad)
shl
add
and
ins
push
adc
fisub
jl
add
addr16
mov
cmc
push
adc
pop
mov
arpl
pop
mov
dec
add
in
and
adc
push
xor
mov
std
outs
xchg
and
arpl
mul
ins
pop
(bad)
jne
jns
movs
cmp
stos
aad
dec
into
adc
or
cmp
push
out
jl
inc
lea
stos
movs
push
adc
repz
dec
lea
ret
mov
shl
sub
idiv
rol
pop
inc
arpl
inc
xchg
in
je
sub
lods
cmp
je
pop
jae
mov
jns
sbb
in
arpl
cwde
shr
lods
xor
mov
in
cwde
test
cmp
lods
or
stc
jle
mov
inc
adc
lods
cmp
(bad)
sub
ret
cmc
or
mov
sbb
dec
cmp
pusha
std
lods
sub
lods
pop
cmc
arpl
into
ret
js
or
push
ins
inc
adc
cmps
popf
out
dec
rol
and
ins
or
sar
mov
cmp
pop
imul
ins
pusha
arpl
aaa
sub
fucomip
jno
adc
(bad)
in
fsubr
dec
in
add
push
add
fcomp
aam
mov
int3
(bad)
lea
in
shr
and
add
sub
mov
add
cmc
in
push
jp
and
fwait
shr
mov
ins
xlat
inc
lsl
bound
test
shl
scas
xchg
pop
and
test
nop
div
pop
dec
shl
inc
sub
leave
mov
bsf
cwde
jmp
inc
ror
(bad)
cld
push
cmp
int
jge
jg
shr
mov
cmp
jb
and
jb
or
mov
xor
inc
inc
pop
fild
mov
jmp
mov
mov
jecxz
add
mov
je
scas
mov
dec
push
mov
repnz
or
fwait
sbb
mov
lea
mov
repnz
retf
push
bound
scas
repnz
stos
pop
jle
mov
cmp
inc
xchg
cmp
add
fld
inc
bound
sbb
imul
into
bnd
into
jb
sub
sti
push
cld
fwait
aam
push
scas
jb
dec
rcr
jo
jp
out
inc
mov
nop
xor
ins
push
mov
adc
fisubr
inc
mov
idiv
xchg
mov
and
jb
jo
lods
fwait
in
retf
cdq
mov
jb
ss
adc
push
cli
jno
cmps
aas
mov
pusha
cs
cmp
cwde
daa
xchg
and
jmp
loope
fst
test
cmp
push
iret
xchg
out
les
sti
das
or
dec
jno
push
rcl
or
pushf
loop
outs
inc
scas
sahf
arpl
shl
xor
xchg
cs
jge
call
mov
xor
or
cmp
jecxz
arpl
(bad)
jle
sahf
fist
xor
dec
xor
xor
rcl
mov
fs
add
lods
xor
jnp
mov
cmps
xor
xor
push
repnz
jae
xor
repnz
shl
fwait
cmp
imul
jno
dec
mov
xchg
pop
xor
cmc
cmp
pushf
jb
push
lods
fdivr
jp
xchg
mov
dec
arpl
mov
xchg
lahf
inc
inc
fucomi
push
jno
sub
je
gs
push
inc
xor
cmp
int
in
stc
(bad)
pop
lea
jb
jge
jne
add
xchg
gs
sahf
bound
jmp
sub
idiv
mov
loop
cmp
sahf
std
mov
mov
jne
jg
mov
mov
push
push
mov
sahf
mov
pushf
jo
cmps
xor
arpl
adc
bnd
mov
jbe
sub
adc
pop
pop
add
cld
jns
lea
push
fwait
jno
out
pop
mov
ret
jno
xchg
xor
jle
pushf
cli
inc
iret
or
mov
mov
(bad)
jmp
jae
nop
iret
repz
jae
mov
jns
mov
into
int3
pushf
xor
xor
js
repz
sub
js
cld
xor
adc
xor
nop
(bad)
jle
mov
outs
aas
fwait
xchg
dec
cdq
ins
and
sub
jg
pop
pop
int
push
popf
cld
nop
adc
jmp
scas
mov
push
mov
lods
mov
rcr
jmp
or
push
lds
addr16
jmp
push
inc
sub
pop
mov
pop
dec
outs
pusha
push
leave
fcomp
sub
sbb
(bad)
js
xchg
push
adc
das
retf
jecxz
push
and
mov
or
jp
mov
jne
imul
add
mov
mov
xchg
ret
jle
mov
mov
repnz
imul
repnz
dec
adc
sub
pop
push
push
movs
in
dec
or
pop
mov
outs
js
inc
retf
sti
xor
out
pop
mov
ficom
adc
push
sub
and
cmp
lods
pop
addr16
imul
push
pop
sbb
or
jmp
jns
xor
fimul
mov
call
xor
mov
fisub
in
xor
fsubr
sbb
xor
imul
jl
push
pushf
iret
fiadd
aad
retf
ins
(bad)
mov
mov
and
fidivr
fsubr
xchg
mov
cmps
retf
inc
in
jl
aaa
movs
pushf
retf
fcom
xchg
stos
mov
mov
xchg
jp
pop
in
jbe
sti
rcr
in
mov
enter
test
push
sub
sbb
cmp
fidivr
dec
out
lods
push
ins
inc
outs
mov
(bad)
stc
mov
jg
sbb
outs
retf
push
xor
shr
xchg
jg
push
lahf
push
mov
sahf
or
push
ins
imul
pop
retf
sahf
xchg
jmp
push
or
push
jae
inc
xor
jmp
inc
mov
call
in
pop
fs
cmps
mov
shl
pop
retf
inc
dec
inc
pop
arpl
test
das
mov
xor
mov
js
push
cdq
pop
inc
lock
test
pop
out
out
pop
dec
pop
(bad)
jns
pop
pusha
aas
mov
lods
cmps
lods
push
ror
sbb
into
push
add
adc
fmul
out
cmp
outs
pop
cdq
jge
sbb
jge
das
arpl
pop
or
add
sti
mov
push
int3
aad
fsubr
pop
test
push
xor
push
xchg
mov
jge
jle
cmp
mov
pop
add
adc
sub
mov
mov
lock
outs
fiadd
ja
jge
pop
call
(bad)
jle
mov
sbb
retf
out
pop
movs
pop
xchg
sbb
xchg
sub
(bad)
jle
pop
aam
test
mov
mov
cdq
or
push
pop
mov
test
inc
cmp
outs
mov
sub
mov
adc
add
jmp
add
jb
adc
push
adc
test
ins
popf
dec
ret
loopne
cmp
adc
jbe
sbb
idiv
fiadd
adc
pop
add
adc
adc
xchg
pop
xor
push
cmp
ror
mov
dec
add
jmp
dec
ret
mov
jae
sbb
ds
out
cmp
les
js
jne
daa
retf
push
and
adc
add
test
popf
cmp
add
xor
xchg
dec
out
xchg
adc
mov
je
movs
ins
adc
cmp
pop
dec
mov
mov
loop
sbb
sahf
xlat
or
jmp
dec
jp
jl
outs
jnp
adc
add
std
xchg
jp
mov
dec
inc
xor
xchg
jg
xor
ins
sbb
add
in
adc
jae
push
dec
adc
pop
pop
popf
adc
sbb
call
sub
sub
dec
fild
dec
and
daa
dec
idiv
push
std
mov
mov
jae
inc
aad
cmp
das
add
mov
mov
and
or
mov
dec
rcl
push
(bad)
ins
shr
mov
dec
lds
mov
(bad)
dec
rol
ror
dec
lods
lock
outs
dec
shr
and
mov
lock
cdq
and
jnp
stos
xchg
lods
(bad)
sbb
mov
das
fild
adc
mov
pop
cmp
mov
xchg
ja
and
mov
jo
rol
cmpps
loopne
dec
popa
pop
bnd
dec
inc
lods
cmp
or
sub
xor
dec
rcr
dec
mov
push
jp
enter
mov
or
movs
mov
mov
mov
mov
pop
rol
sbb
xchg
and
sub
and
cmp
(bad)
out
sahf
jae
arpl
dec
fmul
add
ror
dec
pop
add
and
movs
jg
nop
inc
fstp
add
mov
loopne
rcr
cmp
mov
rcr
lods
and
push
sub
mov
fnstsw
adc
xor
es
enter
mov
retf
adc
ficom
out
mov
sbb
fwait
in
in
adc
div
loopne
jp
in
push
cmp
(bad)
pop
add
xchg
adc
push
aaa
jmp
lods
loop
sbb
cmp
pop
aas
movs
ret
or
dec
xor
xor
into
pop
fcmovnb
idiv
xor
adc
sbb
mov
xor
jb
loop
push
in
jmp
in
leave
shl
mov
je
sbb
or
cmp
lods
adc
ret
cmp
xchg
mov
jmp
dec
adc
jmp
adc
add
out
push
aaa
and
repz
ds
inc
lds
xchg
fisttp
xor
ret
mov
push
xor
and
add
and
lods
movs
sub
and
xor
fwait
and
and
(bad)
neg
xchg
and
pop
iret
xor
hlt
add
jecxz
movs
and
add
fucom
and
mov
inc
ror
and
dec
(bad)
nop
cmc
ror
fmul
xchg
bound
or
mov
call
ins
rol
(bad)
jmp
pop
daa
in
sti
and
in
out
in
icebp
mov
std
popa
rol
and
adc
ret
pop
(bad)
jmp
bound
aad
mov
push
icebp
dec
sbb
jecxz
adc
arpl
adc
inc
xchg
inc
xor
rol
mov
xchg
les
and
in
jg
ins
(bad)
mov
adc
das
mul
add
lock
and
pop
inc
jbe
loope
push
xchg
leave
rol
ret
out
push
(bad)
pop
mov
or
dec
out
jns
js
jmp
ret
xchg
and
fiadd
icebp
stc
xor
xor
movs
add
xor
shl
lahf
stc
xchg
les
ins
inc
xor
push
xchg
add
inc
fsubr
imul
fimul
in
fdivr
dec
xor
test
adc
pop
and
add
and
and
lock
jmp
inc
not
or
es
(bad)
adc
pop
stos
inc
mov
push
pusha
mov
push
mov
jmp
sub
fild
pusha
xchg
fldenv
xchg
retf
mov
inc
mov
and
xchg
push
pop
push
xchg
rcl
icebp
xor
cmc
or
add
jno
xor
loopne
shl
pusha
out
shr
loop
mov
xchg
ret
rol
(bad)
in
mov
add
pop
or
pop
(bad)
fnsave
lods
das
pop
and
mov
sub
mov
arpl
sub
xor
mov
sbb
cmp
dec
push
pop
xor
cmps
dec
mov
mov
xor
cmp
or
scas
xor
mov
imul
sbb
mov
popa
pop
adc
popf
adc
shl
or
pop
push
pusha
das
mov
jns
ds
pop
adc
or
loope
xchg
lods
cs
inc
jmp
dec
rcl
imul
dec
inc
jge
jl
pop
xchg
jge
fwait
pop
out
xor
sbb
pop
aad
jno
adc
and
int
pop
jp
jle
ins
push
or
xor
dec
mov
int3
sub
fild
inc
xor
pop
adc
sub
adc
pop
pusha
or
xor
xlat
push
aaa
add
adc
and
ins
jb
fst
mov
sbb
aaa
cmp
xor
mov
aaa
js
pop
dec
jp
dec
aaa
push
pop
rcr
pop
adc
gs
jo
jle
mov
psrad
mov
dec
mov
popa
in
ins
das
adc
dec
fcmovnb
mov
sahf
bound
add
pop
xor
arpl
ss
adc
xor
stos
frstor
push
stc
scas
xchg
int3
les
sbb
push
std
jmp
and
xchg
mov
nop
xor
sahf
sbb
inc
xchg
add
dec
add
xor
push
adc
(bad)
add
pop
test
lea
enter
(bad)
mov
xor
cmp
in
jle
nop
popa
jl
push
jecxz
cmp
in
jae
pop
push
das
dec
rol
pop
sub
aad
js
repz
mov
outs
clc
enter
add
lea
and
and
add
jne
movs
push
add
shl
xchg
xor
jle
mov
aam
test
jbe
xchg
hlt
jnp
(bad)
pop
movs
mov
mov
adc
jecxz
add
and
icebp
je
test
mov
ja
inc
sar
add
iret
les
jecxz
push
mov
ins
or
retf
inc
ror
dec
and
out
xor
mov
popf
fild
pushf
mov
dec
icebp
sbb
sub
and
mov
shl
enter
retf
(bad)
repnz
in
icebp
je
push
sub
mov
dec
pop
sbb
out
data16
pop
mov
add
or
test
pop
jne
push
inc
jmp
shl
mov
sub
test
leave
ret
xchg
lock
inc
sar
jecxz
outs
loope
call
scas
pop
xor
dec
sub
stos
(bad)
icebp
ja
popa
pop
inc
loopne
sub
dec
ret
fcomp
push
imul
add
mov
js
xor
xchg
pop
adc
outs
push
push
ret
sar
and
inc
push
and
vmwrite
jl
js
cld
sahf
retf
pop
je
pop
cdq
lods
cmp
mov
jae
stos
es
jno
mov
enter
push
addr16
int3
cli
jg
and
cs
popa
xchg
cmp
push
ret
inc
pop
imul
pusha
and
js
and
add
dec
add
fist
das
fs
xchg
or
addr16
push
and
jge
pop
mov
xor
(bad)
jbe
rcr
sahf
xor
mov
cmp
lahf
xor
adc
int
or
sbb
mov
inc
test
jmp
push
mov
in
dec
dec
add
xchg
int
out
in
ror
int
push
mov
adc
nop
dec
in
inc
inc
cdq
cmp
pop
xchg
aam
in
dec
enter
mov
test
inc
scas
mov
pop
xor
fs
xor
xor
xor
(bad)
shr
into
cmp
out
pop
cmp
jo
add
loop
test
in
push
xor
repz
inc
or
jmp
jmp
dec
and
adc
fwait
stos
dec
jno
jle
push
sar
aas
pop
sub
dec
cmp
cs
fild
inc
adc
sbb
nop
fist
popa
jns
pop
sar
loope
out
xchg
jg
shl
sub
out
fist
dec
ficom
or
xor
jbe
inc
inc
in
push
(bad)
xor
sbb
xor
sub
push
add
pop
nop
mov
or
xchg
rcr
clc
mov
mov
pop
mov
jp
inc
jg
ins
outs
outs
and
jnp
xor
dec
out
xchg
mov
loope
sbb
or
sar
imul
(bad)
das
xor
(bad)
sbb
lods
mov
ret
icebp
sbb
scas
mov
ins
adc
push
sub
or
ins
mov
loope
ja
sbb
xchg
outs
push
jno
inc
mov
cs
stc
or
shl
push
xor
mov
std
(bad)
popa
xor
lahf
jecxz
sbb
xor
sbb
loopne
jge
lea
mov
add
pop
pop
int
xor
xchg
push
enter
in
(bad)
sar
dec
mov
push
test
xchg
pop
scas
ins
jns
fistp
rcr
ret
mov
dec
jo
sub
push
and
clc
mov
mov
cdq
int3
outs
add
lahf
xor
sub
pusha
addr16
xchg
loope
lock
into
mov
push
nop
into
dec
daa
lods
xchg
imul
mov
sbb
movs
mov
xor
cwde
jge
jg
pusha
into
pop
mov
or
dec
pop
aas
pop
cwde
sub
sbb
outs
jp
jne
popa
(bad)
sub
cdq
cli
pop
pop
mov
icebp
mov
cmp
lods
cs
mov
sub
mov
xor
fidivr
pop
cmp
sbb
out
xor
xchg
mov
add
adc
push
push
pop
add
cmp
mov
adc
stos
test
and
ins
pop
dec
pusha
jle
mov
iret
dec
in
cmp
xor
(bad)
test
(bad)
jmp
lock
jmp
mov
out
add
or
ins
ret
mov
inc
loopne
icebp
test
mov
lods
cld
(bad)
xor
leave
imul
pop
mov
cs
inc
cli
(bad)
jmp
push
pop
test
adc
ss
inc
out
gs
rcl
mov
mov
push
(bad)
jg
mov
jae
mov
add
push
cpuid
ds
mov
mov
mov
out
retf
dec
mov
jae
cmp
mov
mov
add
sahf
add
loope
inc
shl
pop
lock
rol
push
mov
movs
mov
out
add
dec
and
and
jo
adc
aam
leave
xchg
repnz
mov
xlat
fst
push
mov
test
mov
pop
test
xchg
or
sbb
dec
aad
or
mov
retf
inc
aas
cmp
lods
or
adc
inc
sahf
pop
inc
add
cmps
jno
and
xchg
out
xchg
call
and
mov
mov
idiv
lock
pusha
fsubp
jg
cmps
test
add
pop
mov
gs
jl
mov
cmp
hlt
scas
mov
(bad)
lock
fdiv
mov
es
sub
mov
sbb
pop
jmp
push
shl
mov
test
sbb
lods
or
mov
sbb
xchg
jmp
ss
jmp
jb
xchg
xor
mov
outs
inc
inc
mov
mov
add
mov
xchg
push
jnp
pop
and
imul
es
mov
mov
mov
enter
stos
mov
mov
dec
sar
fcom
inc
adc
inc
add
xor
push
push
push
call
add
pop
pop
ret
pop
xor
pop
ret
mov
mov
sub
call
cmp
je
lea
push
push
call
add
test
jne
fldz
add
ret
fld
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
call
cmp
je
lea
push
push
call
add
test
jne
add
ret
fld
fstp
fld
fistp
mov
add
ret
mov
mov
call
mov
test
je
cmp
jne
cmp
je
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
call
cmp
je
push
push
call
add
test
jne
mov
test
je
mov
pop
xor
pop
ret
mov
mov
cmp
jb
push
call
add
mov
mov
call
mov
test
je
mov
mov
mov
mov
pop
add
pop
ret
int3
int3
mov
push
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
mov
mov
pop
pop
ret
mov
mov
pop
pop
ret
mov
push
call
add
pop
pop
ret
push
push
call
add
test
jne
pop
xor
pop
ret
mov
jae
inc
add
inc
add
inc
add
dec
inc
add
int3
int3
int3
mov
mov
call
cmp
jne
mov
cmp
je
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
call
mov
sub
je
sub
je
xor
ret
mov
add
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
call
cmp
je
xor
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
call
mov
add
cmp
ja
jmp
mov
pop
pop
ret
mov
mov
call
mov
sub
je
sub
jne
mov
pop
add
pop
ret
pop
xor
pop
ret
lea
dec
dec
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
int3
int3
int3
mov
mov
mov
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
fld
mov
fstp
mov
add
ret
int3
int3
int3
int3
int3
int3
int3
mov
fild
mov
mov
fstp
add
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
push
jb
push
call
add
mov
mov
mov
push
push
push
call
add
mov
mov
add
pop
pop
ret
push
mov
test
jne
mov
mov
mov
add
pop
ret
mov
lea
mov
mov
add
test
jne
push
sub
push
mov
mov
mov
mov
cmp
push
jb
push
call
add
mov
push
push
push
call
add
mov
mov
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
jb
push
call
add
mov
mov
push
push
push
call
add
pop
ret
int3
int3
push
mov
mov
mov
cmp
jb
push
call
add
mov
lea
push
push
push
call
add
pop
ret
int3
int3
push
mov
mov
mov
cmp
push
jb
push
call
add
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
shl
sub
add
test
je
push
mov
push
lea
sub
mov
mov
sub
add
mov
add
mov
mov
sub
test
mov
mov
mov
jne
pop
pop
mov
mov
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
xor
cmp
mov
setne
mov
add
ret
int3
int3
mov
mov
mov
mov
mov
add
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
add
xor
cmp
sete
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
call
mov
add
push
push
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
push
mov
push
mov
call
mov
mov
mov
lea
mov
add
test
jne
sub
push
push
push
call
mov
mov
push
lea
push
push
push
mov
call
add
add
pop
pop
pop
add
ret
int3
int3
int3
mov
push
mov
mov
call
mov
mov
sub
push
push
call
mov
mov
sub
mov
mov
mov
mov
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
call
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
add
mov
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
push
jb
push
call
add
mov
mov
mov
push
push
push
call
add
mov
mov
add
pop
pop
ret
mov
push
mov
mov
call
mov
mov
sub
je
sub
je
mov
mov
jmp
mov
mov
jmp
mov
mov
test
jne
xor
pop
ret
mov
mov
mov
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
call
mov
sub
je
sub
je
sub
je
mov
mov
add
pop
ret
mov
mov
mov
add
mov
mov
mov
mov
mov
add
pop
ret
mov
mov
mov
mov
mov
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
call
mov
lea
push
add
push
push
push
call
add
add
pop
ret
int3
int3
int3
int3
int3
mov
sub
push
push
mov
push
mov
call
mov
mov
mov
lea
mov
add
test
jne
sub
push
push
push
call
mov
mov
sub
push
lea
push
push
push
mov
call
add
add
pop
pop
pop
add
ret
mov
push
push
mov
push
mov
call
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
add
cmp
jl
mov
test
je
mov
test
je
push
push
call
add
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
mov
mov
call
mov
mov
mov
mov
push
push
push
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
add
cmp
jl
mov
test
je
mov
test
je
push
push
call
add
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
push
push
mov
mov
call
mov
cmp
jne
xor
jmp
mov
mov
mov
sub
je
sub
je
mov
mov
add
pop
mov
pop
ret
test
mov
mov
je
test
je
mov
test
je
push
push
push
call
add
add
pop
mov
pop
ret
test
mov
mov
je
test
je
mov
test
je
push
push
call
add
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
mov
sub
je
sub
je
sub
je
xor
add
mov
pop
pop
ret
mov
mov
mov
add
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
test
je
mov
test
je
push
push
push
call
add
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
push
mov
add
shl
push
sub
push
push
call
add
cmp
jne
mov
mov
cmp
jb
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
mov
sub
test
push
mov
jne
xor
jmp
mov
call
sub
mov
mov
add
shl
mov
mov
push
mov
sub
mov
sub
push
push
lea
push
push
push
mov
call
add
cmp
pop
jne
mov
mov
cmp
jb
mov
pop
add
ret
int3
sub
push
push
mov
test
jne
mov
mov
mov
mov
push
push
lea
push
push
call
push
lea
push
push
call
add
pop
pop
add
ret
mov
mov
sub
cmp
jne
mov
cmp
jne
mov
mov
push
push
mov
push
push
push
call
add
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
movzx
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
xor
cmp
ja
jmp
mov
pop
mov
pop
pop
ret
mov
mov
mov
pop
pop
pop
ret
push
call
add
mov
pop
pop
pop
ret
mov
shr
mov
pop
pop
pop
ret
mov
and
mov
pop
pop
pop
ret
mov
mov
shl
cmp
ja
mov
sub
mov
jmp
mov
cmp
ja
push
call
add
cmp
je
mov
cmp
jbe
mov
pop
pop
pop
ret
mov
mov
pop
pop
pop
ret
mov
mov
mov
pop
mov
pop
pop
ret
mov
mov
mov
pop
mov
pop
pop
ret
or
mov
pop
pop
pop
ret
nop
pusha
push
inc
add
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
add
xor
ret
mov
push
mov
mov
call
mov
mov
sub
push
push
push
call
add
test
je
add
pop
ret
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
jl
mov
mov
mov
cmp
jb
push
call
add
mov
sub
sar
sub
push
push
push
call
shl
add
mov
sub
add
pop
pop
ret
test
jne
mov
mov
push
push
push
call
add
mov
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
jb
push
call
add
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
push
push
push
call
mov
mov
add
mov
add
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
call
cmp
je
xor
pop
ret
mov
cmp
push
je
mov
cmp
jl
movzx
cmp
jg
shl
lea
mov
jmp
mov
cmp
mov
jl
cmp
jg
mov
mov
mov
mov
add
test
je
mov
mov
mov
mov
mov
mov
mov
add
pop
pop
ret
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
call
cmp
je
xor
pop
ret
mov
cmp
mov
push
je
cmp
jl
movzx
cmp
jg
shl
lea
mov
jmp
cmp
mov
jl
cmp
jg
mov
mov
mov
mov
add
test
je
add
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
cmp
pop
jl
mov
test
je
mov
test
je
push
push
push
call
add
mov
pop
pop
ret
pop
xor
pop
ret
int3
int3
mov
cmp
jne
push
mov
cmp
pop
jne
cmp
jne
mov
mov
mov
mov
mov
sub
sar
sub
jns
or
ret
mov
test
je
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
test
jne
xor
xor
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
movzx
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
mov
mov
jle
push
mov
push
cmp
jbe
mov
mov
sub
cmp
jne
sub
sub
test
jg
pop
pop
test
jne
mov
cmp
jbe
sub
mov
mov
imul
sar
mov
shr
add
mov
mov
mov
mov
ret
test
jge
mov
mov
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
mov
cmp
jne
mov
cmp
jne
mov
test
je
cmp
jne
mov
mov
mov
mov
mov
sub
sar
sub
push
push
push
call
add
test
jne
cmp
jne
mov
jmp
mov
sub
sar
cmp
jl
test
jle
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
mov
mov
push
push
lea
push
mov
lea
call
mov
test
je
mov
shl
lea
push
push
call
add
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
mov
mov
push
lea
push
mov
lea
call
test
je
mov
mov
mov
sub
shl
lea
mov
mov
mov
mov
mov
add
pop
pop
pop
ret
int3
int3
int3
int3
cmp
je
or
mov
mov
mov
mov
push
mov
push
add
push
call
add
ret
mov
mov
add
mov
mov
mov
mov
cmp
mov
mov
mov
mov
je
mov
mov
mov
push
push
add
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
xor
cmp
je
cmp
jne
push
push
push
push
call
mov
mov
mov
add
cmp
mov
jle
jmp
lea
mov
mov
push
push
push
call
mov
mov
mov
add
add
cmp
jl
mov
mov
mov
pop
jmp
mov
mov
mov
sub
mov
cmp
jg
push
push
call
add
add
pop
pop
ret
int3
mov
cmp
ja
mov
push
push
movzx
movzx
and
add
movzx
pop
cmp
pop
jg
test
je
test
je
movzx
cmp
jg
mov
mov
cmp
je
test
jne
test
jle
mov
mov
and
cmp
jne
mov
ret
xor
ret
int3
int3
mov
mov
and
cmp
jl
cmp
jle
cmp
jne
and
neg
sbb
add
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
je
sub
je
sub
jne
test
je
and
cmp
setl
jmp
movzx
xor
cmp
setl
mov
test
jne
ret
movzx
cmp
jl
xor
ret
test
jne
mov
ret
int3
int3
int3
int3
sub
push
mov
mov
mov
add
mov
mov
call
test
jne
pop
add
ret
cmp
push
push
push
mov
jle
mov
mov
mov
mov
mov
mov
mov
shr
and
xor
and
cmp
mov
mov
jge
mov
movzx
cmp
jge
mov
movzx
mov
and
sub
je
sub
je
sub
jne
shr
sub
and
cmp
mov
jne
mov
lea
test
jl
cmp
jge
test
jle
xor
test
jle
mov
lea
mov
mov
and
cmp
jne
test
jne
add
sub
cmp
jl
mov
test
jne
mov
mov
mov
test
je
cmp
jne
mov
test
jns
lea
cmp
jge
mov
mov
and
cmp
je
pop
pop
pop
xor
pop
add
ret
shr
and
cmp
mov
jne
mov
cmp
jge
jmp
mov
mov
shr
and
mov
mov
shr
shr
and
mov
call
test
je
mov
mov
mov
shr
and
call
test
je
jmp
mov
jmp
mov
add
cmp
ja
movzx
jmp
cmp
jne
lea
cmp
jge
mov
mov
and
cmp
jne
test
je
jmp
mov
cmp
jg
cmp
jg
mov
jmp
movzx
cmp
jmp
mov
shl
cmp
jne
jmp
movzx
add
cmp
jge
cmp
jne
mov
jmp
cmp
jmp
mov
cmp
jl
lea
movzx
cmp
jge
add
cmp
jl
mov
jmp
movzx
add
cmp
jge
cmp
lea
je
cmp
jge
cmp
jg
add
mov
jmp
test
je
movzx
lea
cmp
jge
mov
sub
cmp
jne
mov
push
call
add
test
je
jmp
test
je
lea
movzx
cmp
jge
cmp
jl
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
add
int3
int3
int3
push
mov
cmp
push
mov
je
mov
movzx
push
mov
add
cmp
push
jle
cmp
jl
mov
push
push
call
add
mov
mov
add
mov
lea
mov
call
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
mov
mov
mov
call
cmp
jne
mov
push
lea
push
push
call
add
mov
mov
cmp
je
or
mov
mov
call
test
jne
mov
mov
call
test
je
cmp
jne
mov
jmp
push
call
add
mov
mov
mov
mov
mov
mov
shl
mov
push
or
push
call
mov
mov
mov
mov
mov
push
or
push
call
mov
push
lea
mov
mov
push
push
mov
call
add
mov
push
mov
push
mov
mov
push
push
call
mov
push
mov
push
push
push
call
add
mov
pop
pop
or
pop
mov
mov
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
push
push
call
add
cmp
jne
mov
test
jne
movzx
cmp
jl
add
mov
mov
movzx
add
cmp
jle
cmp
jl
mov
push
push
call
add
mov
mov
add
mov
add
push
mov
mov
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
push
call
add
cmp
jne
mov
cmp
mov
je
movzx
cmp
jl
push
mov
mov
call
mov
add
pop
pop
ret
push
push
call
mov
add
pop
pop
ret
int3
mov
mov
cmp
mov
je
jmp
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
mov
cmp
push
push
je
call
jmp
call
mov
lea
add
cmp
ja
jmp
cmp
jg
cmp
jne
mov
call
mov
mov
pop
or
pop
add
ret
cmp
jne
fld
sub
fstp
push
call
add
mov
mov
pop
or
pop
add
ret
xor
cmp
sete
lea
push
mov
mov
mov
call
add
mov
mov
pop
or
pop
add
ret
mov
cmp
jle
push
push
call
add
pop
pop
add
ret
retf
popf
inc
add
popf
inc
add
popf
inc
add
inc
add
popf
inc
add
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
mov
add
cmp
ja
jmp
mov
cmp
mov
jne
mov
test
jne
movzx
cmp
jl
add
mov
push
call
add
pop
pop
pop
ret
push
push
call
mov
mov
mov
shl
or
shl
push
or
push
call
add
jmp
push
push
call
mov
mov
mov
shl
or
shl
push
or
push
call
add
jmp
push
push
call
mov
push
mov
push
push
push
push
call
add
cmp
jne
mov
test
jne
movzx
cmp
jl
add
pop
pop
pop
ret
lea
mov
inc
add
sahf
inc
add
lahf
inc
add
lahf
inc
add
push
mov
push
mov
push
push
call
add
cmp
jne
mov
test
jne
movzx
cmp
jl
add
mov
mov
movzx
lea
cmp
jle
cmp
jl
mov
push
push
call
add
mov
mov
mov
add
push
push
call
mov
mov
mov
shl
or
shl
or
shl
push
or
push
call
add
cmp
jne
mov
test
jne
movzx
cmp
jl
add
mov
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
cmp
jne
mov
mov
mov
mov
mov
and
cmp
jne
add
xor
test
sete
shr
mov
push
push
push
xor
call
add
ret
push
mov
call
add
cmp
jne
mov
test
jne
movzx
cmp
jl
add
mov
push
push
push
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
push
call
mov
add
add
cmp
ja
movzx
jmp
or
jmp
push
call
add
jmp
mov
mov
call
mov
jmp
push
xor
call
pop
push
lea
push
push
call
mov
mov
push
lea
push
push
mov
call
add
mov
pop
pop
ret
nop
in
mov
inc
add
mov
inc
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
push
call
mov
add
add
cmp
ja
movzx
jmp
or
jmp
push
call
add
jmp
mov
jmp
push
mov
call
pop
push
lea
push
push
call
mov
mov
push
lea
push
push
mov
call
add
mov
pop
pop
ret
lea
mov
inc
add
mov
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
call
mov
add
add
cmp
ja
movzx
jmp
mov
jmp
mov
jmp
mov
mov
call
jmp
push
mov
call
add
cmp
jne
mov
test
jne
movzx
cmp
jl
add
mov
push
push
push
push
push
call
add
mov
mov
mov
mov
mov
push
mov
mov
call
mov
push
call
add
ret
and
inc
add
mov
inc
add
inc
add
add
add
add
add
add
add
dec
and
push
push
call
mov
add
mov
mov
ret
mov
push
mov
push
push
mov
mov
call
add
test
jne
mov
cmp
je
cmp
je
push
push
call
add
mov
jmp
xor
push
push
call
add
cmp
jle
cmp
jne
mov
test
jne
movzx
cmp
jl
add
cmp
jne
mov
test
jne
movzx
cmp
jl
add
jmp
or
cmp
jne
mov
test
jne
movzx
cmp
jl
add
cmp
jne
mov
test
jne
movzx
cmp
jl
add
mov
mov
shl
or
shl
or
push
push
mov
call
add
mov
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
call
push
push
mov
call
add
or
cmp
jne
mov
test
jne
movzx
cmp
jl
add
cmp
jne
mov
test
jne
movzx
cmp
jl
add
cmp
jne
cmp
je
mov
mov
mov
mov
mov
push
mov
push
push
mov
mov
call
add
pop
mov
mov
pop
ret
int3
sub
fldz
mov
or
fstp
sub
push
push
mov
mov
mov
je
sub
je
sub
jne
mov
mov
push
push
call
lea
push
push
call
add
pop
pop
add
ret
mov
push
mov
call
pop
pop
pop
add
ret
mov
cmp
mov
jne
cmp
jne
cmp
je
push
push
call
add
lea
push
push
call
add
pop
pop
add
ret
mov
cmp
ja
movzx
jmp
mov
mov
push
push
call
add
ret
mov
mov
jmp
mov
mov
push
push
call
add
ret
mov
cmp
jne
or
cmp
jne
cmp
je
mov
push
push
call
add
ret
mov
mov
push
push
call
add
ret
mov
dec
movs
inc
add
movs
inc
add
movs
inc
add
movs
inc
add
inc
add
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
ja
push
push
push
jmp
mov
mov
push
push
call
mov
mov
push
lea
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
pop
pop
pop
ret
mov
mov
push
push
call
mov
mov
push
lea
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
pop
pop
pop
ret
mov
mov
push
push
call
add
cmp
jne
mov
mov
mov
mov
and
cmp
jne
mov
mov
mov
call
mov
mov
mov
mov
lea
mov
shl
and
or
mov
mov
mov
pop
pop
mov
pop
ret
push
push
call
mov
push
push
call
add
pop
pop
pop
ret
mov
mov
mov
push
push
call
add
pop
pop
pop
ret
mov
mov
mov
push
push
call
add
pop
pop
pop
ret
mov
mov
mov
push
push
call
add
pop
pop
pop
ret
mov
mov
mov
push
push
call
add
pop
pop
pop
ret
mov
mov
mov
push
push
call
add
pop
pop
pop
ret
mov
mov
mov
push
push
call
add
pop
pop
pop
ret
push
push
jmp
push
push
jmp
push
push
jmp
push
jmp
push
push
jmp
push
push
mov
mov
mov
call
add
pop
pop
pop
ret
nop
fldenv
inc
add
cmps
inc
add
cmps
inc
add
inc
add
inc
add
inc
add
cmps
inc
add
cmps
inc
add
cmps
inc
add
movs
inc
add
cmps
inc
add
dec
sbb
shl
mov
mov
lea
mov
mov
mov
jmp
push
push
push
push
mov
call
add
ret
int3
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
push
call
push
call
add
mov
pop
pop
ret
int3
mov
test
jne
xor
ret
mov
sub
sar
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
xor
mov
mov
mul
seto
neg
or
push
call
add
mov
mov
jmp
mov
call
mov
mov
ret
mov
cmp
setne
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
xor
mov
mov
mul
seto
neg
or
push
call
add
mov
mov
jmp
mov
call
mov
mov
ret
mov
cmp
setne
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
jne
nop
mov
mov
cmp
je
pop
ret
int3
int3
int3
push
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
je
pop
ret
int3
int3
int3
int3
push
mov
mov
cmp
jb
push
call
mov
lea
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
mov
mov
cmp
jae
add
jmp
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
test
jbe
nop
sub
mov
jne
push
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
mov
mov
cmp
jae
add
jmp
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
test
jbe
nop
sub
mov
jne
push
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
call
pop
les
xlat
int
push
jno
loopne
lds
data16
mov
push
and
aad
mov
xor
addr16
std
xchg
scas
data16
push
add
aaa
mov
imul
add
aas
loope
addr16
push
add
in
xchg
jbe
daa
xchg
pop
shr
std
ds
lods
cmc
ficomp
int
add
test
es
shr
(bad)
call
sbb
mov
adc
adc
addr16
xchg
jno
adc
dec
cmp
inc
mov
ret
push
nop
push
ja
call
adc
pusha
inc
fs
sbb
shl
rcl
sbb
mov
inc
icebp
neg
aam
call
ss
xchg
cmps
sar
push
sbb
in
adc
jbe
bound
inc
cwde
pop
outs
inc
lar
jmp
lahf
out
mov
bound
xchg
out
inc
(bad)
imul
mov
push
stos
lea
jns
sub
mov
mov
adc
arpl
rcl
imul
out
je
lahf
sub
add
adc
test
push
ss
cmps
pop
in
loop
xchg
xor
xchg
retf
out
push
shl
inc
std
jbe
jae
neg
in
ja
inc
cmps
jae
jg
and
xlat
(bad)
idiv
(bad)
repnz
out
arpl
loop
imul
hlt
aaa
dec
inc
xchg
mov
fild
cmp
adc
pusha
div
mov
ja
ins
std
ror
xlat
sub
cmps
adc
out
test
dec
cmp
bound
dec
push
not
jle
jo
push
stc
fadd
pop
test
addr16
xchg
(bad)
mov
inc
push
sub
xchg
jmp
mov
jle
pop
ret
sbb
xlat
mov
sub
and
ret
dec
retf
fbld
mov
or
shr
inc
das
mov
pop
iret
mov
(bad)
or
aad
mov
adc
dec
pop
sbb
inc
iret
jne
je
fs
push
ja
jmp
iret
adc
out
test
call
xchg
cmps
gs
int
push
add
and
and
mov
and
inc
test
mov
jne
or
dec
push
push
or
scas
mov
test
pop
in
sbb
inc
psrlw
mov
adc
add
xchg
jbe
and
jnp
cli
test
int3
jle
lds
les
cmps
mul
stc
and
pop
pop
push
mov
lock
mov
xchg
out
mov
inc
push
call
mul
inc
push
jecxz
jbe
sahf
retf
lods
push
scas
mov
pop
inc
xchg
ficomp
or
or
jo
rcl
pusha
repnz
ficom
push
jae
and
lahf
pop
push
sbb
icebp
jp
inc
xor
bound
cmps
ds
push
pop
push
je
movs
push
push
retf
or
imul
jle
and
ss
xchg
out
xchg
xchg
rol
ja
(bad)
jo
and
xchg
xor
pop
repnz
test
xchg
retf
out
xchg
or
es
mov
bound
jecxz
push
push
xchg
and
mov
ret
jmp
xchg
ret
aaa
mov
(bad)
fist
jg
setae
xor
xchg
or
pop
mov
rcl
jae
in
adc
scas
and
mov
and
imul
aam
jb
jmp
and
(bad)
loopne
test
shl
sti
shr
in
not
stos
cmp
push
jg
xor
add
jge
push
xchg
ss
xchg
xchg
aam
ret
les
aam
aam
mov
adc
adc
add
movs
pop
loop
inc
and
loopne
repnz
push
(bad)
(bad)
jmp
pop
ins
addr16
dec
xchg
pop
inc
sub
mov
jg
jnp
loop
out
div
push
jns
xlat
(bad)
adc
or
stos
inc
xchg
fbld
mov
xchg
xchg
ds
imul
inc
push
ja
ss
push
pop
cmc
mov
ja
daa
call
stos
mov
inc
inc
jnp
hlt
cmp
xchg
add
inc
mov
lock
repnz
cdq
mov
sbb
in
idiv
fild
pop
jl
pop
sub
xor
cmp
leave
xlat
jo
jg
div
imul
push
arpl
xor
jbe
xor
fnop
mov
out
xor
xchg
add
jo
(bad)
es
mov
nop
and
test
dec
mov
jp
ins
pop
pop
and
lods
sbb
scas
jne
fwait
dec
push
adc
addr16
sti
repnz
xchg
mov
les
shr
pushf
pop
adc
mov
sbb
push
or
sub
ds
adc
out
mov
xchg
arpl
(bad)
es
mov
(bad)
adc
add
enter
mov
adc
inc
daa
sbb
push
push
data16
sti
jle
bound
test
aaa
xlat
push
inc
scas
adc
popa
push
mov
cmc
daa
inc
fnstcw
xchg
pop
add
mov
mov
mov
lods
jmp
ja
inc
inc
xchg
add
inc
push
cmp
das
jne
nop
push
jbe
outs
xchg
out
fdiv
inc
iret
xchg
jmp
sbb
rol
jns
lock
inc
hlt
aaa
jae
in
jns
pop
icebp
movs
cmc
or
les
pop
out
aaa
out
adc
push
push
sbb
xchg
xor
push
pop
arpl
out
dec
push
mov
add
cmp
push
into
and
arpl
add
out
ds
ret
dec
and
mov
int
out
cwde
sub
dec
adc
xchg
mov
and
pop
in
mov
int
mov
test
xor
cs
(bad)
out
xchg
push
mov
push
xchg
fcom
lahf
or
push
ret
(bad)
shl
icebp
inc
ret
out
out
cmps
sbb
and
sub
call
sbb
loopne
div
pusha
inc
out
jns
jo
mov
mov
cld
xchg
stos
and
xor
call
iret
push
in
mov
fbld
jle
inc
cmp
pop
and
cmc
ret
mov
fild
sahf
ret
bound
arpl
or
shl
xor
sbb
inc
xlat
sbb
scas
(bad)
(bad)
in
aaa
mov
jecxz
jle
xchg
jecxz
mov
xchg
bound
loop
jns
jle
xchg
mov
push
pop
pop
cmp
shl
es
cmp
rcr
faddp
mov
out
add
jge
push
xor
push
adc
stos
pop
dec
movs
or
and
mov
inc
es
push
ss
jb
inc
out
mov
push
rcl
adc
loopne
stos
(bad)
retf
add
jbe
aam
add
mov
pop
or
sbb
shl
idiv
stc
push
pop
retf
outs
(bad)
xchg
push
cmps
cmc
add
out
fxch
leave
sbb
outs
outs
pop
mov
mov
out
sahf
add
mul
xchg
inc
mov
mul
jno
or
das
retf
add
dec
call
movntq
and
cmps
daa
xor
addr16
push
inc
jae
xchg
dec
pop
cwde
adc
jmp
xchg
adc
mov
add
test
sbb
stos
and
pop
test
outs
(bad)
xchg
push
fild
cwde
add
lea
or
in
inc
(bad)
jge
(bad)
sti
adc
mov
cmp
cdq
(bad)
scas
(bad)
mov
xchg
inc
std
imul
mov
sbb
sub
lds
add
je
adc
jnp
pop
pusha
xor
cmc
(bad)
(bad)
mov
sub
mov
aaa
ret
in
fs
pmulhuw
stos
cmps
jbe
mov
inc
iret
out
sub
(bad)
div
aam
cmps
das
shl
in
aaa
fidiv
push
dec
dec
aaa
(bad)
outs
push
fcomip
pushf
push
retf
dec
pop
fisub
push
rcr
lock
scas
psadbw
mov
sub
pop
mov
ret
pop
inc
jo
loopne
out
bound
and
jne
sub
inc
mov
adc
test
in
(bad)
xchg
out
jle
push
pop
add
ins
mov
add
(bad)
xacquire
mov
(bad)
push
xchg
je
stc
je
ja
fwait
mov
jbe
jbe
imul
xor
les
cmc
push
stos
out
and
stos
dec
sub
push
push
inc
push
dec
cmp
bound
aaa
cmps
in
mov
mov
pop
xchg
or
fs
xor
lods
cs
jnp
pop
fwait
jmp
sub
out
not
cmc
pop
mov
mov
aaa
push
sub
mov
xor
scas
arpl
pop
xchg
dec
mov
jne
cmps
je
cmpxchg
pushf
in
and
inc
mov
or
jbe
mov
xchg
mov
dec
loop
and
push
loop
jo
not
scas
fwait
and
shl
(bad)
mov
push
mov
pop
push
aad
pusha
mov
inc
(bad)
test
pop
or
push
cmp
dec
mov
push
dec
dec
and
sub
sar
sub
xor
or
in
pop
and
add
and
cmp
sti
xchg
mov
mov
inc
pop
aaa
pop
lds
dec
test
add
pop
add
mov
jmp
jl
lods
mov
aaa
jns
inc
xchg
mov
movs
in
(bad)
neg
sub
outs
lea
sbb
ins
and
push
lahf
dec
sub
aam
cs
mov
rol
mov
inc
add
ss
add
daa
je
inc
test
pop
dec
cmp
pusha
cwde
mov
sub
and
stos
out
jbe
dec
xchg
dec
aaa
pop
add
pop
daa
out
sub
jmp
pop
xchg
stc
lods
arpl
push
mov
inc
push
ds
outs
or
idiv
repnz
adc
mov
out
inc
in
add
push
jns
dec
sar
jp
cmp
xor
mov
hlt
cmps
push
(bad)
sbb
lea
mov
jne
ret
adc
cmp
push
int3
or
mov
js
(bad)
xchg
nop
lahf
xchg
mov
(bad)
pop
adc
inc
(bad)
push
aas
mov
imul
mov
mov
add
cmps
sbb
fmul
outs
test
data16
add
movs
and
out
(bad)
in
loopne
mov
cmps
jb
or
out
ja
mov
cs
push
pop
not
jmp
xchg
daa
out
ins
out
rcl
push
fidiv
(bad)
aam
adc
cli
sbb
mov
xor
sbb
shl
ss
add
popf
push
icebp
test
cmp
(bad)
sub
sti
fist
fs
mov
mov
xor
pop
sub
ja
dec
out
pop
sub
xor
xchg
stc
mov
ds
xor
jmp
sub
aad
jbe
test
cmp
pop
sar
(bad)
repnz
xchg
inc
fisub
jmp
fidiv
xchg
xor
ret
retf
test
dec
xlat
xchg
ins
call
mov
movs
pop
dec
ins
adc
inc
sbb
loopne
lods
ja
(bad)
fwait
dec
mov
in
stc
push
jbe
(bad)
push
ss
mov
not
jle
stos
push
dec
sbb
add
cwde
data16
idiv
je
rcl
movs
sub
cli
inc
adc
dec
ins
outs
jnp
push
call
fdiv
(bad)
lea
in
fnsave
in
xor
or
jbe
(bad)
popa
(bad)
xlat
mov
mov
dec
sbb
into
ins
inc
daa
xchg
ins
jmp
jb
push
adc
mov
sbb
push
stos
dec
xor
push
and
and
pop
inc
and
push
cli
jl
aaa
test
push
xchg
jno
stc
call
call
cmp
movs
dec
adc
push
movs
and
mov
cmp
jbe
push
push
push
inc
ror
jno
inc
or
imul
add
(bad)
ror
lds
mov
mov
xchg
ds
sub
xchg
fwait
jmp
mov
(bad)
stc
out
and
and
xchg
popa
lahf
push
inc
(bad)
pushf
sahf
pop
aaa
push
out
sahf
les
sbb
mov
inc
pop
fs
addr16
xlat
shl
jecxz
data16
xchg
fcomi
ss
mov
out
dec
push
fldenv
mov
xchg
je
pop
xor
push
(bad)
fwait
retf
mov
pusha
push
jbe
jno
and
inc
jae
repz
or
in
les
aas
out
or
dec
aam
push
push
aaa
shl
dec
mov
xor
(bad)
push
out
or
dec
mov
(bad)
repz
mov
lock
adc
ds
ins
mov
dec
jmp
mov
push
aad
cmc
jo
cmps
mov
popa
push
xor
pop
in
mov
xchg
call
test
ds
cmps
pop
fwait
ja
inc
shl
mov
pusha
sbb
mov
push
arpl
adc
mov
(bad)
adc
adc
and
retf
outs
ins
mov
in
lods
jno
repz
jae
es
or
(bad)
(bad)
pop
das
xchg
test
cmp
outs
(bad)
jmp
adc
stc
mov
dec
sub
sbb
leave
xlat
mov
jle
cmp
loopne
xchg
fisub
bound
xor
out
std
push
std
ds
(bad)
mov
movs
jae
push
fwait
sbb
mov
leave
cmps
pop
pop
push
test
(bad)
cmp
test
jmp
inc
sub
push
ds
push
push
loope
arpl
dec
fldenv
jbe
outs
cld
retf
test
popa
lds
push
jbe
push
pop
popa
out
imul
inc
or
hlt
sbb
fldenv
pop
dec
or
push
test
inc
dec
js
jge
xchg
retf
ja
cmp
push
push
cmp
push
mov
out
ffreep
cwde
dec
mov
xchg
imul
xchg
cld
mov
out
xchg
movs
pop
sbb
or
mov
mov
lahf
inc
sub
les
aaa
in
add
(bad)
in
ficomp
stos
xchg
xor
out
mov
mov
xchg
mov
push
ss
xor
adc
ins
inc
(bad)
push
(bad)
xchg
push
ss
es
xor
mov
xchg
adc
inc
or
xor
repnz
loop
cs
sub
mov
adc
and
(bad)
pop
int
dec
xor
cmps
and
jno
push
leave
add
(bad)
idiv
std
rol
or
cmc
out
daa
add
addr16
adc
inc
jo
push
jmp
dec
ss
mov
shl
push
push
adc
imul
loope
sti
xchg
shr
mov
mov
cmp
ror
mov
div
out
call
sub
repz
jecxz
mov
jnp
pop
(bad)
rcr
pushf
es
inc
cmps
jbe
and
out
push
push
addr16
dec
or
ret
jmp
stos
and
in
clc
inc
pop
jg
push
xlat
ja
cld
sbb
push
push
sbb
adc
int3
sti
mov
push
mul
add
fstp
int3
xacquire
dec
cmps
ret
xor
cmp
mov
out
pop
cmp
adc
mov
inc
ss
cmpps
in
rcr
cmps
push
dec
xor
mul
inc
mov
out
xor
jg
xchg
sub
mul
stos
push
sbb
add
cmps
push
out
iret
mov
sub
daa
mov
test
push
and
xchg
rcr
xor
rcr
jae
and
cs
jmp
mov
shl
dec
retf
adc
xor
push
jle
lock
push
mov
out
or
pop
mov
ja
mov
in
stc
pop
sub
rcl
pop
jns
xor
movs
ss
or
add
dec
inc
dec
out
xchg
cwde
pushf
int3
xchg
stc
(bad)
add
jge
push
mov
mov
and
ins
iret
adc
pop
(bad)
jg
jmp
xlat
pop
es
lds
hlt
lds
lea
sti
aam
push
aam
push
dec
xchg
out
arpl
loope
pop
es
mov
push
lea
and
xchg
mov
mov
in
xchg
push
hlt
ret
bound
and
add
jle
jb
mov
cmc
call
mov
sub
sbb
xor
(bad)
popa
xchg
inc
cmp
and
sbb
mov
ins
xchg
(bad)
es
addr16
arpl
inc
add
or
pusha
data16
rcl
jb
xchg
(bad)
repz
(bad)
arpl
sbb
push
push
mov
mov
adc
in
nop
shr
lahf
call
xor
retf
sub
pop
out
mov
dec
fwait
jo
outs
adc
push
test
aam
mov
inc
jne
and
inc
push
sub
pop
dec
sub
div
mov
scas
adc
xchg
pop
xor
aas
sub
das
inc
mov
mov
scas
pop
shl
outs
(bad)
(bad)
ds
nop
jecxz
add
push
jecxz
fbstp
jg
xor
outs
mov
iret
mov
xor
mov
inc
jle
ins
test
mov
jb
gs
add
ret
jnp
mov
and
xchg
nop
jbe
or
push
ret
clc
xor
jno
and
out
fld
mov
test
cmps
popf
adc
sub
xor
push
sub
les
bound
out
std
sub
aaa
adc
xor
addr16
add
push
cmc
gs
scas
push
inc
sub
pusha
ins
cmc
mov
scas
pop
add
imul
mov
test
and
dec
daa
pusha
sbb
repz
jp
dec
dec
adc
int
mov
(bad)
push
(bad)
arpl
stos
inc
arpl
fs
dec
out
dec
push
nop
outs
call
or
inc
adc
dec
mov
inc
sar
hlt
inc
pop
add
aad
push
pushf
mov
xchg
mov
test
xchg
mov
fsubr
addr16
xlat
inc
ins
ficom
push
mov
lods
jo
enter
mov
outs
mov
push
push
aam
repz
inc
adc
lock
mov
add
sete
(bad)
mov
(bad)
dec
push
ss
div
mov
xchg
mov
lods
pop
mov
xlat
inc
iret
test
jae
inc
push
jnp
clc
push
xor
loop
and
pop
es
into
loop
ret
push
cmps
(bad)
popa
mov
inc
xchg
xchg
loop
movs
mov
(bad)
mov
ror
adc
stc
test
cmps
div
lahf
iret
sbb
fs
adc
mov
xor
ds
inc
in
jbe
jae
mov
ror
sub
adc
cmp
leave
paddd
fwait
aad
pop
cs
pop
xlat
xchg
cmc
mov
push
cmp
imul
add
out
and
mov
enter
aaa
pop
xchg
int
(bad)
pop
(bad)
shr
pop
xor
jae
jb
add
mov
mov
int3
ret
addr16
ins
xlat
add
in
outs
push
add
sbb
and
and
and
adc
lds
cmps
pandn
jb
mov
nop
pop
in
in
and
les
sbb
adc
movs
scas
div
inc
mov
mov
push
movs
xchg
dec
push
mov
stos
jne
push
test
das
ss
movs
or
imul
leave
mov
cmps
test
push
inc
push
xor
iret
gs
add
sub
jne
(bad)
mul
loopne
imul
push
pushw
outs
fcom
aad
ja
call
mov
fidivr
retf
inc
add
add
cmp
hlt
(bad)
sbb
and
push
adc
mov
mov
lea
lock
outs
add
ja
ds
xchg
mov
mov
xchg
jecxz
sar
pop
sub
imul
shl
addr16
xor
(bad)
pop
dec
outs
adc
pop
add
repz
inc
je
clc
addr16
mov
mov
pop
leave
push
bound
push
jmp
xchg
jmp
sub
ss
hlt
jns
aam
xchg
nop
jae
push
call
mov
outs
add
cmps
xchg
out
adc
push
add
and
mov
add
inc
dec
and
jmp
mul
(bad)
push
out
ffreep
inc
sbb
cli
into
test
rol
daa
jl
(bad)
sbb
cdq
push
daa
fmul
imul
hlt
pop
jbe
cmp
js
jb
mov
jge
adc
aaa
push
popa
(bad)
or
inc
in
int
std
mov
mov
out
das
scas
and
arpl
xchg
xchg
rcl
cs
xchg
sbb
aas
ins
push
xor
sbb
out
cmc
pop
jb
or
dec
das
or
fwait
cdq
mov
es
mov
test
out
push
xchg
pop
xor
bound
sbb
out
test
push
rol
rcr
mov
shl
mov
and
loop
inc
arpl
jg
and
and
xor
jmp
arpl
fwait
mov
jo
mov
ss
jno
xchg
sbb
pop
popf
fisttp
into
stos
es
dec
mov
xchg
ins
aaa
pop
mov
cli
xlat
push
mov
rol
xor
push
push
lock
xor
and
xor
ja
bswap
into
xchg
sub
mov
data16
clc
div
out
push
adc
xor
inc
mov
dec
(bad)
mov
inc
lods
aaa
lock
loope
aad
lds
sub
sub
fdiv
pop
lods
(bad)
gs
pop
add
hlt
std
push
mov
jbe
retf
mov
inc
jbe
inc
int
mov
ds
push
cli
inc
push
call
adc
add
retf
mul
lahf
dec
fmulp
mov
ss
xchg
das
cmp
cli
stos
sbb
cwde
aam
out
(bad)
aad
xor
inc
outs
inc
std
add
int3
pop
pop
fadd
shl
out
cmps
xchg
push
aaa
sub
xchg
pop
pop
adc
aaa
test
jmp
dec
push
cmc
rol
in
xchg
pop
int
jnp
sbb
ja
push
pop
xchg
push
mov
pop
jmp
scas
imul
cmp
adc
pop
sub
push
add
pop
je
xor
or
xchg
pushf
call
mov
jb
cmp
pop
xlat
jae
icebp
mov
repnz
and
sahf
cmp
cmps
test
bound
jae
ins
push
cmps
les
sbb
ds
fisttp
loop
in
scas
and
cmp
retf
nop
fstp
shl
retf
push
push
movs
aam
mov
cmp
xchg
rcl
jp
test
cmp
repnz
add
aaa
xlat
push
scas
ss
push
and
pushf
mov
xor
out
stc
aas
inc
pop
push
mov
mov
dec
cmp
sbb
pop
(bad)
and
iret
enter
(bad)
sti
(bad)
mov
data16
repnz
pop
pop
rcr
push
sub
dec
sbb
mov
ja
dec
xchg
pop
push
es
sbb
outs
push
mov
jbe
adc
(bad)
dec
cmps
nop
pop
iret
dec
adc
sbb
movs
cmp
xchg
pop
in
loop
call
pop
jg
inc
stos
sbb
into
dec
xor
in
ja
adc
mov
test
popf
arpl
adc
dec
aaa
mov
psubd
call
push
mov
xchg
mov
mov
add
xor
mul
push
call
jae
fisubr
outs
test
jp
in
mov
stos
xor
xchg
cmp
icebp
(bad)
cmp
ret
adc
call
not
push
call
ret
out
mov
lea
xlat
aad
mov
xchg
mov
mov
int3
lods
loop
mov
pop
retf
imul
xor
mov
hlt
cmp
xchg
cmp
cmps
jo
loop
push
push
idiv
cmps
test
mov
sbb
aas
sahf
repnz
inc
fisttp
fadd
or
loopne
mov
jp
mov
jg
pop
test
push
xor
leave
mov
mov
push
loop
cld
aaa
repz
inc
sbb
and
add
pop
pop
jbe
or
(bad)
inc
fadd
xchg
ss
inc
mov
pop
xlat
inc
and
pop
data16
dec
pop
fcomp
mov
loop
daa
cmp
inc
xlat
mov
pop
scas
imul
mov
mov
and
push
pop
jb
push
or
jb
or
push
jbe
lods
je
push
clc
(bad)
adc
xchg
inc
and
sbb
data16
adc
(bad)
and
sahf
mov
scas
adc
sbb
add
repnz
clc
xor
jecxz
out
jo
mov
mov
movs
inc
sbb
call
lods
adc
inc
cmps
les
xchg
xchg
and
loope
popf
pop
sbb
into
jl
pop
nop
ja
jo
(bad)
fcom
scas
test
lahf
inc
or
cmp
inc
mov
in
aaa
div
xchg
fldenv
pop
cmp
jae
movs
jmp
inc
cdq
xchg
(bad)
sbb
xchg
pop
push
out
cmps
cmps
pop
push
sub
(bad)
cmp
cmp
mov
inc
xor
mul
test
sub
fstp
dec
out
sbb
jmp
xor
ins
ds
or
sahf
or
mov
xlat
pop
sub
(bad)
sub
arpl
(bad)
in
movs
dec
inc
mov
push
stos
out
outs
sub
xor
add
mov
sub
addr16
sub
add
das
and
mov
jae
call
repz
inc
xchg
hlt
xor
call
gs
sub
mov
jbe
fidivr
pop
adc
scas
jecxz
dec
ja
test
jo
ins
pmulhuw
mov
sub
les
and
dec
fcom
mov
mov
sbb
pop
jp
xchg
push
mov
add
inc
and
xor
int
push
adc
jecxz
and
xchg
enter
xchg
fwait
pop
mov
cdq
dec
or
(bad)
xor
mov
mov
and
(bad)
pop
cmps
fs
movs
retfw
push
(bad)
and
jp
push
push
not
mov
pop
push
push
xchg
aaa
mov
pop
xchg
stos
loop
dec
inc
push
pop
popf
push
leave
imul
pop
inc
sahf
(bad)
mul
cdq
mov
sbb
xlat
pushf
ja
imul
retf
xlat
or
ja
and
push
(bad)
test
pop
mov
repnz
xchg
ins
jbe
int
inc
xor
dec
jno
scas
adc
sbb
addr16
jg
adc
jo
mov
mov
loop
push
jbe
xchg
push
(bad)
out
pop
imul
cdq
mov
repnz
aaa
enter
(bad)
test
inc
pop
inc
test
cmp
adc
dec
xchg
or
not
push
dec
fdiv
mov
inc
push
xchg
in
mov
mov
call
ret
neg
jle
popf
jbe
dec
add
jns
outs
sbb
fidivr
cs
test
iret
lock
js
movs
jbe
mov
int
aad
aaa
shl
jp
or
xor
inc
stos
add
mov
(bad)
mov
pop
out
cmp
fstp
pop
mov
loope
cs
test
sar
mov
aad
inc
test
adc
xchg
shr
push
push
mov
pop
add
(bad)
popf
cmp
(bad)
cmp
lds
ss
(bad)
idiv
test
sbb
daa
in
xchg
dec
mov
or
cmps
push
or
pop
rcl
sti
or
sub
xchg
cwde
fninit
mov
fdiv
sbb
clc
lds
call
fcomp
aad
mov
fs
ss
mov
(bad)
adc
and
jmp
adc
pop
loopne
cdq
xor
mov
inc
xchg
ss
dec
cmps
xchg
out
popf
sbb
xor
shl
inc
lods
pop
out
es
mov
push
repz
and
and
push
js
add
ss
jl
add
cmp
mov
lods
out
sahf
imul
fist
es
push
outs
cmps
dec
push
add
mov
cmps
lods
fadd
retf
and
add
test
and
ds
or
dec
aas
mov
call
mov
mov
div
and
push
mov
xor
adc
xlat
jge
(bad)
push
mov
xlat
rcl
fild
repz
or
fisub
mov
sub
sub
out
in
jae
adc
mov
mov
push
push
ss
(bad)
fild
push
mov
dec
push
mov
push
xor
data16
or
xor
mov
add
out
sbb
mov
push
daa
into
add
and
sti
dec
xor
jecxz
or
jle
pop
fwait
aad
mov
xchg
cwde
leave
and
stos
and
icebp
imul
out
mov
cmc
cmps
movups
jb
add
data16
popf
int
fist
mov
nop
push
mov
arpl
xchg
pop
(bad)
dec
mov
xor
mov
xor
sub
xchg
sub
inc
sbb
out
inc
inc
jb
cmps
outs
inc
fdiv
jne
add
pop
test
xchg
push
mov
push
inc
cmps
data16
repnz
and
jle
movs
out
and
push
mov
adc
cmp
xchg
sbb
rol
and
je
(bad)
xchg
push
clc
and
cwde
dec
jmp
bound
mov
cmp
sbb
mov
jmp
mov
arpl
lods
lock
popa
ja
xor
jmp
and
pop
pop
dec
push
mov
aad
jbe
sbb
push
outs
ja
add
pop
div
cmp
adc
jns
and
add
jbe
sub
(bad)
or
jge
push
mov
pop
push
adc
sub
mov
es
rcl
test
mov
shl
xchg
mov
pop
jle
sahf
xchg
ds
out
movs
mov
mov
mov
fld
(bad)
cwde
push
(bad)
retf
lods
pop
(bad)
iret
or
hlt
dec
jae
xchg
daa
pop
data16
or
in
and
mov
retf
pushf
jp
ret
cmps
push
mov
mov
fdivr
push
adc
stos
fcomi
in
sahf
mov
iret
xchg
sub
enter
xchg
jb
xchg
xchg
data16
cmps
adc
hlt
dec
leave
ss
adc
mov
jno
inc
mov
aas
dec
cmp
adc
and
push
mov
push
ins
cdq
add
push
enter
mov
iret
(bad)
jp
in
push
mov
xlat
sub
in
pop
test
sub
into
mov
(bad)
fcmovnu
and
adc
aas
or
loopne
pop
mov
push
sbb
xchg
in
ja
push
loop
fdivr
inc
daa
test
and
dec
inc
pop
ficom
lods
jmp
push
aaa
cmp
shl
pop
and
das
mov
dec
loope
scas
or
push
cmps
or
mov
sub
addr16
fwait
mov
iret
mov
xor
jb
(bad)
and
out
cmp
fwait
cdq
daa
(bad)
mov
mov
or
jl
xchg
mov
fcom
jg
stos
loope
add
fidiv
movs
cmps
pop
ss
sub
aaa
daa
adc
test
jmp
rcl
mov
pop
pop
xor
and
jae
push
cmp
aam
(bad)
aad
call
push
push
xlat
jns
cmp
scas
push
xchg
mov
int
aam
std
cwde
cdq
sbb
add
outs
in
push
pop
sbb
push
mov
cmp
mov
xor
adc
leave
in
jno
xchg
mov
inc
test
in
ret
and
fwait
xlat
inc
pop
gs
push
mov
push
pushw
push
xchg
jo
pusha
stos
adc
shl
je
cmps
stc
scas
aas
adc
xchg
call
cdq
xor
sbb
mov
fstp
sub
movs
inc
cmp
sub
push
sbb
arpl
daa
and
(bad)
mov
inc
out
shl
addr16
xchg
sahf
les
sub
cmp
(bad)
push
rcl
test
pop
aaa
je
shl
and
adc
not
(bad)
xlat
lock
xchg
(bad)
(bad)
popa
mov
push
data16
or
mov
xchg
dec
mov
mov
mov
test
cld
arpl
sbb
cwde
and
lock
dec
pop
aam
inc
inc
mov
test
mov
push
push
dec
frstor
adc
inc
inc
pusha
retf
and
mov
push
in
fs
inc
jmp
lock
adc
pusha
adc
inc
dec
xor
xchg
xor
gs
sbb
cld
out
jmp
adc
dec
push
clc
outs
and
mov
in
ds
jecxz
cld
jge
loop
jmp
jns
mov
in
test
push
cmc
adc
test
in
push
jmp
div
and
xchg
aas
je
out
loop
lea
adc
xchg
rcr
xchg
cdq
sbb
sub
add
jle
in
mov
out
inc
mov
xchg
loop
cmp
test
aaa
jmp
adc
or
jbe
push
mov
xchg
jb
push
data16
xchg
cmps
pop
push
xchg
jmp
dec
add
gs
mov
lea
imul
aad
dec
and
fist
mov
pop
push
add
jbe
adc
push
std
sbb
mov
fld
mov
add
out
(bad)
push
je
and
jae
ret
cmp
inc
push
pop
imul
xchg
(bad)
(bad)
or
pop
and
mov
jge
adc
lea
bound
mov
mov
sbb
inc
cmp
test
(bad)
adc
xor
push
push
xor
in
dec
test
push
pop
out
cmp
jno
and
(bad)
cmp
fisttp
dec
sub
das
popf
mov
cmc
xor
xchg
aam
add
push
movs
jae
das
in
push
rcl
arpl
and
pop
xchg
sub
inc
shl
mov
je
sub
push
xor
movs
gs
aaa
cmp
movs
aad
inc
in
pop
std
fimul
xchg
out
(bad)
int
adc
imul
inc
sahf
and
mov
mov
xchg
rcl
mov
adc
xchg
sub
mov
push
stos
(bad)
cmps
push
mov
mov
movs
daa
in
fwait
xchg
add
mov
or
or
jl
fbstp
je
out
fnsave
xchg
push
test
jmp
push
fadd
imul
add
sbb
adc
inc
adc
push
fdiv
and
inc
sbb
js
in
dec
jbe
clc
sar
loope
mov
loop
mov
std
(bad)
mov
dec
(bad)
daa
add
push
pop
pop
mov
(bad)
pop
push
outs
pop
dec
mov
movs
xchg
aad
add
push
scas
fwait
call
ret
jmp
push
add
mov
outs
and
ss
pop
pop
cmps
xor
popf
popa
push
jmp
add
mov
(bad)
xchg
xchg
and
(bad)
xor
es
test
div
ja
dec
loopne
in
push
xchg
add
movs
daa
int
aam
mul
addr16
(bad)
daa
inc
std
imul
cmp
and
(bad)
les
mov
rol
dec
mov
hlt
sbb
xchg
loopne
pushf
xchg
add
fidiv
lds
add
cmps
ss
lock
mov
gs
sbb
fild
xor
sbb
test
sahf
bound
out
mov
cld
adc
popf
repz
test
(bad)
ficom
outs
and
rol
xor
data16
fcomip
addr16
dec
scas
imul
and
xchg
ret
outs
fs
pop
out
and
pop
scas
cmps
xchg
and
push
inc
pop
push
cdq
xchg
xchg
out
sbb
das
adc
lea
sub
inc
mov
push
xor
sub
imul
aad
fwait
aam
mov
les
(bad)
inc
mov
out
neg
sbb
pop
jae
fistp
or
out
xor
mov
mov
repnz
popf
int
dec
fst
or
(bad)
and
std
enter
jmp
mov
(bad)
stos
retf
add
sub
inc
clc
pop
aaa
imul
fist
das
push
aam
std
popf
mov
ja
movs
repnz
or
jmp
in
into
out
dec
inc
add
ins
push
imul
push
xor
xchg
jecxz
adc
mov
shl
push
push
inc
jb
xchg
es
stos
out
xor
rcl
lock
es
and
enter
and
leave
and
mov
mov
daa
push
cmp
or
mov
jae
out
sti
push
daa
inc
test
test
xchg
arpl
mov
xlat
pop
daa
mov
adc
push
sbb
gs
(bad)
and
jmp
jp
xchg
sub
xor
sub
scas
push
leave
push
enter
sub
mov
out
sub
test
call
out
(bad)
sbb
std
mul
arpl
sbb
not
dec
cmp
cmp
sub
fldenv
test
fiadd
hlt
cmp
ss
push
ret
xchg
scas
imul
xchg
mov
sub
xor
inc
lahf
fwait
sti
mov
adc
dec
cmc
xchg
test
test
das
xor
mov
mov
cmp
jb
sub
adc
ins
shr
out
dec
jno
jno
rol
inc
and
in
push
push
inc
pop
stc
mov
dec
xchg
pop
call
inc
ins
add
mov
lea
in
out
nop
adc
sub
and
inc
push
jne
push
cmp
nop
push
cmp
out
dec
lahf
push
pop
outs
pushf
mov
jp
dec
adc
sbb
js
out
add
mov
dec
rol
(bad)
in
div
sbb
mov
shr
shl
mov
inc
inc
push
test
cmps
or
xor
fdivrp
xor
and
hlt
rcr
mov
sahf
xchg
dec
push
push
repz
adc
aaa
and
push
sub
inc
inc
mov
lahf
xchg
lock
or
pop
loope
adc
addr16
out
sbb
mov
and
mov
xor
(bad)
push
lahf
bound
sub
mov
ss
cld
(bad)
pop
movs
adc
cwde
lds
movs
inc
and
jnp
add
call
add
loope
mov
call
push
mov
and
enter
iret
add
fs
inc
hlt
shl
dec
cmps
jnp
test
arpl
(bad)
sti
lods
pop
daa
push
jg
scas
shl
xor
inc
std
sar
fsub
fsubr
mov
adc
push
repz
mov
push
aas
and
pop
push
imul
mov
gs
or
mov
leave
retf
xchg
cmp
in
mov
push
push
pop
cmp
jbe
push
or
out
mov
sbb
fadd
mov
out
xor
xor
mov
add
(bad)
jne
cmp
fbstp
popf
(bad)
mov
inc
iret
ins
pop
stc
sahf
cmp
push
(bad)
mov
shl
mov
cs
xchg
addr16
dec
pop
mov
jne
mov
push
ffreep
push
test
test
inc
(bad)
nop
mov
dec
xor
je
aaa
inc
test
inc
loop
mov
jecxz
xchg
retf
or
mov
xchg
and
mov
pop
imul
es
inc
aam
mov
cmps
mov
sbb
push
popf
sub
div
add
je
xchg
in
jae
div
mov
and
call
xor
mov
dec
push
scas
fmul
jns
adc
(bad)
repnz
es
addr16
sbb
repz
inc
jne
sahf
mov
ss
sbb
cmp
inc
push
cmp
pop
pop
pop
adc
(bad)
jge
lahf
inc
rol
xchg
aaa
mov
sahf
sbb
lods
mov
adc
lahf
sub
push
movs
repz
aam
ficomp
out
ret
adc
dec
mov
add
add
bound
iret
adc
in
xchg
addr16
cdq
outs
and
or
sbb
fdiv
xchg
inc
or
inc
jae
pop
add
hlt
adc
inc
xchg
push
inc
cld
push
stc
test
xlat
gs
add
inc
movs
test
xchg
dec
xchg
into
xchg
mov
mov
inc
pop
push
mov
pop
out
cmp
ja
or
jmp
xchg
ja
and
inc
call
cmps
xor
xor
and
rdtsc
sub
sar
dec
dec
or
dec
or
mov
leave
xor
les
mov
test
repz
dec
pop
mov
add
mov
bound
pop
sub
ss
ds
shr
inc
mov
aad
fldz
movs
rol
addr16
dec
cmp
push
outs
cmp
(bad)
pop
pop
xchg
xchg
or
cmp
jbe
icebp
sub
and
test
sub
xchg
xlat
add
mov
(bad)
dec
(bad)
cmps
push
xlat
xchg
jno
push
mov
inc
stos
pop
xor
jmp
pop
mov
fist
ret
push
lods
inc
and
inc
adc
sbb
cmc
mov
movs
bsf
retf
mov
repz
dec
das
pop
and
cld
inc
addr16
cmp
xor
popf
ret
je
jg
test
mov
push
addr16
or
iret
xchg
int3
fs
ja
or
cmps
bound
mov
pop
and
add
addr16
jl
mov
or
sbb
jmp
rol
or
pop
sahf
outs
mov
mov
imul
mov
and
sub
and
scas
push
(bad)
mov
and
mov
dec
push
jno
lds
adc
jns
jnp
arpl
or
add
mul
mov
aaa
fcomi
outs
push
fisubr
stos
xlat
ret
mov
dec
addr16
mov
pop
(bad)
xchg
popa
std
pop
popf
shl
aam
lahf
(bad)
mov
stc
int3
add
push
cmps
xchg
leave
sub
cmp
jnp
out
sar
xchg
jmp
cmp
mov
pop
ror
mov
mov
adc
add
or
adc
repz
aas
pop
sbb
jnp
pop
adc
movd
aad
mov
cmps
cmps
(bad)
(bad)
js
xchg
mov
cwde
outs
jmp
xchg
movs
pusha
outs
mov
pop
mov
mov
hlt
inc
adc
mov
pop
xchg
mov
test
daa
nop
jle
in
dec
push
jmp
int
es
jae
inc
popa
daa
call
fldcw
shl
mov
jne
xchg
inc
(bad)
pop
mov
and
cld
adc
mov
stos
test
out
(bad)
ja
xor
adc
out
or
xchg
cmp
es
out
lds
into
imul
pop
aam
adc
cmc
push
clc
xchg
cld
push
ret
mov
fcom
and
adc
into
jbe
retf
push
mov
adc
or
or
or
fld
daa
pop
push
call
and
xchg
jns
ret
xlat
aad
call
sub
push
in
adc
stc
or
jg
dec
out
xchg
sub
movs
add
loop
loope
aas
mov
out
adc
inc
sub
lods
or
inc
inc
push
jl
adc
scas
xchg
enter
pop
bound
adc
ja
mov
xlat
push
loope
and
mov
jmp
or
aas
std
popf
mov
aaa
and
jae
imul
(bad)
dec
mov
retf
add
fld
and
push
cli
addr16
push
mov
nop
mov
out
pop
repnz
jae
lock
ret
in
push
out
cmp
mov
loope
inc
cmp
cmp
jbe
lea
jle
xchg
mov
ds
inc
sbb
test
and
add
push
push
xchg
mov
aaa
into
enter
out
div
pop
ret
lahf
in
(bad)
xor
ins
or
dec
movs
xchg
inc
mov
test
(bad)
fdivr
lock
adc
mov
inc
pop
pusha
pop
scas
out
(bad)
enter
push
jne
xchg
aam
inc
xor
add
fiadd
pop
imul
adc
jge
addr16
push
das
xor
stos
pop
stc
popa
lds
(bad)
rcl
movs
(bad)
cs
mov
sti
or
repz
xchg
test
call
ffreep
adc
adc
inc
adc
int3
xor
cmp
shl
test
dec
jecxz
sbb
xchg
add
push
daa
sub
inc
movs
test
div
xlat
xchg
jg
mov
ds
adc
mov
out
pop
popf
pop
add
inc
mov
mov
xchg
push
es
lahf
pop
stos
repnz
inc
lds
sbb
sbb
imul
test
xchg
inc
cmp
fwait
add
push
xor
js
js
pop
cli
push
movs
jae
push
cdq
rol
scas
test
xlat
fild
adc
retf
icebp
retf
out
inc
stos
mov
imul
mov
jle
out
cs
cli
xor
lds
add
sbb
mov
jmp
ins
call
fmulp
jl
mov
jb
pop
pop
(bad)
mov
test
xor
adc
pop
dec
xor
aad
fisttp
popa
test
mov
stos
pop
mov
(bad)
hlt
es
in
push
and
test
imul
call
xchg
test
sar
or
ds
inc
mov
xchg
xor
mov
adc
pop
mov
outs
fstp
repz
jnp
shl
push
daa
and
sbb
xor
movs
adc
mov
adc
pop
mov
jbe
jp
push
mul
movs
mov
push
push
push
sub
fwait
sar
cmps
dec
lods
lock
inc
dec
mov
mov
retf
div
loope
mov
xchg
xor
cmps
fsubr
xchg
addr16
out
push
pusha
les
test
push
mov
mov
mov
ret
in
daa
push
push
dec
xor
mov
jmp
nop
cdq
xchg
stos
push
out
rcl
and
push
pop
xor
jb
or
push
jg
loopne
mov
mov
rcl
mov
hlt
push
loop
retf
arpl
mov
push
retf
or
in
jl
into
xchg
ret
mov
dec
mov
push
int
adc
xchg
mov
lods
mov
sbb
add
jo
dec
inc
stos
push
cmp
adc
adc
icebp
test
mov
aam
iret
xchg
mov
(bad)
mov
add
aad
neg
cmp
std
stos
add
xchg
mov
aas
out
jp
push
cmp
sub
inc
(bad)
pop
adc
xor
not
ret
das
in
jnp
xor
dec
mov
rol
and
call
test
mov
(bad)
lods
div
sub
daa
ret
daa
lea
sbb
aas
mov
test
xlat
jg
in
dec
(bad)
adc
inc
repz
popa
pop
dec
sahf
jb
mov
push
xchg
mov
cmp
adc
mov
add
js
hlt
es
sub
pop
outs
mov
sbb
mov
rcr
addr16
push
test
(bad)
out
repnz
lods
xchg
sti
fbld
aas
sub
mov
push
and
es
int
mov
and
push
dec
hlt
aam
adc
jmp
in
dec
cdq
pop
mov
push
les
es
push
push
or
(bad)
fs
xor
xchg
stc
xlat
push
mov
out
xchg
xchg
or
add
mov
cld
inc
pop
sbb
sahf
xchg
bound
jle
cmp
jo
pop
loope
test
sbb
push
lea
fbld
cmp
jmp
xchg
out
leave
mov
fwait
shr
mov
clc
push
fwait
push
pop
jge
outs
push
mov
jne
test
push
xchg
es
popf
fnstenv
cmp
push
inc
daa
mov
jno
test
mov
test
dec
retf
hlt
out
mov
jns
jge
(bad)
or
daa
mov
ss
mov
add
inc
(bad)
shl
add
jmp
cdq
mov
repnz
mov
mov
inc
adc
mov
add
cmps
(bad)
xor
sub
out
push
test
dec
stc
mov
mov
bound
aad
and
es
lock
in
mov
int3
cmp
cdq
outs
fwait
repnz
xchg
nop
out
dec
inc
push
inc
push
add
addr16
test
shl
aad
mov
into
in
xchg
cmps
and
sbb
or
cwde
xchg
cwde
mov
mov
jno
rol
test
cmps
out
das
bnd
fs
stos
push
xor
push
les
in
out
dec
sbb
arpl
push
pop
cmp
dec
xor
aaa
add
fcomp
sbb
idiv
add
mov
add
mov
pop
packuswb
cmps
pop
push
movs
jp
or
loop
shr
bound
inc
ss
imul
gs
call
aam
xchg
or
imul
les
fs
das
inc
adc
xchg
outs
mov
fadd
pop
shr
jecxz
xchg
imul
div
push
in
jbe
scas
xchg
mov
les
repnz
gs
daa
mov
and
sub
in
xchg
scas
jg
ja
sub
aam
push
imul
adc
je
cmp
mov
pushf
cmps
mov
arpl
add
and
add
inc
mov
mov
addr16
popf
je
mov
lock
(bad)
xor
dec
xchg
call
aam
sbb
test
aas
xchg
out
pushf
xchg
xchg
cmp
shl
push
daa
pop
sub
add
ins
jbe
pop
jae
and
aam
cmps
add
adc
lahf
std
and
mov
not
mov
mov
push
(bad)
sub
lods
inc
not
mov
push
(bad)
out
call
add
mul
shr
jns
xchg
(bad)
cmp
push
(bad)
hlt
rol
out
pop
mov
cmps
xor
out
shr
jecxz
(bad)
(bad)
xchg
add
fcmovnu
push
stc
add
pop
push
sti
imul
mov
in
inc
hlt
pop
mov
jbe
mov
in
loop
sbb
(bad)
pop
scas
jecxz
ret
mov
outs
adc
dec
sahf
add
out
jb
mov
outs
in
mov
iret
push
and
out
and
cmp
or
sti
je
jne
popa
(bad)
mov
adc
icebp
retf
lock
ror
mov
and
out
daa
adc
xor
aam
movs
sub
js
(bad)
cmp
mov
mov
mov
daa
(bad)
dec
out
clc
into
test
(bad)
repz
pop
(bad)
scas
push
idiv
out
aam
out
out
inc
inc
push
out
es
lock
add
pop
mov
inc
movs
(bad)
xchg
inc
aam
fs
daa
int
sar
sar
mov
jecxz
aas
in
call
inc
pop
(bad)
stos
lahf
test
inc
pop
xor
jne
xchg
xlat
retf
pop
(bad)
add
ja
daa
mov
jae
enter
sub
data16
inc
rol
xchg
xchg
xor
fbld
neg
cdq
push
xor
and
retf
sub
inc
test
and
fld
aam
adc
and
mov
aam
mov
xlat
jno
shl
(bad)
rol
xchg
addr16
cmp
add
add
push
outs
xor
jne
mov
movs
xlat
cmps
daa
add
mov
push
retf
call
and
outs
lods
sbb
push
loope
loope
xor
adc
xor
ja
icebp
pop
cld
in
push
les
fcmovne
dec
xchg
cld
push
xchg
fiadd
pop
mov
cmc
and
nop
jae
das
push
or
dec
push
add
sti
pop
mov
pop
mov
pop
cmp
(bad)
xchg
sub
xor
mov
push
pop
call
adc
xor
mov
(bad)
int
add
sar
sbb
daa
cld
(bad)
int3
mov
sub
push
cmp
data16
and
mov
push
lds
cmps
iret
or
scas
jmp
push
or
push
push
sub
aaa
add
pop
xor
movs
scas
or
add
xchg
mov
cmps
push
inc
dec
loope
push
xchg
test
div
loop
(bad)
dec
iret
mov
cli
mov
dec
xchg
(bad)
dec
mov
test
xchg
call
push
and
fwait
adc
aaa
jg
(bad)
adc
dec
stos
mov
cmp
dec
xchg
dec
cmps
jecxz
clc
(bad)
cmps
sub
mov
test
cmp
mov
hlt
xchg
es
push
xlat
pop
ins
imul
pop
add
neg
dec
icebp
test
test
sub
inc
jbe
adc
loope
rcl
movs
(bad)
ja
loop
sbb
jns
es
add
outs
jae
jbe
aad
mov
in
xchg
out
pop
ror
xor
in
in
je
or
add
dec
or
mov
jmp
mov
lods
jmp
pop
pop
jecxz
loopne
or
add
ja
pop
push
gs
(bad)
out
sub
inc
mov
mov
pop
call
dec
in
adc
ss
push
mov
pop
(bad)
in
mov
pop
aad
xchg
mov
sub
and
arpl
(bad)
and
and
aam
mov
fidivr
xlat
or
inc
mov
jl
xchg
sbb
mov
out
xor
cmp
xchg
movs
ret
retf
pushf
out
(bad)
mov
addr16
imul
pushf
jo
adc
mov
pop
mov
retf
fdivr
cs
(bad)
cmp
push
out
push
mov
popa
in
add
push
push
ja
aas
rcl
inc
cmps
arpl
loop
adc
mov
stc
inc
or
aas
xor
movs
mov
jnp
(bad)
clc
cdq
push
(bad)
sbb
and
mov
push
enter
or
push
aam
call
xchg
push
loop
(bad)
lds
adc
neg
push
push
xlat
addr16
cdq
sahf
mov
lea
adc
mov
push
mov
aaa
xor
adc
das
jb
sbb
adc
push
cmps
mov
loope
cmp
(bad)
cmp
and
mov
fwait
adc
sbb
je
test
lock
call
(bad)
jle
(bad)
inc
and
push
les
inc
pop
popf
aad
mov
xlat
jmp
push
add
in
dec
xchg
(bad)
outs
ds
xchg
lods
jp
and
lods
dec
daa
std
mov
in
out
popfw
imul
sub
cwde
imul
jl
test
test
push
daa
ret
in
pop
leave
lock
mov
jle
mov
inc
adc
add
lea
inc
loopne
ds
shl
mov
and
leave
and
lahf
push
rol
inc
adc
mul
gs
popf
frstor
push
push
adc
xchg
data16
mov
hlt
jns
lds
shl
add
mov
pop
push
(bad)
rcr
add
sar
inc
push
push
sub
hlt
in
and
hlt
add
loopne
push
dec
ror
mov
push
push
pop
mov
push
sbb
(bad)
fwait
rcl
inc
add
or
dec
outs
ret
test
ficomp
hlt
mov
mov
test
sbb
and
jge
pop
push
es
add
test
pop
pop
or
std
dec
and
xchg
push
pop
push
sub
adc
adc
loop
and
dec
xchg
lds
nop
data16
not
cmps
mov
inc
cmp
fsub
pushf
adc
aas
leave
jge
push
mov
ss
in
repz
xlat
repz
push
push
ret
lea
inc
adc
push
push
sbb
sub
mov
push
adc
add
scas
push
shl
aas
add
iret
fs
dec
outs
xchg
imul
outs
mov
and
jmp
xor
repz
sbb
aad
xor
bound
push
arpl
jbe
imul
(bad)
pusha
jne
and
rcl
inc
cmps
test
push
test
push
(bad)
pop
imul
stos
into
les
scas
bound
mov
sub
pop
push
push
jle
outs
out
push
fs
movs
jae
push
es
ret
rcl
xchg
mov
jecxz
push
and
movs
jne
pop
arpl
ja
es
add
pusha
out
shld
addr16
sti
mov
xchg
adc
jae
and
dec
or
addr16
push
jmp
hlt
cmc
xor
(bad)
mov
dec
leave
pop
sti
out
pusha
add
jmp
xor
iret
add
push
push
xchg
cmps
mov
adc
push
and
push
aaa
xor
jecxz
nop
xlat
mov
xchg
ss
jno
out
xchg
mov
lds
dec
or
addr16
outs
mov
push
jne
xor
jae
mov
xchg
nop
xor
push
in
pop
and
push
aam
stos
mov
cmp
icebp
int3
jmp
inc
adc
or
mov
mov
xchg
add
mov
add
and
aaa
gs
imul
and
cs
dec
pop
ins
addr16
push
idiv
ins
xlat
and
retf
mov
push
mov
mov
scas
fmul
mov
inc
adc
mov
jg
xchg
loope
push
in
or
ja
pop
es
js
dec
lds
inc
xchg
xor
xlat
fcom
sbb
mov
sub
outs
sbb
ss
cmp
aad
clc
imul
or
xlat
dec
ja
outs
mov
pop
lahf
in
mov
push
jge
push
cmps
pop
jbe
bound
cmps
out
out
fsubr
test
mov
movs
mov
jno
aaa
and
repz
neg
scas
fcmovnbe
xor
not
fdivp
dec
rol
lea
pop
retf
ret
sub
fdiv
mov
adc
cwde
cmps
out
mov
(bad)
dec
adc
fsincos
pop
jp
nop
fldenv
and
push
dec
mov
fptan
dec
daa
popf
dec
push
xor
cdq
mov
dec
pop
xor
aam
mov
cdq
inc
xchg
pop
in
jo
and
in
dec
inc
enter
push
pop
jle
into
pop
int3
xchg
jecxz
push
mov
adc
jns
mov
push
push
ins
sar
stos
adc
test
mov
daa
scas
aad
pop
and
push
add
xchg
jmp
and
or
sbb
ins
pushf
(bad)
sub
ss
cmp
push
aam
dec
jmp
je
adc
stc
jecxz
repz
iret
stos
ja
add
mov
cmp
outs
mov
jb
ins
mov
or
add
js
add
jae
adc
das
xchg
cs
cmps
inc
test
xchg
mov
push
mov
into
xlat
add
pusha
xchg
xchg
lock
mov
test
outs
ds
dec
mov
je
and
and
not
dec
adc
mov
iret
jbe
mov
dec
test
ds
mov
jg
test
sar
jb
xchg
xchg
pop
jne
int3
rol
es
shl
popa
sbb
cli
div
int3
dec
jne
test
dec
adc
data16
nop
or
popa
std
aaa
jg
mov
sub
sub
pop
(bad)
pop
test
jne
adc
add
sti
cmps
push
cmc
fisubr
mov
mov
sti
loop
(bad)
push
dec
add
popa
xor
daa
or
rcl
out
out
loope
stos
xor
scas
cmps
push
inc
adc
cmc
mov
retf
add
(bad)
out
and
mov
inc
mov
mov
mov
jbe
ret
es
mov
repz
leave
sbb
daa
shr
sub
cmp
adc
cmc
inc
dec
jnp
pop
sbb
or
sub
out
shl
ja
js
xchg
ja
imul
jecxz
add
push
es
mov
fwait
cmps
adc
adc
jo
mov
je
es
jmp
(bad)
outs
arpl
int
sbb
pop
inc
push
dec
jae
ja
js
jo
aaa
mov
mov
ret
sbb
cmps
out
dec
mov
adc
xor
out
jb
scas
or
mov
add
cmp
inc
adc
scas
sbb
push
sub
mov
out
jecxz
(bad)
cli
cld
inc
neg
mov
mov
inc
add
in
and
push
lea
xor
jns
inc
inc
loop
bound
out
push
scas
push
test
or
xchg
push
movs
mov
sahf
(bad)
outs
xlat
jae
cmps
cmp
push
inc
cmp
(bad)
dec
or
in
mov
ds
rcr
dec
test
push
je
sahf
ss
out
push
into
icebp
es
in
jmp
jae
dec
call
adc
push
cmp
push
xchg
hlt
push
movlhps
dec
push
push
and
retf
scas
(bad)
out
xchg
xor
sbb
(bad)
jge
or
cmp
dec
inc
jns
aaa
jne
xor
dec
adc
imul
(bad)
adc
cmp
push
adc
mov
fldenv
jge
sub
repnz
xlat
sbb
push
fidivr
inc
inc
scas
cmp
test
stos
ja
sahf
test
movs
not
cmc
idiv
dec
push
jmp
add
mov
pop
and
es
mov
or
in
(bad)
mov
adc
(bad)
jno
push
ret
es
outs
xor
push
mov
mov
dec
pop
cmps
out
sbb
inc
lea
(bad)
inc
jnp
inc
dec
stos
ret
pushf
mov
fnstcw
idiv
es
pop
sub
mov
cmps
jo
adc
ss
xchg
xchg
jo
imul
div
stc
(bad)
sbb
sub
arpl
rol
inc
stos
movs
pop
jecxz
push
or
aaa
(bad)
jmp
xchg
fwait
aam
or
cmp
fsubr
call
ss
mov
cs
(bad)
ss
cmc
(bad)
imul
popf
es
cmps
add
pop
(bad)
and
test
xchg
mov
rol
push
cld
lahf
adc
inc
int
xor
addr16
xchg
adc
ins
mov
repz
cwde
xchg
xor
push
inc
ret
mov
test
ja
int
sbb
xchg
push
sub
and
in
mov
mov
and
cmp
sbb
push
(bad)
mov
cmps
out
nop
loop
pop
cmps
sub
fwait
mov
dec
inc
cld
or
rcl
or
xor
out
jmp
add
(bad)
push
and
jecxz
sahf
sahf
test
jbe
dec
fs
xchg
xor
inc
loop
sub
xor
clc
or
not
dec
out
rcr
push
jne
mov
mov
add
adc
into
mov
imul
and
js
arpl
jl
movs
retf
push
push
cmps
out
movs
test
xchg
in
xchg
(bad)
out
std
push
mov
in
push
test
es
(bad)
fstp
leave
outs
cmp
jbe
xchg
movs
push
(bad)
pop
mov
mov
and
mov
sbb
mov
test
repnz
jecxz
jmp
into
pop
or
out
ds
adc
cmps
adc
dec
xlat
pop
jmp
xor
inc
jl
xchg
jns
jmp
pop
jg
pop
dec
inc
hlt
jmp
leave
mov
mov
aam
je
sbb
pop
dec
arpl
pop
out
(bad)
js
jge
leave
or
xchg
pop
xchg
pushf
ja
div
add
aaa
retf
ret
loope
jg
test
icebp
push
dec
test
mov
xor
jns
mov
inc
sbb
ins
pop
repnz
stos
rcl
ficomp
mov
bnd
retf
cdq
jae
or
add
xor
jns
mul
out
(bad)
daa
imul
cmp
jl
mov
test
lods
ss
xchg
xchg
pusha
daa
and
outs
xchg
jle
(bad)
or
mov
pop
cmps
aaa
popf
xor
xor
and
mov
nop
cmp
add
and
push
iret
imul
loope
fs
daa
push
data16
dec
pop
test
add
repz
cmc
jp
mov
repnz
cmp
inc
jae
repnz
and
jbe
(bad)
xor
mov
das
mov
and
push
xor
data16
outs
sbb
ret
test
test
push
xlat
pop
aad
push
xchg
cmps
fnsave
dec
or
pop
push
idiv
out
dec
xchg
ret
push
not
mov
je
test
in
sbb
and
and
aaa
loop
aam
arpl
inc
rcl
dec
int3
push
inc
je
xor
(bad)
imul
dec
ror
push
inc
sub
(bad)
cld
mul
fnsave
cli
xchg
pop
jge
outs
add
pop
nop
inc
or
adc
mov
stc
and
rol
dec
jle
or
xchg
xor
add
and
(bad)
cmp
inc
std
push
or
jb
iret
popf
push
cmps
inc
and
aaa
ins
jecxz
stc
jae
mov
mov
aam
scas
and
lods
jbe
cmp
add
call
cmc
pop
adc
lods
jecxz
call
mov
inc
fdivr
pop
push
jne
inc
out
xchg
fsubr
xchg
push
sbb
sahf
(bad)
dec
mov
pop
sub
push
call
or
shl
repnz
je
pop
test
adc
(bad)
loop
lea
into
fisub
cdq
mov
add
imul
jp
xchg
out
and
inc
adc
call
fild
dec
(bad)
cmp
xchg
jbe
stos
dec
repnz
inc
iret
cmps
je
loopne
out
mov
and
pop
mov
cmp
jo
push
sahf
jne
mov
dec
inc
cmp
test
jmp
cmp
xchg
daa
mov
add
push
lods
lock
cmps
shl
es
xlat
push
out
mov
push
hlt
(bad)
pushf
mov
push
ins
hlt
mov
pop
fs
shl
mov
pop
jg
pop
xchg
mov
mov
cmp
scas
addr16
xchg
repnz
add
pushf
jbe
adc
and
and
jge
or
or
jecxz
pushfw
lods
jbe
and
inc
dec
shl
scas
adc
ror
(bad)
push
ret
fldenv
es
test
pop
aas
and
mov
inc
dec
test
rol
ins
xchg
sahf
adc
mov
inc
dec
scas
test
mov
push
and
mov
dec
jo
ss
sub
push
(bad)
in
cmc
test
xchg
inc
push
mov
and
xchg
push
addr16
push
je
in
xor
cwde
mov
adc
rol
es
pop
sub
out
leave
(bad)
je
clc
aaa
and
jge
adc
xchg
(bad)
sahf
xor
imul
mov
retf
xor
xor
sub
movs
jle
lea
adc
rcl
jmp
retf
and
aad
inc
add
ins
ja
push
imul
arpl
sub
or
push
xchg
cmp
scas
test
inc
ds
and
call
adc
stos
sti
in
test
jne
sub
xchg
adc
cmps
cs
pop
mov
repnz
sub
xor
lock
data16
frstor
scas
and
into
clc
inc
mov
adc
movs
mov
loop
rol
adc
xor
mov
aas
jbe
jne
push
(bad)
scas
add
xchg
mov
mov
or
das
pusha
adc
or
pop
daa
lahf
rol
outs
in
enter
adc
or
jnp
jns
xchg
(bad)
jecxz
fmul
mov
scas
(bad)
aaa
arpl
pop
xor
inc
sti
fstp
arpl
addr16
and
push
ficom
xlat
cmp
push
inc
std
adc
xchg
bound
outs
ss
cmp
inc
popa
out
xor
(bad)
mov
xor
sub
dec
cmp
shl
fcom
loopne
and
mov
or
ins
(bad)
and
adc
inc
pop
ss
hlt
pushf
mov
loopne
pushf
in
pop
pop
add
dec
add
inc
add
dec
adc
push
inc
iret
push
pop
(bad)
ficomp
ret
push
daa
push
push
jne
retf
sub
inc
sbb
xor
push
jne
cmps
pop
dec
div
xchg
add
clc
scas
mov
fistp
lahf
sar
inc
push
sub
icebp
not
add
rcl
sbb
jp
aam
(bad)
(bad)
cwde
pushf
sahf
(bad)
(bad)
shr
inc
pop
sbb
push
and
ss
sub
jmp
(bad)
outs
(bad)
pop
fwait
rcl
inc
mov
int
scas
or
push
cmp
fstp
adc
lahf
rol
pop
fcom
ins
jl
cld
dec
fisttp
sbb
(bad)
enter
aam
ret
jmp
dec
out
ficomp
dec
(bad)
xlat
add
jl
mov
(bad)
daa
outs
xor
lea
push
add
mov
cmc
and
lea
xchg
(bad)
popf
mov
pusha
aam
xlat
cmps
pop
sbb
xor
mov
xor
sahf
clc
jp
in
pop
push
ins
adc
loop
push
pop
and
aad
dec
adc
fwait
out
div
adc
push
push
add
inc
xchg
or
aaa
or
rcl
jmp
(bad)
stos
daa
pop
test
xchg
push
shl
dec
push
push
btr
mov
scas
cmps
inc
(bad)
xlat
popa
xchg
push
push
xchg
call
outs
cmp
xchg
out
push
clc
sbb
dec
not
popf
out
cmp
fmul
adc
std
in
add
push
sti
push
es
and
ins
out
popa
mov
sbb
cdq
bound
push
mov
lods
jle
adc
call
cmp
loopne
out
mov
sbb
mov
sbb
out
(bad)
jg
jp
ds
push
pop
or
adc
xor
aaa
push
test
(bad)
int3
pop
leave
ja
adc
push
out
adc
xlat
jae
std
jp
cmc
loope
xchg
dec
ja
lock
sar
adc
cwde
xchg
and
neg
jo
xor
test
fimul
mov
gs
add
add
sbb
or
cmps
inc
lahf
mov
add
pop
imul
inc
popa
pop
xor
jecxz
push
sar
or
mov
scas
out
jg
sti
les
add
xchg
add
jnp
(bad)
add
mul
sbb
mov
xchg
mov
xchg
aaa
imul
es
jbe
mov
cmp
mov
test
jle
imul
xor
(bad)
(bad)
icebp
fist
ss
in
jbe
pop
(bad)
jle
das
popf
test
sbb
pop
xor
mov
push
or
sbb
movs
rol
arpl
sbb
mov
mov
stos
cmp
mov
rcr
push
mov
jne
adc
int3
xor
xchg
int
add
push
xor
shl
scas
push
inc
mov
mov
xchg
loope
je
pop
mov
lds
add
test
leave
retf
xchg
das
lods
int
cmps
(bad)
(bad)
not
les
xor
xchg
icebp
mov
pop
push
ds
push
retf
jns
rol
mov
mov
jo
pop
jne
or
mov
aam
pop
loope
aad
xlat
jbe
sub
popa
dec
adc
adc
pop
mov
in
dec
xchg
bound
jg
shr
stos
push
bts
mov
push
mov
cwde
je
adc
sbb
jmp
popa
mov
into
cmps
mov
cbw
mov
sbb
sbb
popa
xchg
add
xchg
jae
hlt
xlat
and
or
pop
dec
pop
add
cmps
dec
in
js
cmps
ret
out
add
dec
inc
push
inc
push
cmps
xchg
(bad)
xor
sub
add
icebp
ds
scas
popw
pusha
sti
and
adc
dec
xchg
fucomi
adc
mov
sub
addr16
call
add
cmp
jne
fadd
dec
inc
adc
and
fstp
in
cdq
mov
mov
test
leave
es
div
jmp
inc
push
(bad)
setle
shl
test
(bad)
cmp
arpl
xor
pop
sbb
(bad)
xor
ret
es
push
daa
js
jle
idiv
mov
inc
adc
cmps
mov
pop
(bad)
shl
inc
jo
ror
iret
and
js
sub
inc
push
ja
mov
cmp
movs
cmps
cmc
daa
push
jle
imul
mov
in
lock
repz
sub
lods
pop
push
popa
sahf
mov
inc
xchg
and
movntps
pushf
cs
mov
cs
bound
inc
ja
add
adc
push
push
adc
dec
dec
daa
or
and
jne
shr
not
div
or
std
cmc
fst
rol
pop
pushf
sti
into
mov
sti
jb
push
and
xchg
(bad)
jb
shl
rcr
cmps
add
je
jg
mov
pop
aam
pop
gs
loopne
xlat
dec
dec
cmps
cwde
push
daa
adc
enter
popa
imul
add
xchg
and
cmp
push
(bad)
nop
adc
cmp
not
mov
jnp
shl
aaa
sar
(bad)
movs
repnz
into
add
pop
nop
test
mov
fwait
xor
fs
cmp
xchg
mov
xchg
adc
xchg
outs
inc
jle
and
or
xchg
ret
dec
lea
xchg
push
add
mov
(bad)
add
or
aad
repz
test
ret
mov
mov
pop
xchg
xor
neg
dec
bound
pusha
mov
jecxz
repz
inc
test
in
sub
stos
add
(bad)
push
addr16
mov
jb
in
aaa
add
retf
inc
stos
xchg
ss
add
(bad)
das
nop
lock
dec
adc
sti
mov
xor
cmp
movs
loopne
bound
pop
fcom
icebp
push
inc
sahf
mov
pop
add
addr16
dec
ret
mov
test
and
repz
mov
push
dec
fimul
mov
xlat
push
(bad)
cmps
cmp
(bad)
test
mov
cmp
mov
in
jno
pusha
xor
push
test
ror
cli
inc
sbb
fwait
mov
sti
jae
in
call
xchg
out
mov
jg
xchg
(bad)
adc
and
lds
inc
outs
add
jo
in
out
inc
sub
out
add
cmp
fwait
add
xchg
inc
xor
stc
inc
mov
mov
and
gs
idiv
jge
ds
ss
in
or
(bad)
imul
mov
rcl
cmc
loop
mov
dec
(bad)
inc
push
sti
jnp
outs
movs
lahf
test
push
mov
std
mov
jecxz
mov
xchg
cmps
pop
out
nop
xchg
cmps
and
idiv
inc
mov
(bad)
mov
pop
outs
loope
cmp
mul
ja
push
ss
daa
int
mov
inc
ins
mov
out
outs
call
push
test
push
ss
in
ja
cmp
xchg
adc
push
or
sub
xchg
cmps
sub
aad
fldcw
mov
inc
pop
cwde
adc
fs
xor
mov
mov
scas
in
rol
push
andnps
into
push
mov
mov
push
fcmovbe
data16
pushf
std
and
outs
rcl
test
enter
mov
jnp
mov
push
ds
(bad)
leave
pop
or
repz
mov
jge
jnp
mov
(bad)
push
fs
pop
dec
test
pop
out
inc
push
cmp
inc
xlat
loope
push
ja
mov
cmc
les
pop
push
mov
pushf
inc
adc
jo
xchg
and
aam
mov
shl
and
mov
cmp
test
push
xchg
into
mov
sbb
push
add
out
jnp
mov
cmp
jecxz
cmps
or
shl
push
ror
mov
inc
jne
aam
push
adc
(bad)
es
mov
in
dec
fdivr
xchg
test
cld
jb
xchg
(bad)
pop
neg
mov
pop
mov
push
int3
call
and
ret
hlt
jnp
into
clc
pop
(bad)
out
in
fistp
mov
mov
loop
in
ror
xor
pusha
rcr
pushf
(bad)
repz
ror
pop
jne
inc
cmp
loop
sub
pop
(bad)
je
les
add
in
daa
loope
mul
xor
dec
mov
(bad)
and
mov
addr16
or
xchg
out
pop
jmp
mov
aaa
ins
mov
ins
dec
mov
pop
icebp
push
inc
rol
fwait
pop
sub
adc
iret
fdivr
mov
xor
inc
cmps
repnz
daa
pop
sub
jmp
sub
xor
mov
dec
outs
mov
arpl
out
or
jg
push
out
mov
pop
sub
push
cmps
push
shl
dec
adc
sbb
jle
fsubp
inc
lods
inc
push
pop
mov
jp
mov
sub
out
jmp
adc
lods
push
dec
push
cld
xchg
xor
cmp
pop
adc
xchg
ins
cli
daa
xchg
push
scas
loopne
xchg
out
mov
mov
lea
jmp
pop
mov
call
inc
arpl
pop
inc
and
std
pop
(bad)
fbld
mov
int3
add
sti
mov
sbb
push
cmps
add
cmp
pop
push
call
movs
imul
cs
xchg
xchg
push
test
mov
mov
cmps
cmps
add
not
out
aam
cmp
pop
daa
cmps
and
push
ds
mov
js
xchg
push
xchg
clc
xchg
lock
pop
push
mov
popa
push
add
or
xchg
(bad)
aas
jbe
imul
mov
and
jnp
and
push
pop
idiv
outs
js
mov
cmps
je
or
xchg
stc
es
push
es
mov
mov
sbb
pop
(bad)
xchg
stc
fld
les
in
add
adc
adc
jecxz
out
out
jbe
outs
pop
rol
cmp
push
and
xor
loop
pusha
aaa
(bad)
je
movs
push
add
dec
jbe
les
cmp
ss
xchg
push
cmp
outs
cmps
bound
add
aas
movs
sbb
cmc
mov
rol
loopne
sub
push
xchg
pop
push
je
and
cmp
add
loopne
aad
scas
dec
scas
repnz
pop
inc
repz
and
pop
add
and
xchg
mov
mov
into
jb
or
pop
bound
xor
repz
bound
repnz
and
aaa
rcr
sbb
mov
sti
pop
aam
pop
jbe
dec
stc
test
ret
clc
les
dec
ja
jp
mov
and
jl
jmp
scas
jmp
or
rcr
jmp
cld
mov
dec
jo
dec
push
sub
adc
daa
or
cdq
shl
jl
jb
ret
push
loop
loopne
mov
push
jo
(bad)
or
ins
xchg
dec
data16
(bad)
xor
jmp
(bad)
xlat
xchg
xchg
pop
into
jecxz
addr16
dec
shr
push
and
mov
inc
neg
cmp
dec
cs
adc
ss
mov
mov
jne
in
fwait
bt
and
ins
mov
push
mov
test
aas
xor
pushf
in
mov
pop
xchg
pop
xchg
icebp
scas
mov
fst
push
dec
dec
mov
add
xchg
out
or
(bad)
and
ja
pop
pop
mov
inc
add
add
(bad)
sbb
xor
out
cmps
mov
rol
lahf
push
dec
daa
mov
cmp
sub
daa
mov
(bad)
data16
pop
sbb
cmps
mov
adc
jbe
sbb
pop
daa
jne
and
jbe
lock
std
push
mov
movs
test
in
xchg
adc
add
ins
mov
loope
addr16
mov
daa
cmp
dec
xchg
cli
add
cmps
sbb
adc
add
mov
div
jg
mov
ds
repz
mov
inc
gs
dec
mov
or
addr16
jbe
aaa
aaa
addr16
in
test
movs
ret
dec
cmp
inc
add
ss
retf
aad
int
and
ja
dec
sub
cli
mov
jmp
imul
int3
mov
std
mov
aaa
mov
xchg
and
sub
xchg
fs
mov
xor
pop
mov
push
pop
mov
cmps
and
cmp
push
pop
jmp
scas
xchg
dec
push
out
push
in
pop
(bad)
das
out
mov
mov
sti
cs
and
jbe
sub
lea
inc
mov
xor
call
push
pop
pop
outs
xchg
and
sbb
adc
in
mov
lea
sub
not
ret
bound
outs
sahf
jp
shl
pop
lock
shl
ret
jbe
jg
sub
mov
mov
(bad)
out
(bad)
fst
mov
addr16
dec
push
mov
in
test
push
jae
add
mov
fisubr
cli
pusha
xchg
clc
xchg
dec
test
and
push
mov
cmc
je
dec
push
test
test
pop
clc
sub
movs
and
push
push
jmp
pop
ss
icebp
or
dec
push
mov
xlat
xchg
and
cld
ja
lds
retf
ret
popa
shl
add
sub
fs
test
cmps
mov
jo
mov
fldcw
addr16
xchg
or
(bad)
not
ficom
xor
xchg
cmp
pop
cmp
ret
cmp
push
(bad)
lods
popa
xchg
mov
xor
mov
stc
cwde
jmp
aaa
out
dec
xor
in
test
jo
inc
xchg
popf
call
sub
(bad)
xchg
jmp
mov
inc
ins
movs
and
pushf
xchg
cmp
cs
lds
push
cmc
call
mov
out
cli
inc
cmp
inc
sub
xchg
fadd
sbb
leave
inc
sbb
iret
jmp
xor
inc
push
fst
push
adc
mov
mov
fisttp
pushf
not
out
adc
je
xchg
xor
sbb
icebp
clc
ss
sar
div
pop
adc
pop
xchg
mov
jg
retf
rol
adc
jmp
pop
clc
int
jo
inc
pushf
inc
(bad)
pop
mov
mov
into
daa
sub
or
shr
xchg
loope
mov
daa
dec
sbb
cmps
pop
mov
aaa
jl
pop
sbb
mov
gs
add
cmp
test
lock
ficomp
lock
push
ja
xor
fnstcw
sbb
shl
mov
xlat
push
sbb
or
aam
xor
push
push
cmp
adc
pop
ja
stc
and
push
cli
xchg
and
cmp
pop
inc
out
inc
inc
fild
fcom
inc
or
and
mov
mov
mov
sbb
inc
pop
push
mov
xchg
cld
loope
outs
neg
inc
jb
aas
jg
test
mov
inc
and
test
sub
mov
out
dec
adc
xor
cmps
stos
test
aas
add
ds
mov
test
ret
into
lahf
(bad)
pop
gs
dec
mov
xchg
neg
in
inc
mov
add
sub
data16
popa
cmps
or
mov
retf
hlt
xchg
test
dec
jge
dec
rcl
xchg
xor
dec
xor
inc
cmc
push
cld
mov
ds
or
cmps
mov
jae
shl
cmp
mov
lea
dec
hlt
popa
push
(bad)
mov
addr16
mov
lahf
movs
loope
arpl
in
jbe
push
out
(bad)
sbb
fcomp
call
inc
adc
add
cwde
push
jne
ja
repz
in
push
and
je
outs
mov
mov
sahf
loopne
gs
ja
or
cmps
push
dec
cmps
sbb
xchg
mov
mov
mov
dec
sbb
pop
and
push
out
push
inc
push
imul
push
push
dec
mov
data16
mov
lods
jg
ss
ror
into
(bad)
pop
inc
ja
daa
mov
leave
pop
add
int
add
cmp
adc
xchg
jecxz
mov
pop
inc
mov
fcom
shl
(bad)
stos
adc
add
sub
(bad)
(bad)
push
inc
jg
fadd
and
pop
and
adc
test
push
mov
adc
pop
or
(bad)
cmc
cmps
std
add
sbb
into
arpl
xchg
mov
je
cmp
cmp
outs
inc
rcl
leave
shr
stos
in
jne
add
iret
mov
inc
ins
pop
cmp
in
es
cmps
lods
pop
cmc
call
or
lea
mov
adc
mov
imul
xchg
push
in
imul
arpl
fwait
mov
or
ffree
bound
les
or
aad
or
dec
dec
dec
push
mov
test
push
inc
outs
jmp
aaa
xchg
xchg
mov
push
sbb
cmc
push
repnz
div
and
xchg
xor
cmp
mov
imul
push
xchg
sbb
call
xchg
push
pop
mov
lds
jecxz
xchg
int3
test
cmps
out
push
fimul
out
movs
cli
cmp
retf
test
push
out
out
dec
iret
mov
es
xchg
popf
jnp
mov
push
mov
into
enter
pop
jo
dec
gs
imul
dec
ja
adc
les
xor
mov
and
jbe
fmulp
repz
stos
pusha
add
push
in
in
div
inc
pop
frstor
in
pop
pop
lea
(bad)
clc
and
xchg
into
out
lds
out
repz
pusha
(bad)
cmp
rol
pop
or
sbb
es
inc
mov
je
les
mov
ror
inc
jno
jmp
pusha
ds
pop
cmp
shufps
mov
jbe
ret
pop
repnz
pop
adc
mov
jne
add
(bad)
jbe
fld
ret
push
mov
movs
pop
push
inc
xor
arpl
lahf
sub
push
(bad)
test
shl
mov
jmp
outs
mov
stc
jle
popa
and
arpl
ss
or
xchg
pop
aaa
cmps
mov
adc
(bad)
data16
mov
das
xor
sub
call
and
sti
(bad)
or
ss
repnz
fadd
rol
push
movs
pop
aam
fs
fld
sub
into
not
pop
mov
(bad)
sub
out
out
jmp
addr16
mov
push
lahf
push
cmp
and
mov
rcr
push
outs
cli
mov
cmp
pop
(bad)
clc
adc
aas
data16
cmp
mov
cs
mov
in
ins
lahf
stos
addr16
in
retf
adc
mov
shr
mov
xlat
mov
jmp
addr16
data16
cmp
ss
shl
(bad)
outs
aas
xor
je
mov
je
add
jae
lea
pop
push
xchg
xchg
test
push
mov
js
or
mov
xor
sbb
xchg
ret
jmp
push
pop
mov
cmp
add
rol
daa
lods
imul
and
fnstenv
inc
shl
jge
inc
and
cmps
mov
jnp
xor
lock
daa
cmps
jmp
mov
test
adc
sub
out
adc
and
popf
pop
mov
in
or
les
fiadd
call
and
outs
xor
jns
jle
test
xchg
sub
data16
cmps
sbb
cld
jb
out
je
and
outs
dec
je
aas
das
into
xlat
xor
scas
xchg
repnz
mov
pusha
adc
xor
pop
ss
ret
sar
xchg
(bad)
mov
adc
call
das
and
add
mov
out
addr16
or
xor
cmp
jbe
jb
fsubr
loop
jecxz
cmps
lahf
cld
sahf
vpsadbw
cmps
sbb
sar
test
xor
push
pop
or
inc
ret
sub
out
movs
in
daa
not
xchg
lods
mov
iret
or
mov
stos
and
or
movs
add
aaa
ins
cmp
movs
daa
add
shl
mov
jne
sar
inc
mov
cmps
cmp
cs
lds
test
inc
sbb
out
loope
pop
cmps
dec
out
inc
loopne
cmps
cmp
push
aad
xor
add
rcl
mov
loope
sbb
xor
sti
sub
or
cmps
shl
mov
sub
movs
push
lods
(bad)
cwde
sbb
(bad)
shr
xchg
mov
xlat
das
pop
adc
and
je
xchg
sbb
jb
or
sub
sub
push
jbe
inc
sub
jmp
rcl
inc
(bad)
sar
mov
add
pop
movs
ja
push
xor
mov
add
setae
xor
pop
jno
popf
push
pop
(bad)
ror
ja
ja
sub
dec
adc
ss
ret
mov
sar
and
inc
jl
or
jmp
jo
leave
inc
xchg
call
and
or
arpl
outs
inc
cld
repnz
xor
out
lock
jg
clc
mov
imul
in
retf
sub
loop
clc
cmps
or
mov
and
push
xchg
(bad)
pushf
inc
and
pop
push
inc
jmp
ss
retf
sar
sub
(bad)
sub
(bad)
int
es
std
jno
shl
xor
add
adc
adc
xchg
jbe
mov
icebp
mov
add
mov
jge
les
adc
pop
stos
xchg
pop
into
xchg
(bad)
mov
(bad)
out
xchg
mov
inc
test
out
jae
leave
daa
xchg
mov
icebp
xchg
mov
mov
in
ror
popa
jo
out
dec
outs
add
or
xchg
inc
fs
xor
xchg
(bad)
jns
xchg
clc
mov
pushw
add
jbe
dec
push
in
sub
xchg
pop
leave
inc
inc
add
into
inc
and
pop
push
cdq
jmp
pop
xlat
dec
call
test
pop
xchg
test
loope
arpl
jno
mov
shl
jo
xchg
xchg
pop
add
call
out
mov
add
adc
xor
mov
fldcw
mov
xlat
inc
std
inc
adc
mov
les
mov
mov
sbb
nop
inc
ret
mov
bound
ds
ret
jmp
adc
cmps
sahf
(bad)
leave
mov
mov
jbe
adc
jns
lahf
fbld
cmp
ret
mov
loopne
mov
test
jecxz
es
push
aaa
fistp
push
out
je
repz
aaa
bound
pushf
in
movs
cli
ret
jbe
push
xchg
push
shl
mov
sub
sub
je
shl
sar
add
push
sbb
stc
clc
sub
xchg
xor
jl
cmps
jg
(bad)
sbb
in
xor
shl
add
mov
pop
add
or
(bad)
je
sbb
or
pop
jno
cmp
in
retf
xchg
vphaddbw
cmp
cmp
es
push
dec
cli
or
push
mov
mov
cmps
idiv
mov
cli
and
sbb
xchg
shl
adc
adc
adc
test
movs
jae
pop
and
xor
out
pop
fucomp
and
ss
jge
aaa
inc
pop
outs
or
mov
(bad)
jecxz
xchg
scas
sbb
aas
daa
into
push
int3
out
inc
xchg
out
rcl
rcr
cmps
or
lock
out
or
lea
(bad)
cdq
mov
movs
adc
outs
mov
sbb
mov
cwd
bound
ror
hlt
pop
test
xchg
add
into
dec
into
or
pop
popa
xchg
push
jbe
pusha
xchg
cdq
outs
(bad)
mov
out
(bad)
out
(bad)
mov
stos
sar
xchg
cmp
sti
inc
arpl
inc
xor
(bad)
(bad)
xchg
in
mov
in
cmp
addr16
xchg
and
clc
addr16
xor
(bad)
test
jl
(bad)
sahf
mov
dec
adc
jg
aaa
enter
cmp
cmp
xchg
test
pop
push
adc
clc
adc
pusha
push
test
push
stc
enter
push
outs
sub
and
ror
jno
sbb
dec
pusha
pop
mov
test
add
sbb
scas
cmps
xor
xlat
cmps
fwait
mov
cmps
in
pop
push
movs
jnp
sbb
inc
data16
cmps
outs
jbe
jecxz
(bad)
adc
icebp
data16
mov
shl
push
(bad)
cmp
pusha
leave
aad
xchg
mov
xchg
sahf
xchg
and
mov
retf
jbe
and
and
xor
adc
aas
xchg
mov
dec
sbb
jb
push
sbb
hlt
shl
clc
add
loop
adc
sbb
xchg
adc
push
push
push
mov
ss
jne
aam
loopne
pop
pop
mov
or
jbe
mov
cmps
xchg
add
fcomi
xchg
cmps
stc
stc
loop
out
arpl
sub
sub
out
adc
loope
jge
pop
mov
push
xchg
out
ja
outs
dec
xor
aaa
and
jno
je
scas
xchg
push
xchg
loopne
xchg
cmp
rol
push
sahf
mov
aas
mov
xchg
in
adc
stos
int3
outs
cmp
pushf
clc
mov
jg
mov
fwait
stos
iret
mov
cmp
mov
dec
mov
xchg
xlat
scas
cli
add
sub
push
cmp
popf
test
push
jecxz
jbe
xor
mov
lods
aad
ja
adc
xchg
pop
jmp
sub
and
mov
jg
adc
inc
hlt
xchg
les
mov
inc
and
les
cmps
xchg
mov
fcom
pop
aad
shl
xor
pop
es
adc
xchg
in
lea
(bad)
cmp
and
jb
cmps
ss
not
(bad)
ds
(bad)
stc
rol
loop
pop
mov
mov
mov
cdq
push
or
add
test
add
xchg
pop
mov
pop
addr16
out
and
iret
jecxz
daa
daa
daa
or
call
ficomp
out
popa
sbb
out
inc
out
retf
xchg
push
sahf
push
push
add
pop
jno
out
jp
dec
mov
loope
mov
adc
cmps
inc
cmp
addr16
lock
shl
mov
lods
push
fbld
shl
sahf
inc
pop
inc
xchg
jne
(bad)
addr16
cmp
and
imul
fcomp
pop
(bad)
neg
lea
bound
cmp
push
adc
rcl
mov
pop
pop
and
mov
xlat
mov
mov
xor
pop
inc
(bad)
mov
mov
mov
mov
(bad)
xchg
scas
or
jns
mov
pop
xor
jnp
push
mov
std
jecxz
adc
sbb
xor
fadd
retf
sub
xchg
pop
lods
xor
push
mov
ja
scas
ss
adc
mov
mov
jle
je
outs
xor
pop
ret
call
push
rol
int3
push
ficom
jmp
ret
sbb
movs
and
addr16
push
aaa
popa
jno
and
mov
repz
lods
(bad)
adc
repz
mov
fbstp
push
or
shr
and
stc
pop
pop
adc
inc
fldcw
into
es
push
stc
enter
sbb
xor
mov
cs
mov
xchg
push
dec
mov
xchg
rcl
out
cwde
sbb
mov
test
dec
(bad)
call
xor
push
mov
mov
ja
hlt
aad
push
jae
or
pop
stos
xlat
ds
(bad)
int
test
lods
imul
aaa
inc
(bad)
pop
mov
push
add
leave
inc
inc
mov
addr16
shl
push
mov
xor
jecxz
xor
push
sub
sbb
mov
and
aaa
jae
and
fbstp
push
iret
imul
xchg
adc
aaa
sub
(bad)
test
jmp
adc
mov
push
xor
or
xchg
mov
jns
push
inc
push
daa
adc
sub
(bad)
pusha
sub
iret
test
repz
rcr
push
xchg
xacquire
arpl
and
es
rcl
jl
xchg
(bad)
xchg
movs
scas
xchg
inc
test
mov
or
mov
je
mov
test
lahf
js
lea
popa
sbb
pop
jmp
js
sub
mov
ret
xchg
sub
jmp
mov
ret
pop
rol
call
jmp
fdiv
xor
mov
add
push
cs
jae
inc
nop
mov
mov
adc
ins
(bad)
xchg
cli
test
ror
jle
scas
(bad)
mov
(bad)
sub
jp
mul
or
fld
pusha
xchg
or
outs
mov
inc
daa
pop
test
xchg
repz
cmps
cmp
and
sub
clc
cmps
dec
(bad)
jmp
inc
je
fnstenv
test
out
fbstp
mov
das
jns
jb
xor
(bad)
(bad)
call
jo
data16
ret
test
xchg
aaa
adc
pop
cmp
ja
xchg
xchg
nop
and
sub
gs
aam
cwde
je
mul
mov
inc
(bad)
mov
into
pop
push
add
arpl
xor
mov
push
sbb
or
lods
bound
mov
sbb
pop
xor
push
mov
push
jg
jo
sahf
aad
cmc
mov
xchg
ret
cmc
push
out
pop
mov
jne
sbb
adc
mov
xlat
xchg
ud0
shl
mov
int3
les
pop
push
push
sub
push
cmp
fisub
fcomp
test
test
inc
into
or
mov
les
aas
adc
pop
in
out
ins
daa
outs
xchg
imul
rol
add
icebp
imul
mov
dec
in
mov
mul
mov
fsub
xor
sub
bswap
sahf
or
xchg
push
adc
mov
mov
pop
pop
push
fadd
inc
xor
jl
inc
cmovbe
push
fistp
or
pop
and
out
es
out
shl
push
or
push
fwait
mov
cld
sub
mov
retf
ja
(bad)
frstor
mov
push
and
pop
xchg
ss
data16
fisub
xchg
and
dec
xor
(bad)
and
enter
xchg
mov
add
xchg
fcomp
test
push
out
add
xor
shl
aad
(bad)
xor
mov
daa
shl
inc
pushf
data16
cmp
add
aad
mov
xchg
addr16
pop
pusha
fimul
xchg
cmps
fidivr
mov
stos
add
ss
cmp
push
pushf
and
xchg
jmp
lea
(bad)
ins
nop
adc
inc
sbb
gs
pop
xchg
push
popf
in
int3
sti
xchg
and
scas
mov
adc
aaa
cmps
(bad)
mul
xlat
inc
daa
call
fistp
mov
sub
adc
aad
mov
scas
cli
dec
or
and
pop
daa
add
push
je
adc
and
or
mov
inc
push
dec
rcl
or
inc
out
rcl
inc
lods
cs
out
(bad)
push
cmps
mov
and
jp
test
out
xchg
push
and
(bad)
pop
xchg
out
outs
xor
daa
push
shl
jae
add
ja
or
mov
cld
and
fild
push
js
adc
shl
mov
fbstp
repnz
ja
test
out
xchg
push
arpl
mov
dec
call
xchg
out
jmp
movs
pushf
push
push
call
aaa
mov
jno
and
adc
jge
ret
push
jbe
xchg
test
bound
into
ret
out
test
lds
mov
aaa
jo
mov
(bad)
xor
jmp
(bad)
(bad)
aas
out
nop
pop
leave
pop
xlat
xchg
and
xor
cmp
jne
out
fistp
fsub
sbb
sbb
push
pop
xchg
mov
inc
mov
out
cmps
fisubr
mov
mov
push
mov
scas
lahf
push
aad
ds
add
(bad)
pop
es
add
cs
in
push
mov
imul
shl
push
adc
push
or
cmc
fnstenv
xchg
adc
nop
add
(bad)
push
inc
ret
inc
nop
add
add
mov
xchg
aas
in
movntq
or
pop
loope
pop
bound
sbb
addr16
sti
int
mov
xor
xchg
jae
cmps
inc
sub
gs
pop
dec
leave
inc
jb
sahf
shl
(bad)
out
jbe
cwde
cmp
(bad)
cs
inc
inc
xor
jns
jbe
lods
sbb
mov
fidiv
cmp
ja
es
push
into
adc
inc
iret
das
popf
inc
push
xlat
sahf
mov
adc
(bad)
adc
push
pop
repz
push
imul
nop
inc
sbb
in
sub
xlat
push
pop
out
out
rol
and
sti
push
enter
xor
and
jns
cmp
sti
pusha
fs
push
cmp
xor
jne
inc
push
xchg
mov
add
div
inc
dec
rcl
inc
mov
jns
mov
je
addr16
pop
repnz
test
test
outs
cld
rol
mov
dec
cmp
pop
sbb
push
inc
imul
cmps
add
mov
mov
mov
in
jge
ret
and
xlat
push
popa
movs
push
push
(bad)
mov
xchg
emms
xchg
iret
mov
push
xchg
(bad)
dec
sub
rcr
jg
outs
xor
xchg
ds
js
mov
lods
inc
jp
int3
jmp
xchg
dec
mov
fcom
and
idiv
mov
inc
mov
jo
daa
test
pop
inc
movs
push
fldcw
xchg
xlat
rcl
out
jns
dec
push
mov
xor
jge
and
out
out
and
xchg
loop
movntq
sbb
lds
add
out
inc
sbb
push
inc
(bad)
jg
call
push
mov
dec
push
retf
(bad)
pop
push
mul
pop
mov
mov
jl
ss
push
pop
inc
in
cmp
repnz
xchg
ficom
xlat
addr16
cmp
cld
mov
js
ja
adc
dec
sbb
sbb
call
jmp
mov
aaa
cmp
ins
sub
xor
daa
and
push
jno
push
xchg
(bad)
jo
push
out
adc
pop
inc
out
scas
jp
jle
adc
sahf
cld
sub
out
push
pop
addr16
call
or
enter
out
xor
xchg
cmp
ja
in
push
fs
cmovnp
push
mov
fwait
mov
inc
test
mov
stos
cmps
lods
push
outs
retf
lock
mov
test
sub
mov
sub
xor
aas
and
xchg
cmps
daa
xor
sub
(bad)
rcl
int
(bad)
dec
xor
inc
(bad)
cmc
sahf
and
les
xor
sbb
jp
mov
mov
push
fs
mov
sbb
mov
xchg
mov
xor
retf
and
mov
aaa
jnp
pop
test
xchg
mov
mov
push
push
mov
inc
cmp
push
or
bound
pop
and
mov
push
xchg
jp
mov
dec
in
mov
scas
push
neg
cmps
out
xchg
shl
pusha
adc
xchg
fld
add
test
scas
ins
cmps
jge
mov
out
cmp
scas
or
jecxz
lds
or
or
cmova
pop
mov
jo
push
loop
jbe
sub
in
fldenv
idiv
rol
into
faddp
xchg
sub
cmp
out
bound
pop
adc
in
fcom
push
xchg
call
sub
cwde
jmp
or
mov
xchg
add
aas
fst
xchg
inc
mov
add
and
out
ffreep
ins
lods
les
fistp
inc
in
inc
out
mov
(bad)
test
aaa
pop
jbe
mov
mov
add
xor
les
jae
dec
outs
add
jae
lahf
dec
mov
es
bound
in
and
daa
call
sti
mov
jno
push
es
mov
or
xor
lds
cmps
xlat
stc
jb
test
mov
xor
jmp
sbb
inc
sbb
pop
sbb
pop
sub
pop
test
fwait
jmp
mov
push
mov
and
or
push
cmp
movs
cwde
mov
js
fwait
jns
pop
dec
movsx
adc
(bad)
lea
add
in
aam
add
ins
push
xor
or
cmps
(bad)
cdq
inc
sbb
scas
loopne
xor
ss
mov
fild
lock
cmp
mov
mov
lock
aas
push
into
push
cmps
mov
jg
adc
out
pushw
jbe
shr
cmps
ret
sub
cmp
test
in
test
add
lahf
push
gs
jae
cmp
aaa
repz
call
sbb
jmp
or
adc
in
dec
cld
clc
daa
int
push
xlat
(bad)
xchg
mov
cmp
nop
aaa
inc
cs
pop
(bad)
inc
xor
jle
jmp
loopne
(bad)
sub
bound
sub
gs
inc
push
pop
xchg
add
jb
add
push
aam
test
mov
push
xchg
(bad)
jb
cmp
pop
adc
and
jb
sbb
aaa
shl
out
mov
test
ja
das
jecxz
sbb
mul
xchg
(bad)
sub
and
mov
in
xlat
pop
cmps
ror
push
pop
cld
pop
add
call
in
push
into
dec
in
xchg
xchg
stc
shl
fidivr
cmc
cmp
lds
jnp
(bad)
rcr
aaa
gs
js
out
sbb
mov
stos
arpl
ins
cmps
daa
adc
push
jns
aam
pushf
pop
or
(bad)
cmps
ins
add
sub
mov
dec
in
ja
(bad)
pop
jge
popf
ins
adc
mov
(bad)
fldenv
iret
int
adc
cmc
popf
mov
jecxz
lds
adc
ins
ins
inc
mov
xor
push
adc
adc
dec
sbb
lock
xchg
pushaw
(bad)
push
aaa
out
in
shr
push
sahf
(bad)
fld
pop
and
scas
mov
popa
jbe
pop
mov
in
ss
jmp
aam
xchg
pop
mov
es
mul
inc
movs
hlt
jb
call
mov
mov
push
fwait
mov
sbb
cmc
xor
mov
xchg
cmc
mov
cmps
stos
and
int
ins
ins
xor
push
loop
div
mov
xor
mov
jo
mov
test
jae
out
adc
or
push
shr
inc
mov
or
jbe
mov
dec
aaa
xor
movs
call
test
fs
ins
and
dec
cld
js
and
mov
das
test
lahf
and
dec
and
int3
dec
popa
jmp
cwde
rol
mov
daa
or
cdq
mov
jp
scas
pop
push
int3
adc
fs
outs
sub
test
mov
inc
add
rol
test
mov
inc
and
test
xor
movs
cld
out
dec
add
xchg
cmp
sbb
or
(bad)
in
inc
inc
or
les
scas
retf
jge
lock
jbe
cs
cmp
mov
ds
add
shl
in
mov
mov
jno
and
data16
xlat
push
pop
clts
xchg
aaa
dec
cmps
lods
enter
fbld
repnz
mov
add
fcmovnbe
out
and
push
ss
or
(bad)
call
ret
mov
mov
push
inc
pop
xor
push
(bad)
push
or
rcl
cmps
add
xchg
sbb
ror
xlat
not
jl
adc
push
aas
les
dec
pop
int3
xchg
inc
je
xor
pop
aam
push
or
dec
fwait
data16
add
ret
inc
sbb
cmps
vphaddwd
push
les
pop
push
retf
jbe
cmps
enter
xor
sbb
push
sbb
push
sbb
addr16
sbb
sahf
es
pop
test
mul
pushw
pop
fisttp
or
cmp
xchg
adc
push
test
mov
cdq
pop
mov
jp
ins
lods
outs
mov
jecxz
push
sbb
or
shl
repnz
jnp
inc
mov
out
or
push
sbb
not
ret
scas
out
ret
mov
sub
pop
push
sbb
inc
pop
loop
mov
dec
push
in
sub
retf
movs
mov
rcl
sub
cmp
jno
loop
mov
mov
mov
and
adc
adc
xor
inc
mov
in
cmps
jmp
out
out
cld
xchg
lock
lods
push
mov
add
xchg
retf
cmps
fild
mov
inc
cmps
(bad)
mov
push
sbb
add
je
push
or
aaa
shl
push
in
jle
add
inc
arpl
sti
(bad)
(bad)
push
popa
cs
cmp
hlt
loopne
(bad)
loope
test
enter
mov
enter
mov
addr16
inc
cmps
cdq
mov
aaa
je
loope
(bad)
push
adc
ret
mov
pop
cld
inc
jl
jp
jecxz
push
loopne
dec
repnz
cmps
xlat
xchg
push
xor
and
xlat
cmp
mov
sbb
daa
xchg
xor
inc
inc
(bad)
push
test
daa
pop
bound
pop
and
ins
into
mov
jge
and
lahf
out
retf
jp
and
mov
sti
push
inc
xcrypt-cfb
cmps
out
or
shl
shl
aas
call
(bad)
ins
pop
push
xchg
stos
sub
outs
test
iret
inc
outs
cdq
aas
push
or
inc
push
push
lock
test
push
jne
push
cld
mov
loope
icebp
mov
pop
in
je
adc
mov
push
mov
dec
push
rcl
shl
enter
adc
lds
bound
imul
push
and
jbe
nop
cmp
add
xor
das
test
es
into
jg
adc
daa
inc
jno
mov
mov
add
pop
icebp
mov
pop
push
mov
call
rcl
mov
dec
imul
jbe
inc
(bad)
adc
xchg
push
mov
mov
dec
fisttp
push
push
gs
lods
xor
inc
cmps
mov
adc
shl
cmps
fild
(bad)
bound
test
out
movs
xchg
in
icebp
out
lock
jecxz
sub
mov
nop
mov
lock
sub
cmp
sbb
movs
jbe
in
mov
mov
mov
scas
jo
rcl
add
jl
jno
jne
adc
(bad)
mov
addr16
add
inc
xchg
mov
xchg
scas
dec
adc
call
xor
daa
scas
add
push
aam
adc
mov
sar
mov
call
lock
push
cmc
sub
or
add
jmp
and
(bad)
aas
push
push
out
dec
lods
fwait
xchg
shr
gs
daa
imul
(bad)
pop
add
inc
fld
mov
push
jp
mov
inc
hlt
fistp
test
mov
sbb
cmp
movs
and
mov
push
cs
out
daa
mov
shl
fist
aas
not
addr16
out
movs
call
and
imul
or
dec
mov
push
inc
out
pop
mov
not
adc
arpl
ss
adc
cmps
mov
in
and
lods
movs
xchg
lods
pop
xor
(bad)
stc
(bad)
aas
sbb
jle
not
loop
movs
add
push
out
xchg
mov
pop
sbb
add
push
aad
pop
dec
sub
jb
jo
sub
test
scas
cmp
push
and
add
mov
pop
pop
mov
aaa
add
outs
aaa
xor
in
not
cli
add
lock
call
repz
ss
push
mov
mov
jns
cmp
pop
jno
pop
xchg
sar
rcr
mov
cwde
jp
pop
fisttp
jbe
push
fs
out
sub
(bad)
push
sub
test
fldcw
sub
pop
xchg
shr
and
(bad)
and
xchg
adc
leave
mov
dec
push
idiv
lea
mov
xchg
add
xlat
ds
sub
out
push
ja
retf
push
repnz
call
outs
mov
mov
cmps
es
cmps
outs
fmul
retf
mov
jnp
mov
movs
pop
pop
push
mov
je
movs
push
pop
in
xor
or
(bad)
mov
nop
mov
push
xor
xchg
jmp
lods
xchg
jne
or
div
xchg
push
(bad)
out
pop
ds
sar
ja
mov
xor
outs
or
inc
cmp
(bad)
stos
ss
out
(bad)
adc
js
das
dec
xor
test
xor
push
addr16
pop
fimul
and
xchg
jle
repz
call
xor
jbe
arpl
(bad)
pop
xchg
push
cmp
xchg
ja
inc
cmp
xor
xchg
fs
(bad)
int3
addr16
push
cmp
xchg
shr
pop
in
aaa
outs
cs
xor
rcl
or
stos
jge
pop
push
aam
out
sub
jo
data16
dec
xchg
iret
inc
movs
test
sbb
dec
push
inc
out
mov
push
xchg
jmp
pop
imul
test
fcomp
adc
jl
fwait
cmps
dec
mov
xchg
pop
sbb
aam
and
sbb
imul
stc
mov
stos
aad
push
cmp
cs
mov
inc
xchg
aam
mov
rcl
sti
push
outs
cmps
nop
cmps
push
jo
sbb
out
xchg
lock
xchg
xor
add
mov
outs
mov
dec
xor
jbe
loopne
push
cmp
ret
daa
or
mov
loop
out
jo
and
out
fiadd
and
xchg
mov
cmps
mov
mov
xchg
mov
ret
movs
xor
out
inc
shr
ss
stc
jno
xlat
pop
(bad)
pusha
in
shr
lahf
(bad)
out
(bad)
dec
cmp
data16
push
sbb
cmp
das
test
lahf
inc
mov
or
aaa
cs
(bad)
aaa
or
outs
enter
mov
jbe
mov
mov
xor
sub
add
mov
adc
ret
lods
out
add
in
inc
and
arpl
leave
push
cdq
cmps
cmc
icebp
shl
dec
or
mov
jne
aas
lahf
es
ss
movs
fist
xchg
mul
fsubr
xchg
add
(bad)
aad
mov
adc
les
enter
push
in
or
mov
pop
aas
jae
xchg
add
mov
(bad)
mov
out
(bad)
rcl
pop
or
mov
mov
push
fist
es
adc
mov
sti
clc
pop
out
lds
pop
pop
dec
adc
jae
mov
inc
outs
mov
inc
xchg
push
mov
stc
ja
in
ins
push
xchg
adc
adc
and
sub
add
cmps
cmp
cmps
idiv
scas
dec
std
repz
clc
mov
push
inc
dec
mov
arpl
outs
scas
xchg
and
xchg
push
and
loope
pop
mov
add
or
xlat
movs
addr16
fstp
repz
push
cmps
out
(bad)
loope
inc
mov
jl
data16
ins
aaa
clc
ins
jno
mov
int
add
pop
push
mov
movs
sub
cwde
mov
(bad)
data16
xlat
fadd
mov
(bad)
paddq
inc
mov
mov
imul
push
push
rcl
cdq
mov
popf
rol
mov
mov
(bad)
xchg
pop
cmp
in
lds
stos
sbb
dec
xlat
in
push
xchg
clc
les
lods
cmps
ret
push
sub
out
jb
js
(bad)
sub
mov
stos
aad
test
shl
push
arpl
es
pop
pop
lds
xchg
jmp
mov
in
jp
mov
adc
mov
out
pop
in
jge
retf
fild
xchg
test
cmc
fnsave
xlat
test
jne
test
cmp
xor
xchg
inc
icebp
nop
mov
push
mov
lock
cs
jno
adc
push
pop
mov
xlat
xchg
cmp
push
mov
mov
add
push
pop
and
xor
cmp
shr
jl
scas
ins
push
test
xchg
movs
pop
inc
shr
int3
mov
mov
out
xchg
sub
or
push
aam
mov
push
int3
push
enter
and
push
cmp
sahf
daa
(bad)
loope
xor
call
pop
pop
pop
push
lds
inc
loopne
std
pop
pop
inc
cmps
addr16
movs
jp
sbb
shr
(bad)
addr16
or
or
ja
adc
cdq
test
and
(bad)
xchg
ds
and
sbb
ss
push
es
in
jns
not
cmp
movs
mul
mov
jecxz
cli
inc
mov
and
jge
push
(bad)
cmp
es
mov
mov
xchg
adc
jne
push
pop
add
stos
in
loop
sub
add
imul
add
(bad)
js
loopne
xor
(bad)
xchg
mov
mov
repz
push
inc
sti
je
loopne
movs
push
inc
adc
(bad)
(bad)
push
mov
xor
push
retf
cmp
cmp
mov
pusha
leave
inc
xor
dec
push
push
push
mov
push
sbb
outs
cmp
mov
mov
add
cld
inc
mov
pop
pop
aam
fsub
out
stc
(bad)
xchg
xchg
pop
jne
leave
mov
vpextrq
ss
add
sub
js
pop
mov
dec
pop
icebp
xchg
retf
rol
out
push
cdq
push
cwde
int3
and
sti
jbe
mov
outs
xor
mov
push
nop
cs
mov
inc
push
dec
add
data16
out
pop
or
mov
popa
jb
xchg
add
repz
dec
(bad)
aad
addr16
push
jge
aaa
pop
xchg
jmp
inc
xlat
xchg
or
push
pushf
pop
addr16
pop
jge
(bad)
popa
rcr
in
xchg
xor
ror
mov
bnd
aam
mov
adc
and
mov
(bad)
scas
nop
mov
(bad)
(bad)
inc
(bad)
cli
not
xor
cmp
int
xchg
jo
jno
jo
in
cmps
lahf
lahf
aad
xchg
clc
mov
mov
push
ins
or
popa
pop
mov
pop
inc
mov
inc
sbb
push
out
xor
popf
jle
push
loope
ret
xchg
data16
pop
inc
xor
xchg
push
sti
pop
stc
mov
mov
mov
les
ds
iret
or
(bad)
mov
xor
add
xchg
pop
mov
jae
jg
adc
sahf
scas
sub
xor
outs
mul
sub
pop
push
xchg
out
push
xchg
cmps
cmp
retf
loope
out
xchg
les
pop
or
xor
adc
mov
pop
jnp
add
scas
cwde
in
rcr
aaa
cmp
dec
neg
arpl
jo
sbb
sbb
cmps
or
xchg
rcl
xchg
dec
jae
xchg
icebp
sar
call
cdq
pop
jnp
mov
sbb
jmp
in
nop
push
add
pop
adc
fiadd
xchg
in
add
mov
fcmovnbe
shl
sbb
add
add
outs
ror
mov
movs
pop
xor
and
jbe
push
das
pop
scas
test
mov
inc
adc
ss
add
retf
test
or
pop
xchg
inc
push
mul
in
xor
fiadd
fiadd
out
inc
push
adc
inc
retf
aam
pop
jle
xlat
test
ja
mov
inc
adc
push
inc
pushw
inc
or
ja
and
sub
pop
jg
pop
div
cmps
sbb
sti
shl
xchg
into
pop
aas
push
mov
inc
mov
mov
stc
cmps
cmps
xor
push
add
es
mov
cmc
add
aas
mov
loopne
pop
sub
(bad)
or
pop
xchg
sub
adc
pop
popa
sti
xor
out
adc
(bad)
mov
jl
xor
cmps
lock
mov
outs
add
inc
shr
outs
inc
rsqrtps
push
inc
(bad)
(bad)
call
sub
fnstcw
adc
push
shl
in
imul
ins
jb
aam
mov
push
dec
fs
ret
ja
mov
push
(bad)
adc
jno
xchg
and
test
mov
out
orps
popa
stos
jne
inc
addr16
jo
fs
in
cmp
(bad)
push
test
sub
mov
aaa
inc
pop
push
aaa
andps
hlt
addr16
movs
(bad)
ja
and
into
hlt
jge
mov
mov
sbb
sbb
adc
or
loope
xor
mov
fild
or
and
into
pop
iret
push
xchg
jnp
dec
cld
rcl
push
pushf
mov
call
cmp
test
cmc
repnz
adc
pop
shr
data16
sbb
pop
jg
movs
repnz
jle
ret
pop
dec
add
dec
xor
jb
call
inc
mov
loopne
xchg
xchg
adc
fs
bound
out
fsub
pop
and
test
mov
and
cmps
sub
mov
adc
mov
inc
adc
mov
(bad)
data16
or
xchg
(bad)
dec
in
and
retf
jns
fisttp
and
xor
push
adc
(bad)
in
lock
lods
aad
and
and
inc
sbb
add
div
mov
sti
shl
mov
ja
lock
add
jmp
call
xor
and
gs
pop
cmps
das
xlat
mov
fucom
and
(bad)
movs
xlat
mov
mov
rol
jbe
jbe
xchg
push
and
mov
lods
repz
gs
loop
jecxz
xchg
jns
test
xor
push
inc
out
inc
test
fild
mov
sbb
test
mov
jae
mov
(bad)
sub
pop
out
xchg
sbb
push
mov
outs
(bad)
mov
mov
mov
mov
xlat
scas
jp
in
leave
mov
ja
push
sti
xchg
ret
pop
adc
pop
std
sbb
int
xor
es
imul
mov
cwde
outs
xchg
ret
iret
sbb
ret
mov
inc
aad
ss
ins
test
in
mov
push
sti
inc
mov
mov
lock
pop
xchg
mov
mov
inc
addr16
(bad)
or
xchg
cmp
out
push
xchg
mov
mov
stos
out
jp
xchg
add
mov
or
ins
pop
or
jne
jmp
adc
in
xor
jg
dec
into
out
xor
cmp
clc
ja
out
mov
xlat
or
repz
(bad)
jmp
ds
cmps
cmc
out
sbb
call
dec
xchg
mov
sar
mov
mov
pop
xor
in
pop
out
xchg
gs
sahf
xor
test
int3
sahf
mov
inc
cli
(bad)
jo
(bad)
adc
push
shld
stc
lea
pop
cmp
mov
jae
push
cmp
out
add
std
rol
addr16
daa
loop
dec
addr16
jo
push
xor
repz
addr16
jp
sahf
dec
and
inc
inc
lods
ret
enter
dec
sbb
sbb
add
mov
mov
inc
cmovg
fldcw
mov
fcmovb
movs
scas
xchg
cs
idiv
push
cmps
ja
pop
sub
arpl
dec
lods
loope
outs
cmps
int3
ja
xchg
imul
xor
ds
push
cmp
pop
sbb
mov
jg
add
pop
adc
(bad)
mov
cmp
sti
and
push
push
and
ss
out
mov
pop
test
jbe
lods
daa
fdiv
push
rol
daa
jecxz
int
mov
es
cmps
cmp
mov
lods
sub
cmps
push
add
lds
cld
mov
pop
push
div
ins
cmp
mov
xor
(bad)
sbb
aas
or
ins
call
sub
mov
dec
std
fwait
ss
mov
aas
jle
loopne
rcr
xchg
aaa
pop
adc
not
mov
fisub
dec
(bad)
push
mov
loopne
pop
adc
jbe
push
cwde
sti
int3
mov
mov
adc
jbe
add
aaa
mov
cmp
add
(bad)
jne
push
xor
jne
lods
adc
lods
pop
test
sbb
sysenter
push
mov
push
sbb
ror
ja
xor
push
lods
and
into
enter
mov
int3
call
and
stos
xor
jbe
pop
mov
movs
or
add
jbe
arpl
and
pop
add
dec
xchg
xor
ret
xchg
jle
xor
cli
jmp
mov
loop
pop
push
pop
jnp
pop
es
jnp
mov
(bad)
push
les
loope
mov
cmps
sbb
add
stos
xor
(bad)
and
movs
adc
add
div
xor
dec
js
jmp
or
xor
rol
movs
inc
sbb
push
pop
xor
mov
mov
mov
movs
jecxz
(bad)
ds
aad
push
shl
adc
sti
and
push
lock
mov
mov
aas
das
repz
ja
fsub
and
mov
inc
fstp
frstor
pop
lock
ja
or
iret
iret
ja
mov
movs
inc
(bad)
call
or
mov
test
std
in
js
test
add
push
movs
xchg
dec
sbb
mov
push
sti
mov
bound
and
aaa
pop
and
data16
xchg
fiadd
inc
out
pop
push
aaa
sbb
fiadd
loope
or
out
dec
mov
cwde
pcmpgtd
aaa
mov
es
push
pop
fsub
addr16
and
std
lahf
(bad)
jnp
cmps
bound
push
dec
test
rcl
shr
xor
in
add
stos
and
fidiv
or
in
mov
mov
icebp
dec
sub
jge
mov
sar
or
mov
xchg
pop
mov
cmp
(bad)
push
iret
xchg
and
pop
outs
jmp
ds
cdq
ins
jmp
mov
xchg
scas
inc
push
mov
retf
adc
addr16
adc
lds
lock
jns
je
int3
out
dec
fsubr
repnz
adc
add
pushf
mov
mov
dec
mov
pop
add
pusha
das
nop
mov
or
lods
out
push
sub
out
adc
ins
jo
imul
mov
loop
add
mov
or
imul
retf
(bad)
push
test
xchg
jp
push
popa
mov
fwait
mov
mov
push
pushf
xor
add
popa
stos
das
mov
(bad)
adc
jecxz
cmp
idiv
shl
xor
mov
inc
fnstenv
push
mul
mov
adc
movs
dec
and
mov
stc
mov
inc
fs
add
push
enter
rol
inc
sub
cdq
ins
in
cdq
dec
inc
push
mov
xor
aaa
ja
loopne
nop
pop
es
mov
jl
push
pop
lock
mov
fstp
sbb
stos
jmp
ss
es
mov
popa
add
les
jnp
out
push
jne
cdq
movs
mov
lahf
pop
sub
mov
push
xlat
gs
(bad)
mov
out
ja
test
fist
lahf
mov
mov
mov
fwait
fs
sub
out
pop
mov
cmp
inc
jns
push
inc
cmp
cmp
test
fcomip
nop
movs
pop
stos
pop
bound
mov
fist
pop
mov
or
jns
fcmovnbe
out
cdq
rcr
test
div
inc
pop
cmp
adc
xchg
adc
(bad)
pop
movs
add
push
cwde
scas
jge
cmp
cdq
(bad)
fisttp
and
jecxz
mov
pop
push
adc
adc
pop
jae
out
add
jp
in
out
push
cmps
mov
iret
(bad)
loopne
cmp
aam
push
dec
das
add
xor
xchg
add
add
pop
mov
ja
ret
inc
cmps
sahf
icebp
push
outs
adc
push
outs
xchg
sbb
rol
inc
add
cmp
(bad)
jmp
ss
ins
clc
iret
add
xchg
mov
lock
add
pop
outs
mov
or
xor
mov
es
lss
(bad)
es
cli
push
dec
bound
xchg
inc
popf
out
push
add
push
rol
jecxz
stos
hlt
sti
mov
cmp
jp
es
xor
push
adc
jmp
shl
ret
shl
and
jl
dec
out
jge
pop
daa
outs
adc
mov
fdiv
out
mov
iret
jne
shr
fnstenv
addps
push
mov
inc
gs
ret
dec
adc
adc
mov
jb
jg
xor
and
out
daa
xchg
arpl
inc
mov
scas
ins
das
jmp
mov
sbb
xchg
adc
xchg
sbb
add
push
mov
scas
fdiv
ss
push
inc
inc
adc
xchg
push
gs
add
loopne
mov
icebp
fcmovb
jbe
(bad)
es
stos
mov
push
mov
adc
jmp
scas
push
inc
or
aas
test
enter
inc
mov
push
sbb
push
push
dec
daa
gs
and
daa
jns
popw
ret
rol
std
imul
out
loop
inc
push
adc
mov
push
aaa
push
dec
(bad)
ja
icebp
xchg
sub
sahf
jno
and
jns
push
imul
fs
pop
scas
inc
sbb
vmovdqu
ret
jo
jecxz
sbb
pushf
stc
mov
pop
adc
ins
mov
cmp
adc
cli
retf
xchg
xchg
jmp
jmp
mov
aaa
mov
js
daa
ja
mov
xchg
xchg
test
(bad)
movs
imul
into
push
jle
or
(bad)
call
push
lahf
mov
mov
(bad)
and
pushf
jecxz
push
cmp
xchg
cs
push
enter
rol
out
mov
mov
adc
mov
(bad)
jno
ret
dec
xchg
shl
jb
push
jmp
xor
aam
fadd
aaa
xor
imul
call
dec
out
push
xor
push
outs
jo
xchg
inc
push
jae
retf
ror
(bad)
xchg
xchg
(bad)
out
cmp
sbb
or
sub
mov
call
cmp
xchg
xchg
mov
ss
and
xchg
xchg
aaa
push
or
mov
pop
(bad)
out
fs
lahf
or
lds
mov
mov
in
scas
xchg
inc
sahf
clc
fsub
adc
jb
mov
xor
mov
xor
loopne
(bad)
(bad)
mov
cmps
je
les
xor
test
popa
sbb
daa
xchg
fdivr
movs
xchg
data16
xlat
xchg
push
and
shl
popa
or
daa
and
js
dec
cmps
call
neg
xor
(bad)
sbb
and
out
neg
sub
pushf
je
(bad)
adc
fdiv
jle
repz
aad
call
shl
push
call
daa
cs
icebp
bound
push
call
mov
push
and
mov
cld
push
and
pusha
dec
aas
inc
sti
aaa
inc
jecxz
out
fstp
jnp
jb
dec
aam
out
test
and
mov
and
jecxz
inc
mov
mov
pop
fsub
outs
push
test
test
push
inc
add
out
outs
data16
inc
fistp
test
mov
mov
push
gs
mov
pop
xchg
and
pop
push
inc
aad
nop
pop
xchg
stos
imul
aad
cmps
repnz
lahf
fadd
and
inc
push
(bad)
cld
mov
mov
or
push
jmp
cmp
out
cmp
xchg
cmp
aad
and
push
das
push
test
push
jge
div
movs
inc
xchg
dec
fsubr
js
sub
push
push
(bad)
mov
xchg
repnz
xchg
mov
test
mov
jbe
cmp
js
or
es
ror
xchg
(bad)
cmp
ja
or
out
xor
call
ret
xor
xchg
cmps
jmp
outs
test
arpl
movs
movs
out
clc
and
in
mov
gs
aaa
mov
das
jecxz
hlt
dec
add
test
fxch
xor
icebp
mov
jns
pop
dec
xchg
push
into
shl
pop
and
xchg
es
pop
dec
cmp
and
aaa
inc
icebp
pop
les
imul
and
imul
sub
adc
fistp
test
(bad)
push
in
aam
xchg
xchg
loopne
test
fdivr
test
cld
adc
ss
movs
imul
adc
xchg
add
xor
mov
aad
mov
popf
jne
mov
(bad)
and
mov
pusha
xchg
daa
call
fcom
dec
mov
xor
fst
xor
in
inc
push
loopne
mul
jg
sahf
inc
xlat
leave
mov
inc
inc
jno
hlt
in
mov
mov
(bad)
xor
add
div
pushf
in
cmc
ss
cmp
arpl
es
into
outs
outs
icebp
loop
mov
loop
stc
in
adc
sbb
push
loop
aaa
push
pop
xlat
test
inc
and
xor
mov
js
mov
mov
push
pop
jmp
sub
in
lahf
jmp
call
js
mov
movs
adc
add
pop
shr
shl
or
mov
xor
ins
cmp
mov
sub
cli
adc
jl
rcl
jbe
out
lock
mov
aaa
sub
(bad)
mov
daa
push
xor
mov
xor
shr
icebp
out
ret
xchg
sbb
adc
cwde
popa
fstp
push
sub
int
ret
jge
and
out
sbb
inc
adc
js
cmps
enter
add
stos
xchg
test
rcl
inc
mov
(bad)
sbb
jmp
xchg
(bad)
mov
cli
dec
xlat
stc
(bad)
icebp
or
outs
jp
xchg
mov
sar
or
push
(bad)
out
cmps
ss
xlat
mov
mov
add
and
fidivr
stc
shl
sbb
out
std
ja
iret
das
shl
dec
adc
stc
push
fwait
ins
xor
mov
sub
push
xchg
loope
sbb
jg
stc
fidivr
cld
(bad)
repz
inc
mov
mov
not
push
dec
fwait
(bad)
es
pop
push
xchg
stos
enter
cdq
lahf
fidiv
repz
ror
adc
sub
push
xchg
or
clc
push
cld
sbb
push
int3
jge
mov
sub
xchg
cmp
push
push
call
add
pop
adc
aaa
jnp
xlat
adc
jmp
mov
inc
adc
or
lea
add
neg
fs
xchg
or
push
inc
clc
sub
push
push
(bad)
sbb
jbe
(bad)
fbstp
aaa
xchg
(bad)
into
fmul
jnp
outs
ja
xchg
fwait
popa
dec
add
ja
out
stos
mov
aam
pop
loop
pop
mov
inc
(bad)
fisub
mov
push
pop
adc
into
ss
es
dec
iret
cld
popf
imul
dec
xchg
mov
pusha
sbb
and
bound
test
mov
jbe
and
xchg
sub
push
cmps
sbb
cmps
icebp
inc
mov
push
(bad)
adc
retf
pop
icebp
xor
shr
push
pop
mov
dec
(bad)
out
fld
fnsave
mov
push
inc
stc
mov
int3
out
mov
(bad)
cmps
test
mov
es
push
data16
lahf
dec
cmp
clc
xor
repnz
xlat
mov
sar
aaa
cld
fwait
mov
or
ja
push
ss
cmp
pop
sbb
arpl
add
xchg
movs
pop
sbb
jle
inc
sbb
rcl
(bad)
jl
xchg
cwde
or
sar
aas
xchg
push
cld
mov
and
iret
dec
mov
inc
add
mov
mov
cmps
push
cmp
sbb
test
out
cmps
cmp
pop
addr16
cmps
pop
cwde
fisubr
not
add
xor
xor
inc
sbb
inc
push
adc
jns
hlt
sbb
(bad)
xor
int3
push
xchg
xchg
xlat
mov
shr
push
dec
pop
pop
cmps
lahf
mov
ss
scas
out
mov
push
lahf
fs
xchg
shr
or
gs
xor
pop
jge
xchg
aaa
es
in
dec
jmp
mov
xchg
push
and
(bad)
jg
pusha
or
ss
push
(bad)
aaa
aas
push
jecxz
fmul
jae
cmps
jle
or
cwde
adc
push
push
add
arpl
push
cmp
and
aam
repnz
xor
(bad)
jb
aaa
outs
pop
into
gs
push
icebp
fist
fsub
add
test
inc
push
adc
shr
inc
pop
push
pop
ins
out
pop
cwde
pop
mov
jle
xchg
les
div
arpl
in
jecxz
sbb
and
add
jnp
pop
cmps
adc
inc
hlt
cmps
inc
(bad)
sub
mov
push
loope
xchg
cmp
test
pop
out
push
dec
mov
jle
dec
test
aas
xchg
ds
mov
mov
(bad)
fs
lods
dec
sbb
xchg
xlat
sub
xor
xchg
fwait
mov
pushf
push
cmps
stos
inc
and
push
pop
push
into
jbe
loop
fwait
rcr
int
push
pop
push
mov
sub
or
xchg
and
sbb
push
enter
shr
xor
out
mov
out
out
inc
sub
fs
stos
test
mov
addr16
jno
clc
mov
(bad)
mov
bound
push
pop
jo
aad
fimul
test
add
inc
push
out
gs
(bad)
fwait
test
ins
nop
ins
les
add
ins
inc
prefetchnta
mov
fst
cld
icebp
test
ror
inc
not
add
ja
icebp
xlat
xor
jmp
ja
adc
push
push
dec
xchg
mov
in
jmp
adc
xlat
and
shl
xor
sub
(bad)
mov
push
jns
sbb
(bad)
cmp
xlat
pop
aaa
test
movs
ds
jmp
mov
je
mov
xchg
push
add
shl
nop
xchg
xor
out
enter
popa
sub
jbe
aaa
and
div
pop
or
fistp
xchg
push
shl
push
push
inc
jb
xchg
aaa
ss
test
cmps
int3
mov
ret
cdq
test
test
mov
xchg
sbb
jle
jbe
xor
inc
jecxz
repz
xchg
loope
(bad)
out
mov
and
stc
inc
jb
cs
sub
ins
inc
inc
(bad)
into
(bad)
mov
rcr
jmp
pusha
(bad)
add
xchg
in
out
movs
sub
popf
clc
mov
(bad)
out
sbb
test
test
jne
ss
jno
out
ss
ins
sub
adc
out
mov
mov
mov
adc
test
mul
add
nop
ret
add
aad
or
adc
(bad)
sub
ds
aaa
stos
and
mov
das
inc
mov
not
stos
mov
cmps
dec
into
ins
mov
adc
mov
aam
pop
mov
mov
cmp
lock
fidiv
xor
out
jno
ja
xchg
xchg
loopne
movs
xchg
hlt
mov
or
sbb
sbb
lods
call
dec
add
movs
out
jb
out
lods
mov
cmps
enter
rol
xor
pop
pop
clc
xor
imul
push
xchg
and
sub
test
call
xchg
xchg
cmp
cmp
addr16
pop
scas
or
stc
adc
mov
sub
pop
sub
sub
nop
pop
pop
jp
(bad)
hlt
call
xchg
xchg
and
adc
mov
aaa
sbb
mov
(bad)
pop
retf
push
movs
sub
push
push
and
bnd
dec
mov
loopne
call
outs
cmovbe
push
jmp
popa
xor
sub
dec
sar
or
imul
mov
shr
and
sub
xchg
mov
xor
cmps
push
mov
push
pop
xchg
or
push
ja
call
jge
xchg
div
fs
xchg
aaa
data16
stos
(bad)
leave
cmp
adc
pushf
icebp
aam
dec
out
mov
mov
inc
movs
and
push
(bad)
addr16
div
jmp
cmc
(bad)
not
stc
out
aad
push
add
inc
xlat
xchg
and
inc
cmp
test
inc
sub
mov
add
push
xor
lds
pop
and
je
xor
xor
(bad)
push
push
shl
cmps
push
shr
mov
mov
or
ja
adc
fmul
pushw
ss
mov
mov
jne
bound
mov
outs
adc
jecxz
push
imul
mov
dec
pop
inc
jl
jmp
sti
mov
rcl
addr16
data16
mov
mov
inc
and
inc
fnstsw
or
xor
aas
loope
movs
xor
pop
int3
or
cdq
cmp
in
jp
jge
push
inc
les
pop
jae
or
adc
xlat
aas
and
xchg
pop
push
out
std
xchg
mov
jmp
sbb
mov
outs
add
adc
push
out
adc
imul
je
inc
mov
in
dec
mov
outs
call
fdivr
xor
pop
jb
iret
pop
dec
test
xchg
leave
aam
jecxz
jae
imul
(bad)
fnstsw
aas
dec
inc
push
mov
arpl
pop
cmc
jl
mov
jmp
arpl
and
add
mov
(bad)
stos
sub
hlt
jle
test
sbb
mov
pop
inc
(bad)
xor
jmp
jnp
in
(bad)
in
ss
test
mov
ds
hlt
outs
and
rcl
ss
xchg
mov
xchg
xchg
push
outs
shl
(bad)
xor
pop
jmp
imul
inc
gs
xchg
xchg
(bad)
das
mov
mov
pushf
test
cmovge
(bad)
push
add
pop
jg
xchg
dec
inc
stos
shr
dec
daa
ja
or
dec
cwde
shr
or
push
lock
mov
xor
mov
test
or
leave
xchg
es
cmp
fst
hlt
cmps
aaa
cmps
xchg
or
mov
push
sub
xor
iret
push
int
cmp
in
mov
and
inc
out
in
aad
cmps
push
pop
mov
inc
cs
aaa
imul
jbe
lock
jmp
test
nop
cdq
test
fwait
mov
hlt
push
jne
and
fsub
jbe
push
xor
dec
sub
mov
inc
xor
jecxz
add
bound
aad
scas
imul
push
mov
(bad)
jge
sbb
and
push
(bad)
mov
dec
cmps
xchg
cmp
jnp
cmp
inc
add
xor
clc
lds
dec
int3
or
jb
push
stos
mov
or
jae
cmp
xchg
add
sbb
mul
outs
nop
lahf
fdiv
mov
dec
push
adc
xchg
(bad)
movq
xor
scas
(bad)
das
lahf
outs
gs
scas
out
das
pop
add
ja
cmps
movs
inc
int3
shl
jns
enter
aaa
push
adc
test
fsub
mov
out
cwde
gs
les
or
sahf
cmps
xchg
push
iret
push
sub
hlt
ret
jbe
leave
inc
cmps
fld
push
add
dec
sbb
add
inc
push
cs
xlat
pop
int
sbb
iret
mov
movs
xlat
mov
loopne
or
cmp
addr16
adc
xor
repz
(bad)
xchg
mov
adc
aam
pop
dec
push
lea
adc
and
sbb
xor
clc
ret
xchg
fcmove
scas
add
outs
sub
push
inc
inc
pop
ds
loop
out
sbb
movs
outs
xchg
(bad)
sbb
mov
test
pop
and
in
adc
xor
lahf
pop
push
add
(bad)
(bad)
test
out
out
xchg
mov
test
mov
gs
pop
push
cmp
jle
cwde
(bad)
pop
mov
cdq
inc
and
push
xchg
jg
dec
adc
jae
adc
je
push
fs
aas
xchg
clc
out
sbb
adc
scas
sar
inc
mov
cs
push
mov
inc
add
aaa
sub
adc
xchg
push
or
cmps
ins
in
sti
add
dec
sub
jno
sbb
inc
push
jl
push
(bad)
dec
neg
xlat
out
(bad)
daa
jge
ins
push
xchg
dec
ss
cmp
xlat
xchg
(bad)
push
pop
(bad)
mov
es
cmp
or
push
xchg
repz
xchg
push
ret
mov
stos
cs
ja
test
shl
imul
test
sub
sbb
inc
jge
jg
cmp
or
pop
pop
xlat
and
adc
data16
cmps
lods
imul
inc
je
es
sbb
push
fwait
mov
daa
cdq
lea
ja
mov
inc
loop
jmp
xor
inc
les
in
xchg
add
mov
cmp
mov
add
je
xchg
or
je
dec
lahf
jl
mov
mov
mov
adc
in
sbb
(bad)
out
cmps
movs
push
das
scas
into
jmp
pusha
xor
pop
inc
jl
fs
sbb
push
repnz
pop
jns
or
retf
xchg
inc
pop
es
les
inc
int
pop
ret
push
cli
std
jne
in
xchg
(bad)
mov
call
(bad)
out
adc
push
adc
repz
dec
ror
ret
icebp
jnp
pusha
xchg
push
jl
or
xchg
inc
or
push
ss
push
adc
push
sbb
cdq
cmps
add
xor
hlt
or
mov
xor
movs
retf
add
push
and
push
adc
out
mov
mul
aaa
test
xchg
push
mov
inc
push
inc
jmp
push
mov
je
ins
xor
and
jae
icebp
sti
jmp
mov
ja
add
xchg
sub
inc
dec
and
xor
je
push
dec
pop
sti
scas
int3
sbb
lds
out
jae
out
ins
xlat
test
ds
ss
push
loopne
push
adc
cld
cmps
cmp
cs
push
xchg
push
out
xor
shr
retf
mov
pop
out
push
push
dec
clc
jg
add
mov
push
xchg
(bad)
in
xlat
mov
js
not
out
or
cwde
xor
scas
cmp
add
sbb
sbb
les
(bad)
aaa
and
cmps
xor
pushf
or
inc
outs
jmp
hlt
mov
xor
emms
push
(bad)
xor
stos
jb
(bad)
aaa
jmp
in
xor
pop
int3
jne
sub
addr16
mov
test
jle
xlat
jmp
sti
test
mov
(bad)
out
pop
pop
xchg
les
fist
jns
pop
push
xchg
scas
cwde
xor
ss
test
bound
adc
add
xor
addr16
fbstp
sbb
in
(bad)
mov
push
pop
xor
adc
je
xor
jge
(bad)
adc
mov
ficom
xchg
(bad)
ffree
enter
or
inc
or
xchg
jae
nop
pop
mov
sahf
push
ficom
or
add
xor
lds
int
fs
adc
out
leave
mov
mov
push
adc
mov
cmp
je
inc
inc
adc
in
mov
outs
sbb
fstp
or
sbb
fild
push
daa
je
inc
xchg
repz
mov
fsubr
aad
xchg
popa
pop
xchg
movs
addr16
push
daa
mov
das
push
adc
fs
out
mov
sub
cmps
mov
dec
ret
gs
scas
cmps
movs
inc
xor
add
xchg
xor
mov
call
das
in
push
arpl
and
cmp
inc
movs
leave
jae
adc
xlat
sub
xlat
shl
jmp
or
imul
adc
cs
popf
shl
jmp
rol
jno
inc
mov
es
(bad)
out
inc
or
mov
jns
push
bound
js
jge
mov
xchg
lods
push
pop
aaa
mov
or
jb
fistp
dec
jle
xchg
clc
xchg
push
daa
cmp
outs
call
lods
aaa
and
in
xor
mov
clc
inc
mov
(bad)
ret
test
pushf
fld
inc
xor
cs
mov
pop
out
xadd
xor
inc
mov
popa
dec
cmp
jo
in
fwait
inc
inc
or
adc
inc
test
cmp
lods
jecxz
lea
inc
fbld
aas
outs
mov
add
mov
outs
jae
gs
dec
xchg
inc
sub
icebp
inc
inc
jmp
push
rcl
jb
lahf
add
ja
lahf
cmp
xor
push
push
cmp
pusha
loope
aad
xor
pushf
mov
sbb
ret
jb
and
rol
sbb
out
(bad)
ja
mov
xchg
mov
imul
inc
push
jge
(bad)
mov
inc
or
adc
jo
addr16
and
cmp
nop
and
js
push
mov
lea
jns
jb
mov
outs
stos
push
in
mov
call
xlat
push
sub
xor
mov
fdiv
sti
push
sub
(bad)
cmp
mov
push
(bad)
addr16
mov
scas
dec
and
std
popf
(bad)
fdivr
(bad)
shr
fs
xchg
xchg
div
inc
out
cmpxchg
retf
adc
inc
loope
xor
xchg
call
mov
mov
adc
in
rol
add
dec
push
test
dec
aad
dec
mov
mov
out
iret
iret
ja
sbb
nop
sbb
out
arpl
outs
push
cmp
aaa
sar
std
push
dec
pop
inc
call
push
fldl2t
cmps
(bad)
loope
xchg
lea
push
in
ficomp
add
and
push
push
jbe
out
and
xchg
and
iret
int
out
cmp
and
data16
int
into
pusha
call
inc
push
sti
push
xlat
adc
fwait
mov
jmp
xchg
dec
cwde
lock
mov
mov
push
xor
jmp
adc
(bad)
jbe
inc
je
push
add
push
jmp
adc
mov
mov
add
test
cdq
data16
and
sub
sbb
inc
dec
mov
sub
retf
sti
or
xor
jb
cmp
add
mov
ret
inc
xlat
mov
sbb
into
fisttp
rol
ss
(bad)
in
dec
out
out
ins
pop
jno
or
test
cmp
and
pop
mov
daa
fst
push
xchg
enter
push
sbb
out
rol
test
inc
in
hlt
dec
add
mov
int3
aaa
retf
cmp
out
xchg
xor
pop
or
call
cmp
(bad)
and
fdivr
push
push
ja
mov
xchg
and
lods
mov
repnz
in
into
scas
sub
(bad)
mov
sub
xchg
jl
shrd
sbb
jmp
add
sbb
scas
imul
or
pusha
test
hlt
pop
fld
lods
cmp
into
(bad)
cmp
mov
out
movs
dec
add
xor
outs
or
xor
inc
cmps
(bad)
sub
xchg
mov
pop
add
inc
and
cmc
stc
push
sbb
retf
cld
sbb
sbb
(bad)
mov
mov
retf
push
pop
neg
sbb
inc
lods
lahf
lods
sti
push
mov
push
aaa
in
sti
dec
es
xchg
mov
jmp
cs
inc
mov
mov
adc
adc
stc
leave
or
test
push
ds
into
das
ficomp
test
jge
shl
rol
imul
rcl
mov
sahf
dec
scas
jmp
aaa
stos
jecxz
fmulp
xor
fidiv
rcl
adc
es
push
popf
out
sub
(bad)
fbld
push
mov
(bad)
fistp
and
ins
sahf
pop
lods
shl
pop
add
cmps
ficom
movs
dec
ds
cmp
gs
jp
fiadd
loopne
dec
add
adc
pop
cmp
pop
shl
mov
(bad)
xchg
jl
or
aas
inc
cmps
cmps
mov
sbb
ja
int
fld
cmp
mov
imul
pusha
mov
push
sub
or
pop
push
sbb
xchg
bound
xchg
push
ret
adc
push
add
ja
mov
push
aaa
mov
xlat
stos
out
imul
ss
std
imul
push
xchg
es
(bad)
ins
cmc
adc
inc
imul
out
sbb
out
xor
sub
pop
(bad)
jbe
xchg
mov
(bad)
mov
or
push
ja
pop
out
(bad)
daa
ss
ss
jbe
out
cmp
call
mov
push
jp
mov
call
xchg
xchg
mov
jmp
adc
daa
and
sub
adc
pop
hlt
rol
mov
mov
add
loop
push
cmps
ss
or
push
adc
jns
(bad)
addr16
mov
repnz
mov
cmp
lock
test
dec
xchg
pop
jbe
and
aaa
and
jmp
xchg
in
call
addr16
js
push
es
ss
out
pop
push
xchg
push
jbe
dec
push
mov
test
lahf
out
call
jae
xchg
jo
xor
ret
push
pop
inc
aaa
jbe
fbstp
mov
not
es
loope
jns
inc
xor
push
and
push
pop
data16
mov
(bad)
js
xchg
(bad)
mov
inc
mov
ins
push
lds
cmps
jo
pop
mov
div
out
xchg
sbb
outs
test
enter
inc
and
(bad)
cs
xchg
ret
in
mov
jmp
sti
shr
or
cmp
and
inc
jno
jns
in
jp
xchg
iret
inc
(bad)
cmps
push
test
and
fcom
int
jecxz
int3
ret
pushf
xlat
ss
inc
xchg
cmp
xchg
enter
jb
jae
sub
retf
cmp
shl
outs
cmps
fdiv
adc
test
jmp
daa
je
shr
add
cmp
adc
(bad)
out
jecxz
and
mov
aaa
mov
repz
ja
add
jp
pop
pop
(bad)
lahf
test
or
scas
sub
(bad)
jmp
test
push
push
mov
outs
cmps
xchg
jnp
rcl
cmp
jecxz
mov
je
push
sbb
mov
jo
or
es
loop
and
clc
mov
xchg
(bad)
scas
mov
dec
xchg
adc
jo
(bad)
adc
mov
xor
stc
xchg
pcmpeqd
inc
das
(bad)
xor
mov
inc
inc
jno
test
fadd
cmc
jno
mov
xchg
push
mov
xchg
pop
ret
inc
mov
cmps
push
(bad)
push
mov
aaa
inc
mov
inc
mov
jl
xchg
call
(bad)
pop
mov
mov
movs
ins
sub
pop
cmp
arpl
xchg
loop
xchg
ret
mov
xor
or
push
mov
adc
test
add
repz
clc
inc
movs
push
dec
sbb
xor
pop
xchg
sub
or
imul
addr16
repnz
pop
aam
sbb
jns
sbb
pop
jmp
xor
pusha
sub
adc
div
pop
push
pop
xor
ja
sbb
je
cmc
or
icebp
sti
imul
mov
shl
stos
sub
loop
push
dec
bound
rcl
sbb
ret
xchg
daa
or
cmps
inc
inc
or
pushf
sbb
push
cmp
adc
ins
data16
pop
in
mov
pop
bound
add
mov
xlat
sub
xor
loope
out
nop
mov
pop
adc
stos
cdq
adc
xor
arpl
adc
mov
mul
in
ins
jo
sub
xchg
ss
ret
cmp
stos
mov
adc
aaa
out
fcmovbe
ins
sub
es
push
cmp
ss
movs
js
dec
sbb
fld
adc
cmc
push
pop
xor
adc
(bad)
test
jp
pop
test
es
inc
fadd
daa
xchg
adc
shl
xchg
mov
mov
push
push
mov
inc
test
xchg
test
addr16
test
jbe
(bad)
repz
adc
pop
cmc
addr16
clc
dec
dec
adc
dec
adc
mov
jp
pop
xor
mul
and
xor
stc
bound
xchg
xchg
cmp
fcmovnb
mov
adc
mov
bound
inc
xor
ret
aad
int
xor
ja
jp
jns
push
scas
mov
cmp
mov
retf
daa
xchg
mov
push
or
pop
mul
jbe
jns
loope
les
pusha
out
pop
(bad)
scas
aas
or
inc
lock
neg
imul
ja
or
div
mov
mov
sub
sub
es
mov
xchg
jl
fmul
push
(bad)
call
ret
mov
or
stos
clc
mov
xchg
mov
ins
movs
daa
repnz
not
lea
inc
sbb
inc
add
and
xchg
test
mov
ret
cmp
jns
ss
ja
pusha
push
add
push
sub
xchg
pushf
push
(bad)
je
gs
or
or
inc
xchg
mov
addr16
sbb
not
repz
sbb
add
sbb
mov
mov
ret
repnz
jp
jbe
push
retf
movs
pop
ja
mov
repz
out
pop
sub
ja
aaa
sbb
clc
mov
fcomp
retf
push
push
scas
daa
out
in
mov
dec
dec
ret
xchg
xlat
out
cmc
ss
arpl
mov
push
mov
mov
mov
mov
ja
cmp
xchg
call
mov
pusha
out
jbe
xchg
cli
mov
mov
daa
in
mov
push
push
pop
mov
fimul
pop
(bad)
fwait
adc
es
ss
sub
xchg
mov
mov
addr16
push
jg
bound
xchg
ins
push
cmps
sti
mov
or
mul
aaa
imul
pusha
out
mov
shl
mov
sti
push
setae
imul
inc
mov
sub
out
xchg
mov
pushf
fidivr
mov
call
test
test
fwait
repz
neg
cmp
xchg
movs
daa
fdivr
(bad)
mov
xchg
rcl
xchg
xlat
push
pop
mov
rcl
and
mov
daa
(bad)
pop
imul
mov
addr16
mov
fisttp
jmp
xchg
shl
mov
mov
lahf
jbe
aaa
out
push
inc
push
pop
or
test
xchg
(bad)
mov
jmp
xchg
mov
(bad)
xor
push
fs
jnp
jns
push
xor
daa
retf
inc
xor
cmp
loop
sbb
mov
pushw
mov
ja
ret
das
scas
add
ja
rcl
test
xchg
enter
inc
push
retf
adc
test
cmp
sub
div
cli
dec
(bad)
and
or
in
push
pop
jmp
(bad)
jbe
cmc
sub
clc
sub
out
out
fwait
(bad)
out
jb
xchg
(bad)
add
xchg
es
es
jne
cli
jge
out
mov
in
mov
lea
add
das
adc
cmp
add
dec
mov
mov
cmp
or
pop
and
jg
inc
sbb
mov
xchg
test
and
nop
xor
lahf
enter
sbb
add
loop
sbb
outs
or
sti
push
jmp
shr
aad
in
jbe
cli
clc
push
jecxz
sub
pop
adc
div
push
mov
xor
scas
mov
popf
sub
pushf
sbb
scas
mov
mov
cdq
retf
out
xor
jmp
mov
push
je
jl
mov
sbb
loop
lock
lock
cmc
xor
shr
pop
xchg
sbb
std
pushf
adc
inc
mov
mov
xchg
in
nop
mov
scas
mov
dec
adc
mov
adc
xchg
mov
push
cmps
jno
push
ins
xor
and
lods
in
movs
retf
dec
(bad)
imul
imul
or
adc
aaa
add
and
pop
cmp
inc
cwde
call
xchg
mov
mov
mov
inc
xor
ret
lds
leave
xchg
js
jmp
ins
cli
or
arpl
(bad)
stos
push
push
sub
sti
add
daa
shl
mov
fwait
pop
jns
xchg
jmp
out
xlat
mov
inc
cmp
out
das
fstp
and
(bad)
cmps
xchg
inc
clc
ss
daa
ret
pop
(bad)
mov
and
jmp
shl
xchg
fild
loop
push
outs
shl
sbb
adc
cmp
nop
icebp
and
xchg
scas
mov
push
xchg
ja
(bad)
fstp
jno
pop
mov
xchg
cmp
adc
xchg
cmps
ss
ss
pop
lods
mov
ret
fmul
dec
pop
arpl
ins
cmp
nop
retf
popa
popf
inc
js
sahf
out
sti
(bad)
mov
cmp
rcl
inc
fisttp
mov
mov
sbb
sub
sub
xchg
call
imul
mov
ss
sbb
xchg
xchg
mov
and
in
pop
push
mov
push
dec
dec
and
pusha
mov
(bad)
je
hlt
ja
xchg
xchg
jo
and
arpl
shl
xor
out
sub
loope
dec
inc
pusha
push
outs
pusha
mov
sub
or
jg
mov
arpl
cmps
in
mov
daa
sub
les
push
add
cmps
cmp
push
add
es
inc
lahf
xor
aaa
add
xlat
mov
sbb
jge
inc
imul
not
sub
sti
ret
imul
inc
xchg
pop
jbe
lods
fld
es
int3
xchg
imul
or
mov
xchg
jbe
mov
cli
adc
dec
xor
test
lock
sahf
cmp
and
enter
imul
jbe
xchg
ror
popa
pop
(bad)
ds
push
xchg
cdq
push
popa
cmc
inc
ja
push
hlt
stos
cdq
daa
push
fist
aad
push
(bad)
(bad)
cmps
test
add
adc
xchg
or
pop
add
nop
or
xor
mov
fldenv
es
gs
data16
sti
jno
mov
mov
inc
lds
ins
jmp
cmp
ret
pop
loopne
cmp
xor
addr16
shr
clc
shl
mul
es
ss
adc
mov
daa
xor
push
push
mov
shr
outs
cmp
jnp
inc
dec
je
mul
adc
or
fwait
dec
ja
data16
(bad)
stos
(bad)
cmp
jno
ja
imul
lock
fwait
div
mov
pop
dec
(bad)
xor
and
and
push
xchg
xchg
mov
mov
add
xchg
out
jno
outs
sbb
add
pop
cmps
clc
aas
xchg
xchg
fld
mov
adc
push
jne
mov
addr16
push
cmp
mov
cmps
out
xor
test
xor
(bad)
lock
push
pop
(bad)
or
push
pop
fs
sti
hlt
cmps
test
fist
push
push
sbb
adc
dec
pop
or
push
fiadd
sbb
sub
sti
dec
out
addr16
push
jbe
cmp
xor
sbb
ret
mov
int
inc
mov
jb
test
mov
data16
mov
shl
ja
div
rcl
lock
mov
mov
nop
loopne
jno
mov
mov
xchg
adc
mov
fwait
rcl
lods
int
sahf
call
push
loop
imul
jbe
cmc
xchg
ret
push
fnclex
ret
add
(bad)
mov
mov
frstor
es
cmps
push
xor
xchg
mov
data16
imul
dec
add
sbb
sub
es
jl
js
sti
jmp
mov
dec
cli
loope
mov
test
jnp
fistp
or
xlat
sbb
fdiv
inc
shl
mov
xor
cmp
or
xor
dec
mov
neg
int
dec
push
loope
mov
mov
push
push
aaa
xchg
shl
adc
inc
ja
sbb
std
adc
xchg
mov
fdiv
(bad)
ror
arpl
out
mov
pop
push
test
mov
out
je
push
mov
add
jl
gs
cmp
xchg
cld
sbb
xchg
mul
push
inc
sub
or
ja
aad
rcl
(bad)
pushf
jnp
test
sbb
pop
cmc
(bad)
dec
mul
push
push
sub
aaa
(bad)
mul
mov
cwde
(bad)
push
push
sti
fsub
pop
(bad)
arpl
push
push
out
dec
mov
jae
(bad)
jnp
outs
adc
out
mov
dec
adc
icebp
ss
xchg
test
jbe
aaa
xchg
add
pop
cli
stos
xchg
and
outs
aam
and
imul
xchg
sub
sbb
mov
cs
xchg
(bad)
fisubr
ficom
xlat
dec
scas
push
outs
pop
xor
(bad)
(bad)
jnp
cs
or
xlat
sub
mov
adc
hlt
sbb
test
pop
data16
ja
push
es
dec
xlat
cmp
cmps
dec
imul
jmp
add
aaa
inc
or
pop
sub
xor
push
jp
pop
daa
jnp
fist
and
out
push
ret
push
sar
fwait
add
pop
dec
cmp
pusha
retf
cmps
mov
jne
sbb
sbb
test
fs
movs
push
inc
and
xchg
dec
and
inc
mov
ja
mov
and
adc
cmp
cmps
test
je
retf
addr16
stos
mov
xor
xlat
pop
jmp
loopne
movs
int3
dec
aam
push
movs
sbb
pusha
daa
daa
out
jp
retf
pop
jmp
(bad)
adc
jmp
xchg
add
sub
inc
xchg
mov
adc
je
stc
mov
in
int3
pop
mov
cdq
stc
mov
xchg
adc
dec
sbb
xchg
xchg
push
mov
mov
push
mov
or
nop
mov
mov
mov
xchg
push
psrad
je
push
mov
xchg
sti
addr16
sub
push
add
cmp
stos
stos
add
(bad)
dec
neg
jae
mov
aaa
pushf
add
adc
dec
enter
shl
cmp
jmp
data16
push
or
dec
icebp
inc
dec
dec
mov
fiadd
out
mov
mov
or
test
jmp
pop
fdiv
adc
xchg
push
(bad)
imul
cmps
sti
cwde
inc
sbb
bts
out
into
(bad)
fild
icebp
popa
cwde
das
leave
pop
popa
sub
pop
fs
enter
scas
div
loop
stc
inc
inc
pop
pop
pop
push
test
xchg
(bad)
push
pop
jmp
in
into
inc
sbb
imul
ffree
mov
lock
sub
(bad)
ficom
inc
gs
retf
shl
mov
push
push
lock
jbe
out
jp
mov
retf
push
mov
mov
push
call
pop
mov
push
cmp
ss
sub
std
ja
jno
fldcw
in
sti
or
fwait
sub
cli
push
shl
repz
inc
pop
scas
fs
(bad)
jbe
mov
push
xlat
mov
mov
add
shl
pushf
stc
mul
pop
rcl
adc
push
cmp
inc
fwait
push
cld
xor
or
mov
mov
mov
push
test
ficomp
cmp
add
call
cmp
es
inc
jmp
div
sub
xchg
jne
push
cmps
es
jl
pop
xchg
(bad)
jbe
push
adc
mov
inc
push
sub
xchg
xchg
cmps
inc
push
cdq
add
push
mov
sub
mov
shl
mov
(bad)
jge
sub
pop
sbb
dec
mov
ins
stos
inc
aaa
out
sbb
mov
mov
shl
into
mov
dec
or
sub
xor
ficom
in
pop
sbb
stos
daa
mov
sbb
mov
inc
push
push
(bad)
and
xor
xchg
xlat
xchg
cmp
iret
mov
(bad)
and
push
mov
jp
(bad)
cmp
and
sti
mov
es
stc
push
imul
clc
jg
push
cmp
repz
ins
sub
dec
or
bound
in
mov
fadd
jp
jns
mov
dec
jae
fisttp
fs
jnp
jecxz
call
sahf
jle
mov
mov
pop
pop
leave
sub
or
push
sbb
push
es
pop
adc
pop
stos
fisub
push
cmps
out
cli
ja
(bad)
push
mov
addr16
mov
xchg
(bad)
(bad)
rcl
mov
sub
mov
and
mov
(bad)
jo
fist
sbb
lahf
sub
(bad)
mov
leave
push
test
adc
fidivr
push
test
imul
test
or
dec
cld
inc
int
sub
mov
mov
jae
adc
les
cld
jmp
pop
pop
ss
xchg
inc
jb
pop
mov
xchg
or
push
dec
and
jecxz
cmp
inc
push
cmp
add
jbe
test
cmc
or
(bad)
xlat
dec
pop
pop
push
add
jnp
stos
cmp
dec
adc
shr
lock
jecxz
movs
jmp
(bad)
cmp
idiv
dec
pushf
sahf
mov
pop
push
push
in
shl
push
imul
sbb
test
cmps
aaa
iret
push
push
push
pop
jp
jmp
push
mov
push
(bad)
call
or
sbb
push
add
jmp
call
push
daa
fst
cmp
call
pop
add
aaa
or
xchg
retf
mov
stos
push
pop
fist
pushw
rol
aaa
dec
fist
in
mov
mov
loope
daa
xor
mov
mov
xor
dec
enter
pop
fcmovbe
xchg
mov
in
jbe
sbb
inc
cmp
out
inc
cwde
fwait
inc
cs
ja
(bad)
(bad)
mov
mov
cmps
pop
mov
mov
es
add
addr16
mov
retf
test
mov
test
test
dec
out
sub
xchg
retf
xor
scas
sub
sti
mov
xchg
xchg
mov
sbb
(bad)
leave
(bad)
mov
imul
mov
inc
jae
es
cmp
mov
mov
cmp
push
jmp
das
sbb
les
pop
mul
pop
movs
inc
mov
test
fmul
mov
addr16
xor
loope
push
add
mov
cli
xchg
pusha
sub
push
sbb
mov
xchg
in
cli
or
jmp
add
jae
xchg
xchg
cmps
jmp
dec
pusha
addr16
cmps
stos
mov
iret
sub
sti
mov
test
xchg
cmps
ja
retf
xchg
repz
ja
lea
mov
imul
add
jle
push
push
sub
xchg
ja
xchg
add
add
(bad)
push
div
cmps
sub
ss
pop
(bad)
mov
mov
jne
or
jbe
mov
imul
push
xchg
in
push
inc
cmp
test
jbe
inc
dec
jns
jecxz
repz
push
(bad)
outs
aam
and
xchg
stos
out
jmp
jnp
cmps
cmps
push
mov
jae
call
or
cmps
jmp
fwait
push
push
out
push
mov
es
mov
test
(bad)
mov
mov
pop
xchg
into
not
rcr
jmp
popf
ret
cwde
aaa
push
push
pop
rcr
cmps
mov
adc
stos
sbb
mov
mov
pop
pop
add
out
jns
aad
lds
pop
aaa
cli
mov
push
out
dec
mov
fcom
pop
es
data16
dec
imul
call
push
out
clc
xor
pop
mov
test
and
cmp
xchg
mov
lods
aaa
test
push
(bad)
adc
mov
adc
pop
(bad)
mov
mov
out
call
div
adc
mov
push
push
das
jnp
ror
xor
call
call
cmps
retf
inc
push
mov
imul
retf
cmp
xchg
test
push
jmp
jmp
sti
sbb
inc
retf
addr16
cmps
pop
pop
push
dec
test
push
mov
es
retf
push
retf
mov
(bad)
mov
jnp
cmp
or
add
ret
test
mov
adc
or
repz
cli
cmp
cmps
out
arpl
out
imul
mov
(bad)
es
dec
sbb
jnp
mov
sbb
inc
cmp
xchg
mov
aad
xchg
sub
sub
jnp
retf
xchg
stos
repnz
dec
jnp
inc
ficomp
or
in
add
fidivr
sbb
add
bound
sub
push
dec
js
jp
mov
out
mov
mov
cmp
in
mov
dec
fist
mov
mov
jmp
popf
inc
cmps
out
out
(bad)
nop
mov
fwait
(bad)
out
push
aaa
xor
call
sbb
add
adc
xlat
dec
pop
adc
adc
adc
(bad)
pusha
add
or
ins
(bad)
pop
adc
cmp
ret
(bad)
xchg
xchg
pop
dec
enter
add
mov
xor
iret
daa
imul
fst
xor
mov
inc
ss
cli
mov
mov
shl
fwait
jb
out
scas
stos
push
jmp
push
sub
push
leave
inc
xlat
mov
jne
imul
(bad)
push
sub
data16
addr16
mov
cmps
leave
ins
mov
(bad)
push
(bad)
daa
pop
cmp
cwde
clc
and
push
adc
sub
imul
rol
and
jl
mov
or
dec
ja
dec
mov
call
push
xlat
pop
add
cmp
cmps
mov
sub
ja
test
pop
mov
push
jbe
cmp
popa
cld
cli
pop
jbe
test
fwait
and
mov
aam
push
iret
xchg
das
mov
pop
or
shr
cmp
(bad)
repnz
aaa
mov
cdq
cmc
xor
fst
js
test
sbb
xor
pop
xchg
stos
daa
outs
ds
lods
stos
xor
pop
jp
data16
push
repnz
sti
mov
pop
mov
mov
jmp
pop
push
iret
addr16
xchg
arpl
mov
jg
or
push
cmp
cmps
lds
fcomp
gs
mov
shr
xchg
ret
rcl
call
mov
xor
mov
pop
test
push
jbe
ror
cmps
mov
xchg
movs
not
push
dec
adc
fs
mov
xor
adc
aam
cmps
pop
adc
imul
mov
icebp
xchg
and
ss
xor
loopne
stos
pop
stos
hlt
or
push
jmp
imul
nop
push
gs
cmc
dec
pcmpgtb
xchg
cmp
adc
push
jb
add
cmp
in
xor
push
dec
fst
push
jne
into
push
and
add
ret
mov
inc
inc
mov
fadd
loopne
cmps
mov
xchg
mov
xchg
mov
inc
arpl
adc
pop
into
xor
push
push
(bad)
mov
sub
xchg
mov
mov
sub
inc
jbe
aaa
popa
punpcklbw
cli
popa
std
mov
popa
aaa
fidiv
mov
jno
dec
loope
jae
lock
dec
(bad)
sub
xchg
jno
fld
test
xchg
out
adc
sub
bound
(bad)
enter
adc
adc
aam
mov
movs
xor
aaa
not
cmp
aaa
mov
int3
mov
fwait
outs
shl
xor
xor
call
and
mov
or
loopne
fadd
mov
out
mov
push
arpl
inc
fs
and
and
add
mov
add
xor
push
pushf
push
cmp
icebp
xor
mov
mov
mov
out
mov
push
mov
xchg
mov
(bad)
or
daa
cmps
rcl
inc
aaa
jae
cdq
and
jo
jno
repnz
stos
and
in
ret
xchg
and
inc
adc
adc
addr16
xchg
push
adc
cmps
xor
adc
xor
pop
ss
stos
jbe
dec
retf
push
mov
es
pop
jmp
inc
imul
and
pop
xor
or
and
clc
dec
clc
out
dec
out
pop
xchg
out
or
fsubr
data16
scas
aaa
ss
loop
fcmovnb
jge
iret
not
xchg
pop
js
cmp
or
scas
dec
inc
es
gs
mov
aaa
sub
mov
jmp
fld
pop
imul
push
pop
jecxz
std
xchg
inc
pop
mov
(bad)
inc
jg
xlat
mov
repnz
and
cmps
push
push
sub
cwde
or
add
jne
pop
ins
enter
cmp
pop
xor
add
dec
dec
push
out
in
mov
(bad)
fs
sub
ffreep
retf
mov
push
mov
sub
push
jl
aad
mov
in
repnz
fidiv
out
jo
mov
std
arpl
(bad)
xchg
pop
push
and
mov
cmps
mov
mov
sti
adc
inc
mov
retf
or
and
clc
sbb
and
inc
sti
ins
ficom
pop
pop
retf
xor
xor
clc
mov
cmp
ret
pop
rcl
out
jb
icebp
inc
andnpd
push
icebp
test
fcomp
push
div
push
mov
mov
into
inc
test
cmp
(bad)
sbb
adc
push
inc
push
out
and
dec
gs
cmp
dec
push
cmps
xchg
mov
retf
adc
adc
retf
cli
cdq
cmp
sbb
cmps
xchg
push
or
and
mov
test
add
push
(bad)
rol
je
or
jne
stc
jae
vxorps
pop
aaa
lahf
je
jne
jo
jb
and
jb
jmp
(bad)
cli
shr
adc
call
push
cld
daa
mov
mov
loop
es
in
xchg
mov
cmp
fsub
mov
cli
pop
or
inc
mov
xchg
mov
scas
out
cmp
push
cmps
adc
xchg
push
jmp
push
dec
(bad)
push
leave
sbb
retf
push
inc
out
fidiv
sti
nop
pop
aaa
push
lods
shl
mov
or
cmp
add
out
jl
call
and
push
add
retf
inc
push
cld
stc
pop
data16
push
mov
bound
jae
aad
into
xor
dec
xlat
push
jg
push
cmc
lds
jbe
dec
jp
mov
cmp
mov
mov
pop
(bad)
popf
pop
ja
stos
cdq
mov
aam
ss
cs
jmp
mov
xchg
loopne
in
or
inc
cli
dec
push
addr16
cmp
push
push
sub
push
mov
shl
push
fisubr
cmps
test
jmp
or
jb
cmps
movs
inc
sub
aam
stos
cmps
sti
mov
pop
xchg
aaa
mov
out
cmp
(bad)
retf
pop
pcmpeqb
les
popw
fwait
out
(bad)
out
aaa
cmps
jg
cmps
push
pop
push
fsubp
ss
cmps
(bad)
and
out
pop
xor
push
je
xchg
mov
xchg
data16
jmp
xor
(bad)
scas
out
push
add
push
add
mov
fwait
bound
xor
adc
popa
(bad)
xor
and
adc
arpl
pusha
dec
push
sub
lea
(bad)
jmp
test
mov
ror
ret
fadd
in
inc
xchg
cmc
inc
cmp
xor
xchg
and
into
iret
call
or
jle
clc
(bad)
jno
push
das
ds
mov
enter
sbb
(bad)
ss
cli
shl
mov
cs
pop
pop
gs
cmps
cmp
ret
cmps
pop
push
aam
int3
test
les
aam
cmps
rol
sbb
sar
pop
mov
sub
pop
std
xchg
jns
xchg
push
rcr
cld
das
int3
in
pop
dec
jbe
pop
loopne
mov
retf
loope
jnp
mov
out
daa
retf
int3
nop
(bad)
call
int3
xor
call
dec
fmul
imul
scas
sub
inc
add
mov
xchg
leave
inc
cmp
jl
int
test
ins
jae
xor
ss
dec
mov
push
(bad)
cmps
cmp
ret
push
or
int3
ds
pop
jl
cmp
pusha
call
(bad)
cmp
loop
out
inc
mov
push
es
outs
mov
add
(bad)
out
push
idiv
mov
inc
push
mov
push
mov
xchg
xor
xchg
out
out
not
dec
in
es
popa
xor
and
dec
daa
pop
out
pop
sub
nop
shl
movs
pop
(bad)
movs
xchg
test
pop
out
stos
(bad)
mov
cs
shl
jmp
and
mov
scas
jmp
xchg
lods
sbb
ffree
xchg
addr16
inc
inc
pop
mov
or
mov
xor
adc
(bad)
test
dec
jp
icebp
push
or
xchg
mov
adc
jb
mov
inc
loope
mov
sti
xchg
shl
repnz
stc
retf
push
dec
and
retf
adc
mov
gs
jecxz
and
cmps
adc
and
xchg
jne
add
in
retf
push
loopne
jno
add
data16
push
daa
xor
jnp
sub
cli
mov
add
out
imul
xchg
and
sub
jnp
out
test
mov
cli
push
hlt
ja
adc
xor
mov
lock
test
cmps
xor
adc
push
shl
xor
cli
jo
or
rol
inc
in
js
sub
xchg
adc
xchg
xor
fst
mov
clc
call
ins
repnz
pop
cmp
ret
shl
retf
movs
xlat
xchg
mov
test
jmp
rol
inc
stc
adc
jg
xchg
xchg
out
pop
xchg
fcmovne
stos
add
test
ins
loopne
sub
and
mov
adc
xchg
mov
mov
(bad)
jecxz
cmps
jge
pop
cmp
push
mov
(bad)
fnstenv
push
out
sub
jnp
or
and
cmps
pop
and
fwait
cmc
test
retf
or
es
jbe
sub
out
clc
(bad)
xchg
sbb
mov
rcl
push
push
sbb
out
push
push
daa
jno
inc
movs
pop
xchg
or
inc
mov
fcom
sbb
mov
mov
(bad)
jne
jae
push
push
xchg
fidiv
ss
in
pusha
fmul
cwde
pop
bound
or
(bad)
push
adc
inc
test
push
stc
sub
jns
pop
xchg
(bad)
cmp
bound
add
jmp
mov
aas
sub
pusha
xchg
mov
inc
pop
xchg
xchg
push
sbb
aad
sbb
push
loopne
mov
cli
xchg
movs
out
out
dec
add
jbe
push
addr16
les
pop
sti
push
jbe
icebp
cmp
push
out
jmp
lods
or
mov
pop
(bad)
sbb
mov
push
xchg
sub
call
imul
xor
and
pop
xchg
(bad)
hlt
out
cmp
jne
les
ds
adc
sbb
push
xlat
je
sbb
sbb
in
dec
add
outs
adc
aad
gs
pop
mov
iret
and
jno
xchg
hlt
pshufw
sbb
pop
repz
push
aam
xor
mov
sbb
pop
push
cmp
es
xor
push
pop
fdivr
mov
daa
xor
not
ds
cmps
pushf
jp
xor
test
dec
mov
outs
xor
sub
addr16
(bad)
arpl
sub
jb
xchg
mov
rcl
ret
push
and
div
jg
xchg
cmp
push
mov
repz
ds
dec
rol
xchg
mov
xor
pop
cmp
aam
and
xchg
mov
mov
xor
pop
push
inc
mov
push
dec
lahf
xlat
shl
daa
mov
test
pop
push
mov
ds
adc
iret
mov
aaa
fcom
mov
mov
push
mov
je
push
dec
bound
cmp
push
cmp
and
mov
xor
push
adc
mov
cld
adc
mov
xor
(bad)
test
out
adc
pop
mov
jl
popf
aas
out
ficom
adc
push
jl
adc
dec
mov
(bad)
in
pushfw
sbb
mov
jp
adc
pop
mov
cmps
or
jmp
jne
arpl
jecxz
shl
jae
jno
gs
cld
xchg
hlt
inc
pop
fidiv
cdq
cmp
pop
inc
fdiv
sbb
or
scas
mov
add
xor
sbb
ins
lds
xor
jl
mov
jge
mov
and
xor
mov
pop
mov
xchg
cld
adc
fcom
push
sub
adc
rcr
push
int3
xor
mov
gs
pop
sub
in
mov
xchg
jl
pushf
scas
add
nop
std
call
mov
pushf
add
repnz
lahf
mov
js
jl
pop
or
clc
dec
cmp
scas
fcom
xchg
sub
call
inc
or
movs
mov
hlt
(bad)
mov
stos
and
mov
lds
mov
clc
add
hlt
div
fcom
lock
hlt
xor
mov
pop
jns
fsubr
mov
mov
fstp
les
adc
jmp
mov
add
jbe
rol
ds
push
into
cmp
sbb
sahf
inc
jp
neg
cmc
xchg
push
dec
cmp
into
data16
clc
popf
inc
push
cmps
push
mov
mov
adc
call
fimul
ror
popa
sub
jbe
cmp
inc
mov
jo
scas
popf
out
(bad)
push
push
jbe
mov
jmp
xchg
cmps
mov
or
mov
fsubr
and
sahf
(bad)
lds
loope
push
out
dec
or
int
mov
out
loop
fwait
lahf
inc
mov
pop
push
xchg
pop
mov
sahf
or
ss
pop
adc
pop
(bad)
call
not
pop
adc
push
dec
out
jbe
ficomp
scas
fld
xor
xchg
mov
add
sbb
push
imul
pop
cdq
lahf
inc
sahf
movs
push
bound
xchg
push
push
pop
stos
imul
fisub
rol
gs
xlat
cmps
mov
loope
push
inc
fwait
test
lods
out
push
fldenv
sahf
xchg
mov
sbb
dec
add
sub
push
fiadd
pop
shl
fdivr
loop
sar
jg
pop
fwait
dec
mov
mov
lods
fs
dec
pop
loopne
push
or
pop
ja
xchg
dec
ds
push
fsubr
fisubr
(bad)
fwait
sub
mov
cmps
cmp
mov
in
pop
and
and
cdq
call
sbb
sub
push
mov
aad
pushf
and
loop
pop
push
xlat
xlat
sbb
mov
retf
shr
cdq
stos
retf
inc
sbb
outs
push
outs
mov
push
push
daa
cmp
mov
sbb
call
cmp
and
or
or
dec
xlat
enter
sub
push
cs
(bad)
xor
clc
movs
cli
(bad)
mov
pushf
mov
sbb
bound
bound
pop
sub
lods
(bad)
jge
jo
int3
pop
sub
xchg
and
fstp
je
mov
into
fisubr
sub
sar
imul
(bad)
(bad)
sti
lahf
scas
movs
outs
push
sub
sbb
in
mov
add
add
shl
jno
sbb
cli
jns
out
ror
dec
test
push
sbb
and
in
cwde
sub
sub
jge
jmp
mov
pop
ficomp
cmc
dec
rsqrtps
jp
das
maxps
sub
fsubr
daa
fcmovb
mov
pop
pop
arpl
inc
mov
mov
and
push
inc
jp
ret
fadd
push
mov
lock
mov
test
aaa
sar
stc
cmp
push
in
neg
add
popf
and
jno
adc
mov
xlat
mov
(bad)
mov
add
fisubr
cmp
sub
sub
xchg
out
push
jno
xchg
mov
and
ret
push
push
add
xchg
adc
es
sahf
or
cmps
jne
aad
xchg
push
add
out
xchg
out
xchg
push
aam
ds
xchg
and
jno
(bad)
adc
push
or
leave
fnstcw
cmp
xchg
mov
std
pop
scas
and
mov
popf
mov
loopne
xchg
inc
jbe
(bad)
xchg
sub
and
test
ror
lock
lods
dec
inc
xchg
dec
mov
fwait
(bad)
out
lahf
mov
dec
inc
xchg
cmp
in
shl
push
xchg
xor
jns
xchg
mov
data16
leave
mov
mov
add
jbe
sub
mov
(bad)
outs
mov
add
xor
cmp
mov
and
(bad)
cmp
mov
daa
mov
jmp
add
push
ins
add
mov
dec
jle
lea
cmp
pop
test
adc
inc
iret
jne
pop
fld
(bad)
ds
and
cdq
movs
xlat
test
ret
sbb
lahf
icebp
lahf
es
mov
mov
(bad)
xchg
sahf
jg
mov
add
cwde
les
mov
fstp
mov
sbb
jne
ja
mov
and
or
cmps
push
and
sub
ins
push
mov
fbld
xor
cmps
cdq
ins
mov
mov
xor
cmps
xchg
ins
(bad)
pop
jle
ja
imul
sbb
(bad)
mov
fbld
xor
fild
jne
push
call
(bad)
in
push
jno
jo
movs
ins
pop
test
sbb
push
es
fldenv
ins
adc
jg
rol
xor
scas
push
inc
mov
adc
jg
and
jg
jo
jb
clc
add
ficomp
xor
scas
push
pop
jb
mov
pop
sti
cli
sub
js
add
loopne
sub
ja
mov
mov
xor
imul
dec
(bad)
addr16
ins
and
mov
js
and
test
ja
clc
xor
movs
mov
movs
aas
or
imul
mov
fisttp
imul
or
stos
pmulhuw
pop
daa
inc
xchg
xchg
lock
pop
inc
outs
jns
pop
pop
arpl
retf
xchg
scas
mov
pop
into
in
scas
mov
cmp
dec
mov
sbb
ja
pop
fild
outs
add
(bad)
and
pop
es
js
mov
jg
addr16
or
mov
mov
add
fsubrp
inc
test
cmps
loop
repnz
nop
mov
or
addr16
or
cmps
outs
cs
addr16
int3
sub
mov
aas
aas
iret
daa
out
and
scas
xchg
cwde
(bad)
and
in
pop
jmp
scas
mov
scas
pop
iret
add
inc
daa
das
in
xchg
test
dec
push
pop
iret
inc
sub
cdq
aaa
and
sbb
lahf
scas
adc
pop
xor
aas
sbb
in
sbb
xlat
mov
inc
ret
add
out
hlt
(bad)
cmp
sub
push
mov
aas
repz
xchg
or
outs
inc
inc
imul
movmskps
mov
ds
jmp
dec
outs
mov
cmps
addr16
push
or
push
xlat
mov
pop
xchg
and
xor
scas
fidiv
out
out
xchg
sahf
cmps
das
dec
fwait
mov
into
inc
lods
scas
hlt
int3
movaps
dec
les
push
test
out
push
xchg
mov
in
pop
inc
xor
dec
ret
cmps
cwde
xchg
addr16
pop
xor
out
pop
xor
xchg
push
scas
pop
sahf
sbb
or
sub
push
or
movs
push
xchg
icebp
cs
mov
inc
pop
outs
inc
xchg
push
mov
clc
dec
daa
push
rcl
aaa
lock
or
lock
mov
push
ret
js
add
add
outs
aam
xchg
mov
fptan
dec
push
pop
mov
mov
inc
daa
jl
(bad)
jg
cwde
and
push
aam
mov
xlat
inc
aaa
aam
div
push
dec
jbe
xlat
cmp
aam
push
aaa
adc
cmps
cmp
aam
jge
xchg
stos
push
ss
jle
pop
push
shl
mov
aaa
fistp
lock
nop
mov
push
repz
jno
rcl
xor
(bad)
stos
je
xor
xchg
mov
nop
(bad)
sub
(bad)
cmc
jbe
push
mov
fdiv
cmp
pop
xor
xor
xlat
je
jo
pop
mov
cmps
add
xchg
cmp
ss
or
aam
aam
nop
aaa
fs
push
mov
(bad)
mov
pop
fidiv
xchg
xlat
aaa
dec
aam
ror
push
dec
mov
jmp
sub
xor
jae
(bad)
jecxz
(bad)
pop
mov
mul
dec
lock
mov
inc
xchg
das
les
cmps
inc
(bad)
out
ja
(bad)
and
les
mov
aam
or
int
dec
cmps
push
inc
arpl
adc
mov
cmp
fs
(bad)
mov
loopne
xchg
and
aam
jecxz
xchg
lfs
les
addr16
aas
hlt
sbb
inc
fs
(bad)
mov
addr16
inc
mov
out
fisub
neg
jae
xchg
push
nop
and
mul
xor
daa
lock
hlt
push
rcl
ss
aas
xor
adc
fs
push
cli
xchg
mov
add
out
xchg
inc
cmp
lock
loopne
push
pop
mov
mov
fwait
sbb
sub
sbb
sbb
sbb
repz
retf
ss
and
cmp
test
and
and
mov
xor
imul
mov
das
test
inc
sub
ins
push
inc
hlt
inc
xchg
iret
stc
lods
jo
pusha
jmp
xchg
cmp
sub
inc
dec
mov
xchg
out
lds
xor
dec
lods
mov
popa
out
cmps
shr
mov
(bad)
mov
popa
pop
(bad)
jnp
push
and
mov
sbb
cwde
inc
loopne
mov
xor
cmps
std
fsub
xchg
cmps
push
xchg
cmps
hlt
mov
push
mov
fdivr
mov
jl
sub
jmp
icebp
es
ins
ins
xor
xchg
outs
hlt
pop
push
es
mov
aam
(bad)
out
push
dec
jl
dec
stc
jno
or
rcl
lods
jmp
shl
mov
out
push
xchg
shl
push
shl
mov
jl
loope
pcmpgtb
and
les
hlt
rcr
lods
fisttp
xor
sub
push
and
lods
xchg
cmp
fucom
lods
xor
push
pop
jne
loope
aam
pop
popf
les
cmp
push
mov
sub
jns
lods
lods
mov
nop
mov
les
in
pop
sub
je
mov
test
ins
jmp
je
js
mov
jmp
imul
ins
or
ins
daa
cmps
xchg
inc
inc
adc
push
mov
xchg
mov
xchg
ins
loopne
xchg
ins
hlt
mov
lods
int
cmp
pushf
test
cmp
stos
xchg
es
fistp
dec
pop
sub
cmps
and
jg
outs
test
mov
cld
adc
dec
mov
inc
mov
jno
and
in
daa
mov
outs
int
fs
mov
retf
fs
pop
inc
outs
mov
push
ins
cmps
mov
data16
arpl
outs
xor
adc
dec
mov
mov
out
daa
fsubr
xchg
(bad)
repz
clc
sti
clc
inc
fsubr
or
out
ja
cmps
sahf
cs
sub
daa
mov
outs
xchg
scas
pop
pop
data16
or
aas
es
or
push
scas
and
retf
inc
push
xchg
outs
mov
iret
add
jmp
daa
dec
inc
sysret
jmp
xchg
dec
pop
outs
adc
iret
jno
cmp
out
push
repnz
or
sub
in
push
repnz
or
je
dec
xor
sbb
in
lds
pop
fbld
outs
loop
in
out
addr16
into
addr16
jb
cmps
out
pop
aaa
add
scas
test
js
dec
out
pmaxsw
push
iret
iret
scas
pop
jmp
xchg
add
movs
lds
cmps
mov
mov
outs
adc
inc
lods
call
sub
iret
push
scas
inc
inc
addr16
retf
dec
or
lods
dec
cld
(bad)
iret
push
cld
aaa
scas
inc
dec
cmps
in
imul
pop
inc
iret
daa
out
inc
movs
scas
lahf
mov
mov
dec
push
stos
mov
xchg
fbstp
into
scas
and
push
mov
xchg
es
mov
add
xchg
out
jle
inc
add
xchg
and
push
cli
pop
cld
and
dec
jb
(bad)
cmps
repnz
mov
jne
push
into
in
pop
mov
mov
jbe
mov
repz
add
mov
xchg
jg
test
xchg
stc
repz
loop
dec
lea
dec
lea
int
int
int
int
dec
lea
dec
lea
int
int
int
int
dec
lea
dec
lea
int
int
int
int
dec
lea
dec
lea
int
int
int
int
dec
lea
dec
lea
int
int
int
cmp
into
lods
push
std
sub
aas
out
or
mov
jp
or
out
addr16
je
and
xchg
into
xor
mov
pusha
xor
xor
xchg
sbb
or
mov
js
cmps
push
fst
cwde
fcomp
enter
xchg
sbb
test
ror
pop
je
sbb
sti
xlat
fldpi
test
(bad)
(bad)
es
stc
and
cmp
xchg
xor
movs
in
mov
lds
movs
jns
cmps
mov
movsx
mov
out
or
jmp
into
push
or
jmp
into
push
or
jmp
into
push
or
jmp
into
push
or
jmp
add
movs
cmp
xor
or
es
adc
xchg
sbb
sbb
in
ds
lahf
outs
xchg
dec
mov
imul
call
mov
outs
test
mov
mov
scas
pop
movs
and
out
cmp
sub
scas
aaa
cmps
outs
arpl
push
lea
fsubr
cmp
sub
es
in
xchg
or
cmp
push
cmps
pop
loop
sbb
(bad)
cli
sub
aas
mov
jmp
jmp
out
sub
sahf
in
xchg
es
es
outs
xchg
scas
xor
push
push
push
cmps
push
addr16
ficomp
shl
pop
scas
out
push
dec
dec
mov
cmp
xchg
daa
addr16
ja
shl
pusha
and
mov
pop
iret
je
pop
std
scas
hlt
sub
rol
stos
xor
aam
xchg
add
pop
mov
cmps
add
and
mov
daa
mov
add
call
sub
fild
stos
dec
and
ret
hlt
dec
ret
dec
add
jne
addr16
call
dec
push
retf
pop
cmps
dec
out
push
add
pop
repz
push
enter
xchg
add
hlt
cmp
out
mov
or
shr
retf
sub
rol
or
fstp
cmps
add
sbb
inc
iret
daa
mov
xchg
aas
neg
pop
push
xchg
ret
mov
xor
inc
mov
fdivr
loope
cdq
xchg
addr16
push
xchg
and
aaa
jmp
ror
out
push
sbb
adc
mov
push
(bad)
in
mov
ja
or
daa
and
mov
in
sti
and
add
sti
ss
push
adc
mov
aam
aaa
je
imul
push
mov
mov
push
scas
jp
push
das
mul
stos
cmp
addr16
and
stos
jg
pop
in
fadd
mov
mov
cmps
pop
loopne
(bad)
push
mov
mov
sahf
inc
call
jne
adc
mov
push
mov
daa
call
jne
aam
xor
push
int
loop
lea
jne
adc
(bad)
std
pop
cmp
cld
xchg
sbb
cmc
out
lahf
les
cmp
dec
lea
dec
lea
inc
mov
pushf
aas
and
imul
jne
jae
repz
sub
adc
xor
push
mov
mov
int3
sahf
addr16
lods
test
xor
mov
mov
mov
jmp
test
clc
xchg
leave
stos
pop
or
mov
or
shr
scas
mov
adc
mov
cwde
pushf
iret
xchg
enter
jmp
hlt
jmp
mov
xchg
lods
mov
retf
stc
ret
jecxz
imul
mov
mov
cdq
xchg
mov
ror
mov
pop
mov
xchg
mov
stos
xchg
xchg
fisubr
xchg
mov
add
into
adc
repz
or
jecxz
call
mov
hlt
cdq
sbb
aam
into
call
mov
fucomp
xor
mov
jmp
not
add
stc
mov
(bad)
cdq
repz
repnz
iret
nop
test
call
shl
mov
out
mov
fnstcw
xchg
into
jmp
in
scas
iret
test
xor
enter
cmc
mov
in
ret
in
in
cmp
ds
iret
mov
xchg
(bad)
mov
mov
fsubr
mov
test
mov
mov
jg
cmp
inc
(bad)
xor
and
mov
ds
jmp
aas
out
aam
out
mov
jmp
loopne
repnz
inc
repz
and
(bad)
sub
push
fld
and
cmc
xor
mov
int3
ds
loop
icebp
xor
outs
out
in
inc
mov
inc
cmps
inc
scas
ds
jb
popa
cmps
pop
ret
inc
lock
pusha
loope
retf
push
mov
scas
inc
enter
shl
xor
cmp
dec
cmc
jne
and
cmc
sub
dec
jmp
std
and
mov
jmp
fs
ja
dec
fdiv
retf
dec
aam
retf
jle
dec
mov
jo
pop
test
mov
xor
xor
jno
ds
fnsave
inc
out
test
(bad)
push
std
xor
cmp
xor
inc
ret
outs
(bad)
je
sub
ss
into
and
mov
rol
mov
gs
shl
inc
mov
cmps
inc
(bad)
dec
leave
ds
stos
push
test
inc
fisttp
push
(bad)
ja
pop
div
(bad)
jmp
push
enter
xlat
ins
scas
and
iret
sub
inc
leave
jo
and
in
xor
inc
aad
dec
mov
loopne
in
ins
mov
mov
push
mov
arpl
dec
test
mov
stos
push
cmps
inc
jecxz
std
push
(bad)
(bad)
(bad)
jne
push
mov
icebp
outs
out
(bad)
retfw
aaa
aam
loopne
sar
mov
scas
jo
and
jmp
lahf
sbb
dec
mov
adc
cmps
push
mov
test
dec
into
pop
retf
pop
(bad)
jge
jge
inc
rol
mov
pop
(bad)
jg
je
pop
mov
test
mov
outs
mov
rol
popa
adc
leave
inc
xchg
sbb
xchg
dec
mov
imul
inc
scas
imul
ins
mov
push
mov
lahf
add
xor
jb
xchg
push
mov
enter
mov
push
push
mov
in
push
inc
aad
out
cmps
push
dec
jne
add
sbb
in
ror
pop
mov
push
xchg
jnp
push
lahf
jbe
mov
push
or
push
mov
jp
bound
dec
mov
sub
add
mov
fadd
inc
mov
mov
jle
sub
ror
pop
test
mov
sbb
mov
aam
cmps
pop
stos
jns
sbb
inc
mov
cmps
pop
mov
sbb
je
je
push
(bad)
outs
mov
jl
dec
mov
xchg
push
mov
ins
shl
push
test
mov
mov
pusha
fld
(bad)
js
dec
mov
mov
outs
test
inc
pop
inc
mov
jl
pop
test
mov
xor
outs
lea
cmp
pop
mov
and
test
push
sti
inc
adc
scas
inc
stc
and
jge
jnp
js
jo
jae
inc
fadd
inc
fstp
push
int3
dec
xchg
ja
jg
sub
jae
jle
pop
mov
jle
inc
and
fistp
push
cmp
pop
inc
inc
pop
stos
es
data16
push
test
cwde
jo
inc
cmps
xor
cmp
fadd
xor
push
xor
stos
pusha
shl
mov
dec
lods
dec
cmps
cmp
rol
push
sbb
and
cmp
cmp
xor
jp
xor
bound
jl
pop
pushf
xor
js
jne
cmp
xor
das
movs
push
add
pop
test
and
mov
dec
cli
jp
es
push
cmp
mov
das
mov
jno
cmp
jae
push
and
arpl
shl
mov
mov
fnstcw
cwde
mov
in
mov
lods
in
mov
stos
jmp
sbb
enter
stos
jmp
mov
fdiv
mov
mov
mov
or
jae
mov
mov
xchg
into
xor
retf
sti
scas
in
stos
test
stc
mov
pop
test
jmp
fwait
sbb
call
in
jmp
iret
mov
xchg
xchg
retf
pop
shr
test
mov
outs
xor
out
cwde
mov
ret
mov
xchg
in
stos
(bad)
jmp
in
ins
pop
fnstcw
mov
enter
fxch
jbe
mov
mov
lods
retf
fdiv
(bad)
sahf
shr
ret
fisub
cdq
mov
lods
in
xchg
enter
mov
jmp
into
les
or
loop
mov
cmps
inc
push
mov
push
(bad)
push
adc
cs
lock
out
add
in
(bad)
lahf
pop
xlat
add
das
test
cmps
sub
push
xchg
xor
add
adc
push
test
add
push
add
xchg
adc
inc
ror
fisttp
push
ret
mov
add
(bad)
xchg
sar
cdq
pop
ret
push
or
adc
jo
xor
sub
popa
rcr
xchg
xor
pop
pushf
in
iret
stc
xor
sbb
push
inc
lods
sub
or
xchg
push
cdq
push
mov
jecxz
mov
xchg
push
cli
out
xchg
mov
ins
xchg
loopne
fisubr
pushf
not
xchg
add
jb
dec
lods
or
ret
or
xor
jl
inc
in
or
(bad)
test
enter
loopne
mul
sub
cwde
cmp
push
div
adc
cwde
ret
lods
or
hlt
outs
and
or
mov
inc
inc
cmp
loop
int
rcr
ret
repnz
xchg
adc
test
mov
xchg
adc
xchg
mov
mov
cmps
push
xchg
and
scas
xchg
jnp
lahf
or
icebp
bound
adc
je
mov
sub
shr
sbb
into
cmp
inc
leave
mov
cwde
jo
mov
mov
or
and
add
daa
cld
add
sub
mov
data16
mov
(bad)
cmp
ds
mov
stc
ds
sbb
or
jb
cmp
push
adc
je
dec
int
cmc
sbb
adc
inc
xchg
and
or
aas
loop
push
jmp
sbb
xor
xor
gs
xor
in
sbb
fsubr
adc
aas
xchg
inc
out
adc
sbb
jg
adc
retf
or
or
lods
adc
test
ret
cld
jns
loop
(bad)
out
and
out
adc
dec
cmps
dec
stos
fst
ja
sub
sub
sub
dec
call
mov
rcr
jl
aas
int
jmp
pop
out
scas
inc
lock
mov
aad
and
and
rol
xchg
dec
jmp
jmp
sahf
push
mov
test
iret
daa
jo
fisttp
dec
xlat
xor
pusha
popf
inc
retf
sbb
iret
cmp
add
(bad)
push
int
into
fwait
sub
add
add
xor
ret
das
sbb
sbb
jo
push
nop
cmp
add
add
add
jl
and
inc
xchg
sbb
xor
push
xchg
pop
into
pop
stc
out
(bad)
cmp
and
jns
outs
mov
into
or
cmc
adc
out
pop
cmc
dec
dec
push
aam
out
xchg
arpl
test
inc
inc
jmp
push
scas
cmp
sbb
test
cs
sbb
dec
xchg
pop
xchg
sub
pop
add
test
adc
adc
fiadd
pop
xlat
dec
into
(bad)
retf
and
sbb
fwait
inc
xchg
pop
hlt
xor
pop
mov
sahf
push
xchg
fiadd
sub
ficom
dec
mov
mov
and
shr
push
mov
shl
pop
std
dec
inc
int
cld
outs
mov
mov
fdiv
(bad)
loope
fist
inc
clc
ss
xchg
add
xor
sub
cmp
xor
mov
xchg
sbb
dec
and
push
out
or
push
mov
cmp
adc
sbb
fwait
mov
dec
mov
stc
sahf
mov
fnstcw
bound
loop
repnz
jge
ret
in
loopne
repnz
in
and
arpl
outs
in
loop
mov
cmp
push
mov
mov
call
mov
push
adc
test
loopne
mov
loope
mov
inc
xor
mov
and
rol
pop
popa
push
and
xchg
(bad)
test
out
rcr
sub
retf
test
sar
(bad)
in
jnp
ins
adc
test
rcr
fistp
sbb
jg
lods
test
clc
repz
mov
sbb
push
ret
mov
dec
and
js
stos
rcr
fsubr
ss
jge
dec
cld
leave
out
jmp
cld
lods
cmps
leave
scas
les
adc
popf
mov
in
cwde
repnz
pop
cmp
(bad)
loope
(bad)
mov
pop
sub
mov
out
rcl
and
(bad)
sar
sar
jnp
inc
stc
std
(bad)
call
sub
lea
enter
sub
es
cli
fwait
mov
in
lock
mov
mov
div
push
mov
movs
pop
xor
sbb
and
fistp
movs
cmp
add
ficomp
sahf
pusha
cmps
ds
div
pop
mov
xchg
out
adc
test
jnp
xchg
add
adc
xchg
movs
adc
fwait
inc
cmp
pop
in
daa
movs
mov
mov
test
and
pop
and
scas
lea
xor
pop
in
fidiv
cmps
add
jmp
js
jne
mov
xchg
mov
sbb
inc
sub
out
ret
sbb
daa
rol
push
test
loopne
or
jne
sbb
mov
int3
inc
lea
inc
and
xchg
inc
lea
int
mov
out
and
xchg
and
jbe
cmps
pop
shl
inc
idiv
int
or
push
cmps
fs
lea
mov
add
pop
cmp
not
adc
jo
sti
inc
sahf
addr16
or
call
int3
adc
aaa
loope
repz
lahf
dec
mov
imul
sbb
movs
sbb
or
mov
mov
mov
sub
jp
mov
scas
pop
mov
ret
or
ds
push
xchg
bound
xor
jle
and
js
cbw
bound
cmp
or
test
jae
jg
call
inc
xchg
pop
adc
push
mov
mov
cmps
popa
mov
ret
or
and
pop
and
pop
sahf
pop
cmp
mov
movs
or
inc
mov
scas
bnd
in
or
jne
fdiv
cmp
test
lahf
push
jmp
jb
(bad)
sbb
jo
into
xor
repz
jl
ss
push
int
aad
inc
mov
push
and
data16
jb
push
jecxz
std
adc
dec
in
mov
data16
inc
imul
dec
xchg
jl
test
out
hlt
dec
neg
loop
inc
dec
aad
xchg
pop
fdivr
mov
xchg
popa
ins
fwait
adc
and
in
outs
xchg
dec
scas
pop
push
aad
iret
adc
sub
in
push
cld
popa
pop
xor
pop
mov
jns
js
dec
push
pushf
jae
push
retf
push
sub
xchg
jg
and
gs
dec
jge
retf
nop
aaa
test
push
pusha
or
mov
pop
shl
in
dec
fidivr
mov
addr16
mov
clc
repz
inc
dec
push
jbe
outs
sbb
js
retf
inc
fst
pop
mov
pop
jne
inc
cli
sub
test
and
(bad)
lahf
xor
daa
into
jl
repz
jb
popf
and
adc
cmp
pop
dec
mov
cmp
or
stc
add
inc
add
(bad)
jb
aam
mov
(bad)
clc
je
mov
sbb
jb
push
mov
cmp
push
mov
ins
and
adc
fidiv
dec
loop
data16
dec
rcr
inc
aaa
out
dec
push
xchg
leave
and
lds
xor
pushf
push
mov
inc
push
inc
sub
and
add
jp
imul
sbb
xchg
or
sub
and
adc
data16
push
sahf
mov
push
push
repnz
or
and
cmp
or
fisttp
push
(bad)
daa
loope
inc
jns
cmps
cmp
cs
inc
(bad)
push
mov
nop
adc
sahf
add
push
call
push
cmp
cmp
or
mov
and
jmp
(bad)
mov
imul
cmp
sbb
pop
test
arpl
sub
iret
mov
adc
imul
and
or
cdq
iret
or
adc
jge
sub
dec
or
cmp
sub
pop
sub
cmp
nop
das
ror
dec
js
ins
jp
push
inc
mov
mov
sbb
test
cmps
jmp
jns
jle
jns
sbb
mov
dec
cli
mov
push
cmp
lea
cmp
pop
int
dec
push
pop
ins
into
pop
fmulp
jmp
scas
sbb
popa
mov
(bad)
pop
push
int3
cdq
cmp
pcmpgtd
sbb
dec
iret
mov
mov
out
sbb
sub
fs
pop
mov
mov
cmps
stc
and
mov
out
std
xchg
test
xor
pop
cmp
aas
fwait
mov
fs
mov
cmc
or
fsubr
lahf
movs
cdq
std
je
jle
das
js
test
jae
cli
(bad)
icebp
mov
jns
dec
cld
sub
test
cmp
enter
sbb
cmp
call
in
int3
or
stos
aas
jp
fs
enter
sbb
in
sbb
or
pop
popf
mov
std
or
mov
loope
pop
repz
ret
mov
xor
cmp
leave
adc
inc
call
in
shl
(bad)
jnp
and
push
rcl
xchg
and
jae
jo
cmc
xor
popf
test
inc
js
inc
shl
stos
imul
rol
xor
mov
jecxz
aad
movs
mov
mov
repnz
mov
and
xor
add
sbb
add
add
jb
sahf
icebp
pop
test
rol
clc
mov
js
sbb
enter
mov
cmc
aam
adc
push
push
mov
pop
into
add
mov
cmc
xor
push
mov
and
dec
ret
retf
movs
gs
jno
aad
std
lock
jno
xor
adc
xchg
push
and
xchg
jne
or
aad
(bad)
clc
test
xchg
out
lock
in
movs
mov
xchg
hlt
data16
aad
mov
xor
mov
push
mov
sub
cmp
push
data16
add
and
and
jg
push
cmp
bound
sbb
out
arpl
dec
aam
(bad)
and
lods
neg
hlt
scas
data16
inc
call
lahf
push
in
scas
ins
or
cld
sub
pop
(bad)
sbb
push
ror
add
je
repz
dec
shr
jmp
cmp
ret
aam
out
jmp
adc
and
aam
rcr
xchg
inc
jns
pop
mov
mov
pop
dec
xchg
inc
inc
inc
hlt
mov
and
sub
jnp
inc
jp
add
cmp
jg
icebp
push
inc
loop
lods
pop
es
mov
pop
dec
mov
test
js
ins
pop
fld
ret
je
mov
pusha
pop
lods
or
mov
cmp
and
sub
popf
in
cmps
sbb
enter
int3
mov
add
movs
or
cmp
(bad)
sahf
es
sub
add
cmc
ins
mov
(bad)
mov
inc
pop
aas
mov
inc
and
cmc
retf
sbb
dec
retf
or
pop
fnstenv
shld
and
lea
mov
xor
dec
mov
cmp
out
mov
cmp
imul
adc
cmp
pop
add
icebp
ins
ja
fwait
push
xchg
dec
je
dec
jmp
jne
xchg
sub
inc
pop
movs
fs
inc
call
xlat
push
inc
xor
pop
icebp
dec
repz
push
adc
sar
jno
mov
test
inc
sbb
out
in
bound
mov
sub
sub
shl
out
(bad)
leave
movs
sbb
cmp
mov
clc
adc
inc
jne
mov
out
imul
push
outs
cmps
jne
dec
sub
movs
jp
sbb
(bad)
int3
cmp
and
pop
test
leave
pop
cmps
daa
xchg
std
pop
call
nop
into
cmc
dec
mov
push
cmp
imul
mov
or
push
pop
iret
fs
push
pop
pop
pop
push
push
push
push
mov
cmp
mov
jg
fisubr
ins
mov
int3
stos
fist
cmp
xchg
dec
pop
cdq
or
push
dec
out
or
inc
repnz
push
dec
test
fwait
or
xor
cmp
mov
pushf
retf
ins
fcomp
or
jg
psadbw
cld
stos
sahf
jge
jge
sbb
psraw
cmp
mov
push
push
jecxz
mov
ror
cli
cmp
dec
inc
mov
xor
adc
aas
idiv
call
cdq
into
xor
xchg
bound
jne
sar
fwait
into
mov
push
xor
sbb
mov
pop
mov
push
sti
je
dec
or
jnp
jnp
in
push
add
cli
inc
push
mov
mov
je
test
popa
shl
movs
sub
mov
adc
xchg
or
jne
jp
fwait
imul
out
push
cs
sub
pop
sbb
xchg
push
stc
cmc
fs
cmp
or
jae
stos
jg
mov
in
xchg
sti
xor
sub
loop
test
adc
jp
jmp
jnp
stos
gs
and
out
sbb
inc
out
out
movs
and
sbb
cmps
lods
jge
mov
jmp
mov
scas
and
push
push
movs
mov
daa
cmps
daa
(bad)
out
aam
push
push
not
jmp
adc
call
pop
mov
pop
test
jbe
ror
ror
fadd
out
shr
pop
or
shl
imul
clc
pop
inc
imul
add
cmp
jae
gs
daa
gs
pop
sar
sub
enter
mov
cmps
je
pop
inc
jl
cmp
mov
sub
movs
aaa
cdq
test
pushf
in
mov
sbb
pop
and
shl
in
mov
hlt
sub
mov
das
inc
mov
inc
clc
and
arpl
(bad)
cmps
je
sti
es
adc
mov
in
je
inc
xlat
imul
aaa
or
(bad)
mov
test
lock
aam
div
inc
aas
cmps
cwde
(bad)
adc
stos
loop
mov
cmps
in
or
xor
dec
cwde
push
or
out
jmp
inc
clc
mov
cmps
pusha
idiv
imul
inc
leave
fst
mov
cmp
sub
in
and
leave
jb
daa
test
cmps
bound
jae
sub
sti
push
out
hlt
mov
push
test
gs
loope
sub
bound
fidiv
and
adc
je
sbb
mov
mov
aam
dec
test
test
test
test
xlat
in
and
inc
mov
not
scas
and
mov
cmps
retf
popf
gs
xor
cmps
xchg
jbe
and
fucomi
inc
jmp
leave
add
and
jp
cmc
out
push
adc
mov
inc
in
and
(bad)
fsub
popa
stos
and
cmps
aad
int3
popf
xor
pop
mul
inc
imul
pop
scas
xchg
out
loope
push
in
sbb
movs
push
cmps
xchg
lock
(bad)
(bad)
addr16
xchg
mov
cmps
iret
pop
or
retf
jbe
pop
pushf
mov
bound
inc
jmp
push
xor
lea
inc
sbb
les
jecxz
xchg
jg
mov
mov
test
sti
add
mov
pusha
mov
in
clc
cmp
test
dec
inc
jl
sub
xchg
and
clc
xchg
out
lods
ror
inc
iret
mov
pop
test
mov
cmp
inc
mov
xchg
fwait
inc
dec
mov
inc
xchg
cmp
lea
pop
xchg
jae
je
mov
dec
test
add
xchg
push
cmp
mov
fld
pop
jmp
mov
outs
add
jp
mov
or
sub
adc
inc
adc
pop
mov
jne
popa
add
inc
rcl
push
xor
pop
xor
cld
push
popf
cli
pushf
mov
ret
add
sub
sahf
xchg
jne
inc
sbb
push
cmp
scas
bound
push
xchg
stos
inc
sahf
gs
lock
xchg
adc
and
sub
sbb
in
and
dec
test
mov
pop
int3
inc
sub
mov
mov
fld
cmc
cwde
inc
repz
xchg
inc
mov
xchg
mov
inc
fcom
cdq
icebp
dec
std
inc
fldcw
cld
cmc
fucom
fsub
in
cmc
mov
ins
mov
lea
dec
cld
movs
lea
xchg
cmc
loop
scas
fist
outs
test
pop
xor
add
mov
test
push
je
mov
lea
push
js
inc
je
and
mul
mov
inc
mov
sbb
imul
or
int3
int3
push
adc
gs
cmc
sbb
loop
data16
xor
mov
pop
lods
or
popf
push
dec
jle
add
ret
sbb
mov
inc
cmps
sub
add
jg
pop
add
fstp
fdiv
cmc
mov
push
leave
cmp
jle
mov
jp
cmp
aad
add
js
jmp
inc
jbe
push
jg
push
xchg
mov
adc
ins
dec
(bad)
cld
inc
adc
dec
cmp
sbb
clc
fisttp
call
call
imul
dec
movs
mov
pop
xchg
ds
mov
inc
lea
and
add
imul
push
or
cmps
les
pop
imul
push
mov
cli
dec
int
mov
icebp
nop
fisub
imul
mov
mov
mov
pop
ins
lods
and
dec
outs
pop
cs
push
(bad)
dec
add
ins
inc
jmp
push
jle
(bad)
lock
(bad)
dec
mov
(bad)
push
mov
jmp
pushf
pushf
mov
imul
push
xchg
pop
cdq
imul
loop
leave
loop
inc
mov
mov
mov
mov
inc
jp
push
or
rcl
int3
pop
mov
das
fbstp
mov
dec
mov
lahf
(bad)
jg
sar
ja
jne
pushf
xchg
inc
nop
dec
and
pmaddwd
addr16
push
jecxz
addr16
not
dec
jns
call
data16
movs
xchg
test
and
inc
mov
adc
pop
scas
(bad)
imul
xchg
mov
cwde
das
adc
sbb
mov
mov
sub
inc
mov
pop
or
aas
jge
call
inc
xlat
out
mov
dec
push
inc
ja
cli
mov
mov
mov
(bad)
and
das
aaa
pop
inc
fcomip
and
and
push
mov
xor
(bad)
ins
inc
pop
mov
or
outs
jae
ja
sub
rcr
dec
mov
neg
mov
sub
mov
push
cmp
inc
pop
stc
sahf
(bad)
push
in
mov
jnp
xchg
jbe
stc
pop
rol
sub
cmovs
sbb
jg
icebp
call
push
add
pop
dec
dec
xchg
hlt
clc
in
jmp
cmp
dec
dec
dec
pop
mov
lods
push
ja
jbe
mov
in
movs
(bad)
add
mov
push
movs
mov
sub
pop
loope
pop
jmp
cs
push
add
outs
push
movs
jbe
mov
aam
test
out
mov
out
in
idiv
movs
push
and
scas
or
sbb
retf
adc
dec
xchg
mov
dec
xor
outs
mov
fstp
loope
mov
ja
inc
imul
data16
fwait
cli
outs
sti
xor
ins
jnp
fisttp
jge
xchg
dec
mov
std
popa
je
pop
sub
pop
psraw
(bad)
xor
dec
and
inc
shl
mov
mov
or
cmp
stos
jnp
pop
sub
sbb
push
(bad)
push
jmp
adc
or
(bad)
adc
xchg
(bad)
gs
mov
push
jmp
mov
inc
mov
xchg
inc
stos
je
aad
out
and
sbb
or
jb
(bad)
cmp
adc
jge
cmp
sahf
cli
and
hlt
imul
or
ja
pop
or
push
test
inc
or
xor
push
cli
retf
pop
sti
dec
mov
sbb
div
or
push
inc
fidivr
sub
repz
add
imul
sub
inc
mov
and
cmp
inc
sbb
or
mov
cmps
or
jp
icebp
dec
fidiv
(bad)
push
sbb
pop
and
movs
jp
outs
(bad)
jne
retf
fadd
ret
sub
push
sbb
rcl
or
mov
nop
call
cmps
and
and
mov
popf
cmps
mov
(bad)
mov
(bad)
movs
mul
mov
cmc
rol
mov
je
mov
stos
lds
sub
ja
mov
mov
pop
fsub
xor
and
mov
add
data16
aad
dec
nop
cli
lock
lods
shl
leave
jecxz
push
ror
cld
or
xor
ret
add
jne
push
sub
leave
hlt
mov
es
xchg
(bad)
push
loope
(bad)
jmp
jbe
int3
mov
and
cmp
ja
push
aaa
push
test
retf
mov
push
aaa
cwde
cmp
jbe
cwde
sbb
and
push
repnz
fcomp
xchg
xchg
retf
gs
int
retf
rcr
mov
(bad)
outs
cmps
ret
xchg
xor
(bad)
lahf
xlat
adc
test
aaa
cwde
cmc
jl
call
mov
daa
scas
imul
xor
mov
popf
and
sbb
jecxz
std
and
shl
fisubr
or
or
mov
shr
loop
pop
sbb
(bad)
inc
and
and
pop
sub
lock
out
adc
cmp
mov
int3
and
fstp
sub
mov
(bad)
push
and
push
sti
pop
aam
or
mov
push
(bad)
sar
jecxz
inc
xor
ss
mov
in
(bad)
push
sar
les
jmp
dec
push
xor
pop
loopne
ds
in
or
push
adc
shl
inc
pop
cmp
sahf
fwait
add
sti
sub
cld
es
mov
push
sub
stos
sbb
int3
xor
push
(bad)
loope
and
dec
jmp
and
(bad)
push
mov
pop
push
popf
fsincos
aam
or
and
sar
gs
xor
cmp
(bad)
(bad)
or
sbb
jge
dec
and
fs
fcom
es
int
in
sub
dec
sub
sub
and
leave
add
pushf
mov
mov
and
ja
and
div
dec
sbb
fs
outs
stos
cs
out
out
mov
pop
xlat
mov
call
icebp
movs
in
xlat
pop
mov
popa
rcl
and
cmp
or
mov
xchg
cdq
xor
push
pop
es
test
or
sbb
lds
push
adc
sbb
fidivr
call
sbb
les
lahf
iret
xlat
sbb
(bad)
ins
push
xor
popa
xor
or
fld
aas
fsub
xchg
loopne
addr16
cdq
out
mov
pop
popa
or
aas
push
sbb
xlat
pop
cmps
sbb
mov
jg
(bad)
cmp
in
sub
(bad)
in
dec
(bad)
jmp
pop
repz
pop
jo
jmp
sbb
cmps
dec
fisttp
xchg
sub
sub
xor
jbe
enter
dec
out
mov
or
push
nop
pop
call
sub
xlat
pop
adc
fistp
and
xlat
jb
inc
add
js
aad
retf
xchg
(bad)
shl
(bad)
test
and
cmp
adc
iret
sbb
das
leave
loope
pop
sub
cmp
jno
popa
sar
adc
ffreep
in
aam
pusha
add
jmp
mov
imul
gs
(bad)
jne
fwait
mov
int3
cmp
cmp
fcom
sbb
dec
and
and
das
and
push
push
sub
daa
lea
test
aaa
cmp
dec
retf
neg
pop
mov
je
jmp
sti
jmp
icebp
cli
rol
jmp
sub
mov
imul
cmc
jle
frstor
repz
push
add
mov
(bad)
test
fcomp
into
mov
push
or
inc
in
retf
mov
in
and
fist
stc
xor
and
(bad)
push
pop
nop
fisubr
call
cmp
aas
inc
loope
cmp
inc
jge
mov
push
ins
(bad)
stc
out
mov
dec
xchg
xchg
fisttp
loope
or
cmp
imul
gs
movs
leave
xchg
jl
push
mov
outs
fwait
fwait
push
dec
cmp
push
ins
dec
push
push
out
sub
sub
add
jmp
pop
sub
mov
dec
inc
push
sub
sbb
jmp
and
pop
int
ins
movs
sbb
jl
jp
jmp
dec
jl
in
or
std
or
or
pop
jp
mov
mov
call
mov
adc
loop
bound
loopne
xor
xor
xor
(bad)
daa
inc
adc
push
fs
fwait
test
jge
xor
js
adc
jno
sbb
inc
mov
adc
(bad)
and
xchg
xchg
xchg
aam
mov
jge
pop
xchg
jns
cmps
in
cmps
ret
test
inc
mov
xchg
inc
nop
adc
nop
push
and
pop
not
test
mov
mov
xor
cmp
les
sbb
mov
xchg
push
pop
push
sahf
data16
pop
aam
mov
adc
jno
mov
ja
adc
push
push
jecxz
(bad)
xchg
jae
(bad)
(bad)
adc
xchg
sbb
jae
adc
shl
jecxz
addr16
data16
repnz
mov
popa
add
movs
arpl
fld
xchg
pop
jnp
inc
and
mov
fnstenv
and
ja
fild
push
ret
(bad)
scas
or
add
xor
jle
jo
aas
stc
inc
loopne
(bad)
std
and
out
inc
mov
cmc
jge
adc
add
or
cmp
pushf
add
mov
sbb
cli
or
ja
cmp
add
mov
xchg
push
aad
popf
push
mov
dec
cmp
ds
je
shl
mov
and
jmp
mov
pop
mov
pushf
mov
or
inc
dec
outs
push
add
pop
aas
push
(bad)
cmp
jmp
(bad)
xchg
sbb
les
bnd
(bad)
sti
pop
in
pop
xchg
pop
mov
stos
mov
mov
fistp
pop
dec
xchg
in
fsub
and
push
aad
mov
fisttp
call
sbb
mov
jne
adc
out
das
or
stos
sar
loop
jo
and
daa
push
pop
repnz
mov
cmc
imul
mov
clc
cmp
adc
rol
jge
mov
packssdw
jmp
inc
popf
jle
arpl
nop
cmp
or
sbb
ins
mov
stc
fs
and
cmp
ficom
ror
cmps
push
jg
xchg
cld
cmps
mov
inc
jp
jle
xor
and
xchg
test
lea
sub
push
mov
out
arpl
into
test
pop
and
mov
int3
pushf
push
jge
xchg
(bad)
in
push
pop
mov
fwait
jle
xchg
pop
in
inc
xchg
cdq
cmps
mov
test
xchg
scas
(bad)
mov
aam
sahf
adc
les
in
jns
push
lahf
mov
mov
out
ds
popa
leave
xchg
push
pop
std
pushf
out
jp
cmps
neg
dec
pop
ss
mov
mov
pushf
dec
pop
aaa
pop
out
pop
dec
push
pop
fwait
sbb
test
call
lds
add
and
xchg
bound
push
adc
push
add
sub
test
push
ror
mov
push
xchg
in
adc
rcl
mov
scas
xchg
xor
cmp
mov
aad
aaa
pop
and
(bad)
pusha
or
xchg
lods
retf
fstp
jle
jg
lahf
mov
mov
lea
lahf
jo
ret
retf
push
jmp
adc
cmps
sub
mov
push
jns
xchg
mov
push
test
mov
cmp
pop
repnz
in
dec
call
cmps
mov
fiadd
dec
cmp
je
repnz
pop
(bad)
lea
mov
lea
retf
jne
call
or
jns
mov
vandnpd
in
cmc
mov
movs
mov
push
inc
stc
mov
sbb
inc
stos
pop
retf
fisubr
lahf
xor
jae
mov
xor
(bad)
retf
sti
sbb
mov
inc
add
shl
add
and
push
pop
popa
cli
ja
sar
sub
xor
inc
out
(bad)
mov
cmp
(bad)
retf
cwde
sub
cwde
and
add
leave
stos
or
inc
aam
jbe
cmc
jbe
dec
stos
mov
mov
pop
push
push
(bad)
and
sbb
inc
adc
test
dec
cdq
push
test
mov
jmp
mov
in
pop
or
data16
(bad)
aas
adc
mov
push
sub
dec
push
sbb
xchg
jle
xchg
push
dec
dec
xchg
jmp
retf
xchg
xchg
jecxz
or
adc
mov
and
push
movs
(bad)
pop
mov
push
sub
dec
out
adc
cmp
inc
jmp
int3
add
cli
out
dec
imul
sbb
test
data16
mov
cmps
sahf
cmps
sub
movs
xlat
sbb
mov
cmp
(bad)
sub
mov
mov
xchg
fdiv
out
or
pushf
sub
dec
pop
xchg
stc
pop
test
inc
enter
dec
lods
jecxz
sub
and
(bad)
fcomp
xchg
jns
sbb
call
sub
cmp
push
or
cmp
sbb
call
mov
xchg
dec
pop
div
push
ja
mov
and
mov
aaa
call
pushf
(bad)
into
mov
sub
pop
sbb
shl
cmps
(bad)
sub
pop
dec
test
xchg
ins
or
stos
mov
xor
or
jae
(bad)
and
jmp
mov
pop
out
addr16
add
gs
push
pop
mov
mov
lds
mov
cmp
jmp
or
xchg
pop
les
scas
repz
pop
std
lods
and
mov
arpl
imul
pop
shr
movs
adc
add
mov
jbe
xchg
dec
imul
jmp
cmp
popa
sub
pop
(bad)
cmps
sub
jp
jnp
ins
fcmove
xchg
mov
sub
push
pop
mov
ret
ins
cmp
or
lahf
(bad)
sbb
or
adc
test
xlat
sub
ss
iret
sub
inc
mov
dec
adc
cmp
rcr
(bad)
inc
enter
cs
enter
(bad)
sub
sbb
mov
cli
retf
xchg
push
call
fadd
sti
fwait
retf
cmp
jp
push
jmp
jmp
cmp
mov
out
mov
aad
push
mov
lods
jo
cmp
mov
test
and
mov
xchg
in
scas
enter
jg
fistp
fcmovnb
cmp
push
jp
cwde
leave
sub
mov
inc
xchg
sbb
test
inc
enter
clc
leave
data16
inc
sbb
mov
adc
push
sub
mov
dec
cmp
push
and
(bad)
es
(bad)
pusha
sar
aad
xlat
fistp
sub
ins
push
mov
adc
xor
cdq
ficom
enter
(bad)
addr16
data16
mov
jg
imul
stc
je
jmp
test
mov
push
adc
das
sbb
xchg
mov
mov
ss
xor
cmp
xor
push
pop
adc
icebp
es
lock
mov
cmp
xchg
inc
xchg
adc
cmc
mov
push
jbe
inc
imul
fimul
aad
pop
outs
cmp
in
jbe
mov
xlat
pop
stos
mov
xlat
repz
es
(bad)
arpl
mul
out
jo
ret
sti
pop
movs
aas
mov
xchg
aad
rcl
xchg
cmovo
(bad)
sbb
fs
loop
daa
sbb
div
push
lds
out
push
xchg
pop
mov
(bad)
jnp
call
(bad)
pusha
push
xchg
(bad)
cmp
int3
outs
enter
xchg
neg
imul
add
stc
rcl
out
je
xchg
aam
push
out
imul
jg
cmp
aad
test
pop
pop
jmp
sub
cmps
dec
push
cmps
addr16
stos
inc
arpl
ret
jp
clc
inc
add
aam
and
out
jb
inc
mov
jns
push
lahf
adc
ficom
add
push
xchg
rcl
xor
xor
xlat
xchg
pop
arpl
push
inc
cmp
pusha
inc
sbb
(bad)
inc
jne
xor
fsqrt
ret
pop
jmp
fstp
fld
ret
fstp
or
je
fstp
fldpi
or
je
fchs
ret
fstp
fldz
or
je
fchs
ret
fstp
jmp
fstp
mov
jmp
call
jmp
push
mov
sub
xor
cmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
push
call
pop
jmp
mov
mov
mov
cmp
jg
je
cmp
jg
je
mov
push
pop
sub
je
dec
je
sub
je
dec
je
sub
je
dec
je
sub
jne
mov
mov
fld
lea
fstp
push
fld
fstp
fld
fstp
call
test
pop
jne
call
mov
jmp
mov
fld
lea
fstp
push
fld
mov
fstp
fld
fstp
call
pop
jmp
mov
mov
jmp
mov
fld
fstp
fld
fstp
fld
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
jmp
sub
je
dec
je
dec
je
dec
je
sub
je
sub
jne
mov
jmp
mov
jmp
mov
fld
fstp
jmp
mov
jmp
mov
jmp
fld1
jmp
mov
mov
jmp
add
cmp
ja
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
fld
fmul
fst
fld
fstp
fld
fstp
lea
fstp
push
mov
call
test
pop
jne
call
mov
fld
fstp
pop
pop
pop
leave
ret
mov
sbb
dec
add
ret
dec
add
ret
dec
add
dec
add
ret
dec
add
ret
push
ret
dec
add
ret
pop
ret
dec
add
dec
add
dec
add
in
push
push
push
push
mov
push
push
call
fld
pop
pop
mov
mov
push
and
cmp
push
fstp
jne
call
test
pop
pop
jle
cmp
jle
cmp
jne
fld
push
push
push
fstp
push
call
add
jmp
push
push
call
fld
pop
pop
jmp
fld
push
fadd
sub
fstp
fld
fstp
push
push
jmp
call
fstp
fld
pop
fcomp
pop
fnstsw
test
jp
push
push
call
fld
pop
pop
jmp
test
jne
fld
push
sub
fstp
fld
fstp
push
push
call
add
pop
pop
leave
ret
push
mov
push
push
push
push
mov
push
push
call
fld
pop
pop
mov
mov
push
and
cmp
push
fstp
jne
call
test
pop
pop
jle
cmp
jle
cmp
jne
fld
push
push
push
fstp
push
call
add
jmp
push
push
call
fld
pop
pop
jmp
fld
push
fadd
sub
fstp
fld
fstp
push
push
jmp
call
fstp
fld
pop
fcomp
pop
fnstsw
test
jp
push
push
call
fld
pop
pop
jmp
test
jne
fld
push
sub
fstp
fld
fstp
push
push
call
add
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
fld
fld
mov
add
jae
xor
test
je
fdivrp
ret
shr
cmp
jne
fdivrp
ret
mov
and
je
cmp
je
fnstcw
mov
or
and
mov
fldcw
mov
and
cmp
je
fmul
fxch
fmul
fxch
fldcw
fdivrp
ret
fmul
fxch
fmul
fxch
fldcw
fdivrp
ret
mov
or
jne
fdivrp
ret
mov
and
jne
fnstcw
mov
or
and
mov
fldcw
mov
and
je
cmp
je
mov
add
jae
jmp
mov
add
jb
fxch
fstp
fld
fmul
fstp
fld
fxch
fldcw
jmp
fldcw
fdivrp
ret
sub
and
jmp
fdiv
add
ret
add
int
fdivr
add
ret
add
int
fdiv
add
ret
fdivrp
add
ret
fdivr
add
ret
fdivp
add
ret
fstp
fld
fstp
fstp
call
fld
fxch
add
ret
add
int
fstp
fstp
call
fld
fxch
add
ret
add
int
fxch
fstp
fld
fstp
fstp
call
fld
add
ret
fstp
fstp
call
add
ret
fstp
fstp
call
fld
add
ret
fstp
fstp
call
add
ret
fstp
fxch
fld
fstp
fstp
call
fxch
fld
fxch
add
ret
add
int
fstp
fxch
fstp
call
fxch
fld
fxch
add
ret
add
int
fxch
fstp
fxch
fld
fstp
fstp
call
fxch
fld
add
ret
fstp
fxch
fstp
call
fxch
add
ret
fstp
fxch
fstp
call
fxch
fld
add
ret
fstp
fxch
fstp
call
fxch
add
ret
fstp
fxch
fld
fstp
fstp
call
fxch
fld
fxch
add
ret
add
int
fstp
fxch
fstp
call
fxch
fld
fxch
add
ret
add
int
fxch
fstp
fxch
fld
fstp
fstp
call
fxch
fld
add
ret
fstp
fxch
fstp
call
fxch
add
ret
fstp
fxch
fstp
call
fxch
fld
add
ret
fstp
fxch
fstp
call
fxch
add
ret
fstp
fxch
fld
fstp
fstp
call
fxch
fld
fxch
add
ret
add
int
fstp
fxch
fstp
call
fxch
fld
fxch
add
ret
add
int
fxch
fstp
fxch
fld
fstp
fstp
call
fxch
fld
add
ret
fstp
fxch
fstp
call
fxch
add
ret
fstp
fxch
fstp
call
fxch
fld
add
ret
fstp
fxch
fstp
call
fxch
add
ret
fstp
fxch
fld
fstp
fstp
call
fxch
fld
fxch
add
ret
add
int
fstp
fxch
fstp
call
fxch
fld
fxch
add
ret
add
int
fxch
fstp
fxch
fld
fstp
fstp
call
fxch
fld
add
ret
fstp
fxch
fstp
call
fxch
add
ret
fstp
fxch
fstp
call
fxch
fld
add
ret
fstp
fxch
fstp
call
fxch
add
ret
fstp
fxch
fld
fstp
fstp
call
fxch
fld
fxch
add
ret
add
int
fstp
fxch
fstp
call
fxch
fld
fxch
add
ret
add
int
fxch
fstp
fxch
fld
fstp
fstp
call
fxch
fld
add
ret
fstp
fxch
fstp
call
fxch
add
ret
fstp
fxch
fstp
call
fxch
fld
add
ret
fstp
fxch
fstp
call
fxch
add
ret
fstp
fxch
fld
fstp
fstp
call
fxch
fld
fxch
add
ret
add
int
fstp
fxch
fstp
call
fxch
fld
fxch
add
ret
add
int
fxch
fstp
fxch
fld
fstp
fstp
call
fxch
fld
add
ret
fstp
fxch
fstp
call
fxch
add
ret
fstp
fxch
fstp
call
fxch
fld
add
ret
fstp
fxch
fstp
call
fxch
add
ret
sub
fstp
fstp
call
add
ret
sub
fstp
fstp
call
add
ret
push
mov
and
cmp
je
fnstsw
and
je
fld
call
pop
ret
fxch
sub
fstp
fld
call
fld
fxch
add
pop
ret
fdiv
pop
ret
push
mov
and
cmp
je
fnstsw
and
je
fld
call
pop
ret
fxch
sub
fstp
fld
call
fld
fxch
add
pop
ret
fdiv
pop
ret
push
fnstsw
and
je
fild
call
pop
ret
fxch
sub
fstp
fild
call
fld
fxch
add
pop
ret
push
fnstsw
and
je
fild
call
pop
ret
fxch
sub
fstp
fild
call
fld
fxch
add
pop
ret
push
mov
and
cmp
je
fnstsw
and
je
fld
call
pop
ret
fxch
sub
fstp
fld
call
fld
fxch
add
pop
ret
fdivr
pop
ret
push
mov
and
cmp
je
fnstsw
and
je
fld
call
pop
ret
fxch
sub
fstp
fld
call
fld
fxch
add
pop
ret
fdivr
pop
ret
push
fnstsw
and
je
fild
call
pop
ret
fxch
sub
fstp
fild
call
fld
fxch
add
pop
ret
push
fnstsw
and
je
fild
call
pop
ret
fxch
sub
fstp
fild
call
fld
fxch
add
pop
ret
push
sub
fstp
fstp
call
add
pop
ret
push
sub
fstp
fstp
call
add
pop
ret
push
push
push
mov
xor
test
jne
shr
and
cmp
je
mov
and
cmp
je
mov
and
je
cmp
je
mov
add
jne
mov
add
jne
mov
and
add
mov
and
sub
ja
mov
and
add
mov
and
sub
js
fld
mov
mov
and
mov
sub
and
or
sub
mov
and
or
mov
fld
mov
fxch
fprem
fstp
fstp
jmp
test
jne
fld
fstp
fnstcw
mov
or
mov
fldcw
mov
and
mov
and
sub
and
or
add
mov
mov
mov
and
and
or
mov
fld
fabs
fld
fabs
fcom
fnstsw
and
jne
fsub
fxch
fmul
fxch
sub
jne
mov
fstp
fstp
fld
fld
fprem
fstp
fld
fldcw
and
je
fchs
jmp
fld
fld
fprem
test
je
fnstsw
test
je
fnstcw
mov
or
mov
fldcw
fmul
fldcw
mov
fxch
fstp
fld
fxch
and
sub
fnstenv
and
or
fldenv
add
pop
pop
pop
ret
push
sub
fstp
fstp
xor
mov
test
je
call
add
pop
ret
fld
fld
mov
or
je
fxch
fstp
fld
fxch
or
fnstcw
mov
or
mov
fldcw
mov
and
cmp
ja
or
fmul
fstp
fmul
fstp
jmp
fnstcw
mov
or
mov
fldcw
fstp
fmul
fstp
fldcw
call
add
pop
ret
fprem
add
pop
ret
push
push
push
mov
xor
test
jne
shr
and
cmp
je
mov
and
cmp
je
mov
and
je
cmp
je
mov
add
jne
mov
add
jne
mov
and
add
mov
and
sub
ja
mov
and
add
mov
and
sub
js
fld
mov
mov
and
mov
sub
and
or
sub
mov
and
or
mov
fld
mov
fxch
fprem
fstp
fstp
jmp
test
jne
fld
fstp
fnstcw
mov
or
mov
fldcw
mov
and
mov
and
sub
and
or
add
mov
mov
mov
and
and
or
mov
fld
fabs
fld
fabs
fcom
fnstsw
and
jne
fsub
fxch
fmul
fxch
sub
jne
mov
fstp
fstp
fld
fld
fprem1
fstp
fld
fldcw
and
je
fchs
jmp
fld
fld
fprem1
test
je
fnstsw
test
je
fnstcw
mov
or
mov
fldcw
fmul
fldcw
mov
fxch
fstp
fld
fxch
and
sub
fnstenv
and
or
fldenv
add
pop
pop
pop
ret
push
sub
fstp
fstp
mov
mov
test
je
call
add
pop
ret
fld
fld
mov
or
je
fxch
fstp
fld
fxch
or
fnstcw
mov
or
mov
fldcw
mov
and
cmp
ja
or
fmul
fstp
fmul
fstp
jmp
fnstcw
mov
or
mov
fldcw
fstp
fmul
fstp
fldcw
call
add
pop
ret
fprem
add
pop
ret
call
ret
call
ret
fpatan
ret
fptan
ret
push
mov
push
push
push
push
push
call
mov
push
push
mov
call
mov
add
mov
and
cmp
push
push
jne
fld
mov
fstp
fld
fstp
call
test
pop
pop
jle
cmp
jle
cmp
jne
fld
push
push
fstp
fld
push
fstp
push
call
add
jmp
fld
sub
fstp
fld
fstp
fldz
fstp
call
fstp
push
push
call
add
jmp
fld
push
fadd
sub
fst
fstp
fld
fstp
push
push
call
add
jmp
fld
fstp
call
mov
fst
pop
fsubr
pop
fstp
fldz
fcomp
fnstsw
test
jp
and
or
push
push
call
pop
pop
fld
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
and
fxch
fstp
fstp
call
leave
ret
movlpd
movlpd
movlpd
andpd
movsd
psrlq
pextrw
orpd
pextrw
and
add
and
mulsd
movlpd
add
movapd
mov
sub
sub
or
cmp
jae
mov
mov
movd
psubq
psrlq
cvtdq2pd
movlpd
movsd
psrlq
pextrw
andpd
and
add
and
mulsd
mulsd
add
addpd
orpd
addsd
andpd
movsd
psrlq
pextrw
movlpd
subsd
movlpd
and
add
and
mulsd
mulsd
addpd
andpd
subsd
addsd
movsd
mulsd
mulsd
mulsd
subsd
mulsd
movsd
subsd
addsd
movlpd
pextrw
subsd
subsd
movlpd
pextrw
subsd
movsd
addsd
subsd
subsd
unpcklpd
and
cmp
jae
and
sub
add
mov
sub
sub
or
cmp
jae
subsd
subsd
movlpd
andpd
andpd
subsd
xorpd
mov
pinsrw
movsd
mulsd
subsd
subsd
mulsd
mulsd
movapd
mulsd
cvtsd2si
mulsd
movapd
addsd
pshufd
addsd
mov
sub
add
or
sub
cmp
jle
add
and
and
add
addsd
movsd
addsd
mulpd
subsd
mulpd
subsd
add
add
add
add
movapd
movapd
mulpd
addpd
pshufd
mulsd
xorpd
mov
addsd
pinsrw
addsd
movlpd
movd
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
leave
mulsd
mulsd
psllq
pshufd
movapd
addsd
mulpd
addsd
unpcklpd
mulpd
mulsd
mulpd
addpd
mulpd
mulsd
pshufd
mulsd
pshufd
mulsd
mulsd
addsd
sub
addsd
addsd
addsd
movlpd
fld
add
ret
movlpd
movlpd
movd
movsd
andpd
psrlq
movd
cmp
jae
or
cmp
je
cmp
jge
neg
add
psllq
orpd
mov
movd
psrlq
psubd
pxor
pmaxsw
psllq
pcmpeqd
pmovmskb
mov
and
cmp
jae
and
cmp
jne
movlpd
movlpd
mov
movd
andpd
psrlq
psubd
movlpd
psllq
pcmpeqd
pmovmskb
and
mov
add
and
cmp
jb
mov
movlpd
movlpd
jmp
movlpd
movlpd
movd
psrlq
movd
mov
and
cmp
jb
ja
cmp
ja
jmp
mov
xorpd
mov
pinsrw
movlpd
movlpd
mulsd
movd
psrlq
movd
cmp
je
andpd
movsd
andpd
psrlq
pextrw
orpd
and
add
and
mulsd
movlpd
add
movapd
mov
jmp
mov
and
cmp
jne
mov
and
cmp
je
shl
and
mov
or
movd
psllq
movlpd
movlpd
divsd
mov
jmp
shl
and
cmp
jne
fldz
ret
movlpd
xorpd
andpd
pcmpeqd
pmovmskb
and
cmp
jne
pextrw
and
cmp
je
and
cmp
jne
movlpd
movlpd
mov
movd
andpd
psrlq
psubd
pxor
psllq
pcmpeqd
pmovmskb
and
cmp
je
movlpd
pextrw
and
cmp
je
fld
ret
fld
ret
movlpd
pextrw
and
cmp
je
fldz
ret
movlpd
pextrw
and
cmp
je
fldz
ret
addsd
movsd
mov
jmp
movlpd
movd
psrlq
movd
and
or
mov
cmp
je
movlpd
movlpd
mulsd
mov
jmp
movlpd
movlpd
movlpd
xorpd
andpd
pcmpeqd
pmovmskb
and
cmp
jne
movd
cmp
jne
psrlq
movd
cmp
je
cmp
jne
fld1
ret
movlpd
xorpd
andpd
pcmpeqd
pmovmskb
and
cmp
jne
pextrw
movlpd
and
xor
or
cmp
je
cmp
je
pextrw
and
cmp
jb
fldz
ret
pextrw
and
cmp
jae
fldz
ret
fld
ret
addsd
movsd
mov
jmp
movd
psrlq
movd
and
mov
or
movlpd
mov
cmp
je
movd
mov
and
cmp
ja
jb
cmp
ja
sub
movlpd
fld
add
ret
movlpd
mov
sub
movlpd
mov
mov
add
mov
add
mov
sub
mov
call
fld
add
ret
cmp
jle
cmp
jae
push
mov
and
add
sub
and
push
mov
jmp
cmp
jle
push
mov
and
add
and
add
push
mov
addsd
movsd
addsd
mov
sub
mulpd
subsd
mulpd
subsd
add
add
add
add
movapd
movapd
mulpd
addpd
pshufd
mulsd
addsd
addsd
movlpd
movd
sub
neg
sar
add
mov
and
add
xorpd
mov
pinsrw
mulsd
mulsd
psllq
pshufd
movapd
addsd
mulpd
addsd
unpcklpd
mulpd
mulsd
mulpd
addpd
mulpd
mulsd
pshufd
mulsd
pshufd
mulsd
mulsd
movd
psllq
movd
pcmpeqd
psllq
addsd
addsd
andpd
addsd
xorpd
pcmpeqd
psllq
subsd
movsd
addsd
andpd
pinsrw
pop
subsd
addsd
addsd
cmp
jg
pop
mulsd
mulsd
addsd
mulsd
addsd
pextrw
and
mov
cmp
je
mov
cmp
je
sub
movlpd
fld
add
ret
pop
addsd
mulsd
mulsd
addsd
pextrw
and
mov
cmp
je
mov
cmp
je
sub
movlpd
fld
add
ret
movlpd
movd
mulsd
psllq
orpd
mov
jmp
mov
cmp
je
movlpd
mulsd
jmp
movlpd
mulsd
jmp
pshufd
mulpd
pextrw
and
mov
sub
sub
or
cmp
jb
cmp
jb
or
movd
psllq
sub
movlpd
fld
add
ret
movlpd
pextrw
and
sub
pextrw
xor
and
cmp
jne
jmp
lea
lea
nop
mov
or
jne
fxch
fyl2x
jmp
mov
xor
fldl2e
fmulp
call
fld1
faddp
test
je
fld1
cmp
je
fdivp
jmp
call
test
jne
fscale
or
je
fchs
jmp
call
or
je
xor
cmp
je
not
fxch
fabs
jmp
jmp
jmp
fstp
fstp
fld
mov
ret
fldln2
fxch
ftst
fstsw
fwait
test
jne
fyl2x
ret
mov
fstp
fld
ret
or
jne
ret
fldlg2
jmp
fldln2
fxch
or
jne
fyl2x
ret
jmp
call
fstp
fstp
or
jne
fldz
cmp
jne
or
je
fchs
ret
mov
fld
cmp
jne
or
je
fchs
jmp
fstp
jmp
fstp
jmp
pop
ftst
fstsw
fwait
test
jne
fstp
fld
or
je
fchs
ret
mov
jmp
fstp
fstp
fld
mov
ret
or
jne
fstp
fld
ret
fld
fabs
fld
fcompp
fstsw
fwait
test
jne
fld
frndint
ftst
fstsw
fwait
mov
fxch
fsub
ftst
fstsw
fabs
f2xm1
ret
fld
frndint
fcomp
fstsw
sahf
jne
fld
fmul
fld
frndint
fcompp
fstsw
sahf
je
mov
ret
mov
jmp
mov
jmp
push
sub
mov
push
sub
fstp
sub
fstp
fsave
call
add
frstor
fld
add
pop
test
je
jmp
ret
push
mov
push
push
fld
push
push
fstp
call
test
pop
pop
jne
fld
push
push
fstp
call
fcomp
pop
pop
fnstsw
test
jp
fld
push
fmul
push
fstp
fld
fstp
call
fcomp
pop
pop
fnstsw
test
jp
push
pop
leave
ret
xor
inc
leave
ret
xor
leave
ret
push
mov
fldz
push
fcom
xor
xor
fnstsw
fld
test
jne
fchs
mov
cmp
mov
jne
cmp
jne
fld1
fcom
fnstsw
test
jp
fstp
fstp
fstp
fld
jmp
fcom
fnstsw
fstp
test
mov
jne
fstp
jmp
fstp
jmp
cmp
jne
cmp
jne
fld1
fcom
fnstsw
test
jp
fstp
fstp
jmp
fstp
fcompp
fnstsw
test
mov
jp
fld
jmp
fld
xor
fstp
inc
jmp
cmp
fstp
jne
cmp
jne
fcom
fnstsw
test
jnp
fcom
fnstsw
test
mov
je
fstp
fld1
jmp
cmp
fstp
jne
cmp
jne
fld
push
push
fstp
call
fldz
pop
fcom
pop
mov
fnstsw
test
jp
cmp
fstp
fld
jne
fchs
jmp
fcom
fnstsw
test
jne
cmp
jne
fstp
fld
mov
fstp
jmp
fstp
fld1
jmp
fstp
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
mov
movapd
unpcklpd
psrlq
pextrw
movapd
movapd
movapd
movapd
andpd
orpd
addpd
pextrw
and
movapd
movapd
andpd
subpd
mulpd
subpd
addsd
mulpd
movapd
addpd
and
sub
cmp
ja
sub
add
cvtsi2sd
unpcklpd
shl
add
mov
mov
cmp
cmove
movapd
movapd
movapd
mulpd
mulpd
addpd
movapd
mulsd
movapd
mulpd
movapd
andpd
addpd
addpd
mulpd
mulsd
addpd
movapd
unpckhpd
mulpd
sub
movapd
unpckhpd
addsd
addsd
addsd
movlpd
fld
add
ret
movlpd
movapd
cmpeqsd
pextrw
cmp
ja
cmp
je
cmp
ja
movlpd
movapd
movapd
andpd
orpd
cmpeqsd
pextrw
cmp
je
fld
ret
mov
jmp
movlpd
divsd
movlpd
mov
jmp
movlpd
mulsd
mov
jmp
add
and
cmp
jae
xorpd
divsd
mov
sub
movlpd
mov
mov
add
mov
add
mov
mov
call
fld
add
ret
movlpd
movlpd
movd
psrlq
movd
and
or
cmp
je
mov
jmp
lea
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
mov
movapd
unpcklpd
psrlq
pextrw
movapd
movapd
movapd
movapd
movapd
andpd
orpd
addpd
pextrw
and
movapd
movapd
andpd
subpd
mulpd
subpd
addsd
mulpd
movapd
addpd
and
sub
cmp
ja
sub
add
cvtsi2sd
unpcklpd
shl
add
mov
mov
cmp
cmove
movapd
movapd
movapd
mulpd
mulpd
addpd
movapd
mulsd
movapd
mulpd
movapd
andpd
addpd
addpd
mulpd
mulsd
addpd
movapd
mulpd
movapd
unpckhpd
mulpd
sub
movapd
addpd
unpckhpd
addsd
addsd
addsd
movlpd
loop
ror
dec
mov
cmps
sub
popf
push
mov
adc
sub
mov
test
xchg
clc
sahf
inc
out
sbb
mov
retf
sar
jp
cwde
push
add
dec
mov
call
bound
ins
push
outs
mov
fxch
mov
clc
sar
ins
sub
out
ins
pusha
loopne
call
sbb
leave
sub
mov
out
jecxz
inc
iret
inc
call
pop
add
imul
lahf
clc
push
or
jb
xchg
inc
(bad)
jmp
add
mov
xor
ficomp
cwde
hlt
sbb
and
mov
cmp
mov
call
jae
adc
loop
mov
inc
hlt
mov
sub
mov
mov
retf
or
call
ret
cmp
test
dec
dec
adc
lods
(bad)
jp
dec
out
mov
sub
mov
inc
retf
rcr
ja
inc
dec
dec
or
push
jnp
inc
jno
mov
(bad)
jnp
pop
mov
sub
dec
xor
add
cmp
fidiv
xchg
fnsave
cmp
or
xchg
inc
dec
inc
dec
mov
out
les
cmp
int
adc
pop
in
push
retf
clc
dec
and
pop
retf
mov
dec
bnd
cmp
pusha
dec
cdq
cmp
fs
dec
repz
aaa
aad
inc
and
pop
shr
aam
mov
rcr
pop
jb
push
and
js
stos
push
cmp
js
mov
dec
stos
scas
jmp
outs
adc
pop
ror
pop
mov
out
mov
mov
ret
add
cmp
dec
sbb
xlat
es
mov
mov
in
dec
arpl
mov
and
sbb
inc
test
push
into
mov
adc
call
adc
retf
outs
mov
es
push
jns
dec
sub
cmps
sbb
sbb
js
xchg
sti
outs
jae
cmps
push
les
or
xor
pop
xor
mov
jb
cmp
pushf
inc
push
sbb
fsub
js
pop
adc
pop
jnp
imul
jns
dec
test
dec
jmp
push
push
fld
fdiv
stos
(bad)
jns
or
leave
aaa
cli
inc
popf
and
mov
outs
out
inc
test
stos
push
cwde
loope
ss
movs
mov
loope
aam
mov
enter
outs
jp
(bad)
leave
test
(bad)
repz
or
push
(bad)
into
or
call
mov
dec
sub
fld
add
add
adc
xor
in
out
jno
mov
into
mov
das
ins
or
ja
fdiv
dec
leave
and
add
push
adc
movs
loop
int3
bound
cmp
push
pop
(bad)
dec
test
call
int
and
xor
fwait
outs
xor
xor
xchg
push
push
in
mov
pop
jbe
inc
mov
push
and
cld
rcr
jb
or
mov
push
sub
sub
bound
call
call
lock
fisub
nop
ins
(bad)
and
enter
cmp
cs
and
push
add
xchg
jp
pop
inc
cmp
loopne
fidivr
xor
cld
rcl
movs
xchg
inc
call
push
(bad)
fstp
mov
push
inc
adc
int3
into
fdiv
and
setno
dec
cmp
fsub
stos
mov
mov
mov
adc
imul
jae
cwde
in
mov
lds
xchg
ins
xchg
std
and
pusha
icebp
mov
leave
mov
jecxz
sbb
sbb
pusha
dec
loop
call
xor
add
imul
add
(bad)
cmps
jl
sbb
adc
sub
dec
jecxz
ins
mov
and
pop
sbb
jne
or
pop
fnstcw
sbb
xchg
pop
mov
mov
dec
into
pushf
fs
test
dec
dec
xchg
enter
test
sub
mov
sub
dec
pop
(bad)
jo
mov
adc
test
add
jecxz
xchg
out
mov
add
sbb
loope
push
das
dec
adc
mov
fstp
cmp
push
adc
into
imul
push
mov
ret
repnz
jmp
fcom
inc
pop
addr16
enter
cwde
jns
xchg
mov
lock
jae
or
call
addr16
sub
push
pop
or
xchg
dec
mov
push
into
je
push
mov
(bad)
neg
lock
ret
mov
loopne
jns
retf
push
add
popf
push
enter
sub
dec
push
(bad)
jmp
rcr
xor
imul
and
sbb
scas
inc
cmp
stos
sbb
or
push
gs
mov
xlat
(bad)
dec
jo
out
cs
mov
or
cdq
js
fs
test
rcr
push
jmp
mov
sub
or
popa
adc
cmp
mov
lods
lahf
scas
xchg
pop
jl
sub
jae
iret
cli
aaa
xor
push
sbb
sub
xchg
xlat
test
add
cld
sti
popa
xor
mov
call
(bad)
rol
mov
loopne
out
in
in
add
jle
out
sbb
push
cmp
in
fisttp
imul
push
int3
enter
mov
adc
bound
inc
nop
ins
inc
and
popf
jmp
jo
add
(bad)
int
fs
cmp
jmp
in
rol
inc
sbb
sub
fdiv
lods
ror
jo
mov
xchg
imul
cmp
push
dec
add
inc
cli
lds
sub
mov
pushf
(bad)
xor
(bad)
std
cli
aam
enter
rcl
push
lock
mov
popf
bound
pop
xchg
fs
add
mov
sbb
sub
jns
xchg
mov
je
jae
dec
and
push
mov
or
jbe
stos
adc
repnz
je
mov
stc
sub
out
inc
(bad)
mov
mov
mov
rcl
pushf
xchg
cmp
adc
push
arpl
push
int
jae
add
ret
pop
push
popf
xor
inc
inc
dec
pusha
pop
push
or
dec
ret
and
cmp
outs
mov
adc
sbb
jmp
cdq
mov
dec
scas
sub
mov
mov
inc
fwait
and
jb
jmp
jns
cli
ja
arpl
mov
aas
cmp
push
mov
sti
daa
and
stos
push
sbb
mov
hlt
pushf
pop
call
push
xor
sub
or
ret
dec
xchg
mov
xor
loopne
xor
test
shl
fs
(bad)
xor
inc
mov
or
adc
imul
xchg
fstp
pusha
push
sub
inc
pop
pop
and
mov
in
das
jae
js
popf
aaa
or
push
sub
xor
fild
sbb
ds
(bad)
mov
enter
jb
shl
mov
mov
jns
inc
xchg
push
lock
jmp
push
ror
test
push
femms
cmp
push
push
inc
add
push
test
jns
sub
stos
pop
push
inc
hlt
fst
(bad)
ret
ins
push
or
xor
ja
sahf
test
aam
mov
clc
cs
add
cli
cld
inc
inc
xor
add
sub
mov
or
loope
cli
jp
xor
mov
inc
popf
stos
pusha
cmp
adc
dec
cli
cmp
mov
inc
arpl
push
arpl
imul
sbb
push
push
inc
mov
pop
xor
or
out
push
fwait
inc
mov
leave
jb
ins
ds
(bad)
sub
stos
mov
push
jb
lods
sub
cmp
mov
push
pop
mov
adc
in
fisubr
sbb
xchg
inc
dec
xchg
mov
add
sbb
and
pop
jne
jae
dec
xchg
ins
or
(bad)
cmp
lahf
pop
adc
mov
shr
lods
xor
and
mov
xchg
sbb
mov
lods
lock
pop
sub
retf
mov
lock
jb
inc
xchg
dec
and
pusha
jb
adc
rol
sub
aam
dec
outs
or
cwde
xor
jmp
icebp
(bad)
(bad)
cmp
fsub
lock
imul
push
popf
(bad)
loopne
dec
lock
xchg
add
xchg
xchg
ficom
mov
dec
dec
cs
adc
ins
push
dec
jmp
sbb
mov
in
push
loope
sub
mov
fnstsw
xor
xor
nop
push
push
jmp
push
mov
adc
push
mov
fwait
into
inc
pop
xchg
sbb
jp
or
jmp
pushf
pop
sub
cmp
jecxz
and
fs
add
fisttp
loopne
xlat
ror
sub
test
push
es
mov
add
fsub
pushf
mov
and
adc
adc
ins
stos
enter
push
(bad)
fmul
cs
cmp
sti
dec
retf
xor
out
jae
sbb
ins
sub
stos
dec
and
inc
jecxz
mov
mov
psubusw
arpl
sub
les
mov
test
cmp
into
fcom
sbb
cli
mov
in
fwait
mov
mov
shl
mov
cdq
add
int
scas
addr16
outs
imul
cdq
or
jp
mov
jle
jo
inc
retf
or
outs
add
fisttp
scas
pop
inc
je
cmp
or
adc
mov
sbb
mov
sbb
adc
pusha
stos
or
mov
les
ret
clc
lock
int
(bad)
jle
or
add
mov
shl
jmp
jne
je
(bad)
daa
ror
cli
pusha
enter
clc
sbb
ins
data16
nop
hlt
add
fcomp
fcom
mov
call
push
sti
push
ja
or
push
push
inc
sub
jo
push
arpl
sub
out
mov
cld
aad
bound
sbb
and
arpl
mov
sub
jmp
in
ins
inc
mov
mov
pop
shl
test
dec
pop
(bad)
mov
or
iret
stos
fstp
inc
(bad)
call
xchg
xlat
jbe
(bad)
mov
ror
dec
add
sbb
repnz
xor
xor
or
es
cli
pop
inc
push
and
jmp
push
(bad)
mov
jmp
jmp
pop
or
out
push
loopne
shl
jns
add
cmp
or
mov
shr
push
and
pusha
adc
ss
mov
mov
(bad)
enter
and
or
adc
dec
mov
repnz
cmps
call
call
or
mov
in
dec
cmps
fisub
xchg
fsub
(bad)
into
xchg
clc
jbe
mov
dec
pop
test
xor
xchg
fbstp
and
dec
ret
shr
push
cmp
aad
and
add
loope
sbb
or
adc
sbb
and
or
pop
and
dec
lods
addr16
add
mov
sahf
mov
jmp
ret
sbb
enter
push
mov
cmp
xor
stc
cmps
sub
loope
fisttp
rcl
fs
jle
(bad)
test
jmp
mov
(bad)
fisubr
pop
sti
mov
pushf
mov
adc
dec
xor
rcl
arpl
mov
sub
xor
xchg
sub
std
leave
push
aaa
js
mov
in
mov
fadd
xchg
inc
fucomip
test
sub
mov
dec
jecxz
mov
xor
mov
or
out
(bad)
imul
outs
out
adc
adc
cmps
dec
test
cwde
hlt
clc
cs
mov
nop
mov
inc
push
inc
jp
mov
aaa
inc
shl
in
scas
fs
mov
(bad)
clts
out
xor
and
jl
mov
xor
dec
xchg
cmps
jle
cmp
dec
fsub
add
mov
test
sar
ret
stos
loope
dec
cmps
fs
loopne
xor
cmp
pop
and
scas
mov
xchg
mov
sub
(bad)
mov
stos
arpl
lock
pop
neg
jecxz
aad
adc
and
iret
or
or
mov
or
lea
cld
pop
loop
xchg
lods
rol
leave
push
mov
test
ins
inc
(bad)
cwde
pop
jmp
mov
call
movs
lock
test
cmps
fst
ror
xor
adc
mov
dec
and
mov
jae
adc
or
xor
xchg
repnz
rol
ins
xchg
in
stos
mov
loop
bound
cmc
sbb
fadd
jae
add
and
(bad)
dec
pop
jmp
clc
cmp
xchg
icebp
jecxz
cmp
and
gs
les
sub
dec
retf
mov
or
mov
arpl
retf
cwde
mov
test
cmp
dec
mov
and
clc
mov
bound
popa
sar
enter
mov
mov
dec
sub
(bad)
sub
pop
dec
sub
pop
dec
sbb
lahf
stos
cmp
cmp
sub
inc
sbb
push
xchg
sbb
lea
mov
jecxz
mov
retf
stos
mov
je
repz
rcr
jno
mov
scas
(bad)
out
cmc
adc
ds
push
int
loop
pop
test
mov
cmp
pop
mov
inc
fdiv
jmp
fbstp
mov
pushf
bound
ret
stos
mov
or
add
jl
jae
popa
cdq
(bad)
das
pushf
loopne
mov
lea
jo
push
jae
push
sbb
adc
cld
inc
shl
jb
test
ins
stos
cwde
fs
cmp
adc
lods
and
dec
or
xor
pop
fldcw
aam
aad
gs
push
cs
mov
loopne
pop
and
push
jne
mov
sub
test
in
jno
js
aad
jge
mov
or
fwait
mov
into
lea
pushf
and
mul
pusha
fdivr
(bad)
inc
js
lods
jmp
imul
xor
and
mov
and
sub
jmp
add
outs
dec
imul
inc
sti
adc
lock
dec
push
dec
xor
stc
pop
sbb
xor
dec
ins
sbb
mov
int
inc
cmc
ss
pop
fxch
in
push
mov
fld
adc
popa
jae
pop
inc
push
pop
pop
mov
xchg
inc
fidivr
(bad)
cwde
imul
rcl
sbb
mov
ret
pop
ret
leave
jae
out
sbb
xchg
test
mov
clc
fnstenv
push
cdq
jno
les
and
bound
lods
dec
out
add
adc
cmp
dec
jo
sub
sbb
mov
sti
sbb
xor
adc
fisub
(bad)
in
xchg
test
in
mov
add
mov
sub
mov
push
sbb
dec
mov
fcomp
push
rcl
dec
xor
ret
sub
or
(bad)
mov
scas
inc
popf
dec
adc
dec
(bad)
stc
cmc
pusha
mov
rcr
(bad)
xchg
cli
inc
addr16
dec
cmc
ret
mov
in
cmc
aaa
hlt
and
lahf
xchg
inc
cmc
aas
sbb
mov
les
xchg
nop
outs
test
push
lahf
jmp
mov
add
cmp
pop
cdq
jns
iret
mov
mov
rcr
fsub
(bad)
loopne
enter
call
adc
int3
stos
icebp
mov
cmp
jp
mov
pop
out
gs
ins
(bad)
add
add
xchg
dec
or
into
cdq
(bad)
ins
loop
jb
stos
mov
inc
lock
sub
pop
pop
sub
mov
clc
add
outs
fmul
pop
xor
daa
cs
sub
adc
sbb
dec
ror
loopne
sbb
stc
or
loopne
sub
repz
and
in
fiadd
xor
test
fld
jae
cmp
sbb
add
cmp
inc
sbb
pop
push
into
mov
lock
jmp
imul
dec
xchg
mov
(bad)
es
imul
mov
jo
(bad)
mov
cmp
fsin
arpl
mov
sbb
fst
and
push
pop
jo
shl
cmc
nop
cmps
and
aam
and
adc
adc
stos
rol
cdq
mov
adc
aaa
push
ret
fcmovne
sub
lds
add
addr16
xchg
imul
scas
push
jge
pusha
mov
or
jl
xchg
(bad)
push
push
or
cs
xor
and
or
mov
clc
imul
test
aaa
stos
add
dec
stos
push
and
mov
jp
sbb
in
adc
inc
mov
mov
mov
bound
jbe
adc
cmp
ds
fld
jb
out
add
movs
add
inc
in
aas
pop
es
ins
and
mov
jae
push
pop
mov
pop
cmp
lock
mov
call
and
enter
aad
pop
call
push
loope
dec
ficom
push
xchg
inc
inc
js
inc
sar
add
ret
int3
bound
pushf
outs
sbb
inc
jo
push
ret
sar
mov
cwde
mov
movs
pop
xchg
xchg
adc
sbb
jb
dec
fsub
jo
shl
or
adc
dec
sbb
pop
inc
inc
jno
adc
gs
sbb
add
lock
cwde
push
xor
xor
jl
pop
mov
push
lea
sbb
pop
mov
out
push
(bad)
and
mov
and
out
push
lahf
mov
enter
(bad)
imul
fldenv
cdq
jnp
shl
push
mov
sbb
inc
dec
clc
mov
pop
popa
add
sti
int
outs
int
lahf
jae
scas
cmp
mov
(bad)
mov
fidivr
call
hlt
(bad)
shl
ds
cdq
jl
pusha
xchg
sti
sub
xor
cdq
in
dec
nop
loopne
and
dec
ins
and
or
add
call
mov
mov
or
add
ret
mov
out
aam
ss
adc
dec
aaa
or
fmul
dec
xchg
xor
add
push
repz
xchg
push
pop
add
mov
cmp
jmp
xchg
jbe
or
fist
xchg
loope
in
jnp
and
or
jns
xor
dec
mov
inc
stos
sbb
stos
fwait
adc
(bad)
xchg
call
jae
add
test
mov
clc
fucomp
fadd
mov
ret
inc
clc
inc
cmps
ror
adc
mov
cmps
dec
repnz
call
and
lods
pop
inc
lock
add
sahf
ret
cdq
arpl
ret
ds
test
scas
shr
lahf
dec
outs
sub
pop
mov
or
sub
add
jecxz
call
daa
push
fadd
loop
sbb
stos
xchg
sbb
es
movs
scas
push
repz
mov
cwde
mov
scas
or
lock
cmp
pop
jae
dec
pop
push
in
push
inc
stc
mov
dec
daa
das
xlat
or
retf
dec
cdq
data16
mov
ja
push
mov
lea
test
jae
call
cmp
adc
xor
retf
mov
cli
cwde
imul
sub
pop
ss
frstor
rol
bound
fstp
stos
xor
or
shl
cdq
xchg
xlat
enter
cmp
test
jmp
pop
fwait
inc
jl
in
xor
or
cdq
test
(bad)
mov
sbb
and
push
mov
mov
sbb
sbb
stos
(bad)
add
and
xor
lods
fldenv
jge
mov
rcr
dec
inc
pop
aad
cmp
mov
fxch
iret
inc
jns
jmp
fwait
mov
jmp
call
ds
sbb
fdiv
frstor
add
ret
mov
jle
rol
cli
lock
jno
xchg
retf
mov
test
cdq
shl
pop
inc
mov
xor
sub
jg
je
cmp
call
in
jb
loop
mov
xlat
sub
aas
and
and
sahf
xchg
nop
xchg
fwait
inc
mov
out
inc
mov
xor
(bad)
adc
or
inc
add
es
shr
mov
in
inc
xchg
mov
mov
sbb
out
mov
js
or
dec
gs
out
bound
enter
test
out
pop
das
jmp
clc
ror
push
jbe
jne
ss
popa
inc
pop
aad
mov
retf
arpl
adc
std
mov
repz
cmp
dec
hlt
xlat
push
add
stos
xor
fcmovnbe
clc
mov
sbb
jmp
jbe
inc
xchg
inc
dec
sub
daa
cmp
mov
push
stos
cli
pop
fmul
or
mov
or
cmp
repz
(bad)
dec
call
and
cdq
mov
bound
inc
inc
jp
(bad)
popf
inc
test
cmp
cmp
lods
test
aam
outs
mov
mov
lea
scas
sub
sar
push
ret
das
sbb
pop
and
movs
mov
lods
xlat
clc
fst
stos
repz
std
add
sub
fistp
add
sahf
call
lods
adc
jmp
xor
stos
xor
lods
xchg
scas
dec
push
dec
inc
fucomp
ret
add
arpl
xlat
add
popf
mov
pop
sbb
push
lods
repz
rol
fdiv
cmps
and
cmp
xchg
retf
dec
fimul
es
repnz
neg
and
xchg
pop
popa
mov
dec
sbb
sbb
clc
stos
shr
adc
je
fst
test
ins
loop
addr16
retf
inc
data16
sahf
xor
sbb
jmp
xchg
xor
inc
test
xor
pusha
cmp
scas
jmp
inc
test
mov
jno
xchg
ins
inc
shl
imul
xchg
xchg
scas
sub
test
fld
rcr
and
xchg
ins
pushf
adc
fcmovne
out
cli
dec
scas
inc
shr
ret
jo
add
or
repz
repnz
add
retf
lods
mov
loop
pushf
cmp
dec
ja
mov
xor
pop
mov
hlt
cdq
repnz
mov
push
mov
cs
sbb
add
xor
idiv
loop
mov
mov
jb
xor
jae
cmp
add
mov
addr16
jl
adc
(bad)
push
xchg
lahf
mov
mov
sub
dec
int3
xchg
inc
xor
xor
mov
sbb
test
mov
add
xor
jl
ja
dec
and
out
loop
rcl
inc
(bad)
dec
scas
xchg
or
jne
popa
fsub
sbb
or
test
fwait
(bad)
into
dec
cmp
(bad)
adc
jge
add
xchg
and
test
sbb
in
cs
cwde
add
mov
jo
inc
(bad)
pop
and
ja
loopne
cwde
inc
push
retf
fimul
shr
out
push
push
xchg
mov
cld
imul
sbb
jb
jge
dec
xchg
ds
and
mov
and
test
push
out
jae
repz
jp
(bad)
or
push
fst
je
sar
ficomp
lods
sub
imul
jo
in
loope
mov
jecxz
ret
mov
movs
mov
mov
test
xor
xchg
ror
inc
mov
sbb
aad
add
adc
sub
inc
sbb
popa
jb
push
pop
add
std
jbe
jo
cmc
fmul
cwde
mov
pop
cmp
pop
nop
mov
cmc
dec
inc
dec
jecxz
in
ins
adc
jns
and
and
push
inc
mov
jnp
out
push
mov
add
adc
xor
jg
inc
dec
add
mov
jecxz
add
mov
aad
cli
in
lods
mov
mov
mov
xchg
mul
lods
leave
pop
xor
sub
mov
fs
adc
sbb
fiadd
mov
iret
(bad)
dec
ror
xchg
mov
imul
into
mov
xchg
adc
cmp
jmp
call
push
or
dec
and
xor
mov
inc
jl
in
and
mov
mov
push
jns
inc
xor
xor
jb
(bad)
and
fmul
in
(bad)
xchg
push
cmp
data16
das
shl
cmp
iret
out
in
mov
mov
retf
in
mov
leave
scas
movs
cs
mov
xchg
dec
fcomp
lods
(bad)
push
xchg
mov
stc
loop
jns
(bad)
gs
(bad)
xor
cld
sub
lahf
in
int
ins
loop
jo
stos
scas
mov
cld
test
inc
dec
xor
inc
dec
dec
jnp
add
test
bnd
movs
dec
cmp
ss
inc
mov
loopne
add
adc
imul
retf
jmp
xchg
retf
ret
(bad)
sbb
inc
push
ins
arpl
pop
sar
dec
dec
pop
or
mov
and
push
inc
ret
out
mov
sbb
icebp
ret
test
adc
jl
bnd
push
xchg
pop
scas
js
pop
sbb
push
push
idiv
xor
repnz
stos
(bad)
and
rol
mov
in
aas
adc
push
sub
nop
mov
push
dec
daa
fsubr
mov
mov
popf
les
test
mov
or
add
jns
ds
xor
(bad)
call
fld
mov
xor
jge
and
or
pop
ss
in
outs
(bad)
dec
mov
mov
xchg
stos
cld
es
lds
inc
(bad)
and
cmp
movs
rcl
loop
ret
mov
shl
inc
movs
xor
inc
sbb
mov
sar
loop
iret
out
cmps
mov
cmp
or
push
scas
or
cmp
stos
mov
pop
repnz
mov
in
mov
push
cdq
pop
mov
push
jb
in
mov
popf
(bad)
jl
push
mov
push
dec
mov
sbb
pop
dec
push
stos
add
mov
repz
jmp
sub
rcl
dec
jb
js
mov
push
pushf
xchg
and
cwde
add
loopne
push
jo
cli
dec
outs
dec
out
popa
movs
xor
pop
sub
cwde
pop
wrmsr
inc
dec
dec
jmp
loopne
nop
aaa
jnp
adc
mov
push
xor
jo
popa
loop
test
or
jmp
mov
sub
repz
rcr
adc
inc
cmp
cmp
in
or
xor
sub
push
or
int3
pop
jmp
loop
stc
push
retf
retf
ret
or
fdivp
add
dec
push
fisubr
sbb
jp
icebp
mov
out
adc
mov
rcl
cmp
pop
ins
jnp
pop
retf
mov
pop
jno
out
pop
and
mov
mov
add
out
or
xchg
div
pop
loop
xchg
dec
int3
clc
mov
sbb
and
test
fcom
movs
and
xchg
ret
mov
xchg
and
fisub
mov
into
and
pop
jge
cmp
lods
pusha
imul
or
push
jp
enter
and
inc
sub
and
and
in
dec
pop
sub
cmc
inc
loop
sbb
or
jae
mov
retf
push
pop
sub
xchg
jmp
jae
mov
jnp
or
inc
mov
fcmovu
sub
lahf
xlat
sbb
cwde
jl
ins
movs
(bad)
cwde
ror
div
inc
and
mov
inc
(bad)
mov
(bad)
xlat
jle
cmps
sub
call
or
fxch
lahf
mov
int3
lock
xor
cmp
or
sub
adc
push
pop
jns
inc
test
test
xchg
clc
ins
in
xchg
fsubr
bound
push
data16
or
dec
jl
sub
scas
ret
in
jle
push
loop
sub
inc
inc
sbb
and
lods
mov
test
mov
shl
out
cmp
mov
data16
ins
loop
stos
inc
add
xchg
sbb
clc
iret
sub
sub
push
jne
dec
ss
dec
inc
xor
or
call
inc
xor
jo
retf
sub
push
cmp
adc
adc
(bad)
mov
mov
in
lods
inc
and
inc
lods
pusha
call
and
dec
cld
lds
inc
cmp
inc
aad
push
push
cmp
mov
repz
loop
add
cmp
rcr
push
js
sbb
push
cmp
stc
aas
sbb
std
jns
mov
mov
jns
test
int3
out
cmp
xchg
lea
cmp
adc
repz
mov
adc
outs
sub
mov
pop
(bad)
lock
sub
mov
mov
lock
shl
push
outs
retf
or
jp
mov
pushf
arpl
and
push
into
mov
(bad)
es
or
fcmovb
xor
inc
jnp
jmp
imul
cmps
pop
out
ficomp
mov
loope
aaa
pop
sbb
in
jno
add
and
dec
cdq
mov
sub
dec
and
dec
nop
ret
adc
cmp
idiv
jb
push
(bad)
xchg
fdiv
push
lods
push
push
sub
sbb
add
and
hlt
pop
and
cmp
int
xor
dec
xchg
push
retf
add
pop
outs
dec
inc
cmp
jno
or
shr
daa
out
push
and
mov
arpl
rol
jp
inc
in
test
shl
and
jmp
jmp
dec
xor
xor
xchg
sbb
pop
cmp
bound
push
cmp
or
call
or
mov
mov
pop
and
add
in
fwait
jo
sti
aad
adc
test
add
adc
daa
rcr
invd
ss
leave
xchg
add
jmp
cwde
cmc
or
pop
in
aaa
sar
sub
cmps
mov
cmc
sbb
popf
mov
dec
popf
inc
fcomp
fnsave
dec
js
repnz
mov
jne
data16
push
or
test
xchg
arpl
xchg
clc
dec
adc
ins
sub
lea
pop
pop
or
xchg
sbb
pop
mov
cmp
pop
push
jg
dec
sub
xchg
out
push
adc
jo
scas
mov
pop
jno
jmp
push
pop
push
sbb
jns
nop
cmp
jne
loop
xor
and
popf
sbb
int3
push
pop
jmp
xor
add
xor
inc
outs
or
sub
xor
push
xor
or
mov
enter
cmps
mov
dec
ins
mov
cdq
push
pop
shl
nop
or
inc
pop
leave
fwait
jno
scas
jo
dec
rol
fcomi
or
push
repnz
cmp
fs
aam
outs
pop
int3
retf
xor
in
lock
mov
push
inc
sbb
adc
daa
fiadd
dec
cmp
test
call
sbb
add
dec
shl
ror
mov
inc
inc
cli
adc
adc
aad
mov
lea
aaa
frstor
mov
mov
inc
lods
enter
mov
mov
pop
add
add
jno
or
pop
aam
ret
retf
push
xchg
inc
and
mov
dec
jns
jns
adc
test
stos
xrelease
xchg
icebp
cmovge
loop
mov
pop
rol
mov
xor
push
add
mov
out
ss
cwde
add
jae
cmp
dec
xor
mov
dec
xor
in
bound
and
add
pop
test
add
loopne
push
mov
mov
iret
fsub
jb
mov
push
add
push
clc
inc
ret
jecxz
mov
scas
cmps
in
fadd
ret
jb
jp
arpl
scas
inc
push
pop
cmp
sbb
dec
(bad)
sbb
ins
xchg
inc
cmp
mov
movs
xchg
in
sub
rcl
add
clc
cmp
std
mov
sbb
pop
jno
mov
mov
adc
pushf
je
push
(bad)
jmp
std
adc
push
and
or
jecxz
aam
push
sbb
ret
inc
xor
or
aas
sti
mov
dec
sar
push
rcl
outs
adc
adc
(bad)
xchg
repz
dec
sbb
stc
push
(bad)
fcomp
xlat
pushf
shl
in
retf
les
xor
mov
push
and
ss
or
mov
dec
jo
push
or
ins
mov
sbb
mov
xchg
sbb
mov
lock
inc
pop
imul
adc
shl
shr
sub
push
mov
or
lahf
and
adc
sbb
adc
pusha
xchg
lock
bnd
xchg
xchg
and
mov
stos
xchg
mov
or
mov
arpl
ror
(bad)
cmp
test
mov
or
mov
inc
loop
add
push
lock
js
repnz
daa
test
adc
(bad)
xchg
add
mov
sbb
out
sub
xor
rcl
sahf
sub
pop
xor
inc
adc
push
push
inc
pop
repz
inc
outs
es
xor
pop
das
mov
jae
push
dec
jle
dec
clc
jno
rol
cwde
xor
and
push
nop
mov
push
add
add
adc
lahf
rol
adc
sbb
or
pop
push
push
cs
sub
loop
sub
pop
and
ret
test
stos
add
loopne
shr
dec
push
mov
mov
out
or
dec
retf
xor
mov
cdq
retf
aam
es
loopne
push
sbb
pop
sahf
inc
push
push
pusha
imul
jl
and
cmc
(bad)
es
jmp
nop
add
in
lea
mov
test
outs
fucomp
mov
repz
fnstcw
cs
bound
ret
cmp
adc
mov
mov
jmp
loopne
xor
test
xchg
add
ins
aam
cwde
ror
icebp
mov
adc
and
jmp
je
inc
dec
sbb
ret
pop
pop
inc
dec
pop
pop
movs
jnp
outs
xor
adc
xlat
xchg
push
jae
out
mov
adc
mov
jle
add
adc
dec
push
les
push
jmp
mov
jmp
sti
add
mov
mov
mov
mov
sbb
sbb
int3
mov
enter
sub
cmps
sub
loopne
movs
sbb
inc
test
cmp
sub
lds
aam
xchg
sahf
popf
sbb
js
jg
fcomip
adc
add
and
pop
div
hlt
and
rol
into
jae
lock
jmp
and
js
add
jl
fwait
icebp
retf
sub
sub
xor
sub
or
pop
jecxz
icebp
dec
mov
stos
or
sahf
test
xchg
mov
imul
call
cld
retf
sbb
rol
ror
jp
rcl
cmc
pop
push
call
test
sbb
and
dec
mov
sbb
push
jmp
inc
mov
cs
pusha
mov
dec
icebp
mov
sub
inc
push
retf
iret
mov
xchg
xor
inc
movs
push
fistp
mov
push
push
xchg
mov
sbb
in
mov
mov
xor
xor
sub
enter
sub
inc
div
test
leave
repz
xchg
mov
loope
ret
lea
pop
icebp
repz
cmp
call
jecxz
xchg
arpl
pop
mov
stos
pop
xor
ret
fnsave
(bad)
nop
push
inc
xor
jecxz
aas
pop
xor
mov
(bad)
pop
mov
cmp
cmp
xchg
lea
inc
pop
push
fiadd
or
dec
rcr
(bad)
cld
pop
mov
outs
ins
es
push
or
cmp
mov
jbe
std
js
mov
out
push
cmps
mov
mov
dec
sub
scas
and
inc
mov
or
pushf
push
out
sbb
daa
test
xchg
mov
loop
(bad)
mov
retf
(bad)
fnstenv
jge
enter
dec
mov
(bad)
xchg
(bad)
xchg
pop
repz
retf
sub
push
mov
iret
test
call
sub
lock
cdq
popf
xchg
lock
inc
push
and
rol
or
ja
or
(bad)
jb
outs
xchg
xor
mov
or
sbb
iret
mov
push
xor
xchg
fadd
ficomp
mov
jns
jmp
fisttp
(bad)
leave
rcr
mov
xor
cdq
xchg
xchg
jb
loopne
dec
rcl
mov
sbb
retf
xor
add
xchg
jp
movs
bnd
jne
inc
mov
shl
jo
dec
out
sar
cdq
sar
cmp
push
shr
xor
sub
sub
shl
leave
out
sub
mov
xchg
xchg
and
add
inc
data16
or
gs
xchg
loope
mov
jmp
push
sub
push
dec
lods
scas
mov
iret
and
jg
test
and
add
push
sbb
(bad)
adc
outs
bound
xor
repz
leave
sub
jmp
dec
adc
inc
or
jp
jb
(bad)
pop
repz
hlt
ror
xchg
adc
pop
inc
xchg
outs
or
ror
repz
loop
out
fstp
adc
inc
out
stc
jl
rcr
push
pushf
mov
(bad)
mov
jmp
and
mov
cmp
and
imul
dec
mov
nop
jae
clc
push
inc
ins
and
ficom
ret
jns
push
ja
nop
addr16
dec
fwait
xchg
clc
enter
cmp
add
test
xor
dec
pop
scas
mov
fmul
mov
movs
stc
xchg
mov
leave
lahf
lds
sub
pop
dec
xor
mov
xchg
mov
mov
push
(bad)
inc
mov
jmp
sbb
jmp
or
mov
out
and
pop
xor
loop
in
lock
sub
sbb
sub
stos
call
int
push
add
dec
mov
aaa
cld
or
push
xchg
cmp
fldenv
add
and
out
test
cli
cli
clc
add
shl
mov
popa
mov
enter
cld
arpl
mov
cmp
mov
mov
jecxz
call
xchg
mov
pop
sub
repz
pop
add
push
inc
mov
push
sbb
jmp
addr16
inc
mov
push
ror
sub
mov
mov
pop
mov
int3
imul
loopne
ret
xor
jns
xor
xchg
cmc
mov
clc
rol
je
test
enter
jmp
aad
xlat
mov
shl
stos
push
stos
xchg
fadd
test
stos
ss
push
or
mov
xchg
xchg
mov
xor
call
imul
add
jge
mov
inc
dec
xchg
sbb
or
xchg
xor
and
imul
or
xchg
into
rcr
or
test
(bad)
cli
loop
ins
imul
pop
xor
push
sub
and
mov
int
ss
shl
pop
inc
outs
adc
inc
or
sbb
repnz
mov
mov
inc
int3
and
and
clc
stos
and
dec
inc
fsubr
(bad)
jmp
mov
shl
add
xchg
shl
jg
popa
cmp
sbb
sbb
shl
mov
fcomip
cdq
cmp
dec
xchg
xor
inc
pop
gs
inc
dec
inc
pop
loopne
inc
xchg
pop
cli
ret
loopne
neg
fadd
in
clc
push
stos
add
sub
jecxz
mov
stc
mov
push
add
pushf
mov
cmp
sub
movs
add
sub
data16
mov
pushf
sbb
adc
loopne
push
pop
int
and
sub
jb
call
loop
adc
in
jo
push
mov
(bad)
push
das
or
iret
stos
dec
mov
xor
int
adc
bound
stos
add
repz
and
test
gs
mov
cmp
ror
xor
rol
xor
mov
sbb
push
sbb
enter
lock
inc
sub
enter
in
mov
test
dec
movs
or
pop
gs
sub
rcl
sub
retf
cmp
push
jae
pusha
mov
mov
mov
lods
jmp
jecxz
shr
sub
pop
add
movs
push
pushf
enter
mov
jnp
add
clc
das
ins
cmps
cwde
adc
push
cs
or
xor
sar
nop
xchg
mov
scas
inc
jo
nop
pop
jl
bound
dec
dec
inc
sub
ja
sar
push
pop
inc
xchg
mov
xchg
jmp
mov
out
test
and
or
cmp
ins
push
test
clc
and
fmul
xchg
aaa
mov
ror
sub
inc
add
sub
nop
and
fisttp
out
lock
in
out
mov
jns
jl
into
inc
loope
inc
nop
xchg
pop
adc
cmp
sbb
rol
adc
mov
lds
inc
adc
mov
push
sbb
dec
fistp
cmp
cmp
fadd
xchg
jae
pop
ja
sar
repz
cmp
jns
test
xchg
data16
(bad)
or
push
cmovge
cld
mov
cmp
jecxz
push
xor
and
stos
xchg
jp
pop
dec
stos
push
push
pop
add
test
retf
push
xlat
jl
cwde
cmp
inc
adc
mov
call
push
cmp
in
adc
(bad)
jp
push
shl
jle
sub
cli
cmp
popa
push
fwait
stc
sub
mov
in
pop
out
shr
gs
stc
out
neg
out
ror
test
fabs
shr
push
call
xchg
stc
fwait
icebp
add
clc
(bad)
jecxz
arpl
imul
mov
(bad)
xchg
mov
inc
cli
int3
daa
clc
add
sub
sub
adc
cwde
test
movs
std
pop
mov
(bad)
sbb
mov
ss
neg
inc
jo
mov
jecxz
mov
cmp
push
rcl
jmp
or
push
punpcklbw
mov
cwde
fistp
test
fcmovb
in
and
loopne
pop
cld
inc
test
and
mov
in
cli
movs
scas
mov
bound
enter
cmp
mov
xor
inc
pop
or
cmps
mov
xor
xchg
sar
(bad)
out
aam
sar
es
mov
adc
imul
test
mov
inc
rol
mov
adc
stos
out
out
dec
aas
add
sahf
js
xchg
cmp
int
adc
or
cmps
mov
adc
and
inc
jl
xchg
popa
loopne
push
jmp
xor
sub
add
mov
arpl
dec
fnsave
je
dec
mov
inc
cld
mov
add
outs
mov
fdivr
push
out
js
and
stos
sbb
cmp
pop
dec
sbb
pop
call
xchg
pop
sti
(bad)
not
test
arpl
leave
sub
stos
sbb
sahf
mov
movs
cmp
jo
jnp
pop
shr
sub
adc
mov
xchg
cmp
push
rol
(bad)
xchg
xor
or
xchg
jp
adc
(bad)
xor
adc
xchg
(bad)
fidiv
pop
xchg
add
sbb
pop
call
sbb
add
repnz
fsub
cs
stc
push
pop
or
lds
jl
mov
mov
mov
push
or
pop
adc
popf
and
cli
cmps
retf
imul
lock
and
int3
clc
mov
push
loopne
jns
jo
lock
pusha
ror
rol
rcl
mov
nop
in
push
bound
mov
xor
xor
scas
pushf
mov
popa
xchg
sti
cmp
retf
jbe
aas
mov
xor
and
fldenv
shr
adc
mov
pop
xchg
cs
pusha
pop
mov
mov
cmps
adc
enter
mov
(bad)
repz
pop
push
arpl
stc
ret
or
dec
pop
jge
movs
jecxz
cmp
aas
mov
cmp
jp
mov
(bad)
adc
xor
(bad)
sbb
mov
add
mov
ss
js
adc
dec
sub
dec
sbb
xor
aad
pop
xchg
fsub
add
xchg
fisttp
pop
xor
push
push
push
(bad)
(bad)
add
jecxz
arpl
clc
aam
sub
pop
stos
repnz
add
int3
inc
inc
xor
popa
sahf
add
mov
add
int
lock
ret
mov
call
mov
(bad)
cmps
xor
jmp
test
jmp
and
leave
(bad)
in
aaa
retf
jecxz
mov
xlat
cmp
push
mov
jl
pushf
or
mov
inc
xlat
jle
xor
xor
inc
dec
fwait
aaa
pop
jp
push
inc
cmp
sbb
pop
adc
inc
mov
cmps
mov
test
pop
add
clc
add
xor
cwde
mov
rcr
lods
loopne
imul
ja
ins
pop
sub
arpl
add
cli
or
xchg
pmaddwd
sub
mov
add
dec
xchg
adc
pop
div
fwait
cmp
mov
or
stos
add
(bad)
cmp
cld
fidivr
lods
mov
pop
cmp
jns
cwde
sahf
les
bound
cmp
jge
push
cmps
lods
cmp
mov
cld
in
bound
xchg
push
leave
test
sub
retf
cmp
xchg
xchg
push
es
retf
mov
sti
mov
jbe
aam
iret
sub
or
aas
(bad)
sbb
enter
push
mov
mov
or
jbe
sub
mov
push
pop
and
add
inc
outs
sbb
fdiv
mov
cld
bnd
pop
aas
je
lock
repz
push
jnp
sbb
call
(bad)
aad
jbe
cmp
xchg
fwait
push
jb
test
js
test
sub
jae
mov
or
xchg
cmps
imul
mov
mov
inc
cmp
ror
sub
mov
and
inc
sahf
pop
sbb
ins
add
adc
fwait
mov
loopne
daa
jnp
leave
aaa
push
push
or
addr16
xchg
pop
loop
xchg
xor
jno
movs
outs
jecxz
(bad)
stc
mov
add
(bad)
cwde
push
and
cdq
stos
dec
jo
mov
outs
xchg
mov
pop
fstp
daa
pop
aaa
int3
cli
sbb
aad
xchg
int
clc
push
mov
jg
push
dec
cld
mov
arpl
push
sub
shl
jb
nop
ret
fldcw
cli
pusha
xor
call
dec
xor
and
shl
(bad)
(bad)
in
mov
inc
jb
fwait
sbb
pop
mov
mov
push
loop
mov
sbb
lods
mov
arpl
mov
in
rcr
dec
in
inc
pop
xchg
pop
mov
jae
mov
xchg
fabs
mov
or
pop
xor
push
sbb
pop
repnz
cmps
cwde
fld
fisub
fmul
xlat
ins
imul
fimul
or
stos
xchg
mov
outs
lahf
call
bound
or
mov
push
scas
adc
fcomp
push
push
inc
into
in
dec
lods
(bad)
jnp
sbb
fld
xor
fild
cmp
or
mov
cmp
enter
cmp
dec
aaa
jecxz
sar
sbb
cmp
add
fsubr
leave
sbb
push
sbb
push
fcmovnbe
mov
push
pusha
adc
out
xchg
jmp
or
test
push
scas
sub
jecxz
xor
loop
push
and
xor
push
int
xchg
test
adc
push
or
jne
mov
dec
cld
add
sub
fsubr
jmp
shl
add
or
add
or
mov
(bad)
xchg
push
xor
retf
dec
sub
scas
jae
adc
add
xchg
jmp
jb
cmps
ret
pushf
adc
jbe
or
repz
pop
repnz
loop
sbb
jle
mov
pop
mov
mov
out
dec
sub
add
cli
push
jmp
ins
repz
sbb
fld
ret
jo
xor
dec
and
repz
pop
xlat
xchg
mov
pop
vmaxpd
xchg
mov
retf
arpl
sub
in
adc
mov
cmp
jns
pop
das
repz
lock
fld
sub
push
aam
xor
gs
ins
xchg
pop
sbb
mov
jns
out
mov
test
mov
test
add
cmp
jnp
mov
mov
(bad)
jne
retf
push
or
in
push
pop
shl
mov
call
cmp
mov
js
xor
retf
and
(bad)
mov
mov
sbb
inc
inc
mov
cld
mov
jb
inc
cwde
fnstcw
mov
xor
lahf
dec
fcmovbe
out
mov
and
mov
das
or
cmp
cmps
pop
mov
movs
and
hlt
icebp
xchg
out
gs
pop
fdivr
cld
inc
cmc
mov
test
(bad)
jbe
mov
mov
dec
ret
repz
into
push
dec
jb
popa
(bad)
inc
ret
retf
pop
xchg
jp
add
movs
sti
pop
mov
mov
std
(bad)
inc
cdq
cmp
xchg
pop
not
inc
sahf
add
imul
inc
hlt
xchg
push
popf
mov
xlat
fwait
sub
dec
xor
js
js
sbb
arpl
jl
xchg
and
push
cmc
or
push
add
cli
es
imul
mov
test
cli
xor
inc
mov
shr
xor
clc
jmp
pop
test
sar
es
push
and
lods
xor
mov
stc
push
or
fisubr
xchg
and
push
jno
popa
push
push
push
xor
mov
push
mov
(bad)
imul
xchg
aaa
rcr
popa
mov
in
popa
ins
adc
jmp
clc
mov
xchg
sub
xlat
adc
xor
bound
sbb
adc
not
adc
fdivrp
xor
sub
dec
push
mov
pop
mov
or
loop
fiadd
aaa
jmp
cs
popa
out
stc
inc
retf
pop
ja
daa
push
mov
jle
jcxz
out
sbb
mov
mov
out
push
mov
pop
xor
mov
js
cmps
in
sub
mov
and
mov
push
jecxz
xchg
sbb
xor
dec
sub
add
jne
or
(bad)
test
ret
add
cmp
aaa
loop
xor
add
sbb
cmp
xor
lods
sbb
ror
inc
lahf
push
(bad)
xchg
and
icebp
out
adc
ins
jb
imul
mov
cmp
or
add
add
jb
or
and
or
test
call
xor
add
dec
cmp
add
sub
push
(bad)
leave
jle
test
pop
sbb
push
sbb
repnz
add
and
jb
(bad)
mov
xchg
xchg
test
faddp
inc
imul
sub
mul
cmp
pop
in
mov
jecxz
nop
mov
and
cmp
cmp
dec
aaa
pop
adc
dec
mov
popf
jecxz
sub
sbb
outs
jne
or
mov
add
dec
dec
test
pusha
sub
mov
retf
add
or
inc
retf
inc
pop
sub
sub
sbb
sub
or
jnp
pushf
xlat
fsub
retf
mov
jl
mov
sbb
cwde
cmp
sbb
xchg
fld
movs
or
inc
xor
in
cli
dec
dec
mul
test
sbb
pand
imul
sbb
pushf
add
xor
popa
lds
and
ret
rol
push
inc
xchg
or
or
dec
jo
jecxz
fstp
test
pop
sahf
lods
mov
add
int3
pop
mov
lods
jnp
call
pop
adc
push
and
jae
push
xor
or
fidivr
inc
loope
push
cmp
adc
jg
cli
cmp
stos
sbb
jb
dec
sbb
ret
hlt
rcr
jno
jl
mov
xor
sbb
push
rcr
mov
and
mov
mov
mov
pop
cmp
cdq
push
out
adc
rcl
cmps
pop
jae
xchg
push
rol
clc
sbb
and
mov
xchg
jb
cmp
jbe
sub
inc
in
in
mov
cmps
outs
test
aas
sti
and
mov
or
neg
pop
sti
test
xchg
retf
vmovupd
mov
loop
loopne
xchg
js
pop
jnp
pop
popf
addr16
pop
pop
repnz
loopne
or
jb
out
mov
fst
adc
jmp
cld
mov
nop
xor
inc
xor
rol
xor
mov
xor
repnz
in
mov
retf
xor
inc
cmp
js
mov
jp
push
js
mov
aad
outs
mov
outs
pop
jle
cmp
jp
cld
pop
sub
jae
push
les
fwait
jecxz
test
mov
pop
lds
pop
sub
xchg
nop
xor
popf
inc
xor
ins
shl
es
dec
xchg
mov
push
and
push
xor
dec
repnz
push
bound
shr
hlt
sub
or
daa
imul
xchg
or
rol
out
gs
and
cmp
mov
pop
cmc
dec
mov
xchg
pop
mov
cmp
test
popa
sub
and
leave
mov
add
bound
sub
out
dec
fsub
sub
xchg
fmul
jmp
push
pop
sub
cmps
pop
inc
mov
sbb
fs
ret
xchg
in
fld
stos
pop
call
and
aas
js
sub
cmp
or
mov
mov
or
push
mov
add
cmps
dec
push
jae
jecxz
popf
cwde
loop
mov
std
nop
cmp
sub
(bad)
fisttp
sti
xchg
mov
xor
fsubr
dec
or
test
movs
enter
add
push
jo
into
or
mov
adc
inc
jae
ret
pushf
adc
std
and
jne
pushf
mov
mov
push
cs
fiadd
neg
in
xchg
neg
test
adc
inc
xor
aad
mov
sbb
sub
inc
mov
jbe
pushf
sub
adc
push
fadd
std
stc
mov
cld
call
dec
mov
and
xchg
adc
mov
repnz
ret
or
pushf
mov
aas
clc
and
ror
fwait
stos
jg
in
mov
mov
cld
stos
hlt
dec
push
sub
add
stos
fdiv
popf
and
addr16
cmp
xor
cmps
iret
push
xor
std
xor
inc
cdq
cdq
cdq
cmps
xchg
adc
push
inc
add
inc
and
mov
xlat
fnstcw
loop
cmc
scas
test
int3
shl
dec
xchg
stc
mov
add
pop
aaa
dec
cmp
inc
lea
sahf
mov
cmp
test
pop
inc
call
jns
dec
sub
std
outs
add
les
pop
sbb
lds
shr
sbb
push
ret
push
mov
dec
shl
in
icebp
and
or
adc
add
lods
push
ja
repz
xchg
or
sbb
inc
aad
jmp
inc
das
xor
mov
movs
sbb
jmp
(bad)
out
fimul
call
push
push
cmc
test
retf
(bad)
or
ins
push
out
push
ja
lea
add
bound
dec
mov
out
ret
movs
imul
dec
fisttp
movs
in
mov
mov
cdq
cdq
fxch
leave
gs
stc
in
pusha
repnz
jo
mov
cmp
or
mov
dec
pop
sub
test
jno
mov
sub
repnz
sub
jno
fidiv
mov
sub
js
repz
cmp
ja
cmp
pop
jns
jno
jp
mov
call
mov
pop
push
out
cmp
pop
loop
mov
mov
xor
sub
and
sub
neg
xor
cli
clc
pop
cdq
jne
mov
test
ins
adc
cmp
add
mov
lods
xor
pop
cld
pop
iret
ror
cmp
jmp
xor
jbe
sub
fwait
mov
lds
mov
mov
and
jns
push
pop
nop
mov
dec
push
or
(bad)
xor
mov
nop
ror
test
push
and
neg
inc
xchg
pop
fadd
cmc
and
scas
push
mov
popf
cmp
outs
inc
jo
mov
push
je
neg
mov
iret
xor
fld
push
sbb
daa
push
xor
xchg
test
inc
add
mov
mov
pop
xor
pop
ds
mov
test
ficom
xchg
pusha
into
stos
in
add
leave
bound
xchg
int3
or
cmp
scas
cmp
jecxz
dec
addr16
arpl
sar
or
ins
(bad)
or
dec
int
jb
sub
nop
aad
(bad)
xchg
cld
retf
inc
iret
mov
das
push
or
add
push
mov
js
adc
add
call
add
dec
lock
dec
sub
ss
cmp
rcr
(bad)
call
pusha
and
outs
cmp
imul
push
pop
nop
test
cmp
xor
cmp
sahf
cmps
dec
ja
push
gs
in
sbb
and
xor
adc
inc
nop
into
adc
jmp
test
jmp
cmp
xchg
pop
ins
sbb
(bad)
int3
mov
mov
mov
cmps
sbb
repz
sbb
mov
jle
fisubr
mov
(bad)
mov
pop
cwde
aad
mov
adc
mov
mov
cmp
int
les
pop
test
xchg
ss
mov
pop
mov
fisttp
pop
and
sub
test
imul
sub
or
dec
into
imul
push
cmp
shl
sbb
clc
test
(bad)
push
mov
mov
and
jae
ds
test
jmp
es
fs
sbb
cmp
sbb
add
mov
or
jp
shl
xchg
lock
adc
mov
xor
dec
test
pop
mov
jns
cmps
adc
add
or
jb
adc
sti
jg
sbb
xor
mov
(bad)
mov
cmp
ret
dec
dec
pusha
addr16
leave
repz
sbb
xor
dec
in
xchg
(bad)
in
ins
cmc
cld
inc
fld
mov
bound
in
ds
sub
shl
and
add
loop
repnz
and
sahf
inc
mov
aam
xlat
sbb
les
(bad)
iret
add
iret
nop
and
mov
or
sub
(bad)
mov
inc
imul
out
rcr
js
mov
loope
jmp
xor
sub
sub
(bad)
out
test
arpl
(bad)
mov
repz
mov
jmp
bound
sub
mov
(bad)
std
jp
push
add
jecxz
sub
inc
mov
or
add
test
rcr
push
and
test
ret
sti
jle
mov
jo
test
pop
lahf
pusha
fisub
sbb
jo
push
jb
xchg
adc
push
jp
mov
or
jb
int
sub
pop
mov
or
in
sub
mov
dec
fbld
lock
repnz
or
pop
call
pop
clc
stos
jnp
push
adc
xor
dec
xchg
mov
into
push
push
add
sbb
jp
add
stos
push
sub
push
loop
inc
(bad)
bound
or
cmc
cmp
xchg
scas
pop
into
sub
jb
and
movs
js
push
cmps
adc
cwde
shl
ds
and
rol
and
pop
dec
call
add
cmp
inc
xchg
jg
aad
int3
test
push
sbb
lds
add
xchg
mov
or
push
inc
adc
inc
rol
xor
jp
or
mov
mov
nop
pop
das
or
push
and
ins
pop
in
ins
and
fwait
std
fsincos
adc
adc
pop
ins
mov
xchg
or
push
sub
cwde
mov
jp
jg
add
jae
mov
push
cmps
and
aaa
pop
jo
in
in
add
data16
pop
ret
mov
call
aas
dec
sbb
mov
imul
adc
cmc
xchg
and
lods
jg
push
mov
push
ret
sub
in
dec
ins
arpl
xchg
jle
mov
out
sbb
mov
cmps
fsubr
icebp
and
call
mov
pop
sub
inc
inc
mov
push
out
pop
lods
mov
mov
inc
aad
jmp
add
mov
(bad)
lods
jl
stos
fstp
ds
data16
jnp
xor
dec
adc
les
int
retf
fidivr
jnp
push
sbb
cmps
test
iret
stos
or
aad
jp
cli
arpl
(bad)
fistp
jne
sti
jmp
stos
sti
cdq
dec
dec
cmp
scas
mov
sbb
hlt
popa
mov
rep
in
cmp
sub
add
(bad)
xchg
pop
mov
nop
daa
jne
inc
mov
and
xor
jle
nop
stc
adc
cmp
push
aad
leave
cmp
daa
test
push
xchg
popa
adc
int3
and
inc
mov
sub
sbb
das
bound
sbb
aam
retf
xor
jle
cdq
rol
sar
sbb
pop
clc
add
mov
inc
(bad)
fld
sahf
sahf
hlt
mov
ss
fnstcw
repnz
push
xor
or
call
scas
xor
or
mov
push
pop
js
add
dec
les
xor
test
adc
stos
push
sub
mov
jb
and
mov
mov
fcmovbe
jl
enter
mov
test
jns
cmp
cmc
shr
mov
xchg
lock
(bad)
mov
rcl
rcl
pop
and
fsub
sub
inc
fidiv
loopne
mov
pusha
enter
ficom
(bad)
pop
rsqrtps
loop
and
out
dec
inc
mov
addr16
(bad)
mov
and
sub
jg
and
mov
mov
ins
mov
add
push
jb
enter
leave
and
mov
jle
mov
sbb
movs
and
push
add
sub
xor
idiv
mov
mov
mov
pop
popa
out
test
pop
push
rol
(bad)
cmc
sbb
ins
pop
cwde
out
mov
pop
pop
cmp
call
lea
sbb
loop
xchg
mov
(bad)
stc
and
imul
jae
jp
mov
clc
add
imul
or
sbb
push
test
cmp
sahf
(bad)
icebp
jnp
and
add
xor
bound
cvtps2pi
nop
push
jnp
adc
dec
or
icebp
xchg
stos
cmp
xor
push
aad
ret
jno
jl
inc
push
xchg
sbb
mov
sar
lods
push
xchg
mov
add
imul
sbb
je
test
shr
fst
rol
retf
dec
cmc
pop
or
xchg
pop
gs
or
retf
mov
xchg
fidiv
clc
js
jbe
mov
sub
pop
rol
push
mov
clc
pop
mov
cld
mov
test
loope
mov
imul
adc
xor
shl
xor
int3
ret
(bad)
repnz
aaa
jecxz
jb
mov
mov
sub
aad
retf
cmp
leave
(bad)
fldenv
sbb
adc
add
adc
data16
loop
sar
pop
xchg
lock
je
push
push
fiadd
or
cdq
mov
stc
cmp
sub
test
test
sbb
or
movs
les
ret
mov
stc
cmps
mov
adc
xor
add
jno
or
mul
outs
xchg
jecxz
(bad)
mov
dec
mov
inc
mov
pop
xchg
sbb
xchg
push
mov
cdq
inc
or
fnstsw
adc
xor
adc
inc
xchg
outs
sbb
daa
jl
pushf
xchg
or
mov
sub
lock
ret
adc
les
inc
test
fisttp
cmps
jne
jmp
sbb
push
in
and
pusha
les
inc
mov
xchg
dec
adc
jnp
rcl
push
pop
sbb
(bad)
sar
xchg
fcmovnbe
neg
adc
(bad)
dec
mov
pop
rol
in
or
enter
cmp
jge
daa
pusha
mov
mov
jb
xor
repz
push
clc
dec
(bad)
je
ret
mov
adc
enter
inc
sub
add
cmp
dec
jmp
inc
sbb
mov
mov
jl
xchg
xor
(bad)
mov
pushf
test
xchg
mov
xchg
and
and
push
xor
pop
inc
jg
shr
jae
dec
jmp
adc
imul
pop
das
dec
jmp
push
dec
(bad)
std
cmp
push
add
add
gs
or
pop
fcmovnb
loop
in
cmps
fs
fstp
repnz
lods
addr16
mov
jb
ins
sub
pop
xchg
jbe
mov
loop
pop
retf
ss
int3
sbb
pushf
enter
mov
loop
sar
ror
loop
mov
lods
in
loopne
pusha
call
pop
adc
pop
xor
movs
add
mov
xor
shl
xchg
into
adc
pushf
and
xor
and
sub
adc
xor
(bad)
clc
adc
je
push
add
out
imul
pop
add
cwde
add
dec
add
or
shr
popf
(bad)
push
xor
push
mov
cmp
pop
adc
shr
or
pop
push
out
nop
jmp
call
jns
adc
mov
jmp
loopne
(bad)
sahf
(bad)
mov
mov
iret
push
cmp
rcl
jns
mov
mov
dec
jmp
xchg
into
mov
push
es
cmp
inc
ss
add
mov
push
jmp
dec
dec
xor
mov
pop
push
inc
retf
jno
(bad)
xchg
mov
aad
push
dec
xchg
adc
ror
or
repz
pop
pop
and
dec
stos
dec
es
stos
add
adc
pop
call
in
push
or
sub
mov
pop
jb
scas
mov
xchg
(bad)
rcr
mov
cmp
imul
xchg
dec
es
in
and
and
imul
jmp
sti
repnz
inc
ds
ds
push
add
pop
push
sbb
jp
adc
adc
cli
inc
add
mul
jp
dec
mov
icebp
fsub
jge
dec
lahf
lds
push
cld
jmp
aaa
sub
cmps
inc
es
jns
jo
sbb
dec
loop
stc
stc
mov
pop
add
or
inc
mov
daa
mov
jo
aaa
cdq
or
imul
ins
(bad)
retf
push
jmp
push
es
sbb
push
xor
arpl
pop
pop
and
or
dec
inc
enter
jle
shr
xchg
out
call
cmp
inc
xchg
xchg
adc
sbb
scas
add
mov
out
push
or
arpl
jp
jmp
sub
sbb
int3
cwde
xchg
outs
scas
jp
mov
fsub
inc
js
lods
jecxz
lock
ror
push
sbb
scas
clc
sbb
jne
sti
xor
or
add
pop
retf
jg
xlat
neg
push
adc
xor
sbb
ins
inc
std
int3
dec
inc
or
xor
pop
mov
fmul
mov
push
sbb
pop
pop
icebp
jg
mov
les
rol
xchg
cmp
mov
push
out
arpl
cmp
repz
mov
adc
cwde
ins
out
pop
add
and
fst
mov
sbb
mul
nop
adc
or
pusha
rcr
pop
mov
aad
sub
mov
add
pusha
sbb
jo
test
div
sar
leave
loop
mov
add
ss
dec
or
js
add
cmps
arpl
jecxz
in
sbb
out
mov
mov
test
je
xchg
sub
(bad)
hlt
shl
scas
jo
test
sbb
jmp
test
jmp
add
push
and
sbb
jmp
ror
adc
and
adc
sbb
pop
jne
jp
dec
pop
dec
cld
repz
xchg
mov
aam
lods
pop
inc
mov
push
jo
jae
iret
sbb
and
xchg
xchg
ror
mov
int
js
leave
dec
xchg
es
push
cmc
dec
push
in
push
pop
cmp
inc
fstp
call
mov
mul
xchg
aad
or
sub
and
loopne
mov
mov
mov
sub
shr
icebp
xor
mov
and
movs
test
jp
pusha
outs
dec
mov
adc
or
sbb
add
xchg
and
sub
repnz
cmps
sbb
pop
jecxz
jae
ss
fwait
add
add
mov
cmp
and
dec
push
ja
ja
jl
adc
clc
pushf
jae
sbb
mov
das
ret
imul
jmp
mov
sub
mov
xor
call
cmp
push
imul
stc
xchg
pop
test
fwait
cmp
sub
daa
movs
imul
arpl
in
fcomp
test
cli
inc
mov
and
cli
mov
neg
inc
and
cmps
ds
cmps
pop
mov
xchg
pop
cmp
clc
add
lock
sbb
movs
add
dec
out
xchg
leave
jae
int3
stos
ror
push
in
js
dec
mov
ficom
or
adc
cmps
inc
add
jno
adc
jp
leave
test
mov
mov
loopne
sar
mov
stos
lock
cmp
cwde
test
jp
cmp
rcl
loope
and
jae
inc
inc
js
pop
xchg
adc
mov
clc
mov
sub
gs
add
sbb
ins
or
in
test
mov
scas
(bad)
mov
push
repnz
mov
cmp
inc
add
lock
sbb
add
shr
xchg
repz
sbb
mov
or
sub
mov
cwde
cmp
fld
pop
(bad)
aam
aas
inc
scas
paddq
outs
loopne
and
inc
mov
sar
and
mov
fstp
into
dec
sbb
cmp
arpl
mov
or
mov
int
mov
cs
adc
jo
xchg
inc
push
test
mov
sbb
xchg
nop
(bad)
pop
mov
(bad)
in
xlat
jb
iret
outs
jbe
(bad)
js
cmp
cmp
enter
mov
mov
scas
xor
mov
sub
mov
aad
pop
jae
stc
cdq
xchg
dec
mov
mov
(bad)
sbb
push
add
jmp
(bad)
(bad)
mov
dec
sbb
lea
cmp
push
fs
pop
out
xchg
test
int3
mov
(bad)
sbb
loopne
mov
shl
ret
out
retf
jo
adc
mov
repnz
cmp
aad
js
jmp
mov
cmps
fisubr
inc
mov
cmps
add
fist
xor
inc
ret
daa
out
in
xchg
jmp
mov
lock
mov
int3
stos
repnz
push
xchg
js
sbb
repz
jb
push
xor
test
push
xchg
int3
mov
and
mov
or
repnz
out
push
cmps
xchg
push
xor
outs
arpl
push
jecxz
and
popf
adc
(bad)
int3
or
(bad)
int
cmp
sub
aaa
shl
inc
test
fnstenv
push
xchg
push
addr16
mov
mov
inc
pop
pop
mov
aad
sbb
popf
ret
in
sbb
add
clc
test
mov
out
push
adc
mov
outs
cmp
jl
pop
push
mov
retf
std
leave
lods
je
(bad)
rcr
popf
inc
fs
dec
popa
add
xor
jb
mov
mov
push
mov
mov
mov
shl
fucomip
imul
adc
jns
add
mov
not
int3
jecxz
sub
push
mov
sub
add
push
addps
pop
sub
inc
lds
dec
jmp
push
pop
fsub
add
gs
pop
aam
cmp
int
cwde
inc
in
add
dec
and
cmp
mov
inc
in
adc
jg
clc
int3
dec
xchg
cmp
jecxz
fwait
cmp
repnz
and
jl
cmp
ds
push
dec
rol
xchg
xchg
shr
dec
mov
dec
call
inc
cmp
(bad)
je
sub
inc
lock
scas
lds
xchg
outs
xchg
sbb
dec
or
push
xchg
dec
mov
mov
dec
lods
fcmovb
and
hlt
pusha
nop
aaa
jmp
jbe
in
andps
fadd
sbb
mov
pop
sbb
xor
and
sbb
aas
add
sbb
es
mov
(bad)
(bad)
cmps
push
call
mov
push
pop
ror
cmp
jl
or
fs
out
pop
sbb
sub
adc
daa
sbb
sub
es
mov
(bad)
(bad)
fwait
pop
ret
pushf
mov
cmps
sar
jl
push
dec
sbb
pop
enter
mov
sub
adc
out
out
stos
mov
mov
mov
inc
loop
call
jbe
push
pop
sbb
enter
mov
fist
push
jo
pop
pop
ins
adc
mov
inc
mov
dec
stos
int3
cmp
xor
adc
ins
(bad)
outs
pop
in
ins
loope
mov
sti
cli
push
aad
xchg
push
mov
add
xor
add
xor
mov
cdq
dec
inc
xchg
scas
xor
push
sub
cmp
jns
sbb
cli
push
cli
jle
loop
jb
stos
lods
adc
fmul
loope
inc
push
xor
jp
mov
or
cmc
push
into
fucomip
mov
jp
dec
out
xchg
pop
add
ret
add
mov
ficom
in
push
leave
mov
mov
sbb
inc
push
stc
xor
stos
and
xor
sti
into
enter
sub
push
call
add
xor
bound
retf
xlat
cmps
push
fwait
cmp
and
sub
pop
add
fcmovnu
pop
or
call
add
sub
call
mov
mov
fnstcw
lods
call
xlat
sbb
loope
nop
push
dec
mov
ja
and
jmp
jbe
imul
push
inc
lea
or
pop
xchg
push
pop
shr
fdiv
call
jmp
sar
retf
adc
dec
test
mov
repnz
xor
fs
xor
xchg
push
fld
mov
add
mov
aas
pop
aaa
sbb
fcom
push
mov
loopne
loope
lds
punpckhwd
push
dec
push
mov
mov
icebp
dec
icebp
inc
dec
cmp
lahf
add
cmp
retf
cmp
cld
jb
int
jns
lea
cmp
sub
pushf
popf
fwait
adc
cmp
mov
into
in
jns
mov
adc
mov
fldenv
nop
adc
test
mov
xchg
push
in
ja
mov
js
dec
jmp
sub
lea
mov
sub
retf
xchg
xor
cmps
cmps
shl
(bad)
stos
inc
sub
jl
mov
cwde
sub
cmp
inc
bound
jo
fistp
sub
lea
dec
jae
dec
pop
pop
pop
mov
int
mov
and
mov
mov
test
test
xor
or
inc
invd
xchg
sbb
sbb
and
stos
add
mov
imul
mov
add
jmp
call
cmp
inc
ret
enter
mov
push
gs
and
inc
addr16
sbb
int3
in
sar
mov
stos
jns
imul
mov
push
dec
jae
sub
fcomp
aad
shr
xchg
(bad)
mov
rol
rcl
sub
test
or
(bad)
stos
repnz
stos
fstp
retf
std
mov
gs
bound
mov
ja
cmp
mov
push
arpl
jb
sub
fld
push
pop
cmp
dec
push
push
shl
clc
xchg
fcom
mov
pop
adc
loope
fcom
stos
(bad)
jno
push
add
repnz
ret
mov
mov
out
or
movups
or
adc
cmp
cld
das
xchg
dec
and
fdivr
ins
daa
xor
jb
sbb
mov
inc
leave
rol
ja
and
mov
ja
repz
rep
retf
shl
scas
sub
xor
mov
add
out
pushf
jp
in
xchg
mov
pop
add
cmp
dec
clc
je
ds
jo
stos
cmp
mov
sub
pop
xchg
fwait
sahf
add
test
xadd
jp
cmp
pop
sub
pop
popa
psubusb
cmp
mov
add
or
(bad)
and
sub
repnz
iret
stos
dec
jge
add
cmp
jge
int
ror
out
rcl
fdiv
xor
jg
fst
adc
fstp
xor
pop
shl
out
test
nop
jae
cmp
mov
adc
addr16
jp
inc
shr
cmc
clc
mov
xor
cmps
cmp
pop
inc
and
aaa
sbb
fdivr
call
repnz
cmp
mov
and
mov
test
mov
fwait
xlat
jns
add
(bad)
pop
(bad)
pop
or
or
repz
push
rol
test
mov
mov
mov
push
push
mov
pop
inc
out
and
dec
hlt
mov
jmp
xchg
sub
and
dec
ds
pop
retf
mov
retf
outs
int
ror
mov
jb
sbb
add
push
ja
pop
test
inc
scas
pusha
clc
shl
xchg
jo
scas
pop
jp
test
rcr
mov
sti
rcl
sub
pop
jmp
xchg
mov
adc
inc
or
jl
push
pop
xchg
add
in
xor
out
cwde
mov
jne
outs
and
and
fisub
lods
mov
jae
or
add
or
mov
data16
sar
xor
add
shr
jno
loopne
popf
nop
mov
call
daa
and
and
cmps
adc
daa
outs
fs
hlt
ja
enter
in
int3
and
sbb
js
dec
mov
mov
fdiv
dec
xchg
and
inc
dec
sub
dec
sbb
ror
jno
dec
jg
icebp
dec
push
mov
shr
mov
inc
xchg
aad
rcr
ret
cmc
and
data16
mov
mov
mov
mov
jecxz
enter
std
lods
ins
inc
fist
daa
cmp
sbb
sbb
aad
or
inc
test
adc
cwde
and
and
add
adc
or
nop
cli
jns
or
arpl
cli
repnz
into
fadd
add
jmp
mov
in
int3
clc
mov
pop
add
dec
inc
mov
cli
ins
jg
jle
test
cli
call
mov
push
mov
fxsave
dec
jo
out
rcl
xchg
ror
adc
and
outs
pop
outs
sbb
cmp
data16
mov
xchg
xchg
ins
xchg
retf
add
fld
call
out
xchg
rcl
cmp
cmp
sub
icebp
pop
and
cmp
push
mov
jmp
add
add
sub
mov
rcr
aad
add
xchg
xchg
mov
in
inc
add
out
sub
inc
push
int
push
in
cmp
hlt
stos
sbb
pop
cli
mov
push
xor
ins
imul
fdivr
inc
inc
ficomp
mov
int3
add
mov
pop
shr
mov
and
bound
retf
mov
jo
call
push
out
sbb
lds
sub
mov
call
stc
sbb
loop
cli
imul
lods
jmp
frstpm(287
mov
adc
(bad)
retf
stc
sub
ror
rcr
mul
nop
sub
scas
pusha
adc
pop
push
sbb
cmp
sbb
cld
ror
imul
sti
pushf
enter
shr
(bad)
jl
mov
xor
jbe
rol
mov
dec
adc
pusha
inc
sub
ins
dec
adc
jae
mov
fld
jne
test
shr
inc
sub
sbb
push
cs
add
jne
out
mov
add
in
ss
jae
std
jbe
movs
xor
or
push
push
inc
dec
xor
retf
popf
and
mov
imul
cwde
jge
sbb
mov
retf
fisub
mov
jns
inc
sbb
mov
and
sbb
lods
pop
ins
call
dec
(bad)
out
and
adc
stos
jbe
enter
lods
stos
ins
and
nop
inc
test
cwde
mov
add
sub
mov
cdq
adc
sub
sbb
and
push
push
jbe
adc
ret
or
cli
jno
and
mov
inc
stos
xchg
ds
call
mul
mov
cmps
sar
sbb
add
cmp
ret
dec
push
clc
cdq
icebp
add
cmps
mov
cmp
mov
inc
mov
xor
(bad)
push
xor
jb
mov
(bad)
pop
inc
and
xchg
rcl
stc
pop
imul
add
mov
cmp
jnp
or
inc
shl
into
sbb
aad
repnz
add
sub
lea
(bad)
enter
test
clc
(bad)
jmp
or
mov
data16
sbb
scas
dec
jbe
in
js
jmp
mov
push
mov
jb
mov
ja
or
cmp
xchg
jmp
jmp
cmp
shr
stc
dec
jmp
jecxz
ficomp
sbb
jle
sahf
add
pop
push
and
inc
pop
mov
out
ret
sar
(bad)
sti
cmp
push
fwait
and
call
add
sbb
xchg
xor
adc
(bad)
mul
jo
cmp
push
or
popa
dec
mov
mov
je
sbb
ds
adc
and
push
mov
pop
fidiv
sbb
rol
push
jne
push
dec
lock
scas
sub
bound
lods
pop
cwde
add
cmp
imul
jbe
or
popa
call
lahf
ret
add
hlt
inc
out
jle
pop
sti
scas
fwait
rcr
sbb
inc
xor
pop
pop
enter
ss
mov
icebp
loope
pop
mov
inc
and
inc
sbb
xor
or
cmp
pusha
enter
sub
clc
mov
inc
mov
inc
stos
cmp
loope
mov
outs
iret
mov
ja
pop
xor
shl
cli
mov
inc
dec
push
pause
mov
xchg
mov
mov
mov
push
push
jmp
and
adc
xor
push
clc
vpor
hlt
in
rcl
jbe
aas
mov
shr
cmp
mov
fwait
out
stos
mov
adc
pop
and
mov
inc
sub
inc
rcr
mov
(bad)
jns
xchg
mov
push
cmp
inc
(bad)
outs
xor
mov
jne
sub
push
sbb
fld
out
lea
jo
dec
fstp
mov
jbe
clc
(bad)
cmp
xchg
mov
jnp
cmp
jnp
mov
and
mov
xchg
in
les
dec
and
movs
lds
int
mov
test
ds
cmp
lock
mov
fnstsw
leave
xchg
jmp
cmps
cmp
out
and
cmp
or
ret
jno
stos
call
lods
aas
or
stos
adc
mov
xchg
pop
inc
mov
mov
mov
les
cmp
je
inc
fs
fdivr
xchg
mov
ficom
cmp
rcr
fsub
out
call
and
das
arpl
jl
mov
pop
xor
jae
jns
or
jnp
ss
in
in
mov
mov
cmp
mov
rol
daa
mov
add
cmp
inc
push
(bad)
(bad)
pop
(bad)
sti
cmp
and
xchg
jge
loopne
fiadd
push
push
cmp
jns
mov
ror
pop
repnz
pop
mov
inc
lods
les
sahf
(bad)
push
or
adc
mov
int3
test
and
push
js
and
cmp
pushf
push
sub
jbe
pop
pop
mov
sub
out
xchg
imul
lods
leave
outs
in
mov
in
jae
jmp
or
inc
or
sub
jmp
ret
dec
or
mov
retf
xor
lods
jns
js
(bad)
(bad)
call
out
xor
rol
aaa
jno
pop
rcl
adc
test
sub
jmp
jecxz
jo
mov
xor
das
xchg
pusha
or
test
and
cmc
mov
xchg
mov
ins
xchg
repz
xchg
or
add
adc
sbb
inc
adc
mov
movs
enter
or
mov
or
shl
jmp
xchg
and
push
xor
in
(bad)
repnz
(bad)
rcr
add
add
call
mov
push
mov
pop
jno
sbb
push
xor
and
add
pop
arpl
lods
cmp
jmp
xchg
or
mov
push
inc
aad
ror
mov
or
daa
push
or
add
ss
push
(bad)
rol
jo
cmps
adc
dec
lods
adc
mov
dec
add
iret
nop
sbb
or
adc
mov
loopne
test
call
(bad)
push
int
aam
stos
scas
push
aad
aas
mov
fild
jno
stos
xor
mov
mov
test
call
push
js
adc
std
jb
ret
packsswb
mov
rcr
in
jnp
mov
xor
pop
xor
jae
movs
sbb
push
call
nop
mov
mov
add
mov
inc
jo
or
pop
mov
pop
mov
cwde
mov
(bad)
jbe
out
loopne
pop
cdq
daa
mov
inc
dec
xor
loop
retf
nop
add
out
jge
cmp
mov
jae
fstp
icebp
fisttp
and
push
cli
xor
dec
cmc
dec
(bad)
push
pop
mov
icebp
sbb
pop
xchg
dec
mov
push
lock
pop
mov
and
mov
and
ss
mov
mov
loopne
and
mov
clc
sbb
dec
ret
loope
lea
adc
test
or
mov
fwait
shr
push
add
dec
add
push
or
push
cmp
outs
or
dec
sbb
sbb
adc
pop
or
in
cmp
or
daa
or
mov
and
add
sbb
sub
imul
sahf
in
jb
mov
ficomp
mov
shr
or
sub
inc
inc
cmps
pusha
stos
cwde
inc
adc
sar
lods
int
sub
gs
aas
hlt
int
inc
jmp
pop
mov
xchg
jbe
imul
in
mov
pop
leave
sbb
sub
enter
pusha
mov
mov
lods
jb
fwait
pop
out
adc
(bad)
dec
cmps
stc
shl
add
stc
mov
loope
test
add
xchg
sbb
bnd
nop
sub
jno
in
jg
and
xchg
adc
cmp
dec
ins
mov
shl
mov
mov
leave
(bad)
leave
mov
mov
jmp
push
dec
out
fdiv
cmp
xor
cmc
adc
cmp
jl
or
mov
pop
inc
cmps
rcl
cmp
adc
aam
arpl
mov
les
add
shr
call
mov
loope
mov
mov
or
inc
dec
or
xchg
aas
adc
mov
or
inc
popf
cmp
mov
sub
push
mov
and
pop
jmp
daa
mov
shl
xor
stos
mov
mov
sub
cmp
fcom
pop
jno
pop
push
inc
jl
push
xchg
(bad)
dec
jo
jmp
xor
popa
lods
lock
jg
dec
sbb
aam
scas
mov
pop
popf
xchg
cmps
mov
sub
mov
cli
sub
neg
xlat
mov
jo
and
test
add
xchg
(bad)
push
scas
bound
adc
bound
cdq
loop
loope
das
movs
jno
rcl
rcl
cs
xchg
inc
sti
out
dec
mov
call
cmp
cmp
mov
imul
mov
ret
xchg
fucomi
nop
test
rep
mov
push
pop
sbb
cmp
mov
push
jb
imul
inc
gs
stos
xchg
cmps
aam
mov
cld
aas
out
cmp
les
mov
arpl
mov
push
fnsave
pushf
mov
icebp
push
lds
inc
jne
sbb
mov
daa
lahf
cs
mov
mov
je
popa
mov
dec
dec
mov
adc
sbb
das
sbb
cwde
and
jecxz
fnstenv
scas
cli
jmp
pop
mov
add
inc
dec
push
dec
or
loop
shl
mov
pop
inc
sbb
imul
jmp
ret
leave
std
fbld
mov
cmps
mov
outs
movs
push
push
bound
mov
repz
ret
add
aam
xchg
sar
ins
mov
inc
aam
call
and
xchg
or
and
mov
fbstp
les
(bad)
icebp
fcmovnbe
outs
ror
jb
test
adc
sbb
dec
daa
inc
mov
sub
mov
imul
scas
push
add
mov
xchg
jle
jle
push
jmp
mov
pop
movs
sbb
inc
or
xor
add
ror
push
stc
out
add
out
push
jg
cmp
adc
cdq
sar
jbe
mov
scas
mov
add
dec
jl
push
repz
out
dec
sub
cmp
test
in
pushf
inc
mov
repz
dec
xchg
out
je
das
push
mov
(bad)
call
inc
push
sub
or
xchg
push
jno
push
iret
jl
cmps
or
lock
aam
add
jge
(bad)
and
dec
jmp
jecxz
add
sub
movs
fiadd
xor
adc
sub
or
push
jnp
movs
das
add
scas
xchg
adc
jo
add
hlt
xchg
(bad)
and
mov
pop
mov
xor
fdiv
xor
jle
inc
icebp
pop
inc
xor
mov
pop
sbb
icebp
mov
test
pusha
scas
out
mov
and
pop
jl
mov
mov
pop
fidivr
mov
and
add
dec
cmps
sub
and
mov
jne
cmp
mov
xchg
xlat
mov
inc
and
mov
imul
mov
xor
xchg
ret
add
out
lea
jno
clc
adc
xor
adc
push
mov
mov
(bad)
jmp
movs
mov
jge
add
mov
fdiv
loop
pop
pop
mov
cmp
(bad)
icebp
call
add
icebp
xor
mov
mov
cmps
jae
push
xor
in
xchg
inc
jmp
gs
push
jo
dec
retf
pop
mov
cmp
add
and
dec
js
mov
lods
stos
lea
xchg
std
dec
push
daa
sub
fidiv
mov
xchg
nop
xchg
pop
sbb
aad
fdivr
cmps
pop
pop
and
arpl
add
ins
(bad)
shl
dec
imul
mov
call
jmp
cmp
cmc
bound
in
inc
or
add
pop
adc
repnz
ds
leave
mov
cmc
or
push
sbb
aas
adc
cmps
sbb
xor
aaa
hlt
imul
dec
cli
mov
adc
ds
loop
mov
inc
jecxz
mov
arpl
imul
out
mov
add
enter
jb
outs
enter
icebp
cmc
add
mov
cmp
int
call
aam
aas
fistp
call
inc
ins
mov
xor
xor
jmp
(bad)
std
rcl
(bad)
rol
xchg
pop
push
push
jg
ret
adc
jns
cwde
dec
adc
loop
clc
mov
movs
adc
out
loope
scas
jbe
mov
imul
dec
xchg
arpl
outs
mov
xor
movs
and
retf
ds
adc
mov
lock
or
pop
jne
lods
adc
aad
es
jne
(bad)
inc
add
xlat
sbb
mov
mov
loopne
mov
cwde
add
rep
inc
pop
adc
outs
xor
std
inc
sti
fwait
pop
adc
fstp
xchg
mov
ret
js
xchg
mov
imul
sbb
js
xor
mov
mov
in
(bad)
scas
nop
mov
loop
das
push
test
mov
ret
cld
or
test
out
enter
lods
sub
jns
add
dec
cmps
pop
enter
jle
xchg
cdq
cmps
std
pop
jecxz
sbb
enter
push
sbb
sub
mov
mov
pushf
cwde
fdivrp
enter
lds
daa
rcl
adc
cmp
cli
inc
pop
jecxz
sub
out
movs
mov
dec
stos
sbb
aam
jnp
imul
xchg
inc
jae
and
ins
push
bound
loop
cmp
shr
mov
pop
mov
out
add
and
dec
sub
push
test
push
mov
mov
mov
inc
out
dec
dec
inc
adc
sahf
or
repz
sbb
push
nop
(bad)
scas
out
and
lods
sub
lods
jmp
jae
xlat
call
mov
sub
xchg
imul
sub
xor
(bad)
sub
test
std
call
rol
(bad)
jne
outs
fcomp
pop
mov
and
and
mov
cs
retf
rcr
and
add
pop
scas
jmp
retf
push
jl
arpl
and
and
mov
cmp
ret
mov
out
lahf
call
mov
bound
test
mov
mov
and
push
jmp
xor
sub
inc
mov
push
dec
(bad)
pop
pop
xlat
sbb
mov
stos
ss
sbb
sbb
leave
fisub
test
int
fisubr
push
xor
dec
xchg
push
clc
scas
xor
cdq
dec
retf
sub
mov
xor
fwait
xchg
into
and
fnstsw
pop
mov
add
jp
fwait
sub
cmp
dec
push
sbb
shl
enter
mov
(bad)
sub
jb
jb
bound
xor
xor
in
sbb
mov
push
or
and
pusha
add
scas
mov
adc
popf
jecxz
mov
push
in
js
sbb
xor
xchg
daa
pop
mov
bound
sbb
push
xor
fstp
repnz
jge
jo
inc
add
add
mov
and
mov
xor
data16
call
loope
mov
out
ss
call
sti
(bad)
call
sub
(bad)
cli
jae
cmp
repnz
je
jo
pop
xchg
div
mov
jle
or
bound
mov
or
out
(bad)
fiadd
cmp
arpl
jmp
iret
sbb
mov
loop
xor
pop
adc
iret
lods
mov
push
mov
xchg
add
or
call
xchg
fdivp
mov
leave
ror
jne
popa
jo
sbb
or
cmp
(bad)
push
out
iret
out
test
rcl
enter
cli
(bad)
int
adc
or
aam
repz
push
test
popa
mov
mov
enter
jo
push
fistp
mov
adc
mov
stos
mov
fsub
in
sub
cmp
shl
cwde
repnz
sub
in
std
or
test
cli
mov
mov
aad
pop
bound
xor
pop
test
mov
std
push
jbe
xor
add
or
or
push
popa
adc
cmp
mov
sar
cmc
int3
pop
push
inc
or
sbb
add
dec
popf
pop
mov
imul
inc
add
pop
mov
mov
int3
xor
pushf
ss
sub
xchg
inc
lahf
push
cld
add
in
mov
jo
in
cmp
sub
mov
xchg
pop
push
lock
jge
shl
imul
adc
mov
fst
inc
sub
and
pop
dec
add
dec
inc
mov
in
mov
lahf
fidiv
(bad)
fst
inc
jp
ins
sbb
jbe
aad
test
jcxz
nop
jmp
popa
inc
fdivr
leave
or
add
sbb
push
sub
jmp
fnsave
fcom
xchg
(bad)
(bad)
shr
xchg
call
push
push
repz
jge
repnz
jmp
mov
shl
sbb
xor
sub
out
xchg
out
mov
jne
mov
int3
add
js
dec
cmp
sbb
dec
popa
fs
sbb
outs
and
inc
les
adc
repnz
pop
in
(bad)
sub
jno
loop
test
(bad)
fcomp
dec
cdq
sub
pop
ret
dec
mov
rcl
push
scas
out
stos
or
das
push
jns
jnp
pop
sti
inc
mov
dec
mov
xor
mov
cwde
dec
add
data16
add
mov
sti
push
cmp
push
mov
pop
call
sub
push
stos
mov
sbb
jge
sbb
xchg
adc
push
pop
lods
arpl
in
sub
sbb
movs
hlt
rcl
xor
and
jl
and
jns
dec
mov
enter
xor
jne
ret
cmc
dec
dec
mov
xchg
mov
xchg
(bad)
cmp
clc
mov
push
sar
xchg
jns
and
push
and
mov
scas
mov
adc
call
sahf
jmp
adc
jns
cmp
or
and
(bad)
(bad)
cdq
push
mov
cmp
or
stos
jo
adc
push
jmp
lock
dec
mov
lock
retf
xchg
arpl
dec
sub
push
imul
mov
cmp
lods
fld
loopne
sub
pusha
or
(bad)
repz
aas
outs
cdq
ret
loope
mov
sti
and
sbb
mov
imul
hlt
ret
mov
pusha
jbe
push
imul
test
call
das
mov
shr
sti
icebp
add
lock
adc
inc
mov
(bad)
dec
mov
retf
arpl
leave
push
mov
mov
jnp
adc
mov
les
jbe
dec
imul
shl
and
mov
inc
fcomp
and
stc
(bad)
out
es
xchg
xchg
adc
inc
cmp
mov
inc
mov
psllw
int3
mov
enter
fadd
cdq
sub
cmp
pop
cmps
retf
push
pop
mov
and
repz
gs
out
inc
sahf
push
stos
cdq
adc
int
(bad)
data16
ror
inc
pop
(bad)
movs
test
mov
jge
adc
ror
sbb
or
push
mov
add
(bad)
js
xor
inc
add
call
adc
xlat
ret
fisub
or
and
sahf
dec
mov
call
inc
cmps
mov
and
lods
shr
xchg
or
fisttp
ds
rol
inc
or
test
cli
(bad)
popfw
retf
or
lods
add
in
xor
cmp
data16
ds
push
or
ror
ds
add
pop
jecxz
fstp
setae
mov
dec
mov
arpl
mov
or
push
add
xchg
popf
push
repnz
sub
and
rcr
sub
fist
sub
mov
sbb
xchg
mov
add
pop
adc
add
mov
fucomip
in
pop
add
adc
push
clc
test
test
je
jmp
in
mov
mov
jp
into
ror
cmp
stos
and
loopne
add
lods
repnz
xchg
clc
int3
movs
lods
out
xchg
out
mov
inc
sbb
or
push
push
mov
mov
push
repnz
sub
mov
sbb
in
lock
xor
iret
enter
dec
mov
adc
cmp
jae
dec
add
cmps
fisub
je
mov
adc
mov
out
cmp
je
in
ret
mov
jmp
sbb
imul
push
pop
mov
aad
pop
mov
cli
add
ins
xor
inc
jnp
imul
cwde
fiadd
jg
inc
lock
jno
jl
popa
or
int
out
inc
pop
cmp
sub
jp
mov
fistp
leave
jle
push
jmp
add
sub
xchg
icebp
shl
out
add
nop
jmp
adc
fbstp
cmps
loop
adc
mov
push
(bad)
jns
and
push
sub
sbb
adc
out
lods
dec
sub
add
xchg
lock
(bad)
add
(bad)
(bad)
xlat
clc
pop
(bad)
stos
test
loopne
inc
mov
cmp
je
imul
or
jle
data16
xor
or
or
repz
daa
xchg
jb
sbb
call
retf
lods
and
cwde
jecxz
mov
or
imul
inc
std
sub
cvtps2pd
mov
ror
xchg
xchg
mov
sar
enter
cmp
add
int3
and
loopne
or
jae
ds
cmp
mov
shl
mov
sti
or
fdivr
adc
xchg
leave
jb
rcr
sub
out
xlat
xor
nop
mov
addr16
outs
or
shl
nop
adc
jecxz
gs
push
and
arpl
push
inc
repnz
sub
scas
lea
push
mov
cdq
xchg
mov
jl
pop
jo
lea
inc
out
(bad)
retf
stc
fidivr
push
and
sub
icebp
pop
shl
fnstenv
push
fwait
push
mov
or
jns
stos
push
or
sub
in
or
mov
xor
mov
cmp
nop
adc
fxch
mov
mov
pause
lods
mov
or
mov
xor
push
xchg
fsub
mov
ja
push
sub
jb
mov
add
mov
es
out
nop
dec
inc
cmps
xchg
xchg
mov
cmp
jmp
aam
repnz
add
ins
pop
movs
out
mov
(bad)
jns
movs
lds
iret
xor
add
add
cmps
xor
sti
and
xor
(bad)
sub
jmp
test
dec
xlat
vpsrad
sbb
in
mov
test
push
mov
out
cmp
inc
int
fdivr
retf
jecxz
adc
or
push
add
xchg
fnstenv
movs
mov
add
push
dec
mov
adc
push
sahf
push
dec
scas
and
pop
push
idiv
fisubr
mov
dec
pop
les
(bad)
rcr
leave
daa
or
cmp
rol
int
jp
mov
jno
and
ja
mov
xlat
push
xlat
cmp
pop
adc
daa
sub
test
fdiv
fdivr
test
aad
and
cli
repnz
xchg
hlt
xor
sub
out
cmp
loop
in
nop
hlt
mov
jecxz
ret
or
mov
xchg
cmp
test
jmp
pop
mov
lods
int3
push
stos
lods
fwait
int
add
(bad)
out
cmp
mov
std
mov
and
fdivr
fdivp
cmp
test
imul
mov
dec
mov
jb
ret
jne
sub
add
jle
mov
dec
dec
xlat
out
xchg
mov
xchg
push
popa
or
dec
addr16
sbb
movs
cmp
sar
dec
mov
sbb
add
aaa
mov
stos
fisubr
cdq
int
lahf
mov
sahf
jnp
aad
push
mov
jnp
stos
mov
jb
sub
leave
rcl
cmp
xchg
int3
fst
dec
pop
jno
pop
and
rep
fs
push
sub
lahf
sub
ror
sbb
pushf
mov
stos
iret
fxch
mov
(bad)
stc
jg
xor
shl
push
nop
add
arpl
xchg
loop
int
mov
test
popa
das
add
dec
lods
pop
in
loopne
cmp
sub
push
push
out
inc
add
jns
dec
mov
jb
xchg
mov
call
or
pop
or
adc
mov
and
mov
jno
jbe
scas
in
and
jmp
fcomp
scas
lea
iret
mov
xchg
add
inc
mov
adc
push
out
inc
repnz
repz
in
mov
iret
and
and
sbb
addr16
jns
in
retf
xor
pop
pushf
push
xor
ret
dec
adc
jae
loope
dec
mov
jmp
mov
add
jns
push
test
mov
and
bound
out
int3
shl
jae
loop
push
push
or
mov
jp
dec
inc
mov
and
pop
enter
cmp
fdiv
and
(bad)
xchg
mov
jmp
mov
push
push
ret
jbe
stos
add
inc
fstp
adc
and
jmp
data16
mov
pop
jnp
xor
cmp
pop
ds
inc
xchg
fnclex
sbb
add
test
push
clc
icebp
fisub
movs
call
mov
and
sbb
inc
xor
shl
lea
adc
mov
sar
jle
dec
xor
dec
jl
mov
pop
cmp
mov
loop
adc
icebp
pop
or
xor
add
jl
or
cdq
lods
adc
sub
leave
or
xor
add
ror
pop
xor
dec
bound
bound
jmp
lods
jp
ja
jns
cmp
or
xchg
push
movsx
jno
push
sub
(bad)
ins
loop
sbb
pop
mov
xchg
popf
out
out
add
int3
jnp
dec
enter
jmp
sbb
fidiv
and
out
fwait
pop
out
in
mul
jb
je
sub
mov
mov
mov
cwde
sbb
fist
fimul
scas
xor
loopne
mov
shl
fdivr
inc
pop
jb
xchg
pop
and
outs
mov
ficomp
and
sub
imul
and
mov
movs
add
adc
push
cli
inc
in
mov
pop
push
sbb
clc
jecxz
int3
(bad)
loope
repnz
icebp
adc
cmp
mov
xor
xchg
call
mov
repz
in
pop
sbb
sti
clc
test
jg
sbb
dec
mov
pop
daa
mov
rcr
stos
aaa
imul
repz
stos
js
sub
test
xchg
cmps
cmp
pushf
sbb
xor
mov
repnz
inc
ss
mov
dec
pop
jnp
adc
xor
inc
and
xchg
addr16
jae
repnz
mov
pop
mov
icebp
int3
or
inc
lods
sahf
retf
xor
inc
ds
inc
jecxz
clc
lds
lock
pushf
loop
cdq
mov
ja
js
mov
fisttp
adc
fadd
pop
jmp
pop
xor
jns
pop
xchg
add
cmp
or
sub
movs
cmp
in
mov
stos
data16
addr16
xor
cmp
out
push
leave
and
inc
push
cmps
jae
test
mov
dec
add
shl
xchg
mov
in
xor
pop
js
dec
pushf
jbe
mov
pop
cmps
mov
lods
mov
ds
jne
(bad)
cmp
push
sbb
jnp
jns
repnz
sub
cmp
inc
jbe
jno
xchg
push
dec
adc
scas
and
mov
stos
fldenv
dec
loopne
sbb
sub
mov
mov
ret
sahf
in
push
add
mov
dec
and
jne
rcl
dec
cmps
rcl
jmp
repnz
enter
push
sub
jmp
test
sbb
gs
push
xchg
fbstp
mov
mov
xchg
push
fs
jb
ins
mov
adc
or
cmc
or
push
xchg
scas
lock
cwde
ret
jae
cmp
add
and
sub
mov
cmps
jne
mov
xchg
cmp
mov
lea
xor
loopne
or
and
repnz
(bad)
mov
dec
sub
pop
test
cld
sub
enter
or
test
jle
sub
mov
stc
mov
adc
movs
push
into
mov
test
cmp
shl
pop
or
mov
mov
in
or
sbb
sbb
jne
out
adc
pop
adc
and
jecxz
xchg
push
scas
aaa
or
adc
(bad)
shr
retf
or
es
jg
mov
mov
out
pusha
xor
mov
and
xchg
sti
stos
jns
add
cmp
dec
mov
loop
mov
scas
pop
movs
pop
or
mov
shl
jno
cmp
mov
mov
enter
cli
(bad)
std
fsub
fsubr
adc
mov
push
xor
dec
repz
nop
jo
mov
rol
cli
and
mov
mov
pop
es
bound
dec
inc
mov
cmp
sbb
cmp
pop
adc
out
jnp
jmp
push
add
cmp
clc
sub
ds
call
or
xchg
push
lahf
clc
xor
mov
mov
cmp
sub
mov
mov
imul
repnz
enterw
and
sub
push
pushf
lods
sbb
jne
xor
mov
in
hlt
dec
fld
jle
mov
adc
and
push
mov
mov
enter
or
loop
push
inc
push
jns
popa
stc
lods
inc
test
repnz
pusha
call
push
push
push
jnp
push
repnz
adc
outs
add
or
stc
scas
xchg
ror
mov
mov
daa
test
ss
dec
in
arpl
mov
test
mov
adc
adc
mov
push
imul
add
imul
adc
jns
rcr
aaa
jl
out
or
cmps
mov
inc
popf
adc
mov
jl
jg
out
aas
mov
fsub
fidiv
or
mov
loope
pop
sbb
lods
mov
xor
or
aaa
(bad)
and
dec
mov
fistp
ror
xchg
enter
jge
xor
or
xchg
fmulp
js
je
push
inc
mov
adc
and
jmp
pusha
retf
clc
icebp
or
add
call
add
in
mov
mov
mov
iret
jg
popa
dec
xor
enter
cmps
mov
fsubr
loope
jg
xchg
stos
ins
dec
push
out
push
dec
jmp
adc
aas
add
adc
push
rol
rcl
ror
adc
ret
mov
cmc
push
cld
mov
pop
dec
xabort
sub
aaa
arpl
stos
push
les
mov
sbb
jl
dec
int3
rcr
xor
imul
je
ret
rol
paddusw
mov
bound
sbb
or
pusha
jae
push
dec
or
movs
cld
pop
(bad)
lock
add
jecxz
sub
js
hlt
(bad)
push
sbb
mov
je
mov
ficomp
popa
rol
retf
adc
loopne
mov
xlat
and
in
cwde
movs
mov
cmp
pop
and
popa
rcl
sub
lods
add
push
sbb
sub
in
ret
push
fst
call
es
and
or
cwde
ret
mov
dec
shr
push
pop
and
ins
cmps
and
stos
push
mov
out
cwde
or
xchg
xor
imul
lds
pop
mov
mov
adc
dec
add
out
aad
adc
imul
icebp
xor
dec
bound
ins
test
add
jl
xchg
pop
movs
jl
fcmove
stos
leave
lods
cs
pushf
xchg
xchg
or
add
or
bnd
call
and
push
in
adc
test
not
dec
fs
xor
pop
shr
cmps
aaa
sbb
(bad)
rcl
scas
sbb
sub
in
outs
das
push
pop
sbb
fcom
mov
lods
fdiv
cmovns
arpl
frstor
adc
clc
xchg
cmp
push
in
jb
and
jl
(bad)
lahf
icebp
(bad)
daa
mov
movs
mov
retf
shl
mov
push
adc
mov
dec
ffreep
loop
mov
test
enter
cli
fmul
sbb
call
mov
mov
(bad)
jo
jmp
add
push
ret
push
xlat
enter
in
jg
cmp
push
neg
pop
pop
inc
fistp
adc
test
or
pushf
lahf
fstp
jg
add
sub
(bad)
adc
scas
fwait
xchg
add
(bad)
(bad)
js
xor
stc
scas
in
int3
sub
mov
lahf
mov
pop
call
enter
mov
inc
or
test
pop
lods
lods
sbb
sub
lock
ins
add
test
ja
mov
xchg
nop
mov
push
sbb
in
xchg
int3
inc
imul
shl
in
mov
inc
push
mov
fstp
dec
stc
add
pop
push
xor
popa
sub
jnp
and
mov
mov
test
leave
xchg
outs
dec
ds
jnp
(bad)
mov
(bad)
enter
cld
dec
nop
add
pop
int
pop
bound
pop
push
mov
dec
xor
push
repz
mov
out
dec
jmp
shr
xchg
(bad)
stc
xchg
sbb
sub
jecxz
dec
fcomp
inc
ja
retf
push
mov
mov
sub
cmp
fmul
or
lods
xor
cmp
rol
lea
sub
and
les
pop
push
adc
inc
mov
in
xchg
(bad)
mov
adc
lods
retf
mov
dec
mov
sbb
rcr
cdq
xlat
jl
dec
xor
call
inc
daa
leave
or
bswap
stos
mov
or
xlat
fs
mov
gs
enter
mov
jmp
or
pop
mov
(bad)
push
xlat
test
xor
cmp
cmp
pop
push
je
cwde
add
fmul
jns
es
pop
stos
cmp
push
test
ret
sbb
ret
outs
pop
pop
add
popf
shr
mov
mov
adc
push
jl
pusha
test
add
jne
std
std
push
shl
cmp
fsub
xchg
xchg
jl
or
push
cmp
ins
pop
mov
pusha
sbb
and
ret
jmp
inc
addr16
or
xor
or
pop
sbb
std
cdq
es
sbb
dec
movs
sbb
cld
or
adc
call
pop
dec
adc
mov
movs
std
sar
mov
pop
sub
adc
push
repnz
div
int
aad
jmp
add
cmp
neg
push
jns
imul
leave
dec
scas
fistp
sbb
sbb
sbb
sub
cmp
cmp
mov
outs
cmp
test
push
pusha
or
cmp
sbb
jne
stc
(bad)
jae
mov
mov
pushf
adc
outs
or
aaa
repnz
dec
out
xchg
mov
and
jp
enter
and
add
scas
ins
div
pushf
add
lods
(bad)
mov
jl
cmp
dec
call
in
pop
xor
cmp
inc
mov
fimul
es
jnp
push
mov
mov
repz
call
arpl
inc
scas
inc
enter
pop
adc
xor
int
sub
xchg
xor
add
cdq
ret
push
loop
lods
hlt
and
add
lock
xor
sub
icebp
retf
frstor
dec
inc
cmc
mov
mov
(bad)
add
add
xor
xchg
cmp
sub
fld
sti
and
xchg
out
mov
mov
je
jae
clc
mov
das
out
cmp
pop
cmp
and
pop
push
retf
mov
push
sub
(bad)
mov
xchg
xlat
mov
push
dec
jl
sbb
mov
test
xchg
es
cli
mov
push
adc
ins
lds
push
pop
adc
idiv
inc
pop
repz
in
xchg
mov
xchg
stc
lods
out
mov
adc
jl
mov
xchg
fstp
pop
fstp
adc
xchg
sti
pop
(bad)
mov
and
add
push
xchg
xor
jmp
xchg
lods
sbb
sub
and
aas
bound
icebp
out
mov
movs
loop
xor
stc
inc
pop
inc
enter
push
sub
retf
(bad)
enter
mov
je
ret
outs
and
jns
daa
movs
popf
cdq
inc
sub
std
sbb
loopne
jmp
data16
mov
mov
jmp
dec
(bad)
push
xchg
pop
mov
popf
mov
inc
jmp
and
dec
add
jb
mov
sti
mov
aad
or
loop
out
push
fdivr
out
call
nop
dec
mov
inc
ror
mov
jo
pop
ja
mov
(bad)
nop
test
cli
imul
push
leave
mov
scas
aad
inc
(bad)
mov
cs
or
cwde
jo
mov
mov
adc
je
pop
cmps
jmp
ficom
ret
and
sbb
mov
in
imul
retf
or
ds
inc
pop
iret
and
gs
(bad)
out
dec
loop
pop
in
test
ss
or
jns
loopne
xchg
inc
push
mov
sub
fmul
mov
out
jl
mov
mov
add
mov
mov
(bad)
(bad)
out
test
and
js
inc
jb
add
not
xchg
fsubr
test
loope
mov
mov
sub
pusha
sub
mov
mov
mov
cmps
jbe
loopne
imul
xor
mov
xchg
not
inc
dec
xor
dec
mov
movs
fsubr
mov
test
sbb
xor
inc
add
or
in
adc
test
xchg
(bad)
nop
pop
cwde
(bad)
imul
inc
rcr
dec
mov
pop
push
dec
push
lods
adc
or
dec
mov
fdiv
add
pop
cs
pop
fistp
or
xchg
mov
dec
adc
(bad)
std
sbb
call
ror
call
pop
or
mov
add
push
fsubr
popf
sbb
pop
cli
stos
retf
dec
call
retf
ins
pop
out
push
inc
add
jmp
repnz
mov
nop
in
xchg
jb
mov
pop
repz
adc
jmp
jae
jl
je
lods
dec
mov
sub
pop
jae
pop
or
ins
push
add
sbb
sub
push
jp
xchg
dec
fucomp
adc
inc
out
shl
sbb
cli
fs
dec
adc
cdq
mov
add
mov
dec
call
add
imul
out
adc
xlat
sbb
lock
sbb
sbb
arpl
imul
das
aad
mov
jl
xchg
push
pusha
ja
cmp
fwait
shr
(bad)
dec
inc
push
xor
mov
shl
add
mov
add
cmp
mov
repnz
xor
movs
mov
jb
out
not
mov
mov
mov
xor
das
dec
add
cmp
popf
dec
imul
jnp
(bad)
mov
or
sbb
add
push
pop
fdivr
in
mov
call
jp
nop
fisttp
inc
sub
push
scas
cwde
ret
sub
lock
call
arpl
xor
inc
adc
daa
repnz
addr16
jge
sbb
mov
(bad)
sti
sar
les
xor
push
jp
xor
sub
clc
imul
adc
push
jno
mov
js
icebp
jmp
pop
and
jno
loopne
cli
in
rcr
jnp
jmp
mov
pop
jecxz
mov
jp
daa
cs
repnz
ss
ja
test
fisubr
mov
scas
call
or
lock
jmp
je
dec
mov
out
cmps
popf
addr16
mov
loopne
dec
mov
lods
sub
pop
jbe
bound
nop
xor
int
jns
je
jg
jge
jle
js
inc
cmp
call
jmp
pop
arpl
test
(bad)
fimul
addr16
shl
dec
js
out
sbb
push
cmpxchg
xchg
xchg
test
or
stos
cdq
push
pop
xchg
mov
xchg
nop
ror
add
pop
out
mov
pop
cwde
mov
push
retf
jp
loopne
jle
adc
shl
mov
leave
retf
popa
addr16
fstp
sahf
arpl
int3
shl
ret
or
mov
jo
mov
out
xor
aam
mov
neg
xchg
sub
pop
test
sub
mov
and
enter
jb
push
scas
mov
xor
jmp
and
sbb
xchg
lods
or
or
add
inc
xor
lea
mov
fadd
clc
(bad)
shl
lahf
lahf
outs
mov
push
add
icebp
cmps
pop
(bad)
xor
outs
xchg
(bad)
dec
push
add
xlat
jb
(bad)
out
mov
adc
shr
or
aas
sbb
pop
std
pushf
out
shl
add
push
stos
test
popf
and
(bad)
mov
rcr
mov
pop
sub
inc
jno
mov
inc
mov
retf
fsubp
jno
xlat
or
fcomp
movs
bound
test
cmp
push
out
push
or
mov
popf
adc
adc
rol
ins
fwait
jns
push
mov
sub
inc
xor
adc
xchg
sbb
(bad)
mov
sbb
neg
xor
push
mov
icebp
enter
(bad)
imul
and
aas
pop
xchg
in
xchg
sub
mov
or
int3
aam
add
inc
popa
add
pop
loop
sub
pop
push
pop
repz
or
mov
arpl
mov
mov
dec
fadd
xor
xchg
in
sbb
and
adc
bound
shr
loop
pop
push
outs
sub
les
cmp
push
pop
mov
fidiv
cmps
or
movs
scas
daa
jge
stos
loope
jbe
fld
in
jl
retf
sub
xchg
lock
push
fs
mov
fsub
mov
(bad)
loop
lods
repz
out
lods
mov
jmp
sub
cmp
ins
push
and
in
mov
outs
(bad)
icebp
mov
hlt
bound
inc
adc
bound
xlat
xchg
mov
inc
dec
js
and
dec
fs
imul
fs
cmps
or
inc
xchg
movs
lea
fld
and
ret
push
xor
adc
dec
and
push
push
retf
daa
daa
loop
out
xchg
or
xchg
dec
repz
mov
fnstsw
inc
jge
pop
sub
cmp
retf
push
pop
xchg
sub
xchg
mov
loopne
and
nop
outs
rcr
rcr
ror
pop
push
test
pop
sub
xor
add
cmp
(bad)
loop
add
push
mov
test
and
sbb
inc
add
mov
ret
mov
call
loope
push
cmp
inc
mov
pop
inc
and
outs
leave
mov
aad
sbb
mov
test
jg
pushf
ja
mov
mov
mov
push
sar
loope
sub
sub
stos
ret
mov
mov
ficom
int
sub
sbb
push
neg
jmp
enter
(bad)
and
sahf
or
cmps
cmp
inc
and
lock
fadd
adc
sbb
(bad)
mov
scas
sbb
xchg
push
ds
mov
test
and
(bad)
mov
inc
push
dec
jno
imul
in
pop
bound
fidivr
je
push
dec
enter
call
scas
dec
addr16
popa
sbb
add
adc
jl
cmps
shl
stos
jmp
pop
cmp
push
mov
add
lahf
sbb
jmp
fild
bound
das
sar
and
jge
push
xchg
in
or
daa
ins
dec
ins
jmp
fstp
xchg
xchg
cmps
ss
lahf
popa
sub
inc
add
int3
call
loope
cmps
dec
cmp
cmp
dec
retf
jnp
jge
cmp
les
lea
or
push
xchg
dec
jp
rcr
push
repnz
dec
sbb
jae
iret
sub
xchg
aam
pushf
call
and
and
stos
or
add
push
arpl
test
add
jmp
xor
sub
cmp
and
ss
jae
xchg
push
(bad)
int3
mov
popf
(bad)
push
inc
adc
fsubr
adc
push
imul
shl
jns
in
ror
sub
mov
pop
repnz
push
jmp
sub
mov
inc
test
and
repz
mov
or
call
aaa
cli
and
and
daa
cmp
push
push
xchg
enter
adc
imul
push
les
outs
pop
ins
xor
cli
stos
mov
pop
sub
repnz
in
and
xchg
pop
cdq
cwde
inc
or
xchg
xor
icebp
jnp
repnz
mov
xchg
xor
mov
lock
sbb
icebp
ins
(bad)
ret
jbe
lods
mov
mov
mov
bound
jecxz
enter
inc
(bad)
pop
scas
and
add
push
cmp
(bad)
mov
into
cmp
push
ins
fiadd
and
xchg
or
fwait
stc
dec
ins
clc
inc
ret
pop
shr
ror
cmp
jne
(bad)
mov
push
cmp
sbb
imul
fmulp
jae
and
mov
push
(bad)
pushf
adc
inc
sub
mov
inc
mov
dec
icebp
add
push
mov
ja
xchg
mov
addr16
mov
clc
rcr
int3
jge
pop
or
call
xlat
daa
xchg
xlat
popa
mov
dec
les
call
xchg
fwait
stos
lahf
jb
jmp
inc
and
(bad)
rol
loop
push
fadd
xchg
in
nop
lods
mov
mov
popa
cmps
sbb
outs
cmp
das
cmp
je
cmp
loop
(bad)
jmp
push
lods
imul
push
add
cmp
sbb
push
outs
mov
cmp
mov
adc
stos
cmp
jge
or
sbb
mov
sbb
and
push
repz
dec
test
cmps
mov
dec
sar
out
push
rcr
loopne
jnp
jl
mov
scas
mov
xchg
jge
xor
xchg
mov
popf
jge
mov
aaa
push
mov
ins
lods
xchg
jecxz
(bad)
cmp
rep
xchg
inc
or
cmp
mov
dec
add
cwde
aad
scas
push
mov
pop
jecxz
data16
push
xchg
rcl
mov
xor
sbb
or
push
ss
cwde
daa
mov
inc
les
loop
lea
fdivr
inc
ins
jo
mov
ficomp
sub
mov
jg
sahf
add
pop
repz
repnz
pop
icebp
xor
push
push
je
jne
sub
mov
cli
rcl
test
stos
(bad)
mov
cdq
xor
sahf
jo
jecxz
clc
(bad)
inc
dec
mov
cmp
cmp
push
sub
mov
dec
xchg
push
sbb
imul
or
(bad)
sar
out
into
mov
push
and
mov
lods
call
cwde
(bad)
call
mov
xchg
in
pop
jno
mov
out
inc
cmp
dec
mul
sub
pop
push
cmp
js
inc
daa
(bad)
mov
int
in
pop
rcr
mov
push
push
add
mov
jge
push
loop
jmp
jns
mov
sub
xchg
mov
pop
push
outs
jecxz
inc
xor
lds
sub
cld
sahf
loope
call
loop
int
jno
ds
mov
mov
xchg
push
cwde
cmp
dec
je
int3
cs
repz
nop
mov
add
push
push
arpl
mov
mov
test
dec
cs
lds
or
inc
jp
and
xor
das
ds
cmp
lods
jns
addr16
adc
in
jecxz
xchg
(bad)
mov
ins
push
imul
stos
addr16
je
stos
fcomp
ret
mov
call
stc
cmp
jecxz
movs
and
fwait
cmp
push
fwait
std
call
adc
bound
cmps
and
mov
mov
cwde
xlat
add
test
retf
mov
xchg
repz
loopne
ins
xchg
jl
dec
mov
jg
int3
adc
outs
ror
mov
lods
sub
(bad)
lahf
inc
xor
or
popf
psubd
jmp
adc
mov
fisub
shr
enter
jle
imul
jmp
add
sbb
mov
xchg
xchg
mov
and
test
or
mov
xchg
push
mov
les
add
stc
data16
pop
jl
jmp
in
nop
lock
adc
cld
push
lock
cmp
shl
cmc
cmp
mov
jp
mov
and
adc
loopne
rcr
mov
and
fbld
dec
sbb
ffreep
sub
adc
ret
push
sbb
(bad)
cmps
out
mov
es
pop
push
inc
jmp
and
repnz
pop
outs
mov
xchg
ins
std
fst
js
mov
inc
cdq
aaa
out
stc
push
scas
mov
push
dec
call
out
out
sbb
or
fnsave
xor
test
stos
out
inc
(bad)
into
popf
jmp
cld
and
push
push
popa
push
out
addr16
mov
xchg
xor
sbb
add
add
cmp
pushaw
(bad)
or
test
sbb
int3
adc
mov
sub
int
adc
sub
add
jno
pop
or
or
cmp
sub
data16
jbe
add
push
and
cmp
sub
fadd
mov
popf
push
push
mov
xlat
sub
push
cld
mov
mov
in
xor
mov
ret
nop
adc
cli
mov
push
lods
inc
imul
std
and
push
dec
loopne
xor
xchg
inc
popf
(bad)
out
fcmove
aam
xchg
ret
sub
addr16
xchg
add
or
inc
and
add
mov
rol
icebp
and
cmps
clc
mov
mov
mov
pop
(bad)
sbb
mov
and
inc
in
jmp
inc
sub
adc
retf
add
ret
push
arpl
xchg
dec
int3
jl
xchg
mov
mov
aad
mov
or
dec
ds
xchg
dec
(bad)
leave
cmp
mov
test
mov
add
outs
add
jo
movs
test
int3
dec
cmpxchg
mov
fdiv
clc
xor
aaa
adc
daa
push
adc
imul
push
pop
mov
arpl
inc
leave
daa
es
mov
int3
retf
xchg
cmp
mov
hlt
inc
push
bound
ja
paddd
(bad)
fsubr
add
movs
xor
mov
rcl
mov
mov
cmp
push
mov
ds
pop
lock
mov
mov
fwait
bound
sub
mov
jge
push
dec
mov
adc
dec
cmp
(bad)
loope
jl
dec
fidivr
loop
or
mov
sub
cmp
jmp
push
fsubp
lds
mov
mov
mov
int
(bad)
arpl
es
xchg
sub
xor
dec
jmp
and
pushf
fnstenv
mov
jae
(bad)
cmp
lods
mov
push
mov
cmp
(bad)
xchg
sbb
xor
xor
inc
jge
daa
js
and
lahf
std
sub
aam
inc
out
sub
pop
xor
mov
mov
in
cwde
fistp
ret
xchg
xchg
push
popf
mov
rcr
push
mov
lock
mov
mov
mov
push
pushf
das
or
push
jge
mov
fcom
fistp
outs
dec
xchg
not
push
add
fistp
mov
mov
aam
dec
push
and
inc
mov
sti
cmp
test
dec
inc
add
jmp
sbb
jno
jno
mov
rol
add
pushf
fadd
jg
sub
push
stos
mov
mov
call
sbb
mov
adc
retf
rcr
fsubr
push
xor
sub
mov
mov
pop
adc
adc
xlat
or
sub
out
jge
(bad)
inc
cmp
shr
xchg
cwde
mov
cs
leave
movs
sbb
test
into
push
addr16
add
or
shr
sahf
adc
pop
aad
ins
cli
dec
push
add
dec
pusha
sar
(bad)
pop
push
mov
repnz
cmp
out
sbb
dec
jo
mov
and
inc
inc
je
mov
mov
iret
je
and
mov
xor
lods
cmp
inc
mov
add
push
inc
adc
ret
retf
ret
pop
lods
or
das
and
js
data16
mov
push
ror
rcr
jmp
mov
pusha
in
mov
dec
leave
daa
adc
inc
jnp
lods
cmp
mov
retf
pop
data16
adc
fistp
inc
test
add
daa
fild
out
cmp
mov
push
movs
ret
dec
or
neg
leave
xchg
or
mov
sar
and
or
mov
dec
fucom
inc
loopne
adc
xor
pop
and
loopne
pop
je
and
push
cmp
ror
mov
xchg
or
call
xor
cmp
add
or
sub
cwde
xchg
mov
push
mov
lea
mov
sbb
mov
jo
popa
fld
mov
cmc
out
cmp
sbb
ins
pusha
nop
outs
call
ret
dec
inc
les
mov
mov
pop
js
aaa
iret
xchg
mov
jo
and
call
pop
xchg
xchg
out
mov
jle
jns
inc
cmp
dec
pop
jmp
shr
or
ins
jmp
cmp
xchg
or
xor
mov
in
jns
mov
dec
push
mov
call
ret
outs
jns
sbb
pusha
dec
and
call
push
les
dec
arpl
(bad)
push
mov
bnd
(bad)
pop
adc
sbb
arpl
ficom
push
cwde
movs
into
sbb
mov
pop
jo
xchg
and
mov
push
cmps
mov
xor
loop
fdiv
sub
or
test
mov
xchg
leave
ret
mov
sbb
daa
and
cmp
psraw
(bad)
push
mov
in
(bad)
(bad)
mov
(bad)
(bad)
jb
repz
push
pop
das
clc
mov
not
(bad)
jmp
fld
sub
xor
add
cmps
mov
xor
push
dec
push
sub
xchg
sbb
je
ret
iret
(bad)
js
lods
(bad)
in
adc
cmp
rol
cdq
or
enter
ret
test
inc
pop
adc
rol
enter
test
fldcw
xchg
lock
mov
into
icebp
jo
inc
xor
inc
imul
add
inc
push
mov
test
sub
dec
cdq
push
sub
outs
xor
rsm
xchg
or
loop
xchg
cli
pop
cdq
(bad)
not
stc
popf
fwait
add
add
push
xor
bound
daa
sahf
jbe
loopne
mov
mov
sar
push
or
pop
dec
sbb
and
mov
fldenv
test
data16
push
xor
add
adc
dec
aad
jg
cmp
xchg
imul
nop
jp
add
mov
sbb
fs
pop
(bad)
iret
fldenv
cmp
or
bnd
clc
and
mov
addr16
mov
aad
mov
inc
pop
add
and
inc
clc
inc
jnp
aaa
jae
inc
lock
cli
movs
cmp
mov
mov
push
mov
call
test
and
jl
(bad)
dec
out
mov
adc
pop
jbe
xor
jge
or
lds
mov
test
(bad)
mov
cdq
frstor
xchg
push
sbb
sahf
repnz
jno
sbb
add
jo
cmp
fsub
add
sub
or
test
and
lea
jecxz
jb
and
cmp
fnstcw
or
out
dec
ja
and
test
pusha
mov
inc
jmp
push
out
scas
bnd
mov
or
(bad)
fiadd
mov
sbb
data16
sbb
out
sub
in
push
ret
mov
repz
or
mov
fbld
jl
sub
lods
jp
shl
stos
in
add
mov
mov
sbb
and
xor
pushf
cmc
push
rcl
jns
xchg
in
in
int
dec
retf
(bad)
mov
loope
nop
adc
cmp
test
inc
leave
in
std
push
iret
sbb
dec
test
sbb
xor
pop
std
sbb
imul
adc
and
xchg
add
adc
loop
in
jo
mov
in
mov
call
xchg
enter
icebp
and
icebp
dec
mov
imul
scas
inc
mov
push
dec
cmp
push
inc
sti
xchg
jb
jae
cwde
push
test
cmp
mov
int
out
push
js
pop
jb
punpckhdq
jb
add
pop
cmp
arpl
fs
mov
mov
neg
xchg
add
rol
arpl
(bad)
push
add
or
mov
push
mov
jmp
xor
(bad)
jae
mov
pop
xor
dec
sahf
dec
xchg
mov
dec
mov
jp
add
sbb
mov
and
or
mov
ins
(bad)
xor
xchg
cdq
data16
shl
mov
rcl
sub
les
repnz
jb
vmwrite
push
sub
shl
daa
mov
inc
and
out
rep
push
lds
xor
(bad)
ret
push
stos
dec
xor
test
stc
xchg
mov
rcr
xchg
jb
push
and
adc
inc
stos
in
mov
popf
leave
call
mov
mov
push
dec
push
frstor
dec
mov
jmp
fs
adc
(bad)
scas
loope
retf
sbb
add
push
jg
xchg
pop
or
movs
test
lahf
or
neg
fwait
push
cmc
fisubr
div
push
xchg
and
jg
pop
or
mov
neg
xchg
xor
push
adc
enter
nop
ss
inc
sbb
add
push
jp
cdq
ret
inc
push
lds
push
stc
xor
push
jo
cmps
or
add
test
adc
popa
in
xchg
xor
xor
cs
jo
repz
mov
jl
ror
inc
xchg
popf
mov
into
rol
sar
retf
leave
or
ins
jg
inc
push
je
and
dec
outs
jl
mov
or
hlt
bound
mov
js
cmps
and
int
add
add
ds
sti
sub
mov
hlt
cdq
adc
xchg
sub
add
push
shl
adc
jns
lds
pop
push
xor
mov
enter
mov
scas
test
add
add
lock
ror
je
add
add
imul
ret
in
mov
outs
repnz
xchg
mov
mov
push
into
xchg
sbb
cld
or
jge
out
dec
fstp
sbb
or
jmp
loope
sub
inc
repnz
sbb
pusha
cmp
inc
jo
jl
xchg
cwde
out
addr16
mov
pusha
iret
cmps
and
jp
pushf
adc
aas
repz
add
or
pop
retf
ret
lds
adc
dec
xor
pop
hlt
xor
ins
gs
mov
pushf
sbb
dec
push
test
sahf
cli
ins
ins
pop
fwait
shl
out
leave
and
fisubr
sub
stos
sbb
sub
cmc
jb
lahf
pusha
aad
inc
pop
mov
inc
rcl
add
inc
xchg
or
shl
inc
les
dec
mov
ror
cld
das
cmp
mov
push
sub
sbb
leave
dec
sub
add
ficomp
shr
sbb
adc
and
sub
dec
xor
adc
add
test
adc
xchg
and
adc
pop
inc
fs
sbb
lods
mov
adc
ror
xchg
adc
fadd
ins
cmp
dec
cmp
ins
xor
xchg
aad
stos
hlt
or
xchg
mov
repnz
js
out
xlat
cmp
outs
enter
xchg
or
icebp
mov
jb
xchg
mov
add
gs
or
pop
jb
jmp
add
arpl
enter
fild
mov
cmp
inc
mov
or
(bad)
jg
repz
mov
ror
fidiv
pop
or
inc
xor
enter
je
es
in
push
lock
xchg
sbb
lahf
mov
fdivr
pusha
pop
and
mov
pop
or
ins
pop
add
js
movs
sub
imul
cmp
(bad)
cld
jp
pop
retf
and
ss
xchg
jecxz
and
xor
mov
test
jmp
(bad)
cli
pop
or
mov
xchg
or
and
js
rol
sar
add
xor
retf
repz
bound
mov
loope
mov
icebp
out
loope
cmp
xchg
cmp
movs
and
mul
shr
repz
data16
jmp
sub
jecxz
lods
xor
mov
cld
adc
(bad)
cld
popf
pop
or
sbb
adc
pop
adc
js
clc
push
add
cmps
clc
(bad)
jle
dec
or
xor
xchg
and
sbb
jno
movs
or
jb
cmp
dec
add
(bad)
mov
inc
inc
jg
ret
retf
push
jbe
mov
iret
cmp
xor
xchg
sbb
cmp
out
xor
inc
mov
adc
pusha
popa
mov
repz
or
movs
in
xchg
scas
loopne
mov
adc
lock
mov
and
ins
sbb
xor
jnp
inc
arpl
rol
sub
add
ja
push
push
jo
cmp
imul
mov
mov
mov
pop
add
pop
fidiv
sub
scas
cmp
fdivr
or
push
mov
ss
adc
fsubp
jbe
push
sub
ret
jecxz
repz
add
je
and
mov
push
cmps
out
dec
sub
inc
or
cmp
clc
inc
jp
leave
jns
sbb
sub
xchg
fst
dec
push
repnz
imul
stos
push
and
ror
ficom
fmul
lods
fsubr
das
inc
mov
push
jmp
(bad)
sbb
adc
lahf
mov
push
dec
ins
add
lahf
in
lock
dec
pop
pop
leave
xchg
xchg
repnz
push
mov
in
inc
int3
mov
jecxz
cmp
pop
sub
in
mov
pushf
repnz
test
mov
ins
mov
jg
add
mov
rcl
nop
cdq
outs
cld
lods
fst
call
jmp
inc
ja
lea
cmp
js
icebp
ret
dec
dec
push
dec
(bad)
in
(bad)
push
cmps
sub
leave
cmp
push
fbstp
push
pop
repz
jecxz
cmp
cli
sub
xchg
add
cmps
loope
loopne
and
xchg
mov
mov
or
push
and
pop
push
inc
arpl
into
push
bound
fnsave
daa
jle
leave
loopne
xchg
mov
xor
cmp
cwde
(bad)
mov
sti
std
std
or
mov
fsubr
ret
sub
cmp
cwde
xor
push
paddb
and
cmps
div
pop
jbe
in
(bad)
cmp
sbb
mov
sub
or
test
mov
mov
mov
call
sbb
mov
push
lods
or
fs
adc
loop
repz
enter
inc
push
pop
aad
mov
and
jp
jo
sbb
cmp
loopne
push
mov
stos
add
sbb
pusha
(bad)
xlat
adc
mov
enter
push
jl
cli
ret
cmps
add
pop
add
lods
(bad)
jmp
mov
adc
loope
pop
push
loop
jmp
add
loope
aas
push
push
adc
xor
push
adc
push
inc
mov
jb
xor
inc
ss
and
retf
push
sub
loop
adc
ficom
cmp
cmp
add
push
call
and
inc
mov
sbb
mov
enter
mov
stos
jge
js
addr16
push
cwde
dec
add
cmp
popa
jmp
(bad)
and
mov
sbb
(bad)
data16
nop
sub
sbb
imul
imul
clc
mov
outs
aam
or
add
pop
pop
push
adc
inc
shr
add
xchg
loop
nop
es
arpl
xchg
cmp
mov
in
rcl
jle
sub
mov
lahf
enter
test
sahf
shl
jge
pushf
js
(bad)
repnz
and
loopne
jnp
or
pop
iret
cmp
jae
fs
and
imul
sub
pop
mov
shr
pop
fdiv
mov
dec
stc
fidivr
fidiv
pop
mov
or
inc
jnp
jg
xor
jecxz
sahf
out
xor
cld
test
aad
ret
sti
sub
sbb
pop
fld
and
stos
ins
xchg
push
add
cld
add
and
inc
or
mov
cmps
ret
(bad)
dec
pop
xchg
gs
adc
and
jmp
add
stos
pusha
adc
fcomp
cmp
enter
imul
lock
(bad)
jp
xor
jmp
and
inc
jecxz
xchg
mov
cmp
pop
mov
dec
or
pop
repz
mov
cld
out
xor
ins
fist
mov
pushf
sub
test
test
mov
shl
xor
inc
int
shl
adc
rol
repz
imul
rcr
jne
cmp
jae
(bad)
and
in
adc
scas
sbb
and
mov
in
rcl
je
adc
loop
or
ins
pop
cmp
loopne
fmulp
jp
xlat
jmp
loopne
jle
pusha
add
retf
sbb
dec
loopne
inc
nop
loop
cli
xor
pop
xchg
mov
and
push
pop
and
or
push
sub
or
push
bound
sub
xor
je
or
jmp
push
clc
sahf
cwde
adc
and
xor
add
adc
lods
xor
dec
push
cdq
xor
in
xor
cmp
jle
cmp
cmp
dec
pop
(bad)
imul
inc
ins
and
pop
bound
repnz
adc
fs
xor
xchg
(bad)
push
ret
in
hlt
pop
push
outs
inc
mov
add
lods
cs
enter
jle
mov
adc
clc
ror
mov
bound
mov
mov
and
mov
scas
cld
push
add
xor
add
add
fs
push
test
pop
(bad)
addr16
mov
adc
scas
mov
enter
adc
into
push
dec
xor
fld
jmp
adc
fsubr
fs
adc
inc
push
xor
sbb
dec
add
mov
in
cdq
adc
inc
push
mov
push
sub
mov
add
aas
inc
xor
add
imul
sahf
ins
(bad)
sbb
fadd
xchg
push
or
add
inc
cmps
adc
and
lods
enter
or
xlat
movs
cmps
aas
xchg
sbb
fdiv
mov
aam
mov
cmp
pusha
sbb
mov
mov
cli
adc
neg
push
xchg
add
push
xchg
mov
xchg
mov
mov
or
sub
xchg
jne
iret
call
popa
pop
mov
mov
icebp
int
or
notrack
ret
lahf
retf
xchg
test
xor
push
jbe
jnp
pop
lds
jbe
mov
inc
fsub
xor
cmp
add
cmp
lea
sub
lods
stos
enter
(bad)
out
stc
scas
clc
push
xchg
shl
pop
jno
jl
inc
dec
das
mov
xor
push
into
jp
call
push
pushf
pop
or
sub
xor
push
and
xchg
out
ja
mov
fdiv
fdiv
pusha
add
ss
not
pop
push
es
adc
cmp
test
cmp
clc
fistp
inc
jl
xor
mov
lods
(bad)
xor
(bad)
leave
xor
fmul
or
sub
bnd
pop
loop
cmps
xchg
test
mov
cwde
test
push
dec
inc
cmp
mov
dec
or
xchg
mov
add
sbb
jmp
jb
or
sub
push
cmp
push
rol
jl
push
out
pushf
pop
ret
fiadd
test
(bad)
cli
fwait
mov
push
shl
adc
xor
mov
xor
test
int
repnz
and
add
pop
dec
into
jns
out
xchg
jecxz
xchg
dec
sbb
fdivr
xor
sbb
push
outs
jae
loop
aaa
and
scas
mov
out
mov
jae
jmp
or
rol
xchg
aad
test
cwde
aam
loop
xor
mul
lods
dec
jge
inc
stc
mov
sub
shl
lods
xchg
cwde
(bad)
out
scas
xchg
fisub
ins
xchg
cs
aam
and
adc
or
push
and
repz
push
sbb
(bad)
and
or
test
ins
popa
mov
dec
movs
push
inc
dec
pop
jp
enter
xor
(bad)
stc
arpl
outs
jae
out
frstor
sub
mov
test
sub
jo
xor
adc
je
xor
mov
sub
mov
(bad)
ror
mov
push
mov
push
push
shl
cmp
xor
adc
mov
mov
int3
dec
mov
je
cmp
inc
cwde
xor
mov
nop
ficom
mov
lahf
cs
pop
ret
add
loop
repnz
je
jo
adc
in
jmp
cmp
push
jg
inc
cmp
outs
add
in
repz
ds
jecxz
sub
outs
test
inc
sub
jl
stos
and
popf
je
pop
out
xlat
test
cmc
aam
mov
sbb
lods
sbb
scas
test
ret
out
adc
jb
(bad)
iret
call
in
cdq
fsubr
push
cs
pop
call
sbb
(bad)
outs
pop
cli
xchg
sub
sbb
sub
pop
jns
xchg
lods
sbb
enter
adc
dec
into
into
and
xchg
mov
or
and
fsub
jno
inc
mov
mov
retf
nop
dec
mov
adc
push
clc
mov
cs
in
xchg
pop
ds
sub
cs
test
in
movhps
out
ror
in
jmp
iret
add
push
mov
add
push
daa
ret
test
mov
mov
(bad)
sar
push
sub
mov
lahf
js
sub
pushf
or
imul
xor
sub
in
rcl
push
(bad)
mov
cdq
outs
call
mov
ss
data16
daa
cwde
xchg
iret
xchg
or
pop
and
pusha
push
push
pop
mov
pcmpgtw
cmp
ja
test
jmp
test
adc
lock
ss
fmul
sbb
iret
or
sub
or
xchg
into
test
adc
adc
mov
push
shl
dec
je
dec
sub
mov
(bad)
loopne
hlt
mov
push
scas
fcomp
jg
cdq
mov
leave
sbb
in
cdq
mov
add
lock
enter
or
inc
call
out
pop
repnz
mov
nop
jno
xchg
test
or
das
bound
lods
loope
or
pop
mov
adc
in
add
(bad)
adc
add
hlt
dec
or
add
xor
loopne
rcr
jbe
inc
lods
push
jle
dec
repnz
sub
dec
push
int3
cmp
mov
popa
out
shl
fnstenv
in
cld
dec
into
into
fbstp
fdiv
adc
mov
std
jns
leave
sahf
div
add
repnz
and
push
add
and
scas
sub
push
jge
fcomp
sub
lock
imul
and
push
mov
into
inc
mov
fwait
ja
out
fist
and
adc
fcomp
fadd
dec
add
ficomp
push
aam
jp
sahf
jnp
sbb
fsubr
push
lds
loop
rol
sahf
loope
mov
xor
pushf
mov
sub
mov
popa
dec
or
cdq
push
cdq
mov
mov
push
scas
mov
push
or
or
cdq
adc
sbb
je
fst
sahf
leave
and
or
push
inc
push
jl
jge
pop
xchg
adc
mov
cmc
es
inc
sbb
sbb
imul
mov
cmps
test
jmp
and
mov
in
cdq
je
and
xchg
jno
loop
retf
fidiv
std
mov
repz
std
addr16
push
cmp
fidivr
dec
sub
scas
out
imul
retf
nop
stc
mov
pop
ret
hlt
ds
rcl
jne
test
sbb
scas
sbb
dec
jmp
loope
and
scas
imul
int3
test
imul
out
loopne
sbb
mov
dec
sbb
push
adc
xor
nop
mov
sub
mov
sbb
jno
sub
xchg
sbb
dec
dec
xchg
pop
movs
in
outs
mov
cmps
scas
sub
or
pop
adc
adc
loopne
cmp
sbb
pop
ss
iret
xor
int
cmp
aad
add
shl
dec
sar
push
pop
cmp
xchg
enter
out
xlat
pop
mov
out
xlat
inc
add
fnstsw
push
call
cmp
mov
inc
js
jns
popw
cmp
rcl
mov
xchg
(bad)
stc
mov
jecxz
mov
cmp
pushf
loope
and
cmp
pop
loop
popf
rcl
jnp
xchg
arpl
stos
mov
sbb
xor
or
stos
push
(bad)
loop
mov
cmp
push
fisttp
fdivr
fiadd
adc
mov
cmps
arpl
mov
idiv
and
adc
js
jmp
push
(bad)
xchg
xchg
shl
(bad)
mov
or
sub
leave
ror
fadd
cs
jmp
jmp
out
fs
jecxz
push
xor
or
out
inc
and
xchg
cdq
pop
ja
in
pop
jae
imul
push
xchg
nop
cmp
(bad)
popf
out
cld
lods
out
cld
leave
adc
fcom
jns
xchg
pop
cmp
adc
rcr
sbb
xor
push
push
pop
mov
adc
test
ins
mov
jp
mov
sbb
dec
div
leave
mov
scas
cmp
jge
mov
and
sub
loopne
lods
mov
shr
mov
arpl
or
xchg
xor
popf
fidivr
and
xor
jge
sub
dec
push
lds
cmp
mov
push
dec
add
and
xor
sub
lea
jmp
cmp
in
inc
fs
shl
cmp
test
cmp
xchg
sub
call
mov
sub
or
cdq
sub
fiadd
imul
loop
imul
mov
jmp
mov
adc
push
lock
rcr
inc
xchg
aam
icebp
test
inc
sbb
leave
mov
cwde
(bad)
and
sar
add
jae
test
xchg
leave
pop
cwde
xor
mov
neg
xor
mov
jns
cs
xor
ss
or
mov
mov
call
inc
adc
test
jmp
stc
fcmovnbe
lods
fnstenv
jle
pop
jo
pop
inc
cmp
test
mov
adc
repz
sar
mov
inc
dec
loopne
inc
push
inc
in
test
mov
mov
fild
jno
push
mov
lods
cmp
or
sahf
lahf
or
outs
and
mov
(bad)
mov
aam
mov
call
pop
fist
addr16
in
fwait
inc
mov
sti
mov
rcl
jne
ret
test
mov
pop
fs
ficom
adc
bound
mov
sub
in
cmp
outs
into
xchg
pop
inc
sahf
mov
pop
add
mov
rcr
xchg
in
xchg
mov
mov
jp
push
pop
xchg
or
or
or
mov
fnsave
xchg
ret
mov
mov
jmp
outs
cmovb
std
push
aam
ins
es
loope
mov
mov
(bad)
xchg
mov
cmp
ja
fild
loope
fisttp
int3
jno
aam
rcr
ror
cmp
popa
mov
inc
cmp
dec
xchg
fnstsw
aam
jae
adc
xor
lds
(bad)
jo
xchg
call
lods
(bad)
lods
mov
mov
(bad)
fs
xor
ror
xchg
ja
and
arpl
icebp
cs
push
rol
fwait
pop
mov
pushf
call
mov
pop
xor
sar
imul
push
mov
in
cli
xchg
out
movs
fild
in
leave
lods
cld
imul
and
inc
js
or
bound
or
mov
mov
xor
push
inc
pop
outs
xlat
and
stc
pushf
sub
cdq
pop
test
fnsave
mov
call
lahf
mov
cmp
sbb
scas
loopne
ret
in
imul
cmp
jno
pop
ret
popa
mov
cmps
push
imul
mov
lock
cwde
int3
(bad)
les
mov
dec
sbb
cli
iret
adc
xchg
inc
cwde
lods
mov
clc
or
sub
(bad)
jp
(bad)
repnz
xor
sbb
xor
lods
mov
jne
sub
enter
jecxz
mov
dec
ret
enter
sub
xor
and
jo
pop
and
mov
dec
test
mov
push
(bad)
xchg
(bad)
sbb
jl
dec
push
or
push
lods
cmp
nop
sbb
pop
jp
or
push
xchg
sbb
xchg
pop
cmps
retf
aad
push
mov
mov
pop
hlt
inc
test
ja
rcl
pop
ss
mov
add
mov
sub
fs
mov
push
aas
fsubr
dec
or
test
push
and
mov
mov
xor
mov
sub
lahf
or
mov
xlat
fdiv
push
pop
mov
sub
pop
fnstcw
dec
int
clc
int
push
retf
in
sub
mov
push
out
in
int3
and
mov
(bad)
sbb
xor
pop
mov
test
jno
in
sahf
jne
enter
popf
imul
sub
sbb
test
scas
cmovnp
call
loopne
sbb
and
xor
and
or
cwde
cld
shl
stos
imul
mov
mov
cli
inc
pop
je
int3
leave
adc
imul
addr16
mov
sar
xor
call
fcomp
dec
outs
clc
and
test
xchg
mov
out
xchg
or
aam
jne
loopne
jmp
mov
sbb
fxch
mov
pop
jbe
pop
jb
scas
adc
enter
ins
inc
icebp
mov
pop
bound
popa
push
adc
mov
into
jb
ja
fwait
cmp
push
add
jns
and
push
pop
fwait
mov
dec
sti
retf
fmul
mov
xor
sbb
mov
push
add
dec
mov
and
add
xor
aad
sub
outs
rcl
js
test
lea
push
mov
xor
mov
adc
cmp
outs
xor
out
enter
jmp
jns
cmps
pop
fwait
enter
push
ins
mov
and
jp
gs
popf
(bad)
ins
sbb
add
sbb
jbe
sub
xchg
or
xor
mov
mov
mov
adc
ficom
jae
pminub
mov
ds
cli
mov
das
jns
jbe
js
sahf
test
dec
bound
imul
xor
in
inc
dec
test
sti
stos
test
scas
in
push
push
sub
cwde
push
js
pop
hlt
mov
mov
cmps
ins
cmps
adc
add
movs
mov
cwde
and
pop
stc
mov
call
mov
xor
mov
push
fbld
rol
int3
mov
sub
fisubr
push
inc
daa
inc
shl
pusha
pop
xor
mov
jle
pusha
adc
push
(bad)
fnstcw
add
ja
adc
push
ins
(bad)
mov
cmp
rcr
and
(bad)
mov
(bad)
fdivr
loop
jmp
scas
(bad)
test
hlt
out
mov
movs
clc
xchg
js
adc
repnz
cmp
push
jo
dec
adc
rol
call
addr16
sbb
inc
sbb
push
jg
(bad)
cld
ret
fdiv
clc
sahf
pushf
inc
fcom
and
test
or
pop
adc
scas
mov
pushf
(bad)
cwde
jb
(bad)
ret
fsub
push
dec
sbb
adc
test
dec
mov
imul
test
(bad)
clc
vmovlps
xor
push
xchg
mov
fs
sbb
or
fwait
in
dec
xor
in
inc
outs
out
lock
jo
dec
hlt
pop
setnp
jb
bound
ss
adc
mov
mov
(bad)
mov
sub
pop
jno
scas
adc
jg
xor
nop
jne
dec
clc
mov
lds
test
xor
mov
jnp
dec
(bad)
repz
gs
or
scas
jbe
xor
inc
sbb
mov
ficomp
xchg
daa
outs
cmp
(bad)
pop
fmul
js
popf
cmp
repz
repnz
rcl
inc
mov
rcr
mov
dec
popa
sbb
jnp
xchg
adc
push
fs
inc
adc
cmp
enter
cmp
and
xor
call
repnz
mov
add
mov
aam
xor
cmp
jg
outs
pop
add
loop
jns
adc
inc
lock
xchg
lea
jbe
dec
stc
adc
pop
imul
pop
sbb
xor
add
mov
sbb
test
scas
aas
or
sahf
fst
scas
cmc
pushf
jmp
ret
adc
or
ins
dec
(bad)
pop
cmc
jns
aam
dec
clc
daa
sub
sbb
and
ret
jmp
(bad)
jne
sub
push
xchg
adc
jb
mov
xlat
out
jb
adc
mov
lahf
lods
push
inc
add
or
adc
in
loop
addr16
xrstors
cwde
xor
bound
sub
push
ins
push
pop
add
mov
jmp
mov
loope
add
test
mov
(bad)
cmp
dec
scas
mov
adc
leave
jb
adc
jmp
xchg
iret
xor
and
mov
leave
stos
mov
fnclex
les
into
loope
and
push
test
jmp
sar
arpl
xchg
xor
add
lahf
bound
mov
hlt
in
mov
xchg
fisttp
mov
dec
rol
jp
not
cmp
repz
imul
cmp
mov
ins
(bad)
mov
inc
aam
les
(bad)
outs
xor
adc
dec
mov
fs
sbb
stc
ror
into
dec
jns
outs
sub
inc
pop
jno
scas
and
push
sub
add
shl
popa
sub
(bad)
adc
clc
iret
lds
xchg
and
inc
or
ror
push
mov
sti
(bad)
mov
jp
leave
cmp
xchg
(bad)
pusha
lahf
mov
fistp
mov
jp
xchg
js
cdq
setbe
mov
and
ret
sbb
or
cmps
(bad)
xor
mov
addr16
retf
xchg
fdiv
sub
add
cmp
push
dec
jecxz
shl
leave
cmps
mov
inc
stc
jmp
cmp
enter
daa
aas
add
imul
inc
loop
xor
xchg
dec
div
mov
fidivr
xchg
les
xor
jecxz
add
(bad)
jg
fwait
or
cli
jmp
cmp
mov
dec
outs
pop
std
ins
ins
idiv
cwde
ror
rcl
mov
lds
lahf
fdiv
imul
dec
repz
adc
mov
jmp
jle
or
jmp
inc
xor
dec
(bad)
ja
call
cmp
call
pop
xor
mov
into
clc
add
loopne
and
adc
sbb
popf
mov
xlat
in
cld
sub
inc
(bad)
push
push
(bad)
clc
mov
in
jle
mov
pop
push
sar
xor
inc
ins
cmp
lahf
mov
dec
mov
cmps
adc
pop
pop
push
jge
pop
pop
xchg
or
pop
push
inc
mov
rcr
mov
(bad)
enter
enter
imul
mov
and
(bad)
jb
push
in
or
xor
int
or
int3
mov
sbb
lods
jbe
xor
(bad)
stos
fsubr
mov
sahf
jmp
scas
(bad)
das
movs
xor
test
mov
ins
xor
xor
push
adc
and
push
pop
or
fldcw
mov
test
jb
xchg
fldenv
jmp
push
cmp
sub
push
rcr
loopne
adc
call
inc
enter
sub
jbe
xor
adc
int
xor
ret
sahf
xchg
and
(bad)
mov
pop
js
adc
loop
test
mov
sbb
lods
xchg
adc
scas
call
add
or
movs
stc
movs
out
into
sbb
cs
das
cld
in
fisttp
mov
mov
or
(bad)
or
inc
cmps
mov
xchg
arpl
jns
jnp
rcr
xchg
enter
mov
(bad)
out
int3
and
jbe
xchg
hlt
imul
push
sub
jle
inc
adc
adc
pop
and
repnz
or
mov
out
(bad)
mov
leave
mov
and
jmp
(bad)
popf
push
fisub
es
out
add
mov
push
ret
push
loop
push
sbb
jle
inc
ins
inc
jmp
mov
test
call
stos
retf
int3
sbb
imul
loope
and
adc
add
repz
(bad)
aad
dec
and
in
push
leave
mov
and
in
mov
fs
(bad)
mul
bound
sub
pop
fld
sub
push
cmp
mov
inc
ss
jecxz
xchg
out
fs
std
test
test
hlt
xchg
cmp
jl
cmp
dec
pop
(bad)
rol
sub
cld
outs
mov
mov
clc
sub
movs
icebp
mov
shl
div
call
out
je
mov
mov
mov
push
ror
and
outs
mov
fdivr
cmp
gs
addr16
js
fld
call
je
in
mov
lods
int
pop
ret
jne
push
mov
jecxz
lods
or
xchg
pushf
imul
and
xor
mov
lahf
cdq
cmp
aam
mov
push
movs
pop
movs
sbb
or
cmc
mov
pop
add
fs
cmps
rcl
fs
(bad)
mov
and
xor
adc
xchg
fnstcw
out
push
pop
(bad)
stc
out
cmp
hlt
inc
xor
into
sbb
jne
and
sbb
ret
out
push
bound
lea
(bad)
lods
fldlg2
mov
dec
mov
mov
mov
in
xor
cmp
movs
bound
mov
jnp
mov
or
cmc
mov
push
pop
mov
pop
dec
mov
mov
dec
inc
repnz
inc
adc
ds
push
or
clc
add
enter
aad
data16
lock
add
adc
add
adc
adc
leave
inc
fs
xchg
gs
jg
int3
inc
adc
mul
(bad)
std
sub
scas
call
in
scas
mov
cmp
data16
mov
cdq
jg
or
jmp
out
or
stos
shl
mov
enter
sub
shr
and
popa
fcom
and
hlt
shr
fimul
mov
fmul
cmp
inc
or
imul
dec
fld
idiv
stc
(bad)
pop
sub
xlat
ins
or
ss
xor
cmp
jecxz
mov
adc
mov
bnd
add
xchg
jecxz
(bad)
test
cmp
or
adc
stos
jecxz
faddp
cwde
mov
movs
ret
popa
mov
nop
jmp
and
and
enter
in
ret
imul
jns
mov
cmp
push
sahf
sbb
inc
push
jne
cmp
xlat
xor
aam
dec
aas
xor
cmps
imul
loopne
xor
push
or
mov
or
adc
loopne
(bad)
cmc
iret
je
(bad)
inc
test
inc
mov
dec
inc
mov
(bad)
pushf
fiadd
mov
push
test
movs
push
and
js
push
stos
test
aas
and
xchg
and
mov
repnz
jg
mov
daa
ss
inc
xor
and
enter
sub
push
or
sub
dec
pop
enter
cmps
out
mov
push
js
cmp
sub
xchg
jmp
test
stc
mov
mov
sahf
dec
pop
mov
ja
adc
inc
inc
into
dec
cs
fild
pop
jmp
dec
sbb
inc
sbb
pop
jle
jb
imul
cs
push
(bad)
(bad)
cli
ror
xchg
fcom
xchg
ins
(bad)
push
sub
pusha
ins
outs
pop
shl
inc
xchg
call
cmp
cmp
sbb
mov
pop
push
dec
into
sub
leave
inc
fsin
or
add
sub
ror
push
adc
xlat
mov
jle
repnz
pop
dec
cmp
mov
and
pop
sbb
test
out
cmp
jno
rcr
sub
push
addr16
arpl
in
xchg
rcr
xor
jle
xor
xchg
in
add
rcr
xchg
(bad)
in
ficomp
(bad)
jo
xchg
dec
add
push
js
cmp
movs
pop
movs
rcl
outs
popa
fcmovb
stc
rcr
push
inc
mov
out
out
ja
mov
iret
inc
mov
xchg
mov
xor
add
imul
fidivr
mov
mov
shr
adc
push
and
test
idiv
ret
push
scas
stc
jp
mov
xchg
sub
adc
xchg
pop
std
sbb
add
push
scas
gs
les
in
adc
xor
mov
push
lods
add
sub
movs
push
cmps
js
mov
add
mov
sti
jo
sub
jl
mov
shl
xchg
jb
sbb
add
sbb
cs
sbb
and
jp
pop
loop
icebp
test
cmp
push
ret
mov
sbb
lahf
mov
rol
scas
test
mov
ss
ds
pop
js
enter
mov
test
sub
xchg
mov
or
fdivr
cmp
gs
xchg
and
jns
jbe
fisttp
cwde
jne
and
sub
fld
mov
jge
movs
movs
mov
dec
jge
cmp
out
fwait
lods
clc
scas
dec
push
sub
sbb
pop
push
stc
mov
add
imul
push
aas
xchg
mov
call
inc
aam
sbb
jp
sbb
adc
mov
or
adc
pop
jno
cmp
ins
pusha
jne
sub
sbb
ja
push
(bad)
repnz
sbb
bound
pop
or
jno
retf
pop
lds
sti
jg
ret
es
mov
xchg
rol
xchg
add
push
test
or
and
lock
lods
cmp
icebp
mov
push
hlt
in
jmp
addr16
popf
jg
inc
mov
jmp
sub
sbb
jge
in
scas
push
add
sub
cwde
and
jp
mov
mov
inc
add
je
jo
or
jbe
jge
sti
pushf
sbb
push
fmul
pop
loopne
pop
shl
jmp
mov
jmp
mov
mov
sbb
and
or
push
imul
inc
out
xor
rol
pop
cmp
mov
fsub
cmp
mov
sub
fisubr
aaa
ins
mov
std
cmps
xchg
push
ds
mov
add
ror
pop
dec
or
cmps
mov
mov
ds
rol
test
cmp
loop
into
pop
data16
mov
inc
adc
pusha
scas
retf
mov
mov
xchg
add
push
bound
jle
out
and
inc
jmp
or
scas
xchg
mov
lods
je
and
mov
or
lds
adc
cmps
repz
adc
(bad)
mov
in
sti
das
fs
mov
jns
retf
hlt
fs
adc
into
test
push
scas
rcl
cmp
sbb
push
gs
jno
mov
jmp
mov
sahf
pop
add
mov
aaa
sar
outs
fnstenv
and
(bad)
mov
cli
push
mov
lods
or
cld
(bad)
inc
sbb
test
mov
stc
out
inc
mov
xor
mov
sub
popf
fucomip
adc
daa
pop
mov
cmp
stc
mov
sub
lds
sbb
in
pop
std
pop
jb
add
ins
cs
out
mov
sahf
and
xchg
dec
int
inc
xor
popf
add
mov
xor
push
or
inc
out
js
test
(bad)
(bad)
pop
stos
sbb
mov
add
push
into
fwait
daa
or
or
xor
stos
mov
clc
push
ret
mov
and
sub
fs
sbb
push
bnd
in
pop
or
dec
inc
jmp
push
dec
imul
mov
out
and
out
ja
stc
sbb
xor
hlt
jge
mov
loope
rcr
mov
popf
fmul
in
sub
daa
and
dec
adc
popf
pop
cmps
sbb
push
mov
imul
push
call
sar
cmp
mov
push
mov
lea
les
cmp
xor
ja
mov
pop
inc
xor
popa
add
push
test
movs
test
pop
sahf
mov
add
test
xor
bound
sbb
dec
mov
scas
xlat
sbb
mov
test
xor
jns
push
xchg
cmps
push
ja
sub
push
int
ror
mov
sti
mov
mov
fistp
cmps
arpl
vpmacssdql
xor
lock
outs
xchg
retf
xlat
out
stc
pop
sub
clc
jae
mov
adc
aas
or
adc
pop
sbb
sub
cli
fwait
jb
cmp
jmp
inc
jns
inc
xchg
pop
cpuid
pusha
imul
loopne
mov
into
adc
(bad)
outs
and
inc
xor
repnz
mov
test
sbb
xlat
imul
dec
mov
shr
or
in
lds
mov
ds
(bad)
mov
jae
dec
dec
push
lods
std
popa
xchg
add
in
in
mov
mov
jb
xchg
push
imul
xchg
xchg
cmp
push
jecxz
or
jg
retf
jp
(bad)
push
mov
ins
retf
sbb
pop
aas
xor
imul
enter
lods
nop
(bad)
(bad)
push
jle
idiv
or
adc
cmp
cmp
mov
mov
xor
xchg
dec
(bad)
sbb
shl
bound
fiadd
lods
test
xor
mov
fwait
and
repz
imul
pop
outs
out
lahf
ins
loop
push
mov
adc
mov
in
(bad)
mov
xchg
into
xchg
mov
aam
push
mov
sbb
test
mov
(bad)
ins
sub
sti
mov
ficomp
dec
enter
mov
pop
xchg
xchg
js
mov
out
retf
xor
test
jmp
fild
loope
push
and
adc
pop
jmp
popf
inc
mov
sbb
sub
adc
call
lds
push
push
push
(bad)
push
out
lods
jmp
(bad)
(bad)
push
aam
aaa
icebp
(bad)
cmp
sti
in
fidivr
adc
jnp
mov
sbb
movs
lods
dec
imul
imul
cmp
or
dec
dec
sub
sti
mov
int
cdq
icebp
dec
test
mov
fidivr
add
(bad)
outs
dec
pop
push
dec
idiv
add
xor
fisttp
out
call
sub
pop
ja
loopne
std
mov
jbe
xor
mov
in
call
mov
jl
dec
push
shr
pop
mov
test
inc
call
outs
xlat
jg
push
pop
loop
repnz
cmp
adc
ins
or
ret
lds
mov
mov
dec
jle
xchg
mov
neg
addr16
sub
xor
ret
aaa
add
leave
addr16
push
js
pop
jo
jnp
loope
popa
cwde
(bad)
pop
loope
mov
mov
cmp
fdivr
test
ror
inc
cmp
in
js
or
leave
fadd
sub
daa
jns
test
leave
mov
jl
sti
add
call
mov
aaa
pop
inc
inc
xchg
pop
cmp
push
retf
cmp
arpl
mov
jmp
js
mov
mov
test
stc
lods
cmc
mov
or
das
dec
cmp
sbb
mov
cmc
retf
push
dec
dec
leave
clc
and
jae
or
fcomp
clc
and
jg
mov
nop
add
mov
shl
int
or
mov
dec
mov
mov
add
pusha
mov
sub
xchg
ss
pop
dec
std
sbb
imul
in
(bad)
lea
les
lods
or
je
push
pop
clc
loope
shr
loope
push
push
bsf
sbb
sbb
rcr
sti
fstp
rol
jbe
fadd
inc
jmp
mov
mov
sub
cmp
fwait
sahf
add
(bad)
cmp
jp
push
add
jne
sub
popf
mov
xor
call
adc
das
jp
jle
sahf
mov
or
inc
idiv
fs
and
inc
(bad)
mov
lea
loope
push
mov
rcr
ds
xchg
rcr
sahf
and
push
lock
int
cmc
mov
mov
cmp
sub
sar
jno
push
xchg
in
cdq
dec
scas
pusha
add
xor
call
enter
test
mov
and
mov
movs
push
mov
dec
adc
call
and
shr
sbb
sahf
out
mov
inc
ss
imul
adc
sbb
fadd
cs
add
jge
in
push
int
push
push
mul
sahf
sub
lds
sub
pop
leave
mov
and
add
imul
add
jg
cs
push
cdq
mov
aad
loope
int
xchg
aam
sahf
or
push
rcr
dec
xchg
imul
pop
add
jno
cmp
ins
lahf
add
and
movs
aas
mov
into
push
mov
loope
sbb
ins
sahf
inc
mov
rol
es
jno
fnsave
gs
or
lds
sub
cdq
lods
jmp
stc
lods
popa
cs
repnz
shl
mov
push
sub
in
mov
nop
sbb
lea
inc
xor
icebp
jp
out
scas
and
in
and
popf
js
cmp
test
mov
ja
adc
xor
out
jnp
(bad)
in
popa
dec
mov
xor
gs
sbb
(bad)
popf
xor
dec
imul
adc
inc
popa
adc
mov
rcl
ss
and
(bad)
mov
or
call
mov
mov
loope
gs
jp
(bad)
mov
aad
rcr
mov
in
adc
out
in
in
in
adc
cmc
sbb
pusha
ins
nop
mov
loopne
cmc
xor
(bad)
test
cmps
cmp
into
bound
xchg
(bad)
jne
sbb
js
mov
mov
movs
mov
pop
mov
jp
push
out
fwait
mov
leave
mov
movs
cmps
gs
mov
mul
jmp
sub
(bad)
cmp
outs
into
out
ins
and
sbb
xchg
out
jne
popf
stc
movs
imul
adc
in
ins
repnz
sti
and
adc
ror
sahf
mov
cmp
mov
js
js
jns
jns
clc
xor
retf
(bad)
stc
mov
fidiv
mov
(bad)
jae
jae
xor
inc
mov
div
test
cmc
push
inc
mov
(bad)
mov
dec
xor
std
xor
(bad)
(bad)
idiv
cs
repz
call
aaa
jae
or
mov
mov
or
and
ja
xchg
stos
es
in
idiv
(bad)
call
mov
lock
xor
xchg
pop
mov
mov
jle
js
jmp
fdivr
(bad)
inc
clc
mov
jg
jg
push
xor
xor
mov
lea
daa
dec
mov
not
mov
or
es
and
clc
(bad)
mov
arpl
std
lock
in
pop
scas
xor
xchg
std
cmp
jge
jae
jnp
js
pop
je
fild
xor
and
mul
mov
inc
cmp
mov
dec
ja
lea
fsubr
pop
jmp
int3
cmp
inc
or
jo
pop
arpl
(bad)
mov
jg
sbb
mov
shr
xchg
(bad)
mov
or
outs
mov
sbb
pop
lock
fild
cmp
mov
mov
addr16
aaa
xchg
aaa
push
mov
cwde
jae
jae
cwde
mov
stos
sbb
iret
mov
jo
clc
cmp
sbb
jecxz
mov
repz
data16
mov
sbb
jecxz
mov
inc
popf
not
movs
cli
aaa
cwde
add
sub
pop
mov
mov
js
movs
mov
add
push
mov
arpl
and
mov
inc
lds
shl
xchg
mov
and
sbb
fwait
push
push
rcr
xchg
sbb
(bad)
inc
sbb
aam
lahf
jo
jae
push
push
cli
rcl
mov
inc
mov
repz
pop
jae
clc
mov
jp
adc
push
mov
xchg
or
mov
sbb
xor
ret
data16
jae
aaa
mov
(bad)
xor
cdq
lahf
repz
clc
pop
jb
fwait
xchg
xlat
fcomp
push
xor
inc
mov
out
xchg
push
push
repz
repz
sbb
push
rcr
jle
xlat
bnd
idiv
sbb
inc
arpl
push
mov
sahf
and
jae
aaa
xchg
xor
xor
pop
jae
clc
adc
mov
inc
mov
push
pop
jb
dec
(bad)
icebp
sar
shr
das
sbb
push
nop
(bad)
xchg
aas
sbb
xchg
shl
adc
jle
mov
and
sbb
push
test
xchg
cmps
inc
xchg
movs
adc
clc
sbb
adc
arpl
xchg
jae
clc
sahf
jns
jns
js
pop
test
add
xbegin
sti
mov
fwait
jo
popf
inc
js
xchg
cmp
jo
mov
rcr
jg
xchg
adc
sub
jbe
sbb
and
cmp
xchg
jo
push
mov
lock
addr16
adc
and
fld
fnstenv
lahf
add
retf
xor
pushf
sbb
pop
daa
ret
cdq
mov
out
xchg
adc
ds
pop
xlat
xchg
cdq
mov
jbe
sub
mov
push
push
cli
fucomip
fldcw
pop
pop
lahf
jo
inc
pop
xor
shl
pop
jl
mov
ffreep
xchg
mov
lfs
shl
xlat
mov
or
cmp
lds
fwait
xchg
or
cmp
push
cmp
adc
or
pop
sub
pop
aad
and
(bad)
pop
mov
pushf
sub
pop
push
fild
add
push
xor
mov
out
cmp
push
sahf
cmps
xchg
mov
ins
nop
mov
mov
stos
call
jb
ret
xlat
sub
inc
imul
aaa
scas
sub
and
fisttp
jp
dec
inc
lods
(bad)
xchg
or
mov
sub
shl
enter
ret
es
mov
jmp
mov
pop
call
dec
or
imul
je
into
lea
in
test
aas
lods
(bad)
ds
mov
mov
inc
push
fst
call
jecxz
ret
jle
push
and
call
popa
mov
scas
cmp
enter
fwait
jmp
ret
clc
lahf
ret
jg
fisttp
or
in
sub
lahf
ret
das
jp
lock
jmp
fsubr
push
dec
enter
in
rol
packsswb
gs
movaps
enter
inc
mov
dec
dec
(bad)
dec
sub
cwde
scas
ret
scas
sub
mov
loope
ret
or
inc
push
ins
dec
cwde
push
mov
nop
sub
inc
mov
mov
rcr
js
sub
fisttp
jb
ret
mov
lahf
or
inc
push
enter
fmul
inc
dec
das
in
dec
shr
ja
push
in
fistp
scas
push
mov
js
out
inc
jl
cdq
ror
jmp
ja
imul
ins
outs
div
mov
shl
dec
movs
fmul
test
sti
pop
fadd
mov
lahf
paddsw
xchg
mov
out
adc
mov
jecxz
test
adc
sub
out
cmp
or
xlat
adc
scas
int3
jl
imul
sbb
jp
cwde
scas
mov
dec
sbb
mov
shr
mov
daa
je
fwait
cmps
mov
xchg
out
pusha
(bad)
scas
ret
mov
cwde
pop
movups
pop
test
in
jl
jnp
stc
ror
mov
test
jle
add
movs
sahf
in
(bad)
fdivr
sbb
lods
sbb
sub
jb
mov
sub
es
and
xchg
test
or
xor
push
mov
mov
test
xor
xor
test
lea
push
sbb
push
lea
push
movs
cmp
pop
stos
in
imul
je
imul
aad
ret
mov
call
fnstenv
adc
sub
leave
mov
fsub
jl
aad
xor
fdiv
adc
sbb
js
jl
mov
shr
jae
sti
imul
mov
push
movs
lods
and
lea
shl
inc
in
dec
test
mov
mov
and
pop
mov
jns
nop
and
and
push
inc
mov
xchg
outs
pop
cmc
push
push
fisub
xor
rcl
test
sub
dec
jmp
push
dec
rcr
pop
inc
fcom
js
pop
lods
add
ins
sub
fcom
shr
nop
clc
xor
enter
pop
jnp
fldenv
push
rcr
inc
pop
adc
inc
jns
xor
inc
sbb
mov
sub
stc
mov
dec
fmul
js
jl
lods
mov
xor
imul
sub
sbb
adc
enter
adc
mov
or
jmp
fmul
xor
jl
call
wbinvd
cdq
dec
lds
adc
xor
fsubr
or
and
mov
add
(bad)
aad
push
fcmovnbe
sti
jo
sar
sub
mov
xchg
cmp
sbb
aam
aam
aam
cmp
in
sti
adc
in
cmp
mov
push
lea
pop
lock
add
xchg
jmp
fstp
not
lock
add
sbb
adc
pop
pop
jl
pop
shr
jnp
cmp
pop
movs
sti
ffreep
push
add
xchg
push
test
fld
sub
shr
pop
mov
dec
enter
jmp
add
xor
scas
push
int3
jg
jnp
stos
mov
add
neg
pop
pop
movs
lock
jnp
jbe
retf
cwde
rcl
aam
adc
cmp
pop
push
ja
jg
xchg
xchg
push
pop
cmp
adc
push
jp
push
movs
int3
stc
test
add
push
add
dec
xchg
lock
out
sti
lock
retf
sbb
adc
fnstcw
mov
sbb
pop
inc
xchg
sahf
xlat
(bad)
dec
xchg
aas
sbb
dec
push
(bad)
jo
mov
addr16
les
aam
add
xchg
repz
or
aaa
pop
rcl
mov
pop
xchg
push
mov
pop
push
jnp
pop
push
(bad)
fadd
fisttp
out
adc
adc
push
adc
or
jnp
ret
aam
aam
aam
pushf
jp
sbb
fwait
push
adc
retf
imul
cmp
sub
aam
push
daa
add
rcl
jp
sbb
test
push
fild
ss
sar
adc
sti
add
mov
push
or
and
mov
dec
js
ins
dec
lea
sar
add
add
ret
retf
fisub
mov
or
in
sub
leave
out
sbb
jecxz
or
mov
aaa
and
iret
or
mov
invd
jmp
sbb
sub
or
shl
int3
lea
call
scas
mul
ins
ret
call
fisttp
push
fisttp
add
aam
xchg
or
push
getsec
ret
test
nop
out
xlat
pop
or
push
dec
mov
push
push
mov
movzx
sub
mov
stos
inc
push
pushf
or
outs
les
dec
das
aas
repz
loop
or
fidivr
jmp
bound
xor
call
psubsw
cmovo
cmps
lods
icebp
int3
loop
out
push
mov
lods
dec
mov
push
and
pop
jmp
pop
pop
enter
adc
xlat
(bad)
mov
pop
adc
(bad)
ins
dec
shr
movzx
push
iret
aaa
arpl
mov
das
pusha
dec
mov
sub
out
and
inc
gs
(bad)
das
test
ret
call
mov
in
dec
sub
xchg
scas
call
les
dec
pop
jnp
js
test
dec
dec
stos
movs
ret
add
das
inc
and
aaa
scas
loope
or
and
or
test
mov
mov
dec
ins
lods
add
in
and
jmp
adc
cld
jge
or
ret
add
mov
xor
pop
out
cs
fimul
(bad)
fsubr
fimul
jns
fadd
mul
xchg
jne
call
mov
iret
movs
sub
push
push
push
jmp
add
push
push
push
jmp
sub
jmp
loop
ret
push
jmp
sub
inc
jmp
ret
push
jmp
inc
push
push
mov
cmp
sub
sub
loopne
popf
xchg
sbb
mov
pushf
cmp
(bad)
repnz
int
jecxz
fst
adc
sub
retf
mov
mov
or
sti
das
jns
js
repnz
and
nop
inc
cmps
out
out
fidiv
mov
mov
(bad)
(bad)
cmc
jge
ret
push
mov
dec
mov
ret
bnd
fld
cmc
bound
ins
mov
bound
jno
sub
imul
mov
sbb
out
ja
and
add
and
xor
inc
repz
add
and
add
and
shl
xor
shl
rol
repz
shl
xor
shl
rol
repz
add
and
xor
or
pop
repnz
jae
xor
adc
push
mov
and
adc
jae
aad
repz
inc
add
jecxz
and
cld
xor
push
in
push
(bad)
lahf
popa
mov
repz
out
sbb
aaa
in
mov
mov
lahf
dec
cli
xor
lds
sbb
inc
push
shr
dec
xchg
and
add
loope
repz
loope
sahf
dec
xchg
and
mov
inc
inc
xchg
dec
(bad)
enter
lds
dec
repnz
mul
jae
push
les
shl
cmp
dec
loope
jge
ret
fucompp
mov
jb
pusha
mov
scas
sub
fsubr
into
inc
loope
push
push
and
dec
das
je
or
mov
movs
sti
adc
rep
arpl
bound
xchg
jp
jmp
add
enter
cmps
(bad)
dec
and
pop
cmp
sbb
jns
int3
call
cmp
dec
add
dec
pop
and
enter
inc
cmp
pop
inc
and
into
fs
sbb
js
inc
dec
outs
enter
enter
push
pop
sub
cmp
mov
dec
and
push
sub
rcr
lods
repz
sub
dec
add
add
into
xchg
mov
das
sub
outs
push
cs
mov
in
dec
bound
sbb
sbb
rcr
cmps
cld
sbb
or
inc
ins
or
stos
scas
fst
shl
xor
or
push
call
and
pop
xor
fsubp
pop
shl
sar
or
and
push
adc
sar
jo
call
and
sub
and
inc
or
cwde
test
imul
stos
test
inc
loopne
jne
mov
popf
push
cld
sbb
inc
(bad)
xchg
(bad)
mov
adc
inc
mov
imul
call
jno
jg
popf
xor
jmp
pop
mov
int
call
xchg
sbb
hlt
pushf
or
inc
xchg
sbb
enter
out
push
xlat
inc
clc
adc
or
popa
fidiv
cmps
jnp
fwait
pusha
out
xor
or
je
pop
iret
xor
inc
jae
cld
shl
call
stos
add
sbb
repz
inc
mov
cmp
and
sub
mov
mov
sub
jge
in
movaps
cmp
inc
dec
gs
addr16
iret
ret
scas
lock
or
fwait
mov
sub
psrld
dec
cmp
shr
imul
xchg
adc
push
les
pop
lahf
sbb
popf
gs
inc
cmps
or
jge
jns
je
sbb
dec
lahf
pop
test
add
stos
ins
xchg
dec
mov
mov
dec
sahf
sbb
jns
inc
xchg
inc
mov
adc
add
jns
push
add
test
cwde
sbb
pop
lock
pop
xchg
jle
imul
sbb
sbb
jnp
push
jo
adc
sbb
inc
fld
pop
and
shr
gs
fadd
inc
mov
inc
jl
sbb
dec
ret
push
stos
push
adc
fstp
inc
movs
dec
pop
or
addr16
jl
addr16
jp
jns
inc
pushf
dec
pushf
pop
mov
js
outs
fwait
push
iret
pop
push
jo
dec
cmps
inc
fiadd
mov
inc
adc
xchg
pop
out
mov
pop
inc
sbb
adc
pop
(bad)
adc
outs
push
pop
mov
addr16
add
mov
pop
pop
(bad)
dec
mov
jo
jae
pop
cmps
sbb
mov
mov
jge
pop
out
push
cmps
adc
sar
adc
inc
loope
rcr
jno
bound
inc
mov
jl
lea
leave
or
out
xor
jne
xor
shl
xor
push
mov
and
or
leave
loope
out
fisttp
pusha
out
pop
shl
fcomp
ret
mov
push
ret
pop
sti
pop
in
loope
mov
add
jne
push
int
out
cmp
mov
fisubr
mov
sbb
stc
and
sub
ds
cmp
cmps
lods
fmul
cmps
add
xor
out
mov
inc
into
adc
xor
mov
sar
das
loop
ret
outs
repnz
in
test
(bad)
pop
int
(bad)
sub
or
sbb
ficomp
(bad)
stos
push
loop
out
movs
aaa
mov
add
adc
and
dec
ret
xor
adc
idiv
(bad)
or
sub
xor
movs
out
std
sub
shl
mov
jecxz
ficom
aas
cli
cmp
sub
lock
mov
dec
mov
pop
mov
ret
sbb
sub
or
stos
and
xor
adc
ins
cli
inc
retf
fcmovne
bsf
shr
fdiv
or
imul
stc
fstp
cmp
ss
push
(bad)
and
push
loop
ror
ins
jmp
std
sub
sub
mov
sbb
dec
iret
adc
sbb
dec
loopne
into
add
push
(bad)
sbb
adc
mov
jmp
lock
xor
adc
test
stc
fidiv
mov
add
pusha
mov
repz
mov
and
test
mov
sub
and
and
mov
clc
push
mov
aas
mov
mov
ins
movs
aas
lods
pusha
(bad)
jae
(bad)
mov
xor
mov
popa
fwait
adc
xchg
movs
ds
sbb
mov
sbb
jge
xor
add
xchg
test
(bad)
hlt
out
push
loope
pop
pop
pop
and
push
pop
aad
cmp
push
mov
ret
adc
mov
push
fldenv
fwait
aad
push
fst
push
mov
and
adc
arpl
add
cmp
and
cmp
cmp
and
mov
test
sub
sbb
sub
add
gs
movs
add
repz
in
and
push
mov
aas
xchg
(bad)
xor
add
cmp
loope
lods
daa
lahf
or
add
data16
imul
cmps
adc
sbb
test
pop
and
sub
push
xor
(bad)
and
fs
jne
sub
jb
jae
sahf
outs
push
daa
inc
and
pusha
add
inc
or
pop
test
ja
dec
cs
aas
sub
and
aaa
push
movaps
sub
xor
add
jbe
stc
xor
pop
sbb
jo
pop
es
or
pop
xor
pop
jo
xor
mov
arpl
push
add
push
ja
imul
jg
adc
pusha
push
jae
xor
push
or
adc
sub
jnp
and
and
sub
adc
pop
push
loope
push
jne
add
sbb
je
aaa
or
ss
sbb
or
jnp
and
jns
pushf
push
retf
sub
inc
outs
dec
js
adc
jne
outs
and
xor
pusha
pop
es
push
sub
jae
adc
jl
bound
jbe
mov
inc
jno
adc
cmp
addr16
aaa
xor
or
adc
and
sub
data16
adc
xor
add
add
sub
mov
cs
push
(bad)
adc
in
mov
dec
fild
mov
pushf
xor
not
xor
jb
inc
cmp
in
xor
lea
inc
loope
fist
jnp
jmp
xor
cmpxchg
daa
adc
stc
sub
cmc
dec
inc
stc
add
push
movs
jae
sub
pop
mov
mov
lods
ret
sbb
add
cmp
daa
sub
adc
popf
shl
adc
les
sahf
adc
and
sub
repz
ret
xor
push
loopne
fdiv
fld
and
xchg
es
jb
dec
cmp
test
jmp
push
sbb
(bad)
xor
xor
sbb
or
daa
mov
dec
fild
xor
add
in
sub
inc
push
shr
ret
iret
pushf
cmp
add
push
mov
aaa
les
and
jecxz
iret
and
call
push
adc
xchg
and
mov
loopne
jbe
mov
outs
add
loopne
stos
pusha
nop
mov
push
lods
jo
adc
pop
test
fwait
jp
xchg
dec
ror
jle
push
mov
mov
add
div
inc
xchg
or
inc
mov
xchg
popa
loopne
nop
dec
xchg
bt
jae
mov
mov
add
adc
xchg
adc
dec
leave
push
hlt
je
dec
test
mov
call
gs
dec
test
addr16
mov
sub
dec
or
adc
or
not
dec
lods
(bad)
push
mov
add
cmp
gs
mov
movs
inc
mov
push
movs
inc
mov
cmps
test
fidivr
sub
sar
mov
rcl
adc
fs
xor
jb
jae
outs
stos
add
xchg
jo
xchg
adc
icebp
push
shl
xor
jbe
ret
adc
popf
sub
inc
cdq
inc
aam
mov
mov
lods
pusha
stos
ja
add
xchg
ins
mov
sbb
stos
jb
popf
aad
inc
mov
pop
dec
test
lods
add
xchg
xchg
in
add
shl
jb
push
arpl
and
xchg
enter
and
cli
je
sbb
push
and
sub
(bad)
sbb
or
loop
xor
imul
sub
fsub
enter
stc
ins
stc
rcr
pop
test
neg
push
pop
mov
mov
imul
mov
add
pop
ret
push
retf
mov
or
pop
rcr
inc
mov
leave
adc
in
sar
rcr
dec
rol
repz
adc
aad
(bad)
sbb
sbb
pop
retf
lods
cmps
js
jnp
bswap
add
pop
in
add
pusha
std
addr16
sub
pop
(bad)
cmps
and
mov
push
xchg
pop
(bad)
mov
lds
inc
xlat
and
data16
or
fldcw
mov
inc
mov
pusha
rcl
icebp
jae
and
dec
out
add
test
mov
arpl
mov
mov
neg
push
loop
cmc
ins
lock
adc
ret
pop
jecxz
mov
inc
(bad)
push
cdq
hlt
outs
retf
push
mov
or
add
xor
push
add
fstp
sub
ins
or
push
jp
sub
ss
adc
outs
dec
or
ja
xor
ins
mov
cdq
ror
dec
adc
or
bound
fwait
mov
mov
dec
xor
pop
jp
add
ror
cli
push
pop
push
adc
or
xchg
(bad)
xchg
test
cs
pop
add
jmp
(bad)
or
inc
sbb
pop
ins
sbb
mov
mov
add
pop
ins
jl
lahf
shl
sbb
or
sbb
mov
jge
cmp
xor
sbb
xor
xor
pop
push
xor
call
push
inc
sub
iret
mov
adc
es
sub
push
pop
sbb
shl
sub
push
and
sub
sahf
shr
outs
xor
sbb
xchg
stos
jo
pusha
sbb
daa
xor
push
imul
mov
jns
push
dec
inc
and
push
jno
mov
xchg
test
inc
dec
dec
dec
pop
or
or
adc
adc
sub
jge
xor
push
adc
pop
pop
or
jl
adc
xlat
stc
iret
int
imul
xor
scas
pop
mov
and
sub
push
mov
sbb
adc
out
dec
int3
xchg
dec
mov
retf
push
xchg
stos
inc
mov
push
imul
aam
jmp
lods
and
scas
cmp
xor
xor
push
mov
pop
mov
add
popa
scas
mov
sti
jp
xor
adc
inc
repz
lock
repz
push
hlt
and
adc
outs
mov
push
xchg
cmp
imul
imul
mov
outs
mov
jp
dec
sti
or
nop
and
jb
mov
out
and
sbb
pavgb
scas
outs
xchg
jae
mov
cmc
xor
push
retf
adc
lea
repnz
mov
cli
fs
sbb
sub
mov
iret
push
pop
cmps
jne
stos
push
mov
scas
or
outs
mov
xchg
pop
xchg
push
mov
sub
mov
out
push
test
jecxz
mov
xchg
dec
mov
icebp
push
mov
int3
cmp
jnp
dec
xchg
xchg
inc
mov
mov
xchg
mov
jno
je
cli
jae
adc
jnp
sub
pop
test
push
xchg
sub
sub
ret
xor
retf
inc
mov
out
sbb
(bad)
ds
sbb
jno
dec
mov
and
jmp
sar
loop
in
dec
enter
shl
adc
push
int
cdq
dec
cdq
jae
imul
sub
add
or
cmp
or
mov
aad
pushf
(bad)
lds
lods
jg
sub
adc
jno
dec
stos
div
out
stos
cmp
cmp
out
das
cmp
adc
loop
lea
fs
jge
cmp
inc
std
pop
pop
aam
cli
jae
jns
sbb
jp
(bad)
cmp
test
mov
jae
dec
shl
jle
das
sbb
xchg
or
cmp
cmp
outs
mov
gs
out
xor
jo
jnp
imul
and
adc
js
pop
xchg
pop
mov
icebp
pcmpgtw
call
sub
and
cmp
dec
mov
mov
fild
mov
call
je
int
fisubr
hlt
or
pop
mov
adc
into
out
inc
shr
retfw
xor
repnz
pushf
push
mov
cmp
and
scas
je
dec
dec
in
dec
stc
push
mov
int3
ins
int
scas
dec
xor
jb
push
mul
arpl
je
adc
out
add
pop
int
or
ror
dec
aad
jmp
enter
scas
dec
stos
push
pop
fldcw
jns
mov
retf
js
dec
retf
mov
xchg
inc
mul
push
sub
dec
adc
sbb
inc
fldcw
xchg
je
fs
imul
mov
xchg
dec
repnz
in
aaa
test
adc
sub
and
adc
scas
movs
or
and
in
les
lods
inc
test
(bad)
and
cmps
push
ret
xchg
aaa
icebp
jne
and
jb
cmp
cmp
cmp
add
dec
sar
push
cmc
push
into
jle
retf
ja
ja
adc
addr16
xchg
sahf
push
in
fadd
or
pop
fldcw
in
popf
sub
sub
pop
call
loope
and
add
push
mov
popf
and
and
icebp
sbb
mov
push
jmp
cmp
shl
dec
push
repnz
adc
push
adc
mov
cmp
pop
test
pop
jmp
jmp
xchg
xchg
and
into
lock
jns
and
test
and
int
out
into
dec
lds
pop
aad
outs
push
pop
fcmovnb
iret
ja
pushw
gs
sbb
fld
lahf
add
outs
lods
push
test
mov
scas
dec
sub
adc
mov
rol
sub
popa
inc
add
mov
test
test
inc
nop
xlat
and
add
or
stos
xchg
je
fcom
das
loop
mov
fsub
xchg
(bad)
xor
pop
xor
xor
mov
inc
div
xchg
pusha
mov
aam
cmp
push
outs
es
add
push
je
out
shr
xor
inc
sub
retf
test
pop
jnp
test
jo
xchg
xchg
inc
aad
mov
dec
and
mov
rcl
and
xor
adc
(bad)
mov
shl
(bad)
jae
fs
nop
je
jmp
xchg
jp
push
jb
pusha
(bad)
xor
pusha
sub
jo
xchg
xor
imul
lods
fcomp
push
push
jp
jb
mov
cmp
xor
mov
mov
loope
and
inc
adc
or
jbe
fisub
adc
jl
lds
cmp
xor
and
enter
jp
pop
cmc
js
dec
out
dec
sbb
ins
rcr
sahf
in
jmp
mov
test
scas
jne
pop
fnsetpm(287
test
test
fisttp
add
rcl
and
xor
cs
push
dec
sbb
or
fstp
xor
loopne
ret
and
cmp
mov
aaa
test
aaa
(bad)
or
imul
xchg
aam
mov
mov
aas
std
ds
and
cmp
pop
xlat
xor
xor
daa
das
sar
loopne
fsubr
adc
les
fisttp
xlat
adc
in
jne
or
je
mov
push
les
(bad)
mov
jno
inc
or
sub
dec
call
(bad)
dec
mov
mov
xchg
ja
sar
dec
arpl
xor
aad
gs
xor
out
cdq
arpl
mov
sar
mov
pop
enter
xchg
or
cmp
or
cmp
sbb
test
ss
xor
(bad)
nop
(bad)
jnp
fcom
retf
pop
popf
cmp
cmc
inc
mov
outs
sub
(bad)
sbb
jp
imul
push
cmc
push
lea
push
(bad)
out
shl
(bad)
rol
jae
add
or
(bad)
push
jp
(bad)
and
rol
mov
fs
(bad)
div
xchg
and
inc
push
xchg
add
push
mov
push
pop
hlt
sub
(bad)
movs
push
clc
sbb
jns
inc
jl
mov
retf
xchg
ret
(bad)
daa
sbb
inc
je
repz
(bad)
(bad)
and
jle
push
xor
mov
xchg
je
sub
sbb
xchg
push
(bad)
retf
cmps
push
test
nop
push
(bad)
adc
adc
adc
push
mov
adc
push
jae
mov
sub
ret
cli
pop
(bad)
cmc
aam
iret
xchg
push
mov
fdivr
cmps
cmp
rol
xchg
adc
xor
jle
test
jbe
xor
cmps
cmp
int
and
pop
pop
cwde
ret
cmp
das
popa
jae
mov
test
call
and
push
push
add
dec
mov
push
aas
push
retf
jbe
push
mov
mov
sar
mov
mov
or
mov
in
repz
xchg
add
adc
push
loop
xor
adc
sbb
clc
push
lea
xchg
pop
cmps
jl
in
dec
rcr
mov
inc
and
int
mov
mov
sub
push
(bad)
lods
mov
xchg
cmp
and
sti
test
xor
ret
pop
xor
fwait
loop
mov
sti
cld
and
(bad)
into
aam
mov
mov
cmp
xor
cld
sbb
xchg
sti
aaa
test
js
cmp
sub
push
ret
loop
xchg
ins
mov
shl
ficom
push
shl
xlat
xor
int
mov
in
add
xchg
mov
cmc
or
daa
pop
je
(bad)
retf
imul
pop
mov
and
mov
les
adc
cdq
cdq
dec
ja
mov
inc
sub
out
iret
fimul
dec
pmulhuw
and
lds
sub
cmp
clc
cdq
sbb
mov
jo
sbb
int
jb
lods
cmp
mov
xchg
dec
stos
cmp
cs
ds
fnstsw
enter
xlat
lahf
add
sub
call
scas
jp
and
jno
test
inc
dec
test
popa
leave
fwait
popa
sbb
fst
jmp
cmp
pop
(bad)
pop
mov
stos
(bad)
loope
pop
inc
(bad)
dec
push
dec
in
into
call
xchg
cmp
and
pop
cmp
aad
lahf
mov
dec
jl
push
frstor
sbb
ret
das
mov
stos
push
stos
js
pop
test
jmp
sahf
rcr
xor
stos
inc
dec
dec
and
enter
popf
adc
inc
ja
inc
pop
sub
xchg
jns
cmp
xchg
pop
stos
retf
mov
pusha
scas
scas
mov
test
mov
add
mov
sbb
pop
fwait
mov
retf
pushf
iret
mov
js
mov
arpl
dec
fcmovb
mov
pop
sub
mov
ja
xchg
lods
ficom
test
or
ror
pop
call
mov
and
lahf
xor
and
imul
hlt
jmp
cmp
shl
pop
inc
xor
add
mov
mov
mov
lods
inc
stc
push
loopne
into
or
xchg
addr16
inc
dec
inc
into
sbb
pop
lds
stos
and
jb
jle
out
xchg
lahf
xor
add
hlt
jmp
push
add
push
sahf
and
jb
jmp
dec
mov
mov
ret
int
sbb
mov
mov
mov
xlat
pop
xor
pop
loop
mov
jns
mov
xor
jmp
xchg
push
outs
dec
inc
imul
(bad)
xor
outs
(bad)
mov
test
leave
cmp
xchg
js
inc
dec
mov
cmp
add
mov
int
nop
sbb
cmp
imul
stc
mov
sbb
adc
mov
gs
pushf
lea
sub
lods
cmp
ins
popf
loope
sbb
jmp
inc
dec
push
leave
jg
xor
jno
(bad)
retf
adc
cmp
cmps
ins
mov
lea
mov
leave
imul
in
or
push
jbe
fwait
or
int3
cmp
xchg
dec
imul
dec
mov
mov
out
not
add
scas
cmp
retf
sub
xchg
push
mov
ds
push
fndisi(8087
push
leave
aas
sbb
cmp
mov
int3
adc
sbb
add
push
add
cdq
mov
or
jmp
mov
ss
sub
loope
adc
(bad)
and
mov
xlat
(bad)
jmp
shr
jmp
cmp
adc
push
jne
push
je
jns
jbe
ret
jg
test
das
rcr
add
aam
mov
les
sahf
xor
cmps
int
ins
push
xchg
jne
shr
in
dec
dec
arpl
stos
and
out
xor
or
aas
sub
dec
test
stc
cwde
repz
fst
inc
cdq
sub
cmp
push
ins
call
test
push
fstp
aas
clc
test
cmp
sbb
clc
inc
js
cmp
jnp
xchg
xchg
mov
(bad)
frstor
xor
cld
mov
pusha
imul
push
js
inc
xchg
and
mov
pushf
test
lahf
cwde
stc
clc
cmp
jns
aam
and
dec
cmp
pop
mov
dec
jp
cmp
or
ds
pop
xchg
or
adc
leave
nop
xlat
ja
out
pop
addr16
pop
xor
mov
sub
sub
sub
(bad)
dec
ret
fwait
xchg
sub
popf
jmp
test
sbb
or
sub
stos
sub
pop
icebp
jmp
shr
aas
pop
out
cmp
(bad)
jns
imul
sbb
add
inc
in
xor
jns
pop
or
fnstenv
(bad)
cdq
leave
and
ficomp
stc
cmp
fwait
leave
out
movs
std
sub
fdecstp
mov
sbb
popa
gs
sar
clc
or
js
xchg
cmp
fs
jne
pop
in
movs
xor
mov
clc
mov
sbb
jp
sbb
dec
cmp
std
pop
outs
sti
daa
loope
mov
and
ds
loope
aam
jg
inc
outs
std
outs
ret
mov
mov
loop
xchg
push
outs
scas
or
lods
and
dec
inc
das
mov
mov
cmps
add
jle
clc
push
out
cdq
fidiv
mov
(bad)
stc
outs
jg
dec
cs
pop
ins
add
mov
cmp
cmp
outs
icebp
mov
icebp
mov
xor
push
icebp
into
or
push
shr
scas
add
outs
jmp
pop
cdq
xor
cmp
js
xchg
xchg
arpl
mov
mov
push
cmp
outs
cmc
psubsb
mov
mov
xor
test
mov
mov
mov
scas
add
sub
popf
aam
icebp
mov
cs
lock
outs
cmc
mov
lea
shr
jnp
add
lods
and
mov
add
add
push
or
inc
hlt
sti
popa
ss
cld
int3
jo
ret
in
push
jl
dec
mov
icebp
jl
into
jo
push
(bad)
loopne
cli
rcr
push
shl
or
push
in
lods
les
jno
loope
mov
lods
dec
adc
push
scas
xor
xor
mov
popw
mov
(bad)
ds
cdq
ret
dec
xchg
sti
cmps
pop
jns
repz
add
xchg
bound
call
add
pusha
inc
xchg
in
xchg
and
adc
loopne
adc
(bad)
xchg
or
pop
cdq
jno
mov
jle
mov
or
outs
sbb
push
xor
jne
pop
mov
scas
outs
sar
loopne
cmc
inc
lods
inc
movs
push
icebp
outs
ja
xor
cs
or
jmp
pushf
adc
cmp
outs
out
xchg
add
push
outs
sbb
ds
inc
xor
pop
add
arpl
ds
adc
in
xchg
sahf
rol
jno
jne
inc
lock
pushf
add
cmp
add
sub
scas
add
xchg
ins
jge
sub
jne
pop
in
daa
stos
push
outs
inc
pop
lock
adc
call
mov
into
test
dec
loope
xor
add
lahf
xor
or
jg
fisubr
and
lea
into
xchg
adc
mov
pop
xor
xor
and
jmp
loope
fldcw
push
(bad)
pop
lds
or
and
scas
scas
add
stos
mov
push
jmp
push
xchg
jno
push
xor
pop
retf
inc
lahf
xchg
outs
jae
div
cmp
cs
outs
ret
outs
inc
pop
and
add
mov
cmp
push
push
pop
xchg
and
ja
mov
mov
cmp
xchg
xchg
in
xchg
(bad)
aaa
popa
sahf
rcl
mov
jmp
mov
push
int
and
arpl
mov
mov
push
cmps
mov
jp
xchg
(bad)
dec
xor
cmp
add
xor
loop
mov
xchg
lds
hlt
mov
mov
xchg
loop
pop
shl
mov
stos
std
inc
adc
addr16
aam
dec
push
data16
mov
add
pop
inc
adc
movs
in
push
or
cmc
nop
mov
xchg
pop
movs
sub
mov
mov
dec
dec
mov
pop
fisub
aam
xchg
jecxz
adc
sbb
into
jmp
add
(bad)
in
outs
sub
sub
pop
repnz
and
xchg
xchg
jmp
adc
cmp
push
xchg
int
add
and
adc
mov
fnstenv
loope
out
jp
test
jae
sub
mov
out
daa
jecxz
push
ins
pop
and
call
dec
sar
popf
sub
sub
loopne
xchg
movs
push
es
xor
mov
sub
fmul
mov
lds
add
in
call
mov
sub
sbb
push
pusha
jno
rol
mov
and
mov
and
push
dec
xchg
jno
movs
and
inc
pop
loop
aam
test
mov
les
cmc
daa
adc
xchg
jno
push
mov
popf
cmp
out
mov
mov
push
icebp
jecxz
xchg
loop
xchg
add
out
mov
push
push
pop
icebp
fisub
xlat
cmc
data16
and
xor
enter
ja
jecxz
rcr
ins
movs
add
ss
push
inc
mov
(bad)
int
dec
xchg
and
pushf
dec
je
sti
sub
dec
(bad)
stc
add
psubb
out
cmp
loope
xchg
mov
sahf
les
jle
adc
repz
mov
xchg
inc
sub
jecxz
in
pop
out
out
inc
in
fmulp
mov
adc
rcr
or
xchg
int3
mov
sahf
pop
add
xor
add
pop
cmps
test
inc
xor
jecxz
call
add
and
sar
mov
es
sti
loope
dec
cmc
cmp
inc
push
shr
mov
ror
and
out
push
pop
loope
iret
frstor
hlt
loop
repnz
not
mov
sub
and
sub
pop
push
push
mov
xlat
fwait
addr16
fdiv
cli
rcl
mov
js
sub
mov
fnstsw
and
adc
jo
add
sub
jb
ret
fisub
clc
repnz
and
jne
(bad)
enter
xchg
or
push
fcmovb
mul
test
inc
jecxz
leave
jns
inc
dec
push
retf
in
mov
jne
jecxz
fstp
inc
jae
out
push
imul
mov
mov
ins
xor
pop
xchg
arpl
mov
loop
lea
inc
push
mov
inc
push
inc
xchg
and
inc
sub
cmp
xor
mov
mov
mov
dec
pushf
pushf
bound
mov
and
nop
cdq
sbb
and
pop
call
outs
bound
ja
xor
pusha
pushf
inc
sbb
xchg
inc
mov
or
xchg
jge
jns
add
aaa
dec
inc
add
test
in
pop
bound
mov
call
inc
inc
aam
dec
fwait
ja
xchg
and
movs
ins
jo
sbb
xor
mov
inc
cmp
retf
push
jo
lods
ret
jecxz
lds
loop
and
iret
outs
inc
mov
bound
mov
into
xor
fadd
(bad)
shr
mov
bound
inc
dec
imul
fiadd
ja
push
stos
push
inc
gs
leave
ja
ja
or
mov
fwait
and
xchg
push
sub
jnp
mov
and
(bad)
pop
or
add
stc
clc
stos
(bad)
data16
cwde
cmps
add
and
cli
add
ret
in
outs
mov
or
movs
std
push
in
aam
scas
xchg
fisubr
in
xchg
sbb
add
xchg
test
call
adc
add
adc
sbb
jp
std
mov
or
loopne
in
mov
pop
test
mov
shr
dec
test
icebp
mul
jl
retf
ret
mov
in
jne
jnp
punpcklwd
mov
loop
mov
les
call
mov
dec
or
aas
and
das
imul
in
push
or
movs
jmp
or
stos
pop
mov
jle
out
repz
call
and
je
or
push
add
dec
xor
je
cmp
test
jmp
adc
sti
in
and
in
std
sub
or
mov
jle
les
cmp
mov
popa
es
sub
gs
xchg
mov
aam
mov
jnp
(bad)
jg
mov
cmc
stos
cmp
or
inc
dec
or
push
jmp
cwde
push
mov
test
jp
jne
loope
mov
scas
fwait
jg
sahf
gs
fsub
sahf
xchg
xchg
mov
scas
js
(bad)
ins
push
pushf
idiv
dec
loope
pop
or
mov
pop
mov
jle
fadd
cmp
sub
xchg
popa
cs
mov
ror
test
mov
stos
hlt
cdq
dec
fwait
cli
pop
paddsw
cwde
(bad)
js
sub
mov
pop
fadd
in
push
sub
mov
jne
sbb
cwde
div
(bad)
test
dec
inc
sub
clts
test
int3
xchg
mov
lahf
(bad)
jmp
outs
add
mov
mov
in
out
enter
sbb
xchg
das
mov
scas
mov
loopne
(bad)
cwde
fcomp
jmp
jle
mov
pop
out
jno
les
mov
cwde
sbb
jnp
push
cwde
pusha
idiv
out
or
mov
div
(bad)
retf
pop
aaa
cmp
jmp
mov
mov
and
or
out
div
add
add
xchg
(bad)
dec
add
push
dec
fcomp
push
xchg
(bad)
popf
in
leave
fist
rol
test
sbb
imul
nop
mov
pushf
mov
loop
mov
nop
adc
stc
cdq
movs
jno
ja
je
fnstenv
mov
add
bound
imul
mov
cmp
mov
ins
hlt
lds
imul
call
sub
ins
popa
test
loop
cmps
push
cmp
dec
hlt
push
mov
mov
hlt
inc
cmps
hlt
add
dec
ins
es
pop
mov
mov
dec
add
adc
mov
sub
loop
mov
xor
cmp
in
cmp
repz
iret
mov
outs
in
push
stc
xchg
add
mov
pop
shl
xchg
rcl
lahf
pop
lock
push
data16
jae
cmp
xchg
inc
jae
inc
cld
cwde
xchg
arpl
cmp
ins
pushf
out
jge
xchg
fnstenv
pop
lea
js
add
xchg
pop
dec
mov
add
(bad)
(bad)
clc
add
(bad)
out
add
xor
xor
push
jnp
(bad)
push
stos
loop
inc
(bad)
and
or
cmp
mov
addr16
cmps
iret
movs
mov
shr
outs
gs
popa
or
dec
inc
sub
call
gs
mov
cdq
fcomp
cmp
retf
sbb
out
jmp
push
jmp
mov
mov
pop
scas
das
je
adc
jl
sbb
push
cli
push
mov
dec
jg
mov
fisttp
mov
(bad)
leave
cmp
clc
scas
outs
das
xor
pop
jle
popf
enter
add
push
stos
cmp
in
cdq
imul
fsubrp
sbb
adc
push
jmp
pop
or
cmp
sub
mov
ins
popf
aas
pop
fistp
push
mov
out
fisttp
lahf
sub
mov
sbb
or
das
iret
outs
out
loopne
imul
push
dec
cli
jle
xchg
outs
out
add
clc
or
xchg
sti
ds
pushf
loop
out
aas
sbb
jge
outs
into
jbe
pop
retf
push
pop
scas
fisttp
leave
jle
sub
jecxz
sti
cmp
mov
into
dec
popf
xlat
jle
ins
cld
cmp
imul
sbb
add
pop
popf
ins
mov
sbb
xchg
jno
sbb
or
imul
push
xchg
test
and
pop
loope
sar
or
into
dec
outs
loope
out
xlat
or
xor
lods
push
pop
push
adc
loopne
ror
repnz
cmp
scas
mov
xchg
mov
cmps
icebp
xor
push
pop
xchg
outs
test
test
mov
fld
or
sti
mov
xchg
out
cs
inc
les
push
mov
inc
cmp
lds
inc
dec
and
xor
aaa
or
gs
sub
add
das
enter
rcr
in
scas
mov
lea
mov
xor
or
clc
(bad)
pop
jge
clc
inc
pop
ror
(bad)
jmp
sahf
(bad)
push
inc
dec
loop
fucomp
fsubr
imul
ret
mov
or
loopne
adc
cmc
ss
imul
mov
xlat
cs
loopne
cmp
daa
ins
shl
repnz
xor
imul
and
mul
push
pop
icebp
mov
idiv
shl
dec
test
aaa
mov
bound
sbb
ror
stc
xchg
jbe
cmp
(bad)
xor
inc
sub
outs
test
add
js
inc
add
ja
(bad)
xlat
ret
inc
and
leave
mov
or
nop
sbb
jecxz
fsubp
mov
mov
xor
lods
push
test
stos
sbb
call
repnz
mov
cmp
cmp
pop
in
outs
in
mov
jg
and
repnz
fsin
cmp
(bad)
pop
inc
popf
mul
xchg
mov
ja
inc
push
inc
or
xchg
mov
push
dec
jns
xchg
cwde
cli
je
mov
and
cmc
in
cwde
xchg
jp
mov
cmp
sbb
mov
mov
adc
mov
test
(bad)
cmp
pop
mov
mov
xchg
mov
mov
cmc
or
sbb
mov
mov
adc
mov
mov
cmp
pop
mov
mov
mov
xor
adc
ja
xchg
je
jne
mov
mov
sbb
mov
mov
pop
mov
mov
jne
jne
mov
cmp
sbb
mov
mov
adc
mov
xchg
mov
mov
div
mov
jne
jne
mov
sbb
cmp
sbb
mov
mov
pop
mov
mov
mov
adc
mov
xchg
mov
mov
div
push
mov
test
mov
cmp
mov
lahf
mov
repnz
in
bound
pushf
jecxz
mov
push
mov
jmp
in
or
and
xor
test
sbb
xor
sti
xor
pop
xchg
and
pop
pop
scas
scas
call
mov
test
jae
call
ins
add
aas
sub
cwde
jnp
in
mov
jl
xchg
dec
cwde
in
push
sbb
or
jno
inc
and
cwde
jg
adc
jbe
jns
inc
ds
shr
stc
xchg
xchg
mov
mov
jge
mov
outs
mov
sub
mov
jae
xor
aad
retf
ja
pop
sbb
in
sar
sbb
inc
inc
jl
dec
jb
call
mov
mov
xlat
test
xor
sbb
mov
and
sub
push
mov
retf
call
xchg
fdivr
fdiv
sub
mov
mov
mov
mov
sub
scas
sub
scas
mov
arpl
fnstsw
push
xchg
cmp
test
popa
jecxz
or
push
ds
int
dec
mov
or
jae
mov
fsub
inc
loopne
xlat
shl
repnz
adc
cmp
sbb
fadd
cmp
jnp
adc
aad
lahf
mov
pop
and
cmp
jle
mov
cli
cmp
mov
mov
out
mov
dec
and
int
dec
mov
movs
inc
test
mov
in
lahf
add
push
dec
or
test
xor
addr16
lods
in
jnp
dec
xchg
test
(bad)
mov
and
dec
std
cmp
mov
add
scas
cmp
sub
push
add
out
neg
mov
mov
xchg
lods
cmp
and
lods
sub
out
sti
mov
mov
pusha
sub
arpl
in
jmp
shl
mov
xlat
mov
mov
push
sub
ins
arpl
popf
cmp
jmp
jmp
rol
xlat
int3
push
in
addr16
xchg
xor
fidiv
cmps
add
inc
loope
inc
ins
pop
mov
xchg
movs
xchg
and
nop
ds
jmp
aam
shl
fwait
jl
fwait
out
cmps
bound
jecxz
(bad)
popf
jns
cwde
inc
xor
pop
ins
or
leave
mov
repnz
lods
adc
cwde
cwde
dec
inc
xor
gs
xor
test
xor
xchg
xor
cmps
(bad)
cmp
push
cld
push
cmp
jge
dec
and
(bad)
out
(bad)
sbb
jmp
jmp
cli
outs
out
in
sahf
sub
std
jg
repnz
inc
clc
shr
or
jbe
add
xor
outs
ins
inc
movs
push
dec
mov
mov
test
adc
loop
xor
cmp
dec
in
in
cmp
xchg
inc
mov
popa
jmp
pop
sbb
jge
or
dec
inc
mov
add
clc
sub
mov
xchg
std
ja
scas
adc
inc
or
or
add
(bad)
lahf
rcl
push
and
mov
stos
lods
movs
nop
call
loope
adc
cmovl
jno
cmp
push
cwde
adc
mov
jmp
loopne
stos
xor
add
cmp
xor
std
arpl
std
cmp
(bad)
and
mov
(bad)
ror
pop
add
shl
or
add
out
mov
ds
es
test
xor
pop
xchg
push
mov
push
fdivr
je
cmp
push
add
sub
push
push
inc
jae
(bad)
pop
clc
inc
or
inc
cmp
add
mov
jg
push
adc
bound
icebp
inc
push
push
jnp
xchg
push
psubsb
xchg
addr16
mov
mov
loopne
dec
inc
imul
ins
pop
rcl
movs
into
adc
call
es
mov
jno
popf
pop
and
int
or
fnstenv
inc
pop
mov
repnz
(bad)
movs
stos
jecxz
jne
jae
push
push
hlt
fdiv
js
into
aad
rcr
hlt
test
mov
jp
cmp
scas
je
push
mov
sar
cmp
gs
je
mov
push
pusha
jmp
add
dec
add
jns
inc
add
push
add
add
inc
add
inc
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
and
add
add
inc
add
outs
add
inc
add
ins
add
cmp
and
inc
add
add
imul
and
imul
and
data16
ins
add
and
and
add
dec
add
imul
ins
add
cmp
and
and
add
jae
and
popa
add
and
imul
popa
add
add
add
imul
add
inc
add
outs
add
inc
add
ins
add
cmp
and
dec
add
add
add
add
outs
add
and
data16
ins
add
and
and
add
add
add
add
add
add
outs
add
add
add
add
jb
imul
bound
ins
add
add
add
dec
add
dec
add
add
add
add
dec
add
imul
ins
add
cmp
and
push
add
arpl
je
imul
and
and
add
popa
add
and
imul
add
jae
and
and
add
add
dec
add
imul
ins
add
cmp
cmp
inc
add
je
dec
add
jns
jae
add
inc
add
outs
add
inc
add
ins
add
cmp
and
inc
add
je
and
and
add
add
add
add
add
inc
add
outs
add
inc
add
ins
add
cmp
and
and
add
add
add
jae
and
outs
add
je
and
add
imul
inc
add
dec
add
push
add
push
add
push
add
dec
add
push
add
add
dec
add
inc
add
push
add
push
add
dec
add
add
push
add
inc
add
push
add
inc
add
dec
add
dec
add
add
add
dec
add
imul
ins
add
cmp
cmp
inc
add
je
push
add
ins
add
add
add
add
dec
add
imul
ins
add
cmp
and
push
add
je
and
and
add
add
add
add
add
dec
add
imul
ins
add
cmp
and
inc
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
jb
jb
outs
add
and
and
add
dec
add
imul
ins
add
cmp
cmp
push
add
je
push
add
ins
add
add
add
add
add
add
add
outs
add
add
jae
and
xor
xor
xor
xor
and
push
add
xor
and
jae
jns
jae
je
add
and
imul
outs
add
je
and
arpl
outs
add
jo
popa
add
add
ins
add
and
ja
imul
and
jbe
arpl
jb
add
add
je
pop
add
cmp
add
add
js
add
add
add
inc
add
add
add
add
add
add
jne
jae
je
and
bound
add
add
outs
add
je
popa
add
add
add
add
push
add
jae
je
add
dec
add
data16
cmp
cmp
dec
add
push
add
jae
je
add
dec
add
push
add
je
push
add
add
add
add
je
add
add
imul
add
outs
add
ins
add
add
add
add
add
add
add
dec
add
inc
add
outs
jbe
ins
imul
gs
push
and
gs
je
jb
ins
popa
jo
jae
je
push
and
and
add
dec
add
inc
add
imul
pop
add
add
add
push
add
outs
add
add
xor
xor
add
push
add
outs
add
add
add
add
imul
xor
xor
cmp
pop
add
add
add
add
push
add
outs
add
add
add
add
add
xor
xor
add
add
push
add
outs
add
add
add
add
add
add
imul
imul
popa
add
add
add
push
add
outs
add
imul
popa
add
xor
xor
add
push
add
outs
add
imul
popa
add
add
add
imul
xor
xor
xor
pop
add
add
add
add
push
add
outs
add
add
add
add
add
xor
xor
add
add
push
add
outs
add
add
add
add
add
add
imul
push
add
add
add
add
push
add
outs
add
push
add
xor
xor
add
add
push
add
outs
add
push
add
add
imul
xor
xor
xor
add
and
add
add
jae
push
add
ja
add
push
add
outs
add
add
jae
and
data16
imul
add
and
add
jb
outs
add
and
and
add
push
add
jae
je
add
dec
add
data16
cmp
cmp
inc
add
jns
jae
je
add
dec
add
data16
add
add
imul
gs
xor
add
add
dec
jae
outs
ja
xor
jb
arpl
jae
add
add
add
jb
jae
imul
inc
add
and
data16
imul
add
add
outs
add
imul
and
inc
add
jns
jae
je
add
dec
add
data16
add
add
mov
ror
mov
dec
add
dec
add
dec
add
dec
add
jo
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
push
add
ins
add
popa
add
add
add
ins
add
add
outs
add
add
add
add
add
dec
add
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
push
add
add
popa
add
imul
and
je
outs
add
add
outs
add
add
add
add
ins
add
add
outs
add
add
add
add
add
add
dec
add
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
ins
add
popa
add
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
jo
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
dec
add
popa
add
add
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
add
add
add
jb
outs
add
and
and
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
add
popa
add
add
outs
add
popa
add
add
add
inc
add
add
je
add
jo
add
popa
add
add
outs
add
add
add
add
add
jo
add
popa
add
add
outs
add
add
outs
add
je
dec
add
add
ins
add
add
add
mov
ror
mov
dec
add
dec
add
dec
add
dec
add
inc
add
aas
inc
add
sbb
dec
add
pop
inc
add
inc
add
sbb
push
add
ins
add
jae
push
add
push
add
add
add
push
add
ja
popa
add
add
add
add
add
add
add
mov
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
add
and
jo
popa
add
imul
add
add
add
imul
and
ja
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
je
and
ins
add
arpl
popa
add
add
outs
add
add
add
add
and
je
push
add
add
popa
add
and
arpl
popa
add
jae
add
add
jb
outs
add
ins
add
ins
add
inc
add
add
popa
add
add
jb
ins
add
add
add
popa
add
add
and
daa
add
add
and
ja
popa
add
and
add
je
add
je
add
add
outs
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
jb
add
ins
add
outs
add
add
add
add
add
add
jne
imul
add
add
outs
add
ins
add
outs
add
add
add
add
add
jb
add
ins
add
outs
add
add
add
add
add
jae
and
ins
add
jae
jae
imul
and
popa
add
add
popa
add
add
add
add
inc
add
and
imul
popa
add
add
add
add
jo
outs
add
popa
add
jns
and
add
jb
add
je
outs
add
jns
and
ja
popa
add
and
add
je
add
je
add
add
add
popa
add
add
add
add
add
add
add
add
js
imul
jae
cmp
and
and
add
add
jae
inc
add
ins
add
cmp
and
and
add
add
jae
push
add
popa
add
add
ins
add
cmp
and
and
add
outs
add
add
outs
add
popa
add
add
add
outs
add
data16
add
jb
popa
add
add
outs
add
add
imul
and
ja
popa
add
and
jae
jo
add
imul
add
add
outs
add
add
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
and
daa
add
add
add
add
add
ins
add
dec
add
jae
je
popa
add
add
je
imul
inc
add
outs
add
imul
jb
popa
add
add
outs
add
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
outs
add
add
imul
jae
add
add
inc
add
ins
add
outs
add
ins
add
cmp
and
and
add
add
imul
jae
imul
cmp
and
and
add
add
and
dec
add
or
inc
pop
add
and
arpl
outs
add
je
popa
add
outs
add
cmp
or
add
inc
add
outs
add
jb
popa
add
add
add
add
add
je
and
outs
add
and
data16
ins
add
jae
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
push
add
arpl
imul
add
add
add
add
add
add
inc
add
ins
add
popa
add
add
add
add
jbe
add
jb
imul
jae
push
add
je
push
add
data16
add
inc
add
add
add
add
add
outs
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
jbe
add
jb
imul
jae
and
ja
imul
and
inc
add
outs
add
imul
jb
popa
add
add
outs
add
add
add
add
popa
add
add
and
outs
add
add
jb
imul
jae
cmp
and
daa
add
add
add
add
popa
add
imul
add
add
outs
add
popa
add
add
add
jne
je
jo
jne
je
and
data16
ins
add
and
daa
add
add
add
add
add
add
add
js
add
add
push
add
arpl
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
jb
imul
and
push
add
outs
add
add
je
dec
add
ins
add
and
add
jb
cmp
add
add
jb
outs
add
add
je
dec
add
ins
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
jb
imul
and
push
add
outs
add
add
je
push
add
jb
jae
imul
and
add
jb
cmp
add
add
add
jb
outs
add
add
je
push
add
jb
jae
imul
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
outs
add
jns
and
je
push
add
popa
add
add
add
imul
and
je
outs
add
add
add
and
add
jae
je
imul
je
imul
and
data16
ins
add
add
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
add
add
add
add
add
and
add
jae
je
imul
je
imul
and
data16
ins
add
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
je
push
add
popa
add
add
add
outs
add
add
add
je
imul
je
imul
and
data16
ins
add
jae
and
popa
add
add
add
add
and
jae
popa
add
add
add
add
add
add
push
add
arpl
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
jae
add
add
imul
cmp
and
and
add
add
jne
je
jo
jne
je
and
inc
add
ins
add
cmp
and
and
add
popa
add
imul
add
add
outs
add
bound
ins
add
and
je
outs
add
add
imul
and
data16
ins
add
and
and
add
add
popa
add
add
add
add
popa
add
imul
add
add
popa
add
imul
add
add
add
add
add
popa
add
imul
add
add
imul
and
and
add
and
data16
ins
add
outs
add
ins
add
and
arpl
outs
add
data16
add
je
jae
and
ja
imul
and
popa
add
outs
add
add
jb
and
data16
ins
add
and
imul
je
push
add
popa
add
imul
add
add
and
popa
add
add
add
popa
add
and
outs
add
je
and
jo
popa
add
imul
add
add
popa
add
imul
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
push
add
arpl
imul
add
add
add
add
add
add
add
jo
add
imul
and
outs
add
je
jo
jne
je
and
jo
popa
add
imul
add
add
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
outs
add
popa
add
imul
add
add
popa
add
ins
add
add
add
add
add
jb
add
je
add
add
outs
add
jns
and
outs
add
and
jo
popa
add
imul
add
add
add
add
js
je
jb
popa
add
je
imul
and
jo
popa
add
imul
add
add
add
outs
add
je
add
je
jae
add
add
add
outs
add
popa
add
add
add
js
je
jb
popa
add
je
imul
and
add
jb
add
je
outs
add
jns
and
daa
add
add
add
popa
add
and
jo
jb
outs
add
imul
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
imul
add
outs
add
push
add
je
push
add
je
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
test
jne
push
call
xor
cmp
jae
push
push
mov
mov
push
mov
sub
add
push
push
mov
call
test
jne
mov
cmp
jne
mov
push
add
push
mov
call
test
jne
mov
cmp
jne
mov
cmp
je
cmp
jne
push
call
dec
jne
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jge
call
test
jne
mov
test
je
mov
test
je
push
call
pop
mov
jmp
push
call
cmp
pop
jbe
mov
cmp
jne
push
push
push
call
add
test
je
add
mov
test
jne
xor
pop
pop
pop
ret
mov
lea
jmp
push
push
call
xor
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
xor
jmp
mov
push
push
call
pop
pop
cmp
sbb
neg
je
push
call
pop
mov
push
call
pop
mov
mov
call
mov
call
ret
push
call
pop
ret
call
push
call
push
call
push
call
add
ret
push
call
test
je
push
push
call
test
je
push
call
ret
push
call
pop
push
call
int3
push
call
pop
ret
push
call
pop
ret
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
ret
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
push
pop
pop
ret
mov
cmp
je
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
push
pop
pop
ret
cmp
je
mov
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
push
pop
pop
ret
cmp
je
mov
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
push
pop
pop
ret
mov
cmp
je
mov
xor
pop
ret
cmp
je
push
call
test
pop
je
push
call
pop
call
push
push
call
test
pop
pop
jne
push
push
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
cmp
pop
pop
je
push
call
test
pop
je
push
push
push
call
xor
ret
push
push
call
push
call
pop
xor
mov
xor
inc
cmp
je
mov
mov
mov
cmp
jne
push
call
mov
push
call
pop
pop
mov
mov
cmp
je
sub
mov
cmp
jb
cmp
je
mov
call
cmp
je
push
call
pop
call
jmp
push
mov
call
pop
push
mov
call
pop
mov
call
cmp
jne
mov
push
call
pop
push
call
xor
inc
cmp
je
push
call
pop
ret
call
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
mov
pop
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmp
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
sub
inc
add
add
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
sti
in
inc
add
in
inc
add
in
inc
add
in
inc
add
in
inc
add
in
inc
add
in
inc
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
adc
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
inc
add
in
inc
add
out
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
out
inc
add
add
add
add
add
add
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
out
inc
add
out
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
xor
pop
ret
mov
and
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
xor
pop
ret
mov
and
pop
ret
push
mov
sub
mov
push
mov
push
push
xor
cmp
mov
mov
je
cmp
je
cmp
jne
call
push
push
push
push
mov
push
call
add
xor
pop
pop
pop
leave
ret
mov
cmp
je
or
xor
div
cmp
jbe
cmp
je
push
push
push
call
add
cmp
je
or
xor
div
cmp
ja
mov
imul
test
mov
mov
je
mov
mov
jmp
mov
test
je
test
je
mov
test
je
jl
cmp
mov
jb
mov
cmp
ja
push
push
push
push
call
sub
add
add
sub
add
sub
mov
jmp
cmp
jb
cmp
je
mov
xor
cmp
jbe
mov
div
mov
jmp
mov
div
mov
sub
jmp
mov
cmp
ja
mov
cmp
ja
push
push
push
call
pop
push
call
add
test
je
cmp
je
add
sub
sub
jmp
push
call
cmp
pop
je
cmp
je
mov
inc
mov
mov
dec
dec
mov
test
jne
mov
jmp
xor
cmp
je
push
push
push
call
add
call
push
push
push
push
mov
push
jmp
cmp
je
push
push
push
call
add
call
mov
xor
push
push
push
push
push
jmp
or
mov
sub
xor
div
jmp
or
jmp
push
push
call
xor
mov
cmp
je
cmp
je
cmp
jne
cmp
je
push
push
push
call
add
call
mov
push
push
push
push
push
call
add
xor
call
ret
push
call
pop
mov
push
push
push
push
push
call
add
mov
mov
call
mov
jmp
push
call
pop
ret
push
push
push
push
push
call
add
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
xor
jmp
xor
mov
cmp
setne
cmp
je
xor
cmp
setne
cmp
je
call
mov
cmp
jne
call
mov
jmp
mov
cmp
jne
call
mov
push
lea
push
push
call
add
jmp
push
push
push
push
call
add
mov
mov
call
mov
call
ret
push
call
pop
ret
push
push
push
call
add
ret
push
mov
sub
push
push
xor
xor
cmp
push
je
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
je
push
lea
call
mov
cmp
jne
movzx
cmp
jb
cmp
ja
add
movzx
movzx
cmp
jb
cmp
ja
add
inc
inc
inc
inc
dec
movzx
je
test
je
cmp
je
jmp
lea
push
movzx
push
call
movzx
lea
push
movzx
push
call
add
inc
inc
inc
inc
dec
movzx
je
test
je
cmp
je
movzx
movzx
sub
cmp
je
mov
and
pop
pop
pop
leave
ret
push
mov
push
xor
cmp
push
jne
xor
cmp
je
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
je
movzx
cmp
jb
cmp
ja
add
movzx
movzx
cmp
jb
cmp
ja
add
inc
inc
inc
inc
dec
movzx
je
cmp
je
cmp
je
movzx
movzx
sub
jmp
push
push
push
push
call
add
pop
pop
pop
ret
push
push
push
push
call
add
ret
push
mov
sub
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
push
mov
push
mov
cmp
je
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
mov
cmp
mov
ja
mov
push
lea
push
mov
push
mov
push
mov
call
add
cmp
mov
je
cmp
jl
dec
js
mov
mov
jmp
lea
push
push
call
cmp
pop
pop
je
mov
jmp
xor
cmp
mov
setge
dec
dec
pop
pop
pop
leave
ret
push
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
push
mov
cmp
je
cmp
ja
call
mov
jmp
push
push
push
push
push
push
call
add
cmp
jge
mov
cmp
jne
call
mov
push
push
push
push
push
call
add
or
pop
pop
pop
ret
push
push
push
push
push
call
add
ret
mov
mov
ret
push
lea
sub
mov
xor
mov
push
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
lea
mov
mov
mov
mov
push
mov
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
push
call
pop
push
call
push
call
mov
xor
pop
call
add
leave
ret
push
mov
push
call
test
pop
je
pop
jmp
push
call
pop
pop
jmp
xor
or
jo
jo
and
pop
cmp
or
mov
jle
pop
(bad)
mov
push
outs
aam
loopne
xlat
adc
mov
push
sub
imul
inc
sbb
lds
xor
hlt
sbb
dec
dec
out
mov
xchg
push
stos
xchg
mov
outs
call
mov
push
iret
push
test
sub
(bad)
and
daa
nop
(bad)
das
fst
imul
dec
mov
rcr
pusha
stc
data16
imul
pop
iret
push
xchg
outs
pop
push
xchg
aas
scas
and
push
sahf
xchg
in
leave
fst
mov
push
out
mov
mov
cmp
je
aaa
xor
into
pop
pushf
push
sub
mov
(bad)
out
out
outs
movs
data16
xlat
ins
and
push
sti
inc
pop
dec
iret
mov
jo
push
cmp
jle
sbb
jnp
imul
pop
xchg
mov
jmp
xchg
in
jge
pop
enter
into
sbb
mov
in
movs
inc
dec
adc
ret
mov
js
retf
ds
dec
pop
out
mov
pushf
leave
pop
shl
inc
xchg
jae
push
out
fist
cdq
jo
int3
mov
jle
pop
shl
push
and
lahf
add
and
adc
jg
jl
scas
mov
xor
repz
mov
pop
cmps
data16
jle
outs
pop
dec
and
dec
push
(bad)
ss
add
push
ret
mov
out
jecxz
loope
mov
mov
push
or
sti
adc
movs
into
inc
das
fidivr
xlat
scas
ret
mov
data16
and
mov
xor
pusha
or
stos
pop
gs
mov
cmp
cmps
push
loop
push
adc
mov
xchg
cmp
jle
push
fisub
adc
je
xlat
ficom
and
es
or
(bad)
hlt
or
add
out
and
scas
cmc
out
pop
inc
sub
popa
dec
popf
jl
outs
lds
xor
adc
push
xor
mov
setns
fisubr
dec
push
mul
ins
mov
mov
popf
out
inc
fld
repz
icebp
test
adc
sbb
sahf
xor
add
gs
push
int3
pop
adc
or
jmp
enter
adc
and
and
mov
jnp
or
repnz
mov
in
jmp
(bad)
pop
adc
fbstp
push
mov
popf
inc
sub
adc
mov
inc
dec
xchg
idiv
dec
pop
(bad)
out
mov
jb
add
gs
push
inc
push
add
mov
xchg
jo
lods
cmp
ss
push
jge
and
retf
and
iret
push
mov
add
ins
ret
mov
xchg
imul
sahf
jecxz
mov
xchg
cmps
cmps
nop
cli
dec
cmps
push
scas
jbe
push
xchg
inc
dec
dec
jns
sbb
adc
ss
movs
mov
pop
mov
(bad)
mov
arpl
in
sbb
inc
es
scas
stos
and
out
jmp
mov
ficom
div
jmp
test
lahf
xor
cs
aad
dec
mov
pop
aas
into
popf
inc
lahf
and
xchg
push
mov
arpl
aaa
into
adc
inc
xchg
mov
mov
dec
ficom
cmp
push
lea
(bad)
outs
fdivp
adc
test
jbe
pop
cmp
sub
fld
out
mov
mov
push
mov
mov
mov
(bad)
fild
or
xchg
(bad)
gs
std
pop
out
pushf
sbb
sbb
xchg
minss
(bad)
hlt
dec
xchg
fwait
mov
add
(bad)
in
aam
dec
pusha
retf
pop
mov
(bad)
inc
cmps
call
and
dec
fwait
(bad)
scas
jo
fsubrp
dec
sar
sub
inc
push
sbb
fsub
inc
xchg
ja
cli
out
and
(bad)
das
push
jl
bts
fcom
mov
hlt
(bad)
mov
jle
(bad)
(bad)
cmps
adc
out
jbe
rcr
(bad)
(bad)
test
push
fldcw
imul
cmp
push
or
into
push
cmc
mov
dec
les
(bad)
in
popa
push
shl
jg
popf
out
add
stos
out
addr16
into
dec
jle
or
pop
clc
pop
inc
fs
or
add
pop
out
push
test
cmp
mov
jle
test
mov
pop
fdivr
xchg
cli
fwait
xchg
fmul
int
aaa
xor
sbb
cmp
lea
(bad)
and
and
mov
push
adc
jbe
nop
mov
xor
fld
dec
push
aad
sysenter
psadbw
inc
sti
pop
pop
(bad)
or
fwait
dec
jmp
fld
mov
mov
xor
mov
cwde
pop
cs
mov
jnp
push
fiadd
js
ins
push
data16
in
sub
mov
jmp
into
lock
mov
ret
mov
lahf
and
jmp
adc
jle
push
call
fisubr
mov
push
mov
adc
retf
stos
push
mov
pop
xchg
sbb
mov
mov
out
or
je
fs
push
xor
mov
pusha
inc
push
or
push
hlt
sbb
push
push
cli
xor
mov
lock
ds
inc
gs
adc
sbb
push
inc
pop
movs
mov
inc
cmp
mov
pop
jg
dec
aas
mov
out
repnz
jns
rcl
xchg
mov
or
push
fiadd
inc
std
dec
mov
out
test
jl
(bad)
jecxz
fimul
lahf
and
fsubr
mov
cld
int3
inc
jno
clc
sub
mov
scas
xchg
fadd
mov
out
or
hlt
rcl
rcl
inc
mov
sbb
out
fbstp
adc
or
scas
cmp
ss
push
pushf
push
jo
dec
into
pop
es
ins
and
xor
loope
cld
sbb
es
xor
fnstcw
in
aam
jne
or
adc
cmp
out
dec
jnp
(bad)
pop
ret
daa
push
stos
and
mov
fcomp
retf
xor
data16
in
in
mov
enter
scas
jno
lods
enter
cmps
movs
in
shr
dec
scas
js
(bad)
xchg
sub
stos
retf
sbb
arpl
test
jmp
mov
bound
adc
aad
cmps
in
ja
iretw
popw
into
movs
popf
or
in
push
lods
jecxz
fisttp
jge
lock
pop
adc
and
mov
jnp
mov
jp
and
in
test
stos
cmp
out
add
clc
sbb
js
pusha
jo
push
bound
add
test
push
adc
mov
les
xor
push
shl
sub
ss
js
xor
xor
jmp
cld
sahf
into
cmp
xor
mov
outs
iret
popa
and
inc
in
xchg
aad
dec
cmp
mov
dec
ret
fwait
inc
mov
mov
ja
hlt
adc
and
xor
cwde
aaa
jle
pop
movs
mov
movs
xor
pop
xchg
(bad)
mov
std
(bad)
loop
pop
and
jl
into
mov
cmp
jl
pop
mov
into
pop
fbstp
(bad)
jbe
cmp
fs
inc
mov
daa
(bad)
push
inc
inc
in
test
ins
in
adc
push
jne
inc
cmp
mov
shl
pop
ret
fcomp
inc
dec
fnstcw
mov
mov
jb
sahf
pop
enter
nop
pop
jne
mov
into
clc
mov
pop
iret
mov
fidiv
add
inc
adc
sub
nop
jmp
cwde
inc
xlat
fst
mov
stos
adc
mov
sar
push
jnp
push
jnp
or
iret
ficom
jmp
es
pop
dec
xchg
(bad)
xchg
ins
inc
and
ret
add
dec
je
jae
fidiv
mov
mov
fsub
int
mov
cmp
(bad)
mov
ins
jle
inc
das
mov
fimul
mov
xchg
aam
(bad)
fld
push
push
sbb
or
push
jge
outs
das
inc
ja
sbb
cmp
cmp
pop
xchg
or
lahf
sbb
mov
jae
sub
bnd
scas
out
out
aas
add
int
jne
sbb
add
dec
pop
or
jo
mov
xchg
cdq
dec
es
(bad)
ss
push
cmps
shr
shl
(bad)
dec
mov
pop
outs
out
clc
dec
cld
push
mov
dec
(bad)
pop
xchg
(bad)
imul
mov
xchg
add
pop
retf
sub
mov
mov
retf
inc
inc
and
xor
ins
push
cwde
and
pop
aad
ret
aas
aam
fidivr
xchg
test
call
sbb
iret
arpl
sub
or
sti
in
(bad)
pop
aad
sub
push
mov
sar
out
inc
cmc
retf
(bad)
cld
ins
mov
popf
div
ins
test
push
xchg
mov
in
fwait
xchg
fisttp
sbb
push
ins
mov
xlat
and
push
out
cmp
(bad)
mov
mov
fistp
push
movs
popf
mov
push
xor
mov
fcom
out
mov
push
lahf
add
mov
into
ficom
inc
xor
scas
cmps
sub
mov
mul
pushf
cmp
lods
js
out
xchg
cmp
(bad)
jmp
pop
movs
pop
(bad)
out
es
fcmovnb
pop
mov
(bad)
xchg
mov
bound
fcmovne
mov
es
fdivp
xlat
loop
pop
out
es
bound
mov
bound
les
mov
addr16
(bad)
hlt
mov
pop
fmul
loop
lea
xor
sbb
mov
and
jnp
inc
mov
push
mov
es
inc
sub
je
pop
xor
es
xchg
into
pop
pop
xor
in
xchg
in
pop
in
fcomp
or
scas
sahf
movs
rcl
nop
fisubr
mov
(bad)
mov
mov
mov
jg
inc
mov
mov
out
sahf
mov
adc
cs
sbb
or
sar
fstp
mov
push
std
xchg
xor
(bad)
pop
shl
mov
inc
bound
mov
stc
scas
(bad)
jle
jae
mov
push
aam
push
xor
pop
imul
inc
jns
dec
sbb
dec
out
call
pushf
mov
out
aad
out
call
neg
xor
sub
inc
mov
fisub
pop
es
push
adc
cmp
(bad)
mov
js
sbb
fild
inc
xor
mov
mov
jae
xchg
jp
mov
jae
xor
es
adc
test
bswap
shl
push
out
in
dec
test
push
push
sbb
mov
cmps
cmps
jmp
imul
(bad)
hlt
push
cmps
fidivr
inc
jnp
cmps
lods
aam
cdq
xchg
loopne
out
hlt
ins
xchg
mov
mov
hlt
int3
xor
push
add
call
mov
pop
ss
adc
fidiv
dec
sub
adc
mov
xor
in
dec
(bad)
(bad)
sub
or
loopne
lods
pop
sbb
fwait
sbb
lods
mov
jns
ins
mov
mov
xchg
mov
es
xlat
div
out
xlat
xlat
pop
jbe
cmp
dec
push
pop
pop
outs
sbb
or
adc
movs
dec
cmps
adc
add
scas
adc
cs
dec
pop
loopne
retf
mov
je
dec
retf
lods
sub
lahf
addr16
fmulp
ss
pop
repnz
xor
push
dec
mov
xchg
imul
test
pop
xchg
test
jo
hlt
int
stos
pop
mov
gs
loope
mov
dec
cmp
mov
jle
push
xchg
mov
imul
sbb
scas
lods
(bad)
int
repnz
lea
xor
dec
jnp
inc
aaa
push
mov
xchg
mov
mov
add
adc
and
sub
and
mov
inc
std
(bad)
and
and
inc
(bad)
jmp
arpl
pop
push
mov
jno
nop
and
in
lock
movs
xchg
lds
push
mov
not
xchg
mov
(bad)
jmp
mov
lods
not
js
nop
jbe
jmp
jmp
push
(bad)
jmp
(bad)
inc
add
push
cwde
es
neg
or
out
or
test
jmp
ss
or
out
sub
call
idiv
xor
out
cmp
pop
mov
cld
jle
call
push
dec
cmp
jae
das
xchg
daa
addr16
ja
mov
or
fdivr
cmp
or
sub
and
pop
sti
sub
call
popa
mov
or
jle
ins
push
bound
in
mov
or
gs
push
jns
fstp
add
cdq
sbb
push
pop
in
mov
lds
or
pop
xchg
fild
mov
add
mov
jmp
scas
loop
js
imul
ja
(bad)
push
mov
fidiv
inc
(bad)
sbb
mov
ffree
push
jmp
or
hlt
jecxz
jg
mov
inc
pop
rcl
mov
retf
in
shr
mov
sbb
jge
es
cmp
sti
cs
into
mov
add
out
int
jp
add
push
or
cmps
fstp
ds
fstp
stos
mov
pop
push
mov
pop
outs
(bad)
push
int
fimul
push
popa
inc
xchg
shl
dec
sub
das
retf
pop
test
xchg
enter
addr16
das
sbb
sbb
aaa
pop
xor
call
add
cwde
add
push
mov
add
pop
(bad)
(bad)
dec
inc
lds
or
mov
stos
imul
sub
bound
(bad)
cmc
sub
retf
push
xchg
mov
in
adc
and
test
xchg
js
(bad)
xor
or
js
mov
mov
in
push
jbe
loopne
js
adc
add
loop
cmps
fsincos
sbb
shr
jo
mov
mov
(bad)
(bad)
je
inc
fidiv
mov
cli
push
xor
in
sub
sub
cdq
inc
dec
mov
sar
xchg
xor
and
es
push
cmp
push
fwait
sbb
retf
or
shr
mov
cmp
xor
inc
or
push
pusha
in
cwde
pop
push
(bad)
mov
fidiv
push
push
xor
push
push
push
cmp
xchg
(bad)
pop
outs
and
sbb
(bad)
out
pop
out
pop
mov
push
mov
pop
fnstcw
fdivp
jg
adc
rcr
cs
fldpi
in
or
ror
cmp
push
gs
std
push
xchg
ds
jge
les
in
cmp
lods
adc
xchg
sbb
clc
in
mov
or
mov
out
stc
ret
cdq
out
push
dec
movs
pusha
and
pop
push
out
mov
and
adc
jle
pop
ds
loop
dec
std
data16
test
add
inc
sahf
mov
mov
and
bound
ror
ss
cmp
es
(bad)
movs
sbb
cli
inc
out
popa
aad
aas
aas
movs
cli
add
ss
lock
daa
or
inc
mov
cld
sub
adc
rcr
fdivr
(bad)
das
scas
fs
neg
pop
sbb
outs
out
out
nop
stos
sub
xor
arpl
xchg
adc
xchg
mov
push
mov
das
pop
push
dec
enter
loopne
push
aam
out
push
ret
daa
retf
mov
lock
mov
clc
out
pusha
mov
xchg
sbb
xchg
es
cmp
cmps
ss
idiv
into
dec
push
mov
ret
sbb
pop
mov
xchg
jle
mov
std
(bad)
enter
stos
into
mov
xchg
dec
(bad)
jbe
or
mov
enter
push
hlt
in
fstp
ror
test
push
mov
popa
not
(bad)
sub
ins
sbb
bound
adc
sub
movs
xchg
lods
mov
std
sub
mov
outs
mov
into
jbe
mov
xchg
sub
jg
jae
movs
gs
in
ret
call
clc
xor
idiv
aas
stos
mov
push
xchg
pop
cmp
sbb
(bad)
push
into
jbe
push
xchg
push
scas
outs
mov
(bad)
out
add
add
sub
inc
loopne
dec
adc
jl
xchg
pop
xchg
sbb
in
ficom
mov
jmp
sar
movs
in
ret
pop
jns
or
or
jo
pop
loop
xor
in
push
xchg
push
adc
xchg
inc
pop
repz
retf
dec
lods
cs
ins
imul
aaa
xchg
xor
dec
cmc
cmp
mov
ds
or
(bad)
aaa
push
inc
dec
mov
(bad)
outs
(bad)
xchg
fild
jmp
pop
jge
ins
cmps
jl
dec
mov
jns
xchg
cmp
and
ucomiss
popf
iret
(bad)
mov
adc
(bad)
out
jge
adc
adc
ins
rep
into
test
mov
mov
or
sub
push
aad
mov
stc
(bad)
stc
adc
outs
out
jns
(bad)
lods
pushf
inc
and
adc
loop
lods
dec
fbstp
sar
ror
sar
mov
int
shr
inc
jae
scas
pop
lods
mov
inc
mov
mov
leave
adc
xor
push
cdq
nop
xchg
adc
ins
sbb
leave
xor
and
pop
xchg
(bad)
xchg
jp
hlt
test
jecxz
iret
shr
bswap
call
jnp
arpl
mov
in
push
push
mov
pop
idiv
ins
(bad)
jae
xor
mov
jbe
and
fst
mov
in
sub
mov
xor
and
ds
fiadd
xor
dec
shr
shr
dec
mov
xor
(bad)
mov
pop
(bad)
aas
and
data16
out
test
jmpw
aam
fld
loopne
jmp
loop
xchg
pusha
mov
fidiv
(bad)
xchg
(bad)
mov
test
push
jmp
or
mov
push
pop
sub
out
inc
mov
addr16
jecxz
mov
not
test
sub
repz
xor
push
dec
jnp
je
inc
inc
(bad)
into
push
push
jbe
cmp
fst
pop
cmp
adc
lods
push
adc
xor
out
in
fcmovnbe
fisttp
sar
mov
sbb
push
xchg
pop
sub
(bad)
or
imul
or
cdq
addr16
aad
in
out
push
mov
ja
hlt
jmp
gs
sbb
rcl
jl
pop
xor
inc
push
mov
dec
pusha
scas
cdq
or
rcl
movs
xor
fidiv
push
addr16
ret
mov
dec
push
outs
jns
adc
stos
fwait
je
mov
cmps
(bad)
dec
mov
and
aas
xchg
push
lods
fist
mov
push
aam
(bad)
jecxz
aaa
xchg
cmps
aas
dec
jle
(bad)
mov
inc
sub
xchg
gs
mov
jecxz
push
daa
mov
adc
xchg
pop
mov
test
mov
pop
mov
push
mov
inc
mov
xor
dec
sar
shr
or
or
fcomi
cmpxchg
stos
xor
cmp
call
xlat
mov
dec
cmp
or
cli
in
out
jg
jae
ss
call
jne
pop
iret
mov
mov
push
jg
adc
arpl
shl
out
sti
mov
xchg
rol
sub
sti
ds
adc
(bad)
jbe
mov
inc
jle
in
fsubr
mov
xchg
aaa
scas
xchg
(bad)
pop
sub
push
lock
in
imul
add
pop
in
or
dec
int3
scas
jge
jecxz
aam
mov
adc
in
pop
fisub
sti
fimul
push
aas
jb
aam
and
jmp
mov
(bad)
not
int3
sbb
bound
ja
adc
push
iret
loope
(bad)
jns
push
sbb
dec
jo
repz
pusha
xchg
push
adc
pop
mov
rol
out
test
in
jnp
out
or
in
icebp
jb
mov
mov
or
pop
push
fst
out
in
push
hlt
cmps
and
stos
(bad)
into
in
nop
hlt
aam
out
or
sub
leave
or
sbb
cmp
rcl
and
fcomp
hlt
das
xchg
aaa
cmc
mov
out
cmp
sbb
(bad)
cmp
dec
add
and
daa
mov
lsl
(bad)
cli
jno
mov
ja
pushf
adc
cmps
push
out
jno
jnp
dec
add
pop
inc
xchg
adc
push
fsub
daa
pop
ret
mov
xor
push
or
sub
and
scas
cwde
mov
shl
js
in
outs
cmp
call
mov
(bad)
or
xor
jo
fisubr
fdivr
or
popf
push
hlt
imul
mov
outs
test
mov
imul
xor
ret
out
adc
pop
sub
xchg
das
inc
xor
imul
out
mov
ins
cld
sahf
mov
sbb
(bad)
cmp
and
js
add
xchg
mov
es
imul
mov
fidivr
jg
adc
push
mov
pop
aaa
push
push
xchg
lahf
pop
stc
inc
jmp
xchg
rcl
sbb
cwde
adc
fs
xchg
adc
bound
into
xor
add
ror
xor
mov
out
out
divps
mov
xchg
inc
mov
push
mov
int3
ins
lods
add
std
je
xchg
lahf
out
mov
lahf
mul
or
xchg
aam
retf
sub
out
shl
jae
ds
push
push
inc
xchg
pop
call
es
mov
mov
inc
(bad)
mov
mov
mov
fist
inc
inc
add
scas
daa
jp
test
lds
or
outs
and
outs
push
fs
popf
pop
hlt
mov
fisttp
scas
cmps
adc
dec
retf
inc
scas
xchg
sbb
(bad)
bound
mov
retf
mov
mov
es
jbe
mov
inc
push
adc
and
out
mov
mov
push
jb
jbe
dec
push
mov
out
push
push
daa
int3
push
fxch
xor
inc
ret
and
adc
outs
pop
pop
daa
int3
push
sub
imul
fstp
ss
stos
xchg
push
cmc
sbb
sub
enter
loope
adc
xor
sbb
iret
fsub
mov
cmp
xchg
aas
mov
fcom
out
cmps
jmp
mov
or
mov
fcom
lahf
outs
aam
xor
test
cmps
sub
or
inc
mov
and
lods
pop
cwde
pop
push
repz
mov
sbb
mov
bswap
inc
aam
push
aad
(bad)
xchg
mov
mov
data16
adc
xor
int3
mov
iret
out
add
push
(bad)
mov
mov
imul
inc
pop
outs
outs
mov
jns
gs
out
ss
fcmovb
imul
dec
pop
adc
push
xchg
aas
out
xor
ja
out
test
aam
sub
mov
cld
cmps
cmp
jnp
sbb
pop
dec
mov
out
mov
xor
mov
cmp
popf
loopne
mov
mov
cmps
pop
nop
sub
push
fs
cli
pop
into
stc
int
xchg
fisub
push
cmps
cmp
mov
pop
add
add
inc
push
mov
mov
cmp
jg
dec
mov
movs
in
sbb
aaa
and
mov
popf
shr
int
stos
push
push
neg
jle
cmp
mov
ss
mov
xor
mov
cmp
push
jno
ds
xchg
xchg
push
sahf
push
or
dec
mov
(bad)
pop
push
(bad)
cmc
scas
inc
scas
pop
ss
call
stos
iret
sbb
cmp
dec
(bad)
loope
cmp
ret
adc
push
sub
dec
enter
or
enter
push
test
mov
mov
xor
js
mov
xor
ret
cmp
adc
jbe
sahf
dec
and
push
or
jbe
fstp
test
mov
call
data16
mov
loopne
push
push
xor
cs
inc
daa
sbb
jmp
xor
scas
push
add
xlat
mov
repnz
icebp
xor
ins
xchg
mov
cmc
sub
es
fwait
ret
dec
in
adc
enter
das
into
rcr
add
rcl
mov
sub
xchg
xchg
and
scas
pop
sub
fisttp
pusha
jae
leave
dec
xor
push
xor
ret
jbe
jmp
(bad)
mov
out
movs
into
data16
icebp
outs
mov
(bad)
mov
test
adc
into
popa
(bad)
push
retf
add
ds
inc
add
call
scas
fs
inc
int
cmc
and
inc
push
and
les
scas
inc
add
jg
jo
xchg
inc
mov
ss
idiv
jp
mov
sub
imul
push
daa
(bad)
ss
pop
dec
pop
add
jle
mov
jmp
(bad)
data16
jns
pop
out
cmp
lock
add
dec
push
out
pop
push
dec
inc
pop
jmp
push
jecxz
shl
dec
ret
popf
push
mov
imul
daa
shl
mov
lods
into
rcl
pop
add
sbb
and
(bad)
push
popf
sar
or
pop
mov
xor
add
mov
mov
cli
out
inc
into
std
fcmovbe
leave
div
xchg
out
ins
pusha
je
pop
inc
mov
inc
iret
sar
dec
inc
mov
xchg
or
jl
mov
icebp
popa
or
les
mov
jbe
and
mov
xchg
ss
fidivr
mov
push
sti
push
pushf
test
push
cmps
inc
dec
(bad)
enter
pop
mov
push
push
add
out
(bad)
sahf
sbb
pop
mov
pop
push
or
dec
mov
cmc
iret
out
stos
shr
stos
pop
mov
cmp
jl
enter
cmp
aad
adc
xor
lds
sbb
call
adc
dec
dec
xchg
out
jge
cmp
outs
stos
adc
cmp
mov
adc
pop
ror
inc
adc
leave
cmp
xchg
mov
xchg
jbe
mov
loope
mov
pushf
inc
loop
adc
jecxz
fbld
aaa
outs
push
push
lahf
dec
(bad)
in
fnstcw
or
mov
test
xor
push
mov
and
cmps
aad
jp
lahf
shl
sub
outs
cs
sub
or
in
outs
mov
lods
(bad)
sbb
popa
out
push
into
(bad)
scas
xchg
es
mov
sub
out
xor
or
or
pop
fisub
daa
adc
ror
pop
(bad)
mov
sub
loop
mov
xlat
pop
idiv
mov
push
fisub
sub
fild
jmp
mov
loope
sub
mov
loop
punpcklbw
retf
(bad)
dec
prefetchwt1
sbb
dec
mov
mov
pop
mov
xchg
push
jl
lods
call
fwait
adc
leave
loope
adc
scas
xor
mov
jecxz
push
or
sub
pop
adc
ret
out
and
int
cdq
push
dec
jl
test
ss
mov
out
dec
sub
into
pop
lahf
push
je
div
cli
mov
jecxz
repnz
imul
adc
cmp
sbb
(bad)
jl
dec
push
xchg
das
out
dec
cmp
cld
jb
push
adc
xchg
add
xchg
push
scas
add
es
aaa
enter
into
dec
jo
mov
mov
xchg
loopne
push
popf
out
rcl
xor
xor
inc
adc
rol
push
jg
(bad)
ficom
mov
popf
call
je
mov
and
mov
repz
sbb
pop
ds
sub
mov
pushf
add
getsec
sbb
out
inc
push
mov
shl
pop
push
jmp
push
cvtdq2ps
mov
scas
stos
xchg
mov
lock
xchg
push
stos
out
repz
pop
fsubr
sbb
nop
mov
fsubr
ins
clc
sbb
jo
data16
fnsave
lods
push
lahf
xchg
rcr
iret
cmp
retf
and
mov
loop
loope
or
dec
pop
fadd
push
(bad)
fild
pop
inc
jg
sbb
inc
xchg
sub
xlat
bound
jle
fmul
out
es
xchg
jbe
call
dec
lds
adc
mov
xchg
pop
xchg
dec
add
clc
ret
fmul
or
push
(bad)
mov
sahf
or
mov
mov
cmps
push
sub
sbb
mov
sahf
test
pop
ins
xor
mov
jge
fs
rol
test
mov
pop
std
rcl
pop
fwait
(bad)
int3
mov
scas
sub
outs
(bad)
dec
sub
pop
jbe
je
mov
icebp
je
inc
scas
dec
mov
in
xor
fcomi
neg
inc
push
inc
pop
push
(bad)
push
shl
push
push
push
fwait
mov
pop
(bad)
cmp
mov
push
xor
push
cli
movaps
lea
ss
lea
(bad)
std
sti
cmp
sub
push
sub
(bad)
imul
dec
xchg
pop
outs
lahf
scas
mov
(bad)
and
jp
sahf
scas
fisub
sbb
(bad)
cmp
jae
adc
leave
popf
pop
test
sti
imul
dec
mov
stc
test
cld
mov
xchg
call
fsub
mov
repnz
mov
mov
or
xchg
popf
xchg
mov
xchg
pop
fwait
call
mov
in
push
ins
lock
shr
xchg
sar
push
movs
add
jmp
or
dec
jp
xchg
and
(bad)
out
dec
out
iret
mov
mov
sbb
push
xchg
pop
in
cmp
adc
xchg
pop
jge
mov
and
ins
repnz
push
mov
cmp
sub
push
hlt
ds
mov
aaa
sti
jbe
lock
adc
cmps
enter
sbb
push
push
push
call
sub
xlat
lods
or
imul
push
pushf
cwde
mov
fmul
mov
push
inc
into
out
es
sbb
inc
sbb
pop
inc
into
jecxz
imul
push
fist
outs
arpl
loope
ins
dec
(bad)
pop
idiv
fdiv
daa
cmp
in
popf
cmp
sbb
pop
ret
mov
dec
fmul
mov
dec
in
pop
addr16
test
sbb
(bad)
lea
pop
dec
jecxz
push
fwait
push
fnstenv
shl
imul
or
adc
lahf
into
pop
data16
out
dec
dec
push
sbb
push
pop
pop
xor
cmc
add
fisub
sbb
fist
mov
cld
mov
xor
mov
pop
ret
xor
push
movs
inc
cdq
mov
ret
out
add
outs
out
fucomip
sub
int3
retf
add
cmp
mov
mov
mov
popa
lea
jmp
cmp
fwait
xchg
mov
fnstcw
sub
int
jo
retf
add
push
cmps
dec
cmps
das
jmp
jp
aaa
xor
jp
pop
pop
sbb
mov
out
or
xchg
aam
push
test
xchg
(bad)
std
pushf
jmp
cmps
cs
loop
push
out
out
es
addr16
jmp
or
pop
inc
or
sub
pop
jl
push
dec
and
inc
mov
fiadd
pop
(bad)
push
lds
pop
movs
aam
ss
xchg
nop
push
sahf
sub
sub
push
inc
(bad)
adc
mov
aas
xchg
mov
mov
arpl
ins
(bad)
xor
dec
mov
cmp
inc
jmp
pop
mov
push
sub
in
mov
aas
jnp
in
fst
aas
int
push
in
cdq
pop
inc
out
jbe
sbb
push
bound
sub
fwait
out
cld
out
xchg
rol
and
lea
cmp
mov
jg
fisub
pop
xchg
cmp
or
cmps
xor
inc
repnz
xlat
and
sub
inc
cli
out
sub
cmp
mov
cs
ret
xor
ja
fdivp
data16
(bad)
enter
inc
aam
out
push
cs
in
fidiv
les
jae
(bad)
outs
push
pop
jo
mov
add
mov
(bad)
inc
inc
or
ja
bound
les
jg
(bad)
into
pop
jle
sub
jl
outs
mov
mov
test
mov
loop
sub
data16
jle
pop
push
cmp
push
scas
adc
cmp
(bad)
out
cs
or
jnp
and
(bad)
dec
and
lods
xor
dec
xchg
jle
mov
pop
mov
jmp
xchg
push
rcl
xchg
cld
call
push
sbb
test
jno
test
mov
cmps
jo
and
mov
lds
sub
and
pop
jbe
out
mov
mov
pop
xor
sbb
jae
imul
push
in
xchg
mov
cdq
fisub
mov
xor
add
stc
std
pusha
fmulp
call
mov
adc
sbb
dec
xchg
hlt
add
mov
jo
outs
ja
pop
das
mov
test
enter
and
lahf
inc
mov
xor
sub
(bad)
xchg
lock
pop
lahf
test
push
fld
push
test
shl
sbb
push
aam
jl
and
adc
test
xor
stos
jae
or
daa
ins
out
jbe
fwait
mov
mov
nop
enter
or
mov
jmp
rcl
mov
xchg
arpl
(bad)
push
ja
test
jg
cs
lock
mov
repnz
and
jp
fstp
adc
mov
jmp
mov
popf
out
sub
inc
outs
(bad)
cli
scas
dec
adc
fisub
adc
leave
daa
aas
ret
sub
ss
add
dec
nop
push
mov
add
in
std
jae
fmulp
push
mov
dec
aad
sbb
sub
outs
loope
inc
mov
repnz
sub
movs
and
xor
cmps
or
mov
dec
mov
shr
and
outs
imul
push
out
push
xor
xor
ja
imul
mov
mov
stos
hlt
mov
cmp
inc
nop
(bad)
fimul
lods
hlt
mov
into
call
mov
fnstsw
xchg
lods
mov
ss
scas
add
out
sub
fisubr
mov
enter
xchg
push
test
mov
in
push
loop
jo
or
pop
addr16
sub
or
or
pop
daa
xchg
ins
inc
(bad)
xchg
mov
sub
mov
ins
idiv
dec
jmp
(bad)
out
repnz
jae
or
sbb
xor
(bad)
cmp
mov
xchg
data16
scas
repnz
lahf
ja
add
push
ret
fld
adc
stc
call
mov
mov
sbb
rcl
jmp
not
cmps
dec
adc
xchg
or
push
shr
mov
inc
inc
mov
lock
or
xchg
add
jle
add
(bad)
pop
aad
jo
test
mov
sbb
add
sahf
mov
xor
add
inc
out
mov
inc
push
jle
cwde
stos
dec
dec
fadd
outs
and
jne
rcr
outs
rcr
loope
mov
jns
push
shl
push
push
rcr
mov
jns
rcr
adc
rcr
add
and
jbe
retf
mov
pop
and
rcr
pop
xchg
cli
ins
(bad)
pop
add
xchg
outs
shr
inc
or
loope
enter
sahf
fs
mov
rcl
fnstenv
fild
lods
inc
lods
mov
aaa
jno
sar
(bad)
sub
iret
movs
mov
inc
or
(bad)
fsubr
xlat
dec
cld
(bad)
mov
in
loopne
(bad)
pop
push
mov
in
in
sub
add
mov
mov
jbe
repnz
jbe
cdq
mov
mov
cmp
sahf
(bad)
cmp
bound
mov
xchg
push
in
int3
add
sbb
xchg
push
in
cmps
out
xor
sar
out
mov
sahf
mov
ins
mov
xor
jns
hlt
dec
cmp
ins
nop
or
sti
jmp
add
cli
ins
cmps
add
or
pop
rol
mov
cmps
data16
add
sti
dec
lahf
push
les
xor
fcmovb
sbb
stos
or
sbb
rol
daa
pop
icebp
jo
mov
retf
inc
or
push
push
cmps
mov
outs
dec
aam
and
cmp
cmp
xor
or
dec
hlt
dec
nop
or
scas
in
es
outs
adc
adc
outs
dec
mov
int
fstp
movs
xchg
scas
or
enter
sbb
mov
push
daa
add
xor
inc
cmp
mov
add
in
and
jg
repz
sti
push
ret
ja
mov
mov
push
rcr
xchg
pop
mov
mov
add
jecxz
repz
cld
dec
fist
push
in
jp
retf
push
mov
mov
mov
jecxz
imul
xchg
int
adc
dec
ss
dec
shl
ins
fdivr
(bad)
mov
add
mov
push
stos
xchg
or
push
mov
mov
xor
add
and
xchg
mov
pop
inc
out
test
push
daa
mov
out
adc
jb
sbb
imul
aaa
pop
mov
push
jae
aaa
out
mov
and
cdq
xor
cmp
mov
mov
xchg
sub
mov
dec
mov
mov
dec
test
dec
neg
dec
mov
push
test
jne
push
out
or
dec
arpl
push
mov
push
xchg
fdivr
xchg
outs
movs
(bad)
xor
mov
in
cwde
pop
rcl
mov
pop
mov
mov
mov
dec
mov
inc
loop
jne
in
xlat
dec
in
push
sti
jae
scas
inc
push
add
les
cmp
hlt
and
cmp
or
and
call
out
xchg
xchg
push
(bad)
jge
sahf
pop
inc
call
xchg
and
popf
pop
dec
popa
sub
push
pop
pop
or
imul
sbb
add
mov
mov
jp
mov
out
out
lods
test
cmps
loope
xchg
test
add
dec
xchg
pop
out
jge
dec
clc
adc
cdq
cmps
add
mov
(bad)
or
or
out
cmp
dec
jg
push
in
popf
outs
xchg
push
daa
inc
xor
push
cmps
outs
in
dec
sub
jb
push
in
ins
mov
xchg
mov
(bad)
clc
inc
mov
(bad)
push
ret
scas
idiv
adc
mov
mov
add
push
pop
lahf
adc
rcl
xlat
cmp
aaa
jg
adc
icebp
adc
pop
repnz
outs
call
lahf
mov
mov
fidiv
cmp
ss
adc
xor
inc
popf
jle
push
mov
inc
das
pop
pop
je
jecxz
les
clc
fild
inc
or
es
xchg
ret
mov
xchg
out
out
je
rcr
dec
(bad)
cmps
or
mov
enter
int3
mov
jbe
lock
push
mov
rol
ret
mov
aad
sbb
int
and
push
je
ss
dec
sbb
adc
sub
into
mov
mov
sbb
dec
movs
cmp
(bad)
inc
and
leave
outs
imul
jbe
js
arpl
or
push
cmps
dec
xchg
dec
cdq
pop
mov
sub
out
ins
jbe
outs
iret
inc
mov
add
rcr
cmp
add
fdivrp
jb
mov
xchg
es
add
add
jns
in
sub
xchg
ds
jmp
ret
jb
aas
addr16
std
xor
out
sbb
mov
sbb
dec
sti
sbb
push
icebp
xchg
scas
mov
inc
push
cmps
push
xchg
mov
mov
jmp
jle
or
xor
outs
(bad)
mov
inc
push
sbb
or
out
mov
xor
xchg
mov
xchg
fisttp
loope
rcr
pop
dec
mov
lahf
sub
popf
ja
je
adc
enter
jle
test
pop
jae
cwde
and
data16
test
std
adc
lock
mov
sub
jle
jmp
scas
pop
jno
pop
xor
jl
outs
loop
jg
(bad)
adc
adc
add
or
lods
lea
movs
mov
inc
mov
mov
push
cmp
call
xchg
outs
enter
js
in
icebp
adc
push
adc
aam
xor
int
mov
lea
pop
xor
pop
in
int
pop
dec
fmul
xchg
shl
pop
das
mov
or
div
xchg
mov
shr
and
out
xlat
push
es
pop
mov
test
and
imul
xchg
pop
data16
(bad)
lods
jnp
dec
jle
(bad)
div
lahf
add
imul
jmp
mov
jecxz
and
scas
and
dec
add
cs
es
mul
lods
sti
hlt
push
inc
pop
jnp
mov
ja
lea
popa
into
add
into
or
push
into
xchg
ss
pop
aad
push
mov
(bad)
popa
push
sti
inc
icebp
addr16
mov
std
xor
test
std
jl
mov
scas
inc
test
xor
scas
out
push
mov
fidivr
movs
out
push
imul
xor
sub
bound
enter
lods
rcl
mov
jb
das
pop
into
mov
ins
xchg
mov
pushf
cmps
xor
icebp
rol
ins
cli
and
mov
jae
data16
fnstsw
sahf
xchg
jo
aam
push
out
mov
cmp
xchg
ins
hlt
std
loopne
test
xor
outs
adc
repnz
dec
xchg
int3
jp
dec
arpl
pop
add
cli
repnz
mov
mov
leave
mov
lahf
mov
dec
lds
jbe
mov
aas
fidivr
fidivr
adc
pop
sbb
in
inc
cli
mov
or
jne
retf
pop
dec
mov
inc
pushf
dec
jle
out
inc
inc
ret
xchg
aas
xor
xchg
push
mov
cmc
in
(bad)
jae
scas
adc
icebp
xchg
(bad)
(bad)
gs
daa
test
mov
inc
or
shr
and
xchg
or
ss
or
xchg
outs
push
xor
sbb
sub
push
cmc
icebp
cmps
in
push
mov
push
je
test
mov
imul
data16
pop
inc
add
mov
iret
push
cmps
retf
jecxz
rcl
jle
cmovg
pop
movs
out
shl
scas
mov
sahf
pusha
push
jecxz
xlat
push
movs
add
fst
dec
sbb
daa
xor
and
mov
movs
shr
inc
mov
call
xchg
cld
and
xchg
push
test
mov
add
and
lea
mov
lea
ins
or
mov
sub
out
mov
jb
arpl
inc
sahf
sahf
int
clc
sbb
dec
mov
aam
mov
jmp
js
(bad)
pop
mov
jge
cmp
inc
add
mov
call
call
xor
push
xchg
push
xchg
outs
movs
pop
mov
stos
or
aas
bt
pop
and
ds
sub
dec
sub
mov
mov
int3
cwde
jns
in
in
jle
imul
adc
pop
jmp
jne
jo
fs
adc
jle
pop
cmps
shl
dec
jne
bound
into
sbb
xchg
jnp
xchg
add
pop
aad
push
push
dec
dec
or
add
mov
(bad)
pop
xchg
cmps
pop
inc
xchg
push
sar
cli
loop
aaa
iret
jne
adc
rcl
into
loopne
xchg
push
push
fs
call
and
push
leave
fist
jne
sub
xor
pop
xchg
mov
and
xchg
ret
push
shr
(bad)
pop
xchg
fiadd
scas
out
push
xor
jns
leave
add
dec
rol
mov
std
adc
push
into
mov
test
scas
sbb
les
and
ror
dec
push
aas
inc
call
xchg
in
xchg
jmp
cmp
pop
pop
data16
pusha
stc
or
int
mov
mov
ss
sub
mov
jo
movd
jne
outs
ins
sbb
mul
mov
mov
out
cmp
scas
arpl
xchg
(bad)
clc
leave
aam
data16
xchg
dec
and
add
aas
aas
pop
inc
jle
gs
jg
(bad)
pop
leave
into
sbb
sbb
jle
shl
outs
sub
mov
ds
fbstp
mov
xor
rcl
scas
push
mov
cmp
popf
inc
push
ds
inc
data16
inc
mov
(bad)
push
mov
cld
cdq
mov
fdivr
push
clc
aaa
fisttp
jge
mov
mov
inc
dec
gs
mov
xchg
cmp
les
loopne
(bad)
mov
stos
push
aas
clc
mov
jo
xchg
push
out
int3
jle
fidiv
push
push
sbb
jbe
imul
std
mov
icebp
ficomp
pop
xchg
into
movs
int3
fistp
push
push
mov
retf
sbb
retf
loope
dec
sub
jno
push
clc
adc
clc
nop
jbe
ins
jne
ds
cmp
sahf
fistp
add
hlt
ins
jnp
or
stos
outs
out
(bad)
movs
cmc
stos
stos
mov
mov
in
mov
scas
push
ins
outs
into
test
adc
cmp
ret
pop
inc
shl
cmp
sub
pop
es
mov
retf
gs
es
xchg
adc
out
xchg
fucomi
ss
out
sbb
or
fidiv
dec
xor
mov
sbb
lods
shl
mov
aad
pop
xor
in
out
xchg
and
les
sbb
outs
mov
rol
jo
pop
cmps
pop
xchg
and
(bad)
das
ins
(bad)
clc
pop
xor
or
pop
mov
jo
lock
pmaxsw
popa
dec
jmp
push
scas
idiv
sub
dec
sbb
icebp
inc
adc
lea
lahf
scas
js
mov
inc
jl
lahf
or
sahf
push
sbb
fimul
hlt
pop
dec
inc
inc
fdiv
mov
mov
xor
scas
daa
and
jmp
stos
pop
inc
(bad)
push
pushf
popf
mov
pop
jae
call
push
add
inc
and
cmp
mov
adc
and
hlt
xchg
fstp
and
cmp
pop
movs
pop
out
and
(bad)
scas
retf
std
sub
arpl
mov
mov
lea
and
push
pop
(bad)
xchg
data16
cmps
dec
sahf
jg
sub
push
push
in
push
jle
adc
dec
adc
mov
es
pop
xchg
iret
nop
enter
or
and
pop
(bad)
xchg
inc
in
pop
xchg
cli
sub
mov
sahf
xor
cmps
push
adc
outs
pop
lahf
int
data16
dec
mov
popf
push
mov
push
inc
and
pusha
xchg
or
sbb
push
inc
ficomp
ss
xor
inc
retf
ror
sub
arpl
popf
(bad)
cmp
std
hlt
inc
xor
mul
in
fsubrp
mov
out
div
imul
mov
es
call
xor
xchg
jle
pop
inc
ins
movs
cmp
push
setno
mov
(bad)
fstp
addr16
xchg
mov
sub
xchg
rol
gs
jne
leave
or
pop
mov
pop
pop
(bad)
inc
mov
adc
out
fadd
ror
std
test
(bad)
sub
dec
and
or
sahf
mov
dec
lods
fisttp
ror
jae
mul
push
out
jne
mov
jge
xchg
xchg
aam
mov
cmp
pop
or
inc
outs
pop
aaa
xchg
mov
(bad)
js
inc
cld
pop
neg
addr16
cmp
or
mov
fs
add
and
xchg
jge
mov
stos
add
jo
aad
sahf
jmp
dec
xor
and
dec
jne
cdq
dec
pop
push
and
idiv
and
sbb
daa
lock
xchg
sub
out
(bad)
int
sub
mov
pop
mov
nop
bound
pusha
ins
test
in
mov
push
push
outs
xor
push
hlt
mov
xchg
ss
int3
mov
and
push
sub
jnp
cmp
dec
cs
push
shl
loopne
xchg
popa
mov
sub
dec
neg
aad
(bad)
out
(bad)
push
xchg
call
push
or
push
jl
cwde
xchg
scas
hlt
dec
sub
out
cmp
mov
fs
fcomp
jae
mov
inc
(bad)
dec
bound
xchg
arpl
mov
sbb
movs
div
popa
xchg
inc
jmp
(bad)
ss
pop
xchg
aad
jno
repnz
sbb
push
xchg
sub
and
(bad)
fucomi
sub
mul
jmp
movs
mov
repnz
ret
push
and
rcl
out
mov
cmp
xor
xchg
mov
(bad)
xor
loope
pop
sahf
push
or
inc
jmp
inc
sub
fistp
jge
loopne
push
repnz
sbb
adc
int
inc
ja
jb
jo
mov
inc
or
repnz
inc
xchg
popf
(bad)
pop
pushf
into
mov
cmps
push
pop
dec
xchg
into
xor
(bad)
xchg
das
or
lea
scas
aaa
lahf
inc
lock
push
dec
or
mov
(bad)
aad
test
pop
push
xchg
mov
(bad)
fist
(bad)
push
jecxz
and
loope
jmp
mov
addr16
adc
fnstcw
and
fwait
outs
mov
idiv
scas
imul
inc
es
mov
cli
retf
pop
rcr
lods
popf
jae
mov
sub
daa
xor
stos
xchg
fbld
out
mov
lahf
stos
jbe
bound
pop
push
nop
mov
pop
cmp
inc
jmp
push
test
(bad)
pop
cs
loopne
bound
xchg
into
add
loopne
xchg
pop
jecxz
lds
pusha
jmp
outs
inc
(bad)
(bad)
and
xlat
jl
ret
push
pop
dec
fisttp
fs
outs
mov
imul
aad
and
adc
cmp
push
ins
pusha
(bad)
in
or
push
jae
sbb
pop
in
xchg
(bad)
fnstsw
jbe
sbb
ss
out
bound
test
pop
das
fwait
aas
fcom
ja
mov
faddp
xchg
or
add
out
xor
retf
ror
outs
(bad)
push
push
cmps
push
cmps
loope
iret
aad
daa
stos
mov
add
jne
call
shr
sbb
sbb
add
xchg
ret
mov
xchg
cmc
jbe
ffree
dec
xchg
dec
pop
std
jge
out
sti
dec
pushw
xchg
(bad)
xchg
and
stos
add
add
icebp
int
fld
out
xor
jl
lock
mov
dec
imul
sub
xlat
mul
jecxz
inc
into
out
retf
and
push
xchg
adc
mov
scas
or
push
(bad)
push
stos
mov
std
fnstcw
xchg
mov
xchg
out
lahf
ret
retf
push
cld
(bad)
mov
mov
sub
fild
enter
out
mov
mov
add
xchg
push
ret
dec
loopne
xchg
minps
sub
fcmovne
sub
xchg
out
sub
nop
stc
retf
xlat
xor
(bad)
hlt
cli
mov
popf
cld
retf
sahf
jl
dec
mov
pushf
scas
cmps
dec
xchg
call
pop
(bad)
sub
fiadd
fisub
out
jnp
pop
sub
ja
inc
push
mov
adc
aaa
and
xchg
mov
push
rcl
ds
ins
test
popa
push
push
xor
sbb
std
fld
bound
cmps
push
dec
xor
lea
xor
paddsw
pop
jl
fdivr
stos
push
mov
mov
xchg
mov
(bad)
push
ja
pop
movs
test
fwait
cmp
ja
adc
inc
sbb
cmps
and
adc
jmp
sahf
in
ficomp
dec
stos
cmp
push
mov
push
mov
and
jp
inc
lock
inc
add
ins
clc
test
xchg
ss
xor
sahf
(bad)
retf
push
cmp
sub
fwait
(bad)
sub
pop
gs
sbb
int3
sbb
sti
mov
push
into
pop
scas
hlt
adc
xchg
xor
pop
not
outs
mov
fiadd
out
inc
lea
cmp
outs
dec
mov
mov
pusha
pop
dec
adc
cmps
pop
pop
mov
add
jbe
es
scas
inc
test
neg
jbe
and
inc
popa
outs
mov
mov
jbe
adc
jmp
sub
cmps
push
sti
push
(bad)
sub
xchg
in
fld
jbe
push
mov
js
xchg
mov
sbb
xchg
mov
sahf
xchg
or
inc
into
test
cmp
push
inc
outs
nop
jnp
mov
cmp
not
xchg
push
xchg
ja
xchg
jmp
repz
sar
cmp
iret
mov
in
out
mov
iret
mov
sub
xor
inc
in
addr16
mov
mov
out
ins
sub
dec
shl
jmp
hlt
cmp
jno
bound
push
xchg
stos
pusha
mov
jmp
dec
inc
fldcw
cwde
mov
mov
add
int3
paddsw
xor
fwait
retf
dec
and
retf
push
cmps
ror
jge
inc
pop
push
mov
jg
xor
mov
in
nop
ficomp
mov
mov
sub
scas
adc
test
push
dec
pop
mov
jnp
xchg
sbb
rol
(bad)
cmc
lods
adc
fs
js
das
lds
retf
into
and
xchg
inc
ror
sub
cmps
cmp
xchg
nop
sbb
bound
idiv
jecxz
dec
dec
jo
pop
sub
into
mov
clc
repz
xor
push
sub
adc
test
mov
pop
lock
push
mov
movs
ret
mov
daa
out
jmp
push
inc
sbb
dec
jg
and
repz
stc
dec
mov
sbb
push
outs
cdq
push
fdiv
stos
pop
(bad)
lods
dec
cdq
jmp
push
int3
push
mov
adc
movs
adc
dec
dec
sahf
cmp
icebp
daa
mov
movs
imul
xlat
pop
call
jg
push
cmp
jne
imul
mov
out
xchg
outs
leave
js
out
jbe
aas
add
sub
push
(bad)
out
sub
cld
arpl
shr
frstor
adc
sahf
xor
scas
pop
mov
addr16
sar
mov
adc
or
in
and
fist
pusha
iret
(bad)
cmp
pop
mov
call
push
fldcw
mov
pop
push
outs
jo
call
(bad)
mov
sti
dec
in
jmp
sbb
and
imul
push
sbb
in
fild
xor
or
clc
add
inc
fdiv
rcr
pop
ret
arpl
fcomp
lock
xchg
pop
mul
mov
inc
in
mov
test
jo
loop
dec
xor
push
leave
int
movs
test
pushf
cmps
jne
push
cmp
xor
packuswb
inc
lock
(bad)
mov
icebp
(bad)
push
push
add
int
sub
xchg
inc
jmp
fbstp
add
jae
shl
adc
xlat
jl
mov
or
jp
test
cdq
ficom
ins
loop
sub
pop
xchg
pop
adc
jge
out
andnps
ficom
lods
ds
fimul
push
outs
add
cmp
dec
xor
loop
dec
sbb
push
cmp
lods
xchg
pop
sub
es
pop
out
jbe
push
icebp
push
or
xor
sbb
xchg
bound
push
push
adc
inc
daa
pop
lahf
pop
sub
out
dec
in
lock
daa
cmc
(bad)
sti
mov
xor
or
pop
imul
add
test
cmp
sbb
div
dec
jmp
addr16
mov
mov
jecxz
div
and
rcr
inc
xchg
cmp
dec
add
push
aaa
(bad)
jbe
ja
mov
push
icebp
outs
dec
and
frstor
imul
je
sbb
neg
mov
mov
in
dec
mov
repnz
loope
cmp
inc
cmp
ja
xchg
mul
fmul
cwde
retf
mov
fstp
or
or
dec
mov
mov
into
adc
and
pop
mov
mov
div
push
xor
call
inc
sahf
pop
(bad)
push
and
das
adc
leave
vmwrite
push
mov
mov
lods
pop
repnz
sub
push
pop
ss
sub
and
dec
jp
aaa
xchg
mul
dec
adc
add
lods
sub
cmovge
mov
aas
sbb
pop
mov
push
sbb
dec
out
hlt
mov
(bad)
mov
je
add
leave
xchg
outs
fisttp
call
dec
fimul
lods
in
jbe
(bad)
xor
loopne
lea
xor
cmp
arpl
idiv
push
fcomp
sub
daa
out
or
jns
iret
xchg
mov
dec
outs
pusha
jnp
outs
cmc
sbb
loopne
cwde
jecxz
push
sbb
push
xchg
loop
push
adc
fs
xchg
punpckhbw
inc
nop
mov
aad
or
xchg
div
loop
dec
mov
sbb
ror
int3
imul
push
add
aad
xchg
sub
push
cwde
mov
mov
div
out
push
dec
push
add
retf
neg
sbb
popf
lahf
inc
mov
out
stos
or
cmps
aas
jns
sbb
add
out
in
push
outs
jp
inc
aam
sub
push
lea
jge
div
cli
pop
test
xchg
dec
(bad)
sahf
das
add
mov
push
push
push
pop
movs
mov
pop
ror
mov
je
leave
push
dec
xor
pop
mov
cmp
adc
xor
hlt
shl
lds
pop
xor
cwde
fwait
jecxz
dec
xor
inc
pop
xchg
cmp
mov
sti
xor
clc
cmc
mov
dec
(bad)
pop
(bad)
outs
je
cs
and
or
pusha
mov
xchg
stc
enter
cmp
xor
je
je
jle
inc
jle
lods
inc
(bad)
mov
inc
adc
push
lea
adc
push
push
repnz
sub
inc
lea
stos
nop
fwait
mov
cmp
jno
das
xchg
dec
test
(bad)
outs
pop
mov
test
xchg
pop
fisttp
add
stos
ret
ret
mov
test
iret
cmc
loopne
xor
loope
adc
mov
mov
and
cs
(bad)
pusha
iret
push
outs
pop
mov
js
in
lock
cdq
xchg
ja
mov
gs
mov
xchg
(bad)
sub
dec
cld
xchg
bsr
out
mov
movs
call
mov
sbb
sub
shl
xchg
das
pushf
pop
inc
inc
jnp
sub
fldcw
sbb
movs
into
mov
sub
sti
(bad)
pop
aas
add
cmc
pop
test
mov
idiv
or
lock
sbb
jo
pop
aas
retf
bound
add
xchg
mov
push
mov
loop
dec
in
call
int3
cmp
movs
aad
out
gs
scas
sbb
xor
mov
sub
addr16
das
wbinvd
push
outs
pop
dec
(bad)
mov
mov
add
sub
jbe
push
or
mov
mov
aas
jge
inc
cmp
jge
imul
jecxz
movs
in
mov
mov
imul
jp
pop
xor
jbe
repnz
push
sbb
dec
sub
or
dec
shl
push
lods
and
and
sahf
es
and
mov
adc
arpl
(bad)
lods
dec
out
repnz
nop
jle
aas
xchg
(bad)
pop
push
int
movs
int3
mov
sbb
(bad)
pop
jmp
xor
ja
int3
cmp
dec
xchg
aas
je
xchg
enter
dec
xchg
inc
mov
mov
inc
icebp
fnsave
xor
mov
test
ins
or
push
ret
in
or
out
inc
cmps
mov
xchg
cmp
or
fldcw
pop
ficom
das
scas
push
leave
sub
or
inc
inc
int
inc
ds
lahf
inc
adc
(bad)
(bad)
pop
cwde
mov
and
or
mov
movs
adc
xlat
test
pop
fdivrp
push
lahf
jae
cdq
jno
mov
scas
cmp
xchg
iret
in
jbe
in
push
dec
inc
and
scas
inc
dec
addr16
rol
inc
xlat
mov
jne
neg
popa
and
mov
scas
mov
jbe
cs
adc
inc
push
cmp
pop
inc
and
fwait
cli
sbb
or
daa
push
daa
jmp
cmp
push
cwde
mov
jg
shl
push
add
(bad)
sahf
mov
or
mov
and
dec
arpl
cmp
lods
dec
cmc
dec
push
pop
mov
and
sbb
push
sti
add
or
mov
(bad)
enter
push
(bad)
jl
aas
clc
sub
aad
fst
jne
fsub
lods
out
fist
adc
hlt
out
push
xchg
push
pusha
iret
jne
dec
xchg
bound
cmps
mov
lahf
push
aam
call
xchg
jbe
in
add
xchg
ret
sbb
dec
ins
push
push
(bad)
lock
rol
cmps
mov
push
cmps
mov
pop
add
ja
pop
out
out
and
push
xchg
mov
add
pop
clc
stos
(bad)
movs
test
repz
mov
dec
mov
out
lahf
add
add
push
or
xchg
jp
mov
dec
cwde
mov
lahf
lock
xor
daa
xchg
aad
loope
shl
mov
les
xchg
add
mov
push
mov
int3
mov
xor
inc
xchg
arpl
js
pop
xor
xchg
add
pop
push
and
je
out
mov
and
aaa
xchg
mov
in
cmps
xchg
jg
rcl
ins
mov
ss
cmp
cwde
mov
xor
not
pop
pushf
jl
call
ds
movs
cs
or
sub
sbb
push
ret
add
mov
pop
popf
xchg
jle
rol
test
pop
fst
cmp
jp
lea
movs
inc
push
xor
and
pop
rcr
mov
mov
push
mov
inc
clc
adc
ss
gs
dec
(bad)
mov
cld
add
pop
(bad)
cmps
fwait
xchg
ds
sub
mov
mov
adc
jecxz
jnp
aaa
sbb
cmps
or
imul
sbb
dec
out
mov
xor
fdiv
loopne
jmp
jne
fsub
dec
test
in
aad
dec
fist
jnp
out
xchg
leave
xor
jo
fiadd
stos
and
retf
gs
mul
push
data16
(bad)
ror
lds
es
sahf
out
popf
out
cmp
movs
lods
bound
xchg
dec
fmul
cmc
aas
add
mov
push
mov
pop
aas
fadd
call
dec
push
fisubr
repnz
mov
mov
pop
jns
xor
and
lods
add
pop
mov
cmp
cmp
jns
pop
and
repz
mov
(bad)
mov
in
or
or
sbb
push
mov
imul
test
mov
fadd
mov
xchg
mov
fdivrp
xchg
int
mov
mov
fsubr
pop
xor
out
dec
lahf
push
(bad)
icebp
jnp
test
cs
or
ret
pop
rcl
ret
mov
add
pop
fwait
mov
add
mul
inc
mov
mov
fld
cwde
push
push
adc
out
pop
lahf
outs
ins
stos
movs
and
push
rol
aas
dec
push
imul
inc
mov
nop
into
mov
jnp
xchg
ja
cmps
xchg
and
mov
cmp
push
out
xchg
mov
push
cmp
cmps
cli
dec
adc
loope
mov
(bad)
ftst
addr16
xor
ja
sbb
sahf
cmp
mul
xchg
xchg
gs
(bad)
rcr
ins
das
mov
rol
into
loop
mov
mov
nop
(bad)
outs
cmp
sahf
movs
pop
mov
jp
iret
pop
push
out
fiadd
stos
push
mov
or
pusha
or
fsubr
ss
pop
lds
sbb
push
xchg
sbb
test
pusha
and
in
xor
push
lods
mov
sub
dec
jecxz
into
mov
mov
mov
dec
pop
bound
jg
push
adc
popa
pop
fisub
pusha
jns
push
rol
cs
das
cld
cmps
lods
adc
mov
leave
sbb
mov
sub
cs
adc
loope
out
fidiv
adc
dec
lock
gs
mov
jno
xor
sbb
ja
pop
mov
sbb
sub
sub
mov
nop
add
adc
aad
cmp
dec
fcmove
adc
xchg
call
jae
push
cmps
fs
inc
mov
mov
inc
adc
push
add
sbb
jbe
cmp
mov
cmp
lds
dec
outs
inc
and
mov
out
xor
pop
mov
push
cmps
push
and
jno
jbe
cmp
push
(bad)
ror
(bad)
push
les
mov
push
pop
js
out
arpl
add
fwait
movs
lahf
adc
fist
sub
jo
and
inc
lds
ror
popf
jmp
jne
call
cmps
(bad)
mov
push
pop
pop
(bad)
das
ret
into
push
xchg
nop
jl
and
dec
xchg
pop
lock
fcom
call
enter
or
cmp
jle
sbb
or
into
pop
dec
stos
mov
std
xchg
xor
gs
xchg
cld
(bad)
(bad)
repnz
in
jg
sahf
(bad)
sbb
out
jbe
out
jl
push
sahf
rol
sub
out
add
or
ja
out
and
fnstcw
sub
push
mov
mov
jbe
scas
cmps
dec
sub
test
and
ret
movs
or
xchg
push
jbe
aas
rcl
test
popa
dec
(bad)
pop
or
jge
mov
loope
loopne
xchg
lock
mov
xor
fmulp
mov
mov
inc
adc
ins
test
push
push
retf
nop
sub
mov
bound
es
sub
mov
pop
jle
out
dec
loopne
ffreep
cdq
jg
pop
cwde
xor
pushf
cmovno
(bad)
mov
sub
pop
or
imul
cmp
push
mov
and
loopne
ss
aaa
mov
js
scas
push
and
jmp
pop
sub
inc
push
imul
data16
cli
push
xor
sahf
mov
sbb
sar
inc
or
scas
aaa
std
push
sahf
outs
shr
or
scas
ss
cmc
retf
loop
clc
mov
rcr
mov
jne
out
add
ins
or
lods
pop
lea
sti
idiv
mov
retf
jo
sahf
(bad)
les
je
cmps
pop
jg
mov
mov
lods
cmp
push
out
ss
fwait
mov
in
ins
and
out
out
lds
in
js
retf
mov
pusha
cs
inc
mov
xor
sub
into
dec
or
div
xchg
mov
dec
dec
mov
push
test
xchg
push
sub
inc
xchg
sub
sbb
fbstp
bound
adc
xchg
jmp
push
pop
push
push
or
movntps
jle
je
scas
imul
imul
pop
arpl
sub
pop
rcr
jne
(bad)
fidiv
out
mov
sub
jecxz
scas
cmp
inc
ds
ins
fucom
aas
cli
mov
dec
imul
ss
pop
pop
mov
inc
stos
(bad)
je
faddp
lock
fwait
rcl
cmps
lods
ror
fstp
push
sub
pop
into
dec
jnp
loope
ja
xchg
es
dec
mov
push
jno
movs
sbb
ds
(bad)
fadd
call
(bad)
sti
dec
sub
ficomp
scas
sbb
dec
daa
ins
(bad)
clc
mov
adc
imul
test
xor
(bad)
push
adc
ror
(bad)
jge
mov
in
and
mov
cs
(bad)
add
xchg
cmp
cwde
dec
push
cmp
mov
mov
jge
(bad)
fmul
pop
cmp
cwde
lea
mov
cs
cmp
stos
sub
push
retf
sbb
movs
enter
outs
daa
xchg
push
push
out
ins
popf
outs
jns
pop
outs
aad
adc
movs
mov
popf
dec
lock
push
rcr
jmp
test
push
mov
call
test
cmp
sbb
push
test
das
or
int3
int
movs
mov
stos
inc
xor
push
in
pusha
cmp
cmps
or
scas
mov
(bad)
(bad)
mov
mov
out
pop
mov
loope
inc
lock
data16
(bad)
sahf
sub
sbb
je
sub
pop
xor
jae
pop
pop
ror
addr16
lahf
and
xchg
sbb
cmc
mov
or
mov
push
(bad)
shl
pop
(bad)
cmp
push
xchg
push
rcl
pop
cmps
aam
std
jo
xchg
mov
mov
fcomp
sub
push
sar
cs
dec
out
cmp
(bad)
cs
xchg
dec
adc
fidiv
sbb
push
in
cld
or
fcomp
out
dec
inc
pushf
sbb
xor
ss
add
lahf
pop
iret
ret
push
or
and
sub
data16
cmp
lods
and
jp
and
test
(bad)
fnstcw
push
out
ffree
mov
mov
mov
xchg
retf
push
scas
(bad)
(bad)
and
popf
retf
sub
push
push
sub
cmp
dec
movs
mov
add
jns
mov
cmp
mov
ret
mov
ret
mul
pop
mov
out
test
out
int3
and
movs
nop
retf
jbe
js
imul
aam
out
add
jo
mov
mov
pop
mov
sbb
xchg
lahf
pop
test
jmp
dec
dec
push
mov
fwait
xor
push
xlat
or
lods
stos
jo
cmp
(bad)
das
mov
and
xor
fsubr
cs
cmp
inc
sbb
call
mov
mov
adc
and
sti
or
dec
(bad)
pop
js
fcomp
je
(bad)
adc
cmp
mov
ds
mov
ret
in
out
ss
xor
inc
inc
out
push
mov
jecxz
into
mov
push
scas
mov
adc
xchg
cs
(bad)
push
inc
pop
sbb
jo
xchg
inc
or
out
jg
fdiv
pop
inc
cmp
mov
es
mov
adc
mov
push
add
add
jbe
ret
scas
ficom
inc
outs
or
add
xchg
and
lea
add
mov
xor
pop
mov
nop
test
sub
out
mov
leave
dec
jne
cmps
ficomp
inc
push
xchg
or
repnz
push
sbb
int3
hlt
aas
fstp
lods
xchg
jmp
fst
outs
mov
add
xor
xor
push
xor
xchg
dec
mov
adc
push
mov
xor
push
popf
jle
push
hlt
out
sbb
cld
jb
test
mov
pop
sti
inc
fisttp
xlat
scas
sbb
rsqrtps
mov
(bad)
lahf
inc
cwde
arpl
sbb
jne
push
push
aaa
aad
int3
imul
push
aaa
(bad)
ins
aad
pop
pop
pusha
fld
xchg
in
xlat
call
or
xor
fcomp
sub
cli
add
lds
push
les
push
sbb
jmp
mov
in
xlat
dec
xchg
sti
imul
div
imul
and
cmp
data16
xchg
or
mov
mov
mov
popa
aad
and
mov
iret
scas
stos
xor
rcr
lods
les
test
loope
mov
outs
sahf
mov
int3
mov
cs
cld
jo
push
hlt
outs
cs
ins
pop
and
pop
dec
retf
mov
sub
push
repz
sbb
mov
pop
(bad)
out
stos
push
pop
sbb
sbb
ret
cmps
push
daa
inc
or
cli
or
sbb
dec
(bad)
and
out
loop
cmp
mov
mov
clc
pop
pop
sub
and
inc
das
into
push
cs
outs
data16
or
les
dec
sbb
gs
(bad)
push
pop
in
(bad)
pusha
inc
sub
mov
or
movs
jge
dec
dec
jne
cwde
jmp
daa
es
sub
lahf
outs
sub
jle
sbb
cmp
pop
jle
loop
inc
mov
sub
out
in
popa
into
scas
lahf
mov
cmp
ja
ins
movs
xchg
or
fcom
mov
adc
arpl
ins
pop
push
les
lahf
mov
jmp
hlt
mov
mov
jo
jnp
pop
xlat
movs
shl
mov
test
mov
rcr
fist
cmp
nop
adc
outs
or
and
xchg
out
xchg
outs
lds
(bad)
push
dec
cvtps2pd
inc
loopne
clc
or
cwde
jo
daa
(bad)
jno
gs
sub
push
ds
bound
fmul
fmulp
cli
push
jmp
mul
(bad)
or
adc
cmps
leave
pop
dec
sub
add
ss
fistp
push
call
in
int3
cwde
call
jl
mov
sar
sbb
into
mov
clc
add
cld
sbb
adc
das
addr16
sahf
retf
jmp
popf
scas
jle
fisub
pop
repnz
xor
mov
sub
imul
fnsave
inc
shl
repnz
inc
pop
nop
pusha
in
jne
ret
pop
sub
push
(bad)
jbe
shr
jle
add
jbe
test
pop
es
inc
push
push
sbb
inc
data16
pop
push
(bad)
sahf
xor
xchg
jne
(bad)
cmp
jo
pop
push
mov
aaa
push
lds
or
dec
int
jbe
test
add
popa
mov
xchg
cmps
scas
xor
out
test
mov
jle
js
mov
(bad)
stos
mov
dec
jno
xor
daa
dec
test
inc
int
(bad)
cmps
out
adc
call
dec
inc
cmp
aas
or
(bad)
mov
lds
frstor
dec
out
outs
or
sbb
dec
outs
outs
xchg
push
ror
ja
imul
mov
(bad)
push
adc
(bad)
outs
ja
icebp
push
add
adc
mov
pop
and
push
sub
leave
fucomi
fld
dec
pop
les
xchg
add
xchg
addr16
adc
mov
jbe
sbb
fimul
inc
mov
push
aas
bound
leave
jge
loopne
xchg
push
pop
enter
pop
fst
xor
js
enter
gs
jne
xchg
cmps
cmp
call
ret
add
xlat
push
ja
inc
iret
add
data16
xor
call
das
mov
adc
(bad)
sti
dec
aaa
adc
dec
addr16
sbb
addr16
(bad)
ja
inc
rcl
cs
pop
lods
sbb
out
fisttp
adc
dec
cmp
(bad)
cli
cmps
dec
cmp
popa
aam
ret
add
call
add
push
jae
pop
mov
ins
inc
and
cmps
aas
xor
and
jmp
xchg
xchg
outs
dec
out
rdmsr
fidiv
xchg
stc
push
fild
out
jmp
sbb
stc
test
dec
adc
mov
es
(bad)
cmc
cs
or
push
or
mov
dec
or
pop
push
sbb
jle
push
scas
dec
call
inc
xchg
sbb
pusha
retf
jo
and
dec
push
sbb
ds
dec
shr
int
dec
lea
jo
int3
clc
sahf
repnz
sub
shr
xor
lea
pop
shl
iret
mov
test
mov
in
xor
jno
cli
iret
mov
adc
adc
cs
push
(bad)
shl
out
outs
push
and
retf
pop
dec
pop
push
jns
inc
jb
call
(bad)
pusha
xchg
cmp
ins
jns
dec
inc
icebp
cmp
pusha
fsub
mov
mov
pop
mov
in
rcl
shr
scas
jecxz
mov
add
adc
gs
push
sub
mov
movs
mov
or
xchg
call
iret
fnsave
es
dec
adc
mov
neg
out
and
pop
cdq
adc
sti
push
pusha
xchg
mov
push
or
inc
and
cwd
cwde
stos
sub
cmp
fild
or
into
xchg
sub
xor
jo
push
das
fst
scas
ret
fiadd
sbb
mov
hlt
cmps
outs
sbb
cmps
ds
rol
popf
aam
xchg
inc
pmaxsw
outs
leave
out
xchg
sub
ficom
add
popa
fbstp
lods
in
addr16
stc
es
and
dec
scas
les
jg
xchg
sbb
or
pminsw
mov
aaa
les
popa
into
into
sbb
mov
ds
lahf
lock
mov
pop
inc
xchg
pop
push
sub
(bad)
mov
je
cmp
aas
pop
xor
push
scas
loopne
cmp
or
mov
lock
(bad)
adc
jle
pop
xchg
dec
inc
and
cs
or
aaa
inc
shl
leave
(bad)
icebp
inc
pusha
mov
push
dec
lds
push
sti
dec
out
mov
cmps
jb
into
(bad)
sub
fdiv
mov
dec
add
mov
iret
pusha
shl
data16
retf
jmp
sbb
out
out
push
sti
push
arpl
pop
lods
pusha
cmps
dec
call
push
adc
mul
loop
std
fs
ret
iret
fcomp
adc
into
xchg
(bad)
das
ins
dec
lds
fist
ds
pop
adc
jns
jno
adc
xchg
lods
outs
pop
jmp
int3
repnz
lock
fnsave
ins
xchg
jmp
test
out
(bad)
cmps
inc
adc
aaa
pusha
mov
sti
push
push
adc
cmps
or
push
popa
cs
into
pop
outs
cmps
cli
cmp
mov
sbb
(bad)
mov
fnsave
mov
mov
or
xchg
aas
imul
sbb
cs
or
push
adc
gs
and
leave
jl
lods
pop
jo
loopne
retf
(bad)
pop
jo
cwde
mov
inc
dec
pushf
lods
inc
pushf
push
in
jle
dec
aas
ror
dec
iret
(bad)
sbb
fisttp
and
cmps
pop
push
jo
mov
int3
sub
retf
sbb
ds
adc
push
xchg
fidiv
sti
cmps
xlat
data16
in
sti
dec
add
test
jecxz
(bad)
ficom
xor
loopne
mov
xor
(bad)
jne
int
stos
or
je
adc
(bad)
movs
fnstcw
out
pop
es
jnp
push
in
(bad)
mov
push
add
clc
add
pop
call
test
jg
sub
adc
mov
sbb
retf
call
test
jo
ins
ret
retf
fsubp
sub
jp
enter
fmul
fst
inc
fisttp
test
iret
outs
dec
out
fcmovnb
mov
test
out
jb
inc
test
mov
(bad)
xchg
bound
jnp
dec
push
stos
dec
inc
xchg
and
xchg
adc
push
mov
(bad)
mov
cmps
outs
je
mov
call
outs
add
pop
enter
outs
ins
pop
cmp
out
lods
sub
addr16
out
mov
mov
iret
add
ja
jg
(bad)
cmp
xchg
and
and
rol
movhps
(bad)
sub
sub
lds
in
sbb
pop
cwde
ins
(bad)
cmp
pop
xchg
mov
pop
test
push
lahf
xchg
jge
(bad)
mov
(bad)
loopne
push
leave
lea
outs
jne
scas
jne
cmp
add
cs
test
push
test
in
inc
sub
cdq
sub
(bad)
ficomp
mov
mov
neg
gs
mov
push
sahf
push
stos
cld
(bad)
fs
adc
test
xchg
ins
aad
mov
xchg
push
mov
mov
fsubp
into
or
pushf
idiv
jmp
ja
sub
div
xchg
jp
call
and
cmp
adc
xchg
mov
dec
aam
es
xchg
fsub
es
lds
(bad)
push
daa
mov
mov
mov
or
and
xlat
out
inc
mov
mov
push
mov
cli
cs
jb
stc
adc
push
int
mov
(bad)
adc
int3
inc
lods
push
lods
push
mov
or
adc
das
xor
mov
enter
xor
mov
bound
sub
jg
push
cmps
and
pop
add
mov
les
ss
pop
loopne
into
cld
les
ret
inc
fwait
lds
dec
add
popa
jge
pushf
mov
fwait
scas
pop
std
push
outs
adc
sub
cmp
mov
cmp
inc
add
cmp
adc
inc
fsub
retf
out
repnz
je
scas
out
push
movhps
cmp
(bad)
popf
lds
cmp
sbb
hlt
out
int
mov
sar
cmp
pop
mov
outs
xchg
push
mov
cli
and
and
imul
add
sbb
mov
dec
pop
fsub
or
cmps
sub
sub
ud0
retf
jge
pop
div
mov
cld
(bad)
dec
inc
xor
loop
mov
jae
nop
mov
ret
mov
jbe
push
int
outs
inc
xchg
(bad)
stos
xchg
rcr
aam
cmps
mov
pop
and
cmp
sbb
ret
fstp
adc
fisttp
and
cli
je
push
test
loop
je
fcomi
cli
sahf
mov
outs
in
out
(bad)
cmps
push
jp
shl
(bad)
and
push
(bad)
adc
xchg
fisub
and
imul
push
fldcw
lods
out
ins
imul
jl
mov
xchg
cwde
test
sahf
inc
ret
or
loope
sbb
lea
xchg
mov
inc
xor
ja
pop
stc
mov
call
out
iret
xchg
and
fild
pop
add
in
clc
mov
or
push
cld
xor
pop
xchg
jecxz
les
adc
jg
clc
mov
jmp
cmps
cmp
and
adc
scas
mov
ins
sub
(bad)
push
mov
test
and
out
inc
add
mov
fidiv
sbb
push
pusha
push
ins
jmp
push
jg
cmps
stos
loope
mov
jle
add
ja
pop
imul
mov
add
ret
push
jle
cmp
pop
lock
pop
lds
push
or
pop
jle
push
out
or
pop
adc
mov
data16
fnsave
sub
stos
sub
xchg
cmc
out
inc
fsub
inc
shl
mov
or
push
push
push
pusha
sahf
ins
(bad)
dec
inc
aaa
cmp
push
not
mov
call
xor
out
popa
in
imul
mov
cmp
test
pop
xchg
ja
pop
xlat
ja
icebp
stos
and
adc
ja
add
out
add
call
out
mov
mov
shr
dec
or
fbstp
icebp
pop
stos
push
push
data16
dec
mov
and
mov
dec
mov
mov
idiv
mov
movs
retf
push
cmp
jb
cwde
and
sbb
and
jne
push
fimul
nop
test
add
xor
xchg
jo
in
imul
xchg
ficom
fild
dec
xor
clc
dec
push
mov
imul
sar
mov
lods
cmp
leave
cdq
lahf
imul
aam
adc
xchg
mov
mov
mov
cdq
test
leave
in
int3
(bad)
jecxz
nop
fnstcw
outs
cmc
jle
push
je
jp
mov
push
fnstsw
or
xor
add
xchg
inc
sub
cmps
jg
jmp
repnz
scas
jnp
enter
movs
outs
xchg
sbb
or
push
push
(bad)
mov
loope
jnp
sbb
je
(bad)
dec
inc
sbb
jmp
outs
push
dec
leave
mov
xchg
push
into
pop
mov
mov
cdq
test
data16
dec
ss
das
fdivrp
pop
pop
daa
(bad)
sub
ret
out
sbb
fstp
inc
mov
ja
rol
push
pushf
inc
push
pop
adc
test
cmc
(bad)
mov
sbb
je
and
xor
sub
mov
push
or
add
int3
mov
mov
jmp
pop
add
sbb
ja
bound
das
in
popf
retf
xchg
xchg
dec
cmc
dec
ficom
cmps
je
scas
imul
inc
push
dec
push
xor
jne
cmp
retf
mov
(bad)
xchg
cmp
addr16
fldenv
add
cmp
into
push
outs
push
push
jbe
enter
hlt
jne
dec
fnsave
fnsave
fcom
or
movs
cmps
sub
stos
mov
pushf
push
out
push
lahf
stc
das
xlat
and
daa
out
shl
ins
lea
xor
cmps
bound
xchg
mov
scas
loopne
cs
sub
loope
cmp
jg
inc
cmc
nop
xor
push
mov
pop
mov
jl
push
dec
inc
repz
mov
(bad)
mov
cmp
xchg
sbb
test
adc
scas
push
js
ins
sbb
dec
ss
lea
adc
pop
dec
addr16
(bad)
pop
cli
cs
clc
xchg
rcr
sub
scas
mov
push
xor
(bad)
sub
fdivr
xchg
pop
shl
push
jge
or
mov
inc
movs
mov
jne
cmps
cmp
add
mov
loop
nop
fidiv
aaa
retf
add
xchg
cmp
retf
xchg
cmp
aas
neg
cmps
or
and
and
adc
push
aas
push
rol
push
popf
scas
add
xchg
movups
iret
int
jnp
mov
jne
and
dec
or
jae
int3
xor
pop
repnz
push
test
push
shl
mov
lock
rol
idiv
mov
xchg
push
or
mov
inc
test
movs
sub
cmp
enter
(bad)
jbe
ret
xchg
cs
jle
adc
idiv
push
ja
aaa
jo
mov
xchg
adc
jle
sbb
dec
pop
ret
cmps
sbb
movs
enter
mov
je
mov
sub
in
and
ss
out
inc
cmps
ins
sub
jl
and
xor
pushf
or
into
test
jl
movs
(bad)
mov
cmps
das
and
js
out
mov
icebp
sub
aaa
sub
sub
je
mov
imul
mov
sahf
inc
nop
ret
push
jmp
imul
dec
in
mov
mov
mov
add
ds
mov
push
shl
sub
and
jbe
aam
aas
push
iret
jle
data16
repnz
imul
pop
lahf
dec
stc
mov
sub
xlat
mov
push
std
or
fsub
into
pop
push
movs
sahf
jmp
and
jno
ins
stc
pop
jnp
test
dec
mov
push
int
rcl
xchg
dec
es
lock
sub
retf
xor
mov
aas
imul
inc
sahf
mov
test
loopne
stos
movs
cmps
in
(bad)
aaa
xchg
fcomp
fwait
xchg
sbb
mov
lods
outs
inc
ds
jae
or
inc
mov
xor
push
imul
inc
js
out
dec
pusha
pop
and
inc
cmps
movs
gs
out
sub
lods
pushf
sar
aaa
ja
aam
loop
jno
cmps
lock
(bad)
and
cmps
jo
dec
test
sahf
(bad)
outs
jne
jp
scas
sar
mov
pop
stc
jns
mov
push
nop
out
(bad)
iret
adc
icebp
stc
cmp
or
xlat
xchg
adc
repnz
pop
je
stos
ja
xor
jle
push
call
push
jo
push
and
popf
add
pop
pop
inc
mov
or
xchg
or
push
sbb
jae
out
gs
dec
ss
das
das
in
jl
test
adc
std
ins
jne
cli
iret
(bad)
bound
stos
leave
cwde
or
mov
sbb
js
dec
add
xchg
mov
mov
ds
sbb
jge
xor
jmp
cs
mov
mov
adc
repz
sub
int
mov
and
les
cwde
adc
repz
fmulp
push
test
in
not
ja
dec
int3
jg
xor
xor
add
pop
stos
lods
dec
out
lods
inc
lahf
xchg
jne
xchg
fcom
(bad)
cmp
push
push
push
fsubr
pop
fst
dec
inc
sub
add
or
ds
iret
jae
(bad)
fcomp
pusha
fadd
mov
(bad)
push
pop
es
jmp
pushf
(bad)
daa
mov
cmp
fisub
mov
dec
mov
or
retf
cld
loope
cmp
jo
rol
nop
push
mov
ret
aaa
inc
(bad)
aas
fiadd
pop
adc
out
test
jbe
mov
pop
adc
fld
ror
and
push
jbe
es
push
out
inc
dec
mov
imul
pop
push
movs
dec
repz
scas
verr
inc
sahf
mov
mov
mov
movs
shr
lock
inc
jnp
mov
int3
sbb
sahf
stos
mov
popf
cmp
pop
mov
daa
pop
test
cmps
cmp
sbb
test
aas
push
jb
sub
ss
xchg
adc
(bad)
dec
mov
mov
cld
mov
push
mov
adc
jle
cwde
sbb
out
xor
add
pop
sbb
(bad)
enter
lea
fstp
ret
dec
sub
lea
outs
pop
mov
xchg
fs
ins
mov
mov
in
sahf
xchg
(bad)
(bad)
add
push
jl
sub
ss
push
retf
jp
pop
cwde
ret
mov
aam
xchg
push
mov
add
and
and
lea
xchg
pop
fcomp
xor
mov
mov
inc
push
sbb
and
dec
outs
push
shl
cmp
daa
inc
add
arpl
pop
push
xor
frstpm(287
xchg
test
lock
fiadd
dec
sar
pusha
retf
mov
push
add
and
adc
pop
ss
xchg
hlt
lds
pop
inc
loope
lods
call
and
ss
push
shl
fsubr
push
ret
(bad)
push
adc
adc
mov
ss
icebp
ja
mov
pop
push
ds
push
inc
jo
and
push
jns
pop
or
mov
hlt
mul
pop
mov
data16
xchg
push
lods
fadd
push
add
push
add
(bad)
cmp
jae
ins
xchg
iret
daa
cmps
(bad)
adc
and
mov
(bad)
inc
push
enter
out
xchg
out
jbe
in
and
pop
popa
das
test
push
pop
js
pusha
adc
je
cmps
push
push
mov
jg
into
ds
std
call
div
inc
jnp
cmps
or
jg
jae
outs
inc
inc
fdivr
jnp
jbe
adc
arpl
in
push
pusha
addr16
inc
(bad)
sti
fdiv
sub
nop
test
and
inc
cmp
leave
jle
sti
cmps
or
sbb
mov
xchg
lahf
pop
(bad)
jbe
cli
or
ins
cli
mov
in
pop
in
add
daa
cmp
xor
pop
dec
inc
sbb
xor
ss
lahf
dec
or
jb
push
or
add
(bad)
jge
dec
sar
push
dec
out
adc
push
bound
ja
xor
leave
add
cs
test
shl
jbe
aad
(bad)
sti
ja
dec
fs
push
or
pop
add
mov
mov
cmps
gs
pusha
je
sub
(bad)
mov
jne
sbb
rcl
dec
test
cmp
xchg
adc
(bad)
hlt
pop
out
jl
(bad)
jbe
(bad)
sub
leave
je
adc
sbb
cmps
dec
loopne
cdq
aas
mov
xchg
gs
test
ret
inc
fisubr
xor
xor
push
popf
cmp
je
lahf
in
int3
ds
inc
sub
into
retf
jp
lds
ficomp
mov
cdq
pop
xchg
jle
jae
lock
and
mov
out
add
jns
xlat
dec
ret
dec
xlat
rcr
js
(bad)
fwait
(bad)
jne
pop
out
sahf
and
fwait
scas
xchg
jbe
sti
xchg
fld
sbb
mov
push
cmp
pop
mov
pop
xchg
xchg
hlt
dec
movs
cmps
cmp
ret
and
fcomip
ds
or
aad
and
out
mov
mov
outs
test
mov
daa
mov
cwde
add
push
cmps
mov
jge
hlt
pop
pop
pushf
cmp
xor
cdq
dec
mov
(bad)
pop
rcl
push
fimul
aam
div
das
lods
outs
adc
lods
mov
cmps
push
xor
and
fwait
stc
daa
mov
push
out
pop
sub
and
sahf
sbb
cmp
lahf
dec
and
xchg
jne
adc
retf
mov
es
or
or
data16
mov
or
mov
or
xchg
pop
mov
leave
loop
fdivr
(bad)
div
imul
stos
add
es
enter
push
mov
into
pop
rcl
dec
add
loopne
in
neg
cmp
in
pushf
sub
lods
mov
loopne
shr
push
jle
pop
lds
or
repnz
mov
xlat
push
dec
inc
adc
fs
inc
jg
push
dec
inc
mov
stos
retf
mov
jg
cwde
jp
pop
and
mov
pop
mov
fcom
jle
mov
pop
xchg
xchg
(bad)
fimul
mov
sub
(bad)
je
imul
ins
sbb
bound
fistp
jb
xchg
inc
adc
sbb
pop
xchg
push
cld
pop
pushf
mov
cld
pop
cmp
out
mov
adc
jo
aaa
pushf
sahf
pop
mov
idiv
pop
sbb
jns
sbb
push
movs
dec
in
xchg
or
sbb
gs
enter
mov
mov
mov
sahf
dec
pop
mov
push
push
push
xchg
xor
add
xor
retf
pop
or
out
lds
scas
scas
mov
dec
mov
push
js
inc
out
xchg
sub
ret
test
sbb
or
mov
mov
imul
add
xchg
sbb
push
(bad)
lahf
imul
cvtps2pi
leave
(bad)
xchg
pop
cwde
mov
ficom
stos
xlat
jmp
arpl
les
xchg
push
inc
out
iret
in
add
sahf
scas
add
xchg
enter
bound
into
mov
or
imul
xor
pop
(bad)
jno
jg
lds
addr16
test
fisttp
add
adc
cmp
xchg
inc
jmp
out
inc
mov
cld
lea
call
scas
ror
pop
xchg
jle
pop
out
sahf
push
rol
or
cmp
data16
in
fstp
imul
out
(bad)
or
pop
add
jb
push
into
(bad)
mov
lods
xchg
imul
pop
mov
jmp
xchg
ds
stc
or
cli
mov
cdq
cmps
pusha
pop
cmp
jno
js
mov
in
ins
jg
mov
mov
into
jmp
js
repnz
aas
icebp
cmp
push
in
(bad)
jmp
inc
jbe
cs
sbb
cmps
pop
jecxz
in
dec
add
push
popf
daa
cmp
and
cmc
das
int
jecxz
test
ret
shl
std
add
sahf
pop
(bad)
add
fwait
je
pop
retf
repz
jbe
stos
push
sbb
cwde
xlat
mov
xor
sar
int
xchg
idiv
mov
in
or
cmc
js
xchg
ds
movs
sub
mov
in
out
mov
mov
mov
sbb
inc
cli
push
cmp
fiadd
into
lods
ds
dec
cmp
push
push
aas
(bad)
clc
aas
dec
inc
repz
pop
or
or
dec
sub
mov
(bad)
ds
in
std
aam
adc
jnp
daa
or
dec
lock
aam
aaa
scas
inc
rol
pop
sbb
push
and
int
xchg
cmps
popf
xchg
xchg
(bad)
jle
pop
jg
fst
adc
in
int3
lds
scas
dec
sahf
fnstsw
fdiv
(bad)
outs
sbb
sub
lock
xchg
cmps
dec
icebp
cmp
and
daa
aad
(bad)
mov
jmp
mov
jle
ins
into
dec
int
loope
mov
push
out
pushf
jp
and
dec
or
in
or
std
int3
push
nop
xlat
pop
imul
add
mov
fisttp
test
int3
dec
pop
cmps
in
xor
imul
(bad)
test
bound
jne
pop
xor
in
lods
push
inc
ins
or
pop
mov
shl
cmp
test
or
jne
mov
inc
dec
push
jle
outs
push
mov
into
imul
ins
ins
dec
sub
pop
lahf
jle
(bad)
std
setnp
push
ds
outs
xacquire
pop
mov
dec
mov
pushf
or
fidiv
dec
inc
(bad)
aaa
popf
hlt
fcomp
popa
idiv
xlat
xchg
ins
xchg
xchg
pop
fwait
push
rcl
(bad)
std
fcomp
dec
sahf
mov
sbb
xchg
push
cmp
mov
movs
(bad)
sbb
fs
inc
fcomp
into
mov
add
pushf
xchg
cmp
mov
push
cmova
add
push
ss
iret
shl
imul
das
add
cmp
loopne
push
jbe
xlat
pushf
cs
sbb
loopne
mov
retf
inc
and
xchg
xchg
cmp
mov
adc
clc
push
jne
push
inc
cmps
push
or
mov
push
pop
jg
(bad)
pop
out
rcl
test
out
pop
inc
mov
push
data16
ss
push
fsubr
pop
push
push
(bad)
xchg
push
iret
(bad)
sti
pusha
pusha
and
aam
pop
stos
out
cdq
stos
into
shl
ins
or
push
arpl
lods
out
pop
mov
lahf
mov
(bad)
sbb
es
pop
in
push
out
cs
rcr
mov
into
ds
sbb
das
leave
std
cmp
inc
xchg
dec
(bad)
cmp
xor
jbe
ja
inc
dec
pop
inc
dec
addps
push
sahf
sbb
dec
out
(bad)
sbb
adc
imul
xchg
and
jle
sub
fdivp
test
sub
sbb
and
inc
or
and
scas
mov
pushf
ja
jge
jnp
cmps
jge
movs
dec
in
xor
jg
and
cld
(bad)
mov
sub
aas
out
loopne
test
inc
dec
push
mov
popa
mov
mov
rcl
xchg
(bad)
xlat
lahf
dec
pop
dec
mov
inc
std
xor
push
call
cld
out
int
aam
fs
popf
add
std
cmps
inc
(bad)
adc
cmc
(bad)
pop
(bad)
cmp
push
enter
int3
js
push
mov
pop
int3
shr
jo
sbb
outs
add
inc
jmp
sbb
jecxz
js
mov
dec
sub
fisub
dec
mov
jge
add
inc
xchg
out
push
in
dec
imul
(bad)
(bad)
push
mov
out
dec
sbb
pop
pop
into
or
and
push
xor
jne
es
ja
dec
mov
popa
sbb
push
adc
cmp
add
xor
cwde
push
sbb
inc
mov
xor
je
mov
add
xchg
sub
sub
les
cmps
inc
jle
and
mov
vmovaps
adc
pop
aad
fsub
sbb
push
(bad)
fdiv
mov
std
jl
ss
jmp
sbb
cs
mov
scas
dec
cmp
scas
test
out
shl
jae
ss
lods
shl
mov
mov
pop
cmp
jbe
les
cmp
mov
push
jg
adc
cwde
xchg
add
aaa
popa
(bad)
mov
shl
test
lahf
fnsave
in
dec
push
inc
into
push
inc
mov
xchg
or
mov
add
sbb
lods
xchg
pop
call
sub
cmp
data16
(bad)
adc
(bad)
scas
inc
stc
lea
(bad)
outs
inc
mov
push
jle
sub
pop
cmps
in
adc
lods
fdivr
jno
push
lods
push
(bad)
lock
sub
out
xchg
(bad)
add
push
outs
fldcw
cmc
daa
inc
dec
mov
aas
in
pop
ins
sbb
jmp
mov
mov
pop
xchg
push
gs
sti
xor
outs
dec
test
in
aaa
popf
popf
movs
aas
jge
int3
retf
add
push
jmp
add
lock
inc
push
cs
imul
push
je
call
aaa
out
pop
lods
inc
sub
fs
(bad)
iret
outs
pop
bnd
(bad)
mov
fimul
mov
sub
nop
outs
xor
ja
(bad)
jp
mov
call
sti
out
test
lahf
sbb
outs
fs
sbb
inc
ds
xor
aad
mov
or
sbb
jmp
push
jge
xor
push
enter
mov
jbe
sbb
daa
jl
sub
sahf
je
jp
push
mov
in
mov
cmc
sbb
push
shl
ds
or
int
or
and
mov
xchg
std
inc
je
add
aas
ins
and
jge
jge
push
push
ficomp
or
fisttp
push
sbb
fs
out
pop
(bad)
loopne
rcr
(bad)
sbb
or
sahf
jl
dec
call
jnp
je
test
jae
add
mov
cmp
imul
ror
xchg
inc
push
mov
ja
mov
outs
or
ins
je
sbb
push
jp
xor
fist
sub
mov
pop
int
shl
fs
xor
call
push
cmps
and
jns
pop
cmp
(bad)
scas
out
mov
add
xchg
cmp
into
mov
push
or
add
jmp
and
icebp
cmps
movs
stos
shr
pop
out
test
add
mov
jbe
shr
test
jb
jg
adc
mov
inc
push
fdiv
out
jnp
push
addr16
pmaxub
mov
imul
jno
mov
sar
push
sbb
inc
std
mov
or
or
out
cli
into
sbb
fld
pop
ja
push
fiadd
push
fsubr
int3
xchg
stos
dec
push
clc
sub
lods
repz
cmp
scas
je
test
lock
mov
xchg
(bad)
std
mov
push
xchg
outs
cmps
inc
inc
push
adc
mov
mov
scas
pop
inc
imul
xchg
sub
sub
add
pop
mov
xchg
(bad)
js
test
pop
xchg
jne
adc
or
out
jle
sbb
push
sbb
and
cs
adc
pushf
(bad)
xchg
or
pushf
mov
mov
(bad)
push
std
imul
mov
int
scas
push
popa
sbb
mov
cli
sbb
sbb
sub
xlat
sbb
mov
fldcw
sbb
cmp
mov
xchg
mov
fistp
mov
mov
adc
push
call
(bad)
out
fsub
outs
ins
inc
sub
mov
xor
jg
push
fsub
int3
sub
xchg
jp
cmc
stos
add
push
imul
popa
fidivr
add
es
aad
xchg
mov
rcr
push
dec
mov
in
inc
push
(bad)
cmps
add
aam
and
fdivrp
mov
das
cwde
adc
cmp
retf
test
dec
movs
lock
adc
jle
pusha
cli
mov
cmps
out
rcr
mov
pop
inc
out
scas
jecxz
jl
popa
sub
test
ficomp
or
out
push
inc
aad
pop
cmp
inc
iret
xor
dec
push
xchg
mov
cs
xchg
ss
neg
(bad)
call
std
pop
shl
or
(bad)
aas
cmp
xchg
pop
mov
stos
and
xchg
adc
jge
ins
fldenv
push
inc
xchg
out
imul
mov
push
inc
enter
push
xor
push
inc
add
sbb
jmp
out
sub
and
add
inc
popf
jb
pop
mov
sub
fs
(bad)
scas
push
xchg
test
scas
cmc
jo
dec
xchg
jge
dec
cmp
(bad)
cld
call
sub
mov
or
adc
dec
pop
jmp
std
hlt
mov
and
mov
test
leave
dec
stos
mov
jnp
lea
out
into
push
adc
test
lds
jl
or
(bad)
or
jl
retf
and
sub
pop
sbb
aaa
in
xchg
xor
(bad)
jg
std
mov
es
imul
pusha
pop
into
es
xchg
mov
out
and
push
mov
ja
ss
push
scas
xchg
add
hlt
or
(bad)
aam
mov
call
xchg
mov
psllw
lds
xchg
int3
fcom
in
push
ins
(bad)
scas
inc
call
inc
frstor
push
push
retf
jge
sahf
ins
xchg
jnp
(bad)
push
retf
cs
adc
ja
fnstcw
(bad)
ss
dec
stos
cmp
mov
push
sbb
dec
data16
cdq
lods
sar
adc
lods
fisttp
sub
add
sbb
jmp
push
outs
shld
pop
push
repnz
stos
(bad)
cwde
sbb
aas
(bad)
or
pop
in
outs
pusha
not
add
mov
clc
push
jns
pop
mov
fdivr
hlt
pop
test
les
cmp
dec
test
jle
pop
retf
pusha
daa
inc
push
mov
idiv
mov
retf
fs
xor
xchg
xchg
dec
adc
xor
pop
inc
iret
inc
popf
stos
int
out
aaa
enter
sar
in
(bad)
imul
icebp
fdiv
ret
in
push
inc
push
sub
sti
inc
pop
ja
pop
mov
ror
outs
(bad)
cmp
push
daa
cmp
mov
sbb
out
sahf
mov
mov
jmp
stos
add
adc
das
cmp
pop
dec
push
jl
mov
addr16
inc
out
xor
sbb
mov
test
jl
popa
xlat
inc
outs
pop
push
push
xor
imul
xchg
scas
push
mov
sub
(bad)
pushf
loope
inc
mov
shl
xchg
out
dec
xchg
scas
int3
cmp
loopne
dec
jo
stc
jae
sbb
and
and
add
push
icebp
dec
xor
xor
xor
mov
loop
xor
dec
popa
add
xor
pusha
push
fnsave
cmp
stos
push
inc
js
jbe
retf
std
push
int3
sbb
retf
push
ret
lods
jnp
adc
aad
lahf
(bad)
sti
xchg
test
push
mov
sahf
inc
in
pusha
clc
shl
pop
mov
pop
mov
fidivr
mov
or
movs
fwait
push
mov
xor
test
push
pop
daa
loope
cs
mov
jmp
lods
inc
or
into
cmps
fiadd
into
call
ror
adc
iret
dec
les
xchg
aas
out
fmul
xchg
xchg
jg
test
sub
daa
sar
ds
cmp
ss
sbb
mov
xchg
sti
xchg
cmps
(bad)
outs
call
sbb
les
fstp
jle
xchg
outs
xchg
jg
dec
shl
adc
shl
lods
call
adc
sar
adc
mov
mov
pop
sub
cmp
push
cmp
std
inc
jl
inc
mov
ds
dec
mov
jne
push
add
(bad)
imul
out
pop
(bad)
sbb
dec
mov
mov
xor
data16
xchg
cdq
push
sub
stos
ror
ja
(bad)
outs
or
pop
not
or
daa
or
push
lock
in
xlat
inc
(bad)
jecxz
jbe
loop
mov
sbb
mul
and
mov
popa
jmp
out
jge
shr
inc
inc
mov
cmp
mov
push
push
sub
fisub
jbe
loopne
mov
ds
hlt
into
pop
mov
inc
call
outs
xor
retf
inc
sbb
or
xchg
scas
in
call
adc
or
adc
out
dec
fistp
movs
rcl
out
jae
cwde
fbstp
in
imul
ficom
push
push
or
(bad)
xor
add
inc
inc
and
gs
sub
fdiv
lds
mov
shl
cwde
mov
mov
mov
stos
and
jl
sti
jne
sub
cmps
out
inc
push
stos
out
gs
xor
cmp
push
stos
fucomp
mov
(bad)
or
and
test
repz
fdivr
inc
daa
dec
push
and
cmp
out
push
xchg
mov
sub
xor
int
mov
lahf
sahf
shr
mov
sub
sbb
dec
in
sub
addr16
pop
mov
jecxz
xchg
into
and
push
sbb
iret
scas
xchg
lods
pop
mov
mov
or
es
push
mov
repnz
mov
inc
addr16
lock
cmps
jo
mov
aaa
jp
jle
jbe
in
sahf
out
or
adc
ds
lods
into
outs
sub
retfw
mov
or
outs
jle
cmp
xor
mov
inc
mov
sub
cmp
addr16
mov
sahf
cmps
daa
mov
daa
nop
push
ja
js
mov
sbb
or
pop
or
push
rcl
xchg
mov
sub
(bad)
rcl
loop
popa
leave
(bad)
cmps
ror
push
fnstenv
mov
inc
xchg
ins
mov
pop
out
and
mov
push
test
inc
dec
adc
xlat
(bad)
scas
jge
push
rol
and
push
test
shr
lea
jne
add
push
cld
mov
fsub
xor
sub
push
jp
ja
data16
into
arpl
loope
push
add
(bad)
lods
pusha
fld
dec
repz
mov
test
pop
lahf
es
fwait
and
push
ror
jmp
(bad)
push
pop
fnstsw
mov
popa
shr
inc
cld
outs
ja
mov
mov
adc
call
inc
stos
mov
xchg
dec
int
push
stos
stos
and
dec
push
lock
clc
xchg
xor
mov
add
sbb
mov
mov
data16
adc
lds
data16
out
mov
xchg
fbstp
ins
mov
ficomp
push
push
out
inc
jo
inc
jl
and
call
rcl
movntps
fdivp
pop
xor
or
push
mov
pop
rol
jnp
jp
addr16
imul
stos
push
cmc
cmps
inc
push
jbe
dec
iret
les
(bad)
push
jne
xor
std
loop
div
outs
mov
dec
pop
mov
inc
and
mov
scas
jle
or
cs
xor
addr16
jo
xchg
retf
inc
sti
pop
adc
dec
xchg
hlt
dec
mov
mov
aaa
bound
gs
mov
push
cmp
mov
ss
clc
lds
ins
pop
mov
inc
push
into
mov
adc
out
mov
xchg
sub
in
sbb
data16
xchg
outs
ret
ret
and
jmp
mov
ror
inc
(bad)
int
lock
sbb
jo
(bad)
or
dec
aaa
data16
lods
mov
pop
(bad)
outs
jmp
and
sbb
shl
pop
inc
cs
or
call
inc
into
sbb
dec
jns
ss
in
jae
cmps
(bad)
sub
(bad)
mov
jl
pusha
call
dec
mov
adc
aam
out
repnz
stos
and
icebp
adc
mov
pop
mov
mov
xor
fcom
dec
jp
sub
jne
jb
jecxz
jno
call
sar
pop
xor
or
arpl
mov
sub
ja
ds
push
jo
outs
xchg
es
shld
dec
aas
xchg
dec
push
fsubr
jno
movs
inc
cmp
mov
inc
stos
push
imul
pop
add
and
xor
cs
push
out
sbb
(bad)
mov
loop
neg
cmps
dec
fcmovb
ret
mov
dec
outs
and
pop
inc
mov
ins
shr
dec
or
xchg
(bad)
jnp
cmp
fwait
push
mov
psubb
test
xor
ins
mov
dec
arpl
push
inc
cmps
leave
xchg
leave
aaa
sahf
xor
dec
into
test
test
(bad)
scas
out
add
sbb
std
inc
(bad)
retf
and
cli
or
cwde
dec
cmp
mov
jae
jbe
js
xchg
cmp
inc
cli
xor
leave
lahf
or
test
(bad)
sub
int
dec
ds
div
stos
test
ss
inc
fimul
loop
xlat
and
idiv
pop
pop
cdq
xchg
pusha
sub
aas
xchg
xchg
ja
mov
jl
and
repnz
mov
test
mov
xchg
out
cmp
push
addr16
xchg
cmp
push
push
xchg
xacquire
pop
sbb
mov
mov
lds
xchg
(bad)
push
push
sahf
in
mov
mov
push
mov
push
outs
inc
sub
jb
and
js
jo
mov
lods
int3
cmp
adc
and
out
push
ret
mov
js
outs
mov
cdq
xchg
sbb
js
inc
mov
or
into
xor
popf
add
aaa
outs
addr16
xor
cmp
sbb
dec
icebp
fdivr
(bad)
outs
int
out
movs
xchg
mov
inc
div
xlat
mov
inc
fsubr
inc
ss
sub
dec
mov
inc
dec
hlt
imul
xchg
cs
xor
sti
xchg
in
data16
js
imul
dec
repz
and
imul
movs
(bad)
sub
call
inc
mov
or
daa
fwait
push
cmp
ins
mov
ror
cmps
add
bound
jb
cld
in
call
push
xchg
out
jmp
sbb
mov
call
fadd
scas
push
cmps
adc
into
jno
adc
outs
data16
jecxz
mov
sub
(bad)
ss
xbegin
(bad)
inc
sbb
xchg
jno
pop
stos
ror
xor
ja
test
addr16
dec
jmp
mov
xchg
in
adc
fbld
mov
stos
(bad)
mul
icebp
aam
mov
test
into
leave
rol
cmps
sub
ret
push
lahf
arpl
js
xchg
mov
lods
pop
into
stc
sti
push
mov
test
pushf
cmp
and
cs
mov
sbb
cmp
test
adc
jbe
sbb
push
xchg
push
enter
xchg
sbb
ins
mov
mov
pop
mov
cdq
call
dec
ds
cmp
mov
outs
mov
and
(bad)
cmps
pop
out
jb
repz
mov
ds
into
(bad)
call
push
mov
dec
retf
in
rcl
and
out
xor
ret
cmp
push
push
jecxz
cli
mov
inc
sub
cmps
cmp
pop
jle
fnsave
xor
ss
scas
nop
sub
xor
loopne
fsub
jae
inc
stos
push
push
loop
popa
sbb
cmc
test
inc
(bad)
xchg
inc
pop
outs
std
pop
jo
or
pop
vmread
mov
lods
cs
stos
les
ja
and
adc
or
aad
outs
dec
xchg
gs
xor
mov
pop
mov
je
mov
push
cmps
xor
dec
xchg
lods
shr
mov
bndstx
loopne
dec
and
cli
imul
cmp
mov
cs
mov
dec
xor
sbb
adc
scas
xchg
adc
into
sub
cwde
cmps
retf
mov
pusha
or
scas
add
out
ins
push
dec
popa
mov
pop
pop
rol
add
je
je
loope
bound
or
xlat
pop
push
dec
aas
cmp
add
adc
push
push
retf
rol
sbb
xor
in
pop
inc
jbe
cld
ffreep
lock
leave
test
or
adc
dec
lock
and
in
sub
(bad)
jb
push
movs
cmp
jp
mov
xchg
pop
jmp
cmc
fsub
ins
lds
(bad)
int3
mov
cwde
xchg
mov
ss
jmp
rol
ret
mov
imul
mov
xor
xchg
xchg
daa
jbe
jne
movs
aad
push
cmps
cli
mov
out
sbb
cmp
in
pop
(bad)
daa
int3
mov
jnp
leave
movs
cmp
lea
leave
fnstsw
es
inc
(bad)
sbb
mov
inc
out
push
add
jmp
sbb
or
mov
mov
jnp
cmps
fld
fwait
lahf
daa
popf
jne
loopne
cmc
push
iret
mov
mov
lods
or
push
(bad)
cmps
cs
mov
or
push
rcr
outs
push
cmc
and
arpl
icebp
push
mov
loop
jmp
repnz
(bad)
adc
fisubr
mov
sbb
push
nop
scas
(bad)
fild
cmc
stos
movs
leave
xchg
cmps
fnsetpm(287
int
fstp
sub
push
test
xchg
cs
mov
pop
push
xor
bound
push
mov
xchg
sbb
sub
lods
out
push
sbb
xchg
jo
movs
idiv
scas
popf
cwde
cmp
jmp
and
dec
loop
(bad)
mov
outs
push
cld
push
call
mov
push
daa
cs
adc
ret
fisub
dec
sbb
out
push
(bad)
jae
jmp
cs
gs
cmp
pop
aam
(bad)
add
sub
pop
sbb
hlt
mov
and
mov
push
jle
popa
gs
xchg
pop
cmp
inc
mul
aas
test
stos
fwait
dec
psubd
mov
pushf
mov
inc
adc
push
sub
inc
fidivr
aad
retf
mov
pop
mov
sbb
mov
imul
loopne
pop
push
adc
jnp
mov
ins
pop
leave
rcl
adc
lods
lods
add
and
les
push
outs
or
popf
jp
cmp
mov
mov
xchg
lock
xchg
push
ret
enter
(bad)
retf
ja
(bad)
push
ficomp
lfs
fwait
cs
ficom
mov
fistp
mov
stc
mov
out
push
adc
js
movs
or
or
inc
inc
mov
loopne
or
inc
packuswb
dec
and
xchg
dec
push
pop
ror
push
outs
es
mov
mov
add
iret
neg
ins
cmp
das
mov
sbb
push
cmp
mov
enterw
sbb
push
mov
adc
or
push
mov
daa
pop
dec
test
cmp
sahf
icebp
dec
inc
cmp
jno
bound
pusha
pop
pop
retf
sahf
fwait
sbb
(bad)
not
inc
and
mov
out
call
scas
mov
xchg
sub
ins
ja
les
jbe
mov
movs
les
mov
fcmovne
aas
cdq
aas
inc
sub
out
(bad)
sbb
sahf
xlat
jecxz
xor
ss
or
sar
call
dec
test
je
push
pop
cli
push
and
mov
(bad)
int3
adc
dec
mov
scas
mov
das
add
(bad)
rol
ds
(bad)
retf
inc
out
xor
push
ror
out
cmps
sub
pop
outs
dec
iret
pop
pop
and
retf
pop
xchg
add
(bad)
into
inc
das
dec
test
popf
jb
loop
pop
inc
dec
jle
xlat
mov
das
scas
sub
and
add
sbb
test
hlt
mov
push
jo
pop
je
out
xlat
lods
jg
(bad)
cli
adc
out
imul
in
xchg
adc
(bad)
out
ds
add
into
xchg
xchg
inc
inc
dec
daa
and
out
(bad)
cli
add
mov
outs
test
mov
inc
loopne
push
(bad)
mov
cs
fidivr
shl
ss
es
(bad)
in
xlat
psubb
inc
cmp
test
push
pop
pop
in
aam
das
test
pop
mov
dec
xchg
mov
and
push
xchg
out
test
sbb
cmps
xchg
jmp
(bad)
fs
mov
jae
imul
mov
dec
pop
push
xor
add
scas
fucomip
daa
xor
shr
inc
dec
push
daa
add
bound
shl
pop
cmp
mov
inc
push
add
jbe
add
pusha
pop
into
or
mov
call
inc
mov
pop
inc
xchg
add
imul
dec
push
sti
mov
cmp
aas
mov
call
rol
adc
or
inc
inc
push
int3
lea
jecxz
sbb
jo
add
mov
mov
or
rcr
and
ins
add
int
xchg
outs
push
dec
fist
xchg
push
loop
into
mov
(bad)
dec
into
xchg
xor
cmps
jmp
adc
movs
mov
xchg
in
movs
pop
inc
jl
dec
aas
mov
ror
push
ds
or
jbe
call
mov
pop
into
fidivr
cmps
sub
outs
jno
jne
rcr
data16
push
das
pop
scas
into
push
mov
dec
outs
je
mov
cmp
aad
jmp
out
out
dec
or
mov
inc
add
pmulhuw
in
stos
outs
or
(bad)
(bad)
cmps
mov
scas
in
outs
jb
call
mov
outs
ret
jne
sbb
out
push
dec
dec
dec
xlat
das
push
mov
pop
(bad)
out
out
jg
push
mov
ret
cmp
cmp
hlt
mov
sub
inc
sar
cmp
out
repz
ror
cld
int
sti
sbb
sbb
neg
retf
jo
out
mov
push
sbb
enter
das
aam
daa
out
push
dec
inc
je
pop
test
or
pop
pop
pop
popf
lods
lds
adc
xchg
cmp
stc
fiadd
sbb
cmp
mov
pushf
je
imul
cli
push
in
test
adc
push
rcr
mov
ins
push
mov
add
enter
sbb
xchg
std
(bad)
xor
js
inc
adc
jle
sahf
pop
cld
jno
loop
pop
outs
je
xchg
mov
add
jo
and
dec
inc
sub
mov
int3
addr16
sti
leave
addr16
sti
and
mov
sub
(bad)
sub
mov
xor
mov
jmp
lods
out
and
jno
(bad)
fbld
in
push
mov
dec
retf
stos
in
mov
sahf
lods
lds
lock
inc
cmp
sbb
test
dec
cmc
dec
or
dec
outs
pop
fld
lea
sbb
lea
cmp
adc
push
pop
es
ins
int3
sub
ss
retf
xchg
lods
dec
ror
xor
pop
test
mov
xchg
mov
aad
vpcmpeqw
and
shl
loop
mov
std
mov
loop
mov
cmps
cmp
js
mov
stos
dec
or
std
fld
je
add
push
pop
not
or
jp
xchg
push
aam
(bad)
pop
hlt
push
fcomp
dec
xchg
jno
jbe
data16
test
mov
add
mov
pop
ss
add
test
enter
call
ds
dec
out
mov
cmp
sub
inc
pusha
cmc
and
xor
jl
fistp
imul
jg
ja
jecxz
pop
push
out
std
retf
mov
push
std
repnz
into
pop
inc
cmps
push
ds
inc
xchg
adc
pop
push
sub
jmp
cmc
popa
xor
in
outs
je
sahf
add
mov
or
sub
or
add
pop
mov
pop
cs
push
push
(bad)
xor
inc
das
jo
pop
mov
sbb
jnp
sbb
fs
in
dec
or
pop
inc
hlt
jg
xchg
cs
cmps
pop
mov
stc
(bad)
(bad)
(bad)
movs
adc
push
nop
outs
lods
cli
and
xchg
(bad)
in
pop
retf
xor
adc
ror
adc
xchg
(bad)
(bad)
es
jmp
pusha
daa
retf
add
inc
shl
dec
mov
mov
or
ins
(bad)
dec
xor
mov
(bad)
pop
in
push
inc
test
out
dec
mov
retf
xchg
or
pop
popf
dec
imul
cmp
sbb
pop
les
(bad)
fs
dec
mov
sahf
outs
repz
or
push
imul
cmp
jge
es
adc
lahf
fimul
and
xchg
xchg
pop
test
cs
pop
pop
cmp
loop
sbb
sbb
fdivr
and
xchg
add
hlt
popf
dec
adc
and
mov
test
das
jg
movs
or
xor
pop
xlat
ins
mov
mov
mov
push
or
dec
push
aas
movs
movs
stc
aam
and
addr16
arpl
xor
xor
stc
scas
pop
lock
add
pop
into
inc
cmp
dec
or
jg
aas
or
jae
or
imul
(bad)
sbb
push
outs
mov
pusha
stos
xchg
xchg
push
out
sub
not
fistp
jae
scas
fisubr
mov
add
push
inc
retf
in
pushf
xor
xor
sahf
jl
dec
adc
mov
ror
cmp
and
adc
xlat
rep
daa
inc
es
pop
cs
scas
push
xchg
sub
cld
xchg
(bad)
in
scas
add
jg
xchg
aam
stos
push
sahf
movs
popf
xchg
data16
test
js
sub
out
shl
(bad)
cld
pop
jecxz
mov
push
pop
addr16
lea
(bad)
mov
sbb
cdq
sahf
leave
dec
or
cs
rep
enter
je
shr
xchg
stos
aam
dec
ss
gs
call
cs
outs
inc
cwde
xchg
call
(bad)
jnp
retf
or
mov
popf
dec
clc
pop
lea
gs
jbe
pop
jecxz
cmp
sbb
xchg
lds
mov
stos
or
push
fiadd
xor
push
jo
adc
push
pop
sub
(bad)
push
mov
xor
cs
inc
xchg
or
xor
add
push
fadd
movs
aaa
inc
and
ins
jmp
iret
cmp
dec
inc
jmp
ja
push
jl
xchg
(bad)
sbb
ds
xchg
pop
stc
hlt
mov
cmps
sub
adc
test
es
popa
xchg
mov
cmp
ror
xchg
shl
lods
xor
pop
jne
(bad)
fnstsw
mov
dec
iret
mul
daa
fbstp
out
out
pop
mov
dec
mov
js
repz
mov
xchg
or
or
sub
test
mov
push
(bad)
cmp
mov
fdiv
sub
sbb
push
fidivr
adc
fs
push
xor
adc
sbb
inc
dec
(bad)
pop
arpl
adc
ss
shl
ds
mov
and
push
jmp
pop
pop
xchg
mov
xchg
and
ret
or
inc
jbe
and
jbe
ficomp
mov
aad
add
dec
dec
stos
inc
pop
out
pop
sub
cwde
or
pop
hlt
push
clc
push
pop
(bad)
push
and
in
(bad)
out
pop
adc
mov
shl
xlat
cmc
push
imul
mov
and
sbb
pop
sahf
test
jne
xchg
ds
daa
(bad)
adc
in
fwait
dec
outs
ror
push
stos
mov
outs
or
icebp
hlt
leave
inc
dec
aaa
fisub
ins
pop
sahf
adc
imul
je
jmp
pop
cmp
test
sbb
cmps
pop
cmps
add
iret
ins
movs
add
cmps
cli
jge
lods
sub
jle
cmp
out
pop
shr
mov
out
repz
or
fcom
pusha
imul
hlt
fs
ja
mov
xor
xchg
rcr
push
mov
mov
daa
push
xchg
mov
jno
das
cmp
pop
push
cmps
je
mov
aas
mov
jns
dec
je
call
pop
and
fmul
sti
push
sbb
cmp
leave
xchg
jmp
into
loopne
cs
data16
xchg
cmp
or
test
jg
mov
lods
fild
xlat
inc
ja
inc
fstp
inc
fsubp
das
mov
xor
pop
push
outs
pop
mov
cmp
jae
jle
push
mov
scas
lahf
mov
pop
lods
mov
fwait
mov
outs
in
clc
mov
mov
or
sub
outs
(bad)
ss
(bad)
push
scas
lea
pop
sub
aam
cmp
xchg
sub
gs
dec
sub
pop
ror
cmps
fs
fistp
(bad)
in
aas
jecxz
jle
cmp
cwde
jp
push
mov
mov
xor
mov
xchg
or
inc
data16
xlat
fs
mov
cs
punpcklbw
xchg
pop
adc
mov
and
cmps
out
xchg
inc
(bad)
mov
dec
inc
ret
(bad)
scas
icebp
lea
out
mov
out
push
jb
outs
mov
jmp
jb
push
pop
jnp
je
popa
call
jbe
js
xchg
add
fiadd
(bad)
(bad)
jp
inc
aad
out
into
xor
add
mov
sub
(bad)
ret
fist
loopne
repz
fmul
xor
add
out
sahf
lahf
jmp
retf
adc
div
xor
cmp
sahf
lods
neg
outs
pop
add
push
sbb
into
idiv
mov
push
dec
ss
push
inc
push
retf
pusha
or
push
stc
jnp
out
fbld
push
jno
stc
mov
jmp
or
test
adc
outs
adc
xchg
retf
stos
pop
es
out
(bad)
and
cld
(bad)
fst
cmps
xchg
push
clc
call
dec
rcr
daa
or
push
xchg
and
sbb
adc
inc
xchg
sbb
ins
call
xchg
sub
lock
fsubrp
stc
push
lahf
jle
pusha
mov
cmp
mov
xchg
out
fnstcw
sub
dec
ss
cdq
test
stos
in
inc
fs
mov
sbb
movs
mov
stos
inc
stos
ja
and
add
(bad)
xor
in
int
sub
cmp
pop
push
nop
dec
repz
push
es
mov
out
inc
jmp
sti
stc
xor
aaa
pop
loope
repnz
fwait
and
jmp
fdivr
icebp
push
jmp
fild
mov
dec
dec
xchg
popf
mov
out
movs
ret
mov
pop
mov
mov
pop
std
les
xor
xor
mov
data16
neg
lods
mov
clc
fwait
jge
jbe
movs
shl
xchg
rcr
add
dec
fwait
rcl
loope
mov
mov
inc
test
inc
inc
es
out
dec
pushf
scas
or
dec
stos
shl
dec
clc
and
mov
(bad)
fdiv
mul
dec
dec
sahf
sub
in
popf
dec
gs
dec
sbb
mov
or
cmp
ins
pop
inc
outs
mov
adc
data16
xor
fnstenv
xchg
dec
(bad)
pop
mov
cmp
popa
popf
das
inc
addr16
pop
(bad)
sub
dec
push
or
fidivr
jg
or
xor
aas
sbb
cs
push
out
xor
scas
rcr
in
arpl
mov
aas
xor
scas
mov
and
mov
(bad)
(bad)
dec
mov
je
or
cli
nop
jo
lahf
xchg
or
xchg
inc
mov
fwait
hlt
fstp
nop
pop
xchg
jmp
jl
mov
idiv
or
mov
les
or
jns
aad
inc
add
push
mov
mov
push
nop
xor
out
sub
bsr
cmp
push
sahf
mov
mov
fld
cmp
dec
mov
push
aaa
shl
push
rol
stos
int3
mov
mov
cmp
repz
sub
mov
mov
mov
in
call
stc
mov
bound
mov
daa
adc
(bad)
imul
jg
jmp
outs
arpl
xchg
shr
mov
inc
mov
xchg
(bad)
nop
xor
mov
inc
push
mov
fwait
ja
bound
pop
mov
mov
dec
cs
sub
arpl
dec
inc
cmps
cmc
push
dec
xchg
pop
xchg
push
movs
adc
xchg
inc
xchg
inc
and
inc
xchg
aas
movs
or
push
xor
adc
pushf
aaa
movs
jp
dec
into
int3
adc
and
retf
cmp
cmp
pop
add
xchg
ss
jp
test
pop
neg
cs
xchg
jmp
out
jbe
fistp
sbb
stos
jl
cwde
(bad)
mov
shl
inc
pop
mov
jle
(bad)
jno
nop
iret
sub
inc
lods
add
pusha
ret
dec
dec
pop
and
lods
lahf
rcr
shl
ror
mov
scas
int3
lahf
in
sahf
(bad)
jmp
push
fist
call
int3
pop
js
ss
test
mov
ficomp
mov
pusha
in
and
stos
jecxz
(bad)
mov
push
add
lahf
pop
xchg
dec
out
arpl
jge
fcom
pushf
pushf
js
jbe
in
fld
xchg
lahf
fstp
les
fisubr
jb
add
mov
scas
xchg
xchg
test
(bad)
mov
cmp
xchg
nop
sahf
mov
into
mov
out
aas
stos
dec
dec
scas
mov
retf
scas
cmc
(bad)
aas
aas
adc
sub
cmp
out
cs
(bad)
xchg
or
fldenv
fild
fidivr
sbb
adc
rcr
xor
outs
test
outs
push
push
xchg
das
test
mov
xor
inc
adc
push
push
repz
push
(bad)
mov
(bad)
and
into
fidivr
sahf
pop
int3
sub
int3
add
ror
mov
sub
mov
fiadd
and
addr16
pop
lea
push
sahf
sub
dec
daa
imul
rol
(bad)
mov
lods
(bad)
ss
add
jge
add
mov
cmp
jle
pop
(bad)
adc
pusha
int3
fbstp
test
ss
and
mov
push
(bad)
jne
daa
pop
lds
cwde
adc
sub
fwait
out
int
shl
xchg
imul
inc
jle
cwde
adc
sbb
adc
mov
out
aaa
xchg
cmp
test
stos
add
mov
popf
inc
mov
(bad)
test
cmps
or
jmp
imul
sub
pop
dec
scas
inc
pop
test
mov
push
sub
dec
pop
cmps
in
lods
push
ffree
push
push
hlt
fisub
dec
stos
ret
mov
xchg
stos
loope
cmps
sbb
rcl
sahf
pop
add
sahf
arpl
jge
sbb
push
cmps
push
pop
mov
test
sbb
cmps
movs
(bad)
mov
pop
push
outs
inc
adc
(bad)
cmps
cwde
cmp
cs
xor
inc
aaa
jmp
mov
je
and
(bad)
mov
cwde
jnp
fmulp
(bad)
in
pop
inc
in
adc
cwde
(bad)
inc
je
fmul
inc
(bad)
out
sbb
xor
ins
pop
stos
mov
and
sbb
lods
dec
push
mov
push
cmp
mov
repz
bound
adc
jb
add
adc
adc
dec
add
sub
or
gs
mov
xchg
xor
ins
push
fwait
sbb
cmps
pop
test
mov
das
call
adc
fisttp
retf
call
dec
retf
xchg
push
adc
pop
or
jne
pop
jle
fnstsw
call
cmps
(bad)
movs
inc
sbb
call
sub
das
ins
mov
add
outs
iret
mov
inc
ss
int
loope
scas
rcr
push
ret
ds
retf
repz
out
mov
push
ins
pop
inc
ins
(bad)
mov
mov
sub
es
rcr
test
adc
push
jge
cmp
cs
call
imul
int3
(bad)
enter
in
lods
(bad)
adc
out
test
(bad)
pop
aas
push
mov
and
(bad)
xor
push
add
push
pop
fisttp
push
push
stos
fmul
repz
mov
rcl
repnz
sub
call
mov
adc
popa
loop
and
add
(bad)
jle
mov
pusha
push
mov
subps
inc
mov
cmp
push
(bad)
mov
(bad)
cmp
push
add
ss
imul
add
movs
lahf
cmps
dec
fsubr
retf
scas
mov
mov
and
pop
or
arpl
es
das
push
jno
mov
loop
je
iret
mov
add
or
mov
bound
int
pop
push
pusha
call
add
fldcw
push
pop
cmps
les
jmp
cmc
pop
mov
mov
mov
xlat
cmp
popa
sub
pop
and
imul
jle
pop
mov
push
sbb
mov
push
pop
mov
movs
rcr
mov
push
ret
jl
es
fiadd
mov
mov
sbb
pop
ins
and
or
mov
push
add
shl
fmul
fmul
mov
(bad)
mov
aad
rcr
lahf
test
faddp
pop
mov
addr16
mov
outs
loop
imul
mov
lods
test
fwait
mov
gs
dec
xchg
pop
push
scas
clc
push
or
xchg
xchg
inc
sahf
push
mov
pop
push
cs
jl
arpl
hlt
(bad)
and
xchg
outs
sub
pop
jae
idiv
push
dec
jg
stc
(bad)
jmp
daa
add
aaa
ja
js
cld
sub
data16
dec
jb
cli
enter
ficomp
adc
cmp
mov
mov
adc
retf
pushf
mov
loop
repz
mov
push
and
stos
cmp
jp
push
pop
lahf
aad
out
into
mov
ficomp
mov
cdq
adc
mov
cmps
je
cs
(bad)
(bad)
sbb
push
jle
fidiv
mov
aaa
(bad)
push
out
stos
mov
push
push
push
add
dec
ret
cmp
push
add
test
mov
and
mov
clc
ficomp
push
test
iret
jmp
sub
or
mov
inc
xor
es
mov
les
js
imul
in
icebp
jb
xor
jecxz
hlt
push
retf
iret
aam
jmp
cmp
pop
push
test
sahf
fidivr
push
sub
sub
outs
cwde
leave
out
pop
sahf
test
rcl
outs
inc
jo
iret
xchg
inc
pop
ss
hlt
push
pop
(bad)
or
sub
lea
push
cmps
sub
popa
sub
inc
and
mov
outs
and
and
push
dec
scas
popa
out
das
xchg
push
(bad)
mov
pop
xchg
add
pop
mov
mov
daa
retf
int3
sar
adc
(bad)
sbb
clc
mov
mov
xchg
mov
cmp
dec
(bad)
out
inc
ins
or
push
cli
pop
aas
mov
dec
data16
and
cmp
in
(bad)
mov
jb
pop
mov
loope
fnsave
ja
push
xor
add
fmul
dec
inc
inc
mov
into
pop
popf
jne
cmp
cwde
add
pop
test
push
out
mov
fwait
push
(bad)
xchg
push
in
ja
adc
(bad)
push
not
dec
lods
xchg
jmp
dec
repnz
cmp
(bad)
icebp
lahf
add
xchg
inc
dec
jmp
(bad)
dec
push
xchg
jne
adc
sbb
out
xor
pop
and
mov
lock
ss
xchg
mov
sub
pop
in
mov
inc
into
aad
dec
lock
push
dec
pop
ret
test
cmp
ds
jb
sub
mov
or
mov
int3
cmc
xchg
jg
inc
adc
or
sbb
clc
mov
out
mov
and
push
mov
add
jg
pop
push
add
int3
and
push
fwait
push
push
pop
adc
pop
cmp
ds
push
mov
xchg
ds
lea
(bad)
fld
fcomi
xchg
sub
sahf
cmp
xchg
ins
mov
stos
sub
cmp
es
scas
ins
in
iret
push
outs
sbb
push
inc
jp
jp
inc
push
pushf
jne
sub
mov
test
sahf
xchg
dec
inc
adc
inc
mov
xor
push
cli
dec
mov
inc
cmp
int
mov
xor
jae
or
adc
mov
out
jae
xchg
fs
cmp
mov
scas
lea
xor
cmps
dec
xor
cli
push
jb
xor
in
scas
outs
mov
add
inc
retf
xor
inc
sahf
repnz
xchg
push
rcl
adc
into
push
jle
ds
push
into
cmp
jle
fwait
xchg
sub
gs
lea
cmp
sahf
xchg
mov
pop
ret
inc
and
pop
inc
sahf
nop
jae
pop
in
in
push
mov
scas
adc
loope
jle
iret
ficomp
pop
dec
xchg
out
fisttp
inc
jo
mov
les
fwait
loop
(bad)
push
or
lods
enter
xchg
push
xlat
xor
push
and
adc
pop
pop
push
lds
dec
push
dec
cmp
(bad)
push
iret
scas
ds
add
jle
jle
and
jae
or
pusha
inc
add
outs
jecxz
pop
and
push
jmp
xchg
add
enter
in
sbb
movs
mov
xchg
cmps
add
sbb
sbb
sub
ss
push
pop
dec
and
imul
adc
lock
mov
daa
fdiv
scas
mov
lea
sti
inc
or
cmp
ds
ins
cwde
xor
or
push
mov
ins
pop
fiadd
pop
nop
inc
out
dec
aam
nop
sbb
jne
fcmovb
inc
int3
gs
fdiv
cwde
inc
loope
(bad)
into
outs
repnz
sbb
lahf
pop
cwde
push
out
hlt
mov
push
(bad)
in
inc
stc
mov
pandn
fsub
je
call
mov
pop
xlat
rol
push
(bad)
cmp
jo
xchg
movs
adc
add
mov
mov
xor
shl
dec
enter
jae
dec
loope
out
ss
jmp
cmps
or
test
mov
add
push
lods
int
daa
mov
or
sahf
pop
aam
ds
cmc
fidiv
cmp
(bad)
cmp
daa
jns
mov
push
mov
enter
out
(bad)
aad
clc
dec
lods
add
push
cmc
call
fcmovb
sub
pop
inc
test
scas
xchg
add
pop
add
sbb
cmc
call
mov
and
push
daa
cmp
inc
pop
rcl
cli
loopne
bound
mov
jg
inc
push
sub
dec
sub
xor
jbe
dec
loope
clc
ds
mov
call
clc
ds
push
js
push
fcmovu
sub
jbe
into
dec
mov
scas
xor
push
xor
xor
xchg
mov
aad
inc
jmp
cmp
scas
xchg
clc
xor
lea
mov
imul
shr
xor
(bad)
pushf
adc
je
xor
or
add
sub
pop
fidivr
mov
dec
out
jbe
mul
inc
mov
dec
in
rol
xor
jo
or
mov
mov
(bad)
mul
(bad)
out
hlt
(bad)
sbb
and
cmps
sti
inc
mov
test
sbb
(bad)
cmc
pop
jle
xor
pop
xor
adc
mov
retf
sbb
in
mov
inc
dec
test
in
pusha
sahf
in
(bad)
pop
aad
jae
in
aaa
and
dec
ss
test
addr16
and
jmp
std
add
fwait
retf
ret
idiv
movs
ds
adc
enter
es
(bad)
retf
pop
retf
and
ror
fsub
jmp
ficomp
js
dec
ret
(bad)
sub
or
iret
jg
data16
dec
ficomp
xchg
push
test
fistp
push
jmp
js
aam
and
xor
shr
jbe
addr16
call
push
pop
pavgw
mov
pop
les
cmp
sub
shl
xor
push
push
js
pop
push
(bad)
push
inc
push
retf
lods
mov
scas
gs
pop
je
inc
outs
jg
es
xchg
in
mov
aaa
movs
or
or
xchg
inc
or
repz
test
fwait
das
rcr
push
dec
pop
mov
jo
mov
retf
fbld
xor
fldcw
aas
mov
(bad)
mov
(bad)
mov
xchg
fcom
mov
push
cmp
(bad)
or
add
scas
jl
aaa
adc
xchg
mov
xor
mov
xor
fcomp
pushf
sub
pushf
add
lock
lea
shl
test
inc
dec
mov
pop
loop
sub
or
(bad)
outs
mov
out
dec
addr16
jecxz
es
adc
ret
xchg
data16
pop
das
and
ret
and
pop
in
push
cli
mov
daa
pop
clc
lahf
cmps
mov
mov
sti
cmp
jnp
(bad)
push
add
or
(bad)
dec
shl
data16
(bad)
xlat
enter
inc
or
push
jmp
mov
je
scas
jnp
sbb
inc
pop
shr
popf
daa
push
jmp
out
xchg
and
xchg
sub
les
mul
xor
(bad)
fwait
arpl
push
stos
mul
mov
jbe
jmp
fimul
xor
sbb
ja
adc
out
xchg
mov
out
push
sub
pushf
adc
(bad)
neg
inc
(bad)
bound
(bad)
aaa
jmp
mov
pop
gs
test
cmp
push
inc
aad
fsubr
bound
jmp
jbe
in
sub
mov
cmp
sbb
inc
and
ds
mov
push
out
mov
icebp
xchg
cwde
pop
movs
mov
lods
fst
pop
push
outs
mov
arpl
(bad)
fild
mov
in
push
in
dec
(bad)
popf
out
jns
push
aam
pop
imul
cli
movs
stc
pop
jle
sbb
or
xor
lock
mov
xchg
sbb
(bad)
lds
(bad)
call
xor
dec
dec
and
pop
(bad)
jl
fld
jo
sub
addr16
stos
divps
jb
pop
nop
ror
dec
(bad)
fmul
mov
retf
push
or
adc
gs
mov
dec
cmps
pop
hlt
sub
sar
loop
dec
or
test
mul
scas
xor
xor
mov
stos
sti
ret
push
fisub
mov
mov
or
cdq
enter
push
jbe
xor
(bad)
ficom
lea
xchg
xor
push
push
popa
dec
or
mov
aaa
ins
jae
pop
shl
sbb
cmc
stos
pop
ss
mov
cld
inc
cmp
and
nop
xchg
scas
add
xlat
je
jnp
sbb
ffreep
ret
repz
adc
bnd
xchg
aam
and
inc
cmps
cmp
cmc
in
pop
sbb
or
call
inc
repnz
jmp
add
outs
sbb
jecxz
(bad)
std
mov
in
pop
sub
fisubr
adc
(bad)
shl
fdiv
retf
adc
and
call
pop
lds
fbstp
aas
dec
sti
push
lock
test
push
inc
xchg
xchg
scas
imul
mov
lods
adc
xor
dec
sbb
mov
out
sub
lods
cmp
push
nop
mov
rol
jmp
xchg
das
mov
xchg
xchg
repnz
cmp
add
lods
adc
jae
lock
out
(bad)
movs
ja
not
sbb
int3
push
push
cmps
mov
mov
add
pop
xchg
pop
out
push
adc
jne
mul
aaa
mov
mov
mov
out
xor
pop
int3
inc
out
and
das
cdq
aaa
ja
sti
jbe
ficom
mov
in
std
retf
and
inc
pop
mov
cli
inc
es
xlat
jbe
(bad)
addr16
adc
push
and
push
pop
cmps
in
movs
jp
jb
dec
dec
mov
jnp
pop
push
sbb
test
jno
out
pop
(bad)
je
inc
fadd
arpl
rol
and
test
and
ds
and
mov
jae
jp
pop
dec
pop
push
outs
mov
scas
sbb
push
cs
push
cwde
fcom
sub
sti
xor
xchg
cmp
ja
outs
data16
mov
and
rcl
lds
xlat
jg
xor
mov
pop
out
js
or
push
outs
push
(bad)
sub
movs
mov
adc
jne
jl
inc
(bad)
(bad)
jle
cmp
or
or
pop
mov
(bad)
push
int3
in
pop
ret
aas
sub
sub
loopne
aam
into
dec
pop
add
stos
xor
imul
xor
jae
cmps
les
or
iret
sub
movs
popa
pop
push
adc
std
fsubr
or
and
and
sub
retf
cmp
push
mov
or
test
js
xchg
sbb
fimul
sub
dec
retf
push
dec
inc
jle
mov
mov
lock
imul
pop
mov
jnp
rcr
fmul
cli
jp
inc
inc
shl
cld
ds
jbe
mov
xchg
jp
test
iret
jl
push
clc
movs
sbb
hlt
(bad)
pop
xor
in
dec
and
add
ror
pusha
test
les
cmp
addr16
inc
pop
fst
and
fild
push
fild
retf
popa
scas
pop
cs
sub
fldcw
cs
fdiv
out
push
movs
cmp
outs
xchg
arpl
repnz
sbb
xlat
ins
imul
sahf
dec
stos
adc
cwde
stos
push
mov
retf
cmp
jbe
fbstp
(bad)
cmp
cmp
ds
or
pop
and
push
fs
push
es
mov
add
out
cmp
inc
xchg
iret
mov
push
dec
iret
adc
cmps
jecxz
ret
cwde
xor
outs
jae
rcl
les
pop
leave
pop
inc
cld
sbb
pop
sbb
sub
stos
imul
sub
int
and
outs
aad
push
mov
pushf
xchg
fdivr
ins
mov
retf
jnp
mov
daa
mov
inc
push
pop
xor
(bad)
test
mov
mov
pop
pop
dec
jmp
popf
imul
ret
(bad)
mov
adc
jmp
cmps
jg
leave
xor
xor
inc
adc
inc
fiadd
sub
inc
outs
fild
adc
fdiv
mov
repz
xchg
jnp
sbb
lgs
sbb
or
push
mov
aam
xchg
cs
adc
inc
xlat
in
and
test
int3
cmps
mov
jmp
cmps
pop
fmul
fiadd
(bad)
cmps
jmp
xor
mov
cmps
push
jecxz
xchg
mov
xchg
jo
inc
es
(bad)
mov
adc
sub
pavgw
pop
popf
jge
xchg
or
loopne
jb
cmp
mov
adc
stos
adc
mov
mov
(bad)
jmp
in
outs
pop
lahf
(bad)
retf
retf
inc
rcr
dec
adc
xchg
add
sub
fcmovne
mov
or
je
jg
repnz
mov
rcr
jmp
pop
stos
pop
sti
dec
mov
push
mov
mov
dec
mov
test
lods
push
jmp
out
add
and
test
lahf
in
fidiv
xchg
aas
cmps
xlat
ss
arpl
and
sar
xor
sbb
push
pop
enter
es
(bad)
nop
xchg
outs
outs
xor
or
cmp
outs
xlat
dec
out
clc
push
and
pop
jle
dec
(bad)
jnp
cwde
add
inc
xor
jl
das
pop
xlat
in
pop
push
dec
cmp
(bad)
xor
lods
xlat
shl
ficomp
inc
imul
mov
cmc
out
dec
sahf
iret
mov
dec
(bad)
adc
mov
int3
push
cmps
ss
sub
or
jmp
ss
test
mov
cli
push
push
call
hlt
adc
xor
xchg
jns
aam
popf
in
adc
adc
pop
ins
data16
adc
push
mov
aaa
or
jl
les
xchg
adc
sub
adc
jge
cmp
push
(bad)
scas
data16
mov
add
inc
movs
and
(bad)
and
loopne
inc
lahf
dec
pusha
mov
jle
adc
ja
xor
add
adc
nop
cmps
mov
jmp
sub
pop
outs
bound
test
pop
fdiv
jg
(bad)
out
out
rol
jae
sub
jmp
stos
es
or
sub
sbb
jb
call
pop
loopne
loope
cmp
arpl
loop
mov
ret
xchg
mov
call
mov
es
out
inc
fnstsw
ss
push
mov
pop
mov
add
mov
and
repnz
aaa
rcl
cmp
and
mov
retf
retf
and
loop
stos
push
test
loope
fiadd
je
jecxz
pop
jnp
and
retf
cli
ja
dec
dec
outs
imul
cmp
out
out
push
pop
or
push
push
mov
ret
cmp
scas
aaa
pop
adc
adc
mov
mov
retf
ds
ret
clc
pop
or
cmps
out
xor
and
call
pop
(bad)
dec
sub
bound
jp
shl
fbstp
adc
cmp
jnp
out
mov
into
js
je
push
sar
jl
ins
adc
mov
xchg
cmp
jmp
sahf
or
jp
call
pushf
ss
stos
jbe
add
out
push
fwait
jmp
pop
es
inc
sub
jnp
ds
pop
neg
mov
mov
(bad)
fadd
or
jg
mov
sahf
xchg
mov
js
fimul
mov
fucomip
cmps
xchg
jle
cwde
add
mov
sbb
retf
mov
or
fldcw
div
inc
sbb
add
pop
or
jp
push
push
ds
and
cmp
bound
jno
or
cmp
or
xchg
(bad)
push
data16
inc
jg
push
xor
xchg
and
scas
call
pop
(bad)
scas
fdiv
bound
neg
dec
loop
ds
pop
rcr
jmp
call
push
stos
adc
movs
or
test
add
scas
dec
xchg
imul
loop
ss
js
sbb
mov
into
inc
lds
mov
or
xchg
stos
pop
cmp
jbe
dec
(bad)
mov
dec
mov
pop
xchg
push
retf
add
clc
or
mov
xor
xchg
sbb
daa
adc
gs
lods
data16
aad
adc
mov
dec
pop
imul
(bad)
fcomp
cmps
mov
es
ja
pmaxsw
xor
inc
out
adc
jle
cmp
dec
call
dec
loop
ret
retf
pop
clc
shl
or
xchg
xchg
jb
hlt
in
lods
xchg
pop
jbe
mov
dec
mov
push
retf
and
push
mov
sub
xor
imul
imul
jle
jae
repnz
popa
rol
xchg
aas
es
inc
(bad)
(bad)
ficomp
ins
loopne
sar
mov
lahf
test
aad
sbb
mov
ds
and
retf
sbb
jnp
mov
xchg
loope
div
xchg
ret
out
push
ins
scas
cmp
shl
pop
jbe
cwde
fadd
data16
jle
dec
mov
cmp
jle
rcl
jae
cs
push
push
mov
pop
ss
cmps
push
sub
fisubr
inc
loopne
das
jnp
pop
scas
loope
fmul
cmps
add
pop
mov
(bad)
(bad)
cld
test
or
or
mov
(bad)
mov
lahf
push
lock
sti
mov
jo
(bad)
cmp
cmp
gs
mov
xchg
mov
mov
mov
ins
mov
fild
call
inc
push
js
ins
das
mov
inc
iret
inc
mov
nop
or
inc
mov
or
int3
or
aas
jbe
jae
pop
or
loop
inc
mov
adc
outs
invlpg
les
(bad)
dec
mov
in
jmp
and
xor
or
aad
fisubr
pop
xchg
std
add
sub
iret
xchg
or
jmp
fwait
inc
mov
mov
mov
into
push
movs
jo
ja
add
push
add
out
sub
dec
jbe
add
stos
outs
mov
loopne
xchg
fcom
push
sub
push
scas
jo
sbb
cmp
xchg
xchg
scas
mov
push
mov
pushf
mov
loope
retf
ss
pushaw
push
push
inc
outs
or
lods
sub
adc
inc
outs
and
mov
call
ret
mov
mov
mov
dec
ret
dec
loopne
cmp
bound
loope
out
mov
les
cli
cmp
mov
lea
scas
mov
xchg
jae
and
call
rol
mov
cmps
pop
dec
out
aad
(bad)
ret
and
jne
inc
loop
mov
or
push
ret
into
add
lea
pop
cwde
pop
mov
mov
inc
cli
mov
ins
mov
add
jmp
out
push
pop
fucomp
pop
sbb
adc
adc
push
int3
das
xor
repz
mov
retf
call
jecxz
push
les
clc
mov
and
cmp
pop
sbb
aaa
pop
out
into
fwait
sub
ds
adc
and
sahf
cmps
sbb
pop
sahf
ja
jb
call
outs
sbb
fcom
push
fdiv
(bad)
cmp
sahf
mov
loopne
and
enter
dec
inc
jmp
cmp
retfw
mov
(bad)
mov
push
sub
push
pop
addr16
inc
lds
mov
dec
sub
out
push
and
sub
sar
es
es
adc
data16
in
(bad)
xchg
inc
dec
lock
dec
pushf
mov
or
repnz
iret
push
aad
fild
movs
push
loopne
mov
sti
adc
pop
stc
dec
or
xor
daa
call
adc
fadd
(bad)
dec
dec
ja
jns
jns
pop
ds
mov
scas
xchg
hlt
pop
push
inc
in
imul
cmp
or
scas
scas
int
arpl
add
jmp
fcmovnbe
jl
pop
push
jl
xor
inc
cld
inc
cmp
pop
inc
xchg
adc
mov
fwait
mov
sbb
mov
mov
jmp
jno
dec
leave
arpl
xor
sub
stos
jecxz
ret
outs
scas
fcomp
xchg
mov
mov
icebp
shl
rol
xchg
movs
mov
dec
(bad)
sbb
stos
mov
or
xchg
mov
adc
sub
inc
mov
call
sbb
out
xlat
jg
enter
loope
push
push
shr
cmp
sbb
(bad)
mov
xor
pop
into
rcr
xchg
outs
out
div
cmps
jl
out
neg
data16
mov
(bad)
das
add
xor
pop
test
push
fdiv
fimul
ss
mov
mov
pop
test
xchg
mov
pop
iret
cli
frstor
lods
and
pop
mov
or
pop
dec
xchg
mov
movs
repz
sahf
xchg
scas
cmps
int3
in
aad
ret
into
nop
test
stc
adc
lock
jmp
mov
arpl
inc
pop
clc
scas
sub
xchg
jmp
pop
retf
mov
pop
add
push
jp
xchg
and
sar
sti
pop
jnp
das
das
cdq
outs
push
adc
dec
mov
clc
scas
and
inc
xor
adc
ds
xlat
inc
or
jmp
(bad)
mov
pop
repnz
addr16
(bad)
arpl
(bad)
pop
xchg
fisub
sbb
push
jae
sbb
push
jns
(bad)
aad
das
stos
daa
push
into
push
or
repz
sbb
cmps
inc
adc
xlat
fild
pop
push
mov
xchg
mov
sbb
inc
xor
adc
aas
mov
ret
push
jg
inc
push
push
fiadd
jns
fsub
mov
pop
inc
or
xchg
das
mov
stos
dec
data16
ins
in
rol
les
(bad)
xchg
pop
adc
cmp
xchg
cld
cmc
mov
jno
fwait
mov
movs
inc
outs
pop
mov
xchg
call
pop
aam
sahf
ror
dec
push
not
pop
and
ss
fnsave
pop
xlat
out
icebp
clc
call
or
(bad)
stos
shl
fsub
sbb
mov
sub
mov
imul
sti
add
xor
(bad)
popa
scas
aas
push
or
adc
xor
arpl
je
mov
mov
pop
sub
gs
and
jbe
xchg
push
dec
jmp
sub
add
jle
push
(bad)
bnd
mov
xchg
inc
out
add
mov
push
cmp
or
jg
push
fcom
jno
fadd
add
adc
cwde
shl
dec
sbb
sbb
and
mov
(bad)
mul
adc
push
or
pop
dec
loopne
outs
(bad)
sbb
mul
retf
js
int3
popa
shr
dec
mov
cmps
outs
lds
call
inc
popa
cmp
mov
push
loop
repnz
int3
xchg
data16
(bad)
dec
stc
push
push
push
add
out
out
dec
and
add
xchg
retf
push
dec
mov
push
dec
add
fidiv
js
imul
jle
push
cs
xor
out
in
sahf
cmp
out
lea
out
xchg
mov
inc
(bad)
dec
xchg
cs
aaa
mov
notrack
ret
push
fisubr
add
pop
mov
lea
ficom
jo
dec
mov
inc
push
fwait
cmps
add
sub
add
jo
movs
pop
out
stos
lock
cmps
and
mov
mov
shl
or
push
iret
xchg
push
enter
mov
inc
sub
mov
pop
das
mov
adc
inc
push
dec
mov
mov
(bad)
mov
std
test
shl
xor
push
mov
aas
shr
aaa
jmp
push
mov
je
mov
inc
fmul
cmps
addr16
mov
out
pushf
pop
fisub
pop
cmps
pushf
in
push
inc
xlat
test
push
jo
test
sub
sti
push
inc
pop
enter
neg
int
adc
cmps
movs
fwait
outs
aaa
xlat
push
ins
cmp
pop
push
sbb
mov
push
mov
call
cmc
pop
mov
dec
sub
ins
dec
ret
pop
ret
mov
lock
iret
sar
jle
fcom
leave
mov
lods
lea
adc
adc
(bad)
(bad)
pop
push
stc
movs
ss
adc
add
imul
inc
(bad)
xchg
iret
rol
not
sbb
mov
push
xor
cli
and
pop
ins
xor
sbb
sub
int
push
inc
jp
aam
call
jmp
xchg
push
xor
ss
outs
pop
loopne
push
out
aaa
fxtract
je
pop
mov
int3
aam
adc
iret
iret
sub
dec
scas
mov
adc
jge
jae
(bad)
daa
pop
lds
xchg
cmp
jb
or
in
daa
mov
in
or
test
mov
aas
fimul
pop
mov
mov
stc
pop
pop
dec
xor
ins
push
sbb
pop
dec
fistp
adc
(bad)
pop
xchg
(bad)
out
pop
xchg
fidivr
jmp
daa
and
cmp
dec
mov
jle
popw
iret
es
inc
fcomp
js
lahf
add
xchg
sbb
cdq
ficomp
retf
fisub
aad
mov
mov
pop
(bad)
mov
xor
push
or
ss
cmps
add
mov
or
mov
ret
mov
pop
icebp
push
cwde
daa
(bad)
mov
pop
inc
repz
sub
inc
out
mov
stc
jl
sahf
rcr
or
sbb
sbb
aaa
add
enter
fmul
adc
mov
aas
arpl
sbb
test
push
mov
mov
and
pop
call
mov
xchg
add
pop
pop
cs
cmps
sbb
repz
jle
push
cdq
pop
jmp
push
mov
movs
mov
sub
or
or
fsub
icebp
cmps
hlt
icebp
sahf
or
shl
sbb
not
pushw
or
xchg
lock
popf
ds
push
cmp
out
sub
mov
push
leave
jo
sbb
xchg
out
xor
dec
fcmovb
xor
xchg
sbb
or
push
call
ret
and
out
imul
cld
aaa
mov
pusha
xchg
push
xchg
mov
inc
xlat
fst
das
movs
cmp
int3
or
retf
cdq
jmp
fisttp
adc
into
jge
aaa
outs
fwait
iret
xchg
xchg
loope
fstp
xchg
out
add
sub
push
jecxz
adc
push
sahf
fmul
jg
ret
pop
repz
sahf
jge
sub
rcr
jnp
push
outs
mov
outs
sub
loope
and
stos
les
jae
xchg
loop
clc
dec
xor
adc
icebp
stos
mov
(bad)
mov
jmp
ins
and
pop
push
jp
inc
cs
push
sahf
mov
adc
imul
call
pop
push
jle
ss
stc
xlat
ficom
pushf
cmps
outs
cmp
out
lock
pop
pop
push
test
mov
push
mov
mov
xchg
mov
(bad)
adc
cwde
cmps
add
cmp
jmp
imul
pop
data16
jo
add
retf
push
out
(bad)
fidivr
or
stos
ss
out
je
inc
jo
loop
push
cs
or
sbb
fbld
xchg
sbb
mov
lahf
daa
mov
test
imul
xchg
and
xchg
or
rep
pusha
stos
sbb
xchg
(bad)
ss
shl
inc
inc
mov
inc
stos
mov
add
xor
sahf
call
jecxz
in
lods
cmp
sar
mov
mov
jns
xchg
ins
ror
cdq
adc
mov
imul
fmul
add
and
enter
iret
jnp
retf
jmp
mov
pop
mov
call
mov
mov
pop
mov
mov
in
(bad)
mov
push
jns
cmps
js
and
popf
dec
xchg
leave
xor
add
xor
sbb
mov
jne
mov
hlt
imul
sti
test
stc
ficomp
jle
outs
push
in
and
call
ret
stos
loop
icebp
add
jns
jb
ja
mov
rol
dec
idiv
shl
dec
loop
mov
out
into
idiv
pop
dec
or
lahf
mov
mov
cmps
cmp
mov
sahf
sub
data16
dec
jmp
les
push
mov
jmp
aaa
push
or
mov
inc
push
fwait
outs
jbe
push
mov
ret
ret
mov
dec
sub
adc
int
sahf
cwde
add
push
inc
cmps
mov
test
xchg
ss
movntps
mov
mov
cs
cmps
mov
es
mov
and
bound
cmp
push
dec
jl
xor
sbb
xchg
retf
mov
push
stos
push
popa
call
jmp
repz
cmp
inc
repnz
mov
test
ja
popa
jno
pop
(bad)
ss
xchg
mov
pop
int
cmps
add
or
(bad)
and
pop
mov
lods
ins
pop
cmp
scas
(bad)
cmps
gs
xchg
test
cmps
sbb
mov
sbb
daa
push
idiv
pop
sbb
out
dec
rcl
jmp
shl
xchg
jle
ret
ud1
je
xchg
mov
push
push
loop
mov
call
(bad)
out
cmp
xchg
xor
add
mul
mov
(bad)
shl
push
ss
sbb
ret
loope
adc
mov
loop
into
jl
pop
jle
and
sub
scas
or
pop
rol
cmps
in
retf
popa
xchg
cmp
dec
imul
aas
call
push
fwait
jb
mov
mov
adc
xor
fcomp
jns
fxch
pop
sub
aam
adc
mov
add
call
sbb
cmp
mov
xchg
xchg
lods
cmp
ret
xlat
lock
mov
jl
cmps
int3
imul
push
scas
lods
lock
aam
enter
sti
mov
add
cmp
into
rcr
popa
cmps
fcom
(bad)
daa
mov
loopne
rcl
xchg
retf
cmp
sbb
xchg
mov
pop
aaa
bound
mov
adc
pop
mov
push
inc
sti
push
jg
add
cmp
outs
(bad)
outs
ret
xor
pmaxub
ds
data16
sbb
sub
cmps
add
jle
dec
pop
push
je
ss
(bad)
fistp
out
push
adc
loopne
ds
and
out
imul
imul
adc
test
xchg
push
jns
bnd
mov
data16
jb
add
arpl
mov
jb
jge
fcom
(bad)
loopne
inc
xchg
into
xchg
fimul
push
(bad)
mov
and
dec
sbb
push
test
data16
mov
dec
call
adc
div
sbb
(bad)
stc
mov
xor
or
ror
int3
jne
xchg
test
bound
shl
cmp
mov
xor
sbb
mov
mov
adc
mov
push
mov
sbb
dec
rol
dec
and
jnp
popa
inc
mov
retf
cli
cmps
cmp
inc
das
jmp
jle
mov
mov
jg
ret
and
mov
and
mov
sbb
xor
push
movs
rsqrtps
mov
in
scas
out
or
dec
jb
or
mov
inc
fild
jno
push
dec
jb
mul
movlps
in
add
ds
(bad)
mov
dec
sub
jp
xchg
xor
retf
popa
in
in
or
sbb
mov
mov
mov
loope
and
es
push
sub
pop
out
jne
add
pop
call
pop
and
ins
out
retf
arpl
call
push
sar
mov
test
imul
pop
jmp
adc
inc
or
int
data16
in
ins
mov
mov
cmp
jmp
add
and
inc
aas
ret
std
push
fild
(bad)
inc
inc
fistp
and
ds
stos
mov
cmps
ret
jmp
inc
mov
xlat
jecxz
bswap
and
(bad)
or
enter
(bad)
dec
imul
jmp
test
retf
fs
add
jmp
xchg
aaa
shl
inc
push
mov
inc
call
jge
xor
push
pop
cmp
retf
pop
outs
cli
js
out
ret
pop
out
test
cmps
idiv
sbb
push
push
pminsw
pop
hlt
jge
xchg
rcl
bnd
test
inc
gs
xor
imul
cmp
pop
lahf
(bad)
out
or
ja
pop
mov
sbb
dec
adc
rcr
addr16
(bad)
push
retf
mov
(bad)
out
xchg
mov
xchg
(bad)
xchg
cs
retf
push
fadd
shr
or
outs
idiv
jle
adc
push
push
iret
add
test
add
dec
mov
or
mov
mov
js
in
dec
into
dec
scas
cmp
xchg
lahf
imul
(bad)
adc
push
mov
ja
enter
fisttp
pop
pop
pop
(bad)
outs
jmp
pop
out
jmp
fst
jno
and
(bad)
adc
inc
shl
xchg
mov
jge
pop
mov
or
xchg
mov
out
push
ror
dec
inc
(bad)
xor
pop
ror
hlt
jo
aad
vmread
in
(bad)
and
push
pop
dec
stos
or
mov
es
(bad)
stc
(bad)
popf
fisub
bnd
popf
fstp
push
mov
mov
xchg
jle
repnz
jg
sbb
aas
adc
call
inc
(bad)
fwait
aad
pop
lea
ret
sub
jne
jno
xchg
mov
fwait
xor
cmps
pop
ins
xor
jmp
outs
call
sahf
or
xor
jnp
call
outs
mov
pushf
retf
mov
jno
gs
ftst
mov
mov
stos
rol
int
cli
shl
rol
inc
pop
movs
sbb
jge
bound
hlt
aaa
adc
das
mov
sbb
add
mov
nop
or
xchg
adc
leave
sahf
imul
xor
out
sub
cmp
mov
std
push
aad
ror
mov
add
mov
div
push
jecxz
nop
in
jae
push
jbe
mov
into
lock
inc
pcmpeqb
sti
nop
push
in
ret
adc
push
jae
sahf
jp
jno
sahf
int
sbb
mov
inc
jns
and
fild
mov
dec
xchg
cwde
ss
lahf
inc
(bad)
lds
lock
dec
daa
rcl
cmps
mov
jmp
and
lods
std
call
addr16
inc
ret
stos
out
call
int3
daa
mov
pop
test
pop
popa
fwait
jae
repz
das
gs
je
inc
add
cmp
xrelease
jo
push
stos
test
into
dec
ror
imul
jae
dec
arpl
cmp
fld
mov
sbb
dec
sub
movs
stos
push
fsubr
cmp
es
jge
(bad)
mov
pop
cs
pushf
clc
jp
add
adc
ret
fldcw
test
or
mov
or
repnz
and
in
xor
jmp
aad
enter
and
inc
in
inc
rcr
shl
push
cmp
ficom
stos
lahf
inc
daa
xchg
(bad)
mov
shl
ficom
(bad)
stos
lock
mov
xchg
and
repnz
fiadd
addr16
xchg
pmuludq
data16
fcom
dec
cwde
jmp
sbb
mov
inc
add
clc
jnp
pop
sbb
xchg
pop
loop
out
fsubr
cmp
das
mov
mov
rol
add
dec
xchg
outs
xchg
mov
adc
mov
scas
cmp
neg
dec
(bad)
daa
arpl
shl
inc
(bad)
out
push
push
xchg
pop
jp
ror
adc
jp
inc
sahf
lock
(bad)
pop
cmc
mov
(bad)
or
loop
loop
xor
and
xchg
or
cmp
xor
xchg
stos
xchg
out
enterw
inc
hlt
outs
sbb
mov
mov
sbb
dec
cli
lahf
mov
stos
lds
push
sbb
fiadd
loop
mov
push
cli
sbb
push
inc
mov
repz
pop
sub
cmp
cmp
data16
into
pop
mov
mov
jmp
test
xor
into
lds
xchg
inc
add
pop
xor
fstp
mov
push
xor
into
dec
into
pop
ret
cli
pushf
inc
mov
(bad)
mov
xor
push
or
mov
lods
and
outs
fwait
jle
enter
mov
xchg
das
pop
cli
scas
(bad)
aam
popa
jmp
xchg
xchg
ds
sbb
inc
shl
mov
jg
ds
sbb
inc
cmp
not
dec
adc
mov
xor
or
and
push
inc
arpl
stc
pop
lahf
addr16
scas
ret
call
iret
sbb
fwait
shl
scas
stos
(bad)
jge
scas
retf
scas
(bad)
mov
inc
xor
ror
push
ins
or
xor
cmp
sub
fwait
mov
push
lahf
fmul
xchg
loop
lock
inc
adc
sbb
jge
cmc
sti
push
mov
push
mov
sbb
inc
mov
mov
sbb
add
sub
xchg
daa
xor
and
mov
dec
bound
jnp
mov
dec
adc
out
addr16
cmp
std
add
(bad)
out
and
imul
ja
mov
inc
fwait
xchg
jmp
ds
inc
lahf
dec
jns
dec
es
outs
shl
jg
xor
mov
aas
mov
dec
push
rcl
add
jmp
add
sub
xchg
mov
shl
daa
push
push
lahf
das
jbe
dec
xchg
jp
aas
xchg
mov
iret
ret
inc
or
mov
clc
in
cli
cld
imul
pop
pop
std
neg
movs
push
push
sbb
rcl
inc
cs
adc
sbb
inc
fistp
cmp
push
push
mov
jo
ja
cmp
xchg
mov
mov
sbb
call
or
pop
jge
push
xor
leave
dec
shr
inc
arpl
and
aas
xchg
outs
adc
and
es
xchg
(bad)
imul
and
sbb
sub
push
stos
pop
pushf
add
dec
xor
xchg
fnsave
loop
shr
add
mov
es
cmp
sub
push
std
push
outs
movs
shl
add
aam
popf
mov
movs
sbb
pop
xor
xchg
pop
cs
aas
test
iret
dec
adc
add
out
pop
adc
jae
shl
ins
push
test
push
mov
push
jo
outs
inc
pop
loopne
imul
retf
xchg
out
xor
enter
pop
cwde
popf
leave
pop
jbe
inc
add
daa
pop
inc
pop
pop
mov
and
jmp
or
ror
inc
jge
sub
ret
sti
sti
adc
daa
cmp
inc
imul
inc
sub
cmps
jnp
(bad)
xor
dec
bound
push
mov
xor
stos
mov
cmp
js
ins
or
jmp
pop
xchg
dec
data16
jl
into
push
mov
shr
inc
arpl
push
mov
out
mov
mov
outs
add
or
mov
xchg
sbb
jb
sahf
inc
popf
mov
fisubr
mov
pcmpgtb
in
aaa
mov
xor
stc
scas
mov
ret
push
mov
(bad)
mov
in
sub
push
mov
jmp
push
into
xchg
pop
lahf
stos
mov
add
pop
fcom
rcr
popf
xlat
nop
xchg
into
push
and
jo
icebp
pop
jl
addr16
inc
mov
call
sahf
and
push
sti
ja
jmp
cmp
xchg
mov
cmps
outs
cli
mov
dec
aaa
and
cmp
dec
sbb
sbb
popf
scas
xor
leave
loop
push
pop
jmp
sub
das
push
fsubr
or
pusha
rol
cmp
mov
ja
xchg
pop
jns
fs
jp
add
fldcw
(bad)
push
inc
(bad)
jnp
loop
mov
xlat
ds
ret
lds
dec
xchg
add
cli
popf
daa
aad
and
cmp
jg
jb
fiadd
mov
ins
add
call
add
mov
fcmovu
cmp
jbe
ja
push
pop
pop
mov
xchg
ss
(bad)
mov
leave
(bad)
mov
idiv
out
sbb
fimul
sub
(bad)
or
mov
mov
adc
(bad)
sub
and
mov
sub
out
das
sub
imul
retf
cmps
sub
fwait
sub
int
push
cmp
mov
jle
ds
jae
iret
pop
fmul
ss
data16
dec
xor
cmps
retf
loop
popa
out
xchg
outs
nop
add
jnp
mov
loope
inc
cli
mov
mov
repz
cmp
push
and
mov
push
sbb
adc
sub
call
and
xchg
cli
call
add
xor
sbb
pop
cmp
cmps
add
add
js
mov
sub
and
mov
jp
ret
xchg
leave
lahf
ja
inc
iret
mov
jmp
pop
mov
sub
inc
imul
fisttp
shl
or
int3
(bad)
and
div
mov
jl
in
sbb
pop
xchg
push
push
inc
mov
push
dec
dec
sub
cdq
cmp
sub
rol
push
or
inc
call
(bad)
mov
retf
mov
ss
out
adc
mov
movs
clc
div
adc
jno
sub
div
mov
inc
scas
push
pop
sbb
ret
fadd
jmp
sub
jl
sbb
push
(bad)
ins
outs
jo
dec
(bad)
push
call
mov
bound
fisub
call
jle
das
push
mov
pop
scas
push
jp
push
ds
dec
mov
imul
out
sti
push
(bad)
scas
cmps
push
dec
shl
mov
inc
cs
jmp
imul
test
xchg
and
pop
les
sbb
push
cwde
scas
int3
ins
and
call
ds
test
add
data16
arpl
push
pop
add
xchg
and
adc
lahf
nop
iret
inc
inc
and
sub
sbb
(bad)
or
pop
cmc
ficomp
adc
push
cmp
(bad)
out
sub
stos
fsub
fbstp
hlt
mov
ins
jno
fisubr
cmp
ds
in
stos
loop
repz
cmp
mov
jle
(bad)
outs
outs
jmp
sbb
pushf
or
jbe
xchg
data16
sti
movs
cmp
sahf
ror
inc
aaa
lds
in
ds
sub
sahf
bound
sub
push
cmp
into
pop
leave
popa
push
inc
sahf
clc
(bad)
cmp
jmp
push
mov
in
sub
mov
ja
mov
call
std
push
aas
cdq
push
aam
jmp
aas
hlt
ret
or
mov
mov
or
jge
push
push
mov
int
mov
cmc
test
add
cmp
push
jmp
push
push
aas
in
jae
xchg
clc
fldenv
fld
push
xchg
mov
jae
jecxz
mov
dec
imul
fist
xchg
jbe
push
out
push
cmps
push
jno
das
cmps
xchg
or
xor
outs
ss
xor
stc
jno
pop
lea
dec
xchg
lea
sub
in
jno
test
mov
jmp
jno
popa
lock
out
daa
into
mov
mov
shl
add
repz
sbb
and
enter
mov
nop
div
xchg
and
(bad)
mov
stc
dec
sbb
sub
arpl
int
pop
test
lods
sub
mov
cs
movs
mov
scas
inc
into
xchg
(bad)
mov
(bad)
mov
inc
(bad)
push
movs
inc
and
pushf
sub
enter
add
pop
push
jo
xor
shl
xor
pop
jle
dec
mov
pop
sbb
mov
jle
pop
ss
mov
retf
add
push
adc
inc
mov
lods
adc
sbb
xchg
lods
addr16
(bad)
dec
add
div
int
push
mov
out
ja
data16
cwde
dec
not
loope
scas
das
mov
das
shr
mov
push
cld
cmps
xchg
arpl
(bad)
push
es
stos
xlat
jg
cmp
fwait
pop
sahf
imul
inc
fbstp
push
mov
push
inc
push
xchg
pop
dec
cmps
jae
dec
cs
jae
(bad)
or
jns
or
or
push
test
pop
fiadd
imul
jecxz
sbb
sbb
xlat
movs
or
out
sbb
mov
sti
ss
jmp
fdivr
loope
mov
into
jno
push
push
scas
in
cmps
adc
push
mov
jbe
nop
pop
ds
repz
in
sub
add
dec
push
out
cmp
imul
ja
fnsave
into
adc
stos
cmp
pop
sar
sbb
add
neg
add
cdq
mov
outs
jl
iret
sub
push
int3
cmps
pop
jo
dec
pop
ins
test
fcomip
mov
sbb
adc
or
call
shl
cwde
xor
imul
ja
rol
push
test
ins
jnp
mov
mov
mov
rcr
pop
fs
jge
xchg
(bad)
out
dec
or
push
loop
sub
shl
and
mov
push
add
(bad)
jno
call
shl
movs
pop
mov
mov
lea
xor
daa
cmp
aas
jne
gs
jl
loope
sahf
xchg
(bad)
dec
inc
pop
inc
fsub
jecxz
jmp
stos
pop
add
sub
cdq
and
fistp
rol
xchg
and
enter
(bad)
jne
sbb
hlt
xlat
pop
pop
enter
cmp
pop
adc
aad
xor
shl
adc
fs
call
(bad)
mov
pop
nop
sti
ss
mov
leave
add
mov
jle
adc
dec
mov
ror
and
daa
fimul
jle
aas
mov
rol
mov
fidiv
sbb
sbb
aam
cmp
imul
inc
outs
pop
mov
pop
ret
pop
bound
mov
inc
mov
test
or
arpl
sub
jo
cwde
movs
out
push
cs
test
mov
xor
cli
xor
and
cmps
mov
mov
int
dec
jle
scas
dec
scas
jnp
mov
imul
sbb
scas
lds
clc
(bad)
mov
cmp
xor
mov
xchg
add
neg
jb
xchg
loopne
adc
xor
adc
mov
xchg
mov
jp
adc
pop
int
mov
inc
nop
xor
jne
cmc
and
sbb
call
lea
movs
lock
jl
mov
adc
xchg
nop
inc
xor
xchg
cmp
jne
fs
aam
xor
mov
cmc
rcl
xchg
mov
adc
fsub
dec
clc
fcom
cmp
mov
rcr
mov
mov
in
daa
jecxz
fcom
sbb
push
xchg
imul
jne
xchg
mov
out
enter
or
push
and
adc
cmc
inc
lahf
xchg
and
jl
rcl
mov
xor
adc
mov
imul
out
xchg
fdiv
push
adc
lock
jne
jne
mov
mov
movs
retf
lea
cld
aad
arpl
call
retf
push
sbb
xchg
add
mov
sar
cmp
adc
jg
xchg
mov
hlt
or
adc
loopne
pushf
and
cld
push
adc
mov
inc
(bad)
hlt
adc
mov
adc
lock
cld
mov
pop
jno
sti
paddusw
ret
push
icebp
test
mul
les
sbb
hlt
fisttp
xchg
dec
stc
daa
mov
jns
or
pop
inc
aam
movs
mov
pop
fst
sub
outs
and
or
and
inc
mov
dec
pop
mov
ja
mov
movs
pop
int3
pop
and
jbe
and
sub
loopne
dec
and
in
xor
ins
pop
inc
mov
xchg
add
jle
or
clc
fstp
xchg
sbb
int
sub
xchg
mov
or
scas
movs
xchg
xor
fidivr
fdiv
xor
xor
xor
enter
inc
sbb
sub
mov
ss
int3
push
mov
hlt
int3
lods
mov
mov
sub
in
inc
jmp
out
push
test
lods
xchg
xor
mov
movs
sub
and
lods
jmp
idiv
jp
call
stc
push
jmp
les
enter
(bad)
je
int3
adc
div
lods
stc
mov
fdivr
enter
out
mov
mov
jns
and
pop
and
lods
cmp
repz
push
adc
push
int3
jae
xchg
dec
dec
fst
pop
shr
inc
cmc
in
cmp
repz
sub
popf
adc
add
cmps
mov
add
mov
xor
es
in
loopne
pop
jnp
stos
xor
inc
js
arpl
out
outs
mov
xor
daa
mov
and
dec
mov
(bad)
add
dec
and
retf
cwde
xchg
jmp
add
lods
inc
aam
inc
or
cmp
lds
dec
out
pop
sbb
fistp
and
push
data16
add
xor
ds
jl
xchg
arpl
adc
adc
int
mov
adc
adc
dec
aaa
pushf
inc
sub
mov
push
cdq
add
or
inc
jl
into
retf
xchg
add
in
jbe
or
and
aam
sbb
mov
adc
inc
pop
adc
jmp
fcom
adc
daa
inc
dec
adc
xchg
rcr
sub
xor
daa
xor
jg
mov
add
int
xor
pop
sbb
adc
add
ins
cmps
retf
mov
pusha
les
push
test
inc
dec
add
les
xor
xor
adc
lahf
retf
mov
nop
mov
sbb
cld
pop
pop
daa
popf
xchg
scas
add
mov
xchg
mov
loopne
dec
adc
sub
stos
xchg
shl
addr16
sub
fist
cs
inc
enter
test
gs
loopne
jns
sbb
jae
pusha
push
dec
push
cmp
mov
and
mov
sub
mov
ror
stos
push
push
ror
ror
(bad)
push
in
adc
sub
xor
dec
lods
push
xchg
or
push
or
dec
jbe
mov
addr16
mov
sbb
mov
repz
adc
or
int3
push
sub
(bad)
or
int
pop
ror
dec
adc
rol
dec
mov
shl
test
call
(bad)
xchg
ror
rcl
ret
jns
lods
or
lahf
test
mov
jnp
dec
adc
mov
aas
dec
pop
(bad)
aad
adc
sete
test
adc
or
aad
aad
aad
aad
jbe
or
push
call
or
jo
std
cmps
fld
out
and
cmp
push
xchg
rol
or
sbb
push
retf
xlat
push
pop
lea
in
cld
cli
jo
mul
test
and
inc
cmp
push
push
comiss
imul
jbe
fcomp
xchg
push
push
pop
idiv
mov
lods
lar
xlat
test
jbe
fistp
jge
call
xchg
pop
fild
cmp
xchg
pop
dec
loop
xchg
arpl
rol
dec
shl
jne
push
adc
adc
adc
pop
jmp
mov
sbb
sbb
sbb
cmp
add
sbb
mov
push
inc
sbb
stc
fadd
fsubr
inc
mov
or
mov
dec
jecxz
cmc
retf
pushf
dec
arpl
jne
aad
xchg
dec
sub
cmps
sbb
js
or
sub
pusha
pop
aam
fld1
mov
ds
adc
pop
fldcw
jecxz
sar
inc
xchg
lods
or
fmul
pop
inc
pushf
jmp
xchg
mov
cmp
inc
test
call
fst
and
jo
mov
sbb
sbb
data16
adc
and
aad
test
(bad)
pushf
nop
fsubr
cmp
adc
in
jnp
loope
rcl
dec
fsub
xchg
jno
inc
(bad)
or
pushf
or
sbb
sub
imul
sbb
xchg
mov
sub
enter
daa
inc
xchg
add
and
dec
pushf
sub
cmp
(bad)
repnz
(bad)
pushf
test
fimul
adc
ror
adc
jmp
push
ret
fdiv
test
inc
pop
lahf
sbb
loop
pushf
or
adc
dec
xchg
jecxz
sub
cmp
lahf
or
shl
dec
and
dec
shl
dec
cmp
add
cmp
xchg
dec
shl
rol
sbb
push
ins
int
fidiv
pushf
test
(bad)
sbb
xchg
mov
call
lods
mov
std
cld
das
outs
pop
inc
adc
sbb
mov
inc
inc
push
fidivr
adc
les
mov
sbb
mov
jbe
cdq
pop
xor
ds
test
(bad)
lock
pop
jl
scas
out
push
push
stc
mov
sub
sub
rcr
(bad)
out
pusha
sbb
mov
iret
aaa
ds
sti
popa
sti
xchg
lock
sti
(bad)
pop
(bad)
xchg
mov
push
sbb
push
cdq
aad
sti
les
sahf
xchg
jbe
jg
sbb
push
and
shl
dec
cmp
add
push
xchg
(bad)
fidiv
xor
pusha
mov
out
cmp
pop
xor
mov
cld
pop
ficom
push
fnstsw
mov
mov
in
push
xor
ds
mov
mov
or
aas
ss
mov
dec
pop
xor
rcl
xlat
fistp
and
out
jecxz
out
lahf
cs
das
jne
outs
movs
mov
dec
xchg
cmp
inc
dec
aas
jmp
adc
out
(bad)
bound
loopne
aam
cmp
mov
push
imul
sub
xor
jne
mov
xor
adc
cmp
fwait
call
mov
repz
pop
retf
cwde
(bad)
cwde
xchg
cmp
inc
add
int
sbb
xor
sbb
jecxz
aam
leave
jecxz
cmp
mov
dec
jecxz
mov
fist
push
cmp
ror
int
scas
retf
pop
movs
inc
aas
or
pop
mov
add
mov
enter
mov
jnp
pushf
adc
mov
in
add
jg
ss
pop
and
lahf
daa
ret
adc
xlat
add
int3
add
aas
out
fld
pop
ret
cmp
(bad)
fadd
mov
jnp
mov
into
sbb
push
mov
sbb
mov
sbb
push
dec
xlat
adc
jge
pop
pop
push
scas
pushf
xor
cmp
adc
cmp
pop
pop
fdivr
pop
pop
push
lahf
push
aam
sbb
daa
xor
lahf
sbb
fcomp
and
pop
dec
or
(bad)
jl
pop
iret
clc
ret
sbb
pop
adc
push
cwde
outs
sbb
jl
bound
mov
pop
mov
push
sbb
mov
jnp
popf
adc
add
mov
scas
xchg
push
fcomp
cwde
mov
pop
pop
dec
aas
loope
mov
mov
pop
ja
sti
dec
movs
xchg
mov
pushf
mov
push
jg
pop
jno
outs
retf
add
int3
jg
pop
or
cmps
jl
adc
pop
mov
out
jl
xchg
scas
jl
pop
lahf
aas
dec
pushf
mov
(bad)
mov
cmp
mov
jl
sete
inc
mov
aam
rcr
mov
aam
inc
and
inc
jle
or
outs
mov
ret
mov
pop
pushf
test
or
mov
lahf
cmp
xchg
or
jmp
mov
push
cld
dec
and
ret
inc
push
addr16
shl
jno
repnz
adc
xor
fidiv
fdiv
xchg
ss
push
and
push
fdiv
push
mov
xchg
nop
sahf
push
xor
adc
hlt
xlat
fcom
push
pop
mov
dec
je
xchg
xor
cmp
mov
stos
lahf
inc
xchg
lahf
sbb
test
push
test
cmp
loopne
bound
icebp
call
dec
xor
xchg
ins
jo
retf
push
pop
test
mov
xor
stc
rcr
lock
sbb
jo
sbb
push
mov
sbb
add
lahf
cmp
rcl
mov
cmc
popf
cmp
in
sbb
mov
xor
adc
and
test
jo
adc
sbb
cmp
je
inc
out
call
xchg
xor
scas
jb
es
mov
mov
aad
(bad)
push
mov
xor
test
in
add
lods
adc
xor
adc
je
xchg
mov
mov
add
je
sub
mov
and
lods
mov
rol
mov
xchg
retf
int
stos
mov
add
je
xchg
mov
je
adc
xor
test
inc
push
xchg
adc
xor
pop
pop
je
mov
and
add
je
adc
fcom
mov
fadd
push
mov
nop
pop
mov
push
pop
xor
adc
mov
ficom
hlt
sbb
sub
jno
icebp
movs
rcl
sub
mov
mov
(bad)
pusha
jae
pop
scas
test
xchg
mov
out
mov
pop
xchg
mov
rcr
fcom
aam
dec
aad
pop
pop
std
(bad)
stc
je
adc
mov
push
sub
adc
adc
cld
fnstsw
sub
push
pop
std
test
sub
pop
es
cdq
sub
lock
fistp
mov
aam
clc
lds
or
xchg
or
dec
mov
rcr
xor
push
xor
pop
sar
daa
stc
cmp
xchg
loopne
mov
shl
jno
cmp
lea
jle
xor
push
pop
jo
rcr
test
lds
inc
ins
xor
daa
fdiv
mov
adc
and
pop
fst
cmp
xor
xor
icebp
cmp
aas
ret
cld
cmp
fs
dec
je
pop
mov
sbb
nop
mov
shl
adc
shl
adc
ret
adc
add
aas
ss
jae
xchg
enter
nop
xor
shl
push
enter
jmp
and
push
sti
cmp
push
je
aam
xchg
mov
xchg
mov
xor
adc
push
xchg
popf
pop
xor
frstor
jl
sbb
and
ds
xor
cmp
xor
daa
dec
xor
xchg
fisttp
pop
out
fdiv
mov
xor
test
ins
std
fdiv
jne
sub
jge
xchg
fnsave
xchg
fmul
std
aam
pop
sbb
push
ffree
cmp
in
jle
lea
ja
jg
pop
cmp
pushf
lahf
jb
fadd
mov
jecxz
aam
sbb
mov
fwait
mov
not
mov
fidivr
scas
mov
pop
mov
sbb
mov
call
mov
outs
cld
sub
push
sbb
pop
jmp
imul
outs
cld
sub
int
mov
fadd
mov
pop
fcomp
mov
pop
shl
cli
pushf
daa
mov
xlat
sbb
cmp
sbb
jl
pop
fild
fsub
jl
cwde
pop
or
pusha
fdivr
arpl
cmp
pop
pop
ret
subps
cld
inc
dec
pop
sbb
loopne
jg
pop
cmp
inc
arpl
pushf
aas
js
jns
xchg
pop
cwde
mov
arpl
mov
pop
pop
xor
push
retf
xor
mov
cmp
jg
dec
sbb
sbb
lahf
mov
rcl
cmp
out
idiv
adc
cmp
sbb
push
cmp
sub
pushf
sub
aad
pop
imul
pop
inc
and
mov
je
pop
pop
jp
arpl
icebp
mov
push
iret
aas
aad
cmp
adc
pop
jg
sbb
and
nop
pop
dec
not
push
xor
cmp
xchg
dec
ins
mov
(bad)
mov
js
jg
sbb
xor
cmps
xor
fcom
es
adc
inc
push
fcomp
scas
ja
mov
jno
fcomip
jnp
mov
data16
inc
jb
out
stc
ret
rol
mov
push
int3
outs
lahf
and
sub
aam
outs
test
sti
out
pop
xor
mov
jg
sub
mov
popa
fstp
jbe
movs
fisttp
push
adc
and
(bad)
sbb
std
add
int
es
push
daa
es
(bad)
cmps
cmps
cmps
xchg
es
push
daa
es
(bad)
cmps
cmps
daa
push
daa
es
inc
cmps
cmps
cmps
xchg
es
push
daa
es
inc
cmps
cmps
cmps
xchg
es
xchg
es
push
daa
es
(bad)
cmps
cmps
cmps
xchg
es
daa
fldenv
sub
(bad)
fcom
inc
sbb
xchg
fadd
adc
jno
test
dec
test
sub
mov
ja
aaa
xor
(bad)
scas
lods
fadd
dec
mov
xchg
or
(bad)
dec
or
(bad)
xchg
fst
sbb
je
inc
gs
and
lock
push
mov
fldenv
inc
imul
cli
inc
ins
cli
sahf
dec
aas
pop
add
sahf
mov
je
adc
adc
aam
fsubr
xor
push
ins
xchg
in
test
fs
cs
in
test
fs
fs
cs
in
les
fs
cs
in
les
fs
in
test
fs
cs
idiv
mov
jmp
dec
inc
cs
jmp
nop
lods
(bad)
hlt
dec
adc
dec
add
fimul
fndisi(8087
dec
add
jno
dec
std
int
clc
mov
dec
add
fs
mul
mov
dec
adc
xor
push
inc
jmp
mov
mov
add
ss
push
dec
jmp
retf
or
pop
or
cs
test
mov
nop
fucomp
cs
inc
inc
gs
jmp
scas
nop
scas
mov
adc
pop
adc
test
shr
add
pop
fs
jmp
in
shl
mov
mov
int3
(bad)
ins
dec
add
jl
rcl
mov
and
sbb
or
cmp
cld
aas
and
je
(bad)
iret
aam
arpl
xor
lods
out
push
dec
inc
pop
icebp
jmp
sbb
jp
pop
ins
pop
sbb
stc
icebp
mov
jnp
daa
or
sub
dec
mov
stc
sbb
pop
outs
addr16
arpl
sbb
clc
mov
jmp
dec
dec
jne
push
jecxz
ret
in
in
xor
pop
imul
outs
das
adc
stos
jmp
sar
aas
pusha
pop
inc
pop
adc
fiadd
pop
add
je
pop
int
test
jo
push
pop
push
out
(bad)
out
fcomp
sbb
inc
jp
inc
sbb
(bad)
mov
adc
push
ins
ins
sbb
sti
in
loopne
ficom
cmp
sbb
jp
call
lock
or
push
push
gs
cwde
cmp
or
mov
xchg
sub
dec
repz
xchg
int
dec
xchg
push
into
dec
push
or
cli
in
(bad)
cdq
push
(bad)
retf
and
repnz
out
add
pop
arpl
jmp
xor
add
push
outs
inc
pop
jbe
sahf
dec
dec
je
ds
xor
dec
inc
addr16
adc
sbb
movq
iret
mov
push
cmp
pop
sbb
pusha
adc
push
in
push
(bad)
jg
or
add
aaa
xor
scas
cmp
pop
jp
add
and
inc
adc
iret
xor
jno
inc
jge
cmp
or
popf
adc
or
sbb
sbb
and
adc
out
push
sbb
pop
adc
push
je
xor
jge
or
js
sbb
and
add
add
dec
stc
xchg
call
scas
outs
adc
pop
ror
neg
inc
outs
mov
mov
inc
push
pop
ds
cwde
repz
dec
xor
sbb
inc
adc
in
jmp
dec
inc
or
in
jb
mov
jbe
adc
pop
or
hlt
imul
sahf
jne
adc
xor
push
adc
push
ss
cmp
and
dec
push
je
push
mov
push
adc
pop
or
outs
xchg
gs
fs
push
push
push
daa
imul
xor
ss
inc
add
adc
das
xor
and
push
xchg
xor
or
push
cmp
mov
jnp
and
add
and
add
inc
pop
add
jne
push
push
js
pop
popa
inc
and
jge
cmp
imul
das
and
ss
and
pop
ds
adc
inc
and
daa
inc
xor
popa
ins
push
pop
push
sbb
push
jnp
push
add
adc
outs
es
pop
push
fwait
or
imul
ss
cmp
and
adc
js
adc
xchg
and
adc
jbe
pop
pusha
jl
or
dec
addr16
and
or
dec
ds
js
adc
xor
xchg
add
or
pop
sub
pusha
jne
data16
xchg
jnp
adc
and
sbb
ss
push
cmp
adc
pop
addr16
dec
bound
adc
xor
mov
ds
push
adc
xor
(bad)
add
(bad)
push
shr
xchg
adc
jae
data16
add
sbb
xchg
and
jne
add
xor
pop
lods
or
adc
sub
mov
into
push
int
shl
ret
xor
xchg
xchg
or
mov
mov
shl
shr
movs
jns
setne
mov
aam
fwait
pop
xlat
push
mov
(bad)
xor
jb
cs
jno
sub
and
xor
adc
adc
ss
mov
push
mov
ret
jb
sub
xchg
adc
or
xor
xor
jns
adc
push
xchg
xor
xlat
sub
scas
outs
mov
aaa
test
xchg
outs
mov
daa
xlat
xor
and
shl
pop
mov
and
cs
adc
and
and
ss
add
xor
push
mov
xor
mov
xchg
sub
mov
add
scas
cmp
mov
sub
adc
add
sub
pop
int
(bad)
sub
adc
adc
adc
adc
lea
mov
adc
cmp
cwde
adc
push
mov
xor
adc
sub
add
mov
xlat
adc
push
push
pop
mov
push
cmp
cmp
daa
xor
xor
or
add
dec
dec
aas
sub
aaa
xor
or
sub
ret
sub
dec
push
xor
das
sub
adc
adc
add
sub
push
outs
sbb
jge
cmp
sbb
adc
or
cmp
sbb
push
mov
and
dec
xor
sbb
and
ss
cmp
pop
jb
aam
mov
mov
sti
arpl
cli
adc
rcr
cmp
add
jbe
pop
arpl
mov
sub
sub
dec
pusha
push
push
adc
dec
sub
and
push
or
dec
push
sub
das
inc
dec
mov
push
push
or
xor
aaa
and
push
adc
aaa
aas
sub
dec
sub
dec
sbb
inc
pop
cmp
or
pop
adc
adc
dec
or
cmp
pop
cs
cmp
push
xor
ss
sub
xor
dec
pop
dec
repz
xor
xor
pop
sub
cmps
inc
sub
or
push
pop
sub
sbb
fcomp
aaa
dec
jno
adc
or
xor
push
dec
shr
lods
(bad)
cdq
xchg
mov
lods
pop
scas
popf
mov
mov
cld
into
push
fmul
cwde
mov
scas
mov
(bad)
std
aad
and
cmp
xchg
mov
mov
xchg
or
les
mov
hlt
popf
jbe
out
rol
mov
xchg
xchg
scas
mov
out
jmp
mov
out
xlat
(bad)
mov
out
mov
test
cmp
xchg
mov
xchg
push
mov
cmps
iret
loope
out
fist
aad
pushf
mov
mov
mov
scas
mov
iret
and
pushf
(bad)
stc
movs
dec
fmul
into
xchg
cld
xchg
dec
fwait
stos
mov
mov
nop
into
fnsave
lea
mov
fisttp
aad
(bad)
xchg
mov
mov
ret
gs
test
nop
ret
add
cdq
xchg
mov
cmps
call
mov
in
xchg
out
xchg
scas
iret
mov
sti
mov
xchg
les
mov
fwait
test
lock
mov
std
jmp
xlat
retf
sbb
xchg
call
in
lods
les
ror
rcl
retf
shr
popf
or
std
jecxz
in
jmp
mov
cdq
xchg
(bad)
fistp
(bad)
xchg
aad
xchg
fsubr
cmps
nop
mov
pop
push
cli
mov
iret
mov
out
test
mov
mov
xchg
xchg
jmp
cdq
repz
sti
movs
adc
out
loop
les
mov
sahf
mov
add
lock
leave
mov
fdiv
in
xchg
out
stos
xchg
mov
xchg
xchg
mov
mov
mov
mov
imul
xchg
(bad)
lds
ror
fmul
out
out
mov
lock
dec
push
sar
enter
fwait
loop
out
retf
lods
or
int3
in
cmp
inc
mov
stos
pop
jecxz
jnp
and
setl
cdq
xlat
sbb
xchg
ds
pusha
stos
xor
mul
jne
dec
cmc
xor
or
sbb
cmp
imul
scas
imul
xor
add
imul
mov
sub
adc
clc
lea
sahf
ds
into
and
cmp
dec
pop
fisubr
xchg
jnp
adc
ficomp
cwde
cmp
and
(bad)
pop
cmc
clc
sbb
push
scas
popa
xchg
outs
out
out
jns
xchg
xor
sub
xor
imul
lea
mov
cld
arpl
fwait
and
sub
fdiv
mov
mov
cmp
iret
jp
mov
jo
pop
mov
mov
jmp
xor
cmps
push
das
pushf
test
mov
jle
or
jmp
mov
sub
sub
ror
xor
js
sbb
dec
test
aas
mov
mov
xchg
leave
ss
push
mov
mov
pop
sbb
pop
fwait
jp
mov
icebp
and
repnz
(bad)
frstor
(bad)
scas
out
mov
xchg
cwde
(bad)
stc
jl
jl
and
and
stos
nop
imul
adc
rcr
lock
ins
enter
(bad)
std
imul
adc
cdq
mov
enter
mov
push
jmp
scas
fimul
inc
jne
(bad)
cmc
popf
cmps
jmp
xchg
dec
dec
je
sahf
cmp
mov
mov
push
inc
sub
test
mov
add
dec
cmps
xchg
mov
stos
mov
pop
div
xchg
cwde
mov
(bad)
scas
lods
mov
inc
mov
in
mov
xor
jae
push
dec
xchg
stc
mov
vpsrlw
mov
push
push
xchg
xlat
mov
hlt
mov
mov
cmps
fsubr
mov
jle
xor
test
mov
repz
xor
scas
cmc
jecxz
cld
mov
imul
pusha
hlt
out
stos
mov
mov
dec
jae
test
sar
inc
dec
call
push
jg
inc
cmp
push
(bad)
jmp
sub
inc
cmp
and
cmp
sub
ins
add
cmp
(bad)
mov
and
sub
push
sub
aad
cdq
xor
dec
ds
sbb
cmp
(bad)
frstpm(287
ss
and
pop
cmp
pop
leave
or
cs
inc
push
ss
fnstcw
sbb
push
cmp
add
ret
add
jb
or
sbb
xor
xchg
cmp
ins
pop
push
sbb
and
add
in
cwde
(bad)
out
ss
jle
jbe
inc
dec
and
sbb
sbb
adc
inc
or
inc
sti
pushf
jmp
pop
inc
inc
ds
or
cmp
sti
enter
and
and
outs
jbe
push
add
(bad)
mov
add
and
add
sbb
arpl
jmp
push
push
inc
cmp
sub
(bad)
dec
jle
imul
xchg
cmc
xchg
add
dec
jl
push
or
sbb
in
mov
pop
jle
arpl
jnp
out
fsubr
sbb
pop
dec
adc
inc
ins
sbb
paddsb
cld
cld
jg
sub
pop
pop
js
push
pop
jbe
jmp
mov
cs
inc
add
jnp
add
enter
jnp
dec
push
aas
push
sbb
pop
pop
retf
mov
push
inc
pusha
jg
xchg
ds
pop
pop
loopne
into
mov
imul
xor
iret
imul
and
pop
es
fucomp
fsub
inc
push
pop
dec
or
jg
adc
or
das
adc
ins
dec
jbe
dec
adc
(bad)
xchg
sahf
std
jp
or
jo
pop
jle
push
sar
pop
adc
sub
xor
inc
repnz
xlat
xchg
add
sbb
jg
push
xor
das
inc
add
fcmovne
pop
pop
push
ds
push
out
std
xlat
mov
adc
dec
push
pop
ss
push
mov
les
dec
xor
inc
jnp
sbb
lods
in
test
outs
xor
cmp
add
movs
call
sbb
fs
dec
jns
movs
jmp
pop
ja
xor
(bad)
fist
add
outs
dec
push
jge
xlat
in
iret
dec
sub
cs
or
enter
popa
aaa
cmp
pop
jae
jl
fst
add
ins
pop
push
pop
mov
pop
inc
fs
add
ja
inc
mov
ror
inc
(bad)
dec
loopne
std
xor
test
leave
push
repz
fistp
xchg
imul
jno
cmp
fild
popf
jge
jns
pop
call
in
sub
push
and
gs
js
push
test
fsub
and
adc
cmps
jno
inc
(bad)
fist
gs
add
xchg
push
xor
loopne
(bad)
test
lods
pusha
cmc
and
dec
clc
and
inc
stc
or
push
xchg
sbb
fnsave
and
in
hlt
cmp
mov
(bad)
or
cmp
and
mov
into
inc
fnstenv
cmps
cmp
pop
cli
ss
mov
add
mov
clc
add
mov
mov
inc
retf
cmp
(bad)
push
sbb
call
mov
pop
and
pop
(bad)
push
aam
les
mov
fild
mov
loopne
cli
push
repnz
test
data16
push
push
loope
call
out
lds
pop
add
cmps
pop
mov
je
inc
test
jge
pop
inc
pop
and
(bad)
jecxz
fadd
lds
add
dec
push
pop
push
jle
cli
ret
jecxz
ret
xor
dec
jbe
pop
jp
or
mov
rol
push
push
pop
je
loope
out
out
in
or
xor
pop
or
fiadd
inc
push
inc
or
in
cdq
add
pop
imul
mov
jle
je
pusha
gs
or
out
int
icebp
sbb
outs
pop
inc
ins
outs
hlt
out
not
and
pusha
inc
gs
gs
fcmove
mov
inc
jne
outs
inc
inc
ins
and
(bad)
sti
retf
(bad)
out
mov
gs
push
cs
push
pop
dec
xchg
call
daa
or
scas
xor
retf
xchg
rcl
jno
xor
push
test
dec
push
dec
jl
movs
int
pop
and
pop
arpl
sbb
sti
shl
jecxz
inc
and
jle
pop
dec
push
repz
(bad)
cli
fistp
mov
dec
push
sub
add
shr
mov
fstp
ins
daa
add
or
sub
clc
cwd
mov
jo
and
xor
or
call
arpl
push
or
sahf
(bad)
or
test
inc
xor
dec
ret
popf
mov
and
dec
cmp
out
(bad)
out
mov
xor
imul
or
call
pop
call
ret
stc
fisubr
dec
sub
mov
inc
and
jecxz
cmp
mov
push
outs
data16
sbb
dec
pop
mov
xor
bound
pop
inc
dec
repnz
movs
mov
xchg
mov
aaa
xor
(bad)
icebp
add
shl
(bad)
out
and
test
mov
int3
xchg
cmps
outs
popa
and
xchg
rcl
(bad)
repnz
daa
and
sub
clc
int3
rol
jo
push
xchg
into
movs
call
das
dec
jno
pop
shl
movs
mov
leave
fld
mov
xor
push
js
pop
nop
jecxz
dec
sar
test
jno
(bad)
adc
bound
mov
jbe
loopne
xor
shl
cmps
test
push
inc
mov
xchg
push
mov
dec
aaa
adc
add
mov
push
inc
jecxz
push
push
sahf
mov
push
and
xor
rcr
inc
adc
pop
and
push
int
not
push
arpl
push
into
jecxz
fst
ja
xor
push
loopne
lock
add
adc
pop
mov
(bad)
aam
mov
add
bound
(bad)
(bad)
lock
mov
(bad)
(bad)
push
sbb
pop
cmp
add
leave
pusha
imul
cmp
or
call
xchg
mov
add
fild
sub
dec
adc
jmp
les
xchg
dec
push
sbb
push
aas
bound
mov
xchg
iret
push
rol
fild
pop
cmp
or
repnz
inc
or
push
pop
xor
aas
fisttp
sbb
(bad)
sub
and
mov
(bad)
arpl
sbb
ret
aam
add
enter
cmp
cmp
call
pop
scas
push
mov
push
enter
out
add
(bad)
mov
xor
cmp
imul
push
cmp
test
xor
push
push
cmp
inc
call
push
push
shl
gs
cmp
imul
loope
or
addr16
ficomp
test
aad
dec
(bad)
adc
add
aad
add
mov
popa
retf
mov
jnp
mov
push
mov
mov
push
jmp
scas
scas
ja
inc
jp
cdq
aas
mov
push
adc
aaa
stos
mov
adc
sub
pop
adc
adc
xlat
push
popa
lock
or
mov
sbb
and
adc
cld
add
jmp
jns
jns
and
push
outs
clc
in
jecxz
sub
repz
ficomp
call
or
ret
js
or
jle
cdq
cdq
jg
pushf
pop
clc
cmps
clc
mov
inc
call
enter
fist
push
cdq
outs
mov
clc
bound
cmp
std
std
fimul
pop
inc
lds
jb
push
sub
popa
mov
mov
pop
rcr
jge
mov
ja
or
fldcw
shl
dec
popf
dec
outs
scas
arpl
cwde
or
bound
jns
jg
lahf
stc
push
jp
cld
jl
push
sub
ret
sub
loop
inc
lods
enter
sbb
das
sub
pop
out
popa
stc
mov
outs
cmp
and
add
jb
retf
js
jne
mov
dec
std
js
cmp
push
aas
mov
xor
xchg
pop
ds
mov
sbb
jl
cmp
mov
imul
add
jnp
cmp
xor
mov
push
fst
test
mov
pop
pop
fstp
sti
out
aad
and
xor
mov
sub
xor
mov
bound
inc
pop
cmp
dec
pushf
cli
jb
jbe
sbb
sahf
push
or
retf
arpl
ret
dec
sub
popa
repz
adc
dec
cdq
add
cmp
dec
push
inc
iret
and
cmp
outs
cmps
out
mov
xchg
hlt
mov
push
sbb
adc
sbb
jnp
pop
mov
mov
push
push
aaa
outs
pop
dec
iret
mov
jmp
fidiv
das
add
mov
cmps
call
push
imul
mov
outs
cmp
aaa
(bad)
sbb
mov
xor
adc
data16
jb
mov
inc
fwait
push
pop
add
and
xchg
into
mov
sub
or
fimul
test
(bad)
std
call
mov
cmp
jne
(bad)
iret
dec
stc
stc
loopne
sub
repz
test
mov
dec
leave
gs
cmp
mov
fmul
jns
cwde
sub
stos
dec
adc
enter
or
mov
jae
mov
out
scas
das
pop
pop
inc
push
retf
or
cwde
push
xchg
fucomp
fwait
mov
push
je
cld
pop
jp
lds
lods
popf
aas
outs
jbe
imul
enter
mov
ins
and
sub
scas
fstp
imul
jge
imul
ins
test
(bad)
mov
mov
sub
pop
cmp
mov
jmp
retf
sub
mov
sahf
stos
lea
sub
stos
sub
fistp
mov
pop
or
xchg
dec
jge
dec
push
fimul
fsub
call
aas
dec
add
int3
fcmovne
sti
fist
jle
sahf
mov
call
aas
mov
fsub
lahf
movs
in
repz
fsubr
dec
sub
or
ret
mov
cmp
sti
push
adc
xor
aas
push
stos
idiv
cmp
test
call
fistp
xchg
fistp
pop
inc
jne
sti
mov
retf
push
ds
xor
push
cmp
test
xchg
fist
lahf
pop
loop
dec
aam
(bad)
mov
inc
sub
enter
add
mov
ins
push
rcr
inc
dec
push
test
push
xchg
or
xchg
cmp
in
neg
dec
jmp
cmp
arpl
mov
cmps
cdq
jmp
sbb
test
adc
div
imul
aaa
pop
sub
and
xor
pop
xor
fisub
mov
xchg
mov
cmp
gs
fisubr
mov
push
mov
inc
(bad)
sub
inc
mov
xchg
mov
pop
rol
or
neg
jnp
push
jg
mov
xchg
add
dec
aad
xor
cmp
cmps
scas
test
aaa
pop
icebp
inc
add
xchg
sti
stos
xlat
out
add
test
mov
and
inc
inc
xor
mov
pop
mov
(bad)
fist
sub
mov
rcl
fs
adc
loope
scas
sbb
gs
mov
aas
fs
dec
in
inc
cdq
sbb
shl
hlt
xchg
fs
inc
test
jecxz
and
icebp
mov
push
fwait
pop
add
shl
ds
adc
mov
inc
sub
fnstcw
dec
stos
shl
sub
mul
or
xchg
in
push
xor
and
inc
mov
inc
push
addr16
add
add
add
mov
in
and
in
and
and
loopne
ins
movs
loop
add
add
sub
pusha
test
or
cmp
dec
cmp
add
xor
add
out
les
mov
or
scas
movs
repnz
sub
(bad)
loopne
jnp
shl
loope
rcl
xchg
push
aam
sbb
and
fild
les
sbb
(bad)
je
je
in
cmps
and
rol
pop
mov
es
jns
mov
inc
and
mov
xor
je
fwait
and
pop
in
mov
popa
add
push
call
inc
in
or
jmp
adc
shl
pop
in
xor
add
jle
imul
mov
stos
fucomi
pop
mov
sbb
in
sub
(bad)
mov
add
mov
xlat
in
jmp
adc
in
les
mov
into
out
test
fs
(bad)
stc
xchg
pop
xor
mov
in
push
in
inc
stos
and
jbe
inc
and
inc
mov
push
out
dec
hlt
fstp
xchg
xor
pop
mov
lods
pop
into
push
push
lahf
pop
add
aaa
sub
icebp
icebp
add
adc
loop
push
repz
dec
inc
push
inc
je
xor
sbb
adc
cmp
fld
and
sub
mov
outs
mov
cmp
mov
dec
mov
(bad)
in
(bad)
rol
inc
popf
movs
pop
or
cmp
add
in
push
add
popa
jmp
shl
loopne
in
xchg
inc
inc
in
or
sbb
in
test
cmp
push
sbb
imul
in
enter
pop
mov
imul
add
lea
fmul
mov
iret
daa
and
int3
in
or
xchg
dec
out
in
cmp
in
not
adc
xchg
xchg
les
(bad)
sub
xor
iret
outs
(bad)
jmp
xchg
ins
call
(bad)
pop
push
sbb
into
mov
mov
adc
pusha
mov
int3
in
in
xchg
jecxz
cld
(bad)
icebp
out
pop
push
js
ffreep
sub
fsub
ret
(bad)
xchg
loop
adc
xor
call
inc
cmp
inc
sub
or
mov
cli
xchg
retf
mov
add
jnp
lods
push
fadd
xchg
lods
jecxz
ret
mov
xor
sbb
popf
jecxz
ja
jne
mov
mov
mul
adc
(bad)
cli
mov
iret
cmp
xchg
pop
in
xor
int
xchg
or
sub
mov
outs
push
fadd
in
sbb
std
or
and
std
(bad)
(bad)
in
jp
pop
(bad)
adc
sbb
lahf
in
cmp
in
call
inc
or
pushf
lahf
in
rcl
dec
mov
(bad)
pop
imul
mov
sahf
sar
enter
push
sub
pushf
loope
xchg
add
or
rol
jl
mov
std
or
lds
add
or
into
loop
xchg
cld
xchg
mov
fadd
and
sbb
or
int
sub
(bad)
inc
test
in
pop
cs
nop
adc
fst
popa
sbb
xchg
retf
mov
mov
cwde
cmp
fidivr
ret
mov
mov
mov
aad
std
retf
and
and
imul
pop
or
jp
push
in
xchg
call
retf
in
sub
sbb
ins
(bad)
mov
ins
mov
into
lods
aam
mov
adc
add
cs
ins
pushf
les
shl
adc
mul
mov
push
(bad)
pop
sbb
ja
sub
repz
stos
in
retf
jl
scas
sbb
in
test
inc
mov
and
in
xchg
mov
inc
std
pop
ffree
jbe
jle
fwait
in
(bad)
(bad)
ins
jb
fldl2e
jmp
adc
aam
fdivr
or
popf
in
cmc
add
add
cmp
adc
inc
aad
or
fld
pop
jnp
imul
jmp
sbb
mov
jns
mov
xor
cmp
and
and
repnz
popf
push
leave
inc
dec
mov
and
cdq
jbe
pusha
inc
mov
loop
jne
ja
inc
out
sbb
gs
(bad)
pushf
cmp
fstp
lea
jbe
aam
xchg
inc
inc
cmp
movs
inc
pop
fs
or
add
pop
mul
cmp
cmp
cmc
push
aam
test
sub
inc
push
jecxz
pop
mov
cmp
sbb
pop
mov
xchg
movs
dec
cmps
mov
daa
imul
xchg
stos
mov
repnz
push
or
and
mov
dec
or
push
or
adc
scas
inc
pop
push
jg
xchg
test
push
cmp
add
cmp
inc
mov
ror
movs
xchg
clc
in
or
daa
inc
adc
push
inc
hlt
sbb
pop
retf
ja
xchg
test
adc
adc
scas
jnp
xchg
push
(bad)
sbb
xor
mov
movs
icebp
push
pop
fs
inc
ret
adc
jb
hlt
mov
gs
adc
popf
mov
test
dec
push
and
and
sub
xchg
mov
push
(bad)
and
mov
push
and
mov
sub
addr16
pop
mov
xchg
jmp
push
enter
xchg
add
sub
push
inc
push
enter
movs
inc
jmp
cmps
sub
pop
mov
jbe
fmul
jp
in
fs
pop
ret
xchg
adc
fwait
popf
push
push
inc
xchg
mov
xchg
mov
jbe
loop
ins
outs
push
push
test
jmp
aaa
xchg
and
dec
imul
inc
les
inc
push
sbb
test
shl
xlat
push
xchg
sbb
test
clc
outs
mov
retf
movs
out
jmp
das
mov
mov
lds
ja
dec
inc
mov
xor
(bad)
bound
dec
imul
sbb
mov
add
lods
and
and
mov
push
push
outs
push
mov
test
and
add
cmc
icebp
into
mov
fwait
pop
in
adc
std
movs
(bad)
loope
add
mov
repz
aad
push
xor
pop
or
mov
add
mov
mov
repnz
call
movs
add
xchg
add
outs
jge
jg
dec
add
or
mov
and
jae
pop
jno
push
femms
in
rcl
jl
mov
xor
(bad)
mov
nop
bound
mov
arpl
and
mov
pop
jae
repz
nop
rol
cmp
cmp
je
inc
pop
es
jb
add
adc
(bad)
xchg
mov
and
cmps
and
jb
out
fst
dec
neg
imul
dec
leave
jge
mov
stos
and
jmp
mov
xor
movs
rep
js
imul
push
loope
mov
imul
sub
ja
ja
mov
pop
or
in
vaddps
ins
pop
popa
lock
jno
into
std
push
ds
dec
mov
scas
sub
xor
jl
popf
ret
pop
lods
push
retf
sub
or
out
jle
cmp
leave
inc
je
cld
ins
pop
not
fcom
cmps
int
mov
(bad)
stc
push
psraw
sub
add
adc
cmps
cld
push
sbb
sbb
pop
adc
xor
add
fwait
stc
(bad)
movs
stc
and
int
mov
ins
fnstcw
test
ins
test
inc
jns
fnstcw
daa
jae
push
pop
cmp
loope
dec
imul
or
int
xor
mov
lds
pop
(bad)
shl
cld
cmps
cld
pop
mov
bound
mov
ins
psrad
outs
mov
push
ins
ret
jne
fwait
gs
pop
fimul
ja
cmp
mov
xchg
jge
ins
fs
popf
cmp
mov
xchg
ins
les
lds
cli
lods
xchg
imul
mov
push
test
ret
bound
sbb
xchg
bound
add
ins
lea
ret
xchg
aaa
ret
mov
ins
outs
sub
test
jmp
bound
movs
jb
rol
xchg
popf
or
jno
pop
jp
cwde
popa
jb
cmp
mov
ror
ins
and
mov
mov
push
dec
aad
mov
dec
jae
fisub
data16
sbb
call
ins
in
add
outs
add
push
pop
mov
lds
das
or
ss
ins
sub
fcom
bound
frstor
xor
outs
ror
arpl
and
mov
imul
xchg
jp
jg
ins
cmp
loop
retf
adc
stos
ret
xchg
lahf
sbb
scas
das
out
int3
in
pop
aas
ret
icebp
mov
hlt
xchg
test
frstor
or
sub
retf
dec
int
xor
(bad)
aas
inc
stos
out
(bad)
jns
cmp
lds
in
out
lds
(bad)
pop
mov
adc
fcomp
(bad)
mov
jmp
mov
xor
mov
ret
ds
int3
iret
repnz
ret
cld
out
or
pop
adc
mov
ss
pop
(bad)
dec
cmp
mov
out
int3
movs
or
mov
int3
dec
(bad)
(bad)
in
int3
pop
cmps
adc
cmp
mov
out
fcom
idiv
scas
iret
loop
xchg
ins
loop
out
cmp
sbb
int3
jmp
int3
stos
cs
in
iret
out
loopne
out
scas
out
int3
out
xor
adc
mov
call
icebp
arpl
stos
lods
sbb
addr16
clc
add
and
add
repz
lods
out
xchg
push
inc
xchg
(bad)
int3
pop
repz
enter
rol
or
mov
call
cli
out
adc
or
xor
jne
pop
xor
test
das
fsubr
mov
jmp
rcl
pop
and
jmp
mov
mov
mov
loop
mov
xchg
mov
in
inc
or
test
test
cmps
dec
dec
jb
sti
cdq
jp
xlat
or
fld
cli
sar
iret
call
pop
cmp
ja
das
daa
xchg
leave
enter
pushf
sub
ret
jo
lea
cmp
sub
and
jb
mov
adc
(bad)
mov
test
cs
mov
mov
aad
ret
jne
pop
mov
sbb
mov
inc
fmul
push
inc
pusha
out
mov
in
mov
and
stos
repz
movs
mov
popf
push
pop
pop
push
and
or
sub
pop
xchg
hlt
inc
xor
cmp
add
in
out
push
test
aaa
rol
call
mov
mov
sub
xchg
mov
fimul
jecxz
ret
enter
call
jmp
(bad)
in
pop
xor
mov
(bad)
mov
and
and
xchg
repnz
xlat
mov
mov
and
rcr
(bad)
xchg
and
aaa
fcmovbe
jp
mov
sub
fidiv
aaa
(bad)
mov
pop
mov
add
xor
adc
lods
data16
adc
adc
out
mov
rol
in
bnd
xchg
scas
sbb
xor
aam
(bad)
xor
pop
mov
push
push
mov
cdq
nop
or
bound
adc
add
hlt
pop
inc
cmps
enter
aam
je
popa
push
fld
adc
daa
shl
popf
jbe
push
xchg
xchg
data16
and
in
mov
cmp
xor
(bad)
and
and
pushf
push
inc
jbe
bound
arpl
in
inc
out
and
pop
or
add
sti
test
push
loop
repz
and
rcr
addr16
adc
push
mov
or
inc
push
test
pop
rcl
mov
mov
xchg
push
ds
pop
mov
add
and
push
dec
sbb
lahf
popa
sub
adc
mov
sahf
push
icebp
pop
mov
push
(bad)
int3
sbb
sbb
or
in
push
fsub
cdq
push
xchg
(bad)
shr
lods
mov
cmp
out
sti
retf
mov
push
aas
sbb
leave
fnstsw
(bad)
stos
mov
adc
xor
xor
inc
fcmovu
adc
test
loop
sub
mov
ins
mov
into
rcl
cld
pop
and
mov
cmp
sar
lahf
outs
lock
(bad)
xor
and
inc
outs
out
mov
outs
jb
xchg
jno
dec
loope
mov
dec
shl
test
in
ret
fdivp
mov
shrd
ror
cmp
data16
xor
out
xchg
push
movs
(bad)
(bad)
adc
ficom
sahf
test
les
inc
loopne
inc
cwde
sbb
loopne
mov
inc
pushf
in
fadd
and
mov
push
jl
in
push
fstp
cmps
cmps
fwait
(bad)
call
fcom
sub
sub
outs
inc
dec
add
xlat
aad
or
shl
retf
icebp
push
sub
and
sbb
adc
cli
mov
jmp
fiadd
mov
enter
cmp
lods
ret
mov
call
lods
adc
je
das
jmp
je
inc
cmp
inc
mov
cmp
push
dec
cmp
pop
movs
push
push
or
(bad)
xchg
xor
(bad)
adc
in
dec
xchg
in
out
xor
call
addr16
push
jl
shr
cmp
je
mov
xor
int
pop
aad
xchg
cmp
jge
ins
out
addr16
mov
and
adc
mov
add
xor
adc
mov
mov
adc
and
in
stos
cmp
mov
mov
cmps
(bad)
movs
mov
and
mov
scas
imul
sub
mov
mov
mov
jne
ja
mov
mov
repnz
mov
and
scas
hlt
scas
mov
mov
jno
dec
es
mov
mov
and
stos
icebp
stos
mov
mov
jb
jae
mov
mov
cld
cmps
cld
cmps
mov
daa
jle
mov
stos
icebp
test
call
jae
mov
movs
(bad)
movs
mov
and
mov
mov
mov
jne
jbe
mov
mov
lock
lock
mov
mov
jae
jae
mov
mov
cmps
mov
and
mov
mov
jp
jnp
mov
scas
cmc
scas
mov
mov
jbe
ja
mov
mov
icebp
stos
repnz
(bad)
mov
and
mov
mov
and
mov
mov
pop
loopne
icebp
mul
xchg
mov
inc
push
push
add
mov
inc
icebp
push
je
or
(bad)
dec
dec
jno
fiadd
test
cdq
movs
sbb
movs
dec
xor
jo
pop
call
adc
je
out
mov
test
movs
pop
iret
retf
and
mov
add
jmp
lods
gs
inc
add
pop
icebp
call
popa
aam
jmp
fnstsw
or
xchg
test
inc
aaa
scas
retf
pop
es
pop
mov
or
dec
jo
push
jge
pop
push
pop
and
pop
mov
push
(bad)
jge
cmp
pop
adc
mov
call
jb
or
scas
pop
aas
adc
rcl
or
or
cdq
inc
pop
push
mov
es
repnz
mov
bound
sbb
mov
repz
pop
lea
dec
adc
int3
cmp
sbb
mov
pop
mov
test
mov
inc
mov
daa
inc
call
add
xor
cmp
jns
sub
fmul
fidiv
pop
pop
mov
adc
inc
inc
adc
jo
scas
jnp
out
add
addr16
mov
mov
shl
(bad)
fmul
test
add
xlat
and
out
mov
inc
sbb
popa
or
ins
out
adc
imul
push
addr16
imul
(bad)
dec
mov
mov
mov
jg
in
js
jns
repz
pop
aaa
cmp
inc
pop
out
rcr
mov
pusha
aas
cli
and
inc
stos
push
and
xchg
fcomp
cmp
xor
pop
mov
scas
cmp
jmp
add
arpl
mov
adc
test
mov
mov
test
add
mov
pushf
pop
test
adc
mov
stc
inc
dec
sahf
hlt
imul
jp
dec
test
mov
dec
repnz
hlt
dec
mov
fld
(bad)
ja
mov
sub
in
pop
in
xchg
inc
in
jle
dec
outs
(bad)
or
cmp
push
cs
fstp
retf
gs
lock
call
pop
(bad)
out
in
out
or
shr
mov
push
sbb
shl
pop
push
(bad)
aas
dec
sbb
jbe
call
rol
(bad)
test
cdq
pop
pop
les
shl
push
add
xchg
mov
ss
jl
out
dec
aas
ds
adc
dec
push
cmp
dec
pusha
outs
and
dec
cwde
sub
vmovaps
cmp
in
jns
dec
and
sub
and
sbb
pushf
pop
repz
cwde
adc
(bad)
cmp
(bad)
cmp
xor
sar
rcl
pop
inc
push
sahf
push
cmps
fsubr
push
les
out
scas
fld
and
int3
es
rcl
jnp
rcr
mov
test
jmp
mov
icebp
mov
dec
ror
adc
pop
inc
push
add
inc
pop
push
cmps
cmp
shl
pop
sbb
sahf
shl
das
dec
in
fldln2
push
out
add
pop
out
xlat
pop
xchg
mov
push
mov
pop
mov
(bad)
sahf
les
push
rep
adc
push
xchg
fisub
scas
push
sahf
inc
sti
adc
dec
test
mov
xchg
(bad)
jns
jmp
es
push
out
mov
jecxz
es
push
pop
sahf
fwait
gs
in
cmp
adc
(bad)
popa
xor
xor
xor
out
xchg
sbb
out
(bad)
jp
outs
enter
inc
daa
pop
neg
fisubr
push
mov
sub
lahf
sbb
mov
sti
loope
inc
mov
clc
mul
cld
cmps
ret
xchg
pop
out
int
xor
mov
push
inc
retf
jno
out
mov
mov
(bad)
dec
mov
jge
dec
mov
(bad)
int3
and
or
adc
and
mov
pop
inc
xchg
xchg
pop
cmps
fidivr
jp
pop
lahf
pmovmskb
adc
pop
iret
mov
iret
mov
addr16
or
leave
outs
inc
outs
(bad)
stc
inc
enter
lods
lock
adc
sbb
pop
cwde
loop
xchg
es
(bad)
out
retf
push
pop
adc
sub
inc
cmp
fiadd
add
cmp
jne
inc
mov
cmp
je
mov
mov
mov
mov
jmp
cmp
je
mov
mov
jmp
mov
mov
mov
inc
inc
inc
mov
jmp
push
inc
call
pop
mov
movzx
inc
inc
cmp
mov
mov
jne
cmp
jne
cmp
jne
mov
cmp
jne
mov
movzx
test
jne
jmp
cmp
jle
and
jmp
mov
call
mov
jmp
push
push
call
mov
jmp
call
cmp
mov
je
and
jmp
mov
jmp
push
push
call
pop
pop
cmp
pop
jne
push
call
pop
cmp
jne
push
call
pop
cmp
jne
mov
test
jne
cmp
jne
or
cmp
je
mov
and
jmp
cmp
jne
call
mov
xor
push
push
push
push
push
call
add
cmp
je
mov
and
mov
mov
pop
xor
pop
call
add
leave
ret
push
push
push
call
test
mov
jne
ret
mov
and
and
mov
xor
mov
mov
inc
ret
mov
mov
imul
add
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
shr
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
dec
jne
mov
and
jmp
lea
shr
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
imul
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
jne
add
imul
push
push
push
push
call
cmp
jne
xor
jmp
add
mov
mov
imul
add
push
push
push
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
push
push
push
call
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
add
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
or
or
lea
mov
lea
mov
mov
mov
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
and
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
dec
jne
mov
and
jmp
add
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmp
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
test
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
shr
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
imul
add
add
and
mov
sar
push
dec
cmp
push
push
jge
or
shr
or
jmp
add
or
xor
shr
mov
mov
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
jmp
cmp
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmp
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
jne
xor
jmp
push
call
pop
mov
mov
mov
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
and
mov
lea
mov
and
and
or
jne
inc
mov
add
jmp
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
add
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
cmp
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmp
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmp
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmp
jne
push
call
pop
push
call
push
call
leave
ret
push
mov
push
push
push
mov
test
push
mov
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
test
je
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
jne
or
jmp
dec
mov
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
je
mov
mov
jmp
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
test
je
xor
inc
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
je
mov
movzx
push
call
test
pop
je
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
jne
movsx
push
push
call
pop
or
jmp
push
mov
pop
push
lea
push
lea
push
call
add
cmp
jne
call
mov
jmp
add
js
mov
movzx
add
mov
jmp
push
call
pop
pop
pop
pop
leave
ret
push
mov
push
call
cmp
pop
jne
call
mov
or
pop
ret
push
push
push
push
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
or
jmp
mov
and
imul
sar
mov
lea
and
mov
pop
pop
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
je
push
call
pop
mov
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
cmp
push
mov
je
push
call
test
pop
jne
call
mov
call
mov
push
push
push
push
push
call
add
jmp
call
mov
cmp
je
mov
cmp
jg
call
mov
jmp
mov
mov
jmp
mov
cmp
je
add
mov
mov
mov
mov
jmp
mov
mov
mov
lea
push
push
push
lea
push
call
cmp
je
cmp
je
cmp
jge
mov
jmp
call
mov
mov
jmp
cmp
jle
mov
push
push
call
mov
cmp
pop
pop
jne
call
mov
call
mov
jmp
lea
push
push
push
lea
push
call
cmp
je
cmp
jl
call
push
call
pop
xor
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
push
call
pop
and
push
push
push
call
add
mov
mov
call
mov
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
mov
cmp
jb
cmp
jae
movzx
sub
ret
mov
cmp
jae
mov
cmp
jb
cmp
jae
movzx
sub
ret
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
add
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
add
cmp
jb
cmp
jmp
cmp
jb
or
ret
push
mov
sub
mov
xor
mov
push
push
xor
cmp
push
mov
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
mov
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
je
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
cmp
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
mov
cmp
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
cmp
mov
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
jmp
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
add
add
out
add
sub
test
jle
jmp
test
jle
movzx
add
cmp
jge
cmp
jne
mov
add
add
mov
cmp
jmp
cmp
jge
mov
mov
mov
movzx
mov
lea
cmp
jge
mov
cmp
jl
mov
lea
mov
and
cmp
je
test
jne
add
add
cmp
jle
cmp
je
mov
jmp
mov
test
je
test
jne
sub
cmp
jne
mov
push
call
add
test
je
movzx
lea
cmp
jge
mov
add
cmp
mov
jl
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
lea
mov
inc
add
pop
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pusha
inc
add
add
add
add
push
push
add
push
push
push
push
push
push
push
push
add
push
push
pop
pop
or
or
or
or
int3
int3
int3
int3
mov
mov
push
push
push
call
add
neg
sbb
neg
ret
int3
int3
int3
test
je
mov
and
shl
add
cmp
jne
mov
add
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
cmp
push
push
jne
mov
mov
cmp
jne
cmp
mov
jne
mov
cmp
jne
mov
mov
mov
mov
mov
sub
sar
sub
jmp
or
push
lea
push
push
call
mov
add
test
mov
jne
push
push
push
call
mov
and
add
cmp
ja
movzx
jmp
mov
shr
shr
and
cmp
jge
mov
cmp
mov
je
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
mov
shr
shl
mov
mov
pop
pop
add
pop
mov
mov
pop
ret
shr
and
mov
call
mov
pop
pop
pop
mov
mov
pop
ret
mov
test
je
mov
shr
mov
pop
pop
add
pop
mov
mov
pop
ret
mov
pop
pop
mov
pop
mov
mov
pop
ret
shr
and
mov
call
mov
pop
pop
pop
mov
mov
pop
ret
mov
jg
inc
add
popa
inc
add
popa
inc
add
bound
lahf
popa
inc
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
cmp
jne
mov
cmp
jne
cmp
jg
mov
cmp
jne
mov
cmp
jne
mov
sub
cmp
jne
mov
cmp
jne
cmp
jne
mov
mov
mov
mov
mov
sub
sar
sub
jmp
or
mov
mov
mov
mov
mov
and
cmp
je
cmp
je
cmp
jne
mov
push
shr
push
and
push
call
add
pop
ret
xor
pop
ret
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
mov
mov
cmp
jne
mov
cmp
jne
push
mov
mov
call
mov
cmp
mov
jne
mov
cmp
jne
mov
jmp
xor
mov
push
add
push
lea
push
call
mov
push
push
lea
push
push
push
call
add
pop
mov
pop
xor
call
add
ret
int3
int3
int3
int3
push
mov
mov
test
je
push
mov
add
cmp
je
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
pop
cmp
jg
push
push
call
add
add
mov
push
add
push
push
call
add
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
lea
push
push
push
call
push
call
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
mov
xor
cmp
mov
jne
mov
mov
mov
or
push
mov
mov
mov
lea
push
push
mov
mov
call
add
pop
pop
mov
lea
pop
pop
ret
mov
mov
cmp
je
jmp
lea
movsx
add
cmp
ja
movzx
jmp
mov
mov
call
jmp
cmp
je
mov
mov
call
mov
jmp
or
mov
jmp
movzx
mov
jmp
cmp
je
mov
lea
push
mov
call
mov
add
jmp
xor
cmp
mov
jne
mov
mov
jmp
mov
mov
add
mov
mov
cmp
jne
mov
pop
pop
pop
pop
ret
dec
gs
add
fs
add
fs
add
gs
add
gs
add
inc
add
add
add
add
add
add
add
add
add
int3
push
push
mov
push
mov
xor
xor
cmp
push
mov
jne
mov
mov
add
add
mov
jmp
mov
test
je
mov
lea
mov
mov
lea
push
push
push
push
call
push
push
mov
call
add
test
je
test
mov
jne
mov
jmp
mov
mov
mov
sub
cmp
jg
push
push
call
add
add
push
push
call
add
test
je
call
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
cmp
jae
lea
cmp
je
add
cmp
jb
mov
push
push
push
push
call
add
pop
pop
pop
pop
ret
sub
lea
push
push
sar
push
call
add
test
je
mov
push
push
push
mov
push
push
push
call
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
mov
mov
cmp
je
cmp
jne
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
lea
push
push
call
add
test
mov
je
mov
mov
push
push
push
call
add
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
cmp
jne
push
mov
push
push
call
add
xor
ret
push
mov
push
push
push
call
add
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
call
add
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
push
mov
push
mov
mov
mov
push
mov
push
push
push
push
call
mov
add
test
jne
test
jbe
mov
push
push
call
add
sub
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
mov
mov
cdq
push
mov
mov
sub
sar
cmp
jl
cmp
jl
mov
push
push
call
add
jmp
lea
cmp
jge
mov
mov
xor
mov
div
push
lea
cmp
pop
ja
mov
mov
imul
imul
mov
push
push
push
push
call
add
mov
pop
pop
pop
ret
push
push
call
add
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
cmp
je
push
push
mov
lea
cmp
push
ja
lea
push
push
push
push
call
add
jmp
push
call
add
test
mov
mov
jle
mov
xor
mov
rep
mov
xor
cmp
mov
jle
mov
mov
test
je
lea
mov
mov
and
test
mov
mov
mov
mov
jne
mov
mov
mov
add
cmp
mov
jl
mov
mov
add
push
add
push
push
push
call
add
mov
pop
mov
pop
pop
pop
pop
ret
int3
push
mov
lea
cmp
push
jbe
push
call
add
lea
push
push
push
push
call
mov
mov
mov
mov
mov
mov
push
push
lea
and
push
mov
mov
mov
call
mov
mov
mov
mov
sub
and
mov
mov
mov
mov
add
mov
mov
add
cmp
jbe
cmp
jg
add
push
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
mov
mov
shr
add
cmp
mov
mov
mov
jb
movzx
mov
shl
add
mov
shr
add
sub
xor
cmp
jae
mov
mov
mov
mov
mov
sub
and
mov
test
je
jmp
lea
cmp
jne
cmp
mov
lea
jb
mov
cmp
jne
sub
add
add
cmp
jae
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
je
test
mov
mov
jg
or
jmp
mov
xor
test
je
mov
mov
test
jne
push
mov
push
call
add
pop
pop
pop
pop
ret
mov
mov
mov
movzx
movzx
not
and
test
je
pop
pop
xor
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
cmp
jbe
push
call
add
lea
push
push
push
push
call
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
mov
pop
ret
int3
push
mov
mov
mov
add
cmp
jbe
cmp
jb
push
push
push
call
add
mov
push
lea
lea
cmp
ja
mov
push
push
mov
push
push
call
add
jmp
mov
push
call
add
mov
mov
pop
mov
mov
mov
mov
add
pop
ret
int3
int3
push
push
push
mov
xor
lea
mov
mov
lea
lea
mov
add
test
jne
sub
push
push
push
call
or
mov
add
add
add
cmp
mov
jl
pop
pop
pop
ret
int3
int3
push
mov
cmp
jge
push
call
add
test
push
je
mov
mov
push
push
call
add
pop
ret
mov
mov
push
push
call
add
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
push
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
add
test
je
cmp
jl
cmp
jg
push
call
mov
mov
add
jmp
push
push
call
add
push
mov
push
push
push
call
add
mov
push
push
call
mov
add
pop
pop
xor
call
add
ret
int3
int3
mov
mov
mov
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
mov
push
mov
push
push
push
push
call
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
mov
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
cmp
jne
cmp
je
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
mov
add
cmp
pop
jl
mov
push
push
push
call
add
ret
int3
int3
int3
int3
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
lea
add
test
mov
mov
jbe
mov
movzx
add
mov
mov
pop
ret
push
call
add
mov
pop
ret
int3
int3
cmp
sar
adc
es
test
xchg
aad
loop
cmp
sbb
(bad)
sbb
fistp
loope
push
rol
push
push
dec
cwde
mov
pop
test
stos
in
mov
loop
cmps
arpl
sti
fstp
movs
in
les
or
ret
mov
and
xchg
shl
pop
mov
dec
push
xor
xchg
aam
and
adc
sbb
scas
cmp
sahf
(bad)
retf
out
cmp
ds
outs
or
es
ss
pop
(bad)
daa
arpl
add
pop
pushf
es
stos
stos
in
ja
jecxz
xchg
dec
cmp
adc
cmps
ins
push
fdiv
cmp
mov
sbb
mov
clc
cs
mov
sbb
jns
push
cli
ins
test
mov
(bad)
mov
mov
jb
sahf
cmp
or
cmp
sbb
jbe
test
mov
jmp
cmp
adc
dec
xor
lods
fsubr
push
mov
test
xchg
sbb
mov
pop
clc
mov
ret
dec
ror
cmc
jg
leave
cmps
jnp
clc
jecxz
out
inc
into
imul
push
inc
sub
xchg
ins
dec
mov
jno
push
fninit
push
mov
stc
shl
xchg
push
dec
mov
and
add
jge
push
jbe
ja
repz
jecxz
loope
rcr
mov
sbb
ja
inc
and
pop
ret
pop
stos
sti
sub
sub
(bad)
sahf
out
popf
ret
lock
fs
scas
mov
and
xchg
push
sbb
dec
inc
sti
(bad)
xor
imul
lods
dec
out
jns
idiv
mov
imul
push
xchg
mov
adc
mov
sub
mov
mov
test
test
(bad)
push
shr
and
xchg
pop
and
and
fcmove
sub
and
leave
(bad)
div
gs
not
es
addr16
xchg
inc
push
iret
cs
cmp
(bad)
lock
lahf
mov
(bad)
jae
mov
cmp
popf
ins
dec
pusha
aas
outs
(bad)
imul
(bad)
push
mov
outs
cwde
add
push
sub
not
jno
pmuludq
lahf
test
xchg
out
fnstsw
call
(bad)
adc
adc
sub
mov
push
jp
je
sbb
jnp
mov
or
sub
inc
xor
inc
xor
vmread
dec
push
mov
jnp
and
jb
pop
lods
popf
enter
popa
in
or
mov
retf
sub
ja
into
or
xor
mov
div
mov
add
(bad)
jg
dec
xchg
push
pop
push
cmp
xchg
push
cmp
mov
mov
call
mov
sbb
enter
push
sub
pcmpeqd
(bad)
and
out
jae
xor
icebp
loop
add
imul
cmp
xchg
jns
loope
cmp
or
sub
data16
(bad)
sti
xor
inc
shl
movs
jbe
xor
jnp
adc
out
or
cmp
cli
sbb
dec
outs
dec
push
add
cli
cmp
lds
xor
sahf
xor
fcmovb
pop
lock
cmp
mov
(bad)
push
xchg
inc
and
mov
xchg
mov
repz
imul
outs
mov
push
imul
xor
fcomp
jle
sub
inc
push
pop
inc
popa
jne
cmps
mov
cmovb
ret
aam
(bad)
shl
and
xchg
push
loop
or
cld
push
(bad)
jae
xchg
pop
pop
mov
add
mov
cwde
pop
lods
int
mov
sbb
jmp
stos
mov
mov
sbb
jo
sub
in
pop
jmp
jne
dec
pop
mov
out
mov
mov
stos
push
and
out
idiv
pop
sbb
xchg
gs
pop
pop
adc
mov
stos
mov
pop
sbb
push
out
push
mov
ss
mov
out
fisubr
sbb
ss
fwait
jne
fldcw
cmps
daa
or
dec
dec
jbe
jg
sahf
inc
push
mov
(bad)
cmp
outs
jno
clc
mov
add
ret
dec
nop
(bad)
mov
jp
mov
adc
or
loop
inc
fwait
into
pop
jmp
add
jmp
mov
sahf
lea
push
mov
into
outs
jne
ret
push
repz
pusha
jae
cmovbe
(bad)
stos
mov
adc
add
frstor
sub
dec
aaa
dec
cli
lds
inc
pop
xor
es
fimul
push
jecxz
inc
xchg
test
clc
or
cwde
cmp
xlat
out
add
daa
arpl
add
push
mov
in
pop
or
out
mov
mov
and
into
xor
dec
je
ja
and
stos
jno
push
repnz
retf
data16
test
dec
mov
adc
mov
inc
add
es
nop
xor
into
inc
sar
dec
out
jl
adc
aaa
jne
popa
push
mov
in
inc
mov
adc
sbb
add
cdq
(bad)
lods
xchg
out
push
mov
and
retf
daa
ds
xchg
pop
repz
push
(bad)
and
rep
imul
enter
adc
sub
fwait
xor
sub
in
sub
enter
(bad)
das
adc
sub
je
retf
adc
int
inc
mov
dec
push
cmp
pop
xor
out
jns
fst
adc
mov
add
nop
scas
ret
into
inc
pop
dec
xchg
adc
jo
rol
and
or
mov
rol
jae
pop
add
mov
mov
inc
bound
adc
pop
jle
sub
test
xchg
dec
push
mov
mov
aaa
mov
ret
mov
rcr
cmp
push
scas
dec
and
xchg
test
sub
sub
jecxz
pop
lahf
ja
mov
fwait
jae
ds
cli
adc
shl
pop
test
es
mov
adc
retf
mov
(bad)
pop
cmp
fldenv
mov
cmp
push
mov
pop
neg
pop
push
cld
lods
push
pop
xor
or
mov
xor
push
shr
into
jmp
jae
cli
adc
xor
cmp
cmps
adc
in
neg
iret
push
imul
xor
scas
dec
retf
push
fs
cmps
fistp
shl
stos
cmp
or
sub
popf
xor
dec
fs
in
xchg
adc
mov
jnp
in
pop
jmp
pop
scas
fwait
push
xchg
jbe
call
hlt
push
push
inc
mov
ja
mov
data16
in
sub
xor
add
fild
push
or
and
xchg
test
in
shl
clc
mov
daa
push
inc
mov
imul
jae
pop
pop
mov
nop
(bad)
sub
cmps
out
xchg
jo
dec
sbb
imul
or
push
fcomp
jnp
pop
cmps
mov
mov
push
cmps
jae
pusha
adc
or
sbb
sbb
jnp
cmp
lds
(bad)
js
imul
enter
mov
outs
jne
jns
or
mov
not
push
and
push
inc
push
jmp
pop
ffreep
(bad)
push
xchg
cdq
daa
adc
pop
mov
fstp
jae
ror
dec
daa
xchg
cwde
or
hlt
inc
es
in
arpl
mov
inc
or
je
jl
(bad)
gs
mov
xchg
xor
mov
fld
xor
xor
jbe
sbb
mov
xchg
test
and
dec
dec
stos
enter
popa
pop
and
call
cmc
movs
fwait
mov
jae
and
xor
add
fcmovne
shr
into
inc
scas
fiadd
int
dec
cmp
xchg
je
dec
mov
dec
rcr
xor
xchg
or
jmp
dec
mov
jp
int
(bad)
in
xor
(bad)
mov
mov
push
add
fisttp
ins
arpl
icebp
pusha
sar
pop
lahf
mov
outs
add
fwait
jle
cmps
loope
inc
ja
and
jle
adc
in
in
push
inc
cmp
stc
inc
mov
pop
popa
scas
push
mov
inc
xor
cs
jmp
sahf
or
add
cmp
cmp
inc
js
and
dec
fimul
aam
fcmovu
stos
lds
mov
xchg
mov
ins
push
xor
mov
jg
mov
popf
sub
inc
imul
adc
imul
ja
push
push
cmp
pop
pop
lods
mov
sub
dec
sub
mov
cmps
sbb
cmp
in
mov
mov
ss
imul
mov
icebp
outs
(bad)
xchg
mov
fimul
or
sets
stos
in
gs
add
cmps
nop
adc
and
pop
inc
push
xchg
out
jae
mov
idiv
pop
lea
sbb
mov
fs
(bad)
daa
retf
jbe
add
fdivp
sub
or
das
inc
mov
or
cmp
(bad)
sub
int
mov
addr16
bound
gs
jg
pop
mov
sub
xchg
mov
xchg
jbe
addr16
lds
outs
fsubr
add
retf
dec
jg
add
or
scas
outs
jne
push
mov
and
movs
int3
jb
ds
dec
sti
loop
jecxz
add
(bad)
mov
fcom
xchg
xlat
jae
fsub
ds
jae
mov
sub
fs
aam
xor
(bad)
loop
(bad)
dec
ret
aas
push
repnz
xchg
test
mov
sbb
fwait
arpl
shl
(bad)
pop
xchg
and
mov
fiadd
jp
sub
mov
cmps
imul
xor
imul
sbb
stos
retf
inc
pop
addr16
and
addr16
(bad)
(bad)
cwde
mov
jmp
pop
daa
cmp
or
push
shl
mov
mov
cmc
xor
test
in
movs
in
fidivr
jg
add
and
cmp
push
js
loop
scas
imul
inc
xlat
push
in
imul
jl
and
lods
fwait
push
stos
mov
test
jmp
outs
leave
fsub
fidiv
jo
scas
pop
jne
sbb
push
sahf
ss
fs
push
hlt
cli
out
int3
in
sbb
cmps
jmp
cmp
mov
fcomp
xchg
test
add
call
dec
std
mov
outs
jno
lds
mov
test
in
aad
cmp
iret
lods
and
lds
(bad)
pop
jle
add
jp
scas
and
stos
outs
push
jg
adc
hlt
mov
lds
push
push
shl
pop
sub
iret
xchg
xchg
adc
push
jmp
add
fstp
enter
push
movs
inc
adc
nop
inc
addr16
(bad)
(bad)
hlt
jmp
fisub
movs
or
cwde
push
jno
or
sub
loope
cmc
in
mov
loopne
jb
pop
pop
xchg
sub
ret
pop
imul
inc
out
mov
test
repz
stc
push
xchg
arpl
es
lods
mov
jo
mov
ds
cmps
sub
scas
test
and
(bad)
pop
mov
fisttp
fisttp
scas
cmp
out
(bad)
enter
pop
rcr
call
cmp
pushf
out
push
mov
pop
sub
sbb
mov
jns
xor
xor
mov
(bad)
jbe
test
call
(bad)
mov
cmp
mov
xor
and
adc
push
jnp
xchg
sub
fist
mov
(bad)
loopne
inc
in
sbb
mov
jmp
pop
cmp
(bad)
stos
push
jmp
test
lods
jb
xor
jle
sbb
inc
sub
fdiv
call
sub
test
aam
lods
xchg
push
cwde
fld
sahf
cmps
fisubr
fcmovnb
mov
movs
push
xchg
xchg
add
xchg
mov
push
inc
xchg
add
js
xchg
xor
jp
sahf
and
call
sbb
push
add
jno
xchg
es
movs
test
popf
jp
(bad)
adc
dec
repz
pop
daa
repz
jno
ds
gs
xchg
shl
mov
ja
sub
push
cmp
addr16
in
cmp
or
sub
lea
popf
gs
scas
and
pushf
shl
add
cmp
and
jbe
inc
pop
rcl
mov
mov
ret
or
inc
test
sbb
xchg
in
sbb
add
arpl
add
cmp
fmul
je
(bad)
div
aaa
and
xchg
jae
test
push
mov
sets
in
mov
je
mov
mov
ret
out
mov
mov
idiv
ds
enter
scas
(bad)
xor
mov
fistp
mov
dec
jp
fs
daa
jns
or
sbb
jmp
xchg
js
mov
cdq
rcr
rcl
ss
(bad)
xor
fsubr
push
dec
movs
and
add
test
mov
and
rcr
repz
and
or
or
push
gs
fisubr
cwde
sbb
sbb
inc
fadd
not
or
mov
dec
pop
or
sbb
jecxz
fstp
(bad)
movhps
push
dec
test
add
jp
rcl
xor
fmul
in
mov
add
push
stos
xor
sub
push
xchg
dec
in
lea
fistp
or
ins
cmp
mov
ss
mov
adc
mov
call
cmp
outs
out
xchg
cmp
into
test
or
mov
cmp
enter
(bad)
push
lods
push
sti
(bad)
(bad)
ins
and
push
pop
or
mov
xchg
xchg
(bad)
iret
sub
popf
or
adc
xchg
push
jae
cmp
enter
ins
imul
stc
mov
mov
(bad)
out
mov
xor
out
sbb
push
std
std
dec
xchg
fs
cmps
jmp
jnp
pop
cmp
mov
dec
jbe
movs
stos
add
loopne
fld
fcom
lds
repz
dec
add
fsub
jmp
data16
xchg
neg
fild
cmc
popa
dec
repz
push
mov
mov
xor
mov
(bad)
jmp
jmp
(bad)
pop
adc
inc
inc
or
pop
enter
ret
bound
das
push
push
stc
cs
ret
sub
(bad)
call
lock
xor
and
hlt
push
(bad)
call
or
in
neg
leave
mov
xor
and
popf
xchg
push
pop
add
cmps
sub
push
call
arpl
sub
fmulp
push
es
call
cmp
push
fcomp
in
mov
dec
bound
lahf
or
pop
(bad)
imul
ret
pop
inc
pop
lock
movs
outs
stos
push
test
ror
jb
pop
cmp
stos
pop
mov
mov
movs
stos
mov
sahf
pushf
retf
pop
bound
clc
push
mov
pop
dec
movs
adc
movs
pop
jns
mov
inc
int
xrelease
nop
mov
cmp
dec
and
or
imul
test
sahf
pop
mov
dec
(bad)
push
mov
(bad)
inc
jbe
push
push
clc
xor
mov
push
imul
push
pop
dec
cwde
ret
outs
mov
mov
dec
push
or
mov
pop
add
pop
mov
stos
repz
adc
rcr
add
shr
dec
daa
inc
mov
pop
push
sbb
fdiv
movs
enter
jmp
popf
(bad)
sbb
sbb
jae
adc
mov
inc
shr
icebp
xchg
(bad)
ins
outs
sbb
ret
xchg
scas
jae
test
leave
push
enter
jnp
sbb
dec
cmp
xor
jns
jnp
mov
rcl
mov
mul
add
lahf
jnp
ds
pop
out
retf
pop
cmps
cmp
push
pop
inc
rcl
ins
add
inc
push
push
dec
test
mov
in
sub
(bad)
in
in
in
dec
lods
inc
mov
fld
and
ret
not
fisubr
mov
push
sub
sub
and
jno
adc
dec
mov
repz
stos
mov
ror
aad
out
push
push
push
sbb
lahf
stos
cmp
jmp
inc
lods
adc
repz
dec
out
sbb
ret
in
push
push
repnz
and
mov
jmp
popf
fstp
stc
jnp
sub
retf
cmp
add
mul
dec
fwait
adc
cld
xchg
ss
test
xchg
dec
neg
dec
push
cmp
lds
lds
xchg
xchg
lods
sub
std
push
movs
mov
inc
pop
mov
imul
dec
cs
jecxz
mov
add
xor
or
icebp
and
popf
add
push
pop
pop
repz
mov
mov
out
pop
ret
sti
call
imul
sub
push
out
xchg
jp
push
repnz
xchg
mov
mov
dec
mov
cmp
xchg
mov
push
(bad)
jle
fisub
shl
ret
scas
inc
jb
add
push
mov
xchg
add
mov
or
push
lahf
mov
or
jmp
jle
push
es
inc
or
fmul
loop
mov
pop
ins
ror
or
xchg
data16
sar
mov
jb
xchg
sahf
loop
out
jmp
(bad)
jnp
lds
jae
mov
aam
mov
lahf
popa
fidivr
into
sbb
mov
and
and
cli
imul
dec
mov
mul
dec
or
xchg
jmp
or
sbb
gs
adc
icebp
inc
xchg
pushf
xchg
lods
cdq
pop
in
xor
inc
int3
inc
jp
lahf
fist
jmp
(bad)
add
cmp
enter
jle
scas
fld
mov
or
popf
scas
add
dec
xor
popa
into
mov
mov
mov
and
rol
sub
xor
ficom
imul
cmp
loop
pop
in
mov
(bad)
int3
test
es
rcr
out
les
imul
shr
mov
mov
das
lods
add
lods
sbb
ret
jle
inc
xchg
into
call
dec
push
daa
jmp
mov
jecxz
adc
jge
out
inc
sbb
cdq
mov
push
(bad)
repz
sahf
rol
mov
sti
xor
ss
int
jmp
and
cmp
xchg
sbb
jmp
sub
sbb
push
pop
xchg
sbb
ret
aad
dec
enter
inc
repz
aam
or
lahf
fwait
pop
test
dec
popf
out
dec
push
cmc
lods
pop
mov
jae
fst
ja
xor
cmc
retf
jae
mov
ds
test
call
leave
dec
push
inc
xchg
sub
js
shl
pop
int
pop
inc
cld
jb
pop
push
pop
retf
mov
arpl
adc
ja
adc
rcr
stc
xor
in
mov
scas
adc
jnp
stos
and
mov
cmp
(bad)
pop
cmp
add
ss
stos
pop
lds
shl
out
(bad)
imul
lock
pop
test
cmp
in
push
jl
repz
(bad)
in
jp
jnp
dec
loop
movs
sub
cld
movs
repz
enter
leave
gs
repnz
pop
jp
in
xchg
xchg
sbb
aaa
bnd
iret
xchg
or
ss
dec
icebp
jb
out
(bad)
out
xchg
mov
mov
mov
int
test
push
je
xor
sub
adc
imul
mov
mov
cmp
cmp
jle
adc
ss
pop
jle
out
ret
sub
and
jl
(bad)
jb
inc
jb
add
mov
xchg
jbe
icebp
mov
in
call
mov
or
out
movs
mov
or
mul
dec
push
test
dec
jp
lods
mov
xor
retf
ret
push
dec
adc
test
inc
jbe
inc
xchg
mov
mov
mov
in
xchg
cmp
push
dec
seta
mov
repnz
sti
push
leave
mov
mul
sub
pop
inc
stos
push
daa
dec
push
add
cmp
stos
dec
dec
pop
lods
add
cli
xlat
aam
jbe
jp
fxch
cdq
not
pusha
gs
xchg
and
aas
popf
mov
(bad)
fs
lods
(bad)
(bad)
in
or
push
scas
jae
out
jbe
(bad)
fnstsw
repz
test
fst
xchg
mov
xchg
ss
jge
mov
je
xlat
jle
dec
cwde
and
inc
in
xchg
jb
pop
inc
adc
jmp
xor
push
push
sar
es
lock
mov
inc
(bad)
dec
fisub
sbb
or
gs
ins
mov
jne
outs
mov
cdq
cld
dec
call
inc
aaa
jbe
cmps
es
out
dec
outs
xchg
mov
fnstsw
inc
jmp
aaa
es
neg
outs
dec
jmp
lods
xor
push
jmp
sub
das
ss
xor
push
pop
cmp
loope
push
xor
xchg
daa
jmp
xchg
fs
(bad)
jns
dec
jle
stos
mov
inc
xchg
jmp
add
cmps
and
in
js
test
call
outs
push
not
loopne
out
loop
push
or
imul
test
and
cli
and
mov
adc
pop
or
and
xor
mov
stc
cmps
clc
mov
retf
mov
pop
aad
pop
out
xchg
xlat
cmc
cmp
test
je
xchg
(bad)
leave
xchg
lods
scas
cmp
je
push
mov
data16
and
cmps
jmp
ficom
out
outs
(bad)
mov
enter
or
jmp
mov
mov
jl
sbb
enter
stos
xchg
jae
xor
cmp
push
sub
adc
and
mov
pop
inc
or
or
cmp
sbb
bound
sbb
mov
cli
mov
test
cmp
hlt
mov
loop
sub
add
mov
xchg
jmp
les
aas
aam
sar
dec
mov
test
add
xor
and
mov
mov
aaa
mov
push
retf
pop
ins
mov
mov
xor
push
adc
pop
dec
sbb
mov
(bad)
xchg
add
daa
dec
push
push
mov
outs
pop
sti
add
rol
mov
xlat
popa
imul
mov
mov
rol
mov
leave
inc
test
shl
cmp
inc
addr16
(bad)
call
ja
out
repz
es
mov
mov
add
xor
scas
call
xchg
sub
lock
test
xchg
je
leave
push
les
jmp
add
mov
mov
and
cli
loop
dec
pop
es
xor
xchg
cmps
retf
cmp
cmp
pop
or
sub
sbb
lock
or
cli
clc
pop
mov
push
sbb
mov
hlt
sbb
sbb
xor
cld
out
sti
inc
lahf
repnz
ja
popf
je
jne
fidiv
les
iret
(bad)
inc
test
(bad)
cmp
cmp
dec
jnp
xchg
mov
stos
pop
imul
imul
(bad)
fwait
mov
jmp
add
pop
add
fwait
and
cmp
adc
loopne
je
out
nop
cli
(bad)
dec
(bad)
and
fwait
cmps
mov
adc
push
pop
or
and
sahf
fcmovnb
mov
imul
xlat
mov
out
lds
dec
sbb
jno
add
out
aaa
sbb
sti
mov
into
fwait
cmp
in
into
pop
dec
ja
idiv
xor
cmp
jl
inc
cmps
test
fadd
push
scas
pop
addr16
inc
leave
icebp
outs
into
mov
or
pop
mov
enter
pop
mov
out
inc
cmp
lock
jbe
add
imul
(bad)
test
loop
in
xchg
xchg
imul
mov
pop
icebp
cmps
mov
dec
jmp
outs
jg
ss
mov
lods
imul
or
xchg
ss
jbe
push
push
ret
popa
ss
outs
and
shl
or
push
sbb
cs
iret
popf
pop
into
shrd
push
adc
test
xchg
lods
(bad)
sti
mov
lea
mov
mov
mov
inc
sbb
cld
mov
movs
ss
imul
in
adc
jmp
pop
sub
cdq
pop
(bad)
cwde
push
addr16
sub
push
jns
add
fwait
enter
outs
movs
and
je
add
aaa
jle
add
enter
mov
sub
mov
mul
icebp
enter
adc
out
pop
cmps
adc
mov
mov
sti
sti
(bad)
int
out
mov
in
jns
adc
cmp
test
(bad)
mov
test
sbb
call
xchg
shl
push
mov
or
xchg
int3
es
addr16
xor
stos
adc
pop
popa
xor
or
push
xchg
stos
inc
jmp
in
ds
mov
test
cwde
cmp
xor
inc
dec
inc
out
dec
add
mov
fist
(bad)
lahf
test
mov
or
and
mov
mov
ret
fwait
es
das
push
in
push
jg
xchg
mov
or
bound
dec
adc
or
retf
xor
push
xchg
or
jnp
mov
sub
pop
imul
loop
cdq
inc
aaa
into
in
repz
shl
sub
stos
push
into
call
in
idiv
gs
jge
sbb
push
out
sbb
cwde
iret
out
push
dec
je
or
je
lods
loope
pop
or
cmp
in
mov
cmps
in
scas
inc
xchg
retf
dec
push
addr16
sub
jnp
es
loope
adc
mov
data16
test
call
add
dec
adc
jecxz
jbe
push
xor
out
or
rol
mov
cs
push
xlat
push
mov
mov
adc
cmp
mov
int
mov
cmp
jno
mov
push
mov
jecxz
cmp
(bad)
and
js
rol
movs
xchg
(bad)
out
in
addr16
nop
rcr
sbb
adc
cmps
sbb
jge
ret
pushf
fldcw
mov
cli
adc
sahf
cmp
xchg
popa
bound
sub
inc
imul
fstp
mov
add
pop
ret
scas
ret
(bad)
jg
pop
push
popf
mov
sbb
lds
les
push
fild
adc
xchg
xor
inc
pusha
jle
es
jg
push
adc
push
pop
push
ds
sbb
dec
mov
cld
push
and
sahf
fwait
or
mov
cmp
ret
fsubr
cmps
fwait
cs
xchg
add
mov
test
scas
or
pop
aam
sbb
add
jns
push
sbb
imul
push
pop
ror
inc
jecxz
test
call
cmp
sbb
xor
inc
pop
addr16
mov
fwait
repz
lds
sub
retf
(bad)
add
push
(bad)
call
fbld
cmps
xchg
and
pop
or
jmp
leave
stos
out
mov
cmp
dec
push
xchg
push
xchg
pop
(bad)
fcom
imul
stos
adc
call
push
data16
sbb
call
leave
xchg
hlt
sbb
fdivr
mov
pop
in
sbb
int
test
or
neg
xor
sar
in
mov
add
push
add
jo
cdq
ins
adc
xor
sbb
(bad)
cld
(bad)
push
push
pop
jmp
sbb
jb
sub
arpl
movs
pop
mov
fmul
cmp
adc
mov
cmps
dec
push
push
out
inc
movs
scas
call
mov
loopne
sub
pop
sub
jge
int3
adc
ins
loop
test
sbb
jb
jno
cmps
jne
(bad)
shr
inc
mov
adc
push
push
add
pop
sbb
out
ret
test
dec
cmp
es
loop
jo
or
mov
mov
pop
loopne
jp
dec
test
iret
xchg
(bad)
mov
adc
ds
bound
push
mov
out
dec
cmp
push
mov
sub
cmc
call
jle
mov
outs
inc
xlat
mov
xchg
mov
dec
dec
push
mov
inc
add
dec
sub
or
arpl
data16
gs
mov
pop
adc
mov
ss
loope
xor
arpl
enter
stos
jb
cmp
mov
hlt
fcom
dec
xchg
xor
inc
pop
or
sbb
inc
jl
push
ss
sub
gs
push
cmps
add
or
sub
std
in
cmp
and
mov
jb
or
retf
and
sub
shl
jecxz
mov
inc
ret
or
pop
xor
add
jle
mov
cld
mov
jno
xor
push
out
sub
movs
test
xchg
loop
push
push
jmp
or
inc
mov
or
lahf
push
stc
enter
fs
sub
dec
jno
ja
push
mov
mov
fidiv
nop
mov
call
movs
lds
aaa
jmp
sbb
xchg
es
push
les
imul
call
bnd
int
jmp
adc
add
xlat
icebp
sbb
clc
mov
mov
outs
cmp
adc
sub
dec
(bad)
repnz
or
cmp
pop
mov
daa
mov
jb
adc
fwait
or
aaa
scas
dec
or
(bad)
and
call
into
add
and
les
adc
in
ficomp
inc
shl
test
mov
stos
sbb
push
adc
mov
call
ss
lock
cmps
(bad)
pop
add
jmp
mov
or
ds
add
les
cmp
push
stos
sub
cdq
shr
(bad)
inc
dec
pop
xchg
and
and
int3
add
mov
sbb
jge
push
in
inc
jg
dec
repz
les
push
sub
sar
dec
retf
popf
test
lahf
rcr
test
add
dec
inc
push
add
pop
sub
fist
mov
lahf
movs
rcr
mov
mov
sub
les
fucom
(bad)
fnstcw
repz
xor
addr16
aam
inc
ret
push
dec
dec
jnp
mov
arpl
shr
js
popa
xchg
pop
cli
fidivr
fwait
adc
ret
ds
mov
mov
ins
push
jl
test
ficom
jae
push
push
shr
pop
mov
push
pop
mov
dec
inc
mov
fidivr
js
fild
push
jno
or
cmp
pop
(bad)
arpl
leave
mov
cs
popf
out
inc
dec
popf
jp
data16
enter
cmp
mov
call
stos
and
fild
mov
sub
jg
jnp
outs
stos
push
jmp
das
jmp
aad
push
jne
dec
or
out
in
es
fsubr
mov
inc
sub
push
push
fidiv
sub
sbb
(bad)
aas
lahf
scas
mov
cdq
xchg
cmp
xchg
mov
icebp
mov
(bad)
push
into
aas
sbb
pop
mov
xchg
loop
or
mov
xor
cmc
je
push
test
or
in
rol
out
adc
out
mov
pushf
jmp
inc
xor
cli
outs
push
int
pop
jmp
call
jne
or
out
repz
add
daa
icebp
aas
dec
dec
pop
sub
jecxz
les
ins
(bad)
sbb
fs
out
add
imul
sub
jmp
(bad)
fbld
or
push
(bad)
mov
xchg
call
jl
and
in
out
push
inc
fdiv
and
mov
mov
push
cmp
xor
out
jmp
xchg
test
sub
in
ds
jg
push
add
inc
mov
lods
xor
rcr
cli
cs
inc
xchg
jmp
in
dec
inc
sub
cmps
imul
sbb
(bad)
mov
data16
xchg
jbe
mov
into
std
inc
push
shl
outs
jo
pop
adc
adc
das
mov
sub
adc
(bad)
call
mov
outs
inc
dec
imul
sbb
xor
ror
push
dec
jecxz
mov
bound
in
add
cmc
mov
aam
add
dec
pop
ja
push
mov
lea
lea
mov
inc
hlt
fstp
push
addr16
jmp
cwde
xor
jle
mov
xchg
mul
scas
mov
adc
sbb
inc
jmp
mov
int3
jae
test
adc
pop
xor
dec
or
xor
ss
jecxz
mov
mov
out
push
(bad)
neg
daa
cmp
adc
sahf
sbb
pop
sbb
pusha
mov
add
out
fs
adc
xchg
sub
mov
les
ja
jno
nop
movs
lea
out
hlt
arpl
and
adc
jle
pop
push
lds
call
pop
(bad)
loop
stos
(bad)
aad
popa
daa
test
mov
sub
jp
mov
inc
lds
push
repz
movs
or
ret
mov
fcmovne
cdq
mov
movs
jb
xlat
test
je
jl
cmc
out
jno
aad
pop
ficomp
and
adc
jl
cmp
adc
or
push
push
add
jle
stc
aad
in
jno
inc
stos
jp
aaa
dec
dec
add
retf
dec
std
(bad)
div
adc
jmp
pushf
ret
cmp
add
sbb
pop
shl
xchg
cmp
xchg
mov
hlt
rcl
add
xchg
dec
pop
dec
push
sti
cmps
mov
or
mov
out
mov
aaa
mov
out
or
and
addr16
lea
aad
xchg
mov
xchg
jmp
ret
lea
push
pop
out
or
push
in
idiv
mov
mov
mov
push
mov
sub
push
dec
pop
hlt
jae
inc
push
(bad)
sub
jns
mov
mov
jnp
pop
pop
sbb
dec
retf
sub
push
movs
mov
cwde
je
(bad)
push
jl
or
int
test
ret
adc
stos
inc
enter
mov
cmc
mov
lea
or
mov
cmp
push
lods
sti
arpl
dec
pop
lahf
sbb
in
sbb
mov
(bad)
push
scas
jbe
push
ss
mov
push
or
mov
xchg
rcl
dec
jmp
(bad)
sub
and
mov
sub
mov
mov
mov
mov
retf
in
or
retf
mov
pop
push
setne
adc
xor
mov
sub
add
pop
jmp
cli
(bad)
mov
mov
out
xlat
sahf
repz
ficom
or
push
in
jecxz
mov
sbb
or
(bad)
lods
(bad)
dec
ins
or
fs
mov
rcr
enter
or
mov
adc
std
push
xchg
addr16
fsubr
test
cmc
or
daa
aad
pop
mov
jae
ds
popf
ja
hlt
mov
cli
sbb
dec
enter
mov
enter
mov
mov
mov
mov
mov
push
pop
mov
div
cmp
and
inc
je
add
(bad)
mov
sar
xor
jmp
and
test
or
test
mov
push
jecxz
imul
inc
stos
mov
mov
add
cmp
stos
jge
mov
wbinvd
and
and
adc
(bad)
jmp
push
retf
cwde
pusha
dec
add
and
mov
cmp
movs
mov
test
fs
push
(bad)
iret
xchg
ret
stos
pop
je
hlt
mov
aam
outs
stos
sbb
and
mov
retf
cmc
fidiv
or
(bad)
sbb
or
retf
addr16
cwde
mov
xchg
arpl
dec
retf
push
mov
out
sub
push
test
adc
gs
sbb
sbb
and
ret
sub
aaa
in
jmp
cmps
fidiv
adc
loopne
(bad)
jmp
int3
je
mov
(bad)
xchg
cmp
jne
inc
inc
outs
push
fcomp
xchg
(bad)
xchg
ja
inc
and
sbb
(bad)
in
sub
ss
mov
dec
add
xchg
repz
retf
push
sub
dec
mov
es
popa
sahf
loopne
push
into
inc
jp
addr16
sbb
cmp
pop
test
xor
mov
scas
or
jmp
mov
out
pop
call
daa
(bad)
dec
or
retf
jl
mov
mov
pop
sbb
int3
mov
cmps
fstp
stos
jbe
addr16
test
gs
retf
adc
inc
push
stc
mov
inc
mov
jae
sbb
dec
lock
xchg
rcl
loopne
fwait
jne
push
mov
mov
push
xchg
aaa
iret
fisub
adc
rdmsr
mov
add
mov
push
faddp
dec
xchg
inc
mov
cmps
in
gs
into
xchg
push
outs
sub
cmps
inc
jmp
enter
pusha
adc
(bad)
jp
sbb
inc
mov
das
jmp
aas
in
mov
jne
sbb
ds
mov
fnsave
outs
mov
mov
(bad)
adc
jno
jp
inc
add
clc
inc
dec
mov
push
pushf
inc
jecxz
stos
ret
lds
cmps
cmps
mov
fsub
dec
sar
(bad)
loop
pop
dec
and
cwde
xchg
cmp
inc
dec
dec
in
sahf
ret
fbld
xor
adc
adc
cmp
mov
repnz
out
or
retf
fdivr
addr16
pop
sbb
jo
jo
dec
mov
repz
aad
mov
loop
sahf
dec
jl
adc
stos
cmp
sbb
sub
jo
push
fsubr
lods
sbb
jg
pop
push
mov
idiv
mov
cmp
into
retf
jbe
ja
les
mov
out
and
xchg
pop
push
push
add
ins
xor
inc
mov
push
rcl
mov
jg
hlt
push
fdivr
hlt
popa
hlt
pop
lahf
or
mov
stos
loope
loop
jb
imul
sub
and
in
pusha
sub
jecxz
cmp
data16
outs
cli
jo
imul
pop
jl
aam
mov
scas
and
cli
fisubr
out
(bad)
mov
mov
jae
sahf
sbb
push
push
mov
dec
in
cwde
test
pusha
adc
mov
ss
pop
shr
leave
cmps
add
xchg
push
sub
jns
jecxz
xchg
rcr
daa
inc
in
sub
cmp
(bad)
int3
fiadd
jb
lea
lahf
stos
pop
adc
lock
add
call
ss
stos
cmp
adc
mov
xchg
sub
mov
inc
or
in
sub
or
dec
dec
pop
stc
aas
push
add
scas
jecxz
pop
sub
sub
ins
stos
shr
jle
dec
pop
mov
ret
or
mov
jbe
ss
out
jecxz
in
push
mov
and
retf
mov
sbb
(bad)
cmps
sbb
lds
loop
push
inc
ret
push
repnz
pop
jmp
mov
leave
idiv
mov
fistp
jge
xchg
cmp
pop
dec
push
xor
and
sahf
sub
out
hlt
or
daa
dec
pop
jnp
push
push
adc
sahf
push
push
fild
jecxz
imul
sbb
call
add
add
lods
fs
pop
sbb
dec
scas
inc
movs
mov
inc
cmps
retf
in
les
mov
pop
fstp
loope
push
jle
sub
in
inc
enter
mov
sahf
retf
xor
sub
call
inc
push
frstor
push
test
lock
mov
int
mov
cs
sub
mov
cmp
inc
add
sub
cmp
out
test
les
mov
push
mov
mov
jecxz
xchg
cmp
or
sub
imul
sahf
movs
pop
ret
and
imul
sub
clc
popf
stc
call
mov
mov
and
xchg
aam
outs
rol
mov
cmp
imul
mov
(bad)
in
jno
test
or
mov
(bad)
pop
mov
inc
jmp
lock
(bad)
mov
jle
xor
pop
stos
call
cli
sahf
xlat
add
cmp
inc
dec
loope
cdq
lds
mov
loope
data16
loope
inc
out
into
inc
pop
aaa
pop
cmp
dec
push
mov
dec
xchg
mov
mov
stos
sti
mov
mov
xchg
or
and
lods
push
mov
call
ja
inc
sti
adc
stos
or
mov
inc
push
stos
dec
call
iret
pop
and
lahf
sahf
test
cmovl
dec
xchg
sqrtps
movs
jno
mov
out
pop
xor
retf
jecxz
mov
les
jnp
sbb
mov
mov
xchg
int3
sbb
sub
lods
(bad)
hlt
or
mov
and
and
inc
xor
iret
xor
mov
jo
int
out
(bad)
push
cmp
sub
sbb
(bad)
repz
pop
fld
cdq
dec
push
or
fisub
sahf
out
jle
aad
scas
add
es
and
mov
ins
lahf
addr16
sbb
rcr
test
jae
mov
sbb
fs
leave
xor
in
xchg
xchg
inc
sbb
imul
fimul
mov
mov
xchg
(bad)
sbb
hlt
stc
loop
pop
aas
mov
inc
dec
shr
pop
push
mov
movs
out
pop
add
mov
adc
xchg
mov
pop
data16
xchg
arpl
jns
lar
push
call
cmp
mov
adc
stos
hlt
pop
ss
mov
or
jne
imul
in
mov
jns
sub
arpl
leave
stc
imul
scas
adc
sbb
jg
outs
ja
in
mov
mov
cs
loope
loope
cmps
or
aad
sub
cmp
inc
mov
cmp
push
jns
icebp
push
sub
dec
pop
xchg
into
pop
push
pop
out
sbb
pop
xchg
outs
mov
retf
cdq
jo
cwde
pop
dec
sub
cmp
out
mov
scas
rol
inc
and
push
and
mov
jmp
shr
(bad)
ficom
std
pusha
aam
push
stos
dec
push
(bad)
mov
arpl
js
call
repz
jo
xor
fnstcw
ror
pop
xchg
test
in
(bad)
retf
das
push
sbb
sbb
sub
outs
cdq
loop
or
pop
fidiv
jecxz
ficom
mul
sbb
or
and
das
sti
outs
fist
add
rol
retf
jg
push
sbb
div
daa
pop
push
push
inc
ss
xor
sbb
xchg
xchg
or
aam
movs
jb
xchg
xor
xchg
lods
adc
jno
push
inc
mov
pop
pop
loope
adc
inc
std
clc
sbb
dec
pop
cmp
stos
fcmovne
push
xchg
pop
fwait
push
and
adc
jb
adc
mov
inc
and
movnti
adc
push
xchg
rol
sub
push
push
retf
inc
dec
imul
and
mov
push
mov
xor
push
add
call
pushf
push
inc
test
mov
jle
ja
ja
push
sbb
inc
dec
aaa
or
dec
xor
test
repnz
out
neg
adc
sbb
jmp
lods
scas
sbb
and
ror
lds
fdivp
xchg
test
or
mov
std
mov
xchg
inc
std
mov
out
mov
adc
or
jo
sahf
dec
jecxz
adc
ja
xor
and
dec
fldenv
xchg
mov
push
jmp
int
adc
jmp
sbb
mov
gs
adc
mov
fisubr
movs
cwde
nop
jmp
xchg
out
scas
jnp
sahf
mov
imul
cli
jg
mov
sbb
mov
fist
cmp
jle
or
dec
hlt
cmp
xchg
mov
or
mov
jp
dec
stos
shl
pop
nop
jle
and
xchg
sbb
xchg
ret
pop
(bad)
dec
repz
rol
push
sbb
cmp
pop
lea
inc
fstp
leave
addr16
jnp
dec
sbb
call
jae
jnp
or
lods
xchg
loopne
push
lds
imul
movs
es
jns
xchg
les
fsub
aam
in
or
movs
pop
ret
lds
(bad)
clc
sbb
jo
xor
cdq
sub
push
adc
jns
data16
mov
inc
(bad)
shl
push
out
stc
retf
hlt
retf
cdq
xor
mov
inc
into
jno
int
mov
or
outs
out
add
ret
pop
mov
inc
dec
add
inc
mov
(bad)
mov
mul
fmulp
mov
xchg
xchg
sbb
mov
(bad)
cmc
push
imul
mov
dec
fisubr
in
fisttp
test
movs
mov
pop
sbb
pop
in
(bad)
shr
ins
cs
scas
mov
loop
int3
pop
jnp
or
das
js
sbb
sub
mov
mov
lods
dec
je
outs
mov
cmpxchg
xchg
call
repz
(bad)
sahf
adc
mov
xchg
inc
inc
mov
into
push
xor
push
sub
mov
repz
movs
dec
add
cmps
fistp
es
retf
inc
inc
pop
add
sar
pop
(bad)
shl
add
or
out
cmps
lea
iret
dec
dec
ror
jae
push
or
push
push
retw
push
mov
outs
std
or
sub
mov
mov
xor
and
push
push
mov
inc
scas
push
jg
mov
call
dec
jae
repnz
bnd
mov
pop
iret
mov
aaa
dec
stos
fwait
mov
or
leave
sub
retf
fsub
idiv
xchg
pop
inc
push
imul
add
xlat
sbb
lahf
mov
push
imul
mov
mov
neg
fadd
or
aas
push
imul
add
xor
push
neg
(bad)
scas
mov
mov
pop
fwait
cmc
in
push
cmp
sbb
mov
iret
push
aas
scas
mov
retf
(bad)
into
mov
fsubr
cmp
pushw
cmovb
movs
xchg
ds
neg
jno
cmps
cmp
out
(bad)
mov
add
arpl
call
fld
icebp
add
adc
cmp
cmps
cmps
xchg
jp
pop
dec
xor
movs
or
xchg
movs
repz
shl
jle
psubd
idiv
push
jmp
push
add
and
sub
and
add
jno
int
and
mov
and
lea
mov
ds
jp
outs
imul
cmp
adc
(bad)
push
or
shr
cmp
sti
mov
xor
ret
popa
repnz
lss
or
mov
call
xchg
in
mov
mov
iret
pop
out
xorps
xor
sbb
adc
xor
mov
xchg
add
cmc
add
aad
or
mov
lods
cdq
(bad)
cmps
inc
inc
xchg
mov
mov
sub
dec
into
je
mov
dec
cmp
and
mov
fs
push
dec
nop
fwait
mov
idiv
sbb
aad
xchg
mov
cld
(bad)
or
cmp
sti
sub
inc
jnp
push
xor
sti
lds
push
sbb
pop
ret
adc
fist
stc
addr16
and
pop
dec
xlat
pop
add
pop
mov
test
test
and
je
mov
mov
(bad)
jmp
or
mov
(bad)
sub
pop
repz
outs
ss
adc
rol
(bad)
(bad)
cli
popa
fwait
loopne
lods
cdq
push
and
loopne
call
loopne
pop
jbe
sti
iret
in
push
jl
out
xchg
cwde
icebp
shl
sti
and
push
sahf
mov
pop
xchg
arpl
mov
sub
cmp
dec
jae
ss
jae
inc
push
mov
cld
dec
jae
lahf
pop
imul
mov
sbb
push
add
aas
cmps
mov
add
out
add
(bad)
(bad)
out
xor
adc
sbb
sub
pop
and
loope
rcr
or
pop
idiv
retf
pop
jmp
sahf
and
inc
mov
mov
les
stc
cmp
cmps
int3
imul
or
dec
add
fistp
into
imul
jmp
cwde
jae
ret
sbb
sbb
inc
mov
mov
retf
stos
aad
stos
stos
out
mov
dec
inc
push
adc
jns
mov
mov
mov
aas
pop
(bad)
sbb
sbb
stc
mov
xchg
pinsrw
jecxz
test
sti
jle
cmp
fcomp
pop
pop
jp
or
push
mov
lahf
test
loopne
aad
add
fwait
mov
retf
dec
and
pop
rcr
dec
sbb
stos
cld
push
in
cld
push
or
clc
push
sbb
mov
ror
pop
ret
data16
push
inc
xor
mov
dec
inc
mov
and
pop
mov
pop
pop
mov
cmp
sbb
sbb
xlat
popa
scas
nop
dec
mov
jmp
mov
sbb
pop
mov
ins
loope
sbb
shl
movs
loope
out
inc
jmp
scas
mul
and
and
mov
fisttp
inc
sbb
test
cmp
retf
test
adc
fidiv
in
fisubr
jb
xchg
movs
sbb
rcl
adc
pop
nop
(bad)
in
fld
jnp
fnsave
daa
push
cmp
in
mov
inc
mov
add
jge
sub
movs
lock
enter
cmps
cmc
cmp
inc
jnp
jmp
add
clc
(bad)
jp
sbb
fnstsw
ins
ror
fnstenv
lock
daa
out
mov
inc
xor
xchg
sbb
lea
pop
imul
and
pop
scas
xchg
fist
sbb
sbb
pop
repz
xchg
les
xchg
inc
jg
sbb
rcr
aad
pop
pushw
cmp
or
xor
pop
inc
add
xchg
repz
mov
mov
dec
xlat
cld
repz
punpcklbw
ins
dec
cld
sub
jb
inc
xor
pusha
inc
mov
push
arpl
adc
mov
cmps
or
dec
scas
xor
stos
ror
push
push
clc
push
push
dec
ror
mov
pop
jbe
cmps
out
mov
dec
pop
pop
fmul
or
shr
jnp
sbb
xor
in
loopne
daa
popa
push
push
out
clc
aaa
mov
cmp
xchg
ret
jle
add
mov
lods
out
nop
(bad)
jnp
mov
leave
movs
int
movs
or
adc
lock
iret
xchg
(bad)
fiadd
rol
adc
imul
adc
jl
in
jae
stc
mov
jbe
cmp
jl
(bad)
ja
popa
mul
scas
test
fld
xor
xchg
jbe
jne
xchg
jl
cmps
push
dec
inc
jle
test
dec
into
mov
ins
arpl
arpl
inc
loopne
ret
sti
sub
xlat
cmp
daa
cmp
cld
mov
lock
add
add
adc
jg
xor
mov
in
mov
sub
test
dec
aaa
aam
gs
push
push
int
fwait
mov
mov
(bad)
xchg
shr
cmps
out
(bad)
adc
xchg
dec
test
cmps
or
push
xchg
(bad)
lahf
hlt
gs
cli
inc
jge
mov
repz
je
xor
inc
pop
and
pop
add
cli
xchg
fbld
bnd
mov
push
push
or
(bad)
and
aas
pop
add
push
lods
mov
in
sbb
xor
ja
mov
imul
pop
cmp
jmp
dec
scas
jg
push
retf
dec
(bad)
sahf
into
or
jo
imul
test
and
sbb
pop
in
cli
sti
jecxz
push
test
jecxz
in
xlat
jo
ja
jbe
or
arpl
mov
push
add
push
scas
sahf
add
call
or
outs
bound
push
data16
out
leave
mov
sub
mov
mov
cli
outs
stos
or
xchg
imul
mov
scas
mov
idiv
repz
mov
lock
ins
jne
pop
ja
test
xor
adc
(bad)
cwde
cmc
jmp
xchg
data16
rcr
jmp
adc
or
cmps
xor
ret
xor
ins
retf
push
loopne
mov
ss
sbb
mov
sbb
sar
pop
dec
sub
fiadd
adc
stos
rol
add
nop
add
adc
pop
clc
ficom
cld
in
fmul
mov
adc
mov
in
lea
adc
ret
cmc
inc
gs
fisub
push
sbb
xchg
div
fist
inc
fst
sub
dec
or
dec
jge
mov
jle
inc
dec
or
jmp
mov
sbb
jae
call
cmp
mov
shl
jmp
xor
pop
push
arpl
imul
adc
js
retf
sub
push
pop
fs
jl
sbb
mov
fs
jbe
sbb
push
pop
(bad)
fbld
sbb
jno
jecxz
push
mov
sbb
fsubr
retf
in
mov
jmp
xor
das
pop
les
jnp
mov
icebp
push
mov
mov
jecxz
dec
push
gs
mov
icebp
push
cmps
in
sbb
dec
mov
mov
mov
mov
movs
push
mov
push
and
ins
stos
les
jle
push
lods
mov
sbb
inc
je
inc
out
les
pop
jns
(bad)
mov
mov
jmp
jb
xchg
cmp
in
pop
clc
and
or
or
sub
mov
mov
ror
xor
aas
ret
fsub
retf
vmwrite
or
fdiv
mov
cmp
pop
mov
push
push
sbb
xor
xchg
imul
mov
retf
mov
xchg
enter
jmp
add
in
inc
sub
out
push
dec
cli
repnz
pop
jno
fisubr
shl
lahf
xchg
ja
aad
mov
sti
xchg
mov
push
std
test
push
push
push
pop
stos
push
mov
ins
(bad)
jmp
xchg
jmp
xchg
test
div
push
arpl
nop
adc
es
jo
jle
dec
push
pop
pop
dec
loop
test
je
sahf
mov
mov
fild
mov
or
or
gs
mov
jbe
mov
mul
shld
callw
ds
les
push
nop
repnz
(bad)
mov
ss
xchg
jle
out
fcomp
mov
in
pop
pop
ret
jecxz
(bad)
shl
ins
mov
rol
sub
cmp
push
push
or
shr
push
inc
xor
jg
inc
lock
pushf
sub
add
sar
jnp
outs
xlat
adc
imul
add
into
mov
push
mov
imul
stos
in
fist
leave
ficomp
mov
movs
stos
adc
shl
or
cli
movs
jae
outs
mov
cmps
jp
and
dec
jmp
mov
ss
int
push
repnz
aaa
ins
jle
xchg
imul
shl
mov
xor
hlt
push
jle
out
(bad)
xor
dec
xchg
(bad)
pop
pop
fldl2e
xlat
inc
mov
xor
addr16
jb
fldln2
(bad)
outs
push
xchg
xor
test
dec
out
mov
in
push
les
dec
xor
pop
and
jno
push
jg
sahf
pushf
inc
cmp
cmc
cli
adc
lds
or
fwait
std
jnp
movs
mul
xor
xor
sub
ficom
cld
xchg
sbb
add
jp
mov
jne
xor
mov
xlat
cli
push
data16
jbe
fbld
mov
test
and
xor
mov
mov
mov
pop
(bad)
fwait
jbe
sub
sbb
xchg
call
sbb
clc
mov
pop
push
push
ds
repnz
retf
lock
jmp
add
xchg
pop
js
rcl
jl
gs
push
data16
aas
ja
test
dec
in
(bad)
ficomp
popf
call
sti
mov
cmps
inc
push
sbb
(bad)
mov
push
out
jo
enter
push
in
outs
lds
outs
xchg
pushf
inc
retf
bound
inc
jle
popf
inc
add
retf
mov
sbb
mov
xchg
jbe
xor
push
jmp
fmul
pop
mov
mov
xchg
and
sahf
mov
aam
movs
inc
jne
jl
sub
adc
cmps
repz
outs
les
pop
jle
into
push
icebp
sbb
xchg
mov
in
fst
push
std
cmp
cmc
fwait
lahf
ror
retf
and
add
push
push
imul
out
jns
fcmovne
cmps
jle
add
(bad)
push
xchg
inc
cmp
cli
ret
(bad)
fistp
inc
or
or
sub
nop
xor
cmp
jge
sub
in
or
pop
adc
push
ror
repz
imul
les
inc
pop
xor
cmp
test
dec
pop
hlt
mov
daa
push
in
ins
imul
jg
sbb
shl
dec
scas
fs
mov
movs
lea
xchg
leave
lds
inc
mov
push
sbb
mov
imul
pushf
cmps
or
mov
shl
int
jecxz
fistp
hlt
sbb
inc
retf
sub
pop
cwde
std
mov
hlt
cld
rcl
shl
adc
jnp
dec
fiadd
inc
xchg
inc
xchg
dec
mov
fisubr
pop
out
dec
aaa
pop
adc
aas
movzx
xor
or
mov
shr
aad
push
dec
pop
adc
xor
mov
ins
xlat
dec
jg
xor
out
cmps
cmp
clc
dec
fld
aam
pusha
adc
sub
imul
pop
jg
sbb
in
adc
or
push
out
dec
pop
xchg
mov
pop
xor
push
mov
out
xor
lea
setae
pop
ror
sbb
sub
push
xchg
mov
push
or
adc
cmp
ss
test
retf
sub
mov
cmp
mov
push
jmp
jecxz
pusha
add
adc
adc
push
jns
inc
jb
bound
dec
shr
(bad)
cli
in
adc
jbe
cli
stc
xchg
jne
add
inc
xchg
scas
aaa
jns
lds
add
jmp
adc
stos
(bad)
(bad)
fcomp
imul
(bad)
sbb
movs
jbe
adc
lahf
mov
dec
out
ds
leave
sub
test
jl
jmp
das
xchg
fucomi
aas
mov
and
push
pop
or
ins
push
shl
and
dec
(bad)
retf
aad
div
ja
push
in
rol
jno
add
gs
stos
cmp
(bad)
or
in
rcl
dec
jg
pop
xor
lea
jmp
cdq
xchg
pop
mov
les
adc
dec
enter
dec
cmp
loope
ins
jno
or
dec
pop
(bad)
cmp
(bad)
mov
cli
cdq
xlat
aam
imul
inc
jle
and
adc
adc
push
mov
es
jne
or
out
xor
sbb
es
neg
push
adc
lock
add
mov
(bad)
scas
inc
out
inc
test
retf
push
cmps
xlat
ins
push
jmp
jns
sub
push
add
call
jge
aas
in
loop
out
mov
or
sar
mov
das
sahf
movs
fisttp
repnz
and
(bad)
(bad)
xor
outs
je
lods
not
outs
jno
sar
mov
add
jmp
imul
in
adc
ficomp
jecxz
cmps
and
pop
bound
gs
cmp
adc
mov
lock
jge
xlat
pop
imul
mov
mov
xor
sub
add
je
mov
ins
mov
mov
imul
cmp
cmp
das
les
in
sub
arpl
daa
adc
loope
xchg
es
mov
pop
cs
push
or
sub
xchg
test
repz
mov
shr
fdivr
movs
movs
ss
into
pop
sub
repnz
mov
ja
ficom
pop
inc
mov
dec
mov
daa
add
xor
cmps
xor
ficom
(bad)
mov
mov
xchg
xor
retf
clc
call
xchg
adc
pop
outs
les
pop
sti
(bad)
mov
inc
mov
push
aam
jecxz
(bad)
js
sub
sub
jp
push
xchg
outs
adc
ret
mul
or
retf
scas
retf
jecxz
ds
add
ss
in
push
hlt
lds
test
movs
mov
leave
and
imul
ss
xchg
inc
or
lds
enter
jge
pop
xor
(bad)
pop
mov
mov
cmps
mov
xchg
fs
fist
out
out
(bad)
sub
inc
mov
pop
fcom
jmp
aam
jbe
or
out
movs
in
xchg
jmp
pushf
ins
inc
leave
ins
or
fs
icebp
pop
sub
cli
cmps
fadd
cmps
jmp
xlat
push
cmps
out
das
cmp
repz
ins
mov
cmps
enter
cmp
add
fwait
xchg
sar
adc
mov
xchg
cdq
sbb
xor
dec
mov
repz
in
inc
pop
out
jbe
lds
fnstsw
lds
and
(bad)
mov
add
dec
pusha
jae
mov
scas
and
(bad)
popa
scas
xchg
xor
(bad)
fnstenv
xchg
cli
fisttp
fcomp
fisubr
stos
data16
cwde
or
mov
xor
push
fldcw
mov
xor
inc
imul
scas
and
xor
arpl
mov
lock
jmp
stos
push
outs
pop
scas
aaa
(bad)
push
int3
mov
jge
adc
dec
les
fcomp
test
jg
jbe
xchg
adc
and
ins
mov
sub
out
repnz
xor
lahf
ss
mov
or
aaa
aad
push
sub
pop
bound
test
ja
inc
and
mov
xchg
out
test
fsub
into
dec
retf
jbe
aam
sar
mov
cdq
ss
test
icebp
jmp
cmc
add
adc
arpl
test
popf
ficomp
fnsave
xor
jecxz
loop
retf
jbe
mov
retf
out
out
sar
add
stos
dec
jbe
xor
cmc
popf
mov
sub
mov
ftst
popf
loop
mov
mov
inc
ficomp
jns
or
jmp
scas
lahf
sbb
or
adc
jmp
mov
retf
jmp
stos
cmp
pop
fld
or
add
bnd
not
mov
or
clc
mov
cld
or
cdq
(bad)
ds
cmps
mov
fwait
cmp
ss
(bad)
arpl
imul
add
pop
xchg
pop
mov
sahf
xchg
(bad)
aas
push
xchg
push
sub
call
adc
jecxz
pushf
test
push
adc
(bad)
cmps
data16
test
or
push
jmp
(bad)
pop
mov
xor
imul
mov
rcr
sub
xchg
retf
adc
xor
add
rcl
shr
pop
dec
sbb
fwait
sbb
and
repnz
sti
pop
jge
sti
xchg
test
cwde
ret
mov
out
jno
jnp
fadd
nop
loope
test
pop
xchg
and
mov
enter
mov
fistp
ja
cmp
div
ja
and
mov
xchg
test
sub
jge
push
adc
push
outs
and
xchg
sub
jb
sub
cmp
in
xchg
xchg
add
iret
je
ds
std
or
das
(bad)
sub
enter
or
jo
pop
lock
pop
pop
jae
fnstsw
ja
mov
mov
mov
or
push
test
cwde
and
aad
dec
outs
nop
pop
push
lock
fdiv
mov
pushf
scas
rcr
out
or
and
sub
cmp
cmp
int
mov
popf
cmp
dec
mov
ret
stos
movs
xor
pop
jnp
aaa
mov
push
lods
adc
das
out
mov
push
add
test
mov
xchg
xchg
out
cli
dec
cmp
out
inc
and
ds
test
sub
xchg
xchg
loope
and
jl
and
sbb
in
je
in
adc
imul
add
xchg
fwait
xchg
aad
imul
sbb
xchg
fs
and
pop
inc
dec
adc
mov
aad
and
clc
dec
in
sbb
xchg
mov
sbb
xor
out
xor
pop
outs
imul
add
or
or
pop
aaa
adc
icebp
ret
mov
imul
movs
dec
pop
stos
js
int
mov
mov
enter
pop
and
mov
and
sub
inc
jb
mov
movs
outs
and
cli
xchg
scas
cmp
cmp
cwde
jl
es
iret
cmp
leave
aaa
or
mov
mov
(bad)
movs
test
and
push
stos
xchg
sbb
lods
pop
sbb
rol
fstp
lahf
rcl
push
jae
sti
adc
pop
jmp
xchg
and
out
mov
es
dec
inc
popf
push
pop
arpl
dec
sbb
mov
mov
jo
inc
mov
retf
(bad)
ds
nop
sub
xchg
adc
jne
outs
(bad)
frstor
into
int
mov
cmps
fsubr
xor
push
cld
leave
movs
ds
dec
push
scas
icebp
mov
cmp
(bad)
shl
cmp
adc
xor
push
sbb
imul
push
xor
loope
lahf
out
leave
add
lds
cmp
ficomp
mov
cmp
mov
bound
push
retf
hlt
fisubr
cmp
cs
sbb
adc
push
mov
dec
xchg
mov
(bad)
jmp
aad
retf
shl
ret
fisubr
test
dec
or
daa
mov
out
aas
nop
neg
mov
push
mov
and
(bad)
cmp
and
test
cmps
push
mov
xchg
jle
pop
enter
(bad)
cmp
push
lods
daa
movs
sbb
adc
mov
mov
lds
pop
retf
mov
or
rol
dec
ins
dec
jp
dec
mov
push
push
leave
es
or
call
daa
mov
popa
jmp
xor
mov
ds
out
mov
add
jmp
mov
jbe
lea
dec
gs
mov
out
mov
mov
pop
ja
add
push
mov
lods
sub
movs
jns
fmul
lds
in
and
imul
dec
fcomp
out
fcomp
sub
mov
cmc
mov
out
cmp
out
jecxz
hlt
xchg
ret
sbb
dec
cwde
mov
pop
jp
mov
xor
fist
adc
pop
cld
and
dec
mov
lods
repz
ss
mov
fisubr
fimul
bound
sub
daa
xchg
sub
ins
jnp
dec
shr
xchg
or
pop
xchg
cmp
shl
pop
dec
imul
gs
and
lds
cmps
cmp
sub
outs
xchg
rcr
push
pop
add
and
pop
pop
stos
xchg
(bad)
sar
jae
out
adc
sbb
nop
out
jne
(bad)
test
movs
cmp
pop
test
data16
or
retf
fs
mov
repnz
add
cmp
pop
repnz
aaa
add
popf
pop
cmp
dec
mov
or
jp
ficom
inc
mov
pop
sbb
pop
add
and
xchg
mov
mov
aas
test
push
movs
movs
scas
out
mov
ins
mov
icebp
add
or
and
mov
es
jmp
fs
push
jmp
fidivr
adc
xor
lock
mov
movs
mov
shr
mov
mov
(bad)
vmwrite
xchg
in
push
sahf
lock
pop
stos
mov
repz
js
xchg
iret
mov
or
dec
loope
movs
jp
imul
mov
jle
retf
add
jp
pop
retf
into
clc
xchg
inc
fs
inc
scas
xchg
daa
lods
or
outs
xchg
fwait
fwait
fs
xor
popa
arpl
jmp
leave
(bad)
je
jnp
fucomp
(bad)
out
mov
adc
or
cmp
in
aas
push
push
xchg
adc
jmp
jbe
ss
xchg
cmp
call
test
icebp
adc
sbb
lds
and
div
mov
mov
xor
das
dec
cmp
cmps
loop
sti
gs
push
lods
cmp
push
jo
mov
dec
xlat
pusha
jnp
(bad)
popf
cmp
pop
fstp
outs
inc
or
cmp
sub
ds
fist
or
das
std
outs
and
dec
movs
mov
and
fwait
div
aad
fdivp
push
aad
movs
inc
fcmovne
mov
add
and
mov
jmp
(bad)
scas
sbb
push
sar
push
out
dec
hlt
mov
imul
ficomp
data16
and
xchg
movs
push
gs
test
(bad)
sbb
movs
stos
int
mov
mov
mov
repnz
mov
push
inc
or
adc
pop
sbb
out
sub
fwait
dec
adc
(bad)
retf
pop
sub
mov
in
js
sbb
lea
call
sbb
cmps
fsubr
dec
or
sbb
sub
inc
(bad)
fldcw
sbb
fcom
push
std
mov
pusha
sti
or
jge
repnz
cld
fmul
adc
clc
cwde
dec
mov
inc
sbb
or
push
mov
and
cs
aad
push
scas
pop
inc
ds
data16
stos
outs
xor
jbe
pop
mov
xchg
aad
sti
dec
adc
(bad)
sub
lock
retf
in
fld
scas
xor
mov
cdq
aad
adc
ja
cmps
sub
aaa
xor
fistp
ins
out
jmp
retf
cwde
(bad)
retf
jnp
xlat
sbb
pop
sub
dec
fpatan
fimul
(bad)
adc
out
adc
out
sar
ss
mov
xlat
xchg
fimul
scas
cmp
scas
popa
push
out
daa
mov
loope
out
mov
and
sbb
cmp
inc
adc
mov
or
ins
xor
retf
popf
(bad)
mov
addr16
lea
xor
sbb
push
jmp
jne
xchg
test
sahf
pop
fistp
xor
mov
jle
add
outs
or
popf
mov
cs
mov
push
ror
dec
inc
gs
sti
sar
pop
push
fst
stos
jle
mov
adc
jae
jnp
fnstsw
call
int3
lahf
sahf
dec
cmp
pop
fcomp
dec
xor
lock
fdiv
xchg
pop
xor
stos
inc
dec
xchg
mov
push
jae
loopne
mov
and
div
push
shr
add
nop
xor
push
mov
adc
sbb
mov
out
or
call
mov
jp
dec
out
xchg
mov
add
lea
and
mov
scas
aad
js
jecxz
mov
push
scas
mov
push
mov
ss
jo
add
push
test
add
mov
pop
mov
mov
dec
cmps
retf
xchg
rol
mov
and
add
or
inc
dec
bound
mov
out
mov
sub
in
into
and
or
pop
je
dec
test
cmp
push
or
pop
pop
adc
retf
jbe
xchg
sub
daa
les
bound
out
jge
mov
pop
call
fimul
mov
and
loope
cmp
dec
imul
outs
jge
mov
sbb
movs
or
pop
retf
push
pop
neg
leave
lods
andps
nop
sbb
(bad)
xchg
lock
mov
dec
pop
adc
daa
sbb
and
je
mov
xor
xchg
pop
mov
loopne
idiv
push
mov
and
aam
push
ja
jg
scas
leavew
pop
cwde
jmp
mov
ror
adc
add
cli
cs
cmp
out
daa
mul
mov
adc
xchg
mov
sub
stos
xor
sbb
jmp
nop
mov
sti
arpl
sub
or
push
into
int3
cmp
or
dec
inc
xor
adc
mov
es
(bad)
push
outs
in
inc
fldenv
jp
jle
clc
and
popa
jbe
pop
gs
push
(bad)
pushf
cmp
sub
push
sahf
out
jmp
repz
pop
mov
pop
cmps
adc
test
repz
cs
hlt
pop
cmps
dec
fld
sti
and
sbb
cmp
mov
add
and
enter
xchg
lahf
xchg
shl
rol
push
imul
pusha
in
aas
mov
jge
pop
in
adc
fcmovnbe
je
jo
pop
retf
xchg
ror
sbb
aaa
call
pusha
push
(bad)
xor
xor
scas
mov
stc
fs
mov
sti
add
leave
mov
cmp
mov
dec
xor
sub
rol
jb
push
or
xor
jmp
rcl
jl
mov
(bad)
fdivr
cmc
sub
test
cli
dec
mov
push
dec
mov
adc
cmp
scas
jbe
add
mov
into
cmc
ficomp
idiv
or
arpl
imul
inc
jnp
sahf
sbb
xchg
adc
sub
sub
cmp
rcr
inc
mov
pushf
mov
(bad)
(bad)
mov
or
fbstp
jns
pop
and
cmp
stos
push
fwait
mov
hlt
aam
ins
mov
hlt
shl
xor
je
jnp
push
push
imul
xor
pop
xor
fwait
lds
test
mov
adc
(bad)
hlt
xor
ins
xor
add
outs
mov
imul
jmp
pushf
jge
movs
sar
pop
inc
icebp
and
and
xchg
outs
mov
adc
call
sub
stos
pushf
adc
js
arpl
push
inc
pushf
or
out
inc
les
(bad)
js
test
sbb
in
push
adc
inc
mov
dec
inc
in
imul
bound
int3
push
das
inc
pop
xor
cmps
ret
fs
mov
aad
push
and
push
inc
sbb
shl
ja
jb
cli
inc
push
retf
hlt
fwait
shl
cli
(bad)
fbld
shr
add
cmps
push
or
adc
jg
stos
lds
test
jmp
cmc
(bad)
pushf
loop
xor
mov
push
dec
jne
and
inc
and
ret
xchg
mov
loopne
hlt
ja
cmc
push
push
movs
stos
and
aaa
sbb
cli
sbb
mov
movs
sub
or
out
cmp
or
out
or
xchg
in
and
mov
jecxz
or
ins
sahf
mov
pop
(bad)
sub
mov
sub
pop
dec
cmc
cdq
pop
ss
jecxz
mov
cmp
sub
fisub
in
xchg
push
aaa
xchg
and
pop
xchg
xor
jmp
popf
mov
scas
push
ja
sub
adc
adc
xchg
inc
mov
xchg
pop
aad
cmps
fild
cmp
ins
cmp
pop
xlat
cmps
loop
jmp
pop
mov
jle
sub
xchg
pop
sbb
push
cmp
ins
dec
in
aad
inc
call
sbb
ret
fwait
push
inc
xchg
shl
dec
(bad)
(bad)
jg
scas
pop
add
sbb
in
sub
stos
mov
scas
scas
in
pop
push
outs
push
inc
lock
cmp
mov
test
mov
jne
dec
mov
jne
sbb
adc
or
daa
xor
call
(bad)
or
cmp
loopne
lods
cmp
or
loope
sub
jecxz
fst
aaa
imul
mov
mov
xlat
in
arpl
aaa
adc
push
push
out
js
push
xlat
push
add
mov
pop
out
xchg
add
mov
dec
pop
pop
in
xor
(bad)
imul
vdivss
out
xchg
outs
inc
cdq
fs
jo
push
(bad)
lock
and
mov
sub
xchg
loop
xlat
fst
mov
fcmove
cwde
movs
je
ins
cmp
mov
mov
mov
stc
inc
xor
pop
sub
mov
jbe
cwde
mov
sbb
push
retf
imul
push
fld
movs
cmp
aaa
jb
(bad)
push
xchg
mov
ins
les
pop
mov
sbb
aas
mov
out
sti
mov
pop
mov
(bad)
fidiv
push
inc
cmp
rcl
pop
add
lea
mov
daa
clc
fidiv
call
sub
mov
mov
add
mov
cs
mov
pop
leave
into
pop
inc
lahf
ss
xor
test
jg
pop
mov
mov
lahf
sahf
retf
ror
clc
(bad)
imul
dec
push
pcmpeqd
mul
div
shl
push
cmp
xor
push
dec
inc
cld
mov
ins
(bad)
scas
loopne
cdq
fdivp
xchg
mov
jnp
mov
mov
repnz
push
ret
popa
mov
mov
sub
(bad)
retf
das
(bad)
pop
popf
stos
xchg
jmp
sahf
les
call
lods
stos
shl
daa
jmp
sub
jbe
jnp
push
pop
(bad)
iret
mov
mov
cld
jo
retf
mov
pop
mov
and
dec
scas
lods
cmc
fld
add
daa
arpl
imul
leave
xor
jnp
adc
aas
add
xchg
jne
dec
jg
add
or
test
call
in
push
pop
loopne
dec
in
jp
jnp
outs
sbb
and
xlat
mov
retf
js
ret
mov
dec
retf
sbb
xchg
push
movs
sub
pop
mov
pop
inc
in
test
repz
adc
mov
inc
ror
test
movs
push
fst
outs
and
mov
sub
cmc
cmp
dec
sub
daa
daa
rol
pop
nop
lock
push
movs
pushf
test
lods
movs
mov
addr16
mov
icebp
push
push
lds
ret
xor
xor
sbb
clc
ror
cs
call
inc
inc
cs
(bad)
outs
hlt
div
mov
shld
shl
jno
fidivr
jb
fisubr
add
sub
sub
rcr
ret
mov
repz
and
out
ret
imul
cli
mov
(bad)
mov
or
push
and
xor
add
xchg
daa
xchg
sub
mov
fwait
cli
daa
(bad)
adc
lock
sbb
ffree
mov
imul
pop
or
aam
fild
retf
loope
icebp
test
xor
(bad)
jmp
mov
gs
jbe
xchg
sbb
inc
mov
bound
xor
cmps
and
out
xchg
pushf
mov
stos
jo
pop
push
cmp
sub
ret
outs
adc
cmc
xchg
add
fwait
out
ds
(bad)
(bad)
xor
out
push
adc
(bad)
inc
js
jbe
mov
sbb
adc
mov
push
aaa
leave
jmp
adc
ins
push
add
xchg
fmul
test
mov
(bad)
xor
dec
call
push
push
cmps
ins
and
mul
mov
dec
inc
cmp
in
push
mov
ins
fs
cli
push
and
loopne
jmp
push
outs
xor
in
inc
(bad)
dec
scas
adc
sub
sbb
xor
cdq
mov
mov
add
mov
xchg
xchg
inc
add
jnp
push
adc
cdq
dec
(bad)
hlt
xchg
(bad)
mov
jmp
scas
cwde
maskmovq
test
inc
push
mov
jnp
inc
jmp
cmp
int
shl
push
lods
(bad)
rol
xor
btr
call
jp
shl
popa
add
je
mov
repz
jmp
pop
jnp
mov
adc
cmc
xor
scas
cwde
lds
xchg
fsub
lods
dec
xchg
cmps
lods
call
not
retf
js
fsubr
add
out
mov
sbb
stc
and
fs
or
dec
imul
sub
addr16
sub
mov
push
inc
push
sbb
call
jp
mov
cli
mov
dec
mov
xchg
ja
pop
or
rcr
xchg
mov
sub
cmp
push
sbb
iret
add
pop
mov
pop
jbe
leave
loop
movs
inc
leave
add
ss
xchg
inc
data16
dec
jb
add
pop
or
ja
imul
adc
dec
cwde
xchg
fiadd
sbb
jbe
mov
shl
out
xchg
mov
add
add
cld
cld
daa
(bad)
sub
shl
sbb
repnz
mov
popa
aad
shl
mov
js
imul
add
jbe
xor
in
ret
push
mov
loop
and
fimul
pop
xchg
les
stos
inc
xlat
push
mov
into
pusha
cwde
jmp
mov
dec
and
cmp
sbb
leave
(bad)
push
mov
out
pop
push
and
test
imul
add
xchg
add
rcr
and
pop
sub
push
and
dec
(bad)
inc
sbb
jbe
mov
mov
mov
mov
pop
jne
push
sub
pop
push
dec
sbb
mov
lock
pop
call
dec
xchg
sub
dec
and
mov
loope
(bad)
fsubp
xchg
add
or
fld
imul
mov
es
shl
inc
cmps
xor
sti
and
sub
xor
jb
dec
(bad)
xlat
cmp
jg
xchg
aad
jge
bound
sub
(bad)
jmp
cmp
stc
scas
jmp
sub
lea
inc
mov
(bad)
pusha
ja
dec
hlt
call
mov
xchg
add
shl
aaa
aam
pop
mov
jmp
sbb
aam
dec
and
lea
push
inc
neg
jne
jp
adc
arpl
jns
jnp
retf
es
call
jo
arpl
andnps
mov
sti
xchg
out
lea
xchg
or
jmp
xor
sbb
inc
out
xchg
cdq
mov
mov
xlat
ins
out
inc
sub
jge
jns
icebp
xor
pop
jnp
aad
popf
fwait
outs
inc
jle
das
lock
pop
hlt
outs
mov
push
sub
dec
loop
and
shr
push
sti
dec
and
adc
push
inc
out
fisub
pop
mov
sub
loop
push
test
dec
or
pop
sub
jbe
adc
mov
popf
cdq
or
sti
cmp
dec
stos
or
and
ss
sub
push
pop
sub
(bad)
mov
lods
jp
fld
sub
cmps
jmp
dec
jbe
(bad)
mov
es
cmp
popa
jns
inc
out
(bad)
or
or
rcl
mov
daa
mov
aad
xchg
jbe
inc
push
fidivr
inc
inc
out
idiv
or
mov
jbe
addr16
sub
(bad)
xlat
jns
mov
das
dec
cmp
cmp
jno
aam
loop
sub
(bad)
push
retf
dec
cmc
jne
pop
cmp
mov
int
gs
ds
pusha
jecxz
pop
dec
push
repz
jne
push
xor
imul
sub
test
inc
les
push
push
xor
stos
and
ficom
pop
sub
stos
push
sub
aaa
gs
outs
retf
xchg
sub
and
call
fistp
push
movzx
fidivr
mov
cmp
sti
nop
out
(bad)
scas
mov
aas
fst
cmp
retf
(bad)
cmp
sbb
sbb
mov
lods
sbb
daa
mov
jne
loopne
loope
cli
ror
adc
stos
mov
and
(bad)
rcr
loope
adc
pop
ds
add
inc
mov
test
cmp
mov
add
out
sub
jle
sbb
mov
cmp
mov
inc
jmp
inc
sub
jbe
xor
jae
call
repz
add
aas
adc
ja
fs
mov
outs
inc
fs
pop
mov
push
xchg
rcl
ins
push
or
mov
aaa
mov
pop
xchg
adc
ins
inc
pop
lea
inc
stos
fnstenv
and
jae
pop
loopne
and
(bad)
push
out
(bad)
jno
cmp
pop
aam
pop
xor
dec
xchg
aam
mov
pushf
test
lds
lea
mov
mov
fsub
jnp
stc
cs
leave
and
lock
les
stc
daa
pop
repnz
lahf
and
scas
out
call
stos
cs
inc
add
inc
imul
inc
hlt
xor
or
(bad)
mov
(bad)
pop
and
sub
arpl
sub
cmp
mov
xor
sbb
data16
jl
int
scas
mov
sub
cmp
dec
adc
xchg
jmp
outs
jne
test
cmp
retf
jmp
fstp
(bad)
pop
xchg
sub
test
bound
push
stc
sub
ror
into
daa
sub
(bad)
ss
imul
fsubr
or
mov
mov
pop
cmps
dec
adc
mov
inc
push
pop
xor
outs
js
je
fstp
mov
scas
mov
adc
sbb
push
int3
inc
int3
adc
mov
cdq
cwde
and
ins
add
push
cwd
retf
adc
mov
mov
fistp
push
mov
into
push
push
jnp
push
xchg
add
data16
idiv
stc
retf
cmps
fld
adc
adc
xchg
mov
sbb
retf
pop
mov
pop
or
pop
cmp
mov
push
out
push
scas
pop
inc
mov
ror
xchg
ror
jns
scas
jle
add
aaa
je
mov
jg
dec
add
sub
jge
aam
jo
jmp
xor
sbb
jo
push
rcl
mov
out
sbb
mov
sbb
stos
cmp
lods
add
push
cmp
mov
(bad)
mul
int3
ss
retf
mov
dec
xchg
and
in
xor
clc
cmc
xchg
xor
pop
cmp
pusha
xchg
out
add
mov
aas
add
push
dec
int3
sbb
dec
int
jb
xchg
rol
mov
(bad)
xor
repnz
in
imul
cmps
sbb
pop
(bad)
jbe
sbb
ds
or
push
cwde
push
dec
push
adc
iret
out
retf
movs
sub
push
xchg
adc
cdq
inc
pop
push
rol
out
movs
pop
adc
ror
mov
retf
test
aam
jp
ds
mov
mov
ds
jns
cli
mov
jno
addr16
adc
ja
and
pop
imul
xchg
lahf
movs
rol
out
es
dec
rcl
push
inc
sub
pop
mov
int3
(bad)
jmp
sub
aaa
fsub
shr
sbb
sbb
sub
shl
lea
enter
aaa
and
retf
scas
outs
cmp
push
test
mov
or
sub
sbb
xchg
pusha
or
adc
inc
call
or
in
fdiv
jae
test
retf
xlat
(bad)
lock
jnp
pop
(bad)
test
cmp
ds
pop
imul
jmp
into
jp
xchg
xchg
xchg
enter
scas
imul
mov
and
jnp
mov
sahf
cdq
leave
(bad)
xlat
(bad)
imul
jae
xor
push
jno
push
into
(bad)
jnp
mov
mov
inc
pop
out
or
(bad)
pop
push
dec
sub
inc
daa
cmp
pop
fcom
mov
pop
rcr
sub
sbb
push
inc
scas
push
(bad)
adc
xor
ins
push
pop
xchg
stc
mov
fwait
in
leave
sub
pop
iret
sbb
xchg
ss
mov
gs
fild
cmps
cmc
cmps
jns
xchg
mov
or
(bad)
sbb
mov
mov
cld
pop
jns
dec
pop
lock
inc
fstp
aam
push
fwait
shr
out
hlt
in
jg
daa
mov
lea
fisub
push
in
push
mov
enter
iret
add
int
fstp
add
and
add
mov
adc
cwde
cdq
fchs
loop
lds
fiadd
dec
int
sub
sbb
fcomp
rcr
jne
outs
jo
retf
loopne
pop
jno
test
stos
lahf
lock
sahf
push
fbstp
aas
mov
mov
das
mov
add
mov
sti
leave
cmp
jno
sub
push
daa
mov
adc
adc
dec
and
add
cli
test
call
pop
mov
push
xor
imul
mov
or
fwait
cmc
icebp
(bad)
test
icebp
xor
test
or
pop
dec
enter
test
retw
out
mov
mov
mov
addr16
(bad)
mov
inc
push
nop
xchg
mov
adc
xchg
sahf
xchg
retf
(bad)
jmp
inc
sbb
xor
dec
(bad)
adc
cmp
repz
pusha
into
pop
call
ror
pop
cmp
jns
xor
repz
aaa
pop
cmps
out
mov
test
pop
adc
ror
ret
mov
out
call
loop
cs
dec
add
cmp
mov
xchg
cwde
mov
and
fwait
imul
dec
ss
and
cmp
pop
stc
aam
inc
sbb
shr
jmp
pop
fstp
arpl
or
mov
sbb
fsubr
fcomi
xchg
mov
xchg
sub
inc
mul
push
and
push
dec
xor
sbb
or
mov
inc
add
stc
sbb
aam
(bad)
das
cdq
jmp
test
adc
fild
mov
mov
dec
mov
data16
dec
xchg
jne
sub
aam
in
lods
xor
call
test
xor
fdivr
es
xchg
sbb
sub
pop
adc
jns
fild
xchg
mov
inc
mov
jge
sbb
fstp
add
repnz
sti
pop
mov
in
xchg
frstor
lahf
sbb
mov
mov
xchg
sbb
lds
loop
retf
jnp
cwde
loop
or
sbb
into
adc
inc
out
inc
pop
in
leave
int
ja
mov
fwait
cdq
pop
into
(bad)
xor
sbb
lea
pop
pop
div
ds
dec
mov
cmps
out
mov
rol
bound
push
cli
das
cmp
sbb
repnz
retf
sub
push
stos
dec
leave
xor
inc
lods
xlat
(bad)
stos
sti
xor
and
sahf
or
push
stos
imul
loop
rcr
cmc
ret
movs
retf
sti
mov
fldcw
cmc
inc
ins
push
or
sbb
out
rol
sub
mov
xchg
stos
inc
jmp
mov
jbe
or
lock
push
mov
inc
in
leave
sub
sbb
enter
push
fsub
push
lock
pop
pop
push
aas
retf
add
jae
add
stos
fmul
aam
cmc
add
retf
xchg
ficomp
dec
or
mov
push
mov
dec
mov
jnp
xchg
shr
icebp
enter
jbe
xchg
inc
xor
dec
cmp
or
jno
cmp
mov
mov
and
or
cs
adc
sub
dec
push
bound
mov
fcmovnu
icebp
fcmovnb
iret
ja
stos
aas
xchg
outs
jmp
es
gs
add
jp
out
jmp
cdq
cmp
fld
fild
outs
jo
cwde
add
jmp
aad
sahf
inc
mov
ror
inc
repz
mov
in
and
popa
dec
outs
xchg
leave
inc
fcom
mov
mul
out
rcr
xchg
sub
sbb
test
push
cli
scas
cmp
mov
addr16
sbb
adc
add
sbb
hlt
loop
jbe
ins
int3
test
aad
scas
test
sbb
xchg
xor
push
lea
punpcklwd
sub
pop
aad
arpl
xchg
mov
cmp
sbb
fnstcw
fidiv
inc
xor
and
enter
retf
test
bound
and
adc
repz
repz
sbb
cmc
lods
hlt
or
jo
xchg
or
inc
int3
mov
jne
mov
shr
(bad)
xchg
fmul
push
nop
mov
ja
add
inc
dec
and
mov
rcl
retf
xor
addr16
scas
sub
mov
pop
mov
xchg
(bad)
fidivr
pusha
jp
lea
sahf
sbb
iret
inc
or
jmp
adc
and
lds
xchg
dec
adc
rcl
daa
push
dec
sub
pop
pop
fcomp
data16
mov
and
fsubr
in
fisttp
or
enter
(bad)
mov
loopne
sahf
push
cmp
call
cli
lds
loopne
loope
iret
inc
xor
pop
dec
mov
sbb
dec
imul
das
pop
test
fsubr
add
jno
popa
sub
push
mov
addr16
sbb
iret
call
xchg
sti
xor
(bad)
aam
xor
imul
push
test
lea
sar
adc
dec
and
repz
add
fdiv
xchg
xchg
push
xor
ja
adc
test
mov
inc
mov
adc
adc
sbb
inc
inc
hlt
mov
inc
fwait
sar
inc
push
cmp
loopne
mov
pusha
das
dec
push
jns
(bad)
mov
cwde
jle
mov
inc
repz
mov
lahf
mov
mov
je
ret
inc
jl
dec
dec
inc
js
movs
mov
xchg
fisttp
and
stos
out
fcom
ss
xor
xchg
ror
es
xor
sar
push
adc
xor
idiv
dec
sti
popf
pop
mov
imul
dec
call
xor
jnp
addr16
cmp
mov
jl
mov
xchg
sbb
push
outs
jne
lods
inc
mov
cs
clc
out
cmp
push
icebp
cs
cmp
out
xchg
mov
fucomip
call
adc
jmp
fcomip
xchg
or
add
aaa
aas
pop
iret
sahf
(bad)
outs
xor
loop
push
in
inc
sbb
bound
push
rcr
sahf
mov
scas
sub
or
fcomp
stos
fcmovu
adc
idiv
xchg
fucomi
adc
bound
and
xchg
ret
xor
pop
sub
ret
mov
leave
and
xor
(bad)
jecxz
jno
or
dec
cmp
jp
fst
pop
sub
fs
inc
inc
inc
test
xor
out
popa
fisttp
shl
and
jbe
test
pop
imul
(bad)
mov
mov
jge
add
outs
push
xchg
pop
pushf
stos
sbb
aaa
pop
loopne
pushf
pushf
cmps
pop
in
pop
or
jne
pop
icebp
add
or
sbb
ret
add
push
mov
dec
(bad)
add
mov
lods
sti
fs
or
mov
dec
add
cmp
pop
mov
repz
xlat
xor
std
outs
in
mov
fimul
pusha
sbb
mul
lahf
and
clc
mov
fs
call
pop
xlat
cmps
nop
dec
xchg
dec
mov
mov
dec
mov
inc
mov
add
jg
add
ds
add
(bad)
js
aam
aad
add
jne
call
xchg
pop
xor
scas
fcmovnbe
js
nop
dec
mov
xor
mov
iret
js
enter
es
loopne
sti
xor
xchg
fldcw
inc
pusha
mov
and
push
jnp
ds
jmp
mov
(bad)
ror
and
stc
jnp
or
adc
pusha
ins
mov
cmps
movs
enter
pop
call
jmp
inc
popa
pop
dec
push
and
js
add
mov
jp
fs
or
imul
popa
iret
inc
push
(bad)
sti
icebp
inc
fs
(bad)
sbb
retf
dec
in
stos
mov
mov
dec
jmp
push
data16
pause
jmp
movs
scas
out
pusha
and
nop
dec
xlat
arpl
sti
ror
pop
imul
aam
push
inc
ins
pop
aad
xor
cli
or
pop
mov
ss
push
sub
fdiv
inc
fadd
adc
sbb
fcom
inc
cld
push
mov
adc
sbb
jge
xchg
movs
outs
adc
cli
sti
lahf
movs
retf
mov
stos
aas
mov
sbb
cmp
fldcw
xor
mov
xchg
(bad)
push
arpl
movzx
pusha
dec
push
xchg
lahf
pusha
xchg
fadd
pop
sbb
icebp
pop
es
jbe
mov
cmp
gs
inc
(bad)
outs
sahf
mov
xchg
mov
je
mov
mov
cmp
push
add
jg
pmaddwd
lods
cmp
test
push
stos
cmp
push
cli
adc
sbb
adc
fild
cdq
jnp
push
ficom
rol
jmp
ret
loop
out
xchg
scas
mov
inc
inc
xchg
int3
js
test
sub
pusha
dec
enter
in
push
mov
cmp
xchg
es
cdq
cmps
hlt
add
push
shl
in
nop
mov
lods
mov
pop
lahf
and
fidiv
leave
jae
fnstsw
push
jmp
ins
test
into
mov
mov
push
push
addr16
shl
in
inc
mov
and
sbb
push
mov
xchg
sbb
lea
sbb
outs
int
ss
push
push
jl
mov
add
and
mov
xor
or
push
adc
push
pop
call
retf
push
sub
push
xchg
into
sub
dec
enter
jg
jae
daa
sub
cdq
stos
enter
lods
inc
mov
scas
leave
stc
fld
xchg
aam
xlat
pop
ret
xor
push
adc
xchg
dec
adc
jle
ins
ss
sub
stos
ret
repnz
fiadd
jle
or
xor
(bad)
sti
lds
pop
fsub
push
fs
popa
(bad)
jmp
mov
(bad)
pop
mov
(bad)
cmp
cmc
loopne
push
ss
repz
mov
xor
or
xor
mov
xor
pop
call
test
dec
push
dec
dec
repz
xchg
pusha
cs
lea
repz
loope
mov
and
xor
fistp
and
cmp
bnd
adc
cmc
cmc
push
inc
add
sahf
neg
xor
fwait
mov
jmp
sbb
out
mov
xchg
imul
leave
dec
mov
lea
mov
jbe
or
icebp
jmp
mov
jns
clc
imul
les
out
sti
ror
dec
mov
cmp
pushf
imul
jg
out
cmp
jno
push
(bad)
sub
in
jns
jmp
and
dec
add
mov
frstor
imul
push
add
movs
cmp
ror
stos
or
fs
and
sbb
lahf
in
gs
(bad)
fiadd
add
fwait
ss
sbb
aad
sti
jnp
sub
loopne
jecxz
leave
int
mov
pop
aam
loop
sahf
xor
push
jecxz
jne
out
cs
pop
and
mov
aad
(bad)
out
or
pop
sub
jae
xor
pop
xchg
fnsave
cwde
ds
mov
das
push
icebp
cmp
push
call
pop
jno
pop
ins
stos
inc
sti
mov
pop
out
(bad)
xor
jle
test
or
sbb
adc
out
out
or
push
test
mov
mov
sub
lods
and
jmp
dec
in
fidivr
mov
sbb
test
push
xchg
sbb
in
mov
hlt
xchg
das
cwde
push
adc
push
and
mov
dec
xor
imul
xor
(bad)
ds
inc
out
mov
inc
cdq
rcl
(bad)
enter
aaa
(bad)
xor
ds
push
mov
sti
push
push
(bad)
mov
cmp
inc
movs
ins
push
aaa
mul
or
js
cmps
retf
clc
pop
jecxz
js
cmps
jl
xchg
shl
out
mov
cmp
adc
imul
test
in
mov
cmps
or
and
cs
int3
push
rcr
jle
jecxz
jns
sahf
test
dec
shr
retf
mov
scas
(bad)
jae
imul
mov
aam
mov
cmp
ss
jb
jbe
outs
push
imul
adc
pop
(bad)
sub
lods
adc
cs
fwait
cmps
mov
scas
add
jns
popa
xlat
call
adc
jno
ja
mov
out
sti
cmp
int
mov
hlt
push
out
pop
inc
sbb
jbe
jg
les
aad
ret
test
movs
mov
fnstcw
sahf
sub
pusha
aaa
out
aad
jbe
rcl
jne
pop
dec
push
repz
xor
adc
jl
test
movs
imul
push
mov
popa
push
jmp
push
leave
jne
lock
pop
sbb
retf
cmp
mov
push
imul
pop
das
rcr
pop
fldenv
pop
cmp
jecxz
pop
bound
fucomip
outs
jns
mov
je
push
daa
pop
ret
test
jg
inc
sar
push
mov
inc
cmp
cmps
pop
(bad)
jmp
or
push
or
pop
je
cmps
mov
sub
push
sbb
mov
xchg
ror
fisub
pop
and
push
fmul
retf
xchg
fbld
das
xchg
jne
mov
repz
rol
(bad)
inc
popa
js
es
punpcklbw
add
outs
or
in
pop
sub
data16
mov
mov
mov
scas
push
mov
mov
or
inc
pop
xchg
jns
adc
xchg
lods
or
aam
stos
shl
les
dec
or
push
cli
mov
clc
xlat
inc
adc
dec
test
push
shl
adc
pop
(bad)
movs
sbb
dec
mov
xor
cmp
pop
sbb
push
arpl
test
push
jmp
outs
test
lahf
xchg
mov
adc
aaa
sub
sub
push
sbb
push
int
dec
mov
adc
fldcw
push
sbb
jmp
(bad)
cmp
xchg
cmps
inc
cmps
push
push
mov
mov
ficom
mov
mov
xor
imul
outs
dec
ins
idiv
sub
rcl
jmp
adc
sub
jnp
lds
push
xchg
push
mov
xor
jns
lods
sub
or
not
pop
adc
bound
repz
jns
mov
sbb
mov
inc
adc
jl
jle
cmp
imul
inc
mov
test
int
jp
jne
es
pop
enter
jmp
push
mov
jnp
stos
inc
enter
or
ins
mov
sub
jnp
mov
div
stos
jbe
mov
xchg
loop
add
lahf
call
(bad)
mov
push
and
cdq
popf
dec
jo
cmps
fwait
ror
jbe
jmp
xlat
jmp
jl
mov
pop
sub
inc
movs
push
mov
int
jmp
mov
mov
mov
sbb
retf
add
fcom
cli
sbb
int3
ror
jl
jge
jbe
push
mov
sub
add
mov
dec
aad
ins
sti
jmp
ins
icebp
stos
es
cmps
cmps
sub
out
hlt
ror
mul
jle
cmp
jno
nop
cmps
sahf
jmp
(bad)
rcl
out
gs
fnstenv
cwde
mov
adc
mov
or
jecxz
pop
cmp
(bad)
(bad)
outs
int3
hlt
pextrw
sub
mov
sbb
and
add
shr
cmc
xchg
cli
nop
rcl
mov
ret
sbb
cmc
xor
inc
adc
shl
fs
fnop
rol
jnp
retf
(bad)
push
sub
push
out
or
ret
movs
addr16
push
arpl
test
adc
movs
sbb
pushf
xor
push
sti
mov
je
jg
pop
out
shl
and
jae
sbb
pop
dec
fdivp
por
jmp
imul
xchg
rol
cmp
fcmovb
jnp
fidiv
xchg
in
jmp
add
mov
xor
outs
mov
mov
push
push
push
jecxz
data16
xchg
fs
sbb
std
aaa
adc
sub
fidivr
push
or
cmps
jns
xchg
inc
movs
or
mov
(bad)
mov
ds
jmp
xchg
loopne
sbb
adc
repnz
inc
mov
in
inc
cmp
mov
jne
push
sbb
mov
adc
mov
or
into
dec
push
stos
adc
xor
mov
sub
sub
loope
and
inc
fsubr
retf
or
cmps
dec
fidiv
dec
push
mov
jne
out
mov
lock
sbb
jb
sub
cdq
add
cmp
dec
nop
pop
add
ins
inc
aad
clc
mov
inc
cmps
iret
push
mov
add
jno
aam
add
in
or
aas
xchg
loop
xchg
or
into
sub
or
pop
jg
pop
out
adc
outs
mov
fsubr
jp
int
mov
shl
in
adc
daa
xchg
fmul
xchg
jnp
gs
(bad)
xchg
lods
jmp
pop
jno
iret
mov
push
adc
xor
(bad)
jg
sub
mov
je
inc
dec
fdiv
lods
cmp
in
ins
xor
jmp
cs
jg
jns
or
imul
outs
xchg
add
mov
sbb
cmp
sbb
push
pushf
call
mov
push
add
pop
popa
(bad)
xor
mov
je
mov
repz
in
mov
in
cdq
push
jge
inc
in
sbb
adc
mov
imul
rcl
lods
lods
and
cmp
mov
test
in
jns
repz
inc
imul
jmp
lods
es
cmp
adc
cmc
outs
cmp
pop
mov
adc
nop
inc
ret
into
pop
adc
cmp
dec
out
xlat
mov
and
cs
mov
sti
sub
cdq
shr
mov
out
in
aaa
data16
inc
cld
xor
mov
dec
ja
call
in
pop
out
fcomp
sub
cmp
mov
dec
pop
test
stos
shr
sbb
pop
add
push
shl
es
xchg
(bad)
fidiv
jno
dec
shl
mov
or
scas
(bad)
jmp
idiv
out
pop
aaa
push
dec
xor
lahf
stc
push
out
call
pop
mov
jmp
sahf
mov
cmps
push
inc
movs
pop
fwait
jmp
stos
pop
or
fwait
sub
icebp
leave
jmp
sub
inc
(bad)
not
push
add
jb
dec
sbb
(bad)
pop
jle
daa
cli
jbe
push
xchg
sbb
lea
or
sti
loopne
sar
imul
inc
adc
push
pop
hlt
gs
dec
retf
jne
outs
xchg
adc
stos
jbe
or
lods
into
push
aam
inc
(bad)
in
mov
sub
push
dec
or
pop
data16
int3
fild
mov
test
retf
adc
xlat
xlat
and
aaa
mov
rcl
and
mov
enter
in
sti
cmp
inc
pop
cmp
in
rcl
imul
out
inc
repnz
add
and
or
mov
imul
jns
jmp
push
or
jmp
jp
aad
mov
out
push
xchg
aaa
push
adc
sub
inc
lahf
xchg
adc
inc
pop
mov
cmps
stc
pushf
xchg
mov
mov
add
leave
xor
or
sub
sub
aaa
adc
pop
(bad)
sti
cmps
mov
retf
repnz
sbb
scas
xor
push
pand
stos
mov
pop
call
mov
pop
jmp
(bad)
ror
jmp
ja
mov
stos
xlat
xor
fs
mov
mov
(bad)
clc
clc
retf
retf
xor
or
and
out
scas
or
jecxz
test
dec
(bad)
sbb
out
dec
dec
cmp
int3
sar
mov
pop
lods
jnp
lahf
gs
cmp
cld
adc
cmp
push
add
popa
dec
in
popa
adc
pop
adc
xchg
cli
dec
leave
arpl
or
mov
in
sub
retf
dec
(bad)
fld
xchg
int
test
sbb
sub
cmp
xchg
cmc
and
mov
outs
mov
jmp
sti
in
les
inc
call
js
stos
push
or
mov
cmc
add
int3
dec
out
stc
mov
push
outs
repz
mov
add
shl
inc
sbb
lea
mov
out
cmps
lahf
or
push
sbb
mov
leave
jg
dec
cmps
in
pusha
jmp
cld
cmps
js
and
or
addr16
setge
mov
shl
sub
call
pop
retf
xchg
mov
clc
sub
mov
adc
pop
sahf
dec
arpl
xchg
mov
mov
in
repz
mov
in
push
push
mov
lahf
sahf
add
stc
cli
sbb
js
dec
sbb
dec
outs
ret
ficomp
xor
iret
or
out
xchg
(bad)
mov
xchg
and
movs
sub
repz
outs
jg
call
xchg
ins
cmp
popf
sbb
adc
xor
add
pop
outs
test
hlt
or
mov
in
out
mov
je
loope
jbe
add
inc
test
xor
lods
sbb
jnp
sti
sti
and
lea
addr16
inc
(bad)
mov
sub
(bad)
pop
int
call
shl
sti
shld
xor
arpl
es
mov
sahf
(bad)
xlat
jnp
mov
mov
mov
mov
xchg
pop
enterw
stos
xchg
fwait
stos
outs
js
or
imul
outs
fsubr
inc
ja
ds
icebp
jno
jp
mov
mov
dec
ficomp
mov
or
addr16
data16
or
cmp
shl
imul
leave
dec
jmpw
popf
cli
jnp
mov
pop
mov
retf
xlat
pop
cmp
stos
xchg
test
call
loopne
movs
mov
adc
push
mov
enter
dec
jbe
ja
mov
aas
jle
or
jmp
mov
movs
fucomip
fs
and
add
xor
cmp
movs
repz
cmp
out
gs
(bad)
lock
inc
scas
jnp
xor
std
sahf
fistp
inc
mov
scas
push
mov
sbb
and
and
ins
push
sbb
pop
jp
es
daa
mov
jnp
aam
fwait
sbb
test
jae
push
push
jnp
dec
pop
jmp
adc
out
pop
retf
jg
jmp
test
retf
out
dec
push
das
cld
pop
push
pop
ss
inc
push
pop
out
mov
xchg
scas
sbb
jecxz
or
pop
push
push
push
loopne
xor
dec
adc
inc
jb
mov
(bad)
dec
mov
aad
retf
or
sti
call
bound
jnp
sub
ror
mov
gs
xchg
sub
adc
jmp
inc
jo
inc
arpl
jp
push
call
ds
xor
cmp
mov
mov
lods
or
pop
out
fsub
push
mov
sub
faddp
mov
mov
inc
test
daa
(bad)
sub
fist
sub
ds
jmp
pushf
sub
push
mov
add
dec
sti
(bad)
mov
(bad)
sar
(bad)
lods
aas
lahf
mov
pop
js
xor
mov
cmp
ins
mov
mov
add
push
and
mov
pop
dec
cmp
cmp
scas
mov
stos
and
jbe
sub
mov
repnz
fwait
sbb
sbb
jge
mov
or
nop
mov
push
push
pusha
push
jecxz
test
out
retf
mov
arpl
push
add
sbb
add
or
lods
mov
repz
sar
das
fcmovnb
cmps
fwait
and
into
mov
cmps
in
cmp
mov
dec
in
mov
pop
pop
sub
imul
sbb
stos
enter
or
in
cmp
in
mov
or
bound
mov
mov
xlat
or
add
out
in
adc
fwait
inc
mov
dec
sti
test
js
ret
(bad)
lock
sbb
jmp
cmc
inc
sbb
jo
js
je
xchg
adc
movs
mov
retf
shl
leave
icebp
adc
call
mov
dec
jnp
retf
xchg
xchg
mov
xchg
cli
dec
mov
push
xor
(bad)
jnp
imul
or
mov
pop
(bad)
test
xlat
retf
push
lods
pop
push
aaa
push
sub
loopne
xor
push
push
sbb
les
aam
mov
cmps
scas
pop
fs
pop
fdivr
adc
test
retf
dec
les
into
loopne
repz
push
fs
mov
or
es
dec
in
pop
iret
mov
jns
or
mov
in
pop
ss
cmp
movs
xor
das
and
push
out
ror
add
jmp
aaa
jae
or
mov
gs
inc
repnz
bound
push
or
iret
sub
out
test
mov
or
mov
xchg
mov
xchg
pop
inc
dec
jmp
push
push
mov
inc
mov
sub
mov
push
add
xor
mov
aam
out
imul
ds
retf
xchg
in
push
bound
xchg
jl
mov
retf
mov
sub
fdiv
(bad)
in
cmp
mov
orps
adc
daa
mov
addr16
test
xchg
aas
cmc
ret
test
sar
push
cmp
cmp
fadd
fwait
popa
xor
dec
mul
stos
cdq
bnd
sub
xor
xchg
test
leave
push
xor
test
loopne
mov
std
push
test
repz
data16
js
stos
addr16
jbe
imul
mov
stos
push
cmp
cmps
leave
adc
adc
cmp
adc
mov
mov
aad
cs
jmp
or
out
or
(bad)
jle
inc
hlt
sub
jmp
lock
xor
mov
jbe
add
ss
xchg
out
add
jle
retf
sub
mov
xor
dec
cmps
sub
ins
push
push
or
adc
data16
push
mov
xor
(bad)
cmc
in
out
cmps
pop
mov
push
scas
mov
imul
mov
mov
mov
dec
sti
out
sub
daa
lahf
loope
xchg
(bad)
popf
push
jmp
scas
mov
mov
loop
dec
out
xor
rcl
loopne
scas
dec
dec
adc
lods
jne
push
mov
push
inc
test
sub
sub
fldcw
mov
sbb
(bad)
scas
mov
fidiv
jb
lds
push
mov
nop
aas
lods
jmp
pop
pushf
dec
xchg
mov
(bad)
lds
and
inc
push
into
test
dec
cwde
or
sbb
in
je
loopne
push
retf
and
pop
fiadd
bound
in
mov
xchg
movs
dec
pop
push
popf
mov
adc
sti
add
popf
lock
ss
sub
or
into
(bad)
lock
movs
(bad)
mov
lods
out
hlt
mov
cmps
mov
and
and
add
adc
les
mov
sbb
push
xor
lods
lahf
daa
sahf
ins
push
cmp
dec
jnp
js
pop
in
popf
leave
loopne
mov
push
mov
push
pushfw
lea
mov
aas
add
fbstp
stos
and
or
cmp
adc
rcl
not
sbb
jnp
(bad)
mov
sbb
ja
fisubr
mov
xchg
movs
clc
movs
mov
mov
jp
ja
dec
sahf
popa
pop
and
aam
into
push
lods
xchg
xchg
scas
sahf
push
mov
add
sar
push
or
ficom
bound
mov
fs
cmps
xor
cmps
repnz
ja
add
icebp
xchg
repz
jle
xchg
(bad)
adc
mov
mov
or
xchg
imul
sbb
push
clc
leave
and
dec
push
dec
xchg
pop
mov
jmp
adc
push
push
in
xor
movs
and
scas
lea
fwait
cmps
jecxz
sbb
adc
leave
pop
adc
scas
and
mov
movs
stos
jge
jl
test
pop
mov
test
adc
lods
(bad)
xor
in
call
js
dec
adc
sbb
out
adc
ja
pop
mov
add
stos
cmp
sub
xor
lods
inc
fwait
mov
in
les
mov
(bad)
cdq
add
adc
data16
arpl
cmp
add
int
xchg
in
pop
add
das
push
jmp
pusha
and
xchg
sub
xchg
shl
imul
mov
jns
pop
push
or
rcl
xchg
mov
test
fisttp
sub
dec
mov
imul
lahf
pop
xor
das
xor
rol
push
scas
lea
mov
sub
arpl
scas
arpl
ja
pop
je
mov
push
adc
pop
push
arpl
mov
xchg
mov
leave
cmc
rcl
or
xor
sbb
addr16
sbb
sti
cmps
fwait
adc
xchg
movs
addr16
jnp
loop
outs
mov
push
or
inc
outs
es
hlt
sbb
jo
and
sbb
(bad)
cli
pop
pop
test
pop
pop
scas
dec
cmps
dec
add
movs
arpl
es
enter
repz
sub
xor
repz
repnz
jno
shl
jae
fwait
lds
push
shl
out
aam
xchg
pop
cmp
out
(bad)
push
xor
adc
outs
mov
and
scas
test
inc
inc
mov
cmp
jnp
jns
leave
add
js
mov
jg
vprotd
iret
ss
shr
jnp
out
cmp
push
shl
icebp
mov
mov
clc
retf
sar
mov
ds
es
and
mov
xchg
fwait
jnp
mov
in
(bad)
(bad)
test
shl
adc
cmp
cs
add
ficom
jbe
sbb
mov
in
jnp
loop
dec
xor
es
ja
data16
jg
dec
(bad)
test
loopne
mov
pushf
cld
jmp
jae
lods
cmp
push
xchg
addr16
clc
mov
movs
cdq
and
xchg
mov
xchg
sub
mov
psubq
pop
push
sbb
imul
sbb
stos
gs
ss
add
out
pop
mov
cli
scas
dec
dec
jecxz
dec
add
jle
jno
jmp
lock
push
scas
imul
gs
jle
mov
lods
in
pop
(bad)
sahf
push
(bad)
daa
push
xchg
ss
lods
pop
ss
data16
pop
jo
(bad)
mov
mov
aam
les
(bad)
push
xor
fnstenv
dec
out
push
fwait
dec
pop
cmp
retf
and
mov
xor
stos
data16
(bad)
popf
pusha
sub
jne
imul
mov
mov
jmp
jg
sub
xchg
or
jne
pop
push
(bad)
jnp
mov
mov
push
test
out
pop
jnp
sbb
call
mov
test
test
pop
lds
fld
sbb
mov
jbe
push
mov
xchg
sti
pop
push
xchg
mov
test
mov
scas
mov
aas
push
data16
pop
push
push
retf
bound
mov
jp
(bad)
shl
mov
addr16
adc
mov
mov
out
cwde
cmp
push
rol
sbb
jno
xchg
ja
loope
jle
cmc
jns
mov
cld
out
cmp
xor
add
loopne
ret
mov
mov
or
repnz
addr16
sub
stos
test
mov
dec
and
sub
popa
pop
mov
jnp
push
imul
jmp
adc
and
mov
push
ret
jecxz
dec
xor
xor
rol
(bad)
cwde
arpl
repnz
sbb
or
jecxz
fisub
adc
xor
mov
push
dec
mov
cmps
clc
xchg
stos
adc
mov
jb
std
test
or
push
je
jmp
arpl
fist
cdq
scas
(bad)
test
xlat
out
xchg
test
jecxz
xchg
pop
mov
(bad)
sbb
mov
enter
bnd
mov
fmul
mov
push
in
pop
sbb
clc
xchg
xor
ja
push
cmp
cmp
mov
daa
sbb
push
addr16
pusha
lahf
test
retf
test
mov
out
cmp
in
addr16
stos
(bad)
xor
rol
jb
xchg
fcom
test
dec
and
xchg
xor
cmp
push
adc
shl
push
push
movs
inc
int
shl
nop
nop
jmp
xor
mov
sub
push
xor
scas
fs
push
xor
inc
pop
cmp
fistp
adc
pusha
dec
add
xlat
frstor
jns
aaa
pop
xlat
xor
inc
jne
push
jbe
cmc
repz
mov
dec
in
cmp
pop
dec
into
xchg
xlat
push
pop
dec
dec
(bad)
xchg
mov
xchg
adc
xor
fstp
nop
adc
ss
test
cmc
fistp
data16
mov
inc
inc
mov
test
jbe
repnz
(bad)
test
inc
sbb
and
ss
jmp
inc
jo
repnz
scas
xor
ds
outs
test
(bad)
scas
push
outs
sar
mov
mov
fmul
fistp
jae
test
imul
in
jbe
popa
in
call
das
xlat
mov
into
sbb
cmp
ret
pop
jae
jb
into
push
clc
aam
jae
(bad)
test
mov
pop
push
loopne
push
push
add
popf
(bad)
pop
and
ins
shr
fist
mov
cmc
jo
lds
inc
push
arpl
add
loop
cdq
stos
xor
pop
ret
push
leave
or
xor
cwde
mov
sub
adc
adc
fdiv
mov
js
fnstcw
pop
or
jb
sti
pusha
ud2
pop
dec
fistp
in
sub
or
movs
lds
repz
xor
or
mov
pop
jp
adc
xor
ss
jge
jmp
out
jae
jnp
retf
popa
outs
icebp
add
pop
sbb
mov
cwde
or
inc
jmp
jecxz
add
inc
adc
add
out
(bad)
mov
loop
xor
cs
loopne
jbe
(bad)
sti
popa
sahf
mov
neg
in
inc
mov
or
aaa
(bad)
fs
in
mov
aas
pop
pop
pop
ins
imul
imul
mov
cdq
xchg
cmp
mov
push
sbb
add
cmp
out
stc
mov
rcr
mov
shl
gs
jbe
jmp
bnd
out
adc
sub
rol
push
mov
fidivr
std
pop
loop
out
adc
sbb
dec
jmp
mov
mov
or
retf
add
iret
dec
xor
fild
xor
popa
(bad)
daa
adc
pop
mov
push
test
push
and
dec
dec
dec
es
ins
popa
stos
push
iret
inc
add
add
cmp
xchg
inc
push
jp
jb
cli
out
cmp
retf
adc
jae
mov
int3
xchg
cmp
and
and
mov
or
xchg
outs
jne
jns
xchg
add
inc
daa
jbe
in
jne
scas
stos
xchg
lahf
loope
inc
stos
sbb
mov
or
lods
lea
dec
pop
dec
push
or
mov
fidiv
xlat
retf
(bad)
sbb
add
ss
nop
das
inc
xor
mov
mov
sbb
std
xchg
pop
rcl
out
and
inc
xor
cmp
push
gs
fstp
mov
aad
stos
call
aas
inc
mov
jo
inc
fstp
clc
pop
xchg
aaa
jae
retf
mov
ins
add
sbb
jmp
mul
jle
push
add
pmulhw
mov
imul
out
aam
push
push
in
adc
in
sti
pop
sub
nop
out
cmps
mov
pop
mov
daa
aas
jo
div
fwait
aad
and
inc
jns
jp
stos
xor
mov
push
data16
out
pop
sub
(bad)
leave
push
into
pop
jbe
out
sti
add
mov
mov
idiv
loope
dec
push
mov
jb
add
iret
es
mov
inc
lods
push
mov
sub
xchg
push
push
mov
test
stc
in
aad
rol
(bad)
leave
sub
or
push
dec
mov
jo
inc
add
adc
push
mov
enter
sub
sub
xchg
clc
cmp
dec
scas
movs
ins
arpl
mov
mov
(bad)
fsubr
pusha
sbb
bound
jae
add
data16
add
add
xchg
xlat
data16
jecxz
xor
cmp
sbb
sti
(bad)
cmp
xor
mov
dec
cmp
add
fbstp
call
retf
jae
std
jbe
pusha
fisttp
cmp
or
add
add
(bad)
into
xchg
xchg
mov
je
sbb
jp
test
inc
add
lea
cmp
aad
or
lock
cdq
(bad)
ficomp
mov
adc
jnp
test
fwait
mov
jmp
fwait
das
aad
imul
or
data16
test
mov
mov
xlat
in
pop
push
out
(bad)
push
add
cmp
(bad)
sbb
mov
test
jmp
dec
mov
dec
sar
cld
call
push
xor
ror
aas
inc
imul
pop
test
sti
inc
jp
mov
js
scas
daa
int3
push
add
aas
jnp
push
in
jo
or
(bad)
cs
xchg
rol
inc
jl
inc
or
xchg
push
push
inc
sub
lods
xor
cmps
inc
add
add
ret
std
jno
adc
mov
xchg
jmp
retf
push
cmc
lahf
xchg
xchg
cmp
jmp
adc
add
call
mov
dec
es
daa
sbb
movs
ret
sti
sahf
(bad)
or
loopne
out
xor
ja
jmp
je
add
pop
retf
ret
cwde
movs
sub
sbb
sar
dec
inc
dec
jecxz
adc
add
das
xchg
cmp
push
xlat
out
add
sbb
xchg
cmps
fisttp
repz
cs
mov
in
rcr
xchg
xor
in
pop
mov
sbb
popa
or
sahf
in
pushf
stos
add
je
cmp
pop
iret
lea
fwait
ret
and
pop
push
jne
das
and
push
jnp
idiv
mov
stos
xor
call
std
pop
fwait
mov
mov
xchg
leave
aas
xor
in
call
sub
mov
shl
imul
mov
sbb
push
addr16
not
inc
mov
xchg
or
rcl
dec
jp
jno
scas
je
jp
sahf
inc
jg
jmp
pusha
sub
test
and
test
lods
mov
sti
out
mov
fstp
aam
cmc
test
jmp
push
ins
call
test
and
mov
repz
sub
fwait
rol
shl
imul
stc
jnp
pop
in
mov
xchg
push
cdq
push
std
imul
mov
imul
inc
mov
aam
rcr
jp
lods
daa
xor
pop
sub
inc
mov
lods
or
aam
out
int3
daa
enter
ja
sub
push
sysret
leave
push
xor
or
ja
adc
(bad)
mov
and
(bad)
jg
xchg
mov
test
daa
repz
mov
sub
jmp
push
or
aaa
push
mov
loope
mov
xchg
sti
mov
ins
gs
out
xchg
sub
adc
fcmovnb
fisub
in
retf
add
mov
loopne
mov
pop
cmp
stos
push
jns
fs
js
std
xchg
(bad)
inc
cli
push
cmp
dec
ret
loop
das
scas
jl
inc
imul
mov
int
(bad)
xor
rcr
or
push
push
es
cmp
cmps
xor
repz
push
inc
lahf
test
(bad)
jmp
mov
repz
xor
mov
loope
mov
movs
xchg
and
xlat
fild
push
xor
and
xchg
sub
frstor
cmp
mov
sub
ja
rcr
push
enter
jnp
shr
ds
imul
leave
sbb
xchg
adc
and
add
pushw
cmp
jmp
mov
test
jnp
cdq
sbb
xor
sub
xchg
ret
mov
mov
leave
fimul
mov
xchg
mov
pop
es
retf
push
fidiv
repz
movs
pop
mov
sbb
pop
or
ja
cmp
enter
inc
(bad)
mov
jmp
mov
(bad)
call
(bad)
sbb
lock
inc
mov
inc
stos
daa
jg
test
call
mov
je
cs
adc
cdq
adc
pop
add
inc
xchg
dec
pop
mov
arpl
dec
(bad)
mov
inc
call
bound
mov
arpl
mov
and
enter
mov
or
test
lock
outs
retf
pop
fmul
add
sti
dec
xor
leave
shr
mov
in
stos
daa
enter
dec
mov
call
dec
cmps
fisub
pop
loope
ficomp
push
or
jecxz
sbb
inc
jnp
xchg
inc
(bad)
pop
ret
fcomp
data16
test
jmp
push
dec
mov
xchg
jmp
jg
gs
out
xor
adc
fcom
cmps
dec
mov
pop
sbb
out
(bad)
jp
dec
xlat
cmp
adc
cs
xchg
jge
jmp
sbb
lods
je
pusha
jb
fwait
cmps
fld
xor
jbe
jg
sub
adc
sbb
loope
adc
sti
into
cmc
mov
ret
mov
ret
(bad)
lea
test
sti
std
xchg
mov
inc
lds
sti
rcl
out
pop
adc
pop
icebp
xchg
aas
push
dec
adc
outs
cmp
fwait
lahf
mov
push
les
add
xchg
mov
inc
imul
jns
out
(bad)
stos
pop
cmp
outs
sub
daa
popa
stos
jbe
dec
jns
xor
and
push
jno
push
mov
in
push
push
add
loop
in
data16
icebp
stos
or
fld
mov
int3
into
enter
sub
dec
or
call
xor
aam
and
mov
ror
jl
xor
jle
mov
add
pop
retf
cmps
test
inc
mov
daa
inc
xor
push
pop
ja
adc
mov
es
out
pop
mov
cmps
and
sub
push
and
sub
push
xchg
jl
ja
inc
je
xchg
jecxz
xor
mov
mov
mov
push
cmps
or
add
and
mov
mov
sbb
mov
test
mov
mov
(bad)
outs
mov
int
push
inc
sti
fsub
hlt
retf
push
ret
neg
lds
in
and
cvtpi2ps
pop
mov
cmps
cld
adc
(bad)
jmp
add
sbb
mov
fsub
sbb
test
jnp
and
mov
out
lahf
(bad)
fwait
adc
xor
adc
inc
fs
retf
push
in
sub
jmp
mov
mov
xchg
jae
dec
push
jl
fist
bound
and
bnd
sti
pop
scas
add
push
push
fldenv
dec
outs
rcr
fs
mov
pop
sti
dec
push
mov
test
sub
leave
sub
test
pop
dec
fwait
retf
adc
jo
push
xchg
retf
je
fmul
leave
stos
jp
sahf
rol
lds
and
(bad)
sub
xchg
or
leave
xchg
test
outs
ins
inc
push
jg
pop
jae
sahf
outs
mov
sbb
push
inc
push
shr
xchg
(bad)
inc
xchg
lds
mov
adc
sbb
push
int
pop
and
hlt
jb
scas
sar
add
or
and
add
test
outs
pop
xchg
inc
lock
cmp
sbb
jne
in
xchg
cs
mov
adc
xor
repnz
cmp
aaa
test
and
stos
push
fidiv
call
xor
mov
test
pop
adc
ins
push
pop
daa
sti
and
sbb
retf
popa
cwde
add
push
fstp
jmp
sub
xor
outs
adc
nop
gs
clc
mov
call
sahf
and
sahf
add
inc
out
pop
push
xchg
aas
add
xor
inc
pop
mov
inc
outs
or
mov
mov
inc
sbb
cmp
jg
loope
adc
jmp
out
dec
addr16
xor
movs
in
inc
ja
sub
mov
(bad)
(bad)
ds
cmp
jns
jnp
mov
cmp
scas
(bad)
(bad)
fnstsw
push
outs
jecxz
push
push
inc
cmp
jo
test
ret
hlt
scas
mov
sbb
fild
pop
mov
stos
lods
in
aam
mov
and
add
pop
jmp
add
jl
lahf
ss
sub
call
fld
ds
aas
int
pushf
pop
mov
inc
inc
push
adc
fisttp
fisub
daa
mov
adc
cmp
stos
js
stos
push
push
mov
(bad)
addr16
push
cmp
leave
vmwrite
ror
mov
inc
add
fiadd
xor
jmp
jl
or
cmp
test
shl
idiv
push
mov
cwde
and
sub
sub
xor
inc
test
repz
mov
in
xor
or
in
dec
mov
ror
mov
rsm
retf
rol
in
xchg
dec
lods
dec
ss
scas
imul
fnstenv
xchg
add
ins
sti
or
jnp
sbb
arpl
dec
xor
stos
sbb
xor
sub
(bad)
mov
sti
xchg
ja
gs
pop
cmp
xchg
bnd
adc
jmp
dec
fisttp
fidiv
mov
cmc
imul
push
xlat
xor
inc
jl
nop
push
mov
sar
js
xchg
push
dec
repz
fist
mov
sbb
mov
cmps
push
sahf
push
les
aas
sub
push
dec
hlt
loopne
sub
scas
cmp
pop
add
lods
add
pusha
aas
(bad)
pop
not
stos
mov
popw
fwait
test
dec
sbb
pusha
or
enter
loope
sbb
mov
mov
sbb
sti
push
pop
sub
xchg
daa
call
pop
and
jp
adc
es
mul
mov
in
add
sar
ret
daa
(bad)
cdq
sbb
aas
and
inc
lock
mov
es
xchg
push
mov
fstp
fdiv
ins
jp
fstp
pop
xor
jmp
repnz
retf
xor
fdiv
add
sub
mov
dec
cmp
pop
lock
(bad)
sbb
aam
fdiv
and
mov
les
xchg
jl
into
cwde
jne
call
dec
aaa
es
(bad)
stos
aad
movs
mov
mov
(bad)
mov
sub
sub
sbb
inc
or
jecxz
pop
bound
stos
inc
daa
push
jmp
pop
retf
out
sti
dec
jno
ss
pop
ret
bound
push
loop
dec
xchg
and
loope
pop
in
xchg
leave
imul
jnp
adc
imul
pop
jmp
cmp
xchg
stos
dec
mov
push
or
inc
stc
and
sti
jecxz
add
xchg
dec
iret
jmp
aas
push
mov
ja
test
leave
mov
mov
out
cdq
push
push
js
sub
sub
jb
inc
push
push
cli
leave
dec
ds
repnz
and
jle
stos
adc
fimul
dec
add
jo
add
mov
fcom
(bad)
nop
jecxz
test
test
clc
cs
repnz
rcr
clc
sub
mov
pop
fsubr
test
je
retf
jns
jge
arpl
je
mov
repz
jmp
jb
test
mov
or
jns
test
sbb
xor
add
das
inc
test
inc
imul
push
mov
jb
dec
mov
dec
mov
test
xor
mov
in
sub
mov
sar
dec
xchg
inc
jbe
mov
jmp
dec
xor
xor
push
retf
aaa
mov
lahf
mov
fist
fucom
cli
pop
push
fwait
sbb
arpl
fs
pop
loop
movs
add
mov
repnz
outs
xchg
cmp
jecxz
ss
or
sbb
push
repnz
push
in
add
jno
ins
xor
xchg
mov
and
cmp
mov
adc
mov
fwait
mov
push
(bad)
and
push
jp
cwde
or
dec
(bad)
in
in
sub
or
push
push
scas
out
pusha
sti
(bad)
mov
pop
data16
ror
daa
dec
add
jmp
push
xchg
xor
inc
jg
cmps
sbb
test
movs
fsubr
sbb
or
sub
pop
arpl
fwait
inc
mov
mov
jmp
arpl
out
imul
dec
mov
inc
in
lods
(bad)
fsub
add
mov
sahf
icebp
in
dec
push
test
xchg
pop
and
xchg
retf
mov
mov
pop
in
mov
ss
fistp
cmc
fs
cs
mov
or
xchg
clc
mov
cwde
mov
(bad)
mov
pop
xchg
cmc
push
dec
jmp
mov
pushw
sbb
daa
jo
shl
out
jp
push
xlat
aas
xor
sbb
outs
xchg
pop
(bad)
ret
jge
and
fdiv
es
mov
pop
push
mov
addr16
xor
pop
aaa
jbe
mov
mov
add
(bad)
jnp
mov
push
fisubr
and
pusha
pop
pop
(bad)
movs
fild
xchg
xchg
inc
mov
and
imul
cmp
pop
and
add
or
pop
out
dec
cmp
rcl
enter
jo
or
cli
jp
add
movs
inc
inc
xlat
call
cs
fnstcw
add
rol
ja
cmp
(bad)
es
push
sbb
stc
aad
sub
jae
mov
xor
adc
fnstenv
in
fcmovnu
xchg
add
push
and
enter
push
imul
and
push
fwait
sbb
push
retf
scas
enter
xchg
icebp
pop
jns
or
fnsave
jne
jg
mov
dec
inc
dec
sahf
cmp
test
lahf
mov
ret
nop
xchg
dec
retf
lahf
fdivr
in
mov
and
cdq
inc
add
jno
adc
or
mov
loop
pop
out
leave
in
aam
ficomp
dec
out
imul
(bad)
sub
sbb
sbb
sub
cmc
(bad)
adc
imul
push
push
cmc
pop
movs
popa
fst
je
aad
iret
xbegin
add
movs
xchg
mov
jb
dec
pop
ret
test
cmp
lds
cmc
push
or
sar
bound
adc
mov
inc
jecxz
jmp
and
xchg
lahf
and
adc
fisttp
cdq
inc
js
sub
ret
mov
xchg
mov
outs
jnp
dec
inc
pop
ss
jp
add
cmps
test
or
cli
cld
cmp
mov
rol
loop
jp
loope
icebp
inc
push
mov
mov
in
and
vandps
push
loopne
and
arpl
cmp
cmp
jns
sti
stos
pop
clc
dec
scas
fs
retf
cli
test
jo
xor
les
pop
add
xchg
or
fwait
mov
jae
icebp
mov
call
jo
cmp
mov
gs
sub
jbe
xchg
int
mov
sbb
(bad)
iret
push
inc
mov
mov
cs
adc
or
sti
mov
pop
out
jg
sbb
test
cli
retf
adc
pop
and
sub
jmp
imul
xchg
movs
sbb
add
jnp
and
or
data16
mov
inc
popf
sahf
mov
mov
jmp
(bad)
fdivr
mov
sbb
adc
jb
add
fwait
pusha
(bad)
shl
mov
fmul
jp
jecxz
fld
jl
jno
push
(bad)
xchg
mov
popf
sub
popa
sti
and
dec
pop
sbb
(bad)
aam
xchg
sub
imul
(bad)
sbb
or
sub
loope
inc
sbb
in
jp
ss
pop
pop
test
sub
xchg
out
mov
cld
adc
rcr
xor
jp
test
pop
jle
add
mov
(bad)
mul
inc
iret
ja
inc
pop
ficom
push
pop
add
dec
jp
js
mov
(bad)
ds
pop
adc
in
sbb
and
popa
ret
mov
or
push
hlt
xor
leave
add
aas
push
xchg
xchg
fisubr
dec
adc
out
inc
mov
xlat
stos
xchg
add
push
jmp
mov
adc
sbb
mov
mov
fstp
mov
xchg
sbb
stc
xlat
add
stc
sub
cmps
loopne
xor
pop
sbb
nop
dec
dec
test
mov
or
add
adc
outs
icebp
imul
sti
cmp
out
push
sbb
dec
mov
ret
mov
jg
pop
and
out
retf
mov
xor
sub
adc
push
add
mov
ss
mov
scas
repnz
mov
aam
inc
add
jmp
xchg
cmp
(bad)
jno
ficom
(bad)
repnz
imul
push
imul
mov
retf
test
outs
(bad)
aas
es
stos
xor
push
jp
or
xchg
into
push
push
cmp
mov
lahf
add
icebp
inc
pop
add
sahf
(bad)
out
cdq
xor
pushf
add
lock
jb
mov
(bad)
std
out
or
mov
push
ss
scas
cmp
scas
stos
xchg
lahf
inc
push
ret
add
push
xchg
ret
xor
pop
push
dec
fs
(bad)
fidivr
inc
in
inc
mov
mov
je
ud0
pop
mov
inc
add
imul
repz
test
mov
cli
int
dec
pop
pop
bound
ja
ins
les
je
dec
pop
xor
imul
rcr
in
out
fstp
push
cdq
mov
inc
xchg
sbb
jecxz
cmps
adc
(bad)
fbstp
and
ja
jmp
adc
jae
add
ins
not
mov
jo
and
(bad)
cmp
addr16
sbb
jg
out
adc
js
cmp
imul
sbb
xchg
cmps
std
test
push
movs
pop
je
push
les
stos
daa
sbb
test
and
adc
pop
mov
jnp
and
gs
mov
inc
retf
dec
sub
fidiv
enter
int3
fcmovnu
ins
mov
cmp
cmp
out
dec
out
mov
push
sbb
xor
jno
nop
mov
cmp
pop
pop
leave
inc
push
repz
arpl
loopne
adc
mov
jmp
mov
jo
mov
dec
sub
stos
lahf
shr
stc
nop
in
push
or
add
arpl
add
out
movs
pop
fwait
sti
iret
pop
mov
(bad)
pop
jne
sbb
push
gs
fsubr
xchg
test
or
dec
rcl
sub
or
mov
ins
(bad)
call
add
adc
jb
test
and
push
out
sub
xor
ins
fdivr
push
add
mov
cmp
fcomp
loope
mov
jnp
dec
mov
inc
ins
std
pop
jl
ss
cs
sti
inc
mov
jno
stc
fnstcw
retf
mov
sbb
push
pop
sub
vshufps
aad
mov
fst
fst
pop
daa
mov
xchg
jb
add
lock
pop
and
cli
jp
retf
adc
adc
push
jmp
mov
lds
xor
mov
jmp
lds
mov
jbe
push
cs
pop
sub
popa
mov
in
lea
jl
das
xchg
rol
test
imul
jo
std
imul
sbb
sbb
inc
cmp
pop
jns
fild
sbb
jmp
js
cwde
daa
xchg
inc
xchg
ja
dec
dec
out
lea
call
test
ror
xchg
mov
jmp
dec
adc
fldpi
add
je
ins
jns
push
out
push
jge
cmc
loop
test
clc
pop
inc
sbb
jae
add
cmps
movs
sub
dec
jbe
cs
inc
imul
sub
lods
sub
stos
rcr
clc
push
adc
xchg
sbb
xor
das
dec
mov
imul
sub
scas
adc
ret
mov
or
div
ds
das
xchg
jo
push
mov
neg
aad
test
jp
adc
xchg
sbb
pop
adc
xchg
data16
ret
mov
push
and
fisttp
outs
imul
push
push
pop
xchg
stos
and
ss
or
movs
out
sbb
cmp
jg
je
add
xchg
mov
pop
sbb
cmp
mov
add
pop
mov
inc
mov
xchg
call
add
add
pop
pop
xor
jl
ds
(bad)
fdivr
retf
xchg
test
sbb
mov
sbb
fs
ror
sbb
(bad)
pop
int
icebp
hlt
sub
jge
jnp
leave
add
scas
(bad)
dec
inc
and
pop
xlat
ret
(bad)
pusha
add
mov
ret
mov
out
xchg
inc
sbb
mov
and
xor
mov
cmc
sbb
iret
or
mov
sbb
fild
(bad)
popa
inc
les
sbb
push
cld
xchg
ret
inc
sub
fs
xor
xchg
in
inc
bound
(bad)
maskmovq
div
push
iret
push
outs
mov
xchg
cdq
mov
mov
hlt
aaa
sub
pop
jecxz
jl
retf
out
es
je
outs
fisttp
mov
js
call
pop
cmp
jnp
and
jnp
data16
pop
fimul
xor
adc
sbb
ret
sbb
imul
out
into
mov
in
sub
pusha
loopne
jbe
mov
in
cli
cmps
jo
sub
and
retf
scas
push
xchg
ja
repz
test
cmp
stos
neg
cmps
and
mov
sub
xchg
cwde
mov
pop
jbe
pop
adc
mov
sbb
mov
push
mov
pop
push
xlat
mov
jmp
iret
adc
addr16
xor
mov
pop
and
add
popf
sahf
test
rcl
dec
push
pop
and
repz
jnp
fisub
pop
push
cmp
cld
fwait
call
outs
add
(bad)
jmp
inc
mov
mov
cmp
fs
mov
jg
cmp
sti
dec
adc
dec
push
jp
lods
jns
mov
xchg
leave
into
xchg
sbb
jbe
mov
xchg
adc
ret
icebp
leave
inc
fsubr
mov
arpl
xchg
mov
mov
mov
lahf
cmp
xchg
ret
jbe
test
cmp
jecxz
outs
enter
or
leave
lahf
ja
mov
out
and
cmp
jbe
mov
addr16
movs
dec
pop
mov
cmps
cmp
aas
daa
test
jp
xor
dec
lea
mov
inc
iret
xchg
push
jle
xchg
push
cmp
aaa
ss
sahf
dec
inc
dec
not
inc
arpl
push
les
in
mov
cmp
dec
and
stc
and
iret
test
fdivr
mov
jb
adc
cmp
icebp
iret
lock
mov
push
add
or
(bad)
inc
push
mov
mov
jecxz
xchg
pop
or
jnp
imul
outs
sub
add
fsub
imul
call
loop
or
shr
jmp
fmul
xchg
js
or
push
in
retf
cmp
loop
loope
or
in
xchg
push
lea
ja
mov
mov
pushf
lds
push
fisub
cmps
cmp
jnp
mov
dec
and
adc
mov
jno
mov
mov
int3
sti
xor
jg
xchg
jp
mov
or
sbb
dec
jp
xor
hlt
fnstenv
adc
movs
and
xor
mov
jne
retf
pop
pop
shr
dec
daa
pop
jle
adc
sub
ins
mov
aaa
iret
xchg
pop
xor
cmps
idiv
aaa
imul
rcl
out
push
imul
dec
iret
in
add
mov
jbe
(bad)
fist
xor
call
shl
int
mov
sahf
lods
push
inc
movs
pop
les
pop
mov
dec
cmp
sti
inc
retf
ret
es
shr
pop
xchg
daa
dec
xchg
pop
jmp
xchg
sbb
xchg
retf
nop
mov
push
sbb
or
into
outs
mov
pop
jae
retf
out
in
xchg
jnp
mov
inc
cdq
scas
inc
cs
(bad)
pop
rol
adc
mov
sbb
idiv
test
stos
adc
mov
jmp
and
xor
(bad)
dec
stos
push
mov
jne
push
stc
ss
hlt
mov
call
mov
inc
pop
pop
and
inc
das
or
jmp
push
pop
mov
in
pop
xchg
repz
pop
push
pop
clc
add
ror
or
clc
mov
arpl
clc
and
test
mov
inc
jmp
cmps
fwait
push
ins
xchg
dec
mov
or
push
out
jbe
not
es
(bad)
out
ficomp
xlat
(bad)
sti
std
test
dec
pop
mov
jae
into
jmp
and
pop
xor
leave
pop
shl
push
mov
xchg
cwde
ins
stos
movs
jno
sub
scas
test
outs
push
xor
(bad)
xchg
call
sub
in
sub
fsubr
xlat
sahf
stos
idiv
push
arpl
mov
cmps
mov
cmps
(bad)
adc
add
add
(bad)
imul
fistp
out
xlat
and
cmp
mov
sti
ja
add
jbe
xchg
retf
cmps
out
mov
aam
es
retf
(bad)
out
retf
aas
fwait
pop
ss
stos
bnd
sub
xchg
jne
or
mov
shl
push
and
(bad)
ja
pop
mov
cmps
pop
xor
sub
out
mov
or
sbb
add
push
fwait
int3
mov
push
stos
pop
xor
clc
retf
pop
jl
mov
enter
clc
or
aad
sti
repnz
mov
jp
cmp
xor
inc
out
jmp
iret
or
sti
jg
addr16
push
lods
pop
jbe
dec
jnp
xchg
cmps
sbb
sbb
cmp
pop
mov
es
push
xchg
mov
inc
add
ds
shl
sbb
add
jl
dec
or
lods
movs
mov
sti
mov
das
mov
and
cmp
rcl
shl
movs
outs
add
mov
jecxz
sub
out
xlat
add
outs
push
sti
sub
sub
stos
mov
cmps
fsubrp
cmp
sbb
jg
movs
pop
pop
movs
xlat
mov
or
aam
loopne
mov
dec
aam
pop
mov
pusha
cmp
xchg
lods
add
sahf
out
xor
pop
mov
push
pop
mov
sbb
dec
jno
sti
aam
pushf
movs
das
mov
cmp
ret
mov
pop
sbb
ds
add
fs
mov
cmp
fld
aam
push
(bad)
rcr
das
inc
xor
pop
outs
dec
push
jnp
mov
mov
jbe
lock
pushf
mov
(bad)
or
fcmove
arpl
scas
cmp
inc
jnp
gs
jle
or
and
jbe
shl
dec
fwait
cmp
outs
scas
mov
int3
inc
pusha
fild
retf
cmps
retf
xchg
cmc
aas
push
repnz
(bad)
adc
cmps
xor
dec
pop
pop
sbb
jg
imul
dec
icebp
push
rcr
dec
addr16
cmps
pop
jmp
(bad)
xor
aas
add
push
xor
mov
xor
sbb
fs
xchg
mov
push
icebp
fistp
sub
add
fnsave
imul
fild
xchg
ja
sti
jbe
hlt
cli
sbb
icebp
adc
pop
daa
fs
sbb
cmp
sbb
(bad)
test
xchg
push
cmps
sbb
out
call
push
retf
cmp
push
push
push
daa
inc
loopne
cmps
popf
shl
sti
xor
leave
imul
mov
call
call
and
pop
cmp
jmp
test
(bad)
jmp
dec
cs
jmp
int3
xchg
adc
mov
jnp
push
add
cmps
and
fs
mov
jle
xchg
mov
push
sub
fisttp
mov
lock
in
jecxz
(bad)
mov
cdq
mov
adc
(bad)
neg
inc
faddp
das
(bad)
aaa
lea
pop
les
ss
or
imul
or
lods
sbb
daa
cmp
mov
adc
iret
idiv
cmps
sub
xlat
push
retf
xor
xchg
xchg
cli
addr16
mov
ror
shr
or
leave
movs
dec
es
push
push
fidiv
lock
aaa
cdq
ss
mov
(bad)
sbb
mov
or
daa
imul
lock
out
call
xchg
mov
pop
in
hlt
sti
dec
sub
or
or
test
mov
retf
or
mov
dec
or
inc
pop
push
dec
dec
sbb
cmp
rcl
xchg
aaa
cli
clc
fcmovnbe
call
call
sbb
es
mov
fwait
in
dec
jl
mov
jge
idiv
mov
movq
pop
pop
jnp
sbb
jnp
mov
mov
ret
mov
add
pop
sub
repnz
add
stos
pop
ficomp
movs
fwait
cmp
push
xor
sbb
into
rcr
and
push
mov
mov
cwde
sub
sbb
in
(bad)
js
out
inc
inc
ja
stos
mov
or
mov
dec
xchg
mov
or
cmps
sbb
adc
and
dec
ds
pop
ret
push
mov
mov
(bad)
mov
jnp
cmp
add
jp
fwait
xor
jnp
mov
mov
hlt
push
stos
dec
movs
sbb
lds
cmp
jbe
and
aaa
scas
movs
fist
aas
pop
push
mov
xchg
test
add
sahf
sub
lea
or
xor
aam
pop
push
fisub
sbb
fadd
(bad)
imul
std
aam
mov
pop
in
ja
pop
or
fmul
out
idiv
sub
daa
pop
add
adc
dec
cmp
cmp
mov
test
mov
scas
js
xchg
xor
test
jmp
adc
dec
fsub
ja
cld
stos
fistp
out
fsubrp
xchg
mov
push
adc
gs
xchg
loopne
mov
ja
adc
outs
mov
mov
mov
mov
fcompp
mov
aas
pop
lods
fiadd
test
mov
xor
pop
(bad)
mov
xlat
push
inc
inc
inc
pusha
mov
ds
stos
xchg
dec
dec
dec
lock
jno
test
sti
repnz
mov
icebp
fsubr
ret
sub
pop
add
addr16
int3
ins
test
cmp
jmp
mov
arpl
and
xchg
pop
xchg
jmp
into
jmp
mov
push
pop
mov
arpl
jo
sub
inc
xor
xchg
dec
mov
jmp
jmp
sub
add
xchg
xor
or
stos
fs
call
xchg
daa
aaa
cmp
cmp
scas
cmp
push
jmp
sbb
lahf
adc
mov
rol
daa
pop
sub
sbb
dec
dec
and
push
scas
je
xchg
xor
xchg
sahf
add
add
(bad)
aas
push
ficomp
cmps
scas
pop
test
xchg
mov
jmp
pop
pop
mov
mov
mov
ss
or
jnp
jmp
sbb
sbb
or
sub
lea
xor
xchg
retf
cmps
sub
(bad)
sbb
cmp
pop
sub
cmps
or
fs
lods
push
inc
stos
dec
ja
inc
jmp
mov
xchg
mov
push
data16
in
inc
or
mov
stos
das
aaa
(bad)
push
inc
xchg
mov
imul
cmps
pop
pop
push
popa
pop
mov
ds
cmps
(bad)
mov
cmp
xchg
push
xchg
sbb
push
sti
int3
ret
or
mov
xchg
fisubr
rcr
(bad)
in
scas
(bad)
push
xchg
stos
jbe
adc
sbb
jnp
jnp
in
pop
aaa
pop
pop
jmp
test
cmps
dec
mov
ss
cli
jmp
leave
rcl
(bad)
jmp
xchg
arpl
clc
(bad)
out
xchg
xchg
pop
movs
ja
addr16
or
jnp
call
repz
and
fild
dec
cdq
jmp
mov
fist
adc
or
inc
mov
dec
push
mov
xor
mov
cmp
cmp
adc
call
push
jns
(bad)
inc
jns
xchg
cmps
rcl
or
movs
in
cmp
(bad)
idiv
out
pop
adc
mov
inc
ins
(bad)
je
sub
mov
out
jmp
pop
sbb
cmp
and
call
jge
lea
jecxz
repz
push
pop
out
clc
fnstenv
call
push
je
mov
jne
(bad)
iret
push
(bad)
mov
outs
arpl
adc
leave
aas
je
adc
xor
pop
xor
dec
retf
jp
xlat
test
or
cmp
ret
cs
mov
jns
dec
mov
into
fidivr
popa
call
not
mov
retf
idiv
push
popf
mov
test
cmp
xor
add
std
push
mov
ret
(bad)
and
sti
in
mov
push
ja
call
mov
inc
cld
call
lock
dec
test
out
mov
je
sbb
(bad)
out
xor
cmp
pusha
into
add
push
sti
xor
xchg
or
adc
ja
imul
in
(bad)
in
hlt
out
push
push
or
or
mov
stos
pop
inc
(bad)
retf
loope
mov
iret
in
xor
scas
loop
call
ret
(bad)
pop
add
repnz
rol
jp
in
ss
cmps
fs
stos
daa
fs
cmps
pushf
in
dec
cmps
pop
loope
cmp
(bad)
loope
or
aaa
cmps
test
pop
jbe
cwde
stos
iret
xchg
cmps
mov
dec
inc
adc
imul
pop
cmp
cmps
mov
fisubr
mov
cmps
add
sahf
ds
add
sbb
out
mov
inc
out
rcr
cmp
jmp
jmp
xor
fmul
out
ja
mov
mov
out
sti
or
cmp
(bad)
clc
inc
lahf
push
aam
(bad)
retf
sbb
cmps
imul
(bad)
mov
xchg
inc
pusha
jns
fyl2xp1
pop
loopne
push
mov
or
pop
push
data16
push
dec
xchg
xchg
pop
push
test
call
(bad)
jmp
repnz
out
fwait
test
cwde
pop
push
mov
stos
sbb
cmp
into
push
and
pusha
faddp
mov
fldcw
pop
jg
sub
mov
lods
fs
rol
cmp
push
ret
add
dec
imul
fnstcw
(bad)
imul
stos
jmp
jb
sti
xor
pop
inc
cmp
lea
fidivr
mov
into
xchg
and
or
sbb
imul
movs
mov
repz
nop
stos
in
sti
mov
rcr
(bad)
cmc
adc
cmp
outs
cwde
jns
loop
jmp
fist
(bad)
adc
xchg
adc
ja
stos
pop
mov
lods
mov
xchg
es
call
(bad)
(bad)
sbb
xchg
stos
sti
sbb
mov
ja
inc
push
(bad)
sbb
mov
ds
lahf
stos
sub
daa
sbb
xchg
icebp
inc
pop
push
xchg
xor
push
cs
into
les
movs
cmp
adc
out
iret
dec
leave
mov
sub
dec
sbb
inc
in
sub
dec
fs
std
or
cmp
jne
jbe
aas
xor
icebp
pop
mov
(bad)
jecxz
int
jmp
(bad)
cli
sub
push
jle
test
pop
mov
jecxz
jmp
mov
out
das
jno
cmps
dec
jns
inc
adc
fistp
inc
xchg
mov
leave
outs
mov
movs
(bad)
xor
dec
retf
mov
icebp
xor
sbb
jmp
xor
(bad)
hlt
ins
add
out
push
fnstenv
add
xchg
push
mov
add
packuswb
iret
and
fistp
inc
or
inc
pop
inc
push
test
or
fadd
xor
sbb
test
mov
or
push
shl
repz
retf
cli
adc
and
imul
jmp
xchg
fstp
xrelease
icebp
mov
(bad)
inc
in
push
out
inc
add
or
fadd
mov
in
ja
inc
adc
call
mov
jb
mov
movs
jle
and
aas
jl
fisttp
jecxz
int
mov
push
fwait
xchg
into
sbb
xchg
fwait
cmp
dec
lea
daa
pop
ja
rcl
(bad)
jl
js
les
adc
sbb
pop
and
or
dec
in
pusha
cdq
pop
shr
dec
mov
pop
(bad)
(bad)
cdq
xor
(bad)
sti
leave
or
sub
shl
mov
call
cmp
stos
mov
retf
sub
ss
mov
rcr
fld
mul
push
push
pop
dec
or
bound
mov
cld
adc
mov
sub
xor
mov
xor
sbb
jnp
sbb
push
lock
pop
or
(bad)
mov
sub
jmp
mov
sub
inc
ja
xchg
rcl
sub
inc
push
lods
add
mov
push
push
jmp
adc
or
pop
out
mov
and
std
mov
iret
aaa
addr16
test
jecxz
cmp
les
jno
into
pop
fsubr
pop
xchg
jnp
dec
cmp
(bad)
inc
mov
cmp
xchg
mov
pop
push
test
inc
sahf
push
jbe
xor
or
pusha
aam
push
mov
add
jp
mov
fnsave
pop
inc
movs
jg
xor
pop
stc
cmp
pop
dec
aad
ja
inc
inc
pop
pop
addr16
jl
pop
ror
ret
xor
add
mov
or
xor
and
sbb
sbb
shl
cld
and
add
push
pop
pushw
dec
sbb
cwde
jmp
fbld
add
cmp
jns
jg
mov
dec
jle
xchg
stos
xchg
xor
xlat
dec
out
es
imul
or
sti
imul
je
(bad)
sti
push
pop
mov
bound
cmp
loop
xchg
stos
push
sbb
cmps
es
repz
mov
mov
and
frstor
sub
in
es
dec
mov
(bad)
push
mov
jnp
les
es
jmp
adc
cmp
add
push
div
push
stos
cmp
les
(bad)
xor
fbld
call
adc
call
pop
jae
test
pop
fsubr
(bad)
or
js
xchg
ja
test
push
ss
pusha
inc
(bad)
imul
popf
sub
jmp
pop
(bad)
mov
mov
(bad)
xchg
or
leave
pop
sti
adc
daa
out
out
icebp
dec
mov
(bad)
mov
sahf
xor
movs
popa
stc
jmp
xchg
int3
daa
aad
(bad)
retf
inc
mov
mov
fimul
mov
rcl
jp
stos
pop
pop
and
sbb
sbb
mov
mov
sub
mov
cmp
push
dec
cmp
adc
mov
stos
sbb
es
pusha
div
mul
mov
lds
ss
pop
adc
pop
rol
push
scas
popf
mov
les
les
test
sub
jmp
fwait
inc
mov
out
push
push
imul
cmc
xchg
pop
xchg
stos
push
sbb
fist
jbe
out
jmp
adc
dec
leave
sub
call
popf
cmp
mov
(bad)
jp
das
push
inc
not
fwait
push
jmp
lods
push
test
mov
sbb
fwait
cmps
xchg
out
xor
(bad)
or
(bad)
(bad)
cld
sahf
xor
stos
xchg
data16
push
xchg
pop
rcl
jae
sub
mov
(bad)
xor
icebp
arpl
xor
fs
imul
jmp
(bad)
out
call
mov
cdq
xchg
xor
cs
daa
mov
ret
(bad)
jecxz
fisttp
pop
push
mov
add
call
mov
das
jp
hlt
push
push
test
das
xchg
imul
xchg
cld
aaa
retf
pop
cmp
sti
cmp
daa
push
lsl
jbe
inc
scas
xchg
pop
xchg
dec
jecxz
xchg
lds
stos
mov
rcr
push
retf
cmp
inc
loop
sbb
adc
jg
addr16
mov
sti
dec
fwait
stos
in
push
(bad)
xor
fucomi
leave
ss
sbb
stos
mov
mov
(bad)
jmp
cmp
(bad)
daa
mov
push
sub
cmp
jmp
mov
push
add
mov
stos
(bad)
sbb
and
push
fbld
in
sub
cmps
xchg
cwde
mov
pop
or
sbb
jb
out
push
imul
sti
cld
in
jmp
mov
mov
xchg
fsubp
sti
mov
push
jmp
cmps
cli
add
std
sbb
addr16
mov
aaa
mov
inc
ss
ins
jmp
mov
cli
gs
mov
jge
ja
xchg
call
idiv
clc
retf
xlat
jecxz
push
fdivp
pop
pop
dec
dec
sbb
adc
jp
sbb
pop
and
sbb
(bad)
lods
sti
in
xlat
test
out
sub
test
je
mov
cmps
mov
push
outs
jmp
in
es
xor
lock
jae
mov
dec
cmps
test
pop
or
(bad)
and
out
sbb
add
xor
xor
jg
mov
out
jmp
pop
stos
and
fcomp
sub
repnz
push
xchg
sub
inc
or
inc
(bad)
fsubr
sub
cmp
pop
neg
inc
xor
imul
clc
xor
xor
fidiv
test
cmp
bound
push
je
test
ds
(bad)
mov
sub
push
add
mov
xchg
xchg
lahf
movs
sub
fwait
mov
inc
mov
inc
xor
jmp
data16
jl
ins
(bad)
leave
push
inc
push
mov
ins
push
push
push
rol
adc
imul
call
shl
div
cmps
jp
bound
movs
jnp
pop
rcl
xor
ret
xlat
and
jb
jns
pop
xchg
sbb
mov
fwait
push
adc
sub
cmp
(bad)
push
clc
pop
sub
cmp
inc
repz
inc
cmc
out
and
out
add
or
and
call
dec
pop
sub
jbe
out
aad
mov
adc
out
es
inc
sub
xlat
imul
idiv
mov
neg
cli
adc
pop
or
sub
xchg
mov
or
xchg
out
dec
jmp
out
or
sbb
test
or
out
gs
or
(bad)
push
cmc
mov
cli
inc
mov
sti
(bad)
fnstsw
add
call
ja
push
xchg
cmps
push
jns
xlat
retf
rcl
imul
inc
imul
xchg
push
jmp
scas
sub
in
data16
jmp
push
repz
sub
pop
dec
scas
lds
aas
push
or
loope
xlat
sti
ret
aad
sbb
mov
mov
push
mov
icebp
sbb
fs
stos
outs
(bad)
test
pop
adc
xor
retf
xchg
ins
(bad)
stos
shl
scas
sbb
xchg
pop
out
push
and
pushf
push
mov
pop
pop
popf
dec
mov
dec
pop
(bad)
not
test
push
sbb
adc
push
push
call
out
(bad)
mov
call
cli
jbe
addr16
push
stos
xchg
aaa
inc
(bad)
data16
inc
push
add
stos
(bad)
dec
test
aam
jp
arpl
mov
sbb
enter
jecxz
ins
and
fstp
jmp
sub
or
pop
loopne
jne
jbe
sub
mov
push
ja
pop
ffree
sahf
and
dec
dec
or
mov
out
fmulp
push
rol
push
adc
mov
xchg
jp
jmp
mov
repnz
cli
sbb
dec
arpl
pop
xor
test
call
cmp
icebp
sub
cmp
push
sbb
je
or
sub
mov
fsub
mov
push
out
and
mov
loopne
sub
adc
pop
mov
sub
addr16
out
pop
xchg
sti
and
fstp
mov
jmp
out
inc
pusha
adc
cmps
ja
add
add
imul
daa
push
aaa
mov
xchg
scas
stos
cmps
pop
fs
imul
movs
cli
or
dec
addr16
daa
lock
ror
sub
addr16
stos
xchg
inc
fisub
or
cli
cmps
sub
push
sub
adc
or
test
push
or
inc
bound
dec
xor
and
pop
cs
cmp
dec
pop
and
jnp
push
cmp
push
ja
pop
sbb
aad
leave
int
fwait
sbb
stc
icebp
sub
cdq
xchg
xchg
movs
stos
add
mov
or
(bad)
and
dec
sub
jbe
sub
ja
test
mov
in
inc
dec
xchg
fdivr
retf
fnsave
mov
shl
jge
push
push
fisubr
cmps
jge
mov
in
sti
cli
cmp
dec
(bad)
cmp
imul
mov
jl
or
fdiv
jg
or
push
sbb
or
jmp
into
xchg
fmul
xchg
addr16
xlat
mov
add
or
ss
xlat
jmp
cdq
pop
xchg
ficom
imul
and
pop
int
shl
xor
addr16
cmps
ja
push
cwde
fisubr
clc
pop
icebp
push
pop
repz
jbe
adc
adc
mov
fist
jnp
shl
shl
in
or
(bad)
(bad)
(bad)
xor
loop
aad
adc
inc
call
xchg
rdmsr
xchg
mov
mov
int
aaa
pop
fistp
ja
inc
pop
addr16
dec
je
into
pop
into
fisubr
aaa
pop
daa
mov
out
mov
jp
jge
(bad)
adc
dec
out
lods
into
push
or
addr16
(bad)
adc
push
jmp
inc
(bad)
jne
imul
sbb
jne
fs
jne
mov
(bad)
and
xor
(bad)
dec
xlat
xlat
out
out
mov
pop
mov
stos
retf
or
addr16
xor
xor
or
imul
mov
retf
(bad)
fbstp
imul
out
jmp
jnp
cmp
mov
mov
into
cmps
sti
jecxz
rol
imul
out
ja
mov
or
push
je
clc
sbb
imul
sub
in
in
or
mov
mov
dec
fild
mov
sahf
daa
pop
add
out
mov
idiv
mov
ror
xchg
xor
dec
pop
mov
jbe
add
push
fidivr
mov
shl
in
inc
cdq
jp
mov
jg
dec
pop
fwait
pop
test
scas
cmp
cmp
inc
fadd
push
push
adc
stos
and
test
push
cmps
mov
pop
aaa
(bad)
(bad)
retf
dec
fcomi
aad
(bad)
int
sbb
imul
mov
adc
gs
data16
or
shr
dec
mov
xchg
sbb
lahf
jmp
push
in
xor
cli
fdivr
adc
xchg
hlt
outs
data16
movs
pushw
cwde
mov
pop
in
daa
sbb
inc
mov
fcom
or
jmp
dec
jecxz
sub
xor
lods
icebp
xchg
dec
jg
xchg
mov
mov
pop
xchg
cmps
xor
or
fwait
pop
imul
icebp
xlat
popa
xchg
outs
adc
add
(bad)
retf
sub
ja
jmp
pop
add
es
imul
mov
inc
fcmove
fdiv
inc
call
aad
sbb
or
xchg
aam
mov
sbb
sti
push
mov
sub
repnz
test
ret
lahf
aaa
jmp
xlat
div
xor
jg
in
iret
mov
push
mov
(bad)
jge
int
cld
imul
push
and
jmp
jnp
add
(bad)
xchg
xchg
scas
(bad)
and
ret
popf
xor
pop
clc
pusha
jp
cmp
push
jno
or
test
sti
and
scas
stc
mov
jb
jmp
sar
jmp
jge
rcl
and
les
cmc
inc
mov
inc
jg
xchg
idiv
inc
sbb
gs
fsubr
dec
or
cmps
fmulp
ins
data16
retf
movs
jns
stos
xchg
nop
xor
dec
mov
iret
leave
stos
push
xchg
cmp
sbb
mov
movs
mov
(bad)
mov
lock
dec
push
sub
mov
adc
or
frstor
retf
sti
lahf
ret
mov
(bad)
sub
xchg
das
cmp
ss
cmp
aaa
out
repnz
mov
stos
mov
lock
(bad)
mov
stos
ja
inc
mov
mov
push
mov
mov
mov
mov
sbb
adc
xor
push
rol
gs
inc
jbe
inc
jo
sbb
mov
repz
fs
gs
and
inc
mov
adc
mov
jge
cmps
fistp
(bad)
out
or
es
or
sub
inc
ja
pop
xchg
jmp
fild
cli
and
pop
fisttp
sbb
or
js
dec
jae
adc
and
inc
push
sbb
stc
imul
mov
in
inc
push
pop
out
pop
lock
adc
mov
dec
xchg
jp
fsub
fcom
movs
or
sub
cmp
je
dec
out
xchg
add
out
xor
or
lds
movs
adc
dec
or
adc
xchg
jno
mov
mov
dec
xchg
pop
adc
in
pusha
sbb
pop
xchg
cmp
and
enter
mov
or
mov
pop
jns
imul
xchg
inc
out
sti
lahf
in
fisubr
imul
sub
jmp
jns
fld
push
xchg
adc
jp
adc
mov
sbb
push
out
or
(bad)
and
cmp
outs
inc
pop
push
inc
dec
cld
addr16
xchg
stos
xchg
xchg
mov
lock
movs
push
loopne
inc
jmp
loopne
adc
dec
jp
mov
xor
or
mov
adc
push
(bad)
mov
add
push
inc
xchg
retf
aaa
retf
(bad)
or
cmp
push
mov
xchg
inc
fadd
(bad)
fcomp
jns
jl
push
sub
xor
arpl
arpl
ss
fmulp
ror
xchg
ins
leave
push
int3
cmp
cmps
inc
gs
xchg
inc
sar
das
data16
cmps
dec
les
and
popf
sbb
lds
test
arpl
ja
outs
dec
sbb
dec
retf
popf
ins
dec
sahf
mov
in
inc
ror
add
popa
or
leave
loopne
cs
cmp
jl
fidiv
fs
add
sbb
jne
or
(bad)
jecxz
rol
xor
(bad)
fcomp
popaw
or
out
pop
jecxz
test
or
xor
in
jmp
cmps
movs
lds
mov
fldenv
or
jmp
mov
lea
rol
jb
adc
jmp
shl
inc
dec
arpl
test
or
jne
and
push
fst
jmp
mov
add
nop
test
jmp
loopne
add
std
es
ret
sub
fldcw
ins
xor
or
inc
cmp
stc
jmp
sbb
jl
pop
(bad)
hlt
jb
or
inc
test
aam
fisubr
push
test
ffree
or
sti
sub
or
add
pop
dec
daa
shl
jns
mov
or
(bad)
(bad)
sti
test
aaa
lds
retf
pop
mov
fwait
mov
jbe
data16
idiv
int3
aaa
ficomp
mov
(bad)
mov
jbe
stos
push
fidiv
into
sbb
pop
push
pop
je
aam
or
mov
les
push
jnp
stos
jmp
xchg
test
inc
jns
xor
mov
add
or
int
xor
dec
lahf
jae
imul
out
adc
daa
shr
jp
sub
xchg
adc
xchg
inc
pusha
rcl
ficom
leave
sub
pop
add
js
push
sahf
lahf
pop
ja
cmp
imul
xor
jmp
cmp
cmp
cmp
fstp
cwde
mov
fs
cmp
sub
adc
sub
sub
daa
and
sbb
push
mov
mov
push
pop
fs
xchg
sti
inc
std
(bad)
add
sbb
and
pop
sub
push
jge
cmp
mov
sub
addr16
jmp
cmp
pop
push
jae
push
xor
ins
rol
inc
jle
cmps
outs
pop
data16
xlat
imul
mov
jmp
mov
cmps
xchg
mov
hlt
test
ins
cmps
jbe
not
xor
addr16
sbb
hlt
in
imul
inc
sti
imul
retf
mov
sbb
clc
aas
push
sbb
inc
test
nop
jns
mov
bound
mov
sub
movs
shr
call
lock
mov
mov
fild
imul
sar
dec
out
ret
sbb
imul
cmps
repz
in
mov
inc
pop
imul
ins
iret
push
push
ret
xchg
jmp
push
(bad)
cdq
adc
std
jge
das
cld
aam
rcl
sub
pop
in
xchg
xchg
push
pop
sti
shl
sbb
and
mov
fdivr
pop
fisttp
stos
imul
shr
sti
fst
xchg
leave
cdq
cmp
imul
add
retf
cmp
iret
fmul
or
hlt
inc
(bad)
sbb
and
test
pop
adc
mov
sbb
mov
(bad)
(bad)
fcmovb
jmp
ins
xchg
sbb
jae
ja
(bad)
fisub
jle
leave
int
cmps
cdq
div
es
(bad)
jge
(bad)
push
jbe
mov
jno
mov
(bad)
int
add
add
sbb
daa
sub
fbstp
dec
idiv
fiadd
stos
push
mov
dec
arpl
and
inc
aas
addr16
test
stos
xor
or
xor
fisubr
xor
rcl
test
pop
xlat
mov
lods
fist
(bad)
cmp
push
fwait
add
adc
push
mov
jno
xchg
in
fld
outs
push
adc
clc
stc
add
cmps
ja
jns
mov
movs
sub
xchg
mov
icebp
mov
mov
dec
jle
push
fst
inc
(bad)
mov
test
push
hlt
retf
mov
dec
into
stc
mov
jp
cmp
xchg
jmp
mov
test
arpl
into
lds
inc
shr
mov
dec
jbe
inc
cdq
xchg
sbb
sub
ror
fcomp
test
sar
(bad)
mov
push
push
sub
dec
xchg
inc
xor
mov
stos
cmps
aam
retf
mov
rcr
in
pop
call
out
mov
cmp
(bad)
adc
(bad)
outs
ja
sti
(bad)
inc
jb
imul
mov
gs
fnstcw
ss
mov
mov
or
out
and
xor
aas
daa
cs
sub
in
or
repz
push
int
les
aas
inc
cmp
clc
adc
mov
or
push
test
cmp
jp
jecxz
sbb
dec
cmp
and
xlat
pop
xchg
icebp
call
xchg
stos
or
aad
jmp
sub
fidivr
imul
cmp
mov
dec
sub
popf
bswap
adc
movs
mov
mov
test
jp
imul
push
fcomp
jmp
push
rol
in
test
in
push
pop
xchg
(bad)
jo
push
mov
jmp
mov
nop
jge
test
cdq
out
jne
mov
movs
shl
push
leave
sub
push
in
cmp
(bad)
jo
inc
pop
xchg
jge
sti
cmps
scas
addr16
mov
(bad)
xlat
(bad)
ret
in
sub
dec
cmp
xor
dec
adc
push
inc
push
aaa
stos
ss
cmp
mov
and
(bad)
out
int
or
inc
mov
jne
movs
or
clc
cmp
fadd
inc
daa
add
dec
adc
ret
add
cmps
jmp
sub
scas
sbb
mov
pop
sbb
ficomp
adc
arpl
xchg
popf
cmps
push
je
mov
loope
stc
hlt
inc
imul
xchg
je
adc
mov
rcr
std
cmps
popf
cmp
int
imul
push
dec
adc
cdq
mov
popf
ins
test
sbb
push
add
sub
stos
jl
pop
xchg
js
mov
inc
add
sub
stos
fimul
aad
int
mov
dec
dec
add
cmp
dec
test
xchg
dec
leave
xchg
inc
mov
mov
fadd
lods
ror
test
or
mov
xor
sbb
or
push
iret
leave
jl
(bad)
inc
cs
in
fwait
mov
dec
leave
jge
dec
add
jns
sbb
popf
ror
test
stc
add
dec
or
sbb
fldenv
in
test
int
cmp
int
xchg
and
or
add
lods
loope
mov
or
ds
jp
mov
gs
or
gs
push
push
sub
popa
dec
jle
jp
sub
ja
push
(bad)
test
aas
aam
cmp
mov
scas
les
call
and
xchg
jge
mov
loopne
fmul
pop
in
cld
dec
and
mov
leave
and
sar
dec
stos
adc
push
rcl
int3
rol
or
rol
int3
sub
in
lods
pop
inc
push
adc
mov
ins
iret
mov
sub
or
nop
dec
sbb
and
das
and
jns
retf
inc
cmp
mov
mov
pushf
call
or
pop
test
lods
dec
and
call
lods
inc
in
mov
mov
mov
mov
outs
ins
push
loopne
arpl
push
mov
and
xchg
inc
outs
or
enter
lods
mov
out
into
aam
call
pop
int3
and
mov
push
leave
or
stos
or
mov
ret
sbb
stos
inc
dec
hlt
aad
xchg
xchg
outs
lahf
ret
test
lods
jle
mov
into
repz
inc
sub
pop
test
sub
outs
stos
dec
sbb
sub
jle
lods
outs
inc
stos
or
and
and
lods
sbb
mov
scas
or
les
mov
mov
and
dec
into
xchg
cmc
and
lea
outs
int3
mov
sbb
sub
pop
mov
daa
jmp
xchg
ins
mov
mov
int3
xchg
js
test
into
push
add
(bad)
mov
out
mov
scas
test
xor
dec
(bad)
sbb
into
push
xor
or
adc
inc
in
add
out
call
or
ret
inc
add
xchg
or
jge
inc
jmp
pop
push
dec
cmps
loope
jne
not
and
dec
into
iret
punpckhdq
pop
add
mov
cmps
mov
xor
mov
inc
out
or
popa
add
add
std
mov
add
mov
(bad)
retf
add
(bad)
and
retf
es
adc
xchg
or
(bad)
inc
rol
mov
mov
dec
dec
(bad)
stos
jecxz
jbe
pop
neg
(bad)
cmps
dec
ret
not
mov
add
mov
mov
push
dec
adc
aad
inc
xor
outs
(bad)
lahf
or
mov
add
push
mov
fnsave
xchg
into
xchg
xchg
into
and
adc
ficom
push
(bad)
inc
outs
pop
inc
sbb
es
out
cmp
xor
imul
xchg
fisub
into
add
mov
enter
push
les
(bad)
mov
pusha
ja
jge
mov
cmps
(bad)
es
inc
xchg
xchg
scas
sbb
push
ror
mov
xchg
inc
add
jp
les
es
push
adc
adc
adc
out
adc
adc
nop
sub
popa
sbb
push
scas
pop
fadd
xor
call
sbb
sbb
jp
pop
ins
scas
adc
ins
shl
das
nop
lods
aad
aad
push
and
adc
rcl
pop
dec
jg
sbb
call
sti
sbb
push
xchg
call
mov
push
je
jno
rcl
dec
inc
add
rol
sbb
fxch
xchg
push
out
push
xchg
cli
aam
xchg
sbb
ja
out
clc
ret
xor
jp
inc
scas
xlat
retf
sub
push
push
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
rol
aad
in
outs
outs
popa
adc
dec
stc
in
fst
hlt
rol
push
mov
sahf
add
push
aad
adc
jnp
aad
sbb
(bad)
call
rcl
dec
call
mov
xchg
xchg
adc
dec
call
jns
push
jecxz
inc
stc
jecxz
add
in
and
in
gs
inc
stc
xchg
push
xor
in
retf
push
push
xor
outs
adc
addr16
cwde
js
adc
movups
(bad)
shr
or
adc
jl
pop
dec
aas
add
push
js
fisub
dec
add
ror
mov
pusha
jo
adc
in
or
pop
and
xlat
ror
sub
pop
int
clc
dec
icebp
jg
repz
dec
cdq
int3
jno
sar
test
dec
div
dec
je
outs
sub
test
data16
inc
sbb
push
mov
mov
pop
(bad)
mov
and
mov
jno
inc
test
jp
mov
pop
iret
and
mov
test
mov
xchg
js
iret
inc
test
dec
add
test
jle
pushf
add
mov
mov
and
and
pusha
adc
pop
test
test
xchg
adc
pop
fadd
nop
jae
dec
push
or
sbb
inc
mov
les
fmul
adc
xor
jl
xchg
or
xor
push
nop
sub
or
sbb
int3
fld
adc
pushf
retf
or
dec
sub
test
enter
or
loopne
xlat
mov
cs
xor
shr
hlt
dec
adc
enter
rcr
or
adc
shl
and
sub
cmp
or
sbb
pop
fs
pop
sbb
pop
fdivp
and
xor
nop
add
xchg
add
add
fdiv
hlt
add
test
dec
xor
nop
pushf
and
lsl
test
and
xchg
test
test
arpl
(bad)
jecxz
pop
jmp
jnp
xchg
repnz
dec
mov
mov
ins
popa
movs
pop
lock
mov
scas
enter
out
outs
and
in
mov
lods
mov
mov
rcl
pushf
adc
in
and
dec
adc
mov
or
je
push
cli
or
and
push
xor
xlat
inc
not
push
shl
call
adc
test
and
cli
or
and
pop
cli
mov
dec
lock
jge
xchg
xor
aam
lds
imul
add
in
ret
jb
loope
lock
or
ret
xchg
in
call
inc
call
(bad)
sbb
ja
inc
dec
mov
call
popa
rol
xchg
add
push
jbe
push
cmp
push
ins
push
div
push
pop
sbb
loope
xor
in
and
mov
mov
mov
mov
sbb
xchg
mov
les
pop
xor
and
in
and
test
hlt
add
jmp
(bad)
ficomp
pop
xchg
das
daa
dec
dec
stc
pop
das
fisubr
mul
das
aaa
mov
inc
push
mov
clc
pop
or
sub
daa
cmps
fcomp
jae
xchg
or
inc
js
(bad)
fmul
aas
cmp
sub
mov
jae
repz
adc
(bad)
cmp
(bad)
aas
jae
sub
add
aaa
pop
jae
add
rep
mul
fcomp
add
and
test
out
or
xchg
or
cmps
aas
adc
jae
addr16
pop
jnp
ja
scas
ja
adc
pop
in
daa
jp
pop
das
fild
jge
stos
iret
pop
xor
and
push
mov
(bad)
nop
inc
xlat
arpl
movaps
mov
or
cld
cmp
iret
sub
retf
arpl
repz
jns
scas
cld
add
adc
jmp
paddusb
ja
(bad)
ror
movhps
adc
pop
iret
xlat
(bad)
push
dec
push
or
iret
test
xchg
adc
aaa
xor
jg
pop
out
das
icebp
dec
push
sbb
adc
xlat
shl
iret
(bad)
xchg
scas
aaa
xor
inc
imul
xchg
int3
enter
xor
push
mov
fdiv
(bad)
aam
mov
push
dec
ja
and
mov
pop
out
push
pop
movs
push
or
jg
popa
stos
push
jne
and
jle
les
aaa
inc
push
dec
push
jo
dec
adc
xlat
int
lock
int
xor
pop
(bad)
jae
adc
push
outs
or
out
mov
fcmovne
mov
xchg
movs
pop
retf
popf
daa
js
mov
or
inc
lods
add
lea
leave
loope
inc
imul
stc
test
sbb
sub
inc
in
pop
popf
xchg
and
stos
movs
call
push
scas
sub
adc
(bad)
out
lods
popa
lea
ins
loope
sub
add
or
jns
les
xchg
jmp
inc
call
imul
push
jge
or
sbb
in
dec
pop
mov
loope
mov
push
test
neg
sbb
add
and
and
add
retf
mov
ins
stos
xchg
adc
in
repnz
or
add
int3
or
test
(bad)
out
add
mov
in
aam
les
and
pop
in
repz
mov
and
pop
test
movs
push
stos
or
adc
loopne
retf
out
in
push
sti
mov
or
jmp
inc
mov
xor
or
mov
sar
popf
and
sbb
addr16
and
int
pop
mov
dec
mov
sbb
inc
adc
popf
pop
mov
and
xchg
cmp
mov
stc
mov
neg
lods
clc
in
or
and
leave
adc
ins
lea
aaa
dec
test
or
and
loop
repnz
stc
ins
lea
shl
mul
xor
inc
mov
sub
add
xchg
sbb
adc
out
jo
pop
sbb
data16
or
add
in
div
retf
and
push
sar
sbb
nop
add
jno
rol
mov
xchg
rol
adc
movs
outs
jns
test
test
and
fwait
xchg
inc
jns
popa
mov
pop
xchg
mov
and
mov
or
jge
mov
xchg
dec
dec
out
xor
push
or
mov
test
jno
adc
pop
js
clc
adc
adc
gs
xor
(bad)
call
mov
and
clc
push
pop
imul
(bad)
cmp
ror
mov
(bad)
and
in
stc
pop
mov
push
ret
cld
out
adc
mov
test
or
pop
push
xchg
stc
xchg
and
out
cmp
and
mov
jp
xchg
pop
adc
xchg
mov
mov
xor
bound
jb
in
push
mov
add
jno
fld
xchg
xchg
jns
jnp
gs
xchg
cdq
inc
popa
mov
js
mul
xor
mov
mov
mov
adc
xor
stos
popa
js
std
xor
xchg
clc
mov
xchg
xor
add
pop
into
pop
mov
rcl
imul
inc
xor
lock
test
jno
sbb
daa
out
cmps
mov
hlt
xor
je
xchg
inc
ja
pop
fld
icebp
inc
sbb
cdq
dec
call
add
jae
adc
je
jns
je
xchg
pop
mov
and
sub
xchg
jb
pop
mov
jno
(bad)
mov
aaa
lahf
call
mov
jmp
shr
sub
push
or
xchg
sub
xchg
inc
js
cmps
(bad)
enter
je
aas
stos
fbld
push
dec
add
push
fistp
sub
cwde
das
and
xor
in
in
cmps
test
mov
dec
pop
xor
sar
mov
push
jae
push
scas
out
iret
sub
test
push
aas
jno
shl
xor
outs
or
test
aaa
jo
out
enter
xchg
dec
sub
xor
out
mov
sub
mov
pop
outs
enter
xchg
test
ja
ret
psllq
bound
mov
cmp
push
das
neg
sub
aaa
aas
push
retf
fwait
(bad)
adc
neg
sub
aaa
iret
push
retf
es
jl
adc
jnp
test
ja
jp
mov
divps
dec
inc
test
ja
aas
outs
pop
movaps
inc
mov
xchg
mov
dec
(bad)
(bad)
aaa
outs
fmul
aaa
(bad)
xlat
das
or
push
scas
and
cmp
jecxz
ret
cmp
inc
sub
ja
pop
movs
imul
addr16
test
jb
fld
mul
(bad)
outs
ja
fdivr
addr16
pop
dec
sub
fisubr
pop
movs
call
inc
adc
out
iret
dec
loope
pushw
test
(bad)
fdiv
xor
ror
push
pop
push
les
jge
add
mov
or
xor
dec
cmc
popf
fs
cmps
cmp
aam
js
or
push
fcomp
jnp
rdtsc
push
retf
movs
outs
pop
ins
sbb
enter
inc
xchg
cs
enter
fdiv
mov
loop
fldenv
sbb
add
mov
add
add
add
add
fwait
ss
sbb
cmps
scas
popf
mov
xor
inc
mov
scas
mov
mov
pop
sbb
cmp
sbb
cli
call
push
stos
jnp
jg
dec
stos
adc
dec
jp
pop
adc
jmp
jmp
jmp
xchg
push
and
sbb
push
inc
push
cmps
sbb
jl
mov
or
jbe
pop
adc
jnp
lds
pop
mov
jns
addr16
add
mov
ja
cmp
adc
leave
iret
imul
mov
push
out
loopne
push
or
mov
adc
fbld
clc
stos
int3
js
ins
jne
je
(bad)
test
mov
std
frndint
(bad)
rcl
or
shl
(bad)
cmp
dec
cli
outs
(bad)
out
pop
mov
jno
loope
iret
jp
test
jo
dec
loopne
sahf
aad
in
enter
push
loope
xlat
dec
idiv
lahf
ret
ja
push
ins
(bad)
in
pop
lea
ins
lds
push
inc
xchg
outs
stos
popa
cwde
sub
inc
xchg
lods
adc
xchg
xor
fwait
and
repnz
mov
xchg
inc
cwde
add
sub
inc
out
add
icebp
das
hlt
or
xchg
xchg
cmp
xchg
and
mov
xchg
movs
push
mov
sub
inc
sti
rcr
xchg
das
xchg
popa
mov
xchg
and
movs
adc
inc
xchg
adc
xor
addr16
popf
add
and
fs
loope
shl
in
mov
mov
cmp
and
je
loopne
cwde
or
inc
ficom
inc
push
and
es
or
push
xlat
outs
mov
xchg
outs
aaa
iret
movs
mov
movs
cmc
mov
inc
out
mov
clc
pop
cdq
or
mov
fimul
(bad)
outs
scas
rcl
add
and
xchg
push
mov
gs
add
push
pushf
aaa
iret
mov
test
jmp
jb
xlat
inc
xchg
jnp
pop
inc
iret
and
retf
mov
inc
inc
mov
and
inc
cmps
movs
inc
xchg
popa
movs
inc
aaa
mov
add
and
outs
and
pop
iret
push
cmps
pavgb
fidiv
mov
xchg
das
pop
stos
push
fcomp
(bad)
cmp
pop
scas
mov
pop
inc
scas
aas
(bad)
sbb
cli
xlat
jl
fxsave
mov
and
pop
mov
mov
fmul
cmp
aaa
loope
inc
imul
pusha
aaa
nop
add
popf
add
cmp
mov
ret
sub
adc
jnp
push
outs
push
and
sbb
stc
mov
lahf
es
aaa
iret
add
push
sbb
jmp
mov
daa
loope
pop
imul
push
push
add
sub
sub
xor
sbb
movs
dec
frstor
pop
pop
mov
shl
movs
push
ror
mov
inc
nop
adc
inc
test
movs
mov
repz
push
and
lock
sahf
push
adc
add
push
mov
sar
cmp
sti
movs
or
jnp
adc
push
mov
pop
sti
mov
push
aam
mov
nop
and
icebp
arpl
shl
mov
inc
mov
dec
ror
imul
ins
(bad)
arpl
push
push
sub
cld
popf
xchg
mov
test
push
data16
jb
ja
data16
xor
add
je
cdq
xor
sub
or
data16
mov
mul
dec
gs
loope
push
popa
dec
jae
scas
xor
xchg
test
pop
xchg
pushf
xchg
and
mov
inc
mov
mov
std
or
jle
mov
(bad)
xchg
shl
fdivr
mov
(bad)
lods
adc
sub
xchg
ror
call
enter
xchg
fucomp
fst
mov
retf
mov
pop
mov
or
fist
stos
lods
movs
stos
mov
ret
fimul
fsave
mov
jb
test
aad
cwde
popf
shr
fidiv
xchg
stos
mov
mov
push
cwde
test
rcr
xchg
cmp
test
jmp
mov
cwde
ds
mov
fwait
aad
movs
out
stos
retf
aam
mov
mov
test
movs
mov
push
scas
(bad)
mov
rcr
into
jp
cdq
fwait
jmp
mov
mov
in
sbb
mov
mov
sahf
xchg
test
mov
int3
mov
cwde
mov
adc
cmp
adc
push
mov
cwde
sbb
jmp
test
xchg
ds
xor
and
sahf
cmp
adc
or
and
inc
test
and
sub
cdq
inc
pushf
xor
and
sbb
test
adc
adc
add
xor
xor
adc
or
cmp
xchg
sbb
ss
inc
jmp
icebp
add
adc
cmps
daa
mov
dec
fwait
inc
fwait
es
jmp
lea
adc
dec
lahf
cmp
xor
mov
lahf
pop
cdq
cmp
es
es
dec
cmps
and
xor
push
mov
mov
mov
and
or
sbb
sbb
daa
mov
mov
sbb
inc
call
add
pop
stos
ds
push
mov
mov
mov
in
or
or
or
inc
stos
add
sub
aas
xchg
add
or
add
pop
icebp
and
sub
add
pushf
push
sahf
sbb
mov
cmps
and
inc
mov
inc
lods
push
mov
pop
pop
adc
push
xchg
and
push
mov
mov
xchg
sbb
pop
xchg
push
mov
sbb
and
mov
add
sub
cmp
retf
sub
add
adc
and
sbb
mov
xchg
sub
push
cwde
dec
mov
test
(bad)
sbb
xor
push
add
xchg
dec
popf
pop
mov
push
mov
pop
xchg
xor
or
mov
mov
into
sub
or
sti
cwde
cli
fdivr
sub
xor
dec
sbb
out
jl
xor
adc
lahf
in
inc
mov
(bad)
and
or
sti
mov
jp
vmwrite
ins
aad
xchg
adc
aas
test
add
pushf
dec
retf
xor
mov
lods
dec
mov
push
xchg
sbb
mov
mov
xor
and
pop
(bad)
sub
adc
push
mov
mov
mov
sbb
adc
mov
xor
sbb
sub
xor
dec
mov
mov
fcomp
stos
sub
adc
jo
push
xchg
sbb
push
mov
or
inc
mov
pop
ror
loopne
or
dec
add
or
fisttp
pop
call
add
or
sbb
dec
cmps
push
nop
push
movs
pop
jae
out
retf
pop
test
jo
pop
stos
push
inc
jo
add
pop
fwait
jl
push
jge
inc
mov
js
push
std
jbe
push
mov
dec
retf
sbb
jl
ins
xchg
jge
imul
(bad)
or
push
push
or
jne
push
xchg
push
push
pop
mov
add
or
push
add
loop
xchg
lahf
outs
aad
mov
pushf
btr
pop
popf
jne
or
pop
popf
adc
outs
test
xchg
nop
outs
fwait
seto
push
jns
jg
pop
test
nop
dec
mov
dec
jle
xchg
pop
and
jnp
or
call
ins
mov
stos
or
dec
mov
pop
pushf
imul
jnp
or
jo
outs
je
mov
rcl
adc
pop
jmp
(bad)
ins
loop
ins
dec
mov
enter
ret
mov
xchg
in
mov
fnstcw
xchg
push
push
mov
mov
xchg
xbegin
mov
xchg
fsub
xlat
lods
add
xchg
mov
mov
scas
mov
pusha
mov
in
(bad)
xchg
stos
xchg
xchg
mov
into
cmps
mov
out
xchg
test
xchg
hlt
or
aad
and
movs
test
mov
or
(bad)
rcl
test
mov
cmps
cld
mov
add
dec
pop
mov
mov
xchg
mov
xchg
mov
not
call
cwde
repnz
mov
mov
inc
cdq
cdq
ret
xchg
mov
clc
xchg
mov
mov
push
repnz
fwait
fwait
mov
adc
cmps
sub
test
clc
mov
mov
push
mov
mov
sub
dec
add
jae
or
cmp
dec
call
test
adc
adc
lds
cmp
inc
icebp
ja
pop
in
jle
or
bound
and
add
push
hlt
dec
neg
mov
ds
es
imul
outs
(bad)
push
ret
xor
lea
sub
gs
push
(bad)
ss
mov
out
lods
sbb
call
ss
adc
sub
add
lock
aaa
aam
in
push
nop
inc
movs
sub
inc
jle
sbb
sub
rol
adc
push
leave
jns
xor
mov
dec
fdiv
xchg
leave
push
inc
repz
and
movs
xor
jmp
xor
imul
mov
(bad)
push
clc
xor
sub
adc
je
popa
test
mov
ins
div
xor
pop
call
sbb
outs
mov
mov
faddp
rol
cmp
fbstp
sub
stos
(bad)
pop
les
fild
leave
add
idiv
xor
or
pop
mov
dec
jmp
xor
inc
or
imul
clc
aas
in
stos
aam
sub
cmp
lds
add
lock
jmp
push
mov
repz
ret
mov
hlt
popa
xchg
ret
inc
jecxz
lahf
mov
shr
xchg
addr16
and
add
dec
loope
push
popa
xchg
shl
out
movs
mov
push
fisub
mov
out
in
test
(bad)
adc
repnz
dec
scas
clc
addr16
mov
xchg
push
mov
fstp
sbb
adc
dec
loope
loop
jecxz
ret
test
mov
sub
and
retf
call
adc
fnstcw
xchg
sub
aaa
cmps
pusha
fld
rcl
inc
loop
setge
sub
adc
mov
dec
lock
ins
movs
xor
jmp
dec
movs
pop
out
fild
mov
loopne
jmp
cmp
push
lahf
and
cdq
(bad)
pop
xchg
or
js
push
xchg
push
aad
sub
xchg
sti
setns
jne
pop
lahf
dec
mov
xchg
loope
iret
adc
or
sub
xchg
inc
retf
cdq
xor
pop
lea
push
add
mov
outs
mov
das
scas
imul
lods
push
fcomp
push
mov
mov
cwde
psrlq
mov
dec
shl
pushf
adc
cmps
jne
push
mov
ins
call
inc
std
stos
jne
pop
adc
adc
mov
mov
mov
cdq
sub
mov
inc
call
inc
jmp
mov
or
inc
out
rol
push
mov
lahf
pop
mov
mov
fsubr
inc
cmps
test
test
dec
in
dec
loop
cld
push
lds
std
push
mov
adc
push
(bad)
push
in
mov
push
jg
pop
mov
sti
and
xlat
jb
push
adc
adc
add
js
pop
outs
lods
outs
jmp
sar
stc
jbe
push
scas
mov
sub
inc
sahf
and
add
jle
inc
mov
inc
xchg
push
pop
loop
cdq
xor
and
xchg
xor
pop
imul
jge
mov
mov
xchg
sub
das
int3
inc
mov
movs
pop
sbb
inc
hlt
adc
xor
jne
lods
xor
mov
mov
movs
xor
fsub
xchg
mov
scas
or
dec
or
(bad)
fidivr
js
push
cs
mov
pop
in
shl
fdivr
mov
push
addr16
jns
lock
scas
lods
test
push
mov
hlt
mov
or
cmps
in
leave
mov
test
gs
loopne
popf
cmc
(bad)
idiv
scas
lea
fs
clc
scas
jecxz
(bad)
(bad)
inc
jp
sahf
mov
les
ins
cmp
sti
in
mov
shr
je
inc
jecxz
jmp
cmc
stos
retf
fisubr
jb
inc
mov
repnz
fsubr
mov
inc
mov
mov
in
movs
sahf
pop
inc
gs
test
(bad)
mov
dec
pop
gs
xchg
fcomi
into
sahf
mov
inc
or
sti
mov
call
imul
pushf
enter
cli
xor
or
lahf
scas
in
hlt
les
or
and
out
mul
mov
mov
call
push
dec
mov
mov
mov
dec
inc
add
shr
popf
xchg
adc
cmp
xchg
cli
shl
out
mov
xchg
inc
push
fstp
js
(bad)
frstor
fild
lea
jns
or
and
inc
cmps
sub
jmp
ins
push
test
jae
pop
movs
xchg
push
push
pop
adc
push
mov
sub
idiv
fistp
push
fsub
dec
int3
pop
xchg
and
jo
sub
rcr
je
push
mov
adc
in
add
aaa
xor
inc
mov
sbb
cmc
js
fiadd
jns
jae
push
mov
enter
sbb
cs
outs
mov
jecxz
add
inc
in
hlt
inc
out
sub
repz
jns
adc
ss
ret
xchg
je
dec
mov
adc
jbe
inc
mov
mov
nop
jns
mov
dec
(bad)
das
iret
stc
dec
in
mov
xchg
inc
sti
push
in
jo
jmp
gs
sbb
or
xchg
addr16
addr16
or
mov
(bad)
popa
enter
dec
fcom
inc
fisub
je
cmp
nop
dec
in
sbb
icebp
arpl
pushf
dec
mov
lock
in
leave
xor
popa
fwait
jno
jmp
in
jnp
loope
loopne
into
and
sbb
jnp
mov
outs
in
cmp
push
out
xchg
sbb
inc
out
inc
(bad)
xor
add
arpl
or
mov
pop
test
or
loope
fdiv
mov
dec
loope
mov
lds
stos
je
jl
inc
clc
adc
scas
pop
ret
mov
fisttp
outs
pop
loop
(bad)
jo
xchg
fisttp
jne
jns
addr16
dec
into
add
jle
inc
xchg
or
sti
aaa
(bad)
gs
mov
cmp
inc
lods
cmp
iret
sbb
pop
sbb
mov
fmul
cmp
shr
int
dec
sub
scas
scas
(bad)
call
pushf
mov
int
sub
sub
dec
ret
cmp
cmp
dec
leave
jp
jp
jg
jle
pushf
pop
(bad)
dec
lods
xchg
or
imul
call
into
inc
int
aas
mov
dec
mov
out
test
out
ins
fimul
jge
dec
pop
imul
lods
stc
lahf
jp
push
dec
sub
mov
call
jle
xchg
popa
mov
mov
jbe
data16
and
popa
aad
ret
shl
dec
iret
and
or
data16
cmc
rcr
in
dec
cli
dec
out
jp
jmp
dec
in
(bad)
iret
jmp
push
lods
cmp
imul
or
test
mov
dec
push
call
jmp
and
in
cli
mov
iret
mov
mov
push
xchg
inc
aam
lods
(bad)
enter
(bad)
xor
outs
and
sbb
inc
call
xchg
adc
push
test
cdq
dec
push
jnp
fdivr
add
fcomp
repnz
sbb
lods
xor
push
or
push
into
shr
xlat
sbb
scas
jl
add
xchg
and
pop
call
aaa
or
or
adc
push
scas
pop
retf
dec
dec
aad
call
mov
fstp
push
jmp
cmps
pop
adc
xchg
add
je
adc
add
adc
out
or
add
xor
(bad)
sub
int
pusha
xchg
outs
movs
and
pop
aad
adc
clc
retfw
inc
xchg
push
popa
jmp
jmp
iret
aaa
call
add
jns
mov
inc
fwait
xor
jbe
xchg
ins
rcr
inc
cmps
pop
xchg
cdq
jnp
or
mov
movs
pop
xor
cmps
add
push
out
mov
push
sahf
inc
test
push
xchg
cmp
sbb
mov
mov
movs
or
cmps
retf
hlt
push
adc
fbld
sbb
xor
inc
dec
and
adc
push
mov
jge
adc
jmp
jmp
(bad)
xor
dec
inc
inc
jo
adc
push
test
leave
adc
out
aas
adc
xor
bound
pusha
nop
test
pop
inc
imul
arpl
xchg
jne
jg
sti
test
inc
leave
repz
adc
xchg
repnz
aaa
movs
cdq
repz
inc
aam
xor
lock
repnz
repz
push
movs
movs
je
pop
out
add
push
ret
push
iret
xchg
mov
jbe
mov
and
inc
rol
hlt
ret
(bad)
les
adc
inc
jne
icebp
test
jne
mul
jns
push
inc
push
inc
mov
(bad)
js
repnz
xchg
idiv
sbb
add
and
je
sti
fcmovnb
xchg
mov
jg
je
hlt
out
jmp
cmp
hlt
push
xchg
push
xor
add
xchg
(bad)
in
and
add
rcr
cdq
adc
and
aad
aaa
aaa
xchg
cmc
popa
popa
add
xchg
aam
jb
push
adc
jg
stc
xchg
xlat
inc
mov
xchg
data16
dec
inc
lahf
rol
jl
xlat
sub
push
call
push
cmps
sbb
jl
retf
and
inc
pop
aam
nop
call
xchg
xor
pusha
ss
fisubr
xlat
cld
cmp
fldenv
adc
xchg
sahf
mov
cmp
inc
or
aad
sar
movs
sbb
sub
or
inc
push
dec
dec
dec
mov
cmc
pop
sbb
(bad)
mov
push
push
sub
test
in
push
enter
repnz
outs
dec
xchg
sub
pop
fcom
jmp
lock
repnz
fnstsw
lods
loopne
idiv
pop
fiadd
aad
cmps
popf
imul
push
mov
pop
(bad)
mov
push
test
lds
and
xchg
clc
xor
call
dec
add
cmp
xlat
sbb
jecxz
test
jge
push
push
outs
cmp
mov
ret
dec
mov
sub
mov
sbb
andnps
and
ja
and
push
out
lock
inc
xchg
adc
adc
dec
clc
jne
dec
xchg
and
test
jecxz
mov
mov
std
inc
loope
and
in
(bad)
repnz
in
out
and
add
shr
xor
leave
push
test
mov
mov
push
inc
adc
xor
clc
(bad)
mov
lock
cmp
pop
xchg
pushf
cld
cmps
imul
pusha
test
cmps
sub
lahf
cmps
adc
call
mov
and
lock
add
test
inc
mov
xchg
or
jae
sub
std
nop
xlat
aad
(bad)
aaa
add
and
ret
daa
xchg
push
loop
push
fmul
repz
adc
addr16
fsubp
popa
ret
ja
out
or
mov
xchg
add
xor
add
(bad)
mov
mov
setl
mov
jno
loope
lock
pop
icebp
pusha
mov
test
xor
mov
mov
out
out
mov
push
popf
add
add
cmp
das
fisub
and
push
mov
xchg
jg
or
dec
jg
xchg
cmp
test
ss
or
push
lods
loope
shl
inc
mov
rcr
pop
lods
mov
jbe
nop
(bad)
add
jge
dec
adc
movs
fldenv
dec
jbe
out
and
loope
shr
mov
xlat
dec
fsubr
xchg
mov
mov
(bad)
inc
retf
dec
xchg
cmp
adc
mov
outs
push
pop
outs
out
and
rol
pop
xlat
movs
stc
mov
mov
ror
icebp
jp
imul
cmp
mov
xchg
dec
sar
sbb
and
or
push
fldcw
and
mov
shl
cmps
ja
push
data16
(bad)
sub
pop
mov
mov
out
std
sbb
dec
ja
test
add
outs
int3
add
jp
pop
movs
dec
retf
out
inc
scas
pop
retf
aam
sahf
and
pop
retf
or
xor
retf
(bad)
ficomp
or
mov
out
ins
jge
ds
add
pop
fcomp
dec
iret
pop
pop
mov
enter
cmp
es
sub
hlt
ror
dec
adc
sbb
cmp
(bad)
mov
mov
sub
and
daa
cmp
ins
or
jno
sbb
push
jge
inc
rcr
sub
stos
cs
dec
mov
xor
movs
sahf
repnz
push
xchg
out
or
idiv
pop
out
cli
stc
call
mov
out
imul
dec
cmp
int3
or
pop
push
cmp
(bad)
rol
sbb
aad
aas
sbb
dec
movs
sbb
xor
xchg
or
dec
mov
push
mov
push
pop
setl
add
push
ins
push
retf
pusha
mov
mov
dec
mov
addr16
cld
pop
in
mov
sub
cld
cmp
pusha
adc
dec
jo
repz
std
xor
jl
adc
mov
repnz
pop
add
out
inc
pop
gs
dec
test
imul
arpl
popf
icebp
pop
mov
jl
mov
int3
loop
push
pop
or
pop
pop
dec
mov
push
and
xor
mov
pushf
outs
inc
ins
sub
mov
les
adc
ins
jecxz
dec
pop
fild
popf
or
mov
cmc
out
xchg
inc
jbe
in
add
scas
cmp
shl
mov
frstor
xchg
std
shl
jge
adc
pop
or
xchg
mov
and
loop
lea
inc
frstor
dec
cvtps2pi
mov
pop
mov
mov
push
jp
mov
and
cli
pop
adc
repnz
cmp
div
jecxz
fnsave
xor
rcl
in
add
sar
retf
rcr
sbb
or
add
mov
icebp
sub
int
lods
inc
cld
and
sar
and
mov
loope
icebp
ins
div
fwait
add
shl
mov
dec
popf
push
add
xlat
xchg
xor
jno
das
jno
add
push
cmp
dec
outs
xor
mov
xchg
sub
inc
icebp
sub
inc
in
shl
push
dec
dec
shl
shl
jmp
inc
int3
dec
loope
xchg
ds
xor
jo
adc
sub
jl
jno
sub
xchg
das
mov
fmul
jecxz
adc
icebp
push
ret
and
fcom
add
mov
mov
ror
push
in
and
outs
ins
inc
jge
add
pop
aaa
dec
pop
int
je
lods
dec
test
rol
jne
mov
xchg
pop
ds
jge
call
fdivr
ins
fwait
outs
test
add
cs
sub
jmp
les
xchg
outs
mov
mov
shr
retf
std
add
jl
lock
imul
xor
fsub
sar
and
stc
fld
lods
adc
movs
xor
sub
sar
popa
or
xor
add
mov
and
pop
(bad)
sbb
repz
clc
mov
ret
loop
xchg
popa
outs
out
xor
jmp
pop
fmul
or
loopne
push
fwait
mov
in
mov
jne
stos
xor
popa
lds
gs
mov
pop
fcomp
fisttp
pop
xchg
ins
xor
xchg
adc
dec
int
bound
pop
call
rol
sbb
sub
retf
xor
push
inc
pop
adc
lea
mov
xchg
repz
fsub
push
or
sub
mov
leave
mov
sbb
dec
fadd
cld
mov
pop
in
sub
pop
sub
scas
in
mov
mov
lods
jb
xlat
push
cmp
inc
sbb
or
or
lods
popf
(bad)
or
fcom
sbb
das
cwde
sub
pop
cmp
or
fmul
fcomp
sbb
or
pushf
je
push
dec
pop
lods
mov
ins
out
mov
movs
mov
pop
jno
sbb
jl
pop
dec
sub
aaa
test
jmp
or
dec
fstp
push
js
popf
mov
out
sbb
sub
les
rcr
jb
sub
test
retf
lods
dec
call
int
pop
cmp
pop
ret
call
fdivr
inc
push
pop
cs
sbb
push
mov
pop
jmp
out
movs
call
adc
pop
ins
jne
add
aaa
cmps
dec
cwde
ins
cmp
jnp
leave
and
adc
pushf
sbb
(bad)
lods
add
lahf
push
call
retf
jle
test
inc
iret
lahf
sbb
or
fisub
xchg
pop
mov
adc
cmp
and
fst
fsub
push
add
mov
sahf
inc
int3
fs
mov
test
sbb
jo
fcomp
(bad)
retf
pop
jge
pop
(bad)
pop
push
popf
or
cmp
stos
mov
cmp
xchg
sbb
mov
sbb
retf
jno
in
inc
sub
push
mov
add
jb
adc
dec
mov
dec
xor
cmc
jo
or
ror
cld
lds
in
push
pop
sbb
mov
call
pop
fdiv
ins
mov
pop
push
inc
shr
cli
ins
in
jecxz
mov
pop
fdiv
gs
inc
pop
push
sbb
sti
cmc
push
xchg
sbb
jl
(bad)
and
xor
push
fstp
xchg
scas
lahf
retf
ins
stos
repnz
jge
pop
and
imul
rcl
jmp
loop
pop
push
push
pushf
add
nop
lock
int3
push
gs
(bad)
sbb
jne
push
ficomp
mov
fs
xor
push
js
aad
es
sub
pop
pop
push
mov
jb
mov
rcr
jb
push
cmp
and
xor
xor
sahf
lea
js
pop
in
popf
sar
jmp
or
cmps
adc
jl
mov
fidivr
jno
adc
in
mov
fwait
je
mov
and
fcmove
imul
cmp
sbb
mov
xchg
movs
ret
stos
push
adc
sbb
inc
cwde
xor
push
dec
fisubr
inc
int
fist
test
lea
retf
int3
int3
inc
and
call
es
adc
push
mov
ins
xchg
repz
mov
scas
and
push
jg
fadd
fst
lods
div
push
(bad)
pop
out
cld
ficom
(bad)
nop
test
and
mov
arpl
jl
mov
jb
stc
sbb
sub
lods
lods
push
jge
inc
ficom
fcomp
lea
call
inc
popf
in
jp
mov
ins
push
(bad)
and
mov
inc
xchg
fwait
add
test
ss
lahf
mov
cld
call
leave
div
mov
lea
push
stos
std
push
bound
imul
call
mov
cli
sub
add
aaa
cmp
dec
mov
neg
sbb
mov
int3
jg
adc
scas
mov
call
cmp
test
dec
std
fwait
jl
mov
je
call
outs
jae
cmp
pop
push
in
call
dec
out
gs
cmp
push
outs
mov
mov
test
fsub
pushf
stos
sub
fnstenv
or
sub
jge
lock
xchg
nop
and
pusha
cmp
mov
mov
enter
into
pop
or
mov
sub
cdq
cmp
sbb
jge
mov
popf
dec
push
mov
pop
push
mov
iret
xor
ret
cmp
pusha
and
repz
adc
adc
mov
adc
push
repnz
inc
loop
inc
data16
push
sbb
loope
sbb
xor
dec
cmp
adc
fadd
jl
jg
adc
dec
xchg
fsubr
fist
adc
lods
mov
xchg
mov
shl
mov
clc
pop
mov
inc
jl
add
into
ins
jb
inc
ret
shl
shl
loopne
and
inc
mov
add
fdivp
sub
into
aad
popa
ins
xor
lods
in
movs
scas
daa
push
and
inc
dec
imul
inc
shr
imul
mov
inc
mov
add
jg
jle
(bad)
lods
or
and
aas
out
mov
loope
shr
mov
pop
inc
mov
or
les
jcxz
pop
push
mov
(bad)
lods
jns
pop
aaa
es
inc
popa
outs
push
cmc
pusha
or
int
int
mov
sbb
fdivr
gs
add
jno
pusha
or
ins
pusha
ins
out
call
leave
outs
jo
and
dec
mov
mov
add
pop
je
pop
dec
inc
xor
add
dec
sahf
clc
or
bsf
or
inc
pushf
rcr
lods
pusha
test
shl
push
rcl
xor
repz
sub
add
jg
jae
loop
popa
fbstp
xor
and
inc
cs
fist
shl
retf
xor
shl
scas
sti
loopne
jbe
xchg
ja
pusha
ss
mov
sti
mov
nop
in
add
movs
sbb
adc
ror
popa
icebp
lock
les
push
cld
pusha
pop
scas
xor
stos
sub
xchg
mov
sub
mov
or
pop
or
mov
imul
pusha
ds
cld
and
and
push
mov
mov
mov
(bad)
(bad)
stos
add
lods
cmp
ror
ret
jo
pop
add
jo
mov
jp
inc
xor
out
test
fwait
aad
shr
movs
dec
cmps
pop
js
out
out
xchg
rcl
cmp
aas
pop
(bad)
push
aad
aas
mov
xor
add
inc
mov
aaa
cmps
xchg
xor
das
mov
push
xor
pop
xor
imul
and
mov
push
scas
jae
pop
leave
pop
xor
in
fisub
sahf
xchg
add
push
pushf
pop
mov
ror
adc
sbb
pushf
inc
(bad)
outs
mov
call
rcr
pop
scas
div
cmp
ror
call
or
rcl
ret
(bad)
sbb
mov
mov
push
out
cmp
ret
sar
into
mov
and
ds
loop
jne
push
fsub
pop
xlat
int3
pusha
sub
ja
push
xchg
adc
and
shl
test
rcl
ror
xor
add
pop
xor
pop
aam
pusha
push
push
clc
repz
pop
jmp
mov
stc
xchg
pop
retf
inc
xor
xchg
jo
inc
mov
dec
sub
ret
(bad)
je
out
cwde
jge
mov
push
imul
jo
adc
sbb
xlat
jb
gs
mov
call
data16
push
lea
scas
je
sub
sar
xchg
jg
xchg
xor
or
jle
jno
pop
xchg
vpshufd
xchg
xchg
jb
mov
xor
push
add
scas
mov
mov
ja
ja
cmps
and
xor
jno
jg
sub
mov
xchg
push
aas
xchg
mov
ret
scas
not
or
test
movs
inc
mov
jge
mov
jns
fstp
xor
je
rcl
or
aad
mov
and
inc
jg
pop
fwait
jns
xchg
test
cmp
mov
jno
jle
je
popa
xchg
jo
outs
sti
ja
dec
les
nop
sub
scas
xchg
int
cmp
sub
data16
jge
xchg
stos
outs
imul
jg
xchg
out
aad
xor
xchg
cmp
cmps
test
inc
adc
jle
jge
out
sbb
sahf
cmps
push
push
pop
pusha
sti
test
xlat
ins
or
cmps
iret
mov
cmps
jl
sahf
lahf
pop
ins
movs
std
dec
clc
jg
fwait
repnz
ins
ins
jo
cmp
in
xchg
sbb
jge
or
pop
cmp
mov
ret
push
sbb
xor
xor
fidivr
test
jo
pop
sbb
xchg
in
pop
movs
cmp
dec
jl
cld
xchg
sub
mov
ret
test
retf
pop
cmp
mov
jb
fst
jecxz
movs
mov
xchg
sbb
mov
leave
mov
dec
dec
daa
cmps
sub
jl
sub
outs
pop
jl
fst
jae
dec
leave
mov
int
ss
jo
pop
cmp
mov
xchg
pop
enter
xchg
jae
or
repz
dec
inc
test
in
jl
xchg
dec
popf
mov
xor
cmps
imul
cld
loopne
adc
dec
pop
ret
cmps
xchg
xor
(bad)
(bad)
rol
nop
adc
sahf
pop
ret
mov
sbb
jbe
sbb
and
fild
xchg
push
out
adc
inc
retf
sbb
jp
pop
mov
sub
test
dec
pop
call
adc
cmp
mov
ins
pop
ins
cdq
jnp
retf
sbb
fwait
mov
mov
imul
outs
scas
mov
and
push
or
jmp
sbb
scas
call
dec
(bad)
shl
sbb
mov
mov
dec
lods
or
jg
cmp
pusha
stos
daa
int
dec
mov
iret
in
data16
mov
outs
mov
xchg
(bad)
loope
mov
lods
cmps
imul
test
lea
jle
inc
loop
stos
add
cs
int
add
popf
xchg
pop
in
icebp
inc
mov
and
int
mov
pop
dec
mov
jbe
add
add
push
imul
icebp
or
loopne
(bad)
in
xchg
mov
mov
outs
cmps
push
(bad)
push
jnp
jl
mov
(bad)
sub
out
inc
cmp
or
pop
pop
lahf
idiv
dec
and
mov
pusha
loope
(bad)
sti
and
sti
push
mov
leave
pop
ror
dec
ficom
pusha
inc
imul
pop
cmp
dec
stc
push
nop
adc
pop
xor
outs
out
mov
jle
bound
adc
fiadd
push
mov
aad
mov
stos
fidiv
sbb
pop
ins
cmp
or
jmp
in
push
in
sub
pop
inc
in
dec
cli
pop
loope
or
scas
pop
in
fstp
or
jge
pop
mov
push
sahf
sub
and
call
jmp
leave
popa
(bad)
in
add
movs
out
xor
adc
sbb
and
cdq
lds
les
fucomp
inc
mov
push
lods
leave
inc
fstp
leave
lea
jge
pop
mov
adc
ins
(bad)
jmp
or
pusha
xlat
js
test
add
shr
push
aaa
push
push
cmp
dec
data16
fbstp
iret
jle
xchg
push
nop
imul
enter
jmp
inc
fstp
retf
out
movs
dec
jmp
imul
rol
jno
call
ins
outs
xchg
repz
les
scas
and
call
or
jnp
mov
or
push
ror
dec
cmp
nop
xchg
mov
sbb
popf
cmps
rol
bound
inc
sub
mov
jb
mov
sbb
pop
out
push
cld
mov
mov
mov
xor
aas
mov
imul
fdiv
je
or
fwait
pmaxub
in
and
in
push
movs
stos
pusha
sbb
cmp
pop
xchg
bound
mov
dec
mov
daa
sbb
scas
xchg
call
push
jb
stos
std
xchg
repz
mov
mov
and
adc
xor
jbe
cmp
cmp
cmps
add
in
mov
dec
sub
push
hlt
mov
mov
jmp
or
dec
into
or
int
rsm
push
les
inc
mov
(bad)
jl
lods
or
dec
jmp
add
retw
mov
dec
int
scas
or
imul
retf
dec
in
les
cmps
add
arpl
dec
or
dec
retf
add
data16
dec
push
movs
add
inc
loopne
rol
pop
inc
(bad)
arpl
inc
push
cld
or
dec
in
dec
int3
or
retf
test
lds
inc
ret
pop
inc
(bad)
arpl
jge
lods
or
dec
out
dec
iret
or
imul
retf
dec
jmp
les
movs
add
retw
inc
add
inc
rol
inc
(bad)
arpl
inc
push
popf
or
dec
in
dec
int
lods
or
outs
int
or
or
dec
jmp
iret
push
dec
push
stos
push
retf
inc
in
lds
movs
add
retw
cmps
add
ret
or
push
or
enter
dec
iret
push
dec
rsm
push
retf
dec
jmp
les
movs
add
jmp
aam
sbb
inc
push
fmul
mov
in
test
dec
mul
xchg
or
xor
aam
in
out
gs
jbe
cdq
push
je
xchg
dec
dec
dec
cmp
xlat
and
add
aam
adc
stos
cmc
and
pop
leave
inc
inc
sbb
ja
and
xchg
xchg
popf
cmps
scas
retf
push
js
shr
xchg
jmp
xchg
fcomp
ret
stos
jle
je
xchg
mov
imul
jmp
pop
sbb
jmp
pop
mov
js
data16
fild
es
dec
lahf
gs
ins
mov
jmp
xlat
daa
and
jne
fdivr
mov
inc
addr16
push
lds
pop
inc
xlat
rcr
jp
ret
adc
jmp
fwait
mov
or
inc
jo
jno
mov
push
jnp
aam
fisub
pop
jecxz
jbe
cmps
cmc
mov
lea
popa
xchg
push
(bad)
mov
cmp
fcmovbe
pop
fstp
xor
push
dec
movs
ja
retf
xchg
or
mov
push
cwde
xor
adc
ds
mov
adc
jmp
mov
repz
aam
jnp
arpl
add
arpl
daa
sub
dec
stos
ins
imul
and
scas
push
push
imul
sti
push
jns
xor
ss
mov
jne
pop
gs
test
movs
imul
ds
(bad)
aas
and
shl
fidivr
mov
je
imul
fisttp
out
add
cs
out
or
sbb
test
jbe
inc
push
jp
add
out
hlt
pop
xchg
push
pop
mov
sub
ins
ret
sub
push
inc
inc
bswap
aam
inc
adc
mov
xor
sahf
inc
cmp
ja
jecxz
or
sub
sbb
xor
jns
inc
mov
cmp
mov
enter
or
mov
test
mov
or
cdq
ja
jge
cmp
add
lods
mov
push
loope
int3
cdq
lea
sub
jl
mov
jmp
mov
and
xor
xchg
push
adc
sbb
cmp
hlt
cld
jns
push
adc
sub
je
xchg
lahf
arpl
fs
aam
jno
sub
out
xor
inc
jmp
(bad)
sbb
sub
sbb
adc
ss
lds
sbb
or
pop
cmp
call
or
or
ins
inc
xchg
inc
mul
pop
movs
in
gs
cmps
jne
leave
cwde
pop
dec
add
shr
imul
test
lds
retf
push
rol
int
or
repnz
sub
cwde
mov
mov
lahf
push
ins
sub
dec
jge
enter
shl
retf
dec
int3
pop
adc
imul
neg
or
dec
outs
aaa
push
in
jne
mov
in
prefetchnta
imul
inc
and
test
inc
add
(bad)
pop
push
and
mov
cmp
aaa
cmps
imul
dec
sub
sub
ja
sub
and
sbb
add
inc
cmps
in
cli
sbb
xchg
cmp
ss
and
or
aam
mov
cmps
ja
ret
out
loope
adc
test
inc
inc
push
pop
or
inc
sub
or
inc
loop
mov
sub
sub
jbe
imul
out
sbb
pop
fs
jge
movs
mov
sbb
out
xlat
test
jnp
(bad)
in
and
xor
(bad)
inc
sub
cmps
mov
or
imul
sbb
lock
and
push
inc
cs
(bad)
scas
dec
mov
aam
rol
jnp
into
les
jmp
test
(bad)
pop
push
jbe
jne
xlat
xor
xchg
(bad)
jmp
jp
xchg
out
jmp
dec
add
(bad)
inc
push
lahf
fmul
xchg
(bad)
mov
outs
pop
addr16
(bad)
xchg
hlt
std
add
adc
inc
retf
loope
xlat
mov
mov
(bad)
leave
push
dec
inc
sbb
into
mov
jb
into
and
imul
popf
ja
mov
es
jnp
int
mov
add
and
cmp
dec
and
xor
and
lahf
shr
in
rcl
xchg
ja
and
xchg
inc
add
pop
dec
mov
jmp
mov
push
call
add
lea
push
mov
mov
mov
push
push
call
add
test
je
mov
mov
push
push
push
push
call
mov
push
push
call
add
pop
pop
ret
int3
int3
sub
push
push
mov
push
push
mov
call
mov
lea
cmp
ja
mov
mov
shl
push
push
push
push
call
add
jmp
mov
push
call
add
xor
cmp
mov
mov
jle
xor
mov
mov
mov
add
sub
jne
cmp
jle
mov
nop
mov
mov
push
lea
push
push
add
call
add
test
je
mov
mov
push
push
push
push
call
mov
push
push
call
add
movsx
cmp
ja
jmp
mov
jmp
mov
push
lea
push
push
call
add
test
je
mov
mov
push
push
push
push
call
mov
push
push
call
add
xor
cmp
mov
setne
mov
jmp
mov
push
lea
push
push
call
add
test
je
mov
mov
push
push
push
push
call
mov
push
push
call
add
fld
mov
fstp
jmp
call
mov
mov
jmp
mov
mov
push
push
push
push
call
mov
push
push
call
add
add
sub
jne
mov
push
lea
push
push
call
add
test
je
mov
mov
push
push
push
push
call
mov
push
push
call
add
mov
test
jge
mov
mov
push
push
push
push
call
mov
push
push
call
mov
add
lea
cmp
ja
mov
lea
push
push
push
push
call
add
jmp
mov
push
call
add
mov
xor
test
mov
jle
jmp
lea
mov
mov
add
cmp
jl
xor
test
jle
mov
push
push
call
mov
mov
add
add
cmp
jl
pop
pop
pop
pop
add
ret
lea
add
inc
add
xchg
mov
inc
add
inc
add
in
or
push
mov
call
mov
lea
cmp
ja
mov
lea
push
push
push
push
call
add
jmp
mov
push
call
add
lea
push
mov
mov
mov
push
push
call
add
test
je
mov
mov
push
push
push
push
call
mov
push
push
call
add
call
mov
lea
cmp
ja
mov
lea
add
add
push
push
push
push
call
add
jmp
mov
push
call
add
test
mov
mov
jle
xor
mov
jmp
lea
nop
mov
mov
add
sub
jne
test
jle
xor
lea
call
mov
push
lea
mov
mov
push
push
call
add
test
je
mov
mov
push
push
push
push
call
mov
push
push
call
add
cmp
jge
mov
mov
push
push
push
push
call
mov
push
push
call
add
mov
mov
push
lea
mov
mov
push
push
call
add
test
je
mov
mov
push
push
push
push
call
mov
push
push
call
add
cmp
jge
mov
mov
push
push
push
push
call
mov
push
push
call
add
mov
mov
mov
add
sub
jne
mov
push
lea
push
push
call
add
test
je
mov
mov
push
push
push
push
call
mov
push
push
call
add
mov
test
jge
mov
mov
push
push
push
push
call
mov
push
push
call
mov
add
lea
cmp
ja
mov
lea
push
push
push
push
call
add
jmp
mov
push
call
add
mov
xor
test
mov
jle
jmp
lea
mov
mov
add
cmp
jl
xor
test
jle
call
mov
mov
add
cmp
jl
pop
pop
pop
add
ret
push
mov
mov
add
mov
cmp
push
jbe
mov
push
push
push
push
call
mov
push
push
call
add
mov
push
call
mov
mov
mov
mov
mov
mov
mov
sub
add
cmp
jg
push
push
call
add
mov
add
call
test
mov
jne
mov
mov
call
mov
call
push
lea
mov
mov
push
push
call
add
test
je
mov
mov
push
push
push
push
call
mov
push
push
call
add
mov
push
lea
mov
mov
push
push
call
add
test
je
mov
mov
push
push
push
push
call
mov
push
push
call
add
mov
push
lea
mov
mov
push
push
call
add
test
je
mov
mov
push
push
push
push
call
mov
push
push
call
add
mov
push
lea
mov
mov
push
push
call
add
test
je
mov
mov
push
push
push
push
call
mov
push
push
call
add
mov
push
mov
mov
mov
call
push
mov
call
mov
call
push
call
add
test
pop
jne
mov
mov
push
push
push
push
call
mov
push
push
call
add
mov
add
mov
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
mov
mov
ret
int3
int3
int3
sub
mov
xor
mov
mov
push
push
push
lea
mov
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
add
test
je
mov
mov
push
push
push
push
call
mov
push
push
call
add
mov
lea
lea
lea
mov
cmp
jne
sub
add
add
cmp
jae
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
je
test
mov
jg
or
jmp
xor
test
pop
pop
je
mov
mov
push
push
push
push
call
mov
push
push
call
add
mov
xor
call
add
ret
int3
int3
int3
int3
int3
mov
mov
sub
cmp
je
cmp
je
cmp
jne
mov
jmp
add
mov
mov
mov
push
mov
push
lea
mov
mov
mov
call
push
push
push
call
push
mov
push
call
add
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
sub
push
mov
push
lea
cdq
xor
sub
cmp
jle
mov
push
push
call
add
mov
add
shl
and
xor
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
ret
int3
int3
int3
int3
int3
cmp
push
push
je
mov
mov
lea
cmp
lea
jl
mov
lea
and
test
mov
jne
mov
mov
and
cmp
jne
mov
shr
sub
cmp
je
lea
cmp
jne
pop
xor
pop
ret
pop
mov
pop
ret
int3
int3
int3
cmp
mov
mov
push
lea
jl
mov
lea
and
test
jne
mov
mov
mov
and
cmp
je
xor
pop
ret
cmp
je
mov
shr
cmp
je
shl
xor
and
xor
mov
mov
pop
ret
mov
and
or
and
shr
or
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
cmp
je
push
mov
push
mov
mov
lea
add
cmp
jl
mov
lea
and
test
jne
mov
mov
mov
and
cmp
jne
mov
and
or
shr
and
or
mov
mov
mov
mov
shr
sub
cmp
je
lea
cmp
jne
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
cmp
je
push
push
jmp
lea
lea
mov
mov
lea
mov
shr
sub
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
call
test
mov
mov
je
add
mov
jmp
add
mov
sub
sub
mov
cdq
xor
sub
cmp
jle
mov
push
push
call
add
mov
mov
add
and
shl
xor
cmp
mov
jne
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
mov
cmp
je
mov
mov
cmp
jne
mov
ret
push
mov
mov
push
mov
mov
shr
sub
cmp
je
lea
cmp
je
mov
jmp
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
movzx
add
cmp
jle
cmp
jl
mov
push
push
call
add
mov
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
movzx
push
mov
add
cmp
jle
cmp
jl
mov
push
push
call
add
mov
mov
add
pop
pop
pop
ret
int3
cmp
jne
mov
test
jne
movzx
cmp
jl
add
ret
int3
int3
int3
int3
push
mov
mov
push
push
push
push
push
push
mov
call
mov
mov
mov
add
cmp
lea
jne
fld
pop
pop
pop
add
jmp
fild
mov
fstp
mov
add
cmp
jle
mov
mov
push
push
push
push
push
push
call
add
mov
cmp
jge
mov
shl
xor
mov
mov
add
add
cmp
jl
mov
mov
mov
shl
add
mov
mov
mov
mov
mov
mov
cmp
jl
mov
test
je
test
je
mov
push
push
push
call
add
mov
pop
lea
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
lea
push
mov
mov
call
add
pop
add
ret
int3
int3
int3
int3
int3
int3
sub
fld
lea
push
fstp
mov
push
mov
mov
call
add
pop
add
ret
int3
int3
int3
int3
int3
sub
push
mov
mov
lea
push
lea
mov
mov
mov
call
add
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
jne
mov
mov
mov
mov
mov
add
shl
xor
lea
and
xor
ret
cmp
jne
mov
mov
push
mov
mov
lea
mov
push
mov
add
shl
and
xor
mov
mov
mov
mov
lea
mov
shl
xor
push
and
xor
push
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
shr
and
mov
ret
cmp
jne
mov
mov
mov
mov
lea
mov
and
or
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
mov
lea
jl
mov
lea
and
test
je
mov
mov
mov
and
neg
sbb
add
shl
xor
and
xor
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
cmp
jne
or
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
fld
fst
fld
mov
add
fst
cmp
ja
jmp
faddp
fld
fucomp
fnstsw
test
jp
fstp
mov
add
ret
fsubrp
jmp
fmulp
jmp
fldz
fucomp
fnstsw
test
jp
fstp
fstp
xor
add
ret
fdivrp
jmp
fldz
fucomp
fnstsw
test
jnp
fdivrp
sub
fstp
call
fmul
add
fsubr
jmp
call
jmp
fstp
fchs
jmp
fstp
mov
fstp
fldz
fstp
add
ret
mov
adc
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
xchg
inc
add
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
call
mov
lea
add
add
mov
cmp
jle
mov
push
push
push
push
mov
push
push
call
add
mov
mov
mov
mov
mov
mov
lea
add
cmp
jle
mov
push
push
push
push
mov
push
push
call
add
mov
mov
mov
mov
mov
mov
lea
mov
pop
ret
int3
mov
shl
or
push
mov
mov
mov
shl
or
push
shl
or
push
call
add
pop
ret
mov
shl
or
push
mov
mov
mov
shl
or
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
add
mov
imul
mov
sar
mov
shr
push
mov
push
lea
mov
sub
neg
sbb
and
cmp
mov
mov
jg
shl
or
mov
shl
or
shl
push
or
push
call
add
add
mov
pop
pop
ret
push
mov
shl
or
shl
push
or
push
call
mov
mov
push
push
call
add
add
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
mov
cmp
push
jle
test
jne
movzx
cmp
jge
mov
mov
mov
push
lea
shl
or
shl
or
push
call
add
pop
pop
pop
ret
mov
mov
lea
mov
mov
and
cmp
jne
mov
shr
mov
and
shr
cmp
jg
lea
cmp
jg
mov
lea
cmp
jle
lea
shl
and
or
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
mov
mov
push
push
call
push
lea
push
push
mov
call
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
mov
add
shl
shl
or
push
or
push
call
add
pop
ret
int3
int3
int3
shl
or
push
shl
or
mov
mov
mov
shl
or
push
push
push
call
mov
mov
mov
mov
push
push
call
push
lea
push
push
mov
call
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
mov
mov
mov
mov
push
lea
push
push
call
add
ret
int3
int3
int3
push
mov
mov
add
cmp
ja
push
jmp
pop
mov
pop
ret
mov
mov
mov
mov
shl
push
or
push
call
add
pop
mov
mov
pop
ret
mov
mov
mov
mov
shl
push
or
push
call
add
pop
mov
mov
pop
ret
mov
mov
or
test
jne
movzx
cmp
jl
add
mov
test
jne
movzx
cmp
jl
add
mov
mov
push
push
push
push
push
call
add
pop
mov
mov
pop
ret
mov
push
push
call
add
pop
pop
ret
nop
sub
inc
add
inc
add
cdq
inc
add
cdq
inc
add
cdq
inc
add
cdq
inc
add
cdq
inc
add
call
mov
lea
add
cmp
ja
jmp
push
push
push
call
add
mov
mov
ret
xor
cmp
sete
push
push
push
push
push
call
add
mov
mov
ret
mov
push
push
push
push
call
add
mov
mov
ret
fld
sub
fstp
push
call
push
push
push
push
call
add
mov
mov
ret
mov
mov
mov
mov
shl
xor
lea
and
xor
mov
mov
ret
mov
cmp
je
push
push
push
push
push
call
add
mov
mov
ret
nop
das
call
inc
call
sbb
add
call
jmp
add
call
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
push
mov
push
or
mov
test
je
or
jmp
test
je
push
call
push
mov
call
push
call
add
test
jge
or
jmp
mov
test
je
push
call
and
pop
mov
and
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
test
je
movzx
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
push
call
cmp
jne
call
push
call
push
call
pop
pop
ret
cmp
jne
call
xor
add
sub
push
call
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
push
call
pop
ret
push
push
push
push
mov
cmp
jae
mov
mov
sar
and
lea
shl
mov
test
je
push
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
pop
cmp
pop
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
pop
and
test
je
push
call
pop
jmp
xor
jmp
and
mov
or
pop
pop
pop
pop
ret
push
mov
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
ret
push
mov
test
jne
push
call
pop
pop
ret
push
call
test
pop
je
or
pop
ret
test
je
push
call
neg
pop
pop
sbb
ret
xor
pop
ret
push
push
mov
xor
push
mov
mov
and
cmp
jne
test
je
mov
mov
sub
test
jle
push
push
push
call
add
cmp
jne
mov
test
je
and
mov
jmp
or
or
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
push
xor
xor
xor
cmp
jle
mov
mov
test
je
mov
test
je
cmp
jne
push
call
cmp
pop
je
inc
jmp
cmp
jne
test
je
push
call
cmp
pop
jne
or
inc
cmp
jl
cmp
mov
je
mov
pop
pop
pop
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
push
pop
cmp
jne
push
call
push
call
cmp
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
push
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
push
call
test
pop
je
mov
test
je
cmp
jne
and
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
and
add
dec
jne
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
pop
pop
jmp
and
push
call
pop
mov
mov
or
jmp
push
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmp
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
push
call
test
pop
je
inc
jmp
cmp
jne
inc
jmp
cmp
jbe
inc
cmp
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmp
je
push
call
cmp
pop
mov
jne
push
call
pop
push
push
call
pop
add
pop
add
cmp
jne
pop
push
call
pop
mov
mov
pop
pop
mov
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
and
mov
push
mov
mov
mov
test
je
mov
add
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
test
je
inc
test
je
mov
mov
inc
inc
inc
test
je
mov
mov
inc
jmp
inc
test
je
and
inc
cmp
jne
inc
jmp
inc
test
je
mov
mov
inc
mov
inc
movzx
test
je
inc
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
and
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
test
je
mov
add
mov
mov
inc
mov
xor
cmp
jne
inc
inc
jmp
cmp
jne
test
jne
xor
cmp
je
cmp
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
mov
inc
inc
dec
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
cmp
je
test
je
movzx
test
je
mov
inc
inc
inc
mov
mov
inc
jmp
movzx
test
je
inc
inc
inc
inc
jmp
test
je
and
inc
inc
jmp
test
je
and
mov
pop
pop
pop
inc
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
mov
jmp
call
mov
cmp
je
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
lea
push
call
cmp
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
add
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmp
lea
jne
test
mov
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
or
jmp
cmp
jne
or
jmp
or
inc
cmp
jl
push
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
push
call
xor
ret
push
pop
ret
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmp
jne
push
mov
call
call
jmp
pop
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmp
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmp
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmp
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
push
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
push
call
pop
push
push
push
call
push
call
pop
leave
ret
push
push
push
call
test
mov
jne
ret
and
and
push
mov
mov
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
or
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmp
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmp
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmp
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
and
lea
or
mov
jne
mov
inc
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmp
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmp
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmp
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
push
push
push
call
cmp
je
add
mov
mov
mov
push
push
lea
push
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
push
push
push
call
xor
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
or
or
lea
mov
mov
lea
mov
mov
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
and
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
mov
xor
mov
mov
cmp
je
add
inc
cmp
jl
cmp
jb
cmp
ja
mov
ret
mov
mov
ret
cmp
jb
cmp
mov
jbe
mov
ret
mov
push
cmp
push
jae
mov
mov
sar
and
lea
shl
mov
add
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
and
mov
or
pop
pop
ret
mov
cmp
jae
mov
and
sar
mov
test
lea
je
mov
ret
and
mov
or
ret
mov
cmp
jae
mov
mov
sar
and
mov
test
je
push
call
pop
push
call
test
jne
call
jmp
xor
test
je
mov
mov
or
ret
push
mov
sub
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
mov
test
je
xor
cmp
mov
mov
jne
xor
jmp
test
je
push
push
push
call
add
mov
add
test
je
mov
cmp
mov
mov
jbe
lea
mov
sub
cmp
jae
mov
inc
mov
cmp
jne
inc
mov
inc
mov
inc
mov
lea
sub
cmp
jl
mov
lea
sub
lea
push
push
lea
push
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
xor
mov
cmp
jne
cmp
je
push
pop
cmp
jne
mov
mov
jmp
call
mov
jmp
lea
push
push
push
push
push
call
test
je
mov
mov
mov
jmp
call
mov
jmp
push
call
pop
jmp
mov
test
je
mov
cmp
je
mov
mov
jmp
sub
jmp
and
mov
or
pop
pop
pop
leave
ret
mov
push
push
test
pop
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
mov
test
pop
jne
push
push
mov
call
pop
mov
test
pop
jne
push
call
pop
xor
mov
mov
mov
add
add
cmp
jl
xor
mov
mov
mov
sar
and
mov
mov
cmp
je
test
jne
or
add
inc
cmp
jl
pop
ret
call
cmp
je
jmp
ret
push
push
push
call
add
ret
movzx
mov
test
jne
cmp
je
movzx
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
push
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmp
mov
rep
stos
mov
jbe
cmp
je
lea
mov
test
je
movzx
movzx
cmp
ja
or
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmp
mov
je
mov
test
je
movzx
movzx
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmp
jne
inc
add
cmp
jb
mov
mov
push
mov
call
lea
mov
movs
movs
pop
mov
movs
jmp
inc
inc
cmp
jne
push
pop
or
inc
cmp
jb
push
call
pop
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
and
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
push
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
mov
test
je
push
push
lea
movzx
movzx
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
push
push
push
lea
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
add
xor
lea
mov
test
je
or
mov
mov
jmp
test
je
or
mov
jmp
and
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
or
mov
add
mov
jmp
cmp
jb
cmp
ja
or
mov
sub
jmp
and
inc
cmp
jb
pop
leave
ret
cmp
jne
push
call
pop
mov
ret
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
push
push
call
pop
pop
ret
cmp
ja
push
call
test
pop
jne
cmp
je
push
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
dec
add
dec
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
mov
cs
add
dec
add
dec
add
dec
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fsubr
dec
add
cs
add
cs
add
das
dec
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
js
dec
add
das
dec
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
adc
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
dec
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
jo
dec
add
dec
add
xor
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
push
push
push
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
dec
add
xor
add
dec
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
dec
add
add
add
add
add
add
add
dec
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwde
xor
mov
xor
shl
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
dec
add
inc
add
ror
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
dec
add
xor
add
xor
add
xor
add
xor
add
xor
add
dec
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
dec
add
dec
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
test
je
push
call
cmp
pop
jne
mov
jmp
push
push
push
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
jmp
mov
and
lea
mov
jmp
and
mov
or
pop
pop
pop
ret
push
push
mov
push
imul
cmp
mov
ja
test
jne
push
pop
add
and
xor
cmp
ja
cmp
ja
push
call
mov
pop
test
jne
push
push
push
call
mov
test
jne
cmp
je
push
call
test
pop
je
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
xor
jmp
push
push
push
xor
pop
cmp
jle
mov
mov
test
je
test
je
push
call
cmp
pop
je
inc
cmp
jl
mov
push
call
mov
pop
and
inc
cmp
jl
mov
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
mov
cmp
jle
push
push
call
pop
pop
mov
mov
cmp
jne
push
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
mov
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
push
push
push
push
push
push
call
mov
mov
cmp
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
xor
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmp
je
inc
mov
dec
test
jne
cmp
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
or
cmp
je
push
push
push
push
push
push
call
cmp
je
push
push
push
push
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
push
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
