push
push
call
mov
push
push
push
call
push
call
push
push
push
push
push
push
call
push
call
outs
jo
outs
add
nop
add
add
add
add
(bad)
inc
add
add
add
add
loopne
add
push
pop
mov
int
mov
push
push
jb
addr16
ins
and
outs
outs
outs
je
bound
jb
outs
and
and
and
fs
add
add
add
xchg
or
in
push
in
push
in
jne
in
push
in
jbe
in
push
in
jne
in
push
in
jne
in
push
in
push
in
push
in
jne
in
push
in
ins
inc
in
push
in
imul
push
inc
add
dec
add
add
pop
jae
loopne
sidtd
add
add
adc
add
adc
add
inc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
add
add
add
add
add
push
push
pop
xor
add
add
inc
add
add
add
add
add
add
add
push
pop
xor
add
add
adc
add
push
add
add
add
add
add
add
cs
jb
add
add
adc
add
pusha
add
add
add
add
add
inc
add
rol
add
xor
add
pop
and
add
les
ret
xor
add
pop
add
add
add
add
add
inc
fdivr
pop
out
add
je
or
and
(bad)
mov
or
add
add
inc
dec
sahf
and
clc
and
in
sar
out
loopne
add
iret
xchg
cmp
call
leave
jae
mov
inc
neg
and
jp
fs
inc
repnz
pusha
cmp
enter
adc
xchg
test
loopne
jns
in
retf
out
sahf
mov
sahf
add
inc
repnz
jae
iret
xchg
pop
aam
inc
repnz
enter
and
xchg
cmp
add
repnz
js
add
fcom
cmp
ret
js
leave
jae
xchg
ins
add
outs
push
jns
push
xchg
inc
dec
push
xchg
xchg
and
push
or
ret
mov
add
jns
dec
jg
and
push
leave
push
and
and
and
sti
jg
jge
in
sub
push
push
and
mov
test
je
jge
lea
push
push
adc
xor
and
push
inc
add
xchg
mov
push
call
push
jle
(bad)
mov
cld
mov
push
push
mov
neg
and
in
ror
(bad)
add
adc
mov
sbb
or
ins
xchg
push
push
aad
adc
or
jle
rcr
aad
pop
add
pop
nop
mov
frstor
je
cmp
and
in
fcomp
rol
nop
pop
add
xor
aam
mov
sub
mov
pop
dec
ret
out
outs
xor
push
xlat
mov
cmp
call
scas
imul
ja
push
mov
sub
mov
dec
je
add
retf
daa
adc
and
dec
sub
ins
lods
fucomi
xor
and
push
adc
and
inc
push
and
xor
and
test
push
and
daa
mov
cmp
cdq
outs
ja
push
push
ror
or
jmp
dec
dec
push
xor
inc
pop
dec
jns
sub
xchg
movq
add
push
sub
imul
push
sbb
add
cmp
or
jl
mov
cmp
adc
jnp
mov
sub
push
mov
inc
ins
adc
xor
mov
push
jg
xor
sub
push
dec
cmp
and
mov
fistp
sub
sbb
cmp
jl
mov
aaa
mov
mov
or
xchg
mov
ss
adc
push
and
mov
adc
out
ins
(bad)
xor
push
cdq
xor
pop
ss
pop
aas
je
push
push
popa
shl
lock
or
adc
es
stc
es
adc
push
test
popa
sbb
mov
int3
xchg
sahf
sub
push
push
add
aas
jbe
or
add
(bad)
xor
pop
retf
lea
jmp
sbb
add
sbb
sbb
dec
push
jo
mov
pop
push
mov
push
push
cli
mul
pushf
mov
pop
sub
push
fwait
lods
lock
mov
mov
les
ins
out
or
movs
adc
mov
pushf
or
or
fidivr
dec
mov
mov
jne
push
out
dec
js
test
or
or
mov
mov
xchg
lea
div
mov
or
inc
mov
(bad)
nop
out
add
add
mov
(bad)
xor
and
inc
or
cmp
mov
jbe
aam
dec
outs
jmp
movs
cmp
inc
rol
je
movzx
jmp
sub
jbe
dec
xlat
pop
ds
rcr
push
push
lods
xor
jmp
adc
push
test
dec
fcomip
or
pushf
pop
pop
ret
mov
outs
ins
test
push
pop
pusha
arpl
scas
xor
ins
pop
add
sub
and
pop
int
ret
int3
add
mov
add
imul
(bad)
push
inc
inc
cs
pop
inc
or
inc
dec
or
inc
inc
inc
dec
inc
dec
dec
inc
sbb
inc
push
sub
sti
iret
or
push
inc
pop
or
inc
dec
pop
xor
mov
neg
or
inc
inc
inc
mov
ret
jle
push
dec
sbb
or
xor
dec
dec
dec
dec
cmp
dec
push
dec
sbb
div
lods
inc
pop
inc
push
dec
sub
test
push
add
mov
popf
not
dec
inc
push
cmp
sbb
xchg
inc
push
dec
push
push
jg
mov
fst
push
inc
inc
fldcw
sub
jb
repz
outs
mov
dec
inc
jge
push
inc
push
inc
inc
dec
inc
adc
mov
inc
dec
pop
outs
or
sbb
push
inc
xchg
lods
inc
ret
orps
ds
mov
push
push
dec
push
nop
ret
xchg
cmovg
dec
daa
popa
add
dec
dec
push
fsubr
dec
dec
inc
or
mov
fnstcw
or
inc
jge
ret
(bad)
push
imul
sahf
dec
inc
dec
mov
dec
inc
addr16
in
in
outs
jb
push
and
push
daa
pop
mov
pop
imul
pop
ja
add
call
add
or
test
or
add
outs
push
jb
arpl
jae
ins
outs
jae
fistp
lods
cld
dec
popa
outs
fs
gs
js
push
push
jge
jmp
ins
imul
inc
imul
and
gs
push
outs
outs
ins
push
push
sub
in
push
ins
gs
outs
outs
ins
mov
adc
jo
xor
std
ins
imul
push
jns
adc
arpl
jns
enter
push
jb
outs
ja
adc
outs
div
outs
fs
gs
popa
ins
gs
or
shl
popa
jb
jne
dec
outs
data16
aas
int
outs
inc
pop
cdq
inc
pop
pop
sbb
mov
jb
fisttp
arpl
mov
ja
pop
jo
je
push
addr16
fs
jae
imul
jae
jge
es
je
retf
adc
arpl
and
pop
ins
retf
xlat
mov
adc
and
jae
fld
mov
jb
fs
je
imul
sti
pop
imul
arpl
ins
enter
fwait
sbb
or
sub
adc
pop
and
cmp
pop
push
mov
xor
outs
les
ins
call
ins
inc
js
(bad)
lods
cmp
adc
mov
cmp
mov
fs
xchg
je
inc
sbb
inc
in
aas
in
dec
add
add
pop
jae
loopne
sidtd
add
or
mov
call
mov
or
add
pop
into
fdiv
xor
fcmovne
faddp
pop
push
add
sbb
fs
lahf
xchg
jnp
enter
push
cs
sti
pop
fcom
lods
push
nop
add
jmp
cs
popa
int3
lods
sti
ins
in
push
mul
adc
repnz
jb
rol
xor
xor
sbb
clc
neg
or
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
add
add
add
add
and
add
pusha
add
add
add
add
add
cmp
add
add
add
sbb
add
add
movs
pusha
add
call
add
add
add
js
add
add
add
sbb
add
arpl
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
or
test
add
add
xchg
ja
add
add
add
add
sti
sti
sti
sti
add
add
add
add
mov
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
dec
int3
int3
inc
ja
cmp
add
add
inc
ja
mov
mov
add
dec
int3
int3
inc
inc
or
js
add
dec
int3
int3
inc
inc
or
js
add
int3
int3
add
inc
mov
ja
ja
mov
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
mov
pop
add
mov
xchg
mov
inc
add
add
add
mov
xchg
add
js
xchg
mov
(bad)
(bad)
js
mov
(bad)
push
mov
add
add
jo
int3
int3
int3
(bad)
js
add
add
lock
(bad)
dec
add
add
add
(bad)
(bad)
dec
add
add
pop
dec
add
add
pop
inc
(bad)
js
add
add
add
pop
int3
(bad)
js
add
add
add
pop
int3
(bad)
js
add
add
add
pop
add
add
add
(bad)
mov
add
add
add
(bad)
ja
ja
ja
ja
add
add
add
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
add
add
add
ja
jo
add
add
add
add
mov
mov
add
sar
pop
rcr
xadd
loopne
rol
add
add
inc
add
inc
add
xadd
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
loopne
pop
mov
add
add
add
add
and
adc
add
add
call
add
add
or
cmp
add
dec
add
and
push
add
sub
pop
add
ins
add
jl
add
add
add
mov
add
add
nop
add
add
add
mov
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
push
cs
ins
add
inc
dec
dec
xor
cs
ins
add
inc
push
xor
cs
ins
add
dec
outs
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
inc
js
je
jb
arpl
jae
add
gs
je
add
gs
ins
inc
js
arpl
gs
add
add
jo
imul
add
add
push
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
into
and
xchg
xchg
push
imul
push
outs
jbe
jne
arpl
jae
outs
and
gs
pop
push
xor
push
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
sbb
sub
add
add
add
add
add
sbb
inc
add
add
jno
add
mov
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
loope
add
adc
add
add
add
add
add
add
add
inc
add
add
adc
add
add
add
add
adc
add
add
add
add
add
fisttp
rol
add
ror
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
xor
add
add
jno
add
adc
add
add
add
add
add
add
add
add
add
add
pop
xor
add
add
inc
add
add
aaa
add
add
add
add
add
add
add
add
add
das
jae
jae
add
add
and
add
ror
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
das
xor
add
pop
and
imul
jns
out
pushf
xchg
or
adc
add
push
add
inc
add
or
jo
bound
add
sub
inc
mov
fild
bound
add
jbe
mov
imul
shr
inc
daa
add
dec
outs
jne
push
add
scas
xchg
loopne
pop
das
add
sub
jae
inc
into
leave
gs
or
loope
std
neg
push
xor
add
sub
ja
out
sub
imul
and
pop
add
mov
xchg
xor
pop
movs
test
sbb
add
or
arpl
fs
adc
sbb
mov
jp
xchg
aas
adc
dec
mov
outs
ins
outs
jo
outs
fld
rcr
mov
sub
test
add
dec
icebp
adc
sbb
int
push
fwait
pop
pop
data16
pop
xor
cwde
in
cmp
xlat
sbb
add
or
in
adc
pop
aad
in
pop
std
mov
bound
fisub
test
xor
xor
sub
leave
and
adc
test
test
test
xor
icebp
sbb
bound
in
jmp
pop
loope
fst
ror
test
lds
sbb
bound
mov
pop
pop
push
adc
pop
cmp
mov
lods
test
jns
jne
ins
xor
and
dec
shld
mov
mov
pop
mov
jmp
sub
mov
les
inc
pop
les
cdq
adc
xchg
lea
test
adc
test
add
add
clc
cmp
pop
fisubr
add
mov
xchg
jbe
xor
pop
retf
add
xor
add
mov
add
mov
add
mov
inc
test
gs
cld
outs
add
mov
mov
mov
push
xchg
mov
les
xchg
clc
clc
and
stc
xchg
xchg
mov
mov
mov
or
mov
(bad)
lock
mov
add
add
push
mov
push
push
push
add
clc
pop
and
movs
or
push
mov
mov
lock
test
add
nop
mov
inc
mov
inc
or
fild
(bad)
jle
or
push
pop
add
cmp
jbe
cmp
ret
das
mov
cmp
jbe
mov
mov
sub
inc
add
push
pop
pusha
adc
out
stc
(bad)
(bad)
out
or
cld
mov
lahf
cmp
jae
mov
add
jb
add
jl
icebp
cld
fmul
js
and
sbb
js
std
or
stos
inc
sbb
jmp
in
or
cld
add
mov
add
cmp
cld
sub
daa
sub
dec
jge
xchg
adc
mov
aad
ffreep
mov
or
cmp
jbe
sbb
or
or
pop
mov
mov
cmp
rol
clc
add
mov
add
add
and
push
or
mov
xchg
jne
mov
mov
dec
and
mov
dec
shr
add
push
mov
jo
(bad)
adc
(bad)
shr
imul
popa
cmps
jbe
repnz
dec
sahf
test
out
mov
xlat
in
mov
(bad)
enter
cmp
or
int3
mov
cmp
fld
mov
adc
push
inc
je
cmp
js
mov
add
xor
cmp
push
out
xor
ja
or
add
push
out
or
push
xor
loope
loopne
cld
mov
test
ret
fdivr
jmp
test
sbb
mov
leave
mov
xchg
sub
or
pop
adc
loope
push
or
je
sbb
ret
add
aas
jecxz
lea
ret
sub
or
mov
ja
and
cmp
or
add
cmp
ret
sbb
ja
scas
adc
pop
push
sbb
dec
in
adc
push
cmp
and
out
push
push
jne
imul
adc
retf
adc
inc
xor
in
fcmovnbe
xchg
out
sub
inc
or
push
or
mov
mov
cmp
je
inc
or
inc
test
and
push
ret
jo
das
jns
mov
mov
add
call
aam
cmc
jmp
xchg
mov
test
cmc
scas
xor
jne
mov
inc
aas
push
jbe
and
adc
jbe
push
enter
(bad)
rol
popf
and
and
pop
cwde
and
pop
and
jns
outs
test
nop
push
and
inc
jg
add
push
cmp
jbe
sub
das
jns
pop
inc
adc
shl
push
push
push
sub
cmp
cs
cmp
xchg
inc
bnd
or
jbe
sub
sbb
push
call
or
pushf
inc
mov
adc
dec
mov
cmp
jbe
xchg
cmp
fdivr
inc
test
test
aas
sbb
inc
inc
sahf
adc
or
sbb
mov
mov
loopne
dec
ins
add
out
cmp
je
mov
sbb
sub
mov
lds
rcl
pop
and
les
xor
push
adc
icebp
mov
push
in
adc
in
or
or
repz
sbb
in
fadd
in
cmp
aas
sbb
add
mov
imul
ds
icebp
push
jle
es
stc
xchg
aaa
aaa
dec
sahf
adc
inc
jns
cwde
movs
(bad)
ret
or
mov
xor
add
mov
jbe
mov
movs
adc
test
pop
pop
inc
pop
pop
pop
sbb
imul
push
jmp
in
out
pop
in
(bad)
faddp
pop
xchg
cwde
test
rol
and
mov
add
jo
add
pop
or
adc
xor
stos
jp
mov
sbb
push
push
out
adc
scas
outs
push
sbb
mov
cs
mov
sbb
enter
mov
push
cmp
xor
adc
loope
jae
or
ficom
dec
icebp
add
xchg
jp
test
add
cli
add
popa
out
cmc
in
and
mov
mov
mov
out
add
(bad)
movs
movs
hlt
repnz
xchg
push
fcmovb
jae
add
or
or
sti
das
jbe
or
add
retf
test
add
sti
adc
enter
pop
icebp
inc
or
shl
jns
sub
fistp
or
sub
add
and
test
push
mov
jecxz
bound
(bad)
cmc
mov
outs
or
add
shl
pop
or
ret
test
(bad)
cmp
pop
not
nop
xor
adc
js
outs
shl
fld
shr
xor
clc
ret
inc
inc
push
enter
test
dec
jae
sub
cmp
or
xor
cmc
xor
sub
stos
enter
test
int
es
stc
inc
rcr
shl
jbe
mov
(bad)
arpl
dec
sub
stc
adc
jae
lea
adc
(bad)
clc
mov
adc
mov
jle
aad
push
xchg
int3
or
in
sbb
mov
and
fisttp
sub
rcl
add
sub
mov
clc
cwde
mov
test
je
mov
mov
xor
adc
push
into
inc
pusha
mov
mov
fdivr
push
pushf
call
inc
out
jmp
adc
mov
pop
cmc
ror
cmp
inc
adc
loope
jg
pop
add
jge
jb
sbb
lahf
loopne
test
mov
ins
mov
test
adc
cmp
cli
or
mov
daa
test
jb
mov
or
xor
or
shl
icebp
mov
std
pusha
mov
and
add
xchg
or
or
cmp
dec
push
cmp
or
pop
fild
dec
je
or
add
and
in
push
xor
popa
shl
dec
retf
mov
fbld
ret
mov
push
mov
or
sub
jge
loop
or
mov
or
sub
adc
sbb
clc
test
jnp
int
movs
les
mov
xchg
aad
add
ror
inc
sar
fld
(bad)
push
push
push
adc
or
push
(bad)
icebp
rol
test
or
ret
adc
jns
and
jg
adc
shr
sbb
inc
sub
jne
and
xor
enter
into
adc
push
mov
dec
sbb
or
mov
inc
jbe
movs
sub
test
or
lea
adc
inc
add
popf
data16
push
xlat
mov
stc
pop
mov
ss
dec
jmp
jnp
pusha
push
or
xor
add
xchg
call
jge
jbe
mov
pop
add
xchg
arpl
adc
dec
shl
pop
popa
or
adc
xor
push
imul
dec
xor
and
or
mov
cmp
mov
jg
adc
mov
jp
mov
lds
shl
push
push
cmp
mov
call
cmp
ds
inc
cmc
mov
mov
push
pop
or
mov
fidiv
and
sub
test
rol
(bad)
jmp
push
push
sbb
in
xor
and
mov
aas
and
and
jmp
add
dec
shld
inc
push
or
xor
scas
mov
loopne
enter
mov
or
and
push
loope
pop
test
or
loope
pop
dec
add
iret
les
ret
jmp
std
call
ror
ja
or
rcl
or
ret
cmp
xor
rol
sbb
xor
ret
mov
cmp
mov
jbe
or
add
fst
dec
fild
adc
ret
add
add
add
call
add
sub
jle
push
(bad)
mov
dec
lods
pushf
pop
adc
fs
in
jb
dec
mov
fidivr
loope
pop
outs
add
(bad)
(bad)
mov
add
adc
jle
push
xor
repnz
adc
xlat
jp
mov
out
into
adc
adc
pop
repnz
dec
test
push
mov
xor
test
adc
ret
cmc
cmp
mov
mov
pop
cld
mov
sub
js
enter
xor
or
cmp
outs
imul
push
adc
cmc
dec
jo
ss
push
sub
xor
and
or
add
add
push
mov
icebp
mov
fisttp
and
ud2
sub
popa
dec
out
ret
(bad)
cmc
sbb
mov
fld
mov
sbb
jmp
mov
cmp
shl
inc
ret
push
in
das
mov
jb
lods
and
push
cmp
add
or
cmp
or
dec
sub
xor
push
leave
addr16
sub
into
test
mov
pop
std
in
aaa
mov
or
fcom
pop
jo
scas
mov
shl
icebp
jle
cmp
adc
adc
dec
sbb
pop
or
pop
adc
outs
jecxz
(bad)
xor
or
push
sbb
les
sbb
or
movs
mov
add
retf
clc
sbb
leave
js
pop
hlt
inc
and
dec
add
mov
mov
je
movs
arpl
rcl
sub
fbld
inc
pop
icebp
jmp
(bad)
loope
push
add
imul
pop
add
dec
mov
dec
add
add
int3
int
retf
leave
into
iret
(bad)
retf
fcmovu
fstp
fnstsw
loope
lock
fdivp
in
in
(bad)
push
push
push
pop
test
retf
jnp
rcr
cwde
nop
push
pop
sbb
mov
or
sbb
jb
mov
pop
or
jne
add
inc
fs
cmp
sbb
inc
and
cmp
adc
hlt
inc
mul
xchg
xor
in
in
mov
in
jmp
loope
mov
ror
jle
addr16
test
jl
fst
lea
sbb
(bad)
cld
push
xchg
test
dec
(bad)
js
cld
jns
hlt
cmps
mov
mov
mov
std
mov
or
xor
(bad)
xor
push
enter
shl
add
clc
add
sbb
add
cdq
add
cmp
add
jg
inc
test
add
out
es
ss
mov
cmp
and
lods
ret
js
xor
or
adc
out
retf
nop
fs
loope
jge
daa
jb
or
or
stc
(bad)
out
les
imul
imul
mov
jne
je
pop
and
xor
loope
push
pop
out
add
in
jmp
sbb
scas
jmp
adc
sar
xor
push
cmc
add
push
jmp
rcr
xor
out
pop
fld
or
aam
xor
fcmovb
(bad)
(bad)
stc
jmp
jmp
ret
(bad)
push
jnp
or
(bad)
add
mov
sub
adc
jg
fucomip
les
loopne
pop
pop
dec
jl
inc
loopne
dec
pop
cmp
sbb
pop
in
adc
pop
xor
enter
mov
call
inc
add
jae
cmp
js
mov
mov
pushf
dec
add
in
jl
lock
mov
in
fs
mov
push
jmp
add
dec
call
add
inc
mov
inc
dec
and
scas
fimul
les
pop
loopne
add
jmp
add
push
ret
jne
mov
mov
cmp
jbe
dec
jne
mov
(bad)
sbb
aam
or
jecxz
add
in
pop
push
add
add
sbb
jbe
dec
jne
mov
cmp
add
or
add
add
div
lock
pop
cmp
cmp
jbe
sbb
dec
adc
shl
xchg
add
mov
ret
or
inc
dec
dec
pop
cmp
ret
or
ret
add
mov
cmp
jbe
mov
dec
dec
es
dec
pop
lods
push
xchg
dec
sbb
sbb
cmp
jae
adc
stc
aas
add
ror
lods
mov
stos
pusha
inc
push
xor
push
test
or
push
clc
jecxz
les
pusha
pop
rcl
mov
fs
lds
clc
repnz
add
push
mov
repnz
jle
xor
inc
and
dec
mov
adc
push
mov
or
push
add
std
ror
dec
jbe
xchg
sbb
jo
jb
add
daa
sbb
xor
jecxz
hlt
je
fadd
nop
int3
lock
add
cld
and
mov
push
cs
or
xor
jne
pop
jne
xor
dec
and
fcom
push
dec
test
xor
or
mov
add
mov
push
xor
out
into
jne
add
ret
jge
pop
xor
mov
adc
clc
fnstcw
jns
pop
pop
mov
lods
inc
dec
in
mov
idiv
fs
xchg
bound
mov
adc
push
js
add
add
add
in
stos
les
add
jne
inc
mov
dec
jbe
pop
js
add
retf
not
ja
sbb
sbb
pop
dec
sbb
hlt
inc
daa
add
cmp
pop
push
xor
mov
lods
test
or
imul
aam
or
push
mov
jnp
push
or
(bad)
mov
loopne
lds
push
rol
fsubp
(bad)
jl
push
push
imul
sbb
rcl
das
daa
repz
push
push
mov
enter
pusha
cmc
push
push
into
add
mov
test
mov
mov
and
rol
stc
addr16
addr16
add
or
push
push
inc
push
pop
inc
push
inc
pop
inc
jo
ins
bound
or
add
pop
inc
ins
jno
push
push
push
dec
add
push
dec
bound
bound
or
mov
fsub
xchg
jae
mov
mov
pop
(bad)
daa
fmul
jnp
mov
or
cld
mov
or
std
jmp
dec
mov
sub
repz
loop
fstp
inc
fstp
cmp
pop
sbb
mov
pop
fisttp
mov
and
(bad)
in
mov
ja
dec
jo
push
cmps
or
lds
pop
xor
inc
daa
or
or
lea
ins
pop
adc
lds
cdq
cmp
les
int
push
mov
ja
lods
mov
add
daa
stos
add
leave
fsubr
sub
cld
xchg
jmp
sub
add
jb
fadd
push
mov
cli
sbb
out
cmp
jne
in
(bad)
push
pop
mov
les
inc
idiv
mov
ret
xor
cmp
sub
enter
xchg
je
adc
jae
and
add
adc
retf
add
add
aad
push
mov
mov
dec
popf
xchg
std
xor
push
test
pop
stc
fldenv
inc
jmp
push
std
mov
or
inc
fld
jne
mov
jg
pusha
xchg
pop
add
mov
in
sbb
sar
and
ror
jg
test
cmp
loope
test
or
shr
and
sbb
or
pushf
les
je
iret
shr
lahf
mov
ins
shl
push
lods
sbb
mov
pop
and
loopne
add
int3
int3
pop
mov
or
add
inc
sbb
ins
(bad)
or
add
jns
add
rcl
dec
sbb
cli
enter
add
mov
mov
cmp
jne
mov
retf
repnz
pop
mov
shl
push
jbe
push
test
add
mov
or
jns
pusha
sbb
les
sub
mov
std
pusha
(bad)
mov
jle
pop
and
add
in
lea
jne
and
jg
aam
jle
jbe
xor
and
(bad)
test
add
inc
cmp
das
scas
cmc
loope
or
cld
sar
fs
movs
pop
sub
pop
mov
sbb
(bad)
shl
repnz
vprotb
mov
jbe
test
pop
ins
add
add
sbb
add
push
jbe
jmp
push
in
mov
pop
sysret
xor
hlt
cmps
out
fnstcw
inc
add
jl
retf
pop
sbb
or
fstp
sbb
xor
jmp
shr
pop
pop
add
mov
jge
add
shl
adc
mov
mov
enter
repnz
into
mov
and
lock
push
or
or
mov
imul
adc
xchg
or
loope
lock
adc
add
not
in
les
and
push
xchg
cmp
adc
xor
add
loopne
out
paddb
fld
ds
push
bound
add
hlt
out
push
in
or
add
mov
dec
loope
mov
out
loope
add
push
and
rol
add
or
aad
in
jbe
adc
int3
push
cld
clc
outs
push
mov
push
push
fsub
(bad)
mov
push
adc
js
fld
pop
lock
imul
in
pop
pop
adc
add
clc
inc
add
das
(bad)
push
jl
cmp
inc
mov
dec
adc
in
fdivrp
pop
test
rcl
test
addr16
movs
mov
or
les
inc
test
cmp
sti
lock
in
stc
or
sub
and
lock
and
jmp
pop
js
mov
ret
cmc
retf
xor
jbe
ja
cmp
mov
jp
shl
loope
jo
dec
add
jg
sbb
sbb
cmp
sub
test
mov
imul
mov
xchg
add
pop
outs
rol
or
enter
dec
test
push
cmps
inc
aaa
test
or
push
cmp
xchg
adc
shr
jno
stos
inc
pop
pop
outs
jne
clc
in
enter
add
mov
pop
shld
cwde
xor
dec
pop
push
mov
mov
loop
stos
stos
mov
mov
or
test
adc
fnstcw
fnstenv
mov
outs
pusha
arpl
pusha
or
mov
sbb
into
movs
inc
jb
jbe
mov
ret
mov
arpl
inc
repnz
sub
push
adc
adc
mov
or
mov
das
push
(bad)
aaa
pop
adc
push
repnz
sub
cmp
add
dec
push
imul
stos
jne
rcr
push
inc
jb
pop
push
push
pop
push
push
(bad)
cmp
sbb
push
jmp
xor
mov
push
mov
or
popa
add
adc
fnsave
sar
pop
mov
mov
fimul
adc
gs
ins
mov
pop
push
popf
add
(bad)
out
icebp
add
jg
add
ss
ret
or
stc
mov
dec
add
xchg
icebp
call
pop
ds
adc
jne
cs
and
mov
add
add
in
popa
push
jb
add
jmp
xor
push
ds
push
adc
lock
jl
cs
das
inc
adc
and
sbb
test
sub
mov
in
daa
mov
in
and
sbb
iret
in
mov
mov
in
cmpxchg
in
or
retf
into
add
add
push
or
push
enter
in
adc
jp
jno
jo
xchg
push
(bad)
jnp
jb
pop
add
test
push
inc
sbb
sbb
xchg
scas
add
pop
mov
or
dec
test
stc
and
mov
add
xchg
adc
daa
mov
jp
xchg
xor
mov
jno
or
mov
and
icebp
or
push
add
pop
add
or
push
mov
out
iret
rol
pop
and
or
xlat
jno
push
push
cmp
mov
inc
jge
jb
fild
sub
hlt
or
sub
xor
adc
dec
mov
xor
mov
mov
shl
cmp
jg
xchg
add
outs
cld
jl
lods
dec
mov
jg
mov
push
ja
push
mov
les
xchg
sbb
or
(bad)
fld
repz
pop
mov
mov
icebp
push
sbb
dec
sub
add
pop
cmp
(bad)
les
add
push
or
pop
cmp
or
cmps
inc
or
repz
inc
repz
call
xchg
sub
loopne
lock
mov
jecxz
mov
jmp
jl
sbb
cs
stos
cmc
lock
push
and
les
mov
clc
fstp
rol
sub
outs
mov
cmp
sti
adc
nop
push
sbb
lock
adc
sub
sub
sbb
mov
sahf
loope
sbb
pop
push
jge
push
add
sbb
test
sbb
xchg
je
pop
cmp
xor
test
or
sub
add
mov
adc
mov
mov
cmp
add
call
sub
jbe
add
xor
xor
push
mov
jge
xchg
mov
jo
or
lea
add
add
jne
jo
je
inc
jo
jp
push
imul
xor
cmp
mov
aas
cmps
mov
mov
ffree
lock
push
add
les
push
lock
jp
(bad)
jmp
push
mov
mov
or
push
push
mov
pop
pop
push
loop
or
sub
mov
cmp
mov
add
adc
aas
push
ret
adc
xlat
add
push
push
mov
push
or
adc
leave
ins
push
mov
lea
jo
enter
call
icebp
add
(bad)
push
mov
stc
(bad)
mov
fs
fst
enter
push
mov
dec
jbe
pop
dec
and
sub
cmc
adc
inc
std
out
pop
sbb
scas
test
dec
sbb
mov
mov
jl
adc
les
(bad)
test
push
test
or
add
pop
sub
std
xor
fld
adc
pushf
push
nop
sbb
and
mov
retf
mov
sub
iret
sub
outs
inc
fimul
rol
push
mov
jle
rol
or
or
ficom
sub
js
in
jo
enter
xor
add
cmp
arpl
inc
sub
mov
pop
or
sbb
push
mov
mov
lods
loopne
push
or
or
loopne
or
jne
add
push
push
jmp
pop
sub
jmp
outs
out
fbld
bound
or
or
mov
in
in
add
je
ja
mov
jo
mov
inc
xchg
xchg
pop
push
push
imul
jbe
ja
fdivr
clc
rcr
ret
xor
push
inc
std
jo
scas
add
push
inc
mov
inc
rdpmc
std
cld
adc
fidivr
fimul
movs
(bad)
mov
cmp
mov
les
push
sbb
test
(bad)
jp
mov
add
cmp
pop
arpl
dec
mov
in
fisttp
adc
mov
cs
mov
jbe
call
shl
pop
sar
pop
cmp
sar
(bad)
sti
pop
xor
xor
push
inc
std
add
lahf
std
imul
sti
ss
iret
mov
cmp
sub
fidiv
cld
ins
push
stc
mov
mov
jmp
or
les
adc
loopne
gs
std
dec
jbe
mov
pop
and
popf
adc
add
test
sub
cmp
push
lods
dec
add
jmp
and
push
sbb
mov
add
sub
mov
dec
dec
and
pop
dec
and
xchg
out
cmp
xor
push
out
mov
lds
add
and
fcmovu
add
jno
push
and
in
sbb
or
inc
aaa
into
xlat
add
add
movs
inc
xchg
push
mov
inc
adc
scas
xor
or
hlt
js
cwde
pop
mov
pop
shl
pop
daa
dec
jge
cmp
jle
test
sub
call
call
enter
shr
out
adc
push
fsubr
in
es
pop
in
cmps
test
xor
sbb
lock
in
jge
jp
daa
xchg
sub
cmp
jg
inc
sub
add
mov
loopne
mov
push
je
pusha
adc
(bad)
mov
mov
push
push
inc
push
jle
xor
cmp
sbb
mov
dec
add
pop
cmp
xor
xor
cmp
cmps
outs
push
add
mov
push
jmp
mov
popf
xor
mov
pop
mov
dec
jns
mov
inc
je
adc
cmp
hlt
cmps
add
jge
jne
retf
in
pop
mov
or
mov
add
cmp
loope
mov
fidiv
test
or
loope
sbb
jne
enter
jno
adc
add
sub
imul
inc
loopne
sar
pop
cmp
mov
adc
dec
push
push
pop
mov
mov
mov
push
mov
push
xor
les
mov
sub
movs
add
dec
in
mov
loopne
push
sbb
das
mov
jbe
jecxz
jne
das
jl
loope
push
pop
cwde
rcr
cmps
and
rol
sbb
pop
daa
xor
and
sbb
add
popa
cmps
in
leave
sqrtps
das
ins
and
cmp
or
fnstenv
push
jmp
rcr
push
mov
into
mov
push
outs
and
mov
xor
in
pop
sub
jg
cwde
jge
add
sub
es
or
adc
inc
jno
adc
ret
icebp
dec
ss
pop
add
mov
adc
add
xor
loopne
pop
jle
push
mov
mov
fnsave
sbb
mov
jg
loope
aaa
xor
push
sub
cmp
jbe
adc
adc
fisub
add
mov
sub
dec
aam
popa
xor
sbb
or
pop
(bad)
dec
inc
jmp
das
push
mov
imul
pop
add
rcl
adc
mov
imul
lock
sbb
add
add
stc
or
or
adc
cwde
loopne
or
pcmpeqw
jne
adc
cdq
imul
shl
inc
adc
dec
add
xor
es
in
xor
or
loope
push
pop
das
test
das
pop
add
imul
pop
in
adc
sub
bound
cwde
repnz
push
aaa
fst
or
inc
fsubrp
lods
cmp
xor
arpl
xor
mov
adc
inc
pop
lods
mov
mov
and
shl
mov
add
imul
jno
bound
cmc
sbb
fst
inc
push
add
in
push
icebp
mov
ss
test
popa
test
jge
and
aam
sbb
icebp
or
cmp
hlt
cmp
cmp
shl
scas
xor
cmp
outs
push
xor
cmp
cmp
fxch
or
xor
in
ret
fxtract
dec
mov
xor
mov
and
add
jo
aam
(bad)
(bad)
sub
stc
push
or
ret
add
add
xor
xor
sbb
or
repz
dec
cmp
(bad)
push
hlt
jno
cli
cmp
sbb
adc
enter
in
jle
xor
mov
aas
leave
ins
mov
mov
sar
sub
and
add
xor
dec
not
fs
das
add
shl
sahf
cmp
and
and
fld
inc
and
dec
adc
addr16
test
push
or
ins
and
lea
bound
xor
mov
and
jbe
sub
in
xor
in
jnp
or
adc
lds
jg
sub
adc
cmp
or
js
cld
adc
clc
add
add
inc
jmp
das
mov
repnz
out
and
dec
add
or
add
or
out
cwde
mov
popf
adc
enter
in
pop
sbb
xchg
or
add
(bad)
xchg
retf
inc
pop
jo
cli
mov
(bad)
mov
retf
lea
pop
mov
mov
inc
jmp
in
mov
mov
cs
mov
sub
mov
adc
or
or
mov
pushf
jge
or
push
adc
(bad)
sahf
push
jno
cmp
cmps
aaa
ret
and
jmp
mov
adc
iret
xchg
adc
mov
adc
fidivr
ret
mov
test
or
hlt
ja
and
sti
popa
jne
adc
jbe
das
sbb
xor
sbb
adc
jmp
xchg
aas
fst
int3
cmp
jmp
push
push
cmp
inc
push
add
clc
push
jo
in
adc
push
(bad)
in
or
push
mov
adc
or
dec
or
adc
ret
sub
pop
or
cmp
inc
mov
add
call
jne
rcr
push
sub
mov
push
mov
ja
or
(bad)
xchg
dec
arpl
sub
push
enter
aaa
in
cmp
sbb
addr16
jo
add
add
xlat
popa
and
imul
add
cs
pusha
ret
or
leave
jne
in
sub
iret
shl
jmp
or
sbb
lods
jge
push
rol
pop
xchg
pusha
adc
inc
stc
mov
out
cmps
test
xor
scas
inc
mov
mov
mov
arpl
(bad)
gs
add
std
xlat
cmp
inc
int3
or
outs
cmc
out
pop
dec
dec
ror
shl
loope
outs
test
push
pushf
in
fiadd
mov
addr16
inc
scas
sbb
jb
lods
outs
mul
bound
pushf
addr16
pop
push
cld
or
pop
and
add
ds
and
daa
pop
mov
and
jp
sub
out
mov
int3
add
repz
stc
or
push
(bad)
addr16
pusha
cwde
int
pop
les
adc
retf
push
xlat
mov
ficomp
sbb
jle
in
adc
push
fidivr
fsubr
lods
push
dec
mov
sub
ds
js
shr
int3
pop
in
sbb
pushf
mov
push
cmp
jmp
das
retf
sub
adc
sti
hlt
dec
add
mov
ins
inc
addr16
pop
les
add
push
or
cmp
pop
sbb
pop
pop
inc
aas
ror
jge
test
adc
test
push
bound
mov
call
or
push
sbb
loope
mov
mov
xchg
sbb
jle
mov
(bad)
mov
push
push
aaa
xlat
lods
movs
xchg
add
sahf
(bad)
test
mov
call
(bad)
fiadd
(bad)
and
or
cmp
in
add
lock
add
in
in
clc
add
jne
pop
mov
or
test
lds
pop
loope
cld
jle
push
sbb
inc
xor
mov
jmp
icebp
sub
js
pusha
(bad)
popf
mov
cmc
mov
ror
imul
pop
add
or
stc
pop
fimul
lea
push
shl
pushf
xor
dec
sbb
mov
(bad)
iret
stos
dec
pop
enter
mov
dec
aam
fld
or
push
js
sti
idiv
div
mov
inc
call
inc
xchg
fiadd
test
jle
add
adc
xchg
push
outs
jge
into
mov
fisttp
push
clc
adc
xchg
jmp
push
jbe
push
sbb
jmp
inc
clc
or
dec
mov
stc
ret
sub
mov
jle
or
movaps
inc
sbb
inc
or
add
mov
add
mov
jle
paddq
mov
stc
lock
xchg
push
mov
xor
vpackssdw
lahf
cmp
fld
inc
cmp
icebp
jbe
cmp
je
jo
shl
pop
push
adc
loopne
sbb
add
jne
or
rcr
lea
sub
in
sub
mov
jmp
lock
ret
popf
lds
add
push
cmp
js
fldenv
pop
xchg
aad
or
nop
jne
fmul
out
pop
fild
add
jg
mov
mov
inc
xchg
sbb
clc
fdivr
vmwrite
pop
adc
adc
mov
or
add
jmp
inc
add
xchg
xor
fdivr
pop
pop
jo
inc
add
hlt
sub
std
mov
xor
jle
imul
add
inc
cmp
loopne
div
nop
xchg
inc
push
push
data16
push
mov
add
add
jne
sar
fist
mov
out
ds
outs
sub
mov
or
ins
std
inc
add
loopne
sbb
lea
add
lea
mov
outs
ins
xor
das
gs
ins
mov
add
dec
jo
push
dec
bound
inc
daa
push
cmp
dec
cli
in
into
ret
js
(bad)
mov
pop
(bad)
imul
ret
add
cmp
retf
dec
sub
xchg
push
inc
lea
or
pop
mov
sub
faddp
sbb
fist
mov
lods
dec
push
sar
push
sub
sub
inc
jbe
test
and
mov
add
in
mov
push
cmp
jle
add
or
pop
mov
mov
jp
add
out
cmc
icebp
add
jmp
test
pop
push
jmp
in
xchg
out
inc
jae
inc
ror
cmp
out
add
(bad)
fs
pop
rcl
js
jae
or
repnz
scas
cmp
mov
inc
inc
mov
dec
pop
psllw
(bad)
repnz
movs
adc
ss
fisub
mov
sbb
pop
mov
inc
sbb
ins
fnstsw
add
mov
jns
mov
imul
add
rcr
mov
adc
fiadd
cmp
out
inc
fiadd
and
lea
jbe
sbb
inc
or
test
and
inc
push
ds
jle
sub
cmp
jno
or
lahf
mov
and
cmp
std
and
xlat
cmps
inc
or
and
push
sbb
pop
sbb
std
cmps
fcompp
inc
(bad)
jne
cmp
sub
sahf
adc
pop
add
dec
inc
cmc
test
(bad)
out
jge
pop
mov
mov
pop
mov
add
cmps
mov
push
sub
popa
mov
cmp
lds
sbb
sar
xchg
ins
pusha
add
dec
jns
xor
add
or
popa
xor
clc
or
add
lds
add
gs
and
push
mov
loope
sbb
ins
popa
mov
pop
(bad)
mov
outs
jns
inc
loopne
or
sub
cmps
adc
pop
sti
push
add
jge
cld
push
nop
jns
add
or
unpckhps
pop
pop
clc
daa
xor
cmp
stc
outs
jne
les
mov
arpl
inc
cmp
xchg
outs
adc
repnz
xchg
push
in
clc
sub
mov
rol
std
dec
jbe
lds
xor
pusha
fadd
jns
pop
jmp
adc
cs
jne
dec
jne
push
das
jno
mov
mov
pop
jge
sti
enter
pop
in
in
sub
inc
adc
cmp
scas
adc
nop
jbe
in
push
and
jg
mov
or
fld
jns
ret
mov
push
mov
add
mov
pop
cmp
fdiv
out
loopne
ror
push
add
inc
sbb
adc
je
push
push
cmp
scas
mov
jo
ror
xor
jns
xchg
outs
fimul
mov
push
jg
inc
in
lock
ret
xchg
jne
adc
cmps
loope
inc
push
pop
in
and
jns
(bad)
sbb
in
pop
mul
fldenv
mov
cmp
jbe
outs
dec
ret
or
add
pause
jb
mov
mul
ret
pop
dec
adc
dec
inc
mov
fmul
cmps
or
mov
or
or
push
cs
sbb
pop
inc
sbb
dec
sbb
sbb
sbb
cmp
jne
adc
dec
jbe
dec
mov
jmp
ret
cmp
jbe
push
sbb
dec
pinsrw
clc
mov
adc
ins
dec
and
jecxz
stos
or
repz
add
std
fs
mov
mov
or
push
add
jnp
xor
dec
pop
pop
jbe
cmps
clc
je
aad
xchg
and
mov
ret
loope
movs
gs
push
out
jmp
fnstenv
enter
(bad)
dec
xchg
mov
or
jecxz
loop
xchg
mov
jl
sub
test
xchg
icebp
sub
dec
sbb
js
jbe
int3
in
cmp
sbb
cmp
jmp
adc
add
adc
jno
inc
shl
test
push
repz
ss
push
mov
jge
sbb
test
add
jae
int3
mov
fiadd
sbb
idiv
or
adc
add
frstor
ret
push
mov
mov
dec
call
shr
push
aam
pop
imul
jo
cwde
jae
mov
adc
cld
lock
push
inc
jge
pop
mov
les
dec
or
mov
repnz
mov
sub
daa
add
inc
add
push
adc
add
adc
dec
ret
pop
aad
sub
add
xor
int3
rcl
add
dec
outs
in
adc
or
push
jmp
out
sti
jp
jno
rol
sbb
push
or
out
add
daa
icebp
sub
mov
push
int
or
dec
leave
mov
mov
pop
add
shl
mov
test
repnz
mov
mov
pop
sub
xchg
cmps
push
enter
adc
icebp
adc
add
or
sbb
pushw
inc
mov
aad
jecxz
adc
add
pop
dec
popa
das
jl
lods
(bad)
dec
cdq
in
or
adc
and
inc
jne
dec
sub
std
int
cmc
out
add
in
fiadd
in
add
hlt
in
test
js
out
sbb
add
outs
and
sub
push
ins
sub
loop
repnz
mov
dec
std
pusha
sbb
int3
adc
lods
leave
push
icebp
std
(bad)
imul
mov
add
movs
sub
push
pop
clc
rol
sbb
hlt
movs
sbb
pop
in
fild
fcomp
fldcw
sbb
adc
sahf
dec
out
pop
pop
pop
xchg
jne
add
mov
jnp
(bad)
cli
inc
jg
test
inc
mov
inc
dec
push
xor
sahf
jbe
pop
(bad)
and
imul
aas
mov
test
or
sar
pop
push
int3
pop
cmp
xchg
mov
cmp
pop
mov
add
adc
cmp
push
call
push
sbb
dec
jno
(bad)
xchg
retf
pop
sbb
mov
hlt
mov
mov
and
pop
inc
in
add
retf
lock
nop
repz
clc
ror
pop
sub
sahf
ret
sub
pusha
fsubr
adc
outs
and
dec
jne
add
in
add
loop
mov
push
bound
(bad)
ret
enter
mov
mov
and
lahf
movs
sahf
inc
clc
fst
loope
xchg
call
(bad)
fsubr
xlat
jecxz
mov
arpl
xor
jp
push
pop
adc
add
in
or
push
sti
or
or
push
les
and
sub
retf
and
out
sbb
in
xchg
and
inc
mov
imul
call
sub
test
out
adc
xor
std
call
sbb
xor
mov
inc
ja
ins
or
loopne
into
fistp
jmp
mov
arpl
inc
add
sbb
xchg
lods
outs
xor
mov
pop
or
imul
iret
sbb
aam
inc
mov
push
pop
test
leave
cmps
sbb
add
add
and
sub
test
xchg
stc
jns
inc
sbb
or
aaa
fmul
nop
mov
mov
dec
push
retf
and
std
inc
lahf
add
sub
scas
(bad)
sahf
push
(bad)
cmps
rol
dec
and
inc
movs
adc
mov
ds
loope
add
add
mov
sbb
sub
mov
inc
ins
push
sub
mov
jno
jge
xor
cmp
in
xchg
push
mov
inc
(bad)
cmp
cld
in
jg
push
inc
lea
imul
daa
sar
ja
int
sub
test
xchg
fadd
sub
stos
stc
scas
adc
mov
inc
pop
popf
add
add
mov
or
aad
clc
in
loop
jnp
rol
mov
aas
mov
xstore-rng
cmps
add
add
scas
mov
sbb
ja
dec
dec
in
xchg
cmp
mov
pop
ds
pop
cmp
add
add
mov
lea
bound
mov
fsubr
hlt
sub
mov
inc
add
mov
push
popa
lds
jbe
pop
(bad)
outs
arpl
ss
retf
jl
xor
mov
dec
clc
and
in
test
gs
adc
pop
pop
ret
or
push
outs
or
add
rol
xor
adc
jbe
or
jne
(bad)
jnp
clc
or
jne
adc
clc
fcmovnu
test
mov
add
(bad)
fadd
xchg
mov
add
rcl
rcl
rcr
cmp
jae
js
cmp
jae
sub
sbb
inc
jecxz
pop
clc
les
mov
jne
mov
mov
test
shr
hlt
push
mov
stc
repnz
rol
add
xchg
or
cmp
jbe
mov
dec
les
xor
and
imul
or
pop
xchg
dec
add
not
pop
pop
push
ret
or
lods
loopne
push
add
jmp
and
xor
sub
push
xchg
cmp
jne
xor
pusha
push
sbb
ror
push
aam
or
push
cld
push
loope
cmp
ret
div
imul
stc
cmp
ret
push
aam
jnp
mov
cmp
test
add
cmp
pop
cmp
(bad)
dec
jl
fstp
adc
imul
clc
jb
xchg
aam
and
pop
push
test
add
test
dec
adc
or
ficomp
dec
dec
add
enter
dec
lock
adc
add
adc
sar
add
xchg
out
dec
adc
dec
in
sub
xor
movs
mov
mov
in
ret
jmp
mov
movs
mov
dec
pop
push
dec
movs
sub
and
push
movs
and
xchg
push
in
push
pop
xor
adc
push
cld
popf
popf
adc
mov
cmps
cmp
test
shl
or
push
aaa
imul
dec
clc
ins
and
push
mov
pusha
xchg
mov
mov
int
std
enter
xor
mov
sub
lock
xor
sub
lahf
fwait
div
and
push
xchg
test
pusha
aad
inc
inc
lds
mov
mov
adc
xor
pop
imul
jno
xor
xlat
sbb
stc
xor
inc
in
push
or
stos
pop
and
or
aaa
into
imul
inc
pmullw
cmps
fnsave
mov
adc
xchg
inc
pop
sbb
sar
mov
pop
sbb
lods
test
xchg
inc
popf
cdq
cmp
xor
or
test
adc
and
and
inc
pop
sbb
icebp
in
inc
pop
sbb
in
pop
sbb
fstp
aad
sbb
inc
int
lds
inc
pop
sar
mov
lods
inc
pop
sbb
movs
mov
popf
cdq
xchg
xchg
sbb
inc
lea
pop
cmp
jne
ins
inc
pop
sbb
gs
pop
sbb
pop
pop
push
push
sbb
inc
dec
dec
inc
gs
inc
pop
inc
cmp
sbb
sbb
and
xchg
sbb
gs
inc
or
inc
pop
add
adc
and
test
loope
rdpmc
leave
and
aad
push
gs
inc
dec
popa
pop
pop
xchg
inc
pop
sbb
dec
inc
pop
sbb
inc
inc
pop
sbb
cmp
gs
inc
sub
inc
pop
and
sbb
sbb
add
retf
stc
cmc
icebp
xor
and
test
test
test
sar
mov
xor
and
test
test
test
cmp
jne
xor
and
test
test
test
inc
sbb
gs
xchg
sbb
sub
std
sbb
cmc
inc
pop
cmp
add
xor
retf
in
jmp
test
fstp
leave
and
test
test
mov
or
test
test
test
test
test
jne
or
imul
pop
pop
leave
and
test
test
xor
and
and
test
test
pop
sbb
in
pop
stc
cmc
icebp
sbb
inc
in
jmp
pop
loope
fnstenv
ror
rol
retf
adc
pop
sbb
mov
gs
inc
lods
test
pop
mov
pop
sbb
sbb
test
jge
jne
sbb
inc
ins
imul
pop
pop
xchg
inc
pop
sbb
dec
inc
pop
sbb
inc
inc
pop
sbb
cmp
gs
inc
sub
inc
pop
and
sbb
sbb
add
retf
stc
cmc
icebp
xor
and
test
test
test
sar
mov
xor
and
test
test
test
cmp
jne
add
mov
adc
(bad)
(bad)
sar
push
pop
or
add
fisub
fsubr
aaa
push
mov
sar
pop
adc
cmp
push
push
sub
xor
cmp
adc
out
mov
loopne
add
mov
or
and
jo
adc
addr16
sub
dec
aam
or
pop
or
aam
sbb
pop
mov
in
push
and
ret
adc
jb
cli
or
jbe
pop
sub
jno
popa
and
or
push
sub
imul
out
add
xchg
or
pop
inc
or
pop
test
or
push
sub
mul
and
dec
bound
ins
pop
and
pop
dec
inc
inc
dec
add
mov
cmp
jo
je
pop
(bad)
pusha
push
push
dec
dec
sbb
dec
pusha
(bad)
and
and
push
call
das
push
inc
jo
fld
dec
inc
push
xor
(bad)
jbe
bswap
and
(bad)
mov
push
add
xor
dec
nop
movs
adc
ret
loope
ja
sbb
ins
into
mov
pop
lea
push
dec
rcl
bswap
add
shl
or
adc
sbb
je
xchg
dec
enter
fiadd
adc
imul
scas
add
loop
jge
std
lea
bnd
fbstp
jg
inc
test
or
add
ret
inc
int
out
ss
mov
mov
jle
repnz
dec
mov
not
dec
jbe
pop
sar
mov
fld
stos
push
mov
sub
xor
mov
mov
adc
cmp
repz
scas
test
pop
imul
add
jmp
sub
add
test
sbb
test
test
jno
and
test
test
dec
dec
or
inc
cmp
cmp
or
mov
xor
nop
cmps
jns
dec
pop
leave
in
lods
jns
fild
jmp
addr16
pusha
pslld
gs
inc
repz
cmc
gs
inc
pop
div
clc
xchg
inc
pop
sbb
cli
sti
inc
pop
sbb
std
inc
sbb
inc
loope
sbb
inc
jecxz
in
xchg
inc
pop
out
call
jmp
sbb
in
out
pop
sbb
out
lock
sbb
inc
rcl
aad
xchg
inc
pop
(bad)
xlat
fcom
fcmovu
inc
pop
sbb
fstp
pop
sbb
fnstsw
rol
gs
inc
ret
(bad)
lds
inc
pop
mov
xchg
inc
pop
sbb
retf
pop
sbb
int
pop
sbb
iret
shl
inc
mov
mov
xchg
inc
pop
mov
mov
mov
sbb
mov
xchg
mov
gs
inc
mov
gs
cmps
ror
in
xchg
jl
scas
and
aaa
movs
das
or
push
inc
push
data16
xchg
mov
add
rcr
or
bound
imul
mov
inc
or
add
ror
das
jge
nop
mov
or
fs
ins
mov
sti
test
xchg
test
jl
inc
inc
arpl
or
fldcw
loope
or
jno
mov
xor
add
mov
jge
inc
push
jbe
push
addr16
data16
push
jp
xchg
mov
or
outs
mov
xchg
xor
dec
scas
sbb
xor
or
inc
jg
loopne
or
scas
popf
jle
sbb
ror
pop
sbb
sbb
jo
mov
add
or
or
push
inc
jp
data16
push
leave
mov
xchg
push
adc
sbb
mov
test
les
test
rcl
jg
jl
jo
mov
or
add
ja
cmp
add
xchg
pop
mov
bound
xor
jno
mov
jg
(bad)
and
ins
jg
or
add
mov
sub
fsub
fcomp
pop
aas
adc
gs
rol
adc
stc
sbb
push
inc
push
push
mov
sub
cmp
ins
or
jne
jne
adc
aad
jne
inc
inc
imul
dec
shl
inc
sbb
cwde
adc
fs
ror
je
push
adc
sbb
xor
xor
jae
ins
out
and
mov
adc
inc
push
jne
fs
add
adc
or
jne
ins
in
(bad)
mov
test
add
push
bound
bound
mov
cdq
(bad)
shl
add
adc
stc
ret
xchg
call
or
jle
push
xchg
sahf
das
xor
jno
mov
das
pop
sub
inc
pop
adc
outs
xor
or
sub
inc
nop
push
bound
bound
cmps
mov
add
add
inc
xor
push
imul
jae
jp
pop
and
push
cdq
and
jmp
xor
and
cmp
sub
cld
push
repz
ins
jbe
adc
ret
(bad)
lock
jp
and
dec
cmps
enter
das
xor
ret
ret
addr16
hlt
lods
mov
push
adc
loopne
lea
(bad)
int3
mov
mov
jge
jp
jns
cmps
pop
mov
imul
dec
push
mov
jmp
sub
sbb
dec
xchg
cmp
mov
jl
and
nop
lock
mov
cwde
fwait
leave
xchg
clc
test
sbb
sbb
xor
jmp
push
enter
std
pushf
cwde
push
xor
adc
dec
add
or
add
xor
mov
adc
int3
add
and
add
loope
out
arpl
add
mov
adc
test
push
mov
cmp
add
cmp
and
jbe
pusha
js
mov
push
inc
pop
add
mov
por
add
jmp
jbe
inc
and
pop
and
push
pop
push
or
push
inc
adc
or
mov
cmp
ja
add
jg
cmp
push
jne
mov
out
pop
xor
mov
and
add
and
cld
jne
adc
rcr
add
mov
loope
or
xor
pop
mov
pop
jns
jbe
mov
pop
or
test
inc
hlt
test
int3
jns
mov
mov
or
xchg
mov
cdq
push
push
sbb
fs
and
cmp
push
add
sbb
shl
or
add
add
xchg
rcl
push
fld
mov
xchg
pop
movntps
outs
cmp
mov
jge
add
ja
push
jle
mov
hlt
iret
adc
dec
sub
stc
ins
iret
sub
inc
cli
add
xor
ins
or
je
push
pop
(bad)
sbb
add
rol
jo
or
in
adc
sbb
jnp
pop
or
adc
sbb
sub
adc
add
pop
add
neg
in
stos
out
add
daa
or
pop
xchg
mov
js
cld
dec
in
sbb
or
dec
mov
fdivr
cwde
pop
sbb
rol
or
or
jmp
push
pop
pop
bound
xor
repnz
mov
add
shr
jne
push
(bad)
outs
daa
fistp
cdq
mov
sub
std
pop
jp
adc
adc
pusha
push
sbb
jg
push
dec
jbe
xchg
pop
aad
retf
sub
rol
mov
jle
pop
mov
mov
(bad)
mov
sti
aaa
loope
and
mov
gs
int
lahf
data16
push
stc
(bad)
push
add
adc
jmp
add
add
daa
(bad)
inc
retf
fbld
lea
xor
adc
mov
(bad)
aas
cmc
mov
cdq
into
sbb
jo
cmp
mov
or
rol
(bad)
pop
mov
pop
sub
into
mov
fs
fs
push
sub
mov
mov
das
icebp
out
adc
pop
shr
es
adc
int3
scas
xchg
push
test
add
sahf
xor
loopne
ins
pop
(bad)
or
mov
jp
mov
or
dec
js
push
fld
scas
push
outs
xchg
fwait
push
dec
xchg
pop
jge
pop
inc
popa
icebp
xchg
or
lds
or
dec
xchg
clc
fmul
call
sbb
push
sbb
or
push
xchg
xor
adc
adc
iret
xor
pop
leave
xor
in
fisubr
das
and
leave
push
pop
push
pusha
sahf
add
add
inc
adc
pop
gs
sbb
jo
movs
fwait
bound
ret
ins
gs
inc
in
sbb
call
std
dec
in
inc
sub
and
push
loope
inc
sub
inc
push
adc
pop
mov
cmp
psubsw
push
mov
sar
das
jb
add
in
cmp
rol
(bad)
enter
dec
adc
je
push
jne
scas
ret
sar
cmps
jne
sbb
in
push
or
mov
or
or
cmp
mov
push
enter
sbb
test
stos
sbb
pop
gs
fisttp
lods
add
sub
dec
add
add
add
push
and
aad
cld
and
enter
push
ins
or
mov
aam
fcomp
clc
sub
sbb
(bad)
mov
and
fcomp
jno
cmp
sub
pop
mov
mov
pop
popa
and
xchg
xlat
mov
pop
push
adc
sbb
push
mov
xchg
mov
dec
stos
dec
leave
mov
push
xor
mov
stc
xchg
movs
mov
aas
fnstenv
lahf
pop
cmp
fmul
mov
aam
icebp
es
enter
and
jge
gs
cmp
push
jge
mov
repnz
cmp
push
adc
jl
pop
dec
js
jbe
test
adc
push
or
into
mov
push
f2xm1
js
and
dec
test
jle
inc
pop
adc
and
cmp
push
or
or
popa
nop
inc
xchg
test
sbb
xchg
(bad)
fidiv
out
mov
jg
jbe
pop
or
leave
ins
lock
cdq
mov
mov
sub
push
adc
fwait
clc
pop
push
or
stc
std
adc
sbb
outs
stc
sbb
inc
mov
cmc
push
jo
retf
jl
sbb
dec
fisttp
push
add
jmp
fcom
push
(bad)
out
mov
mov
rol
addr16
and
mov
jmp
sbb
adc
ret
add
hlt
or
mov
jmp
push
fdivrp
hlt
push
add
push
pop
fcom
mov
push
cmp
dec
lea
fucomp
push
icebp
pushf
fiadd
ins
push
push
mov
xlat
jmp
call
sub
mov
inc
xor
mov
mov
mov
adc
pop
sub
sbb
mov
pop
(bad)
and
dec
ins
mov
std
cmp
ret
pop
in
idiv
ror
stc
mov
dec
mov
mov
dec
scas
push
push
and
sar
dec
inc
sub
pop
sti
mov
(bad)
(bad)
fadd
and
cwde
pop
lea
addr16
test
stc
call
cmp
rcl
add
xlat
or
mov
(bad)
xor
xor
hlt
cmps
mov
mov
ror
rcl
jo
ror
arpl
mov
imul
ins
adc
xor
push
cmp
pushf
stc
jmp
sti
jmp
popa
push
or
mov
mov
push
inc
mov
mov
jge
in
mov
and
stc
dec
nop
mov
inc
outs
sub
lahf
dec
pop
jecxz
mov
xchg
jne
mov
mov
and
bnd
push
mov
pop
(bad)
(bad)
xlat
lods
fst
mov
into
ficomp
pop
sub
stos
mov
jbe
icebp
in
add
jg
les
mov
xchg
mov
out
jno
xor
adc
or
loop
jecxz
xchg
test
mov
adc
ja
mov
pusha
sbb
cld
and
mov
and
dec
sbb
add
dec
mov
mov
or
or
xchg
movs
int3
inc
cmp
cld
and
test
mov
pushf
sub
jbe
or
mov
lea
adc
in
add
dec
and
jno
adc
inc
les
jno
or
xchg
or
adc
out
mov
repz
mov
jg
ja
sbb
or
fld
cmp
cs
leave
lods
in
loopne
in
sbb
cs
dec
mov
nop
cld
movs
test
pop
mov
cmp
clc
mov
cmp
je
add
outs
movs
mov
xor
repnz
mov
jo
mov
jno
pop
mov
stc
sub
or
jae
push
add
xor
js
ins
fmul
loopne
adc
add
xchg
cmc
das
in
push
mov
cmp
push
loop
idiv
add
adc
jge
stc
pushf
loope
les
(bad)
ret
cmp
(bad)
cmp
pop
pop
stc
and
jbe
mov
mul
int3
out
or
cwde
or
cs
in
pop
push
outs
aam
scas
cdq
das
or
xchg
xor
cmps
call
adc
cdq
jb
adc
sub
loope
sub
mov
inc
adc
jg
xor
push
add
adc
push
jne
pop
jbe
mov
popf
and
inc
or
push
clc
sbb
dec
add
pop
outs
mov
cs
dec
mov
les
jbe
jbe
or
pop
ror
xchg
mov
jg
fs
pop
cmp
jmp
add
or
jbe
mov
jl
(bad)
loope
ja
lock
out
or
les
jp
adc
mov
jp
clc
(bad)
pop
or
pop
jbe
into
aam
or
mov
add
xchg
xor
push
rcl
sbb
or
cmc
add
xlat
imul
inc
xor
inc
mov
(bad)
lods
inc
leave
in
ss
mov
cmp
xlat
push
mov
in
or
jge
or
and
div
jmp
cmp
jge
div
push
shl
in
push
mov
mov
pusha
aas
push
inc
enter
fist
mov
mov
pusha
(bad)
jle
outs
mov
dec
jne
mov
push
inc
jne
mov
inc
jne
mov
into
ins
cwde
add
jne
dec
jl
mov
mov
push
or
ret
ja
mov
loop
dec
jns
push
std
sub
pop
imul
lds
nop
mov
inc
mov
ret
nop
les
push
les
xchg
cmp
push
push
pop
loop
jnp
cmc
mov
ss
in
jae
int
jge
push
or
dec
ds
lods
push
fcom
sbb
or
jno
mov
sub
test
xchg
lea
es
add
jmp
fwait
and
aam
dec
fcmovnu
inc
jmp
cmp
stc
fcmovnu
(bad)
push
(bad)
aam
mov
in
or
inc
out
cmp
jge
in
xor
lds
ja
push
dec
xchg
adc
sub
(bad)
clc
xchg
pop
in
jle
push
sbb
add
jmp
adc
loopne
std
add
ds
pop
call
dec
std
sbb
fimul
mov
sbb
dec
mov
mov
push
xchg
adc
ja
inc
in
xchg
lods
cmps
ins
iret
hlt
mov
xchg
sbb
sbb
test
cmps
out
pop
cmp
cmp
ficomp
(bad)
pop
nop
jmp
or
adc
aas
cld
and
clc
ss
xor
in
pop
adc
pop
xchg
mov
test
mov
inc
fcom
adc
(bad)
aaa
push
sub
inc
add
stc
sbb
sti
cmp
mov
inc
std
cmp
add
cmp
push
sub
stos
rol
popa
lods
add
push
shl
add
jae
add
or
fadd
(bad)
test
imul
sbb
retf
cwde
mov
int3
movs
dec
pop
cmc
pop
cmp
shl
mov
jo
mov
rcl
cmp
push
xor
stc
test
mov
hlt
test
aaa
addr16
hlt
lock
test
shl
jbe
inc
push
mov
jge
jmp
mov
push
cmp
cmp
and
shl
retf
cmp
pusha
push
push
pop
leave
pandn
popf
dec
or
adc
ins
mov
scas
call
adc
repnz
(bad)
mov
cmp
les
shl
in
inc
add
push
adc
mov
inc
mov
ror
test
add
add
outs
and
sub
es
or
or
enter
inc
(bad)
js
adc
jmp
jno
pxor
pop
dec
inc
jbe
sub
imul
stc
retf
ret
clc
jmp
outs
ins
aaa
mov
add
sub
inc
popa
aas
pop
je
lock
add
(bad)
les
sub
jbe
bound
(bad)
mov
mov
cmp
dec
aad
dec
inc
and
lahf
js
and
lods
add
cmc
mov
mov
stos
jmp
and
gs
mov
adc
or
scas
leave
cmc
xchg
xlat
mov
dec
les
dec
addr16
(bad)
and
xchg
cmp
cmp
add
add
mov
loop
and
jle
mov
inc
dec
adc
icebp
add
cli
or
dec
icebp
cmp
ins
ds
fst
repz
pop
cs
cld
inc
mov
add
jns
fiadd
jne
adc
leave
clc
pop
daa
stc
pushf
dec
dec
addr16
fmul
fidiv
adc
inc
in
loopne
jp
int3
jl
sbb
add
es
cmc
jns
sbb
stos
cwde
data16
(bad)
adc
pop
fsub
pop
jne
and
or
push
sub
sub
cmp
sbb
adc
jg
sbb
sbb
xchg
and
ins
add
sbb
mov
push
mov
shl
in
in
add
push
add
add
or
jne
mov
or
xchg
xchg
sub
fisttp
mov
add
mul
lods
aaa
xchg
bnd
adc
dec
cmp
adc
or
lods
jmp
nop
fidivr
imul
add
js
cmp
mov
add
or
hlt
ret
inc
xor
xchg
test
xor
arpl
push
js
pop
dec
push
add
add
test
in
test
or
mov
push
jb
inc
inc
dec
retf
stc
pop
pop
addr16
xchg
inc
jmp
in
(bad)
icebp
mov
inc
fild
loope
jl
cld
push
jbe
mov
hlt
ffree
jge
pop
push
mov
cmps
cli
xchg
in
dec
pop
test
xor
in
dec
jae
inc
xchg
jmp
ja
(bad)
dec
or
movs
push
mov
jmp
sti
add
or
inc
aam
xchg
pop
jle
test
clc
or
xchg
cmp
icebp
(bad)
das
jne
mov
xchg
ret
mov
and
arpl
push
sub
fwait
push
nop
in
pusha
and
mov
mov
dec
add
dec
jmp
addr16
ret
and
out
test
shl
sahf
test
mov
ds
jl
aad
fsubr
jns
sub
inc
pusha
push
imul
shrd
enter
push
ja
dec
jbe
imul
add
xchg
ins
pop
stc
xor
popa
mov
push
adc
dec
sbb
jae
cmps
pop
fadd
push
ret
cmps
or
mov
cmp
addr16
push
test
push
dec
call
add
or
add
ss
and
inc
pop
add
dec
jne
sub
enter
std
aaa
push
das
cmp
add
loope
push
pop
xor
ins
sahf
cmovnp
and
mov
cmp
(bad)
imul
jg
jne
sub
add
fstp
dec
mov
into
xor
in
jg
lods
dec
add
adc
mov
das
cmp
xor
pop
jne
xchg
add
xor
and
(bad)
pop
pop
pop
cmp
cmps
mov
fwait
outs
mov
pushf
pop
shr
jp
jp
test
sub
add
loope
adc
inc
sbb
leave
int
cdq
adc
push
ror
xor
fild
sbb
mov
test
in
sbb
xchg
std
je
xchg
(bad)
adc
sbb
sbb
call
xor
fwait
pop
lea
jecxz
outs
mov
mov
sbb
or
gs
dec
mov
xor
fisttp
test
test
mov
mov
ret
pop
mov
loope
data16
imul
mov
ret
std
add
push
pop
or
pop
(bad)
in
xchg
mov
adc
mov
mov
or
mov
push
mov
mov
or
imul
inc
push
mov
daa
inc
into
pusha
pop
or
ret
inc
addr16
and
sbb
add
ret
sbb
inc
mov
shl
cmps
jmp
push
dec
sti
and
in
shr
and
call
arpl
xlat
push
push
and
mov
push
out
add
std
mov
adc
leave
cmp
jmp
call
fimul
push
mov
inc
or
or
xchg
popa
xor
cmp
inc
sub
dec
or
fstp
(bad)
sbb
cld
add
jno
or
add
inc
stos
js
loope
(bad)
dec
cld
stos
int3
in
adc
call
cli
mov
cmp
jns
cld
mov
adc
or
jecxz
aas
(bad)
(bad)
or
add
fdivr
rol
cld
pop
or
xor
lock
mov
sbb
mov
lea
sbb
push
and
lock
(bad)
push
(bad)
xchg
popa
ds
inc
cdq
dec
add
or
jmp
lock
push
ror
or
adc
jmp
jae
in
and
add
in
test
pop
xor
test
es
into
inc
pop
pop
(bad)
add
xchg
jmp
(bad)
popf
add
std
into
xchg
lods
mov
or
xor
cs
out
cwde
clc
jo
adc
or
jbe
push
icebp
jle
inc
jb
sub
push
loope
mov
inc
jb
dec
test
hlt
pushf
lods
loope
push
sub
ret
cmp
mov
xchg
outs
add
shl
sbb
sbb
xchg
xor
ror
repz
test
aam
and
or
push
in
cli
into
mov
push
xor
cmp
dec
sbb
sbb
sub
in
xor
int3
repz
les
or
or
mov
pop
pop
pushf
stc
imul
repz
loope
inc
xchg
pop
mov
lods
mov
sub
scas
call
xchg
sbb
inc
lock
inc
push
xor
and
inc
loope
mov
jle
cdq
ret
mov
xchg
inc
mov
or
gs
retf
je
(bad)
call
mov
xchg
jno
in
sub
mov
sbb
shl
je
or
and
int
add
shr
or
into
mov
mov
daa
cmp
(bad)
pop
xchg
retf
int
cdq
mov
retf
test
es
cmp
out
jb
scas
inc
dec
in
add
mov
jo
ret
dec
add
push
adc
data16
lods
adc
test
(bad)
xchg
or
jp
mov
inc
jbe
je
xchg
cmp
adc
add
popf
lea
xor
(bad)
call
and
sub
xor
cmc
jle
push
popf
jle
add
inc
fwait
enter
mov
jge
cmovae
cwde
mov
push
jae
mov
pop
cmp
leave
addr16
rol
jge
stc
jno
call
outs
cmp
stos
inc
push
push
in
sub
sbb
fcom
xor
pop
push
pop
scas
popf
out
jb
adc
setns
xor
mov
add
bound
add
mov
in
sbb
push
dec
and
outs
add
adc
repz
popf
out
call
out
add
or
pop
in
cmp
mov
lds
adc
int
mov
rcl
adc
adc
pushf
lea
sti
les
repnz
sub
pusha
adc
add
dec
fmul
clc
mov
idiv
mov
push
jae
mov
sub
es
add
jmp
push
dec
test
inc
(bad)
sbb
mov
in
adc
add
cmp
test
loopne
outs
les
cmp
jne
xlat
int
sahf
mov
pop
lds
(bad)
cmp
sbb
or
mov
adc
xor
add
mov
(bad)
pop
jg
mov
cld
sub
dec
sub
adc
outs
cmp
enter
aas
inc
xor
cmp
jge
xor
in
mov
add
jecxz
inc
jl
inc
inc
in
sbb
fldenv
shl
and
inc
mov
xchg
ffree
shr
xlat
and
and
adc
ret
jge
out
jne
cmp
popa
test
sub
and
xchg
inc
mov
jo
push
ret
sub
into
mov
cmp
fbstp
mov
ficomp
clc
and
inc
inc
or
(bad)
add
mov
cmp
ja
adc
push
pop
dec
test
pop
and
inc
or
and
inc
sub
adc
(bad)
nop
mov
adc
in
repnz
xor
fdiv
inc
popf
movs
(bad)
sbb
dec
dec
inc
enter
aas
sbb
test
mov
push
mov
aad
or
popa
cmps
(bad)
jl
or
pop
sub
sbb
mov
addr16
mov
add
movs
mov
out
dec
inc
or
imul
aas
out
xor
imul
les
mov
mov
imul
ss
mov
mov
sub
jae
inc
mov
pop
and
dec
or
out
cli
sub
daa
lahf
or
inc
jbe
inc
sbb
sbb
add
aad
mov
sbb
xchg
xor
aaa
lea
ret
movs
push
mov
xor
stc
movs
add
cmc
retf
cs
imul
sbb
sub
mov
push
dec
jmp
sbb
aam
mov
shl
jb
xchg
in
pop
in
leave
in
ins
xor
pop
inc
fucomp
and
in
and
mov
add
jae
rcr
in
mov
add
fiadd
not
adc
mov
sar
and
push
mov
add
mov
daa
and
or
adc
mov
cmp
and
js
add
(bad)
add
push
adc
cmc
mov
cmp
push
dec
stc
push
inc
or
std
imul
xchg
(bad)
xchg
inc
xchg
xor
cmp
int
push
xchg
icebp
or
pop
adc
jmp
mov
arpl
xor
test
outs
xor
pop
sbb
div
scas
outs
add
gs
push
mov
jno
imul
imul
dec
add
fidiv
adc
and
into
xchg
pop
inc
call
rol
or
shr
mov
pushf
mov
pop
js
push
mov
les
jp
mov
popa
pop
and
in
adc
test
sub
ins
(bad)
sub
mov
cmp
(bad)
test
aaa
push
sub
out
xor
mov
lods
lds
sbb
sbb
adc
test
sbb
lods
sub
jae
jl
out
stc
ins
and
xchg
mov
and
inc
aaa
add
xor
aaa
mov
ins
adc
nop
(bad)
out
popf
mov
loop
pusha
sti
sub
popa
inc
mov
add
or
adc
sub
push
xor
ds
cmp
and
xor
xbegin
push
in
in
push
inc
add
mov
in
pop
imul
mov
dec
fs
mov
inc
sbb
in
pop
imul
mov
push
and
mov
pop
or
and
repnz
dec
inc
push
ins
inc
jae
push
jno
das
cmp
int
xchg
adc
ins
jnp
sbb
cmp
push
add
sbb
inc
sbb
push
inc
sub
push
jbe
jge
xchg
mov
mov
rcr
stos
push
aam
jecxz
(bad)
pop
mov
(bad)
out
xchg
xchg
jg
cmp
and
in
and
sub
shl
cwde
add
inc
rol
test
xchg
aam
adc
mov
dec
sub
outs
jecxz
inc
sub
lahf
sar
mov
cmp
sub
push
stos
xchg
or
mov
lock
or
and
and
mov
xor
add
test
clc
mov
and
push
and
adc
inc
test
icebp
add
pop
cmp
outs
lods
mov
aaa
cmc
or
push
inc
xchg
repz
in
push
cmc
ret
mov
movs
mov
inc
push
loop
aaa
push
loop
inc
fsub
fisubr
fcom
xor
mov
or
mov
out
sbb
inc
(bad)
mov
aam
gs
in
shl
leave
das
in
aam
pop
sar
out
mov
fwait
addr16
push
js
pop
cmc
cdq
dec
ins
pop
aam
xor
add
movs
jno
adc
into
imul
scas
pop
push
out
dec
dec
jg
inc
pop
mov
cmp
lds
aad
sub
and
sbb
fst
pop
in
ret
xchg
jmp
lods
add
fidiv
ret
pop
cmc
sub
cmp
shr
in
inc
stc
jmp
(bad)
into
jmp
dec
mov
fwait
loope
fisttp
rol
push
aad
mov
out
sbb
das
cmp
leave
(bad)
outs
xchg
or
cmps
jns
test
mov
or
mov
and
push
lods
cmps
pusha
test
inc
(bad)
add
xor
aaa
dec
sbb
das
lods
xchg
xlat
int
pop
fsub
outs
xchg
jno
(bad)
cmp
push
cmp
sbb
out
sbb
inc
dec
lock
inc
(bad)
outs
jno
(bad)
mov
imul
ja
in
push
nop
or
out
adc
outs
push
adc
and
jmp
dec
inc
dec
inc
dec
jmp
sbb
fild
mov
cmp
lds
cmp
fist
jg
adc
or
cmp
and
and
fcom
xchg
xchg
stc
mov
mov
or
add
enter
call
cmp
jmp
sar
or
shr
add
sbb
mov
sub
cmp
and
pop
fs
out
xor
dec
les
out
xor
push
jo
cs
(bad)
ficomp
add
dec
or
(bad)
jge
or
sbb
std
pop
lea
and
stos
in
sbb
mov
stos
jecxz
movhps
sbb
pop
lahf
add
dec
stc
push
fsubr
add
(bad)
sub
mov
fs
or
es
pop
dec
and
loopne
fld
add
inc
mov
std
test
rcl
stos
or
in
xor
mov
dec
clc
fucomi
pop
or
bound
or
push
movs
cmp
inc
dec
or
out
arpl
add
cmp
jbe
pop
out
sub
sub
jae
mov
sbb
in
sub
psubd
dec
mov
call
std
add
hlt
mov
inc
sbb
jne
dec
jbe
mov
push
icebp
xor
jmp
sbb
in
jno
jne
inc
jbe
mov
mov
clc
les
call
or
cli
adc
push
add
cmps
cmp
ja
mov
add
mov
push
jns
icebp
inc
inc
cmp
push
cmp
or
add
or
push
pop
pop
inc
jecxz
les
cmc
push
inc
sbb
push
outs
les
fdiv
add
and
sub
sub
sub
xor
mov
and
daa
sub
fsubr
mov
daa
cs
outs
adc
or
ja
xor
sub
xor
mov
dec
fidiv
ret
loop
jnp
mov
adc
jmp
or
or
ret
jle
push
or
and
or
mov
mov
and
add
xor
jmp
outs
sbb
(bad)
out
jne
iret
jbe
push
push
jg
jb
cld
into
lods
dec
mov
in
and
mov
xor
fstp
icebp
mov
pop
jg
mov
mov
idiv
cs
add
cmps
in
lods
cmp
and
sub
cmp
push
lock
mov
pop
add
test
cmp
jne
xor
clc
fs
test
pop
sbb
enter
add
clc
lods
mov
push
cmc
mov
xor
cmp
sub
cld
call
cmp
jne
mov
in
inc
inc
in
add
cmp
inc
mov
in
enter
add
idiv
push
jmp
in
mov
mov
lds
jo
scas
cs
add
mov
push
pop
(bad)
(bad)
and
sub
retf
pop
shl
icebp
leave
les
pop
les
daa
cld
ja
jno
adc
sar
add
sbb
out
faddp
sub
dec
fld
pop
sub
ret
or
or
xor
sub
lock
ss
and
fild
inc
sbb
in
into
outs
(bad)
sub
xor
fisub
mov
cmp
jbe
xor
ret
(bad)
jl
fld
bound
mov
out
sbb
loope
in
mov
mov
cmc
add
dec
fnstenv
in
push
add
or
aam
mov
jg
in
inc
push
inc
cmp
mov
xor
data16
and
adc
stos
mov
or
mov
adc
jbe
jle
adc
outs
stos
xchg
cmps
sbb
call
mov
ficom
lea
clc
mov
sbb
es
sub
clc
inc
pop
cmp
jmp
sbb
aam
inc
fisubr
mov
push
adc
repnz
ret
inc
xchg
aam
and
loop
lods
(bad)
fsubr
mov
loope
pop
dec
(bad)
pushf
fiadd
pushf
test
add
or
add
and
js
loopne
out
jl
mov
jo
pushf
mov
out
shr
and
xor
or
xor
stos
js
add
or
lock
cmp
js
test
adc
clc
and
cmp
ss
mov
dec
and
and
in
and
dec
xor
mov
jb
dec
sbb
repnz
or
mov
(bad)
mov
push
add
sub
pop
cmp
or
adc
in
sahf
or
jmp
icebp
add
add
inc
popf
fiadd
int3
inc
cs
(bad)
dec
push
sbb
loop
mov
loopne
fdivr
das
adc
repnz
pushf
sub
test
in
push
jbe
mov
add
mov
and
jbe
in
cmp
inc
and
or
dec
adc
sub
test
mov
out
ss
loop
mov
pop
xor
stos
inc
icebp
push
nop
repnz
pushf
mov
inc
pop
jmp
mov
add
fidivr
xchg
push
call
inc
and
cmp
jne
adc
sti
sub
loopne
test
push
sub
pop
add
push
adc
data16
sbb
mov
dec
sub
mov
bnd
and
add
fadd
loopne
stos
aas
fwait
sbb
movs
cmp
add
add
outs
and
popa
add
and
add
je
fisttp
push
and
test
(bad)
push
cmps
jmp
mov
xchg
or
popf
cli
sub
ins
ror
and
hlt
cmp
jmp
add
mov
mov
ss
cmps
adc
rol
ins
push
stos
ins
push
sub
int3
mov
inc
ss
int
and
mov
adc
xchg
aaa
mov
adc
sub
aad
sbb
out
cmps
push
out
adc
or
add
leave
and
aad
ror
enter
leave
adc
and
mov
inc
pop
mov
ds
leave
cmp
iret
cmp
loop
jg
out
fisubr
mov
jecxz
lea
pop
jae
retf
pop
sub
and
push
retf
retf
neg
push
test
leave
or
sub
xchg
add
jbe
fsub
pop
sbb
sbb
lods
scas
pop
sbb
scas
mov
xchg
sbb
inc
xchg
xchg
xchg
gs
inc
pop
xchg
xchg
cwde
xchg
inc
pop
sbb
sbb
popf
sahf
pop
sbb
lahf
mov
xchg
inc
add
xchg
mov
mov
xchg
(bad)
nop
jno
sbb
inc
jae
jne
xchg
inc
pop
jbe
js
inc
pop
sbb
jnp
pop
sbb
jge
pop
sbb
jg
popa
bound
gs
inc
arpl
xchg
inc
pop
addr16
pop
sbb
imul
gs
ins
outs
pop
sbb
outs
jo
push
sbb
inc
push
push
push
gs
inc
pop
push
push
pop
xchg
inc
pop
sbb
pop
inc
pop
sbb
pop
pop
pop
sbb
pop
pusha
inc
inc
sbb
inc
inc
inc
inc
gs
inc
pop
inc
inc
dec
xchg
inc
pop
sbb
dec
inc
pop
sbb
dec
dec
pop
sbb
dec
push
xor
sbb
inc
xor
ss
add
into
dec
xor
cwde
adc
add
xor
pop
inc
sbb
jbe
xchg
add
das
test
xor
add
adc
inc
div
icebp
enter
mov
or
add
test
jne
adc
or
adc
pop
or
xor
jbe
icebp
rcl
cld
aam
wrmsr
inc
inc
add
stc
jg
jg
jno
shr
cmp
jbe
push
cmp
mov
cwde
clc
ror
rcl
mov
add
mul
sbb
(bad)
fmul
mov
adc
jb
or
sbb
push
mov
loopne
mov
jne
mov
add
sti
shl
inc
and
in
leave
add
jecxz
mov
pop
jg
or
es
or
cmp
mov
mov
add
or
adc
lock
add
mov
dec
dec
adc
push
add
in
sbb
mov
cmp
xchg
mov
xor
je
daa
fs
movs
je
add
mov
mov
mov
push
add
inc
cmp
cwde
out
mov
pop
adc
add
mov
mov
add
add
add
in
and
xlat
out
mov
mov
test
mov
jg
pop
movq
jae
add
add
adc
or
test
shr
or
lods
cmp
pushf
or
xchg
stc
mov
stos
mov
pusha
call
lds
(bad)
icebp
cli
gs
shl
push
pop
adc
fwait
or
cmp
popf
fld
adc
dec
xchg
rcl
and
aad
mov
int3
push
psubsw
jnp
popa
or
test
mov
shl
push
xchg
xchg
pop
fistp
mov
sbb
in
or
jle
push
mov
push
inc
in
adc
mov
repz
jo
rol
gs
cmp
or
pop
adc
add
in
fsubr
arpl
bound
xor
enter
div
xchg
inc
(bad)
xor
xor
cli
mov
dec
add
fwait
xlat
pop
pop
pop
pop
pop
pop
pusha
arpl
mov
(bad)
fiadd
fdivr
(bad)
loopne
push
cmc
xchg
inc
ins
pusha
adc
sub
cmp
pop
jno
adc
or
jb
add
(bad)
fadd
add
or
repz
xchg
ins
in
adc
or
(bad)
outs
mov
js
jae
jmp
lahf
xchg
push
sbb
sbb
test
ja
retf
add
xchg
inc
xchg
rcr
jbe
mov
ret
sub
loopne
ror
call
sub
add
push
inc
ins
push
outs
outs
outs
jne
xchg
xor
fldenv
addr16
jbe
jne
ins
cmp
fistp
sbb
dec
imul
add
cmps
xor
xchg
push
inc
push
push
jo
data16
jmp
jbe
cmp
sbb
jo
push
arpl
sbb
and
loop
xor
outs
ins
jp
xchg
icebp
clc
sub
mov
dec
pushf
data16
jmp
add
dec
add
fst
imul
(bad)
jbe
adc
cmp
ja
dec
or
push
push
mov
jae
gs
clc
jl
in
inc
or
ret
bound
icebp
push
inc
(bad)
fcmove
xor
sbb
mov
leave
mov
cmp
mov
test
inc
scas
in
push
ja
mov
aas
mov
aam
pushw
in
inc
inc
mov
mov
test
mov
les
mov
retf
inc
push
data16
popf
xlat
hlt
inc
aas
or
nop
add
cwde
std
adc
sbb
std
imul
push
xlat
mov
pusha
cmp
ins
bound
aad
pop
lahf
inc
jo
inc
xchg
mov
aas
aam
sub
call
in
ins
pop
fdivr
add
and
mov
inc
xchg
mov
je
mov
adc
rep
xchg
sbb
pop
sbb
ss
fsubr
inc
ret
jno
rol
mov
sbb
xor
or
jo
sbb
sbb
adc
add
mov
js
(bad)
sahf
sub
xor
cs
pushf
out
repz
lock
push
add
mov
and
cdq
mov
push
retf
ror
or
or
inc
fld
sbb
push
pop
pop
pop
add
add
rcl
dec
mov
pop
add
jp
vsqrtsd
test
call
leave
adc
or
or
mov
adc
je
bound
fdivr
add
and
popf
je
push
rcl
lahf
cmps
add
mov
sbb
adc
fadd
pop
adc
fdivr
fisub
jp
std
cli
or
std
das
pushf
jo
mov
pop
pop
add
(bad)
cmc
add
fsub
mov
stc
daa
pop
gs
pop
lock
mov
pop
cdq
cld
(bad)
leave
(bad)
and
push
call
sub
js
fild
or
ja
stc
xchg
(bad)
ins
(bad)
fadd
arpl
leave
inc
(bad)
mov
cdq
(bad)
dec
push
bound
and
cmps
xor
icebp
fwait
mov
fild
lock
add
xor
and
imul
aas
mov
or
(bad)
(bad)
and
or
dec
push
inc
inc
outs
add
mov
push
jns
xchg
leave
cmp
add
aas
xchg
or
cmp
sysexit
mov
pop
adc
call
(bad)
int
rol
or
mov
enter
jp
ins
in
fld
fmul
jne
push
dec
fisubr
aam
pop
mov
lock
fcomp
fist
and
pusha
and
out
daa
lds
and
test
mov
inc
ror
push
inc
push
jo
sub
loope
and
and
cmp
cli
in
ror
cmovb
push
(bad)
fdiv
jge
(bad)
push
loopne
aas
dec
ret
sbb
cmc
adc
sub
fnstsw
adc
fdiv
in
retf
xor
adc
(bad)
popa
or
adc
sbb
and
sub
mov
in
mov
xchg
loope
pop
pop
lock
aam
into
std
jb
mov
mov
ja
xor
sbb
rcr
fidivr
std
loope
adc
aaa
int3
ja
lods
dec
inc
sbb
dec
dec
mov
dec
xor
jns
test
aam
sub
push
les
mov
mov
adc
adc
out
jne
inc
pop
lahf
(bad)
mov
in
test
ja
and
test
mov
int
loope
in
mov
or
push
sbb
or
add
xchg
out
ret
call
xchg
int3
add
cmp
cmp
pop
js
ja
retf
ret
and
xor
popf
jne
nop
add
in
add
cmps
in
adc
mov
mov
icebp
dec
and
pop
in
inc
xchg
mov
mov
in
ds
gs
fcomp
inc
jns
addr16
test
jge
sbb
sub
xchg
lea
sbb
sbb
popa
js
jecxz
adc
mov
sub
std
add
movs
sti
add
add
add
add
add
add
add
lock
add
xlat
xor
pop
popa
ins
rcl
mov
fwait
adc
pop
aaa
cmp
mov
or
ror
and
add
xor
add
call
call
cmp
mov
mov
(bad)
dec
in
mov
add
adc
jno
inc
jecxz
jno
lds
leave
cmc
inc
mov
pop
adc
xchg
imul
ins
push
inc
fs
dec
int3
out
sbb
out
out
test
and
ins
mov
add
jne
hlt
dec
aam
jno
add
icebp
add
pusha
adc
pop
pop
xor
sub
sub
jnp
dec
add
pop
or
imul
dec
gs
inc
xor
push
or
jp
imul
fisubr
or
xchg
in
mov
sub
pop
cmp
ficomp
add
cmp
push
inc
leave
or
xchg
sbb
fdiv
cmp
push
cmps
xchg
addr16
out
pop
and
xlat
cmp
or
sub
sti
cmc
sub
(bad)
fsubr
xchg
cdq
add
dec
nop
fsubrp
ins
mov
sub
fsub
mov
jb
and
int
or
dec
popf
pop
fcom
pop
jmp
pushf
sub
mov
jb
sbb
ss
arpl
push
ret
in
or
push
out
popa
lods
add
(bad)
cwde
cmp
add
xlat
mov
repnz
mov
(bad)
add
icebp
pop
mov
cmp
jno
mov
mov
in
arpl
adc
popf
mov
adc
pop
dec
movs
mov
enter
mov
xchg
in
pop
mov
sbb
das
mov
jle
and
jbe
call
enter
cmp
mov
cmp
lods
jbe
pop
es
adc
imul
shr
cmp
jbe
add
adc
std
retf
jmp
pusha
icebp
xor
leave
je
std
(bad)
std
std
jne
sub
sub
ret
stc
shr
div
out
add
adc
test
outs
adc
xor
popa
inc
ss
dec
(bad)
jne
mov
pop
add
shr
cld
mov
and
xchg
jns
pop
cmc
or
sbb
cli
sahf
repz
adc
div
add
fcomp
hlt
mov
dec
shr
sub
cs
xchg
(bad)
or
outs
jmp
test
xchg
in
sahf
sbb
pop
outs
mov
jbe
jbe
xor
cmc
pop
add
mov
test
mov
and
fcmovb
ss
mov
cs
jmp
add
push
test
sub
sbb
mov
add
jno
out
push
sub
or
or
mov
mov
out
cmova
push
mov
mov
xchg
xchg
xchg
mov
in
mov
mov
mov
inc
jb
xlat
or
fadd
ror
scas
push
dec
and
fild
push
dec
je
in
xor
xlat
sub
arpl
or
stc
sbb
xchg
rol
push
jne
pop
aas
aas
cmp
cld
or
or
pop
mov
push
push
inc
leave
cmp
jbe
mov
jbe
mov
mov
jp
sub
mov
add
add
loope
jns
mov
int
jno
inc
les
pop
in
leave
or
pop
xor
pop
push
repz
loop
in
pop
jb
sub
pop
test
(bad)
and
fisttp
add
push
xor
fldenv
push
xor
mov
mov
rcr
mov
or
mov
sbb
adc
mov
sar
pop
ficomp
rol
dec
xor
out
shl
cmp
call
aad
push
xchg
icebp
and
xchg
out
fdivr
aaa
jne
inc
xor
add
adc
jne
mov
(bad)
lods
pop
ficomp
call
inc
fnsave
es
dec
or
xchg
or
dec
xor
repz
or
sub
adc
stos
int
ja
lock
test
and
push
test
push
push
mov
add
adc
idiv
jle
popa
xchg
push
imul
ins
or
pop
xor
mov
(bad)
rcr
jno
or
jge
add
jo
outs
in
cmc
or
inc
sub
inc
or
aaa
pop
aam
or
and
mov
inc
or
cmp
mov
add
sbb
(bad)
push
jmp
das
and
sbb
xor
jecxz
or
jge
sbb
adc
(bad)
loopne
add
stc
add
sub
sbb
and
out
ret
jecxz
adc
sbb
jno
mov
icebp
ins
add
pop
or
mov
inc
fs
add
push
and
pusha
shl
outs
xchg
xor
addr16
jae
and
pop
(bad)
push
cmp
push
pop
adc
mov
pop
dec
xchg
call
inc
inc
les
int
push
xchg
dec
add
add
std
mov
test
inc
jg
mov
jecxz
punpckhbw
adc
or
cmp
retf
mov
int3
sbb
sbb
pop
mov
mov
hlt
add
dec
test
ret
inc
repz
es
mov
sbb
(bad)
jg
push
mov
sbb
(bad)
adc
inc
sbb
pop
icebp
and
or
daa
or
push
out
push
dec
xor
ins
mov
mov
ret
add
add
mov
adc
or
adc
out
pop
xchg
inc
mov
dec
mov
in
xor
cmp
and
aas
jne
ror
and
push
mov
(bad)
in
adc
dec
mov
das
in
pop
movs
jp
in
jg
aaa
pop
or
inc
lock
stos
or
or
movs
mov
fs
in
jbe
mov
sub
or
and
dec
dec
jbe
loopne
pop
shl
and
and
or
mov
das
jmp
and
xchg
je
or
and
xchg
dec
hlt
or
sti
repz
inc
call
and
push
add
js
test
loope
adc
jo
in
fwait
mov
or
push
xor
xchg
clc
mov
leave
mov
jns
sub
arpl
xor
stc
test
pop
push
add
sub
mov
push
test
xor
inc
cwde
mov
seta
or
cmp
pop
ret
push
loop
(bad)
sti
jmp
pop
mov
inc
xchg
jo
mov
pop
je
sbb
sub
push
jge
(bad)
sbb
cmp
shl
inc
push
xchg
stc
push
ret
sahf
lock
stc
add
jle
les
and
dec
sub
ret
mov
mov
jmp
ret
sbb
jmp
lock
pusha
imul
aaa
sbb
scas
dec
mov
sbb
push
jle
stc
xchg
fisub
mov
add
mov
push
es
ror
mov
imul
sbb
es
dec
cmp
or
or
jne
lods
dec
inc
sar
mov
movs
add
lea
lea
adc
push
jecxz
sub
fist
sbb
jge
inc
and
jp
fild
rol
jne
sbb
js
sti
add
es
and
test
adc
fdiv
ja
pop
add
or
cmc
dec
adc
in
cmovno
sar
(bad)
inc
add
pop
fadd
or
jns
in
mov
pop
xchg
jo
les
and
mov
in
das
or
jo
jp
div
push
mov
pop
outs
iret
je
retf
icebp
in
icebp
jno
popf
fnsave
xor
dec
fisubr
pop
std
aad
or
in
xor
sub
mul
outs
push
add
inc
and
std
sub
add
clc
mov
jecxz
mov
mov
xchg
dec
es
std
mov
clc
inc
fwait
movs
pop
cmp
jbe
ror
popa
clc
sub
ds
push
and
or
movs
or
shl
pop
(bad)
fist
popa
setge
or
or
pop
pop
jl
jmp
bound
es
stos
shl
out
inc
sbb
loopne
jb
lds
shl
mov
push
jmp
mov
and
dec
mov
cli
jmp
stos
mov
hlt
jns
mov
or
cmp
pop
or
stos
dec
jnp
mov
cmp
xlat
div
stc
jmp
leave
je
xchg
cmc
movs
adc
fcomp
add
fild
jbe
jns
lahf
dec
std
inc
sub
cmp
push
xchg
dec
xchg
add
shr
adc
cmps
shl
jmp
cmp
cmp
sub
jno
cs
sbb
imul
sub
xlat
push
stc
iret
pop
sahf
xor
sbb
mov
mov
inc
push
or
pop
iret
inc
lods
adc
push
ret
mov
inc
mov
inc
sti
test
add
add
pop
xor
jb
fcmovnb
push
ja
mov
shr
xchg
mov
xchg
imul
repnz
adc
inc
clc
mov
out
std
cs
cmp
hlt
in
xor
psllq
adc
(bad)
sbb
inc
push
in
pop
xor
and
pop
aam
add
stc
sti
in
lea
mul
cmp
pop
in
add
fdiv
mov
pop
(bad)
fadd
mov
call
lock
and
mov
jae
pop
aaa
jo
std
outs
retf
dec
sub
cmc
adc
adc
push
xlat
(bad)
fild
xchg
pop
jbe
xchg
dec
dec
aam
and
xchg
cmp
icebp
clc
(bad)
loop
mov
pcmpgtd
mov
std
sbb
xchg
mov
ss
mov
cmps
add
std
test
jmp
or
(bad)
push
sbb
int
icebp
mov
and
adc
mov
jb
add
fld
inc
and
jno
loop
bswap
or
sbb
inc
in
les
push
call
inc
mov
loopne
add
inc
or
inc
mov
enter
fdivr
leave
icebp
addr16
loope
dec
jb
movs
xor
and
out
popa
mov
dec
pop
jp
xchg
loope
iret
add
add
movs
xchg
mov
outs
or
cwde
lahf
call
lock
sub
add
mov
sbb
and
lods
xchg
mov
imul
xor
popf
aam
out
cmps
in
in
out
sar
call
pop
ins
fcom
stc
ins
or
push
lahf
add
pop
xchg
cli
xchg
imul
or
push
pop
cmp
dec
dec
aam
mov
mov
adc
cmp
inc
fs
push
and
test
add
hlt
jne
sub
dec
repz
inc
stc
cmps
inc
neg
les
out
cmp
xor
dec
push
add
and
mov
push
fcmovne
pop
fcom
mov
pop
nop
mov
xor
pop
inc
pop
cdq
icebp
add
inc
mov
fist
jge
fcom
pushf
idiv
inc
es
mov
outs
fxch
std
dec
cmp
cmp
push
movs
shl
imul
mov
inc
push
sahf
push
imul
or
jns
imul
mov
push
xchg
cmps
push
add
mov
add
cmp
lods
dec
ins
mov
sbb
adc
popf
push
xor
or
inc
or
push
sub
sub
sub
push
adc
sti
adc
ja
adc
dec
and
mov
in
popa
and
ja
sbb
enter
or
(bad)
add
adc
sub
push
or
push
test
leave
fs
sbb
int3
jnp
inc
or
jbe
(bad)
sbb
inc
sub
cmp
icebp
and
shl
mov
sub
inc
and
sbb
and
adc
inc
dec
in
cmp
and
cdq
lds
and
movaps
in
ret
push
fsub
sub
leave
mov
adc
sub
pop
stos
cli
nop
push
push
cmp
sub
push
and
xchg
sbb
and
leave
inc
and
adc
fidivr
push
xor
inc
mov
and
movs
or
pop
adc
and
inc
retf
bound
out
sub
sub
cs
adc
sub
jno
lahf
sahf
inc
les
add
pop
dec
jno
rcl
fild
add
sub
fld
mov
fadd
mov
icebp
or
mov
pop
mov
into
xchg
inc
and
(bad)
cmove
ja
neg
pop
mov
inc
cmp
and
or
sbb
scas
adc
mov
lea
jmp
jns
jle
push
cmp
jge
mov
jecxz
mov
jns
mov
jle
mov
and
push
test
adc
inc
loopne
push
mov
inc
mov
xchg
movs
mov
adc
xchg
shl
sub
or
inc
retf
push
adc
add
xor
leave
ret
mov
adc
mov
jle
dec
or
push
sbb
sbb
and
leave
mov
pop
xor
xchg
jg
cmps
cld
xchg
(bad)
shl
xchg
outs
inc
adc
mov
not
push
repz
in
js
push
or
add
dec
cmp
push
bnd
pop
add
jecxz
stos
popa
jb
jb
pusha
xlat
mov
rol
mov
(bad)
push
sub
das
or
add
ret
inc
jo
rol
imul
loop
inc
inc
fadd
push
or
and
pop
and
xor
jne
and
and
inc
push
cmp
icebp
cmp
and
jbe
add
dec
adc
clc
jle
add
inc
dec
dec
jle
sbb
jg
mov
pop
stc
inc
test
lock
jge
jp
jo
ja
inc
add
inc
or
add
sbb
mov
or
jge
and
and
rol
les
or
jecxz
cmps
shl
and
movs
xor
push
stc
xchg
popf
xor
shl
inc
add
adc
dec
pop
dec
aad
sar
leave
xchg
xor
mov
lock
push
add
stc
pop
mov
adc
mov
shr
dec
dec
fs
pop
imul
mov
ror
test
arpl
div
cmps
xchg
lea
ret
mov
clc
pop
adc
dec
pop
cli
mov
sbb
dec
inc
cwde
xchg
mov
mov
dec
adc
cmps
pushf
or
in
xor
test
cs
ret
and
lds
sbb
jmp
fbstp
(bad)
push
jmp
mov
or
ja
adc
ret
ins
sahf
push
ds
adc
movntq
loop
xor
jp
jno
inc
or
sub
dec
imul
or
sbb
lock
jp
test
push
add
lahf
shl
xor
lods
jge
je
(bad)
shl
dec
sub
cmc
push
(bad)
movs
push
push
mov
test
adc
xchg
iret
sub
dec
jl
add
pop
outs
sub
push
adc
(bad)
bswap
dec
aad
cmp
fdiv
mov
shl
bnd
jb
push
cmp
test
xchg
shr
je
das
sbb
fild
mov
and
gs
or
fld
mov
jecxz
xor
je
sub
leave
icebp
push
jge
sbb
xchg
repnz
fs
repnz
add
pop
add
inc
mov
jae
jl
cli
cld
jne
addr16
or
adc
add
or
fnstenv
sub
les
sub
fist
addr16
aaa
js
jge
cmp
jno
loope
add
xchg
cmp
or
mov
jl
cmp
(bad)
xchg
jne
or
add
push
test
adc
dec
or
dec
or
jo
push
gs
je
mov
cmp
jle
pop
inc
(bad)
cmp
mov
cmp
cwde
or
pop
add
aaa
int
dec
or
push
add
cmp
loop
fadd
pusha
inc
jbe
inc
gs
jb
mov
jbe
ret
cmp
mov
ins
push
sub
pop
sbb
pop
(bad)
dec
adc
leave
icebp
aam
ret
mov
jno
repz
pop
and
sub
dec
sub
adc
and
adc
fcomp
and
add
(bad)
inc
dec
ror
in
(bad)
hlt
enter
das
gs
or
js
mov
test
rcr
mov
sub
rcl
add
lea
or
inc
dec
in
gs
xchg
loope
adc
loopne
xor
sbb
rol
scas
leave
lods
adc
or
in
xchg
jne
pop
call
xchg
adc
fptan
adc
les
xchg
push
adc
mov
rcr
or
mov
or
and
jae
push
xchg
mov
icebp
sbb
jmp
or
or
or
adc
push
aaa
ja
push
adc
(bad)
shl
sub
add
adc
inc
jae
jno
push
jbe
fcom
outs
dec
inc
(bad)
mov
inc
adc
mov
adc
(bad)
xor
and
lock
scas
pop
sub
mov
(bad)
mov
dec
lahf
jmp
movs
xchg
icebp
loopne
mov
sub
mov
mov
mov
into
inc
sbb
cmc
xor
add
loope
cmp
adc
imul
pop
dec
aam
add
cmp
xor
adc
lea
out
push
fistp
add
jne
call
or
xor
daa
sahf
mov
aad
add
adc
jo
aam
std
push
js
data16
pop
rcr
xor
mov
or
stc
jge
inc
fild
cmps
jo
xchg
lock
xchg
ja
retf
mov
pop
xchg
aas
push
test
ds
cdq
popf
push
ins
and
psllq
rcl
outs
mov
js
and
repnz
and
ins
mov
mov
dec
adc
les
or
loopne
popa
rcr
shl
(bad)
scas
jmp
sub
xor
mov
add
leave
aas
dec
adc
push
fst
add
xchg
pop
cmps
pop
(bad)
mov
sub
inc
cmp
or
adc
adc
pop
adc
pop
inc
adc
adc
mov
sub
add
fs
adc
(bad)
out
add
jb
xchg
xchg
sbb
arpl
stc
sbb
ins
js
test
pop
leave
pop
stos
ins
push
inc
inc
jno
lea
jmp
adc
jbe
jg
mov
push
and
adc
inc
pop
mov
cmp
jae
adc
dec
jne
inc
and
push
jae
sub
add
push
leave
sti
xor
cwde
xchg
inc
cmp
repnz
adc
mov
xchg
mov
imul
push
push
daa
pop
push
adc
mov
xchg
inc
mov
adc
cmp
pop
lods
add
mov
mov
and
mov
into
add
sbb
test
mov
mov
add
stc
add
add
jae
add
or
push
test
mov
nop
mov
adc
push
arpl
les
mov
xor
xor
aas
(bad)
jno
cmc
or
sbb
dec
adc
pop
xchg
loope
add
add
add
mov
add
xchg
test
add
push
sar
fisub
test
mov
adc
or
fs
xchg
rcl
dec
movs
addr16
sub
pushf
(bad)
lahf
bound
inc
retf
jae
add
pop
mov
aas
and
dec
sbb
pop
jbe
mov
sub
(bad)
pop
or
int
adc
xchg
mov
(bad)
jl
push
shl
ss
and
dec
xchg
ds
add
stc
call
mov
adc
mov
pop
add
or
and
add
aam
or
test
int3
sbb
and
add
loope
in
inc
in
inc
xor
retf
movs
shr
enter
ins
jo
xor
or
fstp
or
xchg
popf
or
and
fcom
or
fs
mov
sahf
jecxz
ss
add
push
adc
adc
cmps
xor
stc
in
push
mov
shl
add
adc
movs
cs
sbb
or
in
dec
dec
or
adc
xchg
in
ins
or
shl
sub
push
adc
pop
inc
dec
fsub
mov
fdivrp
arpl
dec
dec
jbe
and
jno
outs
sbb
addr16
jns
sub
mov
sar
ret
sub
push
pop
pop
cdq
stos
xchg
mov
push
push
or
movq
cli
js
mov
aas
int
cmp
or
(bad)
call
inc
adc
loop
add
mov
cmp
cdq
sti
stos
mov
(bad)
pop
push
int
mov
ret
jns
jo
inc
repz
test
hlt
sbb
ss
cmp
adc
pushf
out
pop
push
mov
pop
pop
sbb
lods
cmp
jne
ror
test
and
adc
or
mov
mov
mov
mov
les
jbe
mov
sub
cmp
sar
add
or
adc
xchg
jns
sub
cmc
in
adc
pop
popa
xchg
ins
mov
cmp
and
fiadd
int3
fnsave
pop
or
push
inc
add
jbe
adc
add
sbb
aam
mov
(bad)
imul
or
in
iret
or
pop
mov
pop
dec
into
xchg
mov
mov
es
sar
clc
outs
repz
lods
gs
pop
in
and
sub
mov
dec
popf
icebp
sub
add
imul
cld
pop
rcr
icebp
push
daa
jno
push
clc
or
cmp
in
push
imul
mov
sub
inc
icebp
shl
lock
and
push
and
or
mov
push
sti
mov
dec
sub
retf
add
sub
neg
xor
mov
or
mov
xor
ins
push
shr
and
pop
push
push
sub
xor
adc
repz
xchg
inc
sbb
mov
add
loope
or
mov
cld
pop
pusha
leave
sub
xor
das
adc
sahf
sbb
out
add
inc
sbb
xor
dec
popf
int
push
mov
in
and
mov
ret
fidivr
xchg
ds
call
jmp
cmp
jbe
adc
das
retf
scas
repnz
pop
test
(bad)
pop
in
or
test
adc
out
jae
push
imul
frstor
loop
xchg
jle
clc
add
retf
pop
inc
and
jne
mov
and
add
cmp
movs
adc
push
push
jp
ret
mov
pop
fdivrp
ins
ja
aaa
fimul
pushf
and
inc
ret
xchg
stos
pop
in
and
and
inc
sub
not
add
pop
in
and
cdq
adc
mov
fld
pushf
jp
sbb
movs
icebp
and
daa
or
inc
adc
ret
mov
cs
pop
xor
inc
xor
and
loop
or
adc
int
cmps
in
and
pop
dec
and
ja
inc
adc
or
adc
rcl
sbb
xchg
pop
test
sbb
aas
or
aam
aaa
sub
push
cmp
sub
into
addr16
cli
sbb
bound
call
add
and
and
push
cmc
sub
out
ret
or
aad
or
ret
sub
push
mov
pop
das
mov
push
pop
inc
inc
das
push
stc
adc
add
add
movs
ds
cmc
adc
sbb
jno
mov
or
rol
adc
cmps
in
cwde
adc
add
pop
ret
push
mov
xor
ja
xor
mov
mov
xchg
int
jo
mov
add
add
and
pop
sbb
xor
test
mov
loop
(bad)
xchg
shr
inc
test
mov
push
stos
xor
and
push
adc
or
pcmpgtb
mov
(bad)
stos
push
add
add
cli
dec
jbe
ins
cwde
sub
sahf
sbb
pop
aaa
in
inc
repnz
xor
or
xor
xor
mov
xor
pop
push
adc
enter
icebp
jo
outs
mov
out
xchg
ins
sub
push
cmp
jp
add
ret
sahf
lea
jae
maskmovq
neg
add
mov
mov
and
sbb
and
push
sbb
bound
or
xor
aaa
add
pop
mov
sbb
cmp
inc
xor
xchg
mov
pop
ja
cmp
or
xor
mov
sbb
dec
fs
pop
pop
fucom
mov
lea
mov
push
xor
or
xchg
in
fs
jns
push
mov
sbb
xchg
test
daa
inc
lock
test
mov
iret
adc
pushf
ret
xlat
jp
sub
pop
mov
xchg
cwde
or
mov
xchg
pop
inc
sahf
push
dec
into
scas
add
inc
xchg
or
mov
cld
pop
or
cmp
lock
sbb
jmp
and
fs
outs
popa
adc
jge
loope
jno
loope
jp
mov
jne
in
(bad)
cld
leave
mov
dec
cmp
icebp
(bad)
sub
mov
(bad)
arpl
ds
inc
pop
xor
inc
jmp
xchg
mov
add
sbb
dec
mov
add
add
movs
jge
jno
sub
int3
dec
dec
bound
es
dec
push
enter
call
out
in
retf
mov
(bad)
fild
sbb
call
jp
sub
add
adc
imul
imul
sbb
imul
xor
or
or
ret
mov
lahf
inc
pop
jmp
pushf
mov
jns
and
sub
adc
push
es
sub
push
add
mov
ins
out
cs
sub
dec
pop
ja
mov
les
sti
xor
or
xor
daa
das
push
stc
inc
fwait
push
fidivr
push
and
cmc
pusha
mov
lods
into
pop
mov
cmp
push
mov
les
imul
sub
adc
ficomp
pushf
sub
mov
jb
fs
adc
in
push
icebp
dec
dec
in
push
fucomp
dec
ss
fucomp
inc
sbb
inc
frstor
sub
push
pop
in
mov
or
sahf
add
test
inc
and
xchg
jns
xchg
outs
mov
xchg
rcl
ficom
cmp
add
push
fst
mov
loope
jmp
pop
inc
cs
(bad)
or
cmc
mov
jo
pop
xchg
(bad)
sbb
add
sbb
push
sub
aam
pop
sub
setle
mov
pop
aaa
push
sub
daa
sbb
cs
or
inc
aas
jle
mov
aam
sbb
aam
xor
push
push
es
sbb
sbb
dec
pop
test
adc
lds
test
test
loope
mov
pop
jle
popa
mov
sub
sbb
ss
xchg
or
xor
xchg
mov
(bad)
es
fdivr
adc
mov
stc
test
pop
mov
push
push
sbb
shr
retf
adc
in
add
sub
jl
push
fistp
test
or
and
fnstcw
shl
neg
daa
scas
add
xchg
icebp
nop
pop
pop
dec
repz
mov
xchg
and
add
mov
cld
dec
mov
pop
pop
adc
inc
cli
movs
lds
je
es
lahf
sub
xor
lds
mov
sub
mov
sbb
ss
push
or
and
cld
call
lods
cmp
adc
loop
in
pop
cmp
cmc
test
jle
jp
fnsave
mov
aad
gs
pop
mov
dec
fst
pop
or
adc
popf
test
adc
cmp
cmc
cmp
in
adc
cmp
fsub
xor
mov
sub
test
push
sbb
add
fisub
cmps
inc
xchg
sbb
inc
jbe
test
out
mov
sub
sub
xor
jbe
call
xchg
or
or
xor
mov
add
fcom
inc
mov
adc
movs
loop
cmp
cmp
addr16
pop
xor
mov
mov
mov
(bad)
xor
loop
add
add
ror
movs
test
ret
xlat
rcl
mov
(bad)
inc
lods
(bad)
in
fadd
cmps
cmp
dec
push
dec
pop
push
xor
sub
mov
fild
leave
in
ror
mov
clc
bound
mov
or
pop
jne
adc
and
(bad)
mov
repz
add
adc
(bad)
xor
xchg
lar
mov
mov
xor
jp
sub
(bad)
icebp
jle
xor
mov
sub
call
test
std
ss
sbb
setbe
aaa
out
adc
xchg
fimul
sbb
sub
cmp
dec
or
xor
or
cmp
push
mov
adc
fdivr
ret
push
fsub
jp
or
push
pop
dec
aas
pop
xchg
daa
loope
bound
outs
mov
in
push
jae
in
mov
and
ret
mov
push
cmps
shl
xor
mov
aam
cmp
mov
xor
ror
pop
and
inc
push
pop
rcr
jne
mov
dec
aam
dec
xchg
lahf
lods
mov
mov
fild
cmp
out
andnps
jb
in
gs
jmp
scas
std
sub
sbb
push
es
pop
mov
inc
pushf
xor
ja
inc
das
and
js
lods
in
push
scas
in
xor
xchg
push
xchg
jecxz
popf
push
ss
push
test
fcmovne
ret
cmc
fcom
movs
add
inc
shl
inc
xchg
and
dec
cmp
mov
(bad)
in
or
sbb
es
inc
addr16
push
cmps
mov
icebp
mov
jp
aaa
adc
mov
xchg
je
mov
test
std
daa
xchg
inc
or
mov
push
pop
movs
int
jg
fwait
inc
push
mov
cmp
mov
popf
js
loop
cwde
aas
inc
in
cwde
lea
pop
or
outs
es
(bad)
adc
fdivr
jl
add
xchg
add
dec
mov
daa
retf
mov
mov
mov
inc
add
arpl
and
sub
jbe
bound
cmp
jbe
mov
out
inc
sbb
sbb
ret
arpl
inc
dec
jle
mov
test
mov
iret
cli
mov
or
sub
dec
and
cmps
stc
sub
xor
jbe
or
adc
cmp
mov
and
sbb
inc
sbb
adc
(bad)
dec
mov
popf
push
cmp
out
les
or
and
add
jle
out
pop
or
inc
out
add
mov
adc
sbb
fdivr
mov
pop
add
sbb
cmp
js
popf
dec
and
or
add
push
add
or
outs
jg
lock
mov
ja
not
mov
sqrtps
movs
sbb
sbb
test
rol
gs
ja
mov
adc
sbb
inc
ror
jns
popa
inc
jo
ds
lods
or
sbb
es
xor
out
sbb
fcmovb
icebp
jne
fwait
in
push
and
push
mov
push
xor
xchg
arpl
mov
push
fs
xchg
dec
jb
cmp
add
push
rcl
adc
bound
cmp
add
dec
bound
adc
mov
gs
cwde
pop
xor
sub
movs
popa
and
movs
fimul
jns
cdq
lds
call
fist
sar
(bad)
cmp
fnsave
mov
outs
adc
inc
pop
push
fs
imul
arpl
add
adc
push
cmp
pop
dec
and
push
pushf
fs
mov
leave
jae
out
adc
sub
add
ret
xchg
add
jae
jmp
add
mov
mul
addr16
or
stc
outs
sub
adc
push
dec
jecxz
int3
xchg
xchg
das
adc
cmpxchg8b
(bad)
leave
lea
inc
pushf
and
xchg
mov
xor
push
xor
popf
aam
push
mov
shl
stc
outs
mov
test
dec
add
cs
xor
jg
xchg
or
sbb
sbb
scas
sub
xor
dec
push
sbb
test
rcl
sbb
mov
es
imul
add
and
push
and
jmp
push
cmp
xchg
mov
add
jecxz
leave
out
or
jno
test
jecxz
and
push
dec
dec
popa
ret
dec
loope
dec
clc
fld
or
push
adc
add
in
adc
sbb
mov
imul
adc
and
movs
jne
in
or
nop
sahf
int3
std
push
push
pop
pop
cmps
shl
stos
mov
adc
cmp
inc
push
lods
test
fst
xor
add
xchg
add
adc
jo
mov
test
jb
and
inc
jge
adc
adc
pushf
aam
adc
fsubr
ja
cmp
aam
aas
sub
dec
popf
aam
sub
mov
inc
sub
aam
les
rcl
inc
fist
sbb
popa
push
inc
or
inc
xlat
movs
adc
sub
adc
icebp
sub
add
or
loope
outs
retf
xor
inc
lahf
sub
adc
inc
sbb
test
sbb
adc
repz
mov
adc
cdq
xchg
mov
cmpps
scas
rol
pop
inc
add
repz
sub
outs
sub
adc
and
xor
test
(bad)
pusha
cmps
xor
mov
sub
sbb
mov
mov
pop
cmps
or
mov
popa
aad
ret
mov
fcmovbe
sti
addr16
and
dec
(bad)
(bad)
dec
sub
mov
fmul
or
ror
pop
adc
pop
sbb
stos
adc
repnz
shr
mov
push
jle
adc
xchg
or
add
lds
pop
xchg
inc
mov
push
or
xlat
lods
cmp
adc
cmps
mov
repz
mov
dec
adc
mov
ja
and
sbb
outs
add
ficomp
inc
es
in
gs
mov
sub
mov
mov
cmp
nop
nop
mov
(bad)
das
pop
and
(bad)
imul
rcr
add
ins
sub
xchg
ret
inc
and
add
inc
popa
add
pop
xchg
and
sub
loopne
data16
rol
jo
add
and
rcl
loopne
inc
or
movs
cli
test
clc
rcr
xchg
pusha
pop
fs
(bad)
inc
sub
xchg
sbb
sub
xor
inc
xor
cmp
add
in
add
cmp
and
inc
aas
call
fadd
sahf
cmps
sub
adc
jecxz
push
data16
or
repz
xlat
push
ret
mov
xchg
test
inc
jnp
stc
mov
test
in
inc
cmps
and
sbb
repnz
push
(bad)
fs
inc
sub
push
jne
loop
push
jmp
jne
mov
dec
imul
xor
cwde
std
in
test
pushf
dec
scas
imul
push
adc
in
push
mov
or
sbb
adc
pop
bound
mov
adc
push
sub
xor
adc
ins
add
dec
sub
mov
fwait
dec
pushf
xor
inc
rcl
sub
jo
repnz
xor
jnp
pop
inc
(bad)
sar
cmp
add
cmp
lock
sbb
xchg
fmul
int3
inc
sbb
sub
mov
dec
pushf
in
push
push
addr16
or
inc
push
xchg
jge
inc
ret
sbb
xchg
dec
stos
inc
inc
cmps
les
fcomp
add
das
xor
scas
fsubr
aad
sbb
xchg
out
cmp
push
add
push
sbb
pushf
bndldx
aaa
and
mov
test
fadd
pop
lds
(bad)
jg
push
or
push
inc
adc
aam
and
sbb
jecxz
push
sbb
push
sub
sbb
push
dec
adc
inc
mov
cdq
mov
mov
and
xchg
adc
xlat
cmp
mov
adc
or
sub
shr
or
push
mov
mov
and
clc
ins
jne
mov
or
push
loope
fild
cmp
(bad)
mov
popa
inc
xor
push
pop
adc
cs
adc
repnz
and
cmp
js
test
sbb
push
inc
rep
enter
mov
cmp
xor
jne
xor
clc
sbb
adc
pop
cmp
out
mov
xor
inc
inc
enter
add
pop
test
or
aam
imul
xor
ret
pop
aam
aas
dec
mov
jecxz
dec
test
loop
cmp
cmp
jbe
xlat
push
push
cmp
or
fimul
pop
mov
(bad)
mov
loop
icebp
mov
inc
or
dec
adc
xchg
push
adc
push
daa
sbb
adc
or
add
in
xor
lds
sub
test
push
fwait
add
xchg
xchg
ret
data16
adc
sbb
sbb
inc
aas
add
add
dec
adc
inc
imul
cli
add
call
fild
jecxz
pop
fwait
push
mov
ret
sbb
lods
scas
adc
or
adc
jmp
imul
adc
cmp
sbb
(bad)
xor
mov
inc
inc
pop
add
add
stos
mov
xchg
test
nop
mov
cmp
fistp
jp
loope
pop
ds
jmp
cmp
ja
mov
stc
cmc
sbb
pop
and
ret
and
jne
push
cmp
fsub
or
jg
or
or
adc
adc
(bad)
sub
cmp
cmc
dec
pop
cmc
(bad)
stc
test
std
call
adc
dec
(bad)
push
dec
mov
xchg
lds
fstp
pop
loope
movs
mov
or
cld
stc
adc
add
ret
cmp
sub
seto
icebp
cmp
loope
sub
test
mov
xor
inc
xor
cdq
popa
popa
jbe
retf
push
dec
mov
fstp
inc
and
sub
sub
in
xchg
adc
jecxz
nop
adc
out
add
inc
jns
cwde
or
inc
pop
mov
mov
hlt
scas
(bad)
pop
add
sbb
jle
in
mov
(bad)
test
push
dec
cmp
add
enter
add
adc
(bad)
lods
or
sbb
dec
das
mov
push
hlt
xchg
xchg
(bad)
sub
sti
and
or
test
dec
aaa
xchg
add
or
push
retf
dec
inc
and
sbb
fimul
mov
leave
popa
dec
push
and
cmp
inc
push
fstp
cmp
sbb
adc
mov
mov
or
mov
pop
add
dec
mov
lods
jno
inc
leave
push
sub
push
aas
enter
fwait
ja
sti
dec
add
xor
test
aas
xchg
sub
and
inc
movs
sub
movs
popa
(bad)
ja
sub
mov
add
jge
sub
xor
ret
cmp
mov
iret
push
icebp
cmp
test
mov
sub
inc
jecxz
jecxz
mov
or
jp
mov
push
add
sbb
or
xor
dec
dec
mov
dec
and
dec
test
add
mov
add
push
inc
inc
mov
iret
push
pop
std
or
neg
nop
pop
inc
adc
icebp
push
(bad)
movups
mov
test
push
(bad)
js
cmp
sti
push
call
pusha
add
xor
loope
and
mov
popf
ins
add
std
mov
or
mov
push
add
or
push
loopne
mov
push
dec
lea
(bad)
pop
mov
push
in
imul
adc
push
inc
xchg
adc
adc
adc
or
pusha
xor
push
imul
and
int
in
mov
mov
sub
adc
inc
es
les
dec
movs
out
push
(bad)
sbb
into
vcvtss2si
les
pop
sbb
add
mov
pop
and
sub
stc
(bad)
add
mov
(bad)
fisttp
and
add
xor
dec
inc
inc
pop
loope
or
push
xchg
and
mov
popf
add
dec
lea
inc
ret
sbb
repnz
adc
push
outs
addr16
aam
in
in
push
test
ror
(bad)
fstp
or
stos
mov
data16
adc
cmc
mov
dec
push
pushf
shl
lods
movs
and
jbe
int
leave
adc
addr16
add
inc
xchg
adc
and
leave
popf
mov
jns
push
test
mov
icebp
clc
push
adc
lods
dec
xchg
inc
cdq
std
push
imul
les
mov
imul
cmc
aas
fmulp
adc
adc
sub
jbe
imul
int
(bad)
mov
jns
jb
cmp
rcl
and
inc
pop
int3
mov
movs
movs
bound
mov
push
adc
and
outs
mov
dec
fmul
sar
test
mov
mov
xor
mov
push
sbb
test
mov
popf
(bad)
inc
(bad)
dec
mov
jmp
cmc
jne
pop
xor
fiadd
cmp
xchg
mov
data16
add
fcmovnb
pop
jae
in
xor
inc
fbld
test
dec
push
dec
adc
call
mov
popa
pusha
cmp
in
sub
push
xchg
dec
loopne
das
or
xor
loope
movs
xchg
mov
xor
and
inc
dec
dec
pop
inc
dec
jo
jne
push
hlt
or
pop
xor
cmp
fcom
add
xor
dec
cdq
sahf
(bad)
out
das
xor
xor
and
jae
jno
lock
rol
lea
js
leave
adc
cli
ror
mov
mov
add
push
adc
or
daa
arpl
mov
add
push
sbb
popf
and
inc
bound
std
(bad)
mov
cmp
arpl
test
popf
mov
sub
mov
inc
and
dec
add
inc
cmps
push
add
cs
sbb
push
mov
sub
cmp
push
pop
sbb
push
dec
pop
test
loop
jns
leave
or
mov
sbb
movs
test
pop
call
sub
and
sub
xor
mov
cs
sub
adc
inc
or
add
add
leave
mov
add
lods
mov
add
jl
popa
push
add
cld
and
retf
push
add
enter
inc
outs
bound
inc
jbe
jo
call
ret
out
push
ins
xor
pop
push
push
inc
dec
pop
inc
jbe
and
sti
pushf
fcom
pop
dec
mov
dec
push
push
jns
mov
jbe
inc
jmp
cmps
rcr
push
cmp
mov
push
xchg
pop
adc
outs
call
ja
lock
mov
adc
adc
push
and
dec
(bad)
les
xchg
fcmovb
shr
inc
push
and
xor
adc
cmp
cmp
adc
repnz
jp
daa
jnp
cmp
rcr
call
es
and
loope
leave
ret
shr
xor
pop
add
xchg
call
ficomp
pop
(bad)
and
push
test
push
mov
dec
pop
mov
arpl
sbb
sub
lods
mov
or
ret
bound
inc
call
or
xchg
sub
sbb
aaa
sbb
dec
or
xor
js
lods
mov
pop
sbb
push
std
push
mov
dec
or
ror
fsub
frstor
adc
scas
mov
pop
xrelease
pop
mov
push
and
push
(bad)
dec
leave
mov
fdiv
mov
push
hlt
scas
loope
aad
test
inc
and
repz
stc
loop
or
xor
pop
dec
test
add
call
cmc
cmp
jp
cmp
ret
sbb
cmp
push
cmp
add
xor
xor
push
cwde
add
jle
aaa
in
push
and
adc
pop
movs
mov
lods
mov
push
mov
sbb
movs
inc
imul
add
arpl
mov
and
or
loope
(bad)
retf
outs
xchg
xchg
lods
and
add
xchg
dec
add
add
xchg
stc
cmp
jbe
mov
and
mov
dec
push
mov
cwde
retf
mov
or
sbb
loopne
jno
xor
mov
adc
jmp
add
loop
or
jno
leave
mov
fldenv
adc
adc
mov
movs
cmc
and
test
xor
dec
rcl
cdq
push
popa
rol
dec
and
xor
pop
rcl
sub
shr
mov
bound
or
and
jmp
push
cwde
lahf
cmp
add
stos
add
cmp
xchg
cli
and
add
and
jmp
xor
push
dec
push
aaa
shr
bnd
cmp
in
add
in
push
not
cmp
add
push
or
sti
in
mov
cmps
xchg
es
aaa
(bad)
or
and
mov
sub
cli
jmp
xor
xchg
add
inc
jns
push
dec
dec
and
cmp
jg
sbb
(bad)
or
sbb
test
jo
std
mov
cmp
mov
sub
cmc
or
inc
and
sbb
icebp
mov
in
sub
(bad)
stc
in
fnstcw
mov
clc
cdq
pop
fsub
into
pop
ja
arpl
in
enter
mov
data16
sub
inc
addr16
xchg
addr16
mov
pop
mov
aaa
movlps
mov
xchg
dec
daa
call
gs
dec
xor
stc
cmc
in
dec
adc
xor
pop
sbb
sub
push
sbb
test
xlat
mov
and
cs
cmp
shr
jno
fs
push
pop
imul
shl
je
sub
jns
jmp
mov
cmp
sbb
sbb
jno
(bad)
pusha
sub
add
pop
movs
mov
sub
cmp
mov
adc
mov
mov
daa
xchg
js
clc
outs
bound
push
pop
imul
jno
push
outs
bound
imul
mov
je
and
mov
inc
call
out
or
mov
sub
out
xchg
pop
or
inc
pop
lea
xchg
xchg
imul
mov
shr
mov
gs
or
int
jecxz
inc
dec
adc
inc
in
xchg
or
or
add
(bad)
rcr
pop
repnz
and
imul
test
mov
mov
pop
daa
gs
test
lock
cmp
pop
inc
test
push
js
mov
jbe
outs
sahf
dec
xchg
push
ins
inc
pop
xchg
sub
movs
jo
push
mov
cdq
loope
lea
out
and
daa
repz
jl
and
or
sbb
cmp
out
int
adc
sub
out
shr
dec
sub
dec
rol
dec
pop
mov
pop
cmp
jne
cmp
idiv
fstp
ret
xchg
mov
add
int3
in
es
std
adc
inc
dec
push
dec
pop
xchg
mov
jmp
cmp
or
daa
int3
bound
pop
aad
pop
dec
icebp
inc
enter
adc
movs
add
into
push
ins
mov
leave
je
out
or
shl
inc
or
push
dec
xchg
pop
int
jbe
jo
xchg
rol
push
push
cmp
aas
and
les
pop
rcl
mov
xor
xor
sar
mov
fld
jmp
sbb
pop
dec
enter
and
sub
adc
jp
xchg
pop
jne
(bad)
inc
sub
or
and
mov
daa
sub
sar
dec
and
adc
les
dec
xor
mov
cmp
mov
in
lods
add
sbb
jmp
sub
push
es
jne
fwait
push
push
jne
bound
adc
pop
sbb
mov
cmp
xorps
sbb
mov
cli
push
icebp
dec
bound
cmps
lea
or
mov
or
xchg
sbb
and
or
or
pop
int
xor
fldlg2
or
pop
xchg
cwde
int3
outs
push
xchg
inc
and
or
pop
mov
imul
add
(bad)
std
jbe
popa
idiv
pop
pusha
cmc
cmc
sub
mov
add
inc
popf
pushf
push
loope
push
int
enter
jae
jne
in
das
add
fidiv
pop
gs
test
xor
in
lahf
sbb
and
jp
mov
mov
xchg
xor
push
std
sub
cmp
and
and
pop
leave
xchg
sbb
sbb
retf
bound
push
mov
push
call
imul
gs
pop
mov
pop
enter
loop
lock
aad
add
jl
add
pop
dec
or
stc
fxch
or
loop
push
aas
mov
mov
hlt
mov
adc
add
loop
or
and
sbb
outs
in
mov
pop
jmp
push
push
push
stc
xchg
ja
ins
fcom
aas
pusha
add
scas
icebp
dec
shl
enter
mov
lds
loope
or
inc
sahf
clc
call
add
inc
mov
add
jne
mov
xor
cmp
xor
pop
sub
in
inc
push
pop
cs
mov
push
push
adc
sbb
(bad)
mov
jmp
and
add
xchg
sbb
(bad)
jno
add
and
fdivr
cdq
push
repz
jmp
sbb
or
or
pop
das
cwde
int3
not
test
jbe
sti
sub
jns
add
mov
jne
popf
lock
out
push
add
fcomp
adc
xchg
mov
ins
imul
das
loop
out
adc
sub
inc
cdq
pusha
out
cmp
bound
cmc
jno
stc
push
mov
mov
popa
xchg
dec
imul
arpl
adc
and
mov
pop
sub
outs
ja
mov
or
sbb
sbb
sbb
sahf
or
dec
xchg
add
sbb
sbb
xor
mov
pop
(bad)
push
inc
rcl
add
xchg
cmp
or
add
and
inc
lds
or
adc
leave
xchg
dec
retf
sbb
xor
add
xchg
sub
sub
xor
xchg
sub
xor
cmp
inc
inc
mov
dec
add
scas
add
sbb
add
push
or
mov
enter
xlat
aas
ret
stos
mov
and
or
loope
dec
dec
jmp
sub
jl
adc
push
(bad)
and
dec
loope
test
stc
inc
dec
add
xor
or
xchg
test
sub
adc
shl
enter
jge
jp
(bad)
sub
dec
add
std
movs
add
adc
mov
into
adc
inc
xchg
cmc
dec
aad
adc
adc
std
push
and
adc
or
ja
xlat
std
inc
es
cmc
push
sbb
addr16
in
or
mov
outs
imul
mov
cmp
(bad)
clc
push
or
pop
inc
dec
pop
pop
rol
mov
std
loop
cmps
mov
jb
add
add
adc
adc
add
dec
lahf
mov
push
mov
add
movs
xchg
add
aam
inc
dec
int
xor
loope
scas
lea
or
dec
sub
jle
pop
inc
ja
shr
sub
jns
std
inc
add
fucomi
push
mov
in
and
or
or
leave
pop
adc
inc
adc
add
daa
mov
clc
dec
les
mov
scas
sar
mov
adc
mov
stos
xchg
shl
sub
inc
lock
cmp
lods
sub
lock
inc
mov
mov
mov
mov
push
jbe
mov
push
jl
sbb
jl
add
test
call
sbb
cmp
or
jne
out
xor
lahf
addr16
cmp
jge
out
imul
movs
pop
inc
or
xchg
and
xchg
push
ds
or
jmp
mov
clc
in
or
jnp
mov
add
mov
mov
xor
add
jne
movs
(bad)
jo
dec
outs
lock
and
sbb
test
adc
loopne
pop
pop
push
add
in
cmp
imul
add
adc
sub
sub
mov
adc
push
push
or
xor
push
push
xor
shl
add
xor
jle
adc
fs
mov
cmp
js
and
sbb
loop
jo
add
pop
sbb
mov
ss
add
es
pop
inc
mov
or
inc
push
fld
loope
add
add
adc
sbb
push
mov
rcr
std
xor
jo
push
sub
cmp
inc
pushf
call
and
add
cmp
inc
imul
push
sbb
mov
pop
xor
lea
sbb
in
or
icebp
xor
xchg
cs
inc
arpl
adc
push
cs
jge
nop
inc
jg
jno
and
psubd
push
jno
in
aaa
xor
daa
inc
dec
(bad)
lds
dec
fdiv
icebp
sbb
jge
inc
sbb
jne
or
xchg
and
adc
xor
adc
rol
and
jle
cmp
push
dec
pxor
pop
push
xor
icebp
xor
pop
add
jbe
push
test
sub
aaa
jne
imul
xor
add
ins
dec
or
or
add
add
push
mov
inc
jmp
jecxz
jbe
or
ret
fiadd
aas
dec
jae
imul
add
arpl
mov
fidiv
inc
dec
push
push
gs
lods
loope
inc
pop
mov
icebp
gs
xchg
push
or
sbb
leave
sbb
jge
xchg
mov
(bad)
sub
scas
or
xchg
jbe
xchg
jo
cmp
add
mov
scas
and
jb
(bad)
lock
jmp
fwait
test
mov
inc
in
inc
mov
mov
push
sbb
or
js
push
inc
test
in
scas
rcl
and
imul
add
ins
ins
jbe
cmc
add
dec
pop
outs
dec
fld
aas
pop
add
movs
mov
sub
das
cmps
mov
jno
push
push
icebp
or
push
js
cmp
sub
add
adc
out
enter
add
stos
adc
adc
sub
fwait
xchg
imul
cdq
jno
jne
shl
ficom
pop
jg
xor
stc
cmps
jp
loope
push
push
inc
push
dec
repz
test
in
test
pop
inc
stc
outs
jae
sar
pop
test
jge
inc
ins
jo
xchg
lds
inc
cmp
cli
mov
adc
test
lock
and
sbb
inc
dec
and
popf
cli
inc
xor
outs
jne
push
imul
or
inc
bound
push
xchg
out
push
or
adc
push
gs
fnstcw
mov
or
addr16
pop
add
add
aam
jecxz
rcl
ins
xor
or
adc
pop
addr16
mov
jne
fs
cmp
outs
popw
ins
adc
imul
pop
jl
adc
add
out
sub
sbb
icebp
aaa
into
mov
mov
xchg
ja
pop
std
pop
adc
je
push
or
adc
add
push
push
dec
outs
je
inc
jae
rol
push
push
scas
adc
push
outs
inc
mov
ins
addps
shr
jno
jne
sbb
ins
adc
dec
mov
xchg
dec
cmc
int
mov
outs
dec
ins
sbb
adc
ret
sbb
or
aaa
pop
inc
mov
loope
mov
mov
pop
and
push
jns
mov
inc
jae
mov
dec
mov
xchg
in
mov
dec
outs
push
mov
or
push
cli
clc
sbb
sub
xor
push
push
sbb
rol
pop
je
and
jmp
and
and
sbb
stc
fimul
inc
in
mov
xchg
iret
mov
xor
mov
jno
adc
or
push
cmp
sub
outs
int3
cli
pop
xchg
jns
addr16
and
and
gs
outs
vpshaq
pop
cmp
daa
das
inc
sub
stos
jmp
repz
pushf
inc
cmp
or
je
mov
sbb
or
or
aad
push
in
push
mov
popf
mov
jl
les
add
sahf
inc
adc
icebp
pop
sbb
pushf
fsub
imul
cmp
inc
add
aaa
repnz
dec
data16
test
dec
arpl
out
cdq
out
pop
rcl
shl
mov
aas
add
mov
pushw
push
push
dec
test
pop
add
imul
and
popa
clc
adc
rcl
mov
(bad)
outs
retf
sbb
mov
adc
add
sar
retf
add
adc
sti
xor
xor
pusha
cs
add
xor
imul
sbb
xchg
sbb
inc
sbb
out
cmp
sbb
out
adc
add
cmp
retf
add
add
xchg
sbb
dec
ss
mov
popa
pop
dec
leave
add
sub
inc
in
scas
cmp
pushf
mul
fld
or
retf
mov
sbb
(bad)
movs
push
jb
mov
int
ins
(bad)
inc
xchg
or
and
pop
inc
pop
sub
fistp
int
or
cmp
add
pop
cdq
movs
push
sbb
push
xchg
sbb
mov
and
ins
add
pop
rol
dec
int3
xlat
lahf
mov
ret
inc
or
inc
pop
jns
std
mov
pop
inc
lds
and
adc
(bad)
sub
das
shr
add
popf
das
or
test
(bad)
lahf
pop
or
aas
sbb
dec
ficom
out
or
pop
rol
fwait
imul
loope
cmp
mov
push
adc
popa
sar
or
pop
inc
add
jae
inc
fstp
or
and
xor
add
aas
or
or
and
pop
or
out
xchg
gs
outs
imul
ret
pop
inc
mov
dec
aas
and
jg
lea
aam
pop
sysenter
cmps
jb
push
jp
leave
les
movs
rcl
int
mov
or
cli
(bad)
out
rcl
pop
aam
gs
stc
mov
push
outs
add
pop
(bad)
cwde
icebp
psrlw
cwde
xor
fild
fmul
and
mov
fisttp
aad
lahf
loopne
mov
push
xchg
or
dec
or
pop
adc
or
sub
(bad)
jne
inc
pop
punpckhwd
lds
or
daa
outs
mov
nop
add
xor
in
out
mov
in
pop
icebp
push
pushf
clc
in
icebp
cmp
or
and
js
push
pushf
lock
inc
clc
add
mov
data16
int
adc
push
jno
inc
vmwrite
add
jae
or
sbb
test
add
jne
leave
nop
sbb
aaa
pop
or
mov
clc
and
add
xor
inc
inc
push
pop
test
add
cmpxchg
nop
lds
inc
or
in
or
popa
pcmpgtw
nop
shl
sub
pop
mov
dec
jo
inc
or
jge
inc
cmps
xchg
push
cdq
popa
add
or
pop
pop
pop
push
adc
push
or
in
loopne
les
mov
bound
jmp
pusha
push
dec
mov
mov
xor
addr16
xor
inc
dec
jbe
adc
or
mov
dec
xor
xchg
add
pushf
pusha
bound
adc
pop
xchg
or
add
mov
sub
add
sbb
lea
jge
inc
xor
sub
aaa
or
jne
sbb
xchg
mov
in
jbe
nop
dec
mov
mov
jle
jno
out
in
cmp
ror
inc
cmp
and
sub
popa
mov
jne
aad
ror
mov
cmps
ret
push
dec
push
leave
push
sbb
xor
add
and
cmps
test
pop
cdq
sub
sbb
fadd
sbb
add
lock
mov
xchg
test
or
adc
aaa
clc
ret
cmp
adc
add
xlat
ret
ret
stc
jbe
mov
aaa
pop
retf
sbb
xchg
jno
pop
in
add
mov
push
or
dec
and
cmps
xchg
je
ffreep
ins
or
clc
pop
add
adc
les
(bad)
and
add
adc
and
xchg
test
and
xchg
cmp
jne
add
in
add
fst
sbb
xor
and
inc
pop
adc
add
hlt
push
fcomp
icebp
adc
fisttp
pop
loope
xchg
aad
push
push
leave
mov
icebp
stc
cmps
ss
aam
leave
sub
aas
push
es
or
jb
clc
adc
lods
out
popa
in
push
mov
sbb
jo
cmps
adc
mov
adc
or
out
or
xchg
ret
cs
xor
cld
shl
fs
mov
shl
dec
add
pop
jne
push
outs
and
jg
rep
push
popw
mov
ja
add
jbe
jno
dec
push
bound
cli
adc
popa
cmp
push
ja
jae
add
clts
test
mov
jo
aas
dec
push
data16
ins
ins
jo
nop
or
dec
or
fs
adc
imul
shr
push
mov
jns
pusha
mov
adc
or
dec
push
int3
shl
cwde
movs
inc
bound
mov
xor
dec
outs
bound
inc
or
nop
dec
outs
jbe
aaa
inc
popa
push
sub
xchg
bound
dec
js
add
fs
popa
push
or
sub
sbb
jecxz
adc
cmc
mov
pop
cs
pop
push
mov
xor
mov
sub
int3
jg
sbb
outs
inc
jle
daa
retf
lea
popa
mov
jbe
nop
outs
push
lods
xchg
enter
add
or
pusha
xor
inc
ins
jmp
dec
push
or
arpl
pop
sbb
jecxz
out
or
inc
ins
lock
add
xchg
xchg
xchg
jg
popa
in
shr
mov
ja
pop
mov
push
cld
jge
test
call
fst
push
jae
jbe
and
(bad)
ror
xchg
ficomp
out
imul
fmul
fbstp
cmp
inc
dec
push
dec
pusha
inc
dec
inc
push
push
inc
push
inc
inc
inc
inc
push
dec
push
push
push
pop
cmovle
dec
adc
sub
fs
dec
inc
inc
pop
adc
test
dec
push
shl
inc
fcmovnu
dec
in
ret
dec
push
and
ja
sbb
dec
inc
xor
xor
jg
sbb
dec
dec
ss
dec
push
inc
inc
dec
add
mov
push
push
dec
dec
push
dec
lock
jl
dec
mov
das
push
inc
mov
pop
jl
inc
xor
dec
push
std
xchg
xchg
add
dec
inc
dec
xlat
push
dec
inc
xchg
push
rcl
and
and
push
push
inc
mov
inc
dec
fadd
pause
adc
mov
mov
das
add
mov
cmp
fdiv
stos
jmp
inc
inc
jno
add
push
sbb
into
push
inc
and
add
sub
cld
inc
sbb
popf
xor
mov
rol
inc
or
cmp
rcr
mov
cmp
and
icebp
outs
sbb
dec
sbb
adc
leave
dec
sub
mov
or
cmp
add
popa
mov
sub
loopne
out
icebp
div
or
rol
lods
test
inc
sbb
shl
mov
add
push
sub
das
ins
mov
clc
and
daa
lea
and
add
dec
and
or
mov
enter
lods
mov
push
mov
sub
retf
out
xchg
sub
jmp
xor
dec
dec
std
sbb
add
mov
popa
mov
pop
sbb
or
jl
adc
into
fs
push
ficomp
xchg
clc
dec
push
sahf
cmp
ret
pop
inc
sub
std
jb
and
ficom
sti
mov
and
xor
cmp
lea
push
test
sahf
int3
je
in
cwde
add
leave
jno
cmp
cmp
rcl
or
pop
xchg
inc
sub
mov
bound
fnstenv
retf
adc
inc
adc
mov
call
cli
jmp
or
jl
js
or
leave
int
test
and
rcl
xchg
stos
xor
in
in
stc
inc
aad
add
out
inc
(bad)
mov
adc
mov
ret
stc
jno
sub
jb
or
jbe
nop
(bad)
dec
cmc
mov
push
push
fst
xchg
mov
sbb
xor
and
inc
fild
or
fiadd
dec
call
pop
pop
or
pop
inc
fadd
sbb
hlt
xor
add
add
or
gs
or
and
push
sbb
jbe
out
popa
dec
sbb
jno
pop
inc
mov
enter
outs
loopne
sub
mov
(bad)
mov
cmp
and
push
jmp
adc
inc
or
outs
lods
pusha
imul
sbb
xchg
test
div
mov
leave
adc
mov
sbb
xchg
sub
aam
(bad)
cmp
sub
dec
movs
fcomp
clc
f2xm1
jecxz
push
pop
mov
inc
push
xor
clc
fist
add
push
sbb
enter
add
ds
push
and
push
push
mov
xor
outs
inc
sbb
fcomp
xor
xchg
aad
dec
or
nop
push
xor
jp
push
add
mov
add
inc
sbb
test
add
add
mov
mov
in
jmp
or
xchg
popf
ret
mov
add
add
es
mov
or
xchg
in
mov
add
push
mov
jns
sar
and
movs
jbe
adc
mov
sbb
push
add
jmp
lea
dec
in
test
movs
jmp
inc
or
push
cdq
pusha
cmp
into
add
call
xor
and
mov
add
and
add
sub
or
fucomi
nop
dec
xor
xor
mov
jp
cmp
je
dec
rcl
movs
jne
sbb
outs
sub
cwde
xchg
adc
mov
pop
leave
sub
loop
add
in
popa
pop
sbb
xchg
lds
adc
(bad)
enter
pop
or
mov
or
icebp
push
xchg
sub
pop
mov
test
jl
push
add
pop
mov
pop
(bad)
xor
out
push
mov
push
jg
inc
addr16
and
icebp
in
sbb
dec
cmp
jne
and
add
fwait
mov
mov
add
cmc
rcr
dec
cmps
in
inc
dec
nop
push
mov
pop
xor
and
mov
mov
jp
(bad)
xchg
call
dec
sbb
lds
dec
rcr
enter
fcom
cmp
inc
cmp
lahf
leave
adc
mov
in
je
xchg
adc
and
mov
test
add
or
push
dec
pushf
or
dec
shr
or
in
adc
test
xchg
add
and
or
loop
xor
popa
cld
add
jle
cmp
and
pop
or
pop
add
or
or
or
js
push
push
or
prefetcht1
outs
mov
push
pop
push
mov
xrstor
or
or
dec
leave
adc
xchg
sbb
dec
xchg
addr16
xor
cmp
mov
enter
aam
fnstsw
rcr
mov
xchg
and
aaa
push
pop
and
or
add
jns
(bad)
lea
and
bound
and
sbb
stos
pop
bound
out
lds
or
jl
xchg
pop
pop
outs
pop
jge
jo
mov
int
repnz
push
sbb
sbb
int3
movs
clc
mov
mov
add
push
or
adc
daa
scas
icebp
xchg
ins
ss
sbb
xchg
or
lahf
test
xor
aam
xor
push
inc
leave
push
jecxz
rcl
fsubr
stos
add
cmps
mov
add
xchg
inc
jno
arpl
pop
mov
xor
fs
pop
mov
sub
or
cli
in
in
cmp
push
sbb
enter
les
(bad)
repnz
jmp
daa
inc
inc
cmp
leave
or
push
test
jns
mov
pop
add
bound
jno
or
dec
add
arpl
add
clc
leave
shl
cmp
mov
lahf
ret
xchg
jns
loope
pop
mov
sbb
adc
xchg
in
lods
pushf
pop
in
popf
or
push
and
and
gs
sub
pop
dec
mov
(bad)
fld
scas
ins
mov
push
jb
or
test
xchg
inc
pop
xor
add
push
mov
sar
and
push
or
shl
mov
sbb
lds
xchg
mov
mov
and
mov
or
scas
or
inc
mov
daa
aam
mov
push
shl
xor
xor
stc
add
add
and
add
ins
jge
mov
stc
mov
add
inc
mov
mov
clc
aam
sbb
add
jns
les
sbb
rcl
call
mov
push
xchg
clc
add
add
fnstsw
lahf
sub
pop
or
sub
sbb
xor
stc
push
adc
bound
pop
fs
fwait
adc
cmps
push
rcr
mov
add
cmp
xor
xchg
push
push
and
xor
push
in
dec
adc
dec
add
mov
mov
mov
or
cld
add
add
cld
mov
test
outs
xor
mov
leave
add
mov
stos
and
mov
push
or
fldl2t
adc
inc
aas
fidiv
sub
sahf
adc
dec
outs
xor
inc
xchg
and
inc
fnstenv
add
push
add
gs
push
xchg
adc
mov
mov
cli
pop
dec
push
cmp
push
shl
test
add
add
add
pop
add
mov
push
ficom
mov
dec
repz
in
out
ret
movs
push
jno
cwde
cdq
push
sub
and
add
sahf
ss
sbb
or
in
es
in
cmp
int3
pop
adc
inc
cmps
arpl
test
mov
js
out
(bad)
push
icebp
in
fwait
call
sub
sar
ficomp
cs
push
out
dec
pop
mov
inc
or
or
iret
adc
dec
pop
xchg
jae
push
fdivr
adc
out
inc
and
retf
fist
or
dec
pop
or
mov
imul
movs
or
and
xchg
sub
sub
or
stc
add
aas
fst
add
add
jb
inc
sub
add
xchg
loop
mov
jbe
mov
std
mov
lock
sbb
mov
ret
and
mov
stos
fwait
cmps
push
mov
or
xchg
push
dec
repz
and
leave
les
and
or
test
cmp
mov
mov
rcl
icebp
daa
xlat
out
fisubr
dec
push
daa
int
neg
and
xor
cld
xchg
add
icebp
dec
in
daa
jp
enter
sbb
les
add
sbb
icebp
fistp
out
sub
add
inc
xor
cmp
imul
dec
frstor
inc
cld
imul
enter
mov
out
jl
mov
or
(bad)
xchg
mov
push
pop
jmp
dec
push
adc
in
mov
adc
jbe
sub
or
mov
mov
add
cld
loopne
push
push
jnp
add
add
inc
add
add
add
adc
test
aaa
mov
pop
leave
dec
imul
push
fdivr
aad
xchg
add
adc
mov
pop
adc
adc
pop
add
jbe
jl
mov
jle
adc
pop
push
sbb
cmovno
pop
mov
add
mov
enter
movs
add
push
add
in
push
(bad)
cmps
dec
jns
and
adc
loopne
test
dec
jp
in
sbb
mov
mov
mov
sub
ret
mov
pop
adc
xor
fdivr
cld
push
dec
cld
pop
addr16
add
sti
adc
xor
pop
mov
(bad)
inc
cs
sub
(bad)
mov
xchg
or
jb
iret
add
rcl
(bad)
ficomp
jnp
enter
or
dec
cmp
jge
rol
jbe
inc
sbb
fs
push
dec
adc
loope
mov
test
or
sbb
fmul
pop
push
dec
hlt
sbb
mov
adc
inc
push
pop
test
mov
sbb
stc
js
mov
addr16
add
sub
xor
jmp
das
xor
mov
in
and
add
mov
arpl
div
add
pop
test
or
push
push
ins
xchg
cmp
jnp
mov
shl
or
xchg
in
adc
dec
mov
sub
dec
in
int3
jno
jno
xchg
jge
fsubr
adc
int3
pop
and
mov
outs
clc
push
add
pop
aad
sub
fiadd
loopne
ret
mov
and
test
mov
add
mov
cmp
jle
inc
push
outs
jmp
inc
xor
stos
aaa
lock
jecxz
repnz
imul
cmovae
jb
stc
aad
cmp
int3
stc
adc
jl
das
mov
fadd
push
sbb
xor
sub
ret
inc
push
movs
in
test
add
xor
movs
pop
cmc
push
and
mov
mov
cmp
jp
or
xchg
add
lock
add
and
push
jno
inc
lods
aam
enter
inc
imul
and
pop
int
aas
daa
xchg
dec
das
ins
pop
std
push
push
std
mov
repz
mov
or
test
or
je
mov
dec
and
ins
jmp
xor
or
or
enter
popa
iret
inc
icebp
scas
jmp
add
mov
rol
and
jbe
and
pusha
add
pop
ret
ret
sub
mov
and
(bad)
cmp
and
retf
cmp
jge
movs
jle
add
cmp
or
sbb
lahf
cmp
stc
jg
scas
mov
inc
mov
adc
sub
inc
xchg
and
popa
inc
sar
dec
mov
or
jbe
imul
push
imul
jge
jns
pop
adc
sub
shl
add
aam
inc
mov
mov
sbb
cmps
cwde
sbb
mov
pop
add
sar
adc
cmps
or
add
ret
mov
fld
lds
push
inc
adc
sbb
jle
test
add
mov
paddb
loop
ins
in
sub
loope
daa
push
cmp
adc
mov
dec
xor
add
mov
mov
mov
mov
rol
push
inc
bound
sti
mov
nop
xchg
aad
mov
jecxz
gs
inc
adc
(bad)
into
(bad)
sub
not
jl
aad
add
inc
xchg
inc
jmp
inc
xchg
mov
sbb
test
das
and
push
jg
loop
clc
outs
mov
push
mov
lds
xchg
xchg
xor
xor
xor
jle
mov
add
pop
mov
(bad)
aad
imul
lock
inc
movs
ror
into
adc
xchg
sbb
dec
gs
aad
lahf
cmp
cmp
dec
test
ds
shl
adc
mov
aad
xchg
in
icebp
push
and
jl
in
pop
addr16
test
cmp
jge
(bad)
or
lods
movs
imul
dec
mov
xchg
mov
gs
inc
sbb
jge
aad
stc
or
jae
inc
ja
rcr
sbb
cli
adc
enter
sbb
push
add
inc
movs
pop
mov
cld
sub
aas
jae
in
pop
dec
repz
in
pop
out
and
and
sbb
cmp
addr16
addr16
ins
and
fld
xor
inc
aad
ret
sbb
and
push
or
cvtpi2ps
inc
or
adc
sbb
aam
and
lock
dec
or
aam
test
mov
jp
or
adc
scas
adc
fxtract
test
call
add
outs
add
iret
scas
leave
fdiv
ins
jno
push
mov
dec
movs
and
inc
cmc
adc
retf
(bad)
shl
cmp
aad
xor
stc
sbb
jb
mov
mov
mov
push
ffree
stc
stc
cmc
dec
sbb
cdq
push
push
enter
iret
cmp
xchg
push
cmps
and
test
mov
dec
(bad)
int
mov
out
pop
cwde
xor
mov
xlat
popa
inc
jg
out
sti
ret
or
pusha
push
gs
fild
and
cmc
int
fs
dec
jg
loope
sub
dec
pushf
adc
stc
xchg
out
sbb
fcom
push
popa
loope
fucomp
repz
clc
aas
dec
dec
movs
shl
shl
add
int
shl
das
pop
ja
add
icebp
sub
sub
add
mov
add
(bad)
jl
cli
xchg
(bad)
xlat
mov
fs
(bad)
mov
mov
or
scas
mov
cmp
and
push
outs
mov
lods
test
jl
mov
mov
xchg
and
test
cmp
add
push
dec
cmc
stos
sbb
in
aaa
mov
and
stos
cmps
fs
fcmovnb
cmc
loope
mov
and
fst
stc
jmp
icebp
sub
int
push
xor
data16
mov
mov
mov
jp
or
cmp
cmp
inc
outs
movs
repnz
xchg
or
xchg
mov
xchg
xor
xor
or
xor
and
enter
xor
inc
push
ins
loope
jae
add
or
in
dec
cwde
inc
bound
pop
cmp
ins
pop
ret
jns
lds
mov
adc
jne
xchg
mov
cmps
or
(bad)
mov
bound
mov
mov
fisub
and
pop
lds
xchg
call
cmc
adc
ror
jl
jb
sub
test
add
dec
fs
mov
xchg
out
call
int
xor
mov
xchg
test
inc
sbb
and
cmp
lds
xor
cwde
cmp
sub
pop
adc
in
push
mov
or
inc
psraw
inc
or
and
movs
imul
test
les
xchg
mov
and
jne
and
retf
xor
inc
retf
push
lock
stc
dec
test
dec
jae
push
jo
outs
xchg
mov
loop
xlat
int
wbinvd
pop
push
retf
add
rol
inc
jmp
adc
enter
adc
xor
push
popa
dec
retf
(bad)
(bad)
xchg
stos
and
in
mov
leave
sub
pusha
repz
mov
mov
leave
or
in
stc
mov
xchg
pusha
repz
mov
enter
es
icebp
mov
add
leave
mov
xchg
push
pop
sbb
outs
sbb
loop
pop
push
jo
outs
jno
push
sub
xlat
bnd
inc
or
inc
add
jecxz
dec
dec
cmp
add
jbe
xchg
mov
daa
repnz
sbb
jp
call
dec
sahf
mov
pop
gs
jp
jmp
sbb
cmp
dec
outs
and
sbb
(bad)
out
enter
test
retf
mov
leave
or
stc
mov
adc
je
mov
test
lock
pop
in
inc
add
inc
pop
mov
fsub
add
adc
aas
retf
adc
mov
add
push
or
mov
xchg
enter
retf
loope
mov
clc
loop
jecxz
pop
aas
(bad)
mov
and
pop
xchg
mov
and
addr16
pop
adc
sub
jne
aas
nop
xor
or
retf
push
adc
ins
push
arpl
xor
(bad)
ficomp
arpl
adc
div
mov
jp
mov
and
xchg
pop
add
xchg
rcl
mov
sbb
nop
add
imul
lea
repz
xor
push
xor
mov
jmp
pop
ss
je
inc
sub
fistp
and
lock
sbb
addr16
jbe
sbb
mov
inc
(bad)
out
dec
js
xor
fmul
adc
sti
outs
sub
rcl
(bad)
jo
jmp
mov
movs
daa
mov
or
inc
cmp
movs
cmp
or
push
mov
jns
xor
xor
sbb
jmp
cmp
pop
push
repnz
add
loop
mov
dec
loop
jl
fsub
dec
mov
pop
loop
mov
es
jns
mov
mov
mov
popa
pop
xor
std
mov
ins
and
xor
aaa
mov
inc
sub
add
mov
mov
cmps
pop
retf
jae
popa
les
push
xor
add
or
and
pop
push
dec
adc
rol
cmps
mov
in
mov
cmp
iret
inc
add
and
and
dec
xchg
inc
fstp
cmps
jbe
clc
mov
dec
inc
pop
in
mov
call
mov
leave
inc
xchg
cmp
out
add
push
jno
adc
mov
or
stc
ds
retf
xchg
pusha
xor
pushf
pop
mov
inc
jmp
loopne
pop
leave
leave
xor
fisttp
adc
mov
push
sub
and
and
adc
push
adc
jbe
sbb
test
adc
ret
pop
xchg
add
mov
push
fcomp
xlat
adc
scas
aam
iret
push
sub
mov
xor
aam
test
or
mov
cmp
push
push
jnp
es
test
sbb
out
or
xor
xchg
dec
popf
(bad)
out
imul
cmp
nop
test
adc
ret
adc
cmps
pop
cmp
sub
fs
sbb
xchg
adc
sbb
sbb
dec
test
jo
mov
or
das
mov
dec
shr
mov
aaa
ins
ins
adc
pop
dec
jns
je
lea
sahf
inc
pop
test
xchg
je
ret
mov
cmp
jecxz
inc
mov
es
mov
cwde
rcl
push
call
stc
data16
lds
add
pop
test
or
les
xlat
lods
imul
(bad)
clc
pop
loop
lods
cmc
das
dec
daa
fistp
movs
cmp
mov
and
or
shr
pop
dec
fsubr
xchg
inc
inc
or
inc
inc
jae
mov
vmovhps
sbb
cmps
ss
pop
lds
je
rol
(bad)
popf
adc
xor
cwde
lea
dec
add
mov
clc
mov
mov
(bad)
or
or
add
and
push
mul
aam
js
or
inc
pop
mov
or
dec
imul
(bad)
imul
lods
jns
xchg
dec
adc
add
and
adc
stc
lea
aad
clc
pop
(bad)
sub
imul
and
xchg
stc
push
xchg
popf
xor
inc
pop
pop
lods
sar
jae
js
or
ret
sub
cmovae
jnp
loopne
adc
ret
push
iret
mov
mov
pop
adc
ret
inc
inc
push
push
scas
adc
xor
mov
clc
sub
inc
mov
xchg
bound
ficomp
and
pop
popa
add
mov
xor
imul
ins
loopne
push
mov
push
mov
add
adc
adc
or
movs
cdq
sub
sbb
xchg
pop
xor
cmc
adc
sbb
mov
inc
pop
or
sbb
lock
push
mov
ret
addr16
mov
call
inc
sub
xchg
push
dec
or
or
pop
int3
xchg
in
enter
scas
cmp
(bad)
cmp
les
pop
sub
cmp
or
mov
sbb
inc
jne
fwait
and
sub
add
test
or
les
adc
in
sub
outs
sub
shl
cdq
pop
loopne
fistp
lods
les
mov
mov
dec
aaa
dec
cmp
inc
dec
inc
jne
aad
stc
adc
xchg
mov
pop
and
sbb
fcomp
inc
js
dec
leave
adc
or
adc
aas
gs
std
fnstcw
inc
mov
cmc
psrad
je
jae
sub
mov
xchg
out
sbb
mov
pushf
enter
fxch
mov
jge
loope
xlat
(bad)
aas
add
or
adc
(bad)
into
(bad)
fwait
jbe
add
sbb
jae
and
repz
test
pop
aam
or
fiadd
mov
or
push
add
popa
sahf
fs
adc
ret
inc
mov
sub
into
mov
cmp
out
or
cmps
iret
or
or
iret
mov
sub
xchg
mov
repz
pop
xor
xor
out
or
fstp
mov
xchg
mov
xchg
inc
rcl
std
add
es
sbb
(bad)
jecxz
or
adc
imul
mov
adc
movs
push
add
sbb
xlat
cwde
out
(bad)
dec
loop
ret
jle
mov
or
and
or
mov
cmp
inc
add
rcl
adc
xor
xor
dec
cmps
mov
inc
jns
out
out
mov
mov
in
inc
push
popf
shr
gs
in
sti
ins
jb
movs
in
sbb
sar
movs
sub
or
cmp
adc
daa
int3
cmc
out
adc
xchg
test
or
and
sbb
dec
push
loope
fild
(bad)
rcl
test
gs
mov
int3
les
push
fst
fadd
sub
or
jle
or
shl
sub
push
mov
jg
call
jmp
pop
and
push
jmp
or
sbb
sub
sbb
adc
mov
dec
jle
xchg
or
shl
xlat
outs
(bad)
xchg
addr16
sub
sbb
pop
call
movs
retf
pop
js
std
daa
lea
pop
or
adc
mov
pushf
add
and
inc
inc
and
inc
stos
or
ss
adc
push
movs
std
and
xchg
(bad)
sbb
(bad)
mov
adc
sub
lods
inc
add
frstor
sub
test
ret
in
out
fist
add
or
cdq
add
jg
(bad)
in
push
ret
add
xchg
add
stos
cs
push
popa
jmp
sbb
retf
dec
pushf
cmc
jne
fild
push
sub
sub
outs
imul
xchg
bound
cmp
fnstenv
pcmpgtw
xchg
cmp
cmp
sar
cmc
dec
jne
aaa
rcr
pop
xor
mov
and
sbb
jo
mov
xor
pop
xchg
xchg
and
arpl
xchg
push
pop
stos
mov
popa
shl
ins
jmp
lods
scas
jmp
or
fchs
dec
add
(bad)
das
loope
icebp
aas
gs
or
sbb
std
mov
loop
sar
pop
jecxz
push
cs
jl
add
mov
(bad)
or
or
imul
fld
rcr
dec
(bad)
loope
dec
cmp
add
int3
xor
jo
fcomp
shl
dec
mov
pop
and
add
aam
lds
in
mov
out
sub
add
imul
jge
loop
pop
dec
fs
daa
xor
scas
or
inc
adc
xchg
push
cmp
popf
in
dec
cld
fisttp
sbb
shr
jmp
mov
je
xchg
enter
in
(bad)
add
cmp
mov
cwde
rcl
pop
dec
jecxz
xchg
add
ja
push
push
cmp
int
imul
pop
or
popa
xor
test
leave
dec
fisttp
js
enter
mov
push
jecxz
mov
in
pop
dec
sbb
add
inc
pop
shr
cmp
pop
xor
outs
xor
mov
push
push
xchg
and
sar
mov
call
or
pushf
mov
adc
mov
mov
div
inc
xor
sbb
push
int
or
pop
popa
pop
loop
and
aas
in
dec
gs
jo
mov
inc
aaa
cmc
or
dec
xchg
jbe
push
rcl
or
xor
mov
sbb
shr
loopne
inc
xchg
pop
dec
ins
pop
loopne
mov
inc
mov
and
or
add
fadd
adc
or
int
pop
fs
cld
sbb
rcr
jmp
or
daa
or
mov
push
xor
cli
jnp
pop
imul
test
xchg
lds
cmp
adc
pop
lds
dec
cmc
inc
pop
in
sbb
in
cmps
pop
fs
and
push
lock
add
inc
fsubr
cmp
mov
enter
jle
dec
cmp
inc
loope
dec
and
iret
call
and
add
or
pop
test
stos
mov
aas
cmps
jne
test
or
in
jne
adc
cmp
sbb
adc
ror
push
pop
cmp
rcr
or
ror
movs
xchg
push
rol
add
dec
ins
add
inc
sbb
les
or
cdq
loopne
pop
jecxz
in
jmp
je
stc
add
sub
addr16
adc
add
xchg
cdq
daa
and
(bad)
icebp
fldenv
sub
mov
mov
cmp
or
mov
jmp
enter
and
push
mov
adc
int
xor
test
jmp
jg
mov
dec
mov
out
push
fisttp
pop
dec
loopne
adc
mov
pop
and
sbb
aaa
ret
into
and
(bad)
(bad)
mov
in
scas
or
call
sti
int
retf
fcom
xor
pop
gs
cmp
push
stos
add
xchg
or
fs
test
add
mov
lahf
popa
pop
dec
inc
ss
and
ret
xchg
or
mov
mov
sbb
jne
adc
lea
shl
and
sub
mov
pop
mov
aad
ins
iret
rol
fadd
push
mov
mov
adc
cmp
test
xchg
sbb
mov
cmp
xor
stos
ja
xchg
stos
mov
je
(bad)
loop
fsub
pop
jge
mov
imul
leave
xor
pop
cmps
jecxz
mov
imul
ins
sbb
or
inc
pop
dec
sbb
fucomip
psraw
rcl
jno
add
imul
fsubp
je
sub
push
dec
clc
xchg
sbb
dec
ins
frstpm(287
inc
in
cmp
fnsave
imul
mov
out
inc
and
jmp
add
movs
and
das
push
pop
sub
xchg
imul
es
bound
dec
mov
loope
and
sbb
loop
retf
push
movs
ja
xor
push
leave
push
(bad)
loope
fst
frstor
pop
dec
and
cdq
leave
dec
pop
sbb
mov
cmps
cli
push
inc
jo
in
pop
mov
repz
les
sub
test
pop
push
in
or
add
popa
loop
gs
retf
sbb
push
das
mov
mov
and
adc
jmp
push
add
sub
shl
clc
sub
add
stc
push
div
movs
inc
repz
or
inc
jle
addr16
fisub
out
or
(bad)
mov
jp
and
push
mov
jle
add
jle
adc
xchg
inc
fsubr
rol
lods
mov
daa
inc
push
mov
or
sub
add
mov
imul
xchg
sahf
sbb
or
add
mov
fbld
xchg
mov
(bad)
jo
push
mov
(bad)
fimul
out
mov
daa
das
movs
sahf
add
popa
stc
pop
test
aas
sbb
adc
sub
push
add
jmp
cmc
cdq
cmp
icebp
jmp
(bad)
mov
scas
stos
daa
push
rcl
cmps
lods
loop
cmc
lea
pop
sub
xchg
movs
fild
push
scas
xchg
out
cmc
jp
fistp
inc
in
(bad)
fld
rcr
dec
mov
inc
dec
push
fwait
pushf
mov
sbb
dec
adc
and
js
mov
shl
jns
lock
out
inc
mov
inc
and
inc
ret
test
or
xor
sub
mov
shl
lock
scas
xor
mov
fadd
repnz
and
inc
sbb
sub
jae
cmp
jmp
call
imul
jb
in
scas
sbb
sub
and
add
or
lods
or
movs
aas
ror
out
push
mov
mov
xchg
es
mov
lods
adc
cmp
mov
in
rol
fdiv
loop
pop
in
or
or
xor
or
(bad)
fisubr
iret
daa
and
mov
or
add
mov
inc
add
dec
push
or
rcr
enter
inc
sub
leave
mov
in
xchg
sub
loope
sub
fild
cmp
arpl
loop
sub
les
adc
and
sbb
push
mov
push
movs
sub
shl
nop
adc
add
adc
mov
sub
aad
fstp
retf
out
aam
jecxz
pop
(bad)
sbb
sbb
mov
sbb
mov
mov
push
adc
xor
push
imul
adc
int3
adc
dec
add
xor
pop
dec
sub
pop
mov
mov
dec
push
sbb
jmp
ret
dec
dec
or
sub
movs
sub
or
jb
movs
and
(bad)
loope
pusha
movs
scas
add
add
xchg
xlat
lods
sahf
outs
lods
adc
adc
adc
pop
push
jmp
adc
xor
dec
push
loope
in
adc
out
das
ds
ja
cmp
mov
out
inc
push
sahf
fstp
ds
fs
add
dec
jae
and
ror
adc
inc
arpl
mov
shl
sbb
pop
mov
jnp
add
and
mov
out
sbb
add
dec
and
add
sub
xor
cmp
cmp
aas
mov
xor
rcr
and
xor
push
adc
sub
sub
leave
push
and
inc
and
push
push
imul
lea
in
or
xor
add
popa
and
pusha
popa
adc
adc
jmp
push
mov
jnp
inc
adc
sbb
adc
xchg
add
sbb
jmp
test
dec
or
in
cmp
mov
in
xor
push
mov
gs
push
push
or
in
push
mov
lock
pop
jl
push
in
or
mov
add
or
adc
sbb
add
sub
jle
jg
mov
cwde
ret
inc
mov
jg
imul
sub
add
pop
push
jne
scas
sub
adc
pop
mov
sbb
call
sub
lods
sahf
(bad)
div
mov
and
xor
pop
pushf
cmp
sbb
daa
ins
xchg
mov
and
xchg
inc
or
inc
mov
sub
inc
or
pop
push
pop
sbb
vpshld
mov
inc
or
adc
cwde
mov
dec
je
add
stc
popa
cmp
scas
mov
and
pop
js
js
inc
xchg
lock
bnd
inc
sub
sub
dec
pop
sub
dec
or
or
mov
hlt
inc
jmp
aad
mov
dec
(bad)
sub
and
xchg
addr16
adc
adc
add
scas
add
jmp
push
mov
adc
dec
cdq
jne
outs
rcr
and
or
dec
stos
adc
xchg
or
mov
sub
jmp
pop
movs
mov
pop
jb
cdq
jmp
mov
ret
ret
jo
jbe
and
test
xchg
mov
xor
ss
es
mov
jb
leave
add
push
fistp
lods
or
and
sub
cmp
jno
test
lock
(bad)
mov
add
aam
loop
leave
movs
les
xor
dec
in
call
stc
or
jno
out
ret
adc
xor
mov
add
cmp
mov
mov
jno
dec
pop
sub
sub
xor
pop
or
fild
lds
pop
dec
repz
lods
push
xor
xchg
dec
push
cdq
add
dec
jle
mov
aaa
adc
adc
call
xchg
pop
stos
mov
cmp
cmps
gs
retf
push
push
cmps
mov
leave
sbb
mov
sbb
jmp
loope
xchg
mov
sbb
adc
loope
loope
or
mov
cld
and
shl
xchg
sar
es
sbb
inc
(bad)
pop
push
mov
shr
shl
ret
je
mov
sbb
push
push
jmp
fs
sub
or
test
add
pop
jg
xchg
adc
adc
sub
mov
or
push
sti
cmp
sbb
pop
(bad)
fmul
add
inc
in
ret
add
sbb
xlat
xor
pop
sub
xor
pop
adc
cmp
add
(bad)
jnp
mov
cmp
xchg
sar
test
ret
loop
push
dec
and
mov
scas
mov
dec
push
enter
cdq
jne
fisttp
add
sub
inc
sbb
sbb
cmp
mov
in
mov
fs
xchg
add
aas
lahf
jbe
push
rol
repnz
cmp
or
in
mov
jbe
push
mov
push
scas
fimul
dec
push
push
sub
sub
ret
in
and
loope
xor
mov
sub
mov
rcl
inc
xchg
in
sbb
std
ds
sti
popa
sub
push
inc
sub
cmps
inc
pop
jecxz
xor
cwde
inc
std
int
sbb
pop
inc
cmp
mov
inc
and
jmp
add
loop
in
nop
and
pushf
cmp
jp
and
dec
in
retf
es
and
cmp
(bad)
aas
test
je
hlt
wbinvd
ja
pop
push
sub
push
shr
inc
repnz
dec
and
xchg
mov
lods
and
in
(bad)
sub
and
mov
jbe
push
rsqrtps
mov
and
sbb
adc
cwde
shl
mov
test
das
xor
aas
test
xsha1
cmps
dec
xchg
or
jno
je
sub
paddsb
mov
shl
inc
dec
ja
pop
test
xor
xchg
jecxz
aam
aam
test
or
mov
push
xchg
sub
test
or
loope
(bad)
jg
out
outs
and
push
sbb
jne
mov
cs
std
test
lahf
add
push
rol
sbb
add
xor
enter
mov
add
mov
loope
inc
mov
out
adc
sub
ins
dec
xor
rol
xchg
xchg
sbb
imul
add
jl
(bad)
pop
sbb
xchg
jecxz
lock
mov
movups
push
add
pop
jno
xchg
into
out
inc
inc
xchg
mov
mov
adc
mov
xor
js
or
adc
or
movs
or
or
push
pop
outs
retf
jg
adc
in
sbb
dec
adc
stc
mov
inc
mov
in
adc
and
sub
nop
in
xchg
(bad)
pop
ss
add
repnz
repnz
test
xbegin
mov
pop
and
mov
push
xor
ret
bound
pop
pop
jns
xor
add
test
fst
aam
inc
adc
or
adc
add
fmul
mov
sub
ficom
pop
xchg
les
adc
adc
cli
jle
and
call
int3
push
xchg
mov
xchg
aam
inc
mov
push
stos
dec
cdq
rcr
push
std
inc
mov
les
jne
dec
fadd
dec
sbb
ret
pop
mov
das
mov
dec
adc
pop
sub
pop
mov
sahf
imul
mov
push
cwde
movs
sub
cmp
cmps
and
fisub
bound
not
jp
push
test
ror
sub
push
rol
rcl
adc
test
stc
mov
jne
retf
loope
inc
div
in
dec
lock
in
inc
es
lods
repnz
add
mov
in
test
aas
inc
test
inc
call
cli
popa
int
add
push
mov
fs
sbb
ret
cli
or
dec
gs
pop
sbb
inc
jmp
and
add
pop
xor
aad
xor
in
outs
bound
bound
mov
jns
fidiv
std
push
mov
enter
ins
mov
jecxz
push
neg
inc
loope
ins
xor
dec
add
pop
rcl
push
push
push
cmps
push
inc
or
or
stos
add
dec
or
push
pushf
or
aas
js
ror
lahf
lods
xor
cmp
sar
and
or
and
out
outs
repz
ins
pop
inc
out
mov
aad
out
fs
push
adc
or
arpl
ret
pop
std
dec
pop
mov
or
je
inc
jmp
jbe
cmp
mov
jne
xchg
sub
push
sub
pop
inc
loope
(bad)
aas
or
adc
cmp
pop
test
popa
ss
sbb
add
lods
sbb
ret
and
pop
cmp
rol
and
sbb
mov
icebp
addr16
dec
cmc
es
js
mov
scas
dec
aad
push
imul
or
or
jp
sub
xchg
(bad)
sub
inc
imul
push
push
pop
pop
mov
(bad)
sbb
sub
ficom
test
adc
in
cmp
inc
jno
enter
mov
or
xchg
enter
inc
sbb
mov
pop
sbb
dec
js
lds
jno
inc
aam
cmp
add
push
and
dec
nop
add
ret
jg
dec
test
rcl
jnp
pop
push
and
xlat
pop
jno
(bad)
sbb
pop
ins
sbb
mov
adc
imul
pop
pop
mov
adc
adc
and
mov
bnd
jb
or
inc
mov
mov
lods
adc
nop
sub
sub
(bad)
dec
mul
xor
sahf
dec
ins
in
or
xchg
push
pop
jecxz
sti
mov
push
test
retf
lods
pusha
or
pushf
rcr
add
stc
cdq
test
ss
lock
pop
mov
daa
cwde
or
movs
jbe
clc
push
xchg
sbb
inc
adc
leave
mov
adc
add
movs
ret
popa
push
pop
sahf
xchg
or
lds
aaa
es
add
adc
mov
and
jle
mov
pop
je
push
adc
cdq
mov
mov
and
pusha
clc
cs
cmp
or
in
inc
cmps
sub
outs
fimul
add
cdq
(bad)
pop
cmp
pop
cmp
inc
test
jmp
jb
mov
jmp
inc
mov
or
mov
dec
push
js
xor
or
sub
mov
retf
packssdw
std
inc
int
stc
mov
pusha
rol
enter
(bad)
js
mov
les
inc
movs
sbb
dec
xchg
jo
pop
dec
test
(bad)
retf
sbb
sbb
test
adc
data16
repnz
stos
daa
dec
test
add
dec
mov
sbb
outs
cmp
in
(bad)
inc
mov
pop
jle
idiv
mov
add
arpl
push
bnd
aaa
or
pop
push
movs
add
cwde
fld
mov
jb
mov
adc
or
sbb
jl
sub
daa
mov
pop
loope
pop
add
ins
pop
sbb
imul
or
movs
loope
int
inc
imul
std
and
addr16
mov
inc
shr
aas
xchg
push
lods
jle
mov
out
cmp
test
xor
test
mov
test
push
test
aas
and
add
mov
adc
push
aad
push
es
xchg
push
add
or
mov
sub
sub
scas
cmp
mov
adc
or
invd
neg
aam
sub
mov
call
or
ret
or
cmp
mov
stos
and
push
inc
popa
out
adc
in
cmps
jmp
fisttp
cs
cmpxchg
xor
sbb
stc
out
or
lds
repz
inc
cmp
pop
test
push
jb
in
adc
das
(bad)
(bad)
add
(bad)
js
and
dec
test
inc
ret
sub
movs
ss
cmps
inc
and
or
inc
pop
ror
test
or
adc
gs
sbb
lock
inc
addr16
pop
dec
jo
dec
pop
leave
cmc
cwde
adc
and
lahf
adc
push
push
sbb
fstp
adc
jbe
in
add
ds
fiadd
repnz
adc
jl
dec
retf
mov
ins
pop
inc
fwait
push
sub
inc
mov
popf
stc
lahf
push
pushf
movs
sub
cmps
pop
or
xor
gs
push
pop
in
jmp
call
cs
imul
push
cli
jge
adc
or
(bad)
or
int
inc
and
jp
push
stc
xchg
out
enter
pop
xor
adc
and
movs
movs
imul
test
push
lods
imul
cmp
(bad)
aad
mov
dec
addr16
jmp
fild
out
mov
sbb
and
or
ret
dec
in
xor
cmp
jg
mov
aad
cwde
sub
mov
popa
mov
fwait
in
ins
mov
adc
and
adc
(bad)
adc
sub
or
or
mov
push
retf
adc
adc
mov
push
pop
xchg
xchg
or
adc
xchg
mov
aad
dec
rol
push
inc
pop
call
lahf
add
dec
ret
or
shl
push
adc
out
adc
cwde
xchg
sbb
(bad)
(bad)
add
or
xchg
or
xchg
inc
stc
test
sbb
loopne
inc
dec
setl
std
sbb
sbb
gs
cmc
icebp
in
push
inc
fnstsw
pop
sbb
add
xor
mov
adc
fstp
xor
and
test
test
cwde
sbb
jb
std
xchg
and
and
std
sbb
dec
retf
jo
ret
jmp
div
xchg
aaa
icebp
sar
add
leave
pop
je
(bad)
jbe
fcompp
inc
sbb
dec
into
jle
cmp
repnz
mov
xor
pushf
push
dec
cmp
dec
or
les
fstp
sbb
rcr
xchg
jne
ja
les
dec
aas
call
jno
xor
dec
dec
inc
add
sbb
lock
xchg
add
clc
dec
adc
sbb
cmp
out
pop
xor
loop
or
(bad)
and
cmp
fadd
adc
xor
add
pushf
in
sbb
(bad)
js
mov
(bad)
cmp
xor
sub
add
add
add
push
and
test
xchg
add
xchg
pop
add
test
adc
xchg
adc
inc
pop
or
inc
stc
das
add
push
or
sysenter
or
cmp
(bad)
push
sbb
pusha
mov
inc
leave
xor
pop
fdiv
icebp
ss
jle
xchg
es
push
xor
pop
cmp
jne
mov
adc
fidivr
or
cmc
sub
xchg
int3
jbe
add
or
call
push
add
or
fdiv
mov
xor
and
sub
cwde
sbb
dec
adc
mov
iret
or
push
inc
frstor
adc
gs
(bad)
or
inc
mov
add
sbb
and
ds
push
cs
pop
mov
pop
fistp
stc
or
dec
pusha
aaa
sbb
inc
dec
xchg
out
test
sbb
bound
aad
pop
push
mov
jl
in
and
retf
cmp
bound
adc
xchg
or
outs
repnz
push
push
jno
dec
sub
daa
add
cmp
mov
add
cmp
or
inc
scas
or
test
pop
or
movntps
sub
dec
fisubr
in
xor
or
sbb
sahf
(bad)
ins
dec
or
aaa
mov
ins
inc
and
stc
lock
inc
sbb
dec
jge
fucomi
ds
or
fisub
xchg
jnp
sbb
adc
cwde
sbb
jnp
cmp
jae
push
rol
cmps
sar
lea
sub
js
or
sub
xor
inc
sub
xchg
shl
jne
enter
mov
xor
xchg
pop
(bad)
add
lock
dec
jne
in
push
inc
inc
mov
fbld
add
sbb
and
and
xor
jp
sahf
sar
in
and
or
mov
push
inc
dec
jo
movs
fistp
adc
mov
pop
daa
pop
pop
in
ret
or
add
repz
fiadd
popf
inc
out
loope
or
pop
sbb
mov
pop
and
(bad)
sbb
adc
lods
stc
jns
inc
push
inc
cmp
xor
sbb
popf
mov
std
mov
adc
test
push
sbb
sub
retf
push
pop
sahf
retf
arpl
adc
mov
ins
sbb
push
imul
ins
(bad)
adc
jmp
mov
inc
mov
push
adc
dec
push
cmp
inc
adc
les
ins
adc
mov
cmp
mov
jl
jbe
push
test
ficom
or
dec
mov
jmp
and
mov
inc
pop
clc
mov
sbb
add
sub
dec
(bad)
jmp
cmp
es
push
adc
add
jmp
lods
lods
sbb
les
mov
sub
ja
inc
xchg
test
jnp
add
xchg
cdq
mov
sub
add
scas
mov
(bad)
inc
or
mov
dec
dec
out
sbb
mov
icebp
fld
or
add
aas
mov
sub
enter
mov
and
push
mov
xchg
(bad)
das
mov
add
sbb
cwde
xor
mov
or
sub
popa
hlt
push
pop
push
xchg
dec
mov
enter
addr16
jne
xchg
mov
or
int
inc
dec
mov
dec
inc
sub
xchg
aad
xchg
cdq
jmp
add
repnz
jno
out
dec
(bad)
adc
add
push
xchg
popa
mov
pop
cmp
mov
adc
cmp
cld
imul
pop
pop
mov
mov
fnsave
inc
dec
push
fwait
adc
loop
dec
scas
add
mov
mov
lods
sub
cmp
popf
or
jg
imul
or
or
cld
adc
sbb
or
and
enter
stos
fld
(bad)
std
add
jo
inc
outs
inc
push
dec
loope
xor
int3
mov
sub
test
or
adc
add
iret
or
movs
in
mov
push
frstor
dec
sbb
movs
test
push
aaa
adc
mov
jp
sbb
inc
jmp
xchg
mov
fcomp
xchg
shr
dec
(bad)
in
leave
stc
ins
cs
sbb
pop
push
sub
cs
das
push
fcom
loope
jnp
fist
adc
nop
or
aaa
push
sbb
imul
in
pop
mov
pop
mov
or
cdq
(bad)
sbb
sbb
add
push
leave
mov
push
aad
sbb
xchg
mov
div
fwait
xchg
and
stc
sbb
in
inc
sub
movs
(bad)
and
inc
in
arpl
dec
ins
popa
aaa
mov
aam
call
movs
ja
in
inc
mov
popa
adc
xchg
xor
add
push
jb
cld
sub
sub
addr16
jnp
daa
adc
stc
adc
jl
enter
in
call
ins
leave
mov
and
ins
inc
and
cmp
fmul
retf
ja
sub
in
dec
ret
dec
adc
cdq
mov
push
imul
sar
movs
das
push
lock
push
xchg
push
inc
xor
inc
icebp
sbb
popa
shl
inc
repnz
inc
xchg
or
or
fist
cmp
lea
pop
call
or
pop
(bad)
xchg
mov
xchg
jno
aaa
aas
daa
jecxz
test
mov
es
sbb
lea
loopne
or
sbb
adc
mov
icebp
aas
jne
das
push
sbb
jp
popa
add
call
xchg
mov
or
mov
lods
xchg
xchg
mov
adc
inc
xor
out
pushf
sbb
cmc
movs
daa
fst
xchg
les
es
or
xor
cmc
es
xchg
nop
pushf
add
sbb
xchg
fmul
ins
nop
push
retf
mov
imul
mov
imul
daa
inc
outs
and
jge
jp
inc
stc
xor
cmp
les
out
ss
(bad)
mov
xor
lock
adc
adc
in
adc
cmp
jno
xor
shl
mov
dec
leave
hlt
sbb
or
mov
je
mov
lahf
call
leave
inc
fnstsw
gs
ret
add
jo
fs
dec
xlat
xor
inc
add
mov
aad
jl
push
inc
daa
push
sub
pusha
dec
or
adc
push
sbb
push
iret
push
xor
inc
or
movs
push
mov
pusha
imul
sub
inc
and
(bad)
sub
push
sbb
jo
sbb
pop
outs
sub
lock
push
sub
dec
pop
dec
prefetch
cmp
mov
ror
and
cmps
xor
adc
sub
push
jnp
popf
cs
mov
mov
xchg
cmps
or
out
in
adc
mov
js
add
xor
loope
jne
add
cmps
and
sbb
lds
adc
sbb
movs
mov
or
and
pop
int
or
cs
pop
inc
stos
add
lock
add
add
pop
jae
push
xchg
sub
xor
and
mov
add
sbb
leave
push
pop
sbb
sbb
jne
imul
cld
dec
arpl
jbe
lock
leave
sbb
inc
add
push
pop
popf
stos
or
loope
inc
push
test
sub
xchg
es
add
cwde
mov
or
ja
loope
add
mov
sbb
shr
es
pop
sub
leave
mov
sub
inc
das
jns
add
(bad)
int3
in
and
scas
or
shl
cs
daa
cmp
sub
add
retf
(bad)
and
mov
cmp
dec
repnz
pusha
lods
cmp
ins
cmp
pop
in
es
pop
mov
cmps
lea
sbb
ret
icebp
fwait
push
lea
mov
fwait
or
push
aad
mov
rol
div
mov
or
cmp
aaa
sub
and
adc
xor
sub
or
and
or
loopne
xchg
xchg
cmp
push
adc
push
and
xchg
das
cmp
aaa
and
ret
jo
xor
pop
xchg
mov
and
cwde
xchg
fsub
bound
add
pop
jecxz
inc
gs
imul
arpl
shr
mov
leave
and
das
das
lahf
mov
aam
jno
cld
and
(bad)
and
xor
aas
sbb
inc
mov
push
aam
or
xor
and
and
cdq
push
sub
xchg
add
inc
add
inc
add
ds
jg
xchg
nop
sbb
xor
add
call
(bad)
jns
or
jne
daa
outs
je
outs
popa
rol
fs
jge
inc
xchg
mov
mov
or
movs
or
in
dec
mov
jle
push
test
and
push
(bad)
je
sbb
pusha
xor
push
push
pop
and
push
cmp
inc
or
sti
xchg
lds
cli
add
or
ins
pusha
in
add
movs
pop
mov
add
sbb
bound
jo
inc
loop
mov
xor
sub
adc
or
mov
ret
aam
add
mov
mov
jb
sbb
xor
and
dec
pop
dec
push
mov
inc
ins
jle
dec
push
pop
dec
cmp
(bad)
clc
cmc
fmul
mov
adc
xor
pushf
mov
ret
movs
aaa
or
add
pop
shl
pop
xor
pushf
aaa
fsub
cmp
mov
xor
or
adc
mov
mov
popa
sub
and
push
pop
cmp
(bad)
popa
mov
inc
dec
ja
sub
adc
scas
call
xor
xor
add
gs
fwait
cmps
push
jns
mov
fwait
cmps
push
cmc
stc
std
add
pop
or
sub
clc
test
cmp
dec
add
jl
aaa
test
retf
cmovge
push
and
pusha
xor
jp
mov
cmp
fcomp
ret
add
jae
push
ss
mov
xor
cmp
jg
inc
imul
aad
xor
push
sbb
push
es
xor
xchg
shr
and
jnp
inc
sbb
inc
and
sub
push
pop
cmp
mov
ds
mov
push
bound
mov
pop
sub
xor
mov
sub
dec
popa
add
(bad)
xchg
xlat
jge
pop
inc
nop
bound
adc
cmp
inc
pop
xor
imul
out
mov
dec
in
jne
push
mov
fiadd
arpl
add
cmc
dec
(bad)
pusha
mov
or
repnz
xchg
lods
xor
inc
xlat
mov
vmread
dec
mov
and
sahf
jns
inc
jae
pop
cmp
ud1
(bad)
and
cmp
sbb
xchg
lods
inc
(bad)
js
xchg
push
sbb
in
add
pop
imul
inc
mov
push
adc
mov
and
mov
test
loopne
inc
cmps
cmp
or
mov
sub
xchg
sbb
xchg
adc
cmp
inc
or
fld
out
test
xor
push
sub
mov
retf
cmp
mov
lock
cmp
sub
inc
lods
js
loopne
lock
jmp
cmp
dec
or
xchg
push
shr
in
sbb
xor
push
dec
and
adc
and
pop
mov
ret
test
xchg
or
shl
dec
out
xor
dec
pop
sbb
das
add
pop
xchg
call
sub
xor
push
out
sbb
std
adc
mov
dec
jmp
mov
ja
dec
add
shr
pop
jle
test
add
sbb
iret
sar
mov
jnp
shr
ins
and
xlat
bound
(bad)
in
pop
inc
fadd
ja
call
add
mov
mov
daa
ja
push
add
inc
inc
and
or
xor
imul
mov
adc
add
fld
pusha
cmp
cmp
add
imul
sbb
adc
jns
xor
sbb
jge
and
inc
loope
xor
repz
mov
add
pop
dec
jg
fst
pop
leave
mov
and
sub
addr16
add
cmp
xchg
mov
mov
add
and
jne
fwait
aam
mov
ud2
xor
mov
ja
test
xor
xor
cmps
out
mov
xlat
pop
mov
fdiv
pop
ror
jmp
inc
jle
inc
hlt
or
inc
pop
dec
adc
mov
xchg
popf
dec
xchg
dec
pop
or
in
xchg
cmp
pop
scas
and
mov
xchg
sbb
call
cmp
imul
pop
addr16
cmps
test
cwde
pop
fiadd
dec
imul
enter
and
dec
or
push
lock
sbb
xchg
xor
adc
rol
pop
inc
inc
bound
int3
add
sub
pop
add
add
push
jno
inc
cmp
test
add
xchg
push
cmps
aas
and
and
fstp
push
push
call
ret
outs
fs
ret
pop
mov
lods
fnstenv
add
clc
jo
xor
or
pushw
cmp
mov
mov
push
dec
jo
push
jae
ss
inc
sub
and
pop
or
adc
push
jl
sbb
xor
mov
xor
add
add
scas
cmc
sub
mov
and
aad
add
inc
jbe
jne
xlat
bound
dec
in
xor
jb
mov
ret
mov
in
and
or
or
jae
and
dec
ins
mov
rol
pop
jle
adc
and
cmovae
ja
dec
push
inc
add
dec
dec
or
add
push
inc
adc
daa
jp
popf
jae
jae
pop
dec
and
adc
and
outs
jo
imul
test
or
shl
xchg
ja
int3
cmp
ins
or
ret
imul
push
sahf
mov
into
adc
and
inc
sbb
or
adc
test
arpl
ins
inc
pop
out
mov
or
jne
mov
js
dec
iret
out
adc
xchg
adc
outs
cmc
gs
sahf
jge
bound
dec
add
inc
dec
mov
pop
fild
add
inc
ds
cmp
pusha
cld
aas
jmp
aaa
jne
adc
jmp
cmp
jne
into
mov
out
es
add
ins
and
cwde
push
push
mov
add
fisubr
mov
jo
cli
mov
mov
cmp
pop
cli
out
fsubr
mov
adc
mov
cmc
jl
sbb
xlat
xor
dec
hlt
popf
jmp
ins
loopne
and
dec
jmp
nop
and
int
inc
aas
add
mov
add
add
and
fdiv
pop
imul
cdq
or
jmp
sbb
outs
or
ret
ins
push
lea
mov
inc
aas
call
js
stos
fbld
push
dec
inc
jnp
dec
cmc
gs
and
or
push
jno
pop
adc
pop
add
inc
xor
xchg
arpl
outs
or
shl
aaa
dec
adc
push
or
into
jmp
out
push
add
or
jae
or
inc
and
cmp
xchg
cmp
xor
inc
std
inc
or
and
add
jge
and
push
pop
jle
sbb
in
mov
bound
jns
das
or
ret
cmp
cmp
movs
xchg
xchg
mov
jnp
mov
jp
push
sar
jnp
push
popf
jge
mov
mov
pop
sub
xchg
or
stc
add
js
sbb
div
and
clc
dec
dec
int
mov
bswap
dec
stc
jmp
loop
imul
aaa
xor
loopne
shl
or
(bad)
test
and
jl
gs
pop
add
cmp
xchg
adc
adc
sub
je
mov
add
or
inc
jo
ins
movs
jp
push
mov
imul
or
push
cmp
in
stc
jp
mov
sbb
dec
dec
mov
push
dec
pop
call
ins
mov
mov
call
cmc
(bad)
mov
pop
pop
fnstenv
popa
push
xchg
ins
sar
test
sub
mov
and
pop
inc
sbb
pushf
clc
xchg
mov
xor
rol
xor
lea
jge
jp
ret
push
push
push
sbb
cmovl
adc
outs
dec
jne
sbb
dec
packuswb
xor
pop
daa
xchg
dec
jmp
ja
xchg
or
loope
push
or
pop
xor
das
shl
adc
mov
push
jo
jbe
xor
mov
aad
push
jne
xor
push
mov
inc
push
ins
fnstenv
and
add
popf
pop
adc
mov
jne
or
pop
out
fmulp
inc
or
inc
dec
lods
mov
xor
and
dec
test
and
push
outs
jl
(bad)
sar
aam
pop
push
nop
out
imul
inc
push
popf
(bad)
mov
hlt
xchg
xor
loopne
std
out
xor
add
pop
add
int3
mov
pop
icebp
adc
int3
fisub
sub
or
clc
pop
jg
cmp
sub
mov
xchg
sub
mov
jle
in
add
dec
sub
aam
jmp
mov
xchg
icebp
dec
icebp
mov
add
cwde
gs
xchg
out
add
add
cmp
add
or
inc
mov
mov
add
jns
leave
add
retf
inc
rol
xor
push
enter
inc
(bad)
repz
jl
test
hlt
jg
add
push
outs
push
jge
shl
or
leave
inc
rcr
add
add
pusha
dec
aam
push
jno
add
add
pop
imul
rcr
popa
and
aaa
add
aaa
push
fldcw
cmp
movs
popa
(bad)
push
scas
loope
loope
out
mov
shr
std
lds
xchg
jmp
or
sar
stc
stc
cmp
sub
sbb
cld
xchg
inc
dec
push
adc
xchg
push
inc
in
jecxz
push
jae
lods
xchg
push
rcl
mov
adc
or
and
xchg
mul
xor
fist
cdq
push
dec
leave
inc
sbb
jae
xchg
dec
sbb
retf
or
dec
inc
push
not
push
ins
or
pop
fcom
jp
push
mov
data16
fwait
mov
fisttp
push
fldlg2
mov
sub
adc
and
inc
xchg
dec
nop
pop
or
movs
bound
sbb
mov
jno
jno
xor
jnp
adc
push
and
(bad)
and
push
loop
jno
pop
shr
jo
mov
(bad)
and
sbb
and
jmp
xchg
push
aam
mov
(bad)
add
outs
scas
adc
sahf
jae
or
or
push
les
mov
sbb
nop
(bad)
xor
and
cmp
and
bound
mov
inc
cld
jmp
popa
adc
sbb
and
add
pop
lock
or
outs
adc
lahf
xchg
popf
jp
xchg
cs
hlt
dec
add
and
aam
loope
sldt
(bad)
or
dec
je
pop
push
pop
dec
and
add
jb
push
pop
push
out
jae
sbb
(bad)
push
aad
and
ret
rol
and
cli
inc
add
inc
jge
(bad)
int
mov
test
jno
jge
inc
inc
lahf
xchg
add
lea
lds
icebp
jle
mov
add
inc
jno
inc
gs
mov
or
sbb
fisttp
enter
sahf
jmp
clc
mov
inc
push
inc
add
shl
std
scas
or
aad
shl
push
cmp
mov
xchg
and
int3
cmp
dec
pop
adc
sub
pushf
add
arpl
push
sub
add
add
aam
adc
adc
sbb
and
add
sub
push
jl
inc
add
add
cmps
inc
stos
mov
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
nop
test
mov
inc
mov
xlat
add
and
add
add
add
aam
loopne
stos
add
jnp
jge
lods
or
pushf
cmps
pop
aaa
push
scas
mov
std
xor
sub
ror
xor
cmp
mov
aaa
jo
out
ret
pmulhw
sbb
imul
mov
ins
call
adc
cmps
pop
push
ins
pushf
data16
movs
lds
cmps
cwde
aam
ins
out
mov
xchg
pop
sbb
pushf
out
ins
add
stos
and
rcr
jge
std
mov
(bad)
les
ja
retf
or
shl
mov
pop
scas
mov
mov
and
push
enter
xchg
push
push
mov
push
and
and
sbb
push
movs
push
cmp
lea
and
or
jae
scas
std
mov
xchg
sbb
push
or
xchg
mov
or
dec
psubsw
add
dec
adc
or
sub
test
shl
or
or
pop
movs
jbe
jmp
dec
jns
fs
leave
mov
adc
outs
mov
cli
mov
dec
jo
xor
in
cmp
cmc
(bad)
loope
xor
mov
test
fcmovnbe
mov
inc
sbb
jno
add
mov
sbb
or
and
data16
mov
dec
pop
sbb
movsx
pop
leave
cmp
and
aad
pop
lods
push
jg
ins
push
(bad)
loope
(bad)
aad
sbb
cld
add
inc
xchg
push
sbb
inc
inc
push
clc
xchg
dec
es
pop
and
add
movs
sub
sbb
xchg
popf
stc
push
inc
and
inc
push
cdq
out
arpl
mov
push
(bad)
(bad)
mov
or
imul
iret
fimul
movs
sub
es
mov
pop
jecxz
push
dec
push
stc
inc
cmp
in
in
fmul
(bad)
cmp
ja
js
sbb
cwde
fsubr
jne
sub
xor
pop
sub
ins
gs
push
or
lahf
or
nop
dec
js
pop
leave
mov
fwait
adc
push
add
or
pushf
loope
outs
mov
push
cwde
pop
stos
sar
push
hlt
sub
adc
jae
call
sbb
push
inc
or
pusha
or
jns
xchg
or
xor
mov
xor
sub
inc
pop
das
add
xchg
xor
sub
mov
mov
sub
push
add
jae
loope
fsub
xor
dec
sub
cmp
jl
pop
outs
xor
(bad)
dec
and
aaa
and
xchg
jns
inc
sbb
inc
add
and
and
and
movs
push
mov
xlat
test
push
popa
aad
clc
pop
sar
cmps
and
shr
and
jns
adc
mov
mov
loop
aas
dec
(bad)
test
inc
inc
stos
test
dec
push
sub
sbb
and
cdq
cdq
cld
cmp
ss
push
lods
pop
test
pop
xchg
cmp
inc
xchg
push
cmp
mov
jge
and
dec
sbb
pop
in
sbb
dec
lods
inc
rcr
sbb
je
ror
mov
jmp
add
push
jno
inc
test
dec
push
ins
lds
or
pop
xchg
sub
or
sbb
pop
sbb
mov
inc
push
push
aam
push
pop
fstp
jmp
inc
sar
shl
sub
jmp
push
dec
leave
sub
fstp
popa
push
mov
cmp
leave
mov
add
add
inc
or
test
mov
mov
add
int
les
ret
iret
lds
pop
enter
ja
ins
xchg
leave
mov
(bad)
aaa
pop
pop
sbb
mov
adc
ds
or
adc
mov
dec
or
xor
xchg
popf
add
das
aas
add
aad
sbb
cmc
mov
ja
add
bound
adc
pop
cdq
push
int
icebp
inc
leave
retf
inc
movs
retf
in
pop
dec
sub
push
mov
ror
stos
fsub
(bad)
xlat
sbb
xchg
out
aas
sbb
std
xchg
pop
pop
leave
inc
arpl
arpl
add
(bad)
fiadd
leave
and
and
xor
push
xor
mov
sub
arpl
push
or
fwait
add
mov
sub
imul
or
adc
repz
mov
push
test
or
jne
mov
push
inc
fs
inc
adc
cli
dec
inc
ror
(bad)
push
push
xor
in
mov
aad
imul
dec
cdq
ins
loopne
push
test
cs
push
or
popa
mov
movs
and
mov
adc
dec
pusha
lea
outs
push
and
pusha
aas
lock
enter
push
stc
dec
retf
mov
movs
and
jle
retf
xchg
fsub
xchg
xor
clc
add
mov
mov
sbb
lds
fbld
xchg
mov
fisttp
stc
cli
cmp
jmp
push
aad
popa
mov
packssdw
add
add
ror
les
loop
outs
js
mov
sbb
pop
and
sub
(bad)
push
test
and
lods
jns
mov
adc
adc
mov
sbb
les
pusha
lods
push
cmp
mov
mov
les
cmps
push
movs
pusha
imul
sub
mov
push
adc
jns
scas
or
cmp
add
sbb
add
or
loop
in
pop
aad
data16
loope
mov
mov
(bad)
mov
xor
adc
jmp
stos
and
mov
cmp
retf
(bad)
je
or
dec
sar
pop
loope
shl
and
sub
cwde
xor
(bad)
adc
cmp
rol
test
mov
jge
sub
ja
sub
pop
dec
icebp
ins
imul
jne
cdq
or
pop
mov
imul
fist
jmp
data16
clc
pop
jmp
inc
inc
pop
or
add
dec
std
jl
adc
and
push
mov
test
clc
clc
mov
idiv
std
adc
fmul
sbb
mov
xchg
cmp
sub
out
repz
push
out
push
push
movs
bts
dec
push
push
push
jp
xor
xchg
sub
xchg
int
loope
or
mov
mov
fdivr
mov
das
lea
push
or
dec
adc
cmp
icebp
aad
std
push
ins
adc
mov
or
fiadd
(bad)
mov
inc
push
std
punpcklbw
push
ins
mov
mov
rcr
clc
(bad)
lea
or
into
dec
xor
add
add
adc
mov
push
mul
stos
sbb
and
test
imul
xchg
mov
adc
add
mov
imul
data16
adc
xchg
xchg
add
add
add
and
sbb
stos
imul
lods
inc
stos
adc
repz
in
pop
div
adc
in
add
jae
aad
mov
inc
not
sub
and
push
push
mov
mov
add
mov
or
add
in
out
mov
pop
and
adc
ds
pop
push
mov
add
sbb
push
(bad)
push
xor
in
lea
fnsave
(bad)
dec
sbb
mov
and
or
sub
inc
add
mov
xor
cmps
enter
cdq
jmp
mov
pop
arpl
pop
adc
jns
mov
dec
add
jle
addr16
adc
sub
push
pop
stc
xchg
and
dec
popa
sbb
add
call
pop
pusha
add
inc
dec
mov
icebp
rcr
inc
cs
add
adc
data16
and
adc
shl
sar
mov
add
xor
cmp
call
pop
inc
je
das
and
jmp
loop
dec
xchg
add
ins
dec
ins
xor
cmp
enter
fcom
mov
cmp
mov
movs
pop
cld
mov
push
inc
ss
jo
std
push
inc
outs
lods
dec
cmp
inc
loop
fistp
stc
or
inc
fucomip
or
pop
in
adc
mov
pop
or
ins
test
mov
mov
mov
lea
or
add
sbb
adc
pop
jns
icebp
add
jbe
push
gs
xchg
mov
outs
addr16
mov
push
inc
jo
cmps
ret
xchg
ins
rcl
jno
stos
mov
cld
xchg
add
sti
loopne
push
push
pop
xor
jbe
xchg
jnp
in
push
mov
xchg
pop
cmc
clc
fsubr
das
fs
mov
or
jne
fiadd
adc
sub
xchg
and
adc
xchg
int3
and
push
mov
gs
stos
outs
add
ins
loope
add
mov
popf
lods
cs
and
add
dec
loope
or
shl
stc
xor
cwde
bound
aas
pop
lahf
inc
mov
xor
ror
push
aam
or
sub
xchg
lea
sar
adc
and
lahf
cmps
pop
dec
add
adc
lea
mov
or
in
dec
or
or
or
cmp
cmp
pushf
lds
loop
in
xor
or
xchg
sub
push
ret
test
or
movs
scas
cmc
add
mov
fs
mov
fild
call
stc
add
xor
fisubr
cmp
dec
xlat
ss
jmp
mov
es
dec
(bad)
mov
jmp
inc
jmp
test
or
jne
aaa
dec
inc
(bad)
jle
and
(bad)
icebp
mov
pop
xlat
mov
mov
mov
popf
sbb
scas
jo
into
pop
jmp
daa
dec
js
sbb
cmps
mov
xchg
lods
sar
add
xor
test
and
aaa
dec
inc
xor
(bad)
cmp
jg
push
inc
ret
xchg
pop
push
lock
lahf
jo
xor
push
sbb
mov
jb
sbb
sbb
cmps
adc
and
cs
movs
sbb
repz
mov
adc
sbb
add
ror
rol
popf
push
push
sub
sub
jne
mov
mov
arpl
dec
inc
adc
add
mov
jmp
cmp
adc
std
call
aas
pushf
rol
jne
lock
sbb
arpl
cmc
sar
loopne
jo
or
in
outs
loop
test
push
add
bound
jne
jno
or
and
mov
fcmovu
sub
sbb
mov
dec
and
imul
call
cmp
jmp
sbb
or
(bad)
in
lock
xor
call
inc
in
inc
xor
jo
cli
lea
cmp
retf
or
retf
mov
xor
add
test
jae
cmp
inc
fisttp
sbb
pop
mov
neg
sbb
pop
in
pop
test
inc
xor
bound
sbb
jbe
mov
cmc
fild
push
add
xchg
rcl
sub
xor
call
dec
(bad)
xor
add
pop
shr
push
sub
add
pop
test
and
dec
fmul
mov
ret
add
repnz
pop
fsub
mov
cmps
xor
stc
sbb
sub
bound
xchg
je
popf
or
in
jecxz
seta
or
icebp
and
out
pushf
push
jp
push
cmp
aas
or
xor
push
sbb
inc
mov
add
mov
ins
repz
and
cdq
out
daa
xchg
add
add
ds
les
sar
cmp
pop
int
inc
adc
mov
adc
popa
xchg
cmp
push
or
ss
adc
(bad)
rcl
add
mov
sbb
(bad)
cmc
mov
enter
jns
cmp
and
imul
icebp
test
mov
loop
test
sbb
or
add
sahf
mov
pop
xor
sti
push
pop
loope
clc
es
cwde
js
sbb
ficom
jp
adc
mov
jge
das
movs
push
rcr
mov
loope
and
xchg
xchg
in
adc
mov
push
adc
push
and
xor
mov
jb
into
and
mov
popa
adc
fld
cmp
rcr
xlat
fild
sbb
pop
dec
fadd
(bad)
adc
cmp
out
xor
pop
ins
int
fisub
xchg
mov
fwait
mov
add
mov
test
or
pop
sbb
sbb
in
dec
or
pop
test
xor
jp
dec
push
cmc
xchg
(bad)
jb
push
cmp
mov
inc
rcl
or
arpl
xchg
aam
enter
mov
int
cmps
and
icebp
cmp
stos
lock
fadd
bound
mov
leave
mov
daa
int3
inc
mov
sub
add
loop
popa
inc
daa
outs
inc
arpl
or
push
(bad)
and
pop
dec
or
icebp
sbb
mov
cwde
dec
repnz
xor
push
out
mov
rcl
test
ret
ja
jae
lods
add
inc
add
xor
aad
(bad)
mov
and
cmc
add
lock
and
mov
cmp
dec
and
pop
push
gs
or
adc
mov
mov
push
mov
push
in
cmp
mov
xlat
cmp
paddb
jle
sbb
out
fs
psrlq
or
jno
mul
pop
jno
dec
js
mov
cmc
inc
imul
dec
mov
ret
mov
pop
xchg
lea
test
or
daa
adc
test
(bad)
adc
sbb
retf
cmc
jne
add
adc
pop
and
inc
cmc
out
fld
xchg
sbb
push
add
jp
imul
or
mov
nop
movups
xor
cmp
icebp
gs
push
dec
retf
mov
pop
dec
jne
inc
push
xor
or
ja
add
iret
mov
js
mov
xchg
lock
jp
test
pop
inc
add
cmp
push
shl
aaa
or
popf
pop
jnp
pushf
push
cs
or
xchg
fs
pop
fxch
repnz
dec
cmc
mov
repz
adc
xchg
push
lea
ret
and
cld
xor
cmp
add
es
jo
jns
mov
test
sar
inc
add
jne
dec
push
jno
xor
adc
mov
jno
fs
push
xchg
jge
inc
sahf
push
(bad)
jbe
push
enter
cmp
add
sar
or
push
and
push
xor
loopne
xlat
or
fs
gs
push
push
mov
fisubr
sub
and
test
std
inc
mov
loopne
mov
int3
es
nop
test
sub
inc
add
push
inc
and
cmp
sbb
mov
jb
shl
add
xchg
aaa
push
inc
div
mov
(bad)
jno
cmps
outs
div
icebp
aaa
fsub
test
dec
adc
adc
pop
mov
xor
repz
leave
or
inc
xor
pop
mov
jns
adc
cs
xchg
ja
xor
int3
and
xchg
int
fcom
aad
jae
popf
adc
mov
stos
sbb
push
ss
jg
jle
inc
mov
dec
outs
mov
clc
xchg
xchg
daa
adc
rol
inc
clc
mov
inc
stos
pop
or
mov
aaa
jmp
fisttp
ja
jle
shr
imul
enter
in
inc
retf
rcr
scas
inc
jmp
scas
jle
jl
in
xlat
xor
icebp
cmp
test
gs
cmps
daa
loopne
mov
or
ja
les
mov
jp
movs
icebp
les
mov
les
push
mov
adc
adc
ja
lods
into
mov
mov
sbb
add
hlt
ret
mov
clc
pop
mov
mov
pop
xchg
imul
dec
imul
out
faddp
sub
lds
scas
jl
mov
popa
jns
xchg
xchg
and
sbb
(bad)
aam
popf
push
ja
daa
stc
shl
mov
jle
mov
movs
add
xchg
cmp
sar
rol
int3
sbb
or
popa
add
push
(bad)
fdiv
outs
push
ret
mov
scas
cmp
sbb
lods
lds
int3
ror
cmp
lds
or
pop
enter
pop
inc
or
les
cs
pop
enter
add
or
addr16
movs
xor
xor
sub
or
cmp
leave
sbb
mov
dec
and
and
push
cwde
popa
adc
mov
mov
pop
push
fstp
mov
fwait
in
jnp
fild
aam
dec
std
push
and
(bad)
cmp
mov
add
call
pop
push
test
shr
add
sbb
jno
test
or
sbb
call
mov
test
push
aaa
(bad)
cdq
movs
xchg
not
lods
or
pusha
jne
mov
cs
pop
addr16
imul
push
ja
inc
jl
in
adc
outs
xor
and
jg
jbe
stos
sbb
dec
mov
in
in
xchg
and
mov
clc
or
(bad)
fisubr
lock
cmp
test
xchg
dec
adc
lods
ret
cmp
fmul
sbb
popa
push
xchg
cmp
(bad)
sbb
outs
push
push
pop
fsub
lods
xchg
mov
sbb
into
std
std
data16
pop
pop
(bad)
cs
or
push
dec
inc
xor
mov
push
and
xor
rcl
push
pop
push
xor
pop
js
sbb
js
push
xchg
repz
dec
jge
cmp
(bad)
ja
sbb
out
sub
xchg
adc
add
push
push
aam
mov
push
lock
pop
or
pop
jae
push
sbb
sub
rcr
pop
or
xchg
lds
imul
mov
cmp
sub
ds
dec
and
xchg
pop
push
xchg
mov
cli
or
add
mov
cdq
imul
xor
mov
pop
in
shr
cmp
adc
or
jg
xor
or
or
mov
je
inc
sub
push
sbb
or
dec
push
push
jecxz
adc
bound
or
rol
imul
xor
pusha
arpl
fnstcw
sub
push
aas
ins
and
int
es
push
mov
inc
test
mov
mov
and
lods
arpl
add
sbb
(bad)
push
scas
and
push
and
icebp
cmps
fild
stos
cwde
ja
pop
sbb
or
inc
cmp
sub
and
outs
movs
pop
cmps
js
shl
push
push
or
or
jnp
jle
jmp
xchg
xchg
jnp
in
pop
lods
mov
xchg
push
ror
adc
or
push
js
xchg
ss
mov
call
push
jo
and
jge
jns
jg
fwait
jno
outs
and
cmp
cdq
xor
and
aas
mov
mov
push
mov
fcomp
fs
bound
and
imul
bound
lods
pop
arpl
addr16
xchg
test
pop
loopne
pop
jne
sub
or
movs
rcl
or
push
movs
aaa
xchg
pop
push
adc
pusha
or
and
add
jbe
add
aaa
cmp
xchg
inc
adc
xchg
add
push
cmp
mov
add
jbe
into
mov
mov
jne
retf
jmp
into
xor
dec
adc
mov
adc
movs
jbe
outs
(bad)
push
pop
in
and
mov
fld
and
sahf
and
jns
cmp
adc
sbb
cs
emms
cmp
add
fmul
in
add
mov
in
xlat
push
push
jne
dec
xchg
shr
ret
packsswb
fnsave
inc
or
pop
cmp
pop
pop
sbb
test
mov
xor
jb
inc
or
add
pop
in
and
inc
call
mov
inc
mov
repz
dec
repnz
f2xm1
imul
(bad)
ret
nop
jb
sahf
jno
sub
nop
push
and
pop
add
call
add
inc
shl
es
scas
xchg
cmp
fnsave
mov
xchg
sub
movs
outs
add
cmp
pop
mov
in
xor
mov
mov
xor
sub
xlat
mov
jge
inc
and
inc
jns
jecxz
shl
cli
fbstp
or
and
dec
push
dec
sbb
cmp
dec
jne
into
call
mov
aas
test
sti
or
xchg
mov
add
xor
add
push
cmp
addr16
sbb
push
lahf
jno
sbb
or
or
cs
ss
in
das
call
push
int
mov
(bad)
iret
rol
jb
inc
jle
xchg
inc
cmpxchg
out
xchg
xchg
inc
cdq
xchg
inc
daa
stc
imul
xchg
adc
add
adc
clc
int3
jb
jo
dec
xor
sbb
xchg
pop
pop
add
ins
dec
aaa
cmp
push
mov
bound
jmp
in
jp
pushf
cmp
dec
xor
jmp
or
sub
arpl
test
dec
cmc
push
inc
call
add
pop
push
nop
pop
fstp
jp
ret
pop
mov
cmp
xor
jp
sub
xor
and
cmp
push
(bad)
cmp
bound
and
ja
sub
and
mov
and
jle
xchg
inc
sub
test
and
xchg
fild
repz
and
pushf
sbb
cli
jnp
sub
icebp
and
xor
lea
pop
push
icebp
sbb
cmp
dec
or
arpl
loop
inc
add
test
jbe
arpl
(bad)
call
adc
sbb
xor
leave
adc
add
xor
cmp
inc
xor
pop
popf
retf
fdivr
add
xor
pop
pop
jge
and
adc
cli
adc
cmp
pushf
jecxz
jg
dec
jno
arpl
int3
lock
jne
inc
xchg
fld
pop
cmp
adc
mov
and
in
jle
add
call
inc
test
xor
fadd
lods
mov
or
mov
mov
pop
xor
in
or
mov
push
push
sbb
clc
push
cmps
aam
push
xchg
push
imul
mov
add
adc
retf
push
pop
push
imul
add
xor
xor
inc
mov
mov
jl
jnp
inc
add
shl
ror
test
push
pop
add
xchg
inc
stc
xchg
mov
add
fist
and
xchg
pop
test
lea
mov
mov
sbb
addr16
dec
shl
pop
add
jmp
cmp
jge
and
sub
in
or
push
pop
(bad)
rol
retf
leave
retf
dec
xchg
sub
inc
int
inc
fld
add
dec
jne
adc
add
and
loope
or
add
ret
mov
(bad)
arpl
push
(bad)
pop
(bad)
push
mov
push
sbb
jle
in
mov
fxch
mov
cmp
sbb
add
jne
adc
and
xor
sub
lods
push
adc
movs
jnp
mov
in
adc
add
cmp
jno
lods
push
sub
clc
mov
mov
sbb
sub
push
jecxz
and
imul
mov
test
ss
(bad)
push
retf
stos
inc
push
add
mov
(bad)
outs
push
cwde
cmp
movs
and
dec
and
add
sub
movs
out
imul
ret
ret
loope
xor
xor
stc
or
sub
mov
(bad)
in
shl
jmp
imul
xchg
push
addr16
jbe
inc
dec
cmp
mov
inc
pusha
adc
shr
push
inc
dec
sub
or
ror
jmp
jno
cmc
adc
mov
adc
mov
call
adc
sbb
add
lea
ret
add
fld
mov
and
data16
pop
lds
jp
arpl
mov
and
outs
(bad)
adc
mov
jge
jge
icebp
hlt
pop
push
imul
retf
push
push
jnp
jmp
cdq
dec
mov
add
push
rcl
outs
xor
dec
ret
xchg
jmp
cs
test
mov
xchg
ret
xor
mov
and
adc
cdq
cmp
xlat
xchg
adc
mov
xchg
idiv
inc
inc
sub
loop
popf
fnstenv
xor
dec
sqrtps
ret
in
icebp
dec
test
pop
push
in
mov
test
add
int
mov
add
add
mov
es
jle
jmp
xor
pop
dec
xchg
mov
jp
mov
sbb
sub
stc
jne
fld
cmp
in
adc
cmp
loope
lods
ret
cmp
fisubr
dec
scas
sahf
in
sbb
adc
inc
rol
xchg
fwait
dec
imul
aad
and
cdq
inc
icebp
pop
inc
cs
and
cmp
test
enter
pop
jnp
test
and
loope
in
dec
inc
pop
mov
fcomp
adc
cmps
ret
cmp
xchg
add
movs
std
mov
and
sub
fadd
cmp
lods
mov
pop
fiadd
cdq
mov
or
retf
sbb
xor
aas
add
or
pop
js
ins
pop
dec
clc
pusha
push
(bad)
push
cmp
popa
jbe
mov
push
stos
mov
popa
pop
fwait
les
adc
lods
loope
and
pop
pop
dec
jb
sub
out
xchg
out
sbb
in
xor
das
mov
inc
and
cdq
loope
imul
call
into
gs
mov
sbb
inc
xor
sti
sub
in
add
push
push
popa
cmps
rcr
sub
or
or
mov
cmp
pop
pop
cmp
push
pop
pop
pop
cmp
sbb
mov
movs
dec
fsub
cmps
xor
or
das
adc
cmp
cwde
out
icebp
adc
pop
push
rcr
sbb
pop
out
xchg
(bad)
inc
push
or
pop
in
adc
sbb
les
add
ins
cmp
mov
push
and
and
stc
sbb
add
fist
fcmovnbe
push
cmp
inc
bound
push
dec
sub
fs
(bad)
aad
add
jge
mov
pop
idiv
ins
xor
movs
aaa
mov
sub
push
push
rcr
or
(bad)
call
sub
add
ins
cmp
or
push
add
mov
nop
les
sub
inc
push
cld
add
nop
cmp
push
cmp
and
xchg
sbb
movs
mov
xor
int
ins
cli
adc
imul
stc
pop
adc
push
shl
rcl
(bad)
adc
xor
push
fwait
std
ror
mov
add
mov
pop
or
or
jmp
fsubr
jno
andps
sbb
ds
int
dec
sbb
rcl
jmp
test
aam
leave
stc
push
adc
lahf
inc
add
xchg
xor
pop
sahf
pop
ret
pop
adc
jmp
sar
mov
rcl
(bad)
sub
cmp
pop
adc
stc
in
dec
dec
adc
mov
and
js
xor
add
add
jmp
ror
jmp
les
mov
fnstenv
sub
or
add
inc
mov
pop
pop
fldenv
je
or
push
push
push
test
test
sub
add
pop
retf
push
mov
or
and
adc
in
or
inc
jns
push
shl
or
or
add
push
and
or
das
dec
or
sub
or
mov
loope
cdq
push
ds
sbb
in
pop
push
add
adc
popa
data16
inc
ror
add
dec
push
dec
cmp
add
nop
jno
test
adc
frstor
cmp
inc
inc
test
(bad)
daa
push
pop
inc
fild
mov
rcl
(bad)
mov
rcr
mov
jo
or
mov
imul
mov
and
mov
pop
lods
std
xchg
fild
jge
sub
popa
ss
in
sbb
(bad)
add
sbb
jno
xor
lock
dec
dec
inc
dec
push
lock
jmp
jmp
mov
cmps
inc
mov
sub
xchg
loop
and
and
out
(bad)
inc
inc
imul
loope
int3
repz
xchg
aas
inc
or
sub
icebp
sbb
add
stc
and
pop
test
add
cli
or
add
icebp
aas
les
stc
adc
bsf
dec
and
inc
fnstenv
test
pop
imul
loopne
(bad)
sub
push
sub
ror
push
sbb
inc
popf
pushf
jmp
and
das
out
mov
cmp
pop
add
in
cmp
adc
cmp
dec
jno
xchg
cmps
add
inc
enter
data16
pop
mov
test
ss
push
repz
daa
popa
lea
sbb
mov
mov
xchg
imul
push
cmp
test
imul
dec
(bad)
(bad)
mov
xchg
mov
xor
ret
daa
bound
mov
or
das
mov
adc
ja
mov
add
and
lahf
ret
inc
xlat
jbe
inc
cmp
sbb
loopne
in
stc
adc
jne
and
push
push
adc
jns
mov
mov
outs
adc
test
enter
leave
mov
jb
inc
inc
movs
(bad)
in
and
add
or
pusha
addr16
addr16
cmps
inc
sbb
cmps
scas
mov
dec
cmps
call
push
rcr
fild
addr16
xor
push
mov
or
leave
inc
cmp
or
pop
mov
mov
push
fnstenv
adc
jp
or
adc
sbb
or
or
mov
je
mov
aaa
movs
in
pop
push
das
cmp
inc
mov
xchg
or
sub
mov
loop
shr
mov
test
inc
push
retf
push
cmp
add
push
sbb
pop
ins
or
add
gs
gs
or
sbb
lahf
sub
arpl
push
jp
pop
cmp
cmp
shl
push
inc
pop
mov
and
jbe
inc
enter
adc
cmps
shl
jo
or
push
xchg
aas
add
xor
cmp
push
inc
retf
mov
xor
addr16
and
adc
test
int3
mov
or
cmp
xlat
sbb
sub
adc
stos
leave
mov
nop
out
mov
push
xor
pop
sbb
retf
xchg
lds
and
xor
hlt
sbb
fist
and
push
mov
in
daa
and
inc
scas
jp
test
xchg
mov
test
xor
jne
cmp
cmp
push
sti
in
mov
(bad)
dec
cmp
dec
dec
and
mov
xchg
call
cmp
xchg
sbb
ins
sbb
pop
xchg
mov
(bad)
mov
mov
jb
add
mov
inc
xchg
cmc
ret
adc
out
pop
cmp
xchg
sar
lea
and
xchg
push
or
add
addr16
jae
sub
mov
jno
pop
gs
pusha
add
lea
mov
movs
cmp
iret
inc
inc
or
xlat
push
jmp
cli
mov
and
inc
cmp
cwde
aaa
cmp
sbb
cmp
sbb
mov
cmp
icebp
push
inc
adc
in
or
shl
mov
push
xchg
shl
jno
sbb
mov
loope
loop
jmp
cmp
fcomp
jae
fmul
addr16
ins
mov
sbb
xlat
mov
adc
loope
fadd
add
icebp
and
mov
out
das
pusha
push
and
jo
mov
mov
out
call
push
jbe
jb
jo
out
cmovnp
and
enter
xor
adc
sub
loope
sbb
lods
ror
xor
jne
lock
sub
xor
aaa
adc
ret
mov
push
neg
pusha
xchg
loop
cmc
outs
xor
inc
or
ds
(bad)
ss
xor
cdq
shr
cmp
xchg
sar
xchg
push
cmp
(bad)
add
and
and
daa
pop
sbb
enter
lds
or
xchg
sub
jo
aam
(bad)
outs
imul
imul
add
mov
and
jg
sbb
mov
xor
or
dec
mov
or
push
dec
icebp
arpl
rol
add
jno
pushf
in
cmp
or
jge
add
xor
mov
xor
jno
xor
adc
fidiv
push
jecxz
movs
pushf
lea
loopne
add
add
pop
dec
(bad)
and
sbb
sbb
rol
cld
xor
and
xchg
(bad)
cmp
movs
repz
add
mov
clc
(bad)
ret
add
add
pop
loope
bound
adc
inc
push
pop
cs
(bad)
mov
inc
loopne
sbb
xchg
pop
inc
(bad)
push
add
cdq
inc
icebp
push
or
repnz
sbb
retf
ret
loope
adc
shl
pop
std
push
inc
mov
cdq
adc
xchg
and
shr
jmp
add
add
retf
fcom
mov
pop
add
stc
adc
mov
mov
cmp
cmp
js
jns
imul
and
cmp
dec
and
or
cmp
fcmovnbe
sbb
xlat
scas
and
adc
xchg
fcomp
adc
test
pop
mov
adc
(bad)
ret
mov
mov
inc
xchg
cmps
sbb
or
mov
test
lahf
mov
inc
nop
and
push
or
xchg
mov
mov
pop
adc
sub
mov
pop
fadd
mov
sbb
xchg
mov
cwde
jns
icebp
add
fnsave
dec
add
dec
cmp
nop
ret
rol
cs
adc
imul
or
jb
add
das
jmp
or
or
inc
(bad)
fdiv
xchg
dec
in
js
emms
inc
std
rol
test
enter
add
adc
jmp
out
int3
in
add
add
add
popf
scas
xchg
test
cmp
sar
aas
xchg
in
test
or
xor
sbb
add
xlat
jne
add
dec
jg
adc
mov
les
add
call
(bad)
fs
dec
pop
rcl
or
scas
inc
cs
xor
mov
pop
xchg
jno
dec
dec
push
xor
add
jmp
fsub
adc
rol
bound
and
and
out
fist
inc
add
ins
or
icebp
add
pop
and
test
sub
add
out
and
push
and
inc
lock
sbb
and
xchg
or
xchg
add
sub
add
stos
and
jl
nop
mov
or
fcomp
pop
xor
loop
jno
je
(bad)
adc
cmp
stc
pusha
mov
mov
mov
mov
xchg
adc
add
pop
add
sub
or
cmp
out
repz
sar
cmps
push
cmp
xchg
cmps
and
xor
add
call
shl
ds
call
js
sub
sub
push
adc
xchg
xor
mov
shl
es
(bad)
mov
or
sbb
inc
inc
mov
mov
lds
inc
mov
inc
jge
push
loopne
int
dec
cmp
jge
(bad)
mov
or
test
in
fs
addr16
(bad)
jmp
hlt
not
imul
dec
pop
adc
pop
test
push
fbstp
sub
or
jne
retf
and
mov
add
inc
jo
jb
xchg
jge
push
mov
sbb
mov
xor
stc
sahf
das
push
adc
out
ds
leave
add
inc
or
sbb
mov
mov
in
mov
cmps
dec
icebp
xchg
sbb
sbb
into
leave
add
outs
push
in
mov
add
add
sub
sub
cmp
cld
loopne
add
adc
mov
jno
sar
jp
test
add
ja
mov
sbb
outs
xor
add
gs
add
ins
xchg
sub
xor
or
jno
and
mov
and
dec
movs
push
call
imul
add
pop
cmp
adc
jbe
cmp
or
jne
mov
ret
and
pop
mov
int3
cmp
push
jnp
pop
xor
cmp
xor
jecxz
sbb
push
and
lods
xor
pop
and
(bad)
mov
fs
das
cld
and
rcr
lods
pop
dec
jnp
cli
in
push
mov
xor
cmp
inc
rol
sbb
ins
push
sbb
jnp
aam
ror
add
das
xor
inc
outs
stos
in
dec
cmp
leave
test
shl
or
int
pop
(bad)
enter
shl
jne
imul
in
jo
push
lods
cmp
pusha
in
ss
ret
adc
adc
es
idiv
xchg
jae
in
adc
gs
xchg
or
adc
sbb
ret
mov
or
or
xchg
cmp
(bad)
cmps
sub
(bad)
mov
cmp
pop
jne
call
into
pop
into
ror
xchg
pop
gs
sbb
dec
jne
mov
jne
dec
xchg
test
mov
xor
mov
push
push
std
lds
cli
sub
adc
pop
push
mov
or
or
out
retf
adc
push
mov
xchg
add
add
push
aad
mov
loope
add
cld
cmp
jl
das
jbe
out
in
sub
shr
push
add
sbb
pop
in
push
sub
sub
scas
popa
outs
cmps
and
imul
loopne
add
out
dec
fcomp
xlat
rol
and
push
(bad)
jnp
sub
test
or
test
push
rcl
ror
in
addr16
jns
sbb
outs
(bad)
pop
fnop
cld
rol
fidiv
ficom
pop
pop
int
in
push
call
rcr
mov
out
mov
stos
inc
cmp
cmp
lea
enter
adc
xchg
push
add
push
mov
mov
rol
xchg
jne
in
mov
mov
add
cwde
mov
xor
jno
mov
jecxz
mov
fptan
jbe
add
sbb
mov
and
in
in
loope
das
sub
jecxz
retf
out
and
loopne
and
xor
add
jg
or
sbb
adc
push
jbe
mov
sbb
fwait
cld
sar
jl
and
icebp
ror
pop
and
repz
push
or
push
and
sbb
jmp
fisttp
push
outs
push
loope
enter
adc
inc
xor
mov
mov
cmps
rol
(bad)
jne
jne
push
shl
mov
cmp
(bad)
(bad)
gs
sti
cmp
cmp
adc
push
ins
mov
sbb
add
or
(bad)
mov
bound
xor
icebp
loopne
js
or
test
fnstcw
ins
in
xchg
neg
sub
icebp
movs
jno
clc
sub
and
cli
sub
sbb
inc
loope
xchg
sbb
xchg
aad
in
jne
add
ja
push
cmc
inc
xor
(bad)
xchg
mov
sub
mov
pop
sbb
es
(bad)
ficom
loop
mov
movs
sub
cmp
adc
(bad)
fs
or
xor
xor
loop
fadd
out
cwde
fprem1
in
xor
sar
(bad)
in
pop
movs
shl
int
lods
pop
test
mov
xchg
movs
push
add
rcl
cmc
scas
dec
test
add
add
pop
les
sbb
adc
pop
fmul
adc
jns
or
inc
pop
mov
or
and
mov
push
cmp
aam
and
push
stos
and
mov
push
push
add
dec
(bad)
xchg
sub
mov
in
scas
mov
mov
test
dec
call
(bad)
ins
call
mov
sub
or
in
push
or
lea
cdq
stos
cmp
pop
call
mov
inc
imul
mov
movs
jno
push
pop
icebp
lods
add
mov
stos
outs
sub
push
shr
mov
imul
cld
mov
push
ja
jnp
ins
jne
xchg
lahf
xor
pop
retf
pop
inc
xlat
dec
add
in
add
cs
mov
inc
and
xchg
loope
jmp
sub
dec
add
inc
adc
scas
dec
jo
shl
shr
fimul
lea
adc
jne
cli
cmc
and
cs
and
(bad)
and
cli
push
and
(bad)
lea
sbb
add
mov
scas
push
leave
inc
or
and
and
dec
push
adc
outs
xchg
inc
cmp
or
pop
loop
arpl
stc
push
mov
cmc
mov
add
cmp
jmp
jmp
(bad)
jge
add
sbb
sub
iret
(bad)
movs
fld
dec
retf
adc
(bad)
outs
adc
pop
or
out
nop
xor
ret
adc
sub
stos
pop
jnp
ret
sbb
in
xor
mov
aas
pop
ficomp
pop
in
rol
xchg
dec
enter
lds
cmp
and
popa
xor
fidivr
cmp
jmp
jbe
pop
adc
add
mov
(bad)
add
or
jne
adc
outs
dec
pop
fidivr
cmp
mov
int
cmp
inc
sbb
push
mov
imul
aaa
mov
and
push
cmp
xchg
repnz
jno
int
cmc
test
scas
sub
jo
imul
mov
inc
aam
adc
cdq
test
or
mov
sti
fmul
mov
pop
mov
jb
pop
jae
and
add
inc
cdq
daa
gs
stc
inc
add
xchg
leave
inc
cmp
mov
cld
cdq
mov
xor
fstp
and
dec
mov
movs
out
or
mov
pop
adc
mov
lods
sub
mov
xor
sar
inc
adc
pop
sub
or
sub
pop
add
test
xor
lock
popa
xor
push
or
pop
sub
sub
mov
pop
pop
loopne
popa
or
call
pop
lds
push
or
xchg
or
fld
inc
dec
mov
and
pop
cmps
sub
rcl
pop
push
mov
add
outs
mov
inc
jns
jge
imul
dec
dec
hlt
in
rcr
pop
jae
bound
or
xchg
push
mov
mov
and
test
test
pop
sub
cs
dec
and
je
fnstenv
dec
int3
(bad)
dec
cmps
pop
rol
sbb
add
outs
add
xchg
ins
sbb
cs
add
push
mov
push
or
imul
pusha
bound
call
mov
inc
mov
pop
cmp
imul
add
push
jae
pop
gs
inc
das
lea
sbb
hlt
push
push
inc
fbstp
mov
sbb
inc
dec
adc
and
mov
dec
sbb
rcl
jne
add
(bad)
or
mov
and
push
mov
pop
imul
jge
or
jg
and
jecxz
ds
lahf
sub
dec
jb
cmp
pop
stc
call
push
mov
xor
mov
xchg
stc
or
add
ss
in
sahf
rcl
dec
xchg
dec
add
adc
or
dec
pop
push
cs
enter
push
dec
jno
mov
adc
(bad)
mov
outs
mov
cmp
sub
xchg
or
mov
push
mov
shl
jmp
add
add
mov
add
push
in
mov
dec
lock
imul
lahf
push
inc
loop
movs
dec
or
mov
fisub
sbb
dec
inc
xchg
or
int
cmp
inc
inc
imul
xor
stos
neg
ins
outs
lds
popa
add
push
cmp
nop
inc
or
inc
in
(bad)
push
push
bound
sbb
popa
mov
sbb
mov
ins
adc
jbe
lock
pop
stos
or
rcr
adc
adc
or
xor
neg
mov
inc
sbb
dec
dec
in
push
int
call
vpcmpgtd
add
shl
add
dec
bound
jbe
(bad)
idiv
jne
pop
es
cmp
ins
sbb
adc
outs
ret
mov
arpl
xor
stos
enter
ss
in
call
inc
dec
xor
test
add
dec
push
clc
or
xor
push
cmp
div
(bad)
icebp
sub
dec
xchg
ret
push
xchg
jo
jecxz
(bad)
mov
int3
add
push
imul
push
fs
xor
repz
xor
mov
sbb
repz
jnp
inc
fs
imul
push
rol
adc
sub
mov
cmp
jno
mov
cmp
xchg
mov
pop
adc
pop
gs
es
jg
in
adc
es
repnz
cmp
(bad)
fxch
inc
(bad)
sub
mov
mov
leave
pop
call
fmul
mov
adc
push
fld
pop
inc
push
xchg
cdq
xor
sahf
clc
mov
mov
or
sub
sti
ret
adc
(bad)
push
pop
cmp
rcr
dec
aam
ins
push
sysret
push
and
pop
out
test
xor
test
mov
mov
add
sub
cmp
adc
xor
and
xor
xor
movs
lock
nop
fild
pop
int
xchg
ja
mov
sub
mov
mov
(bad)
push
inc
sub
or
lods
std
push
mov
or
pop
xchg
pop
ret
daa
js
je
sub
aam
jo
jo
fiadd
or
adc
ds
in
sbb
in
aas
mov
leave
and
cmp
in
dec
inc
push
icebp
add
(bad)
ds
add
push
or
add
add
in
xchg
sub
or
add
sbb
push
movs
nop
loope
jge
or
imul
dec
or
push
cmp
ja
cmp
dec
push
js
add
mov
fwait
data16
xchg
mov
mov
add
sub
std
or
mov
add
in
xor
icebp
sub
(bad)
sub
add
sbb
inc
xor
pop
push
pop
adc
dec
pop
in
test
bound
daa
sub
push
cmc
jecxz
sbb
mov
shr
sbb
jo
cld
mov
sbb
mov
dec
loope
adc
inc
jmp
lock
out
add
mov
inc
add
mul
inc
mov
add
ret
inc
cmp
cmc
jne
mov
mov
sar
jle
push
mov
jmp
mov
fdivr
mov
(bad)
dec
pop
add
push
jbe
sub
sub
push
frstor
jo
cdq
jne
mov
imul
in
mov
loope
jns
add
icebp
or
xor
(bad)
repnz
sbb
push
or
or
dec
stos
or
jnp
sbb
cs
push
dec
add
push
adc
hlt
mov
or
in
je
(bad)
push
mov
push
(bad)
(bad)
adc
add
aas
dec
dec
xchg
push
push
(bad)
inc
sbb
enter
popf
ds
adc
fdiv
sbb
fst
in
pop
retf
sbb
add
stos
in
sbb
push
jmp
ins
mov
mov
add
mov
out
and
mov
ins
sbb
mov
push
sub
push
out
adc
ja
ds
imul
hlt
sbb
add
icebp
mov
push
mov
int3
sar
mov
(bad)
fdivr
jmp
adc
xchg
add
es
in
sub
and
adc
ror
test
push
aaa
jmp
xchg
cdq
icebp
add
mov
adc
in
mov
add
xor
fwait
mov
or
aam
cmp
push
mov
rcl
popa
cmps
jge
or
mov
mov
arpl
mov
pusha
jne
sbb
lock
cmp
adc
inc
movs
cmp
mov
add
lea
jno
sbb
(bad)
mov
jne
add
dec
lea
cmp
retf
pop
cmp
jne
jmp
push
outs
ficom
jns
push
retf
int
xchg
(bad)
mov
nop
stc
or
or
or
outs
outs
popa
or
bound
pusha
leave
xchg
mov
dec
sub
dec
enter
jno
leave
ret
xchg
icebp
cmp
sbb
pop
push
dec
and
inc
push
rol
xor
mov
daa
test
and
inc
std
pop
fs
jb
jne
inc
dec
sbb
xor
std
fild
sub
or
imul
push
lods
ret
ret
sub
cmp
lods
lock
cld
sub
jnp
sbb
inc
les
ja
out
jmp
sub
fist
adc
adc
cmp
into
and
movs
add
fnstsw
je
mov
pop
pushf
xor
jne
mov
js
xor
int3
dec
add
dec
dec
add
(bad)
fwait
movs
test
mov
inc
dec
dec
dec
inc
push
dec
loopne
jle
mov
mov
cmc
test
cmp
inc
xor
std
and
mov
cs
(bad)
push
imul
cmps
fld
sub
cmp
jecxz
add
mov
push
fild
fwait
js
sub
es
bound
inc
cdq
adc
iret
mov
mov
mov
fimul
mov
inc
xor
inc
add
mov
jne
loope
inc
inc
aas
inc
(bad)
int
xor
movs
mov
xchg
inc
or
xchg
aad
xchg
in
test
enter
push
add
pop
out
mov
push
inc
or
cmp
mov
ins
jnp
jge
rcr
xchg
inc
dec
push
sahf
sbb
(bad)
cdq
xlat
(bad)
loop
inc
loope
repz
pop
pushf
xchg
inc
setp
mov
sub
jbe
fiadd
mov
cmc
dec
loope
jae
cmp
sbb
adc
cmp
jmp
xor
mov
pop
jbe
pop
int
in
push
popa
inc
ins
ins
jbe
popf
mov
add
mov
iret
add
popf
xchg
fs
push
icebp
inc
and
xor
out
cmp
adc
and
cdq
or
(bad)
pop
fld
dec
mov
dec
rol
clc
rol
movs
xchg
xchg
aas
icebp
xchg
adc
test
and
lahf
mov
inc
or
and
bound
jne
lods
fisubr
rol
or
dec
push
sub
sub
pop
(bad)
pop
jne
xlat
inc
inc
and
mov
lods
fld
test
mov
pop
or
and
ins
movs
les
adc
adc
bound
(bad)
test
inc
repnz
iret
fld
mov
add
sub
mov
rol
add
xor
jne
mov
ret
add
fidivr
and
pop
and
sub
enter
and
and
sub
sbb
sbb
mov
inc
add
and
sub
ja
dec
pop
test
mov
sbb
push
push
pusha
xchg
bound
lea
jno
xor
out
xchg
or
fucomp
inc
mov
fs
rol
cmp
ret
or
mov
stos
or
adc
cmp
shr
pop
loope
jb
xchg
adc
adc
ds
inc
add
cli
(bad)
cmps
sbb
pop
mov
xchg
lock
and
mov
or
repz
xor
sbb
pop
test
out
lods
push
sbb
xchg
ja
lock
cmp
jae
das
and
adc
add
(bad)
mov
mov
sub
and
ins
(bad)
jno
or
xor
enter
add
cs
xor
jns
and
lock
cmp
add
adc
repz
adc
and
xor
or
call
dec
mov
sbb
xor
fcomp
xor
fcom
shl
push
movs
or
sbb
cmp
add
stos
adc
jae
mov
adc
mov
dec
mov
xor
push
(bad)
aad
pop
and
pop
xlat
add
pushf
repz
inc
xor
test
push
xor
call
popf
add
xor
inc
add
sbb
fiadd
mov
or
sub
push
in
lods
ja
push
xchg
retf
stc
stc
add
mov
push
mov
inc
push
cmc
fdivr
imul
cmp
cmp
inc
push
fist
xchg
hlt
cmp
popa
jp
mov
iret
pop
cmp
xchg
mov
cld
xor
or
jb
fistp
out
push
daa
push
xor
cmp
sbb
jo
data16
cmp
outs
mov
mov
out
adc
cmp
lods
in
sbb
shr
ds
sbb
in
xchg
movs
sub
jns
fld
mov
xor
adc
or
into
push
pop
add
loop
pop
push
ds
push
push
pop
push
xor
(bad)
add
add
push
xor
sub
jecxz
in
lods
cmps
xor
loopne
fld
cmps
inc
ror
jno
daa
fistp
sub
xchg
inc
aas
sbb
jle
cmp
test
sub
jbe
into
mov
inc
fnsave
in
jbe
(bad)
in
popa
sub
sbb
adc
mov
fsubr
inc
pop
aam
in
ss
mov
in
sbb
push
stc
dec
ja
icebp
or
rol
es
or
adc
push
inc
es
neg
adc
ja
ins
jne
and
fcomp
clc
ficom
jae
mov
fs
popa
popf
xor
or
stos
mov
mov
in
inc
or
jae
js
jmp
dec
loope
stos
inc
sbb
int
imul
add
jno
ins
hlt
or
jae
fisttp
outs
sub
xchg
in
push
fwait
pop
retf
and
in
push
repz
push
shl
iret
mov
xlat
xor
xor
repnz
add
add
es
(bad)
arpl
push
or
mov
dec
cmp
jno
sti
xor
movs
xor
inc
(bad)
std
stc
add
sub
pop
ret
inc
ss
and
and
stos
xchg
mov
adc
pop
or
in
and
das
add
dec
jo
and
fld
enter
cmp
adc
jmp
pushf
enter
mov
cmp
retf
fld
dec
mov
sbb
push
mov
sahf
ror
test
xor
push
test
imul
daa
jns
ds
mov
pop
adc
adc
cmp
mov
adc
jbe
push
aaa
sbb
xor
and
cmp
popa
cmp
inc
pushf
call
jmp
inc
add
adc
jo
push
sub
jbe
out
nop
and
mov
sbb
popf
sub
sub
in
push
push
mov
jns
out
mov
adc
popa
jmp
sub
push
and
(bad)
fst
repnz
dec
cmp
pop
sub
sub
pop
inc
sbb
pop
push
xchg
push
hlt
rol
in
and
xchg
dec
jmp
sub
mov
xchg
mov
pop
jg
mov
push
push
test
and
in
cmp
push
cli
adc
addr16
mov
and
adc
bound
cmps
cmp
imul
sub
addr16
ret
add
lahf
int3
and
lds
ror
xor
sub
cmp
mov
xor
test
out
push
pop
mov
icebp
ret
xor
xor
add
clc
hlt
mov
fcomp
ja
pop
hlt
and
xor
sbb
xchg
aaa
mov
imul
sub
or
push
sub
std
mov
cs
xlat
dec
loop
into
loopne
ret
xor
dec
pop
mov
rol
(bad)
out
sar
add
push
add
cmp
outs
adc
cmp
jbe
cmp
into
cmps
jno
sbb
dec
sbb
ins
or
and
push
mov
(bad)
push
inc
cmps
push
adc
push
cmp
icebp
mov
rol
pop
jae
(bad)
popf
jp
xchg
enter
push
test
mov
cld
push
fnstsw
popf
mov
gs
mov
xor
xchg
jb
and
dec
out
mov
lods
test
jbe
sub
inc
jg
push
lods
adc
scas
mov
mov
mov
add
push
jno
sub
es
loop
inc
cld
mov
mov
enter
xchg
add
neg
lea
sar
inc
test
or
retf
cmp
inc
mov
sbb
movs
mov
sahf
ins
sub
add
dec
pop
addr16
push
cs
jae
push
fst
inc
imul
jno
out
fiadd
in
adc
dec
and
cs
popa
cdq
dec
or
enter
inc
in
sub
cmps
sub
mov
and
fst
loop
test
push
ficom
pop
fld
and
rcl
mov
es
mov
int3
pop
adc
mov
mov
shl
mov
xchg
push
and
bound
mov
mov
sub
mov
cs
or
sub
mov
stc
adc
jnp
retf
dec
cmp
cmp
in
pop
data16
lea
sub
dec
push
jno
mov
and
or
sbb
sub
sub
sbb
adc
sbb
sbb
jge
adc
jno
or
call
and
pop
adc
adc
mov
fidivr
pop
fistp
rcl
push
pop
pop
or
data16
cmps
mov
in
ds
push
mov
int
push
pushf
add
push
or
jnp
mov
movs
jb
into
and
and
pop
sbb
out
mov
adc
add
pop
xchg
clc
icebp
pop
mov
mov
push
or
add
inc
jbe
mov
inc
pop
imul
or
adc
jb
or
fld
or
add
xchg
sar
jns
ret
mov
imul
in
add
mov
jne
repnz
in
repnz
or
push
test
bound
sbb
fst
xchg
sbb
or
and
push
leave
mov
cwde
icebp
jl
jmp
cmp
jo
sub
inc
test
popa
lock
jne
test
loopne
push
push
or
pop
cmp
jbe
leave
fstp
cmp
mov
adc
push
mov
hlt
dec
icebp
cmp
dec
icebp
nop
cmc
sbb
jo
xor
stos
xchg
ror
fld
mov
sbb
test
sbb
mov
push
pop
scas
dec
sub
jp
fnstsw
fldenv
sub
jae
pop
mov
pop
jb
movs
lods
(bad)
and
mov
xchg
add
test
inc
es
jl
test
pop
mov
xor
jns
xlat
or
loope
pop
add
in
push
fidiv
sub
xlat
and
popf
shl
popf
or
out
retf
inc
mov
pop
(bad)
into
je
loop
adc
es
out
rcl
xor
dec
jmp
sbb
and
(bad)
jno
(bad)
neg
xor
test
lods
inc
lods
add
nop
jno
mov
fsubr
inc
lods
mov
aad
mov
cdq
sub
leave
das
jmp
pop
nop
loop
pop
mov
(bad)
ins
sbb
shr
push
ds
push
fnstcw
adc
shl
xor
daa
push
arpl
popa
stos
fcom
lock
pop
push
xor
mov
mov
push
push
cwde
xor
rcl
out
imul
test
arpl
icebp
jnp
pusha
jp
cmp
and
pop
xchg
and
mov
jnp
add
in
adc
pop
sbb
mov
jmp
adc
test
enter
dec
jp
cmp
push
jns
mov
mov
inc
or
lahf
mov
cmp
push
jbe
xchg
ds
pop
mov
arpl
mov
mov
fild
sar
imul
mul
sbb
test
mov
xchg
(bad)
and
hlt
or
cmp
mov
imul
and
iret
xchg
fadd
rol
jp
or
pop
jmp
mov
test
js
je
or
adc
adc
xchg
dec
push
add
dec
daa
pop
pop
sbb
lea
add
inc
dec
(bad)
leave
cmp
dec
adc
int3
and
js
pop
hlt
scas
mov
jnp
daa
push
icebp
add
or
or
sbb
or
sti
dec
cmc
ds
cmp
add
push
or
and
fdivr
inc
pop
icebp
add
stc
push
inc
xor
scas
gs
xor
inc
js
std
xor
jbe
xor
or
ret
and
stos
add
test
loope
or
sti
add
jle
add
in
mov
sub
rol
sbb
fcom
mov
(bad)
xor
enter
push
sti
das
add
aaa
mov
xor
clc
mov
loope
sbb
inc
fimul
les
lods
icebp
jo
sti
mov
pop
xor
nop
in
pop
ffreep
test
mov
xor
hlt
inc
mov
sbb
or
sbb
scas
ror
fnstenv
add
pop
sbb
fldcw
pop
mov
inc
pop
pop
shr
mov
and
loop
stc
sub
mov
popa
bound
adc
inc
pop
icebp
add
adc
pop
imul
test
xchg
push
std
or
inc
jbe
pop
cmp
push
inc
lock
pop
push
fsub
popf
test
jmp
sub
int3
dec
mov
sub
push
sub
jp
(bad)
cmp
cs
xchg
inc
mov
sub
mov
test
inc
in
xor
pop
push
ret
xor
xchg
adc
ins
add
push
push
sbb
addr16
dec
aas
and
push
in
pusha
mov
mov
faddp
adc
and
xor
and
mov
(bad)
int
xchg
sub
adc
ret
dec
add
clc
xchg
jns
aad
adc
shl
push
mov
add
in
add
add
pop
mov
scas
cli
ins
or
sbb
in
push
or
call
xchg
or
stos
push
mov
or
rcr
pop
mov
cdq
dec
xor
fst
es
cli
cmps
and
pop
hlt
and
xor
pop
dec
push
and
dec
mov
cld
jne
inc
lods
push
ds
push
dec
addr16
mov
xor
adc
test
fpatan
push
loop
fisubr
bound
cdq
fdivr
cmp
xchg
loopne
push
adc
inc
(bad)
mov
rcr
fisttp
popa
into
push
mov
xchg
adc
jge
mov
cwde
sar
push
add
sub
mov
aad
sbb
or
jp
adc
xchg
or
jne
push
movs
jno
mov
enter
mov
mov
imul
dec
cmp
outs
mov
fdivr
cmp
jne
xchg
cmp
enter
adc
stos
sbb
push
loope
sub
aas
popa
data16
and
pop
scas
lea
jmp
inc
mov
jecxz
lods
xchg
test
add
push
mov
movs
push
inc
inc
mov
mov
movs
lea
dec
add
and
adc
jecxz
imul
sbb
xchg
pop
clc
push
add
mov
popf
aas
sub
test
mov
push
xchg
lds
aaa
int
jecxz
push
test
test
out
ret
dec
mov
mov
push
test
add
jg
and
dec
sub
jns
push
jns
pop
aaa
mov
ins
inc
loopne
and
xchg
mov
pop
test
popa
cwde
repnz
push
add
or
pop
or
jmp
call
inc
mov
mov
shrd
movups
pop
enter
popa
daa
or
jae
mov
push
rcl
into
xor
jmp
or
jmp
pop
xor
adc
mov
xchg
xor
sbb
jo
push
xchg
enter
push
and
pop
xor
mov
es
int
dec
add
or
jns
mov
xchg
jno
adc
dec
sub
daa
push
add
xor
mov
adc
test
xor
sti
adc
add
add
repnz
inc
add
xchg
cmp
add
cmp
cmp
(bad)
out
leave
mov
repz
inc
mov
dec
pop
or
xchg
inc
mov
inc
les
add
mov
gs
add
retf
ins
sub
dec
loope
xchg
out
pop
cmp
cld
out
imul
js
inc
and
les
mov
pop
ins
or
and
xchg
add
repnz
and
push
push
lds
inc
sub
and
inc
lods
ret
rcl
cmp
fxch
pop
pop
pop
and
imul
push
jmp
xor
inc
xchg
dec
out
icebp
fnsave
push
sbb
sbb
or
mov
push
xchg
out
in
inc
cmp
call
popa
in
and
or
fst
xchg
ss
data16
enter
sbb
adc
jl
push
cmp
and
xor
pop
aas
retf
imul
je
push
push
mov
ss
(bad)
jmp
xor
scas
inc
push
sahf
lea
fiadd
jmp
(bad)
ds
push
ror
imul
dec
jno
mov
adc
popa
sub
inc
xchg
xor
jnp
push
leave
movs
test
cmp
add
ins
or
mov
push
in
and
pop
popa
adc
shl
pop
jle
int3
dec
leave
leave
mov
fwait
cmc
pop
xchg
aad
cdq
sub
adc
or
and
cmp
pop
imul
fldcw
adc
xorps
dec
inc
mov
pop
pop
or
aad
and
mov
ret
inc
in
mov
icebp
gs
in
sbb
mov
add
cmp
or
mov
mov
inc
sbb
fldcw
and
cs
js
xor
les
inc
inc
outs
sbb
std
adc
test
adc
sbb
loop
jmp
sbb
mov
pop
icebp
mov
data16
xor
or
sub
inc
dec
mov
pop
pop
or
add
dec
xor
dec
mov
and
adc
jno
mov
mov
pop
or
in
and
inc
scas
adc
xchg
and
or
pop
dec
(bad)
inc
push
rol
adc
dec
pop
sbb
push
fstp
cmp
sub
mov
push
gs
xor
or
xchg
icebp
js
inc
mov
mov
imul
push
and
lds
xor
xchg
fistp
sub
pop
cmp
xchg
or
cmp
jo
jmp
and
push
fld
fadd
aas
lods
daa
in
in
jae
icebp
icebp
push
movs
cmp
rcr
rcr
xor
repnz
mov
inc
adc
push
mov
xor
and
push
imul
and
cmc
or
outs
cmp
dec
cmp
xchg
pop
add
stc
in
sbb
enter
xchg
outs
push
sub
mov
cwde
cmps
pop
mov
pop
mov
lock
cmp
mov
xchg
shl
arpl
aaa
aaa
(bad)
hlt
dec
test
jnp
adc
shr
sub
add
dec
cmp
fidivr
jb
test
loope
movs
xor
dec
adc
or
inc
mov
jo
pop
xchg
mov
inc
pop
sbb
xchg
sbb
adc
mov
sbb
sbb
ficom
push
mov
or
xor
dec
cmp
int3
cwde
cwde
(bad)
std
mov
icebp
mov
add
adc
into
es
aas
(bad)
daa
and
imul
sub
push
jmp
jmp
pop
ret
and
adc
(bad)
das
sbb
xchg
pushf
daa
dec
sbb
adc
ins
cdq
pop
inc
cmp
rcr
lods
loopne
mov
xlat
mov
es
inc
cmp
loopne
sar
push
fs
cdq
xlat
sub
test
fmul
lods
push
(bad)
xchg
adc
or
test
ds
cmp
or
or
add
psrlw
xchg
inc
dec
adc
mov
cmps
imul
popa
xchg
jp
pushf
xlat
fistp
add
xlat
ret
mov
js
add
mov
adc
dec
add
popf
mov
pop
adc
inc
add
xchg
add
adc
cmps
inc
jo
adc
rcl
sub
aaa
cmp
mov
push
mov
mov
mov
rcr
mov
jo
pushf
add
xor
mov
js
icebp
push
inc
dec
inc
pop
sbb
or
dec
push
in
pop
in
adc
in
add
xor
lods
xchg
mov
cli
xor
(bad)
and
mov
loope
add
sbb
sub
cdq
cmp
pop
mov
push
cmps
and
jno
rol
sti
adc
(bad)
test
inc
stos
adc
jae
fdivr
push
rcr
mov
icebp
ss
sbb
xchg
ror
jbe
adc
sbb
adc
add
cmp
js
pop
xchg
adc
mov
loope
mov
or
mov
adc
adc
or
add
popa
xchg
push
loope
sub
adc
jmp
jge
sub
adc
ja
add
adc
adc
push
add
dec
push
test
mov
ins
inc
adc
xchg
fst
stos
xor
mov
icebp
xchg
loop
or
(bad)
push
or
inc
arpl
dec
jbe
and
imul
in
dec
push
daa
or
add
sbb
push
adc
(bad)
xor
test
push
repz
mov
adc
cmp
(bad)
adc
dec
push
sbb
mov
js
jp
test
sbb
cs
cmp
not
jge
adc
inc
pop
jg
jge
adc
mov
dec
outs
jbe
inc
les
outs
cwde
and
mov
ins
jbe
pop
hlt
and
inc
add
outs
arpl
push
cmp
lgdtd
push
xchg
popf
outs
or
and
push
repnz
add
xor
or
arpl
ins
sbb
xchg
adc
dec
dec
js
pushf
add
movs
inc
(bad)
and
adc
inc
mov
out
mov
das
push
push
or
mov
fdiv
sbb
gs
outs
fs
in
ja
enter
sar
cmp
push
stos
xchg
and
lods
iret
push
mov
push
cmp
add
sub
xor
(bad)
mov
xor
and
dec
inc
(bad)
or
cmps
jecxz
xchg
test
push
fnstsw
or
bound
and
bound
or
and
sbb
push
add
mov
enter
aas
dec
aas
pop
fadd
inc
out
inc
jg
add
inc
jne
lods
xor
fisttp
push
data16
sub
inc
ins
fwait
cmps
test
adc
loopne
fwait
ins
fcom
js
pop
or
fcom
rol
mov
push
ficomp
xor
xor
ins
inc
dec
sbb
inc
leave
mov
call
xor
retf
xor
or
and
cli
inc
sub
int3
retf
addr16
dec
dec
pop
popf
push
mov
dec
ret
fwait
ins
lahf
or
fstp
outs
cdq
adc
repnz
dec
inc
add
dec
add
xor
sbb
out
cmp
dec
inc
nop
or
mov
dec
loop
and
adc
imul
jbe
push
shl
(bad)
mov
(bad)
push
out
out
rol
sub
cmp
add
mov
cmp
in
pusha
or
dec
fbld
cwde
pop
dec
inc
pop
add
imul
gs
add
jns
add
inc
or
or
and
cmp
pop
movs
dec
imul
and
xchg
cmp
mov
(bad)
cs
push
aaa
out
xchg
push
or
xchg
dec
sub
mov
jmp
xchg
push
aam
add
int3
inc
pop
mov
fs
mov
sbb
das
or
dec
popf
mov
inc
fldenv
(bad)
or
ins
fnstsw
mov
inc
pop
jae
dec
xor
push
jo
vpsubsb
jo
sbb
mov
inc
sbb
ins
fisttp
xchg
push
(bad)
push
(bad)
push
lock
mov
sbb
cmp
adc
adc
xchg
add
adc
hlt
loope
push
dec
xchg
xchg
or
retf
inc
push
add
inc
pop
adc
sbb
add
aas
popa
push
sub
cmp
addr16
out
stos
fsubr
add
or
adc
lods
pop
inc
and
mov
scas
adc
pop
adc
xchg
push
xchg
xor
iret
loopne
push
or
(bad)
popa
cmp
mov
push
jge
popf
xor
leave
add
test
test
in
out
sbb
outs
mov
mov
inc
jp
adc
stc
push
cmp
(bad)
sub
rol
and
std
or
in
loope
push
inc
add
imul
mov
add
push
call
sbb
out
jnp
add
jmp
xor
bound
pop
leave
out
mov
sbb
xchg
jl
iret
inc
mov
inc
or
inc
fs
ss
fwait
movs
inc
push
test
cdq
adc
sub
or
xchg
std
push
inc
inc
imul
pop
aas
cmp
inc
add
jno
jno
cwde
mov
pop
or
or
ja
push
inc
into
xor
add
ss
fmul
outs
push
addr16
inc
dec
je
add
(bad)
sbb
mov
ficom
push
inc
jo
outs
popf
mov
and
pop
sbb
or
dec
mov
mov
mov
and
push
xor
imul
jo
or
sub
push
push
xchg
dec
test
movhps
and
adc
xor
push
xchg
mov
cmp
mov
add
or
adc
push
sysret
and
add
cs
xchg
or
in
cdq
jno
adc
enter
in
push
or
pop
inc
pop
mov
ror
in
leave
adc
xchg
cmps
push
retf
jmp
sahf
adc
push
mov
aad
test
inc
rol
adc
xchg
fwait
jb
and
and
mov
daa
cmc
aas
adc
stos
xchg
fst
call
aaa
dec
and
pop
or
retf
xor
cdq
setbe
push
and
add
cmp
inc
inc
inc
mov
dec
dec
add
ret
dec
dec
dec
push
adc
pop
pop
pop
pop
inc
ret
outs
adc
push
enter
xor
fdiv
jmp
pop
jmp
das
mov
mov
push
mov
sbb
jmp
push
(bad)
xor
lock
sbb
out
jmp
mov
hlt
and
add
inc
add
mov
or
jle
cmps
in
ret
and
in
call
cmps
xchg
fucomi
in
dec
pop
push
or
inc
pop
push
(bad)
test
pop
repnz
jle
test
stc
div
lods
sbb
xchg
mov
cld
or
or
add
ficomp
jle
aam
xchg
ror
fmul
or
mov
jns
mov
and
push
sbb
test
(bad)
cmp
mov
mov
sub
das
jmp
dec
adc
(bad)
fdivr
gs
stos
ss
pop
in
push
or
outs
daa
ja
dec
repz
cmp
inc
push
rcr
call
test
sub
lahf
pop
cmps
mov
clc
xor
fs
mov
mov
jnp
aaa
dec
xchg
retf
jnp
add
cmp
out
xor
and
jae
sbb
popa
pop
adc
hlt
xor
imul
jmp
popa
pusha
mov
jb
sub
jo
pop
add
mov
pop
adc
or
jp
and
das
add
jl
les
shr
push
cmp
jne
repz
inc
enter
sbb
sub
ss
dec
adc
fnclex
lahf
cdq
push
xor
shl
xor
and
cmp
popa
sub
or
sub
mov
jne
(bad)
(bad)
push
xlat
jp
dec
jmp
cld
in
or
push
add
xchg
nop
inc
and
fldenv
xchg
test
push
pop
mov
out
sbb
cld
push
add
add
add
adc
adc
inc
xchg
sbb
rcr
in
pop
add
xor
cmp
add
cmp
js
sbb
imul
mov
jmp
bound
add
cmp
pop
enter
mov
call
fadd
imul
xchg
shl
popw
pop
push
xchg
mov
sbb
and
loopne
adc
mov
icebp
fs
daa
pop
inc
jmp
adc
aam
or
cmp
js
jno
fsubr
pop
in
pop
mov
in
pop
mov
push
in
outs
xor
push
ss
adc
out
add
pop
leave
sbb
ja
test
xlat
adc
out
mov
jb
adc
mov
das
xor
sub
inc
and
and
xor
dec
and
aam
xchg
test
aad
jae
gs
adc
xor
jo
mov
sbb
mov
dec
pushf
ja
jne
xchg
pusha
jne
add
jae
mov
inc
pop
cmp
dec
popf
(bad)
leave
xchg
adc
and
xlat
fbld
push
mov
or
xchg
sbb
bound
fs
inc
jno
sub
mov
jae
xor
add
rcl
iret
dec
push
ins
cmp
xor
movs
add
pushf
push
mov
cmp
dec
ffreep
or
(bad)
aas
and
mov
lods
(bad)
and
sub
fidivr
xor
test
dec
or
or
add
xor
inc
or
mov
cmp
cmp
nop
or
out
ficom
xchg
pop
adc
inc
nop
push
inc
pop
pop
aaa
lock
or
xor
xor
daa
int
xchg
xlat
enter
add
add
ins
mov
inc
add
pop
loope
xlat
mov
in
sbb
pop
sbb
dec
out
in
mov
and
movs
aas
outs
jmp
dec
sub
jg
test
lahf
rol
push
sub
sqrtps
and
inc
lods
cmp
sub
retf
inc
pushf
pop
test
mov
or
inc
rol
stc
pop
inc
add
sti
cli
mov
sbb
in
add
cmp
or
jg
loope
stc
fucomp
inc
fsubr
dec
mov
std
test
pop
sub
adc
arpl
push
cld
xchg
xor
jbe
stc
imul
or
pop
in
mov
sub
mov
or
pop
sub
fwait
mov
(bad)
movs
inc
jo
int3
inc
call
dec
inc
in
push
mov
cmc
adc
aaa
jecxz
es
call
in
jno
add
cmps
xchg
pop
mov
add
es
xchg
call
movs
fnsave
push
popf
pop
retf
cmp
pop
adc
add
mov
clc
mov
shr
sub
xchg
sbb
mov
aam
rol
hlt
mov
fsub
in
loop
adc
in
cmps
or
mov
dec
sub
push
dec
mov
pop
push
pop
push
call
xor
and
ss
sub
loop
pop
xchg
icebp
cmp
jo
(bad)
fcomp
and
ret
in
iret
adc
push
in
sbb
or
inc
fist
pop
jmp
shr
pop
dec
test
inc
es
xor
jb
das
in
sbb
adc
mov
sbb
ffree
(bad)
lds
popf
test
lock
gs
sub
adc
sbb
inc
add
popf
sub
dec
ins
pop
or
push
std
and
jmp
cld
fistp
or
xchg
leave
add
mov
dec
dec
popa
les
aad
pop
pop
or
adc
leave
fs
push
add
pop
cmp
jne
mov
mov
sbb
inc
popa
jmp
pop
push
xor
or
pop
(bad)
imul
push
xor
imul
shl
ret
js
adc
in
ins
cmp
sbb
fs
(bad)
aam
mov
mov
stc
adc
fcomp
fbld
arpl
adc
mov
push
and
mov
lea
aaa
rcr
jnp
fiadd
lods
dec
and
out
cmp
and
stc
pusha
mov
fdivr
pop
xor
daa
mov
pusha
cmps
sahf
fxch
in
xor
or
jbe
jae
sbb
(bad)
sub
add
hlt
ud2
leave
in
or
fst
or
fldenv
(bad)
push
into
add
popf
push
imul
inc
xor
test
mov
or
and
les
xor
pop
sbb
jb
sahf
das
sbb
div
ins
in
test
add
add
mov
xor
pop
and
add
aad
mov
icebp
add
test
xor
xchg
cmp
cmc
xor
add
xor
or
(bad)
sbb
mov
outs
adc
ret
(bad)
jle
adc
sar
test
add
sbb
and
in
ret
and
scas
popf
ror
sub
xchg
pop
fisubr
cmp
sbb
jns
sahf
xor
or
dec
add
push
cmp
adc
mov
imul
out
and
fist
push
xor
sbb
pop
inc
or
dec
sbb
ins
jecxz
test
add
mov
fistp
call
adc
mov
inc
or
nop
and
push
jp
and
fdiv
push
ret
hlt
add
mov
mov
adc
dec
or
imul
dec
enter
mov
lea
inc
pop
das
xchg
or
push
jecxz
dec
sub
cmc
repz
loope
add
mov
test
sub
inc
push
into
mov
xchg
ja
mov
in
sbb
int
mov
sub
xchg
leave
dec
int3
std
and
int3
cmps
sub
lds
call
jbe
adc
and
xchg
inc
ffreep
neg
jge
inc
(bad)
sub
mov
push
xchg
bound
es
cmp
mov
pusha
fcom
dec
xor
xor
push
daa
add
sub
dec
icebp
lds
sub
stc
sub
and
call
ins
and
bound
aam
data16
add
fnstcw
add
mov
call
mov
or
cli
icebp
sub
out
in
and
inc
push
push
mov
or
sub
icebp
dec
daa
mov
jle
jp
jb
(bad)
push
cmp
aas
dec
cmp
dec
repnz
fldcw
adc
rol
mov
mov
out
cmp
dec
cmp
cwde
mul
stc
pusha
lds
xor
ror
xor
outs
mov
imul
or
cmc
sub
and
mov
xlat
inc
push
sub
inc
pop
icebp
sub
aam
(bad)
pop
mov
cmp
mov
push
cmp
outs
out
and
(bad)
(bad)
and
mov
push
mov
icebp
sub
cmp
pop
and
sub
push
outs
add
in
mov
iret
cmc
cmp
retf
shl
cmc
pusha
jnp
cmps
cwde
shl
sbb
sub
call
stos
test
ins
adc
or
push
fcom
ins
ss
or
mov
or
inc
xor
retf
jbe
icebp
or
rcr
push
std
add
add
push
and
xchg
int3
imul
sub
lds
xor
sbb
push
mov
or
ror
test
adc
push
loope
ja
pop
pop
jne
jle
into
pop
jnp
adc
cmp
sbb
in
es
test
sbb
aad
ret
dec
sbb
adc
or
xchg
sub
add
push
cmp
mov
mov
ins
ficom
nop
mov
dec
push
push
add
or
sbb
imul
adc
clts
pusha
sub
loop
lock
push
test
jno
mov
and
adc
and
pushf
push
aad
push
mov
sub
lods
shr
pop
add
ss
cli
out
rcr
les
or
cli
inc
sub
scas
xchg
push
sub
cmps
stos
push
ss
push
and
push
(bad)
jmp
mov
mov
(bad)
fild
mov
cmp
dec
test
mov
sub
dec
sbb
push
repz
cmp
push
add
xor
sub
inc
test
push
retf
lds
stc
sub
xchg
lea
icebp
and
and
icebp
pushf
and
push
or
and
sbb
add
add
sub
aaa
sub
jo
lds
and
adc
adc
adc
jp
dec
icebp
dec
jmp
cwde
add
inc
mov
push
loop
into
mov
sbb
or
push
inc
xchg
adc
in
jmp
test
cmp
adc
scas
test
loope
inc
or
push
lea
and
das
inc
fsub
loope
xchg
mov
adc
push
fucomip
push
aad
pop
lds
mov
mov
das
add
add
mov
jg
add
adc
mov
cmp
lock
pop
pslld
sub
sub
repnz
push
lds
sub
movs
jae
xchg
cmp
imul
popa
mov
fldcw
mov
pop
les
daa
lea
in
and
push
sub
aas
jae
inc
add
sbb
fs
data16
pop
pop
push
sub
test
add
push
sbb
xor
or
gs
cmp
inc
call
inc
mov
push
sbb
mov
mov
pop
and
push
sbb
dec
add
popa
rcr
jbe
jno
sub
push
cmc
gs
mov
daa
mov
xchg
jp
test
psrld
add
sbb
jno
jbe
dec
jge
loope
cmc
jmp
std
sbb
std
add
nop
mov
aas
popw
mov
or
test
add
dec
and
or
fist
sbb
adc
daa
aad
es
(bad)
rcr
ins
fmul
pop
or
or
imul
xor
out
aas
pop
data16
test
and
xchg
dec
pop
mov
sahf
adc
mov
mov
and
mov
mov
sbb
fisttp
frstor
ja
popf
push
and
pop
aam
cs
int
je
sub
and
pop
mov
xchg
push
gs
(bad)
(bad)
jmp
cmp
add
sbb
shr
std
and
adc
popf
add
dec
hlt
dec
and
add
icebp
pusha
mov
out
push
cmp
pop
cmp
xchg
mov
mov
call
adc
jo
mov
inc
bound
sub
loope
pop
daa
cmp
js
mov
rcr
cmp
nop
scas
xchg
and
fldenv
cmc
es
nop
shr
scas
mov
rcr
popa
xchg
mov
and
sbb
push
inc
inc
jns
mov
aad
pop
mov
jmp
jg
mov
test
test
jne
and
(bad)
mov
push
sbb
in
push
cmc
rcl
test
add
mov
ror
or
out
inc
test
call
ds
xor
jl
lea
ror
ret
jbe
inc
or
cmp
jp
daa
(bad)
mov
push
adc
call
push
push
adc
retf
dec
push
jb
movq
push
push
mov
jecxz
mov
and
and
fld
cmp
retf
ret
(bad)
adc
dec
xor
test
mov
loope
cmp
mov
jmp
pop
pop
fnsave
cmp
add
lds
adc
lods
xchg
inc
fcom
mov
(bad)
jmp
ins
pop
aas
push
pop
les
sub
dec
cmp
rcr
xor
mov
cmp
or
fcomp
sbb
cs
xchg
pop
xor
mov
inc
push
clc
dec
sub
xchg
(bad)
pop
mov
and
mov
call
and
test
adc
sub
test
sbb
cmp
or
pop
inc
jb
(bad)
dec
push
inc
xor
adc
and
dec
and
sbb
std
cld
out
and
pop
pop
push
jge
inc
jns
out
test
dec
or
or
xchg
inc
jp
inc
or
loopne
adc
mov
push
enter
ret
sbb
cmc
scas
neg
fistp
jns
jge
add
pop
cmp
loop
sub
push
adc
out
ficomp
cmc
push
push
add
sub
test
das
test
adc
mov
inc
lea
in
sbb
adc
push
fnstenv
xor
lds
out
adc
cwde
aaa
dec
mov
xor
icebp
xchg
jge
sbb
(bad)
out
push
daa
or
mov
xchg
pop
sahf
icebp
inc
popa
loopne
ds
and
jnp
out
jae
jge
push
jns
add
lock
mov
imul
add
cmps
rcl
sbb
xchg
cdq
mov
ror
leave
aas
pop
(bad)
inc
xchg
push
and
inc
or
or
bndstx
shr
bnd
cmp
jge
mov
adc
push
ror
mov
mov
iret
xchg
xchg
push
dec
mov
cmp
adc
jp
aam
inc
push
xchg
and
cmp
pusha
cs
pop
ss
dec
push
mov
adc
or
cmp
jne
test
push
push
jnp
cmp
lods
jmp
out
adc
test
add
dec
or
cs
pop
js
int3
jmp
mov
mov
sbb
sbb
inc
fcmovb
fidiv
retf
cmps
ret
fcomp
cmp
cmp
and
sbb
rol
xor
mov
push
pushf
mov
test
dec
sar
pop
mov
pop
push
dec
cmp
in
rol
pop
cmp
fmul
hlt
add
js
(bad)
nop
(bad)
mov
mov
and
mov
dec
sahf
popa
dec
ret
gs
mov
push
and
xchg
fsub
imul
leave
or
mov
and
mov
adc
test
int3
adc
pop
sbb
sti
ret
cmp
dec
cmp
or
push
push
xor
or
xor
xor
inc
cmp
test
test
jo
aad
and
push
mov
jecxz
mov
outs
add
cdq
jb
scas
xchg
push
daa
sbb
out
(bad)
mov
adc
xchg
in
dec
test
aas
mov
sbb
jno
sahf
inc
inc
ins
jno
inc
xchg
jle
mov
push
push
add
sbb
push
inc
out
cmovb
pop
movs
xchg
rol
pop
jg
sub
pushf
fstp
inc
leave
scas
dec
xchg
ficom
pop
mov
mov
push
arpl
daa
test
or
dec
test
(bad)
test
push
dec
or
xchg
stos
xchg
dec
or
(bad)
dec
outs
push
stos
in
and
mov
jne
sub
jb
adc
neg
and
add
inc
or
cs
mov
or
push
xchg
xor
push
arpl
enter
sbb
and
add
mov
add
(bad)
or
je
pop
push
jge
xor
lock
jge
xchg
call
add
sbb
test
mov
(bad)
xor
and
pop
icebp
xor
jl
jp
push
mov
xchg
jge
push
imul
popf
jns
pop
mov
dec
sub
cmp
aaa
dec
inc
mov
push
adc
jns
mov
mov
adc
jne
xchg
loopne
pusha
and
xchg
rcl
sbb
test
inc
in
mov
or
inc
mov
mov
adc
mov
dec
mov
stc
sub
bound
and
xchg
push
in
add
icebp
sub
aam
inc
ret
mov
int3
cmp
or
add
inc
and
sbb
fsubr
or
sub
mov
mov
vmread
add
push
push
pop
dec
sbb
out
jns
imul
inc
(bad)
(bad)
jne
cmps
jne
push
sbb
mov
ficom
push
call
leave
xchg
pop
cmc
fcomp
or
sbb
xor
dec
test
movs
aad
int
retf
cmp
ds
retf
inc
std
aad
or
sub
mov
gs
inc
add
lock
call
push
dec
dec
and
call
mov
stc
add
mov
inc
in
jns
dec
dec
xchg
lods
rcl
dec
popa
sbb
xor
push
mov
dec
adc
cld
xor
cmc
dec
add
cmp
je
or
cmp
push
inc
leave
out
dec
loop
jg
lea
arpl
inc
fdiv
adc
pop
ja
cmp
shl
xlat
add
mov
sbb
xor
rol
test
int3
push
cmps
rcl
or
sbb
mov
aas
jmp
add
mov
clc
jae
mov
push
sbb
movs
add
xchg
bound
sar
jg
inc
jno
retf
(bad)
jns
push
mov
xchg
clc
mov
cs
inc
mov
jmp
les
stos
xor
cmps
dec
scas
aaa
scas
outs
sub
push
clc
ror
mov
cmp
arpl
in
outs
dec
repz
arpl
xlat
mov
(bad)
loop
sub
pop
imul
add
add
push
sub
js
jnp
shr
cmp
mov
and
adc
cli
pop
adc
(bad)
in
sbb
mov
mov
and
in
xlat
sub
jge
dec
stos
into
inc
fist
dec
push
pop
jl
mov
mov
aam
lea
push
jbe
mov
push
or
test
mov
add
and
adc
ins
call
out
lds
ds
mov
push
clc
push
xor
push
dec
dec
jbe
mov
hlt
adc
add
loopne
pop
mov
leave
xor
push
mov
pop
jae
dec
jle
sub
add
jp
or
in
inc
bound
pop
cli
jge
or
mov
or
loope
cdq
sub
push
outs
jg
jns
cmp
inc
xchg
mov
cmp
(bad)
pop
push
sub
xor
cmp
jb
xor
test
lock
cmp
sub
mov
mov
mov
or
mov
inc
sub
xor
leave
ret
out
(bad)
mov
xchg
mov
sar
pop
ss
clc
and
pop
pop
rcl
xchg
and
and
and
mov
pop
pop
ins
inc
int3
sub
pop
xchg
jo
add
xchg
retf
and
add
push
call
cmc
and
sub
xor
movs
or
mov
lods
dec
pop
pop
jbe
push
mov
(bad)
loopne
cmp
sbb
sub
icebp
add
or
mov
inc
sub
clc
jmp
sub
add
ins
scas
sub
outs
dec
sbb
out
nop
pop
or
popa
lea
sbb
das
adc
sub
pop
xchg
jns
or
cmp
pushf
ins
jne
rol
popa
ret
dec
push
in
mov
call
sti
xchg
ficom
add
pop
push
pusha
cdq
sbb
lods
int3
inc
popf
lahf
sbb
ins
dec
enter
repnz
add
cwde
in
(bad)
xchg
lahf
jmp
or
adc
stos
mov
ins
sahf
inc
or
xor
inc
push
jmp
(bad)
aaa
push
push
sahf
mov
call
jb
add
(bad)
sub
adc
add
ja
shr
(bad)
push
rcl
sub
or
pop
ss
sti
xchg
ss
mov
add
dec
imul
inc
repnz
gs
nop
mov
xchg
mov
pusha
adc
xor
xchg
sbb
pop
into
mov
cmps
xor
jae
mov
or
rcr
cmp
pusha
inc
mov
cmp
and
push
ja
dec
mov
and
cmc
arpl
jno
cmps
leave
pop
pop
and
jb
shl
imul
inc
sbb
or
jne
sub
lahf
pusha
ffreep
jno
cmp
leave
test
inc
add
cdq
out
inc
bound
push
adc
dec
inc
push
xchg
call
clc
hlt
add
test
shl
ss
push
movs
daa
cmc
adc
push
inc
or
test
enter
pop
fs
cmps
push
loop
test
sub
loop
xor
dec
xor
push
mov
pop
mov
outs
and
clc
fistp
or
mov
cmp
push
pop
fisttp
add
dec
add
push
movs
sbb
into
arpl
or
test
and
xor
lods
mov
adc
inc
arpl
xor
xor
in
popa
fwait
shr
sub
jbe
mov
mov
adc
pop
mov
mov
inc
push
mov
cld
dec
mov
and
test
cmp
cmp
cmp
jle
sbb
pop
xchg
clc
jae
push
jg
enter
xchg
sub
or
push
sbb
adc
outs
jne
push
sbb
cmp
mov
fisubr
test
das
jecxz
shl
(bad)
dec
add
in
imul
inc
test
xor
arpl
jne
pop
outs
jge
movs
and
ins
shr
push
mov
mov
fs
int3
inc
add
(bad)
push
inc
imul
mov
lock
pop
mov
or
mov
ss
adc
fwait
popa
and
sub
push
mov
cmp
loop
ret
jl
push
stos
jno
sbb
and
cmp
jne
add
pusha
mov
mov
and
mov
gs
or
ret
xchg
or
adc
and
test
dec
jae
leave
cmp
xchg
pop
scas
push
sar
sbb
movaps
push
jge
or
dec
ja
and
mov
inc
jl
adc
push
sub
pop
add
add
mov
fnsave
lea
cmp
stos
(bad)
leave
xor
test
and
dec
mov
shr
pop
pop
add
push
loope
mov
jmp
mul
test
shl
mov
and
lds
cmp
shr
sbb
mov
or
sub
mov
lea
bound
adc
inc
and
push
movs
repnz
cmp
cmp
test
test
popa
sub
pop
mov
cwde
or
popf
mov
sub
in
icebp
mov
jmp
mov
inc
popf
movs
push
aam
jp
sub
cmp
test
mov
add
jle
inc
ins
mov
(bad)
das
push
or
ror
lock
adc
sub
pop
add
in
lods
xchg
adc
add
or
pop
mov
jp
jb
jp
adc
add
paddsb
xchg
mov
jmp
nop
adc
xchg
or
sub
xor
cwde
in
pop
(bad)
adc
int
push
in
cmp
dec
mov
test
jno
and
pop
push
and
sar
test
inc
cmp
mov
ja
sub
jno
pop
and
xlat
add
scas
das
dec
or
add
in
sbb
cmp
push
int
cmps
movs
aad
add
dec
daa
cmp
push
dec
ret
test
or
cmp
ss
add
mov
and
xor
aad
jmp
popa
into
push
add
fnstenv
jnp
push
std
pop
and
leave
mov
mov
div
mov
scas
pop
iret
stos
mov
std
sbb
mov
inc
xor
(bad)
or
jne
cld
push
sub
add
mov
imul
pop
repnz
push
add
test
xor
enter
push
cmp
adc
sub
adc
dec
adc
popa
or
push
xchg
mov
(bad)
popf
add
in
enter
mov
push
mov
pop
cmp
sub
ss
outs
movs
cmp
push
push
dec
ins
fnstsw
inc
scas
loope
jb
cmp
and
std
cwde
dec
fild
push
dec
inc
add
push
and
and
dec
jnp
in
(bad)
retf
pusha
stos
xor
xor
push
and
inc
or
test
test
shr
sub
cmp
pusha
dec
or
jg
sbb
jne
sub
jne
inc
pop
add
add
inc
xor
ins
xchg
loop
push
shl
loop
aaa
xchg
movs
ins
push
push
in
inc
in
push
jecxz
test
add
jne
xchg
mov
jge
dec
test
adc
mov
jl
mov
add
xor
mov
fisttp
sbb
cs
sbb
sar
out
pop
bound
or
push
xor
cs
mov
mov
arpl
push
loope
scas
adc
pop
jl
jno
into
and
sbb
xor
pop
inc
rol
or
xchg
das
sbb
xchg
xchg
xor
push
popa
push
dec
pop
or
sub
push
lea
test
out
leave
ins
sub
icebp
jecxz
xor
popa
mov
dec
sbb
and
and
add
jp
test
sub
mov
mov
retf
outs
leave
mov
jmp
or
in
dec
out
mov
into
in
(bad)
jbe
fisttp
shl
or
and
ret
in
inc
daa
in
movlhps
or
add
clc
adc
xchg
adc
in
in
clc
outs
dec
lds
add
outs
in
jge
icebp
(bad)
fld
cmp
or
pop
retf
in
imul
jo
les
pop
jbe
arpl
sti
fdivrp
dec
dec
mov
data16
and
shr
pop
nop
adc
and
push
mov
push
popa
movs
jmp
in
pop
inc
(bad)
mov
in
bound
into
movs
lods
mov
sub
call
or
adc
add
or
mov
loop
pop
inc
gs
inc
adc
int
jns
dec
sub
add
dec
push
or
in
imul
sbb
nop
cmc
mov
push
test
sub
or
and
lock
(bad)
cwde
cmp
inc
cli
arpl
jne
fldenv
mov
adc
mov
dec
add
xchg
inc
xchg
or
out
in
push
mov
lahf
je
call
jp
cmp
test
push
dec
sbb
push
sbb
mov
push
pop
or
popa
adc
push
ret
fadd
es
dec
and
xor
and
xor
xchg
or
mov
je
mov
sub
cmps
outs
xchg
or
data16
bound
sub
and
rcr
or
inc
loope
adc
loope
or
ret
out
(bad)
arpl
mov
bound
jno
mov
call
add
xchg
add
sbb
aaa
cmp
jae
mov
inc
(bad)
addr16
sbb
cmps
or
lea
test
pop
dec
or
adc
and
xor
xchg
retf
in
inc
aas
or
sbb
(bad)
sbb
cmp
inc
mov
data16
js
inc
inc
jne
mov
inc
movlps
cmp
jns
out
sbb
xor
mov
popa
cdq
add
jmp
loope
or
loop
sub
adc
dec
pop
cmp
loop
popa
dec
aaa
mov
cmp
repnz
sub
mov
mov
ss
sbb
mov
ret
sahf
inc
nop
daa
pushf
(bad)
out
pop
inc
add
cwde
leave
(bad)
fld
mov
cmp
jge
mov
sbb
inc
test
inc
push
icebp
aas
jne
pop
(bad)
push
cmp
stos
sub
inc
nop
pop
addr16
aas
outs
jne
adc
call
pusha
xchg
inc
dec
inc
fs
adc
cmps
cmp
jno
or
sub
push
out
cmp
into
cmp
in
xor
ins
fwait
cmps
ss
and
dec
popf
and
push
sbb
push
scas
push
adc
prefetch
or
popa
loopne
jbe
dec
inc
outs
jns
dec
frstor
mov
dec
pop
leave
test
pop
cwde
mov
inc
jl
aaa
xor
in
dec
ret
lds
inc
add
jp
or
add
aad
movs
fisub
fadd
out
and
rcr
scas
push
test
or
inc
cdq
retf
add
ins
push
adc
das
add
dec
ins
sub
and
pop
bound
push
push
add
or
sbb
int3
les
sbb
scas
push
xchg
lea
(bad)
daa
mov
out
xor
sbb
pop
mov
pop
jmp
cmp
(bad)
mov
scas
pop
mov
lock
lock
mov
gs
dec
mov
xchg
pop
inc
pop
cmc
ret
test
and
scas
sbb
jns
xchg
sbb
and
sbb
loope
push
pop
or
push
xchg
sbb
lods
adc
jns
jns
repz
mov
daa
xor
loope
inc
call
pop
mov
sbb
push
adc
inc
stos
sub
push
fldenv
lds
push
lods
inc
or
jle
jl
or
xchg
(bad)
or
ins
xchg
add
mov
push
jae
pop
sub
ds
inc
push
mov
popf
mov
jg
xchg
inc
in
inc
pop
mov
lea
inc
rcl
pop
out
psubd
add
mov
pop
mov
jge
mov
add
add
or
adc
loop
mov
or
push
or
mov
push
or
out
std
push
fldcw
das
pop
gs
sbb
sahf
ins
or
pusha
sub
xchg
add
mov
or
push
xchg
mul
data16
push
ins
cmps
and
add
xor
jge
xor
out
sbb
xchg
ins
ins
ret
or
pop
clc
push
je
popa
xchg
mov
sub
cwde
xor
nop
or
add
cmp
sbb
and
jne
add
push
fldcw
or
inc
int
jmp
sahf
ja
or
lods
inc
imul
gs
loope
pinsrw
test
popa
mov
movs
add
dec
inc
loope
retf
popa
jo
leave
or
sbb
adc
and
outs
adc
add
push
xrelease
push
ja
adc
jbe
mov
outs
fmul
je
sbb
imul
je
daa
repz
inc
loope
pop
adc
mov
pop
jge
inc
inc
popa
dec
call
test
sbb
ret
pop
add
push
fistp
imul
adc
mov
pop
add
or
sbb
add
mov
lods
or
call
das
add
mov
push
mov
mov
retf
loopne
jns
jae
aad
clc
adc
sub
fcmovb
test
scas
mov
aad
xchg
adc
xchg
sub
inc
push
push
mov
pop
or
xchg
popa
jg
mov
jae
or
mov
mov
cmp
dec
sub
dec
and
xchg
adc
or
ins
stc
sub
data16
retf
jne
aam
push
inc
add
enter
xchg
mov
jecxz
push
mov
push
js
push
js
mov
adc
arpl
test
arpl
es
or
fisubr
cmp
je
inc
or
inc
add
adc
adc
and
fsub
in
mov
and
push
movs
fs
rol
sbb
iret
enter
mov
inc
cmps
dec
and
pop
into
add
into
mov
or
and
sub
push
and
hlt
out
cmp
push
xchg
pop
push
jno
adc
int3
xchg
jnp
pop
xchg
cmc
(bad)
mov
xor
aam
pop
mov
leave
test
pop
mov
and
rcr
cdq
mov
add
mov
pop
cmp
mov
int
xchg
gs
aas
mov
pop
cmp
into
cmp
xor
test
pushf
sbb
push
inc
sbb
in
in
add
and
add
add
add
add
xor
and
push
push
inc
or
or
cmp
and
mov
mov
mov
mov
mov
mov
enter
mov
mov
mov
push
jl
icebp
add
inc
aaa
test
add
add
add
add
add
dec
out
in
add
jecxz
loop
loope
fild
fiadd
fld
fadd
fild
fiadd
fld
fcom
fdiv
rol
shl
iret
add
mov
js
lock
sbb
pop
or
mov
mov
pop
(bad)
shl
adc
das
pop
ins
dec
aam
add
push
pop
xor
rcr
add
ins
xchg
dec
mov
test
daa
jl
mov
pop
pop
aaa
jne
xchg
jno
fbld
jp
outs
into
aad
dec
icebp
lds
pop
ror
loope
mov
mov
enter
daa
pcmpeqw
mov
mov
leave
out
mov
fcmovnu
(bad)
mov
cmp
into
ins
call
pop
xchg
(bad)
das
aad
das
pop
mov
pop
pop
imul
mov
into
sbb
pop
mov
adc
and
xchg
sbb
pop
add
lds
or
das
gs
cmp
or
fs
loop
add
xor
xchg
add
daa
pop
sub
add
sbb
imul
and
xor
add
adc
push
add
or
fild
add
adc
adc
loopne
xor
loopne
push
fbstp
add
mov
dec
dec
(bad)
xor
outs
int3
adc
jno
or
cmp
adc
pop
cmps
dec
fld
adc
xor
js
mov
push
push
inc
popa
call
inc
popa
mov
sbb
or
add
push
ins
push
dec
add
dec
or
jg
ret
dec
(bad)
or
sub
lods
rcl
out
jb
xchg
sub
adc
scas
push
jg
(bad)
sbb
cmp
jmp
jo
movs
cmp
xor
and
in
add
adc
xchg
adc
dec
loop
jmp
add
adc
inc
mov
or
lea
je
and
xchg
movd
repnz
in
cwde
adc
clc
mov
xchg
sub
add
add
dec
(bad)
lock
add
adc
xor
das
dec
sub
pop
add
add
lods
push
enter
in
push
add
sbb
add
mov
pusha
pop
mov
mov
sti
add
sub
xor
adc
shl
adc
mov
mov
add
or
sub
push
es
mov
mov
mov
mov
add
add
mov
xor
inc
mov
in
add
out
add
add
add
add
add
add
or
(bad)
mov
ret
inc
jnp
jbe
(bad)
rol
pusha
loope
sbb
add
push
mov
xchg
rol
push
mov
lock
add
inc
pop
cdq
cmps
push
dec
jmp
jno
mov
fwait
xchg
mov
add
dec
pop
(bad)
out
fcmovne
push
(bad)
movlps
inc
adc
mov
cmps
outs
mov
mov
syscall
adc
adc
mov
mov
leave
pop
fstp
fistp
mov
push
test
dec
aam
int3
mov
cmc
std
int3
cmps
pop
aaa
push
push
popf
lds
add
pop
aam
jno
sub
dec
ja
xlat
mov
pop
popf
icebp
das
sbb
pop
fdiv
sbb
sbb
pop
test
add
test
shr
dec
or
jmp
cmp
fcomp
sbb
or
int
xor
jo
pop
pop
(bad)
lea
push
adc
aaa
jo
pop
cmp
jge
adc
or
mov
push
pop
sub
test
mov
pushf
cli
pop
add
inc
pop
test
imul
bound
sbb
dec
or
xchg
(bad)
adc
cmps
add
mov
dec
adc
jmp
test
pusha
add
or
imul
cmp
mov
inc
dec
cmp
push
mov
cmc
pop
add
sub
sqrtps
pop
dec
xchg
adc
and
pop
adc
or
les
fstp
mov
mov
pop
mov
in
and
mov
xor
jmp
out
xor
sbb
mov
add
pop
push
aas
ds
test
jns
mov
add
jns
and
ret
inc
pop
mov
xor
ds
into
cmp
adc
aam
jp
pop
push
or
fldenv
sbb
sbb
and
lds
(bad)
leave
xchg
lea
inc
aad
fild
jmp
aam
push
jg
cdq
xor
mov
int
add
hlt
das
jne
test
sbb
add
call
fisubr
pop
or
rol
das
into
out
pop
dec
add
or
rol
and
xchg
ds
lea
push
add
sbb
dec
aas
sub
sub
pop
push
xor
(bad)
or
loope
test
pop
adc
inc
inc
or
bound
(bad)
sub
xchg
ja
cmc
and
sbb
js
es
(bad)
std
push
lahf
cli
and
cmc
popf
aaa
inc
dec
sub
loope
fisubr
push
xchg
add
sub
xor
retf
inc
stos
bsf
pop
ret
test
nop
push
leave
sbb
sbb
int3
push
cdq
mov
push
dec
dec
or
dec
(bad)
xchg
mov
or
jae
dec
or
leave
adc
fldenv
dec
inc
bound
push
and
movs
fidiv
sub
sub
nop
in
push
inc
pop
inc
sub
leave
outs
ret
add
or
push
or
hlt
dec
ins
bound
pop
sahf
pop
adc
pop
cwde
dec
jo
xchg
and
repz
dec
push
jno
push
push
mov
lea
ror
jp
pusha
inc
adc
pop
bound
add
test
jae
in
xchg
ret
call
cmp
mov
in
xlat
mov
inc
mov
push
mov
push
and
dec
retf
sbb
or
repnz
(bad)
or
adc
pop
int
sbb
pusha
jge
xchg
lea
popa
mov
sub
mov
stos
sbb
add
aas
xor
mov
mov
sbb
cs
jle
popf
pop
jl
pop
mov
leave
lds
inc
push
inc
test
in
call
xor
adc
mov
inc
icebp
xchg
inc
rcl
fadd
inc
in
popf
loop
rol
mov
rcl
jns
repnz
inc
std
out
xor
add
cmp
or
adc
push
jecxz
in
in
jg
retf
dec
mov
pop
rcr
and
mov
pop
mov
mov
icebp
and
out
cmps
aas
es
int3
loopne
dec
mov
shr
test
mov
sub
mov
in
iret
mov
frstor
pop
cmps
xchg
adc
dec
dec
cmp
jecxz
xchg
ds
adc
loope
in
ds
rcr
in
daa
das
or
and
push
jb
dec
jmp
imul
dec
aad
jge
jno
adc
sar
dec
fs
and
sub
pusha
or
adc
adc
pop
xchg
pop
and
ja
mov
imul
and
or
inc
mov
and
add
xor
das
mov
ss
ja
stos
push
inc
popf
pop
inc
gs
push
add
mov
xlat
jne
clc
xchg
imul
es
sub
xchg
clc
js
inc
adc
mov
sbb
lds
nop
std
in
push
mov
dec
mov
inc
adc
and
add
pop
shl
cmps
enter
mov
push
mov
rol
cmp
ds
jmp
inc
fxtract
cld
mov
add
bound
push
popa
adc
pop
addr16
or
mov
xor
lds
sbb
cdq
and
test
add
mov
xchg
xlat
mov
mov
dec
and
fwait
xor
leave
jecxz
add
mov
movs
dec
dec
in
inc
xchg
and
or
push
inc
mov
lock
or
imul
mov
and
and
stos
(bad)
sbb
scas
mov
and
or
mov
mov
loop
inc
cdq
adc
jecxz
adc
add
or
sub
cli
mov
test
js
jp
push
mov
push
mov
mov
ins
xchg
sub
jno
mov
cmps
fist
push
inc
lods
rcl
das
sbb
rcl
mov
adc
cmp
ins
mov
dec
les
retf
or
sbb
mov
mov
or
sub
dec
sub
ret
outs
les
mov
jae
hlt
dec
inc
pop
addr16
dec
or
adc
inc
and
icebp
or
pop
adc
push
add
inc
inc
adc
inc
loope
and
sub
imul
or
mov
push
or
add
mov
cmp
add
jns
and
mov
add
push
or
xchg
shr
(bad)
aam
jae
jbe
mov
repnz
adc
xor
jle
cs
cwde
jp
or
add
mov
sbb
add
imul
mov
in
in
shl
ss
mov
xor
or
sbb
jo
and
ds
add
push
xor
jmp
xor
(bad)
pop
adc
inc
or
push
and
push
fiadd
xchg
mov
adc
dec
and
test
jge
in
mov
imul
add
dec
cmp
mov
leave
mov
push
dec
push
dec
into
rsm
lds
and
and
sub
fnstcw
sbb
xor
vaesenclast
pop
cmps
sbb
xor
push
cmp
pop
add
(bad)
es
dec
out
mov
jp
or
add
fldenv
mov
jne
xchg
mov
shr
inc
ds
xor
ret
adc
xor
out
xchg
jmp
cli
cmps
fs
push
sub
sub
cmp
inc
les
(bad)
les
or
and
push
push
aaa
mov
cmp
dec
cmp
push
sar
dec
jg
daa
mov
add
cs
or
sbb
and
cmc
loope
dec
repz
push
add
mov
dec
js
and
sbb
adc
pushf
sbb
pop
aad
xchg
cmps
add
inc
es
out
jmp
xor
repnz
bound
sbb
scas
adc
push
(bad)
mov
popa
aad
jbe
es
jge
pop
xor
xchg
xchg
aaa
xor
shl
and
push
test
pusha
dec
push
add
(bad)
sbb
push
adc
or
or
dec
xor
or
test
cmovl
pop
add
mov
inc
inc
ficomp
push
into
push
imul
push
xor
xchg
out
adc
adc
call
sub
push
mov
lea
xchg
mov
mov
test
mov
mov
pop
imul
mov
das
cs
daa
xor
pop
test
or
push
les
jmp
jo
xor
or
and
pop
fmul
js
dec
jno
jge
mov
or
test
adc
rol
test
ficom
mov
add
fcomi
mov
lock
jecxz
int
sbb
dec
inc
call
xchg
ret
shl
sub
fiadd
inc
fwait
push
(bad)
dec
mov
inc
push
mov
mov
sbb
sub
mov
inc
arpl
or
(bad)
ret
push
test
add
push
pop
and
jmp
das
push
cmp
out
aad
xor
cmp
add
in
adc
into
push
bound
cld
jbe
adc
cmp
add
sub
lock
xchg
repz
cmp
cmp
sub
mov
mov
mov
mov
push
pop
mov
mov
sbb
or
mov
mov
pinsrw
ins
inc
sbb
push
sbb
and
add
fst
fisttp
and
push
sbb
repnz
pop
and
fucomp
and
sub
rcr
imul
ret
xchg
or
aad
push
dec
add
stc
push
cmp
sbb
imul
inc
push
sbb
xchg
cmp
mov
in
es
sbb
dec
rol
lock
jecxz
adc
cmps
push
pop
cs
aaa
or
mov
or
call
leave
xor
pop
retf
lds
xor
mov
loop
imul
(bad)
push
ret
push
pop
fst
mov
cld
push
mov
dec
(bad)
fisttp
jmp
ds
cmp
sub
inc
jmp
and
pop
mov
sub
dec
jg
mov
jb
and
and
add
jl
cli
ficomp
pushf
in
or
mov
mov
push
cmp
es
sti
ins
adc
test
adc
sub
ins
add
push
outs
push
and
pop
sub
push
adc
push
or
lock
push
and
pushf
pop
shl
or
movs
lds
sbb
mov
test
mov
mov
mov
cmps
dec
out
add
cmps
scas
int
push
test
test
inc
push
dec
mov
mov
lods
push
or
pop
inc
add
push
into
push
sub
aam
cmp
cdq
sahf
add
aam
ds
xchg
int
mov
cmp
lea
ss
lds
mov
xor
sub
fs
retf
movs
sbb
jecxz
lds
add
test
xchg
add
mov
jno
add
cmp
pop
imul
jb
dec
push
sbb
arpl
pusha
mov
mov
scas
xchg
test
and
test
cmp
push
or
imul
pop
xor
push
fs
xchg
pop
cmp
inc
dec
push
(bad)
jp
and
jo
sub
retf
mov
fdiv
leave
fdiv
push
xor
ret
fst
or
sub
sub
fdivr
push
cmp
daa
xor
les
xchg
movs
shr
sub
add
cld
lods
add
lods
mov
int
and
std
xchg
not
mov
push
out
imul
ss
adc
or
pop
adc
inc
xchg
push
in
adc
or
cmp
xchg
or
cli
fbstp
pop
dec
les
cwde
pop
loop
xchg
adc
push
cs
or
xor
inc
push
enter
pop
outs
jne
push
push
lods
xchg
out
adc
loope
and
cmp
cmp
jge
lds
lods
daa
dec
cmp
xchg
adc
jae
sub
pop
cmp
mov
inc
mov
sbb
cmp
or
loop
or
ficomp
or
sbb
sub
sbb
xor
cmc
xchg
push
sbb
xchg
ins
imul
int
push
imul
add
in
push
adc
xor
addr16
ret
sbb
rol
and
or
adc
fsubr
dec
popf
fadd
pop
clc
inc
adc
sub
arpl
sub
inc
sub
mov
or
cli
imul
mov
lock
jnp
shr
xor
adc
mov
test
adc
xchg
test
stos
add
xlat
out
call
add
fisub
cmp
test
fwait
shr
(bad)
push
imul
enter
in
aas
fs
ja
cmp
shl
cdq
stos
inc
int3
xchg
test
movs
movs
and
mov
mov
inc
jnp
xor
data16
popf
and
inc
mov
xchg
xor
icebp
or
adc
jnp
xor
mov
xchg
movs
js
or
clc
push
or
sbb
imul
lods
inc
dec
lods
xchg
lea
push
clc
sub
push
mov
or
pop
mov
fisttp
sub
and
add
test
scas
stos
adc
mov
outs
adc
or
lods
sbb
and
aas
aaa
mov
add
scas
dec
dec
dec
int3
sub
imul
test
ss
xchg
cmp
xor
cmp
pop
xlat
into
popa
test
adc
xor
mov
mov
not
and
or
pop
pushf
inc
sti
and
or
les
arpl
loopne
or
push
cmp
and
retf
ss
(bad)
push
or
inc
(bad)
int3
xor
push
cwde
mov
sbb
dec
push
jne
dec
jne
push
jb
sahf
les
out
jo
xor
mov
xchg
ja
and
jl
test
sbb
gs
add
jne
xchg
cmp
or
jl
lea
cmp
inc
or
jp
jne
dec
or
(bad)
out
and
cmp
sub
leave
(bad)
hlt
and
aad
aas
ins
mov
dec
jno
push
push
sbb
shl
(bad)
ret
cmp
adc
add
jno
mov
(bad)
or
in
or
push
xor
pop
adc
arpl
jbe
mov
mov
stc
mov
dec
pop
popa
sbb
push
xchg
out
ror
in
adc
mov
sub
sub
inc
adc
cld
push
inc
or
jne
stos
sub
mov
shl
inc
loope
inc
push
and
hlt
sub
sub
push
mov
mov
pop
cmp
mov
jno
retf
fmul
add
xchg
add
mov
in
pusha
jno
and
(bad)
add
add
xchg
out
and
xchg
adc
inc
adc
push
add
push
pop
add
xchg
inc
mov
out
pop
fistp
gs
add
out
sar
dec
add
dec
mov
mov
adc
addr16
imul
mov
lea
popa
shr
in
mov
icebp
sbb
jmp
jge
inc
mov
push
sti
pop
ds
pop
cmp
sbb
and
lds
pop
popa
shl
push
mov
or
cmp
xor
das
adc
adc
xor
mov
call
(bad)
cmp
add
imul
lods
shr
dec
adc
xchg
adc
or
ffree
(bad)
xor
mov
dec
add
jge
jg
pop
jno
pop
jno
dec
(bad)
add
daa
pop
dec
popf
sbb
push
pop
adc
sub
jns
imul
push
cmp
xor
test
jmp
push
aas
pushf
jnp
test
and
sbb
js
stc
adc
and
mov
push
or
add
scas
test
and
sbb
pop
pop
leave
fistp
add
inc
loop
sub
rcr
dec
les
fisubr
loopne
pop
(bad)
daa
mov
add
jg
sbb
dec
dec
inc
or
dec
add
and
jg
fs
clc
adc
sbb
xchg
and
xchg
or
ror
mov
cmp
ins
pop
or
add
jns
adc
fisttp
sbb
mov
pop
test
ror
jge
dec
mov
mov
mov
inc
popa
pop
or
mov
(bad)
or
iret
push
fdiv
repnz
sub
jbe
stc
ret
push
add
jne
out
sbb
fistp
inc
adc
stos
and
dec
xor
or
or
or
jbe
mov
cmps
nop
aaa
mov
mov
cmp
inc
or
xor
xor
jo
xchg
jb
cdq
mov
jne
in
sbb
push
mov
mov
dec
mov
aas
mov
xor
(bad)
mov
inc
and
xor
push
icebp
fisttp
sar
out
jns
adc
mov
mov
std
jo
les
test
test
cld
test
sbb
xor
call
xchg
ja
repz
cmp
and
xor
jecxz
sub
and
jmp
das
push
add
or
cmp
cmp
pop
cmp
imul
ret
mov
mov
adc
push
inc
retf
cmp
(bad)
cmp
add
lds
push
inc
cmp
int
xchg
in
lss
mov
data16
ficomp
jmp
push
cmp
sbb
jmp
inc
sub
mov
mov
loop
fisubr
adc
inc
sbb
(bad)
out
jns
mov
cmp
sti
stc
dec
and
mov
arpl
aaa
inc
mov
mov
enter
sbb
popa
inc
add
lock
int
xchg
mov
dec
or
pop
imul
inc
mov
jmp
stos
add
xor
fs
dec
jmp
not
outs
adc
sbb
pop
xchg
and
sub
inc
movs
psadbw
cwde
jnp
mov
add
out
in
iret
jne
pop
cmp
ja
and
aaa
xor
sbb
mov
dec
(bad)
push
stos
mov
mov
pop
cdq
inc
mov
mov
and
push
add
sub
pop
sbb
mov
jl
inc
adc
dec
rcr
xor
pop
or
dec
jo
mov
cmps
or
pop
add
or
movs
adc
mov
xchg
sahf
xchg
out
pop
and
fimul
or
in
int3
pushf
adc
icebp
add
shl
addr16
lea
mov
inc
add
stc
or
int3
mov
popa
or
mov
dec
mov
cmp
cmc
or
mov
aas
loope
inc
mov
push
jge
stos
add
mov
push
rol
pop
pusha
jbe
loope
sub
adc
xor
repz
or
mov
push
cmps
inc
add
mov
mov
pop
sub
fnstenv
cmp
cmp
sbb
out
push
cmp
dec
and
sbb
pushf
cmp
not
dec
xchg
test
push
dec
pop
or
dec
or
pop
aad
neg
mov
cmp
mov
push
add
sbb
and
call
test
cmps
rol
add
(bad)
cmp
test
cmps
rol
imul
dec
hlt
and
push
arpl
push
or
push
cs
add
and
or
fiadd
inc
jecxz
movs
rcl
das
push
cdq
jmp
fldl2t
into
cmp
jns
mov
jns
stos
adc
dec
les
jbe
add
ret
aam
ds
pop
icebp
out
mov
(bad)
dec
arpl
add
add
cmp
in
js
popf
inc
pop
mov
and
add
xor
rcl
popf
push
ss
pop
test
jp
mov
iret
daa
cmp
and
add
stos
stos
dec
push
pop
sub
mov
call
jg
loope
(bad)
test
lea
lods
fdivr
add
out
leave
mov
mov
fst
cmp
or
xor
dec
and
jns
std
dec
mov
cmp
gs
cmp
push
mov
stos
inc
fbld
into
scas
popf
and
inc
push
loop
sub
lock
adc
pop
add
xor
or
aaa
sbb
sbb
adc
pop
xor
mov
setle
fist
call
jns
dec
in
inc
or
cwde
mov
add
adc
dec
aam
or
retf
gs
or
cld
add
pop
xchg
mov
adc
test
dec
jae
jb
dec
mov
pusha
ret
mov
xchg
and
cmp
popa
es
or
mov
dec
push
xchg
push
dec
dec
in
add
or
push
adc
inc
pop
ds
sbb
xor
cmp
mov
add
ins
cmp
sti
push
mov
mov
xchg
test
inc
adc
aaa
mov
test
or
adc
xchg
xor
cmps
cwde
aas
and
imul
push
rcl
cmc
ror
shl
or
jne
push
adc
mov
dec
imul
xor
ret
out
dec
adc
icebp
pop
lea
lea
push
xor
jne
sbb
cmp
jb
xor
pop
jne
pop
ret
push
ret
outs
dec
in
push
sbb
mov
mov
outs
jecxz
je
dec
dec
mov
je
lds
(bad)
cmp
inc
inc
inc
jne
das
add
push
aad
adc
in
sbb
pusha
and
sub
mov
test
dec
cwde
mov
pop
jns
add
adc
imul
popa
or
add
pop
and
push
mov
xor
push
fidiv
jne
sbb
push
addr16
add
(bad)
and
and
ins
sub
ror
sbb
aad
xchg
sub
dec
xchg
xor
dec
or
inc
xchg
xchg
sub
pop
add
xchg
sbb
adc
add
mov
ret
and
jmp
inc
repz
retf
add
gs
lds
std
add
cmp
sbb
and
and
cs
cdq
dec
fimul
loope
push
fwait
in
test
scas
(bad)
es
mov
push
repz
jne
push
or
in
dec
call
xchg
xchg
or
xor
and
mov
rcl
pop
cld
in
and
inc
stos
push
loope
jns
xor
cdq
js
loopne
mov
data16
xchg
jp
pusha
shl
lahf
aaa
aad
add
xchg
pop
push
xchg
push
dec
imul
fs
mov
or
mov
mov
test
aas
xchg
inc
xor
push
inc
div
push
mov
movs
lods
and
add
cwde
cld
or
sbb
push
js
rcr
arpl
mov
gs
mov
push
push
or
leave
sti
add
xchg
add
add
aas
add
dec
dec
or
jnp
cs
outs
mov
fwait
loope
jmp
adc
shl
icebp
pushf
jmp
inc
jecxz
mov
inc
or
ins
sub
sub
adc
pushf
mov
shl
mov
fsubrp
mov
add
push
dec
aas
mov
add
add
and
pop
in
inc
inc
maxps
ret
push
jne
call
mov
ins
push
mov
add
pusha
loope
sub
push
clc
mov
ja
mov
inc
pop
cmc
icebp
jmp
dec
inc
das
in
jmp
addr16
icebp
add
fld
adc
pop
and
in
adc
add
and
sub
dec
xchg
sbb
es
leave
push
ret
aad
jnp
sbb
adc
sub
sub
cmp
pushf
daa
and
inc
mov
pushf
mov
enter
xchg
jno
sub
push
ss
mov
or
inc
in
pop
xor
mov
loope
aam
jmp
inc
add
shr
in
push
loop
mov
add
pop
sbb
sti
sub
cmps
or
pop
das
cdq
inc
test
adc
nop
jno
mov
(bad)
adc
xor
mov
inc
arpl
mov
fidiv
cld
and
push
aaa
push
mov
test
sub
sbb
and
in
jg
xor
mov
in
mov
mov
xor
xor
shl
sbb
or
inc
cdq
jge
add
jb
mov
adc
dec
xchg
jmp
mov
push
clc
cmc
in
cmp
mov
pusha
xor
pop
js
fild
or
popa
fsubr
sbb
xchg
jmp
sbb
inc
(bad)
rcr
int
sbb
call
out
mov
mov
sbb
mov
pop
jmp
add
dec
les
jge
adc
sbb
sub
ret
mov
dec
cmc
aam
in
jmp
or
add
add
dec
leave
xchg
leave
jno
push
fnstcw
xchg
jle
ror
mov
adc
jmp
mov
adc
jns
jbe
add
add
xlat
mov
into
jg
cdq
in
dec
(bad)
sbb
mov
fcmovne
cmc
cld
jae
push
sbb
mov
pop
scas
mov
sbb
push
sbb
cwde
or
pop
aad
pushf
leave
pop
cmp
in
das
add
sbb
push
ss
jae
jl
rcl
fsub
in
adc
add
or
inc
and
call
mov
sbb
mov
push
clc
in
xchg
add
or
push
jne
shr
aad
div
adc
sub
or
mov
dec
cmps
cld
sub
ret
jmp
push
call
sbb
mov
mov
adc
cmp
(bad)
out
scas
loop
fcomp
out
popf
or
pop
lahf
sub
fsub
mov
or
call
lods
inc
sbb
jge
bound
loopne
shl
int
aam
lods
push
ror
sub
pop
aas
in
pop
sub
sub
or
or
mov
daa
test
push
xchg
adc
push
iret
in
lds
add
jle
jo
or
add
adc
sub
pushf
push
ja
bound
sub
pop
or
inc
pop
in
push
sub
lods
xchg
pop
add
pop
inc
fs
xchg
xor
and
push
xor
ret
(bad)
loopne
xchg
push
or
outs
sub
ins
std
xchg
add
lsl
test
nop
push
mov
cmp
or
mov
jne
inc
push
xchg
adc
mov
xor
(bad)
adc
jb
cld
push
sub
cmp
mov
cmp
adc
test
(bad)
mov
call
bound
or
dec
push
jp
cmp
(bad)
inc
and
jae
mov
outs
mov
hlt
out
lahf
aas
ja
add
or
sub
xor
lock
ins
test
push
or
das
add
daa
or
add
push
xor
sbb
dec
mov
aam
(bad)
pop
aad
jb
jl
add
stos
mov
dec
mov
in
pop
aad
in
sbb
inc
xor
or
adc
shl
pop
sub
loopne
add
jl
in
aam
push
sub
push
xchg
jae
inc
cmp
add
ror
dec
xchg
xor
or
imul
xor
xchg
es
in
neg
xor
and
or
ret
ja
sub
in
adc
sbb
push
xor
push
mov
mov
test
call
pop
int
dec
cmp
icebp
cmp
dec
jp
mov
or
call
imul
mov
shl
rol
pop
dec
(bad)
jo
sub
jl
adc
retf
movs
or
add
mov
or
pop
and
pusha
cmp
adc
xchg
xor
add
push
cmp
cs
sbb
mov
or
rol
cmps
xor
mov
fninit
adc
dec
sub
or
in
mov
sub
mov
jmp
add
xchg
mov
add
sbb
pop
out
xor
call
aas
lods
nop
sbb
push
push
pop
sub
data16
xor
outs
lea
adc
arpl
inc
add
sub
in
in
mov
(bad)
jno
lods
cmp
inc
aaa
inc
ins
les
mov
or
sbb
cmp
sbb
and
unpckhps
mov
xor
mov
or
loope
xchg
push
into
dec
fwait
jbe
inc
xlat
and
vmovhpd
call
mov
push
mov
popf
loop
std
aam
mov
push
pop
xchg
sub
and
push
mov
add
ja
lahf
lock
mov
xchg
ret
add
add
vsubpd
sub
jbe
and
xchg
jge
inc
shl
push
or
(bad)
or
mov
retf
int
sub
pop
dec
and
ret
xor
dec
(bad)
mov
xchg
std
or
data16
inc
xchg
cmp
jns
cmp
addr16
(bad)
push
dec
inc
sbb
data16
test
outs
sti
adc
cmp
or
sub
(bad)
sbb
add
jae
js
rol
and
and
jmp
pop
or
add
or
add
les
cdq
adc
mov
xlat
xchg
push
pop
push
sub
sbb
push
es
outs
adc
adc
mov
pop
adc
(bad)
call
cmp
and
jne
sbb
inc
mov
in
inc
adc
adc
movs
cmp
dec
stos
test
sbb
cmp
pop
scas
xor
mov
jne
lods
pop
neg
imul
xor
and
outs
and
js
sbb
fmul
or
push
fnstenv
test
pop
pusha
push
push
cmp
or
inc
push
dec
dec
jmp
aam
outs
sub
fisubr
mov
and
rcr
test
jae
mov
pop
push
adc
cwde
sbb
fist
jns
inc
enter
pop
(bad)
cdq
test
sub
ret
mov
push
xchg
dec
adc
call
xchg
fldenv
adc
test
sbb
push
dec
inc
add
test
xor
and
sub
stos
inc
or
dec
clc
stos
or
add
test
std
adc
push
xor
mov
pop
shl
inc
mov
mov
out
add
inc
lods
mov
inc
stc
bnd
dec
adc
mov
dec
clc
or
dec
xor
sub
push
push
or
push
add
add
stos
mov
push
cmps
cmp
jmp
aaa
add
adc
or
movs
repnz
in
leave
push
fwait
inc
push
rcl
fisttp
cs
cmp
in
and
add
sbb
xchg
mov
sub
jo
sub
sbb
(bad)
out
test
cmp
xchg
xchg
dec
dec
bound
adc
jmp
xchg
add
dec
lahf
sub
jp
xchg
dec
and
(bad)
add
add
sbb
fild
lea
sub
sbb
add
cmp
ins
xchg
cmp
push
xor
xchg
dec
retf
arpl
adc
or
mov
xchg
inc
fstp
and
cmps
sub
xchg
jno
push
or
int3
adc
xor
dec
or
mov
add
fld
sub
mov
sbb
imul
inc
and
or
leave
inc
retf
aaa
or
repnz
jns
pop
or
loope
jecxz
add
mov
jle
mov
cli
pop
add
outs
cmp
mov
test
mov
mov
jg
ret
inc
icebp
inc
pop
and
push
xor
cmp
sbb
sbb
inc
adc
(bad)
push
pop
icebp
add
push
fisttp
jne
dec
jne
push
adc
(bad)
paddsb
hlt
in
or
pop
aad
into
nop
(bad)
movs
iret
cmp
shl
rol
sbb
push
xor
xor
adc
mov
or
ror
daa
sbb
sbb
clc
mov
bound
push
test
(bad)
in
or
(bad)
and
test
xor
iret
add
into
int
mov
and
(bad)
or
xor
(bad)
xor
fdivr
inc
pop
dec
iret
cmp
and
jns
push
dec
cmc
mov
aad
or
cmp
adc
add
sbb
cmp
in
mov
xchg
inc
retf
push
lea
dec
cli
pcmpgtd
shr
adc
shr
or
jo
pop
adc
xor
add
dec
cmp
shr
mov
xchg
and
or
addr16
cmp
sub
loope
or
adc
sub
sub
sub
sbb
pop
cmc
sbb
mov
fstp
and
pop
pop
xor
add
mov
(bad)
out
retf
dec
push
mov
and
push
popfw
sbb
dec
push
js
adc
dec
jo
(bad)
sbb
jge
mov
fndisi(8087
sti
push
adc
clc
inc
call
in
inc
test
test
popa
pop
add
test
fwait
push
and
div
xor
pop
and
and
or
ds
loop
sar
jo
and
and
add
jmp
clc
movs
in
or
loop
lods
sub
gs
adc
js
mov
xor
add
inc
and
into
fisub
xchg
lahf
cmp
mov
aam
sbb
outs
cmp
test
cmp
dec
jl
pop
sub
call
loopne
sbb
dec
sbb
loop
jmp
inc
fild
or
push
jbe
ret
mov
and
dec
push
mov
and
ror
sbb
inc
cmc
addr16
popf
lds
dec
leave
gs
cmp
int3
add
xor
ret
dec
jge
cmp
jle
leave
push
loope
es
sbb
push
pop
fs
enter
call
retf
mov
and
add
add
lea
and
add
inc
popa
sub
aaa
and
sbb
syscall
in
adc
out
xchg
xlat
sub
lock
adc
add
int3
jns
icebp
mov
xchg
push
inc
cld
or
inc
push
or
test
push
dec
xchg
mov
ret
lds
sub
call
mov
in
adc
leave
aaa
jns
mov
mov
mov
mov
sti
pop
add
cmps
mov
xchg
movs
jle
or
dec
xor
inc
xchg
mov
sub
daa
sbb
pop
or
or
and
or
iret
mov
xor
fs
(bad)
xor
in
sbb
in
test
jge
test
xor
inc
mov
in
jmp
out
icebp
pushf
dec
enter
mov
adc
repnz
xchg
pushf
cs
mov
push
test
xchg
cld
pushf
dec
push
test
pop
fcmovnbe
repz
xchg
push
pop
sbb
ins
retf
add
inc
and
in
and
cmc
add
dec
mov
dec
or
sbb
inc
dec
dec
mov
into
cmp
dec
fs
adc
pop
pop
ret
add
dec
xchg
mov
inc
test
push
xchg
cmps
mov
adc
pop
xor
cmp
jb
sar
or
test
xor
dec
ja
sbb
xor
add
and
imul
das
dec
fcmovnbe
test
mov
sbb
sbb
sbb
pop
loopne
sub
xor
out
ret
bnd
cwde
popa
fst
data16
mov
aam
pusha
mov
or
mov
add
mov
and
adc
or
pop
dec
or
inc
inc
mov
cmc
jne
sbb
pop
sub
aam
shl
jmp
daa
cmc
mov
ret
call
aad
pop
std
stos
aam
int
test
mov
pusha
js
add
stos
icebp
test
neg
pop
outs
sub
push
out
adc
rcl
jno
xchg
pop
sbb
mov
adc
mov
retf
(bad)
push
fadd
cmp
add
les
sub
jge
dec
push
xchg
popa
push
adc
pop
add
sbb
mov
fsub
sub
adc
pop
fucomi
inc
add
imul
mov
sysenter
shl
or
loop
bound
mov
sub
and
sbb
sahf
ja
adc
outs
and
aam
push
sbb
or
xchg
mov
jae
jmp
es
(bad)
stos
movs
dec
in
cwde
xchg
mov
jns
add
pop
nop
popa
inc
lock
nop
mov
and
pop
xor
add
(bad)
lods
adc
popf
adc
and
std
sub
cmc
xchg
add
mov
inc
push
xor
xor
in
sub
sbb
add
ret
adc
inc
sub
adc
dec
in
in
or
mov
nop
pop
sbb
add
cmp
dec
sub
xchg
fild
and
adc
rcl
jge
dec
enter
add
xchg
ds
imul
add
add
cmp
addr16
inc
(bad)
or
xor
(bad)
fdiv
fist
inc
pusha
ss
adc
xchg
es
xor
mov
iret
add
adc
mov
add
adc
sub
pusha
test
jmp
imul
stos
xor
mov
jl
call
xor
mov
inc
nop
jbe
stos
and
(bad)
setne
mov
xor
fist
imul
fimul
scas
push
jno
or
xchg
stos
test
xchg
(bad)
xchg
and
(bad)
and
call
adc
mov
adc
imul
xor
and
add
aaa
faddp
and
inc
cmps
fimul
in
inc
and
out
in
ret
sub
loopne
icebp
ins
sbb
sub
xchg
fs
mov
jmp
inc
pop
add
in
jg
movs
push
jbe
jg
test
leave
daa
pop
xchg
lar
daa
jne
mov
imul
or
add
fdiv
out
xor
and
xchg
jecxz
add
mov
add
inc
cmp
adc
lds
test
ret
test
cmps
dec
and
jl
mov
ja
adc
outs
add
and
or
bswap
and
cmp
mov
and
fcmove
add
and
jae
rcl
test
adc
and
in
or
jmp
and
ss
push
adc
cmp
inc
adc
mov
jb
and
dec
or
dec
lea
mov
pop
iret
and
loope
mov
sbb
enter
sub
rol
stc
outs
test
or
out
inc
stos
pop
dec
mov
adc
out
xor
leave
stc
cmp
mov
add
mov
add
jmp
or
mov
shl
mov
cmp
movs
cs
sbb
lods
fcomp
dec
xchg
adc
push
test
add
daa
inc
add
sbb
xchg
adc
hlt
xor
add
or
adc
jle
jbe
test
add
and
xchg
cmps
das
inc
push
cmp
xchg
in
inc
sahf
dec
sbb
test
xor
cwde
xchg
sbb
in
call
stc
inc
popf
mov
mov
test
std
push
mov
mov
xor
inc
push
mov
aas
mov
pop
cdq
sub
sbb
adc
call
xchg
mov
and
leave
pop
mov
add
inc
mov
push
and
cmp
das
and
add
add
or
inc
call
stos
push
test
and
add
sub
push
add
aad
test
xchg
cmp
xchg
add
mov
inc
iret
add
cmp
xchg
outs
mov
mov
or
dec
pop
cs
xchg
inc
mov
add
xchg
jge
ss
mov
push
push
mov
and
cmc
(bad)
arpl
outs
sub
add
sub
pop
jge
scas
aaa
arpl
sub
outs
cmp
in
xchg
daa
add
loope
inc
stos
xor
mov
mov
loope
push
pop
test
imul
jp
popf
mov
xlat
add
lods
inc
fld
dec
fs
xchg
adc
rol
out
or
mov
jne
cmp
shr
sbb
push
fnstenv
pop
jge
adc
jmp
mov
add
xor
xchg
div
das
jmp
dec
add
inc
jne
push
test
xchg
mov
ins
int
leave
adc
adc
inc
aaa
or
into
mov
mov
sbb
fstp
lea
xchg
dec
xor
and
jbe
jb
vmovhps
inc
sbb
cmp
and
xchg
xor
xchg
and
lahf
imul
xor
dec
or
sbb
mov
stos
sub
push
test
or
imul
out
add
or
jge
scas
out
xchg
sbb
inc
clc
pop
clc
sbb
mov
inc
cld
aaa
fimul
mov
test
xchg
sbb
pop
or
test
sbb
rol
icebp
mov
popa
sbb
outs
jecxz
adc
push
fs
mov
stc
push
cmc
adc
add
in
dec
das
or
jae
inc
sbb
fs
cdq
jo
adc
fisubr
sub
movs
rol
rcl
sahf
mov
sub
arpl
push
push
mov
(bad)
dec
mov
aaa
inc
and
mov
jo
data16
xor
mov
call
(bad)
clc
add
enter
pop
sub
loop
in
loopne
(bad)
rcl
fdivr
push
pop
(bad)
rol
inc
loope
and
xor
call
shl
push
adc
(bad)
xchg
mov
xchg
ss
test
data16
adc
cmp
mov
or
adc
rcr
and
lds
cwde
inc
cmp
add
jno
mov
jne
adc
adc
inc
loope
mov
addr16
fiadd
or
mov
sub
push
(bad)
sub
add
daa
lods
add
pop
repnz
push
push
ds
popa
shl
ret
hlt
jbe
cmp
ds
sbb
mov
daa
dec
sub
out
xchg
jbe
stc
add
dec
hlt
sahf
mov
lds
xor
add
jo
(bad)
and
retf
mov
dec
lods
add
je
jnp
jae
push
jno
out
sub
pop
jbe
arpl
sbb
cs
or
popa
inc
lods
and
and
xchg
push
mov
push
add
sar
sbb
fxch
xchg
ins
xor
xchg
mov
sbb
retf
sub
xor
xor
sub
xchg
dec
(bad)
retf
xchg
push
push
mov
pusha
outs
inc
cmp
add
xchg
push
push
mov
cmp
add
jmp
out
mov
and
or
adc
push
or
add
ins
or
rcl
das
push
or
pop
ret
adc
inc
pop
pop
(bad)
call
dec
xor
xor
loope
fbstp
and
cmp
fadd
mov
repnz
or
mov
or
ror
cdq
dec
lock
jge
push
push
mov
mov
adc
push
sub
mov
dec
push
add
dec
pop
movs
adc
dec
les
pop
imul
(bad)
(bad)
test
or
dec
lods
test
push
mov
xor
ret
mov
rol
dec
lahf
xchg
in
xor
cmp
cmp
xor
icebp
jne
loop
mov
push
movs
cs
pop
mov
loopne
inc
and
push
sbb
or
sbb
adc
or
jmp
loop
faddp
pop
aad
ror
and
push
push
or
xchg
add
and
jge
hlt
leave
dec
pop
test
or
xchg
out
and
push
xor
or
pop
sub
lahf
xor
inc
or
mov
add
push
inc
and
cmp
and
bound
xchg
data16
dec
xor
adc
and
push
shl
push
mov
lods
adc
push
outs
sbb
fiadd
sub
lds
cmp
dec
out
call
cmp
pushf
sahf
(bad)
dec
xor
ret
xchg
fs
add
imul
stc
pop
mov
lahf
sub
in
inc
in
aaa
adc
or
cmps
mov
xor
inc
fisub
cmp
pop
(bad)
enter
cld
(bad)
sbb
or
test
jns
mov
jno
inc
pushf
inc
stos
call
sub
xor
sbb
aad
icebp
push
dec
lods
push
inc
popa
add
std
js
jbe
js
jo
cmps
push
xchg
shl
dec
or
imul
adc
pop
jnp
movs
fsubr
retf
(bad)
(bad)
xchg
xchg
fwait
pop
pop
xchg
mov
std
and
shl
movs
cmc
pop
or
mov
mov
sub
pop
or
lods
in
and
add
sbb
pusha
cmp
adc
inc
inc
sbb
cdq
stos
ins
dec
and
xchg
xchg
ror
pusha
adc
push
xor
or
adc
mov
inc
pop
cmps
adc
add
aas
movs
mov
mov
mov
ret
sub
sub
ja
and
add
mov
dec
adc
fild
mov
mov
bound
push
mov
inc
add
dec
popa
dec
cmp
add
in
dec
in
cmps
icebp
push
into
adc
test
or
lahf
mov
push
add
add
jmp
pop
sub
mov
add
push
or
cmp
or
call
inc
lods
or
dec
enter
ja
dec
push
sbb
rol
aam
pop
jo
les
addr16
inc
fcom
add
mov
mov
mov
jl
mov
(bad)
(bad)
test
sbb
test
or
inc
xor
add
inc
je
mov
cmp
mov
scas
pcmpgtb
mov
xchg
sub
retf
sub
xor
ror
jmp
in
pop
das
and
add
(bad)
fsubr
sbb
jns
push
cli
xchg
jbe
xchg
ins
sub
dec
push
cmp
call
sar
imul
inc
jl
pop
rcr
and
adc
in
jg
add
push
stos
sub
lea
test
add
fmul
push
(bad)
xchg
(bad)
fild
test
(bad)
cwde
imul
(bad)
rol
add
sub
mov
imul
inc
call
pushf
test
jp
fcmove
or
(bad)
std
mov
mov
shl
mov
fist
dec
sbb
cmp
test
jge
cmp
xor
pop
rcr
add
dec
ins
clc
pop
scas
mov
pop
leave
enter
inc
fadd
and
jne
int3
aaa
cmp
cmp
les
adc
adc
adc
xor
ss
sub
mov
sub
inc
jne
and
xchg
cmp
dec
add
fwait
popf
cdq
lea
movs
mov
shl
mov
les
jbe
sar
bound
popa
mov
fisttp
pushf
mov
xor
inc
in
sbb
cmps
xchg
add
dec
addr16
adc
xchg
push
push
ror
mov
or
add
mov
xor
retf
mov
dec
rcr
push
leave
int
addr16
push
in
loope
dec
ret
adc
sar
pop
xchg
sbb
sbb
push
add
add
mov
outs
rol
add
xchg
add
add
out
push
cmps
mov
mov
repnz
push
enter
push
mov
dec
test
sub
test
push
scas
mov
dec
adc
aad
xchg
sbb
and
sub
fwait
adc
cmp
inc
sub
repz
pop
jmp
(bad)
and
sahf
loope
lea
enter
jne
lods
cli
fucom
aas
dec
popf
dec
add
xlat
and
in
clc
xchg
or
lahf
jmp
jno
adc
xchg
ja
cld
mov
mov
movs
loope
and
sbb
inc
adc
lea
pop
mov
mov
dec
aam
and
cli
cmps
or
and
mov
mov
and
int3
or
dec
mov
xor
and
mov
pop
dec
rol
dec
push
jb
inc
jge
sub
push
sbb
ins
inc
rcr
xor
pop
ret
mov
push
in
dec
push
or
sbb
rcr
das
jecxz
jp
or
mov
xchg
xchg
push
push
inc
jmp
push
lea
in
imul
dec
push
or
fmul
inc
add
mov
sahf
or
mov
jbe
or
dec
fldcw
or
adc
shr
push
ja
inc
dec
faddp
push
mov
scas
or
bound
cld
retf
retf
mov
leave
push
and
sbb
ins
and
call
sbb
dec
clc
jne
cmp
ins
push
add
sbb
inc
dec
std
ins
sub
pop
inc
ins
sbb
or
retf
add
int3
pop
or
xor
ins
scas
jnp
nop
aad
sub
dec
xchg
mov
and
adc
sar
xor
popa
inc
xchg
mov
dec
nop
mov
push
hlt
and
add
or
pop
rcr
add
repnz
xchg
sbb
add
mov
(bad)
shl
add
adc
dec
dec
xor
pop
and
push
and
xchg
test
mov
inc
adc
pop
jbe
(bad)
and
imul
dec
leave
sbb
mov
adc
ins
or
je
add
adc
sahf
jno
(bad)
adc
pop
dec
je
ss
push
dec
or
nop
or
mov
add
push
sahf
aam
xchg
retf
sbb
push
cli
adc
or
test
jle
call
leave
adc
jae
sbb
cmps
in
in
jns
ds
xchg
dec
mov
pop
cld
inc
scas
dec
(bad)
mov
in
adc
mov
call
jns
cwde
mov
pusha
adc
dec
mov
popf
aad
and
xchg
xchg
push
sub
xchg
add
sbb
adc
xchg
ins
inc
ror
adc
frstor
es
inc
popa
add
add
outs
test
pop
imul
lea
inc
add
and
std
mov
fisttp
adc
push
mov
or
in
cmp
nop
popa
imul
call
xchg
add
sub
or
stos
jb
sbb
test
lea
xchg
xor
push
popa
cmp
or
pop
dec
mov
sbb
fadd
rcl
push
push
pop
jbe
and
push
mov
jmp
addr16
ret
loopne
pop
aam
pop
cmp
test
dec
cmp
cmp
xchg
popf
iret
pop
sbb
push
adc
ja
jmp
in
in
add
sbb
sbb
lea
addr16
outs
jne
and
dec
add
out
sub
cmp
test
xchg
sbb
dec
push
xor
dec
push
sbb
lea
in
jnp
and
inc
or
sar
push
xor
add
addr16
bound
and
lea
test
xchg
int3
les
pop
push
mov
test
xchg
(bad)
sub
movs
dec
sub
mov
dec
xor
shl
retf
lahf
and
sbb
push
ret
or
xor
dec
hlt
fisubr
int3
xor
xor
pextrw
jne
push
cmp
xor
cmp
mov
adc
and
call
or
mov
les
sti
add
sub
and
fcom
adc
push
out
lods
jnp
pop
mov
pop
nop
mov
mov
test
inc
dec
or
ret
mov
push
sub
push
jp
sbb
pop
lss
sub
xor
push
push
cmp
inc
stos
cwde
mov
and
lock
retf
neg
imul
(bad)
sub
mov
push
xor
mov
sbb
push
clc
pop
retf
xor
psllw
xor
adc
add
shr
in
adc
xchg
and
xor
sbb
sbb
mov
mov
sub
add
in
cmp
ja
pop
inc
jne
fcomp
jae
sar
arpl
inc
dec
pop
add
jbe
sub
or
adc
xor
adc
fcomp
jmp
sbb
or
adc
dec
sbb
xchg
mov
adc
xor
lock
push
sar
jge
dec
inc
ret
sbb
add
inc
add
jbe
out
add
sub
ins
adc
fisttp
push
ret
cdq
(bad)
mov
popf
pop
enter
cwde
push
iret
push
popa
leave
das
mov
xchg
and
das
outs
push
pop
push
sub
pop
jne
adc
jne
in
and
stos
imul
in
mov
fld
add
mov
pop
pop
xor
or
sub
clc
cdq
call
push
sbb
ret
jns
mov
sub
fbld
pop
sbb
cli
jp
adc
and
jbe
and
sbb
xor
pop
lahf
cmps
bound
jae
nop
test
or
shr
jbe
cli
out
or
clc
mul
test
pop
mov
and
sub
add
or
sbb
cmp
xor
sbb
sbb
cmp
push
sub
push
mov
imul
adc
stos
sub
cmp
popf
mov
aas
enter
or
es
lods
test
lds
inc
mov
jbe
hlt
pop
add
xchg
dec
fs
shr
or
(bad)
and
xor
aaa
pop
and
out
mov
push
sbb
movs
cmp
(bad)
popa
scas
retf
sbb
xchg
jmp
lods
cmp
js
sbb
sbb
lds
push
push
mov
ror
imul
or
sbb
or
dec
lea
ins
(bad)
arpl
(bad)
add
psrlw
push
add
sbb
xchg
push
jb
push
lods
les
mov
adc
test
adc
pop
das
add
scas
cwde
into
fstp
rcl
xor
loop
call
xor
test
rcl
adc
xor
(bad)
cmp
sub
or
add
mov
int3
hlt
out
sbb
dec
test
pop
mov
mov
nop
jle
stos
pop
lahf
or
aad
adc
add
ins
fsub
sub
push
test
push
pop
push
test
pop
outs
icebp
xchg
lds
jb
mov
cmps
mov
retf
test
scas
add
dec
adc
lahf
add
dec
and
lods
push
(bad)
rol
imul
mov
inc
fisub
push
cmp
int3
lea
or
sub
add
aad
xor
je
inc
cmp
das
adc
push
add
(bad)
mov
push
repnz
or
mov
call
sub
push
scas
inc
inc
dec
add
sbb
mov
add
fadd
add
inc
inc
ds
aad
sbb
daa
or
xor
mov
call
test
stos
cmps
pop
les
xchg
mov
fcom
or
dec
test
or
nop
test
jno
ror
(bad)
mov
cwde
loope
jno
(bad)
pop
cmps
push
cdq
popf
sbb
mov
sbb
imul
mov
push
cmp
mov
or
sub
test
push
ja
adc
and
adc
in
or
push
clc
push
or
push
mov
jp
xchg
or
push
push
shl
outs
bound
push
shl
dec
ss
(bad)
leave
dec
push
push
pusha
std
jo
mov
addr16
xor
sub
push
add
cmp
add
push
inc
mul
xchg
sub
stc
and
in
cmp
add
mov
sub
add
pusha
pusha
pop
punpcklwd
cmp
add
and
and
add
push
add
mov
pusha
mov
stos
arpl
stc
add
jl
adc
cmp
hlt
bound
rcr
jbe
adc
inc
add
sub
(bad)
pop
retf
or
jno
ds
cdq
xor
jne
dec
mov
stos
xchg
adc
icebp
outs
imul
retf
push
dec
icebp
popa
mov
push
cmp
sub
sbb
mov
add
xor
adc
cld
test
cmp
sub
fcomp
jo
lahf
enter
enter
jecxz
mov
inc
and
xor
in
push
bound
mov
cmp
pusha
ins
xchg
daa
imul
push
jae
pop
cmp
push
arpl
fst
rdtsc
xor
sbb
cmp
(bad)
std
pop
ret
pop
sbb
call
cmp
xor
add
sbb
inc
movs
inc
imul
mov
add
dec
popa
call
scas
xchg
sti
mov
loopne
pop
shl
and
xchg
or
mov
mov
daa
push
adc
sub
jbe
inc
mov
icebp
xor
inc
xor
mov
pop
push
dec
pop
add
mov
inc
in
inc
adc
or
imul
lds
add
pusha
jo
mov
and
xchg
repnz
jle
push
test
jno
and
xchg
mov
mov
icebp
mov
gs
and
scas
shl
push
mov
push
push
xchg
or
sbb
test
sahf
push
cmp
xchg
and
mov
xchg
ja
ret
add
inc
xchg
pop
sahf
sbb
repz
(bad)
sub
adc
mov
in
int3
xor
or
jno
sbb
out
pop
inc
jb
ror
gs
or
mov
xchg
pop
pop
adc
subps
(bad)
nop
mov
sub
scas
in
arpl
fwait
sbb
outs
pop
call
imul
ins
xchg
cld
rol
jbe
jae
jle
test
arpl
sub
test
out
(bad)
dec
sub
movs
sub
xchg
in
or
or
xchg
imul
stc
stc
shl
leave
mov
or
sub
and
jmp
and
loope
rcr
jns
call
aad
hlt
arpl
mov
add
mov
dec
repnz
push
mov
mov
or
dec
and
pop
push
pop
dec
mov
push
mov
push
or
in
dec
cmp
push
stc
push
mov
or
and
xor
sub
call
sub
or
shr
sbb
sar
inc
ja
das
sub
or
xchg
xor
or
adc
cmp
pop
mov
int3
dec
std
mov
mov
mov
jle
push
push
cmp
sub
aas
add
mov
sub
push
dec
icebp
cld
push
mov
sub
inc
and
popa
adc
jle
adc
or
mov
loope
adc
cmp
xor
push
addr16
mov
adc
fcomi
nop
mov
cld
add
push
int
sub
push
mov
push
addr16
adc
and
iret
adc
mov
xor
or
and
mov
and
iret
adc
iret
inc
cmp
add
push
aam
fidivr
jle
fistp
rol
rol
inc
cmp
js
add
out
inc
fisttp
sbb
pop
fucomip
dec
(bad)
sbb
aad
aad
lds
mov
dec
mov
xchg
or
ror
and
mov
adc
or
add
imul
nop
pop
sbb
xor
add
mov
mov
fcomp
adc
leave
mov
pusha
sub
xchg
dec
or
mov
xchg
movs
adc
inc
(bad)
shl
ret
int
cmp
pop
es
xchg
pop
cdq
mov
sbb
jmp
ror
inc
gs
fs
lahf
xchg
sbb
rcl
test
jecxz
sub
gs
sub
jo
lods
adc
mov
inc
loop
inc
adc
adc
jg
mov
sub
jae
and
or
loope
enter
sbb
cmp
xor
fdiv
leave
enter
dec
jbe
in
sub
inc
and
push
ret
cwde
stos
xor
and
xlat
ins
loop
scas
loopne
daa
jmp
cmp
ret
xor
loope
cmp
fs
add
pop
daa
pop
fild
cmp
push
push
scas
jb
xchg
and
jmp
adc
jge
adc
call
cmp
and
add
xchg
clc
cmps
inc
push
and
movs
repnz
xchg
int3
add
fld
mov
add
sbb
popf
xchg
cwde
add
bound
clc
fs
jbe
sub
loope
dec
add
push
aad
xor
pop
adc
enter
ret
ret
jne
and
and
inc
mov
les
pop
mov
cli
jbe
mov
xor
out
mov
je
inc
in
or
ret
or
(bad)
mov
add
sub
or
int
and
or
or
add
push
add
and
mov
(bad)
and
push
add
dec
or
adc
add
in
loope
addr16
dec
adc
xor
shr
into
loope
leave
(bad)
fs
xchg
fild
push
test
loope
les
mov
jl
mov
lds
fisubr
lds
and
dec
adc
adc
pop
add
inc
push
and
add
cld
add
push
jmp
push
sbb
mov
push
enter
dec
inc
mov
jnp
sub
add
push
popa
je
pop
retf
pop
or
push
and
jbe
in
adc
mov
loope
mov
dec
add
shl
dec
pop
daa
fdivr
mov
sbb
cld
stc
inc
rcl
in
and
sub
xor
dec
jb
adc
cs
dec
cmp
lahf
xor
sub
in
adc
xchg
imul
add
cmc
add
mov
sbb
adc
out
mov
sbb
stos
bound
or
aaa
shl
(bad)
icebp
bound
inc
mov
out
(bad)
or
add
es
int
adc
cmp
jnp
pop
adc
imul
sbb
adc
and
fstp
or
or
aaa
mov
cdq
push
pop
dec
sub
adc
xor
add
xor
stc
imul
(bad)
jo
ficomp
or
mov
stc
pushf
or
inc
inc
push
popa
add
jecxz
inc
pop
dec
(bad)
pop
in
in
mov
and
jg
adc
pop
mov
add
xor
adc
shr
mov
pop
add
or
stos
aad
or
add
in
mov
inc
inc
adc
sub
pop
inc
or
cmp
ds
inc
das
lods
cmp
xchg
cmp
call
sub
stc
adc
imul
add
jecxz
add
stos
inc
xchg
call
les
inc
dec
add
fsubr
cmps
and
shr
shr
push
movs
mov
or
xor
test
pop
or
cmps
or
jbe
xor
retf
aas
dec
sbb
pop
xor
aaa
lahf
jle
mov
mov
in
fimul
pop
and
xchg
add
add
popa
add
(bad)
fidiv
in
imul
push
sbb
sbb
xchg
out
ss
push
popa
scas
or
sbb
push
in
push
lds
cmps
add
mov
sub
cmp
out
jae
js
test
inc
inc
popa
call
mov
stos
sbb
sbb
pop
push
or
inc
cmp
packsswb
test
rcr
add
mov
inc
add
leave
xor
adc
mov
cmp
lds
mov
push
jno
fdivr
or
sbb
daa
push
retf
add
out
dec
pop
sbb
fs
les
enter
jg
cmp
gs
enter
fisttp
rcr
pop
stos
push
(bad)
retf
mov
rol
mov
push
fsubr
fmul
daa
das
inc
cwde
xor
gs
inc
bound
cmp
inc
lock
and
pop
mov
and
or
test
ja
xor
(bad)
inc
xchg
lods
mov
add
mov
and
cdq
icebp
mov
sub
or
sub
xchg
adc
cmovle
xor
icebp
add
add
mov
push
xchg
(bad)
xor
or
dec
sub
add
push
fld
int
(bad)
cmp
xchg
dec
xchg
nop
icebp
add
cmp
push
leave
add
add
cmp
dec
jo
test
pop
js
push
dec
aaa
lds
jb
dec
pop
dec
pop
mov
gs
adc
adc
neg
sub
inc
or
lods
mov
gs
add
pop
jne
call
cli
and
loopne
rol
add
mov
retf
or
jl
repz
movzx
pop
adc
adc
or
pop
fst
cmp
inc
sbb
add
push
and
aas
fwait
mov
adc
(bad)
xchg
sbb
sub
sbb
push
or
mov
ror
or
lahf
mov
mov
xlat
jnp
sbb
and
sahf
sbb
mov
jl
adc
adc
pop
inc
call
inc
das
add
inc
popa
dec
sar
leave
inc
dec
xchg
aas
mov
(bad)
hlt
in
sbb
pop
mov
pushf
dec
mov
loope
inc
sub
and
icebp
loop
fld
adc
gs
mov
mov
or
mov
fstp
mov
push
in
ja
pusha
pop
cmp
jmp
mov
imul
and
and
pop
mov
and
retf
std
add
ret
or
adc
sub
(bad)
in
jno
mov
ja
(bad)
test
lds
inc
push
dec
jbe
pop
mov
pop
(bad)
and
cwde
es
(bad)
jmp
xchg
push
inc
mov
aaa
push
ror
and
dec
setle
adc
outs
cmc
scas
addr16
test
das
or
jno
leave
sbb
or
dec
mov
inc
and
push
cmp
jo
mov
outs
or
dec
adc
fimul
pop
xchg
inc
lock
and
mov
sub
adc
sbb
and
and
jg
cli
push
adc
mov
fldcw
cwde
mov
sub
dec
mov
sbb
into
push
dec
push
jno
std
test
dec
adc
das
push
push
dec
out
jle
adc
and
mov
pop
mov
jns
adc
imul
outs
ret
pop
push
inc
inc
adc
cs
xchg
sbb
cld
jno
xchg
adc
adc
jp
cmp
mov
pop
aaa
inc
add
ja
pop
je
loope
test
shl
mov
data16
xor
or
dec
jnp
sbb
aam
xor
test
stc
cmp
dec
dec
add
xchg
rol
sub
arpl
inc
sbb
in
add
push
sbb
lds
pusha
jb
popa
xchg
movs
les
mov
and
cmc
jle
ss
scas
cmp
add
jecxz
add
inc
sbb
loope
cs
add
mov
mov
popa
mov
xor
inc
pop
sub
sbb
bound
test
push
int3
sub
int3
push
xor
and
dec
and
adc
adc
add
mov
or
test
sahf
mov
add
or
push
or
aam
lahf
retf
ins
cdq
dec
dec
jo
test
je
dec
lods
cmp
in
mov
xor
and
aad
arpl
call
add
jns
pop
test
lds
or
mov
sub
add
or
mov
mov
iret
rol
push
xor
cdq
mov
add
push
adc
xchg
fadd
xor
outs
sar
mov
es
dec
dec
fbstp
xchg
jmp
(bad)
out
xor
and
mov
test
or
or
mov
cmp
sub
shl
sbb
or
repnz
jno
and
xor
and
mov
adc
jno
shl
mov
jle
sub
loope
push
sub
sub
xor
loopne
xchg
adc
and
or
mov
push
pop
rcl
test
das
loope
shr
and
xchg
sub
das
add
cwde
mov
inc
fbld
add
xchg
sub
xor
adc
je
mov
movs
cs
sub
push
add
mov
in
push
gs
push
lea
sub
dec
data16
xchg
inc
or
and
add
push
mov
daa
xchg
clc
sub
daa
dec
add
inc
or
inc
pushf
mov
shr
inc
adc
pop
adc
add
add
jl
clc
cmp
jbe
in
xchg
icebp
add
adc
xor
clc
push
cmp
in
adc
push
push
(bad)
iret
mov
adc
movs
mov
jmp
sub
push
and
adc
enter
loope
mov
xor
dec
or
pop
call
adc
push
push
pop
gs
imul
add
jno
xor
sbb
adc
mov
mov
dec
inc
pop
push
mov
into
push
cwde
and
pop
cmp
test
popf
dec
adc
mov
sbb
pop
or
sbb
cmp
jno
(bad)
or
adc
mov
jb
or
in
jbe
sbb
cmp
adc
fiadd
movs
dec
sbb
or
mov
mov
mov
pop
xor
sbb
cli
inc
push
dec
sbb
adc
inc
lds
in
and
out
or
pop
adc
call
or
add
ins
push
lock
test
pop
loop
jp
cmp
popf
ret
sub
jle
mov
dec
std
or
sub
es
inc
cmc
enter
push
aaa
lods
and
imul
scas
xchg
jbe
push
test
xor
push
or
sbb
in
ss
test
daa
dec
jae
adc
mov
data16
mov
mov
jae
cmp
xor
push
cmp
push
test
sbb
mov
not
lds
out
test
adc
out
pop
adc
js
lock
and
pop
xchg
xchg
adc
sbb
loope
pop
adc
icebp
xor
sub
dec
jge
cld
nop
jl
push
ret
adc
cld
in
or
pop
daa
icebp
xor
inc
icebp
aaa
and
mov
fild
lods
push
jp
sub
add
jne
xlat
cli
dec
sbb
ins
xor
pop
pop
(bad)
or
or
lahf
xchg
je
stc
mov
aaa
push
or
lea
int3
adc
and
push
div
jnp
cwde
shr
pop
pop
sub
xor
ret
mov
aam
mov
jl
pop
xchg
cmp
sub
sbb
pop
xor
pop
push
(bad)
adc
add
icebp
test
lds
adc
inc
add
inc
(bad)
jg
push
bound
mov
adc
and
inc
test
lds
adc
push
lods
scas
xor
stc
sbb
mov
imul
dec
cmp
sbb
jb
mov
adc
hlt
push
pop
sub
push
inc
inc
push
xchg
add
sub
or
lea
ror
sbb
xor
icebp
in
neg
mov
mov
loopne
daa
or
in
in
retf
push
stc
loope
scas
pop
(bad)
push
retf
dec
cmp
adc
mov
mov
push
xchg
popa
sub
pop
out
mov
movs
inc
mov
ret
sar
jne
gs
adc
mov
(bad)
mov
push
inc
sub
repz
repz
or
xor
xchg
xchg
pop
jbe
sub
in
ret
add
adc
sub
mov
inc
pop
mov
jecxz
xor
cmp
sub
and
pop
xchg
xchg
xchg
dec
pop
add
sub
enter
xchg
xlat
sub
add
test
add
int3
dec
or
std
dec
ret
and
dec
mov
adc
jge
fs
pop
es
push
call
and
xchg
mov
and
fld
lahf
int3
dec
es
jecxz
mov
cmp
mov
push
cmp
inc
mov
retf
push
jno
pop
pop
sbb
cmp
inc
add
sbb
push
ret
inc
mov
gs
fnstcw
aam
sub
sbb
mov
and
ror
push
jo
dec
sbb
jae
repz
or
and
sub
push
push
adc
and
cwde
std
jae
mov
sti
out
lods
pop
es
(bad)
push
inc
retf
inc
mov
shr
xchg
addr16
push
clc
stc
aaa
add
push
add
scas
jo
mov
xor
xor
ror
out
js
loope
loopne
push
add
sub
push
add
xor
and
sbb
test
icebp
mov
and
adc
and
cmps
jb
fnstsw
dec
xor
(bad)
jmp
pop
xchg
sahf
cmp
jp
dec
xchg
add
enter
xchg
ficomp
dec
push
sbb
repz
(bad)
les
mov
fld1
arpl
call
pop
xchg
scas
lea
inc
lds
jp
(bad)
repz
inc
cmps
push
dec
aam
push
or
lds
xlat
xor
jp
scas
pop
xor
or
or
outs
repnz
inc
sar
pop
or
mov
and
sahf
adc
add
test
(bad)
xchg
popa
push
dec
inc
gs
cmp
push
sub
pop
iret
fistp
or
add
cmp
add
sbb
rol
test
neg
mov
mov
xchg
dec
mov
pop
repz
aas
stc
and
or
(bad)
jb
dec
push
or
sbb
fwait
inc
or
imul
sbb
test
(bad)
gs
xchg
sub
test
inc
add
and
push
jmp
xchg
and
(bad)
mov
stos
pop
push
pop
xlat
push
and
push
and
mov
xlat
adc
mov
pop
adc
arpl
pop
retf
jp
cmc
cmc
icebp
mov
sbb
jbe
ret
or
pop
adc
xchg
pop
add
mov
mov
mov
stc
dec
xchg
jno
or
jle
jl
adc
or
sbb
jl
and
pop
jns
rcr
test
jne
test
int3
or
cmps
sbb
das
push
inc
xchg
cmc
pop
aaa
in
stos
test
retf
dec
mov
js
stos
mov
int3
loopne
rcl
pop
mov
psubd
adc
jg
das
push
sub
add
sbb
out
push
mov
frstor
sbb
fst
sbb
in
dec
inc
dec
jb
inc
cmp
call
lahf
pop
rcl
jp
cmp
push
add
cmp
xchg
jge
push
inc
mov
fist
inc
mov
mov
fidivr
sbb
call
cmp
adc
push
call
in
(bad)
cmovno
pop
add
push
adc
retf
popa
es
cmp
sbb
sub
xchg
gs
mov
mov
out
aad
fist
pop
inc
or
cmp
push
ins
xor
mov
out
add
mov
dec
mov
inc
aad
cmps
icebp
and
dec
inc
pop
push
xor
inc
lods
sbb
push
nop
addr16
int
js
mov
test
xchg
pop
and
cmps
push
add
push
sbb
pop
xor
push
mov
pop
or
das
sbb
hlt
add
dec
mov
repnz
sbb
popa
add
rol
minps
dec
aam
inc
sub
and
mov
in
sbb
pop
in
in
leave
xor
popf
mov
cmp
pop
pop
xor
leave
push
mov
sub
add
lea
jecxz
(bad)
rol
addr16
lods
sub
out
adc
mov
push
xchg
jmp
push
sub
and
cmp
loop
inc
push
or
hlt
xchg
fnstsw
daa
push
repz
and
push
dec
adc
pop
push
jge
xor
adc
mov
daa
mov
in
or
adc
and
aaa
push
and
mov
popf
pop
mov
jno
push
xor
and
adc
cli
das
jo
push
xor
push
cmp
xor
add
pop
lahf
sahf
dec
dec
lds
cmp
repnz
mov
cmp
imul
inc
xchg
dec
hlt
pop
imul
xchg
add
aaa
int
push
clc
dec
test
adc
sub
movs
mov
ds
push
repnz
adc
add
not
cmp
and
out
push
xchg
in
adc
mov
(bad)
xchg
push
dec
jno
out
es
loope
inc
stos
fbld
iret
scas
push
add
push
xchg
sub
xor
push
inc
mov
shr
rcr
add
jle
inc
sub
or
inc
rcl
fdiv
or
pushf
inc
or
xabort
push
cmp
and
std
inc
push
mov
and
mov
add
pop
mov
js
and
mov
jbe
sub
xor
mov
fcmove
push
push
inc
leave
push
push
push
xchg
push
fs
(bad)
jmp
dec
add
jne
xor
adc
adc
cmps
or
cmp
jle
or
mov
cmps
pop
adc
pop
push
imul
mov
dec
jns
outs
mov
popa
push
xchg
addr16
and
and
and
push
rol
mov
sub
loope
mov
jno
cmp
adc
or
adc
inc
int3
jle
jge
or
xor
icebp
mov
out
iret
loope
aaa
inc
aaa
add
daa
in
xchg
xchg
sbb
cmc
or
icebp
repz
push
or
xchg
push
dec
sbb
push
arpl
addr16
add
xchg
ret
dec
pushf
ret
jno
jno
push
icebp
loope
inc
sub
not
or
add
inc
sbb
lods
or
adc
outs
sub
jg
or
rol
push
mov
les
fisub
push
mov
push
in
outs
pop
xor
sub
aas
mov
fcom
sbb
push
jae
push
push
xor
and
inc
push
mov
lods
xchg
sbb
push
xor
add
and
jmp
adc
sub
cs
jne
dec
aad
int
dec
mov
outs
jp
cs
push
add
add
adc
dec
loop
mov
push
cmp
dec
cmp
mov
mov
popa
outs
sbb
test
iret
cli
mov
dec
mov
mov
push
dec
and
xchg
or
pop
adc
or
aas
and
sbb
mov
add
das
imul
sbb
mov
add
(bad)
cwde
sbb
imul
jne
mov
xchg
cwde
lea
retf
inc
mov
xor
push
jae
sub
aad
ins
adc
adc
mov
adc
inc
mov
retf
mov
push
sub
jp
jo
jb
mov
adc
push
and
and
or
lds
call
mov
sub
int3
mov
xchg
stos
dec
mov
fwait
lds
or
add
test
sub
pop
cmp
mov
fistp
push
popa
cmp
sti
test
push
out
loopne
adc
rcl
and
inc
xor
pop
call
jbe
inc
xor
ret
xchg
sahf
nop
les
enter
dec
sub
aad
dec
call
pop
addr16
xchg
cmp
xchg
sub
out
push
movs
add
fisttp
jae
sub
loope
inc
xor
inc
jmp
pop
repz
xchg
inc
cmp
sbb
jmp
stc
jns
mov
in
or
pop
inc
in
xchg
rol
pop
mov
inc
(bad)
mov
xchg
dec
pop
cdq
push
sbb
pop
dec
cli
inc
or
cmp
sub
leave
sub
or
push
mov
inc
lods
lods
jecxz
adc
add
jne
add
sub
dec
adc
lds
arpl
nop
aam
imul
pop
sub
pop
and
mov
adc
xor
jmp
jmp
sub
bound
lahf
fbld
push
mov
int
mov
add
adc
jb
dec
push
mov
loope
xchg
stos
in
(bad)
mov
out
loopne
adc
or
and
push
bound
cmp
sbb
fstp
adc
xor
cmp
push
jno
cmp
adc
adc
pop
adc
inc
pop
mov
test
popa
imul
test
aad
xchg
popa
sbb
or
adc
frstor
cmp
mov
out
add
push
pop
inc
movs
sub
test
stc
mov
jp
in
sub
arpl
sbb
loope
in
in
xchg
dec
jmp
and
icebp
xchg
in
xchg
push
unpckhps
bound
loop
je
pop
daa
ret
cmp
call
pop
dec
dec
dec
dec
push
mov
xor
inc
add
dec
test
adc
pop
cdq
sar
dec
sub
xchg
fld
sub
fisubr
inc
cmp
stos
add
or
jno
adc
pop
loop
xor
in
inc
call
mov
inc
cwde
dec
je
mov
adc
sti
lds
sub
lods
stos
jne
sub
adc
fild
mov
ldmxcsr
ret
inc
mov
sbb
push
push
mov
xchg
rcr
pop
cs
sub
push
retf
into
cdq
sub
in
cmp
add
xor
sbb
push
loope
(bad)
mov
or
and
xlat
dec
mov
pop
add
call
xchg
or
stc
int3
mov
sbb
fsubr
pop
sub
sub
mov
and
pop
pop
add
mov
or
pop
cmc
jnp
stos
dec
push
leave
imul
stc
pop
lods
rcr
and
xor
or
cmp
cmp
movs
fwait
push
xor
push
dec
sub
cmp
pop
add
sub
push
test
dec
fs
or
call
cdq
cmc
cmp
mov
test
add
(bad)
retf
cmp
sub
test
inc
add
mov
int
mov
xchg
mov
mov
cmp
push
sbb
sbb
js
fucomi
addr16
sub
leave
inc
cdq
and
mov
dec
push
sar
jg
cli
add
test
je
push
pusha
test
add
xchg
cs
push
inc
(bad)
shl
inc
gs
push
cwde
or
cdq
cmp
nop
pop
retf
inc
add
data16
jno
inc
pop
dec
jo
scas
ds
lahf
pop
addr16
add
and
loope
xchg
pop
pop
pop
or
adc
mov
cli
pop
push
repz
jg
aad
rcl
xchg
movs
xchg
xlat
int
xchg
cmp
add
pop
add
pop
ins
setge
or
movs
fwait
imul
inc
adc
mov
inc
pop
mov
push
stc
movs
pop
ds
(bad)
je
jmp
inc
mov
ds
or
push
pop
(bad)
shr
adc
xchg
imul
das
or
imul
cmp
xor
xchg
mov
adc
pop
sbb
xchg
gs
mov
popa
clc
mov
stos
pop
adc
shl
gs
cmc
mov
shrd
or
(bad)
mov
in
or
xchg
fiadd
add
sub
adc
adc
aad
mov
cmp
ret
sbb
sbb
adc
mov
xchg
mov
inc
add
push
add
pop
pop
inc
fwait
ja
inc
pop
pop
pop
sbb
or
inc
(bad)
xlat
push
sbb
dec
adc
pop
add
outs
push
inc
adc
outs
push
sbb
frstor
sub
and
dec
ret
and
iret
test
lock
je
js
lds
or
hlt
xchg
xor
xchg
push
xor
mov
popa
adc
imul
add
stos
add
cld
inc
and
add
les
scas
or
push
js
fiadd
mov
inc
sub
add
sub
leave
sub
mov
sub
add
jecxz
xchg
add
xor
xor
inc
(bad)
xor
(bad)
inc
xor
or
dec
xor
out
dec
ss
add
mov
add
cmp
mov
mov
or
push
dec
rol
cmps
mov
xor
and
lea
mov
aaa
cmp
or
jo
jno
jb
pop
in
inc
mov
pop
adc
and
xchg
adc
test
(bad)
dec
mov
sbb
das
cdq
sbb
add
test
sbb
nop
or
jns
or
arpl
pop
or
ja
jecxz
(bad)
es
lock
ret
daa
outs
add
loopne
inc
inc
imul
mov
push
add
lea
add
cmps
loopne
(bad)
jbe
rol
sbb
jae
or
push
ins
arpl
mov
adc
ja
sbb
push
stos
adc
setb
in
je
cwde
mov
lds
sbb
pop
ss
inc
xor
inc
sbb
repz
mov
jns
lock
fwait
call
outs
ss
and
lods
outs
mov
add
adc
mov
dec
fcomp
mov
pop
rcr
pop
sbb
aaa
das
sbb
xchg
stc
popa
mov
fist
inc
xchg
fs
or
inc
adc
or
jecxz
or
jne
mov
jbe
cmp
ja
jae
or
not
and
pop
test
mov
add
sbb
adc
or
xor
push
or
xchg
cdq
push
mov
mov
pop
jmp
or
jbe
or
je
adc
jae
sbb
mov
loop
dec
es
or
xchg
dec
sbb
jbe
cwde
pop
sahf
out
sahf
adc
inc
out
inc
mov
outs
push
jecxz
movs
sbb
add
push
add
or
or
stos
ins
pop
mov
dec
or
jo
sbb
(bad)
add
fwait
mov
into
pushf
or
mov
cmp
push
add
out
mov
popa
xor
inc
cmovno
and
dec
xchg
and
cmp
or
mov
pop
adc
push
and
bound
jl
and
mov
inc
ror
and
add
mov
shl
adc
scas
xor
xor
mov
xor
inc
scas
xchg
xor
pop
sub
pop
xor
or
add
adc
add
cmp
cmp
and
and
(bad)
jle
sub
shl
mov
cli
jo
fist
inc
in
in
dec
mov
(bad)
add
mov
inc
xlat
psubsw
pop
pop
rcl
repz
inc
or
pop
arpl
xchg
ror
sub
adc
mov
jg
lds
repz
jg
nop
xor
mov
pop
loope
xchg
fld
popa
xchg
mov
stc
into
rep
dec
call
pusha
sbb
push
ins
pop
jge
call
movlps
or
test
sub
out
add
pop
xor
in
dec
mov
or
(bad)
in
jge
ret
push
call
shl
sbb
push
es
mov
(bad)
jae
dec
dec
fild
push
clc
stc
cli
cld
push
leave
cwde
(bad)
jbe
test
adc
mov
jns
imul
and
addr16
dec
jns
mov
fstp
adc
mov
leave
jl
push
jo
(bad)
sbb
into
xor
sub
cli
sbb
mov
push
mov
push
sub
inc
loope
cmps
sub
ret
xchg
bound
sbb
sbb
sub
mov
push
and
pop
mov
dec
adc
inc
jns
add
xchg
test
outs
aaa
and
lods
test
mov
pop
test
ror
push
test
xchg
xor
dec
adc
and
or
pushf
sbb
mov
inc
shl
test
loope
outs
loop
(bad)
in
mov
and
cdq
dec
mov
inc
sub
mov
inc
outs
lds
add
xchg
loopne
mov
inc
cs
sbb
jno
dec
sbb
outs
mov
push
mov
sub
fst
cmps
sub
ss
cmp
fs
outs
push
jbe
adc
sbb
cmc
sbb
xlat
jne
mov
xor
jno
pusha
inc
add
retf
test
sahf
sub
sbb
scas
push
inc
fiadd
or
and
int
jecxz
stc
ret
je
push
test
lods
cwde
push
test
sti
xor
xor
sbb
nop
jp
add
cmp
(bad)
adc
add
std
aaa
cmps
adc
or
sbb
inc
add
or
and
outs
ja
lahf
mov
loopne
adc
push
add
add
jmp
fcomip
mov
sbb
in
mul
mov
sbb
or
push
cld
sub
xor
sti
cmp
es
cmc
add
test
inc
stos
xchg
popa
iret
pop
jne
fcmovbe
and
test
add
outs
and
adc
xchg
clc
pop
out
in
fsub
adc
hlt
shl
repnz
arpl
ret
add
xchg
xchg
sbb
std
add
inc
xchg
xchg
add
xchg
and
out
add
add
mov
scas
jno
add
ja
or
lods
add
adc
push
push
or
jle
jno
daa
add
jno
mov
mov
loope
inc
push
adc
inc
inc
mov
in
out
push
push
stc
pop
sub
shl
jecxz
cmp
in
das
xchg
sbb
sbb
xor
pop
xchg
ja
aaa
or
sbb
sub
enter
lahf
and
push
jb
inc
in
mov
std
clc
in
mov
mov
xchg
xchg
add
xor
in
adc
fadd
cld
add
pop
or
cmp
dec
or
dec
or
sub
add
or
aas
and
out
xor
mov
adc
in
xchg
icebp
aaa
add
ror
sub
rcr
pop
sahf
test
imul
push
js
aaa
bound
add
test
add
(bad)
sbb
add
and
pusha
mov
add
mov
fdiv
inc
scas
fild
sahf
int3
fdiv
sbb
loope
and
jns
test
jge
pop
and
or
arpl
or
jo
or
jl
inc
or
or
icebp
xor
mov
cmp
ret
jno
mov
mov
inc
fist
ret
adc
pop
out
or
dec
call
outs
rcl
push
inc
lea
out
xchg
mov
ret
iret
mov
push
popa
adc
es
fcmovnb
inc
jge
or
cmp
fwait
push
lea
xchg
pop
inc
sar
(bad)
rcl
cmp
jnp
lock
pop
push
pop
fnsave
lds
and
cld
xchg
add
xchg
pop
outs
mov
cmp
xchg
push
push
mov
dec
xchg
xchg
fisttp
mov
imul
inc
dec
fld
xor
mov
ins
cmp
sti
pop
push
adc
mov
pop
push
cmp
inc
call
pop
das
scas
cmp
pop
pusha
inc
inc
sub
xor
popa
mov
mov
rol
test
push
inc
or
jns
popf
cmp
scas
ror
push
leave
(bad)
lea
loop
pop
jnp
pop
sbb
jp
sbb
xchg
dec
sbb
cmps
or
jp
mov
out
call
jp
shl
inc
xchg
lea
add
mov
adc
sub
adc
ficom
mov
cmp
dec
add
adc
add
mov
loope
xor
add
cmps
xchg
or
push
fs
je
pop
mov
adc
(bad)
(bad)
fadd
popf
lock
pop
jge
bndstx
mov
sbb
test
add
mov
dec
push
add
popa
dec
add
clc
push
jge
test
in
repnz
das
lds
xchg
push
imul
add
jecxz
mov
pop
lds
fnstcw
mov
cwde
sbb
nop
mov
jbe
and
sbb
loop
out
mov
sar
(bad)
outs
add
jno
adc
sub
lock
pushf
sbb
jno
dec
(bad)
mov
or
mov
sub
(bad)
nop/reserved
lea
cli
fidivr
dec
in
add
adc
mov
lock
cld
inc
repz
jb
and
push
jbe
pop
add
dec
jbe
xchg
fsubr
and
dec
fmul
add
push
sahf
stc
lock
mov
out
or
imul
mov
ja
xchg
cmps
jmp
lods
and
mov
ds
or
inc
das
and
nop
inc
stc
lock
test
sub
add
fmul
es
das
adc
xor
push
add
dec
pop
xchg
sar
sbb
adc
sbb
data16
sbb
mov
jmp
mov
mov
cmp
push
out
dec
adc
out
jns
push
(bad)
sub
adc
push
in
lock
mov
and
ins
xchg
pop
sbb
sub
xchg
and
in
or
xchg
xor
inc
sbb
das
sub
inc
mov
push
imul
pop
or
mov
xchg
push
push
dec
cmp
xchg
inc
sbb
sub
inc
jmp
add
jae
shl
push
fadd
pop
and
mov
mov
mov
into
and
fs
sbb
test
data16
in
sbb
mov
push
and
inc
mov
cmp
mov
ins
push
mov
es
ret
or
adc
add
sub
mov
xchg
cmp
dec
repz
or
add
dec
push
cmp
sub
xchg
push
bound
and
mov
and
push
jb
dec
(bad)
shl
mov
inc
and
mov
loopne
push
add
mov
mov
sub
xchg
inc
popf
les
cmc
icebp
add
shl
loope
stc
add
adc
and
or
inc
and
sbb
nop
or
mov
sub
xchg
add
call
pop
inc
fwait
add
jb
adc
leave
mov
adc
cmp
push
push
mov
dec
xor
jg
xchg
push
or
xchg
ret
pop
jno
add
jl
sub
push
jns
xchg
mov
aas
pop
xchg
repnz
fisttp
sub
in
sbb
inc
jle
and
mov
add
pop
mov
xor
mov
sbb
les
and
push
sub
inc
(bad)
enter
push
scas
push
sub
retf
test
ja
icebp
sbb
xor
or
add
outs
shr
hlt
jnp
xchg
push
add
xor
jns
pop
xchg
mov
sbb
pop
arpl
push
outs
cmp
mov
cmp
pop
test
dec
test
xor
sub
je
add
or
rcl
and
enter
test
add
pusha
cmc
cmp
inc
das
shl
js
leave
xchg
xor
test
test
jns
in
data16
and
in
cmovge
shl
xchg
shr
mov
leave
push
je
or
cmp
pusha
mov
mov
cld
jbe
inc
sub
adc
add
into
or
sti
mov
shl
mov
loope
fwait
sbb
mov
lea
mov
xchg
sbb
cmc
dec
cmp
add
push
mov
sbb
or
mov
push
push
xchg
retf
mov
fdiv
cmc
add
or
add
inc
pop
mov
inc
push
shr
leave
add
shl
dec
and
mov
stc
push
push
inc
push
pop
test
mov
cmp
imul
es
inc
cmp
rol
clc
sbb
test
pop
xchg
loope
scas
push
out
call
cmps
test
dec
sar
xchg
adc
ds
sbb
jge
data16
add
fcomp
ins
sbb
or
adc
sub
mov
or
retf
out
pop
sub
fdivr
mov
sti
scas
hlt
lahf
call
push
add
and
enter
cmp
jbe
or
pop
movs
and
and
and
adc
jmp
xchg
and
in
xor
mov
xchg
cmps
dec
jp
push
or
xor
xor
push
aaa
sbb
push
scas
adc
lock
adc
call
sub
inc
cmc
dec
mov
pusha
ret
fsub
mov
mov
or
sbb
ins
cli
pusha
loopne
push
mov
out
inc
pop
addr16
push
fld
cmp
inc
in
add
in
jo
sbb
sbb
ins
sbb
push
dec
push
add
dec
inc
test
xchg
test
mov
mov
mov
into
push
shr
jg
fldcw
xchg
xchg
loope
jl
pop
xchg
cs
xor
pop
sbb
dec
cmp
(bad)
and
push
xor
(bad)
idiv
add
mov
add
push
cwde
xchg
push
fist
and
cmp
and
mov
movs
aad
mov
jg
sub
shl
mov
in
add
pop
xlat
add
data16
mov
das
jp
outs
jmp
add
mov
lea
sbb
mov
sbb
pop
lods
inc
add
in
or
adc
jg
bound
mov
adc
dec
ret
dec
or
loope
fs
jle
cmp
xchg
sbb
sbb
xchg
or
push
mov
(bad)
cmc
add
icebp
jge
es
and
jmp
push
sub
jp
pop
or
daa
cmp
mov
push
and
pop
mov
addr16
mov
add
add
add
loopne
push
inc
sub
inc
inc
xchg
jle
mov
or
icebp
mov
cdq
dec
ins
aad
push
js
mov
outs
cmc
add
adc
jecxz
pop
fmul
xor
and
inc
xchg
inc
or
add
mov
add
adc
das
adc
jecxz
repz
sub
jnp
add
aaa
xchg
not
sbb
sub
sub
or
xor
jle
dec
pop
leave
or
addr16
(bad)
and
dec
adc
and
daa
pcmpgtd
push
mov
aam
xchg
mov
icebp
xchg
fisttp
push
shl
cli
push
mov
jmp
pop
mov
xchg
adc
mov
enter
cmps
or
mov
push
ret
inc
bound
ss
add
and
push
dec
push
inc
add
xor
inc
mov
sti
and
xor
nop
mov
or
and
xor
xchg
add
or
or
cwde
sbb
or
xor
xchg
add
imul
sub
mov
xchg
add
fldenv
cwde
cmp
sbb
adc
add
dec
xchg
add
xchg
and
ins
sahf
sub
and
mov
mov
push
dec
inc
or
sub
mov
cmp
push
xchg
inc
adc
xchg
xchg
loopne
and
inc
ins
ins
or
jo
or
and
push
mov
and
imul
movs
or
xor
mov
xchg
dec
sbb
in
daa
mov
or
arpl
xor
pusha
imul
and
mov
sbb
pop
push
and
push
int3
repz
adc
lock
dec
or
je
mov
out
and
jmp
inc
xchg
out
sbb
adc
adc
or
bound
push
add
pusha
cmp
into
int
in
sbb
out
lds
fnstcw
into
mov
cmps
sub
lock
jbe
sub
adc
push
sub
aad
adc
push
xrelease
cmps
inc
(bad)
push
add
int
sub
xor
xor
or
sbb
xor
pop
sbb
gs
push
pusha
xor
jo
pop
dec
nop
xor
sbb
xor
and
cld
dec
xor
js
dec
inc
cld
xor
dec
sub
xchg
and
jns
sbb
push
mov
lock
push
outs
adc
and
push
and
inc
adc
adc
jecxz
jae
xor
push
and
enter
gs
or
pop
and
movs
ds
dec
pop
(bad)
sbb
jge
loope
push
inc
xor
push
push
cmp
xor
cmp
xor
xor
outs
or
mov
xor
popf
inc
xor
adc
aaa
xor
es
xor
xor
xor
scas
xchg
outs
addr16
movs
cmp
xor
jae
and
sub
sbb
add
sub
jno
bound
cmp
inc
and
ss
aaa
sub
xchg
sub
xor
fcom
je
and
movs
jns
sbb
enter
dec
adc
sbb
arpl
popa
outs
int
iret
inc
jne
ins
jo
sub
sub
mov
call
push
inc
inc
mov
sbb
inc
xchg
sbb
mov
push
xchg
and
mov
mul
popf
push
and
sub
and
sahf
push
push
sahf
xor
mov
adc
addr16
cmp
outs
fnstcw
push
xor
es
push
mov
jecxz
stos
xchg
repz
mov
sbb
sub
clc
div
(bad)
fdivr
jbe
out
xchg
mov
pop
stos
in
dec
test
xchg
jmp
cmc
in
push
rol
add
enter
dec
lea
stos
add
and
lods
aam
adc
mov
add
in
and
cmp
dec
jg
ja
ret
sahf
ror
adc
pop
adc
icebp
bound
inc
clc
in
and
inc
vandpd
fcmovnb
pusha
add
movs
sub
ret
inc
adc
aam
rol
mov
mov
push
int
aas
sbb
add
aad
lods
jns
gs
add
and
xchg
jecxz
mov
push
rcl
mov
inc
es
or
adc
movs
inc
or
mov
imul
fadd
and
xchg
push
mov
push
dec
sbb
mov
mov
jge
jb
mul
add
inc
sub
loop
les
cwde
dec
pop
gs
int
stc
gs
test
add
xchg
mov
aaa
xchg
movs
leave
call
in
or
clc
ret
xor
movs
ss
or
and
push
sbb
mov
sub
jmp
push
jb
and
scas
lods
ds
or
aam
or
mov
mov
cli
add
mov
mov
popa
lods
sbb
pop
das
xchg
cwde
in
mov
int
data16
pushf
int
add
leave
leave
cmp
inc
(bad)
mov
and
or
add
mov
add
mov
mov
dec
mov
and
lods
lods
xor
xor
and
movs
and
or
rcr
sub
cs
mov
push
mov
(bad)
retf
mov
or
dec
mov
xor
mov
inc
or
ds
add
push
lock
jmp
nop
dec
mov
hlt
sub
stos
popa
dec
dec
cwde
mov
retf
shl
xor
stos
mov
call
jmp
mov
push
jp
mov
add
jle
add
or
and
test
push
icebp
and
add
inc
pop
test
fist
data16
push
es
pop
mov
jo
mov
test
or
shr
mov
push
std
adc
retf
jbe
or
adc
sti
add
or
mov
mov
inc
mov
xchg
sbb
sub
mov
sub
dec
cmp
outs
dec
(bad)
movs
mov
mov
movs
in
aas
xor
pushf
or
es
xor
aaa
retf
mov
mov
sbb
dec
daa
or
scas
adc
fld
and
leave
or
cmp
movs
movs
push
jae
xchg
lds
xchg
and
in
push
add
xchg
adc
fadd
imul
xchg
push
add
fadd
xor
ret
mov
je
or
cmp
(bad)
add
adc
inc
and
push
and
jns
aaa
dec
pop
mov
stos
fistp
push
mov
or
ret
pop
cmp
push
sbb
cmp
mov
loope
add
lock
out
or
cs
and
in
sbb
push
fsub
add
or
xchg
js
scas
neg
adc
xchg
xchg
loope
jmp
xchg
icebp
cmc
scas
add
cli
add
push
fs
pop
call
cmp
adc
adc
imul
shl
cli
xchg
jl
leave
inc
add
sahf
sbb
das
shl
mov
and
or
lahf
addr16
repz
or
stos
je
jmp
(bad)
outs
ja
xor
push
popf
adc
dec
hlt
popa
jmp
out
pop
(bad)
ss
repz
add
icebp
lahf
fyl2x
test
sub
in
in
pusha
imul
mov
cld
retf
ret
dec
pop
push
ret
std
cmp
mov
lods
popf
sbb
or
pop
movs
jmp
sbb
mov
inc
adc
inc
add
adc
add
xchg
loope
fucom
add
mov
lods
dec
psubusw
mov
sub
add
popa
mov
and
mov
leave
(bad)
lods
stc
ins
rcr
sbb
stc
or
std
std
sbb
jno
push
xchg
les
pop
(bad)
adc
shr
cmp
in
in
popf
sub
jmp
sbb
cmovno
jmp
jmp
jp
jp
add
fwait
and
mov
hlt
xchg
push
or
add
enter
inc
sbb
leave
xor
je
xchg
popf
add
retf
loope
(bad)
and
inc
add
fdiv
or
icebp
or
or
sbb
imul
movaps
lods
mov
add
sub
ins
test
mov
pop
in
mov
push
cmp
cmp
das
inc
adc
inc
popf
test
div
lea
xchg
xor
in
xor
or
push
jno
sbb
cmps
ins
scas
inc
adc
mov
jbe
adc
inc
cmp
push
loop
int
xor
repz
lds
xchg
mov
retf
add
xchg
cmp
add
aaa
and
shl
sti
or
or
add
push
sub
jno
sub
push
add
cmp
ss
cs
mov
xchg
(bad)
push
xor
outs
add
and
mov
mov
lock
and
inc
int
or
sbb
je
rol
jp
in
(bad)
pop
and
xor
jp
in
gs
imul
jno
pmulhw
xchg
xor
jp
jge
dec
dec
push
or
inc
sti
adc
mov
test
xlat
push
or
xchg
inc
and
(bad)
xor
mov
xchg
es
mov
pop
pop
mov
rol
pop
and
inc
les
fiadd
inc
ins
pop
and
cmp
pop
stos
mov
push
xchg
mov
push
test
inc
pop
or
sbb
or
pop
js
enter
add
leave
sub
pop
daa
push
pop
or
iret
leave
leave
leave
push
pop
gs
pminub
jae
pop
retf
rol
mov
sbb
cs
test
push
mov
inc
dec
fwait
out
sahf
ins
inc
cld
push
jbe
jno
test
xor
inc
jg
cdq
test
jb
in
arpl
neg
aaa
ds
add
and
ja
xor
sub
and
mov
xchg
push
and
mov
jle
jl
add
jp
mov
inc
jno
push
js
adc
fsubr
push
pusha
jne
jge
fisub
mov
mov
cmp
adc
jge
dec
sbb
nop
fs
sbb
outs
retf
in
aam
and
loopne
bound
mov
popa
outs
push
stos
dec
add
and
ins
and
out
adc
retf
adc
and
lea
adc
xor
push
cmp
and
cmp
daa
cli
daa
sub
mov
dec
sti
jo
push
dec
dec
dec
push
pop
dec
sub
aad
sbb
sub
js
mov
add
adc
cdq
add
sub
retf
in
fwait
scas
jmp
sbb
adc
dec
sbb
outs
jmp
shl
adc
daa
and
int3
inc
inc
cmp
push
out
stos
or
jne
ins
cld
sbb
mov
mov
ins
add
push
cmp
mov
mov
sbb
int3
inc
sbb
push
push
and
inc
sbb
fiadd
and
xor
add
add
xor
lds
test
cmc
loopne
pop
dec
dec
pop
ins
fcom
mov
adc
fdiv
xrelease
into
inc
mov
xchg
add
imul
fbstp
fstp
and
mov
mov
retf
push
sub
pop
add
fist
mov
inc
imul
or
repnz
sbb
test
cmp
retf
imul
icebp
jns
aad
sub
adc
adc
inc
jp
cwde
mov
inc
into
sbb
xchg
and
popf
das
add
inc
xor
pop
sub
mov
adc
mov
imul
push
mov
adc
data16
movs
iret
or
push
inc
adc
ret
sbb
nop
sbb
inc
cdq
inc
jl
add
mov
fldenv
retf
cld
cmc
mov
aad
or
xor
inc
leave
xor
in
in
mov
jae
in
adc
add
sub
or
cmps
mov
scas
(bad)
push
and
adc
fistp
xor
sti
fwait
pop
test
adc
popa
and
mov
ret
cdq
shr
push
mov
cs
shl
pop
inc
add
xor
jbe
and
fmulp
jp
aam
test
pushf
sbb
add
mov
jl
and
aaa
sar
sub
xor
and
in
add
jmp
jle
(bad)
jae
xchg
mov
adc
add
or
xchg
out
jmp
das
mov
or
call
mov
cwde
adc
inc
or
and
adc
stc
shl
nop
retf
test
shl
cmc
imul
jo
and
add
(bad)
sbb
adc
ret
and
xchg
ds
push
dec
fist
aad
mov
jge
(bad)
aas
add
lds
and
mov
xor
jb
mov
cmovs
das
(bad)
icebp
movs
stos
dec
mov
call
push
add
sub
sub
xor
dec
imul
addr16
mov
and
aam
vpsubsb
inc
cmovbe
jno
stos
cmps
mov
adc
adc
xor
mov
retf
std
fs
rol
push
or
mov
jmp
cmp
ret
push
ret
ja
mov
fadd
or
ret
dec
lea
add
sar
or
pop
setl
aas
add
rol
push
es
cmps
add
lea
iret
inc
add
sub
icebp
aam
push
pop
push
cmps
mov
push
xchg
loopne
mov
add
ds
cmp
mov
xor
cmp
aad
or
push
dec
fisttp
jmp
jmp
adc
dec
sahf
loope
movs
in
and
outs
xlat
mov
lahf
sub
or
inc
mov
sub
aam
call
add
add
sbb
xor
xor
dec
xchg
mov
push
aad
cmp
mov
arpl
and
sbb
dec
shl
stos
jb
and
int
shr
mov
xlat
test
fs
sub
mov
mov
fmul
adc
retf
dec
popa
mov
mulps
cmp
fmul
enter
add
dec
adc
xor
pop
addr16
std
loopne
retf
pop
or
inc
fdivrp
cmp
sqrtps
pop
add
in
push
dec
icebp
scas
movs
jne
mov
outs
popa
add
repz
or
dec
aas
shl
(bad)
or
pop
add
ins
jge
push
ds
cmp
and
shl
jp
je
fadd
lock
and
js
jno
outs
je
xor
sub
imul
add
lock
push
push
and
xor
or
sub
loope
and
xor
addr16
aas
jns
jns
dec
and
jno
push
sar
test
into
cs
lods
rcl
jno
mov
in
xor
shr
outs
cdq
sub
xor
push
push
cld
test
fisub
jle
and
jno
xor
call
push
jb
xchg
cmp
xlat
test
cs
fnstsw
add
push
cs
jo
ror
push
jp
cmp
jg
ret
mov
cs
nop
mov
jbe
ins
dec
(bad)
jl
retf
mov
inc
sub
stos
shl
push
ins
mov
jle
ret
aas
je
cs
push
scas
mov
ds
sub
shl
fdivrp
jl
cmp
push
dec
inc
and
sub
push
xchg
mov
push
not
sbb
cli
xor
dec
jo
xchg
lods
pop
or
adc
and
inc
push
and
push
jp
dec
data16
jge
ficom
sbb
push
add
cs
outs
jo
sbb
mov
or
loop
sbb
mov
and
mov
fs
dec
dec
pop
ja
js
sub
push
dec
fistp
dec
shl
dec
or
stc
lds
movs
or
call
ficom
call
adc
cmp
pop
push
sar
ret
gs
xchg
leave
adc
cmps
cmp
add
ret
sub
jo
das
add
imul
push
(bad)
leave
cmp
pop
fsub
jno
mov
(bad)
or
rol
inc
fild
adc
pop
or
push
push
cmc
(bad)
icebp
add
add
push
cmp
sbb
xchg
pop
imul
push
imul
jnp
add
sbb
pop
in
dec
add
xchg
lods
push
in
fwait
pop
xchg
jge
mov
arpl
in
dec
cmps
unpcklps
inc
or
and
add
mov
shr
inc
sbb
push
popa
xor
inc
stos
sub
pop
push
add
xor
mov
cld
bound
adc
in
imul
(bad)
sti
out
repz
(bad)
pandn
das
xchg
add
xor
dec
in
icebp
fst
in
add
in
push
inc
xchg
imul
push
fild
sbb
test
mov
outs
mov
mov
fld
call
into
rol
arpl
sbb
nop
in
lds
add
or
mov
inc
rol
ror
in
push
push
push
or
mov
xchg
data16
rol
push
sbb
cmp
add
or
stos
xchg
and
jp
imul
push
and
adc
mov
sub
cmp
jmp
mov
pop
cmp
adc
inc
adc
pop
fsubr
in
sub
jg
stos
adc
test
add
sub
add
(bad)
cmp
mov
mov
and
addr16
xchg
sub
ss
xlat
daa
rcr
mov
cmps
or
fld
aad
or
inc
cli
fidivr
dec
fnstenv
icebp
cwde
out
or
int
add
and
jecxz
rcr
int
ror
call
pop
lds
gs
mov
call
mov
or
out
movs
mov
cwde
dec
leave
mov
push
mov
or
xchg
test
sub
in
or
adc
int
and
nop
push
test
test
scas
inc
js
(bad)
cmp
mov
inc
enter
or
and
push
pop
push
push
pop
sbb
gs
or
and
or
or
push
inc
inc
inc
push
inc
push
push
pop
sub
pop
fmul
push
jae
imul
cwde
fstp
adc
fs
cmp
gs
mov
and
movs
fisub
nop
mov
inc
dec
inc
push
or
dec
mov
sbb
push
xlat
push
sbb
test
and
sbb
inc
mov
push
inc
shr
out
cmp
inc
push
or
lock
push
dec
push
push
pop
push
mov
pusha
repz
lock
retf
sub
cmp
es
ins
xchg
in
(bad)
daa
adc
adc
xor
add
xor
xchg
sbb
cmp
mov
jle
mov
test
push
jns
add
mov
imul
jo
mov
add
in
in
inc
(bad)
push
inc
fcom
aam
in
mov
or
addr16
fstp
pusha
sub
mov
dec
jbe
dec
or
jb
jae
aad
iret
jns
addr16
ins
push
fadd
aam
repz
std
(bad)
aad
or
and
add
and
jmp
xchg
mov
mov
fld
rol
test
int3
dec
sbb
push
push
sub
int
sar
and
mov
into
fwait
pusha
jp
out
or
test
cmp
and
or
mov
pop
popa
js
push
mov
test
aad
pop
mov
add
imul
in
in
in
sub
repz
dec
inc
and
and
enter
xchg
aad
add
std
inc
punpckhdq
dec
dec
push
mov
dec
push
and
and
sub
sbb
call
loopne
cpuid
icebp
in
cs
dec
ds
imul
add
outs
adc
inc
xor
mov
push
push
enter
mov
lock
repz
das
addr16
stc
jb
and
push
rcl
sub
or
push
pop
clc
dec
ins
jmp
jmp
jl
sub
inc
cmp
into
inc
jecxz
call
jecxz
xlat
or
and
(bad)
icebp
imul
jbe
mov
pop
push
sbb
cmp
(bad)
jmp
popf
jmp
sar
mov
sbb
xlat
mov
xchg
test
mov
mov
imul
daa
test
loope
mov
loope
fld
fisttp
sbb
add
mov
pop
xor
(bad)
fstp
dec
cmp
out
and
scas
(bad)
push
mov
cmp
hlt
add
push
sar
fst
das
lds
fsub
mov
in
aad
adc
and
aad
fs
sbb
leave
adc
or
mov
cmps
xor
inc
cmp
rcr
iret
mov
and
sbb
xor
icebp
mov
sbb
shl
pop
pop
and
popf
push
ror
sbb
sbb
gs
not
adc
jmp
mov
pop
bound
stos
xor
movs
mov
xchg
mov
and
mov
hlt
dec
and
das
cmp
pop
(bad)
and
push
lds
sbb
mov
aaa
cmp
and
inc
adc
pop
or
shl
dec
sbb
mov
push
xchg
add
mov
mov
in
sub
jae
or
push
xchg
push
xor
and
cmc
cmp
mov
imul
push
test
retf
in
in
sub
test
in
inc
ror
add
pop
es
test
pop
or
mov
xor
test
adc
retf
and
jno
lds
dec
or
inc
popa
lds
add
jmp
mov
aas
mov
add
jecxz
retf
mov
mov
loop
pop
ja
xor
sub
pop
pusha
push
and
adc
retf
push
popa
mov
mov
xor
frstor
jl
sub
dec
and
ret
cld
push
cmp
jge
repnz
shr
dec
sti
add
xchg
mov
dec
in
dec
(bad)
sbb
sub
or
jb
push
cs
fidivr
pop
aam
inc
ds
adc
add
cmp
les
sbb
add
jbe
adc
or
rol
out
sbb
out
xor
das
push
pop
rcl
dec
sub
cmps
or
and
push
pop
xor
jne
and
das
xor
add
add
add
idiv
bound
mov
inc
popf
adc
dec
inc
arpl
cmp
lock
sub
std
lds
js
cmp
inc
cmp
push
popa
add
or
mov
adc
mov
xchg
or
inc
pop
dec
ins
stos
add
xor
leave
int
and
add
jge
adc
push
je
or
mov
or
push
jae
repz
adc
loop
cmp
scas
pop
addr16
cli
xor
mov
push
mov
test
icebp
nop
retf
jmp
push
or
or
push
popa
push
mov
call
jne
shr
sbb
inc
addr16
or
popa
leave
mov
cmp
xchg
and
xor
adc
adc
or
(bad)
push
xchg
jo
bnd
imul
jbe
inc
je
push
sbb
pushf
jns
or
cmp
rol
inc
cs
data16
test
add
push
push
mov
pushf
leave
cmp
jmp
push
mov
push
push
jno
and
add
js
fs
sahf
bound
repz
pop
adc
jno
jno
pop
mov
hlt
cmc
hlt
and
fild
dec
inc
aas
xchg
test
pop
inc
jmp
outs
cmp
pop
movs
adc
push
or
stc
adc
int3
out
inc
imul
inc
or
pop
aaa
int3
fcomp
or
sbb
sub
inc
shl
inc
mov
outs
dec
aam
dec
cmc
outs
mov
mov
push
or
pop
das
sar
inc
sbb
fwait
jo
aaa
lods
sbb
xor
xor
in
sub
int
sub
fwait
xlat
int
es
pop
lds
add
cmps
ss
mov
rcl
xchg
lods
mov
gs
inc
pop
or
add
add
add
pushf
fdiv
and
std
mov
rcr
es
scas
outs
or
mov
lods
and
cdq
movs
in
cmc
lahf
adc
push
push
xchg
imul
push
je
mov
xchg
sbb
sbb
fstp
push
movs
scas
mov
jge
and
xchg
and
jp
arpl
inc
adc
adc
push
hlt
and
add
sbb
xchg
dec
neg
int
pop
nop
gs
xchg
pop
sbb
mov
repz
push
jp
mov
xchg
pop
retf
cmp
lods
push
add
push
inc
pushf
out
popf
pop
or
shl
test
pop
dec
push
adc
test
imul
(bad)
fimul
mov
or
sbb
mov
out
or
test
or
jne
and
and
ja
cmp
sar
dec
pop
scas
adc
inc
jne
clc
out
clc
cmp
stc
sbb
stc
and
pop
and
jg
cmc
jns
inc
das
xor
imul
mov
mov
es
push
or
inc
xchg
imul
mov
and
pop
adc
adc
add
push
nop
mov
ja
pop
inc
or
shr
cmp
lds
dec
or
push
movs
dec
cmp
inc
pop
push
adc
add
scas
pop
xchg
mov
add
xchg
jno
shl
inc
aaa
mov
fcom
and
inc
cmp
pop
inc
ror
fbld
in
jge
inc
inc
or
retf
lds
gs
sti
sbb
dec
mov
cmp
leave
mov
mov
outs
fs
mov
or
dec
loope
cmp
xchg
pop
or
and
pop
rcr
push
ja
cli
call
xor
movs
and
jge
xor
xchg
cs
fcmovnb
es
icebp
arpl
scas
ja
and
add
or
inc
mov
addr16
cmp
adc
(bad)
add
add
test
or
jae
fdiv
(bad)
lea
and
sub
push
or
fldcw
add
dec
sub
add
mul
inc
aad
cmp
loop
aam
xchg
and
aam
mov
or
pop
jbe
jno
dec
retf
adc
add
inc
rol
aaa
in
add
gs
add
and
dec
retw
add
fs
and
cmp
iret
mov
add
mov
inc
cmp
cdq
sar
dec
mov
inc
pop
add
inc
mov
push
mov
cmps
push
in
sub
icebp
dec
pop
sbb
cmovp
push
(bad)
push
lds
sbb
mov
mov
ins
mov
dec
fst
lock
sbb
add
comiss
xchg
sbb
adc
cmp
adc
push
stc
stc
sbb
pop
xchg
jg
dec
add
add
aam
dec
call
loope
jmp
dec
fwait
ja
push
rcl
and
adc
or
pop
(bad)
inc
xchg
iret
xchg
and
or
pop
ss
xor
mov
movs
push
jmp
add
inc
movs
push
push
scas
bound
pop
and
xor
adc
sbb
inc
pop
lods
sbb
sbb
out
cmp
sbb
inc
ins
dec
ins
add
jne
pop
mov
cmc
inc
cs
and
mov
and
popf
or
mov
dec
mov
bound
inc
or
push
inc
hlt
jg
mov
ins
dec
dec
adc
in
sub
dec
push
sahf
dec
jae
mov
add
dec
sbb
pop
sbb
data16
or
gs
fwait
popa
popa
das
push
or
gs
jmp
pop
inc
pop
xchg
pop
cdq
add
add
stos
jno
adc
adc
push
ret
dec
or
sub
push
sbb
inc
inc
xchg
out
mov
dec
and
push
sbb
std
and
push
add
pop
pop
add
and
push
sbb
ins
xchg
test
push
outs
pop
adc
xor
adc
ja
mov
xor
add
in
pop
mov
and
xor
xor
pop
inc
fs
bound
jecxz
jg
push
cmp
or
fs
shl
das
jbe
inc
test
add
jge
xchg
test
jne
pusha
jle
mov
or
inc
aad
and
mov
xchg
jnp
dec
fadd
cwde
or
add
test
in
and
jg
in
or
gs
add
mov
(bad)
jne
pop
not
push
add
sbb
rcr
push
out
inc
jg
stos
xchg
das
add
inc
or
dec
test
or
xchg
repz
repnz
sbb
sbb
mov
add
ret
add
aad
cmc
or
into
cli
sbb
out
arpl
movs
sbb
cmp
cmp
cmp
cmp
push
pop
cmp
cmp
pop
popa
imul
jno
jns
cmp
cmp
test
lea
cmp
popf
mov
cmp
lods
mov
mov
mov
sub
les
adc
sub
int3
xor
imul
pushf
xchg
in
adc
mov
lods
call
pop
xchg
lea
inc
stc
movs
dec
stc
pop
jbe
or
aad
or
push
inc
ds
sub
into
gs
xor
nop
mov
mov
(bad)
push
cli
les
cmp
jo
cli
cmp
popf
lods
jbe
imul
daa
push
xor
outs
popa
dec
cmps
jno
loope
pop
mov
inc
stos
push
xor
mov
sbb
adc
and
add
icebp
fist
add
and
bound
test
rol
loopne
mov
es
xchg
or
jbe
and
es
push
sub
sub
lock
xchg
rcl
push
or
loop
mov
lods
xor
or
mul
xor
mov
sbb
je
fistp
inc
inc
and
les
cmp
push
loope
js
dec
xchg
and
or
jp
adc
jmp
mov
inc
fiadd
dec
jo
call
inc
icebp
inc
inc
cmp
dec
daa
push
jbe
mov
loop
data16
mov
and
adc
sub
push
lods
sub
jne
push
mov
lods
cmp
jp
xor
push
mov
xor
xchg
dec
enter
and
leave
aad
aad
push
or
mov
push
add
setae
mov
js
xchg
dec
into
test
and
push
push
sub
ja
mov
(bad)
and
pop
mov
adc
vmread
and
js
(bad)
retf
pop
lock
lock
or
inc
and
imul
pop
dec
data16
ret
aaa
ins
jp
and
dec
ins
or
jbe
les
jno
cdq
and
and
or
js
lahf
xchg
sbb
push
xchg
or
adc
xor
jns
ror
(bad)
int3
les
add
in
xor
mov
shr
in
mov
dec
add
outs
repnz
outs
movs
and
xchg
outs
ins
sbb
push
cmp
in
in
daa
xchg
mov
or
das
sbb
mov
in
inc
sub
jle
outs
jmp
sbb
push
pop
les
outs
push
fst
adc
jbe
push
das
cdq
popf
loopne
jo
sbb
mov
and
or
and
lds
sub
sbb
add
retf
push
sahf
jnp
lods
dec
cmp
call
(bad)
lea
mov
mov
bound
in
fs
mov
es
clc
mov
scas
xor
out
fs
mov
xchg
mov
or
sub
lahf
arpl
fsub
mov
sbb
or
xchg
dec
mov
jae
xchg
bound
ja
test
imul
inc
les
add
mov
idiv
and
test
pop
dec
xor
cld
push
loop
push
ins
add
xchg
xchg
jae
jp
jns
jbe
mov
out
popa
sub
adc
clc
adc
xor
inc
xor
leave
call
xchg
or
jae
cmp
xchg
popf
xchg
sbb
fsub
int
je
pop
hlt
xlat
(bad)
or
add
cmp
cmp
gs
daa
pusha
mov
hlt
or
inc
aas
pop
inc
cmp
inc
cmps
pop
sub
cld
push
push
retf
rcl
or
mov
or
and
xchg
cmp
bound
fldenv
loopne
or
push
inc
sar
and
inc
add
js
push
shld
or
adc
jne
add
in
popa
inc
xchg
push
leave
add
push
xor
push
pop
sbb
adc
dec
in
sbb
cli
inc
xor
add
mov
fwait
dec
dec
popa
fisubr
add
sub
adc
and
or
sbb
(bad)
push
dec
cmp
imul
mov
cmp
frstor
shl
adc
and
sbb
retf
cmp
add
mov
loop
mov
add
stc
add
adc
rol
sahf
mov
pop
mov
stos
push
add
or
dec
outs
sbb
fadd
mov
cmc
fs
test
mov
push
enter
pop
aaa
sub
pop
and
cmps
or
adc
ss
push
loope
pop
sbb
xchg
mov
movs
inc
xor
leave
aas
lods
setp
xor
and
xchg
imul
push
sub
inc
add
push
push
push
ret
bound
pop
pop
push
dec
push
fist
pop
loopne
jecxz
imul
push
mov
pusha
test
xchg
ret
jg
add
or
cmps
cmp
cwde
(bad)
mov
bound
xchg
loop
repnz
and
jno
and
xor
out
mov
shl
push
sub
push
push
ins
and
out
clc
dec
sbb
leave
(bad)
push
xchg
push
push
jns
inc
or
pop
mov
dec
jmp
enter
adc
sub
xchg
mov
ins
cmp
xchg
std
sub
stc
xchg
pusha
ins
add
fcom
rol
sbb
or
arpl
dec
shl
fld
add
sbb
xor
ins
in
xor
sub
push
cmp
add
test
add
mov
mov
sbb
mov
inc
sbb
pop
jns
sbb
add
dec
and
mov
shr
mov
sbb
ror
jno
xor
pop
xor
int
cld
das
push
inc
movs
sti
lds
leave
add
push
fisttp
pop
adc
sub
xor
scas
sub
dec
enter
mov
sub
or
sub
mov
jl
mov
(bad)
test
or
or
mov
lds
loop
jge
test
inc
xlat
xchg
dec
inc
dec
mov
movs
dec
(bad)
call
call
lahf
ret
mov
inc
aad
pop
lods
push
call
mov
xor
nop
in
pop
add
dec
dec
xor
sbb
dec
push
mov
and
inc
nop
or
xchg
inc
mov
das
inc
sub
cmp
ret
or
or
in
or
push
fdiv
pop
xchg
xchg
test
icebp
iret
xchg
lea
adc
fcmovnb
sub
xchg
adc
mov
or
push
mov
push
inc
sbb
xchg
or
jle
add
add
ss
adc
and
jbe
outs
or
or
mov
adc
es
stos
xor
xchg
cwde
stc
test
push
jmp
mov
jp
stos
test
mov
inc
or
lods
into
add
scas
mov
add
fnstcw
jecxz
pop
add
xor
pusha
mov
jb
cmc
adc
gs
add
cmp
and
xchg
dec
inc
push
shr
(bad)
test
mov
rol
scas
fwait
jne
adc
sbb
jo
xchg
push
in
mov
inc
add
dec
cmc
call
in
pop
pop
xor
mov
cmp
adc
in
sbb
dec
mov
loop
mov
call
push
and
push
jp
in
lods
jb
stos
movs
call
inc
xor
mov
out
mov
mov
pop
dec
lods
lea
mov
daa
rcr
sub
xchg
add
mov
sbb
pop
mov
sbb
pop
cmps
pop
xor
stc
add
pop
test
mov
imul
test
clc
rcl
mov
stc
jnp
xor
push
sub
test
cmp
push
js
jbe
and
int
jb
scas
mov
(bad)
enter
imul
xor
and
sub
mov
inc
inc
call
push
mov
mov
retf
test
or
scas
movs
jne
dec
mov
cld
mov
addr16
jecxz
mov
stos
setne
cmp
leave
lea
mov
ret
mov
rcr
test
add
mov
pop
test
cmp
adc
ins
test
push
cdq
pop
clc
jns
jmp
inc
xor
test
jno
cdq
mov
mov
aaa
cmp
xchg
xchg
xchg
imul
sub
add
in
nop
popa
add
dec
gs
les
rep
sbb
mov
dec
das
xor
sbb
ds
or
dec
jg
ror
fimul
leave
and
jns
push
daa
pushf
push
lods
jbe
sbb
ja
jmp
push
or
or
mul
dec
pop
test
mov
jmp
and
sti
xchg
aaa
ficom
mov
lods
sub
adc
mov
and
mov
js
(bad)
(bad)
in
and
stos
mov
shr
fadd
jl
fnstenv
cwde
push
ja
popf
adc
and
dec
or
inc
xchg
mov
aad
in
sbb
inc
jmp
ins
loop
mov
(bad)
adc
mov
repnz
xchg
in
add
icebp
imul
and
dec
push
jge
and
dec
div
out
xor
dec
pop
movs
inc
aad
push
jmp
jl
jne
and
push
scas
leave
imul
adc
popaw
icebp
stos
xchg
xor
shld
jno
sbb
adc
ss
jp
pop
push
and
and
mov
pusha
push
cmps
add
outs
std
btc
mov
jnp
fdivr
xor
sub
mov
mov
inc
add
push
pop
shl
and
and
and
and
push
movs
popa
mov
test
clc
or
test
sbb
adc
mov
xor
in
add
inc
xchg
or
ss
cmp
xchg
and
cli
enter
sbb
call
or
add
or
add
add
and
sub
leave
inc
in
dec
lds
leave
sub
mov
pusha
retf
loop
pop
stos
pusha
js
push
mov
pop
jne
pop
dec
in
pop
add
mov
adc
ret
add
icebp
movs
dec
test
xor
and
add
dec
mov
dec
add
pop
ret
xchg
fistp
jle
push
in
mov
sbb
mov
sbb
add
inc
in
sbb
sub
or
mov
imul
mov
jbe
jno
dec
pop
xchg
inc
lea
gs
(bad)
xchg
gs
jno
inc
jae
jge
movs
retf
out
jp
add
or
dec
int
sbb
push
dec
sub
push
es
adc
das
retf
cmp
adc
inc
mov
inc
in
pop
loopne
call
dec
into
clc
pop
aas
pop
rol
push
push
add
arpl
and
out
jbe
pop
es
rcl
dec
inc
cmps
loope
and
lods
jmp
jmp
dec
sar
xchg
cmps
inc
int3
cmps
and
fisttp
inc
fist
stc
and
in
lods
mov
sub
mov
and
rcl
ficom
push
adc
add
(bad)
pop
gs
cmps
mov
and
and
or
mov
and
jge
add
ss
cs
or
les
inc
fmul
mov
(bad)
or
adc
je
sub
sub
movs
cmp
mov
sbb
and
push
fldenv
shl
jge
mov
and
das
mov
mov
sti
in
push
std
mov
cmc
xor
enter
cdq
rcl
ds
enter
fprem
sub
in
xchg
out
mov
mov
cmp
xchg
inc
ins
inc
adc
add
cmp
sbb
inc
mov
(bad)
movs
push
sbb
pop
gs
(bad)
addr16
sbb
ret
dec
fwait
js
mov
sbb
and
xor
es
aam
out
sub
sbb
and
xchg
pop
and
das
pop
cmp
sbb
sub
leave
mov
cmps
add
add
sbb
pop
pop
fpatan
std
lock
ret
dec
inc
fnstsw
movs
push
dec
pop
pop
cvtps2pd
leave
int
aad
add
test
dec
sub
sub
fimul
inc
push
sub
cs
xchg
sbb
daa
mov
fisub
pusha
cmp
loop
jmp
adc
xchg
inc
cwde
sub
mov
inc
xchg
sbb
and
or
sahf
add
mov
movs
in
or
mov
add
add
mov
dec
data16
dec
inc
leave
push
popa
adc
(bad)
mov
xor
lgs
push
loope
add
cmp
pop
jp
(bad)
dec
rcr
mov
mov
add
push
outs
sbb
mov
fs
inc
mov
jb
or
sub
sbb
or
pop
out
ret
xchg
aam
cdq
jle
xor
mov
rcr
aad
or
daa
(bad)
and
and
pusha
cs
and
sub
and
pop
dec
dec
xor
adc
test
frstor
out
mov
pop
stc
inc
pop
mov
and
sbb
popf
pop
or
cmp
clc
test
std
stos
mov
or
xchg
cmps
jae
mov
ds
sbb
add
pop
fdiv
and
in
jb
pop
paddsw
and
mov
adc
xchg
cmc
in
xor
fnstcw
dec
add
call
js
xor
jbe
xchg
cmc
pusha
pop
pop
adc
push
pop
dec
push
and
pop
push
bound
rcl
push
push
dec
popa
jge
addr16
bound
and
mov
jecxz
fisubr
cmp
add
rol
aas
in
std
dec
push
jecxz
xor
push
xor
and
add
arpl
(bad)
sbb
mov
in
adc
mov
mov
xchg
xor
jecxz
leave
push
mov
hlt
pop
repz
icebp
or
mov
loop
push
repz
pop
and
dec
mov
add
inc
push
dec
sbb
adc
adc
es
xor
xchg
xchg
(bad)
sti
or
add
push
rcl
daa
cmp
not
cs
push
fisttp
loope
push
popa
mov
dec
std
dec
and
(bad)
cmps
ret
dec
fwait
xor
mov
cmps
sahf
scas
pop
jbe
repz
out
loope
add
movs
dec
push
mov
ror
xchg
sbb
or
mov
ror
xor
stos
cdq
das
arpl
arpl
adc
jp
es
fiadd
mov
pop
out
cmp
shl
push
jbe
mov
adc
sbb
stc
mov
mov
adc
pop
inc
icebp
push
js
inc
gs
std
push
aaa
or
nop
test
adc
cmps
mov
cmp
cs
imul
cmp
dec
inc
push
dec
pop
es
and
add
push
cdq
cmp
pop
test
pop
lock
inc
push
mov
xor
mov
and
mov
jno
and
std
jns
cmp
pop
test
adc
push
jp
jmp
jge
sbb
imul
cld
popa
inc
mov
mov
xor
in
jne
add
aaa
xor
push
add
mov
fist
fdivr
jne
dec
or
xor
inc
mov
jp
mov
xor
push
scas
xchg
mov
in
lea
jnp
imul
pusha
gs
cmp
sub
add
adc
ds
sbb
jo
popa
or
loop
mov
sub
in
adc
loopne
popa
push
mov
xchg
cdq
mov
jp
ins
add
int
dec
fwait
inc
gs
mov
enter
jmp
mov
leave
xor
and
ror
pop
push
mov
add
popa
xchg
cmc
das
in
movs
xor
mov
cmp
add
or
movs
adc
mov
xchg
pop
pop
loope
xchg
inc
xchg
js
repnz
test
and
cmps
adc
and
add
stc
pop
jbe
add
and
pop
mov
stos
out
sub
dec
mov
mov
inc
dec
adc
cmp
sub
cmp
add
sbb
leave
adc
daa
cmp
lea
xchg
jle
inc
sub
sbb
or
sahf
inc
loop
push
cmp
or
inc
icebp
sub
ror
jg
jbe
mov
das
jnp
sbb
xchg
icebp
push
daa
adc
ret
adc
add
mov
sbb
in
xor
ds
or
sbb
mov
leave
add
mov
ins
daa
cs
push
pop
fwait
cmp
add
cmp
or
mov
jp
add
cs
push
sbb
js
dec
jo
pusha
jno
sub
dec
and
inc
gs
lock
or
mov
ins
dec
fs
and
dec
addr16
test
out
jo
shl
dec
or
sbb
sbb
and
dec
push
sar
mov
dec
and
outs
sbb
in
adc
sub
sbb
lods
inc
in
out
push
inc
inc
inc
scas
dec
push
inc
cmps
sbb
mov
jo
(bad)
fcom
push
push
push
inc
push
sub
push
inc
xor
mov
sub
inc
push
inc
dec
dec
push
inc
mov
or
repz
cmp
call
rol
pop
leave
add
jmp
in
int
jns
inc
or
xchg
jno
dec
and
cmp
inc
cld
adc
adc
or
push
xchg
dec
fnstcw
sbb
movs
sbb
pop
leave
inc
ja
xchg
and
lods
mov
or
xor
push
dec
loop
pushf
bound
aas
xor
push
loop
cmp
add
pop
lods
ja
mov
lahf
leave
add
mov
lods
mov
xor
retf
stos
push
test
cdq
or
test
gs
popa
push
or
call
adc
pop
je
mov
ins
adc
inc
ficom
repz
push
(bad)
ins
pop
pop
mov
and
dec
mov
cmp
add
push
mov
pop
push
push
push
dec
mov
loop
sbb
loop
in
jmp
pop
push
dec
sbb
adc
enter
and
aas
inc
push
mov
sub
jmp
jbe
jns
adc
into
inc
cmps
add
rcl
sbb
push
jmp
lea
pop
add
jne
test
jle
sbb
or
in
aam
ror
push
(bad)
pop
or
sub
test
nop
inc
sbb
pop
iret
fsub
mov
cmp
arpl
pop
cmp
xchg
int
stos
out
push
nop
dec
or
stc
sbb
mov
xchg
sbb
test
call
cmp
sub
dec
xor
inc
cli
lods
mov
mov
pcmpeqd
cdq
cmps
inc
adc
jmp
test
add
popa
test
mov
out
inc
test
xor
push
and
fldcw
in
adc
loop
sub
sub
add
sbb
fsubp
sar
stos
aam
or
push
jns
xchg
jae
and
dec
scas
push
(bad)
jp
(bad)
dec
dec
or
imul
add
inc
(bad)
addr16
mov
cmps
jecxz
xchg
sub
xlat
test
inc
sub
add
mov
add
pop
gs
and
inc
mov
sub
sbb
mov
ins
icebp
sub
xlat
mov
scas
pop
xor
je
adc
or
std
gs
mov
mov
inc
aaa
iret
sti
inc
xchg
fs
sbb
pop
shl
adc
pop
and
mov
arpl
retf
push
sub
add
imul
test
add
addr16
pop
xchg
test
outs
jns
adc
cmp
fcomp
loop
mov
movs
and
mov
cmp
push
or
inc
add
or
add
adc
sub
sbb
push
fwait
mov
(bad)
enter
pop
jb
xlat
sub
sbb
mov
lods
loopne
push
push
arpl
push
in
pop
sbb
pop
cmps
push
add
push
xchg
mov
or
lods
das
add
sub
add
in
push
jo
add
add
fcmovnu
fxch
leave
xchg
in
test
popf
aaa
push
inc
repz
(bad)
mov
icebp
xchg
xchg
icebp
in
lahf
(bad)
std
fwait
gs
sbb
mov
adc
or
dec
mov
jmp
xor
lock
ret
add
test
mov
ja
fisubr
and
mov
popf
dec
scas
mov
icebp
xchg
inc
dec
je
cmp
mov
mov
sbb
push
sub
dec
xchg
rcl
mov
sahf
stos
sub
mov
mov
rcl
mov
cmp
fisub
xchg
add
adc
sub
stc
mov
xchg
pop
cmp
test
outs
fwait
and
add
or
lods
inc
xchg
lahf
push
sub
in
test
sub
push
adc
add
xor
pop
and
into
(bad)
and
pop
aaa
mov
into
jl
mov
dec
or
ss
ins
aam
inc
push
push
enter
fwait
xlat
xor
pop
mov
cmps
mov
rcr
lahf
test
inc
ins
push
dec
repz
pop
cmpps
mov
pop
xor
and
xor
inc
dec
pop
xor
js
xchg
mov
mov
mov
push
xchg
xchg
scas
sbb
dec
dec
fisub
pop
test
or
dec
or
sub
mov
adc
or
jp
jecxz
adc
push
cld
sub
mov
dec
cs
aam
loope
dec
out
sbb
int
gs
pmulhw
dec
adc
daa
dec
ins
xchg
inc
daa
gs
mov
jae
dec
and
adc
lea
fld
cmp
xchg
or
xchg
loope
and
leave
test
dec
leave
test
in
push
sbb
daa
gs
inc
daa
gs
mov
jae
sub
add
and
jns
and
and
in
xchg
add
adc
cmp
into
xchg
adc
sbb
repnz
jns
jo
imul
gs
out
cdq
xchg
push
neg
push
js
sbb
repz
mov
or
pop
mov
mov
xchg
je
xchg
jne
sbb
or
xor
jp
je
mov
fdiv
push
jne
clc
and
js
jbe
and
(bad)
xlat
fld
or
adc
hlt
lods
push
inc
outs
dec
push
mov
pop
imul
fwait
pop
lods
outs
cs
out
lahf
test
pop
mov
jb
push
push
fcmovbe
mov
bound
sub
in
push
inc
pop
xlat
loopne
inc
clc
in
js
xor
jmp
pop
push
xchg
(bad)
adc
and
je
retf
movs
pop
or
outs
mov
pop
add
outs
push
cwde
loopne
bound
ins
jp
xor
test
scas
xor
and
push
add
pop
or
lods
push
push
inc
push
clc
dec
push
cmps
pusha
dec
pop
into
ins
jo
mov
jne
jne
xor
imul
jno
scas
mov
lods
pop
or
inc
popa
mov
aaa
mov
fwait
and
cmp
add
packsswb
or
jno
sub
push
lock
lods
adc
fld
es
and
inc
clc
sbb
bound
bound
or
shl
bound
pop
and
xor
or
retf
popf
pop
lahf
cmp
enter
lods
mov
fwait
jge
sar
xlat
add
je
addr16
or
out
mov
lds
fadd
nop
inc
lock
test
mov
ja
jns
push
sub
call
or
sbb
mov
bound
and
jne
aam
sub
cmps
test
ret
in
setne
mov
je
out
cwde
bound
and
or
sbb
mov
cmp
outs
xchg
data16
stc
xchg
mov
arpl
mov
mov
mov
jae
mov
ss
add
test
xor
push
gs
sbb
ret
movs
gs
das
dec
sub
xor
and
pop
jno
bound
ja
mov
sbb
repz
inc
xchg
dec
sbb
push
daa
jnp
dec
push
ret
xor
cwde
shl
or
dec
push
fisttp
mov
push
push
push
or
aaa
mov
hlt
lods
in
cmc
and
push
pop
push
bound
fmul
stos
retf
cmp
push
adc
mov
xor
sbb
sbb
xor
xor
aad
loope
pop
mov
sbb
js
sbb
je
and
out
daa
jns
pop
(bad)
out
xchg
in
int3
hlt
or
and
idiv
bound
rol
push
cwde
mov
and
dec
mov
xor
xchg
mov
sahf
push
mov
pop
xchg
mov
push
push
retf
xor
pop
es
movs
push
es
jno
mov
outs
push
test
inc
das
sbb
pop
add
or
pop
jne
pop
pop
sbb
sub
enter
xor
jbe
popa
fs
sub
movs
rcr
retf
xchg
push
sub
ins
in
xchg
add
dec
in
jae
mov
dec
inc
inc
jg
push
dec
ins
add
enter
sbb
icebp
inc
dec
cmp
xor
pop
pop
mov
fs
adc
mov
dec
retf
mov
push
push
leave
sub
and
xlat
push
mov
xor
cmp
and
push
pop
cmc
mov
cmp
pop
in
and
loop
push
(bad)
popa
fiadd
daa
icebp
pop
fs
and
test
pop
cmp
add
rol
sub
mov
mov
test
dec
mov
and
data16
mov
add
mov
xor
ret
sbb
dec
jb
pop
loopne
sbb
in
adc
ins
push
ss
inc
add
push
test
xlat
rol
pop
or
push
add
add
dec
sbb
jp
movs
addr16
pop
pop
in
ss
test
mov
leave
cmp
mov
add
cli
test
inc
lea
ret
adc
xchg
enter
and
sub
mov
in
sar
ss
ret
xor
mov
sbb
inc
lahf
inc
mov
cmp
in
popa
popa
inc
pop
adc
cdq
or
cdq
adc
and
dec
sbb
pop
xchg
jne
adc
popf
jns
jne
lock
jno
fwait
cmps
add
js
mov
mov
pop
add
mov
jmp
adc
int3
(bad)
out
retf
mov
retf
mov
jno
mov
adc
scas
adc
lea
xchg
dec
pop
fwait
add
retf
mov
movs
pop
test
test
repnz
(bad)
mov
inc
add
add
xor
mov
sbb
inc
test
and
das
pop
xchg
js
popa
inc
cmp
adc
dec
xchg
je
into
mov
lods
mov
xchg
xchg
and
and
pop
dec
test
push
push
xchg
push
gs
(bad)
push
pushf
push
add
test
and
fs
push
fs
mov
add
gs
inc
scas
jo
push
push
inc
sbb
cdq
or
aam
add
call
dec
sub
jns
push
ds
cmp
(bad)
or
push
jmp
push
mov
neg
add
fld
sub
shr
mov
xor
jo
pop
xor
cmps
pop
sbb
xchg
dec
xor
stos
outs
add
das
retf
vpaddd
test
pop
std
rol
push
jmp
fs
adc
popa
and
dec
add
pop
jo
mov
sbb
add
sub
dec
cld
add
xchg
retf
lds
call
xchg
mov
xchg
enter
sahf
rol
in
loopne
sbb
push
sbb
cmp
and
xor
fsub
sbb
xchg
mov
sbb
cdq
cmp
pop
add
jge
sub
jmp
push
inc
dec
adc
icebp
add
int3
or
add
hlt
cmp
adc
paddsb
addr16
or
or
rol
add
(bad)
addr16
mov
xor
jbe
pop
and
mov
mov
in
xor
addr16
rol
and
mov
sub
mov
pop
push
mov
(bad)
adc
mov
nop
sbb
shl
mov
test
mov
cmp
int3
push
out
add
push
sbb
pop
pop
dec
aam
inc
or
mov
aam
rcl
fsub
call
mov
lea
les
sbb
cmp
xor
mov
int3
clc
sti
mov
add
or
pop
cmp
push
cmps
dec
pop
imul
xchg
jmp
dec
fbld
sbb
lahf
ins
mov
xchg
cmp
xor
shl
addr16
leave
adc
in
in
mov
xor
push
ficom
lock
or
or
sub
push
popa
jne
ret
or
push
lea
adc
mov
push
cld
cmc
mov
fiadd
jl
pop
pop
xchg
jmp
xchg
out
mov
cmp
(bad)
xchg
push
aam
addr16
clc
mov
jbe
movs
jl
adc
in
push
dec
fwait
and
inc
pop
or
test
mov
pop
bndstx
int
loope
mov
xor
jae
in
lods
add
jmp
(bad)
in
sbb
mov
jle
push
in
push
retf
xor
call
popa
shl
mov
adc
outs
call
dec
jne
sbb
imul
inc
push
jg
lea
add
das
and
pop
lods
xchg
sbb
out
add
es
mov
dec
sar
in
stos
mov
jbe
sbb
sbb
add
sbb
push
xlat
mov
outs
jo
sub
push
mov
enter
fldenv
xor
sbb
leave
gs
call
inc
inc
sub
add
imul
clc
ja
dec
add
fs
adc
jbe
inc
mov
jno
pop
enter
lods
aaa
das
push
jnp
inc
dec
push
jbe
mov
fmul
add
add
inc
dec
mov
sbb
xor
jae
ins
imul
add
outs
nop
add
xor
jo
xor
lods
add
loopne
jecxz
inc
leave
repz
sub
inc
or
push
or
push
popf
sbb
sbb
jae
dec
and
rol
xchg
pop
xchg
js
cmp
jne
loope
loope
pop
and
push
sub
mov
mov
es
push
or
rcl
call
adc
repnz
(bad)
hlt
inc
icebp
sub
test
jp
imul
js
push
adc
es
cld
mov
cmp
rol
fadd
pop
and
mov
repz
xchg
cmp
pop
adc
enter
push
pop
test
mov
mov
jns
push
ret
aas
ins
xchg
sbb
add
movaps
cmps
add
adc
adc
inc
scas
or
pop
and
sbb
or
mov
imul
or
mov
sbb
and
cvttps2pi
out
jo
fmulp
push
test
adc
vmovlps
clc
dec
lods
cmp
mov
lods
adc
repnz
(bad)
mov
popa
ficom
cmp
xchg
dec
and
pop
cmp
pop
(bad)
iret
pop
jbe
sbb
inc
fdivr
xor
cs
add
pop
xor
and
jmp
sub
lods
mov
scas
pop
test
and
leave
xchg
cmps
aaa
xor
lock
dec
(bad)
das
sub
test
and
jecxz
push
and
sbb
cdq
cwde
ins
movs
add
or
stos
lods
add
test
es
jbe
stos
aaa
lock
mov
sub
lds
push
sar
add
sbb
and
sbb
or
adc
and
xchg
popa
dec
mov
pop
dec
push
dec
dec
fbstp
jns
call
pop
adc
jle
cmp
xor
and
pop
ret
mov
jecxz
ret
inc
ins
dec
loope
xchg
mov
(bad)
int
xor
inc
fdiv
or
jmp
mov
imul
cmp
mov
push
adc
pop
cmc
jge
ss
xor
mov
mov
icebp
fsub
rcl
adc
loop
mov
inc
adc
dec
sbb
mov
lahf
ds
(bad)
fsub
jmp
cmp
sbb
xchg
mov
mov
mov
or
daa
jmp
add
lahf
ins
inc
(bad)
(bad)
fnstcw
out
stc
cld
sub
sbb
push
call
sub
pop
movs
jne
ss
sub
dec
add
mov
outs
cli
shr
sar
cmp
cmp
pusha
scas
add
mov
push
add
fxch
or
test
inc
cmp
fnstsw
les
lea
out
mov
mov
xor
mov
and
mov
je
aaa
add
test
dec
test
or
and
adc
jp
aaa
sbb
ret
enter
dec
popf
dec
push
push
gs
nop
lahf
add
mov
clc
add
push
in
lock
mov
xor
lea
dec
pop
test
add
(bad)
push
test
or
jbe
inc
bound
jge
xchg
pop
int
cmp
xor
dec
cdq
fcom
cmp
fld
fdivr
nop
or
sahf
dec
loope
aam
(bad)
ins
sbb
jge
mov
popa
sbb
mov
adc
in
push
push
mov
(bad)
sbb
sbb
shr
sbb
nop
frstor
mov
add
push
add
clc
xlat
cld
push
sub
push
scas
dec
mov
adc
jo
adc
pop
or
jge
jl
add
jecxz
xor
push
jno
test
test
mov
and
push
or
jbe
jo
cmp
dec
fs
mov
out
sbb
stos
push
sbb
sbb
sbb
adc
inc
fidivr
(bad)
xlat
mov
push
fiadd
iret
addr16
cmp
sbb
popa
in
xchg
mov
pop
leave
add
sub
mov
sub
mov
ret
cmp
in
scas
push
sub
aaa
popf
pop
push
xchg
and
scas
sub
push
add
sub
jne
iret
dec
jb
mov
ss
dec
cdq
cmp
adc
mov
and
jg
and
sbb
lahf
loopne
pop
icebp
pop
rcl
mov
and
or
sub
leave
or
lahf
and
test
or
ret
xor
neg
sub
sar
mov
shl
mov
push
jmp
icebp
sbb
sbb
in
xlat
adc
jecxz
fisttp
jbe
dec
dec
add
scas
cmp
pop
bound
inc
ds
push
pop
mov
sti
sahf
(bad)
and
xchg
movs
cs
xchg
test
xchg
and
sbb
xchg
mov
or
aam
adc
sbb
or
dec
jbe
cmp
add
cmp
out
ja
or
pop
xchg
and
add
mov
push
mov
cwde
or
adc
dec
inc
inc
push
dec
jbe
nop
dec
xor
dec
loope
mov
mov
add
or
loopne
(bad)
sbb
xchg
and
arpl
in
add
inc
popw
adc
mov
leave
fisttp
or
push
sbb
loope
es
imul
cld
loope
mov
xlat
mov
or
jmp
cwde
call
pop
and
and
and
ss
movs
sar
mov
call
(bad)
sub
push
repz
mov
std
mov
xor
(bad)
sub
xor
cmp
dec
mov
mov
pop
add
add
call
pop
mov
and
xchg
ins
push
xchg
jb
(bad)
sub
xor
push
pop
xor
mov
dec
and
imul
pop
imul
xor
inc
sar
retf
dec
punpckhwd
pop
daa
repz
xchg
add
sbb
mov
in
and
xlat
xor
and
pop
leave
mov
mov
aam
call
loop
push
in
xchg
std
xlat
or
les
mov
(bad)
cmc
or
out
adc
call
stos
and
scas
in
xchg
cmp
add
dec
out
pusha
and
add
add
jns
cmp
arpl
cmp
mov
xor
stos
pop
arpl
adc
out
push
fisub
push
sbb
cmp
retf
cs
mov
dec
sub
cmp
dec
mov
sar
(bad)
jg
sub
sti
sub
lock
inc
call
push
push
mov
add
out
fsub
pop
retf
pop
stc
jge
and
push
lods
lds
out
and
cmc
(bad)
push
cmp
imul
xchg
imul
push
xor
xchg
std
(bad)
in
and
data16
and
inc
leave
mov
lock
rcr
xchg
push
jg
jo
in
xchg
std
loope
sub
add
mov
repz
push
clc
dec
repz
and
inc
pop
test
in
jae
add
addr16
js
adc
adc
ficomp
adc
dec
xchg
(bad)
jle
add
into
lock
or
fnstsw
pusha
or
or
jge
test
aaa
jb
or
push
cwde
jmp
ret
test
inc
rol
pop
fs
add
cmp
ja
add
add
fadd
pop
jmp
adc
cmp
js
mov
sbb
jne
push
arpl
xor
inc
sbb
pushf
rcr
pop
inc
sub
test
mov
shl
inc
cmp
js
in
fsubr
popa
js
dec
pusha
push
inc
outs
jmp
loope
or
jg
jnp
mov
cld
mov
stc
cmp
cmp
imul
or
les
mov
pop
imul
ror
test
imul
add
push
and
(bad)
movs
pushf
inc
jmp
je
jl
movs
xchg
ins
lods
or
sub
nop
inc
sbb
dec
loope
(bad)
jl
imul
or
jmp
push
sub
mov
mov
adc
jns
push
add
movs
in
fidiv
adc
jmp
dec
lea
popf
retf
jno
aaa
dec
jb
sub
cmp
imul
and
mov
jge
lds
jo
mov
sahf
rcr
outs
pop
leave
cwde
movs
jge
pop
(bad)
std
jge
in
in
add
inc
add
cmp
or
rcr
rcl
adc
xchg
dec
xor
push
dec
push
dec
pusha
push
inc
or
dec
cmp
xlat
jle
or
imul
mov
cmp
je
aas
leave
mov
adc
imul
add
add
ja
xchg
xor
and
sahf
adc
jle
add
push
mov
or
jne
push
je
xor
dec
(bad)
hlt
mov
add
sub
loop
test
pop
or
aas
or
pusha
dec
push
pop
add
gs
pop
add
xor
cmp
adc
mov
push
jb
or
in
in
add
or
jbe
retf
in
in
imul
jp
fldenv
and
inc
cmc
dec
xor
push
jg
pop
inc
ja
jne
mov
push
sub
xor
sbb
pop
cmps
add
cs
cmp
dec
lea
out
xor
xor
add
push
xor
cmp
fs
into
push
dec
jl
mov
or
dec
xchg
sub
mov
fnsave
pop
inc
dec
and
out
lock
fisubr
or
inc
inc
or
xor
push
das
sbb
ds
and
and
jne
cmp
and
adc
mov
addr16
es
jne
mov
mov
lahf
mov
mov
mov
mov
jp
fstp
pop
jle
stc
mov
sub
rcl
cmp
inc
push
fstp
inc
add
or
add
in
pop
fcom
sbb
pop
dec
sbb
dec
push
and
or
nop
or
sub
pop
test
hlt
mov
cwde
cmps
pop
adc
xor
and
movs
enter
add
inc
inc
cli
add
jmp
cmc
dec
arpl
retw
xchg
jmp
lods
add
sub
inc
jecxz
das
jae
jmp
inc
mov
cmp
adc
cwd
cmp
and
pmulhw
gs
pushf
add
test
ja
xor
adc
or
jbe
bound
scas
and
enter
and
add
push
mov
xor
push
lds
mov
push
jae
es
sbb
and
lods
mov
xor
dec
jl
adc
mov
xor
out
sahf
in
sbb
fstp
loope
mov
pop
icebp
add
rcl
(bad)
and
cmp
xor
xchg
movs
ins
ins
xchg
mov
icebp
icebp
ret
and
and
jns
(bad)
leave
fstp
mov
xor
ret
add
sub
lea
push
add
mov
sub
js
mov
icebp
or
dec
int3
fild
lahf
gs
test
mov
mov
xlat
mov
in
cmp
dec
fdivr
dec
push
jo
cmp
push
shl
xchg
and
xor
inc
(bad)
dec
ins
mov
fadd
push
adc
xchg
jbe
les
dec
mov
dec
pop
jnp
cmp
cmp
test
add
push
jae
fcom
mov
pop
arpl
out
sub
cld
push
nop
dec
(bad)
sbb
xor
xor
outs
imul
aad
lds
inc
outs
je
or
and
jno
(bad)
cmp
jno
gs
jno
and
pop
or
minps
xchg
xchg
mov
mov
xor
inc
inc
add
inc
inc
inc
cmps
adc
jmp
pop
xchg
je
les
push
inc
push
or
jecxz
pusha
add
and
xor
das
in
rcl
ins
std
inc
daa
cmp
inc
inc
test
mov
inc
add
mov
inc
inc
sbb
repnz
sbb
leave
(bad)
loopne
adc
sbb
adc
sub
icebp
jae
inc
xchg
shl
inc
hlt
in
mov
or
add
(bad)
out
mov
in
jmp
test
fstp
or
loope
fxam
dec
leave
adc
push
fld
pop
xchg
push
push
cmp
test
jge
mov
aad
mov
mov
inc
jg
mov
or
outs
mov
lahf
mov
push
shr
jns
pop
rcr
scas
jle
mov
cmc
mov
imul
xlat
retf
mov
or
cmp
pop
lds
inc
mov
pop
mov
in
mov
retf
imul
xor
jge
leave
add
sbb
in
into
test
movs
and
shr
stos
add
cdq
or
push
repz
sbb
bswap
xchg
inc
dec
pop
adc
dec
jbe
xchg
cmc
hlt
cld
push
retf
lds
add
imul
push
mov
xchg
push
imul
mov
xor
push
jp
mov
gs
pop
push
or
es
bound
bnd
dec
test
xchg
popa
pop
(bad)
jb
add
ins
or
mov
dec
loop
or
and
adc
leave
cld
xchg
jle
mov
inc
aam
imul
ror
inc
jb
addr16
cmp
mov
je
pop
jl
adc
cdq
sub
and
and
xchg
and
cmp
adc
das
sbb
cmp
ins
mov
cmc
pop
pushf
stos
call
add
leave
js
in
push
mov
and
jns
xor
cmp
lea
and
sar
inc
xor
addr16
push
dec
dec
and
mov
inc
dec
dec
push
mov
push
xor
pop
xor
dec
cmp
push
xor
inc
aas
daa
mov
pop
icebp
mov
pushf
adc
into
sub
cmc
inc
adc
mov
push
pop
xor
or
xor
xor
test
pop
retf
and
cmp
(bad)
push
(bad)
jl
push
sbb
xor
ins
je
and
push
es
push
or
and
xchg
out
and
inc
xor
fisttp
(bad)
sub
je
popa
mov
je
jno
add
adc
jno
or
sub
lds
or
(bad)
mov
add
test
sbb
cmps
or
je
ds
stos
xchg
scas
push
push
xor
pop
push
xlat
je
mov
adc
sub
add
sub
popa
loopne
popf
sub
sbb
pop
dec
push
cmc
xchg
aaa
xor
mov
dec
test
imul
jmp
enter
sub
pop
or
hlt
mov
or
mov
xor
loope
dec
pop
xor
jb
sub
dec
sbb
fs
dec
leave
mov
xchg
sar
nop
pop
adc
leave
lods
fiadd
scas
enter
sbb
sbb
enter
add
int3
dec
cmp
and
add
push
adc
xor
test
das
arpl
lahf
xor
jne
cmps
hlt
or
adc
jno
xchg
pop
or
push
es
aam
imul
ss
imul
mov
mov
enter
push
and
lahf
scas
cmps
pop
std
pop
jns
sbb
arpl
pop
dec
call
das
xchg
xor
jle
inc
mov
add
bound
mov
inc
aaa
xchg
bound
or
movs
out
(bad)
sub
test
iret
dec
push
inc
or
sub
repnz
xchg
xchg
(bad)
push
inc
imul
rol
movs
pop
jae
icebp
xchg
ja
and
and
add
cmp
mov
adc
sub
add
xor
xchg
xchg
xor
cmp
inc
in
sub
in
sub
add
sbb
push
retf
mov
and
into
mov
test
pusha
sbb
aaa
sub
sbb
add
jp
adc
or
push
ja
inc
xor
les
adc
shl
ja
mov
push
or
out
push
or
gs
jo
or
test
pop
ds
add
add
jbe
aad
mov
jb
xor
in
or
pop
dec
das
je
mov
inc
dec
int3
dec
xchg
inc
loope
mov
inc
dec
push
push
daa
dec
cmps
xchg
or
sbb
inc
push
push
dec
cmp
cmp
or
push
push
and
inc
jle
shl
pop
push
inc
test
ss
cmp
inc
cwde
push
jbe
imul
jo
jp
mov
je
bound
push
pop
cli
push
(bad)
das
sbb
push
leave
and
cwde
jne
gs
bswap
cwde
jne
or
cdq
push
push
cs
lock
mov
cmp
call
adc
gs
and
sub
popf
outs
icebp
data16
push
ins
in
jg
gs
sub
and
lock
xor
xor
fldenv
lods
cdq
inc
add
dec
dec
test
gs
xor
inc
fild
sbb
call
ror
btc
cdq
xchg
xchg
and
retf
xor
sbb
xor
(bad)
mov
mov
in
sub
sbb
dec
scas
in
inc
out
jne
or
push
daa
add
xor
std
push
xchg
repnz
movs
push
rol
aas
or
(bad)
fst
fwait
or
push
cmps
imul
in
pop
and
pushf
ins
adc
xchg
inc
push
jmp
and
icebp
jne
in
xchg
out
in
jno
in
in
dec
fisttp
pop
popa
in
dec
cwde
jmp
jmp
or
in
sbb
adc
repz
sahf
sub
mov
adc
or
adc
call
lahf
mov
imul
and
iret
pushf
cmp
mov
aam
jne
xchg
sub
xchg
add
lods
or
call
xor
(bad)
pushf
pop
scas
in
push
xor
fistp
inc
mov
add
dec
popa
jmp
daa
lahf
outs
push
mov
ins
sbb
shl
xlat
and
and
sbb
gs
and
cs
lea
or
pop
dec
std
das
pusha
sub
imul
jo
and
xchg
popa
mov
loop
out
push
out
pop
cdq
test
(bad)
xchg
mov
mov
inc
push
push
push
add
jp
and
jl
inc
dec
subps
push
or
push
sub
pop
xor
shl
xchg
mov
dec
imul
mov
into
mov
in
xchg
pop
jae
loope
fst
fnstcw
leave
aad
aad
mov
scas
or
pop
xchg
sub
lea
int
and
pop
cmps
adc
dec
mul
into
or
leave
(bad)
in
cmc
das
cmps
rep
xor
mov
stos
movs
push
sbb
push
cli
retf
dec
mov
cdq
xchg
lods
pop
adc
bound
and
xor
jmp
push
or
lods
fsub
inc
gs
mov
mov
pop
mov
inc
fwait
dec
test
or
inc
popf
dec
popf
or
icebp
or
mov
mov
cdq
cdq
cdq
cli
and
mov
dec
mov
pop
aad
mov
lea
(bad)
(bad)
mov
pop
call
sbb
test
test
sahf
leave
dec
push
dec
xor
add
pop
dec
(bad)
out
or
test
dec
sbb
ja
or
movs
jmp
push
mov
fsub
jno
cmps
mov
adc
jo
push
xchg
mov
push
xlat
fwait
jbe
xor
das
jb
(bad)
retf
mov
mov
aad
aad
mov
data16
sbb
and
mov
jo
add
mov
loopne
ins
cwde
inc
pop
cwde
and
and
xor
pop
mov
jmp
mov
add
ja
pop
je
pop
test
sbb
xor
sub
xor
mov
das
imul
scas
add
sub
sub
movs
pushf
repz
push
push
inc
xchg
push
pop
(bad)
jbe
pop
pop
pop
es
xchg
in
inc
pop
sbb
cmps
push
cld
test
and
pop
or
xor
cs
xor
sahf
pusha
ffree
rol
sbb
movs
or
jno
movs
pop
jae
cmps
fisttp
add
and
dec
test
dec
dec
jnp
mov
push
sub
mov
stc
adc
jg
loopne
mov
sbb
dec
mov
loope
add
pop
jge
inc
sbb
jno
fsubp
lahf
icebp
lgs
or
xchg
inc
fst
dec
adc
push
add
sub
and
int
jae
and
js
div
pop
fst
leave
leave
lds
pop
cmp
xor
loop
test
mov
in
repz
cmp
in
pusha
mov
sub
xchg
cdq
lods
xchg
cmp
xchg
sbb
mov
std
mov
or
and
fwait
dec
syscall
lods
test
test
push
jp
ror
enter
fs
or
mov
movs
adc
movs
in
sub
lock
xchg
sbb
je
xchg
inc
xchg
and
cdq
enter
shr
jnp
adc
xchg
sub
inc
xor
and
dec
and
test
or
mov
xor
test
or
(bad)
test
xor
lock
push
dec
inc
rol
mov
inc
inc
mov
dec
add
retf
cmp
pop
fadd
ja
stos
in
mov
inc
push
sub
xor
les
pushf
push
cwde
jno
inc
mov
leave
push
and
in
mov
jno
sub
adc
add
dec
mov
cmp
popa
fstp
xchg
pusha
aad
add
or
push
and
leave
mov
je
sbb
lds
push
xor
mov
imul
jp
mov
inc
fwait
mov
and
es
lods
sbb
retf
pop
pusha
sbb
or
sbb
test
inc
rep
mov
add
xchg
jb
xchg
xor
gs
test
xor
add
shr
or
dec
sbb
leave
adc
push
push
add
in
pop
pop
call
push
pop
add
scas
add
inc
jo
cmc
mov
dec
mov
and
aad
add
fist
jo
sbb
jmp
retf
and
mov
shrd
es
sbb
shl
xor
xchg
pusha
fnstsw
fisttp
jae
retf
or
add
mov
in
push
out
xor
ja
cmp
into
mov
pop
repz
lea
cmps
mov
cwde
mov
jmp
in
in
or
and
loope
in
xchg
call
xchg
ftst
scas
rcl
imul
aad
dec
jp
dec
inc
out
scas
leave
sbb
movs
sbb
int
sub
scas
aad
sbb
cmp
cmp
mov
or
mov
std
sub
mov
mov
mov
adc
sub
cmp
dec
pop
imul
mov
push
or
in
mov
int
pusha
jno
mov
stos
jp
or
pop
repz
jno
mov
sbb
adc
lahf
add
add
mov
mov
mov
dec
fnstcw
lods
sub
aaa
loopne
push
aaa
ja
aad
jne
shl
adc
aad
mov
bound
or
adc
rol
not
data16
hlt
ins
cmp
dec
jo
mov
mov
dec
popa
dec
and
outs
sub
iret
cmp
push
outs
dec
pop
cwde
mov
xchg
adc
cmp
and
lahf
addr16
adc
stos
add
jmp
xlat
sar
dec
jmp
mov
dec
cmp
jae
add
es
mov
jmp
inc
mov
call
ins
mov
test
inc
call
syscall
cli
jl
popa
mov
or
pop
repz
and
icebp
and
movs
movs
out
jmp
in
fsubr
loop
ins
sub
les
jbe
sbb
sub
popf
jne
xchg
jne
test
push
pop
sbb
or
xchg
stos
das
or
inc
data16
test
sbb
clc
and
jg
mov
lock
or
stc
fs
stc
cmps
xchg
lds
inc
pop
xchg
adc
movs
adc
mov
imul
imul
inc
inc
or
xor
add
mov
or
mov
(bad)
cmp
jp
mov
push
test
mov
icebp
mov
stc
cmp
cmc
or
and
test
mov
add
aad
lock
stc
and
xor
cmp
mov
inc
mov
test
(bad)
adc
mov
dec
jmp
test
xchg
retf
add
or
daa
push
xchg
push
sbb
jmp
xchg
loop
dec
mov
inc
js
and
jns
cdq
fstp
mov
mov
push
mov
xor
ds
adc
xor
sub
out
sub
dec
jg
out
cwde
xchg
adc
xchg
in
xor
or
jmp
mov
ficomp
add
test
xor
and
adc
ror
repnz
imul
and
push
cmp
test
cmps
pushf
mov
fcom
mov
and
mov
cmps
enter
lods
push
cmp
cld
aaa
and
enter
cmp
push
adc
sbb
xchg
jp
sbb
punpckhbw
pop
and
add
ror
xor
test
jnp
mov
xchg
pop
xchg
lea
add
gs
and
sbb
push
pop
enter
enter
lahf
and
fmul
pop
ja
or
and
cs
gs
test
fst
push
ins
inc
add
adc
ja
sub
push
nop
shl
mov
pop
or
cmp
ret
or
ins
pop
test
add
popa
lds
(bad)
call
(bad)
and
add
push
mov
push
jg
inc
dec
les
mov
adc
in
nop
inc
ret
xor
pop
mov
outs
lods
in
inc
push
xor
lock
mov
mov
dec
gs
cmp
pop
fcomp
ss
lea
push
mov
into
adc
mov
dec
xchg
repz
xor
aaa
add
jne
mov
imul
es
sbb
wbinvd
shr
xor
ret
mov
das
push
js
or
and
pop
test
cmps
ins
push
and
js
push
adc
or
loope
mov
mov
dec
test
in
jbe
sbb
lahf
ins
data16
loop
inc
stos
push
(bad)
in
dec
pop
in
pusha
mov
push
xchg
mov
pushf
lds
mov
inc
lsl
sbb
push
cdq
and
inc
mov
js
test
les
push
ret
sbb
mov
pop
test
adc
stc
mov
in
daa
jb
cmp
pop
jne
loope
mov
in
pop
enter
mov
cmp
les
movs
push
aaa
xchg
or
mov
inc
sbb
mov
mov
push
fcmove
and
cmp
bound
mov
outs
xchg
sub
dec
fdivr
add
dec
jecxz
arpl
das
call
lock
xor
adc
outs
je
imul
cmp
(bad)
je
cmp
cli
sbb
mov
push
cdq
lahf
mov
or
pop
shr
mov
mov
or
movs
cmps
xchg
lock
adc
jg
nop
enter
xchg
add
and
(bad)
repz
mov
add
inc
call
lock
mov
xchg
fiadd
imul
jns
in
or
xor
pop
(bad)
fisttp
sub
aaa
pop
fdivr
and
ja
and
and
or
cmps
(bad)
(bad)
cdq
mov
push
cmp
and
fs
dec
xchg
sbb
xchg
je
adc
sti
push
pop
pop
sub
and
inc
out
cmps
xchg
(bad)
call
sbb
popa
fadd
loop
icebp
scas
mov
push
daa
add
mov
xor
repnz
mov
sub
pop
pop
xor
ret
pop
mov
sbb
sti
xchg
test
fcomp
rcr
fcmovnb
js
das
push
xor
push
xchg
inc
dec
lock
mov
jge
mov
jne
dec
leave
nop
jge
test
mov
xor
jne
sub
mov
iret
ins
(bad)
sti
rcr
das
xor
mov
adc
stc
inc
shl
loope
aad
aad
push
jge
pop
jno
xchg
jmp
in
gs
cdq
data16
in
movs
ficomp
or
in
in
xchg
xchg
cdq
out
in
popf
mov
ret
pop
jg
int3
cmp
scas
cmc
ins
retf
inc
jge
fnstcw
xchg
cmp
push
out
and
cvtpi2ps
test
jp
lea
xchg
int
fstp
in
popf
std
pop
leave
push
movs
cmp
daa
clc
sbb
adc
inc
pop
movs
push
xor
lods
dec
cwde
js
jns
sbb
push
inc
shl
push
lahf
push
sbb
ja
push
inc
ja
cmps
xchg
call
fisubr
inc
gs
or
mov
mov
mov
inc
and
je
fadd
in
pop
mov
xchg
sub
daa
adc
sub
pop
dec
dec
outs
in
mov
fsub
mov
add
and
stos
pop
sar
or
fwait
loop
enterw
sub
in
push
aas
or
and
popf
mov
int
adc
or
test
fild
retf
mov
add
leave
mov
rol
xchg
jecxz
sbb
popa
fld
xlat
mov
or
mov
xchg
xor
adc
pushf
mov
mov
daa
test
stc
in
cmp
mov
ja
je
xchg
stos
imul
das
rcr
cmps
mov
add
inc
add
xlat
sbb
mov
xchg
mov
ds
pop
test
les
add
adc
inc
into
inc
lods
push
jp
into
inc
push
jg
sub
jmp
in
mov
jae
mov
es
push
stc
(bad)
out
and
add
mov
ret
or
push
adc
jno
push
add
inc
or
xor
in
sub
jae
ss
or
into
lahf
add
jecxz
jmp
ror
add
int3
dec
ret
jle
add
and
xor
leave
adc
je
push
(bad)
cmp
js
hlt
push
mov
adc
les
je
add
or
jmp
add
cmp
add
test
add
cmp
sub
pop
inc
jbe
int3
xor
jo
cmp
or
xor
or
sub
aas
test
test
jl
add
push
pop
pushf
mov
sub
sbb
push
jo
icebp
inc
push
pop
sbb
fwait
rol
cmps
dec
adc
push
inc
mov
mov
adc
adc
data16
push
sub
dec
add
mov
sub
or
xchg
add
adc
or
ret
cwde
ret
or
or
ret
das
in
jle
sub
or
rol
call
mov
stos
add
add
out
inc
adc
adc
adc
ror
cmc
add
sbb
add
ja
cli
retf
adc
or
jb
or
jle
int3
rcr
adc
dec
shr
push
pop
cli
pop
lahf
mov
cmp
adc
sti
xchg
jp
lock
pop
fadd
les
aam
jo
push
loope
ror
ret
adc
mov
or
fidiv
addr16
shl
adc
addr16
cmp
shl
adc
and
mov
lods
psllq
jne
fwait
mov
cmps
dec
pop
xchg
test
outs
pop
jns
(bad)
out
test
cmp
mov
xchg
adc
jbe
scas
mov
dec
adc
mov
scas
cmps
push
clc
xchg
cwde
sbb
fcmovnb
in
cmp
sbb
cs
gs
adc
pop
jne
in
pop
out
cmp
movs
mov
push
mov
add
dec
hlt
adc
inc
lds
xor
shl
inc
fwait
xchg
pop
aad
fnstcw
aad
mov
into
jmp
repz
stc
iret
(bad)
shl
and
jp
shr
fiadd
(bad)
fstp
mov
ficomp
xchg
enter
(bad)
fstp
out
adc
lds
jecxz
sbb
pop
add
lods
pusha
aam
add
adc
add
lods
add
mov
jg
cmp
jle
and
sub
in
pop
dec
(bad)
loope
or
cmp
add
inc
adc
push
push
xor
push
or
daa
aam
dec
dec
mov
std
dec
jecxz
rcl
or
inc
xchg
and
in
and
and
es
ins
mov
ins
and
outs
add
mov
(bad)
jae
dec
inc
sub
sub
cmc
in
shl
push
sub
jge
rcr
cmp
xor
int3
sbb
sbb
or
fsub
or
fcom
jae
add
sbb
mov
push
mov
add
xor
aad
mov
(bad)
aad
dec
adc
lea
sbb
push
xchg
aad
jno
bound
and
mov
dec
sub
xor
mov
sub
aaa
adc
dec
mov
(bad)
and
mov
ds
jno
add
push
dec
sbb
aam
dec
push
sub
in
popa
sub
ss
ins
add
inc
pop
jmp
push
call
adc
test
retf
xor
jb
xchg
fiadd
mov
sbb
stc
pop
jns
xchg
xor
pop
pop
inc
pop
rol
das
aaa
inc
add
je
(bad)
push
ret
jae
inc
fisttp
les
push
movs
sbb
fld
sbb
scas
and
out
fcomp
inc
not
xor
dec
daa
(bad)
adc
xchg
push
gs
add
loope
pop
xor
retf
into
and
and
or
fcomp
cmp
cwde
js
inc
lods
ss
icebp
inc
and
popf
fidivr
ret
mov
(bad)
sub
test
xchg
ja
(bad)
xchg
sbb
or
cmp
mov
mov
fidivr
retf
clc
xor
xor
add
imul
adc
mov
inc
icebp
inc
pop
push
dec
sbb
aaa
xchg
mov
nop
push
mov
and
sbb
mov
inc
jo
xchg
lds
add
add
fadd
mov
pusha
inc
das
(bad)
ficomp
pushf
xchg
jg
and
add
add
pop
(bad)
add
jl
sub
inc
aad
xchg
sub
in
(bad)
push
mov
rol
dec
scas
add
mov
cmp
jle
mov
mov
fs
dec
or
cmc
cmp
out
mov
sbb
mov
jl
aaa
dec
shr
mov
add
or
xchg
aas
in
cmp
mov
icebp
jae
cmp
in
push
dec
and
dec
mov
sahf
or
stos
fs
sbb
adc
cmc
cmp
test
adc
adc
pop
sub
jle
push
inc
dec
xchg
mov
dec
or
(bad)
jmp
(bad)
test
xchg
in
mov
sbb
pushf
cs
cmc
xchg
inc
loope
fcomip
adc
mov
cdq
pop
mov
jle
in
mov
js
leave
mov
dec
test
test
stos
loope
in
pop
loopne
cmp
shl
(bad)
fst
sub
xor
jg
das
cmc
mov
out
pop
in
punpckhbw
frstor
ss
add
arpl
ret
test
sub
(bad)
and
add
adc
dec
adc
or
adc
scas
int
sbb
test
mov
sub
ss
inc
xchg
mov
add
mov
(bad)
adc
mov
push
cmp
pop
push
add
pop
retf
bound
xchg
imul
inc
and
dec
xor
or
pusha
loope
mov
mov
imul
stos
and
jno
add
scas
cmp
sbb
push
loope
or
xor
mov
loope
ret
jno
aas
inc
lahf
sub
dec
gs
jb
imul
test
jge
mov
and
in
jne
retf
or
mov
adc
sub
cmc
sbb
out
out
push
es
test
push
mov
int3
fmul
pop
stc
icebp
aad
and
out
fisttp
or
pop
push
dec
addr16
or
or
xchg
dec
mov
cmp
loope
sub
jp
xor
xor
dec
cs
sub
add
bound
fcomp
push
cmp
inc
or
clc
mov
xchg
dec
outs
pop
inc
dec
xchg
fstp
mov
sbb
sub
push
cmp
xor
outs
sub
sub
fld
pop
mov
ror
mov
jbe
sub
dec
(bad)
cmp
xchg
adc
sbb
push
add
cmc
in
cmc
les
xor
adc
xor
xor
jge
popa
(bad)
mov
fldenv
push
push
jae
xor
xor
or
mov
fwait
or
icebp
imul
or
repz
add
ds
mov
or
lods
or
inc
or
ds
jbe
enter
imul
adc
add
push
shr
(bad)
pop
cmps
mov
into
inc
xchg
leave
pop
xchg
adc
push
das
rol
ss
int3
(bad)
jmp
pop
add
mov
and
mov
cmps
mov
dec
nop
adc
lock
dec
sub
add
jl
push
dec
(bad)
cmp
rcr
movs
rcl
push
jbe
test
mov
cmp
mov
xlat
adc
mov
lock
outs
mov
fs
lods
push
mov
test
and
push
test
movs
or
das
pop
test
and
push
leave
jne
sar
add
add
pop
push
movs
xor
pusha
cmp
cdq
fisttp
and
dec
(bad)
xchg
add
xchg
xor
jmp
dec
icebp
out
retf
sbb
xchg
push
daa
or
loop
push
lea
push
sahf
pop
int
pop
es
std
add
add
rol
inc
xchg
mov
sub
movs
test
xchg
jb
clc
repz
and
fst
sub
mov
mov
sub
retf
or
sbb
in
js
out
lds
dec
jo
stos
std
cmp
outs
add
pop
sbb
jb
in
inc
sub
adc
push
and
pusha
fldcw
ficomp
pushf
in
and
and
dec
aam
iret
cmovo
fimul
pushf
lods
pop
call
imul
stc
push
and
stc
xchg
clc
shr
fcom
rcr
pop
(bad)
sbb
mov
inc
lods
stos
add
or
push
out
inc
and
sub
jmp
jne
scas
adc
bound
jbe
or
mov
ss
imul
mov
lock
sub
fmul
fwait
jnp
push
cmc
xor
pop
std
test
xchg
stc
outs
inc
addr16
inc
mov
cmp
cmc
and
repz
sub
stc
call
jmp
and
cs
push
pop
pop
jp
adc
jmp
xor
loope
fadd
add
ret
das
ror
add
xchg
lock
push
mov
mov
sub
adc
adc
and
jle
fld
lds
rcr
fstp
xor
fst
jbe
pop
xor
dec
repz
(bad)
pop
out
mov
cmp
add
sbb
inc
jp
xor
adc
mov
jbe
enter
push
fnstcw
adc
jo
lods
xchg
or
mov
clc
mov
sbb
dec
xor
lds
inc
imul
xchg
ins
aas
int3
mov
xchg
fst
inc
in
test
or
push
jne
mov
pop
xchg
int3
cmc
out
cmp
movs
mov
inc
adc
xchg
add
adc
cmps
int3
dec
out
(bad)
int3
xchg
test
nop
cmp
mov
dec
in
add
xchg
xor
adc
pushf
xchg
rol
out
fbld
pop
sub
jmp
lahf
nop
fnstcw
jmp
mov
mov
mov
sbb
cmp
jb
enter
es
daa
push
movs
bswap
inc
add
xchg
jmp
mov
fldcw
dec
in
ficom
les
push
in
and
fidiv
jle
add
mov
pop
movs
mov
sbb
dec
mov
xchg
sbb
jnp
jnp
fwait
clc
js
dec
js
add
jge
add
loope
ds
xchg
mov
sar
int3
stos
jbe
das
adc
mov
out
scas
popa
jmp
dec
rcl
(bad)
dec
int3
and
(bad)
mov
in
inc
inc
xor
test
mov
loop
jbe
xchg
fdivr
rol
xor
xor
out
out
cmp
daa
sbb
fstp
das
int3
mov
sbb
add
movs
xor
cmp
bound
mov
sbb
clc
das
nop
cdq
adc
mov
rcr
sub
sub
dec
sbb
and
or
cmp
dec
pop
cmp
cmc
pushf
pusha
icebp
adc
in
jns
in
add
outs
adc
jmp
dec
push
cdq
ret
je
push
xchg
mov
inc
xlat
arpl
push
xchg
xchg
mov
add
popa
and
xchg
xchg
xchg
fldenv
jno
cmp
add
jp
and
dec
movs
cmp
or
sub
ror
je
pop
xor
jnp
push
push
in
push
lods
jne
xor
xchg
std
das
mov
dec
mov
mov
mov
push
cmps
rol
inc
scas
inc
adc
out
cld
iret
inc
popa
mov
xlat
movs
cli
sar
shr
inc
in
pop
or
pusha
and
lds
dec
aam
(bad)
popf
test
cmps
outs
mov
push
clc
push
push
int
test
pop
int
int
push
repz
mov
xor
push
ins
and
sub
push
fist
mov
add
push
lock
ficomp
jp
adc
in
dec
imul
les
sub
pop
xchg
pop
in
add
fst
or
fs
js
movs
jge
xchg
pop
or
or
rcl
mov
lods
sbb
cmp
std
mov
pop
gs
les
adc
add
pop
xor
jle
das
sbb
mov
loope
mov
and
push
mov
shr
mov
pushf
ds
fstp
adc
xlat
lds
mov
aam
inc
rol
mov
stos
les
cmp
xchg
popa
jl
jno
in
adc
push
xchg
ja
mov
sub
jp
cmp
test
inc
(bad)
movs
movs
in
xchg
push
push
ja
cmp
adc
inc
stos
sub
or
adc
aaa
outs
popf
es
aas
xor
mov
pop
adc
faddp
sbb
mov
push
inc
in
inc
cmp
stc
mov
cmp
push
push
xor
add
xchg
mov
scas
shr
mov
enter
aad
sub
stc
aas
out
dec
sbb
hlt
mov
clc
sbb
sub
xchg
fld
fsubr
stos
int
rcl
sahf
push
pop
std
mov
lds
or
(bad)
jle
mov
(bad)
jecxz
cdq
cmp
icebp
js
jle
enter
cpuid
int
or
add
inc
(bad)
fs
ret
ret
fidivr
jnp
or
inc
sbb
outs
dec
ret
cdq
call
pop
mov
sbb
in
lods
jb
cmp
or
push
cmp
jl
add
push
mov
fdiv
aad
add
xchg
movs
js
popa
or
and
int
jns
mov
dec
xchg
repz
jno
idiv
(bad)
shl
push
cmp
sbb
push
sar
sub
es
int
cmp
rcr
mov
out
mov
test
push
in
jo
mov
test
mov
push
jmp
fdivr
lds
leave
ja
ja
outs
iret
jno
cmp
cli
(bad)
iret
imul
fild
push
std
nop
or
mov
ds
adc
movs
and
sbb
inc
div
dec
mul
(bad)
iret
xchg
icebp
jo
xor
or
cmc
xor
mov
mov
stc
jmp
std
push
jmp
xor
jp
or
inc
sar
add
sbb
adc
push
pop
xchg
adc
mov
addr16
or
inc
call
inc
add
clc
inc
push
jno
sbb
loopne
and
adc
jp
scas
jl
and
repz
imul
add
addr16
bound
or
sbb
rcr
dec
bound
jnp
cmp
mov
je
dec
push
push
shl
dec
loop
stc
js
and
and
into
and
and
std
inc
enter
mov
pop
fld
adc
mov
(bad)
or
xchg
lods
xor
jbe
jnp
lods
add
and
pop
vpunpckhdq
add
cmp
dec
in
stc
ja
into
mov
push
or
rcr
repnz
fisttp
and
mov
sub
or
sar
rcl
push
sbb
xchg
or
xchg
cwde
div
add
inc
sbb
dec
xchg
mov
inc
sbb
inc
cli
xchg
into
repz
xlat
cli
lds
int3
clc
push
xor
add
or
rcl
das
imul
fimul
push
mov
dec
out
xor
or
pop
or
jmp
loope
or
in
sbb
cmova
mov
or
xor
sbb
pop
jmp
std
mov
ret
inc
add
aaa
test
in
inc
fwait
popf
inc
and
push
pop
outs
dec
sub
add
push
dec
add
adc
xor
or
cmp
icebp
gs
xchg
pop
lahf
jmp
push
cmp
cmp
inc
push
pop
mov
arpl
std
xchg
add
add
leave
iret
(bad)
and
repz
inc
mov
fwait
movs
jg
cmp
push
jnp
cld
add
jmp
cmps
or
fs
and
add
aam
add
or
push
push
adc
sbb
push
pop
loope
mov
leave
jns
sar
stc
mov
ins
push
call
add
add
add
or
add
sbb
loope
std
fdiv
cmp
ret
sub
(bad)
aaa
add
sub
xchg
fidiv
sbb
fiadd
add
inc
push
add
sub
jle
push
inc
js
inc
and
pop
retf
nop
and
aad
loop
mov
add
and
mov
and
xor
add
push
outs
and
sbb
and
inc
test
push
or
add
fldenv
loopne
add
pop
cmp
sahf
gs
mov
dec
add
(bad)
sbb
fldenv
mov
int
cmp
sbb
inc
outs
pop
das
cmps
or
jle
sbb
retf
xor
push
mov
cmp
and
push
(bad)
movs
icebp
add
cmp
xor
push
inc
clc
jg
push
push
mov
sub
inc
out
inc
test
dec
cmp
add
jns
stc
push
in
ins
js
xchg
dec
jg
sub
xchg
xor
or
es
ret
mov
mov
nop
jns
pop
jns
inc
push
inc
mov
cmp
pop
adc
stos
adc
xchg
push
or
mov
es
test
call
data16
pop
in
fcmovb
push
dec
mov
test
or
jno
in
movs
shl
arpl
mov
daa
cli
cmps
mov
in
mov
popa
and
mov
pop
xchg
das
sub
mov
pop
and
or
jge
movs
push
jge
outs
sbb
sbb
jl
xor
sub
sbb
adc
add
and
xlat
clc
(bad)
fstp
push
adc
cmp
jns
push
jnp
inc
or
jno
mov
mov
xor
bound
mov
push
ret
loope
ficom
ret
fs
fild
es
mov
sbb
and
cmp
cmps
adc
mov
test
call
call
sbb
inc
push
xchg
js
push
cmps
xchg
aad
dec
cwde
scas
rol
out
pop
inc
dec
pop
clc
ins
inc
xchg
mov
inc
push
and
iret
pop
jo
out
lods
das
aam
sbb
add
call
jg
push
xor
mov
scas
(bad)
scas
add
clc
jb
imul
mul
dec
pushf
xchg
and
fnstenv
fs
hlt
in
mov
and
cmc
in
sub
in
cmp
add
cmp
in
and
rcr
add
pop
or
mov
clc
pop
jmp
or
mov
xor
stos
push
ret
rcl
fiadd
ins
sbb
stos
or
inc
or
dec
call
mov
push
jcxz
push
jne
rcr
sbb
mov
push
lahf
mov
sbb
(bad)
pop
cmp
mov
mov
(bad)
push
mov
pusha
std
mov
xchg
adc
dec
and
pop
xchg
xor
dec
ds
pop
adc
jno
jmp
jno
nop
sbb
daa
or
xor
add
cs
sub
test
xchg
sbb
enter
mov
and
or
mov
add
jl
jae
inc
popa
call
sar
push
push
adc
cmp
mov
cmc
into
pop
aam
cs
add
wrmsr
adc
cmp
pop
or
or
push
adc
mov
jp
push
adc
inc
idiv
sub
aad
xor
add
call
pop
or
shl
shl
inc
mov
scas
je
outs
or
jl
or
lds
or
mov
ins
popf
cmp
mov
dec
adc
stos
fadd
test
pop
stc
push
mov
cmp
jbe
(bad)
jne
stos
adc
sub
jb
je
xor
shl
das
jmp
mov
in
enter
sub
ds
adc
add
sbb
cmp
xchg
cli
imul
fwait
cmp
adc
bound
stc
mov
mov
inc
jne
add
or
dec
sub
adc
std
les
sbb
int3
and
pop
push
cmp
bound
int3
dec
icebp
retf
sbb
sbb
scas
outs
ss
sub
mov
loopne
add
xor
inc
es
add
add
jne
jbe
ins
es
jge
fidivr
test
cmp
sbb
mov
mov
mov
mov
inc
or
test
cmp
es
pop
out
int3
dec
sub
push
xlat
xor
inc
sbb
push
adc
push
mov
xchg
sbb
pop
dec
dec
sbb
nop
add
cmp
jle
cmp
jle
cmp
in
ret
jle
cmp
jle
ror
cmp
mov
jno
cld
push
mov
jns
(bad)
sbb
pop
adc
cmps
adc
lods
and
inc
mov
adc
mov
push
pop
loopne
stos
sub
dec
int3
ins
add
pop
std
ss
imul
loopne
or
lahf
sub
pop
nop
push
std
jns
lahf
cmp
push
leave
test
push
sti
pop
mov
inc
dec
sub
or
nop
pusha
or
in
or
shl
cli
inc
jmp
into
and
sub
leave
into
std
test
cmp
inc
out
push
mov
xor
les
cmc
and
xor
jb
xchg
xchg
sbb
in
or
test
cli
and
mov
xchg
cwde
jae
shl
mov
dec
bound
clc
ins
mov
push
ins
sub
pop
jmp
les
adc
sbb
xchg
cmp
test
jne
pushaw
or
mov
mov
xchg
popf
sub
ins
add
test
pop
lods
cmova
cvtpi2ps
cmc
push
or
mov
xor
cmp
push
loop
test
xor
lods
sbb
or
or
inc
fisub
xchg
aam
push
test
dec
sub
aad
into
adc
cmp
xchg
mov
mov
xchg
nop
xor
inc
add
das
cmp
mov
inc
(bad)
neg
cmp
or
push
inc
dec
mov
enter
jns
stos
dec
mov
loopne
lahf
add
adc
movs
adc
and
sbb
adc
out
sub
pop
and
add
iret
test
dec
and
sysret
dec
test
paddsw
rol
xchg
outs
loope
fldenv
shrd
jo
or
sub
or
(bad)
in
popf
mov
loop
das
push
dec
sar
or
add
and
aad
test
adc
inc
cdq
imul
push
push
adc
mov
mov
pop
cdq
fdivp
cmp
pop
pusha
cmp
xchg
pop
cmps
popa
clc
sbb
cld
test
sbb
or
cmp
jmp
addr16
add
sbb
mov
jns
popf
stos
dec
test
adc
rol
dec
mov
jno
cmp
adc
mov
popa
in
lods
fwait
jno
adc
dec
inc
or
push
push
aaa
mov
addr16
sbb
add
dec
and
pop
adc
cmp
add
add
add
int3
push
cmp
cmp
xor
fcom
mov
adc
dec
call
push
stos
and
mov
adc
int3
gs
inc
push
ret
inc
imul
pop
sub
xchg
ins
je
or
ret
inc
and
fldcw
sahf
sbb
pop
xlat
push
cmp
mov
adc
mov
cs
pop
fs
inc
cmps
adc
push
aam
jns
mov
mov
dec
fld
mov
cmp
lea
adc
mov
sahf
jne
ret
mov
ss
outs
push
and
pop
(bad)
loop
dec
jb
sbb
jno
pop
mov
fst
retf
ds
dec
fadd
or
cli
or
ror
int
mov
adc
cmp
or
fstp
and
xchg
iret
mov
addr16
(bad)
sahf
sar
jmp
inc
adc
mov
pop
push
test
inc
mov
adc
shl
mov
cs
push
ins
add
or
daa
inc
fnstcw
fistp
lods
jns
push
(bad)
ret
pop
repz
sbb
mov
pop
mov
add
pop
jne
add
jne
push
dec
push
or
push
sbb
mov
xchg
xor
ja
ds
sbb
aad
mov
or
sub
lahf
fldenv
add
retf
and
add
dec
mov
aaa
test
pop
es
ds
push
aas
lods
add
cmp
jbe
pop
add
in
lods
pop
ja
in
pop
xor
mov
imul
mov
and
push
add
push
std
movs
dec
push
push
add
sbb
into
shr
adc
adc
in
add
xchg
mov
pop
add
or
pop
nop
mov
icebp
and
jl
or
adc
sub
inc
xor
dec
or
adc
inc
fcmovne
lods
sub
mov
push
cmp
inc
rcr
add
and
fbld
xor
jne
test
cmp
cmp
mov
or
push
sbb
sbb
es
sbb
sbb
stc
(bad)
in
leave
int3
or
inc
jno
add
bound
add
movs
sbb
les
xchg
xchg
mov
ror
push
test
fdivrp
and
clc
push
and
loop
dec
pop
or
inc
sub
or
push
into
adc
or
hlt
xchg
jns
push
add
xor
adc
mov
adc
test
js
ja
pop
pop
cmp
test
sub
inc
adc
mov
fimul
(bad)
sub
leave
ja
sbb
cmp
ja
call
inc
xchg
stos
fist
mov
sub
cmc
or
sbb
les
(bad)
jg
int3
test
dec
inc
jmp
push
jns
inc
push
xchg
or
adc
lahf
ins
sbb
test
jge
mov
cmc
mov
xor
and
ror
xchg
mov
jae
cmps
push
rcl
cmp
shr
add
pop
push
inc
mov
xor
cdq
inc
inc
mov
rcl
or
lea
cmp
push
pop
xchg
lods
adc
sub
sbb
test
aad
xor
xchg
or
pop
sbb
sub
jl
sbb
mov
inc
jge
sar
mov
mov
cmp
and
add
scas
sub
test
and
push
jmp
inc
xchg
test
adc
test
adc
scas
cmp
arpl
xor
movs
movs
push
add
inc
dec
cwde
and
stos
inc
or
data16
inc
pop
ds
or
popa
js
sbb
js
mov
stos
sub
sbb
and
push
fstp
retf
push
and
icebp
xor
repz
imul
mov
xlat
movs
es
movs
mov
mov
out
sub
ret
mov
mov
pop
sub
ds
test
add
mov
adc
add
mov
pop
or
push
mov
pop
stos
mov
or
push
jns
xor
sbb
icebp
push
mov
pop
add
sbb
std
out
imul
add
test
in
adc
push
push
pop
arpl
push
inc
inc
jb
mov
inc
dec
lock
fwait
mov
or
adc
rcl
cmp
loope
adc
jmp
cs
rcr
test
sbb
inc
cmp
push
outs
push
sub
push
test
or
cmp
imul
call
fbstp
mov
ret
fstp
xor
popa
pop
test
loope
cmp
or
stc
push
or
shr
lods
xor
in
sbb
iret
jg
adc
dec
lahf
popf
(bad)
lods
push
sbb
sbb
sbb
lock
jno
pop
sub
cmp
jmp
ret
adc
ss
loope
(bad)
push
(bad)
dec
or
call
sbb
jle
and
sub
push
sti
mov
dec
aaa
push
and
out
push
xlat
and
jb
sub
fwait
pop
xchg
(bad)
ins
push
xchg
pop
bound
lods
add
ins
xchg
test
sti
fsubrp
dec
add
add
dec
ja
rol
test
or
dec
and
add
adc
ror
mov
enter
jmp
dec
or
loop
loop
ins
jnp
sub
mov
repnz
or
lods
cmp
mov
cmp
mov
pop
stc
and
call
test
lods
cmp
jecxz
daa
or
sbb
xchg
inc
test
test
push
pop
outs
int3
push
sub
mov
sbb
mov
out
push
or
addr16
popa
adc
ins
sbb
sub
scas
inc
and
cmps
push
(bad)
movs
xlat
ret
pop
pop
and
stc
xor
rol
(bad)
in
test
rcpps
mov
mov
dec
or
jp
inc
test
dec
mov
and
inc
cmp
pop
fistp
push
or
push
mov
xchg
dec
inc
adc
fbld
mov
out
add
fnstcw
ficomp
mov
and
ret
dec
lods
xchg
cmp
mov
es
pop
loopne
dec
jmp
in
mov
lods
or
sub
and
inc
and
rcl
add
dec
and
pop
mov
inc
adc
push
cmp
test
ror
out
sub
outs
xor
fst
xchg
and
pop
mov
cmps
sbb
or
xor
jb
adc
adc
sub
and
retf
dec
fst
xchg
mov
and
test
add
add
adc
dec
movs
adc
adc
mov
rol
in
add
inc
adc
mov
shl
adc
cmps
jl
out
add
xor
pop
dec
nop
neg
add
inc
lods
add
(bad)
ins
push
jb
dec
adc
out
dec
push
pop
push
or
mov
sbb
leave
mov
push
xchg
iret
test
cmp
sub
ret
and
adc
(bad)
fiadd
aaa
jo
and
jge
xor
or
ret
push
mov
enter
sbb
or
push
sbb
sbb
cmc
cli
and
movs
jnp
dec
dec
mov
out
add
sbb
lock
cs
jp
aaa
add
sbb
and
lahf
push
xchg
adc
paddsb
inc
add
sbb
dec
stos
cmp
arpl
sbb
adc
loop
mov
push
mov
dec
jb
sub
push
cli
jp
mov
sbb
xor
dec
mov
inc
add
pop
or
sub
mov
mov
mov
out
iret
movs
ins
scas
fmul
sub
dec
fiadd
or
in
adc
add
das
mov
or
xor
(bad)
xchg
pop
inc
sub
dec
nop
je
mov
dec
cld
popa
fst
and
icebp
inc
dec
je
outs
int3
cmp
pop
dec
js
pop
mov
xor
mov
xchg
pop
pop
add
xchg
(bad)
imul
sbb
shl
push
mov
jne
ds
and
or
sub
les
push
push
popf
add
shr
adc
jbe
in
daa
sbb
and
mov
enter
ins
pop
pushf
mov
add
xor
push
cmp
std
sub
mov
gs
push
sub
sbb
add
fs
outs
pop
sub
cmps
(bad)
or
mov
or
jle
das
outs
pop
xor
jmp
mov
cmp
dec
and
and
(bad)
xor
jge
sar
mov
xchg
call
in
push
iret
outs
xor
push
jbe
ins
and
push
jno
mov
inc
adc
cmp
inc
cmp
cmp
jns
and
add
inc
or
clc
mov
pop
test
push
movs
sbb
add
xchg
es
test
cmp
retf
sbb
dec
mov
mov
pop
pop
(bad)
sbb
or
sub
add
(bad)
jge
or
jge
or
adc
addr16
mov
xor
push
or
ja
jle
hlt
ret
sbb
cmps
pop
cwde
sub
(bad)
fistp
neg
add
pop
xchg
dec
mov
mov
add
daa
and
aam
daa
leave
xchg
and
mov
jecxz
std
cld
xor
add
shl
pushf
stc
mov
add
add
pop
add
jl
mov
or
cs
add
sub
test
mov
es
lahf
daa
cmc
dec
push
mov
and
xlat
ret
xchg
push
mov
jmp
mov
bound
les
(bad)
fwait
adc
mov
jl
stc
and
push
dec
add
test
or
add
imul
pop
mov
push
mov
or
mov
dec
lea
sbb
ret
adc
cmp
out
adc
xchg
stos
dec
cmp
inc
fimul
or
ins
sub
pop
sahf
mov
aas
dec
pop
or
ret
add
fdivr
sbb
(bad)
test
dec
clc
out
mov
push
dec
jns
and
pop
inc
shl
jo
cmp
jbe
icebp
cli
sbb
push
aam
jmp
fs
cmps
lock
mov
aaa
mov
push
pop
mov
fidivr
je
xor
pop
mov
(bad)
push
xchg
test
and
test
push
mov
pop
cmp
sbb
xchg
mov
(bad)
rcl
test
js
push
in
push
pop
mov
sbb
outs
rcr
or
push
jmp
push
mov
sbb
pop
(bad)
sbb
sub
push
dec
sbb
cmps
ds
daa
push
int3
std
and
arpl
and
(bad)
inc
push
rcl
xchg
xchg
sub
repnz
ret
jo
daa
scas
adc
or
sbb
sub
pusha
dec
neg
cmc
add
add
xchg
or
xor
sti
fcomp
sub
mov
fld
push
ret
jmp
or
jno
scas
cmps
or
pop
mov
popf
xchg
leave
cmp
jge
mov
pop
aam
inc
inc
ss
(bad)
leave
adc
mov
pusha
mov
or
rcr
adc
inc
dec
loop
cmc
clc
ins
or
aaa
jecxz
pop
add
scas
cmc
test
xor
push
xor
xchg
fld
xchg
adc
pusha
je
mov
mov
in
or
inc
adc
xchg
and
jmp
xchg
pop
adc
push
jno
mov
out
mov
sub
(bad)
in
fwait
cmp
in
adc
inc
adc
loope
loopne
sbb
pop
jge
adc
sbb
add
dec
jg
sar
sbb
push
pop
sbb
pop
test
or
adc
div
mov
push
xor
sub
cmp
xor
or
sbb
add
adc
add
xlat
pop
jae
push
pop
xchg
aaa
cmc
or
add
or
pop
jge
jl
js
inc
or
rcl
pop
xor
mov
movs
stc
ja
sbb
push
push
or
push
add
sbb
fmul
into
jle
add
jns
sbb
or
xchg
enter
out
sbb
pop
inc
pop
fistp
je
inc
pop
sbb
mov
push
inc
add
jl
jl
loopne
jns
sub
icebp
adc
loopne
ja
push
inc
or
in
leave
cld
cmp
push
inc
xor
in
sbb
pop
test
push
outs
es
add
and
dec
mov
cwde
in
inc
leave
and
pop
jle
mov
xor
call
or
dec
xor
imul
cmp
pop
fmul
stos
adc
stos
mov
out
push
inc
dec
inc
inc
mov
sti
inc
(bad)
cmp
xchg
cmp
adc
test
pop
add
les
add
ror
in
test
dec
sub
mov
jne
xlat
jbe
and
or
xor
add
or
inc
scas
pop
push
cmps
mov
(bad)
jmp
jnp
(bad)
jle
mov
jp
dec
ss
(bad)
mov
sub
cmp
(bad)
sub
cmps
pop
cmp
add
daa
or
add
clc
into
sbb
mov
es
sbb
cs
adc
inc
int
icebp
(bad)
enter
pusha
and
pushf
add
or
inc
or
das
adc
mov
or
and
or
(bad)
sub
pop
stos
dec
mov
mov
dec
jge
std
(bad)
lock
xlat
loope
movs
inc
mov
inc
jbe
inc
sub
xchg
pop
push
inc
imul
pop
and
ret
mov
and
xor
xchg
data16
push
pusha
mov
popa
push
(bad)
fld
nop
sti
cmp
jg
repz
je
and
ret
rcr
pushf
ds
icebp
sbb
push
fwait
xchg
and
push
or
cmp
xor
push
xchg
add
daa
mov
dec
enter
mov
lds
push
adc
xchg
push
or
jg
pop
sbb
aam
mov
dec
sub
add
sub
aaa
push
or
ds
fimul
(bad)
push
cmp
jge
clc
das
dec
adc
xchg
or
add
outs
mov
add
dec
call
inc
sbb
cdq
jp
or
scas
mov
sbb
mov
mov
ins
sbb
adc
dec
lahf
push
add
jge
out
push
cmp
mov
movs
or
sahf
adc
adc
cmc
mov
outs
mov
cwde
push
pop
jae
lock
lock
xchg
jmp
movs
dec
push
jp
jmp
arpl
cmp
mov
movs
inc
inc
inc
sbb
push
inc
mov
daa
add
inc
mov
fs
xchg
pop
(bad)
push
dec
or
(bad)
mov
and
xchg
das
(bad)
pop
jae
in
fisub
sbb
add
xchg
jo
mov
test
scas
jmp
(bad)
or
adc
int3
sbb
or
cmp
loopne
enter
add
pusha
cmc
mov
clc
mov
lahf
cmp
sub
cmp
and
outs
xchg
loop
dec
jg
fmul
push
add
dec
mov
icebp
pop
test
add
test
cdq
data16
or
or
xor
pop
cli
mov
fst
dec
rol
adc
adc
add
mov
in
or
xor
mov
stos
cld
imul
push
push
add
outs
dec
call
cmp
inc
(bad)
sahf
jns
lea
dec
cmp
jnp
aas
sub
sub
scas
adc
jns
retf
movsx
add
inc
and
sub
nop
pop
cwde
inc
push
pop
mov
jg
mov
enter
stos
stc
call
aad
mov
push
sbb
sub
aad
in
pop
sub
lds
and
sbb
fs
out
and
fistp
bound
dec
cmp
stos
cmp
xchg
xchg
mov
mov
adc
or
push
test
xor
adc
mov
ins
jo
jmp
add
push
add
mov
mov
mov
or
push
or
or
(bad)
rcl
push
mov
and
ins
adc
pop
loope
add
adc
mov
sub
add
sub
mov
jne
sub
(bad)
pusha
mov
stos
adc
cmc
adc
jg
in
test
cmc
daa
push
and
in
or
loopne
jmp
iret
sub
icebp
add
sbb
jecxz
sub
pop
subps
ds
or
xor
mov
fnstenv
js
loope
mov
sub
push
ds
and
cmp
popf
push
adc
adc
and
adc
jnp
mov
and
cmp
sbb
mov
rcl
int3
push
add
jbe
popa
xchg
adc
fisub
add
int3
xchg
cmps
pop
xor
sub
pop
pop
(bad)
dec
add
jbe
push
jp
dec
fisttp
imul
push
add
mov
out
hlt
fs
lea
int
add
push
inc
das
push
clc
pop
aas
jae
or
xchg
dec
ds
imul
adc
jl
push
pop
cdq
push
and
pop
push
sub
leave
pop
lds
icebp
or
jae
mov
add
loop
inc
push
and
pop
dec
int
or
fild
dec
mov
scas
sub
inc
icebp
or
imul
mov
pop
adc
addr16
jno
push
push
push
pop
movhps
dec
dec
add
and
cld
and
lods
mov
mov
add
adc
pop
push
mov
iret
sti
xchg
dec
(bad)
or
loope
out
mov
pop
cmp
ja
pop
xor
mov
pop
fsub
and
js
push
or
push
jae
add
adc
imul
push
jg
sbb
mov
add
sbb
mov
adc
dec
or
shl
popa
hlt
sub
or
jnp
jp
add
add
mov
pop
xor
pop
adc
or
adc
shr
jbe
and
loopne
repnz
or
jge
mov
or
mov
fidiv
cmp
jns
inc
mov
fwait
cmps
adc
and
sbb
mov
pop
lds
sbb
outs
dec
dec
xchg
mov
rol
dec
rcl
xchg
adc
push
pop
pushf
sub
xor
xor
xor
and
retf
add
and
add
into
fdivr
retf
inc
outs
outs
daa
test
outs
inc
rol
jl
cmps
fs
inc
inc
xor
(bad)
jns
jno
idiv
nop
cmp
mov
shr
adc
es
jge
nop
dec
cmc
into
mov
sbb
or
sub
and
aam
ret
je
jge
scas
cmp
adc
sbb
call
fcom
lock
pop
sub
or
xchg
ret
or
lea
popa
adc
adc
dec
popa
lahf
ja
sbb
add
enter
(bad)
mov
jne
out
rcpps
add
jne
mov
mov
test
add
jge
jge
(bad)
push
or
cdq
ret
pop
adc
imul
inc
fnstenv
or
xchg
sbb
xlat
mov
inc
inc
lock
bound
cld
or
imul
cld
jge
imul
sub
lds
add
stos
xlat
push
inc
fmul
sbb
fwait
xor
or
mov
shl
sbb
call
add
jmp
push
adc
pop
out
popa
or
and
lds
pushf
gs
imul
xchg
movs
jmp
outs
clc
idiv
popa
popa
and
add
in
sbb
test
aaa
xor
pop
pop
push
imul
fstp
and
scas
movaps
cmp
ret
cmp
popf
sbb
dec
mov
sub
in
push
sahf
sahf
adc
pop
xchg
push
sahf
cmc
lock
fst
add
add
loopne
sbb
shr
push
test
sbb
xor
popf
into
push
test
xchg
sbb
adc
xchg
adc
cwde
or
adc
adc
adc
jmp
fs
or
mov
push
mov
add
push
mov
dec
lock
pop
add
inc
cwde
add
xor
sbb
dec
mov
cmc
add
adc
xchg
(bad)
and
or
mov
enter
fwait
stc
cmp
outs
mov
data16
push
sbb
retf
icebp
mov
repnz
hlt
dec
xor
mov
jb
fs
pop
test
pusha
and
cdq
or
inc
les
rcpps
or
inc
aaa
retf
adc
push
fidiv
or
sub
shl
sbb
addr16
or
mov
int
test
sbb
dec
dec
add
aaa
jl
pop
dec
xor
cli
xchg
cmps
fimul
scas
push
dec
inc
add
(bad)
mov
icebp
sbb
push
ret
or
mov
aad
mov
outs
add
ja
cmp
or
sti
xchg
pop
or
je
aas
loopne
xchg
gs
icebp
add
or
and
mov
repnz
mov
xchg
cs
add
out
adc
xor
fidivr
pop
cmp
addr16
retf
out
sti
inc
or
jne
js
push
jns
mov
dec
push
mov
mov
jg
adc
movs
pcmpgtd
js
ret
push
sbb
inc
xchg
rcl
icebp
ror
sahf
jb
popa
cmp
jecxz
ins
xor
loopne
and
jne
ret
add
dec
cwde
ret
mov
(bad)
into
aas
add
push
retf
or
jo
fldcw
dec
loop
and
mov
and
pop
cmp
adc
jp
sbb
mov
mov
sbb
add
xor
push
sub
xchg
push
add
test
jbe
retf
ret
mov
inc
jb
leave
dec
(bad)
cmps
cmp
or
rcl
fs
test
test
adc
xlat
mov
pusha
adc
cmp
inc
scas
jle
mov
jne
jbe
mov
xchg
(bad)
xchg
out
jno
dec
mov
mov
shl
dec
push
in
inc
js
shl
and
dec
cmp
cld
adc
dec
hlt
icebp
or
add
dec
pop
aas
pop
mov
call
or
loopne
xor
dec
pop
scas
and
movs
xor
pop
sub
dec
movs
mov
inc
sbb
ret
in
ret
bound
adc
mov
jge
rcr
ss
pop
test
adc
push
adc
inc
jmp
cmps
xchg
(bad)
push
or
mov
jg
jp
and
adc
or
ds
pushf
xor
jmp
sbb
xchg
cmp
cmps
pop
sub
inc
cmp
adc
adc
cmp
sar
int3
dec
mov
mov
and
scas
mov
fwait
and
retf
(bad)
ret
xor
inc
adc
xlat
neg
lahf
push
adc
adc
xchg
sub
xor
or
stc
add
inc
pusha
dec
pusha
aam
xchg
ins
mov
xor
dec
or
sti
test
les
mov
aam
xor
fcmovnbe
mov
out
popa
jo
sbb
test
mov
arpl
iret
push
imul
in
jge
jmp
push
cmp
jg
push
cmp
test
pop
sub
cmp
sbb
std
push
mov
ret
cmp
sahf
lea
mov
add
dec
rcl
sbb
add
test
pop
lea
test
addr16
mov
pop
or
mov
sbb
xchg
adc
add
outs
mov
sub
sub
jb
test
sbb
scas
mov
ja
mov
xchg
outs
push
add
lds
push
cmp
mov
cmp
(bad)
mov
dec
test
or
jnp
sub
xchg
sar
rcl
(bad)
jge
add
add
xor
inc
push
and
xchg
in
les
sub
fisub
jns
leave
ss
retf
inc
cmp
xchg
jge
loop
cmp
pop
jno
cld
mov
lea
test
pop
test
mov
mov
mov
mov
inc
sub
and
mov
add
cs
sbb
ret
sub
jge
xchg
mov
ret
call
std
jle
add
cld
scas
pop
xor
loopne
sub
cmp
aam
mov
or
in
and
cmp
mov
mov
movs
xchg
add
enter
pop
in
jge
movs
cmp
jb
jl
adc
push
call
cmp
adc
jg
push
adc
ja
icebp
rcpps
repnz
cmp
and
mov
movs
mov
cdq
in
adc
aad
movs
aaa
jbe
ds
xchg
adc
inc
and
adc
mov
jne
not
dec
xchg
mov
stos
push
and
cmp
xor
add
(bad)
in
cmp
add
push
xor
enter
adc
xor
daa
aam
ret
ins
shl
ret
pop
or
push
in
gs
imul
das
ror
pop
sti
jle
popa
imul
gs
xchg
in
dec
popa
inc
dec
jecxz
out
sti
aam
clc
enter
push
mov
or
test
dec
stc
add
jge
ret
jo
outs
xor
scas
retf
and
add
sahf
xchg
test
imul
in
push
jo
push
shr
call
les
(bad)
je
xchg
out
xor
data16
mov
(bad)
sahf
mov
push
inc
mov
mov
cmp
jb
les
or
imul
es
add
sbb
or
test
inc
xor
add
xor
sub
add
imul
retf
add
gs
inc
mov
jmp
xchg
lods
out
fisub
shr
mov
and
iret
push
jle
mov
lea
lock
push
popf
inc
jecxz
push
dec
sub
imul
lods
sbb
and
jle
imul
js
push
(bad)
test
in
pop
push
push
lds
adc
push
test
adc
add
call
push
cmps
fiadd
out
movs
sub
(bad)
mov
add
dec
push
add
aad
and
scas
int
add
mov
adc
popa
dec
mov
ja
data16
shl
dec
test
pcmpgtw
inc
fcom
daa
fwait
adc
stc
loopne
dec
sbb
in
add
jns
add
add
push
sub
add
push
xor
mov
test
sub
add
jo
(bad)
jo
mov
dec
cmp
xchg
add
retf
and
and
test
or
push
jne
test
call
cmp
jb
in
sub
push
add
in
sub
xchg
push
jg
mov
adc
inc
push
sar
movs
sbb
jle
iret
cmp
out
push
inc
and
pop
inc
stc
fdiv
enter
dec
stc
(bad)
fmul
shl
inc
push
clc
inc
jns
ss
push
inc
loop
push
xor
test
in
push
sbb
inc
lock
gs
lods
adc
cmp
inc
add
jmp
cwde
cmc
mov
rcl
inc
mov
mov
sbb
daa
ja
add
and
mov
rcr
dec
and
adc
lods
push
ror
loope
jb
gs
sub
mov
loope
or
pop
cmp
add
aaa
add
ret
or
jp
or
ja
and
enter
(bad)
sti
add
pop
stc
hlt
and
enter
push
push
cdq
lds
sbb
ss
out
lds
jnp
dec
add
jne
sub
or
dec
shl
mov
inc
or
cmp
cmp
scas
jmp
mov
sbb
add
pop
xchg
dec
jmp
jnp
test
mov
repnz
and
loopne
out
add
inc
mov
icebp
jle
cmp
xlat
les
push
in
adc
cmp
mov
push
jne
mov
add
xor
jmp
mov
dec
push
jmp
dec
mov
and
or
xor
add
add
push
push
adc
push
movs
inc
sbb
dec
cmp
push
add
call
sbb
mov
retf
fwait
in
pop
jno
shr
fwait
mov
mov
sbb
sbb
jns
icebp
mov
xchg
test
jg
mov
in
loop
push
imul
sub
repnz
popf
xor
push
mov
sbb
xchg
dec
and
and
in
fxsave
retf
jno
shr
push
pop
sti
jo
scas
stc
sbb
mov
cmp
jge
and
sbb
or
cmp
jg
adc
outs
add
sub
popf
outs
jne
pop
js
jne
dec
sbb
dec
jns
mov
test
add
cmp
or
jb
fst
loop
enter
lea
mov
ret
xchg
ror
popa
inc
stc
or
adc
xchg
retf
data16
ins
imul
cmc
leave
ror
pop
and
dec
lea
mov
xchg
dec
jbe
or
sub
lods
jbe
test
ficom
(bad)
mov
mov
inc
aas
inc
add
mov
fistp
and
imul
push
in
jns
lods
or
test
mov
stc
nop
mov
jnp
or
push
add
rcr
cmp
inc
movs
outs
gs
jle
dec
outs
dec
pop
cmp
stc
fild
or
test
mov
test
mov
xor
test
dec
or
push
mov
or
inc
mov
popf
jns
pop
movs
test
sbb
jnp
lea
inc
xor
cmp
cmps
repz
mov
fadd
mov
cli
test
nop
sub
inc
push
jg
push
sub
mov
push
lods
or
sub
push
sbb
retf
aam
xor
xor
jmp
push
adc
mov
inc
es
sbb
xchg
mov
sbb
int3
and
icebp
call
inc
bound
push
cmp
int3
and
mov
jecxz
dec
jecxz
add
inc
cmp
mov
dec
das
mov
inc
and
jnp
xchg
or
and
daa
movs
sbb
and
sbb
movs
xchg
xchg
inc
sbb
es
sbb
adc
add
popf
cmc
sub
push
add
inc
jge
repz
mov
adc
cld
daa
(bad)
adc
retf
add
adc
loopne
mov
rcl
and
and
sbb
pop
icebp
jbe
jbe
fcomp
cmp
sub
pop
ins
jno
loop
test
imul
mov
inc
(bad)
fbstp
(bad)
stos
fsubrp
mov
in
dec
or
pop
leave
pop
shr
cli
cmp
pop
xchg
outs
jmp
daa
stos
data16
icebp
xor
add
fadd
sub
sbb
mov
imul
pop
loope
lock
jmp
xor
adc
xchg
inc
das
cli
sub
dec
imul
dec
inc
and
inc
div
jecxz
imul
push
les
fld
inc
dec
iret
mov
inc
sbb
cdq
inc
fdivr
test
add
xor
aad
mov
pop
sub
mov
or
lods
push
sub
cmp
je
bnd
or
sbb
inc
(bad)
or
inc
bound
jmp
fdiv
dec
pusha
fcmovb
or
pop
or
ret
loope
je
pop
push
inc
or
xchg
add
ja
test
pop
mov
test
cmp
and
push
or
int3
or
sub
retf
and
adc
mov
mov
mov
or
cmps
jbe
mov
pop
sbb
into
ja
lds
adc
push
rol
loope
mov
ins
lahf
jmp
movs
test
or
aam
jmp
pop
in
sbb
clc
xchg
clc
push
sbb
mov
js
out
mov
jle
jo
mov
loope
aad
xor
dec
adc
sbb
in
loop
stc
mov
mov
out
bound
mov
sar
add
mov
pop
shl
add
pusha
leave
pop
pop
jno
jne
inc
ins
add
adc
dec
popa
addr16
dec
jecxz
jmp
call
ret
pop
hlt
add
les
sti
add
jbe
or
int
pop
and
pop
leave
fwait
test
xchg
(bad)
xor
into
enter
in
jle
loope
mov
add
test
xchg
jno
jb
rol
mov
daa
sbb
aad
sbb
sub
push
rcr
fs
dec
xor
in
sbb
pop
xchg
xchg
out
shr
cmc
(bad)
mov
int
xchg
dec
std
icebp
mov
js
mov
mov
pop
dec
xchg
jp
adc
sbb
inc
push
sbb
dec
xor
loope
(bad)
in
pop
pop
sbb
pusha
fnsetpm(287
mov
test
push
data16
push
pop
ins
push
int3
enter
hlt
call
sub
inc
mov
or
sub
imul
push
ds
mov
cmp
dec
xchg
test
pop
add
js
pop
inc
or
pusha
push
xchg
stos
push
xor
xchg
xchg
sbb
jmp
and
adc
cmc
adc
sub
cmp
xor
xchg
cmp
or
std
fs
sub
or
bound
arpl
push
test
jg
push
(bad)
scas
in
daa
mov
in
adc
or
dec
adc
(bad)
int
dec
jmp
xchg
push
push
mov
inc
or
into
cmc
mov
xchg
adc
addps
cld
inc
stc
mov
inc
adc
sti
cdq
hlt
xor
mov
das
ret
test
call
push
fcmovne
enter
cmp
je
movs
aad
cmp
shl
shl
mov
inc
je
std
fidivr
fld
xchg
pop
popa
dec
js
loope
cmp
cvttps2pi
adc
push
int
loopne
xchg
sbb
les
inc
mov
xor
pop
and
jae
dec
inc
push
ins
xchg
dec
test
(bad)
cmp
gs
ins
add
pop
mov
(bad)
cmps
fild
in
mov
mov
mov
inc
push
std
mov
icebp
into
data16
cmc
(bad)
into
inc
pop
mov
outs
repz
mov
fild
fwait
inc
shr
aad
mov
cmp
sar
dec
fwait
popa
loope
js
adc
data16
push
test
jmp
pop
lock
pop
je
jmp
js
or
inc
add
scas
mov
arpl
cmp
loope
pushf
xchg
xchg
fstp
aad
js
js
pop
mov
pop
dec
out
cmp
xor
jmp
shl
out
rcr
iret
xadd
lock
sub
sbb
cli
leave
loope
repz
nop
pop
add
sub
les
mov
add
cdq
and
add
inc
pop
inc
nop
lock
enter
adc
fistp
add
sub
bound
ret
xchg
out
lds
fadd
xor
leave
push
adc
or
leave
jb
dec
sbb
arpl
mov
pop
xchg
imul
fidivr
xor
inc
pop
mov
jne
jl
inc
dec
fadd
sub
cs
add
jle
mov
dec
jne
push
push
pop
add
(bad)
adc
mov
pop
xchg
xchg
ret
add
add
sbb
jnp
jo
stos
icebp
adc
and
xor
sub
inc
mov
in
jns
mov
mov
aaa
sub
sbb
adc
push
fidiv
or
jbe
add
pop
je
push
sbb
retf
add
push
inc
jns
and
jp
daa
sub
or
and
cmp
push
adc
ja
jle
or
jns
ins
jne
dec
jns
xchg
and
cwde
fbld
jmp
or
xchg
test
dec
mov
or
jl
call
stc
pop
and
shl
add
cwde
dec
mov
cmp
xchg
sbb
aam
test
jp
mov
inc
cmp
test
pop
adc
push
or
(bad)
in
les
cmps
ins
ret
jns
or
aas
push
fisubr
and
adc
inc
call
jbe
jle
add
fst
test
xchg
jp
and
lds
aas
xlat
push
add
sub
cwde
ret
mov
cld
pop
clc
add
dec
dec
push
dec
cmps
xlat
dec
add
les
push
(bad)
sub
fs
push
mov
and
inc
lahf
dec
jbe
dec
push
cmp
push
rol
add
sub
or
xchg
inc
fwait
mov
mov
pop
fdivr
in
and
push
inc
or
scas
xchg
xchg
adc
bound
jbe
push
and
ja
sbb
mov
iret
or
test
and
test
dec
popa
popa
test
repnz
sub
sub
sbb
jg
push
ffree
movs
push
pop
jae
call
fimul
stc
sbb
adc
and
lahf
icebp
mov
stos
(bad)
jg
sbb
add
inc
and
ret
loopne
push
mov
sub
lods
jmp
add
stos
sbb
pop
xchg
sub
inc
xor
push
xor
jne
adc
nop
sbb
adc
popf
out
and
ror
push
pop
dec
loope
aas
push
(bad)
fcmovbe
ret
loopne
jmp
mov
jno
into
stos
loopne
push
adc
pop
stc
inc
sbb
jecxz
xor
or
imul
lea
dec
adc
adc
mov
xchg
mov
lods
addr16
jp
cs
mov
ret
pop
dec
push
iret
mov
stos
add
daa
dec
mov
mov
sbb
fiadd
fsub
or
jle
mov
(bad)
mov
dec
inc
inc
iret
dec
xor
and
push
add
adc
arpl
cmp
retf
hlt
aaa
adc
aam
jle
(bad)
cmp
fild
mov
mov
in
mov
inc
jp
dec
adc
jmp
pop
adc
lds
dec
sub
xchg
(bad)
arpl
mov
ret
add
inc
(bad)
les
lea
ror
dec
or
icebp
popf
jg
stc
test
cdq
rol
loop
call
ret
mov
jmp
adc
add
mov
inc
push
jge
dec
adc
popa
or
(bad)
pop
push
sbb
adc
jns
sbb
stc
lahf
popa
jno
ds
mov
mov
add
jg
cmp
int
sub
add
or
and
movs
sub
adc
pop
fistp
cli
(bad)
sub
jge
cwde
lds
adc
(bad)
jne
dec
cmp
inc
movnti
repnz
and
pop
or
add
or
jns
sub
ss
add
sbb
mov
ins
add
cmp
mov
and
sub
(bad)
add
pop
push
stc
mov
push
gs
loope
daa
(bad)
jo
and
(bad)
jge
jb
add
je
inc
sbb
jle
jg
clc
pop
or
mov
in
dec
icebp
mov
pop
xchg
in
icebp
les
sbb
mov
pop
or
inc
cmp
es
inc
aas
ret
fisttp
aam
cs
sbb
inc
ins
or
sub
sub
(bad)
jae
cmp
jb
test
sbb
sub
jp
adc
mov
fisttp
outs
mov
dec
xor
sbb
xor
or
adc
dec
jge
test
jmp
adc
jle
dec
push
dec
sbb
sub
add
inc
arpl
or
lea
icebp
ret
cli
les
je
jg
loope
pop
in
enter
mov
dec
mov
je
pusha
mov
pop
jmp
dec
test
repz
add
loope
icebp
and
sub
xor
xor
int
ss
sub
in
sub
std
bound
xchg
add
mov
js
pop
jecxz
xchg
mov
dec
icebp
aad
ret
xchg
dec
retf
gs
loop
retf
xor
jno
test
pop
aam
jecxz
retf
add
dec
cmp
xor
adc
or
out
xchg
aad
xor
cli
arpl
stos
loop
mov
cmc
mov
and
sbb
jb
adc
pusha
daa
pop
int3
icebp
xor
out
aam
in
jecxz
cmp
and
jnp
stos
sti
ja
cmp
movs
loop
cmp
fnstsw
inc
sbb
fnsave
cmp
(bad)
adc
push
(bad)
dec
lods
call
pop
xchg
out
mov
sar
loope
xor
leave
rcr
enter
push
inc
data16
out
cmp
mov
js
pop
das
cmp
fnstsw
push
push
jo
ficom
add
jge
add
add
aas
mov
jle
jno
dec
inc
fld
sbb
add
xchg
data16
cmps
(bad)
add
in
adc
fistp
addr16
xor
les
cwde
sbb
pop
in
adc
popa
mov
mov
adc
ja
push
int
mov
mov
ror
jns
icebp
sub
rep
mov
and
push
add
adc
xchg
lods
shl
mov
mov
addr16
or
pop
out
nop
or
fnstenv
fcomp
push
retf
fnstcw
jo
inc
movs
inc
sbb
add
and
mov
inc
cmp
push
add
mov
lock
mov
lods
retf
fcom
push
mov
icebp
xor
cmp
lods
adc
or
add
inc
push
scas
icebp
outs
repnz
cmp
aam
add
out
push
push
outs
outs
and
inc
adc
mov
jns
js
jns
dec
jne
adc
cld
mov
ins
jae
or
repz
gs
cmp
sbb
mov
inc
jle
inc
pop
pop
sbb
(bad)
not
bound
push
dec
xor
push
(bad)
push
push
push
inc
addr16
ins
and
cwde
mov
push
daa
mov
in
adc
pop
xchg
inc
mov
in
into
xor
cmps
or
mov
xchg
gs
xchg
sbb
jns
dec
push
cli
adc
jae
push
mov
js
in
data16
and
cmp
test
cmp
xchg
and
and
pop
popf
clc
jl
add
cmps
xor
or
push
jno
das
mov
mov
or
lock
ins
push
mov
dec
stc
es
adc
push
mov
out
pop
std
stc
(bad)
fiadd
sub
inc
not
add
shl
addr16
inc
mov
or
retf
or
imul
loop
inc
call
jno
cmp
cli
or
iret
fild
mov
mov
call
cdq
pop
sbb
dec
rcr
mov
inc
or
imul
jns
or
cmp
cmp
adc
jb
or
cdq
jne
mov
imul
and
leave
call
add
data16
not
add
push
add
les
pusha
aad
sbb
cmp
stos
sbb
sbb
lock
out
mov
out
jge
ret
int3
mov
mov
jbe
fld
mov
or
sub
sub
mov
pop
jae
or
push
outs
(bad)
in
dec
addr16
mov
mov
rol
into
jno
ret
or
push
inc
repz
add
pop
or
cmp
or
xor
and
adc
leave
and
or
xor
jg
jle
cmp
jg
jp
xchg
out
fimul
cmp
pop
cmp
add
mov
add
or
loop
fs
ins
rcl
adc
xchg
pop
add
out
mov
faddp
pop
ficom
ror
in
(bad)
leave
sbb
call
out
pop
cmp
rcr
sar
lea
stc
mov
push
sub
stos
outs
push
stc
retf
(bad)
ret
clc
jmp
rol
sar
add
mov
fadd
sbb
inc
inc
loope
stos
sbb
sub
sbb
push
fwait
push
lahf
inc
cmp
out
inc
push
sub
add
pop
xor
sbb
push
and
loopne
dec
jle
cmp
adc
inc
pop
test
out
cmps
mov
inc
sbb
mov
fisttp
es
fcom
movs
mov
sbb
pop
fisttp
or
adc
rol
outs
inc
sub
aam
test
jae
cmp
fisttp
adc
xor
pushf
test
add
pop
pop
test
and
jne
dec
jne
xchg
sbb
inc
mov
test
xor
or
in
xchg
inc
out
in
retf
sub
popa
and
imul
pop
jmp
inc
in
lea
push
fwait
and
push
mov
or
push
in
mov
or
test
(bad)
pop
fist
push
repnz
pop
popf
pop
mov
pop
push
xor
push
jae
mov
std
out
in
adc
xchg
xchg
rcr
adc
or
stc
mov
sti
je
jge
addr16
mov
add
and
and
ret
imul
sub
aas
jp
mov
mov
cmp
pusha
nop
lock
das
add
inc
sbb
jbe
movs
sar
(bad)
adc
mov
xacquire
rcl
and
sub
dec
repz
mov
enter
add
ret
loop
xor
add
pop
cmp
lock
jge
and
jl
sbb
stc
dec
adc
add
push
and
inc
imul
push
xchg
stos
push
std
jl
add
outs
jns
sub
pop
ss
sbb
pusha
mov
cmps
std
xor
inc
in
movs
pop
cmps
ss
sbb
jmp
icebp
mov
int3
jl
sub
stc
sbb
int3
stc
in
loope
or
aam
or
mov
test
mov
lds
mov
dec
leave
rcr
dec
inc
jg
xchg
sar
int
cmp
stc
(bad)
(bad)
bound
in
rcl
outs
loop
jo
std
mov
ret
aas
ins
rcl
xor
dec
inc
mov
ss
jg
cmps
jnp
xchg
std
push
mov
in
pop
jns
pop
mov
(bad)
std
(bad)
inc
stc
jle
stc
sub
in
jno
mov
add
pop
nop
int3
leave
clc
or
int3
in
inc
inc
in
jg
stc
pushf
mov
adc
pop
sub
fistp
push
pop
push
fmul
or
push
ror
cwd
fadd
jmp
xor
jo
sti
jo
cmovp
lds
icebp
das
test
or
and
mov
sub
inc
mov
fcomp
adc
pop
js
fisttp
mov
xchg
or
jbe
fnstenv
jge
ret
adc
mov
(bad)
mov
je
mov
xchg
shl
inc
fsub
inc
clc
and
jae
movs
dec
xchg
icebp
adc
and
pop
sub
pop
les
jge
adc
mov
stc
pop
sub
jbe
pop
setbe
sub
pop
mov
sub
mov
loopne
aaa
jl
add
push
or
movs
push
leave
mov
or
inc
nop
mov
dec
ror
and
mov
daa
adc
pop
pop
push
and
sub
and
mov
shr
or
lods
loopne
inc
dec
mov
xor
mov
ins
bnd
aas
push
dec
clc
mov
add
mov
dec
mov
loopne
rol
or
lahf
popa
push
cmp
and
stc
dec
jle
sub
loop
and
(bad)
fbstp
jmp
(bad)
cmp
out
not
in
sub
pop
xchg
jle
add
stc
add
add
std
lock
dec
push
dec
ret
ret
jp
(bad)
sbb
jl
retf
daa
aas
push
out
rcl
out
ins
(bad)
int
jno
sbb
sbb
xlat
push
cmp
jae
ret
outs
cmps
push
data16
mov
test
mov
pop
fwait
add
fptan
arpl
push
or
pop
stc
lea
mov
add
loope
mov
lock
or
retf
das
inc
mov
xchg
jne
cmp
xor
inc
out
stos
sbb
adc
pop
addr16
sub
icebp
(bad)
mov
out
ja
iret
mov
pusha
adc
inc
and
mov
cli
and
push
or
scas
xor
ss
mov
addr16
fiadd
pop
adc
push
jae
mov
fild
pop
cwde
outs
jno
fwait
fwait
cmc
mov
xchg
aas
int3
cmps
inc
loope
js
xchg
scas
arpl
in
add
xchg
adc
xor
cmp
mov
aaa
lods
sub
test
iret
test
pop
dec
fisttp
push
mov
repz
popf
je
mov
xor
or
ins
test
(bad)
add
cmp
mov
leave
test
inc
cwde
cmc
cmc
jmp
mov
xchg
out
mov
mov
pop
cmp
or
add
ret
jp
popa
and
loope
and
push
loope
aam
push
ja
mov
push
inc
mov
fwait
in
call
jmp
mov
int3
and
jb
xchg
cli
xchg
test
rcr
or
rcl
repz
loopne
xchg
pop
add
ret
pop
ins
gs
cmp
jmp
or
cmp
fisttp
sbb
cwde
aad
mov
enter
jnp
dec
fiadd
cld
adc
cmp
adc
xor
mov
aaa
in
fs
or
imul
mov
shl
aas
(bad)
push
sub
iret
stos
add
inc
in
add
push
movs
scas
add
sub
rcl
sub
xor
cld
mov
add
jle
fisub
jns
or
call
pop
adc
loop
inc
adc
cs
cmp
fidivr
push
fld
dec
xlat
push
jp
sub
push
cdq
push
pop
aad
(bad)
fldcw
loope
push
xchg
cdq
fistp
inc
loope
call
ds
(bad)
pop
push
cmp
pop
das
jbe
fidivr
mov
sub
ins
adc
dec
or
mov
hlt
movs
push
test
mov
push
stos
fs
pop
pusha
or
pop
inc
daa
push
mov
adc
loopne
mov
ret
fs
add
sub
mov
clc
fisttp
mov
inc
inc
idiv
ret
jmp
and
sub
xor
test
add
jge
dec
pop
sbb
cwde
xchg
cmp
dec
adc
cmps
adc
jmp
add
in
inc
(bad)
or
push
adc
retf
pop
mov
test
add
dec
scas
test
jg
add
dec
add
iret
jge
pop
mov
std
push
outs
test
jnp
push
add
add
xchg
lock
icebp
test
lds
rcl
cs
pop
idiv
add
mov
sbb
add
pop
cmp
adc
pop
mov
mov
sbb
adc
xor
pop
mov
sbb
jno
mov
push
push
jbe
or
jns
dec
and
shr
xor
icebp
cmp
lock
out
sbb
push
and
mov
in
mov
hlt
mov
pop
add
loopne
jg
(bad)
cmp
push
adc
push
sub
mov
loop
int3
push
or
sbb
sub
mov
mov
mov
adc
push
adc
or
arpl
cmps
jle
cmp
fwait
or
mov
xchg
or
inc
jg
dec
jb
adc
inc
push
or
mov
and
adc
add
pop
cmp
pop
jecxz
jle
ret
xchg
loop
enter
nop
cmps
dec
fwait
sub
cmps
xchg
add
dec
and
sub
pop
pop
mov
or
push
das
repz
push
test
repnz
mov
xbegin
mov
sub
icebp
sub
mov
repz
das
cmps
jmp
push
cmp
pop
jmp
mov
sub
push
or
xchg
sbb
inc
pop
inc
push
nop
pop
xchg
push
xor
into
xchg
bound
aas
test
add
mov
mov
mov
popa
or
push
shl
mov
inc
test
inc
push
loope
sbb
cmp
popf
jmp
repz
mov
and
in
mov
dec
xlat
inc
mov
adc
or
mov
mov
dec
loop
es
cmp
jge
jl
sti
dec
adc
cli
add
mov
mov
fsubr
aaa
ja
pushf
mov
aaa
sbb
test
scas
popa
xchg
ret
mov
fcomp
repnz
mov
sbb
repz
xchg
bound
and
cmps
xor
sbb
and
sbb
jg
jbe
shl
jno
pop
cmp
sbb
mov
jg
rol
out
popa
icebp
xchg
sub
sub
scas
mov
jae
or
mov
cmp
dec
and
mov
bound
lahf
add
gs
sbb
inc
push
bound
cld
cmc
adc
call
aad
push
sub
sbb
mov
cli
sbb
scas
add
jecxz
sbb
dec
sbb
stos
test
inc
add
add
push
ds
sbb
cmp
sub
(bad)
rcr
add
cmp
jmp
dec
adc
lock
and
addps
or
in
inc
xor
mov
jle
jno
inc
pop
jge
and
dec
out
mov
nop
cld
push
xor
xor
fisub
add
pop
push
icebp
mov
enter
or
jne
inc
sub
mov
mov
push
jnp
push
pop
xchg
push
push
mov
cmp
sti
push
push
icebp
jbe
idiv
jae
push
jb
push
cmps
or
es
dec
mov
es
mov
test
cli
dec
and
adc
sbb
inc
mov
mov
dec
jne
dec
test
out
pop
dec
nop
cmp
xor
push
xchg
mov
xchg
adc
lea
xor
test
dec
outs
aad
je
mov
dec
pop
lods
into
cmp
fistp
cmp
scas
dec
sbb
fcmovne
std
push
push
push
loopne
jae
test
add
jle
test
retf
xor
aam
inc
sbb
data16
imul
pop
or
retf
(bad)
imul
or
fild
or
add
push
mov
mov
enter
or
mov
rol
xor
test
das
test
dec
jle
das
outs
jl
mov
cmp
icebp
lods
or
push
or
mov
rcr
je
outs
ins
pusha
mov
(bad)
test
movs
ds
test
sbb
rol
mov
stc
ds
rol
mov
es
or
jecxz
das
dec
cmp
xchg
xchg
ja
xchg
push
pop
aas
iret
inc
inc
call
dec
add
inc
push
dec
inc
sbb
or
adc
mov
and
adc
jg
mov
les
loopne
sbb
cwde
iret
adc
cmps
addr16
mov
xchg
pop
lahf
or
sbb
dec
sub
or
out
jae
jle
dec
add
and
ret
inc
xchg
arpl
mov
push
sti
movs
iret
xchg
sub
mov
mul
aad
inc
in
out
inc
scas
jb
mov
xchg
(bad)
mov
fbld
and
xlat
jne
add
ror
xchg
sahf
mov
cmp
mov
inc
or
out
or
sbb
xchg
mov
adc
add
xor
mov
je
fldenv
les
mov
mov
jne
and
shl
adc
in
data16
shl
xchg
add
fstp
add
dec
not
mov
jle
add
or
adc
ror
and
add
add
and
or
mov
inc
jo
mov
mov
inc
fwait
out
sbb
adc
ret
nop
push
call
sbb
mov
xor
xchg
xor
and
pusha
inc
cmp
ja
(bad)
in
and
adc
call
je
retf
fidiv
out
cmps
jns
adc
loop
mov
sbb
inc
fisttp
or
inc
leave
outs
mov
jne
mov
pop
lahf
mov
in
mov
xchg
rcr
ret
jnp
pop
imul
adc
inc
mov
rcl
iret
pop
and
pop
(bad)
arpl
inc
mov
or
fcom
sub
mov
mov
pop
ins
sbb
jae
inc
cmp
jns
adc
jnp
or
das
push
xor
dec
enter
loope
pop
adc
repnz
mov
pop
mov
mov
stos
ret
std
inc
jge
inc
inc
je
in
push
xor
jno
or
jno
mov
retf
or
cs
dec
call
cmps
sbb
add
call
jo
nop
lods
mov
mov
cli
sar
mov
int3
adc
call
add
mov
test
loope
push
nop
or
adc
aaa
out
sub
xchg
and
sub
xchg
adc
or
lds
jbe
sti
push
cmc
call
inc
mov
mov
inc
or
lods
inc
sar
jne
dec
not
sti
push
(bad)
leave
mov
add
in
sbb
cmp
clc
neg
jbe
mov
sbb
sbb
movs
mov
push
test
mov
jle
inc
stos
push
sub
xor
xor
jl
mov
sbb
out
add
adc
scas
dec
push
jecxz
or
pop
dec
mov
cdq
xchg
rcr
lods
jb
es
sbb
arpl
xchg
ret
cdq
or
push
mov
mov
fwait
mov
sbb
ins
scas
test
clc
fwait
leave
mov
mov
sbb
mov
sbb
ror
add
jle
enter
dec
jno
je
push
pop
cmp
and
inc
mov
xchg
fwait
cmps
jp
and
jns
push
sbb
fwait
cmps
pop
movlps
add
inc
pop
jecxz
aam
mov
imul
imul
inc
mov
cmp
push
sbb
sub
sbb
cli
push
jg
sub
push
fs
(bad)
add
pop
and
lea
and
sbb
add
(bad)
dec
cmp
popa
push
xchg
and
jbe
or
xor
mov
xchg
jg
aaa
add
cmp
js
fs
adc
dec
add
mov
pop
push
shl
jp
add
xor
and
aam
and
je
stos
pop
loop
out
pop
mov
cmp
pop
or
jmp
inc
add
dec
in
adc
jmp
dec
sbb
call
ins
shl
test
pop
push
ret
mov
stos
push
sub
icebp
out
push
push
push
dec
cmp
out
dec
sub
fisttp
mov
and
push
movs
not
das
gs
mov
ret
xlat
fdiv
dec
lahf
pop
inc
or
jo
mov
cs
push
mov
push
add
or
pop
xchg
adc
cmp
enter
gs
rol
xor
ins
adc
jbe
(bad)
cdq
popa
mov
ds
or
mov
test
dec
xchg
pusha
sub
mov
adc
lea
pop
cmp
add
push
sbb
mov
call
daa
cmp
push
shl
mov
dec
dec
xor
jecxz
cmp
mov
push
push
les
and
or
ret
jl
scas
push
adc
mov
pop
jne
test
pop
push
aaa
cmp
push
mov
pop
inc
sub
cdq
cmp
cmp
xor
mov
add
stos
int
sbb
dec
js
bound
and
xor
mov
adc
push
pop
jns
xchg
test
pop
adc
sbb
test
jmp
xchg
ins
mov
cmp
inc
iret
sub
in
adc
addr16
cs
xor
xchg
dec
ret
neg
sub
mov
sbb
retf
cwde
in
fs
push
icebp
or
clc
fldenv
fwait
popf
or
test
cmp
ins
iret
leave
mov
gs
dec
test
or
std
sub
jge
push
add
sub
pop
or
cmp
ins
ins
xor
ret
push
mov
adc
pop
lahf
jno
mov
xor
sub
fs
daa
call
mov
stos
shr
jg
popa
popa
inc
mov
inc
fs
push
movs
lahf
dec
popf
cmp
mov
ins
push
push
mov
dec
xlat
(bad)
pop
sbb
mov
ret
xor
dec
pop
out
add
sub
xor
xor
mov
jb
cmp
imul
cmps
cmp
fcom
aad
mov
sbb
mov
gs
sbb
nop
xor
and
and
in
mov
sbb
shl
dec
push
icebp
jne
mov
pop
cs
into
into
in
or
xchg
jno
add
leave
pusha
bound
dec
inc
dec
xchg
(bad)
adc
sar
dec
lods
add
sbb
fiadd
adc
enter
adc
scas
mov
add
les
nop
dec
aam
sbb
test
push
adc
aas
hlt
add
ret
dec
loopne
push
xlat
push
adc
cwde
fld
fimul
adc
xor
push
sbb
cmp
fdivr
pop
dec
lahf
mov
lods
inc
and
cmp
jbe
jne
mov
frstor
sbb
test
inc
adc
pop
push
jno
add
push
adc
or
test
mov
sub
in
push
fsub
(bad)
pop
movs
or
cmp
inc
cmp
std
xor
sbb
adc
dec
mov
pop
mov
xor
dec
xchg
jle
and
mov
push
pop
jnp
inc
or
scas
shl
dec
mov
test
cmc
add
cli
xchg
adc
xor
push
shl
xchg
cmps
xor
mov
icebp
xor
les
imul
sbb
call
jns
das
pop
fisttp
add
push
or
xor
add
adc
loop
xchg
adc
mov
out
out
mov
sub
rcr
push
mov
(bad)
ds
push
sub
fstp
js
add
sub
test
fcom
addr16
in
inc
sbb
cmp
jb
cmp
xor
xchg
jg
repz
xchg
sbb
lea
jno
ret
push
adc
cs
mov
and
mov
add
sbb
inc
pop
daa
jmp
sbb
mov
out
or
shl
xor
leave
mov
xor
clc
outs
jne
(bad)
aam
daa
jno
popf
and
lods
and
adc
sbb
dec
xor
es
dec
dec
jne
es
or
or
pop
jmp
inc
push
out
dec
add
xchg
xchg
inc
jns
xchg
and
inc
mov
ss
adc
and
push
adc
xlat
xchg
cmp
cwde
adc
hlt
in
leave
cdq
and
neg
pop
outs
jns
and
jmp
jne
in
stos
mov
dec
mov
mov
in
xchg
sbb
and
mov
retf
add
scas
test
mov
cmps
jecxz
test
pop
add
fldenv
push
sub
push
add
jnp
jne
fidiv
sub
sbb
cmp
dec
add
xor
and
sub
xor
sub
jecxz
pop
test
adc
mov
inc
in
push
push
fisub
mov
mov
fs
adc
xor
xor
fbld
cld
xchg
dec
clc
adc
add
xor
in
jge
jmp
xchg
sti
gs
sub
sbb
in
nop
mov
repz
sbb
cld
mov
sub
sub
daa
xchg
inc
dec
fisttp
fisttp
mov
and
loopne
jg
mov
and
xchg
fs
inc
bound
repnz
mov
cmps
(bad)
adc
rcr
fcomip
push
mov
mov
and
jns
dec
xchg
ror
mov
or
sar
push
jmp
cld
bound
or
push
jbe
aad
inc
jo
in
cmp
mov
add
push
(bad)
dec
aaa
xchg
add
fwait
or
pop
mov
and
sub
imul
dec
inc
pop
js
xchg
mov
or
or
out
mov
or
sbb
pop
or
test
sar
sub
sub
mov
mov
adc
call
pop
ja
add
add
sbb
dec
in
push
mov
mov
pop
or
or
(bad)
mov
push
loope
outs
adc
sbb
or
add
or
mov
mov
pop
inc
mov
inc
mov
sbb
ror
sbb
call
or
sub
shl
jmp
xchg
loope
ins
or
sub
fs
ja
mov
inc
mov
sbb
dec
adc
add
sbb
or
or
dec
push
aam
xchg
rol
and
mov
adc
pop
sbb
adc
jbe
pop
lds
xor
xor
popa
and
hlt
jp
sti
cmp
ja
mov
inc
add
sbb
stc
cmp
mov
leave
jge
es
cwde
mov
por
sbb
les
js
pop
inc
jno
jae
push
sahf
sahf
mov
fst
inc
push
add
ret
cmc
jb
rcr
pop
xor
inc
ins
push
cmc
add
pop
ss
(bad)
cmc
pop
or
adc
mov
sub
xchg
mov
mov
or
pop
das
push
sbb
hlt
push
adc
mov
add
aaa
and
jno
sub
sub
cmp
mov
push
add
inc
call
dec
sbb
dec
xlat
xchg
clc
jnp
mov
dec
fisttp
aaa
sub
jl
dec
xchg
fcomp
ja
aad
aaa
adc
sub
addr16
adc
add
lds
in
dec
ret
bound
pop
inc
inc
push
fnstsw
in
bound
vpmaddwd
inc
std
fisttp
push
adc
or
jl
in
fst
add
pushf
inc
icebp
test
pop
outs
dec
inc
xchg
cmp
ror
mov
mov
add
inc
sbb
rol
aam
pushf
inc
sub
jmp
push
mov
test
pop
cwde
js
pop
in
jnp
sbb
addr16
inc
add
clc
fiadd
nop
js
mov
mov
or
ret
jae
jp
cs
dec
add
sub
mov
bound
cmps
mov
(bad)
stos
mov
enter
inc
rcr
jp
or
cdq
xchg
sub
leave
cmp
sbb
popa
jge
jns
jne
test
push
gs
push
add
add
mov
sub
xchg
and
sbb
add
imul
dec
loop
clc
jmp
or
daa
mov
push
xor
ret
and
mov
inc
and
adc
jge
loop
cmp
cmp
int
sti
int3
jbe
lea
pop
cmp
(bad)
loop
sbb
movs
inc
sub
adc
retf
idiv
adc
pop
icebp
lods
push
pop
out
sar
add
imul
sar
sub
adc
adc
les
xor
in
dec
and
addr16
mov
cli
sub
dec
cmp
add
adc
xor
cdq
add
adc
les
and
daa
xor
sbb
test
or
dec
push
addr16
jb
icebp
inc
bound
(bad)
push
xchg
scas
mov
ret
push
addr16
addr16
aam
out
or
and
xor
popa
jno
and
mov
mov
rcl
mov
call
popa
mov
adc
pop
xor
mov
lock
inc
adc
inc
(bad)
(bad)
leave
mov
sbb
popa
shl
fucomip
mov
adc
data16
call
stc
icebp
adc
xchg
clc
lds
rcl
push
pop
pop
fst
std
and
mov
mov
adc
and
in
gs
fbstp
push
mov
in
jno
loope
in
pop
hlt
mov
leave
and
loope
mov
ss
shl
daa
or
mov
(bad)
repz
xor
dec
dec
and
int
sbb
leave
cmps
mov
push
sub
test
in
in
dec
mov
std
sbb
adc
fisttp
inc
pushf
inc
or
sar
shl
pop
inc
adc
jmp
mov
push
push
(bad)
data16
popa
prefetch
or
nop
pop
outs
or
pop
push
add
cmp
mov
mov
or
adc
mov
sub
adc
fs
hlt
mov
or
rcr
and
sbb
mov
xchg
dec
(bad)
shl
and
lods
and
add
fdiv
or
dec
or
ds
and
adc
popw
leave
je
push
cmp
add
mov
push
push
mov
add
sub
and
or
dec
inc
add
add
push
push
mov
hlt
add
in
sbb
add
mov
shl
test
push
aaa
mov
adc
mov
bound
pop
push
retf
test
or
cmps
dec
dec
dec
dec
dec
bound
cmp
adc
push
inc
xor
repz
popa
mov
loope
shr
dec
jbe
pop
ja
outs
dec
icebp
sbb
sbb
sbb
fwait
cwde
sub
inc
clc
and
popa
mov
inc
dec
ror
jge
movs
and
add
sub
popf
xlat
rol
in
mov
jle
sub
push
imul
or
sbb
mov
sub
in
sbb
shr
mov
shl
loope
jp
shl
ficomp
mov
mov
stc
bound
sub
loope
xor
cld
push
icebp
loope
jle
repz
cmp
sub
push
test
push
hlt
jg
ret
sub
or
dec
push
das
cmps
js
adc
es
lock
push
(bad)
inc
iret
add
mov
add
dec
loope
cmps
jle
mov
sub
or
idiv
mov
mov
cvttps2pi
sar
jmp
fisub
scas
pop
bswap
mov
jnp
pop
cmps
pop
sub
cld
add
xor
add
push
and
stos
dec
lods
fadd
lds
mov
dec
ffreep
or
or
and
xchg
fadd
adc
or
mov
lea
and
int3
repz
leave
or
or
add
into
(bad)
mov
push
pop
or
and
cs
fcmovb
fist
and
mov
sbb
inc
mov
ins
fstp
sub
pop
dec
cmp
fimul
xor
add
or
out
je
xchg
in
(bad)
scas
dec
sbb
sub
mov
lock
or
fild
add
sbb
push
sub
cs
pop
adc
sub
add
jno
mov
sbb
ja
xchg
call
popf
sub
jne
data16
lds
lds
mov
outs
and
inc
out
bound
xor
(bad)
in
mov
or
call
popa
and
(bad)
aam
push
data16
adc
repz
xchg
xchg
xchg
xchg
mov
and
fld
xor
stos
iret
iret
ja
xor
into
fisub
sub
scas
xchg
jne
pop
sbb
test
call
retf
fisttp
bound
sub
or
cmc
push
xor
repz
lods
sub
xor
adc
mov
mov
rcl
jp
inc
les
mov
retf
push
sub
and
dec
test
sub
popa
shl
icebp
sub
std
or
fsub
push
jno
push
mov
push
sub
test
mov
popa
bnd
iret
dec
jae
jae
lods
fbstp
ins
ja
sbb
cmp
call
out
sub
or
fcom
aas
adc
push
mov
cmps
add
or
std
stc
mov
mov
jae
fs
jmp
adc
mul
(bad)
scas
popf
jle
clc
fistp
ficom
or
inc
loope
hlt
aam
(bad)
mov
les
or
sbb
add
stc
add
popa
ret
ds
stos
sub
add
(bad)
xchg
mov
pop
sub
sub
dec
(bad)
rcl
and
imul
inc
and
cmp
or
mov
or
mov
sub
sub
inc
call
or
int3
fild
or
clc
push
push
add
into
or
or
or
push
rcl
dec
(bad)
adc
ret
int
mov
adc
push
add
lea
push
pop
pop
fst
mov
cmps
scas
inc
mov
shl
mov
jmp
pop
adc
adc
ret
js
in
mov
cmp
xchg
ret
cs
mov
out
shr
xor
inc
or
push
push
stos
fs
sbb
and
(bad)
jecxz
sbb
and
adc
mov
ds
or
in
jp
icebp
rol
sub
inc
adc
cmps
and
mov
sub
test
in
mov
sbb
jae
fimul
push
xlat
xchg
adc
rcl
out
xchg
mov
inc
push
or
add
icebp
cmps
(bad)
sub
xor
add
das
xchg
mov
push
and
xor
sub
sbb
outs
shr
cmp
cmp
inc
dec
mov
sub
into
pop
aad
lahf
sub
or
jecxz
mov
jne
outs
adc
(bad)
clc
fild
sub
outs
pop
test
and
pop
icebp
inc
inc
dec
jbe
pushf
push
xchg
lea
push
mov
shl
push
popa
sbb
adc
fisttp
inc
lock
cdq
fnsetpm(287
rol
xchg
ret
test
lods
push
jbe
jnp
adc
rol
cmp
pop
cmp
cmc
out
mov
stos
or
icebp
ret
in
pop
sbb
sub
pop
in
into
retf
fidiv
call
clc
call
scas
and
mov
or
jno
mov
retf
and
adc
les
xchg
shl
sub
jle
dec
pop
add
test
add
xchg
out
jbe
or
test
push
loope
pop
mov
push
add
retf
mov
mov
mov
or
sbb
int3
int3
xor
mov
cld
clc
fsubr
mov
call
aas
and
fcomp
pop
fcom
lea
iret
add
clc
cmc
add
out
retf
push
clc
fcmove
int3
push
ror
int3
jnp
test
sub
pusha
jno
pop
int
das
(bad)
fidiv
ret
push
pop
xor
mov
sbb
add
mov
cmp
adc
push
popf
inc
(bad)
dec
add
int3
xchg
add
cmp
cdq
mov
aam
or
add
mov
or
in
mov
lods
stc
mov
sub
add
jp
ss
pop
pop
xor
push
pop
pop
mov
mov
pop
ret
arpl
xlat
dec
push
or
sahf
das
push
push
pop
xchg
je
call
hlt
out
jmp
mov
loop
cmp
pusha
popa
es
xor
add
adc
jge
mov
cmps
pop
lock
lea
rcr
adc
push
push
pop
sub
pop
and
in
jnp
mov
je
sbb
mov
ret
lock
pop
or
cmp
inc
js
adc
jbe
out
adc
(bad)
(bad)
push
pop
hlt
mov
cmp
push
mov
or
in
jne
shr
pop
test
jge
jno
lods
sub
or
js
push
or
or
sbb
test
cmp
add
add
pop
sbb
mov
(bad)
bound
adc
mul
xchg
xor
pop
mov
pop
mov
popf
xchg
xor
dec
cmp
xchg
dec
nop
or
push
inc
inc
popa
loope
xor
mov
and
mov
lds
add
sbb
adc
push
push
lea
inc
test
dec
sahf
add
pop
gs
adc
adc
inc
cmp
fld
jns
cmp
fucom
adc
pop
inc
ins
les
mov
out
jo
xchg
ja
push
adc
inc
jp
push
push
arpl
pop
push
int
add
or
repz
push
inc
mov
ins
inc
sbb
or
mov
add
or
mov
adc
fs
mov
and
jmp
popf
add
sbb
xchg
(bad)
repz
pop
or
ins
xor
and
and
jmp
add
inc
fcmovb
and
add
sbb
xchg
adc
pop
mov
mov
mov
sti
push
mov
mov
sti
shl
fiadd
jbe
pop
add
lds
mov
adc
push
mov
adc
adc
push
rcr
mov
jae
into
push
icebp
mov
shl
adc
sbb
pop
or
mov
jmp
leave
(bad)
mov
outs
jbe
xchg
fidivr
mov
pslld
cmp
cmp
pop
push
mov
ror
add
pop
mov
and
or
imul
inc
(bad)
in
loope
jge
or
sub
adc
mov
mov
or
inc
(bad)
dec
adc
adc
cmp
out
push
ss
xchg
xor
dec
dec
inc
adc
rol
ficom
or
pop
stc
pop
jne
inc
adc
adc
inc
lock
cwde
dec
mov
aaa
xor
add
fist
sbb
hlt
fisub
nop
xchg
xchg
dec
adc
xchg
nop
test
out
add
adc
mov
add
push
ret
add
pop
cs
mov
lods
ins
retf
push
popf
xchg
mov
dec
or
push
or
or
imul
mov
(bad)
xlat
xor
imul
cli
sub
jnp
mov
dec
pop
adc
xor
cmp
lds
aam
ss
pop
adc
inc
inc
test
push
fld
xchg
pop
adc
mov
test
push
pop
mov
mov
inc
xor
pushf
ja
sbb
jge
popf
lidtd
jp
xchg
dec
adc
out
cmp
dec
push
adc
aas
xchg
or
rcl
mov
test
xchg
jno
ror
fucom
adc
pop
adc
ja
mov
pusha
enter
leave
or
pop
adc
mov
loop
mov
push
ret
or
add
addr16
dec
pop
mov
sbb
test
push
ficom
mov
sbb
and
xchg
lahf
hlt
push
in
mov
or
jne
pop
push
dec
pop
in
sbb
cmp
jno
jmp
shr
xor
or
pop
mov
xchg
fisub
dec
aad
sbb
sbb
pusha
and
mov
or
inc
push
adc
leave
push
adc
sbb
push
jle
and
mov
mov
call
rol
cmps
jmp
dec
add
or
adc
call
mov
hlt
xor
inc
sbb
mov
xchg
lea
adc
out
mov
arpl
and
add
push
dec
dec
cmp
push
stos
cdq
addr16
aam
or
int
ins
and
mov
inc
inc
stos
inc
sub
or
push
sbb
repnz
enter
cmp
dec
pop
xor
adc
fst
xchg
in
ds
dec
mov
(bad)
mov
inc
cmp
leave
inc
repnz
mov
(bad)
sub
xor
cmp
jno
popa
push
pop
ja
fstp
ret
push
mov
mov
int3
fucomip
bound
mulps
or
(bad)
bnd
inc
icebp
or
dec
dec
cs
loop
jge
jge
add
or
or
push
mov
inc
repnz
icebp
mov
out
add
jp
mov
xrelease
sub
sbb
loop
pop
cwde
fst
sbb
or
or
pusha
stc
sbb
xor
sbb
sbb
dec
enter
mov
(bad)
int
push
mov
sub
pop
ret
or
sbb
movs
icebp
push
enter
test
xchg
psubusw
xor
(bad)
jmp
mov
mov
std
lods
xchg
adc
in
adc
test
adc
sub
jo
jge
(bad)
lock
cmp
sbb
sbb
xor
adc
adc
sub
inc
outs
test
lahf
push
add
ret
or
mov
daa
sub
leave
and
adc
or
jns
jle
mov
sub
xchg
fsubr
gs
cs
out
ret
cmp
push
add
pop
adc
push
std
in
(bad)
jmp
or
int3
fild
ins
or
jl
stc
add
add
inc
and
out
add
rcr
mov
pop
or
shld
in
jns
icebp
and
inc
sub
int
adc
addr16
xor
adc
cmp
mov
in
xchg
mov
push
leave
dec
sbb
mov
(bad)
mov
fmul
(bad)
ficom
loope
pop
cwde
or
add
arpl
xor
repnz
rol
cmps
push
sbb
mov
les
pop
adc
cmp
(bad)
mov
xchg
sahf
(bad)
jno
(bad)
test
mov
in
ds
add
xchg
cdq
and
cld
xchg
(bad)
fadd
push
pop
mov
xchg
fld
sub
inc
push
loop
sbb
sub
sbb
cmp
stc
sub
imul
xchg
retf
ret
sub
adc
dec
add
push
push
pop
fwait
cmps
jbe
or
pop
or
fwait
cmps
or
aam
(bad)
ror
push
push
hlt
jge
test
push
push
pop
inc
adc
dec
mov
adc
test
push
jae
and
cmps
enter
jmp
movs
push
stos
adc
or
xor
inc
mov
add
inc
adc
in
jne
mov
addr16
mov
add
push
push
lock
or
(bad)
aam
mov
push
ins
es
push
or
inc
dec
daa
or
xchg
out
repz
and
movs
leave
xchg
xchg
add
(bad)
ret
(bad)
mov
(bad)
icebp
push
and
xor
add
test
lea
add
mov
inc
dec
cmp
cmp
sbb
das
outs
stos
inc
pop
(bad)
jno
jl
leave
mov
xchg
mov
call
dec
mov
pop
push
cmp
test
adc
aam
aaa
pop
stc
adc
sbb
out
lods
arpl
ins
pop
pop
test
mov
xor
push
sub
jae
xchg
sub
cli
mov
adc
enter
inc
pop
dec
xlat
inc
scas
test
adc
mov
imul
adc
mov
mov
sbb
pushf
mov
or
imul
ret
mov
inc
adc
adc
repz
sti
into
outs
jle
adc
inc
or
inc
mov
inc
dec
dec
push
inc
add
dec
pop
and
mov
adc
in
test
xor
int
sub
adc
or
mov
xor
sti
ins
les
and
add
mov
(bad)
pushf
fild
rcr
mov
mov
xchg
fucomp
fcom
jl
xor
inc
das
and
lock
xor
fisttp
inc
fdivr
fucomp
gs
push
fst
dec
pop
(bad)
pushf
adc
pop
jmp
adc
sbb
leave
and
lea
push
cmps
and
mov
jbe
test
in
xor
inc
movs
push
aaa
mov
inc
xor
xchg
inc
xchg
and
test
and
das
fdivr
mov
mov
sub
ss
push
call
xor
jecxz
lea
add
pop
leave
mov
cmps
dec
enter
jle
sub
call
mov
pop
sar
dec
ret
dec
mov
xor
sub
enter
pop
retf
inc
inc
jmp
in
lock
dec
dec
pop
add
int
stos
leave
cmp
jbe
mov
inc
push
ins
add
and
fld
mov
out
jle
dec
push
pop
ss
adc
push
pop
or
les
adc
xchg
mov
in
jge
int
jbe
mov
cmp
aad
fwait
clc
loope
and
inc
jge
fdivr
dec
std
pop
add
mov
outs
push
(bad)
xor
push
add
mov
xchg
fnsave
and
jbe
sub
int
jae
inc
push
xchg
sbb
fiadd
sbb
movs
xor
and
jnp
pop
fbstp
push
sbb
mov
movs
scas
popa
mov
adc
dec
mov
sub
mov
dec
xor
aad
sbb
xchg
xor
push
mov
push
jmp
xchg
cmp
clc
popa
mov
out
pop
jge
inc
adc
fimul
add
mov
inc
add
adc
mov
add
out
or
int3
dec
inc
dec
mov
fbld
iret
jns
sub
xchg
and
jb
jbe
ret
sub
pusha
mov
mov
push
mov
adc
jne
retf
repnz
inc
mov
jb
push
ins
mov
inc
and
pop
fisub
int
pop
push
cmps
jb
adc
push
ja
cmp
loop
pop
xchg
jns
and
pop
movs
push
repz
stos
sub
or
xor
mov
cmps
pop
lds
pop
mov
xor
add
sbb
xchg
add
jno
adc
or
clc
imul
je
xor
daa
call
jno
and
cmps
add
sbb
cmps
idiv
inc
js
adc
mov
test
fwait
adc
adc
pop
test
adc
inc
mov
inc
mov
jbe
test
xchg
cmp
mov
jo
daa
outs
iret
lahf
loope
push
adc
jno
(bad)
xlat
scas
add
add
xchg
inc
scas
cmp
dec
lds
push
inc
pop
pushf
fist
or
fs
inc
adc
xor
outs
imul
js
sti
or
std
sbb
loope
out
dec
inc
test
inc
jge
(bad)
mov
cmp
jbe
aad
adc
les
pop
out
add
repz
mov
gs
ins
jle
xor
mov
leave
in
or
adc
enter
sub
(bad)
rcr
dec
add
ret
mov
add
mov
inc
pusha
(bad)
sar
push
adc
ret
adc
push
jnp
(bad)
loope
sti
dec
(bad)
mov
outs
adc
inc
stos
mov
ret
cmp
imul
mov
shl
imul
mov
cmp
jmp
and
outs
push
in
sbb
dec
fmul
mov
aam
or
dec
icebp
jbe
call
jno
adc
pop
inc
movs
add
adc
mov
adc
das
lods
imul
(bad)
mov
pop
ret
jns
and
fild
mov
daa
loop
add
int
into
jae
in
push
call
leave
push
imul
mov
jmp
in
hlt
ud0
or
les
xor
add
push
adc
mov
inc
call
sbb
push
sbb
or
bound
pop
call
dec
or
add
test
jge
or
sub
xlat
gs
mov
inc
dec
leave
sub
test
popa
sub
push
or
cmc
fsubr
adc
daa
cwde
add
je
jge
test
clc
jno
mov
dec
cmp
cmps
es
xchg
inc
sbb
es
retf
dec
lahf
and
mov
sbb
adc
pop
and
bound
adc
inc
dec
les
push
dec
dec
es
sbb
push
movs
pop
dec
test
dec
arpl
xor
jb
mov
scas
popa
std
and
adc
rcr
jnp
movs
xor
adc
or
sbb
in
sub
cmp
(bad)
ror
ror
sbb
xchg
jecxz
mov
ret
fild
add
sbb
inc
jge
inc
xor
and
dec
cmp
push
jg
push
pop
and
push
fs
sub
jle
sbb
(bad)
ja
outs
adc
sub
mov
or
pop
add
mov
jno
shl
push
fld
in
or
rol
cmp
sbb
fsub
push
test
aad
clc
sub
pop
pop
adc
inc
adc
das
sbb
cmp
jno
div
imul
xchg
lds
mov
jmp
mov
popa
xor
mov
pop
rsm
push
lods
mov
jo
jns
fisub
dec
aas
pop
bound
adc
jle
cmc
ins
lods
dec
aam
inc
add
xor
xor
adc
nop
pop
adc
mov
add
cs
loopne
or
add
popf
pop
inc
cmps
xor
mov
js
sbb
sbb
mov
push
pop
dec
and
push
push
adc
pop
rcr
lods
pop
fisubr
ins
sub
dec
adc
jecxz
cmc
jmp
mov
addr16
ss
dec
and
fs
(bad)
mov
(bad)
cdq
dec
lods
in
jae
call
mov
cmps
popa
xchg
dec
or
sub
or
test
das
(bad)
fsub
cmp
inc
dec
push
frstor
inc
sub
sti
mov
outs
push
mov
pop
ret
sub
dec
repz
mov
das
in
cmps
data16
inc
dec
popa
and
push
or
ret
inc
pop
adc
fadd
sub
xor
xchg
gs
in
ret
push
add
adc
inc
inc
stos
mov
xor
pop
mov
sub
pop
push
mov
xchg
xor
test
dec
rcr
fbld
data16
(bad)
sahf
imul
sbb
dec
sbb
dec
adc
je
pop
add
adc
imul
cmp
adc
and
pop
pusha
mov
(bad)
mov
pop
sbb
cmp
popa
jae
div
shl
jae
cdq
sub
xchg
ret
call
push
loop
dec
jbe
adc
jo
fisub
or
sbb
sbb
das
jle
ror
mov
add
cwde
add
inc
pop
xor
mov
inc
push
adc
aaa
xchg
repz
pop
or
(bad)
push
int
adc
pop
xor
adc
mov
push
in
or
aaa
imul
sbb
mov
inc
iret
xor
pop
xchg
pop
ret
push
sub
add
inc
add
ins
dec
add
lods
rcr
out
aad
test
and
cmovno
pop
fiadd
fst
or
outs
and
dec
lods
push
or
scas
bound
icebp
imul
inc
add
cmp
cmp
jne
(bad)
dec
add
mov
cmp
ja
inc
jmpw
imul
sbb
pop
push
push
cmp
test
dec
arpl
movs
add
jmp
or
push
js
(bad)
ficom
or
(bad)
fidiv
pop
jmp
push
mov
adc
jle
cmp
cmp
sti
(bad)
enter
ret
mov
pushf
cwde
push
mov
push
xchg
mov
mov
push
call
jl
test
adc
aam
lds
adc
dec
call
xchg
dec
add
or
jg
mov
enter
ins
fist
popa
pop
jg
xor
loope
inc
cdq
outs
sbb
or
inc
adc
movs
pop
and
dec
or
dec
test
pop
je
sahf
cmp
ffree
add
pop
or
jb
test
adc
or
inc
add
xchg
or
or
popa
sbb
sub
aaa
retf
cmp
out
or
je
mov
pop
push
or
mov
jmp
or
pop
lahf
sbb
jge
inc
and
mov
jmp
and
out
mov
adc
pop
mov
mov
outs
and
xor
inc
inc
adc
cmp
scas
(bad)
pusha
pop
outs
dec
jmp
and
mov
cmps
inc
jbe
lods
(bad)
jge
push
in
cli
fdiv
add
cmp
jl
xchg
stos
xchg
ds
dec
inc
das
loope
sbb
mov
dec
movs
mov
in
pop
xchg
add
fs
inc
mov
ds
fcomp
rcl
add
stos
out
out
sbb
add
cmovb
add
and
arpl
imul
mov
or
outs
adc
mov
jg
add
pusha
(bad)
cmp
xor
enter
sub
push
add
shl
adc
call
mov
in
fiadd
xchg
sbb
or
add
and
jne
in
nop
inc
mov
push
mov
rcl
xchg
and
mov
mov
(bad)
fild
in
inc
mov
jl
adc
in
pop
cli
jg
add
jle
mov
ficom
push
jne
sub
and
inc
mov
mov
in
ss
sub
ret
pop
mov
and
ret
sti
add
loop
in
outs
aam
mov
scas
pop
mov
repz
cmp
sbb
or
ins
lods
add
ret
and
sbb
cmp
sahf
in
jno
sbb
cwde
mov
add
movs
add
pop
jl
js
cmp
sub
sbb
jo
cdq
rcr
dec
push
or
dec
pop
icebp
cs
std
cmp
cs
fstp
sbb
aam
(bad)
or
push
mov
shl
adc
or
dec
aas
adc
adc
sbb
in
push
sbb
and
or
adc
pop
push
ins
and
outs
add
add
inc
push
inc
mov
sub
in
lea
push
mov
adc
push
fiadd
fiadd
push
jp
out
add
add
add
es
fidiv
jg
dec
inc
xchg
add
push
mov
loop
fimul
loop
sbb
ins
mov
inc
test
dec
jnp
xchg
icebp
sub
div
sub
ret
mov
push
jge
jecxz
rcl
dec
sbb
(bad)
ret
or
jg
inc
loop
lahf
or
jnp
inc
jne
enter
xor
dec
mov
push
jmp
test
or
addr16
aas
xor
in
sub
xchg
(bad)
mov
or
adc
or
jbe
test
dec
xchg
dec
push
dec
imul
in
sar
or
in
mov
into
dec
push
or
push
aaa
mov
xor
sbb
dec
jns
add
push
pop
and
push
cmp
les
or
rcl
outs
test
xor
ret
or
add
adc
enter
add
add
push
pop
or
xor
adc
into
(bad)
xchg
xor
ret
jle
and
and
sbb
adc
dec
xor
dec
sbb
sbb
jg
adc
fst
jbe
xchg
or
push
test
add
or
push
jmp
adc
mov
or
adc
dec
add
loopne
aaa
lds
sbb
sahf
mov
clc
in
cmp
push
push
sbb
movs
cmp
and
sub
mov
add
sbb
aaa
dec
xchg
jecxz
ret
jg
push
daa
test
adc
xor
or
(bad)
push
ret
add
dec
sub
pop
pop
cmp
and
shl
es
and
add
(bad)
out
test
jnp
xchg
inc
jnp
add
shl
rcl
add
mov
inc
cmp
mov
ds
push
(bad)
add
and
sub
fst
and
jo
mov
add
dec
pop
mov
in
or
mov
dec
popfw
or
test
add
cmp
lock
add
ret
add
cmp
add
inc
ret
jge
or
adc
dec
pushf
add
cmp
cmps
in
outs
inc
add
enter
mov
xchg
adc
rol
push
jns
movs
ja
dec
cmp
scas
add
test
mov
xchg
xchg
jge
mov
loopne
jmp
mov
add
hlt
cmps
push
inc
or
push
or
cmp
imul
jmp
je
add
add
push
sub
and
add
lods
xor
sub
loope
inc
or
inc
or
xchg
lea
push
jge
adc
lds
clc
lods
mov
jno
sbb
or
or
jp
mov
lock
adc
test
add
inc
and
not
movs
out
inc
and
xor
movs
adc
and
push
pop
retf
xchg
test
aas
pop
and
sub
call
or
imul
andnps
in
mov
pop
movs
xor
inc
or
arpl
jecxz
mov
cmp
mov
outs
ins
sub
cmp
das
add
sbb
ret
mov
push
xchg
add
or
or
sub
sbb
xor
mov
dec
sbb
xchg
mov
imul
cmp
fld
sbb
lahf
mov
dec
bound
add
jne
in
xor
inc
les
repz
and
inc
sub
mov
jge
jne
push
sbb
mov
nop
mov
mov
in
test
add
and
mov
movs
cmp
jmp
inc
clc
enter
push
loope
cmp
es
rol
sub
add
punpcklbw
pusha
stos
push
pop
(bad)
mov
mov
push
push
mov
xchg
iret
dec
adc
fwait
pusha
mov
push
shr
mov
push
pop
jmp
je
sbb
fcmovb
add
sub
icebp
scas
arpl
xchg
in
push
cwde
sub
mov
mov
push
and
imul
pop
in
cmp
dec
adc
push
pop
loope
shr
add
test
add
pop
adc
loope
or
push
ror
add
pop
and
sbb
rol
cmp
std
lea
mov
xchg
(bad)
jns
dec
inc
sbb
or
inc
int
mov
push
dec
jae
add
arpl
mov
xor
into
mov
and
or
sbb
imul
mov
sub
adc
rcl
add
and
xchg
mov
test
xor
cmp
loop
pop
inc
adc
dec
call
and
pop
add
lar
inc
xor
test
add
fnstenv
mov
not
icebp
cwde
adc
adc
out
sub
cmc
xchg
fst
mov
mov
into
es
cmps
sbb
mov
mov
sub
add
dec
add
xor
outs
cmp
jle
xor
das
add
ins
or
faddp
inc
dec
adc
outs
pop
adc
push
movs
arpl
popa
dec
jo
out
xchg
loopne
data16
push
adc
pop
jbe
add
cli
or
pop
sub
or
call
scas
or
bound
mov
jns
in
sub
or
test
push
pop
jecxz
xchg
popa
adc
in
add
xchg
push
shl
xchg
or
sbb
adc
je
daa
or
leave
call
sub
in
xor
cdq
mov
or
add
cmc
adc
mov
sti
dec
icebp
icebp
icebp
rol
ret
hlt
icebp
mov
(bad)
mov
std
in
fldenv
mov
retf
or
test
push
xor
pop
sbb
mov
repnz
ds
adc
aaa
or
pop
jno
fist
push
sbb
or
dec
leave
push
dec
nop
adc
ins
and
fmul
sbb
ins
mov
push
mov
pop
add
sti
add
pop
jg
inc
xor
dec
mov
and
pop
dec
js
ss
jecxz
inc
cmp
(bad)
retf
xchg
jl
iret
mov
sbb
test
jno
add
fisttp
mov
pusha
push
push
dec
cmp
add
xchg
pop
mov
(bad)
cmp
push
fmul
push
cmp
in
int3
bound
pop
push
fsub
xchg
frstor
int
pop
dec
bound
mov
xor
icebp
ss
xchg
stos
pop
(bad)
jns
mov
fs
adc
or
stc
mov
(bad)
pop
push
mov
fnsave
and
stos
ficomp
or
sahf
popf
mov
mov
pop
pusha
(bad)
aam
push
fwait
pop
adc
sbb
fcmovbe
cmp
dec
mov
mov
mov
adc
push
push
mov
jns
lds
mov
mov
jmp
jns
add
push
sbb
rol
mov
xchg
xor
leave
hlt
cmps
push
xor
adc
call
mov
or
and
push
popf
pop
bound
in
daa
fmul
ret
std
push
dec
sbb
adc
clc
mov
inc
pop
or
mov
aad
inc
cmp
and
arpl
push
call
inc
push
imul
aad
cmp
or
add
and
adc
test
popa
fwait
imul
mov
psubd
(bad)
sbb
adc
push
adc
jge
mov
inc
test
loope
inc
or
fild
or
into
cmp
(bad)
adc
cmp
(bad)
movs
dec
inc
or
cmp
add
mov
std
dec
mov
cmp
mov
push
sbb
hlt
fadd
cmp
out
add
jns
(bad)
mov
pushf
add
js
aaa
dec
adc
push
push
inc
pop
and
jecxz
ins
inc
jmp
call
lea
loop
pop
jl
retf
sbb
adc
xchg
popa
add
jns
pop
sub
mov
cmc
and
push
xor
daa
pop
or
cmc
ds
dec
push
ret
and
jl
cmps
or
addr16
sti
xchg
sbb
cmp
inc
xor
nop
add
or
or
in
aas
xchg
fcmovb
or
adc
or
out
scas
push
outs
mov
adc
lahf
cmp
inc
js
sbb
cmp
pop
ror
adc
adc
sbb
sbb
cmp
xor
xor
xchg
jg
setb
add
or
adc
mov
jmp
adc
in
cmp
mov
push
xchg
pop
sub
lahf
cdq
and
add
xor
call
and
mov
or
sub
pop
mov
ins
adc
dec
sub
pop
fst
cmp
popa
adc
adc
jns
or
cdq
push
lea
and
sbb
dec
add
sub
push
push
xchg
xchg
out
in
and
sub
and
lock
stos
leave
sbb
pushf
out
hlt
jmp
jg
add
adc
sub
inc
ret
(bad)
cmp
and
mov
dec
xor
lods
xor
sbb
inc
(bad)
into
(bad)
push
loop
inc
and
lds
or
jmp
push
pusha
loope
cmp
es
jg
mov
push
pusha
dec
add
sbb
repz
xor
and
(bad)
bound
add
sbb
sub
popf
rol
cdq
fld
and
jge
inc
adc
pop
jne
inc
mov
add
js
xor
mov
cmp
ds
fldenv
mov
pop
and
cmp
jb
pop
or
add
popf
sub
fiadd
pop
inc
xchg
out
inc
sbb
mov
dec
sbb
popf
dec
add
leave
jae
out
add
xor
fwait
(bad)
jmp
or
inc
nop
lea
adc
add
or
and
add
add
jmp
gs
xchg
dec
xor
jmp
scas
cmp
call
mov
add
xchg
popa
jecxz
mov
test
mov
das
leave
pop
cmp
jno
and
or
xor
push
cmp
ins
adc
mov
push
shr
xor
out
fmul
inc
fild
mov
jo
push
mov
or
cdq
sar
pop
add
inc
sbb
ret
jge
mov
inc
sbb
adc
mov
inc
sub
sbb
push
add
jns
and
into
pop
pop
popa
push
push
or
call
push
add
xchg
cli
cdq
into
inc
sbb
inc
es
mov
sti
inc
mov
test
push
cmc
popa
bound
(bad)
in
jae
mov
(bad)
std
cmc
xchg
xor
leave
(bad)
adc
cmps
mov
or
sbb
mov
repnz
fadd
loope
push
icebp
xor
adc
fcomp
loop
imul
mov
xchg
add
std
and
xor
repz
or
adc
jl
xchg
sbb
push
adc
add
ret
adc
jp
in
cmp
test
pop
sbb
inc
pop
adc
jmp
dec
sbb
rcl
adc
mov
cdq
xor
xor
shr
lahf
jns
fadd
sbb
jae
xchg
or
sahf
sbb
inc
test
fldl2t
push
or
rol
xchg
sub
xchg
xchg
cdq
in
sub
cmp
mov
in
pushf
xchg
das
push
scas
rol
push
adc
pop
sub
imul
sbb
jecxz
iret
add
xor
cld
sbb
adc
pushf
sub
dec
daa
loope
in
sbb
in
fldcw
lds
push
vpunpckhqdq
jmp
das
sbb
es
push
stos
xchg
xor
std
outs
adc
mov
dec
mov
fisub
or
xor
(bad)
xor
xor
dec
repz
mov
std
cmp
stc
jle
push
ret
(bad)
je
mov
dec
dec
mov
cmc
jae
jmp
rcl
pop
or
jae
and
sbb
dec
or
leave
add
test
cli
ss
fiadd
add
sbb
psubsw
cmps
pop
and
movs
xchg
and
xchg
or
adc
jae
scas
cmp
xchg
xchg
adc
cmp
adc
dec
or
xchg
sbb
and
pushf
dec
or
or
xor
leave
push
add
lea
leave
push
call
or
and
xchg
mov
scas
ins
les
sub
or
xchg
rol
jg
stos
(bad)
std
cmp
add
or
cld
ret
shl
xchg
mov
dec
adc
push
xor
inc
ds
jge
in
add
sbb
jmp
xchg
test
add
adc
sub
sahf
ss
jo
scas
inc
retf
add
les
or
mov
adc
shr
leave
push
sbb
jbe
ds
sbb
or
add
scas
xor
sub
pop
int
leave
rol
or
mov
pop
or
fld
lock
loop
adc
ret
jae
inc
(bad)
and
dec
inc
push
in
or
lock
dec
dec
xor
mov
ror
into
cwde
add
mov
or
mov
jp
add
add
loope
inc
and
cmp
push
mov
aad
push
fcomp
push
mov
sub
add
add
jmp
(bad)
sbb
out
loopne
or
iret
inc
inc
pop
jge
inc
dec
jge
icebp
test
xor
jle
mov
adc
(bad)
shl
add
jecxz
add
aad
scas
cmp
add
xor
sahf
or
mov
pop
or
dec
test
push
shr
out
jb
mov
pop
adc
popa
ja
inc
(bad)
retf
movs
add
mov
(bad)
jle
adc
mov
not
jo
push
pop
sub
retf
push
in
or
cmp
lea
adc
cmp
repnz
cmp
je
idiv
fadd
repnz
loopne
add
test
add
cld
(bad)
retf
shl
cmp
pop
jecxz
add
ret
stc
cmp
jmp
sbb
and
in
cwde
inc
arpl
inc
adc
sub
sbb
push
jl
pop
icebp
push
je
inc
inc
sbb
or
add
ret
and
test
add
inc
rcr
inc
or
xchg
sub
outs
cwde
push
(bad)
iret
adc
mov
add
std
push
icebp
lahf
push
mov
iret
jl
mov
and
push
sbb
out
shl
add
inc
xlat
dec
add
dec
repz
xor
dec
adc
pusha
(bad)
pmaxub
mov
xor
cmp
add
push
cmc
(bad)
stos
xchg
xchg
adc
mov
mov
clc
xchg
js
out
jp
and
icebp
fistp
or
or
pop
adc
test
sbb
add
or
xor
mov
inc
mov
mov
ffree
jns
jle
pop
loope
es
add
(bad)
outs
xchg
idiv
mov
cmps
xchg
xchg
or
add
add
adc
pop
jne
pop
add
and
or
loope
fwait
cwde
mov
inc
add
arpl
inc
inc
sbb
jl
jae
(bad)
ror
push
das
push
add
and
dec
repz
push
rcl
add
cdq
cmp
inc
dec
mov
popf
jb
ret
ds
ret
in
in
mov
aad
and
stc
fwait
imul
repnz
push
sub
sbb
add
dec
lds
or
and
fstp
int
gs
lahf
data16
jecxz
mov
int
outs
pop
arpl
mov
xor
xor
jmp
mov
aam
shl
xor
jg
into
aaa
xor
mov
dec
clc
pop
fistp
add
and
or
add
inc
fsubr
xor
jmp
int
adc
push
(bad)
leave
mov
push
int
mov
into
adc
js
loope
or
sub
jbe
mov
clc
outs
fstp
movs
cdq
mov
je
push
and
fidiv
pop
inc
sub
test
leave
rcl
fidiv
es
leave
pop
sbb
dec
jle
add
mov
(bad)
je
mov
daa
xor
sahf
sbb
into
or
in
mov
pop
mov
sub
sub
add
xor
add
or
in
ja
xor
shl
xchg
int3
and
popf
sbb
inc
push
add
loopne
je
scas
mov
inc
add
xor
jmp
adc
xor
inc
in
cdq
aas
fcomp
cmp
xor
dec
and
pusha
mov
fstp
cmp
sbb
push
(bad)
pop
cld
cmp
les
ja
(bad)
loopne
xchg
xor
push
add
pcmpeqd
(bad)
in
jne
dec
mov
(bad)
pop
mov
jno
(bad)
sbb
push
std
and
jle
inc
fwait
or
xchg
cmp
adc
in
fwait
and
(bad)
adc
add
xchg
jnp
xor
stos
ret
and
arpl
or
or
cmp
xor
or
out
ret
hlt
push
sbb
ins
xchg
not
sti
adc
fsubr
in
or
push
dec
lahf
test
mov
fnstcw
dec
or
sbb
les
mov
or
cmp
test
outs
call
dec
call
inc
dec
and
inc
add
loope
cmp
push
add
(bad)
pop
xor
inc
xlat
adc
std
jb
and
lock
sbb
loopne
sub
add
or
dec
inc
or
add
xchg
push
xchg
xchg
add
or
icebp
inc
out
adc
cwde
leave
sbb
dec
add
arpl
out
ins
pop
add
aad
sbb
scas
sbb
pop
push
rol
sbb
les
les
jle
pop
cs
push
xor
sbb
mov
dec
push
sub
inc
inc
jecxz
inc
or
add
cmc
sub
mov
adc
call
adc
ret
sub
outs
xchg
fisubr
dec
das
and
push
push
xor
push
or
ret
pop
lods
sbb
dec
outs
loope
xor
icebp
test
aaa
jno
setns
fld
xor
push
sub
adc
sbb
mov
jne
pop
les
and
add
cli
(bad)
mov
mov
and
adc
xchg
cmp
call
jp
add
xor
xchg
ss
shl
add
xor
xor
or
rol
mov
pop
inc
hlt
out
and
push
mov
(bad)
stc
js
out
dec
or
pop
pop
xchg
add
and
ss
jl
out
dec
add
adc
sub
mov
xor
and
das
cmp
jp
in
dec
adc
mov
pop
or
or
jno
push
sbb
or
(bad)
js
inc
jno
dec
or
pop
ins
adc
fstp
sbb
sub
loop
xor
jl
add
mov
pop
pop
mov
inc
adc
inc
lahf
xor
jns
adc
int
inc
adc
(bad)
mov
pusha
xor
jae
sbb
adc
stc
daa
pop
xor
mov
xchg
push
add
xor
and
adc
push
sub
popa
or
or
push
and
adc
pop
adc
call
movs
mov
fwait
push
cmp
or
enter
sbb
sbb
adc
dec
inc
and
(bad)
xchg
adc
cli
add
mov
sbb
aam
push
ins
std
mov
mov
sbb
test
dec
lea
fild
pusha
sub
and
and
outs
add
push
shl
aam
or
data16
jge
and
fcom
pop
inc
adc
inc
jg
cs
das
push
mov
cwde
jl
sbb
mov
dec
ficom
cmp
push
or
jle
mov
addr16
sbb
sbb
jg
add
add
mov
mov
mov
push
lds
xor
fbld
dec
jmp
aaa
xor
outs
fwait
dec
ins
mov
enter
test
in
pop
push
aaa
pop
adc
ja
inc
inc
inc
std
outs
sar
jbe
xchg
loop
cmp
pop
push
or
test
or
push
pop
sar
mov
ret
retf
inc
inc
mov
cmp
pop
mov
frstor
sbb
add
pop
(bad)
mov
xlat
sub
dec
jge
xor
mov
nop
ins
mov
and
jno
pop
sbb
out
out
cmp
mov
mov
dec
aam
test
retf
push
adc
ret
or
pop
adc
lods
mov
mov
ficomp
mov
sbb
xor
int3
ins
cmp
xchg
icebp
push
jle
(bad)
lea
mov
aam
enter
int3
jge
add
cmp
cmc
mov
(bad)
inc
cmp
ficom
fcmovnu
and
xor
stos
dec
add
(bad)
fucomi
pop
cmp
jb
sbb
add
in
test
mov
(bad)
push
data16
add
lea
push
add
addr16
or
push
push
ror
sbb
fadd
in
pop
cdq
bound
sbb
nop
push
add
cmp
push
inc
mov
xchg
sbb
jecxz
push
inc
add
mov
xor
sbb
dec
and
lods
stc
mov
inc
icebp
inc
in
jge
jle
clc
loopne
pop
cmc
push
adc
sar
or
mov
dec
push
out
and
bswap
ja
clc
call
jg
mov
jl
xchg
test
adc
add
xchg
sahf
nop
fiadd
add
ffreep
add
dec
rcl
jb
into
mov
ret
and
add
cs
aas
fbstp
xor
in
(bad)
imul
dec
mov
dec
dec
dec
add
mov
inc
inc
fs
mov
(bad)
scas
push
clc
mov
mov
xor
mov
test
je
bound
pop
pop
push
adc
jnp
movs
fisttp
jmp
ret
add
sti
add
push
push
add
test
push
pop
dec
test
add
lea
push
xor
jnp
mov
daa
xchg
data16
jns
dec
jbe
add
(bad)
sbb
or
cmps
mov
call
xchg
jmp
jge
or
add
inc
sbb
iret
aam
and
mov
(bad)
(bad)
clc
fld
jnp
jg
jecxz
inc
add
cmp
cmc
fxtract
adc
mov
dec
xchg
and
or
mov
cmps
xor
sbb
sbb
xor
and
inc
inc
shl
(bad)
sbb
jmp
or
mov
and
inc
add
jmp
loopne
jl
jge
fwait
iret
pushf
xor
sbb
pop
les
inc
lods
cli
mov
test
add
into
or
inc
mov
ja
adc
push
xchg
ss
stc
and
nop
inc
pop
jne
je
call
add
inc
mov
push
cmp
inc
dec
push
xor
int3
sahf
inc
aam
mov
add
xor
loop
lea
push
scas
lea
in
mov
and
in
add
test
jne
sub
or
pop
mov
in
add
dec
lea
shr
pop
mov
xor
push
adc
or
xor
test
pop
scas
pop
cmp
stc
sbb
sbb
add
cmp
cmc
inc
xor
sbb
cmp
sbb
daa
inc
aaa
xchg
pop
xor
push
adc
into
aaa
cmps
or
pop
clc
lods
ror
adc
repnz
fmulp
sub
add
cld
jp
jno
dec
imul
(bad)
ins
mov
or
add
and
adc
xchg
pop
sar
or
pop
add
xor
pop
and
sbb
jne
fld
jl
xchg
add
mov
add
fimul
pop
sub
add
sub
out
or
or
or
mov
or
or
mov
hlt
cmps
fcomp
and
add
add
push
push
fld
add
ret
jp
or
xor
sub
or
adc
push
adc
pushf
fimul
mov
fsubrp
out
in
xor
ja
adc
adc
mov
sbb
repnz
add
pop
mov
pop
or
push
pop
into
or
mov
jb
nop
nop
add
xchg
xchg
push
dec
or
or
push
jmp
push
add
dec
ret
dec
fld
add
and
aas
mov
cmp
cmp
sbb
rol
retf
mov
pop
icebp
pop
and
add
adc
sbb
lods
mov
arpl
mov
inc
mov
jecxz
and
or
popa
add
sbb
push
ror
outs
ds
sbb
inc
(bad)
push
cdq
jne
inc
and
inc
add
adc
jecxz
sbb
jb
loope
ficomp
inc
mov
hlt
inc
adc
popa
cmp
and
and
sbb
adc
push
add
adc
add
test
mov
jecxz
adc
in
mov
jne
mov
call
ins
adc
xchg
inc
and
xlat
mov
in
mov
or
adc
cmp
bound
xlat
xchg
jo
jnp
push
xchg
pop
adc
cmp
jle
movs
jl
add
add
ret
xchg
add
paddusb
fsub
lods
inc
push
sub
jl
popa
jbe
cli
(bad)
nop
push
push
or
adc
xchg
xchg
inc
push
or
or
in
cmovge
cmp
aas
out
les
push
call
gs
icebp
adc
mov
and
rcr
inc
in
pop
push
push
xchg
mov
fwait
add
les
pusha
popa
add
or
mov
push
sbb
ret
repz
and
xchg
cmp
mov
sbb
movs
pusha
adc
mov
xor
add
inc
sbb
cwde
packsswb
fiadd
and
fcomip
mov
adc
adc
push
or
sub
mov
cmp
mov
adc
mov
aam
inc
pop
or
and
pushf
mov
sub
adc
pop
adc
sub
cld
push
sbb
xor
sub
mov
ins
lahf
sbb
xlat
adc
aaa
dec
sbb
pop
sbb
push
in
and
adc
in
push
dec
repnz
and
pop
sbb
imul
aaa
xor
pop
inc
gs
das
dec
fdiv
adc
inc
cmp
xchg
add
(bad)
pop
xor
pop
aam
or
adc
cli
and
rcr
mov
add
or
adc
sbb
add
mov
and
sub
cmps
add
jae
popa
and
mov
dec
cli
inc
mov
inc
push
lock
aad
or
inc
rcr
test
and
enter
mov
arpl
loopne
xor
popa
loop
jl
fld
inc
or
inc
dec
pop
push
aam
bound
inc
mov
pop
and
mov
mov
mov
inc
sub
dec
add
popa
jns
add
dec
add
(bad)
les
add
fnstsw
mov
adc
scas
(bad)
fnstcw
mov
retf
mov
mov
pop
in
das
pop
jmp
and
jo
or
sub
mov
xor
(bad)
sbb
pushf
ins
test
imul
cmps
mov
xchg
sub
sti
into
imul
cmp
outs
or
cwde
or
jg
lock
mov
(bad)
dec
loopne
cmp
cmp
adc
cmp
jg
pop
inc
jmp
faddp
inc
cmp
pop
ret
call
outs
sub
add
sahf
sbb
or
inc
inc
cmp
(bad)
inc
push
repnz
inc
cmp
mov
pusha
outs
in
sub
scas
ja
mov
mov
xchg
and
(bad)
sub
test
mov
pop
and
test
shl
aam
and
aad
pop
pop
or
adc
jmp
gs
add
add
rcl
mov
add
outs
cmp
mov
pop
push
cmps
add
mov
pop
(bad)
sbb
add
cwde
sahf
enter
imul
and
scas
inc
sub
pushaw
add
(bad)
fwait
ror
or
sub
xor
out
fild
push
clc
fild
adc
push
call
jbe
(bad)
test
clc
cmp
(bad)
sahf
cmp
fucomp
or
in
aam
sbb
in
repz
cmps
push
xor
pop
and
adc
test
push
lds
inc
dec
daa
test
adc
rcl
icebp
int
mov
or
rcr
adc
cmp
push
mov
scas
push
sbb
xchg
inc
mov
mov
and
cmps
or
xor
mov
inc
push
dec
icebp
and
mov
pusha
shr
add
cmp
cmps
pop
enter
(bad)
add
jno
lds
aaa
ja
cmp
dec
mov
jno
and
movs
imul
mov
arpl
xchg
fisttp
jmp
or
aad
xor
jbe
das
xchg
scas
or
add
dec
and
push
sub
xlat
xor
inc
and
fidiv
cmp
mov
out
mov
push
xchg
or
sub
push
fwait
push
xchg
jecxz
jp
mov
stc
bound
sbb
sbb
sti
xor
add
scas
jae
jle
push
cmova
push
pushf
enter
mov
and
push
mov
or
push
ins
sbb
sub
cmps
mov
xchg
mov
add
mov
pop
xor
mov
jg
mov
sbb
add
ins
cwde
call
(bad)
pop
push
aad
nop
sbb
pop
clc
fsub
push
shr
adc
inc
xchg
push
pop
cmp
mov
cmc
es
jo
sub
or
inc
in
xor
cmc
aam
sti
sbb
add
outs
and
xor
mov
jbe
xchg
fmul
mov
int3
inc
cmp
and
mov
icebp
repnz
fadd
imul
test
sti
jno
mov
jne
and
cs
lds
and
cmp
rol
adc
test
adc
push
sbb
cmp
sub
fs
jge
sti
push
out
push
mov
xchg
pop
sub
jns
mov
or
adc
cld
sbb
add
and
mov
or
push
loop
pushf
shr
mov
imul
sbb
(bad)
adc
or
mov
cmp
mov
cmp
leave
out
push
enter
jnp
(bad)
aam
add
sub
pop
fsub
or
cmp
jge
jns
ret
adc
dec
out
retf
push
dec
mov
pop
pop
les
mov
ret
jge
adc
push
pushf
inc
xchg
add
jno
out
shr
xchg
in
test
ret
jnp
jl
jle
mov
(bad)
mov
push
cmp
ror
cmp
xchg
je
stos
xor
pop
xor
aas
add
sti
pop
hlt
jg
push
xor
ud0
or
sub
dec
cdq
icebp
iret
sbb
or
add
jb
in
lahf
cli
add
inc
add
xor
xor
dec
or
int
les
dec
dec
cmp
nop
pop
xchg
adc
call
retf
popa
xchg
jg
xor
(bad)
mov
dec
inc
or
shr
inc
cmps
pusha
dec
inc
loope
in
mov
stos
cmp
jo
sub
shr
and
pushf
adc
shl
mov
loopne
popa
cmp
mov
sub
mov
xchg
add
pop
mov
mov
bound
pop
lds
loope
push
repnz
adc
sub
xlat
data16
add
shl
bound
inc
mov
stos
mov
adc
popa
out
add
mov
sub
adc
dec
dec
sbb
retf
in
shr
push
dec
popa
jo
dec
xlat
pop
and
mov
mov
inc
or
xchg
cmc
and
ja
pop
mov
sub
and
mov
cmp
dec
dec
cs
push
ror
imul
xor
sub
sub
test
pop
mov
in
cmp
jge
das
pop
mov
xlat
mov
and
sbb
xor
cli
push
dec
dec
in
or
inc
imul
mov
adc
adc
add
cli
xchg
cwde
sbb
sbb
xor
ins
adc
lods
inc
or
sbb
out
xor
xor
push
pop
add
lods
mov
in
dec
mov
cmp
dec
push
outs
pop
dec
sub
fisttp
lds
cmc
push
mov
mov
cdq
adc
dec
pop
fistp
dec
sbb
inc
adc
xchg
xor
repz
jo
icebp
stc
shl
icebp
jns
or
loope
mov
mov
jecxz
xlat
ja
inc
mov
scas
dec
push
loopne
retf
xchg
fidiv
xchg
lods
inc
sar
or
dec
inc
pop
xchg
inc
sub
xchg
(bad)
call
add
xchg
add
xor
xor
call
pop
(bad)
cmp
gs
cmp
out
popa
js
cmp
and
aad
cmp
push
jmp
adc
push
cwde
add
jne
imul
je
or
cs
add
stc
mov
popa
cmp
outs
sub
loope
int
fst
cwde
std
loope
arpl
push
bound
loope
mov
sub
push
outs
cmp
push
imul
add
pop
addr16
test
inc
pop
hlt
iret
mov
push
push
xchg
xchg
and
inc
inc
and
or
mov
ins
aaa
add
ja
cmp
or
or
outs
push
aam
daa
scas
jae
mov
scas
fmul
mov
xchg
popa
dec
dec
jge
adc
dec
dec
(bad)
neg
or
pop
sbb
fdiv
movlps
add
or
cdq
test
pop
dec
jl
lock
dec
pop
pop
dec
aas
or
test
jno
adc
gs
dec
jo
sar
test
jb
jle
in
inc
xchg
jae
fnsave
jne
aaa
int3
out
test
pop
(bad)
sub
daa
std
je
jl
or
out
dec
mov
and
loopne
xlat
cmp
add
jno
je
fwait
push
rep
vmwrite
mov
gs
in
xor
xchg
add
and
or
jmp
std
ficom
push
pusha
mov
mov
adc
dec
ss
stos
xchg
dec
or
imul
and
pop
lea
loop
adc
movs
rol
retf
or
ss
mov
inc
and
adc
adc
add
out
test
in
dec
add
add
jbe
sbb
xchg
out
dec
sbb
xchg
xchg
jbe
je
push
push
test
and
or
add
popf
ja
lea
or
je
sbb
push
xor
lods
(bad)
shl
push
pop
add
ins
xchg
call
push
out
mov
ret
xchg
lods
es
push
push
test
stos
fwait
lods
daa
jb
xchg
adc
call
repnz
adc
cdq
dec
pop
pop
(bad)
sub
push
popf
jp
or
je
adc
bound
bnd
outs
dec
mov
popa
xor
ror
cmp
ins
pop
and
add
xchg
and
lea
add
sub
add
xor
(bad)
xchg
lods
in
xor
in
sbb
aaa
sar
add
xchg
mov
arpl
adc
inc
popf
aam
cmp
ds
jp
cmp
aas
add
xor
or
dec
and
iret
xchg
inc
mov
dec
test
aad
inc
inc
xor
dec
mov
inc
add
and
add
add
arpl
inc
inc
loop
push
or
and
push
fwait
imul
sbb
cs
imul
adc
sub
dec
jne
retf
lds
xor
lds
imul
adc
iret
sbb
int3
lds
pop
stos
pop
jmp
pushf
xchg
in
xchg
fild
daa
dec
xchg
movs
fild
mov
aaa
cmp
and
rcr
mov
push
dec
mov
or
in
ret
dec
mov
loopne
iret
aad
inc
cmp
jbe
pop
or
rol
pop
ret
inc
cmp
pop
shr
data16
sub
dec
inc
xchg
std
jns
mov
dec
sbb
sar
add
ror
push
and
fisttp
call
and
dec
pop
dec
adc
adc
xchg
mov
xor
cmp
mov
sub
or
inc
or
or
ror
mov
or
aaa
test
adc
je
add
jb
ins
jle
inc
mov
adc
mov
mov
loopne
sbb
jae
jb
sbb
rcr
sti
sbb
xor
jg
pop
in
inc
and
out
mov
add
mov
int3
pop
pop
or
lahf
ds
cwde
adc
add
push
add
xchg
jo
loope
mov
pop
inc
pop
call
and
or
ficom
add
fcomp
and
dec
popf
(bad)
cmc
inc
cli
jle
in
adc
jns
jae
loope
dec
fcmovnu
ins
daa
pop
enter
icebp
stc
mov
in
es
repnz
mov
dec
ror
dec
xchg
push
xchg
dec
aas
inc
and
dec
mov
in
pop
or
aam
mov
or
arpl
je
in
mov
mov
dec
dec
cmp
jae
dec
dec
jno
xor
(bad)
push
pop
pushf
dec
enter
xlat
je
cs
xchg
mov
popa
push
test
clc
or
and
push
mov
xchg
push
pop
std
ds
mov
push
cmps
fisubr
cmps
push
inc
pop
mov
xchg
add
fadd
sbb
or
ja
frstor
adc
test
add
movs
add
add
pop
ret
dec
out
inc
and
lea
jno
mov
mov
dec
es
(bad)
xchg
imul
push
ret
es
addr16
xlat
(bad)
and
mov
jb
mov
fidiv
mov
or
and
stc
gs
jle
xor
adc
pop
and
gs
push
push
(bad)
and
add
lea
or
(bad)
and
mov
mov
xchg
or
add
adc
pop
sbb
push
out
mov
cli
mov
pop
(bad)
cli
out
sbb
mov
movups
sbb
sbb
mov
xchg
enter
jp
jne
adc
push
outs
loopne
mov
and
cmp
xchg
inc
stc
push
xor
(bad)
mov
pop
jne
or
xchg
inc
xchg
cmp
dec
pop
icebp
mov
xchg
pop
push
or
cmp
or
xor
jge
fcmovnb
dec
aad
add
sbb
stos
xor
sub
add
test
std
aad
dec
and
pusha
add
add
dec
pop
dec
ret
mov
dec
pusha
ds
add
outs
dec
add
imul
dec
add
test
addr16
push
jg
xor
xlat
ret
sti
dec
xchg
mov
adc
and
icebp
lea
test
sbb
adc
int
push
and
sub
fisub
jmp
clc
xchg
adc
jne
cs
or
and
add
or
scas
xor
shl
dec
jbe
or
and
mov
rcl
push
xchg
or
pusha
icebp
push
xchg
stc
xor
add
push
add
add
or
cmp
leave
(bad)
xchg
push
xchg
sub
xor
call
out
lods
and
or
push
add
mov
pop
bound
dec
dec
add
jge
xchg
retf
add
dec
leave
in
pushf
and
ds
sub
into
pop
xor
in
and
addr16
stc
cmp
loop
ss
push
sbb
in
shl
dec
loop
mov
and
lock
and
jl
ret
loope
stos
aam
and
mov
je
or
adc
movs
cmp
xchg
and
sub
arpl
jne
adc
jbe
jb
adc
fisubr
sbb
mov
xor
aad
shl
mov
add
enter
cmp
mov
xchg
or
or
adc
test
(bad)
loopne
or
sbb
stos
cmp
les
test
scas
cmp
call
inc
mov
sbb
popa
xchg
or
or
adc
aam
ins
xchg
sbb
repz
cmp
add
or
mov
add
lods
or
adc
adc
or
icebp
mov
stos
lods
sbb
frstor
in
rol
(bad)
adc
mov
es
or
into
xchg
adc
pop
and
add
adc
mov
(bad)
addr16
dec
(bad)
mov
or
mov
in
xchg
and
jmp
push
inc
aas
repz
imul
loopne
add
inc
cmc
mov
xor
mov
or
xor
jg
push
push
cmc
mov
cmp
add
inc
sbb
fistp
cs
pop
dec
(bad)
or
or
int
and
push
test
dec
stc
movs
or
pop
mov
mov
or
cwde
movs
and
pop
call
inc
adc
or
iret
pop
ret
push
pushf
xchg
(bad)
aam
mov
cli
adc
test
mov
push
dec
test
xor
add
cmp
pop
jne
dec
or
dec
xchg
shl
jecxz
and
inc
retf
mov
adc
jge
shr
xor
mov
or
call
mov
loope
jae
(bad)
sar
cmp
mov
popf
xchg
jmp
arpl
leave
mov
imul
popa
adc
outs
add
add
xchg
fsub
inc
outs
test
add
fcmovne
inc
sbb
rol
sbb
(bad)
hlt
push
pop
loop
add
jns
iret
xchg
inc
add
and
inc
dec
sbb
sbb
mov
test
imul
mov
dec
fsubr
test
xchg
adc
inc
pushf
mov
adc
je
ret
jge
outs
dec
xchg
adc
jo
outs
push
xor
jp
cmp
sub
inc
loope
jge
xchg
enter
mov
mov
xor
xchg
xor
jne
push
adc
ret
fs
xor
adc
scas
fwait
push
lock
pusha
out
mov
mov
inc
(bad)
hlt
inc
fisubr
xchg
xchg
jp
inc
fsubr
fadd
jmp
popa
test
push
jae
mov
sbb
push
and
lea
loopne
sbb
add
and
dec
ret
pop
bound
jbe
outs
push
or
dec
jl
push
mov
fbstp
and
and
xor
mov
mov
jp
sbb
fwait
xchg
call
inc
and
inc
test
std
test
ja
xchg
mov
adc
test
stc
jo
daa
lea
std
inc
aam
sbb
add
jne
inc
pop
or
sub
daa
lea
popa
xchg
xchg
aam
pusha
inc
inc
imul
push
or
aaa
stos
test
(bad)
sti
adc
xchg
scas
dec
add
push
jns
popa
movs
js
xchg
push
sub
sub
fadd
cmps
mov
mov
adc
jg
lods
cld
shl
jno
es
imul
sub
add
loope
add
add
push
pop
inc
sbb
adc
test
pop
and
scas
inc
je
sbb
sbb
mov
je
jbe
dec
dec
fild
ins
add
sbb
push
xchg
sbb
or
sub
sbb
inc
cmp
into
pop
mov
push
or
push
(bad)
int
mov
xor
leave
stc
outs
imul
lahf
xabort
dec
js
adc
test
(bad)
aaa
add
xchg
stc
mov
push
push
xchg
cmc
shl
add
pop
jae
jbe
jne
push
add
add
pop
cmps
adc
add
and
or
inc
inc
push
and
sbb
add
mov
cmp
dec
sbb
mov
add
ins
mov
pop
dec
popf
push
pop
cmp
add
and
lahf
ins
scas
mov
rcl
inc
in
xor
push
sbb
outs
daa
in
inc
and
(bad)
or
mov
inc
push
pop
les
sbb
out
pop
xor
fbstp
ins
sbb
clc
mov
mov
mov
sbb
lods
adc
inc
ret
adc
popf
pop
call
pop
sub
loope
adc
in
mov
out
jae
sbb
clc
add
lods
es
add
jp
push
adc
dec
fwait
mov
mov
ins
stos
bound
jp
and
(bad)
(bad)
pop
leave
push
popa
add
inc
xor
rcl
shl
jns
push
rcl
mov
in
dec
jae
xor
shl
gs
aad
add
cmp
jecxz
mov
test
lds
not
nop
xchg
xchg
jne
es
mov
add
jmp
mov
mov
rcr
popa
cmp
loope
lock
and
adc
sahf
mov
cli
syscall
sbb
jno
pop
push
xchg
push
mov
cmps
ins
lods
ret
add
push
ror
imul
pusha
push
dec
push
icebp
adc
push
out
sbb
xor
scas
inc
pop
cdq
(bad)
outs
dec
dec
or
aad
jmp
inc
and
scas
adc
loope
cmp
add
in
in
cmp
push
and
ret
push
popa
and
into
pop
jno
push
add
xchg
cmc
icebp
dec
inc
mov
cmc
pop
lods
jb
add
test
adc
add
inc
lods
adc
push
aam
mov
adc
pop
add
jne
movs
add
push
push
sbb
cdq
mov
rcr
sbb
std
or
push
sbb
sub
or
dec
jne
rol
jne
or
(bad)
in
push
add
in
inc
mov
je
sub
pop
icebp
add
imul
add
sbb
push
loope
hlt
mov
cmp
adc
fcomp
xor
add
push
push
iret
pop
add
pusha
push
push
add
push
ins
inc
lahf
cmp
pushf
sub
dec
inc
dec
xchg
gs
jp
call
and
or
mov
sub
shl
push
jne
xchg
jo
test
lds
add
dec
push
dec
xor
or
loope
jne
sbb
dec
sbb
scas
dec
cmp
in
movs
xor
and
sub
adc
test
dec
in
adc
inc
clc
movs
popa
cmp
clc
inc
xchg
xor
test
movlps
popf
aaa
or
xor
jmp
dec
mov
out
inc
aam
popa
inc
out
sub
inc
fst
or
and
fstp
mov
or
inc
mov
xchg
shl
fadd
push
gs
jns
adc
push
dec
pop
adc
ss
cwde
mov
adc
mov
sub
stos
das
pop
adc
cdq
or
or
cli
cli
add
xchg
or
test
scas
loope
popa
aas
or
jl
push
(bad)
jne
adc
test
test
mov
and
shl
xor
test
setl
fild
out
pop
in
mov
das
out
dec
cmc
sbb
inc
cmpxchg
mov
mov
jne
dec
sbb
sbb
test
sbb
sub
push
sub
test
and
sub
sub
or
sar
inc
jge
scas
jp
inc
or
pop
cmp
xchg
xor
jmp
mov
dec
or
jmp
or
xchg
inc
test
loop
mov
retf
js
xchg
and
xchg
aas
es
dec
jbe
bound
cmove
xchg
lds
adc
adc
push
pop
inc
inc
jns
or
dec
or
sbb
test
loope
pop
and
or
mov
mov
mov
mov
popa
or
xchg
jo
(bad)
clc
sub
dec
lahf
xchg
sbb
dec
inc
push
and
cwde
push
cmp
dec
push
inc
inc
call
push
inc
dec
push
pop
ficom
add
lods
outs
push
xlat
out
or
sbb
das
int3
inc
sub
enter
push
or
sbb
jl
jmp
in
jl
ds
jle
movs
test
inc
jecxz
sbb
xor
add
leave
aas
lock
(bad)
sbb
inc
dec
dec
sbb
test
data16
xor
imul
loop
dec
inc
push
xchg
sub
mov
lahf
sbb
hlt
int
mov
pushf
popa
pushf
jmp
or
xchg
mov
pushf
add
mov
fiadd
leave
or
jne
test
cmp
xchg
les
inc
xchg
push
outs
sbb
inc
dec
clc
cmp
push
xor
xchg
or
clc
push
test
daa
xchg
mov
and
xor
gs
push
lods
push
push
add
sub
fdivr
enter
push
mov
mov
push
pop
xchg
(bad)
in
cmp
inc
push
pop
xchg
jl
rol
cmp
sbb
jle
cmp
in
movs
pop
add
mov
scas
adc
dec
mov
push
pop
test
test
sub
push
imul
pop
jbe
xor
or
mov
xor
mov
je
call
xor
adc
das
jns
fdivr
into
or
push
cmp
aam
sub
in
out
cs
add
xchg
shl
(bad)
dec
and
movs
mov
inc
jne
aam
or
loopne
push
ret
or
and
xor
or
stos
or
sbb
xchg
mov
mov
daa
test
and
dec
sbb
fisubr
xor
int
cmc
mov
cmp
add
mov
cwde
jecxz
lock
add
mov
xchg
add
jbe
sete
rcl
and
pop
popa
xchg
sbb
xor
push
push
inc
jnp
aam
out
cwde
xor
ja
mov
in
or
xor
imul
and
dec
jb
mov
in
mov
mov
mov
test
js
xchg
pop
imul
ja
cmp
stc
jl
or
xor
sub
rol
sbb
pop
dec
sbb
mov
fldcw
inc
sbb
xor
fwait
sbb
add
dec
sti
pop
sub
movs
adc
out
pop
in
fcomp
pop
push
xlat
(bad)
push
pop
sbb
sahf
dec
nop
push
ja
sbb
rcr
les
and
int
mov
or
xor
inc
cmp
movs
cmp
bound
sbb
sub
outs
sbb
retf
add
add
outs
mov
in
in
adc
cmp
or
or
test
jbe
movs
mov
jmp
popa
(bad)
ret
cmp
jae
xchg
add
sub
(bad)
xchg
dec
fst
rcl
(bad)
and
gs
add
push
sub
mov
in
push
fstp
cmp
(bad)
fcmovnu
ror
pushf
ins
or
pop
adc
jnp
aaa
xor
inc
or
inc
and
daa
xor
xchg
data16
loop
inc
bound
inc
and
jno
daa
push
cmp
sahf
adc
div
jns
jae
xchg
clc
das
das
fdiv
iret
and
sub
or
fs
scas
xchg
xchg
test
cwde
pop
das
sahf
jne
xchg
xchg
rol
inc
sbb
mov
xchg
mov
sbb
xchg
cmp
bswap
jo
sub
adc
or
out
ss
push
jmp
xor
lahf
and
inc
mov
movs
mov
iret
movs
mov
mov
adc
inc
or
jnp
adc
push
inc
or
dec
mov
inc
push
sub
rcl
shl
dec
lods
outs
dec
(bad)
sbb
mov
and
(bad)
mov
lock
lea
std
in
mov
mov
jge
in
and
mov
xchg
xchg
xchg
std
jmp
xchg
in
stc
loope
xchg
xchg
(bad)
fstp
out
jns
cmc
fldcw
cmp
bound
dec
mov
sub
dec
and
xchg
add
and
retf
fimul
aad
or
push
(bad)
xor
in
adc
ret
pop
pop
lods
loop
or
adc
add
fadd
fnstenv
shr
inc
or
sbb
adc
mov
in
sbb
stc
cs
test
daa
mov
out
cs
push
sub
ror
dec
or
lock
dec
les
nop
push
adc
mov
dec
sahf
cld
mov
dec
in
popa
cmp
test
sbb
jle
out
xor
call
in
nop
dec
xor
outs
push
retf
dec
nop
sub
and
jp
xor
ins
xchg
mov
and
ins
xchg
adc
lods
outs
nop
pop
jle
test
sbb
test
push
adc
cmps
add
push
ja
cmp
dec
adc
or
cmc
sub
add
int3
jmp
nop
push
push
and
push
add
jmp
out
or
loopne
out
mov
xchg
test
dec
or
mov
inc
lahf
mov
bound
add
adc
xor
loopne
xchg
scas
and
pop
sub
mov
or
xchg
iret
fcom
push
and
mov
ds
pop
pop
outs
je
mov
es
xchg
bound
js
push
jo
mov
mov
xchg
or
push
or
(bad)
xor
or
push
into
mov
or
and
cmp
sub
add
cli
add
sub
mov
pop
sub
mov
fs
(bad)
sbb
mov
lods
add
xchg
sbb
xchg
fsub
or
xor
dec
push
outs
push
cmp
or
inc
xchg
xchg
stos
daa
xchg
mov
sbb
cmp
pop
jo
pop
inc
sbb
in
dec
sub
daa
mov
cmps
fcom
fbld
pop
pop
push
add
xor
xchg
sbb
mov
sub
cwde
jge
pop
mov
and
arpl
pop
push
add
cmp
movs
mov
dec
in
fidivr
xchg
lahf
dec
mov
aaa
int3
data16
(bad)
xor
pop
pop
add
pop
ficomp
mov
jge
cmps
pop
mov
pop
cmp
into
jo
mov
push
scas
pop
pop
jne
sub
mov
addr16
cwde
shl
jmp
fcomp
sbb
or
mov
pop
das
cwde
ret
and
leave
out
mov
test
pop
in
mov
jo
mov
adc
xchg
add
or
add
push
xchg
comiss
or
mov
push
sub
and
pop
sbb
test
stc
cmps
pop
mov
mov
retf
pop
in
mov
sbb
or
outs
xchg
pop
add
push
movs
test
add
xchg
sbb
adc
or
add
dec
xor
adc
add
and
cmp
pop
jbe
xchg
xchg
add
add
xor
cmp
pop
dec
or
dec
jno
fisub
pop
data16
xor
push
adc
push
hlt
pop
xchg
or
sbb
xchg
xor
push
or
adc
jns
cld
fwait
cwde
cmp
add
jno
xchg
std
inc
inc
sub
dec
mov
adc
icebp
xchg
push
cdq
cdq
add
xor
hlt
and
xchg
psrlq
xchg
push
mov
inc
adc
sbb
or
adc
sbb
mov
std
mov
mov
ret
xor
mov
dec
mov
or
rol
adc
xor
add
leave
push
leave
inc
and
and
or
dec
add
add
add
mov
pop
jae
or
and
pop
fild
adc
or
ret
or
jp
sbb
adc
and
sub
sbb
adc
mov
xor
jge
cmp
xchg
and
rcr
add
into
in
adc
(bad)
mov
maskmovq
test
loope
xchg
mov
or
push
jmp
and
push
push
outs
mov
inc
xchg
push
outs
inc
jae
stc
inc
or
xchg
stc
and
and
jae
repz
add
push
aas
(bad)
fiadd
and
xchg
and
scas
push
xchg
pop
cmp
and
mov
or
leave
pop
inc
inc
or
inc
inc
and
(bad)
add
xchg
push
dec
dec
and
mov
movs
jmp
and
sahf
and
pop
xor
sbb
sbb
dec
jg
adc
add
jne
rcl
xor
jmp
(bad)
int
jne
cwde
outs
test
or
adc
cmp
pop
inc
adc
or
(bad)
and
nop
mov
mov
xchg
pop
mov
sub
ret
inc
mov
sub
dec
daa
std
push
call
sub
mov
pcmpgtw
and
dec
sbb
mov
or
add
int
pop
retf
shl
fxch
leave
xchg
lea
in
cmp
icebp
dec
popf
xchg
lea
pop
mov
leave
lods
jns
mov
leave
xchg
aad
cmc
retf
lea
lea
leave
mov
fnstcw
leave
sar
or
loope
in
in
inc
and
inc
scas
std
inc
test
push
jmp
hlt
add
jno
xor
mov
scas
or
pop
retf
ror
loope
icebp
and
popf
pop
mov
add
mov
cmp
test
add
clc
and
adc
das
adc
leave
or
push
push
add
push
push
push
push
push
inc
push
repz
and
cmp
pop
inc
test
inc
or
pop
aaa
call
pop
ja
push
daa
pop
repz
dec
xrelease
pop
push
push
dec
lds
adc
inc
dec
dec
pop
xor
xor
push
inc
push
dec
inc
ror
jae
aas
xchg
push
dec
dec
inc
mov
dec
adc
pusha
inc
inc
push
push
and
cmp
and
push
push
inc
inc
push
inc
push
mov
push
push
push
pop
icebp
and
mov
dec
inc
push
dec
daa
adc
cmp
inc
mov
inc
das
push
inc
inc
inc
push
sub
je
xchg
cmps
add
stos
cmove
jns
add
sub
es
pop
jmp
test
cmp
sbb
cmp
sbb
inc
pushf
mov
dec
add
sbb
adc
mov
pop
mov
retf
(bad)
rcr
cmc
in
inc
push
mov
cli
xchg
adc
in
and
jmp
in
push
loopne
xor
rcr
adc
jbe
icebp
cmp
xchg
sub
fsub
or
jne
sub
or
movs
and
pop
inc
shr
xor
ret
dec
add
fwait
xor
nop
rep
and
mov
and
xchg
inc
mov
rol
shr
les
inc
push
les
push
or
add
int3
jo
lea
movs
pop
jb
inc
sbb
jg
loope
mov
sub
adc
sbb
push
and
ret
cdq
aad
jp
(bad)
xchg
or
dec
and
jmp
ror
(bad)
pop
xor
rcr
bound
shl
jo
popa
add
nop
adc
inc
aad
fidiv
inc
sub
adc
xchg
cdq
mov
scas
sub
jecxz
adc
ror
jg
mov
cmp
imul
sbb
pusha
popa
inc
push
jbe
sbb
lds
jmp
pop
mov
and
mov
jmp
in
mov
repz
jns
push
add
mov
adc
into
pusha
sub
daa
ins
(bad)
fldcw
cmps
inc
xchg
mov
dec
das
jp
in
jmp
in
sbb
pop
or
dec
mov
adc
daa
mov
stos
push
bound
mov
lods
test
or
sub
pop
add
inc
sbb
movs
cli
pop
dec
adc
inc
mov
jg
add
loope
fsubr
daa
sbb
push
or
adc
ins
or
and
fucom
or
sbb
mov
inc
dec
dec
leave
movs
ins
inc
or
mov
mov
xor
inc
jecxz
mov
push
fcmovnbe
push
add
das
mov
adc
jg
push
(bad)
xor
js
retf
push
scas
stos
dec
mov
add
sahf
mov
or
fiadd
retf
daa
test
sub
mov
test
repz
sahf
(bad)
adc
cld
lea
leave
int
sbb
jp
loope
fucomp
in
sbb
popa
mov
xlat
and
loope
aad
xor
js
jge
xchg
scas
sub
add
jns
mov
sbb
hlt
loope
pop
lock
std
stc
(bad)
and
mov
in
jecxz
mov
fsubrp
or
inc
sbb
xchg
jno
sbb
cmp
test
(bad)
inc
xchg
xchg
pop
fistp
jo
in
fs
retf
jmp
jmp
xchg
in
lahf
into
dec
mov
shr
xchg
dec
in
adc
test
adc
sub
sbb
mov
inc
inc
icebp
sbb
add
rcr
or
call
(bad)
les
(bad)
call
jg
inc
(bad)
fst
cs
leave
ret
adc
inc
or
das
ss
mov
adc
mov
or
mov
push
cmp
arpl
pop
mov
std
add
call
fld
sbb
aad
add
jno
or
mov
xchg
gs
leave
mov
pop
rcr
cmps
aad
and
imul
xchg
sbb
aaa
mov
popa
inc
bound
ret
mov
aad
stos
cmc
jg
and
std
inc
xchg
mov
movs
inc
lods
and
shl
and
pop
mov
add
scas
add
sbb
jnp
nop
pop
mov
cmp
push
add
movs
jle
mov
es
and
xor
ins
cmp
(bad)
rol
std
adc
gs
lds
and
xchg
cmp
adc
jb
out
xchg
dec
dec
outs
inc
js
add
dec
lahf
mov
add
mov
sbb
jecxz
mov
xor
xlat
mov
dec
cld
nop
pop
push
xchg
push
adc
adc
xchg
push
and
adc
arpl
sbb
and
dec
sub
leave
xchg
push
loop
or
fidiv
vmulpd
dec
dec
(bad)
cdq
mov
add
and
enter
push
push
retf
fcom
inc
lea
dec
push
and
setge
adc
or
lea
daa
adc
mov
es
jge
or
jg
not
dec
enter
inc
mov
daa
dec
or
inc
(bad)
scas
call
or
inc
getsec
and
xchg
cs
xor
lea
add
jns
dec
leave
test
dec
loop
(bad)
movs
push
in
push
xor
xchg
xchg
call
push
sub
xchg
in
or
xor
jmp
js
pusha
xchg
xchg
add
dec
push
lods
sbb
mov
sub
pop
push
mov
mov
pop
or
inc
retf
mov
xchg
inc
ret
add
or
xchg
mov
gs
pop
inc
out
leave
add
dec
inc
xchg
aas
fwait
popf
cdq
adc
sbb
sub
xor
mov
fldenv
mov
add
pop
xchg
xchg
add
and
cmp
or
(bad)
sub
and
add
in
cmps
lods
outs
pop
xchg
pop
repz
xor
add
rcr
push
xor
rcr
jecxz
lea
and
leave
jmp
jmp
repz
icebp
xor
or
xchg
push
sbb
fwait
xchg
and
and
iret
jae
jae
mov
or
cmp
cmp
popf
cmp
mov
shl
cmp
fisubr
inc
ror
bnd
out
jns
mov
(bad)
sub
fist
movs
or
in
sar
dec
or
sbb
aad
xchg
xchg
outs
dec
lds
xor
mov
bound
and
jns
es
dec
jae
xchg
stc
push
cmc
add
mov
push
adc
mov
xor
sbb
stos
cld
xchg
aad
out
cmc
sub
dec
xchg
test
stc
jge
adc
push
mov
mov
cmp
inc
inc
add
mov
mov
js
pop
icebp
xchg
ins
fwait
jmpw
add
and
sbb
push
mov
aas
das
dec
sar
loopne
sbb
xor
dec
sbb
push
lea
pushf
xchg
nop
ret
jmp
xor
outs
ret
pop
lods
call
pop
das
xor
mov
aad
ret
inc
and
cmp
xchg
or
xor
xchg
or
xor
daa
cmps
xchg
lock
jo
cmp
jle
add
cmp
and
add
xchg
dec
cmps
jb
push
inc
lds
lods
pop
dec
and
push
pop
ja
xor
jbe
or
mov
cmp
or
inc
xchg
xor
pop
cli
rcl
imul
cmp
xchg
mov
jmp
stos
cmp
les
push
xchg
in
in
adc
rcr
dec
ret
dec
pop
daa
inc
in
mov
push
cmp
push
lock
clc
fist
aas
or
fstp
fld
mov
arpl
push
js
push
pop
push
mov
cmp
jp
add
fwait
add
stos
cmps
mov
mov
sbb
out
cli
imul
jo
and
ds
pop
rcl
(bad)
aaa
ss
sub
or
addr16
jmp
cld
je
and
test
call
sbb
add
scas
or
cwde
es
imul
in
sahf
mov
add
mov
jl
push
lea
arpl
push
sub
or
loope
push
(bad)
ror
popf
sub
cmc
or
sbb
pop
movs
mov
xchg
or
or
pop
pop
arpl
int
cmp
popf
mov
and
or
dec
lds
outs
fimul
inc
push
into
jno
adc
push
xor
inc
add
xor
add
arpl
mov
in
add
add
xlat
inc
or
add
inc
pop
ins
cdq
jns
(bad)
jmp
mov
add
scas
push
cmp
push
ds
sahf
xor
cmp
add
shl
or
xor
jb
sbb
xchg
inc
ins
daa
mov
mov
and
or
call
and
sub
lar
push
inc
test
mov
or
or
or
mov
fs
cmp
add
in
sbb
es
in
icebp
pop
xor
xchg
test
call
gs
dec
daa
fucom
loope
call
xor
cmp
cs
ret
sbb
aaa
(bad)
enter
fnsave
gs
pop
int
adc
popf
es
ret
movs
inc
dec
add
or
mov
pop
sbb
fsub
loope
or
aas
sbb
test
add
dec
jae
jno
cmp
adc
or
in
icebp
stc
or
mov
add
sahf
xchg
inc
sbb
(bad)
mov
leave
addr16
in
and
push
xor
sbb
sbb
inc
add
xchg
push
(bad)
rol
ficomp
mov
retf
addr16
mov
rol
pop
out
inc
rol
push
xor
sub
das
and
push
out
popf
xchg
jno
hlt
adc
ins
icebp
ja
xchg
or
sbb
mov
lods
(bad)
mov
sbb
in
std
cmc
mov
leave
int3
lds
std
call
add
xchg
mov
cmp
jmp
adc
xchg
(bad)
ja
sub
and
mov
call
xchg
xchg
dec
mov
jb
outs
fisttp
mov
xchg
push
inc
in
mov
or
aaa
xor
pop
adc
or
(bad)
lea
adc
aam
cli
lods
add
mov
(bad)
call
cmp
int
xchg
(bad)
mov
inc
add
or
push
fldln2
mov
xor
push
pushf
inc
(bad)
or
imul
stos
es
push
leave
push
or
(bad)
test
fsub
shr
cs
bound
ret
mov
dec
adc
mov
and
dec
ins
add
adc
mov
ror
adc
mov
mov
mov
push
and
inc
test
cwde
aad
(bad)
ins
gs
in
(bad)
mov
sti
cmp
cmp
retf
pop
fcmove
jle
dec
or
inc
mov
aam
(bad)
or
mov
mov
mov
inc
mov
xor
nop
int
(bad)
adc
pop
iret
jbe
mov
adc
data16
cmc
adc
jb
pop
shr
pop
mov
ret
rol
(bad)
xor
add
leave
enter
xchg
mov
push
dec
cmp
mov
int
push
data16
icebp
pop
mov
loop
sti
pushf
mov
pop
mov
adc
xor
add
and
or
gs
or
retf
sbb
push
mov
leave
mov
mov
push
lods
xchg
aad
popf
int3
cmps
sbb
js
movs
jne
xor
call
jb
pop
fidivr
mov
call
adc
jnp
(bad)
sbb
into
fdivr
adc
xor
retf
adc
and
adc
ffree
in
neg
mov
ror
in
mov
xor
jmp
adc
sbb
scas
cmc
cmps
(bad)
fisttp
test
ss
pop
sti
sub
push
cmp
push
sbb
push
into
mov
adc
repz
push
jne
(bad)
jnp
ficomp
mov
shl
test
out
retf
mov
ficomp
jbe
fs
not
or
imul
and
cld
mov
cld
popf
out
mov
fst
xor
cwde
(bad)
inc
mov
sbb
xchg
imul
add
or
mov
repz
enter
je
jge
data16
je
shr
or
fnsave
xchg
push
mov
xchg
adc
leave
inc
popa
push
dec
add
ins
cmps
es
add
add
add
dec
adc
jbe
cmp
push
and
rol
aaa
in
cmps
push
icebp
xor
inc
aad
mov
outs
bswap
xchg
mov
adc
inc
pop
push
xor
(bad)
hlt
lods
lea
nop
pop
add
xor
cs
mov
cmps
cmp
dec
cs
mov
mov
xchg
not
(bad)
fs
xor
sbb
xor
dec
cmp
jbe
gs
imul
call
stc
add
rcl
stc
icebp
push
arpl
push
scas
pop
fistp
call
leave
fs
pop
mov
add
leave
in
aas
mov
imul
bound
sbb
stos
dec
add
and
std
jmp
and
or
in
dec
or
ja
into
adc
data16
sub
inc
loope
aam
sbb
inc
rcl
push
ror
adc
push
or
xchg
or
sub
and
push
add
xchg
jmp
push
stos
xor
sbb
adc
leave
cdq
shr
js
add
js
pop
mov
inc
mov
ins
jg
xchg
mov
add
or
jmp
les
dec
shl
inc
pop
jno
(bad)
shl
cmp
push
sbb
xchg
sbb
sar
call
add
adc
jp
das
or
cmp
push
lea
push
scas
leave
jb
outs
xor
inc
mov
jb
lds
jo
mov
jno
add
pushf
lods
adc
pop
xor
xchg
stos
add
and
ror
sub
cdq
mov
pop
pop
jbe
xchg
mov
inc
mov
xor
jbe
stos
mov
xlat
and
sbb
mov
fdivr
aas
mov
fwait
sbb
mov
mov
lahf
jne
mov
and
fcomp
mov
jnp
jne
pusha
sbb
retf
pop
lock
aad
sbb
daa
jo
sub
lds
cmp
push
test
and
clc
xabort
cmps
popa
inc
repnz
inc
test
leave
add
pusha
mov
mov
jle
push
sub
mov
xchg
or
test
xlat
push
dec
and
enter
or
aas
in
in
pop
mov
bound
addr16
pop
stc
adc
push
xchg
sar
test
add
imul
xor
fs
clc
movs
mov
pop
in
lea
mov
and
loop
pop
icebp
jl
adc
pop
push
jg
(bad)
dec
fiadd
test
popf
jns
mov
(bad)
pop
in
mov
xor
push
ds
arpl
inc
arpl
push
in
add
sbb
retf
inc
adc
cmp
in
rcl
adc
gs
ss
jmp
and
in
daa
pop
in
jmp
xor
retf
sti
and
dec
dec
and
leave
jae
fiadd
mov
and
lahf
icebp
cmc
icebp
adc
sbb
sar
std
std
retf
icebp
xchg
test
mov
ret
mov
sahf
sub
dec
mov
sbb
es
mov
add
in
cwde
dec
mov
in
btr
push
daa
daa
fwait
xchg
xor
(bad)
add
adc
and
rol
dec
sub
pop
jae
add
push
test
(bad)
je
dec
(bad)
lds
jne
daa
adc
or
loopne
ds
add
mov
nop
ss
test
mov
gs
pop
loopne
adc
punpckhdq
add
cmp
fdivr
and
lods
push
arpl
sbb
add
cli
rcr
mov
adc
out
fstp
sbb
adc
sbb
push
and
fstp
or
loope
inc
inc
cmp
in
xlat
add
mov
or
dec
ret
mov
fnstsw
inc
add
xlat
(bad)
add
adc
sub
xchg
mov
jo
adc
xchg
gs
repz
cld
mov
or
mov
add
mov
xor
mov
xchg
adc
and
mov
push
jbe
movs
add
push
rcl
and
adc
and
cwde
cmps
mov
push
rcr
inc
cmp
jecxz
test
movs
push
jno
sub
pop
push
mov
mov
push
pop
push
cmp
xchg
mov
sahf
aad
mov
dec
xchg
inc
daa
iret
pop
xchg
xchg
adc
data16
mov
outs
or
imul
and
push
test
enter
cdq
lods
add
push
ss
jecxz
daa
loopne
cmc
mov
xor
adc
loope
test
ss
pop
cmp
jae
(bad)
mov
xchg
and
pop
or
add
into
mov
adc
adc
mov
aam
cmp
sub
sbb
sub
data16
dec
bound
jno
fcmovnb
pop
sbb
js
outs
sbb
in
lahf
div
sbb
push
fs
mov
dec
jo
inc
add
xchg
int
pop
imul
xchg
or
arpl
xchg
loop
sbb
mov
or
in
stos
retf
aaa
in
pop
mov
jnp
in
popf
cmp
jb
aas
popa
mov
scas
or
xor
adc
adc
sub
out
ins
in
aam
inc
add
shl
sbb
or
int3
or
into
jp
and
add
in
pop
sbb
call
bswap
mov
sbb
or
xchg
or
sar
push
addr16
and
mov
sbb
icebp
and
cmc
cs
ret
test
inc
add
mov
xor
jmp
sub
inc
jp
or
add
mov
icebp
xor
xchg
ins
test
add
jno
test
add
or
xchg
jmp
gs
sbb
mov
or
popf
mov
xchg
adc
js
push
lock
dec
pop
dec
mov
icebp
mov
xchg
and
mov
mov
mov
fstp
mov
imul
into
(bad)
xor
sbb
dec
lea
xchg
and
xor
rcl
inc
fwait
movs
mov
cs
push
loopne
mov
pop
pop
inc
push
dec
add
jno
inc
inc
push
mov
cld
(bad)
and
adc
in
adc
xor
xor
fld
xor
or
rol
lock
call
sbb
xchg
popf
mov
(bad)
out
xor
push
loop
mov
mov
mov
or
xchg
or
loope
xchg
mov
movs
ja
mov
mov
loop
xchg
sbb
add
sub
je
or
xchg
mov
mov
inc
cmp
push
imul
or
cmc
mov
and
sub
mov
mov
and
mov
xchg
mov
retf
imul
cli
xchg
aaa
xlat
test
shr
pop
ror
dec
ja
xchg
xchg
imul
xor
dec
rcr
std
pop
sub
sub
sub
mov
lea
inc
test
xor
or
out
call
adc
lea
xor
add
ret
add
fwait
sbb
std
mov
adc
jbe
sti
mov
cmp
out
add
mov
ret
arpl
test
pop
jae
xchg
xchg
nop
adc
xor
fwait
ret
sbb
bound
fdiv
out
xor
prefetchnta
dec
xor
sub
xchg
outs
adc
jne
fild
push
xchg
xchg
push
mov
mov
cmp
mov
sbb
test
push
jmp
stc
inc
or
cli
inc
dec
sbb
push
gs
inc
add
push
cld
scas
or
dec
push
xchg
in
xchg
push
add
outs
pop
in
mov
xchg
or
ficom
int3
mov
in
out
xchg
jle
test
(bad)
mov
div
ret
sbb
adc
jae
push
test
xchg
dec
(bad)
fcmovnu
mov
ds
inc
adc
aaa
ret
push
out
dec
popa
retf
xchg
out
and
fsin
inc
inc
pop
adc
ss
jne
das
xchg
adc
xchg
mov
jae
adc
les
push
popf
sbb
inc
and
jl
push
fbld
mov
xor
sbb
or
mov
xor
cmp
and
sub
sub
imul
lods
popa
ins
retf
repz
or
xchg
out
mov
sub
scas
and
push
shl
xchg
pop
add
loope
daa
cmp
push
aas
clc
mov
leave
dec
(bad)
add
pop
es
aad
mov
mov
fldenv
cmps
mov
and
fld
mov
inc
xor
loopne
call
push
adc
adc
dec
dec
adc
enter
pop
in
adc
push
mov
jae
cmp
or
icebp
cli
mov
adc
inc
cmp
dec
dec
aaa
imul
hlt
lock
cmp
and
xchg
or
jle
shl
mov
or
bound
dec
add
fdiv
push
cmc
gs
push
add
xchg
push
sbb
xor
icebp
mov
jmp
or
pop
sub
lahf
addr16
sub
stos
enter
pop
lods
sbb
mov
add
mov
dec
mov
sahf
in
imul
sub
fdiv
es
fs
and
inc
lods
and
cmp
in
jae
hlt
pop
hlt
in
cli
add
and
xor
push
ins
adc
add
xor
hlt
in
or
jno
and
inc
mov
(bad)
add
push
jecxz
nop
std
hlt
call
hlt
fnsave
or
popf
or
shl
pusha
cdq
xchg
je
inc
xor
mov
in
data16
je
int3
pop
push
dec
add
bound
sbb
pusha
lds
lds
loopne
clc
or
cmp
out
adc
inc
xchg
clc
out
adc
inc
inc
retf
leave
inc
mov
test
pop
push
fs
cmps
push
add
lods
clc
xchg
sub
aam
mov
pop
fpatan
iret
leave
or
cli
in
jbe
xor
aad
dec
or
stos
repnz
jmp
add
and
xchg
retf
cwde
pop
stos
cmp
mov
outs
push
fmul
mov
das
pusha
mov
in
inc
cmp
(bad)
mov
pop
shl
cmp
das
mov
push
adc
stc
or
jmp
arpl
xchg
add
push
test
nop
stc
out
add
cmp
push
ins
mov
sub
and
push
jae
jp
loopne
sti
stc
sti
xchg
xchg
mov
je
popa
inc
addr16
push
(bad)
movs
xchg
inc
loopne
daa
pop
fst
rol
xor
inc
push
or
sub
icebp
daa
mov
jae
pop
or
fist
jbe
std
test
lock
sbb
mov
jo
sbb
fstp
es
mov
cs
sub
push
add
inc
sbb
in
sti
aad
aad
addr16
add
cmp
mov
test
dec
dec
clc
imul
movs
repnz
adc
lock
nop
or
sbb
push
push
push
rol
jae
adc
add
adc
xor
out
icebp
mov
sbb
es
adc
shl
xor
dec
jae
xchg
sbb
and
and
push
and
add
adc
push
lea
into
xchg
adc
sub
xor
push
inc
cmp
not
into
and
add
fisttp
dec
cmp
retf
or
enter
cdq
int
or
or
in
mov
dec
popa
sbb
loope
fwait
adc
fldenv
add
or
or
iret
cmovg
fisub
js
pushf
and
jp
sub
xchg
ja
mov
adc
test
test
or
push
mov
and
add
add
add
pusha
pop
xchg
xchg
push
mov
and
call
dec
adc
test
sbb
or
add
add
cmp
add
gs
cmp
pop
or
add
leave
or
push
in
or
add
jp
add
xchg
add
(bad)
dec
icebp
xchg
pop
add
add
mov
in
in
inc
popa
inc
push
inc
add
mov
add
sbb
cmps
adc
sbb
cmp
(bad)
push
xchg
sbb
xor
and
add
or
test
shr
sub
enter
mov
jb
xor
sub
or
mov
cdq
mov
sbb
or
push
mov
fiadd
xlat
sbb
mov
cmc
popa
retf
repnz
xchg
push
dec
es
and
xchg
mov
mov
jno
or
popa
test
or
fcom
pop
sbb
cmps
rcl
in
int
pop
sbb
nop
dec
sbb
xor
movs
(bad)
es
js
int
retf
add
sub
or
(bad)
imul
mov
jp
add
mov
(bad)
rol
xchg
pushf
add
out
mov
cli
mov
dec
or
lock
and
loope
mov
in
les
(bad)
sahf
les
xchg
(bad)
mov
scas
adc
or
and
fs
daa
ins
and
push
iret
fcom
xchg
repnz
or
popa
add
(bad)
xor
xor
push
repnz
pusha
add
or
mov
mov
enter
add
jb
dec
ins
(bad)
xor
sbb
xchg
in
rcl
inc
xor
icebp
sti
mov
push
(bad)
leave
xor
div
sbb
rol
popa
xchg
into
mov
mov
jae
xor
sbb
adc
repz
mov
cmc
adc
popf
xor
movs
clc
das
sbb
sub
mov
pop
das
pop
mov
mov
sub
in
ror
pop
repnz
inc
push
icebp
dec
(bad)
jns
push
in
js
(bad)
icebp
add
xchg
add
repz
or
xchg
lea
(bad)
fst
inc
adc
and
sbb
ss
stos
and
xchg
jns
or
add
popa
sub
mov
mov
xchg
adc
inc
lea
dec
imul
rcr
or
xchg
sbb
scas
push
shr
pop
push
jno
lea
je
sub
daa
cmp
lahf
adc
xchg
(bad)
aam
add
jo
push
out
ss
es
and
push
es
adc
jae
sbb
adc
xor
pop
pop
sbb
xchg
add
add
rol
imul
adc
add
inc
adc
dec
aad
xchg
std
xchg
mov
or
mov
dec
jl
push
adc
adc
ins
pop
lea
in
in
scas
mov
in
popf
mov
push
jmp
imul
and
or
xor
cmp
test
inc
adc
sub
mov
in
add
sbb
push
inc
adc
inc
adc
outs
test
fidiv
psrad
outs
call
pop
in
shl
dec
pop
icebp
mov
leave
ret
adc
cmp
mov
inc
fbld
loopne
inc
sbb
out
scas
and
popa
adc
cs
movs
pop
mov
add
inc
jns
dec
in
add
lea
ins
mov
sub
push
pop
je
xor
(bad)
jne
scas
mov
or
mov
mov
inc
cmp
and
inc
call
repz
inc
xchg
jbe
std
push
cmp
jge
lods
lods
je
sub
std
mov
test
adc
stc
or
jp
push
repnz
std
mov
mov
loope
fiadd
das
in
mov
and
std
std
push
adc
into
mov
imul
jle
sbb
adc
(bad)
cmc
add
adc
arpl
sbb
dec
mov
adc
pop
std
cmp
sub
(bad)
mov
xor
fld
js
push
mov
pop
add
sbb
mov
mov
cmovns
push
imul
add
push
mov
dec
lahf
add
sub
std
loope
std
in
in
std
test
pop
lods
push
jo
repz
and
add
(bad)
in
sub
adc
in
cmp
std
push
dec
sub
xchg
pop
repz
dec
pop
std
retf
jp
std
aad
sar
in
adc
or
adc
xor
int
mov
sbb
push
es
jp
mov
add
rol
stos
or
or
cmp
or
or
dec
repz
push
dec
jns
lds
sbb
sub
mov
add
std
sub
push
lods
in
push
pusha
sti
adc
cmp
dec
add
xor
xor
push
test
cmp
xor
and
unpcklps
push
and
inc
lock
stc
sbb
dec
jo
inc
push
jbe
push
cdq
sbb
sar
push
imul
xchg
cmc
ss
shl
cs
dec
and
add
mov
jne
rcr
or
sub
jg
and
mov
or
cmp
in
in
pop
pop
dec
inc
inc
inc
and
ins
or
popa
pop
ins
sbb
imul
or
hlt
jg
pushf
aam
or
inc
inc
adc
dec
and
in
add
call
cmp
(bad)
aaa
pop
fsub
sbb
lds
jp
mov
inc
adc
test
mov
mov
test
jmp
cmp
out
aaa
popf
dec
pop
xor
sbb
cmp
repnz
jno
and
mov
add
loope
retf
cmp
sub
cmp
in
sbb
and
imul
push
ret
enter
pop
jge
pop
leave
and
dec
pop
adc
and
popa
and
leave
inc
cmp
fdivr
sbb
inc
sahf
mov
jge
addr16
and
sbb
or
gs
and
sbb
and
add
xchg
xchg
dec
add
add
dec
xor
ins
sub
das
pop
mov
mov
or
out
xchg
jb
or
cmps
xor
xchg
mov
mov
jo
mov
sar
jno
out
and
cmp
std
sbb
add
push
mov
or
(bad)
pop
jns
sbb
pop
dec
pop
mov
mov
dec
call
sbb
bound
sub
or
adc
add
cld
xchg
cmp
daa
gs
fstp
dec
stc
aad
rol
xchg
aaa
cmps
scas
jb
mov
adc
push
xor
xor
add
lea
mov
call
aaa
fst
push
add
aam
je
sub
mov
inc
movs
xor
(bad)
fs
jne
xor
mov
or
lods
loopne
fmul
push
pusha
inc
jo
bound
arpl
add
push
sbb
mov
rcr
push
movs
add
add
dec
inc
mov
fidivr
mov
sub
xchg
aas
or
jo
sbb
add
imul
dec
pop
cmp
mov
xor
adc
or
dec
pop
cmps
xchg
icebp
ss
or
sub
cmp
xchg
sbb
pop
push
in
mov
adc
jle
push
imul
pop
outs
jmp
xor
jmp
mov
in
push
movs
test
test
cs
xor
popa
ror
loopne
add
shl
cmp
jae
add
test
in
xchg
mov
add
mov
mul
pop
pushf
push
sar
add
sar
bound
or
xchg
cmp
cmp
leave
fidivr
in
leave
or
dec
inc
(bad)
shr
cmp
push
fild
xchg
sub
movs
mov
ret
or
dec
jno
fisttp
inc
adc
pop
sub
je
shr
pop
fwait
add
pop
mov
sub
and
sbb
jmp
popa
ja
ss
jns
sar
stc
arpl
sbb
in
das
in
dec
push
adc
push
sbb
or
fild
loope
mov
jp
fldenv
leave
pusha
mov
imul
ja
sbb
in
gs
fadd
(bad)
or
and
ror
cmp
or
leave
ret
dec
push
and
and
cmp
and
mov
imul
or
les
jo
outs
xor
pusha
add
sbb
jmp
mov
arpl
enter
and
in
bound
mov
mov
test
jno
scas
add
mov
inc
ret
mov
inc
mov
xchg
push
jge
icebp
inc
pop
sbb
jmp
xchg
loope
or
js
xor
mov
add
or
clc
or
push
push
push
push
and
add
or
aas
xor
shl
jno
test
ret
pop
add
or
stc
jle
dec
adc
xor
in
dec
sub
in
sub
pop
xchg
fisubr
or
leave
and
push
pop
xchg
inc
pop
test
push
(bad)
cmc
push
pop
leave
xchg
sbb
in
jmp
je
ins
and
jne
lea
or
test
jnp
sbb
inc
add
cdq
add
jo
jno
dec
push
aaa
push
lock
and
test
in
and
ror
leave
add
add
mov
es
xchg
lods
xchg
es
es
add
ins
es
imul
mov
loopne
xor
gs
mov
je
(bad)
(bad)
cmps
jp
cli
sti
cld
add
sub
popf
sub
mov
xchg
or
das
dec
setno
add
xchg
out
gs
add
add
in
in
jge
add
jp
add
jmp
jmp
xchg
add
jge
in
cmp
mov
sub
xchg
shl
and
push
add
mov
inc
xor
mov
and
jl
push
dec
and
pushf
and
dec
push
inc
and
test
or
imul
jp
adc
cmp
push
sub
pop
sub
pop
cmps
ja
sahf
outs
sub
mov
adc
dec
push
add
and
cmp
dec
in
mov
sub
stos
xchg
lea
jmp
das
sub
inc
dec
fbld
pop
mov
mov
push
loopne
or
nop
add
sub
sub
jmp
push
das
or
outs
mov
xor
addr16
xacquire
dec
push
dec
rcl
retf
adc
cmp
xchg
or
in
es
push
or
inc
jae
imul
jle
in
or
pop
das
lds
(bad)
fcomp
xor
inc
call
or
sbb
out
jl
ror
sbb
dec
pop
adc
(bad)
add
pop
cmp
idiv
cmc
sub
test
pop
pusha
sbb
xor
push
daa
sub
or
ins
or
or
jmp
addr16
push
xchg
dec
push
imul
or
or
data16
cmp
movs
gs
sub
inc
and
sub
and
and
adc
push
adc
xor
stos
add
adc
or
nop
gs
push
push
push
inc
sar
inc
jns
push
dec
pop
pop
bound
inc
sbb
arpl
mov
out
and
jo
add
cmp
mov
mov
icebp
adc
add
mov
test
jne
inc
test
nop
push
cwde
dec
push
inc
or
adc
mov
mov
bound
push
sbb
xchg
aaa
repz
test
sbb
xchg
or
adc
xlat
add
xchg
and
pop
xchg
or
dec
xchg
sub
sub
leave
ror
or
bound
xchg
mov
(bad)
or
mov
push
cs
push
jmp
jnp
pop
pop
push
fistp
call
or
cmp
popa
(bad)
aad
pop
xor
arpl
into
and
fwait
pop
xor
ret
dec
xchg
and
adc
fst
wbinvd
xor
inc
stos
and
movs
paddusb
out
xchg
xor
mov
or
and
dec
adc
xor
dec
mov
mov
xchg
sub
stc
adc
sub
push
js
push
push
or
mov
mov
cmp
add
icebp
and
shl
push
icebp
xor
inc
ins
retf
mov
imul
mov
das
nop
jmp
and
adc
or
daa
mov
xor
push
xchg
sbb
aaa
push
add
adc
ds
sbb
mov
and
retf
rol
and
cdq
mov
jp
sub
test
xor
cmp
outs
mov
imul
test
and
xchg
repz
xor
push
add
ins
imul
bound
icebp
jns
pusha
popa
clc
mov
jmp
xor
sbb
fwait
sub
pop
mov
and
add
in
xor
sub
call
dec
bswap
and
inc
mov
gs
add
push
inc
xor
mov
ins
lds
je
cmp
or
pop
pop
arpl
adc
das
jp
pop
les
pop
adc
add
addr16
push
inc
lahf
dec
add
lods
mov
mov
leave
pop
enter
dec
add
add
lods
fstp
lds
xchg
or
xchg
add
sbb
or
mov
add
jne
jno
mov
sbb
xchg
jge
mov
retf
xor
and
outs
daa
mov
pop
mov
xchg
lods
fadd
cdq
xor
or
mov
push
adc
jg
loopne
aam
cmp
mov
(bad)
jle
xchg
test
imul
(bad)
imul
bound
and
mov
loope
mov
mov
dec
fs
inc
inc
aaa
push
sbb
ja
gs
xor
mov
js
gs
dec
cmp
arpl
ins
js
push
sub
push
push
pop
push
adc
dec
push
inc
xor
pop
adc
adc
bound
push
mov
(bad)
loop
adc
pop
cmp
ss
ins
xchg
cmps
inc
ins
sub
xchg
mov
or
movs
dec
jbe
mov
adc
mov
setp
pop
(bad)
rcl
enter
add
pop
add
or
retf
mul
xor
mov
lea
cs
cmp
mov
xchg
push
sbb
inc
dec
repnz
cmp
shl
mov
sahf
std
or
mov
push
aam
mov
cmp
dec
addr16
loope
les
dec
jbe
jmp
jo
xor
add
add
lds
popa
and
dec
or
das
add
fwait
arpl
dec
sbb
lea
or
jne
and
ds
add
xchg
mov
or
shr
mov
sub
mov
(bad)
cmp
xchg
in
or
cmp
push
jo
aaa
lods
and
dec
repz
iret
aad
cld
and
cmp
inc
sbb
(bad)
(bad)
out
loop
adc
or
(bad)
cs
xor
push
test
jl
stc
pop
pop
cmp
sbb
movs
std
and
in
gs
add
sub
add
sbb
call
dec
cmp
fsub
(bad)
or
pop
ins
into
add
jns
rcr
retf
imul
sbb
or
push
dec
or
inc
test
push
jns
aaa
or
leave
xchg
sbb
jns
or
jge
lds
daa
jp
fidivr
std
cmp
sbb
adc
enter
ins
sbb
mov
pusha
or
rcl
sbb
ds
xchg
xor
mov
sub
xor
mov
cli
xchg
mov
mov
loope
mov
xchg
add
push
xchg
add
xchg
push
pop
pop
cmp
imul
jno
inc
pmulhw
jge
test
add
lahf
mov
adc
and
mov
inc
cmp
nop
or
inc
dec
dec
push
mov
inc
inc
dec
or
cmp
push
cmp
test
dec
inc
dec
dec
dec
cmp
dec
dec
inc
or
jmp
inc
dec
inc
dec
dec
dec
cmp
inc
inc
inc
or
inc
ja
push
in
dec
push
dec
jo
dec
inc
inc
inc
inc
dec
dec
push
dec
dec
adc
adc
dec
jb
dec
dec
inc
dec
push
adc
cmp
pop
ret
cmp
adc
mov
adc
emms
adc
cs
ja
cmp
adc
sahf
mov
xchg
loope
popa
cmp
dec
push
ret
ins
and
jle
test
and
or
adc
or
jno
cmp
sbb
cmovle
push
into
loope
inc
and
adc
pop
mov
inc
dec
inc
inc
inc
adc
mov
push
pop
(bad)
mov
int
inc
pop
xchg
leave
rcl
rcl
xor
add
push
dec
and
or
icebp
sub
stos
push
in
mov
and
scas
sahf
daa
mov
xor
push
mov
inc
xchg
aad
pop
pop
lahf
inc
mov
pushw
scas
jb
and
dec
or
jbe
sbb
jno
sub
jbe
std
jmp
ror
and
je
dec
sbb
add
jne
add
inc
fstp
inc
inc
xchg
adc
xor
adc
or
loope
aad
daa
imul
stc
in
jbe
add
add
in
or
ret
data16
adc
cwde
sbb
in
addr16
xor
rol
rol
lock
xchg
xor
cmp
sbb
add
or
or
aam
pop
shl
rol
xor
sbb
mov
and
js
push
ds
dec
mov
fstp
mov
or
pusha
nop
inc
popf
in
sub
mov
mov
sub
and
dec
rcr
shl
mov
xor
inc
and
adc
add
repnz
popf
mov
mov
das
adc
mov
iret
pop
adc
jecxz
xchg
inc
inc
scas
xor
add
push
aad
aam
adc
and
fdiv
xor
xchg
push
cmp
aad
and
call
xchg
xchg
dec
dec
inc
add
pop
xor
pop
jbe
or
sub
jae
retf
mov
and
xchg
cmp
mov
ins
les
leave
push
ds
sbb
sar
test
pop
mov
adc
scas
jecxz
xchg
sbb
icebp
push
pop
mov
aad
pop
repnz
shl
fsubr
gs
or
push
lods
pop
shr
outs
loope
push
paddsw
xor
sbb
sbb
pop
mov
aaa
inc
pop
gs
cmp
cmps
(bad)
or
mov
mov
loope
or
popf
xchg
xchg
in
jmp
loope
fdiv
or
inc
add
or
sub
sbb
pop
or
mov
ins
and
mov
inc
sub
pop
cmp
sbb
ror
or
pop
scas
push
adc
pop
aas
fld
dec
and
das
push
push
inc
add
jno
mov
imul
loop
mov
enter
xchg
add
dec
rep
outs
stc
mov
shl
xor
add
int3
sbb
push
mov
inc
cmps
cmp
xor
lea
ins
stc
imul
movs
or
aas
cmc
jp
loope
sar
or
jns
mov
bound
mov
outs
xor
push
dec
and
lds
dec
std
adc
and
push
dec
sub
sbb
mov
push
je
push
fnstcw
adc
pop
adc
push
pop
mov
sbb
fild
dec
jb
and
popa
pop
xor
inc
in
add
retf
and
repz
add
dec
xlat
cmps
inc
dec
xor
push
lods
pop
aad
sbb
andnps
sbb
shl
(bad)
enter
in
sbb
dec
and
mov
out
xchg
lahf
add
mov
and
push
pop
test
inc
and
test
dec
movs
sbb
sbb
cmovbe
pop
add
cmp
dec
jne
in
sub
dec
aas
leave
adc
movs
add
sbb
dec
xchg
rol
dec
out
into
add
jbe
cwde
mov
xor
mov
inc
ins
rcl
sbb
xchg
sbb
pushf
pop
jl
pop
call
xlat
fild
push
pop
jl
add
outs
fnstcw
mov
add
add
mov
xor
leave
adc
mov
add
adc
dec
sub
pop
cmp
jp
test
pop
dec
cwde
int3
mov
sbb
pop
jne
jno
leave
pop
(bad)
imul
test
pusha
ret
dec
jg
add
es
pop
inc
dec
push
or
pop
sbb
pop
ror
push
mov
pop
leave
dec
dec
mov
pop
adc
sbb
(bad)
in
mov
call
add
pop
mov
mov
shr
inc
inc
fadd
imul
and
adc
push
rcl
popa
mov
mov
je
and
inc
rcl
adc
xor
and
(bad)
loope
repnz
rcl
pop
inc
sub
ror
in
mov
cmp
push
test
inc
ret
pusha
and
inc
je
test
dec
daa
jp
in
arpl
arpl
or
mov
invd
or
ret
push
popa
pop
adc
lods
ficomp
mov
popa
int3
fistp
sbb
mov
imul
sub
or
inc
sub
movs
jp
xchg
cmp
or
pop
cmp
xchg
cmp
cs
push
push
pop
or
jns
inc
(bad)
int
inc
dec
jmp
dec
or
add
add
xchg
push
popa
popf
and
or
push
or
dec
imul
add
jns
jno
add
add
and
and
adc
test
popf
bswap
mov
adc
iret
ins
pop
mov
adc
jo
pop
add
mov
xchg
xor
in
lods
inc
push
adc
mov
add
mov
adc
mov
rol
adc
shl
in
lea
xor
rcl
and
add
dec
dec
push
mov
in
in
or
adc
push
dec
push
dec
xor
dec
add
pop
sar
xor
gs
cmp
aaa
pop
sub
push
push
sub
mov
xchg
test
dec
and
inc
add
fild
lock
inc
rcl
xchg
aad
inc
dec
or
lods
(bad)
mov
mov
outs
inc
inc
call
sbb
or
inc
imul
inc
sbb
lahf
mov
xor
loop
mov
xor
xchg
mov
cmp
movs
popa
and
data16
popa
and
mov
inc
ins
xchg
test
adc
es
inc
ret
sbb
push
xchg
inc
sub
adc
out
fldcw
leave
adc
push
inc
fisub
add
data16
out
jno
push
xchg
(bad)
cmc
das
jmp
mov
popa
xor
mov
inc
add
xchg
xchg
mov
inc
or
jmp
das
out
mov
mov
dec
call
lock
adc
push
test
mov
imul
cmps
adc
inc
and
jecxz
scas
and
and
or
and
cli
xchg
jmp
cmp
push
sub
fist
ret
fstp
or
pop
xor
add
adc
call
xor
jmp
or
inc
mov
out
mov
mov
sub
pop
aad
dec
or
inc
inc
cmc
sub
or
sub
xlat
call
rol
push
fcom
xchg
push
cmovs
sbb
btc
inc
inc
dec
sbb
cmp
fld
retf
sbb
inc
cmovl
and
mov
add
xor
xchg
lods
jne
sbb
sub
jne
or
in
adc
dec
xor
inc
adc
dec
stc
xchg
mov
imul
stc
xchg
adc
add
or
inc
and
cli
adc
inc
lea
or
xor
in
pop
adc
dec
push
ins
and
mov
in
and
in
cs
inc
lahf
adc
push
adc
xor
adc
aad
leave
cmp
movsx
stos
inc
push
sbb
sub
push
mov
cmp
push
xor
ss
shl
imul
fstp
mov
xor
mov
ds
movs
inc
ror
(bad)
or
mov
push
jg
shl
add
je
pop
push
loopne
and
inc
pusha
or
add
fisttp
inc
mov
ja
cmps
inc
and
enter
sar
es
and
or
sti
test
mov
pusha
fdiv
xlat
stos
mov
push
sub
arpl
mov
out
imul
mov
and
les
pop
mov
adc
cdq
push
push
or
mov
pop
mov
mov
mov
out
xor
cmp
inc
mov
sar
adc
dec
adc
or
push
loop
mov
outs
dec
retf
stos
inc
jmp
addr16
xchg
fs
fsub
inc
jbe
push
jns
and
adc
inc
pop
xor
and
pop
or
pop
imul
movs
popf
fucomi
push
xor
aad
xor
sbb
js
retf
add
out
aas
or
inc
add
(bad)
imul
dec
add
pop
or
or
mov
inc
inc
xor
push
sbb
or
push
dec
add
dec
icebp
fnstsw
mov
shr
sbb
jno
and
inc
mov
or
dec
jne
cmp
lods
cmc
cmp
sub
inc
push
popf
imul
imul
cmp
bound
mov
jle
or
mov
add
lds
sub
cmp
aad
add
inc
(bad)
ins
mov
pop
xor
sbb
push
and
sbb
cvtpi2ps
arpl
sbb
or
movs
or
xor
adc
adc
adc
retf
xor
jle
jg
sbb
mov
jo
push
inc
mov
sbb
icebp
adc
mov
inc
jg
lea
pop
popa
sbb
or
pop
and
call
cli
jns
rcl
mov
sbb
rcl
lea
sub
add
mov
aaa
or
jle
cmp
mov
inc
mov
fst
popf
inc
cmp
cmp
jne
cdq
add
or
cli
mov
dec
push
ins
fadd
shl
gs
dec
jge
sbb
ins
bound
repnz
adc
jmp
paddsw
pop
mov
(bad)
imul
test
mov
push
dec
xchg
pop
ror
bound
sbb
cli
sub
bound
cld
cmp
jbe
mov
rcl
dec
leave
sbb
in
jns
or
jge
jne
sbb
aad
pop
cmp
mov
inc
add
push
sti
out
xchg
xchg
adc
mov
and
rcr
cmp
sub
(bad)
fnsave
cmps
test
les
inc
dec
or
pop
or
jne
sbb
add
sub
sub
mov
loope
mov
sbb
add
inc
push
push
pop
popa
mov
push
in
xor
hlt
xor
mov
sbb
inc
push
inc
or
movs
xchg
sbb
call
imul
mov
mov
scas
out
adc
(bad)
and
dec
push
pop
jne
bound
mov
ficom
sub
push
in
in
mov
jmp
xor
xchg
or
rcl
push
push
(bad)
xchg
xchg
dec
add
das
or
jmp
cmovle
or
cld
push
mov
enter
sti
xlat
movs
mov
add
pop
repnz
and
ss
clc
fsub
add
sub
mov
sbb
popf
mov
inc
pop
(bad)
shl
retf
add
xchg
push
xor
xor
movs
push
mov
sub
pop
adc
bound
xor
mov
sbb
loop
imul
aam
dec
aam
lods
xchg
(bad)
lock
test
dec
fild
fild
add
dec
push
xchg
add
dec
dec
ins
pop
retf
and
xchg
sbb
cmp
pop
pop
add
dec
enter
data16
sub
gs
imul
imul
jne
mov
jge
push
jns
add
ror
mov
ret
mov
ss
xor
js
add
add
mov
sub
cmp
xor
pop
mov
test
cmp
enter
addr16
push
xchg
push
retf
cmp
or
sub
pusha
pop
mov
out
pusha
add
repz
dec
cdq
les
xchg
or
mov
xchg
sbb
mov
adc
inc
ins
inc
mov
movs
push
add
gs
cmp
movs
adc
adc
leave
gs
fmul
mov
addr16
jp
xchg
lods
lods
dec
aaa
ss
leave
sbb
fmul
push
in
and
in
leave
imul
jne
xor
je
xlat
xchg
gs
add
retf
std
in
push
ret
jns
mov
cmc
dec
and
movaps
in
cmp
pop
jp
movs
sbb
mov
jb
mov
in
jb
ins
pop
or
cld
stos
popa
add
sar
push
mov
fbld
popa
sbb
push
sub
cmc
ins
push
stos
and
inc
(bad)
mov
dec
scas
in
xchg
inc
add
stc
and
add
repz
adc
and
lahf
pop
retf
fld
loop
mov
les
bound
mov
aam
add
pop
es
rcr
cmp
inc
iret
inc
mov
mov
mov
and
ffree
add
add
xchg
or
mov
inc
out
dec
aad
or
and
sub
and
push
push
inc
or
push
lds
dec
enter
in
inc
and
or
push
adc
pop
(bad)
adc
mov
jmp
ror
push
jns
vmovaps
or
sub
jg
cmp
sub
(bad)
and
mov
add
loop
js
imul
or
mov
imul
inc
cmp
addr16
push
loope
xchg
popf
in
imul
shr
aam
push
add
xor
stos
and
sbb
push
xor
inc
pop
cmp
xchg
mov
ds
xchg
cld
stc
pop
je
inc
add
inc
das
out
sub
push
test
adc
popa
mov
mov
mov
xchg
dec
xor
push
add
dec
bswap
jnp
test
xor
sub
outs
fdiv
imul
(bad)
adc
loope
mov
nop
enter
adc
sub
inc
(bad)
adc
stos
fidivr
add
cmp
mov
dec
mov
test
ret
iret
add
in
or
test
xor
imul
sbb
imul
std
das
sbb
cmp
and
xchg
add
test
stos
or
je
and
bound
mov
test
pop
sbb
add
(bad)
push
push
in
push
repnz
test
cwde
daa
rcr
ins
or
or
inc
leave
mov
mov
mov
test
arpl
mov
xlat
scas
jecxz
pop
outs
inc
popa
sbb
and
or
mov
or
jp
jb
add
or
push
jp
dec
dec
nop
push
dec
mov
and
cwde
cs
and
enter
sub
inc
sub
fldenv
fdivr
or
test
movs
jae
jo
sbb
add
and
sbb
or
out
xchg
push
pop
leave
imul
inc
pop
add
std
gs
and
jbe
pop
ror
or
daa
mov
or
and
and
mov
cmp
mov
xor
ret
sub
popa
adc
loop
test
ret
add
or
into
int
mov
mov
pop
cld
ss
xor
cwde
sti
inc
push
jae
sbb
push
ror
call
(bad)
(bad)
pop
icebp
lock
aaa
pop
push
stos
mov
jle
xchg
stc
mov
dec
imul
add
mov
sbb
add
shl
or
shl
jp
les
test
mov
in
jmp
and
xor
pusha
imul
rol
add
cmp
ins
dec
adc
mov
int
nop
cmp
inc
enter
jno
add
test
or
shl
push
cmp
test
stc
aam
cmp
test
or
pop
cmps
stos
icebp
mov
jne
push
(bad)
popa
sbb
xchg
nop
loope
mov
jae
push
xchg
dec
pop
or
xchg
sbb
jp
xor
and
jae
lds
pmullw
sub
jmp
imul
cmps
push
dec
cwde
fcom
shl
jl
push
or
movs
dec
mov
mov
xchg
sbb
cmp
(bad)
jns
enter
js
leave
adc
add
add
jmp
or
jmp
xor
daa
jns
mov
push
push
cmc
rol
imul
icebp
inc
push
push
mov
adc
dec
(bad)
out
cwde
push
and
push
or
and
cmp
dec
pop
and
and
mov
cmps
inc
xchg
add
sub
jne
push
xor
inc
jae
jne
add
push
push
and
retf
push
ja
retf
add
or
pop
add
sub
loope
and
or
test
jne
sbb
fdiv
push
shl
cmp
sbb
ficom
mov
dec
mov
mov
outs
movs
mov
jno
sbb
sub
jmp
aam
push
push
or
mov
dec
or
mov
cmp
out
xor
push
call
in
dec
lods
stc
test
ins
pop
ja
push
add
in
ja
dec
xchg
nop
adc
rol
sbb
leave
(bad)
call
and
xlat
mov
or
and
rcl
pop
dec
mov
and
mov
mov
jbe
or
or
pop
push
adc
lahf
and
or
mov
add
ror
xor
pop
push
adc
sbb
mov
xchg
sbb
in
test
imul
mov
or
ror
jno
arpl
dec
add
ja
pop
mov
test
adc
addr16
dec
fwait
push
and
push
push
push
inc
in
mov
mov
adc
cmp
sbb
(bad)
push
scas
xchg
jne
icebp
jo
retf
in
jns
imul
mov
adc
in
cmp
leave
dec
sbb
cmp
mov
rcr
pop
adc
std
pop
add
sub
lods
fcom
mov
call
neg
adc
dec
(bad)
jo
xchg
mov
sbb
and
test
or
(bad)
addr16
jnp
pop
retf
outs
xchg
push
jmp
dec
jp
leave
movs
imul
pop
jp
xor
jmp
or
cmps
in
in
fwait
popf
add
inc
fidiv
jbe
pop
jnp
jne
outs
fsubr
xchg
cmc
js
pop
or
cmp
ds
adc
mov
mov
rcr
and
scas
sub
push
adc
and
outs
cmps
mov
sub
out
retf
(bad)
push
push
les
inc
pop
add
lods
jnp
arpl
jno
jns
pop
xchg
push
jae
add
add
jp
jl
test
pop
out
in
push
fcmovb
imul
add
adc
adc
rol
fild
add
dec
push
xchg
and
cmp
cmp
mov
cmp
pop
lods
push
ret
dec
add
jge
ret
or
pop
jge
test
xor
aas
adc
pop
imul
add
ficom
and
mov
mov
dec
in
push
adc
jne
push
mov
or
lock
inc
call
dec
lock
aaa
outs
or
inc
dec
and
sbb
lea
inc
and
cmp
fadd
cmp
xlat
sbb
adc
adc
push
sar
gs
sbb
xchg
cwde
mov
sbb
mov
cmp
rol
bound
retf
or
xchg
rcl
cmp
jo
retf
mov
mov
dec
dec
dec
dec
iret
xchg
or
fsubr
ficomp
arpl
or
daa
movs
xchg
sub
mov
leave
mov
pop
jae
push
lds
mov
cmp
std
adc
outs
jne
cmp
dec
mov
imul
mov
xchg
pop
cmps
sub
jb
addr16
add
pcmpgtw
ficom
mov
inc
xor
ror
daa
xchg
xor
jmp
icebp
(bad)
je
je
movs
inc
imul
in
xchg
imul
inc
dec
cmp
mov
dec
push
and
xchg
xchg
cmp
mov
xchg
cmp
pop
or
out
jno
dec
jl
inc
adc
jmp
rcr
add
push
sbb
and
or
xor
sldt
mov
add
ja
or
(bad)
fdiv
leave
mov
xchg
or
mov
sub
jae
adc
adc
adc
int3
mov
in
mov
fdiv
dec
jge
imul
mov
bound
dec
sub
sbb
cmp
cmp
out
dec
sbb
jmp
leave
pop
in
or
jae
shl
push
xchg
sbb
in
popa
dec
in
test
fcmovnb
cmc
pushf
pop
mov
or
cs
jg
or
pop
test
inc
push
sbb
pop
push
jg
xor
enter
inc
(bad)
lock
xor
rcl
xchg
daa
push
push
pop
sub
(bad)
les
jno
daa
mov
mov
seto
sbb
push
mov
lds
jg
mov
test
mov
pop
pop
mov
rcl
push
xchg
js
int3
in
xor
cmp
xchg
dec
sub
test
sbb
sub
inc
jne
fdiv
jl
mov
fs
test
or
mov
adc
in
mov
jbe
xor
inc
mov
lds
dec
push
je
or
rol
imul
and
cmp
jmp
jo
add
mov
lea
cmp
icebp
icebp
mov
jne
or
ins
push
push
xor
xor
dec
cmp
sbb
push
daa
push
pusha
mov
or
pop
dec
inc
and
div
ret
cmps
xor
dec
test
or
mov
mov
pop
outs
mov
push
dec
cmc
dec
arpl
pop
xchg
out
sar
pop
or
sub
fsubr
cmp
or
aaa
fucomip
mov
jns
sbb
push
xchg
inc
pusha
jno
js
cmp
mov
aaa
pop
lea
pop
iret
int
or
xchg
add
movs
in
ret
in
push
(bad)
mov
inc
mov
pusha
and
sub
fstp
popa
js
cmc
mov
enter
sub
fs
test
and
nop
sub
push
gs
sbb
fsubr
call
xchg
mov
xor
popf
xor
pop
mov
test
shl
jmp
daa
(bad)
hlt
sub
not
jb
mov
pop
popa
fdivr
or
test
cwde
xor
push
ret
mov
mov
xor
retf
or
mov
xlat
jecxz
or
ret
push
aaa
mov
xchg
lea
or
dec
push
inc
sub
xor
mov
adc
sbb
push
ins
inc
or
fs
add
nop
ins
or
mov
repnz
pusha
je
inc
xor
cmp
ss
push
xor
xor
push
push
dec
jno
pop
movs
shl
pop
adc
popf
adc
add
test
push
in
xchg
int
jecxz
and
and
or
ins
push
push
jno
mov
stos
inc
cmp
stos
cmp
fwait
mov
sbb
imul
or
cmc
pusha
dec
pop
and
in
lahf
inc
gs
inc
pop
dec
add
sub
test
jp
adc
dec
out
add
inc
mov
cmp
and
ins
jl
xchg
xor
or
inc
leave
xor
in
xor
ds
or
xlat
mov
shl
sbb
inc
xor
lea
fs
lods
paddw
aam
or
add
mov
frstor
xlat
es
shr
rcr
retf
adc
icebp
and
mov
and
mov
sbb
jg
mov
inc
mov
pop
mov
xlat
xchg
std
mov
lock
add
cwde
sahf
dec
and
add
or
popf
in
mov
fmul
xchg
push
add
sub
bound
ss
jge
sub
lahf
adc
pop
adc
and
push
ret
loop
(bad)
fiadd
or
mov
je
mov
test
mov
or
mov
popa
sahf
pop
xor
sbb
jp
gs
ins
imul
cli
call
cli
pop
ficom
loope
xchg
cdq
ficom
sbb
dec
and
sub
or
jnp
test
cmp
pop
xchg
outs
xchg
add
push
inc
xchg
pop
pushf
mov
and
dec
add
xchg
cmp
jbe
or
lods
xor
imul
sub
push
ja
fild
mov
sar
inc
push
jae
or
xchg
xchg
ins
imul
add
xchg
xlat
sub
lock
mov
sbb
adc
fcom
test
mov
mov
hlt
fnstenv
mov
jmp
xor
inc
mov
or
call
sahf
push
pop
rol
push
bound
jmp
pop
jno
fcom
gs
mov
jne
dec
push
xchg
(bad)
and
push
in
sbb
sbb
fdiv
xor
jmp
mov
or
jne
leave
mov
clc
leave
test
or
or
sbb
leave
pop
fdivr
inc
or
test
mov
push
sbb
xchg
ds
shl
mov
and
in
repz
cmp
ret
lock
mov
enter
dec
or
imul
pop
fimul
inc
sbb
push
inc
mov
dec
lahf
or
(bad)
push
push
or
rcl
mov
js
adc
sbb
stc
test
faddp
push
or
sub
add
adc
ja
or
(bad)
sbb
fdivr
repnz
mov
adc
mov
or
jae
xchg
add
gs
int3
mov
sbb
mov
mov
mov
aaa
and
or
inc
push
adc
movs
push
ss
mov
mov
xchg
(bad)
lock
adc
ja
out
adc
in
ss
imul
in
xchg
movs
mov
sub
shl
xor
sub
icebp
and
jge
inc
dec
jl
inc
pop
add
inc
push
imul
jne
out
sub
gs
test
inc
rcl
and
ret
or
xchg
sahf
mov
lahf
imul
xor
(bad)
mov
push
shl
push
inc
test
push
and
dec
mov
bound
jecxz
push
cwde
cmp
in
retf
sub
mov
iret
xor
cmc
pop
ins
cwde
ins
pop
sub
jp
in
fwait
icebp
in
in
sbb
jmp
in
popf
out
call
xchg
add
xchg
fstp
mov
cwde
cmp
aad
pop
leave
adc
cwde
inc
rcr
retf
cwde
pop
and
movs
in
push
aad
ret
rcr
and
fs
sub
sub
or
add
aam
or
or
sti
fld
adc
retf
push
(bad)
fwait
xchg
sub
bound
(bad)
fwait
rcr
in
fs
xchg
and
xor
push
shr
outs
ss
xchg
sub
xchg
adc
jno
fwait
and
pop
fwait
adc
sbb
pop
xchg
xchg
xchg
neg
mov
fidivr
in
add
test
jmp
scas
add
test
inc
adc
in
lds
xchg
xchg
mov
mov
dec
pmulhw
mov
xchg
or
push
ret
push
or
dec
inc
add
es
or
xchg
dec
pop
sub
fstcw
sbb
and
bound
mov
gs
sbb
pop
or
sbb
sub
pushf
outs
mov
popf
sub
add
(bad)
push
mov
pop
adc
int3
pop
add
ins
retf
jg
jl
or
pop
and
push
or
xor
gs
mov
loop
pop
movs
sbb
pop
jae
mov
lea
xor
xchg
add
add
pop
jle
js
sbb
sbb
pop
or
sbb
icebp
xlat
imul
in
adc
retf
scas
jmp
mov
scas
and
cmp
fwait
jle
or
es
or
inc
or
dec
mov
inc
aam
cmp
push
dec
dec
or
and
add
mov
pusha
xchg
sahf
sbb
popf
pop
adc
xor
and
adc
dec
aaa
mov
sahf
push
or
jae
and
ja
ins
inc
sahf
dec
pop
xlat
popf
or
or
push
add
jae
xchg
sub
push
xchg
(bad)
mov
(bad)
stos
js
sub
xor
push
inc
pop
push
(bad)
ficomp
loopne
sub
lds
push
stc
sbb
fwait
mov
push
retf
sbb
sbb
cli
cmp
and
ins
mov
jno
sbb
adc
leave
sbb
or
test
jl
xchg
add
or
pop
mov
sub
std
(bad)
jns
fistp
sbb
jmp
in
cmp
add
push
sbb
aas
gs
into
movs
pop
pop
inc
mov
or
imul
dec
pop
cmp
stos
inc
jge
or
pusha
adc
dec
sub
rcr
(bad)
and
or
xchg
das
ins
push
mov
adc
loopne
pop
or
mov
dec
or
cmp
sub
add
xchg
rcl
jmp
and
jb
sbb
fild
(bad)
jns
or
xchg
inc
sbb
add
and
jmp
in
sub
jbe
cli
movs
pop
xor
dec
dec
scas
adc
dec
gs
xchg
or
mov
sbb
aam
test
leave
add
xchg
cmp
mov
bound
xor
sar
les
sar
mov
pop
mov
ins
jp
lds
or
inc
repz
cmps
dec
std
mov
in
bound
mov
in
add
ins
mov
sbb
inc
jno
pop
outs
pop
imul
in
movs
movs
movs
mov
mov
icebp
add
xchg
movs
popf
jp
bound
popf
je
dec
xchg
cmp
xchg
or
repz
movs
sbb
lea
mov
in
mov
pop
xor
in
cli
outs
and
cmp
fwait
push
add
push
adc
test
dec
outs
push
dec
xchg
dec
pop
repz
sub
leave
xchg
mov
cld
jb
cmc
jno
add
les
xchg
sbb
movs
cmc
cmp
xchg
pop
ret
mov
xor
add
(bad)
and
push
pop
ret
xor
mov
pop
sbb
das
add
and
or
inc
not
aad
mov
inc
lea
pusha
(bad)
sub
sbb
adc
pop
mov
adc
sbb
adc
stc
sub
and
inc
das
cmc
dec
icebp
and
inc
das
icebp
xor
inc
das
in
sbb
and
adc
scas
dec
dec
dec
xchg
add
test
jne
test
sahf
in
and
jo
adc
test
sub
jae
aas
push
fimul
nop
in
cmp
mov
popf
inc
test
sub
dec
sbb
clc
sbb
hlt
add
or
adc
dec
xchg
rcl
xor
push
dec
xor
push
aaa
test
push
cmp
xor
rol
jae
or
pop
push
xor
add
fwait
xor
in
jo
push
(bad)
dec
cmp
das
jp
and
push
in
fisubr
adc
xchg
mov
fstp
addr16
test
inc
push
call
in
ret
push
rcr
inc
pop
call
pop
leave
leave
lds
gs
inc
(bad)
gs
inc
pop
mov
add
mov
push
cdq
idiv
scas
xchg
xchg
jg
push
and
xchg
mov
or
call
sar
add
out
mov
mov
aas
mov
imul
fst
sbb
push
test
mov
cmp
add
xor
or
jmp
mov
scas
xchg
inc
add
lods
push
and
cmp
in
add
std
(bad)
lock
lods
dec
jmp
(bad)
xchg
add
xchg
shr
sub
dec
ins
scas
int3
inc
xchg
push
pop
in
sub
adc
mov
push
mov
pop
pusha
es
jge
adc
out
sahf
dec
xor
xchg
and
sbb
call
and
jmp
lahf
mov
dec
xlat
rol
(bad)
mov
adc
adc
(bad)
loop
mov
rcl
mov
or
retf
hlt
dec
mov
mov
dec
push
mov
js
loope
imul
adc
mov
mov
data16
mov
(bad)
leave
das
inc
dec
jmp
enter
mov
rcr
dec
mov
mov
inc
mov
push
sbb
or
dec
rcr
into
stc
in
add
jecxz
icebp
xchg
out
or
outs
loope
je
add
jne
xor
pop
push
call
push
fld
rcr
mov
push
jb
loope
dec
aas
imul
sub
mov
push
je
or
xchg
iret
das
or
pop
adc
sbb
pop
dec
sub
sbb
dec
mov
(bad)
test
ja
stos
and
leave
dec
sub
or
pop
shl
sub
push
cli
push
gs
sub
and
sbb
pop
ficomp
xor
lods
push
push
imul
push
cmps
add
enter
sub
test
inc
xchg
pop
jae
add
mov
jae
push
je
das
and
daa
push
inc
inc
test
inc
fs
inc
call
cmp
inc
pop
sbb
push
jecxz
inc
add
xchg
out
jmp
xchg
xor
aam
stos
mov
rol
jnp
lods
cwde
or
sbb
cmps
or
repz
outs
mov
enter
or
xchg
dec
or
repnz
pop
ret
retf
ja
int
sub
mov
xor
ss
sbb
bound
inc
xlat
jno
cmp
adc
xchg
mov
jb
inc
fisttp
sbb
cmp
xor
cdq
das
sbb
push
data16
test
jecxz
mov
push
xchg
iret
push
(bad)
sbb
sbb
mov
and
mulps
mov
imul
xchg
unpckhps
test
add
test
cmp
and
add
mov
popa
inc
out
push
sub
push
in
inc
in
fsub
mov
enter
sub
mov
or
outs
mov
repnz
lock
jns
push
test
pop
mov
or
ss
xchg
xchg
push
movs
push
cwde
mov
jns
adc
add
bound
sub
data16
jmp
fimul
movs
lds
add
pop
lds
push
adc
dec
jg
and
xchg
add
push
or
retf
cmp
inc
(bad)
or
outs
push
aaa
mov
xor
add
fwait
loope
sbb
adc
push
js
arpl
fs
mov
lea
mov
jle
jl
push
imul
or
add
jae
push
xchg
cmp
or
data16
add
xor
inc
cmps
imul
sar
iret
mov
xor
mov
rcl
iret
ins
bound
pop
pop
gs
jne
mov
pop
pop
add
mov
xor
nop
fnstsw
sbb
mov
and
jp
and
std
mov
add
and
xchg
dec
outs
ja
arpl
add
sbb
popa
ret
mov
mov
sbb
or
imul
mov
or
push
in
jnp
das
cwde
or
in
mov
push
pop
loop
add
inc
scas
and
test
jno
mov
mov
lock
outs
scas
adc
ror
scas
out
jg
int3
es
pusha
add
adc
pop
dec
cmp
lds
add
adc
adc
xlat
popa
mov
sub
stos
cmps
dec
and
push
sbb
jp
dec
jl
inc
fisub
mov
adc
bound
in
sbb
ja
cmp
(bad)
rcr
or
das
es
add
push
add
mov
lea
iret
xchg
and
xchg
lock
pop
dec
daa
xchg
ja
xchg
add
sbb
imul
mul
pop
(bad)
push
aad
loopne
xor
add
scas
pusha
mov
add
push
adc
pop
and
jbe
mov
adc
fisubr
and
inc
pop
repz
push
mov
dec
ins
jne
sbb
or
add
idiv
push
or
pop
add
sbb
inc
and
mov
inc
or
stos
cwde
sub
sub
add
cmp
nop
mov
arpl
and
adc
lds
push
cmc
mov
pushf
or
cmp
sbb
xor
xchg
imul
adc
cmp
mov
(bad)
pop
movs
test
ret
mov
or
inc
inc
sbb
daa
dec
in
add
pop
and
rol
cmp
arpl
rcl
pop
fadd
and
mov
sbb
lock
mov
add
add
aam
ret
mov
and
mov
inc
sbb
sahf
push
daa
sbb
dec
aam
add
es
leave
leave
add
ret
xor
add
cmp
xchg
(bad)
es
mov
rol
sbb
push
cmp
cmp
dec
loope
fsubr
jecxz
outs
or
fstp
test
mov
aad
jo
mov
test
xor
and
cwde
test
ins
cmp
xchg
sub
jo
mov
sub
std
inc
imul
je
inc
das
or
inc
xchg
adc
add
cmps
(bad)
xchg
popf
inc
ret
cmc
sub
aas
cs
pop
jae
icebp
daa
add
clc
jbe
movs
xchg
add
aad
xor
loop
int
add
mov
pop
push
mov
icebp
inc
stos
cmp
cmp
mov
cwde
and
push
mov
js
push
(bad)
lahf
fldenv
mov
xchg
mov
cmps
xor
icebp
xchg
push
gs
ins
add
push
ds
xor
idiv
pop
arpl
or
and
(bad)
loopne
jl
xchg
arpl
imul
push
fisub
adc
push
pop
mov
mov
push
mov
mov
inc
ins
jb
(bad)
and
jbe
xor
inc
and
cmp
jbe
or
jnp
xor
xchg
leave
mov
fiadd
gs
add
dec
adc
repnz
push
in
add
sub
addr16
or
in
add
add
or
arpl
add
push
retf
fxch
(bad)
dec
xchg
sub
imul
(bad)
dec
push
and
push
lock
mov
shl
push
es
aas
xlat
in
(bad)
sbb
cmovno
lds
stc
stos
mov
bound
sub
mov
pop
mov
enter
cmp
test
dec
and
add
fadd
mov
or
or
fild
repnz
lock
push
icebp
mov
xor
ror
rol
dec
dec
sbb
and
(bad)
(bad)
add
adc
ret
cmp
adc
shl
push
sub
inc
adc
cs
ja
or
push
cmove
pop
or
test
inc
pop
leave
loope
fcmove
and
stc
leave
mov
js
inc
sbb
push
mov
jmp
call
sbb
sbb
and
call
pop
xor
push
xchg
inc
and
cli
mov
inc
mov
aam
mov
scas
mov
xor
xchg
adc
mov
test
xchg
and
mov
daa
int3
jmp
daa
pop
daa
mov
call
fld
gs
xchg
data16
rcl
dec
xchg
or
mov
in
xchg
leave
int
mov
daa
pop
rol
lds
dec
sar
mov
and
mov
sub
gs
test
xor
mov
mov
mov
xor
xor
xor
leave
popf
popf
mov
and
and
xchg
sub
mov
test
and
mov
add
dec
push
sbb
stos
mov
bound
mov
leave
je
leave
jno
jne
and
mov
cmp
ins
xor
shl
ins
sar
cwde
lea
gs
test
pop
xor
pop
pop
jmp
push
push
push
dec
leave
je
push
push
cmc
and
and
mov
dec
dec
cmp
or
dec
inc
cmovno
or
inc
cmp
or
sbb
inc
xchg
inc
xor
xor
xor
xchg
xchg
add
sub
xchg
xor
and
dec
inc
and
xchg
inc
sbb
sbb
sbb
gs
adc
in
dec
or
or
gs
lahf
dec
add
outs
push
xor
call
(bad)
jns
icebp
mov
cmc
cmc
add
daa
in
dec
jmp
jmp
pcmpgtw
inc
lahf
dec
in
dec
das
sbb
xchg
(bad)
fstp
inc
xchg
or
dec
shl
mov
aad
xchg
add
daa
push
leave
leave
call
push
dec
inc
pcmpgtw
rol
inc
lahf
(bad)
mov
mov
inc
xchg
or
mov
in
gs
in
xchg
xchg
add
test
xchg
call
lahf
dec
inc
pop
movs
movs
std
cmp
cdq
cmp
popf
popf
or
xor
int3
push
xchg
xchg
xchg
sub
adc
leave
or
leave
and
and
test
pop
jns
jge
test
dec
pop
repnz
add
clc
es
adc
pop
js
jbe
mov
enter
jno
adc
dec
ins
xchg
sbb
jne
push
mov
xchg
add
jbe
push
add
mov
mov
pop
xor
sub
int3
test
xlat
push
loop
ret
loope
lods
mov
xchg
xchg
lea
push
xor
pop
mov
cmp
xchg
or
push
rcl
and
imul
xor
in
or
sbb
or
leave
or
push
leave
sub
ins
outs
outs
or
jno
or
jne
ja
leave
or
dec
pop
xlat
call
imul
or
pop
lea
imul
and
and
xor
movs
jno
mov
add
pop
dec
mov
rcl
dec
add
jmp
or
inc
or
enter
pop
mov
sbb
mov
ss
mov
dec
sub
inc
aad
imul
cmp
fs
sbb
inc
sti
xchg
push
push
bound
sbb
and
inc
mov
or
mov
mov
(bad)
fldenv
xchg
mov
pop
retf
xchg
fldenv
arpl
push
rcr
gs
cmc
xchg
icebp
dec
nop
arpl
mov
fcmovnbe
add
and
cmps
cmovp
cld
fcom
cld
and
dec
fcmovne
or
sbb
adc
push
bound
outs
stc
mov
mov
jmp
add
in
in
pop
nop
icebp
add
xor
retf
xchg
movs
mov
pop
xchg
mov
and
mov
add
lea
mul
add
push
push
xchg
inc
lea
adc
push
push
stos
aas
sbb
dec
inc
jne
xchg
js
jne
jae
sub
push
fsubr
xor
ins
fist
add
xchg
movs
fcomp
sti
xchg
movs
mov
imul
lahf
rcr
adc
xor
xchg
fstp
mov
sub
pop
fcmovnbe
rcr
jmp
inc
movs
es
sub
call
jbe
mov
xchg
and
fs
dec
xchg
fidivr
adc
call
ficom
sbb
in
ss
pop
test
xchg
stos
xor
js
mov
in
jne
add
inc
inc
xor
je
outs
outs
ins
xor
xor
mov
(bad)
je
push
fidivr
xor
pop
xchg
inc
mov
daa
mov
test
ficomp
pop
scas
pop
dec
push
pop
lods
test
jo
daa
jg
xchg
mov
jne
and
mov
test
cli
jae
sbb
xchg
int3
movs
or
fild
outs
push
loopne
xor
inc
pop
pushf
pop
add
xchg
or
inc
jae
lds
xor
in
or
and
xchg
sub
sub
push
inc
adc
stc
mov
add
mov
add
or
pop
pusha
dec
push
inc
inc
dec
pusha
dec
inc
mov
lods
cmp
inc
dec
inc
mov
and
pusha
push
push
push
push
cmp
push
inc
dec
gs
inc
rcl
cmp
push
cwde
pop
rcl
push
inc
push
push
cdq
xchg
aaa
mov
or
ret
cmovne
xor
xor
cmp
or
mov
add
cmp
jecxz
out
xor
adc
cmc
icebp
in
leave
cmp
adc
in
in
retf
ins
ds
arpl
or
push
mov
sbb
jo
adc
and
icebp
mov
adc
mov
sub
es
leave
xchg
sub
leave
xchg
or
xor
mov
xor
ret
and
sbb
or
xchg
call
push
push
jecxz
push
add
add
and
in
fs
fmul
jecxz
inc
pop
or
add
push
(bad)
leave
test
in
or
mov
add
dec
fldenv
into
push
xor
fxch
and
add
mov
shl
shr
cli
xchg
pop
test
mov
push
dec
lea
outs
stos
movs
push
dec
cmc
hlt
retf
idiv
jo
loopne
movs
adc
icebp
mov
and
imul
or
fcom
push
or
rol
mov
ins
lds
cld
fsub
js
cmp
or
inc
in
inc
mov
xor
test
or
loope
mov
adc
jbe
out
inc
mov
adc
add
and
inc
jmp
jo
retf
ror
test
dec
jge
adc
out
jge
add
sub
adc
adc
dec
jmp
retf
jo
retf
(bad)
adc
enter
pop
inc
add
dec
jmp
or
gs
or
adc
add
cmp
sbb
add
sbb
sub
adc
push
leave
and
pop
sub
cmp
pop
retf
mov
dec
out
inc
cmps
popa
sbb
dec
cmc
imul
xor
push
lock
xchg
jmp
inc
jb
xchg
mov
jmp
jecxz
jmp
xchg
bound
and
and
push
sbb
pop
loope
dec
or
adc
and
or
mov
mov
dec
cmp
mov
sub
add
mov
bswap
or
jmp
sbb
add
mov
pop
(bad)
adc
dec
test
jno
xor
arpl
inc
aad
call
adc
inc
popa
sahf
cmp
xchg
mov
xchg
fmul
jne
enter
fadd
dec
jmp
ja
sub
xor
jmp
and
lahf
and
retf
jnp
(bad)
jle
push
test
(bad)
aad
aam
xlat
sub
leave
or
and
jmp
jmp
jae
adc
cmp
cmp
lods
and
add
out
sbb
pop
xchg
inc
inc
outs
orps
in
dec
popa
push
inc
or
dec
pop
jmp
inc
cmp
pop
adc
leave
pushf
in
in
dec
adc
jns
(bad)
daa
aam
adc
ds
jecxz
sbb
(bad)
xchg
add
xor
test
push
jns
in
push
sub
dec
push
inc
fimul
jle
xor
or
cmps
sbb
mov
in
imul
in
movs
test
and
mov
in
jp
dec
in
push
dec
and
movs
mov
iret
and
imul
call
xchg
or
or
cmps
jo
push
shl
out
jnp
dec
sbb
das
or
loope
test
(bad)
sub
adc
mov
adc
mov
or
xchg
js
cmova
xchg
xchg
xchg
mov
scas
mov
cmp
dec
jae
lock
or
add
add
sbb
add
icebp
mov
mov
sbb
mov
xor
sub
nop
push
movs
adc
and
mov
cmp
(bad)
adc
mov
mov
cmp
jns
jbe
adc
or
adc
mov
ins
inc
mov
add
sbb
xchg
clc
push
xor
adc
push
sub
dec
rcr
and
fs
push
ja
int
mov
sub
jbe
movs
out
cmp
xchg
in
dec
aas
add
daa
cmp
mov
pop
int3
push
pop
into
in
or
outs
outs
pop
popa
pop
cwde
xor
int
mov
adc
push
js
or
adc
add
pop
test
test
or
dec
add
push
mov
mov
nop
in
adc
(bad)
in
repz
xchg
int3
es
cmc
add
push
bound
mov
fidiv
cmc
fmul
ss
push
push
sub
and
and
loop
jo
ret
inc
in
outs
mov
xchg
xor
and
dec
jmp
std
jmp
xchg
clc
dec
xchg
outs
in
cmc
(bad)
jno
lahf
sub
add
jae
xchg
xchg
push
pop
inc
xor
idiv
mov
imul
stos
sbb
scas
loope
mov
fstp
mov
dec
adc
dec
(bad)
es
push
add
xor
sbb
in
jae
add
clc
js
sub
dec
sbb
adc
sub
inc
shl
cmc
cmp
in
icebp
cmc
dec
bswap
and
cmc
or
repz
inc
jae
mul
mul
test
std
cmc
sub
add
inc
sbb
in
adc
sub
sub
xor
repz
cmps
cmc
pop
add
pop
and
xchg
scas
or
pop
js
lods
imul
dec
aam
les
xchg
xchg
mov
loop
test
and
xchg
dec
xlat
and
retf
cmp
lock
rcl
pop
add
xchg
xchg
pop
xlat
or
dec
pop
std
push
jne
data16
push
push
dec
stos
or
ins
sbb
add
sub
xchg
sub
push
gs
pop
sbb
jno
gs
add
lea
movs
sbb
add
addr16
pop
fld
or
and
call
add
push
mov
push
cwde
pop
add
sbb
mov
mov
sub
push
ror
xchg
adc
gs
add
add
gs
mov
hlt
clc
enter
mov
dec
sub
pop
ror
cmps
and
retf
inc
cmp
jnp
mov
jp
dec
xchg
mov
add
mov
xor
push
add
dec
and
and
cld
dec
sub
xchg
cld
dec
pop
cld
dec
pusha
leave
sbb
jne
dec
mov
dec
popf
cld
dec
repz
test
frndint
dec
in
dec
adc
adc
in
dec
test
cmp
cmp
js
adc
dec
movs
xor
and
push
cmps
inc
clts
ret
(bad)
add
sub
add
icebp
inc
and
(bad)
(bad)
iret
xor
sbb
sbb
fs
(bad)
sbb
data16
xchg
adc
daa
nop
mov
lahf
add
push
push
aad
leave
xchg
popf
mov
dec
dec
xchg
dec
dec
repz
push
add
jp
dec
dec
sbb
jae
inc
inc
dec
add
and
(bad)
bswap
test
xchg
(bad)
pop
inc
push
jbe
ror
or
fild
jo
add
aad
adc
mov
or
ins
add
pop
inc
or
push
mov
packssdw
mov
imul
add
add
fistp
xor
dec
push
je
adc
xor
push
jo
push
push
and
adc
popf
xor
jge
jne
div
dec
icebp
xchg
push
cdq
and
add
pop
stc
sahf
mov
inc
(bad)
pop
push
loopne
rcr
push
jl
adc
rcr
adc
mov
cmp
jae
sub
sar
mov
rcr
je
sbb
lods
ffreep
and
dec
inc
fwait
or
stc
leave
pop
hlt
ins
cdq
and
daa
imul
sub
xor
and
and
loope
jmp
xchg
in
mov
test
push
xor
adc
scas
mov
and
dec
aaa
dec
aas
dec
mov
fnstcw
push
aaa
add
pop
and
mov
dec
mov
unpcklps
call
movs
mov
pop
pop
clc
fld
adc
pop
sub
xchg
cmp
lea
inc
dec
test
mov
arpl
push
push
stos
popa
add
lea
xchg
sbb
jmp
add
jb
bound
sbb
and
les
jp
mov
cmp
ds
ss
and
jl
inc
in
jl
add
add
inc
in
in
or
push
xchg
popa
jmp
mov
or
dec
div
xchg
add
pop
push
inc
add
gs
clc
xchg
inc
dec
inc
pop
dec
dec
aam
es
xchg
das
lea
dec
dec
mov
in
ss
imul
dec
or
fwait
mov
inc
jb
or
leave
leave
and
popa
adc
leave
loope
or
cmp
xor
sahf
or
add
inc
outs
sub
test
pop
adc
dec
stos
or
push
and
inc
xchg
(bad)
(bad)
push
or
js
pop
in
dec
inc
xchg
pop
adc
in
add
sub
mov
fst
add
mov
add
sbb
mov
dec
sub
xor
std
aas
mov
sub
pop
push
jmp
dec
mov
push
dec
xor
or
je
xor
add
push
js
shr
mov
sbb
push
inc
bound
adc
or
sbb
outs
xchg
adc
xchg
mov
xchg
mov
out
or
je
(bad)
sbb
xchg
je
lods
aas
add
or
mov
es
enter
fld
stos
adc
cmc
shr
das
hlt
(bad)
xchg
or
mov
test
add
dec
xchg
leave
push
mov
add
pop
mov
mov
mov
mov
inc
jbe
mov
gs
add
int
inc
sub
jbe
xor
sahf
pop
mov
or
inc
add
sub
sub
push
mov
add
clc
fst
jbe
or
adc
popa
jmp
ficom
lahf
out
mov
or
retf
adc
adc
sub
xor
pop
xor
pop
popf
add
push
push
sbb
mov
or
xor
and
mov
in
dec
push
xor
and
test
mov
cli
jbe
std
mov
or
es
and
and
ds
jmp
ins
adc
xchg
push
imul
push
scas
lea
pop
loopne
ins
or
gs
bound
push
pop
dec
bound
mov
push
or
mov
lds
inc
or
push
jp
mov
or
or
test
cwde
sbb
dec
stos
xchg
adc
ret
aad
sbb
mov
test
pop
mov
mov
mov
or
in
arpl
sbb
fsubr
or
cli
imul
imul
jmp
mov
and
xchg
or
lods
or
in
or
sbb
or
push
or
or
in
inc
pcmpgtw
inc
leave
out
xchg
mov
add
icebp
jno
dec
popa
loope
es
dec
mov
sub
pop
xchg
sbb
mov
sbb
or
js
pop
xchg
pop
mov
fs
mov
mov
or
xor
or
dec
jno
or
cmp
sbb
pop
add
gs
mov
pushf
jne
call
or
retf
xor
mov
popf
mov
and
push
arpl
scas
int
mov
cmp
xchg
adc
test
sbb
imul
push
cmps
dec
jns
mov
call
gs
int
in
pop
xchg
xchg
jno
xchg
inc
inc
rcl
or
fisttp
lea
sbb
pop
sbb
test
mov
or
sub
pop
pusha
xchg
inc
inc
das
mov
sub
jns
stc
gs
xchg
jne
xchg
and
gs
jno
dec
pop
sbb
inc
cmps
gs
jmp
xchg
imul
cmc
gs
xor
je
adc
popa
popa
aam
imul
test
adc
add
adc
nop
jne
push
jbe
cmp
inc
je
jp
inc
add
bound
inc
jnp
push
jnp
xor
dec
jno
sub
pop
pop
jae
push
addr16
arpl
cmp
popa
pop
adc
xor
gs
pop
gs
ss
gs
pop
aaa
cmp
out
sbb
inc
cmp
xor
jae
xor
and
lahf
dec
int3
popa
in
mov
dec
mov
xchg
mov
call
dec
and
adc
or
xor
enter
je
sub
jne
fmul
dec
inc
dec
bound
xchg
fcom
mov
cmps
ss
rol
inc
add
xor
sub
sbb
sub
or
ss
aad
mov
sbb
sbb
(bad)
pop
sbb
dec
fnstsw
aam
add
pop
push
pop
inc
dec
pop
pop
ret
mov
stc
sahf
les
div
ror
mov
dec
or
sbb
pop
push
shr
add
push
pop
sbb
shl
cli
mov
jmp
inc
and
in
and
leave
mov
pop
or
cmp
imul
cmp
and
push
into
push
icebp
xadd
adc
and
sbb
and
mov
inc
dec
aaa
test
cmp
sub
and
jecxz
bound
push
sub
pusha
or
ret
sbb
mov
in
in
stc
and
and
add
push
ret
rcr
or
sub
adc
or
push
lock
cmp
js
sbb
and
sbb
scas
sbb
or
test
cmp
retf
adc
push
xor
push
add
or
bound
pop
or
push
add
pop
movs
or
cmp
push
leave
retf
or
add
jl
fsub
push
dec
ret
xchg
and
das
sbb
fsubr
ror
sbb
lods
adc
scas
and
dec
popa
adc
int3
arpl
pop
daa
sbb
jbe
aam
dec
fild
sahf
xchg
pop
fcmovne
mov
repz
and
es
inc
cmps
in
dec
sbb
daa
or
mov
fs
jno
xchg
adc
mov
mov
stos
cmp
popa
mov
les
das
adc
jbe
and
xor
or
sub
inc
push
fwait
scas
nop
add
xchg
sbb
test
adc
adc
mov
mov
and
dec
(bad)
(bad)
fmul
fldenv
push
inc
mov
mov
outs
cli
mov
dec
pop
in
rcr
ja
in
pushf
inc
push
mov
push
mov
das
pop
add
and
cs
or
sub
jno
sub
fimul
inc
ins
dec
mov
xchg
or
sbb
test
xchg
hlt
imul
sub
and
fild
cmp
in
mov
cmp
into
ret
cmp
loop
pop
and
sbb
dec
lds
retf
pop
test
inc
mov
dec
pop
jbe
movs
xchg
inc
or
daa
call
xor
and
inc
daa
sbb
sub
or
daa
pop
popa
rcr
aad
gs
jne
xor
fild
push
inc
inc
push
pop
adc
push
mov
pop
jbe
outs
and
mov
repz
lock
ins
in
pop
and
sub
sbb
shl
sbb
adc
xchg
sub
rcl
inc
rol
and
xchg
inc
add
ret
dec
add
pushf
dec
inc
xor
test
add
add
jb
les
fisttp
mov
cs
cmp
push
je
add
mov
inc
in
dec
or
push
inc
bndstx
fisttp
and
fnstenv
repz
sub
pop
mov
inc
lahf
imul
sub
adc
cli
and
sub
sub
add
mov
and
pop
fwait
xlat
xchg
mov
fild
or
add
mov
icebp
dec
adc
fcmovnb
fs
push
or
xor
or
xchg
lahf
cmps
adc
cmps
fidiv
xlat
cmp
add
push
mov
or
dec
into
inc
push
dec
cmp
inc
add
out
adc
push
into
jp
mov
xchg
popa
and
adc
into
jae
and
jp
mov
in
xor
sub
mov
dec
mov
mov
xor
sbb
and
sar
adc
inc
lds
xor
adc
imul
aaa
mov
pop
add
add
inc
ret
pop
xor
cmp
ins
hlt
or
dec
cmp
mov
fisub
out
or
aaa
add
sub
xchg
adc
and
in
xor
and
pop
(bad)
or
push
adc
and
xchg
rcr
and
stos
sub
push
into
xor
loop
adc
add
rcl
inc
call
cmp
add
xchg
mov
out
inc
mov
mov
xor
in
xchg
cmovnp
fadd
test
or
pop
or
adc
adc
sub
adc
or
cmp
push
loop
push
mov
sbb
xchg
mov
add
mov
dec
aas
sbb
or
push
rcl
xchg
add
dec
cmovno
push
push
inc
adc
xchg
pop
leave
inc
push
pop
rcl
daa
loopne
rol
loope
fcmovnb
int3
inc
and
or
pop
rcpps
fsub
mov
test
pop
leave
and
sub
in
(bad)
dec
outs
push
pop
retf
sub
daa
shl
and
xor
cs
sub
inc
push
sub
dec
imul
mov
fcmovnb
add
sub
dec
sbb
dec
cs
jb
pop
pop
ins
das
cmc
cmpps
push
xor
xor
out
adc
int3
addr16
mov
rcr
mov
add
rol
pop
xchg
ret
dec
add
loop
pop
xor
or
fadd
xchg
inc
dec
jo
mov
mov
enter
lahf
mov
push
jne
xchg
push
test
mov
inc
push
sbb
push
outs
(bad)
outs
mov
test
sbb
jmp
sar
cdq
push
ins
and
xchg
stc
add
das
xchg
push
sub
push
pop
ror
out
outs
fsub
sysexit
dec
and
push
inc
sub
mov
add
add
(bad)
pop
adc
(bad)
into
cmp
dec
push
mov
imul
es
rcl
sbb
pusha
push
or
cld
ins
push
jb
or
xor
xchg
stos
outs
outs
sbb
push
mov
fsubr
add
xor
sbb
fwait
cdq
pop
fdivrp
ffree
lock
pop
xor
dec
xor
lahf
inc
icebp
mov
add
loope
sub
xchg
lock
popa
add
adc
sub
mov
push
xlat
add
retf
test
cmp
jle
mov
arpl
cmp
dec
mov
dec
jle
outs
cs
jl
push
xchg
outs
pop
push
fmul
cli
fadd
mov
xor
rcl
mov
es
push
pusha
mov
loop
or
(bad)
ins
enter
ja
inc
nop
dec
or
jo
mov
sub
pusha
dec
and
test
call
push
adc
add
pop
scas
shr
movs
scas
or
icebp
nop
add
sub
xor
push
push
sub
mov
sbb
les
or
jo
test
inc
mov
cmp
sub
sbb
scas
cmp
push
ret
mov
jne
push
scas
daa
sar
jmp
add
or
aad
sub
aam
test
inc
and
jne
and
xor
and
push
push
lods
add
dec
push
xor
lods
push
add
dec
mov
push
and
jbe
push
fwait
inc
aam
xor
inc
mov
sbb
jbe
clc
xor
push
and
int
leave
pop
sbb
or
inc
adc
lods
psubb
addr16
arpl
popa
fiadd
ret
or
rcr
sbb
mov
arpl
lods
push
or
aas
test
mov
test
int3
mov
cli
add
in
add
jns
inc
mov
cwde
sbb
sub
xor
aaa
gs
pop
shl
enter
pop
icebp
xchg
repnz
xor
adc
int3
xchg
push
mov
aad
cli
dec
daa
sbb
adc
sbb
jae
sbb
pop
dec
dec
pop
test
dec
addr16
shl
sub
test
mov
xor
xchg
jb
ret
mov
cli
mov
push
adc
inc
mov
addr16
inc
jl
mov
adc
adc
dec
call
mov
xor
lds
(bad)
ret
push
add
pop
cs
aad
test
(bad)
pop
and
in
jge
in
jp
in
jmp
lahf
cmc
ds
sub
adc
outs
mov
sbb
fadd
adc
js
sub
push
fistp
cs
mov
sbb
es
push
mov
and
(bad)
lods
jge
das
add
mov
cmp
icebp
xor
adc
sub
(bad)
div
aaa
inc
or
add
mov
dec
or
cmp
movs
add
js
popa
loopne
mov
out
in
sub
(bad)
xor
sbb
mov
cmp
jle
mov
ins
or
or
pop
sbb
inc
cmp
pop
sbb
mov
cmp
adc
adc
cmp
sub
sti
and
(bad)
dec
or
sub
xlat
cs
cmp
mov
je
dec
cmp
dec
xor
cmp
and
nop
push
sbb
leave
mov
mov
xlat
add
pmulhw
dec
in
sbb
xchg
mov
dec
mov
add
mov
out
xchg
lods
stos
ss
dec
ja
(bad)
push
pop
and
push
pop
mov
retf
or
mov
fild
pop
test
sbb
pop
and
imul
icebp
pop
xor
(bad)
dec
inc
stc
ins
leave
rcr
scas
inc
sbb
and
push
fcomp
movs
aaa
add
nop
cmc
(bad)
cld
call
nop
adc
in
jbe
stos
mov
adc
mov
add
test
add
enter
adc
in
adc
ss
and
gs
mov
dec
lahf
xchg
jne
and
fld
and
cmp
je
pop
or
rcl
adc
mov
add
or
push
or
stos
jbe
movs
push
in
push
sahf
in
inc
popa
sahf
xchg
push
sub
xchg
push
cs
sub
add
test
jle
fdivr
data16
es
sbb
pop
xlat
fiadd
popa
ret
das
pop
dec
pop
push
aam
gs
sbb
jb
js
pcmpgtb
pop
cmp
fs
jne
adc
xor
scas
jl
push
leave
dec
les
outs
sub
sub
pop
xchg
mov
aaa
aas
sbb
fadd
(bad)
dec
xchg
outs
scas
dec
fsubr
es
pushf
pop
dec
and
sbb
sbb
push
mov
fdiv
nop
es
in
inc
mov
fmul
(bad)
jae
and
(bad)
sar
sub
pop
mov
pop
add
push
test
nop
adc
cmps
pop
xor
mov
inc
sub
pop
dec
pop
arpl
or
scas
inc
push
leave
cmp
pop
adc
add
push
test
cs
or
(bad)
in
sub
push
pusha
lock
retf
mov
fs
adc
xchg
in
inc
mov
sub
push
test
jno
adc
or
mov
pushw
je
add
jmp
sub
shl
pop
jl
xor
jl
iret
shl
jns
inc
lds
push
xor
stc
xchg
jb
mov
push
mov
es
mov
cmp
mov
inc
mov
pop
loope
dec
jecxz
ins
ja
xor
mov
mov
push
mov
or
jae
push
adc
push
mov
inc
ret
mov
jno
jns
or
and
sbb
shl
pop
push
ret
aad
cmp
lods
sbb
cmp
stc
sbb
aas
jbe
cs
lock
jg
aam
or
or
es
test
adc
mov
add
and
mov
xchg
mov
add
pop
(bad)
loopne
mov
add
adc
add
sbb
sub
js
imul
in
movs
adc
dec
xchg
jno
adc
lea
jb
mov
pop
xchg
js
pop
pop
popf
sub
pop
in
jg
xlat
pop
das
adc
dec
inc
xor
pushf
dec
cmp
ins
dec
js
inc
enter
vsqrtss
or
pop
frstpm(287
fst
or
xor
push
cmp
push
xor
jae
outs
pop
cmp
pop
cmp
push
inc
or
adc
adc
sbb
mov
test
(bad)
and
gs
daa
dec
loope
gs
loop
shl
pop
cmp
out
xchg
mov
enter
mov
pop
pop
add
jno
mov
icebp
push
cmp
dec
out
mov
or
adc
or
ds
repnz
cmp
mov
pop
call
ret
sar
adc
ror
xor
dec
fadd
xor
ret
and
in
xor
cmps
add
pop
mov
push
scas
mov
and
out
cld
fstp
outs
inc
add
fwait
or
aaa
cs
xor
leave
add
das
jne
pop
ret
or
dec
hlt
pop
inc
add
rcr
push
sub
or
jo
mov
xor
add
js
test
(bad)
jb
pop
or
mov
sbb
sbb
mov
loop
dec
into
out
cmp
sbb
pop
add
push
xchg
inc
mov
sbb
mov
sbb
push
sbb
sub
fldenv
in
and
push
fbld
leave
add
ins
ds
imul
add
mul
(bad)
leave
mov
inc
test
push
dec
mov
hlt
ret
mov
and
hlt
xor
inc
lea
sbb
je
aam
mov
test
sub
cmc
jge
add
movs
sbb
or
movs
adc
and
or
dec
push
pop
mov
mov
ret
test
ret
push
push
or
xchg
outs
adc
retf
stos
ja
or
mov
sub
dec
mov
std
xchg
mov
dec
xor
imul
shl
les
pop
push
and
shr
lds
pop
dec
stos
cmps
mov
adc
mov
xor
mov
inc
in
icebp
inc
dec
mov
imul
cmps
lods
dec
out
and
clc
aaa
mov
dec
adc
inc
jb
or
lock
shl
int3
mov
mov
pop
adc
dec
mov
and
add
and
jl
imul
mov
pop
jnp
pop
dec
push
or
dec
cmp
xchg
mov
mov
cmp
mov
inc
inc
pop
(bad)
xor
pop
aad
dec
pop
sbb
les
xor
xlat
aas
test
xor
pop
sub
adc
loopne
aad
add
or
or
add
and
scas
add
sti
cwde
leave
and
rcr
and
xchg
and
mov
shl
xor
repz
imul
in
and
xor
or
adc
xchg
push
dec
and
pop
mov
loop
call
sbb
inc
jno
inc
das
pop
dec
shl
adc
add
daa
ins
push
jo
adc
dec
xor
gs
xchg
mov
aad
xchg
inc
pop
sbb
loope
inc
pop
sbb
in
cmc
sub
sbb
mov
and
or
or
outs
mov
andnps
adc
mov
shr
adc
inc
add
nop
mov
aaa
int3
out
adc
aaa
dec
and
or
push
add
pop
or
dec
dec
fsub
adc
inc
jmp
fst
(bad)
out
into
push
bound
fisttp
inc
aam
loope
mov
xlat
and
dec
xor
sbb
add
pop
mov
add
xchg
fsubr
in
mov
pop
sbb
icebp
inc
inc
outs
ins
push
mov
ret
jl
fcomp
cld
pop
xchg
bound
and
popa
mov
add
sbb
fwait
out
mov
push
das
out
xchg
adc
loopne
ret
pop
xchg
loope
adc
xor
xchg
cmp
xor
loopne
ret
fcom
and
mov
and
test
sbb
out
inc
xchg
jl
jbe
add
mov
(bad)
or
xchg
clc
mov
mov
add
call
retf
movs
xchg
ss
pop
test
cmps
mov
retf
adc
push
cmp
inc
cdq
xor
add
push
pop
neg
lea
mov
add
sbb
sub
add
lds
js
add
rol
dec
pop
fidivr
lods
xor
add
es
lods
sbb
or
pop
mov
add
ss
cwde
or
lds
rcr
outs
sub
sbb
and
fcom
mov
sub
add
adc
or
xchg
xchg
sbb
inc
lods
leave
dec
fs
cmp
dec
mov
add
test
or
mov
mov
xchg
mov
outs
push
ffree
dec
xchg
daa
jae
hlt
dec
loop
test
adc
cmp
int3
movs
sbb
push
adc
lock
leave
add
cdq
sub
push
dec
frstor
dec
push
pop
push
adc
xor
jle
sub
xchg
jmp
xor
loope
es
mov
test
cmp
xchg
bound
into
or
inc
or
ror
mov
fwait
adc
imul
mov
dec
rol
adc
fs
mov
and
adc
pusha
or
push
dec
jae
pop
jp
push
dec
cmps
imul
mov
popa
imul
or
xor
inc
xchg
inc
dec
pop
ins
loope
pop
ret
sbb
cmp
aas
mov
add
or
xchg
inc
fs
and
mov
inc
mov
inc
mov
push
dec
in
adc
into
add
test
cmp
push
les
inc
jmp
mov
mov
sub
dec
dec
sar
sub
movs
cmps
movs
push
mov
dec
das
xchg
xchg
xchg
mov
imul
cmp
or
xor
xchg
sbb
pop
xor
(bad)
adc
mov
(bad)
retf
xchg
cwde
mov
add
mov
or
dec
xchg
ds
and
imul
or
int
in
das
adc
sub
fwait
sbb
jo
inc
inc
xchg
cli
sub
pop
daa
in
mov
jae
ins
inc
in
sub
retf
sub
in
fsub
stos
idiv
push
in
sbb
add
dec
daa
rcl
adc
pop
outs
jmp
xor
jae
jmp
pop
(bad)
xchg
or
pop
xor
rcr
pop
fstp
inc
xchg
pop
and
aas
ficom
fcomp
loope
cs
xchg
lods
outs
sbb
inc
xor
inc
pop
ja
push
xor
xor
xor
adc
rcr
enter
mov
sbb
or
pop
add
loope
f2xm1
mov
jo
dec
daa
xlat
mov
imul
test
jns
add
and
push
sub
xor
repnz
jb
stc
push
nop
shl
movs
push
and
aaa
mov
jl
sbb
sub
sub
xor
xor
jb
add
xchg
retf
mov
pop
pop
js
pop
loope
cdq
fsqrt
xor
add
mov
jmp
cmp
xchg
pop
push
stos
xchg
mov
bound
cmc
xchg
sbb
popa
pop
inc
cmc
inc
cmp
or
jge
xor
and
popa
push
and
mov
sbb
pop
adc
cmp
out
and
and
dec
mov
sbb
or
rcl
dec
retf
in
popa
(bad)
aad
mov
leave
adc
fxch
sub
retf
mov
xor
xor
xchg
(bad)
gs
xor
cmps
jne
cmp
sbb
xor
ret
inc
adc
cmp
dec
push
aaa
inc
mov
or
ja
adc
dec
enter
fadd
push
push
sbb
je
xor
test
bound
jp
and
inc
lds
mov
rol
mov
jbe
mov
and
and
and
xor
ins
mov
and
xchg
pop
pop
mov
xchg
and
lods
loope
mov
mov
frstor
and
div
sbb
adc
sbb
jg
adc
or
mov
mov
sbb
sub
imul
mov
js
add
mov
outs
arpl
fisubr
inc
push
add
es
out
and
sbb
adc
rcl
adc
mov
jae
push
xor
fldenv
inc
jge
and
inc
inc
popa
push
jl
and
jae
lea
popa
mov
fsubr
test
mov
xchg
sbb
out
push
push
mov
mov
aam
and
data16
push
pop
addr16
ins
fwait
out
adc
push
mov
ins
dec
out
cmp
mov
pop
xlat
sub
push
bound
add
outs
fwait
and
arpl
imul
in
mov
ins
fldcw
jo
pop
leave
out
jb
jb
jecxz
dec
jae
fwait
mov
and
pop
ins
xchg
rep
fwait
cmps
mov
push
into
jl
ja
call
fisub
pop
nop
mov
ins
into
mov
stc
sbb
aas
gs
mov
scas
daa
shl
pop
aaa
dec
aam
cmp
pop
mov
ins
fwait
cmps
pop
das
push
jne
cmps
jle
jge
pop
adc
jle
or
sbb
inc
or
cwde
mov
mov
out
pop
mov
test
dec
add
test
movs
jp
jns
fsubr
or
sub
xchg
mov
add
pop
push
sub
add
mov
push
adc
or
jns
fsubr
test
rol
adc
add
sub
lds
shl
les
add
adc
iret
or
mov
gs
lahf
and
jno
inc
lahf
and
ins
leave
mov
and
push
imul
push
bound
adc
dec
lahf
mov
push
pop
pushf
cmovnp
or
dec
movs
mov
jp
mov
push
lock
jmp
sbb
mov
push
aad
test
dec
xchg
xor
ret
out
stos
sub
jno
add
adc
xor
push
jp
lock
lods
in
je
imul
sbb
out
out
cs
in
or
add
cwde
mov
jno
popa
ret
adc
pushf
adc
(bad)
bnd
mov
or
xor
push
add
stc
xchg
xor
(bad)
ficom
mov
push
or
popf
jb
sbb
and
mov
and
pop
adc
and
or
outs
push
cmps
aas
mov
xor
fistp
add
idiv
mov
nop
popf
outs
and
add
popa
es
mov
mov
inc
cmp
arpl
mov
loope
or
pop
jns
jp
test
stos
dec
out
or
jge
cmps
mov
dec
int3
lods
cmc
aas
outs
inc
mov
adc
add
test
ror
leave
push
mov
push
inc
xchg
inc
scas
fistp
(bad)
ror
jg
fdiv
push
ss
pop
mov
mov
mov
and
in
in
inc
push
push
xchg
pop
and
inc
pop
xchg
test
jae
mov
add
rcl
xor
adc
loope
sub
cmp
data16
data16
push
xor
enter
jns
inc
fsubr
sub
pop
cmp
int3
xchg
std
pop
stos
or
dec
sbb
push
hlt
cmp
cmp
adc
dec
sub
fcom
in
sub
or
dec
mov
sbb
gs
sub
addr16
lahf
xlat
push
ins
aad
jg
and
mov
rol
mov
push
rcl
inc
mov
icebp
cmp
imul
jo
or
inc
dec
mov
enter
xor
mov
xor
xchg
sbb
fldcw
or
jmp
pop
cmp
xor
imul
jo
inc
sbb
jge
nop
push
jb
test
sbb
dec
mov
aad
xor
mov
add
or
ror
jmp
and
or
push
xchg
sbb
popa
push
xor
inc
repnz
rcr
mov
xlat
mov
xor
push
ds
mov
(bad)
imul
retf
jns
adc
mov
xchg
dec
xor
push
add
jne
xor
mov
inc
mov
add
repz
mov
add
pop
setno
adc
in
aad
push
sub
add
and
cli
jmp
ins
call
fwait
mov
inc
push
add
or
cwde
ss
adc
in
mov
dec
cmp
xor
std
adc
and
call
cmp
xchg
cmps
xor
jle
rcr
div
mov
sbb
mov
or
nop
call
and
and
(bad)
je
and
jge
adc
inc
add
cdq
fld
dec
fwait
mov
add
ins
xchg
mov
xchg
rcl
sbb
cmp
and
pop
jmp
scas
das
dec
das
call
fst
jbe
push
pop
xor
sbb
sbb
mov
je
sub
outs
push
jo
mov
pop
mov
jecxz
dec
mov
in
cmps
adc
push
leave
popa
mov
mov
sub
jno
popf
mov
xor
(bad)
ss
pop
mov
pop
or
adc
adc
add
sbb
pop
adc
inc
arpl
leave
mov
rcl
add
mov
mov
je
cmps
dec
lahf
aas
xor
int
daa
sub
addr16
lods
es
jl
lds
xchg
xchg
dec
xchg
mov
and
mov
sbb
or
cmp
mov
sub
adc
adc
mov
or
adc
mov
retf
aad
std
call
das
xchg
int3
enter
stc
dec
leave
adc
inc
xchg
or
dec
ins
jmp
and
cmp
dec
sbb
gs
in
cmc
sbb
jmp
sub
inc
mov
jbe
popf
dec
psubsw
jbe
pminub
dec
adc
imul
pop
or
push
sub
push
mov
popa
dec
popw
and
add
add
stc
in
push
add
mov
ins
xchg
push
pop
mov
xchg
int3
or
mov
sbb
or
pop
fnstcw
js
repz
leave
sub
call
inc
aas
pop
mov
cmp
popa
xchg
xchg
loope
push
sahf
loope
jae
jno
add
inc
lahf
lods
loop
add
test
adc
and
xor
movs
cmps
dec
inc
mov
pop
pop
mov
fld
fnstenv
jp
aad
push
aad
inc
xchg
mov
ror
leave
adc
pop
cmp
cmp
leave
lds
xchg
mov
call
lods
cdq
dec
sar
jp
mov
jp
xchg
mov
mov
inc
mov
xchg
sub
jmp
sbb
leave
xor
movs
or
xchg
sub
adc
cdq
push
xchg
xchg
cmps
popf
or
xchg
aad
retf
xchg
lea
xchg
lea
sbb
mov
add
and
and
test
loope
add
push
push
cwde
cld
add
jl
jge
sbb
xlat
add
xchg
ficom
jno
push
mov
cmps
jle
dec
adc
mov
cmp
iret
mov
and
add
movs
sbb
lea
sbb
lods
in
add
mov
xchg
in
das
adc
dec
xor
js
inc
adc
fld
leave
mov
jle
daa
inc
(bad)
jle
js
or
sbb
add
scas
dec
movs
inc
jns
mov
clc
pop
adc
and
leave
les
fld
in
sbb
cmp
ja
leave
dec
pop
mov
jno
xor
jmp
inc
jmp
(bad)
xchg
out
dec
cs
adc
and
push
leave
retf
shl
jnp
rol
and
mov
sbb
push
sbb
inc
and
xchg
or
pop
in
push
xchg
jle
mov
in
pmulhw
call
inc
bswap
lods
adc
es
dec
jae
pop
leave
jge
mov
and
mov
leave
int
or
dec
xor
add
sbb
imul
call
movs
inc
jo
imul
ss
mov
out
jno
xchg
add
or
data16
mov
pop
addr16
mov
xchg
addr16
xchg
cmp
or
dec
xor
imul
adc
mov
push
in
mov
mov
dec
push
mov
adc
xchg
xor
sub
push
sbb
push
jo
in
pop
dec
mov
inc
add
sar
icebp
add
or
mov
pop
mov
and
pop
cmp
dec
dec
push
sbb
mov
mov
xchg
adc
mov
or
xor
xchg
push
sub
aad
ret
adc
in
nop
scas
neg
inc
jne
cmp
retf
in
sbb
fstp
call
adc
repz
cmp
jbe
inc
fwait
dec
dec
sub
in
test
daa
xchg
fstp
ret
dec
je
in
je
or
xchg
xchg
fst
or
in
push
xchg
add
sub
adc
add
call
cwde
mov
call
pop
in
cmp
mov
mov
mov
xor
rcr
mov
cld
fnstcw
or
ret
dec
retf
cmp
dec
inc
inc
loop
add
test
cld
push
or
outs
and
rcr
jne
outs
mov
sub
(bad)
xlat
dec
xor
bound
popa
or
add
push
in
clc
cmovns
ror
dec
dec
and
pop
outs
mov
jae
in
rep
adc
push
and
push
sbb
jo
call
scas
and
and
call
movs
popa
push
add
or
mov
adc
dec
add
mov
js
xchg
test
in
push
inc
jo
gs
ins
ror
pop
(bad)
inc
add
inc
es
pop
outs
xchg
pop
cwde
fmul
xchg
bound
add
mov
pop
das
add
stos
ss
jo
adc
jle
push
and
xchg
div
pop
fstp
add
fisttp
pop
add
mov
ror
pop
shl
push
dec
data16
and
inc
xor
push
push
sbb
fadd
xchg
xchg
dec
mov
sbb
add
and
add
das
das
js
shl
fwait
and
cmp
push
adc
mov
mov
rcl
cmp
sub
scas
movs
jne
sbb
and
push
(bad)
addr16
push
js
sbb
mov
sti
cmp
in
mov
sbb
or
jg
stos
cs
gs
inc
cdq
mov
dec
sbb
mov
cdq
add
mov
add
bound
mov
pop
jl
sar
shl
movs
adc
xlat
test
mov
push
sbb
add
pop
push
add
lea
inc
imul
adc
fisttp
ret
or
aas
adc
outs
dec
dec
dec
and
mov
inc
and
cmp
pusha
das
jmp
rcr
or
(bad)
and
inc
add
(bad)
leave
dec
stos
sbb
add
cmp
mov
dec
(bad)
push
inc
inc
imul
or
dec
ret
add
ror
shl
pop
pop
ret
push
sbb
imul
popa
stos
out
(bad)
retf
lea
add
or
push
or
mov
arpl
and
(bad)
mov
xor
xchg
pop
mov
retf
test
add
stc
lds
jge
mov
xchg
cmp
fs
xchg
mov
dec
pop
sub
dec
test
in
pop
or
push
add
in
jp
outs
mov
push
in
in
dec
or
or
mov
lods
test
inc
push
jle
pop
or
pop
jb
icebp
(bad)
cmp
cmp
inc
or
test
mov
shr
push
cs
pop
lds
inc
inc
enter
ret
mov
xchg
cmp
mov
xchg
ds
aas
xor
mov
or
stc
add
xchg
je
add
bound
xchg
xchg
lods
or
ins
pop
and
sbb
pop
movs
test
mov
ins
jl
addr16
icebp
mov
jg
imul
bswap
xlat
and
out
dec
gs
mov
add
mov
dec
add
jbe
sub
lock
xchg
xchg
and
jne
push
or
shl
pop
pop
mov
pop
cmp
jns
or
in
or
nop
mov
or
loop
or
or
adc
into
lahf
jecxz
fs
jb
sbb
mov
mov
push
jno
aaa
mov
add
mov
int
sbb
or
mov
inc
add
sbb
iret
sub
dec
xchg
adc
xchg
mov
mov
add
dec
sub
or
lods
sub
repz
or
dec
push
inc
push
inc
push
or
sbb
cmp
fimul
aaa
std
aam
or
test
xchg
lods
pop
cmps
jne
cli
add
(bad)
(bad)
mov
mov
jne
stos
push
xchg
xchg
inc
pop
cmps
adc
push
push
ins
fcomp
xor
retf
lods
or
in
or
in
popf
lods
xor
jmp
xchg
inc
aas
or
mov
add
xchg
ret
adc
stc
pop
xchg
(bad)
inc
test
sbb
aaa
mov
xchg
leave
mov
inc
dec
aam
nop
cmc
retf
or
adc
xchg
adc
pop
cmp
(bad)
ins
and
mov
dec
cmp
xchg
adc
adc
jl
scas
ror
cmp
mov
mov
js
bound
in
add
pusha
ret
sbb
push
pop
sub
leave
int
cmps
mov
sub
call
and
pop
mov
ret
push
add
icebp
int
inc
cli
scas
in
lods
in
xchg
shr
xchg
xchg
or
lds
xor
or
jmp
bound
js
cmp
ds
add
sbb
jne
aaa
ins
xor
je
push
dec
jno
addr16
push
push
test
retf
or
xchg
cmps
hlt
add
mov
mov
xor
push
pop
inc
dec
(bad)
dec
fst
test
sub
inc
jmp
xchg
imul
inc
fldcw
add
fst
add
es
fnsave
cmp
pop
cmc
add
cdq
popa
fldenv
dec
sub
mov
dec
call
push
outs
mov
xchg
ror
call
jg
in
jno
or
cmp
dec
rep
movs
cdq
cmc
lea
rcr
inc
and
adc
push
retf
fisubr
push
ss
sub
push
dec
dec
sbb
nop
pop
mov
xor
mov
je
mov
lods
mov
pop
mov
mov
mov
xchg
lods
cmp
loop
xchg
rcr
stos
add
jb
daa
sbb
push
add
push
sub
push
sbb
add
push
pop
mov
add
mov
mov
fwait
movs
stc
sar
imul
out
xchg
popf
std
ds
inc
add
sbb
push
push
add
and
ja
add
jmp
inc
or
popa
mov
fwait
jg
add
and
sub
xlat
sahf
test
ret
sbb
das
mov
or
sbb
xchg
or
inc
(bad)
cdq
pushf
int
mov
push
adc
lea
mov
mov
mov
inc
push
jecxz
pushf
sahf
dec
pop
push
inc
mov
adc
lea
jp
ja
stos
mov
inc
daa
jmp
imul
push
cwde
lea
add
lods
(bad)
call
jge
bound
popa
jo
outs
lods
inc
fisttp
jp
(bad)
adc
inc
inc
inc
jmp
aad
xor
cmc
lahf
and
clc
(bad)
pop
sub
pop
xchg
xchg
mov
fwait
pop
add
mov
mov
xor
or
lds
fs
js
ins
arpl
xor
out
ret
or
ficomp
sbb
cmp
inc
in
in
adc
add
fdiv
pusha
inc
dec
inc
loop
push
add
push
sbb
stos
sbb
in
jo
mov
sbb
jno
or
imul
jae
cmp
leave
dec
sbb
dec
cmp
mov
pop
mov
mov
xor
loope
sbb
jae
push
pop
ins
js
les
sub
push
dec
xor
cmp
mov
pusha
and
(bad)
jne
mov
shl
stos
and
ja
lds
or
pop
and
cld
lahf
aam
or
xor
cmc
stc
mov
data16
movs
js
rcl
aaa
arpl
xor
xchg
(bad)
fadd
jl
ins
push
jno
cmp
sub
adc
lods
sar
or
push
lock
jns
ffreep
shl
xor
xor
icebp
gs
jg
or
push
mov
inc
sbb
xchg
dec
cmp
sbb
xor
dec
sub
push
mov
arpl
or
ins
cmp
sub
stos
push
jbe
aaa
stos
pop
cli
xchg
pop
in
mov
inc
test
add
xchg
add
add
mov
cmc
add
ds
das
xchg
div
or
xlat
imul
sbb
lock
retf
pop
pop
rol
push
mov
xor
add
call
adc
push
dec
iret
sbb
xor
ret
jge
adc
xchg
pop
icebp
sbb
stc
and
and
popf
mov
or
cmp
movs
mov
sbb
push
xchg
in
movs
push
out
mov
add
push
cmps
adc
mov
jae
dec
movs
dec
xchg
movs
xchg
cdq
sub
sub
jmp
jmp
add
js
imul
retf
adc
pop
add
push
jo
mov
popa
js
in
xor
pop
mov
xchg
ret
pop
stos
mov
add
xchg
lahf
jno
and
lods
jno
sub
cmp
sar
and
push
sbb
and
sar
leave
jp
add
fs
jb
push
or
dec
dec
cmp
mov
js
dec
xor
add
and
sbb
mov
xchg
gs
sbb
stc
popf
cmp
shl
lahf
pop
mov
push
frstor
xchg
fnstcw
adc
and
cmps
jg
test
lods
adc
sub
scas
push
xchg
xlat
das
daa
and
and
imul
add
add
test
je
push
addr16
mov
mov
hlt
or
imul
fnsave
or
mov
mov
mov
cmp
mov
add
mov
or
das
mov
sbb
jns
imul
dec
xchg
push
cs
dec
popa
movs
fisubr
add
jnp
xchg
xchg
sbb
add
mov
in
inc
inc
pushf
icebp
and
push
dec
inc
inc
push
bound
add
xor
inc
adc
push
and
mov
add
and
in
inc
jb
sub
inc
push
shl
mov
stos
cmp
sbb
popa
push
sub
popa
push
and
xchg
or
and
xchg
or
and
leave
imul
popa
push
pop
push
shl
or
xchg
pop
repz
popa
push
dec
stos
xchg
sbb
sub
stos
gs
in
sbb
mov
cmp
imul
gs
pop
lods
popa
adc
or
(bad)
in
imul
push
outs
cmc
adc
and
rcl
mov
and
add
or
or
mul
lods
test
cmp
cdq
adc
fstp
mov
out
sub
sub
inc
lds
sub
jbe
dec
sbb
test
sub
adc
xchg
ss
test
adc
sub
lods
cmc
call
retf
cmc
lods
ror
int
out
in
lods
dec
inc
pop
jae
pusha
jmp
aad
inc
sbb
test
mov
dec
mov
outs
jl
mov
xchg
mov
mov
mov
cmp
mov
retf
adc
int
call
mov
popf
jge
sahf
jge
pop
sub
gs
or
xor
or
inc
or
mov
sub
xchg
popa
cld
dec
xchg
and
imul
ins
xchg
addr16
js
aad
pushf
cmp
pop
lods
mov
das
cwde
leave
ins
enter
popf
retf
int3
addr16
retf
popf
ror
dec
inc
pop
fwait
int3
out
mov
inc
dec
stc
dec
addr16
fidiv
cmp
hlt
int3
out
fnstenv
jl
jnp
adc
mov
rcl
std
adc
daa
test
mov
xor
inc
add
dec
hlt
outs
(bad)
inc
mov
sub
sub
mov
dec
pop
sbb
loopne
adc
aas
cmps
pop
sub
mov
lea
dec
aam
cmp
hlt
aaa
int3
addr16
mov
in
scas
push
test
dec
sbb
int3
out
pop
sub
enter
addr16
int3
pop
dec
into
sbb
ror
pop
push
aad
pop
(bad)
fstp
fcmovu
fisub
in
iret
in
in
pxor
(bad)
pop
jb
jno
test
addr16
add
or
cwde
mov
leave
mov
xchg
into
add
(bad)
cmp
add
push
cmovge
ja
test
aam
dec
mov
cmova
jno
cli
ficomp
sub
inc
dec
add
cmps
ss
jmp
push
and
mov
mov
test
nop
pop
pop
int3
out
cwd
lea
sbb
jne
sbb
(bad)
lods
mov
dec
add
data16
sar
inc
ins
jg
pop
pop
scas
popf
scas
pop
xor
sub
data16
cmp
pop
mov
aaa
int3
aad
movs
jns
dec
push
fs
data16
and
imul
int3
addr16
pop
xchg
jne
ins
jns
aaa
hlt
retf
mov
sbb
mov
xor
movs
sbb
adc
dec
mov
mov
fimul
sub
popa
data16
push
dec
retf
dec
jp
adc
loopne
mov
movs
popa
push
pop
imul
xor
mov
or
mov
test
add
add
cmp
into
lods
daa
or
pop
and
jmp
lods
lock
or
hlt
and
dec
popa
or
mov
test
bound
xor
sbb
xchg
rdtsc
and
cmp
inc
enter
or
sub
aas
add
add
aaa
mov
push
xor
inc
or
add
loope
and
dec
mov
and
daa
push
xor
jnp
inc
pop
dec
push
pop
popa
aam
dec
aam
jno
or
mov
xor
leave
rcr
loope
aaa
dec
aam
icebp
stc
add
push
cmps
adc
and
xor
inc
dec
push
pop
popa
xchg
bound
pop
add
add
push
gs
xchg
popf
fst
imul
and
or
test
sbb
sbb
test
test
mov
cdq
inc
add
retf
push
xchg
push
pop
sbb
lea
sub
mov
push
inc
xor
xchg
bound
ins
inc
push
xor
or
cmp
bound
addr16
(bad)
or
inc
(bad)
cmp
jp
test
mov
cmc
or
stos
add
pop
add
mov
aas
mov
xor
xor
cmp
es
aam
cmp
imul
push
inc
sub
dec
aam
lahf
movups
adc
fwait
cmps
push
adc
push
pop
sbb
cmps
bound
push
sbb
sbb
cmps
push
sbb
and
cmps
push
and
es
cmps
push
cmps
sub
sub
sub
cmps
push
sub
xor
movs
push
xor
add
adc
aam
movs
xchg
mov
adc
je
add
cmp
test
or
cdq
sti
das
or
and
inc
js
(bad)
shl
mov
add
lods
rcr
jge
mov
test
or
fcmovbe
pop
xchg
sbb
jp
cmps
or
shr
mov
cdq
fdiv
xor
mov
mov
inc
xchg
jge
call
and
add
mov
repz
pop
std
pop
pop
jb
call
add
add
nop
jne
push
pop
mov
jae
into
mov
dec
push
sbb
push
jl
pop
pop
ret
cmp
xor
add
add
and
rol
icebp
xchg
sbb
retf
lock
mov
nop
popa
mov
lahf
add
add
ins
aas
mov
mov
js
fsubr
dec
xor
popa
pop
popa
push
hlt
es
out
lods
push
stos
arpl
mov
imul
push
mov
lods
sub
add
mov
jmp
push
mov
adc
jo
pop
(bad)
stos
sub
xor
add
ins
pop
aas
pop
iret
pop
xchg
mov
shl
add
add
jnp
xchg
mov
dec
ins
sbb
rol
sub
or
bound
add
add
lods
jge
xor
lock
xchg
add
fisttp
aas
add
add
mov
lods
xchg
aam
jo
adc
inc
cmc
test
and
push
pushf
and
add
(bad)
and
popf
or
lods
shl
push
fldcw
test
xchg
movs
xor
lods
ins
or
add
add
outs
in
jnp
push
icebp
cmp
cdq
sub
jg
data16
aas
pop
retf
mov
inc
sbb
or
sti
add
lea
cmps
test
pop
mov
jo
je
ret
inc
sbb
imul
arpl
inc
aaa
jae
call
add
add
sar
dec
adc
rcl
jmp
fcomp
push
or
sbb
fucomip
neg
push
add
add
jmp
cmp
jp
mov
pop
rol
popa
mov
pop
fs
std
add
icebp
cld
imul
push
cmp
push
std
outs
sub
inc
add
add
mov
in
dec
fisttp
sub
addr16
das
sbb
int3
rcl
leave
inc
add
add
cmp
rcr
cld
aam
mov
xor
mov
sub
push
lock
add
jmp
loopne
jbe
push
ins
(bad)
dec
pop
push
xor
ds
mov
add
add
dec
jl
push
and
aas
mov
lea
das
push
mov
fsubr
loopne
test
add
add
jg
(bad)
xor
je
push
lea
pop
retf
mov
mov
ds
adc
add
(bad)
ins
mov
dec
pop
aam
cs
push
fwait
inc
stc
mov
dec
(bad)
rcl
repz
xor
add
add
int3
movs
inc
adc
arpl
(bad)
in
fcmovne
and
add
aaa
call
repnz
fcmovnu
xchg
cdq
xchg
add
add
xchg
scas
jb
scas
jmp
(bad)
xchg
ins
rcl
(bad)
shl
es
cmp
(bad)
cld
jecxz
nop
gs
add
add
repz
push
xchg
mov
les
shr
and
add
xchg
sbb
mov
mov
int
out
jne
add
add
xlat
hlt
lods
sbb
push
test
inc
test
pusha
pop
push
js
and
add
xchg
js
sbb
and
test
shl
sahf
cld
or
mov
in
mov
sbb
xlat
dec
jg
scas
pminub
pusha
push
stc
mov
and
pushf
aaa
gs
add
fs
jns
push
pop
fisub
mov
adc
add
daa
test
sbb
adc
je
retf
cs
mov
stos
adc
ficom
push
sub
inc
pop
adc
in
pushf
mov
add
loope
add
xor
sbb
ins
in
xchg
repz
fimul
sub
fs
cli
mov
add
push
xor
(bad)
pop
cs
mov
dec
push
imul
outs
jmp
add
mov
das
or
push
sbb
mov
outs
scas
jle
test
mov
mov
nop
jb
inc
add
fwait
push
push
jl
lahf
mov
cmps
add
sbb
dec
pop
inc
adc
mov
add
sbb
fwait
cdq
push
inc
data16
inc
pop
or
call
jmp
add
cmp
dec
ret
icebp
xchg
fimul
in
jno
(bad)
jmp
inc
ins
imul
add
add
jno
ins
test
sub
mov
cmp
push
stos
sbb
add
scas
fild
mov
fstp
mov
or
scas
mov
pop
add
test
mov
mov
pop
jnp
es
adc
shl
xor
xchg
add
and
mov
add
fcmovnb
cmp
fdivp
fwait
inc
bound
pslld
add
jmp
jbe
call
cmp
mov
aas
sbb
add
mov
inc
jo
add
add
add
sub
jae
jp
mov
mov
and
fist
or
das
inc
ror
add
add
and
push
and
fdivp
mov
test
add
add
fisttp
jne
fwait
mov
jmp
xchg
addr16
or
lds
sbb
add
ficom
xor
cmp
ficom
mov
mov
add
add
xchg
push
fsubp
cmp
stc
loopne
push
dec
xor
xlat
js
sbb
add
add
movs
fdivr
adc
out
out
repz
cld
repnz
sub
aam
add
add
jno
in
mov
jmp
sub
pop
sbb
ds
mov
cmp
adc
call
es
addr16
jns
dec
das
imul
jns
add
add
jecxz
push
cmp
or
test
clc
repz
aaa
adc
cmp
popa
jp
sbb
test
push
mov
stc
add
add
outs
jmp
jmp
inc
mov
cmps
sar
xor
fidiv
enter
push
pop
ins
mov
add
iret
out
cmp
xor
dec
add
add
lock
mov
push
jno
or
jbe
fsubrp
adc
mov
adc
mov
add
add
xor
stos
xchg
pop
je
cmp
lahf
(bad)
adc
xchg
out
test
arpl
test
lods
popf
outs
test
mov
pop
mov
icebp
mov
mov
xor
add
cmp
clc
mov
push
pushf
call
add
call
fwait
mov
stc
js
in
pusha
xchg
out
adc
mov
(bad)
and
enter
add
loopne
xchg
call
pop
fs
sbb
les
in
or
in
add
add
nop
sub
mov
pop
jmp
(bad)
xor
je
jge
ficom
gs
jmp
adc
aas
and
lods
stos
movs
push
push
ins
(bad)
push
int3
sti
inc
cmc
inc
enter
add
cmp
pushw
and
inc
lahf
jp
fxch
dec
xchg
push
arpl
rol
add
add
mov
mov
movs
mov
ret
push
adc
test
mov
push
add
pop
or
add
add
mov
adc
sub
or
bound
and
icebp
add
add
jae
inc
jg
mov
in
pusha
xlat
fdivr
ins
pop
cmp
jge
jne
int3
test
xchg
xor
test
or
push
f2xm1
jmp
stos
test
stos
ret
pop
or
pop
(bad)
or
das
jnp
add
add
test
(bad)
dec
lahf
pop
paddq
je
into
mov
jp
pusha
push
xor
cmp
(bad)
fnstcw
aas
jb
sub
and
outs
bnd
ds
sub
in
clc
mov
add
scas
test
imul
xchg
sbb
sub
clc
and
inc
clc
aad
sub
add
das
ins
cmc
mov
jb
or
imul
xor
aad
inc
mov
add
add
(bad)
idiv
pop
inc
inc
and
adc
push
std
xchg
dec
mov
mov
aam
cmc
lds
mov
rol
add
mov
(bad)
sub
xchg
inc
cmp
push
out
es
icebp
add
fwait
or
lods
es
sub
sub
or
outs
mov
sub
into
add
add
push
fsub
mov
push
lea
lea
jge
iret
stos
in
add
add
pusha
cmp
call
inc
ss
jmp
mov
fdivr
out
mov
cmp
sti
retf
cli
add
add
outs
dec
xor
daa
mov
in
jne
outs
cmp
inc
pop
fdivrp
call
jns
dec
test
add
lods
push
inc
inc
sub
push
push
mov
ins
dec
sar
add
mov
loop
push
dec
pusha
add
add
cmps
cli
xor
jg
pop
jge
sub
jno
sub
add
add
sub
ret
outs
(bad)
in
adc
dec
fld
add
add
or
add
inc
sbb
pop
in
push
pusha
xor
rcr
add
clc
add
adc
jns
es
popf
sub
nop
loopne
ins
fs
mov
setg
loop
rcl
add
add
mov
adc
loope
and
loop
aas
xor
or
cld
mov
mov
call
out
or
mov
xchg
add
add
mov
gs
test
jo
dec
push
sti
dec
jle
sub
sahf
les
mov
hlt
inc
fs
or
add
add
das
call
stc
cmc
popa
fst
test
dec
loop
mov
adc
mov
sub
data16
rcr
enter
movs
add
int
adc
mov
out
adc
add
add
mov
fmul
or
xchg
mov
mov
adc
and
jp
jl
xlat
cmp
add
cmp
adc
cwde
jecxz
sub
scas
inc
imul
add
int
jbe
sbb
inc
adc
push
xchg
mov
push
fs
dec
sbb
ins
sbb
out
retf
inc
inc
add
fnstcw
loop
pop
pop
inc
inc
xchg
or
or
dec
push
mov
pusha
test
sar
cmp
popa
dec
popa
add
inc
test
shl
scas
inc
js
std
aaa
fdiv
inc
test
pop
icebp
mov
add
add
pop
mov
mov
bound
pop
rcl
pop
dec
mov
lock
ret
mov
addr16
jne
mov
push
repz
mov
daa
add
add
in
jnp
loopne
mov
imul
pop
outs
inc
jno
mov
xchg
push
(bad)
lea
add
loop
add
add
or
rol
cmp
jne
mov
cmp
or
addr16
xor
add
add
add
pop
jmp
mov
outs
push
push
ds
or
xrelease
test
add
add
mov
pop
pushf
iret
jecxz
push
or
add
push
sti
test
test
mov
mov
sub
stc
fwait
inc
xchg
pop
dec
popa
les
jnp
icebp
loope
test
pop
popa
add
fnsave
fcomp
out
fs
and
faddp
push
xor
idiv
jle
in
ja
add
add
pop
iret
or
push
jo
add
or
and
jae
xchg
pop
ret
loope
add
mov
push
out
mov
std
or
jge
fld
adc
pop
stc
out
mov
add
and
push
ins
call
dec
loop
iret
shr
cmp
(bad)
fidiv
add
add
and
punpckhbw
add
cmp
cmp
shl
sti
aam
js
lods
sbb
(bad)
pop
lahf
push
add
add
movs
push
inc
sub
call
adc
jg
xlat
jl
add
ins
sbb
mov
or
mov
outs
aaa
imul
dec
pop
jp
xchg
mov
leave
ret
dec
inc
add
out
stc
adc
mov
or
dec
ror
mov
mov
lods
add
add
xchg
(bad)
sti
mov
jecxz
lock
xchg
imul
and
(bad)
add
add
mov
imul
push
push
out
xlat
pop
gs
loop
add
cmp
xchg
lock
xor
(bad)
push
clc
push
add
js
lds
add
stos
in
add
or
(bad)
xchg
jmp
icebp
add
inc
pop
mov
add
lods
(bad)
xchg
jle
jle
xlat
aas
rcl
sub
jle
rol
add
jmp
mov
scas
adc
dec
test
out
sbb
(bad)
lods
mov
and
add
pushf
sti
xchg
out
mov
aam
int
cmp
sub
stc
sub
adc
xchg
add
popa
jbe
add
add
inc
seta
lea
in
outs
push
push
mov
bound
sbb
cmc
add
pop
xchg
cmp
sub
cmp
mul
fs
cld
lods
neg
hlt
fld
inc
rcl
fidiv
idiv
mov
xor
mov
add
add
sub
fimul
ret
push
xchg
scas
int
sbb
dec
(bad)
push
cmp
sahf
cmp
add
xchg
ret
xchg
jnp
iret
jl
cld
gs
and
mov
mov
inc
ds
push
fisttp
out
add
add
and
xchg
and
or
inc
fwait
mov
rol
fild
scas
leave
add
inc
shl
repnz
sbb
add
int
in
ins
jg
mov
add
add
inc
or
aas
(bad)
into
mov
test
test
scas
adc
dec
jo
shl
lahf
pop
add
add
xor
add
mov
pcmpeqw
pop
call
pop
jle
mov
add
icebp
add
inc
inc
int
mov
imul
test
add
cdq
xchg
mov
add
add
outs
iret
cmp
sub
stc
sub
mov
push
(bad)
fld
call
in
jp
mov
cmp
push
mov
mov
sbb
add
ror
mov
enter
dec
mov
aad
(bad)
sar
fisttp
(bad)
sub
cmp
add
push
xor
mov
mov
mov
test
cmp
sub
out
jb
xchg
adc
push
xchg
pushf
(bad)
jmp
popf
mov
pop
gs
adc
ret
imul
push
rcl
inc
movs
add
sldt
add
cdq
pop
mov
jmp
loopne
aam
sub
mov
add
jb
inc
jne
movs
xor
mov
les
xor
and
or
push
repnz
push
fisttp
xchg
(bad)
pop
sar
iret
jo
aas
into
addr16
pop
add
add
push
push
sub
test
hlt
and
and
xor
add
int
arpl
add
mov
jbe
cwde
aaa
pop
outs
int
ror
ror
sbb
dec
adc
enter
add
add
adc
loop
fwait
jl
(bad)
(bad)
push
stos
retf
test
mov
push
push
jb
stc
xor
add
sub
ja
sar
push
in
inc
pop
popa
mov
lods
cmp
scas
dec
es
and
mov
(bad)
mov
and
int3
xchg
add
add
mov
mov
stos
cli
dec
pop
ret
dec
sbb
imul
cli
loop
xlat
push
aad
mov
fistp
cs
out
ret
xor
mov
in
nop
pop
out
les
xchg
push
dec
push
shl
ds
outs
retf
mov
and
inc
xchg
jp
pop
adc
sbb
xchg
inc
and
ud1
rol
leave
sahf
out
sub
fnstsw
adc
pop
add
repz
jp
and
xchg
aas
adc
xor
xlat
iret
inc
mov
add
xor
add
add
dec
aam
pop
(bad)
icebp
cmps
push
dec
or
sub
or
or
aam
out
(bad)
setne
lods
adc
adc
adc
push
scas
std
adc
ja
cdq
pop
nop/reserved
mov
cdq
mov
and
dec
aam
add
imul
sbb
xor
mov
std
mov
cmps
push
cmps
mov
mov
push
jne
(bad)
out
movs
add
mov
sbb
and
imul
xchg
(bad)
ins
push
ins
test
and
push
inc
mov
or
ror
mov
add
or
adc
and
dec
call
ja
jns
push
ror
out
or
or
inc
add
add
enter
cwde
push
add
adc
sbb
outs
cmp
add
and
or
and
es
daa
pop
mov
sbb
xchg
dec
aam
mov
xor
inc
add
test
cmp
add
fsub
jns
or
fiadd
cwde
add
mov
mov
jno
test
data16
mov
xchg
push
ja
outs
and
mov
outs
dec
xor
inc
and
mov
popa
dec
cmp
jno
sbb
into
fist
and
bound
jle
add
push
or
mov
jo
xchg
and
fwait
cmps
push
cmp
pop
sti
push
cmps
push
cli
cmp
cmps
clc
test
cmps
push
shl
in
cmc
repz
xchg
repnz
dec
aam
inc
out
pop
out
dec
aam
dec
imul
mov
xor
(bad)
mov
adc
(bad)
adc
ins
and
add
iret
push
inc
add
inc
pop
daa
test
lods
and
ret
add
mov
mov
scas
fiadd
mov
dec
imul
mov
jmp
rcl
inc
ja
aam
and
(bad)
(bad)
int3
add
fist
xchg
shl
cmps
push
leave
fldl2t
stc
scas
ss
mov
movs
adc
pop
mov
vpaddusw
in
and
dec
aam
std
int
cmps
inc
sbb
xor
or
and
xchg
movs
mov
fimul
xor
icebp
adc
fwait
dec
jno
setno
mov
xor
or
shl
mov
fimul
cmp
jns
dec
push
or
or
inc
inc
xor
adc
add
xchg
dec
imul
test
test
nop
bound
(bad)
xchg
or
adc
mov
sbb
jge
cmp
sub
je
xor
and
jge
or
out
popa
xlat
inc
popa
sbb
loop
xchg
or
and
sub
inc
sbb
sbb
(bad)
fwait
xchg
push
add
and
aam
dec
aam
cli
repnz
or
push
add
std
stc
icebp
loope
mov
xor
add
add
xor
or
les
adc
inc
add
dec
mov
je
push
rol
loope
shr
in
aam
lock
mov
ins
popf
pop
movs
fs
push
mov
mov
add
leave
cmp
add
int3
cmp
or
cmp
mov
jns
inc
mov
mov
mov
js
add
add
jmp
adc
fsubr
call
cdq
pop
movs
gs
push
lods
ins
pushf
pop
test
cwde
pop
add
add
add
xor
bswap
aas
inc
ret
push
into
inc
dec
mov
jb
dec
mov
add
jecxz
shr
out
pop
fbld
loop
shr
out
push
fisub
outs
lahf
pop
mov
outs
sahf
pop
add
add
or
cmp
pop
(bad)
aaa
test
(bad)
test
mov
mov
jp
inc
mov
add
add
sub
sbb
daa
out
xlat
sub
sbb
es
(bad)
stos
imul
stos
push
pop
cmps
xchg
push
(bad)
inc
mov
dec
xor
cmp
and
arpl
rol
jg
cmp
add
sbb
outs
push
arpl
mov
inc
adc
push
cmp
pop
(bad)
imul
sub
adc
js
clc
loopne
adc
push
sub
js
sbb
adc
jo
cmp
jnp
loopne
icebp
inc
fld
add
shl
jo
xchg
scas
call
ins
lock
repz
inc
xchg
add
add
test
push
jmp
push
loop
pop
lods
jae
push
test
pop
inc
or
or
jb
fcomp
jbe
es
mov
rcl
or
mov
int3
repz
and
xor
mov
int3
sub
sbb
push
sub
add
sbb
mov
xor
pop
int3
mov
int3
sub
push
pop
adc
es
mov
pop
es
ret
xor
push
sub
aaa
pop
xor
inc
fwait
cmps
cmp
inc
sbb
cmp
or
aaa
ins
xor
or
les
xor
js
test
cmp
or
sub
aaa
push
mov
xchg
aam
(bad)
les
es
inc
cmps
outs
push
dec
and
inc
das
push
imul
pop
xor
dec
aam
sbb
dec
jns
dec
test
jno
fstp
xor
or
sbb
sbb
push
lock
inc
mov
aaa
cmp
cmps
jo
or
ins
or
add
add
add
and
add
or
das
and
cmp
test
add
push
add
jle
add
xor
cwde
add
add
bound
and
xor
inc
mov
push
push
shl
and
pop
sbb
int
add
sbb
es
sub
sub
jmp
add
push
jne
ja
jns
jnp
add
add
mov
xchg
cwde
cdq
call
test
stos
stos
mov
mov
mov
add
add
mov
(bad)
enter
rcl
aad
xlat
fcomp
fcmovu
loop
in
out
call
and
test
repz
cmc
div
clc
stc
cli
sti
bound
pop
loopne
or
js
adc
out
popa
mov
push
or
adc
or
and
push
icebp
push
shl
xor
jno
inc
sub
push
sub
push
data16
popa
inc
repz
or
(bad)
and
pop
sub
mov
in
mov
push
xchg
push
int3
clc
adc
or
nop
push
fwait
cmps
push
loope
imul
push
movs
mov
leave
sub
lds
aaa
dec
dec
pop
sub
push
push
push
cmp
push
fisub
stos
xchg
call
das
add
imul
sbb
jb
jecxz
jns
loope
pop
int
jl
mov
icebp
cmp
jge
fist
jmp
aas
call
sub
das
adc
pop
and
jmp
das
push
dec
pop
mov
or
jp
int
sub
gs
retf
adc
repz
outs
add
adc
push
movs
aas
test
xchg
out
pcmpeqw
or
in
(bad)
or
sub
sub
scas
sahf
pop
adc
dec
popf
je
pushf
outs
pop
fnstcw
ja
jns
adc
mov
ins
pop
mov
sbb
xlat
pop
sbb
int
xchg
scas
pop
adc
pminub
or
lds
repz
push
push
sbb
xlat
(bad)
push
gs
or
sbb
pop
lods
pop
ins
pop
gs
imul
or
mov
add
aas
lods
retf
iret
outs
imul
pop
loope
inc
outs
(bad)
xor
shr
jp
xchg
mov
fnstcw
rcr
ret
pop
add
pop
and
in
mov
minps
jp
pushf
call
or
xor
imul
(bad)
and
aad
aad
in
ja
or
jnp
fisub
add
ins
dec
test
ja
pusha
xlat
std
loope
je
out
aas
leave
dec
add
dec
inc
dec
fldenv
addr16
jbe
and
(bad)
cmc
(bad)
std
mov
push
xchg
xor
sbb
into
pop
test
xor
stos
mov
or
pop
fcmovbe
(bad)
push
cmp
retf
bound
xchg
add
jo
mov
pcmpgtw
into
ins
jmp
cmc
addr16
int3
xadd
mov
mov
int
fnstcw
ins
pop
sbb
adc
jmp
cmc
retf
stos
jp
and
sbb
scas
mov
ins
pop
sub
lahf
sbb
test
xchg
popf
scas
push
push
xor
cmp
mov
(bad)
int3
xor
pop
retf
test
aas
dec
lahf
popa
pop
jmp
stos
mov
push
and
sub
lahf
call
test
clc
in
push
cmps
jg
dec
aaa
aas
and
inc
xchg
adc
fdiv
cdq
int3
cli
mov
sbb
fcomp
fwait
pop
pop
push
and
or
aaa
pop
(bad)
iret
es
out
shl
push
sub
add
popa
fist
in
add
retf
mov
test
add
add
sub
and
adc
push
push
inc
add
inc
add
sub
or
retf
cmps
dec
push
aam
in
fnstcw
dec
xchg
or
push
por
hlt
sbb
dec
js
lahf
inc
(bad)
sub
push
xlat
scas
mov
pop
dec
daa
or
push
arpl
or
imul
in
pop
add
or
inc
addr16
inc
cmp
retf
data16
add
sub
add
repz
fild
mov
dec
add
add
add
rol
sbb
sbb
add
mov
add
xchg
add
inc
std
hlt
leave
and
add
inc
add
and
loope
push
xor
rol
add
or
not
inc
add
push
jo
dec
or
ud1
add
shr
sbb
sub
push
push
adc
stc
add
repz
push
push
fistp
fsubr
fucomi
cmp
jp
retf
add
loope
icebp
or
stc
(bad)
xchg
lock
inc
das
aas
lods
scas
scas
pusha
mov
push
and
xor
xor
or
std
mov
fiadd
int3
fcom
mov
add
xchg
rol
inc
add
jno
rol
or
inc
icebp
sahf
ss
xor
mov
call
add
or
and
scas
or
jno
fwait
or
and
ds
aas
(bad)
cmp
add
pop
aas
dec
pop
add
add
or
pushf
addr16
stc
icebp
and
shl
stos
pop
sahf
stc
dec
add
das
dec
jne
js
pop
outs
daa
(bad)
scas
adc
push
cmc
add
xlat
or
lods
sub
stos
mov
stos
(bad)
mov
pop
das
aas
xor
das
mov
jg
add
arpl
adc
out
out
adc
inc
nop
mov
das
aas
push
lods
aaa
push
dec
das
add
pop
(bad)
jae
sub
mov
cmp
sar
or
cmp
hlt
outs
out
sub
inc
or
ret
das
pusha
bound
xor
sbb
(bad)
nop
adc
int3
mov
mov
js
icebp
cmp
dec
sbb
sbb
loopne
jae
or
cmp
gs
jle
xor
sbb
push
adc
(bad)
bound
je
fsubr
pop
loopne
jne
(bad)
out
fcmovbe
pcmpeqb
adc
jp
cmp
outs
fidiv
adc
dec
mov
fsubr
imul
ja
sbb
mov
ins
xor
pop
je
sub
mov
and
ja
add
stos
pop
ins
scas
mov
outs
cmp
ins
pop
outs
cmps
je
mov
arpl
outs
outs
add
popa
out
sar
ja
scas
call
outs
gs
xlat
(bad)
pop
xor
test
ins
jnp
out
jg
jnp
add
test
sbb
push
je
int3
jno
or
fs
adc
gs
clc
ins
pop
outs
xlat
pop
mov
sbb
bound
push
sub
xor
push
(bad)
scas
and
sub
imul
adc
popa
inc
jae
sub
mov
push
sbb
fistp
adc
dec
icebp
push
mov
add
imul
adc
ja
adc
sub
repz
enter
outs
ins
mov
ja
outs
dec
fldenv
lods
bound
push
dec
out
inc
imul
sub
sar
pop
outs
in
adc
imul
ret
into
repnz
ins
pop
add
sbb
push
lock
push
fdiv
hlt
mov
rcr
add
and
jno
mov
sub
jae
jg
inc
jns
nop
lods
dec
je
add
dec
push
mov
push
and
int3
fisttp
ins
clc
sbb
push
aaa
jns
movq
mov
or
shr
outs
pop
fsub
pop
jno
cmps
pop
das
imul
push
jge
jae
rcr
push
jbe
cmps
jno
adc
pop
xchg
jbe
outs
daa
ins
mov
test
(bad)
fwait
div
inc
cmps
push
data16
in
sub
int3
xor
dec
mov
jbe
sub
sbb
pop
xor
jno
clc
stos
fild
aaa
lahf
arpl
ret
mov
sub
pop
adc
push
mov
ins
stos
push
mov
sbb
inc
cmp
pop
and
dec
inc
jl
stos
mov
and
pusha
jg
jbe
ret
inc
and
ins
mov
(bad)
das
jae
iret
outs
mov
sbb
sub
imul
cmp
fcomp
push
dec
inc
mul
sti
push
outs
test
hlt
das
add
pop
or
les
xchg
ins
stos
jno
xlat
dec
dec
(bad)
push
imul
dec
loopne
pmaxsw
cvttps2pi
inc
mov
in
addr16
aaa
push
pop
adc
dec
addr16
push
(bad)
and
outs
dec
dec
iret
jg
into
cwde
pop
add
out
push
into
dec
mov
add
enter
mov
dec
ja
mov
(bad)
(bad)
int3
je
les
pop
jne
inc
arpl
pop
pop
sub
push
ja
aaa
mov
push
test
(bad)
clc
popa
jns
mov
xor
fimul
ror
dec
xor
mov
dec
xchg
ret
jno
iret
arpl
xlat
fndisi(8087
sbb
sbb
daa
out
push
sub
arpl
add
mov
push
ret
push
lods
imul
dec
push
or
sbb
scas
(bad)
int3
mov
xor
mov
mov
inc
dec
sub
mov
add
add
or
ins
sbb
mov
(bad)
and
pusha
xchg
ins
ja
fcomp
jo
xchg
sbb
fild
pusha
cs
cmp
dec
ins
into
lahf
mov
iret
scas
scas
push
inc
cld
xlat
pusha
fild
cmp
ins
sub
shr
adc
(bad)
inc
dec
adc
pushf
scas
js
nop
push
rol
add
pop
push
loopne
jae
pop
or
mov
mov
fs
arpl
mov
mov
mov
ret
inc
xor
dec
or
and
add
shl
das
pop
dec
ror
scas
lock
and
inc
sub
fdiv
dec
xor
lods
ja
out
xchg
fnstcw
cmp
or
pop
jno
pop
addr16
or
(bad)
pop
or
mov
jno
jns
test
inc
sub
mov
(bad)
fwait
test
mov
shr
and
jns
xchg
push
inc
cmp
push
mov
cmps
adc
loop
outs
jnp
das
je
xor
jecxz
(bad)
xchg
hlt
add
sub
push
dec
repz
loope
push
sbb
pop
fs
(bad)
mov
dec
sub
nop
adc
pop
inc
stos
xchg
rcr
push
xchg
stos
dec
dec
cmp
mov
dec
daa
nop
sub
pop
aad
mov
xor
imul
aad
fidivr
aam
pop
(bad)
loope
(bad)
movs
and
ins
pop
jl
gs
inc
mov
xchg
mov
push
sbb
inc
in
adc
lods
push
sbb
mov
(bad)
in
arpl
fcom
push
pop
add
dec
lea
push
add
jmp
and
xchg
xchg
or
test
inc
lea
push
jb
jae
sbb
stos
cmp
mov
sub
cmp
mov
push
xor
cmp
or
mov
hlt
je
add
or
mov
test
mov
test
and
adc
pop
push
cdq
pop
enter
scas
pop
adc
lock
pop
fadd
nop
push
imul
(bad)
xchg
fist
in
in
mov
xor
jne
or
and
ret
aas
(bad)
jmp
into
test
inc
enter
mov
jno
jmp
add
adc
test
popa
aam
or
mov
jno
test
outs
mov
out
push
sbb
ins
xacquire
fstp
sub
jnp
fisttp
dec
jae
inc
daa
sbb
inc
(bad)
push
sbb
(bad)
ror
push
aam
mov
adc
push
jmp
and
adc
push
adc
pop
dec
cs
ret
sub
loopne
adc
or
inc
pop
enter
outs
mov
add
shr
lods
imul
out
stos
or
lods
adc
bound
fsub
adc
push
jl
sub
in
jnp
ss
mov
cmp
and
dec
arpl
pop
add
and
pop
mov
xor
sbb
or
ins
fcomp
fnstenv
or
and
cmp
push
(bad)
add
ins
jne
loopne
(bad)
lfs
dec
js
pop
jmp
outs
pop
mov
jecxz
mov
cwde
mov
sub
loope
sar
inc
mov
cmp
ins
aas
out
pop
jno
push
jno
add
push
mov
add
rep
aam
shl
push
in
mov
in
das
add
mov
test
push
div
lahf
jmp
data16
and
pop
cwde
pop
dec
cs
adc
xchg
mov
sbb
push
and
das
ja
sbb
mov
mov
or
and
in
pop
add
pop
jmp
mov
das
dec
jno
inc
push
adc
lods
sbb
ja
xor
push
fadd
mov
and
push
lea
clc
and
test
adc
cmp
adc
ins
pop
bound
cmp
pop
and
rol
ins
loopne
xor
pop
hlt
mov
lods
dec
pop
pop
data16
push
shl
mov
pop
loope
shl
xor
cs
pop
cmp
or
push
dec
jb
aam
movs
xor
push
or
and
sbb
adc
sbb
out
loope
or
sub
inc
cvttps2pi
sbb
cmp
pusha
dec
sub
fwait
jb
push
xchg
cmp
arpl
dec
xor
mov
add
xor
jno
ins
sub
sbb
fwait
and
ins
xor
push
xor
arpl
adc
push
mov
movs
add
and
lahf
daa
jno
pop
popa
mov
inc
add
sub
mov
mov
sub
pop
jl
push
and
or
fadd
ins
jb
arpl
rcr
loopne
and
sbb
shr
and
sbb
aaa
dec
sub
sub
sbb
or
inc
stos
cmp
imul
add
push
xchg
sbb
pop
dec
push
das
daa
repz
adc
mov
push
lock
es
aas
in
rdtsc
inc
mov
int3
inc
adc
ins
loopne
movs
ds
add
(bad)
imul
enter
add
clc
gs
push
mov
in
sub
mov
add
comiss
or
pop
ins
(bad)
adc
xor
dec
(bad)
xor
mov
fs
adc
call
push
xor
fnstenv
dec
ss
pop
in
sub
and
mov
daa
ds
cmp
cmp
hlt
and
cmp
push
shr
scas
mov
in
jo
dec
jbe
mov
push
and
push
aad
inc
push
mov
mov
xor
enter
xchg
adc
sub
xchg
cwde
inc
add
cld
adc
jg
int
stos
cmps
ds
adc
mov
repz
retf
ss
xor
add
pop
adc
mov
daa
inc
enter
popa
popa
cli
iret
stos
ret
je
sub
xor
inc
or
outs
cmp
or
push
and
inc
jbe
add
add
xchg
xor
sub
jecxz
adc
enter
out
call
rol
sbb
push
adc
test
fild
bound
lods
inc
in
sbb
daa
mov
sub
inc
dec
jns
ja
cmp
adc
ja
dec
adc
push
sbb
gs
and
or
adc
scas
adc
mov
ins
push
stc
ficom
jecxz
adc
adc
lea
push
inc
cmp
mov
mov
push
cmp
push
jle
mov
xor
xchg
xor
xor
(bad)
fcom
push
sti
fwait
mov
cmp
dec
dec
sub
jae
push
sub
lds
adc
fcom
push
push
enter
sar
adc
(bad)
push
dec
or
and
sbb
pop
sbb
pop
out
sbb
inc
jo
adc
cs
add
inc
mov
xchg
push
mov
mov
mov
jp
daa
ret
jns
gs
dec
mov
sbb
sahf
mov
pusha
jp
mov
sub
fdiv
ret
sahf
inc
cmc
jb
fs
fmulp
fimul
test
je
pop
test
xchg
leave
test
ja
lea
outs
adc
push
outs
lods
push
or
pushf
cmps
adc
ret
sub
ret
mov
fidiv
jno
cmp
push
or
mov
rol
outs
movs
mov
pusha
xchg
sub
push
outs
adc
adc
xchg
or
jmp
push
dec
clc
leave
jne
call
jae
or
(bad)
mov
adc
xor
dec
xor
add
je
adc
enter
push
dec
dec
dec
or
arpl
(bad)
pop
jnp
mov
dec
dec
dec
dec
xchg
bound
push
dec
push
pop
(bad)
pushf
bound
adc
adc
aam
sbb
call
jmp
(bad)
mov
ret
add
iret
loop
or
add
add
bound
ret
ret
or
ret
pop
push
pusha
aad
xchg
add
add
dec
or
add
add
or
or
xor
outs
sbb
inc
push
cdq
fs
fimul
enter
sbb
sbb
add
pusha
bound
cmp
xchg
dec
les
fdiv
and
sub
xchg
xchg
cmps
or
pop
pop
or
xlat
and
cdq
sub
ror
sub
or
push
or
push
cmp
sbb
xor
mov
dec
push
sub
(bad)
fild
fcomp
aam
(bad)
jmp
or
push
mov
xchg
xchg
pop
xchg
or
or
or
add
pop
inc
or
push
or
cmp
add
push
inc
dec
leave
add
add
add
inc
sub
sub
or
sbb
xchg
mov
cmp
ds
rdpmc
jae
or
add
fimul
xchg
cmps
sbb
mov
test
(bad)
dec
adc
jae
lds
xchg
adc
shr
mov
xor
jno
xchg
in
adc
enter
adc
fiadd
add
stos
xchg
test
cli
or
push
adc
add
add
call
mov
scas
adc
adc
add
ficom
add
add
push
sub
std
loop
repnz
add
sbb
adc
or
add
cmp
xor
arpl
(bad)
fiadd
lahf
das
jo
add
leave
pop
xor
push
or
fiadd
cmps
aam
dec
and
push
sbb
les
xchg
jmp
add
or
push
or
popa
loope
hlt
or
fadd
xchg
mov
add
aad
xor
add
pop
add
or
sbb
or
mov
lods
jp
add
add
rol
jle
xchg
into
xchg
scas
xchg
test
pop
push
jmp
arpl
or
inc
cld
adc
clc
xchg
xchg
stos
mov
jb
mov
stos
cmp
xchg
push
push
or
sub
inc
retf
es
and
pop
or
mov
pop
shr
adc
(bad)
push
sub
mov
mov
enter
push
mov
mov
mov
mov
cmp
ret
mov
fs
xor
sbb
sub
rcl
push
retf
or
jmp
or
push
fld
dec
pop
push
xor
lahf
adc
mov
mov
add
sub
and
or
and
xchg
lods
jno
sub
mov
adc
cdq
rol
imul
outs
xchg
rol
add
mov
sub
or
std
adc
add
pop
inc
sub
add
sbb
cmp
loope
pop
sub
adc
jno
sbb
mov
add
mov
popa
adc
popa
dec
inc
inc
gs
out
sahf
js
adc
or
add
adc
adc
js
test
and
add
clc
add
(bad)
in
int3
inc
rol
and
pop
out
or
xchg
sbb
das
push
vmovaps
(bad)
outs
push
out
inc
pop
jnp
pop
jp
popa
sbb
xchg
pop
sbb
jno
pop
ss
ds
push
je
dec
(bad)
fadd
daa
mov
and
xchg
adc
push
add
inc
adc
and
test
test
loope
and
leave
and
mov
or
add
add
les
xchg
outs
and
leave
xchg
lea
pushf
cmp
ror
inc
inc
fwait
adc
aam
add
inc
inc
movs
inc
jmp
mov
mov
push
jmp
inc
int3
dec
loope
inc
rol
ins
outs
jg
add
add
inc
inc
ror
mov
outs
mov
dec
dec
mov
adc
cs
xor
and
cmp
inc
jne
sbb
jmp
inc
xchg
add
and
adc
test
or
outs
or
arpl
dec
scas
push
jmp
jmp
cmp
ja
not
pop
nop
mov
imul
stos
fild
movs
dec
pop
push
jne
bound
rol
sub
cld
rol
add
jae
or
fdivr
addr16
adc
jbe
(bad)
mov
out
movs
push
jns
and
inc
mov
pop
in
adc
and
out
bound
mov
dec
dec
cmp
int
cli
and
xlat
out
add
add
add
add
leave
add
or
mov
add
xchg
add
inc
sbb
sbb
nop
sub
(bad)
std
sub
or
inc
jmp
cmova
aas
ret
and
rcl
adc
mov
sub
arpl
bound
jb
cmp
cmps
les
lea
xor
xor
adc
scas
ss
xor
shr
mov
and
in
adc
jecxz
les
test
loope
data16
pop
(bad)
dec
(bad)
paddq
std
aam
add
inc
inc
bnd
fistp
adc
xchg
xor
cld
add
dec
aas
inc
inc
lods
adc
and
inc
xchg
inc
stc
sti
add
jno
je
pop
dec
push
push
mov
cmps
mov
add
jnp
ret
push
addr16
add
jmp
push
movs
jp
push
xor
dec
inc
popa
fwait
or
repz
rcl
inc
inc
add
sbb
inc
int3
jns
shl
outs
ins
jmp
scas
ja
inc
xor
dec
adc
loopne
sbb
sub
and
mov
clc
sub
add
jb
ds
fwait
pop
rep
jmp
inc
sbb
cmp
dec
cli
inc
inc
sti
daa
out
cmp
out
fisttp
sbb
xor
dec
sbb
loope
jmp
stc
dec
inc
dec
adc
js
adc
or
xchg
lock
inc
inc
sub
addr16
sbb
or
cdq
out
add
and
std
inc
inc
mov
add
rcl
dec
and
cld
mov
iret
ret
jp
lahf
(bad)
push
pop
adc
mov
(bad)
or
or
or
adc
syscall
repnz
inc
cmp
ficom
and
mov
adc
cmps
aaa
push
adc
aad
push
inc
mov
adc
sub
add
adc
shr
addr16
push
adc
cmp
imul
test
sbb
push
and
stos
inc
jmp
cmp
adc
sub
adc
mov
mov
mov
mov
push
lahf
or
adc
sti
retf
mov
dec
out
test
add
and
mov
ficom
jmp
xor
scas
mov
add
inc
(bad)
pusha
sbb
adc
fmulp
cmp
fdiv
jg
cmp
stos
adc
xchg
adc
or
add
and
push
rol
and
imul
retf
neg
in
(bad)
std
cdq
or
add
sbb
rcr
sbb
aaa
pushf
rcl
adc
mov
cmp
xchg
mov
or
in
xor
(bad)
and
jmp
jl
aam
pop
daa
imul
daa
add
pop
je
sbb
pushf
popa
add
jo
mov
cdq
stos
std
bound
xchg
cli
ficom
test
int3
push
jmp
xchg
xchg
sbb
mov
std
rol
imul
daa
call
and
movs
popf
jmp
mov
xchg
pop
add
adc
xor
addr16
pop
cmp
jecxz
or
shl
aad
lds
mov
add
lock
mov
jge
movs
xor
out
adc
inc
jg
and
jge
xor
sbb
adc
ret
fld
xchg
pushf
nop
cdq
sub
inc
adc
xchg
add
xchg
sbb
sbb
inc
sbb
jg
adc
add
(bad)
and
sbb
outs
jmp
cmp
test
pop
xor
dec
xor
mov
stc
int3
lods
pusha
arpl
push
or
add
fnstsw
aaa
inc
enter
sbb
addr16
dec
daa
jae
xchg
dec
test
cmp
mov
adc
inc
aad
pop
pop
jg
jmp
movs
sub
adc
aam
sub
and
es
sbb
push
push
or
add
inc
xor
adc
push
xchg
push
pop
jmp
adc
mov
fdivr
add
jbe
mov
(bad)
aas
test
xchg
push
add
mov
jnp
movs
xor
xor
sub
lock
pop
lahf
mov
mov
jne
dec
push
into
pop
cs
cmp
jmp
retf
sbb
mov
and
outs
inc
es
idiv
mov
les
or
out
enter
cs
outs
(bad)
mov
push
push
or
jmp
jp
pop
mov
pop
xor
sbb
dec
jge
mov
pop
pop
add
fnstsw
mov
fldenv
test
mov
xor
call
xor
in
mov
les
xor
add
pop
dec
sub
and
enter
sbb
bound
or
pop
and
pop
lock
pop
jae
rcl
imul
adc
add
or
sbb
mov
(bad)
call
or
je
ins
sti
cmc
mov
jp
test
inc
inc
icebp
fild
imul
aam
dec
sbb
pop
in
add
fisttp
xchg
or
push
and
and
mov
xchg
add
mov
or
stc
or
stc
add
inc
sahf
daa
mov
ja
test
sbb
add
xor
fisub
pop
pop
mov
movs
outs
bound
mov
leave
and
mov
cmp
and
test
sub
and
xchg
jo
fs
and
in
sbb
ins
pop
and
ins
cs
out
pop
lods
(bad)
aaa
rol
adc
cmp
adc
jmp
adc
push
xor
add
sub
pop
sbb
rcl
or
add
mov
sub
pop
lea
push
int
xchg
jmp
andps
aaa
sub
adc
dec
(bad)
repz
dec
mov
cmp
push
pop
addr16
pop
xor
xchg
pop
cmps
ret
das
rcl
lahf
cmps
pop
fucomip
cmc
push
cmp
comiss
inc
push
sub
dec
add
xor
nop
in
arpl
mov
xlat
bound
add
(bad)
pop
adc
out
inc
or
and
xor
scas
jnp
sbb
adc
pop
scas
iret
add
add
jb
or
adc
pop
and
sbb
dec
jp
jns
sbb
jns
stc
and
sub
dec
jle
out
cmps
jb
push
jne
ds
pop
bound
push
mov
sub
gs
jbe
adc
mov
cmp
js
ret
out
iret
ret
aaa
mov
cmp
mov
test
pop
in
mov
mov
test
inc
sub
outs
and
out
and
test
adc
fidiv
and
dec
cwde
pop
les
adc
push
enter
int3
sbb
inc
push
call
add
sub
add
dec
imul
add
rol
mov
sub
cwde
cdq
jns
test
mov
push
xor
add
popa
push
data16
pusha
pop
sub
cmp
and
shr
push
push
dec
outs
gs
sbb
add
add
out
push
adc
test
adc
sbb
and
add
add
sub
xor
cmp
inc
xor
push
xor
arpl
imul
xor
xor
add
add
xor
xor
xor
xor
xor
adc
sub
xor
cmp
xor
push
xor
xor
xor
xor
xor
jae
mov
ret
xor
xor
and
xor
xor
add
add
xor
xor
xor
xor
xor
xor
xor
dec
xor
pushf
xor
add
or
ss
ss
imul
ss
adc
add
cmp
jns
lods
cmp
cmp
add
add
cmp
cmp
test
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
cmp
cmp
cmp
dec
cmp
jno
jns
movs
cmp
cmp
cmp
cmp
cmp
cmp
add
add
cmp
inc
cmp
cmp
mov
(bad)
cmp
das
cmp
cmp
cmp
cmp
cmp
add
add
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
outs
cmp
mov
mov
add
cmp
clc
cmp
or
and
sub
ds
ds
arpl
imul
ds
add
add
cmp
ds
fnstsw
clc
add
or
aas
dec
aas
push
aas
arpl
push
aas
mov
aas
scas
aas
mov
aas
jmp
inc
adc
inc
dec
inc
pop
inc
addr16
rol
add
ja
jg
xchg
inc
xchg
inc
lahf
inc
lods
inc
mov
inc
lock
std
inc
add
and
jmp
sub
cmp
inc
xor
cli
sub
push
xor
xor
xor
xor
hlt
xor
xor
xor
sub
inc
xor
dec
aaa
push
xor
push
or
xor
js
add
fwait
jle
or
jg
xor
add
sti
fild
das
sbb
imul
inc
outs
aaa
pusha
add
lahf
imul
pop
cwde
jno
pop
inc
pop
test
dec
mov
or
sbb
das
mov
push
in
or
mov
xchg
je
pop
pushf
add
stos
dec
ss
add
leave
add
add
xor
adc
mov
ins
add
cdq
cmps
sbb
fs
inc
adc
add
test
daa
bound
gs
add
push
sbb
or
sbb
sbb
or
sbb
mov
sbb
adc
fiadd
push
push
data16
sbb
mov
ins
ins
push
sbb
data16
sti
and
outs
and
push
or
mov
daa
push
and
cmps
or
jbe
or
dec
dec
jnp
rcl
imul
mov
and
push
pshufw
adc
mov
bound
inc
mov
in
or
pop
sub
adc
dec
(bad)
arpl
ins
lds
outs
bound
cmp
outs
fstp
sbb
sbb
inc
jo
and
pop
mov
aaa
inc
pop
and
lods
and
sub
and
push
sbb
sbb
add
xor
adc
mov
jno
ins
bound
sub
in
lea
adc
shl
push
(bad)
cld
sub
xchg
pusha
sbb
push
push
mov
and
cmc
test
or
xor
xor
popa
and
sbb
sbb
cmps
in
gs
scas
inc
loop
and
repnz
xor
mov
push
pop
sub
sub
and
sub
fiadd
fmul
ins
fcmovb
adc
and
sub
rol
push
test
int
push
and
xor
pop
nop
dec
test
jae
nop
and
adc
cld
push
ins
jecxz
aaa
xor
xor
cwde
sbb
sbb
pushf
sub
int3
add
es
pop
fstp
dec
aas
outs
fst
inc
and
imul
mov
adc
sbb
fs
pushf
mov
push
push
adc
je
inc
pop
jno
movs
xchg
mov
pop
lahf
and
stos
jge
or
xor
sbb
add
push
mov
jmp
mov
dec
repnz
push
sub
bound
retf
mov
push
pop
rol
es
and
mov
loope
mov
mov
les
push
or
or
jmp
pop
scas
cdq
ret
mov
inc
aam
sbb
add
or
inc
dec
dec
xchg
add
lock
rcr
inc
add
arpl
sub
jp
and
rcl
push
je
add
push
sbb
mov
mov
shl
and
ins
or
push
sbb
pop
sbb
adc
imul
mov
dec
test
stc
or
imul
push
je
or
call
mov
fsubr
or
xor
dec
xchg
scas
cmp
adc
bound
xchg
cdq
sbb
ss
sbb
je
retf
push
fsubr
pop
mov
inc
das
sbb
ret
nop
popf
or
cmp
inc
fiadd
xor
pop
pop
cmps
add
xchg
(bad)
ss
mov
sub
cs
add
sbb
sub
jo
sbb
fldcw
pop
arpl
inc
dec
jo
mov
xchg
sti
add
adc
inc
pop
popa
xor
imul
rcl
test
inc
inc
pop
sub
or
aam
ins
and
push
fldenv
(bad)
(bad)
mov
xor
sbb
ret
fisttp
xor
xor
dec
mov
mov
add
sub
fisub
push
cmps
or
xor
sbb
aaa
les
and
push
push
jae
and
dec
xchg
and
cmp
mov
(bad)
out
ficom
push
push
push
xor
jnp
jl
add
adc
ja
mov
ins
cmps
xchg
scas
and
pop
and
fistp
fwait
jmp
push
cld
add
out
sbb
movs
bound
inc
addr16
cmp
add
push
(bad)
xor
aam
call
xor
cmp
sub
es
es
stos
retf
sub
mov
xchg
or
mov
and
dec
or
inc
and
ffree
dec
test
pop
or
fcmovbe
jno
xchg
jp
repnz
out
adc
mov
xchg
push
cmp
icebp
inc
sub
dec
fldcw
inc
push
daa
or
push
dec
xor
and
aad
les
outs
(bad)
fldcw
sub
inc
jo
pop
push
mov
mov
gs
jecxz
jbe
xor
push
jbe
sbb
leave
mov
or
cld
adc
xchg
je
mov
mov
fsub
dec
sbb
repnz
xor
adc
ins
dec
pushf
sbb
fist
add
jp
(bad)
or
xor
xchg
inc
mov
inc
loope
aaa
lods
mov
mov
and
rcr
jne
push
and
arpl
ins
movs
push
cmp
mov
jge
mov
cmp
dec
xor
icebp
int3
mov
popa
mov
mov
mov
arpl
and
inc
arpl
mov
mov
mov
sbb
and
ins
cwde
mov
dec
dec
es
inc
add
(bad)
sub
mov
loop
and
pushf
into
ins
push
outs
pop
jle
xor
pusha
cbw
ins
jl
pop
and
sbb
stos
xchg
mov
inc
pop
outs
mov
or
jb
xchg
(bad)
pop
out
lods
dec
adc
sti
push
add
sbb
(bad)
pop
fwait
jle
ins
outs
mov
push
fiadd
push
pusha
cmp
and
sbb
call
ud2
or
jp
(bad)
adc
(bad)
sbb
push
sbb
dec
fldenv
je
lds
cmp
mov
sbb
imul
test
shl
mov
push
cmp
xchg
add
xor
fnstcw
dec
jp
dec
mov
add
mov
sbb
fs
lea
(bad)
in
clc
or
fisubr
xchg
and
pop
ret
mov
and
test
adc
mov
cmp
or
sub
call
push
loop
mov
dec
push
scas
test
xor
and
xor
xor
push
xchg
inc
mov
fnstenv
in
test
data16
xchg
cmps
cmp
jne
cmp
ror
add
mov
mov
(bad)
or
mov
add
out
retf
test
push
and
ins
(bad)
and
test
sub
test
jo
mov
pop
xor
or
push
mov
inc
push
inc
pop
les
push
ret
pop
fadd
and
jecxz
dec
xor
push
xchg
sar
bound
movs
jecxz
adc
aaa
imul
iret
pop
ins
stos
sub
adc
loop
and
ret
ins
aaa
sbb
jp
sar
jbe
cs
jle
jno
or
push
or
mov
aaa
pop
sbb
adc
shl
sbb
and
mov
es
sub
jbe
xor
imul
dec
cmp
das
dec
and
mov
adc
fcomp
(bad)
jl
dec
iret
adc
jmp
and
push
inc
test
inc
add
add
adc
mov
pop
dec
dec
sub
outs
xchg
sub
jb
add
mov
fldenv
adc
cmp
arpl
jl
mov
xchg
test
cld
dec
dec
cmps
ret
mov
and
in
rcr
xchg
pop
sbb
inc
sbb
xlat
pop
fst
ret
push
test
sbb
dec
sbb
add
xor
fcmovnb
dec
retf
xor
aam
or
je
ins
pop
mov
imul
bound
aam
add
(bad)
pop
sub
jo
fldenv
sbb
pop
cmps
add
and
cmp
retf
bound
pop
mov
sub
cmps
push
push
dec
mov
retf
sbb
sbb
outs
and
and
pop
or
mov
inc
or
sub
push
mov
mov
(bad)
out
sbb
xor
or
fldcw
in
(bad)
pop
push
push
pop
xlat
loope
sub
mov
inc
loope
xchg
outs
pop
mov
dec
inc
mov
xchg
mov
pop
mov
or
mov
cdq
inc
and
arpl
or
cmp
add
hlt
rcr
xchg
mov
cmp
inc
xchg
push
xor
mov
int
aas
test
fisub
mov
test
hlt
in
xor
popa
dec
jecxz
aaa
dec
or
sbb
cmp
cmp
mov
sub
lock
push
inc
retf
xor
ja
test
xchg
sbb
add
mov
sbb
inc
out
add
je
sub
xchg
mov
sub
test
and
add
pop
add
ss
push
lds
pop
pop
inc
jp
cmp
or
fs
mov
add
sbb
or
pop
add
imul
mov
loope
ret
adc
dec
or
push
mov
or
add
add
mov
ror
in
sbb
mov
adc
inc
push
data16
(bad)
in
in
imul
add
xchg
jge
repz
or
sbb
or
cmp
push
xor
nop
xchg
fcom
xor
or
push
icebp
(bad)
push
es
xor
out
push
sub
inc
jmp
xchg
sbb
and
mov
mov
fisttp
mov
xor
test
lock
cmp
das
push
(bad)
or
xchg
and
popa
mov
mov
enter
or
icebp
stos
and
in
setno
inc
mov
dec
add
jbe
mov
test
std
adc
jae
mov
add
jbe
mov
test
std
adc
adc
add
je
jbe
mov
test
std
adc
jae
dec
add
jbe
mov
test
std
adc
adc
in
aad
retf
add
adc
loope
mov
inc
test
add
sar
mov
in
or
fdiv
mov
test
std
adc
adc
add
jbe
mov
test
std
adc
adc
jbe
inc
add
jbe
mov
test
std
adc
adc
add
je
jbe
mov
test
std
adc
je
test
add
add
test
std
ja
mov
inc
mov
dec
dec
jbe
jmp
add
enter
add
jmp
clc
mov
mov
dec
sub
clc
add
mov
addr16
ret
xchg
sub
sub
or
fimul
add
mov
mov
add
hlt
push
test
or
xchg
imul
or
shl
cli
pop
dec
repz
push
add
or
jne
mov
les
jno
or
(bad)
jmp
dec
add
cmc
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
mov
add
add
add
icebp
add
add
icebp
push
add
push
or
add
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
lods
add
add
add
add
add
add
or
xor
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
add
or
xor
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
ror
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
cmc
push
or
xor
add
add
add
add
add
add
lods
add
add
add
add
add
add
adc
xor
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
add
add
dec
add
add
lods
add
add
add
add
or
add
add
add
enter
or
add
add
add
add
add
add
add
lods
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
add
add
or
add
add
mov
push
add
add
add
add
add
add
add
xor
add
add
add
adc
add
add
xor
add
xor
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
push
add
add
jns
add
mov
adc
add
add
add
xor
add
add
add
add
add
add
add
or
std
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
add
or
sub
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
movs
sub
aad
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
jns
or
adc
add
add
add
add
add
add
add
xor
add
add
add
add
add
sub
std
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
add
or
aad
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
or
test
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
xchg
cmp
mov
add
add
add
add
add
add
lods
add
add
add
add
add
add
cmp
inc
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
ds
xchg
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
or
lds
add
add
add
add
add
add
add
xor
add
add
add
push
add
push
push
add
jns
add
mov
or
or
add
add
lods
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
stc
inc
or
gs
add
add
add
add
add
xor
add
add
add
add
add
dec
or
adc
add
add
add
add
add
add
add
xor
add
add
add
add
add
dec
or
adc
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
push
add
lods
pop
or
add
add
add
add
add
add
xor
add
add
add
add
cmp
add
popa
pop
add
mov
add
mov
add
fld
add
add
add
sub
add
xor
add
add
add
add
add
add
lods
jle
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
sar
adc
add
add
add
add
add
add
lods
add
add
add
add
add
add
jle
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
pop
add
jmp
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
pop
add
std
jle
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
or
add
jg
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
lods
add
add
add
add
or
sub
add
xor
add
add
add
or
add
fisttp
aas
add
add
add
add
add
add
add
push
add
add
dec
add
push
add
inc
add
add
inc
add
dec
add
push
add
add
dec
add
add
push
add
push
add
push
add
dec
add
add
push
add
add
inc
add
dec
add
inc
add
dec
add
add
or
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
or
adc
or
adc
or
add
adc
add
adc
add
push
lidtd
sbb
add
sbb
add
sbb
add
push
push
add
sbb
and
daa
and
add
and
and
sub
add
sub
sub
aaa
xor
cmp
add
xor
cmp
add
cmp
add
xor
inc
cmp
add
xor
inc
cmp
add
add
xor
inc
cmp
xor
inc
cmp
inc
cmp
add
and
dec
xor
add
sbb
dec
xor
dec
das
sidtd
or
dec
sub
add
add
push
sub
add
add
push
add
pop
xor
add
add
pop
xor
pop
xor
pop
add
or
pop
cmp
add
or
pusha
cmp
add
push
add
smsw
adc
fs
adc
fs
adc
fs
adc
gs
adc
gs
adc
add
sbb
addr16
sbb
addr16
sbb
addr16
sbb
inc
sbb
addr16
sbb
add
and
bound
add
daa
add
sub
push
inc
das
add
xor
push
inc
xor
push
inc
xor
add
cmp
push
dec
cmp
push
dec
cmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
add
dec
add
push
add
push
add
add
dec
add
dec
add
inc
add
inc
add
add
add
add
xor
jno
sub
jb
sub
jae
sub
je
sub
jne
sub
add
xor
jp
xor
jnp
xor
jnp
xor
add
cmp
jle
cmp
jg
cmp
and
and
test
add
push
add
outs
dec
add
outs
dec
add
jo
add
jno
add
jae
add
jbe
add
jp
add
jl
add
and
sub
cdq
and
test
popf
test
sahf
xchg
mov
mov
mov
mov
(bad)
ja
mov
xchg
jle
movs
xchg
jle
cmps
xchg
jge
stos
xchg
jge
stos
cwde
add
cdq
add
cdq
add
scas
pushf
test
mov
test
mov
xchg
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
xchg
add
xchg
add
movs
call
movs
mov
add
movs
add
stos
cmps
add
lods
test
mov
cmps
add
lods
mov
add
popf
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
mov
add
mov
mov
add
ret
int
mov
add
(bad)
mov
add
retf
iret
retf
enter
retf
add
into
int
rcl
iret
add
rcl
add
rcl
add
aad
add
(bad)
rol
(bad)
fadd
(bad)
fiadd
(bad)
fild
loopne
fld
loop
fiadd
loop
fild
loop
loopne
loop
loop
jecxz
in
in
in
in
in
out
out
call
call
jmp
in
in
add
out
out
add
out
out
add
lock
icebp
lock
repnz
add
repz
repz
hlt
hlt
add
hlt
cmc
add
div
add
clc
stc
add
stc
cli
add
cli
sti
add
cld
cld
add
std
std
add
(bad)
inc
(bad)
(bad)
inc
pop
add
push
femms
push
push
or
add
add
or
adc
(bad)
lock
(bad)
mov
adc
or
sbb
in
in
in
repz
(bad)
(bad)
(bad)
jmp
xchg
mov
(bad)
xlat
aam
into
iret
aam
fneni(8087
in
out
repnz
cli
std
std
movs
test
pop
pop
push
and
(bad)
iret
(bad)
(bad)
loopne
jmp
hlt
idiv
std
std
(bad)
mov
pop
push
push
or
mov
mov
rcl
fcmovu
loop
in
lock
clc
stc
cld
std
(bad)
call
mov
mov
iret
aam
fucom
call
stc
sti
cld
(bad)
std
xchg
xchg
ja
dec
cwde
into
mov
mov
mov
(bad)
(bad)
fcomp
fcmovnu
loopne
jmp
cli
(bad)
(bad)
(bad)
(bad)
(bad)
std
xchg
lea
mov
mov
mov
mov
leave
retf
(bad)
mov
rcl
rcl
rcl
rcl
jecxz
(bad)
dec
mov
mov
(bad)
test
stos
test
cwde
mov
rcl
ficomp
mov
(bad)
mov
mov
lods
xchg
jg
add
push
push
pop
scas
rcl
rcr
adc
xchg
mov
leave
cwde
pop
push
push
push
push
push
push
push
and
pop
pop
sbb
sbb
and
ret
fiadd
mov
test
popa
push
pop
sbb
pop
pop
mov
cmps
rol
aad
pop
test
mov
pushw
xchg
mov
fld1
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
call
mov
mov
loopne
out
repnz
cld
cli
cli
idiv
cmc
div
out
cli
xchg
mov
(bad)
fcom
jle
mov
out
out
repz
div
lock
hlt
(bad)
mov
rcl
or
scas
inc
outs
jno
outs
ins
imul
icebp
hlt
repnz
out
jmp
cwde
popf
movs
movs
mov
test
je
jns
jno
sar
(bad)
repz
out
out
out
jmp
in
xchg
fwait
lahf
mov
or
inc
data16
ins
fs
daa
and
push
in
in
jmp
pushf
lahf
mov
jp
inc
dec
and
and
and
or
cld
jmp
in
in
cwde
nop
xchg
xchg
fwait
fwait
lahf
mov
cmp
inc
inc
inc
sub
sub
and
in
jecxz
loop
xchg
call
imul
jmp
outs
jmp
fstp
(bad)
jnp
(bad)
xchg
xchg
xchg
xchg
cmps
pop
or
jg
retf
out
out
out
out
jmp
ja
shl
fstp
nop
xchg
xchg
lahf
pop
or
xor
cmp
icebp
loope
jmp
jb
js
xlat
fstp
xchg
fwait
pop
or
xor
aaa
xor
sti
jmp
outs
retw
fcmove
push
jle
xchg
or
xor
sub
stc
call
push
xchg
loopne
jb
jnp
jle
xchg
jbe
cmp
cmp
cmp
stc
loope
data16
jae
jbe
jl
test
jbe
cmp
cmp
cmp
inc
inc
inc
inc
xchg
push
jns
jge
(bad)
push
pop
jno
xor
cmp
cmp
cmp
xchg
das
aas
inc
inc
inc
inc
xchg
je
ja
jl
dec
push
jno
xor
cmp
cmp
cmp
cmp
inc
jne
inc
imul
js
dec
push
ins
ins
sub
das
das
das
das
das
cs
das
das
das
das
das
xor
cmp
inc
inc
data16
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
xchg
xchg
cdq
call
stos
call
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
popf
pushf
sahf
lahf
mov
test
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
ja
add
xchg
clc
add
mov
mov
js
js
add
add
imul
add
add
mov
or
add
add
mov
js
clc
clc
add
add
mov
js
jns
js
js
add
add
add
js
jns
js
js
js
add
jns
mov
mov
mov
dec
mov
or
dec
or
popa
xchg
mov
or
mov
or
or
stc
js
or
add
add
jne
js
clc
add
add
mov
add
clc
jns
js
mov
add
mov
mov
or
mov
stc
mov
sub
inc
add
add
mov
and
clc
add
dec
inc
inc
inc
inc
add
js
mov
add
cmp
mov
dec
mov
or
jns
imul
jne
or
mov
add
test
xchg
pop
or
add
mov
add
add
test
inc
inc
inc
and
mov
dec
mov
dec
add
add
test
inc
pop
pop
pop
jns
inc
inc
xchg
imul
gs
inc
inc
inc
dec
add
xchg
mov
mov
jns
mov
jns
js
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
js
js
dec
js
clc
add
jns
js
js
add
jne
js
js
clc
clc
jns
js
mov
jno
jns
add
mov
js
add
mov
jns
xchg
jns
add
mov
js
icebp
cmp
jne
add
jno
nop
dec
adc
mov
dec
mov
inc
inc
inc
inc
cmp
js
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ud2
add
ud2
add
or
add
adc
add
adc
add
push
lidtd
sbb
add
sbb
add
sbb
add
push
push
add
sbb
and
daa
and
add
and
and
sub
add
sub
sub
aaa
xor
cmp
add
xor
cmp
add
cmp
add
xor
inc
cmp
add
xor
inc
cmp
add
add
xor
inc
cmp
xor
inc
cmp
inc
cmp
add
and
dec
xor
add
sbb
dec
xor
dec
das
sidtd
or
dec
sub
add
add
push
sub
add
add
push
add
pop
xor
add
add
pop
xor
pop
xor
pop
add
or
pop
cmp
add
or
pusha
cmp
add
push
add
smsw
adc
fs
adc
fs
adc
fs
adc
gs
adc
gs
adc
add
sbb
addr16
sbb
addr16
sbb
addr16
sbb
inc
sbb
addr16
sbb
add
and
bound
add
daa
add
sub
push
inc
das
add
xor
push
inc
xor
push
inc
xor
add
cmp
push
dec
cmp
push
dec
cmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
add
dec
add
push
add
push
add
add
dec
add
dec
add
inc
add
inc
add
add
add
add
xor
jno
sub
jb
sub
jae
sub
je
sub
jne
sub
add
xor
jp
xor
jnp
xor
jnp
xor
add
cmp
jle
cmp
jg
cmp
and
and
test
add
push
add
outs
dec
add
outs
dec
add
jo
add
jno
add
jae
add
jbe
add
jp
add
jl
add
and
sub
cdq
and
test
popf
test
sahf
xchg
mov
mov
mov
mov
(bad)
ja
mov
xchg
jle
movs
xchg
jle
cmps
xchg
jge
stos
xchg
jge
stos
cwde
add
cdq
add
cdq
add
scas
pushf
test
mov
test
mov
xchg
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
xchg
add
xchg
add
movs
call
movs
mov
add
movs
add
stos
cmps
add
lods
test
mov
cmps
add
lods
mov
add
popf
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
mov
add
mov
mov
add
ret
int
mov
add
(bad)
mov
add
retf
iret
retf
enter
retf
add
into
int
rcl
iret
add
rcl
add
rcl
add
aad
add
(bad)
rol
(bad)
fadd
(bad)
fiadd
(bad)
fild
loopne
fld
loop
fiadd
loop
fild
loop
loopne
loop
loop
jecxz
in
in
in
in
in
out
out
call
call
jmp
in
in
add
out
out
add
out
out
add
lock
icebp
lock
repnz
add
repz
repz
hlt
hlt
add
hlt
cmc
add
div
add
clc
stc
add
stc
cli
add
cli
sti
add
cld
cld
add
std
std
add
(bad)
inc
(bad)
(bad)
inc
pop
or
adc
add
adc
mov
jmp
icebp
iret
ret
mov
xlat
(bad)
fcomp
in
idiv
arpl
leave
(bad)
fsub
jmp
cwde
iret
mov
(bad)
fsubrp
out
jmp
arpl
mov
pop
push
pop
fsubp
adc
and
adc
into
shl
push
mov
loope
jmp
arpl
rol
lds
mov
repz
frstor
push
xchg
arpl
out
out
mov
jl
cmp
add
sub
in
mov
test
cmp
xchg
cmps
pop
jnp
xor
jb
out
xchg
cmp
mov
outs
inc
fsubr
xchg
inc
inc
sub
sub
inc
lods
imul
sub
xor
sub
inc
imul
mov
mov
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jg
add
add
add
add
add
add
add
and
add
add
add
add
adc
add
add
add
adc
add
add
or
imul
add
add
add
add
add
add
add
rcr
or
imul
add
add
add
add
add
(bad)
or
jns
or
add
add
add
add
add
add
jmp
or
sbb
add
add
add
add
add
clc
fmul
mov
or
add
add
add
add
add
add
add
fmul
add
add
add
add
add
add
paddusw
cdq
fmul
add
add
add
add
add
add
sbb
or
mov
add
add
add
add
add
add
fisttp
test
add
add
add
add
add
add
fisttp
mov
or
add
add
add
add
add
add
cmp
fmul
add
add
add
add
add
add
inc
fisttp
rcr
add
add
add
add
add
add
add
add
fmul
add
add
add
add
add
add
add
add
add
add
pop
fisttp
ins
fisttp
jge
or
add
add
mov
or
add
add
cdq
fisttp
add
add
mov
or
add
add
ret
fisttp
add
add
retf
fisttp
add
add
(bad)
or
add
add
out
or
add
add
stc
fisttp
add
add
add
or
add
add
pmaxub
add
add
sbb
add
add
dec
inc
dec
xor
das
inc
dec
dec
add
ja
jno
xor
das
gs
ins
add
dec
inc
inc
push
xor
das
inc
dec
dec
add
fs
xor
das
gs
ins
add
push
xor
gs
ins
add
data16
das
gs
ins
add
bound
xor
das
gs
ins
add
ins
ins
xor
das
gs
ins
add
data16
xor
gs
ins
add
outs
outs
outs
das
gs
ins
add
outs
je
jo
ins
das
gs
add
jo
ins
xor
das
gs
ins
add
dec
jo
gs
push
jae
jae
inc
add
dec
data16
jae
fs
gs
je
add
inc
jns
jne
jae
fs
add
add
push
dec
data16
add
add
dec
data16
jae
ja
jae
data16
jae
jno
push
outs
inc
add
dec
outs
bound
dec
push
jne
inc
gs
add
inc
inc
add
dec
je
jb
bound
push
dec
inc
add
add
jae
bound
inc
ins
bound
add
push
push
jno
jae
jne
jo
inc
add
dec
data16
inc
add
add
outs
dec
data16
push
add
add
outs
push
jae
outs
jne
jae
add
je
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
jne
jno
dec
push
jbe
push
jb
jp
imul
pop
jns
pop
ss
outs
arpl
jne
je
dec
jne
dec
jns
jp
pop
cmp
jae
jne
jne
jne
inc
xor
push
cmp
jb
sub
cmp
push
push
or
addr16
pop
je
dec
push
inc
push
dec
xor
jnp
inc
dec
xor
jp
sub
jae
sub
jo
push
inc
jnp
jb
jp
cmp
push
dec
imul
jb
inc
je
jp
outs
xor
inc
arpl
outs
data16
pop
push
or
imul
dec
jno
jp
outs
data16
ss
dec
inc
ins
dec
imul
jns
push
jbe
dec
inc
dec
inc
pop
jae
pop
jae
jb
inc
data16
imul
pop
dec
fs
gs
xor
jp
push
or
sub
jb
jne
inc
jbe
xor
dec
js
dec
jp
cmp
inc
cmp
push
dec
inc
jae
jo
xor
dec
cmp
jo
jp
push
push
dec
sub
je
cmp
pop
dec
dec
push
js
addr16
push
jne
push
ins
jno
cmp
pop
push
or
inc
push
dec
jp
ins
pop
push
pop
push
jbe
ss
imul
inc
jo
inc
xor
pop
inc
push
jae
dec
cmp
pop
push
arpl
xor
dec
jno
push
inc
xor
inc
push
push
jno
xor
ins
dec
push
outs
pop
inc
pop
jns
jb
push
or
outs
inc
jb
dec
xor
dec
jnp
outs
ins
push
jbe
jns
dec
xor
jne
inc
xor
pop
push
pop
ss
je
cmp
jbe
push
jnp
jns
ja
dec
inc
ss
push
cmp
xor
inc
dec
inc
jae
cmp
aaa
cmp
or
ss
inc
inc
push
ins
pop
addr16
cmp
pop
pop
addr16
pop
jo
inc
bound
push
inc
push
aaa
outs
xor
dec
inc
xor
dec
pop
inc
xor
jo
push
jb
cmp
jb
aaa
push
xor
xor
xor
pop
xor
or
push
ja
push
jns
inc
je
pop
dec
ins
dec
js
ja
cmp
jo
dec
dec
xor
xor
outs
xor
ins
pop
fs
js
pop
jb
ins
outs
gs
jbe
je
xor
sub
pop
aaa
push
outs
push
push
cmp
dec
push
pop
pop
dec
jb
push
or
aaa
jne
dec
dec
aaa
xor
pop
pop
push
ins
dec
xor
pop
dec
arpl
inc
push
push
pop
aaa
jnp
xor
xor
dec
push
dec
xor
xor
jb
push
xor
cmp
imul
fs
pop
aaa
jnp
arpl
or
jns
dec
dec
push
dec
inc
cmp
inc
push
dec
jae
bound
dec
dec
push
xor
push
dec
push
gs
arpl
pop
push
inc
inc
inc
push
jno
push
xor
dec
dec
dec
ins
imul
jp
js
xor
dec
dec
push
inc
dec
xor
inc
ins
xor
or
push
ins
ins
fs
dec
imul
cmp
jp
push
xor
pop
inc
imul
inc
cmp
dec
push
cmp
push
pop
push
pop
pop
inc
dec
inc
jno
cmp
dec
gs
jne
pop
jb
xor
push
dec
addr16
jns
js
xor
or
ins
ins
pop
xor
jp
outs
dec
jo
dec
push
inc
ss
push
arpl
xor
push
push
xor
ja
imul
xor
inc
aaa
inc
dec
ins
push
aaa
push
inc
sub
bound
cmp
cmp
dec
cmp
xor
push
push
xor
dec
push
dec
push
or
sub
arpl
cmp
pop
arpl
sub
addr16
inc
xor
ja
jns
dec
cmp
pop
jne
dec
inc
imul
xor
jnp
dec
dec
cmp
dec
addr16
ins
dec
addr16
ins
dec
ins
je
ja
outs
inc
js
jns
jae
dec
js
or
dec
jbe
addr16
push
dec
gs
push
arpl
jno
ins
jns
sub
fs
aaa
js
gs
dec
xor
dec
push
xor
jne
aaa
pop
dec
cmp
ja
cmp
jp
dec
jo
push
jb
inc
jns
xor
inc
dec
jnp
xor
data16
or
ja
xor
imul
jae
jne
jae
gs
push
push
ins
jns
pop
jo
jp
push
ja
dec
imul
push
dec
jno
pop
jae
outs
xor
ja
ins
outs
inc
jbe
pop
jbe
outs
xor
dec
push
dec
ins
pop
xor
push
or
cmp
jo
push
ss
push
push
ins
aaa
pop
jb
xor
jp
jae
pop
xor
jno
fs
push
jp
outs
pop
addr16
outs
jb
ss
xor
jno
push
inc
push
pop
jns
ja
pop
je
gs
gs
push
xor
push
push
or
gs
push
jp
xor
arpl
pop
jne
push
dec
dec
jno
dec
push
push
jno
push
outs
xor
xor
fs
je
dec
push
jb
jae
outs
bound
xor
bound
inc
je
jns
pop
data16
js
xor
push
addr16
or
inc
pop
inc
addr16
sub
bound
push
pop
jo
dec
xor
push
xor
imul
data16
sub
pop
pop
cmp
inc
xor
outs
inc
inc
push
xor
push
push
push
xor
inc
ss
jno
dec
ins
push
pop
cmp
cmp
xor
push
or
dec
pop
pop
push
pop
push
arpl
cmp
inc
push
imul
aaa
ins
dec
pop
jns
push
jo
inc
pop
dec
imul
push
pop
push
push
jnp
push
dec
dec
jp
xor
inc
push
cmp
imul
xor
gs
sub
xor
or
inc
jb
data16
bound
pop
imul
push
aaa
dec
xor
inc
push
push
inc
inc
push
push
dec
outs
xor
xor
inc
push
inc
js
pop
addr16
inc
imul
inc
push
pop
gs
push
pop
jbe
outs
jae
inc
push
jno
ins
inc
push
push
or
imul
push
ss
ins
xor
inc
xor
aaa
xor
ja
jnp
outs
outs
inc
cmp
outs
inc
gs
jae
push
push
arpl
pop
ja
jnp
inc
xor
dec
ins
jno
ja
arpl
aaa
inc
push
inc
outs
dec
je
inc
dec
push
or
js
ins
dec
outs
dec
addr16
jae
push
dec
ja
outs
xor
jp
dec
inc
imul
inc
dec
dec
pop
jae
outs
xor
jnp
dec
jbe
inc
ins
js
addr16
dec
ja
inc
push
push
cmp
imul
dec
inc
js
bound
push
or
push
ins
push
cmp
push
dec
cmp
dec
xor
push
imul
jo
outs
jns
dec
ja
dec
push
push
pop
jns
sub
dec
cmp
bound
xor
dec
sub
je
inc
addr16
push
fs
sub
pop
pop
inc
xor
je
dec
ins
imul
inc
inc
ins
xor
cmp
push
push
dec
cmp
ja
jbe
js
inc
push
push
jb
inc
push
jo
ins
xor
inc
ja
fs
inc
xor
imul
inc
ins
imul
xor
ins
xor
or
pop
js
xor
inc
dec
jae
push
push
pop
sub
push
inc
ins
aaa
push
jns
jbe
inc
dec
dec
pop
jo
inc
inc
ins
push
sub
jne
pop
je
dec
cmp
ja
js
addr16
inc
push
push
push
arpl
ins
ins
xor
ins
dec
push
or
sub
xor
xor
push
push
push
ins
inc
dec
ss
outs
push
imul
jp
xor
jno
dec
jb
xor
cmp
aaa
jp
je
dec
jae
push
push
ja
inc
dec
xor
sub
bound
data16
inc
ss
or
dec
jb
cmp
jns
outs
push
xor
push
push
arpl
dec
xor
dec
push
jno
pop
imul
arpl
pop
cmp
fs
inc
jb
jo
je
cmp
outs
jb
pop
je
xor
outs
gs
jno
xor
dec
outs
cmp
push
pop
dec
ins
xor
inc
xor
aaa
jp
push
inc
inc
dec
inc
xor
inc
jbe
dec
pop
xor
jb
push
xor
je
ins
pop
inc
cmp
push
xor
jb
js
dec
pop
push
xor
jno
jns
jno
addr16
arpl
dec
cmp
or
outs
jbe
dec
push
xor
fs
dec
inc
inc
xor
dec
inc
xor
ins
cmp
cmp
inc
push
push
push
jno
push
ss
js
dec
jb
jne
jo
inc
jb
dec
outs
xor
push
dec
je
inc
jb
je
jns
inc
js
inc
push
push
pop
push
or
xor
dec
imul
addr16
ins
jb
jb
jne
inc
outs
imul
pop
pop
cmp
xor
outs
cmp
xor
imul
push
xor
dec
gs
push
jno
inc
dec
jae
xor
ja
dec
jne
push
dec
xor
ins
inc
push
or
pop
dec
imul
jae
sub
xor
push
push
push
push
push
dec
arpl
xor
jbe
jnp
outs
outs
pop
dec
push
jb
xor
pop
xor
inc
ja
dec
inc
outs
jp
jae
jo
dec
xor
dec
xor
je
dec
jno
push
or
pop
xor
dec
pop
jnp
pop
jnp
ins
push
ins
dec
dec
pop
inc
imul
inc
inc
xor
xor
ins
inc
arpl
xor
inc
push
xor
ins
dec
inc
pop
bound
pop
push
imul
outs
ins
jo
push
push
dec
outs
dec
ja
dec
dec
xor
or
outs
inc
push
pop
cmp
imul
pop
xor
dec
xor
ss
push
xor
cmp
dec
dec
ja
jbe
bound
pop
inc
ins
je
cmp
jbe
dec
ja
js
push
cmp
arpl
dec
push
bound
or
inc
fs
push
outs
jbe
dec
dec
ins
arpl
push
push
xor
dec
jbe
jnp
xor
outs
push
cmp
dec
inc
jne
push
sub
dec
imul
pop
dec
xor
dec
xor
inc
jb
push
inc
aaa
inc
dec
inc
inc
push
xor
push
or
inc
push
jne
ja
jb
dec
data16
jne
push
push
ss
push
ss
bound
push
arpl
dec
dec
bound
jbe
xor
cmp
pop
dec
ins
outs
inc
inc
xor
jae
push
jnp
xor
data16
jnp
jae
cmp
push
or
xor
pop
push
outs
push
outs
fs
sub
dec
xor
bound
pop
dec
push
inc
push
addr16
inc
xor
fs
push
push
dec
dec
dec
addr16
dec
xor
outs
fs
imul
inc
jae
push
push
jno
ins
xor
dec
outs
dec
ss
or
dec
dec
js
jno
je
inc
js
inc
push
inc
pop
push
inc
js
xor
push
pop
cmp
jb
dec
push
inc
ins
xor
xor
inc
cmp
dec
dec
bound
outs
dec
sub
sub
inc
dec
push
dec
addr16
cmp
imul
jae
imul
push
addr16
jp
xor
dec
js
jnp
imul
jb
pop
dec
jne
bound
xor
jae
data16
dec
inc
cmp
arpl
cmp
sub
fs
jnp
imul
xor
push
push
inc
ja
dec
imul
inc
ss
ja
pop
xor
push
dec
ins
inc
pop
inc
cmp
jno
fs
jo
pop
jo
outs
bound
xor
cmp
inc
push
push
jb
jnp
fs
fs
xor
ja
dec
push
dec
dec
xor
inc
gs
sub
jne
or
ss
dec
data16
jo
ss
aaa
ss
push
dec
pop
imul
ins
inc
push
dec
xor
jbe
push
push
xor
dec
ins
bound
jnp
push
dec
push
xor
inc
inc
js
push
cmp
jbe
or
jb
dec
dec
push
jne
inc
jne
push
push
jp
jb
jnp
dec
ins
dec
jb
ins
push
xor
ins
ins
addr16
outs
dec
aaa
bound
cmp
xor
jnp
dec
dec
dec
push
xor
ins
pop
pop
dec
bound
dec
ss
ins
je
inc
push
dec
imul
addr16
dec
push
xor
outs
bound
dec
js
jae
jae
xor
js
ins
ja
dec
jnp
inc
xor
dec
outs
dec
push
cmp
dec
dec
dec
push
xor
push
jne
pop
outs
jnp
je
push
push
dec
xor
push
inc
dec
dec
push
or
dec
js
push
push
jno
push
outs
jne
xor
pop
jne
xor
dec
inc
gs
arpl
push
gs
dec
jbe
bound
xor
inc
aaa
xor
dec
inc
dec
xor
dec
dec
dec
pop
push
jb
inc
inc
jns
imul
push
ss
or
dec
pop
pop
xor
inc
xor
outs
push
push
pop
push
pop
jno
push
xor
push
inc
imul
push
dec
inc
dec
dec
ja
ja
js
push
xor
jae
ins
ss
pop
ss
aaa
inc
dec
pop
dec
imul
sub
xor
push
or
inc
ins
ss
pop
cmp
push
ss
inc
pop
inc
push
dec
inc
cmp
je
je
pop
xor
cmp
jne
xor
dec
push
pop
jbe
gs
jns
inc
xor
arpl
dec
xor
push
dec
aaa
cmp
jb
je
dec
cmp
js
pop
js
push
or
push
sub
imul
xor
sub
cmp
push
pop
outs
jno
outs
xor
fs
jae
pop
dec
jp
data16
jnp
ins
jae
inc
xor
push
xor
cmp
dec
push
jne
push
cmp
xor
js
imul
xor
or
fs
jb
jbe
inc
inc
dec
jno
pop
dec
pop
pop
push
ins
push
arpl
xor
cmp
imul
jne
xor
xor
imul
js
push
dec
cmp
inc
pop
bound
pop
push
jbe
js
xor
je
xor
imul
cmp
xor
outs
push
pop
outs
addr16
dec
push
jbe
pop
xor
jno
push
inc
outs
cmp
data16
dec
dec
dec
xor
ins
inc
ins
sub
inc
xor
pop
jne
dec
push
ja
xor
push
jno
gs
dec
cmp
push
inc
inc
push
push
aaa
jno
push
jae
inc
dec
push
push
inc
ins
xor
jns
jae
push
aaa
jo
imul
addr16
gs
addr16
jp
arpl
push
push
imul
jo
jno
push
outs
jbe
xor
sub
push
or
dec
push
jnp
outs
cmp
xor
push
push
xor
push
aaa
push
jne
ja
xor
jb
xor
dec
data16
aaa
push
imul
jp
addr16
inc
addr16
jnp
addr16
aaa
cmp
xor
pop
push
dec
outs
inc
jb
dec
xor
ja
dec
imul
push
dec
xor
dec
jb
xor
dec
outs
ja
inc
jbe
cmp
imul
dec
xor
bound
push
xor
pop
xor
push
aaa
dec
push
xor
xor
inc
jp
inc
pop
pop
jno
pop
push
ss
fs
imul
dec
dec
push
or
push
dec
inc
inc
imul
outs
inc
arpl
je
aaa
dec
dec
fs
inc
push
cmp
xor
xor
ins
pop
xor
push
dec
pop
jno
inc
dec
inc
ins
dec
dec
jb
dec
xor
gs
sub
inc
jb
inc
dec
jae
push
js
or
xor
jnp
xor
jp
je
push
push
push
js
dec
inc
xor
je
addr16
xor
arpl
js
push
dec
cmp
jp
dec
xor
je
jns
dec
js
pop
push
jno
push
xor
jne
xor
push
or
cmp
imul
gs
jns
jae
pop
xor
aaa
push
dec
arpl
push
imul
jae
push
xor
ins
xor
cmp
push
imul
push
push
xor
dec
dec
xor
ins
jb
dec
outs
jp
push
push
or
push
jb
inc
cmp
push
jae
pop
pop
pop
ins
data16
jns
push
inc
push
cmp
js
sub
pop
inc
jp
xor
cmp
bound
push
jae
push
xor
dec
cmp
xor
push
ss
push
push
or
push
jne
inc
jne
push
imul
xor
dec
inc
ja
outs
ins
dec
cmp
inc
dec
xor
jbe
imul
push
pop
cmp
push
arpl
inc
jne
jp
arpl
xor
push
inc
pop
ins
xor
arpl
jae
push
or
imul
cmp
xor
dec
sub
ins
push
jnp
dec
inc
xor
dec
xor
cmp
pop
dec
addr16
xor
pop
dec
push
cmp
dec
data16
push
dec
js
fs
cmp
xor
outs
push
inc
inc
jne
dec
dec
push
sub
dec
jbe
or
cmp
ss
push
push
push
dec
dec
xor
arpl
cmp
fs
push
dec
inc
imul
dec
jae
data16
cmp
js
push
aaa
inc
dec
dec
cmp
pop
gs
imul
aaa
dec
gs
push
ss
or
jb
dec
jae
push
xor
js
pop
push
xor
ja
cmp
dec
cmp
bound
jns
imul
ins
imul
push
bound
arpl
push
aaa
pop
pop
xor
cmp
inc
push
xor
dec
jb
jno
arpl
dec
ss
or
gs
xor
jae
dec
imul
arpl
je
aaa
inc
addr16
cmp
push
bound
gs
ins
je
ins
push
addr16
jns
push
ins
xor
push
inc
cmp
jns
xor
push
sub
ins
xor
js
push
dec
dec
push
or
push
inc
xor
dec
xor
jp
jne
aaa
jb
push
imul
jae
dec
imul
push
inc
fs
jb
xor
bound
push
inc
xor
push
jo
dec
xor
xor
cmp
xor
pop
xor
dec
imul
push
push
ins
ja
cmp
dec
sub
sub
pop
push
pop
data16
jne
aaa
sub
push
push
inc
inc
js
inc
pop
push
aaa
js
cmp
pop
outs
jns
jp
jns
inc
jbe
inc
push
inc
dec
dec
dec
pop
push
cmp
gs
dec
jns
jnp
dec
jns
xor
or
xor
xor
ss
jne
imul
push
sub
ins
jne
imul
inc
fs
imul
jae
jns
dec
dec
pop
ins
aaa
inc
jnp
push
jp
dec
sub
xor
jae
jne
jns
jp
jp
inc
jns
xor
inc
ja
arpl
fs
push
dec
push
bound
jne
js
jnp
jae
inc
pop
xor
xor
cmp
pop
cmp
xor
xor
xor
imul
ins
outs
push
push
push
xor
xor
xor
jb
push
or
ja
dec
push
pop
bound
jae
jne
xor
cmp
dec
jp
pop
jnp
jnp
inc
pop
inc
inc
xor
push
jb
push
push
pop
push
push
fs
xor
bound
push
dec
bound
pop
jne
dec
bound
dec
jae
bound
push
or
aaa
inc
pop
outs
inc
push
dec
push
jbe
jno
outs
outs
push
jno
push
dec
jo
dec
jns
fs
pop
jp
inc
push
dec
xor
xor
push
jp
inc
dec
push
jnp
xor
dec
sub
push
push
cmp
jo
push
jp
push
or
pop
push
push
cmp
jb
inc
jp
xor
dec
pop
sub
js
fs
xor
pop
push
xor
inc
aaa
cmp
cmp
dec
jb
js
bound
inc
jns
pop
jno
dec
outs
dec
dec
ins
xor
push
push
dec
ins
pop
inc
addr16
push
or
xor
jae
jae
inc
dec
jns
pop
push
push
cmp
push
ss
push
inc
jno
ins
cmp
push
xor
bound
cmp
jns
jo
push
push
ss
push
inc
ja
inc
imul
inc
jne
dec
outs
addr16
cmp
dec
push
xor
or
jp
pop
outs
outs
jae
xor
inc
dec
inc
data16
imul
push
pop
push
push
push
dec
push
jp
pop
dec
dec
sub
jnp
push
pop
dec
xor
xor
dec
xor
pop
pop
jnp
imul
dec
js
jp
dec
cmp
push
push
or
push
dec
gs
jno
addr16
push
jnp
dec
dec
push
inc
push
arpl
push
push
dec
jb
xor
push
dec
js
cmp
jnp
fs
outs
push
dec
pop
push
pop
xor
push
pop
bound
jo
jne
push
push
aaa
jbe
push
aaa
dec
inc
js
xor
arpl
ja
sub
jnp
outs
bound
xor
push
jae
jne
addr16
jbe
js
jno
aaa
push
push
jb
dec
jb
sub
aaa
pop
inc
jb
ins
inc
xor
inc
ins
pop
data16
dec
pop
push
inc
push
cmp
or
push
outs
xor
aaa
push
inc
pop
jbe
push
dec
cmp
jno
addr16
ins
xor
inc
jb
xor
push
pop
inc
cmp
js
cmp
pop
aaa
inc
outs
push
push
push
ins
jo
push
jne
inc
outs
push
push
js
jb
jp
dec
jo
pop
jb
push
or
pop
pop
imul
inc
push
outs
pop
imul
jne
xor
jo
dec
xor
outs
push
cmp
pop
push
jb
dec
ss
dec
inc
pop
inc
aaa
cmp
data16
jne
xor
bound
pop
push
or
pop
dec
jnp
push
cmp
js
gs
ja
dec
xor
push
dec
xor
cmp
ja
gs
dec
jne
dec
xor
jae
push
jae
inc
xor
inc
jbe
jne
imul
je
pop
inc
cmp
inc
data16
js
ins
bound
or
jp
inc
xor
push
cmp
dec
xor
inc
ja
jno
fs
inc
cmp
ins
sub
inc
cmp
dec
js
push
ss
aaa
js
pop
push
push
imul
pop
xor
dec
inc
inc
outs
dec
inc
xor
xor
bound
jo
or
addr16
push
ss
xor
pop
pop
jnp
pop
dec
push
pop
js
jnp
dec
je
push
push
inc
jno
ins
addr16
imul
cmp
xor
dec
cmp
cmp
arpl
imul
jp
imul
fs
dec
ss
fs
or
jnp
jb
imul
outs
dec
ins
jns
xor
xor
push
push
push
js
sub
js
push
push
pop
dec
bound
imul
outs
dec
cmp
xor
inc
xor
xor
pop
ins
xor
jne
jns
ins
push
or
ins
ins
sub
dec
js
dec
push
bound
push
push
inc
push
arpl
xor
pop
bound
xor
arpl
jnp
push
outs
addr16
je
gs
push
jo
push
ja
xor
jae
xor
cmp
dec
js
sub
pop
jae
push
pop
jno
push
or
xor
arpl
pop
outs
je
dec
ss
sub
fs
dec
gs
jne
cmp
inc
cmp
inc
jno
outs
xor
dec
inc
push
inc
pop
jbe
inc
dec
sub
xor
inc
jnp
sub
push
dec
push
xor
push
dec
imul
xor
or
inc
pop
ins
aaa
dec
jno
dec
inc
imul
inc
jno
jno
xor
push
inc
arpl
inc
xor
ins
ins
inc
push
jno
jnp
push
jns
push
push
jbe
push
arpl
bound
bound
bound
push
xor
push
dec
pop
imul
dec
jnp
push
pop
inc
push
or
xor
fs
xor
push
jae
dec
pop
dec
dec
xor
xor
jne
ins
jno
inc
dec
ss
dec
dec
jne
cmp
xor
cmp
dec
imul
jbe
arpl
jno
jb
js
addr16
fs
inc
pop
fs
push
inc
pop
dec
push
or
push
dec
imul
dec
dec
gs
push
jns
bound
inc
jno
push
inc
pop
push
push
jo
jo
push
ins
push
jne
push
jno
aaa
inc
xor
ins
js
push
bound
data16
push
push
xor
fs
push
inc
jp
dec
js
ins
dec
push
dec
inc
xor
push
or
imul
dec
dec
bound
arpl
cmp
jb
dec
jp
inc
dec
aaa
jb
inc
jbe
dec
dec
dec
dec
xor
aaa
gs
ins
arpl
push
cmp
push
jp
pop
jb
push
xor
push
dec
ins
jae
dec
ss
push
jbe
inc
push
or
dec
dec
pop
dec
je
inc
push
push
xor
jo
push
inc
xor
dec
push
pop
inc
pop
ja
push
inc
pop
outs
cmp
inc
jp
inc
ins
push
push
dec
dec
jne
je
inc
pop
imul
aaa
xor
push
jns
push
ss
inc
pop
push
or
inc
imul
pop
sub
push
gs
ins
imul
pop
ja
outs
inc
push
pop
pop
cmp
outs
cmp
push
xor
ins
push
bound
inc
jne
dec
dec
js
inc
dec
xor
imul
push
inc
outs
dec
xor
push
xor
push
or
jbe
outs
dec
jo
jp
dec
push
gs
xor
data16
ins
jnp
push
jnp
push
gs
dec
sub
push
xor
jo
dec
xor
arpl
dec
inc
dec
dec
dec
dec
dec
sub
cmp
ins
push
inc
jae
jo
pop
xor
dec
pop
xor
or
jns
pop
ss
push
inc
push
je
xor
pop
push
jae
outs
xor
dec
pop
je
js
outs
arpl
inc
outs
imul
sub
jne
dec
dec
jp
push
push
dec
xor
push
push
xor
or
outs
jb
push
ja
addr16
cmp
dec
imul
dec
dec
pop
ins
push
aaa
push
bound
aaa
dec
bound
push
outs
inc
push
jne
dec
dec
push
xor
js
outs
jne
arpl
xor
dec
imul
push
jo
xor
push
dec
cmp
dec
push
or
push
push
dec
jbe
push
pop
jbe
inc
dec
inc
jns
imul
jbe
inc
push
jne
push
jns
dec
push
dec
dec
inc
pop
gs
push
push
dec
outs
dec
jns
inc
dec
je
dec
je
inc
bound
cmp
cmp
dec
dec
push
fs
inc
xor
jnp
push
or
pop
pop
dec
ins
push
dec
jbe
bound
push
ins
push
inc
push
dec
jns
push
imul
pop
xor
xor
push
jns
imul
dec
pop
aaa
jns
jp
aaa
ja
push
ins
jo
inc
push
aaa
cmp
jo
pop
dec
jne
jo
js
or
jp
dec
push
inc
xor
push
inc
jno
inc
cmp
xor
push
xor
xor
push
push
jb
xor
jnp
ja
push
jne
inc
cmp
gs
push
arpl
ss
arpl
cmp
xor
inc
push
push
or
pop
je
data16
push
dec
dec
xor
pop
cmp
cmp
pop
dec
dec
cmp
dec
sub
pop
xor
outs
cmp
xor
addr16
jns
xor
aaa
dec
aaa
push
fs
fs
outs
inc
dec
aaa
push
xor
push
jo
ss
push
push
inc
inc
xor
cmp
push
or
pop
push
dec
pop
dec
inc
inc
outs
imul
push
ins
push
ins
ss
imul
gs
ja
pop
imul
push
inc
outs
jne
gs
dec
push
bound
push
push
push
jno
pop
fs
sub
push
je
imul
push
push
or
ss
dec
jns
addr16
dec
outs
pop
js
jae
inc
xor
xor
xor
xor
dec
push
push
pop
inc
dec
dec
cmp
pop
aaa
aaa
dec
xor
outs
pop
xor
inc
jno
data16
jae
arpl
inc
cmp
cmp
cmp
xor
or
jno
xor
push
imul
jo
ins
outs
ins
data16
inc
cmp
ja
dec
xor
push
inc
inc
push
push
xor
jno
gs
jbe
imul
jne
inc
inc
inc
push
xor
push
imul
pop
dec
fs
xor
cmp
push
or
dec
sub
inc
inc
js
gs
dec
xor
push
pop
push
push
imul
ss
pop
ins
addr16
jne
ins
outs
dec
inc
imul
js
pop
js
dec
pop
push
dec
fs
push
xor
ins
dec
inc
aaa
push
pop
ss
pop
xor
pop
bound
jp
dec
outs
dec
fs
dec
pop
js
js
arpl
outs
ins
xor
fs
inc
cmp
pop
push
push
inc
push
push
jne
dec
push
jne
pop
sub
inc
xor
xor
dec
sub
push
pop
xor
sub
ss
xor
or
imul
jp
xor
bound
push
je
jns
sub
push
jb
push
je
inc
dec
push
jae
arpl
xor
sub
xor
ja
push
jnp
pop
jp
outs
push
dec
aaa
jbe
inc
jb
push
xor
push
outs
inc
inc
push
sub
xor
or
cmp
dec
inc
fs
ins
inc
xor
jbe
jo
pop
push
js
pop
jb
push
addr16
cmp
js
bound
inc
xor
dec
cmp
jp
outs
dec
jp
dec
inc
dec
inc
inc
data16
pop
jp
dec
xor
ins
jno
or
dec
jbe
pop
dec
jbe
inc
jp
push
cmp
js
xor
inc
inc
xor
inc
addr16
dec
je
xor
inc
outs
imul
outs
push
jp
pop
imul
jo
data16
outs
pop
xor
jae
push
xor
jns
push
imul
dec
push
arpl
push
inc
ss
inc
imul
data16
gs
dec
outs
dec
cmp
bound
dec
outs
sub
inc
jae
push
push
ins
dec
cmp
jb
jae
cmp
inc
push
jo
sub
ja
pop
inc
ja
bound
push
cmp
arpl
or
inc
inc
ja
imul
pop
jns
push
ss
outs
cmp
pop
ins
js
push
outs
cmp
pop
xor
ins
cmp
jp
xor
inc
jae
xor
push
pop
jne
inc
push
push
inc
arpl
arpl
ins
js
push
or
aaa
cmp
js
imul
js
dec
xor
xor
push
ja
jae
cmp
push
ins
inc
ins
outs
ss
data16
jbe
xor
aaa
jae
data16
xor
outs
cmp
dec
outs
inc
xor
bound
jns
dec
ss
or
push
jae
dec
push
dec
imul
jb
push
imul
dec
dec
pop
addr16
dec
ins
xor
dec
push
push
imul
dec
pop
ins
inc
dec
bound
inc
xor
ins
inc
sub
xor
data16
ins
jo
xor
dec
push
push
jno
arpl
cmp
inc
inc
jb
dec
inc
inc
inc
imul
push
push
dec
inc
push
xor
inc
pop
data16
ss
push
ins
gs
je
imul
outs
inc
xor
dec
xor
js
bound
ins
jae
or
xor
js
dec
xor
pop
cmp
inc
imul
push
inc
push
aaa
jbe
fs
dec
push
fs
dec
fs
xor
push
dec
push
cmp
arpl
imul
inc
inc
push
aaa
pop
push
cmp
dec
dec
js
dec
xor
or
arpl
jo
jne
outs
xor
push
jp
cmp
xor
jae
jp
push
dec
dec
cmp
pop
push
xor
arpl
jo
bound
dec
jne
push
jo
jo
dec
push
cmp
jae
xor
push
inc
dec
push
xor
outs
ins
dec
js
js
cmp
push
xor
push
imul
inc
push
jo
push
xor
imul
push
dec
jns
inc
ins
outs
aaa
push
push
inc
inc
fs
push
jb
inc
aaa
dec
addr16
outs
jae
push
dec
xor
push
inc
dec
ins
xor
ins
dec
pop
inc
xor
or
je
jb
push
outs
push
gs
cmp
xor
jp
data16
jno
cmp
dec
inc
xor
dec
xor
dec
dec
cmp
dec
imul
push
data16
inc
sub
ins
outs
je
aaa
push
cmp
bound
dec
push
push
dec
cmp
or
imul
arpl
push
gs
jns
bound
sub
push
push
cmp
dec
sub
push
xor
cmp
jns
fs
inc
dec
ins
pop
push
xor
push
xor
jns
outs
jae
dec
push
push
outs
jnp
inc
outs
ss
or
inc
dec
dec
push
jno
push
xor
inc
push
xor
jae
ins
inc
fs
jp
push
pop
push
fs
jnp
outs
push
pop
jne
jae
jo
push
dec
dec
push
fs
jno
je
dec
ja
ss
push
xor
push
jnp
inc
jae
dec
ins
push
or
dec
push
push
push
gs
dec
jbe
jno
push
push
jnp
jae
jno
jne
jno
push
imul
dec
push
pop
dec
xor
jnp
push
dec
imul
jbe
pop
js
inc
ja
xor
jae
je
imul
pushw
or
push
jb
dec
push
xor
inc
push
imul
pop
outs
xor
dec
cmp
jp
fs
jp
xor
pop
inc
jne
inc
je
pop
fs
xor
jae
push
pop
push
dec
jb
push
pop
aaa
jnp
bound
push
push
push
cmp
push
or
fs
jnp
jnp
push
push
js
aaa
jp
push
dec
dec
dec
sub
jnp
cmp
push
addr16
pop
inc
jbe
push
pop
cmp
inc
push
xor
dec
cmp
js
inc
pop
data16
aaa
ja
push
pop
push
dec
xor
outs
imul
ss
push
inc
js
pop
inc
cmp
push
jno
js
inc
inc
push
je
inc
ins
cmp
pop
bound
push
js
inc
fs
push
push
inc
cmp
jp
xor
push
jp
inc
xor
pop
push
dec
outs
ins
push
dec
push
or
dec
xor
outs
outs
inc
sub
inc
ins
push
ss
dec
ja
jno
dec
push
ja
push
jnp
push
xor
xor
inc
xor
push
inc
inc
pop
inc
inc
imul
outs
push
jo
dec
ins
dec
jns
pop
jbe
fs
or
inc
push
xor
inc
xor
outs
je
push
jns
inc
pop
push
dec
dec
dec
dec
ins
push
js
xor
xor
inc
cmp
pop
jbe
jns
dec
xor
cmp
imul
xor
inc
cmp
sub
pop
dec
push
xor
bound
ja
xor
xor
outs
push
jb
xor
push
inc
cmp
xor
dec
bound
jo
jne
pop
push
push
aaa
jnp
push
inc
jnp
jae
push
pop
gs
pop
js
push
dec
outs
xor
inc
xor
jb
xor
inc
push
ins
jno
jns
inc
push
addr16
push
jnp
push
fs
push
push
dec
dec
dec
dec
cmp
jnp
gs
push
inc
imul
jae
addr16
jp
push
cmp
js
push
ss
dec
ins
xor
inc
js
push
xor
xor
imul
inc
push
push
or
jnp
jnp
jb
bound
push
outs
inc
inc
imul
xor
outs
push
xor
dec
je
push
pop
jo
ins
fs
xor
js
push
cmp
ss
dec
xor
ins
dec
xor
dec
inc
push
outs
cmp
sub
dec
push
push
or
jo
push
je
push
pop
push
dec
pop
dec
jp
xor
xor
pop
jae
jp
pop
inc
dec
sub
dec
xor
js
push
jns
pop
push
fs
arpl
sub
inc
xor
push
dec
push
push
pop
bound
addr16
dec
sub
inc
cmp
or
jnp
jne
xor
sub
cmp
push
xor
jne
dec
je
xor
dec
xor
imul
push
cmp
ss
pop
jae
inc
dec
ss
pop
jb
fs
pop
push
dec
push
imul
dec
cmp
sub
dec
addr16
ins
jbe
gs
push
or
dec
ins
jp
outs
push
jns
xor
push
xor
push
ss
aaa
push
jo
xor
jne
pop
jb
inc
jns
js
jns
xor
push
jo
data16
inc
ins
imul
xor
xor
ins
arpl
js
push
or
cmp
jo
jp
arpl
jae
cmp
push
cmp
xor
dec
outs
dec
js
cmp
jo
ins
jns
outs
pop
js
imul
ja
push
sub
xor
fs
push
dec
xor
jne
outs
inc
outs
jbe
xor
or
sub
pop
js
push
jns
dec
xor
cmp
bound
jb
fs
dec
inc
aaa
jae
bound
bound
dec
dec
push
jns
pop
dec
je
pop
dec
push
jo
dec
xor
xor
arpl
jne
xor
dec
dec
dec
pop
xor
inc
outs
cmp
or
inc
sub
dec
jp
push
cmp
sub
inc
xor
pop
imul
push
push
ins
inc
pop
jp
push
addr16
inc
outs
ss
cmp
outs
inc
xor
push
dec
dec
push
xor
push
bound
inc
inc
push
sub
jns
cmp
or
fs
gs
jns
dec
ins
xor
aaa
jp
pop
dec
push
inc
push
dec
inc
dec
push
inc
xor
dec
xor
push
je
jns
outs
imul
xor
dec
xor
push
jae
data16
push
push
inc
jp
jbe
jae
ins
fs
jns
push
or
jp
xor
push
dec
inc
cmp
je
inc
outs
inc
xor
ja
bound
jp
pop
fs
dec
xor
xor
dec
inc
dec
outs
xor
jns
pop
push
xor
push
jae
push
dec
push
jno
fs
imul
xor
dec
outs
dec
addr16
or
ins
push
ins
jp
imul
ja
inc
push
dec
jo
ja
inc
push
ins
js
inc
arpl
outs
push
push
push
dec
push
xor
push
cmp
push
xor
imul
dec
dec
xor
cmp
xor
ins
push
jnp
xor
ins
push
or
js
pop
imul
jo
dec
inc
dec
sub
ss
xor
dec
dec
pop
je
xor
inc
inc
addr16
pop
push
pop
xor
dec
imul
jns
sub
jbe
dec
arpl
push
cmp
push
dec
aaa
cmp
dec
ins
cmp
or
jb
inc
sub
pop
js
aaa
outs
ins
pop
jp
pop
jb
outs
xor
ss
sub
pop
gs
addr16
outs
gs
xor
jbe
outs
push
outs
pop
push
pop
cmp
push
cmp
dec
ins
dec
aaa
cmp
xor
push
or
xor
jne
xor
push
arpl
pop
je
pop
imul
imul
push
inc
push
jp
inc
inc
cmp
xor
push
cmp
pop
fs
inc
cmp
jae
dec
xor
inc
arpl
push
dec
xor
jae
xor
imul
pop
jb
outs
outs
js
push
xor
jnp
aaa
inc
fs
xor
jno
inc
push
jb
dec
imul
imul
outs
jno
push
push
inc
xor
pop
jns
ins
jae
xor
outs
imul
add
fld
loope
adc
dec
inc
add
add
add
add
add
add
inc
gs
and
bound
push
bound
add
add
inc
jbe
ins
jp
add
add
add
add
add
inc
gs
add
add
add
add
add
or
or
or
or
or
or
adc
adc
adc
adc
adc
movups
adc
movlps
push
pop
sbb
push
adc
push
and
push
push
sub
sub
sub
xor
xor
xor
xor
xor
or
or
or
push
or
push
adc
femms
adc
adc
adc
sbb
push
adc
adc
push
push
sbb
sbb
and
push
and
sub
daa
sub
xor
xor
xor
xor
xor
add
add
or
aad
sbb
add
add
adc
add
add
lds
stos
add
add
add
add
add
add
add
add
add
add
push
add
pop
or
add
push
add
add
add
add
add
add
add
add
add
adc
add
push
add
push
add
add
add
add
inc
adc
and
xchg
mov
inc
adc
icebp
repnz
or
xchg
xor
and
adc
add
add
push
push
add
add
add
add
add
add
jb
push
bound
mov
adc
icebp
loop
xor
arpl
fild
or
adc
add
call
xchg
das
adc
pop
movs
rcl
sub
dec
shl
jno
sub
mov
lds
inc
mov
out
xchg
add
in
mov
sub
leave
sub
es
pop
add
mov
ret
or
cmp
and
in
adc
mov
test
shr
ret
aaa
outs
pop
cdq
mov
and
shr
(bad)
pop
jb
fisttp
aas
push
(bad)
jmp
loopne
pop
add
adc
shl
mov
inc
(bad)
js
push
pushf
xchg
add
idiv
nop
cli
inc
ss
xchg
out
mov
sub
addr16
and
in
loope
add
(bad)
cmp
shl
dec
mov
repnz
jae
ret
mov
test
mov
mov
stos
mov
cmp
scas
mov
mov
push
and
mov
sub
sub
test
mov
inc
or
push
push
lods
mov
push
sub
rcr
mov
adc
ret
cmp
popa
shl
add
jmp
ss
ins
xchg
fdivr
stos
scas
ins
inc
popf
icebp
inc
dec
xor
(bad)
test
cmp
mov
je
retf
retf
mov
nop
mov
jae
push
add
cmps
sbb
push
jmp
jg
cld
fmul
jle
test
inc
sar
sub
clc
xor
jmp
jae
and
jo
inc
or
add
in
loop
jecxz
loopne
mov
and
xchg
mov
inc
fst
mov
pop
out
xor
mov
ins
outs
inc
mov
and
pop
(bad)
sbb
add
mov
(bad)
push
mov
xchg
mov
push
ds
out
(bad)
leave
jl
and
pop
jbe
xor
jo
jo
pop
jae
and
push
jo
adc
inc
fnstsw
or
cwde
fstp
dec
lahf
inc
(bad)
mul
loop
push
sbb
push
mov
mov
clc
mov
adc
sbb
mov
out
outs
or
leave
and
cmp
jp
in
jp
je
js
pop
je
mov
sti
(bad)
daa
mov
in
jl
rol
in
adc
jb
jl
jno
test
cdq
cmp
mov
dec
mov
call
jnp
sar
out
(bad)
iret
pop
push
jmp
jl
pushf
or
out
jle
shl
mov
mov
xor
aam
and
inc
pusha
mov
jp
js
push
push
mov
mov
mov
pushf
xchg
push
xor
add
nop
inc
mov
xor
(bad)
and
add
lods
add
adc
scas
jl
jle
lahf
sub
push
dec
push
popf
mov
sbb
pop
pushf
int
xor
mov
test
aam
xor
test
or
cli
test
fstp
dec
push
pop
pop
cmp
cmps
mov
cs
sub
fmul
sahf
cld
mov
adc
xchg
push
scas
enter
add
mov
cld
cmps
push
and
inc
push
jb
xor
dec
mov
out
ret
js
mov
(bad)
ins
imul
les
aaa
mov
scas
sbb
(bad)
cmps
cmp
sub
push
sbb
xchg
mov
shl
pop
je
stc
cs
retf
(bad)
add
in
mov
mov
loopne
push
bound
repz
mov
pop
cmps
stos
ds
push
(bad)
sub
outs
fwait
sub
ficomp
jno
push
test
add
sub
clc
mov
cmps
int
scas
add
jb
jmp
pushf
popf
add
dec
scas
xor
lea
into
(bad)
je
pop
and
jb
out
dec
jmp
es
dec
xchg
jbe
aad
aad
aad
add
fist
and
xchg
cmp
xchg
ror
(bad)
cmp
pop
sub
jg
jno
out
xlat
jmp
rcl
xchg
jnp
call
mov
pop
pop
inc
fnstenv
das
ror
or
sub
jmp
fstp
ds
inc
movs
js
call
xchg
call
jae
imul
fnstsw
adc
push
xchg
outs
push
or
jae
in
push
(bad)
sti
stc
(bad)
pusha
push
scas
push
sbb
and
je
pusha
inc
jl
xchg
ret
fistp
inc
jne
in
xor
mov
loope
leave
aad
sbb
pop
and
repz
mov
pop
add
pop
mov
in
push
sub
mov
pop
xchg
ins
push
xchg
cdq
mov
sub
sbb
sbb
stos
dec
call
cmp
mov
cmc
xchg
enter
cmp
loop
pop
and
mov
sbb
ss
xchg
jmp
in
xor
aaa
pop
cmp
mov
mov
or
jmp
and
dec
test
cld
push
xor
es
cmp
sub
lods
mov
or
mov
out
inc
retf
imul
jb
xor
push
jmp
pop
sar
repz
jmp
sbb
shr
pop
jge
mov
imul
cmc
(bad)
fsubr
push
push
pop
ror
mov
cmps
fs
xor
loopne
cmp
ret
jmp
mov
push
mov
(bad)
retf
test
jecxz
ja
mov
xor
movs
and
xor
call
sbb
cmps
inc
or
test
mov
pop
cdq
sub
adc
js
ror
stos
scas
je
dec
cmp
addr16
xchg
pop
das
iret
mov
mov
inc
ret
in
fstp
pop
mov
or
fucomi
adc
inc
xchg
jmp
dec
or
mov
mov
xchg
imul
or
push
mov
mov
dec
fidiv
shl
out
dec
inc
out
mov
cmc
les
sbb
fdiv
movsx
jmp
iret
and
xchg
pop
sub
xlat
sbb
mov
pop
sbb
xor
out
and
xchg
mov
int3
dec
int3
sub
inc
mov
jg
lods
clc
loopne
je
mov
and
outs
leave
arpl
xor
pop
ja
jmp
mov
cmp
test
inc
out
pop
mov
or
ret
sbb
or
push
push
adc
or
inc
adc
or
ja
add
sub
sar
into
fcmovu
jge
mov
jmp
or
movs
adc
retf
pop
add
mov
lods
syscall
outs
hlt
pop
(bad)
je
loope
mov
xlat
test
fcomp
pop
sub
xor
ret
and
rol
jb
inc
outs
add
jmp
push
leave
(bad)
scas
jnp
push
ret
or
mov
je
jmp
stc
sub
pushf
cmp
dec
ss
stc
movs
dec
add
adc
adc
push
int3
cmp
sahf
add
lods
pop
jle
retf
fnstcw
cwde
mov
push
out
adc
inc
imul
jg
stos
inc
test
mov
jle
add
ficom
js
cmp
pop
ss
pop
repz
icebp
enter
js
inc
lds
retf
adc
push
pop
cld
arpl
jge
sub
jno
push
into
sbb
imul
inc
scas
or
sub
out
pop
mov
push
fld
mov
lods
test
inc
add
sbb
sahf
xchg
mov
(bad)
iret
rol
mov
mov
cmps
dec
int3
pop
cmp
xor
stos
outs
or
xrelease
mov
sub
shr
ja
push
lods
push
inc
es
in
xchg
adc
outs
push
or
mov
cmp
outs
call
ins
mov
iret
mov
dec
and
lea
mov
js
enter
xchg
rcl
aam
add
out
pop
loop
(bad)
push
jne
imul
xor
stc
mov
pop
sbb
les
dec
aas
(bad)
int
xchg
imul
mov
scas
out
lock
fisubr
add
into
pushf
js
and
sbb
fsubr
inc
push
or
int
enter
sub
loop
jmp
je
mov
jl
(bad)
fsubp
sti
cmps
push
test
pop
inc
adc
out
call
out
imul
movs
jb
int3
popf
imul
and
sub
push
and
dec
adc
dec
xchg
pop
xchg
out
xchg
imul
pop
in
mov
cli
lods
cmp
clc
xor
mov
imul
cld
mov
imul
xor
sti
test
push
out
lock
jecxz
sbb
push
mov
or
mov
add
jecxz
cmps
dec
arpl
ins
scas
ins
data16
xchg
mov
mov
or
ret
mov
sti
and
push
cld
sub
xor
xchg
and
arpl
push
cmp
rcl
mov
adc
lock
cdq
cmp
loope
dec
scas
cmp
vpsubd
jnp
cs
nop
inc
sbb
in
idiv
mov
and
mov
retf
pusha
mov
loopne
mov
ins
outs
cmp
cwde
xchg
mov
cmp
xchg
lds
cdq
dec
repz
xlat
sbb
xchg
neg
in
dec
in
push
jo
aam
imul
cmp
cs
repnz
jbe
in
push
push
fld
or
jbe
inc
dec
push
push
out
push
mov
das
dec
fdivr
pop
outs
xor
fdiv
and
pusha
js
mov
(bad)
in
dec
adc
xor
in
jmp
out
or
gs
push
sahf
rcl
not
xlat
sbb
jb
cwde
es
(bad)
mov
mov
cmc
pop
sbb
fwait
xor
jg
not
push
cld
dec
jb
xchg
rol
mov
sahf
enter
sbb
xor
push
xchg
repz
addr16
and
movs
gs
sub
cmp
je
dec
dec
dec
sub
mov
sub
mov
push
xchg
shl
pop
mov
or
xchg
daa
and
sub
adc
pop
mov
je
dec
mov
xchg
(bad)
mov
pop
test
mov
outs
addr16
cs
dec
mov
xchg
pop
mov
mov
mov
lock
mov
cmps
sahf
push
push
fucom
pop
sub
(bad)
iret
fld
sahf
mov
cs
sub
mov
add
dec
dec
xchg
pushf
int3
call
pop
frstor
dec
iret
lods
movs
clc
cwde
aaa
js
xchg
mov
dec
(bad)
adc
repz
cmps
or
jl
or
aaa
xor
mov
jge
call
xlat
jg
adc
xor
jmp
push
pop
jge
cli
ja
add
ficom
adc
mov
out
cmp
push
inc
xor
rol
add
sbb
sbb
dec
outs
stc
loope
pop
dec
dec
sub
mov
(bad)
mov
push
fs
push
jb
push
loop
cmp
fsubr
popf
add
add
adc
push
fucomp
jno
mov
add
cdq
mov
sub
and
stos
mov
in
cmp
(bad)
jb
push
out
mov
stos
ins
ret
(bad)
dec
into
mov
mov
xchg
fnstsw
nop
cmps
cmp
push
(bad)
fbld
inc
in
dec
lods
sahf
fisub
out
xor
pusha
out
lea
cmp
aas
ins
mov
jne
out
push
xchg
mov
mov
pop
cs
arpl
mov
sbb
sbb
std
xchg
push
xor
loope
inc
popf
pop
or
cdq
ss
iret
jecxz
cmc
jle
mov
test
mov
pop
outs
jl
mov
mov
mov
pop
pop
in
sahf
enter
pop
pop
dec
pushf
fistp
jo
jl
or
mov
cmp
xchg
add
dec
fild
inc
addr16
rcl
inc
stos
fnstcw
add
das
je
sar
pop
popa
ja
fs
rcr
mov
data16
(bad)
xchg
xor
dec
push
addr16
cld
shl
lds
mov
fstp
cmp
sti
in
(bad)
repnz
xchg
xor
mov
xchg
ins
dec
pop
sbb
mov
loopne
in
icebp
sahf
cld
push
xchg
scas
pop
cmp
das
fs
push
jnp
mov
mov
pop
mov
fs
lock
loopne
imul
jns
ins
int
xor
xchg
(bad)
mov
dec
aas
test
sub
xor
mov
push
xchg
cmp
fisub
mov
mov
adc
pop
pop
mov
frstpm(287
scas
sahf
(bad)
(bad)
aad
lods
hlt
pop
aaa
(bad)
loopne
ror
xor
push
in
cs
pop
sar
out
push
adc
dec
jbe
sbb
sbb
(bad)
punpckhwd
(bad)
xchg
mov
xchg
sbb
add
in
mov
in
cmp
mov
pop
add
fadd
ja
fisttp
loopne
jmp
jo
aam
outs
imul
test
mov
popa
mov
jecxz
(bad)
mov
arpl
mov
into
enter
jl
jl
out
fmul
push
mov
cmps
jecxz
sbb
push
call
outs
mov
test
cwde
pop
call
sbb
cmps
mov
xchg
sbb
dec
(bad)
fcmovnbe
out
jno
xchg
ret
jl
(bad)
loopne
jne
popa
dec
jmp
pop
out
in
xchg
mov
pop
outs
dec
mov
push
iret
dec
loopne
imul
inc
(bad)
loop
mov
mov
cdq
push
es
mov
sub
(bad)
std
adc
div
adc
scas
xor
fimul
or
mov
xchg
inc
xor
mov
pop
cmc
loope
sbb
xchg
pop
lea
mov
clc
dec
mov
fisttp
push
pop
aas
loop
mov
pop
ins
scas
pop
imul
test
rol
inc
fld
or
cmps
retf
cld
imul
js
(bad)
push
das
in
pop
(bad)
fidiv
mul
loope
out
mov
adc
lds
inc
pusha
fstp
pop
push
ret
jge
cmp
mov
add
jbe
mov
add
add
push
mov
fnstsw
sub
xchg
imul
jo
dec
sbb
aam
gs
pop
(bad)
out
pop
movs
and
lock
lods
fwait
data16
retf
and
lds
shl
mov
fstp
lds
ror
and
xchg
fnstcw
test
mov
loope
mov
cmp
outs
add
mov
jb
jp
(bad)
aas
inc
ins
int3
inc
in
call
dec
push
aad
and
jg
int
fcom
jno
push
push
jl
cmps
jg
out
sub
inc
adc
leave
dec
mov
or
inc
sti
pop
inc
aad
(bad)
out
or
in
das
jae
out
cmp
cld
pushf
rcl
mov
ret
jp
jecxz
mov
dec
or
jns
das
je
out
repnz
out
fs
test
add
pop
adc
and
mov
loope
nop
in
mov
mov
xor
shl
xchg
fsubr
out
push
nop
outs
lods
inc
int3
data16
ficomp
fisub
xchg
adc
and
mov
adc
fwait
xchg
int3
mov
stos
js
add
(bad)
push
push
sti
(bad)
popa
adc
jmp
not
cmp
clc
or
pop
jmp
call
ret
push
jecxz
push
mov
pop
and
test
sub
and
or
sub
pop
out
add
cmp
adc
mov
lods
xor
js
movs
addr16
aas
mov
fs
pushf
scas
sub
push
sti
shl
mov
fwait
or
dec
scas
mul
in
mov
leave
outs
ja
add
aam
push
add
cmps
mov
rcr
fisub
fnsave
pusha
in
xlat
mov
mov
or
shr
ffreep
mov
jnp
dec
ror
iret
outs
mov
aaa
mov
cmp
iret
daa
gs
or
out
jo
ins
or
dec
cwde
jmp
into
mov
dec
dec
inc
ret
rcr
into
sbb
cmp
lods
mov
dec
push
cmp
or
jl
fst
mov
fsubr
stos
(bad)
xchg
or
sahf
out
loopne
in
not
enter
and
jbe
push
adc
outs
push
lock
out
pop
addr16
or
xor
sbb
sub
mov
in
add
leave
pop
fiadd
add
popf
fisttp
pop
fistp
leave
cdq
fcmovu
adc
sbb
div
push
push
jmp
(bad)
adc
mov
xchg
sub
cli
sbb
(bad)
repz
mov
mov
hlt
push
cld
pop
and
adc
pusha
fistp
arpl
jbe
cmp
inc
mov
xchg
imul
in
xchg
test
lock
xor
cmp
push
pop
xchg
inc
adc
xor
dec
mov
lds
xchg
(bad)
mov
fdivp
repz
shr
out
pop
mov
and
sub
jno
js
mov
cld
fwait
(bad)
enter
push
xchg
sbb
call
ret
mov
lahf
mov
mov
loopne
jno
fistp
mov
xchg
in
mov
out
pop
push
push
sub
dec
push
outs
ret
aaa
out
(bad)
adc
adc
stc
fnstenv
jb
cwde
adc
je
pop
(bad)
sbb
lea
mov
pop
arpl
test
jbe
jg
loopne
lea
je
xchg
jae
pop
std
(bad)
jmp
clc
jp
std
int
clc
cmps
dec
xchg
push
jnp
pop
inc
pop
xchg
scas
out
and
inc
pop
test
(bad)
push
xchg
mov
mov
adc
(bad)
dec
es
sbb
imul
cmp
mov
sub
or
mov
das
iret
push
dec
dec
xchg
int3
jae
sbb
and
sbb
iret
mov
shl
dec
pop
les
xor
mov
add
jp
xor
jno
sahf
outs
out
mov
xor
ret
in
std
pop
je
test
inc
adc
fdivr
in
lods
mov
out
inc
retf
and
jmp
lock
fdivr
call
ror
add
jno
into
sahf
mov
pcmpgtb
clc
adc
jp
add
jno
sbb
stos
sub
std
pop
sbb
out
fcomp
les
call
stc
cmps
jle
mov
add
repnz
sub
jae
xchg
scas
or
pushf
sbb
push
frstor
pop
pop
fucomi
scas
jle
jecxz
mov
fwait
iret
sbb
icebp
dec
fdiv
cmp
jbe
xor
and
pop
jle
lahf
fcom
popf
mov
and
jb
mov
mov
mov
aad
inc
pop
mov
jle
xor
mov
rcl
popa
cmp
repnz
cli
mov
push
or
mov
aaa
dec
loope
leave
cmp
stc
cs
fsub
retf
stos
js
cmp
push
aad
mov
xchg
pop
ss
leave
lds
inc
int3
mov
scas
test
pop
jns
pop
loopne
xor
xchg
jne
sar
mov
sar
add
enter
sbb
inc
cmp
ds
lds
add
xchg
inc
cmps
fld
and
jae
ins
fcomp
gs
jne
loop
loop
or
cmp
adc
(bad)
pop
test
cmp
out
cmp
shr
rcl
int
sub
movs
pop
or
pushf
jp
push
mov
push
movs
sub
jb
ret
(bad)
pop
scas
test
cmp
cdq
imul
lds
xor
js
arpl
fld
fwait
sbb
sub
neg
outs
dec
mov
jnp
jns
stc
xchg
mov
sub
mov
jge
iret
fmul
lock
rcr
sbb
jp
adc
dec
sub
cwde
in
bnd
out
out
add
jnp
and
retf
in
xchg
movs
dec
lea
pop
loop
xor
out
adc
adc
adc
dec
cmps
call
add
or
ss
cmps
mov
stc
cmps
jecxz
stos
adc
inc
dec
and
call
push
mov
xor
enter
adc
stos
dec
xor
xor
dec
ja
cli
and
or
mov
add
xor
mov
sub
push
add
mov
(bad)
xchg
inc
jmp
push
xlat
xor
test
jl
xor
lods
lock
mov
dec
sub
je
inc
loope
pop
cli
dec
and
xor
and
test
mov
fnsave
or
into
mov
icebp
test
push
pop
pushf
adc
lds
fwait
fwait
push
push
loopne
inc
scas
jle
or
les
cmp
push
shl
push
xlat
mov
ds
aaa
push
dec
in
lods
mov
mov
cmps
jmp
sbb
fld
jns
sti
daa
rcl
or
lods
xchg
sbb
dec
or
add
int
ror
cmp
loope
cmp
xchg
daa
pop
mov
test
mov
mov
dec
popa
adc
mov
je
push
stc
jl
sub
inc
clc
sub
mov
pop
jl
dec
push
outs
fidiv
jmp
xchg
ret
repnz
and
iret
pusha
les
arpl
or
mov
cmp
pop
(bad)
call
push
mov
test
dec
cwde
cmp
leave
movs
jmp
xor
jge
fild
xchg
mov
aam
daa
nop
std
push
adc
push
push
pushf
push
sub
or
dec
aas
data16
arpl
or
retf
jmp
sbb
mov
mov
xchg
xor
inc
adc
adc
sti
and
pop
xor
dec
dec
stc
jne
mov
js
sbb
dec
or
pop
test
and
mov
imul
dec
add
test
scas
or
retf
jge
leave
(bad)
cli
add
sar
dec
ds
scas
lea
add
jnp
out
in
xchg
lea
fcom
cmp
dec
daa
mov
push
sbb
and
mov
sti
fsubr
mov
enter
mov
in
pushf
out
into
mov
stc
sahf
mov
ds
push
outs
mov
daa
pop
or
pop
rsm
cmp
sub
cmp
xor
jnp
cmps
(bad)
mov
ja
pop
mov
repnz
adc
push
fmul
jmp
cli
jecxz
lods
cs
enter
jns
xchg
push
add
scas
xchg
test
sti
popa
sbb
in
sbb
scas
dec
push
dec
enter
sub
cmp
(bad)
xchg
scas
and
iret
outs
cmps
xchg
add
aad
dec
aas
dec
ds
adc
mov
push
test
sbb
daa
cmps
es
ja
sar
mov
data16
or
cmp
push
or
xchg
(bad)
stos
dec
jnp
add
adc
scas
push
and
jns
aaa
lock
mov
cmp
add
jl
in
pushf
dec
scas
sahf
xchg
xlat
(bad)
shr
and
cs
push
jg
loop
enter
ja
mov
test
jecxz
sub
xchg
mul
(bad)
xchg
imul
imul
push
add
sahf
cld
mov
mov
daa
push
xchg
rol
pop
pop
out
dec
push
pop
shr
cmc
gs
call
lock
pop
sbb
cmp
lock
arpl
movs
xchg
out
xchg
dec
aam
push
lahf
pop
sysret
push
xor
mov
jb
cs
js
sub
stc
jge
add
inc
sbb
stos
push
cmp
std
add
aas
cmp
dec
in
or
jae
mov
sar
movs
sub
xor
mov
fldenv
repz
adc
xor
push
mov
std
xchg
repz
and
mov
in
xchg
and
cdq
mov
xor
mov
add
add
jno
(bad)
iret
add
rcl
jecxz
cmp
sar
jno
outs
cli
xor
push
push
loopne
ins
dec
xchg
fmul
in
mov
xor
inc
xchg
aad
imul
sbb
push
out
sbb
push
push
inc
call
out
test
imul
out
arpl
mov
inc
ficom
jbe
retf
lock
ins
outs
pop
out
jmp
test
pop
jmp
pushf
sbb
and
inc
out
mov
mov
test
in
add
xor
push
sbb
test
push
cdq
ret
mov
mov
mov
lock
clc
push
mov
xchg
mov
jmp
imul
iret
add
push
iret
(bad)
push
mov
sbb
and
fimul
retf
outs
inc
outs
add
shr
arpl
jge
mov
sub
sub
loop
(bad)
gs
adc
scas
jg
mov
cmps
fs
xchg
adc
popf
hlt
mov
(bad)
rcr
repz
sar
add
outs
mov
ja
gs
mov
in
pop
jge
nop
movs
das
inc
mov
sub
clc
stc
std
lea
rcr
and
lahf
daa
xor
and
int3
out
adc
push
push
movs
popa
(bad)
push
int3
pop
fadd
pop
loope
jbe
test
es
bound
cmp
push
test
scas
(bad)
mov
fucom
cli
sbb
in
into
movs
stos
test
mov
xchg
adc
fs
dec
jns
xor
xor
adc
in
nop
imul
mov
hlt
out
sub
lods
ror
les
mov
in
pop
jl
sar
popa
or
es
xor
sti
in
push
mov
jno
call
xor
mov
aas
or
push
push
mov
mov
pop
in
or
mov
push
adc
or
mov
xor
ja
mov
push
push
mov
sbb
sub
lahf
dec
js
movs
xor
or
lahf
ret
std
xchg
fdiv
aaa
push
loopne
sub
stc
mov
movs
jb
lea
and
sub
out
loope
stc
jecxz
and
(bad)
into
sbb
cmps
inc
adc
std
xchg
je
cmp
fimul
inc
test
dec
cmp
mov
ret
adc
fwait
sbb
into
sub
inc
mov
push
cmc
lea
hlt
push
push
jmp
xchg
jmp
lds
or
xchg
dec
(bad)
nop
jg
push
jnp
retf
dec
dec
addr16
aam
add
sar
xor
inc
js
addr16
fwait
test
mov
cmp
sub
mov
mov
mov
xor
push
inc
into
and
mov
sbb
pop
ins
lock
lahf
dec
sub
mov
bound
fild
or
jne
xchg
outs
aas
inc
push
es
scas
mov
fcom
movs
jecxz
push
out
mov
inc
jg
push
jg
int
xlat
imul
and
(bad)
pop
in
mov
out
dec
test
imul
xchg
add
sub
shl
xchg
or
jne
cwde
add
cmp
inc
daa
pop
and
enter
push
(bad)
sub
inc
dec
or
jns
aaa
pop
sbb
mov
clc
and
aaa
pop
in
fdivr
loope
outs
(bad)
mov
fstp
xchg
mov
cs
pushf
xchg
adc
inc
aas
sub
fnstsw
push
cmp
push
fdivr
mov
mov
lock
(bad)
cmps
dec
xor
nop
inc
xchg
jmp
repz
rcr
or
mov
lods
mul
adc
int
pop
mov
jmp
ficom
sti
inc
popf
les
(bad)
jo
fidivr
mov
shl
call
xor
arpl
fadd
loop
outs
mov
push
mov
ja
gs
scas
unpckhps
(bad)
cdq
or
or
(bad)
lds
fidiv
dec
mov
ins
push
mov
mov
outs
addr16
and
mov
add
jbe
sbb
scas
fwait
push
sub
sub
arpl
mov
dec
stc
scas
outs
out
out
xlat
les
jbe
outs
mov
out
add
jp
sub
push
xchg
fisttp
jmp
dec
mov
pusha
and
loope
push
lock
push
jecxz
jbe
mov
or
jae
pop
push
and
and
dec
sahf
test
jmp
arpl
mov
pop
jnp
cmp
into
(bad)
dec
push
and
jmp
add
or
out
dec
sub
push
mov
add
or
or
mov
or
inc
xchg
pop
cmp
(bad)
enter
shl
scas
or
inc
inc
cmps
xor
jo
adc
nop
sbb
push
and
rol
add
repnz
xor
daa
inc
push
(bad)
sub
retf
mov
jmp
je
sbb
(bad)
ds
test
or
push
push
sub
rol
lock
fwait
daa
push
dec
and
in
movs
sbb
(bad)
or
add
or
dec
mov
dec
mov
arpl
cmovnp
fiadd
inc
inc
cmp
or
mov
fxch
ins
mov
rcr
xchg
call
or
add
popf
or
jecxz
xchg
in
outs
adc
xchg
stos
outs
fistp
stos
mov
and
(bad)
and
or
retf
add
xchg
xor
sub
push
mov
or
mov
cld
sbb
repz
(bad)
movs
jne
lock
fld
dec
aam
(bad)
mov
and
retf
out
retf
xchg
dec
xchg
dec
sub
push
and
inc
mov
add
outs
xchg
mov
je
add
mov
shl
retf
or
fwait
adc
fwait
bound
add
pop
sahf
out
scas
pop
cmp
cld
pushf
les
push
nop
test
sub
call
fcomip
js
(bad)
stc
call
adc
jmp
pop
cmp
movs
aam
(bad)
retf
fcomp
loop
adc
and
pop
out
cmovnp
sbb
inc
pusha
xchg
aam
push
sbb
pop
mov
lock
rol
jle
movs
cmps
jecxz
mov
pop
inc
xchg
or
pop
ret
cdq
inc
adc
pop
adc
jns
arpl
fcomp
stos
in
data16
and
adc
xor
xchg
test
push
lahf
das
push
or
push
stos
sbb
mov
or
adc
imul
xchg
or
fwait
sub
shl
gs
xchg
nop
jae
lods
lahf
lock
adc
ret
push
dec
fnstcw
fisttp
mov
fsub
or
inc
adc
inc
dec
jno
ror
enter
add
xor
push
call
gs
std
adc
mov
shl
xchg
test
retf
inc
and
data16
inc
out
adc
cmp
mov
cmp
adc
push
fsubp
into
mov
cmc
jmp
and
cmp
popf
mov
shl
lods
dec
jg
inc
push
cdq
xor
in
shl
retf
jmp
sbb
adc
xor
repnz
nop
xlat
jbe
nop
xlat
fidivr
aam
arpl
and
aam
pop
enter
clc
pusha
push
jle
xchg
fnstsw
push
or
dec
(bad)
fsubr
out
out
rol
add
jp
pop
sub
jo
mov
add
js
and
enter
cwde
jbe
(bad)
scas
jmp
pop
out
jo
lods
out
enter
cmp
adc
jnp
add
xor
jns
or
push
test
xchg
add
and
push
push
(bad)
xchg
dec
cmp
sti
and
inc
mov
stos
repz
adc
and
cmps
push
mov
aas
jmp
daa
jg
xchg
enter
ret
jg
adc
or
lods
aam
mov
push
adc
add
(bad)
adc
sub
pop
jle
test
out
xchg
jecxz
jmp
inc
pop
lock
fidiv
add
cmps
add
pop
add
add
add
gs
add
push
add
pop
pop
sub
push
cs
add
retf
add
in
add
fxch
add
and
add
add
jb
gs
xor
cs
ins
add
gs
ins
xor
cs
ins
add
retf
add
pop
int3
add
adc
add
sbb
add
add
add
add
inc
js
je
jb
arpl
jae
add
pop
ins
arpl
popa
je
add
pop
ins
ja
imul
arpl
add
add
add
add
gs
ins
inc
js
arpl
gs
