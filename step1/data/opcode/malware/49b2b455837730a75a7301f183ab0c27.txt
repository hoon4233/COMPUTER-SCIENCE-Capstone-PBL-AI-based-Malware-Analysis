ret
pop
shl
cmp
cmp
clc
lods
or
add
iret
pop
les
aaa
ds
adc
xchg
jge
enter
mov
adc
popa
popa
add
xor
jmp
movsx
ror
add
inc
mov
test
jne
mov
jmp
cmp
je
add
mov
test
ja
mov
ret
xor
ret
push
mov
sub
push
push
push
mov
mov
cmp
jne
mov
xor
test
je
mov
jmp
push
push
push
push
push
push
call
mov
mov
test
jne
mov
cmp
jne
cmp
jne
push
lea
push
push
call
movzx
add
lea
lea
jmp
inc
cmp
jbe
mov
mov
sub
mov
mov
mov
inc
dec
jne
xor
add
add
movzx
cmp
ja
lea
call
test
jne
push
push
call
jmp
mov
push
push
call
pop
pop
pop
leave
ret
rcr
inc
sar
or
fist
cmp
inc
in
ror
frstpm(287
pop
lahf
cmp
lods
mov
cmc
sbb
jle
shl
cmp
bound
jae
and
jno
add
leave
retf
(bad)
call
in
push
push
mov
push
pop
push
mov
pop
push
mov
xor
push
push
push
mov
push
push
push
lea
push
call
test
je
mov
leave
ret
mov
push
push
mov
push
lea
push
push
call
mov
test
jne
mov
jmp
push
push
push
call
push
push
push
call
mov
add
mov
add
xchg
mov
xor
pop
pop
leave
ret
jnp
push
lods
mov
mov
out
stos
sbb
test
sub
ins
fisttp
sbb
call
in
push
inc
loop
sti
mov
or
push
push
add
mov
test
je
mov
test
je
add
xchg
mov
test
je
push
push
call
ret
add
dec
sub
adc
sbb
fdiv
dec
stos
mov
push
xchg
sar
mov
mov
pop
loopne
bound
mov
ins
xchg
add
fs
fild
rcr
mov
cmp
jne
cli
push
mov
and
mov
pop
jmp
push
mov
or
mov
pop
sti
ret
push
call
call
call
call
call
call
push
call
pop
ret
test
cmp
jp
neg
out
loop
lods
test
sbb
push
lds
mov
inc
fidiv
lds
cmp
inc
out
mov
mov
lds
add
or
add
in
and
sub
push
push
push
mov
mov
mov
xor
mov
mov
cmp
ja
je
sub
je
push
pop
sub
je
sub
je
sub
je
sub
je
dec
je
sub
jne
mov
push
lea
push
mov
mov
call
lea
mov
lea
push
push
push
push
lea
push
push
lea
push
mov
mov
mov
mov
mov
call
cmp
je
lea
push
lea
push
call
push
lea
push
push
lea
push
push
push
call
push
call
jmp
mov
push
call
jmp
mov
mov
movzx
push
push
push
call
add
jmp
call
jmp
call
jmp
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
test
jbe
mov
mov
sub
mov
mov
add
dec
jne
push
call
call
xor
jmp
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
call
mov
lea
push
lea
push
mov
mov
mov
mov
mov
mov
call
lea
push
call
mov
push
lea
push
call
lea
push
call
mov
push
lea
push
call
lea
push
call
mov
mov
mov
mov
mov
jmp
push
call
push
call
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
adc
xor
ja
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
cmp
jmp
push
call
jmp
call
jmp
cmp
je
call
call
jmp
call
jmp
mov
mov
call
mov
mov
xor
mov
mov
mov
call
mov
pop
pop
pop
mov
pop
ret
call
mov
push
call
ret
add
xchg
pop
xchg
(bad)
push
xchg
std
mov
or
cdq
lea
xor
push
mov
cmp
jno
int
aam
popf
lods
cmp
outs
arpl
jo
inc
add
dec
and
and
and
xor
call
xor
ret
xor
ret
push
mov
sub
push
push
push
xor
push
mov
call
mov
push
lea
push
call
mov
lea
push
push
push
push
lea
push
push
push
call
cmp
jne
mov
or
push
mov
push
call
lea
push
push
call
mov
test
je
push
call
mov
jmp
push
pop
lea
mov
rep
mov
mov
mov
push
push
mov
push
mov
call
mov
movzx
push
push
push
call
add
xor
pop
pop
pop
leave
ret
call
test
loopne
lods
mov
lds
mov
add
mov
cmps
out
lds
stos
sbb
add
mov
lds
add
or
add
cmp
pop
fs
jmp
cwde
nop
clc
mov
mov
mov
retf
mov
add
sbb
test
add
mov
and
add
push
mov
push
test
je
mov
shr
push
lea
push
push
call
add
test
je
mov
test
jne
xor
pop
pop
ret
mov
jmp
push
mov
sub
dec
push
mov
je
dec
je
dec
je
sub
je
sub
je
dec
jne
mov
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
push
push
lea
jmp
mov
test
je
lea
mov
test
je
push
add
push
push
mov
call
mov
add
mov
jmp
push
push
push
call
mov
push
mov
add
add
push
push
call
add
mov
add
push
mov
call
cmp
je
mov
mov
add
test
je
mov
lea
mov
lea
mov
push
call
cmp
jne
push
mov
xor
push
push
mov
call
add
cmp
jbe
push
push
push
call
add
mov
cmp
je
mov
add
nop
jmp
push
mov
lea
push
push
call
push
push
push
call
add
jmp
xor
mov
add
mov
cmp
jne
jmp
mov
mov
pop
pop
pop
leave
ret
(bad)
jb
add
inc
sbb
(bad)
int3
int
pop
push
mov
gs
fld
xor
repz
lds
jg
dec
pop
adc
xchg
inc
js
gs
mov
in
je
inc
xchg
pushf
(bad)
call
in
push
push
and
push
xor
inc
cmp
mov
je
call
cmp
jne
push
push
call
jmp
push
mov
push
mov
cmp
jne
mov
test
je
movzx
cmp
je
cmp
jne
push
push
push
call
add
test
jne
mov
mov
mov
test
je
movzx
push
call
cmp
jne
mov
push
push
call
cmp
jne
test
jne
mov
mov
call
mov
pop
pop
pop
leave
ret
cmp
je
call
cmp
jne
jmp
push
mov
push
mov
mov
test
je
cmp
jbe
push
push
push
call
add
test
jne
mov
mov
add
push
push
pop
call
cmp
jne
and
mov
xor
mov
mov
call
mov
jmp
push
push
call
pop
pop
ret
mov
lahf
mov
xor
sar
imul
in
mov
lods
pop
xchg
popa
retf
xchg
jmp
lds
cmp
push
inc
bound
add
pop
push
add
push
mov
push
push
push
mov
lea
mov
xor
push
push
mov
mov
push
push
push
push
lea
push
call
test
je
xor
leave
ret
mov
mov
add
xchg
mov
mov
mov
add
xchg
mov
mov
leave
ret
mov
cmp
jne
cmp
jne
mov
ret
test
jne
mov
mov
mov
mov
call
mov
cmp
push
jne
push
push
push
call
mov
test
je
and
mov
push
push
lea
push
call
add
cmp
jne
mov
jmp
mov
mov
mov
xor
pop
ret
mov
pop
ret
or
call
(bad)
mov
jge
hlt
aam
adc
dec
rol
out
mov
fwait
jo
rol
or
hlt
syscall
mov
add
cmp
jne
cmp
jne
mov
mov
add
xchg
mov
mov
add
xchg
mov
mov
mov
test
je
push
mov
push
push
call
mov
test
jne
pop
ret
aas
ds
cmp
jecxz
or
pop
fcom
pop
or
js
dec
mov
leave
pop
(bad)
mov
test
mov
data16
pop
(bad)
movs
mov
jmp
inc
dec
add
push
mov
and
sub
push
push
mov
xor
push
mov
cmp
jne
xor
jmp
mov
mov
mov
cmp
jne
push
push
call
jmp
cmp
jne
mov
cmp
jmp
cmp
jne
mov
cmp
jne
mov
jmp
cmp
jne
mov
cmp
jne
inc
jmp
cmp
jne
mov
cmp
jne
jmp
cmp
jne
mov
mov
jmp
cmp
jne
push
mov
call
cmp
je
lea
push
call
pop
inc
push
push
push
push
lea
push
call
lea
push
add
push
lea
push
push
call
lea
push
mov
call
add
mov
mov
add
mov
lea
mov
lea
add
mov
lea
push
push
lea
push
mov
mov
mov
mov
mov
call
mov
cmp
jne
mov
pop
pop
pop
mov
pop
ret
xor
dec
inc
loope
stc
push
jecxz
mov
(bad)
cmc
and
ins
jge
cmp
mov
out
and
ja
ins
jge
enter
dec
enter
repz
xor
push
push
push
mov
push
mov
push
mov
mov
call
test
jne
xor
jmp
push
call
test
je
push
call
test
je
mov
push
push
call
push
mov
call
test
je
mov
push
push
push
call
mov
push
call
test
je
mov
cmp
jne
movzx
push
push
call
mov
push
call
test
je
movzx
mov
cmp
je
mov
cmp
jne
mov
push
push
call
mov
movzx
sub
imul
push
push
call
mov
push
call
test
je
inc
push
push
call
test
jne
push
push
call
test
jne
mov
pop
pop
pop
pop
pop
ret
xor
jmp
push
mov
and
push
push
push
push
call
cmp
mov
je
call
cmp
je
test
je
push
push
call
test
je
push
push
call
xor
jmp
push
push
call
mov
test
je
push
call
mov
test
je
mov
mov
pop
pop
mov
pop
ret
add
cld
leave
add
mov
mov
in
mov
icebp
and
sahf
imul
in
mov
fnstcw
(bad)
or
and
in
sub
push
push
push
xor
xor
push
mov
pop
cmp
jne
mov
cmp
jne
cmp
jne
mov
mov
jmp
jbe
cmp
jbe
mov
mov
jmp
mov
mov
cmp
jne
mov
cmp
je
mov
cmp
je
mov
mov
push
lea
push
call
lea
mov
lea
push
mov
mov
push
lea
push
mov
mov
mov
mov
call
cmp
je
push
lea
push
push
push
push
push
mov
call
test
jne
mov
mov
call
cmp
je
mov
mov
mov
mov
cmp
jne
lea
mov
mov
mov
mov
push
push
call
mov
cmp
je
push
mov
push
push
call
push
mov
push
push
call
mov
push
mov
mov
lea
push
mov
call
push
push
call
add
mov
push
call
cmp
je
cmp
jne
mov
jmp
mov
mov
mov
cmp
jne
cmp
je
cmp
je
push
push
call
push
push
call
mov
mov
mov
pop
pop
xor
pop
leave
ret
inc
aas
and
jecxz
and
pop
push
jecxz
cmp
pop
jnp
test
or
xor
mov
pop
mov
mov
out
mov
xor
pop
pop
push
add
mov
test
je
mov
test
je
mov
push
push
call
and
and
ret
add
cmp
push
xor
pop
adc
lds
push
xor
outs
clc
add
mov
dec
nop
and
dec
and
pop
cmp
sub
ins
je
jecxz
xchg
(bad)
inc
add
add
test
jne
mov
mov
ret
cmp
jne
mov
mov
mov
mov
mov
ret
cmp
jne
mov
mov
mov
jmp
test
jne
mov
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
ret
mov
push
push
mov
lea
push
call
test
je
mov
add
push
call
test
je
cmp
mov
jbe
and
add
push
call
test
je
push
call
test
je
mov
add
push
mov
add
push
push
call
add
test
jne
mov
and
xor
mov
mov
mov
jmp
xor
pop
pop
ret
adc
out
sbb
ficom
mov
xor
jbe
add
jmp
sub
leave
stos
addr16
jmp
xor
mov
push
or
add
je
or
cmp
jmp
cmp
jne
mov
call
mov
mov
push
call
mov
mov
push
call
cmp
je
pop
pop
ret
cmp
jne
call
call
mov
mov
mov
add
mov
cmp
je
push
mov
mov
cmp
je
mov
cmp
jne
jmp
mov
mov
mov
lea
push
mov
lea
mov
mov
add
lea
mov
mov
pop
pop
mov
mov
mov
shr
mov
mov
add
cmp
mov
mov
jbe
mov
push
mov
call
mov
push
push
push
call
add
xor
ret
xchg
lds
mov
popa
jp
jecxz
das
push
ds
and
push
bound
outs
jnp
and
test
push
inc
enter
mov
in
and
ds
pop
dec
add
enter
pop
sub
sti
fdivr
or
dec
xchg
cdq
imul
dec
lock
cmp
mov
int
jnp
lods
ds
jg
jo
fs
scas
mov
push
call
and
mov
test
jne
cmp
je
test
jne
mov
mov
test
je
mov
mov
mov
cmp
je
mov
mov
test
je
mov
cmp
je
mov
mov
test
je
mov
cmp
je
mov
lea
push
push
call
test
jne
and
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
jne
mov
sub
xor
push
push
push
push
call
test
jne
mov
call
mov
call
mov
push
call
cmp
jne
push
push
push
call
add
cmp
jne
push
push
push
call
add
cmp
jne
push
push
push
call
add
push
call
mov
call
cmp
jne
cmp
ja
push
push
call
jmp
push
push
push
call
mov
jmp
or
xor
jmp
xor
inc
ret
mov
or
mov
call
ret
lahf
jmp
xchg
mov
push
pusha
ds
mov
sti
jmp
and
dec
loopne
test
mov
int
pop
adc
push
jae
and
ins
je
push
cdq
(bad)
(bad)
call
push
pop
and
test
bound
data16
sub
inc
lock
lahf
adc
jmp
sub
(bad)
lock
mov
data16
mov
add
mov
push
mov
jmp
pop
jbe
push
xchg
test
adc
mov
lea
xor
hlt
test
push
lods
ins
rcl
xchg
mov
inc
adc
outs
je
mov
push
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
call
mov
test
jne
cmp
jne
mov
jmp
cmp
jne
push
call
cmp
jne
cmp
je
mov
pop
pop
pop
ret
mov
mov
call
push
mov
call
mov
lea
mov
mov
mov
mov
sub
push
mov
call
call
xor
ret
frstpm(287
retf
fsubrp
pop
jmp
int3
push
cmps
cmp
pop
out
cld
push
inc
pop
int
mov
sti
std
out
sbb
nop
das
rol
and
xchg
mov
xor
mov
je
push
cli
in
(bad)
inc
add
push
mov
call
push
mov
call
push
push
push
call
add
push
call
mov
pop
jmp
xchg
and
cwde
pop
adc
das
mov
popa
pop
retf
adc
sbb
inc
inc
clc
(bad)
push
cwde
xchg
dec
or
jbe
sbb
mov
cwde
xchg
adc
mov
xor
add
mov
push
mov
jmp
call
cmp
mov
jne
mov
cmp
je
push
call
ret
add
rcl
jg
push
pop
(bad)
mov
sub
aaa
adc
cmps
mov
sub
dec
mov
lods
shr
cmp
pop
(bad)
repz
in
je
push
ror
(bad)
dec
jmp
cmp
je
push
push
pop
mov
sub
mov
mov
add
cmp
je
xchg
add
cmp
jb
pop
call
cmp
jne
cmp
jne
mov
ret
jmp
loopne
or
xor
lds
inc
sahf
rcl
je
cld
add
mov
inc
hlt
int3
outs
rol
and
daa
in
je
add
mov
add
mov
mov
call
push
mov
call
mov
lea
mov
mov
mov
mov
sub
push
mov
mov
lea
mov
mov
mov
mov
sub
mov
call
call
mov
test
je
add
xor
mov
mov
add
add
cmp
jb
ret
jb
and
xor
(bad)
ds
pop
pop
retf
xchg
mov
movs
inc
inc
lock
mov
(bad)
div
retf
lock
mov
add
sub
add
add
push
mov
call
push
mov
call
push
push
push
call
push
push
push
call
add
push
call
mov
pop
jmp
icebp
push
dec
in
or
clc
jb
xchg
xchg
xchg
js
push
push
and
xor
push
or
or
and
push
sub
cmp
add
mov
push
mov
mov
jmp
push
xor
cmp
jle
lea
shr
inc
push
mov
neg
lea
movzx
add
inc
inc
dec
jne
pop
test
je
movzx
add
movzx
mov
shr
add
mov
shr
add
not
pop
ret
fsub
mov
xchg
push
jb
lahf
add
push
inc
xor
mov
xchg
mov
hlt
jb
lock
dec
nop
shl
dec
add
test
add
push
push
mov
mov
mov
jmp
mov
add
cmp
je
mov
test
jne
movsx
mov
add
xor
test
jbe
cmp
je
inc
inc
cmp
jb
jmp
lea
cmp
mov
jne
mov
test
jne
mov
mov
add
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
movsx
and
xor
shl
mov
mov
call
mov
push
push
call
pop
pop
ret
out
sbb
out
mov
xor
ret
or
push
push
push
mov
cli
add
mov
dec
mov
jmp
xchg
xchg
sub
mov
ins
je
add
cmp
add
add
add
je
xor
jmp
mov
mov
mov
push
mov
call
test
je
mov
cmp
jne
cmp
jne
add
mov
mov
mov
sub
call
push
mov
call
mov
mov
push
mov
call
call
xor
mov
pop
ret
cmp
je
cmp
je
mov
call
push
mov
call
mov
mov
push
mov
call
call
and
ret
jmp
jmp
jmp
jmp
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
mov
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
jmp
