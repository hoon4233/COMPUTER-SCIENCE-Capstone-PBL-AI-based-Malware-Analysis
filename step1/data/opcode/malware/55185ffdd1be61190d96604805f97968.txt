dec
lods
xchg
mov
dec
ror
cmp
ins
mov
xor
cmp
sub
outs
outs
aas
jl
xlat
jmp
cmp
ins
push
xchg
mov
pop
sbb
jl
mov
pop
ins
xlat
cmp
out
sbb
xor
sbb
mov
sbb
ja
or
out
(bad)
mul
repz
and
sar
mov
cmp
sbb
sar
ins
xlat
mov
daa
scas
xor
pop
xlat
push
jl
inc
sub
ins
sub
test
arpl
ss
shl
scas
sub
mov
sub
sub
lahf
lock
xchg
cmp
jo
cld
ds
and
xlat
cmp
bound
jl
xlat
mov
xchg
pop
jns
in
rcr
pop
jle
loopne
(bad)
cmc
sub
je
sub
jae
jg
jl
pop
xor
out
stos
mov
ins
mov
push
ins
out
shl
ins
pop
cmp
pop
pop
jle
out
shl
outs
je
mov
imul
cmp
sub
mov
push
pop
jle
out
or
jmp
pop
pop
jle
xor
bound
xor
fs
dec
push
adc
test
push
xchg
sub
jmp
sub
out
adc
popa
mov
jg
xchg
xor
popa
mov
pop
adc
imul
ds
test
mov
push
fdivr
ins
mov
cmp
out
adc
ins
adc
ins
lods
xchg
cmp
ins
xlat
cmp
gs
std
leave
ins
xlat
mov
or
cmp
pop
out
das
ret
or
ret
dec
jge
jle
test
jl
push
clc
je
loop
mov
fcom
cmp
test
xlat
cmp
xor
(bad)
call
cld
ds
xlat
dec
jnp
(bad)
cmp
ins
cmp
fld
jle
pop
fadd
pushf
xor
xlat
xlat
stos
or
jl
xlat
imul
jno
jle
add
xchg
dec
xlat
cmp
ins
push
shr
imul
aas
ins
movs
push
repz
std
popa
repz
mov
sbb
test
xlat
push
push
lods
xchg
cmp
dec
pop
jle
add
aas
mov
dec
inc
pop
jle
xchg
loop
mov
dec
pop
jle
in
sub
xlat
cmp
test
call
ins
push
call
into
xlat
cmp
ins
adc
sub
xor
sub
mov
xchg
sbb
prefetch
pop
jle
out
mov
jl
mov
jl
mov
sbb
std
cmp
xchg
shr
add
(bad)
idiv
fbstp
ret
xor
jns
add
cmp
sub
(bad)
cmp
xchg
out
jns
sbb
ret
cmp
xchg
enter
jns
xchg
mov
ins
lgs
movs
sub
(bad)
cmp
xchg
out
sti
push
fsubr
jns
out
xor
lods
push
hlt
sub
lds
das
dec
cli
aad
ret
jl
cmp
std
sahf
or
jl
mov
movs
adc
cmc
mov
jl
xlat
aam
ret
xlat
cmp
cmp
popa
ins
stos
push
rol
loopne
stc
xchg
sub
and
or
adc
jle
out
xor
lods
push
hlt
sub
lds
mov
cmp
xchg
xlat
xlat
ss
xlat
outs
in
adc
idiv
mov
push
nop
add
stc
xchg
sub
and
les
cdq
sub
sbb
mov
popf
sub
and
rol
daa
cli
clc
push
xlat
mov
ins
xlat
ret
add
ret
cmps
cmp
xor
mov
cmp
outs
sub
pop
popa
jo
xchg
rcr
add
add
and
xlat
or
xor
xlat
cmp
adc
xchg
in
retf
xchg
lods
sub
adc
cmc
scas
push
(bad)
sbb
push
or
aad
jno
ins
and
in
(bad)
cmc
sub
mov
adc
fs
mov
movs
adc
cmc
mov
sub
xchg
xlat
push
xor
cmps
pop
ins
xlat
retf
sbb
xchg
ror
sbb
stos
xor
mov
pop
std
mov
and
pop
in
and
or
sub
out
loop
mov
adc
rol
pop
jns
stos
shl
aad
jge
ins
and
in
enter
arpl
ss
jmp
in
ins
sub
sub
jns
jns
fdiv
sar
inc
cld
ds
pop
retf
xchg
jno
jns
bound
inc
in
adc
jae
ret
sub
dec
lods
xchg
xlat
imul
outs
sti
adc
retf
sbb
xchg
ror
bound
movs
adc
cmc
mov
mov
gs
mov
jl
shr
or
sahf
mov
xlat
push
push
sub
and
shl
fstp
add
adc
sub
mov
aas
ds
jmp
das
retf
fwait
in
(bad)
cmc
stos
mov
movs
adc
cmc
mov
ret
fst
mov
in
cmp
ins
xlat
ret
or
mov
mov
add
test
sbb
push
jl
xlat
aam
ret
cmc
xchg
(bad)
(bad)
cmc
stos
adc
dec
ins
pop
int3
and
mov
cmp
das
cmp
icebp
add
mov
mov
cmp
out
jmp
data16
mov
jne
outs
je
xchg
cmp
xchg
test
stos
pop
cmp
ds
sub
xlat
cmp
xor
inc
pop
dec
je
pop
jl
add
jge
pop
sti
dec
mov
pop
das
mov
out
mov
jl
xlat
aam
(bad)
xlat
cmp
sub
ins
adc
and
xchg
jl
pop
push
xchg
out
cmc
stos
out
jne
fsub
jne
mov
into
ds
mov
jns
cmp
xlat
mov
pop
pop
xor
cmc
sub
xor
mov
pop
cmp
pop
cmp
jns
cmp
ins
xlat
mov
aad
push
jl
and
cmc
sub
mov
pop
pop
xor
cmc
sub
xor
mov
mov
mov
mov
sti
sub
mov
mov
xor
ins
aas
and
ins
xlat
outs
sub
ins
imul
lds
jl
imul
ins
out
jns
bound
jge
xlat
mov
popa
je
mov
inc
lgs
das
xlat
cmp
jne
cld
mov
pop
sub
out
repnz
mov
mov
in
scas
mov
mov
mov
ret
sub
test
xchg
jl
mov
jle
loopne
fld
pop
sub
sub
xor
sub
sbb
mov
jl
ds
xlat
mov
pop
lgs
out
xor
sub
sub
in
sar
and
jmp
push
inc
sub
cdq
ins
xlat
cmp
or
cmp
sahf
popa
pop
jl
mov
cmp
xor
in
mov
call
stos
xchg
fdivr
pop
jns
in
aam
sub
ins
icebp
sbb
mov
lds
cmp
sahf
jb
add
inc
js
pop
add
xchg
pop
in
mov
movs
xchg
sub
cmc
scas
push
inc
sub
adc
pop
jle
add
pop
jns
cmp
jmp
xchg
fdivrp
or
in
mov
test
sub
cmc
scas
pop
mov
sub
pop
cld
ds
xchg
jl
xlat
mov
xchg
fdivrp
or
jns
push
push
loopne
xchg
sub
in
cmp
inc
lods
pop
jle
ins
mov
jle
cmp
ffreep
cmp
xchg
les
out
ret
adc
cmp
in
retf
lahf
in
in
adc
addr16
xor
cmp
ja
lods
mov
jl
das
retf
fwait
in
(bad)
cmc
stos
mov
cmp
ins
mov
cmp
xchg
mov
cmp
in
push
jle
xlat
push
jl
aas
adc
popa
pop
std
jmp
(bad)
cmp
xchg
pop
call
ins
pop
imul
rcl
std
cmp
sub
ins
push
outs
mov
push
push
cmp
cmp
add
and
push
jmp
in
test
ins
aad
xchg
xchg
jl
sub
out
cmp
mov
xchg
xlat
push
push
lahf
xchg
cmp
push
jg
jl
push
enter
mov
test
aas
repnz
mov
cmc
mov
in
scas
mov
cmp
test
nop
jl
pop
mov
sub
push
clc
adc
ret
sub
xor
xchg
add
push
test
mov
enter
cmc
scas
pop
mov
sub
pop
cld
ds
xchg
cmc
sub
xor
movs
call
and
mov
mov
ret
mov
mov
lea
ret
pop
add
jns
cmp
ins
xlat
mov
xchg
fdivrp
jae
xor
jl
pop
in
mov
rcl
out
cmc
scas
pop
mov
sub
pop
cld
ds
xchg
cmc
sub
xor
jp
xlat
push
int3
repnz
cmp
fcom
ret
adc
mov
cmp
push
adc
ret
arpl
adc
cmp
call
xchg
sub
out
ret
sub
pop
jns
fs
xor
xor
cmp
or
xchg
sub
jl
push
or
xlat
mov
sub
ds
push
ins
mov
mov
nop
sub
cmp
mov
sbb
push
adc
mov
bound
(bad)
xchg
sub
inc
xchg
sub
bound
jl
xlat
xor
call
xchg
ins
icebp
call
xchg
xchg
cmp
sbb
jl
adc
jae
push
xchg
adc
mov
mov
xchg
xlat
cmp
sahf
fisub
ins
mov
xchg
adc
cld
ds
xchg
xchg
cmp
out
ret
sub
xor
sub
sbb
mov
nop
sub
cmp
aam
nop
sub
jmp
prefetch
jge
adc
ret
icebp
popa
shl
mov
xchg
xchg
mov
test
bound
mov
sar
adc
ret
pusha
mov
cld
push
shl
mov
call
pop
mov
sub
pop
sahf
ds
aas
aas
adc
xlat
cmp
call
xlat
aad
push
add
ins
pop
in
mov
push
call
xchg
cmp
mov
xchg
fdivrp
jae
and
jl
push
iret
sbb
cmp
call
xchg
cmp
mov
xchg
fdivrp
jae
adc
jl
push
cdq
test
sub
jl
lock
fcomip
call
pop
(bad)
dec
pop
ret
adc
ret
fdiv
std
xchg
cs
mov
stc
cmc
sub
cmp
stc
int
ret
xlat
cmp
loopne
mov
xchg
sub
dec
ret
adc
ret
pop
or
cmp
mov
jl
push
call
adc
and
lods
adc
sub
xlat
cmp
in
shl
mov
icebp
call
xchg
cmp
cmp
ins
pop
jns
aad
cmp
cmc
call
pop
(bad)
call
sub
call
pop
mov
sub
push
in
adc
imul
jne
fdivr
les
mov
call
and
xlat
pop
loopne
aam
xchg
sub
or
adc
add
sub
mov
inc
lgs
bound
jg
xlat
mov
jl
push
fadd
call
xchg
cmc
sub
xor
jg
xlat
mov
call
and
mov
sub
test
dec
jge
loopne
rol
jle
jl
adc
dec
cmp
adc
cmp
ins
aas
cdq
aad
xlat
mov
call
and
ret
leave
sub
rol
and
rol
jle
jl
adc
cmc
mov
in
scas
mov
stc
in
sub
sub
stc
sub
mov
xchg
sub
cmp
ret
inc
sar
ins
and
icebp
fcom
adc
test
xlat
cmp
enter
xchg
sub
sub
call
jns
in
retf
lahf
in
inc
adc
sar
jle
xlat
mov
sub
push
mov
push
call
xchg
xchg
cmp
call
xchg
jl
xlat
cmp
sub
xor
jle
xlat
mov
inc
lgs
xchg
sub
dec
ret
adc
push
cmc
sub
xor
jge
xlat
mov
sub
jge
xlat
push
jl
jne
jl
mov
mov
xchg
sub
jle
pop
in
mov
push
call
pop
mov
icebp
call
xchg
sub
sub
mov
jl
xlat
iret
fchs
bound
sub
lds
cmp
sahf
jb
shl
ret
pop
add
xchg
fdivrp
jae
lahf
cmp
or
(bad)
movs
in
mov
sbb
ret
mov
mov
sbb
pop
add
jns
cmp
ins
xlat
mov
xchg
fdivrp
jae
cs
ins
push
or
bound
jl
xlat
mov
cmp
mov
ret
adc
ret
sub
out
ret
sub
jns
in
retf
lahf
in
jo
xchg
sub
jl
push
test
pop
call
xchg
adc
cmp
out
push
adc
cmp
ins
pop
mov
sub
bound
sub
arpl
fbstp
xor
sub
std
xchg
xor
sbb
ret
xlat
cmp
xchg
bound
nop
sub
cmp
mov
nop
sub
cmp
mov
xor
cmp
loopne
ret
adc
add
mov
ret
adc
ret
icebp
call
xchg
and
cmp
test
clc
jo
adc
sbb
mov
sub
std
scas
scas
sub
mov
sub
out
sub
mov
imul
dec
ret
adc
ret
jae
loop
adc
ret
sub
out
sub
iret
fstp
cmp
call
xchg
sub
ret
adc
ret
inc
call
fdivr
call
daa
ret
adc
rol
out
cmc
scas
pop
mov
sub
out
sub
sub
sub
cmp
mov
jl
push
adc
mov
sub
out
sub
mov
sub
out
sub
mov
sub
out
sub
push
call
xchg
xchg
sbb
ret
xor
addr16
xor
lods
xchg
cmp
test
cmp
ins
xlat
ins
sbb
repnz
ins
xlat
mov
sub
mov
mov
out
xchg
jl
adc
ins
xlat
cmp
in
mov
cmp
xor
add
js
or
inc
cwde
in
retf
fwait
in
fdiv
adc
mov
mov
lods
xchg
cmp
sbb
xlat
dec
stos
xchg
rol
adc
ins
xlat
cmp
out
fdivr
sub
sub
in
mov
mov
les
out
in
adc
xlat
loopne
xchg
rol
mov
fild
cmp
cld
push
(bad)
js
xor
rol
add
mov
and
ret
or
in
fisubr
xlat
aam
enter
sbb
push
fsub
xchg
cmp
fidiv
jl
adc
test
xlat
push
jl
cmp
ins
mov
jno
ins
xlat
mov
in
retf
fwait
in
(bad)
cmc
stos
adc
and
push
jmp
in
push
rcr
les
pop
sti
call
cld
ds
xlat
dec
js
pop
xlat
inc
int3
arpl
sbb
or
jno
dec
jge
out
pop
ret
cmp
jmp
jl
cs
out
adc
cmp
test
clc
jo
das
adc
jge
xlat
cmp
xor
ins
sub
sub
xor
les
sar
call
sub
ds
push
mov
ins
xlat
mov
mov
xlat
cmp
mov
test
adc
add
mov
jge
jns
out
add
imul
jecxz
test
mov
xchg
pushf
in
xchg
out
sub
sub
cmp
cmp
cmp
in
adc
xchg
dec
xchg
cmp
xor
mov
aad
aas
jge
aas
and
sub
ins
sub
push
cmp
xchg
shr
(bad)
adc
cmp
in
and
push
lods
fidivr
xchg
shr
xchg
xchg
cmp
xchg
sub
shl
or
imul
mov
call
and
mov
gs
mov
dec
adc
adc
cmp
mov
sub
mov
aam
int
cmp
call
fdivrp
jae
pop
cmp
leave
lea
xlat
ret
leave
mov
ret
adc
mov
jne
mov
ret
adc
mov
pop
lgs
push
cmp
call
pop
mov
push
ins
mov
jns
cmp
sub
cmc
sub
ret
jns
pop
jle
fs
dec
fs
(bad)
in
xchg
sub
lods
repz
cmp
mov
in
scas
out
xchg
js
cmp
in
or
cmp
sub
mov
pop
add
ins
pop
mov
icebp
call
xchg
pop
xlat
ret
or
sub
cmc
sub
xor
leave
mov
ret
test
mov
xchg
test
cmp
in
adc
arpl
ret
jns
pop
jle
in
or
stc
movs
sub
and
mov
xchg
push
cld
jo
xlat
mov
leave
sub
sub
out
xor
mov
int
ret
pop
mov
sub
(bad)
ret
leave
movs
sub
adc
mov
xchg
sub
call
adc
adc
dec
daa
out
hlt
adc
shl
(bad)
in
cmps
push
cld
je
xlat
mov
mov
(bad)
hlt
adc
ret
xchg
(bad)
imul
and
std
scas
fs
jl
push
cld
je
xlat
mov
mov
mov
ret
adc
cmp
inc
xlat
cmp
sub
mov
in
sar
(bad)
cs
push
cld
inc
out
mov
std
sub
and
mov
push
ins
pop
mov
sub
xlat
ret
or
sub
cmc
sub
mov
ins
lgs
xchg
sub
scas
pop
mov
sub
push
xchg
adc
mov
xchg
sub
cmp
ret
pop
jns
xchg
push
add
sub
or
cmp
mov
ret
pop
cmp
sub
mov
call
and
mov
xchg
push
cld
je
xlat
mov
mov
bound
jmp
in
(bad)
std
xchg
inc
jl
ds
adc
jle
out
enter
jns
in
retf
lahf
in
ins
adc
sar
xor
xchg
sub
cmp
ret
adc
ret
mov
ret
jmp
in
(bad)
dec
pop
ret
adc
mov
and
ret
adc
stc
aad
ret
xlat
mov
xchg
pop
in
mov
idiv
lods
(bad)
adc
ret
pop
mov
sub
(bad)
ret
leave
aad
ret
inc
mov
xchg
sub
mov
rcl
ret
adc
cmp
mov
ret
adc
mov
ins
push
mov
out
pop
xor
ins
pop
mov
sbb
ret
adc
ret
cmc
sub
aad
xchg
sub
les
xor
stc
and
adc
cmp
sub
jl
pop
and
ins
pop
mov
push
ins
pop
mov
sub
push
loopne
xchg
sub
sub
xchg
inc
mov
cmp
xlat
mov
xchg
pop
in
mov
idiv
lods
push
adc
dec
adc
ret
adc
ret
mov
ret
jmp
in
(bad)
imul
and
std
sahf
sbb
cld
cmp
xlat
mov
adc
ret
xlat
mov
or
ret
pop
mov
sub
push
int3
adc
ret
pop
mov
sub
push
loopne
xchg
sub
sub
xchg
inc
inc
adc
cmp
lods
xchg
cmp
ins
(bad)
cmp
pop
xlat
mov
cmc
sub
cmp
test
mov
xor
sub
cmc
scas
mov
push
jl
push
movs
adc
cmp
add
mov
ret
xchg
in
repnz
cmp
call
push
cld
js
xlat
mov
xchg
push
jmp
and
cmp
ins
mov
mov
cmc
sub
cmp
aam
xchg
sub
imul
mov
cld
js
xlat
mov
xchg
mov
cmp
loopne
movs
adc
dec
add
cmp
xchg
xlat
cmp
loopne
xchg
adc
mov
xchg
sub
xchg
inc
sub
pop
sbb
ret
adc
xor
rcr
cmp
pop
(bad)
push
lahf
pushf
xchg
cmp
call
xchg
dec
xchg
ret
jmp
xlat
cmp
jmp
mov
jle
loopne
movs
adc
ret
sub
xor
sub
bound
jle
xlat
mov
sub
cmp
jle
xlat
mov
clc
addr16
jl
test
jl
push
cmp
ins
xlat
push
jl
sub
jl
pop
mov
sub
(bad)
int3
adc
ret
pop
lds
mov
jle
loopne
xchg
adc
ret
sub
sbb
xchg
sub
bound
jl
xlat
push
jle
or
ds
pop
mov
sub
pop
aad
xchg
push
clc
jo
sub
jl
mov
loope
das
xlat
mov
lds
ret
aas
dec
xchg
xchg
sub
jns
sub
sub
jge
pop
inc
xchg
adc
jge
xlat
cmp
enter
xchg
xlat
xlat
inc
out
js
xchg
sub
xchg
xlat
dec
push
out
js
xchg
sub
sub
push
(bad)
push
in
cmp
lods
push
cmp
inc
cld
cmc
call
sub
not
daa
ret
adc
js
xchg
sub
in
adc
cs
xlat
mov
cdq
sub
cmp
ret
sub
add
ds
sub
test
clc
ins
out
xor
call
pop
std
jmp
(bad)
cmp
xchg
pop
mov
sub
icebp
adc
cmp
mov
xlat
cmp
call
push
xlat
les
cmp
ins
mov
mov
lds
ret
aas
mov
xchg
sub
sub
bound
(bad)
push
mov
call
xchg
or
sub
jmp
jg
adc
ret
cmp
imul
xchg
rol
sub
sub
imul
xchg
rol
sub
add
cmp
daa
ret
adc
js
xchg
sub
loopne
enter
ins
icebp
call
xchg
xchg
cmp
sbb
aam
icebp
xlat
cmp
test
in
cmp
out
xor
call
pop
std
jmp
(bad)
cmp
xchg
pop
mov
sub
icebp
adc
cmp
movs
pop
lgs
xchg
sub
in
sti
xlat
cmp
push
ds
xchg
sub
mov
lods
push
hlt
sub
vmovapd
ret
leave
mov
ret
adc
mov
sub
imul
xchg
rol
add
adc
imul
outs
xlat
cmp
cmp
rol
jmp
sti
sub
ds
push
retf
fild
cmp
ficom
mov
stc
xchg
sub
cmp
mov
jl
pusha
jp
stos
push
cmp
loopne
rol
es
loopne
ret
sub
dec
cmp
xchg
shr
retf
sub
ins
jae
xchg
ds
sub
xor
loopne
rol
dec
cmp
in
or
retf
sub
cli
clc
push
xlat
mov
xchg
sub
cmp
ret
sub
adc
mov
sub
ins
cmps
jl
push
clc
dec
loopne
ret
sub
inc
ins
xlat
dec
test
adc
leave
xchg
sub
or
jns
ins
xlat
xlat
pop
bound
and
aas
imul
xlat
mov
push
pop
cmp
sub
bound
and
adc
in
std
or
jl
fmul
sub
das
xlat
ret
jns
pop
jle
pop
pop
jl
popa
pop
les
pop
sti
sub
ds
mov
scas
fistp
in
mov
sub
mov
cmps
lahf
scas
and
and
jns
pop
jle
aad
ss
and
cmc
sub
mov
add
mov
cmp
into
xlat
test
ins
adc
jl
ins
int
ins
aas
popa
jmp
xlat
mov
in
and
pushf
xchg
cmp
test
jl
pop
jns
out
repnz
sub
ds
xlat
test
xor
pop
jns
in
push
jl
rcl
ins
mov
push
jl
xlat
ret
sub
xlat
cmp
xchg
cmp
(bad)
jle
out
add
imul
cld
ds
mov
test
ins
aas
sub
ins
xlat
mov
call
fst
mov
scas
xor
cmp
mov
jns
xlat
sbb
test
cmp
cmp
mov
cwde
in
ret
jns
pop
jle
pop
xlat
push
jl
rcl
pop
xlat
push
jl
xlat
cld
sbb
aam
cli
xlat
cmp
sub
mov
pop
lgs
popf
aas
xchg
jmp
xchg
pop
imul
cmp
pop
xlat
aam
sti
xlat
cmp
stos
push
pop
sub
dec
mov
call
ins
pop
jns
cmp
sub
test
stos
jl
sub
call
scas
test
pop
mov
xor
cmp
std
jmp
(bad)
cmp
xchg
pop
(bad)
sbb
and
push
pop
in
mov
lods
out
in
cmc
scas
adc
ins
xlat
cmp
stos
xchg
fdivr
cmp
cmp
in
jmp
jno
pushf
mov
lea
cmp
push
iret
icebp
inc
xlat
cmp
ficom
mov
mov
int3
sub
mov
ret
sub
sub
lods
mov
in
scas
pop
jns
stos
sar
jno
mov
cmp
push
cld
jle
xchg
in
mov
in
scas
sub
out
les
sub
sub
ds
pop
in
mov
push
xchg
loop
xchg
mov
aas
cmp
or
bound
mov
sub
aas
cmp
sub
in
adc
cmp
sar
jbe
xchg
ror
imul
(bad)
retf
cmp
mov
jp
mov
jge
sub
inc
ins
pop
ds
pop
lgs
ficom
xor
xchg
ret
adc
push
jl
xchg
shr
mov
cmp
mov
adc
std
sahf
popf
cmp
dec
mov
mov
movs
adc
cmc
mov
ss
push
sti
aam
xlat
cmp
push
pop
les
pop
sti
icebp
sub
ins
adc
xlat
xor
ret
or
dec
je
test
ret
jl
xlat
ret
or
cmp
ins
xchg
mov
cmp
xchg
mov
cmp
aad
dec
jl
and
cmc
sub
mov
xor
jmp
in
mov
add
xchg
and
cmc
sub
mov
xchg
shr
test
mov
add
mov
ret
or
and
or
dec
fs
les
xlat
ret
or
dec
add
out
ins
xlat
retf
fwait
in
int3
cmc
stos
sub
test
jns
xchg
test
sbb
cmp
mov
nop
in
arpl
in
cmp
xlat
outs
sub
push
test
mov
nop
in
aam
clc
xlat
cmp
stos
pop
les
pop
sti
push
jge
jns
cmp
xlat
cmp
ins
mov
mov
popf
xchg
cld
(bad)
test
xlat
cmp
jmp
pop
les
pop
sti
icebp
sub
ins
sub
pop
jns
inc
xchg
loopne
adc
cmp
bound
jl
xlat
mov
test
jns
push
inc
cmp
ins
mov
aam
clc
xlat
cmp
stos
outs
fstp
xlat
retf
fwait
in
in
stos
mov
ins
sub
push
inc
mov
mov
dec
or
adc
ins
cmp
push
outs
adc
cmc
stos
push
jns
ins
pop
jns
push
aam
xchg
in
cmp
es
xlat
push
jge
(bad)
cmp
ins
mov
push
or
jl
(bad)
cmp
ins
mov
cmp
cmp
imul
stc
pop
jle
out
fcom
or
out
ins
xlat
cmp
pusha
pop
jns
inc
xchg
fadd
xlat
cmp
sbb
mov
mov
jns
push
xchg
cmp
cmps
ins
xlat
cmp
sub
pop
cmp
xlat
xor
cmps
(bad)
cmp
out
fcom
or
cmp
jae
pop
mov
movs
in
adc
ins
xlat
mov
mov
xchg
test
ins
pop
cli
call
(bad)
or
loope
jl
pop
cli
cmc
xchg
out
cmc
stos
pop
dec
test
shr
dec
inc
cmp
in
cli
cmp
aad
xchg
jle
cmp
in
mov
cmp
push
shl
sbb
cmp
dec
adc
ins
cmp
push
outs
adc
cmc
stos
push
jns
ins
pop
jns
push
fimul
in
cmp
xlat
push
jo
xchg
int3
sub
aas
aad
ins
xlat
mov
stc
dec
(bad)
cmp
in
stos
int
bound
jge
xlat
push
scas
inc
cmp
fs
xor
arpl
cmp
in
cmp
jl
xlat
cmp
call
xchg
push
inc
cmp
loopne
loopne
cmp
dec
out
ins
xlat
mov
test
aas
push
out
ins
xlat
mov
push
in
retf
fwait
in
test
out
xchg
hlt
push
xlat
ret
dec
mov
ret
or
xchg
fsubr
xchg
loopne
cmp
adc
pushf
inc
xor
inc
xchg
clc
sub
aam
jl
pop
mov
sub
inc
int
ins
mov
cmp
in
add
int3
cmp
call
and
push
ins
test
test
ins
pop
jns
pop
(bad)
ins
push
pop
sub
test
jl
sub
test
test
ins
mov
int3
jl
xlat
push
loop
cmp
fs
dec
ins
pop
xlat
push
jge
es
ins
sub
test
les
pop
sti
push
ins
mov
cmp
cmp
pop
out
ins
xlat
push
jl
aas
mov
ins
xlat
ret
or
or
inc
cmp
in
adc
add
arpl
ss
(bad)
ins
ins
add
stos
rol
ins
sub
call
sub
jle
add
mov
push
jge
xlat
mov
sub
pop
inc
ins
xlat
push
cmp
jle
add
mov
aam
xchg
sub
sub
ds
mov
push
mov
es
add
aas
test
mov
ds
mov
push
pushfw
xchg
cmp
ins
xlat
cmp
test
adc
imul
test
cmp
ins
and
cmc
sub
mov
test
les
pop
sti
adc
clc
jl
pop
mov
ret
cmp
pop
daa
mov
ins
aas
sub
mov
xor
cmp
mov
jns
out
or
mov
das
xlat
push
js
xchg
sub
loopne
(bad)
sub
mov
clc
jo
adc
ds
xlat
ret
jns
push
jle
stos
xchg
retf
adc
add
xor
sub
mov
mov
adc
cmp
cli
cmp
mov
jl
sub
bound
push
ins
pop
jns
in
adc
dec
ins
xlat
ret
jns
push
jle
pop
xlat
push
jbe
xchg
retf
xchg
xor
sbb
xlat
cmp
call
and
mov
mov
dec
aam
jl
popa
mov
ins
test
out
xor
sbb
xchg
cli
push
std
xchg
iret
jl
cmp
ins
aas
lods
out
ins
xlat
gs
sub
adc
cmp
out
push
adc
test
sub
ret
pop
sub
sub
sub
rol
pop
test
sub
ret
pop
mov
ins
sub
adc
mov
inc
lgs
xchg
sub
shl
rol
inc
enter
ret
stc
cdq
sub
and
test
call
and
adc
enter
ret
stc
cdq
sub
and
test
dec
das
rol
xor
stc
mov
ret
adc
rcl
das
idiv
das
rol
sub
cmc
rol
adc
movs
das
idiv
das
rol
sub
cmc
fld
adc
prefetch
sub
sub
nop
xchg
sub
sbb
cmp
sahf
mov
mov
sub
push
enter
ins
icebp
call
xchg
cmp
cmp
loopne
rol
xor
cld
jae
jns
jl
pop
test
cmp
icebp
imul
xor
jl
xlat
push
jl
sub
jl
pop
mov
sub
aas
or
ins
xlat
mov
popf
sub
sub
ret
or
aam
out
cmp
sahf
sbb
jl
out
xchg
int
cmp
xchg
sar
mov
popf
sub
sub
sub
pop
in
mov
dec
ds
jge
xlat
mov
popf
sub
sub
ret
jl
sar
mov
cmp
sub
sub
aas
aad
ins
xlat
mov
sub
outs
rcl
xlat
retf
lahf
in
fadd
pop
pop
aad
ins
xlat
cmp
call
xchg
jb
cmp
fs
xor
fcmovnbe
cmp
loopne
les
test
mov
ins
fdivrp
jae
jbe
jl
mov
cmp
loopne
aad
xchg
sub
movs
mov
ins
pop
mov
call
aas
cmp
pop
sub
cmp
mov
pushf
xchg
sub
cmc
scas
out
xchg
mov
push
adc
cmp
xchg
cmp
test
mov
ins
push
jmp
imul
dec
lods
mov
ret
jns
push
jle
out
int3
adc
rol
lgs
popf
sub
and
aad
xchg
sub
lds
sbb
imul
fiadd
xlat
or
stc
cdq
sub
cmp
cmp
lods
mov
std
ds
outs
or
xlat
retf
lahf
in
fadd
cmp
gs
ins
xlat
or
std
sahf
and
ins
pop
mov
sub
aas
and
ins
xlat
xor
xchg
pop
pop
cmp
in
adc
mov
xchg
ret
sbb
in
retf
lahf
in
fadd
xor
mov
out
cmp
sub
pop
dec
je
jmp
jo
push
rcr
sar
ds
push
inc
cmp
mov
cmp
jle
cmp
gs
ret
or
ins
cmc
ins
xlat
xlat
ins
pop
xlat
push
je
sbb
ds
sub
test
mov
ins
outs
inc
sbb
retf
fwait
in
int3
cmc
stos
out
xchg
sbb
cmp
xchg
cmp
jbe
cmp
call
sub
ds
adc
push
xlat
cmp
sub
mov
call
test
js
xlat
retf
fwait
in
shl
stos
mov
cld
add
pop
jns
cmp
xlat
mov
or
xchg
ret
mov
cmp
addr16
jns
cmp
adc
rcr
sub
mov
scas
xor
ds
inc
das
mov
xchg
sar
mov
sub
ins
sbb
aam
xchg
sub
jmp
fcmovnb
jns
push
jle
in
or
and
test
out
xor
mov
pop
jbe
and
ins
xlat
ret
jns
push
jle
in
test
mov
out
pop
jns
test
jns
xchg
sar
mov
sbb
ret
jns
push
jle
in
adc
jge
aas
inc
adc
sti
push
dec
xlat
cmp
lods
xchg
xlat
push
out
shl
(bad)
cmp
mov
fild
std
sahf
gs
jae
or
retf
xor
and
fnsave
xor
mov
add
and
xlat
cmp
push
fmul
sub
fmul
jne
mov
and
push
sti
push
pop
pop
arpl
ss
jmp
in
ins
das
cmp
lahf
sbb
cmp
xchg
sar
mov
jo
ret
xor
xchg
not
jl
push
mov
mov
ins
aad
std
cmp
cmp
xchg
push
jmp
loop
xlat
cmp
out
inc
cmc
jmp
cmp
ins
sub
js
xchg
cmp
stos
lds
mov
mov
sbb
cmp
ins
aas
in
cli
ins
xlat
xor
jns
push
jle
in
retf
fwait
in
shl
mov
ret
push
clc
je
das
adc
mov
push
push
sti
mov
ins
adc
jmp
mov
scas
xor
ins
xlat
outs
sub
pop
dec
je
cli
cmp
push
retf
lahf
push
xlat
cmp
call
xlat
mov
call
and
ret
jns
push
jle
out
jb
adc
inc
jl
push
add
xchg
sub
adc
mov
imul
sub
cmp
mov
sub
mov
xlat
push
jl
push
rol
aas
pop
cli
ins
xlat
ret
jns
push
jle
in
adc
or
mov
xchg
sub
cmp
mov
or
cmp
ins
pop
mov
sub
mov
cmp
in
cmp
dec
ins
xlat
xlat
xchg
sar
mov
pop
das
mov
stos
xchg
add
ins
xlat
cmp
sub
cmp
retf
ret
cmp
les
cmp
call
and
arpl
ss
jmp
in
test
xlat
cmp
mov
sub
xchg
inc
daa
(bad)
pusha
push
jns
test
cmp
in
lods
jl
sbb
jle
ds
out
adc
dec
imul
das
mov
inc
adc
aam
xchg
sub
jmp
test
cs
cmp
das
test
adc
(bad)
hlt
cmp
js
sub
mov
fwait
out
(bad)
cmc
scas
(bad)
(bad)
cmc
cmp
push
jl
sub
jl
pop
mov
sub
movs
cmp
pop
jl
and
cmp
loopne
fdiv
pop
(bad)
ds
outs
cmp
iret
fst
xlat
test
or
mov
mov
jns
ds
jg
xchg
sub
push
sub
and
mov
sub
aam
xchg
sub
cmc
scas
pop
outs
ds
xchg
(bad)
into
jno
cmp
test
ret
push
clc
ins
in
mov
cs
inc
cmp
(bad)
push
cmp
ins
aad
outs
pop
shr
sub
ret
sub
xor
lods
ds
ins
xlat
ret
jns
push
jle
out
(bad)
cmc
scas
out
cmc
cmp
mov
cs
punpckhwd
cmp
jno
xor
test
rol
pop
aad
ins
xlat
cmp
sub
mov
pop
adc
mov
cs
fstp
stos
add
das
and
xlat
outs
xchg
enter
xor
(bad)
hlt
ds
mov
je
popa
jg
sub
stos
enter
sti
cmp
adc
ins
xlat
cmp
xchg
outs
xchg
sbb
ret
xor
and
mov
jb
ret
cmp
xchg
rol
adc
sub
mov
jl
test
xor
pop
outs
or
aas
jg
xchg
sub
hlt
mov
jle
out
lods
add
sbb
mov
jl
mov
cmp
xchg
jge
xor
sub
gs
mov
jl
sar
mov
ins
mov
dec
jmp
mov
ins
das
mov
out
test
ret
or
popa
jmp
mov
je
mov
cmp
out
test
ret
or
jge
ins
xlat
mov
inc
das
mov
out
imul
ins
xlat
cmp
dec
push
cmp
xchg
sar
mov
imul
test
push
xlat
cmp
mov
and
arpl
movs
adc
cmc
mov
mov
gs
mov
mov
xchg
sub
push
pop
int3
dec
popf
pop
cli
sbb
xlat
ds
pusha
jnp
cmp
xlat
mov
or
cli
ins
xlat
cmp
sub
cmp
in
cmp
jns
push
jle
pop
(bad)
mov
push
xchg
or
lods
(bad)
ins
xlat
xor
retf
sub
push
and
aas
inc
mov
out
cmp
adc
jl
pop
int3
dec
popf
pop
cli
push
push
adc
cld
or
cmp
xchg
cmp
popf
dec
cmc
stos
fmul
or
xchg
leave
adc
dec
jl
and
cmc
sub
mov
pop
pop
jl
adc
rol
xlat
cmp
push
fmul
or
(bad)
leave
adc
shr
icebp
sub
ins
cmc
xchg
shr
sbb
aam
in
xlat
cmp
sub
mov
cmc
popf
(bad)
int3
cmc
stos
sub
js
xchg
cmp
ficom
jl
xlat
ins
xchg
bound
jl
adc
retf
mov
ret
retf
cmc
xlat
cmp
pop
lea
shl
ret
sub
sub
lods
cmp
cmc
popf
and
cmc
sub
mov
xor
mov
out
cmp
das
cmp
dec
cmc
xchg
inc
cmc
stos
outs
in
ins
xlat
retf
fwait
in
(bad)
cmc
stos
pop
dec
je
aas
xor
in
jl
push
push
sti
and
cmp
test
mov
adc
inc
cmp
mov
js
ins
adc
ins
cmp
sub
mov
call
jl
aad
mov
xchg
cmp
sbb
aam
in
xlat
cmp
test
adc
cmp
js
xchg
cmp
xchg
(bad)
(bad)
cmc
stos
adc
and
xchg
mov
cmp
ins
adc
jmp
aas
(bad)
xlat
test
das
xlat
cmp
mov
mov
adc
sub
mov
or
dec
jo
aas
push
mov
sub
test
mov
push
xchg
pop
sti
sub
mov
mov
xor
cmp
in
mov
sub
xchg
adc
pop
sti
sub
ds
push
sbb
pop
xlat
push
jge
aad
jl
xlat
cmp
imul
nop
outs
xlat
mov
pop
das
mov
pop
xlat
aam
in
xlat
cmp
sub
xor
push
xchg
clc
in
xlat
cmp
scas
mov
sub
cmp
rol
ins
xlat
push
jns
loop
les
xlat
aam
in
xlat
cmp
lods
mov
std
ds
aad
test
pop
sti
dec
lods
xchg
aad
ins
xlat
cmp
push
pop
les
in
cli
jns
push
jle
ins
pop
les
pop
sti
sbb
cmp
jae
xchg
ret
jae
jl
push
add
pop
jl
ins
mov
ret
xchg
ret
(bad)
cmp
adc
mov
jl
mov
mov
ins
xlat
aad
ins
xlat
cmp
xchg
(bad)
(bad)
cmc
stos
adc
jge
cmp
loopne
aam
bound
add
jl
xlat
mov
push
xchg
dec
imul
jl
pop
cli
std
call
sbb
ret
jns
push
jle
bound
add
jl
xlat
mov
push
fmul
fsubr
cmp
imul
xor
sub
push
mov
loopne
cmp
cmp
pop
xlat
mov
push
xchg
xchg
cmp
ins
mov
cmp
in
mov
pop
das
mov
ds
test
ins
xlat
aad
xchg
sub
and
mov
mov
mov
cmp
mov
gs
test
add
cmp
mov
test
adc
jns
push
jle
in
and
ins
xlat
pop
imul
fistp
rcl
jl
shl
ins
mov
push
jl
xchg
cmp
or
jl
adc
sub
ds
push
rcl
xlat
cmp
sub
ins
push
ins
mov
jl
pop
xlat
push
jl
icebp
mov
cmc
xchg
inc
cmc
stos
adc
sub
ds
pop
les
pop
sti
push
ins
aas
in
ins
xlat
gs
push
(bad)
ds
xlat
dec
xchg
xchg
sar
mov
call
jae
shl
movs
adc
cmc
mov
xor
mov
pop
mov
xchg
shr
mov
sub
cmp
pushf
mov
jl
push
sbb
loop
cmp
out
repnz
jecxz
xlat
cmp
dec
aaa
inc
cmp
adc
xlat
cmp
aad
push
jl
and
cmc
sub
mov
stos
shl
cli
sub
cmp
mov
sub
fisubr
jge
bound
jl
xchg
cmp
lods
fdiv
inc
xchg
xlat
cmp
bound
jle
xlat
ret
pop
call
push
xor
loop
cmp
test
cmp
lods
xchg
cmp
lods
push
add
cld
xor
aaa
cmp
xchg
enter
mov
jle
xlat
mov
jl
and
inc
bound
jle
xlat
retf
push
jge
ins
mov
jge
ins
rcr
jp
rcr
lea
movs
cmp
test
ds
sub
fdiv
xchg
cmp
imul
jl
shr
jns
pop
jge
jge
cmp
ds
ins
xlat
mov
jl
fisubr
fsubr
jge
iret
cmp
ins
or
stc
pop
jge
imul
mov
ins
pop
mov
in
fisubr
xchg
jg
ret
sbb
xor
push
cld
xchg
xchg
aad
jl
pop
or
jno
pop
jge
gs
cli
sub
sahf
aam
xchg
cmp
mov
ret
sbb
cmp
xchg
mov
pop
adc
jno
pop
jge
ins
adc
add
xchg
cmp
ins
xlat
cmp
xlat
sub
sbb
or
cld
xchg
int
cmp
in
cmp
jno
pop
jge
outs
adc
movs
jmp
cmp
ins
xlat
cmp
pushf
in
jl
ds
xchg
sub
jns
pop
jle
xchg
rcr
xchg
iret
xchg
in
fisubr
xchg
addr16
cmp
int3
scas
mov
ins
(bad)
cmp
repnz
cmp
mov
ss
popf
pop
std
cld
pusha
inc
mov
ins
xchg
aad
ins
xlat
cmp
adc
pop
ds
jae
cmp
ins
xlat
popf
movs
jmp
cmp
push
ds
jl
xlat
popf
add
xchg
cmp
push
mov
ret
jns
pop
jle
out
rcr
xchg
iret
xlat
cmp
in
ds
ins
xlat
mov
jl
lods
jl
xlat
or
jl
push
xor
loop
cmp
in
push
rol
ins
xlat
mov
sub
(bad)
ja
jl
popa
cmp
int
cmp
lods
stos
call
repz
inc
in
xlat
cmp
adc
cmp
sub
adc
jl
fisubr
xchg
push
sub
call
pop
jbe
imul
cmp
jl
inc
jns
dec
jge
aad
push
ins
and
cmc
sub
mov
in
fisubr
xchg
pusha
out
xchg
xor
cmp
in
add
ins
xlat
ret
jns
pop
jle
fwait
shr
jae
adc
ins
pop
int3
cmp
xlat
sahf
mov
movs
(bad)
hlt
cmc
lods
fmul
jl
pop
cmp
ins
pop
jns
bound
mov
(bad)
shl
call
clc
in
cmp
in
stos
retf
cmp
rol
jns
stos
jge
in
es
or
xor
sub
add
ins
xlat
cmp
data16
cli
sub
cmp
jl
jmp
js
inc
mov
outs
cld
adc
cmp
and
adc
mov
pop
in
fisubr
cmc
movs
(bad)
hlt
cmc
lods
pop
int3
cmp
xlat
sahf
or
xchg
cmp
fcmovnbe
dec
imul
mov
mov
stos
retf
fidivr
out
rcr
add
cmp
pushf
sub
sbb
iret
mov
sub
adc
cmp
push
jge
xchg
rcl
add
popf
pushf
adc
inc
cmp
movs
and
cmc
sub
mov
out
repnz
sub
cmp
jne
int3
cmp
ret
sub
mov
in
sub
cmp
push
jbe
jecxz
xlat
add
jl
or
jns
pop
jle
in
adc
cmp
xchg
mov
pop
pop
mov
xor
sub
dec
nop
inc
std
stos
jle
jl
sub
call
hlt
adc
test
cli
adc
adc
cmp
inc
add
lahf
ror
cmp
add
ins
mov
push
push
stos
cmp
into
inc
mov
ins
mov
push
ds
cmp
into
push
mov
ins
mov
push
cs
cmp
into
ja
cmp
mov
and
push
xchg
stos
xchg
cmp
test
inc
jl
je
fsubr
xlat
arpl
movs
adc
cmc
mov
cld
ins
xlat
cmp
cmp
cmp
mov
fcomip
sub
mov
das
xlat
push
push
sub
cmp
ds
adc
jne
cmp
in
retf
lahf
in
test
scas
push
pop
nop
ins
pop
jns
in
int3
mov
ins
xlat
test
or
cmp
mov
in
in
mov
sbb
pop
jle
out
mov
jl
unpckhps
xlat
sti
cmp
adc
ins
xlat
cmp
in
cmp
aas
ins
xlat
mov
imul
fadd
ins
adc
outs
xlat
cmp
in
retf
lahf
in
mov
scas
adc
ins
xlat
cmp
out
mov
jl
bswap
lahf
in
mov
scas
pop
inc
shl
in
lds
cmp
sahf
jb
cmp
sar
sub
ins
cmp
cmp
ins
xlat
retf
lahf
in
mov
loopne
mov
ins
push
ins
mov
cmp
adc
cmp
sub
sbb
mov
fld
inc
jl
sub
call
ins
sub
pop
xlat
push
jl
rcl
xchg
mov
cmp
in
adc
cmp
mov
jmp
jns
pop
jle
loopne
aam
xchg
mov
ins
cmp
cmp
xchg
test
mov
cld
in
arpl
ss
jmp
in
mov
adc
pop
pop
in
mov
cmp
sub
mov
popf
pop
jno
in
(bad)
dec
and
in
aam
imul
jns
cmp
xlat
mov
cdq
xchg
xchg
mov
mov
mov
pop
jns
in
fmul
mov
jns
movs
adc
cmc
mov
addr16
xchg
(bad)
(bad)
cmc
stos
sub
call
sbb
push
adc
mov
jl
mov
sub
xor
sub
mov
ret
jns
pop
jle
pop
sub
retf
add
pop
fmul
sub
or
mov
pop
aad
sub
or
mov
pop
aam
sub
or
mov
pop
rol
sub
jae
fnstsw
jl
pop
jns
loopne
aas
jns
ret
add
jns
cli
cmp
sub
retf
into
mov
xlat
xor
jns
add
jl
xlat
mov
daa
fmul
jae
pop
cmp
ins
pop
(bad)
inc
rol
out
cmp
sub
mov
aam
bound
jp
aas
cmp
ins
mov
ret
pop
lods
fdiv
ds
xchg
cmp
xlat
cmp
fild
mov
js
cmc
ds
test
scas
cmp
in
(bad)
jmp
pop
push
inc
xchg
(bad)
inc
pop
jns
loopne
aas
jns
das
mov
mov
ret
cmp
xlat
cmp
dec
fmul
push
movs
xchg
cmp
sbb
mov
dec
xchg
sub
sub
ds
push
add
mov
mov
aaa
in
mov
jp
mov
aam
in
jmp
js
loop
test
aas
cmp
sar
inc
add
xlat
cmp
sbb
mov
out
aas
cmp
push
rcr
or
in
sub
mov
push
sar
jnp
shr
jge
xlat
cmp
push
jmp
les
mov
cld
push
sar
or
(bad)
inc
aad
cmp
das
mov
js
jmp
push
ds
ins
mov
mov
jge
push
inc
movsx
xchg
sub
sub
cmp
push
aam
out
(bad)
cmc
jns
cmp
inc
push
(bad)
dec
cs
je
push
sar
inc
(bad)
dec
inc
in
mov
jp
mov
aam
bound
jp
jmp
ins
mov
cmp
sbb
aam
sbb
cmp
cmp
mov
jle
cmp
cmc
imul
jnp
xchg
xlat
cmp
mov
and
mov
mov
sbb
cmp
lods
xchg
cmp
sbb
xlat
pusha
pop
sub
jnp
jmp
jl
fidivr
xchg
aas
aas
jl
mov
aas
jl
movs
cs
xchg
xor
aam
jl
adc
test
cmp
ins
push
cli
jbe
shr
retf
std
sahf
outs
pop
add
stos
jge
pop
or
test
xchg
aaa
and
xor
call
fcmovnbe
and
xlat
cmp
sbb
add
dec
push
pop
sub
cmc
mov
jns
out
cmp
jns
ret
cmp
xlat
add
xchg
dec
pop
cmp
shl
icebp
sub
cmp
test
and
mov
ins
or
enter
cmp
ins
outs
retf
sub
mov
jmp
or
cmp
xchg
imul
xchg
loopne
and
add
jge
cmp
lods
xchg
cmp
movs
sub
jns
pop
mov
test
jmp
bound
ins
lods
xor
aam
das
xlat
aam
xchg
sub
jmp
push
jmp
in
test
dec
xlat
cmp
push
mov
imul
fbld
(bad)
mov
cmp
in
movs
cmp
xchg
(bad)
cli
stc
sahf
cmp
sub
call
shl
adc
mov
cld
push
ror
mov
xlat
cmp
lahf
mov
ret
jl
les
retf
rol
popf
pop
jle
outs
mov
mov
sahf
cmp
and
xchg
mov
bound
jno
pop
jle
cmp
mov
jmp
in
test
jae
inc
iret
xchg
xchg
sub
jae
xor
pop
jle
cmp
fidivr
inc
cwde
mov
js
mov
or
mov
leave
or
and
sub
and
adc
rol
in
jmp
adc
push
jno
xchg
sub
stc
sahf
cmp
sub
jmp
lods
xor
int3
add
cmp
jmp
fmul
sub
cli
sub
mov
mov
shr
ror
mov
xchg
pop
cs
and
in
xchg
sub
jns
pop
jle
out
call
scas
lods
cmp
mov
push
pop
mov
dec
xchg
cmp
adc
(bad)
cmp
ds
popf
or
mov
out
and
enter
adc
cmp
push
dec
enter
dec
stos
loopne
mov
xchg
mov
test
das
xlat
mov
sub
jl
xlat
push
adc
rol
mov
ret
xchg
jp
ret
sub
xor
sub
xor
fldln2
or
sub
cld
mov
ret
xchg
das
out
cmc
mov
(bad)
jle
xor
mov
xlat
push
fidivr
arpl
or
sub
jl
or
jl
fdiv
jl
pop
mov
xchg
and
jl
xlat
cmp
xchg
xlat
int3
jl
mov
aam
xchg
sub
and
xchg
sub
ins
xlat
mov
loope
ret
add
jl
out
mov
jae
mov
adc
cmp
fmul
jecxz
xchg
aas
sbb
cmp
xlat
cmp
fild
xchg
xchg
sub
sahf
outs
pop
sub
stos
jge
in
enter
mov
sub
mov
aad
movs
lods
ds
xchg
pop
xor
pop
sub
and
adc
std
xchg
outs
push
fnstsw
call
xchg
push
enter
mov
sub
jl
pusha
ret
jns
pop
jle
in
push
mov
ss
aam
push
xlat
cmp
call
pop
(bad)
jg
rol
jl
xlat
mov
icebp
or
sub
inc
jg
pop
mov
imul
ja
adc
ret
jmp
push
test
xchg
sub
and
test
xchg
sub
jle
push
lods
mov
ror
and
call
stc
mov
ret
add
mov
aad
ret
cmp
ret
xchg
fisub
call
stc
ror
ret
sbb
mov
test
push
mov
mov
ret
sub
fbld
scas
mov
push
jl
inc
mov
popa
test
sub
jge
sub
xchg
imul
cmp
lods
xchg
cmp
fild
xchg
xchg
sub
sahf
outs
pop
mov
mov
ret
push
loopne
jecxz
xchg
pop
xor
push
jge
bound
pop
aad
push
ins
pop
test
adc
(bad)
cmp
aas
aas
or
stc
fisttp
ret
and
or
stos
xor
bound
jge
xlat
mov
cdq
cmp
and
inc
test
cmp
sbb
mov
clc
push
(bad)
cmp
test
cmp
mov
sar
xchg
xchg
pop
js
imul
mov
xchg
xlat
mov
sub
cwde
mov
ret
cmc
popf
lahf
mov
cmc
popf
push
aam
in
out
cmp
jae
int3
inc
mov
aam
in
out
cmp
addr16
int3
inc
mov
ret
jns
pop
jle
bound
fbstp
aad
enter
adc
ret
jge
popa
cmp
xlat
cmp
sbb
mov
pop
(bad)
cmp
ins
push
aam
loopne
or
in
fsub
in
xlat
jae
push
enter
cmp
imul
jnp
shl
jecxz
xchg
movs
aad
shl
(bad)
xor
clc
je
adc
sub
mov
ret
mov
push
(bad)
cmp
ins
xlat
dec
push
in
jmp
jle
xlat
cmp
sbb
mov
jl
xlat
dec
push
ins
xlat
cmp
sbb
mov
jl
xlat
dec
jg
cmp
jae
push
lahf
mov
adc
add
dec
pusha
bound
pop
(bad)
loopne
xchg
sub
leave
mov
mov
clc
jo
push
mov
das
push
cdq
mov
inc
enter
std
sahf
outs
pop
in
test
std
popf
outs
aam
and
sub
mov
cdq
cmp
sub
enter
cmp
ins
xlat
dec
lods
xchg
shr
push
xchg
sub
cld
call
(bad)
xor
call
mov
cmp
movs
xchg
cmp
bound
xchg
push
jmp
in
ins
sub
pop
jns
or
je
sbb
das
sbb
cmp
push
fmul
push
sbb
cmp
in
shl
xor
lods
ret
mov
cmp
stc
pop
jle
bound
je
pop
sub
push
shr
or
cmp
cmp
cld
push
sbb
retf
fwait
in
(bad)
cmc
stos
mov
mov
cmp
mov
cmp
mov
inc
inc
xlat
cmp
mov
test
adc
jns
pop
jle
bound
je
pop
sub
sub
aam
add
cmp
sub
ret
jns
pop
jle
bound
je
pop
sub
push
shr
sub
cmp
jns
mov
gs
cmp
xchg
cmp
ins
xlat
cmp
(bad)
fmul
push
sbb
cmp
mov
xor
out
xor
in
xor
ds
pop
in
retf
fwait
in
(bad)
cmc
stos
sub
call
push
shl
ds
xlat
dec
jnp
aad
jl
cmp
cmc
xchg
(bad)
(bad)
cmc
stos
mov
cmp
lahf
nop
call
pop
pushf
ds
xlat
mov
ins
das
mov
add
mov
jge
test
clc
jo
xchg
shr
push
jl
loope
cmp
mov
add
fs
cmp
loopne
cmp
call
push
ins
aas
leave
push
ins
xlat
gs
push
pop
pushf
ds
xlat
dec
lahf
xchg
shr
retf
pushf
ds
mov
mov
or
pusha
and
push
cli
xor
cmp
push
out
xchg
jmp
ret
cmp
ins
and
cmc
sub
mov
cmp
out
jmp
push
sbb
jle
in
retf
call
sub
retf
fwait
in
enter
sub
sub
aam
add
cmp
jns
cmp
call
jns
mov
push
jl
outs
sub
retf
fwait
in
sar
dec
shr
or
cmp
popf
out
cmc
stos
outs
sub
retf
fwait
in
aam
dec
shr
sub
cmp
out
sub
out
movs
ret
adc
push
jl
(bad)
dec
cmp
ins
xlat
mov
pop
and
cmp
pop
shl
ds
aas
xchg
pop
ins
xlat
mov
jl
push
retf
xlat
cmp
ins
sub
fs
cmp
into
mov
and
das
xlat
aam
add
cmp
push
mov
scas
xor
cmp
je
xchg
(bad)
(bad)
cmc
stos
push
retf
push
sbb
cmp
push
mov
ds
mov
shl
ds
pop
les
pop
sti
sbb
fmul
jl
aas
pop
pop
ins
xlat
mov
or
xchg
out
mov
jl
adc
inc
ins
xlat
push
ins
loopne
shr
loop
mov
xlat
aam
push
xlat
cmp
xchg
xlat
cmp
xchg
loop
mov
xlat
aam
push
xlat
cmp
sub
xor
jns
ja
jl
outs
ror
ins
xlat
retf
fwait
in
loopne
stos
aas
pop
adc
cmp
push
(bad)
sti
cmp
push
shl
xlat
cmp
push
pop
jns
cmp
sub
js
xchg
cmp
idiv
mov
sbb
cmp
jae
xchg
ret
ret
mov
cmp
out
jmp
push
sbb
mov
jl
sub
bound
sub
pop
add
xchg
cmp
out
stos
ret
(bad)
push
push
mov
retf
fwait
in
loopne
stos
cmp
jae
xchg
ret
ret
mov
push
outs
out
push
ins
xlat
retf
fwait
in
loopne
stos
mov
cmp
add
sub
xchg
cmp
push
pop
jns
cmp
xchg
ret
ret
mov
push
xchg
xchg
cmp
ins
mov
cmp
cmp
xlat
aad
xchg
sub
std
adc
jl
mov
movs
adc
cmc
mov
sub
inc
mov
pop
jl
sub
call
arpl
dec
jo
xchg
cmps
sub
lea
push
clc
jo
add
jl
and
cmc
sub
mov
xchg
shr
xor
push
hlt
sub
lds
and
ins
pop
les
pop
sti
push
ins
mov
mov
test
mov
push
sub
jl
mov
ret
add
fs
mov
dec
xchg
inc
(bad)
sub
jmp
sar
jmp
xlat
cmp
xchg
and
cmc
sub
mov
xchg
xlat
cmp
js
mov
xchg
pop
push
jo
ret
sub
sub
xor
sub
mov
std
stos
arpl
ins
mov
jle
cmp
ffree
xchg
sub
sbb
add
cmp
xlat
cmp
js
mov
xchg
pop
push
jo
ret
sub
sub
xor
sub
mov
cmc
xchg
inc
cmc
stos
mov
jle
cmp
mov
mov
in
ret
xchg
ret
rcl
or
ret
xor
xchg
cmp
ins
mov
push
push
ins
ret
sub
xor
scas
mov
sub
fmul
sub
jns
das
add
hlt
add
inc
sub
cmp
ficom
cmp
ficom
cmp
sbb
mov
pop
(bad)
ins
xchg
scas
mov
jns
in
retf
fwait
in
mov
stos
push
inc
in
ins
mov
jns
cmp
ins
push
jl
push
clc
jo
pusha
jns
stos
sar
jl
das
adc
jns
pop
jle
cmp
and
das
cmp
cmps
sbb
test
jle
les
pop
sti
sub
ds
pop
jg
out
mov
xor
mov
aad
cmp
aas
adc
cmp
lods
cmps
mov
call
and
ret
jns
pop
jle
in
or
mov
xchg
xlat
cmp
mov
fcomip
call
pop
push
shl
xchg
xchg
cmp
xlat
cmp
sahf
jb
mov
xchg
xlat
cmp
call
xchg
ins
pop
in
mov
(bad)
dec
cmp
adc
je
xchg
adc
jge
xlat
cmp
dec
cmps
cmp
call
and
mov
xchg
sub
cmp
mov
sub
sbb
test
das
xlat
push
jl
test
push
jl
sub
jl
pop
mov
sub
xchg
xor
pop
aas
push
sbb
mov
xchg
sub
add
mov
call
das
ret
adc
xor
ficom
les
test
jl
pop
in
mov
(bad)
call
das
ret
adc
cmp
out
in
xchg
sub
cmp
cmp
arpl
jo
ins
xlat
dec
jnp
xchg
sbb
sub
sub
xor
sub
das
ret
xor
jl
shr
cmp
inc
js
fdivr
call
pop
mov
xchg
sub
jl
push
(bad)
cmp
xchg
pop
mov
les
cmp
call
and
lods
xchg
(bad)
les
les
cmp
ret
sub
add
clc
jo
push
les
push
xlat
aad
imul
into
adc
cmp
ins
pop
mov
xchg
sub
jmp
(bad)
cmp
xchg
pop
mov
cmc
mov
in
scas
sub
icebp
call
xchg
cmp
mov
test
rol
adc
ret
cmp
jae
xchg
ret
aam
test
ret
xchg
sub
xchg
mov
cmp
fmul
adc
in
adc
push
ins
xlat
xor
call
cld
mov
xor
pop
mov
xchg
pushf
aam
jl
shr
inc
add
fbstp
cmc
fadd
xchg
pop
(bad)
std
xchg
pop
cmp
mov
imul
fbstp
retf
sub
and
xor
jl
(bad)
movs
in
aad
xchg
sub
xchg
call
cmc
sub
xor
call
fdivrp
jae
ins
cmp
ins
mov
cmp
fmul
jns
sub
and
cmp
xchg
cs
sbb
xchg
ret
das
ret
adc
xor
sti
cmp
fmul
jns
sub
and
cmp
xchg
xchg
ret
xchg
ret
inc
retf
sub
mov
xchg
xor
sub
xor
clc
and
adc
mov
and
xor
xchg
xchg
ret
xchg
ret
das
ret
adc
retf
sub
stc
xchg
sub
and
les
call
and
pop
mov
xchg
xlat
cmp
call
adc
sub
adc
daa
jle
loopne
ret
adc
ret
sub
xor
sub
sbb
mov
sub
xchg
push
cmp
xchg
shr
stc
sahf
sub
sub
sahf
sub
cmp
mov
xchg
sub
cmp
mov
sub
clc
int
cmp
bound
(bad)
xchg
sub
sub
jo
ds
pop
mov
sub
imul
jl
mov
retf
sub
sub
xlat
pop
bound
and
mov
(bad)
in
idiv
fcmovb
adc
ret
adc
fmul
sub
adc
xor
call
aam
test
push
retf
sub
cmp
out
cmp
call
and
mov
sub
xchg
sub
jns
pop
jle
stos
push
iret
adc
mov
ja
pusha
mov
jne
test
ret
adc
ret
push
xchg
xchg
and
adc
cmp
call
xchg
mov
sub
jmp
pop
inc
adc
sbb
fcomip
call
pop
push
xchg
ret
sub
bound
jl
xlat
xor
call
xchg
ins
adc
daa
jle
loopne
ret
adc
ret
sub
xor
stos
mov
rcr
bnd
xlat
xor
call
jmp
out
les
call
fmul
sub
ret
jl
pusha
jns
loopne
cmp
movs
sub
(bad)
cmp
xchg
pop
sti
jmp
stos
ret
jmp
fisubr
adc
ret
adc
cmp
test
lgs
xchg
sub
jae
inc
enter
xor
and
adc
jge
pop
mov
jae
push
enter
pop
stc
xchg
sub
sbb
xor
call
adc
sub
mov
jge
or
jl
and
cmc
call
pop
call
in
push
xchg
outs
mov
daa
jle
loopne
ret
adc
ret
sub
xor
stos
mov
rcr
mov
retf
call
jmp
bound
mov
rol
adc
ret
adc
add
mov
ret
adc
cmp
call
xchg
ins
icebp
call
xchg
cmp
push
jge
dec
int3
ds
pop
mov
sub
jmp
clc
fs
pop
cmc
adc
test
cmp
mov
lock
sub
mov
xchg
jmp
or
jns
in
cmp
pop
ins
xlat
xlat
push
pusha
jns
out
cmp
sub
hlt
stc
rol
adc
xor
sub
mov
xchg
sub
sub
in
add
daa
jle
loopne
ret
adc
ret
sub
xor
stos
mov
add
pop
push
xchg
ret
sub
sbb
into
ds
fmul
jns
sub
cmp
mov
jmp
and
adc
mov
cmc
scas
cmp
jae
xchg
ret
inc
enter
mov
ins
push
mov
pusha
sub
adc
ret
sub
bound
and
les
mov
mov
mov
xchg
sub
cmp
mov
sbb
stos
ret
xchg
call
and
xor
sub
add
push
mov
cmp
and
jns
loopne
cmp
test
mov
in
mov
rcr
cwde
inc
ins
xlat
xlat
pop
bound
and
mov
(bad)
in
idiv
fcmovb
adc
ret
adc
mov
xchg
pop
test
ds
pop
inc
lods
loopne
ret
adc
mov
test
push
les
stc
pop
jle
pop
fnstenv
cmp
ret
sub
jmp
clc
jo
bswap
lahf
in
mov
stc
jmp
adc
stc
mov
mov
jle
loopne
ret
adc
ret
sub
xor
sub
sbb
push
jge
jne
ds
pop
mov
sub
xchg
lea
stos
push
cmp
(bad)
push
call
sub
adc
ret
jmp
xlat
cmp
adc
sub
jge
xlat
cmp
fdivr
ret
adc
ret
sub
push
loopne
xchg
sub
sub
adc
and
xchg
sub
xchg
xchg
sub
call
das
ret
push
adc
xlat
cmp
call
xchg
or
les
xlat
mov
sub
cmp
sar
ret
adc
cmp
adc
xor
mov
adc
imul
fbstp
retf
sub
daa
ret
xor
jl
unpckhps
pop
jle
out
push
adc
cmp
ins
mov
mov
cmp
sub
test
and
cmc
call
pop
push
loopne
mov
ins
mov
ret
adc
ret
cld
push
out
or
ss
call
xchg
leave
test
mov
jl
push
clc
jo
pop
loope
xchg
sub
inc
ins
xlat
dec
test
adc
test
(bad)
in
scas
pop
mov
xchg
sub
jmp
(bad)
cmp
xchg
pop
mov
fsubr
ret
adc
hlt
adc
jle
loopne
loope
xchg
sub
cli
mov
jl
adc
push
mov
ds
pop
mov
out
xor
sub
mov
inc
lgs
xchg
sub
jle
fmul
cmp
mov
or
cmps
xchg
sub
imul
aas
ret
adc
ret
push
jge
mov
sub
xchg
xor
sbb
xlat
cmp
call
push
add
xlat
cmp
call
xchg
or
pop
jp
xlat
mov
imul
cmp
push
pop
jns
bound
jo
aas
xor
mov
mov
bswap
lahf
in
mov
stc
in
sub
and
mov
sub
sub
ds
pop
in
mov
push
loopne
mov
ins
mov
mov
mov
mov
sub
mov
shr
mov
mov
push
in
jl
mov
xor
mov
call
xchg
xchg
mov
jl
pop
xlat
push
jl
rcr
xchg
pop
xor
cmp
sar
ret
adc
ret
adc
mov
inc
lgs
xchg
sub
inc
ins
xlat
dec
test
xlat
ins
icebp
shl
xchg
sub
xchg
scas
mov
in
mov
shr
mov
sub
xchg
call
jl
fdivr
push
or
inc
push
ins
xlat
mov
std
sahf
push
push
jl
mov
ret
adc
ret
sub
xchg
xor
sbb
xlat
cmp
call
sub
call
xchg
sub
stc
shl
ret
add
cvtdq2ps
xor
ret
and
add
aam
(bad)
cmp
xchg
and
push
jmp
in
test
sar
jbe
cmp
sub
in
adc
xor
ret
jns
pop
jle
in
or
fstp
push
cdq
mov
jb
adc
pop
jl
mov
stc
xchg
sub
sub
cmp
pop
jns
cmp
push
mov
sub
jge
jl
adc
jl
shr
jl
jge
jl
mov
add
pop
mov
sub
xchg
xor
sbb
xlat
cmp
sub
aam
aaa
xlat
cmp
stos
pop
mov
jne
mov
ret
adc
ret
or
jns
bound
jo
aas
bound
sub
mov
jl
jns
jl
sub
call
adc
cmp
gs
jns
out
out
cmp
inc
pop
jns
bound
jo
aas
adc
sub
mov
jl
test
(bad)
sub
retf
lahf
in
fadd
out
stos
rol
lock
sbb
mov
jl
fstp
jl
push
jl
xchg
sub
cmp
xchg
popf
sub
int3
adc
jns
out
int3
adc
cmp
lods
xchg
cmp
ins
aas
and
ins
xlat
mov
jl
pusha
mov
jne
fdiv
dec
xchg
cmp
imul
jmp
push
ds
xchg
stos
shl
mov
fcomip
call
pop
dec
cmp
imul
jmp
push
sub
adc
out
sti
add
fmul
and
cmp
xchg
xchg
sub
hlt
jmp
sub
adc
inc
popf
bound
adc
mov
xchg
mov
stc
xchg
sub
sub
(bad)
jl
xchg
sar
sub
push
push
or
add
pop
mov
sub
pop
xchg
adc
ret
jl
mov
cmp
pop
(bad)
push
fistp
sub
adc
outs
cld
xor
xlat
retf
lahf
in
fadd
pop
(bad)
push
setge
ret
adc
iret
mov
sub
ret
sub
sub
ret
jl
mov
rol
pusha
mov
cmc
xchg
(bad)
(bad)
imul
ret
nop
sub
xchg
nop
xor
call
aam
adc
bound
adc
pop
cmc
call
ds
adc
prefetch
pop
mov
sub
push
rol
mov
xchg
mov
ret
adc
cmp
push
mov
jle
loopne
rol
jge
sub
and
xchg
sub
sbb
mov
mov
rol
mov
ret
adc
(bad)
cmp
in
fadd
xchg
mov
cmp
push
in
jl
mov
stc
and
gs
rcr
bound
jo
aas
mov
ins
aas
xor
jge
mov
ds
pop
mov
sub
icebp
xchg
adc
mov
jl
sub
sub
imul
ret
out
js
out
inc
jp
in
inc
adc
mov
xchg
mov
pop
sub
adc
add
cmp
rol
adc
sub
dec
mov
push
jmp
sub
mov
in
enter
push
jge
jo
ds
pop
mov
sub
jge
adc
or
cmp
jl
push
ret
sub
jle
sub
and
call
push
ret
adc
mov
idiv
sub
xchg
imul
xchg
ja
mov
idiv
sub
jmp
ins
pop
mov
test
inc
cld
ds
cmp
cmc
mov
fcomip
call
pop
push
sub
cmp
add
ret
or
sub
sub
xchg
xor
pop
aas
xchg
sub
mov
test
rol
aas
fldcw
ins
xlat
add
xlat
cmp
addr16
cmp
xor
cmc
imul
sub
add
imul
cld
ds
mov
lods
push
xlat
cmp
mov
mov
scas
mov
movs
adc
cmc
mov
imul
(bad)
pop
cmc
sub
sbb
pusha
std
stos
inc
inc
jl
sub
call
in
stos
sub
ins
mov
jle
cmp
inc
and
mov
dec
xchg
pop
sti
sbb
stos
sub
ins
mov
jle
cmp
pop
and
mov
jmp
(bad)
cmp
xchg
mov
popa
je
in
xchg
cmp
cmp
stos
addr16
jl
mov
xor
cmc
mov
push
cmp
pop
std
cmp
jl
push
cmp
lods
xchg
cmp
ins
xlat
cmp
jo
sar
ins
pop
int3
mov
sub
cmc
stos
aas
aad
ins
xlat
xchg
in
retf
xchg
lods
sub
adc
cmc
stos
push
sti
cmp
xchg
sub
and
cmp
cmp
popa
pusha
jl
fmul
xor
(bad)
ins
cmc
lods
and
mov
jb
div
mov
adc
ret
adc
mov
xchg
jmp
or
sub
jl
lods
pusha
jl
pop
dec
stos
push
cmp
call
in
mov
mov
xchg
sub
gs
add
pop
mov
sub
lea
ins
mov
ds
ins
mov
cmp
loopne
mov
in
enter
ret
or
std
cmps
das
xlat
ins
xchg
inc
mov
in
cmp
jl
push
int3
adc
out
ds
sub
xchg
cli
mov
xchg
(bad)
enter
aam
cmp
cmp
push
test
xchg
cmp
call
xchg
cwde
xlat
cmp
stos
or
ins
pop
mov
sub
adc
ds
pop
mov
sub
xlat
cmp
in
aas
js
ins
xlat
ret
jns
pop
jle
add
mov
mov
xchg
sub
cmp
aam
ins
xlat
cmp
popf
out
cmc
stos
test
xchg
cmp
or
jle
add
aas
xor
ins
xlat
mov
daa
movs
adc
cmc
mov
sub
add
or
stos
call
cmp
lods
xchg
cmp
xchg
(bad)
(bad)
cmc
stos
push
pop
sub
test
mov
xor
push
jl
xlat
ret
or
dec
je
xchg
data16
pop
les
pop
sti
cmc
pushf
push
hlt
sub
vmovapd
ret
or
xlat
ret
or
dec
add
les
out
enter
dec
add
bound
movs
adc
cmc
mov
mov
gs
test
push
xlat
cmp
mov
and
test
xlat
cmp
mov
test
adc
xlat
cmp
pop
xlat
aam
cmp
cmp
pushf
push
hlt
sub
(bad)
cmp
cld
push
jmp
js
ins
xlat
xlat
jp
push
ret
jge
cmp
ss
jmp
in
ins
sub
add
adc
dec
xchg
pop
sti
push
ins
mov
push
js
xlat
push
jl
xlat
cmp
lods
sub
test
imul
call
pop
xlat
inc
in
cmp
jle
xlat
push
jl
aas
imul
loopne
shr
sub
sbb
push
stos
cmp
aas
lds
ins
xlat
or
cmc
xchg
and
cmc
sub
mov
xor
fcos
add
js
and
mov
ins
xlat
cmp
outs
mov
cmp
ins
push
ret
or
std
sub
mov
out
sub
or
inc
jo
mov
mov
push
ins
xlat
retf
fwait
in
enter
cld
xchg
ss
imul
ins
push
sub
xlat
mov
xchg
pop
les
in
push
jl
stos
xor
mov
popa
pop
jns
xchg
mov
xchg
pop
jns
xchg
mov
shr
mov
jl
push
rcl
sbb
cmp
test
jns
xchg
mov
ins
das
mov
xor
mov
cmp
outs
sub
push
mov
pop
das
mov
aad
ins
jl
and
cmc
sub
mov
pop
xlat
push
cld
ins
xlat
cmp
imul
ret
or
cmp
ins
xlat
mov
out
sub
or
cld
xchg
cmp
cmp
test
push
ins
pop
les
pop
sti
imul
(bad)
cmp
jmp
jl
cs
pop
xlat
mov
xchg
test
sbb
push
jmp
cmp
jecxz
ds
adc
sub
push
ror
xlat
cmp
ins
xlat
cmp
xor
mov
out
cmp
cmp
pusha
std
scas
sub
jl
mov
cmp
cmp
or
cmp
or
cmp
adc
jle
aam
cmp
ins
and
std
scas
cmp
jl
push
inc
ins
ins
mov
fisub
jns
bound
jle
xchg
ret
xchg
inc
pop
in
mov
push
xchg
ret
jae
xchg
cmp
sub
mov
js
mov
or
adc
xlat
dec
lods
out
xor
xchg
ds
sub
xlat
push
in
adc
adc
xor
sub
xor
sub
int
lods
leave
cmp
sub
inc
aas
ds
mov
in
scas
push
push
sub
ins
mov
xor
ins
pop
imul
cld
adc
jae
sbb
ret
cmp
xlat
retf
lahf
in
loopne
scas
pop
jno
in
pop
cmp
and
cmc
sub
cmp
jo
pusha
jl
out
xor
fiadd
mov
(bad)
fcom
imul
(bad)
retf
sub
fmul
jge
xor
cmp
xor
jne
bswap
lahf
in
in
cmc
scas
mov
movs
adc
cmc
mov
sub
xchg
aas
inc
mov
sti
xchg
cmp
stos
xchg
ret
jge
stos
fdiv
pop
jmp
sub
fsub
xchg
(bad)
cmc
scas
(bad)
(bad)
cmc
cmp
mov
mov
xchg
cmp
(bad)
xlat
cmp
sahf
jae
add
xchg
cmp
push
cmp
sahf
jae
adc
push
pop
sbb
sar
sub
cmp
mov
cmc
sub
mov
xchg
adc
ins
cmp
imul
mov
call
cld
sub
cmp
ins
push
inc
mov
std
sbb
ja
ins
xlat
cli
cmp
xlat
cmp
outs
fmul
imul
sub
jl
mov
cmc
sub
mov
xchg
fmul
jl
xlat
inc
and
jg
dec
pop
cmp
ins
push
les
sar
cs
mov
out
xor
dec
jbe
sub
les
sar
xchg
int
jl
fmul
jge
mov
mov
cld
sub
aas
jae
xchg
cmp
jl
push
cmp
ins
mov
cmp
aam
mov
cmp
and
push
mov
cmp
add
and
xlat
mov
add
sub
sub
mov
bound
mov
sub
xchg
(bad)
xlat
jbe
xchg
leave
jge
stos
leave
jnp
xor
or
mov
movs
pop
jns
bound
inc
out
xlat
cmp
sbb
mov
retf
arpl
ss
call
outs
cmp
sub
adc
outs
cmp
mov
lods
in
std
mov
lods
dec
gs
lods
in
std
xchg
lods
in
std
inc
lods
cmp
inc
lods
in
std
xchg
lods
in
std
inc
lods
cmp
inc
lods
in
std
out
in
std
inc
lods
or
outs
cmp
das
xlat
lods
(bad)
jns
jle
std
outs
xor
(bad)
lods
stc
lods
inc
lods
in
std
mov
lods
dec
gs
lods
in
std
push
cld
js
inc
lods
inc
mov
lods
in
std
mov
lods
sbb
std
mov
cmc
pushf
sub
mov
std
inc
pop
xchg
ins
xlat
cmp
xor
inc
cmp
pop
xchg
cmp
inc
xchg
dec
cmp
inc
mov
std
inc
lods
in
out
cmp
std
inc
mov
gs
lods
in
pop
les
imul
in
std
inc
inc
nop
std
inc
lods
in
out
pop
xor
std
inc
mov
in
sbb
lods
in
std
inc
pop
in
std
inc
lods
in
or
(bad)
lea
xlat
in
mov
add
cmp
das
xlat
sub
popf
(bad)
call
outs
cmp
sub
inc
lods
in
std
mov
xchg
xlat
lods
in
std
mov
lods
(bad)
mov
pop
in
std
inc
lods
push
lods
inc
lods
in
std
out
in
std
inc
lods
sub
inc
lods
in
std
pop
hlt
in
std
inc
lods
mov
inc
lods
in
std
inc
lods
and
inc
lods
in
std
imul
dec
pop
inc
lods
in
std
(bad)
(bad)
in
std
inc
lods
sahf
lahf
inc
lods
in
std
outs
cmp
das
xlat
lods
call
mov
lods
(bad)
jns
jle
std
pop
in
std
inc
lods
push
lods
inc
lods
in
std
out
in
std
inc
lods
sub
inc
lods
in
std
pop
hlt
in
std
inc
lods
mov
inc
lods
in
std
inc
lods
and
inc
lods
in
std
imul
dec
pop
inc
lods
in
std
(bad)
(bad)
in
std
inc
lods
sahf
lahf
inc
lods
in
std
mov
in
std
inc
lods
sbb
jmp
in
mov
sub
xchg
xor
in
xor
scas
aam
ja
unpckhps
xchg
int3
cmc
scas
out
sbb
fidivr
mov
gs
int3
sub
cli
rol
add
mov
fcomip
sub
mov
in
stos
ret
jl
sar
cmp
test
jns
aad
inc
jl
push
xor
cmp
mov
inc
push
movs
mov
movs
mov
mov
gs
cmp
cmps
dec
imul
xor
popf
xchg
xor
jge
mov
xchg
(bad)
div
jge
jns
bound
jp
xor
sub
mov
popa
jno
inc
sbb
adc
je
inc
cmp
ins
pop
jns
cmp
xlat
xor
sub
ins
imul
fistp
mov
imul
pop
shl
cmp
int3
sub
popa
outs
jl
push
clc
pop
in
retf
lahf
in
fdiv
scas
push
cli
jp
sub
bound
jo
out
cli
jae
mov
xchg
mov
movs
adc
cmc
mov
sub
in
or
loopne
xlat
cmp
pusha
xlat
aas
mov
xchg
idiv
jb
div
mov
adc
fwait
mov
add
mov
or
jl
push
rcl
arpl
cmp
sub
ins
sbb
aam
xchg
sub
jmp
pop
xor
push
aad
jl
popa
inc
xchg
lods
xor
idiv
push
call
fidivr
ins
pop
jmp
in
aam
mov
xor
sub
inc
xchg
lods
xor
sbb
call
mov
xchg
mov
push
jl
(bad)
jns
xor
outs
xchg
aam
test
clc
fs
pop
fidivr
ins
pop
jns
xchg
mov
jl
(bad)
cmp
xchg
cmp
jge
jns
imul
jns
xor
push
xchg
ror
jbe
call
sub
mov
jns
out
mov
ins
in
cmp
ins
xlat
mov
call
push
out
jns
pop
push
aam
cmp
cmp
sub
aam
cmp
cmp
adc
xor
xchg
pop
(bad)
jae
add
jmp
push
inc
fidivr
ins
aas
pop
sub
mov
xlat
mov
mov
adc
fisubr
mov
icebp
xor
in
or
cmp
scas
fidivr
ins
pop
in
push
xchg
je
xlat
cmp
test
xchg
cmp
sub
xlat
imul
mov
ins
xlat
mov
outs
xchg
enter
fidivr
ins
out
jmp
and
fucom
xor
outs
shl
cmp
xor
in
int3
xchg
ja
in
sub
mov
icebp
xor
pop
(bad)
mov
call
jmp
daa
cmp
stc
xor
outs
shl
popf
movs
jmp
xchg
cmp
fild
sub
int
jle
out
lods
call
test
xlat
retf
call
jecxz
push
push
fidivr
ins
fmul
idiv
cwde
call
jle
in
push
cld
adc
cmp
xchg
jne
mov
test
mov
xchg
jmp
cmc
popf
out
cmc
stos
mov
ds
ins
mov
cmp
xchg
mov
cmp
in
fdivr
or
ins
mov
ins
sbb
outs
sbb
aam
and
cmp
sbb
aam
xlat
cmp
or
jl
test
shl
cmp
lods
xchg
arpl
ss
jmp
in
ins
sub
or
xor
push
sti
or
cmp
push
fild
in
cmp
cmp
in
into
das
xlat
push
cmp
xlat
cmp
sub
xlat
lahf
je
xchg
cmp
xchg
inc
cmc
stos
pop
jns
cmp
gs
add
mov
inc
xor
ins
xchg
out
cmp
xor
jmp
in
ins
sub
push
dec
add
push
xchg
pop
sti
call
test
ins
xlat
xor
icebp
xlat
cmp
xchg
loop
into
das
xlat
aam
and
xchg
ret
cmp
std
call
cmp
xlat
cmp
js
test
ins
push
add
mov
ret
idiv
je
xchg
cmp
pop
aad
hlt
and
xchg
ret
idiv
je
xchg
cmp
adc
cmp
xor
sub
push
mov
out
xor
das
xlat
ret
or
aam
and
xchg
ret
xchg
ret
in
repz
loop
les
xlat
aam
xlat
cmp
stos
xor
ins
push
sbb
cmp
xor
jmp
in
ins
sub
mov
jbe
pop
hlt
dec
movs
pop
std
call
test
ins
xlat
dec
jns
pop
ret
xchg
push
mov
cmp
fmul
pop
ins
xlat
cmp
js
test
ins
push
add
mov
ret
mov
cmp
push
les
add
cmp
sub
mov
cmp
stos
xor
pop
mov
in
retf
call
dec
je
aas
mov
mov
ins
mov
ret
cmp
jae
xchg
ret
rcl
or
mov
xchg
adc
jnp
mov
cmp
xlat
cmp
fimul
loopne
fwait
call
mov
xchg
lahf
mov
sub
mov
imul
xor
xchg
xlat
cmp
jnp
mov
xchg
push
add
mov
ret
rcl
sbb
jno
jl
fmul
add
pop
cli
jae
xchg
ret
jmp
push
sbb
xor
sub
je
imul
cmc
mov
rol
aaa
dec
sub
push
adc
cmp
push
fild
out
xor
pop
aas
sar
ins
xlat
push
pop
ins
xlat
cmp
ins
sub
test
jl
push
clc
jo
and
jg
xlat
cmp
out
lahf
cmp
in
cmp
and
cmp
cmp
adc
jl
adc
jge
cmp
in
and
popa
mov
das
cmp
cmp
xlat
cmp
ins
sub
je
xchg
cmp
dec
call
pop
aad
sub
cmp
mov
mov
jl
pop
sbb
cmc
sub
mov
or
jns
outs
xlat
mov
bound
sub
push
jp
ins
pop
(bad)
sbb
or
jge
jns
cmp
xchg
cmp
inc
xchg
cmp
in
adc
ins
xlat
push
dec
xchg
loop
into
das
xlat
aam
sub
cmp
jge
cmp
sub
ins
xchg
rcr
and
xchg
inc
cmc
stos
pop
jns
cmp
sub
lods
fist
cmp
in
mov
jl
sub
jae
pop
cmp
ins
aas
test
out
das
ret
or
mov
cmp
js
test
ins
pop
or
das
cmp
cmp
adc
jge
xlat
aas
jns
outs
jle
cmp
xlat
push
jl
xlat
aam
daa
xlat
cmp
test
jo
das
xlat
push
mov
out
xor
das
xlat
mov
jge
ins
xchg
xor
xor
imul
push
jge
cmp
sub
ins
xchg
jp
cmp
out
adc
cmc
xchg
and
cmc
sub
mov
test
bound
movs
adc
cmc
mov
je
xlat
cmp
cmp
and
jl
pop
jns
out
pop
cmp
push
ret
adc
cmp
out
adc
stos
adc
ins
cmp
jae
xchg
ret
cld
rcl
ret
adc
mov
xchg
adc
add
sub
xchg
sub
sub
mov
mov
xchg
out
cli
add
cmp
loopne
ret
adc
ret
and
pop
cmc
fsubr
ret
mov
jle
loopne
ret
adc
ret
and
pop
cmc
fsubr
retf
sub
xlat
cmp
ficom
adc
ret
xlat
xor
call
adc
sub
dec
xchg
pop
sti
icebp
call
xchg
or
imul
xchg
sub
and
adc
cmp
jl
pop
push
lock
pop
les
pop
sti
icebp
call
fmul
and
sub
cmp
xlat
mov
hlt
lock
ret
fmul
and
test
and
call
arpl
ss
jmp
in
mov
jl
sub
in
adc
dec
ins
xlat
test
add
cmp
mov
test
pop
jns
in
out
adc
push
mov
ret
xchg
xchg
gs
sub
xor
test
xor
and
mov
xchg
sub
cmp
cli
clc
push
xlat
xlat
inc
pop
(bad)
mov
xchg
sub
cmp
and
sub
loopne
rol
cmp
loopne
rol
popf
cmp
out
adc
cmc
xchg
inc
cmc
stos
pop
mov
sub
adc
cli
cmc
scas
push
fistp
sub
or
iret
lods
xchg
fild
loopne
rol
nop
cmp
pop
xlat
push
cld
ins
xlat
cmp
outs
mov
cmp
ins
push
mov
xchg
sub
cmp
mov
in
cmp
adc
jle
test
jl
mov
sar
ins
pop
popa
je
in
cld
xlat
cmp
xchg
(bad)
(bad)
cmc
stos
cmp
cmc
xchg
inc
cmc
stos
mov
jns
ins
xchg
xchg
cmp
lock
adc
cmp
test
das
mov
loopne
rol
nop
cmp
pop
xlat
ins
icebp
shr
ret
xor
inc
xchg
cmp
cmp
jno
ins
xlat
arpl
ss
jmp
in
mov
jl
add
xchg
inc
cmc
stos
(bad)
(bad)
cmc
stos
pop
jns
in
out
adc
pop
mov
ret
xchg
xchg
leave
sub
xor
stos
test
jl
pop
mov
sub
add
mov
sub
push
ins
pop
mov
sub
xchg
xor
lods
retf
ins
xchg
sbb
mov
ret
xchg
xchg
cmp
call
xchg
and
mov
jl
xlat
mov
xchg
sub
cmp
xor
stc
xchg
sub
cmp
mov
xchg
sub
cmp
mov
jge
pop
sti
icebp
call
xchg
sub
xlat
cmp
ins
xchg
cmp
dec
je
loope
cmp
xlat
cmp
jno
pop
xchg
das
xlat
aam
sub
cmp
ins
xchg
xchg
cmp
sbb
ret
dec
test
jle
ins
push
sar
push
xlat
cmp
xor
jmp
in
mov
jl
add
xchg
and
cmc
call
pop
sti
push
ins
pop
mov
sub
xchg
xor
lods
retf
ins
xchg
int
ret
and
or
or
mov
sub
xchg
sar
ins
pop
mov
sub
icebp
je
ins
push
clc
pusha
loopne
rol
xchg
cmp
in
les
out
xor
outs
in
in
xchg
mov
sub
adc
cmp
shr
ret
(bad)
dec
dec
loopne
rol
xchg
cmp
fs
dec
and
int
ds
aas
push
cmp
push
jl
mov
mov
sub
xchg
push
xchg
cmp
in
adc
sub
push
rol
xchg
cmp
fs
dec
pop
add
aas
add
jl
mov
mov
sub
xchg
inc
xchg
cmp
in
cmp
pop
add
aas
sub
ins
xlat
push
jl
mov
mov
sub
xchg
xchg
cmp
in
and
sub
arpl
movs
adc
cmc
mov
push
cmp
xor
popf
dec
cmc
stos
(bad)
int3
cmc
stos
mov
ret
xchg
pusha
cmp
sub
stc
popf
sub
and
ret
or
mov
sub
xchg
sar
ins
pop
mov
sub
sar
ins
push
clc
pusha
loopne
enter
ins
xchg
sbb
mov
out
xor
dec
outs
in
in
xchg
mov
and
adc
cmp
ins
mov
push
jle
xlat
push
jg
xlat
cmp
sub
sub
sub
pop
jg
ins
pop
jns
out
das
ret
or
sub
das
xlat
aam
sub
cmp
ins
xchg
xchg
cmp
cmp
ret
dec
test
jl
ins
xchg
test
mov
nop
xchg
sub
cmc
stos
mov
aam
sub
cmp
ins
xchg
xchg
cmp
cmp
ret
dec
test
jl
ins
mov
push
jl
xor
call
ins
mov
outs
imul
ffreep
or
aas
in
inc
ins
xlat
mov
aad
arpl
(bad)
call
pop
cli
jne
mov
dec
jle
lds
loopne
les
test
or
xlat
xlat
ret
out
xor
sbb
xlat
cmp
add
jl
mov
aam
xlat
cmp
ins
xchg
xchg
cmp
adc
ret
dec
test
jl
test
add
xlat
cmp
sbb
aam
sub
cmp
fwait
dec
inc
jl
mov
movs
adc
cmc
mov
push
cmp
pop
sub
das
mov
pop
das
mov
out
xor
push
clc
dec
dec
pop
(bad)
mov
cdq
sub
cmp
aam
fwait
sub
jmp
sar
push
enter
ins
xchg
jb
cmp
stos
push
cmp
xchg
push
jge
push
enter
ins
cmc
mov
cld
pusha
cmp
sub
stc
sub
ret
or
mov
sub
xchg
sar
ins
pop
mov
sub
jmp
clc
pusha
pop
xlat
push
cld
ins
xlat
cmp
outs
mov
cmp
ins
push
mov
cdq
sub
cmp
mov
xchg
push
les
adc
jl
xlat
ins
adc
cmp
xchg
in
fcom
cmp
or
cmp
call
and
aad
ins
xlat
cmp
ins
cmp
test
cmp
add
sub
xchg
push
jmp
adc
jl
xlat
cmp
ins
aas
jns
ins
xlat
mov
pop
xlat
mov
xchg
xchg
xlat
cmp
xchg
mov
cmp
in
retf
fwait
in
rol
out
stos
sar
jl
mov
cmp
das
cmp
mov
into
jmp
ins
aas
xor
jl
mov
ret
dec
test
add
les
xchg
sub
cmc
stos
adc
sbb
aam
sub
mov
mov
std
aad
jl
imul
sub
sti
or
das
outs
jne
ins
xlat
retf
lahf
in
dec
adc
xlat
mov
adc
ret
loop
call
cmp
enter
push
xlat
cmp
test
jle
test
jl
mov
sar
ins
pop
inc
je
loopne
clc
push
xlat
cmp
ins
pop
mov
sub
xchg
xor
lods
retf
ins
xchg
dec
and
sub
xor
xchg
inc
jo
mov
rol
xchg
cmp
call
xchg
fsubr
xlat
cmp
test
mov
rol
xchg
cmp
call
xchg
clc
xlat
cmp
test
mov
xor
push
test
xchg
cmp
push
cmp
pop
xlat
ins
adc
cmp
out
xor
sbb
aam
push
xlat
cmp
push
mov
jl
push
cld
adc
rol
xlat
cmp
call
push
inc
jo
fdivr
call
xlat
cmp
loopne
mov
call
xchg
fs
xlat
cmp
xchg
sbb
ins
pop
mov
sub
pusha
mov
sub
pusha
mov
sub
pusha
mov
sub
pusha
or
mov
mov
push
scas
ret
add
lea
ret
and
cld
adc
out
call
pop
test
pop
shl
mov
jmp
shl
adc
cmp
test
lgs
xchg
sub
xchg
cmp
pop
xlat
ins
icebp
shl
adc
dec
js
int
jl
pop
mov
sub
bound
in
push
xlat
cmp
lods
fdivr
std
xchg
aas
jl
pop
mov
sub
push
clc
adc
cmp
loopne
rol
ficom
adc
test
ficom
adc
mov
outs
pop
add
ret
sub
not
pop
ret
push
fld
mov
mov
xchg
sub
sbb
push
sti
push
cmp
mov
(bad)
ret
aas
in
ins
xlat
mov
in
xlat
cmp
call
xchg
sbb
xlat
cmp
ins
xchg
cmp
inc
je
mov
cmp
test
ret
adc
ret
xchg
fsubrp
cmp
in
adc
cmp
dec
js
ins
push
jl
mov
aam
push
xlat
cmp
ins
xchg
xchg
cmp
adc
ret
dec
test
pop
jl
mov
movs
adc
cmc
mov
push
cmp
popa
jo
rep
mov
ins
xlat
retf
fwait
in
enter
mov
aad
inc
jl
and
cmc
call
pop
sti
push
ins
pop
mov
sub
daa
mov
add
fstp
ins
xlat
cmp
push
(bad)
adc
pop
cmp
ins
push
inc
jle
fdivr
icebp
call
xchg
call
xchg
aam
jnp
pop
aad
ins
xlat
cmp
adc
jl
pop
int3
jmp
jmp
pop
cmc
cmp
xlat
aas
bound
sub
or
inc
mov
(bad)
cmc
stos
fmul
jns
sub
sub
cmc
popf
push
cld
pusha
cmp
sub
sub
sub
adc
cmp
ins
push
rcl
xchg
call
lods
test
dec
lods
ds
jl
xlat
mov
cld
push
(bad)
cmp
add
cmp
mov
mov
xchg
sub
cmp
mov
imul
rol
xchg
dec
popa
ds
mov
xchg
sub
cmp
mov
cmps
and
cmp
dec
test
cmp
mov
xchg
sub
cmp
mov
dec
xchg
pop
sti
icebp
call
xchg
add
cmp
xchg
sub
pop
xlat
mov
out
pop
and
push
mov
es
sub
xor
xchg
inc
cmc
stos
out
cmp
aad
mov
scas
xor
cmp
pusha
aas
std
xchg
mov
ins
das
mov
pop
rcl
pop
aad
and
cmc
sub
mov
jl
(bad)
push
jl
xchg
int3
sub
mov
jl
push
clc
jo
adc
outs
xlat
mov
inc
das
mov
bound
je
aas
in
ins
xlat
mov
or
mov
daa
mov
test
xlat
cmp
sub
push
ins
loopne
int3
sub
mov
cmp
out
das
ret
or
inc
jo
mov
push
gs
sub
xor
adc
cmp
ins
cmp
pop
test
push
sti
adc
cmp
adc
or
dec
ins
cmp
cld
mov
cmp
adc
cmp
test
jl
mov
sar
ins
sub
xchg
into
out
cmp
xchg
mov
cmp
in
retf
fwait
in
shl
stos
mov
movs
adc
cmc
mov
pusha
push
xor
mov
jl
das
cmp
sbb
mov
mov
mov
aam
push
xlat
cmp
ins
xchg
xchg
cmp
pop
aas
jns
ins
xlat
push
jl
xlat
cmp
mov
sub
in
fs
xlat
cmp
stos
pop
les
pop
sti
jne
mov
dec
jnp
aas
scas
mov
loop
adc
mov
xchg
sub
cmc
xchg
and
cmc
call
pop
sti
push
imul
sub
push
rol
jmp
adc
adc
ret
jmp
xlat
cmp
jae
cmp
jl
push
cmp
xchg
sub
pop
ret
sub
xor
xchg
sub
ins
mov
jle
loopne
cmp
xchg
sub
pop
ret
sub
xor
sub
sbb
push
jge
mov
mov
sub
or
stos
push
cmp
ret
jl
push
rol
xchg
outs
jae
mov
addr16
cmp
push
ins
jle
xlat
inc
pop
push
xchg
pusha
fdivr
jae
pop
cmp
jno
sub
xor
dec
sar
test
push
clc
inc
sar
adc
add
sub
ds
ds
js
xlat
add
and
jns
jmp
outs
js
xlat
add
test
xor
push
jge
xlat
inc
ins
push
test
aas
fdivr
xchg
inc
sar
push
xchg
fdivr
xchg
jno
cmp
push
fwait
jne
cmp
mov
add
outs
cmp
xor
data16
jl
sub
jl
jmp
push
aam
jl
cmp
jl
mov
jle
loopne
cmp
xchg
sub
push
ret
sub
xor
sub
sbb
sar
ins
pop
test
test
clc
jo
sub
jl
mov
mov
sub
cmp
mov
gs
shr
cmp
cmp
call
xchg
sub
push
add
clc
ins
add
aas
sub
xlat
push
jl
mov
ret
dec
test
or
inc
jg
xlat
push
ins
adc
jl
xlat
ins
adc
cmp
xchg
in
mov
cmp
xchg
(bad)
(bad)
cmc
stos
ds
xlat
mov
clc
cmp
cmp
in
push
adc
cmp
xchg
cmp
mov
mov
test
ins
xlat
sti
stc
test
cmp
xchg
mov
test
mov
imul
cmp
ret
sub
mov
sub
inc
call
movs
out
cld
rcl
rol
xlat
push
jl
aas
iret
xchg
cmp
icebp
call
push
cld
jns
mov
mov
in
aad
outs
xlat
cmp
push
fstp
js
mov
jmp
test
retf
ret
jmp
retf
cmp
test
jl
push
inc
jo
mov
rol
mov
mov
in
aad
outs
xlat
cmp
call
push
cld
js
test
scas
xchg
sub
jmp
xchg
mov
out
pop
and
pop
mov
sub
cmc
pop
jl
push
clc
jo
and
stc
xchg
sub
xchg
inc
ins
xlat
push
jl
pop
test
cs
in
fcomp
cmp
jl
cmp
add
aas
mov
ins
xlat
push
jl
mov
ret
dec
test
jl
ds
jge
xlat
mov
sub
icebp
call
push
cld
jns
test
xor
sub
jmp
xlat
cmp
mov
xchg
xchg
sub
cmc
stos
ds
jge
xlat
push
ins
adc
jl
xlat
ins
adc
cmp
xchg
in
dec
pop
xlat
cmp
enter
in
push
adc
mov
jmp
push
rol
in
cmp
sbb
aad
ins
xlat
cmp
push
cmp
test
or
cmp
add
sub
xchg
and
jl
mov
jl
pop
les
pop
sti
adc
cmp
test
cmp
add
sub
xchg
cmps
in
jl
cmp
je
xlat
aad
ins
xlat
cmp
cmp
test
jl
mov
sar
ins
sub
xchg
retf
jl
cmp
ins
xlat
aad
ins
xlat
cmp
jge
jle
test
jl
mov
sar
ins
sub
xchg
out
in
jl
and
ins
and
cmc
call
pop
sti
xchg
mov
cmp
in
mov
pop
adc
adc
cmp
test
xlat
cmp
mov
cwde
xchg
sub
cmc
stos
pop
mov
sub
in
jl
mov
rol
aas
adc
out
xlat
cmp
inc
cmp
test
or
cmp
add
sub
xchg
data16
jl
cmp
ins
xlat
xlat
add
xchg
sub
xchg
mov
adc
ins
cmp
cld
rcl
rol
not
ds
aas
icebp
dec
ins
xlat
push
jl
mov
ret
dec
test
push
jl
cmp
adc
cmp
test
jl
mov
sar
ins
sub
xchg
(bad)
in
jl
and
push
ins
xlat
xlat
gs
aas
lods
dec
ins
xlat
push
jl
mov
ret
dec
test
jl
pop
les
pop
sti
xchg
push
sub
addr16
xor
cmp
xor
jae
xlat
cmp
mov
and
ret
or
cmp
ins
aas
push
dec
ins
xlat
mov
in
retf
fwait
in
(bad)
cmc
stos
fmulp
or
cld
xchg
ja
cmp
jl
pop
jmp
test
in
imul
xchg
pop
sti
and
mov
mov
xor
and
ja
sti
mov
sbb
mov
pop
das
mov
or
mov
jl
pop
les
nop
sub
cmc
stos
push
sti
je
xlat
cmp
call
jl
pop
mov
adc
cmp
cmp
xlat
mov
in
adc
ins
xlat
push
mov
xchg
cmp
fcom
ret
aas
(bad)
xlat
mov
mov
push
sar
ins
sub
xchg
mov
push
hlt
adc
or
jl
push
retf
std
(bad)
cmp
ins
mov
mov
mov
xchg
(bad)
cmp
nop
das
xlat
ret
or
push
dec
ins
xlat
mov
pop
das
mov
pop
or
jne
mov
ret
xchg
leave
mov
inc
lock
xlat
cs
in
xchg
sub
pop
ret
sub
jne
mov
(bad)
cmc
stos
out
sbb
sub
cmp
ret
jae
push
jmp
dec
sar
ins
adc
jmp
das
mov
xchg
leave
mov
ror
jl
pop
les
pop
sti
sbb
ret
aas
leave
dec
ins
xlat
xor
call
mov
movs
adc
cmc
mov
cld
ins
xlat
aam
pop
xlat
cmp
cmp
add
mov
pop
daa
mov
pop
or
mov
mov
sar
add
xlat
cmp
in
cmp
inc
ins
fdivr
icebp
sub
ins
sbb
aam
pop
xlat
cmp
lods
mov
aas
jge
xlat
dec
outs
xchg
loopne
nop
inc
xlat
cmp
mov
cmp
in
adc
jl
xchg
shr
push
jl
xlat
ret
or
pop
dec
ins
xlat
xor
jl
xlat
mov
pop
pop
xlat
mov
xchg
xchg
pop
xlat
push
jl
mov
cmp
in
adc
add
xlat
cmp
pop
or
push
ins
pop
jns
cmp
xlat
mov
xchg
test
cmp
jnp
in
les
xchg
sub
jne
nop
xor
call
sub
xchg
jle
cmp
in
retf
call
mov
loopne
rol
sub
sub
xchg
xchg
mov
xlat
cmp
ins
sub
loopne
rol
sub
aas
xchg
push
ins
xlat
mov
ins
daa
mov
pop
or
push
bound
or
fdivr
jl
cmp
adc
cmp
fcos
sbb
dec
je
mov
sbb
icebp
jne
das
or
xchg
cmp
cmp
push
cmovg
pop
jl
push
pop
cmp
xchg
(bad)
cmc
xchg
out
cmc
stos
adc
bound
dec
jo
aas
adc
xlat
mov
inc
mov
add
sub
js
outs
mov
fwait
in
enter
jns
xor
mov
in
cmp
js
xlat
outs
sub
pop
dec
je
into
inc
lds
pop
les
pop
sti
std
call
test
xlat
cmp
fs
dec
gs
loope
adc
cmp
test
cmp
aad
outs
xlat
cmp
call
adc
push
or
jl
xlat
push
jl
sbb
aam
pop
xlat
cmp
xchg
(bad)
(bad)
cmc
stos
mov
cmp
loopne
cmp
xchg
sub
aas
mov
stc
xchg
sub
sub
ret
or
cld
or
or
xlat
mov
xchg
sub
cmp
jle
xchg
mov
cmp
aad
or
fcomi
call
pop
sti
sub
mov
jl
pop
mov
mov
xchg
sub
call
pop
sti
adc
cmp
loopne
cmp
xchg
sub
jecxz
jl
adc
ins
xchg
cmp
pop
xchg
aam
pop
xlat
cmp
scas
test
cdq
xchg
sub
and
in
outs
xchg
sahf
out
jl
xlat
ins
das
xchg
loope
mov
cmp
pop
(bad)
cmp
in
or
jp
pop
sar
ins
pop
mov
sub
test
adc
xor
(bad)
xlat
cmp
loopne
cmp
xchg
sub
fsubp
cmp
out
das
cmp
sbb
ins
push
cdq
adc
or
stc
xchg
sub
cmp
mov
ins
sub
sub
cmp
push
clc
jo
push
xchg
mov
aam
pop
xlat
cmp
ins
xchg
xchg
cmp
pop
aas
pop
push
ins
xlat
mov
jl
ja
jl
push
shl
xor
sub
adc
gs
mov
sar
ins
pop
test
xchg
popa
pop
sub
adc
mov
fsubr
mov
ins
sub
cmp
push
dec
ins
xlat
mov
jl
sub
sub
and
ins
mov
cmp
xchg
sub
pop
aas
rcl
xlat
xlat
dec
in
cmp
stc
ins
sub
cmp
push
jl
inc
rol
inc
cmp
xchg
sub
sbb
aam
pop
xlat
cmp
call
adc
(bad)
js
xor
cmp
sbb
mov
cmp
pop
sti
adc
xlat
cmp
pop
xlat
push
ins
jmp
cmp
(bad)
in
jl
adc
les
xor
push
imul
push
ins
xlat
mov
out
mov
jl
das
adc
retf
sub
ins
xchg
push
cmp
in
pop
cmc
cmp
pop
mov
pop
(bad)
mov
add
dec
push
aas
mov
xlat
mov
call
dec
lods
cmp
int
ins
xlat
mov
ins
das
mov
stos
xchg
shr
cmc
xchg
and
cmc
sub
mov
loopne
shr
shr
aas
pop
push
ins
xlat
mov
out
mov
jl
ret
cmp
ins
and
in
in
push
shr
sub
cmp
sub
out
stos
shl
mov
ins
cmp
jne
ins
xlat
xlat
es
retf
fwait
in
call
jl
xlat
retf
sbb
jecxz
ins
jmp
cmp
xchg
and
cmc
sub
mov
loopne
aam
pop
xlat
test
xlat
cmp
or
mov
mov
push
jge
cmp
xlat
push
jl
xlat
aam
inc
xlat
cmp
test
jl
pop
les
in
aad
xchg
sub
and
mov
mov
mov
lods
add
xor
sub
ins
push
ins
sub
add
mov
jge
ins
xlat
ins
xchg
and
cmp
aad
(bad)
ins
and
cmc
sub
mov
xor
jmp
in
mov
sub
mov
mov
in
adc
ins
xlat
mov
inc
das
mov
in
adc
sub
sti
cmp
fstp
ins
adc
ins
xlat
cmp
out
mov
jl
xlat
mov
fld
mov
out
pop
xor
pop
les
pop
sti
push
ins
pop
jns
cmp
fild
jnp
xchg
ss
cmp
pop
xlat
mov
fld
mov
out
pop
sub
test
js
ins
pop
jns
cmp
xlat
mov
pop
jl
cmp
sub
jl
xlat
mov
lds
test
xchg
cwde
cmc
sub
mov
call
imul
jnp
cmp
(bad)
cmp
or
jns
ins
xlat
mov
stc
xchg
jl
xlat
push
pop
pop
(bad)
push
jl
xlat
mov
jl
mov
sar
ins
cmp
icebp
jo
sar
ins
test
test
adc
cld
or
jns
in
cmp
sub
in
loope
jl
sub
test
adc
ror
sbb
cmp
sbb
pop
inc
xlat
cmp
sbb
fs
xlat
cmp
adc
cmp
imul
ror
cmp
lods
xchg
arpl
ss
jmp
in
ins
sub
pop
dec
je
js
test
pop
les
pop
sti
sbb
aam
inc
xlat
cmp
sbb
aam
inc
xlat
cmp
sbb
aam
inc
xlat
cmp
stos
jbe
jl
mov
aam
inc
xlat
cmp
sbb
aam
inc
xlat
cmp
jns
cmp
test
jl
push
clc
jo
das
retf
fwait
in
shl
mov
scas
xor
xchg
retf
ins
das
mov
xchg
mov
cmp
pop
(bad)
ins
sbb
ret
or
dec
jo
mov
cmp
out
adc
xor
cmc
mov
inc
cmc
xchg
(bad)
(bad)
cmc
stos
mov
jns
cmp
mov
aam
ins
xlat
cmp
test
xor
shl
shr
pop
les
pop
sti
std
stos
or
jl
pop
jns
cmp
mov
ds
xlat
push
jl
xlat
ret
or
dec
je
adc
or
cld
xchg
push
sub
xchg
mov
push
jl
mov
aam
inc
xlat
cmp
lods
mov
aam
inc
xlat
cmp
lods
cmp
(bad)
cli
stos
cmp
call
sbb
aam
inc
xlat
cmp
lods
xchg
arpl
out
cmp
sub
pop
dec
push
in
and
fsubr
int3
sub
adc
pop
ins
xlat
mov
pop
das
mov
stos
sar
sub
mov
loopne
shr
cmp
sbb
ret
or
fst
xlat
xor
mov
jne
push
ins
mov
ret
or
xlat
xor
or
xlat
or
or
xlat
mov
call
jae
xchg
and
xor
jmp
in
ins
sub
add
stos
in
jl
push
add
(bad)
aam
inc
xlat
cmp
test
jns
in
adc
xchg
mov
dec
dec
pop
pop
jl
and
push
sub
cmp
ins
mov
push
jl
xlat
push
jl
in
ds
aas
dec
push
ins
xlat
lahf
xchg
mov
(bad)
fdivrp
or
cld
xchg
jo
or
sti
cmp
in
rol
(bad)
cmp
call
imul
sub
movs
adc
fisttp
jns
jl
pop
js
imul
cmc
cmp
xor
cmp
ror
int3
push
popf
pop
cli
not
fcmovnbe
cmp
jmp
jno
jmp
out
xor
xchg
(bad)
(bad)
cs
cmp
ins
test
clc
jo
cmp
test
xor
cmp
cli
js
xlat
mov
jl
das
mov
cmp
jmp
jl
popa
mov
pop
in
jmp
jl
int3
mov
and
mov
cli
jl
push
retf
xlat
cmp
sub
jl
pop
pop
in
sub
ins
xchg
mov
adc
jl
sub
in
aas
cmp
ret
or
cmc
pop
ins
xlat
mov
popa
(bad)
les
popf
pop
cli
dec
lods
mov
xor
cmc
mov
sub
popf
or
inc
xor
xlat
retf
sbb
xchg
int3
das
test
jns
out
int3
cmc
sub
mov
mov
pop
xchg
in
fdiv
sub
mov
xchg
push
(bad)
stos
fild
sub
xlat
mov
cdq
out
xchg
jnp
mov
push
int3
or
bound
dec
out
daa
dec
hlt
imul
dec
cdq
in
mov
cmp
stos
xchg
ret
cmp
jae
stos
ret
jmp
cmc
xchg
outs
es
xlat
movs
mov
push
xchg
outs
es
xlat
xchg
adc
(bad)
jg
and
mov
pop
inc
mov
mov
imul
sub
xchg
xchg
ret
xchg
ret
das
dec
shl
xchg
enter
cmc
mov
push
xlat
ds
sbb
push
shl
inc
and
pop
int3
jge
pop
cli
dec
and
adc
rol
pop
mov
cmc
stos
pop
mov
sub
mov
ret
sub
xor
scas
fsubp
or
cld
xchg
mov
push
adc
aam
inc
xlat
cmp
lods
ds
jg
xlat
ret
or
popa
push
ins
xlat
mov
mov
rol
and
cmc
call
pop
and
xchg
in
jmp
loopne
push
jl
xlat
cmp
pop
xchg
aam
inc
xlat
cmp
call
outs
mov
ins
xlat
retf
call
mov
xchg
mov
cmp
test
cli
cmps
adc
cmp
sub
mov
mov
push
mov
inc
ins
xlat
dec
test
adc
out
in
adc
sub
sub
nop
das
xlat
ret
or
jno
ins
xlat
mov
ins
xchg
mov
jle
add
sub
xchg
data16
cmp
out
adc
adc
cmp
jl
mov
ret
adc
cmp
test
push
jl
push
clc
push
bound
jge
xlat
sti
stc
mov
xlat
cmp
test
cmp
ins
push
shl
call
xlat
mov
sub
imul
sbb
adc
sub
adc
addr16
pop
xor
xchg
fmul
lds
cmp
hlt
and
jmp
outs
es
xlat
xchg
adc
(bad)
jg
inc
clc
adc
pop
sub
push
jl
sub
inc
cmp
loopne
cmp
xchg
sub
and
cmp
out
adc
sub
ret
adc
xlat
cmp
out
lods
ret
adc
ret
sbb
mov
ins
xlat
ret
cmp
ret
sub
mov
ds
xchg
push
test
xlat
cmp
mov
mov
stos
push
mov
cld
ins
xlat
cmp
call
pop
mov
inc
call
fdivr
cmc
call
ds
jge
xlat
mov
jno
mov
std
stos
loope
jl
ds
jge
xlat
mov
sub
mov
cmp
stos
cdq
push
jl
pop
jns
push
out
mov
jae
xlat
cmp
adc
ret
adc
push
inc
jge
mov
cmp
add
dec
push
ins
pop
mov
sub
mov
jl
push
clc
jo
cmp
ins
xlat
mov
popf
sub
sub
ret
cmp
jmp
jl
cs
or
xchg
xchg
sub
icebp
call
xchg
retf
call
pop
mov
cmp
mov
jl
push
int3
adc
ret
sub
cmp
call
cmp
icebp
call
xchg
mov
push
int3
adc
ret
mov
ret
adc
ret
sub
mov
ds
xchg
movs
inc
xlat
cmp
test
daa
mov
xchg
(bad)
int3
adc
cmp
call
pop
mov
sub
(bad)
rol
sub
xor
call
fdivrp
jae
push
ret
mov
ret
leave
xchg
sub
add
clc
je
daa
adc
jl
xlat
push
jle
xlat
push
jl
xlat
cmp
sub
in
sbb
mov
sbb
ret
adc
push
jl
push
adc
les
mov
rol
pop
int3
push
popf
pop
cli
sbb
ret
adc
sub
add
int3
jge
pop
cli
das
test
jl
pop
mov
xchg
imul
add
mov
mov
sbb
and
inc
cmc
stos
adc
ins
cmp
cmc
xchg
and
cmc
call
pop
sti
jae
xchg
ret
sub
pop
(bad)
ds
pop
mov
sub
adc
jl
mov
jle
loopne
ret
adc
cmp
test
les
in
and
cmp
jmp
push
fistp
jle
add
mov
aam
call
jl
or
ds
mov
push
jg
xlat
mov
sub
sbb
call
mov
or
sub
adc
fidiv
les
pop
sti
dec
dec
rol
das
mov
out
xor
push
(bad)
xor
lods
push
fdivr
push
lods
adc
xlat
cmp
in
mov
xchg
sub
mov
add
out
imul
fbstp
sub
pop
imul
test
cmc
xchg
and
cmc
call
pop
sti
sub
pop
mov
sbb
rol
xlat
mov
gs
mov
nop
sub
icebp
cmp
cmp
cmp
cmp
adc
push
dec
adc
loope
jl
pop
mov
sbb
rol
xlat
mov
gs
mov
nop
sub
icebp
cmp
cmp
loopne
rol
pop
push
jmp
in
adc
pusha
ins
xlat
push
nop
mov
cmp
in
test
xchg
sub
mov
loopne
cwde
adc
stc
push
jl
xchg
inc
dec
xlat
cmp
imul
mov
fstp
jle
add
mov
aam
call
mov
cli
cmc
cmp
pop
pop
aad
outs
xlat
cmp
xchg
inc
cmc
stos
aas
rol
ins
xlat
cmp
call
xchg
cmp
ret
leave
stc
sub
adc
ret
leave
loope
ret
adc
ret
leave
cmc
sub
adc
push
call
xchg
or
mov
icebp
sub
and
cmp
adc
test
mov
outs
xlat
cmp
retf
jl
push
rol
repnz
in
cmp
stc
fldcw
ret
cmp
ret
sub
push
sbb
(bad)
jmp
and
imul
mov
aad
ret
cmp
mov
xchg
cmp
cmp
call
xchg
cmp
ins
adc
jge
xlat
cmp
stos
push
aam
xchg
sub
in
and
ins
xlat
mov
sub
sbb
sub
test
adc
cmp
gs
call
xchg
cmp
sbb
ins
mov
mov
sub
xlat
aam
dec
xlat
cmp
lods
fdivr
sbb
rol
xlat
test
xlat
cmp
mov
sbb
sub
adc
cmp
jl
push
aad
ins
pop
mov
sub
push
sbb
clc
ins
stos
push
push
adc
xlat
cmp
call
xchg
xchg
cmp
sub
cmp
in
xor
xchg
outs
xlat
cmp
sbb
cmp
in
push
push
adc
jmp
push
movs
fsubp
or
cmp
ins
xlat
aam
dec
xlat
cmp
call
in
nop
sub
jl
fst
xlat
cmp
push
idiv
add
pop
mov
sub
aas
jmp
jge
cmps
aad
ins
pop
mov
sub
fst
xchg
push
clc
jo
sub
jl
mov
rol
das
mov
xchg
mov
sub
jge
pop
sti
xchg
pusha
push
cdq
loopne
sub
jl
cmp
ins
xlat
mov
fldcw
ret
cmp
push
idiv
in
cmp
jl
bound
mov
xlat
cmp
fdiv
adc
mov
icebp
sub
add
mov
xor
cmp
in
mov
sub
mov
ret
jg
icebp
jle
das
retf
fwait
in
int3
cmc
stos
(bad)
(bad)
cmc
stos
sub
test
(bad)
sbb
add
sbb
aam
dec
xlat
cmp
scas
mov
sub
add
ins
pop
(bad)
sbb
or
xchg
and
cmc
sub
mov
ds
std
pop
ins
xlat
mov
or
mov
jns
bound
sub
cmp
cmp
mov
xchg
sub
cmp
enter
adc
jge
inc
cld
cmc
sub
mov
in
and
push
ins
xlat
push
js
xchg
and
in
jl
test
jl
push
clc
jo
mov
cld
jns
aas
dec
popa
ins
xlat
mov
inc
das
mov
xchg
mov
ret
sar
cmp
aas
popa
popa
ins
xlat
ret
or
mov
xchg
pop
js
push
pop
js
outs
xchg
cmp
cmp
bound
and
cmp
pusha
imul
jge
ins
xchg
dec
retf
loopne
les
xlat
push
inc
ja
jl
xlat
push
jl
int
jl
pop
cli
cmc
xchg
out
cmc
stos
mov
and
jns
cmp
xlat
cmp
test
and
les
pop
sti
imul
das
arpl
ss
jmp
in
test
xlat
cmp
fcmove
cmp
sub
inc
inc
outs
cmc
xchg
(bad)
(bad)
cmc
stos
(bad)
(bad)
cmc
stos
adc
cmp
xlat
cmp
xchg
and
cmc
call
pop
sti
icebp
call
xchg
cmp
aam
jbe
cmp
stos
fdivrp
jae
inc
cmp
ins
pop
les
pop
sti
das
xchg
(bad)
clc
pushf
xchg
sub
adc
jmp
into
ret
leave
movs
aaa
ret
adc
cmp
pop
pop
jl
or
jae
xlat
cmp
call
xchg
and
retf
les
cmp
call
xchg
cmp
cmp
lods
mov
clc
pushf
xchg
sub
fs
xlat
cmp
test
into
ret
leave
movs
aaa
ret
adc
cmp
in
or
mov
(bad)
out
xchg
imul
data16
cmp
xor
les
cmp
test
daa
jl
test
out
xor
movs
cmp
test
adc
adc
(bad)
cmp
test
and
or
xlat
retf
fwait
in
les
in
mov
inc
ins
xlat
dec
test
adc
cmp
adc
mov
push
push
cmp
out
adc
sbb
ret
or
clc
xchg
das
xlat
push
mov
call
xchg
mov
test
das
mov
pop
xlat
push
jl
aad
jl
xlat
push
jl
xlat
jl
test
(bad)
std
stos
jmp
lea
ret
sub
stc
and
cmp
fsubr
jecxz
xchg
sub
sub
ds
add
xlat
mov
jl
(bad)
cmp
ins
cmp
cmc
xchg
and
cmc
call
pop
mov
cmc
stos
mov
movs
adc
cmc
mov
cld
imul
or
gs
call
loopne
sub
jl
das
or
mov
mov
ins
test
les
cmp
cmp
mov
outs
(bad)
mov
stc
sub
and
adc
xor
sub
fstp
ins
aas
retf
sub
mov
clc
xchg
sub
cmc
stos
mov
aam
jno
cmp
call
pop
les
pop
sti
push
jge
cmp
call
xchg
call
imul
mov
fstp
jle
add
mov
aam
popf
sub
jmp
push
cld
jle
xlat
push
js
xlat
cmp
call
xchg
cmp
mov
inc
das
mov
xchg
bound
call
xchg
pop
xchg
sub
jmp
push
mov
fild
ret
xchg
or
xlat
cmp
xor
jl
pop
mov
sub
push
rol
enter
ins
int3
adc
ret
std
call
push
ins
pop
mov
sub
xor
clc
pusha
in
adc
stc
aad
ret
sub
cmp
stos
push
fadd
ins
xlat
mov
sub
sbb
sub
jl
and
cmc
call
pop
sti
icebp
call
xchg
lahf
popf
sub
and
xchg
sub
outs
ret
xchg
pop
xlat
push
pop
pop
xlat
push
jl
xlat
mov
xchg
sub
cmp
cmp
fs
xor
in
cmp
xchg
bound
ja
cmp
xchg
out
cmc
stos
sub
adc
cmp
jl
push
aad
ins
pop
mov
sub
mov
clc
ins
stos
push
mov
xchg
inc
push
retf
shr
cmp
call
xchg
xchg
cmp
inc
retf
cmp
in
xor
xchg
outs
xlat
cmp
ss
cmp
in
push
mov
imul
push
mov
jmp
mov
aam
jbe
cmp
imul
lods
adc
daa
jl
push
sti
daa
add
cmp
ins
mov
mov
std
sub
cmp
mov
sub
clc
mov
push
mov
xchg
sub
inc
mov
(bad)
cmp
pop
xlat
ret
leave
stc
sub
and
mov
xchg
sub
into
cmp
loopne
mov
sbb
rol
sub
test
adc
leave
stc
sub
add
out
xchg
das
xlat
aam
jbe
cmp
add
adc
jmp
(bad)
push
scas
test
cmp
out
mov
xchg
push
test
sbb
rol
sub
imul
dec
rol
add
add
clc
jo
das
adc
xchg
fmulp
cmp
in
cmp
stc
icebp
sub
sub
loopne
mov
scas
int
jl
das
adc
jl
bound
pop
ja
cmp
xchg
out
cmc
stos
sub
xchg
retf
jl
push
mov
and
push
(bad)
js
xor
cmp
xor
mov
pop
das
mov
call
das
test
jns
xchg
mov
cmp
out
enter
sub
pop
xchg
aam
je
cmp
stos
test
pop
sar
aas
sbb
or
push
pop
jp
cmp
xchg
(bad)
(bad)
cmc
stos
test
or
xlat
cmp
sub
ins
push
ins
adc
mov
cmp
in
push
cmp
test
xlat
test
dec
xlat
cmp
mov
mov
adc
xchg
mov
jl
aas
lds
xlat
mov
xchg
cmp
les
xor
and
mov
mov
cmp
add
pushf
sub
retf
add
cmp
sub
mov
call
das
cmp
ins
sbb
cmc
ins
xlat
mov
call
xchg
adc
cmp
dec
cmp
xchg
popf
adc
cmp
ins
xlat
cmp
pop
(bad)
push
mov
push
sar
jns
ds
xchg
cld
jp
cmp
sub
mov
inc
das
mov
test
sub
cmp
adc
dec
jle
add
aas
fwait
or
cmp
sbb
ret
or
dec
jo
mov
cmp
xchg
test
pop
xlat
cmp
mov
test
adc
ss
(bad)
ins
ins
xor
out
xor
add
and
xlat
mov
in
and
jno
xlat
push
mov
cmp
in
shr
aas
adc
gs
or
cmp
test
jl
mov
cmp
in
adc
xlat
arpl
ss
(bad)
js
xor
shl
jns
push
push
retf
push
push
xlat
cmp
sub
lahf
cwde
adc
cmp
xchg
mov
mov
cmp
cmp
mov
lea
icebp
sub
ins
xchg
cmp
cmp
pop
xlat
push
jl
xlat
mov
mov
cmp
lods
mov
mov
jl
push
(bad)
ins
ins
xor
ins
aas
adc
sub
imul
daa
mov
in
and
mov
in
cmp
pop
ins
xlat
test
mov
fcomp
push
cmp
lods
xchg
cmp
mov
xlat
ret
jns
pop
jle
in
and
ins
xlat
aam
jnp
cmp
test
cmps
stc
xchg
sub
shr
cmc
call
mov
aam
je
cmp
test
and
sub
dec
lods
mov
xlat
aam
imul
adc
pop
jge
loopne
int3
mov
ret
cmp
aad
addr16
and
cmc
call
pop
cli
icebp
loopne
retf
adc
add
mov
sar
push
add
xlat
push
jl
jnp
ds
mov
mov
popf
and
cmp
aam
fwait
sub
jmp
mov
jle
test
cmps
xchg
das
xlat
push
pushf
fist
jle
loopne
rol
cmp
in
or
jl
push
rol
ret
sub
and
call
fdivrp
jae
aad
jl
out
std
stos
jmp
ds
jg
xlat
mov
sub
retf
outs
xlat
cmp
shr
rol
xlat
cmp
pop
(bad)
push
mov
call
xchg
cmp
sub
jmp
pop
and
sbb
jl
fmul
adc
jl
fdivr
jae
push
cmps
mov
sub
adc
jge
out
pop
ret
cmp
jmp
jl
cs
out
adc
sub
(bad)
push
in
loopne
cmp
shr
rol
sub
jmp
fdivr
sbb
sub
retf
call
pop
mov
cmp
ret
sub
test
jl
push
cli
pushf
xlat
cmp
call
xchg
cmp
xlat
or
push
adc
cmp
adc
jb
ins
xlat
cli
stc
xchg
sub
sub
mov
xlat
cmp
call
xchg
xchg
cmp
call
xchg
sbb
cmp
test
das
ret
sub
xchg
dec
iret
cmp
xlat
adc
addr16
std
xchg
lds
sbb
sti
cmp
les
aad
jl
adc
inc
ins
xlat
mov
jl
mov
cmp
loopne
rol
cmp
aad
push
jl
and
cmc
call
pop
cli
icebp
call
xchg
xchg
cmp
call
xchg
lods
jp
cmp
in
aas
jle
loopne
rol
cmp
out
adc
xchg
cs
mov
xchg
das
ret
cmp
mov
pop
daa
mov
loopne
rol
jle
loopne
rol
sar
mov
ds
pop
mov
sub
dec
sub
clc
push
xchg
sub
ret
aad
inc
jl
and
cmc
call
pop
cli
icebp
call
push
cld
js
pop
mov
sub
mov
ds
pop
mov
sub
in
sub
clc
ins
pop
xlat
mov
xchg
das
ret
cmp
mov
jl
(bad)
push
sub
sub
adc
ret
jmp
push
push
jge
xlat
mov
xchg
sub
sub
cmp
mov
sub
xor
call
lods
xchg
cmp
mov
xlat
ret
jns
pop
jle
xchg
(bad)
les
xchg
cmp
sub
jle
loopne
rol
cmp
out
adc
ins
mov
mov
xchg
sub
cmp
mov
xchg
sub
cmp
mov
cmc
and
add
ret
sub
cmp
sbb
mov
cmc
and
sub
ret
jl
fadd
icebp
cmc
and
sub
movs
mov
sub
icebp
call
xchg
xchg
cmp
call
xchg
inc
jnp
cmp
test
daa
mov
loopne
rol
cmp
in
test
xchg
sub
cmp
lea
xlat
mov
stc
and
and
cmp
jl
out
cmp
in
enter
mov
jl
push
rol
les
ins
xlat
mov
xchg
das
ret
cmp
mov
xchg
sub
cmp
or
test
mov
sub
xlat
ret
leave
cdq
das
ret
add
cmp
ins
aas
outs
ins
xlat
ins
xchg
or
cmp
in
adc
stc
xchg
sub
cmp
ret
add
clc
jo
adc
mov
xchg
sub
leave
popf
das
ret
add
cli
inc
xlat
cmp
xor
cmc
mov
push
inc
in
and
jns
pop
jle
gs
sbb
lods
xchg
cmp
push
push
rcl
inc
xlat
cmp
sub
ins
push
ins
mov
jl
pop
xlat
push
jl
add
jl
xchg
cwde
jge
cmp
movs
adc
fscale
adc
inc
sbb
call
fcomi
call
pop
sti
jge
pop
sti
adc
(bad)
cmp
loopne
lock
inc
cmp
ins
xlat
mov
inc
das
mov
pop
xlat
push
cld
ins
xlat
cmp
outs
mov
cmp
call
xchg
lock
cmp
stos
pop
jns
cmp
adc
icebp
sub
ins
icebp
sub
ins
xchg
neg
cmp
aad
sub
fcomi
call
pop
sti
icebp
sub
ins
icebp
sub
ins
xchg
out
cmp
cmp
jns
ins
xlat
mov
mov
xlat
cmp
mov
xor
and
push
jge
xchg
in
sub
xchg
fsubr
push
clc
jo
adc
dec
leave
pop
jle
adc
test
inc
xlat
cmp
mov
rcl
pop
adc
popa
jle
add
mov
push
jge
xlat
mov
and
adc
lods
int
cmp
dec
aas
jle
add
mov
aam
mov
ret
jmp
adc
fscale
add
push
shl
pop
pop
les
pop
sti
mov
sub
cmc
stos
mov
push
cmp
test
ins
pop
cli
std
call
xchg
das
xlat
push
pushf
fist
jle
loopne
les
retf
jl
shr
lods
dec
inc
cld
ds
sub
call
test
push
adc
and
sub
xlat
ds
pop
mov
sub
xlat
inc
adc
int3
imul
cmp
push
adc
sub
retf
sub
ins
adc
xlat
ds
pop
mov
sub
add
push
clc
push
in
push
stos
fdivr
out
shr
lods
dec
inc
cld
ds
sub
call
imul
xchg
das
xlat
push
jno
xchg
cmp
outs
xlat
cmp
test
fadd
fs
dec
js
mov
jl
das
retf
fwait
in
int3
adc
ret
or
xlat
push
in
loopne
cmp
in
pop
jge
loopne
les
ds
sub
and
stos
fdivrp
or
push
jbe
xchg
cmp
pusha
aas
jle
add
aas
xor
xchg
sub
mov
sub
cmc
stos
push
cmp
lods
xchg
cmp
mov
xlat
ret
jns
pop
jle
in
and
xlat
arpl
ss
jmp
in
test
fidivr
cmp
gs
stos
(bad)
jl
push
cmp
lods
xchg
cmp
mov
xlat
ret
jns
pop
jle
in
cmp
arpl
sti
stc
push
cmp
cmp
jl
daa
or
inc
add
aas
pop
outs
ins
xlat
mov
jae
pop
cmp
pop
inc
xlat
cmp
ins
mov
ror
fstp
pop
call
ret
cmp
cli
jl
pop
int3
push
popf
pop
cli
icebp
call
xchg
call
popf
(bad)
int3
cmc
stos
pop
mov
sub
xor
mov
sub
mov
mov
jae
push
mov
push
mov
push
mov
jmp
adc
mov
in
retf
xchg
in
cmp
mov
cmp
xchg
cmp
std
pop
jge
bound
shr
pusha
add
lods
xchg
cmp
add
pop
sbb
jmp
sar
rol
jl
cmp
popf
and
cmc
call
pop
cli
adc
gs
add
pop
mov
sub
in
sub
adc
xor
xor
rcl
rol
mov
sub
int
ins
xlat
mov
test
ret
cmp
ret
sub
dec
mov
ins
mov
push
js
xchg
cmp
call
xchg
cmp
mov
xchg
fwait
sub
std
stos
pop
xor
ins
pop
mov
sub
pop
xor
adc
pop
jle
in
and
adc
sub
outs
cld
ds
xlat
mov
ins
daa
mov
pop
pop
arpl
movs
adc
cmc
mov
jo
xlat
cmp
rol
inc
les
les
nop
sub
cmc
stos
mov
push
pushf
fist
jle
loopne
rol
(bad)
cmp
loopne
rol
fs
test
adc
cmp
mov
sar
in
ins
sub
scas
xor
push
retf
push
imul
ins
push
ins
mov
jl
pop
xlat
push
jl
add
jl
xchg
cwde
data16
cmp
movs
adc
fldcw
push
xor
out
shr
lods
dec
inc
cld
ds
sub
call
dec
gs
add
mov
ret
dec
popf
bound
test
xor
sti
(bad)
pusha
jl
add
mov
ret
dec
popf
bound
test
xor
jns
cmp
mov
push
jl
xlat
aam
pusha
xlat
cmp
test
les
pop
sti
adc
cld
cmp
xchg
loop
leave
das
xlat
aam
pusha
xlat
cmp
movs
adc
cmc
mov
fsubr
das
cmp
inc
cmc
mov
in
scas
push
xlat
pop
inc
xlat
cmp
push
fucomip
pop
stc
pop
jle
xchg
shr
js
xlat
cmp
call
xchg
test
in
mov
call
ins
pop
mov
sub
push
enter
ins
xchg
stos
fdivr
in
(bad)
call
aam
jl
xlat
ret
or
xlat
push
jl
xlat
mov
out
cmp
les
(bad)
movs
in
push
jl
push
rol
push
sub
sub
mov
cmp
in
push
adc
dec
test
pop
in
mov
call
in
and
adc
mov
cdq
sub
and
rcl
sub
test
ss
mov
(bad)
push
cmp
outs
sbb
aam
data16
cmp
sbb
push
cmp
shl
ins
pop
sti
cmc
call
push
xlat
loop
xlat
cmp
ins
pop
mov
sub
xchg
sar
shr
mov
cmp
pop
and
bound
dec
fs
dec
jae
das
push
or
cmp
int3
adc
out
sar
rol
jns
pop
jle
gs
sbb
lods
xchg
cmp
push
pop
(bad)
sub
(bad)
cmp
xchg
pop
(bad)
jmp
xlat
dec
cmp
ins
xlat
mov
mov
sub
imul
mov
adc
hlt
sub
vmovupd
cmp
sub
(bad)
push
(bad)
jge
adc
cmp
(bad)
fidivr
out
adc
icebp
bound
sub
mov
cmp
jl
pop
xor
movs
sub
(bad)
cmp
xchg
pop
(bad)
jmp
daa
(bad)
ds
aas
popa
jno
xlat
mov
jmp
(bad)
cmp
xchg
pop
inc
jnp
aas
push
jno
xlat
mov
or
aam
xchg
cmp
bound
sub
mov
cmp
jl
aas
jns
ins
xlat
mov
or
shr
push
hlt
sub
vmovupd
cmp
sub
(bad)
push
(bad)
jge
adc
cmp
xchg
cmp
out
adc
cmc
mov
fcomip
call
pop
mov
cmc
scas
pop
xor
movs
sub
(bad)
cmp
xchg
pop
inc
jnp
pop
xor
movs
sub
(bad)
cmp
xchg
pop
(bad)
jmp
xlat
mov
ins
aas
xchg
jo
xlat
mov
jmp
(bad)
cmp
xchg
pop
inc
jnp
pop
xor
movs
sub
(bad)
cmp
xchg
pop
(bad)
jmp
pop
pushf
ds
aas
inc
jo
xlat
mov
xchg
push
xlat
cmp
bound
sub
mov
cmp
jl
push
clc
js
jae
ds
pop
in
mov
push
bound
sub
mov
cmp
jl
push
clc
js
addr16
ds
pop
xor
movs
sub
(bad)
cmp
xchg
pop
inc
jnp
push
dec
xlat
cmp
test
clc
js
arpl
ds
sub
xchg
mov
and
dec
ins
xlat
ret
or
xlat
mov
jl
push
sbb
lods
xchg
cmp
push
mov
movs
adc
cmc
mov
nop
imul
sbb
mov
stos
aas
int
ins
xlat
aam
push
cmp
stos
mov
jl
aas
add
in
xchg
cmp
ins
mov
aam
xlat
cmp
call
fdivrp
or
std
jnp
xlat
mov
call
and
aam
push
cmp
fadd
rol
xlat
push
jge
test
int3
mov
sub
cmc
stos
mov
push
pushf
fist
cmp
in
or
add
xlat
cmp
test
jl
mov
mov
mov
sub
cwde
adc
cmp
pop
(bad)
push
pushf
fist
rol
sub
jmp
push
jle
ins
xlat
mov
jl
outs
hlt
jl
xlat
retf
pop
stc
pop
jle
in
sbb
lods
xchg
cmp
pusha
inc
cld
ds
pop
int3
mov
sub
cmc
stos
aas
lds
xlat
xchg
lods
and
mov
jb
div
mov
sub
loope
sub
and
retf
call
mov
stos
push
add
pop
aas
std
jbe
xlat
xor
shr
rol
(bad)
mov
call
arpl
scas
out
adc
hlt
icebp
jmp
push
sub
sub
xchg
sub
inc
mov
rol
xlat
cmp
scas
and
jge
fsqrt
stc
pop
sub
sbb
dec
xchg
sub
dec
in
cmp
stc
inc
sub
cmp
push
mov
cld
mov
ins
pop
mov
sub
push
call
xchg
out
cmp
loopne
pop
xchg
pusha
ret
and
retf
call
mov
loopne
adc
cmp
out
adc
ins
pop
mov
sub
dec
cmp
int3
mov
sub
cmc
stos
mov
cmp
add
mov
push
int3
repnz
cmp
sbb
jl
cmp
cmp
mov
mov
jle
in
rcr
stos
jge
in
aam
push
pop
jns
in
adc
jl
xlat
cmp
ins
aas
loope
ins
xlat
mov
popf
push
pop
nop
ins
push
pop
test
jns
push
daa
cmp
cmp
push
pop
pushf
ins
push
pop
cwde
ins
push
cli
inc
push
xlat
cmp
sub
ins
xchg
cmps
sar
in
shr
jg
xlat
ret
jns
pop
jle
pop
xlat
ret
dec
mov
push
jl
(bad)
push
jge
xlat
cmp
in
mov
push
jl
sbb
lea
jle
add
mov
cmp
into
daa
mov
ins
mov
push
jl
xlat
aam
imul
cmc
popf
and
cmc
call
pop
cli
icebp
call
xchg
xlat
cmp
jle
cmp
add
mov
aam
outs
xlat
cmp
popf
out
cmc
stos
mov
push
cld
out
cmp
repnz
jl
mov
ds
mov
aam
outs
xlat
cmp
xor
jle
add
aas
mov
mov
mov
ins
mov
aam
outs
xlat
cmp
jl
jle
add
aas
popa
jg
xlat
sti
jns
pop
jge
stc
xlat
cmp
in
cmp
pushf
out
cmp
(bad)
cmp
int3
daa
mov
ins
je
repz
aam
xchg
sub
xchg
push
fistp
in
pop
cmc
push
jnp
ds
push
cli
fnstenv
xlat
cmp
cmp
cmp
in
pop
cmc
push
jg
ds
mov
mov
mov
ret
cmp
push
xchg
xlat
cmp
test
clc
pop
fs
dec
xor
fbstp
cmp
mov
jl
push
in
xchg
sub
pop
jge
add
mov
aam
xlat
cmp
std
pop
jge
add
mov
push
jle
xlat
mov
sub
adc
jl
mov
sub
inc
mov
ins
aas
mov
ins
xlat
xor
push
xchg
stos
(bad)
sub
jae
rcl
xchg
(bad)
push
ret
sub
dec
adc
aam
push
sub
adc
aas
jle
add
mov
mov
mov
ret
cmp
mov
inc
daa
mov
loopne
in
xchg
sub
sar
pop
xlat
push
jl
xlat
push
jl
in
retf
adc
push
ins
dec
xlat
cmp
imul
int3
leave
das
xlat
aam
push
(bad)
jl
mov
push
mov
inc
movs
cmp
xchg
loop
leave
das
xlat
aam
push
(bad)
int3
cmc
stos
mov
cmp
ins
aas
and
fst
jle
test
mov
add
cmp
pop
addr16
ds
aas
pop
test
dec
mov
movs
adc
or
aas
ins
inc
lods
jl
xlat
cmp
dec
ja
aas
ins
inc
lods
jl
xlat
cmp
dec
jae
aas
ins
inc
lods
jl
xlat
cmp
dec
jg
aas
ins
inc
lods
jl
xlat
cmp
dec
jnp
aas
ins
inc
lods
jl
xlat
cmp
dec
addr16
aas
ins
inc
lods
jl
xlat
cmp
dec
arpl
aas
ins
inc
lods
jl
xlat
cmp
dec
outs
aas
aas
ins
inc
lods
jl
xlat
cmp
dec
imul
ins
inc
lods
jl
xlat
cmp
dec
pop
aas
aas
ins
inc
lods
jl
xlat
cmp
dec
adc
aas
ins
inc
lods
jl
xlat
cmp
dec
pop
aas
aas
ins
inc
lods
jl
xlat
cmp
dec
sbb
aas
ins
inc
lods
jl
xlat
cmp
dec
pop
aas
aas
ins
inc
lods
jl
xlat
cmp
dec
add
aas
ins
inc
lods
jl
xlat
cmp
dec
(bad)
aas
ins
inc
lods
jl
xlat
cmp
dec
or
aas
ins
inc
lods
jl
xlat
cmp
dec
aas
aas
aas
ins
inc
lods
jl
xlat
cmp
dec
cmp
aas
ins
inc
lods
jl
xlat
cmp
dec
daa
aas
aas
ins
inc
lods
jl
xlat
cmp
dec
and
aas
ins
inc
lods
jl
xlat
cmp
dec
das
aas
aas
ins
inc
lods
jl
xlat
cmp
dec
sar
aas
ins
inc
lods
jl
xlat
cmp
dec
(bad)
cmp
ins
inc
lods
jl
xlat
cmp
dec
ret
cmp
ins
inc
lods
jl
xlat
cmp
dec
iret
cmp
ins
inc
lods
jl
xlat
cmp
in
ins
sub
pop
sti
cld
push
cmc
dec
pop
pop
cmc
mov
sub
xlat
cmp
test
fdivrp
or
cmp
test
rcl
xor
test
iret
xchg
ins
nop
xor
push
cld
or
les
push
jl
jmp
cmp
xchg
add
jmp
ins
xlat
adc
cmp
imul
cmp
xchg
clc
stc
imul
cmp
cmp
xor
lods
outs
ret
adc
retf
movs
loopne
ret
imul
repz
out
sbb
jae
sti
mov
adc
cmp
dec
repz
ins
inc
lods
jl
xlat
cmp
dec
(bad)
cmp
ins
inc
lods
jl
xlat
cmp
dec
sti
cmp
ins
inc
lods
jl
xlat
cmp
dec
out
aas
ins
inc
lods
jl
xlat
cmp
dec
jecxz
aas
ins
inc
lods
jl
xlat
cmp
dec
out
cmp
ins
inc
lods
jl
xlat
cmp
dec
jmp
aas
ins
inc
lods
jl
xlat
cmp
dec
xchg
cmp
ins
inc
lods
jl
xlat
cmp
dec
xchg
cmp
ins
inc
lods
jl
xlat
cmp
dec
lahf
cmp
ins
inc
lods
jl
xlat
cmp
dec
fwait
cmp
ins
inc
lods
jl
xlat
cmp
dec
xchg
aas
ins
inc
lods
jl
xlat
cmp
dec
cmp
ins
inc
lods
jl
xlat
cmp
dec
(bad)
cmp
ins
inc
lods
jl
xlat
cmp
dec
mov
aas
ins
inc
lods
jl
xlat
cmp
dec
mov
aas
ins
inc
lods
jl
xlat
cmp
dec
mov
aas
ins
inc
lods
jl
xlat
cmp
dec
mov
lods
jl
xlat
cmp
dec
mov
lods
jl
xlat
cmp
dec
cmps
cmp
ins
inc
lods
jl
xlat
cmp
dec
mov
lods
jl
xlat
cmp
dec
scas
cmp
ins
inc
lods
jl
xlat
cmp
dec
stos
cmp
ins
inc
lods
jl
xlat
cmp
dec
push
cmp
ins
inc
lods
jl
xlat
cmp
dec
push
cmp
ins
inc
lods
jl
xlat
cmp
dec
pop
cmp
ins
inc
lods
jl
xlat
cmp
dec
pop
cmp
ins
inc
lods
jl
xlat
cmp
dec
inc
cmp
ins
inc
lods
jl
xlat
cmp
dec
inc
cmp
ins
inc
lods
jl
xlat
cmp
dec
dec
cmp
ins
inc
lods
jl
xlat
cmp
dec
dec
cmp
ins
inc
lods
jl
xlat
cmp
dec
ja
aas
ins
inc
lods
jl
xlat
cmp
dec
jae
aas
ins
inc
lods
jl
xlat
cmp
dec
jg
aas
ins
inc
lods
jl
xlat
cmp
dec
jnp
aas
ins
inc
lods
jl
xlat
cmp
dec
cmp
ins
inc
lods
jl
xlat
cmp
dec
arpl
aas
ins
inc
lods
jl
xlat
cmp
dec
outs
cmp
ins
inc
lods
jl
xlat
cmp
dec
imul
ins
inc
lods
jl
xlat
cmp
dec
pop
cmp
ins
inc
lods
jl
xlat
cmp
dec
adc
aas
ins
inc
lods
jl
xlat
cmp
dec
pop
cmp
ins
inc
lods
jl
xlat
cmp
dec
sbb
aas
ins
inc
lods
jl
xlat
cmp
dec
pop
cmp
ins
inc
lods
jl
xlat
cmp
dec
add
aas
ins
inc
lods
jl
xlat
cmp
dec
(bad)
ins
inc
lods
jl
xlat
cmp
dec
or
aas
ins
inc
lods
jl
xlat
cmp
dec
aaa
cmp
ins
inc
lods
jl
xlat
cmp
dec
xor
aas
ins
inc
lods
jl
xlat
cmp
dec
aas
cmp
ins
inc
lods
jl
xlat
cmp
dec
cmp
aas
ins
inc
lods
jl
xlat
cmp
dec
daa
cmp
ins
inc
lods
jl
xlat
cmp
dec
and
aas
ins
inc
lods
jl
xlat
cmp
dec
das
cmp
ins
inc
lods
jl
xlat
cmp
dec
sub
aas
ins
inc
lods
jl
xlat
cmp
dec
xlat
cmp
ins
inc
lods
jl
xlat
cmp
dec
sar
aas
ins
inc
lods
jl
xlat
cmp
dec
fistp
aas
ins
inc
lods
jl
xlat
cmp
dec
fstp
aas
ins
inc
lods
jl
xlat
cmp
dec
(bad)
cmp
ins
inc
lods
jl
xlat
cmp
dec
ret
cmp
ins
inc
lods
jl
xlat
cmp
dec
iret
cmp
ins
inc
lods
jl
xlat
cmp
dec
retf
cmp
ins
inc
lods
jl
xlat
cmp
dec
(bad)
cmp
ins
inc
lods
jl
xlat
cmp
dec
sti
cmp
ins
inc
lods
jl
xlat
cmp
dec
out
aas
ins
inc
lods
jl
xlat
cmp
dec
jecxz
aas
ins
inc
lods
jl
xlat
cmp
dec
out
cmp
ins
inc
lods
jl
xlat
cmp
dec
jmp
aas
ins
inc
lods
jl
xlat
cmp
dec
xchg
cmp
ins
inc
lods
jl
xlat
cmp
dec
xchg
cmp
ins
inc
lods
jl
xlat
cmp
dec
lahf
cmp
ins
inc
lods
jl
xlat
cmp
dec
fwait
cmp
ins
inc
lods
jl
xlat
cmp
dec
xchg
aas
ins
inc
lods
jl
xlat
cmp
dec
cmp
ins
inc
lods
jl
xlat
cmp
dec
(bad)
cmp
ins
inc
lods
jl
xlat
cmp
dec
mov
aas
ins
inc
lods
jl
xlat
cmp
dec
mov
aas
ins
inc
lods
jl
xlat
cmp
dec
mov
aas
ins
inc
lods
jl
xlat
cmp
dec
mov
lods
jl
xlat
cmp
dec
mov
lods
jl
xlat
cmp
dec
cmps
cmp
ins
inc
lods
jl
xlat
cmp
dec
mov
lods
jl
xlat
cmp
dec
scas
cmp
ins
inc
lods
jl
xlat
cmp
dec
stos
cmp
ins
inc
lods
jl
xlat
cmp
dec
push
cmp
ins
inc
lods
jl
xlat
cmp
dec
push
cmp
ins
inc
lods
jl
xlat
cmp
dec
pop
cmp
ins
inc
lods
jl
xlat
cmp
dec
inc
cmp
ins
inc
lods
jl
xlat
cmp
dec
dec
cmp
ins
inc
lods
jl
xlat
cmp
dec
jae
aas
ins
inc
lods
jl
xlat
cmp
dec
jg
aas
ins
inc
lods
jl
xlat
cmp
dec
jnp
aas
ins
inc
lods
jl
xlat
cmp
dec
cmp
ins
inc
lods
jl
xlat
cmp
dec
arpl
aas
ins
inc
lods
jl
xlat
cmp
dec
outs
cmp
ins
inc
lods
jl
xlat
cmp
dec
imul
ins
inc
lods
jl
xlat
cmp
dec
pop
cmp
ins
inc
lods
jl
xlat
cmp
dec
sbb
aas
ins
inc
lods
jl
xlat
cmp
dec
pop
cmp
ins
inc
lods
jl
xlat
cmp
dec
add
aas
ins
inc
lods
jl
xlat
cmp
dec
(bad)
aas
ins
inc
lods
jl
xlat
cmp
dec
or
aas
ins
inc
lods
jl
xlat
cmp
dec
aaa
cmp
ins
inc
lods
jl
xlat
cmp
dec
xor
aas
ins
inc
lods
jl
xlat
cmp
dec
aas
cmp
ins
inc
lods
jl
xlat
cmp
dec
cmp
aas
ins
inc
lods
jl
xlat
cmp
dec
daa
cmp
ins
inc
lods
jl
xlat
cmp
dec
and
aas
ins
inc
lods
jl
xlat
cmp
dec
das
cmp
ins
inc
lods
jl
xlat
cmp
dec
sub
aas
ins
inc
lods
jl
xlat
cmp
dec
xlat
cmp
ins
inc
lods
jl
xlat
cmp
dec
sar
aas
ins
inc
lods
jl
xlat
cmp
dec
fistp
aas
ins
inc
lods
jl
xlat
cmp
dec
fstp
aas
ins
inc
lods
jl
xlat
cmp
dec
(bad)
cmp
ins
inc
lods
jl
xlat
.byte
