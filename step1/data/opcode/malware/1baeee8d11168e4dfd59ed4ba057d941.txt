cwde
add
push
sbb
test
cwde
mov
or
in
or
mov
inc
mov
mov
int3
dec
fcom
add
mov
nop
clc
and
mov
int3
clc
push
fadd
sbb
add
test
mov
push
int3
call
jo
cwde
inc
or
inc
ins
mov
cmp
nop
cld
pusha
movs
movs
fdiv
add
in
or
fsubr
test
inc
pusha
mov
mov
push
push
movs
nop
xor
mov
inc
lods
(bad)
in
mov
test
cmp
and
sub
inc
add
inc
push
cmp
sbb
nop
pushf
test
mov
nop
cld
int3
movs
test
call
mov
sbb
cwde
push
add
int3
in
dec
cld
mov
test
or
hlt
nop
sbb
dec
js
mov
jo
and
dec
dec
push
mov
adc
sub
test
and
cld
xor
or
in
cmp
sbb
clc
add
mov
test
add
pushf
push
add
in
add
loopne
xor
add
mov
mov
loopne
add
lods
mov
lods
or
fadd
mov
hlt
nop
add
cmp
call
inc
push
and
adc
or
test
cmp
je
loopne
xor
fmul
nop
adc
fdiv
add
mov
mov
inc
cld
test
test
inc
mov
xor
mov
mov
mov
mov
sub
mov
add
or
mov
add
or
je
hlt
sbb
sbb
dec
add
push
pop
cmp
cmp
cmp
je
fcomp
lods
pushf
lods
nop
nop
and
nop
xor
push
mov
add
test
in
push
push
push
mov
sbb
mov
test
nop
add
mov
sbb
push
mov
push
cld
add
or
adc
mov
mov
mov
nop
fcomp
loopne
mov
fcom
xchg
adc
or
pushf
call
call
mov
mov
nop
inc
xor
and
and
pop
inc
lods
nop
push
and
add
test
clc
sbb
mov
mov
cmp
add
mov
mov
adc
mov
push
pop
lods
in
cmp
test
add
fsub
clc
push
push
cmp
nop
or
mov
int3
and
cld
push
and
xor
cmp
call
xchg
loopne
cmp
or
sbb
cmp
add
adc
mov
mov
mov
or
fmul
cmp
mov
or
cmp
fadd
call
fsub
mov
or
cmp
xor
or
mov
cmp
cmp
xor
mov
lods
xor
mov
lods
cmp
mov
add
xor
mov
mov
cmp
mov
cmp
cmp
xor
cmp
add
mov
mov
xor
cmp
add
mov
mov
call
or
mov
mov
add
xor
add
add
cmp
mov
add
add
xor
fdiv
or
mov
call
mov
xor
mov
cmp
xor
mov
add
lods
xor
or
nop
ror
push
mov
dec
add
xor
add
and
add
mov
test
inc
sub
fsubr
mov
or
fcomp
sub
push
movs
sbb
mov
sbb
pop
loopne
nop
adc
push
mov
cld
cld
dec
js
add
mov
in
xor
dec
jl
sbb
fadd
push
mov
push
loopne
nop
js
cmp
pusha
xor
dec
sbb
xor
in
add
mov
nop
les
movs
and
inc
mov
ins
add
movs
mov
and
add
test
mov
mov
inc
and
adc
xor
and
movs
movs
cmp
cmp
add
clc
mov
in
pushf
add
adc
nop
inc
xor
cmp
push
pop
mov
mov
add
push
cmp
jo
mov
mov
mov
test
inc
cwde
jo
jo
sub
in
call
add
jl
jo
push
test
cmp
sbb
inc
test
mov
push
mov
pop
sbb
cld
cwde
cwde
mov
sbb
dec
call
add
cmp
push
test
sub
inc
mov
dec
mov
jl
pushf
adc
mov
xor
lock
lock
cld
or
inc
add
clc
push
cmp
and
mov
add
push
cmp
adc
add
xor
dec
mov
adc
fadd
test
sbb
xor
dec
xor
add
in
mov
hlt
cwde
push
jo
test
and
cmp
pop
dec
in
(bad)
loopne
sbb
or
lods
mov
push
add
test
jo
mov
mov
add
add
mov
push
fs
nop
xor
mov
and
mov
push
test
add
sub
xchg
pop
add
(bad)
xor
or
fsubr
push
hlt
or
cmp
or
fsubr
loopne
loopne
test
je
in
push
in
in
cmp
test
je
(bad)
in
fcomp
fcom
sbb
fadd
xor
hlt
or
hlt
fmul
mov
mov
fcomp
mov
xor
mov
push
nop
cmp
adc
call
mov
mov
or
or
hlt
or
mov
mov
lods
lods
cmp
sub
test
sbb
mov
fsubr
mov
fdiv
adc
push
loopne
hlt
nop
mov
push
fmul
sbb
xor
hlt
add
fmul
mov
mov
mov
sbb
or
xchg
hlt
lods
lods
sub
sbb
loopne
test
or
or
cmp
lods
mov
push
mov
xchg
call
sbb
or
mov
push
pop
sub
or
mov
cmp
push
push
xchg
mov
cmp
add
add
sbb
add
add
fsubr
add
or
and
xchg
nop
sbb
pop
loopne
sub
or
or
or
push
test
push
push
xchg
fdivr
xor
hlt
mov
mov
add
nop
cmp
add
test
sbb
pop
fadd
push
or
call
mov
or
call
or
mov
cmp
sbb
mov
fsub
mov
fcom
push
inc
add
sbb
lods
(bad)
push
call
push
xor
fs
add
test
push
add
and
nop
sbb
call
pop
cmp
xor
in
and
push
mov
add
nop
inc
pushf
push
adc
mov
inc
int3
push
add
mov
pop
lock
mov
add
rol
in
cld
hlt
mov
mov
jo
push
loopne
mov
nop
mov
nop
cmp
push
clc
cmp
mov
nop
call
in
or
sub
add
and
hlt
or
inc
add
sbb
call
sub
mov
push
push
sbb
sbb
test
nop
mov
call
mov
mov
sbb
and
or
mov
cmp
fadd
add
cwde
sub
je
mov
xor
int3
mov
test
push
fdivr
fsubr
push
in
xor
add
fmul
xor
or
mov
cmp
add
push
or
sub
push
mov
call
sbb
mov
add
or
sub
mov
add
mov
mov
mov
push
or
(bad)
xor
mov
xor
xor
push
mov
push
add
mov
pop
lods
call
add
add
sbb
in
mov
or
mov
or
add
pop
fmul
cmp
sbb
in
call
mov
lods
fcom
sub
or
mov
fcomp
call
sbb
mov
fcomp
or
mov
fdiv
sbb
pop
or
or
and
adc
sbb
test
cmp
or
or
je
hlt
adc
or
fadd
xor
xor
in
mov
add
adc
mov
test
loopne
in
lods
nop
mov
xor
add
pop
xor
push
mov
mov
test
cmp
je
add
inc
pushf
dec
add
or
xor
sbb
push
xor
xor
add
fsubr
mov
push
adc
mov
push
sbb
push
mov
mov
adc
add
or
sbb
fcom
mov
sbb
mov
mov
nop
or
inc
nop
lods
add
mov
in
mov
call
adc
call
add
pop
fadd
or
sub
sub
mov
or
pop
test
fdivr
add
sbb
add
xor
mov
call
cmp
test
push
mov
clc
nop
lods
lods
push
les
add
clc
add
mov
inc
nop
mov
or
mov
xor
lods
clc
inc
or
mov
or
nop
add
or
hlt
nop
js
nop
mov
mov
clc
and
mov
inc
push
pop
cwde
inc
nop
inc
int3
inc
and
xor
and
hlt
clc
in
call
inc
lods
fdiv
fsubr
mov
mov
xor
add
fcomp
inc
push
sbb
nop
int3
ins
push
xor
mov
xchg
je
loopne
inc
mov
sbb
mov
mov
xor
push
mov
mov
cld
clc
(bad)
rol
lods
or
push
mov
in
sub
loopne
call
mov
add
mov
inc
mov
in
sub
inc
or
mov
nop
cld
dec
loopne
xor
mov
pop
call
clc
adc
sbb
dec
cld
in
sbb
add
int3
or
in
and
test
mov
mov
in
push
push
fsubr
in
ins
loopne
or
hlt
sbb
xor
cwde
movs
push
cmp
cmp
or
mov
cmp
mov
cmp
in
jl
push
movs
dec
mov
or
sbb
add
mov
call
mov
mov
mov
clc
in
js
mov
(bad)
mov
mov
add
mov
push
add
inc
cmp
cmp
call
jl
add
call
mov
test
mov
call
in
ins
sbb
cmp
push
sbb
add
push
sbb
mov
in
pushf
js
cwde
movs
ins
push
sub
mov
push
sbb
and
mov
test
fs
in
inc
test
mov
in
jo
push
je
mov
add
cld
or
add
je
xor
cmp
push
dec
in
js
add
or
sbb
hlt
sub
nop
push
sar
dec
int3
add
shr
in
mov
mov
mov
js
push
or
dec
call
pushf
test
add
lods
in
mov
mov
hlt
or
fmul
test
mov
hlt
xor
movs
in
push
cld
or
mov
mov
mov
hlt
mov
call
inc
inc
xor
adc
dec
ins
add
mov
mov
jo
push
xor
or
cmp
mov
je
mov
call
dec
nop
cmp
ins
cmp
adc
mov
add
or
rcr
push
clc
inc
je
push
in
call
cmp
cld
push
in
dec
add
add
sbb
fcom
or
fdiv
and
adc
mov
add
add
mov
clc
fmul
mov
dec
sbb
les
dec
mov
lods
mov
sub
inc
mov
fcom
add
and
clc
cld
push
test
call
sub
fcomp
adc
lods
dec
sbb
dec
test
add
push
nop
mov
pushf
inc
inc
xor
cmp
cld
mov
mov
cmp
add
sbb
dec
cmp
or
mov
pushf
test
and
add
lods
xchg
mov
mov
sbb
add
or
xchg
sub
fmul
adc
adc
push
xor
dec
pushf
loopne
fcom
mov
mov
test
lods
hlt
add
test
push
mov
or
add
call
xchg
mov
lods
and
mov
nop
test
adc
add
push
cld
nop
loopne
cmp
xor
fdivr
cmp
dec
push
test
cld
pop
and
nop
lods
(bad)
push
add
sbb
cld
or
and
mov
loopne
mov
hlt
inc
xor
mov
mov
cmp
fsub
je
nop
call
add
pop
cmp
and
nop
clc
nop
sbb
mov
sub
adc
or
test
mov
add
pop
leave
dec
add
cmp
and
adc
or
or
or
ret
bound
dec
inc
add
adc
dec
dec
leave
add
inc
add
add
fiadd
or
add
inc
inc
add
adc
pop
add
cmp
mov
add
add
add
rcl
out
add
or
bound
add
add
adc
mov
add
push
or
sub
adc
(bad)
push
test
mov
add
repnz
sbb
and
inc
mov
inc
dec
inc
test
add
or
or
dec
inc
and
or
inc
add
add
nop
dec
or
sbb
inc
and
les
inc
adc
push
jno
add
adc
add
adc
add
or
dec
xchg
and
adc
add
add
adc
add
rol
mov
add
adc
xor
add
add
dec
dec
adc
push
push
add
add
sub
or
or
inc
inc
adc
sub
add
and
and
mov
inc
sub
adc
or
push
mov
inc
push
test
inc
inc
dec
ror
and
popa
push
and
or
nop
pop
xor
inc
pusha
add
dec
add
adc
inc
loope
add
adc
jne
mov
and
add
adc
and
add
adc
and
or
inc
mov
push
inc
and
fs
adc
inc
add
fs
pop
sbb
push
adc
test
dec
add
ja
sbb
inc
or
mov
cmp
push
add
sti
add
test
adc
adc
adc
adc
sub
add
pop
das
mov
arpl
mov
add
inc
lds
test
adc
nop
ins
inc
and
test
add
add
bound
mov
rol
add
out
push
add
add
sbb
push
or
sbb
adc
add
mov
add
jno
loopne
or
inc
sbb
xor
xchg
or
test
popa
add
xchg
add
add
pop
adc
adc
add
push
and
daa
adc
adc
or
push
jo
add
mov
and
inc
add
mov
add
push
push
add
add
or
or
or
or
add
add
and
nop
mov
add
js
fadd
and
and
xchg
adc
and
add
inc
add
add
es
or
nop
adc
or
pop
add
mov
sub
inc
inc
mov
test
inc
add
adc
add
xor
dec
inc
inc
and
fwait
stos
xor
sub
push
xor
add
xchg
or
add
dec
movs
in
push
add
add
call
or
sbb
sbb
dec
inc
repnz
adc
and
adc
sub
xchg
add
xchg
inc
test
call
add
call
xchg
add
or
push
shl
imul
movs
add
push
or
push
add
adc
push
add
and
adc
adc
inc
(bad)
jmp
dec
retf
and
add
xchg
sub
add
or
adc
adc
or
inc
add
and
or
add
lods
xor
inc
inc
add
inc
add
or
and
mov
(bad)
and
push
cmp
xor
xor
add
adc
add
inc
and
and
or
dec
and
sar
and
inc
add
adc
and
dec
add
inc
shl
add
add
retf
add
and
mov
inc
or
or
and
int
adc
add
adc
push
or
adc
mov
add
add
or
or
pop
imul
inc
sbb
adc
add
cwde
dec
adc
push
adc
sahf
and
sbb
rol
pusha
adc
mov
adc
adc
js
and
inc
nop
sbb
sub
int
xchg
jb
xchg
dec
add
shl
inc
das
mov
inc
add
add
add
push
mov
add
or
sub
adc
shl
mov
mov
add
push
xchg
shl
add
add
inc
add
and
add
add
sbb
aam
mov
and
inc
dec
and
adc
add
add
sbb
sub
xor
adc
add
mov
add
add
dec
add
adc
and
sbb
push
scas
push
or
inc
inc
dec
and
xchg
add
inc
mov
add
push
inc
sub
add
retf
add
int3
inc
sub
inc
adc
adc
popa
ret
add
add
xor
or
sbb
or
inc
ror
and
sub
mov
add
add
add
sub
or
and
jo
push
and
add
add
and
add
pop
inc
add
mov
xor
mov
add
add
test
xor
mov
dec
push
adc
les
and
rcl
adc
and
push
inc
push
add
add
add
add
dec
add
adc
add
inc
or
mov
in
and
sub
or
add
pusha
sbb
dec
inc
inc
xor
sbb
pusha
mov
add
lds
mov
pop
add
mov
add
cwde
xor
and
add
retf
inc
xchg
and
inc
cmp
inc
les
add
add
xchg
mov
inc
nop
enter
pushf
add
add
add
inc
inc
stos
or
cwde
and
inc
add
add
add
push
sub
test
out
add
nop
pop
add
add
test
adc
add
add
and
add
and
push
inc
push
inc
dec
mov
adc
push
add
push
xor
push
pusha
mov
pusha
rcr
adc
inc
adc
add
mov
xchg
inc
sbb
inc
add
add
add
mov
push
or
inc
or
push
xchg
sub
add
inc
inc
inc
and
adc
adc
call
add
add
inc
cmps
mov
adc
enter
rcl
lods
bound
dec
or
ret
xor
mov
fwait
or
xchg
push
inc
adc
add
adc
add
inc
xchg
adc
ins
add
add
inc
mov
push
add
or
add
add
or
adc
rol
mov
mov
pusha
push
add
add
dec
xor
mov
and
adc
xor
inc
xor
rol
add
movs
push
and
inc
add
sub
rcl
add
popa
jo
es
inc
and
lock
sbb
add
add
dec
sub
mov
mov
add
imul
adc
or
and
add
and
add
mov
and
dec
adc
adc
dec
adc
adc
nop
and
and
or
add
add
popa
sub
adc
add
add
xor
and
stos
adc
ret
adc
add
pusha
mov
cwde
pop
add
mov
mov
popa
rol
xchg
dec
or
add
inc
aad
xor
add
jo
sub
or
inc
xchg
inc
adc
xor
mov
add
lock
add
add
or
and
mov
inc
add
cmp
add
je
inc
and
pop
inc
xchg
inc
mov
push
push
inc
mov
fmul
pusha
and
inc
mov
adc
lds
inc
dec
push
push
push
and
xchg
retf
test
add
inc
or
mov
adc
sub
inc
and
inc
or
or
jbe
add
aam
and
pop
add
or
popa
inc
push
push
push
add
inc
sbb
adc
pop
nop
dec
jle
xor
or
and
cmp
add
inc
inc
add
sub
inc
adc
sub
pusha
call
mov
or
ins
or
rol
test
and
mov
jno
add
add
add
movs
add
or
add
and
or
popa
adc
sub
add
loopne
aad
add
shl
add
and
mov
and
sbb
xchg
outs
pop
or
and
adc
mov
push
nop
add
dec
add
add
popa
add
pop
adc
and
sub
pop
popa
or
or
stos
adc
and
and
and
inc
or
mov
or
test
mov
adc
fiadd
add
add
mov
pop
and
inc
movs
add
push
je
or
dec
jo
sub
cwde
je
inc
inc
push
nop
ins
adc
shl
dec
push
add
sahf
inc
and
or
add
adc
inc
or
inc
or
inc
pusha
push
adc
add
or
xchg
inc
and
xor
pmaddwd
add
adc
add
addr16
pusha
inc
or
and
add
xchg
add
adc
fs
inc
inc
push
leave
popa
mov
pop
les
add
test
and
and
movs
dec
repnz
add
inc
xchg
xchg
dec
add
dec
add
add
inc
dec
adc
xchg
test
rol
inc
adc
lock
or
adc
pop
inc
sub
mov
retf
ins
push
xchg
or
add
add
add
mov
rcr
ins
or
add
xor
jo
add
pusha
sbb
add
add
mov
xchg
add
and
add
mov
dec
xchg
and
add
push
adc
add
(bad)
adc
add
hlt
or
push
add
add
or
and
add
pop
push
int3
mov
outs
push
mov
sub
and
leave
add
add
jmp
add
mov
dec
xor
and
inc
adc
add
rol
push
add
test
add
test
add
add
cmps
add
push
inc
ror
je
add
movs
and
and
dec
sbb
mov
pushf
add
add
les
loopne
inc
mov
adc
mov
and
sbb
xor
or
enter
nop
inc
pusha
or
xor
inc
push
rcl
mov
jns
mov
xchg
inc
add
or
inc
add
xchg
add
inc
push
push
pop
sub
add
inc
and
adc
inc
add
xchg
xor
add
and
adc
inc
inc
dec
pusha
and
inc
adc
or
add
add
sbb
push
movs
add
and
rol
sbb
inc
inc
and
inc
add
add
or
adc
inc
rol
xchg
add
popa
sbb
je
inc
add
and
inc
sub
and
inc
add
add
add
and
mov
adc
nop
test
add
xor
xor
inc
cs
ret
test
rol
repnz
push
add
add
and
enter
mov
push
add
inc
sbb
add
inc
movs
test
and
adc
dec
mov
or
rol
movs
or
adc
call
sub
pop
inc
and
add
add
add
mov
xchg
fld
and
add
add
add
sub
or
adc
add
inc
mov
pop
xchg
or
add
pop
add
movs
push
add
xchg
sub
or
or
arpl
xlat
rcl
pop
dec
shl
add
and
add
or
dec
add
and
inc
add
xchg
and
inc
adc
mov
dec
push
bound
or
retf
adc
rol
push
pop
sub
and
inc
call
mov
push
or
inc
push
or
or
mov
adc
add
inc
test
add
or
ret
sbb
inc
js
adc
pop
mov
inc
add
add
aam
rol
add
jo
xor
xor
adc
add
xor
sub
or
jecxz
test
adc
inc
adc
and
leave
adc
add
test
add
or
pop
inc
loopne
add
inc
add
mov
add
sub
adc
retf
add
inc
add
mov
adc
add
add
and
add
je
inc
mov
or
add
push
adc
cmp
or
or
add
xor
and
arpl
adc
cdq
in
push
movs
add
nop
or
inc
add
add
or
and
adc
or
add
cmp
add
inc
adc
xchg
inc
mov
ins
add
dec
or
dec
mov
add
add
add
add
adc
mov
inc
and
add
add
add
rol
inc
push
mov
mov
push
or
mov
add
add
add
inc
add
mov
inc
add
and
add
push
ins
add
add
lds
inc
sbb
inc
or
inc
add
dec
bound
or
adc
test
ds
stos
or
add
pop
adc
call
add
dec
add
les
mov
or
cmc
or
add
inc
add
sbb
push
sub
add
add
xchg
fldcw
ret
add
add
adc
inc
push
adc
cmp
push
add
or
add
sub
inc
inc
add
rol
lds
add
sbb
and
pop
rol
rol
xchg
nop
add
fiadd
bound
or
push
push
fst
daa
inc
nop
js
push
inc
or
push
inc
nop
adc
dec
xlat
inc
or
das
push
dec
sbb
add
and
and
add
inc
inc
or
xchg
add
add
inc
xor
mov
pop
inc
nop
les
add
add
add
mov
xchg
ss
adc
or
adc
or
movs
mov
fs
shl
adc
and
adc
push
or
inc
add
add
add
add
and
shl
adc
or
jo
add
inc
ret
add
inc
movs
inc
mov
and
pop
push
push
push
add
call
adc
mov
inc
pusha
add
dec
inc
adc
push
stos
adc
or
mov
or
add
add
sub
lods
dec
and
jae
ret
or
and
movs
nop
nop
sub
push
and
adc
test
pop
dec
inc
add
stos
add
sbb
xchg
inc
shr
add
inc
add
add
adc
inc
adc
push
or
inc
or
sub
adc
add
sbb
adc
and
jns
mov
and
pop
jbe
add
add
and
add
les
add
add
mov
shl
mov
add
push
add
inc
and
add
and
rol
ret
inc
pop
pop
nop
push
add
adc
xor
sbb
and
inc
add
inc
add
and
mov
push
adc
and
push
add
add
add
add
jb
mov
and
add
inc
and
push
or
leave
add
or
push
and
or
and
dec
inc
adc
adc
inc
adc
add
inc
dec
sbb
or
inc
(bad)
int3
inc
add
jo
inc
add
or
add
add
or
adc
mov
sbb
mov
adc
adc
inc
xchg
adc
and
test
add
push
sbb
and
daa
xchg
and
xor
fld
inc
add
add
and
add
xor
and
gs
and
dec
push
or
sub
and
mov
dec
sub
add
push
or
add
xor
add
inc
and
or
add
or
push
or
add
or
or
add
mov
cmp
and
and
icebp
adc
sub
mov
add
pusha
add
retf
sub
xor
and
cdq
test
and
inc
shl
add
and
and
ror
or
add
add
(bad)
or
push
sbb
dec
add
outs
add
add
nop
sbb
add
push
add
and
nop
fcom
sub
pusha
mov
pop
mov
and
push
add
add
add
mov
adc
add
cmp
inc
push
retf
cmp
or
or
adc
sub
add
or
and
or
inc
add
adc
xchg
mov
xchg
push
and
push
adc
adc
add
add
nop
sbb
xchg
inc
ins
inc
add
sbb
add
sbb
and
and
adc
add
push
es
bound
movs
sbb
pop
push
jo
dec
sbb
add
adc
add
or
mov
xor
cmp
fisttp
popa
dec
add
mov
or
inc
push
dec
mov
pusha
xchg
add
dec
stc
leave
inc
dec
add
add
ins
add
and
sub
add
mov
push
cwde
nop
cdq
add
and
add
inc
mov
mov
adc
and
add
bound
pop
inc
xchg
mov
add
and
add
call
adc
inc
dec
adc
inc
test
adc
mov
mov
xor
or
add
sar
loop
pusha
dec
push
add
add
inc
inc
enter
add
adc
and
or
and
in
sub
sub
add
add
mov
inc
fs
sbb
xor
add
inc
adc
or
add
add
inc
add
or
xchg
call
inc
xchg
sbb
mov
ss
or
and
rol
push
mov
push
sbb
rcl
cmp
add
xor
fld
or
sub
inc
push
nop
add
mov
push
push
add
or
cmp
mov
add
arpl
lods
daa
(bad)
ss
add
stos
push
add
sbb
push
push
adc
fs
add
and
stos
leave
and
adc
and
enter
sub
adc
cmp
sub
or
push
or
add
add
add
add
and
xchg
call
add
add
mov
or
inc
cmp
fs
mov
mov
fld
inc
mov
mov
add
add
sar
and
inc
add
add
sbb
adc
pusha
inc
add
ror
pop
inc
sbb
inc
add
add
nop
and
push
fidiv
pusha
clc
add
mov
push
mov
add
adc
sub
adc
add
add
add
enter
jo
add
inc
add
add
add
enter
add
add
mov
test
dec
sub
push
add
adc
adc
add
and
mov
xor
cmp
cdq
add
sbb
inc
adc
or
mov
add
add
cwde
test
add
and
xor
inc
adc
inc
adc
add
add
adc
or
sbb
dec
call
add
mov
stos
test
dec
lea
add
pusha
adc
dec
inc
sbb
sub
adc
mov
or
inc
inc
and
add
and
or
push
and
dec
add
add
inc
add
and
dec
icebp
add
jo
adc
push
add
adc
add
add
add
mov
or
xchg
or
add
lods
add
sub
or
inc
mov
inc
push
or
and
xor
adc
loopne
test
add
pop
or
add
add
in
push
inc
or
adc
fs
add
xor
add
and
add
sub
or
add
add
test
add
test
add
add
adc
pusha
xor
int3
add
adc
arpl
inc
mov
add
and
or
ret
sub
das
add
add
inc
dec
dec
add
push
add
movs
aam
and
and
add
add
mov
push
mov
sub
rcr
sbb
inc
add
inc
or
push
add
cwde
and
or
jbe
bound
push
push
push
xchg
add
add
shl
mov
enter
or
inc
xchg
rcl
movs
sbb
add
adc
popa
or
inc
and
inc
add
inc
shl
or
dec
push
add
adc
jno
mov
add
inc
and
or
add
and
adc
add
xor
adc
add
add
and
push
add
inc
or
cmp
xor
or
inc
test
sub
push
rol
dec
or
and
fadd
add
mov
add
rcl
enter
and
add
add
inc
add
test
ins
add
adc
or
inc
test
sub
and
xchg
ret
and
push
xor
push
and
fs
lods
add
ror
push
or
loopne
sub
mov
sbb
sbb
adc
adc
add
inc
or
add
add
inc
inc
or
sub
ss
add
call
mov
inc
imul
jo
cmps
add
add
rcr
add
stos
push
xchg
or
add
add
sub
xor
inc
adc
or
adc
or
and
and
adc
pop
adc
mov
pop
sbb
add
push
adc
sub
and
jo
push
inc
cs
pop
or
and
and
jo
rcl
add
mov
mov
inc
nop
sub
or
cmp
mov
or
nop
les
nop
and
les
sub
add
or
add
dec
or
xor
push
push
add
add
adc
push
add
or
sbb
or
add
add
je
inc
popf
or
arpl
into
or
adc
inc
add
add
daa
add
add
xchg
inc
push
add
add
and
ror
and
and
shl
inc
sub
and
add
mov
sbb
push
dec
add
adc
mov
adc
add
add
or
push
adc
adc
add
push
add
mov
inc
jns
dec
inc
inc
add
and
and
or
rol
pusha
and
add
jp
test
sbb
rol
nop
sub
sbb
inc
add
push
or
and
or
sub
cmp
aad
mov
call
xor
add
add
and
add
add
push
ror
add
nop
adc
or
add
adc
and
xchg
add
test
xor
dec
or
push
inc
pop
add
or
ret
push
push
or
adc
sub
gs
add
and
add
cmp
and
add
inc
mov
movs
add
sbb
or
enter
popa
inc
add
push
fild
leave
test
inc
add
push
mov
sar
mov
or
retf
and
add
and
pusha
add
mov
sub
or
add
push
add
and
mov
xor
sbb
lock
pusha
add
cmp
(bad)
in
add
jo
adc
inc
and
inc
les
fmul
daa
add
push
inc
rol
push
fs
push
mov
add
xor
mov
add
add
test
loopne
mov
inc
or
add
add
xor
inc
clc
and
add
add
shl
add
add
add
dec
or
inc
add
add
push
and
adc
add
cmp
inc
push
and
or
bound
add
cdq
js
adc
or
add
add
(bad)
adc
xor
add
and
nop
cwde
add
mov
dec
test
bound
mov
push
add
rol
adc
add
add
cmp
test
add
add
xor
test
and
add
push
test
adc
rol
inc
or
es
les
adc
call
adc
pusha
add
mov
xor
les
dec
add
add
or
clc
add
add
add
test
or
and
lock
adc
add
cmps
sub
or
inc
jae
cdq
inc
inc
or
dec
and
inc
rcl
xchg
inc
mov
push
and
mov
add
add
add
pop
dec
mov
push
inc
add
add
jno
inc
adc
and
and
aam
jp
or
push
inc
add
add
push
call
push
adc
inc
adc
add
jno
pop
add
adc
xchg
sub
add
xor
add
xor
inc
add
or
dec
add
dec
and
add
push
test
inc
dec
and
add
dec
inc
inc
push
add
inc
adc
add
inc
mov
or
or
adc
add
xor
adc
sahf
add
sbb
inc
test
or
and
push
add
adc
stos
or
pop
add
push
add
rol
adc
or
add
retf
inc
add
imul
dec
loopne
sub
inc
adc
inc
inc
push
mov
inc
add
mov
push
rol
popa
xor
push
mov
sbb
mov
pop
adc
sbb
or
adc
and
inc
add
add
dec
add
adc
sbb
adc
push
cdq
and
inc
cmp
inc
and
mov
mov
inc
adc
rol
mov
and
loope
inc
add
add
or
sub
inc
or
jo
xor
mov
add
adc
sub
add
push
ins
or
xor
mov
inc
and
pop
add
add
add
shl
adc
and
adc
add
enter
inc
shl
aam
or
add
pusha
sbb
push
mov
add
inc
bound
mov
inc
inc
and
add
pop
add
add
xlat
sbb
or
add
inc
push
leave
sub
add
add
inc
add
adc
sbb
add
push
pusha
or
add
inc
mov
daa
add
and
inc
sbb
adc
rol
rcr
push
add
adc
add
or
add
mov
add
inc
push
and
or
fwait
add
and
or
add
add
sub
inc
add
cmp
nop
and
xchg
movs
mov
rol
adc
and
adc
add
sbb
cwde
mov
inc
test
jmp
shl
sbb
sub
adc
mov
inc
add
dec
adc
add
cwde
dec
movs
add
mov
jl
add
add
bound
add
inc
add
inc
mov
imul
push
loopne
sub
jo
mov
aam
add
add
adc
add
and
add
xor
and
pusha
and
inc
adc
dec
push
or
xor
sub
test
and
or
push
add
add
rol
sbb
add
inc
xchg
and
add
adc
adc
inc
and
inc
dec
add
add
jmp
add
pop
cwde
aam
loop
and
adc
add
xchg
and
adc
dec
inc
or
and
add
cdq
dec
inc
push
sbb
imul
sub
add
mov
ret
ret
mov
jb
jmp
add
adc
adc
sub
pusha
pop
xor
add
add
inc
inc
adc
add
adc
add
sub
adc
mov
mov
or
adc
xor
xchg
adc
and
call
cdq
and
or
dec
and
adc
aam
add
(bad)
add
pusha
and
inc
adc
sub
cs
adc
mov
add
ins
outs
add
add
test
adc
adc
inc
inc
mov
add
add
pusha
adc
inc
test
add
inc
adc
add
push
and
inc
add
add
ins
pop
mov
lods
add
add
push
push
xchg
or
add
rol
push
mov
or
inc
test
add
add
and
add
and
adc
xor
jo
call
xor
sbb
adc
push
in
or
inc
add
add
add
add
add
add
pusha
add
and
or
nop
add
add
adc
ror
xor
or
add
rol
push
inc
add
retf
inc
jae
or
adc
or
add
mov
inc
add
and
adc
add
sbb
mov
xor
pop
into
add
les
sbb
add
or
adc
nop
push
sub
add
pusha
push
add
rcl
add
add
xor
ins
push
adc
mov
fwait
mov
loopne
inc
xchg
and
or
add
dec
sub
inc
adc
add
add
pop
or
add
and
xor
push
inc
or
inc
aaa
mov
add
add
adc
mov
add
add
shl
inc
cmp
(bad)
rcl
sub
add
test
rcl
adc
in
xor
sbb
dec
pop
inc
add
adc
add
lds
inc
mov
cmps
adc
add
call
pop
sbb
add
pop
add
test
and
adc
add
test
add
inc
inc
inc
inc
popa
and
adc
movs
lods
jo
add
inc
int3
xor
cdq
add
add
push
add
or
push
mov
inc
(bad)
inc
add
add
call
sub
pop
add
mov
movs
add
push
mov
or
ret
or
sbb
inc
mov
adc
and
sub
pusha
sub
adc
push
push
add
loopne
mov
mov
mov
sbb
cdq
jo
and
add
jno
and
inc
or
inc
dec
movs
push
inc
xchg
dec
add
add
and
add
inc
and
inc
xchg
sbb
inc
push
push
push
push
cmp
push
dec
add
xor
sub
and
movs
adc
or
mov
cmp
or
shl
sbb
pop
or
mov
inc
test
dec
or
add
xor
xor
enter
sbb
add
leave
rol
push
and
adc
add
adc
dec
and
add
adc
jmp
or
and
mov
imul
or
add
adc
pop
add
add
and
and
or
and
and
inc
adc
push
mov
inc
or
sub
shl
add
add
sub
add
add
or
adc
mov
add
inc
sub
inc
add
pop
adc
and
shl
test
add
es
add
adc
add
or
adc
add
test
or
add
call
or
adc
xor
adc
mov
inc
sub
adc
inc
add
pusha
xchg
dec
mov
mov
inc
or
add
cmp
inc
inc
add
and
pop
inc
add
sub
add
add
dec
add
ins
xchg
je
clc
push
add
add
push
adc
add
and
and
add
and
add
and
push
add
adc
add
sub
or
adc
inc
add
add
adc
mov
sub
movs
add
pop
or
or
sbb
adc
add
inc
cmp
add
or
mov
mov
nop
mov
or
or
add
adc
xor
sbb
xor
and
lods
and
lea
sub
jmp
add
add
inc
add
sub
add
and
sbb
add
xor
sub
dec
and
inc
ins
push
cmp
sub
add
inc
sub
sbb
add
push
add
add
rol
adc
adc
push
les
adc
xor
add
and
push
adc
add
les
sbb
and
dec
sub
add
movs
and
add
add
xchg
add
sbb
add
mov
xor
mov
adc
mov
mov
add
and
add
inc
adc
mov
or
adc
add
adc
inc
or
mov
add
adc
adc
or
ret
add
add
add
and
data16
or
je
das
or
xor
sbb
and
adc
xchg
les
add
add
inc
inc
add
inc
add
adc
gs
je
or
dec
add
add
movs
inc
arpl
or
sbb
add
inc
adc
or
xchg
adc
add
fmul
push
add
push
pop
add
mov
or
or
add
add
cmp
add
les
add
xor
adc
ins
xchg
inc
adc
inc
and
sub
xchg
adc
sbb
pop
js
data16
or
nop
sbb
adc
mov
sar
pop
inc
xor
xor
xor
and
inc
sub
inc
les
mov
push
mov
add
adc
and
inc
inc
sbb
and
and
add
xchg
adc
push
add
or
push
mov
mov
inc
adc
or
jmp
mov
sbb
cmp
mov
inc
add
add
push
popa
push
or
add
add
add
add
out
and
add
xor
add
add
push
add
inc
and
inc
inc
add
bound
dec
test
adc
add
and
and
add
add
mov
add
add
adc
inc
or
movs
add
adc
adc
add
xor
test
stos
sbb
and
and
inc
xchg
adc
rol
add
add
inc
cmp
daa
xor
pusha
sub
push
(bad)
rol
inc
sub
add
or
add
adc
test
or
dec
cwde
xchg
and
push
adc
add
add
add
xor
and
add
sub
add
ror
inc
pusha
sub
add
push
adc
add
and
inc
adc
add
dec
or
adc
dec
adc
dec
mov
add
and
add
adc
adc
clc
inc
inc
xchg
add
push
repnz
test
shl
add
sbb
push
movs
dec
add
mov
adc
inc
xor
and
adc
push
inc
or
or
add
add
and
push
add
inc
mov
add
pop
and
and
and
pusha
adc
dec
inc
or
or
int
lahf
fs
add
ret
sbb
add
add
add
or
sub
inc
or
add
and
and
bound
adc
inc
adc
add
add
rcl
push
pop
push
cmp
add
inc
inc
sbb
inc
inc
leave
inc
add
pop
sbb
add
mov
or
inc
hlt
add
or
add
push
add
sub
popa
mov
add
cmp
adc
add
mov
add
add
xor
mov
and
adc
add
and
adc
mov
test
dec
nop
xchg
bound
push
add
mov
pop
or
mov
adc
data16
push
add
and
dec
adc
adc
adc
sbb
test
add
sub
aam
dec
adc
or
add
or
bound
and
test
ja
add
or
add
adc
pusha
dec
adc
add
cmp
add
mov
sbb
add
or
loopne
mov
and
inc
or
push
push
sbb
inc
xchg
adc
test
mov
enter
adc
or
or
push
add
inc
adc
push
or
add
mov
rol
and
popa
add
or
inc
rol
call
sub
add
or
pusha
sbb
inc
add
add
or
mov
xor
call
and
pusha
mov
adc
add
and
or
rol
or
and
popa
rcl
loope
push
or
push
cmp
or
test
and
add
mov
add
add
inc
dec
add
xor
sbb
or
and
loopne
xchg
rcr
adc
and
sub
es
int
or
adc
inc
add
adc
adc
and
inc
mov
xchg
push
inc
add
movs
add
adc
and
or
and
inc
add
and
push
or
xor
mov
adc
or
add
add
mov
or
add
mov
add
xor
inc
or
sbb
or
and
add
add
xor
inc
add
add
lods
pop
or
add
adc
add
jno
adc
add
sbb
xor
cmps
sub
add
add
and
sbb
cmp
add
add
inc
xchg
and
or
adc
add
sbb
push
and
sbb
xor
adc
and
add
push
and
and
inc
xor
(bad)
in
xchg
inc
xor
add
pop
push
nop
cmp
loopne
inc
and
inc
add
adc
push
push
or
ret
xchg
inc
sub
add
inc
dec
add
mov
add
inc
test
and
imul
adc
add
inc
sub
push
inc
pop
imul
nop
dec
inc
adc
test
sub
xor
mov
add
mov
inc
and
enter
adc
dec
mov
call
adc
sub
dec
add
add
nop
and
arpl
cmp
adc
mov
and
inc
sbb
and
add
add
enter
inc
mov
add
call
in
or
add
add
xchg
(bad)
clc
inc
sbb
imul
xchg
dec
pusha
sub
jge
push
cmp
nop
enter
mov
xchg
add
add
adc
xchg
add
add
adc
add
add
pop
or
inc
add
movs
sbb
dec
add
or
rol
or
dec
inc
adc
add
push
or
mov
or
add
and
add
or
add
add
adc
add
or
xor
add
add
add
add
and
(bad)
mov
jo
and
add
add
add
inc
sub
xchg
inc
cmp
sbb
pop
push
adc
add
push
push
inc
retf
nop
sbb
mov
dec
rcl
push
test
pop
pusha
adc
adc
and
dec
add
push
and
popf
je
or
pop
mov
xor
add
out
add
push
add
xchg
mov
mov
and
inc
rol
ret
add
or
add
or
add
movs
adc
and
mov
and
jae
pop
push
and
add
dec
sbb
pop
inc
xor
add
test
sbb
or
or
pop
mov
mov
push
stc
push
sub
inc
cmp
loope
push
cld
int
loop
sahf
div
sbb
push
mov
mov
stc
jmp
pushf
ds
call
popf
sahf
(bad)
call
rol
xchg
test
and
and
lds
ds
cmp
sbb
add
jb
mov
shr
xchg
or
cwde
fdivr
int3
push
fbstp
pop
clc
jns
mov
and
sti
mov
fsubr
mov
jne
lahf
sahf
(bad)
sub
xchg
or
jmp
mov
(bad)
call
and
std
out
sahf
cmps
jo
mov
stc
nop
fisttp
push
xchg
cdq
std
jmp
xor
add
sahf
call
(bad)
lahf
(bad)
jmp
xchg
add
shl
(bad)
call
xchg
in
call
sub
add
std
jmp
sahf
mov
fwait
sahf
(bad)
shl
and
dec
sti
cwde
inc
ds
mov
adc
adc
adc
mov
adc
call
popf
sahf
xchg
movs
mov
out
ins
mov
clc
lahf
sahf
(bad)
daa
xchg
push
xchg
sahf
push
rol
ss
sub
add
mov
xchg
call
imul
lea
in
cmp
pop
mov
adc
jb
popf
sahf
mov
mov
gs
into
pop
and
clc
mov
repz
loopne
cwde
sbb
in
sbb
jecxz
mov
call
adc
(bad)
or
in
jmp
mov
add
mov
int3
jmp
sahf
push
xchg
push
lock
push
mov
popf
hlt
out
xchg
adc
(bad)
call
sbb
test
mov
retf
out
sbb
mov
(bad)
jmp
fdivr
retf
add
jmp
push
loop
es
cld
jne
popa
cdq
outs
call
icebp
mov
sbb
lds
sbb
nop
and
adc
test
mov
mov
jbe
sahf
(bad)
jmp
rcr
cmc
and
popf
sub
(bad)
ins
mov
add
add
sub
(bad)
mov
adc
fwait
mov
jl
fld
jno
stc
lahf
mov
(bad)
pop
dec
std
mov
jmp
xchg
enter
xchg
add
or
popf
hlt
out
fadd
in
lock
popf
xchg
xor
sbb
popf
(bad)
call
int3
aam
call
sbb
sahf
sbb
jl
pop
call
mov
adc
(bad)
push
sbb
sahf
(bad)
call
int
(bad)
call
cli
int3
adc
ja
daa
mov
or
sub
outs
popf
movs
std
jmp
xchg
mov
pmulhw
sbb
rcl
aaa
sti
cmp
scas
cmps
or
cdq
pop
(bad)
xchg
mov
pop
jns
jbe
or
cs
sahf
inc
or
cs
push
mov
fsubr
mov
jne
fadd
push
jmp
sar
js
jmp
test
fsubrp
popf
mov
cli
dec
adc
(bad)
jmp
(bad)
into
cld
jmp
push
rcr
pop
inc
jle
std
int
icebp
popf
sahf
jmp
sahf
clc
rol
add
adc
into
std
mov
into
imul
mov
sahf
jmp
push
(bad)
shl
xchg
inc
xchg
loope
mov
xchg
or
cmp
sub
aas
push
(bad)
cmp
popf
es
(bad)
aas
push
dec
xchg
adc
jmp
aas
push
(bad)
adc
into
fwait
add
int3
mov
pop
mov
jle
xchg
push
cli
jmp
out
int
in
popf
sahf
xchg
jb
jle
jg
fucom
popf
sahf
pop
cmp
jo
jmp
es
mov
push
dec
xchg
mov
adc
xchg
(bad)
call
cdq
mov
call
jo
mov
sbb
adc
sbb
psrld
add
std
inc
leave
sbb
adc
int
and
jge
adc
int3
inc
add
popf
in
out
mov
test
out
lea
fdivr
pop
rol
out
mov
out
rcl
outs
jecxz
scas
pop
mov
aaa
push
pop
xchg
xchg
(bad)
mov
cwde
adc
xchg
movs
in
add
jecxz
dec
cmp
mov
sbb
sub
lahf
mov
sbb
cmc
jmp
xchg
call
lea
adc
xchg
mov
cmp
popf
xchg
js
sub
jmp
mov
(bad)
rcr
xchg
enter
std
mov
call
jecxz
lea
sub
je
sbb
int
stos
movs
or
(bad)
mov
sahf
dec
xchg
(bad)
in
arpl
shl
(bad)
call
jo
clc
xchg
add
rcr
je
jno
add
pushf
sahf
(bad)
jmp
mov
(bad)
shl
cwde
add
xchg
mul
retf
pop
(bad)
dec
movs
mov
inc
xor
push
mov
(bad)
jns
shl
lea
(bad)
loop
push
std
jmp
or
(bad)
and
adc
int
push
jmp
xchg
jecxz
(bad)
call
add
out
mov
ds
retf
mov
add
(bad)
and
pop
cmp
jge
xchg
call
mov
sub
into
(bad)
mov
sahf
rol
dec
clc
dec
lea
pop
sbb
cld
call
adc
(bad)
jo
jge
(bad)
call
gs
(bad)
jmp
xchg
sahf
sub
int
iret
enter
or
(bad)
pop
jmp
or
sbb
mov
adc
push
fwait
xchg
ds
jae
out
inc
jne
cmp
ret
fisub
jne
sahf
(bad)
push
nop
push
test
fmulp
fwait
hlt
(bad)
xchg
ins
shr
cld
inc
jns
mov
pop
cmp
in
xor
leave
jge
mov
aaa
mov
or
loopne
mov
or
cmp
push
lea
pushf
mov
and
mov
shr
lock
dec
cld
mov
aad
aad
push
gs
add
lods
adc
sbb
inc
adc
dec
cmps
fmulp
sbb
out
mov
int3
cmp
mov
dec
fnstcw
ins
cmp
sar
popa
imul
mov
cmp
and
(bad)
and
sahf
jmp
mov
(bad)
mov
rol
pushf
fprem1
jo
call
add
mov
sbb
jae
lds
or
call
popf
dec
sti
cmc
jae
ss
mov
cmps
rep
ja
(bad)
jmp
ror
out
mov
adc
mov
push
xchg
mov
or
pop
fiadd
ffreep
inc
loop
out
push
sar
mov
jae
add
jl
jbe
gs
cdq
xchg
stos
xor
les
xchg
jmp
mov
mov
test
arpl
mov
jae
add
cmp
mov
jl
std
cmp
jecxz
fstp
pop
cli
in
cld
add
add
mov
imul
jg
pop
popf
fnstcw
jp
popa
cmp
mov
dec
pop
scas
ss
into
(bad)
fnstenv
jle
cmps
std
stos
jecxz
fstp
dec
mov
imul
call
test
sbb
pusha
pop
mov
lahf
adc
jno
xchg
sub
sbb
mov
lds
inc
fldenv
adc
jbe
jno
mov
mov
jecxz
mov
outs
dec
ret
dec
in
mov
cld
mov
inc
rcr
sbb
jne
mov
sub
jle
mov
dec
lds
pop
inc
mov
inc
fcomp
retf
in
pusha
mov
pop
loop
jo
adc
pop
ret
movs
lods
imul
call
out
xlat
pusha
out
scas
ins
or
arpl
rcr
cmp
jp
jbe
mov
fdivrp
lds
ret
inc
mov
jmp
popf
push
xchg
dec
int
data16
cmp
mov
lock
and
cdq
loop
ins
and
push
fisubr
mov
cs
xor
mov
(bad)
inc
in
or
adc
mov
enter
ja
shl
jne
jmp
push
or
retf
jecxz
imul
cmps
aas
inc
adc
jbe
jmp
mov
call
adc
mov
sahf
ds
test
push
bound
(bad)
popf
add
jg
call
or
stos
mov
jle
call
xor
pushf
jp
movs
in
(bad)
sbb
rol
test
in
adc
std
fldcw
test
stos
jg
rol
(bad)
mov
or
test
fcmovnbe
mov
pop
scas
jns
out
xor
enter
je
and
jb
adc
(bad)
(bad)
pop
lea
sub
dec
sbb
add
mov
repnz
test
cld
out
inc
dec
mov
into
cld
popa
cmp
xchg
jl
mov
sub
push
xchg
pop
ret
das
push
push
icebp
ins
sub
sti
aad
cdq
pop
cmp
std
pop
test
jmp
add
popf
xchg
pop
add
mov
shl
je
(bad)
pusha
mov
and
xchg
shl
mov
and
and
mov
push
fwait
push
cli
movs
fs
aaa
and
mov
mov
in
cmc
xchg
sbb
jp
movs
mov
and
popf
sar
jp
cdq
call
rcl
pushf
adc
dec
sbb
or
aaa
add
ins
or
sahf
hlt
inc
stos
cld
sar
inc
inc
push
push
xor
and
fsub
std
sti
test
push
cs
jbe
lods
jge
and
mul
mov
jb
call
adc
pop
scas
pusha
push
dec
sti
pop
pop
loopne
or
pushf
xchg
adc
dec
int3
push
dec
xchg
test
clc
ficom
sbb
(bad)
ins
or
mov
paddd
cmp
jmp
fcmove
push
cmc
call
adc
retf
cmp
cmps
rcl
mov
sar
mov
sbb
sbb
lea
(bad)
jle
jmp
push
or
adc
(bad)
movs
in
rcr
ja
push
data16
cmp
out
dec
pop
push
nop
cmp
add
or
popf
into
dec
xchg
lock
lods
mov
cmp
jnp
std
and
mov
xor
out
sub
jmp
pop
sbb
in
jecxz
xlat
ins
xchg
mov
mov
sub
adc
ins
sbb
sub
or
fcomp
inc
sbb
lea
in
fwait
adc
cdq
pop
js
(bad)
push
cmp
jns
pushf
inc
xchg
lahf
call
xchg
aam
inc
outs
ss
adc
gs
cmc
std
sub
push
xchg
mov
ins
inc
cld
sbb
movs
sti
or
loop
xlat
push
call
xchg
stos
cs
cld
push
shl
iret
xchg
out
call
xchg
aam
cmp
std
pop
test
call
icebp
push
mov
outs
ret
cld
icebp
lahf
les
repnz
cwde
mov
xchg
fisttp
imul
inc
sbb
mov
cmp
cmp
lock
sub
cmp
pop
mov
cwde
cmps
movs
mov
aam
pushf
stos
ret
or
aam
jl
xor
iret
ins
pop
call
dec
call
fcom
jecxz
push
fild
xor
adc
cld
cli
xor
out
sbb
dec
mov
jmp
mov
push
jecxz
and
cmp
fcomp
in
push
gs
mov
movs
aas
dec
fimul
cld
(bad)
adc
pop
sbb
cld
aad
loope
or
(bad)
mov
fcmovb
mov
xor
imul
es
dec
imul
lods
popa
fstp
adc
in
in
push
call
mov
sub
mov
sbb
in
and
fisttp
cdq
cmp
ret
dec
and
pop
mov
sub
imul
lods
add
ins
in
scas
sbb
out
adc
or
push
xchg
out
pop
cmp
add
sbb
adc
scas
xor
(bad)
push
adc
cli
add
pushf
data16
out
dec
xchg
jbe
sahf
push
xchg
outs
mov
scas
jp
out
test
hlt
out
fstp
jbe
or
aam
dec
and
jmp
pusha
mov
jp
nop
xchg
pop
jae
sub
ret
(bad)
data16
js
clc
push
popf
and
repz
ins
(bad)
std
fcom
cmp
vpmaxsw
jge
mov
loop
or
pop
xchg
(bad)
jl
xor
mov
and
mov
fs
jae
push
cmp
gs
loop
inc
inc
test
pop
inc
in
hlt
fwait
mov
test
das
or
in
jbe
sbb
jb
xchg
stos
jns
call
fnstsw
popf
mov
mov
sbb
cmp
adc
shr
xchg
push
mov
loope
ins
add
mov
jnp
sti
add
push
les
mov
push
push
adc
cmps
ins
dec
retf
adc
and
mov
cld
cmp
clc
jge
cs
pusha
and
xchg
das
xchg
rcr
lock
dec
loopne
test
mov
call
int3
xor
mov
or
hlt
sub
push
xchg
mov
adc
mov
mov
jge
mov
ds
push
std
inc
cmp
inc
inc
xchg
and
jnp
rcl
jge
out
push
popf
push
sbb
cmps
lods
sbb
std
mov
mov
jmp
sub
fdiv
jmp
out
mov
jmp
xchg
xor
jbe
add
pop
xor
(bad)
cmc
inc
fwait
sbb
dec
sub
call
jns
jns
xor
popf
sbb
ins
inc
dec
xchg
retf
dec
test
retf
jmp
push
test
xchg
aad
adc
scas
mov
xchg
outs
jnp
mov
ficomp
sub
sar
ffree
rcr
nop
jb
popf
sbb
dec
push
inc
sbb
xor
adc
push
mov
cs
sbb
mov
pusha
and
mov
or
or
ret
rcr
(bad)
cmps
sbb
test
sub
mov
scas
dec
js
sbb
mov
dec
loop
in
jmp
xor
pop
sub
or
ja
popf
inc
adc
push
addr16
(bad)
popf
pop
mov
dec
sbb
push
jp
ret
sub
dec
les
out
push
adc
inc
pop
retf
mov
(bad)
imul
cmp
add
pop
stos
cdq
add
jnp
jl
pop
jbe
out
inc
popf
sbb
(bad)
pushf
mov
cmp
inc
pushf
inc
mov
pusha
ret
jp
inc
add
pop
inc
lods
pushf
or
xchg
in
sbb
popf
fs
imul
mov
fadd
out
pushf
retf
mov
popa
mov
add
mov
push
out
dec
jmp
add
inc
and
push
(bad)
ror
adc
sub
data16
fwait
into
cwde
or
(bad)
mov
je
pushf
pusha
mov
ror
(bad)
adc
mov
out
push
push
stos
outs
popf
into
and
adc
sub
sbb
aas
loope
cs
lods
ret
adc
and
cld
push
lahf
test
enter
call
or
ror
jno
jp
movs
jge
pop
call
adc
mov
mov
mov
sub
xchg
jo
fwait
bound
or
sub
(bad)
fsubr
mov
fdivr
aam
call
sbb
in
dec
mov
int3
add
dec
jbe
jo
cld
push
fadd
outs
std
cmp
fstp
aam
test
sub
imul
pop
shl
pop
ins
add
ficomp
mov
lock
mov
jg
pusha
sub
xor
push
or
imul
nop
jb
lea
push
sbb
aam
lds
scas
pushf
xchg
push
xlat
dec
xor
in
mov
pusha
jno
cmps
or
push
xor
stos
mov
mov
pop
adc
or
jl
sbb
or
out
jne
mov
sti
push
mov
pop
test
jmp
loopne
mov
in
jmp
leave
mov
pop
add
cmp
loope
pushf
test
jle
call
popf
les
aas
pushf
inc
cs
cmp
out
dec
je
push
xor
scas
ins
jno
data16
scas
adc
pop
cld
cld
mov
jg
lea
sbb
jmp
adc
jns
popf
cli
bound
pop
loopne
ins
push
popf
in
push
jo
add
add
sub
cmp
aaa
sub
rol
std
mov
or
xchg
mov
das
mov
pop
popf
and
pop
xchg
out
adc
dec
pop
cli
cld
push
cmp
xchg
jbe
jmp
cld
xor
lock
ret
outs
out
out
js
push
loopne
sbb
dec
sbb
aam
jo
pushf
adc
cmps
xchg
ret
ds
nop
sub
mov
fidivr
inc
pcmpgtd
aaa
hlt
mov
xchg
sbb
xor
and
add
cmp
add
inc
movs
popf
repnz
pop
jb
cmps
adc
popa
in
(bad)
in
mov
push
pop
dec
add
pushf
push
dec
sbb
fstp
(bad)
fwait
ret
neg
movs
push
xor
and
in
add
xchg
push
outs
in
in
das
scas
push
cwde
(bad)
repnz
cmp
xor
jb
mov
xchg
mov
mov
adc
sbb
mov
mov
cwde
(bad)
icebp
ret
pop
dec
sti
jnp
jp
push
ins
jmp
sub
mov
sahf
addr16
icebp
sub
pushf
daa
jle
leave
aaa
cmp
popf
dec
mov
push
add
stos
gs
push
xor
fwait
dec
xor
push
jg
ffreep
jecxz
stos
retf
xchg
popf
add
jnp
xor
std
mov
ins
add
sbb
shl
sbb
pop
pop
push
nop
inc
(bad)
std
imul
rol
mov
pop
rcr
sub
lods
scas
cld
or
cs
and
das
sbb
and
ret
fstp
test
out
sbb
jno
stc
cmps
and
pushf
pushf
js
xor
pushf
mov
dec
pop
jno
rcr
pop
jne
std
cmp
pushf
add
add
pop
cdq
pop
(bad)
cli
sub
cmp
popw
call
sahf
sub
mov
mov
or
inc
pushf
test
sub
sub
mov
cmp
dec
iret
ss
sub
cmps
int3
std
mov
retf
stc
and
pop
jp
xchg
stc
push
adc
(bad)
out
retf
adc
sbb
ja
test
int
(bad)
les
(bad)
lods
pushf
mov
xor
test
or
aaa
popa
js
stos
cld
dec
lds
push
push
(bad)
jne
pusha
or
sar
icebp
cmps
jcxz
and
mov
mov
lods
push
stos
sbb
push
pushf
fst
cld
js
sar
jmp
sbb
outs
xchg
test
icebp
pop
icebp
in
mov
iret
dec
push
push
into
dec
stos
mov
loopne
(bad)
(bad)
in
call
adc
rol
cmp
xor
clc
out
sub
popf
es
outs
jmp
cwde
in
inc
popf
cmp
push
add
sub
sbb
out
xor
fwait
bound
sbb
into
cld
xor
fisttp
xchg
cmp
call
pop
mov
popf
fidiv
dec
out
dec
addr16
iret
scas
leave
mov
xchg
outs
pushf
push
inc
and
test
lahf
mov
cmp
cmp
shr
push
and
xchg
xchg
enter
(bad)
popa
clc
mov
xchg
and
ins
sbb
xor
sahf
(bad)
dec
les
rcr
xchg
push
fdivrp
les
aad
add
fs
and
and
shr
jno
gs
push
inc
push
stc
fcomp
ret
add
pop
(bad)
jl
and
stc
loope
cld
inc
addr16
cmp
mov
lock
cmp
loopne
iret
idiv
jmp
cld
jae
sbb
xor
xor
enter
cmp
daa
push
dec
inc
xchg
call
mov
clc
jnp
mov
in
or
stc
test
fs
mov
mov
pop
(bad)
aam
retf
push
xlat
pop
jmp
xchg
dec
pushf
test
faddp
jmp
xor
imul
sbb
xchg
loopne
rcl
ret
test
cs
mov
mov
scas
(bad)
lock
mov
mov
call
fnstsw
rcl
scas
ins
cmp
ja
popf
mov
neg
(bad)
std
cmp
das
iret
mov
xchg
std
scas
jg
fcom
mov
in
push
jg
rcr
aas
mov
or
cs
idiv
mov
push
call
fwait
mov
dec
sub
retf
push
fimul
sahf
out
mov
adc
xchg
xor
jno
xchg
or
call
test
cmp
scas
popa
sbb
in
sbb
shr
sbb
std
dec
call
jmp
cmp
cwde
inc
out
dec
and
outs
sub
cmps
xchg
popf
fcomp
push
jo
push
addr16
shl
(bad)
sub
ret
int
inc
adc
and
jge
pop
shr
lea
mov
imul
jl
into
shr
in
pop
mov
fld
lods
push
pushf
stc
jp
bound
cmp
xor
xor
push
push
out
ja
mov
imul
cs
mov
data16
push
stos
pop
inc
pusha
push
ins
xor
mov
das
dec
sahf
pushf
ds
out
call
sbb
jmp
xor
pop
mov
pop
and
call
call
xor
(bad)
hlt
push
cwde
add
jae
out
fcom
js
sub
ja
data16
rcr
(bad)
popf
clc
fst
xor
and
mov
scas
sti
push
xor
sub
and
cld
add
lock
inc
add
pusha
popf
(bad)
mov
pop
stos
aad
dec
call
test
retf
inc
arpl
lahf
lea
sub
fldcw
inc
cmp
(bad)
cmc
bound
das
in
aam
mov
leave
(bad)
inc
xchg
retf
mov
pop
cmp
jge
call
(bad)
(bad)
(bad)
cli
lods
not
and
std
stos
mov
retf
popf
pushf
ret
sbb
add
popf
call
popf
sbb
mov
rcl
(bad)
mov
jl
retf
scas
(bad)
mov
nop
bound
fnsave
scas
cli
cmp
xchg
cdq
push
lods
and
cmp
(bad)
lds
cld
xlat
pop
dec
xchg
int
mov
mov
lods
mov
(bad)
pop
jne
and
ret
cdq
xor
rcr
xchg
lock
inc
mov
repz
imul
mov
and
test
add
cwde
in
xchg
fsubp
cmc
xchg
out
in
sbb
dec
fsubr
inc
jns
xor
jo
ins
std
jle
inc
mov
mov
dec
retf
push
mov
popf
mov
cmc
xchg
jmp
(bad)
call
test
neg
sahf
sar
push
xchg
inc
ss
sbb
xor
mov
push
sahf
dec
inc
sub
clc
push
lahf
das
(bad)
pop
xchg
push
jle
push
imul
test
dec
sub
inc
repnz
inc
mov
mov
dec
mov
je
data16
(bad)
out
outs
mov
or
push
neg
sub
pop
pushf
inc
cmp
call
in
rcr
and
pop
pushf
int
int3
pop
loop
call
mov
xchg
icebp
fcom
xchg
push
pushf
loopne
fldenv
add
mov
popf
rcr
mov
das
mov
pop
jmp
cmp
retf
inc
adc
or
mov
(bad)
jmp
pushf
cmp
pop
nop
jmp
fcom
test
lods
(bad)
or
popf
mov
aaa
sar
mov
loopne
dec
addr16
imul
xlat
ret
out
cwde
cmp
(bad)
or
pop
sbb
in
or
les
loopne
xchg
xchg
mov
(bad)
fdivr
lahf
pop
push
pushf
call
ins
popf
pop
sub
inc
mov
icebp
adc
fucom
mov
adc
mov
mov
cmps
xor
or
fisubr
retf
dec
das
sub
lahf
add
push
add
shl
xchg
xor
ror
les
adc
mov
xor
and
push
pop
mov
out
pop
jmp
mov
push
jae
mov
and
mov
and
(bad)
mov
mov
std
xor
shr
ret
outs
ins
outs
mov
pusha
push
hlt
xor
dec
xchg
enter
adc
pop
inc
rcl
das
fiadd
sbb
out
shl
jmp
add
in
loope
pusha
sar
mov
es
ins
xor
aas
in
rcl
iret
fsub
add
out
sub
rcr
sysenter
ret
push
and
setge
pop
mov
lock
mov
push
sub
push
in
jp
ret
adc
sbb
sbb
inc
lods
std
imul
imul
scas
fcom
retf
neg
jle
aad
push
sub
outs
push
add
std
and
sub
inc
int3
xchg
adc
cld
jne
adc
out
push
daa
outs
mov
pop
test
sbb
ss
sahf
dec
int3
setno
mov
in
adc
push
push
xor
pop
dec
sbb
mov
cmc
adc
cmps
or
sub
add
outs
xchg
sbb
cmovg
mov
mov
inc
std
mov
in
(bad)
lock
repnz
mov
out
data16
adc
inc
pop
clc
push
pop
add
jb
push
cmp
(bad)
loop
add
stos
movs
lahf
push
jmp
mov
sbb
mov
adc
mov
outs
pop
out
push
adc
popf
sub
and
add
mov
jns
sub
pop
mov
inc
jb
(bad)
jle
daa
out
fisubr
push
mov
outs
mov
pop
mov
mov
dec
mov
mov
in
or
push
push
sahf
mov
cmc
nop
jmp
xchg
sub
jns
add
pop
fnsave
std
mov
gs
les
sbb
or
popf
xchg
adc
test
or
pusha
jmp
mov
pop
dec
push
nop
pop
cs
mov
sbb
mov
or
mov
mov
push
int
push
test
mov
mov
pop
jae
pop
mov
fld1
addr16
sbb
and
popf
inc
cmps
xor
sahf
or
sub
out
jmp
test
in
pop
push
jmp
inc
xchg
cmp
std
mov
inc
jmp
lea
rcr
js
jmp
call
mov
(bad)
fcmovb
pop
popf
cmp
mov
push
fwait
gs
mov
dec
jp
leave
cdq
outs
jmp
jb
je
icebp
cld
push
jmp
push
add
ins
xchg
inc
scas
nop
xor
aad
std
inc
mov
call
adc
mov
inc
cmp
mov
out
mov
cdq
inc
(bad)
ret
xchg
fdiv
xchg
aaa
dec
push
jne
lds
popf
sbb
adc
data16
into
cld
mov
into
sar
call
jmp
push
mov
sti
call
scas
leave
cld
stc
or
daa
fcom
repnz
call
ret
xlat
pushf
or
lea
call
sahf
pushf
dec
mov
jmp
call
mov
repz
sub
fistp
cmp
pushf
push
aad
jle
(bad)
or
shr
fwait
xor
xor
div
xor
sti
movs
inc
mov
cmc
(bad)
addr16
jecxz
jmp
popf
ins
or
ins
xchg
lahf
pushf
cli
stos
popa
jp
js
push
loopne
add
pop
pop
sbb
aas
loop
mov
push
jb
sbb
xor
push
jmp
fidiv
popf
jp
movs
cmps
and
stos
aad
js
or
rcl
xor
ins
push
imul
mov
stc
in
scas
xchg
push
fistp
lahf
push
xchg
int
add
jg
mov
pop
movs
or
mov
add
retf
fwait
mov
sbb
or
adc
int
test
popf
test
imul
and
pushf
(bad)
mov
adc
pop
or
mov
push
jmp
retf
in
fwait
push
add
inc
jmp
xor
or
movs
cmp
mov
and
int
cld
imul
mov
jle
inc
imul
push
push
jo
inc
(bad)
mov
cmp
pushf
xchg
inc
mov
jo
lock
or
inc
daa
add
inc
inc
cli
clc
mov
sbb
inc
jmp
pop
ror
or
(bad)
std
pop
dec
cdq
dec
jmp
je
inc
push
popf
inc
mov
dec
xor
inc
ret
jno
call
dec
add
cdq
lds
jo
jae
mov
out
jbe
mov
sti
and
dec
hlt
pop
in
cdq
call
inc
mov
jmp
xchg
aas
sub
cli
jno
test
xor
setle
fstp
ds
xor
test
mov
daa
push
pusha
sahf
sbb
popf
enter
mov
fisttp
hlt
cwde
fwait
pop
int3
jmp
jmp
repz
sbb
inc
(bad)
sbb
inc
mov
mov
inc
dec
adc
inc
dec
data16
(bad)
stc
jmp
jmp
or
call
call
enter
pop
(bad)
gs
aaa
ja
pcmpeqd
mov
shl
mov
std
scas
imul
inc
lods
pop
pop
ret
loop
lds
jge
and
je
popf
dec
pop
int
mov
xor
jge
add
sar
or
mov
rcl
std
pop
cli
or
int3
mov
xor
dec
push
(bad)
lods
xchg
mov
and
cmp
hlt
into
jb
ret
lods
jp
lods
test
cdq
enter
pop
sbb
inc
sbb
pop
xor
shl
pushf
push
xchg
xchg
ins
(bad)
imul
pop
xchg
push
repnz
jbe
jo
imul
es
or
mov
jmp
xchg
or
or
sbb
in
stos
in
int
cmps
push
pop
fisub
pop
mov
dec
xchg
add
sub
(bad)
jo
aad
cmp
cmp
pop
aaa
or
sahf
jle
pusha
add
cmps
int
adc
pushf
mov
(bad)
mov
and
into
jbe
sbb
mov
mov
dec
out
or
mov
(bad)
xor
arpl
call
push
mov
sub
jns
adc
(bad)
cld
fmulp
ds
or
mov
jmp
push
fisub
pushf
add
test
adc
ds
xor
stos
(bad)
pop
mov
xlat
out
and
push
sbb
jmp
xchg
sub
popa
cmps
es
sbb
xchg
test
add
jnp
mov
out
pop
std
sub
dec
push
dec
call
add
and
mov
mov
std
add
loopne
out
mov
nop
cmp
xor
pop
jbe
mov
add
jmp
ror
dec
pushf
or
adc
out
xchg
cs
cwde
jne
popf
fiadd
cmp
mov
out
push
mov
aad
sbb
pushf
loop
cmp
dec
call
mov
mov
dec
in
into
cld
jle
jae
mov
push
push
icebp
call
into
fcomp
std
pop
xchg
and
add
cli
sub
jne
sti
dec
arpl
cmp
xor
jg
jle
push
rcl
loopne
repnz
add
or
enter
xchg
and
popa
in
fimul
js
or
adc
retf
jbe
push
inc
cli
popa
fdivr
xchg
mov
out
mov
das
mov
(bad)
cmp
lods
repz
dec
ror
pushf
push
add
rol
sub
les
leave
std
fsubr
or
popf
dec
xchg
out
sub
sbb
arpl
xor
sbb
dec
inc
shr
adc
sbb
int3
dec
and
adc
mov
je
xchg
pop
hlt
xlat
sti
fcom
gs
sub
inc
jb
cmps
mov
call
mov
ins
push
adc
xor
sar
test
mov
jb
ins
popf
loopne
cmps
adc
imul
cmp
xchg
mov
leave
push
push
fisttp
xchg
call
pop
jae
data16
xor
mov
sbb
sahf
and
jge
ret
xor
js
out
xchg
(bad)
pushf
push
std
adc
sub
adc
lahf
cmc
call
fsub
pop
(bad)
dec
mov
(bad)
jmp
(bad)
xor
dec
xchg
ret
add
jmp
add
mov
mov
arpl
pop
fimul
fcomp
push
and
popf
push
outs
pop
test
ja
add
js
(bad)
pop
jne
sahf
fwait
and
xchg
push
and
popf
bound
(bad)
into
aam
ins
cmp
out
aad
leave
icebp
dec
adc
fs
popf
xchg
stc
sbb
push
cwde
and
loope
not
arpl
popf
pushf
mov
pusha
fs
sbb
popf
sbb
mov
inc
rcr
std
and
in
fdiv
inc
loop
xchg
(bad)
xchg
imul
push
popf
push
and
test
mov
ficom
mov
ret
aad
pop
xor
mov
retf
sub
scas
jno
arpl
cmp
popf
cs
loopne
cmc
shl
push
mov
cmc
jp
sahf
popf
pushf
div
sub
push
xchg
jb
popf
out
movs
(bad)
movs
mul
jle
push
xchg
and
dec
shl
jle
repz
or
push
std
inc
pop
gs
xchg
sahf
lods
sub
pop
std
and
ret
add
fisttp
push
dec
inc
pop
pop
stos
popf
cmp
ins
cmp
jno
popa
(bad)
in
sub
push
jb
add
adc
in
sbb
pop
retf
mov
mov
mov
(bad)
pop
fsubp
jb
jnp
pop
add
popf
dec
jmp
sahf
leave
clc
sbb
imul
xchg
or
rdpmc
cmp
jl
mov
hlt
jns
jg
cmp
pop
sub
call
dec
js
popa
pop
xchg
pushf
or
lods
call
loopne
daa
fsub
sbb
outs
out
(bad)
xchg
in
cmp
jp
cs
push
inc
mov
cld
xchg
add
cmps
mov
pop
jl
loope
cmps
in
mov
mov
or
cld
dec
jecxz
sahf
loope
xchg
shr
push
stos
push
adc
pusha
xchg
repnz
and
push
sub
cmps
cld
(bad)
inc
cmp
nop
cmp
retf
std
clc
pop
fwait
dec
int
pushf
add
or
fnstcw
call
test
mov
or
scas
stc
cmp
int
push
lds
sub
xchg
ret
sub
add
mov
jmp
stc
fld
popf
xor
aad
out
fidivr
jmp
pop
(bad)
fs
adc
adc
outs
pop
jge
pop
mov
repz
xor
(bad)
xchg
push
cmps
or
popf
dec
add
adc
mov
adc
call
call
mov
or
or
fwait
inc
(bad)
jmp
test
and
ins
sbb
push
adc
imul
out
or
repz
mov
cmp
xor
out
mov
dec
mov
(bad)
pop
jl
xor
inc
dec
ds
xlat
nop
sbb
fnstcw
loop
(bad)
aaa
push
sub
add
rol
scas
test
scas
pop
out
sbb
adc
out
cld
push
pusha
inc
inc
jbe
add
xchg
ja
sub
mov
daa
push
pop
out
cmp
xor
(bad)
mov
retf
jb
mov
add
xchg
sahf
outs
dec
xchg
adc
xchg
jne
sub
dec
retf
les
scas
popf
jl
xor
cwde
stos
lahf
inc
dec
popf
jl
fcom
xor
cli
fiadd
iret
sub
jl
ins
sub
sar
mov
loop
push
sti
cmp
fidivr
(bad)
sbb
mov
inc
out
das
jmp
xor
pop
adc
int
or
popf
xor
xchg
stc
ret
retf
dec
loop
nop
dec
add
cmp
mov
cmp
std
imul
aad
pop
xchg
cwde
jmp
inc
or
xor
mov
cmp
cmp
mov
mov
(bad)
idiv
cli
adc
pusha
xchg
jmp
in
mov
cs
scas
push
jo
sahf
aam
jns
loop
test
xlat
adc
aam
jo
pop
lods
enter
(bad)
mov
popf
sbb
xchg
test
stos
and
mov
scas
add
(bad)
adc
ret
movs
cmp
hlt
push
add
fbstp
sbb
ror
loope
jne
test
add
jbe
dec
fcmovu
mov
mov
call
test
enter
(bad)
call
pop
and
sti
jg
out
fimul
sub
into
out
dec
bndldx
fwait
retf
je
mov
mov
stos
or
lods
test
pop
xor
call
pop
int3
dec
add
inc
test
push
in
out
ins
mov
mov
mov
sbb
lods
loop
call
out
sbb
jmp
adc
out
cmove
mov
mov
je
dec
bsr
pushf
inc
daa
(bad)
cli
inc
rcr
pushf
stos
ins
push
jecxz
cmp
xor
push
mov
inc
data16
ss
cld
jne
push
out
xor
mov
sbb
push
push
or
je
stos
cmp
xor
push
sahf
adc
lods
cmp
sbb
push
jle
lods
sub
test
push
mov
and
mov
xor
bound
mov
mov
push
inc
push
popf
push
inc
cmp
loopne
fsub
push
cmps
pop
push
call
jmp
lods
into
pusha
pushf
sahf
or
(bad)
push
xchg
pop
mov
adc
mov
dec
and
adc
mov
imul
aaa
mov
aas
lds
push
fimul
mov
mov
gs
cwde
dec
mov
pop
inc
(bad)
dec
in
(bad)
dec
sbb
pop
cmp
fldenv
push
outs
cwde
cmc
xchg
cmp
jae
repz
pushf
sbb
or
sbb
popf
xor
je
push
movs
jle
sahf
ins
mov
mov
mov
repnz
cdq
mov
outs
lds
cld
push
push
dec
cs
inc
std
icebp
xor
outs
into
fistp
call
rcr
xchg
jo
dec
dec
les
sub
fldl2t
in
mov
push
sub
test
std
jb
(bad)
mov
fist
fmul
pop
into
sub
inc
jle
popf
pop
push
outs
bound
pop
mov
add
jecxz
bound
sbb
aad
out
mov
(bad)
xor
in
cmp
sbb
lds
pushf
jp
adc
test
sbb
aas
outs
fs
pop
lds
retf
xchg
mov
icebp
pop
sahf
push
sub
dec
jo
in
ret
(bad)
imul
outs
jl
sbb
cmp
call
retf
repz
inc
fcomp
es
xor
jge
mov
cwde
test
ins
sbb
dec
(bad)
fsubr
mov
xor
cmp
jmp
pushf
ins
fwait
shl
pop
adc
retf
pop
popf
shl
fistp
test
mov
lock
scas
test
(bad)
int3
data16
add
pop
out
fsub
sahf
add
scas
inc
cld
mov
call
xor
jle
and
push
jecxz
cmps
cli
cmp
bound
sub
dec
or
movs
mov
pop
test
popf
and
cmp
jp
sti
xchg
(bad)
adc
push
push
push
jle
fcomp
add
inc
xchg
sub
pusha
jl
inc
push
in
retf
int3
sbb
inc
and
cld
inc
dec
or
xor
jge
and
jb
out
in
xor
inc
call
sbb
int3
or
inc
pop
ins
fwait
pop
movs
std
sub
adc
hlt
dec
outs
jns
cmc
or
leave
aas
jmp
aam
push
jb
fcomp
outs
mov
push
cmps
mov
mov
xor
fist
icebp
ins
sub
and
retf
xor
sub
sar
cmp
or
and
retf
mov
dec
jle
repnz
xor
dec
mov
mov
cmp
mov
and
push
dec
test
shr
std
pushf
adc
jg
pcmpeqd
jmp
sbb
jmp
bound
popf
add
add
pushf
in
fbld
(bad)
bound
cmc
(bad)
call
cdq
cld
call
jmp
push
cmc
dec
or
cli
rol
fnstcw
sbb
sahf
and
(bad)
xor
mov
push
inc
mov
(bad)
iret
cmps
sub
fadd
xchg
std
and
aas
and
sub
xor
push
popf
fadd
loope
dec
fcomp
inc
push
sbb
mov
adc
popf
cmp
clc
leave
mov
pop
std
xchg
pop
scas
pop
out
inc
das
call
xchg
repnz
jo
inc
test
mov
adc
cld
push
hlt
jnp
std
xchg
fist
sub
pop
ror
mov
mov
mov
(bad)
in
jmp
mov
mov
shld
and
scas
fst
test
cdq
addr16
push
repz
mov
xchg
pushf
sub
rcl
div
mov
xchg
cdq
adc
pushf
data16
xchg
push
std
loop
popf
bnd
mov
push
popf
retf
pop
push
xor
loop
out
arpl
xchg
add
pop
jb
jmp
ds
and
cmp
dec
std
cmp
imul
(bad)
clc
mov
xor
ins
popf
fsubr
out
dec
out
clc
jle
pop
dec
dec
imul
xchg
gs
sbb
or
aaa
call
xchg
mov
(bad)
fwait
push
jge
dec
and
fs
dec
(bad)
movs
retf
enter
or
int
shl
js
lahf
das
call
pop
jmp
pushf
stos
clc
inc
pop
sub
xor
rcr
(bad)
imul
cld
in
icebp
in
inc
es
(bad)
mov
add
popf
cmp
cmp
mov
add
mov
add
fdiv
mov
in
cwde
ins
inc
cmp
adc
in
inc
cmps
call
jb
xchg
mov
jle
xchg
pop
lock
call
ret
dec
pushf
loopne
cmp
repz
sbb
cs
iret
and
or
xchg
and
sbb
into
xor
retf
add
lods
cmp
mov
and
ret
mov
scas
mov
sub
pop
call
add
popf
fist
jo
mov
call
repnz
mov
loop
push
sub
fst
sub
push
push
ja
inc
mov
jns
cld
mov
addr16
xor
and
pop
call
test
test
lds
clc
ins
test
or
sub
std
ss
inc
movs
xor
jb
outs
mov
xchg
and
push
(bad)
in
pop
(bad)
std
loope
lahf
nop
pop
or
mov
lods
loop
aam
xor
mov
jb
sbb
inc
movs
out
push
mov
jg
stos
xor
ret
add
(bad)
sbb
das
xor
clc
jg
mov
(bad)
mov
outs
and
paddw
pop
xchg
ret
add
clc
adc
jg
stos
mov
sahf
pop
enter
call
cmc
jp
push
lods
jne
jns
popa
hlt
jmp
or
mov
loop
iret
lods
xchg
call
mov
setle
pop
test
pushf
mov
cmps
fidiv
icebp
scas
cmp
lahf
push
mov
xor
jnp
(bad)
sub
xchg
popf
jle
into
adc
pushf
pop
xchg
popa
fcmovnu
cld
movs
std
mov
or
xchg
out
rcl
mov
xor
outs
loop
fistp
ss
(bad)
mov
lock
fist
out
cmp
inc
cmp
or
mov
sbb
retf
sbb
fs
call
es
push
(bad)
(bad)
stc
add
inc
sbb
mov
push
js
jmp
lods
outs
test
add
shl
in
xchg
fisttp
aas
pop
xor
ins
mov
sub
pop
neg
sti
cmp
and
aaa
jg
outs
test
mov
jb
xor
loope
jno
add
sub
retf
pop
and
and
std
mov
mov
cmp
ds
xchg
les
jne
add
and
aam
ins
mov
jle
and
sbb
movs
fdivr
adc
jmp
mov
jo
cmp
sti
test
cdq
fdiv
in
jle
retf
inc
and
stos
sub
sbb
hlt
mov
aas
sar
dec
jbe
scas
int3
jmp
push
jmp
loope
faddp
cmp
fst
cdq
pop
sub
cmp
ds
pop
push
(bad)
push
and
ins
dec
dec
mov
out
cmps
je
dec
push
lea
test
mov
popf
or
(bad)
sti
test
mov
dec
retf
add
mov
fwait
mov
sbb
jmp
adc
sub
imul
je
sbb
push
add
std
sahf
cli
inc
or
dec
js
retf
addr16
mov
popf
xchg
jno
(bad)
(bad)
std
loopne
cmc
mov
jecxz
sub
int
movs
mov
jl
mov
ret
pushf
aam
push
push
mov
dec
stos
std
sub
dec
push
js
mov
jbe
iret
cmps
jbe
adc
pop
mov
(bad)
mov
mov
mov
and
jp
js
(bad)
jne
sahf
xor
dec
push
loope
mov
out
mov
cmp
lods
and
xchg
jmp
lods
nop
mov
xor
inc
dec
sub
add
fwait
add
mov
xchg
pushf
loop
icebp
jecxz
xchg
inc
xlat
out
or
cld
popf
loop
push
rol
mov
jnp
fdiv
inc
lea
jle
jp
cwde
inc
push
aad
mov
sti
out
and
dec
sahf
sbb
adc
stc
fs
xchg
(bad)
jns
pop
pop
mov
or
aas
outs
cmp
clc
icebp
fwait
inc
outs
mov
(bad)
cld
aad
xor
ja
ja
nop
sub
fs
sbb
fdivr
repz
xchg
(bad)
enter
jg
xchg
ds
out
pop
mov
test
and
pop
add
mov
aad
data16
ror
mov
mov
push
lahf
xor
ds
repnz
inc
cmps
pop
pop
call
ficomp
rol
or
vpmovsxwd
pop
sbb
xchg
sub
jmp
out
out
mov
ins
and
std
xor
push
idiv
(bad)
push
dec
es
add
call
push
lods
ins
push
in
or
sub
pop
push
call
shr
stc
mov
sbb
imul
push
xlat
xchg
inc
ds
mov
in
cwde
cli
into
fstp
pop
test
popa
jmp
retf
mov
fsubrp
call
or
ret
cwde
xor
cld
jmp
fist
xchg
sub
cmp
loop
jmp
fdiv
les
push
fcmovbe
pop
mov
(bad)
sbb
pop
ffree
jno
lahf
cld
fwait
dec
dec
in
mov
push
loopne
mov
arpl
or
pushf
in
adc
push
fisttp
and
mov
mov
popf
push
xchg
cmp
rcr
and
push
cld
or
lock
or
dec
jb
cmps
pop
mov
cld
push
cmp
call
add
scas
xchg
xor
jmp
cmp
pop
js
pushf
xchg
fld
pushf
cli
push
xlat
(bad)
sbb
popf
dec
xchg
repnz
mov
jmp
pushf
je
scas
mov
pop
adc
call
mov
push
outs
popf
and
out
jle
ss
inc
mov
(bad)
in
lds
scas
arpl
pusha
jmp
icebp
dec
mov
in
std
lods
mov
sbb
retf
push
mov
push
stos
push
mov
(bad)
add
push
(bad)
repnz
dec
mov
stos
xchg
imul
loopne
sub
mov
cmp
outs
sahf
scas
jae
and
jmp
test
mov
adc
xchg
mov
xchg
outs
enter
call
xchg
dec
bound
mov
pop
dec
sbb
loopne
xchg
sub
pop
sbb
iret
pushf
xor
sbb
cmc
lods
adc
pop
jl
lods
cli
or
imul
sbb
je
es
repz
in
cmp
xor
into
in
sbb
std
stos
out
test
scas
lds
sub
dec
or
pop
fdiv
or
sbb
pop
aam
xor
sbb
push
pop
into
fs
enter
dec
inc
mov
mov
sub
sahf
xchg
outs
mov
jmp
add
and
popf
stos
sbb
sub
std
pop
add
loop
pop
xchg
je
jbe
fld
jl
push
xchg
jg
jbe
mov
cmp
sub
popf
inc
sbb
retf
xchg
adc
scas
lods
int3
nop
mov
inc
lods
xchg
adc
popf
dec
test
loope
cld
adc
xor
mov
aam
jns
xor
test
jl
mov
cmp
push
popf
or
repz
aas
jmp
pushf
(bad)
adc
lods
adc
pop
(bad)
pop
and
jge
stos
ficomp
pop
fnsave
sti
and
pushf
test
sar
test
mov
mov
fdivrp
aaa
mov
enter
sahf
sbb
lahf
dec
stc
and
fld
push
cmc
stos
pop
(bad)
and
dec
std
mov
in
jns
add
out
ins
fnsave
adc
add
call
pop
fs
mov
inc
in
jecxz
mov
(bad)
jmp
push
out
out
mov
jns
retf
xchg
lock
(bad)
xor
call
cmp
dec
adc
push
mov
retf
in
les
dec
popa
imul
in
sub
xchg
pusha
push
call
in
inc
mov
das
fmul
cdq
(bad)
out
cmps
ret
jb
xor
stos
rcr
loop
inc
sbb
xchg
dec
add
in
and
call
lahf
mov
push
mov
mov
or
adc
jmp
sbb
rcr
ja
or
push
cmps
popf
inc
ja
movs
add
ins
or
sahf
fcom
and
aam
ret
sbb
jmp
test
adc
pop
sahf
push
mov
push
in
fs
fwait
jp
outs
push
adc
call
add
xor
retf
push
lods
xchg
cmp
frstor
cdq
mov
mov
mov
mov
std
imul
add
mov
and
push
adc
dec
or
lock
les
jmp
sbb
cwde
rcr
dec
inc
jmp
lock
add
loope
retf
dec
rcl
push
xlat
jmp
xchg
pushf
jb
mov
xlat
fwait
mov
loop
sahf
hlt
jbe
(bad)
jbe
mov
xor
sbb
cwde
push
mov
sbb
ror
and
test
cmp
inc
popf
xor
ret
and
adc
fcomp
gs
cld
(bad)
adc
scas
cmp
jns
jbe
call
push
fsub
int
popf
push
push
out
xor
mov
mov
loop
data16
or
sbb
cwde
pop
or
add
cmp
sbb
add
sub
cs
sahf
push
xor
fs
pushf
test
xchg
mov
jp
loop
mov
call
inc
test
mov
fdiv
pushf
xchg
pop
or
dec
pop
repz
jl
retf
cmps
std
in
stos
lea
pushf
cmp
mov
mov
xchg
inc
aad
inc
(bad)
std
int
aam
call
scas
jl
mov
neg
jp
ss
sar
jne
mov
sub
aaa
(bad)
xor
jo
cs
mov
out
mov
jno
pop
aaa
dec
ret
popf
mov
test
in
and
std
jle
shl
mov
inc
push
xchg
fcomp
popf
cld
push
cmp
cmps
mov
add
js
clc
js
lock
cld
and
add
loopne
dec
mov
inc
push
push
imul
dec
and
cmp
sahf
push
sub
fild
shl
xchg
sbb
loopne
ror
hlt
or
or
mov
sub
movlps
stos
sub
call
retf
sbb
sahf
jl
in
cmps
xchg
ret
js
sbb
ins
xchg
jbe
shr
adc
xor
adc
ja
mov
pop
loopne
(bad)
xlat
pop
mov
mov
neg
xchg
cwde
add
adc
add
cmp
pop
adc
pop
jns
mov
call
retf
adc
aad
inc
mov
ss
mov
xchg
inc
sbb
outs
sahf
and
outs
mov
xchg
cli
test
push
or
scas
adc
pop
outs
or
iret
pop
aam
(bad)
and
sbb
mov
dec
add
jl
add
popf
loopne
sbb
xor
fisttp
icebp
mul
pop
cmp
and
mov
fisub
push
jle
dec
and
scas
push
mov
cmp
dec
not
mov
jbe
shl
les
dec
pop
movs
ins
call
shr
xor
popf
sbb
daa
xor
repnz
call
or
gs
call
test
stos
mov
mov
movs
pop
pop
loop
dec
std
hlt
ins
push
shl
lds
fist
cmp
fsub
xchg
aas
icebp
loope
push
aaa
sahf
pop
cmp
cld
aad
out
pop
je
push
or
pushf
mov
jo
mov
std
cli
(bad)
mov
dec
call
adc
pop
call
jge
add
sub
jp
adc
std
adc
aam
xlat
dec
xchg
jmp
or
popf
cmp
mov
enter
test
out
dec
sbb
mov
outs
push
in
int
xor
cs
mov
rcr
sbb
mov
inc
cmp
stos
cwde
sahf
cmp
imul
or
leave
pop
dec
js
xor
out
sub
sbb
xchg
fcom
mov
dec
jmp
fs
mov
mov
lods
xchg
(bad)
push
call
pusha
xor
sbb
addr16
mov
dec
push
or
gs
cmp
push
adc
mov
popf
and
sbb
cdq
clc
cmp
neg
call
nop
(bad)
(bad)
pop
jmp
and
(bad)
and
dec
sbb
sbb
shl
xor
pusha
mov
cmp
and
jae
mov
(bad)
xor
ret
call
into
int
sub
outs
and
push
movs
mov
ins
sbb
inc
(bad)
adc
xchg
pop
jecxz
or
ret
add
push
jne
jmp
loopne
call
pop
jl
data16
popf
(bad)
xor
pop
cmps
lods
cli
std
daa
stos
jb
sahf
sbb
pop
add
and
dec
iret
mov
mov
(bad)
les
jp
in
mov
pop
mov
pushf
ins
repz
cdq
gs
mov
jmp
xor
std
mov
pop
in
test
dec
cmp
sar
cmp
lods
aad
mov
xor
xchg
data16
popf
jp
lods
repz
mov
movs
fisttp
mov
int
adc
xchg
sahf
sub
jl
mov
push
mov
sbb
in
std
bound
(bad)
imul
sub
icebp
iret
jl
(bad)
jns
jle
xchg
inc
add
fst
test
call
adc
and
gs
jle
inc
adc
cmps
and
cmc
cmp
in
test
pop
std
sahf
fnstcw
push
pop
adc
fstp
leave
mov
repnz
mov
hlt
out
stc
jmp
cwde
cli
lahf
xor
jecxz
inc
sbb
push
iret
pushf
sbb
push
pop
xor
hlt
sbb
inc
sahf
fsub
adc
cmove
repnz
mov
lods
enter
dec
jne
stos
jns
es
lea
cmps
stos
jno
xor
in
pushf
retf
lods
jmp
mov
clc
cdq
jae
inc
fld
jge
out
(bad)
nop
in
cld
mov
bound
addr16
frstor
cmp
into
sbb
inc
out
or
loopne
pop
xchg
sbb
jp
call
xor
jmp
imul
(bad)
push
(bad)
jecxz
mov
mov
ret
enter
mov
push
fwait
push
enter
xchg
push
and
inc
int3
bound
(bad)
popf
mov
adc
test
cmp
cmp
jo
push
cmp
hlt
add
push
mov
sub
daa
std
cmps
push
adc
inc
lods
out
jne
je
inc
xchg
push
aam
mov
adc
jg
xchg
add
mov
mov
add
xor
add
out
addr16
ror
out
inc
es
or
inc
outs
lods
cld
xor
dec
sahf
call
std
ret
pop
sub
lahf
mov
add
out
cmc
ret
std
mov
jne
dec
movs
repnz
mov
out
sbb
mul
mov
sbb
inc
push
fisttp
fld
ds
mov
or
loopne
(bad)
push
push
jbe
push
mov
out
jmp
inc
dec
in
jle
cmp
mov
ret
into
popf
movs
and
add
push
inc
outs
call
popf
dec
push
push
push
out
jo
cld
sub
mov
jp
pop
mov
lds
cmp
jp
(bad)
test
push
stc
pop
mov
adc
sbb
fnstsw
ins
movs
add
mov
aaa
cmp
mov
fwait
ins
jmp
jb
jge
retf
call
pop
fdivr
cmp
mov
jmp
(bad)
mov
dec
fstp
add
popf
sub
pop
icebp
lods
push
mov
call
mov
mov
and
add
and
cmp
imul
mov
mov
fistp
popf
je
test
call
mov
es
jle
xchg
ja
retf
xor
sbb
out
stos
inc
ins
or
popf
jp
mov
jbe
mov
arpl
pushf
fidivr
bound
in
and
test
fild
jl
xchg
cli
stos
add
popf
es
fabs
mov
shl
push
push
mov
mov
sub
dec
popf
fsub
adc
lods
enter
inc
adc
sahf
adc
xchg
mov
movs
rol
mov
out
arpl
xchg
and
mov
fnstenv
cmps
inc
popf
sbb
jl
push
sti
cmps
popf
cmp
aam
xor
fdivr
xchg
nop
sbb
add
dec
cmps
icebp
mov
lock
xchg
dec
mov
adc
inc
cmc
mov
repz
add
jno
cmp
int3
call
and
retf
push
addr16
xchg
int
ins
(bad)
aaa
or
xchg
sub
bound
mov
call
pop
aad
bound
dec
out
pop
cmc
test
stc
pushf
push
xchg
and
pop
popfw
xchg
int3
lods
inc
dec
jp
inc
sahf
xor
sub
cld
(bad)
jae
(bad)
fdiv
cmp
pop
icebp
ja
mul
add
jmp
es
push
rol
ficomp
cmps
pushf
shl
stos
in
movsx
inc
rcl
mov
mov
popf
popf
dec
push
ror
push
xchg
retf
(bad)
or
pop
(bad)
popf
data16
mov
adc
stc
std
iret
sbb
or
imul
xchg
xchg
pop
data16
sar
mov
(bad)
mov
sahf
lock
jle
cmp
cmps
mov
push
cs
pop
mov
cmc
outs
pop
test
xchg
fwait
adc
icebp
popf
sti
mov
xor
inc
sar
popf
dec
scas
clc
(bad)
adc
xor
ss
repz
push
or
mov
dec
push
es
fstp
mov
lds
mov
fsubrp
and
and
xchg
test
sbb
pushf
dec
adc
call
or
pop
int3
(bad)
cmp
call
cdq
fadd
pushf
test
sbb
or
pop
in
iret
dec
add
(bad)
fwait
test
pop
push
ins
call
push
sbb
pushf
push
aaa
inc
lods
sahf
push
popf
lods
xchg
imul
mov
pop
add
daa
lds
fadd
sub
sbb
or
not
xchg
ss
push
sbb
adc
out
shl
aad
pushf
out
or
xor
jle
sahf
aam
push
cmps
mov
jle
adc
jl
stos
es
sahf
sahf
cmp
jge
test
dec
cmps
xchg
movs
lock
dec
xor
fs
cmp
mov
aad
or
mov
arpl
sub
mov
or
test
popf
mov
dec
jmp
pop
je
fist
add
call
pop
aas
loopne
dec
sub
push
clc
ins
cmc
lds
cdq
inc
mov
xchg
mov
outs
mov
(bad)
mov
loop
pop
dec
test
lahf
cwde
mov
push
imul
retf
(bad)
cmc
mov
ds
popf
or
add
call
or
pop
cmp
xchg
and
movs
popf
push
adc
push
cmc
or
dec
dec
(bad)
popf
push
pop
and
sbb
and
popa
mov
ret
cmps
adc
mov
mov
int
push
pop
adc
setb
mov
fstp
mov
add
mov
sahf
out
iret
sub
pop
out
test
nop
xorps
sub
cwde
mov
push
popf
push
and
cmp
iret
jmp
jnp
pop
pop
xchg
dec
mov
push
push
mov
pop
in
mov
sahf
adc
es
or
push
and
cwde
xchg
cmp
sbb
pop
iret
fwait
adc
pop
pop
retf
jne
adc
je
mov
sbb
or
dec
xlat
(bad)
pop
sub
cdq
je
sti
and
dec
cmps
pushf
pusha
call
cwde
mov
sbb
jmp
and
cmp
mov
pop
mov
cmp
xor
jmp
cs
mov
adc
sti
mov
or
dec
mov
es
fdivr
cmp
fadd
add
inc
mov
mov
jmp
out
lods
mov
ins
fldcw
les
cmp
push
dec
test
std
repz
movs
lods
call
ss
repnz
cld
outs
dec
xchg
adc
and
mov
movs
jmp
mov
or
cmps
xchg
cdq
pop
sub
popf
call
mov
jmp
adc
stos
mov
mov
mov
push
std
cwde
loop
jno
bound
ficomp
mov
xor
pop
(bad)
pop
jle
mov
mov
outs
sahf
xchg
or
adc
hlt
sbb
cld
inc
out
(bad)
retf
cmp
jae
fnsave
mov
xchg
or
fidiv
aam
adc
or
push
popf
mov
pop
push
xor
in
add
cwde
pop
mov
xor
xchg
inc
mov
sahf
adc
out
xor
xchg
lods
(bad)
fcomip
cld
js
into
out
mov
enter
fbld
jle
mov
mov
mov
stos
movs
int3
dec
mov
cmps
sti
cld
sub
in
popf
dec
or
and
sar
adc
neg
mov
cmc
add
pusha
dec
xchg
push
adc
loop
daa
cwde
add
outs
jae
add
retf
pushf
call
popfw
sub
inc
mov
outs
ins
std
out
xor
fisub
or
frstor
push
cmp
push
push
(bad)
(bad)
pop
stos
sbb
push
sub
jo
pop
std
mov
xor
loop
jbe
stc
clc
xchg
push
cmp
inc
loop
lock
jmp
fcomp
(bad)
cld
arpl
add
jnp
sbb
cmp
lahf
out
inc
std
std
jnp
add
dec
lock
xchg
dec
gs
mov
aad
scas
push
xchg
popf
or
mov
mov
mov
imul
icebp
inc
sahf
cmp
push
leave
cld
add
dec
inc
out
sub
inc
call
ins
xlat
push
sbb
and
aam
pushf
mov
clc
pushf
pushf
fadd
mov
dec
mov
div
mov
sbb
dec
call
(bad)
je
pusha
loopne
mov
je
pop
les
adc
mov
std
pop
ror
aam
dec
mov
test
call
daa
call
push
or
into
push
lods
jl
leave
aam
shl
lahf
mov
xor
jp
xlat
dec
adc
jge
retf
pop
cmps
xchg
ficom
push
lods
sti
push
jmp
jecxz
iret
cmp
popf
push
jnp
rcl
dec
nop
aas
in
test
inc
hlt
aaa
adc
or
jg
aad
ja
imul
fwait
popf
sbb
pop
xor
faddp
mov
jg
adc
loope
xchg
mov
ficom
pop
arpl
icebp
out
pop
cmp
mov
dec
iret
sub
pushf
(bad)
and
add
sub
in
mov
mov
popf
dec
push
jns
sahf
rcr
jl
jecxz
mov
js
xchg
mov
mov
jle
cli
inc
lods
pop
and
out
sub
mov
mov
(bad)
xchg
mov
add
cmp
stos
xor
jmp
mov
inc
xchg
mov
push
mov
xor
cwde
popf
mul
lods
and
(bad)
aad
arpl
xchg
movs
sbb
fdiv
jl
outs
das
xchg
das
mov
(bad)
adc
and
pushf
scas
fcomp
sahf
std
push
jbe
test
js
loop
scas
and
cmp
imul
push
mov
fwait
popf
push
push
ret
mov
xchg
into
xchg
movs
aam
xor
retf
cmc
pop
pushf
add
mov
mov
cs
jo
xor
push
(bad)
aad
add
xor
dec
mov
maskmovq
neg
or
adc
xchg
jo
mov
mov
retf
mov
xchg
sbb
cwde
adc
push
push
(bad)
mov
addr16
cli
fild
adc
jae
cld
cmp
sar
cmp
cmp
cwde
movs
sar
mov
test
out
pop
push
pop
pop
sbb
cwde
mov
and
call
push
in
sbb
or
in
adc
(bad)
sub
cmp
lds
mov
sbb
and
std
and
jg
test
fiadd
in
xor
sub
cli
add
mov
test
push
mov
and
dec
mov
ret
je
dec
cmp
push
popa
imul
dec
(bad)
(bad)
fs
push
popf
xor
mov
xor
cwde
cs
std
sub
popf
lahf
dec
sub
std
ficom
sahf
add
mov
neg
mov
xor
mov
pushf
cmp
test
cmp
or
ffree
outs
cmps
shl
fiadd
mov
std
stc
in
and
sub
mov
push
pushf
dec
sti
test
mov
aas
adc
cmc
in
xchg
out
fnstenv
stc
das
outs
xor
popf
sbb
or
cmc
mov
clc
add
mov
retf
xchg
xor
add
test
repnz
pushf
cmp
sub
fwait
loope
out
sub
iret
data16
jecxz
lock
jge
(bad)
data16
daa
mov
mov
mov
add
push
mov
cmc
pop
imul
lods
mov
out
add
outs
dec
test
and
push
add
fs
adc
imul
push
cmp
jmp
xor
in
dec
xor
repz
push
pop
popf
les
test
retf
cld
mov
stc
or
popa
inc
mov
jo
mov
mov
cli
ss
push
and
stc
mov
and
pop
sbb
cwde
xchg
fwait
sbb
lods
mov
out
punpckldq
cdq
adc
jge
pop
sbb
loop
loopne
or
cmp
add
add
jb
call
xchg
call
in
nop
int3
call
jp
push
mov
or
std
fs
test
xlat
lods
imul
mov
jg
xor
stc
iret
popf
pushf
outs
xchg
in
loop
bound
inc
retf
fwait
dec
fs
cs
mov
xor
and
call
or
out
pop
xchg
pop
std
jl
add
std
ja
and
jmp
xchg
(bad)
shl
call
push
setae
xchg
dec
xchg
or
jae
cmps
cli
pushf
bound
or
shl
test
dec
jno
xor
(bad)
(bad)
jle
repnz
dec
rcr
cli
cmp
xor
fisubr
dec
sahf
xchg
rcr
mov
jnp
adc
and
cwde
lods
or
sbb
mov
mov
ret
aas
iret
jbe
push
sbb
dec
jmp
pop
pop
sub
loop
je
jb
(bad)
bound
mov
pop
std
cwde
je
jb
test
outs
adc
cmp
sbb
cld
mov
repnz
jmp
frstor
push
ret
loope
shl
test
scas
cmp
sahf
mov
stos
pop
stos
out
mov
inc
ss
lock
loopne
cld
loopne
pop
test
(bad)
sar
aaa
in
sub
iret
push
stos
jmp
out
xchg
xor
xchg
add
adc
outs
cli
xor
inc
lods
cld
inc
xor
aas
jecxz
jo
test
sub
fldl2t
(bad)
retf
nop
sbb
std
enter
sub
scas
pushf
stos
addr16
(bad)
cmps
and
aad
stos
std
push
mov
std
sub
repz
call
adc
into
ret
or
aas
sub
push
movs
call
out
sahf
jl
xchg
adc
jb
jge
cmp
xchg
(bad)
std
das
ds
jge
pusha
dec
call
ja
push
cmps
push
dec
dec
(bad)
cmp
(bad)
jp
push
xor
scas
movs
scas
call
push
jp
test
(bad)
dec
xor
push
nop
out
rcl
mov
push
sbb
shl
sub
ja
mov
pop
cmps
jle
jl
cmp
ror
out
clc
(bad)
arpl
mov
xchg
int3
call
(bad)
xchg
pop
sbb
retf
sbb
jmp
cs
movs
mov
dec
sub
xlat
cld
fld
xor
mov
inc
outs
xchg
(bad)
out
call
in
jmp
mov
aam
jecxz
dec
pop
addr16
lea
cmps
ret
xchg
pushf
ss
test
les
out
clc
cmp
add
cmp
inc
mov
jne
in
jmp
call
xchg
add
mov
xchg
js
mov
push
aam
sub
test
ins
popf
(bad)
rol
(bad)
xchg
cmp
test
push
std
inc
scas
jmp
pop
jmp
cmp
int
popf
mov
gs
adc
rcr
test
sub
xchg
add
loop
call
(bad)
rcl
lea
xchg
pop
push
stos
in
std
popf
or
or
(bad)
jmp
push
inc
inc
movs
popf
int3
test
push
pop
fimul
mov
mov
sahf
call
dec
xchg
aaa
push
mov
jmp
or
xchg
jmp
daa
xor
fld
imul
pushf
jbe
and
mov
lahf
and
repz
xor
ja
xor
movs
ret
xor
cmp
lods
scas
sub
lods
sbb
and
jl
push
das
jae
pop
icebp
call
je
shr
mov
popf
sbb
fwait
test
pop
add
dec
push
xchg
popf
mov
jmp
dec
push
adc
pushf
jl
inc
scas
mov
mov
cmp
cmp
(bad)
jmp
xor
stc
inc
and
xchg
mov
sbb
ror
call
sbb
push
mov
js
xor
mov
not
ret
adc
enter
call
mov
int3
loope
fadd
or
xchg
or
inc
sub
repnz
loopne
pop
outs
xor
aam
popf
jbe
out
xchg
hlt
cwde
mov
adc
out
sbb
mov
sbb
popf
mov
daa
stos
adc
mov
clc
cmps
mov
pop
outs
jmp
sbb
or
add
sbb
mov
mov
ror
adc
test
jmp
inc
sub
cmp
add
pop
inc
cmc
sbb
or
sbb
out
loopne
jle
test
inc
or
fisttp
mov
mov
adc
pushf
add
adc
je
(bad)
dec
std
lds
jmp
fs
int
inc
je
(bad)
arpl
loopne
mov
dec
jno
addr16
nop
mov
bound
clc
cld
xchg
mov
out
loop
push
fild
fisttp
adc
iret
jl
icebp
pop
sub
cs
mov
add
mov
jmp
call
stc
fwait
sub
hlt
jl
movs
dec
mov
mov
or
call
stos
fmul
xchg
popf
cmp
gs
add
jecxz
xor
dec
nop
inc
mov
aaa
mov
lahf
cmc
mov
push
jle
push
sbb
popf
mov
retf
jno
pushf
jg
ror
lods
mov
sbb
xor
outs
stc
xlat
push
cmp
or
mov
std
out
movs
adc
jmp
popf
(bad)
pop
fscale
inc
and
jg
int
loopne
ins
pop
lds
nop
clc
push
pop
cmp
or
(bad)
jge
cwde
mov
cld
pusha
cmp
jb
jle
push
loop
rcr
loopne
xor
retf
fmul
imul
jmp
jg
cmp
mov
sahf
pop
and
lahf
ror
jo
xchg
cmp
pop
mov
clc
and
scas
fdiv
jecxz
aam
out
pop
clc
out
(bad)
out
arpl
and
scas
push
sbb
adc
scas
lea
xchg
add
xor
(bad)
mov
rol
sub
cs
add
test
and
dec
and
aad
outs
ficom
retf
stc
inc
adc
imul
test
aam
mov
dec
ror
retf
sub
jl
shl
popf
retf
jno
stos
jmp
ficomp
imul
and
nop
(bad)
push
mov
call
pop
lea
icebp
lods
inc
fwait
mov
fisttp
jbe
call
inc
lods
xchg
adc
pop
popa
xor
pop
test
imul
out
pop
aad
call
neg
xchg
test
xchg
inc
popf
in
xchg
stc
jae
mov
ds
popa
or
jo
(bad)
xchg
push
mov
or
outs
sub
repz
cmps
int3
pop
retf
ins
sahf
shl
sbb
ja
cdq
cmp
jmp
sahf
out
jecxz
popf
rol
sub
pop
xor
sbb
push
movs
pushf
aam
or
ds
jmp
or
push
and
pop
mov
std
or
push
inc
or
call
fild
inc
pushf
sbb
icebp
fdiv
cdq
jl
xchg
jmp
sti
lds
pop
xor
add
aam
sub
pop
jp
inc
push
mov
sub
push
mov
popf
retf
mov
xor
xor
sbb
lods
shr
pop
xchg
das
popf
test
ror
push
add
jge
test
pushf
hlt
fdivr
mov
and
daa
xchg
jmp
push
dec
arpl
sub
cmc
pushf
mov
push
repz
add
pushf
stos
(bad)
adc
inc
lock
les
retf
(bad)
pushf
movs
sbb
sbb
push
ins
adc
retf
out
pop
xor
retf
or
dec
ret
cmp
aaa
mov
dec
pushf
sub
cmp
xchg
and
mov
mov
jne
in
cmps
xor
xchg
out
rol
jae
xchg
jge
xor
sbb
call
movs
imul
mov
mov
iret
inc
call
je
in
add
test
pop
sbb
jne
xlat
(bad)
idiv
hlt
xchg
mov
lahf
call
(bad)
nop
mov
dec
or
lahf
push
push
and
dec
js
jg
xor
jmp
popf
ins
and
cmc
ins
fstp
adc
cvtps2pi
push
in
sbb
jge
pop
test
sbb
push
pop
jmp
mov
ss
popf
div
out
in
inc
out
add
jp
inc
fsubr
fnsave
fdivr
inc
push
xchg
mov
pop
inc
ret
ret
shl
mov
fwait
sub
dec
cli
sti
mov
cmp
popa
adc
and
cmp
jecxz
cli
and
xchg
lods
pop
jle
inc
ror
sar
adc
add
addr16
mov
mov
test
jbe
mov
cmp
ret
out
lods
call
aaa
out
xor
sbb
(bad)
fdiv
or
pop
pop
sub
xchg
adc
rcr
sbb
jl
popf
fimul
aad
add
fwait
pop
popf
mov
jl
aad
ret
pop
repnz
enter
popf
xchg
inc
(bad)
jg
jl
stos
cli
dec
fwait
jmp
mov
ret
adc
push
retf
dec
adc
(bad)
fwait
sub
xchg
out
fstp
iret
pop
push
inc
mov
(bad)
mov
adc
test
or
lds
inc
add
jmp
push
sub
xchg
loopne
nop
fisub
dec
mov
imul
out
test
fist
add
jb
push
retf
adc
add
ficom
and
pop
dec
push
cli
stc
add
jne
fcomp
pop
std
mov
test
or
jp
mov
adc
inc
jmp
push
jg
fistp
xchg
mov
xor
jae
outs
loop
sti
es
loope
push
adc
dec
sahf
dec
xor
mov
mov
or
(bad)
into
sbb
inc
and
(bad)
adc
popf
gs
add
jbe
inc
dec
aaa
add
ret
cmp
and
push
inc
ds
sbb
mov
mov
mov
or
sub
push
mov
cmp
inc
or
hlt
in
mov
fcomi
test
cmps
cmp
ret
cli
das
add
cmp
aad
shl
cmps
jmp
inc
dec
(bad)
retf
dec
scas
and
pop
mov
inc
cmp
and
fwait
mov
mov
mov
cld
or
push
ss
mov
ins
add
mov
xor
pushf
stos
lods
sub
xchg
(bad)
call
mov
adc
hlt
jmp
pop
xor
retf
in
(bad)
cmp
sbb
cwde
ss
jmp
and
out
sbb
iret
js
aas
sar
test
push
fidivr
push
pop
adc
inc
pop
cmp
cld
pushf
mov
mov
lods
adc
out
xchg
cmp
mov
mov
lods
jl
rcr
jo
fwait
clc
pop
mov
popf
leave
add
xchg
scas
dec
cmp
imul
add
daa
push
push
popf
xor
adc
test
int
(bad)
sbb
xor
mov
imul
mov
xchg
jge
pusha
loop
push
dec
in
jl
pop
pop
add
pop
sbb
add
(bad)
jo
dec
popf
adc
repnz
and
(bad)
fmul
icebp
fiadd
or
popf
sbb
jmp
xchg
or
push
fstp
std
xor
sbb
mov
mov
popf
sub
mov
mov
dec
les
mov
movs
(bad)
stc
arpl
dec
cmp
dec
add
pop
dec
(bad)
aas
mov
dec
jecxz
or
imul
mov
jns
xlat
jae
aad
pushf
lea
xchg
fcmovne
loopne
push
ins
xchg
sub
cmc
dec
sub
sahf
sub
add
(bad)
imul
xchg
push
call
std
adc
pushf
sub
icebp
popf
(bad)
js
ret
dec
fdiv
mov
daa
outs
push
inc
or
call
mov
mov
push
cmp
xchg
push
or
push
lock
inc
popf
retf
inc
(bad)
imul
inc
dec
mov
jl
pop
dec
ror
xor
enter
les
ds
lods
aas
sti
aas
mov
lods
je
cmps
pushf
inc
or
jge
or
scas
movs
loopne
imul
(bad)
sbb
sbb
out
cmove
jmp
mov
mov
popf
loopne
rcl
cwde
(bad)
or
xchg
mov
add
or
call
push
dec
xchg
aas
in
inc
mov
ss
js
push
int
dec
inc
repz
das
cmp
movs
xchg
arpl
in
sub
inc
mov
mov
in
pushf
call
xchg
sbb
clc
mov
std
mov
jge
xor
cdq
stos
push
ficomp
push
fnsave
pop
call
sub
jmp
mov
pushf
mov
jmp
adc
jae
mov
add
adc
xchg
xchg
push
jmp
loopne
push
sub
jge
neg
ror
inc
outs
movs
std
xchg
clc
test
jb
mov
cmc
xchg
mov
mov
adc
pop
xor
gs
repz
jne
mov
cmp
jmp
imul
xchg
repz
(bad)
es
int
mov
call
into
aas
inc
lock
mov
fdiv
call
and
jmp
push
pop
dec
cli
sahf
add
(bad)
(bad)
mov
adc
xor
mov
or
lock
loope
call
sbb
pusha
retf
or
pop
call
fidivr
pop
fcom
and
pushf
or
xor
(bad)
movs
call
or
sub
cmp
jmp
jmp
stos
pop
adc
xchg
ins
sbb
jbe
jle
mov
mov
popf
fdivrp
add
or
cli
popf
pushf
sti
je
sbb
div
jb
call
sbb
bound
setge
add
xchg
dec
fistp
dec
xor
and
lods
and
int
push
xor
cld
adc
and
adc
jecxz
cld
popf
cmp
jmp
pushf
sub
test
int
jne
push
pushf
sahf
in
adc
out
ror
mov
cmp
mov
jg
add
push
and
dec
jmp
cmp
push
xchg
nop
jnp
lea
sub
mov
pop
pushaw
pushf
pushf
dec
dec
fnstsw
xchg
dec
popf
push
iret
jns
into
mov
repnz
pop
sahf
imul
out
mov
sbb
sar
dec
enter
cmp
and
mov
cmp
mov
(bad)
pop
in
cmps
hlt
mov
add
cmp
sti
lahf
xchg
xchg
xchg
dec
std
xor
push
cli
and
sub
in
add
ins
sar
icebp
pusha
jmp
inc
adc
cdq
or
std
or
jnp
cmp
xor
sbb
pop
mov
test
scas
cld
xchg
fwait
xlat
jmp
stos
mov
lea
(bad)
test
add
dec
mov
pushf
stc
push
cmp
sbb
xchg
push
mov
jne
stos
mov
and
ret
fstp
retf
xchg
in
push
jmp
loope
arpl
enter
fcomp
add
mov
sub
popf
fmul
xchg
fidivr
(bad)
inc
mov
mov
push
mov
shr
sub
jecxz
xchg
push
nop
pushf
stos
jmp
add
mul
sbb
pop
or
push
jo
pop
popf
xchg
ficom
popf
push
dec
jecxz
ds
mov
add
mov
push
ret
jl
pusha
adc
dec
jae
add
jb
pop
jecxz
pushf
jo
movs
jne
dec
mov
cmc
bound
popf
inc
mov
push
xor
mov
pop
imul
xchg
jg
jp
pop
ds
jle
scas
add
mov
adc
and
aam
pop
pushf
push
jge
retf
rcr
push
ret
mov
retf
push
mov
dec
jmp
jp
push
xlat
popf
stos
cmp
mov
lods
or
jge
xor
push
mov
sahf
cli
clc
mov
xor
rcl
jl
scas
popf
sbb
cmp
sub
and
js
sti
push
das
aam
arpl
popf
lods
adc
retf
cld
or
mov
retf
inc
test
and
pop
(bad)
std
xor
push
jb
xchg
jle
out
data16
out
(bad)
pushf
rol
add
call
iret
mov
std
jns
js
mov
mov
xor
aam
inc
lahf
(bad)
pop
repnz
or
cmp
stos
fistp
add
pushf
mov
cmovs
lock
call
cdq
test
pop
mov
call
inc
in
cmp
addr16
jmp
push
and
popf
in
mov
pop
pop
mov
out
loope
pop
inc
adc
popf
ds
ins
gs
mov
mov
clc
ja
or
inc
popa
cld
cli
fwait
sub
je
mov
ret
popf
mov
xchg
repnz
mov
mov
or
jo
push
jmp
xor
dec
cmc
dec
add
sbb
mov
push
jns
lods
pusha
ds
sbb
mov
bnd
ds
fsub
lods
jg
fbstp
fcom
sbb
push
xor
sti
dec
xor
pushf
mov
adc
mov
jb
shl
test
jl
pop
and
loopne
imul
mov
shl
jno
fs
ins
ja
mov
and
inc
xchg
arpl
arpl
int3
ret
clc
mov
pop
in
jmp
and
mov
mov
jae
push
jae
dec
in
movs
jle
outs
mov
ret
ror
div
sub
push
pop
(bad)
test
xor
jl
or
add
daa
test
data16
mov
(bad)
addr16
dec
popa
add
or
adc
fs
js
stc
cmp
(bad)
xor
adc
dec
cs
dec
jmp
jmp
retf
or
jb
mov
mov
or
pop
out
std
aad
scas
add
inc
adc
rcl
sbb
aas
jns
or
lock
cwde
jae
popf
movs
in
and
ret
std
push
adc
shl
inc
dec
jbe
adc
add
push
pop
mov
sub
ret
not
lahf
(bad)
pop
push
sahf
sahf
add
dec
mov
repnz
int3
hlt
shl
adc
call
jle
and
xchg
in
mov
cmp
loope
popf
xrelease
mov
movq
push
add
out
pop
inc
sbb
(bad)
mov
xor
mov
xchg
mov
fsub
pop
call
call
cmc
mov
pop
dec
mov
sbb
cmps
call
out
mov
stc
adc
pop
mov
cmp
or
test
pushf
sub
cmp
fdivp
xlat
sub
loopne
push
sub
jecxz
cmp
ds
pushf
adc
sub
pop
pop
test
or
call
xchg
jle
cwde
call
inc
push
shl
xor
sub
popa
dec
call
rcr
retf
jne
movs
pop
sbb
in
call
pop
inc
jne
lods
call
idiv
pop
xchg
xor
sub
cli
stc
xor
(bad)
mov
sbb
sub
xor
(bad)
fsub
imul
out
pop
fisttp
lds
sub
mov
test
aad
test
adc
pop
jnp
jecxz
mov
das
scas
mov
popf
xchg
jle
gs
or
mov
test
or
add
jge
retf
cmc
jmp
cmp
pop
pushf
push
aas
add
lods
and
push
mov
jmp
add
shl
ror
rcr
rcr
xchg
pushf
in
outs
add
pushf
pop
dec
xchg
shr
pushf
mov
pushf
cdq
push
mov
xchg
popf
jne
adc
mov
(bad)
call
out
sbb
push
jae
jge
push
cs
dec
call
mov
dec
(bad)
ficomp
loope
push
jg
test
fild
push
jp
std
out
rol
pop
jge
pop
mov
sahf
sub
pop
(bad)
dec
sub
std
xor
gs
call
xchg
fist
pop
mov
out
sub
sbb
inc
push
mov
sbb
xor
ds
call
mov
sar
push
pop
jne
inc
in
push
cmps
popf
and
call
inc
retf
stc
xchg
inc
push
movs
sar
cmp
dec
inc
call
je
add
test
adc
add
or
or
mov
clc
pusha
icebp
add
outs
inc
imul
popf
cmps
ss
in
push
call
js
push
call
mov
outs
dec
xor
popa
movs
aam
popf
loop
push
inc
or
cmp
push
aaa
push
bound
fiadd
test
push
std
and
cmp
push
out
data16
mov
hlt
pushf
test
jbe
cmc
lahf
jmp
jne
add
pushf
in
adc
push
popf
inc
in
pop
sbb
ins
push
jbe
mov
scas
lahf
pushf
sbb
sub
xor
test
jp
test
xchg
push
cwde
cmc
in
lds
adc
arpl
pop
pop
cmp
adc
cmps
arpl
add
inc
imul
sahf
cld
loop
cmc
or
out
clc
imul
stos
sub
xor
mov
popf
cld
gs
sbb
inc
mov
lods
mov
fld
rcr
fst
sbb
ja
in
xchg
fdivr
mov
int
push
add
fldcw
test
rol
push
fwait
(bad)
enter
push
sbb
sbb
arpl
lock
out
pusha
jbe
mov
ret
pushf
cli
mov
cld
mov
or
dec
mov
call
mov
neg
scas
out
adc
dec
mov
mov
(bad)
mov
jg
mov
xchg
cmp
std
bound
in
imul
inc
bound
sbb
xchg
mov
cmps
sub
sub
sub
sub
cdq
inc
popf
adc
cmps
cli
bound
in
pop
jmp
imul
in
pusha
sahf
int3
sub
and
jno
cmc
fstp
mov
add
shl
pushf
aam
sub
(bad)
sahf
sub
stos
outs
ss
pop
inc
cmc
movs
xchg
push
ins
sub
sbb
mov
jmp
lahf
cmp
(bad)
call
outs
ss
inc
out
daa
mov
jmp
adc
in
push
out
mov
jmp
mov
lds
dec
jo
cmp
cmp
mov
popf
or
fs
mov
das
hlt
das
cld
xor
call
pop
cmp
popf
jo
movs
jno
jmp
xchg
sahf
mov
loope
mov
jecxz
(bad)
fnstsw
call
lods
fcmove
mov
(bad)
sahf
std
inc
lea
fisub
dec
bound
imul
stc
cli
loop
jmp
jle
imul
outs
aad
sbb
fs
pop
sahf
xor
push
ins
dec
pop
dec
mov
push
enter
(bad)
sahf
sub
lea
addr16
inc
mov
int
bound
icebp
add
jmp
cdq
cmp
rcr
and
outs
sti
jmpw
rcl
push
pop
or
call
mov
jp
pop
ret
std
shr
into
xchg
add
out
jmp
stc
cwde
sti
das
pushf
aam
xor
pop
or
sahf
jle
push
hlt
lahf
mov
dec
or
or
cmps
test
mov
loop
stos
vpxor
(bad)
loope
mov
lods
jmp
std
pop
or
sub
mov
xor
popa
scas
push
add
cwde
es
jg
jns
mov
jmp
dec
mov
std
jge
ins
cmp
or
mov
add
pop
std
adc
stos
movs
mov
scas
addps
call
aad
std
adc
cld
imul
loopne
mov
xchg
aam
(bad)
sar
std
mov
pop
jbe
ficomp
dec
sub
mov
adc
dec
dec
push
sar
mov
pop
popf
dec
sub
icebp
shl
or
nop
adc
in
sub
xchg
call
loop
sbb
test
cmp
cli
lahf
adc
adc
mov
adc
adc
popf
cmp
xor
cwde
xchg
sub
add
xchg
jbe
dec
in
(bad)
pushf
rcr
jmp
hlt
in
mov
popf
pop
sub
retf
cs
daa
xchg
inc
stos
pop
mov
ja
and
adc
dec
add
fstp
push
enter
xchg
call
retf
pop
push
sub
mov
mov
jmp
push
mov
jns
xchg
and
lods
jo
sahf
pop
leave
or
cmp
fwait
sbb
cmps
sahf
mov
sahf
xchg
mov
out
shl
loop
fwait
shr
pop
cmps
pop
pop
sbb
cmps
ins
(bad)
push
sti
shl
sbb
ss
mov
jmp
and
popf
mov
bound
je
dec
lock
ss
sub
mov
cmc
lock
sahf
inc
mov
pop
inc
ins
inc
mov
jmp
dec
in
lahf
xchg
gs
jle
jno
jmp
call
inc
pop
fs
ficomp
pop
xchg
(bad)
pop
in
clc
and
or
cmp
hlt
std
mov
popf
mov
xchg
sahf
push
mov
rcr
out
retf
(bad)
jbe
retf
(bad)
fcomp
lods
aad
test
inc
fidivr
out
movs
mov
xor
push
lods
stc
jmp
push
pushf
and
data16
lods
cmp
and
out
in
frstor
fdiv
aaa
or
std
xchg
jmp
mov
pop
mov
or
add
into
sbb
sub
mov
mov
rol
call
add
daa
std
repz
mov
call
jle
addr16
ds
xchg
call
ins
fidivr
cmp
inc
cmp
das
pushf
mov
sub
scas
jl
inc
sahf
xchg
aaa
nop
out
repz
in
fadd
cmp
mov
push
push
call
mov
stos
jl
mov
ret
jl
out
or
mov
dec
div
dec
fstp
mov
sbb
and
or
mov
call
cwde
push
push
jno
push
fs
xchg
jo
scas
pushf
push
iret
movs
cli
dec
mov
adc
scas
add
mov
popf
push
and
sar
xchg
fcom
mov
ins
cmps
test
mov
je
(bad)
cdq
out
test
push
sbb
mov
inc
sub
push
mov
xor
sbb
pop
push
mov
add
data16
cmp
push
sar
xchg
pop
jmp
ret
(bad)
sbb
sbb
jle
(bad)
mov
add
dec
xlat
sar
dec
es
xor
dec
(bad)
pop
stc
fwait
test
pushf
repz
xchg
mov
mov
push
sbb
out
xor
sbb
sbb
cmp
cli
fsubr
pop
or
(bad)
stc
push
nop
rol
add
jno
inc
pushf
lods
dec
push
or
lock
jl
cmp
jmp
pop
aad
stos
popa
push
or
and
mov
pushf
out
fst
adc
fwait
cmps
and
(bad)
pop
inc
test
xor
aam
jae
mov
push
popf
clc
mov
movs
retf
jp
mov
out
int
xlat
cmps
inc
adc
lods
rcr
fsubr
xchg
out
ins
push
adc
cld
sbb
cmp
cmp
gs
and
jnp
mov
inc
mov
stc
scas
or
adc
pusha
xchg
je
imul
mov
cmp
pusha
in
(bad)
pop
cwde
inc
enter
(bad)
(bad)
idiv
mov
(bad)
lods
pop
mov
icebp
fisub
xchg
aaa
rcr
mov
push
mov
sahf
data16
lds
fcmove
mov
sbb
icebp
movs
sbb
test
ret
sub
xor
push
mov
jecxz
add
and
xchg
sub
aas
ds
mov
dec
pop
in
pop
sbb
sar
jae
or
add
dec
add
int3
pop
xchg
cli
int
push
xchg
fwait
outs
jmp
call
inc
in
ror
pop
sub
or
out
mov
inc
pop
punpckhdq
repnz
icebp
int3
add
aam
sbb
call
jmp
sub
cwde
je
or
or
sbb
repz
push
int
pop
xor
xchg
stc
xchg
stos
sbb
and
imul
cwde
scas
mov
mov
jg
imul
movs
sub
jg
stc
popa
ja
jl
fcmovbe
call
out
cli
fcomp
test
xchg
outs
sahf
cmps
fwait
xchg
pop
mov
sub
jae
sti
pop
stc
pop
push
mov
repnz
and
pop
shr
leave
bound
add
add
jl
jmp
clc
mov
sbb
popf
sbb
add
lods
mov
in
fnstsw
cmps
inc
or
and
test
(bad)
aad
cs
pop
pusha
icebp
idiv
shl
and
push
rcr
add
sbb
push
ins
xor
jnp
push
adc
repnz
mov
popf
xchg
mov
mov
xlat
pop
loope
push
and
popa
arpl
je
cmps
popf
sub
push
mov
mov
popf
push
(bad)
fstp
mov
test
mov
adc
pop
jnp
shl
aas
and
(bad)
cmp
hlt
lods
je
pop
xor
and
cmp
test
mov
fild
(bad)
adc
mov
into
xchg
push
inc
(bad)
sub
(bad)
lock
cmp
scas
outs
into
sub
movs
inc
jmp
sbb
pop
ins
xchg
std
xchg
test
pop
bswap
xchg
sahf
test
add
(bad)
outs
retf
pop
or
pop
loop
pop
enter
add
adc
mov
and
(bad)
enter
sub
stos
fcom
nop
lods
call
mov
cld
lock
stos
pop
das
in
imul
cdq
loope
adc
rcl
jle
adc
sahf
inc
mov
mov
(bad)
cmp
ror
xchg
mov
je
push
(bad)
pushf
call
push
dec
add
sbb
dec
xchg
stos
cmc
fwait
sub
shl
sbb
cmp
sbb
retf
xor
xor
ins
popf
pop
mov
lahf
sar
sti
fidivr
dec
add
fild
sub
je
jb
sub
mov
sbb
mov
jmp
retf
es
jns
jl
cld
stc
sub
out
jg
das
jmp
out
push
inc
add
inc
stos
sahf
nop
sahf
cmps
pop
ins
add
call
cwde
add
or
push
loopne
shl
mov
jg
cmp
jmp
push
cld
(bad)
int
mov
cdq
loope
je
(bad)
mov
ins
popf
sbb
mov
and
pushf
imul
push
clc
push
push
jmp
pop
cmp
sub
add
int
cmp
push
jle
test
or
imul
dec
js
push
push
inc
sbb
hlt
jmp
jmp
xchg
pushf
push
sub
pop
xchg
sbb
mov
jo
xchg
int
call
xchg
sub
shl
aam
data16
xlat
bound
pop
popf
test
mov
pop
jg
or
jg
aam
popf
call
mov
dec
scas
push
xor
stos
or
adc
mov
jb
repnz
fsubr
ret
(bad)
pushf
add
enter
push
mov
test
popf
test
push
scas
xchg
add
jg
adc
cmps
ret
inc
inc
popf
js
add
dec
mov
sub
dec
xchg
xchg
pop
cmp
add
ds
cmp
sbb
pop
fcmovbe
pop
int
stos
xlat
cmp
jmp
mov
std
sbb
push
pop
test
jge
fild
push
pop
scas
jns
call
mov
mov
clc
cld
das
fsub
sbb
xchg
mov
sbb
jmp
jns
xor
cmps
in
sbb
jnp
(bad)
leave
jnp
sahf
mov
mov
push
pop
mov
fldln2
mov
fst
cmps
fidivr
sub
shr
adc
cld
pop
(bad)
loope
fstp
pop
xchg
loop
sub
mov
test
fiadd
iret
sub
cmp
push
int3
int3
fmul
(bad)
arpl
test
es
dec
mov
hlt
(bad)
fisubr
jg
(bad)
xchg
cmp
loop
dec
out
out
outs
push
xchg
xlat
inc
loop
push
or
repnz
jmp
cli
loopne
fs
mov
xchg
mov
loope
fwait
outs
xor
leave
sub
mov
ss
dec
int
ja
and
cmp
fmul
xor
mov
les
les
xchg
sub
mov
inc
inc
add
ss
xlat
retf
adc
(bad)
jno
arpl
shl
push
inc
cmp
imul
fcom
xchg
shl
xor
ror
cmp
add
cwde
mov
push
imul
daa
pusha
cmp
stos
pop
jne
mov
xchg
or
add
sub
mov
call
lods
inc
pop
rcr
retf
mov
jmp
push
fucomip
mov
sbb
sub
(bad)
neg
jmp
pop
leave
in
fwait
cld
into
movs
and
scas
mov
mov
(bad)
mov
dec
movs
mov
movs
dec
dec
push
jne
out
fldcw
dec
clc
in
std
dec
pop
call
pop
jmp
fimul
cwde
xor
in
push
movzx
retf
sub
iret
dec
inc
cmp
push
mov
jmp
adc
or
out
cmp
sti
test
ss
icebp
push
inc
aam
fsubr
shl
jnp
inc
fwait
test
cdq
clc
or
jp
push
mov
add
popf
push
dec
add
sbb
add
xchg
lahf
inc
mov
out
fcmovne
popf
and
out
aad
inc
mov
call
dec
xchg
psubsb
push
and
cmp
and
cmp
les
pusha
sar
shl
lods
test
mov
(bad)
dec
dec
add
inc
adc
test
jge
pop
int3
neg
xchg
fwait
imul
lea
mov
jne
and
add
popf
or
mov
sbb
jno
fisttp
sub
daa
xor
popf
pushf
cld
mov
xchg
inc
xchg
sub
sub
lods
add
cmp
rcr
in
sahf
mov
pushf
fst
(bad)
sbb
push
call
mov
push
mov
ja
adc
scas
add
in
popf
into
shr
fisttp
aam
sub
sbb
popf
or
add
cdq
push
add
ror
loop
call
mov
push
call
aam
cld
xor
cmp
jo
sbb
jle
test
lods
push
sbb
xchg
mov
int
in
pop
pop
pushf
or
fwait
cmp
adc
jno
scas
pop
popf
ss
movs
jp
popf
cli
or
jmp
add
mov
mov
fs
mov
and
mov
fld
fwait
ret
(bad)
mov
jbe
popa
inc
add
in
test
jle
push
mov
sbb
and
fwait
lsl
dec
add
jbe
daa
outs
stos
pushf
repnz
lock
mov
push
mov
jb
std
pushf
jnp
call
xor
inc
sbb
xor
pop
mov
jmp
enter
mov
and
data16
nop
in
xchg
xor
imul
mov
push
(bad)
inc
mov
es
push
mov
enter
inc
push
stc
fst
dec
mov
jae
popf
push
pop
clc
add
pop
and
jnp
sbb
adc
pushf
inc
cli
stos
js
pop
call
jl
cwde
push
cmps
sahf
arpl
(bad)
pushf
test
or
pusha
test
mov
mov
mov
jmp
je
pop
ret
jge
nop
shr
cmc
push
ds
push
mov
int
jo
pop
es
xchg
fst
fwait
rcr
lods
sbb
pop
xchg
mov
push
leave
push
std
pop
std
cmc
mov
mov
call
cmc
aad
jo
(bad)
js
cmp
cmp
in
or
sub
adc
aas
je
sbb
adc
cmc
push
pop
loop
shr
outs
popf
mov
lods
mov
mov
call
add
sbb
outs
sahf
or
xchg
cld
retf
pop
jo
adc
jo
jnp
mov
ss
sbb
or
ret
shl
jg
data16
sbb
lahf
pushf
mul
loopne
sahf
adc
mov
push
and
mov
or
pop
or
mov
adc
and
lods
mov
and
push
push
cmp
sub
pop
loop
(bad)
loop
sbb
lods
dec
fdiv
cmc
in
repnz
mov
ret
cmp
jae
(bad)
std
int
das
sub
adc
ja
push
add
dec
cdq
popf
test
xor
sub
imul
sbb
mov
fiadd
pop
xchg
xor
popf
or
test
mov
bound
std
cwde
movs
cmp
out
ds
(bad)
mov
pushf
stos
mov
jbe
idiv
rol
mov
sub
into
movs
fisttp
(bad)
fdiv
fcmove
cmp
mov
xor
(bad)
jl
lods
pop
cmps
fist
sti
and
push
mov
out
push
shl
sbb
ror
call
je
popf
std
scas
adc
and
push
sahf
out
aas
push
bound
mov
mov
mov
pop
push
aad
cmp
sbb
mov
scas
std
ds
fwait
mov
(bad)
cmps
add
push
aam
movs
fidiv
popf
in
test
xor
push
emms
or
mov
lea
lods
push
ss
(bad)
(bad)
adc
or
daa
mov
mov
xor
sbb
stc
mov
retf
fcom
popf
retf
pop
in
rcr
dec
push
push
imul
stos
std
mov
inc
(bad)
fmul
enter
xchg
fdiv
rcr
xor
pushf
mov
mov
cmps
inc
xchg
xor
stc
dec
or
lock
lods
xor
add
jmp
sahf
pusha
xchg
xor
dec
loop
jl
fadd
clc
sub
mov
cmp
add
popf
repnz
out
and
mov
outs
mov
ins
out
fadd
cdq
leave
cmp
push
test
mov
xlat
mov
pusha
mov
mov
retf
lods
or
div
sbb
std
push
sub
rol
mov
jno
mov
lahf
(bad)
std
frstor
or
inc
out
mov
mov
cmp
inc
xchg
outs
sbb
xchg
cmp
fwait
daa
out
pop
dec
dec
call
into
retf
pop
adc
in
adc
clc
outs
(bad)
xchg
mov
cmps
hlt
(bad)
popf
std
sbb
pop
mov
and
pop
mov
add
scas
adc
movs
or
stc
fs
xchg
jns
push
mov
popf
and
mov
sub
aas
pusha
xchg
idiv
and
and
cmp
test
clc
jno
aas
or
or
add
sahf
test
cwde
mov
pop
push
push
sub
(bad)
imul
aad
daa
dec
imul
ret
fisub
gs
icebp
sbb
test
cld
push
add
ins
mov
fdivp
and
retf
popa
mov
pop
jno
sar
(bad)
pop
outs
mov
pushf
aad
jmp
call
xchg
jno
std
inc
mov
shr
push
mov
add
ins
loopne
pop
cdq
gs
repnz
inc
lock
test
xchg
xchg
mov
int3
sub
inc
sbb
pop
mov
int
cmc
xor
xor
std
test
in
inc
dec
add
mov
push
inc
popf
bound
popf
retf
adc
(bad)
std
(bad)
push
mov
push
rol
daa
push
enter
xor
std
jle
and
call
push
loope
adc
call
mov
pop
mov
imul
lock
std
xlat
test
add
jmp
xchg
xchg
mov
les
(bad)
mov
cli
or
mov
cmp
xchg
adc
inc
jne
push
mov
adc
adc
cmps
mov
sbb
cmps
fiadd
adc
sbb
or
push
jl
cmp
cld
mov
xor
sbb
push
in
test
pushf
bound
adc
outs
das
popf
cli
pop
(bad)
or
call
jmp
sar
call
mov
stos
inc
cmp
xor
push
adc
inc
pop
std
jmp
jno
stc
jns
cmc
jmp
add
pusha
mov
std
cmp
int
jmp
cmps
sbb
dec
mov
xchg
data16
outs
push
fcomip
not
pop
ins
jle
lahf
sub
and
je
cld
cwde
inc
inc
or
and
xlat
stc
stos
sahf
lock
push
jmp
popf
scas
sbb
into
lea
mov
mov
push
imul
mov
cmp
dec
std
or
cmps
mov
cdq
das
sbb
dec
mov
retf
int
add
(bad)
iret
mov
inc
jle
out
ss
loope
mov
dec
imul
int
push
dec
nop
or
mov
jecxz
push
arpl
in
and
sbb
out
fstp
bound
sar
popf
ins
div
aas
inc
stos
repz
push
shr
outs
icebp
(bad)
fdivr
aad
lods
jmp
jmp
mov
push
div
adc
mov
enter
push
ja
jp
cwde
icebp
call
jno
pushf
ficom
outs
retf
stos
in
in
fsub
jmp
mov
sbb
pop
pushf
cwde
loopne
jg
xchg
dec
jo
jl
push
mov
sub
pushf
sbb
retf
stos
mov
(bad)
call
lea
fwait
popf
not
pop
nop
cmp
je
or
xchg
fwait
outs
sub
iret
mov
mov
outs
pop
out
fwait
shr
xchg
jo
not
cmc
mov
pop
pushf
repnz
imul
pushf
jp
into
cmp
movs
jo
mov
sbb
loopne
and
fwait
nop
push
or
sti
cwde
mov
mov
dec
pop
popf
cmps
dec
test
xor
xchg
ror
push
jmp
sbb
mov
int3
and
mov
sub
cli
add
pushf
xchg
daa
hlt
xchg
add
push
push
dec
sbb
sti
pushf
xchg
xor
dec
stc
or
xchg
xchg
movs
popf
std
adc
pop
and
int3
data16
popa
fistp
add
pop
popf
or
push
mov
xchg
xor
pusha
add
add
shr
std
ss
mov
jg
xchg
nop
dec
xchg
std
(bad)
in
jmp
jns
mov
or
sahf
cwde
sub
mov
push
rcr
fnstsw
popf
dec
mov
xor
pop
xchg
pop
jp
push
test
cdq
bound
idiv
fdiv
push
call
imul
cmp
stos
inc
outs
xor
mov
jmp
sub
adc
inc
push
test
jne
xor
out
inc
mov
push
push
into
pushf
mov
sbb
popf
or
mov
or
pop
scas
stos
mov
clc
push
fwait
cld
adc
ds
inc
(bad)
mov
mov
or
or
xor
pushw
ret
push
cdq
sub
daa
mov
mov
add
pushf
jmp
pop
mov
fbld
out
push
dec
popf
cmp
mov
hlt
outs
es
je
cmp
sub
mov
je
xchg
pushf
test
jmp
mov
stos
inc
jmp
js
fwait
les
sub
hlt
bound
mov
stc
cmp
xchg
lds
fwait
leave
test
fiadd
nop
xchg
inc
cdq
(bad)
sbb
dec
sub
retf
add
test
loop
fsubr
push
std
fcomp
cmovle
mov
adc
(bad)
scas
je
or
mov
cdq
pop
dec
xchg
jb
mov
xacquire
jb
inc
js
(bad)
(bad)
lahf
jecxz
mov
popf
fsubr
ror
fiadd
fwait
jp
sti
jne
mov
pop
jmp
imul
add
arpl
out
cmp
sahf
sbb
repz
imul
(bad)
xchg
jge
push
cmp
cmp
sub
fs
cmp
pushf
mov
or
inc
sahf
out
cmp
push
mov
cli
cmp
push
pop
sub
data16
sub
out
retf
andps
js
and
push
xchg
fwait
push
jno
in
mov
mov
dec
adc
sbb
inc
pop
sbb
fs
and
in
div
jbe
push
inc
adc
fdiv
add
call
add
idiv
push
popf
loope
mov
mov
lds
and
jmp
mov
mov
fnstcw
push
mov
div
jb
nop
adc
add
mov
inc
jle
in
sub
jmp
pop
cmps
or
mov
(bad)
fistp
cwde
jmp
add
lock
mov
sahf
out
mov
jmp
jno
or
cli
std
sub
push
call
data16
mov
fadd
popa
dec
sahf
xchg
xor
xchg
mov
jl
push
sti
add
lahf
sub
or
or
gs
fimul
aaa
mov
xchg
or
push
outs
xchg
jmp
popf
jb
into
pop
mov
xor
sbb
adc
cmp
popf
fdiv
xor
push
jecxz
jmp
inc
cmp
pushf
out
or
outs
inc
jnp
lahf
mov
aad
dec
(bad)
xor
daa
cdq
icebp
dec
mov
sbb
mov
mov
push
mov
neg
je
sbb
mov
inc
(bad)
dec
xchg
mov
pop
mov
push
jae
int
xlat
retf
sbb
mov
and
retfw
div
push
xlat
bound
adc
mov
dec
call
sbb
popf
mov
out
aam
inc
mov
std
fcomp
popa
popf
and
mov
ror
popa
aam
inc
popf
dec
lods
nop
mov
sub
mov
pop
into
sbb
ins
in
popa
xor
pushf
ror
add
mov
sbb
mov
mov
loopne
js
mov
aad
sub
sbb
sbb
int3
fiadd
in
lea
fwait
push
in
ds
push
into
push
pop
lahf
popf
ins
cmp
jmp
icebp
scas
inc
call
cmp
lahf
mov
inc
pushf
sbb
dec
xchg
popf
jle
clc
push
lds
(bad)
pushf
add
into
fdivp
jg
popf
jmp
mov
daa
std
test
lea
fwait
scas
fstp
xor
imul
pushf
pushf
std
retf
push
int3
cmps
out
(bad)
fistp
mov
pop
or
clc
jb
inc
jo
outs
pop
fimul
(bad)
push
psubusw
fidiv
dec
(bad)
push
and
sar
fs
call
pop
cmps
jo
out
inc
std
xor
sbb
xchg
imul
jp
cmc
mov
scas
popa
add
rcl
pop
jle
or
idiv
xchg
mov
inc
and
cmps
mov
pushf
ss
or
jmp
mov
xchg
sahf
ins
xchg
scas
out
jl
inc
mov
add
xor
xchg
pop
cmp
xchg
cmp
pushf
cmp
iret
mov
mov
shl
fcmove
arpl
call
and
mov
xor
into
int3
bound
(bad)
in
mov
fcom
call
pop
inc
dec
sub
lds
call
xchg
clc
jmp
outs
je
ja
je
jmp
pop
lock
popa
jg
xlat
or
adc
fwait
cmps
sub
cli
ins
std
pop
sub
arpl
jl
jmp
mov
lods
mov
jg
cmps
iret
sub
in
jmp
push
popf
xchg
pusha
ret
push
mov
ret
fiadd
pushf
mov
adc
mov
push
sub
xchg
pop
ror
popf
sbb
mov
ret
in
add
in
sub
mov
mov
push
add
mov
cmp
je
xor
mov
mov
mov
cmp
je
or
mov
mov
mov
push
mov
and
mov
push
mov
mov
add
mov
lea
push
call
mov
call
cmp
jne
mov
test
je
mov
cmp
jne
and
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
test
jne
cmp
jne
mov
mov
mov
mov
mov
sub
mov
cmp
jne
mov
xor
cmp
jne
mov
mov
cmp
je
mov
sub
cmp
je
cmp
je
xor
mov
cmp
je
xor
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
cmp
je
cmp
je
mov
mov
sub
cmp
jne
xor
mov
cmp
jne
cmp
jne
mov
mov
cmp
jne
add
cmp
jne
sub
mov
mov
mov
cmp
je
mov
cmp
jne
mov
test
jne
add
mov
mov
cmp
jne
mov
cmp
jne
sub
mov
test
jne
mov
mov
add
cmp
je
cmp
je
mov
add
cmp
je
mov
add
cmp
je
mov
mov
xor
cmp
je
or
cmp
je
sub
cmp
je
mov
cmp
je
cmp
je
add
cmp
je
mov
mov
mov
add
mov
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
or
cmp
je
mov
cmp
jne
add
cmp
jne
mov
mov
mov
sub
mov
or
cmp
jne
mov
mov
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
sub
cmp
jne
mov
mov
mov
xor
cmp
je
mov
mov
mov
sub
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
add
cmp
je
mov
mov
cmp
je
sub
mov
mov
mov
mov
mov
add
cmp
je
mov
mov
mov
mov
mov
cmp
je
mov
mov
xor
mov
mov
lea
mov
cmp
jne
add
mov
cmp
jne
cmp
jne
xor
mov
mov
mov
cmp
jne
cmp
je
mov
add
mov
mov
mov
or
mov
mov
push
mov
mov
sub
mov
cmp
je
mov
xor
mov
mov
cmp
jne
cmp
jne
cmp
jne
mov
xor
cmp
je
mov
cmp
jne
mov
mov
cmp
je
mov
or
mov
mov
cmp
jne
cmp
jne
mov
mov
mov
cmp
je
add
cmp
je
mov
mov
cmp
jne
xor
mov
mov
mov
mov
push
xor
mov
cmp
je
sub
mov
cmp
jne
mov
xor
mov
cmp
jne
xor
mov
mov
mov
cmp
jne
test
je
mov
add
cmp
jne
mov
sub
cmp
je
sub
mov
cmp
jne
mov
mov
sub
cmp
jne
mov
cmp
jne
add
mov
cmp
jne
cmp
jne
mov
mov
mov
add
cmp
je
mov
xor
cmp
je
mov
or
mov
mov
cmp
je
mov
mov
mov
cmp
je
mov
mov
cmp
je
mov
cmp
jne
mov
sub
cmp
je
mov
xor
cmp
jne
cmp
je
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
xor
cmp
je
cmp
je
mov
add
mov
mov
mov
call
cmp
jne
cmp
je
mov
mov
mov
mov
mov
shr
mov
mov
mov
cmp
jne
mov
push
mov
push
mov
push
add
mov
push
xor
mov
dec
mov
dec
mov
call
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
sub
mov
mov
cmp
je
or
mov
mov
mov
mov
sub
mov
xor
cmp
je
add
mov
cmp
jne
sub
cmp
je
mov
sub
cmp
jne
cmp
jne
xor
mov
cmp
je
cmp
je
xor
mov
mov
cmp
je
add
mov
mov
cmp
jne
mov
xor
cmp
jne
mov
mov
cmp
jne
xor
mov
mov
mov
mov
cmp
je
xor
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
push
push
push
call
mov
add
cmp
jne
mov
or
cmp
jne
xor
mov
mov
mov
call
mov
cmp
je
mov
cmp
je
xor
cmp
jne
mov
mov
mov
mov
mov
xor
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
test
jne
mov
mov
cmp
je
mov
mov
mov
mov
add
mov
mov
cmp
je
xor
mov
mov
mov
mov
pop
and
mov
mov
mov
cmp
jne
mov
mov
sub
cmp
je
mov
test
je
mov
cmp
je
xor
mov
test
je
mov
mov
add
mov
mov
pop
mov
pop
cmp
je
mov
mov
leave
ret
mov
mov
add
mov
mov
mov
mov
push
push
push
call
cmp
je
cmp
je
sub
mov
push
push
push
push
push
call
mov
cmp
jne
or
mov
push
push
push
push
push
call
sub
mov
cmp
je
mov
cmp
jne
mov
cmp
je
or
mov
mov
cmp
jne
sub
cmp
je
test
je
mov
mov
sub
cmp
jne
mov
cmp
jne
mov
sub
mov
mov
mov
push
push
push
push
push
push
call
mov
mov
cmp
je
xor
mov
cmp
je
mov
push
call
mov
mov
push
push
push
push
push
push
call
test
jne
mov
push
push
push
push
push
call
mov
add
mov
mov
push
push
call
add
cmp
jne
mov
mov
xor
mov
test
jne
sub
mov
cmp
jne
mov
cmp
jne
or
mov
cmp
jne
or
mov
mov
mov
push
push
call
mov
xor
mov
push
push
push
call
xor
mov
cmp
jne
mov
push
push
push
call
xor
cmp
je
sub
cmp
jne
sub
mov
mov
mov
push
call
cmp
jne
mov
mov
push
call
mov
sub
cmp
je
mov
cmp
jne
mov
cmp
je
mov
add
mov
cmp
jne
or
mov
mov
cmp
je
sub
mov
mov
mov
sub
mov
mov
mov
mov
pop
mov
mov
pop
mov
mov
xor
cmp
je
mov
xor
mov
cmp
jne
mov
cmp
je
test
je
xor
mov
cmp
jne
mov
sub
test
jne
mov
mov
pop
sub
mov
cmp
je
mov
mov
xor
cmp
je
or
mov
mov
mov
mov
cmp
jne
test
jne
mov
or
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
cmp
jne
mov
mov
cmp
je
sub
mov
mov
cmp
je
mov
add
mov
mov
mov
mov
cmp
je
mov
add
mov
push
mov
test
je
mov
cmp
jne
mov
add
mov
cmp
je
mov
xor
mov
mov
mov
push
mov
mov
cmp
jne
mov
mov
mov
add
mov
call
mov
mov
mov
mov
call
add
mov
cmp
jne
sub
mov
mov
cmp
je
cmp
je
mov
call
add
mov
cmp
jne
add
mov
cmp
je
mov
or
test
jne
mov
add
mov
mov
mov
mov
mov
mov
mov
add
cmp
je
cmp
jne
mov
sub
mov
mov
call
add
mov
cmp
jne
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
xor
mov
add
mov
add
cmp
je
mov
xor
mov
mov
mov
push
call
mov
mov
xor
mov
mov
mov
or
jne
mov
mov
push
call
mov
or
je
xor
mov
add
mov
lea
mov
sub
test
jne
mov
test
jne
mov
sub
cmp
je
mov
cmp
je
sub
mov
test
je
sub
cmp
jne
mov
add
mov
cmp
je
xor
mov
cmp
jne
or
cmp
jne
mov
mov
add
cmp
je
mov
inc
mov
mov
sub
mov
mov
cmp
je
sub
mov
mov
cmp
jne
mov
mov
and
mov
mov
mov
sub
mov
cmp
jne
mov
add
cmp
jne
mov
cmp
jne
cmp
jne
mov
add
mov
cmp
jne
mov
mov
mov
add
cmp
je
xor
mov
mov
mov
cmp
jne
mov
add
mov
mov
mov
sub
sub
mov
cmp
jne
add
mov
mov
mov
sub
mov
mov
mov
mov
xor
mov
mov
mov
cmp
je
mov
xor
mov
mov
xor
mov
add
cmp
je
sub
mov
cmp
jne
xor
mov
cmp
jne
mov
mov
sub
cmp
je
add
mov
test
je
mov
mov
mov
xor
mov
cmp
jne
mov
add
cmp
jne
xor
mov
mov
test
je
mov
sub
cmp
je
sub
mov
mov
cmp
jne
mov
xor
mov
mov
test
jne
cmp
je
mov
add
cmp
jne
add
cmp
jne
mov
cmp
jne
cmp
jne
mov
sub
mov
mov
mov
pop
or
mov
mov
mov
mov
mov
pop
xor
mov
mov
cmp
jne
mov
mov
cmp
jne
add
mov
mov
mov
cmp
jne
test
je
mov
test
jne
mov
cmp
je
mov
sub
test
je
cmp
je
mov
cmp
je
mov
mov
test
je
xor
mov
cmp
je
mov
or
mov
cmp
jne
mov
add
mov
mov
mov
pop
sub
mov
cmp
jne
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
push
mov
mov
push
mov
xor
mov
cmp
jne
mov
and
mov
mov
add
mov
mov
mov
mov
rdtsc
mov
add
mov
mov
add
mov
cmp
je
sub
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
test
jne
or
mov
cmp
je
sub
cmp
je
mov
mov
mov
mov
cmp
je
mov
mov
rdtsc
or
cmp
je
or
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
sub
cmp
je
mov
cmp
je
cmp
je
sub
mov
test
je
mov
cmp
jne
xor
mov
cmp
jne
add
mov
mov
mov
mov
mov
mov
cmp
je
mov
cmp
je
mov
add
mov
mov
mov
mov
pop
cmp
jne
mov
mov
mov
pop
mov
pop
cmp
je
add
mov
cmp
jne
mov
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
cmp
jne
mov
add
cmp
je
add
mov
mov
cmp
je
mov
cmp
je
mov
cmp
je
cmp
jne
sub
mov
mov
mov
mov
test
jne
xor
mov
mov
mov
push
mov
push
mov
or
mov
mov
mov
mov
mov
mov
cmp
je
mov
cmp
je
mov
mov
sub
mov
mov
mov
cmp
je
mov
mov
sub
test
je
add
test
je
and
cmp
je
mov
cmp
je
mov
dec
mov
cmp
jne
cmp
jne
mov
mov
mov
ror
cmp
jne
mov
sub
mov
xor
cmp
je
mov
cmp
jne
and
cmp
jne
add
cmp
jne
add
mov
mov
neg
mov
mov
sub
mov
cmp
je
add
mov
mov
cmp
je
cmp
jne
mov
add
sub
mov
test
jne
xor
cmp
je
cmp
jne
sub
cmp
jne
cmp
jne
cmp
jne
xor
mov
sub
mov
xor
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
cmp
je
cmp
jne
cmp
jne
add
mov
jmp
mov
mov
mov
test
je
add
mov
cmp
jne
cmp
jne
mov
mov
sub
mov
mov
cmp
je
add
mov
mov
mov
mov
cmp
jne
mov
pop
mov
cmp
jne
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
cmp
je
sub
cmp
jne
cmp
je
cmp
jne
cmp
je
sub
mov
cmp
jne
xor
mov
mov
mov
mov
mov
pop
mov
xor
mov
cmp
je
test
jne
or
mov
mov
cmp
je
cmp
je
mov
cmp
je
mov
sub
cmp
jne
xor
mov
mov
mov
mov
mov
pop
cmp
je
cmp
jne
sub
mov
mov
cmp
je
mov
xor
mov
cmp
jne
sub
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
add
mov
mov
mov
cmp
jne
mov
movzx
test
je
jmp
mov
mov
mov
mov
mov
mov
add
mov
mov
add
mov
mov
sub
mov
mov
add
mov
cmp
je
mov
jmp
jmp
mov
push
lea
push
call
lea
push
call
mov
mov
push
lea
push
call
lea
push
mov
push
call
mov
mov
mov
mov
mov
add
push
mov
push
mov
push
mov
add
push
call
mov
mov
mov
mov
mov
mov
test
je
mov
cmp
jne
jmp
mov
mov
mov
mov
jmp
mov
add
mov
mov
mov
cmp
jae
mov
add
mov
mov
jmp
mov
imul
mov
mov
add
mov
mov
jmp
mov
imul
mov
mov
mov
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
add
mov
mov
imul
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
cmp
je
mov
movzx
mov
movzx
cmp
jle
mov
mov
mov
cmp
je
mov
test
je
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
add
mov
movzx
add
mov
movzx
cmp
jl
movzx
cmp
jg
movzx
add
mov
movzx
sub
mov
movzx
add
mov
movzx
cmp
jl
movzx
cmp
jg
movzx
add
mov
movzx
sub
mov
movzx
movzx
cmp
je
jmp
movzx
test
jne
mov
mov
jmp
mov
mov
mov
lea
mov
mov
mov
lea
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
cmp
je
cmp
je
cmp
jbe
mov
movsx
test
je
mov
mov
mov
mov
add
mov
mov
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jae
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
cmp
ja
mov
mov
cmp
jb
mov
mov
mov
add
cmp
jae
mov
mov
sub
mov
mov
add
mov
jmp
jmp
mov
jmp
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
add
mov
mov
movsx
mov
movsx
cmp
jne
mov
movsx
test
jne
mov
mov
movzx
mov
mov
add
mov
jmp
mov
mov
mov
lea
mov
mov
mov
lea
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
movsx
shl
mov
cmp
je
cmp
je
movsx
imul
not
mov
mov
test
je
xchg
dec
xchg
inc
mov
mov
mov
mov
mov
movsx
add
mov
mov
mov
mov
jmp
mov
add
mov
mov
cmp
jg
inc
jmp
sub
mov
movsx
imul
mov
movsx
xor
mov
mov
mov
movsx
sub
mov
mov
mov
movsx
test
jne
jmp
mov
add
mov
mov
add
mov
jmp
mov
sub
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
push
mov
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
test
jne
mov
test
je
cmp
je
and
mov
mov
mov
cmp
jne
mov
mov
mov
add
mov
xor
cmp
je
sub
mov
mov
mov
pop
mov
mov
mov
pop
cmp
jne
cmp
jne
add
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
sub
mov
pop
cmp
jne
cmp
jne
mov
cmp
je
mov
add
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
add
mov
mov
mov
push
mov
cmp
je
mov
push
mov
mov
and
mov
cmp
je
add
mov
test
je
mov
mov
mov
mov
cmp
je
test
je
mov
test
jne
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
sub
mov
mov
mov
mov
pop
mov
pop
sub
mov
cmp
je
mov
mov
mov
mov
pop
mov
sub
cmp
jne
mov
test
jne
and
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmp
je
mov
sub
cmp
je
mov
xor
mov
mov
cmp
jne
cmp
jne
mov
mov
cmp
je
sub
mov
mov
cmp
jne
xor
cmp
je
mov
mov
test
jne
sub
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
push
mov
mov
push
mov
add
mov
mov
mov
xor
mov
cmp
je
or
mov
xor
mov
mov
mov
pop
test
je
sub
mov
cmp
je
sub
mov
mov
cmp
je
mov
cmp
je
xor
cmp
je
mov
add
mov
cmp
je
mov
mov
sub
cmp
je
mov
mov
add
mov
mov
mov
cmp
jne
add
mov
cmp
jne
mov
and
mov
mov
cmp
jne
cmp
je
xor
mov
mov
mov
pop
mov
pop
cmp
je
cmp
jne
cmp
je
cmp
je
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
add
mov
mov
push
mov
push
mov
mov
mov
add
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
pop
xor
mov
mov
mov
mov
mov
mov
pop
add
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
cmp
je
cmp
jne
mov
mov
mov
mov
cmp
je
cmp
je
mov
xor
mov
pop
xor
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
xor
mov
mov
mov
push
mov
xor
cmp
je
xor
cmp
jne
mov
push
mov
mov
cmp
je
cmp
jne
mov
xor
cmp
je
mov
mov
add
cmp
je
mov
mov
cmp
jne
mov
cmp
jne
xor
mov
mov
test
je
mov
mov
mov
and
cmp
jne
cmp
jne
mov
or
cmp
jne
and
mov
mov
test
jne
mov
pop
mov
mov
cmp
jne
sub
cmp
jne
mov
mov
pop
mov
cmp
jne
mov
mov
sub
cmp
je
mov
mov
pop
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
xor
mov
push
mov
xor
mov
push
sub
mov
test
jne
sub
mov
test
je
add
mov
push
mov
sub
cmp
jne
mov
or
mov
mov
cmp
jne
add
mov
mov
mov
mov
cmp
jne
add
mov
cmp
je
mov
mov
add
cmp
jne
mov
and
cmp
jne
mov
sub
cmp
je
sub
mov
mov
pop
mov
xor
cmp
jne
mov
mov
cmp
je
add
mov
cmp
jne
xor
mov
cmp
jne
cmp
jne
mov
mov
cmp
je
cmp
jne
cmp
jne
xor
mov
mov
mov
cmp
jne
sub
mov
test
jne
mov
mov
mov
mov
test
jne
cmp
jne
test
jne
mov
sub
mov
pop
cmp
jne
sub
mov
mov
cmp
jne
test
je
mov
add
cmp
jne
mov
add
test
jne
cmp
jne
mov
cmp
je
mov
pop
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
sub
test
je
mov
push
mov
add
mov
push
mov
add
mov
mov
mov
mov
xor
mov
mov
cmp
jne
mov
mov
pop
cmp
je
mov
cmp
je
mov
pop
cmp
jne
mov
cmp
jne
cmp
je
mov
sub
test
je
xor
mov
mov
mov
pop
add
cmp
je
mov
sub
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
push
mov
sub
mov
push
mov
mov
mov
add
mov
mov
xor
mov
pop
mov
cmp
je
mov
sub
cmp
jne
mov
add
mov
mov
mov
mov
pop
mov
add
mov
pop
mov
add
test
je
sub
mov
mov
cmp
je
add
mov
cmp
je
add
cmp
jne
test
je
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
push
mov
or
mov
push
mov
or
mov
mov
mov
add
mov
cmp
je
mov
add
mov
mov
mov
mov
and
mov
mov
mov
mov
pop
and
mov
test
jne
mov
test
je
cmp
jne
mov
xor
cmp
jne
sub
mov
cmp
je
cmp
jne
or
cmp
je
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
pop
mov
cmp
je
mov
cmp
jne
add
mov
cmp
je
mov
mov
add
mov
mov
pop
mov
and
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
pop
mov
pop
or
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
pop
sub
mov
mov
leave
ret
add
cmp
shl
popf
xor
(bad)
idiv
cmps
fsub
in
into
mov
test
ffree
(bad)
mov
leave
and
sub
mov
or
push
sar
adc
cdq
dec
cmps
mov
or
xchg
ror
cld
ss
lods
jae
lea
inc
sbb
outs
js
popf
bound
retf
mov
lock
pusha
push
loope
dec
push
adc
sbb
xchg
cli
fwait
in
inc
scas
xchg
fistp
lods
dec
adc
inc
mov
xchg
mul
jbe
xchg
or
cmp
fcomip
sub
push
test
mov
outs
lods
in
xor
pop
std
inc
fbld
dec
daa
ret
mov
int3
repnz
mov
leave
lock
and
(bad)
call
add
add
dec
pop
aad
cli
div
sub
add
nop
lods
int3
ds
imul
scas
stc
pop
pusha
std
lods
(bad)
cmp
adc
in
mov
sahf
jl
push
out
(bad)
push
sbb
fcomip
js
pop
adc
and
mov
xchg
mov
push
pop
jp
sub
mov
call
test
pop
ins
inc
mov
or
jge
call
jmp
sbb
stos
dec
(bad)
pushf
add
(bad)
fcomp
mov
retf
adc
inc
or
push
scas
cld
vmaxps
mov
int3
xchg
pop
mov
dec
lahf
jae
gs
xor
xchg
jge
cmp
outs
loop
pop
xor
neg
neg
sub
pushf
mov
cmp
iret
imul
add
lea
mov
ja
inc
add
inc
adc
dec
add
inc
jns
cmp
adc
movs
cld
aam
in
push
mov
mov
call
dec
imul
ss
or
jmp
jne
push
adc
jo
sub
sbb
and
sbb
adc
or
(bad)
jns
push
add
inc
pushf
jl
pop
fadd
hlt
dec
sub
mov
es
icebp
mov
ror
mov
cmc
fwait
mov
xor
(bad)
mov
inc
test
test
jae
sub
jge
ins
cdq
(bad)
cwde
jmp
cmp
(bad)
or
test
js
jle
jle
in
dec
sub
icebp
xor
call
loope
push
enter
cmp
cld
pop
cwde
push
jmp
pushf
in
ins
dec
adc
mov
imul
inc
sahf
stos
mov
mov
loop
dec
leave
inc
jmp
das
loop
fcomp
int
push
cmp
hlt
add
les
imul
or
(bad)
jmp
sub
adc
mov
mov
jbe
add
cmp
sbb
jecxz
sbb
push
xchg
jecxz
ins
or
(bad)
cli
mov
hlt
outs
(bad)
repz
fstp
loopne
sub
add
int3
cmp
out
jmp
sbb
cdq
loop
lds
fstp
mov
sahf
movs
jl
and
mov
imul
sti
outs
mov
push
add
cmp
add
xor
push
shl
loopne
and
push
shl
jns
cmp
inc
fwait
repnz
mov
ficomp
pop
push
mov
dec
in
pushf
call
dec
imul
xchg
jne
repnz
fimul
or
jge
cmp
in
mov
sar
ficom
std
jp
frstor
jecxz
call
or
mov
(bad)
cmp
sbb
sbb
add
sbb
xchg
test
jg
mov
push
popf
mov
push
xchg
out
mov
imul
jmp
xor
movs
es
in
jle
outs
imul
test
rcl
imul
icebp
pushf
test
and
inc
rsqrtps
xchg
mov
mov
sbb
sbb
fiadd
dec
in
aam
retf
xlat
fld
sahf
add
xchg
sbb
inc
dec
loop
jbe
sub
call
adc
rcl
push
or
retf
es
into
rol
pushf
mov
mov
loopne
cmps
pop
dec
mov
jmp
out
daa
adc
xchg
ret
aam
in
cdq
test
(bad)
xchg
adc
xor
aad
jbe
sbb
iret
sub
ret
fcompp
pop
sub
mov
xor
pop
mov
cmp
pop
fist
std
jp
ins
addr16
mov
lock
xchg
(bad)
data16
xor
mov
sub
mov
jmp
sub
xchg
call
lds
int
sbb
fsubrp
pushf
jl
mov
dec
jo
mov
pushf
retf
mov
dec
mov
mov
mov
test
pop
js
pop
(bad)
cdq
adc
adc
add
test
jne
adc
xchg
fldenv
jb
in
popa
jnp
in
std
push
cmp
or
mov
push
outs
into
xchg
mov
loope
fild
(bad)
scas
pop
aas
das
push
pushf
pop
lods
mov
mov
xchg
in
fs
push
sbb
xor
enter
mov
call
test
aaa
pop
nop
retf
jne
js
cmp
pop
fdiv
sbb
add
push
dec
ins
popa
and
sbb
popf
adc
xor
popf
lea
repnz
pusha
out
dec
xor
mov
xchg
jl
cmps
outs
(bad)
push
add
jmp
cmp
push
clc
xchg
mov
loop
jle
xchg
std
dec
sub
sbb
mov
jns
mov
sbb
hlt
sbb
(bad)
lock
fld
aam
mov
add
push
pop
cmp
push
and
je
call
push
sub
adc
hlt
inc
jle
stos
sub
loop
stos
cmp
(bad)
sti
sub
xchg
cmc
call
retf
jmp
out
outs
mov
mov
push
retf
dec
push
mov
pushf
mov
and
lods
inc
push
and
retf
add
sahf
es
adc
and
sahf
scas
aam
pop
cld
or
data16
int3
out
(bad)
repnz
icebp
fst
das
mov
jp
jb
shl
xor
and
jns
sub
int3
pushf
daa
sub
idiv
xor
fisub
cmp
jle
arpl
dec
inc
and
setge
lea
mov
jge
inc
pop
outs
mov
mov
xor
jmp
xchg
sub
add
shl
(bad)
jge
cmp
pop
sbb
dec
mov
mov
test
add
pop
int
int3
xchg
and
cmp
fs
xchg
push
arpl
jg
xor
fcomp
out
les
jecxz
lea
daa
jmp
add
stos
xor
sbb
add
imul
xor
push
mov
call
std
aaa
sub
leave
and
aaa
popa
(bad)
es
jae
pushf
inc
add
dec
pop
pop
push
fsub
std
gs
lds
cmp
jne
adc
mov
outs
pop
in
xchg
dec
test
mov
shr
fwait
sbb
pop
jge
mov
sub
jge
mov
ret
jmp
inc
imul
jmp
xchg
cmp
fwait
push
not
add
mov
popf
call
fisubr
or
mov
sahf
mov
sbb
pop
out
or
es
sub
add
inc
loope
test
imul
mov
in
jnp
and
push
pushf
inc
out
pop
retf
pusha
(bad)
mov
inc
(bad)
popa
mov
add
imul
test
call
xlat
and
aad
clc
jno
sti
in
jae
bound
push
lock
cld
dec
xor
cs
jl
ins
lock
push
lods
mov
push
and
mov
in
jecxz
aam
push
cld
xchg
xor
sar
std
or
cmp
jmp
inc
cmc
cmp
loopne
lock
sub
call
dec
cmp
stos
(bad)
rcl
mov
out
push
call
push
push
dec
(bad)
gs
add
popa
push
adc
pop
jbe
jmp
mov
repnz
mov
imul
adc
pushf
gs
inc
dec
iret
popf
mov
call
jg
jl
pushf
jle
mov
test
mov
mov
mov
and
fsubr
dec
das
dec
or
(bad)
mov
pop
rcr
push
ret
bound
cdq
out
test
sahf
push
sub
popf
(bad)
fsub
mov
inc
mov
sbb
push
jbe
arpl
sbb
inc
pushf
loop
sbb
mov
mov
lock
pop
lods
popf
scas
fld
mov
jle
(bad)
jecxz
sbb
cmp
push
retf
out
push
data16
sbb
sbb
add
mov
popf
nop
fimul
mov
xor
mov
in
or
jnp
push
inc
xor
xchg
call
fdivr
scas
fsubr
fst
push
pop
mov
stos
leave
popf
mov
or
div
xchg
(bad)
shl
scas
test
push
add
mov
popf
sbb
mov
push
dec
(bad)
div
rol
mov
outs
icebp
push
or
int3
dec
sbb
shl
idiv
inc
out
idiv
push
popf
mov
aaa
sti
std
clc
or
into
fcmove
mov
push
ins
outs
cmp
jo
out
movs
cmp
xchg
(bad)
mov
clc
sbb
push
stos
sub
push
xlat
(bad)
imul
mov
test
pusha
fcmovnbe
outs
(bad)
cld
mov
fadd
std
neg
popa
pop
hlt
int3
fsub
sbb
adc
jge
adc
mov
std
push
(bad)
out
mov
sbb
adc
sahf
sbb
(bad)
mov
iret
or
mov
das
aad
call
call
mov
mov
int3
push
adc
ret
xchg
add
mov
xchg
push
lds
cmp
and
ds
enterw
jle
in
jmp
pop
fcom
cmps
popf
cld
ins
pop
jne
in
repnz
add
call
jmp
push
mov
sub
mov
sti
(bad)
push
icebp
shl
mov
jbe
inc
and
arpl
xchg
pop
xchg
inc
sar
jo
push
cmp
inc
mov
pushf
(bad)
push
xchg
and
sbb
hlt
cmps
retf
js
jnp
test
pop
cld
pop
popa
popf
into
aam
mov
popf
sub
push
xor
xor
mov
sahf
mov
call
ret
push
call
movs
les
sti
dec
jg
into
jmp
and
into
or
inc
xor
fs
mov
es
call
push
adc
jmp
movs
(bad)
ffreep
call
xor
sub
mov
fwait
xchg
pushf
inc
lods
push
push
add
and
inc
fisub
add
shr
neg
jbe
or
imul
sub
sub
fdivrp
jge
aas
test
mov
fadd
or
std
cli
jbe
les
pop
mov
xchg
icebp
fwait
dec
jo
outs
lds
and
sub
std
scas
cld
popa
inc
pop
mov
inc
(bad)
sar
push
adc
cld
test
repnz
pusha
mov
mov
into
xchg
mov
cld
and
or
fimul
daa
ins
jle
push
icebp
pop
push
int
int
std
push
test
jne
in
(bad)
rcr
js
jl
jae
dec
jmp
push
call
loopne
stos
add
xor
jecxz
lods
in
cdq
pop
fcmovu
popf
inc
(bad)
cmp
loopne
mov
pop
ja
pop
adc
imul
dec
fs
pop
fimul
sbb
xchg
ins
div
pop
pushf
test
(bad)
xchg
xchg
loop
inc
mov
test
fadd
ins
test
pop
sub
popf
xchg
leave
pop
lds
(bad)
shr
call
cs
jne
jno
or
jl
iret
xchg
mov
loop
stos
addr16
mov
outs
nop
or
call
test
shr
popf
(bad)
dec
push
sbb
and
pop
loopne
add
mov
add
into
not
xor
jno
sahf
call
mov
cmp
lods
xchg
adc
inc
(bad)
pushf
je
sbb
and
outs
cmp
loopne
jecxz
das
mov
inc
push
hlt
or
pop
dec
jecxz
xchg
push
fnsave
inc
xchg
popf
adc
fist
push
pop
cmp
repz
stos
cmp
data16
stos
shl
push
loopne
mov
mov
cs
and
jecxz
dec
data16
test
out
dec
test
std
call
dec
lea
popf
jp
out
sub
add
sahf
mov
push
pop
jl
bound
xlat
push
jmp
pop
fiadd
mov
es
std
jo
xor
ret
add
mov
mov
push
leave
(bad)
mov
popf
or
(bad)
scas
out
cli
mov
pushf
(bad)
mov
les
lods
stc
mov
pop
xor
out
neg
mov
loope
nop
mov
push
adc
cmp
sbb
cs
in
xchg
and
xchg
sbb
fld
data16
xor
imul
adc
lds
xchg
nop
jmp
loopne
in
out
arpl
inc
xor
xor
movs
mov
mov
sub
pushf
sar
sbb
(bad)
push
cwde
jl
(bad)
fmul
pop
inc
cmp
je
aad
lds
mov
mov
xor
pop
dec
mov
aam
call
ret
out
cmp
iret
sbb
or
in
fstp
xor
out
sbb
mov
scas
jb
movs
popf
xchg
movs
mov
fwait
popf
ss
leave
push
mov
mov
jle
cmp
add
aad
sbb
mov
mov
push
je
stos
popf
lock
fisttp
(bad)
cdq
mov
(bad)
mov
loop
vpsrlq
rol
cwde
imul
or
cmp
push
mov
cld
pushf
pop
cwde
int
icebp
mov
jmp
mov
or
ror
shl
xchg
lock
pop
pusha
repz
leave
xor
les
jmp
dec
scas
aas
dec
add
loope
or
ret
dec
(bad)
aaa
out
jmp
mov
pop
jae
or
lds
sub
das
sub
sbb
push
xchg
sub
std
ret
mov
adc
shr
xor
popf
sub
sahf
push
push
loop
popf
inc
outs
call
sbb
out
pushf
inc
mov
xor
pop
hlt
jg
push
std
sub
bound
pop
jb
fsub
xchg
in
xchg
mov
arpl
jnp
call
ret
sub
push
popf
loop
adc
dec
(bad)
jle
mov
mov
pop
xchg
loop
fstp
mov
les
pusha
inc
jge
cmp
xor
jl
sbb
addr16
pop
imul
fistp
adc
cmp
xor
sub
jp
dec
cmp
or
xor
movs
jo
mov
movs
aad
int
cmp
xchg
ins
and
fwait
xchg
push
sub
xlat
and
push
in
pop
xchg
call
sub
cli
pop
(bad)
int3
out
mov
in
mov
out
popa
call
cmp
adc
sar
int
pop
rcl
mov
rol
rol
pop
popf
cmp
pop
pop
jne
push
cli
dec
shl
jmp
or
cmp
push
loope
adc
ins
jb
js
into
add
push
jae
xchg
mov
mov
ror
dec
add
(bad)
sbb
cmp
pop
mov
shl
mov
jge
cmp
rcl
dec
fmul
std
inc
sbb
push
(bad)
(bad)
aam
sub
pop
mov
pop
sbb
push
lods
push
(bad)
push
fisttp
push
mov
pop
pop
call
shl
int
ins
cmps
call
addr16
fcom
arpl
fistp
lock
jo
add
dec
mov
jbe
aas
sub
dec
cmp
adc
call
xor
inc
inc
cmps
pop
jmp
cmp
mov
cmp
fidivr
pop
adc
test
aas
int
loope
icebp
xor
repz
es
and
or
push
int
cmp
pop
cdq
sbb
(bad)
cmp
enter
imul
and
ficomp
sub
push
(bad)
mov
pusha
mov
pop
xchg
xchg
sub
test
or
inc
adc
pop
inc
ins
or
xor
ret
jge
push
cld
popf
bound
popf
gs
add
(bad)
sbb
pop
fisttp
jp
jmp
mov
popf
mov
push
or
ror
mov
pop
push
mov
std
popf
mov
push
not
xchg
jmp
popf
pushf
inc
fsubr
mov
adc
arpl
adc
pop
in
and
rcl
popa
and
jno
out
jnp
sbb
sti
jo
ss
cmps
ins
popf
(bad)
aaa
pushf
xor
lock
push
frndint
dec
jns
in
xchg
adc
sub
push
jmp
aas
mov
aad
sbb
jg
ds
retf
nop
and
in
jl
mul
sti
fwait
mov
cld
ins
pushf
outs
out
jno
ret
call
push
fsub
push
pushf
(bad)
sti
std
mov
ja
cmps
pusha
jp
mov
loop
lock
inc
dec
push
dec
std
(bad)
ja
int
(bad)
retf
or
sbb
sbb
mov
call
mov
xlat
das
popf
xchg
das
mov
mov
sar
jle
sub
leave
sub
or
and
fisttp
and
enter
cld
xchg
mov
jmp
mov
mov
push
push
rcr
xchg
out
cld
call
inc
sub
ficom
ins
arpl
mov
int
cld
push
adc
ja
rol
pushf
call
dec
int3
push
jp
(bad)
jecxz
xor
mov
std
ret
dec
scas
jb
fsubr
or
and
pop
or
scas
dec
jg
and
xor
sbb
jnp
add
(bad)
mov
scas
pusha
sub
push
sub
adc
ins
and
cmps
cdq
sub
bound
jle
outs
adc
movs
xchg
(bad)
jmp
shl
popf
push
jne
jecxz
fnstcw
jmp
in
mov
in
cmp
dec
daa
call
out
push
repz
mov
adc
call
out
call
push
pop
sahf
in
push
in
jno
test
mov
(bad)
int
imul
std
mov
sar
jbe
mov
mov
pop
mov
test
lods
hlt
stos
inc
mov
call
stc
jbe
inc
pushf
push
xor
cmp
sbb
pushf
outs
and
jae
adc
popf
or
into
pop
sub
popf
xchg
ja
sbb
xor
xor
push
or
shl
jl
mov
mov
mov
and
sub
into
stc
jmp
inc
icebp
mov
sub
test
sub
push
cmc
adc
icebp
mov
mov
inc
shl
in
(bad)
out
stos
(bad)
ficom
mov
and
aaa
add
test
and
jecxz
rcr
mov
xor
push
and
sub
pop
fs
scas
dec
aad
inc
fsubrp
xlat
cld
xchg
das
adc
pusha
retf
int
jge
cmc
fsub
add
ja
mov
dec
rcl
inc
xor
inc
jmp
or
mov
hlt
push
mov
popf
cmp
movs
mov
(bad)
mov
adc
ja
popf
and
push
and
out
cmc
push
xchg
sbb
fimul
mov
mov
loopne
(bad)
or
mov
call
pop
xchg
arpl
mov
mov
pushf
mov
add
retf
pusha
pop
pusha
jmp
stos
popf
xchg
jbe
cmp
pushf
std
sub
repnz
pushf
push
pop
idiv
std
cmp
xchg
in
stos
fadd
paddusw
into
inc
push
fcmovnbe
popf
out
hlt
sbb
mov
jmp
or
jecxz
(bad)
out
jno
xor
jmp
push
or
nop
js
cld
dec
cs
and
xor
xchg
dec
(bad)
cld
ins
xchg
mov
or
leave
dec
sub
pop
fdivp
mov
out
mov
sbb
pop
popf
ficomp
jno
push
clc
mov
or
outs
cwde
call
push
ds
pusha
xchg
push
jl
mov
cmp
enter
add
in
in
cld
jp
ins
div
inc
mov
sub
repnz
popf
jmp
rol
(bad)
dec
push
cmps
pop
mov
jae
imul
lock
call
mov
es
pushf
lea
pop
enter
out
and
int3
jmp
jns
es
outs
popf
dec
sub
or
ret
or
outs
popf
retf
dec
add
arpl
sahf
push
cmc
cld
in
imul
popf
loopne
pop
jmp
pop
rcl
jnp
nop
popa
and
(bad)
ret
adc
add
inc
call
xor
leave
mov
push
pop
dec
pop
sub
and
pushf
push
rol
call
(bad)
shl
(bad)
js
cld
push
or
push
jmp
sahf
mov
test
mov
inc
nop
add
ins
jp
call
or
cli
pop
test
pop
aaa
push
fprem
mov
cli
call
out
leave
leave
inc
pushf
adc
inc
daa
outs
cli
sub
fisub
popf
xchg
pushf
ds
push
fcomp
inc
lock
ss
xor
push
pushf
push
lods
cdq
jg
jl
sbb
pop
repnz
repnz
fwait
xchg
(bad)
push
sbb
dec
jmp
xchg
adc
pushf
mov
fsub
popf
mov
rcr
pop
jbe
loopne
pop
shr
jmp
repnz
xchg
pop
jecxz
or
add
ds
fwait
into
sti
out
(bad)
push
jns
jmp
addr16
pop
pop
data16
fwait
push
adc
bound
or
js
loope
jmp
stc
cmps
pop
xchg
imul
inc
xor
cld
retf
pop
das
call
xor
push
or
int
xchg
popf
pusha
dec
mov
pop
dec
sub
dec
cdq
mov
rcr
and
sar
std
and
sbb
pop
stc
loop
adc
pop
mov
adc
(bad)
icebp
push
push
jns
sub
fwait
lods
push
lock
int3
and
dec
std
jnp
jno
cdq
push
scas
mov
mov
push
mov
pop
pop
call
ins
in
mov
adc
imul
xor
popa
push
cmps
imul
popf
inc
inc
(bad)
data16
adc
xor
pop
cmp
in
push
sub
out
xor
dec
inc
pushf
mov
lods
pop
fstp
call
adc
inc
jecxz
loop
xchg
sub
(bad)
jns
std
jmp
(bad)
imul
(bad)
fld
xor
inc
ss
in
call
xchg
dec
add
int
inc
sbb
mov
adc
test
dec
add
and
shr
jo
lock
mov
int3
adc
lds
into
in
cmp
pop
xor
add
pushf
inc
mov
lods
push
(bad)
jno
int
and
dec
jmp
xchg
aam
popf
adc
ret
dec
and
add
dec
sahf
icebp
sbb
xor
out
test
pop
test
pusha
xor
and
or
fisttp
pop
mov
push
inc
icebp
sub
xor
(bad)
mov
fcom
jo
cmp
push
mov
xor
(bad)
inc
sbb
jmp
(bad)
mov
add
and
das
scas
popf
mov
add
adc
ins
cmp
call
lea
mov
fwait
mov
fwait
cmp
cmp
mov
pop
repnz
icebp
pop
(bad)
std
scas
leave
test
ficomp
mov
add
stos
push
loope
sub
ss
psubq
pop
xchg
mov
imul
mov
ss
loop
stos
mov
inc
clc
mov
xchg
lahf
loopne
mov
(bad)
cdq
fbstp
cmps
repz
call
lahf
sbb
push
call
ds
mov
cmc
push
xchg
xor
xchg
lods
mov
jl
mov
std
mov
mov
pop
pop
scas
inc
out
mov
loopne
jmp
add
out
or
push
pushf
mov
jmp
stos
or
ins
xchg
or
fld
jecxz
xchg
data16
pop
loop
int
sti
jge
xor
adc
aas
aam
jmp
xor
repz
cmp
cmp
jae
xchg
dec
sahf
adc
(bad)
xor
loop
ds
sbb
sbb
call
cs
lods
popf
enter
sbb
pop
loop
jno
addr16
aaa
ss
pop
fcom
pop
rcr
push
xor
gs
pop
sub
inc
dec
hlt
add
loopne
jns
xchg
xor
sub
not
fild
or
sahf
cwde
ret
xchg
dec
xlat
daa
imul
mov
clc
jle
mov
push
xlat
adc
popf
bound
aaa
inc
(bad)
lahf
and
ja
cmp
inc
cdq
imul
mov
into
add
push
fwait
cmp
cld
mov
mov
lahf
jnp
add
pushf
cmc
mov
pop
sti
cs
or
into
movs
lods
retf
jmp
inc
in
xor
pushf
clc
call
xor
js
push
setge
popa
aad
add
popf
ret
dec
mov
mov
push
int3
imul
retf
cld
xlat
pop
adc
pop
push
jmp
loop
call
dec
pushf
sbb
daa
out
aam
jmp
adc
jge
pop
dec
cli
pop
pop
retf
in
pop
jmp
xchg
iret
retf
adc
sub
pop
push
(bad)
jg
jge
std
mov
call
test
mov
test
adc
or
mov
inc
out
mov
cmps
pop
mov
xor
pop
int3
cmp
(bad)
cmp
push
cmp
(bad)
stc
(bad)
jl
loopne
imul
sbb
inc
call
or
sbb
and
idiv
cmp
xchg
pushf
mov
jmp
js
push
adc
pushf
and
jbe
or
clc
aam
(bad)
imul
sbb
xchg
pop
jl
mov
repnz
loope
hlt
sub
push
sbb
in
push
out
sub
bnd
jp
pop
jmp
std
mov
cdq
xchg
dec
pop
sti
pop
imul
ins
xlat
adc
ja
jmp
pushf
fdiv
ds
mov
pop
std
inc
je
sbb
call
adc
fcos
jnp
push
and
popf
push
push
ins
in
push
loop
loope
in
inc
outs
test
xor
lds
adc
xchg
sbb
jle
test
imul
je
(bad)
xor
iret
hlt
fdivr
xchg
xchg
push
xor
push
inc
inc
pop
cmp
sub
popa
xchg
pop
mov
fdiv
pushf
hlt
fistp
fs
xor
idiv
(bad)
cld
fld
mov
ss
add
call
sub
jecxz
add
imul
das
in
inc
mov
mov
pushf
add
test
pop
es
movs
int3
jmp
aad
idiv
push
dec
pop
pop
imul
mov
daa
mov
xchg
(bad)
in
push
(bad)
jnp
sbb
call
fmul
shr
cld
mov
mov
into
add
popf
dec
or
fnclex
pop
in
pop
push
push
jmp
fwait
push
int
push
jo
adc
mov
imul
dec
inc
sbb
popf
mov
test
(bad)
std
adc
ror
test
or
sbb
js
clc
repz
inc
mov
lahf
jle
xchg
cdq
out
sub
jne
pop
xor
cmp
retf
pop
mov
stos
cs
dec
gs
rcl
lock
scas
out
cmp
neg
iret
sub
xchg
cs
mov
cmps
jbe
push
bound
mov
call
mov
push
fwait
xor
cli
pushf
test
jo
std
push
clc
adc
ret
jae
inc
ret
cmps
jle
test
les
ins
retf
inc
mov
in
jmp
sbb
call
adc
cld
cld
jbe
push
inc
jge
popf
out
stos
mov
pop
add
adc
xchg
mov
fnsave
cmp
jb
xor
test
jl
out
sbb
lods
popf
sar
pcmpeqw
mov
frstor
push
fidiv
lahf
add
int3
pop
inc
push
popf
inc
rol
mov
mov
cmp
lds
fbstp
push
std
dec
movs
inc
and
jne
loopne
mov
dec
pop
fisubr
add
vpsubb
mov
sbb
add
xchg
lods
inc
stos
mov
inc
add
outs
fwait
jae
pop
pushf
clc
imul
cmp
pop
mov
jns
cmp
inc
cmp
mov
(bad)
dec
out
shr
lods
inc
cmps
or
call
inc
adc
pop
int3
jmp
stos
movs
pop
imul
jbe
dec
sahf
push
push
popf
test
cld
(bad)
jnp
cdq
test
and
(bad)
mov
push
push
in
mov
ror
mov
retf
add
xor
mov
and
xlat
xchg
mov
inc
mov
std
add
pushf
and
mov
clc
in
cld
mov
clc
dec
test
sub
mov
mov
cld
dec
mov
cmps
or
inc
or
out
nop
jp
icebp
movs
jg
lods
scas
(bad)
jae
fldl2t
popa
mov
push
mov
add
in
lods
(bad)
sti
push
imul
popf
fld
into
pop
bound
popf
sub
push
push
inc
fmul
inc
out
cmp
cdq
in
sbb
imul
sahf
sahf
call
les
ror
repz
dec
cdq
neg
call
sbb
jp
push
push
int3
fs
mov
sahf
adc
xchg
jb
call
inc
inc
fcom
inc
call
test
test
call
inc
(bad)
fsubrp
add
pop
fdivp
sub
loop
and
push
add
inc
mov
in
lds
cli
jo
ficomp
push
sar
push
test
dec
mov
or
cs
int
sub
scas
fstp
fcmovnb
imul
fadd
sbb
ds
mov
mov
lods
cmps
(bad)
loope
sub
cmp
sbb
xchg
add
neg
adc
mov
xchg
lock
xchg
push
hlt
ret
cmp
pop
dec
popf
sub
push
cmp
push
adc
mov
sbb
or
iret
and
in
adc
test
fstp
neg
loop
jmp
fdivr
punpckhbw
mov
bound
inc
inc
or
std
add
into
jmp
sub
mov
aas
vhaddpd
cmp
mov
xchg
fisttp
cmps
cmp
adc
cmps
outs
inc
sti
std
stos
repz
inc
repnz
loop
retf
aad
idiv
sahf
push
daa
dec
push
cmc
mov
mov
ret
cs
add
mov
cmp
jp
imul
push
lock
or
popf
xor
push
loop
adc
push
rcr
jne
dec
movs
les
jecxz
sub
rcr
ror
scas
out
cmp
(bad)
or
mov
lods
or
or
jl
mov
inc
aas
xchg
inc
dec
add
daa
lods
loope
enter
jmp
pop
dec
and
jecxz
xchg
repnz
sub
adc
scas
sbb
mov
cmp
pop
cmps
movs
lods
jnp
sbb
test
addr16
mov
dec
outs
(bad)
or
std
sub
adc
sahf
call
sti
std
add
push
(bad)
mov
aam
pop
jno
(bad)
jmp
loope
ret
(bad)
fimul
pusha
ss
add
cwde
push
stc
mov
pushf
loop
pop
xor
jecxz
or
cli
fwait
rcl
xor
cmp
inc
in
sar
cdq
retf
(bad)
push
mov
jns
sahf
inc
and
lock
pushf
fwait
lock
int3
jg
movs
call
mov
and
(bad)
push
mov
xor
xchg
out
sbb
test
scas
fild
adc
pushw
in
xor
inc
sahf
jle
or
xchg
xor
popf
out
and
cmps
imul
push
inc
mov
data16
pop
pop
dec
and
pop
sbb
ss
and
nop
shl
and
ins
jmp
xchg
mov
add
popf
sub
repz
xchg
lock
cwde
add
fcomp
push
enter
fsubr
and
(bad)
xor
std
lea
pop
ret
nop
cmp
std
add
xlat
adc
lea
jmp
inc
xchg
icebp
lods
pushf
push
bound
add
push
es
jnp
sub
arpl
dec
sbb
inc
xchg
and
jmp
mov
in
mov
mov
dec
loopne
in
jmp
or
inc
mov
mov
jae
and
scas
lods
or
stos
jne
or
inc
mov
mov
or
pop
out
popf
and
push
les
jp
movs
pop
inc
mov
cmp
jmp
mov
xor
sbb
aad
(bad)
sahf
call
ds
mov
mov
cmps
inc
inc
cmp
cmp
jbe
mov
std
imul
mov
add
mov
fdiv
idiv
out
or
loop
pop
test
aaa
jnp
fnstenv
mov
(bad)
and
pop
jno
pushf
sub
repz
loopne
push
jmp
test
xchg
jp
pusha
aad
jmp
inc
popf
push
pushf
test
sub
in
xor
fst
fnsave
inc
push
aad
xchg
call
push
test
adc
cwde
call
es
scas
mov
sar
js
std
mov
outs
cmps
mov
adc
add
sub
jo
mov
pushf
jle
jg
stc
xor
shr
add
pop
push
imul
xor
mov
xchg
jae
mov
mov
xor
pop
or
pop
sub
push
push
pop
pop
lahf
sbb
(bad)
(bad)
jg
ins
pushf
lea
jmp
jb
out
scas
arpl
cmps
mov
xchg
out
sub
pop
mov
iret
dec
sub
jle
(bad)
stc
xchg
test
mov
xchg
in
cmp
int
and
xor
cli
mov
mov
pop
jmp
push
aad
xchg
popf
cmp
scas
sub
cmps
pushf
inc
xor
add
xor
fnstsw
adc
repnz
call
sbb
clc
in
cdq
sub
add
fimul
test
mov
cmp
ret
mov
cmps
stos
fldl2t
mov
dec
out
popf
cs
and
fild
push
pop
or
std
lds
sbb
push
and
dec
popa
cld
xchg
jns
stc
mov
pop
add
fcmovu
rcl
sti
pushf
call
add
(bad)
std
in
sub
cld
imul
cmp
stos
pop
movs
call
dec
or
daa
jmp
push
fdiv
pusha
pop
stos
(bad)
jp
mov
loop
cli
repnz
(bad)
adc
push
adc
jl
cld
add
push
mov
mov
test
in
sbb
repnz
cld
push
push
xchg
sub
push
addr16
jl
jle
sbb
aam
aas
icebp
lea
(bad)
jmp
cmps
sbb
adc
mov
mov
leave
outs
mov
push
ins
ds
pop
test
ss
cmps
or
lock
in
and
add
retf
call
cmp
pushf
inc
pushf
xor
xchg
shl
rol
sahf
dec
dec
clc
adc
sbb
std
sub
test
pusha
retf
jg
lahf
retf
std
mov
outs
push
sub
mov
ret
std
jl
mov
je
out
pop
lods
(bad)
xor
mov
mov
push
aad
inc
adc
cmp
cmp
cmp
push
cmp
loope
pusha
repz
rol
mov
pushf
pushf
cmp
fwait
xor
adc
inc
xchg
or
push
or
jle
call
mov
adc
jbe
cmps
mov
test
mov
leave
mov
retf
out
dec
adc
add
das
lahf
xchg
push
mov
inc
and
shl
xor
addr16
add
jg
and
mov
test
or
out
fdivr
pushf
call
(bad)
es
fisub
xor
mov
fidiv
cmp
retf
add
adc
fwait
aam
sbb
jae
mov
pop
lock
aam
dec
popf
dec
inc
outs
or
movs
mov
in
mov
jl
cmps
cmp
jmp
test
(bad)
std
xor
imul
mov
int3
or
scas
stos
mov
(bad)
fldln2
cmps
pusha
pushf
cwde
mov
dec
inc
jmp
repnz
cmc
fwait
loop
cmps
lea
add
clc
bound
xor
mov
in
and
stc
xor
mov
cmp
pop
and
and
ins
mov
sbb
xchg
sub
push
loope
and
mov
push
inc
mov
mov
jmp
ds
test
popf
xchg
pushf
inc
mov
sar
popa
jge
jmp
scas
push
pushf
mov
in
adc
mov
inc
jecxz
pop
jmp
lea
addr16
test
or
fdiv
sahf
jp
add
cmp
cmp
into
ja
imul
jne
dec
mov
and
sbb
mov
outs
std
pop
jne
nop
or
call
dec
gs
rcr
xchg
xor
bound
push
test
mov
dec
sbb
jle
call
div
mov
int3
sub
sub
or
xor
(bad)
addr16
sahf
popf
xchg
test
jnp
movs
(bad)
std
ds
xor
movmskps
pop
daa
and
es
lahf
fadd
xor
add
mov
jmp
movs
rcl
lock
or
ins
je
repz
lahf
pop
fldl2t
icebp
dec
in
mov
sbb
mov
add
fstp
jae
xchg
scas
call
add
sub
imul
(bad)
into
lods
std
mov
dec
ss
jmp
cli
sbb
push
popa
cmp
fwait
mov
inc
push
push
push
stos
popf
adc
or
push
sub
mov
call
(bad)
jbe
xchg
xchg
mov
call
movs
ret
xchg
cmp
push
(bad)
mov
ss
aaa
popf
mov
cmps
mov
cdq
push
gs
jbe
add
xchg
xchg
(bad)
inc
ret
std
mov
inc
popf
mov
mov
inc
cdq
popa
jmp
cmps
fs
(bad)
aad
callw
cmp
sti
pushf
popf
mov
sub
mov
stc
jae
adc
adc
retf
pop
and
pushf
outs
xor
xchg
mov
fld
sbb
push
mov
(bad)
adc
mov
pop
ins
fild
xor
and
loop
and
mov
ret
mov
push
and
outs
dec
nop
loope
loopne
jge
xor
gs
push
fcmovnb
and
mov
add
push
mov
jge
push
cmp
push
mov
popf
into
std
mov
cmc
pushf
pop
or
adc
movs
xor
call
adc
jbe
mov
add
mov
stc
ins
jge
add
mov
lods
mov
call
mov
xor
mov
call
arpl
mov
pushf
bound
(bad)
push
cli
pop
(bad)
dec
xor
ret
pop
jo
xor
sbb
in
push
rol
leave
pusha
and
pop
aam
int
popf
clc
in
inc
jae
test
gs
jmp
hlt
ja
icebp
ins
fadd
rcr
xor
test
mov
neg
ficom
mov
into
fdiv
mov
xchg
adc
idiv
movs
cld
inc
push
adc
jmp
mov
jp
in
xchg
push
rol
pop
sti
xchg
(bad)
xchg
sbb
xor
into
cld
xchg
sub
scas
loop
mov
call
add
ins
jbe
inc
inc
pushf
mov
xor
jae
inc
paddd
mov
add
repnz
adc
sbb
mov
inc
pop
cmp
(bad)
int3
xor
mov
push
pop
pop
jecxz
(bad)
mov
pop
dec
popf
jmp
or
sub
cwde
pop
rcl
push
call
(bad)
and
test
push
sbb
outs
push
std
jmp
inc
aam
push
clc
mov
out
mov
pop
mov
cwde
inc
mov
pop
xor
call
popf
stos
test
pushf
pop
sar
enter
cmp
cmp
lock
lods
push
jp
repnz
xor
inc
lahf
jl
mul
hlt
retf
imul
pushf
scas
sbb
test
dec
add
jmp
cmp
sbb
repnz
popf
test
aaa
out
mov
push
mov
push
cmp
(bad)
sub
jmp
call
jmp
sbb
inc
jle
mov
leave
jno
push
mov
inc
cmp
cld
xchg
bound
fisub
mov
add
xchg
(bad)
fnsave
inc
test
gs
cmp
adc
inc
pusha
jns
pop
dec
mov
and
adc
call
sbb
ret
inc
je
cdq
(bad)
push
out
jge
or
sub
fxtract
jb
pushf
xor
jecxz
and
iret
pop
test
popf
mov
mov
pop
pop
sbb
push
lock
clc
scas
retf
and
pop
scas
fcom
pop
shr
add
cld
inc
jg
dec
mul
mov
loopne
lods
xor
inc
push
je
xchg
or
mov
test
jg
add
mov
inc
or
ins
loop
ror
sub
out
cmp
add
aaa
rol
pusha
xor
loop
ins
std
je
adc
and
lock
sub
(bad)
call
fst
pop
xor
bound
repz
mov
push
lods
mov
dec
cli
mov
dec
in
jl
mov
mov
or
cmp
adc
mov
(bad)
imul
cmp
js
mov
daa
sbb
sbb
dec
sub
std
cwde
in
inc
retf
scas
(bad)
pop
stos
push
clc
push
(bad)
sbb
xor
shl
jo
inc
(bad)
enter
mov
aam
retf
add
xchg
adc
or
pop
(bad)
test
(bad)
pushf
pop
xlat
bound
or
addr16
cmc
sbb
jle
pop
pop
push
fucomp
or
popf
call
es
mov
xchg
out
ror
mov
xor
clc
loopne
(bad)
loope
std
mov
add
mov
jns
mov
mov
jg
dec
dec
mov
ja
sub
out
sti
xchg
adc
push
inc
xor
(bad)
jmp
ins
sub
pop
ss
hlt
mov
popf
dec
or
mov
ror
ss
jb
(bad)
cld
cmp
lahf
mov
mov
sbb
hlt
stos
xchg
out
(bad)
rcl
cmp
popf
gs
xchg
cwde
cmp
add
adc
(bad)
and
xchg
xchg
sahf
in
cmp
jmp
and
pusha
or
push
data16
mov
hlt
std
jns
xor
int
xchg
bnd
push
shr
jb
inc
adc
jl
sub
test
call
xchg
test
cwde
jbe
sub
retf
add
push
popf
xchg
in
mov
stc
out
repnz
jae
cdq
imul
sahf
inc
outs
std
fwait
inc
xchg
mov
into
aaa
pop
pusha
inc
dec
call
ins
jns
cmp
int
cmp
inc
hlt
rcr
and
pushf
sub
and
pusha
jle
cli
mov
cmp
pop
inc
clc
popf
imul
xchg
sahf
pop
fld
jbe
hlt
or
call
xchg
movs
pop
pushf
adc
ficom
pop
es
repnz
ja
std
mov
or
js
jae
push
inc
cmp
pop
push
scas
idiv
adc
xor
cmp
and
daa
fidivr
stos
push
out
(bad)
add
sbb
not
mov
xchg
or
or
lods
xor
ds
rcr
mov
inc
ret
fs
pop
nop
fiadd
std
xchg
adc
lahf
cdq
mov
mov
dec
adc
mul
cs
push
or
sti
std
das
pop
mov
inc
leave
(bad)
shr
test
sbb
fwait
rcr
fcmovne
out
inc
mov
inc
inc
push
jmp
jg
std
fwait
adc
jmp
movs
out
loope
rcr
in
sub
pop
push
mov
sub
sbb
movs
or
jns
sub
mov
push
sahf
mov
cli
jmp
popf
mov
scas
xor
stc
scas
adc
pop
sti
jo
xlat
jg
dec
sahf
pop
xor
stos
in
xlat
mov
pushf
test
sub
adc
fidivr
cwde
repnz
adc
xor
stc
add
popf
add
jne
jnp
jmp
sahf
push
shr
mov
out
fdivr
mov
mov
lods
movs
pop
int
fwait
pushf
adc
in
and
xlat
int3
mov
scas
pop
pop
cmp
pusha
jle
ss
enter
cwde
fbstp
or
fsubr
fnstsw
ss
je
adc
jb
sar
int3
movs
xchg
jle
sar
adc
outs
xor
aad
call
outs
lock
(bad)
sbb
push
(bad)
(bad)
and
ins
and
(bad)
dec
sub
and
aaa
add
arpl
in
xchg
in
adc
xor
adc
inc
jge
jb
aaa
and
gs
in
xor
or
pusha
cs
scas
adc
ds
pushf
das
movs
call
sub
in
mov
adc
call
fsub
jmp
cdq
mov
loopne
pusha
lods
addr16
pop
js
ss
(bad)
add
out
fstp
and
xchg
ret
(bad)
int
mov
imul
xor
or
lahf
cmp
pop
in
xchg
push
popf
or
mov
push
fadd
ret
jmp
sbb
aas
inc
mov
xor
cli
mul
jmp
jge
or
mov
sahf
mov
xchg
movs
push
out
cli
in
inc
cmp
int3
xlat
cmp
(bad)
fwait
jmp
(bad)
and
pushf
or
dec
cdq
aam
bound
jge
inc
or
push
xor
push
add
aam
xlat
xchg
and
pop
sub
inc
add
daa
loopne
call
adc
fnsave
xchg
iret
sub
pushf
push
fdiv
les
xor
stos
jp
pop
std
xchg
jmp
jmp
cmp
push
gs
sub
mov
gs
fs
sbb
out
mov
fnstsw
pop
cwde
or
aaa
jmp
(bad)
int3
call
aad
mov
test
cmp
pop
popf
std
push
jecxz
loope
es
psubsb
pusha
or
ret
mov
and
ror
jno
mov
push
(bad)
ja
jb
rcr
es
call
ss
(bad)
adc
mov
mov
sahf
les
sub
nop
push
(bad)
arpl
ret
sub
sub
pop
je
loope
add
popf
adc
pop
jmp
aaa
test
push
sbb
mov
mov
sub
cwde
xchg
jle
mov
scas
push
or
xor
adc
(bad)
xor
mov
jmp
leave
pop
mov
push
pop
rcr
into
sbb
xor
xchg
xor
cld
jle
(bad)
arpl
pop
nop
jnp
cmps
cmc
mov
push
loope
test
mov
sahf
test
pop
sub
dec
jmp
fbld
cwde
mov
ja
push
call
out
pop
dec
(bad)
pop
or
pop
dec
fidiv
test
aaa
jmp
call
pop
jb
arpl
mov
xor
enter
xchg
mov
aad
push
popa
push
sti
add
fisttp
loopne
es
arpl
fdiv
pop
or
ss
mov
cmc
jg
imul
mov
mov
mov
(bad)
ins
sbb
push
sbb
in
jmp
inc
cmp
mov
fcomp
in
adc
jle
cmp
fcomp
add
push
jecxz
mov
sahf
and
aas
jg
pop
dec
jmp
pop
push
and
jno
xchg
fcomp
mov
mov
pop
(bad)
mov
dec
cmp
and
sub
arpl
ror
stc
push
pop
hlt
jp
sbb
aam
or
cs
sbb
adc
shr
or
add
xor
mov
or
cwde
fwait
jmp
push
and
inc
neg
dec
sub
pushf
sbb
xor
lds
stos
push
mov
sub
xor
xchg
stos
out
in
mov
cmp
sahf
pop
mov
xchg
imul
xor
rcr
xlat
sub
loopne
loop
fidivr
mov
mov
cs
add
cli
and
repz
xor
ficom
pushf
shl
sub
pushf
push
hlt
mov
xchg
std
mov
pop
out
fs
scas
jmp
push
add
inc
repz
mov
das
or
outs
test
call
aas
mov
and
jnp
jno
lods
leave
std
adc
scas
sub
into
(bad)
jbe
cmps
pop
stos
test
jns
(bad)
pushf
or
mov
(bad)
mov
mov
popf
mov
ss
xchg
add
jb
mov
push
call
test
test
xchg
xchg
gs
pushf
and
inc
retf
dec
call
popf
popa
fwait
mov
dec
scas
adc
dec
fwait
xor
shl
adc
fcomp
sahf
jnp
sahf
int3
icebp
mov
aam
lahf
pop
or
les
test
dec
aam
es
push
cmp
into
add
jne
daa
fild
call
gs
pushf
mov
xor
push
jns
sbb
jmp
sbb
dec
call
jge
(bad)
sub
cdq
inc
das
inc
add
mov
movs
mov
popa
sub
leave
movs
sahf
dec
ret
sti
fisttp
inc
loope
iret
dec
or
nop
shr
lods
fidivr
sub
mov
inc
int3
shl
jmp
inc
adc
push
cmps
mov
pop
stc
pop
inc
les
popf
ret
jecxz
cmp
xchg
mov
in
ret
push
jecxz
jle
cmp
or
cmp
clc
(bad)
std
dec
out
or
adc
mov
cdq
loop
adc
test
xchg
sub
inc
inc
xchg
push
lods
mov
bnd
xchg
loop
dec
sbb
pushf
pop
fsubr
xchg
jge
jnp
mov
sbb
enter
jns
hlt
cmp
fwait
ins
xchg
fadd
cmp
pop
sbb
jmp
xchg
inc
xor
std
dec
and
jns
add
pushf
lods
xchg
nop
pop
call
push
retf
stos
fist
mov
push
call
cmps
(bad)
push
sub
inc
icebp
pop
pop
cmps
in
or
std
lods
pop
xor
into
add
mov
pushf
(bad)
aam
xchg
lods
jo
dec
add
dec
sahf
mov
jmp
sbb
outs
pushf
dec
enter
cmova
pushf
pusha
fsub
xchg
sub
les
std
repnz
popa
dec
sub
sbb
xor
mov
leave
std
mov
xchg
popf
ss
bound
std
jl
xor
sub
and
mov
addr16
push
stos
arpl
mov
push
sbb
gs
jge
mov
sar
mov
inc
and
call
ret
mov
xchg
pop
sub
in
jno
sbb
in
outs
fs
pushf
cmp
fs
sahf
pop
test
or
(bad)
sub
or
add
(bad)
fidiv
push
jp
and
add
sbb
stos
cdq
retf
jne
and
push
sbb
mov
dec
popf
fisubr
mov
std
mov
adc
pop
popf
mov
mov
data16
out
test
ins
ds
xchg
call
shl
inc
mov
pop
loop
mov
popf
mov
jb
dec
(bad)
js
inc
popf
mov
xor
call
aad
or
mov
int3
dec
fcmovnb
sub
inc
jae
sub
xlat
sub
pop
(bad)
adc
dec
in
mov
ins
fwait
sar
mov
std
inc
jb
lock
retf
cli
add
dec
jno
pop
xchg
sbb
mov
and
sbb
or
mov
cwde
xor
xchg
lock
sub
inc
sbb
pop
popf
pop
mov
stos
push
(bad)
xor
xchg
hlt
mov
imul
ret
add
pop
lds
std
pop
cld
xlat
dec
retf
and
test
mov
xor
push
or
ins
pushf
inc
add
ds
sbb
jmp
or
sub
pop
out
pushf
fmul
ficomp
mov
into
and
adc
sahf
pop
xchg
add
and
sub
mov
out
call
mov
pop
jle
sti
ror
movhps
xchg
jo
sub
mov
shl
pop
test
out
mov
xor
cmp
cmp
fnstenv
daa
push
nop
push
mov
mov
sub
popf
ss
gs
movs
movs
shl
mov
rcl
xor
test
jl
add
add
and
lods
pushf
rcr
daa
xchg
inc
call
jns
out
jmp
xchg
outs
mov
test
mov
fs
inc
std
sub
mov
fistp
adc
cdq
loop
sbb
mov
mov
inc
or
lock
sbb
push
adc
not
stos
adc
outs
call
inc
les
jmp
xor
jecxz
mov
sahf
jb
scas
in
jns
jmp
xchg
stos
cmp
adc
inc
mov
(bad)
sbb
shr
push
cwde
cmp
mov
call
aaa
and
sbb
outs
or
cwde
or
test
add
xor
mov
xchg
pushf
and
out
mov
pop
je
sbb
aaa
mov
call
cld
jne
xor
jb
cdq
(bad)
sti
xor
pop
adc
test
dec
ja
mov
stos
outs
fisubr
sar
pop
xor
icebp
pop
xor
int3
jnp
and
jle
outs
jecxz
pop
ins
jne
out
or
jb
jo
es
repnz
sahf
std
fsubp
jmp
sub
inc
scas
lods
mov
arpl
call
xor
int3
sbb
mov
sti
lock
aad
popf
out
dec
cmp
xchg
fucomi
xchg
aaa
popf
sbb
sub
(bad)
jmp
call
sar
jae
pop
xor
mov
xor
mov
(bad)
sub
sub
pushf
jecxz
jmpw
cmp
inc
push
std
sub
mov
out
in
add
cld
or
cld
or
jmp
cmc
je
test
lods
in
cld
inc
mov
fs
fimul
outs
repnz
inc
pop
pushf
pushf
(bad)
ds
push
mov
sbb
xor
xor
xchg
ret
pop
jo
jl
cmp
or
pop
fild
xor
push
jae
xor
cmps
scas
cmps
adc
push
inc
test
cmps
cdq
sub
into
jge
in
xor
test
jmp
outs
fnstcw
xchg
aaa
std
pushf
push
sti
inc
mov
fdivr
fwait
std
jnp
stos
jo
retf
shr
pop
aaa
dec
mov
cmp
xor
mov
into
pop
ret
sbb
xchg
fwait
lock
stos
sti
pop
es
icebp
pushf
ja
add
pop
sub
cwde
adc
sub
jmp
sub
mov
push
ja
sub
and
scas
jmp
jno
(bad)
call
pop
loop
or
pop
int3
rol
or
xchg
js
dec
dec
imul
pop
xor
push
(bad)
mov
push
mov
sbb
mov
(bad)
sbb
pop
push
aam
inc
xchg
(bad)
mov
nop
popf
xchg
popf
xor
mov
mov
inc
dec
popf
xor
xor
jmp
dec
pop
push
cmc
add
mov
sub
(bad)
sti
jne
fwait
xor
push
ins
(bad)
or
scas
or
fcom
fstp
mov
shl
jecxz
sbb
fistp
retf
mov
xchg
mov
loop
xchg
dec
xchg
or
fs
repz
mov
daa
inc
jmp
outs
sub
jb
push
les
cmp
jmp
in
aaa
sahf
adc
mov
fisubr
push
inc
repnz
add
sub
jno
aas
cwde
push
cs
arpl
lahf
jmp
daa
js
scas
lea
mov
(bad)
fld
and
call
int
sti
jne
hlt
or
in
in
jmp
scas
rcl
les
fs
inc
jmp
pop
fwait
xchg
nop
das
popf
xor
fwait
mov
mov
into
call
in
js
test
mov
call
fisttp
or
(bad)
push
ds
hlt
fdiv
sti
std
dec
(bad)
fnstsw
mov
mov
xor
jne
std
mov
cmp
mov
repnz
out
xor
pushf
or
cwde
and
ret
hlt
rcr
outs
stos
jg
cld
dec
push
les
scas
adc
jno
xchg
xor
int
adc
in
sub
mov
lahf
ss
popf
dec
push
iret
(bad)
scas
leave
jae
sbb
inc
inc
cmp
mov
mov
iret
repz
mov
inc
and
(bad)
fcomp
jmp
lea
call
popf
adc
or
test
vmread
push
inc
push
nop
sub
fwait
mov
mov
movs
mov
and
out
dec
cmp
adc
inc
jecxz
pushf
mov
sbb
adc
out
and
dec
aaa
fist
mov
out
mov
sub
push
add
out
(bad)
xchg
push
pop
and
test
jmp
add
(bad)
mov
jae
mov
add
ror
test
repnz
call
dec
mov
fsubr
dec
and
popf
mov
scas
pop
stos
cli
xchg
cmp
push
dec
sahf
test
cdq
jo
cwde
hlt
movs
std
lahf
jb
mov
jmp
adc
mov
cdq
retf
ja
icebp
sub
pop
mov
lods
or
(bad)
std
sbb
outs
jmp
or
pop
cld
mov
mov
jmp
push
ds
pusha
(bad)
sti
mov
mov
ret
mov
xor
enter
iret
jmp
aam
int
xchg
mov
in
sti
xchg
imul
cmp
mov
std
ja
cmc
je
in
add
ror
js
xor
dec
ja
pop
dec
xor
push
std
rcr
mov
out
mov
or
add
jmp
jae
mov
(bad)
cli
xor
jl
xor
jo
jmp
test
call
mov
xor
add
add
jae
fiadd
jbe
jg
mov
or
jmp
pop
out
sub
xor
ss
gs
adc
test
pop
mov
cli
xor
push
and
(bad)
mov
add
pop
or
or
xchg
jmp
sub
xor
xchg
data16
pop
xlat
mov
or
ins
out
in
pusha
out
ins
mov
or
fstp
dec
inc
or
sub
aam
xchg
in
cwde
in
in
sbb
add
imul
pushf
dec
inc
mov
mov
std
cld
sbb
and
call
inc
and
inc
fstp
dec
cmp
imul
mov
push
in
sti
dec
xchg
dec
mov
out
retf
mov
sub
jne
lods
mov
jg
sbb
sbb
in
pop
push
jo
popa
xchg
sub
movs
jmp
jne
out
jmp
std
mov
or
cmp
data16
cli
xchg
pop
iret
mov
cmps
out
add
jmp
cli
popf
stos
ja
loopne
pop
fdiv
std
or
and
call
test
pushf
cmps
cwde
sub
lods
sub
outs
arpl
cmp
imul
pop
mov
lods
sar
xor
and
popf
dec
push
cwde
sbb
jmp
in
(bad)
hlt
std
adc
jecxz
into
call
inc
cmps
je
fwait
cmp
jae
int
adc
sahf
add
push
mov
xor
repnz
pushf
jo
push
mov
mov
sti
dec
mov
cld
xchg
inc
push
lods
inc
lea
cs
cmp
aad
out
out
jg
out
add
pop
push
popa
sbb
cmp
xchg
fcmovnb
scas
jnp
rcr
je
jno
cld
loop
es
std
cmp
int3
pushf
push
call
cs
mov
movntq
lock
ret
sub
mov
xchg
in
or
stc
cmp
mov
hlt
cld
ss
inc
mov
inc
mov
call
cmps
sub
mov
or
pop
popf
ins
adc
mov
scas
scas
jmp
rol
aad
sub
sub
mov
std
popf
pusha
xchg
jmp
mov
inc
loop
xchg
scas
add
add
jmp
add
int3
and
sub
pushf
test
sahf
pop
or
sahf
pushf
jp
(bad)
mov
aam
lods
das
dec
fs
ds
and
pop
sbb
adc
fwait
xor
cmp
hlt
rol
in
arpl
dec
enter
push
push
pushf
popa
mov
dec
outs
into
fwait
rcl
mov
add
xchg
sahf
or
mov
jmp
sub
sahf
dec
popf
xchg
mov
pushfw
sub
sbb
pop
lock
test
movs
out
pop
push
(bad)
pushf
cmp
adc
inc
mul
inc
pop
in
es
inc
out
rep
pop
iret
loope
push
push
sahf
jl
pop
xchg
inc
fadd
movs
mov
lea
xlat
add
scas
pusha
pusha
sahf
cdq
lea
loop
std
fwait
sbb
in
inc
pop
pop
fcmove
push
clc
add
shl
or
ins
pop
pushf
or
pop
dec
cmc
add
and
cmp
jmp
fisttp
fsub
add
mov
rcr
fidiv
and
data16
sar
jmp
jno
lahf
les
cmp
xchg
sahf
jmp
leave
popf
out
sbb
imul
sub
out
ss
jp
outs
call
call
jne
shr
sahf
ja
cmc
and
or
add
ret
(bad)
pop
or
(bad)
scas
lods
mov
pop
call
lds
(bad)
arpl
cli
mov
ror
cmp
cmp
jmp
js
jno
call
jge
cmp
call
fs
mov
dec
movs
and
data16
inc
in
sbb
test
push
enter
sbb
js
shr
pop
(bad)
stc
cmp
hlt
xchg
in
jge
daa
das
mov
fwait
mov
ds
cmps
inc
inc
sub
arpl
popf
sar
pop
jmp
sub
add
inc
loope
loop
mov
jle
fisttp
cmp
sar
jge
jo
fucomi
call
sub
push
inc
jb
jecxz
out
test
push
outs
clc
nop
sahf
sar
push
leave
std
sbb
dec
lea
mov
cld
inc
mov
arpl
(bad)
lock
cs
inc
push
pop
int
movs
pushf
lods
call
sahf
cli
xor
xchg
std
aad
jae
lods
ror
clc
aas
inc
push
loop
mov
mov
push
pushf
fsub
sbb
call
mov
ins
cdq
jo
int3
cld
xchg
inc
push
mov
sbb
or
je
inc
leave
push
adc
int3
mov
call
pop
ffreep
jae
movs
pushf
test
jnp
sub
pushf
pop
sub
out
cdq
mov
sahf
push
lods
add
inc
mov
mov
pop
jmp
mov
cmp
fmul
inc
pop
sub
movs
pop
int
pop
gs
dec
cmp
div
mov
retf
xchg
popf
push
or
nop
add
outs
xchg
(bad)
sbb
push
add
push
or
xor
clc
daa
mov
scas
pushf
popf
ins
rcl
push
into
push
loopne
mov
loope
fs
push
call
jns
add
arpl
push
sbb
in
test
sti
adc
ins
pushf
cmp
push
stos
pushf
lds
jnp
call
scas
adc
and
mov
jo
or
je
call
sbb
ins
les
inc
cmp
xchg
push
push
dec
imul
xchg
mov
ins
fs
cmp
mov
ins
cmp
das
idiv
jbe
loope
sbb
add
mov
push
add
sahf
call
adc
hlt
mov
imul
pop
xchg
nop
pop
jns
out
fwait
mov
nop
add
inc
not
fs
push
jge
mov
mov
lea
fdiv
cli
cmp
clc
daa
imul
push
scas
adc
mov
xchg
jl
mov
scas
je
jne
je
mov
(bad)
in
repnz
mov
lds
dec
mov
in
mov
pushf
mov
cmps
mov
clc
pop
sbb
fisttp
es
(bad)
mov
add
stos
jb
sub
jbe
call
lea
pop
call
mov
ficomp
fstp
xor
sub
imul
dec
test
xor
icebp
and
push
popf
jp
xlat
imul
call
push
cmp
cmc
fwait
adc
inc
loop
daa
push
pop
sub
push
jns
hlt
jg
(bad)
loop
popa
inc
mov
retf
outs
das
stc
out
push
fs
pop
call
popf
push
sbb
cli
and
sub
(bad)
push
pop
aad
xchg
stos
inc
xor
int
data16
lods
pop
mov
stos
mov
test
sbb
pop
movs
cld
inc
xchg
mov
add
fsubr
movs
fcomp
xor
jg
push
lahf
mov
mov
xchg
std
or
ss
jmp
or
nop
popf
lods
std
xor
test
mov
ins
jb
call
mov
and
(bad)
rcl
jmp
int
dec
cmp
xor
imul
mov
mov
icebp
mov
add
dec
dec
lods
add
dec
push
cmp
cld
pop
je
mov
out
mov
mov
push
mov
(bad)
fwait
sbb
inc
das
push
xor
retf
fwait
out
ds
(bad)
in
out
pop
stos
sbb
int
call
xchg
fucomi
bound
retf
popf
fs
sbb
mov
lahf
adc
stos
dec
popfw
les
sub
pop
fcmovbe
leave
push
mov
push
xor
fisub
scas
mov
push
dec
push
dec
inc
call
pop
dec
iret
inc
or
adc
aas
fild
faddp
xor
cdq
xchg
jnp
fdivr
lods
sub
xchg
daa
push
sahf
loopne
dec
outs
fldl2e
lahf
jo
hlt
mov
adc
mov
mov
mov
xchg
mov
pop
pop
repnz
ret
call
adc
mov
push
inc
enter
pushf
add
cmp
sahf
cmp
jbe
std
rol
sub
adc
stos
cs
jmp
sub
lods
stc
dec
and
and
repz
and
hlt
mov
loopne
inc
xor
popa
data16
inc
xor
ret
cmp
pusha
retf
sbb
fnstcw
dec
adc
out
ret
mov
ins
or
ret
aad
pusha
cmps
call
test
ss
jo
mov
pop
ds
add
push
pop
movs
jl
das
xor
fcom
jmp
int
sub
sbb
mov
call
push
scas
ins
and
call
inc
push
ror
dec
fisub
push
xor
int
js
dec
test
mov
enter
and
(bad)
push
cmps
ins
dec
mov
das
(bad)
xchg
jle
xchg
ret
mov
mov
cmps
mov
ins
sahf
stos
sbb
cld
xor
sbb
pop
(bad)
pushf
or
cld
jns
cmp
pusha
or
inc
push
adc
fist
(bad)
cs
mov
popf
mov
scas
xchg
add
inc
shl
inc
sbb
xchg
jns
push
and
(bad)
pop
mov
add
or
sbb
lock
jecxz
pushf
or
xchg
nop
rol
adc
cmps
xlat
jmp
dec
(bad)
sbb
scas
push
std
mov
and
xlat
jmp
dec
mov
adc
(bad)
into
loope
js
add
add
sar
sub
out
test
popf
dec
and
xor
jmp
cmp
pop
stc
jnp
sub
bound
in
test
push
dec
sub
mov
xor
call
mov
cli
mov
fcom
mov
repnz
gs
cmc
mov
inc
mov
fidiv
outs
sub
pop
cmp
jne
ret
aaa
neg
pop
pop
and
es
les
jmp
sbb
jmp
add
outs
mov
out
push
mov
es
(bad)
sbb
fdiv
cli
cmp
mov
fstp
and
mov
call
test
out
test
jmp
sti
ds
dec
mov
push
(bad)
popa
xchg
push
push
adc
cld
jmp
cmp
xchg
xchg
popf
sbb
or
out
cmps
or
cs
mov
cld
lea
ss
sbb
or
test
or
in
out
mov
mov
test
add
cs
cmp
sbb
fadd
popf
mov
inc
cmp
sbb
pusha
iret
lods
(bad)
mov
fucom
test
mov
shl
inc
jl
xchg
(bad)
push
ins
push
xchg
(bad)
mov
adc
xor
mov
jns
push
inc
cmp
iret
jmp
xor
dec
sub
push
jmp
or
(bad)
pushf
stos
push
mov
add
iret
stos
jmp
mov
shr
add
xchg
ss
sahf
fdivr
mov
repnz
std
fldcw
mov
aaa
stos
cmp
jmp
cmp
repz
cmps
cwde
mov
call
mov
cwde
lock
(bad)
sbb
ret
xor
ins
out
aaa
loopne
icebp
loop
sahf
outs
fcomip
add
popf
jo
jmp
aaa
mov
mov
popf
jp
jge
test
sti
mov
sbb
jle
leave
and
add
push
ss
in
outs
pushf
loopne
sbb
push
dec
mov
mov
jle
out
xchg
adc
dec
mov
cmp
or
popf
push
mov
cs
movs
xor
adc
and
out
test
jno
stos
sbb
nop
xchg
int
je
bound
rol
retf
pop
sub
int3
test
fistp
dec
xchg
xchg
out
leave
repz
stos
std
jmp
test
cmp
mov
sub
or
outs
(bad)
jle
sub
call
xor
popf
inc
vmovsd
push
pushf
push
inc
mov
lock
cmps
pusha
jbe
push
sbb
jbe
popf
not
mov
mov
or
popf
bnd
in
fmul
mov
clc
mov
retf
mov
inc
jecxz
movs
imul
call
leave
fidiv
xchg
mov
aaa
dec
stc
jg
cmp
mov
fsubr
sbb
scas
stos
mov
inc
andps
xor
(bad)
inc
stc
inc
gs
pop
sbb
enter
stos
cld
cmc
xchg
pop
int
ss
mov
and
inc
repnz
ins
cmps
int3
cmp
dec
sub
sub
sti
inc
sti
dec
ret
xchg
mov
stc
loopne
dec
cmps
daa
out
ss
(bad)
call
cmp
stos
mov
imul
jge
outs
mov
or
dec
cmp
movs
jb
aas
push
repz
jp
nop
(bad)
adc
xchg
jbe
clc
push
inc
lods
mov
mov
cmps
mov
arpl
mov
fcmove
pop
pop
int3
aas
sbb
mov
shl
mov
jo
push
std
in
addr16
pushf
mov
lods
mov
sahf
cmp
sbb
inc
sahf
sub
rcr
inc
sbb
ins
mov
jp
(bad)
cmp
add
int3
sbb
cmp
cmp
cmp
mov
sbb
repz
pop
ret
sbb
rcl
(bad)
daa
push
mov
xor
sti
ins
fisttp
rol
aam
jl
inc
jg
fdivr
lock
outs
xchg
jp
daa
cmps
sub
dec
movs
fdivr
pushf
push
add
loopne
and
mov
jl
fadd
mov
lock
fs
sbb
pop
jmp
push
cmp
shr
or
dec
mov
js
mov
popf
and
into
fst
call
xor
call
push
retf
cmp
popf
push
mov
bound
jecxz
clc
scas
and
lahf
jbe
int3
les
test
cmp
add
adc
(bad)
loopne
pop
test
mov
in
push
xchg
ja
lods
shl
cdq
arpl
dec
popf
popf
inc
lea
pop
arpl
mov
bnd
es
lods
call
and
sti
nop
sahf
sbb
or
mov
add
lea
xor
icebp
fistp
cmp
sub
adc
xchg
inc
ja
pop
and
ins
fisubr
and
das
inc
inc
enter
aaa
fwait
push
call
mov
mov
nop
rcr
xor
idiv
outs
rcl
das
leave
cli
push
pop
inc
ins
pop
loop
pop
aaa
mov
mov
dec
js
xchg
push
push
rcr
cmps
call
pusha
(bad)
popf
pop
sbb
int3
(bad)
bound
int
std
xchg
push
pop
dec
ror
(bad)
cld
pop
call
call
push
jl
or
pushf
jg
cwde
cs
fmul
std
ja
imul
xor
sub
mov
mov
outs
inc
jmp
add
into
pushf
shl
pop
ror
xchg
test
mov
fcomp
inc
or
nop
lock
push
push
in
add
adc
add
jns
mov
std
mov
inc
and
push
cmc
jae
and
add
fwait
popf
lock
xor
xchg
and
sbb
sahf
xchg
push
in
mov
and
ins
mov
jns
cmc
inc
fsub
xor
into
popf
jecxz
xchg
(bad)
pop
jmp
jmp
fadd
jnp
mov
cmp
(bad)
daa
cmp
xor
mov
fwait
add
cmp
mov
movs
adc
xchg
xor
enter
pop
or
sar
faddp
iret
pop
or
mov
pop
or
mov
jmp
fs
fimul
sahf
jnp
sub
fist
jmp
mov
pop
or
fld
ss
pop
call
pusha
and
rol
int
je
cli
cld
std
das
call
cmps
stc
in
mov
jbe
mov
push
pop
xor
js
lods
jmp
jmp
jl
mov
popf
xchg
sub
cmps
jnp
movs
fstp
xchg
and
jmp
pop
jbe
dec
fsubr
(bad)
jbe
movs
addr16
push
sbb
std
mov
ins
repz
mov
movs
sbb
sbb
(bad)
jge
enter
fsub
dec
jno
mov
inc
in
pop
mov
fidiv
adc
loopne
mov
add
pushf
ds
cld
jg
push
enter
sbb
cmp
push
retf
fsub
or
and
popf
gs
test
ret
adc
in
sbb
sbb
icebp
mov
call
dec
(bad)
shl
loope
std
sbb
lahf
push
imul
mov
or
std
ja
ds
jmp
or
mov
sahf
adc
arpl
bound
std
mov
dec
pop
dec
cmp
out
and
add
outs
std
and
xchg
stc
mov
sbb
push
adc
sar
mov
add
xchg
sub
mov
jns
fwait
mov
dec
mov
imul
push
or
inc
and
pusha
gs
pop
and
xchg
and
(bad)
mov
dec
push
repnz
add
push
icebp
dec
jmp
cli
je
rcr
fiadd
popf
out
mov
jp
std
jle
fs
or
xchg
out
cmp
push
lock
sti
push
dec
pop
push
mov
(bad)
(bad)
xor
or
and
jmp
pop
ins
or
inc
test
pushf
mov
mov
(bad)
mov
int
fistp
dec
xchg
popf
lods
popf
and
mov
scas
jo
out
mov
xor
cwde
aad
das
xchg
lahf
ret
shl
call
dec
pushf
inc
sub
lock
popf
cld
pop
cmp
mov
sub
(bad)
stos
mov
aad
and
dec
repnz
jo
jnp
sub
or
inc
in
mov
scas
fld
stc
pop
iret
add
(bad)
jl
outs
bound
push
sub
pushf
retf
pop
in
fwait
test
movs
imul
ror
aas
pop
sbb
inc
mov
mov
sti
mov
jl
ret
retf
std
adc
arpl
ss
clc
xor
push
pop
push
jmp
push
nop
jle
dec
test
outs
leave
int
jb
repz
cmp
xchg
stos
shr
push
(bad)
std
ret
mov
mov
adc
add
pop
mov
fwait
mov
jnp
mov
icebp
fidivr
lods
pop
retf
fmulp
ja
and
or
popf
cmp
jmp
push
sahf
shl
push
call
mov
leave
rcr
add
loop
(bad)
in
mov
scas
xor
xor
test
hlt
pushf
shl
cld
jge
in
lds
sbb
scas
dec
loop
inc
jb
into
lods
lea
and
xlat
frstor
ss
addr16
(bad)
cld
ja
popf
cmp
push
jg
nop
loope
stos
sub
xchg
cmp
pop
pushf
and
mov
loopne
sbb
lea
cmc
or
dec
loop
dec
(bad)
in
sbb
xchg
and
adc
xchg
and
call
test
cdq
es
out
mov
mov
sbb
in
mov
mov
sub
in
xor
pushf
jnp
or
shl
(bad)
dec
cmp
pusha
in
std
sbb
cmp
mov
and
(bad)
mov
sbb
sub
xchg
add
jecxz
pop
imul
mov
mov
add
jbe
cmp
push
(bad)
lods
xchg
push
cli
jmp
xchg
or
aad
jmp
mov
inc
mov
sbb
sub
sbb
mov
pushf
mov
pushf
mov
mov
sub
or
(bad)
xor
add
out
pop
call
mov
mov
sbb
popf
(bad)
adc
mov
cs
push
mov
pop
pop
inc
ror
movs
js
sub
lods
stos
or
call
shl
mov
mov
fidivr
adc
lods
outs
xchg
dec
imul
aaa
inc
or
sar
dec
shr
mov
pop
fisttp
loope
(bad)
aad
push
call
fstp
jge
call
mov
outs
sub
je
adc
jp
or
push
movs
in
jle
scas
mov
mov
mov
xchg
inc
fild
bnd
xor
jae
pop
inc
sub
mov
cmp
sbb
dec
in
dec
mov
out
popf
cmps
rcl
mov
bound
fsubr
inc
push
jecxz
pop
nop
xor
popf
cmp
sub
add
pusha
xchg
mov
and
mov
dec
jmp
inc
int
mov
(bad)
repnz
(bad)
xlat
int3
cld
pop
(bad)
jecxz
adc
mov
ins
xor
loope
mov
cmp
inc
pop
mov
add
push
imul
sub
aad
aam
mov
retf
pushf
out
arpl
and
pushf
jno
ds
fstp
fwait
test
sbb
cmp
call
jno
push
popf
mov
sar
xor
push
or
inc
mov
(bad)
pop
out
scas
std
jne
pop
pop
jnp
dec
push
jmp
sti
and
daa
cwde
xchg
inc
pop
pop
jae
xor
fdivp
mov
sbb
xor
aas
fdivp
add
or
sub
pop
ins
jbe
in
push
xchg
scas
mov
pop
mov
pushf
cwde
pop
add
adc
cmp
aas
(bad)
inc
xchg
bswap
add
popf
(bad)
jp
xor
(bad)
or
push
dec
loop
inc
inc
sub
lods
(bad)
mov
pop
and
cmp
xchg
inc
jbe
fild
mov
lock
sbb
or
pushf
jle
adc
push
pminub
mov
call
sub
and
ja
(bad)
jecxz
clc
mov
dec
jle
cs
inc
(bad)
(bad)
std
mov
pminsw
pop
cdq
pop
pop
or
in
neg
xchg
in
or
pushf
add
mov
cmp
fwait
adc
or
arpl
add
aad
push
fdivr
dec
pusha
pop
push
cld
repz
int3
push
movs
call
cmp
(bad)
retf
(bad)
jle
les
pushf
jp
sbb
movs
mov
std
xchg
adc
dec
mov
dec
xor
or
mov
cwde
and
in
sub
(bad)
and
xchg
aaa
js
xor
pop
mov
hlt
cmps
idiv
mov
lock
ss
push
dec
ret
sub
or
iret
xor
push
in
sahf
shr
xchg
stc
cld
xchg
sbb
inc
