mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
adc
not
out
push
loopne
adc
add
jmp
test
sbb
arpl
dec
icebp
shl
popa
sbb
sti
aad
fld
add
push
jmp
out
cmp
mov
jo
rol
pop
das
inc
rcr
retf
rcl
test
xor
aaa
jnp
mov
je
outs
mov
in
fsubr
and
sub
imul
stos
sbb
pop
loope
push
(bad)
pop
sbb
fs
pop
inc
(bad)
sbb
pop
xchg
dec
cmps
cmp
mov
jmp
in
(bad)
and
sar
mov
mov
xchg
leave
imul
(bad)
sbb
pop
mov
jmp
pusha
cli
mov
retf
xor
jecxz
ss
rcr
adc
imul
ss
in
dec
xor
test
jne
daa
ret
xor
adc
pop
jge
xchg
int
(bad)
cmp
mov
in
mov
push
jbe
or
cmp
adc
stos
pop
sbb
imul
pop
xchg
es
aam
jns
jbe
xor
xchg
test
or
pop
out
outs
ins
ud1
sub
fmul
sub
(bad)
push
(bad)
mov
out
pusha
adc
hlt
push
aad
mov
dec
dec
adc
pop
aam
cmp
sahf
mov
mov
mov
xchg
push
jmp
pop
xchg
dec
retf
outs
or
ja
das
ins
inc
imul
add
push
pop
or
(bad)
push
cdq
movs
or
repz
jno
cli
aas
cwde
pop
mov
xchg
jge
sti
inc
fbstp
jne
xor
lahf
fist
(bad)
stos
int3
jo
aam
dec
jg
push
iret
mov
push
aam
sub
test
repnz
js
sbb
jl
pusha
mov
iret
fs
stc
pop
mov
xchg
pop
cwde
mov
inc
sub
mov
gs
pop
arpl
repnz
adc
push
add
and
jns
fcomp
jns
retf
push
and
sub
push
jmp
pop
fnstcw
mov
jmp
fwait
rcl
(bad)
xchg
fistp
jg
add
test
push
jno
sbb
mov
repz
sub
test
jno
mov
pop
imul
into
out
push
mov
jo
or
out
push
fs
call
iret
imul
hlt
xor
inc
mov
jle
pop
int3
in
jno
sti
adc
repz
mov
repz
movs
lahf
push
inc
mov
sub
idiv
enter
clc
cmp
js
sbb
icebp
pop
jp
xchg
std
in
les
mov
(bad)
jg
sar
xor
mov
test
jmp
movs
mov
mov
sbb
mov
jb
pop
test
xchg
mov
mov
retf
outs
or
cmp
push
push
ja
adc
(bad)
das
pop
into
and
sub
into
dec
movs
jae
test
fnsave
inc
pushf
mov
ror
push
mov
int
arpl
cli
jecxz
inc
xor
ss
xor
inc
mov
fnsave
outs
lahf
js
loopne
cmc
pop
pop
fs
mov
cld
adc
mov
arpl
and
jecxz
stos
jnp
and
repz
lods
and
jge
inc
lods
std
jl
inc
hlt
dec
retf
daa
fnsave
xchg
test
or
pop
ins
jo
adc
fimul
or
xor
sub
mov
cld
jae
dec
mov
jo
into
pop
lea
pop
imul
pop
es
lock
mov
mov
(bad)
cmp
xchg
sub
adc
pusha
sbb
pushf
(bad)
fst
outs
cwde
pop
add
sahf
pop
xor
pushf
add
test
jns
and
aad
inc
cmps
mov
push
sbb
xchg
gs
jle
inc
xchg
fistp
rcr
pop
xchg
xchg
js
mov
dec
es
lods
inc
push
jecxz
adc
outs
test
xchg
xor
dec
sub
xchg
dec
xlat
push
push
(bad)
jae
fnstenv
popf
add
(bad)
test
std
inc
cmp
lds
and
sbb
shr
cmp
ja
lahf
out
les
and
adc
jns
cld
mov
adc
and
ins
adc
ds
push
dec
rcl
fs
hlt
repz
or
sub
stos
add
and
sub
fbld
cmps
punpckhdq
mov
mov
push
xor
cld
dec
sub
out
mov
fild
jne
mov
cs
nop
movs
aam
fcomp
out
adc
mov
mov
mov
cmp
mov
int3
call
xchg
fucom
add
ror
push
es
mov
push
xchg
stos
addr16
iret
pop
outs
icebp
retf
dec
mov
cs
sub
les
jb
je
or
and
(bad)
xchg
outs
inc
sti
scas
ins
xlat
call
sbb
in
inc
js
mov
pop
ss
and
in
loop
leave
pop
sub
inc
ror
retf
ja
pop
scas
mov
mov
(bad)
pop
fist
xor
shl
add
(bad)
pop
push
(bad)
in
icebp
pop
pop
sti
pop
das
jns
adc
(bad)
cli
adc
mov
ins
in
test
push
dec
cmp
cmp
cmp
xor
fadd
adc
add
dec
retf
xor
ficomp
xlat
mov
fimul
push
(bad)
mov
int
shl
push
pop
data16
paddusb
cmp
jg
dec
and
and
sub
mov
fisttp
jnp
xchg
adc
sub
dec
jp
mov
jge
xchg
and
push
dec
cmp
sbb
jbe
movs
mov
xchg
mov
outs
fld
call
jae
push
fisttp
push
pusha
lahf
stos
pop
xor
fxsave
mov
cwde
std
or
mov
or
jnp
mov
xchg
sbb
ret
push
jo
cmp
test
jle
mov
clc
in
pop
adc
daa
xor
aaa
jne
jnp
fwait
pusha
repz
lock
or
fisttp
aaa
ja
pop
(bad)
movs
adc
dec
push
into
or
adc
mov
jl
icebp
pusha
push
dec
iret
push
sbb
pop
jno
xchg
pop
out
push
inc
test
and
sub
stc
rcl
inc
sbb
sub
adc
add
popa
ja
adc
and
dec
rcr
rcl
cmps
movs
call
(bad)
(bad)
mov
jmp
out
xchg
jg
ret
aaa
push
sub
(bad)
pop
mov
movs
jl
cmps
repz
sub
fsub
add
scas
addr16
mov
mov
xor
mov
pop
pushf
lock
add
aaa
je
jnp
xor
pushf
adc
add
add
cs
mov
sub
imul
push
xor
dec
neg
test
and
push
push
in
xchg
cmp
lods
pop
loopne
mov
xchg
scas
pop
mov
rcr
mov
inc
retf
cwde
sub
popa
cmp
sbb
and
xor
sub
mov
xor
cwde
in
push
mov
pushf
sar
inc
jle
mov
fimul
test
mov
or
cmp
ds
mov
lock
sub
mov
clc
adc
ret
add
sub
adc
fmul
mov
shl
in
add
xor
outs
outs
pop
mov
jmp
mov
out
retf
nop
ja
pop
fnsave
jnp
in
loopne
mov
mov
xchg
sub
fdivr
add
add
(bad)
clc
adc
push
and
popf
dec
mul
adc
lahf
mov
sbb
xor
pop
sbb
push
jmp
pop
bound
pop
pop
jae
aad
cwde
mov
and
call
xor
jg
and
mov
fadd
ds
popa
hlt
sbb
sub
mov
sub
sub
mov
ret
cmps
pusha
pop
cwde
jns
xchg
pop
or
repnz
ins
ret
push
inc
xchg
(bad)
in
pop
mov
xor
ja
push
mov
imul
add
jge
dec
xchg
xor
mov
aaa
std
pusha
jae
inc
cwde
mov
scas
mov
adc
inc
pextrw
xor
in
xor
js
fist
loop
in
jg
push
jo
fcmovne
push
sub
mov
push
fistp
movs
push
jo
push
sub
js
dec
out
dec
cmc
mov
mov
fdivr
mov
fldcw
adc
pop
cmp
enter
pusha
xchg
xor
xchg
push
lahf
cmp
inc
int
fld
movs
inc
inc
div
jnp
lods
jno
mov
cmp
repnz
mov
arpl
in
cli
out
scas
rcl
push
push
add
add
jle
outs
pop
cmps
(bad)
call
cli
clc
jge
dec
arpl
jp
push
add
xchg
sub
jns
push
adc
(bad)
js
in
cmp
shl
xor
cmp
push
sar
(bad)
jmp
xchg
lods
rol
(bad)
sub
jae
mov
inc
es
retf
mov
les
out
sbb
push
sti
mov
xor
stc
add
dec
ss
and
int
or
fs
cmp
push
pop
push
lods
js
aas
(bad)
mov
sub
xchg
add
dec
xchg
lea
jp
imul
xlat
jno
std
sub
sub
sub
inc
imul
sub
adc
jmp
fadd
adc
push
inc
inc
mov
mov
mov
movlps
and
lea
sbb
lds
xchg
sbb
sar
ja
add
inc
lods
fbld
jp
inc
xchg
std
fwait
popa
gs
push
call
jns
dec
push
popf
push
icebp
shl
hlt
(bad)
xchg
or
aam
mov
mov
mov
push
movs
push
inc
sti
mov
cli
sbb
cmps
lahf
call
shl
stos
xor
call
(bad)
mov
fimul
or
sub
inc
movs
push
pop
mov
dec
xchg
dec
ss
jg
push
dec
mov
or
(bad)
push
jb
dec
mov
test
scas
sub
pushf
int
mov
push
jle
out
push
add
and
mov
shr
movs
sbb
dec
jmp
mov
mov
mov
lods
movs
lahf
aad
add
std
cwde
cmp
push
outs
pop
call
cli
mov
movs
mov
cs
push
test
mov
js
jl
scas
daa
adc
repz
retf
jns
icebp
sbb
sbb
out
jno
sub
cmps
adc
enter
sbb
movs
sbb
jmp
cs
ret
mov
scas
bound
jno
enter
jbe
adc
jno
loop
inc
cmp
lahf
xor
jmp
adc
loopne
pop
push
inc
adc
xchg
mov
pusha
adc
bt
ds
xchg
pop
rcr
in
mov
dec
(bad)
repnz
or
aaa
xchg
cdq
jmp
mov
cmp
lods
leave
js
enter
mov
test
mov
mov
je
fwait
dec
mov
lea
mov
out
and
xchg
jo
cmc
movs
rol
mov
sbb
inc
jmp
les
movs
fnsave
cmps
ret
push
iret
push
push
(bad)
(bad)
jns
fisttp
xchg
cs
jmp
ret
cmps
sbb
sbb
cmp
call
popf
mov
xor
jl
int
jns
in
fcom
por
pop
cmc
mov
jg
inc
inc
pop
xchg
(bad)
or
sub
fisub
dec
movs
mov
jl
xchg
jnp
xor
mov
and
jg
dec
mov
push
adc
cmp
in
cmp
arpl
stc
mov
ds
xor
sub
or
jg
add
call
add
mov
jge
or
je
mov
dec
xchg
mov
les
shl
xchg
lahf
xor
xor
mov
cld
push
pop
inc
popf
out
mov
pop
arpl
adc
pop
imul
ffreep
ja
es
retf
je
(bad)
mov
(bad)
mov
cmp
stos
push
pop
mov
sub
add
in
xchg
xor
inc
and
sub
in
jbe
cmp
mov
out
push
push
mov
cmp
sub
mov
rol
cld
sti
(bad)
call
movs
sar
(bad)
fcomp
mov
imul
(bad)
fild
mov
push
mov
pusha
mov
xor
jp
cmps
pop
cmp
iret
sar
push
cmp
adc
push
test
leave
inc
inc
lods
repnz
stos
test
aaa
xor
inc
repnz
cmp
cdq
rcr
ds
aaa
xchg
jge
and
and
xor
lds
add
push
adc
movs
adc
popw
stos
retf
dec
add
jo
xor
lods
sub
mov
pop
std
xor
stos
sahf
pop
in
arpl
sub
repnz
cli
fnstcw
dec
sub
mov
mov
jae
ja
sbb
push
mov
adc
test
or
popa
dec
jns
xor
lds
and
sub
push
cli
scas
ss
ins
aaa
add
dec
xchg
add
(bad)
inc
fimul
cmps
pop
neg
xchg
pop
gs
pop
imul
xchg
(bad)
xchg
inc
rol
ror
pushf
stc
pop
sbb
dec
or
pop
cmc
test
ret
mov
mov
inc
dec
jno
out
inc
cdq
sub
pop
mov
jp
cmp
jmp
and
ins
stos
pop
icebp
jecxz
xchg
dec
inc
test
fwait
adc
neg
dec
or
ret
loopne
sbb
js
mov
add
in
pop
sub
cmp
movs
sub
hlt
pusha
js
push
jmp
cmp
movs
jo
and
sub
movs
(bad)
pop
lock
daa
data16
jnp
xor
lock
jmp
ror
iret
add
out
nop
mov
cwde
pushf
or
and
mov
mov
test
pop
add
xor
into
sbb
fwait
loopne
adc
mov
retf
mov
aas
add
jno
push
sub
pop
call
sahf
dec
(bad)
jle
dec
sub
adc
sub
mov
mov
pop
dec
cmps
(bad)
fisub
push
rcl
fdiv
mov
cli
loop
scas
popf
out
jo
daa
movs
sbb
pop
(bad)
mov
fs
outs
push
leave
add
aas
pop
bound
(bad)
cmp
clc
out
xor
push
mov
fwait
rcr
cmp
push
cmp
push
jecxz
jbe
pop
xchg
dec
dec
push
fisub
outs
xor
out
and
sub
fnstenv
sahf
loope
(bad)
cmps
adc
push
and
mov
jg
push
push
(bad)
(bad)
scas
xlat
adc
fdiv
ret
cmps
dec
aam
xor
(bad)
aas
add
xchg
int3
adc
and
test
(bad)
adc
xchg
push
push
sar
pusha
stc
cdq
mov
jno
push
pop
sbb
outs
or
mov
ins
inc
mov
ror
hlt
popf
repz
test
pop
fs
mov
xlat
jecxz
(bad)
inc
nop
dec
loopne
jb
add
cmp
hlt
jno
or
leave
push
sti
push
xor
mov
adc
aam
(bad)
dec
lock
and
inc
into
call
sbb
dec
mov
jns
push
pop
inc
or
shl
and
movs
mov
test
cld
out
into
pusha
pop
enter
xor
and
int
retf
imul
stc
aad
sahf
rol
rcl
cli
cs
cmp
xchg
rcl
push
nop
xchg
in
jno
mov
loopne
pushf
test
or
in
adc
cmp
test
dec
pop
call
ja
std
loopne
push
xlat
arpl
imul
adc
je
out
fsubp
inc
xor
xor
dec
rcl
fs
mov
rcl
scas
mov
test
sub
mov
into
mov
mov
je
push
stc
sub
fwait
fs
rol
inc
lock
in
popa
sti
sbb
lods
outs
out
fnsave
mov
jnp
rcl
fdiv
xchg
push
cmp
dec
mov
call
cmp
(bad)
(bad)
(bad)
cmc
rcr
mov
xor
sahf
idiv
adc
in
add
std
not
mov
jp
cmps
cmps
repz
int
cs
xchg
inc
nop
out
lahf
out
shl
mov
out
mov
mov
add
cdq
pop
dec
xor
es
jae
xor
test
imul
ret
cli
call
cmp
cld
in
xor
aad
imul
inc
adc
movs
xchg
icebp
out
enter
fstp
loop
xchg
hlt
dec
mov
mov
sti
test
inc
(bad)
and
adc
and
dec
retf
sbb
rcr
es
mov
dec
cmc
jecxz
mov
frstor
jp
scas
out
xor
mov
push
mov
pop
mov
ret
xlat
xchg
cs
test
rcr
ror
pop
gs
out
xor
mov
lock
fwait
sti
(bad)
fidiv
mov
nop
inc
push
rol
xchg
(bad)
mul
cld
sub
stc
mov
mov
imul
inc
bound
aam
stos
loopne
cmp
dec
je
pop
sbb
aad
sahf
leave
push
add
mov
jbe
add
cmps
ins
loope
(bad)
scas
clc
dec
test
mov
ror
popa
xchg
fimul
or
lock
stos
test
aad
and
popf
sbb
dec
and
daa
(bad)
(bad)
fist
sub
fld1
call
loop
ss
inc
dec
stos
shr
xchg
jne
xchg
loope
mov
retf
outs
lahf
mov
iret
xchg
sub
lea
lock
int3
add
pop
jmp
inc
mov
(bad)
fistp
imul
mov
jge
xchg
mov
push
je
sub
js
lfs
xchg
hlt
popf
repnz
jbe
push
fcom
xchg
jmp
aad
and
or
lahf
fs
sbb
ins
add
push
(bad)
daa
xchg
push
(bad)
mov
(bad)
stc
add
and
out
fwait
mov
icebp
not
aam
punpcklwd
fldcw
js
xchg
das
aaa
(bad)
int3
ds
pop
sbb
pop
or
imul
ss
daa
(bad)
mov
movs
ror
mov
jle
imul
mov
mov
dec
aaa
xlat
clc
cmp
aam
xchg
loop
jmp
dec
test
mov
je
pop
sar
cmps
cld
jns
cs
fsub
ret
into
push
push
sbb
push
sub
lahf
les
aaa
icebp
xchg
xchg
sub
mov
mov
adc
dec
push
fmul
jnp
xchg
push
add
add
mov
pushf
movs
aam
sbb
adc
jnp
add
stos
enter
add
jmp
test
cmp
jge
inc
jge
cmps
sub
add
xchg
jecxz
push
and
pop
pusha
fld
push
or
jbe
mov
pop
shl
cli
retf
adc
(bad)
fcmovbe
add
(bad)
lahf
pop
dec
sub
jne
shl
mov
sub
or
mov
mov
adc
fist
xor
neg
push
out
and
mov
xchg
neg
stc
dec
mov
pop
push
push
nop
push
pop
rcr
outs
mov
(bad)
xchg
inc
or
movs
repnz
daa
leave
inc
lahf
add
loope
add
push
fiadd
retf
aas
push
into
xchg
pop
mov
xor
jae
cli
int
pop
test
push
cdq
imul
mov
mov
jl
imul
cmp
push
or
cmps
adc
stos
add
push
pop
add
mov
int
ds
enter
xabort
mov
aas
and
movs
adc
bound
add
imul
xor
ds
xchg
retf
cs
sub
sub
and
call
mov
mov
jne
dec
call
xchg
push
movups
cs
in
jns
xor
repz
aas
enter
mov
ret
mov
and
and
xor
dec
add
push
or
in
and
pop
add
loop
mov
es
mov
or
inc
adc
data16
push
xchg
or
dec
push
and
movs
daa
xlat
int
pop
jle
(bad)
mov
mov
sbb
pop
jle
jp
lea
mov
psrlw
and
jecxz
in
imul
hlt
add
xchg
xor
or
push
aam
sub
dec
jae
out
jecxz
bound
outs
jbe
add
push
push
rcl
sub
push
push
ror
inc
(bad)
ins
pushf
lahf
adc
fistp
icebp
test
xchg
push
cld
mov
mov
mov
or
sub
pop
dec
cmp
cmp
pop
or
js
push
xor
and
sbb
xor
push
or
and
sbb
adc
cmp
aaa
pop
or
in
fs
stc
push
mov
into
in
int3
adc
gs
(bad)
jb
mov
jmp
cmp
dec
and
rep
fucomip
icebp
mov
cmp
push
sub
inc
mov
fild
es
pop
jecxz
sbb
cmp
out
movs
and
inc
sti
lock
cs
(bad)
pop
dec
rcr
sub
ss
mov
push
pop
popa
adc
pop
int3
aaa
ret
cmp
daa
jns
dec
in
sahf
call
fnstsw
adc
iret
cmp
int
js
inc
jae
mov
btr
(bad)
frstor
or
xor
mov
push
addr16
add
test
popf
push
xor
pop
mov
fnstcw
xchg
std
push
lods
retf
or
sti
jo
xor
imul
cmps
inc
(bad)
test
mov
inc
mov
clc
hlt
jbe
xchg
mov
jo
sub
outs
add
out
iret
push
push
xor
sbb
pushf
addr16
outs
dec
aad
push
mov
cmps
jbe
mov
enter
or
adc
ficom
imul
pusha
mov
jns
(bad)
cwde
push
call
push
retf
out
cmp
lods
sub
mov
pusha
push
cmp
cmp
movs
mov
sub
push
mov
mov
test
in
inc
push
out
adc
mov
ficomp
xchg
pop
and
in
xlat
shl
xchg
inc
in
inc
(bad)
push
loop
out
xor
hlt
push
dec
fwait
sub
add
sub
mov
sbb
inc
out
arpl
cmc
mov
ins
push
sahf
lods
loop
test
or
fs
fsub
mov
loope
pop
sub
loope
das
mov
aam
pop
(bad)
mov
div
sub
jmp
pop
and
or
and
aam
inc
popf
shl
add
sbb
rcl
xlat
push
push
js
cmp
sub
dec
cmp
imul
scas
gs
sub
mov
dec
imul
icebp
jmp
jmp
cmp
call
call
retf
and
adc
add
iret
js
loope
fdivp
fistp
or
fs
sti
sub
push
fld
(bad)
dec
adc
inc
pusha
data16
cmps
mov
push
inc
push
ins
stc
inc
(bad)
shr
mov
or
cdq
or
mov
pop
vmaxps
push
xchg
es
and
(bad)
push
cmp
adc
adc
mov
sub
xlat
nop
cmp
fld
es
cmp
retf
add
(bad)
pop
adc
fidiv
jl
je
call
sti
lods
sbb
pop
xor
mov
and
inc
popa
fwait
inc
add
xor
mov
ds
dec
inc
jle
jne
das
mov
fdiv
dec
mov
loopne
loop
pop
jg
out
(bad)
add
test
movs
aad
xor
(bad)
imul
ins
pop
in
(bad)
jno
mov
inc
xor
adc
out
scas
mov
jmp
push
popf
sar
sbb
shl
adc
sub
pop
jo
rcl
sub
jmp
loopne
out
shr
pusha
mov
mov
and
jbe
sbb
mov
enter
mov
cmp
ins
push
inc
int3
push
or
fcomp
xor
outs
test
fisubr
sbb
ins
popf
inc
movs
sub
mov
ret
scas
(bad)
push
and
lds
push
xchg
popf
(bad)
sbb
xor
xor
aas
add
add
mov
push
shr
and
cs
cld
test
arpl
cmp
cmp
jbe
out
fs
and
sub
push
test
sub
in
or
cs
cld
pushw
and
fidivr
in
push
std
fsub
lods
push
pusha
mov
in
pop
xor
sbb
mov
add
sti
call
fiadd
in
jp
lock
(bad)
jl
call
mov
add
frstor
mov
jmp
pop
jmp
addr16
ret
ja
loopne
inc
aam
jnp
mov
outs
les
sub
sar
popf
in
inc
cmps
mov
dec
push
mov
aad
mov
push
mov
bound
mov
(bad)
aas
jmp
movs
push
pop
mov
xor
fadd
mov
or
bound
inc
adc
pop
fstp
xor
sbb
mov
xchg
pop
cli
fcom
lds
sub
lods
cmp
dec
sbb
js
jle
jmp
jns
mov
push
cmp
xchg
sbb
fdivr
dec
hlt
add
cdq
loope
jae
xchg
xchg
iret
pop
push
pusha
icebp
call
dec
dec
or
inc
mov
int
inc
sbb
not
dec
inc
cli
not
jp
add
cs
movs
pop
leave
sti
aam
test
cld
cmp
cmps
pusha
mov
ficomp
add
adc
push
pop
test
mov
mov
clc
out
xchg
and
inc
(bad)
fld
mov
cdq
dec
ror
mov
pusha
call
in
repnz
and
jecxz
add
les
jmp
aad
and
cmps
ss
xchg
stc
dec
pop
dec
mov
mov
push
fcom
scas
add
mov
out
ret
daa
and
pop
adc
lock
mov
out
(bad)
adc
mov
lds
popf
add
push
sub
daa
push
adc
mov
xchg
inc
test
out
mov
fmulp
dec
sbb
jl
ins
clc
sbb
jne
add
mov
add
adc
out
mov
mov
into
pop
cli
test
cmp
leave
xor
outs
popf
mov
xor
push
ja
mov
mov
sbb
push
stos
out
and
movs
jo
jp
aam
dec
icebp
lds
xchg
xchg
bnd
lods
dec
imul
push
outs
sti
mov
retf
in
mov
jno
pop
push
add
inc
add
push
push
mov
out
cs
push
(bad)
jae
mov
daa
mov
lods
lods
dec
cmp
add
clc
mov
jmp
mov
shl
outs
sbb
ret
adc
lods
icebp
jp
xor
sbb
pop
jge
jmp
or
popa
daa
add
fs
retf
shr
add
test
ret
xchg
add
out
pop
sub
jnp
adc
(bad)
aaa
xor
pop
sbb
je
add
adc
mov
xchg
dec
cmc
ja
xchg
(bad)
fisub
pop
push
sub
mov
pop
adc
jle
pop
inc
push
stos
scas
dec
xchg
sub
push
cmp
cmp
cmp
pop
retf
pop
inc
add
pop
(bad)
dec
xchg
add
pop
enter
xchg
ret
or
xchg
loopne
mov
mov
jl
xor
xor
ficom
fcomip
sti
retf
xor
int3
mov
or
or
pop
mov
imul
stc
mov
daa
scas
idiv
mov
and
pop
sub
inc
dec
jne
cmps
retf
adc
iret
mov
cs
and
outs
daa
clc
pop
cwde
or
push
push
sub
jo
sbb
ret
scas
scas
out
dec
push
cs
and
xchg
(bad)
jecxz
mov
popf
push
mov
mov
mov
inc
xor
or
xchg
mov
dec
aam
lods
add
call
push
sbb
cmp
pop
mov
rcr
ror
mov
jg
fdivr
pop
movs
mov
mov
loope
(bad)
pop
into
inc
pop
mov
jns
xor
scas
and
lea
les
inc
inc
sub
aam
pop
sbb
push
add
outs
movs
loop
das
and
popa
cs
shr
(bad)
mov
add
mov
dec
push
xchg
push
aam
bnd
je
ins
inc
adc
mov
or
ret
popf
popa
jg
jmp
out
inc
loope
mov
jnp
out
dec
and
xor
xchg
sbb
lds
mov
ficom
inc
dec
lods
test
fdiv
adc
push
ror
(bad)
outs
cmps
jne
test
inc
push
mov
int3
jp
push
shl
repnz
xchg
in
push
mov
and
jge
sar
dec
and
pop
ret
retf
out
xor
iret
enter
test
dec
push
mov
retf
add
adc
retf
(bad)
or
adc
adc
push
(bad)
lds
aam
push
add
ret
or
inc
sbb
mov
ins
call
sub
add
pop
dec
je
pop
xor
inc
push
xchg
cld
cmp
rol
push
mov
rcl
mov
lea
out
imul
js
mov
aaa
rcr
and
dec
(bad)
daa
mov
movs
push
or
dec
xchg
jp
mov
ret
push
pop
cld
push
stc
aad
frstor
mov
ror
cmp
push
es
lds
int3
cmp
jmp
imul
push
sar
and
fucomp
outs
popf
pop
add
mov
pop
push
ror
mov
in
mov
outs
jb
mov
push
sub
dec
xchg
cmc
ficom
cs
sub
(bad)
fs
(bad)
pop
push
aas
and
popa
(bad)
add
inc
out
jmp
in
pop
call
mov
sub
(bad)
mov
pop
push
in
(bad)
jmp
std
icebp
lods
gs
ds
rcr
retf
push
or
pop
outs
ror
cmp
dec
xor
cwde
push
aas
mov
jle
pop
dec
adc
(bad)
fld
repnz
addr16
in
outs
cwde
jbe
fild
mov
pushf
(bad)
xor
sti
xchg
cmp
push
int3
cli
xchg
ja
cmp
(bad)
pop
call
out
xchg
das
fwait
call
ss
(bad)
aas
das
(bad)
in
mov
lods
sub
pop
bound
in
or
inc
scas
mov
mov
ss
mov
xchg
je
pop
jb
test
and
pop
and
add
fbstp
stc
sub
les
jecxz
push
clc
dec
imul
sub
push
stos
mov
mov
nop
dec
pop
fcomi
mov
repnz
push
inc
xor
jl
mov
test
push
jno
push
int3
ja
mov
and
sub
push
push
sub
sbb
in
jno
xchg
(bad)
adc
mov
add
jne
push
pop
ins
pusha
pop
scas
pop
nop
sub
popa
std
push
(bad)
sub
clc
aaa
ins
leave
sub
xchg
pminsw
dec
mov
loopne
lods
mov
mov
and
jp
shl
mov
xchg
das
and
fdivr
jbe
cmp
in
outs
call
xchg
lds
retf
push
xor
loopne
sbb
mov
scas
xchg
cmp
sub
ret
scas
(bad)
push
lods
dec
dec
out
add
movs
jge
les
push
(bad)
dec
cs
scas
push
mov
arpl
pop
xchg
cmp
dec
adc
pop
xchg
cmp
mov
je
shl
sub
or
or
icebp
or
mov
ret
jge
jl
stos
cmps
jle
in
pminub
cld
mov
out
sub
nop
movs
mov
and
(bad)
mov
pop
push
mov
pop
dec
cmc
dec
jp
and
or
or
stos
mov
ins
outs
ret
jl
jmp
movs
mov
js
loopne
scas
aam
mov
jns
push
inc
mov
sub
mov
or
push
pop
mov
add
sbb
ret
mov
push
mov
xor
les
mov
iret
or
je
call
xor
rol
inc
in
fimul
pop
pushf
xor
xchg
mov
pop
adc
sti
dec
jns
push
mov
inc
loope
bound
pop
cmp
xchg
jbe
cmp
mov
and
outs
or
or
xor
mov
cmp
sbb
dec
ret
mov
or
ss
sub
(bad)
mov
iret
data16
mov
pop
mov
or
jns
xchg
cmp
lds
fcomp
inc
aaa
adc
jmp
mov
pop
sub
imul
sar
pushf
pop
(bad)
and
mov
jle
jle
or
retf
push
jecxz
fs
sahf
mov
push
dec
push
or
in
enter
in
jmp
sar
cmp
pop
mov
pop
and
or
sub
iret
pop
cmp
pop
mov
mov
and
fisttp
rol
mov
mov
pop
shl
mov
mov
add
sti
xor
inc
lds
lods
and
mov
mov
pop
sub
rcl
and
dec
ror
ds
pop
imul
(bad)
cmp
or
jg
mov
dec
push
aas
and
nop
ja
push
sub
call
xlat
mov
cs
ds
xchg
dec
jnp
pushf
sub
addr16
lahf
mov
inc
pop
dec
xchg
mov
bound
inc
sub
add
cmps
inc
(bad)
cmp
addr16
pop
jge
out
adc
mov
enter
adc
and
shl
mov
mov
dec
mov
xor
jb
repnz
scas
jnp
pop
or
scas
sub
sub
mov
pop
(bad)
xchg
(bad)
fist
push
fstp
outs
inc
xlat
mov
push
mov
sbb
cmp
lock
dec
mov
xchg
fbstp
scas
xor
das
dec
sub
nop
xchg
jg
(bad)
and
ror
pop
fstp
rcr
push
xchg
push
jnp
hlt
leave
fstp
cli
sar
adc
neg
fldcw
dec
and
jnp
shl
and
rol
sti
cli
xchg
int3
out
hlt
mov
mov
dec
and
xchg
(bad)
sti
push
sub
adc
adc
inc
in
fdiv
jl
inc
fldcw
sbb
jne
stos
daa
jbe
push
pop
in
cld
mov
pop
lock
imul
xchg
cmps
movs
imul
test
fidiv
test
jmp
mov
adc
jne
or
sub
retf
out
aas
xor
mov
js
test
sbb
loopne
sub
ret
adc
push
aaa
test
dec
cmp
mov
fidiv
in
mov
mov
push
test
mov
jmp
(bad)
mov
jp
xchg
or
in
fst
cmps
sbb
pop
xlat
jmp
jnp
push
sti
mov
inc
ins
pop
fs
jecxz
fsub
sub
push
not
mov
icebp
sub
and
cwde
cmp
inc
outs
xchg
sub
shr
hlt
hlt
fistp
sub
sti
mov
dec
sub
dec
push
shl
xchg
loope
push
pop
movs
mov
inc
sbb
jmp
inc
loopne
sub
out
or
lds
aad
add
cmp
mov
push
ins
scas
xchg
add
or
fiadd
inc
call
dec
inc
enter
rcr
repnz
fcmovnu
and
nop
test
stos
(bad)
dec
setg
lods
xchg
jecxz
mov
(bad)
add
arpl
push
jae
mov
fwait
push
and
ror
pop
inc
lahf
movs
ret
dec
retf
or
add
outs
push
test
inc
dec
pop
dec
or
push
int3
mov
cmp
mov
pushf
fsub
xor
fmul
or
xchg
stc
arpl
dec
retf
sbb
mov
and
xchg
jg
mov
or
jmp
xor
adc
sti
push
cmp
scas
movs
or
sub
inc
cmp
inc
dec
push
push
fs
ror
sar
test
jno
in
dec
stos
and
mov
mov
cmp
outs
ds
fimul
dec
cmps
mov
push
sub
inc
loopne
or
shr
xor
repz
mov
sahf
out
mov
imul
dec
not
inc
xor
ror
repz
(bad)
xor
(bad)
loope
mov
cwde
push
out
rcr
cmp
cli
das
outs
mov
sbb
xchg
dec
jbe
mov
cdq
pop
into
xchg
and
xlat
add
xor
inc
popa
das
test
add
(bad)
(bad)
cmc
xor
je
adc
leave
fs
shl
or
gs
inc
mov
cdq
add
push
mov
add
inc
rol
out
fcomip
std
(bad)
std
fdiv
rol
jo
jp
xchg
sti
outs
push
icebp
xchg
jne
and
ffreep
or
mov
repz
mov
push
mov
jns
in
test
cli
fst
stos
mov
enter
xor
jge
push
lods
xchg
out
mov
xor
or
lahf
adc
xchg
cwde
call
mul
mov
jb
stos
or
mov
loopne
mov
fs
clc
nop
lock
mov
(bad)
loopne
cdq
test
mov
mov
jl
pop
fwait
(bad)
ds
cmp
scas
sahf
cmps
stos
push
test
xor
sbb
call
test
ss
stos
test
pop
shl
push
ds
call
push
shl
cmp
xor
imul
sbb
cmp
stos
repnz
add
inc
ins
and
outs
idiv
cmp
mov
mov
daa
and
(bad)
clc
xchg
cmp
dec
add
es
aam
xchg
cmc
fwait
daa
hlt
loopne
test
and
dec
push
popa
pop
adc
pop
adc
mov
(bad)
or
cdq
sub
imul
jo
scas
mov
jp
and
pop
adc
mov
sbb
inc
pop
sbb
or
std
xor
push
je
arpl
xchg
scas
push
outs
mov
sub
retf
inc
scas
inc
movs
fwait
call
int
xchg
mov
das
lods
icebp
inc
push
push
or
ficom
inc
mov
and
fsubr
loop
aam
test
push
xlat
lods
lds
int
fwait
jne
std
lods
pop
sbb
push
es
xor
sbb
(bad)
dec
call
pushf
add
pop
xor
inc
rcr
fdiv
jb
add
sbb
xchg
lods
dec
enter
in
xchg
sub
sbb
dec
sbb
jle
cmps
sbb
mov
push
pop
in
add
clc
mov
push
jo
or
mov
lahf
fcomip
dec
adc
xor
das
xchg
leave
leave
sbb
lods
in
in
loope
xor
sub
sub
dec
xchg
cmp
test
jae
ins
jge
inc
loopne
outs
mov
add
xchg
mov
call
shl
adc
mov
(bad)
aas
sub
jecxz
in
adc
pop
dec
mov
add
stc
adc
push
outs
pusha
pushf
dec
pop
xchg
jae
int3
pop
sbb
out
mul
sbb
mov
mov
(bad)
xchg
idiv
sbb
jmp
pop
sar
cmc
and
lods
sub
cmp
repnz
sbb
outs
adc
(bad)
mov
push
mov
sbb
pop
dec
je
cmp
sbb
xor
jb
(bad)
xchg
lea
sbb
inc
xchg
mov
or
je
mov
stos
mov
dec
inc
jmp
ret
mov
cld
push
daa
je
int
inc
mov
test
pop
mov
add
imul
scas
adc
cmps
fidivr
leave
pop
pop
iret
shl
xchg
lods
daa
adc
fdiv
xor
cmp
xchg
repnz
pusha
adc
mov
pop
mov
fwait
ds
pop
mov
std
shl
mov
inc
xlat
and
add
popf
ficom
mov
or
data16
xor
(bad)
xor
(bad)
mov
jg
dec
loopne
mov
push
stos
sbb
jecxz
inc
xchg
out
jnp
call
sub
inc
aad
ret
rcl
push
retf
cmp
inc
sbb
add
inc
pop
ret
ins
cli
adc
iret
xor
mov
add
(bad)
popa
rol
fwait
mov
pop
adc
push
out
cwde
out
hlt
(bad)
adc
mov
shl
dec
xchg
leave
adc
xchg
(bad)
push
cmp
loopne
test
xchg
(bad)
fs
push
fwait
ins
inc
enter
mov
jne
cmp
ret
sub
ds
ja
jle
cdq
retf
sbb
je
fld
js
(bad)
mov
cmps
jae
adc
les
xchg
jecxz
inc
jmp
and
je
into
out
cmp
jb
xor
xor
(bad)
mov
(bad)
je
stc
jecxz
cdq
pop
add
jle
call
sbb
cmp
mov
sahf
bound
xchg
xchg
cdq
and
jbe
pop
adc
add
rcl
sbb
cli
cmp
retf
xor
push
xchg
cli
xchg
adc
mov
inc
sbb
mov
cmp
and
pop
adc
fwait
std
rol
lods
dec
fwait
add
ja
pop
cs
dec
and
icebp
fsubr
dec
lds
dec
mul
pushf
in
cmp
mov
stos
(bad)
ficomp
cmps
xor
pop
push
test
or
sti
lock
or
je
frstor
mov
sahf
push
call
sar
push
add
sub
in
aad
xor
sub
cs
jbe
(bad)
int3
mov
jne
rol
call
cmp
jb
pop
fst
loopne
or
shl
shl
lods
popf
add
mov
std
imul
sbb
test
jb
enter
call
in
test
and
sbb
pop
lods
outs
jo
adc
cmp
(bad)
repnz
aam
das
add
or
or
arpl
jecxz
cmp
daa
shl
pushf
test
sbb
dec
dec
int
movs
out
jns
mov
or
push
push
mov
jo
mov
sub
stos
pop
stc
imul
cmps
aam
es
call
xchg
xchg
mov
ror
push
gs
clc
(bad)
fbstp
in
sub
or
mov
jbe
sub
out
push
push
push
mov
aas
out
cld
out
stos
int
rol
mov
jge
push
mov
pop
ficom
pop
fsubr
inc
sub
jl
dec
or
(bad)
mov
test
sub
mov
dec
xchg
jg
sbb
mov
inc
test
test
rcl
nop
in
xor
push
fmul
loope
fs
mov
inc
cwde
dec
iret
test
adc
ins
dec
lock
add
pop
cld
fadd
xchg
add
in
cmp
sti
jl
int3
aad
scas
popf
test
aas
jae
pop
fiadd
jnp
xor
xchg
jmp
pop
iret
fsub
dec
and
jle
cmp
push
stc
push
cmps
cmp
ins
fs
pop
or
cmps
in
(bad)
or
sub
jmp
mov
push
fs
call
sub
add
sbb
add
mov
movs
pop
stc
mov
mov
dec
inc
inc
fmul
sar
push
nop
sub
jmp
imul
mov
sbb
xor
add
dec
retf
call
jmp
shl
inc
mov
mov
cld
adc
inc
push
jne
bound
jp
aas
pushf
and
xor
sbb
jge
cmp
inc
lods
inc
inc
push
aaa
mov
mov
scas
or
loopne
dec
dec
dec
jl
clc
fmul
mov
mov
sbb
jb
xor
popa
inc
push
shl
adc
cmp
or
add
retf
je
hlt
call
push
retf
(bad)
adc
cmps
mov
mov
(bad)
dec
clc
ja
push
outs
mov
clc
call
dec
sub
pop
jnp
es
push
mov
je
jae
xor
and
stos
add
mov
and
xor
sar
jbe
(bad)
jne
cmp
adc
pop
mov
add
jle
xor
clc
fisttp
mov
add
push
out
xor
(bad)
mov
xor
test
out
push
inc
jle
jno
stc
adc
and
jge
ins
jae
inc
cld
mov
xor
jmp
mov
data16
ss
sbb
mov
xchg
mov
jo
retf
sbb
mov
add
and
xor
mov
pop
push
adc
or
sbb
cli
mov
js
rol
adc
adc
jge
(bad)
ss
push
xor
and
or
mov
shl
and
sti
pop
or
adc
or
xchg
sbb
jmp
inc
xor
(bad)
mov
push
push
jno
xchg
into
lds
pop
sbb
push
jle
dec
mov
cmp
mul
sbb
mov
dec
sbb
push
les
int3
dec
(bad)
or
xor
cmps
xchg
add
pop
add
and
jge
into
loopne
scas
idiv
sub
idiv
push
xor
mov
pop
repnz
pop
mov
or
arpl
mov
pop
popa
bound
arpl
add
mov
mov
xchg
fst
test
ret
jmp
sub
jmp
fimul
xor
ror
jno
jo
sti
cmp
mov
(bad)
xchg
cmp
repnz
jmp
(bad)
xchg
mov
bound
mov
outs
push
dec
jp
es
or
cdq
ins
adc
cmps
lods
sub
neg
inc
ja
arpl
loop
sub
daa
add
or
pushf
xor
popa
dec
not
xchg
jecxz
sbb
out
loope
test
add
dec
mov
fwait
sbb
mov
div
adc
mov
and
icebp
stos
pop
jns
push
sub
mov
cmp
sub
sub
icebp
xor
inc
sbb
stos
or
aad
retf
scas
not
lea
and
pop
fstp
mov
pop
inc
xor
cmp
jne
fcmovnbe
mov
pop
xor
jnp
shl
jns
lds
adc
inc
xor
adc
lock
inc
cmps
push
fcmovnb
lahf
xlat
pop
neg
ficomp
mov
push
or
mov
and
test
add
jo
aad
sub
int3
dec
cmps
data16
lds
popa
out
mov
add
call
mov
sbb
retf
sbb
es
push
loope
out
mov
out
push
xchg
xchg
add
aaa
sbb
fadd
inc
test
mov
fistp
outs
cmp
mov
inc
mov
adc
sti
jl
mov
jmp
mov
repnz
in
cmps
and
and
add
xlat
fs
ret
push
push
cld
in
pushf
rcl
pop
repnz
rol
or
cmps
bnd
dec
inc
xchg
jecxz
add
inc
or
sub
add
mov
clc
retf
movs
and
clc
lds
jb
ss
jno
js
jmp
pop
push
jge
xor
sahf
dec
ja
fcomp
loopne
adc
inc
retf
into
xor
dec
hlt
dec
dec
lods
cs
mov
add
shl
cdq
mov
add
xlat
xchg
ficomp
mov
sbb
pushf
add
push
movs
mov
add
cwde
push
fwait
mov
cmp
push
sti
test
js
pop
adc
sar
push
les
les
pusha
jnp
jl
xchg
popf
cmp
adc
ins
mov
movs
jbe
cmp
mov
jle
(bad)
popf
fs
or
movq
in
outs
xchg
mov
mov
jns
fdivr
xchg
or
sbb
(bad)
in
jmp
pop
push
dec
xor
jmp
or
mov
int
mov
sbb
inc
jns
test
cmp
and
inc
sbb
repz
xlat
je
(bad)
das
jecxz
aad
outs
xchg
je
shr
arpl
push
dec
retf
adc
repz
sbb
pop
mov
aad
jmp
sar
dec
adc
ror
or
icebp
imul
shl
aad
cmp
into
imul
test
add
adc
inc
fadd
fsub
sub
or
shrd
dec
pop
xchg
add
test
cmps
in
pop
jno
mov
push
pop
and
sub
inc
out
imul
push
sbb
js
fnstenv
and
cmp
push
mov
les
jae
and
fdiv
mov
or
cmp
and
in
xor
inc
inc
inc
xor
ja
cli
jecxz
push
push
hlt
mov
and
div
sub
fst
pop
mov
xor
push
pop
fdiv
push
nop
adc
out
jo
mov
pop
mov
mov
iret
into
and
out
pop
push
inc
neg
psubd
mov
movs
adc
in
pop
jo
sub
aam
add
mov
pusha
movs
dec
mov
lea
dec
cli
xchg
test
sbb
stos
js
rcl
mov
jecxz
cmps
push
(bad)
scas
adc
cld
loopne
stc
aam
jp
(bad)
into
retf
sti
mov
xchg
xor
mov
arpl
stc
(bad)
mov
in
int3
clc
xor
repz
test
pop
hlt
mov
or
jg
loop
jmp
push
ret
and
dec
(bad)
aam
(bad)
call
call
push
aam
(bad)
mov
inc
push
adc
lds
inc
ret
aam
scas
jp
scas
mov
call
popa
dec
cmps
ss
stos
cmp
or
pop
icebp
mov
enter
cmp
ficomp
mov
iret
push
mov
call
js
fiadd
pop
lods
and
aad
add
mov
mov
out
in
inc
leave
and
mov
gs
(bad)
mov
push
xlat
add
jbe
arpl
push
aas
(bad)
(bad)
scas
push
lahf
dec
and
fst
vmovupd
dec
mov
xor
or
dec
jl
mov
jno
leave
inc
(bad)
popf
xchg
dec
and
fs
xchg
xchg
xchg
imul
es
jo
inc
iret
and
mov
aaa
cmp
stos
xchg
shl
sub
cmp
xor
retf
pop
arpl
das
push
(bad)
idiv
rcr
xor
(bad)
cmc
lds
fldcw
enter
dec
mov
out
cmp
mov
dec
inc
pop
pop
out
sub
jle
ror
pop
cmp
push
push
call
out
int3
pop
mov
push
dec
movs
pop
call
pop
pop
cwde
ror
clc
add
test
ins
xchg
cli
sub
cmps
addr16
add
ret
xor
xor
xchg
test
fist
not
cvtpi2ps
or
dec
aas
fwait
in
push
sbb
outs
out
jne
data16
cwde
dec
cmp
sbb
pop
adc
imul
mov
adc
add
mov
cmp
mov
lea
or
popf
ds
or
or
ins
inc
adc
xchg
cmps
dec
loop
or
das
push
lahf
ins
movs
add
test
(bad)
mov
shr
xchg
mov
hlt
xchg
test
jnp
mov
adc
sbb
lods
les
inc
or
movs
and
push
mov
or
adc
(bad)
movs
js
repnz
mov
ret
ret
pop
add
retf
int3
ret
xchg
adc
fistp
cmps
and
inc
ja
jb
jne
mov
sbb
leave
pop
adc
cmps
and
xchg
popa
mov
inc
and
add
sub
ror
inc
xchg
je
or
or
fnsave
stc
pop
fmul
bnd
ins
fdivp
cmp
dec
cmp
pop
(bad)
stc
mov
fs
xor
dec
push
test
pop
inc
loopne
mov
pop
outs
imul
xchg
out
xor
inc
mov
test
mov
scas
push
fisubr
mov
fbld
push
aaa
aaa
rcr
dec
out
mov
iret
sub
lds
pop
and
test
rol
aaa
es
dec
dec
sbb
mov
add
xor
dec
mov
jnp
call
sub
out
xor
jmp
dec
sub
xchg
test
gs
mov
nop
mov
jmp
mov
stc
aam
test
out
mov
xchg
or
ret
xchg
out
call
cwde
mov
ins
ins
add
adc
push
lahf
or
pop
or
push
loopne
inc
mov
cmp
push
pop
fnstcw
popf
mov
dec
ja
inc
mov
push
out
cmp
dec
aad
and
mov
loopne
xor
in
or
sub
in
frstor
push
out
mov
(bad)
fs
sub
add
in
outs
test
(bad)
fidiv
dec
push
add
es
xor
adc
ins
adc
xchg
scas
ins
ins
dec
pop
aaa
pop
out
ss
xchg
and
cmp
cld
ss
mov
inc
cs
stc
push
jbe
jmp
call
sar
imul
cwde
jnp
xor
sub
adc
pop
jecxz
test
cmps
pop
xor
mov
fmul
add
std
and
cmp
out
inc
loope
adc
aam
repnz
xor
int3
movups
jb
dec
lock
or
dec
sub
push
dec
or
bound
movs
test
test
add
jmp
retf
push
push
xor
ret
lods
push
cdq
cld
add
pop
xor
les
pop
int3
xchg
mov
mul
jmp
rcr
pop
mov
add
test
std
lds
mov
ret
mov
out
repnz
push
ins
stos
push
mov
xlat
cmc
jecxz
stos
mov
cwde
jmp
stc
inc
xor
mov
ins
sub
icebp
outs
out
shr
pushf
dec
daa
fwait
sbb
mov
call
mov
push
fs
jge
stos
mov
stc
sub
ja
ret
or
dec
daa
push
cmps
push
cmp
xor
or
ss
dec
cdq
es
lods
and
jg
push
push
shr
add
and
dec
cmp
dec
mov
leave
sub
jne
stos
ins
enter
loop
enter
jo
je
lock
dec
shl
pop
je
adc
xor
ss
call
jg
pop
pop
or
adc
or
push
push
std
cwde
stos
out
adc
add
push
popf
bt
lahf
dec
test
adc
and
mov
inc
cmps
pop
pop
icebp
imul
mov
stos
xchg
rcr
mov
(bad)
dec
mov
inc
call
sub
jmp
pop
mov
rcl
out
ror
jl
pop
sub
jmp
cli
sub
scas
mov
push
jl
dec
leave
ret
ins
mov
or
nop
dec
xchg
js
cmps
sub
cmp
mov
stos
jae
mov
dec
inc
popf
sub
jp
jbe
cdq
cmps
test
daa
push
nop
loop
inc
pop
addr16
jns
mov
test
(bad)
rcl
popf
leave
jo
pop
or
ss
jae
sti
aad
adc
xor
and
loopne
pop
jp
sbb
or
jae
lods
rcr
cmp
or
pop
retf
dec
(bad)
aaa
test
lock
mov
cmc
imul
jecxz
mov
inc
aad
dec
js
repz
lock
push
cmp
mov
pop
push
sbb
enter
mov
inc
mov
dec
mov
pop
pop
scas
cmp
cmp
add
mov
jne
scas
adc
or
out
fs
mov
and
sbb
mov
shl
cmp
retf
add
je
retf
sub
mov
lods
jae
icebp
outs
sbb
gs
aad
jmp
xchg
cdq
adc
lds
(bad)
inc
inc
sub
mov
push
xchg
jmp
mov
dec
pop
ret
adc
push
nop
or
(bad)
(bad)
loop
cmc
push
adc
jb
hlt
mov
adc
loopne
push
mov
adc
cli
and
and
pop
mov
pop
fst
sbb
mov
push
unpcklps
inc
out
mul
push
fadd
jge
and
pusha
loope
sbb
test
popf
mov
xor
jbe
aas
sub
and
push
dec
push
ins
inc
pop
push
push
jb
enter
dec
int3
das
pop
popa
sbb
jbe
mov
xchg
aas
aad
dec
or
adc
fcmovb
cdq
adc
movs
push
inc
(bad)
div
hlt
daa
dec
push
adc
jp
push
mov
cmp
imul
mov
push
cmp
mov
daa
xchg
jmp
mov
sub
fbld
or
(bad)
sbb
mov
shl
pop
xchg
es
pop
in
test
pop
aam
mov
out
aam
dec
xor
lock
rol
cmc
mov
jle
push
pop
call
xchg
fst
dec
jne
jecxz
into
pop
imul
stos
cmc
hlt
pushf
adc
fcmovnu
mov
imul
push
push
and
inc
je
cmp
inc
jne
pop
and
mov
(bad)
cmp
xor
fsubr
ror
mov
ss
adc
ret
sbb
call
into
ss
jg
inc
repnz
adc
cmp
pop
xchg
add
ror
scas
dec
push
add
aas
cdq
cld
push
push
mov
bswap
pop
mov
out
test
movs
pop
add
xchg
adc
test
cmps
mov
adc
xor
add
sbb
or
or
adc
lea
jbe
stos
xchg
jnp
and
mov
push
mov
and
aas
dec
repnz
ror
jnp
popa
(bad)
pop
jo
sbb
or
mov
pop
add
mov
sub
stos
pop
iret
push
shl
ror
mov
adc
mov
ret
mov
mov
inc
jb
mov
jmp
inc
test
xor
dec
lods
xchg
jae
xchg
sub
(bad)
stc
mov
add
ja
loope
inc
shl
cmp
mov
xor
xor
icebp
mov
inc
stos
(bad)
iret
es
imul
adc
fidivr
loope
hlt
cmp
cmps
pop
xchg
lahf
push
mov
jecxz
call
gs
push
add
mov
inc
cwde
and
dec
ror
test
mov
aaa
movs
jle
fisubr
add
pusha
out
loop
and
(bad)
dec
xchg
je
jge
xor
push
mov
pop
pop
aas
data16
cmps
jmp
mov
shl
push
popa
gs
or
test
setb
add
aam
ret
cmps
mov
ror
retf
ja
pop
and
test
jmp
pop
pop
mov
dec
aam
call
loopne
push
loop
cli
iret
push
push
in
mov
and
inc
cld
ja
jnp
and
das
jl
scas
mov
mov
dec
adc
jb
cmp
push
xacquire
inc
rol
xchg
in
or
pop
pop
popa
es
addr16
push
call
push
arpl
jnp
jne
mov
popa
sbb
cmp
xor
(bad)
xchg
mov
jmp
fcom
lea
imul
pusha
jmp
pop
or
inc
call
jp
jno
ins
mov
adc
mov
sub
adc
pop
repz
cmp
xchg
xor
dec
out
call
jg
push
add
lds
mov
imul
pop
fidiv
xchg
sub
std
push
and
inc
retf
pop
xor
int3
xchg
lods
cwde
cmp
pop
stos
mov
nop
mov
add
rol
ja
shl
ficom
daa
add
test
in
inc
lock
push
(bad)
jmp
pop
cmps
inc
ds
fist
sbb
add
stos
mov
cwde
ins
sbb
cmp
dec
aaa
mov
xor
mov
mov
clc
mov
loope
std
call
call
lea
cmp
sbb
scas
mov
dec
xchg
fdiv
loop
pushf
jmp
cs
jle
or
out
jns
mov
cmp
jmp
cmp
jecxz
(bad)
out
out
call
jle
ins
jmp
jge
enter
fstp
stos
mov
mov
arpl
ins
xchg
popf
std
ret
enter
mov
pop
cwde
mov
cmps
in
xchg
xchg
mov
scas
add
mov
cdq
les
xchg
push
sbb
movs
idiv
cdq
stos
aaa
or
cmps
aaa
mov
sub
mov
popf
cmp
jl
in
cdq
or
mov
push
cmp
outs
ret
adc
je
pop
mov
lock
jmp
out
out
int
aaa
lea
cmps
popa
fs
xor
lds
mov
xchg
std
push
add
xchg
loop
(bad)
cmps
cmp
dec
mov
inc
std
xor
fist
jae
adc
jl
and
sahf
fdivr
loop
jno
mov
in
(bad)
out
cmc
scas
dec
ret
push
popa
fldenv
gs
lods
sub
sub
xor
(bad)
std
ins
into
aam
ds
vmovaps
mov
lock
mov
ss
or
sub
and
or
cmp
mov
mov
(bad)
imul
mov
push
lea
xchg
rcr
jno
pop
jecxz
push
adc
jne
arpl
dec
xor
mov
cmp
fdivr
cmp
xlat
imul
ret
xor
aaa
jno
aaa
jno
jp
call
sbb
jns
fsub
cmps
inc
push
test
(bad)
pusha
or
popa
out
pop
xchg
xor
test
out
adc
jge
add
mov
pop
xchg
add
fwait
je
rol
out
push
ins
fbstp
sbb
mov
ins
add
fisub
test
mov
lods
in
ror
ja
xchg
xchg
pop
aad
jo
sub
mov
push
xchg
es
movs
mov
inc
ja
into
imul
pop
mov
push
scas
mov
lahf
test
es
stos
mov
push
mov
mov
inc
xor
jmp
fadd
lea
lea
xor
test
jne
inc
mov
push
mov
ja
ins
cmp
jno
repz
inc
aas
adc
scas
fsub
and
nop
add
jb
dec
or
cmps
pop
jl
(bad)
out
pop
inc
pop
stos
aam
jl
xchg
cmp
pop
stos
xchg
popa
inc
lds
push
popa
jb
xor
pop
cli
rol
fucomi
(bad)
and
and
push
pop
shl
(bad)
hlt
xchg
push
mov
rol
fiadd
dec
scas
dec
mov
gs
xchg
out
push
inc
into
enter
loope
repz
sbb
in
mov
inc
xchg
inc
push
mov
push
sbb
sbb
ss
mov
ja
jecxz
ja
jecxz
in
jp
add
jno
arpl
push
call
push
adc
adc
bnd
jmp
xchg
arpl
imul
shr
lock
pop
inc
popf
push
jo
sbb
mov
sahf
jg
fstp
mov
mul
cmp
push
stos
mov
mov
call
sahf
dec
adc
es
and
sar
mov
cwde
push
in
dec
cmps
lock
or
mov
jnp
push
adc
adc
push
sbb
es
dec
dec
int3
mov
pop
retf
sti
ss
push
or
lods
dec
sbb
mov
pop
cmp
scas
dec
mov
leave
dec
arpl
xlat
adc
test
jmp
push
adc
scas
pop
out
test
push
mov
dec
push
push
add
loopne
aad
jne
pop
test
or
jb
out
rcr
out
inc
ds
push
out
inc
sbb
inc
push
xchg
pop
shr
adc
hlt
xchg
mov
cmps
aaa
daa
repz
in
ins
sub
popf
lahf
adc
sub
push
mov
pop
xchg
xchg
sbb
adc
cdq
push
xchg
pop
cmps
or
inc
pop
xchg
bnd
(bad)
int3
adc
push
pop
add
neg
pop
enter
mov
xor
adc
inc
daa
and
xor
or
xchg
loopne
pop
aam
xor
xchg
push
pop
popf
movs
cmps
or
xchg
sub
lods
imul
mov
sar
sub
cmp
mov
cmp
inc
aaa
call
xchg
shl
jmp
retf
cmp
imul
in
shr
add
jae
out
pop
jmp
cdq
mov
mov
mov
or
bound
out
dec
cmps
(bad)
iret
or
cdq
or
fisttp
mov
lock
mov
cmp
lods
cmc
mov
test
lds
lods
mov
fild
mov
inc
adc
test
add
push
push
add
pop
mov
scas
jae
imul
pop
stos
jmp
stc
or
or
ss
jecxz
cmp
jge
into
xor
aad
ret
into
lds
sub
mov
xchg
mov
movs
stos
sub
fwait
push
or
push
call
pop
mov
mov
pop
into
cs
pop
dec
add
(bad)
mov
outs
inc
push
fist
gs
ds
adc
and
lods
jne
adc
rcr
adc
aad
add
mov
xchg
mov
dec
into
cld
iret
pop
inc
or
in
loope
int3
jo
adc
ins
out
scas
hlt
fs
fadd
test
mov
popa
fist
loop
bound
ja
nop
clc
mov
(bad)
sti
aaa
imul
pop
cli
xchg
sub
mov
fisttp
pop
ret
and
stc
jno
ror
xchg
outs
jno
fcmovbe
cmc
mov
pop
sub
ja
les
pop
std
pop
repz
jp
mov
cs
jl
sub
loop
cdq
icebp
mov
xchg
and
jbe
enter
ins
xor
pop
fcmovu
push
or
or
retf
inc
xchg
mov
lock
dec
push
pusha
cli
gs
(bad)
mov
mov
or
cmp
nop
stos
mov
sti
(bad)
sub
movs
repnz
and
push
and
pop
arpl
xchg
xchg
adc
push
cli
test
and
cmps
mov
call
sub
cmp
sbb
shl
mov
pop
mov
out
aad
add
adc
push
or
lock
and
adc
test
push
sbb
add
jno
add
data16
mov
test
pop
fs
ret
sbb
adc
jp
mov
retf
dec
scas
(bad)
mov
movs
cmps
retf
in
loopne
pop
mov
mov
pushf
pop
shl
scas
stos
in
retf
test
xor
jno
pop
idiv
or
sbb
jne
jmp
jg
(bad)
in
sbb
test
dec
cmp
inc
ficomp
mov
adc
call
and
xor
jg
mov
fcmovnu
fst
xor
cld
jb
aaa
daa
adc
dec
adc
(bad)
scas
adc
push
arpl
cmc
add
cs
push
aas
popa
add
xchg
push
sbb
or
adc
and
pop
and
or
stos
xor
jnp
lods
sti
sub
add
push
lods
xchg
cmp
xor
xchg
out
mov
ins
mov
dec
(bad)
fsubr
inc
mov
cli
iret
(bad)
rol
cmp
in
add
movs
and
add
adc
pop
fwait
sbb
push
mov
inc
pop
jg
jmp
sub
xor
ret
jb
cmps
lods
ret
or
pop
mov
loope
push
mov
add
enter
jp
and
mov
bound
inc
aad
mov
xlat
xchg
add
inc
mov
repz
outs
jp
lds
xchg
aas
fs
pop
test
mov
add
mov
test
pop
cmp
pop
je
call
push
cmp
push
loopne
mov
movs
add
pop
cmp
and
enter
call
enter
fs
add
fcom
rcr
or
and
jne
xor
ret
and
xor
js
push
cmc
sub
push
xlat
movs
into
dec
xchg
jb
dec
jne
test
loope
cmp
mov
mov
arpl
dec
dec
lods
jle
mov
adc
dec
mov
les
outs
and
(bad)
xchg
and
adc
dec
xchg
sub
pop
test
sub
mov
cld
(bad)
iret
or
xor
cs
outs
add
sbb
inc
inc
fs
lahf
call
mov
rol
lods
mov
cmp
je
or
mov
pop
lods
cdq
call
lea
push
cs
stos
add
mov
cli
sub
cmps
inc
shl
mov
push
test
js
aam
cli
or
fidivr
lods
inc
ret
inc
mov
push
or
dec
mov
dec
ins
xchg
aaa
mov
jmp
sub
(bad)
std
lahf
fcomip
sbb
iret
dec
sbb
or
or
call
sub
in
pop
sbb
jo
retf
mov
rol
mov
xchg
adc
and
mov
test
cmps
dec
lods
leave
in
sbb
jl
push
jg
sbb
mov
fnstcw
retf
adc
jmp
loop
std
sub
inc
mov
inc
mov
cmps
imul
outs
lds
psraw
call
cmps
jmp
or
sub
or
test
pop
mov
(bad)
stc
mov
mov
jbe
or
outs
push
ins
(bad)
in
jle
inc
int
sbb
hlt
int
sbb
imul
in
jp
jno
sub
lock
cmp
jae
cmps
lds
xor
pop
fcom
mov
jmp
loopne
inc
push
dec
dec
mov
sbb
mov
jp
xchg
leave
pop
sbb
inc
(bad)
movs
mov
jle
xor
sbb
pusha
jge
jl
daa
sti
pushf
xchg
leave
or
nop
mov
cmp
icebp
enter
cmp
push
outs
rol
inc
iret
dec
loope
lock
mov
xor
popf
nop
or
jae
in
je
imul
shl
ret
out
mov
fdivr
fnstcw
or
pusha
sahf
int
cs
jno
sub
push
mov
popa
and
cs
add
aam
mov
test
mov
call
or
sub
leave
push
xchg
shl
jmp
jg
mov
repnz
jno
sub
jbe
pop
push
jb
(bad)
jo
jl
push
xchg
mov
cmc
jecxz
or
pop
mov
rol
out
sub
inc
sti
addr16
fisub
jne
loop
retf
mov
cmp
add
movs
and
pop
addr16
sti
lods
rcr
sahf
pop
popf
jno
lds
push
pushf
cmp
inc
xor
call
jp
or
pop
sbb
xchg
retf
fsubr
adc
mov
js
mov
and
test
cmps
push
push
lods
jne
and
imul
pop
(bad)
nop
sbb
or
mov
and
jmp
out
add
(bad)
popf
push
jmp
and
sub
fstp
pusha
mov
and
mov
cmc
sub
pop
mov
add
inc
jmp
hlt
xchg
push
mov
icebp
shr
xor
xor
fwait
xchg
pop
add
scas
test
or
lahf
sbb
aas
jne
xor
jp
test
inc
test
mov
out
jae
gs
rcl
retf
xlat
jl
hlt
push
pusha
test
lea
jecxz
pop
outs
rcl
js
mov
mov
xchg
aam
add
push
pop
mov
jns
dec
lds
out
push
inc
jmp
inc
into
retf
push
cmp
stos
mov
ret
popf
in
movs
dec
inc
sub
call
rcl
jne
push
js
sub
vsqrtss
int3
adc
jge
dec
inc
mov
test
ret
inc
int
add
mov
cmp
(bad)
(bad)
adc
call
rol
cmp
imul
fwait
ins
outs
pop
sahf
pop
out
mov
test
inc
lock
mov
ret
les
into
and
clc
fucomip
mov
push
inc
js
xchg
rol
or
out
ss
mov
add
and
jmp
xchg
movs
mov
adc
ror
addr16
or
pop
mov
jo
dec
scas
inc
push
ret
stos
inc
je
cmp
cli
dec
adc
repz
cdq
in
stos
loop
(bad)
or
test
jmp
lahf
push
dec
push
cmc
sbb
push
pop
pop
jae
add
cdq
xchg
(bad)
mov
mov
arpl
push
jo
push
sti
js
mov
or
stos
stos
lahf
cmp
sbb
mov
lock
and
in
addr16
(bad)
js
loopne
inc
retf
jo
ja
cmp
sbb
mov
shl
or
push
test
mov
shr
jmp
stos
aad
mov
lock
sub
mov
loope
shr
jno
mov
xor
inc
cmc
in
pop
adc
mov
pop
jmp
jnp
add
aad
sub
jmp
sub
lock
push
add
inc
inc
cmp
hlt
cmp
dec
pop
nop
mov
pop
outs
fild
aaa
xchg
data16
xchg
test
dec
dec
retf
cli
sub
ror
popf
test
aad
pop
cwde
dec
mov
add
mov
(bad)
in
data16
pop
mov
push
je
mul
loop
dec
je
cmp
shr
mov
das
lea
aaa
sub
nop
inc
sub
aad
sub
xor
sub
repnz
mov
mov
call
sub
lods
addr16
xchg
push
cmp
add
(bad)
dec
jno
dec
inc
inc
xchg
mov
dec
movs
jae
push
sub
push
test
cs
ret
add
inc
mov
mov
jecxz
repz
out
fstp
cld
push
sbb
sub
popf
mov
push
inc
push
shr
frstor
adc
sbb
sbb
fadd
and
lock
lods
adc
mov
pop
in
dec
push
pop
push
add
sbb
rcr
xchg
enter
jmp
leave
leave
jns
sbb
push
inc
call
jmp
push
sub
jb
adc
mov
mov
ds
aas
ficom
mov
pop
iret
push
jmp
call
mov
cmc
pop
aad
fadd
shl
pop
push
sbb
pop
sub
stos
fs
push
sub
fcomp
std
xchg
mov
push
je
dec
out
mov
rcr
pop
fcmovnb
out
loope
sar
stc
imul
aad
add
fs
or
ja
and
inc
mov
mov
sub
movs
and
test
out
ffree
data16
test
fwait
imul
sbb
cmp
push
cmp
jle
je
mov
cmp
aam
mov
es
lock
or
sbb
inc
enter
imul
out
retf
pusha
mov
sbb
sbb
cmp
and
cmp
mov
or
mov
(bad)
pop
mov
into
jg
pusha
mov
jns
push
jne
pop
icebp
pop
fucomip
mov
xchg
(bad)
test
sahf
(bad)
iret
into
dec
lods
in
jne
sar
es
cli
int
repnz
mov
adc
lock
inc
imul
or
pop
loope
push
(bad)
xchg
jecxz
dec
arpl
clc
in
inc
aaa
cs
push
cmp
mov
or
inc
cmp
inc
rol
xor
jecxz
hlt
mov
jne
sbb
mov
adc
scas
mov
cli
sbb
loopne
and
lods
ja
scas
xor
and
lds
ins
retf
(bad)
inc
push
inc
movs
stc
ror
in
imul
ret
pusha
sub
mov
in
call
fs
jb
cwde
retf
or
xor
and
bound
mov
mov
scas
mov
inc
xchg
jle
ja
iret
cmovo
sub
les
dec
movs
jb
xchg
test
fdiv
add
sub
fsubr
pop
enter
push
inc
into
and
(bad)
push
enterw
add
call
inc
leave
push
loopne
jno
test
lea
popf
push
inc
cmp
pop
sti
call
imul
pop
xor
push
xlat
jb
shr
mov
cmps
sbb
mov
add
cdq
push
je
adc
xor
xor
test
enter
popa
pusha
bound
fst
jmp
xchg
add
loopne
call
push
mov
(bad)
fdivr
iret
aas
shr
inc
xor
cdq
into
pop
ret
aaa
push
outs
aam
xchg
dec
lahf
shl
sbb
fild
jnp
and
sti
sbb
std
mov
cld
sbb
arpl
pop
pop
popa
push
dec
cdq
out
and
pusha
jl
clc
mov
retf
jns
push
dec
shl
jle
jns
push
aam
ds
jnp
xchg
and
jae
dec
inc
mov
aad
test
cli
ds
adc
xchg
int
or
sbb
sti
retf
aad
and
or
into
dec
(bad)
sub
int
xchg
shl
mov
inc
(bad)
mov
hlt
pop
push
(bad)
(bad)
dec
and
hlt
(bad)
mov
and
cmps
mov
pop
or
and
scas
push
or
push
add
push
jo
inc
lahf
sbb
fadd
fs
ss
ss
cmps
jecxz
mov
add
xor
push
xor
sbb
cmp
mov
xchg
mov
call
cmp
in
and
pop
add
cmp
mov
pop
mov
aam
aaa
mov
in
adc
push
lds
or
cmp
or
jno
inc
push
jbe
pop
push
mov
fwait
leave
xchg
aad
js
imul
cmps
cmps
or
xchg
cmp
push
les
rcl
fisttp
lds
in
push
push
pop
mov
(bad)
out
ds
push
hlt
sub
lods
or
loope
push
adc
outs
xchg
push
jno
pop
mov
(bad)
pop
xchg
les
mov
rcr
lea
jge
mov
xchg
xor
jmp
inc
add
jmp
cmp
mov
push
dec
loopne
js
(bad)
dec
xor
(bad)
popa
pop
test
and
lock
cmp
xor
cmps
push
cmc
aaa
cmc
pop
loope
lds
push
push
push
out
in
push
out
and
cmp
neg
imul
bound
cmc
mov
push
jne
out
push
(bad)
fistp
push
call
sbb
sub
sub
test
fistp
int
jns
int3
shr
or
fld
fldcw
adc
jmp
in
(bad)
push
xlat
ins
stc
ret
fcomp
push
out
mov
adc
mov
(bad)
xor
aas
mov
pop
lods
jmp
push
jge
jb
xchg
pop
or
pop
push
inc
rcl
or
or
popa
pop
daa
in
cmps
movs
and
out
pusha
shl
jmp
jmp
cmc
loopne
cmps
push
sbb
outs
call
popa
leave
push
outs
add
enter
je
xlat
cmp
int3
hlt
test
push
or
hlt
push
iret
add
imul
xchg
les
jbe
inc
xor
fwait
les
ins
dec
mov
push
mov
stos
xchg
enter
inc
scas
mov
mov
popa
xchg
adc
test
cmc
add
push
ins
mov
adc
(bad)
add
mov
ins
test
arpl
mov
fadd
adc
nop
add
ins
call
mov
repz
xchg
int3
sbb
neg
nop
in
clc
sub
lahf
out
pusha
out
xlat
out
push
mov
es
das
xor
mov
lea
dec
sub
ss
fcomp
pop
ret
lahf
movs
aaa
mov
in
jns
lock
push
into
xchg
adc
xor
and
outs
mov
retf
jae
jmp
lds
xor
xor
(bad)
dec
stos
mov
(bad)
mov
mov
fadd
mov
jno
jne
cmp
adc
addr16
js
iret
sub
nop
lea
shl
scas
adc
pop
jne
pop
and
add
into
cmps
inc
in
test
fdiv
add
push
dec
xor
mul
ja
mov
dec
adc
xchg
mov
ja
push
addr16
cmps
iret
pusha
or
ror
jg
test
mov
retf
lea
push
mov
mov
or
frstor
pusha
jnp
in
xlat
js
mov
fild
rcr
sbb
pop
add
jmp
mov
out
push
mov
xor
xchg
aaa
out
cmp
or
or
and
pop
test
xchg
std
jl
mov
jo
inc
inc
or
std
popa
je
adc
inc
xchg
mov
shl
jae
aad
and
mov
rcr
nop
sub
popa
pop
cli
pop
push
adc
pop
enter
mov
(bad)
inc
sub
stc
sbb
sub
inc
pop
jbe
sbb
(bad)
movs
fisttp
repnz
pop
xor
mov
fst
xor
sub
sbb
push
lods
add
aad
mov
jnp
stos
add
mov
sar
push
in
pop
jg
dec
add
aam
aad
add
iret
int3
ret
sbb
and
cmp
cmp
mov
test
je
gs
mov
and
mov
jnp
scas
scas
mov
inc
loop
adc
les
sub
cmp
add
sub
and
out
or
test
sbb
test
mov
sbb
imul
mov
pop
pop
mov
or
popf
fcmovnu
sub
sbb
dec
call
popf
inc
and
xchg
stc
(bad)
xor
inc
mov
pop
arpl
jbe
jae
xchg
in
pop
xchg
fdivr
aad
dec
and
pop
test
push
js
shl
call
xchg
sbb
ficomp
pop
bound
setl
fnsave
into
jns
inc
and
xchg
sahf
outs
cmp
jp
div
xor
cmc
inc
and
or
and
(bad)
clc
push
inc
pusha
out
sub
sbb
mov
rcl
add
out
pop
xchg
xchg
xchg
les
xchg
or
(bad)
out
dec
bound
outs
sub
mov
inc
popa
mov
adc
mov
nop
fwait
dec
repz
jge
std
xor
mov
sub
add
or
in
xchg
ja
ret
rol
dec
lahf
jle
adc
mov
in
loopne
lods
outs
mov
outs
dec
push
cs
sub
xor
daa
ja
sbb
je
imul
sub
and
(bad)
push
sbb
enter
or
add
shl
jecxz
pop
fidiv
and
adc
adc
loop
retf
jae
repnz
lahf
bndstx
lds
mov
test
xchg
xor
inc
gs
lods
or
or
fidiv
jge
leave
sbb
cmp
mov
in
into
xchg
sahf
fnstsw
adc
leave
xor
and
jp
pushf
test
cmp
lds
addr16
gs
lea
lods
push
std
xor
mov
dec
pop
fld
shr
pop
lock
pop
jge
movs
push
mov
je
fs
xor
ds
mov
(bad)
xor
dec
cmp
test
xor
dec
adc
(bad)
std
xor
ja
in
sbb
nop
jno
pop
push
pop
dec
nop
jl
mov
push
mov
in
mul
dec
(bad)
rol
xor
call
xor
std
mov
inc
pop
mov
int3
ins
mov
pop
sub
fst
ret
xor
mov
cli
mov
sbb
cmps
mov
ror
push
sub
xchg
sub
stos
sti
int3
pop
or
xchg
test
sbb
sub
xor
dec
and
ss
mov
ss
dec
mov
mov
push
mov
aam
jecxz
dec
xchg
lods
adc
cmp
in
ja
or
cmps
mov
xchg
sahf
int
pop
cmp
aaa
js
ins
mov
sub
out
hlt
shr
add
xchg
add
jp
ja
or
xor
push
ja
gs
inc
xchg
inc
adc
inc
(bad)
mov
out
mov
clc
mov
sbb
add
call
repz
sahf
das
test
(bad)
aaa
mov
(bad)
push
sbb
out
(bad)
mov
push
cmp
loop
lahf
sar
jno
leave
pop
movs
xchg
inc
es
xchg
(bad)
xchg
push
sbb
pop
jns
rcr
sub
mov
push
jge
push
cmps
or
fdiv
sahf
jns
int3
cmp
pop
outs
push
xchg
pushf
mov
aam
lods
or
fldenv
rol
outs
jl
sub
pop
sbb
int
jnp
bswap
je
sbb
cdq
mov
mov
fnstcw
sub
mov
scas
ds
inc
int
mov
movs
mov
mov
adc
pop
cmp
push
js
add
cmp
das
dec
xchg
xor
inc
or
aad
loop
fidivr
jbe
mov
(bad)
mov
into
or
xchg
lods
ja
lods
jmp
test
(bad)
fadd
pop
add
outs
add
adc
mov
scas
ds
adc
pop
rcl
pop
scas
push
push
outs
mov
xor
sub
jge
add
mov
fs
xor
pop
add
or
adc
popf
loopne
cmp
xor
stos
adc
sti
pop
ins
xor
pop
mov
sahf
jl
nop
or
ss
inc
mov
mov
in
lods
cs
cmps
cli
cmp
fadd
add
sub
sbb
clc
jp
xor
cli
rcl
mov
jbe
addr16
inc
cmp
add
(bad)
push
pop
jae
mov
mov
dec
or
xchg
cs
cdq
call
xlat
sub
xlat
sub
ss
add
dec
jo
adc
dec
push
ins
outs
mov
sar
cli
inc
xchg
mov
inc
aaa
test
lods
mov
scas
cwde
push
sbb
dec
pop
pop
or
and
out
loop
push
and
imul
dec
test
fmul
add
fcomp
fistp
add
sub
sub
and
cmp
push
es
sub
push
push
jecxz
adc
xchg
enter
jmp
jp
enter
mov
inc
sub
in
cmp
xchg
std
xchg
sbb
add
inc
retf
pop
imul
cwde
mov
test
jl
mov
jns
pop
fild
push
adc
loopne
and
jge
ss
dec
rcr
pop
sub
push
clc
push
jno
jno
mov
jns
fadd
sbb
not
push
repz
fisubr
pop
dec
jnp
in
mov
test
stc
stos
sub
sub
push
lds
xor
test
add
cmc
cli
pop
mov
and
mov
mov
jmp
mov
mov
push
cmp
or
jmp
neg
jnp
int3
mov
sub
mov
sub
xor
mov
pop
or
push
mul
push
pop
popf
loope
jno
push
retf
jecxz
jp
shl
out
scas
arpl
scas
stos
outs
dec
aaa
push
dec
lahf
inc
rol
push
adc
pop
xchg
das
shl
in
arpl
pop
neg
xlat
pop
sbb
and
lock
movd
test
add
(bad)
call
call
and
mov
inc
sbb
mov
out
or
pop
xchg
mov
pop
lock
retf
rcr
inc
pusha
and
jg
ins
sbb
push
scas
or
outs
stc
ret
(bad)
and
or
ins
call
in
xchg
xlat
jp
aad
ror
ss
sub
clc
popa
jo
in
and
pop
call
sar
jb
hlt
push
aam
test
ds
fidiv
jnp
pushf
jle
cmp
inc
and
imul
(bad)
push
jmp
xor
cmp
or
jns
sub
cmp
cmp
iret
inc
repz
mov
les
pop
cdq
sub
push
lods
inc
mov
push
cwde
add
pop
data16
gs
ds
pop
push
fcomp
movs
scas
pop
fs
popa
or
mov
retf
sbb
mov
push
aaa
or
(bad)
pop
mov
sub
test
js
push
sbb
jno
loopne
int
shr
rcr
call
sbb
push
jno
cmp
dec
and
adc
add
retf
mov
hlt
and
add
cmps
call
adc
ror
add
add
es
scas
jmp
mov
pushf
imul
into
mov
loopne
loop
fs
push
ss
div
cmp
mov
mov
pusha
and
sub
sar
xchg
sbb
cmp
sbb
inc
lds
xor
inc
adc
jbe
jecxz
pop
push
sub
je
or
dec
xchg
loopne
sub
js
adc
dec
cs
inc
xchg
test
xor
std
jo
sar
xchg
or
cli
and
outs
jne
xor
jle
and
ja
adc
cmp
and
popa
pop
inc
out
mov
mov
in
pop
adc
pop
mov
mov
aaa
test
popf
or
push
xchg
(bad)
out
cmc
movs
cli
adc
or
dec
jmp
jbe
fwait
inc
or
out
cmc
dec
sbb
push
(bad)
aad
shl
push
dec
fimul
shl
cld
push
and
cmps
cld
xchg
fnstsw
stos
int
imul
push
stos
test
xchg
dec
pop
call
mov
cld
in
and
clc
add
(bad)
cwde
jae
cwde
and
imul
shl
add
loop
jmp
scas
mov
imul
add
repz
jno
out
and
movs
dec
mov
popf
lahf
xor
and
xchg
ja
mov
in
push
fcomp
jae
xchg
push
jecxz
adc
xor
rcl
shl
inc
out
dec
arpl
out
fldenv
xor
mov
stos
or
shr
daa
or
mov
dec
stos
adc
outs
push
xchg
mov
ret
mov
push
push
pop
mov
inc
loop
bound
cwde
xchg
call
push
mov
(bad)
push
aas
arpl
in
pop
enter
cs
cmps
adc
ds
jno
stos
gs
push
add
push
pop
pop
jb
cmp
retf
retf
loope
ins
sub
xor
mov
push
into
inc
and
jp
lock
test
sbb
ja
mov
adc
mov
scas
outs
dec
sub
jg
xchg
int
push
or
pop
scas
adc
or
sahf
xor
inc
scas
ja
imul
nop
sbb
test
mov
call
dec
mov
addr16
in
dec
bound
mov
sub
sbb
in
inc
enter
dec
mov
test
push
mov
pushf
mov
dec
sbb
pop
xor
pushf
xchg
and
and
inc
lahf
mov
and
lea
push
dec
push
pop
jge
jg
dec
pop
imul
lds
out
jg
jb
cmp
or
add
sbb
add
lahf
repnz
push
test
movs
xchg
push
loope
(bad)
mov
imul
cmps
pop
lods
push
xchg
test
sbb
lahf
bound
and
xchg
lahf
hlt
xchg
xlat
xor
out
nop
adc
cwde
add
rcl
mov
add
fdivr
jge
cmp
cmc
or
add
cmp
pop
stc
xor
call
neg
xchg
in
mov
and
std
jbe
sub
movs
fisttp
mov
cmp
xchg
add
and
neg
mov
in
or
fisub
inc
fidivr
lock
mov
retf
pop
scas
jp
cmp
dec
call
test
je
or
mov
push
push
clc
(bad)
mov
jmp
vxorpd
and
mov
mov
add
mov
lahf
push
fcomp
pop
and
loopne
xchg
ret
outs
and
jle
ds
adc
adc
adc
push
cmp
mov
fmul
iret
ficom
shl
lea
and
pop
push
mov
mov
pusha
lock
sbb
stos
jmp
pop
mov
push
aad
call
cli
mov
xlat
mov
inc
xlat
fs
out
inc
mov
mov
push
shl
sbb
(bad)
popf
mov
or
faddp
fbstp
mov
movs
sbb
js
xchg
sbb
inc
adc
aam
xchg
std
pop
pop
mov
jp
cli
test
scas
bnd
mov
jmp
cmp
inc
and
and
pop
xchg
xchg
aad
jns
in
idiv
mov
mov
jae
fcomp
and
sbb
stos
call
jo
cdq
call
mov
out
imul
arpl
push
pop
jmp
sbb
inc
push
pushf
sbb
xchg
icebp
inc
cmp
ins
addr16
push
retf
lds
inc
add
pusha
adc
aad
sbb
imul
mov
stos
dec
fdivr
sub
mov
cmp
pop
inc
cmp
(bad)
sub
mov
jl
pop
call
cmp
mov
js
jae
sbb
cmps
push
popf
mov
test
push
jp
ret
add
jl
loope
clc
pop
cdq
lahf
(bad)
dec
fbld
jnp
jns
pop
or
ins
inc
xor
loopne
xor
fs
dec
and
inc
es
mov
ficomp
jg
loope
fwait
adc
jle
clc
or
mov
xlat
xlat
das
push
out
das
std
fsubr
aaa
lahf
das
gs
pop
push
add
popa
call
push
mov
rcr
and
mov
in
dec
cmp
dec
mov
jne
sub
ds
or
adc
dec
cld
idiv
add
loope
xchg
push
lods
(bad)
xchg
lods
ret
rcl
cdq
add
ror
cmp
pop
std
(bad)
sbb
cdq
dec
pop
iret
adc
loop
push
dec
out
push
mov
mov
test
sub
or
call
fucomi
daa
das
sbb
pop
test
push
(bad)
aas
fwait
leave
mov
push
loopne
cmp
ja
out
pop
pop
leave
pop
enter
jne
ror
mov
add
fstp
stos
and
fbstp
push
adc
push
dec
sub
not
out
pop
adc
dec
jb
sub
(bad)
fsubr
mov
ja
xor
outs
inc
add
or
js
loopne
jl
repnz
adc
adc
add
inc
pop
jge
popa
mov
xor
inc
and
test
jmp
nop
mov
mov
cwde
mov
xor
mov
adc
jae
pop
and
popa
xchg
jnp
or
shr
push
movs
or
jle
cmp
jg
and
stc
daa
std
push
popa
lds
adc
test
lds
or
shl
pop
ja
mov
leave
mov
shr
dec
jmp
push
add
aam
rol
in
push
cmps
jb
xchg
cmp
or
mov
fsubr
lds
imul
sbb
(bad)
fdiv
js
sbb
push
add
dec
loop
jne
aas
sbb
shr
inc
(bad)
adc
inc
lock
in
fistp
mov
aaa
hlt
xchg
outs
mov
mov
or
pop
jle
xor
div
xchg
sbb
iret
jle
jp
mov
inc
sub
push
ss
or
xchg
add
std
push
mov
mov
mov
shl
mov
and
pushf
sbb
jmp
popa
jbe
add
dec
test
jmp
mov
pop
inc
jne
rcr
adc
fidivr
xchg
ins
pop
jle
ins
dec
ja
pop
test
jae
xchg
sbb
pusha
inc
jae
(bad)
sub
add
pop
cli
or
mov
(bad)
out
in
scas
clc
jmp
jmp
lods
imul
push
dec
push
push
ins
xchg
push
jle
push
add
xor
arpl
mov
aaa
add
jno
in
fild
cmp
push
push
push
mov
sbb
mov
test
outs
xor
stos
mov
ins
inc
xchg
bnd
scas
out
pusha
mov
in
and
xchg
pop
xchg
and
fisttp
and
mov
push
sub
scas
mov
or
jge
jne
pusha
rcl
push
lahf
or
add
fwait
leave
popf
jnp
inc
sub
mov
jmp
out
or
in
xlat
cmp
shr
xchg
lods
adc
retf
inc
adc
scas
inc
popa
pop
adc
ja
movs
mov
int
jno
test
arpl
nop
jns
push
mov
mov
test
iret
ds
cmp
loop
jo
sub
inc
fstp
sub
xor
das
rol
push
data16
dec
(bad)
dec
test
mov
xchg
sub
test
pop
icebp
sub
push
push
bound
dec
std
push
mov
and
lods
dec
and
pusha
mov
jmp
mov
and
pop
mov
push
stc
adc
xchg
pop
mov
dec
sub
jbe
call
cmp
in
xor
cmp
loope
sub
or
scas
or
mov
add
leave
jecxz
or
and
daa
xchg
jno
mov
adc
jns
xchg
xor
and
cmp
mov
scas
xchg
xchg
push
outs
les
cmp
sbb
pusha
mov
xchg
retf
jae
enter
add
push
pop
scas
xchg
data16
(bad)
loopne
xchg
sti
xor
sub
dec
sbb
cmp
mov
sbb
(bad)
imul
nop
push
add
pop
test
mov
and
ror
add
mov
xor
daa
fmul
or
shl
sub
adc
cmp
movs
mov
fwait
add
gs
xor
push
sbb
lea
outs
mov
xchg
mov
cwde
mov
mov
xor
mov
xchg
(bad)
dec
or
or
jo
add
dec
outs
in
jg
pop
call
pop
add
mov
stc
pop
lds
push
add
lahf
dec
xchg
sbb
fcom
mov
mov
cdq
mov
test
dec
or
dec
ret
inc
jp
jb
mov
jecxz
pop
sub
in
outs
sar
cmp
or
inc
xor
in
add
dec
pop
xchg
adc
mov
or
pop
mov
fnstcw
out
(bad)
sub
add
jb
(bad)
mov
fisttp
in
xor
jo
inc
adc
sti
loope
enter
sbb
and
mov
out
fistp
dec
out
dec
test
jne
aad
or
movs
aad
pop
test
test
(bad)
push
sbb
sahf
mov
rcr
aad
pop
pcmpgtb
loopne
mov
aam
shl
dec
xchg
bound
dec
repz
mov
dec
call
pop
push
push
and
(bad)
aad
ins
arpl
and
outs
in
popa
mov
push
xchg
ret
adc
pop
jns
mov
push
ds
sub
stc
push
inc
sbb
jl
imul
sub
aad
jg
cmps
xchg
mov
sbb
xor
aas
mov
and
xchg
cmp
pop
jmp
mov
or
adc
cwde
sti
sbb
shr
sub
int3
nop
mov
adc
pop
(bad)
push
ins
and
push
xchg
lea
mov
mov
mov
mov
xchg
dec
daa
iret
push
dec
push
sub
and
jno
les
popf
(bad)
xor
mov
js
mov
xchg
test
push
outs
out
mov
and
and
lods
stos
lea
mov
in
jle
fistp
xor
cmp
data16
je
je
cs
xchg
jnp
push
lods
lods
and
pop
xchg
hlt
mov
mov
pop
je
jge
sub
cmp
jbe
and
xor
pop
retf
stc
jle
aad
cmp
adc
(bad)
stos
int3
test
lahf
pop
es
ret
cmp
xchg
sbb
xor
add
mov
xor
sub
jl
cmp
mov
ins
push
xor
fdivr
aaa
lods
(bad)
div
jmp
cmps
lds
addr16
retf
mov
push
fwait
shld
jge
mov
iret
cmps
arpl
scas
sub
xor
sbb
lds
sub
cld
fadd
adc
sbb
xor
inc
jae
mov
push
or
mov
in
shr
inc
mov
test
sbb
mov
retf
jp
or
mov
inc
test
pop
pop
mov
xchg
enter
mov
fcom
and
(bad)
pop
bnd
mov
jns
mov
inc
shl
add
jmp
cmps
daa
mov
imul
xor
movs
shl
pop
ss
aam
inc
out
jmp
push
xchg
sbb
outs
xchg
push
rcr
inc
call
and
imul
sub
cmp
sbb
(bad)
push
ror
aad
mov
jne
enter
(bad)
ins
and
push
(bad)
mov
aas
in
(bad)
jecxz
lock
cdq
ins
hlt
sub
mov
push
jp
and
lods
jmp
push
loope
movs
sbb
ror
inc
loopne
fistp
popf
add
mov
loope
inc
dec
xchg
adc
fnstenv
ret
pop
pop
retf
pop
cmp
inc
add
xchg
xchg
jb
and
fnstenv
test
lock
bound
cdq
xchg
xchg
jne
mov
mov
inc
repz
loope
(bad)
push
cmp
dec
fld
add
pop
sub
das
fidivr
stos
pop
mov
mov
gs
push
fdivr
dec
jmp
adc
int
ret
mov
pop
in
xor
sbb
idiv
test
dec
jecxz
popa
push
sbb
cli
cmc
mov
fist
cmp
xor
and
adc
push
aad
fstp
es
loope
rol
lahf
mov
push
mov
sub
iret
pop
or
fistp
sahf
int3
sbb
lock
xor
cmp
or
test
mov
stos
cmp
lds
out
and
adc
cmps
adc
scas
retf
test
sub
and
loope
outs
je
fadd
in
out
adc
leave
dec
ds
push
mov
adc
ins
push
addr16
jl
mov
imul
mov
(bad)
cmps
into
aas
sahf
movs
aam
sar
cmp
je
in
shr
jle
lods
into
push
int
inc
add
adc
jnp
dec
adc
int
xor
test
sbb
inc
xor
sti
push
neg
add
ret
(bad)
jle
jb
sti
cmp
adc
sub
(bad)
lea
inc
adc
xchg
mov
and
popa
inc
dec
or
jl
mov
mov
fisttp
and
xchg
repz
stos
add
out
stos
cs
mov
pusha
jo
aam
jg
push
sub
test
loopne
dec
push
push
aad
addr16
add
adc
ins
sbb
movs
cmp
cmp
and
jmp
mov
push
lds
mov
add
pop
inc
or
and
in
mov
add
int3
xor
sar
and
test
push
xchg
push
cdq
jle
jmp
in
cwde
add
sub
ins
in
sbb
adc
cli
fiadd
or
jge
loopne
xor
mov
pop
ins
jl
call
inc
shr
sti
cmps
mov
cmp
xchg
cdq
sbb
mov
std
je
push
les
mov
test
or
xchg
mov
sub
icebp
mov
aaa
cmp
or
call
dec
and
cmc
in
jl
push
test
sub
out
or
sbb
xchg
inc
mov
jl
or
push
add
ss
ss
push
pop
add
lods
adc
cs
pop
jo
and
push
leave
dec
fiadd
ds
idiv
std
inc
cmp
add
sbb
push
mov
dec
adc
jl
xchg
(bad)
shl
inc
int3
xor
es
mov
out
xchg
call
ja
clc
dec
loop
add
scas
mov
jl
cmp
xchg
repnz
bswap
shr
fs
mov
dec
add
inc
cld
call
mov
adc
jge
mov
std
push
inc
aam
fst
test
jl
xor
das
lea
adc
std
xchg
push
mov
add
push
sub
ficomp
test
push
mov
pusha
and
jecxz
and
js
push
and
neg
mov
das
call
cmc
repnz
int3
and
jmp
inc
inc
movs
sub
retf
cwde
sar
call
pop
lahf
pop
popa
mov
cwde
cld
sbb
pop
pop
fisub
ins
shr
mov
dec
loope
test
iret
xchg
stos
ret
xchg
cmp
stc
adc
aas
cmc
retf
scas
lock
pop
dec
int3
adc
enter
mov
mov
add
rcl
out
popf
jb
push
test
(bad)
mov
fs
mov
call
mov
xlat
ret
cmp
arpl
pop
jmp
sub
packuswb
sub
outs
idiv
js
scas
dec
push
ficom
scas
sar
pop
mov
add
jl
dec
jns
xlat
pop
rcr
js
mov
(bad)
lahf
test
shr
lea
rcl
mov
xor
inc
js
punpckhbw
cld
and
push
ret
fs
mov
into
or
mov
sub
(bad)
xor
push
and
cli
inc
pop
push
cmps
dec
(bad)
call
pop
(bad)
stc
mov
scas
cdq
icebp
adc
dec
repnz
mov
cmps
cdq
pop
or
adc
jecxz
jp
adc
in
add
ret
sub
aas
xor
adc
or
cmps
jae
mov
imul
dec
pop
ja
ja
mov
data16
dec
int
js
fucomi
or
push
pop
adc
outs
cmp
iret
ss
mov
nop
(bad)
out
jb
retf
shl
ret
cmp
xchg
xor
jle
jl
jbe
jb
nop
fist
jp
cmps
adc
cwde
dec
xor
mov
xor
cmps
leave
das
or
in
call
mov
je
ret
push
cmp
repnz
jb
dec
inc
or
sbb
jne
mov
fnstsw
push
jecxz
cli
jp
rcr
fist
shl
outs
fcomp
shr
jne
push
pop
(bad)
sbb
call
les
push
inc
sub
jle
or
mov
pop
pusha
into
push
jp
mov
ins
mov
and
gs
xlat
iret
xchg
sbb
sub
cmps
repz
xor
cwde
ins
lock
sub
or
jg
sbb
rol
bound
xor
imul
mov
jp
ins
int3
push
mov
repnz
outs
lods
dec
jmp
push
rcl
sbb
sub
jle
pop
dec
fmul
(bad)
das
es
fisub
mov
pop
push
inc
xchg
mov
jns
jge
add
xchg
pop
mov
enter
gs
sbb
add
xlat
arpl
or
loopne
xor
push
repnz
jae
mov
(bad)
push
push
xchg
ins
inc
int
fnstsw
(bad)
pop
pcmpgtd
ror
das
xchg
dec
shl
xor
dec
mov
sub
adc
push
jecxz
test
cdq
push
xchg
adc
adc
add
xor
jmp
fisub
scas
and
test
clc
out
stos
fisttp
jp
pusha
lods
sbb
ret
mov
jp
xor
loope
adc
and
inc
pop
jnp
sub
sbb
cwde
inc
mov
das
movs
sbb
bound
push
popf
fadd
cmc
pushf
outs
or
repz
es
scas
push
in
jge
cmp
ja
(bad)
scas
data16
pop
inc
push
scas
xor
in
leave
jae
imul
imul
dec
sub
or
jg
inc
loop
aas
and
sbb
(bad)
daa
inc
aaa
adc
dec
sub
stos
cmp
sbb
outs
jbe
aas
ss
rol
cmc
adc
xor
inc
cmp
or
adc
adc
(bad)
cmp
popf
shl
pop
dec
fiadd
je
or
jmp
outs
mov
inc
mov
sbb
xor
mov
movs
mov
xchg
push
repz
push
pushf
xor
ss
loope
pop
aam
cmp
ret
pusha
popa
movs
in
cmp
mov
imul
and
(bad)
icebp
and
nop
fstp
xchg
adc
xor
dec
jge
imul
rcl
xor
and
dec
mov
or
add
dec
in
call
fbstp
mov
scas
shl
jnp
xor
or
fstp
loope
(bad)
jg
mov
rcl
mov
add
mov
pusha
int3
dec
add
jb
or
imul
xor
test
jecxz
aad
pushf
add
(bad)
in
xchg
xchg
jne
pop
sub
jmp
ror
xchg
cmps
jne
push
xchg
add
ror
fs
mov
mov
dec
inc
cwde
adc
(bad)
shr
test
movs
stos
lods
iret
adc
add
xlat
repz
dec
movs
sbb
cs
inc
in
fs
jns
cdq
push
jecxz
in
mov
cmp
out
mov
cmps
push
inc
leave
lods
sbb
ja
xchg
cld
push
daa
jecxz
sub
icebp
mov
jne
dec
cmps
fld
push
movs
and
mov
cmps
cmp
(bad)
push
je
adc
push
add
cmp
jmp
push
xor
xlat
leave
arpl
js
adc
imul
cmp
sbb
sbb
ss
test
lahf
in
add
mov
sub
es
aas
push
push
and
(bad)
arpl
ret
push
pop
sub
xchg
sub
xchg
call
shr
scas
and
cld
aaa
add
dec
mov
xchg
out
add
aas
dec
mov
sti
inc
outs
out
in
mov
xchg
xchg
add
push
cwde
mov
in
mov
xor
lds
push
add
out
or
mov
adc
gs
dec
pushf
lds
pop
mov
shl
pop
xor
call
cmps
cmp
stos
pop
rcr
inc
sbb
xor
ror
or
push
lock
cwde
dec
inc
inc
jbe
pop
cmp
das
leave
dec
xor
mov
push
pusha
jmp
daa
or
add
xor
mov
(bad)
dec
cmp
xchg
jnp
pop
adc
les
jle
add
cmp
pop
clc
gs
fidivr
xchg
pop
ins
mov
adc
sahf
shr
sti
mov
mov
push
ret
std
cmc
xlat
push
fdivr
fild
dec
pop
ror
xchg
mov
push
and
jno
test
mov
push
sbb
sub
xlat
(bad)
pop
lock
pop
scas
lea
or
inc
jge
outs
stc
aam
mov
je
xchg
xor
sbb
iret
aas
fs
or
lock
jo
mov
xor
push
mov
xor
xlat
dec
dec
loope
jp
into
enter
add
cmp
adc
or
xor
in
mul
mov
retf
imul
int
fs
lds
scas
dec
outs
stos
jns
or
fwait
sub
add
inc
jbe
push
je
sub
popa
test
add
dec
jne
jo
sub
xor
std
movs
ret
cmps
movs
ret
cmp
in
add
xor
mov
xchg
ficomp
and
into
je
fdivr
cmps
push
or
jb
je
cmp
lahf
cmps
retf
int
jno
add
mov
jmp
push
dec
adc
in
mov
xor
test
add
push
mov
icebp
sbb
mov
fwait
inc
add
outs
cmp
les
pop
iret
int
call
aad
xor
xchg
dec
mov
push
sti
nop
xchg
cmps
aam
test
lea
pusha
(bad)
dec
add
fistp
outs
call
dec
fsubr
outs
sti
(bad)
mov
clc
mov
iret
pop
mov
mov
data16
fwait
xor
push
mov
stos
and
push
inc
or
fs
data16
adc
xchg
mov
mov
(bad)
into
inc
dec
sub
fmul
ins
adc
pop
in
push
(bad)
nop
inc
rcr
cmp
ds
dec
cs
out
inc
pop
je
jmp
daa
add
cmps
int
enter
adc
xor
xor
xchg
iret
sub
jbe
shl
sub
dec
int3
adc
jns
jg
arpl
test
cmps
xchg
call
retf
push
cmps
test
sti
lea
push
aam
cmp
ins
stos
jae
add
xchg
nop
mov
mov
or
cmp
test
inc
in
sub
popf
cmp
sbb
fild
adc
stc
adc
ins
mov
sub
sbb
scas
mov
push
mov
ror
fidivr
(bad)
dec
dec
rol
sub
data16
mov
inc
mov
into
lea
sar
out
adc
jecxz
adc
sahf
(bad)
cmp
push
jge
xchg
mov
jmp
ret
or
cmp
and
cmps
mov
jl
ror
sub
outs
push
enter
ins
add
push
add
sub
int3
or
jmp
loope
shl
xchg
pop
push
into
ins
jg
in
ins
sub
ret
data16
cwde
mov
pop
mov
scas
or
loop
mov
inc
mov
lock
mov
in
push
inc
push
sbb
add
sub
test
ins
jmp
rcr
loope
xor
dec
jne
scas
imul
xlat
mov
sbb
xchg
fisub
jl
mov
jp
out
popf
int
push
push
cwde
cmp
jl
jae
and
lea
add
sbb
cmp
nop
adc
out
ficomp
stos
mov
outs
loopne
mov
adc
jle
xchg
cmps
sbb
add
pop
cmps
add
(bad)
lahf
sbb
jmp
fstp
retf
jno
and
cld
add
mov
(bad)
mov
jp
or
aad
fiadd
hlt
xchg
lock
call
and
clc
and
mov
xchg
mov
(bad)
ret
jp
cmp
in
leave
icebp
inc
popf
push
jnp
outs
xchg
nop
jg
dec
add
xlat
xor
pop
adc
pop
jmp
in
mov
mov
lahf
loop
retf
pop
mov
out
lds
call
mov
je
repnz
fldl2t
xchg
out
jmp
scas
(bad)
(bad)
je
sbb
jne
(bad)
jl
and
add
test
xor
shl
xchg
push
cmovp
icebp
shl
aam
sbb
shr
or
or
sbb
xchg
sti
loop
sbb
cmp
movs
dec
outs
dec
dec
dec
and
xor
stc
push
aad
mov
jle
sahf
adc
icebp
aas
icebp
repz
mov
iret
aaa
movs
dec
mov
pushf
jmp
sub
(bad)
xor
mov
xchg
out
in
lahf
mov
mov
(bad)
push
mov
out
(bad)
pop
pop
add
je
pop
cli
pop
and
mov
add
int
push
mov
iret
xchg
mov
je
ds
pop
mov
adc
arpl
jge
pop
xor
or
mov
adc
imul
and
xor
xor
mov
dec
mov
dec
mov
pop
movs
jg
or
loope
adc
lods
xchg
outs
mov
and
xor
xchg
movs
stos
leave
xchg
jns
add
adc
daa
mov
int3
retf
cli
iret
pop
and
sub
scas
push
sub
mov
push
movs
int3
mov
adc
ficom
fsubrp
sub
ja
jecxz
pop
(bad)
and
xchg
xchg
repz
ins
mov
add
mov
cdq
jmp
jo
mov
(bad)
movs
cmp
add
gs
mov
lods
jle
popf
sub
cmp
dec
js
ins
adc
cmps
mov
leave
loope
mov
cli
lock
adc
pop
mov
retf
dec
shl
and
nop
or
js
rcl
xchg
pop
int
ins
mov
mov
add
(bad)
cld
dec
jmp
test
mov
std
das
call
(bad)
cmp
shr
repz
sti
adc
fwait
mov
and
jo
(bad)
jmp
mov
loop
mov
movs
sbb
dec
inc
bound
popf
xchg
call
int
jae
fist
xchg
mov
pusha
nop
sub
or
lock
icebp
ror
and
aad
loope
dec
test
xchg
mov
push
pop
(bad)
sti
add
std
fsubrp
leave
in
shl
sub
pop
iret
mov
push
inc
and
mov
push
push
and
shl
xor
xor
mov
mov
ret
and
sub
cmc
jb
in
mov
and
cmp
xchg
xor
xlat
mov
cdq
retf
adc
fwait
cmp
adc
xchg
cwde
dec
adc
add
cli
fwait
iret
mov
stc
cli
into
push
das
lahf
out
daa
test
sub
enter
sub
fist
popf
mov
fwait
cld
jl
fistp
in
loopne
push
shl
sub
fs
inc
inc
jg
or
call
mov
xor
les
hlt
sub
push
pusha
or
or
iret
jecxz
dec
stos
add
sub
sbb
ret
sub
sub
(bad)
(bad)
hlt
jo
std
icebp
jmp
test
xchg
jmp
mov
xchg
ror
getsec
inc
outs
test
ss
jecxz
mov
inc
rol
inc
arpl
fist
out
add
ret
repnz
(bad)
out
or
shl
fld
daa
out
(bad)
cmps
push
xlat
add
adc
pop
inc
aam
stos
adc
mov
dec
inc
das
and
pop
scas
or
cmp
pop
mov
xor
xchg
jae
(bad)
mov
(bad)
sub
js
mov
stos
cmp
dec
or
xchg
(bad)
add
jle
popa
(bad)
cmps
fwait
sbb
ret
add
pop
inc
mov
cdq
mov
dec
push
fwait
ss
xor
(bad)
adc
repz
fld
mov
int
xchg
nop
stos
stos
or
mov
gs
sub
into
test
and
sti
mov
or
out
sbb
out
sbb
jecxz
into
mov
add
pop
xor
out
adc
nop
jne
xchg
out
test
jbe
cmps
push
pop
stos
xor
and
xor
adc
or
ja
inc
push
aas
mov
sahf
pop
cmp
shr
mov
adc
cmp
xor
ret
enter
sub
jns
dec
inc
inc
rcr
push
and
mov
(bad)
jnp
(bad)
clc
call
inc
stos
sub
mov
mov
movs
xor
sbb
inc
pushf
mov
push
pop
arpl
pop
ds
es
mov
das
jecxz
popf
call
mov
mov
mov
shl
movs
pop
int3
test
adc
adc
xor
or
add
jl
dec
adc
push
out
outs
push
adc
sbb
arpl
xor
hlt
(bad)
jb
or
pop
jmp
movs
and
gs
mov
cmp
sahf
retf
push
jg
sbb
js
pusha
xor
jmp
call
popa
clc
and
mov
cs
leave
les
mov
cmp
mov
ret
movs
int
or
or
sahf
pop
fs
cmc
add
add
icebp
bound
or
dec
xor
scas
mov
stos
loop
stos
adc
push
cmp
pop
out
aad
(bad)
loopne
and
pop
push
fsub
or
inc
sbb
push
shr
push
mov
out
std
leave
stos
push
push
dec
imul
mov
fbld
cmp
xlat
mov
fcmovbe
repz
test
pop
hlt
lock
cmp
sbb
sbb
adc
outs
cmps
adc
pop
ss
jnp
and
add
jl
adc
add
mov
add
adc
retf
(bad)
xor
sub
push
jle
mov
or
xor
call
(bad)
xchg
sub
stos
test
(bad)
lahf
mov
scas
and
adc
in
add
lds
cmc
xor
sbb
or
adc
cs
dec
popf
pop
add
push
cli
sahf
sbb
fldenv
xchg
push
test
sub
xor
sub
in
mov
dec
out
es
nop
pushf
push
data16
and
and
and
jno
push
mov
int3
popa
adc
xor
mov
mov
mov
sbb
inc
lds
push
mov
gs
shr
leave
pop
(bad)
add
in
pop
test
fs
cli
jne
xor
ins
dec
(bad)
clc
jmp
shl
lods
ins
dec
mov
in
xchg
jle
jg
ins
dec
retf
cmp
or
lods
push
and
loope
cmp
(bad)
mov
sbb
or
fld
and
test
push
push
fisttp
nop
mov
aaa
dec
sub
(bad)
popf
retf
ins
push
xchg
imul
mov
out
xor
pop
and
ja
mov
jnp
daa
imul
dec
repnz
cwde
push
std
push
test
retf
pop
loop
dec
into
enter
sub
stc
and
cwde
aam
pop
sub
or
cmp
xchg
jle
pop
add
push
lahf
imul
clc
(bad)
(bad)
mov
adc
sbb
and
movs
pushf
cmps
icebp
mov
sar
cmp
inc
jge
adc
jmp
pop
pop
cmp
pop
cli
js
and
jbe
std
mov
fsubr
pop
and
pop
pusha
bound
pop
and
xchg
fidiv
aam
aas
loop
pop
mov
dec
pop
cmp
or
shr
pop
or
in
fadd
(bad)
mov
js
xchg
stos
mov
inc
adc
cmp
xchg
fs
cli
outs
mov
mov
xchg
cwde
jo
jl
pop
adc
fdivr
push
clc
(bad)
ret
lods
dec
xchg
cwde
push
out
aas
mov
cmp
and
cld
sub
jae
or
jno
jo
jle
icebp
sub
push
sbb
mov
xchg
cs
adc
cmp
mov
and
mov
sbb
dec
movs
xlat
fadd
retf
stos
jmp
jae
push
sub
(bad)
pop
stos
sbb
daa
push
fist
jecxz
push
mov
add
(bad)
jb
rcr
in
shl
jg
movs
ror
jae
push
jg
ret
ss
and
or
je
push
xlat
cld
inc
push
stos
(bad)
(bad)
xchg
mov
stos
add
clc
and
xchg
(bad)
cld
xor
push
sbb
jns
adc
push
cwde
clc
repnz
or
mov
scas
out
jecxz
mov
fstp
adc
jnp
push
xchg
into
sub
gs
in
pop
test
cmp
shl
shr
rcl
pushf
add
cld
mov
xchg
out
and
scas
popf
test
fisubr
test
cmp
push
mov
and
icebp
cmp
push
fs
jo
jae
movs
ret
xchg
inc
mov
mov
sbb
dec
inc
mov
jnp
or
mov
bound
pop
imul
pop
call
aaa
pop
add
adc
retf
retf
out
dec
(bad)
mov
xchg
xor
shl
lods
xor
cmp
stos
neg
loop
add
jb
pop
mov
icebp
ror
jmp
enter
out
cli
xor
rcl
ds
mov
rol
jl
js
adc
mov
dec
call
mov
inc
daa
adc
aas
(bad)
in
dec
stc
mov
mov
or
inc
mov
cmp
dec
sbb
retf
mov
jmp
out
mov
mov
dec
push
in
pop
ins
popf
xchg
and
lock
cmps
mov
shr
out
mov
cmps
dec
jmp
push
add
inc
xchg
push
mov
pop
loop
addr16
gs
dec
push
movs
jae
movs
out
retf
js
xor
in
fdiv
pushf
cli
stc
push
jae
jg
mov
and
idiv
inc
lds
inc
int3
dec
push
lahf
sub
or
mov
into
ret
and
add
stos
jle
or
or
push
fnstsw
scas
enter
jecxz
xor
or
pop
sbb
cmp
fidivr
add
xchg
rcl
xor
(bad)
mov
adc
jns
stos
mov
daa
daa
sbb
sub
mov
xor
mov
popa
nop
outs
outs
or
pop
ror
(bad)
mov
sbb
dec
push
jecxz
or
adc
je
mov
jb
pop
and
sub
out
aam
fdiv
ins
loopne
in
xor
adc
out
pop
push
sub
push
cmps
inc
adc
gs
fsubr
push
xor
icebp
sti
mov
in
xchg
jmp
mov
jne
push
out
sub
mov
push
pop
and
sub
mov
arpl
push
jle
adc
aaa
mov
bound
hlt
push
aad
mov
xchg
mov
das
cmp
jbe
call
fcmovbe
out
adc
repnz
enter
push
inc
sub
outs
pop
fcomp
imul
sbb
in
mov
and
jb
sbb
std
or
push
pop
add
xor
push
adc
clc
add
shr
test
and
sub
cmc
test
retf
addr16
dec
enter
and
repz
rcr
test
cmp
sbb
mov
sbb
dec
lods
pop
sbb
xor
inc
leave
xchg
cmc
fcmovnb
pop
enter
jmp
stos
sbb
movs
call
mov
jae
mov
mov
fld
jnp
daa
dec
sti
pop
mov
sahf
pop
icebp
fwait
into
fadd
jno
jo
stos
lods
ret
inc
and
lds
xchg
dec
sub
cld
mov
cmp
xor
out
jbe
test
add
push
retf
xor
enter
(bad)
das
popa
loopne
mov
jnp
shl
and
iret
sub
test
les
pop
lahf
aaa
fwait
fs
es
lods
push
xor
ja
rcl
arpl
ins
mov
imul
or
out
dec
add
mov
mov
sbb
sbb
adc
adc
lahf
dec
mov
xchg
fstp
push
pop
fwait
xchg
lahf
ror
push
(bad)
sbb
aaa
or
or
outs
aad
bound
and
add
(bad)
cmovno
icebp
xchg
and
iret
ret
jns
push
lea
int3
push
out
fcomp
lds
icebp
adc
ins
sub
mov
mov
pop
sar
adc
xchg
push
ds
ret
add
sub
add
jbe
retf
dec
and
mov
push
or
arpl
xor
rcl
repz
push
jb
pop
int
fistp
pop
sar
pop
nop
jge
mov
mov
mov
and
cs
cmps
xchg
cmp
sbb
test
or
mov
or
fmul
aaa
lahf
mov
sbb
cwde
hlt
xor
pop
mov
loope
(bad)
xor
aam
sar
ja
xchg
xchg
test
outs
lea
push
push
mov
arpl
pop
push
xchg
jno
mov
cwde
fist
fwait
pushf
sar
shl
sbb
(bad)
enter
test
cli
push
mov
push
dec
xchg
cmp
aas
in
in
dec
ret
pop
or
call
(bad)
leave
xchg
jle
push
or
out
mov
shr
std
push
cmp
pusha
fbld
in
sbb
call
xor
and
sub
ret
dec
(bad)
dec
dec
repnz
xchg
mov
jb
scas
xor
inc
jmp
sahf
inc
in
push
jmp
sbb
jmp
jnp
push
cmp
repnz
add
fisttp
cmps
loopne
das
dec
or
pop
ins
pusha
test
(bad)
mov
test
add
ins
retf
mov
(bad)
adc
leave
push
adc
cmp
mov
push
dec
bound
ret
add
mov
hlt
dec
mov
fwait
dec
test
test
pop
xor
int3
xchg
out
pushf
cdq
push
movs
in
xchg
sar
cdq
cmp
inc
sar
jmp
test
xlat
inc
out
cmps
cmp
fbstp
es
jmp
enter
fist
out
and
and
out
call
adc
xchg
outs
clc
cmp
jge
mov
jmp
fcmove
mov
movs
ins
add
jbe
and
jmp
mov
nop
mov
or
out
ja
xlat
inc
adc
add
mov
int
push
pop
into
mov
shl
loope
test
(bad)
aas
push
sub
dec
dec
cwde
outs
xchg
fs
or
or
adc
sub
outs
repnz
dec
retf
scas
push
pop
jo
mov
and
fs
or
adc
loop
(bad)
out
mov
push
xor
jmp
aad
fwait
pop
mov
(bad)
mov
ins
xor
xchg
jmp
mov
arpl
xlat
and
inc
xor
cli
push
ins
sbb
push
jle
cmp
inc
xchg
add
pop
sahf
repnz
fwait
retf
mov
bound
sahf
out
sub
cmovne
pop
mov
sub
cmp
inc
add
mov
inc
pop
lds
cmp
ss
add
cmp
adc
push
stc
jnp
push
pop
jns
pop
sub
mov
(bad)
mov
dec
dec
cwde
and
pop
cld
dec
sahf
movs
cmps
inc
ret
enter
mov
repz
repnz
call
cld
xchg
les
sbb
dec
mov
inc
dec
sub
and
jne
push
movs
mov
fisub
(bad)
adc
push
dec
jmp
sub
sub
pop
(bad)
jb
or
inc
popf
jmp
retf
test
and
pop
ins
test
in
sahf
xchg
inc
shr
add
cmps
pop
aam
fmul
pop
mov
mov
dec
adc
mov
test
int
pusha
loopne
shl
retf
daa
shr
fbstp
jecxz
icebp
mov
jg
and
add
arpl
lock
sub
icebp
stos
lods
mov
test
in
mov
jne
in
call
ja
mov
push
xchg
ja
or
xchg
lods
loope
ds
fsub
aas
cmp
pop
jl
inc
enter
adc
or
xor
(bad)
fldenv
sub
popa
dec
push
es
jo
and
ret
shr
cmp
scas
sub
mov
leave
xor
gs
or
ret
pop
cmps
dec
push
jle
inc
adc
xor
les
cli
inc
cmps
mov
sbb
push
das
scas
and
mov
pop
jp
ret
gs
push
adc
mov
arpl
cmp
fmul
push
loop
loopne
push
mov
js
push
mov
loop
test
out
sbb
jmp
popa
mov
or
dec
fcom
push
cmc
(bad)
jge
popa
rcr
xchg
ret
neg
pop
mov
je
dec
movs
jecxz
mov
stos
shl
adc
mov
jno
cmps
dec
sbb
jno
jge
out
jmp
aas
(bad)
dec
jb
mov
(bad)
enter
xchg
ins
(bad)
mov
(bad)
dec
and
mov
mov
js
inc
stc
lods
inc
sbb
xchg
pushf
and
repnz
adc
and
cmp
das
ret
mov
rcl
movs
std
shl
xchg
outs
xchg
(bad)
int3
sbb
loop
jp
lods
mov
push
sub
dec
push
or
cmp
push
test
sub
cmc
jns
je
sub
jno
add
cmp
shl
sbb
scas
movs
shr
nop
int
std
and
xor
adc
stos
daa
jb
cmps
jge
into
jmp
sub
movs
dec
xchg
adc
loopne
and
sub
adc
popa
adc
and
test
loop
into
pop
mov
mov
(bad)
mov
loop
retf
pop
jo
popf
lock
mov
or
mov
(bad)
outs
mov
dec
outs
dec
cmp
mov
jne
cdq
cwde
and
dec
xchg
xchg
fdiv
dec
sbb
add
rcl
pop
xchg
aas
xchg
cmps
add
jae
ds
mov
sti
in
or
cmp
in
mov
mov
xor
cwde
push
into
xchg
mov
cmp
(bad)
jno
ja
sub
test
arpl
js
and
aaa
mov
call
mov
in
xchg
sub
or
test
sbb
jge
enter
adc
cmps
hlt
mov
mov
ret
mov
cmp
mov
push
and
dec
inc
arpl
lea
cwde
jge
mov
mov
mov
(bad)
test
(bad)
jmp
shr
sbb
ret
dec
dec
jg
jg
in
and
imul
mov
mov
imul
cmc
add
or
dec
sbb
rol
cdq
xor
js
xor
aad
or
mov
jle
sbb
dec
sbb
dec
test
and
jg
ret
dec
out
mov
retf
movs
popa
pop
icebp
pushf
fadd
int3
xor
cmps
xlat
out
stos
mov
push
push
cmp
xchg
fadd
outs
inc
int3
pop
aam
mov
ins
mov
pop
xchg
cdq
adc
scas
mov
or
pusha
retf
sub
sub
fdivr
aaa
cmp
enter
or
sar
jl
div
jae
fiadd
or
in
jae
aas
push
sub
inc
cmp
pop
fmul
dec
lock
xchg
inc
add
mov
cwde
sbb
mov
shr
fwait
aad
adc
dec
jo
ror
push
pop
sbb
xchg
or
cwde
leave
dec
in
test
hlt
sbb
in
fwait
scas
jno
aaa
xadd
and
or
mov
movs
push
jnp
pop
lods
xchg
cli
jecxz
or
adc
and
push
cwde
mov
jo
lea
gs
dec
es
and
or
dec
pop
popf
fisub
xor
jb
add
movs
cld
and
or
movs
pop
daa
mov
inc
mov
clc
sahf
ja
popa
in
jp
fnsetpm(287
dec
sahf
iret
inc
fiadd
shl
mov
mov
fyl2xp1
mov
je
out
in
call
push
cmp
cmp
push
xchg
(bad)
sub
test
dec
dec
jg
retf
mov
stc
mov
mov
cld
sub
pop
fild
dec
jnp
inc
out
sbb
nop
pop
cwde
popa
add
fsubr
mov
push
imul
punpcklbw
xor
or
add
cli
sub
test
inc
adc
pop
outs
(bad)
cmc
in
setle
or
jge
mov
dec
or
push
test
push
push
add
movs
inc
cmp
jle
adc
and
xchg
adc
mov
movs
das
jg
test
arpl
ret
stc
arpl
cmps
push
ret
dec
out
outs
mov
test
mov
inc
or
leave
pop
icebp
cmps
jnp
xchg
push
push
aaa
int
mov
loope
push
dec
lods
cmc
not
mov
out
call
inc
add
cmps
push
lea
ins
jno
lods
xor
and
xchg
jmp
imul
xor
inc
jecxz
sahf
int3
fwait
pop
inc
mov
jle
pop
sub
inc
je
rcl
dec
jno
daa
out
add
inc
cmc
cmps
add
retf
cmp
int3
inc
pop
enter
je
jo
fcomi
sbb
out
or
xchg
sub
jns
arpl
mov
sar
cmp
xor
push
in
aad
rcl
inc
push
test
aaa
mov
mov
int3
fiadd
ins
fdivr
scas
jae
rol
inc
fsub
aaa
loopne
(bad)
mov
pushf
inc
push
push
shl
imul
imul
xor
leave
xor
mov
cmp
fiadd
lock
pop
push
xor
ja
fnstcw
xor
mov
jmp
bound
loop
pushf
ins
ficom
xor
das
shl
bound
pop
add
dec
aam
add
in
mov
inc
hlt
push
mov
mov
mov
stos
and
(bad)
mov
retf
mov
jnp
cs
sbb
data16
cmps
sbb
std
cdq
xchg
xor
and
jns
out
shl
scas
push
xchg
inc
cmps
adc
jb
push
rcl
inc
ds
leave
in
cld
(bad)
push
fdivr
gs
data16
sha1rnds4
sar
pusha
sbb
ja
loop
cmps
inc
lock
clc
push
inc
inc
ret
jb
(bad)
test
mov
jmp
pop
repnz
mov
xlat
aaa
sbb
daa
and
mov
lods
pop
inc
cmp
mov
inc
jp
jne
aad
jmp
dec
shr
add
lea
sub
adc
out
mov
cmp
push
mov
mov
add
cmp
mov
xor
xchg
scas
sbb
rcl
pop
ret
(bad)
pop
inc
shr
or
jmp
mov
mov
mov
stos
shr
(bad)
jmp
mov
rcl
call
je
int
dec
xor
imul
push
lea
int
movs
mov
je
sahf
ret
fwait
jbe
sar
test
loope
ja
adc
mov
shr
add
repz
or
arpl
je
push
xchg
xchg
aaa
sub
inc
cli
mov
mov
jno
js
cs
les
rcr
push
jbe
xor
push
add
bnd
out
jns
retf
sbb
out
and
scas
xchg
iret
push
jo
(bad)
pop
es
adc
rcr
xor
daa
pop
addr16
pop
adc
cmp
lahf
lods
je
dec
and
out
stos
test
shl
jecxz
xchg
pushf
mov
inc
or
adc
adc
jae
push
and
pop
fcmovnu
push
inc
das
mov
xchg
push
add
mov
add
jle
cmps
dec
(bad)
add
shl
or
retf
into
and
xchg
mov
cmp
xchg
dec
pop
int
ror
retf
pop
ret
fmul
adc
pop
(bad)
xor
mov
in
fucomi
xor
jne
push
test
out
mov
int3
sti
jl
loop
xor
push
dec
pop
xor
lock
jge
push
sub
pop
out
mov
sbb
scas
bound
pop
(bad)
movs
ins
not
pop
mov
pushf
cwde
into
shl
and
xchg
int3
jns
fdiv
les
fstp
dec
jp
cmc
xor
inc
push
mov
or
sbb
sub
or
movs
sti
jp
shr
outs
inc
or
mov
dec
xchg
movs
mov
popa
mov
lods
ret
sbb
mov
add
rcl
test
push
rcr
ds
xchg
and
test
add
sub
daa
sbb
add
add
sub
(bad)
ret
ja
adc
pop
movs
ss
pop
xor
sub
xchg
mov
inc
iret
or
add
iret
or
xchg
pop
or
shr
test
stc
inc
mul
adc
iret
xor
dec
pop
lods
sbb
jno
mov
stos
call
jno
jbe
ret
push
outs
jg
add
jg
lods
jmp
and
rcl
(bad)
pop
lea
in
push
ror
retf
mov
or
or
mov
hlt
dec
sbb
rcr
lahf
adc
es
(bad)
jg
xchg
or
out
push
data16
mov
fxch
cmc
cmp
mov
into
jae
and
in
shl
cmp
jbe
int3
inc
mov
mov
test
pushf
retf
or
jb
ins
jmp
sbb
inc
xchg
(bad)
outs
mov
in
mov
adc
ficom
sbb
sbb
leave
hlt
adc
or
inc
dec
push
push
and
rol
jae
xor
jle
stos
into
scas
test
push
retf
xor
jo
repz
out
push
mov
mov
dec
cld
adc
out
or
push
xor
xchg
fcmovu
inc
inc
nop
jge
test
dec
xor
add
xchg
add
adc
mov
mov
push
add
mov
mov
stos
dec
push
imul
das
in
mov
bound
xchg
add
jmp
sbb
xchg
push
fwait
popa
push
mov
into
jnp
mov
outs
mov
dec
mov
je
outs
mov
dec
cli
adc
fwait
jp
mov
fsub
sub
fisttp
cmp
fdivrp
jecxz
add
(bad)
pop
lds
add
sub
popf
out
fild
or
dec
popf
xlat
(bad)
add
xchg
sahf
inc
ja
in
xor
jno
mov
push
dec
dec
cld
jecxz
arpl
dec
mov
sar
movs
(bad)
in
scas
xor
mov
add
je
jmp
rcr
fimul
(bad)
push
pop
push
pop
mov
das
stc
xor
add
pop
ret
pop
loope
and
cmp
mov
mov
jne
mov
sub
add
mov
es
and
cwde
xor
add
adc
sbb
lea
in
add
mov
dec
jmp
xor
das
cmc
adc
in
jns
aad
sub
mul
mov
out
mov
mov
jg
rcr
aad
adc
jp
in
xor
ret
and
leave
lods
in
mov
add
mov
popa
into
xchg
ror
int
pop
jae
sahf
fs
pop
adc
xchg
jle
test
pop
jns
ja
loop
(bad)
aam
out
mov
pop
cdq
xchg
xchg
dec
lods
jge
inc
adc
inc
test
sub
inc
inc
push
push
fadd
loop
mul
or
daa
pop
cmp
mov
jecxz
scas
shl
jmp
xchg
push
les
push
es
push
fadd
aas
fist
div
das
inc
mov
pushf
mov
fcomp
mov
movs
sub
aaa
fisttp
mov
sahf
stos
or
int
movs
shl
popa
sub
loopne
mov
push
cs
mov
sbb
sub
add
mov
jmp
fld
pop
adc
data16
cmc
mov
and
xlat
sub
or
push
sub
jecxz
sti
mov
add
rcr
xlat
in
out
int3
out
jp
sar
loopne
mov
shl
dec
xchg
dec
mov
jle
mov
imul
xor
xchg
cld
jp
int
pop
cmps
xor
jecxz
test
fmul
stos
into
mov
imul
mov
test
cmp
(bad)
call
cmp
je
sbb
pop
fwait
push
mov
std
push
lods
mov
out
pop
js
mov
loop
jl
pusha
xor
dec
popa
test
inc
loopne
fwait
aaa
sub
out
lods
push
int
fwait
into
outs
shl
inc
mov
enter
inc
popa
add
mov
movs
lahf
cmc
xor
repz
sar
imul
aam
adc
pop
cdq
jp
aad
mov
in
out
in
pop
cmp
xchg
retf
or
aam
mov
fwait
jecxz
jnp
pop
movs
fist
imul
mov
fimul
and
lea
and
mov
call
xchg
xor
add
in
loopne
pop
bnd
push
pop
xchg
jo
pop
pop
mov
cwde
mov
call
into
inc
push
xchg
mov
in
daa
sub
adc
clc
sub
adc
sbb
dec
jmp
(bad)
fsub
add
and
jg
scas
mov
sbb
push
in
sahf
xchg
fnstenv
movs
jl
pusha
push
push
aas
pop
xchg
ret
pop
pop
sahf
movs
movs
sbb
jp
adc
jb
aas
ds
mov
xchg
enter
jecxz
std
daa
lods
cmp
push
cmps
call
in
lea
inc
fnstenv
movs
ret
ds
mov
shl
mov
xchg
and
and
imul
js
adc
xchg
enter
movs
cs
lahf
mov
mov
mov
xor
loop
and
jp
out
sti
cmp
loop
cmp
inc
pop
shl
mov
push
movs
jmp
repnz
cwde
cdq
jl
outs
test
or
ffreep
sbb
cmps
loopne
xchg
inc
push
out
pop
inc
addr16
inc
repnz
jmp
fild
pop
xor
jmp
cmc
stc
and
lds
leave
fist
or
aaa
cmc
mov
and
inc
inc
jmp
(bad)
scas
or
repnz
dec
xor
repnz
cs
pusha
in
ret
imul
sbb
das
xlat
test
sbb
pop
mov
test
jl
sub
pop
icebp
cmp
shl
mov
sbb
je
aas
in
adc
rol
pop
stc
and
mov
test
sar
fld
adc
xor
movs
(bad)
in
dec
popa
repnz
(bad)
call
clc
ja
sub
jle
mov
xchg
mov
jo
fidiv
jmp
and
in
pushf
fs
test
add
test
adc
cmp
arpl
fdiv
cmp
xchg
add
out
jp
cmc
es
mov
cmps
sar
(bad)
jnp
jb
mov
inc
dec
pop
iret
jo
outs
call
mov
inc
in
cwde
sbb
shr
repz
cmps
mov
mov
daa
and
dec
cmps
xchg
adc
adc
sbb
jne
out
dec
lods
es
dec
sti
hlt
sub
jns
mov
out
mov
mov
lea
ins
mov
or
jo
daa
push
mov
rcl
retf
frstor
add
or
fdiv
aas
fldlg2
xchg
sub
adc
push
xor
adc
ins
push
push
shr
xchg
mov
cld
fsubr
mov
mov
into
sub
push
retf
enter
sub
dec
pop
fcomp
mov
pop
xchg
cmc
jbe
pop
dec
push
jno
retf
jno
cmc
bound
mov
add
cmps
inc
inc
inc
pcmpgtd
(bad)
sbb
out
jge
pop
sub
imul
mov
and
arpl
pop
(bad)
mov
push
test
jnp
and
dec
or
mov
nop
lods
mov
pushf
sti
mov
les
xor
xor
test
fisubr
mov
stos
pusha
inc
inc
xlat
dec
push
push
ja
ret
retf
push
xchg
clc
or
mov
or
adc
jne
ins
loope
mov
mov
fucom
sbb
push
imul
adc
and
shr
dec
jbe
stc
xchg
sub
je
cmps
sahf
mov
rol
out
xlat
adc
mov
jo
xchg
push
arpl
shr
sbb
sub
and
xor
sub
mov
aad
mov
ds
retf
outs
and
data16
loope
xor
push
in
and
dec
adc
out
lds
mov
std
mov
jns
push
jo
and
shl
mov
jae
in
call
pop
or
inc
cmc
test
add
hlt
int3
add
pop
mov
xchg
fist
cmp
lahf
xor
fcom
or
xor
or
movs
xlat
jmp
rol
ds
rcr
dec
mov
aas
bnd
ja
inc
mul
ds
lahf
mov
sbb
cs
and
sar
retf
cli
shr
out
push
andps
mov
push
dec
push
mov
mov
and
sbb
jnp
pop
and
mov
(bad)
icebp
push
out
loope
dec
pop
fsubr
mov
push
lds
jnp
stos
dec
sub
fs
shr
call
arpl
sbb
push
(bad)
pop
sbb
jb
test
stc
sub
test
pop
lea
mov
push
jne
pop
ins
icebp
xchg
fldenv
jns
mov
inc
add
daa
xchg
and
adc
mov
rcl
sub
push
mov
sahf
jo
js
stc
shl
sub
es
dec
mov
push
xor
dec
and
icebp
dec
mov
scas
xor
adc
sub
fidiv
call
in
adc
cmps
in
test
sub
xor
pusha
imul
jmp
mov
mov
aaa
(bad)
gs
pop
cmp
sbb
addr16
aas
or
fld
jo
repz
enter
xor
jns
(bad)
pop
(bad)
dec
cmps
inc
lds
inc
cld
xor
or
jnp
and
adc
cmc
xchg
scas
push
es
retf
test
sub
movs
stos
frndint
mov
xchg
xchg
pop
mov
lods
pop
mov
or
cmps
mov
inc
dec
rcr
jno
inc
daa
test
jo
rcr
int3
cmp
push
ret
push
fild
push
inc
cmp
pop
(bad)
mov
lock
jle
jmp
dec
jo
(bad)
pop
lea
push
outs
pop
retf
inc
shr
jp
dec
add
(bad)
mov
repz
arpl
rcr
lahf
jmp
mov
cmp
mov
dec
fist
mov
mov
jl
xor
loop
sbb
jecxz
mov
inc
cmp
arpl
mov
push
(bad)
loopne
scas
add
test
(bad)
call
cmp
sub
das
loop
pop
fsub
mov
adc
lahf
push
sub
pop
cwde
std
dec
push
in
inc
in
jmp
push
mov
(bad)
retf
aaa
xrelease
clc
sbb
outs
cld
repnz
dec
jg
les
fsubr
and
ror
mov
jbe
loopne
cmp
jbe
stos
sub
lahf
arpl
stos
aaa
fcom
jmp
or
jnp
aas
outs
mov
test
push
sbb
ins
sbb
outs
sbb
sbb
cdq
mov
call
mov
sbb
leave
mov
inc
push
call
cmc
fisttp
mov
(bad)
jmp
pop
(bad)
xchg
loopne
xchg
icebp
sbb
in
stos
mov
fld
retf
test
ret
out
inc
shl
push
and
cmp
shr
xor
push
in
push
xchg
adc
popa
(bad)
cwde
mov
dec
push
cmp
sbb
in
(bad)
ficom
push
mov
shl
ss
mov
inc
cld
enter
outs
in
push
cmp
outs
mov
bound
test
xchg
mov
in
cmc
aaa
xor
loop
adc
dec
sti
in
fs
vaddsd
(bad)
call
sbb
jp
mov
mov
jns
(bad)
pop
imul
xchg
stos
add
add
lds
adc
lods
cwde
mov
and
xchg
ret
mov
push
cmp
jecxz
arpl
push
test
inc
adc
jne
mov
fcmovne
cmp
mov
cmp
push
cmp
gs
pop
adc
xor
mov
ficomp
out
sbb
xor
fstp
dec
xchg
lds
mov
dec
idiv
jge
inc
pop
xor
push
mov
mov
push
mov
xchg
mov
shl
xlat
imul
mov
jmp
push
in
test
push
adc
aam
adc
mov
imul
mov
nop
pop
inc
sti
fidivr
rcr
out
leave
std
inc
sub
ss
jb
pop
cmp
mov
mov
sub
lds
and
jmp
or
daa
add
fwait
xor
push
jmp
iret
inc
mov
sub
add
and
ja
(bad)
jmp
push
push
mov
cdq
movs
movs
scas
mov
and
in
pop
data16
cwde
xchg
jmp
sbb
mov
loope
sub
mov
icebp
call
outs
xor
mov
ret
and
scas
mov
jmp
test
test
(bad)
sbb
inc
add
lock
outs
arpl
sub
jno
sub
xor
or
data16
inc
test
ror
mov
push
retf
emms
xor
bound
fwait
scas
scas
mov
aad
cdq
mov
rcl
mov
repz
add
and
jns
pop
cld
sbb
mov
xchg
shr
mov
jnp
dec
sbb
mov
mov
pop
xor
push
pop
int3
into
xchg
sbb
sub
mov
jb
jmp
scas
and
xor
fidivr
push
sub
aad
pop
inc
add
es
test
dec
ja
daa
jo
movs
sub
(bad)
call
inc
arpl
ret
inc
inc
lahf
ins
stos
fdivr
(bad)
lea
push
xchg
sub
imul
push
mov
adc
jle
mov
mov
aad
fwait
push
xor
in
sub
xchg
fnstsw
dec
jbe
loop
pop
bound
les
add
fld
mov
daa
pop
aad
jno
ret
mov
dec
jb
add
(bad)
push
jo
sbb
or
js
mov
jl
mov
std
(bad)
les
call
shr
lods
adc
dec
cli
in
mov
mov
or
pop
pushf
push
xchg
hlt
mov
movups
std
sub
jg
jmp
pushf
pop
std
(bad)
in
lock
mov
xor
inc
and
hlt
enter
sub
cmp
cdq
cmc
push
inc
loopne
cmps
(bad)
mov
push
test
pop
(bad)
xor
mov
push
scas
or
arpl
movs
sub
repz
pandn
out
lea
or
inc
daa
push
dec
dec
enter
call
mov
mov
push
dec
mov
pushf
cld
adc
out
cmp
rcl
js
dec
ja
(bad)
call
fmul
mov
inc
cmp
retf
std
shl
(bad)
das
sub
add
(bad)
mov
movs
int3
jb
pop
out
push
mov
mov
jecxz
(bad)
inc
jae
pop
add
inc
out
mov
xchg
push
les
xchg
xor
cli
add
mov
sbb
xor
mov
stc
sub
fisttp
pop
xchg
arpl
pop
add
jmp
sub
ja
dec
ror
in
mov
adc
pusha
mov
pop
stos
fmul
mov
mov
scas
cld
jbe
xchg
push
jl
sbb
jmp
mov
and
mov
es
std
daa
mov
mov
jmp
fs
xlat
imul
mov
clc
mov
adc
add
push
mov
cmp
dec
sub
xor
call
cdq
add
and
sbb
pop
cld
addr16
push
mov
push
push
inc
(bad)
jmp
sub
aaa
movups
lahf
rcr
aad
leave
lods
daa
mov
sbb
scas
mov
lock
pop
mov
rcr
movs
adc
push
test
sbb
mov
inc
ins
or
jge
icebp
jne
add
and
loop
cmp
sbb
lock
into
bound
fwait
(bad)
mov
aam
xlat
imul
imul
ffreep
std
mov
jg
mov
aad
mov
push
adc
clc
adc
dec
shl
cmp
ror
xor
aaa
mov
and
aas
push
jg
dec
sub
sub
jb
call
adc
je
cli
bound
fistp
inc
jbe
pop
out
fs
pop
mov
sbb
pop
inc
daa
test
je
mov
sub
push
ins
inc
icebp
daa
mov
(bad)
aam
xchg
xlat
xor
push
stos
mov
rcl
ror
xchg
cwde
dec
mov
mov
xchg
cmps
push
jecxz
je
xchg
or
push
jmp
aas
add
and
dec
push
cmp
xor
mov
inc
mov
in
shl
(bad)
gs
add
test
xchg
add
es
pop
mov
fild
jge
(bad)
shr
sbb
mov
or
adc
xchg
mov
sbb
xor
jno
(bad)
push
call
sub
ret
(bad)
lods
sbb
cmp
addr16
mov
sti
mov
jbe
outs
ret
dec
out
push
dec
iret
push
test
mov
push
mov
arpl
and
push
lods
rol
ret
sbb
mov
fisubr
cld
std
cs
sub
jle
cli
inc
mov
sub
jg
mov
movs
xchg
rcr
pop
and
data16
sub
imul
ins
stc
pop
cmps
loope
iret
mov
cmps
stc
repz
push
dec
das
add
push
imul
leave
sbb
mov
and
jl
scas
pop
movs
outs
mov
pop
dec
jns
cmp
sub
out
ret
imul
movs
loopne
cmp
loop
push
or
js
in
pushf
gs
(bad)
(bad)
cdq
and
dec
mov
jl
lock
sub
mov
sub
mov
add
push
pop
mov
inc
in
or
daa
nop
mov
test
push
mov
dec
gs
out
or
inc
mov
je
cmc
popf
bnd
push
mov
es
aad
adc
inc
sbb
mov
pusha
repz
push
or
stc
aaa
out
pushf
(bad)
ins
out
cwde
push
and
mov
adc
mov
xor
ret
dec
retf
shr
dec
mov
bound
cdq
and
scas
ins
mov
stc
loopne
fld
ficomp
and
pusha
nop
lods
mov
and
sub
sub
adc
cmps
lock
xor
imul
or
mov
cdq
jmp
repnz
int
and
add
pop
outs
mov
adc
xchg
inc
xchg
popa
icebp
movs
sbb
mov
xor
mov
dec
aas
ins
fidivr
sub
mov
push
adc
jno
std
inc
inc
mov
mov
lods
mov
mov
mov
dec
adc
mov
ds
dec
outs
cmp
dec
xchg
inc
ss
add
ret
popa
and
daa
xlat
jge
push
ja
cmp
xchg
arpl
push
ins
addr16
pop
hlt
mov
push
xor
inc
test
das
call
out
jle
pop
int3
jno
hlt
jnp
jmp
sbb
and
cli
sub
xchg
add
leave
inc
jecxz
imul
imul
mov
jno
pop
mov
add
push
fst
clc
ror
dec
ins
inc
mov
mov
pop
int
fprem
lahf
sbb
pop
out
push
xor
pusha
mov
movs
pop
test
bswap
mov
ror
mov
rcr
jmp
scas
je
mov
pop
sbb
int
fisubr
push
sub
and
outs
retf
loop
push
mov
je
loop
pop
xchg
sub
ins
mov
jg
imul
or
adc
call
movs
adc
mov
dec
imul
mov
push
ret
lock
pop
js
or
xchg
jle
adc
jmp
int3
cwde
xlat
mov
lea
cmp
or
stos
pop
inc
loopne
xor
arpl
std
(bad)
dec
ins
test
aam
xchg
push
outs
sbb
add
in
out
test
stos
out
mov
out
test
call
jge
cli
xlat
fnstenv
aas
(bad)
rol
add
aad
test
mov
or
xor
in
lods
gs
mov
outs
sub
sub
les
add
sbb
push
mov
call
mov
cmp
push
inc
arpl
jp
cmc
call
jg
lds
sub
cmc
push
data16
shl
mov
in
dec
in
movs
sub
jae
(bad)
jmp
icebp
loop
pop
stos
pop
fucom
movs
push
mov
stos
pop
les
cmp
in
or
repnz
or
fsubr
je
sahf
add
icebp
sahf
cld
mov
lock
sub
not
fs
mov
xchg
pop
pop
sub
xor
icebp
adc
push
shl
pusha
leave
stc
jns
or
mov
enter
jle
addr16
sbb
(bad)
xchg
xchg
mov
and
push
dec
mov
into
fiadd
pushf
clc
call
sti
aad
mov
cdq
aam
imul
outs
les
mov
pop
sahf
dec
xor
push
cmp
icebp
add
iret
mov
movs
cli
jns
outs
int
inc
cmp
sbb
out
aaa
inc
lock
xchg
es
sbb
out
fs
scas
mov
mov
xchg
ja
inc
(bad)
jge
or
ret
and
push
aad
imul
mov
push
dec
xor
adc
push
pop
call
cs
(bad)
cwde
mov
jecxz
push
gs
add
pushw
adc
sub
mov
cli
ins
push
mov
sahf
stc
jns
(bad)
jmp
jne
repz
fld
out
es
or
or
jge
and
out
mov
(bad)
adc
inc
pushf
in
pop
out
arpl
ins
dec
std
dec
mov
out
push
mov
inc
and
ss
icebp
inc
xor
jmp
pop
(bad)
icebp
push
leave
leave
push
jno
jns
mov
or
jns
push
pop
mov
dec
jl
rcr
mov
bt
call
pop
leave
repz
fisttp
sbb
(bad)
sub
fisttp
mov
xor
mov
inc
bound
sbb
jecxz
push
(bad)
fcom
test
adc
cli
retf
fwait
or
(bad)
jmp
push
fnstenv
test
sbb
ret
mov
cmp
sbb
pop
in
xlat
mov
pop
cli
jle
shl
inc
out
mov
(bad)
xchg
dec
movs
add
push
test
into
lea
adc
(bad)
mov
mov
and
mov
std
setns
test
(bad)
(bad)
jmp
movs
and
sub
pop
or
lods
or
fnstenv
pushf
hlt
dec
mov
and
js
xor
or
adc
mov
dec
lahf
out
fs
xchg
pop
jo
popa
aam
call
in
test
mov
fwait
int
(bad)
fadd
rcl
movs
shl
aad
or
push
jg
sub
loope
pop
inc
pop
dec
stos
in
dec
cmp
into
clc
inc
adc
(bad)
mov
mov
push
out
sub
and
fistp
xor
mov
out
push
fdiv
mov
jge
mov
lea
icebp
sahf
cmps
leave
pop
dec
xchg
repnz
and
sbb
sub
imul
jns
movs
xor
imul
add
sbb
pop
inc
test
nop
add
(bad)
(bad)
clc
pop
jmp
daa
sub
mov
ss
gs
in
je
cmp
jns
js
leave
movzx
out
ds
push
clc
scas
iret
movs
sub
xor
and
xor
inc
ins
repz
xor
lods
lahf
int3
add
pop
fld
push
fadd
xchg
pop
mov
push
pop
cmc
std
out
popa
in
fld
test
xor
lahf
xchg
mov
js
or
mov
inc
cmp
inc
(bad)
pop
mov
mov
js
push
pop
push
jg
je
jl
cmp
out
xlat
inc
sahf
and
and
out
sub
fst
lods
xchg
mov
aas
ins
mov
out
fisubr
cld
sti
cmp
addr16
div
ret
out
popf
cmps
sbb
push
mov
adc
lds
call
pop
and
fild
scas
xchg
fucomi
jge
mov
aaa
pop
stos
shr
and
xchg
scas
scas
aaa
or
mov
rcl
loop
push
pushf
pop
jge
mov
and
xchg
pop
jmp
outs
dec
in
(bad)
(bad)
cmps
dec
pop
adc
mov
cmp
mov
retf
xchg
addr16
and
push
pop
outs
and
jnp
rcl
push
and
jbe
cmp
stos
sub
inc
call
adc
bound
mov
ins
xchg
xchg
cs
xor
pop
add
mov
in
mov
fisubr
jl
mov
mov
mov
xchg
inc
jbe
outs
sub
fs
jg
lock
xor
add
adc
and
dec
push
jge
jmp
sub
call
mov
les
adc
mov
or
fdiv
push
in
add
or
sub
inc
mov
push
(bad)
push
and
mov
jne
dec
jns
jno
pop
shr
nop
dec
data16
sub
(bad)
xchg
jp
lods
bound
mov
stos
sbb
aam
cli
dec
fbstp
popf
mov
cwde
or
sbb
jmp
adc
and
jle
outs
mov
aaa
or
push
sub
sbb
in
ret
adc
popa
inc
or
sub
fnstsw
je
dec
mov
(bad)
ret
sti
pop
xor
out
aaa
push
adc
inc
int3
(bad)
sbb
jo
add
sub
xchg
into
sbb
data16
add
sub
inc
fwait
test
dec
ret
aam
cmp
sahf
cmp
scas
sub
and
xchg
call
je
(bad)
fwait
pop
rol
fwait
dec
mov
imul
scas
jo
in
push
inc
aas
inc
sub
js
aaa
or
and
cwde
ret
and
jmp
daa
sub
sub
pop
popf
xor
add
and
(bad)
adc
adc
jmp
dec
and
push
jae
mov
out
fwait
(bad)
fist
xor
imul
cmps
pop
cmp
shl
fnstcw
lock
aam
and
movs
adc
lahf
cmp
arpl
xchg
je
adc
push
ror
mov
stos
cmps
inc
sub
cmp
mov
ret
cmp
lods
call
lahf
push
pusha
test
and
mov
push
adc
outs
(bad)
dec
or
xor
sub
mov
retf
jmp
push
xor
test
push
adc
jl
stc
dec
push
or
dec
mov
fild
cwde
inc
hlt
inc
shr
in
mov
test
or
xchg
lods
mov
dec
xchg
jl
push
sub
sbb
lea
mov
push
pop
push
mov
push
aad
pop
in
repnz
push
out
mov
imul
in
in
gs
sti
mov
adc
sbb
jp
push
lods
dec
(bad)
adc
test
jne
and
and
(bad)
sub
cmp
ja
ss
iret
(bad)
test
mov
dec
mov
jle
mul
sbb
push
and
dec
xchg
mov
movs
test
gs
add
sti
cwde
aaa
jle
sbb
nop
fcmovb
lahf
cs
in
jle
add
scas
mov
aaa
jne
add
std
jnp
imul
lods
sub
push
lahf
jne
mov
scas
test
mov
sbb
dec
mov
sub
pop
sbb
push
adc
aaa
and
loope
add
inc
dec
bound
cs
add
int3
xchg
adc
or
cli
cmp
test
dec
dec
loope
movs
and
pop
pusha
addr16
fwait
sub
push
xchg
cmp
jns
mov
data16
cmp
jae
pushf
jmp
xchg
push
lahf
(bad)
out
dec
mov
sub
or
cmp
movs
fdivr
std
ss
pop
and
mul
cmp
inc
fs
ja
sub
mov
loope
addr16
(bad)
in
push
aad
mov
fnsetpm(287
clc
bound
or
jne
mov
jmp
test
retf
sub
loop
mov
fwait
enter
mov
and
dec
pop
loope
or
aaa
push
dec
scas
sub
ds
test
cmps
mov
jne
(bad)
pop
and
enter
aaa
mov
push
mov
xchg
call
jl
mul
ret
cmp
ret
add
nop
mov
shl
or
das
dec
cmp
cli
ins
and
mov
(bad)
and
push
lea
inc
cmp
dec
xchg
jmp
aam
es
ja
std
xor
addr16
ja
sub
test
aam
inc
iret
cmp
(bad)
and
xor
xor
stc
loope
pusha
sub
push
add
mov
mov
pop
sbb
cmc
and
iret
xchg
cmps
sti
adc
push
movs
sar
and
sub
jno
or
leave
xchg
cmps
fstp
push
xchg
mov
jle
mov
in
shl
sub
std
xor
pop
imul
shl
inc
mov
in
pop
push
adc
xchg
mov
retf
pushf
mul
mov
sub
call
cmp
xor
das
cmp
cs
mov
add
jl
enter
fwait
fwait
dec
sahf
mov
xor
or
clc
loope
bound
add
in
mov
mov
mov
and
ja
das
data16
pop
hlt
imul
dec
pushf
sbb
mov
cmp
daa
fsub
jmp
jg
mov
mov
or
(bad)
outs
pushf
jmp
adc
call
(bad)
jne
aad
daa
je
add
iret
xor
or
adc
add
out
dec
repz
pop
or
inc
(bad)
out
inc
loopne
cmp
mov
add
jge
mov
push
inc
dec
enter
dec
cdq
sbb
xchg
mov
in
bound
and
mov
add
leave
push
test
mov
xlat
sub
out
fst
ret
scas
ss
shl
add
cdq
or
xor
in
xchg
pop
or
push
hlt
push
xor
add
fwait
pop
lea
pop
test
arpl
nop
mov
lds
cmp
jo
sub
mov
mov
stos
jmp
cmp
and
std
push
jp
or
retf
pushf
and
push
jno
cmc
aam
push
add
jge
rol
and
adc
cdq
icebp
outs
jge
ret
loop
or
call
mov
dec
mov
les
pop
int3
mov
out
and
jp
test
fs
fist
cmp
inc
stos
test
or
repz
aaa
cmp
retf
inc
sbb
fadd
fisub
shl
ins
pop
or
pop
and
in
and
cli
pop
dec
imul
in
inc
dec
mov
ins
inc
movs
or
into
pop
xor
mov
js
aas
mov
fldcw
aas
inc
push
jp
retf
push
sub
pusha
mov
cmp
mov
mov
xor
ja
adc
add
or
outs
xchg
es
cld
push
mov
add
scas
ja
std
sub
xchg
push
add
xchg
loop
or
iret
into
mov
adc
js
or
pop
cli
add
cmp
lea
jae
push
ins
daa
sti
icebp
pop
mov
xchg
sbb
imul
sub
dec
(bad)
mov
pop
inc
pushf
pop
cmp
(bad)
repz
mov
fistp
xchg
stos
jmp
cs
ds
lods
pop
pop
not
call
es
scas
test
(bad)
dec
or
dec
(bad)
hlt
push
les
out
jnp
mov
outs
ret
cmp
in
jo
mov
out
lahf
adc
xor
sbb
pop
mov
test
dec
and
inc
cmp
sbb
jns
test
and
dec
and
mov
sub
lahf
push
mov
sub
cmp
movs
imul
pop
push
pop
xchg
(bad)
ds
adc
sbb
jbe
nop
fadd
stos
xchg
sbb
xchg
sbb
loope
imul
jp
xchg
jg
xchg
mov
test
mov
scas
xor
mov
sbb
dec
sahf
push
test
pop
mov
in
stos
adc
(bad)
js
jg
or
adc
cmp
cwde
jecxz
cs
ror
lea
mov
sbb
popf
leave
mov
mov
mov
mov
cmp
xchg
out
xchg
ret
pop
sbb
dec
lahf
jae
add
movhps
sar
pusha
adc
std
pop
push
dec
mov
fist
mov
dec
jle
push
inc
fwait
loope
adc
xor
test
push
rol
push
stos
mov
mov
imul
xchg
sub
fnstcw
cmp
(bad)
mov
sbb
(bad)
jnp
cli
ins
loopne
xor
clc
fisttp
mul
or
pop
inc
mov
pop
les
or
ins
mov
and
push
adc
and
shl
pop
repnz
cwde
mov
nop
sbb
fnsave
imul
xchg
shufps
sub
cdq
inc
inc
cmp
je
mov
jge
in
pop
call
push
sub
and
xor
sub
sub
sahf
ins
je
outs
push
scas
inc
jbe
dec
jo
dec
mov
jae
dec
jne
icebp
inc
pop
add
push
movs
add
leave
jns
popa
jb
sbb
arpl
mov
ror
push
push
stos
ja
mov
mov
icebp
xchg
add
ja
sbb
sub
sbb
es
mov
shl
dec
xor
push
sbb
sub
and
ins
xor
jno
ja
inc
in
push
cmp
pop
jecxz
or
add
jmp
xor
sbb
cmpxchg
imul
stos
xchg
out
movs
add
js
imul
ret
shl
or
lea
mov
movs
faddp
pushf
sbb
xchg
sub
mul
dec
inc
or
xor
or
sar
or
test
jbe
pop
fwait
cwde
stos
out
jge
popa
cmp
add
fsubrp
cmp
cmp
fs
push
xchg
mov
cs
nop
and
aas
retf
test
fstp
mov
(bad)
loopne
xor
sbb
sbb
push
mov
push
xchg
mov
mov
adc
pop
outs
jle
ret
dec
pminub
aam
std
cwde
adc
cli
sbb
cs
mov
in
mov
pop
push
xchg
jmp
xor
ffreep
test
sub
push
add
push
jg
retf
push
in
mul
cmp
stos
(bad)
sub
adc
fnstenv
shr
inc
push
aad
xor
aas
mov
and
xchg
stos
xor
cdq
mov
push
movs
xor
xlat
fs
fwait
mov
fst
cwde
mov
jg
in
cmp
fcomi
ins
out
rcr
or
jae
xor
cld
mov
dec
test
jo
push
push
pop
pop
lock
clc
enter
push
and
(bad)
or
enter
jo
lea
and
cmp
jp
pop
jnp
jge
call
stos
ins
jbe
jns
js
mov
shl
inc
pop
cmp
push
jmp
dec
push
popa
jae
mov
adc
jae
jle
inc
js
gs
mov
pusha
(bad)
or
dec
call
jp
jnp
adc
int3
cmp
inc
mov
pop
or
dec
push
cld
push
popf
dec
ds
fisub
dec
test
cdq
add
inc
inc
jns
sbb
mov
(bad)
mov
cmp
inc
jmp
sahf
ret
mov
loopne
(bad)
mov
out
movs
sti
out
sbb
stos
sti
stos
mov
add
iret
mov
cmp
or
adc
cmp
dec
rcr
jmp
push
out
call
lock
mov
stos
cwde
pop
mov
mov
ins
cli
stc
push
lods
mov
xchg
xor
mov
js
xor
jmp
mov
xlat
lods
sbb
loop
cwde
out
in
jne
cmp
test
movs
add
sar
push
push
mov
cdq
pop
push
sbb
cmp
mov
sti
cld
and
stc
mov
sub
ins
aas
xor
mov
dec
mov
jmp
repnz
rcl
jne
pop
xor
jo
nop
daa
sub
lidtd
pop
(bad)
sub
(bad)
jb
mov
xchg
mov
mov
ret
fabs
inc
mov
pop
mov
pop
sbb
test
sub
out
pop
hlt
es
mov
dec
pop
cmp
adc
stc
mov
push
arpl
test
xchg
test
out
lahf
add
xor
movs
setge
inc
dec
xchg
(bad)
jmp
dec
js
pop
pop
jl
retf
pop
push
add
pop
leave
imul
pop
fiadd
(bad)
pop
scas
repz
dec
aaa
xchg
cs
and
into
clc
loopne
dec
rol
mov
pop
push
(bad)
adc
cld
pusha
cdq
adc
retf
mov
jmp
sti
dec
pop
xchg
cmp
cmp
sar
add
retf
inc
in
push
out
lea
not
(bad)
(bad)
mov
sbb
mov
loop
sub
fimul
push
(bad)
sub
cmc
mov
bound
retf
mov
push
in
aad
stos
(bad)
mov
add
sub
xchg
push
rep
mov
xor
scas
cmp
pop
mov
xchg
clc
fnstsw
push
ret
clc
adc
popa
sub
lahf
arpl
and
jl
out
mov
sbb
pop
ficomp
ds
mov
xor
in
jae
mov
daa
clc
rol
les
xor
scas
inc
add
movs
jne
mov
or
add
xor
sbb
mov
jle
cmp
outs
in
jecxz
xchg
or
mov
add
ss
sub
and
enter
pop
sti
je
mov
mov
fcomip
cmps
lock
xor
jns
pushf
mov
icebp
jle
cmp
dec
es
or
mov
mov
int
add
cmp
js
outs
sbb
jb
cmc
aad
add
push
mov
xchg
out
mov
in
ficom
mov
mov
xor
int
mov
loop
(bad)
xchg
loope
adc
pop
sbb
imul
push
push
pop
aad
cmp
xor
add
lock
sbb
jb
sbb
push
xabort
jbe
(bad)
jnp
jmp
inc
ret
or
mov
into
dec
(bad)
ja
push
mov
inc
add
gs
out
stc
xor
imul
push
sub
and
xor
xchg
in
xchg
add
loope
(bad)
retf
out
inc
cmc
adc
cmp
and
xor
not
outs
push
pop
push
push
adc
in
divps
movs
jp
xchg
and
loop
xchg
jns
or
in
(bad)
dec
cs
mov
jbe
stos
sbb
pushf
cli
repz
cmps
clc
out
js
jno
mov
out
dec
sahf
adc
clc
sbb
cmp
push
(bad)
xor
call
mov
retf
jns
shl
mov
sub
stc
mov
cmc
(bad)
popf
lods
jnp
(bad)
clc
push
dec
jmp
stos
into
std
out
xchg
mov
rdmsr
or
mov
(bad)
stc
jb
mov
or
dec
xchg
scas
and
fs
xchg
or
jo
outs
(bad)
cmp
cmps
fisttp
push
lock
fdivr
inc
popa
pop
inc
popa
in
shr
out
push
es
fsub
add
dec
xchg
sar
xor
ins
fldenv
pusha
mov
aaa
and
fistp
adc
cmc
adc
add
add
fdivr
and
leave
test
(bad)
movs
cdq
(bad)
(bad)
xchg
test
lds
and
push
pop
sbb
push
hlt
jp
outs
inc
xlat
loop
xchg
adc
sbb
retf
xchg
mov
mov
add
mov
stc
outs
imul
dec
dec
jge
jmp
dec
repnz
inc
dec
or
and
scas
lea
jns
clc
sbb
loopne
ret
pop
sbb
and
ss
pop
sbb
xor
enter
xchg
mov
adc
cmp
sar
sahf
xchg
mov
jne
lods
shl
pop
xor
outs
or
mov
sub
add
call
std
pop
dec
das
jb
fstp
add
adc
push
jp
adc
ss
dec
popa
cmp
cdq
xor
push
pop
mov
pop
cli
jno
mov
fst
mov
inc
adc
clc
and
stos
mul
ror
lea
pop
ins
je
xor
ss
neg
call
mov
cmp
das
mov
jo
in
and
shr
jp
jmp
repnz
inc
int3
dec
adc
loop
mov
mov
inc
lods
aad
int
shr
push
mov
retf
sub
jne
sub
(bad)
(bad)
and
dec
ds
retf
jge
sbb
and
aas
sbb
or
in
cs
ret
push
cmp
mov
sbb
pop
inc
sahf
jge
repz
(bad)
iret
into
xlat
lea
mov
mov
inc
xor
rol
sub
not
pop
xchg
mov
xor
arpl
dec
push
mov
lods
xchg
pop
loopne
ficom
sbb
mov
jmp
ret
sub
fwait
(bad)
mov
add
fdiv
add
jbe
mov
(bad)
fist
fmul
lods
dec
int3
je
jl
or
cdq
mov
add
jg
xchg
pop
hlt
mov
fistp
icebp
int3
arpl
(bad)
mov
or
dec
fiadd
jne
mov
(bad)
cmp
push
pop
adc
repnz
push
cmps
scas
push
sub
sahf
pop
or
inc
mov
ficom
ins
mov
loopne
sub
mov
dec
dec
xchg
lods
mov
repnz
jmp
js
das
mul
ficom
pusha
adc
inc
dec
pop
(bad)
shl
jo
in
ror
mov
cmp
jg
xor
dec
or
push
cmp
push
and
sbb
sbb
out
jecxz
cli
cli
or
mov
sub
mov
aas
ficomp
sbb
dec
inc
aaa
ror
jp
xor
sbb
inc
(bad)
mov
dec
add
ds
xor
or
xor
mov
adc
fs
xrelease
js
fyl2xp1
retf
loopne
std
push
fadd
jl
fs
jnp
xchg
nop
xchg
js
lods
jo
add
jmp
inc
pop
mov
pop
xchg
inc
sbb
push
dec
lahf
test
sahf
(bad)
xchg
jae
xchg
sar
or
mov
mov
cmp
aad
and
fmul
sub
out
add
xchg
mov
inc
or
and
push
mov
addr16
aam
cli
jnp
ja
das
and
(bad)
movs
xor
aaa
int3
mov
xor
hlt
mov
add
mov
adc
mov
xchg
ret
push
ret
inc
aas
xor
dec
xchg
sub
(bad)
in
imul
dec
fdivr
xchg
sbb
std
pop
jp
pop
imul
or
add
xchg
call
inc
dec
mov
xlat
or
pop
dec
push
cmp
call
stos
pusha
imul
cmp
sub
jae
push
es
xchg
ja
sti
dec
call
fwait
jo
call
retf
cdq
ja
jb
and
imul
mov
stos
or
xor
dec
push
fstp
mov
ds
xchg
loopne
and
mov
xchg
push
(bad)
xchg
sub
ja
mov
jmp
test
and
imul
xor
out
pop
mov
test
jecxz
enter
xchg
bswap
or
pop
mov
es
call
add
xchg
jne
pop
imul
mov
jp
scas
cld
mov
fwait
or
mov
xor
cwde
call
in
popf
jnp
dec
cmp
mov
or
xor
jbe
loop
cmps
sub
stos
mov
cmc
hlt
popa
pop
stc
or
jno
sbb
push
dec
adc
ins
mov
repz
movs
ret
js
xor
pmaxub
mov
pop
in
jbe
js
sub
lock
push
adc
loop
xchg
push
aas
adc
pushf
mov
jmp
mov
push
rcl
gs
shr
retf
mov
mov
and
mov
push
imul
mov
dec
xor
mov
iret
mov
cmps
pop
xor
push
inc
ret
mov
push
call
sar
sub
push
jecxz
inc
jns
fwait
popf
daa
out
dec
pop
lahf
xor
(bad)
aas
dec
jle
pop
xor
jle
dec
int3
pop
push
fldenv
xor
cmc
jl
inc
and
dec
retf
dec
ja
or
pop
aaa
dec
inc
jno
jmp
adc
aaa
in
pop
push
dec
pop
ret
rol
xor
cmps
fs
cmp
xchg
aaa
jge
mov
add
jge
fild
push
(bad)
or
jo
(bad)
adc
cmp
(bad)
xor
bound
mov
cmps
out
test
mov
dec
adc
mov
lods
pop
push
adc
dec
push
int3
addr16
out
add
and
test
cmps
inc
ins
cmp
fdiv
push
mov
scas
rcl
ds
pop
or
pop
or
mov
pop
jo
aas
jnp
dec
push
dec
lahf
sub
loope
xor
sub
sub
inc
sbb
jnp
dec
xor
inc
and
lock
dec
and
cmp
mov
dec
fnstenv
(bad)
int
loope
mov
jmp
and
xlat
lock
inc
lea
push
add
in
pop
mov
jle
popf
and
jns
inc
in
sub
cmp
adc
jge
cmc
sbb
sbb
add
pop
dec
jecxz
(bad)
lahf
shl
pushf
add
push
stos
xchg
test
pop
pop
dec
mov
sub
mov
fld
jmp
cwde
cmps
pop
sbb
sub
das
pop
fild
(bad)
xor
in
sbb
mov
jmp
push
repnz
arpl
xlat
and
mov
pop
pop
jns
dec
(bad)
mov
es
call
push
daa
push
fldenv
cli
inc
adc
(bad)
cld
or
mov
push
push
call
cmps
mov
cdq
jge
push
push
daa
xor
loop
add
push
pop
lock
pop
inc
add
fsub
sub
ja
xchg
shl
std
int3
sbb
jge
jecxz
pop
aaa
inc
cmp
cmps
inc
rol
aas
ret
jno
sub
in
xchg
repz
xor
mov
jbe
into
pop
xchg
lods
sbb
dec
mov
mov
(bad)
popf
dec
xchg
or
scas
adc
or
push
fdiv
and
dec
lock
jbe
mov
pusha
aas
push
mov
lahf
and
dec
jp
xchg
sbb
stos
sar
aas
xor
sbb
pop
push
ja
arpl
hlt
cmp
repz
mov
jmp
jo
add
push
(bad)
jnp
cld
ds
pop
outs
(bad)
loope
cld
xor
pusha
fild
mov
pop
xchg
imul
inc
or
shl
or
jb
mov
jg
aad
mov
stos
ror
int
inc
add
je
cmp
jnp
jmp
outs
ss
push
daa
mov
mov
mov
and
inc
push
xchg
pop
xchg
xor
add
and
inc
jge
fwait
sbb
xchg
popf
out
fucomi
aam
mov
mov
setae
out
inc
stos
push
dec
dec
sub
mov
or
or
pop
cmp
mov
jg
cmp
add
sbb
add
or
and
mov
push
nop
pusha
push
(bad)
aam
dec
sub
jne
push
bound
mov
add
lahf
daa
xchg
jp
bsr
mov
dec
(bad)
fimul
xchg
and
retf
cmps
cld
mov
and
(bad)
mov
fwait
mov
cwde
xchg
movs
sub
adc
fcom
mov
bound
popa
fimul
or
mov
lds
pop
hlt
daa
arpl
movs
pop
dec
xchg
scas
adc
mov
outs
and
cli
cli
xlat
jne
test
pop
lahf
add
aad
icebp
and
stc
mov
push
repz
aaa
in
jmp
in
aad
xlat
pop
movs
xchg
test
mov
dec
push
(bad)
sahf
in
daa
pop
inc
push
jle
lds
adc
or
in
int
push
push
out
sar
(bad)
push
pop
stos
dec
call
xchg
add
in
pop
mov
and
inc
(bad)
shr
orps
xlat
out
test
lock
xchg
in
adc
cmp
lds
out
sub
add
mov
test
movs
xchg
or
gs
stos
arpl
sub
out
pop
jno
in
cmp
(bad)
(bad)
jmp
mov
jo
sub
call
xor
aad
or
(bad)
aad
pusha
and
mov
jg
lods
mov
cmp
repnz
xchg
and
push
stc
add
mov
cmp
xchg
scas
sahf
jns
push
push
mov
push
mov
jle
test
add
sub
inc
jmp
cmp
mov
sbb
cld
push
jb
in
push
movs
mov
mov
shl
ret
sbb
jnp
(bad)
popf
mov
or
iret
gs
rol
pop
or
les
mov
pop
xchg
xor
or
sbb
cmp
add
adc
push
sbb
sar
fist
push
dec
mov
xlat
push
dec
enter
lea
sub
les
and
xlat
fmul
jnp
adc
xor
(bad)
adc
rcl
and
inc
mov
cmps
cli
ds
and
sub
add
sub
mov
add
and
mov
(bad)
xchg
mov
gs
jmp
sti
xchg
in
(bad)
stc
ret
mov
or
aad
pusha
in
jbe
push
fiadd
sbb
outs
inc
mov
jb
pop
or
xchg
xor
push
les
stc
and
dec
(bad)
xor
mov
adc
mov
or
fnstcw
push
ins
add
mov
jno
into
outs
jge
xchg
in
push
xor
sub
bound
jns
fiadd
jb
pop
je
leave
inc
push
inc
pop
sub
mov
outs
add
sbb
jno
xchg
adc
pushf
xchg
out
call
lahf
push
mov
sbb
loop
test
jae
mov
mov
pop
pop
btr
bound
push
cli
aas
or
push
ret
mov
pop
in
add
inc
movs
retf
outs
and
cmp
lea
fisub
or
hlt
adc
stos
push
dec
arpl
das
jb
fcmovnbe
cmp
push
and
cmp
xchg
sbb
push
out
cs
dec
inc
repnz
push
mov
inc
into
mov
mov
push
gs
mov
xchg
in
pop
cmps
jl
and
add
ror
movs
enter
push
mov
xor
and
leave
ret
sub
(bad)
outs
mov
or
bound
jmp
mov
lods
inc
jno
es
xchg
adc
mov
sub
inc
pop
std
clc
mov
std
adc
pop
(bad)
mov
cmp
cmc
scas
lea
add
xchg
fdivr
push
ja
and
sub
jl
dec
pop
jo
lods
dec
popf
retf
mov
outs
outs
cld
jge
xchg
int
push
pusha
jo
lods
push
inc
(bad)
in
inc
out
add
jns
jmp
inc
adc
pop
test
xchg
cwde
shl
xchg
ret
push
xchg
ins
retf
outs
cdq
shl
mov
lods
loop
jp
cmc
jb
(bad)
lds
dec
pop
jmp
outs
mov
pmullw
pop
sub
push
cmps
into
mov
or
or
adc
or
icebp
mov
jae
and
sbb
nop
or
aaa
dec
les
in
inc
(bad)
sahf
clc
js
pop
mov
inc
lahf
arpl
cmps
sub
jns
iret
fmul
loope
push
mov
in
lea
fisttp
sub
mov
xchg
sub
jno
mov
mov
add
sub
xchg
hlt
cld
sbb
mov
jo
in
(bad)
cmps
jne
movs
hlt
and
(bad)
sub
aaa
nop
cwde
(bad)
sub
adc
aad
aaa
ss
mov
es
add
mov
lea
mov
lods
test
out
adc
sbb
outs
xchg
in
popa
lods
shl
and
jl
add
add
dec
arpl
clc
or
adc
jne
shl
cmp
push
jge
push
adc
adc
jg
scas
das
repz
jge
sti
pop
and
or
mov
xor
test
cmp
mov
inc
inc
jns
aaa
clc
out
inc
xor
pop
sub
bound
aas
imul
rcr
or
sbb
out
inc
(bad)
cmp
mov
mov
mov
push
xchg
ja
jge
cmc
mov
fstp
(bad)
cmps
pop
addr16
retf
popf
bound
test
sbb
gs
rcpps
mov
push
add
cmp
scas
data16
sub
out
retf
xchg
or
inc
lods
mov
cmc
test
lock
inc
adc
lds
es
movs
ins
or
mov
xor
test
out
adc
daa
mov
repnz
imul
out
loopne
xlat
jbe
bound
push
lock
cs
fldenv
pop
addr16
cmps
iret
mov
inc
xor
or
mov
add
cmps
jbe
push
addr16
(bad)
in
mov
ss
ins
inc
mov
loope
mov
mov
mov
retf
arpl
dec
push
xor
mov
push
inc
jmp
(bad)
mov
mov
sar
mov
shl
aam
imul
fldcw
jl
je
nop
mov
cmp
cmp
test
icebp
jle
retf
out
dec
mov
cmps
outs
mov
xor
jns
add
int3
mov
jmp
dec
mov
jmp
int3
and
movs
(bad)
iret
xor
or
iret
retf
inc
ds
push
(bad)
(bad)
and
push
lock
mov
mov
mov
dec
div
loope
or
out
mov
jns
add
lahf
cmps
sahf
add
mov
or
cmp
data16
push
jno
(bad)
cmc
lea
jmp
retf
repz
or
add
iret
test
test
js
in
mov
jb
inc
repz
gs
cmc
adc
and
mov
or
or
movs
arpl
mov
push
test
or
mov
xor
jmp
mov
loope
xor
out
jmp
jne
repnz
inc
add
fdivr
mov
cmp
ins
fld
jg
pop
push
ss
push
leave
cmp
xor
mov
cwde
outs
xchg
ins
loop
into
enter
das
cmp
in
data16
out
or
movs
sbb
push
mov
das
cmp
or
mov
dec
stc
out
push
js
or
sti
inc
mov
cs
lahf
test
xor
arpl
dec
push
addr16
cmp
ror
mov
iret
test
mov
mov
xchg
outs
icebp
outs
sbb
arpl
test
scas
cli
pop
mov
ja
mov
loopne
jp
imul
int3
push
inc
rcr
cs
out
and
push
sbb
mov
neg
sub
jbe
pop
jl
gs
mov
cmp
mov
outs
call
inc
jno
add
lahf
unpckhps
xchg
sub
xor
mov
inc
and
and
push
rol
cmps
shl
repnz
ins
and
mov
inc
xlat
ror
mov
adc
(bad)
scas
shl
scas
sti
dec
sub
inc
adc
mov
mov
popa
dec
pop
mov
and
aam
mov
pop
push
xlat
jb
push
mov
jnp
add
jmp
pusha
inc
or
jmp
push
repz
adc
cmp
xchg
punpckhbw
loop
ret
std
cmps
push
or
or
sar
xor
fcmovnbe
pop
mov
data16
sahf
mov
gs
lea
sub
pop
in
inc
les
inc
mov
push
int
test
dec
sbb
jmp
pop
imul
jb
imul
fld
inc
bound
ds
dec
fistp
xor
outs
pop
(bad)
lds
inc
pop
mov
jae
pop
push
ret
jge
add
outs
add
out
cmps
out
push
or
pusha
xchg
enter
jne
adc
icebp
outs
bound
pop
add
pop
sub
adc
imul
test
retf
jae
inc
daa
mov
inc
mov
aaa
jle
std
not
in
pop
add
inc
xchg
jae
add
jb
adc
fwait
scas
sbb
mov
sbb
pop
in
push
clc
sbb
lods
mov
xchg
add
cmps
xchg
xor
mov
sub
push
adc
sub
mov
add
cmp
or
pop
push
push
test
add
lds
adc
jbe
fst
jo
(bad)
jo
xchg
fild
cmp
dec
je
and
fadd
lods
test
aas
cmp
leave
mov
push
or
mov
fidivr
push
shl
push
int3
popf
mov
data16
test
mov
push
sti
mov
jge
push
sbb
out
sbb
cmp
pop
inc
push
sub
dec
std
xchg
cmp
aas
mov
(bad)
repnz
add
adc
(bad)
cli
mov
adc
aam
rcl
aaa
retf
dec
jnp
sti
jle
cld
sbb
data16
(bad)
stos
push
push
test
xchg
pop
and
lods
adc
stc
jae
push
daa
or
cdq
cmp
pop
jne
pop
out
jge
xchg
(bad)
jno
in
aam
dec
mov
adc
scas
dec
xor
pop
cmps
cmp
addr16
sbb
out
ins
(bad)
jae
dec
adc
jbe
dec
pop
push
popa
call
icebp
dec
int
out
push
mov
daa
jns
fwait
pop
cmps
cmp
out
push
(bad)
out
xchg
aaa
mov
scas
jne
add
fadd
scas
(bad)
adc
adc
inc
lds
mov
fxam
jns
xchg
fisub
push
gs
adc
pop
push
ins
xor
sahf
aam
and
fdivrp
fistp
dec
sti
lods
mov
xchg
out
movs
inc
ret
jo
test
dec
js
inc
enter
pop
psubq
data16
dec
xor
push
lock
push
or
mov
inc
dec
mov
xlat
cmp
push
out
mov
loope
dec
xor
and
mov
in
xor
jbe
(bad)
jns
mul
mov
sbb
daa
sbb
push
rol
inc
sbb
pushf
in
push
fs
shl
loopne
mov
mov
std
and
(bad)
mov
enter
jns
dec
popa
adc
push
push
int
gs
fcmovnu
xchg
or
test
in
lahf
mov
int3
mov
xchg
push
mov
test
neg
and
scas
dec
jg
mov
sbb
dec
jmp
cmc
pop
push
iret
repnz
sbb
ja
xchg
mov
out
and
cmp
movs
hlt
mov
ss
cmps
out
in
nop
ins
aas
sbb
cmp
pop
jmp
rol
push
mov
jmp
dec
mov
cmps
mov
in
sbb
jno
sbb
out
movs
push
pop
cmp
add
add
pop
sbb
mov
xor
mov
or
pop
mov
retf
inc
stos
xchg
adc
add
loopne
rcl
out
ficomp
jns
push
sub
mov
stos
push
ret
shl
xchg
lock
loope
sub
jo
dec
and
(bad)
pop
outs
jne
cmp
lea
push
movs
add
test
es
out
aaa
pop
jb
fwait
out
add
add
lea
mov
mov
push
test
and
push
dec
dec
inc
scas
xchg
enter
mov
nop
int3
out
ins
retf
and
fwait
movs
push
mov
mov
xor
inc
xchg
xchg
neg
sbb
ss
call
mov
popf
(bad)
cmp
jne
jecxz
adc
das
pop
pop
lds
mov
fbstp
push
pop
jb
enter
xchg
fcmovu
gs
movhlps
fisubr
pushf
mov
or
pop
xchg
pop
dec
les
fcom
xchg
sbb
cmp
pop
adc
xchg
movs
push
xor
sub
pop
sub
clc
inc
jmp
test
stos
add
push
test
(bad)
mul
sbb
add
pop
and
pop
(bad)
mov
sbb
mov
repnz
lods
clc
push
(bad)
(bad)
jecxz
sti
ficomp
adc
fdivr
xchg
nop
dec
push
sub
cwde
mov
dec
mov
mov
not
add
or
lock
mov
push
mov
adc
rcr
jl
ds
icebp
into
mov
nop
ins
mov
xchg
(bad)
clc
xchg
les
mov
ja
cdq
or
imul
mov
jecxz
pusha
cs
sbb
and
push
jle
and
neg
mov
aaa
mov
adc
mov
hlt
daa
fiadd
or
jmp
imul
adc
adc
or
icebp
xchg
scas
repnz
popa
mov
inc
movs
rcr
sbb
inc
fs
sub
push
mov
fwait
push
sub
xchg
pop
cs
sub
sub
adc
stc
nop
test
jnp
aad
ins
sbb
fldenv
cdq
jb
out
xchg
dec
outs
(bad)
(bad)
test
lods
inc
push
dec
mov
push
dec
inc
push
and
or
imul
mov
inc
shl
sub
out
mov
outs
jp
aas
dec
into
push
cs
rcr
pop
xor
or
pop
pop
push
(bad)
hlt
mov
ret
mov
lods
inc
jp
sub
icebp
push
int3
jmp
out
fcmovnbe
clc
(bad)
fcmovu
jns
test
mov
cmp
scas
push
test
fild
imul
jb
and
and
sbb
jnp
inc
fdiv
sub
aaa
popf
adc
dec
test
push
jmp
sub
mov
ror
push
scas
sti
pop
add
push
or
mov
or
ret
lea
lods
adc
xchg
test
fistp
pop
pop
cmp
shl
xlat
sar
xor
xchg
js
xchg
stos
rol
popf
in
xor
and
stc
pop
(bad)
(bad)
mov
mov
mul
push
jg
jmp
pop
popf
std
je
mov
retf
addr16
pop
int3
stos
retf
jl
mov
fwait
sub
jmp
mov
cs
ja
jbe
dec
icebp
js
pusha
(bad)
sar
aam
outs
and
dec
call
test
cmps
ins
ret
jge
mov
out
js
jnp
jb
fsubr
push
adc
aad
jae
pop
fcom
push
inc
mov
mov
ins
loopne
ss
xor
and
dec
pop
imul
push
push
sbb
add
inc
je
cmp
test
(bad)
aam
stos
fwait
repz
jnp
sbb
lods
sub
mov
(bad)
cs
aaa
cs
jb
jb
push
pushf
lock
shl
xlat
cmc
dec
lahf
repz
clc
stos
jo
pop
dec
pop
aad
repnz
xor
push
lds
jbe
fcom
ins
lea
out
cdq
lods
outs
hlt
sahf
pop
jmp
jnp
pop
or
movs
push
pop
jb
outs
ja
add
push
inc
enter
call
test
dec
lds
dec
inc
fsub
jecxz
retf
jmp
stos
cmp
je
lea
pop
push
and
jbe
jge
lea
xchg
repz
pop
mov
imul
mov
push
add
fldenv
or
into
iret
xor
lods
cmp
xchg
pop
nop
imul
inc
mov
out
dec
push
frstor
data16
outs
adc
fdivr
mov
pop
test
push
int
sar
adc
add
xor
enter
inc
mov
jno
xchg
mov
inc
sub
shr
ret
pusha
movs
xchg
adc
in
mov
pop
out
aad
dec
sub
xor
dec
add
rol
imul
in
pop
jnp
shl
adc
jmp
dec
test
push
xlat
cmp
mov
or
(bad)
cmp
dec
out
xchg
xchg
cli
push
push
jno
dec
sub
push
lahf
ds
adc
cmp
je
xchg
mov
and
loope
(bad)
loop
jle
fisub
cmps
test
imul
popf
hlt
sbb
xchg
xor
out
jne
les
or
shl
xor
sbb
ins
inc
xchg
and
dec
mov
mov
mov
cmp
hlt
inc
mov
sbb
fs
lods
xor
push
(bad)
aas
fwait
scas
(bad)
xor
mov
xchg
push
push
out
in
out
add
pushf
pushf
xor
jmp
and
sub
int
dec
lahf
bound
jno
sbb
pop
(bad)
sti
sar
aas
into
pop
push
mov
push
into
outs
or
sbb
pop
movs
xor
in
pusha
aas
fdivr
dec
arpl
xchg
leave
movs
adc
mov
inc
and
mov
and
push
call
loope
mov
mov
in
and
add
mov
push
das
jl
shl
mov
int
xchg
mul
inc
push
enter
rcl
push
pop
jecxz
push
pusha
fxch
cvttps2pi
mov
js
fwait
jecxz
ret
std
and
or
pushf
xchg
lea
jmp
dec
sbb
push
xlat
clc
pop
jmp
outs
lods
mov
sub
call
inc
mov
xchg
dec
push
shl
lahf
xor
or
pop
xor
and
xor
dec
int
sbb
adc
adc
aaa
pop
in
push
mov
cmp
aas
jb
or
jge
sbb
jns
jb
retf
clc
cld
pop
(bad)
mov
std
ds
cmp
retf
mov
hlt
in
rcr
xchg
dec
mov
jo
mov
push
add
addr16
dec
dec
dec
(bad)
shl
jnp
jp
out
outs
adc
mov
sti
aaa
mov
inc
stos
pop
sbb
dec
jo
out
pushf
sbb
mov
or
stos
das
push
adc
mov
xchg
scas
xchg
div
mov
jg
push
mov
inc
xchg
jnp
loope
popf
and
iret
sub
mov
mov
mov
dec
movs
fmul
mov
ror
jb
jg
push
mov
pop
in
xchg
ret
pop
scas
jmp
pop
outs
fld
mov
jb
adc
add
mov
and
lods
fwait
loope
fwait
or
cmc
vmwrite
pop
es
jno
std
inc
lods
ficomp
fadd
inc
pusha
sbb
push
ins
sub
pop
out
(bad)
fmulp
mov
dec
imul
cmp
lods
jno
add
(bad)
icebp
enter
jnp
fisubr
xchg
or
push
and
mov
aam
lods
dec
mov
push
xor
adc
xor
outs
push
push
jge
sub
aam
push
mov
in
popf
pop
push
in
xor
jb
shr
in
int3
push
ficomp
fstp
sub
rcl
dec
(bad)
adc
cdq
dec
movs
push
inc
scas
xor
test
popa
sbb
fcmovne
push
cs
popa
pop
pop
pop
loope
into
pop
and
xor
cmc
out
inc
lods
outs
or
add
aas
mov
mov
idiv
xor
ds
or
aad
adc
xchg
xchg
or
test
pop
xchg
retf
ror
rcl
sub
dec
jae
and
mov
jmp
(bad)
int
dec
adc
pop
lock
jecxz
sub
shr
mov
inc
jl
scas
push
lea
push
aaa
jmp
(bad)
lock
inc
idiv
ins
lods
ret
jbe
fwait
mov
lds
sbb
(bad)
scas
add
pushf
ret
xchg
lahf
or
les
adc
xchg
push
popa
sbb
das
inc
jle
inc
mov
jne
enter
out
xchg
cmps
aad
push
test
sar
push
pusha
stc
adc
shr
mov
mov
jns
shl
call
test
xchg
movs
jbe
sub
int3
adc
aam
fnstenv
jp
shr
aam
add
pop
add
jae
mov
push
or
jnp
pop
ret
cmp
call
jb
xor
repnz
mov
pop
(bad)
xor
aam
retf
pop
inc
fnstsw
fidivr
dec
pop
daa
xchg
call
sahf
fimul
jne
push
mov
ja
mov
fsub
push
cwde
div
xor
cmp
enter
ret
popf
push
test
pop
mov
pop
test
push
push
outs
aad
fs
ins
mov
adc
arpl
push
mov
pop
movs
std
sti
mov
and
mov
add
xchg
mov
in
xchg
sub
test
or
inc
lea
(bad)
fs
xor
and
int
hlt
mov
mov
popa
adc
mov
pusha
xor
xchg
mov
test
mov
sub
sbb
es
pop
mov
imul
retf
fisubr
outs
push
cwde
outs
call
xor
retf
jge
clc
lea
or
sbb
jne
mov
lods
and
sub
(bad)
jecxz
xchg
aaa
xchg
scas
in
js
call
inc
sub
xchg
dec
jge
push
jg
inc
neg
out
nop
fidivr
aas
mov
jo
and
scas
jbe
out
pop
lods
add
or
into
popa
adc
cmp
inc
sbb
enter
repz
cmp
inc
jmp
xlat
sbb
jae
test
mov
inc
push
aas
mov
push
add
dec
jb
dec
lods
daa
into
mov
push
cs
adc
out
ins
sbb
sub
(bad)
push
push
movs
or
jae
xor
out
adc
cmp
push
aaa
add
(bad)
xchg
adc
add
mov
ins
in
cmp
nop
inc
clc
push
xchg
adc
pop
xor
cmp
das
push
sbb
daa
cmc
mov
es
push
mov
mov
(bad)
or
or
imul
popf
jnp
pinsrw
imul
jne
pushf
addr16
test
pushf
in
jp
push
jle
mov
daa
into
mov
xchg
pop
sbb
arpl
scas
cmp
shl
shl
popf
ss
pop
mov
bound
leave
sbb
out
test
pop
push
pop
jge
imul
aas
push
adc
mov
addr16
xchg
jle
mov
sub
aam
(bad)
mov
lds
mov
mov
or
inc
adc
out
sub
and
add
push
ds
sbb
push
hlt
repz
xchg
inc
imul
shl
cdq
or
sbb
cld
xchg
(bad)
xor
or
bnd
sbb
test
test
or
jmp
mov
sbb
sub
adc
cmp
in
fistp
jnp
jl
xor
xlat
fisttp
pop
jmp
dec
fwait
stc
mov
lods
gs
int
in
jg
clc
ror
hlt
add
pop
cli
sti
or
xchg
and
jns
movs
inc
dec
pusha
(bad)
fcomip
mov
repnz
cld
retf
int
out
pop
fimul
and
scas
mov
mov
xchg
fiadd
inc
xlat
pop
jmp
js
add
(bad)
jl
jb
test
ja
dec
in
shl
ficom
(bad)
fdivr
into
jg
idiv
pusha
out
mov
mov
out
mov
aad
mov
xchg
xchg
hlt
xor
xor
cwde
imul
jl
add
mov
or
jmp
in
mov
jo
into
adc
call
xlat
(bad)
cmp
(bad)
jl
and
stos
inc
clc
cmp
mov
(bad)
xchg
adc
lahf
xchg
int3
jne
jb
inc
outs
cs
mov
inc
jbe
pop
dec
or
hlt
pushf
mov
and
xchg
fst
adc
es
repz
xadd
rol
hlt
add
or
pop
mov
xchg
cmc
pop
xlat
xchg
mov
mov
aas
and
subps
mov
inc
sub
jp
adc
adc
aas
je
cmc
ret
pushf
es
stos
sub
pop
pop
rep
mov
inc
or
adc
add
in
int
sahf
icebp
xchg
sbb
mov
add
es
daa
jge
in
cmp
movs
in
out
popa
stos
rcr
(bad)
xlat
imul
enter
call
std
test
pmulhuw
cwde
and
xlat
sub
or
adc
xchg
popa
ret
xchg
aas
bound
inc
jp
xchg
jbe
jbe
and
adc
mov
sbb
mov
retf
sbb
dec
jno
test
or
pop
gs
jmp
jnp
mov
(bad)
repnz
stos
pop
and
jp
xchg
jg
mov
les
aam
or
cmp
push
clc
test
and
and
hlt
adc
adc
test
add
cdq
pop
sub
loopne
inc
popa
mov
rol
jp
rcl
daa
into
ret
int
push
dec
(bad)
sbb
ja
jnp
dec
or
or
jmp
mov
hlt
mov
mov
fwait
sub
jae
aas
inc
pop
xchg
sub
pop
pop
jmp
ror
push
mov
cmp
push
or
ret
dec
jno
jb
fwait
popa
inc
inc
arpl
jl
rcr
push
test
mov
inc
fild
mov
jle
push
pop
and
pop
out
sbb
shl
in
test
cmp
rcl
psubw
rcl
sbb
fnsave
shr
nop
iret
inc
cmp
(bad)
lar
jo
or
xor
mov
aam
ret
add
movs
ja
test
fiadd
inc
pushf
jl
and
imul
mov
xor
or
push
inc
imul
mov
inc
jo
xchg
pushf
addr16
push
mov
test
js
push
jb
inc
cmp
dec
fdiv
movs
retf
cmp
pop
bnd
sar
lods
xchg
sysenter
lahf
pop
pop
add
and
mov
fwait
pop
cmp
push
jp
fld
sahf
mov
inc
cmp
jle
xchg
cli
(bad)
bound
fs
sbb
mov
push
fiadd
mov
push
cmp
push
xchg
lahf
or
mov
sbb
pusha
jb
fstp
add
jb
push
adc
dec
sbb
inc
sub
(bad)
cwde
and
cmp
mov
pop
daa
mov
mov
dec
sub
mov
fimul
cs
cmp
jnp
add
inc
xor
add
dec
pop
pop
mov
lahf
or
das
bound
fs
les
ret
xchg
push
jg
or
xor
cmp
loopne
in
mov
add
(bad)
out
xchg
and
xchg
and
jo
shl
inc
sub
jp
cmp
pop
das
xor
cdq
inc
or
mov
push
push
stos
in
ds
xor
pop
pop
jo
mov
dec
xchg
stos
mov
das
lock
sbb
sbb
mov
orps
(bad)
jge
ss
push
outs
outs
and
adc
test
mov
or
(bad)
mov
shr
xor
rcr
mov
jp
or
fmul
add
and
cmp
jo
jbe
(bad)
fstp
aam
sbb
pop
repnz
out
imul
push
xchg
jno
jne
movs
stc
ja
mov
popa
fnstsw
jmp
cmc
jecxz
add
jecxz
loope
ds
lock
pop
stos
shl
inc
inc
stos
pop
cmp
pop
push
scas
in
pop
mov
das
and
xor
clc
mov
movs
test
aam
outs
pop
add
inc
adc
mov
lfs
stos
mov
(bad)
jnp
in
in
mov
push
(bad)
fsincos
dec
and
and
lahf
jge
scas
out
cmp
push
inc
fscale
call
mov
cli
clc
test
aad
dec
lea
inc
push
out
push
cmp
and
iret
pop
outs
ss
ins
sbb
cmp
lea
and
ret
movs
mul
pop
sbb
xor
push
push
jle
xchg
and
lods
aad
fldcw
stc
add
js
mov
out
mov
arpl
lock
loope
or
js
jns
bound
or
sub
ss
and
mov
ret
xor
sub
jns
or
repnz
icebp
dec
sahf
inc
mov
pop
jb
cmp
cmp
ja
lods
sbb
js
aam
shr
mov
shl
cmp
out
clc
stos
jmp
sub
jbe
inc
pop
setge
cmp
test
mov
shl
cmp
xchg
dec
loopne
push
dec
push
lock
mov
pop
ja
cmp
jmp
cdq
ja
mov
and
(bad)
sbb
push
mov
mov
outs
pop
jbe
outs
in
add
mov
imul
mov
push
repnz
sbb
cld
je
dec
or
into
xchg
pop
sbb
adc
mov
pusha
popf
push
inc
adc
ds
cmp
sti
dec
shl
call
sbb
ret
pop
popf
mov
inc
push
add
or
xor
xchg
test
rcl
mov
push
or
out
or
pop
jns
jb
test
jl
sti
leave
jae
neg
or
xor
ins
pushf
dec
daa
sti
xor
lock
and
xor
xchg
in
xchg
out
cdq
shl
dec
test
cdq
add
test
pop
clc
pop
inc
fcom
ss
aam
xchg
sub
dec
xchg
jge
push
mov
dec
out
mov
adc
push
es
mov
retf
sti
dec
or
int3
xor
lods
inc
mov
cmp
xchg
outs
sub
pop
jp
mov
neg
jo
lea
push
cmp
shl
sub
sbb
nop
pop
adc
jb
and
mov
iret
cs
(bad)
mov
inc
popa
mov
xchg
ins
js
lock
xchg
mov
sahf
pop
mov
stos
jmp
retf
add
mov
fbstp
gs
xchg
test
repz
daa
add
(bad)
fistp
jl
cmp
out
out
or
adc
xchg
adc
sbb
or
xchg
aam
(bad)
xor
cmp
not
sbb
jae
repz
jmp
(bad)
test
adc
mov
mov
fs
xchg
cs
outs
and
pushf
call
pop
dec
addr16
cdq
in
outs
jne
sar
call
mov
xor
sub
adc
je
(bad)
idiv
loope
daa
pop
arpl
ror
push
push
cmp
sbb
mov
push
aas
cs
xchg
das
ficomp
cdq
adc
adc
pusha
dec
xor
aad
outs
inc
xchg
xchg
mov
push
fstp
stos
(bad)
repz
rol
fmul
add
xor
test
xchg
jmp
jge
not
popf
ret
mov
dec
or
sub
in
jne
mov
xor
(bad)
fild
adc
dec
jae
mov
ja
xchg
dec
cmp
lods
lods
lods
mov
add
xchg
inc
mov
jno
stc
aas
jne
sbb
push
jnp
nop
cli
dec
add
aad
(bad)
lock
mov
pop
dec
imul
mov
int
sbb
mov
adc
jmp
xchg
repz
int3
repz
jb
pushf
lea
ins
and
pop
jno
pop
imul
clc
mov
pop
lods
sti
xchg
inc
shr
nop
sub
sbb
ins
xchg
pop
addr16
push
pop
add
jnp
inc
pop
mov
cld
mov
addr16
ja
xor
mov
(bad)
fidiv
test
mov
test
dec
mov
push
aas
mov
mov
mov
jne
jns
movs
xor
cs
shl
xor
scas
sub
jp
(bad)
loope
and
loopne
shl
xor
ss
adc
dec
loopne
pop
xchg
loop
sub
lahf
add
cmp
stos
aam
lods
mov
test
rcl
cmp
ins
movs
or
out
jne
xchg
sbb
xor
enter
iret
in
repz
icebp
ret
mov
js
xor
scas
push
(bad)
ins
imul
mov
jnp
outs
sbb
mov
sar
and
xchg
shl
les
pop
fcom
mov
hlt
lahf
jo
mov
pushf
add
sahf
ficom
jae
mov
repz
mov
mov
push
sbb
arpl
or
pushw
mov
ins
cmp
movs
fisub
ret
sbb
xchg
les
leave
loope
ret
imul
(bad)
xchg
mul
dec
xlat
movs
or
pop
movs
idiv
ja
rcr
in
sar
or
mov
aaa
and
pop
and
jecxz
ret
popf
xchg
or
xchg
aaa
mov
ficomp
repz
sbb
push
pop
dec
imul
push
adc
mov
sbb
jnp
iret
xchg
adc
aas
test
push
jmp
pop
(bad)
dec
xor
xchg
inc
cwde
sub
gs
jge
cmps
xor
mov
mov
cli
xor
jge
fiadd
stos
stos
xchg
aam
leave
jge
dec
sbb
cwde
fs
cmps
lahf
imul
push
xchg
cmc
pop
sbb
xor
sub
sbb
retf
push
fdivr
xchg
xor
sbb
ja
cmc
call
jbe
es
mov
adc
nop
push
stos
push
mov
cmp
adc
add
cwde
jbe
dec
pop
or
scas
jle
mov
push
or
lods
mov
jo
in
sbb
pop
sti
cs
add
mov
cmp
add
cmps
aaa
test
mov
xchg
dec
add
dec
and
or
push
cmps
xchg
pop
xchg
scas
(bad)
sbb
aas
jp
outs
in
push
aas
icebp
retf
lds
mov
(bad)
adc
add
dec
mov
lahf
pop
or
fwait
mov
jnp
in
mov
push
push
mov
test
push
out
leave
and
gs
pop
xor
idiv
cmp
cmp
cdq
or
shl
inc
sbb
out
sub
fild
test
mov
int3
dec
fimul
or
mov
fidivr
adc
mov
loopne
push
jg
mul
jb
adc
scas
and
retf
cmc
stc
inc
lock
lock
push
pop
adc
xlat
scas
push
inc
adc
mov
jl
xor
add
push
cmps
daa
add
fiadd
jb
iret
mov
push
cmp
xchg
mov
xor
push
or
sub
or
cmp
dec
xchg
jle
retf
xchg
je
push
lea
stos
sti
mov
push
jmpw
push
dec
data16
int3
(bad)
call
add
dec
bound
and
dec
and
test
mov
inc
xor
ins
cwde
out
pop
sbb
mov
movs
jns
xchg
in
into
mov
data16
pusha
pop
aas
push
stos
lods
mov
mov
cmp
sub
inc
fldenv
lahf
xchg
sub
(bad)
pushf
xchg
mov
sbb
adc
lods
nop
imul
das
dec
inc
inc
and
test
hlt
xor
mov
movs
add
lahf
inc
xchg
xchg
pop
xchg
bound
test
out
jle
inc
in
jbe
int3
jae
xchg
mov
lea
adc
loope
pop
test
mov
inc
mov
cmp
and
inc
clc
adc
dec
sbb
push
mov
ins
loope
xchg
lods
cdq
dec
enter
inc
enter
pop
fisttp
mov
jb
mov
lds
arpl
sub
adc
out
call
mov
push
aas
sub
pop
jnp
mov
jns
pop
jl
and
mov
ins
jne
test
js
inc
lods
and
xlat
stos
(bad)
inc
pop
push
(bad)
push
cmp
inc
retf
inc
aaa
outs
sti
into
jecxz
sahf
push
jns
mov
or
popf
adc
ins
dec
mov
aaa
fimul
cmp
loop
stc
add
mov
push
daa
ror
mov
aad
xor
and
mov
rol
div
push
cmp
adc
ins
xor
leave
mov
jns
shl
xor
idiv
pop
cdq
inc
iret
ror
enter
retf
push
mov
lea
mov
data16
dec
mov
rcr
pop
in
inc
out
mov
sbb
dec
sar
jb
xchg
(bad)
loop
push
cmp
pushf
lahf
ret
xchg
cmps
and
inc
cwde
repz
(bad)
sbb
ret
push
xlat
fsubrp
cmp
jg
pop
xchg
bswap
cmp
fisub
mov
in
push
cwde
test
adc
cmp
inc
dec
add
popf
sbb
data16
cmp
sbb
cmp
push
cld
jg
test
sub
mov
push
jmp
and
mov
xchg
dec
xchg
sub
and
mov
sub
xchg
pop
mov
sub
or
rcl
lahf
xchg
push
xor
mov
push
mov
sbb
dec
mov
or
hlt
dec
xchg
cmp
int3
push
xchg
fwait
inc
jecxz
shl
sub
out
mov
jmp
xchg
lahf
or
push
xchg
jg
push
fmulp
sbb
push
jecxz
pop
(bad)
(bad)
xchg
(bad)
or
pop
jecxz
mov
push
mov
mov
add
inc
fdivr
xchg
jge
mov
dec
in
cdq
loope
sti
cdq
cmp
xor
xor
mov
add
pop
fldenv
leave
rol
stos
sub
fisttp
les
out
ja
sbb
adc
scas
add
or
add
mov
mov
mov
jmp
xchg
xor
dec
fwait
xchg
adc
jmp
loopne
cld
push
lahf
les
loop
add
arpl
inc
out
adc
and
push
mov
cmp
leave
loope
stc
es
jp
add
and
dec
retf
shl
imul
outs
jne
push
xchg
add
ja
mov
dec
jnp
pushf
repz
(bad)
mov
mov
mov
adc
dec
call
ret
jge
(bad)
neg
(bad)
cli
xchg
bound
rcl
or
out
push
(bad)
pop
test
xor
lock
int3
out
bnd
pop
dec
(bad)
and
cmp
stos
dec
retf
test
jno
je
push
mov
fistp
in
lock
jo
or
inc
or
add
retf
out
ja
mov
sbb
nop
fbstp
movs
test
jge
shr
cmp
pop
dec
inc
xchg
push
mov
sub
lahf
sub
test
enter
mov
imul
adc
pop
in
and
mov
fcomp
inc
fiadd
js
repz
shl
cmp
adc
fsubr
ret
xchg
popa
mov
push
repnz
or
scas
cmps
mov
inc
imul
xor
cmp
out
ins
fmul
pop
mov
or
test
adc
or
jmp
inc
cmps
cmps
ins
ja
dec
(bad)
dec
add
shr
mov
mov
jmp
test
or
sar
cmps
lods
(bad)
lahf
jno
xor
in
stos
iret
(bad)
call
in
jecxz
les
das
dec
call
mov
test
sar
adc
int
mov
fist
or
inc
cmp
arpl
sub
mov
xlat
lea
les
aam
fnstenv
je
jp
xor
jmp
es
pop
mov
icebp
(bad)
or
ror
clc
inc
and
inc
xor
pop
cmps
dec
rcl
adc
jmp
jno
sub
cmp
add
loope
xchg
adc
cmp
mov
and
(bad)
inc
cmp
pop
out
pop
in
add
mov
jbe
mov
outs
and
ins
fbstp
into
es
sti
cdq
sbb
adc
pop
xor
xchg
push
lods
xor
adc
loop
mov
fucom
sub
and
jb
mov
mov
inc
mov
fs
icebp
sub
(bad)
mov
sbb
push
xlat
fcom
leave
sbb
jb
shl
mov
mov
and
cwde
fldenv
(bad)
cmp
cmp
imul
pop
jmp
ret
(bad)
jae
test
add
clc
fnstsw
cli
adc
aam
cmp
push
mov
in
mov
sub
add
cs
mov
in
repnz
jne
shl
aas
stos
sub
xchg
mov
sub
pop
mov
pop
scas
pop
cli
mov
(bad)
retf
cli
int
adc
xor
ja
pop
scas
cmp
adc
sbb
mov
and
stos
cmp
or
data16
xchg
(bad)
xor
jne
mov
add
pop
jno
gs
call
mov
mov
dec
mov
inc
rcl
xchg
rcr
retf
sub
mov
neg
shr
daa
pop
dec
call
jo
mov
push
cmps
shl
sbb
int
fisubr
clc
push
stc
jns
sahf
or
leave
sbb
cmp
imul
imul
inc
mul
loope
or
xor
out
mov
sub
dec
stc
mov
data16
aas
jecxz
push
add
adc
inc
rol
in
bound
pop
js
xor
sbb
into
popa
inc
sbb
loop
adc
inc
mov
cwde
(bad)
sub
sti
into
addr16
imul
push
mov
pop
call
imul
cmp
aam
xchg
stos
aam
mov
inc
(bad)
mov
(bad)
aas
xchg
hlt
call
retf
sbb
pop
pop
into
pop
and
js
or
imul
shl
inc
or
push
mov
xchg
out
arpl
enter
mov
mov
loopne
fisttp
mov
cmc
es
sbb
fmul
and
adc
xor
xchg
adc
into
(bad)
in
in
inc
movs
(bad)
jbe
fstp
xor
out
jg
js
addr16
bound
inc
pop
mov
or
xlat
mov
ffree
(bad)
fisub
pop
ret
jnp
movs
inc
repnz
push
(bad)
jecxz
or
out
fwait
push
add
pop
lahf
leave
jno
sbb
push
xor
mov
or
pop
add
pop
add
mov
inc
jge
push
cmp
enter
stc
sub
cmp
mov
inc
rcr
xchg
mov
lock
sbb
add
sbb
lea
add
cmps
ficomp
and
in
cmp
outs
mov
or
mov
xor
add
sbb
inc
jg
xor
pop
jp
mov
sub
arpl
out
jnp
int3
mov
or
inc
inc
inc
mov
adc
(bad)
fsub
mov
and
lods
inc
mov
mov
repnz
jmpw
dec
aas
sti
cmp
call
pop
pop
mov
push
lds
(bad)
repz
(bad)
or
sbb
es
retf
add
(bad)
test
jns
inc
xor
or
int3
retf
mov
aam
mov
xchg
mov
sbb
inc
xchg
cmp
and
(bad)
and
add
inc
xor
or
add
jle
das
jmp
or
aam
(bad)
loope
addr16
sbb
cmp
mov
sub
dec
(bad)
pop
mov
mov
mov
sub
and
ja
fdiv
inc
or
jecxz
xchg
scas
cli
inc
push
sub
mov
in
adc
xchg
call
cwde
(bad)
xor
and
push
mov
ins
inc
(bad)
fcomip
cld
xlat
mov
mov
outs
dec
call
cmps
sbb
fwait
xchg
jnp
addr16
shl
je
call
cmc
mov
add
mov
daa
or
and
aam
popa
sahf
test
or
out
dec
push
rol
and
addr16
dec
xchg
sub
data16
jl
popa
inc
adc
nop
shl
(bad)
mov
fucomip
sbb
(bad)
xchg
cmp
cs
test
sub
stos
xchg
adc
xor
iret
mov
mov
in
sbb
or
mov
dec
mov
mov
pop
stos
out
lds
ret
pop
jecxz
mov
dec
iret
sbb
loopne
push
pushf
xchg
test
cmp
inc
inc
or
dec
test
int3
mov
dec
(bad)
pushf
shr
sub
dec
outs
inc
ret
aas
pop
sub
test
fisttp
cmc
mov
leave
push
or
movs
sbb
xchg
sub
dec
mov
add
iret
retf
mov
mov
bts
mov
test
shl
movs
cmp
rol
lods
rol
jb
xor
into
test
loope
fnstsw
or
retf
mov
xor
fimul
inc
in
jmp
and
xor
idiv
adc
xchg
push
ja
(bad)
jmp
gs
fwait
mov
cdq
fadd
cli
jmp
xchg
jne
repnz
dec
inc
or
lahf
mov
int3
loope
pop
std
shl
lea
repnz
xchg
mov
xchg
popa
mov
out
test
shr
push
lods
shr
outs
stos
push
push
push
cwde
movs
jne
stos
fcom
rcr
into
je
push
mov
retf
aad
sub
xor
jle
fnsave
push
xor
in
xchg
mov
stos
aaa
imul
mov
and
fist
and
out
add
xchg
aas
sar
cmps
sbb
sahf
rol
pushf
push
scas
sbb
adc
sub
sub
inc
cmp
call
(bad)
and
retf
stos
(bad)
add
stos
xchg
ins
sub
push
push
pop
daa
cmps
jnp
rcr
mov
hlt
fsub
pop
mov
pusha
xor
shr
jle
xchg
cmp
cwde
icebp
rcl
adc
adc
ins
pop
jmp
sub
xchg
out
adc
test
mov
mov
push
inc
and
jb
ss
lea
inc
test
bound
lods
xchg
je
loopne
dec
retf
dec
jmp
jle
mov
and
dec
inc
inc
inc
(bad)
sbb
dec
scas
loop
je
add
add
popf
(bad)
jp
jecxz
fs
fst
inc
(bad)
inc
cmp
and
or
movs
dec
mov
scas
ffreep
fldcw
jnp
cli
pop
push
retf
shl
xor
push
xchg
jmp
pop
cs
inc
dec
daa
mov
dec
jmp
push
jno
std
pop
bnd
in
xor
dec
sub
sub
xor
stos
(bad)
fsub
dec
cmp
imul
push
mov
dec
enter
pushf
push
mov
loopne
test
inc
push
imul
jle
nop
call
hlt
mov
sub
push
xchg
xor
in
cdq
xchg
xchg
add
xchg
les
sub
push
in
xor
int3
mov
and
fs
pop
dec
or
dec
ror
and
inc
or
stos
loop
inc
loop
and
adc
les
fld
mov
mov
xlat
inc
fimul
push
jp
test
cmp
fstp
scas
xchg
cmps
push
jbe
in
jecxz
xor
(bad)
mov
or
std
ins
sub
inc
xor
cwde
sub
push
les
dec
adc
ds
dec
loope
or
mov
pop
cmp
or
pop
adc
add
xchg
adc
adc
int
or
jns
cmp
shl
inc
loop
cmps
cdq
and
lods
in
ds
jmp
pop
ss
repnz
call
inc
add
out
adc
je
dec
sahf
or
sbb
add
fsubrp
mov
les
iret
add
push
mov
loop
js
retf
jae
jecxz
repnz
dec
popa
shl
lea
fdiv
js
sbb
jbe
or
or
add
mov
inc
(bad)
pop
xor
cmp
pop
inc
inc
outs
test
ja
pop
or
mov
stos
adc
fbstp
dec
sub
retf
cmp
mov
cmp
es
cmp
pop
push
dec
test
sub
movs
stos
enter
dec
mov
xor
call
loop
mov
or
or
cmp
jp
arpl
sahf
sub
mov
or
xchg
jg
inc
sbb
mov
xchg
in
pop
out
pop
and
pop
xchg
jle
push
jle
mov
cmovbe
pop
out
jl
dec
mov
xlat
loop
mov
mov
sub
(bad)
xor
hlt
xor
dec
repnz
test
mov
enter
out
popa
mov
dec
loopne
xor
xchg
jbe
xor
sbb
cli
jle
mov
xor
ins
mov
imul
rol
add
fld
enter
jns
jmp
xor
sbb
adc
xor
mov
xor
dec
outs
pop
adc
mov
cmps
sub
gs
pop
jmp
scas
aaa
adc
test
xor
cmc
lahf
xchg
mov
cs
cmp
mov
push
retf
xor
retf
push
mov
ss
inc
cwde
fsubr
rcl
clc
xchg
mov
mov
test
push
outs
movs
mov
loop
movs
add
(bad)
jle
mov
add
lock
call
sar
sbb
pop
sbb
mov
(bad)
icebp
xor
ins
dec
scas
bound
lds
dec
mov
mov
sub
jmp
shr
fld
mov
sub
imul
neg
sahf
or
and
jp
int3
iret
mov
mov
mov
mov
jmp
mov
data16
add
sti
xlat
mov
dec
push
pop
jb
popf
adc
das
int
add
dec
ins
mov
out
cmps
jecxz
and
fimul
jne
out
mov
stc
pop
enter
arpl
out
jns
mov
cs
pop
xchg
repnz
retf
jge
jle
dec
xlat
in
sbb
pop
std
jp
and
pop
mov
adc
xor
jp
out
sub
mov
loop
fwait
ds
inc
dec
sub
and
gs
iret
sbb
mov
jp
add
leave
cmp
ins
mov
sbb
mov
push
fs
adc
call
mov
loope
stc
shr
xor
cmc
pop
jecxz
jecxz
jge
dec
fwait
mov
ss
dec
test
pop
push
sbb
nop
pop
xor
xchg
cli
loopne
test
les
add
or
add
sbb
iret
icebp
and
add
pop
out
ins
popa
imul
lds
pop
loop
mov
aas
out
jo
push
xchg
div
and
(bad)
shl
ror
nop
cdq
test
ss
mov
adc
fst
dec
mov
push
repnz
cmp
(bad)
and
pop
test
aas
mov
push
mov
pusha
outs
pop
pop
(bad)
xor
(bad)
xchg
imul
inc
ficomp
add
enter
hlt
jle
mov
into
pop
pusha
das
repz
adc
mov
das
inc
jbe
push
pop
es
outs
mov
sub
pop
test
iret
pop
cmp
mov
out
mov
aaa
dec
dec
fisttp
sbb
sub
inc
fidivr
rcr
cmp
mov
jae
sub
fdivr
mov
cmp
call
(bad)
ret
pop
int3
pop
jmp
(bad)
adc
and
inc
mov
xor
imul
or
icebp
and
int
call
jno
sub
ss
mov
inc
jge
out
inc
call
pop
in
mov
or
xor
xor
pop
pop
jns
hlt
xchg
mov
vmovlhps
pop
aam
in
adc
mov
iret
outs
stos
out
adc
inc
dec
cmp
in
xchg
call
imul
fiadd
sbb
test
fadd
push
nop
xchg
loopne
add
jbe
paddusb
jmp
lea
push
push
mov
clc
pop
cmp
sub
and
aas
pop
cmp
retf
out
sahf
call
in
arpl
std
int
pop
cdq
jmp
dec
push
xchg
push
fdiv
mov
dec
pop
test
or
add
dec
mov
jae
aam
fidivr
dec
pop
leave
in
outs
xor
add
ds
add
cld
(bad)
shl
add
and
xchg
xchg
loop
js
rcl
fidivr
adc
(bad)
retf
lods
xor
scas
(bad)
pop
mov
add
cmc
int3
in
cmp
jecxz
fstp
fstp
or
out
xor
adc
and
push
push
xor
xchg
sub
mov
mov
lods
popa
pop
test
repnz
or
pop
inc
lea
mov
and
lods
dec
pop
(bad)
jge
inc
add
loopne
push
shl
inc
adc
mov
mov
push
pop
inc
mov
mov
dec
mov
sbb
dec
sub
mov
jmp
test
xor
xchg
and
in
jge
mov
ja
in
mov
outs
rcr
movs
pop
push
retf
and
mov
test
in
bound
aaa
add
movs
movs
in
xchg
mov
int
and
inc
iret
scas
sahf
(bad)
in
inc
clc
ins
cs
mov
and
pop
push
loope
rcl
fisttp
push
movs
push
out
adc
mov
pusha
out
mov
mov
jmp
int
ret
les
or
cmp
inc
cmp
sub
jle
adc
push
dec
inc
push
rcr
mov
dec
xor
bound
mov
aas
mov
add
xor
and
ret
cmps
mov
arpl
sar
xchg
lds
imul
or
jmp
int3
or
and
cwde
pop
push
mov
sub
push
fild
jmp
cmove
add
adc
mov
mov
ficom
sub
out
hlt
pop
int3
mov
jmp
call
pop
xor
out
pop
inc
loope
fdivp
xchg
dec
dec
or
push
(bad)
outs
jae
xchg
xchg
adc
imul
push
scas
outs
js
xchg
sahf
and
dec
int
or
(bad)
loope
cld
aas
cmp
xor
mov
sub
inc
add
das
mov
dec
sub
iret
(bad)
loopne
inc
pop
xor
jge
push
in
mov
stos
into
add
loope
popf
xor
or
rol
dec
ins
cmp
movs
mov
jmp
loopne
mov
push
jle
(bad)
fidivr
cmp
push
bound
lock
xor
fiadd
pop
mov
dec
das
scas
add
jl
cs
xchg
dec
add
sbb
or
dec
cmps
mov
pop
inc
xchg
cmps
stos
mov
les
pushf
movs
movs
scas
adc
xor
lods
fld
pop
xlat
add
mov
push
inc
idiv
cmp
cmps
push
jle
ror
cld
mov
and
adc
push
(bad)
jg
sub
jne
cmp
adc
(bad)
test
enter
sbb
pop
test
in
fist
push
jo
mov
jmp
and
repnz
lahf
pusha
sbb
retf
pop
mov
or
inc
xchg
jl
fidiv
out
and
mov
pusha
ins
inc
xchg
aam
sbb
pop
cs
nop
and
xchg
xchg
ins
aad
sbb
xchg
mov
cdq
xor
mov
popa
xchg
or
fisub
lds
aad
pop
mov
push
(bad)
jbe
pusha
(bad)
in
xchg
xor
dec
imul
xchg
mov
mov
mov
add
mov
xchg
sbb
xchg
psrld
mov
xor
xor
sti
fisub
mov
repnz
add
xchg
cmp
push
dec
sub
jns
jle
sub
mov
fnsave
sub
mov
pop
sub
mov
sbb
shl
fs
std
push
ins
jmp
xchg
out
inc
rcr
loop
mov
inc
add
lahf
popa
lahf
sub
daa
stc
mov
lods
dec
pop
adc
fwait
jb
and
dec
dec
vpaddd
daa
push
xchg
mov
xor
(bad)
pop
jge
xchg
pop
ror
jnp
cmps
mov
mov
and
push
sub
add
fs
lods
mov
add
push
daa
cmps
or
mov
mov
inc
cmp
addr16
test
cwde
sbb
mov
jg
bound
mov
pop
inc
cmps
mov
push
adc
mov
pop
cmps
push
or
or
loopne
es
and
imul
push
inc
test
mov
inc
test
mov
sbb
mov
(bad)
cli
repnz
xchg
(bad)
cmp
xchg
sub
das
mov
sbb
retf
aad
test
pusha
fsubrp
jmp
cmp
adc
mov
stos
push
xchg
sbb
pusha
xchg
into
in
mov
and
sbb
push
adc
lods
cwde
in
jbe
xlat
addr16
outs
out
cmp
sbb
sub
stc
je
hlt
cmp
jbe
mov
inc
loopne
adc
lods
and
js
(bad)
js
test
out
sub
outs
mov
cli
xchg
repnz
dec
cs
xor
out
icebp
ror
aaa
dec
cld
retf
adc
mov
(bad)
cmp
cmovnp
push
jl
jmp
mov
adc
leave
xchg
mov
and
ret
pop
fimul
int
clc
xchg
pop
cmp
adc
sbb
lods
cmp
mov
push
test
test
xchg
pop
mov
(bad)
outs
fadd
sub
dec
rcr
xor
lahf
jmp
mov
sbb
clc
sahf
jmp
mov
enter
inc
repnz
push
or
dec
popf
(bad)
sbb
gs
dec
fsub
movs
imul
cmp
ins
xchg
mov
fild
lods
dec
mov
jp
shl
pushf
mov
test
jbe
test
loopne
ins
iret
outs
mov
mov
mov
and
clc
jo
arpl
sub
aam
ins
jno
mov
fcmovnu
inc
inc
xor
aam
in
cmp
sub
ss
cmp
out
jb
push
jp
pushf
in
cli
mov
iret
jg
push
sub
ret
mov
inc
js
inc
cmps
push
mov
imul
(bad)
pop
and
in
jb
jno
dec
adc
dec
xor
lea
adc
and
repnz
mov
inc
push
xchg
ret
adc
jg
push
cli
loopne
enter
test
and
or
dec
ret
or
call
fucomi
bound
hlt
inc
pop
adc
frstor
inc
in
push
hlt
in
cmc
mov
fstp
out
dec
mov
and
sbb
push
ret
sub
pop
cdq
push
clc
out
je
stc
inc
cli
cmc
mov
gs
jg
xchg
or
xor
mov
neg
nop
push
dec
leave
push
xor
cmps
push
and
sub
lds
loop
xor
jns
pop
pusha
xor
add
std
add
cwde
mov
mov
cld
test
xor
or
xchg
bound
(bad)
mov
jb
add
add
cdq
into
pop
jae
bound
push
push
fmul
mov
mov
shr
mov
and
xchg
add
add
dec
cs
cmp
push
and
cmps
sti
lea
ins
pushf
stc
dec
dec
dec
std
xor
cmp
adc
repz
hlt
inc
xor
and
int
add
sbb
add
es
jo
xchg
jle
mov
xchg
pop
aaa
push
cmp
daa
loop
or
ret
cld
mov
lods
push
cs
in
es
sub
ret
mov
mov
sub
jmp
out
push
inc
jmp
xchg
out
test
arpl
adc
mov
ret
xchg
shr
ins
pusha
jbe
into
jb
jb
imul
retf
jle
xchg
arpl
or
aaa
sbb
scas
jno
(bad)
sub
xchg
loop
adc
add
cmp
mov
push
das
in
aad
and
mov
fisub
in
xchg
in
faddp
xchg
sti
(bad)
fcomp
enter
push
ror
fst
cs
dec
jg
rcl
adc
jmp
mov
and
in
mov
cmps
out
enter
fisubr
adc
aam
sar
dec
ss
jb
sbb
fisubr
sbb
mov
cmp
xchg
sub
dec
daa
mov
jo
jp
mov
cli
cmp
in
sub
aam
adc
add
pop
cmp
icebp
dec
push
cdq
and
not
je
repnz
pushf
push
int
or
dec
xchg
dec
pop
cld
arpl
pop
lods
std
daa
dec
add
push
push
pop
test
xor
dec
aam
frstor
rcr
adc
mov
dec
imul
bound
cmp
(bad)
push
mov
and
aam
bound
mov
cli
ds
pop
pop
fld1
loopne
in
inc
mov
xor
jg
lahf
jge
lea
scas
and
or
into
std
jge
sahf
je
pushf
jecxz
push
lods
push
in
leave
shl
adc
push
popf
push
lods
cld
rcr
stos
movs
(bad)
cld
js
movs
inc
mov
cld
adc
scas
imul
outs
pop
scas
rcr
or
enter
xchg
sbb
mov
loopne
sahf
test
adc
addr16
mov
push
imul
imul
inc
adc
inc
je
mov
sti
fdiv
sub
std
sbb
and
cld
add
retf
sbb
loop
pop
cmp
push
xor
in
lock
pop
out
xor
jne
mov
retw
and
ja
rcr
mov
adc
mov
in
dec
call
xchg
cdq
sub
jb
jge
mov
je
adc
xlat
sub
adc
(bad)
mov
sub
mov
fnstenv
repnz
mov
push
cs
inc
dec
add
sbb
popa
mov
movs
les
mov
push
pop
js
dec
adc
cmp
or
or
push
in
in
mov
mov
shl
callw
fisttp
sub
jns
popa
(bad)
repz
mov
xchg
jmp
mov
sub
dec
push
xor
mov
xchg
shr
hlt
cmc
movs
in
inc
mov
mov
addr16
jns
fmul
shl
mov
sbb
fld
jne
mov
fiadd
fcomp
xlat
jecxz
cli
ja
fisub
sub
arpl
add
(bad)
repnz
aad
mov
and
mov
mov
cs
jno
adc
imul
jcxz
jbe
addr16
and
or
pmulhw
xor
int
dec
loope
jge
mov
cli
mov
jae
mov
xor
or
jne
ins
xor
hlt
cwde
out
(bad)
jns
cmp
sub
les
fwait
leave
daa
fistp
cmp
pop
inc
imul
ret
adc
std
arpl
adc
loopne
nop
dec
retf
mov
cli
call
sub
mov
xchg
add
adc
cmp
add
inc
inc
inc
les
inc
outs
sahf
sub
mov
or
push
lods
je
xchg
mov
mov
fmul
imul
clc
daa
js
cmp
add
js
push
jmp
ror
in
dec
movs
inc
inc
adc
lods
cmp
jnp
clc
cmp
jns
inc
jmp
ret
stos
push
int3
retf
shl
xlat
in
bnd
in
(bad)
push
inc
and
or
outs
pop
retf
popf
mov
movs
out
dec
loopne
xor
adc
sbb
stos
mov
lds
icebp
mov
mov
xor
and
(bad)
inc
pop
outs
ja
out
icebp
bt
or
or
aaa
jae
rcl
call
mov
addr16
sub
xchg
test
enter
dec
mov
push
pop
loopne
mov
and
pop
jo
lahf
add
inc
pop
daa
or
or
(bad)
cmp
into
ja
(bad)
mov
mov
mov
adc
addr16
aam
hlt
loope
scas
loop
mov
cmp
mov
mov
pushf
cmp
lock
push
adc
leave
data16
addr16
popf
shr
push
mov
jae
and
aad
(bad)
shr
inc
ins
out
scas
push
ret
mov
data16
xchg
and
cmp
leave
push
jb
dec
cmp
into
jecxz
and
inc
out
add
idiv
into
jp
in
movs
mov
stos
or
adc
or
add
stc
call
and
ret
mov
arpl
and
jecxz
adc
inc
inc
and
mov
call
aad
add
cmp
fld
in
pop
pop
call
dec
aam
xchg
sbb
cmp
mov
pop
(bad)
inc
test
fs
mov
sbb
xchg
(bad)
test
pop
test
sub
lds
gs
dec
and
sub
inc
fld
xchg
and
out
mov
imul
mov
fld
mov
out
ss
mov
lds
xchg
pusha
cmp
lods
sbb
in
aam
pop
jmp
repnz
adc
cs
mov
xor
mov
mov
repnz
pop
push
fs
daa
shl
jae
cmp
icebp
mov
test
cmp
stos
mov
cmp
sub
repz
cmc
bound
and
lds
add
ds
mov
mov
ins
mov
xor
cmp
xor
jl
push
pop
mov
aaa
pop
int3
jne
fwait
add
adc
loop
push
arpl
xchg
sub
jecxz
cld
sbb
sub
ret
sbb
mov
push
xchg
fiadd
das
mov
dec
shl
or
mov
sub
cmps
xchg
jmp
mov
sub
bound
(bad)
jne
sbb
retf
push
inc
fsubr
add
push
lods
jno
sub
push
mov
adc
bnd
in
pop
jmp
scas
cwde
fs
test
scas
idiv
fcmovb
xchg
scas
dec
add
pop
and
in
loopne
push
in
pop
lds
adc
ds
sbb
or
aas
cmp
xor
movs
sub
jmp
mov
inc
pop
hlt
sbb
ins
mov
xor
push
xchg
inc
xor
sahf
dec
cwde
dec
(bad)
stos
clc
jno
fimul
and
dec
sbb
mov
push
xor
lods
fs
into
adc
cs
cs
stos
cmp
pop
call
stc
imul
xor
outs
sub
inc
pop
xchg
test
mov
sbb
add
xchg
sbb
xor
fimul
cmp
sti
jb
push
push
sbb
mov
pop
dec
push
idiv
ja
punpckhbw
mov
rcr
fisttp
push
test
sub
cmp
and
jmp
jge
stc
cmp
xor
data16
pushf
popf
sar
jmp
js
data16
push
sti
xlat
xchg
push
and
call
(bad)
and
scas
push
addr16
mov
je
out
mov
imul
pop
xchg
punpcklbw
cmc
pop
std
adc
pop
fcom
push
jo
xor
pop
adc
jo
fisubr
push
dec
mov
jae
push
mov
nop
call
idiv
inc
test
cmc
and
iret
repz
sub
ins
ins
ret
(bad)
imul
inc
mov
add
call
ret
mov
dec
shl
dec
push
out
enter
retf
mov
ror
mov
test
cdq
mov
push
ja
adc
ror
popa
mov
das
stc
pop
xor
fwait
push
movs
add
mov
mov
mov
loop
dec
or
out
int
mov
sbb
dec
out
push
push
imul
cmp
mov
add
mov
jl
cmp
mov
enter
leave
fldcw
jo
xchg
xor
sbb
data16
or
mov
adc
inc
dec
jbe
xor
push
fcomp
inc
fidiv
std
add
hlt
push
ss
jno
rol
fadd
(bad)
bound
cmc
pop
daa
xchg
in
fs
dec
in
mov
add
(bad)
dec
es
mov
fild
in
sbb
test
xor
pop
iret
add
mov
loop
dec
js
push
mov
jnp
mov
pop
inc
push
jg
pop
icebp
mov
and
adc
mov
mov
test
sti
test
adc
xchg
fnstenv
test
retf
or
dec
cmp
sbb
ret
movs
inc
outs
iret
fisttp
cli
sbb
test
ror
lods
stos
adc
sbb
inc
jmp
and
dec
inc
pop
call
iret
jle
sub
mov
mov
pop
and
add
ins
sbb
mov
outs
ja
aas
jg
mov
mov
and
out
inc
sbb
(bad)
rcr
cs
or
bound
sbb
and
and
push
aas
and
adc
popa
idiv
or
shl
je
es
or
mov
fistp
xchg
and
mov
mov
mov
cmc
cwde
cmps
mov
adc
ret
xlat
jae
cmps
and
xchg
not
cmp
and
dec
inc
xchg
fadd
loop
push
push
jge
mov
fnstsw
adc
pop
cmp
adc
sbb
and
jne
je
add
add
mov
loope
cmp
and
jl
xchg
inc
ins
outs
int3
in
xor
mov
xlat
pop
adc
in
and
pop
call
cmp
lds
mov
test
ins
stos
sbb
nop
xchg
es
mov
pop
test
pop
add
xchg
adc
sub
mov
inc
ins
fiadd
cwde
fucomip
jmp
mov
sub
xor
sub
xor
sahf
pop
lds
movs
test
xlat
jns
adc
xor
and
add
cdq
shr
cli
sub
cmp
and
cmps
dec
add
push
sbb
ror
ins
push
(bad)
retf
shr
cwde
jp
adc
adc
fincstp
adc
pop
inc
jge
ret
lods
test
mov
ss
scas
arpl
push
push
ins
test
test
dec
loope
lock
inc
mov
jecxz
jg
fisttp
adc
dec
cmp
rol
xchg
fs
in
push
mov
and
add
ror
jmp
das
mov
retf
mov
shr
in
loopne
cdq
rcl
loope
hlt
push
inc
daa
push
or
jns
inc
dec
(bad)
xchg
jle
mov
stos
enter
xchg
(bad)
jmp
adc
cmp
push
adc
retf
dec
lods
ins
stos
jb
add
test
aam
add
jl
int3
xchg
and
jbe
in
imul
mov
or
out
int
add
movs
mov
xchg
int3
cdq
push
pop
jmp
mov
jecxz
in
mov
push
js
push
jbe
loop
lea
popa
and
dec
addr16
cmp
jnp
repz
sbb
data16
cwde
jmp
imul
arpl
adc
pop
test
or
in
adc
sar
lods
sti
in
xchg
or
je
ins
dec
lods
cld
js
mov
sub
lock
retf
fsubr
retf
jne
inc
and
or
cmovno
in
xor
push
fst
enter
dec
mov
not
mov
sti
jle
sub
cmps
test
lods
test
arpl
mov
xchg
dec
push
mov
dec
cmp
enter
jecxz
loopne
cmp
ja
cwde
cdq
jo
and
xchg
jne
in
test
imul
jmp
stos
jl
std
(bad)
int
mov
neg
rcr
pop
or
stc
pop
ret
retf
push
mov
or
cwde
or
inc
mov
pop
cmp
mov
sub
add
ret
sub
jns
stc
mov
inc
fimul
mov
jmp
icebp
stos
jne
jno
adc
pop
iret
and
xchg
aad
xlat
ror
scas
add
shl
cmc
daa
imul
fs
lock
popf
sub
stos
ja
into
repz
test
imul
sbb
push
sbb
jg
in
xor
loop
mov
dec
and
ds
test
movs
sbb
xlat
outs
lds
pushf
fiadd
jl
cwde
xor
test
inc
cwde
pop
and
mov
xlat
sbb
jmp
mov
mov
xor
and
in
xor
rcl
sub
inc
loop
pop
inc
fucomi
sub
addr16
or
and
fcmovnbe
xchg
imul
push
ins
mov
mov
pop
mov
psubsw
mov
and
inc
inc
push
cld
pop
mov
adc
mov
add
ret
push
std
cmp
aad
inc
in
call
les
clc
in
pop
out
push
call
popf
adc
mov
js
push
mov
cli
iret
repz
repnz
push
shl
leave
je
fcomp
jnp
hlt
scas
and
jge
test
cmp
adc
jo
jmp
inc
adc
mov
sahf
imul
in
mov
mov
ret
mov
cmp
push
cld
cmp
int
jp
mov
adc
jp
stc
cmp
rcl
cmc
pop
stos
sbb
jmp
sbb
sbb
movs
fdiv
xchg
ja
out
mov
mov
retf
stc
pop
hlt
in
dec
mov
out
jge
cmp
iret
in
mov
jg
push
inc
add
or
(bad)
sahf
test
enter
fsqrt
sub
xor
mov
arpl
dec
mov
cmp
js
hlt
popf
test
out
cmp
cmp
and
add
ud2
fidiv
popf
js
enter
mov
add
leave
test
adc
jno
out
sar
add
cmps
dec
dec
fadd
mov
mov
(bad)
mov
std
nop
mov
xor
jmp
das
xor
ret
pop
lahf
cwde
or
pop
lods
jne
pop
stos
pushf
sbb
adc
lahf
add
iret
sbb
leave
mov
(bad)
mov
mov
clc
mov
add
int3
sbb
sub
mov
xchg
cmps
adc
push
fist
mov
fs
ss
sbb
daa
mov
dec
cs
bound
pusha
test
ja
xchg
mov
adc
xor
push
movs
rcr
add
dec
stos
push
inc
fsubrp
test
push
mov
cmp
inc
jmp
or
int3
mov
sbb
stos
mov
xlat
fsub
imul
adc
lods
xlat
mov
hlt
xor
ficom
jge
or
xchg
mov
enter
xlat
xchg
jg
pop
xchg
aad
jl
sub
sar
mov
inc
cwde
xor
dec
jge
adc
dec
and
xchg
mov
leave
aaa
xor
movs
fistp
push
xor
jecxz
bound
sub
lock
mov
lock
add
mov
imul
xor
jae
xchg
add
popa
in
mov
in
inc
sbb
jl
(bad)
sbb
jo
cmps
jb
je
jb
movs
xchg
push
fisubr
arpl
js
inc
mov
das
push
sub
aaa
or
xchg
dec
in
sub
push
clc
cmp
sbb
jecxz
pop
xchg
xor
mov
mov
out
mov
cdq
lods
mov
lods
or
fsubrp
mov
je
sub
add
nop
push
ja
sub
lock
outs
jne
pop
imul
(bad)
push
inc
mov
(bad)
loop
ss
shl
sbb
sub
repz
ss
jae
xor
xor
add
popf
cmp
mov
ret
pop
sub
in
cmp
les
pop
mov
push
add
outs
push
and
and
fwait
cli
retf
dec
mov
and
call
mov
ret
data16
fnstsw
pop
jno
push
sub
pusha
out
lea
and
or
xor
in
fisubr
ins
ret
or
test
xor
xchg
rcl
rep
add
(bad)
(bad)
lahf
mov
divps
call
pop
mov
enter
mov
and
cmp
ds
fs
xor
cmp
sbb
out
nop
sbb
push
or
dec
leave
xchg
jne
xor
cmps
sti
pop
jbe
or
mov
adc
pop
out
and
mov
dec
pop
imul
cmp
adc
and
paddsb
scas
aam
pop
fsub
dec
int
pusha
ret
repz
sub
popa
mov
in
daa
xlat
push
pop
pop
cmp
aad
jge
iret
jecxz
inc
ja
sbb
ret
dec
push
jle
mov
repnz
cld
add
ss
mov
dec
test
sub
push
shr
enter
dec
cmp
jle
rcl
mul
inc
inc
jnp
ds
test
cld
ret
addr16
jp
stc
dec
cmp
sbb
fild
mov
ror
clc
arpl
lds
push
fcomp
sub
jno
xor
(bad)
(bad)
cdq
push
stc
mul
in
pop
sub
jecxz
and
inc
call
xchg
cmc
mov
pop
retf
mov
sub
mov
retf
retf
push
or
mov
mov
lock
sub
cmps
xor
sti
je
jns
jp
adc
add
pop
jnp
sub
retf
push
or
hlt
xor
or
sub
mov
and
or
inc
jb
push
mov
addr16
aam
mov
out
not
neg
shl
jno
and
or
mov
cmps
dec
jbe
movntq
fld
cwde
xchg
or
shr
cdq
or
push
(bad)
and
call
jo
pop
pop
dec
jge
dec
stos
pop
xlat
es
movs
push
xor
or
outs
xor
add
das
test
popa
and
cld
sbb
push
pop
mov
scas
movs
das
sbb
adc
adc
jb
jecxz
retf
in
nop
xchg
or
cmp
jmp
imul
mov
sbb
push
fisub
xchg
clc
xchg
test
aas
xchg
mov
ffreep
icebp
push
jge
xor
mov
ficomp
mov
cs
pop
pop
mov
fcomip
iret
adc
pop
in
ja
lock
(bad)
jp
gs
jle
cmps
pop
cmps
aaa
xor
enter
sbb
ret
leave
push
cmp
cmp
(bad)
jg
or
mov
inc
je
push
retf
sbb
fld
call
or
inc
lock
cmc
adc
mov
jmp
mov
xor
mov
movs
mov
sub
dec
fistp
mov
jnp
jmp
movs
das
jmp
xchg
mov
mov
dec
out
dec
cmp
stos
pop
dec
adc
mov
popf
or
jno
shr
leave
fmul
pop
out
gs
mov
push
popa
xor
mov
or
inc
jbe
push
shl
outs
ins
stc
popa
retf
shl
sub
pop
mov
xchg
std
shr
mov
stos
test
dec
stc
sub
sti
jecxz
xlat
pop
and
popa
xor
popa
add
and
push
lods
xor
jo
ror
pop
and
add
lahf
mov
in
cwde
sub
and
dec
jmp
mov
push
(bad)
inc
jmp
sub
fldenv
mov
cmps
xchg
adc
into
mov
(bad)
mov
ficom
aam
pop
imul
aam
inc
loopne
mov
push
in
inc
inc
dec
mov
leave
mov
sub
pop
pop
aad
push
push
jmp
add
stos
aaa
setne
sbb
ffreep
cmc
ret
add
xchg
pop
aad
out
pop
pop
test
cmp
cmp
(bad)
pop
add
lea
call
jmp
sbb
pop
sar
push
xchg
xor
popa
pop
out
ja
xchg
loop
adc
push
mov
xchg
mov
cld
ror
in
cwde
sub
aam
fnsave
cmp
xlat
cmps
lods
aam
into
pushf
mov
cmp
dec
fisttp
inc
repz
loopne
leave
gs
push
gs
mov
xchg
cmp
movs
inc
mov
push
popf
arpl
mov
inc
movs
dec
cld
call
mov
ins
sub
ins
jle
movs
lea
mov
mov
les
mov
lds
loopne
data16
adc
jmp
outs
jnp
xchg
mov
(bad)
pop
inc
xchg
xchg
dec
test
or
mov
pop
add
(bad)
sbb
les
xor
clc
or
sbb
dec
sbb
iret
scas
test
sub
mov
xor
push
adc
outs
mov
sar
sub
test
stos
pop
sub
or
mov
imul
(bad)
and
scas
cs
adc
sub
and
retf
das
loope
fnsave
retf
cmp
or
push
pop
and
add
bound
or
or
in
pop
pop
sub
xor
call
jo
loop
lods
push
cmps
xor
mov
out
shl
xchg
lock
mov
sub
rcl
in
push
add
jbe
sbb
push
rcr
sub
mov
xlat
int3
jle
mov
inc
cmp
sbb
sub
add
outs
sbb
cdq
or
cs
rcl
sub
cmc
nop
sub
in
repz
sbb
cs
pop
xor
lock
(bad)
sub
fiadd
xor
test
sub
jge
jbe
loope
mov
and
aas
xor
fwait
push
repnz
jecxz
mov
push
(bad)
push
sub
cwde
mov
fiadd
jg
jg
lods
lea
xor
or
jle
sub
cmc
inc
push
pop
mov
sbb
mov
(bad)
dec
mov
mov
sbb
lods
(bad)
xchg
cmc
js
aas
cmp
xor
sub
push
outs
popf
mov
and
movs
ficomp
push
push
cmp
jnp
and
pusha
mov
fdivr
out
not
mov
mov
test
loop
adc
sahf
mov
nop
pusha
add
mov
add
pop
cld
popf
shrd
repnz
cld
xor
ins
or
jecxz
sahf
sti
adc
pop
pop
mov
mov
lahf
ds
ud0
mov
call
dec
addr16
pop
fsubr
sti
or
xor
xchg
ret
push
movs
and
jne
ficomp
sbb
aad
loop
jne
push
adc
xchg
mov
ficom
das
ds
addr16
ss
data16
mov
shr
retf
scas
loope
mov
xor
dec
scas
mov
or
mov
xlat
pop
dec
out
jg
adc
scas
test
ss
in
add
xchg
add
stos
icebp
test
mov
test
push
and
shl
sub
cmps
push
sub
pop
call
cmp
imul
add
les
add
sub
add
or
or
call
imul
ficomp
test
fucompp
mov
and
fstp
dec
push
aas
movs
daa
jae
or
out
push
dec
mov
dec
add
lahf
mov
mov
cmps
adc
mov
sti
mov
cld
xor
dec
in
call
sbb
and
inc
jp
loope
fs
xchg
add
int
or
jp
aam
out
cmp
push
lods
mov
lods
jae
lea
xor
iret
push
leave
cmp
sbb
mov
je
pop
shl
and
out
movs
sub
popa
les
pushf
cmp
test
mov
sub
push
daa
ret
sub
inc
fcmovnb
mov
in
ret
(bad)
jmp
sahf
ds
ins
adc
pop
cmc
stc
jo
inc
push
pop
xlat
cwde
je
add
fcom
push
push
add
mov
(bad)
stos
scas
data16
or
add
ret
mov
enter
ret
sub
lock
xchg
call
dec
add
or
xor
push
mov
clc
push
(bad)
sub
cmp
ret
lods
rcl
add
jp
adc
cdq
xchg
or
mov
push
mov
retf
test
movs
adc
push
xchg
pop
in
cdq
jle
dec
js
(bad)
lods
repz
cmp
rcl
fcmovnu
and
inc
add
and
inc
adc
lock
sbb
(bad)
mov
jge
push
cli
clc
mov
sub
into
mov
mov
aaa
fadd
je
pop
ja
fsub
mov
jmp
cmps
movs
test
lods
push
mov
cs
cs
push
ds
mov
mov
mov
pslld
data16
pop
xor
scas
adc
push
les
adc
repz
jecxz
in
sub
sub
retf
adc
adc
test
xor
jbe
mov
loop
inc
popf
push
push
mov
stc
mov
and
xor
adc
mov
mov
in
pop
je
xchg
inc
sti
jae
mov
and
and
js
mov
xchg
cmp
cmp
jmp
push
retf
lahf
hlt
adc
sub
cli
jl
pop
xor
jb
jo
enter
cwde
out
addr16
jp
pop
mov
pop
mov
aad
pop
bswap
mov
aam
imul
or
loope
pop
xchg
pop
test
cld
(bad)
jp
iret
cmp
retf
pop
rcl
mov
adc
adc
pop
fimul
or
movups
ja
mov
push
cmps
pushf
jle
and
ins
dec
inc
or
repnz
dec
xor
mov
adc
sub
adc
shl
pushf
std
fdiv
pop
xchg
rcr
mov
inc
cwde
cmp
cmp
add
test
movs
mov
outs
and
enter
addr16
mov
fwait
mul
scas
push
std
(bad)
std
jl
(bad)
or
add
push
mov
popf
imul
ins
mov
mov
imul
xor
ror
sbb
dec
and
out
adc
lea
and
pushf
iret
mov
mov
lods
aam
xor
pop
int3
jl
loope
mov
fwait
lods
lahf
ins
lea
mov
xor
loop
cmp
aam
(bad)
push
cmps
dec
fisub
fadd
(bad)
hlt
lahf
repnz
das
sahf
inc
mov
in
test
in
mov
xchg
push
push
ins
mov
dec
sbb
in
mov
sbb
mov
paddusb
mov
adc
push
mov
xchg
jo
pushf
xchg
and
inc
pop
dec
or
inc
sub
dec
sub
or
shl
aas
mov
rcl
push
jmp
ins
mov
sbb
cmp
sub
inc
cmp
jecxz
sbb
scas
xor
cmps
sbb
dec
sti
aad
pop
aam
(bad)
and
and
or
jmp
dec
or
pop
mov
mov
xchg
into
mov
lahf
pop
cmps
adc
lea
in
cmp
int
dec
sar
dec
dec
and
inc
mov
lahf
dec
mov
retf
xchg
nop
and
pop
cmps
int3
cmp
cs
mov
xor
leave
mov
das
mov
stos
repz
push
push
jns
arpl
jp
push
push
inc
push
xchg
push
rcl
sbb
int3
scas
add
add
mov
ins
inc
push
imul
push
leave
inc
popa
movs
(bad)
adc
adc
xchg
and
aas
fldenv
jb
jae
pop
push
pop
cmp
xchg
cmp
mov
dec
outs
pop
sbb
push
push
or
lock
repz
or
sbb
mov
xchg
das
rol
xor
test
mov
xchg
out
cwde
xchg
gs
mov
xor
test
xchg
fbld
jg
or
jno
or
hlt
xor
and
mov
das
mov
lods
adc
sbb
add
xchg
shl
mov
fcom
lods
xchg
pop
mov
out
xchg
sbb
jp
bound
pushf
imul
fist
pop
inc
jmp
(bad)
mov
inc
sub
add
ret
sub
xchg
enter
retf
xlat
jp
pop
sub
das
xchg
cwde
test
xor
rcr
fisttp
ret
ja
push
pushf
pushf
inc
repnz
jo
sbb
cmc
test
cmp
outs
ja
add
retf
jmp
cwde
adc
out
pop
loop
inc
mov
fld
inc
cmp
call
clc
xlat
ds
dec
xchg
inc
sbb
scas
lds
mov
arpl
jecxz
fcom
jmp
xchg
mov
sub
or
push
(bad)
lods
out
mov
pop
je
lock
cmp
jle
cmp
and
and
not
push
add
inc
inc
sar
aaa
js
scas
adc
inc
push
dec
push
je
cdq
xor
jns
int
mov
cdq
call
mov
xor
push
mov
jmp
jno
ror
jne
push
sub
jecxz
lods
sahf
loop
sub
mov
mov
jecxz
mov
xlat
stos
popf
shl
or
(bad)
cmp
jne
(bad)
test
mov
pop
sbb
dec
(bad)
or
cmps
sub
ret
out
fnstcw
mov
rcl
loopne
push
test
aas
cmp
fs
xchg
jbe
outs
sbb
dec
aam
fild
jne
xor
repz
jecxz
mov
and
and
push
mov
in
inc
xchg
cwde
adc
test
out
in
sub
sbb
jle
sbb
mov
retf
call
cmp
push
sbb
jne
mov
jge
adc
dec
ffree
sub
test
or
frstor
aad
clc
retf
dec
test
adc
lea
mov
js
push
mov
repz
jb
ds
xor
cmp
lods
adc
jae
pop
sub
(bad)
inc
lock
inc
arpl
(bad)
push
cmp
fisub
mov
sti
aas
mov
jp
mov
ins
jge
int3
idiv
sbb
cld
js
nop
add
dec
ins
push
(bad)
mov
add
cmp
je
jne
dec
call
loop
aam
adc
push
and
or
ins
pop
xchg
jmp
mov
jmp
fwait
scas
gs
push
bound
das
pop
and
add
int3
(bad)
cmp
cmp
cmc
add
adc
clc
lods
pop
sar
cmp
jo
jge
cwde
rcl
xor
adc
les
das
dec
and
out
repz
cmc
add
jnp
hlt
lea
xor
repnz
mov
addr16
mov
push
outs
cs
mov
retf
sbb
and
cmp
adc
movnti
cmps
cmc
mov
ficom
(bad)
fstp
shr
and
cwde
jge
jge
pop
xor
mov
mov
sbb
mov
jnp
cli
xor
movs
dec
out
dec
mov
cmps
adc
enter
fcom
cmc
or
call
leave
addr16
cwde
push
ins
scas
leave
(bad)
fidivr
mov
mov
push
ss
jge
movs
cli
pop
sub
sbb
and
and
rcl
inc
or
idiv
ja
sub
xchg
and
sub
call
cli
xchg
dec
test
mov
out
xchg
push
dec
fadd
add
aaa
imul
lea
shl
and
jmp
xlat
(bad)
out
add
jle
dec
push
push
fcmovbe
jnp
push
xor
mov
retf
push
pusha
sub
(bad)
clc
sbb
cmp
jns
iret
cmps
add
adc
adc
inc
test
adc
imul
push
mov
mov
int
jmp
xchg
inc
sbb
mov
les
stos
push
jno
or
sub
xor
inc
add
retf
stos
ins
gs
gs
add
gs
out
loop
in
sar
mov
inc
loope
inc
push
lock
out
cmp
ja
test
or
(bad)
pop
dec
jmp
hlt
cmp
ss
rol
pop
leave
push
sub
jns
in
std
stos
and
mov
or
add
mov
(bad)
jl
push
test
adc
jmp
shr
mov
sub
movs
xchg
imul
fs
mov
ficom
jecxz
or
sub
inc
inc
xchg
mov
push
inc
test
xchg
popa
rcl
and
or
mov
xor
ss
aaa
jns
clc
aad
test
les
sub
sbb
mov
ja
inc
scas
aam
cmps
mov
cmp
test
jp
xchg
xor
jno
mov
fdiv
iret
cs
sbb
aaa
in
cld
pop
lods
ja
dec
push
fsub
cli
sbb
leave
(bad)
fimul
movs
lahf
imul
adc
push
shl
movs
leave
pop
mov
or
(bad)
pushf
or
cmps
rcr
aaa
bnd
cmp
out
(bad)
mov
adc
shr
pop
daa
fild
aaa
dec
mov
fcomi
loop
add
push
retf
mov
js
sbb
push
cmp
jmp
xchg
inc
cmps
lods
movs
jns
fsubr
mov
xchg
cmp
scas
jb
aaa
call
loope
dec
xor
cmp
inc
lock
ret
mov
and
sbb
jo
mov
sub
nop
sbb
jo
sar
test
add
sub
stos
mov
push
int
and
push
and
mov
mov
pop
inc
inc
fisttp
jb
sbb
arpl
adc
stos
mov
mov
ds
aam
pop
mov
repz
push
fnsave
or
lods
sub
jle
int
(bad)
xchg
dec
fdiv
cdq
int
aaa
(bad)
das
jnp
fwait
xchg
mov
adc
dec
ja
xor
and
push
adc
pop
mov
cld
xchg
jae
cmp
mov
pushf
sbb
sbb
bound
add
push
mov
cli
aaa
test
adc
pop
loop
aaa
loope
adc
ds
call
cmc
inc
aaa
sbb
addr16
xchg
inc
aas
jecxz
lds
fnstenv
clc
fcmovbe
aas
(bad)
mov
inc
mov
fisubr
xor
bnd
mov
cwde
xchg
jo
bound
lods
shl
push
xor
adc
sub
in
jo
sub
lds
or
dec
(bad)
jmp
(bad)
sub
out
sbb
add
xchg
mov
push
in
jb
pop
cmp
popa
cmp
dec
pop
shr
call
sbb
dec
(bad)
out
mov
push
js
(bad)
push
mov
movs
cli
rcr
push
sbb
push
push
xchg
mov
mov
inc
mov
test
ins
je
mov
movs
pop
push
iret
jg
loopne
xlat
cli
mov
mov
lds
call
pop
adc
mov
fwait
out
mov
mov
cli
pop
mov
sti
add
xlat
movs
or
sti
push
push
mov
adc
stos
out
adc
stos
sti
scas
idiv
sub
and
stos
jmp
mov
mov
xchg
fsub
(bad)
xchg
nop
sbb
ins
and
das
inc
loop
xchg
lea
rcl
add
in
cmp
cmc
or
adc
int3
shr
js
fnsave
fwait
test
sbb
and
cmps
add
pop
mov
out
mov
movs
sub
js
scas
out
hlt
or
cmp
xor
nop
stc
out
sti
dec
nop
sub
add
loop
mov
push
or
or
sbb
jbe
cli
arpl
fisub
addr16
ja
icebp
int
adc
add
enter
sbb
fsubr
shr
in
retf
inc
out
mov
sub
je
sbb
pop
in
sbb
jo
in
out
cdq
mov
cmps
push
jbe
xchg
jb
push
pop
cmps
cmp
sar
out
cmp
pusha
outs
add
test
call
outs
jmp
mov
bound
cmp
nop
xchg
mov
ins
xchg
add
dec
inc
jno
jle
(bad)
cs
push
(bad)
jae
adc
mov
mov
push
xchg
xor
xor
(bad)
mov
mov
xchg
mov
mov
imul
or
dec
movs
mov
nop
dec
add
mov
outs
dec
rcr
sub
gs
loop
dec
pop
popf
int
adc
sbb
lods
mov
jge
add
test
sub
inc
(bad)
push
inc
jg
push
out
mov
je
ret
nop
icebp
xchg
mul
xchg
cmp
aad
xchg
arpl
ror
fadd
dec
or
std
sub
mov
lahf
cdq
sub
mov
adc
mov
xchg
jp
add
mov
adc
test
test
mov
popf
stos
or
inc
out
mov
fdiv
cdq
jl
dec
jmp
inc
or
lock
jb
jnp
ficomp
jbe
mov
test
je
outs
cmp
leave
add
or
sub
inc
push
jns
and
xor
or
imul
cmp
and
not
adc
and
cmps
pusha
fldenv
cmps
push
out
jg
mov
in
lods
adc
push
mov
in
daa
fs
ror
(bad)
popf
repz
xor
jmp
xchg
xchg
cmp
loopne
xor
imul
mov
bound
stos
pop
sar
xchg
fld
fadd
push
scas
or
add
xlat
lds
pop
popf
imul
mov
jbe
mov
test
pop
lea
xor
sub
std
cmp
and
aaa
push
mov
mov
dec
jl
pop
ror
pop
cdq
scas
push
xchg
mov
repnz
jae
ss
sub
call
movs
sub
dec
gs
call
ss
fld
or
into
ret
or
dec
enter
or
sub
mov
adc
cmps
in
sbb
cmp
shr
arpl
jl
mov
in
lock
cmp
les
test
mov
dec
loopne
adc
outs
mov
movs
div
cmp
cmps
loop
outs
loop
pop
mov
pop
fistp
mov
rol
mov
xor
dec
jo
inc
arpl
outs
mov
lods
outs
(bad)
or
mov
mov
sbb
aaa
adc
cmp
push
adc
std
xor
add
repnz
das
retf
adc
xor
adc
aaa
add
and
lock
imul
ret
icebp
aas
or
add
pop
mov
push
cld
adc
sbb
add
inc
jp
adc
fld
movs
hlt
and
xchg
sub
jnp
(bad)
xchg
test
inc
cmps
mov
add
loope
dec
and
dec
retf
test
mov
jo
loop
or
push
jmp
stos
mov
dec
cwde
or
sub
shl
cmc
xchg
jle
int3
(bad)
(bad)
(bad)
cmp
ins
or
or
test
ja
call
push
ds
ins
fdiv
push
and
dec
mov
aaa
xor
push
xchg
inc
inc
dec
sbb
xchg
push
jo
mov
lds
daa
mov
or
pop
int
gs
mov
in
pop
int3
loop
mov
fwait
test
aam
ins
or
cmpxchg
je
sbb
loop
lds
les
sbb
dec
and
xor
stos
jb
pop
xor
xor
in
xchg
ss
inc
leave
loope
into
and
in
mov
ror
adc
stos
jmp
and
pushf
mov
push
ror
adc
mov
inc
adc
ins
jne
jnp
imul
arpl
jl
xlat
out
repz
xchg
xchg
xchg
clc
movs
sub
ss
fisub
pushf
mov
fnstenv
xchg
mov
adc
xor
repnz
sub
and
sar
adc
mov
xchg
pop
push
std
inc
jle
dec
or
lahf
shl
pushf
retf
sub
jl
jg
pop
fadd
sub
push
adc
outs
jb
retf
push
fimul
fsubr
or
(bad)
jle
test
into
mov
jle
or
push
pmulhuw
shr
mov
xchg
hlt
mov
mov
pop
cld
sbb
sub
dec
mov
xlat
cmps
jmp
cmps
inc
mov
popf
push
pop
xor
lods
push
in
push
xor
popf
stc
cmp
sbb
popf
mov
out
repz
cmp
add
lods
xor
icebp
js
pushf
dec
daa
rcr
aad
mov
sti
test
jp
xor
pop
clc
hlt
or
(bad)
jle
xor
mov
xor
shl
arpl
cmp
lods
xchg
add
jno
bound
dec
pop
push
stc
fidiv
push
push
mov
lods
adc
push
push
movs
mov
push
shl
add
in
adc
sbb
aam
inc
inc
or
mov
and
adc
movs
dec
fistp
in
xchg
cmp
stos
and
stos
jae
xlat
retf
dec
cli
leave
in
push
call
mov
ss
addr16
mov
cdq
in
pusha
outs
mov
repnz
sar
xchg
retf
and
xchg
mov
mov
sahf
or
sbb
rcr
xchg
mov
(bad)
push
aas
mov
cli
xchg
pop
scas
fidiv
sub
pushf
push
push
(bad)
(bad)
jp
dec
pop
ins
(bad)
mov
out
cmp
je
retf
pop
call
xlat
lea
dec
movsx
pusha
imul
(bad)
jle
retf
arpl
cmp
dec
push
cmp
add
dec
sbb
(bad)
mov
sub
shr
mov
and
test
jb
loopne
xor
fisubr
mov
js
sub
lea
lock
jl
fidiv
(bad)
jg
ss
mov
mov
pop
shr
add
into
adc
xchg
pop
mov
fs
test
add
mov
inc
fld
add
jmp
cmc
inc
mov
adc
lock
sbb
ror
mov
sbb
lock
push
jecxz
dec
neg
jl
std
es
jb
int3
cli
pop
sub
ss
ret
push
enter
push
xor
jmp
les
inc
gs
out
test
sbb
inc
inc
xchg
cmp
cmps
sahf
cmp
push
pusha
jmp
scas
mov
stc
inc
aas
in
inc
mov
push
retf
mov
test
jl
jmp
lock
push
mov
call
sbb
add
or
sbb
stos
(bad)
(bad)
in
fnstenv
mov
inc
repnz
cmp
pushf
movs
jae
in
mov
lock
ins
pushf
lds
mov
jne
fwait
adc
out
or
cmc
mov
mov
or
push
mov
js
arpl
aaa
mov
imul
add
ss
fucomp
fwait
aas
adc
inc
sbb
loopne
add
(bad)
jmp
test
add
adc
pop
xchg
or
fsubp
xor
enter
cs
mov
mov
push
inc
mov
retf
pop
call
sbb
jecxz
mov
and
push
cmp
ins
in
daa
stc
jge
and
stos
in
pusha
out
mov
cmp
cmp
aas
out
cmp
jg
add
dec
mov
add
rcl
je
imul
sti
sub
jbe
mul
out
sbb
fist
mov
daa
pop
fidiv
sub
fcmovnb
sbb
dec
pop
pop
scas
push
xchg
js
and
ins
xor
pcmpeqw
xor
cmp
rcl
shl
xchg
sti
call
jb
lahf
sub
lock
adc
push
jnp
call
add
xchg
movs
imul
rcl
adc
adc
loope
jne
xchg
jle
mov
sub
inc
add
mov
sbb
inc
icebp
in
cwde
xor
pop
lea
pop
retf
add
mov
push
fnsave
stos
dec
push
arpl
pusha
mov
or
loope
mov
adc
adc
mov
aaa
pop
pop
addr16
push
cli
xchg
xor
mov
xchg
jecxz
mov
pop
sar
inc
xor
add
dec
movs
ds
xor
shl
mov
outs
sbb
test
mov
xor
dec
xlat
and
mov
fwait
lock
in
xchg
fwait
data16
xchg
push
int3
push
xor
mov
sub
into
arpl
ins
in
mov
in
std
xchg
pop
dec
out
pop
fsubr
inc
pop
push
inc
mov
mov
fdiv
dec
mov
mov
call
sbb
jp
push
outs
scas
xor
cld
fs
jns
es
repnz
das
cli
cmp
rcl
add
int3
jb
fdiv
cli
lods
jl
mov
mov
outs
and
xchg
test
out
sbb
cdq
sub
fs
jno
retf
xor
fs
stos
jno
xchg
outs
jo
pop
mov
not
into
ja
push
jbe
push
jmp
fwait
inc
test
(bad)
adc
je
je
mov
dec
lock
rol
adc
sbb
std
fidivr
sbb
out
dec
pop
mov
js
jl
dec
icebp
sub
loopne
fidivr
cdq
neg
neg
mov
not
iret
lods
mov
test
std
fidivr
jl
xchg
or
fldcw
xchg
clc
push
cmp
adc
cli
inc
pop
lahf
mov
sbb
das
push
mov
xor
jo
jnp
or
aad
ss
jb
add
xor
imul
out
mov
mov
xchg
mov
cmp
mov
jne
sub
test
fild
mov
or
sbb
inc
neg
xchg
inc
scas
(bad)
xchg
jge
and
sti
ficomp
div
je
push
jecxz
enter
dec
test
cdq
sar
jg
lea
ret
lock
add
jnp
pop
push
dec
mov
cmps
pop
jle
xchg
jl
adc
retf
inc
movs
rcr
mov
mov
inc
jae
jmp
movs
gs
xor
gs
adc
dec
and
jae
outs
mul
sbb
into
xor
push
popa
rol
xchg
repnz
(bad)
inc
(bad)
inc
sbb
or
add
jmp
pop
jg
adc
pop
cmp
sahf
sbb
mov
(bad)
adc
(bad)
stc
in
dec
loopne
or
fistp
push
pop
fwait
dec
icebp
aaa
pop
and
dec
pusha
cdq
xor
cdq
mov
xor
clc
lods
les
retf
xlat
les
push
cmp
or
pop
das
mov
into
xchg
retf
test
scas
pop
add
push
(bad)
push
push
lods
inc
rcl
out
inc
push
cmp
push
push
xchg
cmp
add
dec
push
test
popa
out
sub
push
das
mov
push
fld
shl
dec
xchg
daa
mov
add
repnz
adc
mov
fsub
adc
pop
icebp
sbb
push
addr16
and
fwait
xchg
fisttp
mov
adc
push
mov
jmp
in
inc
jge
xor
sbb
(bad)
cmp
xor
sub
push
loopne
and
stos
jb
push
arpl
push
int3
sub
jae
mov
hlt
or
les
js
lahf
(bad)
pop
in
sbb
cmp
inc
pop
(bad)
and
pusha
dec
retf
xor
dec
add
sub
je
(bad)
push
jno
push
jge
sbb
repnz
int
jb
jp
or
cli
shr
mov
push
or
xor
lds
xor
retf
or
xchg
cmp
out
sub
fadd
jmp
jmp
inc
lods
out
mov
push
rcr
cmps
shl
adc
dec
cdq
rcl
in
dec
cmp
std
icebp
dec
fs
call
sahf
and
loopne
adc
mov
mov
xlat
or
int
fsub
jmp
fisubr
fisubr
sbb
loope
adc
jne
inc
add
adc
jg
jle
retf
dec
ret
mov
jnp
xchg
int3
mov
rcr
test
scas
xor
comiss
jp
lods
add
push
add
aad
outs
loop
leave
pushf
sysexit
dec
std
pop
mov
mov
aaa
lods
addr16
shl
lods
add
mov
call
xchg
dec
xor
cmps
inc
jp
xchg
and
mov
popf
xchg
(bad)
fcmove
and
cmp
inc
pop
jg
int3
fimul
lock
cdq
push
push
pop
call
inc
adc
mov
int
dec
pusha
ror
mov
and
pop
das
ret
xchg
cmp
fwait
xor
mov
pop
movs
je
cli
xor
cmc
repz
outs
cmp
mov
mov
rol
push
stos
shr
push
popa
rol
clc
test
call
jg
ss
sbb
mov
jo
and
inc
in
pop
and
(bad)
in
pop
cwde
dec
push
cdq
(bad)
les
and
sbb
test
xlat
gs
fld
lock
sub
adc
cmp
outs
or
sbb
bnd
add
sbb
push
fst
sbb
pop
sub
jmp
inc
push
dec
push
in
push
xor
mov
xchg
and
cs
cld
mov
mov
shl
or
lods
mov
ret
aad
sbb
mov
jnp
retf
mov
pop
ins
mov
pop
ficom
out
call
dec
mov
(bad)
div
lea
pop
sahf
(bad)
call
lock
movs
add
sub
scas
lds
jns
inc
movs
add
dec
test
movs
retf
xchg
mov
lahf
mov
adc
enter
in
mov
repz
jnp
movs
mov
shl
sahf
ret
sbb
hlt
int
xor
push
cmc
into
das
adc
mov
sti
push
jae
or
fisub
nop
int
and
test
xor
inc
dec
push
outs
sub
addr16
pop
int3
fisttp
aas
mov
and
xchg
out
xchg
movs
shl
adc
sbb
repz
jne
ins
in
std
dec
dec
adc
mov
mov
sub
xchg
mov
ds
ds
ss
rcl
push
mov
jbe
loopne
cmp
arpl
pop
mov
cs
adc
icebp
test
ret
adc
jnp
ss
icebp
and
mov
test
or
icebp
xchg
mov
xchg
int
cmp
ror
sti
movs
jmp
imul
iret
push
mov
jmp
movs
(bad)
cwde
icebp
jne
loop
xor
xor
loop
out
cmp
jne
ss
popf
push
add
fadd
jp
adc
mov
mov
sbb
jge
fucomp
loopne
jbe
stos
(bad)
dec
xchg
(bad)
mov
mov
mov
outs
(bad)
std
mov
fdecstp
inc
mov
inc
pop
and
adc
jg
xor
push
mov
adc
jmp
lahf
fs
jl
xchg
and
mov
sbb
xchg
pop
sub
loopne
cmp
mov
test
stos
pusha
and
daa
inc
dec
sti
daa
ffreep
xor
fisubr
in
imul
out
mov
out
fwait
dec
pop
inc
push
(bad)
push
shl
cmc
jp
or
je
clc
imul
inc
push
ins
cmp
inc
mov
add
(bad)
xchg
xchg
imul
push
mov
lods
jne
xor
cwde
cmc
pop
xchg
dec
scas
jmp
pop
call
inc
mov
or
cmp
add
cmc
data16
cmp
pusha
sbb
add
pop
dec
cmps
cmp
out
inc
daa
gs
or
ret
xchg
fs
lahf
(bad)
out
or
lods
(bad)
sub
cwde
mov
dec
inc
popf
push
outs
cmp
jns
dec
into
shr
jge
jmp
sbb
cmp
mov
out
mov
fidiv
inc
sbb
jmp
xor
lods
cmps
mov
xor
lahf
cmp
jge
test
out
stos
(bad)
not
mov
xchg
pop
clc
dec
stos
jo
xchg
xor
cdq
or
ins
cmp
jge
icebp
bound
out
sub
out
push
sbb
nop
adc
cmp
mov
pop
out
loope
jne
pop
in
arpl
mov
and
add
outs
xlat
and
test
mov
push
push
stc
push
icebp
lods
cmps
in
fadd
sbb
js
in
jns
call
enter
adc
xor
sahf
xor
cmp
cmp
in
inc
mov
pop
(bad)
gs
imul
cmc
ror
dec
mov
aaa
xchg
test
iret
aad
xlat
push
push
cmp
push
push
or
and
clc
adc
call
add
pop
mov
jbe
mov
pop
jo
not
arpl
stc
lock
fnstcw
mov
iret
std
adc
add
(bad)
cmp
xchg
mov
or
jnp
repnz
add
mov
cmc
in
mov
jecxz
sub
in
push
ret
push
push
fst
push
cld
iret
push
push
sbb
(bad)
add
aad
push
xor
cmp
mov
ret
adc
stc
ja
cmp
test
fdivrp
sub
ja
popa
jbe
add
jbe
jp
das
(bad)
les
imul
mov
jl
push
or
pop
inc
cmp
xor
mov
test
loopne
int3
(bad)
stos
sub
hlt
out
jbe
ret
dec
add
pop
stos
les
and
jge
sub
sbb
jnp
sar
fsub
fadd
inc
add
dec
into
or
fwait
cmp
mov
mov
dec
das
pop
pusha
inc
mov
adc
clc
outs
shl
in
inc
fisub
dec
cdq
frstor
retf
dec
mov
mov
pop
inc
mov
std
(bad)
xor
push
jns
fs
mov
jge
outs
dec
jp
sbb
cdq
jle
retf
in
pop
cmp
sub
stos
xrelease
cmp
jae
stos
xchg
jmp
daa
push
xchg
and
jae
xor
ror
pusha
push
jmp
sub
in
dec
aam
cld
stc
in
xor
sub
mov
inc
pop
push
push
rol
pop
or
data16
dec
outs
fisubr
mov
xor
daa
inc
lds
daa
dec
int
pop
lods
out
mov
test
mov
xor
cmp
js
pop
mov
cmp
(bad)
cmps
adc
sbb
or
push
std
loopne
xor
sbb
mov
add
outs
pop
cmp
fs
pop
sbb
pop
icebp
sbb
push
jnp
leave
out
inc
(bad)
cmp
sub
cmps
comiss
retf
pop
push
jo
addr16
stc
movs
shl
lods
imul
test
stc
fs
xchg
pop
cmps
lods
rol
pop
pop
test
lock
pop
or
xor
cli
(bad)
mov
aad
sbb
test
adc
adc
jmp
pop
mov
cdq
ss
dec
push
call
mov
cmp
mov
lahf
push
xchg
mov
(bad)
jecxz
sub
dec
push
cmp
add
cmp
adc
mov
adc
adc
ds
adc
jp
popf
cmp
movs
retf
push
xchg
jmp
iret
dec
mov
nop
cli
jmp
jle
jb
fwait
mov
loop
mov
out
mov
lds
dec
fcomp
sub
jmp
inc
retf
rcl
in
sub
or
loope
fmul
cmp
in
ins
aaa
cld
das
repnz
int
inc
push
dec
not
add
ins
pop
(bad)
gs
dec
imul
fiadd
or
mov
sbb
out
test
ja
dec
shl
or
pop
cli
mov
icebp
push
push
pop
mov
ins
pop
mov
adc
test
inc
xchg
(bad)
std
sub
dec
xchg
lock
cwde
in
rcl
sti
dec
mov
out
xor
popa
ja
adc
pop
nop
push
fwait
js
repnz
arpl
cmc
push
fld
cmc
dec
pop
lea
not
in
mov
and
or
jge
dec
cwde
outs
out
loope
push
or
dec
or
push
sbb
xor
cs
cmp
(bad)
push
adc
and
nop
push
ins
jle
push
jl
rol
das
popf
and
push
mov
fwait
js
jne
movs
push
dec
in
mov
test
mov
sub
ret
push
(bad)
fiadd
daa
xor
lods
add
mov
jno
push
push
icebp
fwait
pop
adc
popa
daa
adc
addr16
jle
push
xor
iret
xor
cld
mov
sub
push
mov
mov
adc
cmp
aam
xor
or
or
mov
shl
mov
xchg
(bad)
int
push
and
lods
jmp
stc
xor
fsubr
inc
retf
add
push
mov
aas
push
rcl
dec
xchg
or
int
adc
mov
and
pop
adc
xchg
shl
out
data16
mov
in
ret
pop
and
dec
sub
shr
xchg
leave
pop
adc
jg
lock
sbb
pop
je
jmp
scas
arpl
stos
enter
aaa
mov
cmp
mov
mov
push
pushf
je
clc
and
test
jb
lods
add
mov
popf
inc
push
lds
inc
sbb
popf
mov
das
test
or
lea
js
adc
mov
jmp
cmp
fidivr
adc
cmc
sti
hlt
adc
lods
ds
pop
(bad)
lds
and
pop
mov
jbe
pop
jnp
arpl
je
data16
push
mov
add
adc
mov
push
retf
dec
or
in
into
inc
push
cmp
xchg
jge
into
cmps
imul
inc
add
or
imul
push
aaa
jae
and
xor
retf
pop
enter
xor
enter
(bad)
sub
rol
loope
jne
cld
scas
dec
ss
inc
and
jo
jecxz
pushw
push
inc
sub
mov
das
mov
dec
jo
les
and
push
dec
call
jae
push
sbb
mov
daa
(bad)
int3
jnp
stc
pop
mov
mov
call
xor
ins
scas
xchg
xor
push
popf
xchg
out
mov
aad
shl
dec
loop
xor
and
(bad)
mov
bts
or
cmp
lods
xchg
xor
lods
(bad)
jmp
repz
out
fild
pop
push
xchg
enter
cmp
cmp
pop
lods
mul
ror
push
jns
add
je
cwde
mov
cs
jnp
mov
mov
jmp
shl
call
sub
scas
lds
int3
call
clts
scas
iret
pop
iret
ins
mov
and
out
xchg
fwait
mov
and
jmp
imul
xor
adc
mov
push
fisub
(bad)
mov
and
imul
push
outs
mov
jmp
stos
lock
mov
jae
shl
and
xchg
adc
adc
lock
jb
in
push
cs
gs
(bad)
push
sahf
fwait
dec
mov
mov
cmp
jb
test
xor
into
pushf
mov
imul
pop
cmp
jg
mov
fdivr
dec
gs
fldcw
dec
loop
dec
xor
pop
js
push
jle
pop
ins
icebp
iret
ins
dec
ins
aam
inc
mov
call
mov
icebp
les
(bad)
push
xor
jle
mov
mov
sub
or
xchg
add
mov
inc
cmp
mov
(bad)
sti
xchg
xor
add
mov
dec
outs
jae
iret
add
sub
inc
or
mov
xchg
pop
jecxz
fimul
out
inc
mov
add
loopne
adc
stos
in
pop
popa
pop
es
mov
test
mov
imul
lahf
mov
and
(bad)
lods
test
jmp
pop
and
dec
xchg
loopne
ds
or
aas
fidiv
call
in
mov
push
lock
lods
cwde
je
mov
in
jmp
and
lock
cmp
ret
cli
dec
int
sub
mov
ds
ja
loopne
ror
or
(bad)
mov
cmp
imul
aad
or
ss
lock
add
in
mov
pop
fisubr
cmp
aas
and
jb
mov
cvttps2pi
call
and
add
jl
jno
nop
in
mov
mov
ins
lods
or
ret
mov
jmp
addr16
loopne
pop
outs
mov
test
sbb
push
ds
sbb
sbb
mov
aaa
inc
inc
mov
int
push
fdivr
mov
xlat
or
daa
stos
cmc
fwait
push
pusha
dec
pop
add
pushf
push
sahf
sub
std
daa
mov
pop
cmp
jmp
add
fstp
mov
push
add
std
mov
cwde
in
fistp
cmp
data16
popa
and
mov
fisubr
mov
in
sub
adc
jnp
loope
push
adc
nop
aaa
fdivp
(bad)
cli
call
rol
imul
xchg
out
adc
push
dec
cmp
mov
bound
ins
ja
pop
scas
adc
xchg
cmp
mov
inc
pusha
loopne
scas
stos
jnp
lods
cmps
adc
mov
fmul
aaa
inc
test
jle
mov
stos
pop
fidivr
adc
xchg
lock
cmp
jnp
dec
sbb
jae
jge
mov
stos
shr
push
lea
push
inc
push
icebp
out
mov
or
pop
hlt
jmp
loopne
repnz
lods
push
sub
xor
sbb
mov
xchg
sub
inc
and
and
inc
mov
sbb
xor
jns
push
cwde
std
call
xchg
push
aas
mov
(bad)
mov
mov
inc
popa
sar
ret
rcl
mov
test
in
je
mov
mov
cmps
mov
adc
out
out
iret
loope
and
dec
lds
jmp
adc
in
add
sub
scas
loop
out
or
xchg
shr
cmp
cmp
cmp
out
call
or
ret
sbb
enter
inc
ins
and
inc
add
push
push
pop
mov
test
adc
bound
cmps
and
scas
fadd
pop
pop
dec
loopne
inc
cmp
(bad)
in
lock
repnz
sar
xchg
test
pop
and
pop
aaa
in
and
and
xchg
mov
outs
clc
sbb
xchg
inc
pop
outs
push
int
pop
shr
jp
xchg
lods
aas
mov
inc
push
test
test
mov
inc
inc
imul
shl
xor
pop
pop
outs
dec
nop
mov
dec
mov
sbb
pop
mov
mov
xor
inc
add
cwde
pushf
aaa
jg
test
pop
and
(bad)
mov
pop
xchg
(bad)
psubq
sbb
xchg
fst
jge
add
cmc
test
ror
lock
lock
fs
cli
jp
js
aad
stos
sub
stos
and
or
ret
adc
arpl
sbb
cmps
pop
adc
inc
sub
stos
sub
cwde
push
fst
retf
bound
cmp
xchg
lods
mov
mov
mov
inc
hlt
sbb
push
hlt
add
mov
dec
in
cmp
mov
sub
rol
mov
cmp
sti
dec
loope
or
push
mov
les
push
xor
mov
js
mov
paddusb
mov
mov
(bad)
cwde
adc
dec
pop
or
pop
adc
fdivp
cmp
ffreep
retf
mov
cmp
pop
pop
hlt
mov
adc
sbb
mov
xor
cmp
pop
sub
(bad)
std
mov
pop
ret
rcr
jne
jmp
cmps
xchg
cmp
ds
and
outs
sub
retf
fwait
scas
mov
mov
sub
jmp
mov
call
data16
fild
(bad)
lock
ret
sahf
(bad)
pop
xlat
mov
xor
leave
push
push
inc
cmc
or
adc
inc
(bad)
push
pop
mov
shl
imul
(bad)
cli
cmp
lods
push
and
jns
push
cmps
imul
lods
and
jg
cmp
daa
mov
rcr
mov
dec
mov
mov
js
je
pop
xor
and
inc
sub
fisttp
cld
in
add
data16
into
xchg
call
adc
mov
add
pop
cs
push
xchg
inc
mov
mov
outs
mov
fisttp
data16
push
fmulp
and
push
rcr
mov
mov
mov
nop
jno
xlat
adc
in
jns
dec
inc
or
ds
loopne
cld
in
aam
pop
adc
clc
mov
clc
and
xor
popf
adc
xchg
xor
jmp
inc
(bad)
xchg
fwait
(bad)
jge
inc
loope
mov
xchg
adc
outs
xchg
jg
test
stos
stos
inc
cmc
and
sti
xchg
inc
imul
and
xor
cld
cmp
in
pop
jge
rol
data16
imul
inc
pushf
xchg
pop
test
push
icebp
adc
sbb
mov
in
add
adc
pop
mov
mov
hlt
dec
pop
call
jmp
push
pop
aam
push
push
xlat
push
xchg
outs
xchg
cmc
dec
lea
mov
xchg
and
sbb
push
out
clc
push
jno
mov
dec
shl
dec
and
test
jl
stos
sbb
test
fisttp
std
cmps
lock
nop
mov
daa
(bad)
add
pusha
sub
mov
dec
xchg
js
call
dec
icebp
dec
stos
icebp
pop
(bad)
out
adc
pop
int
nop
jge
movs
ret
mov
(bad)
shl
pop
xchg
mov
cwde
ds
inc
xchg
rcr
and
mov
(bad)
loop
push
cmp
(bad)
ret
addr16
(bad)
mov
cmc
lahf
mov
xchg
outs
add
or
out
cmp
fcomp
retf
add
stos
push
mov
jnp
xchg
retf
add
cmp
sbb
pusha
add
jecxz
xchg
xor
and
daa
jo
mov
push
or
loopne
mov
adc
scas
movs
or
dec
retf
sbb
rcr
mov
pop
fsubr
movs
sahf
xor
cmp
rcl
xor
mov
(bad)
or
(bad)
sub
inc
sub
fdiv
jo
xor
or
sub
mov
sub
ss
stos
xchg
or
(bad)
retf
inc
inc
cmps
stos
mov
push
gs
sbb
mov
jmp
cwde
cwde
mov
(bad)
dec
fstp
jbe
jae
call
jae
(bad)
cmp
dec
sti
xor
sub
push
mov
lahf
(bad)
sti
and
cmp
inc
cmps
enter
test
rcl
fwait
jge
sub
jbe
jmp
jge
add
or
xor
mov
jmp
sub
inc
movs
jmp
int3
mov
pop
and
mov
cmc
ins
stos
gs
jl
sub
cmp
je
cli
adc
and
xchg
das
bound
(bad)
lahf
retf
js
cli
xor
leave
out
push
aaa
push
jge
dec
xchg
sub
shr
xchg
mov
pop
cmp
sti
sbb
leave
ficom
dec
pop
lds
test
inc
je
loop
rol
cmp
inc
adc
xchg
pop
mov
push
push
call
mov
and
mov
mov
loop
xor
das
push
and
aas
inc
jmp
or
dec
shr
adc
fbld
hlt
cdq
push
loop
clc
cld
jbe
pop
mov
out
push
push
je
test
mov
in
push
adc
(bad)
call
sbb
jmp
inc
aad
fcom
push
mov
je
int
mov
xor
not
mov
stc
fwait
ret
dec
push
jnp
mov
bound
int3
aam
dec
and
push
movs
cmp
lock
mov
inc
xchg
xchg
sbb
pop
fisttp
jecxz
inc
adc
cmp
mov
int
outs
ficomp
mov
imul
and
stc
sbb
loope
fs
jb
push
ret
sub
stc
pop
pop
std
add
push
icebp
in
or
sahf
mov
inc
mov
in
jmp
mov
bound
xchg
mov
sbb
(bad)
rcl
xchg
jbe
int
jl
cdq
mov
mov
cmp
cs
cmp
test
mov
into
aad
test
and
cmp
(bad)
div
(bad)
add
fs
(bad)
stos
ins
adc
mov
sbb
mov
lea
sub
push
lds
lods
sti
fild
mov
arpl
or
outs
jo
call
lock
mov
push
push
xchg
scas
mov
jnp
cmp
stos
ret
mov
and
mov
xor
jne
stos
loop
out
push
fidiv
sbb
clc
xchg
add
clc
adc
adc
in
pop
mov
(bad)
sar
mov
jmp
stos
inc
repnz
repnz
outs
jge
aaa
sbb
ins
cmp
xchg
cmc
fiadd
or
xchg
jp
nop
clc
and
ds
jmp
enter
lods
loope
and
mov
or
mov
pop
dec
imul
out
pop
jne
ja
out
rcr
mov
mov
push
dec
lods
sbb
(bad)
and
pop
dec
mov
dec
sbb
add
adc
out
cdq
js
pcmpgtb
mov
cld
push
repnz
out
(bad)
and
enter
pop
int
movs
mov
aas
or
in
sar
in
xchg
imul
cdq
out
push
je
mov
(bad)
movs
or
cmps
aam
sbb
icebp
mov
test
std
cmp
scas
test
(bad)
(bad)
adc
xor
ja
mov
mov
and
adc
and
dec
xchg
addr16
sub
cwde
mov
leave
jno
pop
fisttp
lahf
mul
cli
aam
sub
inc
movs
ror
xor
mov
xor
fistp
push
arpl
xor
jmp
div
mov
sbb
xlat
int3
rcr
enter
mov
es
mov
jbe
fs
fwait
pop
pop
icebp
enter
adc
jmp
push
arpl
shl
inc
push
inc
cmp
xchg
push
ret
sub
sub
dec
xchg
mov
sub
bnd
mov
(bad)
push
mov
or
test
inc
mov
out
sbb
pusha
in
test
test
popf
inc
outs
jbe
pop
stos
xor
call
xchg
scas
inc
xchg
push
push
push
pop
mov
inc
jg
push
arpl
shl
or
and
ror
shr
mov
adc
cmps
loopne
fistp
inc
stc
cli
aaa
adc
call
adc
xchg
ret
out
ins
data16
stos
or
jno
retf
sbb
icebp
out
fdivp
or
lea
mov
mov
std
test
sbb
lods
jmp
adc
mov
inc
cmp
(bad)
enter
jb
dec
add
(bad)
test
jmp
and
pop
pop
push
cmp
mov
mov
cmp
add
mov
je
loopne
out
and
aaa
rol
ror
outs
inc
outs
or
int3
or
cli
inc
adc
out
outs
add
pop
mov
cwde
push
jp
add
mov
out
popf
repz
push
pop
push
jg
movs
mov
in
mov
mov
and
pusha
and
std
pop
pop
jnp
imul
mov
pop
cmp
(bad)
cli
bound
add
retf
arpl
jns
rcl
pop
test
shr
pop
inc
call
out
je
fmulp
neg
repnz
loop
fidivr
pop
xchg
jo
test
mov
xor
mov
push
retf
shr
mov
mov
rol
inc
sub
mov
xchg
aaa
dec
nop
(bad)
mov
pop
xlat
(bad)
test
push
test
sar
nop
xchg
or
inc
mov
aaa
mov
scas
ret
xchg
rcr
mov
ins
fimul
pop
push
fwait
rcl
(bad)
pop
outs
fwait
xchg
xor
xchg
xchg
mul
cmp
pusha
aam
pop
mov
or
jl
mov
lods
mov
into
and
inc
xor
loope
mov
enter
daa
test
cmp
addr16
repnz
or
call
je
pop
test
test
inc
repz
out
and
test
pop
inc
ins
mov
sub
pop
popa
repz
dec
push
xchg
push
inc
aaa
jae
xor
xor
cmps
add
loop
pusha
int
iret
pop
sar
test
(bad)
int
lahf
sub
pop
pop
dec
push
mov
lods
mov
dec
dec
xchg
retf
pop
push
stos
or
cmp
fdiv
sbb
inc
outs
nop
movs
pop
jg
aaa
fisubr
mov
ret
out
inc
dec
fimul
aam
jge
or
out
push
sbb
mov
push
sti
mov
ins
outs
jns
(bad)
in
or
in
mov
aas
pop
mov
xor
sub
pop
dec
add
xor
cs
(bad)
cmp
in
mov
cmps
popa
jg
dec
add
(bad)
jmp
add
jo
sbb
mov
xchg
fwait
imul
ss
dec
push
sbb
push
sbb
sub
lods
or
jbe
test
in
jmp
stos
lods
aam
ins
in
cmp
mov
mov
fwait
int
repz
ret
fidiv
mov
jae
jg
inc
jle
xlat
add
or
arpl
mov
cmc
mov
in
loopne
lods
das
pop
pop
sti
call
pop
push
xchg
int
enter
into
idiv
lods
retf
pushf
mov
out
test
sahf
loop
push
gs
push
adc
pop
aam
fwait
mov
xchg
stos
mov
adc
shl
je
outs
pop
or
inc
jl
aam
add
leave
mov
push
(bad)
imul
mov
push
inc
inc
sbb
mov
lea
inc
jl
and
fs
adc
mov
fsub
pop
das
and
cld
int
mov
aad
stos
jg
mov
lds
cmp
mov
push
cmp
and
pop
mov
bound
push
inc
shl
jge
cdq
mov
fcomip
stc
and
push
mov
(bad)
fsub
cmps
test
and
or
xchg
js
repz
xchg
aaa
pop
sbb
call
(bad)
mov
pop
mov
push
scas
fwait
mov
test
mov
cli
jg
jmp
push
sub
push
(bad)
cli
(bad)
sahf
sbb
cmp
enter
cmc
push
(bad)
lods
(bad)
cmp
aaa
jle
fcmovbe
xor
adc
push
mov
inc
dec
jb
add
sbb
popf
pop
outs
xor
test
ins
mov
pop
jmp
arpl
jns
sar
xchg
aam
in
(bad)
test
lock
dec
dec
inc
cmp
xor
push
push
jns
lods
mov
imul
push
or
add
jp
(bad)
out
cmps
sub
pop
sti
aas
lock
or
(bad)
or
mov
mov
add
scas
sub
clc
ret
jne
je
dec
fnsave
xor
or
xchg
cmc
mov
rcl
xchg
shl
nop
movs
sub
or
dec
or
rcr
ins
stos
push
gs
rcr
dec
dec
mov
mov
and
and
cwde
push
push
adc
int3
jl
mov
popf
in
cdq
fs
repz
stos
and
call
jle
mov
cmp
xor
push
retf
inc
fstp
sbb
lds
ins
cmp
mov
out
retf
cmp
push
adc
lods
cmp
stc
jne
into
mov
mov
pop
loopne
push
xor
pop
pusha
mov
shr
ror
push
hlt
icebp
xor
jg
cwde
stc
add
das
xor
call
pop
adc
push
mov
sbb
clc
pop
sub
xchg
or
dec
arpl
or
xor
repnz
ficomp
mov
sub
scas
jo
fidiv
mov
daa
fdivr
lahf
lahf
push
nop
sub
sub
ja
cmp
push
into
sub
adc
dec
je
xlat
adc
je
sub
lods
scas
cmp
outs
fld
push
jmp
into
das
daa
push
cs
or
pop
adc
push
pop
ror
call
adc
pop
mov
stos
scas
jb
push
(bad)
test
cld
ret
test
inc
in
push
jge
mov
push
(bad)
fdiv
icebp
loopne
cmp
int3
xor
mov
lock
mov
das
fsub
mov
repz
sbb
push
(bad)
sub
xchg
push
push
add
pop
cdq
push
lds
jno
mov
enter
movs
push
out
cwde
inc
fcomp
push
jne
mov
adc
add
outs
sbb
mov
adc
mov
pusha
sub
jo
adc
imul
add
sbb
mov
xor
je
jo
push
scas
push
rcl
lods
sbb
or
je
scas
int
loope
imul
test
cmp
adc
rol
mov
js
push
xchg
sbb
(bad)
mov
in
cmps
sub
adc
movs
scas
dec
iret
sub
inc
ror
in
and
iret
in
outs
push
inc
xor
xchg
push
cmp
lea
scas
sub
ins
iret
mov
ins
stc
or
or
jb
jmp
cwde
xor
repnz
adc
adc
adc
dec
cmps
adc
dec
clc
sub
cmp
and
dec
int
xor
leave
lock
stc
stos
fidivr
xor
test
jns
(bad)
jb
lds
inc
gs
pop
ins
loop
ds
jbe
add
push
call
inc
out
out
pop
add
lock
mov
js
arpl
push
xchg
cmp
data16
cmp
inc
call
push
xchg
aas
push
(bad)
and
jne
repnz
(bad)
scas
jle
add
icebp
in
cs
clc
mov
xchg
(bad)
xor
mov
jecxz
into
xor
test
mov
mov
jle
jns
mov
xor
sub
retf
aad
jno
aam
imul
(bad)
data16
mov
xcrypt-ofb
cmps
push
pop
iret
stc
stos
(bad)
(bad)
pop
jno
mov
dec
adc
cmps
call
call
and
xchg
data16
sbb
add
aas
cmp
jp
in
adc
std
add
leave
add
adc
mov
bound
mov
push
xchg
jl
mov
jae
ror
je
or
sbb
mov
stos
movs
xchg
retf
imul
repz
ss
mov
ins
sbb
in
xchg
aas
mov
arpl
retf
sub
jle
jns
mov
push
sahf
loope
cmps
mov
xchg
fisubr
jae
inc
sahf
shl
cmp
pushf
adc
sub
add
test
mov
or
test
xchg
enter
inc
addr16
fcomp
js
mov
push
int
cli
(bad)
xchg
shl
jae
add
adc
std
or
mov
adc
pop
add
cli
sahf
jns
loop
push
in
inc
jb
icebp
iret
push
or
jne
add
inc
dec
loope
mov
sbb
mov
xor
inc
call
xchg
frndint
shld
xchg
pusha
sub
repz
add
test
js
jbe
dec
pop
int
scas
popa
test
mov
or
sub
mov
pusha
xor
imul
mov
push
add
hlt
loope
cmp
outs
mov
adc
push
lods
dec
lods
jb
adc
mov
sbb
rcl
xor
jmp
push
dec
inc
loopne
js
xchg
addr16
xor
xchg
shl
xchg
jae
jle
and
adc
add
std
ret
xor
mov
mov
jp
xor
jb
pop
mov
adc
es
xor
and
movs
jg
or
in
sub
push
inc
in
fistp
cmp
mov
adc
xor
mov
sti
cmps
(bad)
adc
pop
dec
call
sub
cdq
(bad)
dec
push
div
jae
and
fwait
push
mov
inc
dec
lahf
sti
frstorw
cmps
pop
mov
fmul
add
(bad)
sbb
pop
mov
rol
les
fild
pop
mov
adc
xchg
xchg
out
xor
(bad)
xor
(bad)
adc
mov
popa
out
in
jae
or
sub
clc
mov
adc
mov
xchg
inc
iret
fwait
mov
push
arpl
scas
push
dec
jp
ror
cwde
push
(bad)
mov
(bad)
loop
lds
and
mov
mov
pusha
(bad)
or
movs
xor
enter
dec
sbb
or
xor
jge
jle
inc
popa
inc
lock
and
(bad)
popa
fisttp
test
and
ds
iret
add
hlt
push
(bad)
jno
adc
icebp
daa
xor
cmp
call
scas
dec
cmp
jmp
outs
imul
xchg
rol
mov
fidivr
xchg
test
or
jl
stos
loop
mov
or
test
jne
inc
not
or
rol
nop
sbb
or
inc
mov
ja
or
jae
push
dec
rcr
adc
cwde
jge
xlat
sbb
xchg
dec
xor
js
mov
leave
xor
jle
inc
cmp
sbb
lods
cmps
aam
fadd
pop
int
mov
fcmove
and
adc
dec
xchg
adc
lahf
ss
jb
rcr
test
xchg
in
retf
call
mov
fs
dec
sub
adc
mov
and
es
fdiv
not
push
or
fwait
mov
(bad)
jb
ins
mov
mov
add
mov
xchg
or
mov
test
rep
mov
rcr
(bad)
test
mov
inc
pop
cmp
push
jg
jbe
sbb
pop
jp
jns
mov
or
inc
ds
mov
sub
(bad)
pushf
addr16
sub
imul
jb
out
xor
ins
xchg
add
mov
leave
mov
fistp
push
and
mov
stos
push
dec
pop
push
jb
out
loope
in
mov
adc
popf
cmp
movs
jnp
pop
push
popf
mov
call
ss
add
das
movs
jle
mov
jg
pop
into
and
jl
rol
lahf
imul
and
adc
fmul
mov
ror
sub
mov
mov
dec
in
inc
je
xchg
nop
and
ins
pop
outs
pop
jmp
and
neg
adc
adc
loop
mov
(bad)
jnp
cld
xchg
add
call
mov
call
add
cmps
dec
test
cmp
push
jge
cdq
(bad)
pop
icebp
ja
lods
and
pop
aad
cmps
mov
jmp
push
and
and
std
add
fucom
cmc
fwait
bound
xchg
fsubr
iret
es
out
(bad)
loopne
lods
push
and
stos
into
loopne
sbb
dec
lea
das
mov
push
stos
sub
and
inc
enter
js
int3
push
mov
mov
cmp
aad
xor
xchg
add
mov
stc
daa
sahf
dec
call
aaa
jnp
pop
adc
and
shr
sub
and
xor
cwde
jmp
les
inc
jo
sub
out
jecxz
mov
sti
aas
jg
data16
adc
cwde
ja
inc
scas
lock
mov
mov
pop
test
xchg
pop
mov
hlt
bswap
inc
jmp
das
in
dec
pushf
in
add
xlat
sbb
ins
jo
jl
push
jle
mov
inc
jo
(bad)
out
push
sbb
cmps
ja
test
dec
mov
sub
add
xor
bound
mov
ror
sub
sbb
pop
mov
xchg
je
out
mov
outs
jae
inc
push
mov
sub
fldcw
xchg
or
xlat
jg
mov
or
mov
data16
push
or
repnz
jmp
xchg
mov
in
xchg
imul
ror
add
jbe
popf
xor
in
mov
mov
or
mov
or
shl
xchg
mov
and
movs
xor
out
ror
nop
push
outs
pinsrw
jne
popa
dec
or
or
and
mov
mov
stos
scas
mov
pop
leave
push
push
rcr
pop
je
je
pop
ret
data16
cmp
out
mov
repnz
outs
fisttp
mov
xor
enter
in
sbb
cmp
mov
(bad)
repz
retf
push
cli
rcl
scas
adc
inc
or
ins
mov
out
xor
ret
div
es
push
(bad)
dec
test
add
inc
cmp
lds
popf
ror
dec
outs
cmps
and
sbb
sbb
fs
mov
popa
bswap
je
xor
push
cmp
pop
(bad)
movs
pusha
inc
mov
xchg
lahf
es
inc
push
push
ss
jb
sti
cmps
not
xor
cmc
pusha
lods
xchg
sti
and
out
xchg
por
stc
cmps
pop
mov
jno
adc
lods
or
push
and
sar
clc
and
movs
fmul
shr
jl
pop
mov
pop
inc
fst
add
scas
pop
movs
mov
lock
add
jmp
jb
and
push
sub
retf
cmp
xchg
popf
das
cmp
mov
ret
(bad)
imul
push
mov
push
dec
adc
mov
scas
mov
cld
enter
sbb
retf
jnp
adc
mov
(bad)
cld
fst
test
ja
cmps
inc
add
int3
push
test
inc
dec
pop
scas
sahf
add
lea
js
adc
jno
cmp
popa
arpl
loopne
popf
sub
xor
xlat
scas
jp
sbb
aad
pop
mov
cli
aaa
and
cmc
mov
data16
mov
ja
push
aad
(bad)
sbb
test
sar
cmc
jle
test
je
imul
movs
jmp
(bad)
out
push
call
in
call
aaa
dec
mov
pusha
xchg
add
jg
fiadd
sbb
lock
or
adc
outs
les
shr
xchg
and
ins
and
add
ins
bound
xlat
jnp
mov
adc
enter
outs
sub
mov
imul
mov
bound
(bad)
xchg
xor
mov
adc
aaa
imul
pop
out
bound
popa
je
mov
into
inc
cmps
lds
add
test
xor
icebp
out
aad
leave
and
out
(bad)
imul
in
jnp
addr16
retf
pop
ins
push
fld
sub
lahf
movs
add
not
jae
xchg
or
shr
jae
mov
add
retf
ja
and
repz
push
sub
pop
fs
mov
push
mov
pushf
data16
inc
(bad)
jno
repz
mov
and
loope
jbe
nop
cmp
dec
cli
jmp
push
jno
loope
repz
repz
out
dec
and
into
(bad)
aad
push
rcr
out
mov
xchg
add
add
repnz
movs
sahf
jmp
aas
xchg
mov
call
dec
pushf
sar
xor
xor
aas
sbb
mov
or
mov
neg
fs
fcmovb
in
jno
push
scas
fisubr
mov
int3
push
xor
pop
ret
into
inc
push
sub
push
les
push
pop
(bad)
in
cld
mov
mov
or
or
lahf
inc
pop
jle
(bad)
xchg
and
mov
inc
(bad)
cmp
cs
or
jmp
iret
sub
xor
neg
mov
stc
addr16
popf
and
ja
add
jae
xor
dec
icebp
inc
pop
xor
sbb
jb
fcom
dec
sbb
mov
jg
sub
hlt
into
mov
cmp
jnp
mov
pop
mov
ret
mov
out
mov
cmc
jmp
mov
jmp
xchg
test
inc
sub
lods
pop
or
data16
(bad)
rcl
or
ins
xor
sbb
add
pop
jb
outs
out
push
(bad)
dec
in
push
not
and
pop
(bad)
(bad)
push
lds
push
pop
shl
lds
mov
fmul
add
cld
popa
dec
sub
or
test
mov
lahf
shl
(bad)
or
fld
cmp
(bad)
mov
out
int3
xchg
sbb
jmp
loopne
outs
mov
std
cmp
xchg
rcr
cld
retf
mov
jae
cmp
mov
inc
ins
adc
fimul
hlt
xchg
mov
aas
(bad)
dec
pop
push
xor
scas
outs
scas
(bad)
test
rcl
mov
inc
scas
in
not
fcmovnb
xchg
call
cwde
jo
mov
iret
mov
add
daa
jbe
lahf
scas
dec
test
xchg
sub
push
call
ror
shl
loope
lea
lahf
cmp
xchg
sub
rcl
xchg
mov
mov
push
sub
pop
cmp
shl
cmp
retf
fwait
shr
and
lods
xor
push
adc
push
(bad)
sar
(bad)
cmp
sub
(bad)
inc
stos
leave
test
or
xchg
inc
push
lock
(bad)
shl
data16
inc
xor
stos
dec
in
retf
call
js
dec
clc
mov
jnp
scas
and
push
cmp
lods
jg
xchg
push
cmp
push
repnz
or
xchg
aam
jmp
xchg
sub
jmp
or
xchg
add
mov
rol
jne
fcomp
not
sub
inc
or
mov
mov
xlat
les
cmp
add
adc
cmp
or
or
inc
das
movs
mov
jno
outs
mov
push
sti
inc
bound
sub
jno
mov
addr16
out
shr
cs
xor
mov
or
cmp
jge
pushf
add
es
and
in
test
shr
or
or
loop
mov
js
sbb
in
sti
add
jmp
mov
mov
ja
push
fist
dec
push
adc
pop
xor
(bad)
repz
xbegin
dec
leave
inc
cmp
xor
aaa
xchg
mov
and
dec
icebp
leave
adc
rcr
pushf
xchg
das
addr16
xor
aas
imul
jp
or
test
mov
or
dec
add
scas
cdq
icebp
jnp
test
leave
in
mov
(bad)
hlt
popf
shl
lods
adc
push
movs
outs
mov
cs
add
lods
push
or
repnz
(bad)
test
int
cwde
dec
in
daa
xchg
and
ror
dec
retf
pop
mov
pop
xlat
test
mov
popa
jne
dec
call
test
retf
(bad)
cmp
mov
cmps
mov
dec
push
retf
pop
and
mov
inc
in
ins
outs
outs
lods
xor
aad
inc
(bad)
stos
test
(bad)
stc
or
push
lods
push
or
test
test
ds
xchg
sbb
test
xor
int3
stc
xchg
data16
push
dec
cmps
mov
(bad)
ins
jo
add
xchg
mov
mov
xor
fst
sahf
(bad)
push
and
jnp
adc
xchg
dec
or
popf
dec
adc
cwde
jnp
mov
mov
cmp
jno
xchg
in
and
mov
add
ret
jle
and
dec
mov
jnp
add
jmp
add
or
jge
mov
dec
jecxz
setnp
test
in
sub
sbb
(bad)
(bad)
repnz
ja
push
ret
ja
cmps
into
push
push
icebp
jb
dec
cmp
pop
xor
jl
ins
rol
call
or
stos
mov
xchg
jns
adc
enter
int3
test
and
out
and
add
daa
cdq
fnsave
jle
ss
or
test
and
push
inc
mov
mov
ret
adc
adc
adc
loop
not
loop
add
xchg
stos
and
sbb
outs
(bad)
ins
cmp
inc
mov
sub
mov
lea
call
fst
ins
test
fist
dec
inc
or
push
inc
cld
push
shl
add
pop
xor
xchg
jno
mov
add
(bad)
jne
cmp
fild
push
sub
ret
int
scas
and
push
jns
dec
adc
fstp
mov
mov
mov
cdq
aaa
jae
repnz
mov
mov
or
fimul
sub
outs
sub
pop
adc
adc
ins
or
push
loop
fisttp
lahf
jb
sbb
in
inc
shl
mov
bnd
sbb
pop
xor
mov
imul
and
adc
out
push
jno
pop
and
jge
pop
jg
jne
mov
clc
sub
aad
das
dec
stos
loop
and
pop
add
jmp
mov
data16
pop
je
xlat
out
sub
(bad)
daa
sub
pop
add
sahf
inc
or
call
dec
(bad)
lock
ret
pop
xchg
jb
stc
(bad)
xlat
push
cmps
test
cmp
and
retf
fisubr
adc
sub
jle
jae
adc
mov
and
loopne
dec
sub
lods
je
int
or
das
leave
mov
adc
xor
fs
push
push
cmp
and
out
or
adc
cld
inc
jbe
mov
push
mov
repz
push
ins
scas
into
fidiv
mov
cli
pop
mov
push
ficom
xchg
shr
jmp
and
sahf
outs
jae
cmp
rol
inc
std
scas
pop
pop
out
push
xchg
dec
das
mov
dec
aas
ffree
sub
(bad)
jno
jmp
in
xchg
push
push
cmp
hlt
scas
and
cmp
mov
xchg
inc
repz
shl
xchg
jmp
and
or
nop
and
das
mov
inc
pop
fiadd
aad
pop
fs
sbb
nop
sub
mov
aam
cmp
cli
shr
mov
rcr
pop
lfs
call
arpl
(bad)
daa
xchg
sahf
into
lods
sub
or
mov
cld
jl
sub
push
dec
(bad)
dec
aad
push
push
jnp
and
sbb
iret
and
mov
sahf
mov
adc
data16
sar
jne
(bad)
xchg
jb
nop
bound
out
jp
and
stc
ret
lock
mov
jbe
push
ret
sti
sbb
into
gs
jg
dec
(bad)
mov
cmp
mov
adc
lea
into
rcr
inc
or
ret
mov
arpl
dec
mov
mov
xor
xchg
adc
sub
ins
popa
mul
xor
fbstp
push
test
test
push
in
scas
out
xlat
addr16
sbb
into
or
push
fdiv
pop
mov
cmp
sub
mov
sub
adc
pop
and
daa
add
cs
dec
push
push
cld
ds
jno
add
sahf
cli
es
sbb
jbe
jns
in
add
aad
dec
adc
in
push
in
xor
sti
push
cmp
inc
push
sbb
sbb
dec
cs
and
inc
data16
addr16
pop
xlat
inc
pop
sub
push
loop
cmp
xchg
(bad)
mov
mov
cmp
loope
mov
fst
addr16
jo
fdivr
stc
xchg
pop
mov
loop
lock
push
fidiv
push
gs
pop
ins
jbe
(bad)
or
and
mov
in
pop
fld
popa
and
sub
mov
lea
clc
sub
jge
sub
adc
xchg
inc
dec
lock
inc
mov
push
test
stc
scas
mov
xor
dec
movs
sbb
call
and
imul
jmp
mov
and
loope
out
pop
dec
push
loopne
inc
mov
mov
add
xor
dec
imul
stc
(bad)
nop
adc
sbb
ss
jbe
mov
cmp
in
mov
pop
test
data16
mov
ror
inc
mov
daa
jae
mov
fdiv
rcl
xchg
stc
add
imul
adc
scas
mov
cmp
or
fucom
outs
jmp
xchg
jecxz
push
adc
add
outs
shr
jmp
test
or
push
ss
push
jp
les
inc
hlt
inc
mov
sbb
cmp
test
mov
std
cmp
cmp
cmp
icebp
rol
out
leave
pop
loopne
(bad)
lods
mov
cmp
adc
jbe
repnz
push
dec
nop
retf
mov
rep
jae
mov
push
stos
ja
mov
pop
cmp
pop
js
jns
dec
mov
add
fs
imul
push
jnp
xchg
je
push
repnz
imul
aad
out
push
dec
pop
jne
ret
mov
imul
mov
sbb
dec
mov
pop
push
ins
pop
push
xchg
xchg
or
popa
shl
test
lods
xor
xchg
movs
cs
(bad)
add
sbb
scas
daa
adc
xor
jne
pop
int3
push
and
mov
dec
push
ret
repz
or
mov
popf
pop
mov
stc
pop
pop
cdq
dec
cdq
pop
(bad)
fwait
stos
xchg
data16
int3
mov
mov
out
xor
test
(bad)
std
pop
sub
je
mov
adc
rcl
out
fimul
or
ret
rcr
push
and
push
cmp
pop
(bad)
adc
push
xor
sub
fimul
test
adc
pop
in
shl
call
dec
(bad)
shr
ja
mov
and
sti
and
jns
and
lods
sub
jae
sbb
cs
cld
sub
test
inc
sub
dec
cmps
cmp
cdq
rcr
jbe
js
jb
fisttp
cmp
ret
jge
es
push
call
inc
mov
pop
les
or
test
nop
leave
out
and
xor
outs
aaa
or
cs
arpl
sbb
nop
inc
rcl
jmp
pop
ret
pusha
mov
sub
sbb
rol
leave
pop
outs
push
dec
jbe
out
push
fsubr
das
xchg
rol
sub
add
cdq
cmp
mov
fisubr
xor
lahf
mov
ret
lods
fistp
std
ins
outs
in
sub
mov
inc
push
outs
sahf
loope
xchg
aam
mov
fs
and
test
dec
stos
icebp
xor
push
jmp
cmps
pop
pusha
test
pushf
dec
retf
mov
pop
clc
adc
out
scas
mov
sbb
js
push
cmp
pop
add
pop
and
inc
icebp
xor
mov
ins
and
adc
mov
and
cmps
ds
dec
fcmovne
push
jg
hlt
mov
dec
aad
jl
ret
pop
mov
sub
jno
repnz
int
bound
push
xor
and
shl
mov
pop
inc
mov
cmps
mov
gs
lods
sar
imul
xlat
sub
jmp
cmp
jae
inc
mov
mov
imul
jge
loope
outs
in
shl
pop
pushf
jnp
out
mov
popf
imul
rol
xchg
mov
jl
pushf
mov
jno
push
lods
and
les
nop
repz
sahf
ins
push
mov
out
in
xor
outs
gs
in
(bad)
jl
dec
push
out
in
ss
test
test
pop
lods
mov
mov
in
outs
jg
shl
jmp
sbb
push
icebp
and
stos
popf
shr
xor
cmps
sbb
inc
out
movs
jns
dec
xchg
shl
mov
or
push
ror
jle
inc
xlat
cli
pop
sti
cmp
sub
mov
xchg
or
mov
xor
js
cmps
cmp
cwde
js
cmp
sub
xchg
jmp
fcom
and
sbb
jb
add
shl
and
and
sub
push
add
push
ficom
test
or
scas
mov
mov
leave
mov
cmps
jg
pop
js
and
iret
cmp
sbb
jp
xchg
inc
repz
ficom
outs
outs
daa
fild
es
cmc
sti
sub
inc
cs
aas
dec
lea
xlat
loop
dec
loop
shl
pop
ins
mov
cmp
push
push
int3
pop
mov
xchg
mov
enter
or
add
hlt
push
retf
push
sbb
adc
jnp
xor
fiadd
daa
jne
cmp
cli
mov
fwait
cmp
shl
jbe
imul
mov
cwde
lds
sti
push
fist
(bad)
mov
ins
gs
ret
imul
jl
mov
gs
jno
xor
retf
and
mov
push
inc
jmp
sbb
cmps
cdq
jb
test
movs
movs
les
adc
sub
or
cmp
mov
mov
jns
push
in
(bad)
int
aad
hlt
or
leave
push
(bad)
fcmovbe
loopne
mov
sbb
aam
pop
dec
aam
push
push
pop
test
cmp
jle
xchg
push
push
cs
popa
pop
leave
movs
dec
ror
push
pop
retf
dec
xchg
pop
mov
sar
add
adc
dec
dec
(bad)
mov
pop
mov
vmread
repz
adc
int
inc
sbb
(bad)
movs
pop
cli
push
in
mov
enter
(bad)
mov
pop
dec
cmp
sbb
in
push
add
cmp
je
cmp
pop
adc
xor
and
outs
sbb
sub
pop
inc
cmc
stos
xlat
cs
cmp
lock
inc
mov
cmc
cmp
enter
sub
into
test
push
jle
xchg
xchg
mov
mov
jmp
sbb
imul
jmp
mov
imul
inc
lahf
jno
(bad)
data16
add
arpl
jmp
mov
sbb
(bad)
push
scas
addr16
push
cli
or
in
xchg
cmp
pop
and
mov
pop
add
rcl
add
test
call
in
pop
xchg
out
out
sub
pusha
sub
mov
into
(bad)
jg
dec
retf
mov
sbb
push
pop
mov
inc
cdq
ds
jae
jp
adc
jbe
aaa
xchg
repnz
cld
ret
pop
dec
adc
not
fs
pop
pop
ins
jge
sub
call
pop
test
pop
mov
add
mov
adc
call
dec
jne
xchg
pop
add
int
sti
js
xchg
ins
add
jg
mov
iret
pop
sti
mov
sahf
push
ss
lea
xchg
or
xor
outs
and
mov
sub
push
mov
in
or
nop
inc
rcl
fdivr
fistp
push
lahf
imul
cdq
xor
sbb
imul
mov
das
in
cmps
and
mov
es
inc
repnz
fnstenv
mul
adc
mov
lods
adc
or
push
test
mov
stc
daa
popa
jno
mov
imul
idiv
xchg
push
cs
inc
sti
or
call
sbb
mov
xchg
push
stc
sti
add
(bad)
data16
mov
clc
mov
mov
rcl
mov
loope
fbstp
scas
lea
icebp
hlt
mov
rol
loop
sti
mov
jb
dec
inc
xchg
jge
xchg
inc
xchg
lock
adc
shl
es
call
xor
lea
mov
test
cld
mov
push
nop
daa
outs
cmp
in
mov
add
cdq
adc
and
hlt
lock
stc
(bad)
iret
or
xor
ins
mov
mov
pop
(bad)
mov
jne
fiadd
push
xchg
cmp
and
and
push
lahf
js
into
sub
pusha
inc
push
lahf
dec
mov
add
pop
imul
cdq
push
lds
enter
(bad)
xlat
xor
stc
imul
pop
inc
sub
test
test
outs
jmp
sbb
mov
xchg
mov
pop
test
out
dec
inc
cmp
push
jne
jno
xchg
into
out
mov
scas
push
pusha
push
ror
popf
jg
pop
and
in
push
jp
dec
lds
pop
movs
push
xor
mov
popa
pop
scas
dec
daa
mov
mov
mov
mov
sub
sub
sbb
ficom
inc
movs
cmps
add
je
cdq
mov
pop
xchg
ins
add
cmc
mov
mov
fwait
jmp
mov
out
iret
ror
xchg
movs
xchg
aam
icebp
sub
stos
movs
je
push
and
cwde
and
pop
add
ja
movs
ror
fucomi
pop
fisub
and
aad
jmp
lock
cld
xor
paddsb
stos
popf
movs
out
adc
and
sub
push
imul
mov
std
stos
push
stos
daa
mov
push
dec
cli
inc
std
nop
sub
add
or
sbb
(bad)
sub
mov
pop
mov
cmp
leave
xchg
(bad)
sub
mov
xor
push
sub
pop
dec
mov
(bad)
mov
push
(bad)
loope
stc
sbb
mov
mov
add
sbb
fld
icebp
jno
mov
outs
and
ficom
fimul
shr
cmp
ret
jl
pusha
sbb
mov
(bad)
jns
aam
popa
je
inc
xor
xchg
xchg
sub
and
pop
mov
ficomp
ja
mov
push
rcr
mov
pop
jp
mov
xor
es
adc
neg
nop
adc
jg
inc
xor
push
(bad)
sub
xchg
arpl
test
or
std
or
mov
push
mov
push
inc
and
ins
pop
mov
and
inc
inc
(bad)
ds
pop
sahf
xor
aad
stc
xor
pusha
and
call
ror
jmp
add
push
popf
push
lock
lods
call
bound
test
mov
out
mov
ret
or
int3
test
cmp
sub
out
out
sub
pusha
cmp
pop
sub
ret
(bad)
xchg
aas
pop
bound
call
movs
aaa
or
jb
mov
in
or
addr16
clc
jge
loop
cli
sti
xchg
(bad)
aam
retf
jecxz
stc
pcmpgtd
push
dec
sbb
jmp
jb
popa
and
push
repnz
fbstp
jo
call
fadd
sbb
pushf
je
pop
shl
cld
fwait
xor
lock
out
rcr
test
jno
push
and
sub
cmp
je
aaa
jae
jns
mov
ins
and
lods
and
cmp
je
jge
mov
cmps
jns
jno
push
sti
cmp
sbb
add
sbb
cs
push
xchg
int3
mov
pop
inc
mov
or
cwde
xchg
pop
add
rcr
repnz
imul
jae
mov
cdq
sub
call
jecxz
into
pop
fdiv
loope
xor
(bad)
sub
in
mov
test
mov
ret
push
pop
int
dec
in
loopne
sub
push
sbb
mov
jmp
mov
in
addr16
stos
mov
and
pop
fidivr
pop
fs
push
push
cmp
pop
fist
sub
popf
(bad)
sar
je
push
cwde
inc
aas
push
adc
dec
jmp
xor
and
xor
inc
stos
jmp
mov
mov
cmp
mov
setbe
add
pop
xor
outs
faddp
inc
sbb
xor
lds
fidivr
mov
addr16
je
fstp
adc
fidivr
push
sbb
push
lods
(bad)
add
jp
stos
add
add
(bad)
out
iret
pop
push
or
pop
fdivr
dec
fisttp
dec
in
mov
not
imul
(bad)
push
xchg
cmps
out
dec
outs
sahf
(bad)
lds
in
mov
xor
push
mov
cmp
or
and
adc
jbe
mov
shr
mov
scas
sub
xchg
cmp
pop
fcom
or
adc
jg
ss
adc
sbb
xchg
(bad)
bound
and
sub
pop
imul
xchg
aas
jecxz
nop
mov
mov
xor
ja
jl
dec
push
pop
jl
seto
sbb
mov
jb
jle
mov
mov
call
jge
mov
mov
mov
in
imul
(bad)
(bad)
lods
(bad)
gs
push
pop
xchg
dec
out
pop
mov
loop
adc
sbb
repz
pop
pop
sbb
jmp
sahf
iret
mov
mov
nop
aam
imul
out
pop
adc
aaa
xchg
and
pop
xchg
daa
fwait
jne
jge
retf
rcl
ins
push
dec
out
cwde
or
push
jo
jns
push
cmp
fist
mov
(bad)
mov
mov
adc
adc
add
mov
xchg
mov
and
es
xchg
pop
(bad)
icebp
inc
xor
retf
jg
pop
outs
xchg
cmps
ret
inc
ds
bound
sub
imul
dec
push
add
cmp
jl
dec
dec
not
jo
pop
xor
clc
out
push
ret
into
lods
xchg
shl
xchg
arpl
or
push
data16
xor
nop
dec
mov
add
sub
mov
xor
neg
xchg
dec
pop
retf
and
sbb
add
add
imul
and
jl
cmp
xor
mov
psrad
cmp
add
pop
in
add
std
rcr
mov
mov
cmps
sti
dec
fcom
mov
xlat
push
pop
mov
xor
xor
jmp
push
sar
xor
into
mov
and
jo
aaa
inc
dec
sub
sub
mov
ja
inc
lods
cli
stc
push
das
ins
(bad)
cwde
pop
movs
(bad)
sbb
(bad)
push
jb
dec
pushf
test
jmp
xchg
sti
inc
push
cmps
xor
packsswb
mov
fistp
adc
adc
adc
sbb
retf
test
test
mov
out
enter
enter
retf
dec
ret
push
stos
out
push
mov
mov
add
icebp
(bad)
fsub
dec
in
or
xor
sahf
pop
pop
adc
or
test
sub
jge
xchg
pop
aas
not
mov
cwde
enter
mov
jl
js
fmul
maskmovq
nop
xor
popf
out
mov
adc
sysret
xchg
pop
mov
enter
xchg
add
data16
fnstcw
pop
(bad)
mov
stc
adc
mov
mov
loop
cmp
xor
pusha
mov
leave
cs
fisttp
jno
xchg
mov
mov
(bad)
(bad)
adc
out
lahf
jg
test
aas
loope
sbb
jmp
(bad)
in
fst
out
les
inc
fcomip
jp
ja
mov
push
pop
retf
ret
gs
jge
or
addr16
into
outs
cwde
loope
push
fxch
stos
push
dec
inc
add
cmp
shr
jg
jmp
inc
push
dec
xor
sar
pop
(bad)
outs
inc
cmps
and
fcmovb
stos
push
popf
repz
in
cld
sbb
inc
clc
mov
pusha
lods
ret
int3
and
mov
push
add
inc
mov
dec
sub
xchg
xchg
rcr
daa
mov
int3
mov
fwait
jge
ja
push
xlat
push
imul
ds
fisub
xchg
sbb
adc
xchg
sbb
out
fld
cmp
inc
cwde
hlt
lods
push
xor
pop
mov
mov
sbb
xchg
ror
je
sar
iret
xor
addr16
jecxz
jmp
movs
lea
cmp
jmp
cmp
sub
ret
mov
and
push
call
add
or
jmp
xor
push
out
loope
cmc
push
sbb
dec
sbb
xchg
cmp
xchg
outs
pop
inc
jle
inc
fild
mov
xor
push
shl
xor
fnstsw
(bad)
ficom
bound
mov
ficomp
and
lods
xchg
mov
jo
jae
mov
int
push
out
mov
push
(bad)
gs
cmp
sti
push
add
ret
sub
scas
or
int
inc
es
or
push
adc
pop
xor
dec
outs
ret
fidiv
xor
test
jecxz
mov
call
inc
sbb
fisub
call
xchg
cmp
fiadd
pop
sti
xor
mov
into
into
mov
sub
scas
in
fadd
scas
inc
inc
jl
xor
inc
add
adc
add
push
ins
clc
cld
push
cmp
mov
fcom
push
bound
pop
xchg
aaa
inc
std
jp
ss
mov
inc
xchg
inc
aad
in
in
xor
fsubr
mov
xor
pop
push
sub
pop
cmp
ins
lea
adc
adc
lock
add
xchg
test
popf
data16
fidiv
adc
add
movs
xor
push
push
ror
lods
push
jl
xor
jne
xchg
mov
rcr
pop
(bad)
pop
push
jns
push
dec
movs
add
xchg
ins
push
push
cld
push
stc
out
cmp
imul
je
add
mov
mov
xor
imul
movs
xchg
and
cmps
scas
fdiv
jg
sbb
jbe
out
int3
addr16
repnz
mov
or
in
leave
jns
movs
and
or
cmp
jg
aad
cmp
mul
pop
pop
loopne
xlat
inc
addr16
mov
imul
jecxz
fimul
and
mov
add
bound
and
inc
js
imul
(bad)
pop
gs
pop
cmp
pushf
mov
call
fisttp
dec
mov
add
imul
push
(bad)
or
jp
sub
call
dec
outs
lods
add
add
xor
jae
arpl
pop
add
fcom
adc
mov
inc
inc
outs
sub
mov
pop
jmp
ds
dec
xor
aad
mov
adc
jecxz
popa
dec
(bad)
jmp
push
(bad)
jp
sub
jg
pop
xabort
daa
ror
mov
sahf
ja
dec
cld
jmp
push
sub
mov
jnp
fcom
mov
adc
test
pushf
inc
mov
aam
xchg
mov
ds
jecxz
adc
cmc
mov
sub
push
jp
jmp
into
ja
fdivr
addr16
mov
cmps
sub
pop
les
sbb
sub
shl
std
push
cmp
int3
rol
(bad)
jnp
push
jo
cmp
out
enter
xchg
mov
dec
inc
pop
(bad)
fmul
sbb
sub
xchg
inc
push
jge
arpl
xor
cld
and
out
outs
add
aam
xor
loope
cmps
dec
test
push
int3
xchg
fs
retf
lds
mov
pop
(bad)
sbb
cmps
xchg
outs
lds
(bad)
loop
out
retf
push
or
pop
ja
lods
scas
fdiv
and
dec
iret
jge
out
add
pop
adc
(bad)
inc
mov
sahf
leave
jmp
not
ins
dec
mov
test
pop
in
ja
mov
xchg
add
mov
lea
in
sahf
mov
fnsave
fild
xchg
jne
xchg
lock
push
mov
mov
gs
push
sbb
mov
push
pop
dec
jae
mov
pop
xchg
mov
test
scas
push
test
sbb
sbb
push
mov
jne
add
and
mov
pop
pusha
scas
sbb
in
shl
stc
and
or
or
pusha
push
clc
out
repnz
pop
popf
shl
xchg
mov
ins
or
jno
enter
dec
cmc
stos
cdq
mov
into
in
mov
xchg
scas
ins
retf
dec
in
lds
push
out
lods
cmp
dec
xlat
cmp
test
pop
cs
imul
adc
mov
sbb
mov
int
jbe
popf
push
sbb
jns
mov
fistp
sbb
inc
cmp
pop
retf
sub
aas
push
aaa
xor
js
iret
inc
jge
imul
inc
mov
sbb
add
fsubr
call
add
js
jns
cli
stos
mov
fld
lds
std
push
sbb
push
jle
mov
and
shl
push
sub
xchg
inc
sub
loopne
aad
mov
xor
push
(bad)
aam
mov
mov
in
push
pop
ficom
push
aad
add
jle
sbb
je
sti
popa
mov
pop
(bad)
dec
mov
adc
das
mov
jo
test
push
aad
daa
jnp
leave
movs
mov
fcomp
cmp
int
lods
sbb
mov
sbb
clc
xor
and
or
inc
push
mov
ja
cmc
lea
ret
sub
or
ja
mov
repnz
retf
int
jp
test
add
call
sahf
sbb
gs
mov
shl
rol
je
jno
aaa
mov
add
sbb
fucomp
adc
movs
out
jo
into
ficomp
xchg
sub
rcr
xor
sub
loop
retf
daa
jg
mov
pop
cld
lds
loopne
loope
fisub
add
ret
shl
ja
push
cs
(bad)
call
je
jns
lock
jbe
lahf
retf
jmp
mov
es
mov
loope
pop
pop
xlat
mov
hlt
mov
xchg
fninit
or
jne
imul
je
inc
aam
leave
stc
jg
cmps
push
cmp
xor
clc
push
inc
cs
push
mov
push
gs
add
mov
mov
xor
mov
mov
xchg
call
or
push
sbb
popf
cdq
cmp
std
dec
or
(bad)
pop
movs
mov
pushf
inc
add
or
stos
sbb
jecxz
pusha
scas
(bad)
fcomi
retf
fdiv
lods
sbb
(bad)
hlt
and
inc
push
pop
ins
and
mov
arpl
sbb
data16
pushf
sbb
inc
cwde
jnp
push
scas
iret
sbb
pop
cdq
cmp
in
jo
sti
iret
ret
stos
scas
inc
pop
in
sub
xchg
mov
pop
pusha
sar
push
and
xchg
push
xchg
mov
in
jo
and
out
cmp
fstp
push
int
mov
jae
jp
out
fwait
or
and
xchg
xor
mov
aas
or
jmp
shl
jns
ins
xchg
das
push
cmp
das
aas
popa
ret
mov
jmp
sbb
in
pop
je
and
jne
sub
xlat
xor
cmp
xchg
inc
frstor
cmp
call
pop
cld
add
xchg
call
lea
dec
(bad)
call
xor
xor
test
push
in
aas
mov
mov
sbb
jmp
sub
jmp
fucomp
ret
xchg
inc
iret
call
scas
xlat
pop
out
popf
mov
adc
jno
(bad)
and
sbb
(bad)
gs
jae
pop
mov
ins
cmp
loope
pop
stc
pop
hlt
sub
jnp
int3
test
(bad)
sti
mov
jmp
inc
frstor
adc
scas
and
into
das
inc
add
or
lahf
pop
add
mov
jo
mov
stc
(bad)
fs
mov
dec
fs
fild
xchg
pop
or
ror
pusha
movs
fcomp
fwait
mov
daa
push
imul
push
aas
movs
jmp
jge
out
or
xor
hlt
aad
jmp
ins
mov
test
cmp
repnz
cmp
mov
cmp
enter
lods
xchg
or
add
cmp
push
inc
icebp
and
sub
push
in
cmps
fimul
adc
mov
dec
mov
mov
cs
push
cli
mov
jmp
out
(bad)
rcr
loopne
add
cwde
inc
fsub
in
mov
ins
(bad)
lahf
jp
aam
jecxz
pop
sbb
shl
add
nop
mov
or
mov
(bad)
out
sbb
mov
cmp
rcl
(bad)
arpl
iret
or
xchg
adc
js
inc
mov
das
adc
(bad)
mov
xchg
mov
or
sub
jno
adc
(bad)
std
ss
push
pop
das
jg
dec
inc
(bad)
clc
call
jge
or
mov
xchg
sub
jle
jne
pop
int3
push
jecxz
dec
andnps
shr
fsub
xchg
adc
sub
pop
inc
jne
leave
ins
xor
inc
or
mov
ret
hlt
cdq
not
les
cmps
jae
add
jmp
imul
loope
pop
adc
push
fadd
mov
inc
je
test
jl
pop
inc
(bad)
(bad)
xor
jmp
xchg
cmp
out
push
gs
jmp
and
(bad)
sub
mov
jnp
cli
cmp
pop
mov
mov
cmp
pop
je
jo
js
xchg
pushf
cwde
dec
fistp
pushf
iret
and
stos
(bad)
fwait
(bad)
mov
fimul
out
call
test
(bad)
jecxz
and
into
inc
mov
cmp
xchg
add
adc
pop
rcr
xchg
add
imul
cmp
ret
dec
add
leave
stos
push
scas
jbe
repz
out
or
mov
dec
cdq
lods
pushw
iret
dec
inc
push
(bad)
jno
inc
stos
mov
aaa
cmp
fdiv
or
sub
mov
mov
sbb
sub
xor
and
aas
mov
mov
jae
or
and
stos
sbb
data16
mov
repnz
lods
sub
rcl
iret
pop
mov
mov
adc
mov
jb
fwait
gs
adc
sbb
scas
movs
mov
push
xchg
jp
popa
push
mov
clc
sti
and
ins
inc
ficomp
push
lods
xchg
pop
or
or
imul
aaa
out
jnp
adc
adc
pop
aas
lock
fs
inc
int3
mov
loop
add
loop
jnp
pop
sbb
popa
repnz
xchg
jns
mov
vpcmpeqw
cli
fnstsw
mov
in
add
(bad)
pop
adc
enter
retf
in
repz
mov
out
imul
dec
xchg
xor
sahf
ins
dec
and
retf
adc
cmp
jbe
cs
push
xchg
mov
or
outs
adc
dec
out
into
sub
(bad)
loopne
repz
sub
cwde
test
test
mov
pop
ss
and
push
sbb
cmc
movs
lods
cs
mov
sti
adc
aam
fwait
out
inc
pop
pop
dec
lahf
rcl
in
xchg
xor
adc
mov
sbb
in
adc
cmps
in
dec
fcomp
sbb
lods
cmps
xor
cmc
out
xor
pop
mov
sub
jmp
mov
mov
push
jbe
mov
sub
fst
ret
sbb
les
enter
fdiv
sub
(bad)
sbb
mov
ja
jbe
cli
retf
sub
pushf
xchg
cmp
and
pop
or
sub
les
mov
daa
cmp
cli
push
fldcw
test
inc
adc
mov
xchg
jl
outs
aaa
std
jbe
jp
mov
sbb
(bad)
jno
add
inc
mov
mov
cmps
mov
(bad)
mov
jmp
aas
cmc
mov
sub
outs
leave
hlt
mov
cwde
mov
test
dec
sub
mov
mov
pusha
dec
imul
pushf
aaa
sar
and
xor
add
gs
push
push
iret
and
or
test
push
pop
(bad)
imul
std
imul
jbe
ja
lods
nop
imul
test
pushf
gs
imul
jae
mov
aad
cmc
dec
fwait
cdq
outs
xchg
(bad)
jbe
xor
lds
xor
dec
sbb
daa
stc
or
ins
addr16
popf
out
idiv
and
sbb
and
loopne
cmp
cmp
dec
movs
xchg
retf
inc
pop
mov
jle
push
mov
mov
aaa
cmps
pop
cdq
dec
sub
test
fldcw
mov
js
mov
jp
fidiv
test
mov
cs
push
mov
cmp
jecxz
push
mov
popf
clc
xchg
and
xchg
xchg
push
lods
xchg
inc
out
or
ins
lahf
(bad)
fwait
xchg
push
cmp
lock
sub
push
pop
outs
dec
loopne
leave
popa
inc
sbb
jo
ror
xor
and
and
mov
lock
cmp
xchg
mov
xor
fs
adc
pop
fs
fs
push
test
inc
push
mov
in
mov
xor
mov
sbb
mov
jne
and
mov
test
add
pop
adc
imul
or
mov
and
sbb
jo
pop
xchg
imul
adc
jg
js
mov
mov
or
pop
and
in
lods
loope
mov
xor
and
ret
dec
ret
jle
and
xor
ds
fwait
lea
dec
add
push
ror
dec
(bad)
arpl
outs
ret
or
(bad)
out
int3
es
popa
mov
je
dec
sbb
xor
mov
pop
cdq
cmps
hlt
and
pop
pop
mov
inc
es
outs
adc
sbb
jge
fsubr
xchg
aad
push
jae
icebp
pop
idiv
pop
das
mov
adc
stos
pop
psraw
lock
lock
imul
fild
sub
pop
mov
jns
call
lds
mov
xchg
cwde
in
push
loope
and
push
pop
push
sti
push
cmps
jb
mov
and
xor
icebp
mov
inc
mov
or
pop
cmp
mov
mov
fbld
or
(bad)
and
cmp
enter
mov
pop
enter
bound
sbb
or
xchg
and
cmp
dec
mov
push
push
into
int3
mov
int3
rcr
push
sbb
stc
and
je
push
and
mov
aad
xor
xchg
loop
mov
inc
xchg
jne
xor
adc
cld
jns
aaa
adc
mov
in
jmp
enter
mov
mov
and
cwde
gs
or
mov
cli
xchg
push
mov
lea
push
mov
outs
mov
int
jle
jmp
mov
scas
sbb
adc
push
lods
sub
hlt
fdivr
push
xor
sti
sub
inc
fbstp
xlat
in
pop
cmp
cdq
xchg
jne
lahf
mov
add
idiv
dec
int3
inc
fidiv
out
loop
mov
cmp
sbb
popa
mov
fcomi
xlat
mov
adc
mov
fisubr
scas
sbb
mov
mov
movs
dec
enter
and
mov
add
add
sub
ret
jno
add
cs
sbb
cmc
push
push
mov
fisubr
(bad)
(bad)
cwde
cld
inc
push
in
scas
mov
xchg
stos
lahf
add
not
or
ds
ins
lods
mov
or
pop
jnp
xlat
hlt
enter
xchg
jecxz
cmp
xor
inc
or
fst
xor
pop
sbb
dec
sbb
dec
aaa
push
sub
stos
sub
and
lock
outs
ret
fdiv
mov
call
ins
sub
(bad)
jmp
pop
push
push
loop
sbb
fldcw
and
emms
pop
aad
pop
cmp
mov
test
pop
fld
das
leave
jmp
xlat
and
out
das
pop
xchg
pop
movs
pop
dec
pop
push
mov
in
icebp
jmp
mov
xor
sbb
sub
and
out
and
push
cmp
mov
(bad)
cmp
mov
or
mov
add
icebp
sub
xchg
jb
test
int3
jg
aam
xchg
lods
jbe
cmp
cwde
bound
push
cwde
fisttp
ret
and
sbb
out
sbb
iret
icebp
jne
arpl
repz
mov
int
movs
aaa
dec
test
push
xchg
xor
das
pop
stc
repnz
cld
sbb
cmp
inc
mov
hlt
cmp
sbb
adc
movs
push
push
xor
and
inc
repnz
mov
mov
mov
js
lods
cmp
xor
test
pop
jle
add
lahf
outs
mov
jmp
jns
aaa
stos
shl
sub
and
push
xchg
jmp
js
retf
shr
cmps
into
xor
cli
push
in
pushf
mov
dec
mov
(bad)
jg
adc
pushf
into
and
dec
mov
sahf
test
fwait
xchg
out
add
cmps
iret
cmp
enter
sar
ins
nop
xor
push
arpl
xchg
sbb
mov
add
lds
(bad)
rcr
cmc
dec
lock
push
jecxz
jb
sar
(bad)
fisttp
(bad)
imul
nop
mov
in
jno
push
and
test
dec
mov
adc
out
sub
push
add
stc
fild
cmps
cwde
mov
pop
sub
sbb
and
retf
cmp
adc
mov
out
js
nop
adc
outs
pop
ja
in
mov
cmp
cs
or
icebp
cmp
or
in
loop
mov
mov
out
(bad)
mov
int
sbb
push
mov
mov
jmp
aam
push
sub
push
outs
push
ins
mov
dec
in
cmp
inc
or
out
or
aad
popa
icebp
cmp
push
pop
stos
fiadd
mov
mov
adc
or
lds
pushf
adc
repnz
div
ins
aam
add
(bad)
and
test
xor
mov
and
lods
mov
xchg
rol
cmps
data16
push
xchg
data16
dec
push
pop
pop
imul
js
ffree
mov
push
bound
ret
gs
movs
jl
(bad)
jmp
rcl
xchg
rol
push
or
sti
sbb
cmp
cmp
arpl
addr16
test
retf
jnp
and
enter
pop
cmps
retf
lods
dec
sub
cmp
jl
jno
mov
call
sbb
xchg
mov
clc
ins
mov
xchg
cmps
push
(bad)
cmp
add
sbb
adc
xchg
mov
out
push
jmp
test
or
aam
mov
stos
push
cld
out
add
inc
popf
shr
jae
xchg
loope
cs
imul
(bad)
jl
(bad)
lahf
pop
mov
push
jnp
rol
xchg
xor
xor
les
adc
xor
sub
ja
(bad)
call
ja
cmp
pop
mov
std
pop
sti
inc
lods
mov
jmp
cmp
cmp
in
ss
cmp
in
xor
outs
les
test
sub
fnstenv
inc
out
inc
mov
xor
popf
pop
loopne
inc
int3
test
mov
imul
sbb
mov
jp
mov
pop
or
pop
or
ins
call
outs
inc
(bad)
fwait
and
pavgb
or
push
rol
pop
jmp
jmp
jg
xor
mov
add
addr16
and
cld
leave
cmc
push
cmps
add
adc
mov
daa
enter
cld
jb
jo
inc
pop
push
mov
xchg
movs
aad
cmp
test
enter
imul
shl
in
add
fadd
shl
jno
arpl
push
pop
popa
jecxz
and
and
cli
lods
and
and
cs
push
retf
aas
jge
and
push
ins
or
sahf
rcl
pop
and
loope
push
js
or
cmp
push
adc
outs
or
lods
(bad)
xchg
shl
inc
cld
cmp
mov
or
lea
shl
loope
push
mov
and
xor
shl
mov
push
mov
and
xlat
out
add
mov
pop
mov
jae
inc
xchg
sub
popa
push
push
jge
outs
mov
xor
imul
loopne
jbe
push
push
fst
icebp
adc
rcl
sbb
scas
inc
push
mov
push
icebp
jmp
inc
mov
test
jmp
sub
aam
dec
rcr
retf
mov
pop
jne
jle
retf
clc
mov
cmp
in
mov
mov
test
dec
push
rol
xchg
jge
imul
mov
int3
jb
fs
pop
mov
fsubrp
ret
loope
adc
push
adc
daa
in
sbb
lods
sbb
sub
sub
mov
xchg
push
inc
iret
mov
push
jbe
mov
dec
pop
xor
dec
lds
es
xlat
in
(bad)
jmp
pop
mov
push
inc
mov
fs
push
sbb
xchg
repnz
nop
mov
jl
xchg
sbb
sbb
shl
addr16
mov
aad
pop
mov
dec
popf
push
mov
xchg
or
dec
inc
mov
fs
jnp
mov
xchg
and
cld
or
fidiv
out
add
dec
jo
pusha
ja
xor
cli
icebp
mov
cmp
std
sbb
pop
jbe
pop
push
into
dec
inc
mov
popf
sub
sbb
push
xchg
mov
ficomp
jne
es
dec
ds
out
jecxz
pop
sbb
dec
hlt
out
arpl
jp
fwait
and
jo
xchg
pop
or
loopne
jo
loopne
mov
inc
dec
(bad)
(bad)
fcmovnu
shr
js
mov
das
aad
jns
sahf
movs
pop
stc
xchg
xchg
sub
xor
add
mov
xchg
push
(bad)
imul
hlt
(bad)
retf
mov
mov
sub
or
push
and
push
xor
mov
lods
ds
mov
test
adc
mov
adc
ds
movs
xchg
call
lock
dec
xchg
ror
cdq
out
sub
sahf
(bad)
scas
mov
pop
es
pop
push
push
dec
lock
inc
inc
rcr
repnz
xchg
pusha
mov
imul
into
sbb
cmp
icebp
xchg
pop
mov
jge
scas
(bad)
mov
mov
hlt
out
inc
mov
movs
jg
rol
xor
jle
and
adc
out
xchg
(bad)
sbb
push
add
or
xor
mov
xor
jp
mov
cmp
add
(bad)
jge
pop
xor
or
inc
ins
xor
retf
je
mov
aas
repz
(bad)
or
jecxz
cmp
push
mov
cmp
push
adc
out
out
push
cdq
dec
mov
mov
jle
mov
setne
or
aaa
dec
je
dec
test
add
dec
mov
pop
mov
imul
into
setne
sbb
(bad)
dec
push
mov
scas
jbe
out
sub
add
jle
lahf
(bad)
movs
xchg
call
es
cwde
mov
dec
div
adc
outs
mov
ja
mov
xchg
leave
pusha
(bad)
push
fadd
imul
dec
icebp
adc
inc
jg
or
test
jle
xor
mov
pop
rol
repnz
cmps
enter
mov
loope
in
gs
mov
xor
idiv
pushf
sbb
pusha
push
retf
in
lods
pusha
int3
xor
adc
mov
jl
nop
(bad)
int
mov
jns
xchg
sub
ja
adc
(bad)
repz
rol
div
in
lods
adc
sub
shl
pop
push
inc
sbb
inc
mov
sbb
test
cdq
inc
sbb
cmp
popf
mov
push
mov
cs
fisttp
pop
frstor
mov
(bad)
gs
arpl
sub
and
ret
ret
cmp
or
adc
jmp
jl
mov
enter
adc
sub
jl
mov
scas
jle
shl
fadd
mov
mov
xor
movs
retf
das
xor
(bad)
aad
movs
inc
pop
jg
imul
push
mov
mov
pop
dec
test
xchg
adc
push
or
hlt
inc
icebp
add
xor
jecxz
cmp
mov
int3
mov
aaa
stos
push
fbld
jmp
lods
add
pop
(bad)
sbb
jl
sbb
add
test
pop
clc
push
les
and
out
(bad)
inc
dec
xchg
push
inc
setno
std
push
add
mov
loope
sbb
in
sub
fcomp
push
adc
fisubr
aaa
and
jnp
dec
cli
mov
cmp
add
in
test
ins
mov
(bad)
fbstp
jp
jecxz
jecxz
ret
ror
std
and
outs
in
sar
xor
ret
jmp
shl
jo
test
xor
retf
push
hlt
mov
mov
aam
pusha
mov
pop
in
stc
and
int
jl
pusha
mov
imul
data16
xchg
push
mov
jmp
aaa
or
ja
push
leave
js
jmp
scas
inc
out
pop
cmps
jne
jle
icebp
lahf
inc
adc
outs
rcr
nop
aam
loope
rol
and
ins
push
push
pop
xlat
cmp
jecxz
push
ret
scas
aaa
cmps
int
sub
or
xchg
dec
cld
xor
jae
cli
fnstcw
scas
cmp
or
or
shl
cs
sub
fxch
xchg
xchg
or
or
jmp
fidiv
jmp
fidivr
inc
jp
or
dec
jmp
inc
pop
sahf
sbb
jmp
mov
inc
push
jb
or
adc
fs
mov
and
sti
or
add
jge
cmp
or
mov
dec
jno
mov
ja
scas
xchg
or
aam
add
outs
cmp
jnp
mov
mov
sbb
pop
jl
push
jmp
(bad)
jecxz
je
dec
add
mov
xchg
add
cmp
in
das
xchg
xchg
sub
push
and
lds
mov
adc
dec
sahf
aas
mov
das
cs
iret
test
adc
retf
paddd
add
xchg
pop
inc
push
leave
and
enter
sub
ins
aaa
cmp
mov
xor
push
mov
cmp
into
aam
cmps
cdq
push
push
js
icebp
adc
out
push
jns
xor
data16
fisttp
pop
push
in
shr
xor
(bad)
neg
jecxz
inc
mov
aad
bound
pop
xlat
add
pop
int3
rcl
and
jecxz
outs
add
pop
xor
add
mov
outs
inc
js
jecxz
addr16
jmp
in
movs
adc
push
sbb
or
loopne
mov
sbb
hlt
dec
dec
and
(bad)
xlat
jns
test
lock
mov
outs
dec
inc
add
inc
and
outs
loope
mov
cwde
xchg
sub
loope
(bad)
cdq
pop
scas
or
icebp
inc
pop
pop
pop
adc
fsubr
mov
daa
add
inc
test
rol
shr
xchg
int
neg
xor
loopne
out
fsub
call
sbb
or
rol
loopne
ja
or
shr
popa
inc
sub
aam
sub
fdiv
call
(bad)
js
mov
leave
test
sbb
cdq
movs
mov
out
xor
fwait
sbb
enter
mov
stos
in
pop
cmps
repnz
xchg
ret
and
test
inc
sub
jb
imul
aaa
mov
pop
jb
sbb
push
out
jno
in
xchg
iret
leave
(bad)
push
cmc
pop
int3
xor
xchg
enter
cmp
lock
mov
outs
xchg
pop
stos
or
xchg
popf
push
sbb
or
xchg
data16
(bad)
cmp
loope
xchg
jo
cmp
scas
nop
in
ret
push
cld
jge
loopne
retfw
aad
jnp
cmp
mov
arpl
mov
sti
mov
in
push
xchg
std
(bad)
cmp
pop
int3
cwde
sqrtps
retf
(bad)
xlat
dec
push
push
mov
xchg
mov
mov
or
push
push
and
add
pop
sub
cmp
idiv
cwde
pop
stc
jl
add
xchg
fist
add
pop
clc
pop
ficom
pop
and
inc
and
mov
jecxz
dec
pop
xor
xor
loop
or
sbb
test
xchg
(bad)
dec
inc
(bad)
out
mov
test
test
out
push
or
loopne
add
call
mov
xor
fbstp
fs
add
(bad)
fild
jmp
jle
les
mov
mov
lods
loope
mov
cmp
push
in
pop
inc
push
pextrw
cmps
inc
sbb
out
out
mov
pop
mov
and
stos
leave
inc
jae
outs
cld
ja
fisttp
adc
ins
rcl
sti
mov
pop
(bad)
mov
xchg
retf
pop
cmp
arpl
inc
(bad)
cmp
xchg
jmp
repz
int
pop
sbb
pop
pusha
inc
retf
jp
or
(bad)
push
jmp
fcomp
imul
cmps
sub
push
jb
cmp
bnd
xchg
scas
adc
mov
sahf
push
xor
imul
(bad)
(bad)
cmc
(bad)
hlt
mov
and
sub
mul
dec
adc
cmp
jle
popa
jnp
js
daa
gs
inc
js
ret
mov
mov
test
aaa
shl
and
rcl
fs
push
aas
sbb
pop
es
pop
xor
stc
fwait
inc
inc
mov
ins
mov
ret
push
mov
jns
xor
loope
add
sub
jl
mov
fidivr
(bad)
cmp
xlat
mov
aas
jns
push
in
xchg
pop
enter
add
fistp
cmp
(bad)
mov
gs
mov
sbb
inc
aaa
pop
les
ret
pop
push
push
mov
in
cmps
sub
adc
leave
or
out
fs
test
push
dec
imul
add
xor
add
es
retf
sub
adc
nop
push
stc
and
inc
les
push
inc
mov
sub
sti
shl
mov
cmps
mov
retf
pop
and
inc
cld
mov
les
imul
mov
fild
cmp
jg
jmp
add
dec
test
jmp
mov
call
xchg
mov
gs
out
sub
outs
mov
dec
and
pop
nop
add
cmp
ja
(bad)
mov
mov
vpsubb
xor
retf
clc
rol
xlat
dec
add
sahf
mov
xlat
pop
ret
xchg
sbb
fldcw
cdq
sar
sub
gs
fisubr
cmps
lea
mov
xor
xchg
and
repnz
lock
xchg
sub
pop
pusha
retf
scas
and
push
inc
sbb
hlt
pop
mov
xor
add
shr
inc
cs
fistp
mov
loope
lods
call
addr16
shr
loope
hlt
out
and
xchg
mov
imul
sbb
push
in
cmps
push
outs
add
stos
sub
mov
scas
into
pop
jge
retf
adc
jl
das
(bad)
retf
sbb
div
cwde
paddd
ret
pop
clc
xchg
sub
test
rcl
ret
rcr
retf
sub
and
movs
xchg
test
test
fisttp
or
add
jnp
sbb
out
lahf
push
add
dec
mov
or
nop
mov
sbb
outs
jg
jbe
out
addr16
(bad)
lods
or
mov
ins
xor
ret
sbb
and
mov
in
lds
cld
push
mov
retf
lock
push
or
test
cmp
cli
cmp
jp
retf
xchg
ins
(bad)
jae
pushf
pusha
cmp
dec
jnp
pop
repz
mov
inc
sbb
sbb
and
inc
(bad)
(bad)
enter
pusha
pushf
je
cdq
movs
repnz
mov
add
and
imul
xor
xchg
mov
pop
cmp
mov
lock
scas
fmul
xor
lods
pop
mov
dec
sbb
sar
inc
dec
ja
push
add
sbb
inc
xchg
(bad)
lods
movs
pop
mov
clc
(bad)
addr16
cmp
inc
mov
cbw
dec
dec
cmp
bound
bound
jae
test
xor
pop
popa
repnz
cmp
pop
fcmovnbe
mov
cli
scas
jl
push
mov
add
js
nop
pushf
aas
ret
xchg
sbb
hlt
sbb
mov
jns
ret
pop
pop
cmp
sub
xlat
jp
jb
push
lods
push
leave
ja
shl
dec
sbb
cmp
sub
mov
or
jnp
bound
loopne
js
fmul
lods
(bad)
or
out
xchg
xor
loopne
pop
push
push
add
push
stc
out
imul
mov
imul
push
movs
cmp
xlat
dec
sbb
jne
pop
mov
xchg
stos
retf
pop
add
leave
mov
mov
int
out
xchg
fisttp
dec
fcomp
mov
xchg
neg
int3
rcr
pop
xchg
movs
push
mov
or
mov
test
xor
mov
cmps
sti
imul
jne
les
jmp
mov
mov
pop
mov
in
jns
jbe
dec
or
fdivrp
imul
jbe
xchg
mov
xor
and
and
sbb
add
loope
mov
movs
pop
xor
dec
jp
icebp
pushf
test
sbb
or
outs
ja
clc
push
cs
and
mov
ins
sbb
scas
mov
test
imul
lahf
adc
test
lds
loope
pop
inc
dec
cmps
int3
mov
hlt
dec
outs
mov
inc
outs
dec
dec
jbe
mov
dec
sahf
sar
(bad)
xor
call
pop
out
mov
pop
pop
push
jmp
push
test
nop
test
movmskps
sub
nop
clc
call
sbb
xchg
loopne
or
fadd
daa
repz
add
call
cmp
cmps
(bad)
add
jle
dec
push
(bad)
pusha
div
pop
inc
sub
inc
mov
imul
add
mov
sub
loope
push
or
ins
pop
push
jmp
jo
out
pop
xchg
mov
or
ds
push
iret
clc
push
nop
push
mov
xor
or
scas
mov
inc
ds
and
fidivr
mov
mov
sub
fild
sub
into
sub
mov
sbb
cmps
push
jle
lea
push
push
lds
jecxz
cmp
cmc
push
mov
adc
fs
xchg
lods
cmp
cli
mov
inc
mov
adc
js
repz
(bad)
mov
add
les
inc
sbb
jl
sub
ins
jl
xor
dec
mov
xor
push
icebp
pusha
ss
dec
pop
out
shl
stc
add
xchg
mov
pop
jnp
js
scas
jge
inc
dec
add
jb
push
daa
add
call
dec
jo
in
jae
sub
push
out
pop
xchg
sti
mov
mov
xlat
dec
out
xlat
sbb
int3
or
and
lea
loope
mov
inc
cmp
cmp
test
call
mov
mov
out
ins
imul
daa
jp
sub
xchg
shr
mov
cmp
push
and
aaa
mov
cs
pop
jp
inc
sahf
xor
ins
jg
scas
shl
cmp
pusha
jae
xor
out
cs
cmp
call
jl
les
jno
mov
pusha
xlat
pop
adc
xchg
arpl
cmp
adc
xor
ret
shl
adc
js
sbb
add
pop
push
jmp
sbb
mov
vstmxcsr
inc
sbb
push
push
out
loop
jbe
js
inc
nop
jcxz
ss
jg
jmp
jb
cmc
pop
push
repz
jne
sahf
pop
mov
push
mov
jp
fldenv
js
add
into
pop
enter
sub
ds
mov
or
scas
popf
jmp
dec
add
ins
inc
pop
pop
inc
ja
mov
lds
lods
jns
mov
iret
push
and
aas
loope
xlat
cmp
mov
adc
pop
jg
lods
int
and
sti
lods
fisubr
mov
ins
daa
(bad)
mov
mov
call
fld
and
mov
shr
ss
in
mov
call
xor
clc
mov
jmp
pop
push
or
push
sub
lahf
mov
out
dec
pushf
ja
jne
fild
push
cli
inc
mov
mov
pop
pmuludq
mov
(bad)
mov
jl
mov
cli
outs
call
(bad)
repz
sub
or
mov
mov
jg
js
or
test
or
lods
bound
adc
xor
cwde
ret
jnp
pop
jns
jle
dec
mov
and
in
out
lahf
pop
jns
adc
pop
adc
pop
aaa
into
in
nop
pushw
mov
ds
inc
pop
ficom
jns
mov
pop
sbb
adc
leave
and
push
(bad)
in
push
mov
pop
faddp
add
adc
outs
lods
or
xor
test
mov
pop
inc
jmp
cld
lahf
jle
sti
ret
mov
mov
mov
mov
scas
loopne
sbb
in
fstp
cs
stos
clc
(bad)
mov
int
or
pop
ret
and
jmp
xchg
shl
xchg
pusha
out
cwde
add
jns
push
cmc
iret
sbb
vpunpcklqdq
nop
pop
add
push
in
push
pop
dec
movs
cmp
xchg
mov
adc
xchg
pop
mov
jbe
scas
mov
sub
xchg
ss
push
lods
mov
fcomp
mov
xchg
mov
push
arpl
sbb
fstp
mov
cmp
mov
jmp
mov
stos
rol
enter
out
add
cmp
repz
push
and
cli
aaa
out
jns
adc
fwait
bound
cmps
mov
mov
call
aaa
(bad)
mov
jns
enter
clc
sub
into
out
jle
sub
cmovns
pushf
jnp
in
mov
xchg
fwait
leave
(bad)
push
jl
dec
xchg
push
mov
addr16
pushf
or
aam
(bad)
jp
fidivr
cwde
scas
call
icebp
gs
mov
in
pop
mov
arpl
sbb
or
fnstsw
ss
and
es
xor
mov
repz
sar
and
mov
pusha
fs
and
jbe
and
push
and
jnp
cmp
in
adc
sub
imul
mov
in
pop
stos
push
push
in
je
clc
sti
call
test
jp
or
jae
add
fwait
mov
fdiv
cmp
inc
retf
pop
xor
sub
(bad)
cwde
fcomp
dec
jnp
inc
out
cmps
cmp
push
daa
cdq
cli
xchg
and
jg
inc
add
add
adc
xlat
and
lods
pop
xlat
dec
dec
popa
jmp
daa
cmp
psllq
nop
fisttp
imul
sbb
inc
mov
mov
mov
cmps
cs
or
jne
cmp
sbb
aaa
inc
pop
test
ret
shl
push
fwait
sti
loop
int3
int3
shl
fld
mov
pop
dec
pop
and
add
jmp
or
clc
add
pop
adc
jl
stos
cwde
in
hlt
or
add
out
lds
jge
and
cmps
xor
adc
ret
push
mov
in
pop
bound
pusha
es
and
adc
pushf
or
hlt
mov
(bad)
cdq
bound
sbb
add
imul
sbb
sbb
ror
imul
lods
popa
cli
popa
sbb
imul
imul
(bad)
sar
mov
dec
inc
scas
in
sub
pop
pop
mul
jp
sbb
lea
cmps
fld
jge
test
mov
in
and
sbb
cli
fstp
push
add
cli
mov
mov
cmp
jecxz
mov
dec
pusha
or
or
xchg
mov
add
fstp
jmp
mov
mov
add
ins
add
or
xchg
ins
dec
mov
dec
aaa
xor
ins
iret
rcl
int3
jmp
push
mov
adc
sub
pop
clc
add
xor
ss
ins
or
test
inc
adc
sbb
movs
cld
cmp
nop
jb
fwait
xor
or
lea
adc
es
mov
test
dec
sbb
mov
jl
mov
cld
cmp
cli
popa
repnz
push
dec
cmp
or
mov
fisttp
jmp
inc
jp
xlat
pop
pop
test
div
(bad)
push
pop
int3
cdq
sti
jp
xor
dec
and
dec
mov
push
aaa
and
fdiv
imul
imul
cmps
test
adc
aaa
in
mov
inc
cmp
repnz
movs
popf
mov
sub
or
pop
pop
push
sbb
in
adc
cmps
js
dec
mov
jno
dec
or
mov
rcr
mov
sub
shl
cld
mov
stos
dec
int3
jno
add
(bad)
mov
sub
xor
hlt
leave
jge
bound
pop
aaa
add
(bad)
lahf
clc
cmps
cmp
ss
(bad)
movs
inc
pusha
lock
adc
mov
and
cdq
or
jbe
cli
cmp
adc
jbe
test
mov
xchg
aas
push
mov
ja
pop
and
in
or
es
dec
adc
in
sub
call
mov
pushf
xchg
loopne
or
jns
dec
shr
jle
pop
ret
iret
pushf
ja
inc
loope
cwde
sub
mov
or
or
jp
sbb
inc
or
xlat
mov
cmps
stos
lea
push
inc
out
and
mov
and
cmp
jae
cmp
lock
test
add
es
mov
out
xchg
jns
add
ret
sahf
jo
hlt
popf
dec
cli
call
lahf
into
sub
mov
mov
mov
movs
jecxz
loope
into
js
cmc
mov
loope
or
xchg
mov
or
loope
add
outs
xchg
or
push
scas
jmp
inc
jmp
out
hlt
push
inc
nop
jl
gs
pop
xor
add
push
test
push
test
jmp
jecxz
dec
test
fldenv
adc
call
xacquire
jmp
fnsave
ins
mov
movs
retf
or
mov
adc
es
in
clc
mov
gs
dec
test
sbb
and
and
retf
mov
scas
fist
dec
fbstp
cmp
call
push
(bad)
adc
iret
fidiv
shl
or
stc
ret
lods
repnz
jge
nop
repz
cmp
in
test
loope
jmp
xchg
mov
mov
call
lods
cli
pop
jns
ret
repz
mov
gs
std
js
sbb
inc
cli
xor
sahf
mov
xchg
add
std
push
fwait
cmp
pop
(bad)
fbstp
xor
xchg
fcom
jle
sbb
psubsw
sbb
mov
add
cwde
das
xor
dec
in
out
jne
adc
mov
out
and
sbb
inc
cmp
test
out
mov
js
pusha
rcr
push
push
mov
push
arpl
cmp
imul
outs
inc
sar
adc
mov
push
out
mov
xor
add
repz
fmul
xor
sbb
pop
adc
call
(bad)
aad
xor
sbb
jno
push
xchg
sbb
sub
or
dec
or
jnp
(bad)
ins
test
mov
dec
push
ins
test
fidiv
cmp
addr16
movs
add
sbb
imul
push
js
not
mov
pop
faddp
movs
(bad)
(bad)
mov
xchg
sbb
loopne
mov
fs
jbe
or
cli
jl
jns
into
pusha
js
or
data16
mov
or
repz
mov
mov
mov
inc
int3
ins
or
imul
mov
call
xor
and
jp
cli
jns
dec
and
sbb
test
out
retf
scas
aad
jle
mov
mov
xchg
sub
push
jle
xor
xchg
lods
or
lock
mov
sbb
push
mov
adc
push
cmp
xor
rcr
inc
jle
movs
int
int
xchg
int3
add
sti
and
adc
xor
sbb
(bad)
inc
xor
jecxz
jo
mov
sub
stos
in
call
adc
add
inc
mov
test
cli
test
xchg
(bad)
jo
inc
adc
xchg
out
call
dec
fwait
inc
rcl
dec
ret
xor
sbb
mov
stos
stos
jno
test
sahf
cmp
test
out
repnz
sti
xor
fiadd
mov
ret
pushf
(bad)
outs
dec
dec
cmp
mov
mov
push
stos
push
mov
sar
mov
not
mov
adc
add
repnz
into
pop
and
push
ficom
xchg
nop
jae
sub
pop
mov
xor
jne
les
adc
inc
xchg
cmp
call
inc
outs
jl
jnp
cwde
mov
or
mov
das
inc
pushf
sahf
xchg
es
aad
js
cmp
jg
aaa
dec
ror
aaa
sbb
in
into
jno
jne
inc
ja
xchg
inc
xor
icebp
inc
mov
jae
mov
cli
fist
dec
int3
repnz
cmc
iret
cld
push
mov
sbb
push
js
dec
arpl
mov
sar
xor
pslld
ins
xchg
data16
add
add
mov
mov
pop
mov
repnz
outs
add
push
out
stos
(bad)
in
ins
pop
fst
mov
mov
shr
mov
fwait
inc
pop
lods
mov
mov
aas
fs
adc
xchg
sar
dec
pop
outs
(bad)
push
xchg
les
addr16
add
xor
scas
nop
clc
ret
mov
push
pop
aas
mov
loopne
dec
or
xor
jae
sub
repz
(bad)
mov
jp
ror
nop
sbb
cmps
sbb
fcmovnu
inc
hlt
pushf
sub
pop
dec
retf
mov
push
std
and
sahf
in
or
sub
std
adc
jg
adc
xor
pop
push
jp
stos
fidivr
(bad)
dec
test
rcl
mov
inc
jae
in
xchg
sahf
jne
out
stc
sub
ss
push
je
mov
push
pop
sbb
arpl
mov
(bad)
push
dec
inc
repz
in
ficom
aas
jmp
(bad)
mov
and
shl
inc
lds
shl
inc
lods
mov
cli
pop
or
sub
stc
fs
jnp
stc
or
sbb
adc
cdq
mov
js
pop
loopne
test
cmps
sub
loopne
mov
xchg
repnz
mov
mov
into
sub
lods
lea
ret
push
outs
adc
dec
xchg
lock
mov
fwait
adc
stos
sub
arpl
fmul
push
and
mov
arpl
and
mov
push
mov
xchg
outs
ja
outs
and
ss
mov
(bad)
xor
xor
mov
xchg
cmps
ss
das
(bad)
fwait
retf
mov
fs
push
jno
sbb
xor
fs
or
dec
test
adc
sbb
mov
adc
dec
icebp
cs
stos
outs
lods
sub
xor
and
xor
or
mov
dec
loop
repnz
mov
jb
cli
fidivr
retf
sub
pop
jns
in
lahf
out
add
bound
fidiv
xchg
lahf
pop
(bad)
(bad)
shl
mov
mov
push
lods
test
mov
js
add
not
js
push
popf
inc
iret
xor
aam
jl
cmp
push
cmc
cmp
mov
ds
add
fsubr
sub
data16
mov
sbb
dec
adc
xchg
cmp
xor
not
jnp
repnz
pop
mov
adc
push
pop
or
jb
cmp
pop
ds
push
scas
movs
lods
scas
fild
das
add
sbb
retf
pop
inc
out
push
popf
jb
mov
cmp
mov
ins
ja
push
repz
das
push
(bad)
jno
addr16
and
pop
add
push
jmp
cmp
(bad)
cld
xor
add
retf
mov
sbb
bound
mov
lds
out
jle
push
push
cdq
lods
xchg
push
test
jmp
jnp
aaa
jmp
loop
jecxz
iret
test
sub
push
jne
pop
or
and
out
push
cli
(bad)
xor
hlt
in
sti
mov
popf
dec
out
aam
xor
enter
sbb
push
enter
sub
inc
or
rol
add
retf
push
out
aas
stc
pop
call
sbb
loop
and
add
mov
push
adc
inc
dec
ins
add
addr16
inc
rcl
loop
lds
outs
dec
jb
mov
icebp
mov
xor
aad
aam
popa
das
dec
xchg
dec
adc
dec
xchg
cmp
retf
es
loopne
xor
cmp
pusha
fdivr
in
neg
jb
adc
ds
xchg
or
mov
adc
out
sbb
xchg
cmc
scas
push
push
pop
mov
scas
mov
push
push
cld
bound
shl
push
enter
jl
mov
xor
mov
adc
adc
ret
sub
repz
div
mov
out
fistp
fwait
ret
(bad)
adc
inc
jge
das
stos
in
scas
movs
mov
pop
(bad)
xchg
lock
arpl
movs
daa
xchg
jmp
mov
jno
lds
xchg
cwde
stos
sbb
popf
dec
mov
and
aas
pop
fst
sub
xchg
mov
scas
(bad)
repnz
mov
inc
inc
jbe
xlat
idiv
sub
adc
leave
stos
jnp
xchg
sub
iret
xor
jns
popf
or
(bad)
and
daa
mov
in
mov
pop
stos
add
icebp
cmp
inc
pop
icebp
jmp
es
push
retf
or
lea
sub
jle
pop
in
test
and
aam
lds
aad
pusha
mov
inc
enter
add
mov
bound
gs
jb
in
sub
adc
jae
xor
hlt
daa
sub
push
xchg
and
or
jbe
dec
sub
push
nop
inc
stos
pop
data16
movs
dec
popa
rcl
stos
test
daa
jg
test
xchg
imul
dec
dec
repnz
or
retf
ror
push
inc
fisttp
mov
and
add
test
(bad)
jae
enter
add
cmp
aad
pusha
sbb
xchg
fdivr
test
cmp
rcr
cmc
push
imul
adc
repz
xchg
push
mov
cwde
push
sahf
scas
jle
div
mov
(bad)
(bad)
push
cwde
cdq
add
outs
lods
jnp
fcmove
loop
xchg
sbb
xor
repnz
stc
int
add
sbb
mov
test
ins
sar
lahf
mov
dec
(bad)
cmp
cmc
cmp
sbb
adc
jp
sub
out
stos
fmul
lock
in
stc
add
mov
int3
inc
pop
jae
xchg
jns
jmp
ret
and
mov
mov
add
sbb
shr
mov
pop
clc
lahf
dec
jmp
out
add
push
inc
push
xor
cmp
xchg
mov
les
dec
jge
out
cwde
adc
cs
add
inc
in
rcl
sbb
mov
js
sub
push
enter
je
dec
lds
xor
into
or
xchg
ja
dec
jb
add
sub
or
mov
fild
in
div
jp
(bad)
rcr
jns
adc
in
sub
bound
nop
test
ret
and
add
ror
mov
shr
shl
add
sub
sbb
daa
rcr
inc
adc
xchg
adc
mov
sub
and
push
(bad)
outs
cmp
pop
bound
bnd
jnp
xchg
push
pop
add
popf
jle
jg
jle
sbb
and
call
inc
test
outs
test
cmp
push
sbb
ins
sti
or
pop
jp
clc
(bad)
xchg
sbb
outs
fstp
inc
sbb
je
push
xchg
dec
adc
nop
cmc
dec
jae
out
in
cli
mov
call
dec
mov
adc
inc
mov
lods
dec
clc
dec
ja
jae
pop
sbb
int
(bad)
fsubr
mov
es
mov
js
sti
inc
imul
dec
or
push
fwait
add
dec
dec
neg
(bad)
mov
fcmovnbe
sub
add
neg
ss
push
aas
sahf
inc
ret
or
(bad)
out
push
movs
pop
push
pop
daa
adc
sub
dec
arpl
std
add
mov
sbb
cmp
dec
shr
push
jp
cmc
(bad)
out
pop
inc
push
rcl
jle
loop
mov
cld
adc
ror
cmp
cmp
into
jmp
mov
fstp
xchg
enter
adc
or
shl
fwait
push
push
sub
ds
dec
cmp
or
mov
pop
std
or
xor
pop
inc
arpl
neg
scas
pop
jne
cdq
dec
mov
in
cmp
aam
push
je
adc
xchg
cli
mov
jmp
dec
dec
scas
xchg
call
xchg
xchg
sub
pop
inc
bound
pop
inc
hlt
loop
in
sub
(bad)
adc
mov
xor
aas
ins
inc
fidivr
inc
in
add
(bad)
jae
repz
fs
(bad)
cmp
mov
xor
ja
sub
jbe
sbb
pushf
or
ret
mov
adc
imul
add
lock
cmp
sbb
sti
jg
repnz
fsub
shl
lock
in
ins
or
(bad)
adc
repnz
adc
in
in
xchg
sbb
xchg
dec
scas
jmp
mov
std
pop
sub
push
inc
inc
out
xchg
in
sbb
jmp
push
fisubr
push
dec
(bad)
mov
pop
out
mov
xor
out
mov
aam
jnp
(bad)
call
sub
dec
jl
adc
inc
push
xchg
aaa
xor
bound
imul
jmp
sub
xor
imul
imul
mov
mov
add
sub
scas
les
mov
fwait
je
daa
shl
div
mov
jo
sub
cli
push
repnz
iret
fcomip
test
imul
lds
inc
or
test
add
dec
mov
cmp
cmc
xor
out
cmp
sbb
(bad)
ds
or
mov
out
push
mov
loopne
jg
lds
fld
sbb
pop
push
inc
jb
pusha
cwde
bound
pop
mov
cs
push
push
call
sub
mov
xchg
mov
jmp
pop
mov
sbb
inc
or
mov
xor
shl
sub
jo
verw
jp
scas
rol
cdq
add
xchg
movs
xor
mov
ret
mov
adc
stos
mov
pop
cmp
pop
fwait
addr16
sahf
dec
pop
xor
fs
mov
or
sbb
pop
jmp
test
pushaw
cmovl
push
ret
nop
fist
inc
mov
cld
or
xor
stc
jmp
mov
jbe
and
mov
test
or
clc
inc
ret
mov
lds
push
loop
test
push
xchg
dec
pcmpeqd
icebp
mov
push
or
cmps
test
pop
pop
das
ss
adc
iret
pusha
cmp
mov
xchg
adc
fs
push
add
dec
mov
xor
popa
adc
fwait
aaa
xchg
fld
ret
vpextrw
and
xchg
into
frstor
or
jmp
or
fcomp
out
ins
xlat
push
ret
outs
imul
test
push
adc
push
lock
dec
mov
and
push
or
mov
dec
xor
mov
jecxz
fild
sub
adc
jae
mov
loope
xlat
out
push
mov
push
out
into
popa
mov
ds
ins
test
call
rcr
pop
mov
cmp
pop
mov
out
call
(bad)
dec
outs
sbb
call
pushf
mov
out
and
cwde
push
or
int
movs
inc
xlat
cdq
mov
lea
push
aad
ror
jecxz
movs
dec
sub
inc
ds
fstp
add
pop
pop
xor
in
cli
sbb
jno
test
cwde
cmc
out
xchg
add
pushf
out
nop
pushf
std
push
adc
gs
loopne
call
pushf
shl
repz
gs
inc
fild
push
mov
(bad)
push
fimul
dec
pxor
xchg
test
pop
mov
or
mov
mov
enter
imul
ret
ins
lock
mov
pusha
xchg
out
adc
idiv
fcmovnu
inc
lahf
xchg
and
cmps
daa
pop
not
jb
in
mov
scas
cmp
fild
(bad)
sub
fchs
fidiv
jb
fcomp
call
jle
stc
push
int3
and
jge
repz
jg
sbb
in
jnp
cmps
arpl
aas
addr16
ins
cld
mov
xor
sub
cs
out
cmc
cdq
enter
mov
cmc
mov
pop
lock
test
loope
int
aas
pop
inc
jge
mov
stos
aaa
fwait
loopne
(bad)
fstp
pop
push
in
outs
enter
lods
mov
inc
or
ficomp
std
or
clc
xor
inc
cmps
fisub
xor
xchg
adc
xchg
adc
sub
nop
mov
fnsave
ins
push
lds
leave
mov
loopne
js
pop
bound
xchg
stos
dec
aas
xchg
mov
sub
inc
dec
xor
mov
(bad)
jecxz
shr
adc
mov
cmps
push
loopne
shl
push
out
loop
push
mov
je
fiadd
ins
ret
in
adc
push
adc
addr16
gs
inc
push
xchg
mov
cwde
int3
inc
cmps
sbb
mov
xor
add
jmp
mov
add
ss
pop
mov
out
ds
mov
stos
xchg
rcl
sbb
and
movs
pop
and
syscall
mov
enter
ds
xor
and
jmp
cmp
dec
retf
mov
in
or
dec
cmp
mov
push
cli
cmp
jnp
push
fldenv
(bad)
mov
pop
mov
mov
js
stos
aaa
mov
mov
push
xor
dec
aad
add
fcomp
sub
pop
(bad)
sar
jl
(bad)
fmul
inc
in
sbb
adc
xlat
cmp
sar
push
ror
inc
add
retf
cmp
dec
fs
sbb
or
push
dec
enter
jns
jne
add
cmp
pushf
jb
mov
es
call
int3
push
call
xchg
std
idiv
push
cmp
(bad)
jmp
add
fsubp
push
leave
jmp
jmp
cmp
push
fdiv
daa
sahf
adc
adc
(bad)
daa
loopne
add
pop
xchg
inc
(bad)
stc
cld
sub
inc
xchg
data16
cmp
mov
gs
retf
jl
jmp
inc
lods
adc
inc
inc
inc
ret
dec
repz
push
test
add
xchg
test
adc
dec
adc
lods
test
out
mov
rcr
cmp
jmp
fmul
mov
inc
nop
pop
mov
xor
jb
fxch
mov
add
and
push
pop
jecxz
push
mov
jne
adc
or
sbb
retf
cmp
push
pop
and
dec
stos
fdiv
sub
pop
and
lods
dec
and
stos
iret
nop
(bad)
scas
xchg
repnz
xor
sub
stos
jg
aad
out
pop
dec
sbb
add
jmp
mov
mov
dec
sti
aad
jbe
test
or
add
data16
mov
xor
das
stos
xor
(bad)
popa
mov
nop
pop
daa
arpl
pop
inc
mov
jo
scas
pop
adc
mov
xchg
mov
jb
cmps
inc
cmps
xor
xchg
add
ror
daa
and
popf
xor
(bad)
jmp
jae
inc
repnz
or
pop
and
sbb
push
jle
sub
ror
scas
stos
push
in
in
xchg
jne
push
in
mov
xor
dec
nop
outs
imul
pop
dec
lea
jmp
mov
dec
sub
sbb
lahf
pop
jmp
fcom
or
(bad)
adc
or
and
push
jmp
clc
(bad)
fimul
popa
adc
(bad)
push
sub
loop
pop
dec
mov
jne
(bad)
and
jle
into
(bad)
(bad)
or
fstp
sbb
in
call
shl
outs
fistp
icebp
push
adc
popa
and
movs
mov
mov
(bad)
mov
nop
jo
cmp
dec
bound
mov
(bad)
fstp
xor
add
fdiv
test
repnz
jg
sbb
xor
push
ss
cs
popa
jge
or
mov
fisub
mov
out
xchg
shr
mov
test
pop
sbb
dec
mov
xchg
retf
adc
out
cmp
and
jecxz
mov
dec
add
ror
ins
cmp
lea
or
daa
pop
in
ficomp
lea
push
mov
mov
mov
sub
call
test
xor
xor
mov
bound
jmp
test
or
setl
mov
mov
mov
dec
jle
imul
jnp
adc
ss
adc
mov
xor
repz
popf
sar
jne
xchg
cld
dec
int3
int3
mov
ins
das
inc
dec
mov
push
pop
dec
sub
arpl
call
add
sub
xor
mov
push
out
out
inc
lea
jno
push
mov
shl
outs
xor
(bad)
rcr
adc
inc
movs
rcl
sub
jg
mov
sub
push
xor
sbb
cli
ficomp
push
push
jmp
fldlg2
xchg
pop
fwait
cdq
pop
out
xchg
ss
in
aas
sahf
pop
jecxz
adc
sub
jg
mov
adc
mov
call
in
idiv
mov
pop
ror
hlt
jl
add
mov
sub
jle
inc
push
ss
xchg
jae
aam
pop
(bad)
pop
xor
xchg
stos
xor
and
nop
xchg
add
sbb
sub
ins
aaa
sub
xchg
ins
movs
aam
and
ins
xchg
jo
cdq
push
cmp
loope
or
jge
dec
daa
ret
rcr
jo
push
push
imul
aad
cmps
repnz
cli
jne
jp
mov
out
scas
xor
jle
cmp
xchg
pop
mov
fs
inc
mov
add
bound
(bad)
scas
sbb
jge
ins
lock
and
mov
std
std
mov
fnstcw
jecxz
add
cmp
mov
xchg
mov
add
in
xor
or
nop
jge
ds
xlat
or
arpl
test
sub
push
mov
jp
xor
int
shl
ficomp
mov
popa
xor
mov
push
or
gs
adc
mov
shr
sub
lods
imul
mov
(bad)
lea
mov
pop
jnp
or
fbld
cmp
xchg
pop
or
or
add
push
xor
or
js
je
int3
add
push
or
xchg
out
popf
mov
xlat
loop
(bad)
cli
mov
outs
pop
pushf
pop
mov
mov
push
mov
enter
test
leave
mov
int3
sub
idiv
in
mov
pop
loop
stc
jl
add
inc
in
cmps
jp
inc
add
lea
out
clc
jmp
inc
mov
call
js
bound
pop
in
sub
sar
mov
push
repnz
les
cdq
dec
rcr
push
jmp
pop
xor
dec
es
lock
iret
ins
dec
cmps
pop
div
inc
xor
push
jecxz
cmp
repz
add
jns
in
dec
inc
sar
imul
fld
test
push
mov
pushf
movs
aam
(bad)
pusha
(bad)
xchg
std
mov
mov
div
test
fimul
push
cs
pop
inc
and
pop
mov
xlat
sub
xchg
jns
loop
out
(bad)
push
mov
iret
test
jmp
loope
sbb
pop
cmp
in
mov
jle
jecxz
pop
xchg
pop
icebp
in
add
sbb
mov
arpl
dec
or
cmp
jle
(bad)
je
bound
sub
sbb
inc
sti
loopne
imul
das
pop
mov
and
test
pop
bound
or
xor
push
and
adc
xor
fstp
adc
inc
iret
shl
in
mov
mov
sahf
jne
cmp
xchg
retf
push
adc
mov
xchg
nop
int
jbe
dec
mov
popa
and
xchg
fst
cmps
xchg
sbb
mov
test
shr
nop
imul
fdiv
cmps
and
dec
and
out
test
ror
mov
mov
adc
jns
fldcw
movs
test
imul
adc
mov
pop
arpl
lods
scas
mov
mov
(bad)
rcl
lea
imul
sbb
(bad)
sar
imul
test
jmp
xchg
dec
and
dec
shr
ins
(bad)
xchg
call
pop
mov
add
test
mov
push
les
and
call
jmp
das
jnp
iret
adc
out
xor
jns
cli
jmp
clc
mov
stos
sbb
shr
xchg
push
retf
dec
fbstp
and
adc
xor
or
jmp
pop
jno
or
movs
sub
jb
cmp
lea
lods
cs
inc
(bad)
cli
mov
jp
popa
pop
loop
xchg
shr
loopne
(bad)
std
ret
dec
and
sub
fwait
arpl
loopne
sub
sahf
movs
push
cmp
xchg
sub
test
(bad)
rcr
or
mov
test
ins
faddp
pop
retf
jmp
jb
inc
fcomp
jo
in
dec
in
and
mov
std
mov
dec
in
jo
mov
shl
dec
(bad)
xlat
into
push
int3
inc
jb
push
cmps
xchg
inc
pop
movd
cmp
scas
push
xchg
jae
pop
mov
clc
ja
sti
enter
xchg
adc
dec
push
adc
aad
and
cli
xor
fmul
add
js
dec
fxtract
fnstcw
adc
dec
xchg
lods
pop
cmc
push
add
sti
cmp
cmps
add
das
cmp
jae
push
cmps
jle
jmp
fcomp
cmps
fstp
push
cdq
push
fild
mov
pushf
int3
pop
xchg
push
jb
sbb
mov
mov
or
mov
popa
ss
mov
es
adc
mov
xor
fsubr
pop
hlt
xchg
mov
pushf
out
pop
rol
xchg
lds
push
adc
out
ja
jle
call
add
jnp
push
lahf
cmps
cmp
cmp
pushf
scas
ret
hlt
jl
in
ret
dec
and
mov
inc
loop
dec
xchg
dec
jae
nop
inc
out
add
xchg
sub
or
pop
xchg
sub
fiadd
movs
or
xchg
cmp
in
fs
xor
dec
adc
push
jo
or
sub
inc
cmp
cs
imul
sub
lods
xchg
jae
(bad)
and
pop
sub
and
imul
or
mov
xor
sahf
sbb
pop
inc
xchg
imul
sahf
ficomp
lods
xor
xchg
mov
push
add
sbb
mov
(bad)
xor
adc
cwde
fnstenv
in
imul
cmp
mov
clc
icebp
xor
pushf
scas
mov
jecxz
aam
enter
dec
xor
jge
add
mov
inc
xor
mov
jmp
test
jp
sti
arpl
xor
push
mov
jne
xchg
cmp
mov
mov
out
test
cmc
xchg
mov
lahf
popa
rol
mov
pusha
cmp
leave
gs
push
mov
cmc
rcl
and
mov
(bad)
iret
mov
push
pop
push
inc
in
in
popa
mov
add
mov
inc
dec
sbb
test
repz
test
cmp
icebp
inc
sub
scas
adc
adc
je
fsubp
pop
sar
mov
cmps
loope
push
fadd
cmp
or
adc
push
pushf
into
stos
or
xchg
test
(bad)
nop
adc
mov
fst
movs
lock
sbb
outs
outs
sahf
dec
cmp
movs
mov
iret
cld
xchg
pop
adc
std
pop
mov
mov
jb
movs
xor
out
add
in
mov
jle
(bad)
popa
lods
or
ret
loope
add
aad
xchg
sub
shl
mov
js
adc
push
and
rol
ror
jno
and
or
mov
jmp
int3
mov
jp
jl
test
pop
pusha
xor
sbb
out
retf
pusha
scas
(bad)
es
ret
mov
sub
jl
inc
rcl
xor
loope
pusha
jl
push
mov
push
and
xor
sub
pop
cmps
ins
test
and
cdq
movs
inc
or
mov
fwait
pusha
sub
(bad)
inc
sub
mov
mov
and
test
call
sbb
(bad)
sbb
jo
xor
lock
iret
rcl
fiadd
in
loope
imul
dec
sub
cmps
std
shr
xor
jb
and
retf
or
and
mov
(bad)
cli
sbb
jno
push
in
les
das
clc
mov
and
mov
mov
imul
pop
lock
jge
mov
dec
int
push
cdq
popa
jge
std
mov
pop
stos
ret
loope
test
mov
test
inc
lock
push
outs
mov
adc
cmc
xchg
outs
add
dec
pop
aam
int
xchg
dec
fcomi
mov
cmps
sti
and
xor
and
addr16
sub
push
push
cmps
imul
inc
ss
add
cmp
mov
jns
dec
hlt
fistp
pop
mov
bound
(bad)
mov
mov
add
pmulhuw
add
lds
xlat
sahf
jl
outs
pop
push
adc
pusha
cmp
mov
hlt
sub
xchg
add
adc
push
dec
inc
xor
repnz
fmul
(bad)
(bad)
popf
retf
dec
das
add
add
sbb
mov
add
mov
cmps
inc
sbb
aas
movs
pop
sub
mov
gs
scas
test
add
aaa
jbe
xchg
int3
inc
mov
sbb
jg
mov
xor
dec
out
adc
sbb
loopne
dec
out
add
dec
mov
pop
and
jl
aam
and
sbb
mov
push
jl
adc
addr16
jmp
dec
jne
loope
ja
pop
adc
pop
mov
addr16
bound
push
sbb
xchg
mov
mov
push
ins
out
rcl
shl
aaa
jg
xchg
shl
mov
dec
pop
dec
test
mov
(bad)
into
js
fsub
call
and
imul
into
das
adc
adc
in
shl
sub
xchg
scas
sti
repz
scas
and
aad
lea
jno
mov
test
aaa
and
ds
sbb
popf
bound
sub
xchg
dec
fstp
xor
cmp
shl
fimul
jp
imul
adc
aam
ins
xchg
jbe
mov
out
fbld
pop
push
test
mov
std
in
jne
(bad)
hlt
mov
movs
and
stc
add
pop
or
stos
test
in
in
outs
mov
xchg
movs
test
daa
iret
push
outs
mov
idiv
add
mov
retf
add
lods
and
inc
rcr
imul
adc
xchg
es
neg
(bad)
imul
daa
inc
test
or
pop
xlat
inc
out
jle
shl
(bad)
sub
ds
out
pop
and
fucomip
stos
sbb
cmc
popa
or
in
adc
jmp
ud0
scas
cwde
(bad)
sub
test
mov
sbb
xchg
cdq
in
dec
jae
sub
ss
fs
mov
mov
jle
jnp
dec
cmc
in
stc
sbb
xchg
or
jp
xor
icebp
pop
in
je
test
cmp
jno
cmp
outs
pop
(bad)
f2xm1
mov
push
xchg
nop
adc
add
push
mov
jle
mov
mov
and
ja
xor
push
ds
fstp
jnp
int3
mov
mov
mov
enter
dec
fwait
js
hlt
outs
mov
cmp
cmps
aad
adc
jmp
(bad)
rcl
mov
cwde
int3
cmp
pop
mov
jne
cmp
mov
int3
add
inc
dec
int
mov
fwait
jns
aaa
add
xchg
mov
and
nop
pop
enter
pop
ret
mov
push
sbb
sbb
jecxz
add
fiadd
leave
test
cmps
or
xchg
rcl
fsub
call
enter
jmp
mov
iret
jmp
dec
xchg
push
push
les
lods
sub
cmps
inc
cs
in
pusha
dec
test
mov
xchg
into
and
lock
int3
retf
data16
sbb
inc
jmp
test
cmp
or
into
clc
aas
arpl
imul
aaa
mov
pop
pop
mov
fs
in
leave
cmp
push
mov
(bad)
sub
jne
jo
cld
xchg
or
pop
(bad)
sti
pop
call
addr16
xchg
retf
shl
lahf
ins
rol
imul
mov
xor
iret
aaa
mov
or
(bad)
pusha
sub
cmp
mov
test
dec
pusha
dec
jae
cmc
mov
mov
dec
push
btc
addr16
jne
lods
movs
xor
jmp
xor
inc
and
(bad)
in
aam
ret
sbb
loope
mov
into
test
adc
repz
sbb
in
ret
dec
and
(bad)
fisttp
and
and
adc
inc
adc
aam
js
or
pushf
mov
xchg
int
or
imul
mov
add
aaa
push
les
out
cmp
fsubr
loope
ins
jg
push
hlt
dec
push
cs
sbb
jmp
fsubr
mov
in
inc
cs
cdq
jmp
test
jp
fst
push
sub
stc
cdq
jae
xor
leave
test
jne
ss
xchg
in
mov
stos
rcl
xor
pop
pop
cmp
outs
rol
sbb
xor
and
sbb
iret
aaa
scas
mov
xchg
call
popf
sub
(bad)
(bad)
mov
adc
outs
sbb
arpl
push
pop
retw
je
idiv
and
cwde
lods
mov
jmp
fld
add
xor
repnz
xchg
call
dec
mov
pop
xchg
lods
call
inc
adc
pop
mov
data16
outs
or
or
int
fsubr
dec
xchg
sahf
aam
cmp
push
push
stc
(bad)
mov
cs
dec
(bad)
ficom
or
and
mov
pop
popf
popa
jle
and
lock
repnz
cmps
or
les
xchg
das
xor
mov
push
fwait
mov
sub
fsub
hlt
cmp
pop
nop
jb
test
addr16
xchg
jmp
inc
icebp
pop
(bad)
fs
je
cdq
xor
cli
ds
mov
loopne
inc
ins
call
in
test
ja
mov
adc
and
inc
jecxz
push
xor
xchg
aam
ret
push
add
loopne
inc
lock
mov
cmp
push
xor
fcom
jbe
adc
call
push
mov
test
xor
pop
test
sub
scas
imul
(bad)
out
ficomp
jl
mov
mov
pushf
outs
(bad)
int
std
aaa
jns
popf
sbb
jge
pop
push
fbld
xchg
jno
cmc
jae
pop
and
les
sub
pop
cmp
add
pop
std
jg
in
enter
cmp
cmp
inc
xlat
xor
mov
fsub
xchg
adc
leave
sbb
sbb
(bad)
lea
mov
adc
xchg
mov
cld
hlt
or
mov
jl
sub
jg
add
leave
shl
dec
jae
dec
push
clc
jns
nop
lds
addr16
jge
mov
les
int3
lods
loop
sar
pushf
add
fiadd
movs
pop
movs
xor
es
int
mov
sub
lea
icebp
xchg
dec
and
xchg
add
xlat
(bad)
aaa
add
cld
dec
ret
cmp
inc
mul
psubd
fwait
in
dec
inc
fsubr
or
or
scas
sub
pop
loope
sub
fsubr
inc
dec
inc
loopne
sub
sub
pop
pop
int
and
or
or
push
mov
call
jmp
xchg
cdq
out
xchg
push
sbb
jle
xchg
mov
cdq
adc
into
aam
push
fwait
dec
jl
push
xchg
retf
(bad)
sub
stos
jbe
loopne
add
cmp
adc
mov
call
add
sbb
hlt
iret
ror
jg
lea
popf
cdq
mov
lds
inc
jg
sbb
lea
ror
jp
mov
fstp
and
ins
movs
shl
add
in
xor
shl
and
or
adc
xor
mov
jnp
cmps
cmp
mov
cmp
dec
adc
cs
scas
push
ins
xlat
and
popf
push
inc
outs
sub
push
sbb
or
cmp
test
iret
mov
arpl
push
inc
fucomip
push
xchg
scas
cmps
adc
test
jnp
or
mov
loop
cmps
clc
test
cli
cmps
loopne
cmp
outs
enter
fwait
addr16
movs
imul
ja
imul
out
or
mov
mov
pop
adc
push
scas
aas
xor
cmp
imul
adc
stos
pop
rol
mov
in
clc
mov
cmc
cli
xchg
push
sti
cld
cmps
icebp
ror
fistp
or
ds
pop
cs
fisttp
mov
adc
sub
int3
mul
mov
hlt
mov
push
xor
sub
jmp
out
cmp
(bad)
das
ja
mov
dec
mov
cdq
daa
push
and
push
mov
xor
dec
lahf
div
jns
(bad)
jle
mov
inc
retf
push
sbb
shr
rcl
sbb
pushf
hlt
mov
movs
fwait
xor
mov
loop
mov
push
outs
ffreep
repz
lock
scas
fsubrp
jle
jae
cmp
mov
pop
cmp
mov
cmp
mov
mov
sbb
mov
fld
shl
jne
call
inc
jg
mov
aam
sahf
leave
clc
retf
mov
lea
push
adc
aaa
ins
pop
ret
pop
mov
in
cmp
(bad)
fild
adc
test
pop
mov
pop
mov
jge
lock
stos
jg
sub
cwde
mov
sub
dec
outs
add
pop
or
push
arpl
mov
adc
push
mov
cli
gs
add
(bad)
mov
fcmovne
stos
stos
scas
or
sbb
call
imul
jnp
fiadd
sub
dec
push
scas
mov
inc
clc
pop
mov
cmc
pop
aas
stos
jb
fwait
int3
out
xor
std
lock
in
stos
(bad)
xor
inc
scas
call
stos
mov
mov
sbb
inc
push
add
jmp
sbb
dec
push
(bad)
out
or
or
call
out
or
mov
sbb
cmp
xchg
mov
or
add
push
mov
push
imul
jecxz
pusha
or
sete
mov
movs
ds
das
mov
imul
js
sub
and
cmps
inc
add
mov
aaa
mov
data16
jmp
add
es
xchg
neg
ret
mov
(bad)
in
mul
loope
cmc
js
and
push
mov
mov
mov
cmps
dec
(bad)
inc
inc
cwde
je
popf
push
mov
gs
dec
sbb
xchg
stos
dec
popf
shl
std
popa
rcr
adc
sub
or
push
aam
aam
mov
mov
out
test
mov
sub
neg
push
cmp
std
xlat
ret
pusha
adc
shr
lock
cvtpi2ps
jnp
mov
sbb
iret
lea
not
jmp
push
sbb
jae
and
fld
movs
lds
dec
das
push
ror
arpl
out
mov
push
and
data16
jl
push
push
dec
or
pop
push
test
xchg
cmp
(bad)
mov
scas
cmp
push
xor
aam
cld
sbb
(bad)
xchg
xlat
stc
mov
lods
fsubr
(bad)
jmp
fistp
xlat
mov
sub
add
in
sub
test
xchg
add
call
cmp
xchg
mov
and
sub
dec
sub
mov
xor
inc
ins
sar
iret
and
sbb
pop
inc
cmp
ds
push
int3
rcr
add
or
data16
fwait
in
or
and
add
mov
aad
adc
sbb
push
push
gs
adc
in
jmp
icebp
test
fdivp
cmps
mov
jge
std
push
aaa
adc
pop
(bad)
(bad)
test
xor
cmp
sbb
xchg
repnz
mov
fadd
ja
inc
icebp
inc
jmp
iret
and
sub
ins
not
sti
add
imul
or
sbb
pop
fwait
jmp
xchg
ins
fdivr
setbe
shl
retf
cmp
cmp
cmps
stos
lods
in
aaa
xchg
ret
test
loope
cwde
bswap
sti
addr16
jp
retf
retf
inc
out
or
clc
loop
ret
inc
cmp
fnstcw
or
mov
test
inc
cmovle
les
dec
js
das
mov
adc
cdq
fld
and
pop
pop
scas
int
dec
cmp
mov
cmps
and
mov
mov
pop
or
add
lahf
xor
rcr
push
int
scas
retf
outs
dec
pop
add
test
sub
pop
mov
cmp
into
add
xchg
mov
dec
fidivr
hlt
(bad)
xchg
retf
retf
sbb
and
jl
jne
xlat
mov
call
rcr
cmp
lods
pop
fnstenv
push
in
out
sbb
jne
push
mov
or
mov
rcl
xchg
inc
xchg
push
mov
adc
push
sbb
push
ffreep
jmp
out
inc
adc
push
cmp
sti
mov
mov
(bad)
inc
add
fwait
int
fst
ds
je
push
dec
enter
lods
jno
std
ins
sub
(bad)
outs
pop
or
enter
dec
and
out
cmp
xchg
or
cmc
mov
shr
add
xor
mov
call
shl
xor
cdq
lds
mov
inc
adc
push
mov
out
inc
hlt
dec
jns
inc
sbb
xchg
xor
jl
int
adc
stc
adc
ss
adc
mov
mov
mov
test
(bad)
cld
adc
mov
pushf
out
mov
push
fwait
push
test
sbb
push
xchg
inc
lea
test
les
icebp
pop
sub
inc
gs
jne
jmp
movs
add
fwait
arpl
sub
test
inc
mov
mov
mov
fnsave
mov
cld
inc
nop
add
xchg
fstp
pop
scas
cmp
xchg
mov
push
es
lahf
arpl
xchg
xchg
xlat
lahf
add
and
jmp
scas
arpl
aas
sub
and
jge
stos
xchg
leave
popf
cli
adc
xchg
xrelease
sub
loope
lahf
cmp
push
mov
adc
or
fisub
and
mov
add
add
push
dec
dec
jmp
xor
mov
(bad)
add
dec
sub
cmp
and
(bad)
retf
iret
push
out
jno
and
mov
cmp
or
jmp
test
xlat
mov
aaa
push
cdq
cmp
sar
(bad)
imul
fdiv
es
iret
js
xor
fcom
lea
shr
mov
scas
mov
shl
cmps
(bad)
adc
push
xchg
pop
push
fmul
into
xor
dec
inc
push
gs
(bad)
repz
ins
push
sbb
mov
mov
xor
aaa
ret
mov
fld
cmp
fsincos
sub
retf
mov
mov
dec
cmp
xchg
call
loop
(bad)
int3
gs
and
mov
test
jmp
sub
mov
scas
jns
movs
cmps
jp
pop
sub
out
mov
shl
aam
xchg
(bad)
cmp
outs
xor
push
xlat
jae
sbb
retf
sub
aad
or
scas
or
mov
xor
and
and
xor
mov
cmps
arpl
bound
xor
aad
aas
xchg
push
jbe
mov
mov
out
jmp
cld
mov
(bad)
cmp
dec
sub
out
push
mov
pop
outs
or
out
hlt
pop
sbb
push
inc
jbe
add
dec
push
adc
jmp
xor
test
idiv
dec
rcl
js
jg
mov
jo
inc
push
cmps
(bad)
(bad)
or
sbb
inc
sar
xchg
dec
mov
jne
or
(bad)
sbb
inc
inc
rcr
dec
in
ror
and
dec
inc
inc
inc
call
push
mov
mov
xlat
dec
push
mov
in
sub
ja
xor
lahf
pop
fs
mov
aaa
mov
cmp
in
arpl
dec
shl
das
push
aas
nop
lock
sub
add
dec
in
fadd
jo
js
inc
mov
cs
stc
xchg
mov
sbb
cmc
xor
push
int3
loopne
mov
imul
cmc
sub
jbe
mov
jb
cwde
sbb
aaa
pop
inc
(bad)
pop
(bad)
jg
jns
xchg
fcomip
aas
mov
adc
xor
scas
sub
mov
call
into
ret
jecxz
pop
lds
or
pop
push
cmp
sbb
ror
je
or
dec
adc
push
push
(bad)
push
and
xchg
mov
dec
test
and
add
inc
sub
pop
sub
rcl
(bad)
imul
pop
ret
mov
push
xor
sub
mov
jecxz
popa
or
mov
repnz
xchg
lods
add
shl
pop
sub
cmps
lds
iret
mov
scas
jge
(bad)
push
xor
push
loope
test
cli
inc
push
loopne
sub
sbb
int3
add
psraw
pop
jge
pop
mov
xchg
movs
leave
sti
(bad)
fisubr
and
dec
add
dec
test
scas
loopne
mov
pop
adc
movs
aam
xor
jmp
add
and
push
mov
add
inc
push
mov
jns
push
mov
fild
inc
fwait
add
stc
shl
push
mov
mov
pusha
xor
jg
sahf
push
(bad)
or
div
sti
lods
neg
mov
xchg
daa
pop
push
arpl
push
rol
lds
ins
add
pop
cmc
ret
leave
stos
push
add
hlt
sbb
dec
cmp
outs
pop
lods
sbb
adc
xchg
rol
cmp
cmp
js
xchg
pop
jmp
xor
push
ficomp
cmp
(bad)
pusha
std
cmps
stos
hlt
push
push
aam
add
(bad)
mov
mov
add
and
into
mov
or
push
(bad)
adc
neg
icebp
cmp
dec
lods
dec
jne
pop
dec
sbb
sub
bound
jmp
pop
jbe
xchg
dec
inc
repz
cli
and
pop
std
pop
push
in
pop
pop
hlt
mov
mov
cld
lods
lahf
jne
sar
fiadd
jns
aad
int
xchg
push
xchg
and
xchg
aad
lea
clc
jno
push
aad
jle
mov
fild
and
or
push
and
in
outs
and
jp
out
imul
icebp
inc
xor
jg
stos
jecxz
retf
enter
add
mov
icebp
jae
fcmovb
cmps
push
jae
dec
push
push
ds
dec
mov
sub
dec
ret
sub
jns
ins
lock
repnz
pop
jnp
xor
jne
out
mov
and
fst
ret
ins
xchg
repz
scas
xchg
mov
cld
xchg
sub
ret
retf
dec
xor
sub
mov
mov
sbb
cmp
inc
jp
ss
mov
dec
jg
loopne
dec
and
frstor
enter
adc
sti
pushf
adc
retf
pushf
sub
sbb
ror
popf
ficomp
aas
mov
pop
mov
scas
je
jl
jno
xor
add
xchg
(bad)
add
cmp
cdq
adc
mov
inc
mov
inc
sbb
pop
stos
jmp
sti
add
add
movs
fnstcw
test
xchg
dec
out
cmp
in
mov
adc
std
inc
dec
aam
xor
pop
sbb
mov
in
jle
mov
dec
or
jge
pop
adc
cmp
(bad)
aam
pusha
xor
inc
(bad)
or
add
(bad)
adc
(bad)
adc
ds
retf
mov
add
sbb
sub
addr16
sbb
outs
es
and
add
test
ss
pop
js
out
push
push
ret
push
int3
add
push
adc
add
push
adc
add
jg
xchg
dec
movs
test
mul
(bad)
mov
push
pop
scas
adc
mov
dec
inc
pop
cli
int
imul
pushf
scas
imul
stos
push
scas
xor
lahf
dec
fs
jbe
ins
add
scas
cmp
(bad)
pop
xchg
jb
mov
cmp
sub
(bad)
sbb
stc
mov
sbb
xchg
repnz
or
gs
adc
sahf
sub
inc
push
aam
pop
ins
mov
stos
and
aaa
fidiv
cmp
loopne
in
mov
loope
imul
mov
push
mov
sub
mov
(bad)
cld
push
cmp
ds
mov
loope
and
std
push
and
mov
xchg
fmul
add
sub
sbb
xchg
xor
inc
push
pop
call
xor
out
pop
pop
in
cdq
mov
add
sub
cs
or
ins
and
or
scas
xor
leave
scas
mov
cmp
dec
in
xchg
cmp
mov
imul
push
stc
out
xor
ins
sbb
ss
inc
jae
mov
xchg
cmps
jmp
pop
inc
sar
pop
cwde
clc
inc
mov
ret
jae
scas
outs
ret
ror
(bad)
int
push
cmp
movs
fwait
push
loop
ret
jg
push
sti
out
cmp
(bad)
push
mov
jp
imul
or
lds
mov
cmps
ss
xchg
arpl
mov
nop
lods
je
xchg
add
ins
inc
mov
aaa
cmp
fwait
jp
inc
ins
jne
push
repnz
jmp
mov
inc
mov
jno
cmp
outs
mov
xchg
pop
rcr
and
xor
adc
(bad)
dec
bound
mov
pop
leave
pop
dec
in
mov
xor
xor
adc
cmc
mov
cdq
sbb
sub
mov
jns
lea
lahf
jbe
ins
push
inc
mov
js
sbb
mov
jns
push
jmp
mov
lds
jl
test
ins
ss
sbb
stc
push
lds
test
cmps
cmp
pop
shl
pop
sbb
daa
xor
(bad)
sbb
inc
adc
xor
add
aad
imul
arpl
cmps
fcmovbe
in
mov
inc
ds
mul
iret
gs
jne
push
jmp
xor
scas
mov
retf
ffreep
lea
out
mov
sub
sti
lods
xchg
cmc
ds
or
cmp
imul
and
aam
std
add
iret
jb
push
xchg
push
imul
clc
xchg
sbb
pop
adc
adc
cmp
out
pop
mov
push
pusha
add
jnp
adc
shr
test
dec
jns
cmp
stc
(bad)
sahf
arpl
sar
ins
fs
cmps
stos
outs
mov
std
xchg
in
cmps
sub
dec
adc
test
mov
shl
icebp
sbb
sub
or
inc
ins
ret
inc
in
ins
test
inc
jno
xchg
push
cld
or
cmp
movs
jg
(bad)
(bad)
mov
push
xor
dec
cdq
cld
out
and
test
bound
cwde
retf
push
(bad)
pop
ins
jl
aaa
pop
sub
std
test
pop
ins
xlat
xchg
mov
aaa
cmp
xchg
xor
fwait
or
mov
jg
inc
pop
inc
and
sbb
aad
out
push
mov
cmp
mov
jo
mov
xor
mov
repz
loop
cmp
pop
dec
mov
retf
jmp
mov
js
jg
jle
xor
and
rcr
cmp
push
mov
or
stos
in
sbb
aas
rcl
aaa
adc
dec
xchg
dec
sub
mov
dec
cmp
les
lea
pop
push
test
aaa
or
push
xor
xchg
jne
ret
pop
fadd
push
mov
mov
xchg
xchg
ins
outs
in
pop
adc
movs
mov
dec
inc
retf
scas
jecxz
out
mov
pandn
pop
jae
es
inc
xchg
cmps
(bad)
dec
jae
stos
or
(bad)
fcmovb
test
and
inc
stc
mov
mov
ret
lahf
jmp
adc
repnz
xor
nop
and
inc
mov
mov
or
std
popa
stos
cwde
inc
mov
fs
adc
cmp
loopne
inc
cs
jnp
and
adc
sbb
in
cmp
popf
cld
cld
cmp
out
aas
in
lea
scas
sbb
call
mov
outs
xor
mov
add
sub
loop
cmps
int3
div
mov
cwde
mov
call
pop
(bad)
aam
out
int
mov
push
call
add
inc
mov
mov
or
clc
int
ds
sti
dec
adc
stos
arpl
mov
xor
shr
scas
inc
loop
and
std
mov
fisub
cmp
jmp
add
leave
(bad)
in
(bad)
fiadd
adc
ins
inc
iret
add
mov
and
sbb
shl
and
cmp
sbb
xor
add
es
mov
out
mov
xchg
mov
cmp
repz
jmp
das
jg
ins
inc
mov
cwde
jno
ja
loop
arpl
push
popa
and
int
xor
(bad)
ss
or
mov
xor
sub
ja
adc
test
pop
ds
mov
hlt
movs
dec
pop
mov
or
ins
call
dec
rcl
or
jnp
jl
cli
sub
scas
jmp
mov
lahf
mov
push
inc
shr
sbb
xchg
sbb
lods
adc
(bad)
imul
(bad)
loop
lea
lods
movs
in
repz
mov
mov
mov
in
jmp
mov
adc
inc
es
mov
and
push
xor
cdq
mov
cs
shl
in
push
pusha
in
pop
xchg
dec
js
push
imul
nop
fist
cmps
mov
es
fmul
(bad)
ss
dec
jle
ds
xchg
mov
or
jp
mov
ror
dec
test
push
or
and
inc
pushf
or
nop
add
mov
and
dec
int3
nop
dec
sbb
movs
sti
mov
in
or
mov
inc
and
frstor
pop
frstor
or
fsubrp
inc
icebp
or
and
xchg
and
popa
mov
sahf
cdq
icebp
jl
punpckhbw
call
popa
xchg
ret
push
mov
ins
xor
test
inc
call
rcr
data16
gs
leave
adc
push
fwait
add
repz
div
repz
test
lock
push
pop
sub
mov
inc
jne
sbb
mov
mov
push
sub
(bad)
jo
cmp
sub
repz
sub
mov
xor
retf
mov
pop
xchg
dec
push
pushf
or
fidiv
iret
push
push
rcl
sbb
mov
jp
xchg
adc
mov
pop
mov
repz
mov
fiadd
jb
iret
cmp
movs
imul
dec
(bad)
int
ds
mov
push
dec
sbb
or
sub
imul
sbb
(bad)
xlat
sbb
(bad)
dec
inc
or
bound
inc
sbb
in
mov
mov
inc
jmp
aam
sbb
(bad)
popf
enter
push
cmps
push
imul
or
mov
sbb
shl
mov
es
dec
and
sub
ins
cmp
sub
xor
jecxz
push
push
mov
sub
dec
pop
les
xchg
inc
sbb
xchg
jo
das
stc
or
cdq
ins
adc
aam
shl
rol
mov
mov
pop
pop
push
push
ins
inc
and
add
shr
aad
xor
out
or
inc
inc
(bad)
jno
mov
pop
(bad)
push
adc
xor
out
push
or
retf
fnstsw
cmc
call
pop
sar
push
fidiv
clc
jb
fdiv
mov
adc
xor
cmp
mov
out
or
jb
pop
mov
mov
aas
aas
ret
xor
(bad)
not
mov
push
cmp
adc
enter
je
jg
cmps
or
fdiv
or
jecxz
jo
enter
sub
push
icebp
jne
push
push
xlat
cmps
cld
adc
push
es
lods
out
stc
cmps
cmps
int
jnp
fnsave
outs
dec
(bad)
sbb
dec
test
movs
pop
mov
xchg
sahf
iret
push
test
out
call
sbb
jne
cwde
fcmovbe
sahf
retf
mov
mov
fstp
xchg
(bad)
jne
push
fwait
mov
add
(bad)
iret
and
pusha
mov
stos
push
call
(bad)
mov
mov
fistp
div
and
hlt
cmp
cmc
js
loopne
in
in
sub
jbe
and
sub
push
div
out
jle
mov
adc
mov
sub
and
mov
jle
mov
fistp
test
adc
push
and
and
stc
dec
(bad)
mov
cdq
sub
xchg
pop
rol
fsubr
retf
mov
fdivr
sub
add
sub
xchg
mov
lods
test
fcomi
retf
mov
dec
adc
push
dec
cdq
inc
mov
pop
inc
mov
pusha
lods
shr
scas
add
in
dec
enter
loopne
je
ret
pop
test
iret
jmp
inc
add
sbb
and
jecxz
arpl
(bad)
mov
adc
stc
push
push
add
jmp
push
scas
pop
fsub
movs
enter
fst
xchg
mov
push
mov
add
mov
xchg
(bad)
xor
scas
fcomi
push
jl
das
xchg
hlt
cmc
dec
add
xor
cwde
xchg
fbstp
into
push
fisubr
lods
xchg
cmc
or
mov
mov
pop
ss
fwait
add
in
js
mov
inc
jmp
mov
clc
or
(bad)
call
test
dec
pop
push
and
or
cmps
sti
inc
fwait
idiv
mov
push
imul
xchg
daa
xchg
pusha
outs
xor
add
push
inc
mov
or
faddp
(bad)
pop
cdq
(bad)
cdq
cli
nop
das
enter
dec
in
fadd
push
lea
cmp
cli
neg
sbb
aad
shl
sub
scas
cld
xchg
mov
mov
cmp
arpl
xlat
pop
scas
sbb
jge
imul
lahf
sub
outs
mov
stc
jg
mov
jecxz
stos
jl
dec
mov
inc
mov
ja
ret
aas
(bad)
adc
mov
mov
xchg
push
jno
and
dec
fucomp
out
int3
mov
inc
xor
out
leave
inc
inc
mov
dec
and
out
cld
pushf
fcmovb
xchg
fs
and
xor
mov
loopne
cmc
and
clc
mov
mov
repnz
retf
icebp
ins
add
movs
mov
data16
fstp
(bad)
push
sahf
movs
lds
call
sbb
sti
xor
(bad)
int3
dec
adc
sbb
push
shr
adc
and
inc
gs
leave
dec
mov
pushf
cmp
sahf
add
in
dec
daa
pop
call
aaa
xchg
icebp
dec
xadd
push
xchg
or
in
repnz
(bad)
daa
mov
adc
leave
sbb
sti
ficomp
not
add
pop
push
rcr
ja
pop
jnp
mov
aad
iret
cmps
xchg
jmp
xchg
cwde
add
cld
mov
xor
adc
xchg
push
jae
add
pusha
popa
cmp
jecxz
inc
push
xor
push
jnp
mov
lds
push
icebp
and
xchg
jmp
mov
push
icebp
sbb
lahf
(bad)
nop
pop
pop
fs
or
sub
adc
iret
and
scas
sub
or
stos
jae
imul
pushf
xchg
aas
jle
nop
leave
pop
or
movs
push
sub
in
movs
adc
fist
stos
cmps
bound
fbld
jo
(bad)
sbb
sbb
cmps
xchg
mov
jno
jnp
xor
xchg
fs
pop
in
mov
pushf
repnz
and
call
repnz
and
in
jmp
and
neg
lds
mov
inc
adc
push
shl
pushf
test
xchg
xchg
jae
cmp
leave
retf
imul
or
lock
mov
xor
adc
(bad)
xor
les
cmp
outs
add
mov
jle
xchg
scas
cmovb
aad
arpl
ret
jl
mov
inc
inc
ja
pop
push
cmp
int
and
cld
xchg
cmps
mov
push
pop
(bad)
mov
test
mov
(bad)
loop
xor
ret
dec
xor
inc
shl
inc
mov
(bad)
ins
jb
sub
mov
mov
int
jbe
inc
imul
sbb
(bad)
sahf
fidiv
and
jb
sbb
or
aam
adc
enter
adc
aaa
xor
(bad)
rcr
(bad)
js
pop
inc
xchg
ja
fcomi
iret
retf
stos
repnz
jmp
lahf
cs
mov
adc
sub
mov
gs
cmp
xor
add
std
push
movs
push
cmp
int3
xor
rcr
ins
call
mov
push
loope
sbb
pop
push
lock
lds
out
ror
jmp
jno
sar
sbb
jge
adc
xchg
sbb
ja
mov
mov
popf
pop
iret
test
js
inc
mov
pop
int3
out
iret
jo
xlat
cmp
xor
packuswb
cli
pop
sti
sahf
xchg
popa
jg
movs
jmp
imul
jl
cwde
jmp
data16
loope
inc
fld
push
mov
enter
sub
xor
adc
call
ror
pop
and
adc
xchg
cwde
xor
mov
outs
pop
jp
cwde
scas
lods
mov
mov
mov
sub
ret
xor
mov
mov
jge
loopne
aas
rol
dec
sub
shl
enter
jae
cld
dec
mov
xor
mov
call
retf
je
jmp
fisttp
clc
repnz
test
mov
xchg
rcl
(bad)
pop
mov
dec
jge
push
fistp
loope
(bad)
cmp
jmp
bound
xchg
(bad)
cmp
fidivr
(bad)
jmp
adc
loopne
pop
mov
pusha
cmp
push
fst
mov
mov
dec
jo
ds
push
stc
repnz
call
pop
fistp
cs
stos
leave
ret
xor
out
lods
and
mov
jo
pop
retf
dec
data16
rol
ja
cmp
pop
jae
movs
or
sbb
jnp
retf
xor
(bad)
repz
call
mov
jb
data16
aaa
mov
mov
loopne
pop
mov
cmp
jmp
call
aas
xor
mov
adc
je
xlat
sbb
lahf
nop
and
pop
clc
pop
data16
mov
push
(bad)
icebp
mov
push
cli
inc
and
and
and
sub
jecxz
call
sbb
pop
fs
fmul
nop
sub
xchg
sub
cmps
sub
icebp
jl
mov
cmp
cmc
sub
dec
aad
in
lods
mov
adc
xor
outs
sub
and
sahf
repnz
or
xor
mov
jmp
and
push
pop
sahf
xlat
shl
cdq
clc
pop
inc
retf
push
xchg
sti
add
adc
imul
add
pushf
add
jae
xor
or
stos
push
xchg
ins
mov
inc
call
sbb
pop
repz
dec
inc
and
adc
jbe
inc
ss
aam
inc
pop
leave
mov
into
dec
add
xchg
or
cmp
stc
fwait
arpl
and
mov
addr16
jnp
dec
xchg
test
in
pop
mov
mov
cdq
cld
sbb
in
(bad)
cmp
adc
mov
pop
xor
jge
repnz
sbb
stos
cmp
pop
shr
mov
rol
inc
(bad)
fnstsw
dec
cmps
das
shl
lock
xor
jg
inc
add
scas
and
mov
out
mov
cmp
mov
sbb
retf
dec
ret
lea
retf
das
pushf
into
jmp
fiadd
pop
adc
test
jb
popf
mov
cmp
mov
int
enter
or
dec
pushf
dec
sub
imul
or
sub
adc
(bad)
pushf
jg
mov
sub
ror
lahf
and
pop
pop
hlt
(bad)
fstp
imul
xchg
push
cld
test
gs
mov
jmp
aas
mov
cdq
clc
push
fwait
and
or
and
or
and
lods
in
(bad)
inc
(bad)
cmps
shl
cdq
add
enter
je
stos
popf
mov
js
retf
push
pop
inc
stos
ss
jmp
outs
lea
lahf
into
push
mov
fdivr
daa
cmp
leave
leave
pusha
ins
mov
retf
push
rol
pushf
popa
sub
inc
push
jne
fmulp
xchg
mov
push
and
adc
or
in
imul
nop
pop
mov
pop
mov
or
adc
cmps
std
add
sub
dec
sahf
rcl
rcl
pop
ja
push
fs
outs
push
ror
dec
add
pop
iret
in
jno
cmp
inc
xchg
movs
test
or
mov
push
mov
push
mov
adc
sub
or
(bad)
mov
mov
(bad)
xchg
repnz
stc
das
pop
inc
mov
mov
ds
sub
mov
movs
ds
adc
ret
dec
je
dec
call
(bad)
sub
pop
shl
push
in
mov
xchg
or
dec
ret
push
rcl
daa
rcr
add
clc
xchg
xor
mov
mov
(bad)
xchg
mov
repnz
adc
and
push
jle
push
test
enter
sbb
dec
sbb
ja
sbb
inc
sbb
jbe
dec
cdq
fsub
loopne
xor
mov
dec
or
mov
cmp
scas
sub
mov
cmp
aas
push
mov
std
and
addr16
push
lods
popa
(bad)
clc
je
or
adc
inc
inc
stos
pop
sbb
push
movs
and
mov
and
mov
ror
and
xchg
or
mov
jg
cmp
mov
jl
pop
in
push
sub
inc
or
mov
fs
cmc
sti
add
add
cmp
adc
jmp
out
movs
pusha
mov
ins
shl
lds
mov
mov
jne
es
cmps
call
or
add
dec
enter
cwde
inc
out
test
fwait
(bad)
or
pop
adc
ins
int
mov
stc
movs
cmp
stc
jno
add
jo
lods
pop
fucomp
fsubr
jbe
jne
retf
stc
pop
xchg
arpl
fnstenv
imul
inc
clc
xchg
dec
cmp
iret
push
xchg
dec
cwde
dec
ror
bound
xchg
out
pop
inc
into
sbb
mov
xchg
sub
push
xor
pop
mov
(bad)
lock
loop
sbb
fwait
lods
lock
sbb
(bad)
out
mov
movs
and
pop
jns
leave
cmp
leave
fsub
xor
and
jmp
cld
icebp
mov
pop
retf
mov
out
repz
(bad)
and
ret
xor
mov
ja
push
push
rol
add
cmps
es
mov
fadd
loop
arpl
mov
fwait
ds
push
rcr
xlat
mov
pop
dec
jbe
jl
sbb
fdivr
cli
ins
cs
call
clc
push
push
shr
loope
fwait
data16
dec
lea
mov
cmps
fwait
jl
aas
pushf
movs
dec
ror
cmps
mov
pop
mov
or
push
mov
pop
shr
cmp
into
mov
pusha
sahf
inc
add
add
add
jl
jae
push
inc
sub
adc
and
ss
stos
xor
repz
jbe
scas
hlt
or
retf
or
mov
xchg
pop
xchg
push
pop
mov
fist
(bad)
xchg
dec
out
mov
out
rcr
push
je
dec
ins
or
iret
xchg
mov
or
dec
adc
jns
sub
push
je
sahf
stos
push
or
xchg
xor
push
retf
add
cli
fnstsw
hlt
ror
inc
in
clc
in
mov
inc
loope
out
dec
add
sub
ins
xchg
add
cmp
mov
xlat
xor
je
dec
sub
xchg
jp
add
ins
jno
daa
stos
ss
mov
inc
fst
mov
ret
xchg
test
lods
inc
pop
push
jns
mov
jns
or
mov
sub
mov
xor
xchg
scas
jle
and
push
and
(bad)
cwde
sub
mov
stos
out
sahf
idiv
dec
fsub
mov
adc
fld
gs
ret
inc
xchg
int
mov
jl
ror
mov
adc
pusha
or
(bad)
add
ds
pop
sub
stos
outs
cld
ja
les
inc
push
dec
cmps
mov
mov
cmps
(bad)
pop
sub
push
arpl
and
div
or
jns
sbb
hlt
cmp
inc
fwait
inc
out
stos
jmp
clc
out
arpl
xlat
pop
sahf
mov
retf
dec
sbb
jmp
cli
and
aad
or
out
cld
mov
mov
mov
shr
loop
in
inc
jb
in
mov
icebp
xchg
pop
push
cmp
imul
xchg
inc
mov
xor
adc
out
out
jnp
test
movs
and
jle
push
pusha
jg
sbb
cmp
push
ret
push
inc
cmp
sub
fdiv
pop
xchg
int3
cmps
nop
jp
rol
mov
jo
dec
and
mov
aad
mov
test
cwde
pop
add
cs
int
stos
(bad)
cmp
sub
(bad)
sbb
cdq
jb
jg
xchg
repz
mov
loop
and
mov
stos
out
xor
jns
stc
sbb
int3
add
push
mov
inc
xchg
imul
cmp
jno
cmp
(bad)
lahf
(bad)
(bad)
inc
sar
icebp
scas
in
xchg
sar
out
outs
xchg
push
push
fdivr
ret
sbb
adc
arpl
mov
(bad)
mov
push
ja
gs
cmp
nop
int3
xchg
sub
sbb
mov
inc
ds
adc
sub
repz
add
movs
or
mov
and
test
clc
lock
jecxz
sub
popf
test
sbb
add
fwait
xor
push
ror
pop
pop
idiv
fild
bound
call
int3
ficomp
pop
add
add
xor
mov
leave
push
jne
mov
mov
and
fsubr
repz
inc
add
jno
pop
test
cmp
add
mov
jge
mov
dec
cdq
pop
mov
mov
xchg
jmp
test
inc
call
cmp
int
mov
fidiv
sar
das
jno
icebp
(bad)
nop
dec
ds
pop
pop
adc
daa
or
jp
cli
shl
sbb
cmp
cmp
out
cmp
aaa
jp
or
and
fbstp
adc
sbb
call
cmp
xrelease
adc
or
fcmovu
jo
rcr
mov
sub
sbb
pop
lods
cld
mov
push
imul
add
jb
pop
mov
ret
sti
movs
add
xchg
retf
ds
cld
mov
mov
jmp
sbb
xor
ds
and
imul
add
jge
pusha
add
or
daa
fstp
and
jmp
out
movs
into
jle
push
ret
xor
inc
sbb
dec
push
jecxz
pop
mov
xor
in
or
sti
cmp
sbb
sub
fsubr
dec
test
scas
xchg
int3
loop
outs
push
jmp
xchg
inc
(bad)
cmp
cdq
sub
add
fisttp
pop
lods
into
mov
mov
sbb
lods
add
xor
sbb
ins
into
xchg
mov
(bad)
jne
jmp
dec
jp
adc
mov
xor
inc
data16
rol
adc
outs
scas
xor
add
outs
stc
ret
jecxz
jecxz
xor
push
fstp
push
les
add
and
push
add
pop
call
fwait
push
or
loope
sbb
rol
cmp
sub
and
movs
(bad)
int
fcomp
or
mov
and
imul
je
loopne
rcr
push
in
fs
std
adc
ret
out
ds
mov
addr16
mov
fcmovnbe
loope
int
jo
pop
push
inc
mov
outs
test
jnp
imul
fsubr
jl
inc
and
sti
inc
out
pop
iret
lahf
inc
movs
sar
jmp
imul
popf
sbb
mov
fwait
aam
push
and
retf
jmp
imul
mov
hlt
mov
cwde
shr
mov
into
(bad)
es
aas
push
mov
push
sbb
push
inc
fild
loope
dec
pop
(bad)
jae
dec
dec
xor
sbb
scas
loope
out
scas
stc
cmp
adc
lock
(bad)
out
push
mov
retf
inc
cmp
adc
mov
jp
or
sub
bound
fcmovne
xchg
fnsave
je
retf
ja
dec
xchg
xchg
sar
xchg
mov
lock
adc
inc
mov
out
aaa
mov
cmps
xor
jae
je
outs
in
jp
jg
cmp
sbb
cmp
nop
mov
cs
inc
push
lds
cli
jno
cmp
fs
ss
sub
(bad)
adc
lods
jmp
fst
mov
add
lods
sub
sahf
mov
movups
iret
cmp
adc
mov
les
cli
(bad)
xor
sbb
inc
or
jnp
sub
xchg
pop
fimul
xor
pusha
mov
dec
xor
fst
sub
cli
mov
arpl
xchg
mov
adc
mov
cdq
pop
push
mov
enter
shl
add
and
jbe
daa
stos
mov
inc
mov
sbb
data16
pop
int3
add
xchg
fdiv
mov
in
fdivr
xlat
rcl
aas
push
hlt
jmp
lock
lods
xchg
sbb
sub
mov
sub
cld
push
gs
mov
sbb
arpl
aas
stc
popa
cmc
or
inc
xor
sahf
pop
loope
test
dec
aam
adc
jnp
adc
inc
jp
fcom
fiadd
out
(bad)
sti
jnp
retf
push
lds
push
repnz
add
call
data16
push
out
xchg
mov
and
sub
rcr
mov
ja
lahf
and
out
xchg
outs
cmp
or
add
push
cdq
ja
xchg
mov
dec
cmps
jp
lea
pop
test
mov
(bad)
fnstsw
int
lods
stc
push
jbe
xor
dec
mov
imul
loopne
gs
mov
sbb
lods
push
ins
mov
enter
xchg
(bad)
fidivr
xor
push
daa
xchg
daa
mov
mov
les
ins
mov
sbb
jmp
pushf
mov
(bad)
jns
aas
ins
inc
cmp
test
mov
xor
popf
add
leave
xchg
cmps
repnz
sahf
pop
xchg
popf
lods
xchg
fwait
jne
or
jecxz
jecxz
movs
movs
adc
push
bound
std
jl
(bad)
(bad)
rcr
cmp
stos
rol
add
xchg
push
scas
xor
add
adc
cld
push
hlt
xor
jge
mov
push
mov
loope
movs
dec
mov
jmp
popa
mov
xor
sbb
fs
or
dec
in
pop
fwait
retf
jge
mov
fidiv
dec
mov
mov
ret
xor
push
pop
or
cdq
jmp
addr16
cmp
xchg
ins
dec
inc
sub
aad
hlt
xchg
fsub
jae
(bad)
outs
daa
mul
sahf
xchg
in
jp
jns
movs
jmp
sub
test
popf
jmp
sbb
cmp
jg
stos
js
(bad)
iret
push
sbb
pop
push
test
mov
loop
inc
add
jo
mov
les
(bad)
dec
and
mov
cmps
add
in
or
mov
enter
shr
mov
lods
pop
mul
cwde
std
sub
jmp
pop
mov
jge
ret
xor
lahf
xchg
(bad)
(bad)
shl
inc
mov
movs
lahf
(bad)
movs
inc
stos
js
mov
fwait
cmp
push
jnp
fisubr
mov
stos
loope
and
mov
xchg
jo
jp
mov
adc
aad
push
sub
popa
leave
js
lahf
je
fnstsw
movs
aam
std
sbb
dec
es
movs
in
jge
sub
mov
mov
mov
iret
sub
movs
and
mov
sbb
xchg
add
inc
xor
mov
leave
pop
push
cs
add
inc
and
cwde
adc
out
js
fcmovnb
jb
sbb
jg
fimul
clc
dec
mov
mov
mov
loopne
sbb
xlat
daa
scas
mov
imul
jmp
xchg
das
add
test
push
cmp
adc
add
push
out
ja
mov
cmps
inc
xor
ror
test
jl
adc
pop
out
push
loop
pop
and
jae
cmps
leave
inc
mov
mov
repz
int
xor
pop
push
pop
clc
xchg
sbb
retf
(bad)
push
sbb
(bad)
outs
or
fisub
pop
dec
pop
les
push
arpl
dec
sbb
cld
mov
imul
and
mov
inc
jno
fisubr
pop
pusha
jae
js
out
or
pop
div
jo
jmp
stos
rol
out
fcomp
sbb
mov
icebp
enter
pusha
dec
movs
cmp
adc
adc
xchg
(bad)
fcmovb
sahf
dec
sbb
sub
jl
push
call
not
jmp
or
pop
xchg
push
cmp
in
in
pop
test
(bad)
sbb
test
out
jbe
sbb
aas
cmc
xor
cli
pop
jle
iret
lods
sub
test
cmp
push
push
and
adc
shl
ds
sub
repnz
sbb
cmps
dec
xor
xchg
mov
js
icebp
aas
mov
ds
cmp
call
js
cli
and
into
outs
mov
mov
mov
shl
repnz
pushf
(bad)
hlt
lock
xor
call
icebp
(bad)
lahf
or
add
cs
mov
std
leave
add
in
jp
ss
push
daa
xor
dec
cld
scas
add
int
scas
mov
in
push
pusha
fcom
inc
ds
fst
lds
enter
in
(bad)
scas
jl
mov
mov
scas
jno
bound
sub
jb
adc
xor
inc
mov
dec
sub
xor
jns
jge
mov
sub
pop
lahf
test
test
test
scas
xlat
cmp
cwde
in
loope
cmp
ins
fild
add
mov
cmp
mov
stos
movs
fisttp
jae
test
or
ret
mov
or
mov
test
pop
idiv
stos
sub
ss
rcl
fbld
movs
cwde
retf
mov
scas
into
pop
push
jecxz
push
jno
cld
test
sub
pop
xor
add
cmc
es
fstp
adc
shl
add
adc
dec
stos
ror
scas
retf
nop
in
lea
inc
shl
sbb
data16
xor
cwde
and
mov
xchg
add
ss
(bad)
out
push
mov
fs
or
inc
hlt
add
xlat
xchg
repnz
inc
or
sub
inc
repz
cmp
push
inc
pop
ins
lock
outs
fsubr
mov
pop
repnz
mov
push
outs
add
mov
mov
add
push
dec
cmp
pop
adc
stc
(bad)
adc
jnp
push
ss
clc
call
dec
push
ds
mov
enter
inc
mov
push
clc
mov
xor
jne
cld
inc
in
or
xor
icebp
gs
loop
mov
push
adc
sub
fnstcw
jb
popa
iret
dec
outs
scas
pushf
dec
add
dec
sub
mov
int
mov
mov
daa
ja
mov
test
out
sub
dec
in
jge
push
dec
call
pop
ror
push
pusha
sub
sub
inc
mov
inc
test
add
gs
ins
mov
ror
or
push
cmp
jge
ins
or
inc
ins
pop
cmp
rcl
cmp
jnp
push
add
add
inc
addr16
fadd
pop
lods
or
aam
inc
mov
repnz
xor
std
call
jo
cmp
outs
cmp
mov
in
jnp
sahf
mov
ss
mov
or
mov
fnstsw
mov
jns
je
or
test
in
mul
mov
inc
outs
es
push
adc
retf
mov
addr16
push
in
adc
push
fcmovne
push
gs
inc
mov
gs
xlat
adc
pop
sub
mov
sbb
pop
dec
out
je
arpl
and
mov
(bad)
stos
sub
xchg
neg
popf
mov
mov
(bad)
scas
push
(bad)
xchg
adc
pop
movs
push
pop
not
jo
lea
fsub
sbb
outs
test
inc
sub
or
inc
ja
xor
cmc
addr16
cmps
inc
ret
dec
jmp
inc
xchg
or
jle
add
jg
mov
repz
cmp
ret
hlt
pushf
and
cdq
mov
mov
aam
cmp
or
(bad)
push
dec
iret
hlt
out
les
jecxz
icebp
sbb
jl
dec
and
jnp
dec
adc
xor
(bad)
out
or
xchg
sbb
dec
ret
dec
sbb
repz
daa
cwde
das
mov
push
mov
mov
and
loopne
push
ss
add
div
pop
sub
bound
dec
sti
mov
repnz
push
inc
arpl
xor
xor
add
and
out
ret
pop
test
dec
adc
push
repnz
jo
loopne
loope
jmp
push
mov
mov
add
sar
xchg
push
hlt
(bad)
iret
dec
out
inc
(bad)
mov
mov
pushf
iret
lds
lahf
xchg
jne
int
cmp
in
sbb
push
sar
std
adc
xor
mov
mov
lahf
or
inc
or
sub
pop
out
mov
daa
cld
jno
(bad)
aas
neg
je
xchg
xor
ja
movs
and
adc
or
jb
dec
lea
add
cdq
pushf
jbe
jb
cmp
and
mov
or
mov
mov
lea
push
adc
aaa
lds
pop
pop
xchg
fidiv
data16
test
cmp
(bad)
jo
ins
and
sub
fiadd
xor
inc
xchg
xor
and
mov
add
push
(bad)
clc
aam
sbb
add
test
enter
test
jmp
scas
test
sub
jb
inc
xchg
hlt
jnp
xor
pop
or
mov
arpl
adc
pop
jbe
shl
dec
into
ins
ror
ds
lods
mov
add
sub
cs
adc
jg
cli
out
push
dec
fisubr
mov
lds
jmp
or
(bad)
ss
out
mov
nop
and
mov
ret
mov
nop
pop
push
cmps
outs
and
or
movs
mov
dec
dec
pusha
ret
mov
push
and
mov
add
ins
dec
lea
into
dec
lds
pop
or
jb
ss
mov
mov
pop
cld
dec
pusha
mov
aaa
test
xchg
mov
cld
dec
and
in
out
pop
test
xchg
push
imul
in
loope
pop
div
mov
xchg
fst
loop
xchg
add
call
add
fcompp
sti
cdq
mov
fcom
stos
inc
ret
mov
imul
inc
xchg
xlat
lds
cld
outs
fst
outs
jb
inc
jecxz
cmp
test
int3
jp
int
mov
push
mov
sbb
cmp
mov
push
adc
xor
fcmove
int3
dec
jmp
scas
sub
xor
sahf
jns
outs
inc
mov
fimul
in
ret
in
or
dec
fdivp
outs
cmp
xor
jb
pop
stc
mov
and
gs
xchg
inc
xchg
sub
add
dec
xchg
mov
xchg
pmaddwd
jecxz
sbb
nop
xor
mov
mov
ins
ret
outs
cmp
test
lods
leave
repnz
and
fistp
pop
rol
lea
loop
gs
mov
nop
rcr
inc
cmpxchg
js
push
jmp
add
jbe
pop
cmps
jl
push
xchg
jmp
push
sub
outs
ret
xor
sbb
dec
shl
out
mov
mov
sbb
xlat
pop
push
out
jmp
mov
les
pop
outs
adc
xor
imul
cmp
xchg
sbb
movs
jmp
dec
pop
mov
mov
test
jge
inc
in
clc
leave
xchg
mov
(bad)
movs
jge
aas
int3
lahf
(bad)
jg
nop
jo
pushf
xor
pop
mov
gs
mov
jg
into
out
leave
xchg
fs
add
call
aaa
adc
inc
and
pop
ret
in
add
mov
mov
mov
xor
mov
ja
jo
stos
aaa
pop
and
cmp
fidivr
hlt
lea
cmp
sub
(bad)
ror
lods
fs
cmc
and
movq
stos
xchg
jb
in
dec
leave
push
imul
out
lods
aam
jle
xchg
imul
pusha
adc
ja
pop
pop
push
xor
or
mov
pop
(bad)
stc
pop
inc
mov
jmp
or
imul
sub
mov
sar
fst
inc
daa
jnp
aas
xchg
xchg
aad
sahf
push
cs
mov
pop
mov
ret
sbb
dec
into
sbb
fcomp
or
scas
dec
ror
cmp
adc
sub
mov
pop
sub
(bad)
movzx
or
mov
mov
mov
adc
xor
xor
test
shr
stos
mov
cmp
mov
dec
out
adc
mov
sub
xchg
jle
mov
iret
call
out
stos
push
add
enter
push
xchg
mov
mov
shl
(bad)
cld
int3
xor
loope
adc
cmc
retf
je
lea
arpl
cmp
jg
outs
fldcw
rol
das
pushf
rol
fldenv
push
cmps
inc
or
dec
ss
add
clc
dec
mov
xor
shr
sub
pushf
sar
sbb
mov
cli
xchg
jmp
mov
add
or
pop
cdq
movs
ins
mov
loop
pop
mov
daa
mov
sbb
mov
mov
xchg
ret
aaa
fcom
jb
dec
xchg
sub
pop
ins
inc
or
dec
loopne
dec
adc
ror
jno
rol
jnp
adc
ds
inc
sbb
out
sub
jmp
dec
(bad)
inc
sbb
(bad)
jg
imul
mov
outs
(bad)
ret
(bad)
jmp
mov
cmp
xor
cli
xchg
stos
call
add
push
scas
pushf
lea
dec
loopne
sub
jecxz
scas
dec
mov
in
scas
jno
movs
es
sbb
xchg
add
adc
push
in
jge
add
test
pop
or
repz
out
retf
js
sbb
stos
pushf
push
mov
jmp
adc
adc
add
xchg
jp
inc
lock
stos
mov
xchg
adc
xchg
jle
lods
dec
repnz
inc
daa
mov
in
shr
pop
xor
push
push
mov
push
and
fimul
jbe
lods
and
repz
pushf
fidiv
adc
jge
js
mov
mov
mov
jmp
(bad)
xchg
stos
daa
nop
jp
push
jmp
adc
pop
cmp
jb
mov
push
dec
push
sub
sbb
int
mov
stos
push
cmp
pop
pop
imul
xor
lahf
push
jl
cli
xchg
jno
and
add
cmps
mov
sti
popa
ins
sahf
pushf
xchg
sbb
sub
mov
sub
ret
push
(bad)
mov
int3
lock
call
(bad)
or
add
fs
retf
cld
jmp
dec
stos
(bad)
imul
retf
ret
inc
mov
inc
fsubr
retf
in
test
int
call
jns
adc
popf
retf
sub
or
jo
or
cmp
mov
mov
je
ins
mov
mov
push
sub
or
stos
fidiv
mov
mov
mov
mul
sar
ds
or
dec
xchg
push
mov
xchg
adc
or
pop
rcl
ins
in
add
call
push
dec
std
mov
int
call
dec
cli
dec
xchg
add
outs
call
xor
pop
retf
repnz
inc
(bad)
adc
fdiv
and
hlt
inc
into
cmp
mov
or
fwait
jl
cmp
jl
inc
jbe
loope
mov
ins
dec
repz
jle
cld
sbb
add
mov
inc
popa
inc
loope
jmp
jne
cmc
retf
sbb
(bad)
arpl
outs
pop
iret
enter
fnstsw
mul
mov
inc
aam
icebp
mov
cmc
mov
gs
scas
jmp
pop
adc
loopne
into
mov
je
aas
lods
popa
test
scas
(bad)
pop
(bad)
mov
jmp
dec
xchg
das
ss
in
pop
std
xlat
inc
or
sub
ret
loop
or
test
lea
adc
leave
test
sbb
or
ins
pop
dec
jmp
inc
adc
hlt
mov
ret
dec
xchg
daa
dec
jmp
pop
sub
add
xchg
sar
cwde
pop
pop
int3
jp
xchg
push
adc
dec
adc
jecxz
cmp
sahf
pop
mov
pop
inc
lock
inc
mov
popf
rcr
push
loop
das
div
mov
dec
cmp
xchg
imul
ret
mov
cmps
xchg
inc
hlt
jmp
fnstsw
add
push
jmp
nop
push
push
push
adc
jp
bound
jge
pusha
push
sub
aas
cmps
lahf
push
lahf
rcl
into
pop
dec
jmp
adc
(bad)
clc
enter
popa
daa
mov
not
xchg
ss
jnp
and
adc
popa
in
std
mov
push
mov
je
pop
in
data16
pop
mov
mov
pop
test
jne
fcmovnb
pop
test
add
mov
and
sub
cwde
jnp
popf
mov
hlt
inc
sbb
xor
imul
fild
retf
fild
dec
sbb
stos
jno
xchg
add
jne
ror
push
mov
ins
add
fistp
fistp
imul
ja
gs
and
jl
fdivr
sbb
push
inc
out
cwde
aam
mov
add
pop
add
mov
push
(bad)
arpl
jmp
js
inc
dec
and
int
nop
fs
dec
int3
cli
ss
sbb
cmps
daa
dec
scas
xlat
jmp
or
mov
jmp
mov
ds
cdq
js
pop
add
mov
pop
ret
pop
jns
sahf
ins
out
into
jmp
mov
inc
pop
cmps
mov
push
lds
ja
popf
mov
xchg
and
pop
rol
adc
out
xor
add
rol
or
jmp
sbb
out
out
dec
or
or
stos
or
movs
in
mov
pop
xor
pop
ss
stos
call
iret
rcl
adc
mov
scas
add
push
push
test
imul
pop
loop
or
inc
test
cmc
pop
fstp
test
aaa
sub
sub
mov
std
mov
outs
push
push
push
fidiv
xchg
mov
sub
add
cmp
push
(bad)
cmp
add
inc
dec
movs
and
xor
scas
lahf
and
sbb
lock
ins
fcom
xor
push
movs
pop
loope
shl
arpl
jmp
jns
lock
pop
fwait
cmp
and
pop
dec
xor
in
ret
jns
pop
mov
hlt
and
call
inc
les
mov
ss
push
xchg
cli
ins
fdivp
ror
clc
pop
lods
jo
les
or
bound
loope
push
xcrypt-cbc
cmps
xchg
inc
push
and
adc
adc
sbb
pop
sbb
cmp
das
fwait
in
fst
rcr
push
nop
in
cmp
push
jmp
sahf
leave
mov
enter
xchg
imul
add
sbb
icebp
lea
xchg
nop
lds
test
(bad)
pop
dec
data16
(bad)
push
add
ins
jae
jnp
cli
mov
fidiv
jge
retf
cmp
xchg
retf
dec
dec
jnp
mov
xor
jns
xor
sub
retf
sub
mov
cmps
pop
and
ins
pushf
fbstp
mov
aad
push
sbb
dec
nop
je
mov
test
and
mov
mov
idiv
pop
mov
neg
xchg
pop
mov
iret
dec
inc
ins
ja
add
fldenv
add
(bad)
or
jl
jo
lahf
rol
cmp
cdq
out
int
and
mov
out
sub
adc
inc
loopne
into
sbb
leave
dec
xor
mov
out
xlat
lods
in
imul
xor
pop
add
dec
sar
jmp
sbb
cmp
addr16
cmps
mov
fidivr
mov
lahf
into
mov
jnp
fist
push
inc
pop
adc
pop
lahf
dec
out
jmp
push
test
mov
mov
mov
fcom
adc
add
mov
dec
loope
addr16
outs
inc
ds
add
sbb
mov
dec
test
cmp
scas
jnp
push
pusha
xlat
adc
aas
mov
xchg
outs
scas
test
mov
push
push
cmps
std
in
sbb
out
cs
push
je
movs
out
ins
sbb
jno
inc
icebp
mov
mov
adc
xchg
nop
xor
cld
xor
mov
push
(bad)
int3
cmps
dec
fdiv
pushf
test
adc
ret
out
test
sbb
enter
scas
cmp
repnz
test
xchg
pop
inc
sbb
cmp
clc
rol
mov
mov
bound
hlt
jnp
inc
fsub
out
jg
jmp
mov
repnz
icebp
iret
mov
xchg
cmp
inc
xchg
pusha
adc
jp
test
push
repz
push
cmps
lahf
nop
cmps
dec
stos
ins
xchg
imul
sbb
retf
hlt
mov
fidivr
pop
add
jge
and
shr
pop
add
xor
or
dec
popf
push
fadd
je
mov
nop
jmp
(bad)
fnstcw
jns
xchg
inc
mov
pop
out
pushf
jg
cli
addr16
cmp
loopne
outs
jb
and
mov
push
sub
shr
shr
xchg
add
sub
ja
std
adc
aad
fisubr
je
dec
test
fs
mov
jns
pop
bound
or
dec
inc
aaa
sbb
pop
dec
test
pop
call
icebp
xor
pop
stc
xchg
aam
stos
adc
int3
repnz
int3
lock
mov
push
out
adc
cmp
in
xchg
scas
and
mov
(bad)
push
push
das
inc
xchg
jae
fcomp
mov
cmp
cmp
pop
fld
push
repz
lock
mov
test
inc
xor
ins
popf
mov
xchg
bound
clc
retf
mov
test
pop
aad
scas
rol
jmp
fyl2x
dec
not
addr16
adc
ins
push
fistp
pop
mov
xchg
mov
cld
mov
aad
mov
jmp
xchg
mov
icebp
inc
imul
sub
mul
adc
mov
sub
pop
jb
mov
push
mov
mov
scas
imul
outs
cld
dec
je
xchg
scas
mov
sub
mov
ror
in
jae
mov
das
inc
push
mov
add
adc
repnz
inc
xor
aad
dec
mov
stc
call
push
mov
mov
cmp
(bad)
es
bound
cli
js
out
pop
test
repnz
aaa
mov
arpl
daa
std
jl
cmp
mov
call
dec
mov
dec
cs
xlat
repz
mov
mov
outs
imul
or
and
mov
js
(bad)
adc
xor
sahf
inc
and
jmp
fnstsw
bound
dec
cmp
dec
jnp
sub
mov
xchg
add
out
sbb
in
(bad)
xchg
add
mov
aam
aas
or
(bad)
push
ficom
pushf
or
enter
inc
lods
mov
dec
or
xchg
pop
mov
ret
mov
ja
push
int
xor
div
mov
pop
sbb
js
neg
shl
push
je
jmp
sbb
cmps
imul
int
mov
rcl
fnstsw
add
or
test
movs
and
je
js
push
jb
icebp
pop
js
pop
cli
shr
popf
adc
mov
push
pop
cmp
cmp
jo
or
fisubr
shr
cmp
les
(bad)
xchg
dec
pop
shr
push
xlat
sbb
pusha
mov
sbb
dec
jle
cmps
gs
scas
mov
out
imul
xchg
inc
fcmovbe
mov
fcomp
pop
nop
scas
arpl
(bad)
and
push
test
inc
int
daa
retf
push
inc
and
ja
cmp
ds
push
jg
(bad)
aam
retf
leave
mov
cmp
jmp
mov
rcr
dec
pop
sbb
sub
in
stos
jae
(bad)
sahf
sbb
popa
jle
jnp
dec
inc
push
push
push
test
popf
xor
outs
add
sbb
cmp
in
mov
mov
imul
pusha
lods
fs
pushf
ins
sbb
jecxz
push
xor
test
inc
gs
pop
mov
fs
cmp
addr16
call
push
cmps
cli
jns
pushf
enter
inc
pusha
mov
(bad)
das
sub
popa
iret
pop
xor
xor
lea
ror
mov
(bad)
icebp
push
sub
jbe
dec
into
test
je
jns
sbb
pusha
imul
and
add
and
dec
jmp
pop
adc
mov
movs
imul
adc
stos
sti
ins
and
sbb
cmps
stos
into
sub
push
pop
out
movs
and
dec
jmp
pushf
out
mov
xlat
adc
aas
(bad)
inc
fisttp
imul
call
jb
mov
adc
in
pop
pop
sub
ficom
adc
add
shl
imul
add
sub
sbb
aam
xchg
ja
arpl
xor
aaa
and
repz
dec
jp
pop
mov
mov
popf
mov
retf
mov
xchg
xchg
mov
and
sub
leave
or
pop
(bad)
mov
mov
jno
jle
call
in
jle
jecxz
mov
xor
xor
push
or
int
fstp
adc
inc
retf
xor
mov
or
pop
dec
sub
(bad)
scas
shr
xchg
div
adc
inc
out
dec
loop
pop
xor
push
lods
mov
adc
jno
xchg
jno
jns
ja
jmp
sub
adc
or
ins
mov
adc
je
add
pop
pop
fmul
out
jbe
mov
xor
mov
mov
mov
jg
or
(bad)
push
mov
into
(bad)
call
jbe
jbe
jbe
add
mov
ins
(bad)
outs
pop
dec
xchg
dec
rcl
stos
(bad)
ret
out
jae
test
(bad)
stc
sbb
pusha
cld
xor
shl
(bad)
scas
lods
dec
xor
mov
adc
pop
mov
and
pushf
les
sbb
xor
and
cmps
sbb
inc
pop
cmp
test
(bad)
mov
mov
mov
mov
jmp
pushf
adc
and
loop
stos
test
ror
cmps
dec
mov
repnz
nop
fist
dec
fs
aad
sti
cmp
call
ret
and
iret
xchg
or
das
in
jl
mov
adc
call
test
inc
dec
cwde
cmps
call
call
stos
fcomp
jbe
add
mov
xlat
push
into
sbb
fsub
stos
out
pop
rcl
jecxz
in
in
gs
out
idiv
and
(bad)
enter
sub
aad
je
nop
popf
cs
bound
jnp
cmp
pop
sbb
pop
retf
cmp
add
pop
mov
aas
or
push
jg
inc
into
sbb
test
shl
sbb
lods
ins
push
in
push
cmc
and
in
scas
jl
arpl
cmps
xor
out
mov
das
add
jp
lds
rol
push
jmp
mov
and
std
iret
imul
and
adc
data16
into
(bad)
dec
call
xor
sbb
es
dec
stos
test
aas
cmp
add
movs
mov
jne
pop
aaa
push
imul
and
mov
or
and
pop
cmp
int
cmp
leave
adc
(bad)
dec
lods
add
inc
loop
inc
jmp
popa
dec
out
lods
sti
mov
scas
mov
fidivr
fiadd
add
jge
dec
mov
dec
mov
rcl
push
les
movs
cmp
inc
push
not
push
adc
dec
pushf
xchg
and
icebp
dec
rcr
push
test
mov
push
push
or
sbb
addr16
iret
fisttp
add
popa
mov
inc
les
adc
inc
pop
arpl
std
xchg
or
jle
xchg
jg
or
jmp
jge
pop
dec
adc
stc
in
inc
mov
scas
inc
movs
loope
daa
sbb
sbb
dec
push
sbb
add
cli
mov
fwait
add
sbb
sti
out
add
xchg
xor
retf
push
ss
and
dec
cmp
push
xor
mov
int
cmps
popf
xchg
fcom
push
sub
jno
iret
push
xor
xchg
add
adc
cmp
js
mov
pop
sahf
aas
inc
rcl
aaa
mov
shl
sub
push
jnp
pusha
int
jo
xchg
adc
mov
imul
push
mov
sar
fwait
imul
inc
and
imul
pusha
jno
add
or
cmp
pushf
adc
les
push
mov
xchg
adc
dec
movs
sahf
movs
xor
mov
cmps
mov
ror
mov
call
cmp
sub
lods
mov
xlat
gs
jno
mov
pop
nop
cmp
mov
and
sub
repnz
popa
dec
add
pop
in
loope
(bad)
in
mov
mov
adc
es
mov
out
add
mov
sbb
rcr
jb
inc
adc
or
xchg
adc
xor
inc
sbb
cmp
mov
lahf
test
mul
mov
sbb
fidiv
add
add
push
mov
inc
pop
and
(bad)
cmp
scas
data16
cdq
xor
pop
cmps
xor
cmp
fist
mul
mov
xor
xchg
push
or
push
xrelease
push
push
sub
push
sbb
sbb
fidivr
pop
cmp
xchg
or
xchg
dec
jns
cmp
les
mov
ficom
(bad)
enter
neg
arpl
loopne
xor
les
es
(bad)
add
into
aaa
bnd
lods
cmp
cdq
pop
cmps
jle
test
test
pushf
jb
repnz
inc
sub
rcl
jae
sbb
sbb
(bad)
mov
inc
cmp
shl
stos
dec
scas
arpl
jmp
adc
retf
mov
mov
aaa
jecxz
rcl
xchg
pop
enter
cdq
bound
int3
dec
stos
fst
inc
or
push
jnp
sub
pop
je
push
jge
xor
shl
(bad)
jl
push
mov
xchg
pop
xchg
push
lods
or
xor
rcr
xor
mov
xchg
repnz
test
xor
adc
sub
rol
mov
fadd
in
inc
jge
push
xchg
mov
jmp
outs
inc
sahf
lahf
dec
into
sbb
daa
std
jp
add
ret
mov
daa
lods
or
pop
mov
jmp
mov
mov
test
sbb
mov
imul
imul
push
push
sbb
inc
xchg
jg
test
and
inc
pusha
lahf
jnp
out
adc
push
sar
lods
jle
adc
lds
inc
pop
xchg
lock
inc
pop
(bad)
mov
frstor
mov
mov
sar
test
push
dec
(bad)
sbb
lds
lds
inc
add
or
mov
push
lock
in
faddp
arpl
popa
fisttp
sub
lods
adc
cmp
mov
(bad)
adc
movs
dec
cmps
imul
pusha
lea
and
repz
sbb
mov
xchg
mov
add
dec
icebp
movs
retf
mov
lahf
fwait
cmp
mov
imul
gs
inc
dec
outs
stos
cmp
mov
jmp
xchg
scas
jge
shr
mov
cmp
jmp
mov
mov
out
sub
in
out
stc
out
dec
movsx
xor
pop
mov
mov
out
fdivr
cmp
cld
dec
mov
cmps
or
sub
inc
push
push
lock
cmp
daa
adc
sub
mov
and
popa
mov
push
jmp
and
or
jp
dec
mov
sub
mov
ja
sbb
bound
sbb
addr16
ror
cmp
(bad)
or
ss
push
lock
mov
pop
lods
mov
jecxz
out
leave
outs
mov
push
cs
mov
sti
ins
int
xor
sbb
push
shl
out
and
pop
or
sub
js
dec
pop
inc
xor
pop
mov
in
sub
mov
add
mov
xchg
in
mov
mov
sahf
dec
mov
test
(bad)
popa
std
push
inc
mov
fwait
js
push
addr16
inc
repnz
mov
sbb
dec
jmp
shl
retf
jb
or
dec
in
jbe
pop
sub
pop
fidivr
dec
or
pop
pop
add
push
sbb
push
cmc
rcl
call
call
adc
xor
outs
xor
xor
into
mov
pop
mov
pop
cli
cld
or
cli
popa
movs
lahf
push
mov
mov
fisttp
mov
sub
pop
and
in
xchg
and
xchg
lods
jb
inc
or
dec
adc
jo
jl
(bad)
adc
sub
pop
dec
in
sub
enter
in
lods
xchg
ins
out
fstp
cmps
ficom
sbb
cwde
mov
repnz
inc
push
in
mov
clc
inc
out
push
or
(bad)
adc
sti
pop
loop
xchg
es
or
aas
or
and
add
cmc
adc
loopne
cld
int
xchg
out
mov
cmp
xor
jmp
lods
mov
and
outs
pop
mov
jns
cmp
(bad)
loop
es
cmp
pop
loopne
mov
cmp
and
scas
call
and
inc
daa
loop
ror
mov
mov
out
mov
(bad)
imul
nop
les
adc
sub
ds
arpl
out
pop
jp
nop
enter
xchg
xor
ss
cmp
jno
cwde
push
mov
call
hlt
inc
adc
add
stc
sub
pop
jmp
cmp
shl
jg
dec
dec
dec
dec
sbb
popa
(bad)
leave
mov
hlt
adc
ins
add
adc
jg
(bad)
(bad)
or
dec
scas
dec
cmp
or
push
add
adc
pop
jle
sbb
repnz
repz
adc
xor
pop
push
call
les
scas
dec
and
fadd
and
and
rcl
push
fistp
(bad)
js
loop
xchg
js
push
fincstp
xchg
jecxz
sbb
popa
mov
pop
pop
(bad)
dec
ret
aam
loop
in
dec
inc
adc
cwde
jne
cmc
cmps
sub
cmps
getsec
pop
cmps
lahf
inc
test
sub
fdivp
lods
jecxz
pop
mov
fwait
push
mov
xlat
loope
pop
lahf
ret
push
mov
gs
fldenv
pop
repz
jae
pop
push
inc
out
adc
add
dec
into
test
dec
retf
dec
(bad)
sbb
mov
and
mov
lock
mov
packssdw
jge
xchg
push
jle
cmp
xchg
xchg
aaa
ins
xchg
sbb
jno
je
adc
pop
cwde
test
cwde
sub
mov
push
sub
xor
mov
fst
test
jg
pop
sub
imul
test
add
inc
in
add
fistp
fisttp
neg
out
xor
jmp
ror
dec
dec
test
dec
sub
int3
or
frstor
cmp
nop
mov
nop
fwait
pop
hlt
movs
lea
ja
adc
pushf
mov
xchg
inc
xor
mov
inc
adc
cmp
les
adc
data16
cs
mov
das
aad
mov
jecxz
in
scas
xor
cmp
loopne
cmp
ds
pop
xchg
scas
lods
ret
mov
jl
ss
ficom
ins
dec
into
call
(bad)
loopne
daa
push
pop
mov
pop
add
into
sahf
push
sbb
mov
pop
retf
push
adc
xchg
xor
(bad)
push
ror
inc
xor
mov
in
sbb
jae
push
jne
xchg
push
in
cmc
sub
mov
retw
jmp
scas
xor
jbe
scas
sub
nop
mov
cmp
add
mov
push
adc
add
sar
stos
add
test
call
and
into
inc
movs
pop
das
lock
inc
fbstp
jnp
jno
rcr
lods
sub
loopne
xchg
mov
(bad)
sub
xor
mov
add
jnp
aaa
outs
mov
repz
lods
ror
out
pop
cmp
adc
repz
test
mov
xchg
jecxz
call
mov
in
and
in
rol
dec
pop
add
loopne
pusha
adc
(bad)
xchg
retf
pop
ret
ja
stos
inc
movs
add
pop
xchg
idiv
mov
xor
inc
xor
ret
out
xchg
dec
lds
inc
jecxz
jo
ret
mov
addr16
cmp
mov
fwait
xor
ins
mov
mov
pop
out
ret
popf
mov
sbb
xor
push
fimul
aad
add
out
out
ror
push
mov
inc
adc
out
xchg
jmp
jecxz
mov
push
fs
loope
ins
push
nop
ret
sbb
(bad)
mov
cmp
ins
js
jg
mov
je
add
inc
push
sti
hlt
addr16
cli
fld
ins
push
aaa
xor
mov
jmp
mov
inc
(bad)
or
jecxz
mov
mov
repz
xchg
repnz
dec
outs
aam
out
mov
dec
xchg
push
xor
inc
movs
loope
mov
inc
mov
mov
jno
push
push
test
cmp
out
ds
push
(bad)
popf
popa
cmp
jae
pop
loop
ins
xor
cmps
jae
loop
xchg
xor
call
mov
sbb
xchg
sbb
inc
pop
or
dec
inc
pop
pushf
push
ret
out
xor
daa
push
inc
shl
inc
(bad)
push
addr16
out
arpl
loopne
mov
and
xlat
add
mov
cmp
dec
ret
push
outs
test
div
rol
int3
jecxz
retf
addr16
aas
pop
das
(bad)
pop
or
lahf
(bad)
nop
jmp
aad
jge
or
sbb
xchg
cmp
add
out
lods
out
inc
frstor
lods
(bad)
jp
or
cld
xlat
ss
xor
shl
jns
iret
or
js
pusha
test
mov
outs
push
push
int
aaa
or
inc
call
movs
inc
mov
xchg
aas
fsubr
or
jp
aam
icebp
lea
adc
js
adc
adc
add
inc
movs
data16
mov
(bad)
cmps
jo
fst
retf
ret
add
fidiv
adc
sub
addr16
dec
push
inc
xor
cmp
outs
cmps
jmp
mov
lods
mov
dec
div
lods
outs
movs
mov
es
jae
or
mov
(bad)
cmp
and
jl
int3
fdiv
or
je
push
adc
shl
xchg
call
repnz
xchg
stos
aas
(bad)
scas
sub
mov
jge
inc
shr
sahf
xor
addr16
call
or
call
fisttp
(bad)
fst
mov
loop
lock
ds
rcr
mov
ret
jecxz
pop
nop
push
push
enter
mov
psllq
call
push
inc
sbb
adc
ror
pop
retf
push
add
and
int
jge
adc
cmp
lea
add
inc
inc
inc
jae
pop
inc
adc
frstor
sub
sbb
adc
cmp
in
xor
push
je
ficomp
add
(bad)
(bad)
sub
loopne
sbb
inc
cmp
sub
ficomp
or
lods
and
and
jno
push
xchg
xchg
out
popf
repz
mov
aas
add
add
pop
cmps
test
je
mov
das
mov
aas
xchg
jmp
loopne
dec
xchg
or
lods
enter
sbb
mov
jo
adc
xor
sub
sahf
daa
push
sbb
mov
maskmovq
test
or
jl
cdq
sbb
mov
lahf
fistp
pop
test
movs
jo
xor
dec
(bad)
fstp
mov
out
sub
daa
mov
mov
cmps
jg
inc
inc
mov
sub
jmp
aaa
or
test
add
fsubp
out
sub
mov
jecxz
sbb
mov
movs
cmp
adc
adc
push
out
int3
jge
fild
sub
loopne
retf
cmp
mov
test
movs
repz
xlat
outs
add
lods
mov
sub
std
jnp
dec
or
adc
sub
retf
sub
jp
int3
sbb
dec
inc
(bad)
clc
loopne
cmp
xor
xchg
fidivr
sbb
scas
aas
push
pop
repz
xchg
cmp
fwait
arpl
(bad)
fidivr
sub
ret
int
loope
outs
rcl
and
xchg
in
push
mov
xor
push
pop
sbb
pop
das
aaa
out
fadd
fdivr
adc
xor
shr
mov
mov
mov
rcl
mov
sbb
pop
adc
dec
push
or
mov
xchg
ins
push
mov
sbb
sbb
ins
fst
adc
stos
(bad)
je
sub
bound
inc
xchg
xchg
jae
dec
shl
ja
aam
retf
nop
xlat
push
cmps
cs
inc
aas
gs
push
imul
fisubr
stos
mov
dec
outs
xor
sbb
call
dec
outs
push
jecxz
xor
mov
fistp
dec
cwde
inc
out
into
mov
adc
pop
jmp
retf
mov
sbb
inc
hlt
arpl
(bad)
mov
loopne
jge
pop
aad
push
sbb
mov
cmp
jb
fisubr
xchg
fadd
mov
je
lds
xor
ret
cmp
clc
(bad)
xchg
jmp
xlat
mov
sbb
or
or
shr
js
pop
jbe
cmp
retf
bound
cmp
cwde
aad
jl
mov
js
dec
and
mov
jb
ins
pop
add
mov
pop
retf
and
xor
push
xchg
and
sar
rcr
pop
in
dec
leave
cmp
add
aas
jmp
pop
ss
sahf
stos
and
stos
cli
and
sbb
scas
pop
mov
je
mov
push
ja
mov
je
mov
nop
lds
add
push
push
sub
mov
push
xchg
jmp
rol
in
inc
inc
ja
fimul
rcl
mov
sbb
bound
pop
mov
retf
jp
les
fild
imul
dec
in
push
nop
lock
push
stos
retf
lock
pop
dec
xor
pop
mov
bnd
sub
call
popa
cmp
push
iret
push
enter
xlat
sbb
xor
cmp
mov
mov
xor
mov
cmps
sbb
push
sub
ret
(bad)
pop
fild
in
adc
(bad)
stos
cmp
stos
clc
pushf
pop
aam
into
cmc
dec
stc
dec
and
or
lods
outs
cmps
leave
cmp
lods
mov
shl
add
add
jno
and
mov
dec
jmp
xchg
inc
out
mov
xchg
xchg
setne
cmps
cmp
cmc
cmp
cmp
in
inc
xchg
cmc
mov
mov
sub
mov
ficom
cmp
sbb
or
int
sub
push
adc
das
inc
pop
mov
xor
les
pop
ja
cld
inc
sbb
push
loope
into
inc
iret
and
jmp
cwde
inc
sub
jb
cmp
loope
into
cli
pop
adc
or
out
mov
ret
(bad)
push
fdiv
setle
in
mov
mov
inc
xlat
sub
jl
fidivr
add
hlt
rol
dec
test
pop
mov
imul
sub
xchg
jo
arpl
add
das
jbe
mul
stos
popf
test
call
inc
push
leave
movs
mov
(bad)
(bad)
ins
ins
adc
mov
movs
inc
int
pop
test
pop
iret
(bad)
mov
and
cdq
ror
pop
icebp
dec
(bad)
fucom
lods
push
adc
lahf
ret
jmp
jns
arpl
das
vpmacsdd
mov
and
and
jns
sbb
repz
sbb
mov
xchg
(bad)
mov
and
add
test
scas
not
dec
bound
adc
jbe
dec
pop
mov
sub
mov
aam
sahf
fiadd
shl
pop
pop
jo
shl
test
dec
pop
and
adc
jge
xlat
jbe
jnp
lods
mov
ins
test
out
pop
jno
aam
gs
hlt
adc
es
xchg
or
pushf
mov
(bad)
fisubr
add
fcom
cs
dec
(bad)
cmp
xor
sti
sahf
dec
lahf
dec
jle
push
hlt
iret
cs
(bad)
mov
xor
in
popa
nop
loop
dec
sahf
cmp
inc
pusha
outs
push
dec
sub
mov
xor
dec
movs
and
mov
add
pop
rcl
es
daa
and
xchg
add
sbb
and
test
aas
movs
jl
out
sub
lahf
pop
xlat
push
cli
fisubr
dec
shl
js
jmp
add
es
(bad)
fstp
imul
add
enter
(bad)
leave
adc
push
aas
call
scas
aas
inc
sbb
pop
popa
shl
sub
inc
shl
adc
add
push
cmps
fs
test
ins
fidiv
ins
jge
loopne
adc
hlt
or
inc
push
test
ja
inc
mov
and
cdq
mov
adc
mov
out
in
cmp
xor
xor
jl
sbb
gs
or
push
inc
cwde
das
fadd
retf
pop
and
xor
adc
and
push
jbe
add
pop
pop
or
pop
mov
out
cmp
shl
sbb
push
(bad)
out
push
test
sub
neg
push
pop
scas
or
and
push
retf
mov
mov
ror
test
jmp
ins
iret
mov
mov
push
nop
movs
fisttp
dec
pop
sub
addr16
hlt
sar
jo
push
lds
add
inc
int
adc
pushf
add
add
lar
add
dec
xor
mov
cdq
cmp
loopne
jmp
(bad)
and
retf
out
imul
pop
es
xor
cmp
or
jg
push
iret
add
pop
les
stos
inc
clc
push
out
xchg
add
(bad)
and
cdq
lods
stos
cmp
push
inc
sub
sub
in
add
shl
push
movs
cwde
push
(bad)
aaa
cmp
inc
scas
ror
fwait
xchg
iret
cwde
jne
aam
stc
jnp
aas
shl
enter
pop
data16
mov
mov
sub
xlat
mov
sub
cmps
repnz
loopne
xchg
xor
xor
inc
cmp
popf
sbb
sub
xchg
push
gs
fxch
or
inc
xchg
dec
sub
xlat
mov
xchg
mov
sbb
test
or
sub
add
push
loopne
pop
pop
hlt
sub
inc
dec
push
fisubr
lods
mov
ret
int
es
add
sbb
call
ss
sti
mov
inc
mov
sahf
and
dec
ins
inc
xchg
movs
fnstenv
retf
fidiv
inc
and
mov
and
dec
les
mov
test
pop
jmp
cmp
ror
inc
jg
adc
(bad)
in
cmps
retf
mov
scas
dec
ins
lds
and
jb
lods
and
add
push
enter
loope
xor
inc
jmp
mov
and
vpmuludq
or
add
jmp
pop
jb
out
arpl
and
test
(bad)
icebp
pop
dec
loop
sub
inc
and
or
cld
test
cmps
mov
arpl
pushf
hlt
push
aas
jle
and
pop
mov
xchg
adc
stos
daa
nop
daa
and
ss
mov
cmp
leave
mov
retf
xlat
xchg
rcr
adc
sub
aam
dec
cmp
or
jne
mov
jne
sbb
xor
inc
dec
add
leave
xchg
mov
imul
fadd
in
pop
mov
movs
mov
imul
gs
xor
sbb
xor
lea
add
(bad)
fisub
js
push
or
and
shl
call
pop
ins
sbb
add
(bad)
leave
adc
cmp
repz
pop
std
xchg
lock
xchg
sub
ror
movs
cmp
imul
jmp
add
(bad)
xchg
stos
outs
or
jle
outs
inc
leave
aad
gs
sbb
sahf
pop
inc
push
xchg
ror
cmp
(bad)
mov
jge
(bad)
pushf
les
loop
or
adc
pusha
scas
xor
or
sub
dec
dec
lock
sub
inc
mov
das
cmp
fadd
and
bound
add
xchg
xchg
adc
sbb
iret
(bad)
int3
pop
pop
mov
push
sbb
add
pop
fild
jmp
xchg
rcl
and
xchg
in
pusha
push
mov
aad
aaa
mov
sub
cmps
lahf
xchg
(bad)
cmp
loop
mov
mov
xor
imul
mov
and
call
(bad)
cmps
enter
scas
movs
mov
jbe
cmp
mov
add
push
lods
sub
pop
test
jle
push
bts
loop
mov
xor
lahf
pop
mov
scas
pop
std
jae
adc
pusha
and
adc
movs
pop
mov
mov
fsub
mov
repnz
movs
dec
push
mov
dec
(bad)
mov
cwde
popf
(bad)
push
int
loopne
pop
or
test
aam
loop
xor
mov
inc
cdq
(bad)
jp
aaa
ret
push
xchg
mov
dec
push
ja
adc
lods
adc
mov
sar
xor
lahf
mov
cmovae
mov
mov
jo
sbb
mov
cmps
sub
and
ins
xchg
sbb
and
xchg
enter
adc
pushf
adc
lea
aam
pop
cld
aam
fnstenv
xchg
push
adc
mov
sub
jp
sub
mov
dec
aas
mov
fwait
aaa
jmp
xor
pop
rol
std
mov
les
sbb
push
xchg
lea
push
je
cmc
jb
push
lods
xchg
sbb
popf
pushf
jae
cwde
ror
sbb
mov
dec
jmp
cdq
fisub
push
adc
aaa
das
add
sub
shl
inc
aaa
int
pop
mov
lock
xchg
or
jmp
push
sbb
sti
mov
pop
or
sbb
fbstp
ins
imul
mov
iret
jbe
jo
or
int
mov
sub
and
fsubr
rol
sbb
das
cmp
(bad)
test
popa
mov
jge
dec
ja
rol
sbb
mov
dec
and
xchg
shl
and
mov
repz
iret
nop
into
in
dec
adc
ins
test
fst
xchg
pop
push
inc
aad
pop
out
or
pop
inc
mov
add
adc
ins
inc
retf
pusha
or
adc
imul
jns
bnd
mov
xor
stos
add
inc
icebp
out
hlt
scas
sti
rol
mov
pop
xor
jo
adc
push
outs
sbb
cmps
aaa
out
mov
pop
pusha
mov
xchg
jg
mov
xor
aad
mov
gs
lods
and
add
inc
popf
sub
sub
ds
fmul
xor
js
cli
test
inc
shl
pop
jne
inc
and
(bad)
xor
dec
or
cmp
add
add
xor
mov
jmp
push
stos
mov
cmp
jmp
mov
cli
jmp
push
popa
lods
repnz
dec
adc
call
retf
push
rsqrtps
dec
retfw
xchg
pushf
sti
lods
out
icebp
pop
cdq
fadd
sbb
pop
sbb
mov
or
pop
jno
mov
sar
mov
sub
je
in
or
inc
xor
push
ret
cdq
inc
push
int3
mov
push
xchg
cmp
xor
sub
fbstp
dec
xchg
ss
jl
les
cwde
dec
rcl
dec
pop
(bad)
mov
and
dec
and
das
push
xor
mov
nop
push
(bad)
sub
stos
xor
push
cmp
lea
pop
repnz
cwde
adc
add
mov
out
fwait
jbe
pop
adc
ror
ins
ret
sbb
mov
jne
adc
mov
pop
jne
mov
loop
add
outs
popf
sbb
(bad)
clc
test
cmc
pushf
lods
sbb
xor
cmp
pushf
xchg
stos
hlt
inc
mov
cli
inc
shl
fs
mov
shr
cmc
lock
aad
sub
dec
fs
pop
movs
stc
outs
fdiv
imul
ret
or
fimul
fnclex
jmp
das
ror
jp
imul
cmc
sar
xchg
jle
push
clc
pop
jecxz
popf
cmp
xchg
stc
fdiv
and
dec
cwde
cs
xchg
and
or
fidivr
pop
dec
xchg
pop
cmps
xlat
iret
popf
cmp
cmp
mov
das
jo
adc
add
mov
shl
imul
jmp
fld
inc
test
xchg
out
and
fs
sub
push
aam
mov
add
dec
xor
sub
xchg
push
mov
mov
dec
or
out
sub
mov
mov
(bad)
fist
addr16
leave
out
mov
jno
lds
add
pop
mov
or
jp
xor
into
inc
add
sahf
iret
int3
jb
jmp
test
pop
in
push
pop
aam
sub
push
dec
es
ror
and
ins
je
out
sub
xor
shl
icebp
cmp
xchg
jbe
movs
push
lahf
jle
sbb
cs
int
lock
ficomp
and
cdq
call
sub
push
gs
arpl
cs
dec
fdivr
rcr
sti
mov
inc
push
fcom
adc
stos
lock
sahf
jb
mov
cmps
retf
xor
and
xor
jle
aaa
cmp
sar
jmp
clc
or
cli
neg
push
dec
imul
pop
ret
ja
out
imul
icebp
mov
int
es
pop
fwait
jmp
pop
or
adc
push
rcl
dec
retf
jo
dec
pop
jns
ss
dec
mov
adc
mov
cdq
dec
inc
dec
bound
clc
inc
lds
nop
into
(bad)
and
les
or
loope
push
mov
cmp
stc
sub
aam
movs
push
dec
mov
and
cmp
jg
cli
jns
pop
lods
leave
dec
jmp
call
or
popa
push
cmp
sar
(bad)
outs
dec
xor
add
enter
lock
repnz
mov
pop
lods
addr16
dec
jb
pop
popf
inc
mov
mov
jg
movs
addr16
(bad)
pusha
stos
xchg
outs
(bad)
fisubr
daa
mov
push
sahf
jne
js
add
mov
mov
in
js
arpl
jg
sbb
dec
xor
or
dec
in
ins
add
push
pop
cwde
sub
popaw
pop
mov
popf
stos
xchg
inc
mov
outs
cs
inc
jnp
inc
mov
shl
push
loopne
mov
fdivr
xor
inc
imul
or
jo
inc
imul
std
sbb
mov
mov
idiv
and
mov
or
aam
aas
or
retf
outs
ins
inc
pop
aam
jne
enter
cmps
mov
bnd
add
scas
fs
cmps
loopne
movs
cmp
es
push
or
and
mov
sti
jp
xor
pop
(bad)
sub
jmp
inc
retf
dec
and
jo
mov
ins
pop
out
shl
inc
out
mov
or
shl
aaa
dec
push
mov
add
movs
cmc
pop
lods
mov
push
add
cmps
mov
push
sar
(bad)
and
push
inc
cmc
xor
or
mov
imul
mov
sub
cmp
xchg
shl
mov
jecxz
les
and
mov
movs
add
jg
add
call
push
popa
and
mov
test
aaa
pop
leave
jg
cmp
inc
shl
sbb
add
push
push
jp
sbb
ss
imul
mov
idiv
icebp
pop
sahf
adc
fadd
fs
sbb
inc
fisttp
or
(bad)
jg
cmps
stos
push
xchg
ss
loope
mov
nop
mov
push
mov
pop
sbb
mov
dec
sbb
jno
dec
push
inc
(bad)
cmp
ds
sbb
adc
cmp
xchg
shl
fcomp
ror
jns
clc
mov
push
push
ins
mov
pop
inc
add
inc
push
ins
inc
sub
lds
dec
sar
push
sbb
pop
jmp
sub
mov
scas
adc
popa
adc
inc
xchg
fwait
push
pop
or
repz
hlt
dec
mov
and
mov
and
sar
dec
push
sub
loope
and
and
and
jb
ret
je
pop
movs
xor
mov
jmp
repz
jp
fwait
les
push
mov
fs
arpl
call
aaa
jmp
sub
cmp
pop
jno
jae
bound
mov
lods
inc
push
inc
mov
and
add
scas
in
frstor
aaa
clc
sbb
imul
dec
inc
inc
rep
enter
jle
cmp
adc
inc
mov
dec
jle
jns
add
xor
cmc
das
sbb
mov
not
addr16
stos
and
pop
not
shl
mul
imul
aaa
ins
add
mov
mov
enter
fisttp
(bad)
ret
icebp
inc
aam
push
xchg
sbb
aas
sbb
sub
ret
sub
jg
push
sahf
jnp
xor
sti
lea
in
fwait
mov
js
or
inc
mov
ficomp
movs
es
retf
jl
xchg
add
xlat
dec
fisub
xor
dec
mov
mov
xchg
xor
mov
and
loopne
lods
xor
pop
add
in
mov
dec
xor
(bad)
inc
cmp
ror
xchg
add
pop
imul
jp
daa
push
lea
pop
fsub
movs
into
xchg
xchg
mov
mov
retf
mov
shl
test
mov
mov
ins
(bad)
hlt
mov
test
dec
movs
pop
push
push
mov
(bad)
repz
push
xchg
movs
ss
add
push
cld
ss
(bad)
and
push
mov
fstp
mov
jle
fwait
dec
ror
out
pop
rol
pop
pop
in
arpl
xchg
xchg
pushf
sbb
lds
call
ins
(bad)
pop
add
(bad)
mov
sti
test
(bad)
inc
call
push
fst
fldenv
sub
movs
mov
jne
mov
sahf
mov
dec
sub
mov
lahf
out
push
add
clc
scas
mov
push
call
out
or
pop
adc
dec
cmps
jne
jp
xchg
mov
xchg
cmps
rol
mov
aas
adc
idiv
aaa
dec
jle
and
mov
lds
cmp
and
in
test
mov
js
mov
push
lea
or
or
enter
movs
mov
lahf
pusha
sbb
iret
rcpps
sbb
fsub
mov
iret
icebp
inc
ss
push
scas
stc
stc
push
shl
repnz
and
xchg
sbb
sar
jns
xchg
mov
popa
jl
mov
cli
retf
loop
cdq
adc
xchg
pop
push
push
sub
xchg
fild
les
push
data16
inc
sbb
and
in
jp
lock
xchg
and
(bad)
cmps
adc
add
(bad)
(bad)
retf
int3
stos
stos
push
dec
popa
in
xchg
or
lods
jbe
push
ja
jmp
push
pop
or
mov
inc
inc
jg
fsubr
mul
push
xchg
inc
cmp
fxch
loop
and
fdiv
fidiv
test
cs
jbe
mov
(bad)
dec
jle
out
mov
ret
inc
or
in
ror
adc
std
lods
xlat
into
push
sub
pop
xor
add
f2xm1
adc
sti
pop
je
adc
sbb
mov
adc
lods
xor
push
aam
iret
add
jb
lds
cmc
xor
cmps
pushf
push
pusha
in
mov
sub
xchg
pop
xchg
ret
ss
ja
out
es
rol
adc
xor
inc
sub
ins
test
jg
inc
and
mov
out
inc
or
adc
sti
jns
jo
rol
pop
retf
inc
xchg
jb
mov
and
aad
jg
jb
sbb
sbb
mov
lahf
pushf
inc
mov
scas
cld
sbb
xor
mov
xor
pushf
push
dec
lods
jmp
push
jp
in
out
scas
femms
(bad)
sub
xor
pop
clc
and
jns
adc
pop
(bad)
push
sub
lahf
or
dec
push
mov
and
xlat
mov
sbb
dec
mov
inc
out
fiadd
xor
(bad)
mov
rcl
and
push
sub
adc
pop
push
or
popf
mov
inc
dec
mov
mov
or
push
imul
sar
adc
xor
cs
xchg
test
jnp
out
aas
js
add
(bad)
pop
mov
je
jle
or
fiadd
jg
dec
mov
sbb
inc
add
mov
jno
mov
dec
mov
or
aad
xchg
jecxz
pushf
jns
push
pushf
pop
aad
scas
jl
pop
and
ret
or
sbb
jns
in
int
ins
cmp
stc
outs
xchg
push
and
pop
ins
into
push
xchg
push
mov
fidiv
cmp
sbb
and
cli
test
fnsave
jmp
sbb
mov
xchg
fwait
push
cdq
sbb
jp
ret
sbb
sti
pop
(bad)
and
pop
jmp
jbe
outs
mov
inc
add
xchg
mov
inc
into
in
xchg
xchg
nop
jmp
fild
(bad)
jb
ret
add
mov
pop
(bad)
test
addr16
fs
ret
retf
adc
test
xor
mov
sbb
out
sub
leave
scas
push
push
add
gs
pop
adc
add
mov
cmp
sbb
jle
mov
bound
gs
xor
inc
xlat
repnz
cmp
js
mov
jge
jns
hlt
stos
addr16
in
inc
clc
or
test
adc
pop
push
icebp
pop
xchg
and
mov
push
cli
pop
popf
daa
scas
movs
mov
cmp
hlt
loopne
jge
xlat
fiadd
jo
mov
fs
cli
mov
lods
js
outs
pop
les
jne
dec
or
mov
arpl
fld
inc
jns
aas
adc
jmp
adc
fiadd
sub
cmps
sbb
cmp
push
jle
gs
rcl
mov
jl
mov
xor
movs
pushf
call
push
cmc
or
fcom
or
push
add
mov
loope
mov
bound
or
stos
gs
jecxz
or
cwde
jge
mov
sbb
mov
mov
jg
dec
inc
pop
jno
jmp
int3
jnp
mov
cmps
shr
lods
out
and
sub
xchg
sbb
adc
inc
xchg
mov
int
or
int3
sub
push
sub
jnp
xor
mul
lods
or
call
cdq
cmp
jmp
xor
ret
les
in
bound
lahf
sub
mov
into
sar
jg
adc
nop
scas
cmp
dec
push
add
sti
div
mov
or
and
and
test
sbb
(bad)
repz
adc
movs
mov
cs
or
div
mov
xchg
sub
dec
cwde
inc
movs
retf
sahf
jge
sbb
ret
pop
nop
sub
mov
retf
test
sbb
mov
mov
std
xchg
mov
popf
xchg
stos
push
pop
and
xor
jb
adc
jno
rcl
sbb
cmc
xor
or
dec
fadd
retf
jmp
bound
inc
inc
push
mov
cmc
pop
mov
ror
xlat
pop
scas
adc
pop
movs
icebp
mov
push
dec
movs
gs
or
adc
xchg
in
push
into
retf
outs
pop
xor
and
cwde
or
and
cmp
test
adc
iret
jmp
popa
and
lods
mov
jmp
imul
mov
inc
fstp
jne
sbb
mov
lods
mov
rol
repnz
push
and
ja
rol
cmp
add
xchg
sar
inc
sahf
(bad)
div
xor
dec
xchg
loop
mov
test
dec
jb
repnz
mov
mov
ds
loop
mov
neg
cdq
cld
push
(bad)
das
daa
sbb
fidiv
dec
out
add
movs
aaa
pop
fsubr
lahf
stos
cmp
pop
push
pop
(bad)
push
jnp
in
or
retf
in
ret
rcl
mov
cmp
test
loope
inc
sbb
adc
scas
fpatan
mov
inc
cmp
sbb
or
cmp
cmp
mov
ins
mov
mov
mov
lahf
cmp
(bad)
inc
retf
push
lea
scas
xor
jmp
pushf
and
scas
dec
mov
clc
in
mov
daa
popa
loopne
push
mov
sub
pop
jo
mov
xor
xor
push
cmps
retf
push
cmp
leave
inc
xor
mov
fwait
dec
adc
test
bound
bound
and
std
jl
(bad)
push
ret
xlat
ds
sahf
out
ror
mov
xchg
imul
ins
pop
ficom
imul
sub
mov
jno
pop
xor
jbe
clc
cld
repz
jmp
push
jg
and
clc
and
inc
pop
stos
mov
xchg
mov
mov
push
xchg
fsubr
cli
add
es
data16
cmc
adc
xchg
dec
(bad)
sub
push
fcmovne
ins
dec
mov
leave
xchg
loop
push
xor
imul
mov
movs
inc
lds
lods
xchg
jge
(bad)
pop
mov
pop
icebp
out
inc
push
pop
int
xchg
xor
stc
imul
(bad)
call
mov
ins
bnd
(bad)
lock
cld
mov
fisub
push
mul
adc
or
xor
sub
cld
rcl
shl
aad
pusha
jp
pop
stc
jmp
xor
sub
dec
mov
xchg
jge
(bad)
cmp
inc
xor
loopne
icebp
push
addr16
jmp
fwait
inc
push
fwait
lahf
mov
inc
xor
adc
std
push
out
xor
xor
sar
mov
mov
ror
imul
ins
ret
(bad)
leave
pop
push
sbb
mov
(bad)
scas
(bad)
mov
retf
sbb
pop
gs
in
das
xchg
pop
ins
xchg
sub
mov
out
and
xor
sub
or
fs
sub
xor
(bad)
in
ret
push
adc
and
pop
hlt
cmp
jg
fwait
(bad)
popf
outs
(bad)
xor
addr16
mov
sub
ins
les
aam
mov
lock
mov
nop
cmp
push
mov
test
inc
xchg
fs
adc
cld
mov
xchg
aaa
xor
les
pushf
jns
or
mov
inc
lods
jmp
xchg
lods
jbe
std
pop
sahf
lods
mov
jge
sub
stos
mov
xor
cmp
fidivr
bound
pop
test
ins
cmp
iret
in
mov
dec
in
outs
sbb
push
aam
cmp
adc
sub
jle
mov
outs
call
mov
add
fwait
cmps
fwait
adc
mov
and
mov
ss
push
enter
mov
gs
pop
shl
add
add
or
and
or
pop
dec
push
sub
xchg
mov
dec
cwde
cld
shl
test
(bad)
test
pop
test
lods
int3
or
rcr
adc
pop
mov
cld
push
xchg
rcr
mov
jge
cdq
push
call
pusha
jp
cmp
fidiv
cli
add
jecxz
sbb
retf
aam
psllw
in
loope
mov
mov
nop
xchg
mov
push
frstor
sbb
pushf
and
pop
add
xchg
cmp
daa
scas
retf
fisubr
push
push
dec
int
fcomi
imul
sub
add
xchg
clc
sbb
ins
sti
add
add
add
mov
test
push
cmc
cmp
cmp
dec
mov
loopne
clc
inc
cmp
popa
sbb
test
pushf
xor
pop
adc
out
(bad)
or
inc
rcl
aaa
xchg
stc
pop
into
sub
not
inc
gs
mov
mov
dec
retf
inc
in
mov
mov
xchg
mov
cli
(bad)
(bad)
dec
hlt
cld
dec
das
loopne
out
add
adc
or
call
pop
ret
mov
mov
jecxz
rol
pusha
sbb
rol
fstp
push
pop
dec
mov
push
in
out
or
add
mov
fldenv
mov
jne
lea
sbb
or
sbb
jecxz
mov
rcl
inc
dec
sbb
int3
inc
mov
fistp
push
mov
out
loope
cmp
iret
scas
cmp
cld
xor
jae
adc
adc
in
shr
out
jb
inc
push
and
(bad)
sbb
out
sub
adc
inc
popa
cmps
adc
mov
out
data16
push
addr16
fadd
sti
pop
jns
popf
ret
inc
mov
jb
add
sti
shr
mov
push
shl
push
jbe
sbb
ins
push
das
clc
sbb
call
in
repz
(bad)
shr
push
xor
out
sbb
add
cmps
and
into
nop
pslld
jno
dec
sahf
fnstsw
rcl
(bad)
mov
pop
and
loopne
in
retf
lea
dec
dec
mov
mov
xchg
sub
cdq
push
adc
pop
add
dec
push
and
imul
cmp
fs
data16
cdq
xchg
(bad)
xchg
ret
loop
xchg
fs
mov
jle
(bad)
mov
je
stos
cmp
(bad)
xor
aaa
stos
xor
cmp
loope
popf
push
sahf
sahf
inc
lahf
fsubp
sbb
in
xchg
pop
xchg
lea
loope
cmp
(bad)
push
cdq
xchg
mov
js
adc
cmp
outs
add
adc
mov
popa
and
movs
xchg
loop
cmp
inc
mov
das
and
outs
repnz
mov
xor
in
or
(bad)
jnp
je
(bad)
ror
fucomip
fist
inc
mov
xchg
lock
adc
inc
sub
iret
inc
add
sub
cmc
bt
in
aad
sahf
sub
out
not
mov
cmp
push
js
js
adc
call
in
mov
aaa
mov
adc
iret
outs
repnz
loopne
loop
lea
repnz
cdq
push
shl
add
xor
fnstsw
mov
in
xchg
mov
jmp
xchg
imul
push
aas
jmp
xchg
and
mov
inc
dec
out
mov
push
retf
sub
add
push
mov
adc
jge
inc
fimul
bound
fucomi
sbb
ror
rcl
sbb
xchg
cdq
jb
sub
xlat
(bad)
cmp
sub
mov
cli
call
cmp
push
shl
loop
push
sbb
adc
leave
jbe
mov
xchg
int3
add
call
test
jmp
jl
sub
xor
mov
pusha
retf
pop
and
jae
cs
in
jmp
jb
sub
sub
outs
add
test
ret
aad
jl
test
xchg
sub
and
cli
je
cmp
sub
cli
ror
out
aas
push
mov
sub
ins
loopne
sbb
adc
mov
dec
out
(bad)
jecxz
jns
inc
fild
inc
inc
xor
imul
retf
xlat
movs
inc
inc
loopne
adc
jae
in
or
mov
push
adc
in
gs
xchg
sbb
pop
bound
lea
in
pop
movzx
nop
repz
test
bound
fs
shl
push
ja
xor
push
mov
fs
sbb
leave
dec
lds
fst
aaa
test
scas
movs
loope
(bad)
or
sbb
sub
xor
imul
jmp
sub
shr
in
fcmovne
pop
adc
punpckldq
mov
sbb
mov
out
adc
repnz
pop
jmp
iret
movs
pop
out
xchg
out
lahf
and
leave
das
or
lds
nop
jg
mov
fld
pop
add
sti
ret
push
retf
pushf
das
inc
test
push
dec
mov
loopne
push
jbe
mov
jnp
mov
repnz
xlat
retf
inc
and
xor
je
push
add
test
add
and
mov
(bad)
push
mov
mov
les
pop
sahf
shl
jne
inc
jle
mov
imul
cmp
rcl
mov
(bad)
or
repnz
retf
cli
sub
nop
mov
enter
(bad)
(bad)
icebp
mov
add
out
jp
cmps
jmp
mov
imul
aas
mov
lods
into
and
popf
dec
popf
lods
xlat
mov
inc
push
cmp
sub
(bad)
loop
jmp
cmp
jnp
iret
popa
inc
lods
repz
ins
add
es
mov
cmp
mov
call
(bad)
cwde
loopne
mov
or
std
in
dec
jo
mov
ins
call
(bad)
push
repz
aam
adc
outs
sar
scas
adc
pop
shr
jno
test
icebp
shl
mov
sub
lock
sub
ret
adc
in
xchg
push
adc
inc
test
call
xor
mov
adc
movs
iret
gs
mov
sbb
mov
test
add
sbb
inc
cld
call
retf
ins
pop
jne
mov
add
ret
scas
addr16
push
and
pusha
dec
retf
dec
std
cli
push
retf
call
push
pop
jl
mov
xchg
pop
or
pop
imul
sub
push
movs
(bad)
jmp
(bad)
pop
xor
js
dec
sti
or
in
popf
inc
inc
test
lock
pop
sbb
mov
pop
mov
dec
lods
out
push
jns
(bad)
jmp
in
out
pop
enter
repnz
fs
test
mov
xor
imul
xchg
das
jne
repnz
(bad)
pop
inc
cmp
inc
inc
adc
test
add
std
cmp
and
sub
fs
xor
dec
or
push
ds
popa
fdiv
(bad)
js
push
out
push
aam
daa
xor
jmp
icebp
push
cmp
or
cmp
and
out
cmp
push
mov
pop
xor
jmp
mov
cs
(bad)
push
clc
and
mov
shr
not
imul
cs
aam
cwde
dec
mov
repnz
mov
dec
inc
jns
jle
jnp
mov
adc
sti
fwait
mov
(bad)
lea
shl
mov
nop
mov
stc
dec
xchg
out
je
xchg
in
jne
push
mov
cmps
xor
pop
aaa
mov
or
sub
sti
out
je
dec
stos
xor
repnz
sbb
sahf
add
jmp
mov
dec
push
lods
mov
jecxz
lods
push
push
xchg
mov
arpl
sbb
jmp
xchg
ss
test
dec
das
push
imul
or
mov
unpckhps
addr16
int3
sbb
cmp
sbb
rcr
mov
in
push
xor
push
sbb
add
adc
cmovs
int
add
cmp
fwait
div
and
sbb
jns
add
add
adc
cmp
or
push
mov
pusha
inc
imul
mov
shr
test
test
lods
push
pusha
sbb
clc
mov
cmp
adc
xor
jb
mov
neg
mov
outs
test
(bad)
sbb
lods
test
je
and
cli
test
cld
and
fnstenv
test
icebp
dec
rcl
push
cmp
push
ja
in
aaa
int3
out
cmp
mov
int3
mov
push
push
movs
sub
cmp
add
lods
js
pusha
in
std
adc
mov
lods
push
jg
or
pop
fwait
(bad)
aam
div
sbb
out
fadd
std
outs
mov
aad
fs
push
arpl
pop
mov
aad
push
pop
push
sub
jo
or
pop
scas
inc
sbb
call
fild
mov
movs
xchg
jns
addr16
adc
xor
test
and
dec
shr
(bad)
jecxz
sub
pop
dec
icebp
pushf
push
pop
leave
xchg
mov
push
sub
std
sub
adc
xor
out
leave
xor
and
dec
xchg
mov
fld
pop
push
push
mov
(bad)
cmp
or
jbe
sub
pushf
gs
imul
and
mov
jg
out
jmp
rcr
pop
js
fnstenv
fxch
sbb
mov
add
sub
sbb
mov
push
ins
xor
jge
dec
pop
mov
xchg
data16
sub
xor
cmp
mov
lods
fcom
sar
pop
push
xor
fs
inc
outs
push
cmp
and
test
mov
aas
mov
pop
mov
cwde
pop
test
lds
add
cmovnp
shl
xor
jmp
ins
push
cmps
cmp
push
in
xchg
xor
ret
das
adc
xor
test
mov
imul
gs
cmp
dec
xor
push
(bad)
stc
in
movs
mov
jmp
and
nop
push
movs
add
loop
ja
pop
add
pmuludq
ja
add
sbb
dec
sub
popf
lds
in
and
retf
fbstp
nop
jns
inc
dec
mov
sbb
inc
cld
sbb
pop
ret
in
jecxz
mov
cmp
and
mov
rcl
mov
test
xor
pushf
sub
cwde
mov
pop
test
or
cdq
push
jle
or
push
(bad)
fstp
push
xlat
mov
(bad)
push
cmps
icebp
out
enter
sbb
in
out
addr16
ja
push
push
repnz
or
cmp
cwde
test
neg
cli
jnp
push
fcmovnb
add
pop
jecxz
mov
and
fwait
shl
push
pop
jge
cmp
sahf
frstor
xchg
add
loopne
call
fucom
fs
test
hlt
inc
jge
in
fwait
xor
rep
mov
jae
or
rcr
je
cdq
(bad)
jp
adc
movs
bound
mov
mov
dec
inc
lock
retf
mov
idiv
outs
ficom
or
in
or
cmps
pushf
mov
push
outs
cs
or
xchg
push
das
cmps
stc
cwde
fcmovb
jne
adc
xor
mov
push
fidivr
lods
sbb
cmp
pop
push
xchg
mov
(bad)
mov
or
cmp
mov
mov
jp
rol
xchg
in
push
js
jg
jle
xor
add
(bad)
mov
lea
and
inc
push
cmps
jmp
in
iret
xor
lock
jecxz
fst
call
rcr
shl
dec
pop
or
mov
outs
push
mov
repz
or
dec
or
std
xchg
mov
addr16
int
add
mov
dec
jp
out
inc
push
ss
mov
sbb
dec
sub
or
mov
push
mov
aad
pusha
mov
and
ficomp
xchg
pushf
cdq
xor
add
lods
bound
mov
clc
enter
into
add
cmp
data16
lahf
inc
cmps
cmp
pop
pop
xchg
fcom
fidiv
aaa
push
nop
fidiv
jge
or
and
mov
das
(bad)
int
xchg
and
(bad)
in
xchg
clc
mov
jg
sbb
add
sbb
int3
sub
mov
pop
jo
dec
das
jge
into
mov
aad
jb
(bad)
in
jb
dec
mov
xchg
in
cmps
xor
mov
xor
lds
or
xor
xor
(bad)
add
cmp
jnp
sbb
aas
adc
(bad)
mov
pop
enter
xchg
std
fsub
cld
mov
mov
(bad)
jae
jne
cmps
pop
pop
nop
xchg
jnp
jl
les
xor
fsubr
cld
xchg
gs
push
aam
lds
fimul
adc
jmp
test
fiadd
aad
nop
adc
add
mov
fidiv
mov
push
mov
sub
and
js
pop
add
and
push
hlt
bound
mov
adc
cmp
add
test
push
mov
jnp
push
add
mov
push
mov
xchg
or
inc
loopne
cmp
adc
pop
jl
rcl
int
out
sti
outs
aaa
or
outs
xchg
add
pusha
add
inc
push
(bad)
push
aam
mov
cmp
ffree
arpl
sbb
hlt
pop
and
sub
arpl
in
mov
lods
inc
ficomp
adc
mov
xor
stos
loop
push
leave
xor
push
push
ins
jne
fcomp
mov
dec
stc
xchg
leave
lock
cdq
xchg
adc
sbb
pop
add
out
and
sbb
mov
test
fs
(bad)
dec
mov
in
imul
dec
iret
out
pop
dec
mov
fs
jae
jb
leave
sub
mov
adc
lea
dec
mov
jbe
add
push
lahf
nop
push
add
add
fwait
in
mov
push
pop
mov
push
in
dec
cmp
mov
jmp
add
push
retf
hlt
mov
test
xchg
in
push
jbe
xor
dec
or
aaa
dec
jmp
pushf
cmp
push
mov
add
lahf
inc
inc
(bad)
adc
or
adc
jae
cli
xchg
push
jno
cli
in
sbb
inc
cmp
push
pop
mov
out
sbb
movs
inc
icebp
test
mov
std
jecxz
fstp
dec
out
jne
aad
jnp
(bad)
fnstenv
mov
loopne
scas
das
repnz
leave
push
shr
ja
dec
pop
dec
push
pop
push
in
mov
clc
call
das
xor
js
cmp
mov
mov
or
aas
aam
dec
retf
jo
fsub
and
mov
test
scas
jmp
test
pop
inc
pop
fnstsw
dec
jmp
pop
jp
mov
stos
or
aas
mov
loop
jle
movs
mov
pop
or
inc
popf
cmp
lods
mov
add
lods
pop
(bad)
jnp
xlat
enter
in
aas
arpl
cld
iret
xor
std
out
sbb
push
jbe
push
pop
mov
jge
fadd
or
push
outs
enter
mov
mov
bnd
test
cld
xchg
mov
sbb
lock
pop
stos
fisttp
adc
loopne
sub
pop
adc
inc
(bad)
mov
stc
into
push
lahf
mov
inc
sbb
push
xchg
dec
xchg
int3
push
mov
cmps
or
es
mov
xchg
mov
retf
inc
push
cmp
pop
jg
mov
in
ret
std
test
bnd
cmps
jmp
jmp
mov
xor
inc
movs
popf
cmps
lds
dec
into
dec
std
jmp
cmp
pop
dec
jnp
or
lods
pop
aaa
inc
or
clc
ss
lds
clc
addr16
xor
mov
xlat
lods
stos
xchg
shr
adc
fld
dec
enter
cmp
std
mov
or
fs
outs
clc
inc
lahf
sub
push
xchg
pop
xchg
outs
and
movs
and
fst
jo
cmp
add
aad
or
sub
gs
jno
dec
bnd
ins
retf
inc
xchg
pop
in
stc
jbe
sbb
or
inc
sub
lea
fwait
push
ret
mov
dec
js
dec
pop
and
xchg
and
mov
aam
(bad)
sbb
js
jmp
scas
popa
icebp
in
cmp
and
cli
push
pop
and
push
xchg
inc
and
or
xchg
mov
jecxz
sbb
retf
sub
cmps
arpl
ds
loope
pop
xchg
sub
cmp
jmp
sti
xchg
fsub
cs
add
mov
repz
pop
xor
leave
mov
int
test
or
mov
dec
inc
outs
ret
call
dec
add
mov
(bad)
aam
dec
inc
out
xor
in
xor
inc
movs
jle
vmovaps
mov
hlt
xchg
push
pop
iret
jbe
pop
out
and
cmps
xchg
mov
es
in
inc
cdq
cmp
cmps
fadd
mov
sub
mov
dec
pop
ins
pop
stc
repnz
mov
or
sub
mov
(bad)
jo
push
mov
es
bswap
pop
cmps
jnp
adc
fidivr
mov
inc
in
in
push
pop
add
pop
scas
movs
jp
imul
jb
mul
lds
xor
sbb
sti
xchg
stos
sub
sbb
push
(bad)
mov
jno
imul
fs
in
cdq
and
aad
loop
out
lods
in
outs
cmp
xor
fidiv
lds
xchg
cmps
fdivr
enter
shl
jge
adc
adc
mov
(bad)
std
mov
in
mov
shl
scas
and
and
ficomp
push
push
jns
gs
sbb
push
out
ins
dec
sub
cmps
jmp
out
test
push
xor
sahf
cmp
popf
xor
xor
jbe
out
inc
pop
jo
outs
xor
and
fcomp
lods
mov
mov
push
jmp
dec
pop
out
aaa
dec
mov
jo
push
hlt
rep
sahf
xchg
push
sbb
in
pop
es
gs
data16
cmp
out
lds
int
addr16
repnz
add
adc
xlat
inc
xchg
xchg
sub
test
scas
enter
(bad)
sbb
push
cmps
lahf
add
fwait
in
repnz
(bad)
mov
dec
push
add
or
dec
fnstenv
inc
(bad)
sbb
xor
stos
lea
clc
push
jb
inc
stc
or
enter
pop
daa
ret
into
sbb
adc
adc
call
call
xchg
mov
mov
adc
icebp
pop
pop
lahf
jbe
sbb
add
clc
(bad)
sub
mov
and
idiv
pop
or
dec
mov
outs
jge
imul
test
add
xor
inc
adc
push
dec
call
jle
pop
in
aaa
in
push
add
sar
xchg
xchg
cdq
nop
jmp
inc
cmc
jo
imul
cwde
lea
(bad)
sti
pop
and
sbb
jo
adc
cmp
pop
out
jo
repnz
or
out
ja
in
jl
or
out
(bad)
or
inc
data16
imul
repnz
(bad)
cmp
or
cmp
xlat
mov
pusha
dec
(bad)
jnp
mov
sti
ror
and
dec
mov
push
stos
arpl
pop
jnp
jge
jo
dec
scas
pop
sbb
mov
add
xor
dec
mov
push
movs
test
inc
movs
cmp
pusha
cwde
and
inc
mov
mov
sbb
inc
sbb
nop
fcomip
cs
pop
xchg
jge
bound
inc
test
ret
inc
fld
mov
retf
es
push
stc
mov
ficom
push
or
es
adc
mov
imul
mov
xchg
mov
mov
test
lds
and
xor
test
mov
push
popa
pop
xchg
or
xlat
and
inc
mov
iret
mov
sbb
ror
xor
xchg
and
cmp
jnp
xchg
call
pop
sar
mov
popf
int3
(bad)
xchg
outs
add
outs
pop
ins
out
xchg
mov
pop
xchg
out
mov
mov
test
xchg
movs
cmp
push
outs
and
fwait
adc
dec
in
ret
push
mov
frstor
sub
jne
(bad)
out
retf
mul
push
sub
jecxz
pop
mov
cmps
dec
cmp
sbb
dec
ss
(bad)
mov
mov
pop
call
arpl
popf
dec
out
mov
ror
in
xor
mov
shl
aas
and
xchg
mov
in
test
jp
xchg
loopne
(bad)
call
jl
mov
fld
movntq
xchg
mov
inc
add
xlat
das
pop
loopne
adc
mov
in
xchg
inc
lods
jns
inc
aas
lea
js
push
ss
xchg
enter
setle
ficomp
outs
dec
add
mov
and
jl
js
imul
test
dec
test
movs
sbb
xchg
dec
ret
pop
adc
(bad)
je
rol
fnstcw
dec
xor
js
inc
pop
xchg
retf
and
div
xchg
xchg
out
movs
fwait
nop
cmp
add
sub
movs
xor
aaa
xchg
xor
mov
mov
mov
and
xor
arpl
mov
jno
adc
(bad)
retf
loope
xlat
fldcw
inc
sahf
xchg
mov
stos
ret
push
ins
stos
or
ret
mov
xchg
(bad)
sub
mov
mov
test
enter
pop
mov
call
fcom
xchg
repnz
and
and
push
mov
out
jg
xor
test
inc
(bad)
rcr
xor
push
out
je
out
xor
xchg
mov
adc
mov
pop
add
ins
clc
fild
int
adc
push
leave
dec
sbb
adc
sub
adc
enter
leave
mov
(bad)
repnz
in
xor
mov
int3
cmp
scas
cmp
push
cmp
mov
sbb
sub
mov
mov
pushf
or
jmp
sar
into
call
mov
retf
loopne
mov
jecxz
xor
and
call
jno
jecxz
adc
inc
push
xchg
mov
jb
sub
mov
jle
call
out
push
xchg
cmp
stc
out
adc
les
add
in
inc
cmp
lods
pop
pop
xor
scas
cmps
mov
xor
cwde
cdq
sbb
out
inc
lds
adc
stc
repnz
neg
js
push
sub
add
jmp
push
jb
sub
xor
mov
and
mov
xchg
test
or
stos
(bad)
jle
imul
call
push
mov
pop
sbb
mov
adc
(bad)
aad
fisub
inc
push
sti
push
mov
out
mov
xchg
je
stc
dec
leave
xor
imul
xor
xor
loope
pop
pusha
imul
xor
mov
add
cld
cmp
pop
push
push
pushf
stos
sbb
fwait
jg
xchg
enter
or
jg
loope
xchg
test
inc
xchg
mov
push
sbb
jno
jge
push
shl
xor
enter
jne
xchg
fidivr
sub
out
imul
in
(bad)
xor
pop
mov
xchg
pop
inc
or
push
add
retf
jae
adc
inc
cmp
inc
inc
fisub
mov
ror
sub
popf
out
lahf
cmp
lock
(bad)
mov
push
aaa
imul
adc
dec
adc
xchg
out
jecxz
loope
push
pop
pop
out
push
dec
mov
outs
sub
outs
mov
repnz
and
nop
call
add
(bad)
std
cdq
stc
mov
mov
aad
inc
movs
movs
sahf
mov
or
jmp
pop
aas
pop
lock
in
ficomp
call
mov
pusha
push
in
or
mov
lds
inc
mov
mov
lods
leave
cmp
or
std
dec
scas
sbb
push
push
stos
mov
sbb
test
aad
jne
dec
xchg
jb
rcl
pop
(bad)
add
cdq
cmp
mov
adc
in
jl
mov
xor
int
mov
pop
js
std
adc
and
or
push
cmp
mov
ret
cwde
mov
or
int3
xchg
push
and
stos
inc
ret
mov
xchg
dec
mov
ins
push
sbb
je
mov
outs
data16
repz
pop
test
daa
inc
lldt
mov
cmp
cdq
mov
xchg
js
gs
leave
and
jb
outs
inc
sub
lds
out
xchg
inc
inc
push
repz
loop
pusha
sbb
dec
je
and
add
movs
add
push
lods
pop
xor
mov
adc
lea
push
sub
imul
cmp
fistp
es
arpl
add
(bad)
in
movs
cmps
sub
stos
mov
xor
jge
mov
mov
pop
imul
jo
in
jnp
mov
push
xchg
arpl
sub
aad
push
out
gs
cmp
cdq
jge
push
jb
xor
mov
aam
adc
and
mov
clc
mov
clc
inc
push
adc
es
mov
int
js
arpl
jle
stos
pop
xor
and
ja
lds
lock
gs
pop
mov
rol
push
dec
add
out
cmp
out
es
and
xchg
mov
arpl
add
int
cmp
enter
lea
aaa
(bad)
mov
fs
(bad)
and
cmp
pushf
test
dec
pop
sub
fsubr
jmp
arpl
jns
scas
push
cwde
or
jno
stc
xchg
lods
arpl
rol
int3
int
fsub
or
bound
and
jecxz
sub
or
arpl
cdq
into
ja
in
mov
loope
movs
fidivr
shr
mov
dec
mov
push
sbb
xchg
or
mov
mov
dec
pop
and
repz
and
dec
dec
pop
jo
push
sar
jge
sbb
les
sbb
fucom
mov
or
cmp
popa
aas
cmp
in
enter
and
xchg
xchg
sti
mov
pop
adc
sub
fbstp
pop
add
add
adc
cmp
sti
scas
xchg
adc
movs
mov
adc
cmpxchg
bound
add
push
std
(bad)
jp
inc
pop
cmp
jmp
push
arpl
mov
imul
scas
mov
pop
mov
scas
or
stc
or
test
push
jno
sbb
repz
movs
adc
cmp
push
sbb
xchg
dec
xchg
cmps
and
push
pop
dec
and
pop
dec
add
dec
dec
xchg
add
inc
or
add
pusha
retf
std
lea
ins
in
adc
xor
mov
push
ror
outs
(bad)
js
push
out
jne
int3
xchg
jae
mov
(bad)
stos
loopne
mov
aas
sbb
xor
lods
scas
dec
hlt
inc
rcr
adc
mov
xor
jb
ins
scas
push
mov
jb
add
ret
aad
dec
xor
pop
pop
xchg
ins
mov
push
jae
lds
std
movs
lods
inc
adc
jnp
push
rcr
arpl
pop
sub
mov
mov
ja
jno
sub
mov
fwait
mov
adc
inc
hlt
or
aam
jge
cmp
pusha
mov
push
int
xchg
out
popa
sbb
pushf
scas
xchg
jbe
push
bound
lods
pop
in
dec
and
stc
stos
dec
nop
outs
xor
push
lds
jnp
lds
inc
inc
ret
or
punpckhwd
pop
icebp
fiadd
clc
mov
out
dec
push
cwde
ret
out
sub
add
dec
sbb
frstor
(bad)
mov
(bad)
cli
or
jbe
aas
repz
loop
mov
das
xor
aam
movs
sbb
jnp
imul
dec
(bad)
repz
cmp
push
iret
xlat
inc
test
jle
adc
gs
std
scas
in
jg
dec
imul
std
push
addr16
and
aaa
or
mov
aad
nop
xchg
clc
(bad)
mov
jp
pop
adc
int3
nop
lea
daa
imul
jae
inc
add
pop
add
sbb
jmp
mov
fiadd
test
xor
xchg
add
sub
jnp
mov
add
ja
add
mov
repnz
test
or
cmp
loop
mov
lahf
sub
int3
mov
sub
outs
cmps
xlat
outs
jo
push
in
dec
mov
and
add
rol
test
jns
cmps
dec
loopne
jno
repz
inc
aam
pop
cs
xor
pop
and
jl
cmp
daa
or
push
dec
mov
loope
push
xor
gs
cmp
mov
adc
std
je
int
mov
sbb
retf
test
jmp
inc
and
xchg
lods
lods
psrad
mov
into
mov
pop
scas
dec
jge
not
inc
jge
sub
xchg
push
or
(bad)
cld
leave
jmp
and
imul
jnp
mov
loope
jnp
fidiv
fmul
repz
mov
lahf
sbb
jne
ror
call
sbb
out
pop
xchg
inc
cmp
mov
or
jne
gs
xor
sbb
push
push
movs
std
sbb
sbb
lahf
and
fstp
rcl
test
lock
or
ja
out
xchg
jne
pop
xor
jne
outs
sbb
mov
ror
fs
lods
dec
mov
cmc
and
cld
dec
jns
push
ins
cmp
fst
or
das
xchg
in
adc
push
jg
pop
je
jmp
sub
adc
fwait
mov
mov
or
jb
xchg
(bad)
xchg
ins
out
cmp
cmp
sbb
call
pop
stc
lea
repz
mov
lods
shl
cmps
mov
and
mov
lods
dec
dec
xchg
mov
pop
or
dec
pop
mov
xor
pop
movs
lahf
adc
pop
fstp
mov
sbb
xor
test
mov
mov
das
pop
mov
sahf
adc
adc
push
mov
loope
das
ret
scas
sub
in
mov
outs
pop
jne
dec
call
aas
std
ins
push
sub
jno
xchg
(bad)
in
mov
mov
dec
test
mov
mov
js
or
jnp
sub
call
xor
bound
imul
pop
adc
xlat
dec
jl
bound
xor
inc
sbb
xchg
sub
outs
pusha
int
repz
cli
ja
int3
pusha
add
and
or
test
pop
cmp
ficomp
pop
xor
pushf
inc
inc
mov
stos
(bad)
imul
int
mov
cmp
mov
lea
enter
rol
adc
fild
jne
sub
or
add
cmps
addr16
xchg
dec
ret
sub
xchg
push
ss
cmp
outs
sar
push
inc
or
push
dec
gs
movs
ins
cmp
cmp
ror
aas
cmp
cld
xor
sub
xchg
fincstp
inc
and
repnz
inc
fst
dec
mov
into
pop
enter
sahf
push
loope
or
dec
mov
inc
xchg
cli
inc
and
sbb
dec
js
cld
jmp
fnstcw
fld
enter
and
mov
les
imul
mov
movs
add
adc
ss
pop
into
dec
(bad)
out
push
adc
arpl
mov
sbb
sar
aad
inc
pusha
or
mov
(bad)
jns
mov
or
adc
mov
pop
push
fistp
test
xchg
sub
in
call
mov
push
adc
nop
add
xchg
jmp
dec
ficomp
xlat
adc
dec
fwait
inc
int
je
xlat
pop
sbb
sub
lds
fistp
lock
int
mov
xor
cmp
adc
pop
ins
push
cmp
jb
leave
ja
stos
(bad)
mov
pop
cmps
gs
sub
gs
inc
add
jle
adc
jmp
stos
jae
xchg
jecxz
sbb
test
or
jmp
dec
push
std
retf
and
and
loop
mov
out
cmc
adc
mov
cmp
scas
call
(bad)
cmp
ret
cdq
dec
(bad)
data16
je
jno
loop
and
and
lods
or
xlat
daa
or
fisubr
inc
pop
call
mov
jb
sbb
mov
add
stc
mov
dec
cmp
test
dec
ds
or
jg
fwait
mov
mov
pop
or
pop
inc
jbe
fadd
lahf
add
(bad)
and
nop
mov
sahf
test
xor
aam
pop
cmp
sub
daa
lods
fst
retf
lahf
push
add
jno
pop
lock
pop
xor
mov
(bad)
mov
jecxz
sbb
xlat
mov
sub
mov
fmul
mov
pushf
inc
in
arpl
cmps
jmp
jecxz
push
inc
in
adc
dec
mov
out
gs
mov
push
and
mov
cmp
fsubr
jae
inc
sub
cmp
lds
mov
pushf
fisub
jmp
test
shl
mov
inc
aaa
call
sub
push
cmp
retf
loopne
shr
(bad)
addr16
jge
cld
xor
or
add
fldenv
mov
inc
out
nop
jmp
xabort
xor
sub
std
cdq
push
cli
or
dec
in
mov
test
xor
test
mov
jns
push
push
xchg
in
and
dec
(bad)
or
or
or
dec
jb
inc
ret
mov
test
pop
xchg
sub
inc
test
cmp
loop
sub
test
fld
std
mov
aad
mov
or
push
rcl
dec
outs
push
(bad)
cmps
movs
or
sti
or
pop
xlat
ret
mov
push
sbb
inc
aaa
imul
cmps
push
adc
in
fwait
or
mov
into
push
addr16
inc
or
dec
push
data16
add
addr16
sbb
je
mov
jle
dec
call
mov
jo
frstor
inc
xor
and
dec
mov
and
sub
add
ss
jle
dec
je
call
fsub
pop
mov
stc
aam
data16
test
inc
mov
in
adc
test
lods
or
jmp
jmp
xchg
(bad)
push
jmp
add
sahf
lods
push
sub
xlat
sub
dec
mov
dec
loope
lds
xor
push
in
xchg
jle
mov
lods
mov
in
fsub
dec
mov
pop
not
mov
or
dec
sbb
std
clc
stos
mov
jo
popa
adc
das
js
rol
repz
arpl
cmp
test
inc
repnz
leave
dec
inc
ret
jns
int
ds
stos
cli
les
pop
(bad)
pop
dec
call
imul
sbb
push
call
stos
popa
out
dec
push
dec
js
lods
cmp
cmp
ins
das
inc
jmp
int
int
test
or
stos
inc
mov
icebp
pop
sbb
cmp
add
stos
dec
jo
dec
cli
arpl
adc
cwde
call
hlt
or
stc
jl
push
xchg
cmp
pop
push
pop
lock
and
xchg
test
rol
mov
sbb
push
aam
mov
stos
dec
out
xchg
retf
dec
lods
sahf
dec
mov
in
movs
xchg
or
pop
jmp
je
sar
mov
jno
push
dec
in
pop
xchg
and
aam
and
dec
or
xlat
xor
add
retf
in
call
pop
stos
fldcw
cmp
adc
dec
call
inc
enter
mov
cmps
cmps
adc
clc
popa
in
xchg
inc
xchg
aaa
mov
pop
fistp
cmps
daa
mov
cmp
(bad)
mov
xchg
hlt
test
test
idiv
sbb
and
jmp
jmp
inc
pushf
mov
mov
mov
cmp
call
and
fs
js
or
push
iret
into
pop
xor
rcl
outs
pop
inc
xor
aas
rcr
adc
add
and
in
mov
xchg
add
imul
ss
sbb
cmp
xchg
fild
adc
lea
push
sub
inc
jns
test
out
ror
add
dec
or
mov
fsubp
jmp
lds
and
xchg
gs
js
add
xor
dec
cmp
adc
rcr
cli
cwde
ds
mov
fistp
fdiv
dec
jae
inc
jmp
add
pop
mov
jecxz
add
psraw
data16
or
inc
xor
dec
mov
mov
jl
mov
xor
gs
dec
pop
mov
stos
push
(bad)
mov
aad
addr16
arpl
jno
jmp
es
mov
das
push
fidiv
sahf
movs
mov
add
ret
jne
mov
add
cmps
sbb
ror
iret
jmp
out
mov
sub
out
dec
ror
add
sbb
fild
out
ret
ds
lahf
mov
inc
shr
ins
out
xchg
shl
sub
rol
sbb
sub
jno
jnp
mov
cmp
frstor
aam
add
scas
cdq
stos
cmp
xlat
es
mov
es
ins
addr16
mov
dec
inc
jnp
in
fisub
push
sahf
dec
cmp
cmp
xchg
inc
sbb
movs
push
add
icebp
and
arpl
mov
shr
test
(bad)
leave
xor
leave
sti
cmp
adc
mov
call
cmp
adc
mov
jno
push
outs
mov
inc
jmp
ja
iret
cmp
mov
imul
stos
xchg
in
mov
ss
push
lahf
fwait
addr16
xchg
hlt
add
stc
(bad)
xor
aad
inc
push
in
push
or
cmps
stos
jge
pop
cmp
in
push
or
lea
push
ret
out
dec
mov
inc
in
(bad)
nop
mov
xor
sub
jae
jb
enter
pop
push
fimul
jmp
and
sbb
sti
cmps
xchg
dec
sub
jmp
repz
xchg
out
push
out
xchg
fs
xor
mov
mov
jecxz
push
lods
xlat
xor
sar
ds
scas
pop
mov
xor
outs
fisttp
push
or
jmp
lods
in
xchg
imul
stc
and
ret
test
push
push
push
imul
sbb
pop
addr16
fbld
and
stos
jmp
fs
cdq
inc
dec
xchg
sub
xchg
fbld
inc
(bad)
lds
bound
enter
mov
add
fst
into
dec
and
and
push
pop
jmp
cld
jb
loope
aas
jb
pop
popa
sub
hlt
or
and
rcr
or
cli
sub
xchg
mov
adc
xchg
xchg
ds
leave
out
shr
aam
sub
std
pop
rol
cs
mov
aas
adc
inc
adc
popf
cmp
fcmovnb
mov
push
call
rcl
call
je
dec
add
and
mov
imul
fidiv
xor
mov
or
cmps
shl
mov
dec
adc
enter
cmp
(bad)
jmp
adc
fs
cdq
add
fcmovb
movs
mov
aam
and
or
xor
and
inc
movs
push
push
ins
cmp
pop
mov
outs
(bad)
fdiv
stc
adc
or
icebp
retf
pop
mov
xor
pop
push
add
imul
movs
test
push
mov
stos
cwde
or
inc
mov
fcmovnu
cmp
icebp
or
clc
cs
fcmovb
(bad)
data16
into
xchg
xor
rcl
jmp
cld
mov
outs
scas
jb
int3
movs
test
rcl
jle
and
inc
cld
inc
push
movs
jge
jbe
popf
fs
out
enter
xchg
imul
jne
int
int
loope
scas
hlt
cmp
pop
adc
fstp
leave
add
mov
outs
stos
push
push
xlat
fadd
fld
mov
hlt
test
stos
sar
enter
and
xor
and
mov
jbe
(bad)
into
pop
dec
lock
es
inc
xchg
push
lods
sti
pop
mov
rcr
es
and
xchg
cmp
dec
xor
sub
mov
pop
mov
inc
pop
sbb
cmovne
pop
bound
push
dec
shr
xchg
pop
mov
(bad)
push
outs
push
jae
pop
xchg
xchg
add
je
pushf
imul
mov
xor
push
inc
sti
lods
aam
pushf
(bad)
mov
xlat
push
scas
loope
pop
add
cwde
adc
push
mov
pusha
aam
pop
sub
pop
je
mov
mov
repz
xchg
inc
mov
push
xchg
and
inc
jno
popa
arpl
es
repnz
mov
mov
loope
or
mov
in
xchg
dec
inc
and
and
lods
lds
or
and
or
and
pop
mov
jmp
sbb
(bad)
mov
daa
iret
fst
outs
or
push
cmp
arpl
aaa
nop
(bad)
or
imul
arpl
dec
movs
ja
cmp
(bad)
push
ja
push
dec
jp
sub
std
add
int3
data16
fs
rcr
shl
jae
xchg
sbb
test
ss
pop
xor
in
xchg
pop
div
pop
ret
das
fmulp
retf
mov
mov
test
fist
out
mov
cmc
xchg
dec
xchg
adc
adc
cmps
in
fucomip
sbb
push
dec
ja
adc
mov
out
sbb
popa
mov
sub
hlt
ret
jecxz
mov
aad
xor
mov
je
rcr
and
mov
movaps
lods
pop
jns
adc
mov
sbb
sahf
mov
sbb
cwde
ror
icebp
add
sub
dec
dec
xchg
mov
(bad)
arpl
sub
jle
dec
mov
sub
sub
imul
ror
test
jb
cwde
std
xchg
xchg
push
(bad)
cmp
adc
in
into
xchg
pop
pop
cdq
sub
mov
in
sahf
outs
ins
push
and
jne
out
clc
out
ss
addr16
inc
add
and
pop
test
xor
xchg
sub
pusha
(bad)
in
mov
mov
popw
push
lods
(bad)
gs
push
add
and
inc
rol
inc
jo
xchg
(bad)
inc
test
inc
xchg
jo
push
loope
hlt
xor
jg
mov
pop
sbb
loop
dec
jmp
adc
enter
jo
mov
cmps
fmul
clc
xor
pusha
sti
out
lods
push
das
sbb
aad
sbb
mov
sbb
daa
cmp
jae
cmp
mov
add
(bad)
mov
lds
dec
mov
popf
ins
adc
cli
push
sub
fst
les
push
aam
stos
or
xchg
pop
xor
dec
jo
repz
pop
(bad)
pop
sub
stc
jb
ret
in
into
ins
push
mov
rcl
adc
sub
dec
add
fiadd
data16
adc
ja
inc
sbb
dec
xchg
cs
mov
rol
(bad)
pop
pop
lds
in
adc
xchg
out
push
ja
mov
(bad)
jno
out
into
mov
sbb
pop
xchg
xlat
xchg
fwait
sub
jo
push
sub
lahf
sub
jl
aas
push
push
xor
jp
mov
jmp
mov
pushf
or
jmp
ficom
cmc
add
popa
xchg
xchg
push
(bad)
mov
leave
mov
loop
inc
je
xor
sbb
jge
cmp
push
outs
push
nop
or
or
sub
cld
lds
sub
inc
mov
mov
pusha
mov
jecxz
fdiv
bound
dec
pop
lds
adc
pop
xchg
pop
sbb
(bad)
es
rcr
(bad)
push
and
inc
test
mov
dec
aam
leave
jne
mov
(bad)
cli
or
jno
test
fstp
inc
cwde
fnstcw
dec
clc
daa
in
jp
std
cmp
jns
and
jl
test
stos
icebp
pop
pop
jle
(bad)
fwait
dec
dec
(bad)
mov
dec
fidivr
shr
mov
(bad)
push
addr16
lock
cmp
jl
jmp
jp
rcr
inc
jp
sub
in
cmp
out
je
fwait
pop
adc
gs
or
retf
lods
pushf
xor
dec
mov
mov
mov
inc
dec
repnz
mov
or
cmc
and
aaa
(bad)
jle
out
push
sub
(bad)
cwde
mov
aad
cmp
add
inc
jl
popa
jno
clc
(bad)
push
movs
leave
sub
scas
mov
test
or
add
mov
mov
ins
sub
and
nop
scas
repnz
stos
push
cld
fimul
aaa
jmp
test
xchg
jge
inc
ret
adc
mov
pushf
mov
inc
mov
ret
or
and
mov
iret
test
arpl
fs
mov
pop
mov
hlt
shl
jno
into
push
or
loop
pop
sub
mov
cmp
push
jae
lods
adc
out
mov
(bad)
int3
sub
pusha
mov
int3
fwait
xchg
xor
popa
mov
pop
rcr
cld
xlat
inc
or
add
lods
xchg
jne
mov
jnp
iret
outs
push
push
sbb
add
mov
add
stc
popf
sbb
inc
sbb
mov
jb
test
adc
mov
inc
cmp
jecxz
lods
fld
mov
gs
leave
inc
and
xchg
mov
fadd
sbb
ins
shl
sbb
aas
inc
clc
(bad)
outs
xor
adc
bound
mov
shl
push
adc
(bad)
xor
stos
ret
rcl
in
retf
pop
cmp
frstor
mov
add
pop
dec
pop
and
cmp
mov
hlt
adc
adc
or
mov
xchg
scas
jmp
mov
(bad)
jecxz
jmp
mov
call
fisttp
pop
nop
retf
mov
push
xchg
or
cmp
mov
cwde
(bad)
ror
and
call
or
ffree
pop
repnz
and
dec
daa
test
jmp
mov
and
mov
push
dec
push
xor
(bad)
cmps
dec
(bad)
in
add
or
sub
imul
mov
lods
ret
(bad)
(bad)
xchg
sub
fiadd
ss
movs
add
pop
or
popf
fst
sbb
cwde
adc
inc
adc
pop
add
cli
xchg
mov
jnp
stc
xor
push
and
leave
les
repnz
mov
das
and
xchg
xor
add
rol
cmp
sbb
xchg
pop
or
lds
pop
push
hlt
stos
mov
xchg
loop
mov
out
mov
shr
inc
pop
lea
xchg
dec
data16
je
xor
cdq
sub
jl
and
sbb
inc
mov
(bad)
adc
or
outs
xchg
cmp
push
ret
les
call
fucom
or
mov
movs
sub
int3
or
inc
(bad)
push
sub
call
mov
push
adc
cli
jle
pop
mov
sbb
cmp
mov
leave
sub
or
ins
inc
ins
add
add
loop
add
xor
xchg
or
adc
rol
mov
push
mov
movs
jb
and
add
stos
sbb
ins
mov
cmps
lods
inc
lea
xor
fidiv
in
xchg
les
jmp
sub
lods
jge
inc
inc
sub
out
sub
js
rol
xchg
ins
fldenv
in
sbb
mov
iret
lods
(bad)
lea
jo
sar
lea
cmp
stc
mov
ds
xor
dec
sbb
adc
adc
sub
xor
push
add
stc
jle
add
push
or
push
sahf
sbb
stos
leave
pop
sub
fsub
push
cmps
enter
push
sub
das
pop
push
les
cmp
ss
cmp
rol
xor
cwde
fisub
push
shl
loope
neg
cdq
push
sbb
les
fs
cmp
sahf
stos
xlat
mov
xchg
xor
arpl
cmp
retf
ret
lods
cs
pop
dec
jl
sbb
inc
push
mov
mov
sar
ror
push
stos
mov
(bad)
ds
(bad)
mov
mov
mov
cmp
daa
mov
enter
push
and
jg
imul
es
dec
scas
retf
push
test
hlt
mov
bnd
cmps
jmp
movs
sub
mov
lods
cld
sub
scas
mov
pop
lahf
or
mov
add
inc
movs
jl
cmps
fsub
mov
sbb
enter
and
clc
pop
ja
icebp
stos
sbb
imul
ret
in
adc
xchg
mov
push
pop
js
push
retf
cmp
mov
out
imul
ja
or
lock
(bad)
lods
icebp
dec
fcomip
movs
ins
ret
mov
enter
in
xor
daa
cmp
inc
(bad)
pop
and
jb
lea
lock
shr
test
ss
sbb
call
or
stos
stos
cmp
pop
fsubr
mov
popf
test
mov
rol
pop
hlt
sbb
add
ja
daa
sub
sub
mov
mov
hlt
push
(bad)
js
int
jbe
inc
push
mov
sahf
cmp
inc
xchg
jno
push
fnstenv
xor
pop
aaa
push
cmp
test
mov
dec
repnz
pop
ins
test
test
add
jge
sub
inc
xchg
jb
(bad)
sub
xchg
jl
test
mov
cmps
sub
xchg
js
cmp
test
mov
mov
jle
retf
into
es
loopne
repz
xor
pop
sub
(bad)
and
mov
ja
rcl
ins
jnp
addr16
pop
and
cdq
or
imul
xchg
mov
or
retf
jae
sti
pop
cs
add
push
dec
dec
lods
loop
xchg
mov
jg
mov
ss
push
outs
mov
cmc
jo
mov
pop
and
out
xchg
test
mov
xchg
mov
mov
hlt
mov
mov
mov
sub
mov
lods
push
loop
loopne
xchg
pop
cmp
in
js
(bad)
xor
inc
adc
inc
push
push
or
mov
sub
mov
mov
mov
pop
push
pushf
inc
adc
pop
ja
jae
pop
sbb
lods
fimul
or
add
pop
ja
and
sbb
jmp
push
add
rcl
(bad)
mov
outs
jecxz
test
xchg
(bad)
std
cli
pop
pop
retf
jp
add
pop
or
das
sub
or
jmp
adc
(bad)
adc
sbb
jg
mov
cmp
mov
popa
jge
xchg
loope
stos
ins
into
fisubr
sbb
fisub
inc
movs
sub
cmps
fst
xor
or
mov
or
retf
fucomi
add
test
mov
sbb
jmp
loopne
pushf
jle
aam
mov
xor
xchg
add
movs
pop
outs
sbb
mov
(bad)
xor
inc
dec
lods
jge
hlt
mov
adc
xchg
fs
cmp
mov
inc
push
push
mov
les
or
pop
adc
jae
sub
stos
out
cli
sub
fbld
jmp
cs
mov
xor
adc
sbb
(bad)
jae
sahf
mov
jmp
sub
pop
dec
outs
daa
pop
jmp
bound
sbb
mov
stc
popf
sahf
dec
add
jg
sbb
(bad)
movsx
and
mov
aaa
fstp
xor
stos
(bad)
xchg
icebp
inc
xchg
xor
cmp
mov
loopne
leave
push
xor
fs
es
sar
push
jno
ins
popa
cli
lahf
iret
or
adc
sub
arpl
scas
jl
mov
fisub
inc
sub
push
mov
fwait
call
int3
pop
retf
jo
or
les
movs
jns
or
jnp
sub
jmp
stc
sbb
jns
or
and
xchg
or
les
(bad)
adc
call
retf
aam
mov
xchg
or
push
js
push
jne
fs
and
dec
repz
jb
jns
mov
dec
adc
clc
(bad)
cmp
adc
dec
push
cmp
cmp
mov
or
movs
xchg
jbe
adc
mov
lods
and
lock
icebp
retf
bound
cmp
lds
icebp
add
jns
loope
xchg
and
or
mov
popa
pop
xchg
mov
call
push
(bad)
inc
mov
pusha
pop
mov
push
cwde
mov
push
xchg
and
sbb
bound
add
shr
dec
cmp
or
addr16
fdivr
inc
xor
and
jp
in
xchg
ficomp
std
ja
mov
push
in
das
icebp
addr16
fsubr
pop
out
std
std
out
push
dec
pop
xchg
sbb
pop
outs
(bad)
mov
pop
add
nop
fisub
and
add
scas
add
sub
das
xchg
mov
std
sbb
mov
or
repnz
movs
mov
scas
leave
inc
pushf
adc
ins
leave
ret
(bad)
int
add
add
loope
add
das
mov
xlat
pop
sub
enter
outs
lahf
cmp
inc
mov
push
fidivr
and
test
outs
mov
shl
sbb
xchg
pop
pop
cmp
xchg
popa
xor
loop
and
fld1
pusha
or
je
ret
inc
pop
dec
sub
dec
(bad)
push
push
out
xchg
movs
hlt
pushf
test
mov
es
call
shr
pop
rol
xchg
pushf
das
xor
pop
mov
add
jecxz
scas
or
jno
xchg
and
dec
je
mov
aam
cmc
shl
into
nop
test
mov
xor
or
(bad)
jae
push
and
xor
out
cmp
retf
sbb
rcr
add
pusha
mov
dec
aam
fistp
sbb
shl
popf
dec
test
push
dec
dec
mov
cmps
sahf
mov
mov
sbb
nop
out
(bad)
cmp
cmp
cmp
loopne
sahf
inc
or
fs
(bad)
es
popa
ja
not
loop
cmp
push
(bad)
lods
dec
jge
pop
and
cmps
inc
es
mov
pop
adc
stos
je
das
or
clc
pop
rol
in
ret
ins
int
inc
shr
pop
loop
cdq
out
les
jno
sti
les
jmp
xor
add
cdq
jb
imul
xchg
add
test
repnz
mov
btr
mov
pop
out
test
popa
add
das
mul
scas
and
mov
enter
int
in
lds
mov
add
ins
jg
sub
popa
add
scas
fidivr
scas
hlt
push
jl
in
nop
add
mov
xchg
and
jl
daa
inc
scas
xor
arpl
sub
int3
fidiv
loope
mov
out
cld
push
mov
sbb
js
sbb
mov
(bad)
out
xchg
dec
xchg
jno
cmps
test
icebp
in
test
inc
pop
enter
dec
fdivr
mov
or
out
mov
xchg
scas
or
neg
mov
xor
pop
cmp
xor
out
dec
mov
in
cmp
pop
ja
scas
adc
inc
dec
mov
dec
mov
neg
mov
js
cmp
mov
xchg
(bad)
mov
adc
sbb
stos
gs
mov
cmp
sar
xor
(bad)
cld
sbb
lods
jnp
js
inc
xchg
in
push
push
aad
lock
lock
add
sub
inc
sahf
call
jnp
bnd
or
pusha
arpl
(bad)
int
test
sub
push
dec
js
sub
test
sub
lods
lahf
loope
out
and
popf
add
enter
xchg
pop
aam
xchg
pop
mov
adc
pop
mov
pop
aaa
pop
push
lds
lods
aad
xchg
inc
jae
ins
pop
sar
rcr
test
mov
or
mov
addr16
mov
add
push
mov
pop
mov
cmp
popf
push
sbb
jnp
cmps
push
sbb
mov
mov
push
sbb
mov
xchg
mov
or
shr
sti
cmp
dec
popf
int3
mov
in
mov
mov
and
xchg
inc
fcomp
out
sub
fiadd
fcom
mov
jnp
jp
xchg
sbb
adc
mov
dec
lods
fcomp
aam
push
mov
add
or
leave
lds
mov
iret
sar
push
sbb
xchg
sar
mov
pop
jle
inc
xor
push
cdq
push
(bad)
push
mov
pop
xlat
pop
test
sbb
fcmovu
dec
cmp
xchg
lahf
pop
rcl
add
(bad)
cmp
pop
or
outs
add
push
loope
cwde
push
xlat
out
sub
dec
shr
mov
push
pop
mov
sbb
imul
in
mov
xchg
into
int3
out
test
cmc
into
outs
imul
push
lds
cmps
into
aam
clc
dec
mov
test
ss
test
and
push
mov
jle
dec
inc
js
ret
inc
loope
aas
not
jmp
bound
or
pop
dec
ficomp
adc
out
mov
add
bound
mov
mov
cmps
add
or
push
xor
mov
push
imul
(bad)
arpl
je
clc
and
daa
mov
lods
shl
mov
mov
sub
cli
scas
mov
test
sar
lock
cmps
test
pushf
cli
mov
and
jge
test
mov
enter
mov
inc
les
jmp
jne
movs
sbb
call
xchg
xchg
and
call
add
xchg
or
mov
dec
nop
cmp
leave
nop
fst
cld
stc
sahf
stos
sub
aad
fisttp
cwde
out
mov
add
sub
loop
jp
fstp
int3
into
xchg
cli
dec
mov
inc
adc
mov
loope
fiadd
xor
daa
fbstp
test
xchg
mov
jmp
popa
fdiv
movs
test
sbb
int
pop
mov
add
ja
fbld
lahf
jne
jbe
push
into
sbb
xchg
xor
dec
pop
mov
dec
push
cmp
lahf
push
rol
nop
lock
loope
fwait
movs
mov
push
mov
inc
mov
mov
int
add
cmp
repnz
mov
call
enter
jp
sbb
dec
outs
sub
sahf
les
loop
movs
or
outs
sub
loop
call
push
xchg
cmp
bound
mov
stos
out
fsubr
adc
repnz
inc
mov
xor
or
leave
or
xor
jne
call
mov
mov
mov
sbb
add
fisttp
sbb
into
push
pop
shr
cmp
and
mov
xchg
jbe
mov
xchg
fcom
jmp
ror
out
sub
sbb
push
push
push
xor
sahf
int
inc
add
ins
push
sbb
dec
std
jno
in
push
cmp
mov
mov
ja
dec
sub
fcomp
rol
fdivr
daa
(bad)
add
adc
xchg
sbb
out
inc
fstp
jns
fild
outs
pop
sub
dec
mov
mov
or
mov
adc
inc
adc
xor
ret
xchg
mov
shl
rol
push
pop
repnz
out
std
js
mov
jge
jno
mov
mov
sub
neg
dec
xchg
sbb
pop
(bad)
cmc
pop
mov
or
sar
(bad)
sar
mov
xchg
fsubr
addr16
cmp
lahf
sar
xlat
stos
in
addr16
add
jae
xor
cmps
into
out
or
daa
push
nop
pop
ret
xor
fistp
sbb
push
xchg
loop
adc
je
push
jb
mov
or
(bad)
mov
cmc
and
push
xor
inc
jns
dec
xchg
leave
mov
aam
stos
fwait
sbb
leave
call
cli
add
sub
add
mov
pop
retf
imul
sub
(bad)
(bad)
cmp
dec
je
rcr
add
imul
sbb
xlat
add
popa
iret
cdq
cs
mov
addr16
mov
adc
adc
sti
push
mov
scas
xor
xor
dec
(bad)
scas
adc
push
sub
inc
jg
adc
pusha
aas
inc
cmp
push
cmp
ins
or
movs
nop
and
fwait
icebp
inc
sahf
lds
dec
push
push
sqrtps
jle
es
inc
inc
mov
ret
aam
jae
mov
popa
push
outs
daa
sub
icebp
mov
outs
cmp
lahf
sbb
mov
sub
xlat
mov
pop
shl
ins
jnp
mov
sbb
out
das
push
or
sbb
mov
mov
inc
popf
adc
pop
dec
lods
xor
jo
fwait
jmp
jae
setp
lahf
sti
fcom
rol
aas
vpsubusw
mov
loope
mov
fidivr
mov
sub
(bad)
xchg
and
or
call
ror
xchg
mov
mov
call
rcr
icebp
sti
outs
sbb
leave
xchg
xor
enter
inc
sbb
hlt
xor
into
(bad)
in
pop
jae
push
aam
lods
jns
mov
mov
jmp
out
stos
add
ret
xor
call
aaa
pop
(bad)
test
cmp
cmps
in
test
xlat
mov
add
inc
and
jg
dec
popf
push
(bad)
arpl
int
(bad)
and
pop
push
fidivr
xchg
sub
les
shr
lods
xchg
(bad)
cwde
push
xchg
enter
fmul
scas
std
mov
pop
lods
adc
push
dec
call
sub
push
ins
(bad)
xchg
jnp
dec
sub
jle
sbb
jmp
dec
sub
mov
cmc
pop
fisub
xchg
ins
lods
scas
push
mov
mov
pop
addr16
test
mov
pop
bound
cmp
movs
in
in
add
dec
push
imul
div
xor
xlat
call
bound
fmul
and
sub
jl
or
(bad)
dec
jle
mov
mov
mov
imul
adc
fbld
add
or
add
and
imul
mov
xchg
mov
inc
scas
test
movs
add
(bad)
cmp
fist
clc
xchg
loopne
mov
test
outs
or
inc
sub
out
cmp
arpl
jnp
jg
stos
arpl
sbb
sbb
pop
xor
and
jbe
push
xchg
xchg
lock
lahf
sub
pop
fld
icebp
xchg
push
cmp
aaa
xchg
int
(bad)
aas
sbb
dec
xor
ret
cmp
jo
mov
xor
mov
inc
je
inc
stos
cli
and
dec
sub
(bad)
cwde
jle
or
call
(bad)
or
sub
lods
xchg
sub
es
dec
iret
cmp
or
sar
(bad)
sub
rcr
cld
cmp
(bad)
inc
das
mov
shl
pop
scas
movs
stos
dec
adc
sub
test
loopne
pop
mov
dec
in
mov
mov
(bad)
mov
mov
pop
and
push
shl
or
fwait
stc
aad
inc
jle
xchg
jno
js
dec
dec
add
loope
mov
and
movs
lock
adc
out
pop
push
stc
adc
or
mov
cmp
shl
add
cmps
mov
cmp
xchg
inc
inc
mov
cwde
pop
sub
adc
jge
and
inc
cmp
or
call
pop
mov
cs
or
fwait
nop
retf
cmp
mov
mov
cmp
xchg
and
test
leave
sbb
jno
and
mov
fidiv
fcomip
pop
dec
xchg
jge
(bad)
stos
es
add
ret
pop
cld
repz
out
(bad)
sbb
pop
ins
jp
jo
xor
mov
or
push
sbb
js
test
cmp
and
shl
jne
movs
fucomip
add
scas
(bad)
rcl
xor
mov
aas
xor
retf
pop
or
mov
(bad)
cmps
xor
xchg
hlt
aad
mov
bound
in
push
or
(bad)
scas
mov
rol
mov
cmc
idiv
jo
pop
sbb
pop
adc
inc
je
mov
jnp
and
icebp
stos
pop
in
sbb
mov
cmc
and
sub
test
mov
jo
push
sti
leave
pop
jg
scas
xchg
cmps
xorps
xor
loope
int3
add
jnp
add
dec
xchg
nop
pop
xchg
sub
int3
xor
xchg
and
movs
xor
mov
pop
scas
shl
test
je
call
je
jno
loop
cmp
mov
daa
mov
gs
xlat
push
pop
mov
xchg
dec
pop
xor
repnz
inc
cld
(bad)
cld
imul
push
adc
mov
push
cmps
je
call
mul
mov
cmp
xor
push
cmp
sbb
inc
mov
movs
push
ror
dec
mov
stos
ss
push
xchg
rcl
and
rol
xchg
es
mov
out
inc
fisttp
pop
add
cmp
jb
dec
mov
ss
mov
sub
cmp
cmp
retf
sti
fprem1
cdq
adc
sub
popa
pop
sbb
dec
push
mov
loop
pop
js
repz
sub
inc
addr16
dec
jl
lahf
test
inc
mov
je
push
call
mov
fcomp
and
cmp
movs
dec
in
inc
arpl
movs
mov
lea
int
and
mov
push
rcl
jns
std
(bad)
scas
push
or
loope
push
dec
dec
or
data16
inc
int3
add
mov
cmps
push
mov
test
(bad)
xchg
out
bound
sbb
out
cmps
(bad)
dec
lods
cmc
mov
cmp
loop
add
stc
hlt
sbb
sbb
jp
fwait
jae
mov
call
retf
scas
test
or
or
dec
cmps
jo
jge
pop
in
mov
add
mov
xchg
xchg
add
sbb
or
push
add
pop
out
push
push
and
push
imul
or
hlt
ficom
punpckhdq
mov
les
mov
ds
mov
out
mov
jns
mov
inc
cmp
adc
and
push
mov
dec
sbb
enter
adc
fidiv
test
or
mov
movs
call
lods
sar
retf
scas
pop
jnp
leave
arpl
cmp
arpl
jl
sub
aaa
jne
xor
inc
mov
pop
mov
dec
dec
push
or
arpl
mov
(bad)
jmp
pushf
push
gs
dec
sar
cdq
mov
shr
hlt
sub
mov
cmp
lahf
es
push
test
idiv
rcl
pop
outs
jge
mov
sbb
sub
je
inc
dec
aaa
xchg
pushf
stos
fiadd
aam
lods
mov
jmp
jmp
sub
xor
adc
out
add
jecxz
out
sti
sub
enter
cli
(bad)
fmul
dec
call
xchg
out
adc
scas
(bad)
mov
ret
sub
nop
out
push
call
sbb
lods
and
add
sahf
aas
int3
fld
stos
push
dec
inc
mov
pop
add
fisttp
and
loop
xor
out
or
jl
mov
and
sub
mov
(bad)
fcomp
(bad)
int
or
pop
and
fst
scas
call
addr16
sbb
mov
aas
mov
icebp
add
ins
add
imul
sub
outs
(bad)
fcomp
jbe
stc
leave
sbb
aaa
add
mov
fs
or
mov
retf
cdq
loopne
ret
jl
(bad)
xor
dec
call
adc
cmp
es
fadd
adc
xchg
push
retf
ds
adc
pop
add
ror
xchg
mov
xor
aaa
or
aam
call
inc
adc
test
arpl
stos
push
push
sahf
push
mov
dec
jl
sbb
mov
sub
xchg
pushf
jbe
call
(bad)
out
icebp
adc
(bad)
pop
xor
mov
fisub
cmp
dec
cmp
xor
fcmovne
loopne
cmp
clc
xchg
cld
or
and
inc
enter
(bad)
addr16
cmp
jl
cmp
jp
cs
mov
add
push
adc
jnp
icebp
xchg
ins
dec
loope
inc
cmp
rcl
test
rcr
clc
bound
xchg
retf
xchg
lahf
ja
cli
lods
jns
dec
out
mov
jno
loopne
xor
nop
rol
movs
xchg
pop
scas
pop
mov
lods
push
test
idiv
retf
add
mov
add
sbb
sahf
repz
xor
cmp
std
loop
call
push
scas
push
add
into
push
es
xchg
mov
mov
add
stos
xchg
pushf
cmp
xor
push
call
inc
xor
into
iret
movs
or
sti
outs
and
cmc
lods
retf
adc
mov
sahf
jl
mov
gs
and
dec
clc
and
add
push
(bad)
not
xor
mov
cmps
stos
(bad)
xor
and
dec
xchg
cdq
pusha
cs
stos
add
imul
xchg
in
jo
(bad)
inc
(bad)
mov
mov
sbb
lea
jae
scas
pop
test
int3
push
inc
aad
inc
push
jmp
mov
fst
xchg
mov
and
call
mov
das
cmp
in
lahf
mov
pushf
push
mov
mov
pop
mov
call
pop
and
mov
pop
gs
repnz
jecxz
lods
jle
repz
das
mov
jmp
and
test
popf
imul
leave
pop
jge
retf
enter
imul
jp
leave
pop
rol
aas
das
pop
shl
inc
pop
repz
push
xchg
cli
add
(bad)
rol
ja
rcr
pop
adc
jae
jbe
loopne
push
adc
nop
add
adc
loop
sub
mov
retf
mov
jp
cdq
bound
push
xor
cwde
hlt
xchg
dec
jno
into
and
repnz
mov
dec
sbb
pop
ficomp
xor
dec
mul
pop
or
sub
mov
fnsave
and
cmps
and
retf
ss
or
pop
mov
push
(bad)
sbb
in
inc
mov
push
stos
in
popa
sbb
cld
cmp
movs
mov
mov
pusha
sub
popf
js
sti
out
nop
fisubr
fimul
popa
stos
outs
ins
inc
jecxz
xlat
in
cmps
stos
inc
adc
inc
adc
je
iret
popa
xor
pushf
(bad)
jp
shl
test
push
ss
into
or
jb
jmp
push
cli
xor
loope
je
movs
mov
pop
xchg
pop
push
mov
outs
xor
movs
fldenv
xor
mov
ret
loope
add
pop
sbb
push
in
sub
dec
daa
icebp
fiadd
aas
mov
test
inc
hlt
mov
dec
int3
test
and
cmp
cmp
xchg
fistp
nop
je
or
inc
retf
shr
or
cmps
cld
dec
mov
mov
sub
js
sbb
lock
fwait
rcr
dec
aam
rcr
aas
push
mov
xchg
mov
sbb
rcl
adc
in
cmp
pop
(bad)
js
xchg
out
inc
inc
lahf
push
mov
(bad)
out
int3
ret
inc
fild
cmc
mov
popf
in
fistp
mov
sub
jo
adc
cmp
xor
jmp
sar
push
dec
lods
sub
mov
nop
outs
mov
jg
jg
ds
pop
adc
or
cmps
pop
sbb
jns
adc
jae
arpl
test
ins
adc
mov
aam
pop
jmp
sahf
das
(bad)
fstp
mov
or
cmp
stc
dec
mov
inc
xchg
shr
enter
jno
popa
mov
dec
and
jae
dec
push
or
xor
aad
movs
xchg
xchg
outs
adc
fdiv
mov
sbb
les
cmp
dec
push
pusha
les
aaa
mov
int
mov
mov
sar
cmps
outs
test
mov
jno
and
inc
pusha
loop
icebp
fimul
jle
je
dec
outs
sbb
(bad)
loop
dec
aam
and
ss
movs
loope
xchg
dec
lahf
push
pop
jg
or
mov
mov
mov
clc
lahf
cmp
cwde
jg
imul
or
in
pusha
leave
or
mov
cmp
jns
mov
mov
test
jp
xor
mov
pop
sbb
adc
jb
mov
cmp
fwait
and
fwait
jmp
lahf
aad
xor
enter
cmp
jnp
int
dec
in
push
inc
jae
(bad)
mov
cmp
(bad)
jno
stos
pushf
jmp
and
mov
ins
jp
xchg
ds
fwait
jne
retf
clc
dec
inc
mov
vmaxsd
pop
inc
bound
cmps
lods
icebp
and
out
pop
or
sub
jb
ins
je
call
leave
test
hlt
xchg
cs
cmc
les
sahf
ins
popa
push
sub
pop
out
and
pop
cmp
arpl
xor
ss
loope
xchg
dec
jne
(bad)
sub
loope
add
xchg
jge
mov
dec
fcomp
mov
(bad)
cmp
addr16
rcpps
push
pop
imul
dec
mov
sub
pop
xchg
mov
(bad)
or
and
jecxz
push
movs
ja
int3
nop
rcr
sub
fcmovne
mov
xchg
aam
jne
stc
iret
push
stos
test
lods
adc
nop
sub
out
daa
(bad)
xor
push
(bad)
(bad)
pushf
loop
cmp
outs
xor
cmps
repz
test
in
push
xor
jbe
dec
xchg
adc
neg
rcl
mov
sbb
mov
in
jns
xor
addr16
popf
icebp
or
stc
fs
dec
inc
aaa
ds
cmp
inc
into
scas
daa
hlt
ins
xchg
pop
movs
(bad)
pop
inc
inc
ins
imul
pop
in
jnp
pop
push
push
mov
retf
in
dec
mov
sub
(bad)
iret
push
test
fisttp
xchg
sub
in
sub
add
adc
mov
outs
(bad)
or
pop
sbb
loope
mov
lahf
shl
out
cmp
push
bound
inc
mov
push
inc
xor
(bad)
sbb
shl
mov
rcl
push
cwde
add
dec
xor
cdq
aad
xchg
and
(bad)
or
jb
and
cmps
or
cmp
jmp
jmp
jbe
jae
cmps
jns
jp
shr
fsubr
cmp
int3
clc
sbb
sub
cmp
cs
das
mov
icebp
fisttp
lods
inc
add
mov
mov
mov
mov
mov
adc
mov
and
jg
retf
jle
(bad)
popa
ss
adc
popa
mov
inc
and
addr16
mov
cmps
clc
retf
data16
xor
push
out
xchg
imul
or
mov
repz
push
push
lods
fcom
mov
sbb
mov
das
shl
repz
mov
mov
ret
fs
shl
into
jne
call
dec
dec
retf
cmps
ins
xchg
test
mov
popa
imul
daa
push
sahf
push
cwde
mov
cli
mov
xchg
outs
sbb
add
adc
fwait
jno
ss
and
mov
les
xchg
(bad)
pop
push
jecxz
lahf
movs
lods
xchg
inc
cmps
push
sbb
mov
push
lahf
scas
xor
loopne
data16
outs
bound
push
fabs
jns
in
pop
add
int3
cmps
jnp
jecxz
(bad)
scas
adc
xchg
push
daa
dec
cmp
jecxz
cmps
fstp
mov
mov
je
loope
scas
imul
adc
lds
pusha
int
cmp
mov
div
push
or
in
push
add
sbb
mov
pusha
(bad)
repnz
cmps
mov
sub
jmp
adc
jmp
shl
(bad)
lock
ss
xor
fld
xchg
retf
jmp
sub
xor
mov
or
push
jl
xor
inc
push
out
xor
xor
jbe
shl
das
cmp
xor
cmp
mov
popa
xor
jg
mov
ret
xchg
push
jl
cwde
xchg
push
xor
jmp
in
and
fdivrp
das
fsubr
lods
xchg
xchg
adc
pop
and
lahf
pop
and
fwait
pop
cmp
mov
push
cmp
(bad)
int3
push
out
aam
xchg
clc
fnstsw
loopne
mov
mov
mov
mov
das
(bad)
mov
jecxz
cwde
pop
mov
jne
mov
loopne
jp
jnp
iret
shl
popf
cmp
xor
jnp
sbb
add
add
mov
push
sub
test
lock
dec
xlat
jmp
mov
jl
jp
sub
daa
daa
inc
push
jle
enter
dec
and
sub
mov
sbb
push
in
mov
xchg
sub
dec
scas
fs
push
add
mov
aaa
loop
das
inc
imul
xor
loope
neg
dec
shl
add
or
ret
jno
dec
cmp
inc
jns
sbb
mov
imul
push
push
stos
jae
sub
jmp
xchg
pop
in
add
jmp
xchg
rcl
xor
das
sub
cmp
or
adc
add
xlat
inc
ror
jecxz
cmp
fnstenv
jge
call
jbe
mov
aad
loopne
retf
ss
dec
jo
push
mov
push
aad
les
or
movs
inc
and
push
mov
jmp
sbb
pop
push
(bad)
fiadd
js
stc
pushf
jmp
xor
mov
mov
sbb
push
and
retf
adc
cli
pop
dec
xchg
jmp
mov
sbb
in
cld
shl
cmp
lods
test
mov
or
push
mov
ret
dec
dec
sub
into
push
dec
push
pop
loope
xchg
ret
mov
fisttp
cmp
stos
mov
adc
adc
test
jecxz
(bad)
jns
xchg
mov
arpl
aaa
dec
fnstsw
in
sub
mov
fild
or
pop
enter
sub
mov
enter
mov
aaa
loope
pusha
xchg
ja
stos
push
ja
and
int3
lock
and
std
sub
jecxz
mov
add
add
jo
sub
cmp
sub
or
jne
cli
les
js
inc
nop
sbb
popf
hlt
adc
mov
sub
js
data16
pop
cmp
outs
hlt
mov
lods
call
xlat
dec
mov
adc
push
es
ss
inc
mov
cmp
jbe
daa
dec
push
bound
pop
mov
pop
fldcw
(bad)
mov
jne
jnp
sbb
add
imul
and
dec
sub
inc
jbe
add
fwait
(bad)
out
scas
bound
ja
call
mov
xchg
push
sub
ja
call
test
xor
and
and
lock
ja
jbe
fwait
aaa
xor
ret
sub
mov
pusha
or
imul
fld
sbb
push
pop
dec
shl
daa
mov
xchg
enter
sub
dec
inc
out
push
ret
xor
rol
imul
xchg
mov
push
sbb
nop
cmp
adc
sub
mov
aam
add
xor
cmps
ins
mov
pusha
and
and
xchg
pop
into
mov
aaa
or
into
sti
or
dec
ds
push
outs
jo
dec
push
xchg
mov
cmps
or
rol
jge
dec
push
mov
inc
das
or
mov
sbb
add
retf
sti
and
aam
scas
pop
pop
leave
pop
push
dec
popf
iret
inc
xchg
bound
ja
popf
test
gs
mul
inc
mov
hlt
add
pop
push
mov
add
bound
inc
(bad)
sbb
mov
sahf
dec
test
and
aaa
inc
aaa
push
repz
push
shr
daa
push
outs
retf
adc
sub
loop
pushf
stos
sbb
enter
push
lds
nop
fnstsw
dec
pop
inc
adc
pop
mov
jns
cmp
stc
jl
jg
adc
ds
xchg
add
inc
add
dec
scas
sub
stos
aad
enter
adc
ror
inc
ror
(bad)
xchg
pop
xchg
clc
xor
loopne
shl
or
dec
in
out
push
pop
pushf
xor
outs
pop
inc
dec
xor
test
dec
ja
test
jae
and
jle
jae
cwde
push
jb
into
xor
retf
mov
and
aaa
jo
stos
add
cld
jnp
(bad)
and
cmps
cmp
out
addr16
aad
inc
mov
add
not
cmp
jo
jns
imul
sar
std
(bad)
sub
mov
and
mov
fnsave
inc
into
or
dec
xchg
sbb
mov
sub
out
std
mov
jp
xchg
sub
push
mov
daa
ds
push
ins
xor
daa
(bad)
es
popa
es
adc
cdq
dec
cwde
mov
jbe
jbe
adc
hlt
mov
cwde
dec
jmp
cmp
nop
(bad)
xchg
movs
movs
cmp
sbb
dec
pop
mov
push
mov
(bad)
xor
cdq
sbb
mov
int3
call
bound
add
js
test
retf
data16
cmp
ret
cmp
test
in
mov
pop
mov
sbb
(bad)
mov
xor
rol
mov
test
imul
call
rcr
dec
jmp
jle
push
ret
std
pusha
mov
jne
jne
rcr
push
sub
test
aam
aas
push
or
sbb
push
ins
xadd
mov
ds
mov
xchg
mov
mov
mov
adc
popf
dec
dec
scas
pushf
vprotq
mov
and
mov
mov
push
pusha
test
pop
(bad)
mov
lahf
jno
add
retf
mov
jmp
sub
out
dec
idiv
retf
push
or
xor
lds
movs
(bad)
mov
xor
test
mov
adc
lods
icebp
int
mov
cwde
icebp
push
push
sahf
inc
ficomp
pop
rol
cmp
popa
ret
jnp
clc
pop
jecxz
sub
inc
outs
imul
or
shr
or
daa
cmc
in
fnsave
adc
jge
rol
fs
cmps
cmps
retf
pop
add
es
sti
ss
ja
mov
jb
test
sbb
outs
call
enter
inc
ins
shr
push
ss
fsub
mov
pop
jl
std
das
add
mov
adc
mov
add
loop
cmp
sbb
mov
call
sub
xor
mov
imul
scas
dec
test
mov
inc
jp
retf
test
or
retf
pop
push
scas
jnp
sar
in
movs
outs
mov
stos
fs
popa
jo
and
jo
jne
mov
out
mov
sbb
add
mov
push
adc
ror
cmp
nop
lods
push
push
das
clc
add
mov
fs
imul
pop
test
pop
div
dec
stos
lea
ret
inc
mov
stos
xor
push
popf
or
and
mov
add
call
sbb
xor
ins
fwait
in
sbb
cmp
aad
ret
push
dec
(bad)
xchg
cdq
or
sub
clc
sbb
and
adc
mov
mov
add
and
mov
cmp
mov
call
fstp
test
and
cmp
dec
stos
dec
xchg
dec
sbb
xchg
sub
(bad)
cmp
inc
push
cmp
fld
push
stos
stos
cmp
mov
mov
and
add
inc
inc
inc
sti
jp
xor
aam
mov
and
or
scas
mov
pop
stc
outs
push
out
ins
ret
loop
mov
cmp
sub
(bad)
pusha
mov
ins
loopne
mov
scas
jo
jle
add
in
mov
(bad)
adc
int3
inc
mov
jecxz
inc
mov
mov
and
sti
js
mov
xchg
idiv
lds
in
hlt
rcr
xor
outs
sub
fsubp
les
and
pusha
xchg
xor
xor
jp
int3
test
adc
add
sbb
pop
jecxz
nop
test
and
mov
test
cmp
mov
jne
add
shl
sub
leave
sahf
fdivr
mov
aad
inc
sub
(bad)
outs
inc
xor
out
or
gs
lods
push
push
iret
jae
sub
mov
sub
clc
jp
xchg
or
push
popf
fstp
pop
aas
(bad)
push
mov
addr16
pop
mov
jo
hlt
imul
fadd
ret
inc
mov
nop
jmp
sahf
(bad)
out
xor
pop
js
data16
lods
jae
sub
rcl
outs
push
xchg
mov
popa
or
add
jns
and
mov
add
cmps
dec
jecxz
push
pop
ins
inc
(bad)
mov
jbe
neg
(bad)
out
daa
sbb
pop
or
add
fwait
sbb
add
movs
call
pop
test
jns
mov
mov
sub
xor
shl
add
mov
xchg
fmul
popa
test
fild
mov
sub
mov
fisub
ja
jecxz
icebp
sahf
adc
jns
lahf
mov
(bad)
mov
repnz
adc
jge
jne
loop
pop
std
fmul
imul
adc
inc
test
dec
lock
loop
cmp
pop
inc
stos
lods
sub
pop
gs
pop
mov
stos
or
push
loop
mov
mov
mov
ds
cmc
lahf
push
int
arpl
jle
inc
test
sbb
mov
and
or
leave
cli
arpl
pushf
cli
cmp
sub
retf
push
test
jge
mov
ins
jmp
jg
idiv
dec
and
or
dec
ror
adc
nop
(bad)
clc
js
push
push
add
(bad)
in
dec
mov
sub
(bad)
mov
imul
pop
test
jmp
cmp
cmp
mov
das
pop
mov
into
into
in
xchg
mov
mov
and
shr
aad
mov
(bad)
call
or
push
jmp
lods
sub
jbe
dec
or
push
movs
sub
pushf
xor
fwait
hlt
retf
loope
mov
out
test
push
sbb
jo
test
add
out
movs
push
ds
and
jne
mov
or
cmp
mov
aam
fxch
dec
loope
mov
inc
mov
cmp
mov
pop
into
(bad)
sbb
mov
add
mov
push
in
mov
stos
call
neg
inc
mov
add
pop
clc
push
push
loope
sub
retf
aam
dec
int3
(bad)
cdq
lock
stc
loope
add
sub
jg
or
adc
in
in
out
mov
int
xchg
jmp
rcr
clc
push
cmp
bound
mov
pop
add
stc
mov
cmp
(bad)
xchg
sbb
js
leave
enter
xchg
das
stc
rcr
(bad)
arpl
imul
mov
ins
pop
aaa
and
daa
(bad)
int3
pop
imul
nop
sbb
test
mov
js
push
lods
xor
and
or
jecxz
clc
mov
jmp
ror
xor
pop
in
and
fcmovbe
mov
es
rol
fst
ins
hlt
jge
hlt
fnstcw
js
add
mov
bound
cmc
(bad)
mov
jnp
prefetch
dec
push
adc
sbb
inc
popa
cwde
ja
sahf
sahf
mov
(bad)
xchg
inc
pop
mov
aas
or
mov
mov
gs
clc
rcl
out
jecxz
sbb
pop
or
pop
mov
(bad)
(bad)
iret
imul
xchg
das
pusha
idiv
and
cmp
fwait
and
mov
sub
and
mov
push
mov
pop
push
mov
push
mov
(bad)
and
aam
mov
lea
ror
adc
fisttp
loopne
mov
test
jae
sub
shl
cmp
ja
and
(bad)
fdiv
jmp
imul
ss
or
adc
push
dec
fwait
sbb
mov
outs
imul
test
repnz
xchg
dec
inc
je
dec
push
mov
test
cmp
(bad)
movs
popf
jp
sti
rep
pop
push
cmp
inc
popa
mov
sbb
xor
into
xchg
cli
mov
jecxz
int3
outs
push
jle
popa
xor
cmps
mov
mov
pop
inc
in
out
inc
fwait
scas
or
in
sub
push
mov
and
mov
push
jmp
ret
sbb
mov
ds
or
fnsave
js
push
cmps
mov
jp
into
mov
in
push
cmps
sbb
or
xchg
xor
push
jmp
adc
cmp
jmp
sbb
(bad)
mov
xor
movs
out
xchg
scas
lods
fnstcw
jmp
sub
sub
adc
fdivr
mov
xchg
out
pop
imul
pop
out
push
add
pop
fcomp
call
sbb
sub
in
js
mov
hlt
xchg
adc
imul
scas
shr
cmc
adc
or
sar
mov
xchg
or
adc
mov
inc
daa
dec
loopne
mov
or
test
test
and
in
inc
push
iret
stos
adc
stos
js
dec
mov
imul
or
int3
xchg
xchg
test
fld
daa
mov
fisubr
test
jno
ja
and
aam
push
in
mov
daa
fcmovu
adc
lsl
fcom
aam
bndstx
mov
or
jo
xor
sbb
mov
mov
mov
sbb
aad
push
cmp
pop
dec
pushf
sub
mov
ja
or
repnz
sub
jnp
pop
and
sahf
xchg
stc
icebp
xor
sbb
sub
bound
int3
out
fild
mov
sub
(bad)
movs
push
aam
(bad)
fsubrp
xchg
dec
sbb
cli
or
cmp
push
sub
lea
add
fiadd
dec
int3
jmp
dec
jecxz
xor
adc
fisttp
push
pop
into
cmp
into
in
es
or
mov
xlat
lock
idiv
test
push
into
shl
dec
jb
pusha
ss
mov
push
mov
das
pop
or
pop
stos
in
and
mov
push
les
dec
into
or
xchg
imul
push
jecxz
jl
push
dec
xor
jns
cmp
or
cmp
leave
push
push
push
movs
and
fmul
into
or
sbb
adc
sub
nop
fisub
lods
sbb
sub
pop
mov
mov
cmp
test
cmp
mov
mov
push
xchg
repz
xchg
cdq
std
pop
inc
or
xchg
retf
xor
jmp
xchg
pop
test
mov
sahf
push
mov
aam
sahf
mov
jae
and
imul
dec
add
lahf
add
xchg
push
movs
push
out
fldenv
pop
sbb
pop
shl
sbb
mov
inc
in
sti
and
sub
call
pop
outs
dec
ins
ins
fidiv
pop
pop
rol
push
cdq
push
and
mov
sbb
push
es
adc
xchg
lock
cmc
cli
retf
xor
push
pop
mov
sub
pop
mov
addr16
or
cli
in
cmps
sub
mov
addr16
(bad)
lds
pop
sbb
add
std
pop
loope
lods
dec
jmp
cmp
jmp
add
inc
addr16
mov
(bad)
pop
(bad)
dec
add
fstp
mov
(bad)
in
and
mov
aam
and
popa
mov
imul
push
mov
inc
(bad)
in
dec
push
in
fimul
addr16
ds
scas
and
imul
cmp
mov
icebp
pop
mov
shl
div
aad
jo
adc
outs
out
repz
pop
movs
jecxz
push
rcr
pusha
in
call
and
out
push
popa
sub
scas
data16
xor
or
test
in
mov
sub
pop
daa
aad
cmp
xlat
jnp
addr16
lahf
repz
and
and
push
mov
and
adc
test
imul
adc
lods
cli
popa
into
cmp
fild
jnp
xchg
ss
scas
xor
int3
std
add
iret
cmp
pop
mov
fistp
sbb
sbb
pop
movs
fbstp
inc
jl
push
imul
mov
repz
push
sbb
and
fdivrp
add
scas
jg
ins
repz
mov
pop
cwde
inc
mov
rcr
rol
dec
in
xchg
outs
stos
inc
fisttp
add
je
shr
xlat
jb
dec
test
push
xchg
push
mov
movs
or
(bad)
out
fs
inc
icebp
sbb
cwde
pop
fimul
mov
dec
sub
ficomp
fcom
mov
cli
pusha
mov
xchg
and
hlt
addr16
arpl
rcr
(bad)
and
lds
int3
mov
sub
fwait
loop
jo
mov
cmps
adc
sahf
jmp
shl
cdq
dec
sub
or
mov
add
outs
xor
xchg
es
(bad)
xchg
inc
jecxz
test
in
in
pop
mov
mov
mov
(bad)
call
(bad)
sub
cmps
imul
or
lock
cs
test
push
test
loope
mov
clc
mov
inc
push
or
popa
test
arpl
pop
aam
jae
jle
mov
push
lea
rcl
in
mov
arpl
sar
add
sbb
fwait
in
mov
data16
nop
cmp
mov
std
dec
dec
scas
jge
push
mov
xchg
or
mov
mov
and
mov
scas
xor
ret
mov
imul
cmp
adc
movs
stc
ss
arpl
leave
pop
das
popf
mov
mov
mov
ror
adc
push
xchg
sub
sbb
inc
mov
mov
add
sub
mul
push
std
inc
pop
(bad)
mov
imul
adc
and
sub
scas
daa
enter
mov
cld
mov
lods
dec
jge
xchg
add
cdq
or
lahf
into
or
lea
jnp
mov
cwde
je
and
mov
adc
add
movs
into
inc
sub
xchg
pop
ins
add
xchg
ret
xchg
inc
ret
add
and
xor
ins
cmp
push
cdq
push
dec
movs
retf
dec
add
and
xor
sbb
fadd
adc
popf
xor
ja
push
(bad)
mov
(bad)
push
lahf
jae
outs
xor
stos
xchg
jne
(bad)
mov
test
jmp
xchg
ds
cmps
icebp
ins
sti
pop
aaa
retf
sbb
jae
in
sbb
pop
sub
dec
dec
minps
sar
add
(bad)
sbb
xchg
xchg
mov
int
sbb
out
ins
cmps
push
and
aad
dec
ja
sbb
int3
mov
sbb
push
bound
or
dec
cmp
mov
int3
and
(bad)
out
sub
mov
jl
jle
or
test
arpl
imul
test
fnsave
sbb
adc
add
ret
adc
cmps
push
xor
mov
push
aad
scas
ins
cmp
(bad)
sbb
scas
mov
das
pop
mov
shr
test
jbe
ret
xchg
not
in
(bad)
xchg
mov
int3
jecxz
jo
stos
xchg
or
xlat
pop
aas
and
adc
sbb
push
rcr
fs
fdiv
push
pop
sub
push
sub
fs
aaa
fwait
pusha
or
cwde
mov
jg
mov
test
pop
imul
inc
js
and
nop
pusha
mov
adc
fcomp
add
in
jne
imul
pusha
icebp
or
fdiv
push
push
and
dec
or
push
outs
xchg
repnz
pop
fwait
mov
inc
retf
(bad)
test
daa
inc
push
into
pushf
push
lds
adc
jns
pop
adc
lahf
test
loope
rcl
pop
sub
lgs
cmc
in
mov
dec
ret
jge
jmp
hlt
in
loop
cwde
xchg
popa
mov
pop
mov
jl
or
and
jp
lock
outs
dec
xchg
fwait
iret
cs
sub
test
dec
fldenv
mov
xchg
scas
and
sar
stc
inc
jne
or
enter
mov
adc
data16
lahf
xor
xchg
ins
or
xor
jmp
and
ins
mov
inc
scas
push
and
xchg
loop
jno
in
adc
ror
add
jns
lds
iret
shl
inc
leave
and
data16
sar
cwde
pop
jle
dec
(bad)
jl
and
jnp
enter
cli
(bad)
or
dec
cwde
enter
push
call
push
mov
in
iret
cdq
shrd
scas
mov
inc
into
lods
adc
mov
push
push
lds
dec
(bad)
inc
aam
sbb
or
mov
(bad)
test
repz
and
add
mov
sub
mov
dec
inc
mov
xchg
out
inc
ja
add
outs
sub
inc
loop
mov
or
xlat
pop
mov
lock
mov
ins
retf
std
call
or
adc
call
push
mov
push
test
jne
nop
push
stc
inc
jecxz
jae
push
sbb
aad
popa
dec
pop
stos
out
bound
mov
xor
arpl
jmp
sbb
sar
pop
mov
(bad)
or
pop
js
stc
jae
xchg
fcmovbe
shl
sbb
jns
cmp
jns
ins
outs
dec
(bad)
(bad)
daa
add
dec
pop
not
(bad)
fdivr
xchg
mov
jle
mov
or
jl
aas
pop
test
pop
ret
sub
mov
lods
fmul
aaa
imul
rcr
inc
rol
bound
fwait
mov
xchg
pop
cmp
shl
xor
mov
outs
lods
xchg
mov
push
inc
xor
pushf
xchg
std
sbb
jns
push
aam
xchg
lods
fwait
ror
jl
inc
in
inc
inc
sbb
xchg
xlat
je
lea
aas
cmp
pop
fadd
shl
ins
mov
stos
std
imul
inc
lea
sub
dec
mov
push
cmp
dec
dec
sbb
lock
jl
mov
pop
mov
repnz
or
daa
daa
mov
bound
cmps
and
push
in
scas
adc
jmp
test
mov
(bad)
jnp
popf
and
xor
xchg
inc
xchg
dec
and
jmp
fisubr
movs
mov
mov
jbe
(bad)
inc
adc
cmp
repnz
std
out
imul
out
aas
xor
sahf
jo
stc
dec
nop
ins
sub
cmp
lods
popf
pop
dec
cdq
cmc
cmps
(bad)
and
adc
les
mov
sub
mov
push
hlt
or
or
cld
jecxz
mov
jp
xor
jmp
mov
xlat
jae
push
pop
sbb
pop
jecxz
xchg
sub
outs
sub
enter
dec
mov
jg
jno
sbb
push
scas
out
outs
sub
aam
stc
(bad)
bound
inc
stos
or
mov
adc
push
jo
aad
push
test
or
push
dec
ficomp
sbb
and
mov
stc
dec
xor
aas
xor
mov
(bad)
nop
push
outs
in
pop
xor
push
inc
arpl
push
or
cmp
push
mov
outs
mov
imul
outs
xor
add
mov
sub
outs
imul
push
lods
xor
ds
push
xchg
ja
leave
std
inc
sub
adc
enter
rcr
sub
aaa
and
shl
das
jo
dec
call
mov
xor
pop
mov
shl
fistp
aaa
pop
arpl
cwde
cmp
rol
shr
push
mov
mov
cs
jge
xor
xor
mov
push
fucomip
mov
repz
fimul
movs
div
sbb
in
dec
jno
mov
inc
pushw
aad
mov
dec
movs
ficomp
data16
pop
xor
int3
ins
fisub
test
xchg
dec
sub
ins
mov
stos
sbb
or
jo
lock
loop
pop
inc
inc
outs
imul
in
or
pop
cmp
mov
mov
sar
jmp
cmp
xor
pop
ins
int
xchg
xchg
imul
fisub
aam
lahf
mov
sub
dec
sbb
pop
or
adc
in
nop
mov
xor
pop
push
and
xchg
icebp
inc
dec
ret
(bad)
jae
into
sahf
mov
(bad)
add
mov
mov
out
mov
(bad)
sahf
mov
jl
and
outs
mov
dec
icebp
inc
ss
mov
repz
es
into
sbb
jle
(bad)
and
test
leave
scas
imul
xchg
add
and
sbb
cmp
or
lock
and
xchg
outs
ret
pop
shl
aaa
scas
int3
cwde
sub
in
or
test
imul
adc
or
mov
imul
pop
sti
xchg
std
das
jecxz
loopne
inc
movs
adc
loope
out
mov
sbb
sub
lahf
mov
repz
cdq
cmp
cmp
lods
adc
addr16
jp
fld
jbe
jno
xchg
jge
mov
cli
mov
cmp
inc
and
clc
lods
shl
mov
sub
jo
shr
rcr
add
and
in
inc
push
and
in
mov
pop
loopne
xor
add
les
cmp
mov
mov
into
push
imul
mov
add
aaa
dec
inc
test
xor
fmulp
bnd
movs
mov
les
mov
sbb
dec
aaa
rcl
arpl
xchg
adc
jge
neg
retf
dec
mov
popf
(bad)
and
test
call
repnz
loopne
xchg
xchg
mov
shl
jecxz
test
pop
fwait
jmp
bound
outs
data16
call
cmp
mov
icebp
mov
mov
test
fimul
retf
pop
arpl
adc
lock
loope
dec
iret
push
ss
data16
adc
push
mov
mov
popf
push
pop
sbb
ss
arpl
mov
rcr
mov
sbb
out
mov
xor
mov
cwde
inc
retf
sbb
aad
fld
mov
mov
mov
mov
add
mov
clc
push
xchg
sub
cmp
imul
pop
bound
mov
push
into
iret
mov
(bad)
stc
mov
dec
loop
scas
jns
pop
popa
(bad)
pop
and
popf
sbb
sar
sbb
mov
rcl
nop
mov
xchg
cli
sbb
push
(bad)
rol
or
mov
mov
mov
mov
add
lea
xchg
mov
test
loop
mov
into
in
repz
jae
loop
(bad)
jno
mov
lods
pop
pusha
cwde
cmps
jmp
movs
mov
ins
push
pop
adc
cmp
sub
pop
sub
mov
dec
movs
pop
test
push
sbb
aam
mov
pop
lods
stc
jp
cmp
(bad)
mov
shr
cs
adc
push
sbb
clc
inc
out
sahf
or
and
mov
js
loopne
xchg
mov
sub
jg
sub
jne
in
sub
es
or
stos
inc
(bad)
shr
push
dec
sbb
(bad)
loop
mov
fcom
outs
das
sub
add
dec
and
and
gs
cmps
scas
push
lods
ins
les
lock
and
sbb
xchg
push
shr
lods
mov
jmp
mov
daa
das
shr
and
jge
inc
outs
inc
out
jecxz
retf
test
jbe
mov
fldenv
call
clc
mov
rcl
xor
fsub
cld
aaa
jp
mov
cmc
popf
and
jle
mov
mov
lahf
aad
stos
xor
dec
out
aad
aas
into
pop
mov
loopne
dec
ret
into
cmp
sti
mov
lods
call
int
retf
pop
sti
adc
mov
sahf
pusha
ins
fdiv
icebp
std
(bad)
sub
adc
lock
std
test
cmc
inc
jae
outs
(bad)
icebp
ja
test
loope
adc
jp
out
pusha
mov
jo
outs
pop
xchg
out
cmp
cmp
mov
cmp
xor
pop
fisttp
add
outs
(bad)
xchg
jg
in
push
outs
shr
dec
imul
imul
fidivr
and
fdivr
dec
sahf
(bad)
cli
push
ja
sbb
adc
dec
(bad)
mov
dec
xor
sar
cmp
mov
test
mov
pop
int3
daa
or
cmp
in
xchg
mov
enter
mov
inc
adc
add
xor
nop
push
inc
and
std
lahf
lea
pop
xchg
loop
aas
jne
(bad)
fdivr
scas
add
dec
or
push
sti
xor
sub
hlt
mov
mov
rcl
mov
lds
arpl
push
gs
(bad)
cld
stc
sbb
inc
daa
je
in
or
rcr
xchg
idiv
out
push
jp
cmp
fwait
out
clc
out
cmp
and
xor
int
mov
push
out
lock
scas
push
xchg
fs
dec
(bad)
push
stos
adc
in
cmp
and
jge
loope
(bad)
sub
in
sub
xlat
fstp
lea
push
sub
inc
cdq
pop
loopne
fwait
rcl
push
pop
push
sub
fnsave
jne
push
fdiv
and
mov
jge
not
loope
std
or
into
push
sub
mov
in
push
loopne
sbb
cs
das
ret
int3
ror
cwde
js
(bad)
cmovo
cmp
outs
push
xor
pushf
loopne
sub
inc
mov
fstp
inc
add
scas
sbb
mov
pop
xor
js
mov
fdiv
dec
jae
pop
and
movs
fsubr
popf
scas
lds
leave
dec
cmp
jmp
ret
lds
pop
mov
or
in
bound
mov
jne
lods
ja
pusha
into
pop
push
mov
mov
sbb
not
add
ficom
shr
cmps
aam
xchg
cmp
sahf
or
mov
aam
rol
icebp
sti
retf
pop
push
mov
add
xor
cmp
sbb
lahf
or
adc
adc
jnp
call
loope
mov
rol
sub
pop
fimul
adc
lahf
sbb
xor
or
vmread
push
adc
xor
adc
xor
ret
in
sbb
call
xor
sub
xchg
inc
bound
call
out
pop
retf
push
sbb
inc
mov
sub
loop
pop
push
lds
xor
cmc
mov
lods
xor
xchg
enter
and
mov
fmul
lods
cmps
dec
retf
pop
mov
dec
mov
pop
sub
lea
adc
cwde
jecxz
neg
inc
xor
xor
xchg
lock
dec
mov
mov
cmps
js
pop
outs
adc
(bad)
push
lods
imul
adc
and
sbb
shl
or
imul
call
sub
pop
jmp
ds
pop
lods
lods
gs
inc
out
int
fstp
jne
or
data16
xchg
scas
clc
int
sub
adc
enter
sub
sahf
add
jno
mov
mov
ins
pop
pop
pusha
cmp
mov
adc
std
enter
cmp
push
dec
xor
push
push
push
mov
loope
das
lea
mov
lods
clc
mov
cmc
or
ds
std
mov
xlat
jns
push
scas
rol
packsswb
jae
add
jae
sub
dec
test
xor
call
in
(bad)
xchg
icebp
cmp
sbb
jno
hlt
and
add
jmp
stc
cs
sahf
and
aas
ins
(bad)
xlat
cs
pop
je
add
inc
nop
xchg
dec
sbb
push
adc
imul
cmps
repz
sub
dec
call
sub
neg
into
and
movs
mov
adc
cld
pushf
jecxz
add
dec
dec
dec
jno
aad
xor
add
test
sub
stos
in
fadd
scas
push
retf
movs
cmp
push
cmp
scas
mov
pop
jmp
pop
test
mov
out
push
cmps
(bad)
pop
pop
jge
add
mov
lods
setle
inc
cmp
jns
xor
ins
aas
(bad)
ss
lea
in
ins
(bad)
push
int3
aad
movs
mov
arpl
and
pop
into
daa
push
stos
ja
hlt
std
scas
or
jmp
loop
lods
imul
inc
push
pop
and
inc
push
jb
xor
mov
aam
sbb
xor
cwde
stos
and
inc
loopne
dec
pushf
or
sub
mov
sub
mov
(bad)
lock
(bad)
ss
scas
mov
xchg
dec
lock
and
lods
sub
movs
jns
sar
fmul
cmp
mov
fldenv
jge
inc
cld
xor
jno
pop
inc
cld
bound
fwait
scas
(bad)
xchg
mov
adc
pushf
sti
pop
pusha
stos
pop
xor
pop
daa
mov
sbb
dec
inc
mov
ror
sbb
push
js
out
mov
xor
aas
clc
and
leave
lahf
cmp
sub
jo
sbb
pop
lock
cmc
call
xchg
pshufw
jp
stos
push
shl
int3
lods
ficomp
es
out
mov
shl
hlt
daa
rcr
inc
cmc
shr
mov
cmc
ins
outs
inc
dec
mov
arpl
cmp
retf
dec
inc
inc
adc
adc
xchg
adc
pop
pop
lahf
dec
cmp
popa
sub
cmp
jns
pop
xlat
add
addr16
and
pop
cmp
mov
jne
jns
add
mov
mov
push
test
icebp
outs
pop
ja
fdiv
fmul
xchg
shl
ror
adc
push
test
cs
sub
jl
(bad)
adc
cld
or
inc
sub
xchg
mov
xor
cmp
mov
jae
ret
imul
pop
inc
in
pushf
je
fwait
or
pop
mov
scas
or
jl
or
(bad)
jge
push
in
into
jg
or
int3
sub
mov
mov
rcl
fst
(bad)
lock
in
jl
into
jne
cwde
push
jmp
push
test
and
mov
movs
ins
inc
or
add
jmp
icebp
pop
push
retf
jo
push
clc
mov
data16
push
leave
push
aad
js
mov
dec
mul
adc
or
movs
repnz
sub
ror
test
push
inc
and
es
icebp
pop
pop
enter
iret
jge
push
aas
xacquire
mov
and
clc
loop
ja
(bad)
ds
mov
fldcw
and
push
push
xchg
push
not
lea
pop
sbb
icebp
sbb
inc
xor
pop
lea
sbb
inc
or
mov
jne
xor
cmps
hlt
sbb
std
cld
xchg
xor
xchg
stc
mov
in
jmp
in
outs
cmp
icebp
sub
rcr
aaa
scas
xor
sbb
mov
stc
repz
xchg
push
ja
inc
jmp
jecxz
xor
mov
loopne
jecxz
fldcw
push
aas
sub
sub
pop
out
shr
inc
pop
inc
inc
jae
or
or
aam
xchg
lods
xchg
mov
or
out
jmp
sti
cmps
addr16
mov
ret
or
clc
daa
lock
fdivr
xchg
mov
lds
imul
int3
sbb
movs
in
xor
inc
cmc
xlat
add
xor
enter
aaa
(bad)
daa
cmp
jg
mov
out
sti
mov
adc
inc
jae
not
cmp
ret
sbb
mov
je
jecxz
sar
les
pop
mov
test
fs
mov
jg
sti
mov
aad
outs
jns
movzx
int
in
scas
out
push
rcr
daa
mov
scas
mov
jno
bound
push
jb
mov
retf
mov
mov
dec
inc
cmp
inc
call
nop
in
cli
sbb
jmp
xor
cwde
cmc
or
pop
test
movs
test
inc
ret
or
jmp
ins
cmp
rol
push
pop
arpl
fild
push
jae
ret
xor
adc
loope
popa
inc
cmps
xchg
or
xchg
mov
sub
pushf
xor
inc
jae
dec
cmp
ror
shl
jmp
aaa
fstp
into
mov
sbb
sar
jno
xchg
mov
sbb
and
out
pop
(bad)
fstp
mov
cmps
gs
aam
or
inc
and
repnz
aad
xor
fstp
loopne
movs
outs
pop
out
inc
inc
fsub
jecxz
sub
mov
pop
cmc
aam
pop
xor
adc
aaa
push
mov
cmp
jne
cmp
and
adc
pop
xchg
adc
jg
xchg
cmps
mov
xchg
data16
inc
js
scas
cmps
mov
adc
mov
dec
int3
les
loope
cmps
mov
push
loopne
mov
adc
cdq
push
int
inc
xchg
xchg
push
xor
jecxz
dec
enter
popa
lds
sbb
and
loop
in
xchg
out
mov
cld
push
cmp
fld
and
ror
mov
in
lea
cmp
xor
pmaddwd
test
(bad)
sbb
xchg
adc
lods
scas
out
ret
pop
inc
stc
iret
inc
jns
add
(bad)
pop
pusha
bound
lods
add
in
call
mov
(bad)
(bad)
movs
out
(bad)
shl
jb
push
ficomp
or
jl
fadd
jb
sub
rsm
jno
cmp
jo
adc
cmp
cmps
ffree
mov
xor
xor
pop
lea
test
cmp
xor
pop
scas
mov
and
dec
inc
mov
test
popf
lods
call
sub
adc
push
outs
xor
add
xchg
popa
scas
pop
xor
dec
cmp
and
scas
jmp
stos
push
mov
aam
mov
xchg
or
je
xor
mov
jmp
inc
mov
cmp
mov
inc
icebp
fsubr
dec
es
mov
xchg
pop
fwait
cmc
aaa
ficom
mov
xchg
xor
cmp
rcr
pop
in
scas
fbstp
sahf
aam
mov
cwde
mov
inc
xor
iret
inc
or
add
sub
sar
jne
arpl
lahf
jp
adc
inc
sub
enter
(bad)
push
sahf
retf
aam
sub
sbb
pusha
mov
imul
mov
out
mov
ds
in
int
jmp
push
dec
adc
jge
cdq
mov
mov
(bad)
(bad)
jns
xchg
pop
adc
nop
jge
and
add
xor
fwait
and
stc
mov
mov
mov
mov
int
outs
cmp
ror
cmp
int3
sahf
push
punpckldq
out
dec
repnz
std
sti
imul
or
sbb
xor
xor
jg
xor
stc
gs
fist
add
(bad)
stc
jb
fild
in
mov
les
sbb
sbb
icebp
rol
pop
bnd
dec
ins
sar
inc
xchg
(bad)
repnz
dec
mov
xor
push
ror
nop
inc
jg
ins
aas
inc
ins
lock
in
hlt
cmp
push
imul
add
or
mov
and
and
stc
in
jo
test
jg
movs
pop
mov
ins
data16
jmp
and
imul
je
mov
ja
adc
and
je
push
clc
sahf
cmp
fistp
mov
mov
sub
adc
sub
push
or
add
add
pushf
push
inc
cmp
jmp
mov
xor
rcl
xchg
rcr
aad
mov
add
sub
imul
push
adc
and
inc
adc
pop
sti
and
inc
stos
out
mov
aas
inc
mov
adc
add
retf
gs
cwde
and
cmp
inc
push
test
mov
pop
cld
pop
repnz
jbe
vcmppd
or
add
aam
leave
rep
jno
mov
les
movs
mov
and
cmp
sub
mov
lahf
cmps
fld
cmp
lock
xchg
xor
mov
pop
call
cld
data16
sub
mov
movs
push
aas
fcmovne
jno
inc
(bad)
daa
loope
in
push
jbe
and
cmp
jb
jb
mov
sub
ror
or
nop
loop
outs
cmp
push
and
js
dec
inc
inc
cld
mov
jno
repnz
adc
push
cmc
jp
sbb
adc
cmp
or
out
mov
daa
xchg
jbe
push
cmp
jle
inc
cmps
cmp
scas
and
adc
into
(bad)
mov
and
pop
jecxz
(bad)
pushf
pop
add
sub
push
xchg
outs
je
sbb
fwait
xchg
inc
dec
outs
retf
sub
cli
jae
sbb
push
xchg
sub
hlt
sub
inc
movs
pop
and
sub
adc
call
sbb
aas
xchg
xchg
xchg
out
cli
and
mov
push
pop
lods
and
sub
fidiv
push
jmp
push
gs
pop
rcr
fwait
inc
inc
xor
jl
test
sub
push
test
jmp
push
loope
bound
jno
dec
inc
fistp
mov
nop
push
add
xchg
mov
mov
or
aam
inc
adc
pop
sub
jecxz
mov
mov
dec
cli
sub
loop
fisubr
(bad)
rcl
push
jb
fwait
jae
sub
fidivr
or
cmp
sbb
lahf
mov
jmp
popf
bnd
sbb
xor
das
pop
mov
xor
jno
adc
aam
adc
inc
call
fimul
sahf
jg
(bad)
mov
sub
push
sub
jns
retf
(bad)
dec
add
icebp
mov
fild
ret
push
movs
or
sbb
out
jb
lods
jp
xor
lods
popa
xor
cmc
mul
(bad)
out
inc
das
out
and
xchg
les
adc
inc
mov
lods
mov
pop
int
adc
clc
adc
dec
pop
cmps
imul
cmp
in
jge
lock
xor
data16
push
mov
sbb
fadd
dec
ins
ja
leave
fistp
lods
shr
aam
test
dec
int
push
mov
fcomp
sub
lock
ins
mov
dec
dec
scas
and
and
nop
push
push
fild
push
call
cmc
stos
shl
xor
shr
pop
mov
retf
dec
sub
outs
stc
stc
mov
or
jl
xor
lea
sbb
and
adc
fidiv
xor
xchg
jge
add
sbb
or
clc
std
lea
not
ror
pop
lock
and
sub
sti
mov
or
(bad)
call
pop
mov
inc
xor
mov
jecxz
ja
cmc
jmp
mov
jo
int3
mov
mov
fiadd
or
ja
push
cmp
mov
aam
inc
popa
inc
add
out
adc
sbb
and
jmp
mov
xor
cmps
mov
xor
xor
pop
xchg
jecxz
and
outs
ja
cmovns
rol
xor
das
mov
aas
aaa
and
mov
cmp
add
push
jbe
sbb
jnp
xor
(bad)
pop
aas
mov
xchg
aam
mov
fwait
adc
hlt
imul
or
es
dec
mov
sbb
cwde
punpcklbw
(bad)
lds
into
jmp
adc
xchg
stc
mov
jno
and
div
fwait
dec
add
outs
(bad)
das
jb
cwde
xor
and
pop
sbb
inc
push
mov
mov
mov
and
lods
mov
arpl
ja
mov
scas
jb
mov
stos
outs
inc
jmp
mov
out
inc
cdq
cmp
cld
xchg
addr16
sbb
xchg
adc
fsubr
dec
call
push
into
and
mov
test
jl
cmp
fild
sub
ins
add
push
inc
dec
push
pop
add
in
es
loopne
retf
sbb
xchg
jmp
jnp
sub
(bad)
mov
add
mov
data16
inc
addr16
pop
xchg
mov
pop
pusha
cwde
repz
pop
out
push
cmpxchg
icebp
mov
ds
mov
es
jmp
jge
fnstsw
push
xor
adc
dec
cmps
add
mov
inc
(bad)
es
mov
jb
shl
ret
xchg
mov
push
adc
mov
mov
aas
sbb
push
jmp
dec
mov
neg
xchg
movs
repz
push
daa
add
rcl
outs
fdiv
mov
xchg
mov
cld
or
lods
mov
(bad)
or
dec
movs
inc
mov
cmp
xchg
and
stc
xchg
enter
imul
and
or
jecxz
inc
loope
int3
fcmovnu
push
push
mov
es
push
cdq
hlt
mov
movzx
mov
and
jle
dec
inc
or
mov
nop
xchg
xor
xor
lock
or
sub
lods
(bad)
push
mov
daa
imul
in
jne
into
lods
mov
cdq
sbb
cli
pop
adc
cwde
and
aas
dec
inc
dec
fdivr
loopne
mov
test
mov
xor
add
movs
repnz
push
pop
ret
addr16
adc
aaa
icebp
inc
cwde
(bad)
shl
test
inc
or
add
xchg
or
push
pop
not
cmp
mov
add
out
aam
nop
jns
dec
add
jp
sbb
and
ret
(bad)
shl
stc
fistp
out
inc
add
stos
pop
inc
imul
ja
data16
push
xchg
fldpi
(bad)
ret
test
stos
(bad)
repnz
(bad)
fisubr
lods
dec
movs
clc
retf
lods
mov
xor
push
clc
mov
add
enter
mov
cli
cmp
aaa
repz
sbb
imul
sub
sbb
xlat
adc
xchg
mov
sbb
sub
dec
cld
addr16
pushf
(bad)
jmp
aad
movs
shl
(bad)
test
xor
jge
xor
into
aaa
jb
sti
imul
in
mov
xor
adc
lods
mov
stc
cmps
loopne
test
outs
pop
fld
cld
and
push
push
jg
xor
adc
mov
rol
xor
pop
sti
jae
xchg
mov
cmp
mov
inc
clc
sbb
int3
adc
in
jno
mov
mov
popa
ins
jp
sub
iret
test
pop
mov
xchg
retf
mov
or
clc
out
loope
mov
pop
pop
sahf
enter
jl
adc
sub
test
ret
div
cld
cs
fnstenv
stos
out
cmps
fadd
ror
dec
not
push
dec
sbb
sub
hlt
sbb
cmp
mov
mov
fst
ror
daa
or
arpl
sub
lods
and
test
cmps
pushf
cmp
mov
push
adc
cmp
mov
repnz
inc
jns
cmp
add
scas
adc
push
fwait
and
adc
imul
and
jb
arpl
mov
xor
sub
mov
jge
jecxz
push
sbb
push
in
out
(bad)
movs
fs
push
mov
stos
test
dec
sbb
sbb
xchg
jno
xchg
(bad)
adc
or
into
bndstx
jp
jecxz
push
push
adc
stc
inc
fsubr
loopne
in
stc
movs
add
inc
or
pop
cmps
cs
jmp
rcl
popf
clc
inc
inc
sub
or
into
loope
lea
std
(bad)
rcl
xor
adc
push
mov
mov
xor
das
retf
call
rcl
add
inc
retf
aad
lock
bound
sbb
or
mov
mov
mov
or
cdq
sbb
dec
icebp
dec
pusha
call
retf
imul
repnz
inc
xor
imul
aaa
dec
adc
jl
xchg
xchg
jne
add
inc
adc
add
arpl
push
adc
sub
retf
inc
shr
mov
fs
shr
pop
aam
jp
sbb
add
ins
fimul
mov
push
pop
sub
mov
pop
(bad)
sbb
ss
adc
and
sub
pushf
push
sub
sub
xor
xor
call
imul
sbb
mul
mov
inc
in
add
mov
sub
push
lock
add
and
jge
call
xchg
and
neg
cmp
adc
retf
ret
push
minps
jae
outs
dec
pop
cli
ror
mov
jno
out
sbb
jnp
aaa
stos
and
pushf
pushf
mov
ins
xchg
int3
fisubr
mov
add
fisub
mov
repz
loopne
pop
stos
mov
xchg
xor
pushf
add
add
movd
dec
mov
or
mov
pop
pop
scas
ret
rcr
aaa
pop
sub
retf
(bad)
nop
into
fldenv
das
inc
jge
imul
ret
out
(bad)
jns
sbb
lea
push
lea
inc
xor
and
push
cmc
in
iret
mov
mov
pop
xchg
adc
inc
ret
sbb
inc
cli
fnstenv
adc
ficom
mov
pop
pop
sub
test
dec
xchg
inc
jmp
dec
cmp
and
je
iret
and
sub
jmp
jmp
push
mov
dec
cs
hlt
repz
mov
mov
dec
hlt
clc
xchg
nop
sbb
pusha
mov
ins
gs
sub
ror
cmp
cwde
sub
jno
fadd
(bad)
cmp
loop
dec
test
das
jno
pop
dec
ja
movs
xchg
gs
cli
add
add
das
jmp
jmp
push
scas
data16
js
sbb
inc
lahf
xchg
cmp
shr
arpl
xchg
not
test
cli
ret
dec
in
cmp
or
mov
sub
and
cmp
mov
cmovp
pop
cmp
int
test
xchg
sub
ret
mov
add
or
jns
jecxz
out
push
lahf
cmc
les
pop
jns
ja
pop
dec
cli
mov
xor
cmovge
retf
adc
repnz
add
fs
dec
retf
inc
xchg
mov
daa
rcl
scas
mov
add
imul
jo
sbb
jmp
mov
inc
cmp
fild
xchg
push
fadd
movs
enter
pop
adc
push
jl
lock
stc
cli
cld
add
rcl
or
and
push
and
mov
and
std
push
cmp
push
xchg
push
das
push
cmp
sub
pop
imul
fisubr
mov
lods
popaw
repnz
(bad)
sub
mov
in
sbb
cs
sbb
sbb
sbb
push
cwde
mov
mov
pop
call
pop
sub
popf
pop
sub
aas
cli
mov
mov
outs
jnp
pop
adc
lea
push
sub
adc
mov
aas
add
sub
stos
add
sub
mov
sub
mov
cwde
cli
ds
pop
pop
xchg
int3
jge
inc
les
fild
aad
lods
push
sub
mov
adc
loopne
retf
xchg
ss
push
dec
out
ror
and
push
inc
sub
jo
adc
aad
or
dec
xor
scas
retf
(bad)
retf
hlt
jmp
(bad)
mov
jb
pushf
push
lock
cld
jo
sbb
mov
loop
sbb
in
jp
fwait
and
inc
mov
int
sub
repz
fs
jmp
mov
imul
test
push
or
pop
xchg
or
dec
pusha
jne
cli
and
push
addr16
fwait
add
test
popf
add
jmp
xchg
out
hlt
xchg
cmc
arpl
into
dec
mov
sbb
jno
sar
retf
mov
stos
mov
jb
les
xchg
adc
sbb
nop
xchg
mov
inc
in
dec
jbe
jb
sbb
icebp
mov
jb
push
cmp
rcr
mov
xchg
and
clc
xchg
mov
or
inc
aam
rcr
nop
dec
push
mov
out
or
stos
pop
sub
ret
pop
rcr
loopne
out
fwait
out
sub
push
shl
into
mul
or
adc
mov
push
mov
xchg
cmp
test
ret
test
or
dec
push
sbb
mov
mov
sub
sub
xor
fstp
cmp
idiv
into
cdq
mov
push
or
jbe
push
adc
(bad)
ficomp
aad
dec
jmp
int
and
pop
ds
(bad)
push
lea
pop
mov
daa
shl
jmp
pop
rcl
fcmovnbe
jmp
bound
sub
out
add
adc
jl
fld
jl
aad
test
sbb
sub
dec
push
jbe
fdiv
ja
fwait
jmp
adc
ret
xor
jp
cwde
dec
cmp
push
pusha
pop
das
outs
fisub
pop
fld
jmp
sbb
jmp
jmp
stc
lea
in
mov
iret
ret
xchg
mov
xor
rcr
mov
cmp
sti
xchg
out
push
test
add
or
xchg
push
loope
or
or
lea
jle
sar
nop
add
pop
sbb
dec
or
and
cmp
outs
adc
fcomp
adc
adc
mov
clc
mov
jg
inc
ins
xchg
fisubr
mov
mov
loop
and
cmp
dec
adc
fwait
aam
xchg
adc
es
mov
pop
inc
xchg
cwde
sbb
dec
aam
clc
inc
imul
add
je
inc
les
sbb
jbe
clc
xchg
out
cs
jno
cmp
xor
and
loop
and
push
rcr
jle
shl
in
rcr
bound
stos
add
mov
push
sub
stos
xchg
(bad)
dec
or
mov
scas
sub
pop
mov
pop
add
std
xchg
add
mov
push
dec
pop
mulps
in
xchg
(bad)
cmps
nop
das
scas
push
fsubr
or
mov
sbb
pop
push
nop
jmp
mov
sub
imul
test
movs
mov
mov
in
dec
int
and
sbb
cmps
cmps
ret
mov
add
iret
cmp
aas
enter
ror
mov
add
cdq
rcl
and
js
xor
jb
or
xchg
test
pop
push
jae
(bad)
rcr
mov
sbb
and
dec
pop
addr16
push
xchg
and
xlat
mov
int
inc
inc
fnstcw
cmp
lahf
mov
fcmovnbe
shl
test
xor
mov
mul
es
lea
cmps
or
test
cmp
cmp
out
imul
arpl
xor
pop
out
or
sbb
mov
mov
mov
data16
mov
je
fisubr
cmp
mov
mov
std
es
cmp
(bad)
inc
push
sahf
clc
sbb
or
test
rcr
test
dec
lds
in
jmp
pop
ins
pushf
add
inc
sub
sbb
mov
ja
fcom
mov
aaa
push
mov
add
ror
in
es
gs
push
hlt
js
mov
pop
push
cmp
adc
mov
mov
(bad)
outs
mov
popa
jnp
jl
pop
push
jecxz
add
jge
sbb
jle
call
inc
cmp
dec
enter
push
xor
or
mov
mov
cmp
push
stos
xchg
pop
sbb
imul
mul
ret
jae
fld
(bad)
pop
jno
fiadd
adc
mov
add
dec
inc
adc
fisttp
inc
call
test
mov
dec
in
sbb
dec
mov
dec
iret
fmul
shl
add
pop
push
fxam
xchg
shr
leave
adc
out
xchg
push
add
push
and
adc
lock
and
movs
push
push
movs
neg
in
test
call
jae
mov
loopne
push
jae
jmp
enter
jp
pop
dec
mov
mov
push
lahf
icebp
mov
add
arpl
push
hlt
out
rol
lea
aaa
cwde
pop
cld
adc
(bad)
cs
jnp
mov
dec
mov
aas
popf
mov
mov
loop
bound
mov
jo
adc
sbb
push
sbb
xchg
pop
mov
adc
adc
cdq
leave
clc
test
inc
and
imul
xor
jmp
std
jp
add
jle
pop
shl
popf
ja
mov
push
rcl
rdtsc
mov
test
adc
sar
enter
test
adc
xchg
mov
icebp
out
pop
push
fcmovu
data16
popf
or
and
pop
jbe
(bad)
(bad)
cmps
sar
daa
mov
pusha
lods
int3
adc
dec
js
not
fild
push
lahf
neg
pop
pusha
je
or
icebp
(bad)
pushf
popf
jmp
movs
aaa
inc
imul
test
xchg
add
ins
inc
jo
add
(bad)
pop
or
jnp
cmp
add
lods
lahf
xor
test
data16
aad
int
dec
jb
mov
shl
(bad)
jbe
jg
push
sub
inc
out
sub
adc
jle
call
daa
repnz
mov
push
xor
add
xchg
cmp
mul
inc
ins
(bad)
cmp
push
adc
int
(bad)
in
jns
sbb
dec
cmp
mov
lods
mov
sub
dec
push
in
sbb
and
xor
je
dec
mov
out
fnstsw
mul
push
ret
aam
leave
sahf
xor
xchg
jecxz
in
cmc
xchg
mov
adc
push
leave
push
cmc
jb
test
retf
sub
add
add
int3
or
test
and
jo
or
movs
adc
cmc
out
pop
cs
add
inc
xor
int
stos
int
jae
jge
into
das
xchg
push
mov
frstor
test
leave
lds
dec
(bad)
fs
ss
cmp
in
(bad)
jne
push
jecxz
mov
mov
add
fistp
push
nop
sub
jmp
xchg
rol
mov
sub
out
enter
iret
jno
pop
xchg
scas
scas
frstor
xchg
mov
psubb
jae
cmp
outs
and
and
dec
popa
push
stos
jge
push
sbb
sbb
pushf
add
jg
mov
setl
lahf
push
pop
pop
jo
shl
cli
cmp
sub
pop
pop
push
js
stos
loop
bound
xor
xor
adc
mov
call
adc
pop
cmp
inc
push
push
dec
and
jge
jo
xlat
push
or
adc
cmc
in
jge
js
in
push
(bad)
test
jg
cli
mov
cmp
mov
push
xchg
pop
fimul
shr
inc
jno
xlat
retf
out
sub
cdq
shr
xchg
ins
je
adc
(bad)
sti
in
lea
push
imul
adc
fs
and
daa
push
sbb
push
sbb
cmc
mov
jae
sub
add
cmp
ror
xchg
nop
aaa
xchg
adc
scas
cwde
push
ss
loope
fcomip
fs
pop
sahf
(bad)
outs
jb
lds
ret
cwde
pop
push
ret
pop
dec
lods
adc
mov
sub
imul
push
lea
jo
jno
pop
ds
pop
jp
mov
pop
cmp
loop
data16
push
sbb
mov
cli
jecxz
sar
dec
or
push
jl
outs
ja
xor
es
mov
sbb
or
jns
push
inc
dec
js
test
jne
aam
iret
fidiv
mov
pop
loopne
mov
adc
dec
stos
or
cmp
add
xchg
and
jo
mov
mov
add
movs
call
mov
aad
cli
cmp
mov
outs
push
popf
mov
ret
stos
sar
pop
dec
rol
ins
cld
loopne
js
dec
ins
pushf
mov
dec
sbb
out
cmps
sub
fld
stos
fwait
mov
icebp
ins
mov
imul
and
cmps
retf
sbb
hlt
mov
cmp
aad
call
fdivr
cmc
adc
or
mov
sbb
inc
push
mov
push
ja
mov
inc
xor
jp
test
(bad)
jno
pop
dec
jnp
pop
sbb
sub
lds
inc
movs
inc
stos
sbb
sbb
xbegin
loope
push
xor
cwde
xor
iret
leave
dec
mov
(bad)
adc
mov
adc
jo
inc
out
push
into
mov
ffreep
out
xchg
or
push
push
loope
dec
fwait
sbb
jo
cmp
sub
xor
cmp
rol
xchg
ds
ins
lahf
pusha
test
add
xchg
add
nop
sahf
sub
pop
stc
je
add
jg
pop
jne
dec
repz
(bad)
mov
ja
sar
test
pop
pusha
daa
push
aam
adc
lahf
ins
cmp
ja
pusha
retf
pop
test
sbb
dec
call
and
shl
rcl
loopne
adc
in
mov
adc
mov
ja
push
mov
pop
dec
enter
xchg
in
push
fwait
push
push
xchg
lock
push
ins
mov
xor
cmp
dec
inc
lock
retf
imul
sbb
cmp
mov
dec
fldz
mov
cmp
leave
inc
inc
daa
mov
cli
(bad)
sbb
mov
inc
call
mov
in
jae
js
dec
loop
inc
pop
or
hlt
cmp
mov
movs
or
int
das
fwait
sub
mov
jp
pop
pop
ds
mov
add
pop
cwde
cmp
ficom
les
pop
test
popa
(bad)
cmp
mov
xchg
push
cwde
lea
sahf
dec
mov
adc
xchg
repz
and
push
xchg
sbb
mov
and
test
clc
pusha
add
hlt
dec
mov
sub
mov
test
fdivr
mov
ins
cmp
cld
addr16
pop
jge
ins
xor
je
mov
leave
mov
outs
cmc
ficomp
test
xchg
cmp
dec
cdq
int
ja
xor
adc
sub
shl
xor
and
sbb
sar
lds
sub
leave
(bad)
or
movs
ss
xchg
xor
sti
jge
(bad)
cmp
pop
mov
iret
inc
mov
xchg
cmc
cdq
aaa
xor
inc
js
sbb
(bad)
xchg
cmp
fstp
pop
fld
das
outs
stc
pusha
dec
fwait
push
mov
adc
retf
and
add
into
mov
(bad)
push
loopne
xor
pop
xor
arpl
push
call
inc
ins
adc
stos
(bad)
and
scas
jb
hlt
idiv
and
mov
ja
int
adc
aaa
pop
imul
ins
pop
adc
xchg
adc
pop
xchg
pop
add
mov
add
mov
jno
sbb
cmp
rol
out
dec
mov
xor
sbb
ret
loope
mov
adc
mov
pop
mov
push
xchg
add
xor
sbb
mov
loopne
fild
push
stc
inc
outs
and
adc
lock
enter
lahf
aad
aas
stos
or
call
gs
ds
(bad)
and
cmp
ja
fs
stos
xor
int
nop
cmps
fdivp
sbb
or
and
ret
push
daa
or
(bad)
ss
adc
es
out
sub
mov
or
xor
sar
popf
data16
aas
cs
and
inc
sub
scas
stc
xchg
sahf
dec
sar
mov
out
jno
xchg
dec
aas
push
push
scas
(bad)
les
xsha1
cmps
or
xchg
aad
js
xor
cwde
test
pop
xor
mov
inc
les
jns
fst
push
push
push
in
push
dec
enter
(bad)
dec
outs
inc
sbb
add
ins
rcl
fwait
outs
jne
cld
sar
mov
ins
out
mov
stc
mov
or
test
je
pop
ja
pop
cmovno
jge
int3
pop
xchg
and
pop
jle
out
cmps
lods
mov
int3
es
sub
pop
fdivr
add
mov
sti
add
je
jmp
inc
dec
test
cld
jge
bound
mov
inc
xor
mov
loop
jnp
test
bound
mov
sbb
jmp
inc
mov
fwait
jmp
add
(bad)
jne
stos
(bad)
xchg
fwait
lock
les
dec
push
mov
in
das
int
xor
mov
jns
mov
shr
imul
in
or
je
adc
mov
cmp
out
lock
xchg
xor
mov
in
les
sbb
mov
das
mov
fdivr
push
(bad)
imul
bnd
xor
dec
xchg
dec
ret
stc
push
cmp
nop
hlt
jno
mov
inc
hlt
(bad)
adc
jle
mov
test
mov
loop
mov
scas
ror
iret
add
sbb
and
je
sbb
jge
icebp
or
cmp
cld
cmps
cmps
push
js
jnp
loopne
(bad)
cdq
std
jmp
pushf
loope
aas
mov
mov
mov
lea
sbb
int
pop
rol
mov
xchg
pop
push
mov
inc
out
popf
repnz
ja
mov
mov
sub
mov
icebp
xor
pop
mov
mov
xchg
ja
sbb
pop
mov
sar
mov
fs
jp
aas
pop
(bad)
aad
fstp
das
or
(bad)
loope
mov
loop
clc
lock
rcr
mov
std
rol
mov
mov
push
or
pop
mov
test
repz
leave
sti
(bad)
mov
dec
pop
clc
pop
clc
out
cmp
jge
fs
or
dec
xor
inc
mov
xchg
sar
push
loop
pop
dec
pop
inc
xchg
adc
mov
fdivr
dec
fldcw
mov
outs
fimul
aam
xchg
sub
movs
dec
cli
mov
cld
jmp
(bad)
inc
mov
mov
ret
aad
cld
popa
shl
and
cmp
test
cmp
mov
jmp
jnp
out
cmp
mov
cmp
aad
fwait
cmc
cmc
fcomp
cmps
push
or
xchg
cs
sbb
pop
cmps
scas
frstor
fs
adc
sbb
repz
cmp
or
cld
mov
test
cmp
(bad)
test
push
scas
inc
mov
movs
je
xor
inc
mov
sub
test
mov
rcl
cmp
push
cdq
sbb
dec
addr16
pop
mov
cmp
inc
loope
outs
imul
add
(bad)
cmp
sbb
cmc
mov
call
dec
cmp
scas
int3
arpl
pop
test
ss
xor
jl
popa
repnz
sub
xor
hlt
or
movs
jnp
mov
fidivr
mov
mov
test
jno
jo
xchg
out
out
aaa
popf
pop
data16
pop
mov
cmp
div
push
jl
arpl
sub
scas
nop
add
je
jl
test
and
mov
fld
mov
and
pop
loopne
dec
or
in
adc
in
pop
xchg
mov
idiv
into
adc
dec
sub
hlt
inc
mov
aam
adc
bswap
sub
sub
mov
sub
iret
(bad)
idiv
xchg
outs
leave
mov
xchg
popa
push
or
jmp
sub
mov
inc
inc
push
or
ret
sti
mov
stos
clc
cli
outs
inc
push
cmp
mov
pop
(bad)
ss
mov
(bad)
jnp
mov
rol
test
jge
xor
(bad)
or
and
push
and
lahf
pop
nop
outs
adc
adc
in
and
pop
cs
mov
pop
test
ins
jns
sub
fldcw
(bad)
push
scas
in
call
dec
fsub
gs
pop
mov
add
jo
adc
push
(bad)
mov
push
pushf
adc
jg
(bad)
cmp
aam
sub
mov
loop
xchg
iret
popa
inc
rol
mov
push
std
mov
jns
dec
mov
(bad)
pop
(bad)
scas
(bad)
aas
inc
push
cmp
in
inc
mov
push
retf
stos
push
xor
pop
jmp
and
push
push
and
xchg
xor
mov
cmp
repz
push
std
test
or
mov
inc
jae
pop
pop
daa
xchg
dec
outs
xchg
mov
cmps
dec
cs
push
jbe
adc
add
add
sar
int
cmp
mov
sbb
jae
int
stc
ds
sub
xor
pop
xchg
mov
inc
enter
inc
xchg
sbb
retf
call
sbb
jb
inc
(bad)
mov
push
(bad)
and
push
cmp
mov
mov
ret
movs
jl
xchg
adc
clc
sbb
mov
or
imul
inc
pop
fadd
mov
and
ret
pop
dec
dec
cmp
js
jnp
pmaddwd
ins
xchg
ss
cmp
ret
imul
pop
test
pop
jg
mov
dec
xchg
xchg
add
sbb
lock
push
test
or
pop
and
repnz
mov
test
es
push
mov
mov
sbb
ret
or
jg
test
int3
inc
adc
imul
push
addr16
jb
xchg
pop
xor
xchg
repnz
test
inc
addr16
(bad)
out
imul
scas
aaa
(bad)
jl
sbb
imul
lods
call
fidiv
mov
int
jbe
mov
arpl
push
xchg
jne
inc
out
cmc
sbb
fstp
sahf
stos
jnp
add
push
jb
add
push
in
mov
imul
call
mov
fsubr
push
pop
data16
mov
cmp
add
fnstcw
sub
(bad)
stos
inc
int3
pop
sbb
(bad)
popa
jns
mov
pop
xchg
adc
sub
pushf
xchg
mov
ja
and
cmps
pop
out
xchg
jns
inc
nop
pop
(bad)
jnp
cmps
jge
add
mov
xor
add
push
loop
jno
or
frstor
imul
mov
dec
movs
mov
cli
mov
lods
xchg
jb
jl
sbb
inc
adc
sub
dec
pushf
mov
lock
mov
call
mov
cmps
pop
je
stos
push
jno
ffreep
ins
fwait
inc
pop
(bad)
in
stos
and
test
jbe
(bad)
adc
cmp
push
mov
mov
push
xor
or
jno
imul
imul
call
mov
lahf
inc
dec
cmp
cld
shl
sbb
les
and
mov
lds
and
adc
fwait
mov
cmp
fs
inc
pop
lods
test
cmp
js
push
dec
test
push
inc
lahf
add
popf
dec
fdivr
cs
out
xchg
sbb
ds
sahf
or
dec
jnp
jbe
and
fwait
retf
push
les
imul
ds
popf
bound
(bad)
adc
in
jnp
sti
sub
or
aad
xchg
push
xchg
xor
xchg
repnz
fisttp
push
cmp
cmc
xor
jmp
(bad)
fmul
add
inc
dec
bound
retf
and
scas
movs
loope
adc
and
fild
or
iret
arpl
xchg
pop
cmps
movs
(bad)
jno
jo
push
retf
xor
sbb
mov
stc
lods
push
sbb
das
xor
jae
ficomp
movs
mov
int
inc
fwait
mov
cmp
jl
jg
mov
xchg
gs
fs
aas
int
mov
lods
out
rcl
fucomp
scas
scas
sbb
push
dec
jbe
repnz
cmp
pop
fist
movs
xchg
repnz
clc
iret
int
iret
movs
aas
cmp
pop
sti
enter
cmp
scas
sub
cwde
sub
cmp
or
cmp
es
inc
call
popa
repnz
sbb
pop
fcom
jb
mov
lahf
stos
pushf
in
dec
or
inc
into
je
nop
cs
(bad)
jmp
rol
repnz
dec
and
(bad)
loopne
mov
or
mov
mov
icebp
xor
pop
in
imul
lods
jb
popf
mov
inc
push
or
ficomp
ss
mov
scas
lea
sbb
pop
aaa
mov
inc
mov
aad
stc
stos
xchg
pop
in
aas
add
test
sbb
xchg
pushf
aaa
(bad)
push
or
aas
cmp
shl
or
into
lods
inc
outs
adc
dec
adc
sub
dec
add
add
add
(bad)
out
fsubr
ins
pop
dec
mov
mov
pop
push
das
not
retf
inc
sbb
dec
retf
aam
xchg
adc
int
cmps
add
fld
cmps
xor
imul
dec
jl
and
outs
xlat
stos
ror
movs
(bad)
dec
jmp
cli
sbb
cmps
push
mov
cmp
mov
jl
pusha
push
mov
lods
mov
mov
lock
cmps
mov
pop
shl
or
dec
into
jp
call
dec
inc
mov
cld
dec
cmc
xchg
call
popf
ficom
neg
mov
mov
xor
je
jnp
inc
nop
repnz
stos
and
sbb
fiadd
sbb
inc
push
or
mov
or
mov
pop
repz
call
jne
addr16
xchg
sub
pop
dec
and
jmp
cwde
mov
pop
inc
out
pop
inc
aad
(bad)
js
jecxz
iret
ret
cmp
push
xor
push
dec
es
loope
cwde
xchg
ret
sbb
adc
cmp
add
xchg
dec
mov
inc
xlat
mov
ins
mov
xor
inc
jmp
mov
(bad)
and
inc
jmp
rcr
add
xor
jbe
cmp
fldcw
inc
push
adc
mov
pop
mov
repz
outs
jge
sbb
xchg
jle
retf
add
or
(bad)
in
cli
inc
hlt
shl
jp
sar
dec
cdq
stos
push
or
fwait
sub
dec
out
daa
adc
lea
add
adc
dec
aad
call
mov
out
jo
test
out
jecxz
jo
dec
sub
andnps
push
xchg
mov
movs
fsub
push
cli
push
in
cmps
loope
(bad)
mov
retf
push
push
aas
adc
out
xchg
xchg
in
std
and
pushf
gs
fimul
nop
fdiv
daa
mov
hlt
(bad)
xchg
push
fnstsw
ins
pusha
int3
sub
(bad)
je
adc
loop
lahf
ss
mov
jb
mov
mov
icebp
in
cmp
push
or
jb
pop
pushf
daa
jbe
movs
or
pop
or
sbb
pop
aaa
fist
icebp
(bad)
in
sub
sti
sub
mov
(bad)
rol
sbb
retf
sbb
sub
bound
sub
sbb
in
pop
push
retf
sub
rcr
cmp
mov
(bad)
test
js
push
xchg
(bad)
call
div
cmp
leave
add
popa
jg
dec
mov
das
push
ror
mov
sub
pushf
inc
outs
sub
jne
pop
inc
push
add
sbb
jmp
sbb
push
dec
out
sti
shl
inc
sub
pop
jb
sub
push
std
sbb
test
add
mov
sub
ror
popa
sbb
aad
jg
adc
mov
xchg
adc
dec
test
adc
inc
mov
dec
xlat
mov
cdq
test
xchg
in
jnp
mov
adc
mov
or
add
cmp
sbb
xor
(bad)
aaa
pop
push
sbb
xchg
mov
mov
ror
xor
movs
xor
pop
int3
fwait
test
(bad)
stc
icebp
ja
jo
arpl
cwde
(bad)
outs
mov
cmp
push
iret
lahf
loopne
lds
ss
push
dec
push
movs
pop
xor
dec
xchg
ja
es
pop
ja
pushf
cmp
jmp
jbe
das
jne
daa
jecxz
jo
xchg
xor
inc
adc
cmp
cmp
in
movs
movs
cmp
inc
xchg
inc
mov
ror
fdivr
outs
dec
pop
mov
int3
pop
(bad)
(bad)
sti
dec
and
jmp
pop
(bad)
inc
scas
movs
push
jp
arpl
jecxz
bound
lock
les
mov
call
mov
xor
pop
dec
inc
ds
pop
pop
mov
push
inc
dec
ret
int
stos
pop
sbb
push
sub
xchg
mov
es
cdq
pusha
xchg
sub
es
stc
jno
jp
sbb
xchg
adc
mov
mov
and
adc
fwait
mov
dec
inc
adc
xor
push
or
or
mov
cwde
jae
fimul
jne
fs
mov
pop
mov
fstp
mov
ja
and
adc
xor
xor
xor
(bad)
outs
xchg
fild
gs
jns
dec
add
push
push
jp
pop
out
xchg
sbb
pop
push
adc
shl
in
fnstsw
inc
pushf
push
loope
sbb
mov
sub
aad
jno
push
sbb
pop
pushf
imul
push
sbb
mov
mov
add
cmp
xor
push
das
sub
fimul
clc
out
dec
and
or
mov
test
adc
and
daa
mov
push
add
pop
mov
int
in
inc
fmul
idiv
rcl
and
(bad)
lods
jbe
inc
jae
loope
call
add
pop
cmp
push
pop
mov
and
jle
pop
fdiv
loopne
clc
mov
icebp
js
inc
push
js
imul
ja
repnz
(bad)
adc
std
aad
jmp
or
cmp
mov
in
lds
test
je
sbb
push
mov
or
and
es
aad
aam
cs
dec
jmp
pushf
inc
xchg
sub
in
and
ja
inc
call
loope
inc
xchg
lods
add
or
cld
jns
outs
push
sbb
mov
mov
retf
push
(bad)
lahf
aam
daa
iret
jecxz
xchg
cmp
call
fimul
dec
mov
xor
jne
xor
lods
cmp
push
jbe
cmp
std
mul
cmp
push
(bad)
ss
and
push
pop
xor
push
sbb
scas
dec
add
mov
inc
add
sub
aas
dec
es
movs
cwde
jmp
cmps
sub
push
lock
nop
inc
pop
pop
mov
call
mov
fisubr
inc
retf
jmp
xor
ret
mov
sub
and
jmp
les
xchg
pop
retf
(bad)
fstp
xor
sbb
inc
dec
xor
es
imul
sbb
(bad)
pop
ds
fistp
jno
fcmovnbe
or
sub
out
dec
test
mov
jl
cdq
fwait
push
lods
xchg
and
adc
stc
hlt
iret
movs
std
fiadd
fbld
xchg
rcl
and
xor
lock
mov
outs
idiv
ret
fimul
dec
xor
js
jmp
ins
call
mov
icebp
adc
mov
cmps
test
jmp
rol
popa
sub
xor
or
cmps
sbb
stos
shl
sbb
pop
dec
mov
popa
or
(bad)
jmp
sbb
and
shr
add
mov
cmp
or
scas
or
rcr
pop
xor
cmps
retf
out
ret
scas
sbb
retf
and
aaa
pop
xchg
adc
add
in
leave
fs
clc
mov
inc
inc
push
dec
fld
ins
dec
(bad)
(bad)
adc
scas
sbb
jb
pop
push
mov
pop
jp
into
jo
adc
adc
dec
ret
shl
das
loopne
scas
inc
add
xchg
nop
xchg
outs
data16
stos
pop
cmp
inc
adc
imul
mov
adc
shr
cs
xchg
mov
adc
mov
fldenv
jne
mov
xchg
cmps
nop
clc
jecxz
mov
mov
inc
dec
xchg
jl
loope
xor
push
xchg
mov
cli
mov
adc
daa
out
outs
and
xchg
jmp
sbb
push
iret
(bad)
mov
ret
push
ins
ins
repz
shr
mov
jg
and
mov
shl
es
adc
mov
sahf
nop
imul
push
xchg
imul
imul
mov
cmp
cdq
in
adc
mov
cmp
push
xchg
into
or
sub
fwait
retf
sbb
push
add
(bad)
enter
and
add
add
mov
inc
or
aad
dec
inc
lods
pop
data16
in
mov
sbb
sbb
add
idiv
mov
and
jns
pop
sti
mov
adc
push
and
popa
sbb
push
jnp
or
jnp
ret
and
jecxz
(bad)
stc
stc
in
idiv
push
xor
lods
jno
iret
jb
xchg
inc
data16
cmps
pop
jmp
addr16
mov
fwait
cmp
sub
movs
jae
lahf
push
sub
ins
adc
and
sbb
or
popw
mov
xor
daa
dec
jle
and
pop
push
sbb
popf
punpckhbw
outs
mov
adc
(bad)
cmp
not
mov
or
fstp
hlt
xchg
in
ins
lds
push
push
dec
add
fnsave
in
sbb
dec
ror
mov
bound
mov
enter
js
into
enter
dec
fistp
dec
inc
mov
ror
(bad)
stos
jmp
mov
add
out
xchg
adc
cli
loopne
dec
mov
fst
stos
bsf
sub
in
inc
cmp
into
pop
test
retf
or
out
push
push
arpl
shl
shr
adc
pop
(bad)
ror
dec
pop
rol
pop
cmp
sub
add
adc
call
sbb
out
(bad)
and
ins
loop
dec
jb
cmp
sub
imul
mov
lahf
push
mov
mov
inc
mov
loopne
push
push
imul
cmp
cdq
cmp
add
mov
popf
cmp
fidiv
jb
cs
aam
push
test
mov
adc
pop
jno
mov
push
push
jnp
ins
mov
mov
loope
pop
jb
mov
mov
sub
jb
imul
rcr
ss
mov
mov
cwde
inc
jns
stos
outs
mov
or
fcomip
mov
gs
hlt
rcr
cmp
mov
out
data16
les
mov
test
or
push
mov
push
jmp
stc
pop
bound
imul
or
jp
push
call
push
hlt
push
mov
sahf
cmp
and
push
inc
repnz
mov
or
mov
dec
mov
and
stc
pop
and
mov
js
jg
rcr
pop
mov
adc
xchg
mul
mov
add
cmpps
scas
mov
jno
cli
stos
sub
and
das
jl
scas
arpl
out
dec
cld
cdq
lds
icebp
pop
fist
fistp
sub
xor
hlt
sbb
test
pop
loopne
and
out
std
jl
mov
add
imul
add
out
lods
push
retf
in
dec
movs
or
out
ins
cmp
xchg
popa
test
rol
dec
cmp
clc
movs
int3
movs
mov
sub
jecxz
(bad)
pop
imul
mul
fnstcw
dec
xchg
iret
add
lahf
push
in
sub
daa
and
xor
inc
mov
sub
daa
adc
into
push
pop
push
lock
or
out
repz
or
idiv
imul
in
add
enter
inc
cwde
mov
jmp
add
sti
push
jp
xor
call
int
push
cmp
dec
mov
mov
cmp
stc
cmps
sub
mov
push
mov
adc
iret
movs
jecxz
les
xchg
test
pop
lods
scas
sub
and
dec
cli
cs
or
cdq
mov
mov
sub
cmps
jle
xor
mov
mov
fisubr
or
cmp
mov
adc
pop
or
cmc
adc
or
and
(bad)
and
in
daa
pop
stos
sub
cli
mov
stc
sbb
mov
jo
cwde
xchg
test
mov
lahf
out
retf
pop
(bad)
mul
pop
lahf
mov
mov
cmp
mov
add
mov
(bad)
enter
push
loopne
jmp
xor
gs
inc
aad
dec
add
and
cmc
mov
pop
fs
shl
xor
dec
imul
addr16
push
daa
retf
dec
inc
call
jecxz
inc
jae
push
fistp
sbb
retf
stos
out
mov
mov
test
mov
call
in
iret
push
xchg
sti
jo
std
push
lahf
pop
jb
sub
rcl
xor
xor
das
pop
adc
xor
fwait
or
mov
adc
pop
std
in
xchg
outs
enter
xor
jb
xor
pop
imul
cs
dec
das
outs
pop
outs
shr
or
int3
lock
and
sti
outs
test
fs
fldcw
sub
xchg
and
cmp
inc
mov
dec
daa
inc
lock
mov
pop
pop
or
loopne
and
cmp
pushf
lods
pop
mov
and
popf
cmp
outs
push
push
mov
les
cmp
cs
fistp
out
jecxz
push
pop
fsub
ror
repz
mov
add
dec
cmp
add
mov
mov
mov
cwde
lods
int3
loope
test
mov
mov
loopne
adc
shl
cs
dec
out
mov
movs
call
sub
jnp
cmp
mov
jno
push
sub
repz
cmps
movs
dec
and
and
and
inc
pop
sub
lahf
scas
lds
xchg
cmp
enter
pop
cmc
mov
push
div
enter
jl
dec
stc
std
mov
mov
mov
or
and
dec
addps
scas
and
push
fcmovnbe
pop
xor
lods
mov
ror
dec
jp
retf
into
aas
push
adc
pop
mov
xor
add
je
adc
pop
fiadd
ror
jl
mov
xchg
lds
sub
imul
aaa
jmp
test
repz
(bad)
out
mov
dec
mov
in
xor
sub
and
xchg
cmp
push
jecxz
ficom
sub
mov
fbstp
cdq
mov
rcr
mov
out
adc
cdq
cmp
cmps
or
shl
shr
std
int
lods
and
mov
push
adc
or
sbb
add
sub
mov
push
jl
dec
mov
in
add
push
jecxz
xchg
jns
ret
push
adc
ja
jae
test
jge
push
aad
xor
iret
mov
mov
mov
arpl
in
shl
dec
sahf
adc
mov
inc
dec
sub
int
fdiv
jp
push
and
cs
and
pop
xor
add
jmp
sar
popf
stos
inc
cmc
inc
xchg
(bad)
shl
jae
int
mov
stos
pusha
sbb
or
xchg
imul
gs
shl
dec
add
rol
(bad)
out
clc
jno
jno
mov
ins
dec
test
mov
call
or
mov
gs
int
imul
mov
psllq
sub
cdq
xor
rcl
mov
jmp
push
mov
mov
ror
cmps
or
push
pop
sub
fisub
fwait
shl
push
push
jl
fcom
xchg
aas
retf
mov
mov
add
and
mov
sti
mov
inc
cwde
or
sub
retf
dec
bound
sbb
add
out
loopne
ins
lods
sti
or
mov
sub
aas
jns
fs
or
xlat
ror
add
test
cdq
mov
sahf
and
mov
xchg
jl
sbb
dec
imul
xchg
rol
cmp
dec
mov
cdq
jno
jge
sbb
cmp
xor
adc
cmp
cmp
or
xor
addr16
cs
xchg
or
aad
push
gs
cdq
cmps
loop
not
or
mov
cmp
sbb
mov
cmc
dec
test
cld
add
pop
in
fdiv
in
aas
mov
into
fwait
mov
dec
sbb
add
rol
push
or
daa
jno
(bad)
xchg
ins
(bad)
out
adc
mov
idiv
pushf
mov
mov
outs
fwait
sbb
jecxz
add
adc
aaa
or
mov
push
adc
rcl
or
cmp
stos
xor
arpl
sahf
(bad)
in
daa
xor
push
popf
mov
fmul
stos
xchg
mov
inc
call
les
sti
and
cmp
hlt
xor
shl
or
sar
mov
mov
sub
and
int
or
clc
cmps
in
xchg
xor
stos
shl
mov
cmp
xchg
add
out
mov
imul
cmps
enter
sbb
lea
xor
test
xor
clc
sbb
ror
sahf
pop
mov
mov
sti
fcom
xchg
retf
aam
ret
and
pushf
out
fiadd
movsx
je
das
jmp
cmc
xor
nop
lahf
nop
es
(bad)
shl
push
and
mov
fs
data16
rcl
push
sub
and
inc
lods
cmc
mov
adc
jb
je
sbb
popa
not
rcl
jnp
scas
cmp
dec
test
(bad)
dec
popf
sbb
mov
mov
lahf
sar
mov
jl
ret
sbb
outs
rol
(bad)
adc
fld
and
clc
pop
inc
stos
pop
repz
rol
std
lds
xchg
add
in
fisttp
addr16
push
stc
loopne
and
push
imul
pop
xchg
or
fcom
out
push
jbe
fdivr
adc
xor
xchg
fnstcw
ds
push
fs
imul
jae
push
or
sahf
pop
ds
cmp
mov
inc
jns
call
cmp
xor
fcomp
cmps
stos
es
lods
sbb
mov
jl
dec
cmps
xchg
aad
push
lds
maskmovq
mul
cmp
fimul
push
fwait
adc
mov
jb
bound
push
pop
in
xor
pop
hlt
enter
mov
sbb
or
adc
retf
and
add
out
jge
cmps
dec
or
jo
lods
dec
pop
aad
aas
push
pop
add
xor
pop
mov
in
adc
dec
push
xchg
pop
cmc
mov
sub
push
mov
ss
push
pusha
stc
add
(bad)
mov
jmp
arpl
and
shl
or
inc
popw
nop
dec
scas
mov
dec
mov
rcr
adc
in
mov
xor
dec
adc
dec
pushf
test
mov
mov
frndint
ja
out
pop
mov
retf
jo
xchg
out
movs
pop
rcpps
or
js
jae
shl
inc
mov
mov
(bad)
xor
test
(bad)
adc
xchg
mov
cmps
in
jo
pushf
or
cld
rcr
iret
mov
jge
les
dec
test
and
fst
lods
fwait
and
pop
adc
jnp
test
or
ror
jmp
mov
cmps
mov
cmp
mov
sub
test
add
retf
and
sub
stc
inc
mov
lea
xor
jl
inc
sub
in
cmps
retf
cmp
icebp
push
in
mov
rcl
cmp
jne
sub
push
add
mov
mov
stos
jo
mov
into
ret
add
test
mov
lea
pop
cmp
jb
mov
prefetcht0
xchg
mov
in
jmp
add
fwait
rcr
ins
(bad)
inc
cmp
mov
mov
mov
xchg
enter
mov
add
push
lods
push
add
out
mov
add
sub
and
lds
pop
dec
(bad)
fsub
dec
cwde
in
mov
adc
jmp
push
mov
les
cmps
cmp
push
ja
std
fcomp
cwde
push
xchg
hlt
cmp
cmp
xor
(bad)
(bad)
mov
shl
loope
push
repnz
aaa
adc
jno
dec
ins
test
test
in
sti
(bad)
xchg
sub
sbb
movs
inc
rcr
pop
clc
mov
popf
mov
fwait
loope
imul
(bad)
cmp
stos
add
xor
mov
push
mov
xor
add
test
dec
mov
mov
movs
push
xlat
mov
dec
lods
mov
cmp
sbb
leave
rcr
popa
adc
mov
vmaxsd
add
ret
sti
jmp
cmp
fmul
retf
sub
lods
cwde
and
push
call
mov
sub
test
movs
jp
mov
pusha
jecxz
outs
or
ret
sahf
dec
add
fst
pop
cmp
imul
push
gs
jae
push
push
xchg
mov
sub
push
mov
sbb
in
mov
rcl
pushf
push
and
mov
rcr
pop
jg
or
popa
mov
bound
sti
sahf
and
popf
jge
into
aas
aaa
aaa
lock
xor
cs
shl
push
std
jp
popa
adc
mov
jmp
pop
adc
mov
fnstenv
inc
push
lods
xchg
mov
adc
fadd
jg
sub
cmp
or
mov
ja
mov
jle
clc
mov
aad
pop
sti
inc
inc
addr16
sbb
xchg
jle
iret
xchg
xor
dec
icebp
test
into
loopne
push
mov
lods
and
leave
into
mov
(bad)
jl
(bad)
mov
(bad)
xchg
(bad)
int3
loopne
add
xor
stos
dec
add
fs
sbb
mov
jmp
std
mov
jmp
mov
jmp
xchg
jecxz
pushf
xor
int3
inc
pop
push
(bad)
jbe
popa
pop
mov
add
iret
sti
push
hlt
adc
mov
mov
je
repz
cmp
(bad)
and
xlat
lods
push
jmp
ret
and
jp
sbb
sbb
xchg
fs
push
and
adc
retf
xor
sub
jecxz
add
retf
or
push
jg
scas
sub
fsub
loope
cwde
xchg
pop
sub
cld
cwde
pusha
imul
fstp
retf
aaa
test
push
xor
xor
int
das
imul
pop
jle
pop
(bad)
sar
xchg
mov
add
stc
mov
mov
in
fst
jmp
push
rol
outs
add
and
sar
es
clc
fadd
bound
aas
arpl
rcr
test
fcomp
loope
dec
jbe
sub
inc
test
fdiv
jg
jp
push
adc
xchg
aam
xchg
push
add
sub
ror
xor
mov
xlat
fisttp
cld
sbb
and
inc
(bad)
dec
jne
mov
loop
xor
call
dec
(bad)
or
xchg
push
mov
dec
mov
aam
sub
mov
fsin
sub
in
or
test
push
push
call
mov
xor
mov
in
(bad)
mov
pop
pushf
or
call
mov
adc
mov
pop
gs
dec
push
or
mov
pop
ret
aam
scas
xlat
mov
fstp
call
xchg
jo
fwait
aam
mov
mov
xchg
cmp
dec
clc
dec
popa
test
adc
ss
rcl
adc
out
pop
mov
iret
pop
jle
(bad)
(bad)
leave
das
js
dec
mov
xor
fild
lahf
jnp
outs
fistp
ss
loope
ret
mov
cmps
xchg
xchg
ret
fs
adc
inc
fdiv
cli
fidiv
inc
adc
ror
push
adc
jg
cmps
mov
outs
jg
outs
push
xchg
inc
aad
iret
push
mov
dec
fild
mov
dec
and
xchg
int
nop
or
jb
lods
pop
div
out
jnp
dec
pop
jmp
xlat
push
clc
push
jp
cmp
push
ficom
pop
jb
pop
xchg
jno
push
(bad)
push
jne
push
outs
add
push
mov
xchg
mov
and
aaa
mov
pop
add
jle
and
test
push
cwde
aad
jne
not
retf
push
iret
mov
iret
adc
push
fidivr
xor
mov
sub
ficom
sub
in
lods
jo
shl
jb
push
push
pop
xor
mov
mov
jg
jbe
sub
mov
xchg
cmp
or
and
imul
inc
cmps
sahf
rcr
(bad)
mov
pop
xchg
pop
retf
sar
lahf
(bad)
stos
jmp
add
push
jb
cmp
stos
mov
gs
addr16
cmovb
inc
jmp
outs
addr16
outs
inc
mov
add
aad
add
gs
mov
mov
stos
jp
adc
rcr
rol
push
int
jmp
repnz
int
mul
mov
mov
(bad)
sub
leave
pop
mov
or
fs
cwde
fisttp
in
adc
ret
test
retf
cmc
fldcw
cli
jae
fld
xchg
out
imul
sub
dec
jnp
(bad)
neg
int3
mov
add
gs
jp
in
pop
lea
cmps
jnp
mov
push
mov
test
pop
adc
jmp
outs
sbb
pop
add
push
addr16
mov
fwait
pop
ins
rcl
xor
adc
dec
loopne
add
lea
pop
xchg
push
hlt
(bad)
int
sub
scas
xlat
out
or
arpl
xor
or
inc
mov
xchg
test
add
cmc
sub
jne
dec
movs
cmp
inc
add
rol
ret
push
sub
cmp
push
enter
cmps
sub
int3
cmps
bound
popf
aas
js
adc
pusha
ins
dec
or
pop
fsub
inc
and
pop
shr
(bad)
sub
outs
imul
jge
cmc
in
into
cmp
inc
pop
adc
inc
ret
das
dec
lahf
dec
paddd
cld
clc
sar
cli
sub
or
retf
je
test
push
mov
arpl
push
gs
pop
push
test
js
sub
xor
mov
into
jecxz
dec
mov
push
stos
inc
fldcw
push
mov
cld
push
imul
cmps
cmp
xor
pop
in
int3
imul
xor
mov
mov
sahf
or
dec
ds
iret
dec
stos
add
stc
mov
std
mov
sbb
xor
call
xor
dec
mov
movs
mov
sub
mov
mov
adc
pop
scas
call
add
mov
lea
rcl
rcl
and
pusha
inc
mov
add
or
pop
movs
pop
inc
xchg
fcom
cmp
fwait
data16
dec
and
out
jl
jne
push
xor
and
jne
or
or
fdivp
jge
dec
imul
pop
mov
jmp
pop
shr
jno
or
in
popa
ret
lea
mov
adc
ss
sbb
push
mov
or
ja
sbb
daa
lahf
jae
dec
hlt
inc
xor
retf
push
mov
adc
mov
push
jle
mov
dec
sbb
push
loop
adc
inc
adc
jmp
nop
push
xchg
add
call
adc
aad
or
(bad)
hlt
hlt
test
xor
fstp
inc
les
sub
out
cmp
lods
xchg
dec
sbb
dec
pop
jne
(bad)
out
mov
test
sti
mov
push
pop
sub
je
jne
retf
(bad)
in
fidivr
and
jb
repnz
mov
inc
cmp
movs
push
and
test
jne
and
or
aad
scas
dec
xchg
test
sbb
(bad)
push
loop
dec
bound
retf
push
icebp
cmp
jge
xlat
xor
add
jb
mov
(bad)
fistp
retf
sbb
jno
shr
add
jl
ins
in
push
mov
jne
mov
popa
mov
pop
gs
sahf
xlat
jmp
xchg
sub
xor
cmp
push
push
dec
loope
popa
aaa
sub
pusha
call
fistp
xchg
sahf
jmp
sbb
sti
test
mov
add
test
(bad)
shl
fistp
or
xchg
(bad)
jp
ficom
cmps
out
scas
mov
dec
pop
or
ins
mov
add
cli
jecxz
xchg
mov
add
pop
aas
jl
lods
inc
lock
jmp
je
mov
and
dec
into
jle
push
aas
test
or
dec
and
fidivr
cmc
or
cmp
push
inc
and
pop
pop
push
jmp
push
outs
push
outs
mov
mov
into
or
stos
test
dec
lahf
dec
aam
add
pop
js
jmp
push
jbe
imul
in
push
dec
ds
and
push
jns
cmps
mov
ret
(bad)
dec
push
das
inc
push
cmps
call
sti
pop
mov
add
jecxz
jae
xchg
dec
(bad)
or
and
mov
rcl
shr
inc
jl
sbb
loopne
loopne
mov
pop
out
in
mov
mov
or
push
(bad)
cli
dec
xchg
loopne
adc
enter
sub
push
push
fs
in
jnp
xchg
loop
push
out
inc
cmps
outs
inc
and
xchg
sar
mov
cmp
outs
mov
cli
jns
and
jns
push
ins
or
repnz
cmp
pop
xchg
jle
pop
jg
pop
jge
inc
adc
call
xchg
sub
cmp
cdq
call
mov
repz
out
add
adc
push
jno
dec
or
push
sub
fs
add
cmp
xor
out
mov
mov
push
imul
jle
ret
loopne
mov
jo
fld
cmp
mov
jnp
iret
nop
adc
in
es
in
add
popa
push
jl
ficom
xchg
and
mov
mov
inc
sti
and
xchg
popa
repnz
mov
stos
jbe
mov
hlt
jp
lea
cmp
enter
push
in
adc
jb
imul
and
or
clc
dec
push
xchg
adc
push
int3
scas
scas
mov
pop
sar
and
dec
sub
mov
inc
cmp
ds
add
jnp
out
das
js
jo
mov
test
push
xor
mov
stc
mov
aas
test
data16
fbld
iret
push
mov
pop
movs
pop
icebp
popf
add
inc
inc
icebp
loopne
cdq
xor
push
stos
and
and
in
cmp
inc
(bad)
xlat
lods
(bad)
int
push
xchg
pop
mov
xor
mov
push
mov
jmp
imul
es
dec
add
xchg
cmp
jmp
dec
sbb
xor
mov
jecxz
xchg
dec
loopne
dec
lods
sbb
call
adc
push
in
xor
test
test
cmp
fsubr
test
mov
jp
cmp
int3
jne
dec
jno
adc
cmp
jmp
push
neg
shr
pop
sahf
xchg
xchg
rcr
jno
popa
sub
adc
cmp
out
stos
sub
xchg
jecxz
xor
scas
cs
aas
fwait
fwait
inc
shr
or
shl
in
mov
dec
push
out
addr16
inc
dec
ja
ret
and
cs
xor
(bad)
dec
mov
push
jg
ret
sbb
xchg
mov
or
scas
xor
xchg
or
cmp
movs
mov
repnz
pop
add
jnp
and
xchg
jnp
pop
add
pop
test
add
fdivr
push
scas
inc
ja
jmp
fidivr
mov
mov
retf
add
lods
dec
shl
pop
xchg
push
xor
fist
cwde
jmp
xchg
ja
(bad)
sahf
out
ud0
enter
stos
or
jg
retf
mov
sbb
fnstsw
js
push
fadd
or
sahf
xchg
out
in
outs
or
add
ja
mov
cmc
iret
inc
test
jae
mov
out
xor
mov
xchg
xor
or
jo
das
xchg
jge
mov
add
add
adc
dec
mov
cmp
xor
inc
outs
clc
xchg
pusha
rcl
loope
jp
xchg
or
in
dec
into
inc
pop
ror
imul
call
add
dec
repz
fmul
pushf
pop
ss
movs
into
cwde
jge
mov
mov
push
mov
mov
into
fdivr
neg
xlat
mov
jle
mov
(bad)
pushf
repnz
push
add
adc
add
movlps
loope
cmp
mov
jnp
xchg
jmp
ret
jge
mov
jno
add
push
les
popf
in
sar
aas
push
mov
sar
push
icebp
sbb
js
imul
and
movs
mov
(bad)
arpl
out
adc
cmp
push
aaa
jbe
jge
aaa
loopne
lahf
jge
fsub
mov
mov
jl
iret
sti
push
not
mov
and
xor
pop
mov
mov
xchg
push
imul
fadd
mul
movs
dec
(bad)
mov
lock
popa
push
in
xchg
cld
repnz
push
sti
repz
out
add
scas
xlat
je
cmp
imul
test
in
loop
retf
int
mov
cmps
(bad)
fiadd
int
stos
stos
and
not
mov
cmps
test
mov
stc
call
sahf
pop
add
inc
or
scas
pop
or
and
push
push
xchg
sub
xor
push
test
pop
std
or
xchg
leave
push
mov
call
fdiv
mov
mov
ins
and
push
jge
in
dec
mov
xlat
pop
add
stos
shr
imul
dec
xlat
in
sbb
push
adc
leave
imul
in
push
div
test
pop
mov
fmul
lods
push
xor
mov
push
lods
popa
dec
mov
push
push
cmps
sti
sub
cmps
sub
jo
push
test
mov
ins
adc
push
sub
popf
pop
cmp
imul
xchg
push
push
test
scas
mov
push
sti
adc
mov
pop
xor
sub
out
jbe
sti
mov
push
lods
(bad)
ret
scas
dec
mov
or
xor
outs
cmp
adc
xchg
(bad)
aaa
jp
cs
or
mov
clc
jmp
imul
rol
xchg
pop
mov
cmp
and
addr16
stc
mov
dec
pop
xchg
icebp
jmp
xor
xchg
fcom
pop
fsub
push
or
push
mov
mov
bound
leave
imul
xchg
xor
pop
jno
jae
lea
add
push
(bad)
mov
in
cmp
jmp
xor
cwde
pop
call
add
imul
je
(bad)
out
leave
sub
xor
adc
inc
inc
add
shr
xchg
jle
ins
mov
add
mov
iret
clc
(bad)
out
fcom
pop
sub
sub
outs
lahf
add
mov
pop
pushf
xor
sub
jl
mov
or
icebp
mov
dec
sbb
or
mov
adc
aad
sub
cmc
push
mov
ja
rol
call
jo
mov
and
push
or
fwait
xor
jb
pop
dec
mov
pop
push
(bad)
dec
jne
xor
pop
cmps
shl
pop
imul
mov
mov
xchg
cmc
push
push
cmp
inc
mov
xor
sbb
xor
xor
movs
adc
(bad)
sub
sub
icebp
jo
jne
adc
pusha
mov
cs
or
aaa
dec
(bad)
imul
jbe
int3
jp
mov
repnz
jl
hlt
sbb
clc
inc
addr16
(bad)
cmp
push
mov
ret
xchg
movs
jno
test
push
sub
es
mov
pop
cmps
sub
ins
mov
cmps
cmps
xchg
ror
mov
lods
or
dec
mov
jp
inc
(bad)
sbb
push
loopne
aaa
jg
mov
popa
in
xor
je
jbe
fwait
scas
sub
xor
inc
lock
(bad)
lock
pop
inc
xchg
inc
push
mov
add
dec
dec
dec
dec
imul
push
stos
or
(bad)
aad
lock
sti
add
xchg
lods
xchg
jg
mov
inc
cmp
and
mov
xor
cli
pushf
ret
les
jle
sbb
call
jo
inc
scas
iret
jl
test
pop
aas
or
scas
cmp
jnp
dec
js
pop
outs
(bad)
in
dec
rep
adc
mov
popf
mov
sar
cdq
xor
xor
xchg
or
in
xchg
xor
aas
add
mov
mov
sub
inc
add
daa
test
inc
shl
call
sbb
sbb
mov
faddp
mov
gs
dec
inc
sbb
jl
ret
inc
std
push
je
es
inc
mov
in
adc
stos
pop
lods
fs
push
scas
sub
(bad)
xchg
neg
jnp
mov
mov
retf
mov
leave
push
or
ins
out
dec
out
inc
xchg
cmp
dec
cld
je
in
stc
xor
fs
push
push
outs
(bad)
cdq
jnp
dec
dec
ror
in
test
jle
ins
leave
fimul
lods
pop
scas
sub
sbb
jno
aas
dec
movs
adc
jo
xchg
pop
jbe
or
hlt
fs
fldenv
pop
movsx
popa
xchg
dec
cmp
and
mov
mov
inc
sbb
and
dec
xor
push
sbb
leave
dec
jae
outs
mov
loop
push
sbb
mov
int3
dec
xchg
and
mov
adc
mov
push
pop
mov
aad
mov
inc
fldenv
rcl
pop
xchg
sbb
aas
sub
mov
imul
arpl
cmp
iret
into
loop
xchg
jecxz
mov
out
rol
aam
xchg
(bad)
nop
mov
mov
pop
out
in
out
pop
jmp
sbb
(bad)
dec
lods
pop
inc
jge
sub
aas
lahf
popf
in
movs
in
outs
mov
push
and
loop
cdq
ds
test
cs
pop
and
popf
xchg
push
lea
jmp
call
mov
add
call
repnz
mov
popf
ins
aas
adc
movzx
mov
cmp
jg
cwde
xlat
ret
iret
mov
pop
push
test
fdivr
mov
dec
mov
xchg
inc
idiv
mov
and
movs
cmc
dec
adc
inc
(bad)
sti
(bad)
jmp
push
icebp
aas
popf
mov
pop
adc
sbb
pop
in
loop
pop
lods
inc
cmp
shr
fs
lods
movs
and
out
(bad)
stos
sbb
mov
xchg
or
popa
push
xchg
add
shr
sbb
sub
or
mov
jge
(bad)
xchg
gs
jp
pop
ror
lahf
dec
jno
(bad)
mov
cdq
xor
pop
dec
sbb
push
mov
sub
push
mov
push
xor
ds
xor
and
pop
adc
mov
inc
(bad)
fcmovne
call
xchg
inc
push
sbb
mov
mov
jl
ss
push
mov
jle
dec
fidiv
dec
out
movs
xlat
and
es
mov
shr
lods
or
xchg
jb
mov
mov
xor
js
int3
leave
sub
pop
test
inc
cmp
jae
mov
pop
(bad)
popa
or
hlt
push
dec
rol
dec
or
imul
jno
cld
rcr
push
popf
retf
cmp
inc
jne
mov
mov
fld
mov
retf
loope
mov
jge
lds
js
push
inc
call
mov
pushf
ss
push
push
fidiv
cmps
repz
je
out
mov
ja
sbb
jmp
xchg
out
adc
ins
rol
push
repnz
mov
dec
mov
add
je
cdq
jp
shr
aas
mov
call
cs
sub
pop
sub
outs
sahf
push
fwait
test
jae
dec
inc
mov
push
popf
sub
ror
(bad)
test
xchg
adc
jbe
shl
jmp
mov
or
fdivr
bswap
dec
fwait
sub
jle
xchg
loop
mov
add
mov
jae
fs
cmp
fisttp
dec
in
enter
loope
adc
or
shr
mov
pop
or
pop
jne
or
inc
pop
std
inc
dec
call
jmp
les
inc
mov
loop
cli
push
push
and
repz
dec
dec
je
mov
adc
ficom
lock
xor
mov
int3
imul
aaa
or
xlat
add
jmp
scas
outs
jb
arpl
data16
out
adc
pop
rcl
adc
pusha
jne
call
dec
mov
mov
pusha
or
dec
or
loope
cmp
jmp
sub
mov
data16
movs
sub
cmps
mov
out
int
fnstcw
mov
lock
mov
out
cmps
ds
sub
rcr
jnp
inc
hlt
lock
push
in
mov
dec
pushf
outs
sbb
add
cs
jo
arpl
in
aad
jmp
lock
sub
adc
jnp
and
pop
pop
les
push
into
mov
fst
stos
mov
mov
adc
pushfw
lea
test
out
shl
adc
mov
fisub
lods
mov
adc
cmps
mov
jecxz
adc
xor
or
dec
adc
push
push
xchg
inc
and
xor
jmp
cmp
repz
lahf
imul
mov
(bad)
mov
rol
and
mov
pop
mov
mov
rcl
addr16
lds
xchg
lods
test
add
aas
xchg
xor
jmp
push
mul
cmps
pop
fcomip
push
imul
in
sahf
or
jmp
cli
in
pop
xchg
gs
adc
fisubr
add
test
xor
scas
mov
shr
lahf
jno
repnz
iret
sbb
bound
dec
popa
mov
pushf
pop
pop
rcl
sbb
dec
stos
out
add
(bad)
pop
lea
loope
xchg
pop
inc
in
aad
mov
repnz
cmp
out
out
cmp
mov
fwait
in
or
sar
and
mov
popf
pop
sub
test
push
mov
(bad)
sahf
jbe
(bad)
sub
out
out
aad
daa
xchg
popf
(bad)
pop
sbb
pop
nop
jnp
mov
cwde
outs
sbb
mov
mov
or
mov
push
cmp
ja
xchg
shr
ss
stc
repnz
jecxz
jns
pop
(bad)
xchg
pop
rol
mov
cmp
jecxz
or
sub
pop
(bad)
or
mov
cmp
push
xor
mov
xor
push
imul
scas
lock
inc
jae
and
sub
pop
call
push
xchg
loopne
imul
push
jle
fdiv
xchg
stos
cmp
jle
add
sub
add
xchg
or
jne
shr
daa
je
scas
out
sbb
es
imul
sub
inc
aad
es
xchg
daa
stc
daa
nop
jb
lock
push
shl
push
fs
cmc
loope
cmps
or
hlt
mov
jnp
dec
fmul
clc
loope
mov
push
rcr
dec
repnz
dec
xchg
mov
inc
push
popf
xchg
jl
pop
and
adc
jg
cmp
xlat
out
and
call
mov
int3
sub
ficomp
(bad)
pop
adc
int3
repnz
xchg
mov
test
xor
pop
and
(bad)
in
out
dec
(bad)
mov
aam
jno
sub
sub
frstor
jmp
adc
pop
test
adc
or
xor
pushf
call
mov
dec
leave
push
repz
arpl
ins
repnz
mov
pop
test
movs
lahf
dec
pop
mov
repnz
idiv
jnp
mov
inc
pop
push
sbb
lahf
mov
div
frstor
inc
or
add
push
mov
sbb
fild
outs
jl
shl
xchg
cmp
xchg
xchg
mov
lea
cld
inc
cdq
fld
dec
leave
push
adc
xor
sbb
into
xchg
aad
ja
repz
in
sti
sbb
(bad)
cmps
fwait
add
or
xor
or
xchg
test
cmps
mov
call
fldenv
je
inc
dec
xor
xlat
sub
cmp
mov
mov
mov
dec
push
add
pop
shl
jp
push
inc
push
and
adc
je
mov
out
add
cld
sub
neg
outs
add
and
push
inc
repnz
outs
out
and
xlat
shl
movs
mov
int3
inc
add
cmp
mov
fnsave
pop
and
sbb
sar
cmps
adc
ret
retf
jmp
ins
(bad)
push
mov
jmp
and
cmc
mov
lahf
mov
jge
pop
dec
add
loop
add
scas
jp
dec
movaps
das
push
xor
cli
cmp
pushf
mov
cmps
cmp
stos
jae
popf
mov
mov
sbb
xchg
dec
mov
iret
shr
or
es
sahf
stos
scas
lods
daa
adc
adc
repz
cdq
jl
clc
add
sahf
and
imul
jnp
and
jg
stos
stos
dec
jl
fmul
aad
popa
imul
jne
stc
inc
dec
(bad)
xor
inc
jnp
mov
push
pop
push
or
aad
or
mov
cmp
push
jp
movs
jo
sbb
sub
push
lods
cwde
mov
ds
or
jp
imul
lods
stc
xchg
jns
mov
sub
cmps
popa
imul
sub
and
dec
jae
sub
xchg
fldcw
rol
test
in
push
ds
(bad)
pushf
jle
or
sub
jns
mov
and
pop
push
sbb
js
test
(bad)
mov
ret
mov
adc
push
je
(bad)
dec
mov
(bad)
add
les
dec
imul
clc
das
test
jecxz
push
aam
ins
popa
lds
cmp
into
cmp
loop
pushf
pop
or
out
les
clc
lods
retf
mov
cli
xchg
lods
icebp
mov
rol
movs
jb
sub
pop
movs
jg
pop
xor
and
mov
and
or
cmp
imul
jle
mov
mov
add
(bad)
push
loope
inc
inc
popa
test
pop
add
cmps
mov
push
pop
pop
test
shl
adc
mov
inc
je
mov
pop
aam
sbb
sar
retf
mov
mov
imul
mov
or
mov
hlt
sub
out
xlat
push
mov
lods
cmp
jle
cld
pop
repz
mov
in
jle
xchg
xchg
inc
and
sub
into
das
fdiv
addr16
aaa
fnstsw
cdq
mov
inc
dec
rcr
or
jo
cld
aas
push
shr
mov
shl
sub
cmp
inc
xchg
dec
movs
(bad)
out
pop
iret
jge
pop
xor
xchg
push
fld
dec
jg
sar
enter
ret
push
mov
(bad)
sub
mov
pusha
adc
or
retf
cs
(bad)
and
outs
ins
dec
aas
gs
repnz
out
nop
pop
adc
cdq
pushf
scas
lods
xor
xchg
loop
cmc
mov
mov
mov
pop
mov
mul
(bad)
and
aam
outs
cmp
test
ret
rol
xchg
shl
arpl
test
pop
mov
enter
jp
pop
adc
jmp
fisttp
dec
mov
add
lods
pop
cld
cwde
inc
xor
or
ret
fst
jb
jmp
mov
cmp
inc
or
test
pop
mov
mov
pop
and
push
fimul
dec
jge
in
imul
leave
data16
daa
out
popf
jno
inc
dec
adc
add
jmp
inc
adc
and
stc
test
(bad)
cmp
cmps
enter
xor
adc
out
mov
cmc
dec
popf
ss
dec
xor
sub
or
push
dec
jg
sbb
ret
xchg
(bad)
fld
lahf
in
addr16
outs
xchg
mov
std
mov
xor
inc
mov
je
push
inc
and
push
sub
jbe
shr
cmc
adc
mov
std
sbb
xor
gs
adc
aaa
pop
pop
mov
jp
outs
xchg
call
mov
mov
sub
mov
and
neg
in
adc
mov
fwait
rol
shl
inc
xchg
js
test
mov
cmp
fs
out
mov
xor
sbb
dec
xchg
push
test
sbb
stos
xor
mov
icebp
jmp
xchg
cmp
push
(bad)
sahf
retf
sub
push
enter
rol
and
je
leave
jg
and
pop
jl
pusha
or
jl
dec
mov
cs
sbb
and
out
jbe
jmp
push
fcomp
stos
out
xor
mov
jmp
das
cmp
adc
cmp
sahf
idiv
lahf
adc
mov
sbb
jmp
mov
fld
dec
xor
es
cmp
cmp
pop
cmps
dec
xor
pushf
shr
repnz
icebp
fdiv
xchg
or
mov
cmp
cdq
jmp
ins
adc
clc
or
repnz
js
mov
cld
xor
jo
ja
jbe
jecxz
sahf
call
mov
push
lock
out
in
dec
mov
xchg
out
jmp
dec
dec
in
sbb
push
lahf
mov
push
ins
imul
push
cmc
out
pop
mov
adc
cmp
enter
mov
cmp
mov
cmps
adc
add
mov
mov
rcr
xor
sub
xor
mov
xchg
shr
xlat
sbb
cld
pop
pop
and
movs
adc
xor
in
push
mov
push
int
shl
popa
xor
pop
sti
aaa
cmp
mov
cmp
shl
bound
and
lock
lods
cmp
jecxz
jns
inc
aaa
or
inc
mov
popa
imul
xchg
xchg
stc
lods
add
push
or
pop
repnz
sbb
out
dec
xchg
dec
fwait
sub
(bad)
out
pop
cmp
mov
ret
or
xor
out
pavgw
push
jecxz
stc
or
stc
js
nop
clc
icebp
fistp
sbb
movs
(bad)
jl
les
adc
popa
jae
or
jmp
fisub
fstp
sbb
add
(bad)
xor
push
gs
aad
ds
sbb
sub
(bad)
arpl
outs
xor
sbb
sub
inc
retf
clc
int
lahf
retf
sub
sbb
sbb
sub
pop
mov
and
cs
add
add
and
into
push
and
mov
mov
or
aam
push
test
outs
push
(bad)
test
int
or
pop
pop
cmovle
in
sub
and
pop
fisttp
or
cs
cmps
stos
pop
push
jle
mov
push
cmp
jle
shl
(bad)
mov
cmc
ficom
lock
into
popa
dec
dec
push
inc
pushf
rcl
cmp
ret
inc
out
jo
jg
dec
push
or
push
ja
not
push
div
scas
push
pop
mov
inc
xchg
pop
enter
adc
xchg
fidiv
jmp
sub
in
sahf
aas
inc
pop
fisttp
sbb
sbb
add
std
pop
pushf
fs
xchg
iret
push
inc
push
dec
cs
mov
popa
aas
movs
cmc
scas
stos
data16
push
cmp
test
sbb
push
lods
sbb
call
pusha
dec
sahf
pop
ret
cmp
inc
jle
and
das
jno
xor
ret
std
xor
in
pop
cwde
pop
push
push
cmc
and
cmp
dec
fisubr
loop
inc
push
es
inc
sar
imul
push
pop
jmp
scas
or
fisttp
ja
shr
mov
push
cmp
shl
dec
outs
sub
test
(bad)
loopne
ins
and
mov
cmp
sbb
cmp
mov
xchg
add
dec
test
lds
xchg
fsubr
push
push
int
and
cli
stos
ret
xchg
scas
and
in
mov
mov
xor
jmp
jge
xor
neg
and
(bad)
mov
cli
add
imul
inc
sbb
fwait
es
lods
pop
pop
ret
sub
pop
push
in
movs
jae
add
cmp
mov
aad
and
outs
fdivr
aaa
xor
imul
aaa
dec
cmps
pop
mov
mov
loop
mov
rcr
xor
pop
popa
dec
fmulp
aad
xchg
sbb
rcl
mov
jg
rcr
fdiv
stc
sbb
lahf
test
pop
push
cmp
jge
mov
cmp
push
sub
jp
dec
outs
adc
js
push
xor
cmp
outs
fiadd
sbb
mov
stos
mov
cdq
xchg
pop
test
imul
xchg
dec
int
(bad)
test
xlat
pop
adc
stc
fimul
or
out
push
adc
repnz
jg
fisttp
ds
(bad)
shr
mov
adc
mov
add
lods
enter
inc
push
iret
arpl
test
or
sub
push
inc
add
ss
adc
retf
aaa
adc
cmps
rcl
imul
movs
lds
repz
ffreep
into
jle
rcl
ins
mov
cwde
leave
xchg
cmp
ret
sub
lods
clc
push
dec
aad
int
imul
in
fs
scas
dec
xchg
push
dec
add
jmp
aaa
js
add
ds
sub
lods
nop
cmp
xor
xor
sub
push
jmp
in
pop
push
fadd
(bad)
pop
pop
xor
mov
shl
ja
xor
push
jbe
cld
jmp
sbb
mov
sar
shl
push
or
or
mov
test
ret
repz
jnp
cmp
xchg
xchg
inc
call
ja
jne
push
icebp
arpl
lock
enter
mov
rcl
jb
lds
fwait
jmp
cwde
push
jmp
push
jae
arpl
nop
and
adc
mov
add
xchg
mov
and
test
aas
pop
add
dec
movs
enter
repnz
add
mov
xchg
aad
mov
enter
stos
xor
jl
in
pop
sbb
ja
in
dec
js
adc
mov
push
mov
mov
pop
ds
push
mov
iret
shufps
lock
inc
mov
add
push
jae
(bad)
(bad)
xchg
and
cs
fsubr
sub
cs
adc
fild
pop
and
jno
ins
and
jmp
repnz
jae
(bad)
or
bnd
mov
div
add
sti
mov
shl
xor
outs
xchg
arpl
in
mov
adc
add
ret
xchg
aam
popa
iret
push
rcr
mov
cld
push
rcl
sub
xor
cmp
mov
push
mov
inc
xor
ja
sar
hlt
inc
mov
cmp
sti
push
adc
aam
popf
ins
mov
inc
pop
bound
cmp
cmp
dec
imul
(bad)
mov
xor
outs
push
jns
push
or
jmp
scas
sub
int
sub
das
lea
mov
push
scas
xchg
mov
aaa
fninit
je
pop
mov
repnz
cdq
pop
dec
imul
in
and
dec
and
das
(bad)
and
lahf
cmp
stc
mov
jbe
mov
sahf
push
adc
sahf
imul
pop
inc
or
mov
arpl
dec
aad
adc
scas
xchg
aam
mov
sbb
aad
xor
and
mov
popf
push
sbb
pop
(bad)
cdq
cwde
scas
fnstsw
(bad)
ins
aam
adc
pop
popf
lahf
cmps
sub
pop
or
loopne
ins
jmp
js
(bad)
add
jo
loopne
xchg
jge
jle
adc
jp
push
fwait
jnp
(bad)
imul
or
pop
xor
repnz
imul
pop
cmc
je
xchg
scas
push
and
push
jb
or
pusha
scas
lods
dec
fs
pop
cmp
outs
sbb
mov
(bad)
adc
add
add
daa
mov
sbb
frstor
(bad)
out
shl
dec
cmp
mov
fsubr
adc
sbb
packsswb
inc
in
into
push
cld
mov
jmp
xchg
ret
inc
mov
push
cdq
mov
bndstx
aad
cmp
test
mov
or
jbe
mov
lock
sub
mov
xchg
leave
fs
lahf
out
xchg
dec
mov
stc
call
mov
and
jecxz
and
pusha
cmp
call
sub
jl
nop
mov
adc
lahf
cmps
retf
icebp
mov
shr
xchg
in
fld
retf
adc
mov
or
test
outs
inc
sahf
cli
stc
dec
and
mov
aas
(bad)
jmp
inc
enter
stos
std
mov
adc
ja
inc
mov
out
jbe
or
loopne
cmps
pushf
dec
stc
push
mov
mov
sbb
popf
ins
ror
dec
lock
inc
inc
dec
jl
ret
es
cmp
sub
mov
das
scas
test
mov
push
or
jbe
xor
xchg
sahf
pop
dec
jg
mov
mov
out
test
imul
push
mov
shl
ins
movs
into
arpl
mov
fild
dec
inc
popa
aas
clc
pop
xlat
or
lahf
add
jl
cmps
mov
jb
xchg
pushf
fwait
movs
inc
xor
aas
fwait
out
pop
les
clc
inc
mov
jle
inc
inc
outs
jb
mov
fisub
mov
mov
out
mov
out
scas
scas
(bad)
test
inc
out
and
mov
scas
inc
push
mov
ret
push
xor
jp
dec
int3
int3
mov
lds
or
popf
mov
shr
shl
not
pusha
fisttp
push
mov
pop
movs
mov
(bad)
div
adc
bound
int
sar
mov
sub
xchg
push
das
xlat
std
lahf
fstp
push
xchg
jo
inc
pop
or
scas
das
inc
sub
add
movs
test
in
and
ins
jbe
push
pop
sub
adc
xchg
fnstcw
push
and
sbb
cmp
(bad)
adc
(bad)
ins
je
call
jb
and
add
int
adc
adc
sub
and
dec
sbb
hlt
mov
mov
dec
repnz
jle
jbe
mov
mov
jae
adc
frstor
cdq
pop
scas
and
ja
ss
mov
push
stc
ss
sub
or
rol
test
aad
jnp
(bad)
sbb
ins
cmp
outs
xchg
inc
ficomp
and
dec
inc
into
ror
and
push
xchg
scas
mov
xor
jb
cmp
push
pop
xchg
jno
js
adc
xor
popa
push
ins
add
movs
sbb
mov
xor
imul
fsubr
mov
ss
cmc
fisttp
sbb
shl
mov
cmc
or
mov
je
xchg
ret
cmc
mov
push
(bad)
push
cmp
not
cmp
enter
mov
add
inc
in
mov
xor
fbld
mov
xchg
add
sub
xchg
addr16
xchg
and
mov
push
mov
cld
stc
sar
ja
imul
leave
sub
xchg
jl
fcmovu
xchg
in
shl
add
icebp
rcl
stc
jns
xchg
jns
sub
add
dec
cmp
sub
mov
jl
and
push
dec
ret
test
mov
cmp
or
scas
frstor
outs
xor
mov
lods
imul
cmps
or
cs
in
daa
sbb
push
bt
inc
cli
pushf
mov
or
mov
dec
sbb
lds
push
mov
push
enter
stos
jo
arpl
shl
jbe
retf
out
sbb
mul
scas
js
sbb
fidivr
ficom
scas
mov
xchg
jnp
cs
and
adc
mov
xchg
push
retf
push
mov
dec
mov
lods
in
test
sbb
add
repz
pop
enter
ffreep
pop
pop
loope
(bad)
leave
xchg
jecxz
ret
pusha
imul
aad
push
jle
xlat
aam
imul
xchg
adc
and
xchg
mov
cmps
mov
xchg
sbb
iret
xchg
fwait
mov
jne
cmp
stos
jns
jecxz
lea
sub
addr16
outs
xchg
and
add
sub
fist
jle
mov
sar
pushf
jnp
cdq
repnz
scas
push
cdq
xchg
(bad)
mov
jo
test
dec
jg
sahf
xchg
add
test
mov
out
mov
das
mov
test
adc
(bad)
cmp
nop
int3
je
ins
hlt
adc
in
adc
fcmovbe
adc
pop
xchg
movs
adc
rcl
in
cmps
(bad)
aaa
daa
das
aaa
pop
in
(bad)
dec
or
mov
dec
arpl
mov
inc
xlat
cmp
push
push
js
ficomp
mov
pop
popf
fnsave
add
ret
mov
jecxz
mov
cs
jg
jbe
add
xor
and
adc
fild
mov
cld
in
aam
call
ficom
into
imul
inc
or
sbb
mov
shl
cmps
sub
js
add
out
xor
shl
cli
cmp
sbb
xor
add
sbb
pop
mov
jo
push
sbb
out
loop
int3
jp
and
stos
arpl
gs
repnz
pop
xchg
out
dec
lahf
adc
aad
sub
pop
adc
inc
push
leave
sbb
cld
dec
adc
inc
or
dec
jmp
ins
out
xor
lods
add
push
stos
ret
adc
mov
pop
or
shl
cmp
loopne
or
lock
mov
xlat
or
stos
cwde
xor
or
ret
push
shl
rcr
(bad)
jg
push
and
daa
inc
movs
leave
iret
test
mov
cmc
mov
into
jmp
adc
ret
mov
inc
push
enter
js
push
xor
xor
fidivr
xor
lea
shr
add
fisttp
add
xchg
push
jns
fcom
adc
cmps
mov
mov
or
(bad)
in
push
push
push
push
xchg
dec
movs
aad
or
sahf
jbe
cmp
aas
mov
rcr
adc
jmp
into
les
fisttp
xchg
shl
dec
popf
das
daa
push
clc
dec
jne
lds
call
mov
cmp
and
mov
jbe
mov
ret
xchg
mov
dec
lock
mov
lea
retf
ja
clc
mov
mov
sub
mov
xchg
adc
call
xchg
rcr
or
pop
xchg
lea
fisubr
loope
das
mov
repz
mov
cmp
inc
adc
imul
out
push
out
pop
test
push
out
push
aam
mov
inc
dec
cmps
pop
sbb
push
movs
cwde
ins
test
test
fld
call
test
or
xlat
test
cdq
mov
push
jno
push
xor
pop
cld
dec
daa
ins
call
xchg
imul
bound
jp
loop
dec
cmps
fild
or
pop
adc
scas
cmp
push
sub
mov
pop
loopne
gs
mov
cwde
or
cmp
push
xor
jns
enter
and
jno
addr16
cli
outs
mov
mov
outs
pop
mov
lahf
mov
jns
cwde
push
pop
dec
test
or
je
das
ds
cli
push
ficom
and
cdq
mov
cmps
fs
call
or
out
test
mov
in
lahf
cmp
jg
jge
and
xor
xchg
lods
loop
fs
repz
inc
rcr
pop
mov
jge
push
retf
sub
(bad)
jmp
in
sbb
mov
push
cmps
adc
dec
and
sahf
pushf
mov
imul
out
dec
retf
pop
(bad)
push
ins
jns
and
sti
xchg
les
idiv
test
push
outs
out
pusha
sbb
cmps
add
rcl
cli
mov
pop
or
mov
cmps
or
mov
je
xor
dec
add
and
cmc
cmp
out
jnp
push
ins
in
fadd
push
les
(bad)
sub
icebp
scas
or
jnp
cmp
jle
xchg
cli
mov
sub
jl
or
mov
pop
mov
rcl
pop
xchg
aam
fwait
xchg
mov
mov
jg
outs
fs
int3
mov
dec
dec
hlt
xchg
push
cdq
push
push
push
int3
pop
mov
mov
mov
cmp
push
ret
or
pop
jecxz
push
(bad)
lock
dec
cwde
fcmove
leave
out
popf
cmp
(bad)
jle
sub
mov
loop
xchg
(bad)
nop
outs
adc
push
push
add
cmps
(bad)
mov
or
sub
mov
cmp
pusha
daa
aam
int
bound
jmp
(bad)
lods
icebp
dec
sub
or
cmp
fs
adc
adc
push
dec
inc
ret
xor
call
test
inc
int
aaa
jl
loope
leave
pop
mov
cli
add
ret
mov
ficom
jmp
(bad)
out
sbb
push
shl
stc
stos
movs
sub
dec
es
sahf
mov
add
dec
or
sbb
xlat
pop
add
in
dec
scas
or
nop
mov
xor
js
ins
sar
clc
mov
sub
xchg
inc
xlat
retf
push
cmp
test
out
mov
mov
and
inc
(bad)
sub
and
mov
inc
jo
xchg
in
xor
fucomi
or
mov
dec
and
test
fcmovne
sbb
pop
mov
rcr
ja
(bad)
inc
push
jg
scas
ins
shl
mov
stos
inc
xor
sub
pop
fcmovb
call
cmps
pop
call
adc
dec
shl
lsl
mov
adc
inc
mov
int
pop
mov
dec
cmp
mov
leave
mov
(bad)
lds
cli
gs
mov
sahf
inc
add
dec
(bad)
call
xor
call
or
mov
enter
cmps
js
xchg
call
sahf
pusha
inc
xchg
(bad)
arpl
stos
ds
ja
in
das
outs
je
jb
add
scas
xchg
iret
sbb
mov
mov
test
lds
rcr
sbb
mov
int3
add
js
xor
repnz
dec
faddp
and
enter
ins
loopne
push
test
in
add
repnz
sbb
out
mov
pop
call
scas
cmps
push
cli
pop
inc
or
jae
sbb
cmps
out
sti
ins
dec
shr
adc
lock
or
inc
sbb
ficomp
jmp
pushf
loop
test
xchg
dec
sub
or
jmp
push
dec
cli
add
xchg
dec
and
rcl
adc
call
sbb
pop
aas
or
out
fldcw
mov
fwait
inc
in
mov
shr
xchg
mov
call
push
add
(bad)
fs
movs
idiv
jp
mov
repnz
cs
adc
mov
shl
adc
and
mov
push
jge
pop
xchg
mov
push
ret
shl
test
mul
aas
dec
xchg
dec
pop
xor
jmp
mov
int
arpl
mov
and
jle
frndint
push
push
mov
inc
mul
aaa
mov
push
mov
imul
iret
mov
mov
xchg
jmp
rcl
push
jg
inc
dec
loope
fild
fstp
nop
ins
addr16
inc
(bad)
mov
shl
scas
push
popf
jne
mov
mov
ss
add
mov
jae
leave
jle
mov
je
xchg
jg
mov
(bad)
adc
cdq
sti
push
ret
test
shl
add
cli
or
mov
rcr
test
lods
and
sahf
int
and
and
jne
xchg
cmp
pop
loope
js
nop
not
jne
mov
add
dec
pop
mov
add
ds
ins
cld
mov
clc
pop
inc
ins
jmp
mov
stos
sub
cmps
mov
jge
mov
into
scas
or
sbb
in
cmp
pop
xor
xchg
xlat
mov
jle
xlat
or
pop
lds
mov
sahf
sub
or
div
scas
(bad)
xchg
push
mov
pop
int3
cdq
inc
sbb
in
retf
adc
or
push
mov
lock
aam
add
pop
adc
ss
call
mov
ror
fbstp
(bad)
ss
push
and
movs
mov
fidivr
inc
sub
push
mov
sbb
jg
sbb
lea
cmc
mov
sub
mov
(bad)
jmp
call
(bad)
cld
hlt
icebp
pop
lea
mov
mov
sub
dec
es
adc
dec
out
mov
sub
xchg
mov
imul
sub
jae
xchg
jecxz
xchg
jecxz
in
sti
cmps
ret
pop
scas
xor
movs
popa
in
mov
mov
call
mov
stos
outs
or
jbe
mov
gs
out
test
or
movs
xlat
(bad)
mov
mov
pop
add
sub
dec
cmps
push
push
dec
(bad)
jge
push
push
mov
popf
not
mov
ds
dec
jnp
push
mov
pop
addr16
or
into
cmp
inc
in
jle
mov
(bad)
aas
cmp
bnd
dec
dec
dec
stos
sahf
push
shr
sub
out
aas
in
jl
and
or
adc
ret
aad
mov
sar
jmp
mov
test
sbb
and
sub
adc
or
adc
sbb
inc
fwait
or
xchg
rcr
adc
push
jl
mov
xchg
scas
dec
pop
cs
inc
mov
inc
or
cdq
and
adc
sbb
scas
icebp
cmps
mov
jmp
in
das
mov
lods
cmps
popf
retf
jge
sub
sahf
adc
ds
mov
in
imul
xor
mov
dec
in
xchg
push
popf
int
mov
fisttp
data16
mov
jmp
push
mov
cmp
imul
stos
sub
cmps
push
xchg
jmp
stc
cmp
outs
fs
jmp
ret
push
shl
lahf
icebp
test
out
icebp
inc
and
inc
out
add
jl
pop
cmp
dec
or
jo
adc
add
mov
dec
jg
dec
fild
shl
leave
movs
or
pop
pop
jnp
cli
mov
adc
fnstcw
fiadd
add
xchg
cmp
dec
mov
jl
dec
dec
arpl
movs
cmp
jg
cld
hlt
pop
jmp
clc
xchg
mov
or
add
das
pop
cmp
inc
in
iret
jl
mov
gs
mov
loopne
mov
pop
repnz
sub
xor
cmps
cmps
lods
sub
adc
stos
add
fcmovu
retf
mov
cdq
dec
(bad)
retf
enter
call
popa
cmp
xchg
cli
mov
loope
ins
and
or
xchg
je
mov
adc
mov
mov
mov
xchg
or
add
ret
cdq
aaa
mov
lahf
cdq
cmp
inc
pushf
or
ret
cwde
xor
pop
aam
xor
(bad)
fcmovne
(bad)
not
inc
pop
int3
dec
dec
ret
fadd
adc
fwait
mov
jg
adc
push
fcom
sbb
xor
fcomp
jo
les
push
out
jle
fadd
push
cli
adc
inc
(bad)
dec
ins
in
iret
rcr
jns
aad
daa
ins
scas
ins
js
imul
call
(bad)
cld
out
rol
sub
push
push
stos
jmp
and
or
repz
push
aas
sbb
jns
add
sub
push
ins
jg
sbb
cmp
dec
add
mov
push
cmp
scas
fiadd
test
js
pop
inc
lods
cmp
xor
sub
and
sti
xlat
dec
xor
xor
pop
jp
mov
dec
mov
sbb
imul
in
mov
and
xchg
sbb
test
(bad)
ds
lock
mov
(bad)
jmp
sbb
arpl
mov
imul
imul
mov
scas
xor
mov
xchg
jecxz
xchg
mov
xor
dec
add
sub
out
add
cs
xchg
fmul
jns
(bad)
and
pop
xchg
push
jo
cmp
pushf
mov
push
mov
sahf
mul
and
jnp
jno
ja
sar
jns
cs
jecxz
inc
xor
xchg
inc
gs
pop
push
imul
stos
dec
aad
call
xchg
shl
popa
ds
sti
mov
push
cmp
jb
out
(bad)
sbb
inc
cvttps2pi
jne
cmps
in
adc
dec
ror
pop
lds
stos
or
in
(bad)
inc
jmp
ins
add
sbb
mov
jmp
push
cmp
lea
loope
out
mov
inc
popf
or
jb
adc
cmp
stos
mov
addr16
fild
lock
mov
mov
push
inc
in
dec
cmps
jl
retf
mov
dec
sar
push
sub
cmp
js
xor
stos
mov
and
jo
neg
test
test
lds
push
jbe
repz
stos
cli
pop
mov
test
push
jl
xchg
mov
sub
jecxz
aas
inc
xor
push
add
lds
adc
push
aam
push
mov
lock
dec
mov
dec
adc
or
and
into
mov
into
popf
out
push
std
iret
sbb
xchg
pop
retf
repz
mov
aad
push
and
cld
inc
mov
jbe
les
sbb
daa
pop
dec
fiadd
cld
and
outs
ds
jbe
loop
movs
jnp
cmps
lods
retf
ds
jb
add
mov
mov
mov
sbb
lds
lods
ret
stos
pop
nop
in
dec
icebp
jb
loop
out
in
mov
jo
ficom
fwait
in
in
add
mov
adc
jbe
push
lds
call
stc
ds
mov
ret
inc
and
call
add
(bad)
adc
push
mov
test
in
arpl
or
xchg
xor
jae
sub
jnp
mov
jle
add
or
repnz
repnz
xchg
lods
adc
fld
nop
js
leave
sub
retf
jnp
retf
das
ss
ret
jnp
sub
pop
jge
pusha
mov
out
iret
test
loopne
xchg
into
cmp
clc
dec
mov
mov
loopne
ret
das
xchg
jecxz
add
adc
mov
cmp
push
sahf
xor
(bad)
aas
aas
sbb
jnp
lahf
cmp
push
movs
and
ins
int
rcl
mov
inc
push
jbe
mov
mov
out
dec
mov
rol
pop
mov
jb
movs
inc
xor
and
out
test
outs
xchg
cdq
out
adc
add
pop
pop
mov
int3
imul
add
(bad)
dec
push
cs
cmps
xor
mov
cld
inc
test
xchg
xchg
and
fxam
dec
fsubp
in
retf
inc
je
and
arpl
sbb
shl
xlat
mov
leave
test
ins
xchg
lds
in
xlat
lods
bound
sbb
push
pop
sbb
lahf
call
xor
js
ror
inc
sub
in
mov
sub
cmp
pop
push
int3
(bad)
inc
les
(bad)
ficomp
test
dec
(bad)
int3
and
add
xchg
inc
adc
mov
jno
or
out
inc
xor
sar
xchg
loop
scas
mov
enter
pop
fwait
in
cs
cli
clc
or
nop
div
and
lahf
outs
js
jne
xor
jmp
sbb
dec
jl
pop
adc
enter
pop
fucom
pushf
dec
dec
xchg
bound
xchg
xor
and
movs
into
xlat
add
xor
push
call
ins
cdq
inc
sar
imul
cmps
xchg
hlt
cwde
add
mov
pusha
enter
out
je
xor
(bad)
stos
not
call
sti
sbb
or
std
(bad)
movs
call
jae
pop
mov
inc
jle
pop
retf
clc
inc
repnz
repz
(bad)
int
jp
test
push
jmp
into
rcl
in
and
in
or
push
enter
pop
cmp
sbb
add
xchg
xchg
or
mov
test
mov
sar
ret
ins
adc
retf
cs
jbe
or
or
into
jnp
retf
(bad)
call
jbe
not
sub
dec
mov
xor
or
dec
dec
sbb
pushf
pop
add
test
ror
mov
test
in
ds
test
retf
test
xor
clc
popa
lods
cmp
inc
add
(bad)
in
jecxz
lods
retf
sbb
imul
(bad)
out
push
mov
ffreep
dec
mov
ds
out
out
adc
mov
and
ss
inc
popf
loope
cs
cmps
xlat
cld
mov
out
imul
sar
adc
hlt
mov
adc
rcl
cs
fsubr
xchg
inc
or
ret
ss
(bad)
mov
and
push
movs
dec
test
sub
cs
mov
sbb
fldcw
cs
pop
ret
stc
cwde
dec
push
xchg
movs
xlat
shl
ror
jle
ficomp
sub
in
(bad)
icebp
aam
xor
pusha
scas
mov
sub
inc
imul
adc
ja
xchg
mov
stc
adc
repnz
or
jl
push
outs
jbe
inc
rol
scas
or
or
mov
bound
and
jp
push
pop
or
cmp
xchg
call
jb
inc
jbe
pop
xchg
push
fcomp
adc
or
rcl
sbb
ret
ror
inc
cmp
push
(bad)
cmp
fsubr
xor
rol
in
test
and
fdiv
sub
sbb
add
xchg
push
lock
sub
xor
and
cmp
jmp
(bad)
fistp
push
or
popf
mov
mov
lods
(bad)
out
sbb
dec
xchg
mov
out
dec
dec
aad
enter
clc
xor
xor
or
mov
push
jo
adc
test
(bad)
xchg
pop
xchg
jle
dec
loope
jo
data16
dec
ins
stos
sub
je
lea
outs
into
mov
push
(bad)
call
nop
cld
and
ins
loopne
jp
in
mov
push
scas
stos
mov
(bad)
push
jp
out
sar
cli
add
bound
mov
jbe
pop
mov
add
mov
rol
jmp
jo
pop
mov
inc
adc
mov
call
cmps
inc
fdivr
jp
ret
std
cmp
outs
push
inc
and
jo
pop
mov
xlat
daa
loope
add
dec
jle
(bad)
cli
mov
jae
bound
mov
sbb
idiv
inc
cmp
jl
lahf
fwait
add
cmp
xchg
fiadd
mov
jmp
jp
cmp
push
js
aad
and
mov
push
cmps
mov
mov
ror
stos
add
shl
cmc
push
and
rcl
add
adc
xchg
cmp
fld
jo
dec
loop
and
push
call
fwait
xor
test
fs
stos
and
stos
loop
mov
ins
les
add
mov
out
shl
imul
and
xor
fist
int
ja
das
cmp
mov
gs
xor
cmp
stos
repnz
mov
cwde
pop
test
adc
or
cli
jnp
sar
xor
or
xor
push
cmp
icebp
mov
xchg
and
(bad)
call
or
inc
push
or
mov
lds
pop
jle
xchg
scas
lahf
pop
pop
xchg
sbb
jnp
mov
push
mov
mov
xchg
nop
fmul
push
cld
mov
lock
mov
hlt
std
ja
es
or
test
scas
pop
cmp
fisttp
retf
jnp
popf
test
jae
sbb
popf
adc
int
lds
retf
inc
push
xchg
add
mov
enter
ss
adc
push
cwde
jnp
int
es
dec
sub
test
inc
mov
dec
sti
push
mov
ror
mov
ret
sbb
out
stc
dec
icebp
mov
or
sub
jmp
jl
push
mov
add
xchg
test
push
inc
pop
clc
mov
push
push
lea
mov
cdq
push
jg
stc
dec
(bad)
icebp
call
fld
pop
daa
scas
push
lock
sub
movs
or
sbb
por
push
loop
mov
jp
outs
cdq
sub
sbb
fwait
and
adc
test
push
jne
(bad)
jns
push
loope
repnz
sub
cld
aad
inc
movs
mov
inc
out
jecxz
xor
cld
dec
add
pop
stos
std
add
mov
jb
outs
xor
adc
jae
shl
push
mov
lea
pop
pop
test
test
pop
mov
dec
fcmovnbe
add
xor
dec
add
inc
mov
in
xor
xor
(bad)
lods
mov
aas
das
and
and
fisttp
cmp
sbb
mov
and
pop
push
ja
push
inc
add
xor
sbb
mov
cmp
ins
sbb
xchg
inc
adc
sub
mov
stos
mov
pop
inc
sub
mov
and
or
das
pushf
(bad)
inc
inc
sbb
outs
retf
or
push
xor
jl
push
mov
inc
jbe
ja
ins
test
xchg
adc
add
popa
ffreep
mov
and
icebp
cmp
mov
jne
sbb
push
sub
enter
mov
sbb
pop
stos
xor
fiadd
call
sbb
sbb
dec
jecxz
mov
and
arpl
fld
adc
or
add
pop
sar
cmp
(bad)
xor
sbb
inc
adc
pop
loop
test
sbb
mov
popa
push
xor
test
test
cmp
sub
dec
dec
mov
lods
std
aas
mov
jge
retf
dec
out
sahf
push
mov
ins
mov
addr16
dec
cmp
scas
rol
hlt
jp
mov
xor
sbb
xlat
add
mov
inc
add
add
movs
cwde
inc
stos
adc
sub
int
call
add
jmp
jnp
push
mul
mov
ret
test
movs
xor
xor
popf
jnp
xor
sbb
ds
cmps
(bad)
(bad)
jnp
ror
retf
mov
jnp
out
movs
inc
rcpps
cmp
add
push
aam
(bad)
push
std
ja
jp
jmp
(bad)
lea
fmul
in
das
push
sbb
cmp
mov
pop
ins
xchg
stc
psubw
mov
call
lahf
adc
pop
das
scas
sub
dec
pop
push
dec
pop
rep
mov
fadd
pop
dec
mov
mov
popf
or
mov
lahf
inc
push
mov
xor
push
mov
xchg
cli
retf
in
or
jg
pusha
mov
das
dec
int
dec
dec
jmp
fcom
lds
and
and
shr
dec
fild
clc
repnz
inc
xlat
aam
xor
ss
push
pop
mov
jnp
test
inc
xchg
stos
adc
cmc
mov
adc
mov
pop
rcl
push
icebp
pop
and
jmp
retf
pop
lahf
int3
clc
jge
dec
(bad)
mov
cmp
je
les
lock
leave
(bad)
retf
adc
test
fs
mov
mov
dec
jmp
popf
mov
fdivrp
push
sub
mov
mov
jae
addr16
sub
pushf
shr
retf
rcl
dec
and
mov
aas
mov
xchg
mov
xchg
push
mov
jmp
jg
call
rcr
xlat
push
out
mov
lods
out
or
mov
inc
mov
push
clc
cdq
sub
or
mov
and
sub
das
jge
push
rcr
cmp
mov
sub
ret
int3
dec
sbb
xor
sbb
mov
call
shr
retf
cmp
jle
loopne
daa
ss
jecxz
pop
stc
scas
and
push
inc
sbb
(bad)
cdq
jecxz
cmps
mov
jno
(bad)
or
dec
push
push
fnstcw
loop
add
xchg
scas
repz
fisubr
ds
sahf
je
xor
stos
mov
jge
nop
or
sbb
dec
rcr
in
sar
sub
and
cmps
(bad)
cmp
jecxz
or
fisttp
jno
in
mov
aad
cmp
pop
sub
stos
(bad)
dec
xlat
cmp
sub
mov
cmp
scas
jmp
or
xchg
shl
cmp
mov
xor
fcomip
loopne
sub
cmps
pop
and
aaa
push
push
adc
mov
lods
jecxz
xor
dec
cwde
das
jmp
xor
fld
pusha
sar
sbb
nop
mov
les
adc
out
jo
mov
jmp
add
cmp
mov
pushf
shr
scas
adc
jp
cli
stos
fbstp
xchg
adc
pop
hlt
dec
loopne
ins
adc
sbb
push
inc
aaa
mov
xchg
(bad)
mov
pushf
shr
dec
fsub
mov
or
cmp
retf
xchg
js
sbb
lods
outs
ja
push
hlt
ds
pop
push
pushf
aam
mov
or
repnz
adc
xor
push
call
loopne
pop
mov
clc
jb
inc
inc
jbe
xor
push
movs
pop
loope
adc
cwde
jne
mov
mov
dec
inc
aad
or
jbe
or
shl
sub
addr16
push
div
and
mov
add
lods
mov
push
mov
xchg
push
jmp
xchg
pop
fnstenv
shl
movs
dec
sbb
mov
sub
add
mov
mov
std
fstp
cmp
push
jmp
loopne
scas
xchg
jne
pop
hlt
fnstcw
retf
ret
inc
pushf
push
fst
xor
popf
jmp
ja
pop
ins
ror
(bad)
mov
cmps
xor
push
stos
les
sbb
jb
add
fsub
leave
mov
daa
and
out
add
mov
dec
mov
pusha
aas
jmp
stos
test
xchg
retf
or
div
and
mov
sar
ins
lock
lods
lods
jbe
cmc
adc
jno
js
xor
cmp
pop
movs
ins
test
mov
mov
pop
add
lods
xchg
lds
lgs
rol
xchg
pop
ja
ret
inc
out
push
sbb
not
addr16
shr
sbb
sbb
and
jmp
(bad)
test
leave
movs
jle
sti
xor
lahf
inc
pusha
data16
xchg
out
not
xchg
(bad)
or
xchg
push
mov
pop
aas
adc
outs
mov
mov
adc
push
push
inc
outs
adc
mov
xor
std
outs
out
fild
jns
inc
je
pusha
xchg
fs
or
imul
inc
fcom
mov
sahf
inc
mov
in
xor
push
mov
push
mov
aam
lock
sub
jge
jmp
mov
adc
mov
pop
into
(bad)
fcom
mov
xchg
jmp
aaa
sbb
aas
aam
or
inc
or
mov
pop
xchg
pop
mov
xchg
jmp
pop
mov
imul
or
repz
mov
push
pusha
sbb
test
inc
inc
cmps
in
cmc
xor
es
add
fisub
es
test
jo
mov
xor
out
cmp
push
les
sbb
sbb
stos
test
cli
pop
neg
stc
jbe
ja
hlt
nop
ins
sbb
xor
lahf
div
push
xchg
xchg
test
push
dec
nop
mov
into
stos
mov
or
leave
leave
fldenv
cmp
mov
jg
retf
mov
aas
daa
mov
xlat
sbb
or
arpl
xchg
and
mov
sbb
xchg
jae
pop
adc
xchg
clc
xor
jecxz
aaa
sub
cmp
push
mov
push
or
inc
test
ins
(bad)
dec
add
jnp
(bad)
jnp
and
nop
stc
jge
cmp
inc
jns
out
lahf
aad
int
es
fistp
sub
mov
inc
adc
push
add
fidiv
or
mov
fidivr
cmp
jne
cmp
dec
inc
call
or
test
mov
mov
inc
cmp
cmp
adc
mov
mov
popa
push
jl
fistp
or
sbb
test
mov
push
jp
or
inc
push
clc
inc
ja
xor
xchg
lea
repnz
and
movs
push
xor
pop
lahf
rcr
out
sbb
data16
xor
inc
jmp
jo
repz
repnz
mov
hlt
pop
sub
lods
jmp
jmp
popa
cdq
es
fild
loope
aad
arpl
ret
mov
cmps
xchg
rcl
ss
dec
xor
ins
mov
or
(bad)
jp
mov
cmp
(bad)
imul
cdq
sbb
int3
dec
pop
out
sub
(bad)
frstor
ret
cmp
(bad)
(bad)
pop
xor
sahf
xchg
jl
cdq
cwde
int
imul
sbb
xor
dec
adc
or
(bad)
(bad)
cmp
aas
fisttp
pop
and
sub
sbb
cwde
jne
out
arpl
add
and
test
sub
ins
cmc
(bad)
(bad)
dec
int3
sub
ins
int3
retf
pop
cwde
add
dec
mov
jae
jmp
mov
sbb
mov
arpl
neg
addr16
pop
pop
bound
bound
cli
dec
xchg
sahf
sar
not
loopne
push
outs
push
ja
inc
inc
push
sub
mov
mov
jnp
add
mov
mov
pop
inc
cwde
scas
adc
leave
push
test
sbb
daa
xlat
push
inc
mov
mov
call
repnz
cmp
mov
mov
fdivr
shl
mov
test
ror
lods
xor
pop
and
sbb
rol
call
cmp
pushf
out
sbb
xchg
ins
sub
adc
add
mov
add
pop
mov
jae
call
int
fnstcw
sbb
arpl
or
sbb
stos
pop
pop
sbb
test
data16
sub
push
stos
mov
dec
mov
xor
mov
aam
dec
loope
pop
mov
cs
mov
mov
cmps
mov
and
addr16
test
ds
lock
or
jnp
inc
jb
sbb
fcom
fild
fnstcw
mov
jg
ret
sbb
stc
jp
fiadd
cmp
sbb
cmc
das
cld
sub
push
test
inc
movs
test
xor
jno
or
cmp
cmps
and
pop
lods
push
mov
ins
dec
inc
xchg
xor
mov
imul
in
dec
cli
test
outs
cld
cs
add
shr
push
xchg
mov
xchg
jle
repz
aas
repz
mov
in
iret
dec
pop
div
jo
movs
jb
inc
loope
aad
loop
pop
jae
jb
pop
jp
or
cs
sub
fninit
retf
mov
pop
call
add
sbb
add
add
dec
add
les
addr16
jle
xchg
inc
jp
fild
lahf
aam
aad
xor
out
and
push
movs
js
and
ror
lods
mov
pmovmskb
lock
mov
test
sub
test
sahf
jmp
sub
pop
jnp
dec
jecxz
jae
mov
sub
addr16
jo
repz
mov
push
call
and
cs
sbb
inc
gs
je
mov
rdpmc
gs
or
test
outs
std
and
push
retf
mov
sbb
clc
fcmovnbe
pushf
aad
int3
les
mov
mov
mov
and
cdq
xchg
lods
jno
in
jnp
add
cmp
fsub
xor
call
jmp
sbb
or
dec
cmp
das
sub
mov
imul
or
xchg
cmp
leave
test
lds
or
add
sub
push
imul
fs
dec
xchg
mov
(bad)
(bad)
push
daa
sahf
push
add
and
and
pop
mov
dec
push
mov
in
inc
mov
push
pusha
adc
or
ins
add
int3
and
mov
adc
inc
cwde
sbb
dec
mov
mov
jmp
mov
mov
aad
pop
and
jne
xor
stos
mov
enter
xor
cmp
sar
mov
das
adc
lods
sub
retf
mov
inc
repz
popa
sub
sbb
pop
mov
cmps
jp
sbb
loope
das
inc
add
add
js
in
cmp
cmp
jge
add
repnz
int
hlt
cld
jo
push
xchg
add
adc
cmp
out
leave
add
movs
icebp
sbb
jmp
lods
mov
mov
and
icebp
je
push
inc
daa
jmp
call
aam
ins
adc
jge
stos
(bad)
push
repnz
push
rol
adc
jle
out
mov
push
popa
cs
push
and
lods
fwait
shl
adc
jecxz
cli
sub
cmp
imul
adc
and
jnp
inc
aaa
pop
inc
pop
or
pop
adc
data16
aaa
jp
imul
repz
xor
or
popf
test
lea
adc
xor
xor
out
repnz
mov
dec
loop
cmp
jo
mov
scas
je
add
sub
xor
rol
add
cmps
inc
std
inc
jg
jmp
cwde
cmc
ss
jle
dec
xor
push
enter
xchg
scas
sahf
or
cmp
mov
push
data16
xchg
fsubr
aas
mov
mov
(bad)
mov
and
xchg
inc
bound
in
daa
nop
pop
dec
inc
call
lods
addr16
fidivr
sbb
or
lods
or
outs
fld
push
mov
addr16
sbb
pop
push
jmp
dec
movs
and
cmps
ja
pop
cmp
push
js
dec
daa
adc
arpl
ss
mov
push
mov
inc
loop
sar
fisttp
cli
ret
movs
mov
add
jge
xor
lahf
shr
dec
or
xor
div
dec
lods
out
out
xchg
(bad)
jl
(bad)
aas
hlt
in
pop
je
xchg
dec
jmp
mov
leave
repz
add
mov
cld
pop
lods
std
mov
cmp
pop
sbb
mov
aad
ja
repnz
fld
in
cmp
cmp
jnp
mov
jns
ret
mov
cs
xchg
jae
pop
cdq
cdq
mov
mov
scas
sub
xlat
retf
mov
sub
test
lods
adc
jmp
add
mov
in
and
mov
in
loopne
jl
mov
push
lods
cmp
(bad)
shr
xor
jle
jbe
sbb
cmovp
push
mov
push
pop
clc
stos
(bad)
xor
dec
popa
cmp
push
sti
popf
push
jo
xchg
pop
inc
mov
mov
fadd
gs
rcl
sub
inc
xchg
addr16
enter
sub
sar
adc
adc
or
xor
int3
add
aam
push
jle
push
aam
mov
pop
inc
lods
mov
and
jbe
inc
pop
mov
inc
adc
in
inc
sub
lock
lds
aam
(bad)
in
push
cmp
fmul
movs
xor
jle
jbe
mov
and
mov
sbb
sub
sbb
retf
xor
div
cli
fucom
test
push
jne
inc
sub
push
ret
popa
int3
or
int
rcr
jnp
cmps
aas
nop
das
mov
xor
fistp
ja
pop
xchg
and
pop
push
mov
ret
mov
aaa
outs
cmc
addr16
push
mov
fldenv
sub
add
mov
aad
gs
in
out
stos
div
lock
fst
repz
call
lahf
leave
cmp
rol
cwde
imul
and
adc
sub
ins
xor
cmp
inc
out
fmul
cld
pushf
cld
(bad)
(bad)
push
outs
cmps
xlat
retf
(bad)
jns
imul
add
sahf
jge
test
push
mov
into
push
push
push
cli
push
not
mov
(bad)
call
dec
jne
lock
xchg
and
dec
xchg
call
aaa
lds
ret
ins
or
fsubr
arpl
cwde
pop
inc
sar
mov
shl
pushf
enter
cmp
push
call
and
pop
(bad)
mov
stos
push
add
jmp
pop
fcmovnbe
adc
jmp
xchg
inc
inc
push
popa
and
pop
test
ins
jae
xchg
addr16
gs
mov
pusha
data16
scas
(bad)
lds
mov
dec
xlat
jmp
ins
nop
mov
push
push
fwait
bound
lods
dec
jp
out
push
hlt
inc
popf
sbb
jp
fidiv
(bad)
cmc
mov
jl
push
push
cmp
fwait
aas
dec
adc
inc
sub
out
test
pop
xchg
xchg
mov
test
mov
loop
jp
add
neg
(bad)
shr
add
sub
cmp
xchg
test
push
shr
out
xchg
and
fsubr
into
sar
outs
and
fwait
stc
clts
cmp
mov
and
mov
jg
iret
push
lock
push
es
add
out
cmps
rol
mov
dec
cmp
inc
scas
cmps
jnp
inc
push
jmp
add
push
pop
sub
shl
jmp
dec
lea
out
dec
int3
adc
mov
popa
popf
lods
ss
pushf
cmps
imul
push
hlt
adc
lods
mov
sbb
arpl
adc
in
movs
test
xchg
adc
(bad)
xchg
jbe
pop
stos
cmp
rol
dec
js
jecxz
daa
jecxz
xchg
jmp
mov
add
mov
mov
jo
jb
pop
push
int
fwait
jg
add
cdq
cmp
popa
leave
push
pop
mov
outs
div
xchg
push
imul
lahf
clc
dec
or
imul
pusha
(bad)
cmp
test
(bad)
push
(bad)
jb
shl
fsub
repnz
cmp
xchg
jl
pop
push
retf
inc
xchg
jg
mov
mov
out
cmc
cmp
mov
sub
xchg
cmp
cmp
jl
and
add
scas
adc
fwait
jno
es
dec
or
in
xor
inc
push
inc
repnz
pop
or
push
add
lahf
ret
push
int3
test
ror
xchg
push
mov
(bad)
(bad)
push
sbb
rcr
push
cmps
inc
jle
jne
push
cs
sti
js
test
repnz
(bad)
pop
stos
push
push
push
loop
leave
clc
sub
pop
push
ret
fadd
repz
jb
lea
xor
(bad)
sbb
sub
leave
xchg
out
cmps
out
int3
outs
lods
or
(bad)
js
jp
mov
cmc
in
mov
aas
mov
stos
lods
lea
push
xchg
in
arpl
hlt
loopne
add
cwde
inc
ins
jg
lods
sbb
popf
and
sub
mov
push
out
pop
jns
pop
ja
mov
dec
ret
pop
leave
xor
arpl
shl
push
dec
push
pop
aad
ins
cli
sbb
jle
ja
push
hlt
mov
gs
jb
cdq
jbe
sti
xchg
adc
dec
push
movs
inc
mov
and
fistp
jle
imul
std
push
xchg
scas
and
cld
cdq
pop
or
jbe
les
and
add
jge
arpl
mov
cmp
outs
xor
dec
stos
leave
iret
sbb
shl
bound
and
lahf
sub
scas
ja
loopne
adc
movs
(bad)
fs
add
add
repz
add
push
mov
fmul
(bad)
out
fmul
cs
fisttp
jae
(bad)
push
imul
xor
adc
das
aaa
ret
xchg
dec
xor
mov
xacquire
inc
and
and
jae
xlat
and
inc
repz
out
sti
push
push
loop
add
cli
dec
and
imul
fist
int3
daa
sahf
lds
fwait
call
sbb
mov
jmp
pusha
push
icebp
in
imul
dec
je
push
ds
mov
fsubr
cdq
fwait
cs
loope
test
daa
push
sbb
xchg
cmp
lods
movs
adc
(bad)
(bad)
cli
ins
xchg
retf
daa
stc
cdq
push
inc
xchg
stc
pop
xchg
std
mov
cli
or
outs
pop
mov
sahf
jge
js
jno
xchg
jb
mov
fist
xor
mov
in
inc
call
mov
or
cld
xlat
add
jo
push
fsub
sbb
push
jle
repz
cmp
xor
lods
addr16
arpl
nop
das
cs
jnp
mov
test
fucomip
mov
test
push
lods
mov
es
mov
inc
hlt
cmc
enter
xchg
pusha
mov
inc
lea
lods
(bad)
call
pop
push
lea
cmps
push
cs
mov
fldenv
inc
mov
sub
repz
mov
(bad)
imul
xlat
push
pop
or
xlat
retf
retf
ins
movs
retf
cmps
xchg
pusha
call
bound
mov
inc
(bad)
popf
push
pop
out
push
call
cmp
iret
les
and
fstp
mov
mov
nop
or
call
iret
sub
or
out
sub
(bad)
pushf
test
ins
mov
ss
mov
sbb
mov
jmp
aam
xchg
cmps
addr16
xor
ins
push
imul
test
std
adc
cmp
dec
push
mov
inc
adc
out
xor
lods
cmp
bnd
mov
js
shl
ret
jecxz
loope
jg
imul
sbb
(bad)
mov
xchg
add
loopne
jg
ins
rcr
mov
pop
test
lods
outs
out
sbb
cmp
inc
daa
add
mov
mov
mov
ja
push
xor
or
clc
fcom
mov
pusha
xchg
pop
fild
sub
fwait
xchg
sahf
shr
iret
rcl
test
xchg
xlat
add
sbb
pop
push
data16
aas
add
dec
iret
adc
pop
ins
daa
adc
neg
and
les
sub
outs
sbb
ret
dec
cdq
imul
push
loop
ds
inc
(bad)
dec
push
inc
popf
ja
dec
loope
test
inc
jmp
rcl
sub
or
xchg
sbb
call
pushf
pop
or
bound
sti
jb
or
jno
xor
xchg
fs
fst
pusha
mov
shl
int3
test
mov
and
sbb
stc
jno
dec
ds
and
aaa
sti
xchg
and
(bad)
xlat
jg
(bad)
jbe
clc
xor
clc
in
cmps
jge
push
xchg
adc
ss
cwde
pop
data16
cmp
fs
inc
dec
push
scas
(bad)
das
xchg
jmp
ficom
jbe
into
in
popf
sar
and
push
mov
in
sar
xchg
leave
pop
sbb
pop
scas
push
into
addr16
push
push
pop
inc
cmp
xchg
jbe
fsubr
cld
sahf
mov
xor
mov
repnz
push
add
pop
adc
jnp
mov
xadd
in
xchg
jno
sub
je
ja
push
leave
jns
enter
push
fnsave
sub
mov
cmp
and
jl
xchg
rol
dec
inc
mov
ret
bound
faddp
aam
in
fisttp
dec
scas
movs
add
mov
jp
movs
mov
bound
xchg
mov
mov
xlat
xor
icebp
xchg
stos
dec
sti
(bad)
sti
leave
pop
bound
cmp
(bad)
retf
test
movs
in
add
(bad)
mov
xor
or
add
int3
mov
outs
mov
in
inc
and
sbb
jb
push
inc
rol
fnstsw
outs
inc
or
out
jne
xchg
or
jne
push
rcr
ins
xchg
push
retf
xor
cmp
cmps
movs
mov
fmul
xchg
push
cmps
popf
call
out
inc
mov
ja
push
aam
stos
fist
pop
mov
jmp
mov
shl
pop
push
mov
inc
(bad)
jg
(bad)
std
lahf
in
cmp
ins
ror
(bad)
ss
fsub
xchg
pushf
data16
aas
ja
clc
inc
mov
sub
fild
dec
mov
mul
test
sbb
mov
icebp
jmp
sbb
pop
(bad)
repnz
(bad)
ins
push
dec
lahf
pop
sub
cld
push
add
inc
nop
lock
retf
jno
sbb
cdq
cwde
inc
sub
cmp
in
jb
pusha
ret
outs
pop
cmp
(bad)
outs
cwde
repnz
arpl
nop
in
pop
mov
push
xchg
or
xchg
pop
mov
mov
test
sbb
push
inc
mov
jmp
cs
dec
xchg
cmp
pop
fild
bound
(bad)
iret
in
xlat
add
pop
dec
scas
shl
dec
test
xlat
cdq
jge
push
bound
movs
adc
data16
nop
je
jl
sbb
cmp
push
sub
call
xchg
pop
cld
lods
dec
stos
daa
movs
lea
cwde
and
ror
xchg
and
xchg
outs
mov
out
cmps
cmp
mov
jmp
push
nop
sar
mov
mov
mov
ficomp
ja
jecxz
sbb
push
xlat
jnp
push
mov
xchg
fnstsw
mov
ja
bound
inc
int3
mov
mov
popa
(bad)
pop
bndldx
fs
and
jne
in
dec
and
lea
test
sbb
and
jge
into
xchg
and
ins
inc
xor
pop
mov
hlt
inc
mov
dec
lock
ss
inc
pushf
and
pop
daa
popa
sti
movs
sub
sub
fcom
jbe
rcl
dec
or
aas
dec
push
adc
nop
lds
mov
sub
pop
mov
mov
iret
call
jp
test
jae
mov
xor
les
out
outs
mov
mov
(bad)
sub
retf
jae
(bad)
jo
das
stc
nop
rol
popf
nop
fwait
ins
mov
lods
ss
jmp
add
and
push
xor
jg
shl
pop
add
xchg
adc
jno
ds
(bad)
mov
mov
or
rcr
(bad)
(bad)
or
push
stos
mov
mov
pop
sbb
push
sub
pop
cmps
in
iret
inc
rcr
lahf
dec
dec
dec
mov
arpl
jp
stos
push
aas
cmp
ror
cmp
cmp
ss
mov
xchg
in
add
mov
xor
arpl
pushf
xchg
adc
fsub
arpl
xor
push
cld
in
mov
out
mov
imul
scas
mov
cmc
inc
mov
sbb
jnp
in
(bad)
inc
mov
adc
pop
jecxz
add
xchg
enter
mov
clc
dec
jg
jb
cmps
add
mov
add
retf
push
mov
add
jmp
imul
mov
js
add
test
sub
pop
int3
lock
mov
inc
fimul
inc
push
call
es
loop
mov
arpl
dec
jb
add
inc
inc
add
jne
popf
stc
dec
call
fldcw
sahf
sub
sub
imul
call
mov
xor
sub
lods
cdq
pusha
pop
dec
xchg
sub
mov
call
movaps
shl
push
mov
jge
cwde
push
pop
into
ds
xchg
movs
mov
pop
xchg
(bad)
test
stc
inc
int3
shl
lods
cld
aas
add
mov
lods
xchg
stc
sbb
lea
cmp
xchg
mov
or
push
retf
out
dec
sbb
jmp
add
or
iret
pop
inc
lods
scas
stos
cmc
mov
cmp
ins
popf
punpckldq
loop
pusha
lea
in
jl
and
movs
test
ds
cmp
jge
call
das
addr16
ds
not
or
mov
dec
stos
sbb
jns
gs
sbb
cmps
gs
(bad)
sbb
push
mov
xchg
(bad)
cmp
outs
mov
xor
dec
add
call
cmp
mov
cs
inc
fnstsw
mov
out
lock
call
mov
inc
and
dec
(bad)
fsub
popa
dec
mov
cmp
jle
in
jl
jnp
mov
das
int3
(bad)
ds
dec
mul
out
bound
jae
out
imul
out
mov
or
cmp
(bad)
stc
lods
out
popf
fs
adc
inc
enter
addr16
and
or
stos
(bad)
test
cmp
jmp
cmp
push
movs
inc
bswap
cmp
loop
div
bound
mov
xor
sbb
loop
ret
push
jecxz
lods
pop
test
and
ja
inc
jp
ins
cmp
adc
cdq
push
inc
movs
icebp
push
aam
mov
and
pop
call
(bad)
jo
out
and
push
setp
adc
mov
push
arpl
mov
mov
ja
sahf
mov
fsub
outs
xchg
cmp
sub
gs
jbe
outs
sbb
dec
in
and
dec
push
pop
jbe
xor
sub
push
xchg
xchg
test
into
(bad)
lods
or
push
or
cmp
out
jge
mov
push
daa
xchg
cwd
jmp
aaa
pop
int
int
retf
repnz
aam
out
pop
jnp
cld
jns
xchg
jbe
pop
icebp
fcomp
les
mov
arpl
mov
dec
in
sub
add
test
jb
cmp
pushf
or
js
sub
or
and
push
add
add
mov
push
fisub
mov
xor
popa
jge
inc
push
or
sbb
dec
imul
test
repnz
cmc
pop
mov
repz
cmp
xor
in
adc
rcr
mov
push
mov
sub
nop
std
aam
movs
clc
scas
pop
pop
pushf
loope
mov
lods
cmp
push
out
cmp
jl
mov
arpl
mov
mov
pop
mov
jae
icebp
or
jbe
sahf
int3
data16
aaa
sub
mov
cmp
or
mov
loop
push
int3
jbe
in
mov
clc
stos
das
lods
push
lds
or
inc
sub
adc
pop
es
neg
fsubr
loop
jmp
outs
or
add
outs
pop
loopne
inc
mov
rol
push
inc
add
cmp
dec
mov
inc
test
les
call
pop
cwde
mov
pusha
xchg
adc
div
jmp
xchg
xlat
(bad)
inc
jbe
cmp
fimul
pop
out
cmc
xchg
dec
push
and
mov
mov
stc
mov
(bad)
push
leave
pop
movs
add
sbb
jmp
cmp
sbb
inc
(bad)
xlat
cmp
mov
xchg
inc
lods
faddp
mov
mov
pushf
add
dec
sub
dec
(bad)
clc
mov
mov
pop
mov
outs
ja
loope
stos
aaa
pop
adc
lods
dec
not
mov
ds
or
cmps
push
add
xor
add
retf
xchg
or
jb
pushf
test
mov
pop
call
test
into
loop
fucomip
cmp
add
leave
lea
sti
jmp
or
add
pop
mov
repz
outs
fs
inc
push
test
push
pop
in
outs
jecxz
or
aam
and
inc
adc
pop
enter
dec
out
test
pushf
adc
pop
dec
xor
add
jmp
xor
xchg
cmp
scas
jnp
loope
sub
pop
or
test
adc
mov
addr16
aam
mov
dec
js
jmp
jmp
out
pusha
(bad)
ins
daa
push
rcr
cmp
js
(bad)
sbb
xchg
ss
mov
pop
xchg
test
mov
movs
inc
dec
push
(bad)
in
fs
xor
xchg
and
mov
movs
test
inc
shl
mov
(bad)
mov
in
(bad)
push
loopne
sbb
xor
mov
sti
mov
popa
or
adc
out
inc
or
sub
xor
push
lahf
cmp
ss
push
mov
inc
retf
add
sbb
clc
ins
out
xchg
scas
jp
out
je
mov
or
and
jge
inc
popf
daa
pusha
cli
ins
aaa
xchg
cmp
add
movs
rcl
add
mov
and
jl
or
in
scas
adc
fisttp
bnd
std
test
ds
cwde
cmp
int3
jb
dec
addr16
jae
into
pop
cmp
cs
mov
mov
cmp
and
(bad)
and
cmc
fistp
adc
jp
sbb
rcr
pop
das
test
dec
scas
add
xchg
(bad)
push
inc
in
adc
dec
loope
js
adc
fidivr
shl
xchg
or
sbb
dec
cmps
out
or
xchg
(bad)
aam
mov
cli
in
push
xchg
fs
stos
pop
mov
push
mov
xchg
gs
shl
rol
retf
jge
fucomi
and
or
adc
clc
lahf
and
iret
or
cmp
cwde
sub
add
stc
lahf
pop
pop
stos
dec
sahf
ficom
inc
outs
loop
out
jmp
xchg
sbb
pop
push
popf
jge
xor
outs
inc
or
shl
jns
bound
jae
cmp
mov
lahf
inc
loopne
stos
and
xor
cmp
push
inc
cmps
aam
jae
daa
ret
leave
fcmovne
pop
add
arpl
call
enter
jns
jmp
xchg
and
mov
cmps
pop
cwde
call
cmps
and
out
jb
std
inc
add
inc
leave
pusha
push
jmp
add
(bad)
mov
jmp
sahf
mov
jne
dec
xor
retfw
dec
dec
add
xor
ins
mov
jecxz
push
pop
call
inc
sahf
adc
jno
cmp
inc
pop
push
sub
sti
xchg
dec
sar
add
jmp
leave
inc
ds
dec
and
jne
lahf
add
mov
adc
jmp
push
retf
cli
(bad)
push
xor
or
and
dec
cmp
data16
call
int
int
dec
pop
mov
pop
xchg
fdiv
cmp
stos
sbb
mov
in
fcom
movs
loope
inc
pop
cmp
add
push
mov
fldz
test
fcmovne
pop
mov
inc
sub
mov
out
mov
jbe
in
and
addr16
jle
dec
leave
fidiv
push
pop
push
loope
(bad)
aam
pop
xlat
mov
xor
adc
adc
cdq
daa
fwait
daa
and
mov
mov
jmp
(bad)
sbb
sbb
push
mov
mov
int
push
iret
sbb
sti
jo
std
jp
jnp
push
or
fcmovbe
mov
push
dec
or
sbb
mov
loop
retf
dec
cmps
stos
out
sar
xor
xchg
add
xor
das
pop
pop
cmc
mov
stc
test
push
push
rcr
cmp
aad
fsubr
xor
push
retf
test
loope
fcomip
cli
pop
ss
or
cmps
jp
pop
fldenv
fmul
xchg
inc
lock
iret
ss
idiv
fs
xchg
mov
fmulp
add
out
ins
std
mov
mov
sbb
pusha
ins
cwde
stos
adc
aam
pop
lea
jle
jnp
xor
in
dec
pop
loopne
fsqrt
out
pop
dec
lods
add
mov
aas
shr
cmp
ins
clc
and
scas
call
mov
lock
imul
inc
mov
mov
sbb
jle
shld
mov
mov
sub
es
sub
repnz
pop
pop
ret
xor
ja
sbb
ss
mov
rcl
pop
xor
mov
sbb
les
arpl
pop
retf
xor
sub
stc
dec
pushf
cmp
lock
jnp
push
sbb
add
add
mov
mul
sbb
jbe
push
mov
std
fdiv
dec
lea
adc
jbe
inc
cmps
dec
xchg
retf
hlt
jl
(bad)
rcl
xchg
inc
enter
scas
sahf
js
ret
add
push
pop
ss
bnd
and
push
test
jo
movs
in
pusha
push
daa
imul
jbe
jne
rol
call
jbe
ja
fistp
cmp
cmp
adc
cmps
sbb
in
test
movs
mov
inc
xchg
adc
push
loopne
pop
inc
repnz
or
fdivr
jl
ret
push
add
into
add
cmp
mov
lock
iret
ins
and
fwait
mov
and
mov
cli
adc
mov
pushf
imul
icebp
and
mov
jne
hlt
xchg
nop
cmp
imul
repnz
mov
clc
repnz
push
stos
arpl
ret
nop
xchg
shl
lea
xor
mov
jne
push
fnsave
jl
push
push
js
ds
in
push
sub
jae
inc
shl
pop
sbb
or
adc
mov
call
mov
fistp
int3
retf
ss
retf
inc
sub
jmp
and
out
pusha
loopne
or
add
adc
clc
jbe
push
movs
frstor
lods
jo
jbe
pop
or
movs
repnz
popf
sub
inc
or
xor
xchg
cmps
popw
jne
ds
xor
into
sub
mov
xor
jo
cli
pop
mov
repnz
daa
mov
repnz
cmp
push
mov
retf
nop
mov
adc
pop
icebp
adc
cmp
pop
cmps
inc
push
or
ret
pushf
xor
push
ror
sub
xor
jmp
test
nop
in
(bad)
clc
sub
jmp
out
dec
mov
xor
cmps
movs
lock
dec
jecxz
cs
xchg
inc
pop
inc
and
add
jp
(bad)
mov
stos
nop
test
adc
ins
inc
pop
adc
pop
aad
ret
jge
jmp
jmp
es
mov
push
repnz
mov
shl
pushf
out
outs
test
fmul
add
adc
pop
icebp
jmp
call
jp
(bad)
xchg
xor
push
pop
outs
inc
push
sub
cmps
les
(bad)
in
mov
xor
js
sar
sti
fnstcw
movs
lods
add
cdq
imul
int3
pop
add
mov
sbb
xchg
mov
in
repz
repnz
clc
in
and
iret
cmc
lea
and
nop
cmp
cmp
out
pop
sub
xchg
inc
push
repz
fwait
ret
or
mov
push
movs
rcl
popa
in
jbe
addr16
xor
mov
inc
pushf
jmp
stc
push
out
jbe
in
xchg
sar
xor
out
push
mov
add
cmp
push
sbb
xchg
xor
mov
fnstenv
jp
and
lfs
push
xor
gs
xchg
pop
loope
sbb
(bad)
and
adc
movs
and
xor
cdq
ds
jg
push
mov
adc
pop
clc
sahf
je
(bad)
lods
aaa
sub
and
pop
mov
and
xchg
mov
fcomp
loopne
jmp
sub
mov
aas
adc
(bad)
ins
pop
mov
shl
or
leave
xchg
xchg
es
je
push
cmp
jp
addr16
(bad)
imul
and
ret
cmp
add
jbe
cmps
aam
inc
sbb
dec
sti
xchg
fidiv
mov
retf
ins
mov
sahf
lock
inc
adc
mov
shl
jmp
aam
out
ds
loop
inc
rcl
cmps
cmp
mov
pushf
(bad)
hlt
lods
xchg
dec
xor
push
xor
mov
in
outs
push
pushf
int3
mov
fld
stos
pop
inc
inc
push
aad
imul
mov
push
imul
ret
leave
ret
mov
xor
cmp
call
push
(bad)
sub
mov
mov
jne
test
enter
xchg
(bad)
addr16
cmps
add
jb
repz
ds
push
and
inc
cmps
stos
pop
(bad)
pop
sbb
jle
inc
xchg
or
add
inc
cmps
rcl
fadd
clc
icebp
inc
loopne
arpl
xchg
les
add
(bad)
jo
xor
ror
push
or
mov
pop
outs
xchg
int3
rcl
fdivr
frstor
push
lahf
or
adc
int
ret
cwde
lahf
mov
adc
and
repnz
adc
sub
repnz
enter
and
fucomip
push
xor
jo
sub
add
sub
mov
or
ds
xchg
adc
xlat
lahf
out
push
mov
sbb
stos
sahf
stos
push
adc
sub
test
mov
xchg
enter
mov
repz
test
imul
fwait
scas
inc
or
mov
sbb
test
mov
outs
mov
jbe
aad
into
mov
push
mov
test
clc
adc
rcl
xor
push
push
cmps
into
les
xchg
jge
add
ret
sub
and
mov
push
dec
push
inc
je
jno
xor
cmc
xchg
fnsave
pusha
adc
aas
outs
mov
inc
les
es
loope
loop
out
jp
nop
or
fwait
xchg
int
(bad)
lods
xchg
aad
retf
shl
dec
sub
daa
in
sbb
imul
push
jae
sahf
jnp
sbb
addr16
inc
cmp
jge
loop
test
jmp
push
fstp
mov
repnz
repz
mov
cmps
cmp
or
sub
mul
push
daa
fld
movs
stc
cmp
(bad)
dec
out
out
mov
mov
es
fldenv
xchg
cmp
leave
xchg
cdq
fnstsw
push
pop
inc
cld
lods
aaa
sbb
pop
jnp
push
pop
int3
push
push
fisubr
popf
scas
pop
test
mov
cld
sub
mov
inc
mov
inc
imul
iret
sbb
mov
ja
jae
jge
stos
test
sbb
jecxz
inc
fadd
push
jmp
fisub
push
pop
and
inc
in
jmp
mov
pop
mov
movs
push
(bad)
xchg
rcr
cmp
leave
add
inc
scas
fld
adc
add
ins
jns
retf
mov
leave
sahf
jmp
mov
add
xlat
mov
mov
lea
push
sub
mov
xlat
adc
cmp
push
mov
cli
retf
repnz
or
xchg
xchg
add
xchg
call
cwde
adc
jge
adc
and
or
in
jbe
cmp
in
mov
inc
mul
call
in
icebp
aam
in
jp
mov
sub
retf
rol
inc
loope
mov
fisttp
sub
in
aaa
in
or
sbb
add
push
dec
fadd
pushf
in
and
sar
test
scas
sub
int
pusha
fidiv
mov
jns
jnp
in
aam
int
scas
xor
push
rol
sub
rol
add
repz
fsub
jl
cmps
push
cmp
arpl
add
mov
pop
enter
add
push
push
mov
pop
adc
test
xor
dec
cmp
aaa
loop
mov
mov
sub
(bad)
hlt
fsubr
cdq
sahf
scas
dec
sub
or
gs
in
lods
mov
mov
push
xlat
dec
aas
int
pop
fcos
outs
addr16
push
fwait
mov
out
aam
cmp
in
mov
not
or
test
cmp
dec
cwde
das
in
sub
test
fnstsw
cmp
or
cdq
aas
cmps
gs
mov
sub
jecxz
xchg
aaa
mov
and
rol
or
notrack
jg
in
mov
or
mov
xchg
retf
fwait
sub
(bad)
jno
(bad)
repz
stos
adc
ret
pop
mov
std
adc
out
mov
shl
out
cmp
ja
or
pop
adc
call
sti
add
or
inc
cmps
loope
sbb
inc
loope
retf
pop
xor
mov
push
aad
fwait
and
mov
jb
sti
out
retf
mov
inc
xor
int
dec
or
push
cld
add
jmp
sub
push
or
mov
ins
loope
cmc
fnstenv
ja
fcmovne
sbb
sbb
jge
daa
(bad)
fs
int3
xchg
ins
popf
xchg
dec
rol
and
popa
inc
rcl
add
cs
adc
int
sbb
mov
mov
idiv
pop
jnp
cmp
out
jecxz
jmp
mov
aad
test
cmc
dec
pop
pop
div
cmp
dec
push
sbb
xchg
cmc
sub
lea
inc
movs
add
add
sbb
mov
sub
int3
and
das
push
add
sub
cli
mov
dec
outs
cmps
xchg
out
mov
lods
inc
clc
xor
dec
xchg
dec
mov
add
dec
mov
fimul
lea
aam
mov
lahf
mov
popf
xchg
imul
mov
shl
adc
sub
retf
(bad)
retf
push
xor
mov
daa
ret
cmp
or
popa
jns
addr16
jecxz
arpl
das
or
push
sub
movs
rcr
fdiv
mov
iret
clc
push
fwait
imul
dec
pop
mov
adc
pop
fstp
js
xchg
loopne
(bad)
leave
cmp
pop
inc
imul
dec
xchg
mov
xchg
ds
(bad)
mov
or
call
loop
cmps
loop
mov
and
jmp
sti
cmps
icebp
sbb
mov
hlt
jmp
dec
jo
in
daa
cmps
out
test
fidiv
cmps
test
inc
add
xchg
sbb
outs
test
cmp
test
jbe
cdq
xor
adc
inc
mov
fucomip
scas
sahf
push
lods
xor
xor
scas
adc
push
add
in
pop
push
cwde
xchg
test
lea
fstp
jmp
and
mov
add
jmp
jne
pop
push
(bad)
xor
mov
(bad)
cmp
sub
mov
shl
mov
std
lock
fnstsw
adc
push
mov
movs
fsubr
mov
or
and
mov
mov
jno
call
call
sbb
pop
dec
cmp
pop
or
pop
lods
mov
pop
aam
sbb
push
(bad)
lods
push
add
mov
sbb
mov
sahf
ror
sub
push
jmp
pop
daa
mov
inc
sti
xor
test
sub
test
jmp
pop
adc
push
repz
jb
and
fist
ficom
clc
add
cmc
in
fwait
mov
retf
enter
pop
sub
pop
pop
dec
or
pushf
sub
or
dec
xchg
imul
out
mov
lahf
xor
xchg
cmp
jmp
bound
bound
or
call
movs
mov
test
repnz
(bad)
xor
adc
test
fcomp
call
mov
stos
bound
mov
shl
iret
js
ins
or
and
loopne
xchg
jnp
push
test
test
push
sub
iret
iret
stos
popa
or
in
mov
push
dec
pop
xor
push
sbb
and
jae
cli
movs
pusha
sti
push
icebp
xchg
mov
push
loope
aad
sub
out
(bad)
movs
lods
inc
mov
xchg
scas
pop
gs
inc
aaa
ret
je
sbb
adc
sub
imul
movs
push
pop
jnp
shr
lea
shl
aas
inc
jb
add
xlat
int3
sub
ss
retf
push
lea
sbb
in
mov
stc
aad
mov
pop
push
dec
inc
xor
sub
(bad)
int
retf
push
fcmovne
scas
jecxz
shr
sbb
and
xlat
mov
cli
jmp
and
mov
lods
add
dec
jp
jmp
mov
scas
and
cmps
clc
inc
mov
aam
retf
pop
call
sub
std
in
nop
shl
stos
jb
jmp
jae
push
and
push
xchg
xor
cli
and
push
lahf
fsub
out
inc
adc
xchg
adc
movs
loop
mov
(bad)
std
jbe
rol
mov
cmp
enter
jp
jmp
loopne
aas
dec
out
out
dec
sbb
scas
imul
cmc
fistp
push
pop
pop
add
leave
stc
enter
mov
dec
(bad)
jl
and
inc
lods
enter
addr16
jle
ror
out
ja
xchg
scas
mov
(bad)
cld
xor
inc
shl
adc
jne
dec
iret
lahf
call
mov
cmps
push
shl
test
nop
jle
jb
mov
loop
push
lods
and
mov
mov
jle
ror
mov
retf
mov
inc
ins
bound
mov
add
aam
lock
pop
lock
fstp
ret
cmps
mov
mov
add
jmp
aas
jmp
cdq
pop
jp
leave
sub
mov
inc
pusha
push
xchg
mov
jne
dec
out
xchg
mov
jnp
sahf
popf
lods
cmp
inc
push
fistp
push
cmp
arpl
add
add
adc
or
mov
or
inc
inc
mov
outs
out
sub
pop
dec
pop
stc
mov
ja
inc
jg
(bad)
sti
or
mov
stos
(bad)
stc
scas
pop
or
call
xor
jo
adc
loopne
in
dec
sub
adc
sub
into
lahf
imul
fs
pop
push
pop
xor
jl
jp
mov
or
sti
mov
inc
pop
pop
cmp
xchg
fwait
pushf
jnp
xchg
fucomi
jne
xchg
mov
sbb
adc
sahf
and
(bad)
call
repnz
int3
jb
and
repnz
(bad)
ss
int3
ja
xchg
mov
lahf
cmp
mov
clc
push
pop
push
jmp
inc
mov
dec
aaa
cmp
ret
xchg
in
dec
xchg
test
jne
xor
or
stc
in
ins
(bad)
fidivr
and
hlt
mov
test
mov
bound
inc
ss
xor
mov
pop
push
mov
mov
in
push
es
push
xor
mov
push
mov
jno
pop
inc
(bad)
aaa
push
mov
in
mov
stc
sub
enter
mov
shl
lahf
jb
or
add
dec
pop
loope
cli
push
jno
sbb
int
scas
bnd
mov
cmp
lock
retf
fcom
xor
push
pop
arpl
das
push
in
mov
fild
mov
jle
or
or
add
pop
cmc
movs
hlt
mov
aas
ins
rcl
cmp
xchg
repz
dec
xor
jmp
pop
sub
repnz
repnz
pusha
loop
jb
push
inc
push
adc
das
imul
scas
sub
mov
call
icebp
xchg
popa
cmp
adc
push
repz
push
xlat
mov
add
punpckhbw
arpl
jmp
icebp
xchg
push
mov
dec
je
retf
inc
cmps
mov
dec
mov
pop
pop
lock
and
xchg
lds
push
mov
push
es
lahf
loop
fcom
dec
xchg
enter
xor
rcl
popf
repnz
lock
sub
jno
mov
inc
push
jecxz
jecxz
xor
xor
dec
jge
daa
add
fxch
and
jb
or
in
pop
xchg
lods
cs
dec
adc
lea
sbb
sysexit
mov
or
iret
mov
test
neg
mov
lock
out
fadd
cmp
outs
sbb
movs
stos
lea
jmp
or
lahf
mov
pushf
ret
imul
les
jno
aad
and
xor
test
cmp
dec
mov
lods
xchg
xor
fstp
jmp
ins
xchg
mov
xchg
push
int3
cli
sti
bound
fstp
dec
ja
stos
fld
push
and
push
pop
add
lock
ins
ror
adc
retf
outs
test
mov
cmovnp
push
inc
dec
xor
mov
mov
in
dec
mov
dec
leave
adc
ret
xor
js
dec
icebp
mov
xchg
mov
adc
dec
xlat
add
in
ins
mov
push
(bad)
jmp
add
or
fstp
das
je
cmp
pop
mov
dec
jmp
push
in
mov
ss
cld
push
xchg
(bad)
mov
es
aad
jnp
sbb
mov
aas
test
stos
mov
retf
inc
or
ins
cmp
pusha
std
lds
jecxz
jnp
mov
cmp
(bad)
(bad)
jmp
sti
mov
faddp
les
mov
pop
(bad)
loope
mov
into
stc
(bad)
call
aas
cmp
nop
int
inc
inc
xchg
sbb
outs
sub
inc
sar
pop
clc
pop
xchg
ins
out
sti
dec
int3
cmp
les
xchg
mov
inc
mov
ret
cmps
cmp
jg
jno
or
mov
pop
mov
cmp
in
outs
mov
xor
mov
dec
outs
inc
adc
fisttp
sbb
mov
popa
int
loopne
pusha
xor
out
or
cmovnp
mov
dec
cmps
adc
pop
xor
cmp
and
jle
shl
int3
mov
jo
adc
mov
mov
dec
jns
mov
sbb
or
mov
jnp
add
pop
or
js
movs
mov
add
clc
pop
int
clc
retf
rcl
(bad)
shl
fdivr
dec
add
jg
lea
xor
ins
inc
outs
add
adc
outs
or
arpl
lahf
ret
sbb
stc
mov
jno
loop
xchg
mov
jp
mov
iret
cmp
or
inc
xor
daa
mov
addr16
xchg
rcr
push
mov
xchg
(bad)
test
or
push
call
dec
dec
or
loop
aaa
mov
fld
pop
mov
repnz
inc
inc
mov
iret
jb
jg
xlat
jne
fsubr
rcr
or
aam
test
mov
arpl
push
movs
pop
les
jge
ins
fild
push
xchg
bound
shl
adc
adc
mov
enter
(bad)
mov
lahf
dec
jo
push
je
jb
jl
stos
test
sar
adc
repz
icebp
or
mov
lock
mov
push
push
movs
aas
out
rol
and
xchg
addr16
xchg
idiv
adc
adc
test
inc
mov
scas
es
push
call
fimul
push
mov
xchg
lods
push
repz
cmp
sti
add
mov
dec
ds
xchg
mov
out
lods
cmp
aam
and
and
hlt
pop
xor
and
mov
popf
in
add
sub
jmp
push
sahf
movs
arpl
mov
cmc
nop
aad
in
out
jne
stc
movs
mov
pop
dec
aas
aad
jecxz
mov
xchg
pop
cdq
add
or
adc
shl
cmps
retf
push
iret
jg
stc
ins
xchg
js
mov
jmp
xchg
jecxz
movs
nop
call
sub
xchg
std
and
mov
push
(bad)
leave
jge
mov
out
pushf
icebp
sbb
push
push
mov
jne
ss
cmp
pusha
cmp
std
cmp
push
and
out
in
xchg
and
pop
call
xchg
jp
jno
mov
out
and
cmp
xchg
mov
test
inc
jle
xchg
sub
xor
mov
jns
add
xchg
add
mov
cwde
data16
mov
stos
pop
stos
ss
xchg
retf
push
in
and
sub
adc
push
sub
cli
fld
std
cs
xor
pop
fist
xchg
add
call
sbb
jle
push
test
cdq
not
pop
inc
cwde
out
(bad)
sbb
icebp
dec
xor
dec
xor
ins
mov
sub
pop
lock
sbb
(bad)
inc
adc
cs
out
xchg
cmp
xchg
mov
hlt
cmps
cmps
(bad)
pop
add
js
cmps
or
out
or
ins
jl
push
lock
popa
or
jge
lock
in
jmp
jl
jecxz
push
pop
test
(bad)
mov
cli
loope
repnz
js
ss
mov
push
pop
dec
scas
jne
inc
test
xchg
cmp
xor
jecxz
jge
cmp
int
xor
call
push
call
js
cld
ss
and
adc
dec
out
leave
out
daa
mov
idiv
and
adc
mov
jo
sub
movs
int
fsubr
and
es
mov
xchg
ins
and
test
jmp
stos
rol
inc
and
clc
imul
pop
cs
xchg
repz
data16
dec
sbb
dec
sbb
outs
fadd
mov
repnz
xchg
repnz
stos
cdq
out
push
lahf
shl
adc
inc
xchg
mov
push
cwde
mov
inc
out
test
mov
loope
cmp
aaa
aad
pop
push
addr16
pop
add
xor
fnstsw
fcomp
mov
push
and
sti
into
dec
addr16
(bad)
dec
dec
shl
or
iret
int
invd
pusha
mov
pop
pop
dec
mov
xchg
fst
push
pop
pop
retf
je
cmp
sbb
push
mov
dec
jle
xor
and
sti
mov
call
jg
xor
(bad)
call
add
loop
div
leave
fst
pop
and
icebp
cmp
scas
outs
push
xor
mov
rcr
lea
adc
call
mov
lea
jge
(bad)
pop
(bad)
xor
loope
cs
jns
and
iret
lods
mov
sub
push
mov
loopne
aaa
arpl
and
retf
add
xchg
or
or
fldenv
fisub
push
cwde
dec
pop
adc
fidivr
and
out
push
jge
ficom
repz
fisttp
je
fwait
in
mov
inc
cmp
scas
(bad)
sub
sub
jno
jbe
xchg
out
sub
aad
ret
push
mov
jae
jp
xchg
lea
in
mov
inc
add
in
(bad)
out
pop
and
(bad)
stos
pusha
pop
xchg
mov
sti
aaa
sbb
mov
push
xchg
stc
push
push
fdiv
mov
ds
add
shl
inc
je
mov
add
outs
pop
inc
pop
cmp
out
ds
std
add
push
add
aam
iret
mov
xchg
outs
idiv
dec
push
ins
mov
test
fidivr
add
xchg
ja
inc
hlt
pop
and
adc
jmp
xchg
imul
rcr
test
rcr
dec
adc
add
gs
pop
test
or
xor
and
ss
pusha
adc
int3
pushf
sub
push
nop
fwait
rcl
pop
xchg
sti
icebp
or
leave
cmp
fwait
cmp
push
cmp
jns
in
cmovnp
dec
jmp
dec
xor
xor
jbe
ja
leave
jno
mov
out
xor
pop
or
loope
pop
inc
sub
pusha
pusha
fnstcw
gs
fild
adc
jns
sbb
cld
jb
in
xor
jp
sbb
jg
adc
loop
inc
pop
mov
fdiv
shr
mov
lock
lea
dec
cli
dec
hlt
(bad)
rcr
and
pop
and
mov
retf
daa
mov
sbb
and
or
inc
adc
xor
sub
xchg
mov
int3
nop
pop
retf
add
aaa
dec
psrad
imul
inc
and
and
dec
xor
mov
retf
sbb
test
jno
or
out
jmp
pop
mov
pop
mul
sbb
pop
and
ss
cmp
jne
or
int3
into
test
pop
adc
mov
sub
add
push
mov
mov
ins
mov
je
cmp
sbb
adc
or
je
push
loopne
outs
cwde
inc
lock
adc
sub
imul
outs
pop
fidivr
pop
fs
or
jbe
jecxz
(bad)
dec
idiv
mov
cdq
jo
dec
rcl
mov
lds
pop
retf
and
push
movs
dec
fstp
outs
lods
push
cmp
aas
dec
fdivp
and
mov
adc
popf
dec
mov
ret
inc
(bad)
out
or
ficomp
sti
xchg
cld
pop
cmp
imul
adc
ror
dec
add
je
test
sbb
push
cmp
mov
ret
les
inc
or
xchg
in
xor
aad
cmp
xchg
outs
dec
std
iret
sub
int
pop
pop
push
add
hlt
in
adc
into
gs
and
sub
aaa
(bad)
mov
shl
addr16
pop
pop
or
or
(bad)
cdq
xchg
add
xor
retf
inc
pop
mov
push
xchg
imul
fsubr
xchg
jnp
push
and
pusha
lea
push
lahf
jo
popa
ror
je
mov
daa
adc
rcr
ret
(bad)
cmps
daa
outs
div
mov
(bad)
cmp
push
icebp
cmp
push
and
cmps
inc
shr
or
dec
cmp
fisub
lods
adc
sbb
xchg
sub
test
stos
pop
adc
cmp
mov
xor
out
add
mov
outs
add
daa
sub
pop
push
xchg
add
cs
jbe
lods
jge
(bad)
movs
ror
(bad)
rol
rol
movs
sbb
out
pop
clc
and
mov
es
pushf
test
jl
cdq
ins
mov
jnp
aas
jl
fwait
or
mov
into
stc
bound
xor
ja
dec
out
ret
dec
push
mov
ficom
aas
cmp
ins
cwde
push
out
aam
ret
and
out
cwde
xchg
or
leave
cmp
loope
hlt
and
cmp
jl
adc
jns
sub
cmc
xlat
xchg
adc
mov
mov
push
add
xchg
jne
mov
push
out
sti
dec
mov
jmp
mov
jmp
in
and
dec
in
cmp
cdq
dec
xchg
ror
push
dec
div
enter
mov
dec
dec
mov
(bad)
mov
(bad)
xor
inc
and
and
push
sbb
lods
mov
dec
jp
les
inc
push
dec
dec
icebp
dec
cmp
jecxz
push
bound
pop
je
iret
sbb
out
dec
ficomp
shl
mul
out
retf
xor
loope
inc
(bad)
imul
push
imul
xchg
xlat
sbb
mov
pushf
lea
imul
lock
lods
xchg
jae
inc
mov
push
repz
adc
int
pop
lea
xchg
pop
push
and
and
jo
std
imul
sub
(bad)
jno
jmp
and
in
cmp
(bad)
popa
push
sub
sar
sahf
fucomi
dec
arpl
into
aas
std
add
movs
in
mov
fst
(bad)
not
call
sar
lods
(bad)
xchg
xchg
call
mov
fst
dec
pushf
dec
mov
es
mov
mov
jno
pop
inc
mov
fimul
push
pushf
cmps
fisttp
jae
sbb
push
ja
mov
cdq
sub
aaa
push
xor
xchg
inc
xchg
in
xchg
aam
outs
pop
add
scas
fimul
sub
aad
je
push
in
xor
and
out
fldenv
jmp
jg
adc
movs
sub
xor
pop
aas
xchg
and
pop
inc
bswap
scas
fs
out
mov
sub
push
mov
push
xor
(bad)
(bad)
xor
call
mov
call
(bad)
rcr
enter
leave
sub
hlt
clc
in
shl
std
xchg
adc
sbb
push
(bad)
mov
shl
pop
push
xlat
(bad)
leave
imul
scas
ss
and
out
mov
out
bswap
(bad)
jns
mov
dec
add
arpl
mov
xor
cld
enter
cmps
clc
jecxz
push
push
xor
mov
or
in
ja
jmp
mov
cmp
push
out
sbb
(bad)
lods
pop
and
loopne
stos
cmps
aam
mov
out
cmc
imul
loopne
push
sub
mov
icebp
push
sbb
push
scas
push
fdiv
jo
sbb
(bad)
shl
add
retf
and
mov
cld
or
mov
sub
fs
jmp
cmp
es
xchg
retf
sub
imul
xchg
(bad)
pusha
aam
dec
dec
push
or
cmp
cmps
nop
outs
ins
cdq
dec
mov
pop
(bad)
clc
repz
sub
je
xlat
dec
movs
mov
lods
and
and
int
retf
xor
add
sub
or
push
xor
repnz
inc
cdq
xor
test
jp
pop
xchg
stos
adc
cwde
dec
push
scas
(bad)
or
ds
sbb
clc
xchg
mov
mov
cmp
cmp
cmc
test
mov
mov
nop
jb
mov
clc
pusha
add
enter
mov
sub
cs
int
sbb
aas
lods
jg
scas
lds
mov
shr
push
ret
inc
inc
push
pop
hlt
nop
inc
call
es
jb
cs
into
call
mov
xchg
sti
and
sbb
mov
scas
push
xchg
jnp
pop
jecxz
dec
cmp
xchg
pop
iret
fnsave
(bad)
dec
push
mov
xchg
sub
rcl
(bad)
xor
lea
push
sbb
retf
movs
sbb
cmp
sbb
cwde
cmps
xor
test
and
repnz
ficomp
(bad)
xchg
aam
out
jecxz
mov
mov
nop
les
mov
ret
fcomp
out
cmp
xor
inc
push
test
cld
push
push
(bad)
push
mov
gs
cmc
sub
or
lods
jge
adc
add
adc
arpl
and
nop
je
fcmovb
xchg
pop
shl
les
jecxz
mov
es
in
call
(bad)
nop
sti
push
mov
mov
push
in
inc
xor
or
mov
adc
sbb
(bad)
jle
xor
inc
and
jecxz
movs
jp
cmp
mov
jne
(bad)
in
jno
jmp
loope
or
or
(bad)
in
xchg
adc
xor
inc
scas
xchg
mov
fidivr
sub
mov
jg
sbb
xchg
inc
ret
scas
sbb
out
daa
inc
pop
arpl
fld
(bad)
std
mov
(bad)
retf
jnp
int3
mov
push
lahf
pop
imul
aad
push
fs
cmp
and
mov
aaa
shl
enter
jmp
(bad)
mov
test
and
fcom
aam
cmp
xchg
arpl
hlt
mov
mov
or
mov
sub
and
imul
push
mov
cdq
call
add
add
iret
fsubrp
sub
aam
in
mov
and
dec
mov
out
lds
push
xchg
xor
sub
sar
mov
aad
iret
mov
icebp
jl
fwait
cmp
jmp
cld
cdq
adc
leave
mov
xchg
xor
inc
xchg
mov
movs
xchg
test
into
pop
fwait
xchg
inc
xor
lahf
popf
dec
push
int
(bad)
push
into
sbb
leave
aaa
imul
xor
enter
mov
pusha
mov
mov
jnp
and
out
inc
(bad)
daa
add
mov
je
arpl
cmc
dec
(bad)
in
add
and
mov
ficomp
fwait
inc
sub
ss
pop
loop
xor
push
jo
pushf
add
retf
out
(bad)
pusha
in
ja
popa
mov
scas
(bad)
adc
sar
call
cmp
xchg
mov
mov
lods
inc
(bad)
sbb
inc
popa
mov
mov
popa
fisub
sbb
push
mov
pop
cmp
sbb
sub
hlt
and
pop
pandn
arpl
mov
out
jmp
jae
xor
push
jb
call
in
in
and
cmp
jae
push
mov
pop
xchg
adc
into
fcmovu
shl
aas
sub
dec
inc
sbb
dec
add
pop
sbb
pop
test
xchg
lock
xlat
test
jl
pop
das
push
jbe
imul
cmp
pusha
pop
pop
cld
or
dec
dec
cwde
or
scas
push
mov
adc
mov
add
jmp
cmc
or
jp
rcl
aas
into
pop
movs
push
fisub
icebp
sbb
xor
cdq
xor
or
add
adc
daa
outs
aad
and
mov
ret
addr16
cmp
ret
xchg
sbb
mov
mov
sbb
neg
cmps
xor
lods
mov
cmp
cwde
outs
retf
sbb
rcl
push
ja
ss
inc
test
fdivr
jnp
dec
and
int3
inc
stc
ret
xchg
jle
xor
icebp
scas
xchg
ficomp
js
dec
xchg
mov
pop
cmp
sbb
nop
lock
lds
ficom
and
rcl
and
add
mov
fwait
les
shr
add
xor
push
retf
push
getsec
add
nop
lods
mov
jle
and
retf
xchg
xor
add
in
lea
jmp
repz
mov
mov
jg
sti
mov
cmp
test
(bad)
loopne
pop
xor
sbb
and
leave
test
in
sub
sub
gs
out
push
xchg
and
pop
xchg
xchg
mov
sbb
xor
imul
addr16
enter
stos
dec
adc
les
mov
xor
push
iret
jae
mov
repz
mov
(bad)
ins
jmp
sub
stos
retf
(bad)
out
inc
imul
mov
sahf
xchg
imul
ds
sub
inc
cmps
sub
add
ret
imul
fcom
inc
and
adc
std
(bad)
in
xchg
pop
push
jnp
dec
ds
sbb
dec
jmp
dec
add
daa
(bad)
pop
leave
fs
sub
mov
iret
cwde
pop
sahf
or
ret
repz
call
mov
pop
div
jno
leave
pop
jne
iret
mul
jl
frstor
mov
pop
mov
adc
jbe
retf
out
dec
loope
test
addr16
or
sbb
cld
jle
out
fs
in
mov
pop
xor
icebp
mov
pop
mov
je
daa
mov
sbb
add
add
push
mul
std
retf
fcom
push
xor
popa
inc
sub
inc
lahf
inc
mov
mov
ins
add
nop
sbb
cmp
cmp
sub
xor
imul
lock
mov
rcr
push
test
xor
sbb
ret
pop
fild
jle
add
jmp
lahf
dec
inc
lods
mov
sbb
jbe
lahf
inc
(bad)
jne
pop
cmps
das
pushf
jns
das
iret
scas
xlat
or
fs
jg
mov
leave
into
js
pusha
outs
call
inc
mov
adc
xchg
mov
movs
mov
dec
cli
inc
fcom
lahf
imul
cmps
sub
and
xchg
push
cmps
jne
inc
aaa
stos
jnp
in
pop
push
sub
fld
lods
inc
xor
dec
(bad)
and
(bad)
iret
add
inc
mov
pop
mov
icebp
out
in
es
add
in
push
lds
push
adc
sbb
mov
cld
imul
scas
cmp
cmp
enter
retf
xchg
in
ror
xchg
inc
mov
(bad)
(bad)
jmp
shl
cmps
mov
mov
repz
test
pusha
sbb
iret
add
jnp
ret
addr16
bnd
mov
pop
pop
pop
push
mov
push
mov
out
jp
jecxz
mov
cmp
add
pop
movs
movs
sub
rcr
(bad)
fsubr
mov
div
cld
lods
cmp
mov
int
std
mov
sbb
int3
jecxz
dec
jbe
cmp
dec
test
mov
aam
fistp
dec
add
mov
ss
fucom
or
pop
jo
mov
test
jp
dec
xchg
outs
ins
cdq
mov
cmp
mov
std
sub
jbe
iret
xchg
pop
adc
sbb
mov
inc
adc
push
daa
lock
push
push
fwait
mov
sub
xchg
outs
pop
pop
mov
push
push
adc
jle
push
rol
cmp
aas
sbb
pusha
pop
sub
add
ret
jns
(bad)
icebp
fstp
(bad)
and
jmp
ins
sub
lods
into
int
adc
mov
and
in
hlt
mov
mov
pop
rcl
mov
dec
sahf
ficom
int3
fild
jo
mov
jbe
es
imul
xchg
jae
test
xor
js
loope
ficomp
cmp
add
push
sbb
adc
sbb
add
imul
clc
popa
mov
enter
stos
and
sub
dec
cmp
add
cdq
fcmovu
mov
out
out
push
mov
std
mov
push
call
pusha
lods
cmp
test
(bad)
pop
loop
outs
push
hlt
les
xchg
fadd
mov
sbb
lods
jmp
mov
jle
xor
dec
sbb
stc
cmp
out
mov
add
in
cmp
mov
sbb
xchg
inc
cmp
aam
mov
hlt
call
in
rcr
sub
or
jp
shr
fdiv
aam
push
out
mov
sub
lds
and
imul
imul
inc
xor
scas
mov
xchg
pop
out
imul
inc
stos
mov
sbb
mov
xchg
call
retf
in
mov
or
pop
call
mov
or
scas
and
fwait
ins
out
jns
in
pushf
pop
jl
call
pop
or
retf
fiadd
mov
fs
fisttp
and
je
inc
xor
inc
adc
in
cwde
add
jl
pop
xchg
psubusw
cmp
loop
dec
loop
fsubr
fidivr
inc
dec
mov
in
xchg
es
mov
test
scas
and
add
mul
xor
mov
repnz
xor
jmp
cmp
dec
stc
shr
loope
dec
popa
adc
adc
rcl
mov
loope
inc
and
sub
clc
pop
add
cwde
test
push
sti
add
ror
pop
pushf
cmp
cmps
cmc
ds
(bad)
retf
pop
xor
xchg
sub
into
adc
cmp
cld
shr
(bad)
sbb
js
imul
ja
ret
push
movs
mov
cmp
(bad)
frstor
mov
adc
gs
fldenv
sub
cmp
mov
in
scas
in
push
mov
ss
xor
jp
ficom
hlt
mov
dec
dec
in
push
(bad)
in
fisubr
jo
xchg
(bad)
cmc
loop
push
inc
push
mov
dec
imul
bound
scas
add
xor
push
cmp
cmps
cmp
(bad)
pop
fcomp
imul
stc
or
jae
test
add
jp
cwde
test
push
dec
(bad)
and
lea
loop
jp
push
jmp
xor
in
fs
xchg
es
cmp
add
sar
mov
mov
shl
or
sbb
pop
cmp
dec
sub
sub
jecxz
jge
pop
dec
sbb
aam
clc
sbb
or
fsubr
test
pop
aam
movs
cwde
ins
ins
jae
dec
sbb
aaa
add
push
jmp
adc
add
cli
jbe
xor
sbb
mov
pop
xchg
jmp
cmps
cmp
push
xlat
div
sbb
pop
hlt
adc
enter
cmp
pop
fs
pop
adc
sub
mov
sub
mov
data16
icebp
inc
pop
xchg
or
sbb
push
ss
mov
xor
inc
test
retf
mov
sahf
pushf
test
sub
inc
pminub
outs
pop
or
retf
test
or
(bad)
push
(bad)
neg
lock
pop
es
or
stos
xchg
jnp
inc
lods
and
sbb
sub
ins
sbb
sbb
adc
jno
lea
xor
sahf
in
clc
imul
mov
and
sti
mov
cmp
fcmovnu
jb
test
out
aam
xor
lods
add
cmp
inc
popf
sbb
inc
sbb
ss
bound
fs
aad
movs
int3
je
jg
push
test
inc
mov
jne
sbb
add
and
test
stc
cmp
pop
retf
idiv
cmp
add
fmul
in
dec
xor
mov
or
ret
idiv
repnz
dec
add
adc
rol
add
rcr
repnz
or
pop
xor
pushf
and
inc
xor
int
mov
push
and
push
cmp
mov
clc
mov
shl
js
nop
add
dec
mov
adc
(bad)
out
(bad)
add
dec
push
gs
or
repnz
mov
mov
ins
mov
xor
xchg
adc
dec
mov
retf
cmp
iret
aam
sub
stos
xor
push
mov
lods
aas
pusha
shl
push
imul
jl
mov
add
aad
or
sub
aas
les
inc
std
lds
cmp
repnz
sbb
mov
pop
mov
pop
pop
adc
pop
or
(bad)
cmps
call
mov
adc
shl
cdq
mov
mov
mov
cmp
adc
push
xchg
pop
mov
cmp
fild
imul
adc
dec
mov
inc
dec
movs
fisttp
rol
and
jo
xchg
or
data16
push
dec
or
adc
sar
cmp
out
test
push
in
ss
pushf
ficom
(bad)
retf
lods
pop
pushf
jmp
and
or
rcr
loopne
push
or
inc
sub
dec
addr16
fwait
(bad)
aaa
cli
mov
call
push
xchg
sti
stos
push
add
pop
ja
mov
das
and
dec
fcom
test
pop
mov
or
into
jmp
nop
jecxz
xor
xchg
inc
ins
aaa
lods
mov
dec
aaa
or
push
jo
leave
rcl
ds
popf
jno
mov
mov
sub
movs
cmps
ds
sub
int
cs
mov
movs
mov
stos
out
inc
jnp
mov
mov
nop
inc
cs
les
fcomi
loope
jle
sbb
adc
imul
push
mov
jae
adc
push
cmp
imul
inc
repz
fcmovne
imul
adc
jle
sbb
jmp
mov
cs
lods
xchg
daa
mov
shl
mov
cmp
das
mov
jmp
mov
leave
enter
hlt
push
mov
sub
and
adc
adc
leave
js
std
lea
fisub
bound
xor
int3
xchg
sbb
rcr
or
jge
and
inc
bswap
xor
jl
out
fs
pusha
push
test
lods
mov
cmp
jg
mov
or
cmp
or
sub
adc
pop
mov
fisttp
cdq
arpl
shr
fld
rcl
stc
aam
call
mov
imul
outs
ins
xchg
ss
sbb
sar
test
dec
xchg
xchg
cmp
(bad)
stc
adc
stc
xor
dec
mov
xchg
fcomp
dec
and
or
pop
add
les
(bad)
and
inc
cmp
pop
xchg
(bad)
jmp
cld
xor
pop
in
fwait
arpl
dec
pop
ror
popa
test
repnz
popf
or
fnstenv
stos
call
pop
popf
sub
leave
inc
jmp
sbb
push
pushf
loopne
sub
in
outs
or
aam
cmp
fchs
and
call
sbb
adc
mov
bound
and
ret
xchg
stc
(bad)
adc
lds
aad
inc
out
adc
fdivr
jp
dec
iret
jmp
pop
push
add
out
shr
mov
pusha
mov
pop
outs
imul
sub
das
ins
xchg
push
sub
inc
lods
inc
jecxz
iret
pop
popf
stos
xor
retf
movs
ret
cwde
mov
lds
push
stos
dec
jp
ss
mov
sub
xchg
dec
(bad)
fsubr
(bad)
inc
rcl
xchg
push
adc
pusha
cmp
jb
pop
mov
clc
sub
xchg
pop
or
xor
jecxz
out
pop
push
aad
test
bound
lods
cmp
xchg
ficom
rcl
in
cmp
mov
loop
jmp
mov
jmp
(bad)
in
add
mov
jmp
and
dec
pop
mov
lods
loope
mov
adc
aad
movs
xor
(bad)
jno
ror
fs
mov
xor
enterw
xchg
retf
mov
pop
xor
(bad)
call
adc
or
nop
inc
nop
cdq
pop
xchg
mov
aam
in
jg
push
mov
xlat
retf
sbb
hlt
(bad)
add
jp
mov
xchg
or
bts
add
scas
mov
inc
in
jl
cld
inc
test
add
cmp
pushf
je
mov
jg
sar
push
ja
push
adc
cmp
jmp
jo
imul
push
and
ficomp
and
leave
jnp
(bad)
ss
fcom
push
loop
fcmovu
push
mov
push
adc
stc
cmps
or
ja
call
ret
lds
cmp
xor
rol
pop
mov
add
and
dec
test
sbb
cmps
(bad)
jnp
mov
popf
test
push
inc
fs
sub
out
mov
aaa
dec
enter
pop
dec
sbb
cmp
adc
xor
stos
or
sub
lods
push
jle
jmp
add
sub
push
std
pop
gs
sbb
shl
pop
mov
lea
jno
stos
enter
adc
sbb
cli
retf
frndint
movs
test
bts
scas
xchg
(bad)
shl
push
(bad)
sub
push
out
mov
nop
mov
popa
or
mov
int3
outs
push
sbb
add
add
or
xchg
jb
push
add
mov
mov
mov
(bad)
fisubr
lods
ret
jb
xor
test
jge
lahf
gs
mov
cdq
in
bound
xchg
xor
or
cmp
inc
sub
loopne
cmps
iret
mov
test
dec
xchg
adc
and
out
lds
cmp
and
aas
sub
(bad)
or
mov
pop
fidiv
inc
test
add
mov
jno
and
mov
das
mov
loopne
mov
mov
stos
in
std
mov
or
in
jno
mov
aaa
pusha
pop
pop
adc
or
add
push
nop
(bad)
stc
(bad)
sbb
nop
fcomp
das
jb
addr16
cmps
aad
pop
pop
push
xchg
push
movs
in
inc
add
movs
xor
rcl
ror
cmps
sbb
jp
mov
ins
push
or
xchg
mov
fdivrp
or
push
dec
movs
fsubr
in
cli
outs
mov
int3
pop
shr
icebp
cmp
jb
es
add
inc
sub
cmp
(bad)
loop
mov
add
sbb
pop
scas
sti
out
loop
jb
rcr
pushf
fbld
xchg
xchg
xchg
repnz
jno
cmp
movs
jmp
cmp
ss
jle
and
inc
inc
retf
test
cmp
popa
sbb
adc
jne
jae
test
push
sub
or
or
pop
jnp
pop
sti
leave
test
lahf
xor
pop
dec
jl
dec
mov
and
imul
or
in
sbb
pop
mov
pusha
cmp
jmp
dec
dec
mov
jbe
adc
fcomp
enter
retf
xchg
imul
(bad)
xor
mov
imul
es
retf
mov
mov
and
sub
cmp
clc
ret
jmp
mov
inc
das
sbb
xchg
cwde
cmp
inc
push
arpl
cmp
fcom
pop
sahf
or
(bad)
mov
inc
add
add
cmp
ja
xchg
add
add
xchg
int3
cmp
pop
pop
arpl
in
and
pop
cmp
inc
add
sub
mov
and
daa
test
push
xor
xchg
imul
sub
test
mov
add
cmc
fs
sbb
rcr
hlt
mov
call
aad
xlat
and
fstp
push
in
idiv
mov
out
pop
xchg
pushf
adc
rcr
sbb
cwde
cmp
xchg
shl
push
or
lea
push
bound
sbb
fucomp
push
aas
pop
adc
(bad)
shl
(bad)
lock
dec
retf
lods
out
loop
add
cmp
dec
cmp
push
and
fcmovnb
cld
arpl
mov
mov
or
sub
(bad)
jo
push
xor
clc
test
sar
jmp
mov
lahf
and
std
pop
in
in
mov
repz
pop
jmp
stc
jp
jle
pusha
ss
push
ret
push
and
pop
popf
sahf
clc
sbb
in
iret
retf
iret
mov
aad
outs
in
in
mov
jg
jnp
ja
adc
popf
pop
rcl
inc
cmp
pop
sbb
(bad)
xlat
mov
icebp
pop
fdivr
retf
jmp
adc
ficom
scas
jnp
cdq
(bad)
dec
or
jl
rol
xor
inc
aas
sbb
xchg
xchg
cmc
dec
ror
movs
call
xchg
push
in
pop
retf
adc
sti
ss
lea
je
mov
fidiv
xchg
mov
push
xchg
jbe
cmps
cmps
out
pushf
test
dec
icebp
inc
mov
jge
lods
shl
(bad)
leave
cs
and
cmp
xchg
pop
sub
and
popa
or
scas
lods
fsubr
les
inc
arpl
and
add
add
add
jno
mov
or
ja
add
stc
popf
out
pop
test
rol
jmp
inc
ins
out
fiadd
(bad)
push
push
mov
mov
repz
jp
ds
jb
lds
xor
cmc
or
mov
shr
or
pushw
push
sub
inc
aam
fidivr
mov
pop
mov
daa
iret
movs
push
lea
mov
sub
rcr
ret
adc
popa
jb
pop
dec
adc
dec
scas
jge
(bad)
neg
fdiv
and
push
imul
pop
lods
stos
arpl
movs
movs
sti
cs
sub
or
xchg
sub
add
pop
jae
into
aad
sti
jbe
aam
mov
cs
adc
mov
adc
dec
scas
retf
dec
cli
xchg
pop
mov
js
and
push
pop
fisttp
sbb
sahf
add
mov
adc
jne
and
add
imul
fwait
adc
retf
in
xchg
bound
(bad)
and
ja
jge
pop
ficom
sahf
cmps
mov
jge
(bad)
out
nop
dec
dec
add
mov
mov
retf
nop
fst
repnz
sbb
jmp
xorps
inc
mov
inc
in
cmps
arpl
mov
ret
dec
push
shl
mov
(bad)
cmc
adc
inc
sub
das
push
mov
sub
xor
inc
into
mov
fadd
ja
aas
mov
jle
jo
aad
mov
pop
sbb
fstp
inc
jnp
push
dec
aam
cmp
das
cmps
pushf
mov
cmc
push
into
(bad)
ins
or
and
jmp
outs
or
dec
std
out
cdq
repnz
xor
repnz
test
(bad)
test
out
or
ficom
and
lods
mov
cs
std
jno
sysexit
fisttp
dec
jl
shr
jecxz
xchg
call
add
jnp
add
mov
inc
push
fsubr
pop
cmc
pop
push
mov
stos
cmc
inc
or
test
xlat
mov
jbe
dec
inc
jecxz
xor
mov
icebp
cmp
rcl
pop
xor
aaa
out
sbb
cmp
jmp
inc
test
rcr
mov
mov
lock
pop
xor
gs
cmps
push
xor
or
mov
or
adc
cmp
jb
loop
xchg
pop
mov
mov
idiv
xor
dec
pop
cmp
sub
pop
jp
aas
and
aaa
ret
adc
int3
repz
sbb
aaa
mov
imul
add
xchg
mov
mov
loope
dec
pop
mov
ret
xor
call
xor
pop
stos
pop
les
mov
out
popa
xchg
stos
sbb
pop
call
or
mov
xchg
in
inc
mov
arpl
jb
and
xchg
movs
jecxz
arpl
enter
data16
ret
xor
sbb
add
(bad)
adc
inc
adc
nop
ret
pop
xor
movs
imul
sbb
cmps
xlat
lods
xchg
sar
pop
call
sub
adc
shl
jp
mov
xchg
in
xchg
jmp
mov
pop
xchg
mov
push
in
cmps
mul
fbld
xlat
jle
lea
sti
in
mov
ror
fistp
fbstp
push
sbb
icebp
mov
pmulhw
and
inc
mov
ror
pop
cli
add
jne
jge
jno
sub
or
adc
cli
sbb
xchg
ss
mov
jl
data16
jne
mul
jmp
or
mov
shl
jnp
xchg
in
dec
xor
xor
iret
push
mov
jg
dec
add
adc
lea
dec
and
add
push
dec
inc
stos
jmp
mov
mov
xchg
push
mov
fimul
es
repnz
jnp
fwait
mov
repnz
ret
mov
das
out
push
addr16
jae
push
arpl
push
mov
mov
loop
leave
out
outs
popa
ret
les
mov
jns
in
dec
test
loope
adc
cmp
mov
(bad)
sub
and
cs
add
mov
fsubr
icebp
xchg
pop
movs
gs
cs
lock
and
(bad)
fsubp
adc
mov
dec
(bad)
in
ins
push
cdq
mov
mov
cld
inc
pushf
pop
out
sub
jle
addr16
bound
int
bound
cmps
push
movs
pop
clc
stos
jb
sub
call
mov
xchg
sar
(bad)
hlt
fs
rol
cmc
xlat
sub
and
or
cmps
rcr
dec
push
imul
sbb
in
les
mov
cmp
cs
test
cmps
or
test
cmp
xor
xchg
add
mov
xor
jbe
imul
adc
push
cmp
and
sub
lods
xor
lahf
data16
int
ret
xchg
aad
aaa
ins
xor
cli
fdiv
pop
arpl
(bad)
xor
inc
or
xchg
push
lods
ds
mov
push
push
push
iret
dec
out
and
xchg
ror
movs
sbb
adc
pop
ret
add
outs
cli
mov
fistp
mov
adc
pop
jb
loop
sbb
jg
into
jbe
jecxz
xor
and
jl
fisub
iret
mov
mov
pop
mov
push
cmp
and
jns
mov
mov
out
clc
inc
jecxz
inc
out
xor
out
scas
xchg
jo
add
rol
mov
inc
xor
aas
retf
icebp
loopne
dec
sbb
and
adc
sti
xchg
dec
sti
sbb
pop
push
xor
mov
sub
dec
pop
test
data16
dec
mov
mov
jle
adc
leave
out
jne
cmp
jmp
xchg
out
ds
sbb
jae
retf
xchg
or
mov
jg
xchg
mov
daa
jle
xchg
sbb
scas
sbb
add
push
mov
mov
repz
stc
cmp
jle
out
mov
(bad)
inc
xor
push
aas
mov
movs
(bad)
ins
loop
or
and
inc
sbb
popa
sub
cmp
inc
(bad)
ins
xchg
mov
mov
(bad)
jg
(bad)
stos
das
fwait
hlt
adc
mov
xchg
xchg
ins
mov
jnp
hlt
xor
inc
retf
pop
xchg
sahf
or
dec
out
dec
pop
test
fdivr
dec
ret
cld
xor
xor
in
xor
mov
(bad)
dec
pminub
mov
pop
push
jb
add
or
bound
adc
test
(bad)
test
in
popf
shl
sar
dec
cmp
mov
shr
cli
dec
sbb
je
fwait
clc
push
cmp
jnp
aad
dec
nop
jle
cmps
jp
dec
cmps
(bad)
js
iret
ins
fsubr
out
add
cmp
clc
xchg
xchg
mov
scas
mov
sbb
jle
and
fidivr
add
or
loopne
or
fiadd
fdivr
jecxz
mov
or
xchg
stos
sub
fdivrp
mov
push
movs
inc
(bad)
pop
ja
in
hlt
pop
lahf
dec
add
cmps
repnz
mov
clc
call
adc
mov
jle
and
arpl
xchg
ins
pop
mov
xor
mov
call
cmp
neg
ins
into
in
outs
mov
jb
inc
add
(bad)
xchg
int3
dec
jmp
stos
popf
adc
xchg
(bad)
and
out
pop
push
mov
cs
pushf
sar
push
cmp
sti
dec
adc
jne
push
mov
ja
sub
inc
and
sub
cli
int3
gs
inc
mov
or
pop
(bad)
data16
in
out
dec
cmp
dec
les
adc
adc
dec
ffreep
cmp
sbb
(bad)
in
into
xor
je
test
xchg
out
fisttp
stos
push
jmp
loope
xchg
in
dec
push
jns
or
mov
cmp
pop
jecxz
rol
fs
scas
shr
mov
mov
sbb
(bad)
pop
cwde
(bad)
xchg
sub
mov
popa
cmps
pop
and
add
(bad)
sar
cmp
mov
loop
fwait
and
add
sbb
mov
int
fidiv
xchg
jno
dec
jbe
ret
mov
mov
mov
and
xchg
push
movs
repz
and
pop
mov
and
sub
add
gs
pop
push
test
adc
mov
mov
lds
inc
cdq
jnp
rcr
aaa
jo
lods
cmps
les
adc
fsubr
ja
aam
fsubr
popf
fdivr
dec
int3
imul
clc
and
mov
out
fwait
loope
hlt
sbb
mov
sbb
inc
ins
xchg
out
mov
xor
inc
retf
jge
inc
sub
mov
push
hlt
xor
add
jl
dec
push
movs
push
mov
add
es
xor
repz
jmp
push
push
loope
scas
movs
pop
mul
or
in
jmp
add
cld
cmps
and
fsubr
mov
lea
xor
cmp
test
les
por
(bad)
mov
mov
or
dec
in
das
ins
mov
aam
loope
imul
xor
outs
jl
or
and
mov
(bad)
jne
or
or
sar
xor
aad
aad
cmp
out
xor
mov
and
pusha
repz
xchg
cld
sub
or
mov
(bad)
adc
cwde
fisttp
sbb
lahf
mov
sbb
inc
jecxz
adc
rol
call
pop
inc
out
out
xor
imul
mov
fisttp
cmp
jle
jle
hlt
jb
push
daa
sub
jle
rcr
pop
or
adc
push
icebp
mov
sub
pop
sub
and
adc
cmp
mov
mov
imul
lea
inc
sbb
push
nop
pop
outs
fs
ja
(bad)
jmp
sti
inc
fldenv
movs
pop
mov
xchg
jp
sbb
mov
xchg
ss
mov
(bad)
(bad)
adc
test
add
stc
and
pop
push
push
enter
mov
push
mov
sbb
jle
and
dec
pop
stc
loopne
cmp
xchg
inc
(bad)
jmp
cs
sub
in
(bad)
xor
inc
cs
adc
inc
sbb
add
fdivrp
mov
out
inc
loopne
mov
sbb
add
mov
sbb
or
in
ret
mov
mov
sbb
xchg
retf
cmps
cmp
into
inc
fcomi
loop
addr16
daa
stos
test
cdq
fwait
int
jo
les
(bad)
push
stc
jnp
adc
add
dec
add
loope
or
xchg
dec
mov
fidivr
mov
imul
out
xchg
jbe
mov
cdq
stc
cmc
cwde
(bad)
dec
neg
imul
scas
fcmovnbe
push
xor
add
aad
test
out
int3
mov
loopne
sti
pusha
sub
pop
icebp
jmp
push
sti
xchg
ins
xor
fst
xchg
push
test
retf
pop
fist
adc
push
shl
jne
pop
shr
cmp
cmp
pop
repnz
cwde
fidivr
fstp
push
sub
loop
jne
shr
icebp
movs
jecxz
imul
jae
loope
retf
out
outs
xor
stos
ds
sbb
cmc
rcr
retf
out
daa
repz
jle
inc
cli
ss
mov
out
jp
mov
dec
pop
and
sbb
xor
in
loope
push
and
xchg
pop
scas
test
dec
adc
repz
mov
pop
pop
pop
imul
mov
mov
xor
xor
xchg
(bad)
call
and
pop
mov
mov
xchg
cmp
jge
or
push
dec
mov
push
out
frstor
aaa
pop
add
aaa
cmps
adc
iret
nop
movs
xor
xchg
jp
stc
rcr
das
repz
xchg
and
inc
mov
xchg
mov
out
mov
sub
cli
repnz
(bad)
push
dec
mov
inc
les
xchg
add
jo
jo
and
out
and
mov
test
cli
imul
retf
retf
jg
call
jl
das
pop
mov
cmp
mov
stc
dec
push
into
dec
adc
sti
or
imul
mov
gs
inc
inc
cmp
hlt
rcl
xchg
jl
enter
pop
jle
sub
out
call
pop
(bad)
mov
fwait
loop
popf
xor
fs
mov
(bad)
lods
call
mov
fidiv
lods
mov
and
pop
jnp
lods
ficom
jmp
cmp
ret
mov
in
lea
gs
and
aas
(bad)
sti
and
fimul
(bad)
in
inc
lods
inc
movs
mov
dec
clc
jmp
cs
inc
lds
ss
cmc
leave
jmp
jl
out
ins
and
inc
add
(bad)
pop
mov
lods
or
dec
out
mov
in
xor
pusha
push
aam
adc
aas
inc
aaa
test
fld
inc
add
mov
bound
shl
push
or
jmp
sbb
cwde
(bad)
out
fidiv
mov
popf
mov
mov
shr
mul
mov
or
xchg
dec
test
cmp
leave
addr16
add
ds
retf
inc
movs
xchg
xchg
popa
aam
shl
pop
sbb
or
shl
mov
dec
cmp
jo
aas
inc
pop
sub
out
inc
add
pushf
push
cmp
and
(bad)
mov
in
sub
mov
push
test
aam
retf
cmps
je
jecxz
(bad)
icebp
fs
sub
mul
sbb
movs
sub
cmps
jbe
mov
pop
push
outs
stos
xchg
jmp
out
jg
cwde
(bad)
pop
popa
or
mov
dec
adc
xchg
mov
or
enter
add
fucomi
dec
fbld
jge
pop
or
push
test
xchg
xlat
push
dec
push
jne
push
adc
(bad)
cmps
mov
xchg
sbb
loop
or
adc
inc
aam
xlat
sbb
mov
lea
push
imul
sahf
cmps
jmp
cs
xlat
mov
ins
xor
xchg
or
inc
push
inc
lods
ffree
jg
or
or
cwde
pop
push
test
repnz
add
push
(bad)
push
xor
test
retf
out
sahf
mov
popa
mov
mov
pushf
in
shr
ds
pushf
jecxz
clc
sar
es
popf
addr16
adc
fimul
xchg
xor
cmp
mov
rcr
and
mov
cmps
out
sbb
aaa
add
mov
push
xor
dec
lds
lods
mov
(bad)
fisubr
out
xchg
mov
call
int3
outs
sub
repnz
mov
retf
xchg
sbb
inc
sbb
sub
(bad)
cmp
push
stc
imul
push
push
int
sub
jno
pop
std
in
stos
adc
mov
ret
mov
dec
das
scas
pop
xchg
or
and
xchg
(bad)
push
xor
xor
fild
jbe
(bad)
push
push
jnp
sub
push
mov
pop
push
loop
push
aad
dec
mov
mov
mov
jl
xor
not
shl
pop
test
sub
jbe
pop
pop
ror
add
xchg
xor
add
dec
xchg
das
sbb
daa
and
jge
outs
add
hlt
lahf
inc
cld
and
leave
in
mov
xchg
or
mov
sbb
pop
aas
in
mov
mov
jge
mov
dec
rcr
shr
jp
adc
inc
iret
xchg
sub
lahf
dec
add
icebp
inc
ss
mov
gs
xor
mov
mov
movs
mov
adc
(bad)
and
cld
adc
jmp
fstp
je
out
add
inc
mov
cmp
cmp
(bad)
mov
sub
cld
dec
mov
xchg
mov
sti
lock
add
loope
push
mov
cdq
push
jmp
push
cwde
push
imul
arpl
adc
(bad)
outs
jbe
ja
xlat
and
sub
in
test
and
or
iret
pop
mov
mov
jge
pop
fsubr
pop
loop
add
cmp
cld
rcr
sub
adc
popa
sbb
(bad)
jbe
jp
cwde
aam
xchg
push
ror
mov
push
lods
pop
dec
add
pop
daa
aam
mov
jmp
mov
ficomp
mov
sbb
popf
or
call
push
adc
push
pop
sahf
fisub
cwde
test
mov
dec
mov
jp
enter
add
pop
test
and
xchg
call
(bad)
call
fidivr
jg
in
or
jmp
loopne
je
cs
in
pushf
inc
mov
lahf
or
jle
call
xor
nop
test
pop
jmp
jg
push
repz
lahf
daa
push
retf
shr
jns
outs
mov
(bad)
and
pusha
fwait
dec
sub
pop
sar
repz
mov
pop
and
fistp
leave
das
or
jg
inc
pop
pushf
jmp
rcr
jge
ror
and
mov
rol
nop
inc
and
mov
dec
pop
sub
xor
ds
jnp
inc
mov
xchg
lock
inc
nop
in
xchg
and
and
cmps
inc
jge
js
retf
outs
loope
cmp
mov
add
mov
into
cmc
push
fdivrp
cmps
mov
jno
xor
mov
bound
dec
mov
pop
jle
dec
sbb
inc
cmp
aas
sbb
xchg
add
jp
mov
lahf
aaa
in
pop
test
loopne
gs
rcr
or
idiv
mov
jo
push
mov
movs
movs
add
push
das
sub
(bad)
ins
es
enter
mov
jge
pusha
(bad)
mov
out
mov
xor
jnp
adc
cmc
pop
in
dec
or
leave
cmp
dec
mov
cmp
mov
out
push
push
inc
cli
es
rol
enter
dec
icebp
icebp
int
leave
mov
(bad)
pop
xchg
xchg
add
(bad)
pop
pop
frstor
bound
es
push
push
ja
adc
mov
jmp
repz
sbb
les
clc
stos
into
add
repnz
mov
add
or
mov
test
sar
les
mov
cwde
adc
sti
sub
jmp
mov
js
xchg
call
fld
jne
cmp
es
mov
pop
gs
nop
adc
sbb
shl
into
(bad)
mov
dec
test
inc
jmp
inc
sub
stc
mov
dec
shr
ins
test
movs
clc
or
call
stos
div
in
stos
daa
ds
jmp
(bad)
xor
push
mov
and
xchg
add
and
pop
and
jle
cdq
or
jb
push
std
sub
push
cmps
mov
mov
ins
es
callw
scas
mov
mov
nop
cmp
mov
cmp
sbb
js
loop
lahf
or
xchg
mov
mov
mov
icebp
fnsave
int3
mov
push
ss
jnp
xchg
jb
cmps
repz
and
clc
mul
inc
lods
addr16
pop
jmp
cdq
jae
mov
bound
pop
(bad)
cmp
loop
popa
mov
inc
mov
out
iret
push
mov
std
arpl
xchg
jl
movs
and
mov
mov
adc
pop
add
loopne
push
xor
sbb
lahf
xchg
or
test
call
push
pop
push
dec
inc
imul
pop
test
push
sbb
test
jl
cmp
xor
push
inc
ins
push
push
push
ret
sbb
inc
in
arpl
bound
lods
fnstsw
divps
adc
(bad)
shr
into
jb
movs
jb
mov
mov
inc
or
xchg
dec
rcl
xor
sar
arpl
inc
out
cli
push
xor
lods
adc
xor
ror
jne
mov
(bad)
stc
and
pop
adc
stos
pop
mov
cs
xchg
xchg
pop
cwde
lods
add
sub
sti
jb
outs
inc
inc
push
xchg
lods
pop
jecxz
and
mov
mov
enter
cli
ds
not
push
cmp
xor
pop
das
js
xor
xor
jle
xor
(bad)
cmc
inc
xor
fiadd
(bad)
pop
pop
int3
lods
pop
out
and
in
push
or
mov
jl
nop
inc
adc
retf
cdq
dec
add
sbb
retf
mov
adc
hlt
fadd
scas
pop
lea
jecxz
xor
aam
mov
mov
sub
gs
and
cmp
iret
shl
add
repnz
mov
imul
mov
call
sub
enter
pop
cmp
inc
jb
adc
push
scas
inc
mov
lods
clc
jbe
ror
xlat
bswap
dec
xchg
fs
push
adc
out
(bad)
jbe
popf
mul
js
push
int
mov
xor
(bad)
xor
lahf
daa
dec
sub
test
retf
xlat
jo
mov
mov
imul
shl
and
sub
mov
stos
inc
enter
sbb
xchg
imul
inc
std
xchg
xchg
cmp
adc
dec
jle
mov
add
arpl
jg
iret
pop
mov
cmp
mov
jecxz
cli
inc
pop
jno
pop
sub
nop
das
push
mov
sti
test
sti
mov
js
mov
pushf
dec
sar
mov
sti
fisttp
mov
dec
mov
test
mov
and
fisub
mov
imul
aam
adc
xchg
imul
shl
jle
dec
mov
jecxz
sbb
cmp
mov
scas
jmp
jp
and
mov
ror
std
sub
pop
add
in
iret
sub
out
xchg
push
icebp
imul
in
aas
rcl
repz
imul
push
stos
les
push
push
inc
scas
jb
and
pop
retf
hlt
mov
je
stc
iret
test
jo
adc
mov
add
cmp
retf
das
push
adc
push
and
xlat
call
rcl
inc
rol
icebp
outs
dec
jg
(bad)
jb
lea
ret
or
mov
jb
mov
pop
ficomp
mov
shl
add
popf
xor
movs
and
nop
dec
dec
int3
xor
fs
cmc
and
dec
clc
pop
movs
xchg
dec
jns
cmp
(bad)
and
sub
inc
dec
mov
pop
aam
ds
xchg
push
imul
push
out
in
dec
jg
movs
add
mov
adc
sbb
out
sbb
xor
jb
lock
call
ret
ins
sub
sub
fcom
cmp
dec
inc
mov
pop
mov
or
mov
sti
loope
sub
ficom
push
pop
sbb
(bad)
shl
xor
mov
sbb
in
ins
inc
fistp
arpl
jae
dec
mov
fimul
clc
repnz
dec
mov
push
pushf
pop
cmps
cmp
xor
dec
je
(bad)
in
sahf
aas
icebp
xchg
dec
fcomp
jle
jo
xchg
lods
inc
inc
xchg
push
sti
stc
popf
mov
dec
jmp
outs
pop
mov
inc
repz
and
push
add
mov
xchg
push
push
dec
adc
lods
and
or
xchg
xor
and
into
les
ffreep
add
jno
sub
sbb
iret
sbb
iret
mov
add
mov
push
cmp
ins
test
cld
lgdtd
fwait
dec
mov
mov
jno
cmps
ret
scas
lods
fldlg2
mov
fs
std
test
xor
cmps
pop
xor
pop
in
sub
sbb
xor
retf
enter
push
repnz
pop
add
dec
jp
and
mov
cmp
jnp
(bad)
or
sbb
add
cmp
xor
mov
js
test
je
dec
dec
jbe
sbb
jmp
dec
inc
sar
push
or
xor
out
pop
enter
mov
mov
es
or
retf
pop
call
mov
fdiv
and
lahf
mov
movs
iret
add
push
mov
add
adc
sbb
iret
jg
xchg
cmp
pop
push
and
sbb
scas
dec
(bad)
neg
inc
mov
jns
cmovge
sub
cdq
inc
jnp
enter
jge
ss
push
ror
call
sbb
lods
rol
xchg
cli
(bad)
fbld
xor
mov
mov
xchg
xchg
jo
div
nop
mul
es
mov
xor
repz
cs
fwait
mov
pop
sar
test
or
cld
xor
ss
lds
cs
(bad)
(bad)
xchg
push
sbb
adc
pop
jmp
cwde
imul
movs
inc
sub
pusha
loope
pop
adc
adc
lea
fld
cmp
push
sub
icebp
push
test
mov
add
mov
push
jbe
cmc
and
cmp
jge
popa
ret
data16
jb
mov
or
ja
popf
icebp
(bad)
clc
adc
arpl
mov
cmp
and
push
adc
inc
es
(bad)
adc
mov
pop
out
dec
cdq
lods
ret
imul
lds
mov
lea
cmp
cld
(bad)
out
pushf
retf
das
mov
mov
push
psllq
and
and
call
mov
ror
iret
lds
out
je
cmps
fild
mov
jne
mov
lds
leave
xchg
adc
dec
hlt
dec
fbld
mov
mov
stos
nop
out
out
pop
mov
dec
fldcw
and
daa
dec
cs
mov
sbb
loopne
scas
xor
fist
or
adc
(bad)
mov
and
or
das
add
mov
and
fs
sar
inc
idiv
mov
push
adc
mov
cs
adc
scas
xchg
or
ret
cmp
sbb
repnz
call
adc
fstp
call
add
lds
pusha
fisub
mov
dec
(bad)
xchg
pop
ror
in
push
fcomp
lods
ins
fiadd
inc
mov
xchg
arpl
jmp
ds
cmps
adc
pop
hlt
scas
test
inc
mov
hlt
scas
mov
pop
mov
push
sub
ja
mov
xchg
dec
xchg
adc
cmp
mov
add
int3
mov
aaa
ror
sub
retf
and
jecxz
mov
(bad)
fist
jp
ss
lods
sbb
ret
and
cmp
movs
and
ins
aam
add
mov
fs
xchg
aaa
movs
arpl
push
lea
push
push
push
into
leave
out
call
jo
pop
dec
(bad)
fcomp
enter
inc
into
and
js
test
or
cmp
cmps
inc
clc
inc
jb
retf
pop
mov
sbb
rcl
int3
mov
cmp
or
sub
sbb
or
inc
pop
arpl
stos
inc
sbb
push
ins
imul
pop
xchg
fld
xor
imul
loopne
scas
je
mov
jg
dec
mov
stos
leave
cwde
add
ds
and
rol
icebp
push
mov
jge
mov
dec
ret
and
adc
xchg
lahf
or
rol
and
in
add
jns
dec
push
sub
add
data16
dec
sub
mov
mov
push
rcl
int3
retf
out
add
xchg
into
dec
mov
jb
and
aad
cmp
sub
adc
pop
mov
repnz
inc
push
jmp
imul
rcr
imul
adc
cmp
neg
lahf
outs
push
mov
repnz
pop
fcomp
rol
jmp
sbb
sbb
repz
push
pusha
icebp
dec
or
loope
pop
mov
mov
js
cs
xor
jg
ins
sbb
xchg
aam
(bad)
out
icebp
sbb
inc
jmp
test
jmp
push
sub
retf
mov
loop
ret
loope
pop
jmp
int3
jnp
les
jg
lods
stc
enter
sub
and
icebp
jmp
(bad)
int3
fist
lock
dec
std
adc
mov
stc
or
mov
jne
adc
push
push
loop
inc
add
int3
xlat
cli
fild
mov
xor
hlt
push
pop
clc
into
xchg
jmp
mov
and
sub
shl
ficom
ins
jge
ja
mov
sub
loope
sbb
sub
jl
icebp
mov
mov
lds
dec
xchg
jns
push
leave
fadd
cld
fidivr
mov
mov
xchg
das
pop
(bad)
jle
add
aad
enter
dec
retf
xchg
lea
outs
in
sbb
push
add
mov
add
fnstsw
inc
jnp
in
and
data16
fs
ja
jp
nop
stos
dec
add
dec
nop
outs
stos
in
pop
gs
imul
and
add
mov
test
cdq
and
inc
add
iret
mov
out
int3
xor
in
stos
cmp
jecxz
je
adc
inc
nop
mov
xlat
pop
cmps
pop
jno
jle
jmp
xchg
hlt
sub
out
sub
jae
sbb
mov
icebp
mov
pop
lods
cmp
loope
cmp
add
jp
retf
std
fidiv
sar
or
inc
je
ds
adc
outs
push
dec
pop
lock
fisttp
mov
xchg
cmp
js
leave
leave
sbb
out
aas
adc
retf
je
mov
push
sbb
outs
mov
inc
shl
push
add
sbb
mov
and
or
mov
lock
ret
jae
(bad)
retf
call
pop
rcr
xchg
pop
cmp
inc
adc
in
push
and
lods
sbb
call
aas
pop
jne
sub
and
adc
je
mov
rol
sub
xchg
dec
mov
xchg
arpl
adc
out
cmp
outs
inc
fsubr
or
pop
jge
(bad)
mov
mov
jne
and
pop
cdq
addr16
mov
cmp
aam
xchg
mov
ss
shl
test
cmc
fs
sbb
sbb
test
mov
sub
sub
outs
jnp
(bad)
jnp
jnp
sub
add
pusha
ficomp
(bad)
pop
adc
loopne
jmp
into
cmp
mov
mov
dec
cmp
icebp
cmps
cmp
idiv
jno
pop
inc
push
adc
ds
pop
dec
ja
push
mov
movs
cld
cwde
mov
dec
jno
jg
ret
xor
call
scas
loopne
repz
inc
fsubr
pop
fwait
popa
dec
aaa
sahf
mov
rol
or
pop
mov
sti
cld
xchg
rol
sbb
pop
outs
(bad)
xchg
sub
xchg
aaa
into
(bad)
cmp
arpl
inc
mov
neg
xor
outs
sbb
fsubr
fst
jb
scas
fldcw
add
lea
jg
mov
inc
mov
jg
push
push
push
push
mov
in
and
mov
xchg
std
add
add
sti
cmp
(bad)
sub
ja
inc
ss
test
cli
loope
cld
cwde
cwde
lock
mov
push
or
cmp
out
sub
popf
adc
scas
ret
scas
mov
into
lahf
leave
in
sbb
or
sbb
push
int
(bad)
push
test
xor
icebp
adc
cwde
and
mov
loop
sub
mov
pop
dec
hlt
sub
jno
cld
dec
push
dec
sar
mov
push
mov
or
pop
into
mov
push
cmp
xlat
arpl
cmc
cdq
sbb
xchg
ret
fsubp
call
xchg
pop
(bad)
mov
pcmpgtb
sub
ss
jae
mov
in
adc
cld
and
ins
jo
shl
(bad)
bound
add
pop
pushf
into
out
adc
fadd
lods
and
outs
ins
ss
icebp
sub
mov
dec
test
imul
or
sbb
pusha
mov
das
fiadd
adc
push
push
jns
xchg
sahf
out
inc
pop
sub
sub
or
inc
inc
push
dec
retf
pop
and
hlt
lahf
nop
aaa
nop
(bad)
fld
lds
and
(bad)
and
jp
call
inc
aad
pop
shl
pop
scas
(bad)
(bad)
fdivr
add
jno
mov
ja
lods
hlt
in
fwait
js
add
hlt
pop
out
lahf
inc
cmp
inc
call
jecxz
cli
push
mov
cmp
enter
gs
lds
stos
data16
ins
mov
mov
and
pop
mov
stos
imul
inc
push
jo
add
ds
lock
and
mov
pop
xchg
aaa
push
adc
jp
fmul
out
pop
or
sub
jne
test
outs
pushf
jle
push
pop
add
out
ss
xchg
js
mov
dec
sbb
test
and
fs
mov
cmp
mov
in
adc
xor
push
mov
rol
push
mov
or
and
shl
mov
cmps
sar
fwait
sbb
std
addr16
add
mov
icebp
jns
outs
aaa
(bad)
test
sti
call
ffreep
inc
ret
jnp
loope
(bad)
sahf
pop
xchg
or
rcl
loope
lods
jae
pop
repnz
sub
adc
dec
pop
xor
and
hlt
pop
mov
jne
pop
lods
add
(bad)
mov
loope
scas
pop
pop
retf
and
addr16
xchg
push
pop
arpl
popf
dec
popa
push
cmps
xor
call
push
out
cmc
loopne
jns
dec
(bad)
pop
scas
retf
mov
xchg
fadd
adc
rcr
aas
out
out
push
imul
fstp
rcl
lahf
or
std
leave
fldenv
dec
mov
jns
mov
or
mov
div
mov
mov
sbb
push
gs
and
ror
sbb
sub
fwait
mov
mov
sti
push
loope
cmps
sub
pop
arpl
es
cmp
sar
fwait
xchg
pop
sub
out
test
cmp
les
inc
jp
or
outs
push
fcom
mov
jno
aad
jge
ret
pop
mov
adc
cdq
push
dec
adc
push
sub
mov
lahf
enter
stos
leave
ret
mov
dec
xor
xchg
cmps
loop
test
test
sbb
cdq
fldenv
cmp
in
xchg
dec
xor
pop
sbb
lds
fisubr
pop
push
ret
mov
push
sbb
data16
pop
jecxz
ficomp
out
ds
jbe
fld
aad
sahf
loop
mov
(bad)
test
int
movs
out
pop
jno
loopne
in
jp
xchg
sub
loope
fidiv
inc
movs
push
push
mov
or
mov
repnz
cmp
sahf
dec
dec
jecxz
imul
cmp
mov
fwait
sti
push
inc
jl
push
sbb
in
xchg
xchg
push
xor
xor
bound
js
sbb
mov
add
xlat
lods
in
lock
or
scas
pushf
(bad)
jp
dec
inc
xlat
inc
retf
jmp
and
fs
test
lods
mov
das
sub
inc
clc
sub
rcr
add
jl
mov
inc
retf
cmps
cmps
add
(bad)
pop
jmp
cwde
aad
xor
mov
lea
jo
cs
test
mov
xlat
ror
cmc
sub
out
rol
pop
sub
sub
out
fwait
arpl
xchg
js
outs
(bad)
out
mov
lds
jge
fdivr
cmps
ret
stos
loopne
dec
inc
dec
inc
mov
lods
test
and
hlt
jb
loopne
in
sub
(bad)
jne
xor
mov
xor
push
sub
hlt
or
pop
mov
movs
mov
xchg
ss
loope
push
mov
arpl
call
mov
lods
ret
sar
(bad)
(bad)
sub
xor
ins
out
xor
cmp
(bad)
call
dec
jl
mov
ror
inc
push
fs
in
stos
xchg
sub
adc
pushf
mov
inc
scas
pop
jb
arpl
call
mov
aas
pop
call
mov
jmp
fld
cmp
add
lods
mov
push
aas
je
pop
in
int3
stos
jmp
ins
cmp
push
cli
aas
add
sbb
test
fild
push
sbb
shl
(bad)
bound
sbb
push
bound
xchg
test
dec
and
mov
dec
sub
mov
mov
mov
call
fsubr
retf
sub
stc
cli
sahf
adc
add
inc
mov
xchg
dec
retf
pop
push
addr16
lds
and
movs
push
fwait
lock
rol
inc
movs
lods
hlt
mov
dec
gs
sub
js
arpl
push
addr16
add
sbb
mov
or
hlt
scas
call
aam
pop
sbb
sbb
out
cdq
(bad)
rcr
mov
test
mov
mov
or
mov
or
lock
sbb
loopne
add
loopne
imul
and
cmp
push
or
mov
shl
xchg
int3
push
cwde
jbe
call
dec
dec
cs
rep
dec
dec
fxch
and
clc
xchg
sbb
aam
retf
dec
push
add
mov
mov
sub
sbb
nop
lds
out
fucomp
jl
fnstsw
xor
hlt
push
pop
push
jp
push
push
and
sbb
sub
mov
fdivr
and
les
and
out
jo
fwait
mov
adc
in
push
xchg
pop
scas
push
jg
push
add
xchg
arpl
jnp
sub
cmp
call
pusha
scas
(bad)
shr
xchg
ss
aam
stos
dec
dec
jne
test
inc
pop
and
push
popf
push
stos
and
rcr
mov
push
popa
cmc
outs
pop
scas
pop
or
add
add
xchg
retf
pushf
add
pop
mov
fmul
dec
jne
test
adc
adc
loop
push
cmps
pop
int
int3
gs
push
jbe
sub
mov
pop
push
sub
adc
mov
ds
cmps
cdq
mov
mov
and
xlat
in
shr
mov
mov
cmp
pop
sub
pop
in
sub
fxch
sub
es
pop
scas
mov
scas
pop
fsubr
ins
push
(bad)
jp
cmp
mov
jmp
jbe
leave
jecxz
imul
icebp
xchg
mov
xor
mov
pop
dec
inc
fsubr
iret
shr
mov
in
push
inc
les
ror
dec
mov
sbb
jecxz
xchg
std
pop
imul
mov
lods
lods
fsub
xor
push
mov
cmp
push
fisubr
adc
sar
dec
ins
xor
cmp
out
add
inc
imul
jne
bound
pushf
iret
add
or
hlt
ret
mov
cwde
dec
inc
sbb
in
inc
outs
data16
dec
fistp
adc
dec
or
mov
pop
dec
fwait
sub
cmp
fidivr
retf
nop
loop
jnp
(bad)
jge
in
mov
in
cmp
ds
and
and
sar
dec
cli
mov
jnp
into
cli
mov
fs
(bad)
ror
pop
mov
loop
scas
jecxz
fisubr
(bad)
jo
jbe
or
stos
lahf
jg
jno
mov
leave
dec
ds
das
cwde
(bad)
push
jge
(bad)
repz
imul
pop
mov
push
movs
sub
jl
pop
push
xor
sti
jb
push
mov
and
adc
addr16
adc
mov
jmp
adc
aad
push
xchg
and
lods
adc
mov
sbb
ret
jo
pop
call
popf
ss
xchg
ror
dec
pop
jnp
mov
dec
mov
jecxz
fmul
and
adc
imul
jg
ret
fdivrp
lahf
ins
fist
out
das
mov
fild
cs
push
xlat
fwait
pop
in
push
sbb
ja
(bad)
pop
data16
mov
xchg
stc
xor
add
add
mov
arpl
mov
mov
push
inc
mov
test
retf
add
dec
cli
cmp
mov
adc
add
rcr
xchg
test
test
loopne
repnz
mov
push
retf
out
xchg
punpcklbw
add
push
pusha
mov
and
and
pop
repz
les
and
jnp
or
mov
je
aaa
das
mov
mov
jle
inc
sub
lods
jno
push
inc
dec
repnz
jl
movs
pop
or
scas
sar
(bad)
mov
and
bound
cmps
pop
icebp
ret
ret
rcr
in
out
repnz
xor
call
or
into
add
mov
mov
(bad)
js
mov
les
add
js
push
cmp
pop
inc
cmp
sahf
push
mov
out
xchg
and
jne
adc
jl
pop
sub
clc
retw
fs
add
fstp
mov
or
call
in
std
sbb
xchg
xor
dec
and
inc
mov
fnstsw
cli
loop
dec
je
xchg
xlat
pop
leave
test
sbb
jmp
sub
sbb
or
adc
mov
adc
jbe
cs
adc
push
ins
sbb
adc
icebp
and
xor
mov
mov
xor
sub
mov
dec
dec
retf
sub
pop
adc
fst
repnz
sbb
dec
or
loope
adc
stos
imul
cli
sahf
mov
nop
xchg
repnz
in
xchg
mov
ror
or
movs
ret
aad
scas
add
inc
push
and
movs
inc
out
adc
jecxz
push
pop
lods
ret
hlt
popf
(bad)
ror
jge
popf
aam
and
pop
xor
pop
call
and
dec
es
jb
cmp
xchg
ret
lahf
xchg
test
(bad)
int
hlt
mov
or
mov
pop
mov
loope
scas
pop
jmp
mov
push
enter
aas
xchg
push
adc
xor
adc
mov
mov
mov
cmp
popf
dec
fnsave
inc
daa
ins
out
adc
pop
(bad)
mov
jno
sbb
inc
sbb
test
dec
icebp
mov
or
out
outs
nop
mov
push
jg
outs
and
mov
mov
push
cs
out
xor
imul
xchg
out
in
mov
mov
arpl
mov
test
mov
stc
out
mov
push
repnz
fcmovnbe
jmp
(bad)
in
dec
inc
sar
push
sub
scas
retf
xor
mov
jno
shr
or
push
movs
mov
fwait
(bad)
pusha
mov
movs
ds
rol
(bad)
idiv
les
mov
cmp
mov
popf
or
rol
lods
cwde
push
push
push
fld
popa
add
adc
push
add
pop
add
movs
sar
mov
xlat
push
mov
xchg
(bad)
std
daa
or
loop
mov
cmp
fdivr
pop
push
bound
popf
inc
sbb
xchg
jecxz
xchg
mov
aas
cmps
popa
std
pop
mov
sbb
sbb
jmp
pop
scas
jmp
sti
dec
and
inc
dec
adc
and
bound
inc
xchg
mov
push
ss
aam
test
xor
ins
add
mov
push
sar
out
jne
mov
int3
cmp
out
xor
je
or
(bad)
or
push
(bad)
cli
pop
fadd
stos
fs
add
pop
pop
cld
cdq
mov
add
into
sahf
sbb
pop
push
dec
xor
adc
int
add
js
xchg
push
hlt
mov
push
mov
pop
lods
loope
mov
mov
inc
inc
fdivr
mov
pop
stos
sbb
jecxz
push
rcr
std
mov
xchg
aas
xor
or
cwde
mov
fs
mov
fcmovb
das
int3
sub
retf
pop
retf
cmp
enter
aas
jae
jmp
sbb
cs
(bad)
fist
or
jb
inc
retf
cmp
inc
push
test
add
inc
retf
ret
inc
pop
loop
std
out
aaa
xlat
or
out
pop
push
daa
jg
push
mov
sbb
call
push
out
mov
ja
pop
mov
nop
and
or
jbe
fstp
cmc
mov
and
adc
lods
mov
jno
popf
push
mov
xor
add
popa
or
jmp
xchg
in
mov
mov
dec
les
mov
mov
dec
xchg
loope
or
and
fwait
push
sub
fdiv
lods
ins
dec
inc
call
shr
imul
mov
push
je
nop
rcr
dec
pop
or
sbb
mov
in
xchg
xchg
jl
xor
jmp
sub
or
mov
jp
jge
sub
inc
mov
ret
(bad)
inc
iret
das
jae
mov
jp
test
shr
xchg
adc
push
cmps
hlt
inc
call
aam
nop
outs
sub
in
test
sub
xchg
pop
jo
inc
cmp
xor
mov
scas
mov
sar
bound
push
sub
xchg
ret
sub
loop
cmps
and
fist
in
add
or
mov
dec
push
xlat
sub
fistp
test
or
cmp
test
fld
pop
xor
cdq
stos
and
jns
sub
adc
(bad)
aam
shr
movs
push
dec
fsubp
and
jp
pop
push
push
xchg
cmp
cmp
mov
sub
fidivr
adc
cmps
jge
shr
lea
or
jae
adc
mov
cld
(bad)
inc
sbb
out
mov
arpl
add
lock
xor
lods
retf
cmp
enter
inc
dec
fadd
fcom
into
jg
fstp
ror
in
fidiv
mov
mov
sub
push
xchg
lods
repnz
sbb
xchg
je
cmps
pop
push
or
dec
mov
lods
or
push
aam
ins
dec
outs
jbe
sub
mov
xor
ds
mov
pop
ins
cld
sub
fs
into
sub
rcl
fwait
cmp
and
fnstenv
xchg
push
in
lock
pop
jg
sbb
xchg
sub
mov
pop
adc
ja
mov
sahf
jmp
xor
cmp
or
repnz
loop
(bad)
call
into
inc
aas
cmp
or
pop
outs
dec
shl
jg
mov
loop
rcl
cmp
inc
jmp
bts
dec
push
xor
in
aas
or
cmp
inc
retf
xchg
cmp
jno
and
push
mov
mov
push
jl
or
cwde
xlat
int3
ins
mov
pop
jge
and
pusha
cmp
pop
inc
add
bound
xchg
or
inc
pop
call
inc
(bad)
hlt
push
je
jne
int
sbb
stos
in
xchg
adc
add
out
lods
in
shl
aam
or
lea
push
outs
add
push
inc
jmp
sbb
cmp
ds
pop
dec
in
jb
sbb
test
lds
mov
pop
jnp
in
lahf
xor
pusha
popf
inc
push
dec
xchg
shr
ins
mov
push
push
mov
loope
add
sub
dec
sti
test
js
clc
sti
aas
cli
ret
cmp
mov
cwde
ret
sub
fwait
idiv
fbld
sub
movs
ret
or
or
pop
adc
push
mov
addr16
pop
(bad)
xchg
mov
imul
inc
mov
movs
ins
inc
outs
jg
cmp
imul
popa
or
pop
sub
or
and
mov
(bad)
or
jno
jmp
pop
cwde
and
outs
sbb
sub
pop
and
nop
ret
xor
push
shr
outs
and
or
mov
in
and
ja
adc
adc
cs
sub
fs
push
and
jae
movs
sub
movs
mov
sbb
lods
or
sbb
in
xchg
or
out
mov
or
sbb
jae
add
imul
movs
pop
test
and
ins
sub
jno
sbb
mov
movs
xor
push
nop
xchg
ins
fild
rol
cld
jae
adc
out
mov
mov
shl
popa
xchg
test
cwde
pop
es
push
xchg
cmp
jbe
bnd
test
mov
xor
adc
xchg
xor
sbb
lods
aas
mov
mov
dec
xor
xchg
and
cdq
lock
cmp
xor
adc
jo
imul
icebp
daa
and
cmps
mov
into
mov
lods
sub
dec
outs
cdq
mov
mov
jl
dec
cmp
inc
adc
inc
in
arpl
mov
sbb
ds
cmps
ret
mov
sbb
js
daa
mov
cwde
sbb
or
icebp
(bad)
mov
push
xor
xchg
mov
popf
ins
cmp
fst
jg
xchg
jl
push
div
xchg
call
bound
mov
(bad)
mov
in
gs
mov
or
out
jle
cli
mov
adc
jp
jle
mul
call
call
xchg
std
push
or
popa
inc
pop
xor
rcl
mov
xor
lds
test
mov
xchg
call
outs
std
in
sbb
cmp
fwait
cmp
sub
stos
jecxz
dec
pop
pminsw
fcmovnbe
add
ins
imul
dec
aad
icebp
es
movs
sub
mov
cmc
dec
fisub
hlt
call
popf
div
mov
sub
sbb
icebp
mov
lds
jno
ret
shr
cli
xchg
(bad)
lds
or
rcl
imul
cdq
imul
xchg
pop
call
push
imul
mov
je
shl
adc
pop
sub
mov
jmp
pop
xor
dec
xor
mov
sub
int3
push
inc
cmps
jge
pop
mov
dec
sbb
inc
repnz
inc
cmps
shl
mov
mov
push
or
dec
mov
mov
sub
fmul
add
fwait
cs
jmp
mov
mov
in
movs
or
in
fild
sub
cli
adc
stc
fcomp
out
adc
jmp
retf
mov
lods
push
mov
movs
cwde
pop
mov
cmps
dec
dec
adc
repz
and
pop
lea
bound
out
cmp
or
adc
ret
fwait
cdq
inc
sub
pusha
(bad)
repnz
test
and
xchg
xor
inc
jae
fs
pop
aad
popf
lods
xchg
cwde
shl
lods
jle
xchg
adc
mov
pusha
(bad)
sti
sbb
stc
jg
push
adc
(bad)
dec
cmp
push
inc
imul
pushf
mov
xor
push
in
xchg
xchg
clc
fwait
stos
jecxz
ret
dec
xchg
push
out
pop
mov
add
mov
addr16
add
adc
jb
jno
sub
push
(bad)
ja
jmp
icebp
aam
cmp
es
and
cmp
mul
and
mov
into
sub
(bad)
or
mov
call
in
pop
inc
cmp
test
ins
loopne
test
pop
pushf
sub
pop
mov
lock
jae
mov
ret
aaa
outs
add
test
sub
rcr
lea
mov
ins
sub
jno
pusha
dec
cld
mov
lea
int
test
in
push
hlt
jle
push
out
cmps
dec
clc
jmp
mov
add
mov
cmp
mov
pop
pushw
fwait
cmc
mov
mov
cmc
sbb
jns
test
fs
pop
int3
jne
test
xor
test
xchg
inc
cld
outs
stc
(bad)
push
shl
fist
mov
xor
nop
mov
add
out
sahf
out
sub
or
ret
scas
in
ret
rcr
push
mov
mov
add
inc
aad
push
call
jae
inc
xchg
jmp
aaa
movs
push
je
pop
jo
dec
jle
mov
push
sub
scas
mov
sub
in
test
xor
jnp
aam
pop
jnp
jmp
inc
dec
mov
cmp
xchg
icebp
(bad)
(bad)
inc
xor
dec
mov
jecxz
sub
add
push
jecxz
aam
dec
sub
into
dec
pushf
sbb
pusha
mov
xchg
dec
scas
stos
dec
mov
(bad)
push
ret
sub
jle
xor
add
push
adc
xor
aaa
or
mov
mov
test
pop
loope
or
pop
das
jno
fadd
mov
mov
lock
mov
adc
idiv
or
es
mov
cwde
sub
clc
dec
(bad)
mov
out
cmp
jae
adc
cdq
sub
dec
cwde
adc
adc
lods
inc
mov
xchg
repz
dec
popf
jmp
pop
pop
sbb
pop
xor
mov
into
push
dec
or
mov
mov
std
imul
jp
push
add
and
dec
icebp
add
fcmovb
das
movs
popf
leave
fisttp
retf
out
fnstcw
sub
jl
clc
jecxz
push
daa
aad
(bad)
movs
xchg
shr
scas
cmp
fnstcw
hlt
push
(bad)
push
dec
mov
stc
(bad)
das
js
xor
push
jne
jl
xlat
pop
push
out
in
ror
cs
xchg
sbb
stc
hlt
out
add
push
xor
adc
jno
shl
fbld
inc
mov
xor
jns
add
movs
loopne
dec
push
sbb
xor
or
jb
sub
dec
(bad)
leave
inc
add
cmps
inc
in
jmp
xchg
call
jae
adc
dec
mov
mov
stc
dec
or
adc
or
aad
mov
repnz
pop
out
data16
dec
pushf
or
mov
sbb
lds
push
mov
adc
fld
adc
leave
mov
mov
jb
pop
pushf
xor
movs
shl
push
push
fwait
sbb
inc
pop
mov
xchg
adc
pop
or
int
movs
xor
dec
cmp
sub
std
cld
sti
lahf
add
xchg
jnp
cmp
(bad)
fisttp
jecxz
inc
xor
imul
sbb
pop
and
shl
xor
sti
jbe
jo
aam
icebp
shr
pop
stos
in
push
mov
fwait
jbe
push
push
mov
aam
cs
add
ror
(bad)
movs
dec
addr16
jb
shr
enter
pop
xor
lds
jbe
(bad)
das
ins
push
or
in
or
or
ret
icebp
push
xor
cmps
inc
jl
repnz
adc
cli
and
mov
sbb
push
sbb
popa
or
mov
adc
movs
sbb
sub
in
pop
pop
mov
inc
or
sbb
fiadd
out
cwde
test
fcmovne
push
pop
pop
dec
pop
mov
and
mov
repnz
imul
les
mov
pop
sub
stc
jp
xchg
int
fld
icebp
mov
mov
mov
xor
or
outs
mov
out
cmc
add
sub
mov
jmp
mov
sub
test
push
jbe
test
mov
xor
mov
sub
pop
inc
push
mov
jmp
(bad)
push
and
jmp
and
inc
cmp
push
inc
and
mov
cdq
icebp
test
int
adc
clc
int
addr16
cmp
lea
out
inc
and
idiv
inc
push
test
aaa
inc
jl
leave
cmp
jecxz
pushf
xor
stos
mov
pop
cmp
mov
lods
idiv
loop
and
pushf
xchg
into
adc
jnp
fwait
sub
jle
jne
mov
sbb
mov
sbb
das
push
sbb
dec
push
dec
and
daa
cs
sbb
push
sbb
lods
call
jnp
lock
pop
pop
fisttp
dec
in
lds
cmp
imul
int3
cs
lods
inc
jp
sbb
test
js
sbb
mov
les
scas
ret
loope
lds
loopne
out
add
inc
mov
xlat
outs
bnd
mov
(bad)
int
mov
and
fmul
out
sub
pop
imul
dec
test
scas
out
jg
push
sub
xlat
in
adc
mov
xor
ja
iret
lds
loop
outs
stos
shl
dec
mov
cmp
ret
pop
fs
push
(bad)
les
add
pusha
push
mov
sar
or
cmp
add
adc
aas
stos
or
les
in
sub
imul
popa
inc
fs
jmp
and
push
sbb
test
mov
rcr
je
out
push
mov
loope
in
lods
imul
sub
cli
call
jbe
in
ja
leave
adc
(bad)
fnop
call
test
in
mov
adc
sbb
sub
call
xchg
in
mov
push
mov
and
add
mov
shl
cmp
rol
in
push
lock
int3
pop
mov
in
das
test
dec
cmc
js
out
cmps
and
lods
add
mov
mov
mov
pop
push
aas
jnp
push
adc
iret
mov
cmp
xor
push
cli
add
dec
lahf
mov
ss
fwait
call
xchg
cmp
movs
stc
and
sbb
repz
cmp
jne
sub
mov
scas
add
lahf
mov
cwde
adc
adc
mov
js
mov
pop
jge
jecxz
jmp
fnstsw
sbb
les
mov
out
push
sbb
je
hlt
test
pop
movs
cmp
adc
xor
in
stos
push
jge
pop
adc
shl
fs
loopne
add
rcl
ret
lahf
(bad)
jmp
inc
xor
add
cmps
les
add
test
scas
xchg
pop
fs
enter
enter
or
pop
sbb
sub
repz
xor
jmp
ins
pusha
cmp
pop
(bad)
lock
in
push
mov
ins
ror
mov
imul
cmc
mov
std
mov
test
cmps
mul
adc
push
ins
dec
jecxz
popa
int3
jp
in
mov
lds
mov
push
inc
daa
int3
out
arpl
in
fadd
out
add
inc
test
shr
push
cmp
data16
sbb
cld
dec
mov
or
pop
xchg
dec
adc
pusha
and
add
lods
pop
test
inc
pop
movs
inc
ret
js
xchg
mov
nop
cmps
(bad)
xor
xor
lods
cmps
sub
mov
popa
or
mov
xchg
push
cmc
or
inc
jne
mov
popf
sar
add
ins
scas
in
or
bound
xor
mov
popf
pop
in
rcl
fs
add
les
inc
retf
mov
cli
push
scas
cmps
aad
sub
add
xlat
pop
xchg
sbb
cs
push
add
(bad)
cmp
mov
sub
push
dec
mov
cmp
pop
push
cmp
test
std
rcr
pop
and
enter
popf
loope
rcr
sbb
jae
inc
cmp
bound
std
fldcw
ss
jbe
or
pop
leave
pop
stos
stos
adc
sbb
call
mov
outs
pop
mov
xor
hlt
xor
ficomp
out
pop
(bad)
add
jl
mov
cmp
leave
lahf
outs
stc
or
xor
xchg
cli
les
adc
sub
out
adc
(bad)
adc
ds
ds
hlt
xchg
jge
cmp
and
sub
adc
fst
fbstp
pop
dec
push
mov
add
in
and
xor
sar
jmp
sbb
sbb
fist
iret
popf
lods
sahf
mov
mov
or
xor
div
push
jl
mov
jbe
inc
test
jecxz
jns
loope
sub
jl
ret
mov
xor
sbb
je
or
dec
pop
mov
das
pop
je
mov
inc
pop
cmps
movs
cmp
xor
outs
ja
mov
jae
inc
and
jne
lea
adc
jne
push
in
add
sub
aaa
lock
inc
xchg
push
popa
rcr
popa
ins
dec
cld
mov
ret
pop
mov
cmc
add
sti
sub
fisub
call
cld
cdq
jae
ins
sub
sbb
inc
pusha
cmp
ret
call
push
jb
leave
hlt
ins
add
dec
ds
in
ret
mov
(bad)
adc
mov
or
das
repz
xor
shr
push
test
lea
imul
and
add
inc
push
push
or
inc
dec
mov
mov
popaw
xor
imul
ss
mov
inc
lods
lock
mov
daa
xor
es
mov
jo
mov
xor
lods
call
add
inc
lods
jno
mov
jnp
mov
into
aaa
adc
push
(bad)
jg
in
addr16
xchg
or
sbb
out
sbb
cmp
cli
mov
pop
cld
sbb
cld
pop
sub
imul
dec
mov
sbb
inc
add
push
xchg
mov
(bad)
fist
(bad)
idiv
inc
mov
or
(bad)
in
repz
adc
cmp
inc
xor
mov
sbb
mov
mov
call
dec
xor
aam
xchg
push
in
adc
pop
fcomp
mov
pop
mov
gs
ret
inc
push
test
in
mov
fs
xchg
mov
cwde
retf
pop
pop
pop
mov
mov
pop
or
and
vmread
xor
and
push
lea
xor
sbb
pop
jns
inc
or
fiadd
arpl
in
aad
jl
push
push
movs
dec
sub
pushf
mov
jmp
cmp
(bad)
repz
add
div
xchg
adc
mov
sbb
clc
jne
outs
js
xor
jecxz
ins
dec
enter
lds
aas
sbb
push
mov
clc
and
pop
cmp
mov
or
inc
or
mov
pop
ins
dec
sti
dec
inc
adc
popf
xchg
push
xlat
hlt
sar
and
or
and
or
push
push
sub
out
repz
stc
dec
out
add
dec
dec
fcomp
into
mov
stos
sbb
xchg
mov
mov
ins
push
adc
adc
test
push
in
cmps
or
lods
nop
outs
mov
dec
jo
je
imul
scas
pop
mov
js
xor
cmps
cmp
shl
icebp
iret
sbb
dec
(bad)
mov
js
xor
(bad)
cmc
jecxz
pop
sub
(bad)
sbb
cwde
pop
mov
pusha
mov
sub
cwde
jns
add
mov
cmps
psubd
pusha
outs
mov
sub
test
cmc
in
push
xlat
jb
mov
push
fist
cs
lds
and
hlt
inc
mov
push
cmp
retf
fcomip
xlat
dec
retf
mov
xor
cmp
pop
sub
xlat
cmp
jge
ds
mov
call
sbb
xor
ss
bound
xchg
pop
pop
xchg
lods
mov
popf
popa
je
add
and
mov
les
std
jnp
xor
call
(bad)
jecxz
push
pop
std
or
inc
push
clc
dec
mov
mov
addr16
mov
xchg
lods
leave
sahf
mov
call
les
push
or
stc
xchg
loope
ins
jnp
(bad)
and
adc
xlat
(bad)
fldcw
(bad)
and
sub
dec
mov
ret
mov
pop
mov
pop
rcr
and
dec
and
int3
inc
mov
mov
cmps
jle
dec
repnz
fld
xor
mov
imul
push
xor
shl
jg
ja
cmp
and
xor
std
mov
nop
cmp
push
fwait
push
and
mov
mov
mov
repz
nop
dec
mov
movs
adc
add
cmps
push
lods
sub
push
imul
dec
adc
mov
pop
shr
sar
sub
dec
retf
or
sar
pop
mov
pushf
add
fcomp
push
mov
jne
imul
ins
xchg
mov
xchg
les
shl
aaa
dec
sub
adc
mov
mov
aas
mov
fcomp
outs
push
mov
in
ss
inc
imul
jmp
inc
push
cmp
adc
pop
cmp
ss
shr
xchg
test
fidiv
idiv
jg
(bad)
test
out
retf
jmp
out
push
cmp
jg
or
sbb
stos
pop
out
into
(bad)
les
aad
daa
in
dec
dec
and
ror
push
lahf
fidiv
repnz
dec
ret
push
gs
dec
lds
gs
shl
push
push
mov
dec
imul
mov
fdivr
push
xchg
adc
xchg
cmp
mov
fwait
popf
pop
inc
add
jmp
rol
sar
xor
cld
push
fs
push
je
bound
xchg
mov
mov
sub
sbb
call
inc
sub
sbb
movs
cmp
inc
push
add
dec
mov
xor
inc
clc
mov
out
rcr
or
imul
sub
rol
push
icebp
and
mov
mov
retf
xchg
jb
and
push
jbe
jb
jnp
les
lods
mov
imul
jbe
popf
mov
inc
in
push
jecxz
sti
adc
ins
les
jl
call
mov
scas
mov
shl
cmp
cwde
ror
int3
ds
or
sbb
pop
(bad)
mov
dec
repnz
mov
aam
movs
sbb
dec
and
push
lahf
adc
inc
fiadd
pop
pop
or
xchg
cdq
int3
test
jb
sbb
adc
lock
test
jge
mov
adc
push
outs
out
cmp
mov
xchg
loopne
popa
xor
mov
mov
call
xor
adc
add
adc
sar
ja
mov
xchg
inc
pop
je
mov
mov
scas
test
xchg
outs
mov
sub
hlt
add
fwait
xchg
cwde
or
pop
pop
(bad)
movs
mov
mov
fwait
inc
add
add
jmp
inc
pop
xchg
jp
xor
dec
mov
(bad)
mov
add
rcr
fistp
xor
out
aaa
pop
loopne
inc
inc
call
and
rol
loope
leave
sbb
popf
ins
mov
test
sub
or
ins
adc
arpl
push
sbb
aaa
jo
icebp
gs
jbe
inc
pop
xchg
dec
push
(bad)
dec
inc
adc
sbb
mov
mov
lds
je
movs
call
or
mov
mov
xor
cmp
cmp
mov
inc
add
inc
xchg
retf
mov
or
retf
out
xor
and
cdq
dec
enter
sbb
xchg
sti
gs
pop
jl
inc
dec
xor
scas
and
aam
fstp
loope
iret
daa
jl
or
pop
cld
mov
ret
mov
cli
adc
jmp
dec
nop
add
call
lock
mov
xor
imul
sbb
add
mov
cli
xor
lahf
xor
xchg
cmp
addr16
mov
mov
mov
fadd
test
fmul
fwait
xor
stos
cmp
mov
push
cwde
aad
pop
xor
sbb
iret
mov
ss
mul
xchg
inc
mov
outs
mov
push
dec
and
add
mov
rcr
test
push
fwait
mov
loop
pop
pop
aam
push
leave
adc
pop
leave
cmp
pop
and
jl
jmp
xor
xor
xchg
pop
cwde
imul
jne
scas
mov
sub
cmp
test
adc
mov
cmps
cmps
cli
push
jmp
dec
xchg
dec
mov
int
mov
gs
xor
push
cmps
sbb
mov
dec
push
pop
mov
push
mov
lods
jbe
mov
add
test
sub
mov
retf
add
mov
pop
mov
inc
inc
fistp
(bad)
fist
mov
int3
lds
cmp
ja
mov
icebp
sti
repnz
sub
setge
daa
sub
sbb
aam
shl
push
add
and
and
or
mov
cmc
div
jmp
ret
inc
jle
fcomip
adc
sub
das
sub
test
lahf
int
pusha
or
mov
aaa
cmp
ret
cdq
cmp
mov
push
test
cld
es
mov
(bad)
mov
prefetchnta
inc
jmp
(bad)
fwait
adc
mov
or
ja
push
push
stos
sub
and
adc
pushf
repz
call
nop
jmp
sbb
jne
push
test
push
int
mov
daa
int
mov
repz
jmp
in
mov
lock
out
cmp
cmp
push
out
int3
or
jle
xchg
mov
pop
add
ins
pop
mov
pop
leave
fadd
dec
dec
xchg
fs
dec
xchg
je
xchg
(bad)
fiadd
(bad)
rol
mov
ror
imul
dec
sar
mov
xor
cmp
mov
loope
and
adc
mov
pushf
xchg
push
push
sub
push
test
push
lods
sub
mov
fwait
movs
rcl
or
and
int
cmps
lock
repz
sbb
add
xor
jmp
cmp
pop
push
jnp
jnp
pop
rcr
cld
inc
outs
dec
jge
cs
xor
stos
inc
push
sti
sub
neg
inc
bound
(bad)
in
lds
or
bound
cmp
sti
mov
mov
and
js
mov
shr
pop
sbb
jns
ss
jo
inc
cmp
(bad)
pop
cmp
and
add
je
jbe
cli
nop
pop
outs
retf
xlat
pop
imul
arpl
ds
cs
jbe
out
stc
adc
jp
ins
inc
xchg
jmp
mov
nop
retf
cmp
shr
adc
(bad)
push
arpl
shl
xchg
cmps
arpl
call
jns
inc
jp
out
ss
(bad)
test
call
in
movs
fs
xchg
into
arpl
push
or
iret
test
pop
or
dec
or
cli
ret
in
dec
ins
cmps
mov
xchg
fdivr
int3
maskmovq
test
inc
mov
rcr
cli
xchg
cmps
mov
(bad)
sbb
cmp
repz
add
or
lods
adc
adc
clc
inc
push
enter
(bad)
and
leave
cmp
sti
stc
loope
pop
cmps
jecxz
pop
loope
ror
mov
or
fwait
push
int3
ds
lods
sti
test
add
adc
ins
jmp
sbb
or
std
pop
test
pop
addr16
jns
dec
and
adc
xor
xchg
arpl
dec
pop
add
fbld
into
out
out
in
inc
ror
xor
jne
(bad)
mov
pop
daa
out
cmc
xchg
jge
cmps
retf
push
cmp
mov
retf
xchg
pop
call
sbb
adc
xor
or
in
test
cmp
out
and
push
mov
sbb
fidiv
dec
into
xchg
xor
mov
add
data16
mov
shr
pop
leave
lock
xchg
push
(bad)
cmc
test
or
das
adc
mov
fs
or
aad
mov
pop
test
rcr
adc
jmp
repz
mov
out
and
outs
push
inc
jns
imul
js
mov
aaa
out
dec
jg
ficomp
xor
dec
xor
sub
aad
daa
imul
paddw
gs
mov
mov
lock
jge
jp
fisttp
cmps
enter
cmp
mov
cmp
mov
or
push
loop
cmp
sbb
ins
movs
das
and
jo
fwait
mov
mov
inc
cwde
jo
pop
jle
leave
ins
stos
sbb
sar
cmp
fcom
dec
icebp
pop
sub
dec
in
pop
or
dec
fistp
das
popf
pop
jb
sbb
adc
(bad)
cli
mov
cmp
adc
jl
dec
inc
ss
cs
mov
sub
push
imul
sbb
out
lods
xor
jno
inc
mov
jb
pop
aas
cmp
jmp
lahf
and
sbb
outs
pop
ins
outs
lods
inc
fiadd
ret
icebp
jg
adc
or
adc
cmp
mov
scas
jmp
out
ds
pop
ins
data16
arpl
lahf
arpl
scas
(bad)
in
push
mov
mov
mov
mov
scas
stc
and
scas
fdivr
jmp
mov
cld
scas
push
push
mov
jmp
mov
push
movs
push
cdq
mov
aas
pushf
sub
jmp
in
cmp
add
sti
mov
fcmovb
jmp
sub
out
call
in
retf
in
pop
(bad)
cs
push
ret
inc
xor
jb
out
or
xchg
jl
popf
inc
nop
test
push
fs
in
sbb
jg
mov
and
idiv
dec
mov
hlt
sbb
push
push
gs
ja
mov
repz
retf
mov
mov
cli
cmc
data16
das
cmp
mov
(bad)
pop
int3
rcl
fisub
push
mov
(bad)
cld
mov
nop
call
dec
adc
mov
loop
div
ja
cli
xchg
mov
cs
dec
push
sar
adc
psubq
hlt
and
js
inc
es
(bad)
pop
jo
movs
pop
push
cmp
stos
xor
push
dec
scas
retf
nop
cdq
inc
call
sub
aam
or
mov
jno
dec
je
cwde
pop
mov
rcr
sub
cmp
jbe
nop
jg
mov
jb
mov
adc
jge
es
push
repnz
sbb
jp
je
in
adc
push
cmp
jno
scas
push
stos
sub
inc
iret
mov
adc
enter
push
xchg
outs
dec
aam
and
repnz
pop
jns
mov
push
mov
or
inc
push
in
cmp
cmp
bnd
arpl
dec
cdq
es
sbb
fld
into
jp
leave
pop
mov
mov
pop
jmp
pop
adc
movs
fisubr
jmp
pop
js
cld
inc
or
js
ret
jle
iret
jle
(bad)
fnstsw
adc
mov
xchg
add
popa
leave
mov
data16
xor
or
stc
xor
jmp
call
push
int3
movs
sti
enter
jno
movs
fs
test
fst
imul
dec
mov
aaa
push
and
jno
cdq
inc
or
mov
std
ror
and
retf
pop
mov
adc
jp
inc
jae
bound
push
fst
jge
mov
xchg
scas
sbb
jecxz
push
xchg
adc
jns
dec
adc
mov
cld
jb
xor
bound
pop
jg
mov
fnsave
fldenv
ins
movs
inc
xchg
je
cmovnp
pop
in
push
jp
sahf
or
in
ficomp
fwait
add
pusha
dec
xchg
mov
mov
xlat
sub
retf
adc
or
inc
div
lar
test
and
loopne
inc
adc
test
cmps
(bad)
jb
arpl
push
cmp
cmp
retf
xor
lock
(bad)
icebp
retf
mov
mov
xchg
popf
sub
pop
sbb
(bad)
std
cmc
mov
push
mov
add
mov
out
or
call
xlat
xchg
fiadd
xchg
fst
imul
push
cli
mov
out
addr16
or
dec
pop
cmps
pushf
loop
adc
call
leave
rol
cmp
loope
dec
jmp
sub
out
call
push
loop
xchg
scas
xor
aad
std
out
mov
test
adc
mov
repnz
xchg
push
push
std
push
and
push
cmps
lock
jnp
or
mov
arpl
outs
fnstsw
repz
inc
jne
mov
push
aas
jmp
fsub
mov
dec
fcmovnbe
lods
les
shl
pushf
xor
div
fs
sar
call
sub
fisubr
and
retf
test
bound
jb
aad
out
and
inc
push
push
adc
ins
xchg
hlt
xchg
bound
cmp
sbb
mov
xor
stc
stos
cmp
mov
aam
inc
movs
call
int3
jae
jge
test
sbb
mov
das
data16
and
iret
mov
fisub
jbe
sbb
(bad)
fs
mov
arpl
push
ror
je
stos
(bad)
and
ds
adc
in
aaa
mov
leave
mov
jmp
movs
outs
cs
setnp
cmp
arpl
les
inc
ins
mov
repz
repnz
(bad)
mov
jecxz
pop
mov
jmp
fldcw
add
out
inc
in
add
cdq
jp
and
idiv
loope
outs
sbb
ror
icebp
mov
xor
or
aam
push
or
jp
pop
out
shl
inc
es
mov
mov
xor
cmp
add
jnp
or
adc
xor
cmp
ins
int
adc
ss
dec
add
xor
pop
cwde
into
cmc
push
cld
xchg
cs
loope
outs
inc
jmp
pop
das
mov
aas
pop
ins
mov
addr16
inc
inc
cmc
loope
lds
fistp
cmp
bound
mov
xchg
pop
jg
inc
sahf
sub
cmps
pusha
stc
(bad)
into
test
gs
xor
inc
dec
xchg
ins
retf
das
lods
mov
jbe
test
mov
mov
push
loop
mov
mov
ss
sub
sub
in
inc
aam
pop
adc
adc
cmp
test
cmp
test
inc
popa
es
mov
int
aaa
in
cld
sbb
test
(bad)
push
mov
call
loopne
and
scas
scas
jmp
adc
stc
push
sbb
retf
dec
test
aas
mov
movs
push
jg
push
dec
pusha
ss
xchg
or
ins
jno
out
rol
nop
mov
jecxz
call
ret
inc
inc
adc
std
rol
pop
test
pop
fimul
fcom
pop
clc
sbb
fwait
mov
mov
push
xchg
fcmovne
aaa
mov
inc
lods
cmp
sahf
xchg
xor
test
ins
cmc
inc
ds
call
jmp
jmp
int3
imul
lds
(bad)
jmp
pop
(bad)
adc
(bad)
ins
js
dec
push
push
gs
sbb
fcom
cdq
cmc
dec
shl
es
inc
stos
out
cmp
pop
mov
in
leave
nop
xor
inc
jmp
pop
mov
push
mov
adc
dec
fsubp
in
ds
shr
add
data16
jecxz
mov
icebp
xchg
lods
es
ins
or
es
clc
jle
mov
shl
adc
mov
mov
cmps
sahf
popf
repnz
lahf
(bad)
sbb
mov
(bad)
jmp
lahf
out
sar
cmp
inc
test
sbb
sub
movs
cmps
or
(bad)
mov
sbb
mov
pop
mov
add
fs
fld
xchg
adc
mov
xchg
ins
popf
por
test
mov
clc
adc
mov
cmp
lds
xchg
nop
push
cmc
or
xor
cld
cli
mov
mov
push
std
aad
repz
push
(bad)
outs
and
mov
push
and
sbb
push
ss
xor
in
movs
movs
movs
cdq
push
inc
jae
mov
push
push
dec
push
inc
leave
ins
repz
es
xor
je
sub
(bad)
imul
mov
pop
scas
(bad)
xchg
mov
in
pop
jg
inc
shr
adc
push
or
clc
aad
cwde
call
jo
sub
add
test
es
repz
mov
fs
popf
loopne
clc
lahf
add
push
xchg
adc
mul
adc
mov
cmps
mov
xor
mov
enter
int
dec
or
jecxz
push
pop
fldcw
xor
mov
dec
lock
add
(bad)
mov
sub
or
mov
push
xor
or
jecxz
sldt
mov
sbb
shr
loope
ret
(bad)
out
loopne
fld
std
xor
push
pop
xor
xor
inc
jno
and
jl
into
ins
inc
int
aaa
pop
sub
stc
outs
cmp
mov
dec
or
mov
cdq
and
add
mov
ins
inc
dec
(bad)
ins
test
xchg
jbe
cmp
mov
fs
(bad)
push
lock
aam
and
and
mov
push
jno
and
xchg
arpl
(bad)
push
mov
fadd
loop
mov
ror
and
out
mov
test
lea
push
mov
loop
arpl
aad
push
in
xlat
inc
mov
call
int3
mov
dec
add
cmp
add
jp
cmp
or
xchg
gs
jecxz
inc
lods
in
push
daa
adc
cmp
lds
rcl
and
adc
cmps
sar
jne
mov
(bad)
push
outs
aad
fld
xor
mov
cmp
xchg
and
inc
mov
lahf
out
mov
out
sbb
xchg
xchg
in
icebp
and
mov
dec
ja
ret
xchg
arpl
jb
outs
out
ror
xchg
dec
out
stos
dec
pop
xchg
gs
outs
call
es
xor
in
repnz
and
lods
test
cmp
les
inc
jne
out
fs
pop
pop
mov
sbb
repnz
mov
addr16
mov
adc
mov
mov
(bad)
cmp
sbb
push
mov
jae
test
sub
lea
jb
shr
mov
push
(bad)
data16
js
test
mov
push
div
(bad)
xlat
xchg
mov
cmps
in
xor
xchg
retf
cld
inc
mov
inc
popf
ror
adc
cmps
je
xchg
loope
loop
leave
xchg
dec
call
stc
(bad)
mov
pop
inc
and
std
movs
jmp
add
fstp
out
dec
mov
add
add
lods
mov
movs
sar
sub
lods
mov
cli
in
dec
and
xchg
dec
push
dec
sub
das
xor
pop
sub
out
lods
jno
dec
adc
xor
push
lds
inc
xchg
sbb
adc
adc
(bad)
loopne
and
aaa
scas
test
mov
push
xchg
mov
(bad)
jmp
movs
pusha
mov
mov
icebp
and
jb
je
sub
and
cli
mov
push
lds
fwait
pop
mov
iret
(bad)
xchg
mov
push
jbe
pushf
popf
push
xacquire
adc
lahf
push
fs
inc
test
xlat
add
mov
sahf
iret
popa
pushf
sbb
mov
out
push
ret
pop
mov
jo
add
push
sbb
sbb
sar
push
adc
sbb
cmps
fstp
jmp
mov
jno
pushf
add
adc
call
push
loopne
cmp
mov
lds
cmp
aam
xchg
popa
and
adc
xchg
out
shr
out
aam
loope
pop
lahf
jns
cmps
push
mov
push
cmp
add
pop
iret
or
rcl
fnstcw
push
cwde
xor
dec
xchg
push
ret
xor
test
adc
not
jge
ret
clc
add
push
out
xchg
cmps
test
sbb
out
out
and
sti
dec
sub
lods
bnd
push
dec
std
std
push
sbb
leave
cmps
lea
movs
add
(bad)
pop
push
mov
stos
xchg
pop
pop
jb
dec
mov
cmp
les
mov
rcr
fist
xlat
arpl
push
fwait
mov
jle
dec
popf
das
inc
ds
into
jae
sub
pop
retf
sub
fcmovnbe
fstp
mov
sub
sub
sub
inc
jno
ins
pop
pop
lahf
shl
inc
mov
in
or
inc
rol
add
or
mov
mov
cmp
cmovne
(bad)
imul
xchg
mov
xor
je
adc
and
mov
xor
sbb
jmp
sbb
jae
pop
and
addps
push
mov
jecxz
sbb
pushf
pop
dec
test
in
xor
adc
cmp
ret
pop
sub
aad
stos
and
xchg
and
jnp
fimul
pop
mov
mov
sbb
imul
sub
js
cld
xor
xchg
dec
or
and
mov
pop
daa
adc
popa
jns
out
fstp
pop
xor
cmp
adc
pop
mov
test
lock
inc
xchg
sub
shl
fs
mov
dec
pusha
cdq
addr16
xor
sbb
sbb
push
std
test
and
loop
jne
mov
jmp
cs
ja
mov
adc
push
inc
loopne
or
xor
cmp
lock
int
into
pop
inc
icebp
dec
imul
inc
pop
loopne
inc
or
aam
repnz
bnd
dec
or
xor
mov
lea
loope
sbb
jmp
inc
out
into
pusha
xor
mov
jmp
out
pop
adc
pop
xchg
int
inc
dec
aam
mov
sbb
fs
xchg
sbb
mov
outs
aam
fistp
mov
jge
ret
sub
xor
push
xor
bound
inc
jl
retf
cmps
adc
push
mov
mov
in
movs
icebp
ds
and
xlat
fwait
push
jmp
pushf
test
cmps
(bad)
push
fwait
sbb
mov
mov
fsub
mov
jmp
clc
mov
gs
dec
jecxz
pop
adc
xchg
test
mov
arpl
adc
scas
pop
in
mov
xor
pop
push
or
adc
ret
xor
arpl
push
in
jns
clc
stc
mov
lock
mov
int3
cmp
xchg
aad
dec
int3
jbe
fild
fisubr
xchg
aam
and
pop
dec
xchg
mov
retf
and
aas
fidiv
movs
jbe
outs
sub
ret
push
pop
xchg
sti
push
mov
mov
dec
(bad)
icebp
out
bnd
and
cwde
dec
shr
push
lds
out
jae
shl
inc
mov
ja
stc
cmc
pop
es
xor
leave
jbe
iret
sub
mov
into
pop
js
jo
out
in
jne
mov
loop
lahf
rcr
inc
mov
ins
movs
cmp
adc
or
into
mov
cmp
add
xor
push
stos
inc
add
and
rep
stos
jmp
cmp
jns
daa
stos
inc
hlt
call
loopne
out
xor
call
sub
shl
shr
push
cmp
movs
lods
lahf
sbb
ror
popf
or
inc
and
mov
dec
test
push
mov
rcr
jno
aaa
stos
icebp
mov
cmc
inc
aas
mov
jp
sub
xchg
mov
retf
out
in
(bad)
movs
ficomp
sub
cli
lahf
mov
enter
dec
movs
(bad)
mov
shr
shl
or
mov
mov
sbb
ins
adc
push
push
fstp
cmp
and
push
cmp
test
mov
mov
dec
test
cmp
nop
into
repz
aam
mov
enter
sub
adc
stos
shl
inc
mov
dec
mov
adc
lahf
pop
xchg
mov
sbb
data16
jns
mov
add
or
adc
test
test
int3
mov
adc
and
add
(bad)
mov
or
and
xor
arpl
fwait
iret
mov
sar
loop
add
icebp
mov
fcom
and
(bad)
sbb
(bad)
jmp
sub
inc
mov
pop
mov
pop
sbb
push
in
fsubp
sbb
pop
cwde
movs
rcl
mov
cmp
jmp
inc
call
rol
and
(bad)
popa
hlt
push
dec
dec
xchg
jle
sbb
cmps
iret
cdq
arpl
xchg
loop
cmp
call
mov
sar
and
mov
mov
mov
push
dec
sbb
test
test
out
je
xchg
mov
inc
ins
in
pmullw
add
nop
ins
js
ss
cmp
sbb
fldz
xchg
adc
mov
jle
lods
(bad)
xor
add
jbe
xchg
sub
mov
pop
adc
mov
push
pop
inc
mov
jae
outs
mov
retf
icebp
jne
add
and
and
imul
sbb
inc
mov
xor
addr16
cmp
fwait
rcl
imul
mov
mov
jg
mov
xlat
or
dec
daa
xlat
call
aas
sub
aaa
sbb
imul
mov
xor
and
sub
fwait
mov
repz
adc
inc
push
sbb
or
inc
jmp
clc
xor
mov
sbb
xor
call
inc
mov
test
jae
dec
jne
jge
je
mov
cli
aas
aas
inc
jmp
sbb
jecxz
mov
push
(bad)
mov
mov
repz
cli
jne
jle
or
ins
stc
cmp
add
mov
jno
cmp
lds
imul
ret
in
popf
sbb
pop
inc
fwait
adc
xor
pop
and
sub
les
loope
jl
imul
push
cdq
addr16
sbb
push
add
inc
pop
cs
lahf
clc
pop
adc
out
mov
les
int
add
mov
mov
or
imul
out
or
nop
aad
fdiv
push
lock
or
sahf
es
(bad)
mov
cmps
std
rcr
(bad)
fcom
inc
mov
int
add
mov
imul
mov
shl
mov
mov
or
inc
lods
sub
fimul
xor
sbb
cli
push
lods
xchg
sbb
stc
push
repz
dec
sub
jno
sbb
push
mov
mov
jmp
mov
mov
mov
xchg
adc
lods
adc
(bad)
jae
mov
cwde
(bad)
es
rol
jns
rcl
jle
das
dec
gs
hlt
repz
dec
in
xor
into
das
add
addr16
mov
mov
inc
sbb
or
xor
vpunpcklqdq
sub
mov
mov
mov
mov
retf
inc
mov
fsubr
push
and
ret
jmp
jmp
enter
mov
mov
or
mov
arpl
shl
cmp
(bad)
mov
inc
add
inc
lahf
jns
jle
inc
xor
pop
movs
sub
sbb
ror
sub
test
mov
jnp
mov
mov
mov
das
shl
xchg
add
cmp
aam
or
push
ja
ret
std
aad
inc
icebp
or
pop
aad
aas
ret
cmps
xchg
stos
arpl
xchg
push
leave
inc
stos
cdq
mov
sahf
push
fist
aaa
stos
js
adc
adc
cmp
bound
rol
out
mov
movs
and
inc
test
inc
jecxz
mov
dec
xor
outs
push
mov
cmp
jnp
inc
jmp
call
scas
sbb
(bad)
pop
cmp
jecxz
dec
adc
pop
push
mov
ret
jmp
cdq
add
mov
mov
ja
enter
out
ins
sub
arpl
sub
out
cld
pop
pop
out
loopne
push
jae
mov
in
mov
jp
popf
mov
xchg
push
push
out
std
sub
dec
fldenv
xor
pop
sbb
jmp
cld
imul
int
add
aad
push
xor
mov
jmp
dec
sub
inc
adc
add
cwde
jb
popa
sbb
sbb
push
sbb
mov
cmps
nop
sti
push
popf
inc
jle
das
lock
xor
aaa
mov
cmp
xchg
mov
sahf
or
loope
mov
xchg
mov
sbb
adc
jmp
aad
xlat
sub
sub
cmp
pop
jl
push
fs
call
dec
out
out
push
pop
cmc
push
dec
inc
in
add
cmp
xor
jb
popa
fisubr
cwde
inc
in
push
ins
sub
dec
movs
mov
cwde
das
and
and
dec
fcom
xchg
cmc
fnsave
rol
fnstenv
sbb
adc
dec
call
shl
icebp
inc
dec
xchg
xor
hlt
int
retf
adc
jb
dec
mov
xchg
mov
and
jle
ins
sub
call
mov
sub
add
mov
(bad)
aaa
(bad)
fst
or
jg
fsub
cld
test
movs
in
ds
lods
adc
push
loope
rdmsr
and
jmp
ret
addr16
femms
push
push
cwde
pop
cmc
xchg
loop
ja
inc
dec
fdivr
rol
xchg
jnp
inc
aad
dec
aam
push
xchg
mov
jp
(bad)
add
jne
push
cmps
iret
call
scas
push
mov
fistp
stos
into
daa
pop
push
sub
outs
cmp
popf
sub
out
push
adc
stos
inc
cmp
jne
jle
jae
(bad)
jge
clc
cmp
dec
mov
xchg
ficom
or
sahf
add
jno
retf
(bad)
dec
mov
adc
jne
cmp
leave
int
test
add
fist
daa
and
scas
ror
xor
mov
sbb
inc
push
rcl
add
add
out
cdq
ficom
mov
mov
fiadd
sbb
jmp
sbb
push
test
fcom
pop
or
test
scas
mov
das
xor
xor
popa
or
cmps
out
ja
jb
repnz
dec
push
dec
sbb
clc
jb
loopne
dec
sti
stos
xchg
iret
xor
hlt
loope
jmp
xchg
xchg
mov
leave
ins
sub
pop
loop
fstp
sbb
je
dec
stos
add
xchg
jne
pop
out
pop
nop
inc
sbb
and
scas
adc
sbb
(bad)
push
movs
daa
ss
xchg
pop
push
ja
mov
sbb
dec
test
sbb
lds
fs
mov
ins
adc
dec
jno
ins
rcl
dec
cmps
sbb
dec
mov
std
sub
xor
ins
cmc
jnp
icebp
xor
out
pop
add
cli
aam
movs
xchg
sub
jae
push
jno
sub
or
lock
jg
xor
cmps
cli
push
xchg
push
inc
push
cdq
push
and
les
(bad)
push
ficom
movs
mov
mov
lods
loope
adc
addr16
stc
shr
adc
jbe
push
dec
add
and
xchg
ret
jno
popa
adc
inc
das
(bad)
push
hlt
cmp
mov
je
push
jne
or
jl
pop
add
sti
es
cmc
into
inc
pop
and
mul
mov
nop
push
pop
js
hlt
xor
sub
ds
fstp
in
leave
rcl
sub
and
jno
les
pusha
sar
jle
out
loope
pop
or
enter
jle
xor
repz
cmp
mov
mov
sar
inc
mov
push
lock
pop
inc
nop
or
sub
jne
test
shl
xchg
retf
retf
jo
mov
(bad)
pushf
ds
cli
jg
dec
cmp
js
mov
pusha
addr16
adc
and
cmps
add
and
pushf
sbb
aas
dec
mov
jmp
jmp
push
mov
dec
adc
enter
cmp
and
ret
mov
addr16
cmps
imul
inc
xlat
(bad)
(bad)
pop
sub
repz
int3
pushf
mov
inc
pop
add
lods
xchg
inc
and
push
push
repz
(bad)
xor
cmps
mov
sahf
call
(bad)
iret
repnz
pushf
(bad)
sbb
push
add
scas
rcr
neg
xchg
out
mov
scas
or
not
lods
bndldx
push
call
dec
je
and
jg
jecxz
adc
rcl
push
xlat
mov
jb
daa
xchg
shl
xor
jne
mov
fild
sbb
leave
iret
(bad)
out
mov
and
cmp
push
cmps
fisttp
popa
(bad)
fstp
fisttp
jmp
shl
sub
pop
adc
(bad)
cs
adc
(bad)
jbe
mov
add
addr16
push
scas
shl
test
push
jne
mov
xchg
or
(bad)
out
push
daa
leave
push
add
and
sbb
int
push
(bad)
dec
mov
(bad)
(bad)
jns
cdq
aas
add
enter
or
aas
inc
add
dec
stos
(bad)
xor
pop
lods
dec
outs
mov
jbe
(bad)
jg
xor
sbb
repz
adc
fwait
xchg
(bad)
jle
jb
cld
mov
mov
mov
push
push
dec
or
lods
in
mov
ret
stos
sahf
jecxz
out
call
ins
push
jns
or
gs
mov
fstp
mov
jl
sbb
pusha
push
iret
sub
int
adc
mov
stc
push
mov
loope
retf
das
rol
hlt
mov
fcmove
test
fsubrp
cmps
outs
sbb
pop
cmp
inc
add
mov
stc
movs
cs
sbb
lods
push
fs
stc
ffreep
es
mov
popf
sbb
jl
rcl
push
ss
shr
mov
xchg
leave
adc
add
fwait
mov
aas
xor
outs
shl
cmps
add
jle
(bad)
js
pop
xor
mov
mov
in
daa
outs
imul
mov
shr
jp
shl
mov
inc
mov
jns
sbb
pop
imul
jns
ja
ror
int3
add
loope
mov
ret
daa
xor
sbb
loope
enter
mov
adc
in
cmp
jle
cmps
and
inc
mov
arpl
pslld
dec
cmps
jb
cmc
adc
inc
aam
adc
sbb
push
outs
mov
les
jb
cmc
out
and
rol
or
stos
aaa
loopne
jns
add
mov
cmp
aad
xchg
jg
add
call
ret
pushf
cmc
cmp
and
nop
sti
hlt
push
and
or
icebp
fadd
adc
retf
cmps
adc
mul
xor
fs
int
cmp
dec
pop
xchg
cld
dec
das
inc
xchg
loopne
inc
in
push
shld
pop
cmp
sti
cmp
mov
in
pop
adc
in
aaa
shr
xor
lock
adc
js
cmp
cmp
mov
mov
retf
imul
pop
dec
push
les
sbb
add
or
pop
mov
mov
adc
fild
ss
and
adc
dec
pop
or
(bad)
xor
imul
sti
xchg
and
mov
stos
out
loope
jo
(bad)
adc
or
adc
je
(bad)
sbb
inc
lea
xlat
lea
gs
lock
cmp
dec
ds
sub
fisub
dec
ja
inc
cdq
xor
mov
in
cld
call
jecxz
cli
cmp
(bad)
jnp
xchg
pop
mov
imul
cmp
dec
hlt
mov
jnp
rcl
jbe
or
sub
mov
stos
ror
movs
xchg
cmp
add
adc
add
cmp
inc
inc
hlt
int
or
inc
mov
push
outs
iret
dec
sbb
pop
rol
lock
and
pop
ror
retf
les
xchg
shl
and
jecxz
stos
xchg
sub
sub
pop
in
xor
cmp
ja
jb
outs
sub
ret
or
cdq
call
hlt
sub
inc
clc
adc
out
lods
cmps
ret
xor
call
enter
mov
cmps
ds
sbb
xor
jl
mov
xchg
mov
jge
ror
or
adc
lods
shl
loope
pop
or
ins
xchg
and
mov
je
sar
xchg
gs
push
mov
sbb
jl
jne
fadd
xchg
jecxz
hlt
fistp
ss
leave
mov
xlat
mov
dec
or
jmp
ds
sbb
push
outs
mov
push
sbb
mov
iret
scas
adc
mov
sub
out
aaa
xchg
and
mov
loop
clc
fwait
mov
pop
ret
mov
sbb
icebp
fld
jmp
mov
inc
sbb
stos
icebp
xchg
cmp
data16
cli
jle
ds
mov
xchg
aad
mov
movs
dec
(bad)
icebp
rcl
test
push
std
pop
xor
ret
cmc
mov
ret
repnz
leave
out
add
inc
xor
gs
pop
jbe
cmps
sbb
and
aad
push
ret
mov
jns
mov
shl
jb
cmp
into
aas
or
jnp
and
ins
mov
imul
mov
ins
mov
dec
fcom
test
outs
not
fwait
popf
cmp
lock
or
lea
out
sub
mov
loopne
and
mov
cld
pop
fldcw
sbb
pusha
inc
cdq
sti
rcr
and
and
cmp
ds
jge
test
bound
sahf
jbe
ret
dec
cwde
mov
cwde
cli
mov
or
adc
faddp
add
fwait
loop
pop
shr
push
call
xor
pop
dec
push
mov
mov
push
or
xor
inc
fwait
add
ror
hlt
xchg
dec
jbe
cld
gs
fsubr
in
mov
movs
pop
inc
imul
or
pop
push
ins
mov
ins
sub
inc
outs
lock
shr
adc
cmp
leave
aad
dec
dec
std
lds
sub
dec
lds
rcr
mov
sbb
sbb
cld
pop
(bad)
lea
(bad)
out
arpl
nop
jno
out
popa
xchg
push
aad
(bad)
mov
inc
adc
jne
jbe
cdq
add
jp
cmc
leave
cmp
sub
or
iret
fdivrp
outs
(bad)
aas
fwait
popf
mov
xor
jmp
test
or
mov
sbb
pop
ins
xchg
or
push
mov
cmp
jne
addr16
adc
lea
pop
sbb
ja
fsubr
mov
sub
cli
add
sti
lahf
(bad)
jne
sub
daa
push
xchg
mov
std
push
stc
mov
fistp
inc
ja
(bad)
jl
xchg
into
jp
aad
test
(bad)
out
es
shl
out
mov
fsub
adc
jmp
cmp
inc
scas
inc
adc
jmp
pop
fcomp
jmp
fs
dec
cli
pusha
jecxz
jbe
fs
ror
aas
jno
pop
call
iret
iret
cwde
mov
pop
cmp
jge
add
adc
pop
adc
mov
out
push
mov
jle
scas
mov
jecxz
aad
xor
imul
push
shr
lock
xchg
hlt
jae
data16
mov
loope
xor
and
pop
ret
mov
in
or
or
mov
in
test
cmp
mov
pop
xchg
xchg
pop
or
outs
cmp
or
popa
pusha
fdiv
mov
pop
or
out
int3
sub
cmp
mov
push
mov
cmp
ja
mov
mov
ret
inc
dec
jle
ins
ins
repnz
xchg
jecxz
call
loop
pop
mov
push
jae
lahf
jge
xor
sbb
loopne
push
mov
cmps
mov
sub
mov
popf
fld
sahf
pop
cmc
test
cmp
test
ret
sti
mov
push
mov
sbb
inc
sbb
mov
jl
ret
mov
ficom
movs
and
test
jl
shr
jbe
hlt
pop
sbb
out
cmp
xor
pop
mov
xor
out
lahf
jne
call
xlat
inc
inc
call
or
loopne
mov
popa
pusha
in
cmp
push
out
and
xor
mov
cmp
jne
enter
dec
xchg
imul
or
cmps
in
xchg
inc
(bad)
std
aam
sbb
or
jle
(bad)
jnp
adc
and
stos
arpl
jl
jns
sub
xchg
dec
xchg
jg
iret
stc
imul
dec
xchg
(bad)
jle
mov
and
daa
add
movs
in
and
ror
adc
add
iret
sbb
mov
push
mov
sahf
call
ror
sub
and
xor
inc
cli
and
sub
stos
(bad)
xor
shr
mov
cld
outs
jmp
stc
cmp
jmp
mov
sub
enter
xor
dec
or
xchg
js
fmulp
pop
(bad)
xchg
dec
or
out
bound
inc
add
std
in
fcos
mov
arpl
xor
loopne
add
push
and
mov
pop
inc
inc
jge
push
pop
dec
xchg
in
mov
mov
es
stos
imul
popa
and
pop
repnz
inc
pop
call
fs
fs
rol
ficom
xchg
shr
mov
mov
push
sbb
mul
shl
fs
cld
enter
pop
mov
push
repz
add
aas
push
cmp
lods
mov
sub
sbb
mov
mov
daa
out
or
stc
dec
push
out
cmp
or
mov
gs
xor
jnp
mov
pop
jp
add
scas
stos
ret
nop
int
arpl
aam
pop
or
xchg
xchg
and
loopne
lea
cmp
push
or
push
add
xor
mov
addr16
fcmovnbe
pop
push
inc
popf
(bad)
(bad)
in
cli
int
mov
push
mov
rcl
fs
stos
inc
sbb
add
jae
pop
cdq
lods
les
add
sub
repnz
mov
pop
fld
imul
into
jbe
retf
push
mov
cs
xchg
push
lea
adc
cli
popf
es
inc
scas
shl
mov
push
loop
dec
push
or
mov
(bad)
sub
stc
in
xchg
jle
test
pop
rdtsc
imul
in
rcr
jo
dec
scas
popa
add
pop
mov
nop
or
jne
and
das
pop
rol
ss
je
inc
xchg
icebp
xchg
imul
sbb
daa
(bad)
(bad)
rcl
jle
cmps
test
inc
mov
sub
and
rol
mov
jp
pop
and
pop
dec
ret
das
or
jmp
inc
inc
scas
mov
ss
jne
mov
mov
loopne
scas
popa
sub
mov
ja
jbe
and
test
mov
and
xor
(bad)
aas
movs
nop
(bad)
jbe
cmp
mov
sahf
retf
cmp
inc
fs
fiadd
pop
add
pop
sar
mov
dec
call
jnp
sub
fadd
xor
xchg
jae
cli
sbb
into
jae
dec
sub
mov
jmp
nop
inc
add
test
xor
lahf
nop
sbb
pop
mov
xchg
icebp
imul
adc
xor
ja
sbb
jecxz
pop
xor
pop
ds
lock
push
fild
jl
les
push
dec
mov
sbb
ret
pop
sub
and
add
inc
retf
cmc
scas
sub
xchg
push
sti
shl
out
les
stos
in
test
jecxz
inc
mov
inc
push
test
adc
dec
adc
mov
inc
mov
pop
hlt
call
stos
not
cmp
outs
adc
mov
nop
cmp
mov
sahf
outs
inc
mov
fmul
setp
jnp
(bad)
imul
loope
cld
test
fucomip
cmc
lock
mov
fcomp
push
jmp
inc
stos
or
adc
xor
lods
clc
dec
push
jle
mov
mov
jecxz
daa
(bad)
xor
push
movs
outs
dec
call
mov
xlat
mov
xor
mov
popa
pop
mov
js
rol
mov
dec
getsec
jo
iret
jge
sub
loopne
ins
dec
add
rcr
jge
test
mov
inc
call
popf
cmp
scas
and
rcr
fiadd
daa
xor
jl
pushf
fld
cmp
arpl
retf
fdivr
push
out
mov
xchg
and
iret
xchg
xchg
fistp
mov
cs
jp
lock
movs
jne
mov
scas
inc
sub
and
dec
inc
aam
mov
call
(bad)
fdivr
fwait
aad
xchg
pop
pop
inc
xchg
jmp
fimul
clc
adc
and
inc
adc
or
sbb
push
data16
sar
gs
out
ret
mov
add
(bad)
dec
stos
test
or
xor
add
jle
retf
scas
in
fneni(8087
sub
lock
stc
out
imul
retf
call
cmp
stc
add
sti
cdq
in
lds
pop
in
inc
(bad)
enter
mov
out
sbb
push
mov
mov
dec
sar
gs
push
fsubr
stos
jno
cs
test
add
mov
mov
xor
imul
jno
in
pop
je
pushw
scas
cmp
loop
or
or
push
pop
add
mov
adc
in
lods
inc
mov
adc
dec
in
ins
xor
mov
sbb
and
aam
aas
mov
jg
enter
ins
and
nop
(bad)
xchg
xor
adc
ja
add
pop
xchg
cmp
mov
fcomp
lods
(bad)
mov
cmp
mov
jae
inc
ins
push
ins
sbb
dec
sbb
rcr
push
push
in
scas
inc
sbb
dec
aad
int3
adc
xchg
jbe
sti
ficom
xchg
and
mov
sub
push
xchg
test
mov
xchg
or
dec
shl
jo
sti
xor
pushf
les
mov
cwde
push
cmp
les
jb
shr
mov
push
jmp
push
jle
add
cmps
push
jnp
repnz
aas
adc
retf
inc
pop
mov
mov
mov
mov
test
pop
shl
jnp
and
es
mov
xlat
adc
inc
mov
add
je
test
fdivp
pushf
xor
out
arpl
fidiv
xor
pop
bound
int
add
loope
imul
imul
push
mov
dec
mov
out
mov
cmp
push
dec
sub
xor
ret
mov
sub
sbb
movs
daa
imul
lahf
cmp
xor
outs
(bad)
shr
inc
and
push
fwait
dec
mov
or
pusha
arpl
stc
shl
repz
inc
(bad)
fcomp
lods
push
cmp
(bad)
iret
imul
cmp
cmp
movs
sbb
mov
cmc
cmps
push
xchg
(bad)
jno
cmps
pop
ror
aaa
dec
fisttp
mov
push
hlt
out
inc
mov
push
nop
sub
test
addr16
pop
cmps
pop
push
shr
loope
mov
cmp
mov
xor
mov
ror
ins
call
aad
dec
pop
sar
rcl
pop
lahf
jmp
xor
aaa
(bad)
test
shl
or
pop
out
xor
je
cmp
ds
add
call
clc
shl
das
jns
stos
pop
jo
xchg
jl
xor
pusha
inc
xlat
(bad)
loop
loop
adc
dec
sub
mov
sbb
fbld
outs
mov
cli
or
out
sub
sti
cmp
sbb
or
(bad)
(bad)
hlt
dec
jb
or
pop
or
ret
dec
in
lods
xchg
call
sbb
aaa
shr
mov
(bad)
mov
push
pop
arpl
xchg
jle
callw
aam
pop
pop
hlt
lds
stos
inc
cmp
xor
mov
ret
rol
sbb
adc
lock
data16
cmp
mov
aam
(bad)
dec
jge
leave
loop
icebp
xchg
es
adc
xor
aas
push
push
std
(bad)
push
xor
rcr
pop
aad
cmp
loope
mov
mov
bound
repz
scas
arpl
sbb
lea
cdq
sbb
push
add
sbb
or
cmps
push
(bad)
xor
push
mov
xor
cmp
mov
jno
push
fwait
movs
adc
push
mov
mov
pusha
add
cmp
pop
enter
sahf
leave
jecxz
mov
aas
inc
mov
out
xchg
and
dec
aaa
scas
mov
ret
add
lods
jae
test
iret
jne
add
sbb
sti
and
dec
or
in
dec
mov
enter
push
das
(bad)
jnp
stos
push
cmc
lds
stc
(bad)
mov
fwait
inc
dec
test
fadd
or
imul
arpl
jg
jge
mov
cdq
add
mov
mov
and
jecxz
je
push
mov
mov
sbb
jge
out
xchg
cmp
fisttp
out
repnz
pop
push
and
mov
enter
mov
js
pop
movs
stc
jmp
cld
int3
ds
aam
jmp
call
xchg
push
int
mov
xchg
retf
sub
xor
push
je
mov
cmp
push
ret
sbb
pop
pop
test
jmp
sub
ret
(bad)
(bad)
and
pop
(bad)
pop
push
cmp
ret
mov
fld
xchg
pop
jbe
fiadd
mov
adc
les
inc
jo
fcmove
fnstenv
cli
sbb
xchg
int3
push
cmps
fstp
shl
pop
xchg
call
test
shl
add
iretw
jmp
cmps
jno
inc
cmp
aam
push
fmulp
mov
(bad)
sbb
cmc
pop
xchg
leave
xor
xchg
pop
inc
es
xchg
xchg
mov
js
outs
test
fs
mov
fdiv
push
mov
(bad)
dec
in
das
je
sar
addr16
mov
xchg
and
jecxz
cs
dec
cld
loopne
or
sbb
mov
mov
mov
call
fisttp
jle
and
in
or
add
pop
cmp
dec
out
mov
cld
call
mov
add
jge
dec
sub
add
imul
add
jnp
jbe
cmp
xor
fisubr
push
outs
cmp
cmp
fcom
xchg
xchg
jmp
and
dec
sbb
in
out
fidiv
pop
fiadd
mov
mov
adc
aas
mov
nop
xor
add
sahf
inc
imul
adc
sahf
arpl
popa
cmp
(bad)
add
mov
icebp
std
mov
fs
push
adc
jl
ret
sbb
gs
sbb
sub
push
xlat
sbb
dec
js
cmps
imul
clc
xchg
mov
fcomp
sar
and
int3
sbb
cmp
sub
mov
adc
push
mov
mov
bound
ror
fbld
sbb
push
or
out
mov
xchg
in
in
mov
adc
pop
aad
push
aam
mov
and
movs
jg
ret
sti
pop
adc
push
jmp
pusha
mov
mov
jp
sbb
addr16
or
(bad)
(bad)
ins
fst
stos
push
out
rol
shl
sub
jne
retf
cdq
shl
pop
cmc
push
rol
neg
nop
adc
cwde
jmp
cmp
in
mov
std
or
test
adc
sahf
bound
jne
mov
xchg
push
add
and
xchg
fisttp
mov
fsubr
and
das
cwde
pop
mov
popa
mov
out
lods
cwde
mov
das
add
int
cmp
bound
mov
inc
dec
in
inc
push
mov
ins
sahf
ss
ja
sub
mov
stc
test
inc
jns
hlt
xchg
mov
mov
repz
sbb
push
sub
test
loope
lahf
cli
jo
pop
fmul
fst
xchg
and
ins
lock
retf
test
loope
out
mov
ror
aas
push
push
cmp
imul
dec
sub
mov
push
xchg
mov
(bad)
je
cmp
shr
fstp
adc
add
inc
test
inc
pop
sub
loop
cmps
pushf
fsub
retf
fucomi
and
fnsave
pop
dec
fdivp
push
cmp
dec
call
and
mov
xor
mov
push
sbb
aas
push
scas
jmp
jne
mov
jmp
fs
sub
mov
test
out
pop
addr16
lea
rol
inc
mov
stos
das
pop
scas
ss
rol
cmp
adc
dec
stos
sub
pop
push
jo
test
jmp
loop
addr16
adc
mov
into
dec
sbb
and
dec
cmp
add
adc
mov
mov
add
push
xchg
mov
mov
(bad)
gs
fs
adc
or
aas
ss
outs
cs
cmp
loopne
cli
xor
xchg
movs
aad
test
outs
call
xchg
mov
lea
pop
call
sbb
jp
sbb
cmp
sbb
xor
mov
ins
push
lods
add
inc
mov
push
inc
mov
cmp
dec
jmp
cmp
mov
mov
inc
mov
jle
cmc
pop
dec
imul
and
outs
cld
enter
imul
sahf
stc
ins
inc
dec
mov
jp
cdq
fmul
lods
outs
mov
stos
mov
addr16
mov
sub
ss
or
fisubr
mov
cmp
adc
mov
pop
ucomiss
mov
pop
cs
pop
scas
stos
out
shl
mov
bound
inc
jmp
xor
sbb
in
cmp
or
sar
jmp
jmp
dec
mov
mov
sub
add
dec
sar
ret
repnz
pop
ficomp
xor
aaa
inc
daa
add
add
sub
mov
cld
pusha
scas
jp
or
cwde
lahf
sub
jg
pcmpgtw
fisubr
dec
ret
mov
loop
xor
xor
cmp
sub
fdivr
cmp
ficom
xchg
test
sti
sbb
add
call
out
and
lahf
ffree
xchg
clc
mov
adc
jp
test
mov
(bad)
and
and
mov
fiadd
or
in
mov
jl
test
outs
jmp
stos
retf
cwde
cld
add
adc
cmps
and
in
mov
mov
push
repz
cmc
addr16
imul
es
int
fisttp
sub
imul
dec
retf
mov
(bad)
mov
fisub
cmp
in
cmp
dec
mov
mov
jbe
add
dec
int3
or
scas
iret
out
push
jne
push
sub
shr
xchg
rcr
xchg
push
push
push
xchg
or
in
(bad)
jo
jmp
sub
(bad)
rcr
or
mov
loope
or
jl
loop
cmp
mov
div
add
mov
pop
cmps
jle
or
bound
ins
push
fidiv
push
xor
(bad)
hlt
dec
push
outs
mov
test
js
mov
sbb
jge
add
dec
test
stos
add
int
je
mov
push
mov
loope
inc
mov
dec
call
or
jmp
cdq
mov
push
push
jbe
jg
outs
ds
or
ret
push
jns
cld
or
jb
fisub
sbb
cmp
sbb
daa
push
sub
inc
popa
or
or
push
ja
or
xchg
push
(bad)
and
imul
div
add
jno
push
leave
sub
lahf
xor
adc
cmp
(bad)
fldcw
sbb
mov
inc
fdiv
or
nop
addr16
and
jl
inc
cmp
jno
mov
jg
push
sbb
mov
retf
fldcw
mov
cld
jb
lods
mov
push
mov
adc
jbe
hlt
imul
outs
stos
adc
idiv
stc
div
call
sub
repnz
(bad)
dec
push
pop
push
loopne
adc
dec
pop
push
popf
jb
xor
mov
mov
in
shl
hlt
test
adc
call
jl
mov
iret
ins
xor
dec
test
add
inc
mov
fwait
scas
cmp
mov
push
xor
dec
dec
push
shr
stc
mov
fcomp
outs
push
outs
and
or
or
outs
sbb
daa
fidivr
imul
xor
aam
lods
xor
ja
push
sub
push
mov
out
ror
mov
sbb
leave
(bad)
fbstp
call
imul
sar
inc
or
gs
out
pop
adc
mov
push
(bad)
popa
inc
shl
je
and
mov
cmp
mov
dec
dec
push
xor
sub
xlat
mov
inc
jecxz
pusha
sub
int3
push
inc
xlat
dec
fs
aam
sbb
loop
out
stos
icebp
push
jnp
mov
push
(bad)
jecxz
ins
stos
or
mov
aaa
and
mov
push
or
mov
cdq
stos
mov
cmps
cmp
jns
jbe
xlat
mov
adc
dec
cmp
mov
pop
into
mov
stos
leave
jns
lods
in
push
add
out
add
repz
std
mov
mov
xchg
mov
(bad)
nop
xchg
add
add
cmp
or
retf
mov
cmp
sar
in
mov
rol
test
into
rol
enter
call
and
pop
jae
or
inc
scas
popa
mov
jo
fcom
mov
push
ins
iret
and
push
or
hlt
jnp
xchg
stos
push
stos
push
out
mov
push
(bad)
mov
bound
adc
add
inc
daa
imul
shl
fistp
pop
cmc
xchg
pcmpgtb
mov
sbb
bound
push
sbb
inc
adc
repz
or
sbb
jp
mov
dec
retf
fwait
movs
(bad)
and
call
push
push
adc
in
cmp
(bad)
xor
not
lahf
mov
add
xchg
int
(bad)
out
cli
push
push
pop
dec
(bad)
out
cmp
mov
repz
data16
adc
cld
out
icebp
iret
jmp
dec
aad
(bad)
push
test
es
mov
mov
mov
not
cmps
cli
stc
sub
mov
loopne
mov
fbld
aaa
and
popf
call
mov
sub
hlt
scas
or
popa
xchg
cmp
cmps
(bad)
idiv
lahf
gs
jecxz
cmp
mov
dec
ins
movs
jnp
sbb
pop
ins
(bad)
repz
jle
pop
sbb
dec
adc
nop
jne
jns
inc
rcl
in
sub
bound
popa
sbb
and
fs
(bad)
loop
jmp
jge
sbb
xchg
lods
ficomp
jl
outs
lds
movs
lds
loop
xor
cmp
loop
test
sub
xchg
pushf
fs
jbe
aaa
cmp
jl
ss
mov
fcmovnu
mov
dec
retf
pop
test
jae
loop
leave
mov
stc
inc
sbb
nop
rcr
in
xchg
sbb
mov
test
mov
ficom
shl
xor
fsub
push
xor
stc
out
jnp
mov
xor
jecxz
pop
sbb
movs
xchg
imul
out
inc
push
add
mov
ret
retf
ins
mov
scas
std
push
inc
jae
fisubr
retf
cs
jge
add
loope
xchg
stos
cmp
sub
das
add
ds
cli
or
leave
(bad)
and
loop
lds
inc
mov
rol
sub
mov
leave
jne
in
pushf
call
sahf
jl
dec
sub
xor
xchg
dec
sti
scas
dec
and
cmps
add
arpl
jmp
add
mov
add
or
inc
adc
or
xchg
pusha
sahf
hlt
dec
idiv
xchg
cmp
cmp
jo
cmp
ins
jecxz
loopne
xchg
jno
dec
test
popf
sub
mov
jl
cmps
rol
aam
add
fwait
movs
imul
mov
retf
cmps
push
mov
fild
mov
(bad)
and
add
or
lahf
xor
mov
movs
addr16
mov
(bad)
cmp
fst
retf
leave
aam
adc
sub
and
fmul
cmp
push
gs
shr
pop
in
add
shr
pop
or
fldcw
fcmovu
xor
ror
enter
mov
pop
inc
fsubr
push
push
leave
aaa
das
ror
add
and
dec
mov
or
push
mov
repnz
mov
mov
dec
sbb
fwait
aam
dec
mov
cmp
pop
pop
in
jge
fst
call
mov
bound
repz
add
les
dec
xor
les
(bad)
mov
imul
jecxz
sbb
lds
icebp
push
dec
lea
js
inc
inc
mov
jnp
jnp
sbb
jne
test
xor
pop
in
sbb
loop
lea
mov
xchg
push
mov
icebp
addr16
adc
or
imul
xchg
fwait
xchg
stos
xor
ret
mov
jns
cmp
lea
mov
dec
sub
lea
sbb
push
in
aad
mov
je
cmps
fdivr
es
fidivr
pop
jg
or
xchg
push
push
push
inc
sbb
in
jp
mov
test
push
add
lods
inc
icebp
je
sbb
push
rol
add
mov
repnz
iret
mov
cmp
imul
(bad)
int
sbb
jecxz
xchg
jge
cmc
mov
xchg
jecxz
mov
out
ror
xchg
iret
mov
mov
retf
and
sbb
adc
bound
das
xchg
in
xor
repz
xlat
sub
xchg
lock
inc
mov
repnz
pop
mov
cmps
xlat
inc
xchg
sub
push
mov
mov
movs
sub
shl
sar
jg
test
adc
or
iret
add
sbb
ins
jle
add
adc
add
icebp
jecxz
popf
jg
or
sub
mov
out
fdivr
sub
test
xor
scas
lahf
inc
cmp
iret
or
jb
js
js
call
imul
pushf
dec
xor
ins
out
data16
ret
mov
int
jl
push
mov
std
bound
imul
jae
aas
in
cmp
(bad)
and
out
sub
push
(bad)
jbe
add
jno
pushw
add
xor
cmp
shl
test
pusha
das
pop
cmps
mov
(bad)
cmp
loop
xchg
ret
jae
adc
out
cmp
fdiv
sbb
shl
or
test
arpl
dec
mov
jno
dec
pop
fnsave
ss
repz
inc
push
add
pop
ja
jg
mov
jmp
push
mov
repz
cmps
fwait
push
mov
jmp
sti
out
cdq
popa
sub
stc
push
push
pop
jo
not
rol
outs
(bad)
mov
inc
(bad)
rcl
icebp
jmp
push
sbb
pop
shl
mov
mov
adc
test
aam
add
jmp
mov
nop
pop
cmp
mov
sub
xchg
mov
or
pop
sbb
je
fs
ds
or
les
test
fwait
jns
idiv
sbb
fdivr
mov
mov
xchg
aam
mov
pop
mov
pop
fist
cld
mov
jg
mov
test
sbb
stos
inc
pop
sub
bound
shl
cmps
dec
stc
rol
mov
lods
pop
pop
gs
push
jne
xchg
daa
or
or
loope
loopne
(bad)
jo
sub
and
push
adc
sub
retf
(bad)
cmp
adc
inc
and
das
mov
sub
pop
repz
cmps
mov
push
jmp
daa
data16
cli
stos
iret
jae
mov
repnz
das
jne
mov
push
loop
loope
xchg
cmp
bound
pop
mov
pop
xchg
jo
xor
push
cmp
xchg
xchg
cmp
push
push
repnz
xlat
ret
cmovo
test
push
imul
and
and
dec
(bad)
mov
repnz
jb
push
or
push
fcom
jg
jmp
push
or
test
es
daa
shr
cmps
mov
popf
inc
xchg
loope
sbb
lods
cs
pusha
cmp
fdiv
pop
mov
pusha
ret
jmp
fnstcw
pop
cmp
scas
stos
call
jo
or
cmp
mov
ins
dec
dec
loope
sbb
cmp
jno
or
test
ss
jnp
xor
sbb
inc
add
inc
pushf
dec
jne
in
sbb
sub
stos
ret
arpl
or
jmp
xor
mov
div
dec
out
pop
adc
and
repnz
ret
xchg
mov
test
mov
mov
dec
inc
fldcw
mov
and
aad
mov
xchg
pop
xchg
ins
loope
not
arpl
(bad)
mov
lds
mov
idiv
daa
sahf
out
arpl
in
fwait
mov
sbb
sahf
mov
enter
or
mov
daa
sub
push
xor
fidivr
pusha
test
ds
fcom
std
pause
and
or
loope
fldcw
(bad)
mov
mov
mov
mov
push
inc
xchg
pop
jne
jp
sbb
xchg
push
adc
(bad)
xchg
jmp
cmp
sahf
adc
movs
sub
test
in
shl
ins
sbb
or
mov
fisubr
aam
or
mov
lods
pop
cmps
dec
test
adc
pop
cmps
mov
mov
daa
retf
mov
pusha
dec
fsqrt
pop
bound
not
sub
call
adc
(bad)
push
popa
jle
jmp
or
aad
pop
loopne
into
jnp
stos
test
enter
leave
test
pop
sbb
pop
pop
dec
jecxz
je
ss
and
into
push
cs
fwait
sub
push
aad
ja
js
adc
retf
and
or
das
adc
jno
add
call
ret
jb
jns
call
pusha
pop
sbb
mov
frstor
test
data16
fwait
addr16
mov
frstor
fidivr
dec
or
xchg
repz
dec
xchg
cs
inc
xchg
clc
xchg
call
xchg
pop
imul
mov
arpl
in
xor
inc
icebp
ja
adc
sbb
xor
lock
pushf
ror
pusha
iret
in
into
mov
push
and
or
add
loope
and
push
and
jmp
test
mov
push
jno
mov
aam
dec
pop
xchg
bound
or
push
(bad)
fimul
add
push
jae
jle
jno
lahf
xchg
and
pop
outs
push
pop
xor
(bad)
(bad)
out
sub
movs
std
jns
adc
sbb
clc
pop
mov
sbb
mov
jge
adc
mov
fs
and
test
lahf
leave
bound
repz
adc
div
dec
scas
icebp
inc
icebp
and
or
and
inc
or
sub
mov
test
push
jmp
or
xchg
pop
fwait
test
test
xchg
fimul
jo
mov
das
mov
leave
lock
sub
xchg
jnp
mov
fmul
or
and
call
cli
adc
xor
cld
cmps
jbe
push
in
aas
mov
xchg
xchg
mov
inc
sar
adc
or
mov
push
cli
pushf
outs
lods
loop
mov
es
or
mov
mov
ins
scas
in
add
pop
and
pop
pop
loope
cmp
(bad)
mov
cmc
add
push
dec
cli
ins
dec
xor
inc
aam
dec
add
outs
(bad)
push
or
repnz
jg
repz
test
in
mov
sub
outs
jb
add
aad
pop
(bad)
cli
aaa
mov
dec
je
shr
test
fdivr
mov
fisubr
jge
dec
popf
loop
sbb
pop
(bad)
call
jecxz
dec
xor
and
jge
loopne
fimul
outs
xchg
leave
xchg
pop
shl
call
xor
mov
jae
sub
xor
xchg
test
inc
pop
and
iret
jp
imul
mov
fidiv
jne
adc
sub
nop
cmp
je
add
sub
movs
rol
push
retf
aam
cmp
out
jp
inc
inc
rcr
push
pop
inc
mov
ins
cmp
add
add
mov
pop
(bad)
in
or
les
and
xchg
jno
(bad)
fisubr
lea
arpl
(bad)
jo
cmp
sbb
test
jmp
lock
mov
inc
fst
jmp
xchg
call
and
retf
jbe
mov
push
inc
outs
push
hlt
pushf
xor
int3
push
dec
adc
push
pop
xchg
test
pop
loope
ror
icebp
xchg
ds
cmp
ret
sar
ds
pop
fild
stos
(bad)
icebp
dec
inc
iret
mov
cmp
repz
dec
inc
sti
movs
movhps
dec
sub
es
lods
out
pop
jbe
ds
push
(bad)
test
sub
sub
icebp
inc
and
mov
xchg
fwait
movs
sbb
pop
sbb
jecxz
stos
cli
inc
mov
fidiv
cld
movs
mov
sub
cmp
push
mov
xor
add
and
in
not
and
clc
mov
repz
cmp
fcomp
xchg
movs
push
das
mov
cdq
rcr
fcmovne
push
repnz
pop
dec
add
jo
sub
mov
add
xlat
add
sbb
jmp
ror
fwait
add
and
lds
(bad)
in
mov
mov
ss
and
xchg
adc
cwde
imul
mov
pop
mov
cmp
pop
sbb
(bad)
sbb
xchg
(bad)
lahf
retf
fild
idiv
or
dec
jae
xchg
push
sbb
call
arpl
sbb
call
jle
outs
in
jne
pop
dec
or
add
mov
pop
imul
pop
jmp
pop
lods
cmp
ret
lahf
hlt
(bad)
cwde
out
or
std
xchg
mov
loop
sbb
repnz
sbb
cdq
pop
int
loopne
and
pop
iret
xchg
dec
xor
cli
dec
cmps
sub
push
or
icebp
push
imul
imul
and
pushf
push
sar
cli
inc
mov
cmps
pusha
aas
and
add
push
and
sub
jecxz
dec
shrd
loopne
push
test
inc
xchg
jae
dec
pop
mov
rcr
pop
cmp
jl
dec
pop
mov
mov
repnz
mov
pop
add
fidivr
pop
dec
mov
pop
test
fwait
jg
retf
int
out
sti
idiv
in
popa
add
loop
push
cmp
repnz
sar
es
ret
popa
pop
pushf
into
sbb
mov
icebp
dec
xchg
xor
pop
je
pop
imul
dec
sbb
loope
cmps
int3
jl
retf
(bad)
in
cmps
iret
add
pusha
and
fnstsw
push
mov
ja
(bad)
out
mov
pop
das
cli
push
adc
jg
or
in
sti
rcr
push
test
ror
adc
test
dec
cld
in
ret
sub
mov
or
mov
cmp
adc
adc
add
push
shr
pop
fdivr
dec
mov
pop
sub
dec
jp
xchg
outs
mov
in
xchg
fisub
cld
or
xchg
clc
push
ficom
out
inc
xor
cld
xor
arpl
inc
xor
xchg
std
mov
push
lds
(bad)
loope
int
xchg
inc
pop
pop
repz
gs
std
pushf
cs
xlat
lahf
clc
and
sbb
or
cmp
je
nop
scas
adc
cdq
jns
stos
add
ins
adc
lahf
xor
sti
sbb
not
retf
jmp
movs
cmp
push
mov
leave
pusha
cs
cmps
les
inc
repnz
mov
mov
aad
sar
dec
popa
jg
xor
jmp
clc
sub
hlt
retf
lds
js
adc
sub
push
push
cmp
pop
mov
or
movzx
fwait
cwde
adc
jne
sub
cmp
enter
rcr
mov
xchg
inc
push
pop
ret
jmp
sub
out
cmps
mov
je
pop
or
adc
lods
icebp
sbb
sub
mov
adc
lods
xor
(bad)
ins
shl
dec
jns
rcl
mov
or
repz
movs
fiadd
sub
stos
mov
sbb
clc
not
jmp
jns
ss
mov
xchg
sub
inc
add
jb
jg
jo
call
xchg
adc
into
mov
jg
push
inc
fucomp
jecxz
ds
jne
dec
retf
loopne
movs
dec
das
mov
aas
out
rcr
inc
or
mov
ret
cmp
jecxz
into
pop
cmps
cld
jno
ret
idiv
stc
adc
retf
jbe
data16
mov
(bad)
mov
jmp
push
jp
or
adc
imul
adc
pushf
scas
xchg
mov
ins
sub
cmps
scas
xor
cmp
dec
retf
add
or
cmps
(bad)
dec
xor
outs
add
std
(bad)
pop
lods
clc
inc
sbb
xor
cmp
pop
pop
sahf
push
retf
daa
jl
pop
push
mov
mov
cdq
jmp
or
lock
or
inc
lods
stos
nop
lds
xchg
lods
jl
addr16
cmps
(bad)
push
push
inc
sub
push
stc
mul
stc
cmc
adc
push
mov
push
xchg
ror
daa
and
loop
cmc
and
pop
ror
stos
push
push
push
cmp
fidiv
les
adc
adc
scas
sbb
loop
cs
and
daa
jns
sbb
and
jl
lds
sub
pushf
inc
and
cmp
aas
mov
xor
jbe
push
mov
arpl
xchg
inc
cmps
jge
inc
int3
sar
out
dec
add
stos
inc
(bad)
out
stc
add
mov
ret
push
sar
sub
pop
xchg
or
lods
cmc
inc
xchg
dec
jmp
cmp
push
add
and
sbb
and
(bad)
in
in
into
imul
rol
jmp
test
push
pop
jmp
and
scas
aas
adc
mov
jbe
mov
cdq
iret
or
and
daa
cdq
xor
mov
mov
mov
enter
jno
mov
in
jmp
jo
into
mov
arpl
xchg
je
pusha
test
stos
(bad)
(bad)
push
retf
rcr
sbb
cdq
mov
sti
addr16
(bad)
aas
repz
mov
push
add
adc
ds
mov
add
push
jbe
jo
pop
xchg
ja
loope
mov
mov
addr16
mov
retf
add
cmps
cmp
sub
mov
sbb
dec
pusha
xchg
ror
loop
mov
inc
mov
cmc
sbb
std
hlt
inc
push
and
repz
pop
mov
push
ror
sub
(bad)
addr16
verr
je
(bad)
xlat
sti
push
into
gs
or
sub
mov
xchg
in
pop
imul
leave
mov
mov
iret
cmp
mov
enter
cmp
fsub
cmp
das
inc
pop
clc
(bad)
mov
int3
or
rol
fwait
pop
dec
lahf
imul
stos
mov
into
cmp
xor
popf
out
fadd
in
and
adc
push
push
jp
xor
cmp
aaa
add
push
dec
cwde
daa
call
xor
pushf
add
dec
loope
pop
dec
aaa
mov
loopne
es
pushf
(bad)
lock
imul
mov
pop
xchg
icebp
inc
cdq
push
add
mov
cld
lods
cdq
int3
sub
leave
lds
cmps
or
and
call
mov
imul
leave
sub
test
aaa
jbe
xor
mov
hlt
mov
jecxz
out
movs
push
repz
pop
repnz
sti
inc
stc
bound
mov
jbe
(bad)
loopne
xor
jmp
aaa
xor
inc
cli
ja
push
cmp
and
ja
ss
jbe
mov
pop
ss
cmp
push
dec
rol
leave
popf
jo
(bad)
cld
lahf
int3
lds
mov
sahf
scas
sub
lahf
add
cmc
mov
mov
nop
jne
test
cmc
lods
jno
daa
adc
dec
mov
fisub
test
dec
sub
ret
mov
jle
test
mov
lock
push
xor
pop
enter
xchg
sub
retf
pop
sub
mov
sub
xchg
mov
or
or
inc
popf
stc
sub
adc
out
fisubr
inc
mov
and
push
mov
retf
scas
dec
dec
movs
inc
fdivr
mov
repz
xlat
dec
or
jmp
pop
inc
test
fucomp
dec
js
cmp
inc
mov
mov
jg
push
mov
(bad)
outs
xor
shl
ja
mov
ss
test
sahf
pop
aam
mov
mov
mov
mov
imul
pop
push
jb
mov
pop
mov
add
mov
jl
dec
mov
adc
cmp
fmul
xor
fsubr
mov
retf
inc
lea
lds
mov
imul
cdq
jge
les
mov
mov
ins
xchg
xchg
js
int
push
push
sub
cmp
mov
ret
out
adc
xchg
scas
cmps
xor
or
xrelease
inc
inc
enter
mov
(bad)
pop
aad
xchg
cmc
test
test
imul
loope
loope
dec
mov
dec
arpl
jge
xor
cmp
(bad)
mov
and
adc
ds
out
mov
pop
pop
dec
adc
xor
pxor
adc
pushf
outs
bound
in
push
movs
jae
mov
arpl
cmp
add
add
mov
sahf
retf
clc
loop
cdq
cmp
mov
hlt
add
(bad)
pop
ret
les
jae
push
rol
fmul
mov
sti
inc
(bad)
jp
lods
nop
and
subps
push
movs
call
rol
bound
das
ret
outs
xchg
(bad)
mul
test
or
fnstcw
inc
shl
lock
cmp
fcom
arpl
fiadd
dec
jne
aas
xor
xchg
and
mov
js
test
cmp
xor
pop
inc
sub
mov
fnsave
and
sbb
stc
call
dec
jne
sbb
fucomp
cmp
xor
mov
mov
in
and
shr
push
inc
mov
mov
cmp
popa
loopne
mov
int3
ret
fidivr
xor
call
ret
pop
jne
mov
fwait
and
pop
jae
retf
nop
mov
int
cmp
mov
sbb
out
jne
(bad)
out
push
mov
pusha
xchg
jmp
test
sub
dec
or
xchg
or
rcr
fnstcw
adc
rsqrtps
mov
xor
shr
cs
test
xchg
mov
push
adc
mov
jns
(bad)
call
or
push
and
jle
movs
mov
mov
rcr
into
lods
je
mov
ret
call
dec
test
or
jg
dec
adc
mov
mov
xchg
in
jmp
mov
mov
push
imul
jno
pop
(bad)
pop
stos
and
xlat
dec
fnstsw
xchg
pop
add
test
xchg
cwde
out
adc
mov
retf
mov
sbb
repnz
inc
sub
xor
cmc
mov
aas
bound
jbe
jne
test
lods
dec
mov
mov
fild
add
ins
mov
leave
loope
(bad)
fwait
test
jl
xchg
or
test
push
je
push
mov
sub
aas
push
ret
or
sub
mov
pop
cmp
fcomp
jmp
das
and
xor
out
cmp
shr
jg
in
add
cmp
scas
pop
or
int
jecxz
pop
test
pop
sbb
dec
push
gs
test
addr16
push
js
or
(bad)
adc
mov
out
sub
stos
ss
adc
call
jmp
outs
ret
adc
jns
and
jno
jbe
out
in
cmp
or
add
ss
push
xchg
adc
ret
loop
jl
mov
int
and
stos
aam
xchg
adc
xor
jge
cmc
rcr
sti
adc
jmp
sbb
pop
push
jmp
clc
std
inc
dec
sar
lahf
and
test
push
or
retf
out
cmps
in
out
outs
push
pop
nop
sbb
cmp
ja
or
cmp
sub
out
imul
(bad)
cmps
out
jecxz
iret
icebp
mov
rol
inc
sbb
push
dec
add
pop
cmc
cmp
push
xor
aaa
push
hlt
sub
je
call
dec
stc
mov
mov
ror
mov
mov
cwde
cmc
fist
push
mov
pop
pop
call
pusha
jmp
jecxz
pop
jae
mov
dec
aaa
jp
lock
mov
add
mov
dec
cmc
sbb
mov
mov
sub
pop
dec
cwde
cmp
shr
or
cmp
das
ins
loopne
push
cmp
cdq
lods
imul
sbb
imul
cli
das
sbb
sti
gs
cmp
mov
pop
packsswb
jb
(bad)
gs
adc
in
fwait
std
div
sbb
jb
bound
and
xor
dec
jb
sub
or
mov
or
jns
fwait
jbe
shr
push
sbb
or
out
cld
scas
xchg
cmp
mov
popf
xchg
sbb
jno
arpl
std
push
xor
call
in
mov
into
neg
dec
push
lods
mov
fcom
adc
sahf
out
sbb
ret
cs
ins
js
pop
jb
(bad)
or
daa
outs
mov
push
pop
aaa
outs
push
leave
or
mov
pop
jle
adc
in
lods
leave
add
jmp
rcl
inc
and
(bad)
jle
mov
icebp
bound
adc
out
fbld
dec
loope
mov
lock
or
loopne
adc
cs
adc
jae
retf
mov
inc
mov
push
sub
sub
mov
xlat
je
retf
add
add
push
inc
xchg
inc
push
cwde
jns
rcl
adc
dec
mov
inc
cmp
lock
ins
fcom
gs
dec
inc
loop
enter
and
xchg
aad
adc
adc
test
fnstenv
lods
xor
fcom
mov
xchg
dec
cdq
cmp
xchg
loop
test
xchg
xchg
jge
mov
aam
adc
pop
icebp
sbb
sbb
in
loop
jmp
sub
sub
mov
jecxz
push
push
fwait
nop
ret
and
mov
lds
sub
out
inc
dec
add
mov
movs
aad
xchg
push
out
data16
ins
mov
xor
pop
pop
push
push
lods
arpl
lock
xchg
adc
(bad)
dec
push
dec
jae
and
pop
scas
or
les
movs
adc
sbb
retf
icebp
rcl
jge
cmp
inc
mov
retf
mov
test
enter
fisttp
or
test
push
xchg
xor
pop
movs
mov
pop
retf
dec
out
sub
inc
outs
popf
adc
in
add
je
les
mov
and
lahf
sbb
mov
and
dec
test
mov
(bad)
push
out
shr
and
jl
sub
inc
pop
xchg
jne
or
cmp
out
out
mov
xor
fidivr
movs
shl
inc
mov
dec
and
xor
jmp
jb
fs
and
mov
pop
mov
jbe
add
cmc
jb
jno
cwde
xor
or
xchg
ss
adc
push
retf
int3
sbb
clc
dec
out
sbb
sub
scas
inc
mov
rol
(bad)
push
adc
push
jmp
mov
cmps
mov
movs
loopne
jecxz
jnp
les
mov
repz
pop
jp
mov
lods
push
loopne
in
in
nop
icebp
or
push
lds
push
cdq
int
sar
push
pop
adc
les
rcl
xchg
adc
sbb
movs
mov
push
push
sub
or
xchg
xor
mov
retf
js
add
xor
outs
cmp
add
sub
movs
jg
jmp
fld
sbb
cmps
cdq
mov
std
pop
mov
clc
push
arpl
push
loopne
loopne
dec
dec
push
dec
and
jmp
xor
pop
jecxz
int
add
rcr
cwde
std
mov
pushf
addr16
movs
sbb
pop
loop
mov
mov
lds
push
repz
les
(bad)
int3
aad
ret
loope
inc
adc
mov
loope
aam
xchg
std
sbb
es
jo
cmps
adc
lds
sub
bound
in
daa
and
mov
repnz
mov
iret
cdq
int
push
push
adc
sbb
outs
clc
dec
arpl
fcmovb
test
in
sbb
in
push
loope
mov
push
xchg
int
int3
and
adc
mov
push
xchg
test
cmp
and
xor
cmp
ins
mov
imul
and
pop
pusha
(bad)
out
and
sbb
add
mov
ss
and
pop
and
pushf
rol
clc
outs
or
jmp
ins
cs
cmp
retf
xor
mov
xchg
sti
dec
sbb
dec
(bad)
iret
jmp
retf
pop
jae
cmc
fcmovbe
cmp
(bad)
jns
outs
ror
jne
ret
cmp
xchg
cld
sti
in
xchg
push
pop
cmp
mov
data16
jno
pop
iret
xchg
sub
push
es
stc
mov
or
mov
into
sub
push
mov
sub
retf
jno
outs
mov
jl
mov
cdq
sbb
shl
jecxz
mov
imul
pop
rcr
add
mov
cmc
mov
push
add
sub
ja
dec
fcom
xor
or
jge
cmp
jo
pushf
mov
aaa
sub
stos
fdiv
mov
hlt
and
push
mov
sbb
push
xlat
inc
add
inc
stc
xchg
ficom
test
pop
ja
xchg
jno
sbb
cli
pushf
xchg
sub
sbb
into
outs
mov
in
jae
add
mov
cmps
jg
out
inc
gs
cmp
and
sub
and
sub
push
cmp
aas
and
xchg
(bad)
fldcw
pop
add
xlat
sub
sbb
adc
xor
imul
pop
aad
cdq
sbb
mov
bound
cwde
and
xor
cli
push
mov
push
fisub
daa
enter
in
ret
inc
ret
cmovae
pop
xor
std
jb
fdiv
add
popf
daa
sbb
js
inc
sub
or
dec
call
in
fdivr
movs
or
outs
xlat
cmp
push
in
test
or
add
jb
mov
mov
mov
mov
in
inc
pop
aad
pop
or
test
loopne
pushf
push
lea
imul
(bad)
lock
mov
hlt
daa
xchg
retf
xchg
mov
add
mov
dec
pop
xchg
fild
pop
and
dec
mov
outs
int
inc
mov
bound
lea
cld
and
dec
test
push
fwait
movs
cmp
pop
nop
jmp
mov
jnp
aad
mov
leave
mov
xchg
aad
dec
xor
dec
imul
sbb
or
mov
fwait
xlat
fdivr
push
cmp
xor
shr
test
pop
data16
sub
ret
xlat
retf
pop
(bad)
and
mov
mov
aam
inc
sub
mov
cmp
int
outs
xor
sbb
mov
js
pushf
fdivr
or
xor
aad
ins
int3
xor
outs
fcomp
push
inc
jp
push
or
dec
fstp
and
cmc
cmps
(bad)
pop
mov
in
jge
mov
fldcw
sbb
mov
sub
mov
and
fwait
mov
aad
ror
mov
sub
and
out
lods
inc
loopne
dec
mov
stc
jge
push
retf
daa
jno
sbb
inc
jns
hlt
adc
jne
stos
ins
test
dec
ret
xchg
push
test
mov
dec
jnp
jb
sbb
jecxz
clc
cmp
inc
out
fst
and
xchg
xchg
mov
cmp
fcmovnu
cdq
loope
cmc
cdq
movs
inc
and
jmp
cli
mov
push
out
inc
cli
jecxz
cmp
dec
sbb
imul
iret
outs
inc
(bad)
out
dec
inc
fsub
cwde
(bad)
cmps
push
pop
cmps
test
mov
mov
inc
fwait
ins
enter
ins
popf
inc
in
jge
or
xchg
(bad)
mov
sbb
push
inc
mov
or
sbb
sbb
hlt
ja
push
and
popf
mov
jnp
jae
ds
ret
out
fstp
fnstsw
or
xlat
test
sub
cmps
adc
hlt
adc
mov
int3
(bad)
ins
stos
dec
shl
fld
test
int3
add
adc
push
out
std
xchg
out
mov
xchg
push
xchg
and
sub
out
sbb
or
cmp
clc
inc
add
xchg
into
out
dec
scas
inc
xor
test
out
hlt
ins
call
push
push
dec
repz
jb
fstp
arpl
(bad)
inc
sbb
dec
in
test
push
push
mov
cmp
scas
mov
xchg
sbb
cmp
xchg
mov
adc
mov
scas
mov
dec
or
xor
retf
pop
repnz
sbb
xchg
(bad)
imul
xor
rcl
and
adc
pop
test
and
pop
mov
lods
in
fcom
mov
mov
xor
jl
mov
arpl
push
add
cmc
and
sbb
adc
mov
lea
mov
mov
pop
retf
jns
enter
sbb
and
test
call
sub
mov
cmps
inc
in
and
sub
pop
xor
(bad)
in
shl
push
adc
dec
sbb
loope
inc
iret
or
push
pop
test
mov
aaa
pop
ds
movs
ins
jg
lds
adc
jae
loope
jmp
adc
(bad)
nop
cmc
sub
ret
(bad)
adc
mov
add
pop
sbb
in
ins
stos
xchg
xchg
xchg
mov
cmp
or
in
loopne
push
lock
jo
jecxz
xor
cmps
push
xchg
repnz
mov
adc
mov
push
rol
pop
cwde
ins
mov
push
dec
ror
int
inc
iret
sbb
inc
rol
add
pop
xor
les
mov
gs
sbb
and
xor
adc
es
push
fwait
popa
repz
dec
xchg
push
jmp
pop
fwait
mov
aas
shr
aaa
xlat
movs
fadd
call
and
and
add
pop
mov
scas
pop
cmp
ja
ins
std
fiadd
cmp
and
inc
jecxz
mov
xor
retf
jg
fwait
jg
retf
sbb
test
add
cmps
mov
ins
add
sbb
xchg
cmps
jl
add
dec
mov
mov
icebp
ror
pop
loop
inc
push
(bad)
cmps
test
bts
mov
out
in
and
xchg
rcl
or
stos
dec
adc
ds
(bad)
test
dec
pop
jae
sbb
add
adc
adc
pop
pushf
push
fimul
xchg
mov
clc
xor
jmp
jo
or
mov
dec
mov
cmps
or
dec
fidiv
not
inc
sub
inc
or
sahf
dec
addr16
cmp
mov
jae
rcr
or
fistp
mov
fst
pop
loopne
ror
fldcw
aad
es
ret
enter
repnz
fwait
inc
xchg
add
jbe
dec
xor
aaa
sub
inc
push
pop
add
xchg
cwde
pusha
loop
in
mov
pop
shl
and
rcl
sub
inc
or
push
or
mov
stos
jmp
mov
aad
lock
div
das
dec
cmp
xchg
inc
aaa
fwait
inc
mov
inc
adc
(bad)
sbb
add
push
cmp
xchg
test
sub
add
mov
jmp
sbb
xchg
dec
data16
mov
loope
test
inc
outs
push
and
xor
cmp
inc
rcl
pop
fwait
inc
mov
(bad)
fimul
mov
ja
mov
jne
mov
test
addr16
sub
jmp
sub
out
or
sbb
jns
xlat
data16
std
cwde
adc
iretw
outs
mov
lods
mov
jbe
add
pop
mov
push
rcl
arpl
add
pop
aas
mov
cmc
loopne
adc
leave
popf
cmp
cmp
nop
imul
cdq
dec
(bad)
das
inc
iret
mov
xchg
shr
dec
fs
jg
fs
add
pop
push
cmp
inc
test
mov
mov
das
push
or
mov
cmp
xor
add
adc
clc
dec
(bad)
cmc
iret
mov
das
pop
imul
dec
adc
mul
dec
jae
or
pop
inc
dec
dec
enter
mov
(bad)
fstp
mov
add
adc
cmp
mov
mov
in
outs
lock
mov
movs
xchg
es
add
data16
lahf
ins
mov
sbb
cmc
push
sbb
push
(bad)
out
in
push
test
cmp
clc
out
xchg
shl
and
mov
mov
jl
cmc
sti
jmp
mov
sub
in
out
pop
mov
aam
jecxz
ja
mov
dec
pop
into
xchg
sub
sbb
xchg
ins
add
jl
mov
push
dec
jo
int
fdiv
aaa
jno
mov
adc
jnp
mov
push
mov
repz
shl
cmp
pop
jp
push
xchg
or
push
inc
mov
movs
jmp
inc
jae
dec
test
xchg
cmp
call
mov
push
test
scas
bound
rcr
and
jmp
btc
bound
sbb
xchg
repnz
test
ret
repz
int3
xor
retf
popa
xchg
movs
mov
clc
imul
outs
(bad)
and
stos
aaa
fs
lea
push
xchg
daa
sub
xchg
and
inc
inc
nop
shl
lock
jns
aad
ss
inc
call
ret
aad
sbb
mov
push
stc
sub
inc
xchg
inc
fisttp
repnz
popa
clc
mov
in
inc
mov
mov
popa
push
jns
jge
mov
jns
sbb
out
pop
jnp
call
add
out
jb
jns
es
push
mov
jmp
popf
xor
dec
retf
imul
das
and
das
cmc
loope
or
add
mov
push
mov
rol
or
adc
jbe
mov
mov
sub
xchg
xor
ret
mov
data16
or
jne
and
xor
jb
fwait
cmp
test
and
cdq
stos
std
and
lock
ss
int3
test
into
lea
(bad)
adc
lahf
arpl
(bad)
lea
dec
dec
adc
rol
xchg
syscall
mov
and
jb
mov
jle
in
and
add
fcom
xchg
jae
cwde
jmp
push
leave
call
in
inc
mov
out
ror
inc
shl
imul
bound
push
pop
enter
xchg
lods
add
pop
inc
lock
push
xor
xchg
div
sub
in
sbb
lahf
jp
lods
xchg
jge
nop
and
inc
das
jg
leave
cmp
sbb
fisttp
mov
inc
sbb
mov
enter
int3
or
mov
aam
in
sbb
push
add
cmp
cli
(bad)
lds
dec
mov
icebp
xlat
jb
mov
or
stos
retf
mov
lods
xchg
lods
inc
aad
or
sbb
ins
or
ja
fimul
stc
arpl
cwde
arpl
cmp
sbb
aas
add
das
and
add
push
pop
mov
xor
mov
lock
sub
jp
lods
xor
je
jp
sbb
cmc
pop
xchg
add
inc
dec
pop
sbb
sub
push
sub
push
lahf
cld
cmp
mov
add
push
nop
or
rcl
add
mov
ret
fiadd
xor
add
arpl
lahf
push
fwait
jmp
cmc
ret
fwait
es
ins
cdq
add
fld
out
out
pop
xchg
sbb
cmp
sbb
sbb
xor
xchg
push
fld
adc
iret
sbb
mov
jns
arpl
in
push
aas
add
xchg
test
push
enter
dec
cmp
aas
adc
rcl
push
test
adc
pop
inc
leave
aas
sub
xchg
les
mov
push
mov
lahf
pop
dec
cmp
mov
(bad)
pop
call
ins
test
cwde
in
dec
add
fmul
xchg
ror
push
js
mov
cmp
push
cdq
lds
outs
pop
fcmovb
push
pusha
fstp
adc
adc
cmp
pop
inc
push
test
add
pusha
sbb
push
test
push
jge
in
mov
int
xchg
mov
es
xor
inc
(bad)
cs
xchg
cwde
inc
cmp
mov
sub
inc
pop
rdpmc
cmc
or
imul
mov
shl
pop
ja
or
pop
and
jbe
xchg
pop
mov
push
lea
jo
xchg
sub
aas
mov
js
in
aad
lods
ror
cmp
fdivr
cbw
push
dec
cmp
pop
loop
hlt
(bad)
jnp
mov
xchg
dec
ss
ret
push
call
sbb
push
pop
js
jle
xchg
push
ds
push
fcmovb
mov
add
push
outs
push
push
fidiv
jmp
cmps
cmps
sub
mov
add
mov
aad
add
(bad)
stc
jns
mov
push
stos
push
dec
mov
je
lock
and
jnp
in
xchg
stos
es
mov
or
add
jecxz
jmp
xchg
bound
ret
(bad)
sahf
aaa
rol
inc
jge
(bad)
ja
jae
jmp
mov
and
adc
sbb
repz
out
ds
push
aad
outs
push
hlt
dec
leave
arpl
add
aas
es
and
mov
xchg
(bad)
scas
mov
push
lds
xlat
sub
dec
sbb
mov
cmp
xchg
adc
fwait
(bad)
aad
add
div
bound
cmp
adc
in
imul
retf
jae
movs
ins
cmps
ins
inc
rcr
pop
sbb
(bad)
lods
mov
lock
xor
xchg
pop
add
scas
or
pusha
sti
jp
jnp
stos
test
xor
scas
(bad)
pop
pop
fcmove
pop
aaa
push
mov
fcmovnbe
test
mov
dec
and
movs
pop
test
dec
repz
xor
shl
adc
cli
mov
mov
mov
xchg
and
sbb
dec
jge
and
mov
sahf
xchg
(bad)
fild
retf
cs
adc
cmp
sub
xor
int3
cmp
je
mov
fldcw
inc
shl
mov
mov
dec
fisub
adc
stc
nop
mov
shl
shl
cmp
(bad)
fbstp
fiadd
addr16
cmovnp
cmova
lods
fidivr
sti
scas
dec
or
jnp
xor
(bad)
pop
sub
daa
(bad)
xlat
jecxz
aam
imul
cmp
mov
inc
in
aad
inc
ja
dec
repnz
add
dec
mov
or
sub
jmp
cmps
push
fist
mov
data16
fstp
jae
lock
outs
sbb
scas
shl
mov
movs
or
cmc
icebp
test
mov
fdivr
dec
push
cmp
xchg
pop
adc
test
add
ret
mov
adc
pop
cmp
div
(bad)
outs
mov
pop
sbb
dec
loope
inc
xor
cmc
fwait
xchg
std
test
mov
jmp
mov
hlt
movs
pop
fld
jb
data16
test
cmp
sbb
imul
and
and
mov
bound
arpl
pop
inc
and
sub
ja
retf
adc
and
dec
mov
mov
mov
jmp
repz
xor
pushw
jg
test
aas
cmc
(bad)
cmp
dec
ins
pusha
sub
mov
fistp
jl
xor
push
cld
and
fcmovnu
ficomp
fdivp
out
xor
out
pop
mov
xchg
rcl
mov
ror
pop
push
dec
loope
retf
mov
jne
mov
xchg
iret
mov
jnp
adc
call
retf
cdq
mov
mov
dec
xor
repz
or
jmp
cld
fsub
cli
cmps
jle
push
push
pop
arpl
or
adc
xchg
call
cmp
cwde
mov
mov
shl
inc
call
xchg
or
cmp
xor
xchg
scas
adc
jp
daa
push
xor
shr
jbe
aaa
xchg
inc
in
cs
push
and
or
mov
shl
mov
nop
jns
sbb
mov
pop
xchg
mov
add
mov
shl
jns
test
pop
in
inc
jp
shr
test
daa
push
mov
xchg
cmp
dec
mov
jl
xchg
mov
or
dec
adc
xchg
mov
mov
inc
retf
mov
test
mov
shr
pop
nop
mov
repz
and
jp
dec
mov
cmps
inc
int
jmp
cmp
js
pop
mov
loop
mov
add
or
adc
into
sbb
jle
dec
adc
jno
data16
cs
out
push
ins
cdq
cmp
ret
cmp
stos
popa
push
cdq
inc
and
inc
xchg
sar
cld
cmp
dec
call
pop
fwait
or
push
js
int
cmp
lahf
loope
test
push
or
loope
dec
outs
jg
int3
stc
adc
jbe
out
ins
mov
adc
or
sub
lock
shl
and
xor
clc
pop
mov
push
test
(bad)
push
int
cmp
scas
jmp
fst
mov
and
test
fwait
xchg
popf
cmp
mov
jle
pop
inc
push
pop
dec
iret
and
cmp
mov
lahf
stc
loope
in
test
push
out
jl
mov
inc
mov
jmp
cmp
mov
stos
xchg
leave
mov
shl
in
xor
adc
repnz
jmp
dec
mov
scas
(bad)
call
sahf
std
inc
adc
mov
retf
lahf
rcr
stc
movs
fstp
mov
sbb
inc
xchg
inc
daa
clc
xchg
dec
add
jnp
test
and
int
fs
sahf
xchg
jmp
sub
or
cmp
bound
xchg
in
test
or
mov
mov
test
in
rol
or
inc
enter
cmps
sub
mov
fist
xor
ficom
mov
in
fcomp
adc
jmp
cmc
cmc
inc
(bad)
mov
daa
jb
jmp
jnp
ins
ss
xor
and
push
mov
sbb
adc
xor
dec
sti
push
fcmovb
popa
mov
pop
out
lods
add
dec
arpl
addr16
dec
mov
jae
dec
stos
inc
adc
push
repz
pop
cmps
add
sub
or
sub
fcomp
push
cmps
jns
fcom
xchg
xchg
jo
fwait
pop
ror
retf
fcmovnbe
aad
add
pop
frstor
inc
js
aam
push
dec
xchg
cld
aam
mov
(bad)
xor
mov
inc
add
push
and
adc
cmp
stos
lock
lods
or
cwde
loop
clc
or
(bad)
xchg
or
or
mov
pop
lods
adc
jmp
fsubr
mov
mov
imul
and
mov
xchg
pop
adc
sub
mov
pop
or
xchg
mov
les
add
jp
mov
into
or
xor
dec
bnd
out
cmps
iret
xchg
jnp
(bad)
lahf
int3
test
stc
rol
loop
and
push
je
hlt
and
dec
sbb
es
je
aas
fld
enter
jmp
mov
add
mov
add
push
sbb
das
ss
out
lock
das
push
add
sbb
fdiv
cdq
ret
or
push
xlat
jo
cmp
movs
ins
pushf
fwait
into
jo
pop
pop
jmp
out
cmc
test
add
xor
push
je
sub
repnz
jmp
retf
jge
inc
cmp
jns
add
inc
or
cmps
(bad)
arpl
inc
and
sub
mov
into
lahf
mov
sbb
xor
je
mov
dec
jnp
nop
inc
mov
pop
push
sbb
adc
(bad)
dec
xchg
mov
je
push
lahf
push
test
xchg
hlt
mov
repz
sbb
adc
and
mov
out
lods
mov
rcl
fldenv
out
sbb
pop
sub
dec
jbe
mov
xor
shr
mul
cmp
ffreep
jne
mov
or
sub
xchg
push
repnz
sbb
sub
mov
xor
fs
push
rcl
and
mov
call
test
inc
call
lods
sub
mov
inc
push
mov
cmp
js
sub
cmp
pop
and
call
(bad)
loop
std
pop
out
jle
(bad)
call
adc
xchg
xchg
cmp
movs
add
loop
mov
cmp
stos
(bad)
in
test
cmp
sbb
mov
push
lock
or
adc
adc
cmps
cmp
cmp
xor
lock
mov
imul
mov
in
and
inc
xor
pop
leave
test
sbb
add
sub
pop
mov
mov
enter
movs
mov
adc
cmps
or
movs
cld
and
jle
pop
inc
xor
add
pop
pushf
pop
loopne
push
dec
es
sbb
push
int3
fild
sbb
arpl
mov
adc
in
jae
stc
and
pop
lea
js
addr16
pop
inc
js
bound
mov
sbb
push
pop
xor
add
ror
xchg
(bad)
cld
or
mov
in
add
mov
ins
inc
cmp
and
xor
lods
ficom
xchg
cmp
or
or
rcr
(bad)
jmp
dec
push
pop
test
and
ret
pop
mov
shr
and
mov
mov
jecxz
(bad)
repz
cld
call
push
cli
push
add
inc
add
jbe
ja
mov
adc
xchg
in
outs
mov
inc
jo
push
addr16
or
loop
push
pop
fild
popa
loop
cs
call
into
loope
mov
mov
popa
fisttp
cmp
pop
jge
(bad)
mov
hlt
or
mov
scas
arpl
lea
sub
retf
sub
mov
pop
fisttp
adc
xor
fs
pop
cmp
int
mov
iret
dec
aaa
shr
popf
fnsave
or
test
mov
pop
sub
das
fisttp
push
mov
loope
add
pop
fst
mov
shl
pop
aad
aad
xchg
push
fdivp
cmp
ret
add
outs
adc
fldenv
sbb
push
jae
adc
or
push
ds
inc
pop
mov
neg
cmovp
mov
ja
addr16
mov
outs
rcr
out
dec
mov
or
xor
and
mov
in
push
rol
ins
call
jno
leave
sbb
cwde
pop
cs
pop
out
out
test
sub
outs
ffreep
shl
cmp
or
cld
mov
pop
mov
clc
jl
int
push
jmp
pop
test
pop
imul
mov
cmc
add
(bad)
test
mov
ret
jnp
das
lock
repnz
sub
sbb
jmp
push
std
test
add
hlt
inc
push
push
pop
test
push
cmps
add
add
push
outs
retf
dec
and
or
std
mov
and
sti
shl
and
shl
fcmovne
push
call
daa
and
cmp
sub
mov
daa
adc
and
push
aas
loop
dec
enter
jns
push
add
push
stc
push
pop
movs
mov
out
cmp
daa
fidiv
es
add
stos
adc
jno
aaa
inc
call
in
in
outs
push
(bad)
mov
pop
add
cs
je
sbb
movhps
sub
xchg
adc
arpl
rcr
call
or
inc
stc
inc
out
in
and
jecxz
imul
sub
inc
cmp
mov
xor
sti
retf
add
lahf
push
(bad)
cmp
and
xor
fisubr
mov
add
leave
lea
aas
mov
div
or
adc
xor
gs
sub
mov
and
lea
pop
sub
stos
pop
lock
ss
call
adc
jbe
pop
pop
cld
adc
cmp
xchg
retf
push
push
movs
inc
jmp
(bad)
repnz
fidivr
fnsave
fdiv
mov
dec
aam
cmp
mov
call
sbb
fisttp
mov
xor
dec
mov
mov
ss
imul
pusha
test
push
dec
sti
jb
rcl
and
pop
push
mov
push
push
popa
jp
movs
ins
loop
mov
inc
pop
cmps
into
sbb
inc
sbb
imul
mov
sub
lock
fnsave
jmp
into
daa
jae
iret
add
adc
push
loop
scas
js
movs
popa
push
aam
xor
push
xor
cwde
or
in
xchg
test
mov
add
inc
test
(bad)
mov
popa
cli
lahf
push
sahf
push
mov
cmp
lock
mov
cmp
cmp
in
mov
lahf
mov
or
mov
or
mov
and
ds
fcmovb
outs
das
ret
mov
or
stc
ja
fwait
push
repnz
mov
xchg
mov
test
sub
dec
fst
cmp
or
fs
and
iret
and
imul
stos
mov
mov
out
in
cmp
lock
in
pushf
cld
inc
pop
mov
hlt
bnd
adc
mov
adc
sub
xchg
fdivr
popa
and
push
adc
ret
xchg
xchg
stc
inc
inc
out
adc
lods
adc
pusha
cmps
sahf
pop
sub
pushf
inc
mov
lods
adc
push
inc
dec
call
push
xor
inc
push
bound
in
jle
jp
daa
arpl
xor
idiv
pop
icebp
cli
mov
sti
jg
dec
mov
fdiv
xor
push
jae
enter
inc
aad
aas
jb
push
jle
pushf
imul
je
xchg
(bad)
xchg
and
cwde
xchg
adc
and
xor
push
sub
and
inc
sub
popa
cmps
push
sbb
add
outs
jecxz
push
jo
stos
push
xchg
cmp
mov
test
imul
xchg
(bad)
sbb
mov
or
cmps
inc
or
add
fadd
xchg
mov
sbb
popa
jl
(bad)
cmc
xor
cmp
mov
mov
inc
cmps
shl
dec
movs
adc
fnstenv
inc
scas
jne
movs
push
sub
sti
dec
in
call
sub
shl
adc
inc
dec
mov
mov
in
lahf
icebp
sbb
pushf
push
mov
pop
ins
enter
mov
mov
(bad)
jbe
xchg
mov
xchg
sbb
pusha
clc
pop
xor
cmp
mov
dec
fdivr
imul
mov
out
or
mov
add
fidiv
cmps
sahf
clc
shr
jmp
loope
icebp
in
add
in
mov
arpl
les
xlat
and
jne
jae
xor
mov
push
jle
inc
ja
das
nop
add
pop
fwait
sub
imul
repz
dec
fdivr
sar
outs
call
icebp
retf
jg
ror
sahf
fild
cmp
mov
jp
in
lods
sti
push
xchg
rcl
and
(bad)
mov
cmp
dec
mov
repnz
sbb
fst
inc
push
cmp
movs
jl
mov
ds
retf
dec
push
aaa
or
clc
arpl
pop
adc
std
or
(bad)
ss
add
(bad)
popf
loopne
out
jne
xlat
test
xchg
xor
push
xor
(bad)
fld
cmp
fistp
ins
pop
xor
adc
retf
pop
mov
mov
add
enter
add
and
xchg
sub
in
xor
fbstp
arpl
cmp
inc
and
push
cmps
cmp
vmread
sub
jo
dec
popa
xchg
ins
push
cmp
repnz
mov
sub
add
pop
mov
xor
add
(bad)
out
dec
int
jmp
cmp
scas
cmps
les
outs
fstp
mov
push
outs
dec
je
and
xchg
jbe
mov
cmp
push
outs
mov
dec
in
xchg
dec
repnz
loope
push
sbb
mov
jnp
repz
mov
imul
inc
mov
data16
adc
imul
ds
sbb
lahf
aas
pop
rol
jp
aaa
push
sub
inc
les
adc
adc
and
sbb
jns
adc
stc
fcom
mov
loopne
std
mov
test
sbb
out
ror
or
aas
adc
cmps
xchg
mov
psubsb
pop
sbb
inc
xchg
push
sahf
push
pop
mov
add
ret
out
pop
and
dec
es
lds
mov
sbb
mov
mov
mov
mov
das
mov
test
adc
ret
push
fs
add
jo
mov
dec
es
sub
dec
pop
sbb
and
xchg
push
push
cwde
mov
shl
dec
stos
cmps
js
xchg
jae
ins
leave
cmps
leave
pop
mov
jnp
in
xlat
repz
dec
pop
inc
inc
cdq
inc
pusha
sub
(bad)
aam
adc
jo
in
aaa
dec
push
xor
dec
(bad)
movs
cdq
mov
adc
(bad)
les
lahf
cwde
or
mov
pop
jl
xor
bound
add
sub
pop
ins
push
out
pop
jecxz
shl
jno
bound
fisttp
jmp
jmp
push
push
fisubr
mov
cmps
nop
mov
jne
lods
xor
jmp
xchg
(bad)
or
std
xchg
mov
jge
adc
sbb
jmp
test
add
movs
idiv
push
js
popa
inc
lock
outs
jmp
mov
inc
inc
push
adc
in
or
arpl
ds
jge
popa
rol
or
add
into
js
add
pcmpeqd
(bad)
int3
call
dec
clc
sbb
xor
or
(bad)
div
(bad)
ja
sub
dec
xchg
and
cld
pushf
mov
cdq
cdq
xchg
fnsave
into
add
mov
out
out
movaps
cmp
fidivr
in
push
(bad)
and
ds
fsub
das
push
jno
jmp
popf
loopne
push
cmp
into
popa
sbb
jb
aaa
adc
dec
pop
sbb
lods
mov
shl
stc
cmps
lods
cmp
call
popa
xchg
mov
aam
fnsave
into
pop
out
jbe
shr
inc
out
jae
movs
sub
and
imul
enter
popa
mov
xchg
cdq
xchg
mov
retf
popa
mov
mov
sub
mov
pop
xor
pop
fwait
imul
jecxz
pop
jp
repnz
daa
adc
adc
adc
xor
jp
pop
movs
push
dec
dec
retf
sub
jnp
sbb
inc
cmp
mov
xchg
fild
sub
pop
cwde
mov
xchg
xor
es
push
adc
scas
inc
xchg
and
daa
sub
fimul
lea
sub
test
ret
enter
(bad)
pop
add
mov
push
ds
mov
pop
movs
test
mov
push
retf
adc
imul
fld
mov
cdq
push
mov
frstor
mul
imul
gs
ror
xor
lock
or
jmp
push
repz
pop
stos
mov
xchg
push
sub
nop
sbb
and
mov
sbb
adc
ds
xchg
stc
push
xor
sub
xor
jb
fwait
popf
jbe
ret
sti
mov
in
jle
xchg
(bad)
or
retf
push
repnz
or
jle
in
retf
jae
jl
out
push
pushf
sbb
stos
adc
hlt
div
inc
cs
repnz
(bad)
adc
repnz
into
cmp
sbb
cmp
dec
mov
xchg
fdivr
xor
inc
call
imul
es
jmp
push
stos
cwde
mov
arpl
jbe
pop
(bad)
retf
inc
mov
nop
les
xchg
dec
aaa
xchg
xor
add
push
pushf
push
mov
sub
sub
mov
ins
arpl
shl
jl
leave
xchg
push
js
aaa
and
xor
daa
stos
mov
mov
test
fucom
pop
xor
or
add
or
jmp
nop
cmp
arpl
or
in
mov
movs
(bad)
xchg
inc
pop
pop
cwde
loopne
lea
les
inc
and
mov
dec
adc
popf
sbb
pop
(bad)
jecxz
movs
cmp
or
and
les
fs
mov
aam
ds
test
pop
pop
mov
data16
ins
or
xchg
cmps
inc
(bad)
push
push
add
inc
cmc
dec
jbe
xor
push
not
push
or
xor
and
push
xchg
jno
daa
pop
rcr
test
outs
pushf
test
jl
pop
adc
test
push
mov
push
jle
pop
fsub
ss
iret
cmp
pop
rcr
dec
ins
mov
fsubr
cmp
loopne
add
retf
lods
nop
aad
xor
loop
test
and
cdq
dec
dec
cmp
ds
mov
add
mov
clc
outs
xchg
repz
sub
xchg
mov
jp
stc
sub
jl
sub
into
push
jmp
and
push
push
(bad)
int3
sbb
pop
ror
xchg
pop
mov
fiadd
pop
fs
outs
mov
nop
out
cs
sahf
jnp
clc
mov
out
and
ins
bnd
inc
add
fcom
lahf
sar
dec
inc
dec
cld
sub
sbb
inc
jno
test
and
pop
loopne
mov
xchg
mov
fisttp
iret
xchg
push
sar
cmp
mov
lds
mov
pusha
cmc
test
xchg
std
cwde
inc
cld
or
lods
mov
ret
stos
mov
cmp
add
ficom
dec
xchg
fnstsw
daa
out
imul
pop
xor
adc
and
mov
mov
mov
ds
leave
(bad)
loope
loop
jecxz
mov
outs
add
sbb
adc
inc
sbb
adc
test
pop
push
mov
call
mov
(bad)
clc
cwde
mov
popf
(bad)
pop
sbb
adc
adc
mov
aas
retf
outs
or
aad
das
cmp
test
stos
or
push
cld
ds
lahf
shl
inc
inc
jp
sub
mov
mov
fucomi
ins
mov
inc
popf
psrlq
sbb
repnz
xchg
stos
retf
cmp
lods
xchg
inc
adc
in
sahf
ret
cmps
je
cwde
or
call
cwde
ds
fimul
pop
or
xchg
test
pop
pop
jno
inc
rcl
dec
fldenv
cmp
mov
jb
dec
jmp
nop
lods
shl
sbb
dec
inc
retf
fstp
test
shl
xor
popa
movs
mov
jmp
in
ss
jns
push
and
mov
cmp
out
mov
int
cmp
mov
hlt
jb
or
fld
fs
adc
cmp
rcl
call
pop
sub
cdq
(bad)
jnp
into
lahf
shr
lods
mov
dec
add
mov
jno
cmp
nop
pushf
imul
jle
jecxz
jb
iret
xchg
pop
and
popf
hlt
les
inc
xchg
xchg
fst
and
sub
gs
cmp
lahf
xchg
ins
mov
out
xchg
mov
cmps
out
cld
jno
jmp
neg
cmp
(bad)
je
es
sti
lahf
and
adc
cmp
lods
enter
int3
and
sbb
jg
add
sub
sub
mov
xor
rcl
add
test
aad
addr16
cmps
movs
or
mov
rcl
daa
pop
leave
and
add
dec
sbb
aas
fild
mov
xchg
lods
jo
pop
leave
in
jp
mov
ins
xor
sbb
ins
bound
sbb
out
(bad)
xlat
repz
test
outs
int
iret
add
std
or
pop
mov
mov
pop
mov
imul
push
xchg
cmp
repz
ds
mov
push
iret
cld
push
dec
push
pop
inc
es
dec
jl
push
test
mov
fcmovne
retf
mov
aas
pop
(bad)
lods
out
cmp
aaa
stos
xchg
cmp
mov
push
ss
push
mov
pop
mov
iret
sub
push
sub
pop
fadd
push
rcl
out
mov
xor
sub
or
pop
jmp
lea
pusha
xchg
pusha
jl
retf
(bad)
jmp
in
jmp
cli
call
mov
inc
or
adc
add
mov
xor
or
pop
adc
cmps
inc
mov
retf
mov
xor
xchg
fisubr
fs
add
adc
push
xlat
jae
cld
dec
(bad)
jmp
xchg
mov
sbb
mov
mov
xor
cmps
sbb
dec
add
or
shr
push
pop
sbb
xchg
jnp
pop
sub
add
pop
ds
inc
daa
je
aam
sar
in
neg
repz
je
popf
sbb
call
xchg
ds
pop
sub
mov
movs
stos
or
bound
movs
xor
dec
mov
div
push
xor
jge
or
sar
into
not
icebp
xor
push
fst
fdiv
retf
cwde
icebp
xchg
rol
add
lods
mov
xchg
jb
mov
adc
std
pop
scas
imul
aam
ret
pop
jmp
mov
jle
or
das
js
pop
(bad)
je
ret
stos
or
rcr
out
adc
sahf
and
mov
mov
iret
xor
fadd
es
fdiv
stos
stos
xchg
(bad)
xchg
movs
fdiv
inc
sbb
fsubr
in
or
xchg
(bad)
xchg
test
loopne
cmps
test
das
and
sub
inc
out
push
fadd
push
enter
xchg
das
inc
ficom
(bad)
jg
test
adc
aas
movs
ins
add
xchg
cld
mov
dec
ds
cmp
mov
mov
dec
mov
outs
cmp
sti
mov
dec
fisub
and
add
and
push
std
and
push
push
inc
fisub
xor
mov
sbb
(bad)
sti
in
stos
mov
icebp
sbb
inc
fidiv
fld
pop
dec
mov
xchg
movs
pop
mov
ror
push
mov
fisttp
test
adc
mov
or
retf
push
stos
in
mul
retf
jbe
hlt
scas
inc
push
sbb
xchg
stos
mov
xchg
xchg
in
or
es
cld
sbb
mov
outs
and
nop
add
xchg
bound
push
test
inc
sub
sar
or
sbb
push
pop
jne
aad
sub
jecxz
mov
lock
clc
pop
add
ss
push
or
xchg
arpl
cmps
fs
retf
fidiv
sbb
inc
imul
cmc
mov
fisub
cmp
std
out
cli
scas
test
mov
(bad)
cmps
adc
in
push
adc
movs
out
adc
test
sbb
call
push
push
xchg
js
sbb
cdq
sbb
cs
mov
stc
test
xchg
push
stos
mov
mov
push
add
call
retf
das
daa
mov
sub
xchg
add
pop
xchg
es
popa
pop
imul
dec
mov
adc
daa
pop
dec
mov
repz
jb
loopne
xlat
mov
xor
jle
and
int
sti
jecxz
outs
cmp
and
mov
in
call
sahf
lods
xor
(bad)
sub
ss
jo
xchg
push
shl
test
push
retf
loop
xchg
or
xchg
push
lds
out
aaa
mov
and
out
mov
xlat
pop
test
xchg
sub
adc
test
jae
dec
repz
js
sub
cmp
shr
dec
mov
mov
add
pop
sub
mov
mov
jge
xor
mov
dec
movs
pop
daa
dec
sbb
in
or
mov
lds
inc
mov
jle
mov
dec
imul
sti
add
push
push
xor
retf
xchg
jge
imul
inc
inc
cmp
jae
cmp
jns
jae
and
xlat
sar
sbb
xlat
push
stos
aaa
jns
sbb
mov
inc
int
cmp
inc
aas
sahf
or
or
cmp
jp
push
retf
not
cmp
push
ds
in
dec
je
or
fsubp
mov
xchg
in
outs
mov
(bad)
adc
dec
dec
cmp
sbb
and
(bad)
lds
and
lods
hlt
icebp
sti
xchg
je
xlat
fadd
mov
mov
les
jb
out
mov
ja
xchg
pusha
mov
lock
call
jg
or
lds
sbb
jns
xor
inc
loopne
pop
adc
sbb
push
call
mov
push
lea
and
adc
dec
or
ret
(bad)
popa
aas
xlat
xor
adc
mov
mov
fcomp
mov
push
push
add
enter
jne
jb
dec
ins
nop
std
aam
add
repz
jl
out
sbb
fdecstp
push
mov
mov
push
pop
xor
sub
add
push
arpl
dec
xor
push
and
push
xor
in
mov
pushf
(bad)
or
jl
(bad)
leave
sub
fcomp
xchg
inc
pop
daa
mov
adc
daa
jge
ror
xchg
in
sub
xlat
push
xchg
xchg
loop
sub
cmc
lea
in
retf
mov
push
adc
xchg
pop
sbb
imul
out
mov
add
loope
jae
mov
mov
cmp
arpl
xchg
mov
jbe
fprem1
push
cdq
(bad)
jae
cmp
leave
leave
mov
repnz
out
cmp
sub
xchg
jmp
push
jno
retf
push
retf
push
rcr
push
add
jbe
pop
imul
rol
mov
mov
mov
xchg
pop
xor
fild
adc
cwde
jle
dec
sbb
dec
popf
pop
in
popa
mov
inc
sahf
cli
xchg
aam
sub
ret
mov
and
adc
rcl
rcr
mov
pusha
cmp
adc
scas
imul
inc
arpl
inc
loope
mov
call
(bad)
aas
xor
je
or
adc
ins
in
mov
add
push
or
into
stos
mov
sbb
mov
js
or
popa
movs
pusha
jb
ret
and
pop
sub
stos
jge
aaa
bound
int
mov
retf
mov
and
xor
cld
sub
adc
dec
sub
mov
push
imul
inc
aas
inc
jns
cmp
lahf
and
inc
adc
inc
movs
push
gs
mov
(bad)
fldenv
(bad)
cmp
int3
sbb
test
dec
dec
out
jnp
cmps
or
fisttp
pop
dec
not
inc
pop
out
xor
adc
in
cmp
(bad)
add
sbb
lahf
mov
aam
bound
jp
aaa
jp
and
adc
iret
sub
push
(bad)
mov
out
fprem1
jp
and
jmp
inc
mov
mov
push
xchg
dec
retf
cmp
mov
and
push
mov
mov
xchg
imul
aad
ja
xchg
rol
les
mov
sub
fs
sbb
sbb
jno
add
shl
jno
lahf
cmp
lahf
pop
pop
adc
and
(bad)
fucompp
shl
loop
mov
ss
ss
scas
neg
push
xchg
mov
pop
int
mov
sbb
xor
imul
retf
inc
dec
dec
imul
and
xchg
mov
add
jo
(bad)
je
fsubr
aaa
jae
push
xchg
mov
jne
sub
mov
mov
inc
out
jmp
sub
mov
inc
aad
cmp
pop
or
jb
in
xchg
(bad)
sbb
xchg
fadd
cmp
cs
dec
sar
cmp
adc
jl
fisttp
adc
cmp
pop
push
sub
sbb
cmp
(bad)
stc
cmp
ds
stos
inc
cmc
cmp
cmps
out
push
jp
adc
dec
enter
xor
shl
nop
les
(bad)
jae
sub
xchg
and
add
mov
xlat
sbb
aas
inc
push
mov
(bad)
in
ss
loopne
rcl
inc
outs
xchg
es
dec
dec
outs
jge
inc
in
jae
pop
push
test
test
pop
mov
fs
mov
ins
jecxz
and
sar
dec
jnp
neg
fmul
mov
es
pop
dec
hlt
sar
adc
imul
pop
pusha
sbb
sbb
out
jecxz
aaa
ficomp
std
push
pop
ins
jb
mov
retf
lds
sub
xor
mov
push
loopne
sahf
retf
inc
out
pop
pop
ja
mov
ror
aad
adc
mov
mov
dec
leave
ret
gs
loope
clc
shr
cmp
sub
inc
pop
loop
ins
dec
je
sub
loope
stos
cwde
jle
and
jl
mov
sub
mov
cmp
call
sbb
cmc
fwait
jmp
daa
pop
out
push
jmp
cmc
jge
call
sub
inc
jns
sbb
and
imul
mov
xor
mov
pop
or
cmps
jae
int
iret
cwde
mov
(bad)
push
jmp
cmp
sbb
rcl
jg
add
cmp
ds
fsubr
aam
test
sbb
iret
aad
push
xor
movs
and
(bad)
imul
mov
pop
cmp
dec
dec
sbb
addr16
and
ins
retf
aas
rcl
(bad)
xchg
cmps
sub
ja
xor
(bad)
out
pop
test
and
cwde
dec
sahf
and
fidiv
out
xchg
sub
jge
or
mov
jecxz
cld
(bad)
sar
out
or
or
dec
jmp
or
in
mov
sbb
mov
cld
or
scas
xor
jge
pop
leave
push
test
and
ret
aam
stos
mov
bound
js
fwait
test
xchg
les
pop
addr16
lods
jl
inc
popf
cmp
inc
add
popf
lea
pushf
in
pop
xor
inc
dec
das
mov
pop
push
and
dec
add
mov
imul
fwait
jb
cmp
vmread
cld
neg
repz
les
xlat
sub
loopne
push
rol
mov
sub
loopne
pop
pop
cmp
sahf
mov
shl
jecxz
retf
inc
sahf
stos
(bad)
sbb
nop
push
xchg
rol
dec
out
add
push
dec
cwde
cld
loop
movs
and
cmps
cmp
inc
fnstcw
loopne
jae
aas
mov
mov
test
fsubrp
fisubr
mov
div
push
aam
lods
retf
out
fscale
push
fmul
pop
xor
cmp
das
jp
push
pop
or
fistp
loop
(bad)
scas
pop
stc
add
jge
dec
add
imul
cmps
jge
cmc
jne
or
xchg
inc
retf
push
cmps
mov
xchg
cmp
into
das
out
shl
jmp
or
lds
jbe
inc
je
das
push
outs
mov
fld
mov
movntps
mov
aas
leave
push
push
xchg
jmp
xor
inc
add
push
(bad)
ret
mov
sbb
imul
(bad)
jmp
xchg
es
push
(bad)
imul
and
lods
and
cwde
dec
push
leave
shr
std
jbe
fwait
mov
or
lahf
and
pusha
sbb
int3
js
jns
mov
jmp
pop
ret
push
and
push
sub
sbb
jle
(bad)
cmp
ds
cld
inc
cmp
sub
lds
aas
call
(bad)
pop
test
dec
jno
or
mov
pushf
push
jg
jns
stos
fadd
inc
scas
les
test
push
retf
jno
xor
test
xor
je
mov
push
mov
mov
mov
push
cld
mov
dec
outs
(bad)
inc
mov
push
jg
jb
cld
jmp
outs
xor
and
call
stos
fistp
lahf
outs
push
add
mov
xchg
ja
mov
iret
xchg
pop
stos
sbb
mov
sub
jno
push
mov
mov
movs
push
dec
mov
pushf
int
sub
fsubrp
shr
shl
mov
push
mov
imul
add
xor
xor
fld
jmp
loopne
mov
fadd
push
mov
and
sub
adc
int3
pop
pusha
mov
mov
lahf
jae
pop
sbb
es
(bad)
xor
add
sub
aaa
ftst
dec
addr16
retf
repnz
movs
fmul
jp
or
ss
sbb
mov
not
das
enter
in
sub
test
rcl
pop
loope
shl
outs
cmp
mov
leave
xchg
cdq
aam
shl
inc
mov
out
xchg
mov
icebp
lock
pop
outs
add
out
xchg
cs
jge
pop
pusha
sub
popa
mov
cmp
inc
fldcw
xchg
ret
or
js
mov
mov
push
lods
push
stc
pop
fwait
shr
dec
xchg
add
jmp
jmp
pop
sub
fnstsw
test
int3
add
xchg
xchg
xor
sahf
or
addr16
(bad)
jmp
xor
mov
dec
retf
sbb
call
adc
ja
sbb
sub
std
sbb
repnz
cld
xchg
addr16
sbb
cmc
das
dec
divps
fwait
aaa
imul
dec
dec
shl
cdq
jb
and
cdq
dec
jmp
icebp
xlat
fcmovbe
arpl
xchg
std
inc
pop
mov
sub
lods
cmps
pop
pop
mov
in
cmp
pushf
fild
or
jp
sub
lock
(bad)
pop
in
xchg
jmp
stc
mov
dec
pop
jbe
iret
add
and
and
and
or
fwait
rcl
inc
dec
lock
jb
(bad)
sti
ins
inc
sbb
popf
call
cmp
and
adc
int
jno
xchg
mov
sbb
add
fild
sbb
ss
ss
rol
inc
push
push
clts
das
loopne
repz
xor
sbb
and
push
bound
dec
xor
sbb
mov
mov
sub
ret
mov
pop
inc
adc
mov
call
push
push
mov
mov
sbb
int3
jle
cmc
jge
mov
lds
mov
mov
cmp
sub
xor
loopne
add
mov
pop
repz
std
mov
pop
stos
call
test
xchg
cmp
sbb
pop
arpl
mov
es
mov
and
jae
and
scas
push
arpl
(bad)
sbb
int3
inc
xchg
xchg
mov
and
inc
int3
vmovupd
inc
pop
inc
and
sub
add
sbb
push
js
jp
and
cdq
retf
retf
test
sbb
and
ret
dec
pop
xor
jecxz
cmp
add
xchg
aad
mov
dec
jnp
aam
pop
stc
lods
pop
xchg
push
push
sub
mov
fld
and
cmp
pop
retf
lock
push
inc
pop
or
pushw
fsubr
mov
cli
icebp
jo
dec
push
mov
xor
dec
out
test
push
xchg
sbb
fwait
xchg
aam
pop
sbb
or
mov
push
icebp
call
inc
arpl
pop
push
sbb
pushf
adc
jge
mov
cmc
imul
repz
lods
std
cwde
xchg
add
sbb
xchg
aam
(bad)
jge
in
call
in
nop
cwde
imul
xlat
stos
sti
mov
mov
repnz
add
mov
ins
imul
ror
jno
adc
add
int
loop
jmp
pop
inc
pop
mov
sbb
dec
bound
mov
loop
je
pop
cmp
rcr
sub
push
xchg
out
add
mov
mov
xor
cmps
shl
ficomp
pop
mov
das
rcl
sbb
cmps
iret
dec
adc
test
and
xchg
(bad)
loopne
shl
jp
js
shl
loopne
mov
idiv
jne
std
cmp
pop
jb
sahf
shr
inc
fbstp
push
mov
pusha
inc
call
push
jg
xor
popaw
sub
cmp
add
xchg
aam
inc
test
add
cs
xchg
or
inc
xchg
push
xchg
xlat
in
jl
xchg
std
jno
and
je
jmp
ja
push
mov
push
das
xor
outs
cmp
cmp
mov
cmp
ret
xor
xchg
push
rcl
sbb
dec
sbb
ins
test
mov
stc
xchg
fisub
call
pop
mov
lahf
or
pop
sub
fsubrp
cld
jecxz
sub
sbb
pusha
cmpxchg
fdivp
xchg
cmc
pop
xor
pop
push
cld
jnp
ret
xor
mov
fld1
cmps
stos
adc
cmp
leave
mov
call
popf
sub
jns
dec
xlat
ror
dec
or
jb
int3
(bad)
push
cmps
mov
sahf
sbb
(bad)
adc
xor
jmp
scas
push
xchg
fisttp
imul
arpl
lahf
push
fisttp
adc
inc
jmp
(bad)
sti
mov
test
arpl
repz
call
push
or
sub
call
inc
add
cld
loope
fmul
cmp
sub
fwait
ds
cli
jbe
or
fwait
mov
shl
sub
dec
test
sub
jb
mov
push
xor
shr
sub
fld
xor
clc
f2xm1
fmulp
xor
or
test
test
or
xor
outs
push
loope
dec
dec
push
lods
mov
sbb
fisttp
mov
push
test
mov
pop
push
into
hlt
mov
mov
retf
push
retf
mov
sub
in
fs
mov
fidivr
bound
iret
fnsave
sub
pop
xchg
pop
adc
or
data16
lea
rcr
mov
ins
je
sbb
call
cmp
test
and
aad
iret
inc
test
add
out
sbb
or
js
pop
adc
(bad)
jmp
mov
mov
adc
mov
jo
sar
jbe
adc
jmp
jae
nop
fwait
jnp
fisubr
sub
in
icebp
mov
pop
cmc
jle
jno
cmp
cmp
sub
jb
fcmove
push
xchg
jmp
ins
push
pop
movs
cwde
fidiv
popf
add
pop
xor
test
push
xchg
repnz
sub
repz
mov
and
push
aaa
sub
lods
movs
mov
mov
sub
jnp
and
xor
mov
shl
repz
sti
clc
outs
mov
test
stos
popf
or
ja
fisub
inc
mov
adc
jbe
shl
push
jnp
mov
pop
sti
sub
jecxz
lock
or
jmp
jae
ja
push
push
xchg
xor
repz
push
loope
fwait
or
nop
adc
rcr
mov
xor
loopne
xchg
fdiv
cwde
shl
mov
bswap
jno
daa
test
test
ins
bound
xor
jbe
sti
sub
mov
pop
into
jl
imul
es
aad
std
outs
and
in
fwait
aad
dec
in
and
mov
je
cmp
fidiv
pop
cmp
xchg
dec
enter
gs
xor
pop
std
test
es
fstp
(bad)
pop
clc
(bad)
cmp
jb
(bad)
jo
adc
push
sbb
jbe
pop
and
mov
sub
adc
jecxz
sahf
mov
repnz
test
push
push
int3
or
and
repz
add
xlat
or
jnp
js
lods
and
bound
popf
ss
fimul
rol
mov
jmp
cs
cmp
sub
or
test
push
icebp
sub
push
lods
call
rcl
(bad)
ret
push
xor
cld
jns
test
pop
(bad)
xchg
mov
and
addr16
dec
push
je
mov
jmp
ret
mov
mov
xor
fmul
lods
pushf
bound
inc
adc
sti
mov
shl
xlat
sbb
sti
fwait
ret
mov
enter
das
int3
or
out
jecxz
inc
sub
pop
xchg
pop
in
jae
cs
loopne
inc
dec
adc
add
sub
mov
pop
push
loop
pop
movs
mov
mov
inc
mov
inc
add
push
push
rcl
mov
sti
jb
stos
ins
inc
xchg
repz
clc
not
pop
aas
adc
sbb
pop
push
sbb
and
cld
cdq
icebp
push
xlat
outs
adc
aad
ja
test
movs
call
inc
mov
push
push
pop
mov
jg
aas
inc
aad
outs
push
pushf
popa
iret
mov
sub
das
cmp
or
(bad)
sbb
jns
cli
jl
clc
fmul
push
mov
hlt
sub
mov
or
adc
cmps
mov
mov
ror
sbb
or
fmul
fldenv
in
jo
jbe
inc
cmp
jo
pop
lods
xchg
popf
fwait
xor
(bad)
movs
or
ret
icebp
stos
push
dec
mov
push
retf
cmp
out
fsub
ror
call
loop
adc
adc
ret
in
leave
popa
inc
cmps
shr
in
imul
and
xor
aad
push
jle
dec
or
test
inc
scas
test
jecxz
lods
(bad)
movs
or
shl
mov
inc
loopne
scas
int3
or
jp
jbe
mov
mov
sete
or
jbe
fsubrp
loopne
lea
cwde
int3
xor
push
(bad)
aas
jmp
nop
mov
movs
adc
sub
in
mov
das
sub
aam
mov
in
dec
enter
sub
xchg
fst
into
loop
stos
cmp
imul
or
jnp
sub
dec
fist
or
mov
pop
(bad)
jge
inc
dec
fcom
lds
mov
jns
gs
mov
lahf
cmps
push
popf
sbb
lods
push
sub
xchg
cmp
sub
rol
inc
mov
aas
xor
mov
loopne
es
inc
pop
xchg
sub
sbb
scas
scas
test
sar
call
cmp
fist
jecxz
es
jnp
outs
clc
pusha
daa
or
ja
int
jne
and
inc
std
sbb
push
pusha
inc
dec
fs
push
add
mov
cwde
lahf
push
scas
cmp
sub
jl
jne
loope
add
test
mov
push
clc
jp
xchg
inc
(bad)
icebp
test
(bad)
sahf
dec
ins
xor
faddp
dec
dec
mov
pop
jae
sbb
inc
inc
retf
sbb
sbb
repnz
icebp
outs
not
clc
in
ret
push
and
inc
dec
cwde
add
retf
inc
pop
loopne
inc
push
xchg
cmp
sub
iret
dec
in
dec
test
mov
scas
pop
inc
pop
sub
mov
jg
out
fst
ja
sbb
adc
mov
dec
scas
and
into
popf
xchg
data16
ja
dec
cmp
retf
cmp
mov
ins
daa
and
jl
movs
sahf
shl
add
push
call
scas
cld
sub
cmps
dec
mov
in
dec
out
push
in
sbb
sti
cmove
jne
mov
xor
jns
cli
push
pop
xchg
bound
(bad)
dec
repnz
add
cmp
shl
and
sbb
into
mov
aam
xchg
lock
adc
inc
neg
in
(bad)
sbb
shl
mov
pushf
mov
inc
mov
aam
aam
adc
lea
adc
inc
ins
std
cmps
mov
outs
adc
xor
push
(bad)
mov
sub
aas
in
jno
rsm
xlat
and
popa
outs
mov
in
jl
aaa
mov
gs
mov
mov
inc
movs
inc
dec
jp
stc
sti
fwait
test
lods
repnz
(bad)
scas
jecxz
xor
dec
cmps
xor
cmp
jg
(bad)
(bad)
xchg
cli
sub
or
int3
scas
div
test
lds
fs
push
jnp
and
out
lahf
xchg
sbb
or
xor
sub
jl
mov
jo
aaa
scas
popa
aaa
jae
push
inc
shl
adc
pusha
test
or
sbb
movs
sar
jecxz
and
fist
and
gs
sbb
jno
cmp
shl
add
arpl
add
loopne
repz
dec
movs
jg
cwde
and
loope
push
cmc
xchg
mov
ins
cmp
call
(bad)
into
test
js
outs
iret
mov
mov
dec
or
push
and
scas
jns
jae
mov
inc
ja
std
pop
push
movs
adc
xor
test
inc
or
and
es
mov
or
mov
std
ror
mov
fdiv
inc
movs
(bad)
sub
or
repz
nop
lea
test
cmc
js
cmp
mov
push
shl
cmp
xchg
jp
cmp
pop
stos
(bad)
fisub
sub
out
(bad)
out
je
and
adc
sub
jno
sbb
imul
aas
clc
lds
jae
fstp
mov
jmp
xor
adc
cli
mov
test
(bad)
jae
(bad)
icebp
push
repz
add
movs
in
adc
sidtd
adc
jmp
daa
or
out
out
cmp
dec
pop
cmp
std
cld
push
pop
and
je
push
ret
cmp
mov
div
pusha
stc
adc
aam
add
push
std
mov
or
mov
add
(bad)
jmp
lods
cmp
mov
lods
xchg
mov
imul
fnstcw
(bad)
xchg
pop
dec
sbb
lods
sahf
or
push
test
into
push
lods
add
popf
in
or
mov
out
fcom
xor
and
ret
sti
push
leave
je
jl
pop
sti
jbe
call
fild
add
nop
push
(bad)
jns
je
pop
cdq
test
or
push
ss
xor
ror
and
fdiv
cmp
sar
xchg
pop
cmp
jns
imul
call
fs
sbb
or
mov
mov
and
(bad)
ds
xlat
jle
shl
in
mov
lahf
cmp
gs
(bad)
nop
in
jne
fisttp
jb
ret
icebp
jo
ss
inc
fist
xchg
mov
retf
pop
jnp
loope
mov
or
mov
dec
cmp
xchg
cwde
adc
aad
sub
push
ficom
cdq
std
jge
test
push
jns
cmp
das
mov
push
fimul
adc
pusha
movq
dec
jo
xor
inc
pop
xor
je
sqrtps
pop
loop
push
aaa
sub
sahf
xor
xchg
(bad)
dec
pop
js
pop
push
dec
and
add
aam
inc
les
mov
inc
mov
fisttp
jo
test
add
adc
les
ins
nop
mov
xchg
jmp
adc
ins
mov
addr16
dec
mov
xchg
mov
ror
aad
aas
push
in
in
fnstsw
shr
pop
xor
hlt
dec
shr
pop
test
push
jge
cli
(bad)
push
movs
and
dec
jecxz
dec
add
mov
sub
sbb
(bad)
ficomp
or
hlt
cld
xor
addr16
xor
retf
cs
or
les
xchg
and
shr
jno
pop
or
addr16
sti
stos
pop
ficomp
fnstenv
call
and
icebp
adc
inc
rol
ins
ins
pop
add
jne
adc
outs
mov
in
xchg
jmp
scas
arpl
push
lahf
mov
inc
fsub
and
cmp
add
sahf
test
aas
mov
ds
push
out
dec
and
or
loope
retf
mov
out
push
sbb
sub
adc
ins
dec
xchg
mov
fdivr
data16
aad
jns
push
jno
ret
scas
stos
add
xor
sar
daa
loopne
mov
sbb
les
push
adc
dec
dec
aaa
push
and
scas
pusha
adc
(bad)
test
ss
adc
loopne
icebp
push
adc
xor
xor
mov
fdiv
and
pusha
sbb
mov
retf
jb
cld
popf
dec
cmp
mov
(bad)
cmp
push
cmp
icebp
mov
push
sbb
cmp
cmp
mov
mov
aaa
jmp
mov
and
popf
fsub
out
(bad)
xchg
adc
sar
sahf
jmp
dec
mov
retf
mov
sbb
mov
dec
call
popa
sahf
sbb
cmp
in
jmp
pop
add
add
stos
push
dec
push
push
jl
mov
cmp
(bad)
das
adc
push
push
dec
es
cmp
inc
xchg
adc
mov
jmp
call
fucomp
adc
fs
in
rcl
mov
dec
inc
jns
mov
mov
(bad)
stc
(bad)
mov
pusha
sti
mov
dec
mov
enter
push
fidiv
fnstenv
imul
mov
jmp
(bad)
out
pop
push
mov
in
es
push
es
loop
enter
sub
int
xchg
loopne
and
stos
sbb
bound
push
or
jno
adc
mov
mov
adc
mov
cmp
or
xor
cdq
js
loop
int3
iret
xchg
mov
push
add
into
arpl
pop
dec
cs
adc
dec
daa
push
mov
dec
jnp
data16
mov
pop
fbstp
pop
cmc
jecxz
call
mov
imul
dec
sbb
mov
(bad)
stos
(bad)
dec
jne
pop
mov
ins
pusha
(bad)
adc
imul
movs
push
push
mov
mov
lea
jmp
jmp
sub
test
mov
inc
popa
sbb
sub
xor
add
jmp
js
movs
gs
fst
fucomi
out
adc
dec
jne
xor
inc
(bad)
arpl
cmp
xchg
mov
xchg
sti
call
add
lds
ja
icebp
lds
xor
or
push
push
sub
and
lahf
sbb
(bad)
ins
push
push
in
dec
mov
or
xchg
xor
or
mov
xor
sub
cmp
repnz
test
les
xchg
fs
adc
dec
addr16
or
and
xor
gs
adc
cmc
mov
push
popa
pop
xchg
pop
xchg
mov
repnz
dec
push
mov
mov
pusha
mov
xchg
lds
jl
inc
out
or
add
cmps
dec
add
jae
add
repnz
not
test
cmp
dec
add
movs
mov
sub
jmp
xor
dec
or
xchg
cmps
movs
and
stos
lock
cmc
repz
in
mov
mov
mov
cmps
pusha
mov
jb
sub
add
loope
pop
dec
ffree
outs
add
enter
mov
pushf
or
out
movs
and
dec
aam
cmp
push
push
dec
jecxz
imul
cmp
fs
sbb
jno
inc
jl
push
shr
arpl
jns
mov
cli
movs
push
cwde
push
std
or
mov
fisttp
pusha
add
inc
aam
nop
jne
xchg
xor
shl
and
jl
leave
mov
push
jecxz
jnp
jg
xchg
out
loopne
xchg
or
scas
cmc
data16
mov
and
out
add
sbb
pop
or
or
mov
sbb
mov
fwait
dec
sti
xchg
bound
outs
cdq
(bad)
fadd
sbb
inc
push
sub
scas
mov
push
stos
xor
(bad)
xor
inc
mov
dec
(bad)
fistp
mov
inc
pop
call
or
les
cs
push
jle
adc
or
push
sbb
in
pop
neg
in
mov
fbstp
dec
test
fs
pushf
ds
jl
sub
or
cmp
out
sub
jae
lea
pop
push
jge
mov
rcl
movs
out
lods
fist
xor
aaa
call
mov
and
and
sub
icebp
repnz
cs
add
and
fmul
push
ret
retf
loop
add
xchg
mov
xchg
dec
fild
cwde
lods
sbb
cs
rcr
mov
dec
addr16
out
adc
fstp
jno
retf
(bad)
ss
int
jno
sbb
mov
ja
jmp
test
mov
and
mov
mov
ret
dec
mov
(bad)
imul
push
fmul
sbb
pushf
xchg
mov
rcr
fist
movs
out
test
push
iret
sahf
popa
jge
sti
out
shl
jne
aam
sbb
jnp
jecxz
mov
cs
aam
inc
pop
sbb
(bad)
mov
lods
jg
jb
loop
setb
or
repnz
mov
add
imul
popa
fs
inc
add
xlat
gs
xchg
mov
pusha
jmp
xor
ds
push
inc
daa
fsubr
lods
jbe
add
sbb
adc
shr
imul
stos
dec
sub
ror
cmps
add
enter
int3
loop
rol
jns
sub
jmp
loop
jge
ins
pop
in
leave
dec
cmp
dec
aad
mov
push
or
cwde
xchg
and
jl
jg
test
aas
dec
int
lods
test
cmps
pop
jg
cmp
into
movs
jmp
lods
sahf
and
gs
dec
pop
sbb
push
and
xor
mov
clc
ss
daa
adc
lods
jno
into
mov
dec
mov
or
test
and
je
sub
jg
cmps
mov
push
or
adc
cwde
jmp
stos
cs
push
(bad)
push
stos
xchg
pop
into
shr
in
stos
pop
inc
loopne
mov
cli
(bad)
inc
stc
inc
rcl
jge
(bad)
popa
frndint
movs
sub
dec
add
cs
fwait
cmps
or
and
inc
jge
adc
repnz
jnp
inc
loope
mov
push
les
mov
rcl
mov
in
mov
mov
test
mov
xor
mov
and
lock
xor
adc
or
jnp
mov
stc
icebp
and
cmp
les
(bad)
cmc
cmp
(bad)
mov
loopne
test
mov
int3
bound
mov
clc
jne
xchg
imul
(bad)
xchg
mov
mov
ins
ins
or
jge
mov
mov
push
dec
iret
inc
add
sbb
shr
scas
pop
dec
gs
cmp
mov
and
jmp
cmp
stc
imul
in
xchg
xor
push
lods
cmp
clc
out
pop
xchg
mov
xchg
out
das
cdq
or
pop
imul
adc
add
pop
lahf
push
cli
(bad)
jnp
outs
lods
fcmovnbe
inc
jl
arpl
stos
inc
xchg
push
popa
cmp
jecxz
les
and
popa
xchg
jns
call
dec
std
push
aad
hlt
jge
imul
mov
cmp
out
jg
adc
icebp
fdiv
xchg
loope
add
push
ret
shl
out
cmp
and
ins
add
inc
fistp
xor
and
div
push
sbb
je
jmp
mov
test
es
addr16
mov
loopne
test
xor
cmp
loope
cmp
mov
iret
(bad)
cmp
cwde
sbb
mov
movs
(bad)
rcr
add
pop
(bad)
in
stc
stos
dec
aaa
into
xlat
cmp
pop
and
add
add
dec
xchg
into
ret
test
(bad)
lods
mov
jae
(bad)
mov
add
cmp
aaa
or
aas
fdivr
xor
adc
pop
xchg
push
das
cdq
mov
push
mov
stc
adc
pusha
fiadd
xor
hlt
fldcw
test
sub
mov
and
in
dec
lahf
(bad)
push
mov
(bad)
push
and
pop
push
cli
aam
sub
jno
test
iret
inc
push
loopne
mov
(bad)
dec
pop
sub
in
cmp
out
lds
jle
imul
lock
popa
pop
es
mov
adc
mov
mov
rcpps
push
dec
jmp
dec
jmp
hlt
shr
mov
fcomp
mov
jo
sub
and
mov
push
shl
mov
popf
std
je
out
xor
push
loop
and
add
and
sub
sahf
adc
mov
ss
inc
das
xchg
lock
inc
in
imul
pop
cmc
inc
inc
lods
sub
cmps
daa
xchg
into
fs
test
test
cdq
adc
test
ret
jmp
pop
pop
xor
mov
or
push
int3
repz
cli
push
dec
das
int
sbb
xor
call
in
icebp
and
or
xor
sub
pushf
mov
je
fcmovb
aam
(bad)
cmp
fbld
push
repz
and
aam
ror
hlt
adc
dec
or
xchg
fisttp
loop
cdq
gs
and
adc
pop
adc
mov
jg
inc
or
cmps
test
adc
fisubr
jge
movs
dec
jns
rcr
in
or
cli
sar
and
push
xchg
pop
mov
ds
xchg
mov
push
cmc
pushf
les
adc
cmp
mov
sub
xchg
cmp
in
in
xor
fs
daa
(bad)
retf
xor
aad
xor
xchg
aas
lea
aam
ret
sub
std
ret
add
out
rol
out
jno
ins
cmp
ja
movs
movs
jno
xchg
xchg
sub
retf
mov
in
pop
jge
sbb
(bad)
pop
int
adc
pop
push
rcr
fsubr
aad
mov
sub
cmps
jb
nop
enter
cmp
jmp
mov
bound
cmp
and
sub
mov
aad
pop
fild
(bad)
jmp
cmc
jmp
mov
shl
test
iret
pusha
loope
mov
add
(bad)
sti
dec
pop
sar
scas
dec
xchg
(bad)
bnd
(bad)
mov
push
sub
pop
mov
rcl
inc
loope
and
std
(bad)
icebp
add
adc
pop
pop
xchg
mov
aam
xchg
jmp
(bad)
das
(bad)
jno
lock
dec
test
sub
call
sbb
sbb
add
fldenv
pop
test
push
popa
and
ror
dec
dec
adc
jg
scas
(bad)
mov
lds
ret
cmp
inc
mov
jp
or
cmp
mov
lods
movs
inc
cmc
sbb
adc
adc
out
ror
idiv
add
(bad)
dec
add
daa
pushf
imul
test
dec
dec
hlt
add
int
jae
retf
(bad)
xor
cmova
aad
or
xor
xchg
ret
mov
pop
icebp
push
add
imul
jae
jne
loope
test
paddd
and
inc
inc
add
mov
pop
mov
into
mov
std
and
test
jne
(bad)
mov
xlat
dec
jecxz
(bad)
bound
fld
jge
adc
add
xchg
cwde
mov
xor
add
rol
mov
mov
inc
jbe
aas
dec
push
cs
pop
imul
ret
mov
jbe
xchg
xchg
les
jo
cwde
ret
pop
or
xor
jns
int
inc
mov
lock
cmps
mov
xor
add
fisttp
arpl
cmp
jl
adc
xchg
popf
test
leave
fiadd
adc
push
or
(bad)
popf
(bad)
push
fmul
into
arpl
nop
adc
fwait
mov
cmps
mov
std
jno
xor
mov
cmp
(bad)
(bad)
out
test
test
mov
add
std
adc
push
outs
fmul
gs
dec
pop
cdq
mov
es
rcr
inc
out
sbb
sahf
pop
shr
gs
or
gs
out
push
push
mov
js
push
jmp
sbb
xor
add
add
sti
xchg
enter
(bad)
ins
inc
mov
mov
sub
or
sahf
jecxz
ins
enter
arpl
inc
cwde
push
cmp
or
sub
push
imul
xchg
dec
popf
in
jp
mov
repnz
addr16
xor
daa
popa
nop
inc
add
jp
and
movs
loopne
mov
sub
cmps
fucomp
fbld
add
add
lods
xor
mov
xor
sbb
call
ret
mov
xchg
jmp
lods
mov
mov
and
fisttp
mov
fwait
push
sbb
push
jmp
aam
repnz
ror
xchg
pop
cli
cmp
xlat
mov
aam
aas
or
sub
cmps
mov
pop
or
call
jae
pop
sub
sub
jne
or
cli
add
mov
sar
jo
shr
ds
or
or
add
(bad)
push
mov
xor
sbb
add
retf
xchg
scas
cmp
adc
bswap
or
rol
movs
aas
push
add
bound
adc
ret
jecxz
pop
bound
push
jne
xchg
arpl
leave
sahf
push
pop
mov
sbb
jnp
push
jb
adc
bound
xor
ss
mov
or
push
aam
call
push
out
pop
out
dec
cli
mov
es
(bad)
mov
pop
popa
leave
push
xchg
mov
sti
dec
dec
add
mov
fnstcw
jecxz
jecxz
add
jb
mov
sub
pop
adc
pop
(bad)
cdq
imul
sbb
sub
aam
scas
mov
xor
dec
inc
div
xchg
jae
dec
and
scas
aaa
lea
inc
lock
or
mov
mov
dec
push
jnp
xchg
jmp
cdq
mov
inc
and
push
xor
ret
iret
cmp
hlt
je
jns
pop
mov
pop
mov
push
sub
mov
sbb
jge
or
imul
cmp
mov
xchg
xor
xor
mov
lds
cmp
test
push
jmp
xchg
int
jbe
mov
pop
in
pusha
mov
or
in
lods
inc
mov
addr16
sbb
push
xchg
add
inc
jecxz
pusha
cmps
sbb
add
jmp
mov
repnz
inc
push
or
pop
sti
pop
addr16
add
add
mov
and
and
pop
mov
lods
lods
sub
test
nop
in
(bad)
lods
mov
and
inc
xchg
add
fist
aaa
xchg
inc
push
dec
xchg
call
leave
mov
in
add
mov
mov
ds
pop
mov
addr16
sub
add
scas
push
mov
movs
xchg
dec
pusha
mov
fs
inc
jae
mov
dec
sub
iret
fld1
or
stos
adc
mov
jge
addr16
aad
pop
pop
jmp
mov
xchg
mov
nop
jb
jmp
sub
fst
out
sahf
fst
or
pop
shl
add
mov
loop
shl
mov
pop
lds
cmp
dec
add
retf
sbb
nop
out
in
cli
xor
lods
mov
ins
xchg
push
out
ret
push
in
xor
cmps
cmp
stc
inc
(bad)
in
dec
mov
fdiv
jne
in
je
and
pop
out
mov
shl
test
fadd
fnstcw
mov
dec
stos
inc
stos
int
push
mov
or
aas
or
add
dec
mov
test
mov
icebp
leave
shl
mov
xchg
not
sbb
mov
or
fadd
inc
xor
push
fsubr
test
sub
mov
adc
arpl
and
dec
shr
cmps
shl
inc
bnd
inc
lahf
mov
mov
and
nop
xchg
in
mov
pop
sar
(bad)
lahf
bound
add
mov
rcl
sbb
dec
dec
mov
adc
xchg
adc
and
inc
mov
and
fwait
and
and
push
les
(bad)
dec
inc
cs
jbe
popa
mov
cmp
xchg
mov
mov
add
in
das
or
lods
cs
add
int
or
xchg
jp
out
fwait
sbb
stos
movs
sub
sar
clc
push
cli
xor
mov
repnz
sub
push
sbb
inc
int
enter
lock
loopne
xchg
and
lea
pop
into
mov
or
ins
mov
pop
pop
fld
pushf
jge
sbb
xor
adc
int
stc
sub
pop
jl
mov
ret
inc
loope
icebp
fistp
cdq
test
sahf
add
pop
inc
inc
popa
cmp
jmp
mov
(bad)
aam
xchg
jb
mov
mov
adc
hlt
adc
jg
add
mov
fs
cmp
sahf
jecxz
mov
icebp
sbb
(bad)
mov
push
(bad)
xlat
jge
jmp
sbb
fsincos
stc
enter
adc
test
xor
mov
mov
(bad)
pminub
pop
cs
cmp
pop
mov
scas
in
out
dec
xchg
lock
addr16
mov
push
and
xor
add
adc
xor
pushf
mov
push
int3
add
push
in
sub
mov
mov
xor
cmp
in
mov
inc
imul
in
(bad)
add
sub
mov
adc
or
call
cmp
dec
pop
(bad)
rcr
cmp
dec
mov
dec
jne
push
out
jmp
mov
icebp
xlat
pop
pop
das
scas
in
dec
dec
repz
adc
enter
inc
sahf
retf
arpl
push
cmp
pusha
(bad)
daa
scas
xor
add
je
mov
cmps
jecxz
inc
mov
and
sub
aas
add
cdq
and
jge
xchg
mov
or
ss
mov
lea
xchg
jl
rcl
test
adc
mov
loope
data16
xchg
jle
mov
rcl
in
clc
xchg
out
mov
retf
cmp
movs
jmp
out
inc
int3
adc
jne
add
mov
mov
jl
inc
dec
lods
jo
jo
sub
pop
(bad)
in
out
stc
dec
out
cmps
and
imul
adc
cmp
ret
or
jmp
loope
movs
shl
data16
mov
ja
sbb
int
jno
fsubr
mov
mov
std
outs
mov
lods
and
mov
scas
and
dec
pusha
or
dec
shr
scas
icebp
int3
and
in
or
xchg
xor
and
pop
repnz
pop
(bad)
fiadd
lock
imul
dec
mov
scas
popf
or
test
cmp
pop
fisubr
int3
fst
ror
(bad)
imul
jo
lea
add
aad
arpl
sbb
and
xor
pop
mov
ds
pop
jmp
mov
jp
xchg
pushf
mov
lds
xchg
push
mov
add
aaa
push
push
dec
jle
pop
movzx
add
push
int
cmc
stos
inc
or
enter
sub
aam
or
dec
pop
or
les
and
sub
out
jg
cmp
(bad)
in
push
mov
div
mov
push
push
or
shl
add
inc
adc
push
push
mov
popf
sub
dec
mov
(bad)
sub
dec
mul
pushw
pop
push
lea
icebp
std
mov
out
es
mov
das
mov
ret
int3
pop
es
(bad)
jne
fwait
cmps
stc
and
shl
cmps
and
xor
es
push
adc
imul
in
ret
jb
cdq
push
pop
sub
pop
lahf
outs
loope
je
es
mov
mov
hlt
test
cmp
arpl
test
cmp
rol
into
jp
test
xchg
dec
mov
jg
rol
ret
push
(bad)
adc
xchg
jle
je
jnp
mov
stos
test
pop
test
and
mov
push
push
pop
loop
loop
add
int3
xchg
push
scas
and
faddp
mov
(bad)
push
test
pop
lea
ins
and
xor
(bad)
inc
dec
fwait
lahf
shr
mov
or
mov
or
iret
cmp
mov
push
sbb
(bad)
mov
ins
outs
xor
inc
mov
sbb
xchg
inc
xor
mov
imul
add
scas
les
dec
dec
cmp
inc
mov
repz
and
arpl
fisub
ficomp
dec
aaa
leave
out
stos
pop
mov
xchg
popa
adc
sbb
ds
xchg
scas
sti
stc
aas
lahf
call
mov
imul
enter
or
inc
jbe
cmp
popa
ror
and
iret
push
add
pop
and
sbb
mov
ins
retf
daa
pop
and
aaa
xchg
jg
in
jle
xor
ror
fsubr
test
das
mov
add
iret
push
fdiv
cld
mov
in
in
out
retf
popf
aam
cld
dec
dec
cli
mov
xor
adc
adc
adc
jmp
jmp
push
jge
fnstcw
sub
(bad)
popf
gs
pop
pop
(bad)
push
adc
test
push
xor
mov
ja
and
xor
clc
call
add
fisttp
stos
mov
popa
mov
hlt
mov
sub
cmp
stos
xlat
adc
or
ds
jmp
and
push
push
aam
add
call
lea
pop
push
add
jmp
(bad)
mov
pop
dec
int3
hlt
mov
fisub
inc
pop
sahf
fsubr
fnstsw
out
xlat
add
jae
fwait
jmp
push
pop
mov
pop
sbb
in
mov
sbb
iret
stos
pop
or
fistp
jle
dec
sahf
push
imul
cmp
xor
pop
(bad)
fadd
sbb
pop
xchg
pop
in
cmp
cli
sub
ins
pop
hlt
lds
in
cmc
jl
jmp
cmc
sbb
mov
mov
in
cmps
add
and
ins
shl
xchg
jp
jl
das
aad
loopne
pop
inc
sub
and
mov
ja
push
lock
in
add
nop
lahf
idiv
aaa
mov
repnz
ret
push
mov
xchg
sub
inc
push
or
xchg
ds
lock
or
mov
cdq
push
and
rcr
das
lods
and
movs
mov
pop
imul
pusha
xchg
xlat
push
mov
arpl
and
xchg
mov
imul
lods
or
xor
xchg
push
xchg
repz
icebp
call
cmp
sub
add
cs
or
fsub
int3
pop
lods
mov
cmp
sti
mov
pop
pop
sbb
and
call
cld
popf
pop
jbe
dec
fstp
ins
nop
push
pop
mov
or
pop
jg
jns
lock
cli
stos
and
pop
out
jmp
sub
mov
out
xchg
cmp
inc
int
dec
cmps
mul
pop
(bad)
sbb
or
mov
push
clc
mov
cmc
or
fwait
pop
dec
cs
iret
mov
dec
in
jnp
pop
and
sbb
test
xchg
add
call
hlt
mov
inc
adc
inc
jp
or
aad
cmp
icebp
ffreep
cmp
jmp
jns
stc
dec
inc
sub
sub
repnz
popa
inc
add
repz
xlat
xor
scas
repnz
daa
popf
dec
mov
inc
lods
rcr
cdq
cmp
into
cs
cmp
mov
mov
cmp
sti
out
jg
stos
xchg
fdiv
repnz
outs
cld
leave
lahf
sub
sub
and
out
rcl
jle
xlat
push
push
sbb
sbb
and
fiadd
mov
(bad)
icebp
xchg
enter
jmp
xchg
lods
popa
cmp
add
sbb
fild
jp
cmp
loopne
fcmovnb
pop
lea
pop
ret
(bad)
sahf
sbb
cdq
sub
pop
mov
out
fidivr
push
(bad)
mov
dec
movs
dec
xor
pusha
es
jns
popa
sub
jnp
add
jne
lds
fisttp
jl
cwde
sbb
aas
(bad)
fimul
movs
pop
sub
fisttp
jg
cwde
jle
test
xor
xor
rcr
shl
mov
xor
mov
mov
and
sar
movs
push
mov
cmp
or
call
movs
fist
jb
and
jmp
clc
hlt
add
jge
(bad)
imul
data16
inc
shl
fdivp
inc
push
sbb
cs
and
fcom
mov
stc
adc
das
sbb
fimul
mov
pop
mov
fadd
fdivr
cli
lods
lea
je
cs
sub
and
pop
add
adc
fsubr
mov
pop
jnp
hlt
shl
adc
popf
aaa
das
mov
test
mov
push
aas
sub
ins
pop
or
pop
jnp
push
and
iret
and
jb
ds
out
mov
(bad)
in
jno
mov
push
rcr
push
sub
movs
pushf
jb
sbb
lock
sbb
mov
push
sub
hlt
and
add
imul
(bad)
sqrtps
aad
sar
xor
into
sbb
jge
loop
imul
fdiv
inc
mov
pop
cmps
outs
mov
mov
add
mov
jne
mov
push
repz
dec
in
jle
lock
cli
jns
pop
in
xor
fild
xchg
add
dec
xor
inc
mov
cwde
mov
stos
out
jg
dec
call
std
out
hlt
add
popa
push
sbb
jo
fcom
add
je
mul
sbb
mov
push
sbb
popf
fdivp
push
loopne
inc
(bad)
mov
and
adc
mov
dec
inc
(bad)
gs
dec
sti
jnp
shl
sbb
js
push
push
sub
jg
add
dec
call
mov
loop
mov
mov
xchg
aam
loope
cwde
mov
test
movs
daa
fistp
and
sub
lea
out
jnp
shl
jg
cmp
mov
pop
push
sub
cmp
hlt
pusha
aas
mov
push
push
mov
dec
adc
rcl
dec
mov
add
in
mov
dec
jmp
xor
mov
sbb
aad
shl
cdq
mov
jb
dec
push
shl
cmp
mov
sub
pop
loopne
fidivr
xor
dec
sub
daa
xchg
mov
xor
out
arpl
lods
and
es
inc
xchg
or
and
aas
int3
movs
aad
or
fucomip
mov
or
mov
stc
sub
repz
clc
xor
es
xchg
inc
jo
mov
je
mov
lock
adc
cli
popf
je
mov
sti
ins
mov
fsub
mov
cmps
mov
hlt
neg
dec
jne
int3
sbb
pop
clc
call
rcr
mov
(bad)
mov
scas
bound
mov
arpl
jo
ins
test
sbb
(bad)
push
cmp
repz
cmps
mov
dec
addr16
ret
ret
sbb
popa
das
xchg
adc
cmc
xchg
push
loope
int
fsub
xchg
shl
fidiv
ins
mov
mov
cmp
inc
cmp
pop
clc
stos
push
and
push
cmp
sbb
dec
repz
popa
stc
push
mov
xor
fimul
cld
ins
aaa
push
cmps
mov
mov
dec
sub
pop
std
data16
pop
add
jne
mov
stc
or
sub
popa
stos
ins
sahf
rcr
out
int
or
jmpw
jmp
popf
test
movs
sbb
(bad)
not
ficom
lock
lahf
(bad)
jp
jmp
fcomp
add
xchg
repnz
loope
add
into
push
mov
and
sub
out
xchg
xor
push
aad
into
sbb
and
sbb
fucomip
jno
movs
cmp
xor
call
adc
cmp
xor
pop
clc
mov
mov
nop
mov
dec
lea
mov
ins
jns
push
test
clc
(bad)
xlat
(bad)
dec
mov
or
lahf
ss
mov
or
pop
pusha
js
shl
inc
lahf
xor
xchg
cli
fmul
or
push
and
(bad)
mov
repz
data16
or
jg
aad
sub
out
out
add
fstp
test
cmps
fdiv
(bad)
xchg
sub
or
dec
out
push
push
mov
mov
sub
popf
ret
cmp
mov
pop
test
pop
or
(bad)
lods
jns
inc
retf
loop
cli
ins
dec
(bad)
jae
jmp
ins
(bad)
cmp
sub
jecxz
add
fcom
sub
push
cmp
stos
push
pop
inc
out
jb
(bad)
cdq
(bad)
aaa
nop
dec
push
sub
dec
jmp
fisttp
dec
xchg
cmp
jns
pusha
pop
xchg
jno
test
in
mov
sbb
push
adc
leave
pop
jbe
jb
std
pop
push
jl
out
sub
dec
movaps
movs
inc
or
or
xchg
pop
into
fnstcw
arpl
xchg
sbb
jae
sub
mov
je
daa
into
and
mov
test
std
xor
call
packsswb
icebp
mov
inc
add
adc
push
xchg
shl
mov
imul
sub
xor
jl
mov
call
fldenv
fldcw
call
mov
movs
shl
push
test
adc
mov
sbb
pusha
ss
dec
pop
add
dec
xchg
repnz
repz
or
test
push
icebp
jb
mov
or
scas
mov
mov
outs
aad
mov
mov
jp
and
and
sub
stos
sbb
lods
sbb
enter
mov
icebp
fld
pushf
aad
movs
cdq
mov
pop
add
shl
ins
xor
jle
lods
mov
mov
jns
mov
movs
dec
bnd
jp
scas
and
js
fidiv
mov
nop
lock
pop
fwait
mov
mov
loop
cdq
das
mov
cs
lea
xor
dec
dec
xor
cmp
and
rol
fisubr
dec
not
call
cmp
sbb
iret
aad
cmp
into
out
fwait
add
and
add
scas
pop
sub
pop
push
iret
loope
pop
xor
jns
fist
adc
fadd
and
pop
push
fist
mov
inc
sbb
mov
mov
movs
mov
ja
pop
aas
or
xchg
cli
ficomp
xchg
sub
xchg
inc
cs
mov
mov
cmc
sub
addr16
inc
add
in
cmp
xlat
mov
push
lods
rcr
dec
lock
jecxz
ret
dec
jo
mov
dec
pusha
jb
lods
mov
add
cwde
test
pop
shl
fist
jecxz
push
inc
outs
xchg
movs
mov
pop
mov
pop
pop
mov
mov
ins
cmp
push
mov
cmp
outs
daa
sub
nop
dec
and
rcr
push
into
xor
cli
xor
les
xor
mov
adc
lock
daa
xchg
stos
loop
into
push
mov
mov
js
aas
test
add
xor
fmulp
mov
mov
lods
pop
das
sub
mov
js
sbb
sub
adc
out
icebp
sub
daa
adc
leave
push
out
mov
fimul
mov
mov
mov
or
mov
xor
mov
xchg
not
mov
dec
mov
adc
lahf
sti
fcom
pop
aad
xchg
mov
dec
movs
cli
dec
mov
outs
(bad)
movs
xor
repnz
mov
jnp
push
(bad)
jge
aaa
fisubr
adc
les
dec
xor
arpl
sti
jp
jmp
mov
ins
movs
hlt
sbb
xchg
data16
ins
jns
(bad)
fidivr
in
jp
mov
into
sub
imul
mov
(bad)
call
or
jbe
and
in
enter
sbb
mov
mov
mov
inc
cwde
in
mov
and
outs
sbb
jbe
nop
xchg
cmp
mov
loop
push
int
or
mov
(bad)
mov
and
mov
test
xor
or
js
jecxz
push
pop
inc
sub
in
arpl
pop
pop
mov
jmp
sbb
gs
jmp
stos
ret
and
xor
pop
dec
mov
sti
sbb
div
(bad)
jecxz
test
out
xor
xchg
clc
jne
(bad)
stc
out
or
loope
jns
test
div
icebp
jecxz
lods
(bad)
repnz
ss
add
cwde
mov
xor
repz
ds
add
push
xor
jmp
fnsave
cmps
push
push
mov
icebp
ret
sub
or
out
cmp
push
cld
pushf
fcomp
jecxz
add
cmp
and
mov
xchg
adc
sub
or
pop
ficom
add
mov
lods
fcmovne
ret
jmp
fistp
lods
or
hlt
jno
push
clc
mov
xor
adc
ss
xchg
jg
add
push
imul
es
ins
cwde
ss
loop
and
imul
fsin
retf
inc
jmp
mov
dec
mov
mov
imul
int3
and
fnstenv
sub
pop
ror
ins
cli
adc
xor
push
int3
loopne
lods
js
pop
sbb
sub
outs
ja
aaa
int3
mov
cli
mov
pop
(bad)
xchg
add
cmp
aas
shl
movs
mov
add
push
mov
aas
add
inc
fadd
pop
mov
add
cdq
call
mov
xor
xor
in
pop
aam
mov
cmp
add
pop
xchg
dec
jp
sbb
fsubr
push
inc
xchg
push
cdq
jl
outs
mov
in
jmp
pushf
push
sub
pop
enter
jbe
mov
mov
out
pop
js
sbb
sub
int3
or
aad
cmps
or
jbe
sti
not
cmp
mov
pop
jne
xchg
js
rcr
mov
nop
rcr
and
xchg
into
in
aam
mov
mov
inc
into
push
test
ror
push
and
sub
mov
xchg
xor
push
stos
retf
mov
jmp
mov
cmps
in
nop
inc
mov
in
int3
or
out
fnsave
(bad)
jnp
push
(bad)
enter
dec
imul
sbb
jo
adc
push
mov
sbb
outs
mov
sub
test
syscall
and
das
jmp
shr
jbe
xor
jecxz
cmp
mov
pop
mov
ins
mov
loopne
sub
les
rol
push
(bad)
sbb
ins
jbe
jne
gs
sub
xchg
ds
sbb
sub
and
adc
popf
loope
inc
cmps
cmp
gs
dec
jmp
add
sbb
(bad)
and
test
inc
arpl
fmul
scas
int3
xchg
shl
jle
dec
inc
sub
sbb
sbb
div
inc
mov
xchg
pushf
cdq
sub
jnp
out
fdivr
hlt
into
push
jns
sbb
inc
jnp
xchg
add
pop
jmp
std
mov
mov
iret
(bad)
les
inc
mov
fistp
mov
in
mov
je
addr16
fistp
pop
sub
enter
pop
sbb
rcr
pop
jmp
pop
stos
pop
fisub
sahf
pop
push
fist
(bad)
push
jmp
pop
cwde
sbb
and
push
push
push
aad
push
xor
cmp
pop
dec
fstp
(bad)
fimul
mov
ror
push
in
xlat
rcr
stos
test
call
int
imul
or
retf
inc
mov
cld
xchg
push
(bad)
xchg
or
std
xchg
jns
retf
fimul
push
pop
out
mov
stos
nop
mov
mov
test
adc
in
das
xchg
retf
(bad)
rcr
push
stc
(bad)
addr16
outs
das
mov
mov
pop
add
ja
pop
xchg
inc
jno
ror
movs
lock
call
push
dec
inc
pop
add
test
aas
lds
cdq
jge
xor
dec
loopne
lahf
xor
int
push
dec
les
aaa
pop
mov
adc
xor
call
push
xor
cmp
arpl
icebp
adc
ins
in
ret
test
mov
mov
mov
sbb
inc
xor
sub
jle
pop
pop
daa
pop
cli
or
sar
add
and
iret
mov
in
outs
sub
mov
fs
or
popa
xchg
sbb
ror
adc
leave
mov
inc
pop
arpl
xor
frstor
adc
ret
(bad)
gs
inc
xchg
inc
dec
add
xlat
test
imul
test
push
das
scas
(bad)
clc
lock
sbb
sbb
adc
mov
repz
push
and
jbe
pop
lds
loopne
adc
push
dec
dec
dec
ss
xchg
adc
add
adc
ja
cmc
adc
mov
push
or
fiadd
inc
add
jge
(bad)
data16
out
add
pop
push
mov
xor
stos
xor
push
or
rol
aas
mov
jmp
es
in
xchg
push
nop
add
js
xchg
adc
retf
sbb
sub
add
sahf
call
xor
and
addr16
xchg
jb
(bad)
cmps
sub
jmp
jp
imul
inc
xchg
and
xchg
cld
idiv
lea
popf
(bad)
push
jns
and
jnp
or
adc
mov
adc
sbb
mov
adc
popa
xor
dec
stos
mov
mov
mov
jg
and
ins
scas
mov
adc
sar
das
enter
cwde
aaa
mov
and
lea
inc
leave
push
mov
in
and
dec
mov
dec
test
int
add
lahf
adc
jle
out
sar
xor
inc
mov
lea
(bad)
fdiv
jl
outs
jmp
push
es
push
js
jno
add
add
fistp
inc
mov
mov
movs
xor
jg
jp
out
mov
sbb
in
(bad)
call
xchg
in
jp
mov
cmp
test
sub
js
jmp
xchg
call
imul
mov
xchg
jno
(bad)
adc
cmps
out
xor
dec
stos
loope
cmp
cmp
sbb
inc
mov
push
mov
sbb
daa
in
mov
adc
xor
dec
mov
mov
or
dec
lods
int3
sub
mov
add
leave
sbb
ss
dec
repnz
mov
jmp
xor
mov
out
ss
xor
adc
hlt
addr16
xlat
shl
call
test
hlt
mov
fst
inc
daa
ficom
lock
pop
push
data16
push
push
push
xor
ror
push
jmp
call
loop
and
or
pop
mov
pushf
cmp
aaa
pop
test
lods
xchg
aad
icebp
je
retf
pop
bound
int
jbe
(bad)
lahf
adc
add
dec
xor
fwait
jb
ss
mov
mov
ja
retf
test
popf
cdq
mov
mov
or
ret
push
hlt
add
ja
call
call
pop
cli
(bad)
fwait
pop
and
das
jecxz
in
adc
shl
pop
in
jmp
sub
mov
jmp
out
ret
xor
push
in
xchg
call
fiadd
mov
mov
inc
sti
push
inc
mov
adc
xchg
or
(bad)
jmp
push
in
aam
mov
sub
xchg
shrd
add
and
inc
arpl
add
in
inc
xchg
dec
push
test
push
jge
aad
push
ret
jle
(bad)
and
ret
add
mov
(bad)
mov
int
fmul
add
or
push
cmps
repnz
pop
scas
dec
xor
ja
cmp
loop
(bad)
jb
sbb
pop
ror
adc
lock
lods
into
dec
inc
nop
jg
jb
adc
ins
xor
int3
inc
cmp
dec
pop
in
inc
clc
out
lods
add
sbb
push
push
jmp
out
mov
xlat
sbb
inc
pop
push
inc
jmp
mov
inc
in
mov
jb
xchg
ins
les
dec
sahf
sbb
ins
imul
sub
sub
sbb
xchg
pop
add
fild
xchg
or
and
lock
lahf
pop
lods
test
add
and
rol
mov
aas
das
fcomp
jb
or
pop
mov
iret
sub
ins
(bad)
out
fsubr
mov
loope
pop
neg
in
push
push
xchg
mov
jmp
in
xchg
aam
cmps
in
js
jle
dec
sbb
mov
push
(bad)
pop
xchg
push
leave
pop
rol
test
loope
fs
cmp
ja
lods
push
cmc
or
or
and
jp
arpl
jp
fwait
lahf
jnp
scas
push
data16
add
mov
sbb
repnz
ja
jecxz
ror
push
xor
icebp
add
push
mov
push
cdq
mov
cdq
lds
sbb
and
xor
std
retf
hlt
data16
cs
std
retf
addr16
es
int
dec
imul
mov
xor
out
enter
clc
inc
nop
sbb
cmp
sbb
push
jge
imul
das
mov
fistp
push
aaa
jmp
fucom
xor
movs
sub
xchg
cmps
or
pushf
pop
mov
sub
xchg
js
in
fst
pop
sbb
mov
ret
pusha
jno
retf
adc
xor
mov
inc
adc
in
mov
xchg
addr16
pop
(bad)
pop
test
lock
syscall
test
int3
and
je
adc
aas
jns
push
sahf
add
add
jb
xlat
inc
push
out
xlat
(bad)
sbb
ss
jmp
cdq
push
fadd
mov
aas
or
in
outs
sub
pop
mov
dec
les
pop
rol
jo
stos
lea
mov
das
push
hlt
retf
imul
cdq
pop
mov
(bad)
into
imul
jne
push
cwde
out
fistp
or
jp
adc
mov
xchg
mov
aaa
in
jecxz
fcom
call
and
mov
fmul
pop
stos
scas
fs
and
cwde
inc
shr
fmul
mov
sahf
mov
add
sub
test
pop
xchg
rol
in
aam
in
out
enter
pop
mov
jno
leave
dec
pop
stos
push
sub
rcr
jge
js
xor
pop
and
dec
xor
push
mov
or
cmp
enter
int
call
test
push
repz
stc
cli
mov
rcl
cmp
jmp
xchg
sub
mov
mov
xor
fnstenv
mov
mov
icebp
sub
fild
xchg
ss
mov
jl
inc
loopne
adc
neg
mov
jmp
and
dec
inc
or
repz
mov
add
mov
dec
or
pop
not
test
in
cmp
cmp
pop
sbb
cmp
or
loopne
movs
xlat
cmp
adc
aam
push
jbe
jo
bnd
push
das
popa
pop
mov
ror
or
sub
dec
iret
sbb
and
into
std
imul
pop
jp
pop
xchg
jno
sub
cdq
sbb
cmp
test
mov
sbb
cmp
inc
cs
xchg
xchg
mov
sub
loopne
mov
add
out
fidivr
xchg
ret
lds
shr
pop
ficom
sahf
or
mov
aas
ja
mov
imul
pushf
inc
fmul
je
and
push
ror
lea
ret
movups
pop
pop
stos
mov
fldcw
fwait
add
int
jnp
dec
xlat
push
addr16
clc
fcmovu
fiadd
adc
jb
fisttp
pop
call
or
mov
sahf
cdq
int3
xor
fnstsw
mov
call
je
ja
and
mov
mov
mov
aas
dec
dec
mov
and
sub
inc
mov
imul
or
mov
cdq
stc
outs
inc
loop
xor
xchg
nop
push
popf
ds
inc
sbb
jb
xchg
(bad)
push
hlt
add
sahf
dec
sbb
(bad)
in
inc
les
pop
and
imul
setno
in
or
sbb
mov
mov
xchg
movs
aad
sbb
stc
xchg
lock
shl
mov
jo
cld
js
enter
rol
ror
and
xchg
pop
in
pop
add
xor
jmp
lods
xor
mov
mov
xchg
call
outs
icebp
jns
dec
dec
in
xor
in
and
imul
fimul
and
popf
push
pushf
lock
leave
ins
adc
mov
xchg
sub
loop
jecxz
add
sti
loop
leave
in
adc
cwde
fsub
loop
das
ret
stc
cmc
shr
mov
mov
cld
mov
cdq
mov
mov
inc
sbb
mov
inc
es
cmp
sub
frstor
cmp
out
into
jmp
daa
pop
out
sub
jno
int3
or
sub
rol
jno
out
pop
nop
test
js
call
adc
push
cwde
idiv
sbb
pop
adc
mov
popf
lahf
ins
or
jbe
enter
lds
push
ret
dec
jo
jnp
and
mov
inc
sub
inc
jno
cmp
call
mov
into
cmp
test
and
shr
leave
xor
mul
jbe
jmp
test
les
mov
jecxz
in
sbb
dec
sub
sub
repz
xor
jae
(bad)
push
push
rol
fistp
aad
mov
imul
add
sub
adc
jecxz
mov
sar
cli
mov
pop
in
jge
dec
mov
sbb
enter
add
sbb
or
inc
push
push
sar
jp
add
sbb
pop
loop
mov
sahf
or
push
scas
pop
dec
push
mov
adc
dec
inc
js
dec
dec
xchg
(bad)
adc
sbb
jae
es
(bad)
mov
and
pmaddwd
es
pop
aam
and
dec
sub
mov
in
adc
sbb
aas
xor
leave
push
pop
xor
cmp
dec
cld
icebp
sbb
mov
cwde
cdq
call
sbb
pop
pop
cmp
mov
ret
sub
jno
mov
(bad)
cmp
and
fnsave
pop
xor
jg
or
mov
adc
xor
push
mov
cli
and
(bad)
aas
mov
adc
test
push
mov
xchg
ror
je
xchg
repnz
repz
neg
rol
xor
push
cmp
inc
ins
repz
adc
cli
fst
test
retf
mov
mov
cli
fnsave
fld
cmc
mov
fs
xchg
jg
shl
sub
cmps
out
repz
adc
imul
push
push
jb
mov
xor
inc
inc
pushf
cs
add
mov
inc
icebp
sbb
ror
ficom
add
cmp
es
call
cmp
mov
add
out
test
into
push
call
lahf
cs
cld
xor
lahf
in
in
jb
(bad)
mov
cli
add
push
enter
lods
clc
movs
adc
aaa
sbb
sub
in
(bad)
cwde
imul
jno
test
jmp
in
sbb
fcomp
xchg
daa
and
fsubr
out
add
(bad)
shl
loopne
(bad)
ins
push
mov
xor
pop
or
dec
popa
ret
aas
or
adc
icebp
adc
sub
aaa
sti
ds
lea
retf
scas
icebp
xchg
jmp
and
in
in
adc
dec
dec
iret
aad
ffree
sbb
or
js
imul
mov
fbstp
sahf
sub
aam
pmulhuw
(bad)
push
loope
mov
cmp
add
add
lods
and
dec
out
mov
(bad)
enter
mov
pop
popa
push
jno
add
fldcw
xor
outs
iret
imul
test
mov
in
mov
jae
jmp
or
retf
call
outs
jbe
clc
js
ja
pusha
mov
or
pop
unpckhps
fsubr
add
pop
movs
in
outs
mov
add
ins
stos
pop
inc
(bad)
ins
mov
jb
aas
add
mov
lock
inc
or
mov
add
loope
lahf
fsubr
mov
lea
inc
and
pop
or
or
fwait
add
pop
out
jmp
imul
jp
cmp
std
ret
mov
cmp
fidivr
jb
xchg
loope
push
or
pop
(bad)
and
sahf
sbb
push
ret
adc
mov
mov
or
push
xchg
mov
add
dec
jno
or
jle
push
pop
sbb
push
mov
es
xchg
in
ins
lea
lods
inc
inc
or
mov
ror
fist
lds
xchg
popa
data16
icebp
pop
repnz
cdq
inc
popa
pop
pop
pop
sbb
push
or
adc
repz
sub
shl
in
pop
and
aaa
xchg
xchg
sub
jns
sub
scas
into
add
in
mov
push
ror
dec
fsub
mov
cmp
mov
pop
ins
js
fcomp
pop
push
unpcklps
sahf
add
mov
add
(bad)
pop
jo
pop
pop
fdiv
movs
repz
cmp
cmp
icebp
adc
fcom
jl
xor
pusha
imul
rcr
or
mov
iret
js
or
jne
dec
pop
(bad)
es
std
ret
sahf
ret
mov
cs
pop
ins
das
xchg
pop
int3
jg
jg
(bad)
pop
fcomp
push
sbb
mov
mov
fdivr
jae
pop
fwait
loopne
pop
mov
stos
lds
mov
test
ror
test
cmp
or
cmp
scas
push
push
int3
iret
or
aas
fmul
mov
pop
xor
pop
jmp
or
push
rcl
outs
mov
mov
pop
fwait
rcl
dec
repnz
popf
or
or
mov
inc
arpl
int3
sbb
jo
daa
mov
shl
mov
push
and
inc
ret
xor
cmp
(bad)
imul
inc
xchg
in
mov
sub
jmp
mov
mov
lea
lea
xor
(bad)
call
and
outs
gs
fisttp
scas
mov
call
cmp
mov
es
in
pop
and
xchg
cwde
lds
sub
cmc
xor
aas
(bad)
cld
cwde
fnsave
inc
outs
pop
and
jno
jmp
out
jle
xchg
add
lock
mov
pop
mov
xor
and
les
shr
repz
cmp
leave
dec
jae
ds
sbb
add
pusha
call
aas
jb
jns
mov
stc
xlat
(bad)
sub
lock
nop
jecxz
jnp
jle
out
xor
pop
or
lea
mov
imul
stos
and
pusha
std
mov
arpl
sbb
ins
xchg
jecxz
aad
call
inc
jbe
call
mov
lahf
mov
sub
mov
lods
and
in
mov
mov
and
push
mov
in
lock
(bad)
pop
and
or
into
or
jl
mov
adc
or
cmp
cmp
dec
or
cli
out
xor
popa
or
add
in
sti
jg
pop
sub
jle
pop
sbb
sub
cmp
dec
mov
gs
rcl
ds
inc
sbb
aam
ret
sbb
bound
(bad)
dec
jg
dec
mov
dec
or
(bad)
int3
inc
cmc
push
or
in
jp
stc
adc
stos
cli
jbe
sub
sar
sar
dec
test
jle
mov
mov
hlt
in
mov
or
and
and
aas
push
mov
ret
popf
xchg
test
mov
test
cmp
mov
xor
and
iret
push
inc
fwait
js
lds
shl
and
or
push
ret
test
aad
stos
push
fldenv
test
add
loop
data16
xchg
repnz
arpl
mov
(bad)
mov
xchg
mov
or
fldenv
retf
xchg
call
jg
mov
xchg
cmp
setg
ins
shl
or
and
rcr
jecxz
sysexit
fbstp
xchg
push
out
mov
pop
and
add
sub
aam
shl
pop
add
enter
sbb
jle
jnp
aam
mov
fadd
ds
or
imul
cmp
out
leave
push
iretw
imul
xchg
jnp
das
loope
sbb
mov
sub
push
sub
neg
inc
dec
mov
out
sbb
jb
xor
out
sbb
cdq
jge
movs
mov
adc
cmp
cwde
dec
leave
das
neg
scas
or
push
mov
mov
aam
add
xor
das
in
lods
scas
or
outs
pop
sar
ror
mov
shr
xor
and
in
or
fsubr
and
cmp
mov
test
adc
sub
or
xchg
mov
movs
mov
cs
pusha
cmp
mov
or
jnp
idiv
aas
jg
sub
jmp
je
inc
mov
je
in
shl
out
rcr
jmp
mov
inc
(bad)
fild
and
or
dec
xlat
repnz
test
pop
and
mov
ret
mov
jecxz
adc
mov
les
mov
inc
add
out
xchg
mov
and
mov
outs
popa
lock
stos
in
pop
mov
mov
jecxz
ret
and
sbb
jg
stos
jne
test
cmps
xor
into
jmp
adc
xor
cmp
int
dec
dec
adc
mov
movs
stos
pop
push
(bad)
fs
aad
les
pop
ins
dec
scas
sbb
mov
fist
fdivr
outs
ja
out
and
dec
addr16
pop
rol
or
push
xchg
rcr
cmp
into
jno
mov
scas
(bad)
sbb
and
jne
jns
scas
or
aaa
push
aas
push
sub
jle
(bad)
sub
jo
cmp
lods
lock
int3
jnp
scas
test
mov
ss
pop
mov
mov
das
jp
add
adc
imul
or
shl
outs
and
sbb
(bad)
xor
jmp
or
pop
ret
adc
mov
xchg
fisub
psraw
and
xchg
sahf
cmp
adc
cdq
int3
lahf
cmp
sbb
mov
js
cmps
mov
push
out
mov
and
aad
dec
inc
das
(bad)
xchg
inc
cmp
repz
nop
call
in
sub
sar
outs
mov
push
xchg
sbb
cmp
int
or
jecxz
push
pop
mov
aam
jne
mov
test
push
adc
jb
test
jnp
sub
adc
clc
and
xchg
test
out
jmp
sub
jns
lahf
sub
pop
mov
mov
adc
pop
test
scas
jne
jecxz
sub
test
push
in
jbe
mov
enter
ins
add
retf
pop
sbb
pop
in
xchg
jmp
xchg
xor
cmp
adc
and
mov
jne
or
xchg
popf
cmp
cmp
xor
cmp
push
pop
mov
in
ret
loop
pop
fwait
call
cmp
push
cwde
cmp
mov
mov
cmovns
xor
or
jo
and
scas
outs
dec
dec
sub
int3
pushf
cmps
retf
mov
mov
into
je
bound
sbb
xchg
sahf
stc
out
cdq
(bad)
popf
lock
dec
fbld
popa
xchg
dec
dec
cwde
aaa
outs
cdq
dec
imul
push
pushf
jnp
shl
pushf
nop
cmp
sti
mov
sbb
or
loope
(bad)
jbe
ja
or
stos
xor
in
fdivr
in
pop
hlt
xor
stos
loop
or
into
imul
xchg
jmp
daa
sub
mov
dec
add
xchg
loop
push
and
repnz
and
(bad)
push
jb
adc
div
mov
xchg
lds
push
inc
cmp
lods
mov
adc
leave
test
hlt
inc
sbb
test
mov
imul
xor
sub
dec
mov
and
dec
ins
pop
std
outs
xchg
cld
mov
cmp
xchg
push
mov
icebp
sbb
fisub
jnp
or
cmp
and
dec
call
pop
jl
js
add
pushf
xor
mov
aad
sub
adc
jnp
push
dec
fs
mov
push
jbe
iret
das
popa
arpl
sub
cmp
jmp
test
loop
xor
xchg
mov
lds
add
call
enter
jle
dec
push
ja
mov
fndisi(8087
push
fdivr
push
pop
mov
xor
and
add
fs
xor
call
push
fmul
cld
lea
bound
cmp
dec
hlt
lds
adc
inc
jns
sti
add
arpl
xchg
xor
jne
push
fisub
aaa
retf
mov
(bad)
(bad)
mov
outs
jns
add
push
in
mul
not
sahf
dec
or
mov
and
sub
add
scas
jae
out
repnz
scas
in
les
and
sub
mov
sbb
lock
xchg
mov
(bad)
loop
mul
(bad)
cmp
inc
jmp
push
mov
mov
mov
(bad)
in
pushf
fst
dec
xlat
mov
scas
jae
and
neg
push
lahf
inc
fmul
xor
(bad)
inc
push
lods
imul
sahf
sub
test
test
iret
pusha
add
adc
popa
mov
mov
rcr
outs
adc
jle
aad
sub
jl
jg
int3
inc
pop
call
cmp
mov
push
inc
dec
sbb
js
cs
popa
mov
test
xor
push
stc
lds
or
enter
sbb
sub
bound
sti
iret
adc
adc
and
test
push
in
pushf
data16
push
mov
or
xor
add
(bad)
sahf
pop
stos
test
das
and
retf
stc
addr16
into
dec
jnp
aam
gs
aad
cmp
push
sahf
xor
sti
sub
mov
arpl
sbb
cwde
mov
clc
sahf
pop
add
dec
test
out
aas
xor
push
and
(bad)
mov
add
pop
stos
fist
es
popf
or
xchg
pcmpgtd
cmp
in
mov
ret
mov
jo
push
lds
stos
rcr
ret
xchg
push
mov
sbb
dec
jae
loope
xchg
fist
or
test
dec
std
mov
dec
or
jg
in
cwde
mov
jmp
xor
retf
push
or
push
or
sbb
popa
dec
cmp
sbb
mov
pop
jp
or
cmps
sub
or
inc
mov
sub
mov
shr
and
xchg
stos
arpl
(bad)
mov
inc
pop
leave
adc
dec
(bad)
lods
mov
(bad)
cmp
test
inc
enter
add
imul
in
jge
sub
or
inc
cmp
mov
or
addr16
push
ins
mov
test
call
jae
or
dec
clc
daa
mov
jb
retf
cli
mov
jp
int3
sub
fisttp
(bad)
pop
sbb
mov
xlat
xor
pop
lock
and
pop
or
sar
inc
popf
or
mov
aad
adc
xchg
mov
clc
retf
outs
cmp
cmps
mov
push
shr
dec
jo
arpl
push
ja
retf
sub
mov
xchg
adc
add
rcr
stc
add
jmp
sete
daa
nop
jns
sti
adc
adc
shr
or
pop
mov
lahf
fs
mov
push
dec
jb
out
dec
adc
std
dec
jmp
add
inc
aaa
xor
(bad)
nop
inc
mov
pop
call
call
dec
pop
dec
stc
xchg
add
fs
pushf
int
xchg
mov
(bad)
imul
mov
xor
mov
(bad)
and
cmc
retf
inc
or
dec
xchg
jmp
sbb
in
hlt
and
movs
iret
mov
imul
cmc
dec
jns
xor
sub
call
out
xchg
cdq
hlt
adc
and
loopne
push
xor
xor
cmp
pop
into
iret
or
jmp
push
data16
nop
xor
adc
sahf
dec
adc
cld
ror
cmc
dec
dec
rol
ret
mov
stc
push
stos
pop
aas
push
or
or
xor
sti
mov
xor
addr16
push
push
cmc
xor
xor
xchg
xchg
or
mov
inc
outs
gs
ins
jl
rol
inc
xchg
sub
call
mov
or
sbb
popf
pop
cwde
shl
push
pop
push
mov
or
xchg
pushf
push
mov
rol
sar
js
add
cmp
cli
sub
xor
mov
push
xchg
adc
cdq
xchg
inc
fwait
sbb
aas
cmps
mov
inc
pop
inc
shl
pop
or
jns
daa
test
ret
cmc
sahf
pop
in
dec
adc
xchg
(bad)
push
ds
std
sbb
cdq
fimul
loope
sbb
add
adc
fist
or
cld
dec
adc
stos
arpl
icebp
loop
fadd
ror
cmp
mov
in
das
push
jmp
xor
aaa
sbb
fs
dec
lods
(bad)
push
xchg
or
rcr
in
pop
in
add
xchg
sub
aad
fwait
mov
mov
xor
outs
cld
pop
les
les
sub
(bad)
add
movs
or
jmp
arpl
fld
xor
pop
shr
sti
loop
push
mov
mov
and
jmp
pop
mul
fwait
loop
push
mov
(bad)
movs
xchg
sbb
and
out
enter
test
sti
ds
jle
movs
mov
cwde
cmp
into
sub
xor
adc
jge
add
movs
das
pusha
xor
stc
jmp
fimul
int3
dec
push
xor
das
mov
sahf
out
sub
cdq
daa
in
mov
xchg
je
fild
add
adc
fistp
retf
jne
sti
fisttp
push
ss
sbb
nop
inc
js
sub
dec
sub
or
pop
xor
data16
jl
mov
dec
mov
inc
push
cmps
mov
jl
ficom
inc
outs
in
int
or
mov
dec
(bad)
repnz
shl
(bad)
mov
int3
test
jmp
xchg
sahf
push
scas
pusha
xchg
rcr
inc
dec
sbb
pushw
pop
xor
stos
xchg
scas
xchg
jmp
cmp
test
loopne
or
adc
out
push
add
mov
stc
in
shr
mov
or
pop
dec
test
inc
mov
mov
mov
xor
add
push
movs
fst
lds
xchg
in
in
dec
mov
loop
xor
inc
jp
mov
dec
mov
adc
inc
and
nop
and
push
or
jmp
and
xchg
sbb
cld
xor
mov
ja
lods
mov
pop
xor
fadd
scas
sbb
gs
gs
std
jno
sar
sbb
mov
out
dec
ficom
mov
lea
sbb
repz
xor
mov
adc
hlt
test
fisttp
arpl
daa
in
mov
call
outs
sti
cmp
push
jp
cli
or
add
cdq
pop
outs
or
adc
outs
dec
push
ins
adc
and
cmp
xor
pusha
movs
rcr
aam
and
mov
add
pop
xchg
adc
aad
jo
fnstcw
test
lock
mov
test
mov
or
dec
outs
jns
and
into
xor
addr16
xor
mov
sbb
adc
add
rcr
aas
aam
rcr
mov
cmc
repz
xchg
sub
add
and
out
xor
test
jg
loop
mov
add
push
test
(bad)
mov
xor
xchg
pop
add
jl
mov
push
loope
mov
(bad)
into
inc
and
mov
xchg
mov
jb
retf
bound
sub
fwait
(bad)
mov
(bad)
dec
ret
jmp
cmp
adc
dec
cmps
jecxz
mov
imul
or
mov
stc
push
cdq
add
test
sub
bound
out
push
pop
xor
mov
in
je
push
jns
jno
jmp
lea
std
jg
call
and
pop
jmp
mov
loope
and
leave
lock
pop
and
or
fnstcw
repnz
ins
sub
pushf
cmp
pop
dec
dec
pop
push
fisttp
icebp
xlat
ret
inc
and
hlt
(bad)
pop
imul
jne
lock
(bad)
xlat
outs
test
jbe
xchg
test
pop
fcom
sbb
jne
inc
out
push
dec
adc
popa
pushf
jle
ja
and
xchg
pop
pop
inc
fiadd
push
daa
lods
pop
jl
mov
movs
sti
inc
bswap
movs
js
xchg
pop
je
xor
inc
add
sbb
lea
aaa
xlat
ja
test
test
jnp
fisub
call
and
int3
fwait
cmc
mov
pop
sub
cmp
adc
pushf
(bad)
cmc
nop
inc
push
dec
sub
test
push
cmps
sub
jnp
in
neg
xchg
add
inc
push
pop
dec
add
adc
or
mov
int
jbe
inc
push
sub
mov
bound
lock
movs
fwait
dec
jbe
or
jo
sbb
mov
shl
cwde
mov
pop
iret
call
fmul
in
dec
mov
dec
in
push
dec
aam
xchg
fcompp
jne
shl
call
inc
add
dec
cld
lods
adc
ficomp
out
ret
adc
dec
ret
push
xchg
test
and
xchg
jg
xchg
in
ret
adc
push
push
lds
mov
pop
dec
mov
ret
xor
stc
out
addr16
adc
loope
scas
jo
js
and
inc
cmps
das
xchg
jmp
or
mov
and
add
mov
mov
out
jmp
push
retf
movs
sub
shl
sbb
sbb
mov
fucom
iret
sub
jb
sub
dec
cld
xchg
mov
mov
pushf
or
test
lods
out
mov
fbld
cs
and
lds
(bad)
sub
jecxz
adc
xchg
(bad)
pop
xor
jns
inc
jg
jge
jecxz
(bad)
mov
scas
icebp
loopne
jb
sub
pop
out
sub
popa
mov
div
ins
push
outs
mov
push
and
pop
pop
push
mov
push
pop
call
cmps
sub
cmp
cmp
mov
mov
es
cdq
lods
hlt
mov
push
cmc
test
push
pushf
out
jmp
xor
mov
sub
call
lods
cld
loop
cmp
test
add
mov
int3
daa
jg
push
mov
jecxz
jmp
lods
mov
int
cmp
(bad)
jae
out
inc
push
add
enter
and
jno
(bad)
jbe
sbb
xchg
mov
movs
push
mov
push
(bad)
sbb
(bad)
push
int
sub
add
stos
jmp
lock
pop
mov
test
mov
shl
ss
and
pusha
or
adc
lea
pushf
(bad)
pop
mov
pop
pop
adc
add
lods
ins
mov
xchg
xchg
lods
bound
shl
iret
sahf
js
in
retf
and
mov
(bad)
pop
jae
pop
imul
div
jge
cmp
test
jmp
adc
repnz
xchg
fbld
sbb
ds
xchg
stos
rcl
adc
movs
or
inc
mov
mov
ins
xor
inc
and
jge
retf
rcr
push
jne
pop
faddp
cmp
imul
fist
adc
mov
add
jae
or
dec
mov
outs
mov
fisttp
jbe
push
imul
xchg
adc
out
cmps
in
push
mov
dec
xor
or
idiv
pop
lds
je
adc
push
nop
and
outs
in
mov
aaa
mov
retf
int
adc
cmp
mov
pusha
(bad)
in
in
dec
mov
mov
inc
add
aaa
das
jp
bound
inc
add
and
cmc
jmp
ret
cmp
cwde
pop
pop
pop
js
xor
lods
in
div
daa
sub
mov
aaa
push
test
sbb
jbe
int3
push
out
test
pcmpgtw
mov
ret
fmul
jmp
test
adc
xchg
add
mov
jns
out
and
mov
push
out
(bad)
fidiv
xchg
jecxz
xor
cwde
data16
mov
pop
cmp
xchg
popa
jnp
ret
mov
inc
call
pusha
mov
scas
push
out
loop
(bad)
mov
push
sbb
mov
xchg
arpl
out
cwde
dec
add
sub
mov
adc
retf
loopne
mov
xchg
jmp
hlt
fldenv
mov
sbb
repnz
lahf
jne
xchg
jne
fisttp
push
inc
xchg
scas
lock
xor
dec
or
mov
jg
mov
xchg
pop
or
lods
cmps
lea
fcmovne
pop
pop
pop
mov
repnz
int
push
xchg
jbe
cs
cmps
shl
jnp
pop
push
push
cmp
(bad)
add
mul
cmc
sbb
mov
inc
cmps
and
mov
xlat
(bad)
cmp
loop
test
daa
jmp
sti
push
aaa
daa
pop
push
mov
leave
xchg
fild
cmp
push
daa
mov
sub
and
sub
shr
xor
fst
mov
and
in
repnz
lods
inc
xor
or
js
shl
hlt
pop
inc
retf
inc
dec
sti
rol
xor
xchg
jmp
out
enter
retf
mov
call
inc
jbe
mov
mov
jge
add
xor
inc
add
fcom
jle
shl
jmp
or
mov
in
mov
xor
add
imul
adc
xor
xor
xor
movs
jmp
loopne
push
cmp
rol
push
lock
mov
cld
xchg
inc
mov
sub
inc
lahf
push
test
push
or
iret
xchg
rol
add
retf
call
and
jle
dec
rol
dec
mov
pop
in
pushf
in
stos
shr
pop
cmc
cmp
inc
mov
(bad)
lock
dec
jle
jae
paddsb
push
xor
mov
mov
ret
movs
mov
inc
cmp
and
pop
xchg
cs
dec
inc
adc
jne
(bad)
sbb
lock
sbb
enter
pop
out
and
push
mov
in
test
cli
repz
xor
(bad)
inc
jp
jmp
test
mov
stos
and
mov
and
in
jns
bsr
sar
out
and
or
inc
pushf
mov
sbb
(bad)
shl
dec
sar
dec
fistp
jno
pop
mov
add
sbb
das
dec
or
sar
mov
(bad)
in
out
xchg
xchg
and
out
rcl
jecxz
pop
movs
pop
jle
test
inc
push
cld
mov
jnp
ja
outs
mov
sbb
jl
fisttp
aaa
mov
pop
jns
or
cmp
ins
pop
dec
repz
cmp
jns
sbb
ds
add
sub
push
pop
jge
inc
dec
push
jge
and
out
xor
push
add
cmp
xchg
bound
push
dec
cmps
xor
and
dec
dec
xchg
mov
fst
stc
jno
jbe
js
out
aaa
inc
sbb
xchg
dec
loope
inc
sub
call
pop
ins
js
popf
jle
adc
jp
cmps
jmp
sub
add
cmp
retf
bound
mov
mov
mov
jns
retf
loop
dec
or
popf
jp
xor
pop
mov
xor
fisttp
test
push
mov
scas
das
es
shl
add
test
adc
pop
mov
jmp
push
push
adc
repnz
mov
mov
pushf
ss
adc
mov
gs
mov
add
mov
aas
cdq
clc
cmp
push
std
push
xchg
mov
pop
shl
stos
and
sar
inc
mov
in
jg
xor
adc
bound
xchg
es
sub
jo
pop
js
cwde
lock
and
xchg
cmc
arpl
and
xlat
pop
ss
jp
mov
(bad)
fiadd
cmp
(bad)
aad
inc
inc
cmp
push
sahf
popf
sahf
imul
and
mov
push
jb
push
out
je
in
rcr
in
lea
ins
sub
xchg
mov
dec
add
pop
nop
imul
inc
mov
ja
and
xchg
leave
cmp
or
dec
scas
ret
cmp
call
dec
pusha
test
push
(bad)
lock
ss
mov
test
mov
popf
cs
cdq
dec
or
pop
jl
adc
sub
stc
cli
mov
stos
retf
adc
adc
mov
nop
arpl
jmp
fmul
outs
and
xor
dec
mov
cwde
dec
leave
and
call
push
mov
add
mov
sbb
adc
scas
aas
iret
ret
xchg
fst
out
call
popf
adc
xlat
mov
dec
jmp
jmp
xchg
push
aaa
sbb
sub
dec
xchg
inc
pushf
sahf
and
adc
sbb
std
xchg
imul
jb
js
cs
sbb
jmp
adc
out
repnz
jae
sbb
dec
inc
call
shr
add
or
mov
and
mov
pop
in
and
std
call
(bad)
in
stos
jbe
sbb
sbb
lods
pop
push
cmp
scas
inc
dec
in
xlat
push
repnz
mov
movs
gs
adc
sar
popa
sbb
rcr
push
cld
cmp
bound
xchg
inc
jg
jmp
fidiv
push
mov
mov
mov
mov
add
xchg
inc
jne
dec
or
fdiv
mov
adc
lods
mov
nop
add
pop
in
shl
jp
or
xchg
sbb
and
(bad)
sti
mov
ret
xor
cwde
es
call
mov
adc
xor
jg
and
push
out
jg
scas
add
jle
cmovg
and
imul
cmp
push
out
int3
and
mov
icebp
shl
cmp
xchg
rol
cld
or
pop
cmps
jne
in
mov
sub
mov
test
jecxz
test
xor
fist
pusha
jg
pusha
xchg
pop
fwait
mov
xor
stos
js
add
dec
aas
daa
test
out
(bad)
shl
mov
pop
push
outs
ret
rcr
mov
and
sti
mov
ss
mov
sbb
ret
aas
fisttp
retf
icebp
inc
push
adc
cmp
repnz
and
mov
push
jp
adc
in
adc
xor
xor
or
ins
push
je
adc
call
psrad
push
adc
fsubr
imul
sahf
and
scas
or
ds
push
xchg
iret
in
iret
out
cmp
jmp
xchg
fiadd
lock
pop
arpl
mov
mov
inc
mov
jno
jne
out
into
cmps
ds
xor
mov
mov
(bad)
dec
pushf
(bad)
stc
ds
jge
leave
in
add
arpl
test
shl
dec
mov
jmp
add
add
repz
push
js
mov
ins
inc
sti
(bad)
hlt
test
mov
(bad)
enter
stc
call
inc
xor
in
(bad)
int3
int3
ret
cmp
jb
lahf
fist
sbb
test
repz
icebp
mov
hlt
fs
frstor
xchg
in
loope
loopne
stc
ins
xor
hlt
out
clc
and
cmp
jns
xchg
dec
aas
or
ds
pop
mov
push
inc
sbb
in
pop
clc
jle
mov
hlt
adc
mov
sbb
cmps
ins
movs
sub
dec
add
cdq
dec
or
imul
inc
and
ins
das
or
lea
push
int3
add
enter
inc
jo
lods
jle
xor
je
fmul
imul
lea
mov
mov
sbb
and
mov
mov
push
sahf
cmps
jns
mov
pop
push
push
sbb
loopne
retf
nop
das
test
cwde
loope
retf
arpl
sub
mov
les
dec
scas
aam
mov
retf
mov
add
add
cli
enter
imul
jb
mov
and
pop
mov
leave
sub
or
xchg
mov
cs
mov
dec
pusha
(bad)
xchg
inc
mov
push
jne
out
ret
push
popa
push
shl
(bad)
cmp
jecxz
aam
add
ins
cmps
sbb
mul
call
es
sub
pusha
inc
mov
or
lds
mov
mov
lods
pop
sbb
int
mov
call
mov
jecxz
jns
aas
fimul
xchg
call
add
cmp
mov
icebp
sub
aas
mov
pop
lods
cmp
shl
mov
xchg
mov
icebp
mov
js
rcr
jno
std
pop
dec
fild
popa
into
jl
pminub
loope
pop
mov
ret
in
pop
stc
cmp
dec
out
test
test
and
pushf
inc
add
test
aaa
add
inc
es
or
in
push
sbb
imul
mov
ss
in
mov
fcom
shl
test
and
push
pop
sub
pop
jo
mov
push
push
inc
cmp
inc
fmul
stc
mov
cmp
rcl
push
add
sbb
sub
mov
cmp
cmp
jp
aam
int3
repnz
daa
sahf
push
retf
cli
out
dec
or
sbb
dec
xchg
repnz
add
mov
ret
fs
add
test
out
mov
pop
mov
movs
cmp
in
xchg
dec
dec
test
in
jmp
cld
add
mov
cmps
dec
ds
arpl
stc
sbb
sbb
push
mov
test
inc
dec
sbb
mov
bound
sub
loope
test
push
sub
jl
ins
in
xor
daa
out
mov
pop
bnd
jge
xchg
repz
clc
ret
int3
in
and
cmp
xchg
(bad)
push
cmc
ss
pusha
inc
adc
loop
daa
fnstcw
fadd
div
fcomp
or
pop
inc
xchg
(bad)
sbb
outs
add
xchg
les
or
leave
dec
fcmovbe
test
in
retf
xchg
retf
pop
enter
cld
mov
sub
mov
or
cmp
sti
movs
in
fidivr
mov
popw
js
add
test
mov
cmp
ds
pop
dec
imul
lods
and
inc
test
out
jge
mov
jno
rcr
cwde
aaa
jb
icebp
jl
pop
or
daa
mov
cld
ret
mov
fdiv
fst
pop
mov
mov
sub
inc
int3
mov
jae
sub
mov
inc
popa
add
inc
or
and
mov
lods
cmps
sbb
pop
rol
fild
mov
mov
loop
test
lds
in
lods
ds
lahf
and
ret
jo
and
adc
out
les
jns
fdivr
mov
ja
jmp
or
adc
jp
aam
stos
cmc
sub
call
stos
xor
push
mov
clc
sar
je
fisttp
push
xchg
cmp
(bad)
pop
xchg
aas
xor
mov
dec
inc
lods
repz
das
sub
arpl
inc
pop
imul
xchg
mov
ins
xchg
sahf
cmp
sub
psubusb
ins
les
es
aam
cld
cmp
pop
pop
pop
(bad)
mov
neg
jae
cmps
repnz
test
fcom
xchg
push
stos
pushf
pop
das
jae
test
out
popa
mov
mov
xor
rcr
mov
sub
mov
and
push
sub
cmps
mov
push
pusha
mov
or
sub
lds
aaa
push
jmp
test
fstp
mov
jle
cmp
xor
cwde
js
ja
fs
pop
loope
push
jbe
pop
pop
pop
mov
pop
cmp
dec
pop
pusha
test
dec
in
or
rol
add
popf
call
jmp
scas
popf
dec
or
fild
push
jl
cmp
ret
inc
add
sbb
mov
adc
inc
sub
mov
push
sub
pop
mov
add
pop
out
in
add
jne
sti
pop
ins
xchg
add
out
sub
sbb
daa
js
lods
fnstcw
mov
push
(bad)
dec
add
jae
rol
or
in
cdq
mov
xor
and
push
mov
int
repnz
cdq
sub
clc
sahf
or
loope
push
cmp
cmp
fnsetpm(287
and
js
adc
sub
rcl
lods
cdq
mov
xor
pop
sub
ja
jmp
mov
out
sub
outs
or
and
pop
clc
imul
pop
adc
push
outs
stc
cmp
adc
push
fbstp
xchg
dec
test
das
aas
icebp
and
xchg
mov
imul
call
sub
jb
sub
sub
jno
push
sar
movs
in
call
imul
push
adc
push
push
stc
pop
jae
add
xchg
add
iret
mov
mov
mov
(bad)
jecxz
int3
dec
rcr
ins
icebp
movs
cli
xor
rcl
xor
adc
stos
mov
inc
std
push
cmps
adc
enter
jl
mov
cmp
ja
mov
mov
lods
sbb
pop
jmp
xchg
xchg
mov
push
fistp
ret
jo
pop
iret
rcr
xor
push
test
aas
xchg
dec
dec
inc
js
pop
xor
movs
loop
out
mov
xor
push
mov
loopne
test
fst
jp
repnz
pop
push
xchg
xor
mov
pop
sbb
sbb
mov
dec
cmps
shl
mov
xchg
and
mov
movs
xchg
cmp
sahf
iret
ja
fisttp
int3
mov
xchg
rcl
repz
cmp
fimul
sub
sub
imul
pop
adc
sub
div
inc
and
or
pushf
les
push
ss
iret
sub
fstp
hlt
clc
push
in
add
cmps
fcomp
(bad)
outs
jmp
cmp
lock
xchg
outs
inc
(bad)
shl
fmul
les
jg
ins
xchg
sbb
sub
and
mov
sahf
xchg
cwde
jg
or
fwait
aaa
jns
inc
mov
mov
or
jmp
sbb
pop
mov
pushf
push
ret
cmp
(bad)
int3
scas
lods
mov
pop
inc
lods
dec
into
inc
jle
movs
aaa
dec
sub
push
loope
lea
sbb
inc
jecxz
scas
cs
mov
cld
retf
lea
inc
mov
stos
jmp
or
jecxz
mov
out
mov
xor
fsubr
icebp
rcr
shl
jno
fild
cmp
arpl
out
jp
data16
xor
mov
xlat
cmp
fsub
add
adc
cwde
inc
sti
sar
mov
and
in
mov
retf
inc
and
leave
pusha
in
imul
enter
push
cmps
push
dec
outs
scas
xor
out
pushf
mov
xor
aas
adc
icebp
and
scas
inc
fdiv
dec
mov
sbb
or
xchg
pop
inc
add
es
sub
cmp
movs
stos
enter
aad
call
aas
cmp
(bad)
cli
xor
add
popa
enter
pop
pop
in
push
ror
and
call
pop
and
addr16
(bad)
ds
push
sbb
mov
mov
jno
xor
adc
inc
push
pop
clc
es
xchg
in
fbld
cdq
sbb
(bad)
out
daa
movs
xchg
(bad)
xchg
inc
fnstenv
in
loop
sub
adc
pop
fsubr
dec
pop
retf
stos
test
fadd
fistp
test
cwde
test
jb
jno
sbb
add
fadd
int3
imul
sub
cwde
and
adc
popw
adc
in
loope
or
stos
mov
fwait
cmps
dec
into
movs
out
and
fsub
icebp
or
jbe
in
add
pusha
cwde
pop
and
xchg
xchg
fidivr
pop
mov
mov
push
fld
or
repz
xchg
pop
pop
mov
in
xor
ds
add
or
test
in
pop
xchg
in
aas
stos
repnz
pop
cli
dec
sub
outs
mov
and
popf
inc
and
xchg
jno
and
lods
ins
aas
cwde
or
and
sub
addr16
leave
call
ret
sbb
ret
or
fld
and
icebp
and
sahf
xor
div
pop
repnz
jno
push
cld
dec
pushw
daa
adc
ja
sti
jae
push
jnp
adc
hlt
aas
out
jl
pushf
ss
mov
inc
add
movs
out
packuswb
repnz
dec
les
push
sub
sbb
inc
adc
dec
xor
test
test
mov
jo
and
jg
sbb
jno
pop
cmp
mov
arpl
les
mov
cmps
js
xor
adc
and
(bad)
mov
and
lea
sub
js
nop
bound
jnp
imul
xchg
adc
add
test
jmp
not
pop
das
or
mov
xor
(bad)
adc
xchg
sahf
fsubr
adc
add
xchg
fld
adc
icebp
xor
(bad)
push
dec
dec
dec
dec
cmc
test
sbb
test
(bad)
(bad)
out
cld
in
xchg
pop
xchg
xchg
fimul
imul
fmul
dec
pop
mov
fisub
mov
hlt
data16
or
dec
adc
push
mov
mov
fwait
xchg
add
hlt
test
hlt
add
and
cli
mov
xchg
mov
dec
or
jnp
adc
cmp
js
and
jne
inc
ror
add
retf
cmps
inc
ficom
sbb
idiv
mov
jg
jae
ret
pop
aaa
adc
shr
and
and
push
icebp
jecxz
popa
sub
repnz
(bad)
mov
pop
lds
cwde
cmp
cmp
mov
adc
xchg
or
les
or
pushf
sbb
fisttp
arpl
enter
xchg
dec
or
or
pushf
jle
leave
jp
loope
xor
xor
sub
sti
repnz
fmul
xchg
lods
cwde
sub
pop
push
sub
jo
(bad)
imul
jb
or
(bad)
push
test
in
mov
repz
sub
jns
lahf
and
jbe
sbb
jecxz
les
xlat
lods
mov
dec
mov
dec
nop
inc
jge
rcr
or
(bad)
imul
popa
add
ins
rcr
das
test
dec
hlt
mov
lea
movs
mov
sub
stos
push
dec
inc
xchg
and
xor
es
iret
retf
mov
clc
push
movs
outs
stos
movs
adc
fs
mov
call
outs
inc
mov
stos
xchg
aaa
pusha
mov
push
sbb
stc
mov
mov
shl
sub
std
repnz
mov
pop
je
cld
repnz
cmp
movs
mov
inc
pop
dec
popf
push
cmp
push
loopne
ret
les
mov
jmp
mov
xchg
push
jl
mov
ror
fwait
stos
inc
imul
push
push
aas
mov
sub
xor
push
push
ja
stos
pop
push
loopne
pop
push
jg
cmp
movs
popf
outs
sti
mov
stos
inc
jg
ss
adc
stc
sub
cmp
int
ins
enter
outs
nop
fstp
mov
ds
stos
outs
out
and
test
(bad)
mov
mov
fild
in
(bad)
mov
mov
jbe
les
aaa
popf
cld
push
rcl
les
lock
and
and
xchg
and
pop
aad
int
arpl
lods
in
or
push
push
fist
adc
ins
mov
cmp
rcr
mov
dec
pop
in
mov
fadd
lods
or
xor
mov
scas
mov
leave
lea
sbb
push
mov
fcmovne
retf
jle
lds
repnz
ret
fwait
xchg
pop
and
adc
mov
add
fadd
clc
dec
cmp
sahf
cmp
inc
test
ss
retf
lods
in
lahf
stos
sbb
mov
jb
or
ror
das
scas
xchg
cmova
pop
jbe
gs
pusha
xchg
xchg
and
int
cwde
adc
sbb
mov
not
cmps
xchg
(bad)
out
jmp
lahf
xchg
cwde
pop
pop
cmp
and
xor
(bad)
dec
or
adc
jmp
inc
loopne
or
aam
mov
movs
jmp
enter
xor
faddp
jle
scas
std
mov
xchg
scas
inc
or
icebp
inc
adc
les
ins
inc
scas
icebp
sub
sbb
cmps
es
aaa
retf
mov
ror
(bad)
retf
int3
mov
popa
sub
inc
cli
(bad)
push
loope
xor
pop
int3
dec
fsub
sar
gs
jle
hlt
mov
dec
(bad)
pop
mov
cli
sbb
push
jb
(bad)
cmp
jb
ins
sbb
mov
push
out
fstp
inc
xor
jo
ret
xor
pop
imul
outs
add
adc
dec
mov
jbe
std
mov
not
sub
pop
sub
retf
(bad)
std
add
sub
call
cdq
aad
js
pop
gs
add
(bad)
ds
sahf
push
mov
es
mov
inc
fdivp
mov
mov
lods
stc
retf
add
lods
lock
ins
mov
jb
xchg
push
lock
test
(bad)
push
lods
mov
dec
ret
aas
add
fiadd
mov
mov
repnz
jmp
outs
int3
ja
push
fwait
adc
mov
add
xlat
shl
icebp
adc
xor
jbe
or
xor
std
je
cdq
aad
clc
dec
sbb
mov
push
xor
mov
hlt
mov
push
test
xor
jg
loope
xchg
jae
pop
mov
call
call
xchg
xchg
std
or
jbe
clc
mov
or
movs
xor
cli
leave
xor
outs
cdq
mov
aas
xchg
add
mov
js
adc
rol
and
call
lea
sub
dec
fs
icebp
cli
cmps
sbb
inc
dec
push
call
pop
test
and
es
mov
lahf
cs
popa
pop
jbe
xchg
mov
repz
cwde
add
int
sbb
in
lods
mov
scas
or
enter
push
xchg
ret
call
push
lods
jmp
fmul
pop
xchg
inc
push
imul
mov
stos
xlat
jne
pushf
or
(bad)
push
fsubr
mov
enter
pop
loop
ror
loopne
movs
imul
pop
push
pop
jnp
popa
inc
test
arpl
(bad)
fist
cdq
call
sbb
cmc
ret
ins
ins
iret
push
loopne
add
cmp
lock
adc
xor
sub
mov
mov
xchg
xchg
pop
or
fld
jmp
push
sbb
rcl
cmp
mov
movs
inc
imul
pop
push
neg
sub
repz
cmps
in
jle
scas
ins
xor
dec
jno
lea
pop
sub
inc
call
test
dec
mov
leave
std
inc
push
stos
shr
dec
pop
(bad)
mov
jno
push
push
pop
xchg
push
clc
sti
scas
jno
mov
mov
ret
sub
push
push
push
pop
add
(bad)
pop
sub
push
fwait
adc
stc
and
ret
in
scas
sub
loope
add
pop
push
aad
jb
test
dec
jle
add
outs
sbb
add
pushf
fdiv
cld
(bad)
out
xor
dec
inc
mov
stos
fidiv
jle
bound
or
sar
mov
arpl
ins
sbb
xchg
add
jl
aas
leave
sbb
cwde
and
outs
pop
lods
sbb
mov
push
push
inc
inc
sub
dec
or
imul
jo
and
cli
aaa
fmul
fnstenv
jge
or
das
sub
xlat
fiadd
mov
jnp
push
movs
jns
jp
mov
stos
ss
sbb
pop
or
nop
sub
add
sbb
mov
mov
loopne
push
sub
or
sub
push
xor
pop
fcmovnb
movs
test
xor
mov
mov
xchg
out
push
adc
or
mov
mov
inc
pop
or
aad
pop
addr16
add
das
cmp
sti
fisttp
shl
jl
sub
xchg
ja
cmp
pop
gs
adc
cmp
push
mov
out
push
imul
ret
(bad)
out
gs
xchg
(bad)
cmp
lds
movs
xchg
nop
push
inc
xor
jp
stos
xchg
or
sahf
adc
shl
shl
fucomi
xchg
(bad)
mov
movups
mov
out
jne
cmp
sbb
mov
data16
outs
stos
ja
jmp
add
add
xchg
fstp
pop
lods
lahf
pop
fxch
cmps
add
test
out
and
je
ins
xor
cmc
cmps
push
out
mov
dec
or
mov
adc
xlat
push
ds
inc
imul
fs
pushf
lahf
outs
adc
jecxz
mov
loope
adc
dec
loop
and
ins
ror
(bad)
out
jne
ins
or
je
mov
fidivr
ficom
push
les
inc
xchg
fnstsw
test
arpl
cmp
inc
lods
add
dec
ins
inc
mov
int
xlat
stos
inc
int3
movs
mov
shr
jg
in
mov
inc
xchg
jl
lds
aad
je
js
sbb
fcomp
pop
or
sbb
jecxz
rol
and
imul
(bad)
xor
(bad)
jmp
retf
aaa
sub
mov
add
push
out
adc
lds
(bad)
dec
mov
(bad)
push
cdq
jb
imul
sbb
cmp
push
jne
sub
pop
stc
push
mov
adc
jmp
daa
jmp
mov
imul
jl
or
fs
mov
or
sub
ins
loope
mov
jle
repnz
leave
add
lahf
dec
scas
inc
inc
xchg
ret
sbb
cdq
bound
dec
and
leave
mov
cmps
aam
cdq
mov
ins
push
outs
out
jnp
loope
push
sbb
ja
mov
and
sub
jne
rcr
fucomi
pop
cld
push
xchg
and
sbb
dec
and
jge
and
sbb
or
xchg
repz
sti
sub
cdq
dec
mov
lods
jmp
cmp
sbb
jns
mov
push
(bad)
mov
jmp
mov
movs
shr
add
adc
sahf
jecxz
jmp
mov
sahf
stc
cmps
cwde
pop
shl
test
and
sub
lods
mov
mov
or
or
scas
pop
test
adc
dec
ja
and
sti
jge
int
adc
xchg
scas
and
jp
xchg
add
test
in
push
iret
rcl
or
or
pop
and
xor
in
or
(bad)
mov
pop
pop
cmp
sub
or
and
push
out
movs
call
add
mov
cmps
outs
add
test
shl
sub
jbe
or
fldcw
sbb
cdq
fwait
adc
nop
add
int3
mov
add
fmul
ins
retf
fisttp
sub
xor
adc
mov
(bad)
int
adc
sub
cmp
fsubr
ficomp
rol
push
mov
mov
outs
push
xor
or
sbb
ins
pop
jae
push
mov
mov
or
jp
dec
push
pop
xor
out
ret
mov
into
test
stc
movs
dec
imul
dec
and
loopne
sbb
fdiv
setae
jo
ret
add
cmps
(bad)
and
(bad)
cld
mov
into
xor
adc
out
aam
sub
jp
and
imul
cmp
mov
icebp
sbb
pop
sti
in
das
lods
jno
pop
scas
pop
inc
jae
scas
scas
or
xor
lock
call
(bad)
clc
stos
aas
outs
add
(bad)
lods
jge
xchg
sub
cmc
fstp
mov
in
sub
bound
std
xor
mov
xor
ja
sub
inc
mov
pop
ins
xlat
pusha
out
dec
xchg
mov
xor
pop
or
push
mov
mov
call
test
adc
adc
or
sub
sub
retf
mov
jo
jmp
pop
jne
push
std
xchg
dec
sahf
cmp
(bad)
pop
jle
std
mov
sbb
stos
adc
aaa
repnz
dec
sub
push
xchg
ret
inc
xchg
add
sahf
ins
(bad)
in
pop
sub
outs
test
mov
sbb
pop
dec
imul
in
call
mov
push
jns
jl
hlt
push
gs
cmc
int3
sub
inc
cmp
pop
sub
int
repz
lock
adc
cmp
lds
fmul
sub
in
and
inc
xor
scas
dec
and
shr
rol
dec
cmp
js
std
push
daa
and
sub
xchg
push
pop
mov
scas
jae
mov
in
push
fimul
inc
loop
scas
(bad)
cmp
dec
cmps
sbb
mov
jmp
hlt
ffree
cmp
je
je
add
push
and
pop
or
push
mov
mov
bnd
mov
inc
jmp
xchg
pop
retf
(bad)
lds
mov
fsubr
push
movs
and
sbb
add
push
imul
nop
les
test
pop
stos
pop
and
aaa
jb
mov
pop
sbb
push
xor
mov
push
cmp
push
cwde
call
pop
cli
mov
test
push
jae
pop
cmp
stos
push
test
imul
imul
jle
fmul
mov
std
fidiv
mov
das
sub
pop
push
mov
dec
jecxz
adc
rcl
ins
adc
out
hlt
mov
push
cld
aam
push
mov
sbb
movs
ss
hlt
mov
or
mov
popf
fwait
pop
push
mov
rcl
in
mov
repz
mov
lods
pop
pushf
cdq
sbb
add
sbb
mov
adc
adc
and
rol
sbb
out
pushf
cli
push
push
stc
jne
inc
retf
pop
cmp
test
or
fmul
aas
and
addr16
push
movs
add
xchg
inc
mov
mov
mov
adc
xlat
cmp
fisttp
sub
cmp
stos
sub
mov
sti
xor
xchg
clc
out
jns
popf
pop
fdiv
movs
div
loopne
mov
jge
jecxz
js
(bad)
pop
movs
mov
mov
push
mov
sub
adc
or
adc
rol
mov
sbb
inc
jmp
lock
xchg
sbb
rcl
jae
fdivr
push
test
imul
repz
mov
mov
cmc
pop
inc
xor
int3
pop
inc
push
les
cmp
cs
and
xchg
ret
sti
inc
enter
jg
std
mov
sar
jae
xlat
retf
mov
xchg
pop
mov
aaa
sbb
enter
jmp
shl
push
not
sbb
ds
dec
adc
aam
into
jns
and
call
aas
sub
test
and
lods
imul
or
ds
and
sahf
int3
(bad)
xchg
js
ins
aam
jnp
add
repnz
sbb
add
or
call
in
inc
lods
das
mov
or
call
mov
xchg
adc
sbb
jmp
jmp
iret
loop
ret
push
cli
sbb
xchg
jg
(bad)
pop
xchg
std
push
mov
adc
cdq
push
mov
and
retf
addr16
lea
dec
push
pushf
inc
cmp
test
daa
add
jno
test
loop
rcr
jecxz
movs
cmp
(bad)
xchg
sar
add
rol
fisubr
pop
jl
jo
mov
scas
ret
add
in
mov
push
jecxz
xchg
(bad)
jge
nop
in
and
imul
loope
js
popa
pushf
jge
xchg
pop
cld
mov
and
xchg
cmp
xchg
dec
cmc
jg
rol
ds
repz
mov
cld
stos
repz
outs
test
dec
add
stos
pop
iret
and
cmc
push
cmp
inc
xchg
lods
ss
mov
std
dec
lock
jo
cmp
stos
sti
sbb
(bad)
dec
ja
push
jmp
jle
mov
pop
stos
cwde
push
sbb
pop
pusha
push
retf
sbb
lods
lock
push
mov
jmp
cmp
pop
or
sbb
xor
mov
repz
(bad)
dec
je
adc
jne
test
inc
outs
push
cmp
jbe
or
and
adc
xchg
inc
push
movs
or
jnp
push
into
(bad)
ror
pushf
dec
jecxz
fist
xchg
sahf
cli
mov
pushf
rcr
xchg
and
cmp
(bad)
int
sbb
xchg
mov
data16
les
adc
sbb
out
inc
enter
movs
mov
out
xchg
aaa
adc
mov
out
nop
in
ss
ins
xor
xchg
mov
or
pop
inc
popf
xchg
xor
push
sub
xchg
inc
add
jp
addr16
mov
int3
sbb
sbb
pop
fwait
jge
add
adc
and
mov
mov
add
or
jb
and
push
inc
rcr
hlt
mov
fs
sub
jb
fisub
out
test
lahf
mov
gs
xchg
call
cmp
call
jp
sbb
enter
mov
cmp
xchg
xor
cmp
push
pop
mov
stc
mov
cdq
rcl
xchg
scas
jmp
fidivr
add
xor
scas
mov
push
xchg
push
div
sbb
in
xor
inc
mov
pop
adc
stos
xchg
(bad)
je
lds
not
xor
and
jb
jbe
mov
and
cli
dec
inc
ror
call
fisubr
sbb
aam
sbb
or
daa
test
pop
data16
ret
(bad)
call
or
scas
cmp
imul
ret
mov
int
loopne
dec
imul
mov
jne
mov
dec
mov
sti
mov
in
mov
jmp
adc
gs
or
lahf
pusha
gs
adc
(bad)
cmp
movs
test
repnz
push
mov
cmp
(bad)
xchg
test
nop
xchg
scas
mov
pop
inc
in
xchg
lahf
pop
shl
mov
jnp
in
xor
inc
mov
sub
cmps
leave
(bad)
pop
inc
(bad)
outs
bound
inc
push
pop
repz
loope
xchg
inc
(bad)
sbb
sahf
push
pop
outs
pop
jge
mov
fisubr
pop
mov
int3
call
mov
hlt
fs
in
push
movs
ret
add
jg
test
shr
retf
lods
gs
in
or
mov
(bad)
add
xchg
push
jb
push
shr
and
in
iret
ja
jo
rcr
je
enter
aam
int3
sbb
lahf
in
rol
test
(bad)
das
cmps
popf
arpl
mov
out
pop
ins
aaa
movs
(bad)
addr16
sub
jge
adc
dec
push
iret
imul
leave
imul
pop
jae
and
inc
xchg
mov
xor
inc
cli
pop
aas
or
pop
movs
jl
ins
sti
or
inc
mov
sbb
mov
mov
sub
leave
test
jo
push
xor
cmc
push
or
inc
jecxz
aas
or
cmp
cmp
pop
outs
mov
cmp
cmps
inc
jle
sub
lds
repz
cmp
mov
les
and
lock
mov
xchg
popa
pop
call
sbb
cmp
xchg
mov
sub
int3
jno
and
(bad)
mov
add
cld
gs
push
outs
aad
and
push
adc
push
call
xchg
xor
mov
cmp
cmp
sub
or
xlat
movs
scas
adc
bound
sbb
loope
popf
ins
pop
or
cmc
jne
push
fs
hlt
inc
fcomip
cmp
adc
inc
xor
mov
pushf
cli
stos
ror
dec
cmp
unpcklps
sub
push
(bad)
mov
mov
or
jl
popa
xor
inc
dec
dec
pop
leave
add
es
popa
pusha
fwait
jecxz
div
sbb
push
pop
das
pop
mul
repz
aad
sti
cdq
pop
add
mov
mov
sub
jnp
mov
and
nop
mov
sbb
push
cs
cli
fiadd
nop
int3
(bad)
in
push
fsubr
imul
and
out
and
adc
push
xchg
jne
jmp
jno
imul
pop
addr16
cs
jecxz
sbb
int3
mov
mov
aas
adc
jmp
adc
je
shl
je
mov
retf
emms
push
jo
pop
(bad)
mov
aaa
stc
shr
in
push
(bad)
and
ja
inc
xchg
inc
leave
out
cmps
gs
inc
push
cli
or
(bad)
mov
dec
fadd
pop
jo
sti
jl
out
mov
mov
pop
adc
and
sub
jne
pop
cmp
push
enter
sub
rcl
jecxz
push
scas
xchg
adc
cli
cmp
repz
je
shr
xor
fidiv
add
jg
test
enter
dec
fcom
ja
pop
test
std
es
mov
dec
add
jmp
mov
xor
fst
sbb
imul
popf
fcomi
mov
aad
shr
cmp
sbb
mov
cmps
adc
(bad)
sub
retf
scas
mul
(bad)
addr16
mov
and
lods
push
cmp
cmp
ja
jmp
out
lea
jae
xchg
dec
mov
mov
mov
(bad)
mov
adc
ins
cmp
jge
mov
mov
retf
push
movs
jnp
sub
pop
scas
pusha
icebp
xchg
dec
sar
pushf
xchg
dec
push
std
ds
push
mov
and
emms
adc
add
int3
cmp
jmp
imul
je
jb
xchg
push
cld
jno
jno
push
dec
in
iret
mov
and
and
test
loope
xchg
jg
fstp
je
push
out
dec
push
stc
add
xor
mov
fs
adc
push
fadd
mov
xor
pop
push
(bad)
out
push
dec
mov
mov
inc
pop
cmp
inc
sbb
sub
xchg
popa
xor
or
sbb
aad
popa
stos
cmps
scas
retf
aam
mov
jl
pop
inc
retf
cdq
push
out
lods
mov
jmp
adc
jg
inc
(bad)
lds
fucomip
in
test
pushf
not
pusha
push
xor
sub
inc
icebp
mov
adc
popf
cmp
jmp
sahf
cmp
je
inc
hlt
pushf
jmp
lods
out
adc
scas
mov
in
cmp
popf
xchg
xchg
cmps
cmc
jmp
loope
inc
mov
jl
jmp
cs
outs
nop
fsubr
scas
sub
les
mov
dec
add
fwait
and
js
setge
fcomip
call
or
push
mov
mov
or
imul
into
in
xchg
mov
cmp
xchg
dec
jno
cdq
inc
out
jg
jmp
adc
(bad)
push
test
aaa
lds
int3
hlt
dec
or
hlt
lock
call
add
mov
or
or
dec
das
jle
pop
jne
enter
movs
inc
or
add
pusha
push
test
sub
dec
loopne
jmp
and
imul
mov
xchg
mov
push
retf
add
call
cwde
add
mov
pusha
inc
aam
fsubr
lods
scas
shl
cmp
dec
or
addr16
jb
std
pushf
cdq
mov
add
xchg
jb
cmps
out
xchg
add
int3
and
ss
shl
xchg
inc
lock
dec
xchg
xchg
cmps
mov
pop
int
mov
(bad)
(bad)
push
rcl
ins
ins
adc
push
pop
imul
push
pop
ss
or
(bad)
int
stos
dec
mov
fwait
xor
scas
jbe
jle
xor
inc
icebp
loopne
xchg
dec
inc
cmps
cwde
cmp
push
test
mov
rol
or
imul
xchg
mov
fisttp
sbb
aam
mov
xor
into
inc
push
js
mov
add
sbb
xchg
clc
dec
retf
int
adc
(bad)
and
sbb
stos
in
jecxz
mov
mov
add
push
jnp
adc
int
jno
mov
and
call
mov
mov
lds
ss
jbe
sbb
imul
fcomp
xchg
mov
ss
add
xchg
sub
repz
pop
fdivr
adc
ret
xor
js
ss
sbb
in
jno
movs
jle
in
mov
loopne
jle
sbb
addr16
cmps
cmps
cwde
retf
push
(bad)
imul
mov
cdq
pushf
cli
js
pop
dec
sahf
std
mov
rcl
in
aam
mov
(bad)
loop
push
ins
aaa
mov
add
sub
mov
lock
cmp
push
clc
mov
sub
xor
lods
jbe
dec
ins
cmp
mov
inc
aaa
addr16
sub
aaa
loop
sar
paddusw
xchg
sar
out
dec
cmp
push
loope
jl
aam
stc
gs
pop
or
mov
shl
and
push
(bad)
cmc
mul
stos
scas
fsubr
or
in
and
pop
jbe
push
loop
cmp
or
xor
cmp
js
dec
adc
mov
outs
inc
mov
sbb
fwait
sar
push
test
loop
mov
ret
loopne
ss
pop
mov
push
ins
fldcw
stc
inc
(bad)
or
xor
jmp
call
imul
pop
ffree
jb
sbb
repnz
scas
push
add
bound
dec
cmp
mov
jecxz
or
fst
aad
imul
mov
push
sbb
je
aam
add
cmc
aas
mov
out
aam
mov
aad
sub
mov
mov
push
cmp
xchg
clc
or
inc
or
in
dec
push
jne
jnp
shl
and
pop
(bad)
sbb
cmp
pop
dec
push
test
in
lods
stos
mov
outs
and
popf
pop
pop
dec
mov
xor
iret
gs
add
repnz
cmp
push
dec
pop
xor
push
iret
jmp
rcr
imul
cmp
sub
mov
test
sbb
ficom
adc
dec
adc
adc
jmp
test
fld
ret
jge
cli
dec
push
out
rol
leave
pop
mov
retf
ss
cmp
xchg
xlat
cmp
inc
mov
cwde
sub
imul
xchg
jle
into
(bad)
out
add
int3
push
cmp
pop
jb
mov
or
fsub
pop
rcl
retf
pushf
movs
dec
mov
fmul
inc
je
ss
adc
mov
jmp
dec
loop
sbb
ds
sbb
loope
test
test
ins
test
xor
nop
test
cdq
rol
mov
mov
enter
ja
jnp
inc
jle
push
sub
adc
scas
stc
pop
pop
sub
inc
lahf
iret
loopne
loopne
pushf
outs
add
mov
out
pop
je
jle
pop
scas
push
adc
push
pop
imul
dec
and
cmp
push
push
sbb
(bad)
jmp
pop
leave
pop
loope
mov
fist
aam
and
inc
fwait
(bad)
mov
or
pop
cdq
push
in
and
mov
scas
stos
push
shl
push
mov
int
test
push
jg
fcomp
sbb
jle
repnz
xchg
dec
pusha
dec
mov
fidivr
shr
scas
dec
retf
retf
mov
movs
aad
(bad)
fdivr
cli
test
cmp
cld
aas
and
mov
or
jnp
xlat
fsub
sahf
jb
push
mov
ss
sbb
fimul
cmp
xor
in
out
ja
push
xchg
(bad)
out
pop
mov
or
or
hlt
jl
jns
xchg
pop
sbb
jle
stos
xor
add
jp
mov
scas
out
sbb
test
adc
cmps
out
pop
fcomi
cmovg
ins
mov
lahf
xchg
mov
mov
ds
test
mov
push
aas
imul
test
mov
xor
push
mov
add
sbb
(bad)
lods
cmps
lock
sahf
leave
into
loope
xchg
sar
sar
xor
or
dec
cmp
sub
push
adc
ins
mov
push
scas
sub
loope
in
movq
push
jb
push
xor
dec
icebp
xchg
cld
xor
mov
or
cmp
cmp
rcr
test
mov
mov
mov
call
sub
ret
imul
fs
dec
ins
lods
pop
cmps
aaa
int
out
add
dec
mov
sub
call
and
jno
inc
lahf
aas
cmps
inc
sub
jp
pop
fcomp
sub
cmp
int
add
push
ds
inc
jecxz
cli
mov
data16
enter
cmps
dec
xor
xor
mov
xchg
(bad)
imul
dec
fnstcw
and
imul
inc
xchg
in
loopne
pop
cmp
sbb
js
jmp
and
jae
movs
loope
cmc
cmps
or
or
inc
shl
xor
ss
test
adc
popa
sbb
dec
xor
sar
inc
into
inc
out
int
dec
(bad)
popa
out
xchg
jecxz
hlt
adc
mov
mov
mov
cdq
dec
fwait
jno
mov
push
cdq
cdq
add
arpl
mov
xchg
rol
(bad)
out
xor
std
xchg
xchg
inc
dec
sub
scas
movs
fmul
jb
lods
mov
into
add
pop
pop
fdivr
sub
mov
dec
rol
std
jnp
cmp
faddp
movs
call
dec
mov
mov
xor
xchg
mov
loopne
and
sub
rdmsr
cmp
push
add
xchg
mov
shr
mov
in
jecxz
fmul
jo
outs
jne
cmp
or
sbb
movs
mov
bnd
gs
cwde
and
data16
fmul
ss
imul
shl
cmps
or
aaa
(bad)
in
and
rcl
clc
push
mov
or
inc
je
daa
retf
lods
les
imul
and
pop
and
xchg
jae
sbb
mov
aad
dec
adc
push
ret
data16
(bad)
retf
push
cmps
icebp
sub
sub
add
adc
aam
inc
jg
mov
dec
mov
ds
pop
je
or
pop
cmps
js
movs
je
xchg
cmc
sbb
sahf
mov
pop
cwde
hlt
lds
repz
inc
push
in
pop
int
(bad)
out
jno
sub
stc
scas
aad
inc
push
jmp
popa
or
mov
aas
add
dec
mov
cmc
sar
stos
(bad)
sub
jae
cli
in
sbb
sub
cmp
loop
cmp
test
push
bswap
pop
sub
pop
pop
dec
pop
in
ins
xchg
mov
loop
ret
daa
cdq
or
sub
lock
ss
ja
xchg
dec
pop
xlat
mov
outs
or
test
aas
and
cmp
repz
call
mov
or
test
rcr
mov
mov
std
mov
xor
mov
les
mov
leave
xor
and
sar
add
ds
mov
fst
sahf
and
retf
ds
mul
inc
test
ret
imul
and
jnp
fs
les
or
adc
int
bound
lds
xor
mov
cmp
xchg
das
sbb
sbb
add
pop
cmp
adc
rol
jb
pop
sahf
retf
mov
dec
rol
imul
pop
push
mov
leave
imul
mov
dec
inc
inc
je
dec
jno
test
and
cld
mov
int3
sar
sti
sub
jmp
sar
sub
std
xor
push
sub
cmps
inc
jle
rcr
jo
push
ret
jnp
cmp
mov
shl
sti
fwait
daa
push
push
stc
lahf
push
adc
ds
test
call
mov
not
outs
mov
push
cmp
pop
out
mov
popa
stc
push
ds
inc
push
mov
mov
and
test
jp
lock
xor
sub
jb
cwde
cwde
std
test
or
cmc
push
loopne
or
nop
add
(bad)
jmp
xor
or
mov
adc
fs
fwait
das
adc
or
les
dec
xchg
xor
test
icebp
inc
pop
sbb
out
leave
jne
call
mov
ret
pushf
push
or
out
int3
vfnmadd231ps
sbb
cmps
adc
or
cmps
test
dec
mov
jnp
mov
xor
and
mov
dec
out
out
dec
mov
xchg
mov
arpl
loopne
cmc
div
or
pop
mov
into
call
cs
cwde
cmc
jmp
retf
add
ins
bound
add
test
jecxz
add
add
mov
push
icebp
scas
loop
pop
pop
ror
xchg
push
and
and
stc
popf
mov
addr16
mov
xchg
jle
jae
sbb
mov
mov
cli
sbb
or
retf
xor
inc
fs
adc
push
loope
xchg
mov
lods
es
inc
and
aam
jns
nop
jge
sbb
lds
mov
ins
arpl
xlat
xchg
sub
aas
cdq
jb
jb
in
mov
lods
loop
sub
sub
mov
stc
popf
aad
outs
push
xchg
cdq
shl
adc
shr
or
mov
test
add
fsub
adc
data16
int
jmp
pop
stc
mov
in
in
rol
xchg
jmp
(bad)
mov
scas
mov
fwait
jmp
jge
or
lock
setle
mov
ret
xchg
sbb
dec
lea
ins
gs
push
add
(bad)
idiv
cs
scas
cdq
push
or
daa
icebp
cmc
je
shl
arpl
mov
sub
lea
mov
cmp
xchg
int3
loop
repz
adc
push
sub
into
dec
and
pop
jp
push
gs
sbb
adc
lahf
stos
jae
ficom
mov
push
in
mov
fmulp
mov
sbb
mov
test
push
clc
mov
std
sbb
in
(bad)
enter
mov
pop
gs
and
push
jnp
inc
test
adc
(bad)
cld
and
sbb
sub
movs
ss
(bad)
cmp
dec
or
ret
out
add
and
imul
mov
stos
cmp
mov
dec
mov
jl
icebp
cs
sbb
inc
imul
mov
in
mov
dec
movaps
push
or
aaa
(bad)
fcomp
push
mov
and
xchg
and
inc
cli
cwde
imul
mov
shr
mul
stos
sub
neg
mov
add
push
mov
test
jb
xchg
repnz
ins
jns
outs
(bad)
loop
ins
xlat
dec
fwait
xchg
arpl
adc
cwde
mov
pop
cmp
adc
repnz
push
retf
push
sub
sub
push
not
ret
or
xor
mov
(bad)
sub
xor
aas
pop
enter
xor
dec
cld
adc
ss
push
and
or
jno
fwait
icebp
in
and
stos
arpl
ins
xor
dec
mov
fdivr
retf
retf
mov
aam
cmc
inc
retf
jp
inc
inc
mov
xor
cmp
xchg
test
out
icebp
loop
pop
test
xchg
push
pushf
into
aam
mov
pop
bound
add
fcomp
imul
fist
(bad)
outs
retf
dec
call
mov
imul
in
pop
pop
(bad)
fsub
bound
cwde
sub
adc
icebp
add
jmp
inc
add
movs
arpl
cld
mov
pop
cwde
popa
ss
mov
adc
cs
xor
test
xchg
ja
in
std
call
cmp
cmp
dec
aaa
test
mov
outs
xlat
shl
aaa
fcomp
xor
xor
or
rcr
xchg
fnstsw
popa
jg
ss
lods
ins
mov
pop
lahf
mov
rcr
dec
test
xor
call
cmp
cmps
inc
mov
adc
pop
cwde
push
stos
jmp
add
or
sbb
dec
or
mov
jg
xor
sbb
push
enter
cmp
jnp
lods
pop
mov
scas
call
xor
loopne
cmps
mov
ret
xlat
lea
loope
pop
sbb
ins
bound
(bad)
es
xchg
xor
sub
jne
or
fnstcw
mov
jo
mov
sbb
mov
test
test
jae
fild
cmps
mov
jo
or
add
mov
neg
add
xchg
cmp
clc
mov
(bad)
jl
rcl
or
arpl
or
cmps
pop
cwde
inc
in
inc
push
xchg
lods
jle
ror
sbb
loop
(bad)
pop
scas
out
or
jp
frstor
ins
mov
mov
and
inc
cld
and
push
cwde
int3
shl
rol
lock
in
cmp
xchg
sti
popf
dec
xor
retf
push
sub
jno
add
lahf
push
inc
test
and
mov
sub
in
fwait
and
sbb
jg
(bad)
gs
push
jge
shr
imul
jb
or
xchg
jne
xor
pop
(bad)
and
out
es
add
mov
mov
vmread
scas
add
dec
mov
jmp
jmp
scas
mov
mov
jno
mov
es
ficom
dec
sbb
(bad)
stc
loop
or
jb
pop
sbb
test
adc
rcl
mov
and
(bad)
movs
loopne
inc
pusha
jo
mov
in
jns
imul
and
(bad)
repz
or
sbb
test
sub
mov
gs
jns
xchg
and
cwde
cmp
(bad)
pop
out
aad
inc
adc
das
fs
lock
pop
cli
leave
rcr
jno
jp
jg
loope
sbb
mov
loope
cmc
inc
dec
mov
xlat
sbb
sub
imul
into
popf
or
jns
das
add
jecxz
rcr
nop
add
inc
in
jecxz
ja
cmc
fmul
xchg
xchg
adc
aaa
lds
push
dec
dec
mov
mov
enter
retf
sbb
daa
into
mov
(bad)
or
ficomp
icebp
or
adc
into
xchg
cld
out
pop
xchg
xor
xor
in
sub
pop
or
add
add
cli
aam
dec
scas
cwde
xor
mov
inc
or
sbb
bound
cmp
push
aad
es
mov
jp
fnstsw
aaa
and
xor
cmps
mov
popa
cmp
mov
scas
aas
inc
in
call
push
pop
add
jnp
inc
xor
mov
add
mov
cmp
inc
mov
sub
arpl
mov
xor
mov
sub
jns
push
add
loop
pop
xchg
or
mov
inc
xchg
sub
jne
nop
mov
jo
leave
or
mov
nop
xchg
pop
test
xor
outs
xor
mov
jle
imul
pop
das
cmp
add
inc
(bad)
shl
mov
xchg
sbb
jecxz
push
sbb
js
push
adc
sub
jle
rcl
inc
rcl
or
xor
mov
cmp
fisubr
sbb
retf
adc
sbb
push
sti
mov
into
sbb
xor
inc
push
xor
fld
(bad)
fwait
aad
gs
and
(bad)
dec
test
xchg
xchg
cmp
test
gs
adc
mov
dec
fdiv
jge
fst
and
mov
jne
ror
cmps
mov
pop
aad
mov
mov
scas
mov
sbb
in
push
(bad)
test
cmps
pop
lock
repz
loope
dec
inc
and
call
adc
mov
sbb
mov
into
jl
xchg
leave
sbb
fisubr
ret
jns
sub
in
mov
in
in
nop
shr
nop
imul
sbb
out
and
adc
mov
ret
test
cmps
dec
jbe
jmp
pop
mov
or
movs
imul
add
cmp
stos
sar
rol
int3
lea
push
or
dec
push
(bad)
mov
mov
mov
sub
test
in
test
pop
pop
pushf
xchg
test
pusha
mov
jmp
add
xchg
fs
pop
jb
xchg
jo
out
dec
push
fsubr
pop
int
mov
fs
bound
sub
pop
push
cmp
jbe
stos
mov
add
(bad)
mov
movs
xor
int3
cli
pop
in
rcl
push
loop
jge
add
mov
scas
dec
adc
mov
mov
mov
xchg
mov
push
or
mov
mov
fnstcw
mov
cmp
and
imul
xchg
push
lock
ins
scas
neg
and
push
add
out
retf
leave
ja
sub
aam
imul
sub
pop
movs
sub
stc
mov
imul
mov
push
push
adc
or
das
cwde
int3
mov
mov
and
inc
jno
add
je
mov
leave
shl
gs
daa
mov
pop
std
je
in
rdpmc
idiv
fistp
rep
jmp
lahf
inc
movs
sub
pop
sub
aam
in
aam
dec
dec
in
inc
outs
bound
icebp
pop
mov
mov
and
mov
lds
mov
mov
call
lock
push
(bad)
pushf
fs
sbb
cmp
enter
cdq
stos
loope
inc
cld
loope
arpl
movs
xchg
pop
or
sbb
ret
js
xlat
stos
enter
ss
js
and
push
adc
xchg
cmp
add
scas
repnz
(bad)
(bad)
dec
loope
and
xor
push
lea
pop
imul
data16
shr
rol
dec
clc
movs
xchg
push
sbb
sbb
repz
stc
xor
inc
and
cmp
xchg
sbb
les
mov
js
dec
outs
xor
ins
lock
daa
pusha
cmp
push
mov
jnp
add
pop
out
or
cld
ret
adc
mov
stos
movs
cmp
hlt
out
ret
jecxz
lods
repz
push
retf
call
icebp
(bad)
stos
dec
adc
aad
cmovnp
out
xchg
sar
and
icebp
aad
inc
fisub
les
rol
push
jle
jecxz
shl
inc
inc
jo
in
push
and
sub
lock
sbb
retf
mov
lock
int
xlat
aaa
dec
std
out
sub
out
or
pusha
int
das
xchg
jo
adc
jmp
push
cmp
test
pop
cmp
xor
add
pop
fld
fsubr
mov
jle
int3
in
mov
mov
jl
add
jnp
getsec
repnz
mov
loop
inc
ja
adc
xchg
dec
movs
ins
sub
sbb
scas
jae
cmps
sbb
mov
mov
cmps
mov
repnz
and
popf
and
add
xchg
pop
in
sbb
xlat
inc
icebp
mov
sbb
push
(bad)
outs
popw
dec
(bad)
adc
jno
and
sahf
dec
mov
push
sahf
inc
jae
add
and
dec
sbb
stos
cdq
adc
das
inc
cdq
or
ins
pushf
leave
cmp
(bad)
xchg
mov
xchg
add
(bad)
jmp
sbb
daa
into
stos
hlt
jnp
cmps
arpl
repz
add
or
mov
aad
dec
dec
xchg
fst
mov
mov
dec
adc
loopne
cwde
dec
adc
pushf
push
nop
xor
xchg
rcr
push
repnz
xor
push
fistp
and
daa
iret
xor
jo
shr
stos
sub
push
or
aaa
(bad)
aad
stc
cs
mov
adc
inc
retf
jb
clc
jp
inc
sbb
push
loope
cmp
add
(bad)
fwait
cmp
or
fild
mov
hlt
push
cmp
pop
jb
neg
pusha
fwait
data16
test
jmp
cli
mov
xchg
dec
scas
mov
test
jl
adc
call
(bad)
(bad)
test
jecxz
vmread
mov
lods
fld
jmp
xchg
cmp
mov
(bad)
ins
test
jmp
nop
out
add
mov
hlt
aaa
xor
not
movs
rcl
cmp
mov
inc
scas
inc
xor
push
iret
pop
bound
mov
loopne
out
out
mov
xchg
pop
cmp
add
loop
mov
jg
pop
ja
cs
test
jns
shr
dec
pop
xchg
arpl
int
add
jnp
sahf
and
mov
sbb
ds
ss
imul
fdiv
mov
dec
imul
or
loopne
jne
test
pop
adc
pop
loope
outs
mov
call
(bad)
and
es
mov
xchg
pop
mov
push
sbb
imul
cmp
fwait
mov
loopne
movs
bnd
mov
pop
inc
jp
mov
dec
or
inc
cmp
mov
mov
rcr
lods
jb
cmp
xor
and
stos
lahf
fcomp
data16
mov
dec
mov
stc
jo
movs
pop
ror
push
retf
(bad)
xor
mov
and
aas
test
sbb
fadd
es
cmc
scas
int
les
and
fsubr
and
mov
cmps
mov
(bad)
nop
adc
in
int
imul
jl
pop
repnz
jne
add
push
retf
cmp
retf
or
pop
sub
or
jae
dec
and
loope
mov
mov
jmp
and
test
fwait
jnp
cmps
mov
cmp
ror
fisttp
jae
(bad)
sbb
mov
mul
and
mov
into
xchg
clc
(bad)
fisttp
mov
ins
sbb
je
je
push
in
stos
cmp
push
inc
test
xchg
aad
stc
sbb
add
movs
xchg
adc
ins
jae
inc
sbb
pop
dec
ret
push
xchg
push
jnp
sbb
jmp
stc
repz
and
or
sahf
lahf
lds
mov
ret
stc
in
rcl
sti
jl
ss
enter
je
pop
cmp
push
mov
scas
jg
call
add
(bad)
cld
mov
xor
fisttp
lea
int3
adc
xor
hlt
pop
leave
shr
jp
leave
sub
mov
inc
xchg
fmul
push
js
jbe
aad
mov
push
inc
dec
mov
sub
add
stc
sti
cmp
sbb
add
lds
mov
cmc
iret
inc
in
mov
test
dec
ins
or
ret
mov
bound
sub
push
xchg
push
mov
sar
sub
inc
lds
add
les
sbb
sti
adc
xor
fisubr
push
mov
test
cs
jecxz
fdivp
sahf
xchg
xor
ret
add
imul
jmp
mov
lock
or
mov
sub
sub
retf
pushf
xchg
dec
jg
in
hlt
out
rol
les
jecxz
add
ret
cwde
push
push
inc
push
sbb
push
or
sub
retf
lds
sti
cli
pop
xlat
and
movs
arpl
sub
mov
push
jge
adc
cli
test
jmp
nop
aad
(bad)
in
xor
cmp
gs
cmp
loope
iret
nop
inc
mov
ss
dec
or
dec
mov
pop
inc
xchg
mov
mov
sub
sub
retf
ret
add
mov
inc
retf
cmc
iret
push
adc
icebp
(bad)
dec
out
call
bound
jle
lods
xor
push
sub
mov
jns
jbe
out
adc
or
cmps
out
adc
scas
imul
inc
daa
in
cmp
fstp
add
ja
movs
xor
sub
fwait
ret
cmps
mov
cmp
xor
cmp
daa
and
pop
fwait
ss
xor
repnz
mov
mov
aam
xchg
rol
pusha
pop
retf
or
imul
imul
loopne
data16
push
(bad)
xor
ror
jne
(bad)
push
mov
push
mov
shl
dec
lahf
in
out
test
mov
cwde
into
pop
or
pop
cmps
jge
not
lock
cmp
lock
cmp
gs
shl
or
push
jg
sahf
jp
mov
(bad)
cld
xlat
ret
(bad)
pop
sar
sar
test
out
mov
out
aam
mov
iret
jmp
sbb
call
aad
push
inc
enter
xchg
pop
jg
cmp
sub
mov
jo
ret
icebp
fcomip
in
ins
js
xchg
mul
jmp
fiadd
lock
inc
sub
push
fwait
push
maskmovq
div
js
push
sub
push
pop
pop
inc
xchg
stos
and
xchg
dec
or
loopne
pop
in
ror
(bad)
hlt
repz
lock
adc
xchg
(bad)
xchg
out
jge
ja
mov
ja
cmp
popa
push
sbb
call
adc
pusha
adc
cmps
mov
jns
retf
push
jl
pop
jbe
imul
inc
out
popa
test
into
and
dec
sub
add
ret
sbb
(bad)
push
fsubr
mov
xchg
out
hlt
and
sub
xchg
rcl
mov
mov
fwait
hlt
mov
imul
neg
int
mov
or
lods
ins
mov
add
xchg
cli
inc
fwait
xchg
loop
bound
cmp
out
pushf
add
mov
dec
dec
fwait
cld
xor
es
test
mov
or
mov
mov
int
repz
addr16
or
paddusw
mov
cmp
mov
mov
inc
pushf
and
adc
call
push
cdq
and
mov
mov
jnp
pusha
test
int
xchg
cmp
bound
cmps
and
xor
pop
and
fmul
int
gs
xor
push
jge
dec
les
and
xchg
and
jle
rcr
push
nop
loopne
(bad)
aad
pop
fstp
fdiv
push
push
push
cmp
outs
retf
pop
and
stc
lea
or
movs
imul
and
mov
xor
fimul
jl
push
imul
test
dec
mov
in
repnz
jl
or
lds
push
mov
test
idiv
shl
add
jns
mov
addr16
push
pop
lahf
test
into
push
(bad)
arpl
in
sbb
aad
mov
adc
cmc
xor
and
pop
inc
bound
mov
(bad)
fsub
imul
mov
movs
dec
push
mov
push
or
push
inc
pop
fcmovbe
lock
movs
and
ss
ret
fistp
adc
arpl
cdq
into
movs
push
adc
and
dec
dec
fwait
clc
xor
addr16
imul
mov
pop
inc
in
cmp
mov
xor
pop
mov
xor
int
sub
jg
ja
aaa
sub
in
mov
aad
jb
mov
or
jmp
xor
nop
sbb
rcl
cmps
fcomp
dec
mov
cdq
sub
in
jg
mov
cmp
movs
idiv
in
(bad)
pop
adc
pop
icebp
cmp
sbb
jge
stos
mov
fidivr
adc
and
stc
push
call
sub
aaa
dec
jo
or
xchg
push
mov
push
cmp
jle
mov
sub
mov
aam
inc
push
xchg
ret
push
add
xchg
mov
shl
pop
repnz
push
mov
imul
pusha
pop
jo
pushf
or
ja
push
pop
or
and
push
(bad)
mov
ins
mov
cs
mov
sub
into
stos
xor
mov
or
ss
outs
jmp
dec
mov
outs
outs
adc
push
add
push
ss
das
adc
push
sti
mov
adc
adc
shr
dec
daa
xor
data16
adc
inc
xchg
cmps
jno
cmp
pop
jle
lods
mov
test
push
cmp
push
movs
lods
ftst
adc
outs
pop
sub
lock
leave
in
std
pop
push
fisub
repnz
xor
add
jmp
sbb
data16
cdq
lods
lahf
sbb
and
xor
imul
sub
loopne
jl
jmp
shr
cmp
(bad)
push
fimul
pop
jne
xchg
xchg
xor
push
push
adc
sar
les
and
movs
rcr
popa
ror
imul
les
jmp
mov
or
jle
int3
jbe
test
in
outs
repnz
int3
jae
hlt
xor
aad
sar
(bad)
push
retf
jno
push
sbb
and
les
ss
ja
neg
out
icebp
arpl
aaa
push
dec
jnp
call
dec
aaa
add
jl
jl
cs
lock
jge
test
dec
outs
movs
out
pop
xchg
pop
dec
cwde
repnz
cmp
movs
pop
arpl
mov
fdivr
cmc
add
shl
mov
sub
push
retf
inc
pop
pop
lock
stc
mov
mov
fmulp
lahf
sahf
or
jo
xchg
xchg
push
sub
inc
in
rcr
jnp
movs
sub
mov
inc
test
cli
and
cmps
sbb
pusha
push
aad
mov
outs
sbb
(bad)
es
push
lea
(bad)
xor
popf
enter
add
and
gs
inc
lea
ins
mov
sub
int3
or
ja
ss
inc
xchg
cmp
jg
lods
in
inc
xchg
iret
sub
xor
jge
push
es
out
rcr
push
add
repz
cmp
mov
lods
into
mov
loop
inc
out
inc
test
test
pushf
inc
add
neg
arpl
shl
push
movs
stos
mov
and
bound
int3
repnz
scas
cdq
or
mov
and
ds
fcmovnbe
aaa
(bad)
xchg
fsub
jl
jbe
enter
mov
mov
sahf
mov
xchg
dec
adc
fst
xchg
push
mov
pushf
add
add
stc
cmp
dec
mov
jne
stos
mov
pop
sbb
jbe
jp
and
xchg
js
push
popf
mov
jbe
xor
or
xchg
cdq
aad
xor
and
sahf
int3
test
xchg
or
in
(bad)
in
cld
ja
jb
icebp
addr16
push
(bad)
out
adc
xor
dec
(bad)
jo
test
push
jno
movs
cmp
or
and
jmp
xchg
mov
clc
sub
in
pusha
ins
fcmovb
arpl
adc
cmp
sbb
adc
enter
xchg
sub
or
inc
push
jmp
(bad)
(bad)
inc
lods
pop
fs
fidiv
popf
outs
cmp
(bad)
xor
popa
jg
mov
int3
ja
push
scas
and
jmp
sti
or
sbb
je
stc
jbe
xchg
mov
dec
test
mov
pop
pop
mov
cdq
loope
adc
jmp
mov
mov
dec
mov
mov
mov
pop
shl
sub
inc
add
arpl
xchg
push
ins
ror
pop
dec
ror
lods
pop
xchg
daa
inc
stc
lock
mov
retf
mov
jecxz
inc
xchg
fist
jno
dec
mov
rcl
push
cmp
idiv
xchg
not
in
movs
cmp
idiv
sub
lea
(bad)
sub
lea
cmps
pushf
xor
shr
jno
aaa
cs
lods
mov
shl
add
nop
cs
mov
lods
mov
ror
add
push
xor
lahf
stos
(bad)
push
mov
fiadd
sahf
pop
or
sub
call
mov
test
pop
pop
retf
imul
ins
js
ss
cwde
dec
imul
jno
jge
mov
int3
jne
jbe
scas
repnz
dec
call
leave
or
outs
mov
mov
sahf
sbb
xor
inc
mov
xchg
add
push
mov
push
add
push
or
sbb
(bad)
pop
ret
int3
out
push
xchg
cs
imul
mov
les
retf
cld
adc
and
and
sub
hlt
movs
dec
lea
mov
jecxz
out
xchg
mov
dec
xchg
sbb
xchg
loope
pop
push
dec
enter
in
jae
sbb
out
das
loopne
dec
push
jge
mov
xchg
imul
mov
mov
jb
xor
pop
adc
imul
retf
sbb
es
int3
out
push
fcom
and
push
sbb
call
rep
xor
pop
push
cmps
jmp
test
into
pop
push
push
scas
add
ss
(bad)
jb
add
shl
test
bound
repz
sub
stos
fld
pop
nop
in
outs
shl
fild
push
mov
adc
dec
aaa
and
js
ins
ins
es
mov
add
stos
or
fnstcw
inc
outs
jl
lods
nop
test
pop
pop
and
daa
leave
push
dec
dec
pop
fwait
aad
pop
sub
xchg
jne
test
std
ret
mov
mov
inc
dec
sahf
jmp
adc
adc
or
les
(bad)
pop
xchg
movs
test
mov
sahf
cmp
lods
aad
mov
xchg
xchg
push
xor
repnz
jmp
or
jecxz
shl
aaa
or
push
(bad)
xor
js
shl
mov
pop
mov
hlt
fwait
sbb
sub
cmp
arpl
dec
shr
push
out
out
xchg
inc
xor
jb
xchg
cwde
lahf
das
les
retf
pusha
stc
adc
cmp
dec
out
xchg
jno
sub
js
lods
mov
xchg
xchg
pusha
mov
add
popa
mov
xchg
std
sbb
sbb
push
addr16
mov
mul
test
xchg
imul
sar
leave
cmp
ret
push
xor
ja
sub
xor
(bad)
retf
fcmove
mov
push
popa
mov
jbe
inc
jae
in
outs
xchg
int
push
pop
out
add
mov
jmp
out
(bad)
push
and
jns
cmp
paddq
jb
and
xchg
in
in
(bad)
stc
test
inc
call
(bad)
or
jo
jo
inc
mov
test
sub
jge
idiv
mov
push
ins
adc
pop
sub
ins
xor
div
push
or
imul
out
jge
repnz
xor
sbb
dec
fnstenv
outs
adc
cwde
scas
pop
pusha
in
and
(bad)
and
adc
xor
add
add
arpl
in
aam
nop
lods
lock
sbb
dec
xchg
jp
cmp
xor
test
clc
retf
push
mov
sahf
popf
js
cmp
cmp
mov
retf
mov
jmp
rol
jg
aam
add
xchg
jle
inc
std
loop
test
sub
add
not
xchg
sub
in
sub
cdq
sbb
jno
push
ins
mov
nop
mov
xor
retf
push
pop
jno
loop
mov
cmpxchg
mov
and
repz
cli
mov
sbb
or
cld
push
push
(bad)
lock
xchg
fbstp
mov
fcomp
or
stc
dec
in
call
mov
shl
inc
inc
fs
aaa
daa
ficomp
addr16
jnp
mov
mov
xchg
loop
cmp
das
xor
inc
in
xchg
shl
push
fadd
sub
fisttp
in
cdq
mov
fdiv
inc
push
sub
mov
popf
aas
dec
jmp
pop
inc
cs
dec
push
(bad)
aaa
sub
mov
mov
add
loop
(bad)
std
popa
adc
pop
fs
push
in
add
xlat
xchg
xchg
shr
push
outs
jecxz
add
into
(bad)
out
popf
icebp
jge
adc
jb
mov
mov
arpl
je
repz
sar
pop
and
gs
cdq
mov
jae
adc
sub
stos
lea
jo
pop
mov
in
dec
push
jo
cmp
out
(bad)
sbb
jp
jne
or
mov
(bad)
jge
pop
or
mov
aad
pusha
push
test
mov
lods
and
(bad)
in
jmp
push
in
xor
add
pop
dec
push
xor
imul
lods
imul
popf
cmp
or
cli
pushf
or
dec
cmps
arpl
mov
pop
mov
fcom
mov
icebp
or
sbb
rcl
outs
ror
out
add
adc
test
into
jp
xor
jl
div
loopne
rcr
jns
ins
cmp
push
pushf
ja
pop
loopne
sbb
rcr
push
call
mov
adc
fcomp
jb
outs
inc
in
(bad)
shl
adc
jecxz
adc
rol
push
cmc
jns
jae
push
ficomp
adc
mov
cs
mov
mov
xor
pusha
(bad)
sub
stos
sbb
xor
sub
inc
les
xchg
hlt
test
jg
in
clc
cli
xchg
imul
vucomisd
jo
arpl
jns
cmp
repz
std
aam
inc
imul
cmp
movs
push
adc
ja
sub
(bad)
(bad)
mov
pop
sub
add
push
mov
push
dec
(bad)
test
in
or
mov
out
inc
sbb
sub
cmps
pop
dec
inc
test
dec
mov
pop
dec
sub
mov
loopne
in
stos
lahf
cmp
mov
adc
sbb
aad
test
gs
sbb
jp
pop
cmp
xchg
inc
mov
mov
mov
push
mov
push
adc
ja
push
sbb
outs
(bad)
cld
adc
mov
sbb
shr
mov
cmp
push
daa
mov
lock
mov
pop
stos
sub
dec
cld
pusha
lods
lds
dec
xchg
aaa
scas
jo
dec
dec
lea
test
mov
sbb
out
push
loopne
jne
add
jmp
jge
cmps
push
je
jp
dec
and
mov
test
(bad)
cld
sub
or
adc
push
sbb
add
daa
loope
mov
push
cmps
and
test
pop
repz
jae
lds
pop
cmpxchg
or
mov
or
int
imul
lock
outs
jno
(bad)
jecxz
push
or
lds
push
and
stos
loope
push
xchg
rcl
ins
(bad)
fist
sar
repnz
in
leave
xor
mov
push
push
rol
add
push
add
mov
or
cmp
iret
pminsw
in
adc
adc
sar
mov
add
mov
sahf
sbb
push
add
add
outs
jmp
or
sub
add
loopne
mov
xchg
shr
loope
xchg
ret
jns
faddp
pop
pop
or
clc
xchg
xchg
push
sbb
inc
ret
cmp
test
push
inc
push
lock
lahf
push
inc
rcl
mov
or
xchg
out
aad
inc
fisub
or
hlt
xor
xor
jb
inc
jge
xchg
inc
test
pop
mov
mov
and
es
pop
(bad)
ss
data16
or
xchg
xchg
mov
dec
sbb
rcl
push
pop
ins
retf
add
test
movs
mov
and
dec
cld
idiv
cmp
into
pusha
shr
fwait
cdq
inc
xor
not
shl
retf
(bad)
out
loop
cmps
dec
jmp
pop
cmp
sbb
or
add
nop
add
jle
adc
out
inc
sar
aad
push
cmp
rol
and
and
xor
sub
mov
sbb
jns
xor
sub
fs
loopne
jno
dec
push
xchg
dec
add
cmp
shr
repz
push
mov
not
push
jg
div
outs
mov
aaa
in
jmp
fstp
or
add
push
ficom
mov
repnz
adc
xor
cmp
jnp
out
jge
mov
xchg
shl
sub
pop
mov
mov
ret
aad
(bad)
xor
or
test
test
cmp
mov
adc
pop
push
xor
in
jbe
pushf
in
scas
sbb
ins
aam
add
aas
dec
mov
pop
cmc
sbb
inc
sub
mov
ds
mov
sub
(bad)
enter
jecxz
fisttp
popa
cmp
out
loope
push
stos
jae
into
js
cmp
push
and
in
jecxz
pop
xchg
add
popf
or
push
fcomp
xor
jle
sbb
adc
jb
pop
sub
cwde
fwait
inc
in
shl
in
mov
retf
int3
push
mov
pop
call
adc
mov
xor
call
or
inc
add
pop
dec
jo
jno
in
jmp
jmp
xchg
(bad)
and
xchg
fadd
stc
mov
ss
jg
pop
pop
cmp
mov
mov
int
push
mov
adc
dec
jae
add
push
ret
pop
fcom
pop
mov
les
push
mov
outs
pop
lea
jb
icebp
sbb
punpckldq
outs
push
push
push
push
and
add
and
add
sub
inc
call
mov
xor
stos
or
push
jl
out
sub
shl
femms
and
mov
call
dec
push
cmp
xor
ins
iret
sbb
fs
adc
sbb
push
(bad)
int3
leave
dec
xchg
icebp
fld
(bad)
pop
mov
std
repz
xchg
repnz
das
shl
ins
xchg
and
mov
and
xchg
push
ins
add
lock
xchg
idiv
dec
jno
or
int
fdivr
mov
or
adc
push
xchg
push
ds
cmp
or
daa
add
and
ds
pop
in
ror
add
sahf
mov
push
jno
mov
fisub
push
push
out
mov
or
rol
(bad)
mov
popa
xchg
aas
js
dec
xchg
mov
mov
data16
(bad)
enter
adc
movs
xchg
push
adc
aaa
xor
out
push
std
daa
mov
sub
fisttp
outs
in
xor
jle
imul
sub
mov
inc
icebp
jp
fist
(bad)
adc
xchg
add
or
fisub
movs
xchg
add
pusha
or
push
mov
push
loopne
pop
ins
xchg
dec
(bad)
iret
mov
cmp
std
les
and
dec
jmp
and
cmp
cmps
aaa
fistp
bound
aad
add
inc
sbb
ret
sbb
jnp
arpl
fsubr
pusha
mov
mov
scas
loope
pop
or
xchg
cmc
or
push
popa
jne
or
daa
lahf
push
ds
retf
push
push
add
pop
not
xchg
call
out
dec
into
mov
lds
or
xor
retf
jns
mov
hlt
xor
test
add
dec
inc
ret
mov
daa
lds
out
loopne
push
scas
popa
mov
mov
lock
and
test
sbb
rcl
in
retf
and
jmp
and
pop
fwait
mov
push
mov
pop
mov
sub
stos
ins
mov
push
jl
sub
cmp
xor
xor
sub
ret
sub
xchg
inc
jns
sbb
shl
out
mov
in
jb
sub
hlt
mov
add
ds
scas
cmps
pop
inc
mov
popf
mov
push
push
(bad)
ficom
sbb
(bad)
pusha
call
and
lods
jge
inc
es
add
add
push
push
fs
mov
adc
into
pop
adc
jns
jge
aam
mov
push
or
adc
jp
pop
and
and
mov
outs
or
cld
and
loop
mov
lock
lds
xor
cmp
ficom
jmp
jmp
sub
and
push
pop
mov
outs
xor
iret
mov
jbe
push
jmp
loope
mov
(bad)
nop
adc
pminsw
je
add
(bad)
arpl
in
mov
lods
inc
lea
push
test
jge
out
mov
adc
xchg
cdq
and
loopne
inc
pop
pop
rcr
mov
in
mov
mov
repz
scas
jo
shl
adc
pop
lock
je
cmps
out
es
pop
mov
xchg
jecxz
sub
repnz
pop
das
xchg
loop
js
adc
pop
mov
inc
je
clc
push
jne
push
mov
add
ds
mov
jle
scas
pop
hlt
dec
dec
mov
outs
pop
ficomp
iret
fild
arpl
mov
ret
jge
hlt
outs
or
popa
mov
loop
std
psrld
pusha
pop
rol
xor
push
mov
stos
test
(bad)
into
stos
add
std
adc
adc
std
aad
mov
jle
fs
fild
jge
int3
pusha
jecxz
pop
push
addr16
mov
pop
or
dec
into
jo
sub
lahf
shl
cmc
or
xor
sbb
xlat
mov
fild
test
bound
bound
dec
jecxz
cmp
or
(bad)
xor
cmps
jl
push
test
xor
pop
ror
or
jle
add
mov
push
adc
cmp
cmps
fwait
ret
sub
test
xchg
out
sbb
aad
xor
das
push
mov
xchg
loopne
cmps
call
add
jp
aaa
ds
xor
mov
test
ins
mov
xchg
stc
dec
and
dec
adc
lds
fs
mov
push
lods
add
pop
mul
fst
dec
(bad)
jge
fsub
xchg
fdivrp
jmp
cmp
inc
mov
nop
mov
inc
pop
sbb
mov
inc
sbb
mov
push
in
in
out
pusha
and
mov
inc
push
sar
mov
xchg
mov
test
icebp
popa
stos
sub
sbb
inc
mov
aad
add
cld
push
add
add
mov
mov
daa
rcl
mov
xlat
dec
inc
sbb
pop
xor
cmc
or
icebp
cmp
or
lock
cld
mov
daa
dec
sub
xor
push
stc
sbb
xchg
mov
dec
add
shl
mov
mov
push
fwait
repnz
push
add
adc
mov
pop
push
push
test
fisub
adc
cmps
scas
es
out
shl
dec
scas
inc
inc
xor
mov
sbb
sbb
mov
and
mov
mov
in
inc
push
cmps
mov
inc
add
loopne
sub
xor
or
xor
jnp
test
jmp
sub
inc
in
lahf
imul
fimul
aas
test
outs
mov
fstp
xchg
aaa
sbb
xchg
xor
sbb
fsubr
test
push
pop
pop
xlat
sahf
loop
push
fcom
dec
jae
dec
adc
dec
mov
add
std
or
sbb
cmp
inc
leave
xchg
jbe
jmp
(bad)
or
cmps
ret
mov
xor
jne
bound
int
sti
push
sbb
and
cmp
push
mov
popa
lods
sub
fs
adc
clc
cli
xchg
sbb
cmp
jae
cld
adc
dec
and
(bad)
in
add
or
icebp
fs
xor
cmovg
(bad)
dec
adc
enter
push
das
fwait
pop
mov
inc
xor
fidivr
or
sub
ss
inc
mov
in
jne
mov
out
pushf
sbb
cmp
mov
mov
and
push
data16
outs
pop
test
outs
int
jmp
in
mov
adc
cmps
jge
shl
lahf
or
or
jle
rcr
ds
dec
push
cli
loop
fcompp
call
mov
adc
and
dec
leave
div
mov
dec
xchg
inc
pop
fistp
stc
int3
test
mov
dec
pusha
clc
pop
pop
sub
fisub
or
dec
sar
inc
(bad)
(bad)
mov
push
or
loopne
mov
add
push
cmp
inc
push
(bad)
push
(bad)
mov
adc
xor
daa
mov
jmp
mov
dec
(bad)
daa
retf
icebp
or
(bad)
jns
mov
jns
ret
sbb
jb
mov
jnp
mov
leave
ins
mov
popa
std
cmp
mov
test
xchg
mov
(bad)
and
stos
sbb
lock
in
dec
js
cmp
cli
in
pop
movs
or
loop
sbb
xor
and
push
mov
add
xchg
test
cmp
or
iret
adc
mov
daa
(bad)
inc
retf
jno
adc
mov
xor
inc
xor
push
pop
je
lock
out
add
add
mov
out
dec
mov
sti
cli
push
pushf
div
cmp
les
into
add
inc
ds
cmp
in
shr
adc
cdq
sbb
fnsave
sbb
mov
sbb
js
jg
push
jno
push
mov
fwait
enter
mov
or
cmc
lods
or
adc
or
in
das
or
adc
outs
xor
adc
(bad)
adc
dec
scas
shl
(bad)
les
rcr
adc
cwde
xor
jnp
mov
cli
inc
cmp
push
lahf
push
scas
(bad)
jle
rcr
in
sub
mov
dec
stos
pop
rol
shr
and
mov
jbe
in
out
sti
inc
push
shl
cdq
arpl
push
rcr
sbb
inc
mov
xor
ins
loopne
pop
imul
fs
loope
arpl
pop
inc
jg
or
ins
fs
xor
or
sub
jb
or
fs
inc
xor
sahf
add
mov
(bad)
inc
cs
and
inc
push
arpl
inc
add
(bad)
hlt
in
xchg
dec
cmp
jo
iret
loop
sti
sub
rcl
outs
or
je
and
sub
leave
mov
add
mov
lods
mov
mov
outs
out
cmps
bnd
das
stos
jno
sub
or
ss
fst
(bad)
retf
dec
loop
cmc
or
mov
ds
mov
(bad)
ficom
pop
pop
add
xchg
push
adc
test
cli
adc
fmul
out
sub
clc
jg
es
adc
sub
addr16
loopne
lea
adc
mov
loopne
cdq
push
and
rcr
push
fisub
ret
scas
cmps
and
mov
lds
(bad)
xor
dec
call
jo
mov
or
lds
sub
shl
xchg
stc
cmc
fisubr
stos
mov
push
aas
adc
xchg
sbb
pop
jb
mov
jns
aad
(bad)
cwde
cmps
repnz
add
cwde
mov
mov
mov
icebp
or
rep
mov
scas
je
ret
jnp
gs
mov
cwde
push
pop
mov
mov
adc
or
stos
out
and
ins
out
in
int3
les
mov
jmp
adc
test
and
pop
mov
inc
cmc
inc
mov
xchg
dec
mov
xlat
mov
mov
mov
addr16
icebp
shr
inc
lds
fwait
inc
fwait
scas
xchg
jp
pop
jge
pushf
push
test
sub
out
push
jmp
push
mov
clc
xor
movs
inc
sbb
cmp
or
add
mov
adc
pop
push
in
inc
mov
jno
inc
jmp
jp
push
std
into
jle
fild
add
jp
jno
daa
sub
cwde
push
cmp
les
jmp
lea
js
retf
aaa
int3
inc
adc
sub
mov
mov
and
out
(bad)
pusha
xor
mov
repnz
sub
pop
push
xchg
inc
cdq
fild
fdiv
or
inc
mov
and
stos
mov
mov
xor
dec
mov
sub
sbb
pop
jl
jae
pop
aam
sub
jmp
jae
cwde
and
inc
pop
loopne
jo
sub
sub
pushf
into
xchg
adc
jno
mov
or
and
pop
adc
aaa
in
xor
fst
hlt
div
mov
ins
xlat
lods
jmp
call
cmps
enter
in
sub
addr16
pop
ret
or
add
sbb
push
cmp
out
dec
repnz
into
loop
es
dec
ds
fnsave
xor
push
jbe
sti
jmp
mov
mov
icebp
and
sub
cld
inc
div
push
fcmovne
pop
xor
mov
pop
cmp
sbb
jmp
jmp
add
cmp
cmc
inc
sub
pop
xchg
add
sbb
iret
aam
mov
or
sub
aam
or
ins
or
mov
or
and
push
cmps
jmp
aaa
xor
clc
sbb
xor
mov
xlat
jp
or
xor
cmps
pop
cmp
(bad)
mov
and
push
jb
xor
jp
mov
pop
cmp
adc
or
xor
test
mov
xchg
add
outs
nop
imul
sbb
xor
jnp
and
cwde
loopne
sbb
or
add
xchg
cmp
clc
lock
push
mov
mov
in
(bad)
pop
pop
ficomp
sbb
xor
(bad)
std
and
call
push
add
inc
fisttp
pop
sti
out
ins
add
inc
pop
or
inc
leavew
lds
mov
es
les
sbb
mov
mov
retf
data16
cli
in
jp
mov
outs
in
mov
fild
and
out
gs
xchg
mov
js
mov
or
push
xchg
xchg
popf
rol
inc
or
jo
ja
es
repz
xchg
push
sub
mov
sbb
xor
mov
int3
and
mov
jae
cs
cdq
test
std
push
dec
mov
xor
(bad)
lahf
out
jae
add
xor
add
bound
push
jb
retf
mov
stos
stos
arpl
adc
jne
loop
and
push
lods
mov
xchg
sub
jge
cmp
mov
lds
out
jg
call
mov
daa
mov
imul
push
pop
sbb
push
into
(bad)
cld
pop
inc
aam
test
pop
pop
and
neg
pop
mov
shl
cwde
push
out
adc
test
push
push
jbe
cmps
mov
cmp
int3
popa
jp
dec
mov
retf
sub
sub
cmp
out
adc
fist
mov
cli
and
fwait
mov
test
jnp
mov
icebp
mov
sub
mov
sbb
or
jl
xchg
div
sbb
mov
stc
int
leave
or
cmp
jb
pop
push
loopne
add
sub
arpl
nop
movs
push
jmp
mov
jge
push
mov
(bad)
fs
lods
(bad)
retf
cmc
pop
(bad)
mov
mov
div
dec
jmp
das
mov
inc
adc
lds
push
out
sbb
jns
pop
test
pop
push
rcl
and
jno
cmp
std
stos
or
xchg
and
and
lahf
into
call
sti
or
mov
mov
leave
lods
(bad)
ins
addr16
push
rcr
popf
sbb
xchg
mov
arpl
push
rol
cmp
cli
pop
jle
inc
cmp
inc
push
loopne
stos
bound
in
movs
lods
and
imul
sbb
adc
call
adc
cmp
bound
ins
xchg
mov
inc
(bad)
pop
dec
les
push
gs
mov
das
ds
jmp
xor
mov
imul
push
inc
mov
sub
repz
aam
fstp
cmc
test
inc
fist
mov
leave
lods
and
sar
cmps
iret
int
rcl
cdq
lods
pop
xchg
mov
js
and
lea
jg
dec
retf
sub
mov
mov
sbb
jne
outs
push
inc
test
pop
push
frstor
inc
adc
scas
fsubr
dec
fnstcw
xchg
dec
dec
(bad)
movs
std
mov
mov
xor
cmp
sub
out
stos
dec
add
xchg
outs
pmulhuw
iret
xor
mov
pop
ins
or
(bad)
jecxz
scas
lods
pop
xor
add
jge
stos
xor
in
dec
mov
xor
div
mov
add
inc
cmc
push
sar
jp
jecxz
dec
addr16
push
dec
aas
daa
sub
pop
mov
jecxz
jecxz
ret
inc
pop
mov
jecxz
pushf
xchg
mov
test
dec
sbb
rol
and
push
and
leave
jge
out
jmp
and
ror
xor
ror
sbb
call
bound
test
jno
icebp
(bad)
cdq
inc
cmc
xor
jg
adc
mov
les
lods
ror
scas
xchg
xor
inc
xchg
mov
sbb
and
cmp
inc
push
les
icebp
gs
fld
sbb
add
and
aam
jae
shr
jg
xchg
leave
rcl
(bad)
sbb
push
pop
fwait
sub
xor
int3
test
push
ins
xor
clc
push
mov
shl
test
xor
inc
mov
jle
fs
or
retf
ins
xchg
jle
push
xchg
pop
js
test
push
xchg
mov
mov
sbb
aad
push
xor
xor
mov
frstor
mov
loop
fs
repnz
jns
lods
dec
or
push
jns
int3
test
out
cmp
imul
mov
jno
hlt
stos
ret
add
ret
xor
and
jo
sahf
dec
(bad)
pushf
ins
xor
call
popa
jno
popf
aad
imul
or
cdq
pop
and
mov
adc
mov
rcr
in
cdq
dec
fcmovnu
cmps
and
push
dec
push
retf
(bad)
sbb
popf
jae
push
pop
jp
int
stc
sub
fwait
nop
jo
sbb
lahf
xchg
xor
mov
sbb
es
add
mov
and
push
int3
or
test
cli
call
sti
mov
or
mov
in
dec
mov
imul
cmp
(bad)
loope
cmps
mov
aas
in
pop
movs
movs
and
mov
pop
mov
jo
jecxz
add
popf
or
aam
xor
inc
lock
data16
cs
add
sbb
movs
bound
stc
mov
jno
das
movs
cmp
xor
sub
jmp
jmp
cmps
mov
sbb
aas
mov
ins
and
pop
push
pop
push
fdivr
jnp
int
addr16
mov
rcl
scas
mov
cmp
mov
das
mov
push
gs
xor
cmp
sub
ins
sbb
sub
icebp
dec
std
cmp
pop
lea
mov
pop
sub
mov
mov
mov
inc
sar
add
mov
cs
cmp
lock
outs
arpl
loope
fld
or
jmp
mov
mov
pop
xlat
sbb
rcr
inc
sbb
push
add
pushf
imul
movs
or
adc
jae
inc
cmp
pop
adc
xchg
int3
push
xchg
push
lds
add
xchg
stc
test
xchg
scas
rcl
or
in
push
jecxz
add
in
cmp
cmp
push
xchg
leave
adc
sar
dec
inc
lods
dec
js
jnp
jmp
cmp
push
jge
ficom
out
les
dec
push
out
adc
jns
and
loope
sbb
ret
hlt
add
mov
sub
xor
outs
jp
pop
pop
stos
xor
ficomp
xor
jo
xchg
sub
push
popa
push
(bad)
or
icebp
ds
adc
movs
loop
sbb
inc
std
add
mov
lds
xor
jmp
jnp
dec
cmp
add
and
jmp
pop
sbb
xchg
lods
jo
repnz
push
add
mov
sti
push
test
pop
push
addr16
or
dec
mov
mov
in
xchg
dec
push
sub
or
mov
cli
inc
test
(bad)
in
imul
sahf
data16
xlat
and
stos
inc
push
adc
dec
cmp
pop
popf
xor
cli
ret
add
lock
stos
mov
enter
test
std
pop
mov
jecxz
leave
push
push
out
pop
fwait
push
mov
cdq
push
sub
fld
adc
jg
loop
inc
out
cmp
sub
mov
imul
dec
and
mov
xchg
enter
pop
push
in
loope
(bad)
das
ficomp
in
das
lds
mov
mov
mov
push
push
xchg
bswap
add
adc
nop
xor
jne
xchg
and
ret
pop
mov
mov
cli
xchg
inc
inc
pop
add
outs
xchg
pop
clc
pop
cs
sub
lahf
cdq
ins
fsubr
lds
clc
retf
add
daa
mov
jl
leave
jo
mov
push
test
std
add
mov
push
xor
sbb
inc
cmp
clc
inc
xchg
div
add
cdq
call
mov
adc
hlt
xor
cmp
adc
push
mov
outs
pusha
xor
or
sbb
std
dec
stos
xchg
(bad)
sbb
jmp
loopne
dec
sbb
adc
cdq
into
adc
sub
stos
mov
fnop
xor
jmp
fimul
sahf
hlt
inc
std
call
mov
les
pushf
js
push
(bad)
in
sub
data16
arpl
push
inc
scas
jge
lods
(bad)
retf
les
mov
and
push
jp
xor
out
loopne
in
sti
gs
dec
xchg
in
sbb
mov
mov
cmp
sar
loope
adc
inc
fwait
xor
sar
dec
out
xor
mov
xchg
adc
mov
lahf
adc
int
sti
xchg
mov
cs
dec
in
fidiv
pop
pop
jl
out
call
cmp
pop
popa
mov
jg
jbe
aaa
ja
mov
jne
mov
xor
jne
mov
inc
pop
lock
xchg
mov
and
sub
jge
xchg
sub
in
fisubr
cli
aam
push
lahf
data16
adc
cs
jl
mov
in
jl
fild
pop
mov
push
xchg
in
jnp
sbb
pop
test
jae
and
das
pop
shl
or
sub
push
mov
popa
pushf
xor
jp
out
cmp
mov
fst
sbb
test
jecxz
pop
mov
push
mov
xor
sbb
pop
mov
dec
fs
or
add
clc
into
push
jp
div
stc
adc
movs
dec
lds
fnstenv
js
adc
in
adc
cmps
pop
test
test
scas
leavew
jge
add
nop
and
inc
popf
dec
loop
sub
jnp
dec
adc
or
jl
mov
fwait
inc
retf
mov
test
sbb
sahf
xor
or
cmps
inc
repz
shr
stos
push
pop
test
and
aam
push
pop
sbb
stos
lock
clc
sbb
test
out
fsubr
inc
pop
xor
sbb
ret
bound
jge
(bad)
not
out
sub
(bad)
cmps
stos
leave
(bad)
sbb
sbb
arpl
loop
test
mov
ret
sbb
push
push
xchg
xchg
push
pop
movs
in
js
je
mov
xor
fstp
les
aam
or
ret
sub
jnp
mov
addr16
mov
xchg
xchg
test
imul
sbb
add
cmp
je
xchg
jnp
xchg
popf
fisubr
jns
cld
pop
pop
jg
out
loop
test
add
push
frstor
arpl
dec
sahf
cmp
(bad)
pop
stc
(bad)
cmp
pushf
sub
retf
data16
add
movs
rcl
pop
xchg
jge
jne
shl
loopne
neg
aad
jns
popf
pop
rol
pop
(bad)
les
push
xor
ror
cmc
cs
mov
sub
pop
fstp
mov
nop
mov
addr16
xor
out
adc
push
aaa
psubsb
mov
fsubr
jo
rcl
fs
sbb
and
or
xchg
sahf
and
retf
fisub
dec
push
ret
inc
je
test
es
push
dec
nop
imul
pop
pop
nop
or
mov
lods
and
lds
into
stos
sub
(bad)
gs
ja
pop
aam
mov
push
scas
aam
mov
fisttp
call
jbe
fcmovb
(bad)
pop
pop
mov
jmp
xchg
cmp
stos
add
test
rol
and
(bad)
je
and
lock
sbb
fstp
cs
or
cmp
mov
sbb
adc
or
cmps
lahf
inc
sub
inc
sbb
mov
xor
add
loop
sub
scas
lods
mov
xchg
push
xor
dec
xchg
mov
mov
lahf
cmp
push
cmp
jp
(bad)
jnp
and
xchg
add
sub
cmp
shr
popf
add
sbb
sbb
jns
push
ins
jmp
pop
psubd
shl
icebp
aam
mov
das
xchg
sbb
sub
cmp
imul
int3
inc
fiadd
sub
imul
push
and
enter
lods
jecxz
scas
pop
cwde
push
aam
xor
(bad)
ss
push
iret
pop
scas
(bad)
leave
ret
hlt
push
outs
sub
dec
and
(bad)
pop
ret
pop
xor
jge
sbb
xor
fdiv
loop
mov
pop
ret
add
(bad)
out
imul
push
data16
xchg
or
sub
dec
fbstp
mov
js
sub
or
jmp
adc
mov
scas
movs
into
xchg
sbb
cmc
pop
jp
add
cmps
push
in
fnstcw
add
mov
pushf
add
out
inc
leave
jmp
nop
inc
dec
mov
bound
jne
pop
dec
ins
out
fiadd
fcmovne
outs
adc
cmp
ja
add
out
jno
mov
pop
cmp
or
les
ja
mov
mov
mov
or
xor
cwde
xor
popf
mov
sub
arpl
repnz
cli
lods
nop
push
gs
outs
inc
imul
retf
cmp
(bad)
and
cmp
jno
push
or
sub
enter
jecxz
or
lock
sbb
or
mov
or
leave
in
popf
fs
pop
cmp
xchg
pusha
lahf
in
jg
ins
nop
fdiv
not
movs
push
lea
nop
iret
cmp
xchg
push
jbe
pushf
dec
fild
dec
sbb
and
xor
idiv
call
iret
loopne
pop
movs
stc
cli
adc
xchg
jns
movs
(bad)
mov
push
ror
out
jnp
push
mov
mov
rcl
dec
cli
cmp
psubb
mov
seto
ret
lock
push
mov
out
scas
icebp
ss
mov
jmp
and
mov
sar
pop
sbb
arpl
popf
pop
je
stos
in
mov
test
or
je
mov
rol
jle
or
cmp
call
ins
rcl
and
inc
sahf
mov
rol
jg
test
push
cmp
or
inc
(bad)
lds
outs
hlt
mov
push
idiv
or
cmp
mov
dec
xlat
inc
inc
sbb
aam
into
inc
jge
or
(bad)
clc
push
or
pop
loopne
test
jne
out
and
hlt
dec
sar
fnsave
and
jge
loopne
jl
cmp
adc
jmp
paddb
es
fxch
and
jl
repz
sub
(bad)
jmp
jne
adc
xor
push
and
xchg
mov
xchg
and
xchg
adc
and
pop
stos
mov
mov
mov
stc
jp
push
mov
aam
outs
out
in
xchg
or
cmp
mov
push
push
retf
adc
mov
pusha
mov
mov
xchg
and
dec
fadd
jp
vpmovzxwq
jae
in
(bad)
(bad)
mov
outs
adc
jmp
pop
dec
mov
sahf
jnp
jmp
out
jge
xchg
mov
mov
stos
pop
sbb
push
push
dec
cmp
inc
add
aad
cld
mov
outs
lahf
icebp
push
and
push
ret
or
cld
and
jnp
pop
push
out
push
inc
jmp
arpl
jecxz
cmp
adc
imul
shl
push
jns
data16
sbb
ja
pop
dec
pop
mov
sahf
in
jo
fist
push
fidivr
xchg
pop
cmp
add
xor
hlt
cmp
push
push
out
xor
or
mov
ret
mov
gs
jp
jne
pop
ret
(bad)
cli
cs
and
and
jo
aad
jo
shl
pop
stos
pop
fs
dec
mov
xor
out
call
sar
cli
loopne
add
add
inc
jmp
sbb
jb
adc
jne
imul
iret
or
popf
jo
leave
cmps
cmps
rcl
imul
iret
cmp
fs
jnp
adc
cmp
out
mov
shl
sbb
inc
and
repz
sub
jg
xchg
fnstenv
mov
ret
mov
mov
mov
daa
repnz
add
arpl
sub
out
and
push
jmp
mov
xchg
sub
xchg
cmp
into
mov
jns
pop
jnp
mov
or
dec
xchg
arpl
mov
xor
sar
cmc
cdq
dec
xor
fadd
(bad)
jmp
gs
mov
ja
stos
jmp
xchg
sbb
jmp
sub
jg
dec
sahf
push
sub
mov
mov
movs
call
sahf
call
(bad)
in
in
loopne
loop
in
test
out
fcomp
sub
dec
mov
jp
inc
jnp
daa
call
mov
call
xor
or
xchg
shl
out
dec
inc
fdivr
nop
jecxz
sub
mov
scas
xchg
fbstp
xor
xchg
dec
xor
cmp
xor
adc
sahf
or
xor
or
add
inc
mov
sub
pushf
mov
aas
pop
rcr
mov
or
or
ss
sub
loopne
lods
mov
xchg
mov
rcr
dec
out
fiadd
pop
adc
push
jp
sbb
hlt
out
rol
mov
fldcw
cmps
scas
xchg
stc
mov
sbb
loopne
outs
fs
aas
add
xor
or
jg
ds
push
(bad)
lods
ss
inc
adc
jmp
(bad)
or
mov
in
test
push
sub
xor
and
loop
or
mov
rcr
enter
lea
adc
movs
push
es
dec
ds
fild
sbb
jns
std
xchg
test
and
mov
mov
jne
jg
call
(bad)
movs
(bad)
in
mov
jge
loop
cmp
mov
(bad)
pop
cmp
sub
rcr
das
jg
loop
add
sub
xlat
pop
push
push
sub
push
mov
jns
test
into
xor
jno
mov
dec
mov
xchg
lods
call
fnsave
mov
inc
jecxz
adc
out
lods
mov
or
pop
daa
pop
xor
lods
sub
repz
inc
mov
sbb
pop
xor
jmp
lock
das
or
or
mov
icebp
add
mov
mov
jbe
aaa
xor
sbb
aas
inc
push
mov
xchg
lds
mov
sbb
pop
xlat
sbb
cmp
loope
repnz
sub
bound
push
(bad)
sub
inc
sub
das
or
and
std
sub
push
out
cli
fdivr
cmps
fiadd
cld
fdiv
mov
ss
xchg
in
mul
test
adc
nop
stos
repnz
rol
mov
fdiv
xchg
add
adc
add
nop
cld
dec
xchg
scas
or
movs
mov
mov
jg
(bad)
aas
test
clc
or
mov
loope
mov
ret
inc
sti
and
push
scas
shr
or
mov
scas
rcl
mov
leave
std
aam
sub
scas
or
and
int3
jl
movs
xor
push
push
in
movs
mov
add
ret
or
mov
call
scas
outs
sub
dec
adc
mov
fwait
xor
adc
fistp
mov
sub
je
test
and
mov
shr
pop
lods
iret
mov
mov
add
in
(bad)
cmp
jge
arpl
fnstsw
fistp
xchg
or
jmp
retf
xor
adc
jne
scas
cmp
push
sbb
leave
pusha
jne
js
sub
jno
pop
cmps
cmc
out
mov
or
fild
test
jecxz
push
mov
sub
sub
mov
in
inc
pop
inc
test
into
pop
imul
xchg
cmp
sbb
cli
jmp
mov
mov
xchg
adc
push
and
sub
mov
and
inc
push
inc
xor
out
(bad)
jnp
xchg
push
inc
scas
les
data16
dec
or
ja
lea
cmps
push
inc
ss
test
jecxz
pop
push
rcl
dec
jns
iret
or
mov
sbb
(bad)
ins
xchg
mov
sub
dec
pop
cmp
sahf
in
push
retf
scas
and
mov
inc
push
mov
add
push
dec
(bad)
pop
mov
inc
outs
cmp
pop
gs
(bad)
lods
hlt
mov
test
call
clc
jmp
repnz
pop
(bad)
fwait
cmp
add
lods
jl
and
jns
iret
sbb
mov
loop
jge
mov
pop
ja
fcomp
dec
inc
mov
mov
dec
imul
and
inc
xor
int
push
pop
je
push
int3
sub
rdmsr
xchg
outs
shl
aaa
sub
jae
ja
mov
sub
shl
push
(bad)
loope
add
fsubrp
pop
ret
(bad)
fisub
loopne
mov
loope
mov
jns
xor
jae
inc
shr
ja
push
jl
fwait
add
mov
out
sbb
pop
cmp
mov
sti
mov
ja
push
push
sbb
mov
xor
mov
lahf
mov
fdivr
mov
ja
data16
(bad)
mov
or
push
int
rcl
mov
mov
xor
push
add
add
add
push
mov
loop
into
adc
pop
ins
mov
enter
fwait
shl
sub
in
scas
enter
pop
call
mov
sub
lahf
and
push
sar
popa
inc
(bad)
out
sbb
cmp
mov
sbb
fsubr
in
ss
inc
(bad)
sbb
fsubr
inc
std
mov
sub
xchg
dec
out
sbb
outs
sar
daa
ret
cs
pop
cmovs
jbe
mov
daa
mov
dec
call
movs
popf
inc
in
out
popf
clc
out
ret
sbb
or
pop
(bad)
push
jg
ins
pop
xchg
movs
aaa
sbb
sub
mov
in
sbb
cmp
cmp
jae
cmp
mov
cdq
jns
xchg
sub
mov
in
retf
push
cmps
sbb
fild
push
mov
mov
jle
sbb
mov
std
cmc
push
(bad)
fistp
ret
xchg
in
add
lock
sub
idiv
std
jg
jp
jmp
loope
add
sbb
push
fldenv
cmc
cmp
dec
sti
test
(bad)
or
sbb
fnstenv
lods
lds
clc
dec
or
jae
push
test
xchg
and
xor
pusha
and
pop
jge
push
(bad)
nop
es
jns
daa
in
adc
mov
push
ins
and
imul
and
push
iret
int3
push
iret
scas
test
push
jb
sbb
xor
jb
inc
iret
retf
dec
ret
ins
push
ins
fistp
cmp
shl
imul
xor
inc
std
mov
cdq
ins
dec
aas
dec
jo
or
pop
cmp
inc
add
mov
pop
or
xor
icebp
cmc
add
and
dec
and
mov
inc
or
pop
cmp
jecxz
mov
inc
jns
sahf
ja
lods
add
dec
inc
sbb
je
mov
lods
xor
jecxz
xchg
fsubr
cwde
push
push
es
jnp
je
push
aas
adc
push
dec
clc
leave
or
pop
hlt
test
mov
stc
jp
loopne
inc
push
jmp
stc
xchg
test
dec
fdiv
rcl
dec
xchg
dec
loope
js
mov
adc
jns
pop
call
cli
push
dec
lods
xchg
mov
jge
inc
xchg
cwde
fsqrt
inc
icebp
ret
push
ds
popa
lock
push
sbb
jbe
popa
int
lock
stos
adc
xchg
adc
int3
push
cmp
cmps
sbb
dec
cdq
xchg
fcom
push
daa
mov
pop
add
scas
sti
leave
aas
sbb
jmp
aad
jo
push
stos
into
(bad)
jmp
sub
pusha
sti
mov
push
jp
jg
xchg
lods
movs
or
retf
rcr
mov
inc
sbb
mov
fiadd
fcmovnb
in
mov
dec
scas
add
fisttp
js
loop
fsubrp
test
jecxz
and
push
inc
arpl
or
aaa
jmp
inc
scas
fcomp
neg
inc
push
adc
push
test
test
out
inc
lahf
sub
dec
lods
push
jmp
scas
jo
mov
int3
adc
mov
or
call
adc
dec
push
xchg
lock
out
lds
out
cdq
bound
sar
inc
mov
shr
(bad)
push
outs
fisub
popa
push
(bad)
clc
push
xor
mov
xchg
push
push
cmps
lods
or
popa
lock
and
mov
and
inc
mov
xor
repnz
xor
mov
dec
pusha
cmp
arpl
pop
jb
pop
or
repz
mov
cmp
(bad)
cs
imul
push
mov
repz
jmp
cmps
jne
inc
push
sar
mov
dec
sbb
aad
popf
fisttp
pop
and
xchg
rcr
movs
cli
dec
or
das
mov
in
ret
jecxz
adc
push
xor
mov
inc
sbb
imul
cdq
add
ret
sub
fdiv
rcl
(bad)
xlat
add
cmp
mov
xchg
mov
push
and
inc
adc
jge
mov
movaps
(bad)
fsubr
fwait
sub
mov
inc
inc
sub
add
test
mov
push
loop
sbb
or
(bad)
xchg
fidiv
sbb
pushf
cdq
ficom
gs
pop
(bad)
int
mov
push
daa
(bad)
(bad)
ror
jns
popf
mov
(bad)
xchg
cmps
or
das
mov
dec
adc
inc
aad
mov
in
lds
cmps
jge
inc
mov
frstor
sub
xor
sti
dec
loopne
sub
repnz
fld
imul
(bad)
and
ret
outs
cmp
add
sbb
xor
push
loop
nop
(bad)
jp
xchg
push
das
(bad)
loopne
out
jbe
jae
dec
aas
mov
inc
inc
shl
push
or
push
adc
or
xchg
or
fisub
loop
pop
add
xor
test
mov
inc
sub
dec
jmp
shl
cli
test
stos
sbb
cld
loop
(bad)
mov
jns
fs
jecxz
jbe
cmps
nop
sbb
mov
xor
imul
add
into
lea
ss
imul
mov
scas
div
clc
jg
xchg
and
out
shl
cmove
pop
outs
retf
adc
rol
xchg
and
add
push
push
ret
daa
test
inc
and
rcl
retf
push
js
ja
mov
sahf
pop
jl
icebp
pop
ins
scas
pop
or
dec
scas
popf
retf
add
xor
cmc
jp
mov
jnp
hlt
(bad)
cmp
(bad)
in
daa
add
mov
mov
mov
mov
dec
shr
loop
dec
call
movs
dec
mov
mov
mov
in
ins
ficomp
in
add
mov
or
mov
les
nop
(bad)
jno
scas
sahf
ins
and
jb
or
or
pop
ror
push
mov
clc
std
push
add
jmp
in
pop
loop
in
sar
xadd
mov
pop
dec
and
and
mov
fist
int
dec
xchg
repnz
div
jns
and
ret
in
mov
lods
cmc
xchg
mov
push
fidiv
lds
pop
test
mov
cdq
jbe
sbb
mov
inc
fbstp
leave
sbb
mov
loop
repnz
cwde
sub
inc
fisttp
and
pop
add
jae
into
rol
pop
in
push
and
xchg
jmp
xor
dec
pop
jg
jns
xor
sub
dec
jmp
push
xor
add
stc
mov
dec
cmc
xlat
xchg
pop
in
pop
sahf
inc
pop
and
cmp
dec
rcr
mov
cmps
movs
loopne
out
pop
cmp
icebp
inc
mov
push
push
sahf
je
add
les
out
add
inc
or
inc
mov
aas
(bad)
jecxz
aaa
jnp
mov
lods
(bad)
fisttp
or
movs
sti
xor
into
xlat
and
cmp
aam
inc
mov
sub
addr16
lock
inc
lock
sub
mov
mov
pop
jg
adc
sti
outs
ret
out
imul
or
mov
popa
imul
jns
jl
and
mov
(bad)
cld
push
(bad)
(bad)
mov
ret
and
(bad)
or
mov
push
pusha
xor
fnsave
fwait
mov
dec
dec
fs
cmps
fwait
mov
pop
adc
clc
adc
lods
into
add
push
and
push
or
push
sar
ficomp
ror
shr
cmps
xor
into
cmp
jge
ds
hlt
push
mov
mov
ror
sub
pop
outs
mov
retf
daa
mov
inc
test
gs
xor
jns
inc
mov
mov
add
jmp
mov
je
xchg
xor
mov
dec
repz
xchg
iret
dec
fcmovnb
sub
popa
mov
adc
sub
inc
stos
test
jmp
push
fidivr
mov
shl
or
ja
pop
rcl
lea
inc
and
shl
mov
call
scas
fdivr
ret
test
stos
popf
pop
fadd
push
loope
imul
or
mov
and
sub
inc
jl
sbb
adc
or
xchg
call
fwait
enter
and
outs
mov
leave
repz
cmc
mov
int
inc
pop
xor
fiadd
jmp
pop
enter
in
mov
push
jp
add
scas
mov
or
pop
mov
in
clc
jne
aam
and
popf
push
mov
jns
lahf
out
mov
test
inc
sbb
sbb
adc
in
xchg
in
(bad)
out
sbb
adc
jl
add
cwde
mov
shr
rcr
xchg
fisub
daa
mov
imul
adc
fcmovb
scas
cs
inc
push
xor
pusha
scas
push
out
add
add
pop
mov
ss
cmps
fwait
sub
das
clc
sub
stos
and
int3
mov
add
jae
popf
inc
arpl
mov
ds
mov
call
xor
push
push
sti
mov
in
mov
push
test
xchg
scas
sub
xchg
not
cld
sbb
inc
not
(bad)
or
scas
movs
in
sbb
loopne
test
fadd
pop
dec
jb
and
jg
jo
fimul
xlat
xchg
ja
imul
int
and
rol
cmp
xor
adc
and
push
(bad)
push
test
push
jle
loop
pmaddwd
jmp
bound
stos
mov
or
enter
mov
pop
sbb
loope
mov
or
fistp
dec
inc
xor
or
pop
nop
mov
cwde
mov
sti
mul
ds
mov
jbe
lods
sub
(bad)
jl
add
xchg
out
js
cld
(bad)
push
div
pop
retf
xor
movs
push
ds
push
sbb
fs
jg
pop
mov
test
lods
movs
cwde
push
ja
mov
fidiv
shl
jnp
or
mov
push
(bad)
dec
int
loopne
sbb
xor
icebp
mov
mov
cmc
xchg
pop
or
mov
dec
wbinvd
sub
ret
imul
mov
push
enter
fistp
data16
or
daa
inc
add
inc
mov
push
mov
shl
push
cdq
mov
int
shl
(bad)
stc
xchg
pop
fadd
or
mov
in
push
inc
(bad)
jmp
lods
add
ja
das
mov
int3
and
iret
sar
inc
ror
push
aam
cmp
(bad)
jnp
into
dec
ret
into
nop
mov
(bad)
loop
int
dec
cdq
push
loop
outs
int3
xchg
fmul
cmps
jg
ror
pop
loop
add
retf
cmc
push
call
mov
push
mov
push
fwait
pop
cwde
enter
cmp
jb
pop
int3
fst
movs
push
ja
xchg
ins
cmps
ret
add
fimul
sub
inc
mov
mov
jbe
hlt
add
cli
inc
repnz
out
xor
and
cmp
dec
push
mov
rcr
es
xor
inc
nop
stc
mov
fimul
mov
stos
jne
push
movs
pop
rcl
jge
dec
add
dec
ins
sar
call
je
cmc
das
std
dec
cmps
scas
shl
cs
stos
cli
fnsave
pop
int3
sub
jo
lods
xor
pusha
leave
pop
ror
into
lds
push
mov
fcmovu
pop
aas
in
inc
not
xchg
mov
or
popf
xchg
aas
and
rcr
arpl
in
lods
inc
jmp
mov
xchg
cmps
xor
sbb
dec
sbb
dec
emms
add
cli
xlat
dec
add
mov
inc
repz
mov
push
test
or
pop
lea
es
sbb
mov
xchg
in
mov
test
int3
shl
lods
stos
pop
sub
out
push
loopne
jl
mov
fwait
js
aaa
xchg
test
ficomp
sbb
jne
or
nop
in
push
mov
pop
test
dec
push
cdq
or
fcom
jae
lods
mov
outs
jno
fs
int
pop
adc
sbb
stos
pop
pop
mov
jno
jmp
jbe
push
mov
jb
stos
aaa
add
sbb
cs
add
push
sbb
inc
jbe
fisttp
xchg
sbb
pop
dec
cmp
mov
popa
sbb
sbb
or
rcr
(bad)
sub
ja
fwait
ret
sbb
aas
xor
jge
mov
xor
adc
ss
pop
popa
clc
pop
xchg
aas
icebp
xor
mov
sbb
xor
adc
scas
mov
or
imul
movs
dec
ds
dec
idiv
test
fucom
mov
and
test
push
popf
loope
and
pause
mov
cmp
pop
cwde
imul
arpl
or
sub
push
movs
and
push
mov
dec
xchg
test
push
loop
pop
je
xchg
xchg
mov
or
mov
ins
(bad)
dec
jg
inc
gs
push
icebp
not
jecxz
shl
addr16
or
xchg
push
bound
dec
aaa
lea
jle
mov
cmc
add
and
mov
in
cmps
loop
cli
scas
jmp
jmp
mov
lods
ja
sbb
cmps
cmp
imul
mov
xor
sahf
popf
ds
jle
lods
mov
cmps
and
jp
fwait
popa
pop
push
stos
inc
outs
test
push
mov
add
js
jae
call
ja
pusha
call
out
push
or
xlat
test
mov
dec
mov
fdivrp
bound
arpl
test
jl
xor
or
cs
xchg
out
cmp
mov
nop
adc
mov
repz
jnp
cmps
aad
adc
movs
sub
fstp
cmc
addr16
dec
pop
std
cmp
data16
mov
fsubr
xlat
push
pop
add
xchg
lods
mov
mov
pop
lahf
push
pusha
dec
xchg
mov
into
outs
lock
iret
jmp
jno
push
rcr
push
dec
mov
or
ja
adc
mov
add
adc
ret
mov
ret
mov
mov
xchg
or
mov
pop
movs
xchg
mov
or
and
and
push
sar
pop
and
xor
int
jbe
mov
sub
push
sub
ret
dec
outs
cld
inc
fsub
push
sar
and
add
and
shr
scas
mov
int3
sub
pusha
fiadd
pop
mov
add
jbe
dec
rcr
data16
jle
stc
je
lahf
dec
add
or
outs
or
repz
jbe
jns
ins
mov
ficom
or
sub
mov
adc
fild
jbe
add
sbb
movs
popf
cmps
test
scas
or
add
xor
xchg
cmps
cdq
push
ror
orps
xchg
cmp
jae
out
xlat
imul
inc
es
je
imul
(bad)
rcr
ret
dec
sbb
fstp
push
mov
sub
jne
pop
cmp
(bad)
xor
push
fist
scas
mov
push
mov
mov
sti
sub
data16
dec
xchg
mov
iret
jae
add
not
jns
movs
or
cmps
and
rcl
mov
mov
inc
mov
mov
test
mov
sbb
push
sub
and
mov
fsub
add
pusha
or
pop
shr
ficom
fimul
sub
outs
js
aam
fisubr
inc
fadd
lods
fdivr
lods
xchg
add
xor
inc
push
mov
and
test
cmps
mov
fdivr
mov
jb
cdq
xchg
mov
xor
cmp
push
sub
div
xor
addr16
and
int
(bad)
push
or
and
es
loopne
loopne
std
adc
mov
cdq
cmc
nop
es
sub
bound
sbb
and
call
and
sbb
loope
test
xchg
repnz
jle
add
pop
push
sub
rcl
or
rcr
jo
jp
mov
fsub
push
fmul
shl
mov
pop
push
outs
mov
(bad)
mov
arpl
pop
dec
int3
mov
and
nop
dec
inc
dec
lock
mov
dec
leave
adc
retf
sti
stos
xchg
in
adc
cmps
addr16
mov
jecxz
mov
sahf
ret
mov
dec
cld
mov
inc
mov
out
ret
jb
sub
and
sub
pusha
lea
das
and
das
out
or
movs
add
test
mov
pop
jb
xor
xchg
aas
push
test
shr
cmps
or
mov
aam
lea
sub
nop
pusha
xchg
fisttp
or
add
xor
call
nop
loopne
xor
iret
scas
dec
inc
loope
mov
cdq
addr16
js
imul
ret
xchg
lahf
mov
repz
movs
push
pop
adc
cld
ss
pop
dec
out
int3
popa
dec
add
pop
dec
xlat
pop
inc
stos
scas
neg
inc
dec
not
mov
std
xchg
mov
xor
push
dec
dec
(bad)
cs
repz
mov
pop
pop
rcl
adc
pop
mov
adc
leave
push
mov
hlt
pop
bound
(bad)
(bad)
rcl
inc
push
push
mov
push
sub
sub
dec
dec
mov
pop
je
mov
shr
mov
or
bnd
out
stc
mov
icebp
dec
xor
sbb
jmp
inc
sti
xor
push
test
inc
mov
gs
cdq
adc
mov
xchg
inc
xor
out
pop
pop
adc
lods
jnp
and
data16
enter
or
xchg
test
popf
das
dec
movq
arpl
daa
ins
in
cmp
retf
mov
cmps
xor
repz
jo
out
pop
xchg
ins
fs
adc
ss
mov
xchg
and
xor
es
push
popf
daa
out
les
xchg
cmp
xor
pop
loope
and
jb
push
cli
(bad)
mov
mov
xchg
cmp
and
les
jo
sti
mov
inc
out
(bad)
fld
(bad)
idiv
jns
cdq
and
xchg
aad
lahf
inc
add
test
fwait
test
add
sar
xor
popf
out
sub
jp
repnz
mov
inc
add
int
neg
adc
push
repnz
pusha
rcl
mov
cdq
inc
xchg
mov
mov
rol
xor
jo
jno
fisubr
je
and
xchg
mov
and
repnz
push
popf
jl
xor
xor
imul
mov
jne
push
push
xchg
stos
cli
es
das
xchg
xchg
sti
out
xchg
xchg
into
movs
pushf
jl
add
and
push
pop
das
sub
(bad)
addr16
push
jmp
push
jae
popf
out
pop
dec
dec
lods
adc
cld
xor
jno
cdq
jmp
xor
mov
push
dec
test
jmp
call
dec
jbe
repz
xor
iret
(bad)
ficomp
movs
add
jbe
fucomip
aad
iret
fst
push
add
jne
(bad)
aam
push
hlt
dec
pop
jmp
loope
pop
ret
movs
sbb
imul
cmp
cpuid
(bad)
outs
cmp
adc
xchg
inc
push
jl
mov
dec
or
fild
cs
adc
(bad)
(bad)
sub
out
scas
cs
add
retf
jmp
jmp
mov
add
push
test
pop
and
in
dec
inc
jp
sub
pop
pop
lods
mov
sti
push
psrad
jnp
aad
cmp
cmp
add
dec
pop
cld
push
(bad)
mov
mov
rcr
adc
adc
jo
pop
cwde
jle
fadd
lea
int
mov
and
enter
sbb
mov
mov
xor
rcr
int3
iret
les
in
popf
and
loope
ins
pop
imul
push
ds
int3
fwait
dec
xor
aaa
call
int3
xor
jb
aad
sub
adc
mov
sub
jne
mov
icebp
je
mov
loop
or
fst
push
ja
call
popf
enter
push
sbb
mov
sar
lock
xchg
retf
sub
jb
fwait
das
retf
pop
fiadd
movs
ja
je
dec
addr16
and
jp
ja
mov
and
xchg
int3
push
sub
ret
sub
inc
int
ds
in
cmp
xchg
or
js
cmp
jmp
cwde
int
int3
les
dec
std
mov
mov
in
scas
mov
loop
or
jmp
sbb
jno
icebp
fcmovbe
stos
jl
pop
mov
xchg
push
sbb
fld
xchg
jle
mov
sbb
xchg
jno
movs
pop
loope
loop
dec
lea
(bad)
jg
sahf
jbe
shr
mov
imul
shl
pop
lods
fsub
div
mov
ja
out
das
ins
fcmovne
clc
cmps
out
inc
addr16
scas
mov
sub
add
adc
call
and
mov
jecxz
or
xchg
mov
add
dec
leave
shl
jecxz
sahf
push
adc
mov
sub
int3
addr16
mov
fwait
sbb
jbe
dec
xor
pop
mov
sbb
push
lea
push
xchg
pop
push
mov
xor
mov
adc
leave
jnp
hlt
add
xchg
or
fmul
adc
inc
or
xchg
pop
inc
jnp
xor
test
xchg
shl
aam
pop
(bad)
sbb
xchg
out
call
or
mov
loopne
cdq
cmp
aam
out
inc
sbb
xchg
inc
or
stos
push
div
add
pop
or
and
xchg
xchg
fistp
stos
inc
cmps
pop
fdivr
jmp
cld
loopne
push
dec
(bad)
jle
adc
jp
dec
in
(bad)
xor
sub
xchg
mov
lods
adc
or
in
push
data16
arpl
push
jp
std
lods
jo
outs
stos
repnz
mov
in
rcr
loop
inc
leave
mov
jg
inc
sbb
add
xchg
adc
rol
mov
jp
bound
xchg
mov
in
mov
xor
or
cmps
(bad)
mov
ins
mov
in
rol
sti
xor
aaa
aam
push
sar
adc
mov
jl
dec
jmp
jno
ret
popf
adc
mov
cmps
push
lods
pushf
xor
sbb
push
pop
xchg
daa
(bad)
mov
and
push
jnp
je
xchg
and
cdq
cmps
sbb
call
out
inc
adc
cmp
test
dec
mov
mov
loop
xchg
cmc
inc
mov
shl
push
jns
mov
lods
adc
xchg
mov
cmp
dec
pop
or
mov
pop
outs
or
into
gs
cmp
inc
loopne
xchg
fidiv
or
aas
test
pop
and
call
adc
ficomp
jmp
adc
adc
aam
or
xchg
mov
cmps
out
push
neg
(bad)
daa
jmp
push
xchg
pop
xchg
mov
dec
push
fwait
lock
outs
test
(bad)
(bad)
jp
mov
pop
xadd
in
mov
arpl
(bad)
fnstcw
jo
xlat
test
dec
mov
mov
mov
mov
cmc
fcomp
add
cmp
fsub
test
mov
push
xchg
adc
jg
fsubr
pop
stc
lods
cs
mov
add
iret
sbb
call
loope
cld
jg
neg
pop
lods
cmp
enter
add
jmp
mov
in
sub
popf
sti
out
jge
jge
mov
cli
sbb
and
cld
test
inc
mov
leave
xchg
cmps
sub
cmp
sub
mov
test
popf
idiv
xchg
mov
sub
xchg
jg
push
dec
inc
pop
and
and
and
adc
lock
aaa
sbb
(bad)
xlat
sub
inc
aad
shl
cmp
inc
ret
and
popf
scas
mov
lods
das
call
pusha
imul
in
sar
push
add
leave
cmp
push
bound
fcmove
jg
mov
inc
and
fisubr
xchg
cmps
mov
xor
jp
mov
lock
mov
jle
pop
and
xchg
in
jmp
inc
scas
in
mov
or
dec
fcmovbe
lahf
call
or
xchg
sbb
pusha
cmp
movs
ficomp
inc
pop
sbb
pop
pop
dec
jmp
jl
inc
aad
repz
mov
out
lods
rcr
movs
js
add
sub
and
pop
ficomp
mov
cmp
movs
jle
bound
mov
adc
dec
pop
pop
mov
enter
xchg
inc
ret
push
arpl
je
inc
push
adc
xchg
mov
xor
pop
ds
les
int3
std
dec
xor
daa
and
add
sub
jnp
call
and
scas
ror
cwde
mov
mov
std
mov
xor
push
adc
dec
and
call
push
pop
pop
mov
scas
mov
das
lock
pushf
sub
jns
cdq
(bad)
and
jmp
push
scas
push
mov
cdq
in
or
jbe
int3
(bad)
pop
(bad)
inc
cmp
pop
aas
xchg
pop
icebp
mov
mov
adc
rcr
inc
movaps
add
dec
ja
add
arpl
and
pop
push
push
add
inc
adc
std
in
lea
xchg
test
sub
cwde
call
push
outs
mov
adc
xlat
(bad)
stc
pop
xor
xchg
xor
jle
vmwrite
lods
and
(bad)
mov
enter
inc
icebp
cld
(bad)
xchg
(bad)
sbb
cmp
jmp
sbb
mov
test
sub
sbb
pop
mov
add
sbb
fidivr
push
mov
push
daa
cmps
jmp
xchg
out
test
xor
jbe
out
jo
push
fsubr
fisub
jnp
(bad)
in
inc
push
add
xchg
imul
aas
in
and
shl
mov
ror
jecxz
jmp
jecxz
cmp
mov
jl
xchg
mov
xchg
inc
or
inc
cmp
cs
fsub
add
lahf
data16
add
retf
aam
and
ror
sub
push
scas
imul
and
lods
mov
(bad)
mov
or
and
(bad)
repz
mov
enter
fwait
call
popa
mov
ret
mov
pushf
cmps
out
in
jmp
sbb
jge
sahf
ja
(bad)
out
pop
mov
cmp
xchg
cmp
inc
jmp
ins
loopne
jge
mov
mov
mov
repz
jo
hlt
or
mul
test
std
daa
xchg
nop
xor
xchg
(bad)
mov
fwait
sbb
shr
cmp
js
leave
fisub
lods
jecxz
xchg
cmp
daa
iret
xor
push
or
xchg
xchg
jne
xchg
mov
mov
gs
(bad)
jle
xchg
repz
xlat
xor
xchg
push
pop
adc
das
lock
add
or
je
shr
(bad)
and
cld
jl
setge
inc
dec
repz
or
fwait
jnp
mov
jle
ja
std
push
mov
inc
ins
push
movs
cs
int
add
xchg
jmp
fwait
cli
jno
xchg
push
test
loop
cmp
fnstenv
mov
ficom
das
cs
sub
fnstenv
fiadd
loopne
pop
aaa
xchg
push
and
fisttp
push
adc
stos
mov
pushf
mov
push
adc
sbb
jecxz
sub
bound
or
aad
retf
imul
cmp
cmp
hlt
mov
ins
mov
jge
inc
arpl
stos
adc
lds
pop
dec
dec
add
aad
rcr
nop
les
sbb
fwait
push
inc
ins
mov
fisttp
cdq
ret
dec
or
dec
aad
out
add
add
jno
bound
xchg
mov
std
mov
sub
pop
xchg
mov
movs
push
push
inc
mov
dec
jg
(bad)
mov
int3
cmp
iret
aam
xor
loopne
fist
jmp
into
inc
jne
push
sbb
inc
mov
ret
mov
inc
outs
(bad)
push
(bad)
repz
dec
mov
imul
mov
xor
repz
sub
push
and
or
aad
xchg
xchg
dec
stos
mov
sti
shl
or
je
movs
std
jp
mov
(bad)
aaa
pop
xor
fistp
loope
jg
fs
loop
outs
fsubr
lahf
out
imul
rol
jle
mov
lock
loop
movs
or
rcr
cs
retf
cld
jl
repz
scas
sbb
mov
inc
xchg
xor
rcl
(bad)
(bad)
jae
imul
push
sysexit
cs
fs
pop
faddp
fs
push
outs
cmp
inc
test
xor
sahf
and
add
jge
repnz
cmp
sbb
pop
cmps
js
leave
mov
mov
mov
fucomi
in
jge
push
xchg
rcl
mov
sub
repnz
dec
ins
stos
dec
ficomp
je
push
cmp
sar
xor
sbb
pop
mov
sbb
inc
(bad)
and
sub
pop
xlat
imul
mov
mov
call
lahf
jge
mov
add
pop
jno
pop
push
mov
jl
sub
xchg
movs
xchg
add
aas
leave
add
push
push
fadd
jbe
mov
jecxz
(bad)
ja
es
cmp
mov
push
daa
loope
xchg
test
pop
pop
lods
mov
xchg
mov
lock
loope
loopne
sbb
enter
mov
pop
mov
aam
pop
dec
jg
in
loopne
inc
jmp
hlt
push
xchg
(bad)
inc
adc
jg
push
add
ja
ss
adc
mov
pop
movs
call
pop
pop
out
xchg
retf
mov
sahf
fild
mov
xor
mov
test
call
mov
repz
pop
fild
movs
aad
movs
or
mov
out
mov
cs
stos
cmp
push
jp
fcomp
ins
es
mov
push
fisubr
lea
rcl
das
mov
sub
shr
pop
inc
inc
dec
jmp
dec
inc
push
pop
bound
imul
push
jp
lods
mov
scas
aam
lahf
mov
inc
and
cmp
xlat
jno
mov
es
(bad)
xor
(bad)
in
xchg
jae
mov
cmp
(bad)
cmps
rol
jmp
push
jp
clc
mov
fbstp
add
push
lods
mov
mov
inc
mov
xchg
or
fdivr
jmp
push
cdq
leave
pop
ficomp
lahf
imul
(bad)
sbb
xchg
or
sub
sar
jns
popf
loope
add
repz
and
cld
clc
dec
dec
jl
mov
and
cmp
stos
sub
out
xchg
movs
jmp
mov
fsubr
retf
jle
pop
dec
sub
jle
cli
iret
adc
aaa
sub
cmp
mov
cmp
ret
or
es
sub
out
dec
mov
cmps
aas
sbb
mov
ret
test
push
scas
mov
in
arpl
mov
mov
ret
jecxz
sbb
pop
fcomp
mov
daa
cmps
scas
add
imul
call
(bad)
and
bnd
jg
fmul
cmovge
enter
mov
xchg
pop
dec
xchg
outs
neg
cmp
adc
pop
xor
lods
mov
xor
das
ins
inc
inc
mov
not
cld
and
sub
adc
sbb
sub
push
fcom
or
jmp
sub
call
ret
nop
xchg
sbb
stos
dec
sub
mov
sbb
adc
lods
std
xor
adc
xor
aas
jecxz
mov
lock
loopne
js
adc
sbb
mov
jns
adc
adc
gs
aad
ret
push
vmwrite
pop
sti
test
test
les
cdq
xor
in
ret
dec
pop
lock
push
retf
test
jg
popf
pop
push
mov
xor
cmp
lods
call
mov
push
and
push
jb
jmp
jmp
xlat
(bad)
loop
mov
mov
test
push
rcr
and
sub
cld
xchg
test
mov
mov
cmc
sbb
or
ret
arpl
stc
jge
pop
dec
cmp
(bad)
xor
sbb
push
push
aam
int
mov
das
retf
stos
pop
fild
es
loop
aaa
stos
sub
push
inc
aaa
sahf
std
mov
fwait
ja
fidiv
adc
pop
or
xor
stos
ins
adc
pop
ret
scas
scas
pop
cmc
dec
or
pop
cmc
xlat
pop
inc
xchg
and
dec
cmovb
int3
call
jmp
push
inc
stc
pushf
mov
dec
mov
hlt
test
aad
retf
and
xor
mov
imul
addr16
jmp
inc
push
loopne
jne
push
mov
outs
mov
into
cmps
hlt
jbe
xor
and
cwde
daa
movs
jl
lods
and
cmps
jecxz
lds
cmp
jg
mov
sub
pop
and
cmp
inc
jmp
cmp
and
dec
cmp
pop
push
inc
mov
clc
sti
out
int3
xlat
fild
push
xchg
dec
out
adc
leave
cmps
pop
mov
popf
loop
mov
jle
jmp
fist
cmp
dec
sub
xchg
clc
cwde
mov
mov
shl
mov
mov
mov
mov
fbld
icebp
aad
das
mov
push
fisubr
jno
adc
(bad)
repz
es
jbe
and
mov
push
shl
arpl
sub
shl
in
xchg
fcmovnb
sub
or
ds
or
pop
lock
pop
or
ins
stos
fidiv
pop
loopne
retf
scas
mov
out
(bad)
movs
imul
fs
lds
jp
jge
mov
lock
rcr
sti
inc
add
fwait
add
jns
inc
fwait
sbb
mov
cmp
ins
aas
sahf
loopne
dec
popa
mov
jg
(bad)
leave
lods
aad
mov
fcomip
mov
stc
xor
rcr
nop
lds
inc
mov
pushf
mov
mov
cmp
aaa
ins
add
inc
mov
and
shl
out
jno
sbb
stc
lahf
sar
push
stos
sbb
lds
aas
cmc
mov
push
mov
mov
mov
pop
sub
lds
adc
push
(bad)
ins
les
in
inc
enter
push
bound
outs
(bad)
lods
addr16
es
xchg
repnz
stos
add
pop
add
jmp
sub
mov
inc
nop
movs
lods
nop
mov
enter
xor
rol
mov
pop
mov
iret
xchg
jnp
popa
sub
inc
retf
call
clc
push
adc
mov
or
inc
sbb
pop
mov
retf
addr16
adc
and
inc
mov
xchg
out
xor
adc
jl
pop
test
(bad)
les
lock
shl
sub
add
dec
icebp
div
pop
pop
push
mov
mov
xor
clc
stc
repz
push
sub
mov
aam
out
test
in
mov
mov
rep
jne
xchg
daa
test
push
mov
sub
mov
test
sub
sub
dec
aas
fs
(bad)
xchg
xor
out
mov
xor
cmp
mov
cwde
addr16
jno
aam
adc
ins
mul
mov
mov
out
xchg
aam
sub
dec
sbb
xor
sbb
aaa
iret
or
retf
popa
pop
test
add
mov
std
imul
inc
ins
cmp
test
lods
sti
fsubr
test
inc
cmc
scas
ja
xchg
push
push
mov
test
adc
jmp
adc
stos
mov
mov
pop
sbb
pop
mov
sub
movs
div
add
mov
(bad)
fsubr
ins
call
out
jmp
push
dec
aam
and
jo
pop
popa
add
stos
sbb
xor
xor
dec
pop
xchg
sub
(bad)
outs
sbb
jns
inc
in
and
bound
lock
jae
push
cmps
aaa
lds
push
ins
lea
fimul
xchg
sbb
arpl
jb
adc
mov
xchg
lds
jecxz
inc
dec
gs
les
pop
sbb
push
push
out
jb
out
xchg
or
cmp
movs
sub
cmp
cmp
pop
out
rcr
mov
daa
in
cwde
push
or
clc
add
jg
loop
repz
lea
sub
inc
xchg
fcmovnu
icebp
retf
cmps
aam
xor
int3
aad
aas
and
sub
cld
jbe
repnz
mov
or
loop
sahf
dec
out
push
cmp
add
lahf
push
sar
push
sub
mov
xchg
pop
cmp
mov
je
sub
in
outs
stos
push
aad
mov
mov
add
imul
cmp
mov
adc
jb
in
(bad)
lods
mov
popf
imul
sar
add
mov
cmc
mov
jbe
rol
out
mov
xor
mov
jl
sbb
in
test
mov
cmp
add
or
lea
fwait
sub
ds
fmul
loopne
scas
xchg
adc
push
and
mov
paddsw
or
call
jae
jl
stc
test
jge
nop
xor
cs
push
add
rcl
cmp
jo
pop
int
mov
jecxz
or
mov
pushf
sbb
int
test
xor
push
pop
push
xor
scas
popa
jmp
cmp
xchg
add
repnz
movs
push
cld
jecxz
mov
ja
test
or
(bad)
es
mov
fld
push
xlat
mov
push
(bad)
stos
ficom
cmp
fldcw
sahf
scas
adc
mov
dec
loope
inc
sbb
popa
mov
xor
sub
push
inc
adc
mov
fisubr
and
mov
stc
ds
cmp
arpl
sub
mov
cld
jbe
sahf
sbb
popa
mov
inc
fwait
mov
fcomp
imul
lods
ds
push
mov
push
fcom
xchg
or
inc
mov
xlat
fiadd
and
(bad)
cs
mov
xchg
in
ret
fistp
xor
dec
(bad)
loope
cmc
mov
and
mov
push
movs
jae
dec
mov
and
jl
in
cdq
bound
std
ret
mov
push
mov
push
adc
bound
repz
fldcw
pushf
mov
retf
jb
ret
(bad)
cmc
syscall
fcomp
push
call
outs
sbb
sub
pushf
push
xor
xor
pop
fstp
out
scas
mov
cmp
adc
mov
call
rol
jmp
or
sysexit
mov
jmp
push
pusha
call
popf
in
test
sbb
dec
test
add
mov
loope
sbb
add
cmp
jl
es
inc
cmps
jle
sub
or
pop
ja
repz
xchg
push
adc
pop
xchg
jmp
inc
lods
inc
mov
add
and
sub
fstp
xlat
sbb
cmp
push
fstp
adc
inc
ficom
xor
psadbw
jle
mov
dec
xchg
out
mov
jmp
and
mov
popf
add
scas
adc
(bad)
cmp
xchg
mov
inc
fbld
push
xchg
test
pop
xchg
fwait
ret
sti
test
cmp
int
pop
and
mov
push
(bad)
inc
dec
lods
push
arpl
adc
jecxz
sbb
fdivr
(bad)
cmps
xor
push
retf
xor
cmps
cld
call
fmul
pop
adc
movs
inc
inc
mov
dec
mov
stc
xchg
dec
pop
jp
icebp
lock
enter
das
cmc
inc
pusha
sbb
sbb
mov
xchg
mov
jae
(bad)
in
dec
ins
jb
mov
jb
jl
mov
sbb
cmps
cwde
sub
sahf
jp
adc
scas
cmp
pop
ins
test
xchg
cmps
cmc
call
sub
loop
jp
pop
jo
jne
mov
xchg
stc
pop
cld
(bad)
sti
jl
popf
outs
cmp
inc
jl
push
mov
pop
add
xor
adc
repz
fiadd
xlat
cwde
mov
jle
inc
mov
add
in
jp
ret
adc
jbe
pop
repz
jbe
and
fistp
pop
fld
nop
dec
mov
sbb
das
mov
imul
daa
arpl
add
mov
call
jb
cli
inc
enter
icebp
xchg
stos
xchg
sbb
jge
cmp
fcmovb
mov
lods
lds
sub
retf
cmp
jmp
das
stos
data16
inc
and
xchg
pop
hlt
jne
scas
ret
jmp
loop
or
and
inc
dec
fiadd
retf
dec
mov
ret
retw
xor
or
call
cmps
mov
dec
sbb
and
test
cmp
mov
push
out
das
test
pop
push
dec
fld
dec
inc
lea
cld
fidiv
fwait
xchg
repz
cmp
loop
mov
out
cmc
test
mov
imul
(bad)
sbb
mov
mov
cmc
adc
cdq
(bad)
mov
ss
in
pop
inc
(bad)
mov
jmp
inc
scas
aaa
xor
out
daa
(bad)
mov
(bad)
jmp
sahf
push
addr16
sbb
test
add
push
mov
mov
cmp
lods
rcr
pop
jecxz
ins
fild
in
jo
mov
mov
loopne
pop
or
mov
mov
sub
cmp
mov
sbb
mov
pop
aas
sbb
adc
shl
fidivr
and
push
pop
or
rol
ror
loope
dec
adc
mov
scas
adc
mov
dec
in
test
std
xor
sbb
into
xor
pop
xor
fild
test
mov
dec
aaa
or
jp
ja
jns
and
sbb
adc
add
and
out
mov
test
int
sub
pop
cmc
jmp
mov
dec
into
push
mov
pop
and
xchg
outs
std
cmp
dec
outs
mov
fnsave
or
outs
mov
cmp
dec
mov
xchg
jb
mov
jg
mov
adc
adc
inc
cmps
and
mov
mov
jb
mov
inc
cs
in
movs
sahf
mov
arpl
ja
jp
data16
(bad)
outs
rol
aad
push
sub
jno
std
popa
adc
sahf
out
jmp
aad
cld
(bad)
call
test
xchg
mov
cmp
shl
xchg
sbb
xor
repz
clc
adc
(bad)
mov
outs
outs
or
push
add
pop
ins
or
pop
sub
div
daa
dec
enter
nop
sbb
ror
sbb
sbb
push
repnz
xchg
(bad)
pop
fimul
pusha
test
into
jo
cmp
xchg
lahf
push
sbb
retf
pop
mov
loopne
mov
push
or
mov
add
lds
iret
push
push
jb
mov
ja
jno
inc
jmp
push
cmc
add
or
stos
ins
dec
mov
aaa
scas
jne
mov
xchg
push
in
mov
push
sub
lds
mov
dec
add
push
aaa
and
or
jl
cmp
or
dec
push
jne
xor
add
daa
out
jae
ret
les
jp
retf
mov
and
movs
sub
and
gs
xlat
sub
addr16
fsubrp
in
mov
and
mov
(bad)
push
ret
or
mov
(bad)
dec
loop
cmp
cdq
(bad)
hlt
sub
das
test
adc
inc
or
and
clc
xchg
push
das
or
and
outs
(bad)
jmp
mov
adc
bnd
sub
add
ja
push
call
jmp
inc
add
arpl
loop
dec
jno
mov
xchg
jg
sub
mov
xchg
cmp
sbb
inc
movs
hlt
aad
fstp
push
out
jg
shr
cld
in
dec
stos
les
or
sub
jne
jg
jp
inc
sti
xchg
mov
adc
clc
pop
xor
jmp
push
push
out
stos
lods
adc
out
mov
mov
es
jmp
(bad)
jg
pop
jecxz
addr16
cmp
clc
mov
fsub
mov
int
fwait
push
enter
ror
cmp
or
add
stos
push
pusha
test
and
pop
and
shl
lahf
sbb
in
jae
mov
add
test
ss
call
scas
je
stos
rcr
daa
ret
shr
inc
sbb
xchg
cwde
and
popa
mov
or
add
ins
addr16
mov
out
mov
xchg
adc
pop
jno
mov
mov
iret
int
mov
xchg
test
lock
mov
pop
(bad)
repnz
cdq
call
inc
mov
lds
pusha
sbb
popa
in
in
push
scas
mov
mov
rcl
pop
cmp
inc
pop
xchg
inc
mov
xchg
jo
loope
es
mov
xchg
jb
fldcw
fidivr
inc
repnz
pop
rcr
test
shl
dec
aam
ins
bnd
xlat
div
jno
sub
sub
cmps
push
aaa
int3
xchg
movs
shl
and
inc
lahf
mov
xchg
fst
adc
and
pop
sar
or
lods
out
mov
inc
gs
pop
mov
loopne
fisttp
push
ficom
push
cmp
outs
mov
outs
jmp
sbb
inc
popf
stos
jge
mov
inc
repnz
iret
or
fisttp
jns
dec
pushf
inc
cdq
js
xor
sub
sub
pusha
pop
imul
stos
lock
pop
xchg
clc
jp
sub
push
iret
xchg
test
mov
inc
rcl
ss
popf
aas
sub
movs
call
add
arpl
sahf
test
shl
push
jmp
fsub
xchg
in
adc
mov
or
(bad)
jmp
movs
mov
std
jae
sub
outs
sub
mov
bnd
jecxz
dec
arpl
ins
lods
dec
out
loope
inc
pop
and
mov
pop
cmp
dec
aad
pop
and
and
inc
xchg
mov
add
popf
xchg
or
ins
cmps
test
fs
xor
adc
mov
rol
push
pop
jl
test
inc
fdiv
daa
int
push
and
mov
aas
dec
jns
fcmovnu
xchg
inc
cmp
jge
sbb
outs
stos
test
ficom
out
sub
cmp
not
in
shl
adc
into
test
int3
repnz
ja
aaa
and
in
in
jns
mov
stos
sbb
sub
xor
and
scas
jns
push
pop
sub
pop
dec
(bad)
jmp
clc
ret
outs
jae
fs
out
fmul
int3
lods
std
ins
cmp
loopne
lods
cwde
xchg
dec
push
xchg
xchg
adc
mov
mov
or
pop
mov
test
jne
pop
jle
dec
inc
das
fld
in
mov
mov
sbb
fld
jne
in
pop
jg
scas
adc
push
xlat
cmp
test
gs
movs
fstp
loopne
es
scas
mov
inc
clc
stc
icebp
xor
jecxz
jg
mov
ror
(bad)
cmp
mov
jbe
mov
xor
js
inc
mov
sbb
cmps
pop
retf
(bad)
icebp
scas
adc
fcmovu
mov
dec
std
or
mov
jmp
enter
mov
pusha
inc
stos
es
in
xchg
test
dec
sbb
pop
fimul
loopne
popfw
inc
ja
xchg
ins
sub
adc
dec
stos
bnd
cmps
in
pop
fwait
push
fidivr
mov
sub
or
push
add
(bad)
mov
rcl
out
push
add
cld
sub
out
jge
call
ficom
or
shl
xor
and
dec
int
rcl
sbb
inc
push
pushf
jne
cmp
add
pop
aas
inc
adc
imul
div
xor
xchg
sub
pop
cmp
out
and
fdivr
cmp
inc
stos
mov
jecxz
pusha
call
xchg
fld
call
pop
mov
mov
fsub
pop
mov
xchg
jg
xchg
mov
xor
inc
call
pop
sbb
rcl
hlt
pop
sub
rcl
xchg
and
sub
int
outs
mov
inc
iret
out
test
scas
imul
bnd
hlt
fcmovnbe
xchg
and
push
pop
dec
pop
psrlq
mov
adc
push
call
pop
stos
lea
repnz
and
or
adc
mov
out
mov
(bad)
jbe
das
mov
xchg
outs
int3
sub
pop
or
out
aad
(bad)
add
loopne
xchg
pushf
call
dec
xor
jg
jnp
fstp
movs
sub
imul
mov
or
test
add
pop
add
jge
mov
jb
adc
mov
imul
syscall
dec
pushf
fnstcw
fidivr
outs
add
mov
popa
data16
outs
stos
add
or
xlat
mov
xchg
mov
mov
xchg
loope
mov
retf
push
xor
mov
retf
es
dec
lock
test
bound
sbb
icebp
dec
out
pop
addr16
inc
test
aam
pop
leave
in
sub
or
xor
adc
dec
jb
psrad
out
ret
mov
mov
in
popa
pop
xchg
mov
pop
bound
mov
mov
dec
mov
lods
cmp
std
ss
fbstp
adc
(bad)
mov
dec
or
loope
mov
push
jne
pop
shr
test
jge
sbb
push
sbb
fsub
aam
adc
dec
clc
stos
jle
add
add
mov
xor
pop
les
adc
xchg
jo
pop
inc
xor
aam
push
lock
add
sbb
jbe
cdq
aaa
xor
iret
mov
nop
retf
repnz
xchg
scas
rol
xor
mov
mov
lock
dec
ins
inc
retf
sub
mov
stos
and
movs
jl
test
aad
nop
cwde
push
adc
(bad)
neg
cmps
add
out
hlt
fimul
out
and
sbb
gs
icebp
pop
rcl
push
dec
jnp
int
in
test
imul
dec
repnz
cmps
test
fnsave
mov
out
push
adc
push
xor
and
loop
into
add
xor
(bad)
push
into
push
sbb
mov
out
bound
repz
xchg
mul
jmp
mov
arpl
xchg
call
mov
mov
add
mov
xchg
in
sbb
push
int
fcom
enter
inc
ja
mov
out
dec
dec
sbb
mov
push
jmp
scas
mov
xor
pop
aaa
js
adc
push
cmps
retf
dec
dec
out
retf
call
retf
cdq
push
pop
jmp
arpl
shr
xor
arpl
jb
ja
outs
inc
or
inc
jb
repz
mov
push
movs
dec
inc
daa
fimul
jmp
mov
and
sub
clc
stos
es
into
mov
adc
sbb
es
aad
mov
xor
lahf
push
xchg
sbb
cmp
adc
mov
or
xchg
fwait
push
push
loop
inc
scas
call
xor
xor
sbb
into
push
pop
js
cmp
movs
cmps
pop
into
sub
fs
cmp
mov
dec
ins
push
lods
into
aaa
mov
ja
mov
and
sub
mov
mov
pop
mov
nop
aaa
rol
inc
aaa
mov
adc
pop
add
dec
cli
lock
clc
dec
ja
lea
(bad)
sbb
into
cmps
mov
ja
mov
(bad)
mov
in
ret
dec
dec
mov
xor
out
xchg
in
scas
sub
shl
mov
push
push
mov
dec
push
adc
call
cmc
stos
cmp
sbb
jecxz
push
pop
xor
or
or
push
mov
adc
or
sbb
inc
and
and
imul
cmp
sbb
fld
xor
inc
mov
outs
loopne
arpl
xchg
pop
aaa
xor
jno
ss
inc
mov
rcr
shr
ja
inc
int
pop
jmp
sbb
aas
fdiv
ja
cmp
psrlq
arpl
inc
mov
shl
(bad)
xor
jno
dec
cwde
mov
js
mov
cmp
mov
xor
into
int
gs
fist
jnp
pop
ret
(bad)
iret
cmc
das
(bad)
fmul
add
in
jle
sbb
ds
lock
inc
sbb
in
shr
cli
xlat
and
call
and
adc
outs
mov
fmul
dec
ret
lods
xor
sub
(bad)
jl
xchg
mov
int
mov
mov
xchg
mov
dec
stos
xor
int
loopne
fsubr
and
push
test
sub
push
data16
hlt
fsub
imul
fwait
dec
sub
pop
int
and
repz
add
push
and
test
add
xchg
mov
mov
pushfw
test
retf
cdq
sub
push
xor
push
repz
push
sub
mov
pop
imul
or
mov
frstor
mov
sbb
out
jns
cwde
xor
scas
sbb
dec
sbb
loope
sub
and
inc
pusha
jp
lods
add
(bad)
push
push
pusha
inc
and
inc
jmp
es
mov
in
xchg
ret
test
sub
cmp
jg
rcl
sti
bound
mov
jb
ja
jle
mov
inc
xchg
stos
mov
dec
addr16
mov
repz
xor
sub
fwait
test
xlat
and
test
mov
repz
and
stos
arpl
jo
push
mov
cmp
dec
mov
inc
adc
mov
adc
dec
jmp
mov
cmc
push
rol
sub
xor
fs
add
stos
jl
xchg
push
jne
sub
pop
mov
dec
test
cli
xor
mov
push
clc
mov
in
xchg
das
or
jnp
mov
in
repz
inc
loop
sbb
push
daa
fnstenv
mov
cmps
fbstp
inc
ja
dec
xlat
mov
ins
fdivp
fs
lahf
lds
lock
not
ds
mov
dec
arpl
movs
or
lods
stc
ror
push
std
push
hlt
nop
aas
mov
push
jnp
cli
mov
or
mov
mov
xchg
dec
fdiv
arpl
jns
aam
sub
loope
adc
or
xchg
push
cmc
movs
adc
cdq
pop
outs
cmp
das
test
inc
sub
out
or
mov
repz
mov
scas
outs
inc
inc
and
sub
mov
sub
or
cwde
or
and
mov
add
stc
mov
xor
in
add
sar
or
loopne
out
sbb
pop
inc
or
test
arpl
mov
mov
jg
xor
mov
mov
sub
jnp
jbe
push
jecxz
inc
or
retf
imul
pop
and
out
sbb
(bad)
(bad)
sbb
mov
dec
aam
bound
jmp
add
or
pusha
sahf
fbstp
pop
sbb
fidivr
cmp
mov
ja
dec
pushf
lods
add
daa
cmp
call
out
loopne
and
pop
push
hlt
inc
(bad)
stc
sub
inc
jle
jl
and
or
pop
mov
sub
or
fimul
jp
arpl
add
pop
mov
dec
jno
adc
icebp
push
sahf
mov
or
or
cli
in
leave
pop
cmp
jb
pop
shl
or
(bad)
into
mov
jle
sub
call
clc
push
repz
test
xor
sub
push
imul
pop
ins
mov
and
sbb
dec
push
loop
sub
ds
sbb
push
adc
(bad)
ins
sar
out
sub
ins
stos
int
mov
imul
rol
fs
cli
adc
adc
mov
icebp
test
loopne
(bad)
and
mov
(bad)
stc
mov
mov
cmp
or
dec
outs
out
mov
cld
fsubp
rcl
xor
adc
js
or
xor
cmps
lds
dec
push
fld
(bad)
jb
(bad)
ins
cmp
cmp
xor
in
in
and
mov
imul
jb
mov
ins
pusha
inc
scas
xor
or
sub
mov
jp
(bad)
scas
neg
adc
movs
int3
(bad)
(bad)
jp
dec
xor
dec
clc
clc
(bad)
mov
les
jl
inc
aad
imul
sbb
add
(bad)
das
movs
loope
pop
ja
xlat
(bad)
mov
(bad)
mov
adc
ret
mov
das
cmps
loope
imul
pop
mov
into
jo
popa
icebp
push
xor
pop
fcomp
inc
mov
inc
cmc
sbb
dec
mov
int
fst
iret
jo
shr
push
dec
or
leave
les
and
gs
xchg
(bad)
rol
inc
adc
mov
mov
shl
jae
neg
into
dec
inc
iret
sahf
sub
sub
lods
test
aad
mov
(bad)
loope
sub
dec
call
and
enter
repnz
pop
outs
out
retf
inc
nop
out
or
call
test
aaa
cmp
cli
lods
scas
cmp
adc
sbb
dec
xchg
sub
pop
fistp
mov
bnd
les
cli
or
sub
sti
mov
adc
mov
lds
jmp
(bad)
je
pushf
popa
repnz
xchg
xlat
ja
mov
or
rcr
push
push
xor
inc
out
aad
inc
push
jmp
fsubr
mov
or
mov
in
icebp
popa
dec
mov
scas
push
pop
pushf
sub
sub
push
fist
ja
imul
add
imul
xor
inc
dec
nop
mov
fnstcw
stos
mov
pop
cdq
adc
mov
cld
test
aaa
pusha
aad
das
dec
daa
jns
pop
add
ins
out
loope
or
lods
std
inc
data16
les
jp
xchg
fimul
sbb
fld
lahf
push
push
test
inc
outs
push
fidiv
stos
enter
les
cwde
into
add
fisubr
fnstenv
xchg
xchg
cli
sbb
add
cmp
xchg
jmp
mov
mov
lea
pop
loop
test
lock
inc
popa
xchg
add
aad
xchg
arpl
jmp
leave
pusha
sbb
pop
jns
fild
ins
sub
or
cdq
mov
jnp
lahf
in
jle
mov
dec
sbb
icebp
stc
das
mov
mov
xchg
ins
jmp
cmp
push
aaa
pop
out
ins
mov
fucom
jbe
dec
mov
(bad)
cmp
adc
popf
lods
pop
adc
jmp
sub
or
mov
dec
xchg
mov
fst
jecxz
mov
pop
std
sub
adc
aad
and
in
or
or
cmp
xchg
xchg
xchg
cld
(bad)
jae
loopne
(bad)
into
jle
retf
test
cmp
mov
push
scas
cmp
test
pop
mov
ret
xchg
in
lods
jp
jmp
inc
hlt
fild
ret
inc
in
sbb
lods
mov
jbe
mov
(bad)
test
fsub
cmp
and
push
and
(bad)
jmp
xchg
js
aam
icebp
call
xor
mov
mov
shr
add
sbb
repz
xchg
adc
fld
pop
je
shl
mov
inc
xchg
into
ret
imul
or
adc
push
cmp
mov
sbb
mov
sub
xor
sub
cs
or
test
dec
rol
jb
mov
jmp
and
jle
mov
sub
inc
adc
cld
mov
idiv
nop
cmps
icebp
jecxz
xor
popa
jns
xlat
in
lea
push
pushf
inc
mov
lods
jb
mov
(bad)
sti
test
or
and
adc
adc
jecxz
ror
cld
mov
adc
xlat
sub
test
inc
pop
xchg
call
push
fsubr
stos
fld
mov
cli
push
in
jg
lock
sub
call
push
int
pop
add
or
adc
push
mov
mov
mov
inc
push
jecxz
mov
sbb
dec
pop
jp
inc
xchg
sbb
jae
cmp
lahf
test
nop
pusha
ins
addr16
or
or
push
(bad)
cmps
dec
add
stos
jno
xchg
shl
ret
mov
mov
in
int
xchg
jmp
dec
cmp
jbe
scas
repz
sti
aaa
stc
daa
push
mov
mov
mov
in
push
cmp
(bad)
popa
ins
mov
jae
cmp
and
retf
jae
je
inc
dec
lahf
cmp
fcom
add
dec
mov
add
shr
mov
stos
dec
cmp
test
test
inc
jb
push
xchg
jmp
jmp
pop
adc
fwait
cmp
in
repz
or
mov
push
add
xor
and
sbb
icebp
dec
add
(bad)
cs
fnstsw
cmp
xchg
jmp
xor
ror
mov
imul
shl
cmps
in
loop
jno
or
dec
in
sub
out
cwde
out
jne
cmp
xchg
nop
dec
mov
aaa
out
jl
bound
cmp
cmps
xor
push
mov
mov
fwait
xor
xchg
lods
push
out
jl
(bad)
(bad)
ins
loop
mov
dec
imul
dec
ins
mov
fiadd
outs
dec
or
ins
test
pop
push
in
cli
stc
mov
jp
cs
push
(bad)
inc
retf
jp
in
mov
jne
push
lea
and
fcomp
stos
mov
and
aaa
pop
repnz
(bad)
cdq
sti
adc
mov
retf
popa
inc
jo
or
aaa
outs
xor
fsub
inc
add
mul
imul
ds
fnstcw
dec
push
and
inc
pop
adc
sub
not
rol
movntq
out
cmc
retf
push
cwde
popa
stos
out
cld
inc
cmp
ret
out
mov
std
xor
into
jmp
stos
dec
dec
lods
inc
es
scas
pop
xor
out
bound
dec
xor
ins
fwait
imul
lock
add
in
sbb
mov
add
jg
mov
dec
xor
fs
hlt
jp
jle
gs
jle
mov
push
movs
in
dec
or
bswap
fisubr
or
aaa
ror
pop
adc
nop
push
(bad)
shl
pop
mov
sbb
adc
sub
jle
sbb
jmp
add
into
push
out
sbb
sbb
movs
xchg
sub
movs
fwait
add
inc
cmp
fdiv
mov
cwde
xchg
(bad)
mov
mov
push
sub
jo
scas
inc
lock
popa
cmps
cld
xchg
mov
or
rcl
xor
and
(bad)
or
xchg
mov
ret
jmp
pushf
pop
stos
sar
lock
xchg
dec
js
popf
fistp
(bad)
hlt
or
push
xor
pushf
xchg
dec
mov
test
jns
adc
les
jl
pop
fld
add
mov
push
xor
add
xchg
xchg
xchg
add
cmp
or
movs
inc
cmp
xchg
jmp
xor
sub
mov
cmp
iret
jne
(bad)
xor
jne
shl
mov
jmp
fwait
call
data16
xor
cwde
ins
fdiv
jmp
xchg
pop
(bad)
and
xor
push
pop
(bad)
lods
movs
clc
mov
adc
in
inc
pop
addr16
sub
xchg
mov
pop
jecxz
sub
push
cmp
js
popa
ror
(bad)
sahf
test
or
test
sahf
dec
mov
cmc
daa
aas
mov
rol
add
test
retf
(bad)
jae
gs
adc
mov
mov
dec
cwde
cli
test
aaa
in
fidivr
and
fcom
adc
enter
cld
add
in
shl
lock
es
lods
and
pop
mov
aas
cmps
cdq
fldenv
ss
mov
pushf
sub
lods
jge
ret
(bad)
jmp
adc
movs
fcomp
clc
pop
daa
dec
out
mov
out
into
sub
fidiv
cmp
ins
in
lahf
jno
push
dec
push
xor
push
loop
push
outs
cmp
mov
popf
inc
mov
in
imul
pop
repnz
jmp
(bad)
pop
cmps
(bad)
(bad)
bound
xor
icebp
int3
add
loop
imul
out
jns
jae
cmp
jecxz
cmp
mov
jecxz
xchg
mov
pop
xor
mov
leave
xor
popa
jp
lahf
cs
pop
cmps
sub
cmp
or
sub
nop
push
sub
fld
(bad)
stc
loopne
cmp
mov
mov
pop
pop
stos
lds
push
leave
lods
aaa
ror
cli
in
test
xchg
mov
xor
sub
or
push
or
xchg
addr16
cld
xor
mov
xor
fst
loopne
mov
dec
jecxz
mov
mov
das
ins
loope
movs
ins
gs
ror
cdq
push
pop
xor
dec
xchg
mov
fdivr
pop
je
xlat
push
dec
jge
cli
fcom
pop
pop
popf
dec
les
sbb
lahf
xchg
dec
mov
or
cmp
add
mov
into
sub
pcmpgtw
(bad)
xlat
xor
(bad)
jecxz
aaa
cdq
jecxz
popa
int3
adc
xor
sbb
or
pop
cmps
and
sbb
and
shl
outs
movs
iret
in
sub
outs
cdq
jns
test
je
adc
call
scas
xor
push
jge
mov
and
jge
dec
test
into
pop
inc
in
push
jnp
xor
int
dec
mov
add
dec
arpl
mov
sbb
fisttp
fdiv
cmp
inc
int3
mov
enter
mov
in
outs
mov
and
mov
rcl
dec
jmp
mov
xchg
pusha
jnp
sti
sbb
lods
inc
sar
idiv
inc
addr16
stc
mov
mov
adc
shl
imul
mov
or
fwait
call
cmps
cmovbe
jl
clc
and
xchg
push
rol
test
add
jecxz
xchg
cld
jb
inc
scas
sbb
sbb
retf
cmp
inc
jge
dec
dec
fnstcw
pusha
lods
adc
xor
int
fbstp
cli
sub
xchg
mov
dec
cmp
bound
push
mov
sub
stos
cli
sbb
bound
add
arpl
ins
pop
jle
mov
loop
adc
push
cmp
iret
add
and
sahf
sbb
mov
(bad)
fcmovb
mov
rcl
dec
and
pop
imul
push
popa
rcl
mov
lahf
or
rcr
pop
jns
jmp
add
mov
jl
stos
and
mov
mov
jecxz
int
mov
aaa
xchg
add
and
cmp
mov
aas
int3
dec
stc
and
xchg
xchg
dec
xor
lods
sub
(bad)
dec
aaa
sub
ror
pushw
out
test
xor
dec
cmp
outs
lahf
dec
cli
xor
xchg
pusha
add
daa
pop
push
cmp
(bad)
out
repnz
push
sbb
sti
fcom
(bad)
push
mov
jne
cmps
in
in
and
test
jae
xchg
xchg
enter
repnz
add
sbb
not
stc
or
jbe
(bad)
call
out
xor
jo
and
pop
push
cmp
hlt
mov
jb
lods
in
push
xchg
inc
loop
neg
setae
out
push
arpl
and
push
(bad)
(bad)
cld
aam
int
data16
in
test
push
adc
gs
cwde
sub
(bad)
xchg
nop
add
imul
jp
data16
leave
sti
mov
or
mov
sti
leave
pop
mov
ret
cmp
inc
pusha
repz
sti
xchg
clc
xor
retf
inc
mov
sub
test
jnp
mov
mov
test
(bad)
or
aas
lahf
mov
adc
test
mov
jbe
int
push
or
aas
jl
cmp
push
jns
out
or
mov
or
pop
xchg
push
mov
add
cmp
dec
loope
fsubrp
in
addr16
push
pop
cmp
adc
test
pop
pop
in
jo
aad
ja
jne
mov
sti
jmp
(bad)
xchg
popa
push
sti
ror
sub
xchg
or
fadd
jp
jno
dec
push
xchg
ret
ds
jne
fwait
xor
test
mov
inc
sub
lds
push
push
mov
pop
imul
xchg
dec
in
mov
dec
adc
fs
in
fs
cmp
mov
mov
(bad)
mov
adc
pop
fnsave
and
jne
jmp
push
es
sub
adc
nop
aad
cmp
jle
jae
cmp
imul
cmp
fcmovnbe
in
pop
pop
xor
stc
xchg
push
xor
imul
sar
js
dec
pop
loop
jo
xor
inc
loopne
adc
aad
dec
(bad)
inc
test
aam
lds
jnp
imul
mov
and
test
sbb
leave
inc
call
jo
xchg
xchg
cmp
mov
add
mov
retf
lock
cmp
jno
test
push
inc
repz
es
sbb
cs
sbb
xlat
fisub
dec
sub
call
in
adc
popa
lds
call
pop
bound
push
inc
in
jno
scas
cmps
cdq
stos
jne
ficomp
sub
test
mov
sub
sti
add
cmp
test
paddusw
in
test
mov
cmp
test
sub
fdivr
add
pop
mov
and
cwde
std
fild
int3
mov
cwde
(bad)
mov
aaa
ret
push
push
cmp
sub
pop
leave
outs
jns
xchg
xor
retf
jmp
imul
ror
xor
(bad)
ins
das
pop
lds
push
jmp
mov
or
aam
test
jle
xchg
dec
shr
dec
adc
and
dec
arpl
mov
out
pop
xor
jnp
fs
nop
xor
xor
test
push
push
(bad)
jecxz
fcomip
mov
daa
jp
push
inc
sub
dec
dec
iret
hlt
sbb
aaa
add
sti
std
sbb
push
or
add
pop
fcmovne
(bad)
xor
add
mov
jbe
(bad)
jne
cmps
int3
adc
(bad)
bound
(bad)
push
dec
outs
pop
test
clc
jp
das
xchg
movs
(bad)
push
ffreep
test
mov
in
hlt
push
or
popw
sbb
scas
sahf
inc
js
add
fbld
xchg
imul
cmp
sub
and
mov
add
adc
sar
and
aaa
cld
xor
jp
or
mov
fadd
inc
or
sti
jecxz
cmps
dec
pop
idiv
movs
dec
add
push
lea
pop
mov
mov
pop
dec
mov
push
mov
jle
sbb
js
mov
fldenv
sub
arpl
in
movs
gs
lods
ds
lea
adc
or
test
loope
push
xchg
xor
cmp
mov
addr16
inc
mov
jle
pop
push
xor
shl
stc
cmp
js
test
jbe
jb
dec
sub
xor
adc
xor
jg
out
leave
in
xchg
and
jmp
inc
xor
add
cwde
ins
hlt
sub
(bad)
repnz
push
mov
push
hlt
jmp
out
mov
jge
popa
int3
mov
rcr
pop
je
inc
mov
and
add
or
cmp
cmp
(bad)
es
int3
in
out
push
xor
pusha
test
xor
jecxz
sub
and
cld
stc
ja
or
into
je
and
dec
outs
jns
icebp
jge
push
sbb
jns
in
nop
pushf
adc
cmp
inc
and
setbe
xrelease
leave
push
pusha
hlt
jae
out
mov
push
cld
dec
outs
inc
dec
cmp
mov
fst
mov
mov
je
push
iret
push
or
add
mov
xor
int
inc
sahf
mul
icebp
outs
pop
sar
or
in
loope
cmc
inc
inc
out
sub
adc
mov
sub
adc
pop
je
sti
pushf
(bad)
out
shl
leave
xor
gs
aam
dec
xor
cmp
js
packuswb
daa
call
mov
jne
mov
loope
es
js
lods
adc
rol
xchg
mov
ret
sub
mov
and
cwde
rcl
sbb
and
in
test
and
push
mov
xor
in
in
sub
add
lds
retf
xlat
rcl
add
test
test
inc
(bad)
cmp
mov
jo
rcr
sbb
scas
aaa
js
jmp
bound
jo
pop
retf
nop
mov
push
in
hlt
ror
push
cwde
or
fs
imul
push
ret
mov
frstor
sbb
icebp
into
loope
(bad)
cmp
jp
mov
push
es
push
lock
dec
lock
push
rcl
nop
or
je
lods
jmp
mov
dec
shl
sbb
mov
push
jne
scas
movs
hlt
xlat
(bad)
add
gs
mov
and
inc
sub
push
(bad)
jmp
push
fcom
xchg
daa
ins
mov
das
mov
in
pop
enter
add
push
call
cmp
jb
cmc
adc
aam
psubsb
pop
ficomp
dec
(bad)
in
aaa
rcl
push
dec
mov
call
inc
sub
dec
jg
push
setle
sub
test
sub
push
push
xor
jg
sbb
push
jo
mov
in
mov
and
(bad)
clc
add
loope
jg
gs
mov
xchg
daa
retf
out
xchg
or
cmp
mov
dec
and
jmp
cmp
call
dec
aas
sti
mov
jp
jp
push
out
test
fsub
movs
popf
lock
mov
jmp
js
ret
imul
test
stos
lea
int3
mov
test
sub
arpl
inc
pusha
sub
jns
bound
nop
in
scas
pop
out
jmp
push
add
mov
(bad)
xor
mov
cmps
mov
sbb
repz
imul
fs
mov
jbe
es
jmp
mov
cmp
lods
adc
std
add
(bad)
xchg
cmc
ss
jns
adc
push
mov
mov
ror
push
add
rcl
daa
lods
xchg
jmp
add
mov
add
rcr
jge
leave
cdq
jns
shl
aad
and
mov
jecxz
mov
(bad)
hlt
ins
out
xor
jno
pop
test
(bad)
jecxz
fist
sbb
in
pop
js
test
ror
(bad)
sub
in
cwde
int
jecxz
mov
mov
cmps
mov
jl
pop
movs
lahf
mov
pop
or
js
jecxz
cmps
(bad)
in
daa
and
push
add
sub
test
loopne
lods
jmp
sbb
or
sahf
(bad)
fwait
cmp
clc
mov
jge
rcr
push
test
mov
cmp
fisubr
iret
enter
pushf
add
jmp
cwde
fimul
mov
daa
adc
push
fistp
out
call
mov
jl
mov
ret
in
enter
jp
sbb
push
mov
mov
popf
mov
jecxz
fdivr
push
cld
adc
ret
cmps
sub
es
cmps
and
leave
mov
mov
call
jbe
mov
mov
xor
mov
leave
idiv
sub
push
lods
imul
jmp
dec
inc
sub
pop
push
gs
call
retf
out
push
cmp
inc
push
and
mov
seta
outs
dec
repnz
test
dec
lock
ds
ins
js
mov
int
xchg
ss
ret
sub
mov
mov
mov
and
pop
sbb
lods
push
pop
fwait
aas
mov
push
rol
jb
sub
add
in
rcl
sbb
in
jmp
mov
shl
xchg
sbb
retf
imul
enter
sbb
arpl
into
cmp
push
pusha
inc
outs
sub
adc
xchg
push
movs
cmc
loopne
nop
sub
xor
push
imul
sti
cdq
pop
or
adc
leave
jl
inc
lods
lods
jae
lods
nop
es
stos
jle
cmp
sub
es
sbb
and
bound
sbb
add
out
jmp
mov
dec
jmp
clc
out
icebp
aad
das
ss
fist
lds
ja
dec
push
sub
mov
cdq
ds
pop
mov
sbb
jg
iret
fld
jo
sub
fbld
jge
(bad)
sti
stc
mov
and
mov
test
xchg
test
xor
cdq
mov
sub
mov
xor
pop
outs
pop
bnd
imul
dec
and
ror
gs
cmps
push
out
sbb
jno
jp
shl
dec
mov
jns
stc
xchg
popf
cmp
cmc
mov
mov
pop
push
loop
mov
ss
out
mov
jnp
sbb
jbe
nop
sti
and
(bad)
jne
icebp
push
mov
clc
xchg
ret
call
sub
mov
fs
or
inc
mov
mov
std
and
mov
(bad)
jecxz
stos
and
fiadd
xchg
test
add
rcr
sbb
mov
dec
sub
xor
pop
retf
loopne
pop
addr16
movs
cwde
pop
inc
imul
xor
ror
pop
jp
push
loope
ret
pop
(bad)
jge
cdq
cmps
mov
out
cmp
pop
ret
movs
repnz
push
add
add
jmp
pop
sbb
aas
pop
push
lea
jno
mov
fbstp
inc
sbb
cmps
inc
bound
mov
xor
or
sub
arpl
adc
fstp
aam
inc
mov
loope
ins
hlt
test
sbb
xchg
in
mov
dec
sbb
cmps
add
dec
cwde
stos
push
movs
adc
pop
xor
jnp
cmps
popa
lods
fwait
repnz
cs
daa
inc
mov
call
ret
std
and
xchg
inc
stos
aas
pop
lahf
xchg
jo
sub
in
cmps
inc
xor
imul
cmp
xor
nop
loope
and
or
es
mov
imul
outs
or
inc
xor
setae
sbb
inc
daa
push
ja
cs
movs
and
pop
loope
dec
repz
mov
xchg
inc
xor
in
cld
ins
mov
push
in
je
fwait
movs
cmp
jl
aam
jl
pop
cmp
adc
xor
mov
push
cwde
dec
(bad)
jle
bound
std
cdq
push
aad
pop
sub
popa
fdiv
inc
and
cmp
(bad)
cmp
rol
mov
xchg
rcr
adc
fnsave
cmps
aad
and
push
inc
adc
xor
lea
lods
push
inc
mov
fdivr
popf
or
(bad)
sti
loope
dec
in
sti
mov
cs
cmp
inc
add
les
inc
daa
and
push
push
mov
cdq
ret
test
sub
push
in
inc
inc
and
inc
dec
xchg
jle
scas
push
and
movs
imul
push
ret
retf
mov
pop
mov
or
push
out
pop
sub
call
out
sbb
gs
sar
dec
cmp
jp
sbb
pop
test
aaa
fnsave
or
and
mov
icebp
push
sub
lods
in
jle
ins
ins
jae
xchg
lods
pop
and
sar
das
xlat
repz
cmp
push
xchg
add
mov
test
xlat
dec
or
jge
xchg
pop
or
inc
and
or
(bad)
aad
xchg
outs
mov
and
shl
ins
sub
ja
clc
sbb
enter
leave
lea
cs
lea
pop
xchg
pushf
in
arpl
adc
outs
xchg
sub
add
mov
mov
mov
cmp
fstp
inc
or
and
dec
push
arpl
xchg
or
sbb
push
cwde
jne
push
test
enter
mov
inc
mov
push
xor
fwait
scas
(bad)
aaa
push
sbb
xchg
pushf
and
sbb
cmc
mov
popf
inc
in
push
test
addr16
jmp
gs
scas
xor
(bad)
push
cmp
push
sub
xchg
int3
call
mov
dec
jno
pop
arpl
stc
mov
inc
sub
xchg
add
imul
jae
leave
mov
(bad)
retf
lea
add
mov
sbb
popa
xor
sbb
sti
dec
fwait
ss
call
or
mov
in
daa
mov
xor
test
pop
cmps
push
je
stc
test
out
xchg
cld
cmp
fnstsw
repnz
push
xchg
leave
test
imul
test
jge
jmp
ds
or
push
(bad)
leave
fsub
pop
ss
stos
ins
sbb
ja
imul
sbb
mov
imul
out
push
pop
test
cli
jmp
sub
add
stos
jecxz
addr16
int
addr16
mov
std
scas
bound
sar
mov
or
int3
cmp
cwde
in
xchg
arpl
fld
scas
repz
dec
dec
(bad)
sub
mov
jmp
xchg
mov
leave
jne
retf
pop
pushf
add
dec
fcomp
imul
mov
fs
shl
outs
jp
inc
and
jg
push
clc
ja
jo
lods
ds
xchg
repnz
mov
jg
aam
or
scas
out
ds
ret
cld
in
push
aas
sub
mov
pop
push
sub
ss
aaa
frndint
jle
mov
(bad)
pop
pop
jge
or
sbb
scas
pop
inc
and
out
inc
or
sti
mov
add
call
aad
gs
daa
and
ins
pop
and
(bad)
sub
mov
test
add
jae
ror
pop
adc
mov
push
mov
push
test
mov
rcl
mov
xchg
les
cld
ret
push
jnp
in
adc
loope
mov
mov
lock
loope
add
jne
je
xchg
sub
cdq
pmaddwd
mov
and
lahf
movs
cmc
dec
xchg
rcr
jge
hlt
xchg
iret
arpl
or
js
outs
test
aad
xchg
test
sbb
pop
(bad)
into
lahf
mov
xor
mov
int3
ret
jle
push
jbe
fwait
js
xchg
in
inc
je
add
int3
cs
mov
adc
ret
or
sbb
mov
rol
retf
push
js
add
mov
xchg
jo
push
out
pop
movs
pop
inc
jmp
ror
fldcw
mov
loopne
mov
clc
dec
iret
retf
mov
and
jle
sub
xor
and
mov
mov
std
mov
xchg
cld
adc
sub
icebp
mov
cmp
jp
lea
call
cld
clc
xchg
push
cmps
popa
test
fnstenv
rcl
sub
(bad)
push
push
test
into
push
jo
fs
inc
add
push
(bad)
inc
loop
data16
idiv
and
cmp
mov
cwde
outs
loopne
dec
xchg
stos
mov
jle
gs
aas
dec
mov
ret
fcom
adc
and
cmp
mov
movs
loopne
dec
out
pop
add
fld
add
lahf
sbb
mov
sbb
in
sbb
cmps
lahf
int
cmps
lds
xor
inc
fcomi
iret
jecxz
mov
mov
or
lds
or
int
shl
mov
inc
xor
xor
dec
pop
xchg
sbb
xlat
dec
data16
clc
stos
xchg
shl
mov
(bad)
mov
mov
sti
push
dec
js
mov
shr
ds
leave
int
rcl
or
sbb
in
pop
xor
pop
dec
mov
add
scas
mov
sbb
fnclex
into
xchg
jle
imul
pop
imul
cld
fstp
enter
inc
in
ja
adc
lea
or
dec
hlt
stos
dec
adc
or
aam
fs
and
and
test
or
ret
sub
cmp
dec
pop
or
repnz
adc
out
inc
loopne
lods
inc
in
or
test
push
outs
mov
in
mov
jecxz
add
mov
sbb
and
aaa
pusha
scas
or
mov
cmp
repz
shl
pop
call
pop
xor
stos
cmp
out
sbb
mov
call
pop
icebp
cdq
push
loopne
mov
jnp
add
loop
mov
inc
jo
lea
imul
pop
out
sub
mov
stos
loop
rol
popf
(bad)
rcl
push
cdq
ins
outs
mov
lahf
out
cmp
add
jne
xor
pop
pop
add
inc
mov
cmp
imul
mov
adc
mov
pop
aaa
mov
lods
dec
inc
sub
cmps
add
xor
push
aad
ret
lds
add
adc
enter
dec
data16
rcr
fstp
nop
cmp
enter
nop
retf
add
and
xor
ins
mov
lea
ja
jnp
mov
push
or
loopne
mov
and
cs
pop
add
jmp
or
retf
mov
cmp
enter
daa
clc
dec
pop
cs
add
das
or
iret
imul
mov
int3
push
stc
ret
jns
in
xchg
sbb
and
mov
push
xchg
fsubr
push
jb
mov
cld
and
xchg
fild
push
mov
cwde
data16
in
mov
in
push
les
dec
mov
adc
xchg
xchg
mov
cmp
test
mov
add
aaa
inc
xor
ret
int
(bad)
jecxz
pop
daa
inc
cmp
jmp
mov
arpl
(bad)
scas
pop
mov
hlt
or
pop
repz
sub
pop
cmp
mov
cmp
in
sbb
mov
push
mov
clc
add
push
rcr
jle
push
adc
or
jge
xlat
gs
or
mov
fmul
sbb
(bad)
mov
xor
pop
ror
stc
xchg
sbb
push
ins
or
xor
sahf
cmp
loope
push
jp
(bad)
stos
call
stos
mov
sub
mov
fmul
or
idiv
jecxz
mov
das
in
jecxz
xchg
mov
icebp
movs
cmp
and
ins
(bad)
retf
mov
pop
cwd
and
dec
mov
mov
stos
inc
ins
ror
retf
dec
fidivr
(bad)
rol
push
push
test
fimul
fs
rol
inc
aad
inc
inc
or
retf
std
mov
xchg
inc
cs
mov
sbb
dec
xor
dec
xchg
push
dec
or
pop
add
aad
jl
inc
sbb
outs
movs
ror
inc
push
mov
xor
aas
push
fst
ret
mov
popa
inc
jecxz
imul
pop
icebp
pop
out
mov
cmp
mov
dec
icebp
fnstsw
(bad)
push
stos
push
push
outs
add
mov
cwde
sub
push
inc
mov
shl
or
add
mov
fcom
push
arpl
mov
jge
js
loopne
jno
xchg
aam
movs
int3
je
sub
and
cmp
xchg
(bad)
xchg
jns
push
xchg
pop
cmps
xlat
xchg
push
cmp
inc
add
inc
pop
sahf
cli
loop
sahf
lahf
ss
adc
jmp
je
xchg
enter
push
neg
pop
leave
out
aas
ret
or
or
sub
fcom
adc
test
xchg
pop
jbe
sbb
leave
mov
mov
and
mov
fcomi
pop
pop
test
retf
inc
sub
dec
inc
lahf
dec
(bad)
stc
repnz
and
outs
hlt
dec
cmp
stos
mov
fadd
push
mov
and
dec
mul
in
shrd
cmp
dec
dec
cmp
or
mov
mov
mov
sub
inc
dec
and
jo
pop
mov
mov
pop
jmp
mov
movs
fdivr
arpl
loope
adc
addr16
mov
mov
ins
lods
sub
cmps
sar
push
jmp
mov
xor
cmp
cmps
dec
push
push
adc
push
pusha
pop
pop
xor
cmps
out
pop
ins
jle
std
lock
dec
or
test
fwait
shr
xor
add
cmp
out
cmps
jnp
adc
sub
sahf
pop
leave
aaa
adc
jb
pusha
sbb
sbb
jae
pop
xchg
test
mov
div
add
shl
push
(bad)
ret
cwde
or
mov
sbb
push
mov
out
popf
push
lods
inc
jo
push
jbe
sbb
jno
inc
pop
ins
cmp
rol
xchg
ja
inc
stos
cmc
mov
retf
fldcw
into
mov
adc
mov
sub
sub
mov
xor
add
sbb
shr
pop
sbb
mov
jmp
mov
cmp
inc
or
pop
movs
pusha
(bad)
neg
jns
dec
mov
inc
pop
std
sbb
(bad)
dec
push
cmp
sbb
in
fstp
les
jae
sub
xor
pop
movs
sbb
bound
lods
imul
(bad)
fsubr
sub
xchg
test
rcr
cmp
das
jp
mov
stos
test
retf
jp
cs
cli
iret
cs
cmp
push
xchg
movs
stc
jb
pusha
xchg
dec
cmp
xor
pusha
lods
aas
ss
loopne
sbb
or
neg
mov
test
loope
pusha
pop
(bad)
fiadd
imul
dec
fsub
shr
shl
popa
js
mov
scas
xor
jns
icebp
inc
das
dec
ficomp
push
and
mov
jl
cli
(bad)
adc
ficom
xor
imul
pushf
jns
mov
mov
jno
in
scas
in
pop
test
test
stc
xchg
jo
inc
addr16
cwde
mov
mov
dec
add
in
xchg
cld
cmp
enter
lahf
test
jb
mov
xor
jle
push
inc
jecxz
dec
inc
rcr
les
push
inc
inc
and
and
cs
push
jle
(bad)
not
bound
retf
mov
or
sub
(bad)
div
jmp
popa
(bad)
das
cmovns
popf
inc
sbb
pop
mov
mov
or
bound
dec
repnz
pop
lods
dec
jne
shl
je
add
out
fldcw
ror
mov
ja
push
and
cwde
bound
pop
sbb
xor
cmp
jge
push
xchg
pop
arpl
jp
push
push
inc
xor
dec
(bad)
and
cmovle
addr16
dec
cmps
mov
call
cmp
imul
jmp
xor
mov
sub
lods
jecxz
in
ret
outs
adc
imul
mov
jmp
dec
nop
out
pop
cmc
out
xchg
mov
cdq
add
sub
xor
imul
loop
shl
in
xchg
push
in
into
mov
test
je
data16
fwait
or
es
in
xchg
or
dec
test
jne
imul
js
or
sbb
shr
in
mov
aad
(bad)
loopne
rcl
sub
mov
ins
pop
call
jne
out
xor
gs
xor
sbb
retf
scas
or
xor
inc
into
xchg
or
cmps
jge
cld
or
iret
in
retf
mov
and
bnd
pop
and
movs
(bad)
sbb
or
stos
adc
jle
sti
dec
and
lahf
cwde
repnz
scas
pop
out
or
jno
add
or
(bad)
mov
fsubr
cmc
and
inc
popf
lahf
or
mov
or
nop
aad
cmp
cmc
cmp
cmp
mov
scas
xchg
call
push
sub
push
mov
shl
mov
popa
sbb
mov
dec
jne
fwait
inc
or
(bad)
in
frndint
xchg
ret
sbb
adc
cdq
in
mov
jns
out
add
adc
popa
inc
mov
or
pusha
mov
out
push
out
xor
nop
mov
ficom
xor
lock
inc
push
daa
jl
fnstcw
out
push
iret
fld
aad
mov
inc
pop
scas
hlt
fwait
bound
push
(bad)
out
jbe
inc
pop
push
cld
and
loop
xchg
scas
adc
xlat
xchg
mov
into
sub
iret
and
adc
rol
call
sbb
and
in
icebp
pop
jecxz
xor
sti
arpl
inc
je
sub
leave
daa
inc
or
inc
mov
in
repz
mov
movs
xlat
xchg
xor
mov
mov
(bad)
xchg
sti
loop
popf
jno
add
int
sbb
std
mov
mov
mov
addr16
rcr
call
scas
mov
xchg
cdq
jecxz
or
add
xlat
push
fimul
add
cmps
pop
sub
pop
rcr
mov
pop
mov
sub
aas
add
xchg
sub
imul
adc
sti
stos
sbb
jae
shr
int3
jb
inc
mov
or
pop
cld
out
mov
movs
leave
add
mov
dec
in
and
fsubr
jmp
jns
call
lds
xor
(bad)
int3
adc
popf
jl
xchg
or
test
pop
gs
lar
ffree
test
xchg
jo
dec
shl
cmp
test
movs
call
pop
aad
fist
cld
fidiv
push
test
xchg
stc
icebp
and
mov
dec
sub
stos
pop
rol
cmp
add
cmp
push
push
push
fwait
jp
leave
add
loopne
push
sbb
std
jns
cmp
outs
scas
push
js
mov
fmul
movs
fmul
dec
imul
ror
pop
cwde
mov
xchg
and
neg
pushf
leave
js
sbb
cmp
sbb
and
shl
sub
xor
push
hlt
shr
pop
loop
cmp
dec
cmp
das
add
pop
stc
or
sbb
in
inc
out
neg
es
xlat
repnz
xchg
out
adc
adc
(bad)
retf
fcmovnbe
hlt
data16
(bad)
mov
rcr
imul
aam
pop
shl
les
jns
in
mov
and
push
add
mov
sahf
loopne
aas
mov
mov
sub
pushf
pop
push
scas
mov
cld
mov
daa
aaa
pop
les
adc
push
xor
in
and
cmc
ins
scas
mov
sbb
jb
test
inc
sub
xor
das
lea
lock
in
inc
mov
out
(bad)
imul
fild
mov
fnstenv
repz
cli
aad
mov
fistp
lods
mov
adc
jne
mov
imul
pop
and
or
xlat
aam
loope
sbb
push
sti
ja
xchg
aam
stos
jl
push
(bad)
sbb
clc
xor
dec
pushf
aad
repz
pop
ret
xor
pusha
not
in
xor
xchg
(bad)
sub
out
mov
scas
push
sub
push
dec
jg
call
jmp
sbb
scas
add
push
call
adc
mov
icebp
ret
outs
repz
mov
dec
add
adc
cld
xchg
ss
cmps
add
pop
sub
xchg
js
pop
in
in
jecxz
test
xlat
sbb
ss
and
test
pop
inc
ins
cmp
das
test
jns
out
mov
pop
nop
in
add
or
sti
pop
dec
sbb
mov
inc
lahf
ror
ins
loop
push
and
cdq
push
fild
dec
fs
xchg
in
sub
enter
cdq
dec
imul
and
aad
loopne
pop
pop
inc
pushf
or
scas
aam
push
sbb
push
daa
xor
scas
mov
nop
push
xchg
int3
xchg
sbb
or
push
das
enter
mov
dec
icebp
icebp
and
out
add
and
or
jmp
jl
jne
in
ins
pop
add
fld
and
push
rcr
xor
js
push
adc
xor
addr16
jo
lds
or
ins
fs
xor
fiadd
loope
rcl
or
jno
xchg
lods
cmp
(bad)
out
loope
mov
call
fisub
popf
jnp
jle
call
jo
mov
mov
xchg
xchg
lock
ss
or
mov
jle
les
push
xchg
push
mov
dec
cmp
adc
jle
push
jbe
xchg
loope
and
mov
test
sub
test
jmp
inc
ret
add
fwait
in
in
xor
or
xchg
jg
add
push
adc
sbb
adc
aas
xchg
mov
adc
xchg
push
or
daa
sub
xor
dec
(bad)
fidiv
xor
dec
sub
int
pop
xlat
jb
rcr
(bad)
jo
sub
dec
sbb
jno
sahf
mov
dec
inc
enter
lods
cmp
das
fistp
(bad)
push
mov
out
xchg
xchg
push
jns
and
(bad)
mov
outs
inc
add
lods
sbb
push
test
sub
jge
pop
push
js
es
push
and
mov
ins
fsubp
mov
cmp
bound
out
xchg
cmps
into
es
dec
cmps
or
outs
pop
cmp
daa
(bad)
dec
sub
in
cwde
jno
cwde
bound
and
lahf
pop
bound
sti
pop
loop
sub
loope
fs
(bad)
sahf
ficom
pop
scas
pop
pop
fldenv
stos
jl
call
ja
sub
sub
in
lds
jae
nop
mov
loop
push
pop
jl
loopne
pushf
dec
out
cmp
jl
ds
push
sbb
fwait
inc
push
pop
(bad)
push
call
adc
ret
inc
adc
jb
(bad)
arpl
sbb
dec
fisubr
hlt
stos
pop
cmc
pop
push
rcl
mov
mov
js
pop
hlt
adc
push
addr16
inc
aad
inc
pop
mov
mov
fs
(bad)
inc
sub
in
arpl
data16
scas
jmp
sub
das
xor
mov
shr
sbb
cmp
jbe
test
xchg
mul
mov
retf
neg
div
and
lds
jns
test
mov
push
not
pop
cmp
and
lock
nop
jbe
inc
in
(bad)
sysexit
sahf
push
cmp
add
push
add
sub
shr
mov
push
xchg
lock
inc
out
clc
and
xchg
mov
jns
jmp
shl
mov
mov
dec
or
push
xchg
sub
test
jg
loope
cmp
and
in
push
aam
push
sbb
push
imul
sbb
fdiv
or
and
movhlps
cmp
jge
retf
jae
es
lods
cdq
(bad)
out
cmc
jb
aas
jbe
dec
xchg
or
sub
pop
mov
outs
lahf
push
(bad)
lods
fld
pop
jbe
stos
and
repz
xchg
and
add
xor
cmp
clc
dec
cmc
and
mov
outs
add
sbb
popf
sbb
mov
gs
call
(bad)
ror
scas
sahf
cmp
mov
popf
ret
sub
jl
adc
stc
(bad)
sbb
je
sub
add
cld
cmp
or
js
pop
push
das
or
pop
add
xchg
cmps
sbb
shr
cli
cmps
jno
ds
invd
in
mov
mov
jb
pop
pop
inc
xchg
popa
addps
push
cmp
std
call
add
cmp
ja
fistp
daa
xor
pop
xchg
ins
mov
sub
sahf
loopne
add
out
sbb
fnstsw
stos
adc
mov
pop
(bad)
push
or
mov
inc
fs
xor
adc
mov
test
jp
movs
jle
in
push
xchg
(bad)
rcl
and
ins
sub
mov
xor
cdq
ja
mov
inc
int
adc
inc
imul
add
stc
lahf
push
mov
(bad)
xor
jl
xchg
test
jge
pop
fild
push
push
inc
mov
in
inc
adc
ficomp
mov
ja
inc
jns
xor
inc
xor
fcomp
push
ja
sub
aad
xor
enter
fbstp
js
jmp
out
out
test
jmp
sub
xor
popf
mov
mov
movs
sbb
aaa
lods
popa
call
cmp
mov
sbb
int3
sbb
leave
mov
aaa
neg
test
ja
imul
out
loopne
je
test
xchg
imul
aad
mov
out
xor
lods
in
rcr
movs
sub
cmps
fldenv
adc
stc
and
scas
ror
lods
movs
iret
sbb
mov
mov
xor
xor
adc
push
ins
scas
cld
mov
nop
jecxz
arpl
jl
jns
dec
rol
mov
add
sar
mov
mov
sub
jns
xor
mov
fneni(8087
xchg
icebp
das
in
mov
and
push
fdivr
jp
add
les
push
push
sbb
fldl2e
mov
dec
iret
sub
dec
sahf
mov
mov
iret
fild
mov
(bad)
addr16
(bad)
sbb
sahf
ficomp
dec
sub
add
push
fdiv
jg
loopne
push
scas
jge
cmp
inc
push
sahf
pop
int
outs
dec
xor
movs
adc
std
fdivr
push
cld
inc
sbb
jecxz
add
xchg
mov
pop
sbb
mov
(bad)
js
mov
ja
shl
inc
mov
adc
scas
push
fadd
dec
xchg
push
xchg
mov
xchg
xor
data16
mov
mov
sub
pop
iret
mov
fisubr
lahf
jae
in
adc
cmp
ret
jecxz
xor
push
adc
add
mov
mov
cmp
sar
inc
jle
add
xchg
sub
add
jb
jae
mov
scas
cdq
sub
add
push
into
cmovnp
outs
mov
jae
bound
dec
jbe
xchg
cmps
pop
jno
rol
(bad)
sub
std
call
sub
push
dec
call
clc
fiadd
sets
xchg
cmp
and
inc
imul
and
or
sbb
push
js
jecxz
xchg
rol
lock
jp
mov
push
icebp
and
xchg
rcr
fstp
push
jns
aas
add
movs
xchg
inc
mov
inc
dec
outs
mov
js
inc
lods
xor
and
cmp
pop
push
xchg
(bad)
mov
in
std
dec
stc
test
sbb
data16
mov
push
push
popa
push
inc
popf
fdiv
mov
mov
mov
ins
dec
stos
fmul
stos
xchg
lods
and
and
lea
call
aaa
pusha
movs
dec
fsubr
lods
scas
std
adc
stc
and
sar
mov
bound
and
mov
ret
inc
inc
es
pop
xchg
or
fwait
push
mul
adc
out
jnp
push
ret
xchg
or
jecxz
ror
icebp
inc
pop
js
sub
push
test
mov
jmp
inc
push
mov
into
in
imul
stc
popa
inc
sti
jmp
adc
(bad)
std
stc
xor
loope
mov
or
movs
adc
clc
jecxz
fs
cmps
add
int
mov
(bad)
and
push
cli
std
stos
jns
cld
sbb
ret
push
int3
cmp
jecxz
mov
loopne
push
mov
inc
cmp
cld
fwait
ins
pop
les
cmp
push
jns
adc
int3
mov
push
loopne
mov
sub
icebp
jne
dec
pop
loop
sub
pusha
xlat
fisub
(bad)
in
add
pop
shl
mov
in
mov
dec
xchg
std
push
sub
adc
pop
mov
or
sysret
icebp
icebp
add
pop
adc
cli
fnstsw
out
or
outs
js
lods
jno
lea
enter
in
mov
inc
mov
adc
stos
or
mov
jno
(bad)
cmp
dec
loopne
xchg
push
(bad)
movs
mov
ins
mov
sbb
add
test
xlat
imul
fs
gs
pusha
clc
or
and
mov
into
shr
jno
lock
arpl
inc
pop
test
xor
fadd
xchg
fnstcw
loopne
pop
mov
xor
lods
movs
fcmove
das
push
call
stos
aam
add
dec
cmp
jmp
fsubr
jae
js
jmp
lahf
push
xor
mov
imul
xor
mov
out
add
dec
data16
mov
push
bound
movs
xchg
mov
aam
push
test
retf
cmp
(bad)
push
outs
jecxz
scas
out
aad
xchg
add
pop
pop
ret
lods
mov
xor
(bad)
sub
push
sbb
sub
das
xor
adc
fwait
mov
mov
pop
retf
repnz
daa
jmp
mov
or
dec
push
sub
fstp
retf
out
push
stos
mov
adc
fist
rcl
mov
jecxz
cld
fwait
push
ds
push
mov
and
xchg
cmp
sbb
mov
mov
aam
lods
mov
scas
movs
aam
mov
and
repz
and
mov
ins
lods
js
outs
stos
nop
inc
or
jbe
or
xor
pusha
push
or
xchg
sub
in
dec
ret
and
ret
pop
add
xor
adc
aam
out
daa
jmp
lods
shr
xor
in
into
mov
sub
sar
(bad)
loopne
gs
imul
dec
outs
ins
pop
dec
fcom
iret
retf
add
jp
pop
mov
cs
(bad)
adc
fidivr
js
adc
adc
sahf
fld
dec
jmp
(bad)
jmp
pop
clc
pusha
push
(bad)
fidiv
dec
add
lods
adc
stos
inc
mov
lahf
repnz
enter
out
fadd
addr16
inc
xchg
jmp
pop
mov
cmps
(bad)
sbb
mov
cld
inc
jb
retf
jge
add
dec
ja
push
std
int3
sub
add
arpl
cmp
inc
sahf
mov
adc
in
mov
movs
imul
packuswb
cmp
sar
repz
xor
pop
mov
retf
in
mov
cmp
push
dec
dec
mov
jle
ins
pop
xchg
(bad)
(bad)
jno
mov
pushf
pop
xchg
mov
cmp
push
pop
mov
call
jne
push
popf
push
in
lea
xchg
pop
pop
dec
jb
sub
sbb
(bad)
mov
(bad)
ss
(bad)
sub
sbb
mov
dec
out
push
sbb
pusha
add
mov
lods
xor
mov
mov
pop
inc
fist
sub
mov
sub
sahf
das
and
shl
xor
cmp
stc
fldcw
sbb
or
sub
(bad)
dec
inc
jecxz
lods
sub
int
js
push
pop
fstp
xchg
jle
data16
inc
lods
test
push
add
pmaddwd
div
das
sbb
in
les
dec
pop
lods
mov
pop
jne
pop
xchg
adc
lds
(bad)
cmp
and
js
(bad)
mov
jmp
cdq
stos
or
dec
jmp
xor
xchg
dec
out
hlt
aas
pop
outs
or
xlat
mov
pop
jmp
retf
push
sub
push
or
icebp
or
mov
sub
adc
sub
jecxz
dec
call
cmp
or
std
jmp
clc
push
(bad)
std
pop
in
mov
fnstcw
cmp
pop
xchg
movs
addr16
icebp
inc
test
lds
in
(bad)
out
pop
jne
test
mov
sbb
add
out
test
and
bound
loope
mov
pop
lds
pop
scas
push
fst
shr
and
sub
inc
pop
mov
sar
arpl
push
mov
test
ret
mov
add
push
jp
leave
or
mov
fs
or
cld
ins
push
shl
popf
jmp
push
inc
mov
imul
pop
(bad)
test
and
cmp
outs
inc
and
fmulp
jae
sbb
or
pop
pushf
adc
fst
cmps
clc
mov
in
fldenv
push
dec
push
ins
mov
test
(bad)
sahf
add
mov
mov
cmp
not
je
test
inc
push
aam
ja
dec
neg
jb
sar
push
hlt
xor
pushf
push
ret
jb
dec
div
fwait
stos
xchg
adc
xor
push
jl
gs
mov
sub
cmps
xor
jg
pop
cmps
ins
push
jb
dec
ficom
mov
pushf
outs
sbb
push
inc
or
loop
and
pop
call
les
out
cmp
add
jae
rol
add
mov
mov
js
pushf
jge
lea
(bad)
jno
sub
icebp
lods
and
dec
in
pop
adc
jle
movs
std
dec
cld
mov
cmps
add
int
popf
add
mov
call
stos
mov
or
inc
dec
mov
fidiv
(bad)
cmps
call
mov
ins
leave
enter
leave
jae
pop
pop
pop
jnp
cmp
jecxz
xor
dec
sbb
call
in
mov
aad
stc
addr16
bound
sbb
and
push
inc
jbe
xchg
ret
jne
dec
dec
loopne
imul
jns
pop
mov
stos
mov
dec
daa
test
pushf
aam
cld
xor
pop
pop
sub
gs
or
add
pop
and
aad
retf
retf
pusha
mov
sldt
clc
mov
pop
pop
lods
mov
dec
pushf
pop
pushf
idiv
cmp
jp
sahf
lock
cmp
dec
(bad)
mov
movs
movs
ret
xor
pop
imul
xlat
pushf
dec
adc
adc
cmp
jns
xchg
ror
pushf
ret
daa
cmp
arpl
xchg
sbb
mov
fwait
dec
test
jae
pop
jmp
test
sub
test
add
cmp
mov
je
test
ins
xor
pop
sbb
inc
xchg
xchg
clc
add
rcr
sbb
cdq
retf
mov
cmp
sbb
cwde
xchg
inc
inc
aaa
inc
jmp
add
in
adc
(bad)
mov
and
call
add
inc
jmp
and
loopne
cmp
fsubr
jle
xchg
stc
call
mov
pusha
rcr
std
adc
jle
and
mov
mov
inc
mov
mov
outs
daa
dec
fmul
jo
stc
or
shl
cmp
std
clc
int3
lahf
cmp
ins
dec
push
and
int
cmp
pop
xor
mov
shl
dec
sti
push
push
pop
call
daa
nop
in
mov
les
jp
popa
bound
mov
mov
test
mov
iret
push
cmc
jl
fiadd
jl
pop
add
mov
dec
push
das
inc
cmp
rcl
je
data16
mov
out
push
jae
xor
dec
inc
aas
bound
in
in
cmp
pop
jg
or
inc
mov
or
and
xchg
jae
xchg
push
mov
xchg
les
in
xchg
mov
pop
shl
es
das
pop
int
xchg
jns
iret
push
mov
jae
dec
and
mov
xor
hlt
fst
shl
mov
dec
push
and
jmp
pusha
and
ja
(bad)
fucomip
les
mov
pop
cmp
push
dec
(bad)
call
dec
or
mov
sub
mov
push
add
lods
sahf
mov
xchg
ret
mov
stos
mov
stc
mov
clc
aam
push
pop
cmc
sub
lahf
(bad)
(bad)
rol
mov
shl
xchg
leave
repz
inc
js
retf
sub
add
int
mov
stos
sub
lods
mov
fwait
aaa
icebp
sbb
jae
pop
mov
rcl
adc
cmp
sbb
sbb
loopne
mov
mov
popa
and
push
cmp
in
dec
adc
adc
stc
cmp
pop
out
jno
mov
dec
sbb
jmp
outs
in
jns
adc
int3
push
xchg
push
shl
jecxz
push
cdq
sar
sub
add
div
(bad)
cvttps2pi
fsubr
cmps
pop
icebp
std
jae
stc
xor
adc
jno
or
movs
sub
mov
int
fld
mov
xchg
and
leave
xlat
pop
xchg
mov
je
inc
nop
cmps
(bad)
dec
jmp
pop
cs
js
dec
dec
mov
imul
jo
pop
push
ret
xor
pop
cmp
or
sub
mov
dec
cmp
cmp
push
pop
sub
pop
out
sbb
ffreep
pop
clc
dec
das
pop
pop
ins
lods
fist
push
dec
cmp
mov
push
mov
dec
fwait
retf
in
gs
fwait
cmps
(bad)
stc
stc
pop
lods
mov
outs
mov
sbb
sar
sub
sub
pop
inc
cmp
shl
pop
and
int3
ds
pop
xor
jo
jg
and
push
bound
icebp
sbb
mov
sub
mov
or
push
outs
(bad)
int3
ss
inc
js
sub
push
leave
rcr
add
inc
enter
retf
xchg
xlat
icebp
or
cld
ret
lds
jge
sbb
push
add
mov
push
lods
push
loopne
(bad)
loopne
fisttp
push
pop
xlat
mov
sub
js
sti
adc
popf
xor
scas
cwde
int
pusha
call
add
cmp
mov
aam
push
adc
jae
clc
jne
add
lods
jp
sar
or
mov
adc
mov
scas
inc
xchg
test
lods
les
addr16
xchg
push
push
inc
ds
or
pop
push
mov
popf
pop
mov
dec
iret
jmp
jmp
jnp
retf
bound
sub
mov
lods
mov
add
test
leave
outs
ins
out
ins
movs
mov
repz
pop
mov
enter
sub
test
lods
cmps
mov
scas
xor
fisttp
pop
popa
aam
fs
movs
xor
fdiv
mov
lods
jp
sbb
fldenv
sahf
clc
jnp
(bad)
mov
inc
mov
je
daa
and
fs
adc
es
ins
cmc
(bad)
stos
jo
stc
or
add
ret
shr
dec
je
sbb
or
add
ja
fistp
outs
ds
mov
cmp
rol
sahf
cmps
fs
cld
ins
test
dec
pop
out
ds
lds
in
in
mov
loop
repnz
fstp
adc
push
(bad)
sbb
add
mov
int
in
mov
fist
daa
pop
shl
dec
jmp
imul
push
jnp
xchg
xchg
test
imul
jne
and
cld
test
and
mov
cmp
xor
test
loope
xchg
cwde
mov
add
mov
hlt
fwait
test
pop
popf
out
xlat
sub
cmp
ret
out
add
inc
or
or
xor
xchg
add
sub
dec
dec
div
fisttp
or
repnz
jle
into
pop
arpl
hlt
pop
cmps
stos
mov
mov
xor
scas
mov
push
mov
jbe
cmp
cmp
mov
repz
dec
cmps
mov
out
lods
movs
cs
je
cmp
push
sub
dec
popa
leave
loopne
scas
mov
and
ror
test
pusha
lds
std
adc
sub
sbb
or
pop
mov
or
imul
adc
rol
stc
call
loopne
dec
dec
out
jo
shl
push
inc
and
sbb
inc
(bad)
cld
aam
pop
fdivr
adc
mov
movs
xchg
push
and
adc
and
loop
cmps
and
mov
fldenv
xor
inc
pushf
int
sub
dec
inc
dec
mov
rcr
inc
inc
ffree
or
int3
inc
push
icebp
sub
cmp
pusha
fcomp
jno
or
les
xchg
shl
loop
cmp
cli
add
xlat
add
pusha
jo
xchg
push
fsub
aad
sar
xchg
ds
sahf
pop
add
ret
sub
pusha
mov
movs
out
mov
test
popf
mov
cmps
push
xchg
je
xchg
arpl
xor
sar
mov
xchg
jp
cmp
sbb
sti
inc
or
xchg
les
clc
in
(bad)
(bad)
pop
push
cmp
push
push
mov
mov
and
mov
dec
xor
push
mov
fiadd
arpl
push
lea
xor
and
xchg
or
fwait
cli
das
pop
cmc
dec
pop
imul
je
xor
push
in
ins
push
jge
jo
xor
outs
repz
loopne
sahf
(bad)
push
pop
mov
push
adc
mov
inc
sub
sahf
or
(bad)
idiv
inc
mov
jbe
fadd
or
daa
dec
fiadd
in
mov
sahf
fistp
add
ja
dec
test
sbb
ss
lock
lods
mov
sub
mov
push
div
lods
pop
into
dec
shl
jno
ret
outs
xor
inc
cs
adc
out
nop
xchg
or
push
dec
cmp
mov
or
cmps
sbb
aam
mov
retf
imul
lea
outs
xchg
cmps
cli
dec
out
jbe
fimul
push
push
cld
scas
fisub
test
cli
outs
adc
sub
mov
and
aaa
ret
in
push
lahf
(bad)
push
dec
daa
dec
pop
push
test
sbb
jg
fsubrp
adc
cdq
jl
fwait
gs
cmp
cmps
push
out
retf
rcl
ins
xchg
push
and
lea
or
aad
rcr
fst
int
adc
stos
xchg
mov
pop
mul
mov
cmp
adc
loopne
xor
test
xchg
call
push
ss
sahf
rol
loopne
sub
or
mov
mov
fwait
bound
sub
aad
ins
mov
mov
mov
int3
out
adc
test
push
xor
jg
push
(bad)
test
rcr
in
xchg
movs
mov
test
sti
xor
pop
fst
adc
int
and
pop
mov
mov
sub
cmc
cmc
std
scas
pop
aad
push
in
mov
cld
inc
xor
and
cmp
outs
in
fiadd
dec
add
(bad)
ja
lods
push
jmp
or
pop
stc
xlat
das
(bad)
pop
pop
dec
(bad)
and
sar
icebp
inc
dec
xchg
dec
adc
add
sar
mov
add
outs
mov
out
pop
js
mov
aam
dec
ret
pop
mov
push
js
sbb
loopne
stc
fdiv
mov
inc
and
arpl
push
add
pop
imul
loope
cmp
popf
fnstcw
mov
or
mov
add
fimul
ror
add
xor
pusha
loopne
mov
ss
inc
push
imul
bound
push
dec
add
mov
movs
lea
add
mov
adc
sti
sub
mov
leave
jo
xchg
sbb
aam
nop
in
inc
out
xchg
fwait
mov
push
sub
aas
and
and
sar
dec
jmp
daa
dec
and
jl
mov
ss
mov
mov
fld
mov
pop
aaa
cmps
push
stos
pop
cdq
punpckhbw
or
cs
adc
adc
jbe
dec
in
fs
mov
leave
cmp
xlat
shl
inc
sbb
jae
or
in
or
out
push
pop
ins
cmps
sub
bound
pop
sub
bnd
int
dec
mov
clc
lds
leave
retf
int3
sbb
cmp
imul
lahf
cmps
ror
xor
pop
push
shr
fstp
movs
add
inc
cli
xchg
retf
adc
aam
ficom
stos
sar
sub
cli
sbb
(bad)
icebp
xchg
adc
cmc
xor
leave
mov
out
push
dec
mov
sbb
daa
ret
push
retf
push
jae
jnp
arpl
out
xchg
jnp
leave
pop
jno
jmp
(bad)
nop
push
mov
pop
shr
or
mov
and
pop
nop
fisub
pop
dec
daa
xchg
add
outs
iret
rol
aad
cmp
mov
popf
lgs
test
fnstcw
mov
cld
stos
cld
sub
xchg
sbb
adc
mov
mov
fistp
in
(bad)
xor
clc
mov
mov
cwde
stos
mov
push
ja
mov
and
fcom
retf
fadd
cs
out
shl
fwait
stc
cmp
push
addr16
cmps
cmps
xchg
sbb
push
(bad)
mov
ja
cli
pusha
sbb
aad
pop
imul
ins
ss
pop
pop
cld
loopne
loope
sbb
test
clc
inc
je
mov
mov
pop
movs
loopne
xchg
xor
sub
jae
fnsave
jae
push
fimul
movs
push
jmp
jae
inc
call
movs
jmp
push
mov
dec
aad
sbb
jns
mov
add
cmp
addr16
sbb
mov
mulps
adc
mov
adc
add
stos
mov
xor
and
fs
xchg
cmp
jmp
xchg
pop
cmp
shl
mov
sub
jae
push
mov
inc
jbe
cmp
aad
(bad)
dec
dec
xchg
jb
mov
mov
add
jnp
add
and
loop
fwait
jle
xchg
cmps
sbb
cmps
cmps
sbb
sub
push
adc
jmp
bound
test
hlt
(bad)
ins
sub
scas
rol
ins
mov
add
dec
inc
call
push
clc
jl
sbb
inc
not
inc
test
retf
jo
pop
outs
adc
repz
sbb
sbb
and
sbb
mov
dec
sub
retf
add
jmp
mov
pop
mov
cmp
sbb
jge
inc
leave
sub
movs
int3
outs
xor
in
pop
mov
iret
mov
in
dec
shr
ss
adc
jl
push
pop
push
retf
ds
lods
and
call
out
pop
dec
add
ss
pop
inc
in
ja
pop
rol
int
xchg
inc
cli
fsubp
sbb
ins
jbe
test
xor
dec
lods
pop
jp
jge
jnp
dec
jo
mov
pop
dec
and
adc
aaa
aam
pop
xchg
mov
xchg
test
clc
arpl
cmp
or
xchg
jg
sub
sti
xchg
sub
out
push
mov
jl
xchg
sbb
mov
das
lods
out
pop
or
enter
mov
add
test
and
repnz
pusha
jb
(bad)
jmp
not
out
movs
push
fnstenv
jbe
push
mov
(bad)
and
test
hlt
movs
(bad)
dec
sbb
pop
leave
lahf
fcom
ror
inc
shl
jb
push
(bad)
fbld
xchg
ficomp
dec
test
mov
inc
jle
add
je
(bad)
iret
leave
inc
cmp
mov
sub
fist
(bad)
stos
in
lock
mov
out
xchg
ret
cmp
sbb
imul
push
in
es
adc
mov
xchg
mov
adc
loope
xchg
clc
inc
ret
fcmovnb
out
aaa
adc
cmp
es
(bad)
and
pop
dec
or
fild
sbb
pop
sbb
(bad)
jmp
cld
push
jmp
loop
push
xor
cmps
and
test
jnp
ror
hlt
xchg
pop
idiv
ret
mov
repnz
jbe
lahf
iret
pop
or
and
in
push
mov
ror
addr16
and
jo
retf
pop
cmp
mov
icebp
mov
jp
xchg
add
push
fldcw
dec
in
popa
pop
popf
push
fidiv
cmc
or
repz
mov
nop
in
iret
daa
dec
ins
inc
sub
jb
aaa
addr16
and
xor
or
xor
data16
aad
loop
mov
gs
jo
mov
loop
and
cmp
cmp
cmp
dec
adc
and
mov
jge
(bad)
and
xchg
aas
xor
out
xchg
xor
or
clc
ror
xchg
out
cmp
xchg
push
lock
mov
push
bound
adc
int
dec
ror
in
out
pop
icebp
cmps
mov
jb
pop
adc
mov
jmp
phsubd
mov
addr16
in
shl
xchg
cmp
mov
shl
aam
das
add
jg
les
mov
mov
iret
lods
push
lods
mov
sub
pop
xchg
pop
mov
lock
jno
or
xor
test
sbb
ins
sbb
repz
out
inc
jle
or
xor
pop
xor
push
movs
push
sar
adc
jg
jmp
movs
shl
sub
jge
out
pop
shl
iret
loopne
in
clc
add
mov
mov
fidivr
xor
sub
pop
int
arpl
mov
cmps
fnstenv
out
scas
movs
adc
sub
and
shl
pop
mov
enter
mul
out
inc
sahf
pop
std
inc
mov
jnp
repnz
pushf
pop
fucomi
mov
shl
neg
xor
xor
or
sti
push
jne
mov
mov
fwait
mov
les
dec
in
iret
dec
retf
das
repz
mov
imul
mov
aad
movs
sbb
mov
jnp
push
in
pushf
iret
mov
cmp
and
jge
int
mov
nop
and
xor
mov
int
mov
rol
dec
xchg
mov
or
jge
or
dec
push
push
test
pop
fcomip
mov
ja
adc
mov
dec
ret
mov
xor
xchg
cmp
mov
jmp
imul
or
ret
xchg
in
(bad)
loopne
mov
and
xor
pop
sub
(bad)
hlt
out
add
dec
inc
rcl
mov
leave
(bad)
cmp
dec
inc
sub
sbb
pop
das
inc
(bad)
push
xchg
mov
sbb
(bad)
xor
xor
dec
mov
push
sahf
xor
es
ja
imul
xchg
cmps
inc
cmc
xchg
in
xchg
out
pop
stc
hlt
loop
jne
mov
ds
sbb
cmp
lods
sbb
xchg
test
bound
inc
mov
mov
neg
jle
push
mov
pop
xchg
mov
(bad)
mov
mov
fld
popf
dec
sar
inc
cdq
popa
or
dec
bnd
in
movs
inc
out
ror
cmp
mov
sub
mov
addr16
sub
jnp
fst
out
shl
dec
xor
ret
push
push
push
push
jns
dec
lea
ds
jl
push
fsubr
adc
mov
fdiv
into
or
inc
enter
stos
mov
pop
xchg
inc
div
and
push
and
stos
fnsave
imul
jg
adc
inc
sbb
popa
push
in
sbb
add
adc
mov
movs
sbb
xchg
mov
cmp
or
and
sub
mov
fwait
and
leave
lahf
or
and
xor
cmps
daa
jp
sub
xchg
and
mul
movs
mov
pop
pop
push
fwait
and
rcr
cmp
and
mov
sub
imul
inc
(bad)
aam
leave
push
jnp
cmc
and
or
mov
scas
sbb
dec
pushf
fwait
test
(bad)
jg
fisub
jb
retf
add
jp
xchg
mov
sar
cmp
sti
out
bound
jb
int
lds
sbb
jne
pushf
cmp
fwait
pop
mov
cmps
aaa
outs
mov
add
test
retf
call
xor
sub
jmp
shl
ret
call
icebp
sub
xchg
mov
not
mov
imul
iret
jne
aam
or
addr16
retf
inc
int
pop
ret
(bad)
fwait
pop
ror
jb
push
pop
mov
mov
pop
xor
add
inc
(bad)
pop
pushf
arpl
xchg
mov
push
clflush
fcmovne
retf
mov
mov
test
xor
xchg
add
dec
adc
lahf
je
xlat
or
mov
fidiv
gs
jp
mov
icebp
cmp
pop
push
xchg
loop
fdiv
paddusb
ror
popa
pop
fs
or
cwde
call
xchg
push
in
std
and
outs
aas
ins
rcr
mov
sbb
dec
test
int
addr16
call
cmp
leave
gs
mov
xchg
push
and
mov
add
and
pop
ficom
ret
xchg
sahf
fimul
push
mov
mov
mov
pop
ret
push
dec
sub
mov
cs
mov
adc
imul
lgs
stos
dec
test
mov
ret
mov
sbb
inc
inc
push
adc
test
xor
adc
les
inc
test
fsub
rol
jne
dec
aas
dec
mov
imul
add
mov
popa
imul
xor
jnp
lods
adc
cmp
sub
inc
xchg
add
push
sub
jno
enter
dec
icebp
(bad)
mov
sbb
popf
or
pop
xor
ja
xor
clc
popw
push
sub
adc
mov
stc
out
in
fisub
adc
push
xor
sub
arpl
push
xchg
in
test
inc
pusha
cdq
push
sbb
repnz
dec
or
lods
mov
push
(bad)
bnd
pusha
mov
ja
mov
push
les
xor
dec
pop
mov
sub
pop
cmp
and
out
sbb
dec
cli
rol
test
add
das
mov
cmps
push
pusha
int
push
out
sar
push
push
and
(bad)
lock
out
cmc
in
nop
lock
pop
adc
mov
mov
inc
leave
(bad)
cmps
cwde
les
add
mov
xor
clts
ret
or
mov
icebp
cs
neg
pop
sub
loop
cmp
xor
movs
mov
pop
sub
scas
fwait
ret
push
mov
mov
enter
xor
inc
mov
jbe
lds
(bad)
push
inc
and
xchg
je
popf
sub
mov
jmp
cmps
shr
(bad)
sbb
cmp
mov
mov
call
sub
jbe
out
cmp
sub
dec
bswap
push
cmp
jmp
or
push
push
cmp
push
mov
bound
cs
(bad)
xlat
inc
or
xor
jp
es
add
push
fisub
push
cmp
inc
in
repnz
dec
push
mov
xchg
mov
fisttp
pop
or
xlat
xor
pop
iret
xor
pop
call
push
out
out
pop
or
retf
add
pusha
movs
xchg
sub
add
out
or
xlat
jno
adc
enter
add
push
test
imul
cli
push
add
outs
dec
cs
out
inc
pop
mov
cmp
(bad)
jle
or
pop
cmc
cmps
fcom
jg
cmp
adc
or
inc
xlat
inc
ja
mov
scas
aaa
mov
add
jne
cmps
dec
mov
fisttp
adc
icebp
cdq
pop
mov
jb
mov
jmp
into
leave
clc
lahf
push
fwait
movs
sbb
sbb
iret
les
pop
gs
daa
or
add
sub
xor
int3
mov
addr16
jl
push
call
popa
sar
out
pop
out
je
aam
rcr
mov
jp
frstor
cmc
lea
xor
js
jbe
fdiv
add
and
loope
enter
xchg
les
popa
xchg
xchg
aam
push
stos
es
pop
outs
xor
ins
stos
dec
ret
repz
ins
loop
xor
sahf
xchg
jb
add
xor
pop
mov
mov
jnp
loopne
lea
and
xor
inc
outs
lods
lahf
test
xor
inc
lock
xor
or
shl
push
scas
lahf
pop
out
push
imul
stc
pop
ins
imul
sub
sbb
push
test
call
aam
pushf
std
jno
mov
dec
and
out
cmp
iret
or
movs
rcr
inc
xchg
inc
cmp
jmp
test
dec
(bad)
sbb
pop
in
frndint
sub
mov
jbe
mov
and
ret
aam
call
inc
imul
scas
lods
pop
movs
sub
cli
or
(bad)
call
mov
push
pop
jno
outs
test
and
dec
aam
jecxz
pop
xor
in
mov
daa
mov
push
xor
sub
fidiv
outs
in
aad
jns
cmps
je
mov
arpl
inc
sub
aas
lock
mov
dec
inc
aad
pop
call
(bad)
or
or
popf
sub
fdivr
or
sub
lds
cmp
push
movs
ds
stos
lods
inc
jo
xor
cmp
xchg
push
(bad)
sbb
xchg
nop
xchg
jp
es
mov
cmp
ret
push
pop
add
mov
mov
shl
mov
xchg
pop
stos
aas
in
sub
test
cmp
test
js
cmp
js
cwde
cmp
ret
mov
dec
add
addr16
pop
addr16
xor
jns
xchg
jae
sahf
int3
jbe
call
in
pop
fild
call
mul
pop
jl
fnstcw
mov
aad
xchg
xor
cmp
fidiv
rcl
xor
out
xchg
seto
ins
jbe
out
pusha
nop
popf
loope
fyl2x
push
mov
(bad)
ja
cmp
xor
or
call
sub
push
push
daa
lahf
xor
dec
and
xor
jmp
sbb
paddsb
ss
sbb
aas
imul
stc
fst
(bad)
and
or
xchg
pop
aaa
or
dec
sbb
sahf
ret
xor
or
cmp
(bad)
std
scas
push
scas
jne
dec
push
sbb
cmp
pop
(bad)
std
mov
jl
mov
mov
xor
stos
mov
add
in
xlat
rcr
pushf
pop
in
inc
xor
sub
int3
mov
push
mov
in
mov
sbb
cmc
not
fwait
xor
test
jmp
pop
sub
push
test
and
or
sub
or
xchg
cmp
sub
xor
add
(bad)
imul
ja
js
and
ds
jnp
inc
clc
fisttp
xchg
mov
and
stos
mov
jne
mov
and
mov
fs
push
fstp
test
push
cmp
xchg
test
inc
pop
repz
aaa
lds
jbe
adc
fstp
xor
ins
xchg
pop
rol
cld
pop
loopne
xlat
dec
mov
push
call
pusha
push
jne
imul
fnstsw
in
fisttp
fcmove
neg
call
inc
xor
ss
inc
push
es
xor
pop
ret
xchg
push
pop
out
sar
and
daa
sub
fld
mov
(bad)
add
cmp
jge
aas
inc
mov
fs
sti
dec
sbb
jecxz
add
or
cmp
sbb
mov
aam
lods
sub
shl
gs
ins
lock
xchg
jb
add
mov
mov
push
xchg
inc
mov
cmp
mov
aas
jmp
je
mov
leave
xchg
sub
pushf
mov
pop
cmp
jg
inc
cmp
xchg
pop
ins
mov
mov
(bad)
(bad)
push
sbb
mov
mov
sbb
jo
shl
dec
jecxz
and
xchg
fstp
cmps
and
not
cmp
cld
jbe
inc
inc
jmp
ins
les
in
adc
or
data16
mov
adc
in
jns
lock
popf
sub
je
dec
sub
push
adc
(bad)
mov
ins
mov
ins
add
sbb
dec
sar
pop
(bad)
dec
add
stc
inc
or
pop
push
ret
adc
fprem1
adc
push
jle
add
ja
aas
pop
call
aaa
outs
pushf
or
pop
lahf
xchg
int3
push
cs
pop
jne
mov
inc
aad
mov
test
inc
or
(bad)
adc
das
cmp
fidivr
jmp
xor
outs
loope
mov
mov
outs
jnp
and
and
push
inc
inc
inc
sub
mov
(bad)
(bad)
scas
pop
adc
shrd
loop
pop
cmp
icebp
pop
jl
adc
cdq
xor
cmps
(bad)
fnstcw
jo
pop
cmp
xor
ret
xchg
xchg
mov
cmp
call
inc
stos
mov
jno
sub
adc
inc
gs
call
(bad)
loop
aas
shr
sub
sbb
mov
aad
iret
xchg
add
xchg
rol
xor
dec
jp
ret
mov
mov
fdivr
data16
xor
mov
rcl
or
les
mov
ror
nop
dec
cmp
dec
mov
mul
and
test
sahf
aaa
imul
adc
push
in
mov
imul
sub
push
adc
js
inc
cs
iret
inc
mov
daa
and
scas
xor
mov
cmp
xor
mov
daa
cmp
rcl
adc
mov
or
jecxz
les
test
mov
cmp
sahf
loopne
fwait
into
mov
sbb
and
stos
xchg
push
push
cmp
rcr
test
(bad)
jns
cs
add
mov
sbb
int3
ja
mov
int3
adc
inc
sbb
xchg
sbb
mov
sub
imul
adc
les
jo
in
adc
adc
out
and
mov
cld
dec
je
loopne
(bad)
push
add
int
(bad)
jbe
gs
and
lods
cmp
add
adc
mov
sub
rcr
xor
push
push
cmps
jns
hlt
stc
popa
(bad)
cmp
gs
jp
(bad)
or
cmp
fmul
sub
cmps
cld
sbb
mov
pop
data16
hlt
dec
std
pop
sar
shl
jne
rol
mov
sbb
aaa
mov
push
push
adc
das
in
add
jmp
jae
push
scas
mov
ja
cmp
push
sbb
sub
xchg
inc
xor
ror
add
and
push
xor
fcomp
xchg
xlat
push
les
stos
sub
inc
in
loopne
fisttp
adc
in
stos
sub
add
bound
inc
das
daa
out
sub
(bad)
int3
xor
push
mov
add
(bad)
adc
inc
inc
outs
inc
pusha
add
xor
ret
add
sbb
sbb
and
mov
mov
loope
cmps
push
xor
scas
shl
xchg
mov
(bad)
mov
imul
(bad)
out
inc
loop
xchg
sbb
movs
dec
lods
repz
dec
aas
(bad)
test
add
xchg
mov
pusha
dec
pop
pusha
in
mov
int3
mov
inc
add
and
xchg
jae
mov
out
fcom
shl
dec
outs
mov
add
inc
pop
shr
add
movs
pop
pop
(bad)
sbb
or
lahf
or
jae
es
inc
mov
sbb
aas
xor
cmp
jecxz
pop
push
add
mov
dec
mov
scas
test
xchg
push
add
mov
out
pop
mov
jne
cmp
add
out
mul
jecxz
cmp
mov
(bad)
pop
mov
mov
jmp
pop
in
and
aas
ret
sbb
xor
std
sbb
xchg
pop
mov
sbb
ficom
ss
out
xchg
push
hlt
jle
mov
mov
gs
dec
dec
inc
hlt
shl
xchg
ret
retf
ficomp
xlat
out
mov
das
push
js
inc
mov
fcom
in
push
pop
repnz
fistp
mov
repnz
xlat
adc
or
jp
aam
jns
lods
imul
mov
jp
adc
mov
addr16
int
and
enter
cld
xlat
int3
inc
or
and
xchg
adc
fwait
or
xlat
sub
fistp
xchg
out
jge
xchg
jmp
and
(bad)
inc
cdq
mov
rol
pushf
jbe
mov
aaa
push
cmps
out
mov
add
jmp
mov
jo
or
rcr
in
and
xchg
xchg
lods
fadd
dec
stos
push
xchg
(bad)
adc
xor
cli
arpl
ds
sbb
cdq
jbe
xchg
or
xchg
sar
aas
iret
mov
sub
jnp
jns
repz
fsubr
sbb
xchg
ficom
mov
and
jp
and
mov
cmc
sub
inc
movs
int3
push
daa
and
int
call
xchg
mov
xchg
mov
dec
sub
clc
mov
pop
mov
and
ret
mov
mov
sar
push
fwait
stos
sbb
cmp
add
jmp
scas
add
and
dec
sbb
xor
mov
jp
mov
jmp
pop
mov
mov
pop
xor
xchg
cwde
jl
mov
add
iret
xchg
add
retf
lahf
int
jmp
lods
nop
mov
(bad)
aam
and
int
and
add
ja
loope
inc
push
xor
je
xchg
push
out
add
in
int
(bad)
cmc
xchg
mov
fs
adc
mov
aas
xchg
retf
add
dec
das
dec
jge
push
push
jns
mov
repz
es
cmps
xchg
(bad)
dec
add
xor
mov
push
shr
(bad)
pop
sub
int3
mov
int3
mov
jo
imul
movs
or
cmp
in
mov
movs
jbe
icebp
pop
jbe
ins
ds
lea
jmp
pop
leave
popf
inc
jle
dec
mov
sti
nop
cmps
sub
push
mov
dec
(bad)
mov
and
sbb
push
cmp
push
inc
inc
jecxz
pop
(bad)
jmp
pop
fbld
inc
scas
jmp
stos
call
adc
pop
mov
and
ss
inc
mov
xchg
mov
dec
stc
add
in
leave
cs
movs
cmp
movs
jl
dec
push
movs
cbw
outs
ins
hlt
cmp
push
icebp
inc
shl
adc
push
fcmovu
dec
push
call
cs
loope
pop
dec
jb
sub
cmp
test
push
arpl
xchg
loopne
std
aas
mov
jb
and
out
lds
rol
dec
adc
lods
cmp
cmps
retf
xchg
push
test
or
aad
adc
lea
sbb
das
popf
call
jne
push
in
lods
mov
mov
enter
out
dec
addr16
mov
dec
jns
in
and
and
hlt
shl
push
fwait
ins
repz
pop
test
lock
ror
or
scas
inc
bound
rcl
in
pop
jo
fcomi
mov
test
mov
fild
push
mov
xchg
xchg
fs
inc
rol
sub
jmp
jp
adc
xchg
js
mov
aaa
xchg
and
out
loope
sbb
cmp
retf
sbb
pop
loop
paddusb
inc
push
cmp
out
scas
pop
sbb
inc
lock
scas
sbb
popf
mov
sar
stc
and
push
mov
cli
jns
mov
enter
sbb
iret
mov
jb
cmp
out
ins
jg
inc
jp
jae
ja
in
dec
mov
shr
out
gs
div
adc
xchg
loop
mov
cwde
retf
mov
jbe
inc
add
push
mov
jp
sbb
mov
inc
div
cmp
jae
mov
sub
ret
imul
jne
in
scas
in
mov
jecxz
or
dec
mov
cs
inc
mov
retf
test
push
push
or
repnz
mov
jmp
outs
xor
cdq
lea
sub
test
arpl
jnp
pop
aas
sub
push
popf
jno
adc
in
movs
cmc
or
xchg
ret
push
ret
je
fst
add
iret
xchg
push
addr16
call
add
sub
and
pop
clc
cld
pop
data16
xchg
div
pop
ror
jne
fs
mov
mov
sbb
cmp
cmp
rol
xor
out
and
mov
mov
dec
or
sub
adc
nop
loope
iret
xor
jp
call
fucomip
xchg
dec
xor
(bad)
adc
or
mov
mov
mov
push
adc
fnstenv
sbb
dec
jle
pop
lods
push
repz
ins
adc
push
push
mov
xor
xor
push
mov
mov
mov
test
cmps
iret
sub
dec
cmps
icebp
loope
push
push
sub
push
dec
push
dec
jno
lods
xchg
add
nop
jg
movzx
jmp
iret
lock
imul
mov
mov
retf
or
pusha
das
inc
adc
adc
and
sub
adc
add
adc
pop
adc
pop
fisub
sbb
mov
add
(bad)
hlt
add
loope
jo
loopne
jno
lock
fucomi
adc
sbb
movs
bound
movs
mov
sbb
jns
sar
fs
(bad)
sahf
sub
xchg
int
(bad)
pushf
inc
div
or
push
imul
push
out
fs
or
sbb
rcr
lock
xchg
inc
jbe
(bad)
dec
add
outs
mov
dec
jl
popf
ins
push
fst
push
or
imul
call
cmp
xchg
mov
mov
das
mov
sub
xchg
mul
popf
jne
pop
hlt
out
loopne
fidiv
enter
cmp
ss
xchg
cli
or
jge
or
je
pop
jl
xchg
jecxz
ret
push
in
daa
pop
movntps
gs
out
or
ret
mul
jle
fwait
push
call
fst
add
push
mov
(bad)
cmp
mov
pop
push
or
sti
shl
sbb
stc
push
pop
sti
mov
clc
xor
loope
dec
jns
nop
bound
inc
inc
pop
sbb
(bad)
out
mov
jl
in
les
imul
mov
inc
into
xchg
and
mov
dec
xor
out
test
jno
push
loopne
inc
sub
xor
mov
inc
xchg
mov
lods
jno
mov
xchg
push
rcl
pop
fwait
jb
lock
shl
ss
xor
adc
and
hlt
and
subps
adc
out
jmp
add
(bad)
pop
loope
cmp
lods
popf
fs
xchg
sub
inc
loopne
sub
in
push
xlat
fs
and
(bad)
cmp
dec
sbb
push
mov
or
leave
xor
out
pop
call
out
in
sub
retf
dec
cli
push
pop
cmp
sbb
cld
push
cmps
jo
call
rol
pop
mov
mov
cmp
mov
dec
das
and
dec
pop
xor
jge
xchg
dec
adc
outs
lahf
icebp
push
push
or
inc
loope
iret
adc
fild
pop
sbb
pop
fadd
repz
sbb
mov
cmp
mov
cld
sbb
(bad)
mov
ins
stc
mov
xchg
sbb
inc
(bad)
sar
cmps
mov
ret
mov
imul
push
mov
cmp
cmp
bndldx
jns
scas
jmp
dec
adc
imul
cmp
repz
pop
idiv
in
icebp
jae
iret
gs
sbb
jo
mov
mov
lock
xor
dec
cmp
push
dec
int
cld
scas
jno
scas
ror
push
or
inc
mov
movs
jmp
sbb
clc
xchg
sub
inc
(bad)
adc
pop
test
jbe
in
push
popa
arpl
adc
outs
fsub
loope
mov
popf
in
retf
xchg
int
push
das
push
fs
les
mov
add
pop
mov
and
jecxz
fcom
mov
jle
(bad)
xchg
in
lods
scas
sbb
jmp
sbb
pop
fild
mov
fs
sbb
jl
iret
adc
or
sbb
jno
pusha
cwde
jb
test
int3
xlat
xchg
mov
scas
out
stc
and
adc
or
sti
test
(bad)
pushf
push
mov
cmps
and
scas
(bad)
fmul
idiv
jnp
cli
fst
fucom
inc
mov
pop
adc
pop
mov
xor
gs
pop
inc
push
(bad)
sahf
movs
lock
xchg
in
inc
push
pushf
pop
and
cmps
xchg
retf
fild
js
fidivr
adc
mov
idiv
fs
outs
sahf
retf
sub
in
lods
gs
adc
pop
(bad)
int3
out
pop
fld
mov
stos
out
push
cmp
rcr
std
ja
out
xor
mov
iret
inc
mov
lods
pop
xchg
leave
push
leave
push
inc
mov
cwde
movs
aam
shr
test
mov
xchg
jno
push
lods
push
in
xchg
imul
mov
sub
push
xor
gs
(bad)
push
hlt
pushf
sub
or
adc
xchg
fild
sub
mov
jnp
scas
adc
int3
mov
sar
cmp
adc
xor
xlat
in
mov
test
rcr
test
mov
pop
and
(bad)
or
mov
pop
dec
jb
icebp
test
adc
push
xchg
jbe
jae
cmc
mov
mov
mov
mov
sub
xchg
cld
icebp
mov
cmps
sti
imul
leave
sub
push
mov
popf
fbstp
xchg
push
outs
pop
test
add
sbb
and
add
inc
sub
jg
sbb
loope
cmp
sub
inc
add
cmp
scas
sahf
sub
call
and
push
lahf
out
repnz
loopne
movs
fs
clc
inc
xlat
mov
mov
cwde
jg
movs
cmp
sahf
ret
mov
dec
dec
outs
push
sti
stos
(bad)
jg
and
adc
outs
push
mov
dec
(bad)
jecxz
lods
push
repnz
outs
inc
inc
call
popf
jo
fisubr
inc
test
xchg
cmps
les
inc
adc
int3
cmps
and
iret
cmp
out
sub
je
mov
and
cmp
cwde
je
shl
aam
mov
adc
cmp
pop
imul
fidivr
(bad)
pusha
add
lods
adc
push
(bad)
lea
dec
jp
cld
out
jecxz
popf
pop
sbb
pop
(bad)
dec
cld
add
test
mov
popa
aam
je
int3
imul
lods
sahf
jns
lods
popa
call
and
and
or
into
mov
mov
ins
add
add
add
jmp
jae
push
repz
mov
bound
sahf
xor
lahf
leave
mov
xchg
and
pop
or
sub
cwde
data16
dec
test
sbb
sub
xchg
ins
jl
sbb
adc
mov
imul
arpl
and
daa
or
repz
in
in
mov
sbb
push
adc
outs
jecxz
jecxz
cmp
cmc
xchg
jbe
test
lock
or
adc
(bad)
mov
mov
aam
xchg
adc
daa
repz
into
ss
ret
and
aam
arpl
pop
mov
inc
push
aam
push
and
out
test
or
jg
push
sbb
add
bound
pmaddwd
adc
mov
push
push
cli
adc
in
pop
fwait
mov
fldcw
push
out
into
call
sti
add
xor
mov
jl
arpl
pop
pop
pop
pop
(bad)
lock
cdq
xor
ins
inc
and
aaa
inc
cwde
and
shl
or
mov
dec
push
sbb
jbe
push
(bad)
cli
cmp
addr16
popf
fsubr
inc
out
add
rcr
adc
xchg
sub
shl
xor
lods
adc
gs
pop
cmp
cmp
hlt
(bad)
les
stc
or
adc
popa
mov
add
in
ins
scas
stc
fwait
pusha
xlat
test
xor
scas
aas
mov
das
shl
inc
ret
inc
inc
aas
rcr
sti
cwde
add
inc
xor
mov
jnp
adc
rcr
pop
pop
stos
pop
call
or
xchg
rol
cmp
retf
dec
pusha
lods
imul
ficomp
xchg
sbb
mov
scas
cmps
fisub
aam
sahf
(bad)
ficom
xchg
or
cmc
fidiv
stc
ror
rcl
mov
pop
add
(bad)
nop
mov
jbe
sar
clc
in
mov
jae
std
push
test
push
shl
push
xor
cdq
add
dec
push
sbb
inc
jbe
pop
in
movs
pusha
aaa
(bad)
sti
mov
inc
leave
jl
ret
call
xor
and
int3
test
jecxz
lds
push
and
jne
mov
add
arpl
icebp
(bad)
dec
jbe
movs
xor
mov
shr
ficom
xlat
dec
retf
jae
cdq
adc
add
mov
pop
shl
xlat
push
adc
add
je
mov
ins
repz
fadd
(bad)
test
int
xor
jne
adc
mov
das
enter
fwait
mov
cmp
int
and
sbb
mov
clc
into
aam
call
movs
dec
adc
leave
and
mov
mov
movs
loop
loopne
or
xor
lea
scas
icebp
aaa
cmp
mov
lock
test
push
cmp
cmp
jne
fsub
(bad)
repz
push
cmp
xor
pop
sub
lds
arpl
fidivr
sti
aam
int
and
int
dec
adc
jl
cmps
mov
sub
stc
lods
test
fs
outs
mov
cmc
or
pop
into
pop
add
jno
xchg
in
mov
ficom
fdivr
cwde
dec
push
xlat
fcom
stc
(bad)
jp
sti
jmp
gs
dec
daa
pop
xchg
test
push
mov
pop
data16
or
pop
sub
outs
mov
arpl
pop
gs
and
imul
in
arpl
push
in
inc
push
stos
mov
cmp
dec
(bad)
mov
test
adc
xchg
cwde
jmp
mov
pop
mov
cmp
adc
pop
xchg
cmc
mov
ds
(bad)
and
sbb
cmp
push
outs
mov
xchg
adc
mov
cmps
popf
sub
lds
dec
ja
fnstenv
xor
and
or
bound
lods
and
cdq
xchg
pushf
mov
pusha
mov
(bad)
jp
mov
xchg
mov
xlat
les
mov
sub
xchg
jns
jno
mov
lock
repnz
aaa
enter
pop
mov
jp
push
imul
sub
loopne
ds
inc
out
pop
sar
not
sbb
mov
cmp
mov
imul
iret
pushf
dec
repz
push
fldenv
scas
(bad)
adc
sub
ja
mov
inc
pop
mov
rol
jg
outs
scas
push
or
rcl
sbb
out
pop
addr16
xchg
jnp
(bad)
mov
imul
adc
daa
popa
xchg
cmp
xchg
or
add
mov
mov
nop
shl
inc
leave
fldenv
pop
ret
mov
movs
pop
aaa
inc
pop
dec
imul
jnp
movs
inc
sub
mov
adc
sbb
and
ja
xor
fstp
pop
movs
lods
jns
jp
adc
in
and
das
mov
or
scas
inc
sbb
pop
push
stos
icebp
xchg
push
dec
arpl
and
cmps
bnd
pop
int
xchg
xchg
mov
out
test
movs
xor
test
xchg
ret
(bad)
xlat
movs
push
jmp
jns
int3
retf
pop
pop
mov
out
dec
popa
xchg
je
stos
add
shl
pop
inc
fwait
jns
ds
mov
pop
int3
sub
mov
cmps
pop
jns
xor
sbb
ds
repnz
sbb
mov
jp
in
jo
sahf
addr16
pop
push
fisttp
sti
and
in
add
std
push
test
lods
rep
mul
xlat
xor
mov
ins
mov
outs
aam
sub
add
cmp
cmps
cmp
xor
packuswb
ret
inc
pop
and
dec
repnz
out
jmp
cwde
sbb
aad
adc
cmp
aas
(bad)
arpl
lods
cmp
xchg
jmp
xor
addr16
jecxz
cmp
pop
add
call
fincstp
jp
cs
call
push
ficomp
sar
xor
es
loopne
enter
popf
jg
sahf
in
or
(bad)
sub
movnti
movs
mov
jbe
add
mov
dec
adc
outs
repnz
retf
adc
jmp
sub
push
ret
lea
cdq
inc
push
adc
cwde
adc
pop
mov
mov
popa
pop
xchg
cmp
cmps
int
dec
push
add
les
scas
(bad)
call
or
or
loopne
add
jns
in
and
cmps
imul
add
mov
(bad)
jmp
in
add
std
cmp
stc
repz
xchg
mov
repnz
hlt
mov
push
lea
adc
std
inc
ret
rcl
jecxz
jp
lods
or
jne
xchg
sub
pusha
jmp
jmp
inc
or
mov
pop
pop
xchg
cld
adc
cmp
ret
mov
ds
sar
xchg
xor
cmp
mov
(bad)
dec
loop
popf
lea
jne
ror
pop
cmp
dec
inc
xor
frstor
rcl
pushf
loop
xor
xor
test
push
adc
fst
pop
test
xor
in
fsub
enter
fdivr
dec
or
sub
repnz
out
rcr
(bad)
cmp
int3
push
push
(bad)
aaa
cwde
cmp
sti
mov
fadd
sahf
pop
mov
adc
jl
popf
cld
jmp
aad
jno
inc
pop
cwde
push
ins
out
pop
sbb
cmp
icebp
push
neg
daa
jle
popf
and
imul
hlt
(bad)
adc
cmc
push
repz
mov
ret
ret
out
xor
call
(bad)
push
xlat
enter
jno
inc
mov
xor
fwait
aaa
adc
pusha
(bad)
cmp
dec
(bad)
mov
nop
xor
repnz
jl
jle
shr
sub
mov
test
js
stos
cmp
mov
xchg
and
jnp
fidiv
mov
ror
fist
inc
mov
and
into
xor
xchg
inc
dec
push
cmc
xchg
sub
not
dec
and
xchg
aaa
adc
popa
sbb
or
popf
mov
cdq
sbb
cmp
inc
jmp
inc
stc
mov
out
loop
ret
scas
outs
adc
pop
or
mov
dec
xchg
call
pop
into
or
jnp
jno
sbb
sbb
or
sub
inc
dec
xchg
popf
out
ins
mov
pop
mov
enter
gs
cmp
mov
mov
dec
cmc
push
push
(bad)
and
jns
ss
ja
xor
pop
sbb
in
mov
add
cmp
sbb
pop
psrlw
mov
(bad)
call
int
movd
mov
xchg
push
es
push
setp
ins
pop
add
or
aaa
and
sub
pop
ret
sahf
sub
pop
outs
inc
lock
(bad)
aad
in
cmp
aad
dec
ins
mov
jge
aaa
in
cdq
ins
mov
mov
(bad)
fcom
rep
dec
fucomp
push
mov
sar
stos
jle
in
push
ror
outs
icebp
test
and
inc
or
push
or
jmp
pop
inc
jl
pop
xchg
jo
cmp
push
mov
sub
stos
shl
shl
adc
sub
xchg
jns
add
dec
mov
out
fidivr
loope
pop
jo
push
ror
in
imul
add
or
jnp
xor
aaa
mov
xchg
loopne
imul
mov
xor
or
mov
shl
cmp
(bad)
jae
outs
mov
cmp
push
pop
xchg
aam
stos
call
data16
mov
adc
out
dec
out
mov
push
xchg
pop
and
fwait
in
imul
push
dec
sub
pop
clc
clc
lock
xchg
jmp
xor
mov
leave
shl
(bad)
sti
jp
jne
xor
out
push
xchg
xchg
stos
xor
mov
fmul
jmp
out
mul
ret
test
mov
mov
movs
gs
xlat
sub
mov
mov
or
fcomp
push
cld
mov
dec
mov
jp
pop
ins
cdq
out
js
dec
push
fs
mov
xlat
xlat
scas
iret
(bad)
sub
adc
hlt
(bad)
mov
addr16
neg
xchg
and
aam
mov
xor
add
pop
(bad)
loop
cmc
push
adc
xchg
out
ret
(bad)
push
cld
fimul
fist
mov
sbb
or
arpl
int3
mov
ja
sbb
xor
cmp
sub
jmp
mov
sbb
sbb
pop
pop
pop
cmp
(bad)
jle
cmps
test
dec
inc
outs
in
cmp
mov
js
fwait
imul
inc
aas
cmp
retf
mov
push
call
scas
jns
cmp
jbe
push
and
mov
into
push
fistp
mov
stos
xlat
retf
fist
dec
inc
call
bound
cmp
dec
in
adc
fnsave
dec
int
mov
aas
stc
cwde
push
jle
pop
or
hlt
popa
mov
push
jg
pop
push
repnz
leave
popa
mov
add
daa
sti
popa
mov
hlt
jbe
movs
scas
and
adc
inc
adc
test
jmp
loope
dec
push
call
out
sub
add
scas
or
test
mov
push
mov
add
outs
ds
cmp
jbe
movs
mov
imul
add
push
fwait
rol
cs
lea
rcr
mov
dec
mov
and
outs
inc
shl
shr
lock
inc
inc
jmp
aas
mov
loop
sbb
sbb
add
pop
(bad)
scas
push
jge
xor
dec
inc
retf
sbb
inc
sub
icebp
(bad)
dec
inc
in
and
sahf
adc
jge
cld
sub
jb
cs
pop
stos
xchg
cli
xor
add
pop
mov
xchg
aas
pop
jg
or
jp
out
daa
mov
cld
xchg
daa
mov
out
rcl
das
bound
adc
(bad)
mov
icebp
fild
pushf
movs
fisubr
mov
imul
mov
jo
rcr
popa
xchg
pop
fs
or
mov
retf
inc
mov
fld
cwde
stos
cdq
jbe
xor
test
imul
ja
dec
loop
dec
mov
ret
xlat
pop
movs
(bad)
daa
mov
imul
call
lds
aad
imul
scas
xchg
push
in
(bad)
out
fs
cmp
lds
fdivp
or
jne
pop
dec
xchg
icebp
leave
push
mov
icebp
or
push
xchg
and
add
push
add
es
jle
cld
lods
xchg
out
mov
movs
dec
shr
pop
xor
pop
mov
push
ret
dec
xlat
mov
jbe
dec
(bad)
push
mov
xor
mov
xchg
out
mov
rcr
inc
shl
cmp
rol
cmps
loopne
xchg
adc
xchg
je
rol
test
dec
pop
dec
test
sbb
fsub
icebp
fcomp
sub
dec
jo
xchg
lea
sbb
rcr
and
into
adc
cmp
cs
in
cmp
mov
jbe
and
sbb
scas
rol
(bad)
cwde
cmps
loope
gs
jo
cmc
jmp
fcmovbe
ss
push
push
mov
sub
call
xor
lea
out
ret
and
sub
pop
hlt
sbb
leave
or
inc
ins
stc
mov
scas
imul
rcr
stc
sub
mov
pusha
fild
cmc
mov
sbb
cmp
sbb
rcl
loop
and
je
cs
stos
fisubr
sbb
pop
sbb
push
out
in
cmps
dec
mov
or
out
daa
fiadd
loopne
pusha
addr16
or
xchg
das
repz
mov
inc
cmps
rol
sub
mov
push
jge
enter
outs
adc
push
mov
adc
dec
inc
loope
repnz
leave
movs
movs
daa
jb
jmp
outs
retf
push
imul
cmp
dec
jne
sbb
cdq
cmc
retf
mov
loope
or
jno
jl
adc
add
(bad)
push
fsub
loope
cld
adc
jae
xor
jno
das
(bad)
aam
pushf
cmp
sbb
pop
or
inc
sub
pop
fs
mov
popf
fucomip
or
mov
pop
pushf
xchg
out
add
mov
push
in
cwde
mov
inc
jno
(bad)
cs
mov
mov
bound
dec
xchg
(bad)
call
loop
adc
(bad)
xor
add
mov
xchg
imul
pop
jmp
aas
data16
mov
popa
jmp
(bad)
ins
rcl
shl
mov
xchg
push
mov
cdq
and
add
mov
pushf
cli
clc
fisub
and
pop
(bad)
fld
neg
scas
cmp
les
clc
cmp
inc
mov
add
or
inc
jg
push
adc
mov
aas
test
push
sub
cmp
sub
mov
xchg
and
push
xchg
adc
arpl
mov
mov
bound
mov
repz
cmp
jmp
ret
mov
aam
xchg
add
mov
pop
pushf
mov
in
inc
and
stos
xchg
retf
pop
push
test
pop
sub
mov
and
inc
adc
inc
mov
pop
lods
cmp
sti
and
xlat
les
push
hlt
ret
xor
out
xlat
add
mov
xchg
retf
in
jle
popa
jns
fiadd
sbb
(bad)
enter
lds
mov
popf
push
add
mov
imul
mov
jle
out
loop
(bad)
ds
je
inc
hlt
lods
inc
fnstsw
add
(bad)
out
icebp
ret
test
sbb
fnstcw
rcr
pop
mov
and
cdq
xchg
push
adc
data16
inc
dec
pop
pop
addr16
ret
cld
jne
sbb
xchg
jle
cmps
adc
mov
outs
sub
sbb
ret
add
jecxz
(bad)
out
(bad)
icebp
(bad)
or
jg
dec
cli
shl
call
add
mov
sbb
fldenv
jmp
sbb
mov
xchg
repnz
rol
cld
fs
xlat
std
repz
add
adc
sbb
mov
add
ja
test
addr16
iret
stos
fdivr
pusha
push
cmc
sahf
push
test
sub
dec
clc
fist
hlt
cmc
xchg
jae
fmul
sahf
and
pop
xchg
ret
pop
leave
in
test
pusha
push
xchg
add
push
fdiv
lahf
test
cmp
lock
or
je
sub
mov
icebp
add
jmp
push
fbld
scas
mov
arpl
sahf
fnstcw
push
ins
das
xor
cld
pop
cmp
adc
sbb
pop
pusha
js
mov
lahf
mov
jns
fs
ret
cmp
mov
loopne
jle
adc
in
pop
xchg
pop
xchg
push
pop
test
addr16
push
aad
inc
adc
sub
out
mov
or
scas
pop
into
icebp
cmps
mov
stc
mov
sti
shl
fistp
cmp
enter
jb
cli
xor
sub
bound
push
lods
dec
lods
jns
(bad)
jp
xor
or
mov
adc
test
and
inc
mov
call
ror
inc
mov
cmp
jecxz
pop
dec
xchg
mov
hlt
shr
mov
jns
data16
xchg
or
aam
mov
dec
in
push
repz
sbb
adc
push
inc
jno
dec
push
mov
xchg
and
sbb
retf
fst
ret
jns
daa
into
or
cmp
shr
xchg
sub
inc
loop
outs
inc
or
retf
fst
cmp
mov
sub
cmc
std
dec
gs
push
imul
popf
popf
mov
jg
add
or
es
leave
sbb
rcr
inc
mov
test
or
test
xor
popa
and
dec
jg
xor
mov
xor
pop
lods
push
aam
out
mov
jae
inc
pop
fadd
xor
dec
xor
mov
pop
fdiv
adc
cmps
xor
leave
push
cld
adc
je
pop
xor
out
cmp
or
mov
dec
rol
sub
loopne
mov
test
test
dec
aam
scas
jle
and
aas
arpl
cmp
sbb
daa
or
xchg
xchg
jns
outs
enter
xor
pop
mov
test
push
int
in
and
mov
aad
push
aad
rcr
mov
test
fstp
add
cmp
mov
cli
adc
retf
loop
mov
cmc
out
aaa
xchg
fsub
outs
sub
mov
imul
repnz
stos
adc
push
mov
test
scas
ds
loope
inc
stos
fld
test
adc
inc
xchg
push
push
(bad)
ja
in
jbe
stos
pop
pop
adc
inc
cmp
xor
cmps
inc
and
push
fs
mov
(bad)
push
cmp
push
out
adc
cld
les
call
jmp
ss
push
mov
lods
jmp
mov
dec
mov
sbb
clc
xchg
lock
jae
test
imul
call
les
lahf
and
sub
xchg
shr
in
xchg
stos
dec
out
jmp
fidiv
mov
in
stos
mov
xor
sub
stc
push
call
stc
add
mov
pop
mov
stc
aas
sbb
cmps
imul
cmp
and
jp
push
cmps
mov
pop
add
cwde
jno
popf
cmc
jmp
repz
fimul
fadd
sub
sub
leave
out
mov
mov
ins
mov
les
in
nop
push
jae
jne
pop
add
retf
xchg
(bad)
shl
jno
mov
movs
pop
call
jl
adc
mov
hlt
leave
mov
test
inc
mov
push
dec
sub
mov
js
(bad)
ficom
jecxz
xchg
add
push
inc
sub
test
neg
das
std
repz
mov
fsub
inc
xchg
dec
pop
jmp
mov
int
daa
cmc
sub
fisubr
xchg
movs
test
lahf
adc
shr
sub
mov
add
add
inc
ins
mov
xchg
adc
pop
aam
add
dec
push
pusha
and
sbb
dec
hlt
cmp
ja
inc
mov
scas
sbb
sub
mov
mov
push
idiv
pop
fadd
imul
inc
ds
cwde
push
movs
fidivr
ds
add
pop
imul
loopne
movs
pop
or
outs
retf
jbe
and
jg
xchg
pop
lods
adc
pop
daa
push
adc
cmps
popa
pop
mov
mov
(bad)
sub
loopne
out
jnp
push
mov
fwait
dec
loop
xlat
xchg
xchg
movs
test
add
pop
dec
pop
shl
dec
ja
std
inc
or
or
nop
jp
hlt
adc
cmp
xlat
stc
shr
out
and
das
sub
inc
mov
pushf
aam
(bad)
adc
xchg
cwde
clc
out
push
in
out
test
cmp
jcxz
cdq
pop
mov
add
pop
leave
mov
mov
cmp
retf
sbb
into
mov
lds
cmps
adc
xor
xlat
retf
jle
push
jae
dec
or
xchg
shufps
sub
out
scas
loope
ret
pop
mov
aad
jmp
sub
xlat
pop
(bad)
jmp
psubusw
movs
les
lock
push
and
sub
sti
loope
loop
sub
pop
jmp
push
out
repz
cmp
mov
test
add
mov
add
cwde
arpl
and
addr16
int3
mov
xchg
je
mov
pop
in
cmp
jae
pop
sub
imul
aam
cli
cmpxchg8b
cmp
enter
gs
imul
or
into
cmp
add
inc
aad
lahf
fs
(bad)
out
push
jmp
movs
fnstsw
mov
popf
(bad)
aam
mov
mov
mov
call
mov
mov
and
cdq
jmp
and
jl
int3
out
stc
clc
pusha
cmp
fisub
iret
lods
push
or
ret
shr
in
or
add
or
je
lods
cmps
mov
sub
movs
out
stos
xor
adc
(bad)
call
inc
out
mov
and
sub
pop
movs
in
adc
arpl
test
scas
push
leave
mov
xor
and
adc
dec
aam
mov
xor
lea
out
in
xor
or
clc
adc
loop
sti
mov
and
call
(bad)
xor
movs
pop
out
pop
shr
lods
add
iret
inc
stc
ja
push
cmp
test
jecxz
push
pop
pop
mov
into
pop
(bad)
and
mov
out
pushf
adc
(bad)
mov
and
scas
jecxz
movs
iret
repnz
rcl
inc
shl
ins
dec
or
mov
or
push
adc
cwde
xor
int3
jns
shr
std
psrad
push
arpl
pop
sbb
mov
test
or
cmc
imul
jbe
pop
xor
rep
push
cmp
xor
mov
ds
jo
popa
into
loop
test
mov
sbb
out
in
pop
xlat
mov
ret
inc
out
popa
jae
sbb
cdq
sub
xchg
pop
int3
mov
cmp
in
movs
cmp
dec
xor
inc
cli
jo
pop
add
xchg
cli
cs
add
mov
sub
lahf
push
add
iret
(bad)
gs
hlt
jnp
inc
iret
fcmove
out
call
cmps
stos
jmp
push
leave
popf
xlat
inc
data16
push
xchg
das
test
lahf
sbb
cmp
jae
pop
fisttp
jecxz
pop
inc
test
cli
outs
repnz
retf
aad
test
mov
out
and
inc
xor
jge
mov
cwde
fwait
in
add
sub
daa
sub
out
jb
inc
(bad)
jge
and
xor
sar
push
jle
in
cmp
and
stc
into
sub
sti
das
lods
and
xor
pushf
or
stc
popa
cld
xchg
in
stos
fist
imul
dec
xor
inc
mov
pop
push
loopne
jp
leave
es
fcomp
push
jmp
xor
out
mov
enter
and
pop
ja
push
sar
push
push
jns
sbb
jo
nop
push
and
sahf
ja
mov
loop
retf
test
arpl
retf
fisubr
xor
mov
adc
outs
mov
inc
aad
das
retf
push
push
(bad)
or
aaa
fdiv
dec
ficom
mov
mov
popf
mov
cwde
xchg
dec
fstp
pop
jae
stos
fidivr
fcmove
dec
add
push
add
dec
mov
jno
fmul
les
das
jmp
pop
mov
cmp
frstor
rcl
cmps
cdq
nop
sbb
xor
inc
not
test
loop
mov
sbb
sbb
mov
cmp
retf
cmp
int
popf
sahf
cmp
mov
mov
popf
cwde
data16
pop
cmp
xlat
out
jg
in
push
bound
pop
fstp
mul
in
ret
inc
adc
pop
dec
in
pop
mov
dec
mov
pop
clc
add
lock
(bad)
(bad)
outs
not
test
shr
mov
and
xchg
mov
sub
ret
movs
sub
dec
neg
add
scas
sahf
xchg
(bad)
jmp
sub
and
not
mov
jo
fldcw
mov
repz
push
ja
arpl
mov
jne
iret
sub
cdq
sub
or
push
mov
enter
sbb
lahf
test
mov
hlt
sub
movs
adc
(bad)
jp
push
mov
and
ret
mov
loop
retf
push
sahf
dec
sbb
dec
rol
call
sub
(bad)
sub
inc
pop
lahf
movs
cs
rcr
push
in
neg
inc
arpl
push
mov
iret
cmp
push
mov
sub
shr
mov
mov
push
jnp
xchg
shr
push
neg
sbb
xlat
sub
pop
dec
clc
pop
out
xor
xor
or
or
in
(bad)
popa
pop
sub
ins
icebp
dec
xor
nop
in
int
xor
movs
mov
frstor
sahf
clc
add
push
icebp
test
sub
xchg
pop
sbb
scas
mov
(bad)
dec
loope
mov
test
pushf
jp
dec
pop
outs
mov
frstor
imul
in
jle
sbb
xor
ja
sbb
(bad)
ins
bound
or
push
jecxz
pop
jae
jl
or
pusha
push
jo
pop
(bad)
(bad)
jno
cwde
stc
pushf
cmp
gs
int3
bnd
sub
(bad)
data16
sub
sub
stos
(bad)
es
ds
test
(bad)
dec
or
add
cdq
and
push
add
gs
add
jns
fwait
mov
mov
(bad)
shl
pop
add
stos
pop
inc
sub
and
lahf
in
leave
dec
and
sahf
fsub
bswap
sbb
lds
mov
cmp
movs
mov
sub
xor
(bad)
cmps
shr
jle
sbb
lea
push
mov
cli
adc
out
fnsave
adc
inc
inc
and
dec
fiadd
sub
out
pop
push
pop
std
loopne
int3
aad
retf
(bad)
ficom
mov
stos
cmp
mov
(bad)
cwde
fisttp
xchg
mov
push
call
inc
lods
(bad)
mov
pop
icebp
xchg
dec
scas
pop
add
push
data16
out
cmp
and
push
push
pop
mov
outs
or
pop
je
jb
mov
xchg
push
popf
dec
sar
sti
test
jmp
ss
mov
xor
fadd
cmps
pop
mov
test
sub
inc
(bad)
jb
adc
aad
ins
fld
cdq
mov
nop
fstp
lods
in
add
dec
pop
sbb
adc
out
nop
add
xlat
out
retf
lock
mov
add
xor
inc
sub
jmp
adc
cmp
inc
imul
mov
aad
jbe
cmps
cmp
test
inc
sbb
cld
mov
and
pop
rol
cdq
notrack
les
pop
adc
inc
ret
sti
fucom
xchg
inc
and
xchg
cwde
js
fsubr
sar
inc
stc
fs
bound
lock
int
add
shl
ds
out
xchg
ins
pushf
lods
lods
es
call
jnp
pop
cmp
pop
add
add
jne
and
aam
pop
inc
mov
mov
xor
dec
fcomip
mov
cmc
(bad)
imul
cmp
xchg
dec
loope
mov
fadd
hlt
or
pop
cdq
push
bnd
xchg
adc
dec
repnz
fiadd
sbb
cwde
jno
add
push
fmul
mov
push
ins
jo
mov
jmp
cmp
ror
pop
imul
daa
adc
mov
inc
sar
(bad)
ds
inc
mov
stos
add
and
mov
jne
fidiv
xor
jmp
push
int
in
pop
add
sahf
stos
mov
(bad)
dec
add
pop
outs
pop
dec
in
out
and
fsubr
dec
imul
in
in
shr
fbstp
mul
mov
fwait
and
movs
aaa
push
aaa
jne
sub
fnstsw
retf
jecxz
and
adc
aaa
add
mov
push
dec
or
push
or
mov
push
cmp
or
mov
popf
or
lock
jbe
and
inc
repz
mov
lds
ins
cmp
ins
xchg
inc
dec
retf
dec
retf
nop
out
dec
jae
inc
sbb
test
jb
shr
mov
add
call
push
add
cli
loop
mov
(bad)
mov
dec
retf
outs
retf
shl
xor
(bad)
in
inc
push
or
das
das
xlat
push
aas
stos
mov
shl
xchg
sbb
cwde
pop
xor
jmp
(bad)
dec
jecxz
div
or
(bad)
inc
and
les
in
aam
shr
sti
pop
xchg
jne
xchg
sub
int3
mov
leave
xor
ds
pop
dec
enter
imul
and
ror
(bad)
mov
mov
movs
mov
cmp
mov
stos
add
sub
cmc
loop
cmps
jmp
xchg
jmp
jno
std
push
adc
(bad)
in
test
bound
sub
pop
push
call
lahf
jg
and
movs
dec
mov
sbb
in
(bad)
jg
fs
sub
das
jne
or
repnz
dec
or
jns
call
retf
fidivr
and
sub
xchg
cmp
jl
or
js
ret
inc
adc
xchg
imul
je
add
adc
jmp
adc
inc
or
or
sti
xor
add
(bad)
push
sbb
or
in
or
push
mov
cmp
mov
sbb
rcr
popa
clc
xor
ficom
or
pop
int3
xchg
sbb
mov
mov
call
mov
jg
dec
sbb
cdq
mov
jno
shr
mov
adc
fistp
xor
xor
xchg
jns
cld
adc
mov
cmc
inc
mov
jne
push
mov
scas
mov
push
jo
cmp
sbb
clc
stos
fwait
sub
out
push
je
call
xor
pop
lds
sbb
adc
sub
dec
dec
inc
or
cmp
inc
int
mov
fld
push
mov
jmp
sub
and
xchg
test
jmp
imul
cmp
pop
pushf
stc
push
adc
(bad)
retf
cmps
sbb
gs
and
lock
xor
les
cdq
cli
sar
imul
call
out
jmp
xchg
fdivr
ss
cs
and
sti
daa
jecxz
imul
sbb
push
push
and
fnstcw
fisubr
arpl
xchg
mov
popf
retf
push
clc
mov
mov
fcmovnbe
sbb
jbe
or
daa
jmp
or
mov
push
mov
and
neg
push
fcmovnbe
or
cmp
ja
les
aas
mov
sbb
into
aad
pop
fbld
add
mov
add
sbb
das
adc
mov
lods
(bad)
dec
fstp
sub
lods
inc
std
push
mov
jl
cmc
mov
jmp
lods
jmp
in
sar
xchg
imul
xor
mov
jmp
sbb
lods
daa
out
pusha
cmp
loop
inc
sar
mul
add
arpl
or
jae
ret
cwde
push
shl
cwde
add
int
and
stc
jle
fiadd
cdq
or
mov
mov
add
cmp
mov
jmp
call
sar
pop
aaa
jmp
int
data16
sub
sbb
es
inc
in
ficomp
sub
ficom
xchg
data16
jl
and
je
in
mov
push
push
cmc
ret
loopne
not
cdq
aad
jae
or
cmps
icebp
ins
(bad)
jmp
pop
call
cmc
xor
in
pop
out
cmps
xchg
xchg
leave
dec
mov
lods
xchg
and
dec
jmp
dec
sub
pop
adc
pop
mov
xor
imul
movs
cld
or
and
(bad)
mov
in
loop
aad
mov
retf
mov
outs
nop
add
rol
cli
mov
movs
jg
add
daa
lock
js
mov
loop
mov
and
adc
icebp
fwait
std
test
popa
cli
and
(bad)
mov
mov
out
jecxz
repnz
cmps
in
xchg
arpl
in
fisub
stos
dec
inc
add
cmp
shl
cli
push
mov
pushf
adc
mov
mov
jp
push
ja
icebp
aas
adc
sub
cmp
jnp
test
ud0
aaa
cli
repnz
add
jns
idiv
inc
mov
gs
pop
pushf
cld
mov
adc
lods
and
mov
xchg
or
fs
jne
in
inc
push
test
daa
sub
test
dec
xor
not
(bad)
call
and
loope
push
cs
hlt
sub
fsubr
jle
aas
mov
sub
enter
sbb
cmp
stos
out
aaa
inc
mov
out
pop
jb
adc
adc
add
fcomp
popa
ss
movs
pop
gs
ds
stc
mov
dec
cli
cmps
ins
out
dec
repnz
je
xor
dec
adc
sbb
mov
push
mov
or
icebp
pop
add
cmp
sbb
popa
into
imul
cs
sbb
add
adc
push
rol
adc
ins
loopne
(bad)
cmps
in
sti
sub
inc
lods
shl
fistp
repz
xor
jl
(bad)
(bad)
adc
pop
adc
jge
push
rcl
mov
push
aaa
pop
movs
sbb
adc
and
dec
es
add
mov
xor
cmp
sub
repz
inc
jns
cmps
clc
inc
jne
jl
fimul
sbb
pop
xor
mov
push
push
pop
cld
pop
js
xchg
daa
out
mov
xchg
(bad)
je
xchg
fsub
and
cmp
xor
aaa
mov
mov
dec
fnsave
test
and
scas
sub
ficom
inc
aas
stc
mov
enter
xchg
xor
adc
inc
or
aas
jnp
into
aad
push
inc
sub
inc
jge
rcl
fcmovu
or
sahf
psubsb
fist
popf
lock
pop
addr16
das
into
iret
leave
pop
mov
pop
jmp
add
pop
enter
aad
fbstp
cmp
out
js
cmp
xchg
push
add
retf
jecxz
xchg
cmps
cli
dec
jbe
sbb
(bad)
cmp
aaa
cmps
push
inc
div
adc
in
sahf
daa
call
jns
inc
and
pop
xchg
call
stos
pop
or
xchg
jmp
arpl
into
add
push
xor
das
in
cs
shr
add
jae
pop
mov
lods
ret
mov
xchg
mov
popa
pop
fwait
ret
pusha
pop
mov
shr
out
jae
clc
popw
xchg
pop
imul
adc
in
popf
das
mov
rcr
popa
jecxz
push
shr
test
mov
loopne
or
xchg
(bad)
sbb
xchg
and
push
mov
dec
stc
or
and
in
mov
sbb
jmp
pop
leave
jge
or
sub
push
sbb
push
jb
popf
xor
movs
mov
or
mov
push
fldcw
and
jnp
pop
adc
jge
mov
adc
or
inc
sbb
add
mov
dec
sub
fs
xor
pop
lods
sbb
mov
call
stc
loop
pop
in
mov
in
cmp
add
inc
xlat
jae
push
sbb
adc
dec
xor
stos
xlat
lds
sbb
icebp
jae
push
stos
enter
push
cmp
imul
cmp
sub
push
inc
ins
lods
inc
sbb
push
rcr
mov
int
dec
pop
inc
fist
xchg
mov
jb
mov
mov
or
enter
mov
xor
ret
push
(bad)
fdiv
loop
js
mov
mov
in
inc
ret
mov
xor
cwde
mov
mov
xor
cmp
stc
pop
(bad)
cli
sbb
jne
cmp
mov
rol
arpl
xchg
xchg
fs
shl
fwait
aam
push
addr16
mov
mov
xchg
out
sti
nop
lock
adc
rcr
jmp
ins
or
shr
jecxz
xchg
imul
dec
lock
xlat
mov
xor
lea
cmc
retf
jp
jnp
retf
sti
lock
sahf
cmp
dec
call
imul
out
push
jge
ret
mov
fwait
pop
int
call
add
in
aam
jno
out
push
pop
js
hlt
mov
fidivr
cmps
mov
jle
cmp
sub
push
sahf
add
pop
xchg
jnp
loopne
pop
imul
fs
lods
mov
mov
bound
loope
pop
xor
daa
mov
dec
mov
(bad)
sbb
rol
or
sub
outs
push
mov
(bad)
pop
inc
ss
xor
mov
adc
pusha
push
push
lds
push
hlt
sti
js
inc
imul
mov
ss
movs
push
add
inc
pop
or
clc
pop
mov
cmovno
not
mov
and
(bad)
inc
(bad)
inc
inc
popf
pop
sub
in
inc
adc
stc
sbb
rol
shr
pop
xchg
xchg
sub
mov
cmp
sbb
std
dec
popf
inc
dec
daa
in
add
fdiv
test
add
or
push
shr
shr
add
push
fucom
xor
(bad)
sar
aas
xchg
(bad)
jno
int3
xchg
xchg
out
dec
inc
add
cmps
fbld
mov
mov
fimul
push
int
(bad)
popf
data16
add
es
mov
push
arpl
call
ss
xor
xchg
cmp
dec
adc
fs
mov
pop
mov
aaa
inc
dec
mov
int
outs
pusha
addr16
add
sub
call
xor
call
ret
data16
xlat
cmp
fidiv
push
mov
stc
lods
push
sbb
movs
aas
mov
cmp
and
mov
dec
mov
push
ins
mov
xor
call
fcom
ja
cli
add
xchg
or
(bad)
inc
pop
mov
sti
adc
loopne
xchg
jbe
sahf
or
outs
push
pop
jg
call
call
xor
sti
pop
push
sar
xchg
icebp
adc
repnz
dec
sbb
fld
lahf
stos
sub
xchg
cmp
jns
xchg
in
cdq
mov
pop
imul
ret
push
or
aad
data16
in
ins
xor
mov
adc
cwde
dec
dec
xor
cwde
imul
jns
ret
daa
mov
das
or
ss
xchg
out
fild
js
mov
into
loop
mov
les
out
imul
std
jg
sbb
(bad)
pusha
popf
leave
stos
dec
jo
in
cmp
sub
rcl
mov
adc
int3
fld
pop
add
in
or
push
loop
out
xor
pop
(bad)
push
or
loopne
mov
dec
xchg
cmps
cmc
mov
ins
jecxz
jg
push
lock
arpl
xor
clc
in
ins
icebp
xchg
adc
adc
mov
mov
fld
xor
imul
mov
sub
xor
add
pop
sti
rcr
fwait
mov
loopne
dec
mov
mov
adc
cmp
add
inc
mov
lods
inc
shr
adc
mov
inc
or
mov
lea
pop
fwait
(bad)
in
push
pop
jae
add
and
cmc
xchg
cmp
fcmovu
add
push
and
sti
mov
sub
das
jbe
pop
addr16
bnd
das
dec
sbb
sti
fld
sahf
(bad)
push
loop
lods
sahf
scas
das
mov
sbb
in
mov
loop
adc
ja
test
inc
push
mov
loop
out
cld
mov
sub
mov
push
inc
xor
test
dec
loopne
add
push
sub
mov
pushf
fistp
ins
dec
dec
mov
mov
out
call
stc
cwde
lock
add
sbb
push
cdq
xchg
xchg
jo
imul
out
shr
test
popa
adc
inc
ja
call
mov
add
pop
cdq
or
xor
sbb
jl
shl
loope
dec
mov
(bad)
retf
sub
(bad)
pushf
cmp
call
in
xchg
imul
or
mov
push
mov
aam
or
or
xchg
add
push
dec
mov
popf
les
inc
sub
ins
xor
add
lods
jecxz
ror
push
ret
(bad)
retf
sbb
cwde
pop
retf
sbb
inc
add
sbb
mov
retf
sub
and
or
stos
xchg
pop
xchg
and
dec
sbb
pop
mov
sub
test
hlt
sub
and
sub
mov
cmp
add
push
stos
cmps
add
cld
xchg
cmp
pop
cmp
sbb
retf
sub
push
mov
adc
lds
repz
js
jb
sti
xchg
(bad)
mov
leave
test
into
ins
mov
pop
fsubrp
jl
xor
mov
mov
push
or
popf
xchg
call
pop
or
jnp
xchg
cmp
clc
out
dec
not
push
stos
xor
es
adc
jns
or
leave
test
mov
nop
jmp
or
push
lea
mov
cmp
test
inc
fldcw
(bad)
push
cmp
or
push
in
mov
cdq
lahf
in
sub
add
jno
rcl
cdq
adc
xchg
cdq
jne
and
in
cmp
into
not
cmps
test
xchg
push
jl
sar
sub
pop
int
das
lock
xor
les
repnz
cld
js
xor
mov
mov
xor
fsub
xor
rol
cmps
(bad)
std
data16
repz
fs
mov
sbb
jnp
adc
mov
stc
call
sbb
(bad)
mov
adc
xchg
lods
ds
mov
xlat
add
bound
shl
push
(bad)
test
jae
adc
cld
mov
pop
xchg
and
(bad)
xor
mov
dec
fnstenv
leave
mov
jo
aaa
fistp
pop
sub
push
mov
out
ins
fidivr
in
(bad)
pop
pop
ins
jle
shl
inc
in
shl
inc
xor
lods
aam
out
test
jmp
leave
out
pop
loope
pop
cwde
push
cwde
pop
adc
shl
rcl
rcl
fcom
ds
inc
dec
mov
scas
adc
jle
cld
push
retf
mov
test
sbb
fisubr
jbe
(bad)
dec
aam
daa
(bad)
xor
and
dec
aaa
repz
push
cld
mov
imul
call
shl
mov
push
movs
xlat
fadd
(bad)
dec
enter
pop
mov
sti
push
mov
aam
jge
jmp
daa
sub
stos
xchg
sbb
adc
int3
inc
imul
cld
xchg
(bad)
jl
retf
(bad)
repnz
cmp
cmps
fild
push
call
ret
dec
inc
lea
sub
out
mov
cmp
sub
cdq
cmp
cmp
jb
cmp
push
(bad)
das
pop
pop
cs
inc
leave
push
push
adc
jno
jae
xor
sub
xor
sbb
xor
push
pop
inc
es
popa
adc
lock
test
sub
shr
rcl
pushf
cmp
out
scas
shl
test
sub
fiadd
push
lea
sti
lds
pop
mov
loop
lds
or
inc
xor
(bad)
jns
loopne
mov
loop
dec
movs
sti
mov
aaa
out
sti
dec
cmps
mov
mov
movs
jp
(bad)
sbb
mov
inc
mov
xor
jae
dec
out
xchg
mov
pop
lods
fcomp
hlt
cmp
cmp
fsubr
sub
repnz
out
sub
inc
mov
sbb
sti
test
adc
xchg
pop
pusha
leave
outs
mov
out
pop
dec
out
hlt
in
push
inc
rol
inc
inc
data16
mov
mov
and
retf
mov
dec
std
leave
scas
lea
lds
das
lock
std
das
scas
cmp
call
jmp
mov
inc
mov
pop
mov
cld
adc
jge
(bad)
sub
jnp
dec
(bad)
mov
dec
shr
mov
fnstsw
pop
add
std
nop
mov
dec
aaa
das
(bad)
jae
mov
add
lods
loop
xchg
(bad)
jnp
jp
(bad)
int
test
test
ret
mov
fs
xor
mov
inc
dec
mov
(bad)
jbe
movs
jecxz
daa
sub
nop
mov
rcl
mov
jae
cwde
cmp
mov
xchg
rcr
pop
jg
and
push
int3
sahf
shr
sub
xchg
cmps
mov
cmc
repnz
fcmovne
cmp
addr16
pop
sub
sahf
cmp
xor
add
jle
fdiv
mov
mov
sbb
jmp
push
int3
cdq
test
scas
fcomp
xchg
ret
lock
ret
loopne
mov
or
lahf
fcomip
and
and
push
jg
cmp
dec
mov
push
ins
movs
call
dec
pextrw
inc
stc
sar
xchg
inc
push
mov
jmp
adc
push
std
iret
mov
dec
movs
mov
ds
sub
push
repnz
jae
xor
arpl
dec
out
test
pop
add
hlt
inc
jecxz
dec
mov
call
push
pop
in
mov
mov
push
pop
inc
enter
imul
aam
pop
das
jnp
clc
cs
xchg
mov
sbb
xor
and
stc
sub
xor
sub
or
mov
jl
push
adc
repz
ss
sub
push
push
in
cmp
xchg
add
jge
jl
aad
sub
jnp
push
xchg
stos
mov
xchg
mov
mov
daa
mov
mov
popa
jns
clc
retf
stos
jno
xor
stos
mov
jl
stos
loopne
aam
xchg
test
shr
inc
cmp
ss
adc
mov
loopne
xchg
popf
jns
push
ins
rcl
push
jne
mov
adc
push
call
call
enter
sub
dec
(bad)
lock
mov
xor
jne
iret
je
adc
xlat
cs
pushf
mov
or
xlat
xor
dec
std
pop
adc
lea
jecxz
or
ds
leave
xor
mov
fcomp
jo
fdiv
out
aas
stos
jle
stos
and
cmc
in
or
cmp
adc
jbe
inc
pop
(bad)
mov
jl
mov
push
jnp
lea
fmulp
call
sbb
in
mov
mov
(bad)
xchg
add
repnz
popa
push
push
shl
jmp
mov
(bad)
cs
arpl
xor
fdiv
inc
cs
pop
in
jge
popa
xchg
mov
outs
ret
xchg
scas
nop
iret
ret
aam
lods
pop
xlat
inc
int
push
sub
pushf
test
in
ds
mov
movzx
ds
and
fld
jmp
test
fxch
mov
call
test
icebp
jmp
adc
in
jmp
std
inc
bound
(bad)
jb
push
push
into
pop
int
inc
push
jmp
mov
jmp
imul
add
adc
push
or
jg
rcl
setno
rcl
out
and
mov
inc
mov
cld
push
sar
pop
bound
out
retf
clc
int
dec
and
dec
push
or
inc
mov
mov
cmps
shr
jbe
test
lds
mov
pop
inc
push
or
aaa
push
push
out
cld
std
mov
xchg
cmp
sbb
es
mov
and
(bad)
movs
mov
pop
in
fnstcw
fmul
jo
jo
pop
out
daa
mov
jecxz
and
push
or
jnp
pop
call
mov
lds
add
mov
dec
push
mov
cs
mov
jmp
data16
inc
mov
in
pop
pop
stc
jbe
xlat
jne
cmc
ror
sub
aad
jae
cmc
cmp
jns
xor
ror
dec
int
xchg
jmp
and
jmp
push
mov
outs
stc
test
inc
cmp
add
pop
fisttp
push
jnp
push
hlt
cmps
jp
sar
out
sub
lds
add
leave
jns
inc
cmp
jb
and
mov
ja
imul
lods
push
in
xor
mov
cmc
push
sub
loop
xor
jb
popa
dec
adc
scas
loopne
sbb
addr16
xor
movs
stc
fcomp
dec
mov
pusha
repnz
loop
pusha
xor
jmp
mov
les
mov
mov
xchg
mov
retf
leave
aam
shl
bound
or
shr
fwait
xrelease
xor
push
aad
dec
xchg
lahf
jp
cmp
adc
addr16
jmp
fwait
pop
inc
push
dec
sahf
cmps
movs
sti
out
adc
(bad)
cmp
mov
mov
adc
xlat
add
cmp
lods
ficomp
test
retf
pop
in
adc
scas
pop
es
fsubr
retf
inc
enter
sti
add
inc
lods
test
mov
add
out
cmc
cmp
test
not
push
hlt
xor
cs
sub
push
outs
xchg
mov
jecxz
push
mov
shr
pop
daa
xor
sbb
sub
mov
mov
ja
cmp
(bad)
xchg
scas
pop
xor
fnstsw
(bad)
bound
sub
and
repnz
in
pop
mov
cmps
sbb
cdq
adc
mov
adc
sar
xlat
and
sti
dec
scas
jo
stos
outs
data16
(bad)
in
rcr
dec
pusha
movs
ficom
retf
rcr
andnps
cmp
pop
lock
retf
push
cmp
clc
xor
mov
jne
iret
push
lea
loop
pop
jle
pop
(bad)
adc
in
cmp
pop
xchg
es
pop
imul
fist
inc
push
sbb
adc
mov
jl
push
adc
ret
cmc
stos
inc
mov
xchg
adc
sub
mov
cmp
enter
adc
pop
or
push
inc
pop
pop
inc
in
stc
push
adc
repz
xchg
out
jnp
jno
dec
mov
xchg
xor
ret
cmps
aaa
loope
push
sub
daa
xchg
mov
adc
fld
push
xchg
mov
sub
in
repz
mov
cli
and
mov
scas
ss
pop
adc
jecxz
cmp
sub
pop
jmp
sub
stos
cmp
push
js
sub
sub
rcr
pusha
movs
sub
out
inc
(bad)
jnp
add
nop
movs
or
mov
pop
lock
pop
loope
pop
int
dec
add
dec
stos
jle
(bad)
cmps
dec
ret
mov
scas
sahf
push
mov
lods
les
daa
jle
repz
xchg
inc
inc
nop
push
pop
mov
pop
push
mov
lods
mov
iret
mov
sbb
pop
cmp
out
xchg
and
jae
aam
push
sahf
test
daa
cs
cs
mov
mov
mov
retf
push
mov
iret
jmp
fcmovbe
ss
out
xor
dec
add
cmp
(bad)
mov
inc
loope
adc
push
ja
stos
and
out
stos
pushf
xor
push
nop
cs
mov
mov
push
xchg
mov
loopne
cmc
pushf
sbb
ficomp
add
loop
dec
sbb
es
jl
daa
inc
mov
push
add
fadd
cmps
aam
in
int
and
pop
out
push
mov
sbb
and
sub
mov
retf
and
repz
jo
mov
jno
and
arpl
sub
bound
mov
sub
lods
idiv
adc
pop
push
inc
cmp
jecxz
mov
dec
adc
das
out
jl
sbb
xor
rol
sub
aaa
stc
sbb
(bad)
jmp
or
stc
sub
sti
xchg
pusha
mov
sub
and
cmps
add
out
add
xor
pop
jae
xor
imul
ss
bound
and
dec
movs
jo
aad
cs
cmp
add
xchg
cmp
sub
jl
es
pushf
xchg
push
push
fsub
lods
jmp
enter
test
xlat
mov
dec
mov
stos
lods
mov
mov
cmp
das
cmp
rcl
xrelease
cmps
mov
pop
fcomi
sub
add
xchg
push
push
aaa
push
(bad)
pop
hlt
mov
or
in
push
add
cmps
and
cmp
mov
aaa
out
mov
es
dec
out
fcmovnu
mov
shr
or
or
out
fmul
movs
fidiv
sahf
stos
push
add
jnp
or
mov
pop
clc
loop
inc
xor
repnz
dec
fwait
push
es
shl
in
dec
(bad)
jge
add
dec
push
icebp
push
sub
dec
in
sti
xor
loop
mov
add
mov
fild
js
adc
xor
mov
mov
inc
cmps
cmps
rcr
sub
mov
in
lea
xchg
xchg
pop
jno
mov
cmps
and
(bad)
xchg
push
sub
and
mov
mov
jl
xchg
fist
in
(bad)
ins
fcomp
jne
sub
mov
daa
add
cs
pop
test
aad
das
xor
sbb
neg
jae
or
out
jno
shl
rcr
repz
sbb
sbb
xchg
pop
retf
test
push
sbb
xchg
aaa
inc
push
cmp
cmp
dec
in
and
mov
bound
xchg
pop
pusha
adc
xor
push
xchg
in
pop
cli
int
lea
mul
mov
push
xchg
cs
sbb
jbe
stos
and
jnp
mov
jge
xchg
push
(bad)
jns
jmp
loop
sub
cdq
jl
fld
loopne
icebp
inc
cmp
mov
aam
dec
sbb
fs
add
push
stos
out
clc
sub
sti
outs
in
mov
sbb
aad
cmp
mov
mov
shl
in
lahf
sub
xchg
mov
(bad)
fimul
sub
ret
pop
and
or
loopne
test
sbb
sbb
pop
mov
xor
inc
loop
mov
sbb
push
mov
loope
cmps
lds
push
test
mov
retf
cwde
adc
dec
aaa
cmps
leave
push
jns
adc
leave
adc
cmp
pop
mov
ffree
leave
jb
xlat
lods
or
ret
fwait
in
inc
mov
out
inc
rol
cmp
in
shl
push
imul
pop
inc
into
ins
sub
sub
mov
cwde
mov
ds
or
jne
leave
call
psllq
fild
in
jecxz
push
test
out
inc
rcl
clc
inc
(bad)
xchg
aaa
aas
movs
ja
mov
mov
add
gs
popf
cdq
xchg
into
mov
ret
jmp
cmp
adc
mov
xor
xor
inc
cmp
(bad)
fisttp
xchg
xchg
jbe
or
jmp
sbb
fisub
inc
pop
pop
ror
stos
ret
jae
mov
test
or
pushf
dec
adc
retf
adc
in
clc
jns
mov
add
dec
sbb
cdq
lock
jmp
lahf
inc
or
fs
mov
or
lock
or
add
adc
jecxz
mov
xchg
mov
add
nop
push
mov
add
push
(bad)
popa
mov
mov
jne
push
hlt
fdivr
xor
inc
xchg
inc
ins
push
dec
xchg
cmp
int3
movs
push
mov
mov
inc
xchg
aad
pop
mov
jnp
clc
ja
inc
cmp
(bad)
(bad)
fld
(bad)
bound
or
xor
mov
jo
fwait
push
cmps
xor
cmp
stc
aas
fdecstp
inc
rcl
mov
ins
cmp
ss
dec
cmp
mov
ds
xchg
pop
shr
mov
jb
popf
dec
sbb
repnz
gs
lea
ins
push
adc
dec
xchg
ja
into
mov
rcl
es
out
add
loope
xchg
(bad)
int3
cmps
psllw
cmp
stc
lock
jmp
adc
arpl
push
push
inc
inc
jbe
mov
xchg
add
add
in
push
and
push
add
loopne
pop
sbb
enter
scas
cmp
in
pop
mov
fadd
dec
xor
das
xor
dec
test
repz
push
fs
(bad)
dec
inc
pop
nop
jns
aas
test
mov
dec
adc
test
pop
scas
fxch
nop
sbb
lds
push
pop
call
dec
pop
aam
test
stos
(bad)
jnp
(bad)
aam
fnsave
rol
fcomp
scas
pop
pop
std
jecxz
test
inc
dec
inc
int3
cmp
fisubr
lahf
inc
(bad)
(bad)
cld
es
iret
int
out
ins
lock
ror
jmp
jo
lods
push
xlat
fsub
mov
add
jg
imul
xchg
push
test
sub
xor
pop
repz
repz
inc
jl
stc
test
adc
scas
aas
add
mov
xlat
daa
clc
dec
dec
iret
xchg
fst
cli
ror
iret
es
pusha
outs
test
mov
lods
aad
out
das
cs
div
enter
mov
aam
and
pop
dec
sbb
repnz
mov
ret
jnp
lds
and
mov
mov
add
fadd
mov
mov
test
add
mov
fwait
jge
inc
sub
mov
rcr
outs
or
xor
and
les
into
cmp
inc
in
or
or
mov
popa
inc
(bad)
or
and
xor
add
ins
call
in
and
mov
pop
add
dec
dec
or
outs
adc
addr16
adc
jge
mov
xor
jp
enter
add
ja
xor
aaa
mov
inc
lds
outs
icebp
push
jecxz
xor
push
xor
fdiv
mov
neg
fsubr
xchg
mov
jns
mov
int3
pusha
xchg
std
cwde
mov
into
add
inc
cmps
mov
mov
fimul
int3
jno
dec
xchg
std
push
push
je
rcl
jne
in
sbb
mov
cmp
out
dec
jmp
xchg
dec
arpl
fs
mov
and
push
inc
stc
xchg
out
dec
xchg
adc
aas
xchg
lods
stc
inc
push
pop
out
or
dec
xchg
sub
inc
jnp
cmp
daa
jmp
cmp
les
scas
pop
cmps
inc
loopne
cdq
cmc
movs
mov
out
cmp
dec
fs
cmp
lahf
sbb
dec
outs
ss
aam
cwde
pushf
jmp
xchg
xor
pop
cli
jne
dec
shl
jmp
gs
test
mov
pop
(bad)
clc
cdq
adc
or
aad
adc
cpuid
test
ins
xor
ficom
test
ret
aas
stos
and
xor
mov
lahf
push
mov
call
mov
jae
mov
cmp
sti
test
call
iret
xor
push
ror
(bad)
jno
cmp
std
repnz
scas
mov
or
pop
mov
jl
shr
cmp
daa
and
out
mov
ins
div
pop
jp
adc
enter
pop
xchg
fisub
dec
xlat
xchg
fidivr
retf
mov
mov
sahf
xor
add
sbb
sbb
push
dec
movs
jmp
and
mov
push
add
jmp
imul
pop
pop
jg
pop
add
pop
mov
cli
xchg
fbstp
(bad)
pop
xchg
and
pusha
popa
mov
or
mov
jmp
push
sub
and
jbe
mov
cmp
or
loop
push
daa
jmp
repnz
cs
aad
arpl
lock
fstp
cmps
daa
je
call
aad
rcl
xchg
adc
xor
sbb
int3
popf
fs
pop
aad
and
std
faddp
push
mov
and
dec
or
add
or
adc
fs
les
mov
mov
or
je
jecxz
jecxz
and
in
out
jmp
mov
iret
pop
cmp
test
pop
fadd
ror
mov
mov
inc
cmp
jp
mov
in
mov
or
(bad)
jp
push
pop
jbe
les
inc
cwde
xor
cli
addr16
lods
fwait
push
inc
mov
mov
push
test
loopne
dec
sub
cmp
shr
mov
stos
fwait
sub
test
aad
retf
lahf
imul
sar
xchg
and
test
data16
and
icebp
xor
jb
mov
or
in
sub
cmps
mov
cmp
sahf
adc
sub
pop
jae
jmp
pop
arpl
ror
popa
xchg
lods
sbb
mov
xor
stos
mov
inc
jp
je
inc
ja
and
and
pop
out
out
fisub
jmp
gs
and
xchg
sub
xchg
cmps
add
cs
or
mov
(bad)
jmp
jg
jp
sub
jp
jnp
pop
popf
or
shl
arpl
dec
or
pop
jmp
pop
jno
dec
ret
jge
mov
push
xor
fild
pusha
jne
adc
lods
push
dec
mov
pusha
mov
out
das
add
push
pusha
sub
nop
dec
jge
sub
sub
aaa
xor
cmp
sbb
int3
clc
ror
mov
mov
dec
cli
jecxz
or
cmp
jg
sub
mov
addr16
pop
in
shl
sbb
push
lock
cmp
cmp
mov
call
ss
cmp
in
call
(bad)
sti
test
ins
dec
call
arpl
add
xor
(bad)
lock
cs
xor
mov
jae
clc
mov
jns
fcompp
xchg
sar
(bad)
retf
cmp
int3
add
fcom
xor
sub
imul
adc
cwde
mov
sbb
int
inc
(bad)
xchg
ss
shl
inc
xor
enter
(bad)
into
in
pop
sar
das
movs
(bad)
test
cmp
sbb
sbb
sbb
daa
add
sbb
cwde
add
cmp
inc
and
je
rol
or
imul
mov
sti
cmp
pop
addr16
push
mov
pop
fsubrp
hlt
push
js
and
mov
pop
cmps
cmp
adc
lahf
xor
cli
inc
sub
xchg
(bad)
hlt
je
mov
std
pop
and
sbb
inc
jle
push
shr
dec
cwde
rcr
inc
pushf
ret
ficom
fild
cmp
mov
mov
icebp
push
and
fcom
sar
jne
clc
xor
cmps
push
cmp
movs
test
adc
(bad)
(bad)
out
ins
aam
sub
fst
sub
dec
sub
push
jb
inc
xchg
fdiv
pop
aam
mov
cmps
jg
lods
(bad)
packuswb
retf
pop
das
xchg
out
fneni(8087
adc
inc
jge
xchg
cs
cvttps2pi
mov
in
and
ss
or
xor
jns
jg
and
push
scas
pop
loope
(bad)
repnz
rol
popf
daa
jne
sub
and
repz
in
or
aas
xchg
iret
pop
pop
jle
les
fsubr
push
adc
ss
or
std
bound
mov
dec
jp
das
sub
dec
rcl
and
test
inc
into
icebp
loop
xor
push
mov
xor
ds
mov
cdq
repz
sub
test
loope
inc
test
jns
adc
and
sbb
std
jmp
imul
popa
(bad)
popa
jmp
cmp
jns
pop
dec
mov
bound
push
les
push
or
inc
xchg
jecxz
push
cmp
loop
mov
and
adc
add
and
(bad)
push
xor
loope
lods
mov
push
and
cmps
cld
adc
into
stos
repz
fistp
gs
mov
mov
push
mov
imul
loopne
shr
imul
lea
and
sub
shr
out
retf
lds
add
adc
bound
rcl
mov
lods
fnstcw
push
lock
ja
mov
mov
xlat
jp
xchg
scas
pusha
xlat
pop
jl
(bad)
push
jp
pusha
mov
sbb
xchg
lahf
cmps
xchg
push
out
mov
mov
out
or
stos
imul
retf
sar
fwait
mov
dec
sbb
mov
xchg
aas
stc
popa
mov
fild
mov
fs
mov
shr
dec
fcomp
mov
and
inc
cwde
sbb
pusha
xor
xor
sub
in
push
adc
fcom
xlat
mov
pushf
(bad)
push
aam
xor
daa
sbb
adc
inc
paddsw
ins
out
xor
pop
aad
push
pop
fiadd
sub
xchg
pop
cwde
sub
movs
(bad)
cld
lock
movs
test
mov
int3
out
pop
icebp
and
pop
jne
sbb
in
adc
adc
push
pop
(bad)
int3
in
xor
jle
pop
adc
sub
xchg
pop
cs
jg
clc
mov
scas
rol
xchg
(bad)
ds
ds
and
popa
jns
mov
rcl
repz
clc
(bad)
adc
(bad)
hlt
or
lods
jbe
js
outs
push
jg
sbb
cmp
xchg
imul
cmp
int3
(bad)
iret
push
add
and
cs
inc
pop
(bad)
popa
dec
mov
push
sub
xchg
lds
arpl
push
cwde
data16
push
ret
and
sub
sbb
fwait
pop
mov
lds
aaa
jecxz
in
rdtsc
call
mul
jno
cmps
nop
popa
dec
jns
jg
(bad)
xchg
dec
(bad)
xor
lods
fwait
adc
jge
mov
mov
mov
fldenv
test
aam
and
repnz
arpl
test
xlat
xor
cmps
add
mov
repz
jne
push
gs
aas
stc
mov
fs
xchg
cmp
mov
jp
scas
sbb
pop
rcr
out
enter
jne
je
or
(bad)
scas
(bad)
sti
jl
jae
ret
fcomp
add
mov
jecxz
or
pop
pusha
cmp
scas
test
or
jecxz
ror
xor
xchg
xor
or
test
in
sar
outs
push
lods
fstp
lods
out
sbb
dec
dec
and
pop
das
loopne
pop
(bad)
xchg
jmp
add
in
mov
popa
xor
push
or
jnp
and
sbb
sbb
arpl
cld
sar
jno
or
add
jae
inc
jmp
mov
mov
mov
or
adc
lods
scas
mov
sub
scas
mov
bnd
jo
aas
cwde
mov
shl
sbb
int
cmps
pop
mov
in
cwde
inc
mov
push
jb
cdq
cmps
push
or
out
ret
sti
add
retf
pop
jbe
cmp
sbb
pop
lods
repnz
dec
and
push
cwde
es
inc
sbb
nop
add
cmp
push
inc
or
or
cmp
call
fisttp
pop
pop
xchg
sub
ror
mov
jns
fucomip
inc
ror
xchg
jbe
addr16
mov
and
mov
jnp
mov
rcr
mov
test
hlt
mov
sahf
or
aad
mov
inc
ja
mov
fiadd
cs
dec
pusha
cs
call
adc
js
ss
push
inc
aam
sbb
stos
pushf
add
cmp
adc
out
mov
fbld
cmps
repnz
repz
sbb
pop
test
and
mov
adc
ss
ds
jge
sbb
shl
jg
pop
retf
jmp
mov
fcomp
pop
or
(bad)
xlat
sub
jmp
js
aaa
clc
loopne
pop
dec
scas
sbb
sar
mov
mov
dec
xor
scas
arpl
shr
add
or
das
ficomp
mov
dec
ins
xor
adc
das
(bad)
xchg
dec
(bad)
ins
outs
aaa
push
retf
push
stos
push
mov
sahf
js
jge
mov
pop
cs
stos
mov
div
xor
lea
xlat
int3
imul
mov
cli
cmps
and
xor
mov
cs
push
dec
pop
jl
fld
cwde
addr16
mov
fs
mov
mov
in
std
aad
clc
jmp
stos
inc
sub
aas
sub
(bad)
push
mov
aaa
cs
xor
mov
or
inc
push
dec
test
loop
pop
fild
dec
popf
and
push
ror
gs
push
mov
jno
and
(bad)
retfw
jbe
gs
lods
scas
leave
ins
aaa
fidivr
(bad)
mov
sbb
xchg
int3
xor
test
pop
mov
call
add
scas
dec
aam
out
and
add
pop
push
(bad)
mov
or
retf
dec
pop
imul
mov
sub
pop
cmps
addr16
jbe
inc
and
fist
mov
mov
int
add
call
add
(bad)
popa
call
(bad)
or
hlt
and
das
xor
inc
enter
js
ret
jl
mov
inc
sbb
jbe
inc
xchg
mov
add
dec
imul
loop
dec
in
gs
shl
or
dec
fisub
(bad)
dec
sahf
jb
sbb
xchg
cld
outs
lgs
push
movs
xor
mov
test
mov
mov
fwait
clc
xor
sub
leave
push
jmp
xchg
sbb
push
repnz
mov
push
arpl
jmp
jle
adc
mov
jecxz
loope
cli
ficomp
jg
sub
int
sar
mov
jne
inc
add
sub
clc
mov
enter
jne
mov
jne
jnp
sbb
mov
ret
retf
dec
sub
ficom
mov
scas
repnz
push
inc
test
xchg
inc
loopne
mov
add
mov
leave
and
push
cmovne
jecxz
fldcw
push
jge
repnz
xchg
pop
mov
out
add
lea
cmp
repnz
outs
xor
dec
stc
(bad)
dec
jns
pop
xor
mov
les
scas
int3
jl
ror
jmp
jnp
pop
add
loopne
shr
data16
pop
inc
das
pop
mov
sub
pusha
or
pushf
mov
cwde
adc
adc
sbb
pop
aam
xchg
fld
add
cmps
pop
jl
loope
jl
popf
or
pop
jmp
mov
dec
adc
mov
xor
in
push
aam
pop
mov
and
jge
cmc
mov
inc
shl
int
cmp
or
int
pop
mov
mov
into
mov
mov
dec
pop
loop
push
in
sub
xchg
add
mov
xor
pushf
fisttp
jl
jbe
and
arpl
(bad)
pop
out
mov
repnz
mov
and
mov
xchg
fidivr
xchg
jmp
pop
jb
jmp
xchg
cli
test
push
iret
cmp
repz
xchg
jmpw
mov
or
es
movs
sbb
pop
cmp
jmp
outs
mov
adc
int3
sub
out
dec
dec
sbb
pop
sbb
cmc
push
xchg
push
lods
xor
pop
jmp
pushf
out
scas
aam
les
or
jo
xchg
cld
(bad)
push
mov
xchg
mov
xor
mov
or
icebp
dec
mov
mov
mov
popf
xlat
dec
repnz
outs
test
retf
fisubr
bound
xchg
test
adc
dec
or
ins
arpl
mov
xchg
movs
sbb
sbb
pop
adc
dec
aaa
fild
ret
arpl
push
jle
call
das
mov
cmp
clc
mov
push
and
xchg
lahf
mov
sub
ja
(bad)
pushf
push
fbstp
shr
mov
jecxz
mov
(bad)
in
(bad)
pop
jmp
sub
cmp
test
add
jg
push
dec
(bad)
push
movs
push
std
adc
lahf
mov
daa
mov
adc
push
and
and
push
enter
iret
scas
adc
fiadd
pop
sub
jge
add
cs
ret
jae
pop
lds
rcl
out
sbb
cli
mov
mov
or
cmp
mov
les
clc
outs
mov
imul
push
fld
sub
jge
add
in
xor
imul
int
sahf
rol
outs
fnsave
mov
enterw
ret
add
fld
mov
mov
dec
fdivr
jle
cmc
push
in
sub
xchg
add
out
jae
mov
rcl
shld
aad
add
mov
stos
loop
shr
call
repz
sub
cmps
enter
sub
cmp
call
xor
jno
sbb
push
xchg
aam
test
dec
(bad)
inc
loope
pop
shl
test
xor
and
mov
stc
das
push
mov
or
push
mov
xlat
test
pop
adc
adc
xlat
jb
pop
ja
fwait
mov
je
xor
test
cmpxchg
cwde
sbb
sbb
inc
imul
lea
dec
sub
dec
mov
int3
popa
push
loopne
mov
xor
outs
sbb
xlat
and
sbb
inc
xchg
mov
arpl
movs
sbb
xor
xchg
stos
mov
(bad)
out
in
or
push
sub
mov
sbb
jno
fisubr
gs
or
xor
push
dec
lock
out
adc
pop
fs
dec
mov
pop
add
es
jmp
or
ret
jle
enter
jo
sub
aaa
and
movs
clc
xchg
jmp
in
movs
xor
pop
nop
cmp
sub
std
pop
dec
addr16
cdq
jno
pop
dec
or
pushf
call
or
pop
repnz
ficom
sbb
cwde
cmp
xor
push
pop
out
pushf
xchg
sbb
jb
xlat
adc
mov
std
leave
or
mov
popa
sar
pop
rcl
xchg
rcl
enter
iret
mov
cmps
xchg
jne
ror
pop
mov
and
pcmpeqw
jne
fsubp
sub
dec
inc
pop
movlhps
push
push
mov
les
sahf
sub
test
add
xlat
mov
test
retf
repz
hlt
or
cmp
and
jno
stos
mov
je
shl
push
pop
ja
cmp
sbb
addr16
xor
mov
pop
icebp
loopne
(bad)
lock
add
cli
xchg
mov
or
xor
lods
cmps
pushf
mov
call
movs
aas
shl
(bad)
fnstsw
jle
(bad)
xor
inc
add
retf
fnsave
jnp
sub
jno
in
dec
(bad)
inc
xor
mov
mov
sti
lods
inc
sti
mov
fsubr
xchg
sub
int
scas
jb
mov
fadd
sbb
mov
test
or
pop
retf
xchg
jnp
cmps
stc
cmps
(bad)
mov
mov
data16
loop
jl
int3
jp
or
add
loop
shr
push
in
in
ror
cmp
dec
dec
sbb
adc
add
cwde
mov
cwde
xor
mov
jae
stc
scas
pushf
xor
outs
mov
popf
xor
jecxz
xor
push
mov
or
and
mov
mov
or
sbb
cmp
mov
cmp
mov
and
jbe
inc
jp
dec
stc
dec
xchg
aas
sub
fidivr
and
out
add
pop
pop
cwde
adc
jne
jg
mov
into
test
or
scas
mov
ja
jmp
ins
dec
leave
ds
dec
(bad)
push
shl
test
and
ficomp
mov
dec
movs
out
aas
pop
push
push
shl
dec
cmps
add
cmc
imul
push
cmp
pop
xor
das
sub
movs
jne
mov
scas
ins
inc
sub
out
sbb
jge
jecxz
call
and
add
push
pop
sub
fisttp
std
pushf
inc
pop
enter
scas
xlat
imul
rcr
xchg
fistp
adc
gs
enter
jno
jnp
xchg
les
gs
std
fstp
xor
add
(bad)
data16
(bad)
cwde
mov
cs
in
outs
sbb
ins
ret
push
aaa
call
cmp
push
xlat
out
pushf
cdq
test
jge
rol
cli
rcl
and
mov
shl
ret
or
inc
or
pop
aad
mov
imul
fisub
not
aam
jle
xor
sbb
cmp
ins
or
dec
sub
(bad)
dec
dec
sub
popa
adc
inc
xchg
sbb
push
pop
mov
mov
popa
imul
shl
movs
adc
movs
lahf
cmp
sub
pop
push
push
rcr
pop
mov
fwait
retf
mov
add
test
dec
jo
mov
jne
xor
add
add
xor
adc
inc
cmp
jmp
adc
pop
jle
lahf
aaa
in
lock
and
inc
stc
dec
(bad)
int3
scas
pop
lds
int3
push
sahf
inc
popa
adc
aas
dec
mov
aas
add
add
dec
lahf
pop
js
adc
push
pop
or
dec
xor
adc
mov
mov
outs
pop
lea
xor
cdq
mov
imul
mov
xchg
lods
mov
add
in
mov
or
cmc
test
mov
pop
lock
aam
pop
mov
mov
jl
outs
pop
outs
inc
jmp
sbb
int
shl
mov
jmp
add
(bad)
jmp
push
test
push
imul
clc
push
out
dec
daa
dec
fisttp
inc
bound
mov
inc
dec
jge
lea
mov
xchg
aad
xchg
mov
fwait
mov
jmp
cmps
clc
sub
pop
ret
je
cmc
push
jmp
int3
gs
pop
sar
jl
add
add
es
adc
pop
mov
jg
and
int3
aaa
sbb
mov
xchg
add
adc
or
(bad)
push
lock
jl
jb
jne
or
(bad)
cli
mov
pop
or
jmp
adc
cmp
stos
lock
mov
cli
dec
mov
dec
jnp
and
adc
stc
sti
dec
and
jge
xchg
(bad)
pushf
cs
and
rol
jo
xchg
push
fidiv
jmp
sbb
mov
mov
xchg
add
cmp
push
shr
pop
xor
cmps
and
cmps
retf
jmp
sti
daa
mov
dec
sub
dec
loope
outs
inc
outs
(bad)
mov
or
cli
inc
adc
out
test
cmp
ds
push
out
mov
stc
and
xor
stos
fs
and
inc
xor
inc
xchg
scas
fstp
push
mov
movs
cld
jmp
retf
int
mov
call
mov
dec
mov
test
or
add
mov
cmp
jg
cwde
enter
xchg
repnz
sub
pop
loop
hlt
dec
mov
or
mov
pop
(bad)
mov
jmp
gs
or
or
push
and
jge
in
int3
outs
lahf
movs
push
and
jp
dec
ja
test
or
xchg
inc
mov
ins
mov
jns
xor
sbb
xchg
or
push
movs
in
xchg
fs
and
int3
shl
xor
inc
adc
stos
sbb
fisttp
cmps
cmp
jmp
xor
(bad)
popf
mov
xchg
sbb
sbb
jmp
jbe
sub
add
adc
fiadd
inc
pop
call
add
cmp
sub
pop
sub
ds
fsub
hlt
and
cwde
jmp
xchg
jne
dec
movs
loop
mov
pop
and
jecxz
test
jns
cmp
xor
fs
jno
mov
mov
xchg
lock
xchg
mov
jg
push
jecxz
jmp
in
popf
aad
add
int
pop
dec
in
mov
movs
icebp
xchg
adc
pop
xchg
enter
and
and
cmp
push
test
data16
(bad)
or
cmp
mov
inc
jp
(bad)
lock
cmp
cmp
cs
or
and
sub
add
inc
and
dec
pop
out
fdiv
fst
stc
and
xchg
sar
nop
jnp
repnz
mov
mov
outs
and
and
sub
std
push
cmps
jmp
es
and
push
aad
mov
jge
test
add
push
pusha
es
adc
enter
in
loop
mov
xchg
loop
inc
ret
sub
aad
(bad)
shl
mov
mov
jmp
pop
and
(bad)
icebp
add
jne
cmc
jg
jl
iret
jne
xchg
xor
fs
sti
inc
mov
je
push
inc
outs
(bad)
jmp
test
(bad)
pop
lods
and
lods
xor
xchg
sub
into
rcl
int
jecxz
icebp
imul
cmp
jl
imul
add
inc
adc
add
jmp
xchg
jl
push
xchg
jl
jmp
mov
in
mov
ror
loope
and
fdivr
loopne
or
adc
push
push
add
lods
push
inc
sub
into
test
mov
cmc
dec
mov
adc
out
shl
push
add
xor
scas
fldenv
out
or
cmc
(bad)
fdiv
jne
das
xchg
xor
xchg
aas
stc
cmp
add
cld
fistp
outs
movs
aaa
int3
jnp
lods
xor
cmps
cmp
ror
pop
leave
jle
(bad)
adc
push
in
inc
cmp
jne
ret
outs
std
mov
mov
stos
push
cmp
and
mov
in
inc
(bad)
push
ret
fnstcw
cmc
arpl
mov
and
jne
test
jmp
push
lds
sbb
mov
dec
inc
ret
sub
lds
gs
sbb
push
xchg
cmp
daa
pop
cmp
retf
mov
dec
(bad)
fmul
jle
nop
movs
popa
movs
pushf
mov
pop
fsub
rcr
lea
push
ficom
jae
mov
xchg
dec
or
in
popf
adc
outs
loope
xchg
data16
inc
stc
ss
aas
dec
mov
inc
xor
xchg
mov
mov
scas
call
mov
std
mov
mov
jmp
pop
sbb
jb
ds
fwait
les
pop
push
pop
xchg
in
adc
cmp
jmp
lea
nop
ret
mov
scas
xchg
lea
mov
into
dec
lahf
inc
lahf
and
stos
xor
lahf
sub
fs
stos
pop
test
bound
pop
xor
mov
nop
mov
pop
push
cmps
and
push
jae
pop
jbe
into
mov
pop
xor
mov
mov
pop
cs
dec
xor
mov
and
icebp
ds
pop
pusha
arpl
aas
fs
push
and
push
cmp
test
pop
(bad)
push
mov
inc
jg
stc
loope
jae
xchg
and
ja
arpl
mov
cli
jae
outs
std
xor
ret
inc
repz
dec
dec
je
icebp
and
hlt
movs
cmps
shl
add
adc
push
gs
out
pop
hlt
sub
and
xor
out
js
push
in
or
mov
mov
push
push
ds
sub
imul
test
jb
cld
xchg
xor
cs
jle
nop
hlt
pop
mov
out
ret
adc
mov
fisub
and
jmp
push
mov
scas
mov
aad
pop
std
ins
add
push
fsubp
push
out
jl
(bad)
sbb
and
add
pop
xchg
cmp
dec
xor
aas
xor
aad
push
mov
adc
out
or
or
add
test
leave
daa
fdivr
in
ror
outs
push
sub
cmc
add
loop
aad
sbb
jecxz
popa
pop
retf
test
call
mov
jp
lock
adc
and
dec
aas
mov
cmp
mov
sub
ror
sahf
in
mov
cmp
js
lods
xor
jno
and
shl
out
sub
jno
or
sub
cmp
adc
jo
mov
fsubr
push
sbb
repz
lods
mov
dec
scas
inc
mov
and
movs
mov
sub
jmp
adc
test
ror
or
jmp
lahf
mov
sbb
fisttp
jbe
shl
data16
mov
cmp
leave
popf
movs
fstp
pop
in
add
cmp
push
or
pop
sub
mov
mov
ja
inc
pop
icebp
or
(bad)
ret
xor
adc
out
sub
xor
push
mov
xor
scas
jae
sbb
inc
push
xchg
mov
and
push
cmps
cmc
dec
adc
mov
aam
jno
sub
add
outs
and
jle
xor
and
jbe
mov
popf
mov
aam
xor
hlt
gs
xchg
jnp
dec
add
pop
xchg
leave
fucomi
jo
sbb
in
mov
lahf
les
andps
pop
adc
cwde
in
test
test
daa
or
div
mov
xchg
(bad)
push
gs
mov
push
jecxz
jo
not
pop
adc
or
std
rcl
int
js
xor
sub
mov
into
js
test
cmp
dec
in
mov
xor
mov
inc
and
fsub
push
out
ins
sub
in
push
jmp
cmp
lds
and
sbb
in
bound
push
xor
movs
xlat
mov
rol
enter
rcl
xlat
push
xlat
push
stc
arpl
and
adc
pop
mov
fxch
fisubr
push
(bad)
sub
cdq
stc
pop
and
mov
aam
and
add
adc
push
loop
xchg
mov
jp
leave
dec
dec
das
jecxz
pusha
add
push
jmp
jbe
xchg
or
(bad)
push
call
push
or
rcl
jp
(bad)
jmp
push
in
test
mov
outs
movs
mov
push
in
mov
and
daa
pop
ins
mov
(bad)
mov
ja
and
mov
rcr
or
push
lahf
mov
mov
aas
lods
mov
add
mov
mov
mov
out
aam
cmps
iret
mov
ds
mov
pusha
scas
xlat
(bad)
cwde
xchg
loopne
ins
mov
mov
or
xchg
leave
xchg
xchg
std
stos
pop
stos
mov
inc
xchg
mul
cld
push
or
inc
mov
adc
lods
push
test
(bad)
jmp
(bad)
lods
dec
push
adc
push
mov
popa
and
push
ror
sub
sahf
dec
mov
imul
mov
les
mov
add
xchg
mov
xchg
pop
jmp
pop
inc
mov
jecxz
rcr
lods
inc
les
mov
nop
gs
test
mov
mov
scas
fisubr
pop
pop
ss
add
mov
xchg
cmp
mov
pop
jo
xchg
mov
loop
sub
aaa
mov
jle
fisub
ret
lock
(bad)
inc
mov
and
cdq
movs
mov
repnz
mov
dec
sbb
sahf
mov
mov
mov
mov
ja
inc
jg
fcomip
rcl
push
cmp
fsub
xor
add
arpl
or
inc
sar
jnp
pushf
ss
sub
sti
shl
pop
call
sbb
push
repz
pop
adc
fsub
mov
mov
xor
hlt
sbb
xor
ins
loop
xchg
je
jge
daa
push
cmc
pop
call
inc
dec
fs
out
jbe
pop
xor
mov
pop
mov
push
(bad)
lock
out
push
mov
xor
push
test
out
pushf
clc
call
adc
loopne
pop
sbb
push
sbb
cmp
jbe
imul
shr
adc
mul
xchg
mov
mov
movs
adc
inc
xor
std
retf
aad
test
mov
cwde
sti
adc
adc
mov
push
pusha
cld
add
pop
nop
sub
aad
stos
mov
sbb
sub
inc
xchg
fidivr
pop
in
fcomp
loop
pusha
mov
push
jns
pusha
jb
sub
cmp
loop
movs
jp
cmp
(bad)
adc
add
jle
mov
mov
imul
not
mov
ror
cmps
and
(bad)
fs
mov
push
adc
call
jb
dec
out
and
test
mov
lods
aaa
jge
std
in
vpmaxsw
int3
je
test
loopne
test
int
aam
out
daa
add
jb
outs
inc
test
jmp
mov
fwait
mov
push
ss
mov
(bad)
repz
inc
and
popa
ret
cmps
(bad)
push
xchg
in
repnz
jp
or
aas
ret
aad
cs
(bad)
pop
xchg
call
mov
push
movs
fwait
retf
sbb
ins
or
push
test
jae
fiadd
fs
shr
push
stos
mov
scas
or
cmp
aam
out
lods
jecxz
movups
int
dec
and
xor
js
es
sub
ja
mov
add
add
jns
nop
fdivr
out
pop
(bad)
shl
push
adc
cmp
arpl
add
int3
inc
xor
jno
mov
sbb
mov
mov
sbb
iret
pop
jbe
or
inc
lods
push
mov
dec
xor
jbe
dec
mov
adc
aam
ror
mov
cdq
pop
movs
mov
jb
inc
hlt
cmp
xchg
and
pop
div
xchg
mov
popa
add
sbb
and
popf
shl
dec
pop
popa
xchg
rcr
xchg
fnsave
(bad)
loopne
icebp
xor
pushf
fiadd
add
push
aas
or
les
mov
popa
(bad)
pop
out
movs
ds
sub
aaa
mov
(bad)
jmp
loop
mov
ret
hlt
data16
outs
and
sub
mov
push
mov
leave
(bad)
dec
inc
imul
call
ja
(bad)
or
and
jg
push
or
jno
pop
adc
out
push
dec
les
fild
sub
xlat
les
enter
mov
into
lods
neg
clc
leave
sahf
(bad)
push
dec
and
xor
xchg
cdq
cwde
fbld
push
int
sbb
pop
iret
sub
mov
outs
jns
jmp
dec
(bad)
retf
xor
mov
cmps
xor
in
mov
jnp
aas
loop
daa
ins
pop
loope
mov
push
mov
shr
and
cld
lods
jmp
scas
dec
xor
shl
ins
fdiv
sub
pop
aas
xor
rcr
add
in
push
pushf
mov
push
and
xchg
push
cld
shl
xchg
cmp
sti
jmp
xor
imul
movs
jne
cs
push
jo
iret
or
stos
popa
lock
cmp
ja
sub
jae
mov
cld
movs
inc
les
cmp
xchg
mov
xchg
dec
xchg
repnz
add
inc
stc
jo
mov
ja
push
push
lds
test
cmp
or
sbb
es
jns
hlt
call
outs
leave
out
mov
pop
enter
dec
sbb
mov
loopne
pop
cmp
(bad)
xor
js
lds
mov
xchg
mov
fsubr
or
jg
push
and
pop
dec
out
es
mov
dec
aad
out
push
xor
ins
repz
pop
mov
ss
dec
xchg
movs
jo
mov
movs
rol
inc
pop
jmp
jns
fisubr
mov
sbb
aam
mov
mov
jnp
or
loope
push
cli
test
push
mov
sub
fs
cmc
call
mov
sub
fisub
ror
sbb
(bad)
loop
xor
sub
adc
fidivr
pop
inc
ret
arpl
movs
jl
inc
sbb
jg
and
test
add
ds
neg
aas
sahf
xor
pop
loope
pop
pusha
sahf
cdq
test
or
dec
aas
pop
sar
test
stc
ss
jb
data16
out
icebp
icebp
test
dec
adc
sbb
std
pop
mov
dec
scas
cs
mov
xlat
xchg
jmp
cvtpi2ps
pusha
push
test
or
repnz
cld
aaa
movs
jns
push
fcomp
lods
cmp
jae
jne
outs
xchg
add
push
xor
nop
or
pop
ins
mov
sbb
pop
xchg
in
mov
mov
pop
adc
fcomp
push
ins
xchg
xchg
or
test
cmp
gs
arpl
jl
hlt
jg
outs
(bad)
xor
cld
mov
mov
mov
pop
test
dec
add
mov
into
add
icebp
jmp
addr16
(bad)
cli
ret
jge
push
jmp
shr
and
test
cli
movlps
mov
(bad)
out
push
mov
or
in
sub
shl
sbb
push
mov
mov
push
push
xor
mov
sbb
retf
cmp
sbb
movs
repz
dec
mov
lahf
and
call
xchg
sub
sub
