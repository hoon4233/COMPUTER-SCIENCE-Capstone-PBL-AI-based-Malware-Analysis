call
push
fwait
pop
repnz
(bad)
je
push
pop
dec
add
sub
or
test
and
xlat
or
mov
and
mov
jbe
scas
xchg
pop
jp
and
ret
out
adc
mov
adc
mov
frstor
popa
ds
adc
and
lahf
sbb
data16
shr
into
daa
test
dec
pop
mov
popf
mov
pop
addr16
iret
xchg
inc
adc
cmps
les
inc
or
pop
mov
push
dec
jecxz
stos
div
test
cld
lds
out
or
bound
jle
mov
and
inc
inc
call
cvtdq2ps
mov
or
jnp
in
call
pop
xlat
repz
aas
sar
mov
and
sar
adc
psubq
into
retf
outs
or
push
jp
fs
dec
adc
sar
add
cmps
add
push
rcr
out
out
int
in
jmp
hlt
gs
mov
push
sub
push
or
int3
mov
mov
mov
stc
test
rol
shr
out
mov
add
inc
daa
xchg
sub
and
or
add
push
adc
test
leave
aaa
pcmpeqd
jae
test
movs
add
test
cmp
aaa
fs
xchg
mov
pop
pop
xchg
mov
enter
jns
cmps
(bad)
scas
jmp
sar
mov
cld
dec
cmps
sbb
or
lea
fisub
fdivr
mov
lods
adc
shl
inc
xchg
stc
cmp
push
inc
add
pop
adc
pop
sub
bound
mov
cmps
icebp
lds
shl
adc
std
cmp
inc
fisttp
or
cdq
(bad)
cdq
push
out
pusha
int
enter
mov
push
adc
inc
add
cdq
or
add
rcr
pop
jne
jmp
mov
shl
xchg
mov
or
add
sbb
adc
(bad)
cmp
repnz
in
xlat
push
xor
ja
push
fcmovnbe
loop
sbb
(bad)
mov
shr
mov
cli
and
pop
in
mov
jne
nop
or
push
pop
sbb
pop
push
xor
jae
jl
fwait
in
cmps
xchg
mov
test
jg
mov
mov
sbb
icebp
inc
add
sahf
aaa
div
jnp
xlat
sub
dec
ret
scas
fcom
lods
push
dec
ss
fmul
je
jle
and
movs
cmp
xchg
xchg
sbb
sbb
push
dec
test
or
xchg
pop
mov
movs
xchg
cmps
data16
out
add
mov
mov
std
aas
int
ds
daa
jg
pop
mov
sub
rep
jl
push
je
jmp
cmc
repz
jp
inc
adc
in
mov
inc
enter
fild
pop
mov
ret
add
in
test
xchg
pop
lods
aas
loopne
dec
push
aas
inc
imul
xor
cdq
jecxz
ficomp
loop
mov
adc
jb
daa
pop
jbe
cwde
jmp
xor
call
push
and
sahf
jle
aam
aaa
xor
pop
retf
stos
xor
stc
stos
push
jl
retf
xlat
jg
add
push
mov
push
mov
enter
dec
std
sub
lahf
es
and
sbb
inc
(bad)
ffree
jno
pop
push
lahf
dec
jge
adc
js
test
sub
outs
mov
out
sbb
enter
gs
add
(bad)
rol
sahf
jae
adc
pop
mul
rcr
and
dec
inc
in
sub
popf
xor
jmp
jno
jno
fs
cld
ins
mov
mov
xor
xor
mov
xlat
push
xchg
dec
pop
push
movs
or
jmp
adc
out
dec
mov
sub
mov
inc
inc
nop
inc
sbb
retf
cmp
sbb
pop
push
xchg
fucomi
stos
cwde
movs
ins
jmp
sbb
jmp
mov
pop
test
repnz
dec
jnp
sbb
jne
pop
imul
mov
pop
ffree
lea
add
mov
clc
mov
outs
add
jmp
dec
cmp
clc
jno
pop
out
add
shl
std
cmps
xchg
jns
out
inc
call
std
sub
or
jmp
inc
dec
outs
adc
jb
and
cmp
add
test
xor
jmp
(bad)
xchg
rcr
lods
inc
fist
test
mov
mov
add
cmp
mov
mul
inc
cmp
dec
out
add
push
inc
or
sbb
dec
adc
dec
dec
repz
push
sbb
mov
ins
(bad)
(bad)
push
inc
jp
movs
push
mov
stos
push
int3
pop
dec
pop
adc
pop
leave
add
inc
mov
ja
mov
push
inc
sar
xchg
inc
dec
pop
xchg
pop
stc
jno
cmp
sub
(bad)
mov
jl
jmp
shl
push
mov
add
jae
mov
into
dec
jg
bound
jbe
ror
ins
xlat
mov
aam
mov
pushf
push
push
lods
jne
enter
cmp
xchg
add
mov
pop
cmp
xchg
out
stos
pop
std
jmp
pop
ret
sbb
inc
cs
shld
cmps
fiadd
push
mov
cdq
mov
aad
retf
mov
punpcklbw
in
int
or
adc
jnp
and
(bad)
cmc
daa
ja
inc
dec
pop
jne
(bad)
adc
hlt
movs
ret
cmc
aam
xor
loopne
mov
pop
iret
ins
rol
jae
cmp
or
in
cmc
mul
add
dec
aas
mov
or
inc
jne
mov
xchg
add
dec
inc
test
adc
sub
mov
jns
pushf
(bad)
mov
not
(bad)
push
daa
sti
pop
icebp
mov
shl
sbb
(bad)
rcr
sbb
aam
test
icebp
cmp
dec
popa
cmp
jbe
fadd
pop
and
adc
outs
inc
ror
add
daa
adc
jb
mov
jno
sahf
xchg
call
call
fwait
add
je
xor
xchg
dec
rcl
leave
stos
jbe
cmp
xchg
inc
stos
das
sbb
stos
and
mov
ja
mov
pop
in
cld
in
xchg
call
pop
sub
fistp
add
fidiv
mov
nop
or
loope
shl
rol
int3
repz
jno
jbe
or
cmps
fwait
adc
inc
ja
mov
push
mov
ds
std
xchg
inc
jae
or
loop
shl
fcmovnu
sub
out
jmp
jp
jmp
mov
inc
mov
test
and
cmp
aas
mov
in
stos
or
lods
mov
add
mov
inc
xor
mov
mov
lahf
or
adc
push
xor
dec
and
das
mov
dec
pop
stos
xor
ret
fadd
pop
ins
jecxz
sbb
xchg
inc
lahf
ss
js
or
cmps
fwait
mov
cmc
mov
mov
int3
mov
lods
sub
xchg
mov
mov
aas
ret
fistp
out
imul
cld
dec
push
repz
pop
inc
cld
cmp
fs
ror
pop
dec
ins
repz
sub
fbstp
imul
call
cmp
sbb
push
jg
jo
jg
test
pop
mov
shl
mov
shl
add
int
xor
popa
push
daa
inc
adc
mov
add
pop
add
inc
test
mov
(bad)
adc
sub
lods
cmp
iret
clc
jmp
test
fisubr
add
mov
int
pop
sub
pop
retf
ret
stos
mov
ret
xchg
add
outs
es
into
imul
ret
fsubr
dec
or
cmp
dec
movs
into
popf
mov
xchg
jno
cmp
ret
pop
xchg
adc
mov
adc
sub
cwde
xchg
cdq
pop
div
arpl
stos
xchg
shl
daa
adc
cli
pop
jae
mov
mov
clc
fstp
fucomip
movs
sub
out
mov
adc
mov
add
das
xlat
adc
test
cli
cld
push
cld
add
pop
loope
and
fs
aad
xor
push
cmp
ret
out
mov
xchg
jns
test
sbb
pushf
out
rcr
mov
gs
ss
mov
xor
cmp
enter
dec
retf
mov
fsubr
mov
pop
push
loop
pop
cli
adc
mov
sub
dec
sub
stos
xchg
mov
push
aaa
jmp
cmc
add
ins
mov
pop
inc
mov
(bad)
pop
test
sub
xor
jmp
mov
mov
std
lea
push
rcr
ror
inc
add
adc
movs
mov
xchg
jecxz
push
xchg
jb
jns
outs
sub
(bad)
iret
xor
(bad)
repz
std
or
mov
jmp
add
(bad)
lods
addr16
xor
sbb
and
mov
xchg
sub
ficomp
adc
loope
jmp
call
xchg
push
in
or
mov
loope
jg
gs
in
repnz
pop
fcomi
mov
into
das
mov
in
mov
xchg
test
and
cmc
in
add
test
pop
call
aas
xchg
sbb
scas
test
mov
jle
shl
jg
adc
push
inc
jmp
pop
gs
in
popf
push
mov
std
ror
pusha
iret
loope
inc
mov
mov
imul
xchg
icebp
and
adc
int3
xchg
(bad)
in
outs
idiv
loop
cld
cmps
cmps
aas
push
repz
dec
and
cmp
ins
dec
xor
aad
nop
adc
mov
fld
pushf
mov
sub
xor
lock
jne
or
ret
gs
xor
or
out
iret
pop
jo
fwait
out
add
sub
add
adc
sub
jne
ins
sbb
clc
mov
pop
xchg
mov
push
and
je
pop
jecxz
hlt
jnp
or
dec
xor
pcmpeqb
or
out
mov
sbb
je
sub
sub
mov
dec
sar
in
int3
mov
adc
xchg
cmc
adc
xchg
mov
jbe
mov
addr16
xor
aam
mov
xchg
xor
push
scas
nop
add
mov
fs
test
xchg
fwait
adc
cmp
pop
(bad)
out
cld
in
into
cs
fimul
movs
test
and
call
pop
dec
xchg
mov
push
mov
jmp
cmp
sbb
stos
pop
mov
jle
stos
mov
xor
jmp
cld
test
popa
test
push
pop
add
mov
sahf
movd
lea
fincstp
push
sbb
in
pop
jge
and
pop
adc
jnp
fcomp
shl
jmp
jmp
cdq
cld
push
mov
and
pop
sbb
jno
pop
dec
ror
or
aaa
sbb
and
ins
sbb
fwait
jmp
loope
jo
cmp
sahf
jmp
push
test
ins
(bad)
pop
pop
in
ss
pusha
rcl
rcr
mov
add
mov
or
mov
stos
mov
add
and
pop
push
sbb
sbb
add
(bad)
fisubr
imul
mov
pop
xor
mov
jge
fst
cli
fnsave
(bad)
xlat
xchg
xor
scas
movs
or
sbb
add
aad
fdivr
mov
mov
ret
and
outs
aam
xor
jnp
jne
pusha
js
out
mov
gs
or
adc
idiv
shr
mov
xchg
adc
adc
add
dec
cmp
lods
jne
repnz
iret
rcl
out
pop
out
mov
jle
pop
test
dec
mov
adc
add
inc
lods
and
pushf
push
fidiv
jne
les
je
shl
push
not
add
pop
inc
lea
icebp
imul
lahf
dec
pop
push
dec
adc
mov
mov
das
mov
pop
jb
mov
or
ja
add
ins
sbb
inc
adc
sar
in
or
es
repz
dec
cdq
fiadd
fcom
dec
sti
(bad)
pop
js
int
enter
cmp
mov
add
mov
fld
push
xor
loopne
cmp
adc
jb
jne
sbb
iret
imul
jo
rcr
xchg
mov
xor
push
jle
inc
inc
dec
ss
mov
sub
ins
daa
outs
mov
mov
rcl
js
loop
jecxz
sub
(bad)
and
(bad)
fild
jo
pop
jecxz
mov
out
xchg
ins
sub
push
(bad)
imul
jmp
mov
dec
mov
fst
nop
das
cmp
mov
push
and
push
add
out
int3
and
sub
mov
dec
adc
ins
jg
into
adc
into
repz
fild
xchg
imul
bound
jno
add
in
mov
pop
adc
int3
lods
pop
mov
sub
std
dec
lds
outs
pop
subps
jecxz
imul
out
and
add
add
dec
fcom
cmp
retf
inc
enter
sub
xrelease
cld
pop
popf
cmc
jp
jmp
(bad)
pop
test
fiadd
gs
push
mov
dec
int3
adc
mov
mov
aam
pusha
cli
mov
mov
aad
mov
jns
out
mov
push
call
sbb
jbe
daa
and
clc
or
jmp
shl
xchg
xchg
mov
mov
mul
je
icebp
and
ins
call
push
mov
add
retf
test
and
iret
dec
pop
cmp
imul
ret
call
loope
xchg
dec
and
mov
jo
xchg
mov
adc
jnp
mov
pop
inc
ret
dec
mov
dec
loopne
pop
repnz
fwait
in
mov
and
test
push
test
fadd
cdq
push
xchg
das
push
sub
pop
aas
inc
mov
dec
lods
xchg
(bad)
loope
psllw
popf
jae
mov
xchg
mov
add
sbb
js
repz
xchg
or
jns
loop
push
push
int3
adc
mov
repnz
cmps
adc
push
inc
cmp
dec
mov
mov
rcr
test
pushf
in
cmc
add
clc
push
mov
inc
fnstcw
(bad)
(bad)
sbb
jmp
repnz
ret
inc
nop
add
(bad)
inc
or
test
daa
push
dec
movs
sub
xor
in
pop
std
push
cmp
push
ret
aas
popf
jecxz
int3
inc
cwde
rcl
sub
and
add
stos
mov
fucomp
mov
xchg
inc
ret
push
pop
dec
aam
js
pop
lods
ds
jp
xchg
or
lods
rcl
push
mov
iret
in
push
mov
and
ss
dec
scas
lahf
cdq
addr16
into
push
mov
lods
cli
and
mov
sub
adc
xchg
lea
stos
sub
ins
adc
repnz
add
mov
xchg
mov
fs
addr16
jecxz
std
loopne
inc
call
test
xor
push
shl
add
jb
push
inc
mov
fbstp
jp
imul
dec
and
(bad)
sub
std
mov
iret
lahf
sti
dec
inc
and
data16
out
mov
iret
mov
fst
mov
iret
jne
pop
in
ins
outs
push
retf
inc
mov
outs
or
push
aam
out
gs
xchg
push
dec
mov
push
ins
and
add
jmp
sub
adc
push
js
adc
mov
push
movs
hlt
cmp
sbb
pop
xchg
push
daa
loopne
ins
xor
fsub
add
fld
mov
pop
lahf
push
jae
stos
cli
fcomp
xchg
inc
pop
dec
cmp
test
sbb
add
call
mov
shr
cmps
sahf
jbe
dec
and
stos
sahf
hlt
jne
in
aam
mov
xchg
aaa
push
adc
xor
adc
mov
jmp
jp
stos
mov
fwait
xchg
sti
outs
mov
jp
shl
movs
push
dec
jb
fisubr
popf
inc
sbb
jb
sub
and
push
lods
pop
enter
xor
mov
jnp
or
test
mov
inc
lock
mov
jge
push
xor
xchg
mov
add
popf
ss
or
jb
retf
mov
mov
mov
test
(bad)
or
(bad)
cwde
lods
mov
sub
mov
mov
dec
or
jne
test
sbb
stos
sub
push
cmp
sbb
ins
lock
dec
mov
add
xchg
and
xor
add
pushf
pop
mov
pop
add
push
mov
cmps
add
retf
inc
and
and
dec
fstp
(bad)
in
mov
add
xchg
shl
or
push
xchg
jo
xchg
add
push
jp
(bad)
mov
add
or
xchg
pop
add
movs
xchg
sub
test
shl
push
arpl
cld
mov
mov
sub
imul
mov
outs
jp
mov
and
loope
cmp
enter
in
pop
mov
mov
ss
retf
push
xor
fsub
jb
add
or
dec
mov
jne
aad
sub
jmp
add
popa
pop
jno
mov
std
mov
outs
xor
push
daa
jge
int
xlat
mov
hlt
test
test
mov
lahf
jl
imul
mov
hlt
icebp
sbb
in
mov
imul
out
lea
cwde
dec
es
aaa
mov
cmp
push
sub
sub
push
mov
cld
movs
nop
lahf
xchg
cmps
mov
lods
mov
adc
imul
cmp
push
push
aad
int3
stos
add
mov
aad
iret
in
fsub
add
cmc
cdq
scas
ss
ja
(bad)
sbb
push
rcr
pop
pop
sub
pop
and
inc
shl
retf
dec
loop
std
mov
fwait
ror
jmp
sbb
scas
xlat
add
xchg
mov
pop
call
cmp
pusha
jmp
hlt
pop
cmp
push
jl
dec
or
imul
inc
clc
pushf
test
rcr
push
adc
xchg
pop
cmp
hlt
out
test
cmc
cmp
xchg
pop
pop
sti
cdq
sub
lock
fsub
push
push
xchg
nop
cmp
sbb
fist
(bad)
sti
js
push
adc
mov
cmp
push
jl
stos
pop
add
repz
imul
cdq
and
mov
xor
add
jp
add
(bad)
mov
pop
mov
lods
cmp
or
jmp
cmp
or
mov
neg
hlt
or
mov
mov
loopne
mov
loope
les
test
iret
sbb
push
or
movs
mov
shr
cwde
sbb
push
xor
stos
cmp
inc
mov
add
aaa
jbe
imul
shr
and
dec
xchg
loope
repz
into
fs
es
xchg
inc
ins
fcomi
sbb
daa
inc
sbb
out
nop
sub
test
dec
sbb
fld
fistp
(bad)
add
lock
call
outs
push
push
lsl
push
adc
popa
retf
stc
xchg
arpl
or
pop
imul
pop
push
sub
jmp
shl
mov
lds
repnz
(bad)
pop
fs
cmp
into
mov
iret
jnp
pop
pop
jle
(bad)
push
sub
nop
out
mov
push
fwait
pop
out
jle
fstp
mov
cmps
data16
dec
or
icebp
push
xchg
outs
mov
je
or
mov
(bad)
sub
cmp
call
push
adc
or
sbb
pop
lahf
dec
cwde
push
cmp
add
leave
fst
(bad)
mov
shl
dec
pop
popf
mov
repz
test
sub
xchg
enter
xor
scas
mov
adc
rcl
lea
mov
cmps
and
xchg
jmp
adc
jno
mov
aaa
pop
out
mov
(bad)
ins
sahf
(bad)
xor
mov
test
out
in
test
jmp
jbe
(bad)
shl
xchg
out
mov
js
out
mov
hlt
clc
inc
stos
mov
repnz
ja
jb
fwait
hlt
dec
in
cwde
xlat
dec
stos
or
jne
sahf
outs
cli
pushf
xchg
xlat
mov
imul
jo
aad
xlat
outs
dec
cmps
push
daa
and
mov
dec
sbb
xchg
test
inc
inc
dec
cwde
mov
lahf
dec
shl
mov
ins
std
std
retf
es
ret
jno
push
jo
clc
jp
rol
adc
hlt
loop
les
retf
in
xor
and
push
ret
in
ins
dec
loope
hlt
pop
jge
push
test
push
add
jbe
lds
and
jle
ins
jmp
paddd
in
pop
mov
inc
jecxz
int
call
mov
les
test
xor
ins
ret
mov
fs
mov
jecxz
pop
add
and
adc
push
popf
sti
or
jmp
in
es
mov
popf
mov
movs
out
(bad)
push
sbb
push
mov
shl
shr
mov
pop
xchg
jle
and
adc
int3
daa
push
hlt
inc
pop
mov
sbb
shl
dec
out
mov
add
dec
nop
stos
dec
mov
jbe
iret
les
test
mov
int
mov
or
xchg
xchg
sbb
mov
fs
pop
push
dec
pop
and
aam
sub
jl
sbb
mov
add
fnstcw
jle
mov
xor
sahf
mov
xor
cdq
fild
loope
repz
movs
xchg
push
inc
jnp
test
pop
pop
dec
and
mov
adc
mov
imul
pop
jae
loope
ret
(bad)
out
data16
jmp
inc
div
cmp
ret
stos
aad
dec
sar
xor
mov
mov
pop
loopne
push
and
xlat
and
sbb
adc
outs
cmp
jne
rol
sbb
ds
jo
fdiv
sub
iret
pushf
pop
popa
(bad)
out
jmp
mov
stos
sub
test
ret
sbb
pop
jl
xchg
sar
push
add
sbb
mov
scas
cmc
or
and
pop
adc
call
xor
jns
mov
loopne
out
in
or
and
push
xchg
jp
sub
imul
inc
cmp
ins
icebp
gs
jns
pop
or
dec
pop
mov
cmp
mov
pop
out
sub
out
popf
mov
das
dec
(bad)
sti
push
push
adc
popa
hlt
iret
les
leave
(bad)
mov
or
in
pop
popf
stc
sar
scas
adc
lds
mov
or
inc
lahf
dec
sub
or
arpl
(bad)
adc
fwait
mov
fadd
neg
push
lods
xor
pop
aas
ror
xchg
dec
xchg
inc
sub
sbb
inc
call
stos
lahf
loopne
jno
mov
cmp
sbb
mov
(bad)
lods
push
scas
xor
and
jmp
je
and
mov
fcomp
jmp
in
ds
shl
movs
out
iret
rol
arpl
loop
scas
dec
adc
ins
push
cmps
cmp
aas
push
shr
dec
sbb
inc
js
movs
lahf
loop
mov
add
pop
out
adc
sub
cdq
and
adc
adc
shr
push
jb
and
cmp
jecxz
loopne
inc
push
test
ret
fwait
mov
mov
pop
sbb
xchg
cmp
test
dec
inc
sub
gs
retf
in
jo
sub
pop
pop
sbb
add
cdq
bound
mov
adc
jae
out
imul
and
mov
arpl
xchg
loope
mov
or
mov
sbb
mov
fmul
pushf
sbb
ret
cmps
fild
movs
cli
and
lods
add
(bad)
into
mov
(bad)
sbb
shr
inc
(bad)
in
inc
outs
iret
es
jno
add
cmp
sub
or
xlat
xchg
pop
jge
fnstenv
or
sahf
mov
mov
test
loope
push
mov
pop
rol
nop
gs
ret
xchg
stos
jmp
sub
and
push
sbb
push
(bad)
pushf
std
push
dec
sbb
das
jns
add
adc
jns
xchg
iret
sub
cmp
pop
adc
sbb
cmp
xlat
cld
stos
pushf
addr16
jle
sub
aaa
cdq
xchg
mov
lods
aaa
adc
lahf
mov
lock
push
inc
aaa
fild
cmp
jo
bound
inc
sbb
lods
and
mov
sar
pushf
sub
fisub
mov
sbb
mov
sahf
mov
imul
sub
mov
xor
jle
adc
xlat
ins
xchg
pop
ret
add
and
and
pop
xor
cmps
xchg
inc
mov
aaa
jbe
mov
aaa
xchg
mov
jl
mov
xchg
add
mov
ins
fild
pop
aam
je
push
dec
int
std
mov
add
add
push
pop
sbb
cmc
popa
inc
lea
sub
or
test
inc
in
push
add
or
cmp
aad
fst
ja
jnp
ss
cld
fisttp
outs
add
das
sar
idiv
sub
jae
xchg
mov
ds
inc
loope
dec
sti
and
push
sub
push
jae
fs
xor
rcl
sbb
inc
repnz
popf
pop
mov
pop
retf
aad
popf
xchg
je
in
mov
dec
div
lea
test
mov
mov
int
cld
hlt
enterw
scas
imul
shl
arpl
push
or
adc
jae
adc
and
out
mov
shl
scas
mov
ja
movs
mov
mov
stos
jl
mov
dec
push
push
or
dec
sub
sti
lea
mov
inc
xchg
inc
xor
adc
sbb
pop
in
pop
ret
rcr
add
in
push
xchg
clc
das
sub
xchg
ret
repnz
sbb
clc
jmp
repz
inc
(bad)
mov
xchg
inc
sbb
mov
sbb
rol
jg
push
fiadd
fsub
push
jmp
popa
mov
jle
pop
mov
or
daa
sub
fld
fist
xchg
lock
jae
mov
push
mov
fisttp
jle
push
ret
mov
xor
adc
popf
pushf
outs
dec
(bad)
loope
setp
jo
mov
(bad)
push
fsubr
ret
int
jle
fcom
pusha
je
mov
adc
dec
shl
ret
lods
aaa
add
jecxz
jne
add
int
push
pop
or
nop
addr16
fs
sbb
out
pop
in
pusha
stc
xchg
call
jg
add
jl
push
pop
xchg
xchg
sbb
fdivr
(bad)
pusha
jbe
add
call
inc
sub
push
mov
push
and
fld
and
lods
xor
and
sub
add
movs
call
loope
cmpxchg
sbb
xor
rol
pop
aam
sub
mov
fmul
stos
cmp
es
xchg
dec
sar
push
sbb
arpl
fisubr
fistp
xchg
xchg
jmp
gs
jmp
mov
cs
add
popa
xchg
jnp
fmul
imul
jmp
imul
sbb
sub
rol
iret
push
sti
call
sti
mov
mov
and
cmp
inc
pusha
xchg
inc
loop
dec
xor
rcr
test
cmp
leave
sbb
mov
push
arpl
sbb
mov
out
jle
push
or
dec
cmp
xchg
loop
add
cmp
xchg
jp
cdq
clc
loopne
lea
push
cmc
inc
addr16
xchg
xor
(bad)
gs
or
in
mov
pop
cmp
mov
jge
lods
xor
aaa
jnp
test
dec
inc
sbb
popa
call
xchg
add
xor
sub
out
leave
leave
mov
mov
xchg
xor
int3
aam
lods
int
test
and
xchg
call
push
push
jno
fwait
sbb
cwde
jg
push
jp
stc
pop
jle
jbe
ret
sub
mov
sbb
adc
xchg
ins
inc
sbb
dec
dec
clc
or
out
xor
sbb
(bad)
cmp
mov
jg
and
pop
jnp
aaa
fs
les
into
dec
div
mov
(bad)
or
loope
sub
in
xlat
les
xchg
arpl
pusha
nop
adc
and
enter
jg
aas
mov
es
daa
inc
inc
cmps
(bad)
add
push
imul
movs
(bad)
mov
dec
je
out
xlat
push
in
push
mov
std
neg
sbb
push
les
adc
stos
sbb
or
mov
ins
push
sub
icebp
xor
stc
pop
mov
scas
retf
iret
int
into
sbb
push
int3
out
add
sti
pop
rol
jmp
push
jl
xchg
jmp
mov
push
jle
retf
aad
aam
or
add
cmps
sub
scas
std
sbb
or
cmps
imul
imul
push
sbb
pop
std
and
cmp
mov
retf
sub
dec
hlt
aad
inc
adc
lahf
pop
cdq
out
fs
xor
add
push
lods
mov
dec
into
pop
lahf
jge
dec
shl
sub
test
in
in
push
mov
mov
inc
(bad)
das
fcom
and
inc
fcomi
mul
or
xor
mov
mov
(bad)
lock
fbld
int
outs
sbb
jl
movs
jl
(bad)
adc
or
hlt
add
jl
outs
stos
pop
sbb
mov
push
frstor
rcl
jo
into
dec
adc
inc
xor
or
movs
xor
es
xchg
mov
push
hlt
ja
and
pop
or
push
es
imul
inc
popa
cmp
loope
dec
and
and
js
cs
or
xor
and
imul
daa
xor
stos
shl
xor
and
gs
in
test
sub
adc
test
scas
dec
dec
lea
pop
add
repz
or
dec
(bad)
(bad)
iret
push
loope
inc
iret
es
out
xor
std
f2xm1
and
loopne
and
mov
or
xor
int
jne
dec
dec
outs
or
jmp
inc
das
js
lds
adc
pop
(bad)
adc
daa
or
movs
push
js
int
repnz
scas
cwde
aaa
and
cmp
adc
and
or
stc
adc
out
sub
inc
xor
xchg
adc
popf
pop
or
test
cmp
pop
(bad)
shr
in
call
sbb
sbb
dec
and
mov
cmp
cmp
shr
jbe
mov
adc
ds
lea
inc
retf
shl
or
cmps
cmps
push
dec
adc
es
jno
test
or
fsub
lds
push
stos
stos
cmp
imul
mov
adc
sub
xor
in
ret
xchg
mov
sub
dec
rcr
pop
fnstsw
mov
lock
xor
xchg
ffree
ja
cmc
xchg
movs
mov
push
mov
movs
adc
adc
call
ja
mov
mov
iret
adc
xchg
bound
mov
ja
shr
dec
or
sahf
pop
es
mov
jg
mov
lahf
fdivr
sbb
shl
fist
mov
cdq
fcomi
mov
jnp
push
(bad)
ins
mov
stos
dec
inc
pop
add
push
ins
mov
sbb
cmp
cwde
jmp
xor
pop
push
shl
dec
xor
leave
aas
mov
out
pop
adc
clc
jmp
inc
std
(bad)
stc
(bad)
not
dec
lock
test
cmp
scas
mov
sub
add
jmp
out
(bad)
jmp
or
jb
fisub
jg
outs
jg
mov
call
push
add
cmp
pop
in
out
mov
mov
mov
xor
cmc
je
adc
stc
xchg
pop
jnp
(bad)
cdq
add
stc
jmp
and
call
scas
sbb
dec
int3
clc
popa
xchg
cdq
or
pop
popa
ds
push
dec
pop
movs
mov
mov
cld
inc
pop
enter
pop
ins
push
sar
xchg
test
jge
jmp
stc
outs
fwait
scas
and
ficomp
stc
pop
out
or
pop
aaa
or
jge
das
ret
jp
pop
adc
out
xor
mov
mov
int
cmp
adc
adc
data16
dec
or
sbb
std
dec
in
fwait
jbe
ins
mov
pushf
pop
xchg
sub
cmp
jp
xlat
repnz
das
repz
fwait
adc
aad
shl
imul
leave
jle
push
ins
and
bound
dec
xchg
xor
sahf
shl
inc
push
stos
or
stc
pop
xchg
adc
xor
cwde
xchg
inc
cmps
jge
test
jg
aaa
mov
sbb
mov
jbe
push
cmps
sbb
mov
sub
push
icebp
dec
and
loopne
pop
(bad)
arpl
imul
test
loope
push
and
jl
out
jecxz
ins
ds
jle
test
xchg
mov
fwait
scas
cwde
scas
push
je
movs
daa
mov
popa
add
xor
or
out
add
in
repnz
xchg
sbb
int3
sbb
fild
mov
ins
xchg
test
jp
movs
clc
ret
aaa
sahf
call
stc
hlt
push
jg
adc
es
pop
mov
and
ja
inc
xchg
loope
sbb
out
lock
cmp
aad
ds
imul
cmp
pop
shl
mov
xchg
xor
dec
retf
mov
xlat
test
into
hlt
fcomp
inc
adc
nop
pushf
or
dec
test
enter
sub
sbb
sub
pop
and
cmp
shl
mov
sti
ja
xchg
shl
pop
adc
das
add
icebp
dec
jmp
mov
or
mov
sbb
lahf
sahf
add
sti
cmps
imul
(bad)
mov
lds
(bad)
aas
mov
lods
out
sbb
jmp
push
into
cmc
push
jmp
mov
sbb
mov
dec
dec
out
inc
push
sub
stos
in
inc
xchg
or
leave
pop
ins
sbb
jmp
hlt
cmp
js
(bad)
cmp
popa
adc
rcl
bound
xor
test
dec
dec
cmp
lods
jo
mov
lds
push
jp
sbb
ror
aad
movs
push
cmp
cmp
sub
adc
fcmovbe
inc
inc
gs
sub
mov
(bad)
mov
cmp
push
ins
iret
cli
dec
push
add
and
fld
into
pop
cmp
jnp
mov
sbb
cli
and
in
aam
sub
inc
push
cmp
in
push
test
mov
jge
jne
adc
xchg
xor
pusha
enter
popf
popa
push
adc
popf
ret
lods
sbb
push
push
lods
cmp
mov
push
leave
bound
or
cmc
dec
iret
mov
add
das
lods
arpl
imul
sbb
mov
push
sqrtps
mov
test
inc
stc
jg
retf
movs
out
jo
cmps
loop
dec
inc
inc
int
and
popa
js
push
fnstcw
ficomp
scas
sbb
mov
pop
inc
mov
ds
dec
sub
fdivr
int
and
jge
mov
dec
add
mov
or
movs
add
sbb
inc
xor
sti
movs
push
add
shl
xchg
sti
es
int3
inc
in
and
loope
push
lods
dec
cmc
xor
push
push
sbb
cli
xchg
aaa
push
xchg
sub
data16
cmps
repz
cs
ins
lock
sbb
add
and
shl
pop
aam
push
pop
adc
fwait
call
(bad)
test
pop
push
in
xchg
mov
in
jno
stc
retf
pop
jo
mov
nop
adc
fild
inc
jns
fst
cld
xrelease
jle
(bad)
mov
mov
cwde
lods
test
jnp
les
jns
pop
cmp
xor
retf
push
jne
(bad)
(bad)
daa
jnp
cmc
ds
dec
cmp
xor
or
jmp
mov
aad
inc
(bad)
int
and
push
mov
out
pushf
cld
cdq
sub
add
(bad)
inc
out
mov
ret
fidivr
sub
pop
add
popa
retf
mul
cdq
cdq
mov
gs
inc
outs
cld
and
ja
out
sbb
aam
sbb
lahf
ficom
xchg
ret
fimul
or
pop
and
ds
gs
jle
fimul
jg
in
adc
fcom
mov
int3
mov
rcr
inc
jmp
test
jae
fsubr
mov
into
or
pop
icebp
cmp
xor
test
mov
mov
dec
inc
gs
iret
fild
sbb
lds
loope
test
jno
daa
xchg
push
inc
or
sbb
lods
loope
outs
and
daa
and
fs
cs
mov
sbb
dec
je
add
add
jmp
pop
retf
mov
inc
dec
push
sbb
bound
lock
pop
ret
and
aaa
(bad)
inc
cdq
mov
ret
int
xor
jp
sub
das
sub
mov
jge
movs
inc
push
repnz
lds
lea
stos
push
dec
jmp
aad
retf
dec
cmps
and
leave
je
out
neg
mov
mov
into
out
jmp
imul
ffree
sbb
mov
jg
aas
pusha
in
sub
mov
ficomp
enter
call
lea
lock
jg
and
sub
les
mov
jmp
inc
pop
push
out
xor
movs
movs
sub
pop
shr
pop
ss
cdq
pop
jp
sbb
lds
dec
push
xor
stos
mov
mov
pop
fisub
cli
jp
jb
sti
inc
dec
dec
retf
mov
ds
pop
(bad)
jbe
idiv
push
xor
lods
mov
out
ja
sub
dec
or
test
cs
movs
lods
(bad)
push
les
add
and
icebp
mov
mov
loope
jmp
or
loopne
mov
cmp
cmp
add
mov
inc
mov
gs
in
fild
shl
sti
push
je
cmp
retf
push
push
mov
cdq
xchg
add
pop
xor
adc
or
push
aas
daa
xor
outs
cld
aas
cdq
or
push
add
enter
cs
test
mov
iret
out
lahf
cld
repz
mov
out
imul
mov
inc
dec
push
scas
leave
and
lahf
cwde
mov
(bad)
(bad)
cmc
cmc
push
push
adc
test
push
sbb
mov
lahf
inc
inc
pop
push
cmp
sub
std
movs
mov
adc
xor
dec
xor
sub
mov
sti
pop
call
lds
cmp
sub
xchg
addr16
jp
enter
jno
push
push
mov
mov
scas
aas
add
mov
xor
das
cmps
je
adc
mov
cmp
clc
scas
out
retf
cli
pop
cmp
dec
stc
and
xchg
mov
push
cmp
jno
sub
ins
dec
mov
adc
jmp
in
mov
pop
xchg
mov
add
aam
out
icebp
aaa
fisttp
mov
inc
jne
sbb
xchg
and
out
fst
sbb
mov
pop
inc
jmp
(bad)
adc
and
int3
cli
ror
mov
int3
prefetch
or
and
aam
dec
sbb
aas
movs
xor
jns
and
jae
out
push
rcl
stos
cmps
test
loopne
or
cmps
mov
out
jp
cmp
clc
pop
cmp
retf
test
dec
imul
retf
and
inc
and
(bad)
push
enter
cli
aaa
dec
sub
repnz
lds
dec
mov
imul
rcr
int3
(bad)
popf
movs
jmp
lahf
and
jne
mov
or
mov
add
pop
sbb
mov
cmps
lahf
movs
add
mov
(bad)
stos
add
iret
sbb
sub
mov
scas
enter
push
imul
call
mov
mov
cmp
pushf
sbb
mov
jmp
mov
ror
pop
xchg
push
leave
or
sbb
mov
stos
rcl
lock
loop
push
out
mov
fsubr
xchg
push
sub
fimul
stos
add
into
pop
add
imul
sub
xchg
and
add
fwait
sub
adc
adc
data16
out
cli
lds
xlat
test
cdq
js
ret
or
xor
(bad)
into
adc
adc
daa
add
das
retf
not
popa
pop
gs
out
jbe
sub
retf
push
fadd
repz
cmp
fucom
fst
sub
or
inc
sahf
xchg
dec
shl
jo
jle
scas
xchg
test
rcr
xchg
jle
test
retf
inc
push
mov
push
add
inc
mov
jo
push
dec
mov
mov
ja
jg
dec
pop
int
and
mov
imul
inc
mov
outs
xchg
adc
stos
push
fadd
(bad)
or
sub
mov
pop
pop
sbb
dec
xchg
ret
or
gs
mov
js
cmp
push
or
leave
leave
fwait
ret
sbb
ud1
add
adc
add
dec
in
or
in
jb
nop
mov
outs
add
enter
jl
sti
ss
fwait
repnz
enter
ins
adc
pop
push
and
dec
jecxz
mov
or
loop
jnp
cmp
(bad)
cmps
fsubr
mov
inc
dec
int
sub
mov
mov
push
jne
jns
fxch
jecxz
into
sbb
retf
pusha
pop
inc
into
fwait
retf
push
push
addr16
into
pop
retf
dec
test
push
(bad)
lock
out
mov
shr
aam
mov
add
imul
sbb
test
retf
pop
pop
pushf
xor
sbb
bound
adc
inc
xchg
jg
xchg
jnp
lock
icebp
outs
(bad)
loopne
xor
dec
shl
xchg
and
pop
dec
(bad)
cld
jns
sbb
xor
dec
retf
cmp
pop
xor
enter
inc
or
ret
enter
int3
mov
(bad)
repz
mov
cmp
repz
cmp
and
test
mov
imul
fimul
dec
fcmovnb
das
(bad)
in
fmul
or
inc
and
sub
push
xchg
ds
hlt
jmp
pop
test
popa
xchg
pusha
shl
jecxz
mov
cmps
lds
ss
inc
inc
sbb
(bad)
mov
inc
and
fdivr
aaa
jo
call
adc
repnz
adc
xor
test
leave
push
push
and
call
xchg
inc
pop
mov
mov
and
xchg
sub
test
push
cli
mov
pmaxsw
inc
test
and
cmc
dec
inc
inc
inc
cld
xchg
(bad)
jbe
sbb
mov
aaa
and
mov
idiv
ret
out
jae
ins
jnp
sar
dec
adc
xlat
dec
addr16
sub
movs
mov
(bad)
aam
mov
dec
mov
and
aam
pop
xor
jmp
cmp
dec
cmp
sbb
sbb
push
cmp
enter
mov
rol
or
xchg
imul
in
adc
dec
dec
aas
pop
ja
icebp
mov
add
sbb
aas
arpl
nop
retf
add
cmc
jmp
xor
jp
inc
jl
retf
es
pop
mov
and
mov
int3
jg
call
out
shr
test
dec
dec
(bad)
into
out
pusha
icebp
dec
arpl
ret
pop
mov
mov
lock
mov
adc
and
dec
shr
and
adc
(bad)
and
add
inc
std
pop
lea
bnd
shl
jnp
lea
mov
cmps
sub
shl
and
sbb
add
mov
ins
popa
es
int
jo
sub
cmps
pop
or
(bad)
sub
push
movs
fist
loop
push
iret
inc
fsub
mov
rcr
pusha
mov
adc
cmp
sar
int3
cmovne
xor
(bad)
fs
jmp
push
xchg
and
cmp
in
push
push
cmp
movs
xchg
jmp
sbb
xor
les
xchg
fidiv
jmp
ss
push
mov
jns
rol
sbb
jle
jno
outs
push
jle
clc
push
push
adc
(bad)
dec
out
dec
xchg
icebp
ror
popa
inc
stc
dec
xchg
popf
aaa
jle
daa
shl
pop
dec
cmp
loopne
dec
imul
int
pushf
fisttp
(bad)
mov
push
add
xor
jnp
cdq
mov
pop
cmps
loop
out
imul
sbb
dec
mov
call
stc
or
cmp
mov
xor
cmps
sbb
fldcw
mov
std
aaa
or
pop
cmp
or
rcr
adc
sar
push
mov
lahf
push
cdq
mov
mov
xchg
loop
jmp
fild
cmp
xor
inc
jl
(bad)
pusha
(bad)
ins
ds
clc
jg
lahf
dec
out
fnsave
aas
inc
mov
pop
add
ret
push
std
nop
or
dec
add
int3
pop
mov
sahf
xlat
mov
scas
push
mov
(bad)
push
push
lods
aas
out
push
aam
mov
xlat
addr16
mov
enter
inc
ficomp
mov
add
or
call
in
xchg
leave
adc
fcmovu
add
outs
movs
xor
mov
outs
or
jns
out
xor
ja
daa
mov
test
dec
mov
add
sbb
dec
rol
rcl
adc
imul
sub
test
jp
mov
test
movs
cmps
int
sar
xor
xor
add
jmp
mov
jmp
xchg
xchg
inc
mov
retf
ficom
nop
sti
push
iret
imul
scas
sti
cmp
cld
mov
push
inc
adc
(bad)
retf
xchg
cdq
stos
fidivr
pop
into
pop
loop
lea
rol
retf
mov
into
je
popf
aam
push
out
scas
push
and
jbe
push
imul
adc
shl
retf
adc
mov
xor
sub
fstp
or
pop
rcr
outs
pop
sub
jbe
push
popa
push
out
inc
lods
lods
adc
test
and
xchg
cmp
cli
in
pop
out
mov
sahf
cwde
lock
mov
ret
outs
push
dec
pop
xor
push
call
xchg
je
sbb
mov
jae
shr
popa
rcr
popa
(bad)
repnz
inc
aad
push
add
loop
adc
xor
outs
(bad)
pop
hlt
loopne
ins
jne
sub
pop
ja
pop
ds
or
mov
scas
test
out
aad
loope
xchg
sbb
fiadd
pop
mov
jge
sub
call
cmp
in
sub
lea
stc
pop
outs
nop
push
inc
ror
pop
or
repnz
out
repnz
jne
in
mov
inc
or
fmul
pusha
sub
and
jg
push
lock
and
pop
xor
mov
aaa
ins
cmps
dec
clc
xor
aas
dec
pop
test
data16
jl
sbb
and
inc
lds
sbb
fcom
mov
cmp
mov
es
test
icebp
data16
or
mov
lods
fucomip
mov
cmc
adc
test
iret
scas
dec
movs
arpl
inc
outs
test
aam
cwde
mov
jne
cmc
icebp
fidiv
ss
push
lahf
imul
pop
(bad)
or
dec
sar
dec
cmps
lods
adc
mov
cmps
stos
jno
scas
pop
in
leave
leave
sbb
push
dec
inc
mul
mov
inc
int3
lds
mov
mov
aad
loopne
xor
adc
mov
in
in
sahf
popf
outs
inc
test
scas
jge
dec
clc
(bad)
stos
mov
dec
push
or
mov
cdq
mov
adc
cmp
lgs
pusha
mov
mov
fild
pushf
aam
add
adc
mov
dec
iret
sahf
stos
pop
inc
push
mov
sub
hlt
es
cs
push
add
sbb
fsubr
(bad)
lods
dec
or
pop
push
or
rol
jbe
(bad)
cmp
xor
ds
jle
xor
fstp
add
jmp
fst
aam
cmc
sbb
cmp
dec
cmc
and
sbb
out
loopne
ror
jae
cmp
pop
rcr
or
cli
adc
fucomip
ffree
lock
(bad)
enter
movs
fadd
out
jg
dec
pop
mov
in
fnstenv
test
fild
fcom
push
test
mov
inc
inc
mov
leave
add
mov
jmp
test
add
push
call
lahf
test
adc
dec
or
add
ss
cld
addr16
(bad)
sbb
jnp
sub
pusha
and
loop
dec
mov
ins
popa
add
adc
imul
neg
jl
rcl
int
lock
stc
push
jne
sahf
push
fisttp
sbb
mov
(bad)
xor
fucomip
dec
push
(bad)
in
sub
sub
stc
mov
arpl
cld
cmp
xchg
pushf
ror
cmp
icebp
daa
mov
cmp
sahf
sti
mov
inc
pop
cmp
and
push
mov
call
popa
xchg
jnp
outs
enter
mov
and
jmp
popf
loope
int3
dec
icebp
jge
repnz
pop
xlat
mov
fdivr
nop
fwait
cmp
in
(bad)
xchg
(bad)
iret
dec
pusha
cmps
lock
ror
fist
dec
int
xor
mov
nop
jg
push
xchg
(bad)
pop
loop
nop
cmp
inc
sub
push
adc
iret
sahf
inc
xchg
enter
push
mov
lahf
test
rcr
cs
out
push
and
xchg
aaa
cmp
out
xchg
imul
add
mov
ins
inc
enter
shl
mov
stc
jl
or
adc
or
xlat
in
scas
push
jmp
shr
xchg
mov
cmp
push
inc
mov
fs
clc
xor
mov
jl
pop
pop
sahf
fs
sbb
shr
arpl
mov
push
repnz
(bad)
jne
(bad)
mov
sub
jae
fisub
mov
repnz
lds
(bad)
movs
mov
idiv
inc
fsubr
std
out
in
xchg
fucom
jnp
add
in
dec
pop
cmps
icebp
pop
add
inc
and
add
adc
cld
int3
daa
add
cmp
test
rol
pop
mov
ss
pusha
xchg
mul
xchg
mov
shr
xchg
add
js
idiv
push
mov
mov
aam
shr
rol
out
mov
(bad)
xchg
mov
dec
jle
(bad)
mov
fisttp
aam
dec
stos
pusha
cld
pusha
test
fs
push
outs
cmp
out
add
and
out
popa
(bad)
jns
rcl
dec
push
add
adc
push
es
fucomip
mov
mov
xor
mov
mov
sar
inc
sahf
xchg
int3
jmp
out
outs
and
pop
cmp
mov
jbe
cli
jbe
adc
mov
jmp
scas
out
outs
addr16
jmp
js
shl
cmps
fist
iret
pop
imul
fld
scas
fwait
mov
xor
sar
retf
out
aad
test
cmp
fist
cmp
dec
dec
mov
movs
popa
mov
or
dec
mov
pop
aaa
jp
adc
inc
sbb
std
aas
and
ja
xchg
mov
add
cmps
mov
sub
cdq
leave
and
adc
std
or
cmp
cmps
js
push
imul
and
pop
pop
dec
rcl
or
retf
mov
pop
jp
and
and
push
sub
lods
add
jl
mov
sub
xor
std
ficomp
nop
sub
jge
jbe
(bad)
push
(bad)
push
dec
xor
adc
ss
inc
mul
mov
push
or
xchg
adc
fwait
xlat
out
dec
fnstcw
xchg
aam
fwait
push
sbb
and
in
push
fistp
out
mov
push
cdq
inc
dec
gs
mov
mov
aam
fadd
aam
clc
ror
stos
xchg
sbb
fptan
shl
out
std
xchg
or
loop
cmp
and
mov
cmp
ins
leave
pop
adc
movs
(bad)
xor
test
lods
ret
gs
pop
ds
add
das
rcl
cmps
js
ja
(bad)
dec
sbb
mov
sub
inc
xor
xor
sbb
ror
inc
xor
sbb
repnz
mov
jp
dec
cmps
daa
scas
fstp
mov
sbb
jmp
ins
adc
or
and
mov
xchg
out
scas
xchg
xchg
and
lds
out
fs
dec
out
push
shr
pop
sub
cmc
inc
pop
add
mov
rcr
gs
push
jg
in
test
ror
call
mov
and
cdq
popa
and
mov
inc
(bad)
push
ja
jmp
xor
cmp
dec
jecxz
xchg
cmp
scas
ss
adc
mov
pop
mov
jg
jl
ret
rcl
cmp
call
jb
cmp
in
je
cmp
les
lea
add
outs
mov
cmp
xchg
ret
pop
ret
mov
pop
cmps
xor
(bad)
mov
jl
mov
aam
movs
clc
add
ins
xor
das
sbb
push
in
(bad)
sbb
push
pushf
push
repz
push
stos
add
mov
xchg
push
cmp
ficom
inc
dec
sbb
push
inc
loopne
loopne
mov
imul
fcmovnbe
dec
call
test
sbb
inc
inc
loope
and
das
out
shl
inc
add
sbb
pop
cmp
in
mov
cdq
call
fwait
push
arpl
loopne
add
mov
cmp
and
test
jg
test
or
es
xchg
sub
stc
(bad)
cmp
pop
mov
repnz
ins
nop
loop
add
test
std
loopne
push
jno
mov
test
cmp
sub
rcr
pop
pop
xchg
mov
adc
mov
sbb
xchg
dec
ins
xor
pushf
mov
sbb
jmp
adc
leave
dec
pop
retf
xlat
and
pop
mov
fs
test
mov
(bad)
mov
std
xchg
lea
pop
mov
push
mov
int3
jmp
xchg
cld
xor
mov
scas
pop
inc
add
call
add
push
pop
cli
in
fnstenv
inc
sub
jecxz
mov
adc
dec
out
ss
leave
push
inc
data16
and
stos
mov
xchg
scas
outs
clc
dec
push
xor
sub
inc
sub
adc
iret
mov
mov
fistp
fdiv
mov
ds
cmc
dec
scas
ins
mov
out
rcl
pop
or
div
mov
and
cmp
sar
xchg
push
fs
cwde
lds
in
and
lock
mov
jo
sbb
js
lahf
pop
out
push
ja
add
fstp
xchg
xchg
jbe
dec
ss
mov
mov
lods
jo
test
pushf
and
jns
out
sbb
dec
xchg
push
movs
jnp
mov
shl
leave
mov
add
sub
xlat
fadd
nop
xor
lods
and
xchg
lea
adc
sti
inc
adc
pop
push
jge
imul
add
popa
cmp
push
or
and
lahf
movs
retf
pop
bound
inc
fadd
jno
out
fwait
psrlw
jp
mov
sar
(bad)
sti
and
out
imul
cli
and
xor
inc
frstor
push
pop
mov
ret
or
jo
push
daa
push
fwait
dec
and
int3
pop
mov
cmps
call
pop
test
hlt
loope
xchg
es
add
xor
mov
xchg
jae
(bad)
sti
and
in
mov
sub
adc
mov
mov
icebp
push
sbb
retf
outs
test
adc
xor
jecxz
jae
sub
add
push
xor
mul
lahf
sti
dec
dec
sbb
cmp
sbb
sub
lock
imul
inc
scas
(bad)
scas
dec
ins
repnz
or
cmp
push
cwde
fild
push
into
or
or
mov
cmp
sbb
ror
push
mov
mov
loope
outs
add
fld
mov
arpl
inc
jnp
rcl
shr
pop
jp
mov
shr
(bad)
sti
inc
cdq
ret
xor
add
hlt
fmul
jmp
in
xor
shl
test
cmp
loope
fsubrp
xor
adc
movs
dec
inc
xchg
jnp
mov
pop
pop
int
inc
div
or
cmps
sahf
stc
mov
lahf
jnp
test
dec
mov
fnstenv
dec
cs
xchg
(bad)
lods
mov
and
mov
loopne
sub
inc
mov
int
adc
xchg
cmp
jns
pop
inc
ror
js
pop
paddsb
push
int
jmp
inc
das
rcl
mov
sbb
xor
sahf
ror
ss
ins
ror
aad
je
fadd
outs
lods
push
fisubr
xor
dec
popf
nop
outs
es
pushf
retf
rcl
pop
scas
add
dec
sub
adc
mov
add
jmp
dec
xor
stos
stc
das
inc
rcr
mov
icebp
fbstp
push
or
add
daa
pop
mov
xchg
sbb
mov
je
daa
ffreep
cld
lock
(bad)
push
pusha
mov
mov
sub
repz
or
hlt
xchg
xchg
jecxz
cwde
or
pop
mov
pop
ins
dec
mov
cli
ret
ins
adc
sbb
xor
retf
or
cwde
movs
xor
and
neg
je
lods
fs
or
mov
jnp
push
pusha
jo
push
and
dec
sub
lock
mov
test
sbb
pop
sbb
neg
xchg
add
jg
jns
aaa
int3
(bad)
mov
retf
adc
cmps
jle
mov
sbb
(bad)
sub
fistp
(bad)
into
(bad)
in
cmp
cwde
aaa
xchg
adc
cs
dec
xor
in
dec
bound
add
sahf
(bad)
cs
mov
popa
cmc
xchg
xor
pop
fsubr
mov
in
test
fmul
and
mov
(bad)
and
int
inc
cmp
vpmacsdd
jbe
push
fsubr
iret
mov
cmp
not
or
mov
sub
jp
sub
in
(bad)
movs
test
sbb
stos
cmc
dec
retf
ins
xor
or
jge
sub
in
fnstcw
mov
in
add
(bad)
clc
mov
scas
aad
mov
js
adc
sbb
stos
mov
xchg
push
stos
cmc
dec
and
mov
pop
and
test
call
mov
aas
mov
je
inc
sbb
pop
hlt
aaa
adc
retf
mov
mov
xchg
movs
pop
inc
sbb
mov
xor
popa
mul
fmul
int3
sbb
and
mov
dec
pop
int3
jp
adc
imul
test
jne
cwde
push
pusha
cmc
fistp
adc
gs
pushf
jmp
leave
scas
fs
outs
neg
lahf
or
inc
in
xchg
mov
cmp
in
les
or
clc
adc
adc
ins
ror
test
and
adc
loope
cld
(bad)
cmp
cmp
retf
int
or
mov
lds
adc
sahf
push
xchg
(bad)
xchg
mov
pop
dec
lds
pushf
cmps
inc
adc
ins
pop
xchg
xor
sbb
mov
nop
cmp
(bad)
ds
and
add
sub
scas
(bad)
sbb
pop
xlat
xor
xor
cdq
inc
imul
sbb
mov
popa
adc
jl
in
add
aas
daa
mov
mov
sbb
aad
inc
push
fst
in
adc
and
call
inc
inc
cwde
inc
pop
adc
or
mov
jnp
lods
(bad)
rol
mov
aas
in
adc
add
test
test
sub
outs
fild
rcr
movs
jl
shr
ret
aam
mov
xchg
mov
add
cmp
cmp
sub
xor
sbb
scas
xchg
cmovo
sub
std
je
mov
cmp
loope
das
imul
sar
in
mov
inc
ins
movs
jp
adc
pop
jo
sbb
cdq
pop
loopne
mov
add
sti
mov
cmps
loope
xchg
movs
rcr
mov
mov
mov
jge
aas
mov
arpl
jmp
fisttp
rcl
cmc
fcmove
shl
sbb
push
xor
idiv
mov
(bad)
ins
lods
xchg
icebp
mov
leave
(bad)
sbb
aad
fdivr
cmps
(bad)
imul
cmp
add
iret
aaa
mov
sar
pop
cmp
cdq
mov
pushf
adc
xchg
hlt
in
test
inc
mov
(bad)
enter
(bad)
xor
jnp
pop
inc
mov
mov
jge
pop
retf
cmp
push
rcr
test
iret
dec
xchg
popa
jb
push
mov
mov
push
mov
cmp
ja
mov
repz
cli
xor
ja
test
push
aam
ret
das
lahf
(bad)
retf
pushf
daa
mov
jne
mov
mov
inc
ja
xor
mov
sahf
ins
sub
pop
sbb
jnp
pop
or
(bad)
xchg
and
int
(bad)
fcom
aaa
pusha
sub
mov
or
call
test
in
outs
je
out
iret
call
test
jnp
xchg
es
jle
test
jecxz
sub
lahf
addr16
leave
dec
clc
add
out
retf
jne
test
mov
sar
xor
and
pop
mov
sbb
movs
sbb
cld
(bad)
cmps
fwait
(bad)
or
bound
jb
repz
mov
xor
cmp
sar
push
mov
in
outs
push
pushf
or
imul
imul
out
cmc
mov
mov
sub
stc
dec
retf
push
or
jno
ins
imul
mov
push
and
push
out
cld
adc
dec
cld
xor
imul
and
mov
retf
push
call
push
(bad)
int
(bad)
stos
pop
out
call
mov
add
pushf
add
jb
call
inc
push
and
pop
fs
(bad)
xchg
mov
and
push
das
pusha
push
in
(bad)
and
mov
pusha
cmp
jmp
pusha
in
fst
push
inc
lods
dec
loopne
sbb
test
stos
clc
mov
out
xchg
push
xchg
sbb
cmp
cmp
fldcw
xlat
movs
pop
inc
xchg
or
bound
sar
inc
out
rcl
sahf
outs
pop
iret
add
cmc
das
mov
inc
call
ss
int3
aad
call
out
movs
jmp
test
adc
js
rol
inc
popf
ins
push
repnz
rdpmc
pop
sbb
mov
or
out
sub
add
(bad)
sbb
pop
cdq
aad
adc
not
xor
retf
adc
in
ins
add
cld
xchg
mov
int3
adc
fs
in
imul
jecxz
mov
outs
fcmovnbe
dec
jne
and
(bad)
je
popa
test
xor
loope
inc
aaa
lea
repnz
mov
(bad)
inc
clc
dec
pop
cs
clc
lods
sub
inc
fst
and
mov
stos
xchg
icebp
and
inc
mov
fistp
adc
rcl
movs
mov
adc
in
cmp
sbb
and
gs
push
xor
sub
sub
iret
add
inc
push
enter
mov
cmp
es
repnz
clc
jle
sbb
(bad)
out
mov
fcmovbe
xor
scas
xor
pop
retf
inc
outs
xchg
shl
xchg
inc
test
rol
pop
cmps
daa
lds
in
stos
(bad)
call
sbb
(bad)
(bad)
pop
mov
push
sbb
cmps
cmps
outs
dec
call
out
test
pop
sbb
add
fimul
or
out
lds
mul
mov
mov
hlt
jmp
sbb
cmp
aas
arpl
inc
pop
xchg
mov
sub
pushf
dec
fcomp
push
or
adc
ins
cmp
cmp
xor
out
sub
stos
push
ss
mov
dec
add
stos
fdiv
mov
scas
add
pop
stos
(bad)
add
sub
dec
cmps
aam
cld
mov
call
loopne
movs
inc
sub
scas
mov
mov
inc
ja
mov
lahf
mov
cs
pop
movs
dec
jb
popf
sbb
xchg
imul
fild
cmp
or
fcomp
loop
mov
xchg
and
inc
mov
inc
and
inc
add
ins
inc
std
jbe
movs
or
add
mov
or
mov
mov
aad
and
rcl
aas
cli
stos
dec
repnz
sbb
mov
cmp
mov
add
ds
movs
nop
ss
jne
rol
xor
cli
push
ret
jp
ret
jecxz
sub
fisubr
mov
aaa
adc
jmp
jp
loopne
loope
cdq
jle
out
shl
add
call
div
stos
add
cs
ins
pop
jo
xchg
loop
push
cdq
cmc
xor
dec
lds
sti
dec
inc
mov
xor
xor
stos
pop
fbstp
lods
xor
xor
ds
cli
xchg
outs
in
push
inc
stos
mov
test
fcom
inc
inc
jns
sub
(bad)
cmp
ror
and
mov
mov
pushf
cdq
js
mov
(bad)
inc
sar
out
pop
in
pop
fsub
xor
mov
xchg
out
sub
sub
xchg
cwde
jp
rcl
adc
cdq
aad
adc
call
lds
cmps
sub
pop
xchg
fld
icebp
xor
xlat
(bad)
loopne
in
mov
pop
neg
mov
arpl
enter
pusha
xchg
inc
test
movs
cwde
mov
iret
dec
imul
pusha
cld
push
mov
jnp
cmp
xchg
imul
jnp
sti
retf
adc
shl
clc
mov
add
shl
mov
and
fidivr
and
mov
inc
div
mov
fadd
cmp
pop
mov
fisttp
xor
shr
push
sub
pop
mov
mov
aaa
xor
and
ss
ret
and
xor
mov
add
clc
int
out
xchg
and
jne
push
adc
(bad)
lods
xor
add
mov
out
shl
mov
pop
fidivr
outs
aad
test
aam
and
pop
dec
sbb
ja
out
adc
push
push
repnz
sub
xor
push
sub
fcom
and
div
pushf
dec
push
fdiv
jmp
imul
imul
jle
mov
jl
ins
dec
clc
xlat
pop
lock
je
xchg
es
int
stos
push
dec
arpl
push
xor
repz
adc
mov
xchg
mov
pop
jb
mov
sub
mov
in
xchg
mov
sbb
test
pop
pusha
xor
aam
pop
dec
mov
push
je
adc
dec
and
xor
aad
push
scas
sub
pop
ins
mov
ret
add
jnp
push
js
aas
pop
mov
popa
or
cwde
arpl
mov
sbb
xchg
pop
bnd
retf
jmp
cmp
enter
jge
lahf
xor
lahf
mov
mov
mov
sub
sahf
jmp
sbb
add
pop
idiv
mov
sub
jge
xchg
fucomi
out
(bad)
mov
iret
xchg
jmp
pop
ja
xchg
sahf
mov
dec
dec
push
pop
pop
fnstsw
and
cdq
lock
movs
ja
hlt
xor
pusha
sahf
pop
cwde
(bad)
pop
sbb
out
inc
mov
pop
cmp
retf
sub
sub
xor
or
xor
fwait
test
and
mov
pop
pop
pop
fsub
out
pop
cmc
dec
iret
outs
(bad)
js
mov
add
test
adc
nop
mov
add
mov
push
cmc
jmp
ds
jne
push
call
ficom
sbb
sti
adc
mov
cmp
sbb
or
mov
js
cdq
aaa
inc
and
adc
sbb
mov
cmp
mov
test
fild
addr16
pop
xor
std
mov
loopne
dec
xchg
mov
or
sub
test
shl
pop
cmp
adc
sub
fucomp
jmp
push
push
mov
rcr
cmp
mov
add
dec
out
mov
add
in
sbb
jns
lock
rol
sbb
mov
jmp
pusha
sbb
jmp
in
sub
xchg
jno
mov
test
lock
add
cmp
cmp
dec
or
xchg
cld
sahf
sub
add
push
inc
pop
aad
push
xchg
pop
call
xor
jp
jno
xchg
repnz
daa
clc
loop
popf
movs
not
cli
jb
adc
jg
pop
jp
stos
sub
aad
xlat
popf
inc
cmp
mov
add
pusha
adc
ret
push
clc
in
ins
and
sahf
sub
mov
mov
sub
or
inc
pop
inc
cmp
push
pop
push
sub
scas
mov
or
xor
jnp
jo
loopne
cdq
xor
push
pop
in
cwde
rcr
sub
mov
movs
xor
fild
xchg
in
cmovne
mov
inc
mov
rcr
jmp
pop
mov
adc
pop
cmp
mov
jne
daa
cld
(bad)
out
or
jb
and
pushf
sar
dec
movs
jmp
pop
pop
retf
outs
aaa
ret
sbb
js
fsub
iret
pop
lods
xor
xchg
(bad)
mov
or
out
xchg
rcr
lock
cmp
fwait
std
fucomip
cmps
in
rcr
inc
dec
mov
or
xchg
fbld
lea
aaa
mov
push
xor
and
adc
pop
cmc
mov
push
mov
add
dec
inc
jecxz
mov
jno
imul
or
je
test
pop
sbb
or
sti
es
shl
adc
lea
add
or
sub
lods
dec
ret
push
rcl
dec
pop
adc
pop
add
aam
push
dec
int3
scas
test
(bad)
inc
test
and
xchg
cmp
jg
and
lds
fwait
test
imul
sub
ja
push
pop
dec
retf
sar
and
inc
loop
jp
mov
lock
sbb
push
mov
test
adc
aad
jno
sahf
dec
and
into
dec
xchg
mov
mov
jmp
scas
push
or
das
push
sub
mov
sub
push
jns
test
xchg
push
sbb
or
inc
xor
pop
cmp
jge
jne
push
mov
aam
stos
shr
add
and
sub
hlt
dec
jnp
and
jp
icebp
ds
das
xchg
sub
cmc
push
jno
push
dec
dec
sbb
test
pop
mov
mov
pop
push
(bad)
and
arpl
mov
sbb
lss
movs
xchg
mov
in
test
push
(bad)
inc
add
mov
fcmovnu
pop
div
test
and
test
aad
mov
push
cwde
adc
jge
adc
popf
test
jno
call
sub
and
jb
xchg
pop
cmp
fidiv
xchg
mov
sar
and
lods
or
and
pop
mov
and
jg
loopne
jmp
xor
inc
(bad)
push
es
jmp
pushf
and
mov
movs
pop
hlt
dec
mov
xchg
std
test
(bad)
cmp
mov
xchg
iret
add
enter
sbb
xchg
jno
add
push
add
jle
sbb
push
mov
mov
add
adc
(bad)
enter
fldcw
les
adc
je
test
and
cmc
xchg
test
ins
xchg
dec
mov
dec
and
mov
sti
cmp
leave
fdiv
sub
add
sti
cmps
or
in
xor
xchg
outs
je
aam
out
aas
fbld
out
in
popa
dec
lds
test
sahf
cmps
rcr
mov
jp
and
and
fcos
inc
mov
sar
xor
push
add
int
leave
mul
sub
jp
loop
sbb
in
mov
pop
jmp
dec
aas
pop
ins
jecxz
and
jmp
scas
in
mov
xchg
hlt
jmp
dec
and
mov
pop
jecxz
andps
in
dec
mov
push
adc
es
adc
sub
pop
xlat
dec
pop
popf
mov
movs
test
mov
in
clc
xchg
xchg
mov
aaa
and
scas
xchg
scas
sub
test
ins
and
add
mov
push
in
mov
cmp
pop
mov
sub
add
int3
pushf
xchg
xchg
push
mov
xor
fnsave
(bad)
out
xchg
jbe
and
or
cmp
xchg
cmps
fistp
xor
xor
push
xchg
push
popf
and
bound
(bad)
lahf
adc
pop
scas
or
rol
mov
mov
push
cmp
xor
daa
aas
imul
pop
xchg
pop
pop
push
or
dec
je
mov
push
jg
push
dec
sbb
das
sub
jae
mov
in
sub
dec
test
add
fistp
out
scas
lahf
cmps
pop
div
scas
push
pusha
fwait
popf
jno
fsubr
jmp
mov
mov
mov
sub
imul
cmp
sub
pop
pop
and
test
cmp
fnstenv
add
inc
aas
cmp
clc
(bad)
push
jne
test
jle
adc
out
add
test
cmp
movs
movs
inc
test
aam
xchg
je
adc
lea
cmp
mov
(bad)
pop
push
mov
sbb
or
fs
mov
shr
cwde
sbb
jnp
(bad)
dec
je
or
xchg
imul
cmps
sub
out
mov
scas
addr16
adc
sub
xchg
jl
daa
jnp
lods
in
clc
sahf
ss
pop
lods
dec
lock
xor
push
arpl
neg
xchg
test
ja
inc
adc
sub
je
push
lock
push
xor
std
xchg
inc
add
or
mov
sub
xor
inc
frstor
pusha
pop
xchg
xchg
aas
outs
add
pop
pushf
inc
mov
bnd
push
cdq
(bad)
rol
jns
mov
cmp
add
push
movs
pop
jmp
rcl
xchg
jp
push
sbb
mov
sbb
pusha
or
xchg
jmp
popa
or
movs
mov
add
sbb
mov
cmp
js
inc
adc
mov
(bad)
mov
cmp
cli
fiadd
push
adc
push
push
add
cmp
icebp
sbb
lods
(bad)
mov
(bad)
mov
push
rol
pop
ins
sub
mov
sub
inc
dec
add
gs
adc
push
int
mov
lea
jmp
int
es
sbb
mov
fidiv
mov
outs
pop
shl
xor
and
push
movs
inc
mov
ins
clc
cmp
cmp
inc
jg
lahf
lahf
mov
pop
dec
ins
or
lock
imul
xchg
daa
mov
xchg
retf
rcr
test
add
shl
add
popf
in
inc
jle
ficomp
pop
into
mov
pop
ret
add
push
and
xor
cmp
jmp
dec
mov
mov
rol
xor
mov
mov
sar
int3
dec
jle
or
push
xchg
sbb
arpl
push
xchg
and
mov
pop
addr16
sbb
test
(bad)
pop
repz
mov
push
push
dec
fldenv
mov
out
inc
xlat
xor
out
jp
xor
cmp
aas
add
mov
push
daa
sbb
(bad)
shr
cmp
shr
inc
shl
sbb
sbb
inc
dec
or
jmp
ins
and
shl
xchg
push
jno
out
pop
lahf
ss
mov
stc
adc
ror
mov
xchg
mov
and
aas
lods
int
sub
pop
mov
shr
or
sbb
jl
les
mov
cmp
xor
xor
xor
cmc
rol
inc
cwde
dec
push
jmp
sbb
and
push
mov
out
test
mov
arpl
add
call
scas
xor
or
fucomi
jnp
lahf
and
test
cmc
test
dec
jmp
add
add
sbb
shl
xchg
and
arpl
out
or
mov
dec
in
loopne
aam
aaa
fsubr
dec
fs
outs
mov
adc
rol
jmp
aam
loope
inc
mov
adc
jmp
sub
adc
mov
xor
mul
movs
lock
adc
(bad)
or
ret
daa
pop
mov
pusha
mov
jmp
mov
mov
not
imul
ret
scas
push
sub
dec
pop
movs
sbb
nop
std
out
push
shr
cmps
add
daa
xchg
jmp
arpl
adc
pmaxub
add
mov
retf
add
jmp
es
mov
loop
push
les
loope
test
mov
jmp
(bad)
(bad)
sbb
sbb
xor
mov
mov
jne
cmp
dec
adc
adc
push
cwde
cmc
pop
push
jne
xchg
loop
out
test
jns
cwde
cmps
sar
(bad)
push
or
leave
mov
cmps
adc
in
mov
out
adc
or
imul
push
mov
xchg
loopne
add
ins
es
xchg
ror
mov
ds
pop
sbb
push
popf
mov
fpatan
add
dec
out
fidivr
bound
adc
aaa
mov
loop
xchg
push
lods
data16
int
je
cmps
mov
mov
les
sbb
pop
mov
inc
sbb
mov
in
out
mov
mov
fadd
(bad)
mov
inc
stc
addr16
push
je
cli
mov
pop
add
pop
adc
or
jns
ret
leave
adc
lods
push
leave
cmp
mov
loop
sbb
xchg
mov
je
daa
or
xchg
fnstcw
jns
movs
sub
adc
mov
in
jmp
gs
das
and
test
and
ja
pushf
lea
test
or
mov
pop
outs
fdivp
ds
(bad)
pop
cs
lds
std
adc
mov
out
push
stos
in
pop
int
(bad)
dec
(bad)
adc
and
mov
xchg
add
inc
shr
icebp
lds
mov
aaa
mov
xor
add
aaa
xchg
add
jp
pop
fs
pop
xor
add
sub
retf
mov
cmp
mov
shl
xchg
mov
into
sbb
(bad)
xor
stos
and
mov
pop
mov
ds
in
xchg
mov
enter
out
sub
pop
push
xchg
pop
scas
aas
loop
in
loope
ds
nop
sub
add
xchg
pop
dec
dec
jg
cmc
add
lods
inc
(bad)
push
jle
enter
mov
push
xchg
das
inc
sub
pop
push
jb
xor
push
out
xor
pop
jge
stc
xlat
sub
scas
xlat
ja
bound
in
icebp
jo
pop
cmp
data16
add
adc
mov
xor
xchg
xor
jae
ins
out
out
jl
push
(bad)
push
mov
jl
push
ret
or
mov
fisttp
add
dec
push
cs
dec
dec
inc
js
sub
enter
test
data16
das
dec
cld
cmp
ror
pushf
mov
push
inc
mov
xor
mov
sbb
xor
cmp
mov
push
not
cmc
xchg
dec
hlt
pop
call
adc
out
les
xor
enter
mov
mov
ror
mov
push
cli
movs
or
sub
mul
ins
int
jle
push
mov
aad
xchg
add
sub
adc
lea
jb
es
call
push
and
dec
fadd
mov
or
ss
push
add
in
or
mov
adc
cmps
sahf
xor
adc
adc
ret
rcl
mov
and
(bad)
enter
ror
xor
dec
or
pusha
lods
jg
pop
int
ins
iret
and
repz
lods
mov
sti
cmps
(bad)
scas
std
push
push
fist
out
(bad)
ins
ret
jmp
mov
or
enter
lahf
jmp
scas
vshufpd
dec
(bad)
repnz
sbb
adc
and
mov
inc
mov
pop
xchg
movs
jl
or
push
pop
call
popf
xor
ret
push
sbb
cli
test
mov
lods
and
mov
mov
hlt
adc
gs
sbb
les
lahf
or
dec
mov
das
sbb
retf
sub
dec
leave
stos
aas
test
pop
pop
loopne
xchg
mov
and
jae
and
(bad)
pop
and
xchg
xchg
xlat
mov
xor
mov
jle
(bad)
adc
sar
shl
test
dec
test
sub
jmp
or
xchg
aaa
cli
clc
dec
rol
jbe
mov
sub
leave
jno
sub
pusha
gs
mov
mov
add
(bad)
test
xlat
ja
in
ror
cmp
inc
ret
or
inc
pop
aam
clc
ss
sbb
ins
call
cmps
cmp
or
popa
rcr
gs
pop
add
loopne
fcmovu
ins
inc
(bad)
jne
pop
movs
cdq
pushf
or
pop
cmc
push
sub
adc
dec
add
ds
push
add
sub
xor
mov
iret
mov
je
neg
sbb
or
dec
ret
sbb
and
jl
lods
xor
shl
push
fidivr
test
call
cs
add
(bad)
jae
mov
icebp
dec
cmp
mov
jbe
repz
mov
repz
scas
fnstcw
es
loope
ffreep
loop
push
pop
mov
movs
mov
cmp
rol
jns
in
shl
inc
dec
rcl
retf
dec
push
test
inc
push
jnp
jnp
push
pop
rol
out
dec
dec
stos
out
stos
repnz
mov
test
in
push
icebp
pop
cmps
mov
stos
mov
mov
jmp
loop
xor
inc
call
icebp
mov
adc
(bad)
out
adc
adc
fdivr
xor
out
mul
mov
stos
call
adc
call
xor
mov
sbb
lods
cli
stos
and
sbb
sbb
js
or
seto
inc
in
call
in
jmp
dec
es
jns
imul
and
stc
dec
loopne
adc
fist
xchg
iret
aaa
repnz
je
das
not
inc
xor
js
sub
add
test
or
(bad)
dec
sbb
xor
inc
daa
sub
push
add
pop
mov
in
mov
cmp
in
pop
das
fdivrp
stos
pop
leave
call
(bad)
loopne
das
ins
shl
push
ds
jle
xor
xchg
fs
cmp
dec
arpl
ins
push
call
xor
mov
adc
inc
cmp
ja
div
mov
pusha
add
outs
pop
xchg
or
(bad)
lock
sahf
stos
xor
sbb
and
mov
leave
lods
mov
jb
mov
push
mov
adc
inc
js
in
mov
push
dec
movs
push
mov
sub
fadd
mov
jmp
jnp
mov
push
movs
imul
sahf
pop
and
cmp
aad
adc
(bad)
(bad)
sbb
ss
pop
inc
jg
mov
pusha
inc
jmp
mov
scas
pop
(bad)
js
fcmovnb
xor
xchg
in
or
sub
mov
dec
sub
dec
mov
xchg
aas
xchg
loopne
xor
dec
xor
add
out
mov
pop
jmp
mov
or
mov
(bad)
mov
pushf
(bad)
aad
das
fs
xor
jnp
adc
sbb
iret
ficomp
sbb
cmp
sar
sbb
in
test
push
and
push
int3
jae
ret
call
add
xor
mov
cmps
js
mov
(bad)
mov
cmps
fild
pushf
inc
jp
pop
or
push
inc
push
sub
bound
pop
in
sbb
les
jecxz
xor
sbb
jns
sahf
pusha
imul
xchg
push
sub
pop
cld
xchg
add
fldenv
pushf
pop
cmp
xor
push
inc
aad
jmp
xchg
jg
ret
mul
call
cvtps2pi
pop
mov
icebp
and
mov
jne
mov
or
sbb
(bad)
push
sub
(bad)
sub
retf
repz
cmps
aam
in
sbb
stos
aam
imul
das
mul
mov
aas
jmp
nop
jmp
or
das
shl
or
jns
xor
mov
js
jmp
outs
arpl
and
push
cmp
pop
icebp
fisub
sub
comiss
(bad)
sti
dec
daa
mov
idiv
adc
jmp
mov
mov
push
loopne
add
fucom
nop
mov
jle
cmp
aaa
out
inc
pop
sub
(bad)
cmps
adc
pusha
mov
out
adc
cmps
xchg
cmp
cli
push
stos
clc
dec
mov
sub
xchg
adc
or
push
pop
fwait
mov
enter
and
sub
pushf
in
repnz
push
inc
cmc
xor
cmp
fstp
or
mov
mov
mov
ret
(bad)
lods
cmp
adc
push
shl
sahf
inc
inc
daa
xlat
xor
test
idiv
call
int
(bad)
mov
push
inc
hlt
push
out
(bad)
jae
outs
xchg
add
test
xor
daa
in
fisub
mov
(bad)
jmp
sbb
loope
adc
add
scas
ja
or
dec
dec
out
fs
in
mov
rcr
jecxz
lods
xchg
push
into
out
xor
add
ret
movs
sbb
push
int3
push
adc
mov
add
mov
jnp
ror
xor
aas
loop
out
dec
repnz
ficomp
xchg
mov
nop
inc
mov
sbb
rcl
sbb
sti
xchg
sub
ins
push
jno
repz
test
in
aad
push
cmp
pop
test
and
jmp
fmul
jno
xchg
mov
xlat
div
xchg
rol
cmp
scas
pushf
popa
mov
or
inc
loop
push
mov
push
pusha
sub
jbe
repz
pop
pop
push
xor
aad
dec
pop
xchg
cwde
cmp
xor
dec
cs
aaa
js
jmp
adc
dec
nop
adc
xchg
dec
call
fwait
adc
call
xor
mov
ds
add
sbb
retf
jle
sub
cld
and
pop
sub
in
ins
bound
dec
fistp
cs
inc
(bad)
and
stos
loop
sbb
test
test
or
xchg
(bad)
mov
mov
pop
test
leave
sbb
pop
daa
sbb
aad
xchg
daa
jae
mov
push
jmp
xchg
lea
fcomp
dec
cmc
jne
cli
js
sub
dec
dec
(bad)
out
jmp
sbb
scas
jae
fwait
jecxz
outs
and
ret
push
pop
or
mov
repz
sahf
cmp
(bad)
leave
push
imul
pop
fisub
mov
push
stc
rol
cdq
dec
fldcw
push
push
mov
add
fwait
inc
imul
mov
jns
sub
test
mov
ds
out
fst
xchg
mov
in
dec
push
pop
inc
jo
int3
adc
inc
cmp
add
or
push
or
inc
cmp
dec
mov
pop
jp
out
dec
cmc
ror
mov
jecxz
add
sbb
inc
into
hlt
fmul
pop
jg
in
hlt
cld
and
icebp
jp
cmp
inc
dec
fadd
lods
jmp
and
inc
sbb
jnp
pop
les
and
call
int3
sub
inc
cs
es
mov
adc
je
mov
dec
fisubr
adc
push
mov
enter
cmp
mov
push
nop
add
inc
into
fisubr
popf
mov
push
push
xchg
push
xchg
cmps
adc
mov
outs
mov
or
(bad)
fs
or
enter
xchg
pop
xlat
jmp
retf
test
test
repz
cwde
outs
adc
ins
and
test
pop
mov
xchg
dec
ins
std
sub
xor
and
mov
mov
icebp
push
mov
stos
mov
retf
sub
adc
jge
bound
or
out
adc
ret
pop
pop
mov
cs
rol
push
pop
dec
jecxz
push
push
sbb
sahf
ins
push
arpl
movs
pop
inc
jmp
xchg
cmp
(bad)
test
dec
adc
adc
repz
dec
xchg
fsub
ud1
ds
adc
shl
out
mov
rcl
pop
movs
sti
lods
rcl
sub
movs
and
sbb
xchg
inc
aaa
stos
int3
fcomp
sub
movs
xchg
scas
xchg
outs
sbb
ins
mov
dec
jge
jnp
cli
cmps
scas
or
je
mov
mov
jge
(bad)
mov
in
push
es
mov
out
rol
mov
outs
mov
pop
xchg
ret
das
sbb
mov
adc
inc
test
mov
push
ret
(bad)
pop
test
jmp
ja
call
retf
add
sub
pusha
sahf
imul
aam
or
inc
mov
or
loop
outs
jno
ret
inc
and
pop
in
mov
pop
dec
pop
sbb
mov
jnp
xacquire
mov
lahf
std
ja
aad
shl
pop
fcmovu
add
mov
outs
fisubr
data16
cli
mov
mov
xor
out
sahf
mov
xchg
cmp
add
arpl
dec
shr
stos
mov
add
add
xchg
mov
xor
fs
jnp
nop
and
shr
mov
dec
lock
xor
shl
or
pop
(bad)
rcr
push
adc
inc
jmp
pop
mov
pop
rcr
mov
jmp
int
out
and
add
repnz
popa
mov
ficom
jecxz
and
or
xor
adc
rcl
cld
(bad)
dec
cmp
retf
cmp
fdivr
xchg
push
jo
in
jecxz
lahf
jge
bnd
jns
jo
xor
cmps
lods
dec
sbb
das
inc
add
xchg
rol
je
(bad)
hlt
repnz
hlt
test
mov
popf
inc
ret
call
fldenv
ret
scas
fmulp
pusha
cmps
sti
in
sbb
jg
mov
rcl
push
(bad)
pop
mov
(bad)
in
fcomip
shr
pop
jecxz
push
xor
mov
sbb
pop
push
cmps
jecxz
in
push
in
jecxz
mov
push
ds
test
test
aaa
mov
jl
imul
jge
push
mov
sbb
je
sbb
or
xchg
xor
cmc
call
aas
out
sbb
test
and
push
mov
test
out
rol
sbb
mov
rcr
shl
rol
cmp
and
out
(bad)
mov
lods
push
cs
jmp
pop
out
xlat
mov
jmp
adc
int
mov
dec
rcr
loop
cmps
cwde
lock
in
mov
xor
out
inc
nop
jnp
mov
adc
out
sti
call
jb
sbb
fistp
popf
push
xor
adc
test
mov
ret
in
xor
add
sbb
mov
inc
mov
and
adc
mov
cmp
sbb
adc
popf
into
dec
mov
jo
idiv
cmp
jmp
fld
inc
mov
int
mov
in
mov
fistp
shl
cmp
icebp
fistp
jge
jp
add
xlat
xchg
xchg
vpsllq
outs
loopne
outs
pop
jne
mov
inc
(bad)
cmp
xlat
xchg
fild
cmp
mov
test
rol
aas
imul
sar
or
fstp
aam
cmp
rol
mov
push
fs
sub
jno
add
push
jp
dec
lods
std
push
js
aas
loopne
inc
js
sub
fcomp
inc
mov
shl
cmps
mov
push
hlt
push
dec
nop
rcr
inc
xchg
xor
mov
dec
add
jo
jae
jno
ds
or
fdivrp
mov
inc
mov
jnp
stos
fisttp
pusha
cmp
add
out
iret
test
int3
inc
in
push
inc
shl
or
or
movs
aaa
std
bound
mov
enter
cmp
aaa
(bad)
mov
sub
fs
stos
push
push
ret
movs
adc
jmp
jnp
je
(bad)
not
lods
push
data16
jle
sti
cmp
push
test
inc
out
test
sub
pop
stos
or
int3
xchg
ins
sub
cli
mov
lods
subps
test
push
or
jmp
cmp
inc
sahf
jnp
inc
aaa
cmps
fucom
mov
dec
xor
cli
xchg
add
lods
ins
sbb
int
cld
adc
call
adc
and
push
aad
jp
sbb
and
fist
jmp
cmp
push
lods
jno
mov
retf
jo
ins
xchg
aam
xor
andnps
cmc
repnz
daa
or
mov
movs
clc
jno
fld
(bad)
sub
dec
clc
out
in
cmovp
idiv
cmps
icebp
rcl
or
fldenv
pop
and
or
pushf
aas
(bad)
xor
xchg
repnz
(bad)
push
push
adc
adc
jno
iret
add
in
ins
and
mov
xchg
jbe
cli
js
daa
pop
mov
jmp
push
mov
das
out
adc
fidiv
jge
push
loope
inc
push
je
js
js
mov
push
mov
sub
into
jbe
lock
jmp
jnp
inc
loope
sbb
call
adc
mov
lds
sub
jae
mov
cdq
cmp
adc
in
xor
add
fcomp
add
imul
sub
sub
push
aaa
(bad)
push
xchg
add
sbb
pshufw
in
shl
mov
cwde
jns
adc
sti
adc
ja
mov
fisub
cdq
out
or
xchg
movhps
dec
aam
sub
cmp
out
push
push
inc
mov
into
jo
test
pop
fwait
push
push
lock
xchg
scas
or
icebp
dec
nop
(bad)
(bad)
fisub
pop
dec
mov
dec
dec
adc
sub
pop
cmp
js
jnp
dec
xor
add
cwde
adc
add
aad
pop
mov
sbb
xchg
ins
dec
adc
pushf
mov
mov
call
adc
mov
retf
lock
sti
add
push
xor
mov
cld
fwait
cmp
pop
out
addr16
adc
in
outs
mov
sbb
ins
jb
scas
in
sub
lock
sbb
push
push
adc
retf
jne
jne
imul
out
mov
lahf
ret
mov
pop
jbe
and
sub
mov
fisub
setp
aaa
mov
dec
cmp
push
div
sbb
mov
je
sahf
fld
pusha
fiadd
push
pop
and
jecxz
xor
inc
sahf
push
mov
pop
and
out
popa
xchg
push
or
mov
std
dec
sub
jb
test
mov
ins
and
adc
js
arpl
jb
out
repnz
das
mov
(bad)
xchg
mov
cmc
lods
xor
pushf
xor
or
and
mov
in
and
sbb
mov
sub
xor
sub
stc
push
rcr
jns
icebp
sbb
jg
mov
xor
mov
stos
and
test
fcom
lods
mov
push
mov
xor
(bad)
xchg
adc
ret
iret
cld
dec
xchg
xchg
xor
xchg
sub
test
and
sub
xlat
(bad)
jnp
sar
inc
cmps
mov
les
or
test
fwait
cli
jnp
sbb
aaa
ret
add
mov
ja
cld
inc
jl
jmp
and
jp
sbb
xor
push
popa
aam
scas
(bad)
in
out
int3
jnp
inc
xchg
ss
cmp
call
fmul
sub
jae
pusha
movs
cmps
mov
(bad)
(bad)
fwait
mov
mov
ins
daa
add
std
xlat
mov
nop
push
movs
ins
shl
and
adc
xchg
mov
shl
push
mov
inc
mov
push
pop
in
inc
and
cmp
mov
xchg
mov
adc
xchg
inc
fcom
fs
mov
(bad)
imul
jmp
add
mov
push
jl
icebp
cdq
into
mov
pop
xor
add
(bad)
test
lds
inc
lods
int
jmp
(bad)
ds
inc
inc
add
jl
mov
push
pop
dec
jg
test
loop
fcomp
out
fbstp
cmp
mov
movs
xchg
out
mov
out
sbb
daa
cmp
ins
sar
pop
fs
(bad)
pop
sbb
mov
test
std
dec
cmp
and
shl
dec
(bad)
leave
jne
les
pop
dec
ins
xchg
dec
(bad)
loope
lea
fimul
std
repz
cdq
fsub
lahf
cmc
das
leave
cmps
sub
sub
test
adc
and
cmp
adc
jbe
in
mov
mov
popf
mov
ds
jge
in
fs
frstor
xlat
jo
xchg
(bad)
pop
mov
pop
push
mov
int
mul
mov
icebp
pusha
sbb
mov
lods
leave
jmp
stos
outs
xchg
adc
loopne
ins
push
out
jg
arpl
dec
ret
mov
push
mov
pop
cmp
inc
sbb
lods
jno
cmp
mov
push
sbb
mov
xchg
inc
mov
mov
mov
xchg
mov
jp
imul
mov
jo
push
(bad)
mov
cdq
imul
int
(bad)
pop
aaa
xchg
test
ficomp
lea
lock
cmp
inc
mov
shl
xchg
and
mov
pop
ror
repnz
sti
pop
push
mov
inc
addr16
clc
jbe
fnstcw
cmps
dec
push
fnstsw
xchg
jo
into
fst
xchg
movs
xchg
ds
jl
scas
ret
xchg
jmp
sub
cli
repnz
(bad)
jmp
fild
shl
xlat
mov
imul
mov
mov
sub
cmp
adc
add
dec
clc
loopne
and
sub
mov
mov
rcl
cwde
pop
lods
call
outs
pop
push
jno
(bad)
cmc
jg
dec
out
mov
pop
int3
xor
lods
bound
out
aas
push
inc
xor
fnsetpm(287
ins
and
xchg
shl
(bad)
pop
push
leave
sbb
cmps
js
or
lods
(bad)
daa
in
inc
push
or
lods
add
aad
daa
xor
imul
and
mov
mov
sub
mov
adc
mov
sbb
ins
dec
jge
sbb
push
std
int
movs
je
loopne
int3
sub
mov
pusha
xor
ror
mov
xchg
and
int3
adc
dec
jg
popf
popf
mov
ins
(bad)
repnz
(bad)
ss
mov
addr16
test
jb
sti
inc
imul
mov
loop
mul
mov
or
xchg
outs
stos
jecxz
mov
xchg
xchg
mov
ffree
mov
xchg
cdq
inc
fistp
push
jmp
dec
(bad)
jge
sbb
xor
sbb
jle
mov
imul
xor
mov
popa
data16
cli
adc
nop
into
mov
inc
and
sbb
js
mov
outs
dec
cwde
add
mov
cmp
ret
adc
xchg
mov
or
adc
ss
jp
mov
mov
jo
or
(bad)
dec
jb
adc
repz
je
sbb
ficom
cld
pop
and
lahf
call
jge
jg
lods
xchg
mov
or
inc
dec
out
jmp
push
(bad)
jecxz
enter
inc
cld
push
ror
call
xchg
outs
xchg
leave
clc
cmp
shl
enter
test
cmps
jne
inc
loopne
sar
mov
lahf
icebp
cmps
sbb
es
adc
test
pop
fmulp
jl
in
xchg
sub
dec
or
into
leave
out
mov
fcom
stos
sub
in
stos
rcr
sbb
arpl
xor
mov
push
inc
out
popa
cmc
or
aas
pop
cmp
inc
jle
cs
jo
sbb
mov
jae
repnz
sbb
lahf
adc
(bad)
mov
cmps
pop
rol
adc
pop
sub
cmp
lods
(bad)
mov
ficomp
xor
test
mov
jbe
or
cmps
lods
mov
adc
aam
ds
fstp
xor
xchg
test
and
mov
add
std
arpl
mov
add
ss
lods
mov
push
fwait
and
outs
ss
and
repnz
xchg
xor
and
mov
jae
push
jle
push
cmp
dec
int
add
(bad)
jo
loope
adc
pop
rcr
fisttp
sbb
and
push
add
lea
mov
loope
or
or
out
push
mov
pushf
jnp
call
jge
mov
mov
sub
sub
shr
inc
sti
pop
pop
repnz
imul
jb
shl
xchg
hlt
ja
mov
jmp
in
sbb
jns
push
leave
cmp
push
outs
push
fidivr
pop
push
in
mov
lods
lock
repz
adc
retf
into
lods
stos
pop
sbb
jae
lods
inc
retf
jae
jns
adc
xchg
(bad)
xor
sub
js
push
jle
movs
sbb
sub
xchg
jge
aad
dec
in
jle
xchg
xchg
shl
jle
jmp
cs
test
and
or
sub
jae
and
cwde
sbb
xor
retf
adc
daa
loope
int3
push
scas
xor
retf
pop
push
xor
mov
arpl
and
aam
fisttp
data16
aad
jne
mov
pop
cmc
jb
pop
rcr
mov
loopne
xchg
shrd
jecxz
xor
jo
mov
inc
cmp
xchg
nop
mov
jecxz
retf
enter
ins
xchg
mov
fisubr
popa
fiadd
fidiv
pop
sar
mov
jae
call
mov
repnz
popf
stos
sbb
sbb
in
add
xchg
lea
ret
mov
inc
aam
mov
bound
sub
and
xchg
or
jmp
sbb
addr16
sbb
push
fnsetpm(287
jecxz
lds
lahf
jnp
retf
add
les
sar
xchg
adc
mov
mov
cmp
mov
(bad)
jp
js
and
dec
xchg
loop
adc
movs
imul
addr16
sub
adc
mov
imul
sub
sbb
lods
pop
shl
mov
in
jmp
js
add
xchg
fbstp
sbb
mov
rcl
cmp
xor
pop
xchg
adc
sub
clc
mov
(bad)
jnp
sub
stos
in
fiadd
call
jns
leave
mov
dec
jle
neg
js
xor
bound
aaa
jmp
cmp
mov
xor
mov
lahf
cwde
(bad)
aad
scas
loopne
mov
popf
add
fs
sti
lods
dec
mov
icebp
dec
mov
adc
push
out
inc
bound
retf
mov
adc
pop
pop
add
pop
jo
(bad)
jg
xor
imul
enter
mov
enter
movs
cli
(bad)
jo
mov
cmp
cmp
jl
cwde
cmp
lods
mov
fsubr
clc
or
test
stc
xor
out
ins
push
shr
push
cmp
pop
jne
sahf
cs
fdiv
sbb
mov
lahf
scas
dec
(bad)
adc
dec
cmp
verw
cmp
out
out
mov
sbb
mov
mov
sub
adc
aas
cli
mov
pop
cmps
aas
sti
jbe
inc
xor
mov
fist
cmp
inc
xchg
adc
xor
mov
fldenv
dec
je
idiv
dec
mov
mov
push
jns
xor
clc
or
pop
cs
rcr
inc
(bad)
lea
jo
js
pop
cmps
add
dec
dec
adc
(bad)
sub
dec
movs
mov
sub
mov
ret
xlat
add
or
sbb
pop
pop
stos
pop
add
push
imul
out
sub
mov
ds
xchg
adc
and
rcl
lahf
fcomp
mov
or
test
mov
pusha
mov
jns
pop
popf
scas
stc
push
movs
mov
mov
dec
lock
inc
or
push
call
out
out
test
ds
adc
push
xchg
ret
sub
mov
icebp
data16
mov
pop
sub
mov
jbe
rcl
jno
pop
push
mov
ret
mov
or
jecxz
mov
jne
sub
daa
das
sub
add
xor
sub
das
not
fs
cmp
pop
cmp
pop
inc
in
dec
xor
add
cmp
dec
fs
sub
(bad)
xor
mov
mov
fstp
cmp
cmp
or
out
cld
xor
cmp
sbb
or
test
or
and
fldz
aam
mov
cmp
dec
ror
sbb
sub
jle
in
bound
jmp
popf
sub
mov
xor
in
loope
enter
adc
dec
or
adc
in
inc
mov
fcom
xchg
mov
adc
and
lods
and
push
shr
fsubrp
xor
jmp
mov
sub
cmp
jecxz
rcl
sbb
int
adc
sbb
cmc
int3
cmps
sahf
jb
jns
mov
lock
mov
xlat
mov
mov
push
test
push
retf
aam
add
mov
mov
mov
jl
leave
cmp
lock
enter
data16
xchg
fcom
sub
sub
jmp
sbb
dec
adc
mov
je
lods
loope
stc
movs
cmp
repnz
cmp
lods
xor
and
xchg
or
mov
sti
fnstenv
addr16
mov
movs
je
cmp
sub
mov
dec
mov
out
addr16
mov
push
fisttp
int3
scas
xchg
mov
fist
or
add
mov
sti
aas
jne
std
mov
jge
or
gs
scas
jns
sbb
and
imul
or
lds
shr
fisubr
icebp
and
fisub
fsub
push
fnstsw
loopne
imul
inc
push
mov
adc
test
fnstsw
das
mov
push
repnz
je
repnz
lock
mov
movs
dec
leave
int
out
push
sar
and
scas
mov
push
sub
shr
push
inc
in
outs
push
xor
cwde
test
mov
aaa
rcr
movs
not
xchg
mov
idiv
jle
mov
clc
jne
daa
call
inc
sub
pushf
movs
ins
cmp
xor
pop
inc
sbb
ds
xor
pop
ins
pop
cmp
sbb
pusha
mov
test
test
sti
sub
scas
(bad)
test
repz
add
dec
cmp
sbb
lods
retf
cli
mov
repz
ja
push
adc
cmp
aam
mov
jecxz
(bad)
push
call
xchg
cs
retf
(bad)
mov
fisub
icebp
push
push
iret
xor
(bad)
adc
mov
scas
aas
mov
and
cmp
pop
(bad)
retf
lock
or
fyl2xp1
test
sub
lea
push
clc
mov
jg
push
ds
fwait
push
cdq
push
sbb
movs
dec
pop
mov
jp
mov
jl
mov
or
fist
pop
pop
add
lods
stos
ja
fistp
movs
popf
pop
or
stc
out
sbb
and
aaa
inc
imul
xchg
test
pop
jnp
lahf
les
ja
ja
add
jl
inc
outs
jo
scas
mov
loope
lock
mov
mov
pop
inc
cmp
rcl
sbb
cs
mov
mov
ja
fmul
(bad)
dec
mov
cdq
jp
push
push
xchg
fdivr
retf
push
inc
and
fwait
test
add
arpl
jb
adc
lea
(bad)
push
lds
nop
xchg
jg
imul
mov
pop
fidivr
mov
out
inc
fldenv
int3
fst
stos
sub
pop
fst
and
icebp
sbb
bound
jae
xor
imul
lahf
inc
push
test
icebp
adc
inc
ds
test
mov
aas
push
and
jcxz
mov
das
jecxz
push
imul
push
push
xor
mov
cmp
mov
int3
mov
out
xor
fld
cmps
mov
xrelease
int
idiv
mov
lea
imul
inc
add
sub
mov
movzx
add
sub
add
mov
add
xor
imul
add
mov
or
xor
inc
mov
mov
imul
call
inc
add
add
mov
sub
or
add
sub
mov
movzx
add
movsx
add
mov
sub
inc
dec
mov
mov
pop
add
add
ret
movzx
mov
mov
add
push
sub
mov
movzx
mov
push
mov
mov
sub
dec
push
sub
push
sub
push
call
mov
add
push
inc
mov
xor
sub
xor
lea
mov
add
sub
add
add
mov
mov
dec
xor
and
sub
mov
sub
add
sub
add
mov
sub
sub
xor
add
mov
mov
add
and
test
je
xor
mov
mov
mov
add
and
movzx
sub
mov
mov
add
xor
add
add
mov
xor
repnz
add
dec
add
add
jmp
mov
sub
sub
movzx
mov
mov
or
sub
dec
sub
mov
dec
dec
add
add
lea
xor
dec
pop
sub
mov
pop
jmp
push
lea
xor
add
add
add
mov
push
mov
push
sub
push
add
sub
push
mov
mov
push
or
or
add
call
sub
lea
inc
jmp
sub
sub
mov
and
mov
mov
mov
mov
and
sub
mov
movsx
mov
xor
mov
push
movzx
add
push
sub
jmp
add
mov
xor
add
add
pop
mov
pop
dec
pop
sub
add
add
mov
inc
sub
add
add
add
jmp
push
push
mov
inc
push
push
sub
sub
push
add
push
mov
mov
add
add
inc
add
mov
dec
mov
inc
push
add
sub
xor
mov
push
sub
push
add
sub
push
add
mov
add
sub
inc
sub
call
mov
add
sub
xor
xor
mov
mov
jmp
push
and
push
movsx
mov
sub
inc
je
add
dec
mov
mov
add
inc
mov
sub
mov
mov
mov
lea
movzx
sub
cmp
jne
add
add
mov
lea
add
sub
movsx
mov
inc
add
lea
jmp
mov
push
add
mov
dec
movzx
test
je
mov
mov
add
add
inc
sub
mov
repnz
add
dec
pop
movsx
jmp
add
pop
mov
sub
or
sub
movzx
mov
mov
mov
inc
add
inc
dec
jne
movsx
pop
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
mov
mov
mov
inc
sub
sub
pop
add
add
pop
mov
cmp
jne
and
push
xor
dec
mov
mov
mov
push
sub
push
sub
xor
add
xor
add
mov
xor
sub
push
xor
add
xor
add
mov
mov
mov
sub
movzx
sub
add
mov
mov
add
inc
add
sub
inc
movzx
add
lea
inc
add
inc
mov
add
mov
cmp
jb
mov
xor
inc
add
lea
add
add
mov
mov
imul
xor
sub
mov
mov
sub
and
add
mov
lea
movzx
xor
inc
movzx
mov
inc
mov
mov
xor
add
dec
inc
mov
mov
mov
cmp
jb
sub
xor
imul
add
add
lea
add
inc
inc
mov
xor
movsx
sub
xor
add
add
pop
mov
test
jbe
dec
sub
dec
mov
mov
add
sub
push
inc
sub
inc
mov
pop
sub
or
xor
mov
push
mov
add
and
sub
dec
mov
mov
mov
movzx
sub
dec
add
sub
mov
and
mov
mov
sub
sub
mov
xor
mov
mov
pop
imul
or
dec
sub
sub
mov
mov
nop
jne
add
mov
dec
sub
add
lea
add
add
inc
mov
mov
lea
add
dec
dec
mov
mov
mov
xor
test
jbe
and
sub
add
mov
lea
or
xor
and
mov
mov
push
movsx
add
xor
sub
sub
pop
mov
xor
add
mov
inc
sub
movzx
mov
mov
add
imul
add
and
inc
add
mov
mov
movzx
dec
mov
add
dec
mov
mov
mov
movzx
movsx
add
sub
movzx
and
add
lea
movzx
and
add
xor
imul
sub
inc
lea
add
dec
sub
sub
mov
dec
jne
jmp
mov
add
sub
add
mov
sub
mov
lea
mov
lea
sub
mov
mov
mov
mov
call
mov
xor
add
mov
mov
lea
add
mov
mov
mov
add
dec
add
mov
mov
mov
inc
lea
mov
mov
add
add
inc
mov
mov
mov
mov
lea
mov
sub
movzx
lea
mov
mov
add
movsx
call
mov
mov
call
xor
sub
dec
mov
call
mov
add
push
inc
inc
add
lea
dec
movzx
sub
add
mov
add
add
add
call
add
mov
pop
movsx
add
add
pop
add
add
pop
lea
pop
or
add
pop
sub
pop
pop
mov
push
push
push
jmp
push
sub
push
mov
push
add
sub
push
xor
mov
push
mov
sub
dec
push
sub
jmp
push
sub
xor
mov
push
inc
add
inc
add
mov
push
xor
add
sub
add
call
mov
movsx
dec
add
pop
ret
push
call
sub
push
call
call
mov
add
pop
and
dec
sub
add
mov
test
je
sub
sub
add
sub
mov
lea
and
sub
test
je
call
inc
int3
sub
mov
sub
add
add
sub
mov
sub
dec
sub
mov
mov
movzx
add
add
mov
mov
add
sub
add
add
mov
sub
dec
xor
sub
mov
sub
dec
movsx
jmp
