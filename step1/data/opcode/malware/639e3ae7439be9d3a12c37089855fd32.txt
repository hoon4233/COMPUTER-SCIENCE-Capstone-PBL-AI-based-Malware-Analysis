add
add
add
add
inc
add
dec
inc
add
add
add
pop
inc
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
add
add
and
dec
add
add
add
add
add
add
add
add
add
nop
xchg
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
je
add
pusha
add
add
jle
add
add
add
add
add
push
je
imul
add
add
add
add
push
push
add
add
add
add
inc
push
dec
inc
add
add
add
add
add
add
add
add
cli
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
jnp
add
add
gs
xor
xor
xor
xor
sub
sub
sub
xor
xor
xor
xor
jge
add
outs
outs
data16
gs
js
jae
jb
outs
addr16
add
add
mov
loop
(bad)
jmp
mov
add
(bad)
jecxz
add
scas
cmps
jecxz
xchg
jmp
mov
out
mov
mov
mov
mov
loope
mov
mov
call
sahf
add
mov
mov
outs
fs
gs
add
stos
xor
jmp
push
xchg
add
scas
sub
ds
sub
xor
jecxz
mov
jmp
jmp
clc
mov
fsub
iret
add
add
add
rcr
mov
stos
mov
cli
outs
movs
aad
scas
sbb
in
xchg
lds
cmp
cmc
mov
add
pop
cmp
pop
aaa
push
cmp
cmp
mov
sti
xchg
adc
inc
into
push
push
fcomp
fisttp
xchg
mov
mov
or
movd
push
mul
jg
pop
sbb
dec
(bad)
sbb
in
jbe
xchg
mov
add
sti
fwait
add
std
sbb
jb
adc
outs
dec
sti
adc
pop
in
xchg
jo
and
es
lods
popa
loop
xchg
inc
mov
or
shl
bound
int3
mov
push
sub
loopne
lahf
jo
cmp
push
mov
inc
adc
lods
jno
xchg
es
xor
ins
jne
pop
dec
xor
lsl
sbb
adc
push
jecxz
cld
sub
into
popf
add
imul
pop
inc
adc
pop
xchg
dec
mov
(bad)
mov
push
lds
std
jge
lods
test
jae
xor
push
outs
repnz
adc
add
and
fstp
sub
adc
leave
pop
mov
push
(bad)
sub
push
fucomp
adc
or
imul
cmp
mov
and
fisub
rcl
scas
daa
stos
mov
push
fnstcw
sahf
and
sub
sub
ds
int3
mov
jp
jnp
cmp
cmp
push
adc
stc
cmps
add
sbb
xchg
adc
dec
mov
inc
pop
ret
or
jb
pop
jg
cld
sub
loope
iret
in
cmp
shl
sub
arpl
or
push
adc
sub
add
mov
scas
pushf
cmc
mov
in
into
inc
add
dec
(bad)
popf
xchg
scas
and
leave
pop
dec
mov
jg
shr
test
dec
es
add
jae
xor
aam
sub
add
ds
iret
jmp
inc
int3
enter
xchg
repnz
(bad)
cdq
mov
sub
jnp
push
dec
clc
dec
mov
push
sub
jmp
mov
vpsrad
(bad)
outs
mov
in
hlt
and
dec
cmp
mov
add
aas
push
std
adc
push
jbe
les
push
lds
bound
sub
jns
outs
fisttp
call
cmp
int3
jle
les
jmp
jg
adc
int3
nop
outs
add
fidivr
mov
lods
xchg
mov
xchg
daa
jle
movs
sbb
shl
jae
shl
mov
push
mov
sbb
fadd
addr16
mov
popa
outs
loope
inc
mov
jno
cmps
mov
sub
cmc
sub
es
(bad)
mov
ror
lods
lods
std
jno
loopne
mov
cmp
je
push
out
aas
sbb
sahf
jg
neg
push
out
jno
jnp
fisttp
mov
aas
ins
int
push
or
push
fcomi
lods
inc
mov
mov
ss
push
je
push
pop
pop
ss
adc
dec
fs
xchg
loop
retf
add
sbb
adc
test
scas
mov
xchg
jmp
push
ss
call
adc
cwde
or
(bad)
or
mov
xor
mov
cmp
int3
add
dec
mov
cmps
xor
xchg
jmp
les
dec
xchg
adc
lock
dec
add
cmp
adc
mov
cmp
fsub
repnz
jle
outs
out
jl
aad
push
sub
xchg
mov
test
and
out
repnz
test
inc
sbb
jne
jo
ret
mov
pop
ins
sub
mov
dec
cmp
aas
jnp
mov
arpl
fsubr
dec
hlt
dec
add
retf
mov
jb
push
test
jge
mov
mov
add
jns
adc
xor
mov
mov
xor
cmp
loop
pop
lock
dec
dec
xchg
dec
pop
cmc
in
jl
mov
cmp
pop
(bad)
ror
out
mul
pop
dec
pop
push
int
fisubr
inc
xchg
jmp
mov
mov
les
cld
outs
adc
popa
or
add
ficom
jb
arpl
push
(bad)
jnp
imul
movs
in
ins
out
stos
ins
out
push
push
add
xchg
pop
and
(bad)
pop
in
loope
bound
or
gs
jns
or
cmps
aas
jae
dec
mov
in
je
xor
xor
jns
push
sbb
aam
sbb
test
icebp
rcl
in
stos
cmp
rcl
mov
dec
outs
fcos
dec
inc
push
in
mov
sti
sbb
retf
and
aaa
int
call
mov
out
pop
addr16
pop
push
jmp
dec
fnstenv
test
cmp
and
xor
shl
(bad)
push
cmp
cmp
jle
cmp
and
retf
add
sti
jno
aaa
out
xchg
pop
mov
add
in
mov
xor
xor
or
cmp
in
xor
cmc
enter
ins
adc
push
xor
(bad)
cdq
add
sub
out
sub
push
jbe
fnstenv
out
mov
xchg
inc
sar
aas
or
or
dec
ret
inc
lea
in
sbb
jbe
test
(bad)
jle
mov
pop
dec
cmc
pop
jno
imul
cmc
int3
fsubr
mov
xchg
mov
push
push
inc
jmp
out
dec
mov
mov
xchg
in
ja
jns
rcl
adc
pop
hlt
jnp
stos
rcr
sub
loop
adc
outs
imul
sbb
add
sbb
lock
sub
jl
push
jmp
or
test
aam
jg
pop
xchg
call
add
inc
or
cmc
rcr
aad
data16
inc
xor
and
adc
pop
xor
cld
bound
jb
add
imul
int
cmps
xor
or
loop
cli
add
pushaw
sub
mov
pop
xchg
adc
(bad)
push
in
mov
in
out
sbb
jmp
lds
(bad)
jno
push
and
cmps
daa
mov
add
clc
cmps
xchg
mov
stc
mul
push
adc
xchg
push
jns
les
jae
cmp
pop
stos
push
push
mov
and
sbb
ret
bound
iret
shr
aaa
fsub
adc
retf
jns
call
aas
add
inc
fsubr
ret
inc
cmp
sar
mov
pop
mov
xor
cmp
cdq
jmp
mov
add
xor
nop
ss
ror
aam
jmp
jl
imul
cmp
sub
mov
xor
je
aam
pop
into
call
int
into
fld
jnp
adc
int
out
(bad)
pop
retf
or
push
xor
push
or
pusha
sbb
xor
shl
mov
inc
repnz
dec
retf
cmp
xchg
mov
mov
fsubr
je
ja
sub
lods
fstp
lahf
cwde
ja
stos
or
mov
rcr
sub
cmps
xor
xor
inc
ret
cmp
or
loop
sub
inc
aad
adc
mov
outs
in
cmp
inc
loopne
imul
lea
test
sbb
out
loop
ds
add
cs
int3
aad
push
int3
clc
jbe
xchg
outs
test
mov
jb
iret
sbb
jbe
fs
cs
aam
stc
pusha
lods
(bad)
std
cli
in
mov
adc
add
or
std
push
clc
call
cmp
(bad)
in
xor
inc
test
and
repz
js
mov
mov
xchg
rcl
test
(bad)
out
test
or
cmp
rcr
and
scas
sbb
mov
adc
cmp
das
repz
out
test
or
and
ins
cmp
lds
dec
dec
mov
inc
rol
adc
inc
ret
pop
xlat
int
push
jle
xor
and
out
push
fcmovnu
or
cmp
mov
shl
outs
pusha
cmc
pop
leave
idiv
mov
xor
iret
and
fs
jmp
ds
arpl
cmps
stos
push
cli
pop
loop
test
jno
inc
nop
sub
les
jne
sbb
in
sti
push
out
and
adc
(bad)
out
xor
enter
push
xchg
mov
hlt
rcr
inc
or
or
sbb
inc
inc
xor
xor
loopne
out
lods
in
rol
mov
push
stos
stos
xor
xor
xlat
rol
mov
push
ins
lock
and
inc
sbb
aad
xchg
adc
jnp
dec
or
scas
mov
mov
fidivr
sub
out
pop
mov
hlt
test
push
xchg
pop
out
aam
adc
fsub
xor
jge
xor
jno
jae
loop
sub
mov
cmp
es
sub
mov
das
dec
cmp
push
je
lock
adc
xchg
mov
dec
and
push
jnp
xor
loope
(bad)
adc
test
pop
(bad)
js
fs
and
push
sti
adc
in
shl
mov
jmp
push
outs
jg
jmp
stc
js
mov
dec
inc
mov
dec
int
jl
inc
mov
call
push
mov
adc
sar
mov
fmul
mov
fcmovbe
push
mov
jbe
sub
add
push
add
gs
daa
clc
cmp
outs
jae
ret
in
ror
pop
pushw
clc
call
les
push
lock
ins
or
xor
jmp
jecxz
xchg
dec
sbb
add
adc
dec
pop
retf
push
cmp
scas
or
dec
bound
sbb
add
out
pop
jnp
push
jmp
mov
sbb
hlt
mov
push
jb
jbe
movs
push
in
xchg
xor
sbb
dec
aam
push
fisttp
ret
add
mov
sbb
stos
mov
push
leave
call
(bad)
push
cmp
or
fstp
icebp
mov
loopne
inc
mov
outs
arpl
sbb
xchg
cld
lahf
(bad)
retf
gs
jecxz
dec
gs
popf
das
lods
stc
mov
movs
sub
int3
and
push
and
mov
xchg
pop
sti
pusha
cld
lahf
mov
mov
fistp
stos
dec
xor
push
mov
int
sti
dec
adc
cmp
jbe
inc
mov
gs
rcl
xchg
xchg
adc
(bad)
(bad)
cmps
(bad)
shl
adc
out
fcmovu
dec
(bad)
mov
cs
xchg
pushf
sbb
nop
sbb
out
sub
cmps
jno
xor
ret
ret
int3
rcr
daa
test
mov
(bad)
call
data16
pop
je
inc
xor
in
outs
cwde
inc
fnstenv
xchg
add
sub
push
dec
dec
push
or
icebp
test
clc
leave
mov
push
pop
jmp
inc
cmc
mov
jnp
add
lahf
adc
cmp
cdq
scas
mov
xor
push
mov
pop
pop
(bad)
retf
addr16
xchg
jnp
sub
and
rcl
dec
push
jbe
xchg
arpl
sar
leave
iret
add
icebp
dec
int
mov
shr
add
xor
xchg
sbb
and
ss
xchg
retf
cli
and
ror
xchg
add
rcl
xor
sbb
lods
cld
xchg
mov
and
iret
add
ficomp
ds
in
aaa
btc
int
cmp
dec
movs
or
retf
cmp
sub
inc
aam
xchg
es
out
loope
inc
icebp
aaa
pop
mov
out
mov
adc
inc
xchg
inc
mov
dec
pop
retf
out
xchg
mov
jns
jns
ret
xor
pop
mov
pop
inc
dec
adc
inc
ret
xchg
fstp
dec
retf
retf
cmc
dec
inc
sub
push
pop
sub
inc
inc
loop
xchg
jecxz
adc
xor
int
popa
inc
sub
cmp
int3
or
inc
mov
pop
rep
(bad)
add
call
mov
xchg
add
xchg
shr
je
cmp
cs
and
mov
sbb
cld
inc
or
adc
loopne
xor
sub
pushf
iret
ds
out
mov
xchg
out
mov
das
push
addr16
jmp
adc
sub
dec
mov
xchg
mov
jmp
inc
ja
dec
push
push
inc
mov
pop
js
test
or
mov
inc
dec
add
sbb
lahf
and
sbb
pop
and
ins
mov
xor
sub
movs
stos
adc
dec
and
mov
in
in
mov
dec
fstp
out
mov
ficom
and
xor
nop
jge
fs
jns
dec
add
mov
call
loop
xchg
loopne
sbb
or
out
pop
xlat
inc
dec
push
jmp
sbb
inc
or
jmp
mov
or
pop
(bad)
in
inc
mov
enter
test
cmpps
dec
retf
fwait
xchg
or
inc
(bad)
xchg
push
loope
(bad)
and
ds
dec
(bad)
mov
xchg
add
in
push
cmc
fcomip
retf
ins
pop
or
pop
mov
ja
add
xchg
jb
fwait
sbb
retf
stos
and
mov
xchg
(bad)
sbb
push
sbb
adc
(bad)
ins
pop
push
adc
cmp
sub
loope
mov
lock
out
lahf
popf
into
call
xchg
or
inc
rcl
pop
mov
or
out
loop
adc
dec
adc
je
data16
add
aas
out
test
js
adc
pop
xor
sar
loope
sbb
shl
xchg
fdivr
call
mov
add
push
inc
arpl
or
aas
sahf
shl
(bad)
mov
jmp
pop
xchg
cmp
mov
cwde
and
xchg
jb
imul
or
xor
pop
and
push
cmp
mov
xchg
pop
out
das
retf
mov
push
loop
mov
repz
aas
int
xchg
icebp
sbb
packsswb
inc
inc
sahf
je
push
mov
xlat
mov
xchg
mov
mov
xchg
jmp
and
inc
push
lahf
cwde
(bad)
stos
neg
sti
push
mov
fsub
sub
test
test
outs
pop
push
imul
xchg
rcl
jnp
or
adc
mov
xchg
fbstp
xchg
xchg
loope
xor
lods
pop
idiv
add
iret
aaa
push
xchg
(bad)
sub
mov
cmps
test
sub
pop
mov
movs
pop
push
pop
imul
xchg
in
jmp
or
jmp
cld
fld
mov
int
mov
sub
popa
int3
in
cmc
jb
fld
mov
adc
jb
and
clc
and
push
ins
jb
xchg
cmc
jo
push
cdq
pop
int3
sbb
or
sbb
shl
out
sub
les
jno
cld
leave
imul
(bad)
lods
out
pop
std
sbb
push
dec
mov
mov
sbb
int3
scas
das
and
xchg
sbb
cmp
lock
mov
pusha
test
cld
mov
inc
sti
pusha
and
js
cmc
dec
sub
(bad)
fnstsw
aam
sub
mov
ds
(bad)
scas
xchg
fidivr
into
(bad)
add
push
pop
sub
shl
jg
nop
adc
xchg
xchg
add
cmp
xor
lock
push
cmp
cmp
xor
jb
jmp
repnz
repz
mov
push
mov
movs
ja
movs
shr
test
jo
mov
lods
fldcw
cmps
lods
cmp
sub
test
test
es
and
sub
mov
nop
arpl
sbb
pop
push
jp
js
jmp
push
jmp
stos
sbb
cs
sete
fcomi
ds
xor
cld
shl
mov
(bad)
rcl
sbb
inc
cmp
adc
push
fld
arpl
sbb
das
outs
inc
js
dec
rcr
sbb
jecxz
mov
sbb
push
dec
(bad)
out
pop
fs
je
retf
jg
mov
mov
dec
pop
cmp
sub
shr
lods
fldcw
xrelease
and
adc
scas
xor
adc
shr
xchg
add
mov
mov
mov
add
inc
adc
sbb
imul
xlat
aaa
fcomp
sub
xchg
js
iret
(bad)
pop
sub
sbb
pop
out
jae
mov
out
aad
xchg
dec
retf
ja
idiv
stos
sahf
sbb
cdq
cli
pop
(bad)
jmp
mov
mov
and
out
mul
or
sbb
push
pop
repnz
ret
cmp
lahf
mov
mov
outs
add
mov
sti
hlt
repz
imul
xor
in
mov
mov
push
rol
add
shl
ja
mov
sar
or
dec
dec
pop
xchg
mov
add
fnsave
test
lds
adc
cwde
imul
inc
jne
(bad)
cmc
aas
add
fist
sub
out
push
inc
dec
and
xchg
jbe
or
jmp
les
xchg
stos
pop
movs
and
xchg
repz
sub
retf
ror
nop
xlat
xor
lods
in
jne
enter
ins
dec
es
popa
jae
pop
int
push
daa
imul
xchg
repnz
(bad)
jmp
jge
mov
xor
inc
inc
or
add
sar
nop
cdq
or
in
hlt
xor
mov
xor
cld
(bad)
stc
inc
pop
jns
ret
popa
int
xchg
aas
push
mov
loope
pop
lds
xchg
and
sbb
ret
jg
aas
ins
inc
mov
inc
and
outs
jbe
adc
or
repnz
pop
mov
or
ret
sub
mov
(bad)
retf
and
sub
retf
xor
push
call
xchg
lahf
xchg
xchg
cmp
sbb
adc
test
loope
inc
sub
outs
sub
int
pop
mov
cmp
inc
je
ins
enter
icebp
jno
push
sub
mov
das
mov
mov
adc
cwde
push
push
sbb
cmc
pop
out
pop
popf
gs
jg
in
push
adc
dec
cwde
shl
or
mov
xchg
inc
fs
jmp
jns
pop
adc
adc
xor
(bad)
add
sub
das
sub
adc
dec
jmp
mov
push
ins
mov
pop
fist
shr
mov
ret
or
mov
div
pop
add
mov
cmp
jns
retf
stos
dec
aad
inc
and
adc
je
pop
mov
sub
pop
js
je
movs
mov
(bad)
push
movs
dec
popa
ss
sub
or
leave
out
ins
add
push
pop
lahf
or
inc
add
sub
cwde
pop
sti
popf
xor
repz
retf
cmp
das
clc
inc
in
data16
sbb
cmp
imul
lea
in
push
or
jns
out
mov
cmp
cmps
jecxz
and
dec
inc
rcl
add
outs
fadd
test
imul
retf
mov
aas
jp
cmp
push
jb
push
pop
add
adc
mov
pop
mov
jns
out
into
pop
mov
out
aad
in
xchg
add
jmp
push
pop
cli
adc
mov
jb
outs
jle
push
or
retf
sub
push
xchg
pop
inc
(bad)
pusha
adc
out
into
mov
call
xchg
into
les
and
imul
xlat
nop
(bad)
repnz
in
inc
xor
out
jecxz
dec
cmp
in
shl
pop
xor
dec
aam
jge
push
pop
and
xchg
adc
daa
and
pop
(bad)
mov
es
push
mov
dec
dec
cmp
mov
rol
test
add
mov
xlat
sub
sub
je
bound
shl
cdq
push
fld
pop
mov
ins
mov
pop
push
cmps
push
add
loopne
(bad)
pop
inc
mov
stos
scas
(bad)
scas
xchg
(bad)
adc
out
cmps
cmps
add
call
sbb
cmp
jg
add
xor
add
cmp
mul
test
je
and
outs
shr
scas
fbld
add
push
jo
push
pop
imul
fwait
sahf
jmp
movs
jmp
cmp
jo
adc
mov
xlat
je
retf
in
jae
cld
in
repnz
outs
mov
or
xor
jns
xor
pop
std
jns
push
lock
repnz
imul
push
mov
sbb
add
in
jl
jmp
add
sar
xor
add
dec
mov
pop
lock
cmp
out
add
push
fldcw
xor
(bad)
addr16
jle
fld
in
repz
cld
rcr
push
xor
xor
push
sbb
inc
xchg
xor
lock
mov
dec
div
push
fs
mov
mov
fs
loopne
add
rcr
cdq
ret
xor
cmp
inc
pop
test
pop
or
call
sbb
pop
fild
fmul
mov
sbb
lock
push
sbb
jg
mov
les
pop
jge
imul
jns
inc
aad
enter
push
or
adc
call
inc
mov
repz
mov
sar
dec
dec
inc
xchg
jge
frstpm(287
neg
cmps
inc
mov
mov
mov
stos
adc
movs
mov
into
je
(bad)
nop
pop
pop
repz
fcmovb
xchg
mov
sbb
aam
inc
jmp
sbb
mov
add
call
clc
sub
out
sbb
xchg
sbb
cmp
pop
call
fwait
test
shl
pop
test
adc
inc
sub
lods
adc
popf
iret
sbb
or
test
movs
push
rcr
push
lds
pop
mov
sub
adc
sub
cmp
cmc
jmp
add
mov
out
and
cmp
jb
test
push
(bad)
lea
loopne
and
fsub
arpl
dec
fdivr
and
enter
cmp
stos
xor
shr
sbb
ss
jns
lea
and
gs
mov
pop
add
int3
js
dec
(bad)
out
pop
imul
ins
(bad)
mov
movs
mov
test
aas
(bad)
aas
jmp
movs
cmp
mov
xchg
imul
xor
mov
stc
mov
inc
inc
lock
vmovq
aas
and
jb
mov
and
add
mov
out
rcr
cs
cld
xor
out
js
push
mov
dec
shl
shr
push
cmps
repnz
jmp
popa
xor
xor
mov
(bad)
test
or
or
psraw
out
add
push
test
or
test
jp
inc
xchg
out
inc
(bad)
adc
pop
int3
outs
mov
outs
mov
mov
add
inc
adc
and
xchg
push
stos
stc
or
and
ds
loope
pop
stos
push
push
arpl
outs
add
adc
jl
leave
gs
sbb
call
mov
repnz
jmp
mov
(bad)
xor
sub
call
add
push
(bad)
push
lods
push
mov
mov
ja
(bad)
cmp
es
lds
nop
test
into
sbb
xchg
aam
jecxz
ins
or
not
sbb
xor
or
imul
sub
(bad)
xchg
sub
leave
jmp
mov
xchg
icebp
jbe
aaa
jmp
jg
loope
sbb
pop
push
pop
dec
jne
dec
test
sub
je
sub
outs
ret
pop
jge
(bad)
(bad)
(bad)
cmp
retf
or
xor
ss
and
pop
cs
add
mov
xor
add
in
add
sbb
sub
mov
push
or
pop
pop
icebp
pop
call
mov
jno
mov
adc
neg
icebp
sub
inc
addr16
or
pop
xchg
sub
leave
rol
jecxz
inc
push
jle
sbb
shl
pop
add
adc
cmc
das
add
cmp
mov
push
mov
cmp
icebp
jb
lods
dec
les
ret
and
in
jmp
ret
mov
adc
fdivrp
cmps
push
add
fistp
pop
ss
popf
mov
adc
dec
xor
(bad)
dec
lea
rcr
and
repnz
in
dec
out
cli
pop
or
cmps
(bad)
dec
mov
es
gs
mov
int3
in
sti
repnz
pop
jecxz
cmp
push
stos
push
or
cdq
inc
popa
inc
sbb
icebp
out
mov
(bad)
xor
mul
(bad)
xlat
jge
movs
popa
push
mov
int3
fist
mov
popf
outs
or
stc
rcr
cmp
inc
aam
test
inc
fwait
sub
aad
adc
cmp
xor
add
cmp
mov
add
push
out
cli
mov
fxch
inc
call
dec
out
ja
sub
lahf
mov
dec
or
cmp
mov
test
mov
or
or
mov
mov
(bad)
outs
and
out
test
ss
loopne
inc
test
xchg
and
test
fimul
adc
or
out
jl
sub
jle
or
push
jbe
fdiv
sub
cli
cmp
xor
pushf
jmp
xor
dec
xchg
data16
sub
push
fst
cmps
add
mov
xlat
ss
dec
push
das
bound
mov
loope
movs
sub
xor
mov
loop
mov
xor
mov
add
mov
mov
stos
ins
cli
enter
and
sub
bound
pop
imul
sahf
push
push
cdq
jg
add
inc
in
movs
jb
jo
and
sub
adc
fwait
adc
neg
mov
out
mov
je
outs
xchg
xchg
call
xchg
push
adc
dec
ss
inc
and
dec
or
fs
jmp
adc
je
hlt
and
aad
movs
std
sar
xchg
sbb
push
pop
movs
xchg
test
or
xchg
jbe
dec
cli
cmp
fist
and
ret
rcr
or
push
cdq
nop
xchg
je
cli
rcl
cmp
xchg
popa
shl
cmp
jae
add
xor
(bad)
fild
xchg
or
sub
and
mov
sbb
mov
jnp
or
call
jns
mov
cmp
mov
dec
or
mov
xchg
and
movs
jnp
int3
inc
cld
add
ds
gs
push
push
sbb
scas
mov
sar
push
popf
or
xor
inc
sbb
adc
add
cli
or
push
sbb
mov
lods
jns
test
sub
mov
sar
sbb
mov
stos
inc
loopne
pop
out
dec
adc
cmp
into
cld
cmps
jmp
push
push
icebp
leave
or
cmps
js
dec
ret
and
sti
in
je
imul
popf
pushf
add
or
lahf
inc
popa
pop
dec
xor
mov
das
mov
push
jo
add
stos
pop
pusha
dec
arpl
or
out
jno
call
sub
mov
mov
ret
dec
jnp
div
std
mov
ret
loop
mov
sbb
test
jle
test
sub
mov
pop
nop
mov
(bad)
xlat
sub
pop
sub
das
retf
adc
sahf
repnz
out
add
lds
push
mov
stos
ja
lods
clc
pop
inc
adc
push
out
xchg
es
or
fs
sar
jns
scas
xchg
aam
in
fs
fcom
xor
gs
add
sti
inc
inc
fadd
push
jl
jns
sbb
scas
das
andps
dec
pop
das
cmp
mov
sbb
sbb
ins
cli
test
pop
sub
cmp
pop
int
dec
aas
(bad)
sub
inc
xor
mov
sbb
in
fwait
adc
add
add
pusha
int3
mov
cmp
ret
ficom
xor
push
aad
int3
pushf
or
push
test
pop
adc
xlat
add
dec
ret
dec
adc
icebp
in
repnz
push
div
cmp
nop
imul
std
cld
cmp
xor
mov
test
jnp
ja
sbb
in
nop
and
pop
ficomp
dec
jo
sub
pusha
loop
test
ret
pop
pop
(bad)
inc
test
out
mov
in
ret
jo
push
sbb
lds
dec
fadd
test
iret
data16
cdq
lea
enter
ret
sbb
jge
ds
out
mov
xchg
jb
push
sti
test
call
cli
adc
sub
mov
sbb
fst
aaa
pop
scas
(bad)
sub
imul
mov
mov
mov
xchg
mov
pop
jge
test
rcr
mov
mov
pop
cmp
add
pop
hlt
in
cmps
pop
ror
push
lahf
imul
mov
pop
imul
inc
push
mov
dec
mov
mov
movs
dec
loopne
jmp
mov
mov
(bad)
in
outs
fidivr
xor
test
call
ins
sbb
mov
rcr
lea
jge
std
push
shl
sbb
aas
ins
repnz
dec
cmp
jg
int3
sub
rol
cld
pop
outs
and
jl
pop
sub
or
adc
cld
and
xor
or
daa
aam
push
add
shl
inc
shl
lods
pop
into
pop
fimul
add
jl
cli
pushf
rsm
scas
cmc
xor
mov
daa
(bad)
shl
dec
jge
jmp
push
jae
cmp
lods
cmp
into
sub
pop
and
ins
sub
inc
inc
mov
imul
cli
(bad)
lods
mov
jg
mul
mov
mov
icebp
mov
out
inc
push
and
retf
xchg
cmp
(bad)
rcr
pusha
push
dec
sub
adc
cmp
mov
imul
cmp
adc
cmc
dec
inc
fsubr
xchg
or
stos
cmp
push
cs
repnz
mov
movs
jne
sub
or
mov
shr
frstor
aad
jl
aad
push
xchg
sbb
das
inc
push
test
shr
and
cmps
xlat
and
div
jne
dec
inc
pop
xchg
les
test
(bad)
and
leave
xor
inc
aaa
adc
(bad)
fwait
pop
or
retf
sbb
inc
add
inc
(bad)
gs
push
sub
imul
scas
out
add
cmp
add
dec
in
mov
mov
(bad)
sbb
push
addr16
into
leave
xchg
shr
xor
push
dec
lods
push
sub
mov
add
adc
int3
mov
cmp
inc
outs
retf
sub
div
or
xlat
les
div
jmp
add
ins
int
lds
lods
(bad)
push
jb
mov
push
xchg
jae
jl
mov
jecxz
sub
adc
ret
jbe
or
push
stos
loope
push
mov
shl
cld
lahf
les
mov
push
cmps
add
mov
mov
or
pop
cld
xor
cmc
cmp
push
pop
nop
enter
ds
push
retf
aad
mov
sbb
stos
mov
frstor
loop
push
int
sti
stos
push
div
inc
xchg
jge
mov
pop
xchg
mov
ror
add
push
jbe
fidivr
mov
push
or
aad
or
dec
mov
and
inc
out
fidivr
movs
mov
jmp
test
push
rcl
inc
in
sahf
and
cmps
add
xchg
mov
sbb
shr
dec
and
clc
retf
pop
out
(bad)
push
add
and
arpl
leave
add
(bad)
clc
dec
fsubr
mov
enter
bnd
sub
xor
hlt
in
dec
adc
or
add
movs
fnstenv
ins
push
popf
sahf
jnp
xchg
idiv
mov
or
pusha
icebp
xchg
xor
ret
aam
xchg
mov
mov
push
pop
lock
(bad)
mov
cmp
not
repz
or
xchg
std
out
mov
jle
(bad)
push
pop
xchg
mov
mov
xor
sti
mov
adc
pop
mov
adc
(bad)
cmp
lods
add
lods
mov
ror
mov
call
pop
imul
pusha
cmp
jecxz
into
out
sub
mov
or
dec
daa
jbe
fnsave
ins
and
inc
add
and
movs
pop
dec
or
mov
cmps
pop
push
lock
fimul
sahf
xchg
mov
enter
adc
lods
inc
xlat
cmp
outs
sahf
jbe
addr16
push
jmp
iret
xor
in
(bad)
scas
loope
into
dec
or
test
les
pushf
call
push
int
loope
push
cmps
pop
sub
test
sbb
inc
nop
xchg
mov
(bad)
jmp
adc
int
cmps
mov
hlt
pop
jnp
sub
and
inc
dec
inc
pop
neg
inc
xchg
dec
cli
mov
dec
dec
sub
clc
jo
data16
test
js
and
mov
push
mov
mov
sti
mov
adc
pop
or
mov
pop
aas
aaa
lods
fs
and
ret
jl
mov
shl
in
in
sar
sub
and
std
int3
pop
lds
sti
dec
test
pop
cmp
jnp
and
push
xchg
inc
inc
rcl
xor
daa
mov
mov
loop
es
bound
ret
xchg
lods
in
in
push
xor
int
fild
jle
adc
cmp
inc
je
pusha
jb
cld
retf
add
sub
adc
mov
sbb
mov
cs
aam
scas
adc
xchg
add
aad
das
ins
mov
into
lods
mov
lods
inc
adc
test
push
jl
movs
jl
ror
jae
add
xor
hlt
enter
jo
mov
jmp
test
cmc
add
repnz
add
xor
xchg
(bad)
fisub
ja
dec
cmc
lea
lahf
pop
cmp
adc
xor
call
add
jmp
and
enter
jbe
dec
icebp
shl
into
dec
jmp
ds
xor
push
rol
adc
jp
mov
clc
pop
clc
mov
mov
iret
push
(bad)
push
ror
mov
dec
xchg
jp
out
jo
xchg
fidiv
mov
and
and
adc
out
cmp
jl
sub
gs
cmp
mov
sahf
iret
add
pop
pushf
call
arpl
mov
loop
sbb
shr
inc
push
js
pushf
cmps
cmp
nop
dec
sub
xor
fs
xchg
mov
cmp
pop
call
and
ins
test
jae
adc
pop
mov
and
or
jp
rcr
fist
int3
scas
sub
adc
mov
xor
adc
cdq
mov
mov
jns
push
adc
mov
cmp
in
lds
call
aad
loope
mov
enter
sub
out
push
sbb
gs
ret
mov
xchg
je
movs
adc
daa
out
loop
jp
push
gs
outs
xchg
mov
mov
fdiv
mov
rcr
ja
lock
lock
push
jo
mov
pop
(bad)
in
mov
lods
iret
adc
aad
push
cld
fadd
mov
sub
(bad)
dec
pop
(bad)
push
je
das
lods
dec
out
sbb
imul
or
mov
sbb
and
pop
ins
sbb
mov
cmps
mov
in
jp
pop
cs
xchg
dec
not
nop
aam
xor
or
mov
or
add
adc
clc
sti
push
fsub
mov
mov
(bad)
lds
push
aas
in
jns
ds
sahf
adc
jg
pop
xlat
popf
(bad)
scas
jne
popf
or
push
mov
in
ins
adc
aas
or
fwait
sub
pop
into
ss
cwde
ror
inc
sub
adc
cs
mov
add
mov
or
xor
(bad)
fistp
gs
xchg
xchg
fistp
cmps
ja
repz
and
mov
out
mov
pop
ja
leave
adc
mov
nop
test
mov
sub
pop
cmp
xchg
shr
sbb
test
(bad)
pop
cmp
xchg
aas
push
retf
in
rol
mov
mov
clc
add
push
jb
repz
lods
adc
movs
enter
jno
mov
mov
mov
sti
xchg
xchg
cmp
rol
mov
movs
add
imul
test
sbb
outs
loope
jecxz
fcompp
add
rcr
xor
gs
mov
cmps
ffree
mov
popa
imul
and
mov
retf
mov
fldcw
scas
mov
inc
jmp
mov
mov
push
mov
out
adc
test
inc
dec
aaa
cmps
js
inc
push
sbb
in
loopne
jle
nop
xchg
adc
rcl
cmp
sar
enter
add
mov
pusha
and
dec
test
xor
sub
test
adc
fucomip
pop
cmp
cmp
jno
jmp
int3
mov
outs
xchg
jne
xor
adc
sub
stos
jl
int3
cmp
pop
pop
adc
mov
sbb
pop
(bad)
adc
daa
or
xlat
mov
dec
fs
jo
sub
dec
out
outs
ret
pop
lds
(bad)
stc
mov
mov
into
xor
sbb
mov
add
in
mov
sbb
std
inc
xor
sub
js
xchg
xor
jle
iret
inc
push
xchg
fisttp
mov
sar
shr
adc
inc
and
cwde
out
loop
loope
push
mov
cmp
sahf
scas
and
adc
inc
div
or
not
jecxz
xor
mov
sub
aaa
jne
mov
gs
add
nop
in
jae
and
lods
stos
dec
adc
test
xlat
sub
adc
sub
les
or
addr16
adc
sbb
mov
jg
retf
pop
mov
mov
not
movs
add
cwde
sbb
sbb
and
sbb
repnz
stos
sub
repnz
dec
test
pushf
push
inc
mov
pusha
jb
sub
xchg
push
pop
and
lds
jmp
inc
xchg
daa
fdivr
fcmovb
sahf
pop
fnstsw
jecxz
data16
test
outs
inc
fisub
xchg
(bad)
(bad)
or
sub
mov
mov
dec
nop
ins
xchg
mov
enter
mov
movs
enter
ss
mov
icebp
das
jae
xor
mov
(bad)
sbb
icebp
xor
fldenv
xchg
xchg
scas
adc
mov
inc
mov
(bad)
xchg
sbb
clc
out
out
cwde
les
pop
dec
cmps
pop
add
sub
rcl
add
enter
add
inc
cdq
ins
es
dec
(bad)
(bad)
es
mov
rol
(bad)
call
test
add
sub
pushf
xor
adc
mov
int
mov
arpl
jge
daa
inc
leave
jl
adc
pusha
push
jmp
sub
push
loopne
xchg
cmp
les
jmp
mov
test
sbb
test
into
push
jo
cmp
mov
cdq
sbb
inc
fsubr
cmps
cmp
nop
sbb
shl
arpl
lahf
inc
inc
mov
inc
push
jne
in
push
out
(bad)
fdiv
cmp
outs
fs
mov
mov
push
cvtdq2ps
xchg
adc
add
mov
movs
mov
dec
jge
fwait
out
sbb
sub
adc
lods
icebp
aam
popf
push
jnp
adc
xchg
inc
test
add
jb
icebp
(bad)
ficom
sbb
mov
mov
stc
jno
adc
jl
iret
movs
(bad)
in
jg
inc
btr
dec
push
(bad)
cmp
test
mov
pop
mov
jg
jge
lahf
sbb
clc
ret
push
xlat
or
adc
int
pop
add
sub
mov
mov
xor
ja
jbe
ror
mov
cmps
cs
pop
in
inc
add
mov
shl
ror
jb
test
ds
fcmovnu
xchg
out
aaa
xchg
stos
jnp
cmps
adc
aas
outs
sub
add
ret
rcl
xchg
xor
pop
leave
dec
pop
sti
and
cmp
sbb
stos
cvtdq2ps
into
shl
push
or
or
imul
scas
(bad)
adc
mov
mov
cli
xchg
scas
push
aaa
jl
push
mov
xchg
fild
outs
shl
or
div
hlt
cmps
mov
test
push
cli
xchg
ror
mov
test
out
sub
iret
(bad)
jmp
pusha
xchg
adc
push
mov
lds
mov
add
sub
out
jmp
aaa
pop
sar
mov
repnz
scas
sbb
xor
jmp
mov
pop
repz
xchg
aas
cmp
cmp
push
xchg
ss
sub
adc
cmp
xor
es
pop
shl
lods
jmp
cmp
sub
bound
xor
push
stc
jmp
data16
add
sar
fstp
fwait
mov
call
adc
popa
pop
cld
mov
xchg
inc
hlt
imul
inc
addr16
int3
sahf
mov
xchg
hlt
push
xchg
pop
arpl
mov
sbb
xlat
test
fcom
je
fwait
push
loop
push
fwait
push
stc
cmp
jno
repnz
ret
fwait
and
(bad)
jns
sti
add
(bad)
(bad)
jg
inc
sub
or
jmp
pop
stc
xlat
jns
lds
xor
dec
outs
jae
sbb
pop
pop
xor
inc
pop
or
xchg
or
xor
xchg
xchg
mov
and
sbb
aas
sahf
adc
jb
std
sahf
sub
or
je
out
ins
ds
jmp
iret
retf
loop
push
inc
or
sbb
ret
mov
std
cwde
and
add
or
xor
inc
jge
or
stos
pop
add
jo
push
xlat
stos
lods
int3
inc
xchg
dec
sbb
and
ss
xor
mov
fwait
jo
dec
and
loopne
or
mov
mov
and
xchg
jno
add
xchg
addr16
or
mov
aaa
cmp
sbb
dec
and
jmp
and
ret
dec
or
frstor
test
sbb
mov
test
aaa
js
mov
test
popf
ins
or
jle
fsubrp
in
cmp
mov
jbe
retf
jnp
out
mov
popf
or
sbb
and
mov
pop
into
jp
in
pop
mov
mov
inc
sbb
xchg
mov
ds
cli
mov
loope
(bad)
pop
dec
(bad)
std
push
inc
mov
mov
mov
addr16
jbe
imul
dec
ret
repnz
pushf
cmps
push
add
in
shl
xor
jne
lahf
int
test
mov
mov
repnz
or
jo
and
lock
mov
aad
mov
sbb
inc
xchg
lds
enter
xor
cmp
add
xlat
mov
(bad)
out
inc
push
cwde
inc
call
jmp
popf
popw
(bad)
mov
cmp
cmp
adc
imul
push
ds
adc
cmp
or
imul
(bad)
pop
neg
comiss
aad
int3
lds
jmp
inc
pop
nop
jecxz
pop
in
ja
jmp
mov
popf
cdq
icebp
xchg
daa
pop
(bad)
mov
and
hlt
aam
pop
retf
or
mov
cmp
cld
(bad)
mov
cs
mov
dec
cmp
pop
sbb
cmp
xor
nop
retf
push
lock
push
xchg
and
(bad)
adc
lahf
xchg
lods
fadd
out
gs
push
jns
push
or
outs
loop
test
hlt
and
inc
xchg
cwde
(bad)
push
iret
mov
sub
fwait
das
ds
cwde
add
setne
cmp
fs
jge
lea
jg
retf
mov
pmulhuw
fidivr
sbb
cmp
mov
xor
cwde
mov
push
into
jp
aam
out
inc
inc
jns
xchg
add
jle
push
out
es
mov
pop
jmp
popa
bound
loope
cmps
xor
or
repnz
div
dec
addr16
xor
cwde
add
stos
inc
popf
mov
dec
lahf
xor
push
cmp
pop
cs
addr16
xchg
jge
push
fidivr
push
repz
xchg
push
xor
test
sub
out
jmp
mov
pop
pop
fnsave
and
adc
(bad)
xchg
(bad)
jo
lds
repz
mov
jne
stc
and
(bad)
repz
jp
cdq
iret
pop
adc
jmp
pop
addr16
sub
aas
dec
(bad)
iret
das
inc
dec
mov
fcom
mov
dec
in
or
inc
mov
cmp
fcom
hlt
xor
mov
xchg
jo
or
inc
mov
not
ret
sbb
scas
pushf
push
cmp
clc
mov
mov
cmp
push
(bad)
dec
cmp
and
mov
adc
mov
ins
pop
les
test
mov
mov
add
fnstcw
cmp
mov
(bad)
out
cdq
dec
jns
xchg
(bad)
std
cpuid
pop
inc
cmps
push
jg
daa
imul
xor
movs
lock
sbb
jge
dec
mov
mov
push
pop
inc
scas
test
sbb
jg
hlt
ja
cmp
pop
lea
or
ins
push
xchg
std
shl
mov
popf
cmp
inc
mov
mov
je
push
or
sahf
pop
test
push
cmp
repnz
mov
iret
hlt
stos
or
sub
shl
or
push
pop
gs
xor
aam
mov
sbb
mov
jl
xor
mov
ss
fsubrp
inc
fs
or
int
fisubr
mov
jb
xchg
repz
xlat
test
out
ret
mov
pop
mov
push
nop
lea
ja
hlt
popa
ins
std
lahf
dec
cdq
pop
ror
push
cmp
mov
mov
dec
(bad)
adc
lds
jb
cmp
or
push
test
shl
retf
je
or
adc
inc
cdq
xchg
mov
add
ss
outs
cwde
stc
xchg
dec
mov
call
int
movs
shl
push
sbb
xchg
add
inc
add
mov
mov
dec
cdq
fwait
stos
cwde
mov
add
xor
je
and
(bad)
imul
out
dec
(bad)
and
pop
loope
shl
inc
cld
popf
lods
sbb
mov
cmps
or
vmptrld
cmp
shl
out
push
arpl
in
(bad)
xor
iret
inc
push
imul
cld
adc
or
dec
repz
or
or
inc
int
retf
mov
inc
push
test
inc
dec
cmps
retf
mov
fistp
mov
mov
or
cmc
std
cmp
pop
ret
mov
cld
inc
dec
cli
sbb
fidiv
xchg
into
cmp
lds
pushf
xchg
or
inc
cmp
les
mov
sbb
lock
lds
jbe
dec
xchg
jbe
dec
jmp
lock
and
popa
pop
push
into
outs
mov
jnp
sub
jmp
sub
(bad)
call
sub
xchg
jg
imul
sub
cs
mov
dec
pop
push
aas
test
retf
and
fldcw
je
jns
sbb
mov
out
cmp
into
jl
add
sahf
jp
xor
jg
pop
arpl
xor
cmp
scas
test
jo
idiv
in
iret
jl
popa
cmp
and
sbb
sbb
aad
loopne
in
xchg
jecxz
ja
mov
or
jmp
mov
pop
clc
mov
sbb
push
pop
call
push
adc
adc
imul
mov
jl
ss
loop
xor
lods
bound
mov
jae
popf
lock
addr16
sbb
out
mov
inc
imul
xlat
test
adc
test
pusha
sub
ins
(bad)
ja
out
adc
fist
pop
mov
jmp
pop
es
sub
jmp
mov
adc
aaa
and
bswap
pop
xchg
sbb
outs
sbb
mov
das
push
jo
or
mov
pop
mov
ins
and
mov
xor
xchg
push
popa
movs
outs
lods
mov
cmps
(bad)
push
push
add
pop
xchg
shl
into
jmp
push
xor
xor
shr
aad
push
dec
int
dec
push
test
nop
fincstp
cmp
push
ret
sbb
stos
sbb
test
cmps
das
leave
das
jne
push
jle
xor
sbb
dec
dec
enter
jecxz
es
loop
jmp
icebp
popf
xor
in
retf
clc
push
movs
lods
ins
adc
jne
cwde
addr16
fcomp
add
xchg
sub
rcr
cmps
cmp
mov
push
daa
shl
test
jnp
int3
sbb
push
sahf
sbb
sub
jecxz
cmps
cwde
add
mov
retf
sub
mov
mov
aad
lods
or
leave
or
sbb
(bad)
jecxz
gs
scas
pop
xor
jae
pusha
inc
cmp
fsubr
cmps
sti
in
test
(bad)
sub
push
hlt
dec
push
push
pop
sub
in
les
inc
lods
gs
adc
push
inc
lea
into
loop
xlat
adc
sar
test
or
test
vmovhpd
cwde
call
sbb
ja
adc
sub
test
mov
adc
clc
mov
push
or
imul
mov
push
rol
pop
cmp
jg
mov
mov
pusha
test
call
cli
jbe
mov
adc
sahf
push
or
cli
xchg
sbb
cmp
mov
mov
imul
test
xchg
fs
loopne
jae
mov
loopne
aaa
mov
loopne
daa
xchg
pop
mov
mov
mov
or
xchg
inc
movs
cli
dec
mov
dec
stc
rcr
dec
pop
or
mov
outs
fdiv
mov
pop
sub
and
mov
xchg
(bad)
lods
sbb
mov
xchg
loop
pushf
cmps
push
pavgb
cs
and
shr
sub
fcom
push
sbb
rcl
or
mov
out
adc
movs
(bad)
add
xor
shl
cwde
mov
stc
loope
ins
lods
aaa
mov
(bad)
loopne
add
add
loope
jne
test
add
push
sbb
add
imul
sub
mov
inc
and
mov
sub
mov
mov
mov
retf
and
mov
jmp
aaa
inc
rcr
and
aam
daa
adc
xchg
cmp
mov
aam
adc
retf
nop
xchg
out
popf
jl
(bad)
out
dec
(bad)
cmp
adc
cmp
dec
call
mov
and
sub
ret
scas
adc
sbb
mov
sti
int
or
out
xor
gs
(bad)
xor
xor
add
mov
or
lds
inc
push
or
sar
ret
pop
xor
cmps
imul
into
(bad)
cdq
jmp
xchg
cld
xlat
push
or
mov
cmp
pop
jmp
mov
cmp
sbb
mov
movs
xadd
ret
mov
je
adc
loopne
sbb
dec
out
mov
mov
dec
(bad)
aaa
outs
adc
mov
and
add
clc
adc
int3
adc
inc
adc
xchg
fdiv
and
call
xor
movs
imul
dec
mov
inc
and
cli
mov
push
cmp
ret
or
leave
cmp
sbb
cmp
les
jmp
icebp
outs
pop
adc
imul
cmp
xor
(bad)
(bad)
nop
ins
ret
sub
pop
scas
mov
in
sbb
inc
mov
sub
dec
xchg
mov
jns
add
ror
js
add
add
xchg
add
mov
pop
mov
sub
cmc
jb
sub
(bad)
(bad)
imul
and
scas
dec
fld
out
repnz
xlat
dec
out
in
mov
das
xchg
inc
xchg
es
jge
and
or
data16
push
ror
xchg
out
xchg
repz
sbb
or
out
pop
xor
mov
shr
pop
ds
aam
mov
sub
sub
je
jne
cmp
xor
test
mov
bound
pmuludq
test
push
cdq
push
cmp
enter
das
xchg
dec
jecxz
pushf
and
and
sub
call
adc
dec
in
or
mov
leave
enter
sub
aaa
dec
(bad)
iret
test
fst
cld
test
or
inc
fs
fxch
bound
or
imul
mov
das
or
mov
or
xor
loope
cld
inc
mov
push
dec
cmp
and
inc
xor
inc
or
or
nop
cmp
add
pop
adc
stos
xchg
adc
mov
js
jg
mov
test
(bad)
push
call
mov
add
lahf
stos
push
aad
pop
enter
jae
push
icebp
into
inc
mov
dec
sbb
sbb
aaa
arpl
or
or
out
icebp
mov
push
xor
fs
movs
push
cs
ins
ret
test
or
sbb
cmp
mov
arpl
int3
mov
aam
rcl
ins
jbe
ins
or
popf
mov
pop
arpl
sbb
dec
jmp
(bad)
aaa
test
xor
lods
js
data16
push
cmp
out
icebp
adc
mov
fsubr
pop
loope
popa
inc
fnstcw
call
push
xor
adc
ja
cmp
loope
int
rol
out
mov
test
mov
push
sbb
or
and
call
xchg
ins
inc
shr
stos
stos
sbb
loopne
sub
adc
and
jnp
movs
xor
icebp
push
cmp
or
sbb
sbb
inc
inc
mov
movs
sub
shl
dec
int
inc
push
or
loop
arpl
out
push
mov
dec
mov
cmp
mov
inc
inc
fwait
sti
mov
mov
push
imul
pop
sbb
jp
mul
sahf
push
ds
mov
jnp
dec
mov
dec
cdq
mov
(bad)
adc
ret
xchg
jecxz
retf
jle
sub
jae
mov
pop
dec
xchg
clc
sbb
adc
jo
jno
mov
cmp
mov
sub
mov
enter
sahf
das
cli
sub
jne
je
xchg
clc
mov
stc
lods
add
arpl
inc
push
push
push
and
pop
adc
call
into
out
lds
mov
mov
into
adc
xchg
mov
xchg
pop
dec
daa
push
js
cwde
cmovs
push
rcl
push
in
aam
xor
adc
mov
rol
das
sbb
out
ret
lods
add
ret
(bad)
stc
inc
jbe
popf
push
cdq
addr16
das
mov
movd
fwait
fs
jg
aaa
push
xchg
jne
or
fidivr
loop
fisubr
sahf
lods
(bad)
call
add
add
outs
mov
shr
sub
sbb
out
dec
jno
mov
pop
stos
jns
rcr
out
retf
int
int3
add
push
fistp
add
pop
(bad)
fiadd
mov
jne
or
clc
lods
ins
dec
xchg
(bad)
jl
in
ss
mov
jmp
enter
mov
sub
inc
pop
dec
adc
dec
or
mov
inc
bound
outs
pushf
loop
movs
hlt
mov
int
fs
lock
mov
dec
push
inc
mov
lods
sar
mov
sbb
mov
int3
inc
repnz
test
outs
add
ss
xlat
seta
jge
cld
shr
lock
aam
pop
pop
add
fadd
or
dec
js
mov
or
loop
dec
xchg
jne
lods
mov
and
push
into
and
sub
add
(bad)
pop
mov
shl
out
inc
jns
mov
add
jmp
pop
mov
cdq
push
xor
in
xor
outs
pop
mov
xor
repz
inc
ins
addr16
test
daa
xlat
inc
(bad)
div
push
fnstcw
xchg
loope
sahf
push
aad
dec
inc
aas
lods
sbb
test
and
in
lods
add
mov
popa
data16
dec
pop
push
(bad)
aad
push
dec
adc
or
xor
out
pop
(bad)
popa
fst
mov
rcr
stos
push
aas
imul
push
jmp
js
push
(bad)
cs
retf
xor
adc
in
(bad)
out
inc
pop
sub
jo
lds
call
push
aaa
ret
jns
neg
rol
in
jl
push
add
test
xchg
loope
mov
add
mov
fwait
mov
test
lock
pop
fidivr
std
sub
test
push
into
pop
out
(bad)
stos
int3
call
retf
cmp
pushf
xor
movs
pop
addr16
mov
sub
pop
cli
ja
outs
fisubr
add
add
and
(bad)
push
xchg
ja
cmp
adc
cmp
stos
sub
sbb
xor
pop
adc
into
dec
retf
xchg
ins
test
push
adc
sbb
retf
xchg
or
loope
addr16
cwde
pop
mov
cmp
ficom
push
rcl
(bad)
mov
shl
dec
or
mov
mov
sub
rol
(bad)
or
pop
retf
jg
retf
sub
push
mov
mov
loope
fs
scas
add
push
and
loope
in
ret
fmul
fld
dec
out
fdiv
shr
sbb
inc
xor
and
in
jno
push
ffree
rcl
jb
loope
fldenv
mov
cs
jl
and
int
inc
call
pop
inc
bound
or
int
bound
jbe
cmp
jp
mov
add
and
cmc
gs
mov
cmps
std
les
mov
dec
add
push
adc
out
retf
scas
aas
dec
pusha
and
jecxz
cmp
mov
push
ret
(bad)
outs
jl
daa
arpl
out
mov
popf
jne
cmc
rol
xchg
fidiv
add
inc
call
cmp
or
lds
lahf
mov
mov
loope
lahf
mov
cmp
xchg
dec
lea
iret
daa
push
pop
rcr
(bad)
repnz
dec
dec
mov
mov
call
dec
mov
movs
cmps
aas
sub
push
mov
sub
xor
push
dec
and
stos
pop
fsubr
cmp
mov
les
mov
sub
shl
or
jo
pop
dec
cwde
inc
out
mov
mov
xchg
push
pop
push
cwde
xor
aaa
or
mov
ds
shr
clc
jg
pop
dec
cmc
sbb
push
mov
cmp
dec
rol
in
test
popf
or
sbb
inc
jg
test
jp
adc
cmps
add
mov
shr
jg
mov
mov
inc
inc
in
mov
pop
sub
mov
inc
cdq
sub
jge
sub
sub
xor
aas
dec
cmps
ss
or
stos
int3
xchg
scas
push
cmp
add
cdq
xchg
mov
mov
les
out
and
sbb
lock
add
pop
(bad)
shl
stc
aad
jno
pop
retf
retf
mov
xchg
push
shl
dec
adc
and
int
xor
pop
mov
cmp
loope
xchg
sahf
pop
clc
aad
loop
mov
inc
or
ret
and
test
cmp
jae
adc
jmp
or
loop
retf
mov
and
call
jns
or
call
cmp
add
cmp
mov
cmps
mov
add
out
fucom
push
mov
ds
pop
and
std
mov
lods
fadd
mov
jl
lds
aaa
and
adc
fwait
dec
cmc
and
cmp
sti
cmp
pusha
rcr
hlt
cwde
stos
fisub
lock
sub
sahf
scas
ins
mov
push
(bad)
mov
sbb
js
or
js
and
loope
xchg
outs
push
leave
mov
sbb
es
dec
data16
scas
add
popa
fidiv
sahf
inc
ins
ds
daa
mov
inc
inc
or
stos
jmp
fs
push
lock
clc
test
adc
out
ds
gs
inc
retf
adc
clc
jl
std
ss
add
scas
cmp
clc
(bad)
(bad)
jl
fadd
xchg
scas
or
or
xor
adc
xchg
jmp
sub
je
sbb
xchg
cdq
push
(bad)
imul
gs
xchg
xchg
adc
cmps
scas
ds
xor
push
pop
mov
jle
inc
ret
mov
mov
xor
or
push
push
inc
or
in
jp
add
pop
fisub
in
or
dec
int3
ror
cmp
sub
pop
je
adc
push
popa
sub
xor
xor
lds
and
adc
pop
xor
jl
std
mov
pop
iret
aad
mov
imul
(bad)
mov
imul
push
sti
in
bound
ins
fwait
mov
rcl
test
or
pop
or
js
std
inc
sti
mov
dec
js
out
pop
lahf
pushf
call
cmps
jnp
das
(bad)
rcr
add
pushf
mov
mov
lahf
sub
call
pop
mov
push
ins
cld
in
jo
sub
sub
sub
mov
sti
push
cmp
(bad)
and
movs
jg
mov
and
test
adc
jge
add
retf
in
test
outs
js
scas
push
lock
icebp
pop
jb
aam
int
mov
pop
adc
iret
mov
xchg
sub
mov
dec
sahf
inc
mov
test
push
jp
sbb
inc
pop
cs
stos
and
sbb
mov
push
or
lods
inc
ja
xor
popa
icebp
not
cmp
int
or
aad
std
rol
dec
dec
(bad)
lea
or
aaa
jae
in
inc
pop
jbe
dec
sub
popa
fidiv
push
and
out
mov
or
ja
and
test
lock
xchg
shl
int
stc
int
shr
popa
cmp
pop
scas
repz
in
sahf
arpl
and
outs
mov
sbb
xchg
push
jp
push
inc
jl
mov
jns
inc
jmp
in
and
add
icebp
int
test
mov
mov
dec
cmc
mov
rdmsr
jb
aam
lods
or
push
in
icebp
mov
sbb
(bad)
fbld
mov
cmps
jecxz
or
dec
pop
xor
add
add
cmp
cwde
lods
in
rcr
mov
xchg
aam
mov
push
rol
(bad)
sub
jp
std
rcr
ds
dec
push
call
jbe
int
jns
adc
pop
jp
sub
xlat
cmc
inc
dec
int3
xchg
(bad)
loope
xchg
mov
sub
sub
push
(bad)
loop
dec
icebp
imul
inc
push
sbb
or
add
push
dec
sbb
out
mov
mov
cmp
add
adc
mov
(bad)
xor
ins
push
xor
sbb
adc
jmp
add
adc
mov
jbe
jecxz
subps
(bad)
pop
ret
jmp
in
out
inc
imul
push
xor
jmp
dec
cdq
std
xchg
pushf
in
lahf
xchg
jno
adc
push
sti
hlt
ja
aad
jle
mov
fadd
retf
jbe
mov
data16
inc
ins
fsubr
xchg
push
adc
adc
inc
in
mov
fcom
push
xchg
add
mov
xor
(bad)
cmp
fimul
mov
loopne
retf
fxch
add
push
addr16
(bad)
ss
cmps
stos
into
jnp
test
int3
jo
fist
andps
xchg
mov
pop
loope
ds
add
sub
je
push
ins
push
dec
mov
lea
push
cdq
cli
test
push
cmp
mov
jb
test
test
test
jb
mov
and
cmps
mov
cmp
dec
(bad)
fist
dec
pop
mov
fild
xchg
xor
cwde
pop
sbb
mov
in
(bad)
push
push
mov
add
push
pop
xchg
mov
xchg
mov
in
sub
cmc
ror
arpl
int3
or
outs
mov
rcr
inc
(bad)
jbe
jge
enter
xlat
dec
adc
aam
mov
mov
mov
xchg
lahf
push
movs
aas
or
call
push
call
mov
cmps
mov
loop
stos
cmp
lea
or
pop
div
es
dec
fdiv
stos
pop
jle
cmps
fwait
cmp
mov
jp
je
xchg
fwait
imul
cmp
imul
call
push
idiv
mov
arpl
in
arpl
mov
mov
jo
dec
sahf
push
xchg
cld
push
out
xor
inc
cdq
dec
lds
in
(bad)
sti
out
push
popa
gs
std
aaa
popa
(bad)
mov
and
outs
mov
adc
and
mov
lea
xchg
push
fbstp
nop
lahf
jbe
cwde
mov
push
add
in
jmp
sahf
aaa
ins
xchg
sub
or
cmp
xor
leave
xchg
loop
push
test
mov
lock
mov
stos
rcr
or
std
push
in
add
std
adc
test
sub
xor
jae
lds
fs
lock
or
mov
push
loopne
cmp
mov
les
(bad)
test
movs
sub
pop
sub
mov
adc
or
sub
and
xchg
pusha
rcr
push
(bad)
in
mov
fcom
inc
out
dec
or
lods
fistp
test
rol
or
lods
xor
cmp
adc
and
or
test
mov
push
imul
adc
pop
jge
arpl
sub
dec
adc
cli
iret
sahf
jmp
cmp
rol
jmp
mov
inc
repz
les
inc
leave
xlat
xchg
fwait
les
push
add
loope
mov
cmp
jo
xchg
popf
ja
jno
jge
aad
call
ret
or
mov
cmp
pop
int
inc
push
inc
rcl
imul
push
outs
lods
mov
mov
retf
pop
das
jle
mov
jg
les
ror
loopne
mov
lods
inc
cmp
adc
xor
pop
xor
cmp
ret
ins
mov
in
sub
ret
out
jg
test
fdivr
xchg
frstor
outs
je
call
and
cmp
in
(bad)
sahf
in
test
cmp
pop
cmp
imul
sub
test
push
outs
pop
daa
ficom
pop
cmp
test
outs
xor
rcl
push
push
call
shl
mov
jb
(bad)
(bad)
pop
outs
ret
mov
mov
movs
xchg
inc
sbb
movs
sbb
cmp
cli
mov
pushf
sbb
pop
cmp
fistp
and
mov
dec
and
arpl
leave
cdq
(bad)
arpl
push
pop
mov
in
jmp
and
sbb
div
cli
xor
jl
aaa
stos
ret
sbb
mov
push
push
int3
push
bound
std
cdq
mov
inc
in
xor
shl
lock
rcl
dec
xchg
adc
mov
adc
inc
ins
call
or
arpl
mov
in
int
outs
jo
jecxz
js
shr
aad
nop
xchg
mov
push
lea
arpl
in
pop
and
outs
xor
cmp
sub
add
pusha
cmp
jo
mov
jle
neg
sbb
xor
lea
push
sar
add
sbb
inc
aad
pushf
jb
stos
lea
(bad)
mov
int
mov
jmp
stos
adc
adc
mov
cmp
or
nop
dec
ret
in
xchg
int3
icebp
add
imul
out
ins
xor
xor
push
jne
(bad)
sar
lods
sbb
jmp
jg
jo
mov
repz
dec
pop
cmp
es
cmp
mov
mov
jne
jmp
out
call
rsqrtps
jb
dec
or
add
loop
adc
rcr
addr16
xchg
lahf
pusha
outs
sub
mov
in
int3
adc
and
fs
call
xchg
(bad)
rcr
jge
test
dec
sub
push
jno
outs
sbb
mov
mov
retf
fiadd
ret
and
sar
loope
popf
je
std
icebp
in
(bad)
fcom
push
loopne
aas
mov
sub
cmc
(bad)
(bad)
pop
jle
stos
mov
pop
mov
cmp
push
mov
or
add
jb
sti
mov
mov
mov
and
and
jb
bndstx
jo
repnz
adc
adc
mov
jp
lods
lahf
mov
js
daa
sub
fst
lahf
js
cdq
jle
xchg
xlat
call
pop
or
mov
push
pop
mov
jecxz
push
or
and
xchg
push
gs
addr16
inc
fsubr
(bad)
test
sbb
jmp
xor
and
ins
sbb
sub
mov
xchg
inc
call
mov
push
jbe
adc
sub
popf
add
xchg
es
or
ud2
imul
jmp
push
add
jne
dec
aaa
or
mov
int3
in
vpcmpgtw
push
pop
inc
sbb
adc
jno
and
cmp
adc
mov
jo
or
xor
sub
daa
dec
inc
push
test
cmp
pop
and
daa
pop
cmp
xchg
add
call
aad
sub
sub
dec
xchg
and
inc
push
xchg
shr
mov
adc
dec
or
popa
mov
hlt
int
into
xchg
nop
lahf
mov
imul
xchg
pop
(bad)
jmp
stos
mul
repnz
out
mov
push
push
cmp
pop
(bad)
push
in
dec
cwde
daa
dec
sahf
mov
inc
xchg
paddsw
mov
or
xor
gs
stos
std
adc
push
mov
shl
and
mul
jmp
fsub
test
jae
adc
add
add
cmps
out
jne
shr
mov
jmp
outs
mov
fnstenv
sahf
bound
push
jmp
mov
out
rol
xchg
pop
inc
lahf
mov
xchg
adc
call
inc
mov
cmps
out
out
dec
dec
jl
aad
div
push
lock
xor
and
mov
jl
xchg
push
sar
cmp
(bad)
pop
bnd
adc
cs
aam
sub
lods
xchg
pusha
push
shl
rep
inc
inc
lds
daa
sub
jb
or
adc
or
dec
cmp
sar
addr16
or
shl
push
stos
fwait
inc
lods
mov
and
cmps
outs
movs
(bad)
test
mov
je
shl
push
cld
ror
bound
ds
sbb
mov
test
in
in
test
fsub
xchg
stc
neg
in
lea
push
and
jl
aam
aas
jmp
fstp
pop
aam
cmp
or
adc
or
dec
sahf
pop
mov
cmps
(bad)
jno
mov
les
xor
and
in
dec
loope
or
call
ja
sbb
mov
or
loope
ins
repnz
sbb
adc
loopne
mov
mov
rcr
lahf
stc
or
pop
xchg
sbb
mov
push
jne
pop
fild
xor
loope
sbb
adc
in
adc
xor
and
and
into
cmp
mov
adc
pop
mov
retf
mov
mov
outs
jb
loop
or
inc
ret
xchg
ds
jmp
retf
lahf
fprem
das
(bad)
fcmovb
in
jo
lods
loope
aam
cmp
dec
cmp
push
push
jp
rcl
ret
mov
pop
pop
pop
retf
pop
add
aas
ja
pop
fs
lock
xchg
xor
push
loopne
or
push
dec
pop
call
sbb
in
leave
sar
jb
call
(bad)
jo
jge
jmp
pop
ss
arpl
aaa
jne
sbb
sbb
iret
iret
mov
cwde
outs
stc
jecxz
cmc
push
out
int3
mov
test
cwde
jp
aas
mov
sbb
lds
pop
jle
xchg
dec
mov
cmp
cmps
adc
mov
mov
or
js
repnz
retf
xor
lock
sbb
push
popa
add
push
fstp
hlt
mov
call
jp
rol
(bad)
xor
mov
adc
(bad)
cmp
and
jecxz
jae
sub
and
in
les
xchg
fwait
mul
stos
outs
aas
sub
call
jecxz
test
out
int3
call
pop
dec
test
mov
not
ins
(bad)
loopne
sti
outs
imul
pop
pxor
and
ins
mov
out
sub
mov
shl
or
add
outs
xchg
test
into
jecxz
xor
sub
out
test
mov
cmps
cmp
gs
xchg
dec
fwait
into
fcmovne
aam
ins
shr
cmp
call
cmp
mov
sbb
loope
sar
clc
(bad)
mov
xchg
jmp
cmp
xor
mov
push
adc
jns
mov
sar
stos
cmp
mov
fs
les
ss
das
nop
int
jmp
cld
cli
fld
dec
cmps
mov
imul
jb
mov
jg
ror
cli
jae
push
xchg
hlt
add
ret
pop
popf
daa
pop
pop
retf
idiv
cmp
cmps
inc
ror
stos
ja
pop
cld
inc
(bad)
fldenv
(bad)
je
retf
mov
or
push
cmp
jmp
mov
lods
call
cwde
push
mov
or
ja
pop
mov
add
iret
push
mov
lock
fadd
and
popf
mov
pop
and
loope
cdq
(bad)
push
jmp
out
xlat
xchg
sub
fist
movs
push
and
xor
jp
stos
push
mov
mov
mov
adc
jno
cmp
sti
or
or
mov
adc
adc
mov
add
jl
push
xchg
add
(bad)
or
nop
cli
cmp
cli
je
and
pop
xlat
mov
popa
daa
lahf
(bad)
dec
inc
addr16
fadd
add
ret
jg
inc
clc
mov
cmp
test
xchg
jnp
movs
and
jl
pop
fild
out
adc
and
jo
div
mov
ins
leave
sub
cs
mov
or
push
pop
fmulp
adc
add
push
lods
imul
xchg
xchg
outs
dec
fs
xchg
pop
enter
movs
or
sbb
sub
das
js
mov
js
push
xchg
jge
out
pop
mov
add
add
cmps
jl
sbb
mov
add
das
lea
rol
loop
enter
fst
xor
ror
mov
dec
rcl
lock
adc
cmp
ds
dec
xor
lds
ret
xlat
inc
ss
out
test
push
scas
or
jb
and
out
add
inc
adc
adc
and
les
test
adc
fs
shl
or
sub
daa
lods
in
or
retf
addr16
lods
xlat
lahf
mov
in
add
retf
gs
imul
dec
sbb
js
rcl
loope
dec
adc
rol
fidiv
mov
fst
xchg
ror
sbb
mov
push
pop
fidiv
sub
imul
xchg
cmp
cmp
mov
lahf
popf
push
movs
mov
adc
mov
es
push
sbb
jmp
jne
popa
mov
sbb
push
jns
cs
mov
and
pop
mov
sbb
aad
dec
mov
imul
(bad)
shl
scas
out
hlt
xchg
add
inc
and
in
pusha
idiv
push
(bad)
int
outs
ror
movs
mov
cdq
dec
jmp
sub
outs
fs
test
je
addr16
jnp
pop
and
or
ror
mov
xor
clc
xchg
sbb
out
pop
aam
into
repz
pop
shufps
retf
sbb
cwde
pushf
sub
cmps
lds
neg
ret
int3
shl
mov
test
push
in
jb
sbb
pop
mov
push
out
stos
jae
mov
cmp
(bad)
dec
(bad)
into
div
ds
ds
and
push
aad
and
push
cmp
add
pop
repz
int3
lods
fwait
(bad)
push
jmp
arpl
loope
and
push
out
inc
aaa
xchg
xchg
or
or
scas
xchg
sar
push
scas
push
(bad)
inc
je
sub
push
mov
push
mov
retf
fnstsw
(bad)
int
or
jge
jnp
dec
add
shr
and
cwde
xor
mov
(bad)
cmp
out
inc
adc
cdq
ret
add
test
or
jg
jo
push
cmp
movs
ds
loop
dec
pop
push
aam
(bad)
std
xchg
mov
mov
mov
mov
mov
loope
or
(bad)
clc
pusha
push
push
xchg
pop
fstp
pop
xor
sbb
pop
sub
in
sar
rcr
and
add
or
mov
out
loope
(bad)
stos
mov
xchg
push
cmp
stos
inc
dec
xchg
jae
pop
mov
xor
jg
adc
repnz
js
stc
mov
cld
arpl
xor
jnp
aad
out
ds
dec
movs
ins
pop
out
ins
fisubr
jp
hlt
xor
int3
and
xor
mov
rcr
add
mov
pushf
stos
test
lods
mov
retf
out
les
jnp
rcr
jmp
dec
pop
fs
(bad)
and
(bad)
enter
test
test
sub
push
jl
call
popf
ins
mov
mov
mov
popf
call
ins
lods
pop
imul
and
jle
dec
jno
sbb
pop
ja
test
or
mov
fcmovnbe
dec
adc
dec
push
js
pop
(bad)
dec
cdq
enter
scas
push
scas
xchg
xor
add
push
out
pop
nop
push
out
nop
addr16
push
push
dec
sbb
mov
mov
xchg
and
add
xlat
aad
and
jge
rol
(bad)
in
adc
dec
dec
mov
jbe
retf
xchg
xlat
js
mov
mov
or
sub
inc
sbb
pop
jnp
or
out
pusha
xchg
fld
dec
out
stos
fwait
(bad)
leave
jae
sahf
cli
inc
jb
mov
adc
add
std
push
repz
mov
or
sub
pop
mov
adc
fistp
dec
xchg
dec
mov
test
push
mov
aad
push
pushf
mov
mov
int
call
scas
mov
lds
(bad)
cmp
push
mov
fist
jno
pop
or
(bad)
push
jae
ret
pop
ins
adc
add
cmp
mov
xor
or
movs
add
enter
inc
(bad)
push
movs
jbe
psraw
loopne
cmc
mov
es
or
repnz
cmp
jne
mov
xor
sub
sbb
pop
and
and
pusha
sbb
xchg
add
ret
pushf
hlt
xor
mov
jmp
cmc
mov
dec
sbb
test
in
iret
repz
cmps
js
dec
ss
shl
push
inc
adc
pop
out
test
pusha
jnp
mov
daa
or
inc
ins
add
cmp
fwait
mov
lock
and
pop
shl
pop
movs
neg
ins
ret
es
sub
repnz
adc
dec
push
int
ins
xchg
in
es
push
rol
fnstcw
jno
adc
out
push
add
mov
call
enter
pop
adc
enter
inc
fst
mov
fcom
and
cwde
xor
jne
jo
cmp
cs
xor
pop
bound
inc
popa
pop
adc
xchg
jb
out
icebp
sti
jmp
push
sar
push
add
pusha
push
cli
nop
ror
pop
dec
mov
stos
sbb
jg
pop
jns
enter
dec
or
es
ins
es
push
add
xor
xlat
hlt
push
(bad)
mov
mov
mov
shl
fucomp
and
inc
data16
sbb
adc
test
popf
test
call
cmps
cmp
jmp
sbb
or
fiadd
stos
cmp
test
inc
inc
cmp
pop
retf
js
sub
mov
cmp
call
jp
je
int
(bad)
out
test
into
iret
stos
cdq
sbb
shr
hlt
pop
in
xchg
movs
lds
sub
add
scas
cmp
fsubr
pop
rol
jge
adc
sbb
aad
sub
adc
mov
dec
sbb
hlt
ret
out
pop
dec
adc
push
aaa
ins
out
cmp
(bad)
mov
and
add
mov
dec
lods
xor
cdq
pushf
push
daa
in
xor
loop
std
mov
adc
push
cld
push
or
dec
cmp
jge
lods
mov
loop
lods
pop
jnp
fcos
lea
ins
xor
outs
daa
out
push
test
lods
fnstenv
add
sub
push
fistp
jnp
xlat
mov
jge
mov
aaa
or
mov
imul
mov
test
iret
ja
sub
(bad)
or
icebp
scas
or
hlt
mov
xor
push
(bad)
mov
rol
test
scas
loop
rcl
and
mov
bound
add
push
les
add
addr16
or
fs
lds
psrld
cmp
jae
ss
shl
inc
and
cmp
sub
cmp
sbb
movs
mov
push
sbb
ins
mov
jl
jbe
fucomp
ror
sub
popf
sub
imul
je
lock
cs
(bad)
cmps
es
aad
push
mov
xor
sub
sbb
or
inc
les
cdq
and
ror
and
lahf
cmp
mov
je
jno
adc
imul
jb
(bad)
xchg
sbb
jp
mov
mov
mov
dec
cmps
mov
pop
mov
or
xchg
mov
int
aas
and
js
push
nop
inc
out
sub
aad
out
js
dec
(bad)
pop
fldcw
jl
lock
test
mov
outs
xchg
in
rcl
gs
mov
xchg
push
xor
int
sub
push
into
sbb
mov
push
dec
add
sbb
jmp
pop
in
add
cld
mov
rcr
mov
inc
add
and
repnz
cmps
leave
mov
add
ins
pushf
pop
test
lods
mov
ins
mov
mov
daa
movs
xchg
mov
jne
xchg
cmp
lea
and
cmp
adc
dec
inc
pop
mov
stc
std
adc
in
pusha
jle
adc
pop
into
jne
dec
inc
loop
cmp
push
out
enter
pop
fst
xchg
dec
retf
and
(bad)
(bad)
and
inc
mov
jns
push
test
and
mov
into
inc
mov
pop
(bad)
or
jl
mov
jg
lds
jmp
inc
into
das
cmp
push
xchg
gs
popf
(bad)
enter
jle
popa
dec
aaa
mov
sub
or
pop
out
movs
ror
lahf
pusha
pop
adc
cmp
mov
mov
mov
mov
jns
scas
loope
fmul
sbb
bound
mov
jp
daa
mov
jno
clc
in
lea
xchg
mov
and
add
push
repz
iret
cwde
cmp
push
shl
adc
hlt
shl
int3
xor
inc
adc
repz
aaa
call
xor
lods
js
add
adc
test
pop
arpl
and
iret
jmp
fsubr
mov
and
fcmovu
lock
hlt
int3
cmp
dec
jmp
push
and
xchg
inc
push
adc
cmp
shr
jmp
ret
fld
jno
in
inc
jge
movs
inc
push
sub
(bad)
pop
mov
clc
cwde
pusha
shl
rcl
cmp
into
data16
clc
mov
push
and
loop
xchg
xlat
xor
jge
(bad)
cdq
sub
sub
or
(bad)
sbb
mov
dec
cld
jmp
xchg
lahf
push
cmp
adc
xchg
(bad)
xchg
out
sub
cmp
jle
inc
shr
bound
inc
outs
fmul
jbe
scas
jl
push
sub
adc
push
imul
test
cmp
adc
lahf
cmps
repz
ja
gs
arpl
xor
sbb
fisubr
imul
test
sub
loop
(bad)
adc
or
aas
xor
sbb
pushf
pop
psubusb
idiv
mov
and
jl
in
and
adc
repz
mov
xor
push
out
js
fdiv
xor
in
(bad)
sub
adc
enter
or
loope
inc
jge
lods
mov
mov
jb
call
xchg
push
xchg
popa
lock
jnp
adc
cmps
push
push
mov
lahf
ret
and
cs
and
jo
cmp
add
and
test
pop
in
and
(bad)
aad
bound
xor
jb
in
stos
cwde
inc
(bad)
jl
je
inc
jg
das
shr
cmp
jge
(bad)
call
cmp
pusha
or
in
lea
lea
inc
repnz
ins
sahf
into
repz
dec
jg
in
addr16
shl
fcom
push
lods
fcmovnu
jne
mov
out
push
mov
retf
sub
icebp
inc
and
shl
call
data16
mov
outs
push
std
jbe
pop
add
call
rsm
data16
inc
adc
outs
adc
jmp
inc
pushf
pop
adc
mov
mov
hlt
mov
sbb
add
pop
call
cmc
mov
adc
jl
jecxz
push
jecxz
jae
test
(bad)
call
sbb
inc
push
push
pop
adc
mov
out
add
adc
int3
lods
jns
mov
mov
call
mov
clc
sub
mov
sub
or
stos
fidiv
adc
cs
jne
push
cmp
aad
cli
add
cli
stos
xchg
sar
cmp
cmp
leave
cdq
push
cs
pop
call
scas
jnp
iret
add
in
adc
nop
cwde
sub
call
les
scas
sub
push
mul
not
lock
jmp
cmc
sub
aaa
jno
imul
neg
and
jmp
aas
ds
and
pop
out
imul
pop
xor
cmps
scas
daa
inc
aaa
jp
imul
pop
cli
jno
pop
mov
mov
sub
aaa
enter
sbb
mov
xor
(bad)
cld
int
and
or
stos
cwde
sub
pop
and
or
arpl
mov
div
jno
xor
dec
data16
mov
fild
test
mov
mov
jge
xchg
sahf
adc
movs
mov
ficom
push
movs
sbb
inc
mov
shr
das
adc
fst
lods
mov
ins
cmp
jne
ret
fcomp
outs
or
pusha
or
imul
cmp
cli
and
scas
dec
pop
dec
mov
fmul
retf
prefetchw
sub
inc
push
push
pushf
fist
push
add
push
sbb
in
pop
(bad)
(bad)
fisubr
bound
ja
cs
xchg
test
jl
jg
icebp
add
jg
sub
xlat
cdq
rol
(bad)
into
pop
retf
les
mov
and
sbb
imul
mov
mov
and
mov
ss
add
adc
hlt
stos
addr16
push
les
lds
mov
int3
jecxz
mov
test
into
adc
popf
gs
outs
mov
pop
mov
dec
mov
jnp
popa
sub
xlat
inc
push
call
shl
mov
fisubr
lds
xchg
push
not
pop
retf
mov
popf
sub
push
neg
xor
push
sahf
je
push
retf
add
jecxz
adc
ret
or
adc
ins
jg
imul
jb
sbb
cwde
and
aad
loope
xor
(bad)
jnp
jmp
retf
call
dec
xor
xchg
xchg
repz
lds
mov
daa
sahf
fldcw
mov
or
data16
and
outs
jne
jne
test
cmp
(bad)
sti
pushf
and
lods
pop
mov
and
pop
bound
xchg
or
dec
imul
xchg
cli
mov
rcl
push
pop
cmp
fwait
jbe
mov
adc
sub
lods
push
sbb
and
out
ins
and
ja
cdq
jne
sahf
or
or
inc
fimul
pop
mov
inc
or
xchg
mov
and
inc
jp
jp
mov
gs
mov
sbb
or
movs
in
nop
mov
jb
pushf
pop
mov
jmp
adc
mov
xchg
mov
adc
push
jns
xor
cs
loope
fisubr
int
sbb
mov
cld
pop
adc
xor
add
xchg
mov
and
mov
or
stos
add
sbb
mul
movs
xor
pop
jecxz
les
pop
shr
hlt
and
lods
sub
cmp
das
enter
xchg
cmp
stc
shl
xchg
sbb
out
sbb
push
retf
xchg
adc
inc
adc
adc
push
xor
call
push
jmp
test
jne
adc
xchg
int
mov
call
dec
hlt
bnd
cmps
ja
mov
imul
cs
and
fld
addr16
pop
les
stc
mov
jle
mov
and
ds
push
adc
(bad)
adc
pop
aam
pop
in
push
pop
push
push
mov
and
scas
add
sub
push
push
pushf
enter
call
add
mov
les
imul
call
out
fisubr
ds
push
enter
and
push
and
xchg
jbe
push
leave
(bad)
shl
jb
ret
in
sbb
xchg
pop
movs
(bad)
mov
mov
add
lods
push
push
jb
mov
mov
(bad)
aad
jle
scas
adc
(bad)
pop
jns
add
lds
in
xchg
ins
jp
sub
pop
std
mov
pop
push
aam
out
adc
aas
sti
push
sub
cmc
dec
sti
cdq
dec
nop
fcomp
inc
inc
mov
and
mov
jnp
push
xor
push
pop
(bad)
lock
push
jns
dec
scas
sti
xchg
ret
pop
cdq
div
add
idiv
mov
enter
pop
sub
cmps
std
or
ja
jmp
scas
jg
xchg
xlat
fistp
mov
ja
cmp
mov
push
pushf
inc
shl
ds
cli
xor
push
scas
xor
cs
adc
sar
sub
fcmovnb
imul
dec
clc
sbb
jae
mov
int
std
hlt
and
sub
cmp
inc
shl
mov
jbe
movs
jl
add
sar
sub
xor
clc
xor
aad
pop
pop
shl
dec
daa
cmps
repz
call
inc
neg
in
adc
aam
scas
sar
pop
xchg
inc
sub
movs
data16
lods
sub
mov
or
push
nop
dec
mov
mov
mov
not
pop
xor
xor
dec
mov
out
mov
ja
jno
jmp
xchg
and
mov
pop
mov
jae
out
dec
imul
mov
test
add
sub
daa
dec
and
dec
enter
sbb
aas
fild
ins
xor
call
std
inc
xor
into
stos
icebp
stos
inc
sar
jb
stos
out
lahf
je
xchg
push
mov
das
and
repz
jl
inc
mov
outs
mov
mov
push
scas
fistp
sbb
mov
inc
or
int3
xchg
fild
pop
fimul
addr16
cdq
aaa
loope
cmp
mov
mov
or
push
inc
cld
jb
sbb
movs
out
inc
lods
jb
push
les
shl
lods
push
jle
pop
adc
call
popf
pushf
sub
push
fstp
dec
mov
jmp
ja
int3
xor
fwait
xchg
lods
icebp
ret
and
and
xchg
fadd
or
push
dec
fwait
xchg
call
mov
(bad)
lds
mov
fisub
jmp
lock
cmovo
ss
cs
mov
mov
int
and
lods
fidivr
jle
xchg
mov
or
pop
sub
dec
mul
ds
cmp
dec
dec
ss
sar
in
mov
das
or
pop
(bad)
(bad)
mov
push
and
rcl
movs
lds
pop
pop
push
ins
mov
pop
sbb
push
sbb
int3
fsubr
sbb
pop
mov
test
xchg
js
cmp
sbb
int3
cmp
cmp
and
mov
xchg
mov
das
sub
sbb
fbstp
inc
dec
mov
scas
es
shr
fdiv
call
xor
and
adc
outs
mov
or
fwait
mov
xchg
test
es
and
sbb
mov
lds
inc
or
mov
xchg
rcr
lods
in
sbb
pop
gs
lods
jne
enter
inc
mov
pop
cmc
mov
push
lahf
inc
pop
dec
mov
gs
inc
sbb
mov
jo
fcom
aas
xchg
mov
xchg
icebp
jmp
test
pop
loope
xchg
pop
aaa
fwait
mov
(bad)
jmp
mov
and
cld
test
push
aad
pop
imul
pop
into
repz
inc
outs
pop
fwait
jp
adc
xchg
and
int
sbb
jg
mov
mov
(bad)
stos
add
mov
cmp
sahf
out
in
out
jg
cmps
adc
mov
sub
fwait
stc
inc
xchg
sahf
in
loopne
cmp
mov
xchg
push
xlat
or
push
(bad)
iret
ins
xor
and
(bad)
in
into
mov
xchg
mov
cmp
adc
pop
dec
push
movs
fild
jae
inc
rol
mov
in
push
dec
inc
mov
(bad)
fwait
nop
mov
lds
cmp
loopne
mov
(bad)
push
add
mov
mov
test
sti
lds
repz
mov
push
adc
push
sub
call
shl
adc
mov
repnz
jb
xchg
cld
pop
scas
mov
mov
pop
test
in
fcmovne
mov
and
push
movs
fst
outs
cld
push
pop
jne
push
jecxz
in
jbe
pusha
mov
in
pop
movs
fcom
pop
dec
and
mov
fbld
and
imul
inc
cld
xlat
pop
mov
pop
lahf
mov
sub
inc
cdq
adc
int
loop
les
leave
mov
enter
aaa
mov
pop
imul
in
pop
je
push
inc
(bad)
int3
dec
inc
pop
fs
repz
mov
fistp
into
jno
loop
mov
xor
xchg
mov
lahf
push
loop
popa
inc
sub
push
dec
inc
xchg
mov
js
sahf
je
mov
mov
add
test
repz
jmp
cdq
and
push
mov
pusha
cmc
mov
rcr
push
outs
or
and
mov
adc
mov
and
cmps
mov
data16
cmps
ja
repnz
cli
sub
jle
retf
outs
fnstcw
add
xor
add
or
mov
jno
adc
rep
test
retf
xchg
retf
mov
ins
es
std
neg
ficomp
(bad)
xor
and
jmp
push
mov
mov
gs
sub
mov
stos
and
xchg
out
push
cmp
imul
loope
jg
adc
sub
jnp
rol
in
and
xor
int
clc
xor
cmp
ficom
adc
pop
scas
push
push
loopne
retf
fdivr
dec
jae
sub
ja
pusha
mov
or
fldenv
or
ds
sbb
mov
daa
cmp
adc
push
out
sub
scas
scas
xchg
push
std
sbb
(bad)
dec
ins
push
stos
jge
test
movs
add
test
mov
cwde
jl
xlat
int
dec
sub
push
sub
add
or
popf
retf
(bad)
outs
retf
scas
pop
adc
push
adc
inc
sar
lock
mov
scas
or
mov
arpl
pop
cmp
popa
xor
fucomp
(bad)
and
mov
loope
mov
retf
call
call
rcl
fdiv
jae
ja
dec
dec
imul
xchg
add
inc
ret
sub
and
mov
cdq
xor
mov
call
loopne
inc
movs
pop
lds
adc
popa
or
mov
sahf
inc
add
add
movs
outs
je
outs
mov
mov
mov
and
push
xor
mov
ret
dec
test
call
shr
push
hlt
loopne
mov
jecxz
(bad)
adc
(bad)
pop
cmc
push
jmp
push
leave
dec
test
mov
pop
mov
scas
pop
mov
dec
pop
cmps
das
int3
xor
sub
out
dec
(bad)
pop
outs
or
sbb
ror
adc
mov
xchg
lock
sti
ret
inc
shl
pop
call
jnp
out
or
push
inc
mov
lods
mov
retf
rcl
and
sbb
mov
xor
jle
sti
mov
sbb
add
test
jmp
and
fsub
test
add
leave
sbb
pop
mov
ins
imul
push
pop
push
mov
iret
movs
stc
jp
mov
iret
jne
add
repnz
dec
cdq
imul
sub
xchg
hlt
scas
jo
mov
adc
mov
mov
lahf
inc
inc
retf
(bad)
fcom
xchg
cld
hlt
push
sub
jecxz
mov
jae
mov
into
pushf
or
xor
add
xlat
adc
cmp
cmps
shl
mov
hlt
(bad)
mov
sub
iret
mov
mov
call
mov
mov
jbe
in
mov
call
ds
scas
cmc
pop
push
lds
sub
fwait
outs
mov
rcl
les
pop
out
add
enter
shl
jnp
movs
enter
cmp
pusha
add
je
dec
imul
fwait
mov
add
dec
and
cmp
into
(bad)
jle
jbe
sub
mov
ror
mov
push
call
push
sub
xor
mov
cmp
jge
add
fmul
aam
xchg
sub
sbb
imul
xor
dec
aaa
push
cmc
jle
js
cmps
or
adc
jmp
cmp
je
popa
cmp
push
push
jo
xor
inc
mov
push
mov
pop
(bad)
not
je
dec
int
sub
fld
shr
push
test
gs
(bad)
mov
dec
sub
mov
push
loope
arpl
ror
jnp
dec
push
xchg
outs
in
int3
dec
inc
sahf
js
adc
outs
push
jo
jo
dec
or
inc
or
xchg
xor
mov
leave
(bad)
je
mul
xchg
sub
cli
mov
pusha
mov
retf
das
bound
(bad)
jae
cmp
push
xor
ins
sbb
shr
add
fcomp
mov
add
in
jae
(bad)
mov
ficom
test
pop
xor
xchg
and
sar
pop
pop
fist
int3
mov
outs
or
jp
inc
dec
sbb
movs
dec
and
adc
jl
and
mov
add
adc
sbb
fstp
stos
ins
adc
dec
scas
xor
cmps
loope
push
xchg
jmp
stos
pusha
mov
jmp
jle
call
dec
icebp
push
(bad)
fwait
add
xchg
ja
mov
sbb
movs
stos
scas
les
mov
and
adc
dec
push
push
pop
mov
pushf
cs
sbb
and
outs
push
loope
mov
std
inc
jb
into
scas
inc
out
pop
pop
lea
sbb
mov
ret
xor
fs
(bad)
out
js
daa
xor
jmp
loopne
test
xlat
movs
repnz
cli
and
jg
ins
out
mov
xor
and
dec
adc
in
mov
loopne
mov
cmp
arpl
mov
aaa
xor
movs
sub
aas
jle
ror
ins
inc
out
inc
mov
pop
cmps
bound
mov
cmps
sub
or
loop
xor
popf
(bad)
lods
aam
in
cwde
xor
lock
xor
adc
rol
push
jmp
bound
lods
out
jae
fst
or
sahf
jmp
lods
adc
ja
sub
cmp
sbb
cmps
jmp
bnd
es
test
or
jne
leave
lods
dec
and
repz
dec
lahf
(bad)
js
out
xor
push
call
push
mov
lods
sub
jo
push
cs
push
ret
movs
mov
dec
inc
(bad)
jb
cmp
jl
repnz
xchg
aam
sbb
data16
adc
cdq
in
stc
div
les
ror
lahf
ins
ss
dec
inc
ds
inc
loope
xlat
ins
into
jmp
cmp
inc
jg
and
nop
jno
jmp
lods
cld
fmul
test
js
sbb
pop
in
add
jle
mov
xchg
add
dec
test
add
mov
adc
or
ss
mov
out
inc
mov
adc
sbb
mov
aas
push
mov
or
ret
push
cmp
push
mov
xchg
jns
cmp
dec
add
into
xchg
(bad)
pop
cdq
fsubr
leave
xchg
push
jl
cs
out
push
pop
rcl
xor
push
jle
call
xchg
pop
push
sub
leave
xor
(bad)
push
or
(bad)
in
or
gs
pop
retf
mov
fidivr
les
push
add
adc
mov
icebp
xor
cmp
mov
jns
sbb
mov
gs
adc
adc
or
mov
push
dec
add
adc
sbb
sub
pushf
dec
cmp
(bad)
int
test
sub
pop
push
mov
xlat
cmps
lods
xlat
jne
mov
xchg
or
sbb
push
mov
cs
sbb
fwait
dec
push
push
inc
or
into
push
(bad)
jp
in
adc
in
shr
pop
ins
pushf
mov
clc
out
nop
lods
arpl
mov
adc
dec
jecxz
dec
xlat
sbb
mov
and
scas
or
jno
pop
int3
test
sub
mov
adc
test
sahf
ja
frstor
push
popf
jp
ds
(bad)
test
mov
xchg
aad
jmp
clc
(bad)
(bad)
jnp
mov
lods
jle
div
or
(bad)
push
retf
test
pmulhw
xchg
sbb
mov
xchg
xlat
lahf
cmp
dec
dec
clc
jnp
bound
das
inc
out
jne
arpl
cmps
aas
push
inc
bound
into
mov
shr
push
vcvttsd2si
neg
stos
mov
inc
(bad)
test
inc
sub
out
mov
fidivr
gs
pop
into
ja
scas
mov
inc
iret
rcl
dec
(bad)
jmp
and
inc
add
and
mov
pop
and
pusha
fs
fimul
retf
pop
out
fwait
std
lock
(bad)
push
sub
mov
aas
pop
sub
sbb
rcr
out
inc
daa
mov
adc
xchg
cmps
adc
scas
add
adc
and
bound
sar
test
jns
sti
push
std
push
lock
out
pop
xor
and
sub
push
mov
adc
repz
inc
pusha
xor
sbb
sbb
push
(bad)
xchg
cmp
js
popa
mov
std
enter
pop
push
fcom
push
xchg
mov
inc
movs
aad
jge
test
jns
or
std
aam
jno
imul
cmp
retf
push
cmp
movs
cmp
and
sbb
inc
xchg
movs
mov
push
and
fdivr
jbe
mov
sub
scas
and
ret
cld
jo
sete
das
add
pop
ret
inc
leave
sahf
stos
inc
mov
pop
test
icebp
and
inc
les
ss
xor
loopne
jne
fs
cli
dec
(bad)
mov
sub
out
js
adc
inc
adc
push
popf
mov
adc
sub
mov
xchg
fist
pop
stc
out
(bad)
stc
cmps
lods
clc
cwde
inc
loop
mov
xor
lods
sub
and
pop
mov
(bad)
and
loop
push
mov
adc
xchg
adc
push
push
(bad)
inc
sahf
jbe
(bad)
jae
mov
mov
push
pop
iret
adc
sub
and
shr
ins
mov
mov
and
inc
mov
pop
imul
sbb
pop
or
xchg
out
mov
adc
or
push
jmp
test
push
cmp
add
out
mov
test
lods
cmp
cmp
pop
(bad)
lock
call
pop
fiadd
dec
jbe
or
dec
or
dec
and
ror
inc
repz
mov
jb
add
sub
(bad)
push
and
ror
adc
js
loopne
pop
push
popf
ret
xchg
aad
push
inc
add
and
rol
pop
sbb
adc
cmps
and
aam
test
pop
push
adc
mov
push
mov
je
retf
sub
cmp
sub
pop
lock
add
pop
inc
pop
lock
cwde
rcr
cmp
test
push
ins
pop
je
lds
data16
fcmovnu
xchg
bound
stos
mov
popf
jp
pop
jecxz
xchg
sub
ins
mov
call
xor
or
out
aam
push
push
jne
xchg
xor
pop
inc
fwait
push
das
mov
aad
pop
dec
mov
xchg
mov
add
lods
lea
shr
add
xor
dec
imul
add
stos
cmps
pop
inc
call
mov
pop
cmc
dec
call
cmp
retf
or
sbb
pop
mov
mov
sub
clc
call
inc
adc
pushf
sti
xchg
mov
(bad)
aad
pop
push
aas
pop
pop
or
pop
xor
pop
push
test
shl
cs
pop
inc
imul
loop
add
xor
jo
dec
(bad)
jmp
test
ins
(bad)
push
push
das
adc
dec
mov
fist
not
inc
add
dec
aam
in
jno
dec
(bad)
scas
lea
loopne
stos
lds
jge
add
fprem
ret
add
cmp
mov
lahf
in
in
or
iret
pop
inc
cmp
aad
lods
dec
and
jbe
imul
jnp
js
and
std
ret
sbb
dec
lds
ja
xchg
aaa
(bad)
in
inc
cmp
pop
sbb
mov
mov
cmp
arpl
sub
xor
retf
repnz
fs
hlt
mul
inc
dec
mov
push
mov
retf
mov
add
cmc
sbb
mov
repnz
test
and
or
bound
and
outs
shl
mov
push
adc
mov
jno
addr16
lock
add
cmp
dec
cdq
and
aas
loope
out
imul
xchg
loopne
into
ja
test
dec
mov
push
inc
js
push
and
movs
sbb
(bad)
in
stc
sar
jle
mov
sbb
push
retf
aaa
test
dec
popf
les
inc
and
or
xor
jle
(bad)
aaa
xchg
pushf
xor
aas
int
ret
clc
js
or
mov
(bad)
sti
fwait
sub
jae
mov
xchg
(bad)
xor
inc
mov
ret
cmp
jp
fdiv
cli
sub
nop
pop
mov
inc
and
mov
fsub
or
ror
(bad)
jmp
or
jbe
ins
dec
lahf
in
outs
daa
stos
stos
pop
fbstp
stos
and
add
fadd
dec
ds
retf
jg
icebp
pop
sub
mov
inc
sub
out
cld
ja
add
sub
frstor
mov
ss
cld
dec
loop
ror
lea
mov
cmp
adc
xor
mov
or
add
punpcklbw
adc
movs
cmp
mov
inc
bound
or
jmp
ja
mov
sti
jmp
adc
je
cwde
sub
scas
cmc
mov
div
iret
stos
xor
lahf
mov
outs
jo
aam
ins
fdivr
enter
(bad)
je
mul
mov
xor
jmp
fmul
mov
push
lods
(bad)
(bad)
jmp
inc
stc
xor
pop
lahf
xchg
dec
je
lds
xchg
mov
push
push
movs
sub
ror
in
jbe
dec
(bad)
retf
test
(bad)
fdivrp
jae
cmp
pop
and
push
xchg
test
jns
jmp
jmp
xor
lods
lods
ds
xor
xchg
stos
sub
jae
mov
xor
(bad)
out
test
mov
leave
dec
and
shr
and
sar
loop
(bad)
adc
add
test
jmp
arpl
xor
cmp
enter
adc
jno
xor
jo
lods
out
shr
pop
xchg
dec
mov
std
loop
inc
push
fs
push
icebp
and
jnp
mov
jno
stos
mov
cmp
dec
or
adc
setge
dec
es
mov
aam
imul
ret
mov
inc
out
mov
mov
je
(bad)
sbb
sbb
loop
mov
fidivr
jmp
lea
call
retf
pusha
clc
int3
jmp
repnz
stc
xchg
enter
add
xor
cmp
out
and
ror
test
or
dec
adc
jp
jl
icebp
in
lea
movs
jmp
lds
or
add
push
popa
scas
sub
add
cmps
push
mov
xchg
aaa
mov
bound
(bad)
loopne
data16
mov
or
mov
call
inc
mov
cdq
and
imul
inc
call
(bad)
mov
push
mov
in
mov
push
ja
aam
andnps
leave
dec
sbb
mov
loopne
sbb
mov
dec
and
mov
jns
pop
lock
idiv
es
mov
ins
and
sub
std
out
in
add
fiadd
pusha
and
aaa
or
xor
push
sub
fimul
imul
ficom
add
ret
dec
stos
sbb
sti
call
push
cdq
mov
add
jns
or
adc
scas
mov
jecxz
les
xor
sbb
push
and
dec
jge
mov
test
ins
pop
mov
cmps
ja
rcr
popa
jecxz
iret
jo
aad
add
mov
mov
sbb
mov
(bad)
movs
imul
popf
push
sub
adc
dec
pop
xor
dec
add
ins
retf
scas
ins
xor
mov
jne
inc
nop
mov
mov
xor
aaa
(bad)
enter
add
(bad)
adc
adc
and
mov
mov
cmps
pop
inc
sbb
push
xchg
inc
lahf
in
ficomp
fmulp
lea
push
inc
(bad)
cmp
lods
mov
movs
dec
mov
adc
fdivr
jl
sbb
xchg
cmp
stos
xchg
mov
imul
push
mov
adc
das
dec
mov
jno
imul
shl
inc
dec
xchg
mov
lock
outs
cld
jbe
loop
push
rol
(bad)
gs
stos
xchg
xchg
mov
add
mov
(bad)
jmp
outs
cld
adc
es
lahf
jge
xchg
cld
xchg
mov
or
push
cmp
and
iret
jge
and
mov
adc
jnp
sub
movs
dec
jp
xor
xchg
jg
cmp
mov
xchg
pop
std
mov
into
mov
add
xlat
popf
fild
pop
daa
mov
mov
xor
jb
mov
jp
mov
pop
push
lds
mov
mov
movs
(bad)
mov
jo
add
test
add
rcl
enter
imul
xor
fsubrp
test
xor
push
iret
call
call
hlt
inc
inc
addr16
xchg
pop
jbe
inc
popf
lods
xchg
(bad)
adc
movs
or
xchg
ret
or
ja
icebp
push
in
neg
push
mov
ins
adc
ja
cmps
sbb
push
jne
aad
jg
(bad)
mov
mov
outs
pop
add
xchg
loop
jb
out
aas
inc
pop
mov
mov
jne
jbe
gs
and
xlat
pop
je
lahf
nop
inc
leave
imul
pop
or
mov
stc
mov
and
jo
lds
pop
bound
add
(bad)
(bad)
in
mov
sahf
push
scas
dec
jae
pushf
fldenv
dec
ret
ins
ret
imul
jmp
mov
popa
rcl
je
jle
fld
fwait
mov
aad
jbe
sti
lods
rol
and
dec
movs
dec
sbb
push
call
sub
push
or
cld
jmp
lods
aad
loopne
mov
xchg
lods
jle
dec
dec
mov
enter
pop
into
fcomp
ja
(bad)
pop
test
fimul
ror
cld
cmp
ins
jge
or
mov
sbb
popa
cld
push
out
ror
call
inc
pop
outs
(bad)
jne
dec
adc
mov
daa
call
out
xchg
adc
mov
nop
mov
les
fld
jle
sub
push
ss
loop
ret
cmp
fsqrt
push
mov
push
push
sbb
dec
int
fisttp
lods
in
mov
rcr
pop
mov
pop
mov
stos
xor
fidivr
scas
inc
pop
jbe
cmp
cmc
ret
pushf
mov
or
jmp
mov
(bad)
inc
sbb
test
loopne
adc
mov
arpl
pop
(bad)
mov
sub
add
jle
aad
xchg
mov
sub
jecxz
and
loope
fwait
cdq
adc
mov
xchg
pop
nop
rcr
mov
imul
call
mov
addr16
jo
cmps
and
movs
inc
repz
mov
mov
arpl
cmps
cmp
call
cmp
adc
adc
fsub
fs
call
aaa
adc
sbb
stc
jnp
mov
mov
push
push
mov
ror
movs
fstp
daa
inc
xor
push
mov
shr
sti
mov
adc
nop
aaa
add
out
js
push
repz
test
xchg
push
mov
dec
pop
push
jecxz
xchg
loopne
or
js
into
sub
jmp
add
or
jae
mov
cwde
jmp
pop
lock
fwait
pop
xor
call
fbstp
add
cmp
mov
mov
nop
jnp
add
mov
push
xor
arpl
retf
cmps
test
fdiv
in
dec
mov
mov
out
xchg
mov
sbb
or
ret
mov
(bad)
mov
dec
mov
mov
push
repz
inc
in
or
sbb
xlat
push
ins
jnp
mov
fnstcw
jno
mov
rcl
shl
and
ret
sub
inc
and
mov
jb
fld
pop
xor
sar
adc
lahf
in
cmps
mov
and
push
mov
push
arpl
mov
inc
ins
out
cmps
aad
neg
xchg
fbld
pop
retf
ss
arpl
mov
leave
or
(bad)
mov
test
inc
ss
pop
(bad)
icebp
adc
mov
inc
andps
sub
inc
or
pop
jnp
cmp
ds
xchg
gs
mov
cmp
shl
add
lds
pushf
(bad)
push
(bad)
(bad)
ret
inc
(bad)
jle
lods
xor
fidivr
pop
mov
add
cmc
jg
mov
loop
push
or
adc
or
xor
add
sbb
rol
fdivr
push
pop
sbb
mov
lods
mov
add
and
jl
sub
jne
xchg
pop
addr16
and
xchg
shl
movs
adc
iret
sbb
xor
dec
sbb
pusha
jl
cmps
das
scas
adc
arpl
or
inc
bound
dec
adc
cdq
mov
jp
fst
push
out
test
jb
aad
(bad)
xlat
inc
jo
repnz
cmp
push
js
or
movs
add
fwait
mul
sbb
pushf
mov
mov
es
(bad)
sti
hlt
and
jbe
push
shr
mov
pusha
xchg
push
aad
lods
out
leave
mov
vpacksswb
stos
pop
cmc
repnz
adc
test
or
(bad)
loop
pop
out
call
or
dec
mov
xchg
test
adc
int
jp
inc
sub
test
mov
adc
stos
pop
or
jecxz
mov
mov
cld
shl
sti
dec
inc
mov
xchg
or
inc
inc
call
mov
enter
jne
mov
dec
jo
push
jnp
inc
fs
xor
lock
sbb
inc
dec
pop
sbb
rcr
inc
lds
(bad)
pushf
cdq
dec
pop
in
xchg
cmp
arpl
out
test
mov
jecxz
or
imul
inc
into
jp
rep
repnz
lods
popf
xor
xchg
shr
loopne
cwde
sub
mov
add
mov
lahf
sti
fwait
sub
retf
aam
and
sbb
pop
adc
cmp
lock
(bad)
(bad)
dec
ins
(bad)
sbb
(bad)
neg
or
jecxz
in
jl
jns
(bad)
loop
add
fwait
popa
mul
ficomp
imul
popa
cdq
out
dec
adc
push
cli
shr
or
push
and
nop
pop
inc
aam
out
rcr
out
cmp
jns
xor
or
mov
push
add
outs
xchg
jl
mov
dec
fisub
adc
mov
icebp
aad
mov
add
pop
ret
jl
aaa
ja
inc
dec
dec
jmp
in
stos
movs
in
popa
sub
fs
add
jp
xchg
inc
idiv
retf
in
(bad)
jecxz
lea
aad
push
jno
jno
int
adc
sub
pop
hlt
inc
mov
xor
mov
sti
mov
mov
dec
cld
sbb
inc
cmp
fcmovb
stos
xchg
frstor
das
xchg
jecxz
cld
mov
repz
cli
out
and
cmp
add
sub
pop
loop
push
dec
(bad)
ret
cld
and
shl
test
test
add
bound
cld
sahf
push
ds
aam
shl
push
adc
push
mov
and
outs
dec
or
mov
inc
jl
popa
mov
mov
push
push
mov
clc
sbb
mov
sbb
xchg
jmp
lods
pop
iret
in
jmp
sbb
fxch
xor
push
out
movs
ds
idiv
sub
push
jg
push
in
cmc
clc
jl
sbb
and
icebp
mov
dec
push
repnz
(bad)
cld
jns
ss
std
call
jl
mov
dec
push
imul
inc
sar
aaa
pop
mov
cmp
xor
inc
xor
inc
ss
fild
outs
clc
lods
xchg
loope
inc
outs
lods
mov
(bad)
xor
xor
push
mov
jbe
lock
aad
fistp
sbb
jno
and
inc
bound
adc
leave
push
xchg
cmp
adc
mov
adc
fidivr
dec
ss
inc
inc
xchg
or
xor
stos
push
bound
ss
test
xchg
test
cmp
pop
pop
hlt
outs
out
fdiv
and
pop
xor
or
movs
call
test
jmp
js
mov
aas
jmp
jmp
cmp
sub
mov
ins
add
mov
pushf
sbb
ror
and
ret
ficomp
sub
xor
xchg
push
mov
imul
dec
cld
sub
push
loop
rcr
pusha
adc
pop
dec
out
fadd
retf
xchg
xchg
mov
adc
lods
ss
xor
mov
fmul
sbb
in
sub
cdq
pop
jle
in
inc
in
xor
bound
or
vmovups
mov
xor
(bad)
adc
cdq
push
fldenv
sbb
dec
mov
xchg
push
push
retf
inc
sub
sbb
neg
jmp
push
mov
mov
(bad)
mov
push
cmps
pop
jno
cmps
add
cmp
das
pop
scas
fnstcw
(bad)
int3
enter
(bad)
jb
mov
inc
sar
xchg
es
in
mov
inc
mov
ja
retf
jecxz
repnz
ss
jmp
pop
and
sahf
fdiv
mov
std
push
mov
pop
jl
imul
fnsave
inc
sub
shl
pop
fstp
inc
mov
mov
mov
mov
neg
sbb
mov
inc
rcr
repnz
retf
retf
jbe
mov
sub
mov
fdiv
sub
pushf
ins
arpl
sahf
inc
xor
xchg
inc
dec
push
cmps
jbe
add
cmc
mov
cmp
dec
lods
imul
push
div
dec
std
mov
xor
lods
push
mov
mov
cmp
pop
fsubrp
aas
jmp
inc
push
jae
sub
test
mov
sub
faddp
jge
(bad)
outs
clc
and
cmp
mov
lea
int
es
sub
pop
repnz
test
and
adc
inc
bound
xor
push
loopne
cld
movs
pop
les
repz
mov
mov
pop
cmp
loopne
test
push
dec
fadd
aam
sbb
rcr
sbb
add
stos
jb
(bad)
scas
sbb
xlat
loop
repnz
sub
fdiv
loope
xchg
sbb
jne
daa
cwde
outs
jp
jne
out
xchg
(bad)
in
push
jecxz
pop
shr
dec
or
dec
in
dec
inc
retf
sahf
sub
cdq
rcr
mov
adc
sbb
enter
test
test
mov
push
call
mov
dec
xor
cmp
sbb
or
movs
sbb
sbb
ja
ins
push
pop
xchg
push
repz
pop
or
push
cmp
inc
cmp
rol
xor
inc
pop
dec
mov
ins
push
outs
sub
sbb
stos
mov
sahf
jno
pop
jecxz
mov
xchg
movs
iret
out
push
popa
push
retf
inc
cmps
pop
test
jl
add
mov
mov
and
adc
mov
sbb
std
jle
into
enter
jmp
jmp
fwait
xor
push
lock
pop
jmp
mov
daa
inc
jbe
aas
fwait
and
cmps
push
mov
pop
jle
cld
nop
mov
int
stos
mov
pusha
push
jne
stc
push
cmp
jge
out
xchg
pushf
cmps
bound
outs
mov
push
pop
add
push
mov
inc
mov
and
push
jg
xchg
push
repnz
cmp
sub
xchg
inc
jne
into
into
add
cmp
mov
inc
fdiv
xor
xchg
int
stos
add
je
xchg
ins
xchg
test
pop
push
sti
push
(bad)
fnstsw
stc
sahf
out
popa
je
sub
xchg
loopne
int
lahf
stc
adc
sbb
and
nop
leave
adc
xchg
sbb
xor
ds
fwait
inc
mov
dec
xor
les
test
or
test
inc
vcvtss2si
fucomip
hlt
and
into
mov
sahf
sbb
hlt
xlat
ficom
out
lock
adc
arpl
xor
mov
test
inc
add
and
ret
in
aam
sar
push
jle
xor
inc
test
mov
fs
mov
inc
out
aam
ret
cmp
pusha
mov
neg
ins
mov
mov
mov
loopne
retf
xchg
push
(bad)
ds
mov
in
push
test
test
int
pushf
pusha
stos
ss
jl
daa
cmp
pop
fs
dec
mov
imul
shl
nop
into
(bad)
mov
mov
cmp
push
cs
or
imul
sahf
mov
xchg
pushf
pop
jmp
jo
iret
inc
adc
dec
test
icebp
fcomp
daa
inc
xchg
inc
adc
pop
sub
out
or
sbb
xor
sub
or
pop
fwait
sbb
fist
fdiv
daa
mov
das
or
sar
dec
inc
(bad)
and
add
dec
cmps
fsub
cdq
(bad)
sti
rol
movs
sbb
daa
sbb
cmps
aas
cmp
pusha
call
fwait
xchg
mov
lds
mov
jb
sub
pop
fisttp
lods
and
bound
rcl
dec
leave
or
dec
es
aas
mov
or
mov
inc
rcl
push
xor
(bad)
mov
aas
iret
push
dec
std
int
inc
std
mov
pusha
adc
test
adc
or
loope
add
aas
les
cmc
xchg
call
fisubr
cmc
pop
mov
(bad)
data16
cmps
jne
pop
test
mov
pop
ret
iret
test
sub
test
inc
push
adc
or
dec
dec
push
mov
jp
in
mov
cmp
ins
mov
sbb
(bad)
push
jge
std
jmp
inc
push
push
dec
xor
sub
test
imul
or
loope
xchg
xchg
iret
cmps
adc
add
fsub
cmp
cmp
fistp
(bad)
jbe
and
add
fist
dec
cmps
sbb
add
lods
sbb
jnp
push
ins
ins
adc
nop
lods
push
shl
