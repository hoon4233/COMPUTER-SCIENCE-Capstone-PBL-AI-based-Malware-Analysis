mov
mov
push
push
mov
adc
sbb
cmp
lds
(bad)
mov
mov
and
les
inc
in
mov
xor
jge
add
xor
inc
push
call
dec
in
sbb
out
in
add
dec
in
pop
xor
dec
es
dec
lock
frstor
inc
mov
push
cmps
mov
pop
ret
int3
inc
inc
push
cwde
fist
add
in
fdivr
or
in
movs
imul
xor
stc
loopne
jo
mov
sbb
stc
dec
call
mov
pop
mov
add
push
push
or
sub
mov
push
sbb
cld
mov
mov
jmp
or
pusha
and
addr16
xchg
mov
jg
cld
xchg
cmp
and
push
push
lahf
mov
fild
fwait
lahf
push
dec
or
mov
add
xor
mov
mov
add
retf
and
neg
sbb
push
pop
pop
ret
jg
xor
push
add
sbb
xor
(bad)
and
sbb
jmp
add
or
mov
mov
mov
rol
test
or
jmp
out
or
ret
cld
or
pusha
int
dec
mov
add
ficom
or
js
int3
outs
arpl
add
jge
and
adc
std
arpl
or
dec
clc
je
and
loopne
add
adc
ins
clc
in
clc
shl
push
clc
jmp
jmp
mov
mov
or
add
int3
mov
add
jl
(bad)
add
lea
inc
xchg
or
or
add
call
scas
enter
and
in
add
enter
icebp
retf
fstp
or
cmp
fild
xor
lods
clc
mov
jbe
call
adc
ins
mov
sti
fwait
inc
dec
fcom
push
in
cmp
and
in
jnp
mul
ror
pop
dec
int3
adc
out
ins
imul
(bad)
(bad)
add
les
adc
fiadd
add
dec
sbb
or
or
pop
sbb
enter
or
in
add
lods
daa
or
and
adc
scas
adc
sbb
jo
shl
add
dec
aas
mov
imul
lea
sbb
or
not
mov
clc
loop
mov
cmp
je
and
xor
aad
aam
scas
push
cmp
or
ja
stos
dec
add
loope
cmp
pop
push
mov
or
aam
int3
repnz
scas
fidiv
nop
dec
pop
or
mov
outs
mov
xor
mov
inc
setne
test
jge
mov
mov
mov
scas
cwde
push
test
sub
add
(bad)
frstor
jne
int3
dec
or
inc
add
lahf
pop
sub
jne
jmp
call
stos
xor
cld
mov
hlt
add
cmp
push
(bad)
add
push
popf
xchg
push
push
daa
pop
je
mov
mov
fistp
push
mov
fcom
sbb
aam
inc
push
pop
or
push
mov
add
cwde
or
fadd
adc
xor
mov
sbb
adc
push
adc
lods
push
out
aam
test
aad
push
(bad)
shl
fstp
sbb
jnp
lods
or
pusha
sbb
fdivr
adc
adc
or
dec
add
sbb
xor
pop
ret
aas
cmp
xchg
or
or
jecxz
jg
add
push
xadd
dec
test
jg
jo
push
or
adc
test
out
mov
cmps
pusha
pop
push
push
push
push
adc
mov
mov
add
int3
movzx
test
je
mov
cmp
or
pop
mov
jmp
pop
popa
fsubr
pop
sbb
add
jmp
jb
dec
ret
or
cmc
pop
pop
pop
sti
xchg
push
mov
xor
in
pop
add
push
loopne
sbb
loopne
xchg
lock
xchg
adc
(bad)
jns
cld
adc
ror
pop
pop
xor
or
dec
add
into
adc
xor
sar
sar
sti
mov
mov
loopne
or
or
cmp
fstp
push
js
ret
jp
xchg
scas
add
iret
fsubr
push
mov
mov
jns
cmp
(bad)
lock
and
nop
and
je
mov
test
adc
js
add
jg
and
add
popa
adc
inc
nop
pop
int3
jo
and
test
add
cmps
aad
adc
or
loop
clc
and
sbb
ins
xchg
stos
or
pop
test
push
or
pop
out
and
adc
adc
mov
jb
add
add
sub
push
int3
sbb
mov
pop
push
lahf
inc
call
xor
test
push
in
call
adc
or
sar
jmp
(bad)
in
add
add
aas
pop
or
(bad)
mov
cmp
jae
outs
or
shr
and
jae
jecxz
mov
cmp
jne
mov
adc
out
mov
clc
jo
in
js
add
jmp
push
js
popf
xor
shl
bound
sbb
lds
sub
movs
push
das
cmp
pop
jp
dec
jne
inc
inc
mov
jle
or
jg
test
cld
xlat
(bad)
rol
adc
dec
mov
test
test
test
inc
ror
cli
push
sub
retf
hlt
add
adc
push
hlt
xchg
in
adc
inc
sbb
pop
adc
(bad)
ficomp
or
push
and
popa
add
ret
push
out
bound
inc
popa
ret
dec
or
dec
or
mov
or
mov
mov
dec
les
iret
mov
or
xor
ins
iret
cmp
mov
into
dec
loope
icebp
sub
inc
movs
xchg
rcl
dec
xchg
(bad)
(bad)
mov
mov
push
cdq
icebp
inc
loopne
push
add
in
mov
lods
and
pop
outs
inc
test
xor
retf
and
jl
call
sub
mov
jg
inc
add
call
pop
add
in
rcr
mov
push
test
cmp
sar
cmp
mov
aas
adc
jns
cmp
inc
sbb
inc
lds
pop
pop
inc
mov
cmps
shl
dec
lock
gs
push
and
lea
in
mov
inc
lahf
jge
or
aaa
xchg
cmp
je
mov
js
cmp
icebp
adc
int
mov
pop
inc
in
jae
push
or
inc
test
pop
je
cmp
sbb
add
in
fcom
or
add
or
mov
xchg
in
mov
jo
adc
jmp
push
pop
(bad)
sbb
sti
or
pop
js
sub
push
and
or
push
ret
and
imul
jmp
ja
push
xor
dec
pop
pusha
(bad)
xchg
or
pop
push
test
xor
add
inc
inc
out
ficom
in
lea
push
mov
int3
cli
pop
add
mov
mov
loopne
and
jecxz
fdivr
inc
mov
pop
addr16
sbb
adc
dec
sbb
dec
sbb
dec
movzx
pop
fst
fs
push
adc
sbb
adc
ret
cmp
jae
fld
xchg
sbb
add
push
iret
cmps
sub
adc
or
and
inc
jo
outs
xor
jmp
aas
rcl
data16
and
adc
and
jg
adc
inc
and
mov
cpuid
inc
xchg
pop
sar
add
fild
fcomp
(bad)
or
je
ror
mov
inc
or
cmp
sub
pop
dec
cmp
pop
inc
rol
or
inc
or
add
pushf
sub
push
rcl
push
pushf
jmp
mov
sbb
and
xchg
push
inc
xchg
push
aaa
pop
adc
jmp
dec
jne
xchg
mov
or
sbb
int
pusha
xor
or
adc
mov
pop
cmps
lea
into
movs
bound
fmul
or
ffreep
icebp
test
les
shr
pop
rol
cmps
lock
je
pop
(bad)
fisttp
push
neg
mov
fistp
cld
hlt
ret
push
inc
mov
aam
push
xor
inc
imul
stos
push
fistp
or
add
sahf
or
dec
mov
(bad)
clc
int
int3
mov
add
call
es
add
ret
test
call
pushf
ret
in
das
loopne
push
enter
call
ret
(bad)
call
inc
bound
add
mov
popa
popa
dec
shr
cmp
jae
pop
daa
sub
adc
inc
in
popf
es
sbb
push
and
add
sub
loopne
sbb
jo
(bad)
adc
mov
mov
pop
push
in
add
dec
int3
sbb
inc
and
lods
push
add
iret
dec
cmp
lods
sbb
add
jp
movs
xchg
ss
and
jge
mov
add
in
or
pop
lea
lds
outs
dec
call
out
cmp
cmp
mov
mov
add
push
aam
sbb
test
mov
pop
push
test
mov
lahf
outs
add
push
push
test
adc
movzx
inc
mov
or
add
inc
enter
(bad)
jmp
push
inc
(bad)
lods
mov
pop
test
mov
popf
aas
sub
dec
push
and
push
cld
mov
push
stos
loope
fisttp
sub
xchg
add
lahf
cld
pop
add
out
push
xor
jmp
jmp
mov
mov
push
pop
mov
lea
mov
cmp
jo
ret
out
push
xor
fld
jns
dec
in
fwait
xchg
inc
adc
adc
cmp
shl
es
shl
test
dec
aas
pop
pushf
ror
daa
xor
pop
lea
scas
pop
mov
(bad)
jg
(bad)
cmp
push
mov
add
std
hlt
es
sbb
add
jne
add
ficom
jae
aam
mov
in
add
xchg
sbb
sub
int3
aas
mov
je
ins
aas
aad
pop
push
repnz
xor
inc
inc
add
and
adc
push
leave
add
inc
pop
inc
mov
sbb
push
cmps
add
jg
push
sbb
pop
ret
cmp
or
adc
sbb
add
add
ret
cmp
mov
xchg
and
pop
mov
pop
pushf
sub
jmp
dec
or
and
inc
jbe
add
iret
test
jge
mov
and
icebp
add
mov
(bad)
xor
sbb
or
jmp
and
cmp
scas
jl
jbe
cld
lds
push
xor
or
test
js
mov
fwait
scas
xor
or
push
add
jle
addr16
or
lock
int3
jmp
loope
pop
shl
mov
push
sbb
add
ins
add
aam
jge
jo
and
mov
inc
mov
js
add
lahf
xchg
push
or
add
rol
jg
sbb
mov
jno
adc
and
mov
call
loop
pop
mov
xor
pop
mov
push
stc
test
adc
push
call
push
jmp
test
or
or
adc
dec
or
adc
cld
pop
icebp
arpl
adc
(bad)
icebp
and
push
add
cmovbe
inc
jg
cdq
sbb
fld
add
ror
jo
out
inc
adc
lods
fs
test
lea
test
mov
rcr
add
jl
mov
fsubr
or
xor
mov
mov
cwde
test
fild
mov
lahf
outs
inc
je
xor
xor
sub
sbb
cmp
xchg
inc
test
adc
ror
jne
add
ror
in
mov
sti
pop
jmp
dec
std
addr16
xor
or
test
push
pop
lods
js
or
fadd
mov
xor
popa
pop
fisttp
jmp
lock
aas
xor
and
cwde
add
jle
or
enter
mov
push
xor
imul
xchg
mov
je
dec
mov
adc
shl
clc
imul
gs
into
xor
push
dec
mov
movs
das
jg
push
xchg
jnp
out
cmp
mov
nop
sub
mov
dec
mov
rol
imul
add
div
mov
sub
sbb
(bad)
in
or
pop
into
fild
outs
nop
ret
push
pop
cmc
mov
in
fdivrp
fstp
(bad)
push
fstp
and
pop
cmp
cmps
add
jge
movzx
pop
into
cs
(bad)
(bad)
loopne
ins
loopne
jge
or
aam
add
mov
sub
pop
or
out
test
jle
add
rcr
or
dec
in
loope
jo
fld
mov
cli
cld
cld
fld
mov
or
or
sub
sbb
push
outs
inc
or
sub
inc
xchg
and
add
icebp
xchg
mov
push
rcr
mov
pop
jp
test
das
adc
and
adc
adc
clc
ds
in
add
sub
popf
inc
bound
stos
ds
mov
push
push
ret
jbe
or
cld
mov
push
fsubp
mov
inc
je
push
pushf
mov
mov
test
xchg
clc
clc
adc
jno
or
dec
xchg
mov
(bad)
adc
aad
or
call
lock
sbb
cmp
outs
add
add
je
and
scas
das
mov
jmp
jge
aas
push
mov
cmp
or
cmp
sahf
adc
pop
push
push
inc
push
mov
mov
pop
inc
xchg
iret
jmp
dec
fsubr
pop
sbb
cld
sti
push
nop
push
mov
cld
push
sbb
hlt
addr16
in
loopne
xchg
xor
adc
enter
mov
cwde
jbe
sar
cwde
fsubr
push
in
in
inc
sub
xchg
push
xlat
dec
loopne
mov
lods
adc
mov
lock
aas
sbb
(bad)
jae
push
mov
dec
fsub
adc
sub
xlat
ins
mov
push
mov
and
jecxz
mov
xor
adc
sub
push
mov
xor
dec
int3
(bad)
int3
ror
cmp
nop
shl
int3
push
sub
aam
push
jmp
xor
out
xchg
(bad)
xor
or
push
push
dec
hlt
das
push
fst
jo
sbb
fadd
and
sbb
adc
inc
in
jb
test
call
jge
mov
fbstp
dec
sub
test
loope
mov
dec
dec
je
or
ror
sbb
mov
or
or
sar
cs
xor
pushf
pop
in
cmp
lods
scas
fist
jg
add
xchg
pop
leave
add
ss
jb
movhlps
loopne
push
les
in
shl
pushf
rcl
sub
cmp
loopne
or
adc
xor
mov
add
push
jae
lods
mov
mov
mov
lods
mov
mov
push
lods
push
ins
test
test
movs
cmp
mov
div
or
push
push
add
xor
adc
add
xchg
sbb
cmp
fmul
pop
jo
dec
push
xor
fist
cld
lods
mov
xchg
mov
mov
mov
fisttp
push
inc
and
inc
or
clc
add
mov
pop
inc
call
xlat
clc
add
(bad)
cmps
add
lea
xchg
les
cli
mov
inc
rcl
and
mov
(bad)
enter
mov
add
mov
jmp
sbb
pop
fdivr
pop
ja
add
jl
into
enter
push
cmp
dec
clc
inc
push
mov
loopne
not
cmp
push
xchg
adc
lock
jae
push
popa
es
(bad)
mov
into
pop
dec
sub
inc
js
add
inc
xchg
inc
mov
fadd
and
loop
out
fmul
push
dec
adc
pushf
and
cmps
push
test
add
test
ins
sbb
mov
sub
sbb
int3
jg
inc
and
mov
pushf
pushf
in
stc
inc
add
push
lods
add
aas
inc
repnz
cmp
mov
fisttp
or
dec
lock
aas
cmp
add
cmp
loop
pop
or
xor
mov
and
inc
or
dec
scas
or
add
jp
sub
mov
aas
fwait
jno
lock
ins
adc
xchg
out
or
lock
or
cmp
in
or
add
fistp
int3
adc
pushf
and
cmp
cmp
pushf
add
xlat
add
mov
pop
cmp
fs
retf
loopne
add
pop
jbe
test
nop
inc
or
inc
or
pop
leave
mov
and
dec
mov
sub
ds
mov
mov
xchg
(bad)
fisttp
inc
dec
push
fnstenv
dec
inc
repnz
pusha
xchg
pusha
xor
add
add
jecxz
cld
mov
push
add
add
sti
paddusb
push
xor
and
xlat
scas
cld
jnp
cmp
dec
pop
adc
jl
call
push
add
pop
fisttp
bound
sub
or
clc
sub
pop
jmp
adc
dec
mov
xor
push
(bad)
(bad)
push
add
mov
lock
add
aad
ins
jmp
ror
or
mov
jno
fimul
xchg
push
popaw
adc
or
out
inc
mov
inc
xor
or
dec
loope
push
mov
and
loop
jno
sbb
add
jge
inc
ins
sbb
jno
ror
pushf
fstp
push
pop
adc
adc
or
adc
nop
cmovge
mov
jecxz
clc
and
add
das
xor
mov
inc
adc
ja
mov
xor
out
or
test
adc
sbb
or
clc
jo
mov
cmps
mov
jnp
in
or
frstor
in
cmp
add
hlt
xor
mov
ret
dec
push
and
jbe
popa
mov
ret
fisttp
adc
ins
mov
or
jl
call
inc
lock
adc
mov
add
push
aas
in
add
cmp
jbe
in
push
das
lods
sbb
inc
dec
pushf
push
daa
les
mov
pop
sub
lods
jle
add
lahf
test
jmp
jl
add
adc
outs
and
mov
add
sbb
push
fdiv
mov
in
mov
ss
jae
xchg
aad
lea
push
test
movs
fisub
inc
mov
or
in
push
mov
inc
fadd
inc
dec
jmp
or
and
paddusb
pusha
aam
xor
xchg
stos
xchg
mov
aad
push
adc
mov
jo
inc
mov
aam
adc
mov
test
call
popf
sbb
clc
or
push
js
xchg
cmp
or
and
xchg
out
add
je
push
shl
push
or
test
push
jmp
add
add
mov
and
pop
mov
pop
mov
outs
cld
inc
pop
sbb
push
jl
dec
jmp
out
pop
imul
(bad)
mov
pop
ret
ret
sbb
push
ret
repnz
dec
adc
fnstsw
int3
data16
test
daa
adc
in
inc
adc
je
dec
shr
add
test
aas
jg
push
cmp
pop
jecxz
inc
add
fucomip
and
or
adc
ret
adc
push
sbb
aas
les
dec
pushf
mov
dec
push
ret
fisubr
or
add
and
clc
cmps
xor
retf
lock
je
rcr
mov
jmp
pop
les
test
movzx
pushf
ret
dec
or
mov
pushf
lea
ret
xchg
(bad)
lock
sbb
sub
mov
or
sbb
loopne
mov
ins
and
adc
fbld
push
je
dec
cld
aas
push
lock
loope
fild
xchg
xor
pop
inc
mov
dec
cmp
cmps
popa
xor
mov
xchg
sbb
pop
retf
adc
shl
pop
pop
fisttp
xor
add
test
pop
xor
pop
ffree
inc
mov
scas
arpl
xlat
sbb
sbb
xor
sti
add
aas
push
jmp
mov
dec
and
dec
movs
(bad)
mov
imul
icebp
jbe
neg
cmp
jae
dec
adc
adc
mov
jne
mov
cdq
push
or
aam
and
fnstsw
sub
and
sub
sub
add
inc
jae
sub
push
jne
mov
mov
xor
sbb
(bad)
sahf
push
mov
push
or
stos
jmp
jg
mov
lahf
jmp
mov
lock
mov
adc
push
pop
sub
inc
pop
clc
out
fdivr
fdivr
add
push
add
and
jge
data16
inc
mov
data16
lods
call
jo
jl
jl
adc
mov
dec
jp
movsx
or
je
stc
fisttp
or
sbb
sub
sets
in
fdiv
fcom
or
dec
loope
mov
lock
jo
inc
lock
and
or
or
push
enter
adc
mov
(bad)
fiadd
xchg
loop
sub
dec
sar
test
in
cmp
mov
rol
adc
hlt
pop
dec
cmps
adc
lock
sub
or
arpl
sbb
or
mov
(bad)
dec
sub
dec
pop
sub
pop
pop
jae
add
lock
hlt
cmp
jmp
js
push
adc
stos
rol
sti
fistp
dec
add
pop
inc
sub
dec
pop
stos
xor
fwait
daa
mov
jecxz
sub
jo
cmp
cwde
pushf
ins
adc
sub
js
sbb
jmp
and
(bad)
jmp
push
mov
inc
pop
dec
daa
pop
dec
icebp
pop
push
mov
dec
adc
dec
adc
push
mov
lods
fwait
cld
jmp
push
sub
push
cmp
test
jg
add
add
out
mov
and
sahf
int3
pop
inc
or
les
and
stos
cld
xchg
xchg
or
xor
and
mov
jle
mov
jg
push
(bad)
or
add
add
cmp
stos
pop
and
push
mov
jnp
and
cmp
jae
push
or
aam
pop
nop
inc
ror
hlt
xor
mov
push
pop
ins
das
pusha
scas
shl
push
test
int3
aaa
int3
and
inc
push
mov
push
aas
jnp
ins
rcl
jo
mov
add
mov
xor
stos
outs
mov
int3
mov
jg
xor
mov
push
js
rol
fdiv
and
les
or
rol
sbb
jl
inc
in
arpl
adc
add
sub
bound
push
lock
pushf
aam
mov
mov
jns
cld
push
mov
mov
add
ins
add
aam
aaa
adc
bndldx
and
test
push
dec
outs
loope
add
movsx
cmp
jne
outs
dec
mov
inc
mov
mov
loopne
or
mov
push
push
sti
or
mov
call
mov
outs
push
push
or
cs
pop
mov
add
pop
in
adc
test
mov
les
xor
pop
test
add
lahf
or
push
bound
sti
mov
adc
mov
cmp
push
sbb
mov
add
nop
dec
adc
jp
jmp
movs
aad
jae
mov
in
imul
movzx
les
xor
xchg
xor
adc
loope
ins
clc
daa
add
leave
mov
(bad)
(bad)
xchg
dec
and
lock
sbb
cld
pop
push
pushf
jne
and
add
cmp
add
rol
(bad)
rol
mov
cmp
and
jae
mov
mov
enter
jmp
or
mov
hlt
xor
mov
dec
push
push
add
xor
jns
and
pop
or
pop
dec
inc
jb
pop
pop
or
in
adc
test
xor
aas
and
push
cmp
sub
shl
push
or
sub
mov
cmp
or
outs
mov
loope
outs
xchg
fwait
mov
adc
iret
mov
sub
mov
adc
pop
sub
sub
cmp
outs
outs
imul
inc
adc
jbe
adc
add
ins
or
in
shr
sub
sbb
jae
aas
loopne
aas
mov
pop
mov
out
xor
jae
or
sbb
and
rcr
cdq
xchg
ds
xchg
sub
call
and
xchg
fsubr
push
xchg
jmp
(bad)
xchg
shr
xchg
add
dec
jmp
push
xchg
loopne
pop
adc
sbb
test
ins
inc
mov
jle
vsqrtps
xor
ret
ret
and
dec
ror
xchg
sub
push
adc
cmp
sbb
imul
pop
dec
ret
sbb
and
shr
cmp
mov
and
fisub
dec
inc
btr
or
popf
push
(bad)
in
lock
dec
adc
jle
inc
outs
sbb
or
in
mov
mov
adc
add
push
mov
rol
fsubr
and
push
dec
and
adc
retf
inc
fcomp
mov
pusha
cs
dec
jmp
jnp
adc
xor
inc
pop
ins
xchg
adc
sub
adc
adc
pop
cmp
adc
jno
push
sbb
je
sub
mov
ins
inc
aam
mov
mov
mov
cmp
xchg
fdivrp
sub
push
jno
add
aaa
rol
pop
pop
div
shl
push
xchg
inc
je
add
mov
inc
data16
add
or
jne
add
adc
pop
aas
mov
mov
loopne
or
aas
lahf
add
movs
add
ja
aaa
or
lahf
xchg
inc
scas
dec
pop
fcomp
jmp
mov
add
cmp
add
loope
ss
mov
(bad)
test
rcl
add
stos
xor
hlt
jne
in
or
enter
mov
jl
int
cmp
push
ror
push
and
mov
fld
les
or
cmp
or
mov
push
loop
jmp
cmp
adc
push
mov
es
cli
out
xor
mov
xchg
loopne
loopne
xor
pop
ret
loopne
jae
lea
mov
cld
jecxz
cld
push
adc
or
xchg
(bad)
fnstcw
les
cwde
ret
jmp
mov
fadd
lea
dec
mov
inc
or
push
adc
pusha
adc
sbb
push
add
xor
jne
pop
cmp
and
mov
dec
mov
add
dec
clc
or
adc
push
fdivr
or
mov
jns
and
out
call
add
add
ret
or
jae
lock
and
cmp
add
inc
add
adc
movs
lahf
popa
cmp
cmp
push
mul
jmp
addr16
mov
lock
push
sub
lock
dec
movs
sbb
movs
jl
mov
dec
inc
ins
aas
or
add
mov
mov
mov
call
inc
mov
dec
cld
das
cld
cld
xchg
pop
sbb
(bad)
das
cld
imul
or
lock
mov
add
cs
adc
add
add
shl
inc
mov
mov
pop
jl
push
outs
inc
scas
mov
pop
popf
sti
pop
sub
aam
dec
ds
shr
mov
push
cmp
mov
adc
push
cld
mov
jg
add
lahf
adc
sub
or
mov
add
adc
xor
or
or
sti
pop
jnp
and
aas
pop
add
add
xchg
popf
add
or
sbb
pop
sub
dec
lea
fcom
pop
test
inc
or
xlat
outs
or
and
inc
out
add
in
jo
or
stos
jmp
dec
out
inc
sbb
aas
and
and
in
pop
dec
sbb
lods
mov
inc
jl
or
pusha
or
in
or
and
or
pusha
mov
sbb
mov
sub
nop
scas
or
addr16
imul
in
nop
scas
nop
sub
fmulp
push
sub
sar
clc
sub
movs
lock
xor
(bad)
aam
out
test
jg
cmp
ins
push
mov
call
fidivr
inc
cmp
arpl
sbb
out
push
push
sub
or
(bad)
xor
sbb
lea
mov
les
or
mov
and
pop
add
inc
std
cld
dec
add
mov
ret
lahf
inc
nop
wbinvd
call
mov
in
sbb
adc
push
add
jne
pop
dec
lock
or
pop
mov
rcl
dec
mov
jmp
shr
push
add
xchg
dec
push
push
sbb
ret
push
mov
cmps
or
push
sub
dec
ss
inc
loopne
inc
or
shr
inc
pop
fdivr
jmp
xor
in
rcl
inc
ja
push
je
out
call
jmp
fisubr
call
jne
adc
ja
bswap
retf
inc
dec
jmp
add
sub
add
add
jg
ror
mov
fsub
std
sbb
mov
sub
and
jmp
adc
dec
test
fist
in
cmp
lock
dec
sar
hlt
rcl
addr16
sbb
in
and
pop
add
loopne
mov
jg
imul
inc
cld
mov
adc
push
or
ds
mov
mov
hlt
mov
cmc
cmp
mov
call
inc
call
int
pop
jl
add
aam
push
add
fcom
aas
jne
mov
xor
loope
popf
adc
push
cmp
mov
sbb
jle
shl
add
cmp
fisttp
xor
push
add
jge
fsubr
call
push
sbb
test
mov
or
push
pop
cmps
jge
adc
out
push
adc
out
ins
lock
dec
cld
and
cmp
adc
sub
xchg
ret
inc
xchg
mov
xor
xor
adc
fidiv
or
rcl
lods
push
dec
out
retf
imul
call
test
int3
mov
mov
add
push
xchg
shl
push
lods
in
adc
mov
bound
pop
outs
xlat
pop
hlt
mov
aas
add
add
call
movzx
jmp
mov
xor
mov
lock
je
push
push
lea
mov
add
pop
dec
arpl
(bad)
mov
test
jo
add
pop
mov
inc
add
or
or
daa
pop
xor
lahf
push
push
xor
or
adc
or
lods
add
or
mov
retf
mov
xor
movs
ret
sbb
cmp
dec
hlt
mov
xor
jmp
or
lahf
jno
ror
push
push
push
addr16
dec
mov
or
lds
jno
pop
add
add
add
pop
xor
or
sub
add
lock
push
pop
(bad)
ins
ins
pop
arpl
push
imul
ret
lahf
mov
add
add
xor
leave
lock
hlt
cmps
imul
push
cmp
dec
push
clc
dec
inc
adc
shl
je
xor
je
add
jg
pop
and
fsubr
mov
mov
jle
xchg
pop
push
rcl
int3
shl
add
jae
xor
and
jle
enter
or
shl
sbb
lahf
jnp
inc
loopne
in
stos
test
cmp
jo
push
xchg
jb
mov
mov
inc
jg
adc
lock
jecxz
enter
mov
pop
xor
sar
aad
scas
mov
sti
(bad)
push
or
or
shl
cld
add
sahf
data16
sbb
add
fbstp
int3
xchg
add
mov
(bad)
mov
xor
loopne
aad
mov
adc
retf
sbb
sub
lds
cmp
sbb
dec
lds
sub
mov
xchg
in
out
outs
add
jge
jbe
add
loope
call
xchg
in
push
xchg
int3
pop
pop
test
cmp
add
mov
repnz
mov
mov
cmps
push
jmp
or
sti
clc
sub
xcrypt-cbc
cmps
xchg
dec
jns
push
test
sbb
rol
div
sub
mov
xchg
lods
add
sbb
or
push
inc
add
add
or
imul
pop
test
push
pop
div
cmp
movs
aas
and
add
jge
sbb
sbb
enter
xchg
add
enter
mov
and
leave
and
add
mov
or
add
xchg
push
pop
outs
in
sub
mov
rcl
adc
inc
daa
popa
mov
add
data16
(bad)
or
pop
mov
mov
adc
push
jmp
ds
jmp
lahf
pusha
call
pop
call
pop
ror
aam
add
add
inc
pop
push
in
push
call
fsub
into
add
xor
jo
xchg
les
push
add
add
pop
ja
mov
mov
xchg
inc
call
add
mov
and
loopne
inc
shl
fadd
xchg
sub
test
retf
cmp
(bad)
pop
add
pushf
mov
daa
pop
les
call
and
push
lahf
call
call
cld
cld
in
and
adc
or
add
jo
adc
cwde
in
inc
mov
sete
cmps
mov
scas
test
repz
lods
mov
movs
mov
shr
sbb
ss
(bad)
inc
sbb
ins
call
push
and
cmp
add
or
or
adc
hlt
jnp
mov
jae
inc
lock
out
pushf
lock
dec
lock
js
mov
jae
aas
lock
in
push
pop
retf
pop
jmp
or
xchg
push
ins
sbb
push
adc
push
inc
mov
fs
call
mov
mov
aam
adc
push
aam
mov
pop
in
fdivr
les
sbb
cwde
pop
xchg
imul
push
sub
inc
loopne
stos
add
mov
cmps
cmp
pop
ins
pop
pop
or
retf
xor
test
mov
(bad)
sar
(bad)
and
or
loop
dec
xor
adc
xchg
adc
push
add
out
sbb
loope
pop
mov
hlt
inc
ror
xlat
adc
mov
mov
mov
push
add
push
sbb
jg
add
and
mov
test
aas
loopne
test
mov
aam
mov
lahf
adc
and
mov
add
ret
push
xor
xchg
mov
sub
push
ins
dec
fisttp
push
ja
scas
mov
out
or
out
sar
xchg
or
or
jmp
or
int3
sbb
add
mul
lea
sbb
cmp
add
add
add
add
movs
dec
movs
fiadd
pop
adc
add
or
sbb
inc
or
dec
pop
lahf
adc
mov
mov
pop
sub
jno
pop
hlt
nop
out
mov
jge
lods
mov
push
pop
dec
out
addr16
test
je
mov
loope
je
pusha
cmps
lods
jmp
(bad)
mov
test
lahf
clc
in
inc
cmp
jle
jmp
xchg
or
pop
stos
sub
or
adc
xlat
(bad)
push
cmp
stc
or
and
pop
or
cmp
sbb
lea
mov
cdq
mov
int3
push
popa
push
adc
jg
push
scas
(bad)
lds
mov
push
or
loopne
pusha
cmp
inc
sub
add
int3
mov
mov
outs
add
stos
shr
popa
push
dec
pop
mov
jmp
add
add
adc
xchg
inc
test
mov
outs
mov
cmps
call
nop
mov
and
dec
xchg
inc
cmp
fistp
pop
and
lahf
lahf
loop
inc
add
test
mov
inc
or
sub
add
and
retf
cmp
pusha
sbb
cmp
or
mov
xor
pop
and
add
add
and
jmp
and
jp
ins
daa
adc
fild
clc
and
mov
sbb
inc
adc
xor
cmp
and
add
jmp
or
and
aas
and
outs
or
mov
adc
aaa
fist
jae
push
hlt
hlt
cmp
adc
mov
fld
or
add
mov
and
fistp
clc
clc
dec
test
inc
or
sbb
pop
sbb
xchg
cmps
jl
call
push
pusha
(bad)
pop
jnp
nop
pop
inc
dec
add
adc
adc
or
or
jmp
fbstp
sub
pop
mov
pop
hlt
pop
ret
pop
ret
mov
sub
inc
pusha
mov
inc
add
pop
add
push
lea
add
mov
lock
sub
sbb
mov
push
push
add
adc
add
lahf
cmp
daa
imul
loopne
lock
sar
sbb
lea
and
nop
adc
call
jnp
imul
lea
cmp
inc
add
bound
adc
push
push
lahf
jl
add
add
add
cdq
jecxz
lahf
rcl
mov
outs
cld
jmp
sbb
mov
inc
adc
bound
lea
ja
and
add
xor
sub
sub
stos
xor
add
rol
jae
mov
jo
inc
adc
xchg
sub
mov
or
sbb
adc
call
dec
push
in
or
add
ins
in
xor
in
or
clc
push
xchg
add
mov
and
sbb
pop
pop
sbb
xchg
add
sar
mov
pop
xchg
cmp
jmp
pop
sbb
clc
nop
pop
push
mov
cmp
outs
repnz
enter
cmp
lahf
std
ret
and
lahf
loopne
add
lahf
xor
loopne
push
sub
inc
mov
inc
inc
and
je
mov
xor
xor
jnp
add
cmp
and
mov
or
idiv
aas
pushf
das
mov
fld
call
cwde
call
lea
nop
scas
mov
ficom
mov
je
in
sbb
push
das
mov
fisub
lock
add
add
or
(bad)
jne
pop
pop
mov
jg
pop
sub
mov
loopne
in
pop
mov
shr
cmp
jae
fsub
dec
add
cmps
mov
fmul
mov
push
(bad)
cmp
repnz
clc
jmp
inc
dec
rcl
adc
cmp
push
inc
or
add
movs
jae
hlt
movs
sbb
lock
or
call
sbb
out
dec
xor
dec
cmp
add
js
bsr
adc
aaa
sbb
inc
or
add
adc
push
loopne
or
cmp
inc
cld
push
or
inc
in
inc
ins
mov
test
in
dec
mov
jg
cmp
cld
popa
push
or
pushf
idiv
in
movs
loopne
repz
add
enter
sub
adc
add
pop
adc
fnstsw
mov
in
retf
push
inc
lea
jmp
das
pop
pop
(bad)
mov
cmp
je
add
movs
pushf
pop
add
lods
adc
cmp
push
push
mov
mov
inc
inc
outs
pop
mov
pop
inc
cmc
retf
jbe
repz
xor
inc
cmc
jne
cmp
dec
xchg
pop
loope
enter
jl
lock
scas
call
jmp
jmp
push
imul
hlt
leave
hlt
jne
or
sbb
sub
sub
dec
or
xor
lahf
mov
rcl
pop
xor
cmp
sete
mov
push
cwde
cmp
xchg
fcom
in
mov
mov
adc
jl
sub
imul
popa
inc
cld
rcl
(bad)
imul
jne
dec
or
xor
mov
sbb
sbb
aaa
push
jmp
pop
push
cmp
xor
add
pop
dec
push
daa
mov
cld
(bad)
cmp
or
pop
mov
cmp
pop
fisttp
xor
rcl
dec
loope
add
test
pop
dec
cwde
loop
ficomp
fdivr
cmp
test
inc
out
rol
sbb
sti
jge
or
cmp
add
jg
sbb
mov
add
jne
add
in
js
sub
or
push
adc
jl
lods
popa
ins
fisttp
jl
enter
pop
sub
mov
(bad)
fcmovu
jo
or
and
sbb
pop
pushf
adc
jmp
mov
loope
pusha
xchg
ins
ret
mov
out
xchg
inc
xlat
adc
icebp
loopne
xor
sbb
xlat
sbb
clc
cmps
adc
test
xor
xlat
mov
mov
mov
xor
rol
(bad)
or
inc
clc
jmp
sub
xchg
xchg
clc
clc
clc
clc
in
mov
and
add
cmp
xor
jo
jle
jl
and
test
icebp
dec
clc
cmp
stos
jb
cmp
push
sbb
jb
clc
clc
add
xor
clc
clc
hlt
or
sub
add
aaa
and
pop
cld
retf
xor
rol
iret
inc
add
loopne
add
jno
js
cmc
popf
sub
(bad)
fbld
and
sbb
pop
push
pop
not
and
jg
sbb
mov
fadd
mov
dec
and
jb
or
inc
sbb
sub
add
or
fmul
cwde
mov
mov
rcr
dec
mov
movs
aas
dec
or
cmp
adc
and
mov
pop
and
std
(bad)
(bad)
ror
sbb
inc
cmp
shl
cdq
les
sar
pop
das
push
add
(bad)
jle
in
das
pusha
fmul
clc
push
mov
cdq
cdq
in
aaa
sbb
imul
cmps
shr
test
loopne
or
ss
xchg
ret
mov
dec
add
ret
pop
les
pop
fisttp
or
and
cmp
mov
addr16
dec
lods
out
mov
clc
xchg
push
jle
aam
sbb
retf
adc
ror
stos
jmp
enter
and
push
movs
or
and
mov
jne
popf
pop
ret
pop
call
adc
lock
movs
inc
fwait
pop
std
xchg
jle
add
rol
hlt
aaa
lock
mov
or
add
push
mov
clc
pop
ins
adc
scas
inc
or
sub
sbb
and
push
add
call
ret
enter
push
add
out
mov
lods
mov
add
lea
add
pushf
and
rol
imul
clc
cld
add
xchg
adc
dec
jge
push
cmp
jae
dec
call
inc
into
aam
mov
xlat
inc
jb
jmp
ror
pop
aas
or
jge
push
mov
bound
adc
adc
pushf
lods
push
ins
lods
mov
jg
mov
pop
adc
loopne
push
and
push
shl
inc
aas
ret
add
imul
xor
pop
aas
imul
push
clc
xchg
push
pop
pop
xor
fdivr
jg
or
add
imul
sub
arpl
enter
clc
add
icebp
xchg
cmp
popf
ret
loope
or
scas
popf
add
les
imul
mov
cdq
stos
outs
or
jp
xchg
lds
aam
adc
in
enter
test
or
call
xor
stos
not
hlt
push
push
mov
and
pop
push
jp
mov
loope
leave
cmc
mov
push
(bad)
mov
nop
mov
pop
sub
popa
cmp
add
int3
jg
adc
mov
inc
cld
xchg
push
lock
dec
jle
aas
jb
mov
and
mov
inc
and
dec
push
sbb
xchg
xor
aas
mov
xor
sub
adc
or
or
fs
mov
ret
adc
test
out
mov
mov
aas
pop
pop
popa
add
inc
dec
add
ins
inc
fstp
dec
gs
cmp
and
xor
push
xor
dec
ret
ins
sbb
xor
and
and
dec
jb
adc
adc
mov
xor
les
loope
push
enter
sbb
jg
popf
xor
and
cmp
ds
push
add
mov
add
add
call
jge
clc
push
push
pop
adc
ins
aad
dec
fld
adc
or
test
mov
mov
jp
addr16
mov
inc
out
xor
push
add
sbb
stos
or
and
xchg
aas
or
jmp
test
lock
or
or
int
aas
rol
dec
push
inc
lahf
jmp
push
dec
lahf
(bad)
dec
ins
adc
mov
fadd
and
mov
and
test
dec
ror
push
mov
scas
and
sub
adc
mov
add
jg
and
add
popa
xor
lock
or
xchg
mov
mov
jne
mov
mov
pop
add
ss
jbe
cmp
pop
(bad)
(bad)
mov
outs
cmp
test
add
in
add
push
sbb
sub
push
pusha
test
lea
mov
xor
or
(bad)
ja
mov
or
sbb
jne
mov
mov
pop
push
lock
inc
pop
loop
mov
sbb
jecxz
sti
jecxz
jno
sti
and
xor
jle
in
xchg
sub
lods
mov
ins
mov
xor
add
aas
mov
add
pop
inc
aaa
loopne
cwde
dec
or
ret
repz
mov
ins
pop
fld
pop
mov
cmp
(bad)
push
add
and
nop
pop
test
pop
leave
stos
pop
mov
stos
jl
sub
or
mov
sbb
jp
pop
ret
fild
adc
mov
adc
mov
inc
out
add
lock
call
jnp
int3
and
in
mov
lahf
sub
cmp
push
cmp
mov
cmps
pop
inc
add
and
test
aaa
jle
add
aas
sbb
adc
or
and
xor
add
adc
rep
and
and
inc
loope
aas
adc
mov
popa
inc
repnz
xchg
mov
pop
inc
cwde
add
or
push
pop
(bad)
jg
push
(bad)
fnstsw
adc
add
pop
mov
pop
pop
adc
inc
pop
adc
sbb
(bad)
repnz
es
ja
xchg
jmp
sbb
cmp
jne
sub
btr
int3
jmp
push
push
mov
ret
xbegin
mov
repnz
ret
cmp
mov
pusha
scas
iret
dec
cld
or
sbb
int
mov
jns
jg
les
push
(bad)
js
push
mov
push
mov
ja
push
pop
js
fbld
cmp
jo
add
retf
add
loope
or
add
dec
jae
fidiv
mov
and
mov
out
call
pop
push
or
and
jg
or
or
pop
jg
ja
adc
jg
imul
(bad)
addr16
xlat
ds
adc
inc
add
retf
adc
sbb
pop
(bad)
xchg
push
inc
sbb
lds
push
in
jle
sub
xor
cmc
inc
out
or
push
icebp
scas
add
or
sahf
int
mov
repz
xchg
xchg
inc
push
adc
push
adc
(bad)
ja
ins
test
inc
xor
test
aas
into
js
push
sub
sub
adc
dec
test
and
jmp
outs
(bad)
inc
jno
aad
jg
test
clc
push
cmp
and
pop
ret
add
and
push
cmp
jns
cld
data16
jp
dec
cmp
add
pop
mov
push
and
mov
inc
loopne
and
shl
xchg
mov
jmp
(bad)
ror
hlt
mov
xor
mov
in
push
mov
mov
and
sub
add
ss
les
jo
add
and
add
mov
and
adc
retf
test
je
fnstcw
adc
jg
lods
push
inc
mov
in
add
add
les
loopne
lahf
inc
mov
fcomp
cmp
pop
mov
ret
int3
adc
mov
aas
mov
pop
adc
add
inc
les
jno
fbstp
int3
mov
sbb
mov
mov
dec
jp
fmul
add
cs
mov
mov
mov
jge
or
xor
bound
nop
daa
mov
add
adc
or
cmp
ja
mov
loope
cmp
or
rol
cdq
sar
push
lods
lahf
(bad)
add
dec
pop
xchg
or
je
dec
(bad)
call
jg
or
cs
xlat
mov
pop
push
xchg
xchg
loopne
sti
sub
mov
mov
rcl
popa
fld
push
xchg
push
pop
push
or
push
jl
xor
jmp
add
fwait
mov
ins
shl
sbb
fwait
mov
and
or
dec
mov
movs
mov
dec
lea
xchg
and
and
test
push
(bad)
ins
popa
or
into
jmp
fwait
xor
fisub
mov
fwait
dec
and
xor
les
adc
bound
adc
das
stos
adc
jmp
and
inc
lahf
mov
sub
loopne
pop
xchg
and
add
pop
cs
mov
(bad)
(bad)
mov
aas
mov
mov
add
mov
adc
pop
sbb
add
xchg
mov
adc
sbb
cmp
pop
cmps
mov
inc
mov
or
pop
push
test
ins
or
adc
fadd
clc
xlat
clc
mov
push
lds
push
add
or
pop
aaa
jbe
sbb
test
mov
pop
mov
inc
sbb
sub
sub
dec
jne
adc
enter
mov
inc
pop
stos
pop
mov
aaa
add
in
jl
or
add
add
test
jo
clc
adc
f2xm1
ins
add
xor
add
hlt
clc
and
inc
clc
loope
or
dec
ja
xchg
loopne
mov
pop
push
or
xchg
lock
jmp
jge
test
adc
out
cmps
and
fisttp
enter
mov
sbb
or
adc
mov
sub
sti
fcomp
cli
mov
inc
fst
add
xlat
add
cld
adc
mov
repz
test
std
inc
popa
add
mov
adc
jmp
sbb
je
mov
leave
xchg
xor
aas
add
cld
dec
and
push
sbb
and
jns
rol
push
push
mul
sbb
call
or
inc
dec
inc
inc
loop
mov
aad
loope
mov
jae
bound
stos
mov
mov
add
push
or
fisttp
mov
not
add
mov
jno
dec
jg
add
adc
stos
mov
add
mov
add
sbb
xchg
or
dec
push
shl
and
pop
pop
and
or
adc
adc
shr
jmp
inc
cmp
jmp
sbb
and
rol
lock
loope
xor
arpl
cmc
ret
sbb
cmp
sub
inc
or
imul
mov
or
lahf
xchg
loopne
scas
ins
psubd
dec
push
dec
cmps
and
rcr
push
lds
jg
jmp
arpl
push
cmp
sbb
lods
sahf
push
xor
xor
xor
mov
mov
sbb
rol
inc
aas
leave
jbe
push
or
adc
mov
sbb
lds
mov
cmp
movs
push
enter
or
jbe
push
adc
pop
ret
jmp
xchg
adc
sahf
jge
pop
cmp
adc
es
mov
in
fs
mov
mov
test
scas
mov
xchg
js
xor
pop
movs
test
or
jbe
and
jmp
repnz
imul
retf
mov
jle
or
inc
inc
ret
cld
mov
sbb
cmc
or
mov
mov
aam
fs
pop
push
xor
xor
sbb
into
pop
jae
scas
ins
nop
add
fist
(bad)
in
push
sub
lock
lods
or
cmovae
loope
jp
movs
add
cmc
xor
mov
sub
adc
sbb
inc
ja
loope
inc
inc
aaa
test
int
sub
add
mov
cs
mov
test
ret
xchg
mov
cs
or
inc
retf
jns
adc
push
sbb
dec
jg
xor
add
sub
test
sbb
or
pushf
mov
or
jmp
ret
fcomp
xlat
pop
or
mov
fbld
mov
mov
stos
ret
in
loope
rcl
cmp
inc
rcr
or
inc
pop
les
adc
xlat
push
cmp
adc
push
sti
fild
and
imul
pop
(bad)
in
xchg
ins
aam
loope
int3
inc
fucomip
add
clc
fcomp
(bad)
and
test
sbb
inc
xchg
je
(bad)
in
and
adc
add
je
inc
sbb
xor
aad
add
fdivr
enter
(bad)
cmp
xchg
adc
xchg
or
dec
(bad)
or
adc
adc
not
push
xchg
jo
mov
and
push
jae
and
rcr
adc
or
je
nop
or
inc
loop
push
xchg
or
hlt
js
out
mov
or
and
or
or
inc
adc
sti
sbb
adc
add
and
xor
pop
inc
sbb
sbb
mov
in
or
mov
mov
jmp
mov
pop
dec
xchg
xor
and
inc
or
cmps
mov
mov
in
cmp
jbe
loopne
jmp
aas
push
xchg
xor
pop
test
sub
or
push
sub
push
or
add
test
mov
sub
test
cld
cmc
loop
test
inc
inc
sub
or
loope
es
adc
push
arpl
xchg
pop
mov
sub
pop
xchg
sbb
pushf
push
and
jb
sbb
xchg
xchg
pop
(bad)
in
dec
sbb
push
xchg
call
lahf
pop
(bad)
loopne
retf
movs
sub
inc
jmp
retf
xchg
push
pop
iret
(bad)
cmp
and
pop
js
das
shr
adc
jmp
lea
and
jge
sub
adc
sbb
sub
pop
inc
mov
pop
ret
aas
mov
popa
lods
push
push
mov
ins
shr
mov
add
clc
and
cwde
mov
aam
add
adc
mov
xlat
xchg
push
rcr
inc
jae
repz
sub
loope
mov
mov
push
adc
int3
cli
or
adc
jmp
test
mov
xchg
repnz
loope
xor
test
rcl
add
mov
cmp
and
push
call
dec
adc
imul
ret
outs
or
dec
add
push
mov
cmps
xor
das
inc
inc
push
or
sub
cmp
add
dec
pop
xor
fdivr
pushf
adc
add
fsub
shr
jbe
and
dec
adc
into
retf
mov
daa
sbb
add
or
call
je
inc
je
push
in
and
jle
push
mov
cwde
xlat
nop
push
jge
adc
sub
and
adc
jo
cwde
or
sbb
jmp
mov
nop
xchg
adc
fld
add
sub
je
jno
inc
lock
leave
dec
and
add
jo
or
and
push
daa
dec
shl
xchg
push
lea
add
mov
jge
out
push
(bad)
sub
and
(bad)
ror
int3
mov
iret
push
dec
sub
cmc
push
ret
aam
enter
and
add
sbb
aas
adc
xor
dec
jg
mov
sbb
rcr
inc
mov
mov
pop
pushf
cmp
pop
xor
mov
retf
jo
icebp
sub
sbb
data16
mov
sub
test
pop
cmps
fistp
jmp
push
pop
or
inc
cmp
shr
popa
jg
push
int3
test
push
ds
add
xchg
xchg
dec
iret
xchg
inc
lahf
jge
int3
xchg
or
and
and
pop
xchg
ins
fucomip
js
cld
dec
adc
aas
or
(bad)
sbb
add
mov
mov
hlt
popa
int3
inc
add
movs
or
sbb
push
jmp
fidivr
dec
fcmovb
cmp
cmp
test
xchg
lds
add
push
or
lahf
movs
test
mov
sbb
cmp
mov
jns
adc
fdiv
add
dec
rol
js
mov
nop
add
loopne
aam
mov
sbb
call
mov
sbb
xor
cmp
sub
fdivr
push
fcomp
add
jae
pop
mov
jl
add
adc
fild
call
fimul
cdq
jmp
or
mov
cmp
(bad)
in
in
and
xchg
push
(bad)
pop
int3
add
jmp
shl
sub
(bad)
mov
loopne
xchg
cmp
or
std
je
clc
and
dec
jecxz
pop
push
mov
push
sbb
or
xor
push
or
nop
leave
adc
lea
mov
or
pop
and
push
mov
(bad)
cld
push
adc
mov
(bad)
adc
and
adc
add
inc
dec
test
hlt
push
push
out
jb
nop
dec
rcl
int
loope
nop
imul
mov
adc
loope
jae
pop
enter
mov
push
and
cmp
inc
sub
xchg
add
mov
sar
and
pushf
dec
pop
pop
mov
adc
aas
lahf
pop
daa
pusha
cmovne
inc
jae
mov
adc
jb
retf
mov
cmp
jge
sbb
pop
ret
test
add
mov
cmp
adc
inc
xor
add
ss
jmp
(bad)
cld
jno
push
or
add
jg
add
pusha
mov
push
sbb
stos
jg
arpl
inc
or
pop
pop
adc
sbb
push
sbb
inc
pop
js
in
lods
data16
or
movs
inc
or
test
mov
dec
and
in
cmp
fild
stos
enter
movs
pop
mov
(bad)
mov
call
popa
mov
cmp
push
mov
push
lock
push
imul
mov
mov
mov
mov
push
cdq
inc
aam
jp
add
mov
mov
pop
frstor
jmp
lea
push
add
mov
cmp
xlat
mov
in
rol
add
call
aas
aas
mov
lahf
sbb
adc
or
and
adc
ins
xchg
rol
mov
jge
les
out
add
and
pusha
xor
stos
add
or
test
in
add
add
fisub
inc
jbe
cwde
rcr
pop
ret
push
cmp
bound
imul
add
jp
pop
fild
push
jbe
jmp
dec
push
cdq
sbb
into
and
xchg
push
mov
add
aas
mov
add
push
mov
mov
adc
sti
jnp
sub
push
movs
enter
and
daa
icebp
les
add
test
lods
jecxz
mov
adc
dec
dec
jne
sub
mov
mov
sbb
push
add
jmp
in
loop
mov
mov
dec
add
pusha
cmp
call
sbb
in
test
jmp
daa
cmps
pop
inc
add
jg
sub
lds
cdq
pusha
sub
add
ss
inc
cmp
dec
movs
imul
ds
loop
out
retf
int3
sahf
sbb
lock
mov
ret
jbe
push
rol
sbb
test
ins
pop
enter
xchg
add
sub
jmp
push
test
dec
in
xor
shr
and
cmp
xor
push
aam
cmp
inc
sub
pop
cmp
and
mov
cmp
mov
sbb
mov
xor
add
or
outs
int3
mov
dec
mov
push
mov
jecxz
jmp
pop
fisub
mov
ror
pop
push
jg
sub
xor
pop
jo
xchg
inc
clc
test
out
or
out
sbb
inc
call
out
rcl
mov
add
pop
or
out
mov
mov
cmp
repz
cmp
push
pop
test
cmp
cmp
add
push
shl
add
mov
into
or
jb
pusha
push
mov
adc
sbb
mov
pop
push
push
xchg
add
call
jl
pusha
inc
enter
in
shl
xor
cmp
mov
inc
adc
mov
adc
mov
loope
sub
jge
push
jge
(bad)
daa
mov
mov
pop
fsubr
test
push
and
pop
clc
sbb
ret
call
jnp
sub
pop
xchg
ret
or
dec
pop
dec
xchg
dec
and
add
pop
popf
add
sbb
dec
lock
inc
inc
sbb
loopne
fidiv
add
je
pop
jae
fsubr
sbb
inc
fucom
add
fcmovnu
vmread
(bad)
aad
jo
xor
jge
add
push
cmp
pop
pop
push
ret
dec
mov
(bad)
call
leave
loop
xor
push
xor
mov
xchg
xor
movs
mov
push
cmp
mov
and
js
xchg
mov
inc
xor
mov
pop
xchg
stos
mov
aam
inc
int3
cs
lods
cwde
jg
xchg
cs
xlat
xor
daa
sar
adc
xchg
retf
in
sbb
cmps
popa
mov
popf
in
and
out
call
push
lahf
call
(bad)
push
test
(bad)
inc
sti
fcmovnb
pop
or
xchg
mov
sbb
cmp
adc
or
adc
sbb
adc
push
rcr
push
adc
pop
iret
dec
dec
xchg
fwait
or
enter
test
add
test
dec
xchg
dec
adc
(bad)
cmp
cmp
pusha
add
in
les
jge
xor
sub
cwde
enter
push
inc
rol
cld
rcr
stc
jno
test
test
popa
enter
aaa
mov
xchg
add
xchg
retf
add
add
ret
dec
enter
fwait
cld
ja
jb
(bad)
cld
dec
call
and
add
scas
sbb
fst
inc
out
xor
add
(bad)
mov
push
rcr
xor
pusha
cmp
pop
or
hlt
(bad)
and
bndstx
pop
adc
in
mov
cmps
lock
lock
sub
enter
cmps
adc
ss
js
add
xor
push
bound
mov
xchg
loopne
xchg
inc
shl
cld
pop
popa
mov
or
mov
int
call
adc
sbb
mov
sub
mov
push
adc
xor
xor
jmp
iret
mov
daa
fild
adc
sbb
jmp
jae
sbb
or
aam
add
push
and
add
jp
inc
cmp
int3
xor
sbb
pop
cmp
je
aas
cld
aas
push
add
stos
or
mov
ret
nop
mov
pop
call
pop
lods
mov
fild
daa
cmc
adc
outs
call
add
xchg
adc
jne
mov
sub
push
xor
mov
out
pop
dec
cmps
test
pop
lahf
mov
movzx
push
dec
lods
out
fcom
sbb
mov
or
push
dec
popf
jmp
adc
push
push
test
add
cmps
lock
out
cld
adc
out
pusha
sub
adc
outs
mov
dec
jg
or
add
push
lea
inc
mov
repnz
jg
inc
sub
popa
jo
imul
inc
inc
sub
dec
aas
lahf
mov
inc
mov
lods
(bad)
jne
imul
sub
xchg
xchg
lds
sti
clc
push
push
xchg
sub
popa
lea
out
mov
test
sbb
test
mov
or
mov
add
push
mov
cmp
jbe
adc
add
pop
mov
jae
cmp
add
and
sbb
mov
out
mov
enter
jg
mov
cmp
je
jb
sbb
push
test
or
or
pop
in
jp
jg
cmp
and
adc
jmp
adc
inc
hlt
dec
stos
cld
leave
mov
jmp
sar
and
adc
out
mov
and
outs
add
or
sbb
push
xor
and
add
add
adc
pop
mov
mov
int3
pop
dec
jo
jg
and
stos
mov
add
adc
inc
sbb
or
aad
xchg
add
cmp
add
add
inc
retf
adc
mov
jg
pop
inc
adc
adc
rcr
adc
outs
mov
jb
fcom
add
inc
push
adc
push
or
add
or
and
inc
push
sbb
pop
lea
test
mov
pop
push
pop
and
add
mov
and
cmp
cld
sar
cmp
xor
lahf
mov
dec
cmp
add
push
adc
adc
hlt
lahf
fcomp
or
cld
pushf
mov
add
jo
ins
mov
adc
cmp
ins
sub
sbb
neg
dec
in
xlat
push
leave
idiv
cmp
popf
jbe
cmp
hlt
hlt
cmp
jbe
lods
mov
aam
data16
mov
pop
cmp
hlt
test
or
mov
dec
mov
fisubr
mov
dec
mov
cmp
mov
cmp
pushf
mov
cmp
mov
in
inc
cmp
push
sar
addr16
mov
lods
cmp
push
mov
jp
mov
cmp
mov
xor
jl
mov
or
sbb
test
push
adc
iret
test
jo
jg
sub
or
dec
push
xor
pop
inc
scas
jle
mov
or
add
inc
push
mov
mov
pop
ja
sub
push
pop
add
push
mov
inc
ret
pop
test
dec
xadd
cmps
push
pop
arpl
inc
jb
into
sub
xchg
cmc
call
sbb
aas
jne
xor
loopne
cmp
or
cdq
sub
sar
mov
hlt
and
in
pop
sbb
and
cmp
sbb
push
ror
add
jne
jecxz
mov
jmp
jne
ins
adc
add
loopne
es
aas
mov
inc
add
and
inc
(bad)
adc
arpl
(bad)
data16
inc
daa
add
adc
jl
call
push
push
add
ret
hlt
add
sbb
dec
xor
ret
mov
loop
jns
push
or
adc
lock
jmp
retf
and
pop
sbb
and
shl
pop
clc
mov
sti
mov
add
test
push
imul
adc
cmpps
mov
mov
or
jnp
pop
inc
or
repz
add
lock
xchg
dec
add
xchg
test
xor
mov
or
(bad)
cwde
pop
pop
mov
cdq
pop
adc
imul
(bad)
sub
mov
sbb
add
pop
dec
ss
pop
xchg
add
jge
and
aas
push
xchg
mov
push
jmp
lea
ss
shl
int3
push
js
or
fcom
ret
popa
scas
sbb
test
mov
fsqrt
ret
fistp
fisubr
push
mov
add
mov
(bad)
ficom
(bad)
(bad)
je
or
sbb
xor
or
fcos
push
clc
outs
(bad)
fdiv
mov
mov
movzx
(bad)
in
or
mov
jmp
xchg
sbb
cdq
ins
sub
jmp
adc
add
xor
in
sar
aaa
pop
jmp
or
pop
inc
dec
sbb
jge
out
lds
shr
push
fmul
mov
jbe
or
add
dec
add
pop
cmp
add
daa
pop
add
xlat
shl
mov
mov
sar
cwde
imul
xor
ret
in
and
sub
ret
add
fs
or
imul
xchg
out
(bad)
fsubr
mov
inc
add
movq
sti
not
xor
sub
andps
add
ror
inc
xchg
dec
dec
test
add
push
or
clc
out
std
sbb
call
dec
push
fild
adc
mov
or
push
cmp
adc
pusha
cmp
adc
lock
add
mov
clc
and
pcmpeqd
dec
dec
and
repz
adc
emms
mov
mov
sub
bswap
lds
inc
dec
adc
dec
dec
test
add
(bad)
cmp
enter
push
jmp
call
sub
push
pop
int3
sbb
mov
inc
sti
pop
retf
inc
mov
in
mov
adc
or
aas
loope
test
and
ror
adc
test
arpl
jmp
cmp
mov
cmc
jmp
add
xor
or
imul
sub
cmp
push
adc
(bad)
cmp
xchg
xchg
div
add
mov
jg
add
mov
retf
add
pop
push
mov
and
mov
mov
mov
or
mov
push
xor
adc
push
adc
xor
mov
int
sbb
int
push
or
and
or
jnp
mov
mov
xor
add
(bad)
dec
mov
add
lods
test
lock
or
mov
or
mov
retf
push
mov
data16
jecxz
push
dec
push
push
test
jg
stc
cmc
ret
frndint
cld
xchg
mov
fstp
popa
ja
std
sbb
xchg
xor
pop
mov
add
inc
sti
dec
jecxz
cwde
push
repnz
stc
(bad)
neg
jnp
popf
shr
push
pop
es
push
cmp
ss
inc
std
pop
push
aas
lock
imul
mov
popa
dec
push
mov
imul
pop
shl
fisub
jb
cs
jge
ret
inc
add
sbb
jbe
inc
cli
xor
xor
iret
sub
push
jo
and
stos
or
add
pop
pop
or
dec
xlat
imul
push
clc
fnsave
cmc
add
inc
xor
mov
loopne
or
shl
push
lock
std
cmp
cmp
(bad)
(bad)
std
pop
inc
or
cmp
call
icebp
sbb
fldln2
jp
or
pop
cld
mov
out
ror
call
mov
push
daa
and
xchg
or
test
jo
ror
int
test
mov
sar
sar
cmp
neg
sbb
and
mov
fild
lds
and
xor
sub
xchg
inc
push
shl
sbb
aaa
push
add
fxch
add
sbb
sbb
xchg
inc
cs
in
jp
or
xor
inc
add
arpl
xor
jg
rol
lock
add
or
mov
mov
sar
test
test
adc
and
or
add
popa
or
xor
repz
test
or
and
lods
sub
or
inc
add
fnstenv
cmp
popf
rcr
xlat
cmp
jmp
cwde
mov
add
adc
mov
sbb
adc
mov
adc
xor
or
mov
outs
jmp
or
xor
pop
inc
or
adc
sbb
jbe
or
xor
pop
sbb
xor
aad
mov
xchg
add
and
xchg
and
xor
pop
lock
and
fsubr
mov
adc
imul
in
mov
in
sub
das
ret
clc
jo
in
ins
xor
sbb
pusha
cdq
pop
jmp
push
cwde
fiadd
dec
pop
mov
outs
jle
out
mov
clc
xor
rcr
sbb
in
jmp
ins
mov
push
clc
lock
pop
sub
dec
in
pop
mov
jbe
mov
fwait
and
int3
(bad)
mov
mov
mov
and
cmps
push
cld
sub
test
in
dec
pop
pop
sar
pop
inc
adc
add
hlt
sbb
rcl
ret
std
adc
sbb
or
or
mov
add
dec
dec
lock
sti
sbb
sbb
enter
lock
hlt
cmp
xchg
xor
not
dec
or
dec
pop
jb
mov
push
clc
dec
clc
cld
jno
enter
lock
sti
dec
or
clc
dec
clc
push
nop
or
mov
dec
cld
lock
pop
shr
and
mov
gs
push
and
call
or
sub
shl
pop
or
daa
jmp
lods
push
lock
rol
hlt
cmp
cmc
sbb
dec
lock
cs
hlt
hlt
clc
jnp
sbb
cmc
xor
push
xchg
xor
dec
hlt
push
clc
dec
in
or
clc
cld
cld
xor
cmp
dec
or
cmp
inc
jb
sub
adc
lock
xor
imul
in
push
xor
adc
dec
xor
cs
stos
add
hlt
cmp
clc
jb
(bad)
aad
out
dec
enter
dec
dec
pop
jb
test
test
pop
pop
test
pusha
fs
dec
enter
test
je
xor
sub
sub
cdq
jo
mov
and
or
and
loopne
pusha
icebp
xchg
nop
syscall
mov
add
inc
or
and
mov
or
inc
push
add
fld
sub
push
nop
add
mov
jge
push
or
loopne
mov
or
add
sub
add
or
push
or
push
lods
add
movntps
adc
rol
sub
icebp
or
and
add
cmp
std
lods
adc
mov
test
and
test
fmul
cmp
inc
sbb
push
add
pop
cs
test
and
cmp
test
inc
scas
mov
mov
mov
or
sbb
adc
pusha
push
sub
(bad)
push
call
stc
pusha
push
popa
sbb
stc
adc
je
add
jne
jne
adc
je
add
jne
rol
and
jmp
sbb
jne
sub
adc
les
daa
ret
ins
enter
and
or
push
xchg
inc
jb
inc
rol
sbb
xor
popa
jb
push
inc
rcl
inc
xor
fcomp
pop
enter
or
xor
je
push
sbb
mov
in
adc
add
popa
jmp
popa
jmp
inc
jmp
sub
or
sbb
jmp
lods
push
popa
jmp
lods
adc
test
add
in
adc
adc
call
popf
rcl
dec
push
mov
sub
in
push
mov
ins
and
(bad)
std
sub
push
inc
or
mov
stos
push
add
add
(bad)
(bad)
dec
aaa
inc
int3
lea
repnz
inc
rol
hlt
xchg
cli
sub
or
mov
loop
inc
sbb
dec
sub
mov
pop
push
dec
mov
or
jne
jbe
cs
cmp
(bad)
adc
fs
outs
xor
ret
add
pushf
mov
pop
ret
lahf
pusha
ror
lfs
loop
add
push
test
xchg
loopne
jle
loope
shl
shl
mov
pop
or
adc
in
not
lods
ja
movs
pop
push
adc
test
pop
inc
dec
xchg
lods
inc
or
bt
test
xchg
pop
jnp
xchg
in
xchg
test
adc
dec
mov
lods
fisttp
push
popa
lds
push
rcl
dec
sub
mov
mov
test
jne
inc
rol
call
cmp
xor
lahf
sbb
cdq
jo
fwait
mov
dec
xor
pop
(bad)
pop
lea
dec
or
dec
or
gs
or
push
or
adc
adc
or
cld
je
mov
xchg
sub
cmp
in
pop
mov
inc
mov
ret
xor
iret
ret
mov
fild
ret
adc
push
push
int
or
push
es
cmp
xor
mov
lea
cld
jo
push
mov
jle
jl
xchg
arpl
and
setno
add
test
test
add
push
push
add
outs
xchg
adc
shl
or
imul
adc
sbb
loop
dec
and
inc
push
xor
movs
ret
add
test
mov
fs
jle
cmp
dec
jecxz
idiv
jne
xchg
add
dec
xchg
add
mov
enter
loopne
mov
daa
jmp
sbb
sbb
cmp
jne
sahf
(bad)
retf
inc
movs
test
jbe
cld
sub
adc
xor
mov
sbb
xchg
cld
add
add
pop
or
ror
and
les
xor
sar
ret
add
push
add
pop
mov
cld
or
imul
imul
push
sub
ror
add
mov
inc
or
ror
daa
add
popa
mov
xor
mov
add
or
jmp
lock
push
add
retf
pop
or
in
jbe
push
push
in
inc
jmp
xor
push
mov
aam
jl
push
lock
je
inc
in
mov
add
ins
js
dec
scas
std
cmp
inc
lea
adc
and
imul
sbb
inc
lock
lock
sub
bound
and
shr
les
fbld
lock
dec
mov
push
adc
sbb
pop
adc
ss
stc
fnsave
loopne
jns
adc
or
inc
inc
xchg
cld
add
mov
inc
adc
pop
pop
adc
mov
mov
stc
mov
sbb
jno
pop
arpl
adc
pop
arpl
inc
mov
test
push
loop
mov
sbb
arpl
vcmpps
and
arpl
xor
sbb
adc
mov
jp
inc
and
lock
arpl
push
hlt
xor
sbb
hlt
arpl
push
or
mov
dec
sbb
push
dec
inc
test
call
xchg
dec
cld
or
add
dec
test
test
cmp
dec
lock
mov
mov
pop
dec
clc
dec
clc
and
add
test
mov
dec
hlt
lods
pop
dec
mov
mov
sbb
test
arpl
sti
arpl
sbb
cs
mov
dec
sub
pusha
sar
arpl
cmc
fs
and
shl
shl
sbb
pop
clc
dec
clc
push
pop
icebp
sbb
(bad)
xor
push
xchg
adc
and
inc
stos
sub
scas
adc
out
push
or
mov
push
(bad)
imul
push
ret
out
test
sub
(bad)
js
push
ret
idiv
push
add
adc
adc
cmps
add
add
stos
idiv
adc
pop
ret
pop
and
xor
and
add
sbb
lock
imul
push
adc
push
sub
sub
jmp
add
xor
sbb
sub
icebp
clc
aaa
adc
popa
push
add
pop
pop
add
add
adc
sub
pushf
stos
dec
fistp
and
fist
add
pushf
or
popa
fist
idiv
cmp
inc
mov
add
stc
lock
xor
dec
adc
jne
push
mov
clc
fld
aad
add
hlt
jne
xor
dec
adc
jne
les
pusha
std
cld
xchg
mov
jo
jne
jmp
jne
add
sar
adc
stos
dec
pop
pop
jne
sub
sub
push
or
sub
shl
push
sbb
adc
popa
adc
xchg
add
adc
add
mov
lock
popa
in
push
mov
popa
cmps
xchg
cmp
jmp
push
add
sbb
and
popa
xor
aas
adc
loopne
sti
popa
jmp
lods
adc
popa
ss
inc
and
adc
add
call
clc
sub
pusha
push
inc
cmp
jae
mov
cmp
mov
jo
aas
xor
push
push
push
mov
test
push
sub
inc
mov
mov
dec
sub
clc
add
pop
cmp
xchg
inc
push
xor
inc
push
test
stos
sbb
mov
mov
nop
dec
jmp
jmp
mov
dec
inc
call
mov
push
pop
push
fcmovu
add
jg
mov
in
cld
mov
jmp
scas
jge
push
lahf
jo
push
inc
mov
lock
dec
add
pushf
mov
xor
jmp
pop
nop
call
dec
std
sub
addr16
dec
sbb
xor
pop
push
add
add
lods
or
shr
pop
mov
xor
lods
add
dec
add
out
or
add
lock
loop
clc
add
jl
mov
jmp
mov
sahf
push
aas
test
pop
xchg
retf
(bad)
(bad)
mov
add
or
das
jmp
(bad)
xchg
sub
dec
and
push
and
lock
fnstsw
inc
sub
aas
inc
sub
test
or
mov
outs
cmp
jg
sbb
push
xchg
(bad)
loop
repnz
lds
adc
or
jne
outs
add
dec
add
sbb
movs
idiv
or
pop
add
rcl
add
ret
(bad)
(bad)
jns
mov
cmps
xor
or
mov
mov
out
adc
mov
int3
and
test
push
shr
jmp
xchg
addr16
popf
adc
jns
shl
les
(bad)
jmp
sbb
aad
jb
and
lods
ret
fcom
xor
int3
push
push
js
(bad)
adc
pusha
or
push
jg
loop
nop
mov
xchg
leave
dec
inc
adc
out
inc
push
adc
(bad)
xor
fwait
mov
lea
push
shl
sbb
inc
inc
cld
pop
repnz
cmps
movs
inc
inc
sbb
add
adc
inc
lods
push
movs
cmp
pop
inc
cmps
(bad)
in
fadd
or
pop
xor
stc
mov
xlat
xchg
xchg
scas
mov
in
pusha
push
leave
and
inc
and
sub
sbb
sahf
adc
sub
and
inc
jno
out
mov
adc
pop
or
push
adc
push
clc
inc
jmp
or
jne
sub
cmps
jb
cmp
push
inc
sti
in
sub
psrld
adc
sub
inc
push
add
stc
pop
mov
cs
mov
dec
sti
lea
sub
icebp
jno
add
mov
test
pop
add
push
nop
(bad)
xchg
mov
or
lods
or
sbb
test
inc
mov
push
cmp
pop
nop
and
fild
dec
or
xor
push
int3
jg
scas
mov
sbb
test
sub
push
ins
inc
jl
jg
push
push
add
jle
dec
and
pusha
add
and
pop
int3
mov
mov
mov
mov
popa
pusha
cmp
push
in
jns
dec
cmp
nop
adc
jnp
cdq
(bad)
mov
jmp
dec
push
mov
test
call
jae
test
loop
scas
pop
push
push
add
loop
loopne
imul
add
call
pop
mov
(bad)
ficomp
jp
jns
imul
iret
jg
nop
clc
inc
mov
mov
aas
cmp
jmp
dec
(bad)
shl
jecxz
das
xor
pause
adc
add
inc
ins
fistp
test
mov
mov
or
nop
or
test
frstor
in
or
enter
sbb
add
retf
xor
jb
ror
loope
push
xchg
push
js
das
inc
push
push
(bad)
adc
mov
iret
out
push
pop
rcl
ret
addr16
xchg
ret
sub
inc
aam
loopne
mov
push
addr16
or
or
lods
or
or
ror
lahf
test
and
cwde
jge
or
dec
or
jo
fdiv
jl
test
dec
pop
and
aaa
adc
ins
lods
fs
daa
pop
movs
dec
ins
sbb
inc
xor
inc
and
push
lods
nop
ret
aaa
imul
sbb
mov
fwait
xchg
sbb
aam
lods
inc
add
or
loope
daa
aas
test
push
mov
icebp
mov
dec
lock
or
add
les
sbb
add
test
or
and
xor
add
stos
popa
add
movs
and
test
cmps
nop
call
in
and
push
and
int3
test
cmp
inc
adc
pop
inc
dec
ficom
adc
inc
and
inc
dec
in
jo
xor
data16
repnz
rol
or
(bad)
in
sbb
pop
lds
lea
(bad)
aad
mov
jge
add
mov
and
push
cmp
jecxz
sub
aaa
xor
mov
cmp
mov
rcl
xchg
mov
add
rol
push
retf
mul
call
and
add
test
push
push
mov
dec
ins
(bad)
(bad)
in
sub
pop
cmps
pop
out
lods
mov
xor
dec
sbb
sbb
sbb
iret
jg
jnp
nop
mov
mov
aam
and
push
sbb
pop
nop
jbe
xchg
or
mov
fsubr
push
cli
inc
mov
pop
add
lds
push
(bad)
fdivr
dec
adc
aam
or
mov
(bad)
cld
mov
or
add
cwde
test
xor
or
(bad)
and
pop
sbb
int3
sbb
add
fcom
or
dec
lock
imul
mov
sti
lds
jb
enter
mov
or
arpl
shr
push
pop
icebp
cmp
movs
retf
push
dec
add
add
or
add
adc
aas
mov
sub
or
sub
fsub
jnp
jecxz
fisttp
add
call
add
pop
jbe
mov
bound
pop
inc
or
test
inc
adc
jg
ret
inc
mov
aam
fnop
sub
mov
dec
jle
mov
add
mov
jg
mov
push
je
fcomp
(bad)
fcomp
mov
nop
dec
xchg
iret
ins
and
fcom
fsub
dec
loopne
add
push
in
mov
add
rcl
loopne
shr
cmps
iret
pop
int3
mov
mov
adc
outs
add
xchg
sbb
adc
popa
in
pop
add
pop
test
ror
jo
aas
stos
pusha
mov
dec
pop
cld
add
inc
mov
lds
xchg
push
cmp
mov
adc
add
jp
xchg
jle
in
aaa
and
jno
popa
push
int
cmps
retf
or
inc
(bad)
adc
push
sbb
adc
lock
and
aad
sbb
cmp
or
inc
mov
test
and
mov
or
push
add
cmc
pop
and
xchg
xor
mov
hlt
dec
popa
xchg
or
push
or
out
lock
inc
xchg
pop
or
inc
adc
jno
mov
or
jmp
inc
jno
mov
xor
push
icebp
sbb
push
pop
aaa
aam
loop
inc
push
or
push
add
outs
inc
adc
pop
call
daa
rol
mov
movs
daa
movs
sub
pop
dec
(bad)
lock
mov
xor
fadd
add
in
ret
dec
(bad)
nop
sub
dec
mov
push
sbb
idiv
inc
or
data16
rcr
jmp
adc
inc
pusha
lods
aas
pusha
mov
push
aas
adc
retf
mov
js
dec
dec
adc
pop
mov
mov
dec
cwde
push
fwait
push
cmp
adc
push
pop
push
push
adc
mov
sub
lods
add
inc
jns
mov
add
mov
mov
loop
shl
(bad)
sbb
or
je
scas
loopne
movs
lods
test
push
sbb
outs
dec
js
je
imul
fsub
dec
loopne
cmp
xor
adc
mov
add
and
fadd
nop
or
adc
add
ror
add
cwde
mov
and
aam
les
xchg
inc
popf
or
daa
rcr
rol
jge
pop
or
les
lods
arpl
jo
lds
adc
push
ret
out
cmp
sbb
pop
jnp
pop
rcl
cmp
and
out
xor
dec
pop
or
inc
popa
lea
mov
fbld
jmp
xor
or
or
or
fadd
addr16
or
cdq
cmp
push
xor
popa
popa
ss
adc
or
pop
jo
clc
sti
sub
les
aas
lods
scas
sub
fmul
popa
jmp
add
and
add
ret
sti
inc
sbb
inc
adc
push
add
adc
mov
cs
pop
adc
shr
lahf
lods
scas
push
retf
mov
(bad)
pusha
mov
pop
nop
mov
fisttp
ins
pop
and
xor
movs
ret
or
mov
mov
or
adc
inc
je
adc
fbld
bound
add
pop
pop
movs
dec
xor
dec
push
push
lahf
add
sbb
imul
popf
aaa
popa
xchg
cmp
movs
sahf
or
pop
out
adc
ins
pop
out
shr
jnp
jmp
ret
mov
test
lods
pop
mov
xchg
jge
loopne
mov
pop
push
push
push
mov
push
inc
clc
test
icebp
push
or
les
sub
mov
xor
or
push
test
add
lea
and
shl
jmp
ins
arpl
test
imul
fwait
push
pusha
test
cwde
push
loopne
cmps
mov
lds
sbb
sub
mov
mov
inc
je
in
or
fbstp
das
ins
pushf
jge
mov
in
mov
add
or
or
jle
xor
push
movs
add
pop
test
arpl
test
mov
push
mov
rcr
xor
jmp
push
or
addr16
push
and
sbb
les
lods
push
pushf
cwde
cwde
dec
or
dec
cdq
les
pushf
adc
or
leave
mov
xchg
sar
xor
sbb
jne
push
loopne
sar
pop
xor
lea
cmp
and
push
dec
rcl
fcom
mov
mov
jg
and
xchg
fisttp
es
sar
in
adc
push
lahf
pop
imul
mov
add
das
pop
scas
test
sti
in
ss
in
adc
sub
lahf
aas
outs
fs
gs
or
xor
xor
add
mov
fxch
xchg
aas
aas
test
adc
mov
jb
pop
cmp
test
add
in
rol
or
inc
call
lahf
add
fwait
inc
inc
in
adc
ins
in
push
sub
lock
mov
push
dec
sbb
adc
jne
ins
add
mov
pop
push
mov
aam
aaa
add
test
jmp
sbb
(bad)
popa
popa
aam
outs
adc
les
in
or
jp
pop
pop
loope
add
push
mov
mov
test
or
pop
push
loopne
add
lea
or
mov
in
lods
in
xchg
add
aas
mov
int
and
mov
pushf
clc
cwde
mov
inc
movzx
xchg
adc
push
inc
je
(bad)
mov
pop
movzx
sbb
test
out
adc
enter
clc
hlt
and
and
sub
or
sbb
mov
cmp
imul
fimul
add
pop
push
mov
je
jge
or
push
outs
sbb
adc
and
outs
adc
lock
lock
push
popa
int
xchg
sbb
jle
scas
xor
sbb
adc
(bad)
jae
push
nop
and
and
push
dec
xchg
and
ret
xor
pop
retf
aaa
pop
int3
push
adc
in
bound
sbb
xor
adc
lahf
popf
(bad)
idiv
pop
push
test
and
add
inc
pop
dec
enter
jmp
addr16
sbb
or
xor
mov
(bad)
jmp
xor
pop
pop
les
cmc
test
(bad)
ins
lods
inc
inc
lock
cdq
jmp
dec
mov
fisubr
mov
pop
sub
mov
pop
leave
push
les
sub
lahf
mov
xchg
jno
pop
add
cmps
cmps
lods
mov
fsub
leave
or
inc
xor
in
sub
and
fistp
push
lock
scas
adc
lods
sbb
jmp
xchg
jmp
and
sbb
sbb
repz
xchg
ror
adc
sub
cmp
mov
sar
inc
sar
lock
sub
out
call
outs
pushf
icebp
inc
xchg
adc
mov
repz
or
mov
add
nop
ret
daa
fild
and
adc
mov
sbb
and
sar
and
call
add
adc
test
xchg
inc
adc
mov
or
and
push
or
cmc
or
pop
cmps
hlt
mov
push
sub
jmp
imul
popa
and
cmp
imul
pop
and
mov
mov
adc
sbb
or
jo
or
xor
rcr
test
mov
cmp
lahf
jne
pop
mov
jmp
cmp
or
xor
test
mov
adc
jmp
leave
jmp
loope
lea
pop
mov
fs
shl
inc
mov
int
add
imul
jne
adc
inc
out
and
mov
mov
xor
aas
jl
sub
aam
jge
cmc
push
cmps
mov
dec
loopne
jg
or
aad
push
lods
add
jmp
adc
jo
pusha
xor
add
loope
pop
pop
add
call
pop
or
(bad)
rol
pop
rol
scas
int3
call
jnp
inc
add
loope
push
in
dec
lock
adc
jl
xor
inc
fcomp
loopne
loope
adc
cmp
and
shl
jnp
loope
cmp
out
xlat
inc
rol
outs
adc
cs
push
cmp
cmp
adc
scas
xchg
mov
sub
push
xchg
jg
push
add
mov
fild
dec
pushf
jge
int
lods
jp
and
jmp
mov
mov
add
call
aas
fst
cmp
adc
inc
and
retf
adc
add
js
or
jae
pop
les
pop
ret
pop
std
jle
add
not
sbb
push
adc
call
or
les
add
movs
arpl
xlat
lahf
adc
sbb
rcl
ret
jmp
jmp
and
dec
inc
bound
cmc
add
addr16
xor
push
xchg
ds
je
ja
xchg
cmp
and
(bad)
out
test
sub
push
test
and
xor
loope
mov
push
je
add
sub
mov
push
sub
and
push
add
push
stc
daa
or
nop
scas
xor
fst
cs
test
push
scas
nop
fdiv
xlat
jge
ins
jl
outs
loopne
jbe
jae
gs
push
leave
(bad)
or
or
mov
mov
pushf
cmp
outs
mov
push
out
push
iret
push
jo
sub
mov
pusha
shl
pop
inc
in
and
test
pop
mov
xabort
xor
rcr
adc
movs
mov
dec
or
push
popa
xor
or
jb
mov
movs
nop
call
(bad)
popa
pop
sbb
add
pop
cmp
mov
in
sbb
sbb
pop
inc
ins
aas
sub
sbb
sbb
push
jmp
call
or
sbb
lods
push
cmp
push
sub
push
sbb
cmp
cmp
add
call
add
fist
jno
(bad)
fild
sbb
cwde
dec
and
sub
in
fcomp
sub
mov
add
mov
pop
lock
adc
add
rcr
dec
sbb
idiv
mov
rcr
or
ins
call
fadd
je
adc
popa
jl
sbb
adc
or
sbb
sub
loopne
adc
lods
imul
dec
mov
or
sbb
cmp
lock
loopne
push
cli
adc
fisubr
mov
add
push
adc
and
mov
pop
mov
add
mov
pushf
or
add
sbb
add
push
sbb
inc
add
sar
rol
mov
mov
add
mov
mov
xchg
add
jno
and
aaa
xor
dec
jmp
iret
xor
movs
into
jns
adc
in
das
adc
or
and
adc
mov
inc
div
cld
cmp
mov
push
call
js
rcl
dec
and
jno
or
test
dec
sbb
cmp
xchg
dec
push
test
and
adc
sub
pop
adc
jge
and
(bad)
pop
mov
or
lds
out
rcl
mov
jb
shl
push
pop
pop
push
inc
bound
push
lds
xchg
lahf
add
pop
mov
jmp
sbb
pop
adc
test
add
sub
nop
fisttp
sbb
das
push
jae
or
xchg
adc
xchg
dec
cmp
push
pop
jns
test
jmp
push
fmul
and
ins
dec
cli
cmp
mov
mov
pop
push
lock
mov
aas
cmp
pop
or
add
ret
aad
mov
loopne
jl
sub
xchg
sbb
nop
mov
adc
pop
sub
rcr
mov
add
dec
add
inc
add
imul
jg
clc
sbb
inc
add
or
add
xchg
add
adc
and
daa
loopne
pop
push
iret
add
add
sbb
mov
fisttp
jo
add
dec
cmc
push
aad
mov
rol
lahf
dec
movs
add
lahf
sbb
dec
retf
add
aaa
lahf
nop
or
mov
movs
sub
sub
call
add
inc
call
jecxz
mov
inc
enter
or
cmp
inc
(bad)
xchg
sbb
add
cmp
callw
add
jl
jbe
jae
and
or
cmp
and
jae
mov
test
mov
lods
pop
arpl
loope
add
jbe
jo
sbb
inc
sbb
pop
sahf
fs
cmp
fld
xor
imul
mov
int3
popf
test
xchg
cmp
rol
sar
and
add
aas
push
ins
jmp
add
rol
xchg
sub
sub
add
dec
(bad)
shr
add
sbb
js
push
add
mov
dec
push
or
lahf
add
jb
lea
mov
jg
pop
sub
inc
pop
or
out
xchg
push
lods
dec
loop
rcl
cmp
jg
aad
jo
call
loopne
add
pop
popf
ins
movs
ficom
lock
std
or
rcr
loope
add
inc
or
add
imul
mov
(bad)
rol
call
jmp
rol
rol
push
sbb
stos
xchg
icebp
mov
cmp
test
lds
jns
retf
(bad)
xchg
addr16
data16
adc
or
jmp
mov
mov
add
lea
lods
pop
or
xchg
sbb
add
inc
pusha
clc
mov
les
aas
add
loopne
mov
(bad)
xchg
int3
int3
int3
lahf
mov
xchg
int3
and
fadd
mov
mov
(bad)
mov
daa
mov
adc
lods
and
sub
inc
xchg
or
and
pop
iret
push
pusha
xor
push
pop
in
adc
cmp
mov
push
pop
add
or
aas
xor
pop
inc
push
adc
jp
arpl
(bad)
sbb
dec
or
xchg
mov
xor
mov
mov
test
adc
dec
aas
dec
xchg
or
add
or
dec
nop
add
adc
inc
shl
pop
loopne
or
xor
push
cmc
mov
add
pop
fs
adc
popf
xchg
pop
cwde
mov
pop
adc
pop
add
popa
jecxz
or
stos
inc
sub
in
mov
add
or
mov
sub
int
(bad)
out
pusha
sbb
movs
mov
xchg
in
sub
xchg
sub
sar
(bad)
int3
mov
adc
ins
ins
inc
xor
adc
sbb
(bad)
add
add
add
pop
xor
les
pop
xor
mov
inc
add
xchg
mov
lds
shl
add
mov
mov
add
out
or
sahf
sub
adc
push
adc
or
push
pop
push
sbb
push
daa
pushf
add
jmp
lds
pop
pusha
sbb
lea
in
or
and
and
adc
push
and
cli
jnp
leave
add
push
sub
jo
cmp
lea
pop
inc
pop
and
das
mov
or
or
(bad)
xchg
pop
ficom
push
in
push
xchg
xor
jl
inc
dec
adc
jno
jmp
mov
or
leave
movs
add
push
jmp
fcom
push
sub
mov
mov
adc
inc
mov
pop
fld
and
jmp
jne
add
mov
in
inc
or
test
jecxz
add
or
pop
adc
fnstcw
or
xor
rol
push
movs
test
push
movs
add
push
test
add
sar
sub
mov
inc
or
adc
adc
and
push
push
pusha
or
pusha
enter
pop
lock
lea
cmp
dec
adc
sub
cdq
ror
push
pop
pop
dec
fmul
adc
inc
or
call
xchg
arpl
add
hlt
sbb
jmp
lahf
mov
add
push
or
push
fdivr
dec
or
jg
mov
call
sar
pop
sbb
sub
xor
jns
add
shr
adc
cld
repnz
pop
mov
cmp
add
(bad)
daa
add
pop
mov
adc
pop
inc
popf
adc
fcomp
dec
or
inc
pop
inc
daa
add
bound
inc
inc
or
xchg
push
es
inc
dec
jo
add
lds
jns
pop
add
dec
jmp
add
aaa
scas
and
js
(bad)
out
leave
push
or
loopne
or
add
ror
pop
adc
mov
pop
add
add
add
add
jg
fbld
adc
loop
adc
add
shr
add
xor
ret
stos
jmp
or
mov
jbe
cld
add
inc
icebp
sbb
or
add
sbb
stc
scas
add
out
rol
and
mov
or
xor
outs
pop
loopne
fbld
pop
or
pop
push
bound
fcom
rcr
fmul
ds
mov
xchg
add
sbb
cs
sub
pop
lea
xchg
aas
or
mov
mov
jmp
pusha
ja
aaa
sbb
adc
sub
enter
js
fwait
rol
fwait
cmp
jge
sub
xor
mov
(bad)
shr
les
fnstsw
adc
mov
inc
and
push
and
mov
mov
add
aas
pop
push
pop
sub
add
adc
inc
iret
and
in
xchg
xchg
icebp
imul
loopne
fld1
xchg
movs
pop
dec
fnstsw
jmp
or
pushf
and
add
jns
pusha
add
aad
or
aas
inc
or
jg
loopne
nop
cmp
adc
mov
daa
cmc
dec
cmp
sti
jecxz
lods
inc
adc
sbb
enter
lods
fdivr
add
mov
sub
mov
and
int3
ins
adc
add
jg
rcl
sar
add
xor
shl
inc
(bad)
adc
and
add
lahf
add
add
or
push
jl
add
inc
and
fdivr
or
mov
les
(bad)
loopne
jg
and
(bad)
sub
jno
mov
mov
push
add
push
fcomp
sti
cmps
and
adc
clc
fidivr
jne
retf
test
adc
fisttp
and
cmp
movs
sbb
retf
fcomp
sahf
gs
xor
and
mov
clc
xchg
push
push
add
mov
cld
outs
test
add
push
jg
in
in
xchg
cmp
(bad)
and
add
outs
ret
outs
mov
adc
xor
mov
push
lods
lock
sub
add
mov
dec
push
sub
ret
jle
loope
les
pop
cmp
adc
sbb
adc
pop
out
push
inc
jmp
or
gs
or
loopne
mov
shr
loope
in
sub
sub
movs
sar
inc
cmc
add
dec
enter
xchg
(bad)
fld
sbb
dec
mov
pop
push
cdq
dec
lods
xchg
jbe
inc
cmc
sbb
add
mov
fist
fnstenv
adc
add
add
add
and
rcr
inc
push
daa
loopne
and
inc
adc
stos
add
adc
pop
daa
adc
shl
psraw
or
ret
pusha
or
mov
inc
test
xchg
daa
test
sbb
pop
jo
dec
add
test
mov
lea
sub
stos
xlat
ins
adc
test
jg
xchg
mov
and
sub
push
mov
pop
test
jmp
mov
and
push
or
movs
xor
popa
hlt
mov
test
sbb
adc
fs
(bad)
mov
sbb
fstp
fmul
sbb
loopne
les
xlat
sub
out
pop
daa
mov
pop
xchg
jmp
fmul
shl
mov
imul
adc
or
loopne
jbe
test
in
(bad)
out
sahf
sbb
pop
cmp
push
xor
sbb
nop
in
inc
inc
xchg
or
fs
or
add
and
or
lock
pop
xchg
jmp
rol
sub
ja
in
adc
test
inc
inc
cs
loopne
dec
dec
stos
cld
ins
cmp
xor
sbb
nop
jb
gs
add
push
pop
outs
test
pop
loopne
and
popa
in
jne
ret
mov
les
mov
test
push
pop
rol
pop
dec
mov
pop
add
nop
add
jecxz
xor
sbb
push
pop
les
adc
mov
outs
pop
stos
jg
xchg
ret
mov
shl
sbb
cvtps2pi
pop
pop
jb
adc
fcom
mov
add
cmp
xor
ja
cli
fidivr
mov
mov
dec
adc
loop
nop
dec
xor
cmp
cmps
mul
es
push
rcr
adc
ds
ror
add
mov
mov
mov
lock
sbb
sbb
xchg
cmps
adc
and
sbb
sbb
push
mov
stos
adc
adc
in
ret
and
je
pop
xor
jmp
mov
or
pop
adc
and
cmps
or
xor
lods
adc
add
mov
jmp
sub
add
cmp
je
inc
adc
data16
cdq
(bad)
push
je
or
or
dec
dec
mov
or
mov
std
mov
add
jmp
es
in
mov
movs
xor
xor
and
adc
adc
xchg
jecxz
add
jg
test
and
mov
jl
add
cmps
add
ins
nop
jne
mov
daa
daa
and
push
or
sti
mov
sub
push
into
and
arpl
sub
sub
arpl
mov
mov
jmp
add
sub
test
dec
shr
or
inc
pop
xchg
sub
test
fmul
mov
push
pushf
js
aas
xor
rol
jecxz
je
adc
out
dec
mov
pop
jle
mov
add
rcl
or
jbe
jae
pop
xor
jb
outs
push
add
rcl
(bad)
je
xor
and
call
pop
inc
sar
fs
dec
sub
xor
sbb
pop
cmp
jbe
sbb
dec
or
and
sub
or
call
add
sub
inc
mov
push
xchg
mov
adc
push
adc
mov
pop
add
inc
mov
push
and
in
push
outs
add
mov
cmp
xchg
add
repz
and
mov
adc
cwde
inc
xchg
sub
movs
and
sub
fild
mov
sar
or
cmp
js
iret
push
pop
aam
mov
fistp
or
sub
shl
jno
xor
add
mov
int
mov
lds
cmp
xchg
xor
sub
inc
or
mov
call
test
cdq
cli
mov
fcmovnb
mov
ds
inc
mov
aam
push
sbb
pop
dec
xor
xchg
jmp
adc
icebp
sub
jmp
xor
mov
mov
jbe
inc
loope
mov
fs
or
movs
push
scas
pop
sub
rcr
pop
or
adc
(bad)
sbb
add
rcl
pop
push
sub
pop
jp
add
sbb
movs
add
es
sbb
pusha
dec
adc
je
mov
test
mov
cmp
sub
jg
mov
adc
dec
adc
cwde
xor
pop
or
xor
out
push
imul
cmp
add
mov
mov
jmp
and
inc
xor
shl
jae
inc
lods
add
xor
or
test
push
xor
inc
mov
push
nop
mov
push
test
mov
and
push
shl
ss
dec
inc
adc
jge
out
cmp
je
daa
xor
inc
inc
add
xor
jb
je
inc
or
mov
jb
mov
lock
add
jl
push
mov
push
mov
stos
imul
pushf
fldcw
mov
add
and
adc
sbb
inc
adc
sub
xor
sub
addr16
xor
sbb
mov
and
sub
jnp
scas
mov
call
ins
add
sbb
pop
je
shl
mov
and
xor
mov
mov
add
ds
pop
inc
add
pop
sti
sub
push
in
cmp
and
inc
sbb
dec
lods
int
aam
fdiv
jmp
and
or
jns
mov
scas
dec
call
shl
xor
(bad)
pushf
adc
sub
push
dec
xchg
or
pop
pop
mov
and
je
sub
dec
add
xor
aad
popf
(bad)
fcomip
adc
sbb
xchg
and
pop
test
jge
adc
or
lods
or
cmp
pop
inc
into
push
mov
push
adc
cld
mov
add
jmp
lahf
xchg
lods
outs
lea
(bad)
and
mov
adc
dec
add
push
loopne
cmp
loopne
mov
cmp
ds
and
mov
adc
mov
(bad)
lahf
and
add
or
shl
and
clc
xor
xor
clc
and
sbb
push
inc
pop
or
adc
pop
cmp
jae
adc
stos
push
pop
aaa
gs
stos
clc
mov
sbb
push
push
lea
add
pop
add
popa
xchg
push
dec
inc
mov
imul
mov
aam
aaa
jl
inc
stc
lsl
pop
add
or
or
push
or
add
inc
mov
movzx
test
mov
jge
add
push
sub
push
mov
sub
or
xor
sbb
mov
cmp
cli
jns
adc
push
pop
add
sbb
(bad)
xchg
in
inc
les
adc
and
aam
sbb
mov
dec
rcl
sub
fstp
fmul
sbb
sub
ss
fst
fdiv
test
and
sub
movzx
add
xor
ins
aas
dec
daa
xchg
xor
daa
sbb
jl
ffreep
sub
push
lea
add
sub
fisttp
add
or
mov
add
inc
xchg
sbb
mov
(bad)
test
adc
jae
push
mov
adc
jmp
test
sar
push
test
cmp
aaa
jge
js
cs
add
ret
shr
jno
inc
es
sbb
pop
adc
push
and
dec
mov
inc
and
cmp
pop
jno
aas
xor
push
cmp
and
cmps
add
nop
add
cmp
xchg
xor
fs
mov
les
add
inc
adc
mov
stos
sub
or
(bad)
in
fild
push
push
sbb
fist
adc
add
and
enter
stos
add
add
ret
int3
scas
(bad)
jmp
xor
add
adc
xchg
rcr
and
lea
aam
lds
and
je
inc
dec
clc
js
retf
or
pop
and
or
sbb
cmp
and
das
adc
add
inc
add
mov
pop
cmps
push
and
sbb
(bad)
sub
test
mov
adc
inc
adc
lock
ror
(bad)
movs
mov
inc
clc
mov
or
jae
xchg
push
data16
lds
adc
dec
or
inc
aam
data16
and
cmps
outs
aad
call
daa
inc
in
cdq
popf
add
inc
xchg
mov
sahf
cdq
mov
dec
les
dec
mov
and
pusha
ja
add
pop
and
mov
push
fbld
jbe
lods
cmp
lods
sbb
test
aas
ficomp
pop
cmps
and
ror
add
cmp
mov
adc
jo
push
sub
mov
pop
outs
out
lea
scas
xchg
mov
out
jl
sbb
lea
lods
adc
mov
adc
call
and
jno
daa
retf
cmp
pop
rcr
xchg
push
ror
(bad)
(bad)
(bad)
fldenv
mov
inc
push
js
adc
mov
dec
jmp
jmp
mov
fsubrp
dec
pop
cmp
mov
jmp
jns
and
aad
add
or
js
mov
outs
mov
aas
mov
push
and
xor
jo
and
dec
xor
or
mov
add
pop
rcl
add
and
(bad)
push
pop
push
mov
jle
and
sbb
adc
cld
xor
mov
jno
sub
inc
sti
dec
mov
add
xchg
ret
mov
sbb
retf
pop
fist
lea
mov
clc
push
mov
enter
xchg
sub
shr
sbb
mov
loope
cmp
push
cmp
pop
ss
(bad)
add
lods
dec
mov
dec
mov
and
ins
lods
ret
inc
add
pop
mov
stc
fisttp
or
pop
repz
and
mov
adc
sub
fnstcw
and
and
and
or
int
pop
sbb
loopne
xchg
xchg
inc
push
push
or
scas
jno
fdivr
pop
ja
add
shl
push
xor
outs
call
lods
xor
mov
or
adc
and
iret
sub
dec
mov
sbb
pop
sbb
into
pushf
push
shl
lds
lea
(bad)
(bad)
add
lods
je
inc
and
or
lods
imul
ret
add
adc
jo
movs
xchg
loopne
mov
push
and
push
or
fdiv
or
sub
push
cmc
repz
and
inc
and
rcl
les
nop
into
imul
les
out
call
push
mov
pop
stc
and
and
fbld
pushf
add
push
nop
mov
ja
sbb
mov
cmc
or
test
(bad)
ins
jmp
jne
mov
call
repnz
sbb
inc
movs
rcr
pop
jns
or
jo
ins
pop
or
mov
add
inc
and
fcom
adc
add
std
dec
scas
xchg
mov
enter
inc
xor
je
xchg
mov
shl
cmp
mov
je
cmps
jne
mov
add
jmp
push
adc
jp
data16
loope
mov
jo
inc
cmp
adc
aas
adc
aam
lahf
lahf
sub
mov
adc
rcl
fnsave
push
lods
jmp
and
mov
mov
push
mov
xor
rol
mov
push
add
inc
fist
pop
and
test
cmp
shr
xor
inc
aas
mov
adc
ins
jecxz
fwait
jno
push
sbb
xor
pop
cs
daa
adc
cmp
aam
sbb
cdq
xchg
adc
loopne
into
movs
mov
mov
mov
shr
mov
or
imul
rcl
sbb
loop
xchg
adc
jecxz
mov
pop
ins
inc
sbb
jp
pusha
sar
dec
das
add
push
push
add
xchg
(bad)
les
xlat
fisttp
cmp
and
shl
ins
cli
jmp
push
imul
pop
loope
or
in
dec
lea
adc
sbb
lock
ss
add
add
or
lahf
adc
xchg
aam
call
in
push
sbb
int
lock
loopne
adc
sbb
jle
(bad)
mov
inc
xor
xor
or
or
mov
xchg
aas
je
cmp
pop
in
or
sub
rcr
test
mov
xor
or
push
out
lock
enter
jmp
adc
cwde
dec
mov
add
push
mov
mov
dec
bound
and
(bad)
aas
push
dec
shl
add
aas
push
cmp
add
add
or
add
sub
inc
jg
mov
pusha
mov
(bad)
push
arpl
add
pop
inc
xchg
icebp
mov
xchg
or
mov
or
push
adc
push
imul
adc
mov
ins
xor
or
add
loopne
xor
retf
add
daa
add
imul
mov
sbb
ret
out
jmp
call
mov
xor
fidiv
aas
invd
mov
mov
sub
pop
cmps
ficomp
mov
sbb
fsub
or
adc
add
inc
xor
rcl
sidtd
in
mov
ret
lods
rcl
mov
and
and
movzx
mov
inc
push
and
arpl
fidivr
xor
ror
ins
cmps
jne
cdq
sub
leave
sub
inc
mov
mov
xlat
cs
mov
cwde
mov
loope
add
adc
aad
mov
jecxz
or
repnz
mov
xchg
inc
pop
xchg
mov
mov
out
gs
add
or
arpl
adc
jmp
jae
gs
mov
xchg
jae
mov
pop
sub
js
mov
xor
data16
das
lahf
xchg
test
push
ds
(bad)
loopne
mov
and
mov
jo
or
sub
xchg
mov
add
mov
sbb
add
inc
push
jle
add
lea
fwait
or
cmps
sub
es
aam
ret
fisubr
pop
jne
inc
mov
sub
or
lock
clts
cmp
shr
rol
mov
xchg
int3
add
cmp
adc
cli
push
ins
fcmovnb
add
push
inc
lea
rol
adc
fcom
aas
pushf
leave
out
pushf
(bad)
loope
shl
xchg
loope
jmp
loopne
push
push
cmps
add
add
xchg
ret
aas
shl
(bad)
sub
lods
lock
jge
mov
cmp
cmp
fucomi
jp
jmp
lods
mov
mov
jmp
sahf
inc
(bad)
mov
out
and
pop
push
add
daa
add
dec
mov
push
jmp
or
inc
or
repz
and
mov
inc
mov
xor
pop
loope
jle
and
push
outs
les
lods
jmp
call
dec
mov
jmp
ror
inc
mov
sub
lods
add
mov
popf
dec
jae
adc
mov
jae
jo
add
lahf
or
int3
adc
or
leave
adc
pop
outs
pop
adc
lods
or
shl
mov
repnz
adc
scas
push
movs
cwde
adc
or
mov
mov
or
dec
stos
aas
cmps
sub
or
dec
inc
add
add
aas
push
or
xchg
sbb
fidivr
in
xor
dec
push
dec
cmp
je
jge
rol
das
cwde
or
(bad)
mov
(bad)
jmp
imul
push
loope
int
pushf
lahf
push
cmps
or
add
push
jg
in
inc
add
lahf
sbb
jo
push
lds
or
add
lock
lock
dec
mov
add
mov
add
dec
arpl
(bad)
sbb
into
movs
or
imul
dec
and
inc
xor
test
inc
or
in
adc
adc
and
(bad)
jmp
sub
idiv
inc
pop
out
jb
inc
test
xor
cmp
in
mov
test
sbb
leave
(bad)
enter
mov
push
or
rcr
(bad)
or
enter
rcr
push
and
pusha
jecxz
push
jge
cmc
jo
jmp
push
xchg
aam
(bad)
xor
cmps
push
push
(bad)
sar
jo
leave
in
mov
into
das
retf
fild
push
sub
adc
or
sub
es
jmp
popa
out
fdiv
xchg
out
lea
mov
clc
adc
or
fmul
out
sbb
ins
inc
pop
movs
pop
call
or
adc
adc
ror
inc
push
cmp
movs
and
pop
pop
jno
mov
pushf
and
rol
adc
stos
out
push
adc
xchg
pushf
push
cmp
push
lahf
add
pop
adc
call
shr
cmp
loopne
jmp
or
inc
pop
aad
or
and
push
push
xchg
popf
push
shl
and
adc
mov
mov
mov
sbb
mov
mov
ja
shl
pop
(bad)
add
daa
lea
and
or
aam
dec
(bad)
clc
and
mov
add
nop
push
ja
jmp
push
pop
ins
or
loopne
dec
sbb
icebp
and
sub
and
dec
adc
add
pop
add
sti
mov
and
or
adc
mov
and
(bad)
cmp
mov
xor
add
xchg
ss
fwait
sub
push
add
cmp
mov
sbb
push
mov
add
jge
je
dec
xor
sar
xor
sub
xor
cmp
ss
imul
push
and
mov
dec
or
pop
mov
pop
js
shr
mov
mov
imul
lods
push
cmp
jae
ret
movs
jne
fwait
add
test
ins
test
ja
pop
clc
jge
or
sub
out
xor
jno
out
retf
dec
cmp
xor
je
fsubr
mov
(bad)
xlat
lock
rol
add
inc
shr
in
mov
dec
adc
add
pop
add
adc
fstp
push
push
add
mov
cwde
jmp
and
sbb
sahf
and
and
jmp
rcl
loopne
pop
jecxz
cmp
pop
ror
in
jne
cwde
arpl
add
cmp
and
sbb
lds
adc
ret
test
inc
push
cmp
jns
mov
or
stc
pop
or
xchg
xchg
cs
fistp
iret
dec
and
sbb
add
out
retf
push
sbb
mov
add
and
iret
cmp
popa
pop
add
sbb
in
push
pop
dec
fs
cmp
or
ret
and
adc
into
loopne
adc
jecxz
pusha
cmp
nop
cli
jo
or
fsubr
or
in
aas
cmp
cs
mov
ins
lea
lock
or
loopne
loopne
mov
js
jmp
dec
pop
or
sub
inc
movs
in
add
push
popf
and
sar
cmps
dec
or
add
adc
cmps
add
dec
inc
push
push
sub
lock
outs
push
pop
push
mov
sbb
add
fldcw
or
sbb
popa
pushf
or
lea
adc
adc
and
inc
add
mov
mov
and
dec
adc
or
mov
cs
or
and
aas
add
push
push
jmp
js
mov
add
call
nop
call
inc
adc
int3
sbb
cmp
inc
add
lods
add
add
dec
cmp
lods
ins
push
sub
or
(bad)
push
mov
adc
stc
je
adc
pop
mov
and
jmp
sbb
dec
pop
test
xchg
pop
pop
jbe
lock
ss
jbe
or
jnp
and
shl
dec
mov
and
in
fsubr
ret
add
or
sti
ret
add
lock
in
xor
adc
xor
add
adc
push
cmp
sub
cmp
mov
mov
pop
jnp
push
popf
jl
add
out
test
out
cmp
add
sbb
and
dec
fadd
mov
jns
dec
cmp
cmp
mov
imul
cli
test
pushf
mov
inc
mov
pop
or
inc
fsubr
(bad)
ss
das
shl
or
mov
add
add
sub
nop
lock
test
push
retf
pop
(bad)
dec
or
es
test
int3
push
lahf
or
movs
leave
adc
jl
mov
mov
in
(bad)
cwde
push
pop
pushf
sar
lods
ror
pushf
cwde
pop
pop
lea
js
outs
pop
push
mov
stc
push
mov
push
or
daa
test
or
fild
adc
shl
arpl
add
sbb
dec
pushf
and
mov
in
jne
fdiv
movs
cmp
out
xor
fwait
sub
iret
js
mov
add
sub
xor
xor
(bad)
lods
jno
pop
ins
dec
xchg
sar
(bad)
dec
mov
int3
jo
or
xchg
loopne
int
rcl
scas
sbb
jg
stos
into
adc
and
cmp
pop
imul
push
lock
adc
cmp
xor
add
pop
stos
xor
movs
fsubr
jl
test
push
jmp
and
jecxz
pop
sbb
retf
test
test
retf
or
adc
int3
jmp
add
(bad)
mov
dec
sbb
ss
inc
mov
(bad)
les
js
js
pop
popf
pop
je
or
and
mov
jl
cmp
mov
lea
adc
xchg
sub
imul
inc
(bad)
(bad)
call
mov
mov
jp
add
in
shr
inc
ret
cmps
jg
mov
add
add
pusha
inc
shl
or
cld
lea
test
cmp
adc
mov
popf
loopne
pop
bound
iret
(bad)
popa
mov
loope
mov
mov
mov
aam
mov
imul
and
ja
or
clc
or
jg
les
mov
ins
es
in
pop
cmp
adc
lea
push
mov
cmp
call
add
aad
xchg
adc
cmp
add
dec
(bad)
inc
jp
xor
jmp
sub
sub
push
dec
movs
loope
out
or
je
jmp
xor
jle
sbb
cld
jbe
sbb
mov
jmp
cld
outs
jo
and
adc
jle
jo
pushf
add
add
sub
add
mov
push
add
loope
std
(bad)
jmp
sbb
mov
push
sbb
loopne
add
jecxz
dec
ret
sbb
add
push
inc
ror
retf
loope
push
mov
inc
popa
rol
cld
and
(bad)
out
outs
daa
jg
mov
sar
test
xchg
or
xchg
cmp
fdiv
sub
sbb
popa
fcom
into
jmp
aam
movs
fbld
icebp
and
dec
out
sbb
jno
push
daa
and
push
imul
call
mov
gs
push
or
pushf
mov
push
mov
and
cmp
xor
push
cmps
es
mov
mov
sbb
or
test
std
and
lahf
fld
in
dec
mov
adc
add
pop
cmp
scas
cmps
movs
adc
cdq
sub
mov
jmp
mov
mov
mov
pop
jg
pushf
lods
mov
lods
lea
sbb
movs
adc
pop
add
add
cmc
cmp
sub
or
add
(bad)
call
jmp
jnp
mov
cli
or
or
ins
or
mov
cmp
jge
lods
add
std
jmp
and
adc
sbb
fmul
data16
jg
gs
mov
and
sar
test
dec
push
mov
lock
cmp
mov
dec
fwait
js
pop
pop
xor
enter
test
dec
int
cwde
mov
jo
adc
inc
push
inc
dec
adc
push
stc
test
mov
sti
mov
xchg
test
adc
add
xor
mov
push
loope
out
js
push
sbb
movs
pop
(bad)
in
repnz
pop
je
pop
psubd
call
dec
jb
enter
push
movs
js
cmp
mov
add
push
aaa
adc
je
push
xchg
pop
sbb
adc
stc
jo
xor
pop
or
addr16
popa
adc
xchg
pop
xchg
push
and
sub
sub
xlat
mov
jl
xchg
jmp
dec
sbb
or
sbb
sar
jno
adc
cmp
test
sub
jnp
pop
dec
xor
mov
pop
push
mov
outs
xor
xlat
sbb
cmp
arpl
lea
loope
push
push
(bad)
jmp
in
xor
mov
push
xchg
dec
aaa
jle
cdq
cmp
lea
adc
adc
pushf
ror
mov
sub
push
mov
sub
call
pusha
adc
fiadd
imul
test
xchg
femms
sbb
mov
xlat
ror
and
in
repnz
(bad)
sbb
sbb
pop
(bad)
push
sub
sbb
sbb
imul
fistp
ds
or
in
mov
(bad)
xor
and
sbb
dec
cmp
iret
stos
add
mov
mov
hlt
aaa
hlt
mov
leave
or
jl
adc
adc
adc
clc
imul
daa
cdq
pop
or
stos
icebp
fidivr
mov
std
cmp
adc
mov
sub
push
push
js
and
sar
in
std
mov
sbb
or
inc
inc
fimul
push
push
and
call
mov
add
mov
or
and
call
pop
inc
(bad)
in
sbb
pusha
push
or
or
mov
jge
cmps
ret
sbb
clc
call
and
lea
push
je
test
mov
call
(bad)
in
push
(bad)
mov
xor
cld
ret
jmp
and
or
(bad)
adc
sbb
cwde
or
out
or
inc
lea
mov
mov
fdivr
aaa
fsub
cmp
mov
mov
jl
jae
imul
adc
fsubr
pop
and
push
jo
scas
inc
loop
push
sub
inc
outs
repz
movsx
(bad)
adc
cld
ror
lock
xchg
cmp
mov
(bad)
jp
add
std
out
popf
xor
movs
hlt
lock
daa
push
es
dec
imul
push
and
rcr
xchg
or
in
and
lods
call
int3
data16
pop
les
popa
sub
sbb
or
test
(bad)
popa
sub
(bad)
aam
aam
(bad)
sub
jns
test
test
shl
js
mov
sbb
sbb
in
hlt
test
inc
mov
data16
dec
pop
inc
inc
add
ret
push
push
or
or
scas
and
dec
pop
pop
xchg
add
lahf
sbb
or
in
pop
ds
dec
inc
cwde
jl
lock
mov
push
sub
pop
fdiv
or
test
adc
adc
sub
sar
fistp
add
loopne
dec
inc
pop
add
jl
mov
dec
lahf
aas
add
cmp
mov
push
popa
pusha
mov
add
inc
mov
bound
lods
ror
inc
cld
fistp
pop
inc
ins
aas
add
aas
mov
adc
cld
aas
add
push
lock
mov
or
jge
jle
bound
inc
sub
add
pop
or
loopne
test
adc
xor
or
push
test
add
and
inc
or
call
dec
in
dec
cwde
mov
mov
lods
xor
ins
dec
push
mov
enter
test
movs
jp
sub
jmp
retf
or
xor
addr16
cmps
xor
add
nop
pushf
fadd
jmp
dec
push
lods
push
push
nop
aam
push
sbb
ror
lahf
inc
or
xor
mov
inc
dec
or
shl
cmp
pop
push
cmp
in
loopne
movntps
lock
aas
mov
clc
cmc
lock
call
sbb
loopne
jo
(bad)
jbe
rol
aam
loope
sahf
jmp
rcl
in
add
adc
push
push
ret
mov
mov
mov
mov
push
call
mov
pop
inc
adc
(bad)
or
es
rcl
jmp
dec
jge
push
jle
add
xchg
adc
iret
push
je
shr
mov
sbb
add
ins
and
int3
aad
cmp
add
xchg
enter
je
add
les
cmps
and
add
call
and
jne
mov
push
js
test
cmp
or
lds
cmps
xor
xor
js
ror
push
mov
popa
add
mov
out
and
adc
sbb
xchg
xor
and
or
(bad)
stos
fmul
mov
cmp
les
push
jmp
add
test
xchg
cmps
and
or
inc
add
mov
inc
fcom
xor
or
ret
hlt
call
pop
es
and
es
pop
loop
xchg
mov
xor
or
sub
fldenv
adc
imul
add
mov
or
(bad)
add
dec
pop
add
lods
popa
int
and
add
mov
jg
mov
les
and
(bad)
lds
call
ins
jns
out
dec
mov
push
popf
pop
mov
mov
sbb
popa
imul
mov
mov
inc
adc
lock
cs
int3
push
icebp
les
push
and
or
sbb
scas
sub
jmp
test
enter
sub
or
mov
jle
sbb
xchg
inc
mov
aam
or
jne
dec
add
aam
xor
xchg
loope
inc
imul
imul
sbb
aas
or
push
inc
inc
dec
sub
fdivr
fcom
rcr
and
lods
xor
stos
add
add
mov
lahf
nop
sbb
cs
and
fdivr
pop
inc
in
div
adc
push
and
mov
inc
jl
xchg
adc
leave
and
fsub
adc
mov
cmp
push
mov
(bad)
dec
add
pop
aas
adc
add
pop
ret
fild
pop
adc
pop
adc
sub
dec
jecxz
inc
jb
pop
add
and
cmp
cmp
adc
pop
and
aad
neg
mov
pop
pusha
sub
ret
fbld
in
or
xor
test
dec
or
outs
push
imul
popa
sub
pop
fild
xor
push
dec
clc
inc
mov
mov
sbb
jo
add
sub
add
call
fs
pop
add
adc
es
ins
mov
mov
sub
inc
adc
jg
jmp
add
jno
sbb
jg
test
ret
dec
mov
mov
jp
dec
mov
or
xchg
xor
lea
ins
xor
pop
frstor
imul
popa
sub
mov
rcl
dec
ret
mov
adc
icebp
mov
or
outs
dec
lahf
aad
mul
jle
clc
add
sub
lods
int
(bad)
into
int3
into
push
mov
stos
xchg
lods
xor
int
or
or
pop
jmp
or
fisttp
loope
enter
test
adc
sbb
or
xchg
leave
les
xchg
pop
pop
add
mov
add
push
mov
or
loop
inc
add
add
test
adc
jmp
iret
lods
daa
add
or
test
and
and
add
jl
push
fimul
adc
test
ret
mov
lahf
add
and
in
lahf
xchg
lods
dec
push
lahf
aas
dec
or
pop
in
add
pop
stos
inc
push
adc
ss
adc
xor
mov
sbb
mov
aad
movsx
test
push
and
neg
mov
popa
jmp
lahf
or
jg
adc
jp
or
ror
movs
or
aas
mov
xchg
lea
push
add
gs
ret
and
ss
jle
adc
scas
cli
les
lock
clc
pop
adc
(bad)
mov
out
mov
add
add
add
sbb
je
cdq
xchg
dec
dec
jl
pop
adc
mov
fwait
cmp
jg
inc
cdq
xor
inc
pop
cmp
dec
dec
adc
dec
or
and
add
jbe
xchg
sbb
movs
mov
pop
and
or
xor
lods
add
clc
cmc
lahf
nop
lock
test
jge
mov
xchg
pushaw
bnd
push
clc
adc
sub
repnz
dec
scas
sub
sub
in
imul
pop
lahf
pop
or
fmul
or
mov
rol
or
loope
pop
sbb
jg
ror
adc
popa
add
add
push
aas
imul
jg
add
ret
or
mov
add
mov
je
xlat
jmp
push
mov
or
jmp
sbb
jg
ins
in
xor
sar
ret
or
dec
scas
cmp
jp
dec
jb
jnp
xor
faddp
jl
add
and
sahf
mov
adc
js
ins
loope
pop
add
mov
arpl
aam
retf
jp
add
sbb
(bad)
adc
(bad)
mov
lock
add
mov
sbb
js
clc
lahf
add
adc
fistp
jae
int3
int3
mov
add
pop
mov
add
fiadd
rcr
sbb
add
jecxz
inc
adc
jecxz
add
dec
aam
(bad)
or
push
or
ret
rcl
adc
push
ins
popa
pop
push
mov
mov
pop
jnp
stos
or
fild
or
adc
fcomp
push
xor
xchg
clc
fisttp
xchg
sub
or
add
popa
loopne
dec
stos
and
mov
das
sub
js
pop
test
and
call
sub
inc
in
add
mov
repz
and
sub
push
rol
sub
add
sbb
and
xor
sbb
push
dec
xchg
or
fdivr
lea
nop
jp
mov
ja
lock
fcom
add
xchg
xor
neg
fimul
sub
push
or
sahf
xor
jo
(bad)
xor
sar
xor
sub
pop
or
dec
cmc
adc
and
push
cmp
lahf
lds
pop
and
jg
rol
mov
and
cld
sub
pusha
xor
sbb
dec
add
and
push
inc
lock
lahf
dec
int3
sub
enter
dec
pop
lea
and
sub
xor
adc
test
xchg
cmp
test
or
mov
inc
icebp
cmp
rcr
or
push
lahf
pop
xchg
add
sbb
loope
cmp
cmps
or
lock
or
jno
test
jecxz
jle
xchg
dec
lock
jecxz
jge
cmps
dec
lock
and
dec
sub
add
test
lds
push
ud2
sub
or
loop
mov
jge
lahf
in
push
push
push
sub
sbb
sar
mov
addr16
scas
xchg
std
push
push
sar
sbb
jle
and
add
or
iret
inc
das
pushf
add
aaa
es
mov
jle
sub
xchg
lock
sbb
mov
lea
inc
xor
inc
mov
adc
and
mov
jno
or
popa
and
sub
stos
movs
adc
jmp
jne
dec
sbb
(bad)
dec
lahf
mov
aas
pop
test
aas
rcl
add
je
lea
or
and
je
fwait
xchg
arpl
mov
mov
mov
push
add
sbb
xor
fist
add
add
push
xchg
push
pop
pop
inc
add
scas
lods
fxch
lock
pop
enter
jbe
sub
pop
leave
shl
es
pusha
mov
inc
adc
fisttp
add
jecxz
aaa
or
xor
inc
cmc
dec
adc
ret
inc
les
cmp
or
or
adc
or
fcom
rcr
ror
aaa
sub
dec
rcr
add
jl
ret
xor
xchg
sub
shl
add
sub
push
inc
paddusb
jns
add
xor
test
ins
int
add
dec
cmp
xor
or
or
(bad)
inc
dec
jecxz
mov
shr
pusha
gs
nop
add
inc
xor
sahf
cwde
dec
mov
mov
push
push
shl
and
inc
add
not
and
lock
aaa
push
push
lods
mov
sbb
or
xlat
xor
cli
pop
inc
sbb
cs
jecxz
arpl
pusha
stos
add
sbb
pop
test
or
pop
add
lock
aam
push
cmp
mov
lock
or
fsub
xchg
test
sbb
jne
loope
(bad)
sub
add
loope
sbb
sub
inc
cmp
xor
rcl
pop
gs
fcmovnb
sub
dec
mov
mov
mov
add
jl
jmp
ret
adc
loopne
pusha
out
or
dec
add
(bad)
add
inc
push
neg
and
sub
jbe
sbb
in
rcr
sbb
adc
inc
std
std
adc
fistp
daa
pop
scas
adc
or
mov
adc
adc
jmp
cmp
and
pop
add
and
add
xor
cwde
ins
mov
jne
mov
sub
fwait
cmp
imul
cs
call
xor
add
lds
xchg
nop
sub
div
sub
ret
mov
addr16
xor
sti
hlt
push
and
jmp
sub
and
pusha
mov
adc
xchg
out
push
xchg
mov
mov
adc
adc
sbb
xor
arpl
push
sub
xchg
xor
sub
dec
pushf
or
jnp
and
inc
adc
xchg
adc
push
popa
idiv
hlt
fimul
sbb
sub
jne
sahf
out
cmp
mov
sbb
dec
jb
or
rcl
out
ins
dec
in
add
mov
inc
shr
call
cmps
add
clc
lock
jge
js
in
or
mov
dec
mov
sbb
pop
mov
lock
xchg
jne
mov
sub
(bad)
pusha
out
dec
and
and
inc
ins
or
adc
add
push
or
rol
or
cmp
mov
cmp
push
ret
rcl
xlat
fdiv
popf
call
out
enter
dec
jmp
add
push
out
cmp
cmp
es
lea
jecxz
or
daa
and
jg
out
loopne
mov
add
xor
push
ret
sub
or
cs
jl
adc
clc
inc
jg
movs
lods
cmps
ret
jp
loopne
xchg
push
aas
or
push
(bad)
and
test
add
jbe
repnz
leave
xchg
js
fimul
mov
pop
call
sub
test
xor
je
and
ror
dec
int3
mov
add
xchg
or
add
or
ja
adc
mov
stos
pop
sbb
xchg
int3
pop
push
xor
mov
mov
xchg
mov
add
pop
mov
mov
(bad)
mov
outs
and
adc
inc
or
stos
xor
enter
sub
inc
xor
inc
and
mov
pop
cmps
fbstp
aam
mov
rcl
rcl
dec
xchg
or
sub
(bad)
and
cmp
jnp
pop
hlt
mov
push
or
or
push
and
inc
pop
rol
aas
(bad)
aam
jno
ins
push
xchg
inc
add
ds
mov
xor
fadd
ja
(bad)
mov
mov
sub
cli
leave
push
rol
call
xor
jo
loope
loope
sub
mov
sbb
clc
icebp
mov
or
or
or
or
cmp
ror
jecxz
dec
fimul
outs
call
lea
cmp
pop
inc
adc
lea
popa
sub
dec
mov
sbb
sbb
jno
lods
dec
dec
and
mov
xchg
popa
popa
or
inc
ret
add
and
push
cmp
mov
push
cdq
mov
ror
je
xor
adc
inc
das
or
fadd
add
jg
lock
stos
push
aas
les
xor
sbb
retf
jbe
daa
dec
push
add
push
jge
lea
shl
add
rcl
add
adc
mov
mov
fwait
popa
mov
movs
pop
inc
fsub
push
push
aad
lods
adc
sub
push
loope
push
cmp
push
pop
mov
add
test
addr16
pop
xor
add
sub
je
xchg
fsubr
pop
bound
pop
imul
xor
add
cdq
je
add
shr
or
and
call
inc
pusha
pop
int
test
mov
cmp
mov
jno
mov
xchg
pop
add
test
mov
aas
stos
test
or
loope
scas
or
scas
les
jno
scas
and
out
or
rol
push
lods
xor
sub
add
add
rsqrtps
hlt
fwait
add
movs
mov
inc
call
add
inc
push
call
mov
jecxz
pop
(bad)
(bad)
xchg
add
pop
push
xchg
pop
dec
test
or
aad
or
daa
adc
adc
pop
int3
or
sub
xchg
pop
dec
xor
cmp
mov
sbb
and
inc
push
pop
xchg
outs
or
inc
pop
shl
push
lods
retf
and
sub
je
pusha
pop
and
pop
iret
pusha
pop
push
call
mov
add
push
jne
push
adc
mov
in
and
(bad)
in
add
rcr
fstp
dec
rcl
movs
push
jp
cmp
xor
push
iret
push
push
(bad)
aad
and
popa
xchg
dec
xlat
ret
inc
jecxz
dec
dec
(bad)
fistp
mov
nop
inc
fild
dec
pop
inc
sbb
retf
or
cmp
cmp
aad
mov
popa
xchg
or
sbb
pop
std
aas
das
push
and
lahf
ret
(bad)
fsubr
pushf
xor
pop
push
jg
add
inc
push
popf
fcomp
add
call
jb
shr
adc
in
cmp
js
cmps
push
addr16
ror
imul
add
and
inc
push
adc
mov
cli
test
xchg
call
push
ja
iret
add
dec
add
mov
push
or
dec
sub
shr
inc
dec
pushf
loopne
add
mov
dec
lods
or
push
cmp
xchg
jecxz
xor
int3
dec
or
jno
sahf
dec
mov
shr
mov
jb
or
jl
or
xor
call
adc
sbb
cmc
jo
jnp
or
cld
das
adc
mov
add
cmp
xor
jne
push
xchg
xor
loopne
fimul
add
dec
sub
in
sub
ret
mov
ins
push
cmp
xor
sub
aad
jns
push
ins
xchg
cs
add
dec
sub
inc
or
dec
mov
pop
ds
imul
ins
pop
adc
js
add
push
push
mov
movs
in
and
les
scas
inc
dec
js
or
push
(bad)
sbb
sbb
adc
add
mov
mov
jnp
inc
push
sub
shl
push
add
dec
mov
shl
lahf
je
bound
cmc
xchg
xor
fsubr
sub
or
xchg
and
jae
sbb
fisttp
inc
pop
enter
mov
mov
mov
add
add
nop
rcl
add
add
or
ins
pusha
rcl
jne
inc
fisubr
mov
imul
bound
xor
sbb
pusha
fisubr
xor
les
xor
dec
mov
mov
mov
add
lds
jg
adc
adc
pop
or
je
cmp
pusha
mov
(bad)
mov
inc
ins
mov
ficomp
add
mov
xor
pop
mov
push
sub
inc
xchg
jne
xchg
or
push
jmp
jns
sbb
mov
icebp
or
adc
mov
lahf
movs
or
sbb
adc
mov
cmp
inc
sub
sbb
cld
cmp
aam
push
and
sbb
aas
out
dec
add
and
test
add
adc
ffreep
je
jns
loopne
nop
lahf
nop
das
jo
aas
dec
test
pop
or
inc
nop
adc
das
pop
movs
cmp
mov
adc
fsubr
inc
push
dec
sub
dec
cmp
mov
movs
test
outs
xadd
test
sets
sub
push
add
pop
jl
sub
fbld
inc
ins
and
shr
js
shl
test
or
sbb
sub
pop
inc
or
js
mov
dec
or
and
and
adc
xor
rcl
jns
xchg
mov
push
push
frstor
lock
push
loopne
call
pop
sahf
jmp
mov
popa
push
fild
repnz
ins
loop
cmp
jp
xchg
shr
adc
mov
mov
mov
add
fs
lods
mov
dec
test
push
dec
cs
aas
and
(bad)
in
inc
dec
lea
test
movs
cmps
add
add
loopne
daa
mov
jmp
push
or
jecxz
lea
inc
inc
pop
mov
or
xchg
aad
adc
dec
add
pop
xor
dec
mov
and
rcl
dec
cdq
mov
imul
pop
add
rcr
lods
lock
inc
lea
mov
sti
jmp
imul
mov
push
cwde
pop
add
mov
add
adc
mov
cmp
jp
stos
add
mov
aaa
push
lods
sbb
rcr
pop
js
push
adc
(bad)
jmp
loop
and
push
enter
mov
jmp
(bad)
dec
add
les
sub
and
inc
(bad)
and
loopne
test
fstp
shr
add
int3
leave
mov
jne
mov
sub
or
pop
cld
sbb
add
popa
add
adc
push
cld
push
test
xor
sub
fwait
add
retf
call
add
and
jp
aaa
stos
cmp
dec
test
mov
and
and
jae
jno
test
xchg
mov
xor
xlat
ss
stos
push
pop
call
adc
push
adc
push
(bad)
sbb
imul
lahf
(bad)
scas
ins
loopne
or
aam
adc
inc
loopne
mov
ds
and
cmp
add
xor
mov
sahf
pusha
mov
xor
push
jnp
add
test
lods
jp
or
lahf
add
or
push
in
mov
add
push
add
adc
les
jne
test
jns
xlat
mov
jne
div
pop
mov
dec
dec
xchg
pushf
int3
add
loope
jo
push
ror
add
adc
je
and
fistp
ja
push
ins
pop
add
call
mov
or
or
or
adc
pop
push
xchg
adc
pop
or
xlat
adc
xor
stos
or
mov
dec
pop
adc
test
push
inc
daa
leave
or
adc
jmp
popf
call
cmp
imul
jmp
inc
dec
push
mov
test
ret
and
push
int3
mov
je
or
xor
mov
push
mov
mov
xor
mov
cwde
loopne
(bad)
cwde
push
cmps
adc
xor
or
add
cmp
push
sub
or
push
fisubr
add
popa
push
pop
inc
test
test
jmp
les
jno
xor
sbb
test
add
lock
loopne
xor
adc
push
adc
or
ins
or
add
shl
jb
jecxz
call
(bad)
cmp
cmp
xchg
sub
cmp
xchg
popf
mov
push
dec
jecxz
sbb
je
xchg
js
xor
sar
js
jge
sbb
or
mov
sub
movs
adc
mov
cli
inc
pop
sub
push
inc
bound
ror
movs
xor
int3
mov
and
add
or
in
adc
dec
adc
test
pop
add
cld
inc
jnp
mov
xor
xor
outs
or
movs
daa
das
mov
sti
and
(bad)
sbb
inc
jmp
arpl
push
sbb
rcr
and
add
lods
popa
push
mov
inc
mov
xor
pop
add
pop
sub
mov
push
or
ror
ror
loop
push
inc
sbb
mov
add
add
and
call
popa
xor
repz
nop
cs
jge
add
add
jle
pop
add
adc
ss
push
nop
add
loopne
repz
mov
sti
loopne
add
jmp
jmp
int
stos
mov
(bad)
ror
outs
fiadd
rcl
sbb
push
push
dec
sbb
in
xchg
adc
loopne
icebp
stc
clc
dec
mov
dec
mov
pop
jge
xlat
pop
mov
add
lods
retf
mov
(bad)
or
xor
ror
ror
loopne
add
jmp
scas
loope
aam
push
cmp
in
add
and
ficom
jo
imul
mov
push
lods
push
adc
pop
das
jae
xchg
push
mov
mov
lods
jmp
dec
cwde
mov
jo
push
dec
sbb
stos
or
stos
cmps
stos
push
cmp
enter
in
add
jo
xchg
jno
sbb
scas
pushf
jmp
leave
jmp
fadd
add
or
or
push
fdiv
xor
rcr
sbb
or
cli
mov
cmps
push
add
adc
pop
jmp
mov
mov
sub
dec
mov
dec
sbb
shr
adc
das
sbb
(bad)
xlat
cli
push
push
daa
loopne
add
rcr
mov
shl
inc
rcl
(bad)
pop
daa
loop
aaa
lds
ins
cmp
sbb
ja
or
ret
in
int3
lea
and
mov
cmp
pusha
aam
cmc
jo
and
scas
sbb
add
gs
push
je
pushf
test
mov
sbb
and
(bad)
in
xor
push
icebp
dec
jne
not
cmp
rcl
add
test
dec
icebp
pop
pop
jb
ret
cwde
inc
mov
pop
or
mov
(bad)
outs
adc
into
mov
pop
push
mov
mov
jecxz
ror
pop
jle
xchg
cwde
mov
mov
adc
adc
cdq
shl
ret
and
mov
ss
(bad)
push
sbb
call
call
add
repnz
sbb
fmul
pop
xor
rol
das
aas
int
arpl
jne
sbb
lock
bound
enter
pop
and
pusha
jmp
outs
in
int3
jne
inc
fcomp
xchg
lock
sbb
push
adc
add
cmp
jb
add
(bad)
push
sti
mov
ret
adc
out
inc
mov
mov
outs
jae
fmul
push
sbb
and
push
and
pusha
jmp
xchg
fdiv
cmp
add
jbe
shr
xor
dec
xor
pop
mov
bound
ret
pusha
cwde
adc
xchg
and
aaa
jl
outs
jae
pop
dec
add
inc
adc
inc
stos
loopne
push
ja
push
inc
test
rcl
push
inc
pop
dec
add
sbb
cwde
test
js
and
adc
pushf
lds
add
sbb
push
inc
add
clc
adc
push
loop
aad
pop
push
or
or
xor
lods
cmps
jmp
jmp
jge
js
sar
push
retf
xor
aas
(bad)
fadd
pop
jo
or
or
pushf
inc
outs
fadd
or
add
or
adc
sbb
mov
aas
adc
clc
outs
or
jne
push
xchg
cmp
xlat
cmps
test
add
sbb
lods
pop
lods
mov
lahf
cmp
pop
fbstp
fild
aas
aas
sub
push
aam
pop
adc
push
dec
mov
sbb
pop
inc
and
sbb
es
outs
pop
dec
in
in
mov
adc
inc
adc
adc
pop
fcomp
enter
dec
mov
jne
inc
sub
add
mov
ss
loopne
mov
pop
lods
or
test
rcl
mov
call
xchg
sbb
loope
jmp
adc
adc
xor
cmp
pusha
sbb
mov
cmp
call
mov
mov
cmp
test
add
mov
add
sub
adc
mov
in
fcomp
cmp
popa
ins
jne
sbb
adc
mov
pop
or
loope
rol
rsm
nop
inc
sahf
adc
jne
aas
mov
nop
cmc
das
sub
jmp
mov
outs
xor
in
cmp
dec
aam
aam
ror
xchg
jle
sub
mov
std
(bad)
cmps
jne
call
mov
add
cmp
or
scas
inc
mov
in
in
pop
fwait
inc
sbb
(bad)
lock
pop
lds
pop
inc
jnp
jbe
inc
neg
(bad)
cmp
sbb
or
cmp
fsub
mov
aaa
lock
test
push
cmp
ret
jbe
push
loop
pop
lock
in
in
mov
or
xchg
js
jmp
lea
add
mov
xchg
je
adc
stc
jp
sti
in
push
add
add
dec
and
or
push
in
mov
and
in
movs
shr
aad
aad
std
test
mov
or
ds
xlat
sub
cmp
cmp
add
rcl
cmp
call
mov
xchg
(bad)
pop
mov
xor
or
pop
rol
inc
inc
jl
or
jno
inc
jo
inc
or
pop
sub
mov
mov
pop
mov
xor
out
jge
xor
js
mov
mov
mov
jmp
or
xchg
sbb
inc
sub
call
popa
sub
and
sbb
stc
pop
mov
mov
pop
cmp
sbb
mov
push
ret
inc
es
sbb
mov
sub
jl
scas
imul
and
lock
and
jo
and
inc
mov
sbb
out
mov
in
push
jmp
push
stos
mov
inc
stos
inc
push
lahf
pusha
add
jmp
les
pop
xchg
mov
mov
test
das
and
je
push
add
rol
adc
mov
pop
cmps
jae
(bad)
(bad)
adc
inc
inc
into
pop
aam
jg
jne
or
and
pop
mov
push
adc
add
loopne
nop
pop
ror
ror
sbb
movs
inc
push
std
xor
pop
pop
or
cld
xor
clc
icebp
or
sub
add
or
mov
or
cmp
adc
adc
jmp
fwait
sub
mov
nop
pop
xchg
(bad)
popa
mov
shl
jg
jg
pop
xlat
shl
lea
(bad)
addr16
xor
(bad)
add
test
cmp
fcom
retf
jmp
push
cdq
and
inc
(bad)
sub
xor
dec
ret
outs
(bad)
lds
mov
or
inc
sbb
nop
or
fs
dec
add
mov
(bad)
adc
xor
mov
sbb
mov
mov
mov
xchg
jg
or
loop
nop
push
dec
cmps
addr16
icebp
sub
or
or
loopne
inc
jnp
sbb
mov
je
sbb
je
sub
out
push
add
dec
in
push
xor
xchg
inc
inc
push
and
outs
jae
(bad)
mov
and
sub
add
mov
mov
shl
inc
pop
xor
sbb
inc
push
lock
push
jl
loope
mov
imul
leave
push
cmp
mov
inc
or
pop
je
add
aas
pusha
jno
neg
add
adc
inc
add
jg
adc
mov
inc
xchg
das
loopne
int
push
mov
rcl
cld
jmp
xchg
and
jmp
js
adc
mov
or
or
and
jne
cld
mov
add
jo
shl
pusha
and
or
or
cs
add
jmp
push
sbb
jg
pop
imul
pop
ret
movs
dec
xchg
call
xchg
adc
sbb
adc
add
arpl
sub
pop
test
push
push
loopne
scas
enter
mov
sbb
push
in
mov
dec
jmp
and
and
or
adc
jmp
sbb
mov
add
je
and
push
jmp
out
lock
and
adc
mov
dec
xchg
adc
mov
or
or
lahf
dec
and
aam
inc
dec
imul
adc
ret
clc
mov
mov
call
fistp
push
fild
jl
rcl
jp
call
pop
aaa
or
adc
cmp
lds
dec
push
scas
test
add
push
lods
(bad)
jmp
jb
mov
lods
sub
push
or
mov
loopne
mov
stc
sbb
dec
(bad)
(bad)
in
pop
and
adc
fadd
mov
mov
loopne
jno
xlat
pop
or
daa
lea
pop
jl
push
fld
mov
cmps
mov
or
sub
and
ins
mov
mov
mov
xchg
out
pop
rcr
xor
xchg
sbb
push
mov
push
xchg
pushf
sbb
mov
popf
mov
or
mov
enter
push
xchg
or
sbb
test
dec
pop
mov
adc
add
in
sbb
push
sbb
and
loop
push
fild
stos
mov
add
test
or
sub
cmc
xchg
js
jge
test
fsub
inc
data16
sbb
mov
retf
repnz
ss
or
ret
mov
xchg
fcomp
dec
adc
dec
icebp
mov
or
xchg
int3
push
jne
pop
cmp
ret
mov
adc
jge
or
sbb
push
inc
hlt
je
dec
adc
stc
dec
add
add
adc
movs
push
fist
sbb
sbb
dec
(bad)
jge
rcr
movs
xchg
add
pusha
leave
inc
push
arpl
sub
cs
mov
popa
inc
and
jne
adc
mov
arpl
inc
adc
push
and
inc
aaa
or
mov
mov
sbb
cdq
rcr
jnp
dec
mov
sub
aam
add
mov
jmp
dec
cmps
add
adc
inc
adc
int3
pop
add
enter
add
int3
jg
push
repnz
ds
(bad)
pop
push
pusha
push
mov
ds
out
sar
adc
cmp
pusha
mov
pop
in
call
aaa
or
adc
and
test
add
pusha
test
mov
mov
sbb
dec
xor
dec
lods
cmps
adc
mov
pop
mov
lds
adc
or
adc
lock
xor
sbb
adc
out
add
or
cmp
stos
pop
push
add
jo
jmp
xchg
and
mov
sti
sbb
adc
out
add
mov
jmp
(bad)
retf
or
rol
inc
mov
iret
mov
add
(bad)
nop
cwde
pop
jg
xchg
mov
sbb
jo
jle
in
mov
lods
cmp
outs
or
fucomi
mov
or
and
and
jmp
jge
adc
add
mov
aas
or
inc
push
inc
pop
mov
add
leave
sub
sub
and
push
or
sub
xchg
xor
cmc
loope
pop
je
dec
mov
(bad)
pop
or
int
fsub
jp
pop
cld
dec
mov
ret
or
cmc
hlt
mov
jmp
jne
add
dec
cwde
xor
jne
ins
xor
and
ins
cdq
jnp
into
jne
mov
or
jg
xchg
dec
inc
rol
inc
pop
leave
cwde
pop
movs
sub
test
popa
pop
aaa
or
add
sbb
adc
or
or
adc
pop
dec
and
sbb
add
inc
mov
pushf
dec
mov
mov
push
inc
add
or
add
or
ret
adc
icebp
pop
jo
xor
fucomp
mov
icebp
retf
push
or
les
retf
mov
cmp
xor
cmp
jno
cld
mov
retf
add
fild
ins
int
sbb
add
pop
jmp
sbb
mov
pop
jbe
sub
xchg
add
out
mov
sub
lds
cmps
call
adc
xor
sbb
dec
inc
test
xchg
retf
js
je
inc
cmp
imul
and
xor
push
test
add
mov
mov
call
cwde
or
and
bound
lods
push
lds
punpckhdq
das
mov
(bad)
ret
test
mov
dec
jl
pushf
stos
mov
les
cmp
add
and
gs
inc
add
mov
pop
(bad)
sbb
cmp
jno
sub
or
mov
and
mov
or
out
sbb
and
mov
sub
icebp
or
lds
test
add
dec
mov
mov
pop
sub
add
mov
or
and
add
stc
inc
ja
xchg
cmps
pop
dec
pushf
ficom
stc
inc
and
push
add
clc
add
pusha
mov
test
add
sbb
test
loope
shr
xor
ret
aam
add
sub
pop
leave
push
leave
retf
or
and
or
jp
and
dec
pop
and
nop
dec
push
xchg
mov
mov
clc
js
push
jb
sub
inc
leave
je
cmp
push
xor
push
or
add
enter
add
(bad)
aam
pushf
in
inc
or
movs
jb
(bad)
(bad)
cmp
fisttp
xchg
pusha
xor
xor
cli
xor
stos
pushf
mov
and
pop
(bad)
mov
test
call
stos
pop
or
dec
inc
push
ja
imul
inc
or
loop
pop
mov
xchg
push
or
shl
add
leave
pop
adc
mov
inc
ja
arpl
dec
test
add
outs
or
lea
and
lea
dec
dec
xchg
mov
add
add
sbb
or
mov
jg
dec
ins
xor
cld
cmp
pop
jnp
sbb
add
xor
add
test
adc
movs
(bad)
and
sub
or
sbb
fcomp
mov
and
lea
imul
and
movs
mov
es
pop
aas
sbb
push
sahf
icebp
add
sub
mov
or
pushf
inc
sbb
outs
in
cmps
mov
add
push
cwde
cld
int
pop
jmp
popf
cmps
mov
shr
enter
sbb
jo
add
js
add
dec
leave
inc
movs
inc
mov
sar
push
cmp
movs
ins
add
es
or
inc
sbb
push
or
orps
pop
push
cwde
popa
vmovss
pop
scas
or
or
call
mov
shl
add
ret
nop
adc
popf
pop
shl
sbb
mov
iret
mov
xor
xchg
sub
add
xor
xchg
add
(bad)
mov
test
rcr
retf
and
xchg
leave
clc
fwait
or
leave
enter
cwde
je
jg
jecxz
cmps
sub
xchg
pop
mov
fsubr
int
dec
lods
test
icebp
add
xchg
pusha
test
dec
jmp
dec
cdq
cmc
sub
pushf
pop
cmc
xor
pop
stc
and
inc
leave
inc
and
xor
addr16
sbb
mov
int3
mov
int3
push
sahf
cmp
nop
and
push
push
xchg
jb
lahf
sbb
int
enter
int
lahf
mov
add
test
or
mov
inc
push
ins
pop
mov
in
out
stos
or
out
shr
pop
test
pop
mov
in
scas
cmp
mov
mov
ret
sbb
push
inc
dec
jae
and
push
mov
add
dec
pop
add
pop
and
xchg
xchg
sbb
mov
adc
add
outs
stos
cld
add
inc
dec
mov
out
mov
adc
mov
pop
adc
and
add
mov
or
inc
push
mov
sbb
push
loopne
inc
pop
enter
call
cli
add
add
dec
pop
push
xor
inc
add
pop
add
inc
mov
out
inc
sub
test
push
fmulp
pop
loope
cmc
add
in
pop
push
xchg
jne
out
inc
inc
js
movs
push
push
push
push
dec
loope
jbe
xor
enter
loop
xor
and
inc
cmps
push
jg
and
pop
adc
in
or
dec
sbb
xor
cmp
push
mov
mov
fcomp
mov
(bad)
aam
jo
inc
popf
popa
push
js
cmp
or
or
inc
mov
movs
mov
push
shr
xchg
cs
xor
push
ror
mov
pop
and
daa
dec
pop
retf
mov
nop
inc
sbb
enter
retf
mov
mov
add
inc
retf
mov
add
imul
nop
push
inc
mov
push
inc
pop
stos
cld
add
push
ror
jp
leave
mov
or
sar
inc
leave
adc
xchg
add
rol
inc
xchg
out
sqrtps
js
add
scas
dec
sub
inc
add
ds
rcl
fild
rcl
mov
add
lahf
pushf
mov
adc
adc
ltr
adc
movs
push
inc
and
add
inc
pusha
jno
mov
mov
call
arpl
stos
cld
loope
sbb
pusha
add
mov
enter
mov
cmp
pop
mov
add
fstp
inc
add
sbb
push
sbb
inc
add
jmp
mov
pop
push
inc
loopne
(bad)
lods
or
add
pop
adc
mov
mov
arpl
mov
cmp
add
pop
das
sub
add
mov
stos
cld
loope
add
push
movs
mov
mov
inc
repnz
int3
loope
jo
sbb
push
mov
and
adc
add
add
add
push
dec
or
sub
mov
mov
adc
and
ror
dec
mov
add
enter
adc
and
shr
retf
mov
out
retf
cmps
or
lahf
lods
add
push
xchg
xlat
inc
mov
aam
or
add
mov
add
inc
mov
shl
lahf
aam
push
add
sub
lods
adc
sub
adc
lahf
mov
mov
retf
xor
sub
inc
mov
aam
lods
sub
add
lahf
xlat
mov
sbb
push
retf
xor
nop
or
lahf
push
adc
or
sbb
xchg
cmp
aam
cmps
mov
xchg
push
mov
xchg
mov
cmp
hlt
inc
dec
adc
iret
hlt
int
and
add
sub
clc
add
pushf
(bad)
ret
push
(bad)
or
adc
fild
data16
fcomp
dec
cmp
call
or
in
aas
mov
mov
bound
add
xlat
lods
aas
call
leave
jp
dec
adc
jg
rcl
mov
aas
add
sbb
lahf
or
adc
mov
add
cmp
push
and
dec
aas
test
inc
dec
mov
or
add
add
sbb
aas
and
adc
aas
adc
jmp
jnp
or
pop
aas
push
mov
and
add
lods
jno
fsub
rcl
xchg
push
rcr
jl
add
add
rcl
or
gs
mov
push
pop
fstp
pop
add
adc
inc
repnz
mov
call
ficom
fmul
add
lods
or
dec
cmp
inc
pop
sub
pop
mov
mov
mov
cwde
and
cmp
cwde
jne
jg
and
lds
in
dec
adc
add
cwde
push
mov
pop
add
fisttp
cmp
dec
mov
enter
mov
cmp
stos
mov
sub
loop
xor
push
push
retf
or
loopne
and
std
dec
adc
mov
shl
add
shr
pop
inc
or
sub
loop
lahf
and
xor
loope
add
sub
das
push
cmp
dec
or
dec
dec
and
mov
adc
dec
ins
jg
ins
fs
jae
or
pop
fild
cmp
in
inc
loope
inc
pop
sub
cmp
jg
adc
repnz
jg
adc
leave
mov
adc
lahf
push
mov
pop
add
pop
aas
cwde
sbb
add
lahf
fwait
cmp
jmp
inc
xor
cmp
mov
cmp
inc
adc
mov
fsub
aas
aas
mov
pop
push
or
inc
stos
cld
inc
push
adc
lods
sub
je
out
or
in
repnz
mov
sbb
pop
adc
out
mov
add
(bad)
lods
jns
enter
jmp
gs
mov
out
(bad)
sub
xchg
ror
stc
fisttp
jns
enter
stc
enter
jmp
add
sbb
inc
push
push
lock
sbb
sub
aas
(bad)
lods
je
or
push
lock
shl
ins
inc
pop
pop
lods
pop
mov
ret
pop
fisttp
pop
add
fbld
sbb
or
lahf
sbb
icebp
in
pop
or
shr
lahf
mov
add
jne
mov
repnz
adc
pop
test
mov
or
adc
(bad)
jl
adc
cmp
lods
and
imul
dec
add
test
ss
add
add
xor
cld
xor
and
leave
pop
sub
add
leave
cli
push
add
(bad)
in
xchg
pop
add
jmp
in
jb
jmp
inc
or
or
add
xor
movs
mov
sub
movs
inc
adc
shr
pop
and
dec
cwde
cld
rcr
mov
pop
inc
jb
jbe
dec
lahf
repnz
inc
mov
aam
lahf
stos
popa
pushf
adc
in
lock
mov
xlat
push
mov
imul
std
jmp
adc
je
movs
inc
xchg
add
and
aam
jne
adc
shl
mov
push
sbb
gs
pop
add
(bad)
lea
lea
clc
movs
hlt
mov
mov
xor
pop
rol
dec
std
or
shl
fwait
adc
cwde
add
xchg
retf
dec
dec
inc
or
inc
in
push
or
test
enter
add
std
sub
daa
jmp
add
adc
inc
cmc
rcr
ret
xchg
push
mov
sbb
push
inc
sbb
add
mov
hlt
mov
or
jb
add
pusha
retf
sbb
adc
adc
push
dec
xchg
jp
xor
push
sub
in
fnsave
adc
sbb
outs
or
es
test
jb
sbb
stc
clc
out
adc
ret
jne
push
or
push
push
cdq
inc
sbb
push
mov
adc
aam
in
pop
xor
cmps
repnz
or
repnz
movs
retf
(bad)
dec
cmp
cmp
nop
das
test
pop
icebp
mov
mov
pop
or
add
out
cmovns
sub
lsl
jo
pop
addr16
shl
cmp
sbb
xchg
dec
or
sub
sbb
mov
add
icebp
push
call
and
or
sbb
push
dec
popa
or
mov
sbb
push
sub
mov
je
stc
xchg
adc
pusha
lea
pop
and
ja
lock
lock
loopne
dec
dec
imul
sub
pusha
test
test
or
test
push
adc
xor
or
push
pop
push
pop
add
add
adc
adc
pop
lea
dec
mov
dec
and
leave
inc
lock
push
adc
sbb
add
xchg
shl
call
fsubr
ret
sbb
call
sbb
mov
in
inc
push
and
dec
push
cmp
loopne
xchg
sub
xchg
push
mov
inc
fwait
pop
push
pop
fsub
aam
sbb
mov
cld
inc
les
cmp
mov
adc
ror
ret
sbb
xor
push
adc
push
jo
inc
mov
xor
out
add
add
dec
add
adc
cmp
les
xchg
add
adc
call
mov
mov
aam
rcl
push
fldpi
mov
shr
rol
or
jl
je
add
or
pop
ret
mov
inc
aam
inc
mov
mov
mov
sub
cld
mov
stc
dec
pop
and
lea
mov
lods
mov
pop
pop
mov
das
jo
xor
popa
movs
dec
gs
pop
movs
mov
pop
xchg
or
pushf
daa
pushf
cwde
push
push
push
dec
repz
mov
jg
std
fst
xchg
nop
push
and
loopne
repnz
std
mov
mov
clc
mov
test
mov
dec
fiadd
add
arpl
nop
sub
jge
cmp
call
pop
cli
add
mov
and
xor
jb
sbb
adc
in
or
aaa
jl
mov
and
cld
test
xor
or
icebp
inc
sbb
adc
or
xor
fadd
mov
inc
test
gs
mov
pop
mov
stc
xor
mov
int
add
rcl
stc
jno
sbb
cmp
push
xor
in
add
sbb
in
xor
add
sub
mov
retf
movs
dec
out
push
sub
sub
pop
mov
ret
add
cmp
je
lock
cmp
test
jl
fnsave
xor
fild
add
dec
repz
xor
mov
xor
pushf
adc
pop
rol
xor
or
movs
or
and
or
outs
mov
mov
jbe
loopne
mov
cmp
mov
fdivr
mov
arpl
mov
jo
inc
push
and
inc
add
movs
and
inc
nop
push
je
stos
loopne
add
jmp
and
nop
rcr
setp
sbb
xor
jle
ss
or
mov
enter
jo
adc
(bad)
inc
enter
inc
jno
cmp
pushf
push
mov
push
lea
dec
add
xchg
inc
push
test
dec
and
mov
push
push
fmul
inc
push
push
sub
cld
sbb
mov
inc
mov
xchg
fwait
rcl
(bad)
push
adc
xor
sbb
pushf
sbb
imul
bound
(bad)
adc
dec
and
in
and
je
cwde
jge
dec
mov
pop
dec
fisubr
int3
movs
dec
sbb
push
mov
inc
push
and
inc
retf
mov
adc
add
cmp
jle
pop
pop
pop
or
and
pop
psubd
add
add
or
or
xor
cld
jg
jns
aam
sti
dec
push
inc
pop
sbb
sti
push
les
adc
cli
ins
clts
call
mov
pop
das
dec
cs
dec
or
pop
je
ja
mov
mov
hlt
and
jo
sub
enter
(bad)
lock
test
dec
or
or
mov
sti
cmps
mov
adc
sti
xchg
imul
or
hlt
fcom
inc
fild
adc
adc
push
xchg
(bad)
lods
in
pop
(bad)
fmul
fmul
sub
rol
push
mov
inc
pop
shr
mov
add
push
adc
or
and
or
xchg
pop
pop
dec
int3
test
and
ss
js
cmp
xchg
mov
sahf
retf
out
push
pop
shr
sbb
mov
add
mov
jo
not
call
sub
sbb
das
inc
test
and
jp
sbb
mov
loopne
scas
sbb
(bad)
movs
inc
cdq
std
push
mov
das
mov
mov
cmp
mov
mov
push
sbb
push
xlat
adc
sbb
in
das
scas
lea
(bad)
into
movs
test
(bad)
repnz
retf
add
mov
pushf
push
pop
mov
fisttp
scas
movs
dec
sub
cwde
arpl
xchg
test
int3
std
xchg
pop
pop
jnp
pop
fst
dec
mov
test
ss
cwde
inc
mov
fs
xchg
mov
mov
test
(bad)
pop
jl
mov
xchg
retf
aaa
js
js
and
test
es
ins
mov
ret
cmp
aas
and
pusha
pop
jbe
lea
in
and
sbb
in
bound
sti
int3
sbb
and
arpl
fcomp
jo
clc
sbb
mov
push
es
mov
xchg
inc
sub
(bad)
call
or
or
data16
sub
cmp
sbb
test
cdq
ds
mov
lock
push
xchg
push
mov
clc
jnp
sbb
and
inc
ja
das
push
leave
mov
cmp
and
mov
imul
pop
hlt
pop
jne
xchg
enter
sub
adc
pop
call
mov
jp
and
sub
std
xchg
mov
jmp
sti
and
(bad)
adc
dec
lods
adc
shl
jmp
dec
push
ins
pop
vandpd
sub
mov
mov
dec
test
pop
sub
test
(bad)
inc
mov
dec
ret
inc
arpl
sub
movs
add
pop
cmp
inc
sub
cld
cld
xchg
pop
test
xor
and
ds
sub
push
das
mov
or
fdivr
and
and
add
pop
and
mov
xchg
retf
adc
arpl
std
xchg
add
push
xor
and
inc
or
lds
arpl
pop
sub
cmp
push
sbb
mov
mov
xchg
push
cld
and
bnd
cld
push
cld
adc
adc
stos
mov
xchg
jmp
retf
mov
mov
aam
or
test
jnp
rol
xchg
pop
or
movs
test
call
loopne
add
and
pop
test
ja
add
or
test
inc
ins
xchg
add
out
push
or
test
adc
add
loopne
push
test
test
sbb
leave
fisttp
adc
mov
xchg
add
addr16
push
stos
add
ret
hlt
dec
imul
inc
out
jae
add
loope
xchg
aam
adc
push
sub
ror
or
dec
pop
pop
int3
cdq
pop
js
rol
test
jecxz
adc
ret
jne
popf
and
jnp
or
dec
push
push
inc
call
in
inc
repz
loopne
cmps
xchg
fwait
loopne
xor
dec
push
test
add
(bad)
test
lahf
sbb
scas
and
aam
inc
lock
lea
cvttps2pi
aas
push
or
dec
cmc
jg
push
lock
sub
inc
call
call
lods
enter
call
test
add
or
pop
in
cmp
adc
add
add
pop
mov
les
or
push
ret
mov
pusha
mov
movs
fld
or
or
(bad)
in
or
mov
and
ret
xchg
inc
rol
outs
push
sub
pop
jmp
add
in
jp
sbb
push
rol
jmp
jmp
mov
push
xchg
into
sub
mov
add
rcl
mov
les
loopne
sbb
cmc
dec
xor
xor
jne
or
(bad)
and
push
int3
enter
std
push
push
test
or
lea
loop
call
cmp
mov
add
cs
(bad)
rol
lea
or
adc
sub
or
adc
jo
in
add
jo
xor
or
repnz
and
addr16
fwait
ret
aam
or
mov
adc
push
cmp
int3
push
test
movs
mov
test
sub
mov
push
cmp
or
fs
in
pusha
xchg
fst
adc
adc
xsha1
cmps
mov
mov
cmps
mov
stc
mov
cmp
inc
xlat
dec
sbb
add
lea
cmp
es
test
test
inc
retf
adc
movs
dec
popa
jmp
test
or
push
ret
adc
inc
data16
lahf
xchg
or
push
jo
sti
jno
das
adc
lea
retf
adc
xchg
adc
add
add
or
rcl
loope
pop
xlat
mov
jno
loope
dec
les
mov
sbb
test
(bad)
sub
sti
xchg
pop
cmps
dec
and
inc
inc
mov
dec
jmp
ins
std
adc
dec
ins
std
mov
push
pop
cwde
adc
dec
shr
sub
cld
cwde
push
dec
call
fs
outs
jo
jnp
pusha
add
pop
xchg
adc
xor
bound
(bad)
and
push
and
xchg
ins
pushf
retf
sub
push
pop
push
call
sbb
dec
jnp
inc
add
sub
mov
mov
mov
cmp
adc
pop
adc
pop
or
add
fst
xor
sub
push
sbb
rcl
pop
lds
sti
pop
xchg
in
xor
adc
repnz
and
xor
imul
in
in
mov
ja
sub
sub
test
imul
sub
inc
imul
sbb
das
mov
adc
mov
fild
adc
or
dec
clc
or
sub
sti
inc
shl
or
mov
sub
lea
adc
adc
and
jae
add
cwde
jno
nop
pop
xchg
outs
movs
xor
pop
lea
mov
mov
add
ret
xchg
xchg
add
stc
xlat
ins
movs
adc
sbb
push
dec
push
adc
clc
xchg
cmp
sub
add
inc
cmp
dec
in
mov
in
adc
sbb
xlat
and
and
(bad)
test
je
inc
dec
mov
xchg
inc
xlat
clc
jns
cmp
jnp
(bad)
xor
in
(bad)
ins
cmps
pop
mov
sub
pop
(bad)
fmul
xchg
mov
call
xchg
call
rcr
push
dec
mov
pop
pop
or
jo
mov
jae
xchg
push
push
cwde
jbe
movaps
sar
out
pop
fstp
fdiv
xor
inc
sbb
push
cmp
inc
ins
aad
pop
sub
xor
sbb
test
pop
mov
pop
add
push
icebp
fiadd
dec
fmul
inc
dec
pop
sub
sbb
mov
mov
sar
es
loopne
rcl
add
adc
pusha
xchg
test
pop
add
push
mov
push
dec
add
dec
pop
jo
inc
test
dec
call
inc
push
fsub
lahf
pop
adc
fistp
xchg
inc
pop
mov
sub
pop
ret
ins
clc
fdiv
pop
jbe
les
ins
lahf
adc
inc
add
mov
icebp
dec
jo
jecxz
push
push
fld
push
xchg
fld
cs
rcr
mov
or
div
mov
int3
pop
adc
lock
pop
fstp
pop
jge
xor
push
and
add
xor
lahf
lahf
add
jo
ins
(bad)
sub
or
inc
mov
movs
fild
fdiv
adc
les
pop
dec
add
and
add
push
and
leave
inc
and
movs
test
add
(bad)
sbb
inc
adc
pushf
fbld
shl
dec
sbb
cmp
fwait
cmp
and
mov
adc
add
retf
push
dec
xchg
xor
int3
sbb
fsubr
fld
or
pop
sbb
das
iret
fsubp
jp
mov
lock
jne
push
or
add
add
std
sub
push
mov
mov
xchg
cdq
imul
cmps
xchg
test
test
inc
cmp
and
ret
or
jno
xlat
fucom
je
adc
pop
(bad)
or
ret
test
shr
scas
cli
mov
add
movs
xchg
ficom
call
aad
(bad)
retf
dec
retf
ret
fcomp
imul
sbb
push
dec
push
and
jge
add
in
add
pusha
mov
mov
test
fwait
les
dec
cmp
movs
push
add
mov
call
movs
fwait
push
adc
cmp
cmps
cdq
jmp
out
mov
pop
bound
cmp
mul
or
inc
xchg
dec
data16
mov
nop
enter
mov
pop
outs
ret
jmp
or
mov
pop
mov
mov
and
stos
jmp
pop
adc
lea
or
pop
nop
push
or
gs
sub
das
pop
cwde
pusha
add
pop
inc
and
repnz
sub
and
je
out
es
ins
movs
xor
ret
or
and
inc
mov
sbb
mov
jae
fbstp
(bad)
add
neg
dec
add
lock
fstp
xor
fidiv
rcr
test
sub
sbb
pop
sahf
and
cwde
xlat
or
lods
cld
jne
iret
or
lock
add
icebp
fdivp
jmp
push
push
fstp
pop
lods
or
dec
in
push
in
retf
ins
mov
lahf
ror
push
dec
mov
adc
rol
xor
arpl
mov
add
jmp
mov
loop
popa
push
fstp
adc
push
out
loopne
add
mov
sub
pop
aas
loopne
fiadd
sub
add
sbb
into
inc
mov
inc
shl
in
pop
rol
imul
and
(bad)
in
fwait
push
cmp
rol
push
pop
xchg
push
daa
mul
and
cmp
or
aaa
mov
jne
lods
cmp
push
movs
sbb
adc
lods
imul
arpl
(bad)
test
loopne
dec
(bad)
cld
mov
lea
loopne
push
mov
es
cmp
fsub
dec
adc
push
dec
add
mov
or
xor
lahf
dec
push
add
test
lock
cmp
push
rcr
sub
pop
ja
cmps
mov
scas
mov
in
jge
sbb
lea
jo
mov
or
xor
gs
loope
retf
sub
(bad)
aas
and
lea
add
sub
adc
push
shl
or
(bad)
add
push
sbb
test
hlt
push
or
out
adc
pop
and
push
lock
push
rcl
mov
fsubr
or
loopne
jne
jle
ret
mov
lods
xor
cmps
or
ins
sbb
in
push
addr16
loopne
pusha
sbb
fdiv
adc
add
jle
ins
or
or
and
(bad)
aam
aaa
xchg
mov
sbb
adc
loope
mov
adc
loope
mov
fdiv
push
lea
adc
in
shr
shl
xchg
pop
sub
std
imul
mov
or
(bad)
ror
test
out
jno
jmp
xor
cmp
ins
inc
jmp
or
lock
femms
mov
or
adc
fistp
push
xchg
pushf
cmps
dec
sbb
or
lock
rol
jecxz
inc
cmps
rcr
pop
out
mov
and
add
inc
sbb
adc
sbb
push
retf
mov
jne
std
test
sbb
movs
retf
loopne
dec
fisttp
movs
pusha
leave
mov
retf
mov
mov
cs
and
mov
movs
pop
and
mov
stos
nop
nop
mov
dec
stc
repnz
or
sbb
push
jmp
fwait
ins
pushf
adc
xchg
gs
addr16
pop
cs
jp
in
add
js
stos
lea
pop
sbb
add
in
fisttp
push
sub
mov
in
adc
add
mov
jo
cmc
pop
jns
outs
jo
adc
mov
shld
cmp
xor
sbb
cvtpi2ps
retf
lods
retf
gs
ins
push
repnz
out
add
jne
pop
fst
and
in
xchg
pop
mov
or
mov
and
inc
add
inc
and
jo
mov
imul
outs
add
or
dec
cmp
dec
aaa
adc
cmp
mov
and
jb
adc
dec
xor
popf
and
fcmovnb
adc
cli
cmps
outs
pop
mov
outs
and
es
and
ds
ja
lods
stos
test
pop
lods
dec
cmp
or
mov
in
dec
push
cmp
jg
and
add
neg
and
dec
lea
retf
in
and
add
(bad)
rcr
sbb
add
pushf
add
add
add
ja
and
add
and
inc
jbe
and
pop
or
jmp
push
or
adc
movs
xor
cmp
mov
and
push
mov
adc
lahf
push
add
mov
lea
push
pop
cmp
cmp
inc
push
enter
aas
pop
pop
pop
mov
cmp
sar
and
jae
and
ins
xor
rcl
dec
jne
es
ret
mov
fcmovnb
mov
mov
mov
or
outs
mov
sub
cmp
add
test
push
adc
adc
imul
sbb
ins
loope
adc
cmp
cld
push
dec
add
cld
push
dec
add
jecxz
xchg
mov
jmp
inc
pop
fld
xchg
pusha
xchg
dec
xor
inc
inc
lods
imul
pop
cmps
inc
add
add
sar
add
sub
cmp
adc
(bad)
popf
cli
push
push
nop
(bad)
ror
add
pop
inc
sub
inc
hlt
lock
ins
add
adc
lea
hlt
imul
clc
cmp
push
shl
push
shr
loop
adc
in
and
adc
sbb
xchg
popf
outs
not
outs
imul
or
cmp
sbb
inc
lods
or
mov
xor
dec
inc
cs
hlt
ud0
jne
sub
mov
jmp
(bad)
inc
sbb
rcr
adc
pop
mov
es
and
add
add
mov
push
inc
sbb
or
push
mov
in
gs
stos
mov
sub
sub
add
clc
mov
inc
dec
cmp
mov
ss
xchg
cs
lock
jnp
adc
sar
adc
adc
int3
adc
mov
add
stos
rol
cmp
add
add
mov
jbe
ret
ret
lock
imul
stc
(bad)
rol
psrad
add
or
and
adc
inc
cld
sbb
push
add
pop
xor
add
in
ds
adc
popa
pop
je
test
xchg
sub
jo
hlt
cmp
adc
test
mov
xchg
xor
les
and
in
jno
out
movs
or
inc
sbb
pmuludq
dec
rol
loope
xchg
sub
or
xor
and
mov
inc
dec
adc
fistp
xor
lahf
pop
and
xor
or
inc
mov
or
ja
or
cmp
add
mov
pushf
xchg
adc
add
jmp
mov
dec
in
gs
and
or
push
imul
mov
imul
mov
sub
jmp
jns
add
iret
sbb
sbb
nop
xlat
jo
cmp
dec
jb
mov
push
mov
iret
cmp
and
jl
mov
leave
add
or
stc
sbb
push
lahf
push
test
lea
fsubr
mov
addps
push
sub
mov
mov
pop
test
fmulp
sub
jns
mov
aaa
sbb
loopne
test
int3
inc
push
fist
add
push
push
ss
je
inc
fist
cmp
call
outs
cwde
xchg
mov
movs
cmc
and
test
adc
test
sbb
lods
cmc
in
ja
neg
push
and
push
xchg
inc
mov
sub
mov
push
mov
enter
sub
cmp
dec
xor
xchg
leave
arpl
subps
add
jmp
jp
lahf
call
add
aas
or
push
mov
add
adc
aaa
mov
push
and
and
xor
cmpxchg
ret
aad
jg
push
jno
cmp
aas
adc
dec
enter
push
add
inc
ds
lahf
sub
jl
push
lock
dec
(bad)
jp
movs
rol
call
jb
sti
lds
jo
mov
les
pop
outs
inc
icebp
push
xchg
xor
push
jmp
pop
adc
xchg
shl
out
loop
frstor
push
popa
test
xor
iret
jmp
adc
xor
shl
in
movs
arpl
mov
add
or
dec
adc
lahf
mov
xor
iret
loopne
dec
dec
mov
mov
cld
xchg
fmul
outs
pop
aas
jnp
xchg
pop
out
(bad)
ficomp
dec
cld
cmp
and
adc
sub
add
js
xchg
lahf
fld
dec
and
adc
sub
cmp
les
sbb
xchg
sub
pop
jg
rcl
dec
pop
sub
cmp
mov
lea
js
mov
mov
lahf
imul
mov
push
div
cmp
aas
xlat
jmp
iret
out
or
jle
adc
mov
jecxz
xor
sti
(bad)
jp
sub
add
mov
movs
adc
push
or
adc
dec
xor
fdiv
pusha
inc
pop
outs
jmp
call
jmp
imul
jnp
and
jne
and
jne
push
enter
mov
ins
fchs
jmp
mov
sti
xchg
pop
cwde
icebp
xor
das
inc
or
scas
movs
push
cmp
arpl
xchg
pop
lods
adc
in
pop
lods
nop
sub
sub
test
sbb
inc
jno
fadd
inc
inc
dec
sahf
(bad)
sar
test
xor
sbb
scas
pop
mov
sub
xchg
or
dec
add
add
jecxz
mov
fisub
jp
aad
or
fidivr
movs
test
cmp
xchg
mov
cmp
mov
sbb
and
jno
or
sbb
push
sti
outs
or
in
(bad)
cmp
jne
fsubr
fdivr
and
xchg
test
sti
(bad)
inc
sub
aam
inc
add
push
aas
lahf
push
mov
lds
add
pop
mov
pop
cmps
mov
adc
add
xchg
and
or
(bad)
icebp
or
mov
test
mov
or
adc
mov
scas
je
and
scas
and
repnz
test
dec
push
mov
cmp
push
add
fld
or
cwde
dec
push
xor
adc
add
adc
sub
add
ret
jns
jo
inc
or
mov
fnstcw
(bad)
ds
mov
or
add
ret
cmps
push
sub
mov
inc
jecxz
sub
(bad)
neg
jmp
inc
mov
jnp
mov
xor
sbb
dec
ins
inc
add
inc
push
add
and
cmp
pop
sbb
jg
fistp
and
adc
mov
or
inc
inc
pcmpeqb
pop
add
xchg
xchg
fcomp
jge
or
(bad)
mul
adc
xchg
and
adc
sti
pushf
aaa
or
jge
loopne
add
jl
add
in
nop
add
jns
add
add
loopne
jns
add
jbe
loopne
fcomp
jns
add
add
sbb
jns
enter
push
jge
ror
cmp
rol
jge
add
push
jo
jns
or
push
jo
int3
push
push
jo
add
cmp
jo
add
les
jge
adc
add
push
jns
or
mov
in
mov
cmp
adc
xor
jge
mov
xor
dec
mov
jge
inc
xor
dec
adc
mov
jge
ror
adc
lods
adc
or
xor
or
sbb
test
jns
sbb
movs
adc
nop
sbb
or
adc
mov
fs
adc
sbb
pop
sbb
cwde
sbb
jns
or
adc
mov
add
nop
in
inc
add
inc
shl
mov
shl
in
mov
jge
adc
and
in
inc
test
jge
add
loopne
call
loope
loopne
cmp
adc
push
add
mov
mov
rol
and
mov
mov
pop
lock
add
pusha
outs
jo
and
add
ins
push
and
ins
cwde
popf
push
push
and
fwait
sub
fs
mov
pusha
in
sbb
mov
or
adc
pop
push
and
add
fiadd
jne
inc
mov
add
pop
nop
push
enter
push
push
daa
mov
xor
repz
add
out
mov
sub
or
dec
push
fcomp
dec
mov
inc
ret
adc
add
cwde
sub
dec
add
pop
push
cmp
inc
repnz
push
adc
xor
fiadd
sub
inc
jnp
add
push
sub
add
add
push
mov
pusha
outs
mov
xor
das
mov
mov
xor
mov
pop
add
or
fwait
sub
nop
sub
popf
sub
inc
push
fdiv
pusha
outs
mov
mov
push
add
adc
popf
and
aaa
mov
jmp
ficomp
je
lods
xchg
sbb
adc
mov
add
and
add
inc
pop
inc
lahf
cmps
jne
pop
inc
(bad)
repnz
cld
pop
jmp
mov
rcr
sub
jne
rol
push
jecxz
cmp
mov
dec
sbb
(bad)
ror
adc
lea
inc
add
adc
push
add
xor
adc
xchg
xor
push
adc
(bad)
in
sbb
adc
cli
fsqrt
lods
pop
push
ja
jae
xor
mov
xor
iret
add
jle
xor
and
mov
mov
mov
call
push
data16
test
add
scas
jmpw
ja
jge
sbb
cmp
imul
fwait
(bad)
ror
fs
or
xchg
hlt
cld
es
test
mov
sub
lea
mov
popaw
mov
lock
and
mov
in
or
arpl
aad
cmp
jb
xor
out
xchg
sbb
cmp
pop
xchg
dec
lea
xor
in
mov
adc
shl
xor
push
mov
mov
push
cmp
xchg
aaa
cdq
and
push
js
push
(bad)
sub
mov
mov
add
add
push
dec
psrlq
in
das
in
inc
arpl
xchg
in
adc
xchg
test
cld
inc
xchg
xchg
sbb
add
adc
cld
test
sbb
lods
in
add
xchg
rcr
cdq
lods
sub
mov
(bad)
out
or
dec
arpl
mov
mov
pusha
pushf
dec
mov
add
mov
cmp
jbe
(bad)
mov
and
add
mov
adc
cmp
mov
mov
(bad)
sbb
jmp
pusha
pop
or
xor
mov
adc
loope
sbb
add
push
rcl
pushf
sub
xor
aas
(bad)
ror
pop
int3
add
mov
test
push
in
mov
out
test
cmp
mov
jecxz
push
xchg
and
mov
adc
inc
and
pop
popa
pop
push
nop
add
popa
xchg
adc
add
lea
scas
ror
push
dec
(bad)
and
test
and
rol
add
call
adc
(bad)
lahf
sbb
test
add
add
add
adc
fdivr
enter
or
fisubr
or
loopne
les
mov
jge
stc
mov
cmovo
add
das
push
add
ja
lock
das
add
out
daa
arpl
lds
adc
push
ins
dec
test
xchg
xor
mov
jo
jne
fwait
sbb
xchg
or
or
jl
and
xor
inc
movs
xchg
cmp
cmp
movs
hlt
and
movs
adc
cmp
pop
pop
mov
xor
inc
test
loopne
(bad)
mov
mov
mov
sub
mov
push
mov
and
mov
sub
lea
mov
inc
adc
retf
leave
dec
push
inc
stos
test
xchg
fld
lea
sub
arpl
mov
sub
xor
loope
les
(bad)
sti
enter
call
popf
xchg
add
test
leave
test
xchg
rol
sub
lea
inc
addr16
jnp
xchg
adc
call
mov
xchg
aam
sub
mov
lea
or
push
dec
aam
dec
sub
nop
ret
(bad)
and
int3
adc
xchg
adc
in
sti
enter
adc
stc
pop
test
add
jg
sub
mov
mov
jo
cwde
inc
popa
inc
sub
mov
inc
pop
inc
xchg
pusha
push
and
je
cld
xor
mov
dec
aas
xchg
loopne
aas
mov
pushf
loop
lea
pop
xchg
cmp
test
fisttp
push
dec
push
and
sti
mov
ret
sbb
jo
je
inc
add
push
xor
push
sbb
or
pop
push
cmp
test
pop
ret
add
sbb
add
or
xorps
repnz
cdq
cwde
and
xchg
xchg
and
loopne
retf
mov
mov
and
test
inc
jno
les
pop
push
cmp
sbb
pop
mov
pop
fisubr
lods
and
sbb
sub
(bad)
cmovne
in
xchg
inc
lahf
mov
add
inc
ret
ror
push
pop
pop
call
and
in
sbb
mov
adc
pusha
ins
add
jae
or
and
rol
jg
aad
sbb
push
pop
jno
and
aas
cmp
adc
into
adc
inc
pusha
inc
mov
and
mov
lea
das
or
add
push
shl
mov
cmp
push
or
and
movs
arpl
and
sub
sbb
sub
adc
add
cmp
(bad)
jmp
or
arpl
loope
test
jae
pusha
dec
mov
add
add
xchg
inc
cmp
or
fadd
dec
popf
push
inc
fdivr
je
iret
sub
jno
cmp
push
cmc
in
jne
dec
test
mov
mov
mov
pop
mov
mov
js
push
cmp
jmp
rol
sbb
lea
or
push
ss
and
mov
mov
mov
jl
popa
adc
sub
inc
or
adc
pushf
jmp
lods
movs
xchg
or
and
lea
mov
(bad)
jns
adc
hlt
retf
mov
imul
add
xchg
and
add
add
or
mov
jp
out
push
add
int3
fist
cmp
fs
outs
pop
jge
push
mov
ins
adc
dec
jp
or
mov
jb
jl
xor
add
aad
adc
or
mov
jle
std
(bad)
push
jg
or
pop
ins
add
add
push
lahf
gs
and
cld
jmp
lahf
loope
loope
inc
mov
mov
lods
lds
and
imul
add
push
add
rcr
cmp
dec
sbb
mov
mov
sbb
adc
lea
test
mov
inc
arpl
jle
(bad)
ja
mov
inc
rcl
sahf
cmp
xchg
jl
xchg
and
sbb
mov
xor
inc
lods
sub
stos
arpl
lock
push
push
pop
jmp
add
mov
mov
test
add
mov
dec
ins
mov
pop
and
cdq
jp
mov
inc
fstp
or
and
push
and
xlat
add
jle
xchg
enter
mov
and
sub
int3
jmp
inc
inc
mov
mov
mov
imul
lds
jne
add
mov
test
push
sub
sbb
and
add
mov
sub
and
cmp
std
xchg
mov
pusha
js
or
and
pop
popa
retf
mov
ret
push
(bad)
shl
lock
mov
dec
and
enter
mov
cmp
inc
jl
ja
retf
xor
pop
sbb
sub
mov
pop
inc
mov
inc
or
xchg
sar
sbb
ret
rol
jo
push
and
ret
dec
pop
jmp
push
cmp
adc
das
inc
movs
fwait
lea
inc
add
clc
dec
adc
and
test
sbb
sub
mov
add
pop
mov
mov
nop
test
mov
fs
aas
shl
push
push
dec
call
js
inc
or
mov
repz
and
cmp
cmps
test
scas
xchg
div
push
xor
hlt
shr
cs
xlat
add
idiv
push
dec
add
adc
ja
mov
loop
lahf
ror
test
push
test
add
movs
mov
mov
aas
or
pop
mov
lea
outs
dec
add
cmp
cwde
adc
adc
pop
mov
fcom
add
add
push
pop
cdq
sbb
sbb
sbb
test
scas
cld
pop
push
lock
dec
lea
or
and
add
movsx
xor
cmp
mov
test
add
add
sbb
test
jno
fldcw
loope
jl
jns
(bad)
leave
inc
inc
jmp
icebp
add
mov
cmps
rol
cmp
jne
test
pop
mov
movzx
call
out
or
jecxz
call
loope
and
mov
add
mov
pop
ret
mov
stc
adc
sub
lods
lea
adc
add
lods
sti
add
lea
add
inc
pop
lea
inc
xchg
pop
push
mov
sub
mov
test
xor
add
xor
lahf
add
push
jg
mov
fisttp
sbb
mov
es
pop
cmc
mov
shr
jle
(bad)
cld
inc
push
adc
lea
ja
dec
add
mov
and
inc
push
mov
stos
test
std
out
aam
shl
add
cld
add
inc
sub
(bad)
movs
or
xchg
mov
nop
or
nop
pop
in
shl
mov
or
jno
shr
mov
dec
std
mov
pop
js
gs
and
sbb
loope
xchg
push
outs
test
mov
or
clc
mov
pop
and
add
rol
push
pusha
clc
dec
ror
xor
and
push
mov
pop
xchg
(bad)
sar
mov
or
mov
jae
sbb
rol
jbe
push
lock
inc
iret
dec
lahf
or
adc
push
dec
or
mov
jg
cmp
adc
add
jmp
ret
or
xor
jmp
stos
sbb
push
in
inc
push
and
inc
cmp
pop
sbb
push
inc
sbb
in
call
mov
jo
ret
cmps
rol
rcr
gs
rcl
out
ss
add
or
in
wrmsr
mov
lea
jge
dec
fwait
aam
pop
inc
scas
pop
adc
add
and
add
jnp
jmp
mov
inc
mov
cmp
xor
adc
jno
(bad)
call
call
fmul
retf
or
xchg
loopne
xchg
sub
add
and
jo
pushf
push
ja
sub
mov
xchg
xchg
add
in
push
aas
cmps
je
mov
add
add
pop
add
out
in
lods
and
scas
add
lds
or
daa
daa
mov
or
sub
cmp
or
adc
xor
test
je
outs
xor
inc
fs
adc
pop
mov
lock
push
test
and
mul
sti
jmp
jne
pusha
ret
adc
jecxz
jg
push
or
and
lahf
add
push
mov
std
jg
push
adc
add
(bad)
icebp
or
or
shl
test
pop
outs
mov
push
pop
inc
dec
jnp
adc
or
mov
rcl
fistp
pop
mov
nop
imul
cmp
xchg
lock
push
add
fisub
xchg
call
mov
mov
jnp
adc
les
push
cmovns
test
adc
jne
add
add
and
pop
dec
(bad)
test
popf
inc
enter
cmps
push
and
mov
push
xchg
ror
or
int3
pusha
call
dec
call
mov
loopne
aad
dec
jl
jg
ins
pop
jg
dec
mov
ds
jg
and
adc
jbe
scas
in
test
dec
and
inc
jmp
or
cmp
jle
in
push
add
xor
mov
mov
inc
and
adc
jmp
inc
test
ret
imul
inc
call
call
imul
jp
cmp
inc
or
fisttp
adc
pop
sbb
sub
and
mov
shl
ror
(bad)
mov
shl
xchg
or
xchg
cmps
sub
or
dec
sub
or
cmc
cmp
rcl
dec
inc
or
shr
ret
(bad)
loope
xchg
and
add
xlat
aas
dec
and
sub
add
shr
stos
add
mov
jo
push
xchg
jl
sub
sbb
and
(bad)
prefetchw
mov
add
inc
or
dec
and
add
lods
add
adc
mov
ins
fmul
iret
(bad)
ins
int3
aam
fistp
lods
dec
and
and
ret
mov
pop
pop
in
in
push
add
dec
adc
aam
ror
inc
mov
hlt
es
sbb
enter
or
xchg
mov
xchg
jmp
push
jb
jmp
cmp
adc
pop
(bad)
cld
add
in
xchg
mov
std
loopne
test
jl
add
jge
std
or
push
and
xchg
cmp
aas
lods
jmp
cwde
cmp
and
adc
inc
or
xchg
pop
or
in
test
nop
shl
add
ror
jge
mov
xchg
xchg
dec
nop
jo
aam
aad
mov
push
cmp
inc
loopne
sbb
pop
and
pop
jo
ret
adc
sub
addr16
sbb
adc
xor
jg
inc
mov
cmp
adc
lea
xor
adc
pop
add
out
test
add
xor
mov
fs
add
and
inc
shl
add
sub
in
lods
arpl
add
adc
xchg
add
aaa
pop
pop
test
test
fcom
or
push
mov
add
or
push
add
fs
popa
jno
pop
or
sub
(bad)
in
inc
(bad)
push
ins
inc
or
lea
fistp
xor
ds
loope
lods
arpl
jge
pop
test
mov
and
xchg
cmps
lock
jmp
mov
push
scas
adc
sub
pop
pop
sub
inc
mov
sub
ror
mov
push
push
neg
loop
or
dec
clc
ja
pop
add
add
mov
dec
out
mov
mov
inc
add
jo
mov
leave
dec
pusha
mov
aad
add
je
xor
sub
cmp
test
push
shl
add
gs
cmp
inc
rol
mov
and
push
mov
shr
pop
push
js
inc
jp
mov
test
loopne
fcmovnb
das
mov
adc
mov
mov
add
dec
cmps
xchg
mov
pop
or
aas
repnz
mov
push
dec
cs
les
ret
push
dec
mov
inc
jb
sub
cmp
add
add
inc
sbb
das
push
jo
add
mov
jmpw
add
add
adc
add
xchg
inc
push
enter
or
xchg
pop
mov
inc
mov
push
aam
add
push
js
mov
or
add
sub
jns
pop
or
pop
jg
push
or
je
ret
xor
dec
pusha
(bad)
push
clc
push
outs
add
adc
and
jne
loopne
popa
loope
cmp
lock
popa
adc
js
pop
mov
fs
or
cmp
push
and
push
sub
or
fistp
add
add
mov
fnsave
and
and
test
xor
pop
pop
mov
ret
inc
clc
loop
push
add
add
xchg
mov
mov
inc
sbb
sbb
inc
adc
dec
fwait
sub
sbb
call
push
ja
jmp
add
add
sub
dec
or
push
or
(bad)
pop
dec
push
mov
mov
or
retf
pop
sbb
test
inc
pop
repz
adc
nop
mov
sub
add
pop
aas
xor
sbb
adc
gs
mov
fist
scas
adc
inc
add
aas
and
jo
mov
lods
xchg
xchg
mov
mov
int3
pop
mov
lods
inc
mov
xchg
and
bound
mov
(bad)
adc
dec
sti
sub
add
sub
pop
call
xchg
jg
mov
mov
or
pop
int3
mov
adc
pop
push
js
mov
and
js
add
or
mov
adc
rcl
int3
cmp
bound
data16
xchg
xchg
jo
xor
aad
xchg
icebp
sub
sub
fdivr
push
add
dec
add
into
xor
add
pusha
mov
sbb
dec
push
js
pop
lahf
cmp
rcl
pusha
inc
arpl
ror
dec
(bad)
mov
daa
into
dec
gs
cmp
mov
add
inc
or
addr16
(bad)
stos
mov
add
push
ficomp
ins
(bad)
jne
(bad)
in
jmp
sub
add
scas
not
and
popa
add
mov
test
or
popa
sbb
ret
arpl
aas
push
and
inc
ret
sub
jmp
bound
lahf
xor
sub
ret
inc
inc
adc
inc
add
inc
xor
add
sbb
loopne
ret
dec
or
daa
ret
dec
rcl
mov
dec
nop
aas
jae
sub
sbb
xor
inc
mov
adc
cld
daa
sbb
shl
mov
stc
mov
cmp
mov
push
mov
ins
cmp
xor
cdq
les
jl
dec
hlt
mov
fld
mov
pop
jmp
xchg
fist
outs
add
pop
add
adc
arpl
adc
push
mov
in
es
add
mov
sub
test
int
enter
arpl
adc
cmp
adc
pop
and
iret
fcom
sub
inc
adc
xor
test
push
and
dec
mov
xchg
add
push
(bad)
fldenv
les
leave
dec
stos
dec
xchg
clc
lahf
add
push
add
or
or
and
mov
dec
rol
setg
push
xor
pop
loopne
push
or
sub
cmp
add
jl
sti
mov
adc
cmp
movs
clc
or
arpl
inc
sbb
mov
sbb
popa
mov
xor
sbb
xchg
and
dec
add
call
dec
sbb
push
jae
lock
xchg
sti
add
aad
or
jmp
push
or
or
sub
adc
shl
xchg
xchg
xchg
or
add
add
push
sti
mov
aam
mov
in
test
sub
xchg
(bad)
or
pop
sub
pop
add
mov
call
add
cmp
ins
cmp
push
lds
adc
xchg
jae
add
or
adc
xor
fs
inc
push
lahf
ret
dec
iret
cmp
dec
xchg
xchg
(bad)
cmps
mov
cmp
sahf
loopne
iret
mov
sbb
jle
adc
je
in
or
movs
ret
inc
push
or
retf
xchg
cli
adc
add
in
enter
push
jno
jecxz
pop
lock
inc
inc
rcr
rcl
and
push
jmp
sub
mov
push
mov
push
and
inc
mov
mov
cmps
mov
dec
and
aas
jo
xor
(bad)
lock
jecxz
dec
adc
cmps
ret
adc
cs
loop
inc
mov
rol
mov
sbb
cmovp
(bad)
jmp
push
nop
xor
sbb
std
je
je
jns
push
add
sub
inc
xlat
shr
or
aam
jo
or
fld
sub
ss
ins
inc
ins
xchg
or
stos
adc
mov
ret
pop
dec
add
dec
cwde
pop
movsx
jae
pop
push
and
inc
sar
setne
inc
push
add
popa
test
lock
imul
or
cs
cs
add
(bad)
pop
sbb
and
icebp
push
lock
add
aad
in
xchg
cmps
or
sbb
je
sub
push
ja
lea
cmp
jp
js
jp
xor
jmp
adc
repz
cmps
mov
add
lock
fadd
aas
and
add
cld
pusha
mov
fild
sbb
jle
inc
addr16
push
shl
xor
neg
inc
add
pop
or
pcmpeqw
push
cwde
sub
ror
ret
jo
lods
cmps
or
adc
or
adc
not
inc
inc
or
test
add
push
jmp
ja
add
dec
or
leave
pop
pop
test
and
mov
push
movs
add
fild
pop
std
cmp
sar
lods
xor
xchg
jns
mov
retf
xor
test
dec
xchg
push
sbb
mov
adc
pop
mov
cmp
lds
int
adc
test
jo
mov
mov
jne
inc
xor
int3
mov
nop
adc
jmp
lahf
loop
or
xchg
inc
ret
ja
add
icebp
cs
or
imul
inc
and
int3
dec
cwde
push
jae
push
sbb
cmp
xchg
dec
jo
add
cmp
call
xchg
mov
test
pop
mov
and
mov
cmp
and
or
daa
test
(bad)
adc
mov
adc
enter
sub
xor
jb
dec
fcmovnb
add
movsx
mov
mov
dec
push
nop
mov
inc
inc
and
pop
add
es
hlt
xchg
(bad)
sub
push
push
adc
jge
jl
inc
stos
psrld
inc
sbb
pop
mov
shl
ret
mov
cmp
xor
push
pop
ret
int3
ret
vpshufd
sbb
sbb
int3
jno
pop
push
fsubr
push
or
sbb
and
loope
test
adc
fsub
test
xchg
cld
mov
mov
pop
rol
inc
jge
inc
or
lea
sbb
sub
mov
or
push
sub
leave
hlt
sub
cdq
retf
mov
dec
add
push
imul
mov
and
pop
xor
in
xchg
fldcw
add
adc
jmp
cmp
ret
or
xchg
add
es
xlat
inc
adc
nop
jge
inc
push
das
fwait
mov
cld
push
mov
or
int
sub
lahf
or
aam
or
push
jo
rcl
pop
je
pop
(bad)
or
dec
jns
jnp
rol
mov
div
add
inc
push
hlt
cmp
jo
push
adc
or
adc
in
into
mov
lds
sub
or
dec
gs
leave
ret
div
(bad)
clc
xor
and
cmp
xchg
mov
inc
dec
push
stc
vmwrite
add
mov
in
test
mov
mov
dec
mov
push
clc
adc
movs
mov
mov
mov
cmp
mov
push
outs
adc
add
mov
sub
push
pop
sub
or
or
jne
or
ror
mov
mov
mov
sbb
dec
adc
xchg
ret
push
stos
add
push
imul
push
cmp
push
add
add
movs
inc
mov
aam
fbstp
xor
retf
shl
sar
ins
push
pop
mov
or
cwde
inc
pop
les
pop
je
sub
cmp
pop
pop
pop
mov
pop
inc
mov
sub
or
(bad)
pushf
xchg
lea
and
cmp
adc
pop
jbe
xchg
sar
mov
mov
jmp
sbb
adc
mov
(bad)
stc
dec
or
fisttp
push
inc
mov
sbb
xor
test
loopne
(bad)
xchg
sub
stos
adc
adc
pop
sub
adc
fwait
or
and
(bad)
dec
or
and
outs
adc
pop
and
push
push
pusha
pushf
mov
mov
shl
clc
mov
test
lea
jecxz
xor
loop
cwde
inc
clc
cmp
int3
ror
jnp
add
sub
push
pusha
arpl
dec
pop
and
fisttp
dec
dec
add
cmc
add
popa
or
mov
inc
bound
cmp
or
fadd
add
xor
add
add
mov
mov
sbb
inc
push
ret
add
push
sbb
push
mov
pop
mov
add
sbb
dec
es
mov
pop
(bad)
lock
push
test
pop
outs
lods
dec
adc
shr
aas
mov
ja
jmp
inc
add
das
nop
inc
adc
pop
sub
adc
dec
or
dec
or
cs
push
(bad)
(bad)
and
xchg
jae
xlat
or
iret
ret
ret
loope
cmp
mov
xchg
push
push
clc
lahf
daa
jle
sbb
ret
loope
cmc
outs
pushf
dec
enter
hlt
les
inc
add
push
ins
fistp
dec
pusha
mov
sbb
lock
aam
add
push
cmc
xor
mov
test
dec
movs
test
int3
mov
adc
loopne
adc
mov
stos
inc
or
sub
add
aam
jo
gs
aam
call
add
hlt
fwait
gs
mov
fdivr
mov
rcr
cmp
dec
adc
push
aas
pop
jo
push
sub
xor
mov
mov
xchg
or
fucomip
adc
push
or
lea
push
sbb
cwde
inc
loope
cmp
jecxz
inc
sbb
pushf
(bad)
jmp
mov
cmp
dec
add
in
jecxz
mov
cmps
outs
js
jo
inc
mov
adc
sbb
in
pop
mov
pop
jne
dec
or
add
or
iret
cmp
(bad)
aam
cmp
mov
shl
or
sbb
outs
call
mov
cmps
imul
mov
and
imul
or
pop
mov
jmp
push
dec
jg
adc
push
inc
mov
adc
movs
rcl
sbb
mov
dec
mov
repz
push
or
mov
dec
adc
mov
adc
mov
sub
shl
movs
mov
lods
add
mov
add
aaa
mov
mov
or
sbb
push
dec
mov
pop
sub
clc
add
push
mov
jne
mov
sub
sar
call
mov
fild
fldcw
add
mov
jae
xchg
push
xor
mov
dec
lahf
adc
arpl
rol
pop
push
lea
push
int
sub
push
sub
cwde
xor
or
push
add
mov
fs
adc
fwait
arpl
jno
jmp
int
and
mov
sbb
mov
repnz
sar
sub
mov
inc
arpl
mov
mov
cdq
mov
loope
stc
push
lods
rol
or
xchg
and
shl
inc
or
mov
jg
scas
test
cmp
and
out
inc
not
fisttp
pop
sub
loope
pop
mov
xchg
xchg
loopne
cmp
pusha
mov
dec
add
mov
pop
adc
push
shl
push
cmp
call
push
adc
jnp
sub
mov
call
sbb
dec
or
ret
push
pop
shr
popf
xchg
jae
mov
jns
adc
push
inc
inc
sub
add
adc
cmp
fadd
pop
pop
adc
mov
jne
cmp
mov
sbb
or
mov
or
add
xlat
adc
inc
push
and
jl
pop
xchg
shl
jle
pop
dec
dec
lock
mov
call
or
sbb
rol
pop
fbstp
and
sub
and
in
add
inc
nop
xchg
xor
sub
pop
call
jge
mov
mov
add
mov
test
sbb
(bad)
lock
cmp
rol
lock
xor
push
dec
addr16
cwde
push
daa
jo
les
fstp
pop
mov
inc
adc
ret
test
(bad)
enter
rol
add
lods
adc
mov
cmps
jo
dec
aas
push
xchg
sub
dec
out
add
ins
mov
ret
adc
ss
cmps
cmp
dec
dec
cmp
or
adc
jle
lds
fucomi
xor
cs
cmp
outs
cmp
inc
add
cmp
test
sahf
fsubr
and
cld
div
and
xor
push
out
and
mov
imul
and
js
enter
aam
or
adc
cmp
jo
pop
inc
les
push
cld
push
add
or
mov
lods
lahf
and
dec
mov
jo
sbb
movs
shl
cdq
or
std
mov
shl
arpl
add
test
dec
or
sti
arpl
mov
mov
test
push
jne
and
push
rol
add
add
sar
mov
bound
add
adc
leave
mov
icebp
and
add
dec
and
inc
inc
int3
xchg
mov
cmp
add
add
push
xchg
rcr
mov
test
mov
push
mov
cli
arpl
ror
add
add
inc
dec
fucomi
and
jg
hlt
mov
add
add
or
movs
add
in
dec
or
jg
or
bound
pop
adc
add
add
std
inc
ss
mov
mov
mov
inc
and
icebp
inc
int
or
lock
push
push
or
scas
adc
out
sar
aad
mov
mov
enter
adc
sub
and
add
jo
inc
enter
dec
popf
xchg
shl
add
lock
dec
idiv
add
sbb
pop
mov
popa
lods
mov
mov
jb
pop
adc
je
xor
xchg
sbb
dec
int
das
mov
mov
stos
add
sub
or
adc
add
mov
inc
loope
lods
rol
les
test
js
add
xchg
test
and
cmps
add
aaa
popa
hlt
and
jl
sahf
mov
dec
gs
dec
push
push
xchg
cmp
test
adc
add
ins
adc
jle
jl
les
dec
add
xor
xchg
sub
stc
inc
mov
arpl
sub
add
popa
cmp
mov
pop
xchg
pop
inc
fwait
inc
jecxz
(bad)
std
or
leave
gs
adc
push
cmp
movs
pop
add
adc
aas
aas
into
mov
adc
cwde
adc
adc
nop
jo
and
or
xor
pop
or
pushf
ret
in
mov
aad
das
fs
rcr
inc
in
popa
push
add
mov
aad
inc
adc
xor
add
dec
movs
xlat
adc
ror
add
lahf
jg
inc
inc
add
inc
adc
xchg
xor
or
and
bound
push
lock
push
mov
jg
and
js
sbb
int3
push
and
pop
sub
cmovnp
ret
cmp
nop
test
mov
pop
inc
jg
jno
mov
xchg
pop
cmp
mov
mov
adc
adc
sbb
call
xor
or
push
pop
cmp
inc
mov
popw
jne
test
fimul
test
test
add
sub
rol
or
xchg
push
cmp
and
xor
inc
and
fild
or
cmp
rcr
add
sbb
cmp
pop
jno
nop
push
inc
dec
add
jg
pop
or
inc
inc
les
ss
mov
lock
add
rol
mov
xchg
dec
sbb
add
inc
add
test
ret
in
inc
lods
mov
lahf
push
pop
icebp
es
mul
cmp
mov
or
pop
enter
push
inc
enter
jo
movs
push
adc
dec
movs
and
call
push
movs
shl
fild
add
or
sub
xchg
pop
mov
in
mov
lea
xchg
outs
or
or
lock
or
jne
push
leave
mov
inc
sub
stos
and
push
inc
xlat
cmps
push
fisttp
or
shr
and
and
fmul
mov
or
ins
loope
add
(bad)
inc
dec
cmps
and
lods
call
add
mov
sbb
pop
add
imul
push
or
(bad)
repnz
loop
push
cmp
repz
mov
rep
nop
fbld
cld
aam
or
in
inc
or
mov
cmps
push
xchg
mov
cwde
sub
cwde
add
fbstp
inc
mov
inc
and
js
or
inc
repnz
cmp
out
jbe
inc
outs
addr16
add
and
cmp
sbb
jb
or
aad
add
loop
xor
out
ret
adc
xchg
adc
and
aas
cdq
sub
dec
mov
or
adc
adc
xor
inc
and
or
repz
mov
call
xor
push
adc
xor
push
outs
add
jmp
or
push
loopne
loopne
fisubr
lods
cmp
fild
sub
pop
or
fadd
int
pushf
dec
pop
pop
sbb
mov
cld
pop
loopne
out
dec
js
sub
push
out
push
mov
or
stc
cmp
ret
add
adc
or
push
leave
adc
ror
adc
adc
add
mov
pop
and
mov
jmp
pusha
inc
add
stc
or
push
mov
mov
and
mov
cvttps2pi
dec
xchg
sbb
adc
rol
add
pop
xor
inc
xor
or
jmp
mov
or
and
xchg
jae
call
sar
scas
movs
add
cmc
out
sbb
rol
dec
ins
adc
and
sbb
imul
aas
mov
dec
sar
add
sbb
cmp
jmp
loopne
pop
ret
cmp
scas
mov
dec
push
push
dec
imul
rol
mov
pop
xor
pop
out
cmp
mov
jl
inc
or
lock
aas
out
push
mov
and
pop
cwde
mov
or
shl
lock
dec
repnz
pop
push
repnz
add
loop
in
nop
add
dec
add
sbb
js
pop
adc
cmp
push
sub
jg
loopne
or
xor
lea
add
add
add
add
mov
adc
sbb
loop
loopne
sahf
sbb
or
(bad)
aas
push
push
or
adc
sub
mov
imul
xor
add
xchg
adc
lods
or
mov
fdivr
add
lock
mov
fst
jecxz
test
stos
aas
lahf
lock
pop
ret
pop
mov
js
pop
cld
add
mov
or
and
in
mov
daa
jo
test
or
mov
out
lock
mov
sub
mov
fwait
jl
ret
cmps
outs
call
add
and
test
add
mov
inc
ins
and
sub
add
repz
pop
xor
mov
lods
cmp
mov
fild
ins
movs
scas
push
lock
inc
and
(bad)
xor
jle
test
cmp
mov
push
dec
push
mov
xor
and
pop
arpl
neg
nop
cmp
adc
add
or
add
xor
push
ret
sub
or
cmp
fdiv
mov
out
jno
(bad)
in
fisttp
fmul
adc
xchg
rol
pop
sbb
jb
pop
push
mov
mov
mov
and
pop
mov
test
pop
in
test
mov
push
add
repnz
fisttp
mov
test
mov
mov
dec
push
dec
sar
mov
sub
test
pop
icebp
push
jg
rol
inc
(bad)
lahf
or
jmp
lea
test
hlt
mov
and
or
cli
out
out
xor
jmp
dec
push
push
xor
daa
lods
push
ja
sbb
jg
dec
mov
ror
js
mov
daa
adc
stos
lods
test
pop
test
enter
add
inc
and
or
jmp
mov
lahf
lock
sub
mov
mov
push
les
adc
popa
mov
and
in
add
movs
ins
add
mov
sbb
or
movs
adc
(bad)
fdiv
mov
shr
jmp
xor
(bad)
(bad)
lods
adc
fsub
sbb
push
int
ror
pop
dec
push
add
jmp
sub
lods
lds
adc
xchg
add
xor
ins
mov
shl
nop
sbb
mov
mov
imul
push
mov
or
scas
xchg
xchg
daa
pop
repnz
ror
and
xor
das
adc
(bad)
nop
adc
in
enter
in
add
or
mov
(bad)
push
xchg
or
mov
and
pop
cmps
jne
xor
mov
dec
lea
add
sub
jmp
dec
add
adc
cmps
mov
xlat
push
and
imul
xor
loopne
in
xchg
int3
arpl
or
sub
in
jmp
add
lods
in
jl
xchg
pop
fcom
cli
jecxz
wbinvd
(bad)
icebp
idiv
or
leave
dec
mov
jp
fadd
adc
je
mov
cmp
mov
jmp
inc
add
loop
test
mov
arpl
test
sub
jg
aaa
mov
or
jmp
inc
jecxz
push
mov
scas
sub
fimul
rol
jmp
sub
add
fwait
pop
ja
rol
jb
arpl
test
ror
mov
or
fcom
nop
push
sbb
push
add
pop
icebp
or
push
retf
pop
mov
(bad)
adc
jp
int
ret
push
or
cs
stc
sbb
lock
adc
inc
mov
test
rol
sbb
xor
std
clc
ficom
lods
sub
mov
xor
or
aam
xor
icebp
or
and
ror
aas
and
mov
sbb
xchg
xor
test
aad
lock
mov
dec
int3
mov
add
ror
pop
or
xor
xchg
and
mov
sbb
mov
cmp
loopne
stos
sbb
mov
or
aas
shl
jmp
add
add
pushf
aas
add
pop
or
or
(bad)
stos
pop
or
std
push
or
pop
or
add
fild
cwde
add
loopne
mov
jg
je
inc
xlat
cmp
adc
add
das
sbb
cld
jl
jb
loope
add
sub
(bad)
ins
or
in
repz
mov
fidiv
cmps
jmp
or
sbb
inc
ret
mov
in
sub
inc
fild
sub
or
in
pop
ret
jge
loope
push
or
cmps
adc
mov
add
sbb
rol
(bad)
mov
dec
cmps
dec
or
xor
sub
mov
fisub
pop
sub
inc
cmp
push
add
ds
xor
xchg
mov
cmp
sidtd
lea
test
adc
xchg
(bad)
loope
(bad)
call
sbb
aas
repz
mov
ret
push
adc
mov
sahf
sbb
inc
pop
nop
mov
xor
mov
lods
sbb
sbb
jo
fisttp
add
mov
mov
jle
mov
sbb
push
and
leave
movhps
in
mov
sub
lea
xor
add
push
cmp
fidivr
inc
add
sbb
xor
dec
xor
clc
pushf
and
pushf
shl
or
xchg
xor
mov
inc
or
hlt
adc
push
jb
mov
lahf
and
dec
and
mov
hlt
inc
lahf
or
ror
xchg
adc
rcl
pushf
push
mov
jo
mov
and
dec
xchg
lock
push
sub
mov
inc
adc
jne
dec
call
or
imul
imul
or
retf
js
mov
inc
adc
cmp
sahf
inc
pop
xor
mov
std
mov
dec
in
pop
cmp
sub
fistp
push
sbb
mov
push
cs
outs
mov
sbb
push
sub
adc
out
stos
jno
add
or
fwait
and
fmul
push
rol
mov
nop
ret
dec
pop
call
aaa
add
shl
adc
mov
xor
and
jo
out
sub
mov
das
outs
xor
shl
mov
les
les
and
sbb
mov
fwait
mov
xor
dec
scas
inc
add
das
sbb
mov
movs
and
arpl
daa
cld
cmp
in
push
in
cmps
(bad)
js
aas
mov
inc
or
inc
or
push
and
adc
mov
and
or
xchg
inc
ret
and
test
mov
fild
cmp
pop
add
pop
movs
sahf
add
push
push
push
inc
mov
pop
and
adc
dec
nop
adc
push
cld
adc
stos
add
or
and
jmp
jp
push
xchg
fnstsw
mov
mov
je
sbb
or
mov
cmp
scas
dec
sbb
cmps
xchg
lahf
xchg
test
pop
adc
add
lahf
adc
mov
and
aas
sub
push
ss
inc
jmp
outs
xchg
rdmsr
add
dec
jmp
inc
arpl
mov
add
and
fld
xor
or
into
retf
adc
or
shl
sbb
inc
sub
sbb
jge
aaa
dec
inc
xor
pusha
aas
and
dec
adc
aaa
adc
inc
sub
shl
inc
(bad)
dec
adc
xchg
rol
sub
test
inc
adc
jno
jae
cwde
nop
(bad)
push
cmps
sbb
sub
(bad)
lds
mov
adc
js
clc
lahf
push
mov
adc
jne
sbb
push
and
pop
push
dec
and
pop
lods
adc
scas
xchg
inc
shl
or
icebp
or
and
mov
push
gs
pop
sub
shl
sub
adc
sahf
adc
mov
rol
fsubr
stc
stos
mov
inc
or
adc
adc
mov
inc
or
cmp
loopne
test
imul
adc
lods
adc
inc
mov
fistp
jmp
sbb
or
and
adc
and
stc
lock
sbb
js
or
add
popa
or
sbb
mov
sbb
and
push
xchg
hlt
adc
xor
sbb
mov
cmp
(bad)
je
push
aaa
sbb
inc
adc
(bad)
imul
loop
sbb
je
lock
jne
push
cld
push
aas
popa
or
push
aas
jecxz
fild
inc
cld
push
xchg
imul
sbb
(bad)
std
adc
add
push
jecxz
bound
mov
ja
mov
add
inc
sub
loope
inc
ret
add
dec
fisttp
push
cmps
mov
or
jmp
sub
mov
lds
or
or
jo
test
mov
or
xor
out
or
add
or
xchg
or
mov
sub
mov
jns
call
sub
pop
jmp
push
push
push
loope
or
dec
jne
je
pop
cli
aas
leave
push
fistp
push
fidiv
jge
push
dec
inc
dec
imul
add
add
or
ja
adc
add
cmp
aad
dec
or
sbb
mov
inc
test
mov
call
and
add
and
movs
int
sub
jo
jmp
pop
ja
mov
mov
pusha
loop
dec
pop
adc
or
xor
xor
cdq
push
sub
add
shl
mov
inc
or
hlt
mov
inc
add
(bad)
fbstp
mov
xor
jecxz
push
leave
add
mul
cmps
inc
sbb
mov
in
or
pop
or
aas
div
jmp
das
jl
jo
or
nop
cmp
into
lods
popa
sbb
shl
and
fld
push
pop
add
jbe
xor
add
dec
movs
loopne
iret
cmps
ds
ret
scas
fmul
mov
push
iret
cld
jns
shl
xchg
movs
popf
aaa
test
and
pop
and
adc
push
and
out
ja
jp
std
pop
adc
mov
mov
mov
mov
fstp
sub
ins
sbb
xor
cmp
inc
jecxz
jmp
dec
movs
mov
push
pusha
sub
leave
mov
sub
mov
mov
loopne
mov
pop
inc
inc
jmp
adc
inc
pop
js
popf
jmp
out
pop
sub
outs
push
dec
and
les
or
int3
or
mov
cmp
mov
mov
add
mov
xor
add
jmp
stos
aam
dec
pusha
stos
ds
jbe
xor
in
outs
dec
adc
iret
cmp
iret
push
(bad)
mov
fwait
loopne
and
jns
pop
popa
stc
xor
mov
push
cmps
xor
or
dec
test
and
shl
ret
inc
aaa
out
jmp
and
ror
or
and
sar
push
fisub
cmp
jg
xchg
push
test
pop
pop
movs
mov
inc
push
imul
push
push
or
sti
iret
mov
sub
inc
test
test
sbb
pop
lea
inc
cmp
in
xchg
cmp
push
outs
lods
dec
inc
ret
cmp
or
call
fild
aas
and
cmp
je
outs
jmp
jb
mov
push
and
sub
xor
and
sbb
cmp
sub
cwde
add
inc
test
inc
pusha
daa
data16
test
lock
fidivr
enter
stos
test
fs
pop
jmp
push
add
xor
mov
add
and
jecxz
inc
inc
sbb
or
jle
sbb
mov
daa
jmp
mov
jne
popf
add
pop
rol
fwait
(bad)
mov
jge
or
fidivr
cld
or
lahf
pop
dec
jnp
xor
or
push
inc
push
inc
das
or
repz
push
push
pop
push
aaa
pop
xchg
movs
push
push
jp
inc
call
push
cld
push
and
mov
repz
mov
lods
add
jl
xchg
mov
add
add
add
push
inc
fcmovnb
scas
mov
push
sbb
mov
inc
clc
pop
cld
push
cs
add
pop
adc
add
adc
das
mov
add
push
(bad)
pop
pop
pop
sub
lea
ins
jne
or
pop
or
and
jnp
sar
and
dec
mov
sbb
sub
fmulp
push
(bad)
pop
stc
sub
adc
ror
xor
scas
dec
add
aas
xchg
add
shl
mov
dec
sub
sub
shl
adc
pop
enter
sub
fidivr
cmp
ins
scas
sub
mov
inc
mov
mov
loopne
daa
dec
pop
and
dec
mov
pop
pop
add
push
inc
mov
sbb
dec
push
nop
lahf
or
and
aas
add
cwde
adc
les
fwait
mov
pop
mov
add
inc
pop
adc
jo
pusha
xor
test
mov
xchg
and
mov
sub
push
aam
ins
stc
jmp
mov
mov
lods
repz
test
mov
push
call
dec
fsubr
mov
retf
pop
es
mov
test
pop
fwait
cwde
mov
inc
mov
xor
mov
dec
xor
fbstp
fistp
sbb
jg
mov
ja
pushf
sub
inc
pop
lahf
jg
pop
shl
push
enter
aas
dec
jmp
rol
ror
stos
call
inc
pusha
cmp
or
ja
gs
add
jb
push
mov
xchg
pop
ins
pop
in
aas
fsub
add
push
loope
adc
dec
int
mov
lahf
lock
cwde
or
and
ret
sub
sbb
sub
xlat
push
enter
jmp
and
sbb
adc
mov
test
pusha
mov
lea
mov
push
retf
jge
sbb
ror
or
adc
push
or
test
add
fisttp
mov
dec
mov
jbe
xor
inc
sub
inc
sbb
aam
sub
hlt
inc
in
mov
push
nop
cwde
gs
repz
sbb
outs
inc
sar
rcr
mov
or
pop
add
ror
mov
cdq
ins
and
rcr
fdiv
les
pop
adc
dec
enter
or
iret
loopne
loopne
test
inc
pop
dec
fsub
and
sbb
out
push
add
sub
add
jmp
push
mov
adc
pop
nop
ins
mov
add
dec
sbb
dec
pop
fidivr
or
push
pop
and
add
push
jo
mov
data16
int
sub
sub
xchg
sbb
lahf
aad
ins
and
or
mov
int3
jg
xchg
scas
in
mov
add
inc
dec
jmp
sub
test
shl
xor
add
out
push
add
aas
and
cld
xchg
daa
sub
aas
add
sbb
movs
mov
call
aas
aad
movs
push
test
or
and
add
add
add
or
pop
int
or
mov
pop
add
fmul
fist
jno
sar
lds
and
inc
cli
inc
dec
add
or
or
add
add
mov
sbb
dec
inc
sbb
mov
stos
data16
neg
add
adc
xor
imul
and
in
stc
retf
scas
sbb
fimul
push
loope
stc
inc
scas
mov
or
stc
loop
adc
pop
enter
adc
imul
pop
push
pop
inc
imul
mov
dec
dec
or
js
inc
pop
inc
mov
dec
call
mov
(bad)
out
push
rol
aas
inc
ins
sub
pop
ins
mov
imul
ss
sub
push
push
mov
cmp
out
sar
sub
pop
adc
push
mov
and
and
dec
mov
shl
in
and
aaa
adc
jl
loopne
pusha
cmp
sbb
sbb
add
mov
and
cmp
rcr
inc
and
cmp
add
or
popa
inc
popa
outs
add
es
pushf
push
adc
sbb
sub
nop
add
inc
inc
fwait
mov
or
xchg
mov
inc
arpl
adc
inc
pop
cmp
out
loop
(bad)
stc
sub
mov
sub
arpl
adc
adc
pop
or
sbb
adc
dec
mov
sub
pop
or
pop
or
pop
inc
or
push
inc
cmps
inc
adc
mov
js
or
int3
mov
jmp
push
adc
aas
repnz
ja
(bad)
lahf
icebp
mov
or
bound
mov
les
mov
and
mov
add
add
jg
stos
add
and
pop
add
cmp
retf
pop
inc
add
mov
ror
inc
or
or
or
pop
inc
sar
add
mov
mov
mov
add
add
push
pop
mov
stos
pop
adc
(bad)
adc
inc
cmp
adc
push
enter
or
cmp
dec
push
mov
mov
mov
mov
or
dec
adc
inc
mov
cmp
or
sbb
not
pop
or
xchg
icebp
push
and
jg
lock
inc
push
(bad)
cmp
inc
cmp
adc
sbb
inc
jnp
inc
mov
mov
ss
add
aam
jle
mov
xor
adc
or
adc
fcomp
mov
mov
jecxz
push
addr16
mov
push
pop
lahf
sub
dec
clc
mov
into
jae
xchg
jmp
les
aas
or
hlt
sbb
js
or
inc
outs
call
nop
and
repnz
pop
cld
shl
sub
fisubr
cmps
sub
pop
add
lods
cwde
or
or
jl
mov
pusha
retf
inc
loop
xor
or
add
and
mov
sbb
jge
xchg
mov
and
inc
bound
or
add
jge
les
in
or
std
fcomp
xor
inc
daa
add
sub
mov
pop
cmp
je
inc
lock
add
mov
and
adc
or
sub
js
push
mov
push
aas
mov
jnp
pop
(bad)
int
or
fsubr
add
add
lfs
pop
or
add
mov
pop
fstp
lods
gs
sbb
dec
jo
dec
fadd
adc
mov
xor
test
pop
and
ins
push
sar
jne
imul
imul
mov
outs
jg
pushf
jmp
lahf
arpl
mov
mov
add
or
call
das
retf
mov
call
ret
out
pusha
sbb
js
xchg
cmps
xor
lock
xor
inc
add
xlat
mov
nop
add
adc
and
add
mov
pop
rcr
add
push
cs
les
movs
add
add
cmovb
dec
cmp
and
ret
add
inc
cld
test
push
nop
bound
pop
pop
mov
(bad)
std
shl
stos
add
sub
push
cwde
or
sbb
dec
mov
pop
or
xchg
(bad)
adc
inc
test
cmps
popa
fcomip
sub
in
or
or
gs
sub
or
and
dec
inc
add
cmp
inc
adc
inc
or
or
pop
movlps
cli
add
push
mov
enter
dec
inc
and
adc
mov
test
pushf
mov
inc
test
mov
adc
rol
mov
cmp
pop
call
inc
sbb
jecxz
test
add
xchg
add
push
in
push
mov
and
inc
or
cmps
out
adc
cmp
adc
in
xchg
adc
repz
adc
dec
dec
pop
sahf
mov
fwait
clc
lds
in
and
mov
sbb
lock
in
fiadd
aaa
lods
jmp
lods
cmp
rcr
adc
les
movs
and
popa
test
pop
mov
fidiv
inc
jne
mov
or
mov
jno
mov
pop
add
fstp
fmul
sbb
jle
ret
out
std
push
push
lahf
add
and
mov
adc
jo
pop
or
jnp
iret
mov
adc
xor
sbb
clc
sar
sbb
push
imul
sbb
ror
push
jns
mov
mov
lock
lock
(bad)
jmp
xor
rol
pop
mov
test
and
idiv
retf
sub
sbb
cs
xor
adc
or
les
sub
mov
or
loopne
mov
inc
push
cmp
fcomp
dec
daa
fbstp
mov
push
push
cmp
xchg
inc
repz
call
or
push
ror
mov
xchg
push
push
imul
mov
fs
das
jmp
and
js
cmp
or
push
pushf
sub
mov
fdiv
test
jmp
loopne
adc
push
push
loope
adc
mov
enter
jmp
adc
ds
push
(bad)
cmp
xchg
or
loopne
(bad)
mov
sbb
xor
jmp
or
aad
nop
into
or
mov
test
loope
xor
nop
clc
dec
add
(bad)
or
repz
add
pusha
inc
xor
jo
xchg
retf
mov
pop
lds
cmp
add
ins
les
dec
int3
daa
sbb
push
add
int
into
push
push
ror
xor
push
mov
je
sbb
push
pop
or
aad
sbb
lahf
fcmovnb
ins
les
add
cwde
pop
ret
jne
add
loope
mov
dec
pop
hlt
sub
mov
xor
and
mov
push
push
rcl
push
sub
mov
push
mov
(bad)
xor
inc
mov
ret
and
cmp
dec
sub
adc
push
sbb
push
sbb
add
aam
lods
mov
shl
push
jg
sub
and
fstp
mov
push
not
retf
test
xor
dec
xor
cmc
adc
test
aam
das
jae
sub
pop
mov
adc
mov
pop
jge
mul
xchg
mov
push
mov
pop
add
mov
sbb
mov
sub
retf
dec
popa
sbb
add
mov
daa
push
mov
movs
pop
icebp
std
jmp
or
lea
clc
adc
imul
pop
call
add
iret
out
mov
and
push
push
xchg
out
cmp
xor
mov
sahf
xchg
mov
cld
(bad)
out
ss
add
fwait
mov
aas
or
push
xchg
sbb
xchg
popa
and
xor
pop
push
lock
push
frstor
inc
mov
jmp
jmp
or
push
mov
pushf
test
mov
daa
sub
lods
sub
js
out
enter
in
retf
jecxz
dec
bound
sbb
(bad)
xchg
cwde
or
rcl
adc
es
jno
lods
cmp
es
pop
sub
mov
loop
jae
arpl
adc
mov
adc
(bad)
leave
cmp
pop
rol
add
test
adc
sub
nop
jle
cmp
inc
or
push
popf
(bad)
loopne
add
xchg
retf
or
jl
shr
nop
push
cmps
or
daa
or
cmp
call
add
mov
rcr
sub
mov
mov
cld
add
mov
fwait
xor
rcl
xor
xchg
mov
mov
xor
and
adc
add
jge
int3
fnstenv
push
sub
adc
xchg
int3
jecxz
mov
push
dec
aam
inc
stos
pop
lods
test
inc
adc
adc
mul
fs
retf
jecxz
adc
outs
mov
dec
add
les
cmps
inc
xchg
cs
lods
add
loop
clc
mov
jge
cmp
or
push
out
push
or
lss
ins
and
cmp
xor
cs
and
push
or
aam
shr
fist
rcl
cmp
jne
mov
stc
xor
sub
lds
inc
lods
scas
std
add
and
inc
dec
jne
mov
inc
ins
retf
ret
stos
sub
test
sub
call
mov
cmp
cmc
es
imul
and
pop
js
jmp
jns
jmp
cmp
ret
aas
adc
(bad)
mov
pop
ror
add
mov
adc
dec
mov
cdq
int3
or
loop
sbb
push
pop
jo
push
or
xchg
and
fsub
inc
inc
clc
add
xchg
mov
rcr
(bad)
(bad)
add
aaa
and
sbb
push
std
arpl
xor
adc
in
pop
xchg
lds
in
sub
adc
and
(bad)
or
or
out
mov
or
and
pop
(bad)
jnp
lods
out
add
out
add
push
ins
sub
mov
cmp
adc
and
dec
cmps
pusha
xor
add
jl
inc
xchg
lods
mov
pop
aad
push
mov
fild
add
or
inc
or
dec
dec
aad
dec
and
add
or
inc
adc
lahf
bound
bound
jg
mov
jg
arpl
xchg
les
lahf
inc
and
add
mov
adc
or
add
lods
mov
mov
fsub
dec
xchg
dec
cwde
and
je
sub
rol
outs
mov
adc
pop
push
mov
and
and
add
or
mov
mov
pop
mov
xor
push
or
adc
mov
loopne
gs
clc
lods
adc
and
xlat
inc
lahf
inc
jmp
sub
add
xor
pop
les
jg
mov
pop
aas
push
ror
aas
pop
adc
add
test
pop
sbb
in
dec
add
or
xchg
mov
and
adc
dec
jmp
xor
add
push
or
pop
adc
sub
je
adc
dec
test
or
shr
xor
test
add
add
aaa
scas
jbe
cmc
dec
xlat
xchg
inc
loop
push
dec
movs
add
and
cmp
mov
push
inc
mov
pop
mov
xor
fadd
aas
dec
pop
add
sub
inc
outs
add
sbb
mov
push
push
add
xchg
mov
das
inc
retf
test
rcr
jnp
ds
add
mov
inc
pop
adc
lods
les
or
nop
pop
adc
push
dec
shl
inc
fistp
or
or
mov
add
mov
push
retf
add
or
cmp
push
aam
mov
dec
or
loop
mov
inc
adc
call
sub
push
sbb
push
jg
push
or
lahf
push
sbb
sbb
jge
dec
rol
mov
test
or
inc
dec
sub
mov
push
inc
loope
sar
xchg
sar
jnp
sbb
aam
je
dec
mov
mov
xor
push
out
or
popa
loope
inc
out
sar
das
(bad)
pcmpeqd
push
pop
jne
or
int3
and
stos
or
(bad)
sub
adc
rol
mov
(bad)
(bad)
clc
jg
and
add
out
sub
xor
sub
or
dec
cmp
add
xchg
mov
into
push
ins
sub
test
mov
xchg
mov
adc
mov
and
add
xor
and
and
mov
push
shl
sbb
add
pop
mov
push
xor
outs
rol
adc
outs
mov
sbb
and
pop
jne
sbb
(bad)
dec
and
pop
push
mov
sti
sub
push
push
dec
cmp
mov
push
pop
adc
in
pop
and
dec
sub
sub
into
push
sub
je
xor
mov
jmp
dec
jge
sbb
xchg
inc
pop
inc
push
cmp
sbb
dec
push
push
das
fadd
sbb
lods
mov
inc
and
xor
stos
mov
or
push
push
inc
out
add
adc
adc
inc
inc
or
sub
pop
aam
add
inc
pop
mov
push
(bad)
mov
or
or
test
nop
push
or
sbb
ret
push
add
adc
clc
adc
pusha
add
popa
or
xor
and
stc
fsubr
pop
mov
pavgw
dec
inc
rol
jle
cdq
jo
xchg
xor
daa
into
cdq
adc
add
nop
mov
nop
sub
dec
or
mov
adc
pop
imul
or
cld
or
or
stc
jo
mov
pop
pop
sbb
shr
pop
or
lods
mov
in
repz
xchg
das
mov
in
imul
or
jmp
call
scas
aas
cli
or
mov
push
dec
or
and
push
les
jns
cdq
and
or
add
mov
add
je
mov
in
push
sub
mov
inc
sbb
outs
mov
adc
xchg
mov
retf
movs
cmp
or
retf
or
jg
dec
xor
jns
arpl
popa
out
out
lock
pop
imul
inc
adc
or
aad
xor
aas
test
pop
sbb
je
mov
(bad)
jg
or
cs
push
add
or
jae
add
push
push
push
(bad)
loope
cli
add
or
in
mov
jmp
adc
ja
popa
sub
dec
jp
jmp
lahf
sub
pop
or
(bad)
test
enter
add
or
or
inc
lods
sub
out
cdq
sub
dec
call
push
adc
pop
mov
xor
aas
mov
and
push
and
add
pop
push
arpl
jo
and
adc
scas
add
bound
mov
arpl
jbe
data16
cmp
inc
jbe
mov
xor
push
arpl
sti
xor
mov
jo
or
cld
mov
sbb
jmp
mov
inc
out
lea
paddusb
pushf
push
dec
add
mov
mov
or
add
or
push
or
sbb
pop
div
clc
mov
push
stc
mov
add
js
inc
push
nop
jae
cvttps2pi
in
jp
inc
xor
imul
lea
or
lds
sbb
punpcklwd
mov
lock
push
push
out
inc
or
(bad)
adc
jne
push
mov
test
jmp
test
and
js
push
stos
and
hlt
push
cwde
loop
or
out
xchg
idiv
cmp
mov
push
xrelease
mov
(bad)
inc
mov
inc
sub
push
xchg
fucomip
pop
and
adc
push
cmp
cdq
inc
int
jne
push
pop
jg
cmc
push
clc
jne
in
inc
push
jne
push
clc
push
mov
jnp
pop
jmp
cdq
adc
test
ins
rol
pop
pop
or
imul
or
div
inc
add
sbb
test
dec
sbb
jne
xor
in
imul
sub
lea
aaa
or
loopne
inc
jecxz
inc
lock
push
cli
sbb
push
test
mul
enter
ret
mov
mov
add
sbb
cmp
jo
in
jmp
test
push
call
bound
add
pop
pop
movs
sbb
outs
ds
loope
and
sub
add
adc
not
add
call
test
rol
cmp
add
inc
ins
jbe
sbb
jge
add
inc
adc
dec
pop
sbb
ins
in
and
jns
lods
sub
inc
test
and
xchg
pop
push
lock
clc
or
add
outs
jmp
xchg
nop
push
jg
movsx
or
mov
and
in
push
ret
not
test
gs
lahf
dec
sub
jo
stos
sub
cmps
(bad)
ret
add
add
or
and
dec
jl
cmp
mov
jae
add
pop
cmp
and
stos
cmc
shl
(bad)
mov
add
add
mov
jmp
bound
and
sbb
jo
test
fisub
push
xor
rcl
xchg
rcl
dec
stos
cmp
std
cmp
je
jnp
rcl
popa
fdiv
jne
sbb
fisub
fistp
ins
sahf
jmp
jmp
leave
in
inc
cs
je
adc
push
xchg
mov
xchg
mov
add
rcl
or
sbb
adc
inc
movs
inc
cld
inc
imul
ror
dec
sti
gs
fmul
and
popa
cmp
fiadd
fmul
fcmovnb
add
mov
dec
sbb
or
adc
pop
(bad)
and
cld
rol
mov
cmp
pop
jmp
stos
add
xor
xor
jne
and
jae
xor
xor
xchg
popa
clc
cmp
adc
sbb
loop
sbb
push
sbb
pop
sbb
movs
mov
test
pop
push
dec
mov
sbb
mov
lods
add
push
test
adc
in
cmc
and
inc
mov
fadd
sbb
les
push
mov
add
dec
mov
push
cli
adc
add
cwde
push
jae
jbe
dec
pop
lea
jne
popa
xor
xchg
iret
ret
rol
and
xchg
sar
add
dec
mov
pop
add
pop
push
mov
jge
movs
loopne
dec
push
mov
add
or
pop
scas
jns
data16
sysret
cmp
or
xor
mul
test
test
mov
lods
pop
(bad)
adc
fwait
push
or
xchg
or
pop
aas
dec
add
adc
push
js
mov
and
mov
mov
add
pop
test
add
dec
sbb
lahf
add
fbstp
outs
sbb
jg
xor
mov
jmp
jl
xchg
cli
xor
cmp
adc
fcomp
xchg
xchg
pop
dec
sub
sbb
adc
aas
or
inc
loop
jno
inc
inc
xor
mov
imul
ret
mov
and
adc
add
or
add
cmp
inc
bound
daa
inc
dec
push
mov
push
fadd
outs
dec
or
xlat
aas
push
jo
rcr
adc
stos
push
mov
fild
shl
inc
push
or
sbb
xor
and
push
mov
cmps
add
pop
push
mov
adc
in
pop
lods
inc
xchg
and
inc
or
sar
pop
dec
push
mov
add
outs
loopne
mov
les
xor
add
fcomp
add
loop
mov
aam
mov
or
test
mov
lock
and
ss
push
xor
pop
(bad)
xchg
dec
inc
pop
out
cmp
mov
rcr
dec
add
or
dec
jl
sar
push
mov
andnps
xor
jecxz
or
cmp
cmc
add
inc
add
push
or
mov
sub
push
mov
or
adc
inc
mov
adc
add
dec
adc
xchg
push
push
movs
pop
jo
add
fimul
add
inc
dec
cmp
push
jp
lods
jge
cwde
mov
out
add
pop
jne
daa
outs
mov
sti
or
dec
cld
mov
pop
jne
push
adc
push
push
je
aam
mov
lahf
xchg
out
and
movs
add
test
inc
add
and
mov
dec
push
push
cs
or
repz
adc
add
sbb
push
push
add
inc
cmp
ins
fsubr
pop
mov
adc
or
mov
push
scas
and
xor
sbb
and
fs
ficom
mov
and
jne
mov
pop
sub
je
push
addr16
xor
jno
xchg
adc
(bad)
add
dec
xlat
sub
call
or
push
or
add
lods
imul
test
jne
nop
pop
or
sbb
adc
cmp
ja
jmp
mov
and
push
and
mov
push
sub
inc
sub
outs
jmp
dec
cmp
add
jmp
mov
dec
sub
dec
ss
mov
or
mov
push
xchg
jmp
mov
lahf
xchg
imul
push
ins
mov
sub
jne
sub
mov
or
sub
cmp
daa
cmps
dec
jg
fadd
out
add
ret
sbb
clc
jmp
ja
and
mov
fmul
or
or
pop
pop
add
pop
jnp
mov
push
out
push
dec
inc
push
pop
pop
jl
iret
rcl
arpl
add
mov
inc
test
pop
sbb
jp
adc
popa
and
shl
push
movs
xchg
add
cwde
out
or
out
add
clc
add
je
add
test
pop
fiadd
inc
mov
push
aas
or
clc
inc
pop
push
jg
push
jne
inc
inc
addr16
cmc
add
add
adc
sti
inc
or
or
test
test
int3
ins
mov
sbb
xlat
add
adc
mov
je
xor
dec
pop
pop
or
ss
cdq
leave
mov
pop
inc
xchg
xor
cmps
add
adc
mov
pop
and
push
xchg
aad
jge
fst
push
add
inc
mov
popf
pusha
adc
lds
pusha
pushf
daa
scas
test
mov
(bad)
mov
sub
sbb
xor
pop
pop
add
push
and
jmp
test
loope
add
and
ret
dec
ins
push
ror
mov
xor
or
mov
add
das
xchg
rcr
sub
les
dec
sbb
(bad)
cmp
mov
sar
dec
cli
mov
cli
and
inc
sub
jg
add
and
fisttp
jns
adc
inc
and
mov
pop
or
ja
jne
jb
ror
fnstcw
xchg
lock
inc
aaa
inc
fild
sub
mov
pop
jp
test
ror
fild
cmp
adc
scas
dec
ret
test
cmp
push
jnp
sbb
mov
and
add
push
sbb
inc
add
xor
outs
movs
adc
cmp
sti
loopne
add
mov
dec
mov
data16
push
leave
ins
ret
push
(bad)
adc
fild
mov
inc
adc
pusha
xor
add
outs
add
pop
or
lea
sbb
aam
push
pop
call
ins
popf
cmp
fiadd
mov
test
loop
mov
dec
fisubr
mov
mov
add
adc
dec
test
cmp
lods
dec
test
push
mov
dec
or
pop
lds
inc
push
xor
imul
daa
mov
push
sysret
pop
lods
std
js
push
sbb
ret
or
or
imul
(bad)
daa
hlt
or
dec
sbb
or
ss
es
adc
jo
adc
mov
push
dec
pusha
and
xchg
idiv
retf
(bad)
xor
sar
mov
mov
aas
sbb
pop
cmp
adc
add
and
dec
popa
sti
or
inc
pop
or
sbb
ja
inc
mov
imul
mov
ret
add
pop
dec
push
int3
daa
fstp
fsubr
ss
sbb
pop
add
jns
dec
or
aaa
add
cld
gs
daa
cwde
in
js
and
loope
sub
push
or
ins
sti
ss
and
or
mov
push
add
lahf
and
push
repz
out
mov
jmp
xchg
stc
mov
out
rcl
sar
push
add
mov
fisttp
add
jg
cwde
inc
sub
mov
and
or
cmp
and
xor
pusha
mov
aad
or
ins
inc
cld
push
xor
pop
cli
or
sbb
mov
or
mov
jg
pop
xor
jg
mov
popa
sub
and
mov
xor
nop
cld
pop
or
xor
es
pop
mov
dec
or
mov
and
cwde
pop
lahf
fmul
imul
or
out
and
ins
xchg
mov
cld
lds
pop
rcl
pop
xchg
sub
mov
jns
jo
push
nop
movsx
fbld
cmps
lahf
hlt
sbb
push
daa
fnsave
pop
inc
mov
lahf
xor
xchg
xlat
in
shr
pop
mov
push
xchg
jecxz
mov
rcr
xchg
pop
mov
fst
dec
jl
test
cmp
dec
lea
loopne
xchg
lods
aam
aam
jo
and
inc
lock
daa
in
pop
and
cmp
mov
xor
arpl
loopne
shl
repnz
inc
outs
adc
push
js
mov
xor
sub
xchg
mov
adc
xor
mov
fild
add
jb
mov
outs
mov
add
adc
xchg
dec
mov
jnp
cmp
cmp
js
iret
sbb
adc
and
sbb
add
cmp
mov
dec
sti
nop
inc
inc
inc
fbld
retf
dec
in
adc
dec
mov
add
add
mov
fild
nop
jo
add
pusha
test
shr
dec
in
movs
dec
adc
pop
mov
inc
ja
loope
mov
add
inc
xchg
and
mov
imul
xchg
int3
xchg
adc
mov
aam
push
add
xor
mov
add
inc
pop
or
mov
fisttp
inc
(bad)
lea
pop
pop
push
out
ret
dec
pop
sub
mov
push
imul
push
and
sub
call
arpl
in
jnp
push
lds
mov
inc
in
add
std
xor
scas
push
dec
inc
jmp
int3
xchg
xor
(bad)
sbb
ret
movs
ret
jg
(bad)
gs
mov
dec
jns
lock
inc
fild
add
adc
jg
mov
dec
ins
sbb
add
pusha
dec
and
sub
and
sub
ror
or
inc
and
js
mov
sbb
adc
mov
out
js
das
xor
sbb
adc
popf
jge
cwde
mov
push
dec
aam
inc
and
in
(bad)
and
dec
inc
push
fdiv
sub
mov
fcom
jne
add
cmp
inc
inc
hlt
xor
jo
test
int
aam
sub
je
outs
retf
fucomp
rcr
mov
ins
pop
mov
push
pushf
cmps
jg
cmp
icebp
adc
push
dec
jmp
(bad)
nop
movs
test
add
lods
shl
jge
std
adc
lock
push
jo
xor
fist
push
mov
stc
sbb
pop
adc
adc
adc
mov
dec
mov
push
call
or
cmp
clc
inc
cmp
and
scas
push
inc
xlat
fisttp
jg
add
and
movs
mov
jo
outs
add
call
mov
jae
test
jle
das
jne
lods
sbb
jle
pop
cli
cs
aaa
jg
adc
xor
inc
adc
mul
adc
dec
push
fnstenv
jno
jl
dec
inc
jg
cmp
inc
cld
aaa
jmp
or
pop
or
push
add
add
pusha
ss
lea
stos
pop
push
push
mov
pop
mov
push
aaa
inc
aas
dec
or
xchg
leave
xchg
inc
pushf
or
or
and
jmp
clc
push
clc
sub
sub
sub
mov
add
sub
bound
jne
dec
cmp
xchg
mov
cs
and
inc
ret
cld
inc
nop
pop
and
xchg
lods
das
mov
pusha
sbb
sahf
adc
iret
jle
ss
lahf
pop
je
aad
mov
xchg
push
jmp
dec
or
push
lea
inc
xchg
and
push
inc
adc
push
movs
aam
ja
pop
je
aam
push
loope
cli
mov
jge
mov
push
pop
je
das
jl
(bad)
push
pop
je
inc
sub
je
pusha
jnp
xchg
or
jne
enter
inc
push
je
push
sub
mov
jge
je
popf
sub
aas
je
mov
je
into
sub
(bad)
or
je
dec
and
sbb
pop
das
add
js
mov
cld
mov
sahf
imul
push
mov
mov
and
jmp
sub
outs
or
xchg
addr16
or
xchg
addr16
jbe
call
mov
mov
popa
pop
xchg
bound
fmul
or
stos
or
mov
xchg
pop
cli
push
jecxz
push
test
xor
push
sbb
xchg
sbb
adc
ret
and
and
mov
sub
push
mov
xor
adc
mov
xchg
and
push
add
xchg
outs
cmp
add
cwde
push
mov
xor
and
push
sbb
call
mov
xchg
fcom
je
push
aam
aas
(bad)
push
sbb
imul
lea
pop
jne
pop
xor
cmp
jge
push
cmc
or
add
push
fwait
xchg
movs
jmp
cmc
push
push
lods
cmps
or
cmc
inc
mov
sub
dec
mov
iret
enter
fnstsw
loop
(bad)
repnz
push
cmp
lea
retf
mov
jnp
xchg
retf
dec
dec
rcl
shl
xchg
sub
push
add
mov
jmp
sub
fdiv
or
movs
dec
add
add
test
in
mov
inc
ret
xchg
dec
and
les
sbb
retf
push
push
dec
fdiv
push
aas
xchg
nop
or
lock
jmp
jb
mov
hlt
sub
push
pop
cmc
add
fidiv
test
cmp
xor
mov
rcr
or
mov
and
mov
xchg
jo
or
mov
push
dec
shl
or
aam
sbb
popf
sbb
out
cmp
ins
sub
popa
lahf
and
fsubr
inc
jl
pop
pop
dec
sbb
test
mov
imul
add
ja
xchg
fprem
add
sbb
jo
test
call
xor
sbb
mov
add
in
cmp
ror
dec
ror
pop
push
xchg
lock
or
push
dec
cmps
shl
nop
dec
pop
das
jl
sub
add
pop
add
dec
dec
mov
rol
(bad)
(bad)
mov
add
push
pcmpgtw
call
lea
adc
pop
aas
mov
cmp
cmp
add
sbb
add
or
xchg
dec
adc
sbb
add
js
enter
mov
xor
mov
loopne
mov
push
test
adc
iret
adc
cdq
xchg
icebp
cmps
jno
arpl
push
pop
ficom
or
pop
add
sub
rol
push
jg
mov
xor
cmp
mov
(bad)
dec
les
and
les
and
(bad)
or
les
and
and
retf
pop
adc
mov
pop
jmp
mov
fs
push
aaa
repnz
jne
sbb
xor
sar
add
adc
or
movs
ret
jge
add
jne
fldenv
add
cmp
or
leave
les
ins
stos
loopne
fisubr
out
loope
fidivr
xor
rol
jne
and
inc
les
push
xchg
sub
and
sub
add
out
(bad)
aaa
add
add
pushf
jmp
cmp
sbb
push
sub
les
cmp
jecxz
jecxz
lods
mov
popa
std
repz
add
ds
rol
adc
mov
lahf
popa
mov
jmp
or
stc
jae
or
dec
cld
dec
das
ds
call
imul
adc
mov
fadd
mov
xchg
xor
ret
test
or
enter
mov
cdq
ffreep
fild
int
jno
lahf
push
add
inc
pop
add
ret
cmp
lahf
rcr
add
fbstp
push
xchg
clc
inc
ins
xchg
add
add
dec
jnp
and
jns
enter
inc
lods
nop
push
icebp
shl
ss
outs
or
xchg
xor
rep
fld
jecxz
icebp
mov
mov
xchg
dec
mov
int3
push
bound
cmp
sub
aad
int3
and
mov
loop
movs
mov
dec
aaa
sub
cmps
adc
jge
mov
loope
test
imul
pop
xor
inc
sbb
imul
or
dec
adc
sub
clc
cmp
popf
pop
mov
jnp
aas
add
jg
ror
cmp
cmp
and
add
push
fsubr
push
xchg
pop
test
add
xor
shr
adc
or
movs
add
mov
or
outs
xor
push
fwait
int3
add
add
inc
mov
jo
call
sbb
in
inc
or
or
and
stos
sub
add
mov
enter
adc
cwde
xchg
sub
add
in
call
xchg
or
or
and
mov
adc
jae
mov
xchg
or
xor
mov
sbb
xor
ret
popf
push
xchg
inc
out
rcr
mov
or
inc
in
mov
and
mov
outs
xor
add
int
out
and
jecxz
imul
xor
lods
jmp
mov
or
sbb
js
ror
cmp
inc
loopne
outs
push
adc
add
fisttp
adc
dec
or
or
nop
inc
xchg
jnp
leave
xchg
xchg
nop
xchg
sbb
scas
dec
adc
std
or
test
or
mov
cmp
sahf
or
push
in
lea
jge
movs
or
test
sbb
inc
pop
sbb
mov
lahf
nop
mov
jle
jmp
cmp
cs
xor
xor
or
lods
mov
mov
and
test
je
gs
mov
sti
retf
movs
sbb
leave
xchg
adc
data16
int3
xor
data16
lahf
mov
jg
stos
shl
inc
sbb
mov
ret
adc
push
cmps
test
jno
adc
cmps
dec
daa
add
xchg
xchg
add
test
enter
xchg
mov
stos
xchg
jge
push
inc
pop
inc
pop
aam
ins
test
jb
xchg
dec
test
sbb
dec
or
scas
lods
das
dec
add
jge
add
add
and
cld
xchg
or
daa
push
test
adc
cwde
mov
mov
sar
shl
xor
int
(bad)
inc
xchg
test
scas
(bad)
movs
enter
dec
pop
popa
xor
cmp
sub
push
and
arpl
xchg
xchg
pop
and
or
fwait
movs
cmp
icebp
test
dec
sbb
imul
sar
dec
push
add
in
and
adc
jno
leave
adc
call
mov
or
movs
push
add
or
cwde
popa
add
jg
inc
add
nop
pop
inc
add
xchg
leave
sub
adc
lods
in
or
retf
add
pop
cmp
test
aaa
push
pop
dec
popa
push
adc
ins
loop
xchg
mov
das
add
pushf
rol
mov
xor
jae
pop
fisttp
aaa
jmp
fild
je
pop
mov
mov
jge
mov
dec
loope
sar
xchg
push
mov
add
mov
push
adc
adc
adc
adc
lea
dec
retf
lods
pushf
xor
jg
or
or
xchg
add
mov
lods
dec
sbb
and
repz
test
push
pop
mov
sbb
ror
fimul
aam
pop
add
and
sbb
cmp
cmp
lea
push
add
lahf
or
loope
gs
popa
xchg
xchg
mov
mov
push
mov
lods
retf
popa
add
movs
lea
adc
push
or
lea
inc
es
xchg
pusha
jmp
js
cdq
push
stos
or
ucomiss
les
pop
add
jge
inc
mov
xor
jmp
cmp
iret
add
or
dec
and
mov
jg
and
push
pop
jp
scas
mov
or
xor
sbb
jg
add
icebp
call
add
cmp
std
mov
test
test
jecxz
ror
ffreep
inc
mov
mov
loope
cmp
mov
retf
dec
mov
les
jmp
push
movs
add
adc
mov
push
sbb
inc
pop
add
mov
daa
or
cmp
and
or
inc
sbb
and
xor
push
dec
jp
push
push
dec
and
mov
lds
dec
mov
aas
inc
lods
stos
adc
mov
mov
dec
and
iret
xchg
mov
fstp
pusha
or
inc
fild
(bad)
xchg
je
pushf
sbb
dec
or
and
js
(bad)
dec
in
inc
mov
aam
aas
add
inc
inc
push
sar
or
or
xchg
mov
mov
pushf
(bad)
mov
lods
mov
pop
lock
mov
fadd
dec
adc
lods
add
and
xor
and
and
in
inc
and
jo
imul
mov
and
or
out
fcom
and
out
and
mov
popa
cmp
jg
inc
and
or
pop
dec
pop
mov
mov
ret
jo
lods
lods
lods
add
aas
fidiv
push
or
fistp
imul
mov
or
or
pop
mov
xchg
adc
call
add
mov
sbb
fbld
dec
cmp
cld
idiv
or
test
mov
pop
mov
repnz
pop
and
sub
inc
mov
mov
xchg
pushf
inc
pop
mov
and
cmp
daa
nop
push
mov
mov
add
jb
jns
mov
mov
xor
pop
and
adc
mov
and
pusha
aas
fdivr
fcomp
(bad)
add
inc
xor
mov
xor
pop
gs
mov
push
adc
imul
inc
dec
sbb
add
pop
aas
fadd
and
xor
fsub
lea
les
dec
shr
jmp
test
cmps
cmp
loopne
icebp
mov
je
call
pushf
loop
pop
mov
or
cmp
gs
mov
or
pop
and
inc
cmp
cmps
stos
call
mov
fdiv
jnp
add
rol
xchg
test
sbb
xor
(bad)
adc
sub
dec
fcmovnu
std
sbb
sub
jg
inc
and
(bad)
fbld
push
and
mov
pop
lahf
test
test
jle
mov
mov
mov
ja
and
mov
sub
push
pop
pop
xchg
xor
lods
adc
mov
movaps
and
mov
and
mov
or
and
lods
in
pop
inc
xchg
and
test
adc
xor
call
ins
push
xor
xchg
fbstp
leave
mov
xchg
pop
xlat
cmp
sub
test
jnp
mov
push
dec
repnz
adc
xor
adc
jl
lahf
pusha
lahf
mov
test
adc
inc
push
push
ret
mov
dec
add
inc
arpl
xor
sbb
adc
mov
out
frstor
popf
xor
shl
sub
mov
rcl
xchg
or
ret
dec
out
and
push
add
ret
add
retf
mov
dec
das
add
push
and
pop
add
int
test
rcl
shr
leave
fsubr
inc
loopne
add
pop
push
adc
pop
bound
add
test
jb
add
mov
dec
in
sub
xchg
cmp
cmp
ret
inc
loopne
add
out
or
cli
mov
cdq
mov
push
cmp
cmc
pop
leave
fcom
add
add
or
xchg
mov
jnp
les
mov
test
outs
mov
or
bound
push
add
jns
jl
ret
leave
mov
dec
jecxz
in
and
push
sar
sub
leave
and
cwde
sub
adc
jb
jns
imul
fild
rcl
push
cmp
push
push
cmp
xchg
or
popa
shl
jo
aaa
outs
add
cmp
cmp
and
xchg
mov
(bad)
inc
(bad)
mov
cdq
or
add
add
or
loop
or
movlhps
mov
sub
adc
cwde
pusha
dec
adc
add
ds
or
test
adc
adc
cmps
add
cmp
cmps
rol
dec
xchg
pushf
(bad)
shl
mov
jnp
retf
nop
push
inc
pop
leave
enter
stc
out
add
comiss
ja
sbb
fld
fstp
arpl
add
mov
mov
jnp
cmps
dec
mov
push
push
xchg
or
ror
jecxz
out
sbb
(bad)
(bad)
mov
and
nop
inc
or
nop
add
ins
dec
retf
xchg
push
mov
leave
in
dec
inc
add
(bad)
add
sbb
pop
retf
sbb
shl
arpl
mov
dec
movs
xchg
xor
lock
(bad)
hlt
cmp
(bad)
add
sbb
xchg
pop
adc
xor
mov
add
jecxz
cdq
fadd
jl
int3
int3
push
adc
xchg
and
adc
push
ret
fwait
dec
je
add
in
cmp
ret
sub
in
mov
mov
test
out
imul
pop
shl
or
xchg
popf
in
pop
pop
or
or
mov
xchg
mov
add
ds
add
lds
fst
(bad)
popa
rcl
add
movs
mov
cmovle
lds
retf
xchg
int3
push
ror
and
pop
in
adc
popa
daa
(bad)
call
stos
or
mov
dec
fistp
add
jo
inc
fcmovnu
or
test
push
pop
add
out
stos
and
mov
mov
je
rol
dec
or
or
push
retf
pop
inc
lahf
mov
loope
inc
sub
add
test
and
outs
adc
inc
add
les
adc
pop
xchg
pop
sbb
outs
or
lock
test
add
cmp
sub
inc
stos
pop
rol
pop
lea
xchg
inc
mov
movs
nop
dec
sub
loope
adc
dec
shl
int3
aad
ror
data16
add
and
loop
push
sub
lahf
mov
adc
dec
adc
(bad)
xchg
or
shr
lahf
pop
or
mov
(bad)
popa
jg
mov
adc
aas
adc
loope
push
cmp
fwait
pop
mov
sbb
icebp
add
sub
sbb
sub
hlt
jmp
add
in
(bad)
cmp
int3
(bad)
or
or
cli
hlt
mov
adc
mov
add
retf
jno
and
inc
sbb
sub
mov
push
or
not
clc
dec
movs
xchg
xchg
add
pushf
pusha
dec
or
push
retf
lea
xor
rcl
mov
dec
adc
xchg
jp
xchg
add
push
sbb
sbb
xor
test
pop
js
mov
mov
push
jmp
and
and
imul
jns
cs
cmp
fs
cmp
add
popf
pop
loope
and
add
pop
inc
popf
pop
cmp
mov
shl
adc
arpl
add
xor
adc
aam
pop
loopne
loop
(bad)
adc
adc
bound
fsubr
mov
or
les
sub
mov
and
mov
mov
add
fcom
fscale
aam
jo
push
pushf
push
push
arpl
cmp
cdq
sbb
pushf
test
add
push
dec
das
les
aam
adc
and
cmp
popa
dec
and
aam
out
popa
mov
popa
push
mov
aam
push
popa
lods
adc
movs
inc
popa
popa
inc
add
leave
mov
adc
sub
push
xchg
loope
(bad)
(bad)
call
or
and
enter
or
mov
xor
or
icebp
popa
aam
lahf
adc
add
clc
push
les
sbb
push
lds
sub
sub
inc
ret
add
xchg
js
pop
and
add
adc
pop
loopne
add
ins
adc
and
inc
pop
push
adc
aam
jge
jecxz
push
test
jge
xchg
fisubr
dec
in
push
lock
in
pop
or
cwde
loopne
ins
aas
and
adc
sub
fsubr
ret
dec
sbb
lds
clc
add
fcom
outs
add
cmc
mov
nop
movs
dec
stos
dec
bound
call
into
sub
sti
lds
test
das
cmp
or
adc
inc
ja
dec
push
dec
cmp
xchg
or
add
mov
and
adc
fadd
ror
mov
aam
mov
dec
int
pop
push
mov
sub
lods
bound
jmp
or
pop
and
es
and
fwait
push
mov
jbe
fidivr
push
dec
test
mov
fsub
xor
fbld
cmp
or
push
pusha
bound
es
mov
jne
mov
pop
add
push
pusha
or
clc
(bad)
and
sub
fdiv
jns
mov
daa
pop
cwde
sub
rol
sub
pop
cmps
je
popa
pop
mov
add
or
loopne
daa
lods
test
sti
or
mov
inc
add
call
xor
or
cmp
or
push
loopne
fs
jne
mov
pop
mov
fst
mov
aad
or
jmp
xchg
push
(bad)
retf
jnp
rcl
pop
into
ins
imul
cmp
or
xor
leave
inc
mov
jb
rcl
add
in
retf
push
adc
dec
shl
inc
add
test
pusha
mov
aad
xchg
xor
adc
push
or
rcl
sbb
test
xor
je
sti
add
test
hlt
mov
mov
loopne
xor
lds
fisttp
xchg
xchg
adc
aad
add
mov
cwde
mov
and
cmp
inc
pop
cmp
cmp
fld
mov
adc
sub
xor
inc
and
or
pop
adc
shl
push
fcmovnb
push
inc
in
mov
and
pop
inc
add
inc
push
xor
ret
jno
pop
jmp
push
fadd
lods
push
push
sahf
mov
arpl
or
or
inc
mov
adc
push
xchg
arpl
imul
sub
jo
dec
sub
mov
and
aam
or
add
sbb
inc
pop
sbb
mov
cwde
add
pushf
xor
int
push
ret
shr
xchg
add
daa
inc
inc
add
lahf
cwde
pop
add
pop
pusha
outs
mov
push
dec
mov
lea
inc
push
popf
fs
call
icebp
dec
add
or
push
add
pop
int
imul
jmp
out
adc
add
and
add
daa
fs
add
call
call
or
retf
fdivr
xchg
sub
shl
sub
pop
call
fisttp
sbb
jmp
add
push
pusha
mov
mov
rol
or
adc
xor
add
fstp
push
xchg
mov
ret
lea
cmps
pop
sub
sbb
cmps
inc
add
jmp
or
dec
imul
xor
mov
lock
mov
mov
adc
and
sbb
xor
test
mov
cmps
inc
ret
pop
jno
pop
add
push
add
cmp
sbb
scas
xchg
dec
outs
sti
in
adc
cmp
shl
popf
add
and
or
fsub
fcomp
pop
rol
sbb
push
jecxz
or
loopne
mov
std
jecxz
in
push
pop
in
or
jne
(bad)
test
icebp
(bad)
or
or
jne
add
in
jecxz
std
push
dec
dec
sub
and
cmp
push
dec
inc
test
or
cmc
mov
outs
pop
xchg
fild
dec
rol
fsub
in
adc
jl
jl
std
es
sbb
xchg
add
call
add
mov
sub
pop
xchg
seta
je
je
push
mov
mov
mov
mov
ins
push
loope
add
mov
jae
push
inc
ret
imul
and
lock
push
sbb
es
and
xchg
mov
add
cwde
xchg
lds
lods
add
outs
adc
in
xchg
xor
push
pushf
jecxz
lock
arpl
fs
sub
add
into
and
sbb
mov
leave
test
xchg
sbb
stos
xor
sub
xchg
test
sub
sbb
sub
jmp
dec
call
cwde
push
or
mov
fild
push
push
jl
retf
imul
loopne
nop
add
sbb
sti
cmc
pop
add
cmp
and
pop
add
cmp
add
dec
mov
mov
adc
pop
ins
ins
xchg
add
pusha
icebp
adc
imul
sbb
push
add
and
rcr
xchg
iret
xor
call
or
add
pop
sub
std
ja
mov
popa
movs
xchg
or
push
aad
rcl
repnz
clc
hlt
jae
pop
sbb
sbb
in
xor
or
mov
pushf
jl
xor
sub
cmp
lock
mov
fwait
pusha
leave
rcr
pop
clc
popa
xor
fwait
sbb
popa
int3
retf
or
loopne
loopne
mov
movs
mov
das
ucomiss
sub
and
ret
mov
jmp
rcl
xchg
or
mov
or
xlat
aaa
xor
rol
inc
and
rol
(bad)
dec
or
mov
(bad)
je
push
pop
add
sub
dec
adc
push
leave
aam
call
rol
ret
or
fwait
shl
aad
cmps
add
mov
ud2
sub
or
rcr
and
stos
ja
ror
cmps
ins
mov
jo
jno
mov
sbb
pop
inc
shr
xchg
imul
or
inc
xchg
mov
shl
add
push
xchg
mov
aam
add
sub
push
fucom
clc
xor
push
inc
push
and
mov
mov
inc
add
nop
push
sub
add
jg
movs
push
jno
push
mov
add
inc
add
add
cwde
loop
test
inc
xchg
add
mov
sbb
test
add
int3
test
and
jl
jmp
and
inc
and
ja
hlt
movs
or
pop
and
or
xor
jne
and
sbb
ja
push
add
jmp
das
add
jno
mov
aaa
das
mov
push
or
pop
push
and
mov
mov
add
imul
rol
add
lahf
cwde
retf
inc
jo
mov
pop
pop
push
push
add
adc
mov
cmp
ja
ins
pusha
test
shl
ins
and
fnstcw
push
ror
cmc
cmp
imul
rol
push
ins
dec
jg
push
mov
mov
mov
or
or
jmp
cs
or
push
mov
sbb
inc
sub
sbb
mov
movs
push
fcomp
mov
xor
nop
push
cs
dec
inc
inc
inc
pop
adc
sub
test
push
nop
pop
aad
or
sbb
push
pop
pusha
or
mov
data16
repnz
sub
add
or
or
inc
mov
and
retf
and
jae
inc
cmp
and
xor
mov
mov
push
xchg
sub
sbb
call
dec
add
mov
or
and
rol
fild
xor
jae
jae
sbb
hlt
test
pop
push
add
cmc
mov
inc
fcom
cmp
aaa
xor
jp
mov
push
adc
sub
mov
and
push
pop
inc
push
dec
retf
or
xchg
nop
imul
add
movs
rcr
jg
jb
dec
and
cmp
push
outs
unpckhps
xchg
fwait
add
data16
inc
push
pusha
pop
cs
mov
or
push
in
add
cs
in
xor
xor
popa
or
lods
(bad)
shl
mov
loope
mov
dec
arpl
jno
shr
test
add
popa
mov
je
es
dec
add
xchg
mov
inc
sbb
fwait
or
dec
pop
add
or
xchg
mov
or
add
or
mov
or
add
cmp
push
sub
fs
jns
dec
retf
mov
or
mov
cmovae
imul
adc
int3
jmp
pop
out
fsubr
add
or
ret
push
je
add
inc
or
inc
stos
sub
mov
cwde
jne
arpl
adc
or
loopne
pop
or
loope
adc
outs
or
inc
and
add
lods
jmp
push
lods
push
std
and
or
add
das
pop
push
xor
fild
push
mov
das
or
add
lods
inc
cli
mov
jmp
fstp
sub
cmp
push
fsubr
jo
sbb
test
mov
xchg
xor
or
add
ins
xchg
add
es
xchg
pusha
(bad)
adc
mov
ja
jg
addr16
nop
adc
add
inc
sub
pop
pop
dec
test
pop
pop
pop
pop
shr
xchg
icebp
and
sbb
xor
mov
add
enter
mov
dec
mov
(bad)
stc
xor
push
imul
sbb
test
cmp
repz
ret
or
add
loop
fdivr
push
nop
push
aas
or
sub
lds
push
mov
pop
pop
and
add
aas
test
cwde
jo
fild
ss
das
or
add
adc
and
cmp
add
and
dec
fwait
or
inc
or
push
fnstsw
shr
xchg
dec
mov
out
dec
ins
or
in
shl
or
dec
cmp
mov
fcom
add
mov
gs
aam
xchg
cmp
popa
ror
cmps
and
(bad)
xchg
add
sbb
or
cld
mov
fist
pop
data16
les
inc
dec
sub
add
jecxz
scas
xchg
inc
pop
xchg
popa
push
je
pop
mov
xor
jae
push
enter
or
ret
cdq
adc
adc
or
add
adc
lods
popf
stc
movs
mov
inc
aad
adc
jmp
shl
test
out
push
ror
call
push
pop
cmp
or
gs
inc
adc
lods
pusha
js
cmp
mul
sub
mov
inc
aas
js
sub
push
cmp
pop
mov
test
add
retf
sar
add
sbb
aam
fadd
mov
leave
cmp
jcxz
mov
pop
xor
push
dec
or
test
mov
loopne
adc
push
out
pop
(bad)
or
out
mov
and
sti
test
sbb
xchg
xchg
xchg
pop
add
fsub
and
in
gs
xchg
add
inc
sub
push
shl
sbb
push
aad
je
add
mov
xlat
xor
or
cmps
dec
push
iret
out
add
inc
xor
fucomip
enter
jno
push
dec
sub
sub
xchg
jb
ins
add
pop
fisttp
push
sbb
repz
shl
or
retf
lea
jno
mov
fsub
ja
outs
test
into
pop
dec
sbb
aam
xor
add
jns
and
pop
jmp
inc
jo
push
fnsave
sub
and
rcl
in
lods
push
and
aas
adc
test
adc
adc
add
stc
or
movs
adc
pop
and
push
adc
add
push
pop
js
es
movs
adc
add
push
(bad)
in
push
or
lods
in
mov
xchg
cmps
out
jge
shl
in
and
loopne
imul
imul
sbb
and
pop
xor
push
cmp
jbe
add
fcomip
test
popf
ror
adc
ret
mov
loopne
stos
sbb
int3
je
adc
ja
lock
cmp
mov
add
add
sar
aaa
inc
mov
dec
xor
adc
adc
sub
imul
xor
add
dec
jno
push
out
je
(bad)
jmp
repz
sbb
mov
add
test
lea
fdiv
shl
stc
push
sbb
dec
cmp
aaa
add
mov
mov
adc
push
mov
mov
xor
pop
or
add
pop
in
adc
jmp
mov
or
sbb
push
xor
sub
nop
mov
in
add
not
add
sub
adc
nop
push
adc
mov
lds
adc
cmp
add
add
sub
sub
cwde
push
cmp
or
call
fstp
add
cmp
or
jo
pop
pop
jns
add
loope
fwait
inc
sub
pop
adc
int3
(bad)
push
inc
loope
sti
add
xor
(bad)
pop
pop
adc
cld
mov
inc
shr
jns
pop
adc
popa
sub
or
add
xchg
sbb
mov
add
imul
lods
retf
add
mov
add
xchg
cmp
adc
aas
cdq
clc
hlt
pop
shr
add
retf
movs
lock
out
adc
jmp
inc
pop
push
movs
call
test
sub
and
sbb
and
lods
jae
and
mov
in
mov
push
xor
xchg
mov
call
loope
icebp
popa
loopne
loopne
xchg
sbb
repnz
das
fcom
aad
leave
rcr
hlt
popa
adc
imul
jne
cmp
test
retf
or
enter
call
mov
pop
mov
mov
and
xchg
mov
rcl
stos
sahf
and
aas
or
inc
pusha
hlt
lahf
mov
lea
cld
and
outs
or
mov
or
in
add
mov
and
adc
dec
jb
and
rcl
movs
lea
inc
sub
xor
adc
loopne
and
add
adc
inc
jno
cdq
mov
in
adc
ins
cmp
bound
inc
mov
popa
mov
adc
jno
js
xor
jns
sub
add
ins
push
rol
scas
mov
test
sbb
mov
pop
sar
fbstp
jno
shl
inc
test
lea
les
pop
fistp
in
push
or
shr
add
jbe
fdiv
call
dec
sub
add
inc
or
sub
xor
(bad)
call
inc
adc
(bad)
adc
inc
mov
scas
or
xchg
and
jbe
sbb
popa
(bad)
xchg
outs
loopne
dec
sbb
and
int3
push
mov
xchg
push
push
std
adc
cmps
and
mov
ret
xor
pop
or
sbb
scas
cmp
push
aaa
xor
adc
ja
mov
outs
in
jmp
cwde
aad
add
ins
lods
push
cmps
gs
push
rcl
push
xor
shr
or
xor
adc
lahf
add
cmp
push
jb
xchg
adc
and
xchg
cmp
or
add
pusha
je
test
or
fld
sub
imul
dec
sbb
ret
add
dec
and
push
add
xchg
xor
pop
daa
test
pusha
adc
fmul
jg
shl
and
shl
popf
adc
aas
test
jae
jno
add
sbb
mov
pop
out
push
(bad)
pop
mov
add
mov
sbb
mov
or
cmp
nop
adc
and
mov
or
mov
pop
adc
jecxz
jp
cli
inc
sbb
jb
out
out
mov
xchg
adc
fwait
retf
adc
xor
scas
lods
outs
in
add
in
popf
or
push
cmp
or
add
inc
adc
repnz
js
jns
jmp
push
and
in
xchg
dec
fadd
enter
cmp
sbb
ins
xor
fwait
jae
jae
jno
inc
or
pop
or
inc
fld
dec
mov
sbb
pop
dec
jo
fwait
sbb
add
pop
add
or
int3
inc
mov
pop
adc
and
xchg
jne
mov
and
gs
pop
or
sbb
into
sub
gs
inc
rol
xor
fild
sub
sbb
jne
(bad)
nop
push
fmul
add
out
or
adc
cmovs
mov
cmp
sbb
inc
cmp
push
xor
stos
pop
inc
sub
ins
adc
xchg
xchg
mov
mov
fsub
test
push
shr
iret
push
(bad)
adc
push
inc
cmc
xchg
xor
(bad)
call
(bad)
fnstcw
xlat
jge
mov
xchg
add
js
enter
adc
test
ret
gs
add
inc
imul
inc
inc
or
shl
ror
adc
stos
cwde
sub
adc
rcr
mov
dec
push
adc
dec
inc
add
test
jnp
xor
mov
add
mov
bound
dec
adc
aas
xchg
xchg
cmp
inc
lahf
jo
scas
sub
and
dec
mov
push
push
and
push
bound
pop
sbb
cmp
cs
push
pop
xchg
fs
jb
js
cmp
add
mov
enter
rcl
xchg
test
xor
push
int
shl
push
add
mov
mov
pushf
fild
or
pop
lds
mov
pop
fdivr
test
shl
inc
sbb
and
push
sub
rol
push
push
or
mov
or
aad
test
pop
push
jno
movs
xor
call
sub
or
test
(bad)
mov
and
punpckldq
sub
pop
pop
or
adc
(bad)
xor
inc
cmp
adc
pop
popa
cmps
xor
loope
pop
pop
imul
lods
(bad)
jge
lds
pop
xchg
xor
test
test
cmps
and
or
xor
test
dec
movs
and
adc
sbb
imul
jge
pop
and
(bad)
sbb
pop
pop
xchg
add
repz
add
push
mov
add
jne
aam
pop
or
jecxz
mov
add
sbb
aas
mov
ret
loopne
in
movs
mov
push
ret
jne
add
dec
jecxz
jg
sti
inc
xchg
mov
jno
imul
(bad)
in
cmp
push
jmp
adc
mov
hlt
ins
movs
push
or
mov
movs
inc
movs
iret
mov
es
ret
inc
cdq
lds
xor
push
xchg
jge
adc
xor
sbb
or
sbb
add
sub
das
xchg
in
push
or
mov
aad
pushf
pop
mov
mov
dec
cwde
sbb
inc
daa
mov
adc
pop
nop
pop
nop
stos
inc
sub
loopne
xor
pop
ds
xchg
sbb
jge
neg
inc
adc
or
cmp
dec
movs
adc
add
jl
dec
jl
or
adc
jg
pop
popf
data16
add
imul
sub
test
pusha
int
or
or
pushf
jo
jo
rcl
xchg
ins
popf
pusha
jo
jo
iret
push
dec
loopne
dec
mov
inc
fs
pusha
or
inc
xchg
mov
inc
ins
xchg
scas
add
(bad)
pop
out
cmp
(bad)
sbb
addr16
push
stc
push
mov
call
adc
ins
mov
xchg
dec
js
sub
adc
les
inc
fdivr
imul
popa
push
xor
(bad)
jae
adc
jnp
inc
mul
das
nop
xor
add
arpl
jmp
adc
add
adc
mov
shl
(bad)
sub
sti
jnp
rol
mov
dec
push
and
and
pop
inc
int
imul
(bad)
and
jnp
cmp
pusha
add
dec
pop
push
inc
mov
sbb
jo
adc
inc
rol
add
xor
leave
push
scas
sbb
dec
cmps
jno
stos
push
xor
inc
push
mov
adc
sbb
loop
push
fcom
inc
pusha
pusha
aad
inc
mov
push
cwde
cmp
sub
pop
sbb
sbb
jbe
test
pop
shr
push
add
jb
(bad)
aam
es
add
out
ror
out
sub
and
mov
jo
arpl
add
xor
jmp
adc
and
mov
jnp
in
sbb
push
cmp
popa
mov
sbb
dec
push
mov
les
popa
xor
and
mov
pusha
jmp
push
push
pop
mov
inc
stos
inc
popf
aas
add
dec
ret
mov
inc
loopne
and
jg
mov
inc
and
add
rol
test
inc
cwde
xchg
pushf
mul
(bad)
jmp
cmp
and
cdq
pop
mov
jne
call
mov
jg
dec
xor
cmps
sub
sub
xchg
xchg
out
add
test
pop
cli
pop
test
fcom
xchg
xor
jno
sbb
stos
or
adc
sbb
sub
sbb
sbb
int3
jno
mov
sub
(bad)
aam
add
or
ss
adc
test
les
inc
mov
mov
(bad)
shl
sti
add
sti
xchg
ins
sbb
ror
mov
test
psrad
test
aas
inc
(bad)
enter
and
(bad)
outs
cmp
inc
pop
nop
or
retf
push
or
aad
mov
mov
in
mov
add
push
shr
aam
add
add
inc
pop
iret
mov
adc
adc
scas
mov
movs
push
xchg
cmp
adc
add
adc
dec
pop
push
mov
setle
mov
adc
xchg
xchg
jl
mov
dec
or
inc
dec
add
int3
or
mov
aam
and
aaa
leave
rcl
pop
call
shl
stc
mov
sbb
cli
cmp
and
jo
add
add
call
and
xchg
mov
clts
mov
stos
enter
sar
adc
int3
cmps
jle
jno
adc
fisttp
fadd
pusha
shr
mov
mov
cmp
jg
cmp
add
jmp
das
data16
lds
arpl
aaa
mov
sbb
les
add
push
adc
test
call
adc
dec
mov
inc
add
pop
and
push
cmps
add
sub
ror
pop
test
or
or
adc
ds
dec
add
adc
aam
aas
lods
in
cwde
imul
mov
fcomp
movs
(bad)
std
inc
pop
cs
push
inc
or
test
iret
in
movs
bswap
or
or
dec
jmp
sub
in
push
and
mov
inc
aad
jecxz
cli
mov
mov
lds
xor
adc
test
push
lock
push
fs
xchg
add
sub
dec
or
mov
popa
js
rol
sub
clc
mov
(bad)
(bad)
jnp
ins
sbb
ret
pop
imul
jecxz
add
dec
xor
add
cmp
sar
jge
add
scas
test
mov
adc
add
aad
ins
in
adc
iret
and
jmp
movs
sbb
ins
mov
scas
xchg
or
inc
mov
inc
inc
sbb
stc
sub
popa
and
or
ss
sub
inc
and
fs
jecxz
adc
add
add
adc
sbb
adc
js
adc
inc
pop
or
daa
jl
je
jge
dec
or
pushf
jmp
push
push
sub
pop
pop
dec
(bad)
scas
and
mov
dec
xor
push
inc
inc
sbb
and
push
ins
dec
pusha
inc
sbb
ins
dec
xor
mov
call
ins
pop
cdq
clc
(bad)
aam
jg
sbb
pop
mov
sub
stos
das
mov
xchg
mov
push
adc
inc
lds
mov
cld
lahf
add
dec
addr16
std
std
and
mov
dec
add
or
mov
iret
push
pop
(bad)
inc
jmp
cwde
adc
mov
mov
jne
mov
add
ror
cmp
cmp
mov
dec
xchg
lods
lods
add
std
stc
cmp
inc
call
inc
sbb
xchg
lea
dec
jge
mov
dec
pop
mov
xchg
xchg
xchg
adc
lods
or
sub
(bad)
cmc
rdmsr
jo
fisttp
mov
lods
add
dec
in
cmp
(bad)
add
cwde
movnti
cmp
cli
pop
add
push
in
mov
push
cdq
retf
cmp
xor
xor
fldenv
test
push
xchg
push
or
pop
or
lods
fistp
addr16
cmps
push
test
out
call
test
adc
inc
mov
mov
fdiv
sub
push
gs
sub
enter
or
enter
xchg
add
std
add
mov
mov
xchg
dec
adc
test
fcom
popa
dec
test
cmp
mov
jb
ret
adc
popa
repnz
shl
mov
mov
stc
xchg
lea
dec
add
and
rcr
xchg
dec
xchg
cmp
(bad)
fadd
loope
mov
dec
pushf
fcom
inc
add
sub
je
ficom
pop
push
fimul
xor
les
xor
pop
sbb
pop
dec
jo
rcr
test
mov
xor
(bad)
repz
sbb
adc
push
sub
ucomiss
mov
add
fadd
imul
clc
(bad)
fsub
mov
mov
inc
sbb
enter
adc
push
inc
cmp
xor
xchg
les
mov
daa
adc
adc
lock
sub
ror
lods
pushf
xchg
jne
in
daa
ins
mov
adc
popa
or
sub
std
(bad)
jmp
xor
aam
sbb
imul
test
or
sbb
lods
dec
push
push
popa
cmp
aaa
dec
and
push
mov
popa
push
jmp
lea
mov
or
movs
and
out
addr16
push
les
xor
push
shr
sbb
fcom
mov
sub
adc
and
loopne
pop
ret
in
sbb
out
add
cmps
mov
aad
fwait
inc
jge
xchg
or
or
dec
pop
rcr
ins
sbb
movs
cdq
mov
mov
hlt
loop
ss
lahf
call
inc
cmps
dec
test
jns
sub
fist
sbb
inc
mov
add
in
inc
and
lds
jne
add
add
and
inc
(bad)
jmp
jne
pusha
xchg
add
pop
sub
xor
or
mov
lods
ret
inc
dec
mov
push
cmp
adc
xor
lahf
and
loopne
seto
push
dec
xchg
xchg
push
push
sbb
lahf
and
mov
push
aas
sbb
pop
mov
sub
popa
xchg
and
jne
add
xor
push
add
rol
in
dec
sub
or
mov
in
sub
or
push
add
add
daa
or
movs
or
cmps
es
cmp
pop
mov
cmp
jae
and
or
inc
or
mov
sub
add
ins
push
pop
add
and
xchg
inc
or
sbb
inc
and
push
inc
pop
or
daa
inc
push
loopne
sbb
push
rcr
wbinvd
test
dec
inc
es
mov
and
pop
cmp
pop
sub
aas
movs
arpl
fbld
sbb
pop
data16
popf
lock
sbb
mov
inc
cmp
pusha
clc
fisttp
mov
adc
pop
retf
pop
inc
mov
push
xor
adc
sbb
pop
push
sub
add
rcl
xor
xor
add
adc
or
adc
fmul
add
cmc
test
movs
inc
test
sbb
adc
and
add
push
sub
mov
push
and
ja
cmp
inc
add
test
jl
inc
push
sub
add
cmp
mov
in
inc
push
sbb
jo
cmps
int
and
jne
bound
add
pop
test
inc
sub
test
adc
jo
cmp
jns
inc
ins
add
sbb
hlt
fnstsw
push
pop
lds
or
int
mov
iret
xchg
or
shl
or
dec
dec
fsub
dec
push
cmp
mov
and
xchg
and
dec
cmp
and
mov
je
sbb
or
or
lock
adc
fwait
inc
cmp
movs
push
and
adc
(bad)
add
push
sub
lock
or
sbb
pusha
pop
xor
or
push
and
cmp
sbb
bound
mov
xchg
xchg
mov
rcl
inc
dec
sbb
mov
mov
or
and
push
or
rol
cs
or
add
popa
js
add
sub
dec
int3
or
lods
add
push
adc
dec
int3
pop
inc
inc
adc
jp
mov
les
dec
add
xchg
add
xor
add
sub
push
aam
hlt
xor
movs
out
mov
inc
add
xchg
mov
push
sar
popa
and
push
and
movs
or
xchg
and
jo
adc
bound
call
lahf
(bad)
mov
enter
xchg
sbb
das
sbb
shr
push
adc
test
push
xor
mov
xlat
movs
inc
int3
inc
push
push
jo
rol
imul
mov
jp
ja
mov
sar
shl
je
mov
and
adc
pop
add
iret
call
xor
inc
push
jge
push
loope
lods
jg
add
sbb
cmc
add
lods
and
mov
mov
ror
enter
sub
sub
mov
jg
xor
and
inc
stos
xchg
pop
jg
push
jg
mov
cmp
or
xor
ins
xchg
jecxz
xchg
mov
pop
stos
ins
stos
dec
pop
cld
ins
scas
inc
mov
fstp
movs
mov
sbb
adc
push
cli
add
inc
lods
fstp
jae
jbe
or
ins
add
or
pop
push
sub
bound
cwde
push
xchg
mov
pushf
add
in
mov
pop
nop
cwde
jb
iret
add
fstp
pushf
stc
add
mov
mov
cmp
mov
add
pop
xchg
les
out
int3
ins
rol
dec
sub
xor
inc
cmp
push
add
add
rol
fs
pop
cmps
test
push
arpl
les
sbb
or
mov
test
pop
adc
mov
pop
or
dec
push
pop
add
call
ror
add
mov
mov
shl
sub
call
push
xor
xor
and
test
xchg
in
rol
mov
adc
out
stos
dec
pop
movs
call
add
ja
and
cmp
je
in
mov
inc
pop
out
jb
mov
fisttp
idiv
jmp
jnp
adc
cmps
sbb
icebp
push
inc
(bad)
mov
jp
sub
mov
or
inc
xor
addr16
or
adc
mov
or
imul
loop
loop
mov
push
lds
or
fwait
adc
add
jne
test
adc
mov
cwde
out
test
jns
add
cmp
sub
imul
push
adc
cld
and
and
xchg
sub
adc
(bad)
fistp
adc
add
xor
icebp
xchg
add
jmp
xchg
sub
add
(bad)
aaa
std
outs
(bad)
add
xor
push
pop
and
aas
ins
sbb
ret
jmp
in
mov
or
pusha
out
cdq
popa
jecxz
fistp
into
inc
add
push
popf
lock
mov
scas
mov
jns
cmp
pop
and
push
lock
and
mov
shl
ins
fs
or
enter
call
call
cmps
call
adc
pop
adc
and
daa
adc
add
sub
inc
jae
sahf
nop
push
lods
mov
loope
or
in
mov
aas
push
add
sbb
adc
inc
test
scas
add
cmp
mov
fidivr
js
test
add
push
fwait
enter
lea
mov
push
sbb
inc
jg
(bad)
popa
jmp
ins
shl
or
mov
test
mov
test
adc
aad
add
dec
add
jbe
mov
test
imul
rcr
test
xlat
xor
push
push
(bad)
ja
movlps
call
add
lahf
add
adc
dec
mov
adc
fcomp
pop
add
inc
sub
cmp
pop
add
push
lahf
(bad)
lock
addr16
stos
mov
aad
add
aaa
jnp
mov
jp
add
adc
mov
jnp
and
add
fcom
outs
imul
jge
sub
rcl
adc
push
xchg
mov
xlat
add
or
ror
and
xor
jne
jns
mov
sbb
or
sar
xor
imul
mov
daa
sbb
mov
or
mov
fcom
adc
push
mov
mov
xchg
lahf
add
jae
adc
or
test
xor
cmps
sbb
or
(bad)
lea
push
outs
adc
dec
in
mov
pusha
push
mov
sub
mov
push
pop
jmp
dec
add
nop
mov
retf
dec
nop
push
daa
inc
inc
aas
mov
mov
add
push
push
sti
test
dec
pop
dec
or
enter
je
fbstp
clc
mov
push
nop
icebp
nop
mov
adc
jle
push
push
cmp
sbb
fild
add
dec
jne
jns
mov
jb
dec
mov
jl
(bad)
xor
sbb
test
out
(bad)
adc
hlt
cli
mov
les
arpl
push
sub
adc
cmp
iret
add
lock
adc
xor
gs
or
and
outs
leave
popa
addr16
jl
inc
scas
je
jmp
jmp
jge
or
pop
mov
aad
pop
jg
mov
dec
jecxz
jbe
jg
gs
sub
sub
ret
shld
add
rol
jle
fld
or
adc
add
add
pop
xor
in
movs
inc
jne
xchg
add
sub
and
add
jp
sub
add
jecxz
aaa
sub
jmp
gs
pop
push
sub
xor
and
mov
popa
push
mov
inc
repz
inc
add
jg
imul
repnz
or
and
jmp
sub
pusha
sub
stc
sub
or
mov
xor
test
pusha
mov
lahf
xchg
xor
and
les
js
mov
pop
sbb
push
fadd
cmps
dec
inc
pop
in
push
test
imul
inc
add
retf
xchg
pop
dec
push
(bad)
cmp
sub
jmp
xor
pop
cmp
inc
mov
sbb
mov
push
inc
push
mov
les
mov
mov
stos
push
popa
or
mov
scas
add
push
adc
aaa
xchg
xchg
pop
fistp
adc
and
and
pop
xchg
call
push
add
dec
pushf
pop
xchg
ss
push
xchg
or
mov
jae
popa
std
mov
xchg
xor
loopne
mov
mov
push
dec
les
adc
pop
xchg
jne
mov
sbb
cmp
lods
pop
int3
xchg
push
lods
lods
lods
pop
ins
pop
xchg
jge
inc
or
int
mov
fmul
mov
ss
nop
and
add
jo
jg
jo
mov
fisttp
adc
jnp
jo
cmp
mov
fcomp
xchg
inc
and
test
jge
push
mov
loopne
and
mov
jecxz
fisttp
push
and
mov
push
ins
adc
add
push
fild
add
aad
ror
rol
xor
ret
inc
(bad)
mov
rol
jno
mov
sub
push
aas
ds
(bad)
aas
loopne
mov
or
or
xchg
jnp
inc
lea
test
add
adc
int3
call
add
push
out
inc
jp
aas
add
and
push
inc
and
out
mov
inc
add
pop
daa
mov
xchg
gs
pusha
adc
add
mov
adc
dec
pop
mov
add
mov
xor
xchg
bound
loope
aas
shr
and
adc
stos
dec
jg
mov
adc
lahf
inc
push
mov
mov
daa
xchg
jne
adc
jns
push
or
in
movzx
pop
xor
fcom
or
inc
loopne
add
add
data16
lock
je
daa
fucomi
je
or
shr
sbb
ins
add
stos
out
mov
call
cmp
or
push
or
rol
sub
add
test
mov
sub
xor
pop
retf
jmp
mov
inc
fistp
ret
ret
lahf
or
dec
push
push
aam
cld
test
or
and
inc
jb
clc
xor
inc
mov
push
or
pop
pop
jmp
pop
and
or
sub
lods
dec
push
lock
cli
shl
mov
sti
sub
icebp
xor
mov
(bad)
xor
lea
and
inc
adc
adc
pop
add
adc
mov
test
mov
mov
sbb
sahf
loope
push
push
cmps
adc
mov
or
cmps
and
test
dec
or
jg
mov
push
sub
sub
mov
pusha
movs
or
pushf
pop
push
imul
call
pop
mov
add
std
and
and
ins
test
cmp
inc
adc
add
pop
test
pop
and
xchg
sub
xor
xchg
nop
iret
jmp
std
push
fs
xchg
add
loop
nop
shl
or
pop
dec
xchg
inc
pop
inc
loopne
mov
jmp
fisttp
call
jo
add
(bad)
addr16
mov
push
aaa
or
lea
(bad)
fnstenv
mov
call
fisub
cmp
jmp
lds
and
dec
xor
push
jnp
hlt
fs
(bad)
mov
mov
nop
mov
ret
loopne
adc
pop
pushf
push
sub
inc
push
or
add
push
sub
outs
pop
loop
push
mov
inc
or
add
in
fs
and
pop
add
pusha
arpl
cwde
and
outs
mov
push
nop
mov
into
jmp
push
pop
sbb
add
adc
pop
test
test
xor
sub
or
xchg
test
push
test
dec
(bad)
xchg
adc
jno
jmp
loope
mov
sub
cmp
jne
mov
and
jmp
(bad)
sub
clc
cmp
mov
loopne
test
mov
sti
mov
mov
cmp
pop
jmp
inc
jge
aas
pop
imul
xchg
xor
mov
push
nop
xchg
adc
inc
jecxz
and
xor
aas
nop
cli
pop
sar
jmp
jne
add
je
mov
nop
jns
rcl
sbb
cmp
adc
ret
and
add
push
adc
pop
nop
or
mov
inc
pusha
mov
cdq
and
or
nop
jp
mov
xor
aam
jo
test
inc
and
and
adc
nop
pop
pop
or
or
into
es
or
add
or
push
ret
in
sbb
mov
sbb
fld
pushf
sub
loopne
sets
inc
arpl
or
mov
les
movs
inc
dec
imul
jno
lods
cmps
call
mov
or
nop
and
sti
mov
or
pop
shl
cmps
movs
mov
and
lods
xchg
lods
xchg
jmp
mov
pushf
push
je
mov
mov
mov
les
mov
jp
aaa
test
lods
cli
ins
mov
xchg
cwde
xchg
loopne
test
push
adc
inc
or
ret
pop
nop
push
push
xor
lods
repz
pushf
sbb
cmp
pusha
jmp
or
ins
xor
pop
push
retf
push
jp
jne
mov
mov
(bad)
and
mov
sbb
xor
mov
inc
fdivr
out
adc
mov
cmp
or
add
lock
push
sbb
jns
jo
adc
or
mov
and
sbb
aaa
cmp
mov
inc
jno
mov
mov
push
mov
das
mov
add
and
(bad)
shl
xor
arpl
xor
dec
or
mov
jp
rol
cmps
xor
push
adc
jne
jge
add
and
jb
push
(bad)
out
xor
mov
or
(bad)
popa
push
adc
or
inc
dec
sbb
fst
inc
sub
pop
lods
or
add
jmp
or
icebp
add
test
and
and
push
fmul
xchg
movs
sub
mov
mov
mov
or
inc
iret
push
and
jne
mov
or
test
mov
imul
push
mov
inc
sub
bound
push
jg
test
adc
lahf
dec
(bad)
pop
in
lahf
adc
out
and
repz
add
push
add
repnz
sahf
push
add
mov
or
cs
push
repnz
sahf
retf
sbb
mov
sub
iret
in
mov
retf
jae
cmp
xchg
out
inc
pushf
dec
mov
mov
lods
pop
shl
popa
mov
ins
sahf
retf
jae
adc
imul
jno
jg
iret
in
cmp
int3
mov
xchg
retf
jae
cs
fcomp
fsub
dec
iret
in
cmp
cmps
in
call
cs
mov
mov
hlt
sar
cld
repnz
call
fistp
jecxz
in
jns
iret
in
adc
sbb
sub
and
add
retf
jae
pop
sub
repnz
xor
in
cmp
cmp
inc
xor
jae
cs
aaa
dec
cmp
repnz
sahf
dec
cmp
mov
pop
pop
pop
jae
cs
pusha
popa
fs
outs
ins
jne
jnp
cmp
out
jg
test
iret
in
adc
jae
mov
xchg
out
scas
xchg
mov
mov
iret
in
pushf
mov
retf
jae
leave
test
lods
iret
addr16
pop
pop
mov
adc
iret
mov
repnz
sahf
retf
repz
test
out
or
call
or
cmp
out
sbb
iret
loop
mov
or
loop
pop
sahf
call
jns
mov
pop
adc
pop
adc
push
cs
jae
pop
add
pop
add
retf
jae
or
imul
adc
sbb
in
cmp
sbb
and
and
sub
sub
xor
xchg
stos
cmp
cs
inc
lds
repnz
sahf
retf
xlat
dec
fst
mov
out
out
pop
jl
iret
in
pusha
stc
add
cs
in
call
add
retf
jae
sbb
xchg
out
pop
jl
xor
iret
in
cmp
mov
jns
nop
push
xchg
pop
repz
pop
sahf
cwde
pop
pushf
or
mov
ins
movs
jno
jae
sahf
iret
loop
or
mov
mov
xchg
out
(bad)
mov
out
jl
shr
jl
iret
adc
mov
xchg
(bad)
aam
fcom
mov
jecxz
loopne
in
cs
in
call
iret
in
adc
sti
hlt
std
clc
loopne
jge
pop
add
adc
add
cmp
out
and
add
or
cs
in
or
adc
adc
retf
jae
sub
xchg
out
pop
and
dec
sub
in
cmp
sub
xor
jae
cs
cmp
repnz
sahf
cmp
inc
mov
cmp
xchg
dec
popf
dec
mov
push
test
pop
sahf
retf
mov
mov
int
iret
ins
jns
iret
in
jo
je
pop
sahf
retf
jae
std
jl
sbb
call
or
pop
mov
nop
adc
cmp
cwde
iret
adc
adc
cmp
out
push
lods
push
mov
xchg
out
xchg
adc
jae
mov
(bad)
out
jl
jg
enter
mov
lahf
aam
jae
cs
fsubr
pop
sahf
retf
mov
mov
xchg
out
retf
lock
adc
sahf
iret
loope
sar
mov
repz
adc
sti
clc
pop
sahf
or
or
push
call
repnz
sahf
retf
or
mov
pop
and
and
cs
in
sub
sub
pop
sahf
retf
jae
inc
xor
cmp
out
dec
cmp
inc
push
cs
in
inc
push
dec
pop
dec
sahf
retf
jae
gs
jns
jg
out
pop
pop
sbb
in
cmp
mov
jns
ins
lods
jo
out
pop
sahf
je
js
jl
mov
rol
mov
mov
nop
jns
xchg
not
out
jecxz
pushf
or
call
adc
adc
jae
cs
mov
loope
pop
sahf
mov
repnz
sahf
iret
imul
push
enter
xchg
out
ins
shl
cmp
out
xchg
adc
mov
lea
jg
in
call
mov
push
adc
jae
cmp
ret
hlt
leave
clc
imul
xchg
cmc
jle
add
xchg
out
fisttp
loope
jmp
iret
in
adc
adc
sbb
in
jl
or
adc
and
and
sub
out
pop
sahf
sub
xor
xor
mov
aas
cmp
jae
cs
inc
push
inc
push
dec
repnz
sahf
retf
pop
dec
pop
push
pop
mov
imul
in
pusha
fwait
fs
pop
sahf
retf
jae
movs
ins
lods
jo
xchg
out
mov
lahf
ret
in
jl
sub
out
mov
adc
nop
out
xchg
cmc
pop
sbb
pushf
xchg
or
xchg
jae
adc
movs
sbb
jns
adc
pop
sahf
mov
mov
cmp
inc
ror
jo
cs
enter
sar
ret
out
adc
xchg
adc
imul
adc
ja
iret
in
cmp
call
stc
sbb
lock
adc
mov
clc
test
mul
bnd
push
adc
or
mov
jmp
out
jae
cs
adc
sbb
sbb
pop
lahf
retf
std
and
or
adc
pop
sahf
retf
jae
and
xor
out
cmp
in
cmp
inc
popa
inc
sahf
retf
jae
arpl
dec
outs
xchg
out
pop
push
jne
jnp
iret
in
cmp
pop
and
mov
out
pop
sahf
ins
xchg
jo
je
mov
test
cs
xor
sahf
retf
ror
repz
xchg
out
in
mov
div
mov
adc
mov
in
cmp
mov
mov
cs
repnz
sahf
les
enter
jl
xchg
push
shl
adc
pop
jl
xchg
out
gs
adc
sahf
retf
repz
(bad)
out
cmp
adc
jg
jae
cs
hlt
fwait
clc
mov
jns
aad
mov
add
pop
sahf
retf
jae
iret
or
adc
out
loope
jmp
in
sbb
and
or
iret
in
mov
sub
retf
jae
xor
xor
out
pop
sahf
cmp
pop
inc
in
cmp
pop
inc
popa
dec
ins
jae
cs
dec
jae
ja
repnz
sahf
retf
sbb
xchg
mov
xchg
fs
push
mov
mov
mov
je
js
jl
xchg
out
jecxz
in
jmp
iret
in
mov
mov
nop
div
stc
sbb
adc
mov
push
adc
cs
movs
pop
test
lods
repnz
sahf
retf
sub
cmp
out
aas
mov
iret
in
les
jns
sahf
retf
jae
adc
out
xchg
mov
lea
iret
in
loopne
in
call
mov
mov
jns
adc
leave
clc
int
daa
pop
sahf
cld
rol
clc
adc
retf
jae
fisttp
in
out
out
pop
adc
adc
sbb
(bad)
out
clc
(bad)
(bad)
call
push
call
pop
xchg
out
pop
and
sub
sub
in
cmp
xor
xor
retf
jae
cmp
cmp
out
pop
sahf
inc
push
inc
pop
dec
in
cmp
pop
dec
imul
jns
iret
push
jne
jge
repnz
sahf
retf
xchg
fs
mov
fwait
ins
mov
jns
iret
in
je
js
ds
jae
rol
in
sbb
adc
jae
cs
stc
xchg
pop
pshufw
call
or
out
adc
retf
jae
xor
out
inc
mov
ret
in
rcl
adc
ret
in
cmp
int3
rcl
cmp
adc
jg
inc
adc
mov
cs
in
call
sahf
retf
jae
mov
mov
cmp
cld
rol
stc
jns
iret
out
adc
or
pop
sahf
retf
jae
sti
adc
adc
retf
sti
clc
add
call
nop
xchg
out
pop
and
and
sub
in
cmp
sub
xor
xor
cmp
sbb
iret
in
adc
inc
jae
sahf
retf
jae
jns
jnp
test
xchg
iret
in
cmp
pop
popf
pusha
mov
movs
push
sahf
ins
mov
mov
xchg
sar
out
jns
iret
xor
xrelease
mov
cs
in
xchg
adc
out
jns
mov
retf
jae
cs
lods
pop
loope
pop
sahf
mov
mov
mov
imul
outs
rol
stc
cs
(bad)
loope
pop
sahf
int3
fwait
shl
iret
das
adc
cmps
fsubr
loopne
in
call
shr
xlat
lock
xchg
out
clc
adc
fwait
adc
cmc
cld
ds
jle
scas
adc
cli
repnz
cmp
out
adc
cs
in
adc
adc
sbb
sbb
and
out
pop
and
sub
iret
in
cmp
xor
jae
jae
cmp
jge
repnz
sahf
inc
pop
in
cmp
scas
dec
mov
mov
jns
iret
push
mov
pop
sahf
retf
shl
sar
fild
iret
out
icebp
pop
adc
inc
adc
retf
jae
cs
sub
pop
adc
sahf
retf
inc
nop
dec
xchg
dec
mov
push
pushf
pop
mov
movs
imul
xor
cs
in
rcl
jo
lahf
int3
xchg
adc
mov
aam
fcom
repz
fchs
push
adc
repnz
sahf
retf
jmp
in
in
repz
stc
hlt
(bad)
clc
test
call
and
sti
repnz
sahf
iret
push
adc
or
dec
adc
repnz
sahf
adc
sbb
in
cmp
outs
and
jne
jnp
mov
sub
mov
lahf
xor
jae
cs
cmp
pop
sahf
retf
mov
mov
xchg
out
jecxz
out
pop
adc
add
cs
in
pop
adc
fs
retf
jae
pop
push
sub
je
retf
jae
aaa
js
jl
xchg
out
pop
add
mov
in
cmp
mov
addr16
sbb
xchg
imul
jge
sub
gs
cmp
adc
cs
lods
xchg
mov
mov
pop
sahf
retf
mov
mov
xchg
out
(bad)
enter
in
int3
not
pop
push
es
jge
adc
cmp
out
ins
(bad)
fcom
loopne
cs
in
in
call
clc
sbb
adc
fwait
adc
jns
push
xchg
cmp
jg
cld
scas
stc
mov
sub
add
cs
in
or
ins
pop
sahf
retf
jae
outs
adc
sbb
out
xchg
sbb
and
and
sub
jns
xor
repnz
cmp
cmp
inc
iret
in
cmp
inc
fisttp
and
cs
in
in
push
outs
jmp
push
in
pop
mul
jae
cs
stc
pusha
or
jae
cs
call
punpckhbw
ins
repnz
sahf
retf
daa
jo
je
mov
pop
jl
cmp
in
test
lea
jae
xchg
nop
fwait
xchg
sahf
retf
repz
cwde
movs
pushf
mov
out
pop
mov
iret
in
cmp
lods
retf
mov
in
sbb
mov
adc
iret
mov
jge
mov
pop
sbb
jns
iret
in
adc
sbb
retf
jae
aaa
fdivr
loopne
xchg
out
inc
in
call
mov
addr16
out
mov
adc
out
rcl
jge
jg
iret
imul
mov
jae
cs
adc
adc
sbb
xchg
mov
mov
add
enter
cs
in
xor
xor
cmp
cmp
inc
jae
mov
cmc
dec
jns
lahf
retf
std
dec
adc
pop
sahf
retf
jae
xor
pop
add
out
inc
pusha
dec
out
jl
pusha
push
adc
ins
jl
add
je
xchg
out
xchg
js
jl
cs
in
and
jae
stos
mov
cmp
adc
sahf
pushf
(bad)
lahf
iret
retf
adc
add
mov
mov
mov
and
in
les
enter
retf
jae
aas
ror
das
retf
jae
ds
imul
sahf
loopne
in
call
xchg
adc
ret
out
cmp
hlt
pop
adc
das
call
adc
loope
push
adc
cs
or
or
adc
pop
sahf
retf
aad
xlat
sbb
sahf
out
or
(bad)
adc
sti
loope
inc
pop
push
call
retf
sti
clc
add
add
out
pop
sahf
xor
mov
xchg
xor
cmp
out
cmp
inc
inc
dec
inc
cs
in
dec
dec
push
push
push
sahf
retf
jae
pop
pop
gs
imul
fs
jl
adc
ins
xchg
bnd
les
mov
mov
lahf
ret
in
test
adc
mov
xchg
iret
in
jl
sbb
adc
pushf
sbb
jae
mov
repnz
sahf
test
lods
xor
cmp
jl
lahf
ret
mov
adc
pop
retf
repz
adc
xor
inc
lea
jae
cs
aam
fsub
retf
movs
loopne
in
pop
sahf
iret
jecxz
pop
adc
loope
or
jns
adc
stc
clc
repz
inc
sbb
inc
loopne
hlt
and
push
and
cmp
add
cmp
cmp
mov
aas
adc
sbb
push
jae
cs
and
arpl
add
retf
imul
cwde
jne
xor
cmp
ret
cmp
repnz
sahf
iret
test
inc
xchg
dec
cdq
mov
lahf
push
movs
push
jns
iret
in
pop
mov
mov
sahf
retf
jae
lds
cmp
out
fld
cmc
scas
mov
mov
push
out
dec
test
(bad)
inc
or
test
mov
mov
retf
retf
xchg
das
cwde
cmp
retf
retf
retf
retf
movs
dec
test
lods
jno
mov
retf
retf
retf
mov
mov
lods
retf
retf
retf
retf
les
rol
into
retf
retf
retf
aam
fcomp
fsub
loopne
fnsave
rol
lea
lock
(bad)
jg
push
add
adc
mov
fadd
xchg
aam
outs
push
cmp
arpl
(bad)
and
sbb
or
xor
iret
or
rcr
cmp
and
bound
xchg
fistp
jp
cmp
and
pop
adc
lock
add
cdq
inc
or
pop
adc
(bad)
mov
inc
sbb
add
rcr
inc
pop
outs
out
stos
pop
jbe
xchg
xchg
dec
aaa
xchg
sbb
test
jge
loopne
mov
mov
and
in
push
inc
lods
mov
adc
dec
mov
push
sub
xchg
pop
adc
pop
cmp
cmp
lock
mov
adc
mov
jl
add
mov
xchg
jno
or
in
mov
xchg
adc
stos
xor
inc
imul
fcomp
(bad)
xor
inc
fmul
cmp
add
and
cs
mov
fucomp
jno
mov
imul
mov
jmp
add
xchg
xchg
add
xchg
shr
mov
sbb
ret
xor
movs
pushf
jo
ret
inc
add
or
add
movs
cwde
inc
sub
add
and
js
xchg
std
pop
sub
popf
push
ret
or
xor
or
sub
push
jecxz
sbb
sbb
inc
add
les
xchg
jno
push
imul
mov
(bad)
jne
leave
cli
js
cmc
push
shl
mov
mov
jo
mov
pop
mov
xor
push
mov
push
mov
mov
ins
mov
cdq
jb
pop
mov
ret
ins
mov
shl
adc
sbb
fucomip
add
push
cld
inc
loopne
or
lahf
popa
dec
xor
push
add
jmp
ror
mul
xchg
dec
jmp
add
cmp
cdq
pusha
adc
test
xchg
ror
test
and
repnz
xchg
jo
push
pop
ins
inc
and
jbe
lds
in
cmp
push
and
sub
scas
mov
mov
cmp
add
mov
xor
outs
add
imul
lea
adc
push
sbb
adc
or
and
xchg
test
mov
adc
mov
push
sub
dec
add
sar
movs
cmp
xchg
ror
je
add
jmp
sbb
dec
mov
or
nop
sbb
(bad)
out
or
jl
arpl
inc
into
add
(bad)
shr
mov
(bad)
xor
ret
sub
mov
rol
out
mov
push
push
push
lods
mov
fadd
add
sbb
mov
lea
das
or
cwde
dec
add
adc
pop
cmps
mov
fs
pop
inc
push
or
call
fisttp
mov
(bad)
ret
add
mov
retf
mov
ins
(bad)
leave
shl
mov
mov
in
iret
sub
inc
xor
or
shl
adc
push
sub
dec
and
push
dec
int
mov
adc
shl
inc
sub
gs
and
mov
in
movs
push
xlat
and
int
enter
or
add
xchg
sbb
or
add
push
xchg
rcl
inc
push
cwde
push
dec
mov
mov
ret
or
cdq
sub
dec
dec
add
push
adc
test
gs
xchg
and
sub
pop
or
sub
jbe
imul
xor
das
adc
mov
cmp
jp
test
jmp
retf
mov
push
mov
xchg
adc
mov
fwait
inc
or
xor
push
ins
sbb
sub
adc
mov
xor
mov
test
inc
or
mov
pop
add
ss
stc
fild
pop
sbb
add
cmc
xor
je
and
cmps
dec
jmp
test
adc
jne
cmc
cmp
inc
dec
or
add
je
cmp
or
add
inc
dec
xchg
jns
sbb
adc
clc
sbb
push
xor
mov
inc
fiadd
push
jl
test
pop
(bad)
mov
daa
xchg
xor
cmp
jbe
jb
mov
rcr
mov
add
sar
and
daa
and
mov
mov
mov
inc
or
add
xor
sub
mov
mov
punpckhdq
add
push
imul
imul
int3
xor
push
movs
repnz
hlt
outs
push
cmp
pop
shr
mov
enter
pop
add
add
add
mov
and
adc
inc
add
cmp
aas
mov
lock
adc
sub
adc
pop
adc
sub
std
scas
rol
popf
add
xchg
cmp
add
jo
or
test
inc
cs
lods
and
cwde
mov
xor
push
ja
adc
pop
pop
cmp
ins
aam
xor
and
or
ja
fcomp
and
or
stos
cwde
in
mov
dec
or
add
mov
imul
movs
mov
push
inc
or
or
cmp
and
adc
mov
adc
pop
(bad)
(bad)
test
mov
adc
adc
pusha
dec
cmp
pop
int3
adc
add
fdiv
push
mov
inc
daa
pop
sub
cs
sbb
addr16
dec
rcr
cmps
loopne
sbb
scas
pop
pop
mov
lods
xor
xchg
xor
and
or
movs
jmp
and
pusha
nop
scas
or
jmp
mov
loopne
mov
xor
clc
or
dec
push
mov
mov
test
xor
jo
mov
and
add
xor
and
jmp
sahf
add
imul
ret
jae
or
or
push
popa
mov
and
test
adc
test
shr
add
pop
and
mov
mov
icebp
xchg
push
push
ss
mov
lahf
push
adc
cmp
or
loopne
inc
aam
push
and
dec
dec
xchg
cmp
lock
outs
cmp
add
dec
jb
enter
xchg
dec
test
push
push
mov
xchg
or
pop
or
or
xchg
or
pushf
push
xchg
or
xchg
in
mov
call
adc
xor
ret
push
xor
xchg
or
pop
pop
lods
or
xchg
or
movs
sbb
sbb
and
ror
sbb
or
push
mov
or
and
sbb
xchg
and
in
push
test
push
dec
inc
retf
(bad)
pusha
sub
or
and
or
test
es
push
sub
nop
or
and
sbb
cwde
les
cdq
inc
movaps
movs
add
ficomp
inc
lea
or
outs
sar
pop
pop
push
add
and
arpl
and
call
cwde
fisttp
aas
and
and
imul
adc
push
adc
add
and
neg
nop
xchg
cwde
inc
sbb
sub
fwait
add
dec
sbb
sub
cmp
mov
pop
pop
sbb
sub
lods
dec
dec
mov
adc
adc
adc
call
(bad)
adc
nop
stos
ins
push
pop
or
push
mov
ins
jns
cmps
mov
je
or
xor
(bad)
push
or
xor
sub
add
pop
ret
enter
int
jo
add
fadd
xor
mov
xor
inc
or
mov
sub
(bad)
dec
and
ror
jne
jne
xchg
ja
gs
leave
add
sub
push
inc
loope
jmp
lahf
lock
or
int3
sbb
pop
inc
mov
xchg
sub
lea
sub
mov
mov
lock
xchg
test
jmp
sbb
rcl
push
lock
add
dec
(bad)
mov
cmp
adc
and
xchg
adc
retf
and
sub
mov
imul
or
loopne
xor
pop
popa
nop
mov
aaa
add
call
arpl
push
mov
and
outs
add
adc
inc
lds
int3
xchg
sbb
add
dec
mov
mov
movs
ja
mov
mov
scas
adc
ror
sub
fstp
and
mov
aad
cs
pop
and
mov
xlat
popf
xchg
or
mov
fwait
xchg
push
nop
push
mov
xor
and
sub
popf
ret
inc
cmp
imul
lea
push
shl
xchg
or
cli
cli
lods
push
xchg
mov
movs
xchg
pop
lea
and
jmp
adc
sbb
inc
and
and
and
lock
push
dec
inc
or
call
or
fs
aam
ss
dec
enter
sub
xchg
sbb
or
sub
call
inc
cs
xchg
mov
and
inc
xor
adc
or
cmovae
sbb
xor
out
aas
push
push
sti
mov
in
pusha
stos
ss
mov
and
sbb
or
cwde
lea
sub
loope
das
dec
jg
dec
ret
inc
add
push
mov
adc
add
aam
xchg
xchg
sub
dec
or
xchg
ret
push
dec
inc
setl
in
or
movs
lock
cmp
add
idiv
xor
add
or
inc
in
je
in
sub
cmp
xor
mov
adc
lea
cmp
push
push
xchg
shrd
pop
shr
add
dec
sbb
push
ret
push
mov
sub
inc
xor
adc
pop
push
je
sub
sub
pop
pop
sub
jmp
in
mov
lahf
adc
lds
test
xor
sbb
or
and
dec
(bad)
cld
in
and
xor
leave
shl
aam
ret
adc
push
mov
pop
mov
sub
test
inc
and
mov
jmp
xor
jne
enter
dec
lea
dec
xchg
lods
push
ret
xchg
pop
ret
inc
xor
leave
sub
mov
xor
leave
int
add
xchg
retf
in
aam
in
(bad)
repnz
ss
lods
push
and
jno
in
mov
pop
daa
cld
xchg
push
and
or
mov
sbb
js
jp
lods
push
lods
test
mov
mov
pop
add
loop
cmps
mov
inc
or
repz
pop
mov
jb
adc
or
jg
std
sub
or
jmp
sub
sbb
pop
sbb
retf
in
movs
movs
in
int
dec
sub
ins
dec
or
jb
in
push
adc
xchg
xchg
retf
gs
sub
push
mov
sbb
adc
inc
daa
pop
mov
xchg
lahf
lea
inc
xor
fs
sti
icebp
lods
loope
adc
outs
mov
icebp
pop
jo
adc
mov
push
adc
repnz
(bad)
or
xor
or
mov
js
add
pop
jb
je
jo
pop
dec
xor
inc
pop
std
jo
jo
add
adc
ror
test
pusha
repz
fstp
adc
inc
addr16
test
movs
inc
adc
push
adc
xor
loopne
push
inc
aad
pop
ja
lock
push
loope
and
inc
cdq
sbb
jno
sub
ins
ss
dec
in
imul
cdq
cld
std
inc
(bad)
in
push
clc
cs
dec
cs
pusha
pusha
pop
jl
ss
cmp
push
push
mov
pop
pop
push
cmp
stc
sahf
ins
(bad)
push
dec
push
xor
mov
pop
inc
or
cmps
fwait
cld
lods
cmps
rol
nop
xor
xor
jg
mov
add
add
sbb
add
jne
xchg
push
xlat
scas
std
xor
cmp
ja
inc
cmp
push
aas
inc
aaa
mov
test
pop
(bad)
imul
ret
sbb
test
fsubr
jecxz
mov
fild
inc
pop
push
shl
repnz
das
inc
leave
in
sub
in
mov
push
xchg
retf
and
inc
cmp
dec
inc
and
xchg
and
cmp
xor
or
loop
inc
or
and
cmp
or
in
leave
cmp
sub
and
cmp
popa
push
pop
dec
or
push
ins
push
adc
inc
dec
push
cmp
lea
xchg
icebp
stos
icebp
jbe
jecxz
sub
cmp
sar
stmxcsr
scas
aam
(bad)
inc
adc
dec
pop
mov
test
xchg
add
push
iret
add
mov
stc
or
data16
into
nop
and
xchg
sti
ins
mov
mov
jmp
dec
lds
or
jae
fidivr
fcom
dec
or
jbe
mov
popf
loopne
and
pop
add
pop
mov
gs
mov
xlat
lds
leave
push
or
stc
aaa
shl
lds
add
push
pop
daa
mov
pop
inc
inc
xor
xlat
jb
pop
rcr
enter
mov
sti
push
pop
adc
out
sbb
inc
or
push
ins
add
inc
xchg
mov
data16
xchg
and
dec
shr
fst
jno
out
lods
data16
xchg
sub
(bad)
test
inc
mov
dec
aas
xor
sbb
and
jle
mov
xlat
push
push
imul
ror
idiv
icebp
fld
in
push
lea
adc
push
or
das
add
and
leave
xor
out
push
mov
das
adc
lea
imul
cld
adc
(bad)
add
sub
push
and
or
ror
in
jb
sti
push
popa
or
add
or
je
inc
(bad)
clc
std
and
push
mov
and
pushf
loopne
push
or
adc
(bad)
scas
loopne
stos
dec
hlt
adc
and
pop
mov
cmp
add
(bad)
adc
cmp
in
aam
hlt
pop
mov
dec
mov
pop
jb
push
shl
mov
nop
cmps
xor
add
in
adc
mov
adc
add
sbb
mov
add
mov
dec
rcr
xor
inc
in
cdq
xchg
(bad)
fadd
test
jnp
cli
das
pop
xor
pop
repnz
cmp
popa
dec
pop
pop
mov
and
fsub
(bad)
ror
push
test
in
jbe
pop
mov
mov
loopne
or
adc
arpl
mov
push
push
xchg
retf
in
xchg
fsub
lods
test
shl
sar
gs
ja
adc
ins
dec
inc
xor
xchg
fdivr
mov
addr16
cld
sbb
out
das
mov
les
push
ja
inc
xor
adc
xchg
sub
aam
add
sub
stos
add
pop
pop
adc
sub
adc
xor
addr16
(bad)
xchg
test
int3
(bad)
sar
add
ss
pop
rol
mov
daa
scas
call
das
push
inc
xlat
das
imul
leave
lea
aaa
(bad)
cwde
xor
xchg
loope
jb
in
xchg
xchg
nop
push
retf
and
enter
and
cs
dec
mov
sub
es
outs
mov
mov
jl
cmps
jecxz
retf
jl
push
outs
mov
add
inc
push
movs
mov
push
lods
imul
outs
pop
sbb
or
pop
mov
test
mov
pop
sbb
jecxz
mov
aas
xor
movs
inc
sub
add
add
adc
imul
pop
js
es
sbb
jae
adc
and
jae
leave
pushf
jno
lods
movs
or
je
mov
sub
inc
sbb
cbw
(bad)
std
repnz
jl
xchg
(bad)
push
test
mov
je
jo
jae
aas
mov
xchg
xchg
retf
ins
ins
push
jl
aas
push
lods
fs
(bad)
pop
pusha
jne
lea
jb
xor
sub
pop
mov
and
push
jbe
lea
enter
movs
jb
pop
mov
xor
test
jo
cmp
and
ja
fnstsw
jb
in
push
push
push
cmp
shl
lods
adc
jmp
aad
dec
shl
xchg
scas
pusha
mov
ins
test
xrstor
jp
jo
(bad)
or
jne
push
ins
cs
dec
test
out
loopne
jl
sub
or
xor
add
and
test
and
and
add
mov
icebp
and
xchg
or
ss
enter
icebp
js
mov
add
and
sub
mov
or
sbb
cmp
in
ins
ja
fwait
stos
inc
xor
test
jmp
xor
lea
jbe
das
test
mov
sub
sub
xchg
retf
aaa
test
fs
mov
xchg
mov
push
fadd
xor
std
lods
lea
sbb
sub
push
popa
adc
adc
and
adc
ds
ss
sbb
or
or
nop
xor
shl
and
fld
popa
mov
xchg
sbb
cwde
cmp
lea
add
mov
xchg
cmps
fs
shl
outs
push
xlat
mov
ins
ss
xor
dec
push
sub
sar
cmc
mov
ds
movs
inc
(bad)
data16
push
into
adc
popf
ror
mov
test
into
cmc
push
iret
push
inc
cmp
rcl
fwait
repz
mov
loopne
in
(bad)
fild
aam
ds
test
outs
call
(bad)
(bad)
mov
ret
push
pop
xchg
pop
add
jp
inc
inc
add
add
jg
ret
lds
add
cmp
mov
add
xor
dec
adc
or
push
sbb
addr16
arpl
or
sbb
mov
inc
adc
adc
mov
loope
pop
adc
jl
je
inc
push
lea
add
enter
pop
cmp
js
ss
mov
or
mov
xor
push
shl
or
adc
mov
popa
add
lahf
aas
adc
sbb
shl
fwait
adc
retf
push
gs
xor
push
pop
dec
xor
sbb
add
mov
adc
fwait
aas
adc
cwde
sub
lea
and
call
add
xor
push
pushf
add
nop
lods
ja
xor
or
mov
push
iret
xor
inc
call
mov
aas
or
(bad)
and
add
pop
or
mov
call
xchg
mov
sub
or
jbe
and
lea
mov
mov
fild
add
inc
adc
mov
sbb
or
loope
xor
mov
push
mov
daa
adc
ret
test
(bad)
fisttp
test
lock
sub
adc
loop
sub
pop
sub
add
add
xchg
sub
or
add
fnsave
mov
pop
in
jno
mov
and
sbb
daa
bound
out
lea
xchg
bound
push
add
mov
add
in
xchg
movs
add
sub
mov
xchg
cli
rol
jo
add
jnp
fadd
sbb
movs
or
neg
push
mov
loop
arpl
inc
or
sbb
test
inc
cmps
sbb
inc
dec
and
or
cmp
lock
mov
test
imul
int3
jg
adc
test
dec
ins
sbb
popf
push
jp
pop
mov
mov
cdq
test
movs
dec
fmul
dec
ins
outs
jae
xchg
popa
push
adc
imul
jle
add
mov
inc
push
mov
push
sbb
imul
cmp
movs
xor
test
pusha
shl
ins
int3
repz
fdiv
mov
xchg
dec
rol
sbb
(bad)
push
int3
sub
push
loope
mov
ja
ret
mov
jo
ins
shl
cmp
(bad)
aam
dec
add
scas
or
adc
push
or
add
dec
and
push
mov
mov
sbb
call
mov
add
or
out
or
and
add
je
push
push
mov
ror
push
rcr
push
adc
lods
and
les
lods
test
cmps
xor
jg
retf
test
cmp
xor
sbb
jne
push
lahf
xchg
dec
imul
xchg
int
jecxz
jge
inc
cmp
shr
push
hlt
add
mov
pusha
mov
sbb
sbb
cmps
lahf
add
cmp
sbb
mov
rol
inc
gs
cmp
in
dec
push
inc
and
add
aad
nop
aas
cs
cld
mov
pop
jo
sub
inc
pop
mov
xlat
or
mov
adc
mov
test
loopne
adc
cld
or
(bad)
adc
sub
jne
shr
xor
adc
cld
add
mov
sub
mov
out
(bad)
fstp
sub
in
sub
(bad)
or
add
sbb
(bad)
in
popa
push
push
test
xchg
inc
pushf
fistp
mov
push
add
adc
jmp
and
movs
gs
ins
add
push
rcr
mov
mov
add
add
and
adc
pop
fdiv
sbb
adc
jle
add
jg
(bad)
ficom
dec
in
test
nop
pop
sub
call
xor
push
jmp
sub
xor
imul
inc
xor
out
outs
dec
fild
nop
xor
xchg
and
add
xchg
push
dec
int3
aaa
stos
push
dec
adc
push
add
ins
and
xchg
xchg
push
xor
ret
nop
mov
adc
cmp
call
mov
adc
pop
movs
mov
xchg
mov
js
sub
std
add
nop
add
jl
cmovns
test
test
jae
inc
in
jnp
xchg
ins
inc
cmp
rol
or
(bad)
push
cmp
adc
mov
adc
xchg
xor
cmp
and
fnstcw
stc
mov
nop
mov
leave
push
inc
mov
jnp
stc
jmp
aaa
xor
jmp
jge
mov
in
jmp
mov
or
ja
inc
sub
fwait
loopne
mov
nop
mov
arpl
jae
fscale
fs
arpl
retf
mov
pushf
or
cmp
ss
int
repz
in
jmp
cmps
jns
out
cmp
in
and
cmp
pop
add
push
add
add
add
popa
sbb
pop
or
or
test
in
push
or
add
or
jmp
inc
mov
or
xor
push
inc
bound
imul
add
mov
inc
test
movs
sbb
push
mov
mov
sbb
add
call
xchg
add
inc
push
lock
jl
jl
fs
std
push
dec
push
cmp
add
inc
inc
int3
sub
js
(bad)
jle
cmp
jnp
sbb
sub
xchg
sbb
rcr
dec
or
push
das
add
(bad)
shl
and
mov
inc
xchg
push
(bad)
cmp
add
push
and
adc
rcl
cmp
jp
in
add
push
enter
in
push
(bad)
or
cmp
nop
ds
inc
stos
fstp
pop
popa
inc
mov
stos
test
xchg
invd
push
jp
sti
mov
xchg
ret
or
stos
or
lea
inc
mov
imul
pop
shr
adc
daa
ins
add
push
cmps
jecxz
push
inc
push
xchg
add
sub
cmp
adc
addr16
or
push
sbb
inc
or
das
add
rcr
inc
and
xlat
and
mov
das
(bad)
push
or
xchg
adc
in
mov
xor
mov
sti
mov
push
inc
jb
or
jecxz
mov
adc
mov
jmp
sbb
or
dec
pop
adc
mov
inc
out
movzx
push
and
inc
js
stos
add
test
add
ja
jno
lea
pop
jmp
imul
xor
rcl
je
add
sub
lods
mov
push
dec
popa
mov
mov
nop
cmps
fisttp
inc
pop
or
imul
enter
add
or
mov
jo
push
bound
je
add
or
outs
add
xchg
icebp
mov
or
mov
lea
retf
mov
test
jmp
adc
pop
push
cmp
and
mov
or
shl
mov
sbb
loopne
xchg
mov
popf
add
push
lods
add
retf
cwde
jae
push
xchg
sub
xchg
test
or
(bad)
add
fdiv
mov
adc
sahf
ficom
jl
dec
mov
jb
ins
test
inc
fwait
cmp
pop
xchg
push
test
or
add
xchg
mov
jle
push
cmp
or
rcl
jmp
dec
adc
and
fsub
dec
pop
xor
shr
sbb
jbe
jmp
lods
xor
mov
test
cmc
xchg
cmc
ret
mov
add
test
loop
inc
test
push
sub
stos
and
sub
push
sbb
leave
sbb
add
addr16
cmp
test
sub
jg
adc
pushf
push
jnp
push
adc
pusha
pop
add
aaa
cmp
xor
adc
sub
dec
cmp
dec
or
inc
sub
cmp
xlat
hlt
in
or
adc
jmp
add
jne
jmp
cld
mov
pop
adc
or
cld
xor
adc
inc
shr
mov
sti
mov
hlt
pushf
mov
inc
sbb
push
or
dec
scas
jo
ror
add
inc
add
aas
hlt
mov
inc
xchg
out
push
pop
sar
lock
or
sbb
push
test
push
cmc
push
pop
adc
shl
inc
in
pushf
(bad)
call
jg
xor
retf
fist
jmp
mov
mov
dec
sub
mov
adc
out
loop
pop
mov
lea
mov
cmp
push
push
sbb
pop
inc
loope
pop
movups
sbb
arpl
xor
and
inc
(bad)
mov
or
or
add
push
xor
nop
pop
aam
cld
dec
inc
push
jmp
push
bound
test
adc
add
mov
sub
or
or
cmp
es
sbb
pop
fidivr
or
jmp
nop
test
adc
nop
movs
div
xchg
inc
shl
je
clc
(bad)
xchg
rol
inc
and
dec
aad
add
cwde
or
xor
cwde
cli
test
lahf
xchg
cwde
or
sar
xor
out
push
add
xor
mov
fld
push
or
sub
mov
pop
mov
nop
and
std
or
dec
xchg
or
test
dec
std
push
mov
ret
cmp
push
dec
inc
pop
mov
mov
lock
scas
adc
daa
mov
add
mov
mov
je
inc
pop
mov
mov
push
mov
mul
add
and
jl
add
aas
dec
or
jnp
pop
push
mov
mov
int3
retf
ins
pop
cmp
mov
or
xchg
loopne
outs
jns
clc
mov
mov
inc
jmp
outs
ret
and
add
ret
and
popa
push
loopne
push
and
adc
lods
mov
jmp
mov
test
inc
sar
push
add
mov
pop
test
add
mov
sub
fst
push
rol
ja
les
stos
dec
inc
frstor
cmp
dec
dec
and
add
pop
lea
bound
mov
adc
dec
cmp
push
adc
and
rcl
rol
mov
add
js
rcl
push
sub
adc
sub
fadd
dec
in
mov
cmp
add
or
fs
test
pop
ins
std
jb
xor
push
jo
icebp
adc
push
adc
dec
cmp
jo
(bad)
(bad)
push
and
push
mov
mov
comiss
or
aaa
ret
sbb
pop
sbb
or
add
and
mov
jno
add
mov
push
fmul
inc
xchg
push
jecxz
pop
jns
enter
arpl
sbb
and
cld
add
add
shl
scas
cmp
clc
sub
int3
int3
sbb
and
in
xchg
out
pop
scas
pop
pop
pop
dec
test
cdq
hlt
hlt
mov
call
inc
lock
sub
adc
nop
adc
mov
(bad)
and
adc
inc
mov
call
jmp
popa
pop
int
xor
push
imul
adc
add
push
jns
js
sbb
inc
push
nop
(bad)
mov
and
(bad)
sbb
icebp
aad
push
adc
fnstcw
add
dec
cmp
jmp
cmp
dec
push
xchg
cmps
xchg
mov
jmp
adc
xchg
push
mov
(bad)
lods
push
mov
pop
add
shl
fisub
dec
mov
and
pop
or
add
sbb
ret
pushf
jp
movs
sbb
and
inc
nop
mov
add
sub
sbb
xor
mov
mov
dec
lods
rcl
cmp
inc
add
cdq
or
ins
sti
sub
aam
xor
fwait
sbb
and
frstor
push
push
xchg
popa
call
test
rol
js
dec
dec
imul
mov
pop
mov
and
mov
fs
mov
inc
inc
nop
add
nop
mov
nop
adc
out
mov
jno
mov
mov
outs
inc
mov
push
add
je
jmp
add
popa
int3
sub
mov
sub
xlat
lods
loopne
mov
dec
test
add
test
dec
arpl
inc
push
aam
inc
dec
call
dec
mov
fmul
ja
dec
mul
in
push
add
inc
ds
gs
sbb
mov
repnz
and
xor
loopne
or
mov
inc
or
out
jb
ret
nop
call
and
and
or
ret
push
or
ret
or
adc
ss
mov
mov
shr
add
jns
out
and
adc
aas
adc
sbb
das
rcr
aam
sbb
inc
pop
test
sub
je
jmp
dec
jmp
inc
rcl
loopne
addr16
loopne
inc
inc
and
sbb
jo
ja
test
or
xchg
jl
inc
sar
test
mov
rol
pop
push
push
jno
adc
mov
dec
lea
jo
adc
leave
in
push
add
inc
rol
mov
or
pop
and
test
push
daa
ret
movzx
nop
dec
dec
adc
leave
mov
xor
pop
adc
push
movs
stos
add
dec
jb
and
mov
aaa
mov
es
mov
inc
movs
imul
add
lahf
(bad)
xor
dec
or
add
daa
mov
xor
and
xchg
int3
cmps
or
mov
mov
jo
xchg
or
add
push
dec
icebp
mov
inc
loope
cmp
and
pusha
pusha
sbb
pusha
loope
dec
or
add
mov
les
xor
cmp
mov
jb
inc
enter
add
cmps
lods
fadd
jne
mov
sbb
nop
add
sub
add
pop
xor
pop
mov
cmp
pop
xchg
push
mov
push
fsubp
cdq
inc
xchg
dec
push
lods
push
add
mov
or
mov
xor
or
pop
add
mov
movs
pop
pop
lods
pop
xor
pop
add
add
rcl
mov
imul
lea
xchg
xor
test
es
(bad)
add
popa
popa
pop
mov
adc
lea
mov
mov
cmp
fnstcw
push
pushf
push
and
ins
xchg
cmp
movs
mov
imul
pop
jb
jae
sbb
inc
or
inc
push
mov
addr16
or
test
add
pop
xchg
mov
adc
sub
(bad)
test
les
jb
(bad)
(bad)
pop
cmp
or
add
sar
aas
ins
or
push
adc
mov
mov
add
push
fiadd
ins
push
or
clc
and
adc
add
and
std
imul
push
lea
aam
add
sbb
sub
rcr
cmp
sub
fdivp
adc
inc
aam
out
cmp
push
jae
popa
int3
ret
xor
or
ss
xchg
icebp
std
and
xchg
mov
in
icebp
mov
fimul
push
mov
xor
movs
arpl
xchg
rol
fst
inc
xor
inc
test
test
xor
add
xor
sahf
retf
loopne
mov
fldenv
daa
xchg
pushf
mov
and
and
adc
cwde
cwde
je
leave
cwde
and
mov
mov
test
test
movs
dec
dec
xchg
mov
les
sbb
mov
sub
push
cwde
dec
jmp
push
xor
test
lea
add
push
push
mov
es
cmp
inc
push
retf
adc
cwde
xchg
adc
add
pop
add
or
inc
add
imul
add
cmp
movs
jno
push
adc
adc
add
sbb
adc
pop
or
jns
xchg
cli
xor
int3
mov
daa
cdq
cmp
mov
sbb
mov
sub
push
ss
(bad)
add
jmp
jo
lea
les
dec
jns
cmp
push
xor
cmp
les
ins
shl
mov
mov
loop
sbb
sub
mov
imul
in
jmp
lods
xor
xchg
xchg
adc
add
pop
jmp
enter
dec
xchg
sub
pop
sub
inc
nop
jg
js
adc
adc
inc
(bad)
dec
call
add
add
adc
sub
push
hlt
and
iret
and
adc
imul
push
jmp
mov
ror
cmp
js
pop
and
inc
pop
pop
mov
add
fwait
adc
aam
test
int3
or
push
ins
imul
es
push
imul
push
dec
pusha
adc
and
es
cdq
or
push
xchg
mov
or
jo
pop
loop
push
dec
int3
push
pop
add
add
adc
mov
pop
or
in
test
and
xor
iret
push
mov
cmp
jmp
imul
movs
punpcklwd
jbe
xchg
jmp
sbb
and
and
lock
push
and
test
or
or
dec
stos
dec
or
or
shl
push
push
xor
xor
es
test
and
les
pop
jo
xchg
push
stos
popa
sub
cmp
lods
aaa
sub
sub
loope
hlt
imul
fild
in
and
aaa
xor
and
loop
shl
lea
retf
sub
adc
ss
push
inc
adc
xchg
cmp
lea
daa
push
or
sub
mov
mov
and
push
xchg
or
test
mov
stos
and
mov
xchg
push
jo
test
fld
xor
ins
stos
xchg
add
arpl
mov
in
dec
xchg
leave
inc
adc
or
outs
sbb
xchg
inc
aaa
mov
sbb
mov
or
inc
cmp
retf
les
inc
dec
mov
outs
mov
push
push
jmp
push
in
fmul
push
add
cmp
cmps
ret
sbb
sbb
inc
push
inc
sbb
dec
loop
in
push
inc
mov
sbb
dec
in
dec
jmp
and
jnp
mov
cmps
inc
adc
adc
shl
mov
or
or
adc
leave
ja
scas
nop
nop
nop
es
popf
dec
or
sub
jl
add
adc
pop
add
mov
inc
test
add
mov
jmp
or
xor
pop
lahf
mov
stc
push
add
adc
sub
sbb
sub
sub
dec
adc
aam
adc
mov
push
sbb
or
mov
cmp
inc
fadd
and
push
ret
fbstp
mov
lahf
int3
call
int3
mov
sbb
mov
xchg
movs
add
adc
or
pop
pop
repz
call
stos
pop
inc
or
fsub
mov
and
and
sub
and
sar
add
les
dec
add
mov
aas
lahf
push
adc
sar
popf
mov
push
push
jg
add
mov
call
loopne
neg
push
(bad)
int3
push
or
pop
inc
mov
or
les
xor
pop
dec
add
sar
jno
sar
in
lahf
dec
popa
shr
lahf
xchg
cmps
icebp
push
and
jmp
mov
bswap
jo
dec
dec
cmps
xor
popf
add
dec
lahf
into
sub
and
aaa
adc
lea
ret
rcr
mov
lahf
into
sub
mov
and
popf
and
mov
add
loopne
adc
add
jp
push
add
test
cmp
loopne
dec
push
jg
mov
sbb
push
std
movs
mov
or
enter
push
sub
test
mov
sub
movs
pop
lahf
pop
sub
adc
lahf
jb
in
cwde
pop
xchg
in
pusha
mov
add
cmp
sbb
sub
mov
dec
sub
jo
hlt
and
pusha
int3
mov
jmp
and
and
mov
dec
inc
inc
inc
and
xlat
push
(bad)
aam
add
pop
pop
mov
or
add
in
xchg
xor
xor
dec
xor
push
sub
xor
outs
add
and
rcr
lahf
mov
mov
xchg
add
ret
test
mov
sbb
in
imul
cmps
push
or
pop
pop
mov
dec
adc
cwde
or
mov
aas
mov
mov
xor
add
inc
add
and
xor
push
or
scas
pop
dec
fild
push
pop
xor
add
or
adc
add
inc
stos
sub
dec
or
clc
enter
ret
mov
inc
sar
aas
leave
add
xor
rcl
fcmovbe
or
mov
iret
mov
addr16
sub
pushf
mov
cs
xor
les
aam
xchg
cmc
jmp
sub
pop
push
retf
inc
mov
inc
js
fild
adc
and
xchg
(bad)
jl
sbb
and
push
sbb
sub
mov
adc
mov
popa
mov
sub
pop
nop
cmp
jl
pop
push
or
sbb
test
outs
pop
inc
adc
add
ins
dec
inc
lea
mov
sub
cmp
push
(bad)
stos
mov
or
push
jg
or
or
sub
and
mov
aas
adc
movs
add
sub
loopne
sbb
movs
nop
stos
imul
inc
mov
sbb
retf
mov
add
mov
jg
inc
or
push
or
and
add
xchg
push
push
xor
jg
xor
push
pop
add
(bad)
popfw
xchg
add
ret
pop
xor
sub
adc
sub
lock
enter
pushf
imul
cmp
push
pop
loope
mov
cld
push
xor
push
pop
test
pop
push
mov
sub
pop
xor
ins
push
mov
push
or
mov
dec
push
test
addr16
push
inc
or
cmc
sbb
jmp
adc
fxch
addr16
jb
fnstenv
movs
mov
movs
lahf
popa
and
push
fild
xor
or
test
xor
xchg
pop
ds
or
shr
inc
and
dec
popf
sbb
sub
jmp
movzx
push
push
movs
or
push
or
xchg
inc
test
les
cmp
lea
jl
add
imul
rsqrtps
add
or
add
or
fmul
rcr
mov
jmp
stc
adc
jo
mov
jmp
rcr
jg
pop
loopne
adc
loop
add
pop
inc
or
lea
lock
cmp
sbb
mov
pop
loopne
add
adc
ja
or
push
and
add
xor
add
mov
jg
inc
mov
lods
add
jg
or
xchg
xchg
arpl
push
push
and
cmp
add
mov
jg
stos
mov
pop
pop
push
int3
xchg
pop
jge
add
pop
aas
add
inc
fs
sar
pop
push
cmp
xor
sar
adc
jl
hlt
push
aaa
pop
adc
jecxz
jge
loop
lods
inc
jg
aam
je
lods
mov
lock
retf
mov
call
mov
(bad)
call
and
add
adc
lods
add
xchg
adc
rol
fdivr
adc
sar
mov
push
add
add
mov
push
mov
ror
aas
add
inc
add
mov
pop
out
or
push
(bad)
int3
mov
shl
sbb
retf
retf
jo
adc
ror
arpl
icebp
mov
lea
lea
and
adc
adc
adc
test
xchg
push
cmp
add
rcl
shld
or
pushf
or
jg
dec
jmp
pop
dec
retf
out
adc
inc
das
push
mov
adc
mov
mov
and
or
ins
xchg
or
cmp
les
lods
inc
adc
pop
repnz
mov
fadd
enter
sbb
pushf
(bad)
and
bound
dec
ret
ret
test
pop
push
and
fbstp
test
rcr
cmps
ins
jns
std
shr
lods
add
outs
sbb
push
fcom
add
xchg
inc
pop
pushf
sbb
and
mov
or
aam
sub
push
pop
push
xor
adc
test
ret
xchg
test
add
or
xor
enter
cdq
add
cmp
test
and
inc
cmp
retf
lahf
jne
adc
add
add
inc
aas
and
addr16
push
xchg
push
rol
dec
jno
nop
add
rol
dec
xchg
adc
fcomp
(bad)
or
repz
or
shl
int
loope
push
fxch
test
jecxz
scas
jg
push
inc
jl
or
popf
or
lods
jg
jo
sar
rol
sub
add
or
or
shl
push
retf
inc
test
popa
and
push
pop
and
push
movs
inc
dec
lea
movs
lods
(bad)
cmp
data16
pop
ucomiss
cmps
dec
adc
adc
xor
inc
pusha
jmp
fisttp
push
adc
sub
push
inc
xlat
push
and
add
es
xchg
sti
adc
mov
in
fist
xchg
push
add
cwde
or
inc
sbb
imul
or
and
iret
jae
or
push
cmp
push
xchg
push
ror
(bad)
and
test
cmp
cld
xor
addr16
(bad)
pop
loopne
push
(bad)
push
mov
xchg
xor
shl
mov
xchg
cs
addr16
std
ds
test
(bad)
dec
jmp
pop
dec
ror
sbb
mov
dec
sub
mov
retf
cmp
or
mov
dec
inc
xchg
xor
push
mov
inc
test
push
popa
jmp
add
xchg
jno
push
add
xor
xor
daa
cmp
sbb
cmp
add
and
xor
sbb
dec
dec
mov
aam
push
and
dec
or
add
sbb
popa
xchg
sub
xchg
pop
xchg
sub
mov
inc
sbb
aam
pop
mov
rcl
and
aas
cmp
scas
mov
jge
pop
adc
pop
xor
xchg
(bad)
cmp
pop
adc
adc
or
jne
enter
adc
stc
call
ins
sub
dec
jmp
mov
cmp
mov
fsubr
push
and
fdivr
fdiv
fdiv
fs
sub
mov
call
cmps
ins
or
jmp
pusha
or
add
xor
inc
jae
mov
shr
jmp
cmp
sub
dec
sar
and
shl
push
ret
adc
mov
jmp
pop
sbb
inc
lods
out
(bad)
cmp
push
adc
sbb
inc
sbb
sti
or
adc
imul
adc
xchg
sbb
enter
add
sub
adc
add
shl
pop
push
cmp
test
lea
(bad)
mov
pop
movs
mov
jle
les
loop
and
pushf
pop
sub
mov
ret
je
rcr
lock
(bad)
call
add
fisttp
xchg
bound
test
sti
push
push
xchg
test
loopne
jge
sti
lea
pushf
adc
jb
add
out
or
sub
out
pop
xchg
add
fnstcw
push
pop
outs
or
inc
xchg
test
or
sbb
mov
lahf
mov
add
xor
js
rcl
fsub
pop
clc
(bad)
fisubr
rol
test
sar
mov
pushf
sub
arpl
adc
icebp
xor
or
cli
scas
xchg
mov
fdivr
or
pop
inc
in
and
je
enter
pop
and
ins
es
adc
or
and
cli
into
inc
sub
scas
add
adc
add
xlat
or
cli
dec
sbb
repnz
and
cmps
loope
and
push
retf
xchg
retf
test
not
movs
xor
rol
and
in
popf
retf
push
dec
icebp
cmps
cmp
mov
dec
inc
dec
sbb
sub
xchg
out
jo
arpl
lods
inc
add
adc
cmps
mov
stc
iret
xchg
retf
icebp
mov
mov
xor
or
xlat
xor
pop
dec
sub
ins
test
shr
pushf
das
cmp
sbb
adc
sub
adc
lea
fs
lahf
pop
push
pop
inc
test
sbb
adc
lea
arpl
add
adc
std
push
push
and
pushf
lea
push
js
test
adc
sbb
push
pusha
call
cwde
xchg
clc
adc
cmp
adc
and
pop
add
mov
shl
mov
add
lea
push
les
pop
sub
cmp
popf
cmp
mov
xor
mov
call
sti
clc
not
push
bound
push
push
sbb
pop
xchg
sti
push
jmp
(bad)
leave
or
push
sub
ror
pop
outs
mov
rol
ins
sbb
and
inc
jb
es
xchg
or
adc
clc
jb
push
outs
neg
dec
fcom
sub
xor
popf
jl
push
out
in
repnz
jge
int3
mov
mov
cmp
mov
add
test
mov
mov
lock
and
mov
neg
fdiv
inc
or
in
mov
mov
outs
push
mov
(bad)
inc
inc
test
iret
pop
and
jno
adc
sub
push
push
sbb
icebp
pop
adc
add
xor
scas
jl
retf
xor
mov
adc
lds
movs
pop
and
test
cmp
fstp
lock
and
movs
cmp
popf
xor
xor
dec
cwde
push
js
mov
or
nop
dec
nop
scas
inc
outs
in
es
mov
jae
adc
rol
(bad)
popf
or
jmp
jo
sar
mov
pop
test
xlat
lock
test
xor
and
leave
addr16
jl
pop
sub
xchg
pop
ror
je
je
pop
sub
lea
sub
sub
retf
sbb
mov
xchg
test
popa
ds
mov
dec
adc
jl
movs
xchg
enter
cmc
or
ins
(bad)
ins
push
and
pusha
rcl
push
sub
jp
adc
sub
idiv
cmps
stos
inc
adc
pop
mov
and
push
lahf
retf
sub
lea
mov
popa
lock
sub
add
inc
mov
pushf
leave
jne
jo
inc
or
in
or
jnp
xor
mov
push
lds
add
daa
imul
lea
pop
(bad)
in
repnz
dec
lds
das
nop
(bad)
jmp
xchg
jnp
inc
inc
pop
xor
shl
mov
nop
mov
in
inc
hlt
retf
or
hlt
cmp
cmp
cmps
fld
cmp
dec
sub
(bad)
push
loopne
adc
test
xor
inc
aad
xor
inc
das
xchg
das
adc
lods
mov
add
xor
adc
mov
xchg
jno
and
xor
cmp
and
test
jae
cwde
pop
xor
lea
xchg
pop
rcl
retf
sbb
sbb
add
addr16
xor
xor
xchg
in
ret
retf
xor
inc
repz
loopne
inc
call
push
inc
das
push
inc
xchg
and
loop
repz
xchg
pop
add
(bad)
adc
aaa
mov
repz
leave
sub
stc
jo
mov
add
cmp
xor
repz
add
add
idiv
mov
and
jno
lds
xchg
mov
out
adc
into
movs
frstor
adc
stc
adc
cmps
adc
shl
mov
daa
xor
clc
lahf
inc
imul
test
mov
imul
stos
hlt
and
pop
cmp
(bad)
in
shufps
imul
loope
arpl
nop
in
xchg
xor
ror
lods
(bad)
in
mov
cs
test
fcomp
mov
fsubr
cmp
outs
sbb
icebp
lds
pop
sti
ret
sbb
jmp
mov
jmp
push
and
push
dec
aam
cmp
icebp
sbb
iret
adc
xor
ds
cdq
and
xchg
fmul
xor
shl
push
inc
mov
add
or
je
or
adc
inc
ror
pop
jnp
ror
mov
sub
jecxz
mov
sub
mov
jne
in
inc
dec
jno
rcl
daa
(bad)
retf
mov
(bad)
out
popa
xchg
(bad)
sti
jnp
cmps
or
pop
fisub
or
test
cmp
or
add
mov
xchg
pusha
lods
xor
nop
popf
xor
sbb
loop
(bad)
fild
or
add
jno
outs
or
shl
xor
adc
inc
lea
sub
inc
and
pop
dec
push
popa
pop
add
std
xor
and
pusha
sub
pusha
add
or
gs
xor
add
adc
mov
mov
dec
jge
ins
push
sbb
popf
ror
inc
sti
xor
or
adc
xor
test
(bad)
pushf
xchg
retf
mov
push
out
adc
pop
test
mov
adc
push
adc
test
call
sbb
sbb
test
dec
addr16
push
sub
adc
or
or
mov
mov
push
xor
(bad)
adc
add
and
cmps
popa
add
and
dec
dec
sub
jecxz
cmp
inc
cdq
fdivr
pop
cmp
cmc
repnz
xchg
mov
call
jno
pop
loopne
pop
and
lea
shl
inc
adc
fcom
mov
imul
inc
loopne
std
jns
dec
scas
push
(bad)
in
int3
imul
add
add
dec
rcl
dec
push
add
push
or
movs
xchg
add
sub
lahf
pusha
push
fwait
int3
xchg
mov
movs
mov
std
lea
mov
cld
nop
sub
cmp
call
movs
fs
lds
cmp
adc
pop
and
pusha
ror
pop
stos
je
movs
jg
gs
mov
call
sub
mov
jae
imul
jo
mov
nop
lahf
nop
mov
push
cwde
retf
and
mov
mov
test
and
jecxz
fdivp
pusha
pop
xchg
pop
dec
push
add
sub
bound
retf
pop
in
xchg
pop
jmp
lea
inc
and
rcr
cmp
sub
rol
movs
mov
cmp
je
retf
xchg
(bad)
jo
pop
movs
mov
cmc
adc
and
xchg
mov
rcl
xor
mov
and
jnp
add
xor
bound
fsub
xor
pop
jnp
add
enter
and
arpl
cmc
inc
add
cmp
and
push
pop
aas
push
pushfw
and
call
fist
or
inc
pop
pop
test
scas
inc
pop
or
xor
test
xor
and
movs
mov
ja
and
rcr
or
or
push
imul
or
aas
or
jbe
inc
xchg
(bad)
in
xchg
xchg
(bad)
sub
lock
jae
into
add
pop
mov
ret
xor
in
mov
dec
lock
push
(bad)
imul
sbb
jmp
hlt
inc
pusha
mov
hlt
and
inc
jo
or
adc
adc
loope
mov
and
sti
in
mov
or
or
add
push
mov
lea
sub
(bad)
call
add
mov
sub
push
push
lods
mov
sub
fild
add
or
add
cs
fistp
fistp
push
sub
call
pop
sub
inc
(bad)
mov
in
test
mov
call
or
sbb
cmp
adc
mov
sbb
jmp
inc
rol
xchg
add
mov
xor
dec
(bad)
xor
sbb
test
ret
mov
or
fadd
pop
fcomip
or
and
call
adc
nop
aam
add
xchg
jl
je
and
aam
inc
loopne
dec
mov
test
dec
and
or
dec
push
dec
pop
js
lods
add
sar
and
push
loopne
dec
sub
push
or
pop
push
fst
pop
pusha
mov
in
adc
add
add
fcmovbe
cli
push
in
push
mov
xchg
aad
jmp
mov
jo
inc
cld
mov
shr
nop
mov
mov
lods
xchg
aad
sub
xchg
xchg
fdivrp
aam
or
stc
push
pop
adc
or
mov
lahf
push
ins
xchg
sbb
add
gs
sbb
xor
dec
pop
adc
and
lahf
lods
inc
xchg
sbb
and
daa
and
xchg
lahf
or
or
or
sub
lahf
ficom
mov
stos
inc
jge
int3
sub
int3
ins
sub
ret
adc
test
test
repz
push
int3
jae
ret
loopne
xchg
fs
add
(bad)
mov
or
out
adc
xchg
mov
xor
aam
cmps
out
xor
stos
adc
cmps
(bad)
dec
add
inc
stos
xor
add
cmp
and
inc
adc
push
or
inc
adc
add
pop
or
inc
mov
sub
push
out
sub
rol
mov
mov
mov
and
adc
dec
mov
fist
test
adc
bound
or
int3
nop
(bad)
mov
mov
ret
xor
movs
add
mov
pushf
movs
(bad)
fdiv
ds
sub
mov
dec
loope
test
add
test
mov
push
push
inc
mov
add
iret
test
cmp
jmp
(bad)
fsubr
ret
xor
add
aam
xchg
cdq
mov
lods
mov
or
or
sbb
in
jl
mov
fcmovu
movs
sbb
dec
mov
jbe
popf
push
mov
(bad)
pop
lea
call
lds
sub
pop
lods
clc
sub
mov
pop
test
mov
cmc
or
and
cld
inc
test
test
mov
or
jle
stc
fst
js
(bad)
push
dec
in
sbb
ja
pushf
jmp
push
xchg
jo
mov
push
jae
hlt
xor
add
fadd
or
imul
inc
cld
pop
cld
push
mov
add
cmp
jae
btr
jne
push
sub
test
imul
nop
adc
inc
dec
adc
jecxz
pusha
in
adc
jmp
cmp
mov
or
call
fwait
mov
std
pop
sahf
cmc
ins
add
xchg
lock
lock
ss
add
push
push
jle
fild
hlt
inc
mov
leave
adc
adc
xchg
es
xchg
jl
xchg
jl
xor
adc
add
inc
test
and
lock
mov
js
loopne
adc
mov
jmp
inc
or
mov
aad
fist
mov
xchg
adc
pop
xchg
pop
inc
test
stos
adc
es
mov
(bad)
push
sub
jne
cmp
imul
mov
mov
xor
icebp
lods
xchg
fld
cmps
adc
xor
rcl
or
add
popa
jg
cmp
xchg
shr
push
xor
cmp
push
cmp
adc
cmps
(bad)
jl
idiv
mov
inc
mov
jo
mov
push
adc
sbb
pushf
fld
jmp
lea
push
jnp
cwde
mov
dec
lea
popa
add
adc
xor
test
jo
fs
addr16
pop
dec
cmps
fdiv
or
repz
fmul
sbb
jnp
dec
(bad)
fcom
mov
lock
jl
mov
xor
push
imul
jecxz
and
pushf
pop
jae
loopne
aad
jl
add
jle
ja
jp
icebp
and
retf
xlat
push
jns
xchg
xor
sub
cmp
sar
loopne
xchg
push
sub
mov
add
aas
mov
mov
mov
sbb
lods
loopne
sub
daa
lea
dec
movs
ret
push
xor
test
aam
sbb
pop
arpl
or
fistp
aas
loopne
(bad)
sub
call
fild
xor
add
xchg
retf
add
add
jne
mov
test
add
loop
jl
mov
dec
pop
inc
adc
inc
rol
adc
sbb
or
js
sbb
in
or
sub
shl
dec
jmp
pushf
and
add
mov
add
rcl
adc
sbb
(bad)
in
or
or
(bad)
and
pop
inc
push
mov
arpl
nop
pop
pusha
push
add
or
inc
fwait
add
mov
imul
mov
push
mov
shl
es
stc
push
or
mov
pop
cmp
aaa
pop
movs
add
mov
leave
adc
add
inc
push
mov
push
lahf
xor
xor
add
cmp
scas
sar
or
cld
dec
movs
push
jmp
rcl
idiv
lods
or
addr16
in
rcl
mov
xchg
push
push
mov
jl
lods
jo
mov
and
cmp
into
mov
inc
dec
ja
sbb
jno
ror
xor
or
lea
push
mov
aad
fmul
add
retf
cli
sub
jp
xor
mov
pop
mov
mov
mov
adc
push
jo
in
xchg
jo
add
xchg
ins
dec
push
ds
sbb
inc
cmps
push
loop
push
enter
sub
pusha
push
pusha
pop
nop
pop
pop
test
in
cdq
pop
pop
push
pop
mov
mov
inc
push
push
push
pop
adc
dec
push
pop
mov
dec
push
dec
inc
cdq
jne
mov
cs
or
cmp
pop
xchg
add
cmp
mov
sub
cmp
xor
sbb
add
xor
scas
xor
xchg
outs
xor
sub
mov
add
mov
mov
adc
and
pop
and
add
in
fadd
push
sbb
push
mov
adc
adc
std
inc
cs
adc
or
mov
inc
jo
xchg
or
std
pop
or
ins
ret
inc
cs
mov
icebp
repnz
add
cld
stc
mov
mov
push
data16
clc
sub
shr
pop
adc
jl
lock
lock
les
adc
dec
scas
enter
call
mov
enter
fcomp
mov
push
sbb
aam
mov
pop
mov
ror
or
push
int3
or
enter
or
mov
or
sar
mov
test
in
mov
mov
mov
sbb
jb
sbb
xchg
lods
mov
gs
movs
sbb
cs
mov
adc
xchg
mov
mov
pop
mov
cmp
sti
scas
nop
push
nop
mov
mov
mov
and
bound
mov
fcomi
xchg
jl
mov
xchg
and
jb
fcom
jo
retf
les
jl
mov
mov
and
xchg
fs
es
pusha
pop
mov
or
pop
mov
mov
sbb
lea
mov
push
sbb
inc
dec
sbb
imul
sub
scas
xor
scas
test
xor
sbb
imul
cld
sbb
out
imul
sbb
out
sbb
ss
sbb
out
inc
inc
sbb
sbb
outs
xor
sub
cmp
mov
cmp
sbb
mov
aas
xchg
cmps
test
sbb
add
inc
add
cld
inc
lea
dec
inc
push
mov
inc
xchg
inc
add
sbb
push
pop
sbb
sbb
sbb
sar
ins
jmp
dec
das
sbb
rol
ja
fwait
test
mov
ret
ret
xchg
pop
cmp
sub
xor
xor
adc
cmp
inc
or
retf
movs
sbb
and
hlt
sub
cmp
xchg
mov
adc
push
das
push
sbb
enter
push
mov
xor
cmp
bound
pop
push
mov
push
jmp
and
test
inc
xchg
push
outs
push
sbb
or
in
dec
pop
xchg
push
mov
sbb
xchg
icebp
imul
add
jl
add
inc
xlat
mov
adc
adc
ror
loop
pushf
cdq
adc
add
ror
push
inc
clts
dec
rcl
pop
shl
add
int3
aaa
push
xor
mov
iret
inc
loope
nop
mov
or
pop
jo
iret
push
pusha
inc
jmp
mov
xor
(bad)
rol
jg
imul
je
add
shr
add
js
jo
daa
push
xchg
dec
jl
sub
xor
or
dec
lea
clc
cs
call
add
dec
sbb
dec
das
mov
push
mov
xor
add
jl
mov
loop
push
jge
or
inc
test
(bad)
push
mov
test
adc
or
add
movs
shl
mov
sub
xchg
inc
sbb
shl
cmps
push
dec
mov
mov
add
gs
cmp
call
or
mov
test
test
test
jne
push
xchg
jne
jo
mov
sub
sub
(bad)
movs
add
adc
mov
xchg
xor
test
jle
xor
ins
(bad)
(bad)
push
sub
sub
pop
and
rcr
lea
and
adc
add
dec
daa
push
mov
mov
xor
test
add
inc
(bad)
xchg
sbb
movs
and
or
dec
nop
sbb
jo
and
call
push
jae
aaa
pop
sar
push
dec
push
xlat
dec
ffree
adc
push
or
add
popa
or
xor
test
xor
cmp
sub
pop
add
jmp
pop
mov
xchg
ja
test
adc
sbb
gs
add
jo
or
mov
mov
xchg
push
cmp
push
arpl
movs
fadd
loopne
test
sbb
push
sub
mov
or
add
jo
mov
pop
add
push
ret
loopne
pop
pop
inc
xor
mov
or
mov
icebp
stc
inc
pusha
and
or
inc
ins
and
int3
test
sub
push
xchg
dec
add
and
mov
adc
jg
lods
xchg
push
xchg
sub
xor
push
pop
mov
adc
push
or
in
dec
pop
push
xchg
mov
xchg
lods
push
movs
sub
mov
mov
nop
loop
mov
mov
push
xchg
add
sub
push
add
xchg
mov
push
xchg
pop
aad
add
pop
dec
lahf
push
cwde
sub
lods
mov
add
lock
pop
push
cwde
sub
fs
rcr
popa
add
dec
or
and
fistp
xchg
cmp
call
sbb
inc
daa
add
push
and
mov
add
add
push
sar
cmp
and
sbb
inc
push
add
inc
add
jo
ret
shl
scas
fs
fwait
dec
hlt
add
stos
mov
adc
lods
sub
adc
push
push
inc
cmp
sahf
lahf
stos
sub
inc
lahf
pop
jg
inc
inc
and
aas
pop
aad
retf
sbb
pop
push
ins
aas
or
retf
push
sub
(bad)
inc
dec
push
push
cdq
sub
pop
ins
push
pop
aas
clc
mov
aas
push
fsubr
push
fadd
lahf
bound
or
aas
push
retf
mov
nop
cmp
push
movs
in
adc
and
push
xor
mov
pop
cmp
mov
jl
inc
adc
adc
lods
ror
imul
cmp
jne
mov
and
mov
pop
xor
les
ret
sbb
(bad)
pop
inc
sbb
add
into
inc
test
mov
sbb
or
ins
xor
lea
test
(bad)
or
cmp
dec
adc
fsub
push
dec
in
mov
lea
xchg
jg
and
int3
xchg
mov
dec
xor
push
xchg
pop
sbb
bound
inc
sub
jne
sar
xchg
xchg
mov
movs
jl
or
xchg
xchg
mov
ret
xchg
int
and
iret
pop
jmp
mov
xchg
aad
sbb
test
push
ret
push
call
xchg
addr16
jno
ins
cmps
test
mov
cmps
jmp
add
mov
ja
and
and
dec
ret
or
rol
sahf
pop
fnsave
movs
stos
fild
test
push
or
gs
popf
cmps
lods
addr16
cmp
dec
or
dec
pop
mov
inc
loopne
sbb
mov
ror
push
in
or
push
or
mov
jmp
iret
adc
lahf
cwde
stos
xchg
xlat
xchg
xor
add
jmp
repz
sub
or
mov
movs
add
pushf
hlt
sub
dec
enter
dec
cwde
push
xor
pop
sub
push
mov
retf
lods
and
inc
push
add
pop
push
int
push
push
test
lea
xchg
mov
add
test
in
inc
or
adc
adc
mov
retf
pop
je
jbe
adc
adc
jne
inc
xor
jnp
les
xchg
xchg
pop
pop
adc
lahf
push
cmps
dec
repnz
(bad)
or
stos
dec
adc
fadd
push
push
sahf
dec
clc
sub
test
push
xor
inc
push
fbstp
push
add
sbb
add
dec
retf
and
aas
inc
cmps
inc
jl
mov
add
aas
xlat
cwde
nop
add
lahf
push
adc
cs
ffreep
dec
pop
daa
xlat
cwde
lahf
mov
jle
ins
movs
mov
adc
popf
test
mov
retf
and
movs
add
inc
jo
xchg
adc
pop
or
nop
adc
inc
popw
aas
call
repnz
cmps
push
cmps
and
inc
pop
daa
test
lahf
call
pop
je
test
mov
int3
cld
lahf
les
inc
push
ror
aas
test
test
xchg
mov
push
mov
aas
inc
xchg
test
mov
jmp
dec
mov
cmp
cmp
(bad)
pop
int
inc
mov
or
push
stos
sbb
adc
mov
inc
stos
pusha
push
or
xor
test
sbb
add
or
or
(bad)
add
cld
inc
mov
pop
sub
pushf
pusha
cmp
and
push
lods
sbb
jmp
movs
aas
inc
lock
sub
xchg
push
xor
pusha
cmp
fdivr
or
xor
jg
adc
jno
test
xchg
inc
jno
or
cdq
xor
test
add
fsub
test
dec
ror
scas
pop
sub
xor
leave
mov
push
mov
add
sub
sar
push
jnp
jg
test
fbld
sbb
add
fstp
inc
sbb
jmp
mov
and
mov
lods
pop
pop
add
push
cmps
nop
inc
lahf
inc
or
pop
and
sub
cdq
lahf
inc
mov
dec
cmp
push
inc
lahf
mov
pop
adc
lahf
pop
lds
pop
and
inc
les
inc
xor
sbb
mov
mov
lahf
daa
inc
and
mov
add
xor
lds
mov
test
mov
adc
mov
add
mov
mov
inc
add
xchg
mov
sbb
sar
dec
or
adc
push
xchg
mov
sbb
sbb
dec
push
shl
arpl
adc
jo
pop
add
adc
pop
inc
sbb
test
mov
ror
in
push
and
xor
pop
arpl
stos
movs
imul
mov
pop
cmp
rol
mov
bound
lods
sbb
and
nop
cmp
xchg
mov
pusha
mov
xor
push
arpl
fnstenv
sbb
test
xor
and
pop
test
ins
in
test
sub
aas
inc
nop
pop
(bad)
and
fistp
aas
ins
inc
mov
mov
jecxz
xor
add
mov
jg
cmps
jo
mov
push
fld
push
popa
sbb
retf
push
ins
or
add
mov
call
add
cmps
bound
out
les
enter
jo
inc
(bad)
out
rcl
mov
fcmovbe
repnz
jne
cmp
lea
(bad)
xchg
and
lock
sbb
icebp
aaa
div
in
cmp
push
mov
daa
clc
xchg
lea
sub
arpl
or
push
mov
in
mov
mov
mov
pushf
or
cmp
and
out
jmp
aas
and
int3
xor
adc
xchg
pushw
iret
rcl
push
xchg
and
les
jecxz
rcl
fdiv
cmp
test
xchg
sbb
test
dec
or
push
push
sbb
jmp
xor
mov
xchg
pop
test
(bad)
fucomip
dec
adc
push
pop
xor
mov
retf
adc
popa
push
mov
push
sub
mov
movs
sar
inc
mov
int3
cmps
adc
es
pop
adc
or
sub
inc
and
adc
pusha
test
js
jnp
xchg
push
mov
int
fmul
xchg
xchg
pushf
dec
dec
fcmovnu
(bad)
fild
ss
sti
aaa
and
mov
and
inc
xchg
nop
sub
aas
les
fdiv
cwde
(bad)
xlat
fadd
add
in
cmc
jne
or
cmp
fnstsw
ins
popa
mov
sub
or
arpl
frstor
add
stc
sbb
loopne
ror
push
test
ds
fst
mov
shr
add
xor
not
pusha
test
jbe
add
ds
xor
push
ror
xchg
and
loopne
test
lea
and
cli
ss
adc
stos
(bad)
xor
shr
and
and
call
ficom
jnp
jecxz
sub
arpl
(bad)
pop
pop
add
add
dec
in
in
test
in
rcr
or
xlat
in
or
cmps
scas
in
dec
icebp
jno
cmps
and
mov
mov
pop
dec
or
lods
xchg
test
test
or
or
je
mov
addr16
pusha
or
rol
rol
dec
push
test
fdiv
mov
add
mov
sbb
push
add
cli
scas
cmp
adc
pop
pop
pusha
dec
mov
lahf
push
inc
movs
inc
push
cmp
aad
add
shr
(bad)
fiadd
add
mov
loop
jmp
enter
stos
add
aam
adc
mov
inc
and
call
sub
pop
test
xor
outs
les
sbb
or
out
xchg
idiv
sub
cld
add
add
pusha
xchg
cmp
pop
arpl
inc
mov
retf
mov
mov
ret
pop
daa
xor
(bad)
push
lds
jae
mov
mov
test
jo
jmp
test
mov
cmp
inc
arpl
sbb
push
mov
dec
cmp
cwde
or
pop
test
test
mov
inc
dec
jne
xchg
fist
sbb
rol
mov
mov
pop
pop
mov
or
sbb
daa
jbe
add
dec
push
retf
pop
pushf
xor
and
xor
std
mov
inc
jecxz
das
mov
retf
add
jb
adc
mov
jbe
cmp
rol
or
(bad)
cmps
pop
inc
pop
adc
sbb
rol
and
inc
fdivr
sti
xor
mov
dec
mov
and
xor
add
and
adc
jne
js
ins
cwde
or
xor
fs
or
aaa
cmp
movs
mov
add
dec
imul
fld
fist
pop
inc
inc
pop
inc
ret
adc
scas
xchg
xor
push
leave
cdq
ss
fmul
test
movs
xchg
in
(bad)
fild
aas
call
mov
adc
mov
call
and
dec
arpl
mov
jmp
adc
push
push
xchg
fist
or
add
inc
push
enter
ins
add
inc
mov
jbe
mov
jge
mov
add
xor
push
xchg
loope
mov
inc
or
aaa
cmp
popf
pop
inc
add
push
inc
jne
aas
or
aas
rol
xchg
or
add
loopne
inc
popa
add
test
arpl
add
xor
and
sbb
sbb
add
test
dec
and
ins
and
sub
inc
xchg
xchg
lea
inc
cmp
rol
push
push
push
rep
mov
dec
pop
mov
mov
lock
mov
(bad)
and
adc
adc
push
loop
xchg
dec
pop
jle
fs
loopne
cmp
scas
movs
enter
data16
repz
jo
adc
jo
cmp
adc
(bad)
pop
nop
mov
pop
rol
adc
push
out
jg
imul
or
loop
rol
jns
ffree
fcom
popf
mov
add
dec
test
rol
shr
pop
stos
mov
push
add
loop
or
pop
add
sbb
inc
ins
jno
mov
nop
ds
mov
dec
fs
mov
shr
jge
rcl
ins
stc
int3
psubd
loop
sub
jl
jo
jmp
or
sbb
pop
test
jge
xor
icebp
(bad)
cmp
arpl
fcom
stos
add
movs
adc
adc
sbb
inc
lds
imul
ss
or
xchg
mov
mov
aam
ret
repnz
mov
or
or
das
sbb
stc
mov
pop
movs
aam
pop
aas
adc
and
xchg
shl
inc
and
jge
or
ret
push
sub
in
sbb
outs
add
loop
xor
jns
mov
push
(bad)
adc
fs
and
inc
add
inc
sub
aas
rcl
dec
ffreep
add
ds
std
cmp
pop
(bad)
das
cli
push
leave
cmp
stc
pop
adc
out
jp
loop
ret
test
xchg
pop
adc
rcl
adc
pop
add
pop
pandn
push
mov
sbb
xchg
xor
pusha
out
icebp
push
fnstcw
or
add
adc
pop
loope
sbb
sbb
inc
js
dec
dec
mov
dec
mov
arpl
shl
pop
sbb
cmp
dec
cmp
or
leave
mov
in
add
push
inc
push
mov
push
pop
fisub
dec
fist
outs
leave
loope
mov
cmps
adc
hlt
sbb
add
jp
(bad)
icebp
sbb
add
push
xchg
add
push
cmc
nop
push
nop
cmp
sub
or
add
sub
push
mov
ffree
pop
pop
cs
dec
fsub
aad
mov
and
and
fdiv
push
cwde
call
or
dec
inc
mov
cmp
xchg
or
aaa
mov
pop
dec
mov
and
mov
xor
add
lods
mov
cmp
push
int3
sbb
inc
jg
sbb
popf
fbld
inc
lds
pop
inc
in
add
pop
mov
dec
dec
fmul
ror
arpl
cdq
push
lods
test
or
inc
jl
stos
pop
add
and
xchg
in
fimul
jae
sbb
sub
sub
aam
mov
sub
js
test
ret
add
hlt
mov
popf
ror
iret
in
popa
sar
sbb
xchg
or
out
pop
not
dec
add
sbb
shl
adc
in
adc
(bad)
in
add
push
scas
fs
ror
(bad)
and
xchg
add
or
jg
test
out
sbb
rcl
add
add
push
push
mov
sub
sub
push
push
xchg
add
mov
movs
jo
in
push
adc
lods
pusha
add
pop
mov
ins
retf
and
adc
add
cmc
arpl
add
push
jo
add
cmp
mov
jmp
mov
loopne
call
add
loopne
in
loopne
sbb
sbb
fld
or
out
mul
and
sub
add
inc
or
fld
push
div
or
adc
xlat
inc
movs
pop
push
and
loopne
inc
dec
xor
sub
or
imul
push
mov
popa
cmp
inc
inc
in
and
test
xor
enter
aad
or
mov
je
repnz
mov
and
ins
adc
mov
dec
adc
add
mov
inc
mov
xchg
ret
das
mov
movs
cmp
cmp
mov
add
movs
mov
fadd
jo
push
shl
leave
inc
sbb
sub
stc
shr
pop
add
add
pushf
retf
pop
sbb
pop
pop
and
adc
cld
(bad)
add
cdq
cwde
gs
shl
sbb
dec
les
cdq
sbb
clc
pusha
xor
lahf
push
ret
fcmovbe
xor
add
mov
mov
mov
push
popa
adc
cmps
mov
or
lahf
inc
pop
ret
inc
dec
mov
arpl
mov
add
test
pop
fisttp
sub
mov
xchg
fiadd
mov
je
or
sub
pop
scas
xchg
xchg
or
test
xor
rol
popf
les
mov
cmps
jl
push
aas
or
shl
repnz
xchg
gs
sub
xchg
inc
stc
or
das
inc
jle
ja
movs
and
sbb
dec
mov
test
sub
dec
sbb
jno
sti
mov
mov
xchg
mov
fdivr
jg
dec
nop
add
add
xor
fld
dec
sub
mov
dec
adc
and
retf
mov
mov
push
add
imul
push
sbb
stos
dec
loop
mov
mov
adc
and
sub
outs
cmp
outs
aas
or
and
and
add
push
mov
cmp
lea
inc
or
jo
nop
mov
adc
sbb
add
inc
jmp
mov
dec
das
mov
push
adc
and
adc
ret
std
inc
mov
cmp
dec
add
or
adc
add
add
add
mov
imul
pusha
pop
push
not
in
retf
pop
popa
mov
sub
fmul
js
mov
cmp
jbe
sub
mov
stc
xor
push
inc
arpl
inc
sbb
cmp
sub
jnp
in
dec
cli
lahf
cmc
xchg
jno
and
ja
pushf
add
mov
sub
movs
or
inc
sbb
out
js
push
push
xchg
sti
pushf
aad
pop
jnp
or
push
push
dec
fmul
add
mov
and
fiadd
leave
or
mov
les
sqrtps
ret
cmc
pusha
loopne
mov
push
rol
add
in
add
mov
cmp
imul
div
add
sbb
xor
leave
push
shr
sbb
xlat
add
add
push
jmp
movs
mov
nop
cmp
ret
es
push
mov
dec
mov
lahf
or
xchg
cmp
add
add
push
and
push
cmp
test
inc
or
repz
pop
lahf
rol
(bad)
mov
push
adc
sub
xchg
sbb
add
pop
dec
add
mov
adc
test
jae
arpl
cmp
add
adc
test
dec
loopne
inc
mov
aas
push
pop
inc
jo
lds
test
jmp
mov
ins
call
pop
inc
fwait
pop
imul
test
fwait
push
or
aad
and
cmps
jo
jno
inc
xchg
adc
pusha
xor
ret
xor
aaa
sub
push
or
push
in
jle
mov
aaa
jo
sub
nop
lock
adc
dec
xchg
nop
out
les
pop
es
inc
out
movs
jbe
cmp
pop
or
test
xor
(bad)
test
push
mov
cmp
sbb
push
or
add
xchg
and
inc
popa
sub
stc
scas
adc
shr
and
dec
test
mov
out
cwde
mov
mov
add
mov
test
xchg
add
fwait
fs
adc
mov
add
dec
cwde
ins
or
mov
mov
xchg
cwde
inc
sub
sbb
popf
sbb
inc
inc
jnp
sub
scas
aaa
mov
lods
mov
mov
and
adc
xchg
imul
and
adc
sbb
and
pop
aam
mov
fwait
inc
aam
push
mov
adc
pop
lds
or
jb
rol
jne
ret
fsub
or
mov
es
lock
adc
mov
or
push
rol
mov
inc
or
(bad)
ror
and
enter
nop
dec
ror
push
or
rcr
and
cmp
cmp
xchg
mov
jo
(bad)
mov
cmp
jne
add
sbb
jo
ins
xchg
clc
enter
cmp
cli
inc
push
fistp
call
inc
or
jno
movs
je
mov
dec
mov
mov
inc
inc
mov
push
dec
or
and
test
sub
js
mov
push
repnz
aaa
retf
inc
mov
clc
add
add
mov
or
push
nop
adc
fbld
sub
pop
push
test
int3
fild
or
inc
sbb
int3
xchg
pop
retf
icebp
cmps
push
sub
push
stc
push
pop
jnp
ins
test
mov
ret
add
dec
aas
and
and
call
in
cmp
jecxz
mov
aad
dec
or
push
adc
jmp
or
or
(bad)
adc
or
ja
adc
js
cmp
xor
imul
or
inc
add
add
add
cwde
xor
add
adc
inc
cmp
cmps
and
and
or
add
add
xchg
sbb
mov
or
dec
add
add
dec
jl
add
or
pop
les
xor
jo
push
mov
test
mov
jmp
mov
retf
xchg
add
add
sbb
add
pop
pop
inc
add
push
inc
in
add
cmp
mov
xor
inc
ins
icebp
in
jmp
pop
dec
push
loopne
add
adc
or
sbb
xor
or
je
add
and
sbb
inc
fidiv
inc
clc
shl
ja
add
stc
and
push
pop
rcl
xchg
pop
inc
mov
scas
add
lock
hlt
aad
or
mov
or
sti
inc
(bad)
pop
wbinvd
jmp
adc
leave
nop
push
add
ucomiss
xor
cmps
mov
ins
cmp
jno
push
test
imul
sub
outs
and
mov
sub
pop
add
cs
mov
jle
sub
xor
xor
je
es
pop
push
jle
push
push
cmp
pop
mov
mov
xchg
test
sub
das
mov
ja
inc
fs
aaa
xchg
test
rol
adc
pop
fadd
pop
pop
mov
add
movs
fild
push
cdq
dec
test
push
mov
mov
xchg
add
jmp
push
and
rcr
mov
cmp
mov
push
ret
sub
dec
inc
inc
fisttp
lock
lea
mov
ret
sub
or
lds
push
shl
dec
inc
ins
and
gs
add
sbb
or
add
les
mov
adc
add
leave
ror
and
cmp
and
jg
lahf
icebp
mov
push
imul
wbinvd
jne
or
push
test
or
inc
add
js
sbb
push
dec
pop
fist
ins
enter
add
dec
aas
inc
nop
adc
dec
push
sbb
inc
xor
inc
adc
pop
aas
fbstp
jns
loope
int3
sbb
inc
xchg
jo
or
sbb
sbb
and
mov
sub
sbb
sub
inc
pop
fisttp
ffreep
xor
inc
or
push
movs
adc
adc
adc
push
jge
inc
sbb
add
lods
push
inc
sbb
leave
add
pop
push
sbb
mov
pop
push
sub
rol
pop
loopne
adc
popf
push
inc
pusha
add
add
cwde
or
add
sbb
dec
cmps
push
js
in
in
pop
adc
pushf
push
dec
push
or
pop
cld
pop
cmps
test
pop
test
cdq
shl
test
mov
mov
pop
enterw
adc
aas
ss
lahf
pop
sub
adc
int3
lahf
ins
ret
or
adc
lahf
pop
mov
adc
outs
or
test
sbb
add
ret
adc
adc
or
fcomp
test
rcr
sub
push
or
inc
fisttp
jl
mov
enter
jae
mov
and
mov
mov
xor
and
sub
xchg
lea
popa
add
push
add
add
add
lods
mov
pop
stos
add
cmp
sub
xor
adc
and
clc
mov
pop
pop
sbb
enter
inc
adc
es
lahf
or
sub
xlat
inc
adc
jmp
mov
push
mov
sub
hlt
adc
adc
pop
fimul
imul
xchg
fs
cmp
add
mov
xor
pop
push
or
fs
rol
repz
xchg
fs
fdivr
movs
sbb
add
jns
and
fnstsw
sub
and
inc
sbb
or
and
xchg
icebp
out
int3
mov
jb
and
int3
and
inc
and
or
and
and
gs
pop
ret
aaa
adc
inc
cli
lea
pop
dec
xchg
mov
adc
push
sbb
adc
inc
and
inc
jo
push
(bad)
mov
mov
fs
add
or
lea
cdq
popa
dec
sbb
adc
leave
inc
add
(bad)
push
scas
enter
xor
push
dec
mov
(bad)
and
or
lahf
push
loope
pop
inc
ffree
pushf
push
or
ins
dec
jmp
adc
and
push
sub
mov
movs
dec
loope
sti
fadd
sub
mov
loope
shr
(bad)
sbb
mov
je
rcr
inc
shl
pusha
add
jg
dec
inc
or
mov
inc
sub
mov
add
(bad)
mov
mov
and
cmp
adc
in
add
lods
dec
mov
lea
xchg
push
scas
aas
add
dec
lahf
add
lahf
lahf
dec
xchg
and
sbb
inc
and
sub
pop
push
or
mov
fs
add
rcr
or
enter
fs
add
jmp
rol
add
or
pushf
aas
push
xchg
cld
enter
inc
sub
in
push
sub
int3
jno
mov
mov
sbb
adc
mov
sbb
and
fild
sbb
sbb
adc
cld
js
push
dec
pop
call
add
pop
inc
sbb
fdivr
sbb
or
push
mul
sbb
lahf
nop
cmps
push
inc
sub
ret
pop
add
mov
ret
packsswb
pop
ins
sbb
pop
or
adc
push
and
mov
add
pop
das
dec
jecxz
sub
pop
push
push
popa
xor
and
sbb
leave
nop
or
xlat
add
js
pop
pop
pop
dec
or
sub
xchg
test
and
push
ffreep
dec
pop
xor
jecxz
adc
lods
xchg
clc
rep
movs
mov
leave
pop
or
mov
or
fdivr
push
add
adc
mov
sbb
sbb
sub
fdiv
sbb
jo
mov
dec
push
sbb
mov
nop
loopne
fistp
cmps
loopne
aas
pop
das
scas
or
adc
lahf
dec
lds
call
rol
mov
std
sbb
ror
(bad)
ins
fdivr
sbb
and
xchg
add
pusha
mov
fcomp
lea
xor
mov
call
add
mov
mov
test
xchg
sub
mov
add
cdq
jg
loope
mov
inc
adc
sub
sub
test
mov
rcl
mov
enter
dec
(bad)
sbb
sub
fcomp
mov
fmul
fsubr
mov
jb
dec
scas
jne
rcr
rcr
sub
mov
add
jnp
xor
pusha
or
mov
sub
int3
adc
jo
cmp
movs
push
adc
scas
popa
jl
pusha
or
add
iret
aam
aam
sub
and
jns
lock
call
jl
loopne
push
cmps
mov
lea
shl
dec
inc
inc
or
inc
test
pushf
inc
in
test
push
inc
push
shl
push
aaa
or
add
pop
in
rcl
dec
ins
imul
pushf
sub
adc
sbb
adc
mov
inc
imul
and
mov
pop
sbb
cmps
test
loopne
nop
sbb
xor
sub
pop
ss
scas
call
sbb
add
into
fdiv
inc
inc
pop
or
popa
popa
jmp
jno
add
ret
or
ret
loope
inc
mov
mov
pop
mov
push
add
call
call
cmp
jo
add
push
jmp
cs
sub
cld
sbb
push
xchg
aas
mov
sbb
lea
sub
xchg
test
jg
dec
xor
movs
xchg
call
or
pop
mov
sub
xor
sbb
test
mov
push
xor
dec
cmp
sub
pop
xchg
xchg
push
jne
adc
stc
push
mov
pop
mov
or
aad
push
fldcw
pop
dec
lea
mov
pop
imul
adc
in
push
and
cwde
out
dec
in
shl
pop
xor
push
add
or
push
xchg
lods
test
mov
mov
in
lods
push
movs
pop
inc
inc
call
test
mul
push
sub
mov
jbe
push
movs
test
enter
shl
sub
(bad)
push
fs
addr16
add
adc
movs
test
push
aaa
mov
test
add
rcr
jg
inc
mov
call
add
sub
dec
push
jo
gs
loope
adc
sbb
add
(bad)
or
push
ror
rcl
cmc
movs
xor
add
xor
test
add
xchg
inc
loop
push
lea
les
mov
xchg
mov
mov
sub
jno
or
mov
and
mov
add
mov
xchg
movs
ret
fistp
clc
mov
and
adc
jmp
test
loope
sbb
ror
inc
push
add
jne
daa
cmp
and
push
jb
sbb
add
cmps
mov
jnp
xchg
mov
push
cmp
bound
xchg
fmul
cmps
pushf
jl
test
jno
cwde
cmp
dec
jle
mov
and
or
pusha
dec
xor
std
mov
nop
inc
nop
push
cmp
ins
push
mov
push
xchg
mov
mov
mov
add
push
mov
cmps
dec
inc
inc
jg
sub
adc
pop
push
js
js
push
ret
and
vfrczpd
xchg
or
add
mov
sbb
sbb
sub
add
daa
push
ret
rol
jmp
add
loopne
dec
fcomp
(bad)
ret
loopne
push
cld
inc
lock
xlat
adc
jg
cmp
jecxz
je
gs
cmp
or
in
or
sub
or
pop
mov
mov
push
dec
scas
xor
add
imul
dec
fwait
dec
fwait
mov
mov
popf
dec
test
icebp
cs
and
movs
dec
sbb
push
inc
lods
xchg
xchg
sbb
stc
push
xchg
sub
mov
lea
or
cmp
add
sub
stc
xor
mov
ror
or
xchg
jae
pop
add
movs
xchg
add
sbb
pop
pop
mov
test
cmp
bound
xor
mov
and
loopne
scas
fnstenv
dec
add
imul
lods
addr16
dec
fbld
add
je
sub
pop
popa
jb
sub
cmps
(bad)
dec
lea
pop
fbld
inc
xchg
or
mov
(bad)
and
jae
(bad)
(bad)
in
push
pop
adc
cld
cld
adc
push
test
add
mov
add
jo
jmp
outs
fiadd
xor
dec
or
rol
add
xor
add
or
mov
push
(bad)
cmp
pop
pop
adc
adc
xor
dec
sub
test
fistp
push
push
test
aam
repz
jmp
sbb
iret
pop
fs
fs
test
test
dec
dec
dec
cmovge
lahf
scas
daa
inc
std
inc
(bad)
xchg
add
add
or
repz
or
das
cmp
sub
popa
and
or
and
shl
xchg
sub
mov
pop
sub
mov
push
mov
push
cmp
xchg
dec
or
adc
arpl
sbb
ja
test
and
(bad)
mov
and
mov
test
pop
sub
add
pop
or
jo
or
and
push
ins
add
jo
lods
fwait
add
adc
add
in
xchg
(bad)
call
inc
and
jno
leave
adc
adc
movs
inc
add
adc
xchg
inc
jmp
adc
mov
jno
rol
add
inc
xchg
push
sbb
add
add
mov
pusha
mov
pusha
stos
shl
(bad)
xor
mov
shl
fnstsw
pop
ror
and
ins
ins
mov
jo
or
lea
jb
xchg
add
dec
add
sub
dec
or
push
mov
add
(bad)
add
add
les
mov
mov
jg
js
fisttp
aaa
pushf
xchg
jmp
add
or
inc
cmp
int3
out
cli
mov
jb
or
movs
loope
add
or
push
mov
rcl
xchg
inc
call
sub
mov
dec
int
mov
mov
aad
dec
shl
lock
lods
push
iret
movs
push
or
mov
movs
out
imul
or
mov
movs
jo
arpl
inc
adc
and
dec
daa
fisttp
mov
xor
popa
dec
pop
pop
stos
or
das
sbb
dec
add
rcl
xor
or
imul
dec
and
popa
(bad)
mov
mov
jl
sub
or
or
sbb
and
rcl
add
add
lahf
ins
mov
inc
rcl
movs
adc
imul
mov
je
outs
or
fwait
jbe
adc
cmps
push
jnp
arpl
aad
cld
ret
xchg
xchg
ror
push
clc
sar
lea
pusha
lods
xor
xor
pop
dec
or
rol
mov
push
(bad)
push
push
fst
jo
loope
lahf
dec
cmp
or
add
fdiv
adc
inc
rol
or
cmp
and
and
rol
sqrtps
aas
dec
pop
js
pop
fbld
xor
sub
fs
mov
fdiv
mov
or
jmp
cdq
sti
jno
es
push
add
pusha
sbb
pop
xor
sbb
popa
fs
fs
or
cmps
jmp
add
mov
test
or
pusha
lds
jno
call
pusha
sub
adc
adc
std
fcmovne
push
loope
fs
fs
cmps
xchg
dec
ins
push
cmps
mov
inc
(bad)
rcr
adc
dec
in
push
icebp
pushf
mov
cmp
pop
test
jmp
push
push
mov
sbb
imul
sbb
cmps
xor
pop
adc
repz
push
dec
sbb
cmp
jno
mov
shl
or
test
and
and
sbb
stos
clc
cmp
(bad)
sub
jno
mov
fstp
jg
mov
and
test
cmps
sbb
cmps
sub
and
adc
sub
jne
fadd
fcom
and
test
push
bound
or
rol
pop
add
dec
dec
ins
sub
add
sub
xor
inc
or
inc
sub
xor
push
mov
sub
push
fcom
nop
inc
push
stc
push
lods
push
pop
jnp
push
cmp
jge
and
cmp
nop
cmp
or
ins
dec
lock
add
xchg
add
mov
inc
pshufw
lea
call
push
pusha
dec
or
mov
loope
or
inc
inc
lds
int3
adc
xor
or
mov
or
inc
add
push
adc
pop
push
xchg
mov
sub
test
sar
inc
inc
mov
gs
shr
dec
icebp
jne
shl
adc
mov
jns
jo
cli
jno
(bad)
mov
add
out
sub
inc
ret
mov
push
and
inc
mov
push
add
push
push
cwde
ret
jmp
adc
inc
dec
mov
jmp
mov
mov
mov
pop
add
jne
(bad)
leave
add
adc
adc
push
std
and
and
cdq
pop
das
inc
or
mov
or
or
cmp
test
stos
xlat
enter
cmp
cmp
inc
xchg
or
sbb
int3
xlat
push
rcl
sub
int3
aas
adc
add
mov
mov
aas
inc
add
fisttp
test
movs
or
add
and
lock
adc
add
jge
(bad)
rcr
lock
test
or
cmp
not
mov
test
and
test
sbb
mov
adc
sbb
add
shl
dec
push
adc
and
ja
and
clc
jmp
enter
fwait
je
xchg
int3
nop
add
and
and
fist
xor
addr16
sub
add
clc
ret
call
xor
(bad)
test
jg
hlt
or
and
cmpxchg
je
push
and
mov
sar
cmps
and
cmp
sahf
std
inc
mov
bound
shr
fadd
loopne
mov
jae
add
or
add
mov
test
pop
in
jmp
and
inc
ins
push
out
in
rcl
sub
xor
adc
call
ret
int3
loope
add
push
inc
rol
push
and
les
(bad)
jmp
pop
push
or
and
in
mov
lods
fwait
pop
push
sbb
push
push
repnz
je
cmp
push
dec
int
inc
mov
in
sub
sub
imul
dec
test
add
mov
push
dec
retf
push
push
shl
fcom
add
sti
sub
mov
mov
addr16
or
push
add
test
pop
lea
mov
nop
mov
jno
jl
aam
add
jmp
out
inc
pop
jne
pop
push
ficomp
inc
dec
aas
mov
scas
sbb
adc
add
or
mov
sbb
add
pop
xchg
mov
xlat
or
add
jmp
sar
les
lods
push
test
add
xchg
push
lahf
cmp
call
sbb
push
dec
loopne
(bad)
push
and
adc
and
add
or
cmps
sbb
push
fucomip
fs
inc
adc
and
push
or
mov
bound
mov
cmp
jg
add
inc
lods
cli
(bad)
jmp
lahf
fcom
add
lock
push
cmp
adc
push
jno
data16
jge
or
or
pushf
push
sbb
push
arpl
rcl
or
jnp
mov
cmove
add
inc
dec
adc
jmp
dec
rol
test
mov
xstore-rng
cmps
add
or
cmp
lock
dec
add
add
test
mov
out
aam
or
sbb
movs
add
jecxz
mov
sti
jecxz
pop
sub
add
jmp
push
xor
dec
imul
jmp
ret
ins
fwait
adc
popa
fxch
xchg
(bad)
(bad)
ja
add
or
pop
fmul
push
cmp
(bad)
pop
or
mov
pushf
push
mov
int
lea
jl
and
stc
sbb
cmp
outs
mov
sub
out
inc
jo
icebp
jno
pushf
clc
push
mov
rcl
aad
fmul
mov
cli
jnp
dec
rol
or
add
jb
mov
sbb
je
(bad)
fcom
(bad)
out
fst
adc
nop
xchg
nop
xchg
mov
test
in
ret
rcl
inc
xlat
adc
inc
cmp
movs
je
mov
retf
mov
jne
loopne
mov
lock
inc
xchg
mov
sub
aad
je
push
adc
shl
lods
test
pushf
pop
mov
sti
lock
stos
test
push
int3
fwait
dec
loope
in
jmp
or
sub
inc
ds
add
jle
lods
jo
jo
pop
sub
or
inc
add
daa
mov
popf
jb
lods
push
out
sti
iret
push
ins
or
cs
push
test
dec
scas
cli
(bad)
inc
ds
cmp
pop
sub
mov
nop
rol
inc
xchg
xorps
and
inc
add
ins
cli
retf
add
and
popa
and
and
bnd
push
cli
(bad)
nop
je
cli
xor
in
repnz
adc
imul
out
pop
mov
or
xchg
push
and
cmpxchg
and
or
push
int3
mov
pusha
mov
(bad)
dec
pop
test
fld
js
inc
pop
pop
popa
mov
mov
mov
adc
mov
mov
dec
inc
add
jmp
xor
xor
xor
xor
inc
sub
mov
mov
pop
je
mov
pop
inc
daa
jb
rol
enter
popa
(bad)
in
adc
shl
push
sub
sub
stos
(bad)
(bad)
adc
movs
jo
lds
out
mov
add
xchg
cmc
adc
popa
jno
or
lahf
pop
jbe
ret
inc
add
jmp
aad
int3
add
nop
dec
or
test
mov
jge
or
and
call
mov
call
aaa
add
jnp
adc
jecxz
and
fbld
and
cs
xchg
add
leave
mov
fld
ret
or
test
movs
pop
lea
xor
xor
fdivr
pusha
fiadd
inc
mov
mov
sbb
sar
mov
jbe
sub
jl
sub
outs
mov
pop
sbb
and
add
adc
dec
jecxz
mov
push
inc
sbb
cmp
ins
and
push
push
adc
sbb
add
cmps
mov
jp
cs
add
lock
cld
in
jp
mov
rol
add
pop
clc
call
mov
adc
jae
ins
cmp
jne
sti
add
mov
je
xchg
pop
(bad)
xchg
retf
sub
dec
jnp
bound
outs
add
sbb
int3
nop
push
or
nop
shl
dec
shl
call
add
or
mov
test
mov
or
fs
sbb
xor
adc
push
popa
xor
xor
jmp
sbb
rol
sub
sub
lods
movs
push
imul
and
xchg
cmp
shr
xor
mov
pop
adc
rcr
sub
pop
or
mov
push
add
push
ret
push
mov
pusha
adc
sbb
xchg
mov
push
dec
pop
imul
or
pop
mov
push
and
and
int3
and
or
sub
and
fimul
push
add
nop
lods
addr16
les
fnstenv
addr16
pop
and
addr16
mov
cmps
pusha
ins
cmp
mov
sbb
lds
mov
(bad)
xchg
inc
and
sub
les
pop
xor
pop
inc
call
lods
(bad)
or
mov
add
add
pop
mov
cmp
mov
or
and
pop
xor
jne
push
adc
(bad)
push
or
in
push
add
fstp
in
mul
xchg
inc
sub
test
inc
cdq
or
add
mov
rcl
xchg
adc
xor
(bad)
ins
inc
enter
fbld
adc
push
test
add
push
lods
add
sbb
pusha
xchg
lock
mov
inc
cmp
lods
shl
push
add
mov
sbb
add
jns
rol
lods
bound
test
cmp
ins
sbb
or
ret
or
inc
or
dec
mov
cmp
mov
push
push
add
scas
add
mov
ror
enter
add
imul
jns
mov
mov
push
pop
pop
ror
cwde
imul
push
push
xor
inc
lea
xor
sti
nop
dec
leave
jge
fild
or
add
nop
outs
sbb
mov
ins
adc
ficom
fistp
in
shl
jmp
int
jmp
lods
icebp
sbb
shr
ins
and
xor
ins
jge
movs
and
add
mov
daa
push
xchg
inc
pusha
rcr
add
mov
mov
shl
(bad)
xor
pusha
xor
cld
outs
cmp
mov
add
(bad)
in
int3
push
add
popa
(bad)
sar
ror
int3
mov
lods
call
xor
pop
add
push
inc
sub
adc
sub
ror
mov
mov
mov
sub
or
sub
je
les
mov
pop
lahf
xchg
les
loopne
xor
mov
gs
scas
sbb
adc
pop
fadd
in
xchg
push
sub
inc
sahf
dec
in
xor
add
(bad)
loop
jb
jmp
mov
in
sbb
add
in
test
xor
loope
je
mov
push
or
mov
pushf
cwde
dec
add
dec
sub
or
xchg
adc
and
inc
rcr
inc
xlat
(bad)
sub
ret
rol
(bad)
add
(bad)
xchg
pop
xchg
inc
dec
mov
mov
jecxz
dec
jecxz
dec
aad
aad
add
ins
inc
aam
aam
push
push
mov
or
push
add
or
jmp
in
adc
sub
test
test
jb
lods
or
fild
push
pusha
dec
loopne
sbb
nop
fimul
inc
xchg
xchg
(bad)
rol
mov
pop
xchg
jbe
xor
stos
sub
xor
nop
or
retf
pop
in
add
aad
lods
pop
push
cmp
mov
lods
push
pusha
cmp
xor
add
pop
or
cmp
and
or
arpl
les
pop
je
and
inc
cmp
lds
int3
sbb
dec
add
mov
pop
shl
cmp
jne
(bad)
mov
in
jo
dec
mov
inc
sub
fadd
call
gs
mov
xchg
jae
cwde
push
(bad)
(bad)
dec
pop
add
les
sbb
data16
es
add
dec
xchg
sbb
lea
push
adc
out
adc
clc
in
or
cli
rol
jo
push
cdq
xor
shr
pop
test
test
test
add
ror
mov
lods
movs
jne
add
or
(bad)
(bad)
mov
in
jne
dec
test
lds
and
push
daa
xor
or
js
js
ret
and
xchg
xlat
(bad)
jmp
or
add
push
mov
adc
rcl
or
and
add
das
test
jmp
cmp
and
jg
lods
cmp
jo
jecxz
adc
lahf
call
adc
sub
inc
xchg
and
mov
fldcw
pushf
adc
imul
pop
pop
jp
add
xor
test
or
popf
or
(bad)
adc
mov
cmp
add
sub
mov
jecxz
mov
xlat
sbb
enter
dec
inc
pop
mov
jno
pop
adc
sbb
xchg
retf
daa
jmp
outs
pop
adc
pop
and
dec
(bad)
mov
in
aam
inc
inc
repz
sbb
or
sub
cld
pop
inc
outs
call
pop
pop
clc
fist
or
int3
clc
mov
test
clc
xchg
or
and
dec
stc
jg
push
aad
sahf
cwde
adc
xor
cli
pusha
call
adc
pop
pop
jl
pop
cmp
sub
in
and
js
retf
pop
mov
mov
pop
and
push
daa
pop
in
jo
push
add
pop
in
cmp
cmp
in
out
xchg
pop
adc
xor
(bad)
lods
xchg
(bad)
ins
and
jecxz
mov
or
jl
mov
movs
fldcw
jae
add
ds
push
add
sbb
stos
dec
loope
mov
int3
adc
cdq
sbb
pop
sub
lea
inc
xor
push
int
es
rcl
cmps
jg
jno
pop
cmp
xlat
fsubr
adc
in
addr16
nop
sti
sbb
ins
adc
sbb
sub
dec
sub
rol
sbb
inc
cwde
test
or
sub
lock
call
xchg
add
fld
mov
mov
dec
jl
or
sub
jg
xchg
or
sbb
jo
mov
pop
xchg
jae
cmp
daa
sub
test
push
jo
jg
inc
or
rcr
jge
push
add
call
int
aaa
test
arpl
sub
dec
dec
les
cmp
or
sub
jecxz
mov
out
rcr
imul
mov
cmp
inc
cmc
cdq
mov
jbe
dec
add
or
add
clc
pop
mov
jg
popa
(bad)
int
das
cmp
push
xor
or
adc
or
int
test
xchg
cmp
shl
add
mov
adc
sbb
ret
push
cmps
jg
jo
ss
loopne
inc
ins
gs
pop
test
test
jae
aas
inc
add
fadd
sbb
ret
loope
or
out
test
pop
xchg
sti
fcom
add
pusha
xor
adc
popa
call
or
out
or
jo
out
je
xor
pushf
xor
pop
add
xchg
test
mov
add
test
fld
mov
pop
mov
jbe
sub
add
sub
dec
adc
add
ja
xor
sub
mov
adc
xchg
in
adc
inc
pop
data16
push
ds
push
imul
fcomp
ficom
jne
mov
leave
loopne
in
xchg
push
dec
aam
xchg
loope
xor
scas
or
inc
aad
inc
inc
popa
or
aas
add
sub
call
xchg
inc
mov
jnp
out
or
(bad)
adc
push
add
push
repz
push
xor
push
mov
adc
xchg
or
xchg
xlat
lods
pop
dec
and
jg
pop
xor
rol
add
xor
cmp
jle
inc
mov
dec
rcr
pusha
lock
or
push
cmc
lock
push
(bad)
fcom
shl
rol
or
dec
pop
jg
outs
adc
xchg
push
inc
mov
fiadd
pop
imul
jl
call
ret
cmp
lods
jnp
mov
lock
mov
and
stos
push
aas
out
sbb
xchg
inc
add
push
out
pop
mov
inc
sub
fisub
int
sub
mov
dec
xor
or
adc
ins
pop
xor
xor
add
xchg
mov
sub
loopne
movzx
mov
inc
or
sub
jg
xchg
or
jg
inc
or
inc
daa
inc
add
dec
cmp
jno
pop
push
mov
dec
add
mov
inc
inc
inc
aaa
mov
pop
jg
mov
pop
lea
sahf
(bad)
jl
mov
sub
pop
adc
dec
xchg
adc
mov
add
mov
or
adc
adc
jge
pop
sbb
cmps
or
xor
mov
je
fwait
push
mov
stos
(bad)
rcl
inc
inc
hlt
add
add
mov
ja
pop
nop
nop
sub
adc
nop
nop
adc
pop
mov
push
jp
dec
jg
mov
adc
pusha
sbb
adc
add
pop
shr
add
mov
sub
add
clc
ficom
and
(bad)
stc
push
mov
out
test
imul
dec
or
inc
mov
mov
push
cmp
loop
xchg
cmp
push
ins
not
pop
jmp
push
push
pop
push
out
xchg
leave
inc
test
push
cwde
push
or
lods
out
das
inc
xchg
inc
sub
mov
adc
clc
cmp
xor
or
lods
add
adc
sbb
pop
sub
sub
cmp
bound
jg
lahf
cs
jo
cld
sub
xchg
mov
outs
cmps
dec
pop
push
sbb
push
xor
ja
xchg
add
adc
jb
push
mov
fist
stos
push
ja
add
lds
stos
fild
add
add
pusha
jecxz
test
add
jb
repz
dec
dec
pusha
sub
inc
imul
xchg
mov
or
sbb
or
or
pop
jg
fwait
dec
cmps
stos
sbb
retf
sti
aad
mov
dec
push
fdiv
addr16
and
sub
adc
or
sub
xchg
push
inc
gs
sbb
xchg
dec
lea
push
mov
pop
rcl
jo
mov
movs
das
add
add
inc
adc
mov
jne
lods
xchg
jae
or
pop
add
adc
add
mov
cmp
jns
and
or
sub
mov
or
sbb
mov
(bad)
mov
mov
mov
mov
imul
test
jg
inc
pop
add
push
and
or
pop
mov
and
ss
aaa
pop
adc
test
adc
jecxz
pop
mov
or
enter
sar
sbb
fwait
ror
mov
cmps
lea
test
mov
adc
mov
ja
dec
jecxz
fld
mov
add
sbb
ret
call
inc
cmp
nop
ret
clc
nop
and
jmp
xchg
sbb
inc
jo
pop
dec
adc
repnz
ret
fimul
stos
and
test
call
sbb
cmp
or
aas
movs
pop
dec
mov
xor
inc
das
pop
xchg
jg
cs
movlps
pop
mov
and
or
mov
mov
jno
xchg
inc
pop
jg
mov
scas
push
aaa
or
mov
adc
pop
ins
adc
popf
and
call
mov
shr
xor
xchg
push
or
adc
pop
add
jmp
sbb
add
jmp
add
add
add
sbb
or
pop
or
pop
cmp
dec
cmp
sbb
add
or
pop
pop
or
sar
pop
adc
xlat
xchg
test
add
jp
ret
pop
adc
(bad)
inc
(bad)
pop
push
add
push
rcl
dec
xor
fisubr
push
jl
add
pop
mov
add
inc
leave
iret
push
and
and
add
xor
pop
adc
pop
adc
pop
mov
jno
and
or
jg
and
or
dec
fcmovu
push
ins
add
adc
in
pop
test
push
fist
push
cmp
fucomip
jge
jo
mov
aam
fmul
sub
mov
in
push
add
dec
cmp
bound
lods
adc
scas
pop
mov
dec
sbb
rcr
fs
or
int3
gs
and
(bad)
fcom
add
jg
mov
adc
cmp
test
inc
xchg
adc
xchg
cmps
lahf
adc
add
retf
shl
sbb
aas
or
adc
inc
push
sub
or
or
mov
mov
pusha
xchg
lods
mov
mov
add
cmps
pop
xchg
cmc
mov
or
pop
test
sbb
pop
dec
lock
push
mov
pushf
xchg
mov
mov
dec
pop
stos
dec
sub
pop
es
inc
and
adc
pop
pop
lods
(bad)
ins
push
sub
unpcklps
pop
scas
lds
pop
push
fld
pop
mov
or
inc
push
ins
pop
stc
cs
adc
ins
push
pop
add
push
sbb
inc
aas
dec
mov
mov
cdq
cmp
cmp
adc
or
pop
jns
pop
lods
cmp
add
push
sub
pop
lds
mov
adc
jmp
mov
sub
ja
in
or
mov
push
sti
or
rcl
xchg
sahf
jl
pop
sub
jmp
(bad)
jmp
inc
dec
fcmovnbe
stos
push
pop
in
test
adc
pop
push
test
enter
je
sbb
pop
cli
sub
and
ins
mov
(bad)
push
bound
(bad)
sti
pop
(bad)
dec
aam
ss
add
aam
mov
pop
cli
scas
mov
shr
leave
inc
rol
sar
jmp
adc
push
rcl
mov
jo
xor
adc
(bad)
cmp
mov
lea
pop
jg
cmp
xchg
jg
xchg
cmp
xchg
fbstp
mov
icebp
fldcw
rol
mov
pop
and
jo
add
lahf
push
mov
dec
mov
les
out
in
lds
sub
mov
jecxz
movs
aaa
fcmove
inc
loopne
push
fsub
push
(bad)
arpl
sub
sub
dec
aas
mov
push
movs
dec
cmp
int
xor
fsubr
push
or
xor
mov
call
sub
adc
lahf
mov
add
dec
pop
add
adc
(bad)
pop
adc
enter
inc
mov
adc
test
lahf
fwait
mov
sbb
aaa
gs
pop
sub
sub
sub
mov
or
call
xchg
ffreep
sub
xchg
mov
add
and
fsub
sbb
rcr
ja
mov
pushf
add
adc
lahf
add
push
add
mov
test
or
pop
lods
ret
pusha
pop
cmp
mov
in
rcr
sbb
fist
sub
xchg
mov
mov
jo
inc
sub
cmps
popf
rol
push
sbb
adc
cmp
xor
or
mov
fld
sub
xor
nop
jle
inc
(bad)
push
xor
or
lea
out
mov
cmp
sub
sub
xor
stos
mov
or
add
add
add
cwde
ins
fld
adc
ins
addr16
inc
inc
dec
fist
sbb
ret
js
xchg
rcl
push
loopne
xchg
(bad)
fnstsw
call
cmc
push
push
inc
adc
cmp
adc
push
or
xor
es
add
or
cld
arpl
add
add
fwait
inc
mov
test
retf
lods
or
aas
mov
xor
dec
sub
or
xor
cmc
xor
inc
add
pop
push
addr16
(bad)
pop
(bad)
ds
or
jne
adc
sbb
or
cmp
inc
loopne
leave
ret
push
sbb
ds
add
lock
xor
inc
mov
jecxz
mov
sub
and
sbb
fld
xor
cli
push
test
in
pop
fs
and
pop
mov
inc
sbb
add
adc
lods
popa
dec
xor
stc
jno
lock
add
lock
add
pop
adc
jae
or
test
dec
sub
push
lock
cmps
or
cdq
or
xchg
inc
inc
test
add
fcomp
adc
popf
repnz
xchg
or
add
or
adc
add
add
or
mov
or
cli
ror
xor
rcl
in
sbb
sbb
cmp
push
adc
sub
rcr
add
inc
jo
inc
rol
add
adc
and
and
inc
rcr
or
je
sti
cmp
fadd
sbb
enter
adc
dec
jp
(bad)
fdiv
mov
mov
pop
pop
add
add
adc
sub
int3
dec
adc
jmp
or
pop
sbb
out
and
add
xor
jae
test
xchg
(bad)
jmp
jae
xor
mov
arpl
cmp
inc
add
inc
in
js
or
dec
or
inc
pusha
shl
or
test
scas
sub
rcl
pop
int3
dec
fild
jg
sar
adc
loop
push
in
or
adc
adc
jb
rcl
mov
in
and
add
js
rol
push
mov
(bad)
mov
jge
sar
shl
pop
push
scas
sbb
fmul
xchg
sbb
fisubr
pop
mov
inc
(bad)
mov
leave
pusha
add
in
test
xchg
add
in
out
shr
dec
inc
jne
lahf
iret
sbb
shl
xor
lea
push
imul
rol
inc
mov
jp
pop
repz
popa
cmp
mov
loop
or
in
cmp
and
(bad)
or
add
movs
add
pop
inc
add
aam
lds
mov
or
dec
aam
xchg
or
je
or
rol
xor
cmp
and
cmp
rol
or
add
pusha
xor
out
xchg
dec
loopne
xor
inc
mov
retf
xchg
mov
or
nop
or
inc
xlat
vmovntps
adc
cmp
jae
and
ret
sub
sbb
(bad)
hlt
push
xor
daa
data16
or
rcl
cmp
nop
(bad)
data16
inc
imul
je
scas
cwde
rol
sub
les
fdiv
test
push
adc
xor
or
sbb
enter
cmp
into
movs
or
or
mov
cmp
movs
add
add
jne
pop
ret
mov
inc
and
mov
push
(bad)
sbb
mov
les
cmp
xchg
ror
or
add
imul
adc
push
hlt
sub
cmp
xchg
jnp
sbb
or
cmps
adc
push
mov
sar
add
mov
push
add
or
xchg
iret
mov
mov
and
or
outs
adc
popa
mov
movs
pusha
push
std
aaa
loop
sbb
mov
lea
push
test
inc
dec
lock
mov
or
add
xchg
mov
aaa
call
add
push
lock
test
cld
in
cld
mov
mov
fsub
push
jl
xchg
xor
pop
vunpckhps
mov
adc
pop
mov
xor
sar
mov
bound
(bad)
xchg
add
fistp
xor
shl
fldcw
adc
adc
mov
enterw
retf
xor
(bad)
fild
aam
lock
xor
shr
cmp
popa
lahf
jbe
or
cmp
adc
imul
sbb
jo
sbb
adc
aad
xchg
push
hlt
int3
jl
xchg
or
sub
xchg
or
pop
(bad)
and
and
pop
cs
xor
sub
movs
mov
xchg
jmp
rcr
and
jo
pop
push
movs
push
cli
ret
lea
xchg
aam
and
cld
(bad)
rol
add
mov
add
sub
inc
mov
jo
iret
and
sub
push
mov
and
mov
or
and
xchg
or
popa
sub
and
int3
pushf
or
int
xchg
data16
mov
out
cmps
add
add
and
jne
pop
cmc
dec
sbb
xor
shr
lods
cmp
test
mov
xchg
inc
dec
movs
int3
jbe
daa
sbb
loope
jl
and
jmp
mov
push
hlt
and
jno
and
and
push
jmp
dec
xor
jmp
sub
xchg
call
stos
loopne
aaa
jno
shr
sub
and
add
adc
jmp
call
in
pop
lods
adc
and
adc
cmp
cwde
fld
sub
or
mov
shl
std
push
push
add
fcom
fsubr
mov
or
dec
popa
movs
push
dec
mov
mov
jmp
xchg
pop
pusha
mov
popa
lock
and
hlt
or
cmp
adc
and
imul
pop
mov
in
jmp
push
and
or
nop
add
js
push
not
rol
and
sub
jnp
cmp
je
jae
lods
int3
adc
cs
xor
jp
xchg
ret
add
mov
add
and
mov
cwde
push
and
adc
mov
add
adc
(bad)
int
(bad)
fstp
mov
int
inc
or
xchg
hlt
pushf
push
xor
add
in
push
jecxz
inc
mov
jl
inc
xchg
arpl
sbb
xchg
enter
sbb
test
popa
sbb
cmp
and
and
and
clc
jbe
or
pop
ins
cmp
sbb
xchg
mov
xchg
jo
arpl
add
mov
jecxz
sbb
jle
add
into
in
in
sub
nop
mov
iret
jl
mov
dec
add
and
add
add
stos
add
rcl
inc
fwait
aas
add
mov
aas
mov
in
add
loopne
cmp
ja
stos
fld
call
loope
stc
sbb
push
test
loope
jl
xchg
or
mov
sub
test
xchg
mov
test
mov
nop
and
sbb
or
clc
shr
(bad)
shl
push
shl
push
dec
in
add
add
iret
dec
adc
lods
shr
(bad)
sub
ret
popa
int3
sub
pop
push
inc
nop
loopne
pop
clc
pop
cmp
add
adc
or
lock
pusha
pusha
sub
adc
pusha
xlat
dec
jb
(bad)
add
(bad)
in
dec
dec
in
adc
sbb
sub
sub
or
or
or
adc
pop
outs
or
aas
mov
or
into
lea
ins
cmp
push
add
pop
dec
popa
rcr
sbb
cdq
mov
mov
mov
movs
adc
and
jne
adc
in
push
inc
stos
or
adc
fistp
or
imul
and
pop
enter
inc
scas
pop
(bad)
ror
ror
dec
pop
sub
push
add
call
dec
adc
or
jge
(bad)
sbb
sbb
xchg
adc
add
xchg
xchg
adc
repz
inc
loop
shl
sbb
jae
add
mov
adc
mov
(bad)
jle
adc
add
nop
pop
xchg
or
es
(bad)
int3
mov
mov
inc
and
fadd
or
mov
dec
in
sbb
int
inc
and
mov
ins
mov
pop
mov
jae
clc
jne
enter
int3
ret
int3
add
push
scas
pop
or
test
shl
or
das
fcmovb
jne
xor
stos
xor
int3
cmp
jne
dec
ss
mov
clc
mov
pusha
push
inc
add
or
mov
push
gs
clc
mov
or
jne
stos
inc
push
mov
rcr
fst
jg
ror
cs
das
mov
add
fnstsw
das
inc
mov
loope
mov
sub
sbb
sbb
test
ror
adc
call
add
fwait
mov
cs
add
mov
adc
and
adc
push
push
add
or
adc
mov
(bad)
sub
adc
js
jnp
xchg
cmp
mov
lea
sahf
mov
mov
dec
push
(bad)
mov
in
aas
hlt
mov
daa
add
add
test
add
in
out
inc
add
inc
or
dec
adc
or
or
sbb
inc
into
lods
lods
and
rcr
ins
ss
outs
shr
aad
xlat
push
fstp
iret
data16
test
(bad)
loopne
mov
rcl
std
rol
in
lods
push
dec
pop
jno
add
push
and
add
xor
sbb
cmps
xor
lahf
aam
add
lea
jb
add
jo
aam
or
arpl
mov
adc
ins
fld
xor
out
imul
sbb
jp
mov
mov
or
cmps
mov
sbb
xor
mov
mov
sbb
add
loope
popf
add
add
ds
fldcw
aam
fnsave
adc
mov
mov
inc
jecxz
stos
add
and
or
jae
pop
push
fimul
call
xchg
mov
sbb
pop
mov
inc
movs
cli
movs
dec
movs
jbe
not
add
dec
mov
test
retf
or
or
fcom
cmp
add
cmp
cmp
std
xor
imul
or
aas
sbb
mov
xchg
mul
pusha
mov
cmp
xor
add
ins
dec
leave
sbb
add
push
xchg
push
and
xchg
ror
test
inc
lock
je
gs
add
dec
test
aas
mov
scas
test
test
jmp
movs
inc
neg
retf
or
dec
or
stos
sti
xlat
push
add
mov
sub
or
mov
mov
dec
inc
xchg
mov
cmp
hlt
movs
mov
jle
mov
jb
add
xchg
xchg
or
movs
mov
pop
hlt
(bad)
mov
neg
aam
adc
aaa
mov
dec
fldpi
paddusw
sub
sbb
cmp
fs
das
shr
aad
je
mov
mov
ja
je
aam
mov
mov
push
jg
mov
loope
cld
mov
sub
inc
sbb
cmp
push
sub
jmp
cmp
icebp
push
dec
hlt
jo
and
push
cld
jecxz
popf
retf
aam
mov
test
je
repnz
cdq
and
or
daa
and
sub
and
lea
jle
pop
push
cmp
jae
mov
adc
ins
idiv
cmp
test
push
test
(bad)
cmps
xor
add
adc
adc
por
mov
add
cmp
arpl
fs
enter
dec
hlt
call
xchg
pop
inc
add
shl
push
sub
jg
(bad)
adc
test
inc
std
pusha
add
adc
mov
cli
(bad)
cld
sub
movs
shr
xchg
std
cmp
mov
fs
stc
add
dec
imul
dec
push
cmp
xchg
mov
fisub
and
pop
sar
rcl
and
sbb
pusha
push
pop
ror
or
add
or
retf
jb
(bad)
das
sbb
adc
movs
dec
pop
xor
sub
into
pop
test
sar
adc
pusha
pop
clc
mov
mov
xchg
pop
push
clc
push
jmp
sub
ins
sbb
xchg
push
mov
gs
xchg
add
sub
dec
jno
int
loop
data16
or
call
test
ret
add
lock
add
int
ror
rol
int
mov
or
push
shr
xchg
lods
xlat
mov
clc
and
loopne
xor
sbb
jp
cs
inc
movs
mov
cmp
loopne
(bad)
sti
pop
and
and
fcom
adc
inc
cld
jae
pop
mov
les
test
push
add
loopne
les
jmp
push
xor
ret
lahf
inc
sub
or
data16
imul
test
cdq
popa
in
mov
sbb
jns
cmps
and
hlt
and
inc
sbb
push
and
pop
and
ror
fs
push
fadd
test
sbb
add
push
xchg
cmp
sbb
dec
retf
sbb
icebp
aas
daa
loopne
or
push
xor
sub
and
or
dec
in
test
pop
aad
iret
gs
push
push
sub
sti
adc
pusha
or
pop
inc
popf
fsubr
jmp
sub
jp
cld
xchg
sub
mov
pusha
lods
lea
and
pop
push
sbb
or
or
test
push
push
push
sbb
sbb
add
dec
mul
or
xor
imul
shl
fsub
lods
sti
push
mov
xor
jne
push
and
sub
sub
jmp
and
sub
ret
mov
(bad)
fld
pop
add
xchg
adc
push
add
shl
pop
dec
push
pop
enter
sbb
cs
lods
fsub
lds
pop
test
popa
in
xor
or
popa
sbb
(bad)
xchg
movs
in
arpl
or
(bad)
sbb
xlat
int3
daa
xor
jne
pop
mov
(bad)
cli
arpl
jp
lock
jae
mov
or
leave
in
popa
(bad)
jnp
call
push
xchg
adc
ins
shl
pop
add
pop
daa
adc
inc
jge
retf
pop
inc
push
pause
imul
mov
mov
and
or
ror
loopne
pop
popf
(bad)
cmps
push
ror
lods
call
sbb
pushf
add
ficomp
adc
(bad)
cmp
(bad)
and
test
cmp
mov
adc
lahf
push
fisttp
xchg
push
xchg
out
dec
and
es
cwde
push
or
jnp
mov
xor
scas
in
add
mov
iret
xor
or
ror
sbb
or
cmp
into
fsub
in
sbb
popa
or
test
and
add
loopne
sub
repz
inc
nop
jb
fstp
xchg
loop
movs
fcom
push
test
push
(bad)
in
test
sbb
in
dec
inc
loop
push
fst
mov
inc
dec
xor
dec
popf
js
dec
ret
inc
mov
nop
jmp
add
pop
jmp
push
dec
mov
mov
mov
or
pop
cli
fwait
jle
fs
and
mov
adc
jne
sbb
les
hlt
stos
push
mov
cmp
pop
sbb
ret
cmp
dec
and
neg
lods
aas
fcom
das
cld
xor
loopne
dec
cmps
dec
mov
cmps
in
xchg
mov
inc
sbb
and
sub
mov
mov
int
test
and
je
or
and
or
inc
cmp
sub
mov
cmp
inc
femms
pop
jae
sub
(bad)
movs
push
mov
pop
add
fdiv
cdq
push
sub
add
sbb
test
mov
sbb
dec
hlt
sbb
push
mov
sbb
popa
movs
add
dec
cs
mov
or
add
ret
enter
jecxz
or
push
or
xchg
mov
push
adc
dec
inc
pusha
ss
fistp
js
mov
fadd
je
add
push
add
pop
sub
sub
add
cld
loop
or
or
(bad)
push
inc
bound
or
push
pusha
xchg
dec
or
xor
in
or
add
push
dec
or
or
add
aas
xchg
(bad)
js
add
sbb
lea
sub
sub
adc
mov
shl
lds
dec
jno
int
int
imul
fidiv
add
imul
inc
inc
inc
dec
iret
add
dec
add
data16
jmp
rol
sbb
xchg
shl
rcl
inc
sub
ffreep
xchg
add
add
and
(bad)
stc
repnz
jl
shr
push
shl
jg
idiv
sbb
or
ror
mov
test
mov
mov
or
mov
adc
int
inc
stc
cmp
nop
lods
sbb
clc
imul
stc
rcl
mov
inc
ror
push
and
aam
fcmove
or
xchg
and
dec
sub
fs
jbe
lock
push
pusha
or
shl
push
add
add
add
add
pop
pop
or
enter
or
jb
sbb
or
and
lar
sbb
xchg
call
or
cmps
sub
cmc
inc
hlt
adc
adc
jne
hlt
inc
js
sub
icebp
clc
div
sar
clc
mov
or
mov
and
dec
sub
adc
inc
dec
add
(bad)
aad
or
mov
cmp
pop
movs
arpl
push
das
or
(bad)
xor
in
inc
push
lea
add
ins
xor
mov
shr
loopne
push
mov
pop
fist
loopne
call
icebp
inc
push
mov
je
cmps
add
push
sti
pop
stos
loope
bound
push
xor
add
lahf
hlt
mov
int3
clc
cmp
cwde
pop
shl
add
xor
shl
push
aam
je
dec
pop
mov
call
aaa
or
(bad)
sub
or
jne
repz
lock
outs
mov
cmp
and
push
pusha
xor
push
jmp
and
or
push
xchg
shl
jmp
fst
sbb
push
xchg
cld
movd
stc
addr16
movs
or
scas
adc
sbb
or
xchg
and
pusha
div
adc
adc
xor
(bad)
shl
sar
inc
ret
addr16
cmp
ror
sub
je
add
jnp
or
push
push
lea
pop
add
clc
dec
add
and
jo
sbb
sub
sti
gs
adc
or
ficomp
pop
mov
sub
and
aad
clc
xchg
ins
popa
xor
mov
cmp
and
test
mov
sbb
in
cmp
clc
in
or
or
sub
mov
je
das
add
lods
xchg
cmp
add
jne
or
hlt
sbb
or
sbb
jbe
cdq
mov
shl
shl
dec
sar
jp
or
inc
mov
or
bound
inc
pop
sti
add
(bad)
or
and
inc
test
xor
loopne
xchg
add
shr
sbb
add
test
ins
fdivr
cs
jne
pop
pop
xor
test
mov
dec
or
mov
push
push
gs
loop
sub
in
shl
lods
xor
dec
or
inc
pop
or
ret
inc
sbb
add
outs
cmp
into
in
aad
adc
adc
mov
and
iret
xor
add
mov
xchg
xchg
adc
in
call
inc
adc
xchg
cmp
pop
pop
push
adc
and
into
ins
icebp
push
pop
add
std
jne
movs
(bad)
mov
stos
mov
fsubp
cmps
pop
inc
pop
add
pop
add
sbb
sar
(bad)
int
shl
out
data16
je
jae
mov
xchg
retf
add
and
fld
ret
and
inc
or
xor
aad
or
jb
or
imul
cmp
mov
or
push
clc
xchg
lds
jmp
shl
ins
movs
pop
outs
adc
or
mov
mov
lahf
cld
vmwrite
std
lahf
inc
ins
xlat
iret
fild
add
push
xchg
cld
es
pop
add
or
punpckhwd
dec
call
vaddsubps
fadd
cmp
loope
pusha
je
xchg
add
lea
push
sti
mov
add
fistp
cli
add
add
add
add
or
add
jmp
xor
pop
inc
or
adc
jb
add
aam
jno
loope
mov
out
xchg
test
les
xor
or
or
add
hlt
sbb
sub
push
cli
mov
adc
ficom
test
clc
or
add
cdq
or
lods
ins
call
mov
and
out
mov
cmp
mov
loope
pop
add
adc
adc
dec
rol
xchg
add
mov
and
jnp
adc
(bad)
jo
aad
int3
or
aaa
outs
dec
jecxz
sub
dec
ins
int3
stc
mov
or
aaa
xchg
dec
les
(bad)
push
dec
pop
add
add
rol
sub
add
xor
sbb
pop
iret
jmp
imul
mov
frstor
pop
ret
lahf
lods
add
jne
ja
adc
add
mov
mov
mov
test
add
mov
xor
adc
std
mov
aas
stc
or
cmps
les
cmc
sub
aad
xor
add
movs
xor
leave
push
(bad)
mov
xor
pop
dec
or
push
adc
sub
add
aam
push
clc
cmp
popa
cmps
inc
ret
cmp
xor
inc
xchg
adc
or
pop
dec
add
adc
dec
jg
and
sbb
scas
mov
sub
add
push
sbb
mov
es
push
push
cli
rcl
push
cmp
sahf
test
inc
inc
test
mov
jle
add
js
std
mov
sti
add
jns
adc
add
shr
jmp
gs
and
(bad)
jmp
mov
lea
lock
jnp
mov
push
sbb
adc
push
add
dec
test
push
xor
sub
add
push
dec
adc
or
sbb
or
dec
dec
out
dec
adc
std
aas
or
leave
test
test
dec
sar
test
leave
ret
jp
or
daa
adc
les
aaa
and
sbb
(bad)
outs
fsub
mov
jmp
dec
cmps
jp
add
xlat
mov
cmp
sar
jle
loope
ins
inc
dec
or
mov
mov
adc
out
sub
adc
adc
push
pushf
dec
movs
push
or
and
icebp
aam
pop
repnz
aas
je
mov
imul
nop
inc
test
bswap
sbb
push
xor
and
cmps
adc
add
fild
inc
dec
or
push
test
pop
jl
test
sub
pushf
jbe
cmps
hlt
inc
mov
inc
jle
and
add
and
jnp
outs
pop
sub
mov
push
add
add
sar
add
loopne
jg
jne
ror
xchg
inc
or
sbb
loopne
dec
mov
imul
mov
adc
push
and
arpl
mov
dec
sub
(bad)
pop
sar
push
jne
jb
dec
sbb
test
xor
inc
sbb
and
iret
xchg
add
add
scas
add
cmp
mov
or
test
add
mov
ror
mov
ret
push
push
sbb
test
or
pop
out
sbb
mov
add
sar
test
movs
jno
cmps
retf
or
add
jne
jbe
adc
inc
fld
shl
(bad)
aam
inc
call
and
cmp
cmp
arpl
inc
in
jmp
xchg
fdiv
pop
mov
enter
adc
and
jne
sbb
or
cdq
jge
and
inc
mov
in
loope
inc
jb
call
xor
mov
jae
push
leave
ror
or
adc
jmp
push
xor
add
sbb
jl
dec
sbb
add
push
daa
inc
inc
and
test
inc
rcr
push
nop
inc
rcr
aad
mov
jns
test
out
adc
push
and
retf
call
xor
pop
mov
jno
in
shl
movs
and
or
add
push
int3
mov
inc
stos
loope
addr16
mov
and
xchg
pushf
call
(bad)
and
or
mov
add
push
mov
test
cs
pop
loope
movs
mov
stc
loop
shl
xchg
rcl
or
pusha
enter
jo
cdq
xchg
mov
pop
pop
add
dec
push
jecxz
adc
adc
push
jnp
cld
cmp
lods
sub
arpl
push
call
jge
jp
xchg
inc
jne
mov
jmp
cmp
imul
inc
test
jl
and
ins
inc
inc
cmp
mov
inc
mov
xor
and
sbb
cld
mov
push
pop
push
sar
and
(bad)
enter
xchg
and
rol
fmul
add
or
jp
in
dec
aas
add
dec
inc
call
sbb
mov
cmp
out
pop
inc
cwde
jmp
icebp
cwde
inc
xchg
test
push
jl
push
jbe
adc
rcr
jmp
mov
in
je
xor
call
add
movs
xchg
test
imul
lods
movs
push
or
jns
and
add
retf
in
add
adc
or
adc
ss
int3
jl
and
jbe
mov
sub
mov
nop
add
jle
aas
and
push
push
pop
jo
and
add
shr
js
mov
push
and
je
pusha
push
add
pop
rcr
jne
mov
sbb
xor
pop
dec
and
div
test
mov
mov
or
inc
mov
nop
push
adc
push
(bad)
cld
and
add
out
rol
js
add
scas
test
mov
mov
add
inc
clc
adc
ins
mov
pusha
mov
adc
aas
adc
fstp
xor
ins
cmp
jne
scas
add
ins
das
dec
inc
lea
adc
repz
add
daa
jae
stos
rol
mov
pushf
or
cdq
adc
lahf
cmp
dec
imul
jp
or
shr
adc
sub
test
ret
push
jnp
jbe
and
loopne
fld
(bad)
sar
ret
imul
rcl
inc
push
dec
or
dec
pop
inc
test
sbb
stos
and
jmp
sbb
push
fmulp
adc
dec
icebp
aas
or
mov
test
inc
push
sub
test
rcr
dec
ror
push
aaa
mov
sbb
lods
das
sti
das
pop
inc
inc
push
in
mov
cmp
push
dec
add
lock
pop
fcmovu
sbb
call
add
ret
add
mov
inc
xor
das
sbb
xchg
xchg
xor
xor
inc
test
lock
mov
inc
das
add
cwde
inc
ins
rcl
or
jge
jb
adc
bound
fstp
dec
and
or
dec
in
push
sub
sub
sub
mov
ins
and
pop
mov
add
or
pop
or
cmps
or
jg
sbb
push
dec
or
xor
or
sub
retf
loopne
adc
movs
movs
and
rol
push
push
cwde
jge
dec
push
add
add
mov
aas
outs
loopne
mov
add
sahf
dec
push
adc
or
lock
pop
inc
imul
cmp
(bad)
stos
push
push
push
les
pop
sbb
or
lahf
enter
add
sub
push
sbb
and
and
test
ret
sbb
(bad)
shl
add
or
xlat
in
mov
pop
inc
inc
loope
add
xor
pop
fisub
push
ins
sub
ins
clc
jnp
mov
xor
shr
mov
pop
add
sahf
and
daa
int3
sbb
sub
daa
mov
cmp
jno
or
loopne
fs
push
xor
mov
and
nop
sub
add
pop
adc
js
add
sbb
fsubr
test
pop
push
sti
repnz
je
jmp
popf
adc
sbb
out
cmp
jl
pop
inc
push
and
xor
hlt
fld
outs
or
jb
or
cmp
jnp
das
sbb
aad
ds
in
xor
cmp
jno
push
dec
sbb
imul
sbb
test
daa
in
adc
pop
jbe
imul
dec
jne
shl
add
adc
pop
add
or
pop
sbb
test
add
test
pop
xor
add
and
pop
out
mov
das
aas
mov
aas
arpl
xchg
add
push
sub
sti
sti
inc
cmp
add
push
sbb
mov
and
sbb
rol
and
ror
lods
inc
in
std
cmp
push
clc
lods
or
outs
or
lods
mov
and
sbb
pop
rcl
and
ins
push
lock
nop
pop
clc
aad
inc
cmp
shl
and
mov
(bad)
jo
fild
adc
mov
int3
out
inc
clc
dec
add
or
test
and
push
add
xlat
call
pop
sbb
add
add
lods
xlat
mov
push
mov
out
mov
loopne
sar
add
rcl
inc
push
inc
das
adc
or
aam
popa
inc
aam
mov
fdivr
fwait
xor
sbb
shl
inc
jg
loopne
int3
jne
mov
call
jmp
shl
push
sti
hlt
add
add
rol
inc
aam
pop
shl
or
ins
ss
adc
add
pop
popa
sbb
or
adc
or
jne
aad
mov
add
leave
and
rol
pop
shl
pop
pop
or
sbb
ret
rol
nop
xchg
rcl
and
xchg
push
mov
push
rol
add
xor
xchg
dec
xor
popa
push
(bad)
mov
jmp
les
inc
pop
pop
adc
and
or
aas
push
jl
push
pop
sbb
clc
push
cmp
jo
inc
dec
call
jp
pop
mov
dec
daa
hlt
lods
mov
adc
clc
and
or
sub
clc
xchg
mov
dec
cmp
push
iret
shl
cdq
or
imul
add
fidiv
inc
sbb
or
arpl
and
inc
pop
inc
sbb
push
rcr
stos
add
cmc
pop
(bad)
and
add
movs
and
cmp
mov
mov
jmp
out
cmps
mov
and
sub
mov
or
aas
mov
add
and
push
hlt
push
div
or
jmp
sbb
push
and
cmp
push
pop
push
adc
mov
ret
adc
inc
clc
das
mov
or
add
inc
inc
xor
dec
cli
or
mov
(bad)
stc
das
je
test
adc
sbb
ficom
sbb
or
sar
jne
sub
dec
pop
adc
pop
test
or
pop
sar
clc
lds
xor
mov
or
call
jmp
(bad)
mov
push
add
es
or
adc
pusha
add
xor
clc
nop
inc
sahf
dec
cld
cld
cld
inc
aam
sbb
xor
adc
sub
inc
ror
inc
sti
lods
(bad)
jl
mov
sub
and
and
into
pop
dec
sub
xor
arpl
mov
cmp
jmp
jge
ins
cmp
cmp
cmp
mov
imul
sub
int
jbe
push
cmp
lds
test
test
xchg
mov
and
and
or
leave
or
or
push
adc
mov
sar
adc
fs
push
and
sub
adc
fcomp
cmp
mov
push
adc
push
inc
and
mov
sub
push
rcl
dec
retf
neg
jmp
mov
mov
mov
popf
test
rcl
and
push
dec
pop
and
add
push
push
dec
or
add
push
fdiv
xchg
in
loopne
jo
fsubr
sbb
int
push
dec
cwde
inc
mov
adc
mov
sub
pusha
add
gs
lea
ret
push
(bad)
and
pop
and
mov
loope
cli
cmp
test
ret
sar
adc
mov
mov
call
inc
adc
adc
es
add
fidivr
es
sbb
out
cmp
cmp
lea
ins
push
ins
push
ins
sbb
ins
dec
dec
inc
jo
dec
jnp
inc
pop
pusha
or
add
int
test
sub
and
inc
(bad)
repz
inc
das
add
add
dec
rcl
mov
sti
fisub
(bad)
scas
sbb
push
and
cmp
jle
pop
je
or
jne
dec
xchg
mov
test
movs
add
dec
fimul
mov
ja
pop
adc
jb
adc
call
mov
push
adc
or
dec
pop
outs
ja
nop
pop
movzx
ins
loopne
ret
mov
and
jbe
outs
cmp
dec
jnp
cmp
cmp
mov
jb
(bad)
pop
retf
jne
xchg
push
pusha
xlat
cdq
adc
sub
pusha
pop
push
and
push
shl
lea
test
jo
fnstcw
mov
stos
(bad)
aam
push
or
cmps
mov
inc
dec
xchg
and
(bad)
es
inc
push
sti
pushf
es
div
ins
sbb
test
loopne
hlt
cmp
adc
push
adc
mov
aaa
sub
sbb
jno
dec
and
mov
pusha
sbb
mov
jp
or
inc
inc
jecxz
xor
xchg
xor
jbe
mov
sbb
test
sbb
xchg
rol
or
dec
push
mov
pop
lea
inc
push
jno
nop
cli
mov
lea
cld
push
loop
dec
sbb
jae
pop
adc
fistp
xor
fild
or
cmp
xchg
dec
cld
push
cmp
adc
test
cmp
jnp
ss
cwd
xlat
cmp
or
imul
sbb
nop
cwde
adc
inc
sbb
jmp
(bad)
and
and
arpl
xchg
or
sbb
mov
ficom
bswap
inc
xchg
lods
push
retf
sbb
push
sbb
fistp
dec
inc
arpl
je
ret
sbb
or
adc
mov
pop
or
lds
shl
cld
jnp
adc
dec
or
rcr
dec
xor
pusha
pop
sub
xchg
sub
adc
mov
add
dec
and
add
icebp
std
loopne
push
or
xchg
sbb
xchg
aaa
and
xor
inc
imul
add
iret
pop
inc
or
adc
daa
xchg
add
pop
mov
cmp
and
push
and
lahf
lahf
or
or
pop
jmp
mov
xchg
add
ficom
mov
and
jnp
adc
outs
cmp
adc
adc
inc
pop
rcr
sbb
add
xchg
scas
mov
sub
ret
adc
lods
xchg
retf
mov
daa
in
cmp
(bad)
pop
xor
sar
clc
inc
dec
adc
mov
shl
sbb
pop
or
sbb
inc
vfrczsd
or
addr16
sbb
pop
das
xchg
jo
enter
mov
fmul
ret
fs
jo
or
call
mov
lea
mov
mov
or
mov
add
sbb
push
(bad)
or
push
(bad)
call
stc
adc
mov
popa
or
sub
adc
xchg
pop
cmp
jo
or
xchg
dec
xor
mov
in
sub
or
scas
lock
and
das
addr16
jge
adc
std
sti
inc
sbb
and
cmp
pop
test
xor
sub
mov
adc
jl
jge
lea
xchg
mov
add
mov
aaa
jne
fmul
into
ds
jp
cmp
push
pop
mov
cmp
cmp
mov
xlat
mov
sbb
pusha
(bad)
adc
adc
dec
rcr
push
ins
call
mov
xlat
lods
aas
adc
sahf
sub
test
retf
push
xor
sub
and
cmp
jns
inc
(bad)
mov
pop
movs
xor
jno
mov
loopne
xchg
out
jne
lock
stc
std
jns
scas
or
cs
lea
or
loope
std
xor
adc
adc
jl
(bad)
in
sub
inc
jne
dec
xchg
xor
mov
add
add
(bad)
cmps
sub
out
je
adc
loopne
ss
add
fdiv
mov
enter
mov
push
lock
jb
mov
js
ror
fld
test
xchg
or
arpl
adc
push
jmp
jg
pop
mov
cmp
popa
add
and
bound
test
pop
dec
(bad)
imul
cmp
and
enter
push
mov
jmp
fsub
sbb
or
jmp
adc
jge
cmps
loope
stc
xor
fstp
sbb
aas
jmp
mov
js
sar
mov
frstor
mov
add
sbb
movzx
mov
je
xchg
inc
cs
mov
adc
inc
push
sub
push
je
cs
push
loopne
sti
or
or
dec
scas
mov
cmp
fwait
test
ss
in
lea
cld
inc
popa
fwait
jl
push
push
sbb
cmc
xor
mov
inc
gs
jno
push
sub
inc
push
es
in
sbb
gs
sub
pop
jmp
mov
ror
add
sub
leave
jo
test
in
pop
jo
mov
stos
ret
int
das
add
or
add
out
or
clc
ja
mov
push
and
lods
rcr
dec
in
push
jne
retf
mov
and
pushf
(bad)
stc
in
adc
sbb
(bad)
loopne
movs
pop
mov
push
add
and
imul
add
ret
xor
mov
jo
or
jg
(bad)
std
clc
adc
int3
mov
mov
dec
mov
scas
or
test
xchg
push
rol
inc
pusha
or
sub
pushf
fst
xor
jg
mov
cld
push
add
inc
in
xor
add
dec
cmp
xchg
pop
sub
pop
test
or
nop
out
outs
add
pusha
cmp
xor
pop
sub
mov
shl
in
mov
sub
mov
xor
cmc
sub
mov
push
mov
and
dec
pop
mov
repz
xor
xor
lods
lods
fild
mov
mov
movs
push
fcom
adc
mov
push
rcl
rcr
or
sub
and
push
xchg
aas
or
movs
add
push
and
aas
or
xor
adc
inc
arpl
add
push
and
aaa
cmp
stc
ins
mov
adc
push
mov
inc
test
out
or
test
adc
adc
add
sbb
xor
cmp
call
add
or
sbb
(bad)
or
mov
push
jg
dec
cmp
xchg
dec
sub
shl
or
mov
pop
ret
leave
inc
jb
pop
ds
arpl
xchg
pop
pushf
dec
push
fsubr
mov
cdq
push
mov
or
add
add
int3
fs
hlt
rcl
fisttp
xchg
in
scas
add
xor
xor
mov
jmp
jp
add
pusha
add
or
lds
inc
daa
cmc
(bad)
scas
es
mov
dec
or
retf
ret
dec
aas
retf
add
and
fs
jecxz
pop
bound
adc
pusha
aam
inc
mov
or
test
xor
mov
mov
aas
sbb
push
push
push
inc
inc
dec
popa
nop
cmps
xchg
fild
adc
leave
js
retf
push
adc
test
sbb
fmul
sbb
aaa
xlat
inc
inc
sbb
inc
(bad)
(bad)
test
(bad)
call
test
fcom
jno
jl
cmp
or
pushf
inc
das
cmps
mov
xchg
movs
pushf
add
mov
add
mov
test
or
ficom
pop
pop
fiadd
stos
sbb
xor
pop
or
pop
adc
pop
pop
mov
es
and
nop
jo
ins
add
pop
push
and
pop
ins
daa
pop
sbb
xor
lods
sub
enter
or
pop
mov
fwait
sar
loopne
push
dec
push
pop
sub
stos
dec
xor
mov
aaa
pop
adc
dec
adc
mov
sbb
int3
sbb
cmp
lods
repz
xchg
fwait
sti
lea
retf
adc
or
jae
sbb
add
pop
or
inc
inc
jns
sbb
test
add
leave
test
sti
dec
rol
or
add
imul
mov
test
mov
add
lea
(bad)
lods
jbe
test
div
mov
or
push
adc
jmp
mov
jnp
and
push
dec
and
inc
push
mov
add
inc
call
cld
fild
adc
hlt
jbe
cld
scas
fistp
imul
cld
push
sbb
movs
mov
mov
jo
jo
fisubr
or
popa
or
popf
lea
or
fstp
or
or
cmp
inc
push
mov
cld
jmp
adc
mov
push
push
push
sti
and
jb
push
mov
mov
in
data16
call
(bad)
and
ror
dec
fsubr
loopne
arpl
adc
add
arpl
add
scas
or
cmp
repz
mov
data16
or
inc
pusha
push
dec
add
mov
in
ficom
sub
push
mov
dec
cmp
dec
pusha
adc
lock
js
adc
rol
mov
lods
shl
jo
add
sbb
xchg
xor
outs
jne
xor
xor
xchg
dec
fcom
mov
movs
push
fwait
add
call
pusha
jecxz
push
ficom
daa
lock
jmp
adc
or
inc
jnp
mov
sbb
ret
fsubr
push
(bad)
jl
lods
push
or
mov
add
leave
call
add
lea
sbb
push
enter
xchg
xchg
jb
pop
and
add
retf
cmp
sub
loope
mov
mov
cmp
inc
or
cmc
sub
ret
aas
ins
or
push
jg
mov
jmp
movs
sbb
les
xor
ret
mov
jno
mov
loop
movs
xlat
and
sar
push
inc
jmp
inc
mov
cwde
push
nop
cmp
or
lds
sub
jo
inc
aaa
fdivr
clc
sbb
pop
out
pop
push
sbb
xchg
xchg
mov
sbb
aaa
movs
ins
xor
cmps
xlat
dec
aad
popa
aaa
inc
cmp
mov
in
nop
adc
adc
fist
inc
inc
inc
mov
mov
or
xor
inc
arpl
add
pop
sub
push
push
test
out
outs
mov
in
and
xchg
cmps
push
rol
add
pop
sub
jge
shl
mov
xor
cmp
shl
out
mov
push
cwde
push
out
cmps
outs
dec
lds
push
in
and
pushf
pushf
sbb
out
bound
rcr
xor
nop
mov
cmp
imul
in
xchg
and
mov
or
call
xor
add
nop
out
fld
pop
push
xor
sub
in
add
add
out
xchg
xchg
hlt
xchg
pusha
or
hlt
(bad)
mov
and
mov
aam
or
out
adc
ret
inc
out
test
in
bound
out
add
jb
ins
and
call
adc
test
jge
fsubr
inc
jecxz
aas
fcom
cmp
mov
inc
mov
mov
stc
outs
add
pop
les
inc
push
xor
test
xor
and
xor
push
xchg
icebp
dec
dec
test
cmp
mov
popa
xchg
stc
ins
mov
jp
jo
or
mov
sub
pop
push
pop
mov
test
mov
lea
loope
inc
push
ins
fs
movs
pop
cmp
add
xor
pusha
stos
js
pusha
push
test
test
jae
(bad)
aad
fadd
or
push
pusha
stc
xchg
xchg
add
sub
push
sub
rcr
rol
push
(bad)
cwde
dec
push
cmp
cwde
ret
fwait
sbb
jae
in
pop
stc
or
mov
or
inc
fs
ja
leave
sbb
cmp
shrd
or
inc
mov
xchg
mov
mov
cdq
pop
loope
xchg
add
inc
or
add
sub
shr
shl
jge
bound
sbb
pop
cmps
push
out
xor
mov
pop
aam
aam
xor
ins
in
add
dec
or
gs
ss
or
outs
push
pop
sub
inc
mov
daa
add
outs
or
ins
lods
inc
popf
popa
mov
fld
sub
sbb
adc
push
adc
ret
pusha
xchg
test
popa
sub
(bad)
pop
xchg
and
sub
sbb
jmp
xor
adc
sbb
fbld
je
shl
add
sbb
sub
and
sub
add
cmc
stc
xor
test
xor
xor
xchg
xor
add
push
dec
pop
mov
bound
cs
lods
adc
shl
ja
mov
rcl
cmp
push
sti
adc
inc
mov
hlt
adc
jmp
cmovp
mov
cmc
sbb
mov
(bad)
test
jno
fimul
pop
imul
mov
int3
je
jecxz
jp
sbb
sbb
dec
in
jbe
mov
xor
xor
pop
mov
pushf
iret
or
sar
sbb
dec
mov
adc
or
cmp
dec
cmp
das
enter
push
xchg
gs
hlt
(bad)
cmps
inc
or
imul
loope
and
push
imul
dec
cmp
inc
adc
movs
jo
xchg
mov
inc
inc
loope
bound
mov
shr
cmp
and
or
cli
mov
mov
jo
mov
imul
mov
jge
or
xor
sbb
jno
sti
dec
aad
dec
(bad)
pusha
std
retf
xchg
in
inc
inc
adc
mov
or
inc
push
dec
inc
loope
psubusb
(bad)
or
adc
imul
cmps
dec
enter
and
mov
stos
xchg
outs
mov
loopne
cmp
js
mov
sub
mov
pusha
mov
mov
inc
iret
adc
in
rcr
and
sub
leave
inc
movs
loopne
xor
pop
sub
and
ja
mov
mov
pop
hlt
push
sbb
push
adc
jo
imul
or
xchg
dec
test
push
outs
inc
sti
call
cmps
loope
and
pop
xor
mov
jb
mov
jo
or
cmp
push
popf
movs
adc
dec
xchg
mov
push
jmp
test
test
push
lea
inc
outs
pusha
xchg
(bad)
pop
push
pop
or
mov
into
or
xchg
shl
or
ins
sub
sbb
lods
inc
or
or
jge
mov
mov
fs
nop
inc
mov
jl
xchg
mov
mov
adc
inc
and
mov
push
sti
pop
ret
mov
or
sbb
push
cmp
adc
xor
jns
xor
lea
pusha
cmp
lods
pop
or
inc
jb
lahf
stos
test
mov
bound
outs
sbb
or
sbb
jo
xchg
push
xor
push
push
call
movs
movs
lea
cdq
sub
das
jns
lock
or
mov
pusha
xchg
add
or
daa
push
pop
dec
cmps
mov
xchg
inc
sbb
sar
fdivr
mov
sub
stc
fist
jno
cmps
cmp
ret
inc
mov
jmp
add
xlat
ins
sub
xchg
inc
test
dec
dec
mov
fs
mov
lea
or
jecxz
(bad)
pop
add
add
adc
xor
(bad)
movs
push
into
dec
pop
pop
add
addr16
cld
cmps
leave
xor
(bad)
sbb
adc
ins
int
jecxz
and
jnp
movs
dec
lods
jmp
push
jmp
mov
imul
push
int
fwait
or
ret
loope
adc
ds
and
add
movs
repz
push
mov
add
mov
inc
aas
outs
dec
adc
jne
sbb
jecxz
xlat
mov
mov
inc
les
push
mov
xor
call
scas
add
mov
inc
mov
push
dec
add
imul
cmps
push
test
add
dec
call
lahf
fs
jg
add
mov
imul
cwde
inc
inc
sahf
int3
pop
mov
xor
loopne
es
add
adc
push
sub
mov
jl
test
adc
add
aaa
xchg
adc
pop
xor
in
push
sbb
push
or
(bad)
das
mov
outs
jnp
jecxz
jns
test
sbb
(bad)
push
or
daa
xor
dec
popf
and
cs
sti
inc
add
sbb
sub
or
add
xor
les
or
jl
das
int3
test
push
jge
jne
outs
xchg
mov
leave
add
jbe
fwait
or
and
and
loope
daa
je
inc
rol
push
sbb
mov
not
movs
popa
inc
cwde
je
lea
loope
and
in
daa
sbb
dec
movs
mov
mov
outs
pushf
or
add
test
js
push
dec
lock
adc
je
push
inc
pop
aaa
or
add
pusha
sub
inc
and
jmp
push
sub
sub
addr16
and
push
add
jo
shr
repz
or
or
hlt
and
cmove
push
cmp
and
mov
mov
and
dec
push
fadd
lods
mov
mov
rcl
mov
inc
dec
cdq
xor
add
cwde
pop
shl
add
add
fadd
mov
or
mov
dec
jecxz
fs
xlat
mov
aas
inc
fstp
dec
loope
or
add
mov
das
cwde
call
and
imul
inc
mov
xor
adc
imul
mov
fs
mov
lods
push
adc
shl
cwde
pusha
imul
add
add
pusha
adc
or
lock
sbb
rcr
and
add
sbb
adc
imul
ret
add
mov
imul
test
or
push
dec
sar
retf
addr16
push
enter
loop
outs
cmps
enter
cmp
sahf
in
sbb
push
xor
pop
add
and
push
pop
dec
xchg
mov
adc
add
aam
mov
mov
xchg
mov
dec
or
adc
sub
movs
movs
or
movs
or
adc
adc
dec
jecxz
bound
outs
sbb
(bad)
or
mov
add
cmp
add
or
add
sub
inc
push
lahf
xor
and
xor
sub
(bad)
aaa
pop
nop
sbb
cmp
pop
or
push
xlat
lea
mov
pop
jmp
jg
outs
cmp
sbb
daa
sbb
pop
adc
inc
es
enter
repz
pushf
les
mov
in
or
or
std
push
or
sbb
cdq
outs
push
nop
std
dec
push
pop
lock
icebp
bound
push
hlt
sub
push
ja
sub
adc
ret
add
(bad)
pop
popf
push
xor
dec
cdq
or
imul
and
mov
pop
inc
xor
aam
imul
arpl
or
jge
ins
mov
dec
xchg
jge
(bad)
or
inc
or
iret
sbb
jge
add
cmp
sub
xor
mov
pop
mov
jg
movs
or
or
add
push
push
pop
outs
mov
mov
push
pusha
(bad)
or
outs
xchg
ins
jecxz
push
and
nop
xor
lea
or
mov
int
xor
or
ss
jno
ret
shl
sti
in
dec
lea
loope
fisttp
push
mov
xor
fwait
aam
cmp
or
cmp
scas
fsub
dec
mov
lahf
push
leave
adc
sbb
cmp
clc
or
sar
inc
ret
cld
sub
mov
inc
xchg
adc
pop
dec
xor
pop
ret
xlat
fld
dec
add
ret
fnstcw
jno
mov
cmp
push
and
cld
sub
lds
add
adc
jg
add
adc
sbb
stos
jl
aam
cmc
fwait
test
add
test
pop
dec
push
sahf
bound
stos
cld
or
dec
push
(bad)
sub
and
mov
cmp
pop
xchg
inc
jge
adc
fbld
mov
jno
ret
jg
repz
lock
jge
aaa
sbb
or
ss
xchg
jmp
leave
push
movs
das
or
add
jmp
je
and
jnp
push
xor
mov
pop
push
(bad)
sub
aas
or
push
ins
sub
gs
or
test
sub
and
or
add
push
sbb
jp
or
fs
in
outs
xor
jge
cld
inc
cmp
push
pop
push
das
pop
and
inc
pop
fdivr
push
and
loopne
jns
out
lea
ret
pop
or
or
inc
js
nop
sti
adc
or
mov
xchg
bound
ret
adc
repz
out
add
pop
sbb
dec
add
jne
ret
pop
adc
inc
push
ret
mov
sbb
dec
popf
and
sub
rcl
xchg
mov
and
inc
fdivr
cmp
js
test
push
jb
or
xor
pop
and
jg
push
pop
or
add
aas
fcomp
or
imul
add
jg
outs
mov
and
mov
adc
mov
mov
jge
mov
pop
mov
jg
scas
sbb
jge
add
nop
inc
cdq
or
mov
hlt
lock
pop
adc
or
sbb
imul
add
nop
in
ret
je
adc
in
pop
lahf
inc
xchg
xchg
nop
or
and
adc
jns
cmp
lock
mov
push
adc
cmp
out
leave
jmp
cmp
test
pop
mov
leave
push
and
push
rcr
add
jmp
sub
mov
mov
push
sub
in
movs
push
lods
push
movs
sbb
sub
mov
mov
rcl
adc
dec
cs
xor
add
or
add
test
add
adc
mov
scas
or
push
mov
adc
test
and
jmp
or
rol
push
js
add
retf
pop
sub
dec
adc
push
dec
pusha
dec
out
or
pop
inc
dec
ja
mov
mov
jae
mov
and
nop
xchg
push
addr16
sbb
aas
outs
sbb
mov
add
(bad)
nop
retf
out
fsubr
loopne
adc
ds
add
add
push
jae
pop
popf
shl
xchg
jecxz
cmp
mov
mov
pop
shl
pushf
xor
add
pop
mov
push
call
aam
and
bound
pusha
add
pop
or
or
add
sub
shr
aam
bts
inc
mov
jo
jecxz
adc
lock
or
lea
adc
or
inc
jne
sub
or
inc
enter
ins
inc
add
lahf
sbb
rcr
and
cwde
push
xchg
out
int
adc
dec
push
inc
leave
fwait
outs
inc
and
cmps
hlt
and
inc
dec
pop
mov
mov
lahf
sar
pop
add
mov
pop
inc
add
and
call
push
adc
ret
popf
sub
cmp
(bad)
jb
arpl
test
jae
push
addr16
lahf
test
push
call
or
sub
imul
(bad)
imul
fadd
xchg
or
pop
sbb
inc
je
xchg
xor
mov
adc
xchg
enter
es
lock
int
in
pop
test
nop
dec
fwait
aas
sbb
xor
inc
push
and
rcl
mov
mov
dec
cmp
push
mov
sbb
jne
ret
mov
inc
pop
test
dec
out
scas
cmps
add
inc
clc
lahf
and
xchg
ins
mov
mov
rol
mul
cmp
into
mov
and
push
adc
adc
push
mov
lods
or
add
and
arpl
adc
adc
inc
sbb
ret
or
test
adc
mov
push
mov
jo
mov
outs
nop
shl
or
sbb
and
or
gs
sub
pop
dec
pop
push
xchg
or
(bad)
int3
aas
hlt
dec
dec
pop
ret
adc
loope
push
pop
dec
push
jbe
dec
jae
arpl
or
xor
mov
jg
and
inc
rcr
xchg
inc
arpl
add
gs
enter
popf
sbb
fisub
movs
pop
and
mov
js
jns
fimul
arpl
push
retf
cmp
sbb
pop
nop
dec
retf
jmp
adc
repz
jecxz
std
mov
push
dec
mov
dec
movs
pop
push
and
sbb
xchg
xchg
adc
shl
or
or
adc
pop
adc
mov
shr
push
adc
out
or
fcom
(bad)
hlt
cwde
sbb
fisttp
aad
cmp
test
xor
mov
or
dec
or
push
cmp
adc
clc
arpl
(bad)
or
inc
jno
test
dec
pusha
or
and
sub
bound
or
or
cmp
mov
push
out
add
popa
lar
xor
jno
and
mov
lods
stos
shrd
add
mov
mov
pusha
xor
dec
ret
xchg
gs
push
pop
xor
or
shl
(bad)
fist
nop
popa
adc
out
mov
daa
cmp
pushf
sub
fbstp
retf
(bad)
sbb
adc
and
jmp
je
lock
add
clc
mov
jge
xor
cmp
nop
xchg
xchg
sub
leave
cmp
es
fadd
xchg
imul
cmp
sub
and
sbb
xchg
add
mov
and
daa
add
int3
lahf
adc
or
inc
clc
xchg
jo
xchg
rol
xbegin
outs
ret
rcr
adc
sbb
xor
aas
mov
sbb
add
add
add
in
(bad)
sbb
or
mov
inc
ins
inc
out
or
sbb
adc
pop
mov
mov
cmp
imul
xchg
jb
inc
mov
mov
fadd
add
sahf
rol
mov
or
dec
jl
mov
sub
arpl
sbb
es
in
icebp
dec
(bad)
mov
or
or
gs
and
xchg
cmp
in
add
nop
or
mov
xchg
or
dec
add
cmps
out
xchg
loopne
push
push
cmp
add
popf
mov
xchg
lea
mov
sub
fist
add
xchg
pop
push
mov
dec
pop
in
mov
add
aam
adc
rcl
sbb
lahf
inc
adc
leave
mov
fistp
cmp
je
pop
ins
mov
out
sbb
les
or
jmp
daa
mov
mov
add
sbb
lds
sub
in
cmp
xor
mov
inc
mov
ror
sub
sub
pop
pop
sti
push
(bad)
add
repz
mov
adc
stos
dec
and
dec
or
add
xchg
gs
(bad)
rol
pop
push
adc
pop
pusha
movs
cmpxchg
clc
mov
push
mov
mov
lock
arpl
and
add
jl
add
test
dec
dec
enter
cli
inc
dec
rol
and
sbb
test
and
and
jecxz
mov
sub
cwde
adc
lds
dec
es
sub
or
pop
sbb
or
inc
lods
dec
fsubr
inc
adc
add
and
pop
sub
stos
pop
pop
mov
fistp
push
xchg
push
mov
mov
pop
sar
mov
ror
sbb
rcl
push
fcmovnu
xchg
scas
lods
adc
xor
xor
je
adc
and
jnp
xor
shl
xor
test
add
(bad)
dec
or
mov
aam
push
mov
mov
adc
and
push
adc
(bad)
aad
sbb
inc
rcl
cmp
(bad)
or
sbb
in
mov
mov
sbb
xchg
adc
add
adc
stos
push
lock
fwait
scas
dec
dec
pusha
daa
xor
cmp
add
and
mov
pushf
sub
hlt
popa
adc
xchg
sbb
inc
imul
cmp
dec
jmp
mov
inc
jae
dec
and
iret
cli
or
xor
mov
sti
dec
adc
push
repnz
adc
rcr
adc
js
ret
xchg
cmp
adc
cmp
mov
add
and
or
and
xor
add
stos
rcr
mov
adc
mov
daa
add
or
pop
push
jg
loopne
sub
cmp
fidivr
push
push
and
push
and
inc
push
inc
pop
inc
push
rcl
pop
bound
xchg
and
jns
test
xchg
pusha
pop
movs
test
mov
and
je
mov
or
adc
or
sbb
and
leave
out
push
xchg
sbb
dec
test
push
sbb
mov
push
or
dec
stc
push
adc
call
pushf
leave
sar
imul
inc
pop
jne
add
call
mov
or
movs
inc
xchg
sub
add
cdq
imul
xchg
in
dec
sub
xor
test
nop
jmp
ja
xchg
(bad)
retf
loope
push
cmp
jge
sti
or
cmp
sbb
shl
add
pop
xor
or
sbb
xchg
jae
or
int
adc
pop
and
xchg
lods
gs
lahf
aas
add
or
jbe
pop
shl
jne
or
lock
ds
jo
clc
push
ret
rol
fistp
mov
adc
jmp
jmp
and
pop
adc
mov
inc
(bad)
sbb
jle
in
daa
or
fldenv
cs
cmp
xchg
adc
pusha
fisubr
xor
gs
adc
mov
cld
je
mov
cmc
das
pusha
adc
shr
add
and
add
adc
jns
push
jmp
scas
pushf
sub
or
rol
add
mov
push
mov
es
outs
add
sbb
jns
aaa
ins
jmp
lods
test
push
cmc
fs
in
ja
mov
sbb
push
daa
(bad)
push
ror
sbb
dec
jmp
aad
xor
cdq
sub
jmp
pop
leave
mov
xor
inc
mov
push
mov
add
xor
adc
mov
icebp
adc
inc
xchg
cli
aad
stc
test
loopne
xor
jmp
and
sbb
jo
mov
xchg
lods
fild
add
and
dec
leave
rol
repnz
add
sbb
push
imul
dec
and
enter
call
(bad)
shl
jle
adc
cld
dec
sbb
and
mov
pusha
and
call
lods
adc
xlat
in
and
das
mov
xchg
or
ret
xchg
aas
clc
je
jp
movzx
push
inc
movs
aad
inc
sub
pushw
cmp
dec
or
das
(bad)
cdq
xor
mov
jne
sub
mov
add
ret
sub
add
lods
pop
sub
and
xchg
enter
mul
mov
or
or
lods
lock
and
fsubr
loopne
dec
or
or
adc
cli
cwde
inc
mov
mov
and
jo
movs
mov
popa
and
cmp
pop
push
xchg
mov
sbb
scas
push
pop
in
nop
mov
or
xchg
out
and
or
jnp
mov
adc
xchg
xor
push
mov
loopne
add
hlt
sbb
aaa
or
push
push
das
aas
inc
or
inc
xor
add
test
cmp
dec
out
inc
dec
xor
nop
mov
add
or
pop
cmp
fist
sub
sub
or
or
arpl
es
mov
cli
adc
push
ror
clc
mov
cmp
fwait
push
cwde
sbb
or
ja
js
shl
inc
call
sub
inc
leave
cmp
cmps
lds
push
imul
add
pop
mov
in
xor
cmp
rcl
xchg
sbb
enter
aas
add
sbb
xchg
inc
les
imul
dec
jbe
adc
xor
dec
push
aaa
in
xor
retf
sbb
cmp
clc
add
sbb
sub
xor
push
jecxz
add
jecxz
or
add
sbb
aas
mov
and
(bad)
sbb
pop
or
rcl
mov
rol
and
push
sar
adc
lods
mov
ret
je
xor
(bad)
jnp
and
xor
inc
test
imul
shl
xor
test
mov
imul
inc
add
pop
(bad)
dec
outs
leave
cmp
and
adc
fimul
sbb
adc
inc
lea
pop
fadd
sub
pop
add
push
jmp
test
sub
mov
push
fdiv
sar
mov
rcr
mov
adc
pop
scas
clc
pop
je
sbb
dec
add
test
pop
sub
shr
lock
or
push
popa
cmps
test
int
xchg
aam
mov
push
fs
jne
add
or
mov
imul
adc
(bad)
pop
mov
rcl
inc
dec
mov
rcl
mov
inc
mov
aas
xchg
xchg
mov
mov
pushf
mov
or
mov
in
lock
test
sbb
fiadd
gs
(bad)
xor
popf
or
stc
inc
jne
or
fisubr
cmp
or
and
cmc
arpl
mov
dec
mov
pop
fcom
ins
add
mov
out
mov
cmp
mov
or
je
sbb
fwait
add
mov
pusha
inc
jmp
(bad)
jnp
fisub
jl
xor
xor
dec
jl
cld
cld
cmc
jne
add
stc
mov
jne
or
retf
inc
js
test
add
xchg
jmp
push
rol
test
mov
adc
push
dec
leave
adc
pushf
dec
push
rcl
xchg
jecxz
test
fistp
mov
lods
xor
jp
lea
clc
cmps
rcl
arpl
jecxz
jo
loope
std
mov
nop
xchg
xchg
addr16
mov
mov
mov
add
jne
jae
push
lods
test
xlat
push
inc
pause
idiv
adc
cmp
sete
lock
in
add
and
jmp
xchg
fldenv
adc
clc
and
ins
or
sti
pop
or
inc
mov
sub
nop
sbb
dec
inc
or
or
and
adc
int3
int3
lds
ret
sbb
js
fimul
jne
test
lods
or
and
in
or
jne
xchg
sub
das
cmps
sbb
mov
call
mov
push
dec
or
sbb
and
xchg
pop
or
rol
jno
jno
inc
aas
xor
or
mov
jg
retf
mov
push
and
rol
push
jle
and
scas
je
sub
or
push
sub
xor
call
mov
sbb
movs
fs
cld
hlt
pop
xor
sbb
clc
dec
std
dec
call
cdq
mov
les
cmp
mov
loope
loop
jge
adc
lea
ins
adc
enter
lahf
adc
mov
xchg
or
shr
loope
mov
add
inc
div
jnp
or
xchg
adc
lds
cmp
adc
add
and
pop
xchg
xor
or
pop
adc
sbb
popa
pusha
add
sub
addr16
ror
jge
rep
jmp
or
mov
shl
js
int3
bswap
pusha
sub
sbb
psubsw
les
jg
inc
dec
and
and
xchg
add
inc
and
push
lods
sbb
fwait
inc
and
rol
or
sbb
loop
jle
ret
or
xor
and
dec
or
aas
test
(bad)
pop
dec
or
adc
fistp
mov
dec
mov
jl
jle
inc
enter
push
fisttp
jbe
xor
cmp
pop
fld
mov
mov
and
dec
fmulp
daa
adc
cld
iret
add
and
cld
test
add
daa
mov
or
add
xor
cwde
call
inc
imul
mov
rcr
inc
retf
jae
jnp
dec
enter
fsub
and
loopne
mov
dec
loopne
sub
arpl
sub
lods
inc
dec
mov
nop
out
sub
in
pushf
or
mov
or
mov
dec
pop
mov
dec
dec
sub
sahf
fistp
dec
push
fld
jns
inc
or
mov
inc
nop
(bad)
(bad)
adc
sbb
push
mov
mov
pop
clc
pop
ret
loopne
lods
mov
add
adc
mov
jmp
push
and
lods
push
jne
neg
mov
sahf
sub
add
xor
pop
nop
or
push
add
or
sub
xchg
sbb
test
and
add
sub
or
mov
shl
inc
in
or
or
xor
or
or
fwait
fs
pop
push
lock
xor
jmp
and
push
push
push
cdq
xchg
mov
xchg
pop
retf
fisttp
rol
add
inc
test
test
lock
(bad)
push
sar
(bad)
cmp
xchg
test
or
adc
xchg
push
mov
xchg
movq
test
js
jne
iret
and
daa
or
xor
adc
or
es
and
(bad)
dec
push
cli
or
xor
pop
mov
dec
push
iret
mov
mov
pusha
mov
scas
cmps
adc
mov
sbb
inc
jl
or
inc
add
fisttp
movs
cmp
aam
mov
inc
mov
ins
push
adc
sbb
add
popa
or
and
dec
jb
fmul
fsub
dec
inc
outs
inc
pop
dec
int
xor
aam
sub
shl
cmp
mov
je
push
or
ss
idiv
mov
inc
loope
scas
movs
pop
out
dec
add
pop
jo
or
mov
dec
inc
ret
cld
jmp
jmp
outs
imul
movs
idiv
arpl
dec
jecxz
or
add
add
lods
pop
jl
adc
jmp
sub
or
inc
and
mov
ret
dec
nop
pop
es
cmp
movs
jns
add
arpl
cmp
and
mov
add
sbb
pop
adc
inc
popf
mov
rcr
xor
int3
pop
xchg
fwait
js
add
in
or
stos
ror
xchg
pop
daa
popa
push
or
sbb
and
aam
int
test
push
mov
jecxz
dec
pushf
adc
sbb
adc
or
loopne
adc
sar
inc
popa
sbb
mov
sub
adc
and
xor
cmp
outs
rcr
cld
xor
mov
pop
add
adc
ins
mov
lea
cmp
push
jmp
pop
pop
daa
and
pop
movs
sbb
mov
sub
ja
adc
cmp
bound
and
adc
loope
push
add
cmps
movs
sti
cmps
cwde
js
mov
adc
cmps
sbb
jmp
mov
jne
test
pop
jae
repz
push
lahf
mov
clc
xor
add
(bad)
mov
dec
or
fbld
or
xlat
push
mov
adc
enter
or
(bad)
push
test
or
fisttp
and
add
outs
sbb
leave
cmp
xchg
out
aas
and
add
dec
add
sbb
(bad)
or
adc
test
test
jmp
mov
mov
adc
test
or
push
jp
mov
out
sbb
and
inc
popf
pop
add
ss
ret
sbb
and
mov
and
icebp
arpl
mov
lahf
jo
mov
arpl
add
dec
jmp
adc
cmp
mov
add
or
push
inc
or
mov
iret
xor
add
mov
test
inc
push
nop
idiv
jnp
(bad)
or
push
leave
cmp
popa
movs
lahf
and
adc
pop
and
les
sbb
daa
mov
ficom
cmp
add
mov
lgdtd
sbb
inc
enter
nop
pop
cs
xor
cmp
push
pusha
retf
and
imul
mov
sahf
ret
mov
or
dec
mov
adc
mov
jo
je
in
and
pushf
pop
or
mov
imul
add
inc
or
pop
add
mov
pop
lods
(bad)
mov
xchg
dec
and
jnp
ror
fcmovnb
pop
xor
mov
loope
add
mov
xchg
lock
add
in
jno
inc
mov
imul
cmc
clc
push
in
pusha
or
sti
psraw
cmp
xor
xor
dec
inc
mov
or
mov
dec
add
pop
jmp
jne
shl
fmul
add
stc
jmp
rol
add
inc
leave
jp
push
xchg
inc
sub
dec
mov
dec
(bad)
ret
sub
jnp
ins
xchg
retf
cmp
dec
jae
fdivr
movs
inc
jl
push
mov
test
jmp
push
mov
aas
dec
inc
loope
sbb
mov
mov
lock
add
jo
mov
sbb
(bad)
in
adc
rcr
and
mov
jne
sbb
xchg
stos
mov
inc
rol
mov
or
adc
sbb
and
pop
faddp
cmp
jo
and
les
test
shld
bound
sub
popf
repnz
or
in
lods
xor
nop
mov
lods
aam
xor
and
xor
sbb
fild
and
inc
call
add
fisttp
out
out
dec
les
mov
mov
xor
mov
mov
adc
push
mov
sub
inc
add
push
ror
adc
sub
(bad)
out
test
sbb
xchg
inc
add
fild
in
xchg
rcl
aam
dec
dec
cs
nop
nop
mov
mov
or
pop
add
jmp
mov
xchg
sub
das
shr
cmp
int3
ret
mov
icebp
cmps
mov
retf
pavgw
add
or
adc
push
out
int
nop
add
scas
mov
mov
xor
sub
rol
or
clc
loope
inc
jo
test
test
call
add
js
movzx
mov
lea
sub
ret
mov
sbb
sub
mov
or
cmp
mov
mov
je
jo
jo
inc
cwde
sub
xor
adc
rcl
ret
jo
pusha
mov
outs
js
jbe
das
movs
adc
push
push
push
mov
pop
mov
lea
push
imul
and
lahf
ror
and
add
mov
add
loopne
out
call
push
mov
push
sar
push
or
(bad)
adc
int3
gs
mov
ss
(bad)
call
inc
adc
jmp
xor
sbb
and
int
mov
adc
xor
test
jl
movs
dec
leave
adc
jns
jnp
lods
add
push
xchg
add
jmp
adc
(bad)
jg
sbb
shl
jg
inc
or
leave
sbb
es
mov
adc
dec
iret
sbb
jne
xor
or
loop
jmp
push
imul
pop
add
es
and
or
je
sbb
ss
or
mov
jge
cdq
frstpm(287
pushf
sub
dec
mov
xchg
sub
mov
mov
cmp
daa
inc
popa
or
ja
test
inc
add
lock
sbb
jmp
or
fwait
mov
xchg
clc
xchg
mov
cwde
outs
push
mov
daa
adc
jle
xchg
ins
pop
dec
xchg
dec
iret
fs
jae
call
mov
ret
sub
push
mov
pop
fimul
pop
fistp
push
sub
aas
sub
repz
pop
(bad)
popa
adc
adc
adc
nop
std
shl
pop
or
leave
inc
mov
mov
mov
dec
push
pusha
test
popf
popa
sub
and
sahf
add
pop
mov
mov
add
sub
movs
jmp
sub
mov
addr16
push
sar
mov
call
or
add
mov
movs
mov
mov
cwde
mov
xor
lds
jmp
arpl
in
lods
test
test
movs
gs
jle
rcl
call
adc
mov
ins
std
adc
mov
les
adc
xor
hlt
pusha
imul
mov
icebp
push
sbb
mov
aas
sbb
movs
add
(bad)
loopne
xor
dec
add
cld
lds
lahf
nop
nop
cmps
jmp
jmp
je
and
fdiv
and
or
mov
in
ss
shl
je
mov
je
je
adc
mov
mov
or
cld
push
cli
test
mov
adc
add
(bad)
retf
adc
sahf
and
pop
add
sub
shl
or
adc
sub
test
adc
mov
jmp
in
sub
lock
or
mov
out
stos
mov
mov
jo
or
and
sbb
xor
mov
pop
pop
lahf
xor
mov
pushf
dec
jne
xchg
pop
add
stos
ins
and
sbb
add
stos
add
inc
or
xor
sub
in
sub
push
dec
enter
lahf
push
inc
shr
xlat
inc
sub
push
xor
pand
push
xor
and
push
mov
pushf
or
cmc
mov
je
imul
add
push
mov
add
ja
mov
das
xor
fistp
push
nop
or
pop
in
mov
aas
inc
(bad)
mov
pop
cmps
test
xor
aad
jge
jne
sbb
or
(bad)
mul
imul
nop
pop
sysenter
or
sub
scas
aam
popf
and
adc
pop
sub
aam
sbb
inc
add
aaa
xchg
xor
sub
push
out
mov
push
push
inc
push
add
popa
or
push
popa
add
test
pop
inc
das
pop
push
popa
adc
adc
adc
popa
cmps
push
and
(bad)
adc
das
xchg
mov
sbb
and
test
add
fistp
sub
sub
jmp
push
outs
cmpxchg
sub
jp
andnps
sbb
lea
or
in
inc
aas
jl
cmp
das
jno
jge
cmp
inc
xor
pop
and
not
mov
or
inc
and
or
add
xchg
jmp
push
and
gs
test
inc
imul
push
jge
and
or
test
push
clc
dec
jmp
jnp
ds
pop
push
adc
adc
dec
xchg
arpl
xchg
inc
movs
xchg
dec
scas
dec
mov
or
mov
mov
dec
or
inc
(bad)
sbb
push
jl
(bad)
push
lods
and
cmp
and
xor
int3
adc
loope
dec
rol
popa
xchg
sub
and
fdivr
fcomp
xchg
faddp
dec
jmp
dec
dec
sbb
cld
mov
mov
cmp
nop
dec
lds
adc
xor
cmp
xor
repz
inc
outs
cmp
std
ins
jns
popa
mov
cmp
fbld
sti
loop
ja
mov
(bad)
mov
and
xor
test
ret
loop
ins
push
sbb
jnp
push
add
add
mov
push
xchg
push
add
aam
mov
loopne
fadd
add
mov
enter
mov
mov
xor
enter
(bad)
sub
das
ret
in
cmp
sub
imul
sub
inc
cdq
inc
rcr
pop
mov
sub
push
add
add
sub
sub
push
repnz
or
dec
lock
mov
test
cmps
mov
dec
sub
sbb
gs
and
rol
enter
mov
pop
rcl
pusha
cld
gs
aad
nop
dec
dec
xor
dec
pop
enter
xor
push
sbb
scas
leave
inc
hlt
pop
xchg
and
sar
or
or
inc
pushf
mov
push
xchg
movs
sbb
les
nop
std
push
sbb
sar
add
daa
popa
shr
mov
jne
jne
inc
and
scas
add
sub
imul
out
inc
arpl
jp
das
aad
adc
lock
jge
aam
jmp
and
fisttp
mov
aaa
sub
js
sbb
inc
(bad)
into
add
arpl
(bad)
push
xor
rol
fadd
lock
call
or
pusha
inc
mov
jp
sbb
inc
sub
inc
add
and
call
movs
add
add
pop
dec
dec
gs
gs
sub
add
ret
push
iret
hlt
mov
or
jne
dec
enter
jne
jmp
ins
loope
add
sub
test
pop
enter
and
inc
jmp
adc
and
stos
popa
xor
shr
in
push
ja
mov
dec
cwde
sub
int3
and
pop
sub
cmp
mov
or
lahf
push
push
adc
ja
push
mov
lea
mov
call
xchg
loopne
cmp
pusha
fist
inc
std
adc
or
rcr
mov
sar
loopne
or
or
inc
mov
mov
mov
es
dec
pop
addr16
lea
cmc
adc
outs
int
mov
xor
in
movs
sbb
daa
add
push
inc
pop
and
xor
sbb
dec
fmul
movs
mov
inc
cld
push
xlat
add
test
pop
mov
sti
push
add
and
and
aaa
popa
push
mov
mov
xchg
inc
adc
or
xor
sbb
clc
jg
dec
add
jmp
into
mov
in
ja
pop
ins
and
mov
sub
and
add
add
lahf
push
stos
mov
mov
daa
arpl
(bad)
adc
adc
or
aas
mov
mov
add
lods
inc
sbb
adc
dec
lock
and
rcl
push
cmp
not
dec
adc
inc
aaa
clc
nop
ins
jo
push
sahf
add
cmc
dec
mov
jb
(bad)
iret
(bad)
(bad)
test
push
jmp
stc
or
fist
inc
dec
push
or
fcom
sbb
adc
sar
sbb
mov
mov
jg
call
mov
xor
xor
or
pop
les
test
adc
lea
or
aad
jbe
into
mov
imul
adc
sbb
adc
pusha
int
pop
or
ret
xor
jmp
aam
jns
lock
add
mov
aam
add
retf
das
push
add
add
mov
test
jmp
arpl
outs
stc
cld
push
fisubr
sbb
popf
in
mov
push
rol
sbb
or
sub
shr
cmp
lahf
ror
or
cmps
lods
ror
cmp
cmps
inc
lock
es
ins
ret
jmp
inc
xchg
nop
loope
lock
xor
lea
xor
test
ror
pop
add
or
int3
dec
retf
or
dec
xor
lods
iret
cmp
rcl
pop
add
dec
in
sbb
inc
adc
pop
cwde
xchg
sub
mov
sbb
mov
mov
add
(bad)
jnp
test
xchg
push
test
mov
adc
test
and
jl
sub
mov
inc
xchg
xchg
je
push
mov
loope
add
sbb
fcom
mov
and
stos
jge
add
inc
mov
popa
adc
add
mov
out
mov
cmp
sti
cld
push
jl
sub
and
lock
mov
daa
sbb
aam
push
stc
xchg
pop
sar
adc
inc
loope
mov
scas
mov
dec
fadd
loop
inc
or
and
xchg
outs
inc
loop
inc
mov
mov
add
sbb
sub
add
repnz
push
cmps
pop
sbb
icebp
mov
and
pop
fmul
mov
add
fwait
adc
fisubr
ins
mov
mov
sub
sbb
adc
push
clc
or
icebp
ins
ret
mov
add
shr
push
sbb
mov
inc
adc
clc
xor
les
leave
mov
iret
cmp
or
jne
fld
dec
retf
cmp
loop
ds
pop
adc
jg
outs
cmp
setbe
push
pop
cmps
push
mov
aaa
loope
mov
pop
cmps
lahf
gs
xchg
or
add
jnp
les
push
cli
sar
pop
fcmovne
xchg
or
mov
add
call
add
sub
and
inc
jmp
pop
adc
xor
sub
xor
xchg
ret
fwait
mov
icebp
retf
or
cmp
je
std
hlt
add
jmp
sub
prefetchnta
call
cmp
je
fldenv
test
cmp
pop
in
sub
xor
sti
inc
jmp
add
test
cmp
mov
adc
sbb
add
pop
push
mov
pop
mov
jnp
jmp
mov
sub
add
xchg
cmp
in
test
sub
dec
mov
mov
sbb
pop
mov
and
sub
sbb
push
pop
cmc
and
and
test
add
mov
clc
dec
(bad)
and
cwde
jae
ins
cmc
in
test
push
push
add
inc
mov
aaa
mov
out
nop
and
fbld
push
scas
jne
adc
sbb
nop
and
or
sbb
daa
mov
mov
icebp
in
push
adc
ins
jge
push
dec
arpl
bound
and
cdq
nop
push
jae
inc
pop
lods
(bad)
and
add
shl
lds
fist
xor
adc
loop
loope
ins
shr
mov
adc
outs
dec
adc
cmp
xchg
ret
cmps
mov
dec
outs
xor
and
mov
push
js
jmp
leave
xor
add
or
fsubr
test
add
ins
xor
enter
in
adc
cld
adc
xlat
pop
jns
inc
xor
jo
and
or
rol
push
and
imul
push
inc
inc
ret
js
lds
mov
pop
jge
adc
loopne
pop
add
test
inc
(bad)
aam
pop
and
jmp
adc
cld
dec
or
or
jg
bound
mov
out
pop
jmp
add
aad
mov
add
push
fst
adc
fwait
lock
adc
clc
add
push
jne
xlat
int3
sub
sbb
sbb
xor
add
nop
push
pop
pusha
xor
test
mov
es
out
call
add
inc
bound
jno
adc
adc
mov
adc
loopne
or
or
jb
mov
sbb
mov
sub
adc
xchg
cmc
cwde
call
fadd
or
push
xor
or
(bad)
cmp
xchg
xchg
cmps
test
cli
and
ror
loope
call
mov
add
mov
or
sbb
mov
jge
mov
push
pop
dec
mov
cmp
or
std
cmp
push
dec
iret
out
dec
sbb
call
push
fwait
push
sbb
aam
shl
mov
pop
fisub
les
add
dec
fcomp
fadd
jg
(bad)
xchg
push
test
adc
and
sbb
xor
sbb
lock
js
pop
push
inc
adc
add
loope
sub
add
inc
mov
cmp
jnp
dec
xor
mov
dec
cmp
or
rol
inc
pop
mov
es
jmp
(bad)
xor
mov
fs
push
add
add
or
add
pop
cmp
jne
pop
dec
add
(bad)
and
mov
pop
cmp
arpl
pop
int
lds
mov
inc
cmp
call
mov
(bad)
or
sbb
xor
gs
mov
mov
xadd
cmp
idiv
shl
dec
sbb
mov
mov
jmp
rol
mov
cmp
sub
pushf
outs
mov
cmp
push
test
mov
dec
(bad)
ror
mov
leave
adc
enter
lahf
sbb
push
jmp
and
(bad)
mov
dec
mov
arpl
cmp
jno
das
or
xchg
sbb
jae
popa
cmps
rcr
je
adc
or
adc
dec
das
and
jmp
repz
les
rcr
pop
add
xchg
xor
inc
add
mov
(bad)
lods
xchg
dec
push
aaa
test
daa
push
mov
xor
add
imul
mov
pop
jne
js
add
lds
jne
dec
xor
jg
pop
xor
add
arpl
sbb
hlt
xor
jmp
aas
push
push
bound
pop
repz
ins
aad
movs
sub
pushf
pop
fsubr
adc
or
int3
cmp
sbb
arpl
add
and
movs
pop
ror
adc
xchg
and
xor
xor
sub
mov
sub
and
dec
xchg
add
test
adc
push
sub
adc
mov
lahf
add
sar
lods
add
and
add
ret
push
sub
add
or
lea
pusha
outs
popf
leave
push
rol
scas
hlt
es
mov
in
adc
das
cmp
jne
repz
jo
clc
xchg
sbb
push
xchg
mov
push
in
enter
js
xor
jo
jmp
fwait
xor
call
pop
in
jmp
or
rol
cmp
inc
pop
cmp
or
xchg
and
xchg
fidivr
pusha
scas
into
adc
leave
mov
in
add
hlt
xchg
pushf
or
lock
jo
jge
dec
sar
in
jnp
fstp
add
dec
xchg
cld
je
pop
lods
jbe
sbb
and
cmp
push
push
push
scas
ficom
sahf
popa
and
retf
dec
fsub
outs
add
push
outs
fbstp
cmp
sub
and
ss
cmp
das
gs
lea
cmps
push
lds
pop
jno
and
ds
sbb
cmp
or
add
ins
and
in
or
je
sub
and
cdq
scas
cld
movs
dec
ss
or
idiv
jo
xchg
add
dec
hlt
adc
or
(bad)
push
clc
stc
push
int3
jmp
xor
inc
dec
ja
adc
(bad)
mov
sub
add
sbb
jl
xor
adc
pop
cli
mov
or
dec
push
or
inc
push
sbb
loop
outs
(bad)
ja
dec
mov
lods
mov
add
or
push
popf
and
das
jmp
(bad)
jge
and
stos
jecxz
mov
test
imul
add
add
lea
adc
sbb
sbb
addr16
adc
cmp
adc
adc
push
test
popa
loope
jne
and
and
inc
shl
pop
pop
jecxz
xor
adc
adc
fldcw
mov
xchg
cmp
adc
mov
mov
cmp
cmp
arpl
xor
inc
in
fs
push
pop
in
xchg
jo
aaa
ja
(bad)
adc
fs
call
pop
dec
sbb
sbb
mov
imul
or
movs
mov
jb
mov
scas
xchg
jg
ret
ret
cmc
or
mov
mov
ror
test
add
inc
or
dec
ret
add
cmp
add
mov
inc
dec
mov
dec
lods
adc
int
jb
push
xchg
xchg
add
xchg
arpl
(bad)
mov
and
xchg
and
push
sub
push
dec
call
in
mov
(bad)
mov
mov
pop
push
sbb
loopne
cmp
push
into
push
test
fldenv
lods
pop
mov
inc
cmp
movs
frstor
test
push
sbb
inc
lods
sbb
lods
push
inc
shr
mov
pusha
shl
dec
add
(bad)
push
or
out
and
jl
cdq
sbb
rol
mov
add
xor
xchg
xchg
enter
sub
sbb
cmp
lea
xor
cmp
lock
or
movs
xor
cli
imul
or
add
mov
loop
cwde
mov
ror
inc
(bad)
cwde
(bad)
les
add
push
mov
mov
add
or
cmp
cld
xchg
loope
push
or
inc
push
jne
aam
cmp
sbb
mov
test
mov
xor
lahf
adc
lock
jmp
iret
or
data16
mov
add
pop
bound
pop
sbb
mov
mov
push
inc
push
or
stos
or
adc
pusha
add
push
or
mov
test
jne
adc
ficomp
test
shl
pop
or
jle
dec
out
sbb
leave
mov
leave
pop
jns
sbb
pop
icebp
inc
pop
ret
sbb
mov
or
adc
adc
outs
movs
dec
xchg
inc
cmp
push
lods
sahf
jp
adc
push
xchg
nop
inc
jl
sbb
mov
adc
mov
cld
xor
addr16
push
sbb
aaa
sbb
pop
jne
rol
adc
adc
shr
add
cmp
adc
js
leave
jmp
inc
dec
xchg
mov
xchg
xor
xor
add
rdpmc
ss
mov
xchg
push
fwait
sbb
dec
daa
popf
add
jg
pop
in
and
stc
pop
sub
or
cmp
adc
dec
inc
inc
dec
inc
shl
out
mov
push
pop
dec
sbb
mov
nop
xor
loop
shl
test
sar
jl
inc
addr16
ins
ja
popa
and
inc
hlt
add
and
std
mov
add
or
pop
loopne
aam
sub
or
aaa
clc
xor
inc
bswap
mov
jmp
test
cld
out
push
mov
pop
push
rol
or
xchg
dec
fisubr
loop
xchg
pop
adc
push
push
(bad)
jnp
adc
mov
pop
mov
xchg
sbb
or
pop
dec
hlt
and
and
lock
enter
inc
(bad)
jmp
sbb
xchg
lock
fisttp
sub
pop
xor
mov
sbb
cdq
xor
jl
aaa
sub
iret
movs
lock
jae
xor
xchg
mov
and
jg
sar
rcr
xor
push
mov
test
std
sbb
(bad)
je
pop
mov
mov
inc
mov
cmp
mov
sbb
inc
push
pusha
mov
or
push
xor
mov
adc
add
xor
(bad)
hlt
or
shr
repz
jmp
xchg
rcr
mov
les
mov
shl
inc
push
mov
jmp
mov
and
mov
int
jmp
arpl
rcl
push
rol
pop
test
dec
add
cmp
mov
and
inc
jmp
sbb
add
jne
xor
pop
push
cmp
or
loop
add
jle
add
adc
cmps
push
adc
adc
push
aas
or
jl
push
jecxz
sub
mov
call
add
mov
jmp
lea
je
mov
pop
imul
cmp
cmp
test
push
mov
adc
sbb
ret
inc
pop
xchg
sub
out
push
xchg
push
nop
ret
sbb
jb
fadd
out
ret
dec
jmp
mov
mov
rcr
aam
mov
call
xchg
mov
xchg
mov
push
imul
or
sub
cmps
test
inc
rcr
and
ss
(bad)
push
mov
loopne
push
test
add
sbb
push
or
pusha
les
cmc
adc
xchg
jno
adc
push
sub
inc
dec
jmp
pop
inc
je
jo
sbb
pop
loopne
add
mov
jecxz
popf
fld
lods
fist
jg
(bad)
dec
fdivr
ret
jmp
gs
dec
dec
stos
adc
pop
and
sub
loop
and
push
enter
adc
and
push
mov
(bad)
xor
test
dec
(bad)
cs
cld
adc
inc
add
sbb
inc
dec
inc
push
push
push
dec
mov
shl
adc
sar
or
add
gs
add
jg
bound
push
add
and
mov
add
jne
push
sub
cmc
xlat
pop
push
fidivr
add
and
cmp
inc
das
sub
xlat
test
mov
xchg
or
sub
popa
shl
aas
add
fild
adc
add
add
inc
or
and
(bad)
popa
aas
pushf
lahf
dec
cmps
cmp
mov
and
jmp
xor
je
pushf
mov
into
mov
fmul
or
ret
mov
add
mov
and
les
sar
mov
fld
loope
xchg
lock
and
push
mov
rcr
sbb
lods
sub
cmp
add
lock
or
lea
sbb
into
mul
aaa
add
and
dec
jb
inc
in
aaa
les
das
xor
lahf
movs
or
es
or
sbb
xchg
ror
sbb
mov
stc
and
loopne
jl
hlt
add
mov
push
mov
inc
add
jmp
sub
arpl
push
cs
mov
add
test
dec
mov
mov
and
add
clc
or
inc
gs
call
push
push
test
mov
sbb
mov
sub
push
jmp
lea
add
adc
jecxz
add
cmp
mov
or
mov
or
cmp
loope
mov
cmp
adc
xor
add
mov
mov
aam
popf
and
daa
(bad)
sub
sbb
or
pop
jp
(bad)
or
jecxz
inc
adc
mov
enter
lahf
xor
mov
or
jne
sub
add
or
je
loope
fdivr
and
popf
or
aad
push
adc
sbb
pop
mov
xor
cld
push
shr
cdq
add
ret
pop
xor
jne
push
jae
or
pusha
push
jb
and
jbe
add
sbb
push
push
adc
ret
mov
pop
daa
mov
add
adc
pop
or
lock
mov
ret
cmp
or
jg
pushf
sbb
push
xor
ror
lods
and
xchg
ja
out
mov
addr16
sahf
retf
adc
adc
and
inc
and
aam
xor
pop
mov
mov
movs
icebp
jmp
nop
js
mov
call
adc
mov
sub
add
xchg
ja
sbb
push
cmc
(bad)
data16
pop
test
aas
jo
push
leave
das
pop
or
je
sbb
xlat
add
jmp
loopne
pop
jno
or
aaa
inc
scas
ins
dec
clc
in
enter
jo
push
inc
sar
jo
loope
pusha
test
retf
cld
lea
sbb
or
enter
mov
xchg
pop
mov
imul
xor
push
xchg
dec
xchg
inc
jbe
adc
cwde
ins
add
ds
pusha
adc
add
loopne
add
xchg
cmovge
push
retf
mov
push
popf
imul
(bad)
neg
outs
scas
mov
fcom
std
push
jnp
or
dec
or
and
push
pop
push
pop
mov
add
aaa
or
and
out
aam
push
mov
in
cmc
sbb
dec
int3
add
and
(bad)
jl
and
cvtps2pd
xlat
push
xchg
sub
dec
mov
adc
je
and
push
inc
sbb
cmps
pop
xchg
push
sbb
add
hlt
push
push
dec
inc
and
jle
and
push
das
lods
or
add
(bad)
jle
imul
outs
adc
ja
ins
add
jmp
and
push
and
clc
or
fwait
jmp
loope
nop
mov
and
xor
and
sar
jge
pushf
sar
punpckldq
add
or
(bad)
dec
ds
adc
jne
cmc
mov
inc
sub
adc
xchg
loope
xchg
push
mov
pop
xor
sbb
pop
int3
enter
repnz
enter
sub
xchg
adc
call
cs
outs
or
int3
mov
dec
jne
pusha
add
dec
test
jns
add
mov
bound
cmp
adc
or
inc
add
cli
hlt
mov
in
and
lock
adc
and
xor
movs
lods
xor
xchg
adc
pop
sbb
shl
lds
add
cmp
adc
outs
retf
add
or
cmc
cmp
jl
fwait
push
dec
fcom
stos
dec
test
shl
or
add
and
loop
pop
push
xor
out
aas
cli
and
push
or
sbb
add
int
fld
cmp
fdivr
jmp
and
xor
mov
ficom
pop
scas
call
loope
adc
or
int3
(bad)
rcr
xchg
or
cmp
mov
pop
mov
add
das
arpl
(bad)
sub
or
add
int
test
cld
inc
je
sbb
aas
lds
add
cdq
mov
adc
arpl
fist
scas
cmp
inc
xchg
push
push
cmps
or
pop
pop
jge
add
mov
and
pop
mov
sbb
or
aad
shl
and
inc
or
sub
lock
and
ins
fistp
ja
pop
dec
pop
call
and
add
xchg
test
push
xor
pop
stos
jnp
enter
and
add
push
xchg
(bad)
lgs
add
and
inc
enter
shr
jmp
adc
idiv
push
sar
fwait
rol
inc
or
adc
enter
jecxz
and
mov
inc
fwait
rcr
test
pushf
jb
or
es
mov
or
push
lds
push
xchg
inc
adc
sbb
aam
sti
mov
or
cmp
inc
xor
adc
adc
push
loop
scas
addr16
aad
or
fadd
jbe
sbb
mov
dec
sbb
mov
sbb
outs
cmp
jmp
cld
sti
add
mov
xchg
sbb
lahf
xchg
add
jns
sbb
mov
add
dec
or
add
js
sub
outs
push
jg
push
inc
xor
pop
in
push
add
jle
inc
pop
jo
or
cmp
jmp
push
loopne
or
inc
pop
push
dec
add
ja
adc
cmp
cmps
add
or
in
fadd
dec
pop
mov
push
in
pop
xchg
je
adc
ins
aas
xor
sbb
xor
adc
dec
or
xor
and
out
push
shl
pop
lea
jp
int3
adc
xchg
sbb
sbb
movs
int
sbb
test
or
inc
or
mov
or
aaa
add
pop
xchg
sub
cmp
in
mov
dec
loopne
pop
adc
cmp
mov
mov
or
inc
mov
adc
mov
mov
ret
inc
loopne
in
std
in
push
ret
lea
sbb
test
push
mov
adc
or
xchg
(bad)
lock
or
mov
test
inc
push
fs
(bad)
lock
xchg
pop
rcl
(bad)
jmp
test
ins
ror
and
mov
iret
or
int3
sti
loopne
rol
fisttp
lock
outs
sbb
inc
int3
adc
lods
popa
and
inc
(bad)
jmp
mov
cld
out
adc
push
add
jge
in
ins
jl
cmp
ja
iret
dec
nop
xor
dec
and
mov
lods
mov
mov
inc
adc
sbb
call
xor
or
loope
dec
dec
pop
or
mov
xor
push
xor
ret
outs
lea
and
push
inc
sbb
or
jp
jmp
mov
mov
xchg
or
sub
dec
mov
sub
mov
shl
add
inc
test
cs
dec
jo
and
push
jns
sbb
ror
outs
xchg
mov
adc
xor
push
pop
sbb
fcom
sbb
cs
add
add
mov
dec
or
add
inc
mov
mov
push
and
xor
xchg
mov
idiv
sbb
push
mov
adc
jge
cmps
or
mov
xor
sub
inc
in
test
adc
cld
mov
imul
push
lods
loopne
aas
int
add
xchg
pop
mov
(bad)
dec
jle
push
movq
xor
mov
push
adc
jmp
pop
mov
(bad)
or
push
out
fstp
push
dec
(bad)
mov
sub
(bad)
xor
test
mov
xor
adc
inc
cwde
jno
nop
mov
and
cmc
popf
push
sub
ror
push
sbb
add
and
mov
push
cdq
push
inc
test
or
imul
es
std
push
pop
xor
ins
loop
addr16
xor
mov
xor
mov
retf
call
mov
dec
out
or
int3
cmc
pop
dec
pop
push
shr
jg
popa
stos
xchg
lea
jg
(bad)
sbb
sub
addr16
inc
sar
dec
or
sub
xor
(bad)
sbb
add
mov
fadd
cmp
inc
mov
dec
lods
lahf
pop
js
lods
aas
or
mov
outs
je
mov
mov
adc
lahf
sub
or
jmp
sub
add
aaa
movs
sub
or
xchg
xchg
and
adc
mov
sbb
jl
xlat
sbb
in
(bad)
xor
cmp
je
pop
scas
or
dec
and
add
sbb
(bad)
dec
jl
push
and
xchg
push
nop
sbb
lahf
fistp
jmp
inc
or
adc
fisttp
clc
lods
pop
les
scas
pusha
xchg
mov
pop
push
xor
add
cld
arpl
add
add
cmp
test
pop
adc
outs
lods
es
add
cmp
stc
push
mov
shl
add
dec
jmp
sub
adc
mov
retf
or
and
movs
inc
adc
bound
mov
mov
dec
pop
inc
adc
or
xchg
and
jbe
mov
clc
jmp
jmp
in
jmp
ja
pop
cmp
ja
push
add
jg
ins
xor
pop
xor
das
add
ins
and
add
lsl
sub
cmps
and
gs
adc
cmps
push
inc
push
dec
adc
xor
push
add
out
mov
or
jg
lods
lods
or
imul
sub
enter
loope
jmp
lods
push
add
shr
dec
cmp
xchg
sbb
jmp
aas
add
adc
mov
or
dec
adc
arpl
add
add
mov
mov
ror
jne
sub
xchg
test
bound
pop
sub
push
jge
push
loope
cwde
push
jge
push
inc
mov
ret
adc
mov
push
ret
movs
add
fdivr
or
pop
fwait
cld
mov
ret
lods
adc
xchg
int3
push
pusha
leave
jg
pop
or
ja
int
or
and
lock
inc
hlt
ins
pop
dec
loopne
adc
adc
dec
and
lds
test
sbb
jo
or
pop
fistp
pop
xor
xor
stos
in
loopne
jmp
gs
mov
test
push
push
push
sar
or
sub
fistp
cs
adc
or
jg
dec
cmp
rcr
inc
or
adc
or
mov
jmp
adc
sbb
mov
test
mov
js
push
repz
push
fbstp
mov
scas
aam
shl
pop
addr16
add
movs
neg
jle
ins
loope
repz
xchg
add
adc
and
jge
jmp
pop
fiadd
ins
add
cmps
stc
test
icebp
inc
jns
adc
lods
add
sub
loope
lahf
or
dec
sub
or
invd
cmp
and
ror
mov
xchg
loopne
jno
es
call
imul
dec
clc
pusha
and
pop
sti
adc
mov
add
push
xchg
sar
ss
pop
push
mov
add
rol
movs
(bad)
jecxz
cmp
sbb
shr
sar
push
outs
fwait
or
test
sar
add
add
inc
(bad)
sbb
push
imul
adc
cld
pop
pop
lods
jge
out
stos
mov
pop
ins
pop
rol
fbld
lods
xchg
mov
fsub
enter
in
push
add
nop
(bad)
add
ret
adc
arpl
dec
popa
or
add
inc
or
ins
loopne
cmp
popa
push
imul
adc
ins
add
push
or
mov
aam
(bad)
clc
aad
jno
add
stc
in
sbb
add
add
or
popa
aad
pop
mov
movs
or
add
shl
lods
lds
sti
add
adc
add
mov
ins
js
inc
add
push
jo
push
mov
or
sbb
std
mov
pop
shl
loope
sub
shl
adc
inc
pusha
pop
pop
pinsrw
sub
or
pusha
pop
push
adc
les
and
adc
xor
mov
fcmovbe
cmp
adc
xor
cwde
imul
jmp
and
add
aas
bound
ret
add
lock
repz
add
test
push
in
jo
lds
push
test
push
nop
cmp
sub
push
add
sbb
jae
dec
sbb
rcr
or
add
add
adc
cmp
mov
clc
loopne
mov
std
clc
leave
mov
sub
pop
add
xchg
shr
xor
add
clc
xor
add
fs
or
ret
ins
cwde
mov
dec
mov
cmp
outs
jnp
jbe
leave
test
sbb
cdq
add
jmp
jo
ror
mov
clc
adc
cmps
xor
(bad)
ja
(bad)
or
or
adc
add
add
cld
sbb
or
add
ror
call
aas
div
xor
mov
add
adc
das
or
dec
xor
std
es
clc
pop
jmp
push
sub
adc
lds
and
pop
add
enter
sbb
test
call
mov
mov
add
dec
std
fadd
fsubr
jns
jo
mov
push
data16
(bad)
loopne
pop
add
and
jmp
push
sub
fsubr
or
sub
mov
or
aam
add
add
ins
aas
es
add
test
cmp
push
fld
sbb
cld
push
add
and
das
jg
fistp
push
xchg
into
icebp
mov
imul
std
inc
loop
add
movs
mov
mov
adc
pop
xor
(bad)
setne
dec
movs
ss
xor
sub
clc
push
sbb
add
cmp
clc
push
and
out
jmp
rol
lea
aas
aas
mov
btc
and
lds
or
dec
mov
inc
lods
xchg
call
es
call
outs
inc
call
inc
in
inc
sbb
push
cs
pop
and
pop
jno
aam
or
sbb
jbe
pop
push
ret
pop
jno
mov
and
pop
and
xor
xor
inc
leave
cld
push
mov
leave
push
mov
push
lahf
push
sbb
jno
sbb
js
add
dec
sub
dec
js
sbb
sub
fdiv
sbb
mov
jg
sbb
scas
and
pushf
add
fbstp
adc
dec
cdq
mov
sub
fbld
int3
pushf
push
add
popa
loope
adc
add
mov
mov
dec
sbb
ret
adc
or
pop
sbb
popf
repz
fwait
inc
arpl
lahf
sub
imul
and
and
ret
mov
mov
add
in
ja
aam
in
cld
popf
cld
sub
xor
jbe
or
mov
push
pusha
or
adc
add
enter
sbb
add
rol
in
push
mov
xor
data16
cmc
xor
adc
adc
lds
fild
nop
push
sbb
(bad)
mov
lods
jg
ins
sbb
add
sbb
retf
jmp
sub
xor
rcl
into
int3
and
adc
push
xchg
pusha
dec
dec
aam
cmp
xchg
add
adc
jg
inc
cmp
add
and
or
add
pop
enter
add
xor
add
sbb
dec
xor
rcr
aas
add
xchg
mov
fs
add
push
dec
mov
dec
fs
xor
mov
mov
or
add
popa
and
mov
add
dec
or
retf
inc
jle
jno
dec
test
ror
pop
test
iret
mov
mov
or
lea
adc
and
xchg
jmp
and
adc
fisttp
lods
aad
mov
fisttp
xor
add
xchg
push
sub
aas
out
adc
cmps
push
shr
pop
jo
mov
or
popf
pop
xor
pushf
or
dec
sar
popa
mov
jb
add
inc
and
mov
jns
daa
or
dec
cld
add
sbb
pop
dec
xchg
lahf
add
sub
test
mov
loop
pop
dec
dec
xchg
inc
fbld
inc
inc
mov
adc
cld
lahf
rol
adc
inc
sbb
sub
das
and
sbb
call
dec
or
add
int
cwde
aaa
and
lock
mov
jno
sub
push
xor
pop
je
sbb
sbb
pop
fild
xchg
adc
clc
je
add
add
addr16
xchg
xor
adc
inc
sbb
dec
adc
cmp
jno
test
mov
add
repnz
and
push
xadd
mov
mov
or
inc
cmps
push
pop
adc
pop
ror
cmp
aaa
cdq
xor
cmp
xor
call
and
and
add
pop
pop
and
or
mov
mov
and
jge
or
les
mov
mov
mov
neg
shl
and
dec
or
add
mov
inc
push
test
popf
dec
pop
inc
ret
lds
push
xchg
fs
or
and
push
push
in
pop
hlt
aaa
jo
or
imul
fnsave
dec
ins
adc
dec
sbb
xor
stc
hlt
pop
hlt
ror
ins
xchg
push
add
and
stos
xor
leave
xchg
mov
in
sub
ja
ins
push
pop
inc
or
sbb
xchg
cdq
nop
mov
jo
fs
aas
adc
cmp
mov
mov
pop
in
test
fwait
dec
add
fsub
xchg
mov
dec
leave
mov
lods
(bad)
adc
push
mov
or
sbb
jbe
mov
and
fmul
or
out
adc
(bad)
idiv
je
or
or
push
neg
mov
xchg
pop
ror
test
out
push
or
scas
cdq
xor
mov
sbb
push
adc
pusha
add
mov
push
movs
inc
jb
test
pop
xor
add
popa
and
mov
xor
fist
shr
pop
imul
cld
add
cmp
add
add
inc
int3
jns
addr16
xchg
or
sbb
xchg
icebp
xchg
fucomp
or
or
(bad)
int
cmp
xor
ret
loopne
ins
sahf
outs
hlt
aaa
cmp
loopne
push
jno
jge
inc
paddusb
jle
(bad)
jne
or
or
and
pop
cmc
mov
aad
pushf
and
les
mov
aaa
adc
inc
mov
std
jne
mov
jb
jb
mov
add
test
xchg
pusha
je
xor
imul
ds
fcmovb
mov
repz
icebp
fadd
add
test
loop
add
hlt
add
or
pop
popa
sub
sub
aaa
lock
inc
fcom
in
cmp
jne
xlat
or
mov
xor
add
push
in
pop
loopne
adc
int
push
xor
test
adc
popa
add
lea
cmp
aas
sub
add
mov
pusha
js
add
mov
lods
leave
inc
mov
push
inc
test
or
xlat
mov
cmp
mov
hlt
adc
fiadd
les
mov
mov
push
sysexit
xor
mov
mov
cli
adc
test
push
or
ss
mov
inc
popa
sub
mov
adc
sbb
dec
shl
fcomp
inc
(bad)
mov
push
push
pop
add
sbb
aad
ins
inc
call
adc
popa
and
or
jmp
mov
jecxz
xor
or
sbb
and
push
pop
pusha
mov
test
call
dec
cmps
add
dec
clc
xor
pop
or
push
lahf
jne
aas
sub
es
jg
and
fidiv
aas
call
add
adc
lea
xor
xor
ja
mov
in
bound
dec
inc
mov
push
sub
push
loopne
inc
clc
pop
xor
lahf
mov
jle
or
ret
test
mov
outs
pop
mov
push
loop
mov
bound
jno
sbb
rcl
sub
movs
pop
hlt
outs
std
shl
mov
outs
test
int
(bad)
and
int3
les
push
mov
or
je
mov
loop
test
aad
cmp
or
adc
push
inc
or
xchg
and
test
pop
js
cmc
and
ins
mov
xor
mov
cmps
add
cmp
call
add
rcl
ror
int3
jge
sub
lods
pop
or
pop
imul
(bad)
sbb
xchg
or
xchg
dec
xor
sbb
push
push
or
xchg
shl
loopne
adc
add
push
inc
cwde
inc
addr16
dec
dec
mov
mov
sbb
jge
pusha
inc
pusha
ror
xor
mov
or
jmp
inc
add
and
or
dec
sub
sbb
shl
outs
jg
xchg
or
and
inc
mov
cmovns
mov
lahf
add
dec
pop
movs
hlt
or
(bad)
hlt
fist
or
or
sbb
add
mov
add
mov
dec
and
and
mov
js
inc
test
cmp
pop
inc
in
in
and
push
(bad)
xor
loope
ror
xchg
add
inc
cmp
add
hlt
inc
sbb
push
mov
push
dec
push
xor
jb
in
push
push
dec
test
fdivrp
inc
and
frstor
in
mov
add
je
ins
pusha
adc
or
aas
or
push
fild
mov
gs
ins
(bad)
scas
mov
sbb
mov
add
or
or
mov
popa
test
pop
test
add
push
mov
jnp
sbb
daa
add
rcr
in
in
cvtpi2ps
in
adc
ins
xchg
jne
cmp
js
sub
and
pusha
xor
adc
or
js
in
in
inc
cld
and
pop
and
test
rol
rol
mov
jns
mov
dec
push
add
adc
fwait
imul
sbb
popf
imul
fdivr
inc
cmp
lds
jle
cld
adc
fisub
fwait
or
sar
scas
movs
add
test
mov
cld
fs
adc
dec
add
push
into
add
pusha
test
push
push
mov
movs
das
xor
fmul
pop
mov
xor
add
mov
sar
imul
lea
pop
mov
je
jg
fucom
sub
rcl
adc
fcmovbe
jge
xor
cmps
ins
loope
(bad)
push
add
xchg
test
mov
mov
push
aas
and
mov
and
pop
mov
rcl
jno
add
icebp
inc
adc
arpl
test
mov
push
push
test
push
xchg
lock
mov
add
pop
fcom
inc
add
popa
jbe
ins
add
inc
ja
xor
cmp
mov
neg
inc
cmp
mov
je
inc
and
push
jbe
icebp
cmp
mov
fist
fstp
test
sub
aas
mov
mov
push
aas
pop
ins
and
cmp
dec
add
jmp
aam
adc
mov
or
fwait
jb
cmps
lods
cmp
sub
dec
shl
inc
cmp
and
add
div
mov
enter
imul
add
xchg
rcr
push
out
mov
xchg
mov
add
fcomp
lods
mov
or
cmp
inc
and
xchg
mov
mov
add
add
ins
sbb
pop
inc
jp
cmp
and
test
(bad)
push
pop
push
and
cmp
dec
push
jp
inc
dec
fdivr
dec
xchg
inc
mov
dec
rol
add
sbb
and
pusha
fsub
sub
stos
xadd
mov
xchg
fdivr
fdiv
test
stos
mov
repz
sub
mov
std
test
sti
mov
and
lahf
ds
and
dec
inc
and
inc
jecxz
call
divps
push
ret
test
jne
push
adc
cmp
xor
sbb
in
lea
jo
mov
mov
lods
popa
sbb
fadd
or
pop
dec
rcl
sbb
les
sub
add
sahf
lahf
jne
mov
push
mov
push
stc
pusha
dec
movs
sbb
shr
int
pop
dec
sbb
cmp
add
ror
jne
sub
jecxz
(bad)
mov
sub
std
add
add
and
(bad)
data16
pop
shr
es
ret
adc
mov
xchg
or
shl
jbe
and
repnz
adc
idiv
outs
inc
lock
inc
in
xchg
sub
js
xchg
test
loopne
adc
pop
or
inc
and
call
mov
xchg
pop
aam
loopne
pop
sbb
jno
mov
mov
mov
imul
nop
or
pop
in
adc
mov
or
xor
fisub
push
ins
or
mov
imul
call
sbb
adc
jecxz
or
or
sbb
push
dec
inc
jecxz
in
in
xlat
lea
sbb
jno
xor
iret
or
add
jmp
add
sbb
add
js
add
adc
or
pop
xchg
sbb
xchg
daa
mov
adc
hlt
mov
push
mov
jmp
outs
icebp
retf
push
pop
fistp
fs
jo
xor
pop
jmp
push
loop
mov
push
inc
inc
fxch
gs
adc
bound
mov
ss
pop
dec
icebp
fld
enter
jmp
clc
jecxz
sub
fild
adc
inc
movs
jg
pop
cwde
add
add
inc
pop
ret
inc
mov
or
loope
call
pop
push
es
out
sub
jl
or
aas
popa
add
ins
std
cmp
aaa
jmp
out
adc
jo
push
imul
inc
xchg
sbb
call
jmp
add
add
push
lahf
in
stos
and
in
sar
cmps
mov
rol
jmp
call
push
sbb
jmp
in
hlt
iret
div
and
or
jns
scas
lock
fmul
push
test
sbb
sub
mov
add
popf
add
pop
lahf
(bad)
out
add
inc
fs
add
loop
aaa
sbb
pop
adc
popa
pop
fucom
add
rcl
(bad)
add
sbb
dec
or
add
jb
(bad)
inc
shl
jecxz
jmp
push
push
and
shl
jl
mov
and
aad
inc
ins
inc
aas
movs
jo
test
ja
dec
sbb
loopne
inc
inc
test
adc
sub
dec
push
cmc
and
stc
lea
cmp
retf
jns
pop
adc
lds
xor
lea
gs
mov
sub
add
arpl
add
mov
sub
cmp
pop
jle
jne
lds
movs
(bad)
cmp
test
test
icebp
cmp
imul
in
fbstp
or
inc
test
add
jg
leave
inc
xchg
mov
push
(bad)
sti
dec
loope
jo
add
cmp
adc
mov
adc
fimul
add
add
add
or
push
add
and
es
adc
xlat
pop
or
adc
loop
sub
cs
push
in
dec
sub
repz
push
repz
mov
icebp
outs
imul
rcl
stc
mov
push
xchg
jmp
or
loopne
and
or
test
xchg
adc
xor
(bad)
xor
jno
dec
xchg
out
movs
xchg
push
das
pop
inc
cmp
pop
int3
xor
add
mov
dec
inc
xchg
rol
repnz
sar
dec
pop
cmp
dec
xor
push
pop
add
jp
push
dec
pop
jne
jno
cs
mov
mov
cmp
dec
and
cs
enter
push
fcmovnb
inc
push
adc
push
das
dec
inc
in
xor
add
in
inc
aam
inc
push
aaa
and
sbb
push
js
pushf
in
pop
xor
push
enter
cld
and
cmp
syscall
adc
fwait
(bad)
call
lock
sar
add
pop
dec
dec
push
clc
jl
gs
movs
rcr
clc
jmp
xchg
adc
test
mov
sub
adc
or
sbb
adc
or
or
adc
mov
cwde
outs
or
add
outs
inc
pop
les
jg
adc
add
lahf
sub
sbb
lahf
push
sub
push
retf
sbb
xor
cmps
pop
cmp
jl
mov
rcr
dec
shl
push
cmps
inc
aam
ret
and
adc
sbb
cld
std
adc
push
lea
push
aas
clc
xor
(bad)
jp
fild
push
xchg
ror
repz
ins
jl
add
jbe
mov
lods
mov
sbb
jns
mov
int
std
jns
(bad)
(bad)
ins
pop
push
push
mov
icebp
add
cmp
cmp
push
inc
push
ror
retf
xor
inc
pop
scas
xchg
out
fdiv
inc
pop
mov
aaa
mov
lds
cmps
jno
dec
sub
outs
bound
push
rol
cwde
dec
cmp
into
dec
adc
mov
lods
ja
jle
ret
mov
mov
ds
cmps
and
xor
enter
pusha
fs
ins
add
mov
jl
jg
pop
sbb
cmps
cs
rcr
mov
inc
(bad)
ror
jne
mov
adc
inc
push
js
xchg
or
aas
sub
jge
push
sbb
lea
dec
inc
add
mov
lahf
in
int
adc
pop
in
or
loope
jae
loopne
call
in
mov
je
adc
(bad)
and
push
pop
ror
lock
fcom
loope
int3
aas
adc
lea
push
fs
pusha
leave
cmp
imul
mov
jo
add
sbb
dec
retf
inc
jecxz
sub
out
dec
cmp
ror
(bad)
mov
ds
shr
and
test
fs
icebp
sub
sbb
dec
sub
bound
or
imul
or
mov
or
movs
lock
jl
sbb
inc
mov
popf
add
into
push
add
add
and
pop
or
or
adc
shl
mov
inc
jmp
lahf
pop
vmwrite
in
push
cmp
pop
mov
dec
inc
fdivr
mov
and
push
mov
sbb
cmp
inc
inc
sbb
enter
push
adc
or
pop
je
data16
jl
jnp
inc
in
inc
xor
jnp
aas
pop
inc
and
aas
mov
mov
sub
lea
and
ror
fidivr
mov
sbb
ds
jecxz
test
or
pop
retf
adc
xchg
push
inc
cmp
fucomi
dec
dec
and
sbb
pop
push
lds
fnstcw
adc
push
push
and
or
pop
pushf
ret
pop
dec
leave
sar
in
sub
jl
out
iret
cdq
and
sub
jle
and
inc
adc
mov
popa
or
inc
add
add
add
mov
push
dec
daa
push
test
or
jno
or
loopne
les
(bad)
cmp
inc
push
inc
sbb
add
or
loope
mov
jnp
pushf
dec
rcl
or
shl
lahf
and
adc
arpl
dec
adc
adc
loopne
inc
jne
jg
pop
add
(bad)
push
push
rcr
jmp
div
dec
loopne
loop
sub
dec
hlt
sub
pop
mov
pop
clc
test
xchg
adc
(bad)
outs
add
push
mov
(bad)
push
jnp
adc
or
jne
sub
pop
or
into
mov
idiv
jnp
adc
sbb
(bad)
je
pop
mov
add
sbb
cmc
stos
pop
ins
add
stos
mov
xor
lea
int3
xchg
mov
lods
mov
popa
and
xchg
adc
push
and
and
rol
adc
add
sub
pop
pop
lock
pop
xor
add
not
mov
ss
pop
adc
lock
push
iret
popa
push
cwde
jp
ins
fisttp
sbb
sbb
add
jge
ins
and
inc
or
pop
cmp
and
cmp
jmp
mov
div
pop
sbb
mov
and
jecxz
pop
or
call
cmp
jns
or
test
dec
or
push
add
daa
retf
or
rol
xlat
jne
loopne
test
daa
dec
sbb
inc
fist
xor
cld
mov
pop
rcl
fadd
cmps
xor
adc
add
mov
push
xchg
lahf
(bad)
movs
jl
add
push
aas
and
pusha
cmc
add
lahf
and
add
call
aas
ins
lea
xor
xchg
adc
ret
xchg
add
xor
rcl
test
push
fs
push
xchg
inc
arpl
mov
inc
or
pop
or
inc
or
lock
pop
iret
xor
add
outs
cmp
inc
or
adc
inc
mov
jg
fs
add
add
adc
data16
imul
sub
xor
lahf
push
cmp
jg
mov
or
add
pusha
pop
movs
lea
(bad)
dec
push
fsubr
es
pop
cmp
je
loop
xor
pop
bound
imul
dec
dec
dec
imul
push
popf
add
adc
and
test
outs
xlat
ins
adc
push
(bad)
fild
and
and
adc
and
xlat
sbb
xchg
js
xor
cmp
mov
stos
inc
mov
dec
pushf
push
pop
and
jle
xchg
xor
pop
mov
inc
jl
add
sbb
or
pop
out
js
push
dec
mov
pop
pusha
cmp
(bad)
es
sub
sti
jmp
push
cmp
xchg
inc
add
cmp
push
adc
add
add
in
xchg
dec
add
sub
fcomp
ret
imul
inc
or
mov
add
sahf
sbb
add
adc
dec
adc
popf
mov
push
dec
jl
loope
mov
add
mov
gs
scas
inc
popa
int3
arpl
xchg
test
xor
pop
cvtps2pi
les
add
add
mov
inc
int3
push
pop
enter
sub
mov
add
popf
xor
shl
popa
pop
jmp
mov
dec
lods
pinsrw
sub
pop
mov
pop
or
xchg
test
movs
popf
fs
ror
dec
pop
mov
sbb
cld
int
or
sbb
iret
enter
jp
(bad)
movs
sbb
and
in
mov
or
add
scas
inc
repz
loope
add
add
mov
pop
add
ret
mov
repnz
add
enter
loopne
mov
push
push
xchg
(bad)
adc
outs
or
stos
and
fcmovnbe
adc
ins
movs
inc
lahf
add
xchg
add
je
aaa
lock
(bad)
rcl
push
mov
outs
mov
sbb
mov
or
shl
pop
add
in
sbb
cmp
sbb
mov
add
test
add
loope
xchg
lock
pop
shl
out
test
xor
add
sub
jo
jns
jge
clc
test
gs
inc
and
sbb
les
mov
add
mov
ret
(bad)
pop
sub
in
jge
jbe
test
push
pushf
or
loope
lahf
xchg
mov
xor
loopne
inc
aas
jo
loope
xor
call
adc
or
loope
sbb
and
pop
call
jno
pusha
add
daa
pop
xor
jp
jbe
and
hlt
adc
push
inc
jo
add
sub
fdivr
(bad)
call
adc
or
mov
fwait
and
rcr
or
(bad)
loope
nop
mov
fdiv
adc
popa
mov
push
xchg
into
and
sbb
test
lods
xor
addr16
sub
je
push
arpl
and
dec
loopne
xchg
push
call
aas
inc
mov
fmul
push
test
mov
and
scas
adc
push
dec
add
adc
add
pop
xor
jb
xlat
adc
pop
push
sub
sub
mov
pusha
push
cmp
mov
xchg
sub
imul
and
xor
lods
add
add
inc
call
out
xlat
mov
lods
cmc
dec
rol
adc
(bad)
or
push
mov
pop
sub
out
shr
dec
cmps
mov
dec
adc
and
add
add
pop
aad
xchg
icebp
inc
or
xadd
cmovns
push
ds
adc
mov
inc
xor
dec
inc
mov
pop
lods
push
cli
push
lods
or
push
or
aas
sbb
pusha
imul
mov
xor
and
fistp
or
add
pusha
mov
sbb
dec
jno
sbb
test
movs
outs
inc
pop
dec
inc
inc
loopne
shl
or
or
and
mov
add
adc
shl
jno
xor
dec
pop
and
movs
xchg
pop
jmp
fmul
add
(bad)
or
lods
cld
xchg
lea
mov
add
mov
icebp
dec
sbb
gs
and
adc
fdivr
je
sub
fs
xor
test
and
inc
inc
stos
cmp
lds
and
add
jno
add
add
adc
add
inc
test
xor
add
add
ret
adc
in
pushf
inc
mov
cdq
xor
add
cwde
pop
leave
add
outs
and
test
and
inc
and
gs
adc
or
out
mov
xchg
add
push
cmp
test
add
xchg
mov
rcr
sub
test
inc
inc
fdivr
shl
jp
js
lahf
cmc
in
cdq
add
cwde
mov
and
jb
cmp
imul
icebp
sbb
ret
add
sbb
cdq
sub
adc
adc
or
add
sub
mov
adc
pop
pop
inc
test
xor
es
dec
pop
rcr
sub
test
push
adc
je
movs
lds
mov
mov
fdivr
test
std
in
mov
mov
jl
ret
shl
call
pop
push
add
and
loopne
loope
push
movs
push
and
cwde
fmul
sbb
inc
sub
mov
lahf
adc
mov
xor
ret
add
pop
ins
mov
test
movs
mov
call
cmc
iret
xchg
jp
jo
inc
sub
(bad)
dec
adc
cs
ret
pop
push
mov
fbld
pop
mov
xor
mov
xchg
and
clc
loop
adc
jecxz
pop
jae
movs
adc
stos
or
or
or
add
loop
sahf
dec
inc
mov
xor
pop
xchg
or
and
dec
mov
push
jno
add
push
pop
pop
icebp
daa
inc
daa
and
mov
add
test
jo
fisttp
je
mov
xchg
or
inc
pusha
xchg
mov
and
repz
sar
mov
xor
rol
sub
ret
cld
cmp
and
and
aaa
(bad)
xor
push
xchg
mov
rcl
js
fbstp
pop
mov
xchg
fwait
stos
jbe
ret
ins
pop
xchg
pop
add
cs
mov
and
lock
adc
ret
inc
push
mov
cwde
retf
and
pop
dec
lds
lahf
mov
loopne
mov
jne
movs
sbb
or
js
and
fist
add
jp
ret
xchg
and
push
xchg
add
bound
loop
dec
hlt
movs
mov
(bad)
inc
dec
push
movs
in
inc
leave
inc
test
jne
push
int3
inc
or
sbb
lahf
sub
das
cld
pusha
push
sbb
imul
mov
sub
popa
push
jg
mov
shr
jnp
add
push
jl
sub
imul
js
xor
and
sbb
push
cmp
(bad)
xchg
movs
sub
ja
mov
mov
inc
retf
test
fucomp
mov
mov
adc
or
dec
movs
mov
add
(bad)
sbb
lea
push
or
jmp
adc
adc
or
jmp
pop
adc
(bad)
adc
mov
push
rcr
add
xchg
mov
or
add
lds
and
jg
jg
cld
add
inc
mov
test
push
js
inc
adc
push
sbb
loopne
iret
sub
sub
push
cmp
movs
in
adc
pusha
push
push
dec
leave
and
fwait
mov
mov
add
add
mov
pop
and
dec
call
push
adc
xor
or
mov
add
repz
mov
cmps
mov
sar
cmp
sub
aaa
lock
rol
fidiv
lock
inc
adc
sub
jnp
(bad)
push
mov
clc
ja
mov
jecxz
push
mov
sub
lods
addr16
cmp
scas
stos
out
cmp
inc
add
call
lock
hlt
jg
ins
loop
aas
inc
add
push
test
cld
inc
mov
push
inc
jecxz
sub
jp
pusha
mov
popf
pop
jmp
inc
cmp
xchg
jnp
or
add
add
inc
pop
inc
add
sub
sub
xchg
test
push
xchg
call
xor
pop
mov
jo
js
cmp
and
cmps
loopne
jg
add
xor
int
jmp
daa
cmc
and
sbb
jl
pop
adc
aad
add
loope
dec
aas
fwait
js
xor
mov
aam
dec
or
pushf
sbb
add
in
sub
mov
bound
test
inc
loope
push
adc
mov
add
dec
mov
jmp
stc
adc
dec
add
ja
mov
sbb
(bad)
or
test
cmp
pop
(bad)
xchg
(bad)
leave
adc
aaa
(bad)
test
or
sub
or
and
sub
(bad)
and
jmp
xor
or
add
rcr
push
add
or
or
pop
add
js
adc
sti
xor
add
stos
dec
add
jnp
out
or
sub
adc
nop
outs
add
or
int
punpckhwd
or
ror
fcmovu
cld
jno
outs
cmp
aas
je
jmp
sbb
dec
lea
push
or
fist
dec
call
scas
(bad)
or
pop
or
rcl
jp
hlt
adc
adc
js
hlt
mov
inc
inc
dec
push
sbb
shr
add
test
xchg
(bad)
movs
in
outs
dec
inc
mov
int
clc
mov
adc
adc
or
bound
imul
add
lock
jne
leave
ret
xchg
sbb
add
sbb
adc
or
cmp
add
imul
add
adc
xor
inc
cs
jecxz
nop
fld
cmp
clc
sub
ror
add
mov
cmp
imul
bound
test
sub
mov
cwde
sub
clc
sbb
or
retf
sub
add
loop
adc
add
inc
xor
xabort
push
and
ja
rol
adc
test
es
sbb
or
je
daa
sbb
icebp
enter
xchg
pop
pop
daa
add
imul
dec
add
ret
push
int3
mov
cmps
dec
mov
test
cmps
dec
add
pusha
adc
test
ret
jo
inc
push
mov
push
ror
push
int
xchg
shl
jnp
cmp
adc
xor
pusha
rol
dec
adc
mov
xor
stos
xchg
add
mov
push
daa
mov
arpl
mov
lods
jge
cld
ss
shl
adc
mov
aas
ins
xor
or
jmp
push
lds
jae
mov
sbb
ret
fs
sbb
inc
adc
inc
cli
add
xor
sahf
pop
add
sub
popa
xchg
or
lds
lea
aad
pop
pop
arpl
inc
pop
test
lods
pusha
loope
inc
inc
cmp
or
call
sbb
add
or
mov
push
jne
jmp
xor
dec
enter
lods
xlat
and
rcl
shl
leave
and
push
dec
enter
adc
cwde
mov
clc
test
push
adc
mov
push
adc
cdq
add
mov
fisub
xchg
or
xor
mov
test
arpl
mov
inc
and
inc
aas
enter
or
ud2
repz
add
call
add
xor
pop
sub
sub
inc
or
mov
mov
mov
cwde
sbb
mov
mov
lods
rol
shr
sbb
fs
xor
cmp
inc
jg
adc
xchg
or
push
pop
or
adc
adc
movs
fdiv
push
movs
lahf
arpl
aas
fucom
and
mov
pushf
arpl
dec
lock
inc
rcl
cmps
aam
pop
icebp
adc
mov
and
daa
mov
dec
jmp
mov
xor
xor
ret
pop
pop
dec
pop
add
push
mov
je
outs
dec
add
adc
nop
inc
and
ins
paddusw
xor
push
cld
fild
xchg
scas
mov
cmp
les
push
adc
inc
ins
xchg
dec
retf
adc
mov
add
mov
or
push
lea
add
dec
add
cmc
fmul
and
shr
add
and
clc
mov
pop
mov
jno
jne
and
loop
dec
sub
cwde
add
sub
pop
retf
bndldx
fs
test
shr
ins
xor
add
jae
rcl
add
add
dec
leave
rol
daa
mov
xlat
mov
sbb
sbb
test
mov
xchg
shl
sbb
sti
pop
jmp
xor
enter
pop
mov
xor
push
mov
or
and
test
and
jnp
sbb
mov
add
push
add
idiv
dec
or
icebp
es
fs
jmp
xor
xchg
pop
inc
imul
jg
movs
ret
dec
mov
push
jmp
jne
xlat
add
adc
pop
aas
and
xor
xchg
mov
fld
inc
jo
cmp
adc
mov
xchg
mov
(bad)
sub
jg
and
(bad)
jae
mov
sbb
test
push
mov
clc
sahf
pusha
or
sub
dec
add
shl
push
mov
pop
xor
lea
sar
sbb
add
test
push
jne
push
fbstp
pop
and
stc
ins
popf
cmp
enter
stc
shr
test
jb
push
mov
mov
dec
dec
add
imul
jle
jo
jb
adc
je
or
and
lgdtd
adc
lock
add
or
test
test
sub
icebp
push
sub
aaa
pop
adc
iret
or
icebp
and
test
(bad)
or
pop
imul
frstor
push
lea
dec
gs
adc
add
(bad)
inc
add
jne
and
push
lods
(bad)
lds
cmovs
xchg
inc
cld
(bad)
jmp
clc
inc
sub
mov
pop
jmp
les
pop
adc
inc
adc
mov
adc
ins
ins
loop
call
cmp
pop
popf
test
cmp
mov
call
add
push
or
pop
mov
add
dec
call
int3
xchg
jg
dec
jmp
pop
nop
(bad)
popf
ja
add
xchg
sbb
fld
int3
outs
adc
scas
add
add
jbe
adc
inc
adc
fdiv
mov
nop
xor
(bad)
ins
inc
popa
dec
add
clc
jb
imul
add
aas
setle
iret
mov
mov
xor
ja
push
sbb
inc
frstor
inc
adc
jae
mov
ds
(bad)
lds
push
loope
fcomp
xor
mov
mov
inc
xor
sar
mov
push
ins
add
or
jge
pop
pusha
stos
dec
adc
mov
icebp
pop
xlat
inc
sub
cdq
or
or
test
add
loope
inc
adc
xor
pop
adc
scas
xchg
add
mov
or
(bad)
push
rol
pop
add
push
jmp
jmp
add
add
xlat
scas
add
or
adc
or
push
addr16
and
imul
jg
movs
and
loope
cmp
sbb
or
adc
or
xchg
ins
rcr
fldenv
inc
(bad)
rcr
leave
add
loope
shl
and
or
push
lock
sar
inc
cmp
pop
ret
xchg
add
ret
pop
cmp
pop
fist
fwait
jge
shr
xor
movs
dec
test
movs
into
or
in
adc
and
leave
(bad)
lods
mov
jmp
shl
leave
mov
pop
inc
jno
fwait
pop
sub
add
push
cmps
push
sub
or
iret
ret
inc
or
and
xchg
bound
enter
push
push
in
aad
dec
mov
add
add
arpl
and
push
adc
add
or
pop
sbb
push
push
scas
xchg
xchg
xchg
jge
shr
loope
add
ja
nop
or
pusha
rol
push
or
(bad)
adc
xchg
nop
push
and
add
dec
adc
mov
adc
and
adc
and
pop
and
loop
or
dec
dec
mov
cmps
mov
mov
aaa
or
sar
sub
pop
jmp
sbb
sbb
add
sub
pop
or
sbb
in
push
rcl
pop
push
pop
and
push
mov
fsub
imul
adc
dec
add
add
add
or
lods
cmps
cmp
test
and
xor
mov
das
or
icebp
add
cmp
arpl
mov
and
shl
lea
repz
jecxz
ror
lds
adc
add
loopne
mov
xor
clc
sbb
xchg
sbb
loop
aaa
fwait
daa
loopne
jo
fstp
mov
mov
ins
das
pop
xchg
add
nop
lds
pop
test
mov
sbb
ins
sub
jecxz
fsubr
adc
cmp
push
push
jb
ret
mov
rcl
push
or
mov
and
push
jmp
(bad)
jmp
fsubr
xor
js
sub
sub
push
add
jno
les
and
pusha
adc
cmp
and
fisttp
cmp
xchg
cld
push
xchg
pop
sub
ss
repz
mov
jns
int
xchg
dec
jecxz
sbb
mov
sahf
out
lods
in
xchg
or
repz
and
inc
pop
sub
sahf
jl
push
cwde
es
cmp
repz
ins
test
shr
cwde
sbb
out
mov
pop
jno
out
sahf
mov
push
or
cmp
imul
adc
push
xlat
fwait
push
cmp
out
pop
(bad)
push
cmc
pushf
or
cmp
ss
repz
or
fdivr
or
xor
push
sbb
push
xor
sub
push
stos
add
add
xor
cmp
mov
dec
test
imul
lds
outs
jne
shl
and
or
js
mov
push
inc
push
sbb
mov
xor
push
add
adc
or
jecxz
daa
sbb
jbe
imul
daa
addr16
inc
aas
or
retf
pop
daa
or
mov
sbb
test
add
mov
jns
add
add
addr16
or
push
sbb
leave
and
mov
int3
xchg
cmp
bound
pop
add
aas
and
adc
cmps
pop
or
pop
push
ror
inc
xchg
pop
add
push
lahf
call
mov
hlt
sar
lock
loope
mov
lock
mov
in
imul
pop
ret
lock
push
xor
add
sbb
leave
in
test
psubb
dec
dec
or
inc
sub
push
mov
and
dec
push
or
cwde
cwde
dec
sbb
mov
jp
dec
mov
icebp
push
jmp
xor
daa
je
pop
jg
(bad)
adc
cdq
fwait
jmp
push
push
mov
mov
push
add
popa
xchg
push
cmp
ret
enter
mov
or
and
push
popf
test
arpl
ret
sbb
mov
mov
pop
push
sbb
xor
pop
sub
or
mov
dec
dec
cld
and
or
les
out
xor
and
ins
mov
mov
add
inc
rcl
cld
shr
or
add
inc
cdq
sub
cmps
xor
outs
and
dec
add
jp
pop
push
outs
sub
push
out
cmp
pusha
(bad)
dec
outs
jo
pop
dec
stos
pushf
rcl
add
dec
frstor
pop
je
std
aam
adc
add
enter
sub
dec
pop
cdq
or
adc
ret
fisttp
push
pop
push
and
push
pop
inc
add
pusha
xchg
sbb
sti
(bad)
push
(bad)
not
jl
push
cmp
xchg
cmp
sbb
rcl
mov
cli
dec
and
add
push
or
rol
test
pop
cmp
and
pop
mov
fst
cmp
aam
rol
push
iret
dec
lock
add
fwait
inc
call
adc
and
loopne
pop
add
xchg
ja
add
mov
popf
and
inc
jmp
outs
sbb
inc
iret
les
imul
jno
mov
mov
sub
add
xor
mov
push
jb
and
or
sbb
dec
adc
add
mov
into
jmp
aas
jne
and
sbb
xor
xor
jb
push
shl
sbb
add
sbb
sub
xlat
lea
add
add
fwait
add
mov
lds
rcl
loop
cli
add
pop
or
sbb
add
es
inc
sbb
in
dec
icebp
dec
fs
pusha
or
sub
xchg
clc
mov
and
movs
outs
push
mov
cld
and
sub
fisub
push
xor
adc
mov
mov
inc
les
popa
add
jmp
shl
or
lock
xor
leave
push
or
add
and
leave
aam
loopne
(bad)
xor
pop
fwait
pop
sub
ja
imul
mov
mov
lock
inc
or
aas
push
jnp
add
xor
inc
push
lds
xor
rol
adc
je
or
ret
mov
jbe
inc
add
shl
add
sbb
outs
nop
pop
pop
shr
mov
mov
sbb
aas
aas
clc
add
mov
call
inc
sub
add
in
and
inc
or
and
bound
lahf
je
inc
and
jbe
scas
dec
add
and
mov
pop
cmp
sub
sub
ss
clc
cmc
adc
xchg
dec
adc
cld
cli
movs
lea
pop
jb
fist
loopne
inc
call
push
and
test
dec
pushf
sub
popa
xor
sub
outs
or
dec
inc
mov
test
lods
mov
iret
push
fadd
jmp
mov
add
popf
and
mov
sbb
(bad)
or
mov
push
mov
push
jecxz
cs
stos
mov
cwde
cwde
jae
or
mov
jne
mov
sbb
xor
sub
adc
xor
xchg
js
mov
add
fdiv
add
iret
dec
or
or
push
daa
mov
push
gs
js
xchg
add
test
ss
adc
ja
test
loope
adc
dec
mov
shl
inc
xor
or
mov
das
or
push
pop
fcom
mov
mov
aam
sub
xor
inc
adc
ja
clc
shl
or
fistp
jb
lods
mov
adc
add
sub
sbb
and
(bad)
xor
lea
dec
sub
xor
add
push
std
xchg
(bad)
in
fcmovne
or
mov
push
sahf
and
mov
sar
mov
je
sbb
or
xor
xchg
hlt
aad
ins
add
mov
push
das
jns
aaa
dec
mov
or
xor
sub
and
shr
and
daa
jo
loopne
mov
adc
mov
shr
cmp
stos
mov
push
arpl
pop
inc
lea
add
add
lods
outs
or
ror
push
or
(bad)
scas
jo
or
mov
neg
lahf
dec
dec
and
dec
mov
rol
mov
and
jne
or
and
add
aas
mov
jne
ret
sbb
add
jo
jmp
and
jnp
push
inc
(bad)
jnp
jle
xor
fild
xchg
add
or
loopne
out
or
inc
imul
in
xchg
adc
mov
aas
and
dec
add
inc
mov
add
push
clc
fwait
or
push
sub
ret
or
test
jno
sub
pop
pop
hlt
jne
call
mov
(bad)
adc
and
imul
lods
sub
pop
stc
push
jecxz
xor
inc
add
adc
mov
push
and
rcl
jl
test
adc
inc
jmp
jge
inc
xor
mov
xchg
or
shl
add
cld
test
xchg
leave
pop
inc
cmp
ret
inc
test
outs
cwde
push
sar
mov
sub
mov
hlt
push
add
mov
mov
cmp
xchg
and
(bad)
jge
cmps
rcl
add
jge
add
xor
mov
xchg
shr
jg
or
outs
cmp
fadd
xchg
or
out
dec
rol
test
outs
adc
add
pop
loope
dec
or
outs
sbb
jmp
sub
mov
pop
jp
cli
mov
xchg
or
fmul
jo
cwde
ret
inc
ins
push
nop
test
inc
stos
pop
imul
ins
dec
add
gs
xlat
sbb
jae
arpl
xchg
adc
cs
jp
(bad)
fild
add
addr16
or
mov
sub
jmp
cmp
jb
push
or
xchg
xor
ret
jge
add
movs
push
scas
inc
shl
(bad)
call
mov
cmc
add
out
mov
push
test
scas
sar
add
pop
pop
dec
fwait
add
jbe
in
adc
ja
push
xchg
mov
scas
loopne
push
push
(bad)
cmp
fcomp
or
ret
mov
push
push
mov
xchg
mov
inc
mov
mov
xor
daa
mov
xor
lock
fs
rcl
push
mov
cmp
add
xchg
inc
pop
cdq
cmps
mov
or
or
sub
push
push
mov
data16
mov
jl
jbe
xor
and
push
cmc
nop
int
test
add
push
push
test
fs
gs
sbb
cmp
pop
inc
pop
xor
sub
push
add
movs
or
ins
nop
add
out
arpl
and
aad
and
inc
movs
push
pop
add
pop
aas
mov
add
lea
shld
test
or
imul
or
outs
dec
cld
inc
sub
rol
xor
or
jns
adc
imul
cmp
dec
jg
daa
mov
ret
rol
cmp
xchg
or
enter
sbb
add
push
dec
inc
mov
add
or
std
outs
inc
sbb
movs
mov
xchg
sbb
mov
test
mov
ret
dec
dec
arpl
popa
adc
cmps
movs
pop
fld
sub
jge
jl
lds
aad
add
ror
loope
or
sub
lahf
inc
fisttp
or
popf
int3
leave
pushw
test
mov
inc
ins
lods
inc
movs
sbb
lods
ss
adc
or
and
mov
js
dec
in
sbb
push
loopne
add
and
mov
or
jo
sbb
or
push
add
ficomp
dec
and
js
sbb
shr
jl
or
sub
sub
stc
push
or
(bad)
ins
push
and
leave
add
xchg
mov
lea
into
sbb
push
cmp
add
cmp
(bad)
xor
cmp
or
shl
mov
add
sbb
xor
jnp
addr16
add
ds
inc
ins
aas
cmp
pop
je
mov
xchg
fwait
and
ret
mov
fistp
or
inc
mov
sub
pop
mov
xor
nop
imul
btc
ds
and
and
push
retf
rol
jno
add
jo
rol
add
push
stos
test
cmc
mov
inc
adc
add
xor
add
mov
add
jg
add
nop
sbb
and
jns
mov
call
and
hlt
dec
js
add
aad
add
and
dec
arpl
(bad)
fs
and
(bad)
mov
or
ins
add
stc
fsub
jb
and
and
or
in
or
enter
mov
and
sub
mov
or
xchg
daa
sar
aam
xor
or
test
adc
pushf
mov
mov
mov
inc
xchg
(bad)
daa
dec
mov
pop
mov
mov
mov
daa
mov
dec
fisttp
shr
adc
and
sub
add
daa
pushf
(bad)
mov
adc
mov
loope
inc
or
or
push
pop
rcl
stc
mov
dec
sub
add
push
rol
or
inc
dec
xchg
cwde
pushf
add
movs
ins
dec
inc
dec
inc
sbb
add
push
jno
retf
lea
test
in
adc
outs
add
sub
sub
fs
aas
add
xchg
or
enter
mov
push
ins
jo
inc
xor
sbb
adc
fldcw
add
push
sbb
ins
jo
sub
jmp
push
push
pop
pop
nop
add
dec
sub
sbb
sbb
and
sub
jp
ins
stos
xor
inc
sti
pop
and
and
xor
jmp
sbb
adc
fadd
jmp
sbb
inc
sbb
rcr
ins
fiadd
or
ja
and
mov
jbe
cmp
repz
icebp
stos
dec
cld
push
mov
cdq
mov
shl
xor
ret
add
jg
push
adc
call
and
add
jo
push
adc
push
leave
and
or
jae
daa
inc
cmp
mov
daa
movs
sbb
fcmovne
add
jnp
pop
je
das
nop
sub
push
mov
(bad)
push
and
in
push
sbb
outs
xor
adc
add
dec
aas
jge
lods
pop
rcr
int
adc
xor
lahf
cmps
movs
or
xchg
sbb
retf
jg
mov
sbb
movs
add
adc
and
push
movs
sbb
pop
nop
mov
sbb
mov
mov
mov
and
dec
jecxz
rcl
sbb
push
or
(bad)
ffreep
ja
or
add
popa
add
mov
ret
int3
add
cmps
and
lahf
and
cmp
sbb
dec
inc
dec
push
or
adc
adc
cmp
cmp
and
adc
bound
adc
and
pop
popa
push
leave
inc
fsubr
mov
(bad)
imul
jg
sbb
rol
icebp
dec
adc
fistp
stos
push
or
push
popa
mov
lahf
or
push
xor
pop
xor
leave
inc
xor
add
xor
nop
and
fdiv
add
test
hlt
clc
sub
sbb
mov
ins
mov
mov
mov
sub
pusha
adc
pop
jg
add
add
(bad)
nop
push
rol
fs
adc
aaa
push
push
add
scas
add
rol
push
adc
and
jo
inc
fimul
adc
les
sbb
shl
cdq
pop
lahf
in
add
add
in
adc
add
dec
loopne
rol
lods
xor
cmp
adc
pop
in
enter
adc
mov
xchg
sub
mov
xchg
jle
dec
or
xchg
adc
cmp
cmps
adc
pop
mov
xor
pop
push
xor
push
mov
cmp
push
leave
adc
and
sbb
loop
adc
and
and
inc
sub
aas
jbe
xor
dec
xor
dec
cmp
or
mov
jnp
mov
jnp
lds
push
mov
inc
sbb
outs
add
and
ret
xchg
or
pop
add
add
add
adc
enter
mov
cmp
call
aas
cmp
mov
pop
pop
or
shl
push
or
adc
enter
mov
sbb
fild
fcom
jg
mov
sar
add
out
adc
add
push
inc
pop
jecxz
add
mov
jle
jne
call
add
mov
pop
adc
cmps
fmul
pop
mov
call
mov
clc
mov
sub
outs
iret
gs
add
pop
jl
xor
jo
sub
add
int3
push
in
lods
push
adc
inc
inc
lahf
imul
out
inc
and
sub
sub
or
push
and
loopne
loop
or
sbb
or
mov
jle
popa
arpl
das
add
add
and
add
nop
(bad)
sub
push
rcr
dec
add
pusha
and
inc
adc
jne
sub
add
aas
adc
fs
jg
or
and
dec
leave
rcl
sub
(bad)
shl
lahf
les
inc
arpl
push
sbb
jecxz
xchg
add
ja
movs
and
dec
add
cmps
xor
loope
fwait
pop
push
movaps
jl
je
or
mov
test
enter
add
cmp
mov
push
jge
(bad)
sub
xchg
leave
rcl
loopne
xor
test
inc
push
movnti
push
dec
lods
xor
or
rcl
fwait
ss
xchg
mov
rol
push
dec
push
fmul
sub
and
clc
pop
in
loopne
in
mov
sbb
push
ins
cwde
add
inc
aas
leave
punpcklwd
adc
xor
loope
add
loop
add
jg
push
adc
lds
sahf
inc
test
sbb
test
ins
mov
popf
mov
sbb
and
rol
movs
adc
mov
cmp
mov
add
pop
imul
ret
adc
xchg
sar
sbb
sti
adc
jbe
sar
cmp
or
imul
punpcklwd
adc
(bad)
adc
mov
data16
pop
dec
adc
cmp
imul
pusha
loop
sbb
pop
cmp
or
jnp
adc
mov
lock
and
mov
jb
fistp
jns
js
and
aaa
or
popf
cmps
dec
add
mov
popa
dec
mov
fcom
in
dec
pop
push
dec
add
xchg
test
in
mov
jmp
(bad)
hlt
sbb
dec
sub
sbb
ret
clc
popa
add
les
pop
mov
stos
mov
pop
cmps
mov
ret
dec
enter
push
push
fcomp
xor
push
sub
lock
test
add
es
pop
adc
sub
jecxz
dec
xor
xlat
je
ss
lock
cmp
dec
inc
pop
je
jae
push
inc
add
or
adc
inc
daa
pop
inc
movs
mov
push
pop
inc
pop
js
hlt
sub
in
les
pop
or
jg
call
or
js
test
je
lahf
inc
mov
jmp
add
push
push
cmovbe
and
or
add
add
adc
mov
adc
arpl
clc
and
lock
jb
inc
cmp
mov
inc
mov
pop
sar
mov
sub
lock
dec
xor
and
or
fldz
std
(bad)
cli
jne
mov
add
aas
out
mov
jbe
je
test
add
pop
aaa
jmp
inc
jp
aaa
inc
ja
sub
add
inc
js
and
mov
and
or
or
pushf
jl
mov
addr16
inc
cmp
cld
pop
or
fiadd
push
mov
and
push
ret
les
or
xchg
inc
cwde
pusha
dec
pop
sbb
dec
(bad)
inc
dec
bndldx
push
adc
push
fnsave
push
idiv
pop
xchg
or
loopne
and
inc
arpl
loopne
xchg
push
jmp
mov
push
sub
push
or
mov
retf
adc
sbb
in
outs
sub
cmp
mov
adc
mov
sbb
push
push
scas
jb
mov
jbe
mov
add
inc
ja
adc
outs
xor
inc
dec
loopne
jl
and
and
jp
add
push
and
dec
in
sbb
(bad)
xor
je
lea
iret
push
add
ret
add
call
jecxz
ror
cdq
push
cmp
add
lods
fld
inc
in
jecxz
cmps
dec
dec
inc
adc
sub
mov
pop
mov
test
imul
push
test
daa
jl
adc
adc
(bad)
add
sbb
push
into
mov
mov
add
inc
cli
sub
adc
ins
jns
add
sbb
lds
sbb
pop
cdq
or
outs
bswap
push
outs
add
adc
dec
mov
ret
xor
add
push
mov
fistp
inc
push
add
push
pop
jmp
inc
cwde
rol
mov
adc
icebp
je
repz
clc
rcr
mov
out
adc
sbb
stos
push
aas
push
adc
movs
xchg
and
inc
mov
mov
cld
pxor
inc
inc
sbb
dec
retf
or
mov
inc
xor
pop
xor
scas
sbb
and
cwde
rcl
test
out
adc
cwde
ret
push
or
retf
push
scas
aam
push
sbb
xchg
adc
pop
xor
lea
sbb
push
or
mov
xchg
pusha
popf
inc
or
adc
mov
sar
add
pop
sbb
or
xchg
sbb
aas
add
lahf
and
scas
xchg
out
push
das
hlt
mov
mov
mov
dec
fcomp
ret
fld
add
test
pop
or
xchg
sub
or
pop
in
push
fcmovb
lods
sub
inc
js
adc
xor
inc
dec
add
or
or
mov
ja
sbb
xor
push
sub
add
or
or
xchg
test
std
cwde
add
sub
int3
movups
inc
fcom
adc
loopne
imul
enter
or
add
jmp
lods
or
enter
enter
pop
mov
imul
xchg
loopne
rol
dec
enter
stos
adc
add
cmc
cmp
je
or
add
js
imul
add
inc
or
push
add
enter
or
sbb
ficomp
mov
shr
lods
loopne
xchg
fstp
mov
shl
or
or
je
inc
push
sub
inc
push
popa
and
add
adc
ds
or
add
sub
loope
dec
in
adc
or
or
add
add
add
in
sbb
or
jbe
dec
mov
loope
dec
add
loope
cs
and
and
adc
or
cmp
and
add
add
mov
loope
add
push
mov
add
loope
add
adc
or
or
pop
inc
push
stos
js
add
or
(bad)
sbb
adc
dec
or
sti
stos
adc
or
push
je
or
or
lahf
ins
test
movs
hlt
stc
movs
cs
sub
sub
sbb
pusha
xor
jecxz
adc
fdiv
xchg
and
push
sbb
les
test
or
addr16
(bad)
or
xor
fisttp
pop
mov
cmp
push
jb
or
mov
xchg
ins
das
add
lea
dec
hlt
or
push
test
or
fldcw
jmp
mov
push
pop
and
push
sbb
loopne
or
popf
or
mov
xchg
inc
inc
popa
dec
mov
jecxz
inc
clc
mov
imul
add
sub
ins
gs
ror
add
or
or
mov
push
xchg
xchg
jge
jo
addr16
clc
ret
mov
ins
adc
pop
in
call
pop
lods
or
jae
add
lock
mov
xor
dec
outs
loopne
stos
mov
mov
ds
imul
sbb
and
add
jno
or
add
sbb
outs
or
adc
icebp
adc
sbb
mov
ins
jg
test
fwait
sub
push
add
sub
cmp
fistp
scas
or
add
adc
mov
add
add
lahf
adc
ret
push
adc
cmc
js
mov
add
add
fbstp
das
pushf
pop
clc
or
inc
mov
bound
lahf
arpl
sti
mov
mov
jge
aas
push
inc
pop
xchg
fs
add
test
aas
test
mov
test
push
xchg
cmp
fiadd
add
mov
jg
clc
jo
or
inc
gs
xchg
test
mov
neg
jmp
das
add
fwait
mov
fist
cmps
clc
lods
jns
xchg
add
xor
pusha
pusha
sbb
or
dec
sbb
adc
inc
xchg
ficom
pushf
mov
mov
unpckhps
cmp
xchg
push
daa
sbb
jo
sub
inc
ret
dec
or
push
rol
loopne
add
mov
pop
sbb
inc
call
fisttp
push
add
and
jecxz
sub
pop
or
dec
add
push
and
jo
or
aas
stc
add
xor
add
in
mov
push
fidiv
jecxz
xchg
adc
pop
jmp
arpl
stos
adc
das
mov
or
xchg
stos
mov
paddb
(bad)
mov
or
inc
and
mov
jne
je
adc
mov
or
popa
sub
popa
or
sbb
pop
mov
and
adc
ret
mov
or
xor
and
inc
inc
cmps
jg
or
lahf
add
adc
and
add
mov
pop
sub
pop
adc
push
xor
or
push
fwait
adc
sbb
sbb
fwait
add
sbb
sbb
mov
and
pop
add
pop
mov
mov
lahf
inc
push
push
push
mov
inc
enter
push
xchg
xor
sub
sbb
movs
push
lahf
inc
or
shl
or
aas
sbb
sbb
out
loopne
fstp
inc
retf
in
mov
sub
pop
sub
and
pusha
inc
scas
pop
mov
and
add
movs
push
shl
mov
mov
mov
lahf
adc
rcr
jg
and
sbb
mov
xor
lahf
mov
pop
ins
jg
sub
scas
fisub
movzx
xchg
add
sbb
sub
rol
test
loopne
sbb
lahf
or
or
mov
adc
das
pushf
or
adc
movs
dec
push
aas
adc
and
dec
sub
add
dec
fist
and
inc
popa
dec
inc
adc
sbb
mov
mov
retf
(bad)
int3
std
movq
xchg
pop
ret
jg
jno
push
arpl
add
inc
adc
aas
and
jl
loopne
test
pop
add
inc
inc
dec
arpl
lods
stos
add
add
xchg
add
xchg
xlat
dec
or
lock
retf
ret
pop
add
add
mov
arpl
int
push
ret
sub
or
sbb
rcr
es
mul
pushf
aas
sbb
xor
lds
pushf
pop
jg
es
bound
mov
add
pop
lea
fcom
inc
fmul
dec
jl
jno
scas
fwait
les
pop
je
or
add
inc
jmp
mov
dec
sbb
add
loopne
mov
in
add
int
ror
add
pop
adc
sub
and
jo
push
cmp
pop
and
lahf
fbstp
or
pusha
adc
fcom
les
in
imul
sub
inc
sub
or
xchg
pop
ret
sub
push
(bad)
pop
xor
push
or
push
jmp
and
xor
mov
daa
js
sbb
int3
xor
pushf
pusha
aas
xor
in
sbb
dec
aam
dec
push
and
mov
aam
or
adc
int
sbb
adc
pop
repnz
nop
(bad)
js
call
scas
loope
imul
lods
sbb
aas
adc
jb
adc
mov
adc
ins
and
cli
(bad)
or
add
and
aas
or
aam
pushf
mov
enter
fld
scas
ror
jle
enter
push
sbb
sbb
fmul
adc
inc
and
call
or
xor
imul
adc
sbb
cmc
dec
les
adc
add
and
and
or
mov
jg
sub
mov
inc
or
inc
adc
std
add
xor
mov
dec
adc
ror
nop
retf
aam
push
and
dec
pop
rol
dec
fsub
or
and
xor
(bad)
(bad)
inc
ret
inc
xchg
push
loope
and
mov
fild
pop
jmp
dec
pop
pop
arpl
nop
xor
adc
mov
mov
mov
mov
sbb
adc
std
mov
cmp
pop
sbb
je
and
dec
jno
cmp
lock
out
add
and
add
lods
cwde
xchg
xor
add
adc
and
cdq
clc
es
or
adc
dec
imul
or
xchg
mov
add
sub
cmp
das
ror
mov
stos
cs
add
mov
add
test
(bad)
jle
jge
jp
(bad)
scas
push
pop
sbb
lea
add
add
out
add
pop
mov
cmps
int3
add
ret
pop
cmp
jne
iret
fisttp
add
sub
inc
mov
test
or
push
test
and
jge
pop
inc
jnp
mov
sbb
pop
jge
fisttp
jge
xor
mov
push
xchg
aas
fucomip
adc
xor
pop
mov
ror
retf
pop
js
scas
and
add
test
mov
inc
push
cmp
inc
jg
push
xchg
mov
mov
add
push
mov
push
dec
mov
sub
lahf
xor
inc
dec
add
aas
or
jae
xor
dec
pop
or
inc
dec
jmp
inc
aas
pushf
adc
inc
imul
and
jg
movs
test
push
xchg
fld
fbld
ror
lea
pop
inc
(bad)
loopne
push
pop
sub
or
cmovb
mov
mov
dec
jl
xchg
jg
or
and
dec
fiadd
or
cmp
rcl
movs
(bad)
jg
pop
rol
add
add
adc
cmp
xchg
cmps
adc
and
fisubr
or
lahf
xchg
loopne
nop
xor
dec
push
jg
shl
mov
mov
enter
sub
sbb
add
push
inc
or
pop
lds
je
movs
jl
mov
test
push
sub
imul
ret
adc
mov
adc
xor
inc
push
add
sub
add
mov
(bad)
pop
adc
adc
sub
rol
or
nop
sub
add
mov
nop
pop
jg
cmp
das
mov
add
and
pushf
push
xor
add
mov
cmp
nop
mov
lahf
xchg
mov
jg
sub
ficom
inc
call
add
les
or
call
or
push
pop
mov
dec
cld
imul
add
inc
lock
push
arpl
or
aas
mov
adc
aam
or
xor
mov
pusha
push
js
jnp
xchg
and
dec
aas
adc
push
aas
xchg
fiadd
pop
cwde
rcl
pop
or
mov
jae
add
xchg
push
jb
fdivr
pop
mov
je
js
gs
loopne
add
cwde
lahf
add
ss
cld
ror
mov
gs
jecxz
sbb
pop
(bad)
imul
add
je
or
and
test
or
jnp
dec
int3
add
jmp
add
call
nop
jmp
xchg
cwde
add
add
mov
sub
loopne
aam
xor
xor
jo
cmps
(bad)
xchg
and
xor
shl
jmp
aam
les
cmp
pusha
mov
arpl
mov
(bad)
jp
and
dec
(bad)
sbb
adc
pusha
mov
dec
xchg
xchg
lock
dec
les
imul
fimul
addr16
mov
add
mov
sub
sbb
push
add
rcr
call
or
pop
sbb
push
lahf
je
sbb
cmp
pop
stc
jl
ins
inc
gs
data16
add
push
or
lds
bound
jmp
push
js
rcr
ret
sub
ret
or
jecxz
das
and
push
push
rcr
or
adc
rcl
fs
sub
or
sbb
fild
inc
or
adc
adc
mov
fstp
or
inc
pop
mov
or
xlat
enter
in
test
push
enter
dec
adc
xor
sub
and
sub
adc
cmp
sbb
inc
and
dec
mov
or
hlt
mov
cmc
adc
hlt
lea
loopne
pop
push
add
div
clc
cmps
dec
movs
xchg
push
sub
in
add
pop
sub
sbb
inc
cmp
add
mov
ret
and
add
call
sbb
lods
jmp
jmp
adc
leave
mov
xchg
add
push
das
mov
or
mov
stos
test
or
mov
add
push
mov
add
xor
or
in
or
es
and
enter
ds
jecxz
popa
jmp
xor
xor
and
adc
lahf
jmp
ret
add
jno
dec
pop
adc
cmp
dec
add
and
add
sub
leave
adc
lds
mov
test
test
cs
jmp
add
adc
adc
add
add
lea
retf
mul
movzx
inc
stos
and
or
leave
in
inc
push
test
pop
dec
daa
add
cld
sbb
push
loope
add
xchg
sub
jg
dec
loop
leave
je
add
dec
xchg
call
daa
push
je
fistp
pop
dec
cmp
add
popf
aas
cmp
add
call
int
shl
mov
sub
frstor
inc
adc
pop
js
jmp
push
(bad)
adc
jl
jmp
cmps
or
lock
sub
(bad)
mov
dec
mov
rcl
(bad)
push
mov
cmp
cli
add
mov
imul
les
inc
and
ds
add
sbb
das
inc
imul
sub
stc
mov
inc
or
jo
or
jo
push
pop
inc
add
in
cmc
ror
jo
mov
or
inc
call
retf
inc
leave
test
cmp
mov
rol
sbb
dec
fadd
xor
jmp
push
xchg
xchg
mov
test
push
out
data16
or
xchg
retf
popa
or
cmp
jg
daa
test
ja
jp
mov
inc
jo
push
sub
inc
add
add
test
test
or
nop
or
test
adc
mov
loopne
push
in
jb
paddsw
or
mov
adc
shl
mov
and
jl
push
mov
mov
pop
dec
jb
add
sub
xchg
xchg
sub
fstp
mov
sbb
cmps
or
sbb
jg
push
jmp
dec
int3
jmp
xor
pop
cli
mov
mov
mov
aas
inc
loopne
sbb
jmp
xchg
in
pusha
adc
and
adc
jae
call
or
push
inc
jno
stos
jae
adc
jae
imul
rol
and
pop
jg
icebp
or
inc
sbb
cli
jb
add
sbb
jno
jg
add
fld
ss
xchg
mov
dec
das
sub
mov
inc
jp
dec
stc
pop
or
jl
sub
xchg
imul
mov
loopne
or
cld
enter
aas
dec
adc
dec
adc
sbb
jbe
aad
test
(bad)
aaa
inc
pop
inc
xchg
pop
jle
sbb
adc
xchg
add
mov
std
or
sbb
or
sbb
test
or
mov
cld
cmp
sbb
xor
lahf
pop
sub
imul
das
lods
popf
xchg
cmp
inc
push
add
cmp
mov
aaa
aas
push
mov
add
sub
imul
or
inc
add
and
push
out
das
or
mov
fwait
dec
sub
dec
or
push
lock
int
push
adc
inc
mov
sub
jl
cmp
cdq
pop
aas
push
fnstenv
fstp
mov
mov
xor
lds
sbb
dec
int3
imul
retf
lea
or
or
call
pop
fstp
jg
mov
aas
test
int3
jg
sub
int3
(bad)
xor
cmp
mov
mov
xor
pop
je
or
arpl
xor
jp
or
or
sbb
pop
xchg
shr
nop
cs
xor
xchg
sub
jmp
adc
adc
rcl
test
adc
jmp
and
pop
jo
lahf
mov
call
or
dec
outs
je
leave
ret
inc
mov
cmp
aad
fdivr
sbb
icebp
add
mov
and
mov
icebp
jl
cmp
lea
xor
addr16
arpl
int
mov
mov
add
pusha
adc
jo
fmul
xor
xor
jmp
inc
add
mov
fcomp
xor
lock
movlps
sub
in
xor
pop
mov
lock
clc
jmp
jge
xchg
gs
jg
ret
add
add
enter
mov
and
lea
push
(bad)
ss
push
or
rcr
mov
xor
jl
or
jg
mov
rcr
inc
sub
test
pop
pop
mov
jg
pop
scas
xchg
cmp
retf
inc
cld
aas
das
pop
push
xor
daa
adc
dec
adc
fild
mov
fimul
adc
lahf
(bad)
push
pop
xchg
push
and
loop
add
dec
xchg
inc
mov
mov
pop
adc
cld
and
or
cmp
xor
jg
and
push
lahf
jg
sar
push
jge
jmp
test
mov
add
aam
sbb
jmp
dec
add
ins
push
xor
retf
test
(bad)
mov
and
and
aam
imul
jl
push
mov
adc
mov
int3
(bad)
aas
test
inc
cmp
mov
jnp
add
pop
ret
pop
cmp
cdq
push
xor
lds
jg
dec
mov
sti
pop
sbb
pop
adc
jge
gs
mov
adc
mov
pushf
(bad)
aas
and
adc
sbb
or
mov
rcl
adc
mov
push
pop
inc
mov
shl
mov
pop
ret
fisttp
jecxz
inc
loop
cmc
in
adc
inc
lea
mov
adc
mov
aas
add
sub
lea
mov
sub
adc
jg
xor
dec
rcr
or
fadd
jg
jo
bound
pop
jo
and
add
mov
inc
popa
pop
xchg
mov
mov
aam
push
test
jns
add
sbb
sbb
xchg
adc
(bad)
mov
xchg
pusha
inc
mov
adc
popf
cmp
and
nop
mov
mov
adc
leave
jne
push
sub
int3
adc
ror
dec
xchg
mov
push
mov
or
sub
jge
and
sub
mov
dec
or
cdq
xor
lods
and
test
ss
and
adc
sbb
test
sbb
sahf
dec
stos
dec
loope
dec
and
fisttp
mov
arpl
adc
ror
jmp
pop
jo
dec
and
in
pop
nop
add
inc
and
pop
mov
xchg
movs
adc
sbb
rol
ins
or
add
adc
nop
sub
push
jg
mov
inc
jl
cmp
test
shl
jb
call
inc
mov
adc
xor
nop
call
add
dec
inc
cmps
and
mov
inc
int3
mov
inc
cwde
push
add
inc
or
add
pushf
mov
lea
mov
inc
pop
fs
sub
js
in
pop
or
and
and
or
push
jnp
mov
sbb
mov
rcl
jg
mov
add
or
loopne
pop
mov
mov
mov
call
fadd
sbb
mov
fidiv
mov
sti
jns
mov
pop
fst
mov
add
inc
xchg
(bad)
aas
fcmovbe
push
test
mov
add
mov
pop
nop
or
(bad)
les
lahf
add
pop
sbb
inc
push
cmp
and
loope
xor
dec
push
add
movs
sub
mov
add
outs
jecxz
add
ss
add
sbb
add
inc
pop
lahf
arpl
xor
pop
and
mov
and
sbb
addr16
xor
dec
rol
iret
xor
fsubr
add
rcr
add
sub
lods
fwait
cmp
push
lods
lods
pop
or
jae
xchg
pop
and
sbb
mov
sbb
(bad)
sbb
xor
inc
add
in
add
pop
(bad)
out
call
cmp
or
add
call
ret
pop
leave
add
add
mov
add
add
cwde
mov
arpl
pop
pop
push
pop
inc
imul
xor
enter
or
add
cmp
popa
sub
sbb
lahf
fist
add
mov
sbb
add
xor
pop
pop
and
mov
call
or
pushf
mov
cs
mov
lods
call
or
int3
jg
add
adc
ret
ffreep
daa
mov
push
pop
dec
cld
bound
int
aas
bound
and
inc
cmp
cs
lahf
ret
or
lds
add
add
dec
retf
test
mov
dec
lock
or
pop
dec
jg
sub
push
or
lds
xchg
lahf
iret
mov
(bad)
call
add
mov
xchg
add
mov
add
jmp
cmp
(bad)
in
adc
add
push
and
add
inc
in
adc
lea
cld
jg
popa
adc
or
inc
ins
adc
adc
lahf
dec
pop
adc
push
xchg
or
sub
mov
adc
jmp
adc
push
inc
jb
push
pop
ret
mov
adc
sub
cmp
push
sub
inc
adc
pop
adc
jl
inc
jno
jmp
movs
sub
add
lea
jns
lods
(bad)
xchg
push
adc
push
push
lods
lahf
dec
cld
sub
test
cld
push
(bad)
pop
imul
or
ror
lods
dec
add
pop
fisttp
sbb
data16
cmp
sub
(bad)
fst
inc
jno
js
retf
adc
inc
sub
or
mov
(bad)
mov
popa
mov
add
push
sub
inc
loopne
add
into
mov
and
xor
cmc
inc
dec
sti
mov
ja
adc
mov
adc
mov
or
aam
aaa
fadd
jmp
(bad)
xor
dec
push
mov
cmp
adc
dec
mov
pop
or
push
sbb
sbb
xchg
dec
adc
push
mov
inc
dec
inc
cmp
or
inc
mov
aaa
or
pop
push
jecxz
ret
lock
sbb
push
xor
mov
mov
xor
xlat
dec
sbb
nop
lahf
test
adc
and
sbb
in
je
mov
push
add
clc
or
aaa
fndisi(8087
push
call
lock
mov
adc
fiadd
sbb
sub
pop
and
jnp
sub
imul
mov
sub
xor
pop
scas
je
fdivr
pusha
or
and
sahf
dec
adc
dec
or
cmps
push
ret
jne
pop
adc
and
and
or
cmp
xor
ins
inc
adc
pop
(bad)
mov
add
push
shl
jmp
lahf
stc
(bad)
mov
aam
inc
enter
add
in
cs
hlt
push
js
jge
mov
test
sub
xchg
popa
lds
mov
jl
and
movs
adc
xor
adc
pop
adc
call
ins
or
mov
dec
adc
leave
outs
mov
sbb
and
mov
clc
jmp
xor
test
or
outs
push
add
cld
aaa
in
xor
addr16
aam
mov
test
int3
aam
retfw
jl
xchg
pusha
add
adc
cmp
or
cmp
adc
fild
dec
test
pusha
loop
dec
or
sbb
icebp
imul
cmp
push
rol
cmp
adc
ds
jne
sbb
aad
pop
sub
adc
add
pop
sub
add
imul
or
ins
(bad)
mov
add
add
xchg
mov
add
mov
push
and
sub
aam
fcom
add
adc
fsub
in
add
fsub
mov
push
pop
test
inc
cwde
sub
sbb
stos
add
xor
push
jl
rol
mov
add
loopne
mov
push
pop
pusha
sub
push
inc
or
dec
in
adc
inc
out
ins
in
mov
pop
jl
and
test
or
adc
cmps
(bad)
in
xor
sub
fidivr
sub
and
mov
test
loop
or
jmp
add
jb
add
mov
sti
dec
ins
push
rol
add
jp
js
sub
or
dec
xchg
and
xor
in
mov
or
in
sbb
add
or
mov
or
cdq
mov
mov
ja
(bad)
cmps
sahf
inc
repz
pushf
cmp
add
gs
add
das
(bad)
push
fistp
add
pop
add
lods
or
jg
dec
pop
sub
adc
adc
add
(bad)
mov
dec
jp
and
xchg
xchg
adc
lods
ret
inc
cld
push
jne
imul
cmp
xlat
daa
sbb
adc
pop
add
cmp
push
and
cmp
adc
pop
adc
xor
in
je
sbb
aad
or
inc
in
ins
sbb
adc
xchg
sub
sub
mov
add
xchg
xor
test
test
adc
inc
and
inc
mov
cmp
cmp
xor
ud1
pop
hlt
mov
and
xchg
mov
fstp
inc
inc
mov
or
push
and
add
call
fdiv
inc
addr16
loopne
jne
push
jnp
inc
inc
or
or
dec
push
or
mov
push
inc
fist
push
rol
and
add
ss
pop
cmp
xchg
rol
add
adc
shr
dec
sbb
cld
push
sbb
inc
call
mov
mov
jl
push
imul
add
or
add
nop
mov
hlt
or
push
jb
add
sti
fiadd
aas
hlt
jae
dec
add
or
push
xor
or
mov
or
push
adc
jl
test
mov
dec
adc
push
popa
sbb
xchg
ror
clc
xchg
les
mov
out
add
pop
gs
xchg
ins
cld
adc
test
jnp
mov
sub
div
or
gs
fstp
add
call
adc
das
push
xchg
ror
mov
sbb
xchg
in
dec
shl
or
jne
push
mov
mov
dec
or
bound
add
xor
and
loop
ret
xor
and
sbb
sub
inc
loopne
add
adc
lahf
test
jmp
jecxz
and
or
jp
mov
or
mov
sti
mov
add
mov
mov
aad
fisttp
js
or
pop
adc
dec
and
loope
mov
pop
mov
xor
fist
inc
(bad)
xlat
movs
sbb
in
into
push
and
add
mov
jg
clc
push
and
clc
xor
cmp
jp
inc
or
cmp
ret
xor
test
sbb
add
and
sbb
xor
pop
add
daa
pusha
push
adc
pop
cli
aad
stos
or
add
adc
xor
ins
jmp
ss
push
into
push
sub
and
lea
adc
inc
or
jmp
jb
sub
mov
lock
push
adc
scas
sub
test
adc
add
sbb
pusha
fistp
shl
push
jl
push
pop
shl
adc
inc
ins
js
add
xchg
or
mov
sbb
xor
retf
mov
push
push
xchg
sar
dec
imul
loope
call
ret
popa
call
daa
or
push
mov
nop
stos
cmp
cmp
cli
add
clc
xchg
jae
push
jo
inc
add
mov
call
aas
or
mov
(bad)
or
add
and
mov
inc
sub
xor
nop
test
xlat
push
push
xor
adc
aas
adc
(bad)
and
add
or
test
and
nop
jno
add
into
xor
push
inc
lahf
or
inc
jl
or
push
push
or
mov
add
jmp
inc
jmp
mov
and
xlat
lahf
shr
pop
mov
mov
and
dec
loope
rol
mov
leave
shl
sete
movs
xor
cmp
dec
sbb
mov
ror
or
or
dec
add
outs
and
jge
xchg
in
or
or
mov
jecxz
xchg
in
adc
and
push
add
inc
inc
push
add
xchg
push
adc
adc
popa
cmp
cli
sub
aam
in
dec
in
mov
and
jl
add
add
mov
test
xor
les
add
inc
rol
xchg
add
adc
mov
push
int3
jmp
jo
hlt
out
pop
lock
or
lahf
fild
add
add
add
fbstp
xor
fs
les
ret
sbb
inc
push
or
xchg
xor
pusha
add
lods
add
pop
dec
sub
sub
mov
dec
add
pop
or
sbb
mov
es
(bad)
or
push
add
gs
push
pop
imul
lods
mov
or
ret
jmp
dec
in
ror
mov
xchg
aam
add
test
sbb
cdq
xchg
pop
push
inc
xor
jg
cmp
inc
or
mov
sub
fadd
adc
mov
push
and
push
das
mov
or
push
jns
mov
fwait
sub
xchg
and
call
push
das
and
sbb
cmps
loope
pop
push
fcomp
shl
in
daa
fst
mov
jmp
cmp
mov
push
pusha
mov
add
mov
aam
or
or
push
test
cmp
inc
test
rol
xor
enter
and
add
mov
fldcw
adc
sub
pop
sub
jmp
pop
das
dec
push
xor
arpl
or
fwait
sbb
or
xchg
dec
int3
adc
or
pop
pop
enter
nop
clc
or
in
fldcw
loopne
xor
addr16
xor
or
or
jge
mov
push
je
dec
xor
or
xchg
ins
loope
jmp
mov
inc
inc
sbb
or
clc
and
cld
stc
fwait
pop
push
push
clc
and
sar
mov
adc
mov
loopne
jecxz
clc
inc
cmp
inc
pop
das
and
in
je
inc
retf
arpl
test
add
inc
ror
jmp
ret
dec
lea
mov
lock
pop
scas
(bad)
adc
ror
or
jno
jnp
out
loopne
add
sub
loopne
adc
and
sahf
cmp
and
ss
or
test
sub
retf
in
je
and
mov
dec
inc
mov
sbb
inc
jg
jbe
enter
sub
jg
out
loopne
jg
ror
mov
or
jne
inc
outs
stos
sub
pop
inc
adc
call
dec
xor
lods
xchg
cld
cmp
add
inc
out
add
dec
enter
fwait
mov
add
pop
and
adc
data16
es
stos
mov
jb
ret
loopne
mov
xchg
or
lock
inc
adc
push
fwait
push
xchg
enter
push
sbb
add
sub
mov
cld
push
mov
fmul
and
add
adc
xor
jnp
dec
inc
(bad)
jb
mov
mov
or
add
or
lsl
rol
call
outs
or
in
clc
ins
mov
jmp
add
add
xor
loop
test
icebp
je
or
shl
push
add
dec
pop
ret
push
xor
mov
mov
xor
add
movs
or
pushf
mov
jne
add
lds
mov
jp
xor
ja
and
inc
or
out
sub
add
pusha
xchg
push
je
mov
add
and
jbe
pop
and
shr
cmp
(bad)
or
femms
pop
ins
push
add
test
mov
shr
inc
lds
sub
add
add
sub
int
imul
xor
in
dec
and
shr
add
mov
test
je
scas
dec
add
mov
mov
nop
std
mov
outs
and
mov
mov
sub
je
lea
adc
lahf
add
loope
aad
lds
pop
fdiv
push
sub
xor
sub
out
pop
nop
add
dec
(bad)
sub
jmp
mov
jne
and
add
pop
and
nop
in
adc
adc
lea
es
mov
cmp
pop
mov
retf
jo
aam
mov
shr
dec
data16
pop
es
push
adc
add
nop
ficom
push
adc
out
mov
mov
adc
enter
rcl
push
or
jbe
add
mov
xor
cmp
(bad)
mov
xchg
add
fisub
mov
cmc
out
add
pop
aas
and
cdq
sbb
test
ret
call
pop
and
cmc
imul
mov
and
and
mov
loope
sbb
mov
and
sbb
jne
push
sub
and
imul
loope
add
mov
and
movs
std
mov
shl
cmp
gs
xchg
or
sbb
inc
enter
(bad)
cmp
outs
mov
or
dec
ficom
mov
pop
inc
lea
mov
push
dec
adc
jne
push
lahf
jbe
xchg
inc
cmp
mov
xor
jle
inc
fist
xchg
xor
ins
add
icebp
xor
mov
adc
and
and
test
sbb
cmp
cwde
mov
mov
mov
mov
cdq
cmp
test
nop
mov
test
or
push
into
popf
mov
cli
mov
jbe
lods
sbb
or
or
(bad)
fwait
add
or
sub
mov
adc
mov
mov
js
jl
sub
rol
sub
pop
adc
stos
or
nop
and
inc
lods
xchg
rcr
and
jmp
(bad)
mov
jne
mov
dec
and
mov
popa
xor
sub
jge
loopne
sahf
xchg
js
mov
dec
lea
xor
frstor
stos
xchg
push
addr16
mov
cmp
add
and
je
jne
shl
sbb
pusha
test
pop
(bad)
xchg
or
or
mov
jl
jg
and
inc
sbb
retf
or
in
mov
mov
inc
fwait
xchg
lods
pop
and
movs
aad
pop
or
adc
in
cmp
or
adc
adc
add
inc
xchg
push
or
int3
push
pop
in
jne
xchg
fadd
sar
rcr
push
ins
imul
push
leave
mov
ss
nop
push
and
les
dec
cwde
and
lahf
mov
xchg
xor
cwde
or
push
adc
jmp
pusha
add
xchg
test
pushf
mov
mov
pop
adc
mov
sub
and
dec
arpl
and
neg
inc
sub
jecxz
cld
rol
pop
cdq
jg
inc
push
rcr
push
or
jne
ss
pop
sub
sub
shr
sbb
gs
push
mov
test
mov
add
cmc
add
push
(bad)
xchg
movs
push
retf
rcr
xchg
dec
sti
adc
pop
add
and
ins
scas
add
popa
sbb
add
bound
mov
add
movs
pop
xchg
fcomp
push
sbb
push
sbb
ret
add
xor
into
lahf
lea
push
pop
and
clc
xor
sbb
jle
ret
test
add
pop
push
mov
(bad)
or
cs
lods
mov
rol
inc
leave
in
or
lahf
jle
or
push
add
into
mov
lahf
or
sbb
sbb
pop
xor
inc
test
and
sbb
imul
or
in
and
inc
add
mov
mov
xchg
scas
ret
adc
add
mov
test
pop
sbb
cmp
das
sbb
xor
mov
and
cmp
aas
adc
sub
ror
sub
fistp
movs
popfw
aas
add
ins
adc
add
or
or
ja
or
push
jne
and
push
loope
cmp
mov
inc
fs
add
cmp
sub
push
lahf
mov
adc
mov
mov
ret
enter
jmp
mov
inc
or
adc
sub
push
push
gs
xchg
les
mov
fist
add
and
add
es
cvtps2pi
adc
jmp
add
cld
mov
add
imul
or
popa
or
or
lods
sub
adc
and
mov
fcomi
aas
sbb
push
ret
sbb
or
xlat
xor
adc
add
ret
(bad)
pop
cmovne
fdivr
aam
add
add
inc
and
cmp
ror
retf
(bad)
cld
movs
ss
addr16
push
or
call
stos
pusha
and
fadd
in
push
fbld
xchg
lock
test
mov
call
add
shl
mov
in
push
inc
popa
or
lahf
lahf
in
shl
test
push
mov
adc
dec
lahf
add
ins
aas
and
add
xchg
xchg
and
push
add
ret
inc
shl
mov
mov
cmp
xor
ret
mov
pop
jnp
add
movs
or
add
dec
jmp
push
rcr
sbb
xor
push
movs
adc
rol
add
es
adc
das
dec
imul
push
lea
or
shl
lahf
cmp
stos
arpl
in
inc
call
jmp
out
pop
push
lock
fcom
add
add
movs
mov
or
add
xor
lea
and
adc
inc
mov
jp
xor
add
inc
lahf
leave
sbb
adc
jmp
mov
sub
jl
adc
inc
jbe
adc
pop
jae
and
and
fidiv
(bad)
adc
dec
cdq
mov
mov
ficom
mov
mov
add
mov
hlt
jmp
jmp
mov
test
outs
xor
inc
call
ins
or
hlt
loop
jae
xchg
mov
mov
push
mov
or
adc
inc
add
dec
push
push
or
mov
sub
movs
cmc
loop
mov
sbb
or
adc
inc
and
daa
sub
push
arpl
jmp
push
pop
inc
sti
lea
add
add
fild
and
call
adc
sbb
or
mov
pop
cmp
cmps
add
jnp
jg
and
unpckhps
(bad)
test
push
movs
jo
cmp
adc
mov
inc
xchg
nop
movs
and
adc
les
jo
adc
aam
or
add
jg
and
sbb
pusha
push
adc
repz
add
or
imul
xchg
push
pop
sbb
mov
push
pop
push
repz
retf
jl
jl
call
jmp
ins
mov
or
dec
shl
sub
(bad)
mov
shl
iret
rol
pop
push
mov
and
adc
push
test
mov
aaa
jmp
lds
push
mov
adc
or
cmps
sbb
push
dec
pushf
(bad)
sbb
ficom
cs
jmp
hlt
cld
inc
mov
push
sbb
add
lea
rol
sbb
dec
sbb
push
in
test
sahf
mov
ret
call
add
inc
add
mov
and
sbb
popa
xchg
fsub
retf
pop
jp
or
mov
jo
xor
sub
and
(bad)
adc
icebp
or
add
inc
and
mov
ja
adc
(bad)
das
lea
es
and
mov
cmp
sub
push
fdivr
and
pop
mov
xchg
adc
cmps
adc
sub
dec
push
or
xchg
arpl
in
test
sub
push
or
or
push
scas
and
push
jl
test
cdq
lock
in
retf
addr16
fist
leave
call
dec
mov
jecxz
jne
or
xlat
or
mov
hlt
dec
mov
cli
or
js
and
je
push
mov
shl
or
aad
je
and
stos
loopne
scas
lods
lds
cwde
pop
add
and
in
ret
clc
das
scas
or
mov
sub
fcomp
mov
loopne
sbb
movs
pusha
pusha
shl
jmp
inc
lahf
sti
pop
popa
cmp
dec
xchg
xchg
mov
rol
or
mov
je
xor
(bad)
jmp
add
je
not
add
add
inc
sub
sub
sbb
jno
inc
dec
fbstp
pop
daa
sub
sgdtd
imul
and
loopne
inc
jge
dec
jnp
xor
mov
sub
push
sbb
adc
mov
or
dec
test
std
dec
aaa
mov
and
and
data16
mov
cmc
inc
dec
jnp
xchg
dec
inc
add
int3
inc
inc
jnp
xchg
retf
sub
lock
leave
add
cmp
mov
and
test
or
mov
sub
test
je
mov
dec
add
push
clc
mov
lea
xor
rcl
fdivr
scas
and
mov
test
mov
shr
aad
sub
aas
cmp
xchg
sub
rcr
add
inc
xchg
imul
(bad)
push
sub
lds
(bad)
icebp
jle
xor
push
add
das
push
push
std
out
xor
adc
rol
ret
add
sub
jle
je
ja
adc
imul
and
pusha
adc
sub
add
inc
popa
xchg
iret
jmp
sbb
addr16
adc
cld
ins
jmp
or
xor
inc
imul
push
mov
rcl
push
mov
xchg
scas
outs
rcl
or
sbb
inc
lahf
les
push
xor
push
mov
and
or
test
js
imul
cmp
xchg
inc
sar
int3
data16
loope
fwait
adc
or
pop
sbb
fcmove
xor
jg
test
fbstp
mov
push
rcr
jne
adc
pop
adc
push
ins
jo
shr
clc
mov
push
(bad)
inc
call
push
sbb
mov
mov
push
push
push
xor
movs
test
lds
xchg
dec
mov
or
lods
ret
rol
and
gs
xchg
retf
ss
pop
or
xchg
clc
push
mov
push
push
push
or
mov
add
push
cmp
fistp
cmc
inc
test
stc
dec
push
or
jge
jg
loope
lea
clc
stos
fistp
cwde
movs
(bad)
or
pop
in
cdq
lds
cmp
xor
jmp
inc
and
addr16
xchg
and
mov
inc
mov
xchg
fsub
das
daa
outs
lea
cdq
adc
xchg
push
add
loopne
test
jmp
push
fst
xor
sub
addr16
inc
movs
pusha
and
adc
(bad)
xor
add
adc
and
clc
dec
and
rol
cwde
sbb
mov
fisubr
mov
push
mov
sub
je
dec
les
sar
and
fadd
and
mov
mov
(bad)
(bad)
les
push
in
and
loopne
leave
jne
cmp
and
pushf
push
sbb
adc
add
icebp
shl
imul
ret
add
jb
sbb
xlat
push
inc
mov
ret
xchg
int3
rcl
sar
arpl
adc
pop
adc
sbb
lock
js
rcr
(bad)
add
ret
imul
ret
pop
call
fisttp
fcmovnbe
dec
jecxz
jne
mov
mov
and
loop
dec
test
je
hlt
xchg
test
add
inc
mov
(bad)
jmp
mov
and
cmp
sbb
dec
pop
cs
outs
je
adc
mov
sbb
shl
ins
xor
and
pusha
inc
inc
loope
std
arpl
xor
loop
loope
add
or
in
pop
add
dec
outs
dec
inc
mov
adc
adc
mov
pusha
adc
xor
int3
mov
or
int
pushf
inc
adc
ret
mov
add
inc
adc
mov
dec
pop
push
mov
lods
add
or
jp
daa
mov
push
xor
xlat
sbb
arpl
sub
add
loopne
aam
aas
das
cmp
sbb
push
fmul
ins
mov
pop
dec
sahf
mov
mov
jmp
jo
mov
xlat
mov
jl
mov
mov
aaa
nop
inc
daa
or
sub
test
dec
add
ss
push
fild
add
enter
xor
movs
or
fsubr
or
scas
pop
rcr
sub
adc
fisttp
xor
fld
or
and
jmp
out
xor
add
movs
add
or
lock
mov
in
or
and
in
pushf
cmp
outs
and
arpl
or
xchg
adc
mov
mov
loopne
retf
jmp
jnp
add
adc
mov
or
jmp
cdq
mov
test
push
add
cmc
mov
add
add
sub
sbb
mov
lds
pop
js
xchg
and
rcr
pusha
and
popf
jne
ret
ret
sub
pushf
mov
in
push
adc
adc
sbb
jo
dec
les
test
aam
fist
aas
adc
jg
in
push
or
shl
popf
pop
push
fwait
push
push
sbb
jmp
js
mov
add
add
or
add
cmp
xchg
jo
lds
jae
pop
and
push
xchg
int3
out
inc
adc
sbb
xor
lock
test
inc
lods
sbb
enter
pusha
fs
and
xchg
and
mov
adc
xchg
dec
adc
or
and
test
xchg
mov
mov
(bad)
les
pop
dec
mov
sar
in
fsub
jb
dec
xor
sub
call
fsubr
push
lods
stc
add
test
or
lods
add
inc
daa
lahf
mov
dec
mov
and
sub
(bad)
jmp
add
mov
xchg
push
pop
jb
imul
pusha
adc
mov
(bad)
xor
call
adc
mov
fwait
mov
jl
and
js
sub
jne
push
adc
push
mov
sti
je
dec
enter
ins
cmp
jne
sbb
sbb
dec
fadd
add
mov
xor
mov
fiadd
fsub
retf
dec
(bad)
pop
test
fsub
ret
mov
or
lock
fsub
pop
arpl
adc
jp
mov
pop
xor
popa
pop
and
inc
mov
(bad)
add
mov
mov
push
ror
cs
sti
push
adc
shl
or
mov
dec
mov
mov
push
inc
pop
iret
pop
inc
ja
xor
fsubr
fsub
xor
jge
push
stos
push
int
add
inc
sti
push
daa
imul
inc
push
pop
xor
push
out
and
rcr
jnp
imul
cwde
sub
cmp
or
sub
push
das
call
in
vpmullw
cmp
xor
jno
loopne
gs
mov
xchg
push
lds
inc
xchg
jmp
movs
leave
push
adc
das
or
pop
lea
inc
pop
cdq
mov
mov
addr16
xchg
sub
lock
adc
dec
add
mov
(bad)
mov
xchg
add
xchg
into
xchg
loop
sahf
fmul
adc
xchg
pop
sti
push
mov
call
xchg
lock
imul
add
push
or
in
test
or
mov
inc
aad
pushf
scas
inc
add
pop
clc
ins
add
inc
sub
mov
enter
loope
ins
inc
push
jnp
fs
(bad)
neg
or
lock
xor
add
xchg
pop
lods
fiadd
enter
or
sbb
push
addr16
pop
or
and
push
add
nop
aad
shr
add
mov
int3
xor
dec
and
dec
cmp
mov
fcom
sbb
dec
xor
inc
int3
add
or
outs
xor
(bad)
sbb
pushf
adc
xchg
adc
jl
ret
mov
movs
inc
fcomp
push
les
sub
or
lahf
psubb
mov
call
pop
sub
add
xlat
pusha
push
arpl
dec
sub
arpl
fwait
mov
test
test
add
int3
or
mov
add
and
add
xor
push
shl
mov
push
dec
jecxz
add
jg
push
mov
ret
push
push
inc
jae
pop
mov
adc
jmp
int
mov
mov
sub
cmp
movs
mov
imul
or
or
jb
scas
sbb
loop
mov
pop
xor
adc
loopne
push
xchg
stc
mov
mov
test
(bad)
xor
int
mov
imul
xor
push
loop
sub
cmps
fs
and
mov
test
cmp
jne
push
cmp
mov
jecxz
mov
mov
push
pop
xchg
xor
xor
fwait
inc
mov
xchg
mov
inc
sbb
adc
or
push
test
add
ins
imul
jne
les
cmp
call
or
ss
add
sar
sbb
inc
jo
jae
xchg
out
push
push
adc
jnp
push
and
rcl
nop
sbb
push
dec
or
adc
inc
mov
or
jns
jl
and
add
rcr
push
cmp
fdivr
and
xlat
cmp
call
or
fidiv
mov
adc
cdq
xlat
loopne
xor
sbb
sti
adc
out
imul
arpl
in
lods
xor
xor
or
mov
xor
ret
in
inc
xchg
add
xchg
adc
xor
cs
push
cmp
push
daa
lock
outs
fcom
jo
bound
sub
inc
sbb
add
sub
cmp
(bad)
mov
popa
nop
xor
jmp
cmps
add
cmp
push
pop
pop
adc
bound
mov
cmp
call
pusha
mov
jl
adc
push
rol
mov
mov
jge
push
lds
mov
pop
xchg
sbb
mov
and
cmp
pop
in
sbb
nop
neg
fdiv
sbb
ins
push
push
inc
dec
inc
pop
cwde
mov
imul
(bad)
xchg
lock
and
and
push
inc
clc
frstor
jecxz
dec
sub
mov
inc
dec
in
pop
lods
xor
popa
adc
adc
pop
dec
cmp
imul
imul
(bad)
add
in
push
loopne
push
adc
inc
mov
lahf
inc
sub
adc
xchg
mov
dec
mov
imul
movs
sbb
sbb
mov
or
pop
pop
jmp
adc
pop
adc
mov
retf
cmps
xor
jno
cwde
or
popa
fistp
(bad)
fbstp
(bad)
les
inc
mov
sub
dec
loope
fmul
lods
xor
mov
test
inc
and
push
adc
popa
sbb
or
sub
push
pop
les
and
hlt
fisttp
push
test
add
loope
inc
mov
cmp
dec
rcr
and
inc
or
lahf
jmp
push
call
shr
or
shr
push
dec
adc
or
push
push
push
iret
lods
shl
gs
pusha
das
sub
paddsb
sub
dec
or
in
push
movs
mov
and
movs
jbe
mov
jp
cwde
sub
mov
fwait
sub
cwde
add
clc
inc
mov
ins
mov
or
shr
sbb
loope
xor
jl
pop
jo
add
jns
jo
jo
push
inc
add
add
add
fwait
push
mov
jbe
cmps
ins
ins
xor
add
(bad)
ins
ret
les
shl
jae
std
push
jmp
aad
js
dec
or
push
lods
nop
add
mov
push
test
lea
mov
jl
adc
lahf
mov
aas
and
push
jg
lods
dec
and
mov
inc
std
out
pop
js
sub
adc
popa
sub
or
or
movs
jnp
or
sbb
movs
mov
nop
inc
push
or
ins
cmp
add
xchg
and
gs
or
push
popa
mov
mov
pop
aam
dec
jo
sbb
mov
out
mov
adc
cmp
test
cmc
xor
stc
push
mov
adc
mov
pop
add
xchg
test
nop
(bad)
push
fidivr
sbb
add
lods
adc
or
mov
push
or
rcl
push
xchg
sbb
and
mov
xor
mov
jp
loopne
adc
lea
and
inc
mov
leave
imul
(bad)
and
dec
lods
pop
pop
adc
pop
mov
and
jl
(bad)
rcr
adc
ins
jp
ror
inc
js
pop
lea
ret
test
fwait
push
(bad)
or
mov
pop
and
or
in
fwait
mov
inc
push
cmp
fld
and
add
xor
pop
(bad)
sbb
jge
leave
test
mov
sub
mov
inc
xchg
and
addr16
lods
test
inc
inc
(bad)
sbb
xor
sbb
inc
sbb
adc
outs
call
ins
dec
push
stos
or
mov
pop
loope
pop
add
les
sbb
mov
call
outs
xchg
sub
and
scas
outs
or
mov
sub
cmp
inc
push
mov
push
inc
add
xchg
iret
push
inc
scas
sahf
cwde
and
nop
out
add
mov
fld
add
sub
adc
adc
out
fadd
dec
test
cwde
icebp
cwde
(bad)
nop
xchg
jecxz
pop
push
fiadd
inc
pop
(bad)
aad
cmp
xor
pop
cli
cmp
and
mov
sti
inc
fcomp
pop
nop
jecxz
push
ret
cwde
jge
mov
dec
sbb
pop
add
fdiv
in
add
rcl
(bad)
lea
and
cmp
add
hlt
lock
add
inc
cmc
fld
inc
(bad)
js
neg
inc
sub
dec
mul
sbb
mov
inc
adc
stc
imul
movs
popf
jmp
cmp
dec
or
cmp
xchg
arpl
aam
or
or
nop
jbe
push
rcr
mov
add
adc
adc
add
adc
rcr
adc
push
xor
es
add
test
add
out
test
sbb
popa
les
adc
sbb
imul
sbb
std
adc
loope
and
das
or
int3
sbb
out
sub
and
and
loop
and
jo
mov
lds
lahf
and
push
aam
mov
cmp
lods
xchg
clc
sbb
test
cmp
xchg
dec
mov
adc
frstor
daa
sbb
nop
fld
mov
adc
mov
rol
setne
jne
imul
mov
xor
mov
push
xchg
mov
sub
add
movs
test
xchg
test
push
ret
rcl
test
push
(bad)
or
push
repnz
nop
push
(bad)
addr16
shl
dec
pop
add
inc
push
cmp
sbb
shl
or
nop
mov
jns
jae
lock
adc
add
xchg
sbb
call
push
add
sub
jns
jo
aam
hlt
dec
loope
sub
mov
mov
aas
mov
loop
push
sahf
push
rol
and
or
jge
xchg
xchg
and
aad
or
pop
sub
sar
add
and
jo
push
sbb
or
xor
js
cmc
xor
xchg
adc
adc
jmp
or
pusha
adc
ret
test
xchg
jbe
mov
mov
and
rol
add
adc
mov
push
test
loopne
js
add
mov
cld
push
cwde
push
loop
pop
add
jno
ds
push
xchg
jl
cmp
xchg
push
and
mov
sub
mov
dec
or
mov
dec
dec
das
es
or
loopne
iret
das
jl
stos
lea
push
xchg
pop
add
cmp
add
mov
mov
ds
sbb
or
loope
jns
mov
pop
inc
inc
icebp
mov
push
in
clc
jmp
push
xchg
sub
pop
test
or
cmp
mov
std
std
adc
and
or
push
cmp
push
cmps
push
ret
aaa
fild
lea
sub
mov
ret
or
mov
mov
and
and
jmp
or
or
lock
and
loope
inc
fmul
rol
xchg
or
add
sub
mov
add
or
mov
push
leave
adc
sub
or
mov
and
ins
inc
sbb
sub
sub
mov
add
scas
js
call
mov
(bad)
repz
add
pop
and
lea
lds
sub
lock
addr16
lock
add
add
inc
outs
pop
in
push
add
add
xor
test
ss
std
mov
in
daa
mov
sbb
pop
(bad)
mov
loopne
stc
add
test
stc
sbb
xchg
xor
out
movs
cmp
inc
cmp
mov
sbb
xchg
fistp
push
mov
or
dec
push
dec
or
mov
cmp
fmul
and
mov
dec
dec
stos
or
and
loopne
lea
fdivr
add
in
rcr
sbb
pop
and
jg
and
sbb
sub
mov
jo
(bad)
(bad)
js
out
adc
xchg
sbb
cmp
jmp
xlat
adc
or
in
add
ret
lahf
jg
loopne
and
jae
fcom
jmp
ror
pop
and
xlat
dec
inc
and
xchg
mov
sbb
add
xor
ds
test
jl
and
pop
addr16
in
jp
cmp
out
mov
adc
cmp
loopne
dec
lea
adc
and
(bad)
in
xor
inc
pusha
inc
sub
mov
cmp
ret
(bad)
in
std
mov
sbb
shl
std
adc
scas
inc
into
pop
sub
push
mov
shl
ins
adc
test
push
test
or
mov
jl
inc
popa
mov
sub
jmp
sbb
mov
mov
add
mov
lds
das
inc
sub
nop
adc
or
add
test
xor
adc
add
aas
fist
loope
or
sti
mov
out
inc
sbb
jg
push
cmc
inc
and
push
cmp
mov
out
pop
shl
repnz
mov
clc
cmp
jle
add
mov
xlat
add
add
push
pop
adc
sub
pop
mov
rcr
arpl
add
add
popa
jmp
test
hlt
xchg
(bad)
rol
jno
sub
ror
push
mov
jecxz
inc
cs
xchg
inc
mov
inc
or
add
push
add
je
and
add
adc
mov
fwait
mov
ins
arpl
aas
pop
and
pop
add
test
push
xor
sub
pusha
and
and
ss
add
adc
push
xlat
mov
jecxz
jmp
pop
inc
sub
push
dec
push
mov
xchg
pop
lock
ror
push
jmp
sti
in
mov
adc
mov
ds
(bad)
jmp
push
jmp
ror
mov
xchg
mov
and
mov
jnp
daa
mov
mov
std
mov
sbb
push
test
push
or
mov
jbe
sub
and
push
pop
add
or
add
out
dec
inc
jmp
leave
popa
js
test
or
or
ret
leave
add
imul
ror
push
dec
push
push
push
call
pop
push
sub
inc
iret
pop
add
mov
inc
and
fild
inc
add
add
(bad)
pop
call
mov
and
xchg
inc
lock
iret
call
(bad)
fucomp
cmp
mov
mov
je
popa
lea
cmp
popa
sbb
lock
test
fcmovbe
adc
mov
cmc
fstp
jmp
daa
and
cmc
imul
in
mov
add
sbb
sar
gs
cld
call
xlat
rcl
je
call
fstp
add
mov
add
inc
out
xchg
push
cmp
stos
mov
adc
inc
pop
lock
adc
push
add
cmp
dec
and
in
sbb
cmps
adc
push
stc
fadd
adc
sar
adc
add
in
adc
in
scas
fist
pop
imul
add
shr
aaa
push
in
adc
jo
xchg
cmps
rcl
test
es
adc
aam
add
push
inc
adc
loopne
pop
jmp
aas
xor
sbb
movs
ror
push
imul
jl
rcr
(bad)
mov
pop
sub
or
or
and
dec
js
or
push
icebp
xchg
xchg
pushf
bound
bound
add
dec
test
mov
pop
jmp
pop
aam
xchg
add
mov
call
ds
adc
mov
mov
and
mov
test
daa
push
std
or
push
add
or
adc
mov
push
sub
push
js
and
adc
add
pop
cmp
add
cli
mov
imul
pop
or
sti
xchg
sub
adc
je
jecxz
add
pop
inc
iret
rcl
xchg
xlat
add
adc
push
or
adc
adc
add
rcl
pop
movs
xchg
es
add
aad
push
call
xor
test
pusha
rcr
(bad)
add
or
add
push
xchg
pop
adc
aaa
aas
cs
stos
jne
stos
pop
mov
jo
jle
(bad)
xchg
add
xchg
or
inc
dec
ret
or
(bad)
ins
jl
or
jl
ins
push
mov
sub
or
cli
or
dec
mov
or
add
pop
push
push
cld
xchg
sbb
pop
ror
scas
sbb
popa
lahf
hlt
test
cld
inc
popa
pusha
jo
pop
test
inc
les
push
sbb
es
add
loope
ja
add
and
jmp
push
add
and
repz
jmp
cmp
outs
add
push
or
jg
dec
inc
add
or
jle
pop
pop
adc
lds
scas
push
add
lock
or
mov
cmp
gs
jne
adc
popf
inc
sbb
leave
add
es
jg
in
cmp
push
pop
imul
das
and
pop
(bad)
dec
cld
sub
xchg
out
add
shl
or
push
into
adc
mov
push
add
shl
call
daa
iret
jnp
mov
jno
push
jo
pop
shl
cwde
add
adc
push
sbb
cmp
push
(bad)
cwde
jo
jnp
xor
iret
jmp
inc
inc
fnstenv
ret
lahf
lock
adc
iret
scas
cdq
inc
and
xchg
add
loope
ins
add
dec
fcmovb
sub
or
mov
mov
mov
or
bound
js
es
jne
lds
push
jno
cwde
add
movs
adc
popa
adc
leave
or
mov
aad
add
mov
add
int3
adc
test
lahf
je
popa
dec
or
jl
xchg
les
xor
sub
xchg
mov
inc
mov
outs
cmp
inc
dec
or
repz
jl
push
and
mov
test
das
jo
jmp
or
or
push
push
cld
jnp
popf
and
or
lea
inc
sub
jg
daa
sbb
push
add
ja
push
sbb
inc
push
pop
cmp
pop
neg
dec
nop
(bad)
dec
inc
vmovups
gs
adc
mov
fistp
and
arpl
sbb
arpl
pusha
or
mov
xchg
nop
shl
push
pop
sbb
push
ror
xor
ss
sbb
sbb
(bad)
adc
adc
mov
out
cld
inc
js
add
push
mov
push
sbb
mov
je
push
mov
mov
sbb
frstor
sbb
cld
sbb
enter
sbb
rcl
and
push
mov
test
xchg
pop
add
sbb
or
ds
adc
iret
push
daa
rcl
fistp
pop
adc
jmp
add
add
push
jl
jecxz
sbb
ins
fsub
daa
dec
mov
aam
sti
sub
gs
js
fidiv
sbb
sbb
dec
or
or
sbb
sbb
aas
and
loopne
mov
movs
push
test
dec
add
push
and
test
pop
mov
jne
rol
adc
mov
and
push
lods
lock
(bad)
jmp
or
and
push
dec
inc
out
lds
xchg
add
or
ror
mov
in
xchg
jno
ins
xchg
aas
xchg
mov
(bad)
nop
call
pop
jmp
stos
loopne
or
push
rcr
aas
ins
movs
cwde
add
sub
mov
push
mov
enter
pop
inc
fisubr
aas
lds
add
xor
retf
pop
xor
pop
pop
or
or
dec
jns
xlat
and
jg
or
in
pusha
test
or
xor
pop
adc
mov
int3
dec
ins
adc
int3
lahf
adc
add
test
cmp
imul
jmp
add
jg
retf
jl
mov
fild
aaa
and
outs
add
outs
pop
cld
push
add
out
and
inc
std
push
aas
nop
sbb
push
pusha
add
js
add
sub
and
pop
add
add
adc
jno
push
push
mov
popf
inc
adc
dec
mov
push
sbb
mov
sub
or
add
inc
dec
lds
pop
hlt
lods
adc
mov
retf
and
jmp
push
das
pop
arpl
sub
jecxz
sub
sub
pop
out
movs
mov
cmp
mov
cmc
inc
inc
add
inc
adc
call
call
mov
and
pop
push
pop
add
pusha
stos
inc
adc
shl
or
int3
retf
mov
outs
add
mov
cmp
test
scas
hlt
popa
inc
test
iret
sbb
inc
das
inc
push
cmp
je
mov
aas
push
jmp
lea
cmp
sbb
mov
call
mov
movs
fisttp
in
or
mov
push
popa
bound
cwde
lods
xchg
push
dec
and
push
inc
hlt
push
enter
fs
not
je
add
lea
js
push
jmp
sub
in
pop
in
inc
in
or
pop
test
inc
sbb
adc
adc
dec
in
fs
pop
add
adc
sub
sbb
push
hlt
aaa
ja
arpl
push
push
or
xchg
cmp
rcl
lods
adc
dec
or
and
das
and
sub
shl
pop
sar
add
mov
nop
cmp
pop
sbb
in
pop
sbb
xor
(bad)
sbb
and
jmp
cmps
(bad)
loopne
inc
jg
and
inc
stos
(bad)
out
ins
cmp
dec
add
imul
mov
xchg
adc
aas
adc
add
inc
ins
jno
enter
(bad)
loopne
mov
aam
scas
cmps
jae
push
pop
mov
pusha
mov
mov
retf
adc
loopne
ret
pop
sahf
repz
xchg
mov
xor
(bad)
adc
mov
and
sub
fistp
(bad)
push
cmp
lahf
adc
mov
mov
int3
adc
xchg
or
inc
mov
ds
xor
dec
xor
jmp
clc
xchg
adc
jge
pop
cs
pop
xchg
in
push
loopne
mov
add
dec
test
jo
jae
sbb
inc
adc
mov
enter
sbb
adc
or
stc
adc
enter
push
push
sbb
mov
sub
xchg
dec
inc
dec
inc
imul
mov
add
adc
iret
adc
cmp
call
loope
fisttp
enter
enter
push
adc
fcomp
fsubr
ret
inc
xor
and
xchg
fs
lds
les
in
add
add
inc
in
adc
xor
clc
add
enter
sbb
jg
out
enter
inc
enter
xchg
sub
mov
push
pusha
inc
sbb
mov
sub
loope
mov
outs
mov
arpl
mov
adc
aas
and
jne
(bad)
enter
add
ret
cmp
push
dec
cmp
pop
pop
popa
sbb
or
test
or
pop
pop
fsub
add
imul
mov
pop
ror
ins
jmp
movs
nop
cwde
retf
test
jge
bound
mov
dec
dec
sub
add
or
aas
and
rcl
push
dec
sbb
inc
push
dec
in
sbb
sahf
sub
iret
lods
push
les
and
jge
cwde
leave
xor
loopne
push
shr
inc
jae
inc
das
jmp
jmp
inc
es
pop
dec
pop
cli
fcom
fstp
xor
call
jge
(bad)
js
adc
adc
mov
sbb
xor
xor
or
loopne
or
and
mov
stos
sbb
sbb
inc
dec
and
cmps
adc
mov
cmp
loopne
or
add
adc
jo
add
mov
mov
aam
inc
cs
mov
aam
push
mov
int
or
push
daa
popf
(bad)
sub
cmp
pop
inc
push
xchg
cdq
cmps
push
shr
cdq
daa
pop
xchg
cmp
outs
pusha
and
xor
inc
pop
inc
pop
sub
hlt
pop
hlt
das
and
add
(bad)
std
jg
jp
add
pop
daa
mov
sbb
lahf
jns
push
pop
aam
sbb
adc
rcl
in
adc
ins
(bad)
push
and
xor
mov
add
(bad)
fidiv
ins
add
jmp
test
pop
fild
add
jg
fdivp
or
cdq
jne
adc
movs
push
dec
pop
push
lock
out
lods
les
lock
sbb
mov
mov
test
imul
cmps
popa
call
(bad)
inc
sub
sub
shl
xor
and
arpl
jge
push
retf
inc
ret
jge
and
push
mov
cmc
call
add
mov
mov
push
jp
xchg
inc
int3
or
and
adc
mov
add
mov
ret
dec
rcr
push
or
outs
or
cmp
loop
dec
lods
mov
mov
rcr
mov
movs
mov
adc
and
int3
jne
dec
jp
int3
pop
(bad)
sbb
int
and
and
sub
lea
(bad)
jg
movs
loopne
cmp
mov
int3
jmp
xchg
cmp
mov
add
jmp
retf
shl
test
(bad)
add
arpl
fbld
(bad)
movs
data16
jg
bound
jne
sbb
mov
dec
sub
or
fst
pop
and
test
lahf
push
cwde
mov
and
pop
and
cli
es
jns
and
popa
jg
or
push
pop
xchg
jl
out
rcl
div
popa
outs
add
sub
int3
add
add
lahf
cmps
sbb
xchg
inc
dec
loop
add
add
fcmovb
inc
cmc
adc
push
jmp
jmp
pop
aaa
stos
or
cmp
inc
push
cmp
inc
mov
shl
push
dec
xchg
jnp
pop
ret
mov
lea
retf
lea
or
xor
dec
adc
sbb
mov
xor
mov
sub
xchg
clc
ret
inc
push
adc
pop
lock
(bad)
lahf
dec
or
and
ror
dec
and
mov
pop
push
cdq
or
call
jns
push
or
lahf
xchg
sub
sbb
or
jnp
loopne
sbb
xchg
fsubr
fbstp
cmps
sahf
outs
pop
ja
mov
add
adc
jnp
sbb
mov
sub
inc
adc
push
add
mov
ins
in
pop
daa
add
sbb
outs
push
mov
dec
inc
imul
mov
cmp
sbb
jge
inc
and
in
mov
fild
mov
imul
or
add
or
or
fcom
add
push
stos
jne
add
test
or
mov
outs
dec
fadd
or
jge
imul
xchg
pop
inc
xor
arpl
mov
sub
xor
scas
mov
mov
lock
jmp
in
or
xor
sub
hlt
xor
push
sub
or
dec
ffree
add
cld
sub
adc
mov
shr
les
and
inc
mov
scas
gs
movs
adc
pusha
pop
sbb
imul
ins
sub
imul
dec
sbb
mov
dec
dec
bound
or
push
or
adc
cmc
leave
int3
inc
(bad)
aam
mov
lods
dec
cld
wbinvd
dec
inc
(bad)
fsub
mov
and
add
pop
and
and
xchg
push
add
push
push
mov
fstp
and
int3
je
xchg
pop
sbb
add
xchg
adc
mov
daa
(bad)
sub
sbb
push
out
les
jecxz
call
je
sbb
arpl
mov
push
inc
pop
mov
sub
adc
dec
pop
clc
mov
jmp
sbb
ins
arpl
mov
mov
and
push
popf
call
xchg
adc
pusha
pop
popf
sub
mov
inc
hlt
cmp
and
fbstp
jbe
sbb
daa
test
adc
pop
xor
sub
add
scas
or
cwde
mov
or
or
lds
aam
jle
fdiv
popa
ror
iret
push
and
pop
arpl
or
mov
adc
or
xlat
inc
cmps
rol
inc
fstp
dec
inc
std
add
inc
xchg
test
dec
or
jmp
sbb
mov
daa
add
addr16
popf
or
sbb
mov
or
sti
mov
pop
test
pop
pop
mov
add
or
das
(bad)
jl
xchg
shl
pop
imul
inc
and
cmp
add
or
and
mov
add
or
rol
or
or
popf
sub
jo
in
push
mov
pop
add
adc
jns
lock
push
in
inc
adc
cmp
sub
ficom
push
ret
and
xor
jae
pop
add
pop
mov
loopne
or
adc
add
jle
add
lahf
fs
adc
add
push
sbb
sub
mov
jae
test
or
xchg
push
clc
dec
aam
dec
push
cmps
jno
sub
ja
test
add
pop
mov
mov
bound
xor
push
mov
push
gs
push
adc
sub
mov
lock
and
js
or
cmp
icebp
test
call
inc
add
data16
dec
repnz
xchg
icebp
dec
cmc
not
les
mov
cs
sbb
pop
jle
push
daa
inc
push
js
sbb
inc
aam
sbb
add
add
xor
jno
imul
add
test
cmp
xor
add
mov
mov
inc
push
ret
sbb
adc
mov
jno
add
or
or
or
cwde
mov
sysenter
dec
jg
addr16
add
pop
xor
add
cmps
icebp
(bad)
aas
mov
inc
fwait
loope
dec
xchg
add
pop
mov
loope
sub
loop
dec
arpl
lock
shr
pop
sub
adc
and
arpl
xor
jmp
add
pusha
or
mov
aas
aam
add
pop
adc
int3
aas
push
fistp
dec
add
xchg
std
es
add
rcl
call
mov
or
fcomp
push
adc
push
lock
dec
outs
push
test
mov
dec
stos
add
add
or
mov
add
js
sub
clc
sub
add
and
retf
and
add
pop
add
fs
mov
in
push
push
adc
push
sub
out
adc
jge
outs
or
and
add
inc
rcl
dec
xchg
pop
xor
cmp
(bad)
std
loop
or
cmp
dec
mov
test
outs
les
call
sbb
mov
or
dec
cmp
or
sbb
sbb
push
or
or
xchg
inc
add
sar
imul
es
add
sti
dec
and
call
in
sar
push
(bad)
xor
or
add
add
xchg
sbb
mov
pop
les
mov
dec
cld
xchg
xchg
adc
test
jo
jmp
mov
sbb
adc
push
rol
sbb
sar
jbe
retf
ret
hlt
lahf
lods
ins
add
sar
jae
mov
cmp
pop
cmps
and
fsub
sub
mov
dec
add
adc
cmp
mov
mov
or
hlt
inc
in
cmps
pop
sbb
adc
and
leave
lds
imul
push
std
pop
mov
cmp
push
cmp
dec
cld
add
shl
pop
dec
mov
dec
fsub
add
jmp
push
jnp
sub
push
les
je
and
pop
aas
pop
(bad)
mov
scas
or
mov
cld
mov
adc
jns
push
sbb
sbb
inc
pop
adc
ret
fsubr
adc
pop
cmp
lods
lods
adc
(bad)
cmp
add
add
push
sbb
xchg
dec
lea
pusha
sub
lea
sub
(bad)
push
push
push
mov
fcom
cmp
mov
or
rol
popa
jl
cmps
mov
pop
dec
or
sbb
inc
adc
mov
addr16
add
xor
or
leave
sub
mov
scas
xchg
int3
mov
repnz
movs
nop
test
push
rcl
(bad)
dec
push
mov
shr
fisttp
mov
mul
sub
sbb
or
xor
add
sub
adc
sub
add
in
lods
xchg
jmp
pop
scas
cmp
or
push
bound
add
call
pop
mov
pop
and
test
or
pop
sahf
jo
ins
inc
mov
gs
add
movs
fimul
sub
fadd
cli
dec
add
and
not
sub
adc
rol
enter
push
mov
adc
dec
sbb
cmp
adc
xchg
sub
sbb
aad
sub
or
mov
mov
push
xlat
sbb
lods
js
rol
outs
inc
adc
daa
and
adc
jmp
inc
(bad)
jmp
imul
es
ror
push
xchg
inc
jmp
dec
pop
push
xchg
imul
jp
mov
mov
addr16
adc
adc
popf
adc
mov
ret
mov
xor
or
or
and
hlt
mov
add
or
ss
sub
movs
and
sbb
push
adc
push
add
cwde
(bad)
xor
adc
sub
imul
pop
test
fld
nop
jnp
fsubr
scas
cmc
xor
push
adc
(bad)
or
es
pop
shl
rcr
lods
enter
test
dec
lea
jmp
dec
mov
sub
mov
pop
repnz
(bad)
movs
push
jne
cmps
ret
dec
lods
nop
mov
loop
fild
push
adc
leave
retf
daa
aas
and
leave
push
mov
push
or
xor
in
imul
sbb
imul
pop
or
movs
or
sub
jg
add
or
repnz
mov
xor
mov
adc
add
mov
fist
or
movs
or
test
and
aam
jno
mov
cmps
mov
rcl
imul
jge
add
inc
sub
mov
add
push
mov
mov
or
lea
test
movs
mov
rol
das
push
pop
addr16
adc
push
in
inc
data16
jmp
dec
movs
out
sbb
push
xchg
adc
inc
clc
ret
cmp
(bad)
rol
or
shr
or
daa
cmp
sbb
pop
jmp
add
inc
in
je
rcr
inc
xor
pop
inc
add
loop
xor
cmps
mov
sub
or
push
xchg
mov
imul
jmp
pop
enter
aaa
arpl
add
in
pop
pop
push
jl
(bad)
aas
adc
stc
clc
(bad)
pushf
and
(bad)
loopne
xor
retf
push
mov
popa
jecxz
and
test
add
inc
sbb
scas
ret
push
adc
adc
adc
inc
adc
mov
xchg
stos
or
add
or
int3
adc
or
fwait
int3
pop
loopne
dec
sub
dec
cmps
frstor
rcr
mov
dec
outs
or
mov
les
or
(bad)
call
or
adc
xor
out
add
dec
jmp
mov
inc
xor
ins
xor
cmps
fisttp
sub
xor
and
in
outs
dec
and
sbb
mov
mov
push
lds
rcr
push
in
jecxz
sub
jno
gs
add
outs
aaa
fwait
adc
push
add
bound
xchg
pop
add
(bad)
fmul
adc
pushf
out
cmp
jns
add
add
adc
(bad)
jp
sar
dec
js
pop
lods
and
xor
imul
loope
mov
or
xor
and
unpcklps
fs
ret
xor
or
inc
push
ins
jae
jg
pop
push
(bad)
movzx
push
adc
push
mov
adc
xchg
sti
push
add
dec
adc
frstor
and
and
or
stos
lock
sbb
inc
add
iret
int
mov
sbb
or
push
ficom
adc
cmp
xor
or
lahf
in
dec
mov
or
push
test
arpl
call
loop
sub
mov
or
pop
inc
dec
jecxz
inc
ret
jae
xchg
push
push
sub
and
push
push
jecxz
pop
daa
or
add
inc
mov
adc
adc
push
ret
push
outs
push
push
and
mov
adc
movs
sub
push
inc
rol
xchg
or
aad
mov
adc
add
daa
adc
cwde
retf
and
add
sub
pop
push
mov
call
and
or
add
fs
xor
fadd
ss
pusha
push
adc
sbb
inc
mov
sub
jmp
sar
lods
add
lahf
push
sub
inc
push
call
mov
dec
xchg
adc
int
push
mov
and
sub
fst
dec
dec
mov
aam
sbb
add
pop
(bad)
mov
pushf
pusha
ds
jno
sub
enter
fsub
or
(bad)
in
js
xchg
imul
mov
adc
daa
fidivr
adc
or
push
mov
fdivr
dec
inc
mov
mov
or
test
or
enter
das
fcom
mov
mov
adc
dec
xlat
and
sub
jmp
push
or
lods
adc
sbb
sbb
push
imul
shr
add
xchg
jmp
cmp
cmp
add
or
push
push
int3
pop
push
xchg
mov
mov
xchg
sub
pop
pusha
inc
add
add
jecxz
mov
sbb
lea
push
aad
cmp
mov
add
add
jl
loopne
sub
daa
adc
add
loopne
repnz
adc
repz
dec
fisttp
jb
cdq
repz
pop
aam
xor
add
dec
test
mov
add
jne
call
ret
adc
test
nop
push
adc
cdq
pop
push
mov
adc
and
cwde
loope
cmp
mov
dec
pusha
adc
adc
adc
sub
adc
push
mov
and
cwde
lods
add
(bad)
les
hlt
mov
jge
cmp
cmp
sbb
cmp
icebp
cs
outs
lea
add
psllq
sbb
mov
jae
aas
mov
xor
test
gs
inc
adc
add
test
mov
imul
sbb
popf
pop
movs
iret
or
or
adc
add
jmp
test
test
loopne
in
sbb
push
inc
add
leave
xchg
inc
movs
add
shl
push
pushf
ror
mov
cs
cmp
jo
and
ret
cmp
sub
ss
push
add
cwde
add
push
and
mov
sbb
cmp
mov
push
loope
nop
push
pusha
sub
push
or
and
loopne
mov
push
cmp
jno
sbb
or
push
pop
scas
loop
sub
mov
mov
xchg
cmp
mov
push
pop
xor
inc
and
rol
iret
or
mov
lea
test
mov
push
retf
out
and
and
or
popa
sub
inc
adc
cdq
and
adc
imul
mov
inc
lods
sar
sbb
and
inc
cwde
sub
dec
xchg
cmp
fsub
call
cmp
popa
popa
pusha
and
in
add
xchg
cmps
and
lea
and
inc
push
icebp
cmc
js
mov
clc
push
mov
cmp
jge
pop
shl
xor
dec
sbb
inc
add
mov
addr16
adc
rol
push
dec
ret
add
adc
dec
loope
adc
pushf
sar
inc
jae
shr
pop
dec
fmul
inc
add
jmp
sub
cmp
imul
test
in
jmp
fisttp
fild
adc
les
jge
or
add
xor
mov
and
fbld
or
pop
aaa
and
inc
sbb
inc
xor
dec
inc
cmp
sub
sbb
push
ror
add
mov
rcr
xor
jnp
cli
sub
clc
or
xchg
add
(bad)
and
bound
cli
loopne
dec
sub
adc
sbb
rol
dec
dec
sbb
adc
dec
bound
inc
pop
jg
pop
sbb
dec
inc
adc
add
call
push
sub
inc
xor
sbb
stc
mov
or
xor
sub
sbb
in
cmp
adc
fisttp
sub
sub
or
pop
xor
sbb
mov
pusha
sbb
xchg
xlat
enter
movs
inc
jno
inc
xchg
xor
mov
push
mov
sbb
(bad)
pop
cdq
jbe
or
test
std
sub
mov
ja
add
and
lea
or
mov
jl
shr
dec
mov
adc
imul
sub
adc
iret
or
or
xor
inc
rcl
lods
ins
jge
jl
nop
aas
loopne
sub
les
add
or
int3
add
jge
push
or
adc
mov
push
and
adc
xor
outs
push
adc
mov
add
inc
ret
shl
nop
cmp
cmp
cmp
push
jle
ja
xor
add
adc
inc
and
and
mov
cmp
cmp
ret
add
dec
adc
inc
test
xor
pop
sub
movs
dec
sub
lods
inc
(bad)
jmp
xor
nop
dec
xor
pop
mov
xchg
or
mov
mov
jnp
sub
adc
add
aam
jecxz
cs
lods
and
test
or
pop
dec
pusha
sub
sub
outs
or
add
or
mov
nop
add
xchg
not
jmp
adc
jle
jmp
mov
mov
iret
jle
popa
jmp
xor
dec
jmp
xor
fldpi
inc
and
jmp
jge
jmp
and
push
mov
jmp
sub
mov
adc
or
inc
fdiv
icebp
cmp
rep
sub
nop
repz
pop
imul
movs
scas
mov
iret
repz
leave
rcr
in
xor
repz
test
mov
add
or
or
or
adc
add
sbb
sbb
inc
daa
xor
mov
das
add
mov
pop
cmp
jg
pop
pop
adc
pop
dec
and
mov
sub
loopne
ret
stos
inc
inc
mov
or
dec
cmp
pop
rol
sbb
sbb
mov
inc
pusha
mov
sbb
pop
inc
cmc
popa
sbb
mov
xchg
inc
vmread
add
cld
push
inc
or
xchg
or
inc
cmp
mov
imul
inc
loop
imul
popf
loopne
jp
rol
les
ret
rcl
mov
inc
inc
mov
(bad)
daa
(bad)
aam
mov
add
push
aam
adc
mov
enter
inc
pop
das
dec
xor
jmp
add
or
or
and
sub
lahf
imul
or
xor
adc
or
mov
cld
adc
pusha
pop
ror
sbb
xlat
sub
inc
inc
jae
push
push
sbb
dec
cmp
fisttp
cwde
sbb
adc
or
nop
pop
add
imul
xor
test
leave
aam
fcomp
loop
aaa
or
jb
test
out
call
push
or
pop
fs
mov
inc
sub
dec
dec
dec
add
in
xchg
or
dec
cli
xchg
xor
add
sub
jne
sub
mov
ins
ss
or
mov
sbb
jbe
rcr
es
inc
cmp
cld
xchg
add
jmp
jg
or
and
mov
xor
jne
and
push
ror
inc
mov
mov
shr
mov
jecxz
and
jae
cmp
clc
mov
add
push
cld
test
hlt
cs
out
cmp
(bad)
xor
enter
add
aad
sbb
cmp
and
adc
das
cld
sub
mov
fwait
push
mov
pop
enter
and
add
cmps
adc
arpl
out
aas
jmp
and
loopne
xchg
nop
add
sub
paddusw
pop
outs
push
das
lock
lahf
inc
inc
xchg
sbb
js
push
inc
dec
push
aam
xor
push
lds
mov
and
mov
ins
popa
adc
nop
jmp
std
cmp
add
push
cmp
jne
push
mov
dec
(bad)
pop
add
hlt
xor
mov
add
lds
add
push
jb
pop
adc
pop
dec
fcom
push
push
inc
cmp
cmp
leave
cmp
sbb
or
push
arpl
clc
cmp
es
je
or
and
jge
mov
lahf
or
fbld
and
das
pushf
setno
sbb
cmp
ret
mov
aaa
sub
ds
xor
xchg
nop
cmp
inc
das
mov
sbb
inc
mov
sbb
push
sub
ja
inc
or
and
pop
mov
pop
sub
push
jl
mov
add
cmps
cmp
fdivp
add
or
nop
bound
xor
sbb
and
ins
retf
lea
mov
add
sbb
sbb
xchg
inc
aam
sub
shr
cmp
mov
push
aad
add
scas
mov
sbb
inc
pop
retf
ret
mov
popa
rcl
or
and
xor
push
das
or
sub
in
jmp
(bad)
mov
mov
pushf
pop
xchg
or
lock
xchg
dec
lods
shl
mov
sbb
jo
fcomp
pop
cmp
and
mov
sbb
popa
and
mov
pop
les
and
cmp
or
aaa
jne
or
cwde
or
sbb
(bad)
xchg
je
int
fldenv
and
add
push
mov
and
sbb
mov
mov
mov
mov
add
push
popa
cld
inc
xchg
mov
mov
or
mov
imul
dec
test
push
jmp
xchg
sbb
push
rcr
adc
loopne
adc
mov
add
sub
or
fadd
pop
sub
or
or
mov
lds
mov
or
mov
adc
mov
mov
push
add
nop
push
or
pop
std
or
shl
in
add
adc
sbb
add
enterw
jo
adc
or
mov
call
sub
sub
xor
lea
es
imul
jge
movs
fs
cs
stos
test
sub
cwde
inc
jmp
mov
nop
mov
or
mov
mov
push
aaa
or
sbb
adc
add
or
aaa
popa
dec
push
mov
inc
push
inc
inc
and
add
or
rol
dec
mov
arpl
stos
ins
xor
adc
neg
mov
fnstsw
add
in
iret
or
jo
sbb
loope
xor
fdivr
(bad)
stos
and
add
or
push
sub
mov
and
dec
or
ret
(bad)
mov
sbb
in
mov
dec
into
adc
gs
test
push
fbld
lods
jno
clc
add
jno
(bad)
outs
cld
lahf
repz
ins
cmps
fstp
(bad)
movs
mov
sub
mov
mov
ror
imul
push
ficomp
test
push
xchg
pop
sub
loopne
sub
inc
dec
dec
repnz
pushf
sbb
(bad)
push
pop
movq
jb
cmp
jb
bound
push
lods
push
out
adc
fs
or
push
sbb
adc
lea
popf
adc
jno
adc
mov
mov
push
add
mov
imul
pop
push
sub
out
sbb
or
push
xor
push
lea
leave
aam
dec
inc
adc
push
sbb
les
pop
adc
popa
bound
jnp
cmp
stos
inc
outs
mov
xor
cs
retf
leave
push
loopne
aaa
pusha
(bad)
jg
loope
dec
in
and
add
inc
inc
push
ins
clc
cmp
enter
ret
inc
popf
push
or
inc
xchg
pop
sbb
and
xor
push
outs
mov
fwait
pusha
inc
mov
cmp
ins
sahf
int
cmp
data16
and
mov
adc
pop
cmp
xlat
cmp
add
adc
or
push
adc
or
adc
cwde
aad
add
and
loope
xor
clc
pop
mov
dec
xchg
ror
and
mov
(bad)
or
sbb
and
imul
imul
xchg
add
xchg
pop
pop
daa
jo
sar
in
cmp
pop
xor
pop
stos
hlt
hlt
dec
sbb
add
test
fidiv
and
fistp
push
and
es
lea
mov
xor
imul
shr
mov
inc
retf
rcl
dec
add
ret
mov
or
pop
or
ins
sub
les
and
shr
sbb
jnp
cmp
pop
or
sub
adc
mov
add
add
lea
inc
and
or
mov
cld
and
inc
xchg
xchg
xchg
data16
sub
jo
mov
xor
mov
cmc
pop
mov
inc
pop
lea
or
stos
test
int3
or
mov
lock
or
je
inc
(bad)
sbb
rcl
add
int3
push
inc
cmp
adc
or
test
pop
cmp
cld
push
int3
mov
pushf
mov
mov
adc
mov
add
inc
ror
inc
push
inc
nop
mov
xor
mov
fistp
mov
dec
xlat
pop
call
test
mov
pop
arpl
mov
adc
dec
jmp
add
xchg
inc
xor
add
add
xor
cmp
sar
stos
fs
push
imul
jnp
cmp
cwde
mov
lea
add
iret
xor
clc
test
adc
mov
mov
dec
sbb
mov
sbb
cmp
push
fsub
add
pop
test
in
loope
add
mov
xor
test
sbb
gs
lods
jbe
cmps
inc
lods
ret
pop
fld
dec
xchg
hlt
xchg
xor
dec
movs
lock
sub
mov
adc
dec
dec
inc
push
adc
dec
(bad)
ins
add
add
data16
scas
push
dec
pop
mov
stos
xchg
dec
mov
mov
and
or
stc
push
(bad)
dec
push
mov
push
fcom
fwait
and
mov
mov
jno
add
push
sar
sbb
mul
into
and
mov
into
ror
fadd
into
pop
shr
jl
adc
or
dec
(bad)
mov
lods
sbb
and
add
add
je
push
dec
push
nop
sbb
fimul
push
add
pop
sub
ror
fwait
xchg
test
mov
cdq
xchg
pop
pop
sbb
ins
pop
push
dec
mov
gs
adc
or
nop
sti
or
(bad)
pop
inc
push
add
mov
bound
dec
pop
cmp
shl
test
mov
test
sti
leave
or
dec
pushf
sub
fwait
push
dec
xchg
je
sbb
fwait
jne
adc
outs
xchg
mov
into
lds
sbb
adc
adc
adc
rcr
mov
cmp
and
adc
push
xchg
mov
push
outs
mov
push
inc
imul
iret
mov
sbb
lea
sbb
dec
jno
test
in
push
das
dec
xchg
dec
adc
les
call
pop
add
mov
jne
or
push
cmp
mov
add
dec
pusha
push
adc
cmp
ror
xor
fdivr
mov
(bad)
ror
in
leave
add
add
rol
jo
mov
inc
mov
add
sbb
inc
jne
and
loopne
inc
add
jo
mov
pusha
mov
cmps
mov
or
or
dec
sub
out
adc
ins
jl
js
push
and
and
ins
push
imul
pop
fmul
out
mov
jp
or
pop
pop
inc
test
push
xor
sub
and
xchg
and
add
rcr
or
shl
aas
pushf
and
es
push
xchg
or
adc
xchg
jmp
in
lods
aaa
add
jne
or
add
cmp
mov
popf
or
inc
jmp
sbb
sbb
cdq
mov
mov
xchg
test
ja
sub
xchg
cdq
out
xor
in
adc
scas
test
das
sbb
(bad)
fimul
and
cld
push
test
jnp
dec
hlt
or
jge
and
test
or
xor
add
scas
mov
sub
mov
sti
add
int3
test
clc
aaa
adc
xchg
addr16
test
loop
xor
sub
mov
jne
inc
enter
adc
test
cmp
enter
cmp
repnz
push
dec
fst
shr
xchg
or
ja
test
push
and
add
adc
jnp
ins
inc
add
xchg
jge
and
pop
pop
pop
ror
mov
ins
fisub
fiadd
sub
outs
cmp
push
cmp
fnsave
push
add
neg
stos
dec
(bad)
sysret
add
paddq
add
fisttp
test
xchg
shl
cmp
add
fisttp
sbb
pop
in
cld
mov
adc
je
push
ins
pop
or
adc
arpl
scas
pop
test
or
push
loopne
ins
arpl
pusha
rcl
pop
sbb
pop
inc
and
adc
pop
test
sub
inc
loopne
jno
mov
inc
xor
pop
scas
push
jecxz
icebp
in
push
or
push
jnp
jo
and
or
dec
adc
ror
popa
xor
add
push
pop
movs
js
mov
inc
out
adc
push
jns
sub
or
mov
sbb
cmps
inc
sub
sub
jae
sub
inc
mov
adc
in
sub
hlt
cmp
inc
add
sbb
mov
fimul
adc
push
sub
lahf
fcom
std
push
jne
std
mov
lahf
ror
(bad)
sub
dec
mov
xchg
cmp
leave
adc
test
mov
sbb
jno
and
das
xor
sahf
leave
jae
and
sub
in
jmp
lahf
daa
jecxz
or
arpl
(bad)
in
jns
mov
xor
or
push
call
mov
dec
inc
or
das
add
shl
ins
and
cdq
xchg
cmp
rol
or
stos
loope
and
stos
test
arpl
mov
ins
xchg
mov
xor
add
xor
cmp
pop
popa
dec
push
jnp
cmp
push
ss
popf
inc
and
nop
inc
pop
dec
inc
pop
in
fmul
and
test
in
mov
adc
adc
(bad)
lock
jmp
mov
sbb
daa
test
dec
add
push
push
pop
or
mov
xchg
lock
sub
add
sbb
call
jle
test
out
pop
adc
int3
or
ss
mov
or
add
adc
dec
or
dec
add
mov
adc
add
shl
sub
clc
push
mov
add
andnps
mov
inc
jne
jmp
xor
mov
mov
fistp
loopne
and
or
mov
lock
enter
(bad)
in
ret
sub
xchg
or
lahf
push
mov
xchg
adc
mov
add
or
sbb
pop
in
adc
push
xor
sbb
loopne
lahf
push
pop
cmps
push
or
or
retf
loope
imul
jo
popf
(bad)
mov
ficomp
rcr
(bad)
sbb
push
cwde
cld
add
adc
pop
daa
pop
inc
fs
popa
loopne
xchg
out
das
or
jne
push
es
clc
fst
loope
je
or
adc
sbb
or
ins
fadd
dec
lock
and
inc
mov
jmp
mov
fwait
(bad)
aaa
aam
sbb
shl
push
fwait
sar
rcl
xor
and
sbb
or
sub
push
pop
xor
test
xor
gs
adc
adc
in
add
jg
xchg
and
push
cmp
jle
add
add
test
daa
shl
mov
mov
sub
add
dec
cmp
in
mov
pop
add
push
ret
mov
in
int3
inc
pop
dec
call
sub
bound
and
popa
fimul
mov
sbb
mov
add
repnz
dec
mov
push
dec
add
and
sub
retf
adc
mov
mov
bound
sbb
in
mov
jae
nop
cmp
jo
xchg
ror
nop
arpl
clc
dec
push
mov
xor
pop
xchg
sub
movs
push
inc
dec
in
ror
mov
xor
gs
cmp
sub
sahf
xor
cmp
push
or
shl
mov
setge
mov
xchg
or
jo
adc
mov
pop
mov
ret
daa
loopne
inc
pop
dec
push
ja
or
adc
dec
jecxz
sysenter
adc
jg
loop
adc
ficomp
aaa
jmp
adc
jg
sar
add
cmp
pop
addr16
rol
adc
or
(bad)
mov
out
int3
inc
or
imul
inc
sahf
out
sbb
pop
sub
adc
pop
xor
dec
out
ins
pop
dec
sbb
cmp
pop
mov
add
pop
pop
add
shl
jnp
add
pop
add
fild
call
mov
mov
test
ins
ret
jg
adc
stos
dec
mov
movs
sub
and
add
xchg
lds
std
and
lods
mov
add
sbb
lea
and
pop
fstp
ss
pop
jne
arpl
push
stc
xchg
nop
popf
les
rol
in
popf
enter
xchg
push
dec
in
enter
movs
lahf
les
ret
push
aas
sbb
or
shl
jecxz
pop
rcl
pop
mov
outs
(bad)
pop
je
jge
(bad)
lea
mov
bound
or
stos
xchg
das
pop
push
or
lods
lods
bound
push
and
xchg
add
xchg
sbb
dec
or
aaa
addr16
push
sub
test
in
lods
ins
mov
pop
pop
popf
in
add
in
add
clc
and
arpl
dec
adc
mov
or
pop
and
sbb
xor
add
(bad)
or
mov
add
xor
mov
inc
push
pop
push
push
jne
cmp
push
dec
sbb
pop
xchg
adc
lahf
aaa
cmp
sbb
adc
data16
dec
in
sub
popa
sub
inc
iret
lea
ds
or
(bad)
call
ror
inc
and
ror
adc
es
sti
mov
sub
mov
mov
adc
daa
or
cmp
repz
pushaw
retf
push
aam
out
jo
out
popa
and
and
add
and
dec
outs
add
pop
aas
inc
mov
hlt
adc
jne
xchg
xchg
pop
mov
clc
fwait
fs
call
nop
mov
xor
js
ds
lock
jns
test
xchg
mov
and
in
loope
lock
mov
add
xchg
div
add
ins
cmp
xlat
jecxz
mov
sbb
sub
pop
or
add
aas
loopne
add
lock
inc
adc
or
dec
push
push
pop
mov
scas
mov
loopne
fs
push
jno
scas
fbstp
fcomp
out
mov
test
loopne
lahf
xchg
cmp
push
sbb
add
adc
test
sub
push
or
add
inc
add
lods
and
cmp
mov
pusha
nop
cmp
jecxz
push
xor
jg
cmp
loopne
ins
ins
fild
push
adc
pop
add
fcom
lahf
dec
push
movs
add
mov
add
bound
adc
test
push
mov
push
mov
or
mov
and
hlt
mov
push
add
inc
(bad)
in
addr16
dec
jae
(bad)
data16
or
jnp
add
inc
test
jno
dec
mov
and
mov
inc
adc
daa
arpl
pusha
test
test
sub
lds
enter
sti
mov
jl
mov
sbb
ins
mov
fistp
inc
lock
lock
mov
in
mov
sub
loope
in
cld
jae
sbb
pusha
xor
xchg
dec
int3
and
sbb
add
mov
mov
inc
fist
and
adc
xor
test
push
hlt
or
and
add
dec
test
cld
mov
retf
mov
or
je
jg
dec
push
xchg
add
mov
sbb
outs
int3
rcr
aam
sbb
je
xor
inc
or
pop
and
js
lods
lahf
lock
add
ja
or
sbb
cld
loop
mov
mov
push
inc
clc
rol
add
and
pushf
test
adc
jmp
pop
jge
fsub
lods
cmps
sub
or
pop
or
xchg
adc
dec
jmp
pop
jno
(bad)
pop
jns
mov
add
push
inc
xor
pop
les
adc
outs
jno
jmp
xor
data16
(bad)
hlt
and
ret
test
rcl
call
in
jl
hlt
test
jmp
inc
or
movq
push
ret
cmp
push
cmp
jo
pop
inc
add
pop
inc
sub
mov
pop
and
and
and
mov
jl
inc
cwde
jle
ins
into
inc
or
push
ins
adc
sbb
ror
push
(bad)
outs
ins
push
xchg
les
retf
clc
inc
or
lahf
or
call
fild
dec
bound
mov
sub
sbb
jne
inc
int
fmul
jg
jo
movs
lahf
sub
call
mov
inc
and
or
loope
cmc
or
xchg
sbb
cmc
cmps
mov
enter
loope
and
les
mov
pop
pop
add
inc
add
pop
dec
xor
aas
add
nop
push
mov
movs
fdiv
inc
xor
cwde
das
pop
sbb
imul
and
xchg
mov
call
xchg
sub
xchg
scas
test
das
sar
cmps
mov
or
daa
inc
push
push
xchg
inc
ret
adc
inc
call
xor
mov
sub
add
sahf
add
lods
cmp
dec
popf
sbb
sahf
cwde
repz
mov
mov
sbb
sub
dec
dec
pop
pop
jb
xchg
mov
or
in
xchg
pop
movs
inc
bound
loopne
(bad)
sub
ret
sbb
xor
sub
or
push
adc
inc
sub
cmp
mov
mov
(bad)
jns
popf
(bad)
mov
add
cmp
add
or
dec
push
inc
jns
jns
adc
inc
add
mov
jg
and
jl
sub
jo
icebp
or
sbb
iret
ja
retf
je
adc
add
mov
sbb
jno
sub
stos
and
and
xor
mov
adc
shr
or
jb
push
mov
shr
cmp
mov
jg
xor
aas
adc
dec
in
push
aam
sub
les
and
add
cmp
out
jmp
adc
leave
pop
fild
loopne
and
das
add
push
leave
adc
or
mov
add
pop
push
daa
or
pop
daa
adc
jmp
adc
cmp
call
push
sub
hlt
xor
and
inc
and
jg
mov
popa
mov
or
add
lahf
pop
add
or
sub
push
mov
pop
adc
mov
popa
mov
add
xor
and
push
mov
loope
aaa
sub
imul
ret
adc
push
cmp
dec
mov
mov
jno
add
jo
or
jmp
movs
cmps
mov
push
mov
and
jl
xor
aas
adc
mov
add
imul
sub
cld
add
out
lods
mov
not
push
adc
dec
add
add
icebp
inc
pushf
dec
(bad)
mov
push
mov
inc
dec
out
les
or
pop
ja
ror
inc
xchg
xor
pop
pop
mov
and
ret
push
xor
dec
dec
pop
and
or
mov
ja
inc
push
ja
adc
sub
cmp
dec
ja
gs
mov
ds
push
cmc
lock
xchg
lock
or
add
push
loope
mov
xor
into
test
add
dec
sbb
aas
inc
mov
and
mov
ins
pop
sbb
cmp
fist
fdiv
push
rol
jg
rol
push
cmp
call
aaa
dec
out
dec
(bad)
or
jb
popa
loope
dec
mov
cmp
xor
(bad)
dec
sub
adc
fwait
pop
jo
fbld
sbb
pusha
aas
push
(bad)
mov
cdq
fsub
inc
or
(bad)
int
ss
ja
inc
sbb
aas
pop
adc
push
retf
push
mov
pop
xchg
and
xor
popa
inc
dec
add
push
or
cwde
xor
js
xchg
mov
test
ret
mov
aam
bound
mov
push
add
pop
sub
xchg
dec
mov
and
adc
cs
loopne
mov
dec
xor
rcl
clc
arpl
inc
stos
and
arpl
icebp
nop
neg
movs
and
dec
xchg
in
pop
mov
xchg
fs
dec
pop
push
pop
test
pop
adc
es
je
or
inc
or
cwde
and
pusha
mov
(bad)
pop
jmp
push
inc
enter
sub
mov
out
push
and
mov
lea
xor
sub
leave
and
or
push
xchg
push
jmp
mov
aam
dec
push
fwait
xchg
fs
lahf
or
clc
push
cld
add
cmps
test
or
stos
sub
ret
and
add
int3
mov
jecxz
or
adc
loopne
movs
pop
adc
mov
adc
mov
mov
stc
or
dec
dec
fild
inc
add
aaa
lods
dec
ins
jg
movs
in
sbb
fadd
mov
lea
add
das
mov
test
jg
inc
loopne
inc
arpl
add
ret
and
shl
stos
sub
bnd
cdq
les
push
add
div
clc
xor
push
fdiv
cdq
sub
adc
add
add
in
pop
inc
mov
pop
xor
mov
jg
mov
add
dec
dec
or
ja
verr
lock
sbb
mov
dec
push
test
and
cmp
nop
add
rol
jne
xor
dec
rol
inc
pop
or
sbb
aaa
outs
mov
mov
cmps
fimul
adc
or
or
jecxz
shr
xchg
jmp
je
jecxz
push
sahf
dec
xchg
push
mov
jbe
js
push
sub
mov
dec
sub
fild
pop
push
fwait
push
outs
inc
fbstp
(bad)
call
in
test
les
hlt
ins
mov
push
inc
int
sub
test
jl
stos
or
les
push
lea
add
jmp
js
aam
test
loop
and
jo
or
inc
mov
add
pop
mov
mov
or
add
popf
sbb
retf
xchg
ror
xor
fild
xchg
clc
sbb
call
add
sbb
push
adc
imul
and
imul
imul
cmp
and
sub
mov
sub
or
mov
aaa
mov
mov
pop
cwde
adc
xchg
dec
nop
pop
popa
add
pop
adc
aaa
scas
xor
shl
sub
or
adc
push
jno
stos
pushf
mov
mov
add
les
dec
jo
add
and
fwait
add
push
jg
rcl
xchg
mov
push
rol
or
push
aam
pop
and
ret
in
push
pop
xchg
sbb
sbb
(bad)
in
inc
and
mov
jmp
push
or
or
mov
ins
adc
or
adc
aas
xor
or
mov
or
jns
clc
rol
sub
dec
aam
xor
clc
ffree
jb
les
(bad)
mov
push
push
das
push
stc
push
or
aad
or
push
add
push
fs
int
mov
mov
lea
add
inc
dec
test
and
pusha
cmp
add
mov
in
cmp
inc
adc
adc
inc
pop
push
sbb
paddd
fwait
push
test
cdq
in
ret
lock
or
test
pop
clc
or
push
pop
inc
xchg
adc
adc
ins
add
sub
ror
jnp
cmp
pusha
out
add
fadd
inc
or
inc
cmp
ror
or
and
pop
je
and
rcl
sbb
ins
jae
popa
add
les
jg
pop
dec
xchg
ds
and
push
jnp
ror
xor
or
mov
pop
rcl
and
aaa
test
test
pop
rol
add
cmp
mov
inc
(bad)
dec
pop
add
or
icebp
into
mov
xchg
add
mov
es
jmp
dec
adc
loope
lea
add
pushf
sub
inc
or
adc
or
add
sbb
xor
xchg
sbb
mov
push
nop
adc
imul
ror
mov
mov
test
enter
fmul
lods
aam
sbb
dec
cld
test
add
enter
add
jo
sub
and
sbb
inc
pop
adc
xchg
rol
fwait
add
(bad)
in
dec
adc
jg
mov
pop
add
pop
push
and
push
inc
adc
and
push
or
icebp
push
mov
enter
jecxz
test
sbb
jo
fs
outs
enter
in
pop
xor
sbb
and
rcr
ret
cmp
jnp
add
cdq
add
jg
les
fadd
cmp
mov
or
mov
xchg
add
xor
cmp
or
sub
or
xchg
dec
adc
jg
xchg
lea
ret
pusha
inc
cmps
add
test
and
dec
push
push
push
and
stos
add
movs
inc
or
inc
cwde
add
mov
retf
lock
inc
fisub
or
cmps
mov
stos
aas
ficom
adc
in
aaa
push
add
dec
lds
cdq
nop
sbb
lock
inc
jns
or
lds
loope
and
xor
xor
in
loope
cwde
sbb
loop
or
add
add
cmp
mov
mov
dec
shl
jg
clc
add
es
cmp
jns
mov
and
or
adc
cmp
inc
popf
imul
sub
sbb
test
sub
cmp
push
aaa
pop
mov
pop
mov
push
hlt
xor
push
xor
retf
push
movs
loopne
adc
and
mov
inc
adc
not
mov
mov
(bad)
lea
xor
inc
inc
xchg
aaa
jno
test
push
mov
sbb
mov
add
mov
dec
dec
fmul
(bad)
fiadd
sbb
lds
inc
lea
add
adc
or
ret
cmp
adc
movs
adc
sub
dec
xor
push
xor
and
ror
rcl
dec
push
mov
inc
adc
mov
inc
movs
lahf
jno
adc
mov
shr
cld
pop
pop
add
pop
js
cmp
out
fisttp
xchg
jno
fisttp
std
movs
dec
push
xchg
in
mov
int
sbb
mov
push
mov
adc
loopne
sub
add
into
mov
fisubr
push
add
fcom
jge
mov
movs
inc
or
cmps
pop
pop
and
add
jl
mov
cmp
ss
mov
jecxz
xor
xor
jno
pop
and
or
fnstcw
mov
mov
pop
loop
fs
cmp
push
cld
push
push
inc
clc
adc
sub
cmp
mov
lock
cld
sbb
push
xor
shl
je
cmps
lock
and
dec
xor
les
cmps
mov
fs
mov
or
inc
cmps
push
xchg
cwde
inc
or
bound
push
or
or
call
adc
jo
aas
add
mov
add
add
pusha
sbb
scas
pop
mov
sub
adc
clc
dec
add
loop
cld
inc
bound
lods
int3
pop
mov
mov
or
ret
push
and
nop
nop
loope
xor
push
or
mov
pop
call
mov
or
or
mov
xchg
mov
xor
xor
jmp
or
xchg
mov
test
xchg
push
add
dec
add
stc
dec
xchg
cwde
and
xor
mov
jle
jne
pusha
add
mov
fsubr
or
xchg
jo
jecxz
(bad)
jge
dec
or
xor
add
adc
mov
mov
xor
sar
push
daa
xor
push
adc
cmp
fbstp
push
inc
sub
pushf
js
ret
adc
sub
or
cmp
cmc
xchg
mov
push
dec
fnstenv
in
lock
js
xchg
jmp
jle
cmp
xchg
pusha
or
int
jno
pusha
fild
push
imul
mov
xor
arpl
je
mov
mov
jmp
mov
clc
shr
and
add
retf
loop
cmc
xor
dec
push
mov
imul
cmc
sub
fist
sub
jl
xchg
nop
sub
pop
push
nop
(bad)
das
dec
sub
imul
lods
pop
in
in
adc
inc
jg
in
aas
mov
sub
pop
out
xor
push
dec
sub
ror
add
inc
loop
pop
sbb
enter
int3
or
jmp
shr
movs
scas
push
push
sub
iret
xchg
sbb
cmc
xchg
outs
adc
xor
retf
sbb
and
fsub
mov
(bad)
pop
les
mov
(bad)
leave
cmp
(bad)
mov
mov
ror
ins
push
retf
shl
add
call
pop
cmp
push
enter
(bad)
mov
cmp
imul
je
pop
adc
push
xchg
test
add
fdivr
cmp
mov
dec
push
das
fmul
adc
jo
and
or
adc
xchg
lahf
and
pop
inc
pop
popf
popf
out
cwde
and
add
jg
in
adc
or
int3
call
movs
adc
add
xchg
rcl
add
and
dec
pop
jmp
pop
adc
mov
adc
push
add
cld
sub
xchg
add
cmp
stos
add
add
stc
shl
(bad)
xor
adc
cmps
pop
or
sub
mov
jp
add
inc
dec
jecxz
dec
mov
int
xchg
outs
lock
inc
mov
les
(bad)
daa
mov
cmp
sub
push
sub
mov
jp
je
mov
or
adc
mov
add
sbb
push
and
mov
nop
mov
adc
pop
mov
mov
adc
cmp
mov
dec
fcom
and
xor
dec
fcom
mov
shr
mov
ret
sub
sbb
and
xchg
fwait
or
call
inc
jp
hlt
xor
add
js
movs
jge
call
xor
mov
mov
inc
call
daa
or
push
pop
adc
dec
out
addr16
add
adc
add
jl
inc
test
cwde
jmp
inc
ins
jae
push
lods
cmc
mov
jne
jo
pop
push
adc
add
jge
sub
cmp
outs
sub
xchg
sar
adc
test
cwde
pusha
test
or
test
sbb
test
or
ds
movs
push
xor
or
punpckhdq
daa
ret
mov
popf
jne
add
das
aam
xor
and
sub
shl
push
lds
int
or
bound
push
dec
les
je
dec
dec
shl
sbb
pop
jmp
adc
test
rol
scas
push
pop
jp
mov
cmps
rcr
sbb
clc
adc
xchg
add
not
and
fwait
shl
add
cld
adc
es
xchg
push
or
lock
xchg
mov
dec
inc
cmp
jle
sar
add
js
add
pop
pop
push
les
cmp
jns
pop
add
push
aam
or
xchg
adc
add
or
add
pop
pop
ret
int
inc
dec
adc
add
pop
sbb
cmovs
xchg
mov
rol
pushf
mov
dec
mov
push
jmp
mov
jmp
iret
xchg
pop
pop
(bad)
mov
mov
imul
jge
mov
adc
jp
or
cmps
dec
jg
or
scas
push
ret
mov
add
mov
push
add
adc
inc
test
inc
mov
(bad)
cmp
cmp
ret
or
add
xchg
jmp
fstp
add
jbe
mov
enter
das
sub
inc
stos
imul
shl
add
call
add
out
sub
push
popf
ret
mov
lods
mov
mov
sub
mov
pop
dec
push
inc
movs
mov
mov
jp
or
(bad)
fbstp
pusha
fild
aam
dec
popa
inc
sub
dec
dec
movs
imul
dec
ja
push
push
arpl
push
lods
xchg
sbb
mov
and
imul
mov
test
mov
mov
icebp
adc
add
iret
and
mov
xor
inc
neg
push
nop
iret
xor
xor
test
out
sbb
cmp
xchg
fist
xchg
inc
add
push
lock
adc
adc
ins
cmp
sti
fsubr
aad
inc
(bad)
scas
pop
sbb
inc
ins
inc
lock
or
sub
fmul
sub
loope
je
xchg
fs
loop
add
fs
cmovae
test
inc
mov
jne
mov
aad
or
push
add
jge
fist
lods
xchg
nop
mov
sub
xor
adc
adc
adc
inc
in
inc
stos
hlt
rcl
repnz
sub
or
rol
mov
and
je
sub
xchg
out
xor
or
out
sub
mov
inc
pop
sbb
mov
movs
sbb
cmps
add
out
adc
cmp
ror
loope
cmc
dec
movs
cwde
inc
pop
lods
pop
add
push
dec
push
mov
push
nop
push
push
(bad)
cmp
dec
xor
sar
or
sub
ss
and
or
mov
inc
xchg
add
cmp
fcomip
test
sar
int3
or
xlat
sub
pop
xor
add
scas
or
fisttp
mov
mov
cmp
dec
not
cmp
add
sahf
into
cmp
adc
sbb
iret
or
pop
mov
or
icebp
call
clc
add
inc
mov
lahf
push
inc
enter
push
pop
rol
icebp
cmps
(bad)
shr
out
and
xor
pop
and
pop
mov
push
push
or
or
jecxz
add
or
mov
mov
adc
cmp
xor
jae
add
push
or
lods
aaa
adc
(bad)
inc
mov
adc
das
adc
jmp
add
or
clc
or
jmp
and
mov
es
in
add
leave
sbb
addr16
mov
mov
and
jmp
jmp
sub
ins
(bad)
push
sar
mov
and
test
out
es
mov
or
imul
and
pop
adc
push
and
xor
cmps
mov
inc
fcom
out
sbb
adc
lea
scas
pop
invd
or
mov
jnp
(bad)
shl
cld
adc
jl
jmp
sar
mov
and
fnstsw
inc
add
inc
pop
in
push
sbb
loop
jnp
scas
test
loopne
pop
stc
adc
jmp
nop
jo
and
push
shl
fsub
mov
lds
and
in
jmp
cdq
cmp
scas
fwait
jne
inc
cmps
lahf
or
add
xor
xor
xchg
xor
and
xor
or
adc
xchg
and
mov
inc
adc
adc
add
leave
ror
pop
jl
pop
push
adc
xchg
ror
outs
aas
fdivr
xor
adc
xor
in
movs
mov
mov
rcl
sbb
dec
jp
add
fwait
out
aas
or
mov
mov
jo
fadd
ins
lods
outs
dec
in
ins
test
add
add
add
dec
mov
stos
ret
pop
dec
(bad)
repnz
imul
clc
xor
pusha
imul
push
jmp
xor
mov
and
stos
xor
jl
push
adc
and
hlt
and
mov
rcl
imul
popa
rol
int
ret
pushf
add
cs
push
pop
push
jmp
jge
dec
cmp
pop
cmp
ins
pop
push
ss
and
stc
adc
inc
and
pop
stos
mov
jge
jmp
pop
pusha
adc
pop
data16
pushf
push
add
fwait
dec
aad
jno
hlt
or
mov
cmp
or
pop
add
dec
xlat
inc
sub
lea
nop
mov
stos
in
and
test
rol
loopne
adc
jge
bswap
and
push
adc
push
and
sti
dec
enter
sbb
sbb
mov
fild
adc
scas
inc
jl
push
rol
fild
jecxz
cwde
sub
mov
popa
and
icebp
fst
xor
fadd
mov
fwait
add
pop
jnp
mov
rcl
call
sub
xchg
icebp
in
aam
sar
or
add
popa
adc
push
add
(bad)
test
je
dec
or
cmps
and
add
sbb
add
in
test
arpl
loopne
add
xor
and
jg
sub
or
jne
sbb
sbb
fidivr
pop
sbb
sub
lock
adc
adc
mov
nop
adc
jmp
lea
pop
leave
mov
add
std
add
mov
cmp
dec
sub
popa
lds
int3
mov
mov
mov
and
jl
dec
add
push
mov
sub
(bad)
in
dec
mov
cmp
push
mov
sub
dec
push
stos
or
movs
push
cmp
add
fwait
add
les
(bad)
jo
les
sub
push
mov
jl
ror
lods
shl
mov
mov
jmp
or
and
sahf
add
sub
call
pextrw
add
js
loopne
fcom
mov
push
and
pop
fild
and
pop
mov
mov
xor
mov
or
mov
rcl
pop
arpl
mov
add
dec
pop
and
push
out
or
es
in
pop
dec
and
(bad)
xor
adc
inc
add
add
or
adc
les
js
xor
mov
shr
xchg
mov
adc
jl
sub
sub
jae
add
jmp
add
jmp
ins
comiss
adc
adc
aaa
mov
test
mov
dec
lahf
add
adc
jg
cwde
pop
js
sbb
xor
mov
shl
aaa
mov
xchg
and
jg
pop
inc
pop
adc
pop
jl
and
inc
lahf
nop
mov
test
scas
in
fiadd
popa
and
sub
or
push
mov
es
sbb
or
cmp
add
xchg
fidivr
arpl
sub
and
add
fnstsw
mov
xor
mov
ins
retf
les
push
adc
jbe
fstp
pop
add
or
xchg
pop
dec
sbb
push
pop
jle
mov
mov
fdivr
outs
inc
cli
jle
push
xor
pop
pop
dec
dec
outs
mov
xchg
xor
cmp
addr16
lock
adc
shl
shr
ret
add
lock
dec
push
pushf
ror
jmp
movs
mov
sub
aas
lahf
add
mov
mov
in
cmp
adc
add
aaa
and
outs
pop
outs
je
or
cdq
dec
loop
pusha
xor
push
shl
int3
mov
or
or
mov
adc
adc
test
mov
inc
add
movs
cmp
sub
add
add
sub
(bad)
adc
or
and
sub
je
jno
pusha
adc
dec
fsubr
ffreep
adc
add
add
fs
loopne
dec
jp
inc
aas
out
cmp
xor
aas
jnp
pop
dec
jmp
mov
(bad)
xchg
add
jg
std
jmp
nop
or
retf
mov
add
mov
and
les
inc
pop
out
lods
pop
add
and
jnp
lahf
mov
imul
cmps
add
or
add
push
shl
dec
inc
icebp
push
sbb
or
mov
clc
mov
or
add
mov
in
adc
bound
add
jmp
inc
add
jge
inc
and
push
mov
ror
outs
push
aaa
sub
dec
inc
sub
or
ja
xchg
fisub
mov
rcl
call
popf
in
loopne
sub
push
clc
jg
rol
mov
sbb
aas
or
add
mov
cmp
je
and
mov
mov
or
shl
push
repnz
and
adc
movs
(bad)
cdq
sbb
xchg
add
test
je
(bad)
xlat
es
inc
sub
(bad)
xor
or
inc
and
nop
fyl2xp1
ja
les
push
pop
mov
jae
xchg
nop
sbb
add
add
rcr
je
enter
xchg
in
push
or
sbb
and
enter
sub
ret
or
mov
bound
dec
fcom
fmul
call
rol
mov
or
xchg
xchg
cs
cs
xchg
ficom
jno
inc
jecxz
add
fadd
sub
inc
ror
dec
rcr
mov
or
jle
add
pop
enter
push
popa
imul
and
adc
dec
sub
and
(bad)
movs
mov
jnp
jp
xchg
aas
sub
and
mov
in
pop
rol
mov
outs
xchg
lods
jmp
lea
rep
movs
(bad)
shl
call
mov
add
add
enter
inc
test
loop
add
pop
dec
shr
and
js
lahf
je
bound
popa
outs
dec
xor
sub
or
ret
mov
jb
shl
frstor
es
inc
call
and
pop
inc
and
add
gs
add
adc
gs
aaa
ins
jmp
lds
push
adc
inc
and
sbb
dec
lds
add
pop
and
pop
jnp
mov
inc
dec
movs
leave
clc
mov
push
mov
es
cmps
xchg
xchg
cmp
sbb
in
xchg
sbb
ret
shr
inc
inc
fisttp
leave
icebp
in
inc
pusha
mov
ror
adc
hlt
cmc
add
(bad)
(bad)
mov
rcr
jne
or
and
imul
cmp
(bad)
into
and
ja
shl
mov
xor
and
add
jmp
in
mov
cs
mov
or
add
push
leave
aad
(bad)
loopne
push
call
mov
push
push
or
add
jne
sbb
mov
or
pop
fsubr
cmp
and
or
inc
lock
mov
push
dec
or
xchg
xor
adc
aam
xchg
xor
sbb
hlt
xor
adc
shr
xchg
test
jmp
jp
call
retf
or
jb
inc
xor
adc
jae
inc
rol
lods
dec
aaa
push
sbb
sbb
dec
xlat
inc
ret
adc
aam
mov
inc
(bad)
loopne
mov
inc
or
pcmpgtb
(bad)
call
mov
push
shl
xor
mov
adc
sbb
aas
jnp
and
add
jg
xchg
push
fadd
clc
int
pop
mov
and
call
dec
jno
outs
or
adc
sub
and
out
adc
or
dec
and
add
lock
xchg
in
and
or
add
movs
or
(bad)
jns
(bad)
sbb
dec
leave
cld
loopne
xor
add
mov
add
or
loope
add
xlat
push
ja
xchg
push
adc
cs
inc
push
and
stc
jl
add
pop
xor
push
xchg
lock
inc
bound
adc
pop
sub
gs
dec
xor
push
int3
pop
int3
dec
inc
adc
test
mov
mov
adc
mov
mov
loopne
ins
add
loopne
pop
adc
loope
pop
or
fst
pop
daa
lods
or
fild
das
or
in
jg
or
xor
sub
stc
fistp
add
add
dec
or
mov
lods
or
inc
mov
jbe
ss
mov
adc
mov
sbb
add
sbb
pop
cmp
xchg
pop
mov
cmp
movs
sub
pop
or
or
cmp
mov
sbb
movs
lea
aad
aaa
sub
push
add
jo
cdq
sbb
push
jecxz
pop
adc
push
ins
repnz
pop
mov
scas
loopne
movs
xor
out
int
rol
xchg
or
sbb
popa
popf
pop
clc
stos
dec
sbb
pop
call
push
adc
fldcw
adc
or
int3
xor
js
mov
or
leave
adc
jo
pop
sar
or
sub
lds
sbb
scas
movs
or
xchg
scas
xchg
xor
ror
test
(bad)
mov
inc
push
adc
arpl
sbb
or
sbb
adc
add
pop
push
mov
dec
adc
mov
cli
push
js
lock
les
or
or
ror
jno
cli
stos
aas
or
pushf
scas
push
adc
push
sbb
dec
sbb
jb
pop
pusha
pop
stos
push
add
fbld
push
jne
retf
and
push
xor
jo
pop
rcl
loopne
pop
repz
push
pop
cmp
xor
sar
xlat
ins
in
jno
lods
retf
mov
int3
fisttp
ins
xchg
add
xchg
pop
xor
add
icebp
push
nop
xor
sar
aas
add
ins
test
scas
add
add
or
add
sub
rcl
dec
sub
inc
pop
cmp
mov
retf
inc
xchg
out
or
dec
stos
ret
push
sbb
mov
mov
lock
call
dec
shr
pop
and
and
mov
push
enter
lods
inc
mov
mov
add
dec
scas
inc
test
das
push
adc
(bad)
or
sbb
pop
sbb
cmp
adc
sbb
pop
dec
xchg
or
adc
pop
and
pop
sbb
pop
pop
sub
push
adc
mov
adc
mov
bndstx
ins
xchg
rcl
or
imul
rcl
lods
jg
mov
sub
push
push
or
jns
mov
add
push
add
mov
adc
jecxz
push
or
or
sbb
xchg
jecxz
aaa
mov
pop
or
xor
mov
push
vmaxsd
pop
push
xor
inc
xor
lods
clc
sbb
enter
jno
or
add
push
cld
push
and
sbb
add
add
xlat
pop
or
xor
adc
jo
sbb
and
popa
cmp
xchg
fadd
push
pop
and
pop
call
aam
mov
jl
rcl
jl
call
(bad)
fsub
scas
dec
pop
or
loopne
add
sub
add
daa
fadd
inc
dec
dec
hlt
cmp
xor
mov
add
xor
sub
and
or
jg
push
adc
loopne
mov
int3
jae
jg
jo
add
popa
push
xor
jg
int
mov
sar
cwde
jo
push
out
rcl
push
repnz
call
and
or
xor
rol
or
mov
loop
sbb
pop
lahf
mul
mov
sti
test
mov
pop
jae
pop
pop
pop
sbb
inc
lds
add
or
movs
sub
pop
shr
dec
jns
xor
addr16
push
sbb
xor
aaa
mov
add
add
add
es
(bad)
out
test
ins
add
mov
mov
add
mov
shl
sbb
jmp
inc
sbb
lahf
or
aad
add
add
shr
das
xchg
jmp
jl
pop
mov
dec
cmp
xor
ret
cmps
jge
push
cmp
xor
push
pusha
outs
in
adc
add
or
fdivr
push
inc
clc
out
lock
test
inc
cld
hlt
add
fimul
add
or
pop
repz
adc
inc
fld
mov
jno
jecxz
nop
dec
sub
retf
iret
inc
xor
push
mov
add
xchg
add
dec
or
add
mov
push
mov
and
out
inc
cmp
add
int3
test
push
or
jl
add
cmp
mov
dec
test
rcl
push
les
rol
jno
cwde
jmp
adc
push
and
aam
mov
nop
pusha
in
push
enter
daa
test
and
das
lea
add
adc
ret
in
sbb
xor
js
or
sbb
int
test
out
inc
sbb
ja
dec
(bad)
jp
inc
push
push
inc
je
mov
dec
test
mov
sti
pop
xchg
or
pop
and
aam
xor
pop
lock
inc
xchg
stc
cmp
push
jecxz
call
add
jecxz
mov
dec
xor
adc
add
and
sar
xor
pop
mov
jo
push
add
test
loopne
or
add
jg
and
add
test
xor
nop
and
lahf
and
(bad)
and
lea
add
movs
push
add
or
pop
rol
xchg
dec
clc
lahf
nop
cmp
lahf
and
xor
outs
jno
scas
xchg
mov
add
test
mov
jecxz
add
xor
aas
jmp
or
inc
fsubr
push
js
jmp
add
and
lahf
sub
call
dec
stos
in
jge
hlt
inc
or
dec
sub
fs
fidiv
and
push
ja
xlat
int3
inc
or
fld
push
jno
and
push
das
xor
in
sub
sbb
call
loopne
or
dec
or
and
adc
ins
or
sbb
ja
add
fs
test
or
inc
lahf
push
add
hlt
cwde
jne
sbb
inc
lahf
mov
in
shr
adc
xchg
or
xchg
rcr
icebp
out
mov
cmps
mov
je
loopne
aam
add
(bad)
inc
push
jg
add
cmp
popa
mov
xor
jo
pop
mov
jl
mov
sub
retf
test
das
add
push
push
xor
jnp
scas
xchg
inc
scas
sub
xchg
retf
xchg
mov
mov
mov
mov
call
cwde
mov
shl
adc
or
push
dec
add
jg
cmps
or
test
and
lock
pop
mov
inc
or
mov
sbb
mov
call
fwait
mov
pop
lock
mov
mov
aam
in
sub
prefetch
or
pop
mov
clc
push
xchg
or
fcom
push
call
dec
jmp
test
lods
test
add
adc
or
and
iret
mov
icebp
mov
aas
les
jo
mov
sbb
test
or
xchg
sub
push
fiadd
scas
xor
push
aas
ins
in
mov
test
add
mov
shl
jge
sub
inc
adc
movs
sbb
clc
out
xchg
(bad)
stos
jns
ds
stos
arpl
dec
or
test
inc
or
sub
loop
jecxz
push
mov
xor
or
or
aaa
sbb
add
(bad)
div
push
sub
add
ds
xor
and
dec
rcl
push
add
add
mov
push
nop/reserved
adc
dec
sub
or
pushf
outs
(bad)
xchg
jb
adc
les
pop
test
mov
mov
div
leave
mov
push
out
rcr
loopne
xlat
push
ret
or
(bad)
pop
aas
inc
je
and
or
xchg
or
cmp
dec
or
jl
or
cld
inc
lods
ret
cmp
sbb
out
push
adc
push
xor
xchg
ins
and
out
(bad)
xor
xchg
push
inc
sbb
xchg
cmp
xor
push
test
inc
xchg
pusha
or
pop
or
adc
mov
retf
pop
ret
push
inc
sti
frstor
pop
xchg
ss
stos
pop
pop
inc
popa
dec
cs
nop
int3
push
pop
push
jbe
push
gs
xchg
daa
aam
loopne
cmc
jae
add
and
push
sub
lahf
dec
rcl
gs
add
add
loope
les
lods
pop
add
lea
retf
mov
dec
aas
cmps
arpl
cmps
jl
les
ins
sbb
and
inc
ds
xchg
daa
test
mov
xchg
push
ja
push
in
push
xor
enter
mov
sbb
xchg
repz
outs
jp
inc
(bad)
lds
mov
sbb
add
aam
jmp
aas
ret
xor
fmul
jge
and
popa
clc
xor
push
mov
xchg
dec
jecxz
lock
les
push
jecxz
sbb
mov
xchg
out
pop
add
or
lock
xlat
stos
mov
cld
sar
aam
add
fnstcw
adc
js
hlt
int3
sbb
aaa
sbb
sbb
sub
retf
and
fld
popa
pusha
sti
sbb
add
jp
add
push
cmp
cmp
test
mov
inc
aam
inc
adc
out
movs
cmp
jbe
gs
les
inc
popa
and
xor
adc
add
dec
and
dec
pop
les
mov
mov
or
push
inc
aas
cmp
mov
fs
lock
fild
jmp
mov
add
test
cmp
lahf
dec
hlt
mov
hlt
div
dec
fwait
hlt
inc
inc
add
dec
inc
dec
pop
hlt
mov
xor
clc
or
dec
or
ret
pusha
arpl
and
jg
int3
sub
xchg
pop
jle
call
dec
xor
lock
mov
nop
sub
or
xchg
mov
jecxz
sub
adc
and
cmp
adc
add
mov
pop
lods
lahf
fst
add
adc
cdq
and
mov
mov
pop
mov
add
xor
loope
outs
mov
loopne
add
and
xor
loop
jb
aaa
inc
dec
adc
inc
add
popa
push
outs
daa
adc
fld
xor
pop
ret
gs
jb
aas
dec
add
call
retf
xchg
pusha
xor
pop
jns
push
sub
push
jmp
jae
loope
xor
pop
cmps
jne
test
fsub
ins
sub
ror
or
xor
and
add
xor
shr
sub
adc
sub
add
inc
test
ins
mov
inc
xor
test
pop
sub
call
mov
loopne
pop
fs
inc
mov
xchg
xor
xor
sub
test
clc
push
jnp
ror
scas
aam
add
pop
jp
adc
adc
jo
aad
mov
das
adc
mov
loopne
cmc
xor
xor
or
xor
sbb
add
test
add
adc
or
nop
pop
inc
sub
add
inc
or
lods
mov
test
fisub
cdq
or
popa
pop
scas
xor
add
mov
sar
push
xor
out
xor
(bad)
adc
xchg
inc
(bad)
pop
or
push
pop
inc
xor
sbb
pop
fwait
dec
fisttp
mov
je
dec
or
jns
mov
xor
test
add
bound
pop
inc
cmp
clc
push
and
cmp
stc
mov
jg
ret
dec
cmp
add
mov
and
ja
xlat
inc
mov
ins
add
mov
jg
mov
mov
push
push
and
dec
or
rcl
add
dec
rcl
mov
icebp
sub
cmc
pop
xchg
add
lods
das
imul
ret
cmp
lods
jne
mov
outs
ret
sub
pop
and
rcr
mov
mov
cmp
inc
hlt
mov
dec
mov
add
loopne
ins
mov
xchg
js
and
or
mov
mov
adc
pop
mov
add
adc
sbb
ds
inc
dec
fistp
push
mov
rol
movs
adc
sbb
jg
dec
pop
inc
mov
adc
mov
inc
dec
inc
leave
clc
sub
jo
add
mov
or
fdivr
mov
adc
(bad)
test
mov
cmp
add
sub
push
add
push
out
mov
iret
jmp
add
dec
pusha
loopne
xor
dec
outs
or
dec
xor
imul
cmp
or
mov
js
xor
add
retf
in
xor
jmp
mov
push
add
and
sbb
push
add
js
push
adc
lock
ret
mov
pop
add
push
adc
ds
xchg
test
ins
push
add
or
clc
mov
adc
mov
ins
test
inc
jae
sub
outs
add
cmp
inc
dec
cmp
adc
and
ret
or
mov
(bad)
pop
adc
sub
adc
xchg
sahf
dec
mov
adc
and
pusha
push
xlat
pop
xchg
or
mov
add
and
mov
pop
mov
jmp
cwde
pop
cwde
loopne
xor
and
xchg
mov
or
adc
jl
dec
pop
xchg
xchg
cmp
test
cmp
pop
aaa
sbb
cmc
stc
movnti
pop
aad
add
add
pop
jg
rcl
sahf
jg
jmp
test
push
lods
dec
imul
mov
movs
push
pop
scas
lods
nop
movs
push
test
xchg
add
push
and
mov
test
cmps
xor
test
jp
(bad)
jg
dec
mov
add
and
mov
leave
pop
hlt
icebp
inc
sbb
mov
pushf
test
or
test
or
shr
inc
mov
cmp
dec
xor
cmp
data16
loop
xchg
pop
ret
push
and
psubusb
and
inc
add
mov
out
or
and
xor
inc
loope
jae
nop
cmp
ss
add
cmp
popa
gs
in
adc
or
and
adc
dec
test
add
push
jno
or
pop
lahf
add
adc
test
xor
fisttp
cld
nop
sbb
jg
add
push
add
mov
cmc
pop
pop
add
adc
cmp
jg
xchg
sbb
fadd
call
adc
and
adc
stc
inc
loope
les
shl
or
sbb
dec
es
and
dec
es
fs
xor
cdq
fs
cmp
inc
cdq
fs
dec
dec
dec
push
fs
dec
es
pop
pop
xchg
dec
es
pusha
fs
ins
jo
add
fs
js
add
mov
cmp
test
mov
xchg
cwde
pushf
add
nop
add
nop
test
mov
nop
add
mov
mov
rol
add
nop
enter
nop
add
aam
fadd
cmp
add
nop
call
add
hlt
clc
cld
or
enter
or
sbb
sbb
enter
enter
sub
sbb
sbb
enter
enter
dec
dec
push
sbb
sbb
enter
enter
push
sbb
enter
inc
test
mov
dec
inc
lea
pop
jecxz
clc
inc
pusha
push
pusha
and
push
rcl
add
mov
fs
stos
mov
ret
gs
jecxz
loopne
nop
cmp
xor
pop
add
loop
nop
ret
jg
and
sub
(bad)
adc
dec
adc
pop
and
add
add
sub
dec
mov
lds
mov
and
push
pop
sub
adc
jecxz
mov
add
cmps
movs
inc
jg
nop
and
mov
add
adc
mov
inc
sbb
xchg
mov
outs
loopne
bound
push
loop
into
push
inc
aaa
fs
push
pop
jo
cmps
and
push
cmp
loopne
test
cmp
fwait
test
pushf
in
sbb
push
push
jecxz
adc
aam
or
xchg
enter
rcr
sbb
mov
and
fcmovnb
cdq
dec
jmp
in
and
jo
or
lock
push
add
inc
inc
shr
adc
mov
sub
loope
cmp
lea
cs
mov
fsubr
cmp
das
dec
or
xchg
sub
xchg
push
sub
das
test
sti
shr
adc
or
or
test
enter
popa
mov
inc
and
or
test
dec
test
call
xchg
dec
xchg
loope
mov
fstp
add
add
add
out
adc
loopne
pop
push
inc
loopne
ror
sbb
(bad)
aam
xor
call
pop
xor
js
inc
(bad)
dec
cmp
dec
and
scas
sbb
aam
push
(bad)
mov
cmp
aas
fcomp
fidivr
inc
mov
inc
adc
and
jo
adc
inc
dec
jg
adc
out
in
xor
xchg
push
xchg
sub
add
sbb
or
xor
sub
push
dec
pop
enter
daa
jg
cmp
sub
and
sub
lock
jns
lea
popf
jmp
mov
dec
in
cmp
pop
cmc
or
jmp
scas
lds
lock
jl
mov
sub
add
pushf
outs
cmp
cs
repnz
cmp
push
sti
cmp
sub
or
or
jb
out
xchg
add
push
sbb
mov
ret
fsubr
cmp
inc
mov
pop
xor
cmp
sub
loop
mov
aas
cmp
addr16
pushf
pop
push
dec
sbb
and
inc
in
adc
sub
aaa
or
sbb
out
adc
add
and
sub
test
mov
or
mov
xchg
xchg
es
mov
cmps
enter
mov
add
aad
aas
jg
xor
xchg
jl
sbb
and
add
add
add
clc
je
or
sbb
fisttp
(bad)
xor
xchg
fcos
and
stos
js
cli
and
push
ret
shl
mov
xchg
add
add
lahf
leave
xor
call
sbb
pushf
imul
inc
and
lods
aad
push
add
arpl
fs
xchg
cmc
clc
test
and
scas
lods
dec
inc
mov
xchg
xchg
pusha
mov
mov
movs
jg
int
test
push
pop
inc
add
popa
mov
aam
adc
pop
and
inc
or
movs
add
pop
adc
push
or
xor
jge
jmp
jmp
xchg
and
inc
rol
sbb
inc
lock
xor
popf
pushf
jmp
mov
push
popa
fbld
mov
and
adc
xor
xor
mov
push
sbb
pop
xor
jo
mov
jne
lahf
scas
add
adc
xchg
lahf
scas
cmp
push
fsubr
jge
pop
xor
mov
and
push
dec
in
mov
lahf
arpl
add
aad
jg
dec
mov
jmp
sbb
or
dec
call
mov
inc
jg
js
add
jle
aas
jb
or
ret
lahf
shl
mov
or
add
xchg
in
xchg
rcl
add
mov
aam
push
test
or
ret
mov
fcomp
in
sbb
push
rol
xchg
push
adc
mov
or
pop
pop
push
outs
xor
jne
push
(bad)
int3
xor
or
and
or
mov
cwde
in
sbb
push
leave
dec
or
sub
dec
in
ret
jbe
jmp
retf
loopne
lock
dec
inc
pusha
dec
mov
xchg
push
daa
push
aaa
xor
movs
sar
mov
or
fcomp
ror
sbb
sbb
or
adc
mov
cmp
ror
pop
mov
or
out
sub
pop
mov
out
mov
jns
aas
add
inc
mov
xchg
lock
xchg
jae
movzx
mov
cmc
push
sbb
adc
sub
pop
mov
jge
cmps
fisttp
pushf
mov
push
pop
sub
jp
xor
and
sbb
sub
sub
mov
adc
jecxz
push
mov
sbb
dec
cmp
xlat
test
cmps
pusha
adc
sub
cmp
aas
push
pop
fs
lods
and
icebp
call
ret
lods
es
sbb
cmp
mov
js
lods
adc
sub
xchg
test
xor
clc
xor
fwait
ins
dec
cmp
pop
mov
and
aam
or
pop
retf
jno
ret
xchg
aam
ja
sbb
mov
push
mov
or
add
test
adc
or
pop
rcr
add
hlt
daa
adc
or
jge
cwde
and
inc
mov
sub
xchg
jns
lds
push
push
enter
in
or
mov
int
test
sub
(bad)
les
ret
out
mov
jne
push
cmp
or
(bad)
test
sar
mov
sub
xor
int3
or
lods
mov
sbb
adc
lods
jae
repz
rol
dec
xor
mov
inc
xchg
jmp
push
stos
loop
add
outs
mov
(bad)
loopne
psraw
and
adc
or
add
pusha
(bad)
mov
xchg
hlt
adc
pop
dec
or
mov
int
mov
mov
fcmovnbe
xor
push
ret
cwde
cmp
and
int3
ss
fnstsw
sbb
cmp
sbb
cmp
push
inc
jo
sub
addr16
cmp
adc
scas
daa
or
inc
dec
es
or
popf
enter
and
mov
add
or
xor
shl
sub
mov
sub
(bad)
lods
or
jl
enter
ins
xchg
push
mov
dec
mov
in
call
cmp
pop
inc
or
imul
sbb
jl
jp
retf
and
jmp
and
sub
call
sbb
in
rol
xchg
int3
push
movs
loopne
and
cmp
push
fstp
mov
xor
lods
pop
test
inc
adc
inc
cmp
les
pop
jecxz
mov
cmps
sub
es
int3
pop
mov
or
cmp
xchg
and
mov
pusha
inc
pop
ins
test
icebp
cmp
add
and
sub
adc
cdq
movs
aad
ret
idiv
ins
clc
sbb
cmps
mov
ret
retf
enter
cld
push
adc
imul
inc
push
addr16
add
or
or
and
lock
lock
xchg
add
inc
loop
inc
push
add
mov
xor
add
xor
or
rcl
test
pop
push
xchg
fisttp
rcr
and
mov
xchg
mov
in
sub
cmp
xor
pop
inc
das
sub
ret
loope
push
mov
test
mov
sub
xor
jne
jmp
shl
jo
dec
cmp
pop
or
dec
and
xor
jno
test
xor
mov
les
or
(bad)
pop
xor
mov
pusha
dec
jmp
or
std
adc
in
jmp
sar
push
pop
jg
cmp
dec
fadd
clc
ret
pop
sbb
pop
ror
movs
xlat
jnp
push
pop
xadd
les
xlat
mov
pushf
les
jo
adc
rol
stos
mov
lea
fmul
adc
shl
test
mov
std
aad
and
pop
fs
sti
or
jns
add
les
pop
(bad)
loopne
inc
mov
ret
push
in
or
jmp
adc
xchg
dec
outs
adc
rcr
lock
imul
jnp
imul
and
dec
(bad)
shl
cmp
shl
fld
xor
loope
fwait
stos
push
add
or
cmp
and
mov
push
sar
rcr
nop
pop
rcr
add
inc
retf
or
and
imul
xchg
aam
pop
or
add
dec
cmp
pusha
mov
(bad)
sbb
add
jmp
and
push
ror
push
mov
push
pop
xor
aaa
retf
fst
in
clc
rcl
push
push
sbb
out
lods
fmul
dec
lock
push
arpl
mov
push
mov
push
inc
cmp
pop
mov
xchg
aas
rcl
sbb
shr
jg
out
or
dec
cmps
scas
loopne
or
or
outs
xchg
adc
test
adc
bound
ins
test
and
or
dec
dec
adc
mov
(bad)
jmp
mov
mov
and
sub
in
xchg
pusha
add
test
xchg
test
adc
jne
pop
or
add
fadd
rol
or
mov
pop
xor
gs
movs
jo
out
enter
or
add
cmp
mov
xor
jmp
push
push
sbb
retf
jge
and
fst
adc
mov
cmp
jno
popa
(bad)
pop
call
adc
lods
or
arpl
ja
and
jg
push
xchg
adc
test
push
adc
adc
stc
ins
sbb
shr
and
and
inc
test
jge
xchg
mov
push
mov
sub
popa
add
cmp
sub
add
fbstp
jmp
mov
dec
pop
add
jge
mov
add
int
nop
xlat
pusha
aas
sub
and
shl
or
sub
pop
push
aas
jo
lds
and
pop
or
mov
sahf
inc
xor
pop
sub
cmp
mov
inc
inc
adc
and
dec
dec
mov
add
inc
bound
add
cmp
test
and
imul
jne
dec
sbb
lods
stos
sub
sbb
aam
pushf
or
in
or
or
sub
in
adc
xchg
jno
push
(bad)
out
mov
cwde
add
stc
aam
loopne
(bad)
jmp
add
push
les
mov
adc
jmp
ret
xchg
test
jmp
jns
das
pop
mov
push
xor
lahf
xor
mov
mov
xor
movups
inc
cmps
inc
mov
jmp
dec
call
and
inc
cli
les
jge
js
xchg
test
aaa
test
ins
xor
cmp
or
and
dec
dec
stc
push
jmp
rcr
pop
jge
mov
mov
adc
xor
sbb
push
clc
sahf
xchg
mov
push
sub
cmps
and
push
or
mov
psrad
push
pop
inc
lock
(bad)
fdiv
mov
push
sti
int3
push
lods
pop
fs
fistp
jae
push
inc
sub
rcr
xor
sbb
sti
test
jnp
popa
cmp
dec
in
jae
mov
push
outs
and
dec
sbb
adc
dec
test
xor
push
adc
dec
fwait
sbb
cmps
mov
cmp
movs
push
rol
les
xchg
movs
lock
push
mov
adc
and
pop
and
sbb
fs
lahf
ror
cwde
xor
sbb
sar
mov
xor
dec
dec
or
icebp
sti
push
jecxz
pop
cdq
push
mov
lea
sub
inc
jae
stos
imul
jbe
jge
xlat
ret
shr
xor
shl
cmp
mov
inc
cmps
jo
icebp
cmp
mov
mov
sbb
mov
xor
arpl
push
out
sub
les
(bad)
lock
ret
sbb
gs
movzx
cmp
ins
fdivr
enter
xor
sbb
pop
aam
aas
and
mov
cmps
shl
adc
repnz
push
cdq
ror
xor
(bad)
call
mov
sub
mov
test
xchg
and
xchg
call
pop
shl
sahf
gs
ss
jecxz
add
push
stc
cmp
adc
clc
dec
dec
mov
in
mov
jmp
push
inc
inc
xchg
adc
rol
inc
jle
push
xor
or
cmp
ret
and
jno
sti
add
add
cmps
pop
(bad)
push
aad
cmp
mov
sub
xchg
ins
pop
dec
xor
cs
repz
jne
pxor
mov
xor
jecxz
adc
or
dec
cmp
(bad)
sbb
mov
aad
inc
cmp
xor
je
ss
shl
fisubr
cvttps2pi
stc
xchg
cmp
jg
enter
or
push
cmp
cmp
and
test
iret
pop
mov
stos
test
adc
inc
stos
and
inc
dec
ret
hlt
and
xor
jl
cmp
add
or
(bad)
fs
fdiv
test
jne
sub
sbb
stc
leave
rol
sub
sbb
inc
pop
or
inc
xchg
push
fcomp
cmp
inc
test
and
or
pop
sub
inc
lea
inc
stos
xor
xor
enter
mov
and
sub
add
xor
xor
adc
or
add
lea
mov
and
adc
lds
jo
rol
test
ret
test
inc
mov
call
es
adc
call
lock
add
or
add
pop
sub
mov
bound
ret
jp
sbb
rcr
enter
cmc
mov
lea
add
mov
pop
add
lahf
into
and
jbe
push
adc
adc
inc
dec
and
dec
pusha
cmp
sub
ja
icebp
push
sbb
out
xor
(bad)
mov
mov
xchg
xor
dec
(bad)
scas
mov
and
nop
sub
arpl
and
or
add
dec
cmp
sub
sub
jge
ficom
add
aas
mov
adc
adc
leave
or
int
cmp
xlat
adc
or
sbb
or
adc
adc
sub
dec
mov
jno
fsubr
cwde
sar
jecxz
dec
sub
je
sub
rcl
je
movs
movs
adc
ret
adc
popf
dec
cld
out
mov
dec
test
add
pop
adc
inc
or
les
push
cmp
add
inc
clc
pop
or
sub
or
inc
push
cmps
ja
mov
jl
adc
js
rol
shl
xor
movs
push
inc
push
movs
add
cli
sub
add
push
adc
adc
outs
retf
mov
and
xchg
shl
outs
sbb
xor
sub
loope
jmp
push
outs
mov
nop
loope
loopne
dec
daa
add
and
adc
inc
inc
mov
mov
xchg
pop
aas
mov
lods
jbe
push
mov
dec
mov
add
movs
in
pop
gs
(bad)
hlt
and
(bad)
mov
jg
pop
(bad)
push
fadd
inc
hlt
push
add
push
add
mov
test
mov
loope
cmp
jae
fs
test
adc
mov
and
fisttp
cmp
add
rcr
sbb
or
adc
inc
mov
sbb
and
cmps
stos
xchg
pop
aad
lock
(bad)
push
xor
mov
or
add
jo
lock
mov
mov
loope
or
clc
pop
mov
rol
jecxz
add
xlat
add
mov
cmp
mov
mov
sbb
push
pushaw
sar
sti
add
sub
test
dec
lock
mov
mov
add
jns
sbb
or
mov
or
adc
add
jp
movs
mov
sub
add
jno
mov
push
or
inc
ret
rdpmc
add
ret
inc
cmp
add
sub
nop
ret
adc
jp
sub
push
pop
enter
shr
inc
movs
sbb
pop
mov
mov
je
mov
ret
and
mov
cmp
add
lds
push
xor
inc
and
loopne
dec
add
xchg
ficom
loope
imul
clc
dec
xor
xchg
jns
or
add
js
xchg
mov
cmc
or
or
cwde
and
movsx
dec
cwde
sbb
add
rcl
push
push
push
and
dec
sub
daa
jle
sub
inc
jno
mov
pop
xchg
cmp
cld
fwait
cld
dec
fdiv
jmp
(bad)
aad
adc
loope
je
jns
jle
jg
sub
cdq
neg
cdq
push
push
loopne
je
dec
in
xor
or
add
xor
ds
les
das
xor
sub
stc
mov
sbb
mov
lods
adc
and
ret
jnp
and
and
mov
add
cld
(bad)
mov
cld
cld
cld
add
movs
xchg
and
pop
sub
dec
cs
xor
fisttp
push
popf
cwde
loopne
loopne
loopne
and
pop
aas
adc
inc
or
inc
loope
inc
xor
cmp
push
lods
or
dec
sub
test
ja
inc
sub
or
and
pusha
pop
cmp
cmp
inc
(bad)
push
sbb
loopne
and
inc
outs
add
pop
mov
sar
mov
rcl
push
xchg
test
and
jno
jg
pop
pop
push
or
ror
sbb
sub
imul
rcl
ret
fnstsw
out
add
xchg
or
gs
lods
adc
mov
add
ja
loopne
or
in
jmp
and
and
add
rol
mov
xchg
dec
inc
and
adc
cmp
call
cwde
in
loopne
xchg
mov
cdq
loopne
and
or
dec
pop
popf
bnd
push
loopne
loopne
int3
hlt
imul
repz
dec
ins
add
mov
in
loope
stos
popa
int3
adc
fcmovnb
mov
add
lods
clc
or
shl
loopne
pusha
sub
add
test
cmp
cmp
add
xchg
lahf
lea
adc
add
rcr
xchg
cmpxchg
mov
retf
aas
icebp
add
cs
add
shl
push
sbb
adc
mov
add
add
enter
xor
call
xchg
adc
xchg
fidiv
add
jecxz
mov
xchg
mov
icebp
push
jge
lea
sbb
mov
js
es
cmp
ins
sub
adc
or
in
xor
cmp
or
cmp
shr
js
lods
pop
xchg
and
cmc
inc
xchg
push
add
mov
add
sub
xor
ins
cmp
mov
mov
js
leave
les
add
add
cmp
xchg
add
sbb
xor
and
add
stc
dec
stos
ret
jmp
sub
test
mov
ja
push
xchg
movs
add
dec
jmp
pop
mov
cdq
(bad)
lock
xchg
jmp
addr16
lods
movs
test
dec
sub
leave
xlat
xor
mov
mov
ret
adc
push
fcmovnbe
or
xchg
adc
ret
add
stc
cmps
mov
dec
sbb
jge
(bad)
mov
(bad)
dec
loope
(bad)
rol
dec
jecxz
mov
cmps
jo
mov
lds
mov
xor
push
cmp
add
popf
les
ror
ror
lock
or
shl
aaa
and
inc
push
sub
into
fldcw
vmovntps
pop
or
popa
les
pop
cmp
xchg
xor
ds
ret
pop
lahf
inc
add
cmp
inc
xor
int
push
test
mov
call
xor
mov
or
sub
mov
add
cld
cmps
pop
add
retf
iret
or
dec
push
aaa
push
pop
daa
outs
mov
add
ds
jbe
popa
gs
pop
jo
or
adc
mov
and
mov
out
popa
xchg
icebp
xchg
mov
mov
or
or
popa
jg
inc
push
cmps
add
bound
or
adc
xchg
aad
or
push
aaa
imul
shl
test
push
popa
xchg
xor
add
sub
jnp
lds
nop
outs
das
nop
mov
mov
push
call
rcr
arpl
mov
sub
push
mov
cmps
mov
and
shr
mov
in
and
mov
call
js
int
gs
dec
or
or
retf
mov
jmp
loopne
adc
(bad)
xor
mov
pop
mov
adc
lock
movs
pop
sub
mov
adc
push
jp
rcr
adc
fs
stc
push
shr
inc
xor
xor
sbb
mov
rol
and
push
or
cmp
cmp
jo
les
or
dec
lea
lahf
adc
cmp
fsubr
cmps
mov
out
mov
ins
add
dec
ins
pop
mov
imul
and
sbb
ss
cmp
inc
inc
cmp
mov
add
js
test
popf
or
mov
dec
jne
add
xor
sub
xor
mov
fwait
adc
rcl
adc
add
and
sub
repz
jne
aad
mov
loope
ins
ret
mov
push
lea
pop
add
or
pop
jl
nop
fwait
nop
out
rcr
ja
jmp
(bad)
lods
inc
sbb
or
add
sbb
push
fwait
(bad)
dec
lahf
pop
add
jge
add
add
enter
inc
mov
nop
js
dec
add
repnz
sub
and
sahf
and
sub
xor
or
fsubr
test
(bad)
xchg
loop
add
push
sbb
inc
inc
pop
jl
loopne
xchg
xchg
ja
aam
loop
lea
or
dec
mov
push
out
test
jbe
call
pop
dec
mov
test
ss
and
movs
jl
cmp
scas
xor
sub
or
adc
mov
adc
xchg
add
ins
inc
bswap
or
xor
sahf
out
fld
pause
push
fwait
cmps
mov
dec
or
add
cs
adc
adc
dec
push
inc
aad
add
(bad)
and
ret
rcr
adc
sar
sub
out
and
hlt
sub
adc
push
not
ins
sbb
in
or
test
loope
adc
pop
fs
call
lea
sub
mov
shr
jmp
jp
xchg
test
adc
or
loope
xchg
push
adc
clc
ror
lea
lahf
inc
adc
js
pop
ja
test
movs
das
or
pop
in
jb
mov
imul
loopne
push
pop
test
addr16
and
xchg
les
mov
dec
xor
xchg
mov
aas
mov
mov
daa
imul
cdq
fdiv
mov
inc
mov
arpl
mov
adc
cdq
nop
arpl
ins
rcl
dec
enter
mov
and
xor
jns
fstp
es
fdivr
fisttp
mov
fs
sbb
test
call
js
sub
les
mov
sub
mov
dec
dec
neg
jmp
pop
inc
nop
adc
push
sbb
xor
or
sbb
test
lea
fnstcw
test
mov
sahf
out
cwde
data16
pop
cs
jnp
pusha
xchg
inc
icebp
push
int3
les
push
jns
push
jb
fild
or
add
push
pop
push
ss
or
or
xor
add
lods
(bad)
leave
inc
xor
movs
add
sbb
lea
jge
clc
dec
rcr
mov
dec
xchg
icebp
pop
cmp
call
call
dec
dec
ret
mov
cmp
scas
(bad)
mov
xchg
cld
cmp
call
cmc
push
pop
ret
sub
popa
int3
test
test
mov
pop
mov
adc
lock
adc
ret
dec
or
push
call
add
and
mov
push
cwde
or
push
jne
and
and
bound
mov
retf
push
or
sub
and
popa
mov
lea
inc
push
inc
jmp
adc
push
adc
lea
add
ret
push
cmc
push
rcl
std
(bad)
pop
cmp
cmp
push
push
bound
sub
adc
inc
xor
cld
aaa
cmp
popa
mov
dec
inc
add
sti
fwait
push
xchg
push
imul
adc
push
xchg
rol
in
adc
or
add
adc
ret
lahf
mov
lds
shr
lahf
adc
mov
sbb
adc
rcr
adc
pop
in
mov
shr
sbb
dec
adc
ret
ins
dec
or
inc
add
xor
mov
and
xor
lods
mov
jne
dec
dec
cmp
sub
lock
inc
loope
icebp
pop
or
aas
xchg
js
jl
jne
loop
jge
pushf
mov
enter
les
adc
js
adc
add
push
mov
or
or
fcom
cmp
or
nop
xchg
call
loopne
and
daa
fs
mov
push
push
cdq
mov
xchg
dec
loope
stos
ret
mov
push
aam
sub
or
pop
rol
adc
loope
push
loopne
enter
jbe
push
iret
mov
loopne
fimul
xchg
loop
mov
xor
pop
daa
in
adc
aaa
test
mov
add
and
cmp
jne
jg
test
adc
pop
int3
add
mov
ja
or
adc
sub
std
mov
adc
je
or
test
jmp
cmp
je
or
sub
add
or
inc
push
shl
loop
and
(bad)
pextrw
nop
mov
clc
dec
aaa
mov
add
inc
jge
js
dec
in
xor
add
rcl
jo
in
push
and
js
inc
xor
fstp
daa
push
cmp
ins
push
or
int3
test
xchg
dec
fld
add
ror
out
pop
nop
dec
mul
and
dec
mov
test
sbb
cmc
xchg
add
loope
jmp
or
jecxz
and
adc
cdq
imul
mov
imul
push
das
rol
fst
jg
adc
cdq
aad
hlt
push
push
cld
pop
pop
and
test
sar
pop
sbb
or
mov
pushf
sub
and
je
pop
adc
lods
jae
add
jl
or
popa
mov
xor
dec
adc
adc
pop
rol
add
inc
or
aas
lods
or
pop
mov
adc
ins
mov
xchg
les
pop
aas
add
xchg
jecxz
jecxz
or
loop
pop
adc
jg
mov
pop
or
ret
add
push
sbb
add
inc
jnp
adc
push
sar
jnp
mov
sbb
adc
xchg
xchg
imul
mov
xor
or
inc
push
ret
cdq
sbb
adc
add
push
and
cmp
and
mov
add
adc
inc
jg
mov
add
jno
popa
nop
add
inc
cmps
loope
or
stos
sbb
ret
xor
daa
loop
adc
lds
dec
adc
mov
loope
je
sbb
inc
popa
inc
mov
xchg
hlt
or
pop
xchg
ins
sub
imul
sbb
and
les
jne
ret
(bad)
sub
mov
test
xchg
sub
xor
xor
in
sub
inc
jo
dec
in
daa
stc
jbe
adc
push
or
in
popa
or
sub
aas
pop
cmp
push
push
mov
call
adc
test
cmp
jl
adc
sub
push
cmps
and
fucomi
and
xchg
ret
push
inc
lds
push
pop
push
mov
cmp
cmp
jnp
popa
jno
xor
push
cmp
sub
push
mov
push
xchg
dec
push
mov
cwde
clc
es
loope
ss
test
iret
push
cmp
cmp
lods
sub
inc
loopne
pushf
movs
mov
and
adc
sub
ins
cmp
adc
test
push
mov
dec
inc
dec
lahf
push
rol
add
(bad)
rcr
and
arpl
nop
xchg
dec
mov
add
int
push
sahf
or
jo
cmp
adc
adc
or
add
mov
push
cmp
das
adc
rcl
xchg
inc
shr
push
xor
xchg
js
sbb
jg
imul
jnp
and
push
pop
dec
and
add
adc
addr16
add
push
adc
xor
dec
mov
sub
ins
adc
cmp
fild
adc
rol
or
fcom
mov
fst
mov
adc
cmp
add
adc
add
jmp
js
popf
cmps
jno
out
push
fcomp
adc
mov
mov
bound
sub
adc
jb
inc
aaa
popf
lock
or
push
jg
clc
sti
packssdw
mov
add
fist
das
test
add
test
jecxz
arpl
sbb
and
add
xlat
aaa
xor
pop
xchg
cmp
push
push
sub
mov
call
sub
and
push
xchg
fild
mov
cmp
jne
inc
stos
mov
add
rcl
push
hlt
jae
test
sbb
ror
pop
sbb
xor
aam
rol
mov
mov
adc
dec
sub
call
dec
sub
sub
inc
ror
jnp
jge
lds
adc
inc
add
push
xor
dec
dec
inc
jno
jge
imul
or
add
outs
xor
sub
ss
sub
jns
add
cvtps2pi
or
and
loopne
arpl
imul
xchg
arpl
sbb
nop
daa
jmp
pop
pusha
mov
xor
dec
arpl
sub
xchg
or
add
outs
nop
or
jecxz
jnp
xor
adc
inc
sub
ror
dec
push
jnp
rcr
loopne
push
fbld
sti
mov
dec
or
ins
xor
add
push
xchg
jnp
sub
jge
push
in
push
xor
arpl
inc
inc
push
push
jae
inc
lock
test
xor
ret
xchg
lods
mov
lsl
lock
sub
xchg
push
sub
mov
cmps
cld
jmp
scas
mov
cmps
sub
push
and
add
sub
or
in
imul
or
loope
and
and
push
or
inc
xor
sub
je
retf
scas
jp
mov
bound
in
das
inc
xor
dec
sub
adc
clc
or
dec
dec
imul
and
adc
cmp
icebp
inc
ret
dec
jmp
xor
inc
sub
(bad)
dec
sub
adc
mov
push
cmp
lods
mov
jnp
push
jg
jmp
fisttp
push
push
inc
add
and
sub
jae
mov
sub
nop
mov
jge
add
in
pop
stos
loop
cld
lods
xchg
cmp
push
popa
inc
xchg
mov
push
or
hlt
mov
xlat
xchg
xchg
les
aaa
jns
adc
sbb
shr
pop
in
pop
add
xchg
mov
and
lahf
pop
adc
dec
or
jmp
hlt
adc
push
in
icebp
pop
(bad)
arpl
jae
pop
shl
inc
cdq
sub
cmp
iret
cmp
jecxz
mov
nop
mov
pushf
dec
pop
ins
mov
add
push
mov
cmp
adc
dec
adc
test
aam
retf
pop
xor
mov
add
clc
fbstp
cmps
shl
clc
jmp
jmp
mov
adc
sub
les
sbb
xor
mov
push
in
and
push
std
sub
inc
pop
mov
les
inc
jge
add
clc
push
sub
or
push
rcl
push
dec
cmp
and
hlt
bound
dec
sub
nop
paddb
dec
sar
outs
jg
mov
and
add
das
pop
xchg
adc
add
add
push
ja
mov
cmp
mov
or
or
cwde
aas
mov
cmp
jne
sub
loopne
add
iret
jnp
inc
jnp
sub
cmp
test
add
push
rol
call
adc
jmp
and
mov
add
lahf
or
cs
add
test
jmp
lahf
inc
scas
inc
scas
aaa
ds
or
daa
nop
inc
adc
adc
ss
js
jno
fild
jo
(bad)
push
push
add
sbb
dec
xor
fwait
adc
push
ins
cmp
xchg
mov
push
push
cs
lea
(bad)
daa
pop
push
iret
mov
pop
or
popf
rcr
or
or
bound
and
jge
xchg
sbb
mov
rcl
ret
add
xor
aas
sbb
je
adc
test
add
lahf
xor
fld
push
mov
rol
dec
mov
movs
jecxz
and
mov
adc
test
and
xor
adc
or
or
inc
dec
push
xor
sub
pop
push
cmp
jo
jg
jg
stos
mov
mov
push
mov
hlt
xor
sub
pop
loope
sbb
xor
lods
cwde
xchg
add
sbb
sub
sub
adc
in
adc
loopne
pop
jo
inc
or
pop
cmp
adc
sbb
cmp
mov
cwde
mov
enter
sbb
or
and
mov
push
push
push
aas
inc
mov
leave
xor
mov
clts
cmp
stos
xor
lea
push
sbb
std
inc
push
and
sbb
movs
inc
push
lock
cld
push
nop
std
push
mov
ja
(bad)
and
inc
in
or
sub
test
cmp
imul
cmps
call
cmp
cmp
jge
or
add
or
scas
and
push
push
jns
cmp
inc
cmp
push
or
dec
cmps
mov
sbb
add
and
and
rcl
push
movs
sbb
xchg
ret
loope
jmp
add
push
xlat
or
sbb
adc
add
inc
add
aas
in
inc
add
jae
pusha
cwde
in
or
call
xchg
push
or
jle
push
es
pop
jg
scas
sbb
push
or
loope
(bad)
or
sub
inc
and
adc
mov
pop
xor
xchg
call
xchg
rcl
or
arpl
mov
sub
aas
push
or
test
and
xor
xor
fsubr
adc
sbb
dec
mov
sbb
mov
shr
push
cmp
aas
mov
rcr
or
sbb
iret
out
imul
cmp
dec
adc
or
adc
and
cs
push
sbb
sbb
push
xor
daa
cmp
jo
add
imul
add
dec
icebp
push
and
fist
cmp
xchg
jg
js
xor
adc
push
int
push
jecxz
lea
sbb
push
or
adc
pushf
test
xchg
and
scas
sbb
movs
mov
sbb
add
adc
and
in
aam
sub
out
lahf
xor
push
xor
cmp
iret
xchg
pop
xor
pop
sub
lds
enter
ret
or
cdq
outs
add
or
ret
aad
or
xor
movs
push
push
clc
xor
xchg
movs
aad
ins
xor
test
and
xor
jg
inc
icebp
pop
or
and
or
or
add
adc
test
xlat
push
out
outs
inc
(bad)
fst
mov
xchg
lods
test
adc
or
test
push
xchg
cmps
mov
add
iret
sbb
and
dec
jbe
or
fwait
sbb
arpl
xor
movs
jbe
pop
dec
pop
add
nop
pop
fisub
adc
pop
and
adc
dec
js
(bad)
inc
or
xchg
xchg
test
xor
lock
or
aad
popf
or
xchg
mov
cmp
or
mov
adc
mov
loopne
movlhps
or
mov
mov
jb
add
dec
mov
inc
sbb
mov
inc
sub
sbb
imul
prefetcht1
cmp
add
or
pop
rol
mov
bswap
xor
mov
add
mov
xchg
loop
scas
pop
push
or
mov
inc
rol
jle
jmp
pop
xchg
dec
je
dec
in
mov
sgdtd
fucomip
push
mov
repnz
push
imul
cmc
sub
lock
fsubr
cmps
lahf
or
mov
xchg
mov
sbb
mov
add
stos
inc
mov
adc
aad
lds
test
xchg
scas
and
xlat
test
inc
gs
pop
or
sub
cmps
(bad)
cld
(bad)
and
or
add
push
inc
shl
or
xchg
or
push
dec
xor
push
push
sbb
pop
pop
mov
or
inc
mov
outs
mov
pop
dec
sub
sbb
xchg
ins
pop
mov
daa
(bad)
or
add
add
sbb
imul
add
or
dec
sar
loope
enter
add
cmp
dec
pop
addr16
addr16
in
adc
push
enter
adc
mov
pop
sub
inc
pop
sbb
add
xor
sbb
xor
in
jb
push
shr
inc
or
test
(bad)
xchg
or
sbb
ret
sub
fmul
adc
mov
pop
mov
add
cmp
push
lock
inc
jp
inc
and
shr
push
inc
scas
or
mov
lods
adc
shr
xchg
sbb
mov
push
mov
adc
lahf
lahf
push
add
rcl
cld
or
es
or
inc
les
inc
or
mov
leave
inc
mov
dec
mov
in
mov
ret
jg
mov
pop
rcr
test
pop
icebp
inc
push
dec
adc
adc
add
cmovb
aaa
pushf
adc
pusha
(bad)
imul
sysenter
lds
pusha
xchg
adc
cmp
pop
jb
pop
shl
or
std
pop
pop
or
stos
add
cmp
lods
fnclex
pop
dec
cmp
and
xor
or
sbb
cmp
aas
shl
cld
push
adc
cmp
jns
mov
sar
movs
lea
pop
test
adc
mov
or
add
cmps
movs
add
adc
sub
lahf
mov
and
cmpps
jne
fmul
fld
adc
sub
sbb
(bad)
sub
sub
push
mov
mov
add
xchg
or
push
and
add
je
inc
fdivr
je
dec
add
mov
out
rcl
push
jl
pop
or
lods
(bad)
call
add
push
clc
push
mov
and
push
ficom
pop
jge
scas
push
retf
push
cdq
cli
mov
inc
loopne
test
add
inc
(bad)
or
push
or
pushf
shl
mov
aad
stos
paddsb
cmp
jmp
push
add
adc
inc
jmp
inc
or
jo
and
add
mov
mov
in
push
or
add
inc
or
nop
push
xor
or
sub
test
xor
sbb
mov
mov
or
aam
cwde
inc
cmps
xchg
sbb
and
scas
xchg
mov
xchg
xor
gs
lods
aad
popf
ds
cdq
ret
inc
aas
or
fadd
ds
sub
push
inc
add
arpl
add
cmp
jge
cdq
sbb
and
inc
lods
push
adc
and
(bad)
and
dec
test
adc
fstp
mov
adc
and
and
dec
xor
or
cmps
ins
movs
inc
ja
pop
add
push
ror
in
xchg
pushf
fcom
and
adc
(bad)
jmp
mov
adc
les
inc
rol
xor
sub
lock
aaa
xor
sbb
mov
in
jbe
popa
dec
in
in
out
adc
or
push
sbb
add
mov
enter
xchg
and
add
inc
sbb
add
dec
add
mov
mov
fucomp
pop
retf
add
lea
nop
fstp
adc
and
addr16
dec
jge
lea
clc
or
adc
add
sbb
adc
and
ins
test
and
hlt
jmp
pop
sbb
dec
test
push
or
jbe
pop
add
ins
jbe
or
xor
add
add
pop
pop
adc
mov
dec
pop
cmp
ins
imul
adc
add
dec
xchg
popf
mov
push
cmp
adc
mov
mov
js
add
pop
pusha
aam
push
(bad)
jns
dec
sub
sub
int
cmps
cmova
scas
jbe
rcl
add
cmc
ret
(bad)
mov
add
sub
inc
cld
jb
jo
pop
push
pop
mov
cmps
add
and
and
scas
inc
ret
or
xchg
ret
sub
cmc
xor
mov
mov
enter
fild
adc
clc
and
add
push
add
imul
sub
adc
and
jo
cmps
or
dec
lea
or
inc
lock
dec
pop
sub
push
add
inc
inc
adc
inc
sub
(bad)
imul
jl
add
rol
inc
or
or
pusha
(bad)
cmp
jmp
pusha
push
pushf
inc
arpl
push
ret
cld
leave
xor
push
nop
fisttp
pop
pop
add
or
test
call
sbb
adc
mov
jno
hlt
push
loope
lahf
dec
clc
jg
add
sub
aas
push
sbb
je
sbb
mov
sbb
aas
ja
(bad)
sub
adc
pop
xor
and
add
lods
lahf
aaa
cdq
push
push
fisttp
inc
lock
push
lods
adc
adc
in
fxch
add
add
push
mov
mov
pop
cdq
aas
(bad)
and
(bad)
fcomp
(bad)
xor
mov
test
inc
ret
scas
ror
mov
jno
(bad)
rcr
or
ret
inc
sbb
jg
je
fwait
rol
shr
push
lea
dec
ret
arpl
push
add
mov
outs
in
inc
popa
dec
arpl
push
loopne
mov
add
fild
inc
int
and
pop
and
inc
push
das
or
push
xor
mov
mov
and
inc
je
sbb
xchg
sub
add
push
repz
dec
and
test
pop
cs
jmp
and
xchg
mov
jb
add
sbb
movs
fisub
pusha
leave
mov
outs
ret
adc
int
push
mov
fisttp
inc
fist
ins
push
ret
xchg
fcmovnb
adc
adc
cmps
xchg
ror
arpl
dec
test
mov
xchg
(bad)
mov
cmc
or
push
lods
and
jmp
sub
push
shl
ret
sub
cmp
add
loope
inc
dec
sbb
ja
jp
mov
imul
sub
scas
and
add
call
fdivr
sub
adc
inc
jmp
(bad)
cmp
adc
or
sub
jbe
mov
retf
pop
mov
adc
inc
adc
and
daa
add
jge
imul
inc
(bad)
loope
xor
xor
loopne
xor
cs
cmp
adc
dec
add
inc
in
push
pop
push
pop
xor
pop
ret
inc
dec
fcomp
add
test
int3
inc
popa
dec
dec
popa
push
add
add
popa
call
(bad)
sbb
sub
push
popa
add
sub
mov
icebp
inc
test
add
adc
push
mov
jecxz
inc
inc
rcl
out
adc
lea
mov
adc
xor
ret
pop
movs
arpl
cli
push
lods
cwde
daa
xchg
add
xor
or
add
sub
add
jmp
add
or
push
xor
cmps
pop
dec
clc
pop
jno
xchg
sbb
ret
call
pop
loope
or
jb
ret
fcomp
cs
jns
shl
add
add
mov
push
adc
pop
inc
lahf
mov
test
mov
stos
lods
cmps
mov
inc
cs
mov
pop
dec
jg
sar
lds
pop
sub
or
lods
adc
add
and
adc
inc
add
ror
call
mov
popf
add
inc
and
lock
fiadd
mov
sub
inc
jnp
lods
mov
xchg
jge
mov
pop
xchg
mov
test
pusha
(bad)
pop
stos
div
or
outs
aas
(bad)
adc
push
leave
mov
inc
or
and
add
xchg
dec
(bad)
sbb
daa
cwde
dec
xor
cmp
lds
push
add
fist
lds
fadd
or
test
pop
dec
adc
and
sbb
sub
shl
xchg
push
push
out
mov
fcomp
icebp
imul
sub
fcmovnu
push
xor
inc
add
adc
inc
and
test
aam
pop
or
or
mov
pusha
imul
lock
dec
test
add
sub
or
cmp
add
inc
push
ds
adc
mov
fbstp
or
dec
jmp
mov
sub
in
sub
add
out
xchg
rcr
pop
xor
mov
std
rcl
xchg
dec
add
dec
push
cmp
daa
pop
mov
pop
add
adc
dec
scas
jbe
push
daa
add
or
or
push
adc
add
add
or
push
add
add
loop
sbb
dec
or
or
or
or
in
push
mov
adc
scas
dec
add
jmp
add
adc
sbb
add
int3
or
scas
dec
add
fwait
int
sbb
ss
das
or
sub
daa
jmp
or
sbb
or
xor
repz
inc
dec
pop
(bad)
ins
jbe
mov
test
mov
repz
in
clc
scas
add
out
or
and
xor
jns
out
dec
push
pop
data16
out
sahf
jo
test
out
lods
mov
retf
jns
out
call
iret
repz
adc
and
cmp
iret
repz
push
pusha
push
repz
repz
mov
iret
mov
les
mov
cmp
ror
dec
or
add
pop
push
mov
xchg
adc
(bad)
mov
dec
pop
sbb
dec
sbb
sbb
add
and
and
and
jmp
daa
sub
sub
sub
sub
xor
dec
add
imul
xor
xor
ss
or
pop
cmp
cmp
int
mov
ds
adc
inc
imul
mov
or
inc
dec
inc
inc
adc
inc
lds
dec
pop
mov
push
out
mov
out
mov
inc
jmp
movs
ret
sub
fdiv
inc
pusha
pop
mov
int
inc
inc
fwait
pop
mov
pop
repz
scas
xor
ins
movzx
or
jmp
push
push
repz
jp
adc
jbe
push
jne
dec
inc
loopne
sbb
out
fnsave
adc
xchg
xchg
hlt
add
ror
ror
jecxz
mov
add
mov
sar
movs
mov
xchg
inc
pop
and
ror
(bad)
xor
xor
and
or
fwait
pusha
nop
cwde
pop
(bad)
or
and
pop
inc
add
and
xchg
rcl
add
push
sub
pop
adc
or
and
test
loopne
pop
adc
mov
mov
push
mov
or
dec
jmp
stc
loop
add
sub
rol
xor
xor
dec
aaa
jecxz
bound
or
or
das
cmp
dec
adc
cmp
mov
mov
adc
mov
mov
les
cmp
ins
and
jne
dec
dec
(bad)
in
movs
scas
inc
mov
leave
jnp
jp
push
adc
or
das
xchg
fadd
cmps
ins
adc
cdq
(bad)
push
int
(bad)
adc
rcr
jne
and
out
lea
in
and
cmp
pop
cmp
(bad)
ret
dec
test
inc
cwde
sub
enter
push
loopne
aaa
inc
ins
pop
lods
test
jecxz
dec
lock
iret
push
jmp
xor
push
cmp
xchg
jne
mov
mov
shl
pop
add
rcr
fs
call
cmp
sub
jg
rcl
cli
xor
ja
xor
sub
je
test
rcl
mov
pop
sub
jnp
cmp
stc
pop
retf
rol
xchg
cld
mov
mov
adc
lahf
aaa
push
fcomp
(bad)
jns
mov
xchg
inc
sbb
pop
jecxz
mov
push
jecxz
push
xchg
hlt
fwait
inc
popa
push
call
xchg
rol
daa
push
or
mov
xlat
push
movs
aam
inc
inc
dec
ins
stos
push
mov
sbb
lea
rol
out
leave
add
push
or
push
mov
pop
ret
jg
mov
xchg
pop
or
xor
add
mov
xor
adc
add
dec
xor
xchg
mov
dec
int
fcom
inc
dec
retf
or
test
mov
xlat
pop
ins
add
cwde
inc
lahf
mov
aas
imul
cld
push
inc
inc
sub
inc
mov
test
(bad)
je
ror
fld
and
cmp
inc
add
add
adc
cmp
push
movs
add
ficom
push
xor
pop
rol
jo
out
mov
xchg
cmp
fild
and
dec
xor
mov
and
sub
cmp
adc
mov
(bad)
add
sbb
push
mov
call
pop
push
sub
adc
pop
repnz
xor
push
cmp
xchg
popa
popf
mov
and
mov
inc
push
dec
and
cmp
add
leave
inc
pop
xchg
fimul
pop
popf
adc
dec
neg
aaa
test
retf
or
outs
cmp
outs
cmp
pop
aam
mov
pop
push
inc
sbb
les
push
cmps
cli
push
push
xlat
(bad)
pop
stc
rcl
mov
imul
mov
dec
idiv
or
(bad)
imul
pop
jbe
push
leave
xchg
push
add
daa
mov
int3
xchg
jg
jmp
mov
or
jns
je
jo
dec
test
(bad)
mov
pop
imul
jecxz
dec
and
jge
shl
pop
adc
and
mov
add
dec
imul
mov
mov
fistp
xor
shl
or
ins
add
or
adc
or
sub
jno
adc
popa
jmp
or
shl
enter
xchg
xor
cmp
movups
aas
sub
je
fxch
sbb
xor
pop
je
push
je
adc
mov
adc
jns
fcom
ja
or
mov
push
add
mov
test
cld
sbb
sub
pop
add
(bad)
push
jne
mov
outs
add
ins
pop
cmp
pop
(bad)
popf
add
clc
sbb
xor
push
repnz
mov
adc
adc
cdq
hlt
xor
cld
sub
push
push
mov
add
adc
hlt
sbb
mov
or
dec
xor
aad
add
mov
pop
lahf
mov
daa
inc
imul
adc
aas
test
push
push
and
adc
loope
jecxz
imul
shr
cld
shl
or
enter
xchg
inc
arpl
jne
gs
push
mov
(bad)
dec
jo
ret
pop
test
adc
mov
and
cmps
xor
aas
frstor
add
pop
adc
sub
mov
xor
dec
or
inc
sub
(bad)
scas
ins
sbb
dec
jmp
fbld
mov
push
add
cli
or
push
or
or
inc
xor
popa
popa
retf
fisttp
xor
enter
xor
test
sti
pop
and
or
adc
add
inc
inc
nop
(bad)
mov
push
adc
movs
dec
add
pushf
cmp
or
add
inc
sub
jno
push
sbb
inc
cmc
cmp
push
sub
pop
and
cmp
inc
dec
adc
call
leave
add
and
test
les
and
add
adc
jae
nop
and
popa
sbb
add
pop
mov
fbld
jl
push
xor
shl
clc
dec
mov
and
adc
and
jecxz
dec
(bad)
push
or
inc
aam
test
or
jmp
sub
dec
pop
outs
(bad)
aas
jecxz
movs
inc
pop
inc
mov
mov
and
jg
outs
jl
dec
jae
xchg
push
call
adc
mov
sbb
add
cmp
not
mov
adc
adc
inc
or
icebp
inc
adc
push
mov
adc
mov
xor
jnp
mov
loope
mov
dec
push
cmp
adc
hlt
mov
imul
pop
sub
or
aaa
add
mov
sbb
xchg
fcmovnu
cwde
enter
popf
pop
xor
call
xor
iret
inc
cmpps
in
mov
or
ins
loopne
jmp
(bad)
cmp
outs
pop
inc
aaa
test
outs
call
pop
les
jmp
imul
add
popa
lahf
retf
cmp
adc
leave
pushf
dec
push
dec
ror
mov
stos
fild
rol
into
and
pop
leave
mov
sysret
xchg
xchg
push
das
push
mov
pop
vunpckhpd
pop
ret
es
imul
ret
dec
pop
sbb
mov
xchg
and
mov
adc
dec
lea
je
cdq
es
mov
add
jecxz
fistp
xor
(bad)
adc
das
xor
xor
inc
pop
dec
out
inc
pop
mov
push
and
imul
test
repz
mov
je
inc
ss
pop
mov
(bad)
int
xor
push
inc
xor
inc
inc
xor
lods
fwait
jne
cmp
pop
sub
sti
pop
sbb
pop
rcr
je
inc
jmp
sti
nop
int
pop
xor
in
pop
ret
(bad)
(bad)
stos
pop
push
pushf
adc
and
ja
lods
xor
sbb
push
mov
test
add
daa
loope
frstor
sub
push
add
mov
adc
mov
ins
fs
push
push
aam
add
pushf
rol
mov
pop
mov
add
push
inc
pushf
mov
pusha
jne
sbb
sub
or
xor
or
mov
xchg
ins
jno
fs
arpl
add
sbb
mov
cmp
xchg
inc
rol
and
dec
mov
mov
mov
xchg
nop
adc
leave
test
data16
jb
sti
call
push
ja
xchg
int
add
rol
inc
push
mov
and
adc
add
push
jb
sar
cmc
and
lahf
adc
dec
addr16
aaa
lock
or
xor
adc
push
fdiv
add
jbe
sar
or
mov
or
inc
jmp
popa
jns
jo
test
test
xor
in
push
mov
push
sbb
add
dec
xor
mov
xchg
in
or
inc
and
retf
or
inc
pop
loop
adc
adc
inc
retf
enter
iret
and
cwde
bound
adc
clc
js
icebp
popf
pusha
and
mov
fist
mov
or
adc
jecxz
inc
js
int3
ins
test
sar
adc
xchg
adc
jmp
sbb
xchg
lea
xor
cmc
fbstp
cmp
sub
aas
ret
cwde
add
sub
xchg
push
imul
or
lea
leave
sar
cmp
push
cmp
and
jmp
(bad)
xor
mov
xlat
sub
adc
fistp
(bad)
int3
int3
stos
test
or
xor
xor
xchg
rcl
xor
mov
fld
leave
loope
sub
cmc
es
in
imul
pop
lahf
in
dec
movs
cmp
add
lods
pusha
retf
aaa
sbb
lock
addr16
inc
outs
pop
icebp
fistp
lock
cmp
dec
and
fdivr
inc
add
adc
push
sbb
xor
or
and
cmp
cmp
or
adc
xchg
call
xchg
push
fild
cmps
or
inc
or
ins
inc
add
mov
or
or
push
icebp
xchg
xchg
ret
call
fld
loope
test
in
fcmovbe
xchg
cdq
das
dec
rcl
rol
jno
dec
shr
call
dec
in
retf
dec
add
or
push
push
out
push
add
mov
imul
movs
xor
dec
sub
mov
push
push
or
or
adc
push
add
pop
or
dec
add
or
xor
xor
sub
dec
loop
shl
mov
lahf
mov
test
shr
inc
inc
nop
xchg
int
mov
mov
or
mov
cmp
or
dec
jecxz
push
fsubr
jecxz
push
cmp
cdq
test
push
in
rol
mov
push
pop
add
pop
mov
je
or
mov
push
call
push
mov
push
sbb
aad
ror
xchg
xor
sbb
mov
mov
pop
pop
mov
ret
adc
lahf
shl
push
adc
push
sbb
ret
add
push
dec
mov
inc
addr16
out
xlat
pop
add
xor
ja
and
pop
add
or
arpl
push
cld
inc
add
or
xchg
lea
lea
xor
and
test
aaa
dec
fsubr
add
jne
mov
jne
dec
retf
es
fsubr
(bad)
jno
test
fld
dec
mov
loopne
adc
movs
adc
or
jg
push
push
je
push
pusha
retf
ret
imul
mov
jne
sbb
add
int
test
jge
test
or
(bad)
outs
aam
add
add
pop
add
pop
mov
(bad)
and
in
loopne
les
dec
pop
or
sbb
add
and
inc
push
imul
add
test
jnp
cld
fnstsw
and
mov
fs
and
mov
enter
clc
fdiv
push
push
inc
pop
jne
fcmove
dec
add
call
xchg
pop
hlt
adc
push
add
and
les
js
popa
xor
dec
rcl
or
pop
mov
and
test
ds
std
or
jo
(bad)
xor
add
push
and
out
push
rol
or
add
enter
arpl
ret
cmps
bound
imul
add
loope
out
jae
add
xchg
outs
xchg
cmp
mov
xchg
es
and
into
lock
inc
pop
dec
outs
or
sub
inc
arpl
pop
inc
and
aam
nop
adc
cld
xchg
xchg
adc
or
inc
or
movs
dec
sub
cmp
fs
cmp
sub
pop
aam
mov
aaa
xchg
pop
loope
pusha
(bad)
mov
pop
xchg
(bad)
(bad)
jmp
ret
adc
mov
and
(bad)
shl
daa
push
inc
dec
dec
add
pusha
inc
sbb
and
adc
fisubr
test
pop
cmp
movs
stos
mov
add
cmc
loopne
push
sti
cmc
mov
adc
mov
mov
mov
and
(bad)
cmp
mov
sub
sbb
push
repnz
jp
push
aam
popa
popa
jl
mov
imul
or
and
popf
add
sub
popa
mov
mov
inc
adc
push
mov
ja
jmp
add
ds
test
cmp
rcr
dec
rol
mov
mov
inc
mov
mov
sub
pop
ja
cwde
in
nop
cli
mov
pop
cmp
inc
mov
mov
ins
imul
jae
js
adc
fimul
or
aas
frstor
mov
and
pop
and
das
cmps
fimul
xchg
jmp
xor
lods
inc
fisttp
xor
add
push
sbb
pop
sbb
mov
fisttp
pop
cld
dec
stos
test
mov
xor
xchg
mov
leave
pop
std
mov
push
fwait
jmp
outs
fisttp
adc
test
je
arpl
call
jns
scas
popa
xor
ins
mov
add
add
and
dec
jl
adc
add
rol
test
adc
adc
dec
mov
shl
outs
adc
xchg
test
push
(bad)
(bad)
xor
push
adc
push
daa
(bad)
xchg
xor
push
fisubr
push
pop
push
push
xchg
adc
add
call
or
dec
mov
push
repz
pusha
mov
pop
ror
pop
pop
ss
ror
add
ret
xchg
mov
add
movs
push
and
gs
ja
or
sub
rol
cdq
dec
rcr
adc
sbb
dec
ins
push
out
xor
push
add
lods
scas
inc
pusha
and
adc
add
imul
lods
or
jle
push
dec
jmp
cmps
push
lea
loopne
mov
inc
mov
mov
or
jmp
sub
mov
movs
jo
add
push
fimul
dec
sub
add
xor
mov
and
xchg
and
add
adc
adc
push
adc
push
sbb
push
mov
arpl
jmp
adc
mov
add
shr
aas
pusha
jmp
inc
ret
sub
ins
jnp
cmp
sub
das
pusha
or
jecxz
add
data16
jo
(bad)
or
pop
push
adc
pop
add
mov
sub
mov
mul
push
push
pop
imul
xor
loop
inc
(bad)
jnp
xor
push
popa
fistp
cdq
nop
push
bound
dec
inc
push
push
inc
add
and
add
jnp
or
test
sub
or
or
aas
mov
ret
(bad)
push
and
pop
cld
pop
and
ret
cmps
faddp
xor
movs
push
fistp
ret
mov
inc
sbb
inc
mov
lea
(bad)
ins
push
dec
cli
mov
cld
jmp
push
push
and
cdq
mov
je
add
sbb
and
fs
mov
in
in
lods
call
ror
cmp
bound
inc
xor
jecxz
lock
lahf
mov
xor
and
dec
dec
cdq
xchg
mov
pop
mov
pop
ret
mov
adc
sti
les
dec
std
and
movs
sub
popa
sbb
push
shl
push
test
dec
cmp
xchg
js
xor
jne
iret
cmp
je
mov
sub
lahf
imul
inc
dec
add
and
(bad)
pop
imul
loope
cmp
mov
js
add
ss
sub
arpl
push
add
inc
pop
sub
and
sbb
and
xor
(bad)
sbb
mov
popa
fst
add
lock
sbb
dec
add
add
test
fist
add
fnstcw
sub
and
faddp
retf
sub
dec
and
or
cmp
jo
jmp
xor
xor
(bad)
(bad)
gs
xor
inc
test
imul
sub
add
inc
sbb
pop
cmc
rol
ja
aam
adc
shl
push
or
or
bound
imul
hlt
jne
or
adc
xor
inc
loop
adc
or
add
adc
xchg
push
sbb
add
dec
and
shl
vandnps
rol
jb
jg
or
adc
xchg
pop
cmp
and
loopne
mov
sub
pop
pusha
adc
pusha
lahf
aas
push
push
pop
daa
push
inc
pop
cmp
xor
daa
or
test
inc
leave
movs
or
jecxz
sbb
pop
js
adc
sbb
push
push
lahf
jmp
rol
push
mov
ss
pop
mov
in
or
adc
in
in
xchg
mov
shrd
test
pop
inc
cld
fnsave
push
or
aad
cmp
in
dec
push
in
or
adc
pop
sub
cmpxchg
loopne
adc
cmp
movs
stc
mov
push
inc
or
sbb
fmul
sar
mov
sbb
(bad)
sbb
addr16
aas
push
cmp
dec
fcmovbe
push
add
fbstp
dec
cmps
jne
vlddqu
xor
or
fdiv
(bad)
ins
cmp
enter
pop
xchg
(bad)
lock
(bad)
ins
jecxz
push
inc
xor
ror
sub
jno
cmp
out
add
out
cmp
addr16
add
test
or
mov
in
pop
pop
adc
dec
add
cmps
add
hlt
std
adc
add
nop
lock
pop
adc
shl
das
jb
xchg
dec
enter
mov
sub
fld
das
sbb
mov
(bad)
mov
cld
rol
xor
and
test
stos
js
add
movs
lea
out
add
xchg
lock
xchg
and
cmp
aaa
add
enter
mov
jne
cdq
fmul
fwait
or
es
or
cdq
add
add
add
add
pop
lahf
sbb
push
add
jmp
imul
call
add
cwde
sbb
fild
push
or
push
fstp
push
inc
add
rol
(bad)
cmp
cs
mov
mov
push
jnp
dec
dec
daa
jmp
pop
jo
adc
dec
sbb
ror
cmp
daa
inc
movs
ss
push
jmp
fld
out
test
mov
xchg
shr
xchg
mov
mov
movs
hlt
cwde
ret
xchg
xchg
add
int3
sbb
movs
inc
sub
loopne
aam
mov
sbb
mov
jbe
add
jl
add
xor
cmp
sbb
fild
popa
inc
sbb
adc
inc
xchg
ret
cmp
xchg
rcl
stos
xor
push
retf
dec
cld
ja
pop
and
retf
dec
or
aas
and
in
call
or
mov
mov
pop
inc
fistp
push
icebp
and
push
sbb
push
or
push
mov
adc
dec
test
push
jp
or
dec
in
sbb
imul
les
sbb
clc
fbld
popa
test
ds
cmp
and
pop
jo
cmp
jl
cld
cmp
or
push
ret
inc
adc
popa
rcl
sub
dec
clts
lock
sub
sub
add
retf
gs
popf
mov
cmp
mov
mov
adc
fild
xchg
lock
add
adc
cmp
je
and
ins
add
icebp
enter
mov
push
mov
icebp
or
lea
and
adc
sbb
inc
add
std
loopne
or
add
or
sub
test
pop
test
movs
or
adc
sub
enter
imul
movs
(bad)
mov
inc
movs
test
pop
push
je
ret
(bad)
test
lods
xchg
ret
sbb
movs
push
sbb
dec
dec
les
lahf
cmp
int
sbb
test
std
and
in
sub
jmp
pop
inc
les
sbb
(bad)
xor
ret
mov
adc
xchg
add
mov
test
icebp
add
(bad)
mov
push
pusha
or
inc
inc
sbb
pop
dec
retf
js
(bad)
add
icebp
in
add
call
dec
call
or
pop
adc
inc
xor
test
js
(bad)
sbb
adc
mov
lock
and
push
dec
ins
loop
mov
or
push
xor
or
lock
bound
test
adc
jbe
(bad)
jo
cmp
test
inc
pop
push
ins
add
jp
jbe
or
popa
cmp
loopne
xor
xchg
cmp
mov
cld
(bad)
pop
xchg
add
ret
jecxz
add
call
imul
mov
div
push
push
pop
adc
adc
js
sar
pop
add
outs
adc
loopne
add
fcom
or
jo
inc
popa
retf
xor
std
adc
fmul
mov
and
sub
call
or
dec
sbb
pop
mov
loopne
adc
test
ins
popa
add
test
enter
cmp
adc
fadd
popf
add
xor
je
push
cmp
cmp
ret
in
and
mov
je
adc
pop
add
imul
or
add
and
rol
mov
adc
and
mov
mov
add
xchg
and
ja
test
mov
push
and
lods
push
sbb
sub
jl
add
jl
pop
fs
and
xor
sbb
test
dec
pop
mov
jge
inc
sbb
popa
or
dec
lds
idiv
daa
pusha
adc
rol
loope
dec
or
call
jg
mov
dec
add
rol
repz
or
lea
sbb
je
mov
sbb
mov
mov
test
imul
test
cwde
mov
and
gs
movs
pop
adc
mov
mov
jmp
(bad)
stc
jne
mov
in
xor
in
adc
icebp
retf
mov
mov
mov
jns
mov
or
jo
into
sahf
inc
xchg
and
fadd
mov
addr16
push
add
ret
test
and
inc
sbb
dec
ret
sub
and
add
cmp
mov
retf
outs
xor
push
mov
mov
jb
jecxz
mov
aaa
in
ss
dec
jg
cmp
adc
sbb
ret
or
jne
add
adc
dec
mov
dec
jno
mov
mov
dec
shl
or
or
enter
sub
mov
pop
pop
push
cmp
or
add
cmps
adc
fild
adc
and
je
lea
mov
inc
int3
ja
jge
cld
add
xor
xchg
or
mov
add
lock
cdq
cmp
xchg
jo
sbb
test
or
lds
ret
ja
pop
add
push
repz
hlt
push
bound
jmp
and
sbb
sbb
adc
xchg
adc
pop
fucomi
or
(bad)
popa
and
adc
xor
ins
test
push
add
xor
test
mov
xchg
addr16
inc
hlt
push
jg
push
clc
hlt
(bad)
and
movs
jmp
outs
add
inc
bound
and
adc
les
movs
add
sbb
adc
sub
jo
inc
bound
push
cmp
nop
sub
jg
add
adc
mov
ss
jg
sbb
adc
add
mov
ins
dec
and
es
xor
push
mov
lahf
xor
mov
cmp
mov
fsub
call
push
adc
cwde
ins
xor
sbb
cmp
call
add
inc
sbb
xchg
leave
adc
aas
jecxz
xchg
mov
xchg
push
xchg
push
pop
stos
or
sub
in
jl
jo
mov
mov
push
cmp
mov
mov
loope
test
jmp
loope
ins
cmp
loopne
adc
mov
aad
cdq
and
data16
aas
jl
add
or
jbe
push
jp
mov
adc
test
cmp
push
ficom
call
sub
mov
xor
or
fcom
mov
push
push
arpl
cmps
add
add
call
rcl
daa
sbb
dec
test
lahf
sbb
ret
lahf
in
sbb
inc
and
add
inc
mov
imul
sahf
push
lahf
in
sbb
or
icebp
sub
call
sbb
inc
enter
or
cld
lahf
shl
adc
mov
or
and
dec
xor
loop
dec
es
cmp
ds
loop
sub
push
xchg
in
and
es
pop
xchg
mov
outs
loop
xchg
mov
or
inc
mov
and
arpl
cdq
or
test
xor
fistp
loope
cld
or
cdq
imul
or
inc
cmc
push
push
xchg
mov
adc
inc
xlat
in
sub
call
inc
jmp
pop
inc
(bad)
pop
jg
inc
inc
xchg
test
daa
sub
je
xchg
or
inc
adc
(bad)
cmps
xchg
jp
jb
dec
jmp
adc
lock
hlt
hlt
ss
(bad)
es
jne
(bad)
pop
mov
adc
sbb
or
cld
cmp
clc
cld
sbb
lahf
or
loop
push
xchg
mov
mov
lds
mov
clc
cld
add
inc
pusha
lahf
shr
inc
cli
ret
loop
ffreep
mov
nop
ret
and
xchg
mov
add
(bad)
adc
inc
inc
sbb
add
sub
xor
xor
into
and
or
pop
lock
mov
hlt
(bad)
int3
sbb
aam
aam
adc
push
adc
mov
hlt
test
fist
and
pop
cmp
adc
cli
ds
pop
jge
and
mov
pop
mov
adc
inc
sbb
xor
add
mov
scas
mov
mov
rcl
fisttp
mov
ror
push
or
nop
jg
fs
xor
xchg
icebp
pop
push
inc
push
inc
sbb
adc
pop
dec
sbb
popa
loope
pop
inc
mov
push
or
bound
adc
dec
jo
push
dec
add
shl
push
lock
test
sbb
shr
call
adc
stos
or
and
retf
lahf
ds
jg
adc
jmp
or
dec
jecxz
aaa
add
repz
mov
mov
mov
add
rol
mov
adc
push
sbb
cmp
cmp
dec
aam
sbb
mov
pop
out
push
cdq
adc
jne
fild
fist
cdq
scas
ss
and
addr16
clc
inc
add
pop
mov
mov
jg
ror
mov
sahf
imul
add
add
add
call
or
aaa
jl
xor
adc
and
add
sbb
cwde
and
or
mov
cwde
pop
sub
push
dec
cmp
or
inc
mov
fdiv
mov
pushf
mov
test
test
inc
cmp
pop
push
dec
pop
mov
sub
jmp
or
pop
inc
sbb
call
fiadd
and
mov
sub
and
repz
sub
mov
xchg
pop
les
cmp
lahf
jecxz
add
cmp
std
or
jg
adc
ja
xchg
dec
ins
and
in
dec
sub
adc
sbb
jo
scas
push
es
ror
clc
iret
test
xor
push
or
and
bound
sbb
jmp
inc
jecxz
movs
sub
loope
add
mov
popa
iret
mov
inc
sub
sub
dec
sbb
pushf
repnz
pop
and
add
add
cmps
into
mov
pusha
add
inc
push
fcomp
fcmovnbe
xor
test
xor
loope
fcomp
add
rcl
jnp
xor
xchg
cld
test
adc
shr
outs
or
gs
mov
jo
adc
fdivr
fcomp
aas
mov
sbb
cmp
(bad)
inc
(bad)
xor
test
push
push
or
fadd
fsubr
fdivr
(bad)
and
xor
mov
(bad)
or
mov
inc
fmul
ror
aam
fdiv
jb
mov
and
pop
sub
inc
sbb
fmul
and
or
hlt
cmp
iret
cmp
shl
(bad)
jmp
in
in
sti
mov
xchg
in
js
or
fmul
mov
mov
stc
aaa
or
loop
or
or
arpl
push
push
add
bound
push
dec
call
hlt
inc
mov
xchg
dec
add
pop
mov
call
imul
pop
dec
adc
add
jne
jno
or
push
lods
inc
jne
sub
fs
and
dec
jo
jno
sar
push
add
(bad)
cmp
or
push
cld
sub
dec
mov
jmp
dec
in
sbb
popf
or
loop
lods
call
popa
mov
fiadd
gs
(bad)
jmp
and
ins
(bad)
scas
dec
sbb
lea
cmp
cmp
call
lea
sub
pop
inc
test
fcomp
mov
lahf
dec
popf
push
pop
mov
stos
aam
push
stos
and
push
push
mov
mov
mov
jo
push
push
push
lahf
cdq
sbb
lods
jbe
popf
fucomip
mov
daa
mov
xchg
and
sbb
xor
movs
push
and
lahf
pop
adc
xor
mov
test
cld
add
sub
pusha
(bad)
mov
mov
imul
nop
sbb
inc
or
loopne
or
loopne
inc
dec
and
or
int
loopne
and
and
adc
movs
and
movlps
mov
rcl
loopne
shl
xchg
shr
add
inc
adc
mov
rol
or
shl
test
mov
or
push
cwde
mov
xchg
or
mov
inc
cmp
jbe
imul
aas
mov
out
push
imul
inc
outs
nop
xor
dec
(bad)
pusha
ret
mov
js
and
or
jmp
lock
repz
lock
xor
cmp
aaa
dec
mov
cmp
pop
xchg
xchg
dec
cmp
cmc
repnz
ins
mov
sub
nop
sub
mov
sub
inc
xor
jno
test
jecxz
stos
es
(bad)
and
xchg
mov
repnz
in
mov
add
ins
daa
add
in
in
in
adc
ins
and
adc
sub
mov
pop
push
inc
mov
sub
sub
movs
add
cld
test
or
in
inc
push
std
mov
in
mov
hlt
xor
add
push
cmp
arpl
mov
enter
and
inc
daa
leave
dec
jne
add
movs
and
mov
inc
cld
add
es
clc
gs
jns
in
adc
cmps
or
add
or
inc
push
lock
cld
sub
clc
popa
jecxz
call
es
aaa
(bad)
jmp
mov
jg
or
repnz
push
enter
sbb
sbb
shl
jb
in
in
add
ret
sbb
xchg
dec
pop
inc
fbld
stos
pop
sub
fs
and
cmp
sbb
or
xor
inc
cmp
nop
mov
imul
xor
mov
imul
or
nop
nop
nop
adc
(bad)
sar
addr16
mov
lahf
shl
fcom
sub
xor
or
add
jl
jo
shr
jl
test
adc
pop
dec
mov
or
push
cdq
scas
xor
sbb
mov
out
outs
dec
popa
and
dec
mov
sub
xor
jg
imul
pop
mov
jno
rcl
lea
dec
jmp
inc
test
pop
fistp
add
adc
or
add
popa
xor
ficom
push
ds
jno
inc
jge
ins
test
pop
inc
mov
test
inc
inc
pop
ins
mov
sub
dec
mov
push
xor
out
fld
les
dec
jg
pop
jmp
or
or
push
sub
and
inc
add
cmp
add
sbb
and
xor
fidiv
test
gs
sbb
mov
rcr
mov
cld
add
lock
and
push
xchg
adc
fdiv
dec
movs
adc
xor
mov
or
jecxz
sbb
push
xchg
mov
pop
push
mov
cmp
stos
xchg
dec
inc
sbb
imul
popa
clc
mov
popa
and
xchg
dec
les
pusha
pop
sub
cmp
rol
popa
pop
jp
sbb
mov
pop
in
or
bound
in
sbb
je
or
jg
test
ds
jg
and
sbb
adc
jmp
adc
add
or
jecxz
cmp
in
sub
add
loope
jns
(bad)
cdq
and
and
add
sbb
test
mov
je
mov
les
or
sbb
pop
shr
rol
pop
aas
xchg
or
inc
bound
retf
lock
dec
std
ret
lock
scas
mov
mov
adc
test
adc
dec
cmp
xor
hlt
xor
(bad)
sbb
inc
mov
(bad)
nop
inc
or
adc
dec
push
call
inc
arpl
inc
je
xor
push
mov
inc
cmp
sub
sub
sub
pop
jo
xchg
sub
or
cwde
or
add
mov
and
pusha
adc
scas
xlat
mov
stos
hlt
sub
or
inc
sbb
mov
sbb
clc
mov
mov
loop
outs
or
mov
push
or
adc
mov
push
rcl
(bad)
jno
arpl
push
push
popa
leave
adc
mov
lahf
ret
cmp
adc
imul
jae
jmp
dec
and
pop
shr
dec
or
lock
mov
and
and
sub
push
fld
dec
add
dec
lds
repnz
xchg
sbb
push
pop
ror
cmp
es
mov
xchg
ror
push
or
adc
fcom
int3
sbb
jg
adc
or
jo
ret
lahf
lock
push
sub
ins
dec
pop
pop
test
adc
stos
sete
scas
ds
push
inc
daa
mov
mov
pop
adc
inc
mov
push
xor
inc
lods
xchg
out
push
fbld
sbb
mov
dec
jg
adc
in
jg
jns
leave
dec
out
inc
pushf
push
inc
nop
or
sbb
out
out
push
push
ret
jg
push
add
out
nop
stos
nop
pop
jb
sub
push
add
xchg
pushf
out
jg
sub
adc
popf
jg
outs
inc
mov
pushf
push
leave
push
and
cmp
sbb
pop
ret
cmp
leave
aam
adc
fcomp
sub
xadd
add
rol
push
mov
jne
sbb
push
sbb
inc
push
cmp
sbb
mov
or
add
pop
and
jg
sar
shl
sub
shl
jg
push
and
aad
stos
popf
or
fst
mov
push
push
enter
mov
push
loope
add
pop
adc
test
pusha
or
push
clc
sub
inc
fisttp
test
or
movs
sbb
dec
stc
push
jb
cmp
ret
xor
in
xchg
call
mov
mov
and
jo
cli
lds
push
mov
inc
add
sub
aad
inc
stos
in
scas
ror
xchg
jge
sbb
push
sub
sbb
les
pop
je
(bad)
xchg
pop
enter
pop
rol
inc
sbb
mov
fsubr
add
stos
push
aas
popa
mov
adc
ins
dec
pushf
rol
mov
shl
lea
lahf
or
xchg
pop
aaa
sbb
pop
dec
mov
ret
test
dec
xchg
mov
xor
imul
ds
ja
mov
popa
mov
mov
dec
xchg
fild
dec
sub
cmovbe
adc
lock
inc
cld
ret
sbb
fild
lods
inc
adc
xchg
cmp
cmc
adc
loope
mov
stos
hlt
cmp
mov
ror
add
mov
lahf
inc
mov
sbb
adc
test
jl
pushf
pop
adc
enter
jb
push
sbb
adc
ins
aas
pop
movs
daa
sbb
imul
and
sbb
test
call
add
call
sbb
(bad)
outs
or
or
call
sbb
out
mov
shl
in
ins
adc
lds
inc
popa
bound
aas
pop
in
jge
retf
add
cs
and
mov
rcl
mov
or
mov
mov
jg
fistp
inc
lods
xor
aas
dec
pop
mov
enter
dec
mov
pop
lods
sub
cld
int
pop
push
adc
mov
and
dec
sahf
pop
sub
add
xchg
pop
(bad)
les
lahf
push
jmp
lahf
retf
icebp
cwde
and
ret
mov
xchg
ins
and
and
daa
lahf
adc
les
test
je
jge
ss
push
or
int
or
pop
and
and
sub
push
adc
jecxz
mov
fstp
sub
fstp
test
mov
dec
add
and
jno
jo
mov
fdivr
jae
pop
lock
lea
add
lahf
and
or
dec
push
test
(bad)
daa
fcmovnbe
jmp
jmp
loopne
shl
out
shl
popa
sbb
jp
add
inc
addr16
lahf
clc
xchg
(bad)
push
stc
adc
gs
and
inc
or
mov
and
mov
add
sbb
or
adc
jecxz
sbb
mov
in
aas
mov
movs
std
call
(bad)
dec
sub
lea
mov
and
jmp
jns
dec
add
add
fwait
pop
xor
mov
arpl
nop
add
lahf
fs
xor
scas
xchg
lea
dec
int3
push
pop
push
jb
pop
and
inc
push
push
pop
jl
sbb
dec
and
sbb
sbb
ret
inc
adc
out
push
pop
or
ret
or
test
sub
in
mov
mov
inc
fisttp
jo
rcl
rcr
pop
or
and
pop
lahf
cmp
sbb
push
ins
je
and
mov
sbb
xchg
lahf
cmp
sub
(bad)
call
adc
call
scas
fsubr
rcr
and
pop
jecxz
add
dec
and
call
mov
jl
out
inc
pop
mov
jl
fsub
ret
adc
shl
cmc
les
add
popa
inc
lock
mov
mov
fsub
mov
dec
in
fcom
(bad)
fistp
adc
adc
sub
add
aas
and
mov
adc
add
int
sub
or
sub
mov
nop
(bad)
fs
jg
or
add
(bad)
rcl
pop
dec
sbb
cld
and
mov
test
test
jg
mov
je
repz
js
or
pop
push
push
mov
(bad)
cld
add
arpl
and
imul
or
adc
mov
lods
push
aas
(bad)
mov
mov
test
mov
pop
push
inc
adc
dec
bound
call
inc
add
test
popa
or
jo
xor
lea
dec
ins
pop
out
pop
inc
xor
sbb
or
mov
pop
inc
push
in
aad
sub
or
mov
inc
add
imul
xor
mov
sti
pop
push
push
xchg
sbb
mov
jmp
xor
fisub
(bad)
jle
inc
in
pop
clc
les
mov
leave
or
mov
lahf
nop
xchg
ds
jle
adc
mov
lea
push
push
jl
or
stos
imul
(bad)
dec
adc
mov
cmp
mov
add
(bad)
fist
inc
adc
punpcklbw
mov
or
add
jmp
mov
push
ret
fadd
(bad)
mov
or
sbb
push
jns
sar
inc
sub
push
add
mov
adc
push
imul
sbb
pop
mov
movs
sbb
mov
fisub
and
adc
xchg
xchg
push
adc
dec
loopne
adc
out
and
loope
add
movnti
and
ror
test
sbb
ret
jnp
mov
rcl
test
or
(bad)
dec
add
(bad)
out
shl
jge
std
cmp
dec
or
mov
or
(bad)
arpl
in
movs
sbb
add
ret
lea
test
in
adc
mov
arpl
pop
mov
xchg
or
(bad)
xor
call
popa
mov
add
sbb
push
lea
adc
jo
and
sub
jae
cs
arpl
and
mov
fwait
xor
sti
out
nop
mov
dec
add
jg
or
and
xor
sar
leave
fs
rol
jb
or
adc
xchg
and
push
sbb
dec
cmc
or
mov
sbb
dec
inc
or
mov
cmp
dec
sbb
ja
sbb
mov
add
add
push
push
sub
add
push
or
add
dec
and
mov
int3
loopne
xchg
xchg
cmps
icebp
adc
xor
jmp
push
adc
popa
and
cdq
adc
movs
and
and
xor
or
jbe
stos
ror
and
push
or
icebp
jae
ss
mov
data16
dec
inc
and
sbb
dec
sub
push
pop
push
mov
pusha
or
mov
add
jge
scas
or
add
call
dec
(bad)
call
sbb
adc
lods
fimul
test
test
mov
inc
loopne
dec
add
in
mov
jmp
push
sti
(bad)
pop
aas
pop
inc
add
test
pop
mov
test
mov
ret
xchg
test
movs
push
sbb
and
or
or
pop
add
popf
pop
adc
jle
cdq
jb
(bad)
push
cmp
mov
jmp
sbb
xchg
aaa
pop
loopne
and
sub
(bad)
dec
inc
cmp
jo
(bad)
sti
mov
imul
add
and
hlt
lds
inc
xchg
or
(bad)
mov
cwde
shl
push
and
cmp
cwde
add
mov
pop
jmp
aam
add
pop
mov
push
popa
and
mov
aas
aam
les
or
dec
mov
push
ds
gs
jno
mov
ret
or
prefetchw
mov
or
add
push
neg
and
pop
ja
test
jl
xor
inc
das
jl
and
and
shl
icebp
inc
adc
lahf
pop
lods
mov
push
push
daa
xchg
mov
add
icebp
popa
repz
inc
mov
mov
hlt
mov
pop
sbb
ds
push
push
lods
and
pop
sbb
(bad)
fdiv
cmps
or
inc
lea
dec
jnp
xor
(bad)
fstp
push
add
and
mov
fld
(bad)
xor
fcom
and
pushf
ss
push
add
cwde
mov
sbb
push
or
pop
das
mov
sbb
mov
popa
das
inc
aad
fs
xor
arpl
pop
pushf
stos
xor
dec
iret
pop
pop
mov
pop
adc
xchg
add
test
mov
nop
movs
ror
fwait
sbb
or
cli
fistp
mov
test
test
mov
add
xchg
adc
push
sbb
std
jge
loope
pop
dec
addr16
aam
push
cld
pop
push
dec
cmp
sub
movs
fwait
cmp
and
in
or
aam
mov
xchg
push
push
imul
mov
pop
mov
mov
pop
jns
and
and
inc
mov
sbb
scas
clc
adc
outs
sbb
arpl
mov
dec
cmp
sar
cmp
aam
int
inc
sbb
hlt
daa
loop
imul
jmp
and
or
inc
in
and
mov
popa
je
add
arpl
test
addr16
inc
pop
test
pop
or
jo
mov
cwde
cmp
xchg
daa
sbb
out
xchg
pop
mov
mov
inc
rcl
outs
aad
mov
shl
adc
dec
sbb
aam
sbb
add
xchg
mov
jae
adc
jne
lea
pop
and
inc
or
or
loopne
push
xchg
mov
in
inc
add
bt
jae
sbb
pop
je
call
cmp
or
shl
xchg
inc
and
or
popa
or
pop
xchg
mov
shr
sbb
loope
add
arpl
adc
imul
ret
inc
add
ins
in
push
sub
sbb
and
push
or
inc
and
aas
je
nop
call
dec
fld
lahf
jnp
ins
push
push
cdq
mov
xor
cmps
add
sbb
jmp
jle
jle
jbe
test
sbb
mov
jecxz
push
mov
mov
jae
xchg
in
jge
add
out
idiv
ins
hlt
fwait
jne
dec
mov
stos
inc
inc
add
push
ss
cmp
rcr
mov
xor
sub
dec
inc
cmp
test
xor
or
or
push
ds
and
aas
cld
push
shl
and
and
mov
and
sub
inc
jl
sbb
hlt
jbe
mov
inc
pop
jne
xchg
jnp
and
(bad)
cld
cmp
adc
jae
lock
or
pop
inc
inc
sbb
aad
xor
push
inc
sbb
push
mov
loop
pop
or
pop
jg
and
jmp
adc
out
push
adc
pop
sbb
shl
nop
icebp
pop
dec
in
or
sbb
adc
adc
or
add
or
test
shl
out
cwde
push
xor
(bad)
and
pusha
imul
(bad)
push
and
aad
pop
and
xor
aas
(bad)
ret
je
cmp
xlat
push
add
jecxz
out
xor
add
sub
jbe
and
and
and
sub
out
cmp
mov
ret
cmp
adc
iret
jb
jmp
xor
and
les
add
nop
sub
add
les
mov
dec
xor
mov
nop
or
inc
sbb
sti
sub
out
clc
lahf
add
add
add
cdq
hlt
in
sbb
movs
jmp
push
scas
add
inc
sti
cmp
add
add
adc
add
(bad)
and
xor
adc
jbe
add
(bad)
sub
les
les
mov
jbe
imul
mov
jg
mov
loopne
jmp
inc
push
jbe
gs
rcl
rcl
xor
xor
in
pop
pop
xchg
es
push
bound
jg
dec
mov
mov
fdivr
(bad)
xchg
add
sbb
mov
cdq
fidivr
adc
jbe
push
aad
or
std
sbb
ret
and
xchg
dec
rcl
adc
or
jecxz
shr
add
ds
xor
fist
push
fisub
cmp
sub
in
fs
inc
fadd
or
push
push
or
and
sbb
test
stc
pushf
sbb
add
jne
xor
dec
or
test
aas
fs
cmp
inc
or
push
sahf
adc
je
cmps
adc
xor
xchg
dec
add
mov
leave
shl
add
es
fst
adc
adc
nop
mov
or
rol
add
es
ret
and
cmp
and
pop
pop
(bad)
gs
and
dec
or
and
add
jnp
add
or
cmp
lea
add
jae
sbb
in
push
pop
or
or
or
addr16
push
loope
(bad)
(bad)
rol
sbb
or
pop
or
cmp
clc
gs
lods
sbb
pusha
retf
gs
rcl
jo
lock
push
clc
add
dec
movs
adc
adc
cld
add
fisub
lock
mov
sub
add
lahf
or
add
jno
add
xchg
jmp
xchg
adc
add
or
adc
in
sub
jne
jg
sub
out
fld
inc
xor
sbb
cmps
cmp
retf
sub
fadd
inc
cmp
and
xor
ret
push
mov
xchg
sbb
adc
and
jne
mov
js
inc
xor
adc
or
loope
fistp
pop
or
jecxz
adc
inc
ret
rcr
xchg
nop
leave
or
xor
ret
popf
push
pop
mov
loopne
xor
mov
add
pop
and
or
jl
movs
xchg
loopne
lods
popa
jns
pop
gs
adc
add
xchg
mov
das
out
mov
pusha
cmp
cmps
pop
push
icebp
adc
xor
rol
ja
xor
sub
pop
xchg
xor
dec
and
mov
repnz
ins
mov
jb
dec
in
test
ss
test
mov
push
test
push
stos
xor
push
aaa
cmc
loop
xchg
adc
rol
add
add
xchg
sahf
mov
inc
enter
push
and
mov
test
mov
cmp
inc
imul
xlat
outs
adc
cmp
inc
add
mov
cmc
cmp
cmp
clc
cld
or
sbb
pop
call
cmp
scas
or
or
xchg
xchg
jmp
movs
cdq
adc
test
inc
sbb
test
or
adc
add
fst
push
push
pop
push
cld
mov
aaa
movs
fstp
cld
mov
add
mov
lea
aas
jle
test
inc
clc
mov
pop
or
add
xor
add
sub
pop
adc
add
mov
inc
add
mov
push
pop
add
test
or
mov
cmp
xor
mov
xor
sub
dec
test
add
lods
add
ret
bound
push
pop
xor
jmp
leave
inc
add
adc
add
mov
xchg
inc
test
mov
pop
fmul
out
and
mov
mov
pop
jecxz
dec
jmp
rol
ja
es
mov
add
or
jmp
sbb
cmp
jl
dec
xchg
xor
pop
xchg
xchg
push
push
inc
sbb
jmp
les
mov
gs
add
adc
movs
rcl
inc
or
adc
loope
mov
pop
pop
invd
jp
add
lods
mov
or
add
pop
popa
in
lock
dec
xchg
dec
sbb
xor
sahf
pop
test
and
xchg
cmp
out
cmps
mov
inc
std
adc
int
jmp
iret
adc
shr
xchg
lods
add
je
sub
or
mov
rol
push
test
outs
movs
and
adc
mov
and
pop
mov
call
or
jae
sbb
cmp
(bad)
lds
dec
stos
loope
mov
xchg
mov
dec
or
dec
dec
out
nop
loopne
add
adc
sub
and
sbb
jl
and
or
enter
imul
cmps
push
enter
in
push
int3
adc
cmp
inc
push
rcl
sbb
or
cmp
inc
adc
pop
xor
xchg
pop
daa
sub
pop
mov
jmp
movs
sub
ins
es
sub
and
cmp
jp
cmc
jno
jl
fcom
cmc
test
icebp
push
lea
data16
add
adc
mov
std
ins
rcr
mov
leave
sbb
push
adc
push
test
bound
stos
fst
cmpxchg
retf
and
add
dec
mov
int
(bad)
out
push
xor
mov
mov
mov
mov
xchg
std
(bad)
in
mov
sbb
sbb
adc
inc
lahf
and
ja
fstp
pop
push
jmp
mov
sbb
sbb
test
and
(bad)
cmp
sub
cmp
mov
mov
pop
popa
or
rol
add
xchg
imul
mov
adc
ds
mov
nop
(bad)
or
test
and
push
xor
mov
pop
or
aam
mov
shl
cmp
inc
mov
pop
push
je
enter
iret
cld
loop
push
pop
jae
mov
sahf
lea
mov
into
call
data16
ret
fld
push
sar
jns
pop
sbb
xor
out
mov
or
repz
test
xchg
repz
inc
fs
xchg
mov
mov
cmps
test
sahf
ret
sbb
ficomp
rcl
cmp
ret
adc
mov
inc
ret
mov
mov
adc
pop
mov
add
mov
or
sub
or
xchg
inc
clc
shl
dec
and
mov
sbb
mov
xor
mov
push
xlat
sbb
and
lea
aas
push
retf
jp
dec
sub
push
pop
inc
dec
inc
and
ret
or
in
adc
inc
sbb
inc
or
adc
add
cwde
test
sahf
cmovo
inc
cmp
inc
pusha
div
ficomp
test
cmp
xor
xor
add
add
push
pop
or
add
sbb
or
and
repnz
sub
jmp
add
or
rol
lea
xlat
cmp
retf
sub
add
sbb
fcomp
mov
xchg
pop
mov
pop
or
ror
jno
repnz
xor
ror
and
and
cmps
mov
or
(bad)
and
mov
add
sub
test
cmps
inc
scas
cmp
xor
inc
sbb
push
rol
push
adc
dec
pop
pusha
pop
retf
mov
sub
jae
add
jmp
and
or
cdq
lods
test
rcl
in
adc
mov
fild
jp
sbb
arpl
cmp
jle
sub
inc
add
mov
adc
inc
push
cmps
dec
arpl
stos
sub
rcl
jg
jmp
xor
mov
jmp
push
or
mov
sbb
stc
(bad)
xor
or
cmp
inc
cmps
mov
loopne
inc
mov
std
jmp
jb
inc
enter
loopne
and
mov
pop
mov
pop
add
add
jle
inc
into
mov
cmp
or
add
and
xor
inc
jecxz
adc
(bad)
adc
jno
dec
in
push
outs
les
lock
cmp
or
mov
int3
mov
jle
adc
fistp
jnp
movs
xchg
jmp
mov
inc
add
daa
add
sub
jge
fs
daa
pop
cmp
popa
mov
add
xchg
wbinvd
paddd
retf
xchg
ret
dec
adc
or
inc
fwait
inc
inc
xor
and
cwde
xchg
add
add
pusha
xchg
and
add
aaa
add
add
test
adc
enter
pop
(bad)
fsubr
cmp
sbb
gs
int
arpl
pop
fsubr
lea
inc
cwde
add
mov
pop
push
push
xchg
add
mov
ins
daa
popf
jge
es
add
or
push
mov
std
aam
lds
int
sub
aam
push
sbb
stc
aam
retf
loope
mov
repnz
loop
jne
cmp
or
jmp
popf
xchg
pop
mov
xor
call
hlt
xchg
test
js
or
inc
or
movs
and
add
inc
jno
and
sbb
rol
and
mov
mov
cld
pop
xchg
sub
sub
jle
lea
gs
repz
cmp
fst
add
or
xchg
mov
push
lahf
rol
xor
add
or
and
dec
lahf
retf
(bad)
fprem
push
aas
and
or
inc
fadd
dec
sbb
or
and
clc
mov
fmul
jns
rol
popa
in
out
call
xor
dec
sbb
xor
adc
inc
rcr
xchg
lahf
jp
clc
mov
push
in
dec
jnp
add
jmp
in
cmp
sbb
inc
or
jmp
inc
mov
pop
ja
and
inc
adc
enter
imul
and
sbb
jmp
jne
pusha
inc
and
dec
inc
and
pop
mov
sub
inc
cmp
pop
mov
aas
rol
jecxz
mov
xor
mov
adc
movs
sub
add
add
or
push
pop
adc
mov
jo
cmp
adc
jae
imul
ret
shl
shl
icebp
add
or
sub
dec
xor
cmp
or
mov
inc
inc
outs
push
push
add
ror
mov
or
inc
adc
mov
cmp
xor
fs
popa
mov
cwde
lods
xor
or
shl
cdq
mov
sbb
fwait
imul
mov
add
jne
not
sub
pop
fwait
clc
mul
xchg
mov
test
sub
add
je
retf
sbb
add
add
mov
setl
inc
fimul
(bad)
push
inc
add
sbb
dec
cmp
mov
cmp
xor
movs
lods
hlt
jbe
in
sbb
adc
sar
lock
add
mov
int3
dec
inc
stos
jmp
adc
jae
cdq
adc
les
mov
and
sbb
push
cmp
fisttp
mov
push
jns
sub
jmp
cmovp
ror
in
rcr
xor
adc
retf
or
pop
sub
sub
pop
in
cmp
dec
and
cmp
call
ss
sbb
in
adc
dec
xchg
jne
mov
xor
or
aas
inc
lds
jno
pop
and
sbb
dec
mov
dec
aas
cwde
dec
adc
push
pushf
pop
inc
mov
and
add
inc
or
or
or
mov
popf
repz
add
fcmovu
inc
mov
xor
cmp
add
add
sub
pop
aam
icebp
(bad)
jmp
lds
xor
xchg
xor
pushf
nop
imul
xor
popf
jns
push
nop
xchg
popf
ja
jmp
push
nop
xchg
cdq
loope
inc
rcr
in
test
pop
and
pop
sub
add
and
pop
xor
and
mov
ja
jb
xchg
rol
cli
cmp
in
frstor
shl
or
add
and
add
out
or
inc
add
dec
ror
push
daa
adc
sub
push
sahf
lods
adc
pop
loop
fisttp
icebp
movs
push
inc
add
stos
and
add
xchg
(bad)
push
inc
cld
push
mov
jmp
cmp
aaa
enter
adc
mov
popa
sub
xor
push
xchg
xor
jb
inc
hlt
nop
xor
or
mov
ret
sbb
les
js
inc
inc
adc
sbb
add
add
test
lahf
mov
dec
cmp
int3
xor
and
inc
imul
jmp
xor
and
jmp
sub
pusha
pop
pop
xchg
xor
(bad)
clc
daa
lahf
and
mov
(bad)
add
mov
add
sbb
adc
push
stos
or
test
ins
inc
inc
xor
push
movs
add
push
imul
and
cmp
out
push
out
daa
out
movs
inc
mov
rol
icebp
mov
and
clc
pop
or
mov
jo
push
hlt
jmp
ins
test
imul
add
sub
adc
sub
lds
mov
push
lock
cmp
sub
popf
or
cli
rcr
add
push
pop
add
ret
test
test
lock
aas
inc
and
cmp
push
inc
dec
invd
pop
ret
pop
or
cmps
icebp
xchg
sub
pop
mov
push
sbb
das
inc
sti
or
pop
sbb
ds
add
pop
inc
and
test
cmp
mov
ds
adc
sub
mov
movs
mov
or
xor
out
pop
call
cmps
imul
call
jae
cmp
enter
mov
(bad)
and
mov
rcr
add
sar
mov
stc
and
sbb
add
in
in
add
lock
jo
pop
in
cmp
repnz
loopne
inc
in
ins
jmp
sbb
xor
xor
sbb
mov
xor
(bad)
in
and
hlt
xchg
inc
in
sbb
dec
fcomp
dec
adc
sub
cmp
rcl
pop
mov
cmp
xchg
jo
es
jmp
jl
and
cmp
xchg
adc
xchg
clc
sub
adc
push
inc
cmp
push
shr
pop
enter
lock
aam
inc
ror
retf
enter
xor
or
xor
or
and
push
sar
pop
cs
(bad)
lods
in
mov
push
sar
in
xchg
out
or
and
test
push
push
or
or
adc
lods
rcl
popa
sbb
xchg
mov
mov
pop
mov
push
push
or
mov
push
ret
ret
add
cmp
pop
daa
add
jmp
jo
or
inc
or
mov
xor
into
mov
add
cwde
imul
sbb
and
mov
adc
pop
adc
sub
bound
xchg
test
inc
add
retf
jg
dec
jg
and
sub
mov
pop
rcl
cwde
out
mov
add
lahf
or
add
mov
and
xor
sahf
mov
pop
pop
dec
push
clc
pop
xor
inc
and
inc
adc
pusha
mov
movs
sub
in
pop
push
aaa
cmp
cmp
jb
xor
dec
xchg
std
dec
sbb
add
xchg
and
or
push
sub
pop
aam
mov
sub
inc
call
mov
inc
ret
or
dec
mov
(bad)
mov
inc
pop
push
mov
mov
cmp
and
inc
stc
in
loop
add
push
and
call
imul
or
lds
dec
lock
jl
lock
push
push
adc
inc
test
fistp
dec
mov
adc
sbb
sub
mov
push
fs
cmp
retf
dec
mov
mov
xchg
inc
fs
ins
sub
rcr
lds
mov
addr16
push
aas
sar
pop
popa
and
fnstenv
pusha
call
pop
mov
pop
or
ror
add
jo
adc
jmp
rcl
xchg
je
mov
push
rcl
pop
imul
and
jmp
xor
push
mov
and
pop
pop
xchg
and
stos
jmp
daa
repnz
mov
cmp
push
or
pop
xchg
adc
inc
add
pop
mov
in
loopne
in
movs
pop
or
in
enter
js
or
fadd
dec
subps
jo
loope
or
dec
or
add
aad
test
fdiv
inc
pop
lods
or
aam
xor
push
or
xor
les
loop
repz
or
mov
out
xor
push
ins
ret
dec
in
dec
adc
lods
add
jmp
sub
lds
mov
xchg
(bad)
fld
ror
loopne
sub
mov
push
inc
js
fmul
push
xlat
(bad)
sbb
cwde
(bad)
das
or
and
or
mov
dec
mov
icebp
or
jmp
add
sar
add
cmp
jb
imul
ret
lds
mov
loopne
call
pop
inc
test
xor
lods
call
push
xlat
out
les
sbb
mov
stos
or
mov
inc
fcom
pop
aaa
inc
sub
jns
xor
xor
scas
int3
mov
jg
sbb
xor
cli
stc
out
mov
adc
cmp
and
hlt
imul
xchg
(bad)
mov
inc
inc
add
mov
jl
push
adc
inc
or
add
adc
je
imul
psubsw
xchg
or
dec
call
pmulhw
inc
xor
sub
jl
sub
and
dec
add
aam
fs
add
fld
sbb
loopne
push
dec
dec
je
and
inc
push
dec
hlt
jg
xor
or
scas
inc
mov
push
(bad)
pusha
lea
sub
add
or
adc
and
sbb
pop
jg
loopne
std
in
add
xchg
dec
in
adc
jnp
or
inc
and
(bad)
inc
or
in
and
inc
or
jecxz
nop
das
in
ficomp
push
imul
inc
sbb
pop
clc
mov
jnp
xor
and
mov
ds
push
xor
inc
inc
hlt
fwait
xchg
fldcw
lods
xor
add
aam
retf
(bad)
push
sar
mov
push
pop
add
and
rcr
aas
mov
push
(bad)
mov
sub
inc
lds
test
dec
jae
retf
(bad)
jmp
dec
rcl
xor
lods
fild
adc
jb
inc
dec
push
(bad)
in
adc
shr
out
adc
push
pop
test
arpl
js
movs
out
sub
push
sub
dec
or
and
lods
inc
jmp
sbb
add
movs
dec
jge
(bad)
cmp
adc
push
(bad)
xor
outs
fistp
xchg
mov
hlt
stos
loopne
and
pop
cmps
inc
scas
jno
sub
pop
outs
inc
test
mov
fnsave
pop
cmp
(bad)
out
push
mov
cmp
push
ror
popa
mov
add
inc
sbb
xchg
fimul
test
sub
adc
int3
or
add
pushf
shr
mov
add
lea
pushf
mov
mov
inc
dec
xchg
addr16
dec
xchg
add
popa
and
or
sbb
adc
daa
outs
push
cmp
sti
fdivr
mov
push
and
mov
add
mov
adc
popa
sar
pop
test
aad
and
js
or
inc
or
mov
lods
inc
mov
test
sar
cmp
adc
mov
add
sub
or
int3
and
dec
aam
push
loope
add
sub
inc
rcl
leave
adc
cli
mov
in
sbb
ins
xor
mov
loope
repz
mov
dec
test
pop
or
xchg
xchg
lods
xchg
(bad)
lods
sar
add
fldcw
push
xor
test
call
dec
and
sub
hlt
popa
(bad)
ins
and
hlt
ja
cmp
retf
sub
leave
in
add
xchg
add
inc
inc
or
and
hlt
cmp
dec
dec
out
jb
or
movsx
clc
jb
sbb
ins
cmp
gs
or
aam
jno
push
xchg
cmc
mov
and
(bad)
fld
lock
cmp
fcom
xchg
cmp
iret
pop
dec
lods
and
outs
adc
rcr
into
adc
mov
inc
jl
or
push
rol
and
lods
ja
es
sbb
iret
test
test
push
pop
mov
lea
cmp
out
mov
les
and
or
dec
or
mov
xor
shl
push
xchg
cmc
and
push
ss
xchg
popa
ror
sbb
push
mov
mov
push
xchg
push
mov
pushf
pop
fcomp
sbb
lds
cmp
push
adc
movs
loope
mov
lahf
adc
add
pop
inc
push
mov
sbb
jge
or
and
push
movs
test
pop
jne
push
rcl
outs
sti
aad
add
jle
cmp
pop
add
or
add
mov
test
add
xchg
xchg
iret
movs
lea
int3
sub
mov
rcr
in
stos
add
mov
call
mov
mov
mov
add
xchg
in
in
in
sub
add
sub
sub
mov
cmp
pop
push
rol
clc
pop
and
(bad)
push
push
mov
add
sar
bound
or
push
xor
and
and
mov
adc
add
xchg
ficom
or
mov
and
loope
mov
arpl
(bad)
lds
xchg
sbb
ja
xchg
xor
fisttp
pop
or
aas
and
mov
add
dec
push
call
(bad)
xor
adc
adc
cmp
sub
mov
pop
mov
mov
mov
popf
push
scas
pop
nop
adc
or
dec
call
ffreep
adc
sahf
push
int
inc
test
xchg
inc
mov
fist
daa
nop
pop
dec
add
inc
sub
cmc
nop
mov
or
popa
sbb
xchg
pop
adc
xchg
jg
sbb
pop
add
xor
mov
mov
mov
sbb
mov
lahf
mov
push
push
pop
rol
jb
sbb
minps
push
retf
cld
mov
sbb
jne
jecxz
aas
push
add
out
mov
pop
lahf
jns
test
sub
les
sbb
add
fwait
lock
cs
fistp
mov
dec
or
pusha
cmp
push
inc
popa
pop
lock
push
fiadd
xchg
fnstsw
cdq
sbb
mov
or
jmp
push
stos
push
aam
add
pusha
mov
push
mov
add
add
or
or
push
mov
mov
push
cmp
fldenv
adc
test
push
pop
jle
add
pop
ret
or
xchg
movs
push
xor
js
mov
mov
sub
sbb
mov
or
(bad)
sbb
(bad)
jmp
shl
cmp
shl
adc
ret
dec
jecxz
adc
icebp
cmp
(bad)
cld
xor
(bad)
and
lahf
(bad)
pop
les
cs
mov
not
mov
pop
dec
mov
pop
je
sub
dec
test
jg
add
add
mov
cmp
mov
push
(bad)
lock
xor
aas
je
mov
pop
add
inc
mov
push
ret
daa
and
pop
dec
pusha
loopne
aad
adc
mov
enter
or
and
or
or
add
dec
xchg
fisubr
sub
pop
les
mov
push
mov
or
add
or
aas
xchg
or
adc
inc
inc
cld
jg
add
pushf
test
add
(bad)
adc
aas
xchg
push
dec
jb
add
and
jmp
jbe
and
scas
les
adc
jg
addr16
adc
push
jmp
mov
fldcw
add
mov
jne
mov
xchg
lea
or
test
fs
adc
add
test
gs
(bad)
shl
ret
inc
rol
pop
mov
add
dec
(bad)
iret
inc
mov
inc
and
adc
aaa
lea
sbb
stos
shr
inc
inc
inc
and
imul
(bad)
sub
and
div
nop
repz
mov
pop
dec
clc
xchg
and
push
je
dec
(bad)
and
push
add
jmp
int3
and
jns
mov
div
sub
cmp
lock
mov
xchg
dec
jge
sbb
popa
(bad)
push
lock
mov
das
daa
jne
sar
and
fadd
or
inc
mov
mov
or
fld
pop
and
cwde
or
(bad)
pop
adc
add
xchg
dec
rcl
dec
inc
xchg
stos
or
nop
cwde
xchg
mov
or
jne
pop
fidiv
pop
sub
mov
cmp
mov
sub
mov
jle
lea
ja
cmp
scas
lock
pushf
add
push
mov
cmp
les
div
lea
mov
(bad)
hlt
(bad)
xor
sub
dec
or
ret
ja
sub
pop
push
xchg
movs
cmp
imul
inc
ffreep
adc
or
sbb
pop
pop
or
popa
mov
movs
and
xor
shl
inc
cmp
sbb
sub
and
sub
rol
or
mov
test
jg
jmp
sub
mov
(bad)
adc
inc
jp
enter
pop
and
jae
jmp
pop
dec
ret
inc
cmc
test
sbb
pop
inc
aam
pop
add
xchg
fnstcw
aad
sub
test
push
aaa
xor
and
xor
mov
adc
dec
in
outs
std
cld
clc
ror
jo
mov
(bad)
mov
push
lock
pop
je
daa
inc
dec
jmp
cmps
ja
retf
xchg
push
ins
popa
jmp
call
ss
js
add
and
addr16
js
push
movs
iret
pop
push
popa
xor
push
retf
movs
test
add
int
pop
imul
xor
sbb
les
xor
sbb
pop
sbb
adc
dec
pop
adc
(bad)
xor
arpl
add
mov
fimul
or
adc
push
mov
mov
icebp
sbb
add
in
inc
aaa
adc
mov
add
or
push
dec
mov
fidiv
fadd
add
data16
and
lods
and
das
mov
lea
inc
add
bound
adc
inc
fbstp
icebp
loope
or
and
in
jo
add
cmp
inc
jns
xchg
cmp
jne
or
mov
ret
push
mov
mov
add
(bad)
add
fwait
pop
adc
jl
add
sub
and
xchg
popa
or
aad
fadd
ret
xlat
adc
popa
popf
mov
adc
adc
inc
and
sbb
test
add
popa
adc
shr
xor
add
int3
mov
jp
add
sbb
add
fidiv
mov
jmp
jmp
adc
sbb
mov
mov
pop
movs
rep
clc
or
inc
call
dec
inc
scas
adc
or
add
fsub
mov
mov
rcr
or
push
fsubr
test
and
ins
inc
or
mov
sbb
push
xor
pusha
adc
adc
pop
inc
pop
xor
enter
ret
add
popf
cmp
lea
and
sub
mov
rcl
add
jo
jmp
inc
add
xchg
push
dec
test
push
xor
xchg
bts
popa
and
add
clc
inc
aad
mov
sbb
push
jnp
mov
or
inc
or
pop
xor
sub
aaa
mov
(bad)
add
or
fwait
sbb
or
or
mov
xchg
or
xchg
mov
cmp
(bad)
sbb
movs
xor
or
into
dec
inc
(bad)
jae
mov
pop
or
sbb
call
mov
es
out
mov
or
cmp
and
sbb
add
gs
add
add
adc
loopne
pop
mov
mov
std
loop
jp
mov
add
sbb
add
push
cdq
test
xlat
out
sar
push
aam
popf
mov
jns
iret
call
arpl
xor
jns
rol
fist
shl
mov
jle
(bad)
je
push
lahf
enter
sar
shr
int
je
lods
(bad)
int3
sub
lock
pop
pushf
mov
lea
fwait
cmp
inc
mov
repz
push
mov
add
inc
adc
bound
ret
movs
and
adc
or
sbb
xor
leave
or
(bad)
mov
push
xor
or
movs
dec
pop
fisttp
or
rcl
mov
adc
inc
xor
mov
dec
bound
call
ret
jmp
xor
icebp
aaa
shl
je
xchg
lds
or
cdq
xchg
cwde
push
push
pop
and
mov
sub
mov
dec
xor
pusha
push
pop
xchg
xor
or
mov
or
pusha
push
cmp
push
ret
cmp
xor
add
inc
loop
stos
inc
jbe
mov
jo
or
dec
inc
or
mov
popa
ins
call
sbb
push
add
aaa
sbb
push
imul
push
lock
inc
shl
js
push
push
mov
add
aaa
inc
cdq
push
jb
dec
shr
push
add
mov
pop
mov
std
addr16
add
lock
push
mov
and
enter
dec
out
mov
pop
add
sar
xlat
add
sbb
push
lods
mov
cmps
add
or
add
push
mov
mov
imul
xchg
nop
fstp
or
mov
ficomp
cmp
test
leave
in
fild
aas
cmp
sbb
pop
enter
(bad)
mov
pop
dec
test
sub
push
sar
dec
add
push
pop
call
xchg
push
setns
aas
mov
mov
ret
mov
mov
or
and
imul
fs
or
adc
daa
test
sbb
jno
test
cmp
mov
mov
call
or
das
xchg
(bad)
xor
les
sbb
fbstp
jle
(bad)
pop
inc
jecxz
in
add
adc
mov
adc
pop
mov
pop
adc
sub
rol
mov
pusha
and
stos
(bad)
mov
mov
push
xchg
fadd
dec
fild
mov
mov
scas
or
(bad)
mov
push
daa
fld
(bad)
mov
fst
pop
inc
int
pop
jo
int
jecxz
mov
pop
mov
pop
push
pop
add
cmps
push
popf
adc
std
adc
pop
sbb
sbb
and
test
mov
xchg
mov
jmp
adc
pop
cmc
cmps
and
sub
ja
adc
ss
dec
jo
in
loopne
push
mov
sub
pop
adc
xor
or
inc
dec
xor
test
jbe
adc
sbb
pop
ja
fist
mov
cmps
or
adc
push
add
loopne
add
dec
fcmovnbe
push
jecxz
aam
iret
repz
sub
or
iret
repz
dec
popw
mov
fcmovnb
repz
mov
pop
fdivr
call
add
repnz
sub
jns
fcom
sub
mov
sbb
mov
test
lock
push
push
push
inc
dec
jmp
cdq
mov
xor
xchg
push
sub
add
aad
xor
sub
(bad)
fadd
and
add
das
add
xor
cmp
xor
push
push
mov
std
(bad)
inc
add
ins
pop
or
or
add
add
or
push
shl
cwde
dec
mov
cmps
es
movs
jg
add
or
add
dec
pusha
or
jnp
loopne
jmp
push
addr16
add
mov
or
and
sbb
or
clc
stc
stc
sbb
dec
dec
xchg
adc
mov
add
cmp
popf
popa
or
mov
out
adc
pop
sub
and
jge
pushf
adc
sub
push
and
dec
xor
xchg
sub
or
ins
pop
jnp
movs
sbb
pop
cmp
rcl
or
movs
add
xchg
add
pop
xor
push
mov
xor
and
stos
test
push
ror
adc
jmp
inc
or
dec
adc
ret
xor
shl
sbb
inc
fild
cmp
pop
lock
pop
stos
push
mov
jae
fadd
ins
in
push
dec
ret
sub
mov
pusha
push
pop
fs
fcom
and
add
sub
clc
dec
adc
dec
and
popa
jmp
add
pop
add
pusha
lods
mov
dec
and
mov
loope
push
mov
jno
cdq
lock
inc
js
xor
movzx
mov
pop
mov
jg
inc
add
inc
stos
add
mov
call
sar
sub
jg
dec
cmp
dec
push
add
pop
lea
test
add
sub
inc
add
pop
jecxz
push
add
jno
aas
jno
sbb
shr
pusha
cmp
jmp
ja
es
mov
or
add
retf
jne
(bad)
popf
add
or
pusha
mov
or
test
sub
psubd
add
mov
lock
adc
add
add
xor
daa
mov
sbb
ja
icebp
loopne
and
fldenv
dec
inc
or
test
inc
jmp
or
inc
sub
aas
mov
adc
in
pop
scas
mov
add
mov
das
fldcw
or
push
add
cdq
rol
pop
mov
push
and
and
mov
mov
lods
movs
out
adc
and
and
lods
test
fwait
js
jg
xor
test
sbb
pop
loop
sub
xchg
sti
cld
add
sub
or
pusha
xlat
sbb
mov
mov
xchg
sub
fld
pop
and
rcr
xor
punpckhdq
mov
adc
adc
or
sub
xlat
adc
ins
sub
or
lahf
sbb
push
sete
jae
push
add
xor
jle
or
adc
cmp
or
jmp
cmp
ins
jl
or
test
xchg
cli
lahf
lea
aas
mov
nop
or
sub
loope
add
(bad)
(bad)
stc
inc
or
fld
movs
aas
cli
ins
or
add
inc
loopne
mov
xor
cld
in
xor
ror
popf
sbb
push
in
es
xlat
rcl
test
mov
sbb
add
and
dec
fld
aas
cmp
adc
or
test
and
cli
inc
pop
push
jmp
mov
dec
adc
pop
mov
sub
sbb
push
dec
dec
xor
int3
out
add
daa
(bad)
(bad)
(bad)
or
or
std
(bad)
push
test
iret
xor
adc
retf
cmp
sbb
jmp
or
repz
test
xchg
push
inc
inc
or
pusha
lods
lock
popf
sub
cdq
cwde
adc
in
and
jmp
push
sbb
or
and
cmc
dec
in
xor
movs
inc
dec
xchg
or
xchg
inc
jl
or
fisttp
add
out
push
fadd
mov
and
xor
lock
leave
adc
movs
cmp
xchg
repz
push
push
das
pop
add
mov
add
pop
loopne
add
add
dec
xor
fsub
or
push
cmp
loop
mov
popa
mov
lahf
test
adc
cmp
and
ins
sub
fs
out
call
push
inc
xor
ins
das
cmp
add
shr
cmp
sub
add
push
inc
jmp
push
(bad)
les
sbb
mov
add
push
and
xor
xor
sbb
mov
into
sbb
adc
mov
xor
fcmovbe
gs
cmp
inc
push
sti
sub
sbb
adc
lahf
pusha
dec
adc
add
sub
cmp
inc
mov
cmp
mov
xchg
in
add
push
pop
jmp
mov
sbb
imul
in
fbstp
or
mov
push
sbb
dec
pop
daa
sbb
or
and
fstp
mov
ja
inc
dec
sbb
fbld
and
cmp
or
mov
inc
and
cld
push
test
aas
jg
loope
int3
aas
scas
test
dec
enter
lock
imul
clc
dec
mov
jne
lock
sub
push
imul
lea
or
mov
aaa
add
(bad)
(bad)
push
fisttp
lods
cwde
push
cmps
push
and
outs
add
mov
adc
fcomip
dec
xor
mov
test
sub
and
or
jecxz
inc
(bad)
xchg
fistp
lahf
mov
xor
les
lds
pop
fdiv
push
mov
xchg
ret
hlt
test
in
js
aad
call
popa
test
and
push
jecxz
dec
lahf
outs
dec
sub
fdiv
(bad)
sub
sbb
push
fistp
ss
aas
xchg
pmulhuw
cwde
add
mov
(bad)
in
cmp
pop
ror
sbb
mov
test
mul
test
addr16
push
xchg
ins
push
aam
or
push
mov
mov
and
mov
mov
stos
enter
(bad)
sub
daa
ins
or
mov
add
inc
cmp
push
push
xor
mov
sbb
mov
adc
xor
adc
and
test
mov
inc
xchg
fmul
rcr
xor
xor
add
std
(bad)
jne
or
and
push
dec
cwde
pop
inc
or
add
jne
leave
adc
xor
pop
ret
fbld
js
daa
std
cmp
push
adc
loopne
pop
repnz
call
mov
mov
add
jmp
repnz
test
push
adc
out
and
les
add
bound
or
inc
call
sbb
std
cmp
scas
xchg
add
out
cmp
lock
adc
mov
and
adc
mov
pop
push
xor
adc
popa
ret
inc
push
test
shr
enter
(bad)
aam
adc
push
jg
jo
test
cmc
dec
inc
dec
idiv
or
mov
sub
adc
fisttp
mov
pop
cmps
mov
pop
pop
sub
(bad)
jl
jmp
adc
inc
lods
dec
mov
xchg
mov
add
mov
sub
dec
movs
push
lods
test
adc
je
or
and
es
cmc
and
mov
sbb
sbb
push
mov
inc
mov
xchg
daa
push
rol
or
push
pop
enter
and
or
es
clc
jl
ds
in
je
call
and
fnsave
push
mov
les
dec
inc
mov
ins
or
leave
or
sbb
inc
jl
pusha
and
ror
mov
xchg
(bad)
cmp
mov
adc
call
dec
mov
jno
fcom
adc
jmp
(bad)
mov
clc
mov
mov
cmc
pop
and
sbb
jle
inc
mov
push
inc
mov
retf
cld
scas
mov
shr
pop
sbb
movups
jmp
or
sub
comiss
stos
je
mov
xchg
add
xchg
mov
call
push
dec
cld
sbb
pop
int3
add
es
jl
mov
sub
push
call
test
push
mov
scas
inc
cmps
cld
and
adc
(bad)
fsubr
mov
test
xchg
mov
push
xchg
cwde
mov
test
pushf
xchg
lock
and
inc
jo
and
mov
shl
mov
movs
test
mov
mov
add
add
aas
adc
add
and
and
ins
pop
add
and
or
scas
cmp
adc
and
adc
push
and
cmp
pop
(bad)
sub
(bad)
loopne
inc
lock
xor
pop
cmp
mov
push
inc
test
cmp
jmp
inc
pop
or
mov
loopne
adc
mov
push
call
push
mov
jmp
sbb
mov
sbb
inc
cli
cdq
adc
retf
les
push
aam
ret
jo
push
stc
and
daa
daa
push
inc
lods
push
or
sub
push
adc
popa
adc
(bad)
dec
cmp
int3
int3
jg
push
inc
or
jo
mov
push
jg
jecxz
pop
push
aas
push
mov
and
xor
gs
std
mov
shl
push
add
and
pop
lea
pop
inc
rol
stos
sbb
adc
add
test
aas
pop
add
jl
aam
or
test
mov
aas
cmovbe
pop
aas
push
pop
test
mov
movs
jg
fwait
push
pusha
add
jg
add
add
mov
add
lock
add
or
or
mov
jle
mov
add
or
cwde
es
aas
lods
jmp
jmp
cmc
mov
or
dec
out
dec
sbb
push
inc
xchg
movs
lahf
arpl
add
call
adc
sbb
jb
fmulp
test
ins
imul
jg
pop
dec
ins
scas
push
jg
pop
stos
or
ret
popa
fbstp
and
push
add
push
jp
inc
and
lahf
adc
mov
cmc
cmp
or
add
add
add
add
dec
out
sbb
adc
into
fwait
pop
fdivr
fisubr
rcl
lahf
push
fs
and
cld
inc
and
call
ins
jno
bound
stc
addr16
jg
mov
push
pop
dec
adc
push
cmp
dec
adc
test
test
push
bound
sub
sar
sar
sub
push
and
and
adc
je
and
or
jg
push
add
adc
movs
ins
or
sub
nop
push
test
mov
push
or
adc
mov
and
or
inc
cmp
pop
push
pop
add
xchg
ins
cld
ret
dec
mov
popa
aad
aas
mov
ins
and
mov
add
pop
jno
pop
mov
add
mov
jbe
mov
ds
icebp
mov
sbb
ror
mov
dec
or
sbb
or
retf
add
sub
jbe
and
adc
imul
adc
outs
push
xchg
(bad)
xchg
add
int3
mov
test
sbb
dec
popa
call
xor
and
and
fisub
dec
or
inc
and
inc
and
adc
push
mov
cmp
or
(bad)
sub
sbb
sub
outs
pop
pop
lds
jl
mov
mov
jae
dec
and
add
add
push
aas
add
jl
adc
mov
sbb
cs
ret
xor
mov
repz
mov
and
fs
add
add
sbb
fs
mov
cwde
sub
pop
or
and
jmp
push
or
lahf
xor
pop
sbb
dec
leave
mov
aas
cmp
xchg
or
(bad)
push
adc
inc
jno
xchg
lahf
push
inc
push
inc
mov
and
psraw
or
(bad)
sub
mov
outs
sub
or
jne
imul
xor
sub
je
in
or
arpl
mov
sbb
jne
pop
ja
cwde
mov
sbb
mov
adc
aam
sti
rcl
les
pop
adc
or
mov
fmul
(bad)
mov
push
push
push
adc
imul
gs
or
push
ins
jb
(bad)
jns
nop
push
xor
mov
add
push
cmp
pop
and
add
ins
add
mov
adc
rcr
add
pusha
cmp
fisttp
adc
push
test
add
or
add
or
cmp
lods
cmp
adc
and
push
stc
aas
adc
adc
sub
add
push
mov
retf
js
cmps
dec
pop
add
popa
inc
in
dec
ins
mov
sub
jp
loopne
popa
adc
mov
or
sti
shr
push
pop
xor
test
dec
push
test
mov
mov
clc
inc
and
rcl
push
add
mov
xor
jp
dec
fidiv
add
or
cmps
mov
rcr
and
push
icebp
adc
nop
cli
and
mov
inc
and
mov
loopne
mov
jne
cld
pop
xchg
pop
add
push
push
push
xchg
cmp
push
xor
jnp
xor
cwde
xor
and
jne
pop
sub
or
pop
cmp
inc
or
inc
jmp
xor
adc
adc
xor
dec
dec
aas
es
mov
add
std
dec
sbb
sbb
enter
sub
or
jbe
outs
(bad)
and
xor
or
dec
shr
sub
push
dec
mov
rcr
lahf
mov
push
adc
mov
dec
inc
sar
lahf
xchg
mov
daa
and
nop
clc
pop
adc
sub
inc
nop
inc
sub
test
lea
mov
adc
ror
lahf
push
sbb
(bad)
fist
mov
in
mov
daa
adc
mov
mov
mov
mov
mov
je
ds
push
int3
sbb
push
add
aad
add
sbb
call
shr
xchg
xor
adc
add
add
test
and
sbb
sub
add
mov
add
mov
lds
lea
hlt
sub
adc
pop
mov
rcr
ins
je
pop
nop
and
and
adc
sbb
add
jg
gs
push
xor
ret
test
push
adc
icebp
push
pop
movs
and
(bad)
mov
arpl
add
or
sbb
lods
pop
jge
or
test
dec
fdiv
dec
push
sub
shl
mov
mov
call
stos
nop
add
mov
push
add
dec
push
add
push
jge
sbb
sbb
dec
xor
mul
adc
mov
cs
imul
ffree
and
add
add
add
sbb
adc
(bad)
in
jmp
add
(bad)
push
cmps
pop
mov
adc
ins
mov
push
mov
mov
pop
out
pop
mov
push
call
fwait
xchg
xchg
lea
push
mov
test
cmp
mov
jmp
xchg
inc
pop
pop
jecxz
push
add
add
mov
(bad)
and
mov
adc
mov
jg
push
adc
cmp
pop
sbb
or
sbb
ret
and
and
cmp
adc
cwde
push
mov
inc
jmp
(bad)
push
dec
pop
(bad)
pop
jg
jmp
sub
xor
cmp
sbb
mov
dec
jge
das
inc
jmp
movq
mov
jae
xor
and
pop
inc
sar
sub
(bad)
dec
or
or
inc
add
or
xchg
jb
movs
and
xchg
xchg
sub
jle
add
pop
into
push
stc
sub
mov
inc
inc
pusha
gs
xchg
push
mov
and
adc
push
or
inc
pop
pop
dec
call
adc
in
add
inc
add
xchg
and
dec
fmul
dec
dec
mov
mov
cmc
dec
adc
test
sbb
imul
and
add
mov
mov
ror
bound
xlat
arpl
and
and
sbb
add
lea
lods
je
add
inc
adc
jmp
cld
dec
loopne
cmp
pop
add
pop
mov
in
add
dec
mov
sbb
mov
adc
retf
shl
push
jne
dec
push
bound
or
jno
mov
dec
pop
js
or
popa
sub
icebp
xchg
std
jmp
jmp
scas
push
add
cmp
dec
push
jmp
ret
mov
or
(bad)
sbb
cmp
push
inc
ret
mov
loopne
sbb
push
jmp
fld
mov
fisttp
sub
ror
adc
mov
dec
or
icebp
pusha
fild
ins
aam
cmps
ret
push
aaa
pushf
mov
inc
cmps
or
fild
sbb
adc
es
adc
aas
add
pushf
mov
lahf
nop
xchg
js
xchg
sub
sbb
and
xchg
xchg
mov
aas
fs
adc
imul
adc
sub
rol
inc
adc
push
sub
xor
or
aad
fwait
mov
cmc
call
hlt
jle
arpl
add
js
xor
xor
outs
push
inc
pop
jno
push
mov
or
hlt
retf
hlt
push
jne
xor
(bad)
jmp
add
lods
or
std
out
or
out
cmp
sub
and
or
inc
retf
repz
and
mov
pushf
or
mov
push
mov
pusha
ret
jmp
mov
inc
inc
stos
or
mov
in
mov
cmp
pop
or
ficom
or
xor
in
jmp
mov
je
xor
push
mov
mov
xchg
loope
sbb
or
push
adc
lods
adc
jae
pusha
add
ficomp
or
add
or
xchg
lahf
cmps
jo
add
add
inc
sbb
rcl
sub
arpl
mov
js
lea
sub
inc
js
test
xor
pusha
fimul
mov
or
adc
mov
or
inc
aad
adc
mov
scas
or
es
cmp
arpl
dec
sub
mov
add
sbb
mov
rcr
dec
and
sahf
xor
adc
push
sub
adc
add
add
xor
jmp
imul
add
mov
or
inc
cmp
sbb
mov
or
pop
adc
xor
jl
mov
(bad)
mov
sahf
inc
sub
push
push
xor
rol
dec
sub
and
test
push
pop
or
mov
xlat
dec
movs
sbb
mov
xor
add
(bad)
xchg
inc
push
clc
sbb
icebp
fwait
or
(bad)
push
sub
xor
pop
push
dec
and
jle
cmp
pop
sar
mov
pop
mov
add
add
mov
jl
bound
jbe
and
jp
mov
cmp
leave
xor
mov
ror
or
rcl
lea
int
cwde
and
cdq
ins
nop
out
add
jbe
adc
sub
jbe
or
and
mov
sub
xchg
push
cmps
or
daa
ret
push
or
xchg
dec
sbb
data16
and
adc
sub
aad
xor
push
cmovns
mov
or
cmp
push
xchg
sub
movs
inc
lods
ret
sar
adc
outs
pop
xor
mov
xor
ins
pmulhuw
xchg
(bad)
jne
mov
popa
push
sub
(bad)
in
(bad)
rcr
pop
ss
sub
or
or
jmp
and
cli
iret
cli
push
lea
push
xor
mov
outs
and
cwde
imul
data16
add
mov
sub
or
or
pop
adc
xchg
ret
sbb
mov
pop
ret
inc
and
xor
fisubr
inc
push
push
push
jae
movs
sub
cmp
dec
lods
cwde
mov
jecxz
adc
xor
cmp
and
mov
pushf
mov
push
ret
sbb
pop
mov
mov
jmp
jmp
pusha
adc
pop
shl
xchg
push
xor
xor
jle
movzx
(bad)
outs
aas
xchg
push
and
add
and
and
aas
mov
xchg
cmp
sbb
dec
jmp
dec
loopne
mov
or
sub
sub
gs
dec
xchg
cwde
std
xor
sbb
or
mov
inc
or
ret
and
shl
sbb
xchg
or
ret
sub
mov
outs
add
pop
dec
arpl
sbb
xor
fld
dec
and
loope
cld
das
fcom
pop
push
or
dec
mov
push
or
xchg
aam
ror
popf
and
and
adc
in
inc
dec
dec
sub
lds
stos
xchg
adc
xchg
cmps
push
and
xchg
dec
adc
stos
adc
push
dec
and
and
adc
popa
and
add
push
add
adc
jle
xadd
outs
(bad)
(bad)
inc
rol
cmp
outs
xor
les
into
mov
or
int3
int3
lahf
dec
add
mov
enter
mov
add
dec
mov
js
add
push
dec
mov
mov
inc
and
add
cmp
add
nop
adc
inc
xchg
add
mov
inc
ret
stos
and
push
add
mov
(bad)
adc
and
aam
mov
mov
das
stos
and
loop
xor
mov
(bad)
push
aaa
pushf
mov
add
js
adc
(bad)
push
fisttp
aad
mov
lea
xchg
add
jne
mov
and
add
mov
lds
pop
aas
cmp
mov
and
rcl
aad
push
and
sbb
pop
push
int
add
or
sbb
sub
and
and
or
(bad)
cmp
fiadd
mov
push
add
xor
(bad)
fcom
push
sub
lahf
es
add
inc
aas
inc
in
mov
cli
jge
adc
lea
add
nop
mov
inc
xchg
repz
mov
mov
sar
or
and
jg
mov
mov
arpl
add
jecxz
or
inc
inc
add
mov
add
or
int3
fistp
fbld
add
ret
and
mov
aaa
pushf
add
or
ret
inc
add
test
pop
daa
inc
xor
bound
mov
fadd
adc
cdq
mov
lods
mov
addr16
jmp
test
push
push
mov
dec
mov
inc
or
add
push
push
or
cmovb
ret
or
cmp
push
and
mov
les
sub
(bad)
mov
inc
and
sbb
or
(bad)
movs
push
jae
mov
and
add
xor
jl
or
sbb
test
inc
imul
push
aad
adc
adc
jno
push
test
cmp
mov
pop
mov
loope
imul
shl
imul
or
(bad)
cwde
mov
xor
and
mov
mov
fistp
mov
nop
pop
mov
mov
dec
pop
cmp
(bad)
lods
pop
push
mov
mov
push
mov
push
adc
and
ffreep
jne
xchg
xchg
add
test
jmp
fcomp
push
imul
rol
popa
nop
scas
outs
add
and
mov
cmps
sub
pop
aam
mov
imul
pushf
push
sbb
nop
pop
add
inc
inc
sbb
inc
inc
daa
sar
xchg
add
sub
loopne
or
ret
int3
enter
arpl
sub
push
jmp
xchg
pop
call
loope
mov
and
push
adc
add
mov
arpl
adc
hlt
repz
add
mov
mov
nop
les
aas
and
sub
push
xor
movs
xchg
push
inc
push
cld
and
cmp
add
inc
cld
dec
sub
sbb
jp
test
pop
push
sbb
inc
push
mov
imul
add
imul
and
dec
pushf
xor
cld
push
inc
inc
jecxz
dec
jbe
jmp
das
test
icebp
rcl
pop
loope
sub
(bad)
mov
mov
add
sub
je
das
jecxz
sub
jno
inc
pushf
and
sbb
inc
pop
xchg
sbb
loope
sbb
lahf
lock
dec
movs
in
jae
add
jae
scas
push
in
add
xor
dec
pusha
and
inc
pusha
jg
jne
sub
mov
add
or
arpl
clc
sub
inc
mov
cmp
neg
not
rol
sub
rol
or
shr
adc
psubusb
xor
or
ins
cmp
int3
cmp
xor
and
iret
mov
pop
hlt
and
ror
add
xchg
or
cld
mov
out
jg
add
or
jmp
jmp
xchg
and
xor
mov
enter
ins
dec
jae
xor
retf
pusha
ja
push
sub
push
dec
shl
ret
or
int
or
inc
sub
add
adc
(bad)
(bad)
xor
test
or
sub
pop
outs
mov
push
cmp
ret
jecxz
cmc
or
ficomp
clc
push
jmp
and
sar
or
or
and
inc
or
aad
or
dec
in
add
push
stos
xor
pop
add
std
jne
clc
add
fld
sbb
inc
not
je
sar
xor
add
add
fnstsw
push
adc
add
or
sbb
ret
fisubr
xchg
mov
jmp
fild
xor
push
leave
push
inc
into
jl
sbb
shl
ins
push
stos
dec
adc
sbb
push
aas
test
inc
and
test
inc
mov
mov
dec
inc
dec
je
mov
adc
xlat
and
and
add
dec
jg
jl
rol
add
mov
push
dec
mov
or
fistp
sub
jg
clc
or
pusha
add
mov
mov
sbb
add
fdivr
xlat
add
inc
dec
add
xor
cmp
push
fisub
nop
cmp
adc
nop
out
sahf
xor
sbb
sbb
add
or
inc
xchg
pop
sub
mov
mov
pop
sub
and
lahf
fimul
mov
or
cmp
dec
mov
icebp
dec
add
or
mov
retf
test
lock
adc
push
mov
sbb
movs
adc
test
and
and
jne
std
inc
adc
pop
scas
adc
mov
mov
xor
inc
pop
push
ja
xchg
sahf
shr
jg
push
xchg
pop
stos
sub
jo
shl
inc
aaa
xor
cli
pop
jg
xor
jnp
xor
dec
dec
add
sbb
(bad)
adc
pop
dec
dec
add
xchg
neg
cwde
lahf
pop
popa
or
daa
cmp
bound
rcl
je
test
add
loopne
adc
popa
dec
cmp
mul
lods
lock
pop
ss
dec
inc
test
hlt
cdq
sbb
rcr
adc
push
add
cmp
fcomi
push
fild
adc
retf
and
je
cmp
addr16
pusha
adc
or
mov
jl
jbe
mov
pop
mov
add
and
ror
movs
xchg
or
int3
scas
shl
(bad)
daa
imul
sbb
push
jo
push
sbb
push
inc
retf
in
push
add
xchg
cmp
or
ss
xchg
or
loop
mov
sub
mov
push
sub
and
jl
jmp
scas
das
adc
jmp
add
popa
mov
lds
dec
jecxz
jle
add
lock
fucomi
dec
mov
ret
leave
xor
or
pop
and
add
cmp
ins
retf
ins
test
dec
mov
imul
retf
gs
sub
push
(bad)
pusha
inc
movs
cmp
inc
fisttp
or
imul
retf
adc
inc
cli
push
imul
or
fwait
les
jmp
das
pop
sub
popa
pop
push
adc
dec
mov
leave
movs
test
test
xlat
dec
pop
fcom
ret
mov
icebp
xchg
adc
lds
in
test
outs
and
ins
clc
clc
jne
mov
jmp
pop
sub
pop
and
push
mov
fsubr
enter
inc
add
dec
push
sub
inc
prefetch
mov
push
sar
xchg
push
pushf
dec
mov
adc
pop
push
pop
shl
sbb
cmp
imul
sub
add
inc
mov
test
int
push
sub
rol
sbb
inc
pop
push
cmps
rol
arpl
mov
mov
adc
inc
sbb
add
add
loop
data16
mov
cmps
push
adc
or
add
ror
mov
cld
mov
outs
clc
ds
mov
jmp
cmp
sar
or
push
test
pop
pop
nop
xchg
sbb
xor
dec
mov
and
push
push
lods
and
gs
jmp
inc
mov
arpl
pop
xlat
clc
sbb
sub
push
mov
lahf
add
mov
push
fstp
add
sub
push
mov
jg
nop
mov
dec
hlt
movs
adc
add
dec
pop
xor
sub
or
pop
mov
push
out
adc
mov
test
add
pop
pop
dec
inc
sbb
sub
mov
push
and
mov
cmc
rcl
add
push
pop
sbb
add
mov
push
lods
dec
es
les
pushf
jl
js
pop
add
sbb
cmps
sub
dec
sub
push
cmp
and
(bad)
sub
ret
jmp
push
pop
out
adc
rol
les
or
pop
rcl
es
and
rcr
dec
(bad)
lock
call
ja
popa
test
ret
idiv
jae
sbb
sbb
lock
xor
add
sub
mov
dec
add
xchg
cld
cwde
push
push
push
add
fs
imul
and
(bad)
push
pop
call
ins
lods
lahf
add
xor
leave
mov
or
(bad)
jo
sbb
popf
in
jg
inc
mov
fadd
lock
mov
clc
inc
clc
xchg
ja
popa
adc
ret
inc
fs
sbb
mov
dec
or
add
xchg
cwde
js
lea
aaa
xchg
xor
popf
push
fs
jg
ja
push
xchg
adc
and
mov
dec
xor
add
test
or
test
and
in
pop
mov
sub
loop
xchg
xor
lock
jmp
sbb
sub
pop
or
movsx
mov
loope
or
xchg
js
adc
add
fild
adc
inc
neg
mov
push
jle
or
jne
cdq
cdq
fs
xchg
dec
(bad)
push
or
add
add
shl
inc
sbb
and
sbb
mov
xlat
push
stc
ins
test
adc
sub
add
pop
and
add
xor
call
rcl
lock
or
mov
repz
jecxz
pop
mov
sbb
dec
mov
lock
and
fdivr
mov
or
enter
and
ret
pop
and
inc
add
add
add
mov
dec
push
jns
or
retf
fisub
add
add
je
je
sub
clc
je
aam
and
movs
and
mov
xchg
test
sub
je
xchg
stc
sub
dec
and
cmps
jnp
push
or
add
hlt
and
and
and
or
cdq
lock
xor
in
lock
mov
in
cdq
retf
ret
in
pop
adc
xchg
add
mov
cmp
test
adc
fmulp
jne
adc
ja
pop
and
into
aaa
aam
adc
and
jbe
cmp
mov
push
call
enter
jmp
mov
repz
add
cmp
aas
sub
lock
push
xchg
in
aas
pop
xchg
dec
push
in
in
dec
pop
cs
in
call
cwde
and
nop
aas
movs
leave
mov
in
mov
sub
les
or
and
xor
test
jb
push
ds
ja
sub
pop
pop
jb
mov
jbe
outs
ret
inc
test
or
call
sub
mov
mov
inc
leave
adc
or
sbb
ins
mov
clc
jns
adc
add
push
fdivr
xchg
add
push
rcl
adc
inc
rcr
adc
and
ret
out
shl
daa
shl
int3
mov
adc
push
inc
add
sbb
add
pop
jmp
rcl
rcl
rcl
sar
rcl
adc
inc
push
or
xchg
inc
lds
pusha
sbb
add
lea
and
imul
jae
shr
inc
dec
sar
mov
jmp
or
loopne
jmp
fild
adc
push
mov
adc
dec
repnz
add
jne
lea
les
jo
jne
or
fdiv
fistp
mov
sahf
add
loopne
jns
aaa
mov
sar
mov
clc
enter
jp
push
or
test
enter
call
or
imul
cmp
nop
test
nop
cmc
push
add
mov
adc
jle
jno
scas
sub
popf
pop
scas
add
test
imul
fisubr
mul
mov
push
shl
add
jge
pop
mov
sbb
pop
adc
pop
mov
jno
xchg
mov
adc
(bad)
push
xor
fstp
sbb
pop
cmp
(bad)
shl
or
pop
hlt
fnsave
inc
dec
outs
or
clc
fmul
xchg
jmp
test
cmp
and
pop
jge
ret
cmc
mov
nop
fcom
xchg
add
mov
inc
jb
je
xor
cmp
pop
bound
jmp
mov
and
push
mov
js
push
and
dec
or
jns
loope
mov
push
add
mov
mov
repnz
add
lahf
leave
pop
add
mov
and
ins
arpl
ror
xlat
and
mov
sbb
leave
sbb
sub
aas
loop
add
push
or
jmp
dec
mov
add
aas
jns
in
mov
loopne
jmp
cmp
enter
enter
inc
shr
sub
fstp
or
ds
mov
mov
xchg
jl
xor
and
mov
add
jecxz
loopne
add
xchg
adc
ret
mul
test
mov
stos
mov
ror
rcl
pop
xchg
loopne
test
popa
add
mov
mov
mov
pop
inc
pusha
or
ret
add
or
(bad)
mov
stc
int3
int3
or
mov
popa
pop
lods
pop
test
dec
xor
push
rol
jl
push
popa
pushf
xchg
popa
pop
aad
stos
adc
clc
add
loopne
or
add
(bad)
jns
les
pop
inc
int
add
in
pop
aad
jp
xchg
sub
add
sbb
ins
call
sbb
mov
pop
or
in
mov
and
mov
or
xchg
fsubr
adc
cmps
dec
ja
xchg
addr16
pushf
pop
sub
xchg
and
sbb
push
adc
push
nop
pop
jns
jo
sbb
adc
add
fbstp
pop
dec
call
xchg
xor
ins
sbb
and
arpl
dec
inc
lea
rcr
inc
arpl
dec
rcl
add
xchg
lea
test
sbb
jo
inc
les
or
xor
adc
imul
sbb
(bad)
ins
sbb
stos
cld
mov
jmp
inc
jmp
fld
jnp
xchg
adc
add
sub
xchg
dec
bound
xor
pop
pop
jnp
popa
int3
inc
cmp
lahf
dec
dec
es
loope
cmp
and
sbb
push
(bad)
(bad)
in
jne
inc
mov
lea
xchg
dec
imul
and
iret
dec
adc
jl
mov
push
or
add
arpl
mov
mov
test
mov
rol
add
sub
dec
in
fld
or
adc
xchg
add
sbb
addr16
sar
lea
or
mov
cmps
sub
sti
jne
mov
repz
mov
add
add
fmul
or
and
out
add
cmp
mov
add
lods
push
jmp
inc
popa
inc
mov
and
cmps
jno
xor
jns
arpl
les
movs
pusha
cmp
jg
sti
call
leave
loopne
lea
enter
jge
fwait
cmp
mov
imul
lock
bound
ins
fdiv
add
clc
push
mov
out
and
fdiv
ret
lea
add
inc
loop
jmp
jg
or
sbb
jnp
dec
mov
cmps
cmc
dec
mov
les
cmp
repz
dec
or
inc
or
push
(bad)
fwait
xchg
enter
pop
shl
call
inc
in
scas
nop
sub
pop
cmp
add
rol
imul
scas
call
and
call
sbb
call
or
sbb
out
gs
push
loopne
jae
idiv
xchg
call
mov
inc
lock
sub
(bad)
nop
rcr
push
out
rcr
mov
ficomp
clc
sbb
push
mov
xchg
jp
cmp
jmp
push
xor
mov
pop
add
test
xor
sub
shl
and
scas
imul
or
push
add
aam
jb
call
push
xor
in
dec
dec
xor
ror
mov
dec
lea
and
enter
dec
mov
sbb
xchg
sub
test
add
sar
mov
and
fcom
mov
cmp
inc
and
jne
es
dec
int3
xor
dec
xor
ins
mov
das
jg
mov
pop
and
mov
push
cmp
dec
ret
clc
push
sub
cmp
call
jmp
pop
fwait
cmp
and
cmps
mov
rol
aas
fnstenv
(bad)
push
adc
test
cmp
mov
push
fs
inc
mov
inc
jecxz
mov
pusha
cmp
cmp
enter
lahf
adc
clc
or
and
sbb
lahf
pop
es
mov
test
imul
inc
fistp
pop
adc
or
jl
mov
inc
pop
inc
arpl
outs
jl
adc
sub
pop
mov
pop
ins
sbb
xchg
imul
xor
pop
mov
inc
lods
clc
xor
sub
xchg
rcl
ret
pop
daa
data16
pop
mov
inc
add
(bad)
dec
movs
cwde
test
jno
add
jp
shl
inc
mov
leave
inc
mov
arpl
pop
loopne
sbb
les
arpl
arpl
adc
add
inc
das
dec
and
or
mov
iret
pop
mov
outs
adc
push
mov
push
cmp
adc
add
add
mov
cdq
inc
sbb
clc
push
mov
add
adc
inc
and
or
inc
pop
sub
or
das
call
ror
add
xor
and
test
sub
or
jno
test
loopne
pop
fisttp
clc
lahf
push
jno
pusha
add
int3
aas
pop
jecxz
add
adc
imul
hlt
adc
push
imul
push
pop
mov
(bad)
xor
or
shr
mov
dec
sub
adc
cmp
cmp
add
mov
pop
or
pop
or
nop
or
loop
push
push
xchg
dec
adc
mov
sub
rcl
sub
or
in
xor
adc
pop
ror
add
stc
dec
mov
adc
or
les
and
cmp
mov
dec
pop
dec
or
or
pop
pop
gs
js
mov
fisub
xor
add
jns
rcl
call
arpl
sbb
and
adc
lahf
and
jmp
push
je
loope
or
lahf
pop
adc
inc
fnstcw
jg
dec
jae
mov
ror
fadd
lock
add
jne
pop
xor
or
add
sub
fisttp
sbb
jmp
ins
add
arpl
and
mov
pop
into
loope
movs
mov
imul
lods
mov
cdq
xor
pop
dec
pop
mov
mov
mov
mov
mov
push
enter
mov
jns
adc
adc
mov
and
pop
leave
adc
ins
mov
mov
mov
mov
xor
mov
mov
mov
sbb
push
mov
lods
cdq
xchg
sbb
mov
pop
sbb
adc
pop
push
adc
add
call
shl
xchg
inc
in
add
sub
adc
fcmovnb
sar
lock
adc
enter
call
cwde
inc
xor
shl
das
mov
sbb
and
clc
jmp
xor
sub
pop
imul
sbb
and
test
inc
loopne
cmp
scas
imul
jo
dec
xchg
movzx
or
fild
add
mov
and
pusha
jecxz
mov
add
pushf
xchg
adc
jmp
jno
ror
xor
pop
test
fisttp
jmp
xchg
dec
dec
arpl
loope
mov
inc
jno
or
and
nop
aas
sub
inc
sub
add
mov
pusha
mov
inc
cmps
inc
sub
and
enter
arpl
fisub
dec
dec
lahf
aad
xor
jg
adc
inc
outs
nop
inc
or
mov
rcl
neg
or
shr
icebp
imul
push
enter
lahf
mov
pop
ret
enter
dec
pop
dec
and
xor
and
jb
retf
cmc
xchg
inc
bound
sub
adc
add
inc
push
adc
jecxz
mov
cld
popa
pusha
js
inc
sub
push
das
adc
cmp
and
jmp
push
mov
sbb
mov
(bad)
adc
int3
add
fst
ret
and
sbb
es
adc
inc
add
out
sbb
test
sbb
inc
sub
adc
es
xor
fmul
inc
mov
and
mov
aam
rcl
inc
fcomp
pop
and
jnp
xor
bound
pusha
pop
sub
or
inc
mov
popf
sub
cli
push
and
mov
test
adc
pop
sbb
test
(bad)
sbb
xchg
xor
dec
dec
lods
and
pop
(bad)
mov
(bad)
dec
pop
adc
add
adc
popa
jge
or
dec
or
push
daa
or
push
add
call
addr16
les
ret
and
mov
or
sbb
ficomp
adc
pop
or
mov
movs
ret
jno
cmps
and
adc
add
add
adc
xor
push
xchg
push
add
dec
xchg
and
jne
(bad)
push
or
xor
mov
and
aas
call
add
call
xchg
or
imul
pop
adc
push
iret
cmp
fld
sbb
inc
sbb
jne
nop
xlat
inc
fiadd
ret
dec
hlt
sub
nop
(bad)
or
push
sbb
sbb
scas
cli
jg
add
push
sbb
mov
dec
adc
pop
add
mov
(bad)
dec
or
rcl
jb
jecxz
mov
js
cmp
shl
or
inc
push
push
jns
rcr
outs
iret
xchg
jg
inc
adc
enter
sub
dec
sub
pushf
add
sub
int3
mov
and
add
add
inc
call
inc
cmp
call
mov
jno
inc
pop
inc
or
lods
movs
adc
mov
mov
sbb
pusha
loop
mov
push
add
adc
je
iret
xor
add
ror
inc
and
icebp
or
dec
adc
sbb
ins
inc
or
es
mov
mov
cmp
mov
jg
test
or
and
inc
(bad)
lahf
icebp
rol
xchg
jle
pushf
push
mov
mov
jo
add
fld
push
adc
pop
fist
adc
psrld
pop
and
lods
adc
dec
icebp
sub
add
sbb
cli
sbb
test
test
in
lahf
dec
les
adc
lahf
mov
fistp
xchg
xor
jg
push
push
in
pop
add
gs
inc
imul
inc
mov
sub
or
or
and
push
ret
shl
xchg
nop
push
sub
popa
cdq
ss
ss
jecxz
ss
test
ins
loopne
push
add
adc
jne
add
repz
push
push
addr16
add
bnd
jnp
push
mov
daa
sub
or
sbb
sbb
mov
adc
stos
cld
rol
sub
fistp
inc
popa
add
mov
nop
inc
xor
jmp
adc
adc
call
push
xchg
stos
xchg
or
xor
push
or
int
inc
sbb
jecxz
or
rcr
movs
cmp
mov
clc
nop
add
scas
ins
push
mov
add
inc
in
inc
dec
sbb
add
loopne
adc
lea
xor
jp
add
scas
jge
inc
pop
xchg
jge
and
jnp
mov
(bad)
xchg
push
imul
cmp
adc
dec
cli
add
and
sbb
and
cmp
sbb
add
add
cmc
inc
dec
aaa
push
xor
pop
ss
inc
lods
cmp
pop
xchg
sbb
dec
ss
mov
mov
pop
sbb
jb
xor
xor
mov
mov
mov
mov
dec
or
push
aad
call
rcr
and
call
imul
or
push
adc
cmp
mov
jl
inc
data16
mov
ja
jp
mov
or
or
fs
pusha
sti
movs
pop
punpckhdq
or
ret
add
aas
pop
jb
xor
cmp
sub
or
movs
test
ret
sub
test
nop
movs
dec
rcr
sbb
sbb
and
ret
mov
push
test
pop
or
add
movs
aaa
loopne
fwait
mov
or
pop
aaa
mov
cmp
sbb
ret
mov
repz
mov
or
or
test
js
aaa
and
sar
adc
leave
jmp
pop
jmp
mov
sub
pop
fimul
cld
jl
sbb
retf
jmp
push
mov
adc
frndint
jge
sbb
ret
or
aad
shr
sbb
inc
fdivrp
add
sub
cmp
add
test
mov
rol
adc
sbb
cmp
mov
or
ins
add
jl
sti
inc
add
and
jg
(bad)
sub
inc
sub
sub
add
call
push
sbb
ds
or
xor
adc
add
cmp
aam
add
xchg
add
mov
and
fiadd
fisub
(bad)
pop
xchg
push
mov
pushf
shr
les
or
cmp
pop
aaa
sub
in
mov
fs
or
jne
xchg
stos
xchg
dec
cmp
rol
add
add
lods
push
ins
(bad)
cld
cmp
mov
bound
adc
mov
cmp
and
pop
add
es
xor
dec
xor
adc
das
jle
stos
shl
sub
mov
push
add
fmul
scas
ficom
sahf
push
xchg
pop
shr
inc
xor
mov
movs
inc
pop
pop
arpl
imul
js
inc
jns
pusha
sub
pop
inc
xchg
xor
push
push
out
aas
sub
xor
push
test
in
add
inc
dec
jmp
add
sbb
cmp
shr
mov
ret
in
add
fldcw
or
jg
mov
je
(bad)
add
mov
aaa
test
add
imul
imul
test
fwait
aaa
push
mov
sbb
jecxz
sub
es
and
cmc
xor
cs
xor
pop
xor
xchg
and
mov
imul
in
dec
movs
push
shl
and
mov
dec
ss
test
ret
mov
add
call
push
call
inc
inc
add
fsub
mov
adc
aas
push
inc
inc
push
les
add
(bad)
sbb
or
das
leave
test
mov
push
inc
cmp
jne
adc
mov
sub
cmp
sahf
ror
test
outs
jp
pop
sub
xchg
or
aaa
(bad)
cld
lods
add
shl
(bad)
push
aad
mov
in
push
mov
inc
adc
es
lahf
or
je
mov
inc
dec
jmp
xchg
mov
sbb
or
gs
jnp
and
stos
jae
mov
jge
push
les
movs
adc
adc
push
pop
pop
or
xchg
dec
in
mov
dec
mov
inc
adc
gs
ret
add
or
and
ret
pushf
dec
fcmovnb
lock
out
loopne
mov
push
or
fadd
jmp
sbb
or
mov
xlat
mov
cmp
sbb
lea
or
adc
popa
inc
cmp
xchg
jo
and
dec
dec
mov
stc
jmp
cmp
aas
mov
add
push
mov
mov
sti
or
and
adc
jg
sbb
call
inc
mov
inc
mov
xlat
jo
cld
xor
sub
or
adc
push
xchg
jg
dec
add
int
push
in
inc
adc
inc
adc
mov
mov
imul
jge
mov
or
add
pop
jmp
add
ins
jecxz
nop
das
or
mov
sbb
xchg
or
dec
dec
and
pop
inc
pop
add
add
adc
sub
or
fstp
sub
and
add
or
xor
xor
in
inc
add
xchg
xchg
lock
xchg
dec
pop
rol
add
imul
add
test
lods
ds
mov
dec
imul
sbb
adc
or
imul
xchg
lea
add
(bad)
(bad)
mov
pop
add
or
add
ins
cmp
push
adc
push
xchg
cmp
sub
and
adc
out
lods
cmp
push
or
lds
imul
sbb
in
cmp
pop
mov
sub
addps
dec
or
and
jl
aam
and
pushf
ins
add
cmp
xor
mov
push
cmps
jo
sbb
dec
and
retf
or
push
xchg
pusha
xchg
mov
gs
ret
mov
sub
inc
or
aas
leave
mov
clc
mov
bound
sti
and
adc
xchg
lea
mov
subps
jne
iret
jecxz
popf
fidivr
jnp
in
lock
xchg
sub
aas
jge
loope
dec
dec
cld
adc
dec
pop
and
adc
inc
aaa
xor
mov
mov
sbb
push
or
push
sbb
nop
repnz
shr
mov
cmp
icebp
je
mov
adc
mov
ins
cli
arpl
cmps
scas
add
pop
pop
xchg
xor
xor
jg
xchg
xor
mov
movnti
or
mov
push
pop
loope
or
pop
pop
fs
mov
adc
cmp
cmps
sahf
or
clc
stc
adc
sub
leave
xor
in
(bad)
sar
sbb
test
cmp
adc
or
(bad)
xor
pop
call
test
in
xor
add
inc
sub
xchg
adc
jge
icebp
mov
cmp
or
clc
das
rol
xor
or
inc
gs
mov
loopne
add
mov
push
aaa
and
sbb
loope
dec
add
inc
push
xchg
push
scas
gs
push
inc
add
and
in
xchg
sbb
mov
rol
in
adc
mov
mov
and
pop
mov
mov
inc
mov
xchg
fmul
xchg
cmp
nop
neg
rcr
mov
retf
aam
jecxz
loop
repnz
fimul
enter
cwde
pop
xor
add
popa
and
ins
jmp
sbb
push
push
xlat
loop
je
mov
add
push
aad
sbb
cli
jbe
je
popa
xchg
or
mov
dec
push
mov
push
call
test
std
pop
(bad)
out
ins
fldcw
cdq
cmp
lock
pop
cmps
cld
sub
imul
out
or
adc
mov
push
add
jo
push
xlat
adc
jl
lods
cmp
test
jle
adc
adc
cmp
mov
jge
pusha
pop
mov
pop
inc
push
mov
pop
cmc
mov
inc
mov
mov
cmp
mov
div
fidiv
jbe
pop
push
sbb
or
jne
push
sub
push
dec
add
mov
pop
test
jg
std
fidiv
adc
ret
or
or
inc
ds
cdq
xlat
mov
clc
ret
xor
mov
cdq
(bad)
out
mov
jne
pop
ret
mov
sub
data16
or
mov
mov
icebp
inc
jmp
add
mov
and
cmp
ret
inc
jg
lahf
add
fs
inc
sbb
sbb
scas
and
pushf
ins
inc
push
jmp
add
lahf
jg
push
loop
pmulhw
mov
pop
sub
sar
or
call
inc
ja
fisttp
js
jo
cmp
dec
in
aaa
sbb
and
adc
or
jnp
jle
mov
xchg
sbb
or
cld
xchg
jno
inc
jbe
int
sub
or
lods
dec
cld
add
out
clc
ror
pop
jo
push
xchg
inc
push
dec
sar
retf
mov
push
mov
adc
mov
repz
sahf
inc
sti
daa
mov
push
in
push
sbb
or
in
adc
(bad)
ins
cld
xchg
loope
and
std
pop
mov
pop
mov
aam
adc
mov
or
hlt
dec
mov
xchg
and
xchg
call
ins
(bad)
or
adc
pop
sub
rcl
inc
or
enter
or
ds
retf
cdq
sbb
pusha
mov
rol
ins
rcl
mov
mov
pop
aaa
xor
xor
ins
mov
pop
ins
mov
aaa
add
jb
fadd
pop
or
and
mov
mov
adc
test
test
inc
sbb
pop
fistp
aaa
test
sub
or
xchg
cdq
es
les
jns
sub
xor
sbb
(bad)
sar
lods
test
xor
shl
mov
inc
dec
adc
gs
test
fbstp
inc
shl
xchg
loope
push
or
sbb
frstor
daa
sbb
fnstsw
sub
sbb
or
jo
xor
push
sbb
lea
pop
xchg
xchg
fdiv
cmp
jne
or
mov
bndstx
add
xor
lock
inc
aas
xor
(bad)
fsubr
adc
push
movs
pop
mov
mov
outs
adc
or
sbb
pop
sbb
pop
push
inc
hlt
or
fbld
push
push
mov
sbb
(bad)
and
(bad)
movs
inc
lods
nop
mov
sahf
aaa
pop
pusha
pusha
adc
shl
or
cwde
inc
cdq
add
mov
push
adc
pop
xor
and
ds
mov
test
add
(bad)
les
clc
std
or
push
or
cmp
cmp
stos
fld
push
xor
pusha
mov
inc
test
push
nop
call
pushf
es
sbb
push
xchg
scas
xor
sub
sub
mov
push
shr
add
pop
or
lock
add
jg
inc
xor
clc
rcl
add
mov
push
or
lods
lods
push
cld
push
mov
pop
cmps
and
mov
lods
shl
daa
test
jmp
add
sbb
and
inc
or
inc
inc
fcom
push
sub
mov
retf
add
inc
inc
pushf
fs
jp
dec
arpl
push
mov
sar
inc
hlt
inc
push
movs
mov
inc
push
mov
sub
adc
and
or
pusha
jg
js
outs
mov
shr
les
sbb
loop
loopne
ins
adc
mov
mov
jg
fcom
jo
push
daa
aaa
(bad)
pop
or
cmps
dec
push
inc
cwde
inc
or
ret
sub
and
sar
and
mov
test
add
fnstsw
cmp
rcl
mov
popf
lahf
xchg
xchg
xchg
mov
lods
lods
pushf
(bad)
sbb
ret
jecxz
add
mov
mov
add
push
add
dec
add
cmp
jns
mov
mov
rol
movs
push
aam
fdiv
scas
test
cmc
and
inc
daa
and
jge
mov
fwait
xchg
icebp
lahf
push
pop
mov
pop
sbb
mov
test
jbe
and
add
test
and
add
add
xlat
or
(bad)
(bad)
jle
ror
ret
std
mov
sbb
je
(bad)
cld
jb
test
xor
push
fimul
lods
imul
push
fcmovu
inc
dec
sub
ret
adc
std
lods
jmp
in
aas
sub
add
clc
mov
gs
daa
sbb
fsubr
lods
add
cs
pop
or
adc
leave
ss
sbb
or
jp
cmp
push
movs
push
push
in
dec
jae
ss
adc
or
dec
int3
jne
mov
sub
add
add
pushf
nop
and
add
and
ins
sub
mov
ret
mov
sbb
and
movs
test
ror
leave
xchg
test
sub
mov
arpl
das
pop
xor
adc
aas
jbe
xchg
jg
dec
pusha
mov
mov
(bad)
clc
ror
in
xor
ret
loop
inc
cmp
cmps
jno
ja
xchg
adc
daa
movs
and
loop
ret
xor
adc
xlat
and
add
cmps
test
add
ins
fild
and
test
add
and
addr16
mov
mov
mov
cmp
add
push
xchg
popf
(bad)
shl
inc
xchg
movs
or
dec
pusha
sub
push
ret
fiadd
add
mov
inc
xchg
mov
loop
jmp
and
or
(bad)
clc
popa
or
and
scas
lds
mov
mov
aad
shl
ins
push
inc
and
hlt
push
sub
or
test
dec
sahf
test
nop
push
test
pop
mov
mov
pop
mov
psubsb
je
or
fcomp
hlt
test
mov
test
adc
jae
adc
xchg
cmp
jno
(bad)
jne
xor
je
push
push
add
jmp
loopne
retf
lock
xor
adc
and
sbb
and
inc
push
xor
mov
or
cmp
add
aas
fmul
mov
popa
and
cmp
and
adc
das
lea
add
pop
inc
push
and
push
add
fild
pop
jmp
or
and
dec
scas
mov
inc
dec
mov
or
mov
inc
loope
jg
test
add
lods
mov
fnstcw
add
jg
aas
xchg
inc
jb
and
push
inc
std
or
jbe
lods
les
mov
or
mov
push
xchg
adc
dec
jge
in
lahf
pop
enter
adc
dec
push
cmp
mov
or
mov
movs
cwde
out
jmp
push
adc
loopne
lods
clc
mov
(bad)
jmp
jns
push
add
or
jno
pop
(bad)
push
add
dec
inc
xor
push
cmp
xchg
or
fs
fsub
movs
adc
inc
sub
retf
and
cmp
in
and
sub
xchg
xchg
dec
cmps
push
jb
aad
fsubr
push
and
or
mov
pop
aam
push
popa
cmps
xlat
mov
aam
lods
in
inc
sbb
fcomp
popf
shl
adc
mov
cmp
push
adc
pop
and
aaa
rol
cmps
aam
sar
test
fild
push
or
fistp
mov
pop
stos
mov
lock
xchg
ins
xor
sahf
pop
or
adc
nop
mov
lock
adc
and
ror
sbb
fs
ds
es
ds
aaa
fs
fs
jmp
iret
add
bound
sub
adc
pop
add
pop
push
sbb
push
je
cmp
mov
xlat
test
retf
xlat
nop
mov
xlat
ja
popa
rol
and
sub
mov
sbb
jnp
push
int3
push
xchg
sbb
cld
fnclex
pop
dec
pop
pop
lahf
jg
cs
out
pop
mov
push
add
int
adc
pop
out
mov
mov
pusha
fild
arpl
fxch
out
ins
bound
jo
arpl
inc
mov
mov
sbb
mov
pop
push
mov
pop
mov
ins
push
and
jne
fnstcw
or
(bad)
aaa
pop
dec
inc
clc
jg
fs
std
pop
adc
jmp
movq
movaps
fs
enter
shl
jle
cmps
outs
(bad)
and
push
ror
test
push
dec
cmp
ss
and
retf
out
jg
adc
mov
mov
ret
adc
(bad)
jnp
mov
mov
push
mov
sahf
adc
shl
adc
push
add
adc
rcr
pop
add
fld
ret
mov
mov
jo
dec
pop
and
addsd
int
xor
ficom
sbb
sbb
and
cs
shl
add
nop
cwde
or
sti
add
push
(bad)
xlat
mov
test
imul
rol
fadd
adc
sub
mov
test
neg
push
add
test
or
ror
je
test
repnz
dec
lods
adc
aas
gs
pop
dec
jmp
mov
sbb
scas
adc
retf
or
pusha
les
and
xor
adc
(bad)
mov
jnp
dec
pop
es
adc
dec
retf
push
xlat
add
push
or
jns
mov
dec
pop
mov
aaa
loope
(bad)
dec
xor
inc
adc
fnstcw
fwait
arpl
popa
adc
or
inc
shl
add
xor
(bad)
adc
lock
inc
dec
sub
or
popa
adc
sbb
and
xchg
dec
add
add
rcr
pushf
pusha
and
rcr
add
dec
inc
mov
and
cmp
loop
sbb
fdivr
rol
adc
lock
rcl
shl
fmul
in
xchg
xchg
adc
sub
cmp
xchg
(bad)
aad
call
cmp
movsx
shl
pushf
sbb
in
or
test
add
push
xchg
and
push
fcom
loop
sbb
sub
ret
rol
sbb
mov
xor
push
and
arpl
and
add
adc
movs
adc
shr
pop
popa
mov
pop
fisubr
cmp
dec
inc
dec
jge
out
setp
lds
mov
jg
jl
pop
push
mov
cli
or
test
sub
or
and
push
ins
cmp
add
aaa
push
movups
test
nop
je
aaa
movs
mov
not
and
aad
stc
imul
mov
or
(bad)
aam
inc
out
loopne
xor
add
or
and
mov
mov
cmps
jno
mov
popa
in
lock
data16
push
pop
test
or
cmp
add
sbb
or
adc
mov
jmp
ss
movs
pop
or
mov
ins
add
mul
cwde
shr
or
pop
xchg
pusha
and
adc
ins
rol
(bad)
in
lds
loop
inc
in
lahf
ficom
loop
shl
add
mov
outs
(bad)
shl
sbb
(bad)
sub
xchg
dec
add
sub
add
nop
mov
xor
enter
or
sub
sbb
adc
shr
or
jne
xor
pop
push
adc
mov
mov
and
or
adc
sbb
inc
pop
imul
loopne
sbb
lock
adc
cli
fstp
(bad)
push
fst
mov
pop
dec
sub
pop
or
or
sbb
vpunpckhdq
pop
cmp
outs
ror
cmp
pop
fist
cmc
mov
clc
xor
ret
ret
adc
pop
sub
adc
xchg
push
clc
add
add
ins
push
daa
inc
loope
or
mov
mov
jg
mov
js
jne
adc
inc
call
ror
sub
and
cld
cs
and
das
or
movs
mov
lahf
lea
(bad)
mov
cmovno
shl
ins
xchg
mov
sbb
pop
(bad)
cwde
gs
hlt
adc
outs
add
rol
ret
or
sub
xlat
xchg
retf
adc
jmp
add
les
add
ins
mov
adc
jne
xor
dec
add
dec
push
xchg
mov
dec
add
sub
adc
fsubr
sbb
xor
lods
jmp
lea
or
cld
(bad)
arpl
xlat
out
faddp
nop
repnz
mov
pop
jg
or
or
adc
xchg
push
sti
ret
shr
in
popa
mov
xor
mov
and
adc
rcl
push
leave
fdiv
and
into
mov
inc
adc
sub
adc
sub
or
rol
adc
or
shr
dec
sbb
leave
enter
sbb
or
sbb
dec
loopne
pusha
imul
jb
and
push
inc
sahf
sbb
push
adc
push
or
pop
loop
mov
lods
pop
(bad)
jp
fcomp
and
arpl
in
adc
pop
lds
jmp
adc
adc
mov
call
in
sbb
fisubr
fs
shl
xchg
xchg
mov
sbb
or
adc
jb
int3
jmp
leave
enter
add
add
mul
mov
sbb
mov
adc
adc
push
enter
or
push
and
leave
push
add
pop
and
fstp
push
rcr
pop
jb
mov
pop
fs
xor
mov
xchg
xchg
mov
ud2
sbb
pop
enter
inc
je
add
sub
add
cmps
hlt
jmp
dec
add
add
daa
pop
lock
aam
and
test
inc
hlt
aaa
adc
adc
push
(bad)
icebp
jnp
fsubr
or
xor
push
fdivp
cmp
(bad)
push
cmp
cmp
jl
rol
push
cmp
repz
cdq
lds
inc
repz
repz
pop
pop
dec
or
jnp
ja
ret
loopne
clc
push
and
add
movs
push
pop
mov
fnstcw
ret
ret
ins
xchg
adc
pop
mov
add
add
lock
call
push
mov
and
shl
pop
sbb
sub
xor
or
lock
mov
pop
push
add
dec
jae
or
adc
xor
dec
pop
enter
jmp
add
loopne
xchg
xchg
retf
jmp
add
retf
xor
retf
ret
add
sbb
mov
pop
or
add
mov
jmp
test
ins
aas
arpl
retf
jmp
xchg
nop
mov
or
inc
pop
popf
xor
inc
ss
fs
pop
sbb
sbb
loopne
dec
push
xor
xchg
xor
xor
mov
sub
adc
arpl
js
sbb
retf
jmp
and
jne
pop
mov
jo
add
adc
cmp
jo
inc
xchg
cwde
add
mov
in
in
xor
adc
push
and
pop
sub
or
shl
clc
inc
mov
xchg
and
pop
mov
pop
and
adc
mov
adc
sbb
add
inc
jo
sub
ins
fsubr
add
push
(bad)
and
jne
and
ins
or
bound
xor
sbb
add
test
imul
adc
jne
test
mov
ret
lds
jbe
xchg
pop
ja
xor
or
mov
ins
cmp
sub
retf
movs
ins
test
or
add
(bad)
daa
pop
and
pop
dec
push
sub
imul
in
or
add
dec
xor
sahf
es
fsub
adc
sbb
and
(bad)
adc
add
and
js
pop
cmp
inc
adc
dec
mov
jmp
icebp
adc
test
jns
add
out
jbe
sub
cmp
test
imul
test
mov
xor
mov
dec
je
cmp
xor
imul
rol
call
std
loopne
adc
adc
and
cwde
mov
into
test
mov
push
xchg
aaa
outs
test
retf
mov
stos
push
test
xlat
push
mov
mov
cmp
and
(bad)
adc
iret
ins
jmp
lahf
jne
add
ret
add
test
sub
int3
mov
and
fnstenv
xchg
xchg
nop
imul
cmps
pop
xchg
xor
add
int3
and
or
scas
or
test
inc
les
push
sbb
pop
inc
add
in
add
fcom
mov
inc
or
or
push
mov
jg
iret
mov
push
mov
mov
xlat
cld
lahf
in
ds
pop
nop
hlt
(bad)
mov
add
popa
adc
mov
shl
in
rcr
sbb
inc
mov
pop
mov
jne
adc
xor
retf
mov
or
pop
mov
adc
cmps
jmp
adc
xor
ja
(bad)
cwde
dec
push
push
loopne
jns
add
mov
or
pop
call
jnp
call
sbb
push
(bad)
call
or
ret
and
adc
jg
movs
std
shl
fst
ss
xchg
cld
outs
adc
mov
and
add
or
retf
loope
lods
inc
ins
push
or
mov
mov
inc
pop
ins
adc
adc
jmp
outs
xchg
(bad)
inc
ficomp
sub
add
xor
sub
jge
mov
or
jo
mov
(bad)
dec
scas
adc
and
pop
mov
dec
(bad)
add
mov
push
dec
lock
hlt
enter
sbb
scas
movs
inc
jmp
(bad)
pop
je
sbb
jne
xchg
adc
add
inc
repz
push
shl
inc
mov
in
and
data16
(bad)
and
or
inc
sub
fwait
cmp
add
push
inc
jg
rcl
xor
adc
push
loope
add
clc
xor
in
js
loopne
std
ds
lock
mov
cmp
lock
arpl
mov
fmul
ret
sahf
dec
pop
nop
lahf
cmp
or
pop
or
cmp
add
jecxz
push
mov
inc
push
nop
cmps
das
ret
inc
test
in
in
add
cs
pop
imul
xchg
aaa
mov
sub
pop
add
das
or
sbb
repz
loop
cmps
icebp
push
sbb
mov
or
mov
or
adc
test
popa
sti
shr
sar
mov
and
xchg
mov
mov
pop
setb
data16
and
cmp
jns
lahf
sub
lahf
jno
mov
push
inc
jl
jno
pushf
mov
adc
(bad)
fmul
fld
out
pop
mov
push
and
sub
sub
pop
or
push
mov
push
jno
adc
sub
inc
add
add
je
test
inc
dec
pop
call
leave
and
jne
(bad)
ins
or
xchg
adc
cld
les
mov
and
inc
ror
sbb
ss
mov
add
or
test
push
pop
lahf
mov
nop
push
bound
stc
xchg
xlat
cmps
pop
jae
sbb
mov
xchg
pop
xchg
mov
jnp
test
sbb
loop
push
mov
dec
push
add
mov
jns
add
call
icebp
inc
scas
pop
shr
or
in
fimul
pop
jl
pop
fisubr
inc
(bad)
loopne
add
fwait
push
and
mov
pusha
add
xchg
sbb
mov
clc
xchg
xor
pop
pop
xor
inc
test
adc
xor
pop
and
stc
push
inc
and
or
sub
lahf
and
sbb
pusha
cwde
add
rol
cmp
add
add
xor
imul
sub
pop
xor
pop
or
test
add
jae
mov
les
mov
inc
lods
test
dec
dec
inc
call
add
icebp
mov
lea
ret
sub
das
sub
cmps
mov
inc
add
adc
jnp
test
mov
loopne
mov
gs
adc
inc
push
xchg
sub
pop
dec
jne
push
daa
or
sub
push
inc
sbb
xchg
push
out
push
fmul
inc
adc
jg
inc
js
mov
fild
int
and
or
pop
adc
push
jo
xchg
loopne
test
nop
mov
lea
adc
nop
inc
fcom
retf
dec
sub
cld
lds
jbe
cmp
add
test
add
dec
push
dec
push
adc
jae
dec
sahf
arpl
add
push
jmp
sub
adc
or
push
mov
loope
adc
add
mov
or
cmp
arpl
rol
fadd
add
jp
pop
add
mov
std
cmp
or
fld
xor
push
sbb
xchg
adc
fs
add
inc
add
pusha
aaa
repnz
add
addr16
xor
in
jmp
jmp
loopne
call
xor
sub
add
add
ror
leave
mov
imul
out
jmp
test
push
xchg
mov
or
mov
lds
mov
mov
inc
fiadd
cld
loope
add
popa
aam
rol
stos
loopne
dec
into
xchg
sbb
mov
adc
test
sub
xchg
popa
dec
loope
rep
in
je
mov
mov
int
add
in
jnp
jmp
cmp
loopne
inc
push
sbb
mov
lea
cdq
lea
add
xchg
lea
mov
fmul
adc
and
push
adc
sbb
and
sar
or
sub
sub
or
inc
inc
mov
cmp
jne
mov
in
in
pop
adc
in
push
lea
xchg
and
sub
shl
sbb
push
sbb
outs
add
pop
add
dec
sub
or
and
dec
in
sub
fcom
cmp
or
push
in
rcr
add
mov
and
or
in
dec
xchg
push
lahf
mov
in
cmp
je
daa
or
(bad)
pushf
inc
ds
push
fdiv
call
call
xchg
xchg
jp
cmp
jnp
ror
sbb
xor
lock
and
and
(bad)
fcom
sahf
push
repz
ins
dec
es
and
mov
fst
cmp
mov
and
xchg
les
xor
or
dec
je
pop
stos
xor
or
js
xor
pop
sub
mov
jmp
test
and
adc
mov
add
loope
or
cwde
push
sbb
sub
push
ins
mov
dec
mov
enter
xor
adc
xlat
jl
adc
icebp
push
mov
sub
jmp
mov
(bad)
je
jg
adc
cmp
pop
inc
xchg
cmp
ss
outs
gs
xor
sbb
cli
adc
pusha
adc
shr
xor
cdq
icebp
shl
in
push
mov
(bad)
loop
test
adc
(bad)
mov
mov
add
bound
sbb
mov
inc
cld
dec
jg
mov
xor
aaa
xchg
sbb
cdq
push
pop
push
test
sbb
xor
jmp
dec
mov
jge
sti
fdivp
pop
jne
inc
nop
sbb
mov
mov
inc
aas
jae
shr
loopne
adc
pop
les
pusha
add
pop
pop
and
scas
push
test
test
or
pop
gs
sbb
and
or
mov
xor
jmp
cmps
je
adc
add
int
push
push
add
sbb
test
xlat
sbb
retf
xor
jne
push
jb
or
pop
ror
bound
test
cmps
sub
daa
repz
or
adc
popf
cmc
mov
dec
ja
jmp
mov
dec
aas
mov
push
lahf
push
loop
add
add
scas
ret
loopne
sub
push
and
mov
push
nop
ret
jne
arpl
add
sbb
js
je
pop
aas
jne
jp
push
add
shl
test
ja
xor
in
xchg
adc
mov
aaa
jb
cwde
rol
and
popa
adc
popf
dec
sub
sbb
inc
push
pusha
pop
sub
inc
cmp
adc
nop
shl
inc
loopne
cli
mov
jp
rcl
add
in
push
loope
mov
add
imul
call
lock
mov
mov
dec
lods
fnsave
cmps
cmp
fsubr
dec
in
or
clc
(bad)
jmp
xchg
jne
scas
inc
dec
and
loopne
dec
or
inc
jmp
pop
adc
cmp
push
xchg
xchg
adc
mov
aas
outs
or
add
dec
lods
pop
adc
and
inc
std
add
and
xlat
les
sub
out
scas
push
dec
lahf
cdq
sbb
pop
mov
or
ret
and
and
(bad)
jno
and
mov
jecxz
(bad)
push
sub
loope
mov
cmp
lahf
mov
mov
mov
pop
cmp
or
or
inc
push
mov
xor
nop
xchg
jo
jnp
dec
push
fsubr
les
sar
or
test
inc
fs
push
cld
and
or
es
add
push
adc
cdq
mov
ret
mov
push
inc
aas
shl
nop
inc
xor
pop
icebp
adc
shl
imul
push
dec
inc
in
mov
dec
add
inc
movs
aas
xchg
dec
inc
add
jg
mov
mov
iret
sbb
cmp
adc
or
adc
or
inc
and
adc
xchg
rol
push
fild
mov
rcr
(bad)
jne
jecxz
jp
les
add
adc
cld
mov
pushf
and
and
pop
add
or
jg
or
and
js
mov
stos
inc
pop
icebp
daa
jmp
push
cld
popf
fs
dec
cmp
sub
mov
fidiv
and
daa
clc
jb
daa
push
(bad)
adc
repnz
push
xchg
or
in
lds
mov
xor
xchg
cmp
jae
clc
pop
fisubr
pop
stc
iret
inc
dec
call
retw
hlt
jb
push
inc
mov
mov
in
(bad)
or
add
mov
clc
push
imul
lea
clc
jno
inc
(bad)
or
inc
jo
mov
sbb
and
xor
or
add
inc
sub
shr
ins
or
jmp
inc
or
ins
xor
adc
shl
fmul
push
or
jg
push
or
and
loopne
mov
mov
paddd
or
xchg
add
inc
mov
push
xchg
(bad)
mov
and
add
fwait
mov
leave
std
mov
add
add
adc
shr
jg
mov
push
hlt
add
jmp
add
rol
(bad)
cmp
jbe
cmp
jb
and
stc
xor
push
pop
pop
mov
int3
cmovs
jmp
add
jne
push
jo
and
pop
add
movs
adc
jb
rep
mov
das
push
nop
mov
or
jb
pop
jmp
or
mov
add
pmuludq
inc
call
mov
mov
mov
mov
or
scas
adc
(bad)
mov
repz
add
add
pop
inc
xor
fimul
in
cmp
or
push
fdivr
out
ror
sar
test
inc
mov
mov
push
call
cmp
in
lock
hlt
clc
mov
repz
cld
es
call
lock
fld1
cmp
lock
mov
leave
ret
nop
inc
or
add
pop
sti
and
fsub
and
lea
adc
or
ss
neg
shl
inc
xchg
fst
sub
xchg
inc
inc
jnp
mov
enter
jl
in
xor
mov
mov
adc
push
out
push
(bad)
mov
or
cmp
push
addr16
mov
mov
ins
sahf
mov
inc
jns
out
push
dec
push
pop
fs
repz
xchg
je
(bad)
sbb
push
sbb
repz
sbb
adc
or
iret
repz
or
add
iret
pop
cmp
nop
mul
adc
pop
outs
push
inc
lock
inc
add
xor
mov
fist
aaa
and
aad
dec
push
stc
cld
xchg
xchg
or
in
fsubr
repz
sub
and
push
pop
les
ins
xchg
aad
mov
ret
or
lods
adc
aad
push
xor
push
loope
add
jne
sbb
mov
mov
int
pop
cwde
call
(bad)
push
sbb
pop
(bad)
test
xchg
sti
sbb
adc
fbstp
mov
cdq
hlt
jmp
fist
cmps
ret
jp
and
imul
fist
dec
pop
cmps
test
sub
push
dec
xor
call
or
jnp
les
or
shl
nop
dec
dec
in
dec
hlt
stc
add
hlt
stc
pop
repz
shl
push
push
je
sub
cmp
movs
mov
cmp
call
pop
or
rcr
sbb
dec
pop
clc
mov
mov
call
mov
icebp
pop
out
and
or
sub
jg
add
xor
aaa
mov
sbb
je
mov
cmp
xlat
sbb
and
dec
rcr
dec
push
add
sub
adc
mov
jg
and
inc
lods
rcl
ret
add
aad
cmps
push
jmp
test
mov
mov
(bad)
in
stos
push
jno
test
test
test
es
jp
cld
push
push
or
sar
sar
nop
pop
jge
mov
sub
and
cmp
dec
or
inc
out
mov
stos
mov
pop
popa
inc
cld
je
mov
sub
shl
aas
inc
and
push
or
sti
dec
push
or
fisttp
in
lds
outs
fst
mov
ds
je
fidiv
cmp
push
jne
loopne
adc
sti
shl
fbstp
adc
sbb
je
arpl
cld
out
iret
inc
jne
pop
ret
push
in
or
retf
mov
daa
stc
xor
xor
add
and
call
jmp
repz
sbb
adc
mov
call
lea
or
pop
or
add
push
sub
push
pushf
add
ror
add
cs
jmp
jmp
mul
push
inc
mov
jmp
clc
mov
xor
(bad)
mov
sbb
es
and
ret
fbstp
nop
cs
ja
out
add
push
daa
or
test
jo
xor
ret
(bad)
xchg
imul
sbb
aam
inc
mov
mov
test
sbb
ror
mov
add
mov
sub
xlat
ins
lahf
fdivr
xor
or
ror
cmps
or
cmp
cmp
aad
add
push
or
jns
pop
mov
loopne
xor
add
xchg
lahf
xchg
xchg
shr
push
pop
mov
jo
mov
jle
adc
cmps
cdq
cwde
enter
int3
shr
imul
jmp
xchg
pop
ficom
imul
fisub
les
lea
mov
sbb
pop
dec
mov
test
adc
push
adc
bound
jecxz
xchg
push
fst
mov
test
jno
(bad)
xor
mov
call
xchg
stos
cmp
cmp
sub
mov
pop
xchg
sbb
push
and
sub
sbb
inc
mov
sbb
mov
and
jp
mov
lods
mov
xor
pop
lods
cwde
or
mov
lods
jae
sbb
lock
or
rcl
add
pop
arpl
cmp
or
dec
hlt
bound
shl
add
inc
or
lods
inc
pop
cmp
mov
jp
or
retf
mov
inc
test
fcmovbe
mov
mov
repz
inc
xor
call
dec
add
add
mov
jmp
push
jge
es
push
add
or
ror
(bad)
lahf
or
xor
ja
push
add
cmp
push
push
in
xchg
push
loope
jne
cmps
adc
pusha
cwde
popa
adc
cmps
pop
dec
sbb
jmp
pop
xchg
sub
(bad)
arpl
jmp
sbb
mov
pop
push
pop
in
movs
jo
and
xchg
adc
xchg
adc
jmp
push
push
add
mov
sbb
or
mov
pop
add
daa
dec
add
sub
adc
inc
lahf
inc
or
int3
dec
or
add
je
imul
daa
push
in
cmp
push
or
and
icebp
dec
xor
pop
jnp
mov
ror
or
mov
fisttp
add
and
js
adc
add
xchg
adc
add
push
test
mov
aas
and
jg
sbb
pop
or
mov
into
adc
pop
jae
in
jecxz
fcom
jecxz
push
dec
push
leave
aas
cmp
(bad)
and
mov
push
sub
or
push
xchg
and
out
int3
and
pop
adc
aad
stc
jbe
lock
xor
or
add
dec
leave
retf
aas
cmp
sub
adc
nop
rol
inc
push
xchg
(bad)
mov
cmp
adc
mov
sub
mov
add
push
test
and
mov
sbb
pop
add
and
lahf
leave
sub
push
sbb
jns
or
mov
mov
push
lds
inc
cmp
push
add
cmp
loopne
sub
mov
add
add
push
loopne
fld
sbb
cdq
(bad)
sub
and
push
mov
push
inc
fs
outs
mov
cdq
xchg
pop
(bad)
push
xchg
or
icebp
fdiv
icebp
mov
adc
xor
adc
test
push
push
fmul
cmps
sbb
pop
push
fcom
dec
pop
and
sbb
shl
or
jmp
sub
bound
push
add
sub
int3
sbb
enter
push
sbb
push
shl
sub
add
es
pop
test
fsub
icebp
and
jno
test
nop
adc
push
push
mov
les
jl
fild
push
push
or
movups
jne
and
or
adc
pop
xchg
cmp
mov
and
push
nop
in
and
cmp
pop
or
inc
pop
in
ins
or
dec
in
jecxz
and
jne
ror
cmp
cld
fisttp
jae
ja
add
xchg
sub
outs
sub
push
inc
sbb
inc
add
ins
mov
dec
retf
add
or
iret
retf
or
mov
sbb
movs
fs
and
mov
or
daa
setge
add
cmp
or
arpl
inc
inc
pop
cmps
test
pop
or
(bad)
push
pop
rol
loope
outs
push
adc
xchg
xor
and
addr16
push
loop
jb
shr
mov
add
sub
outs
sub
(bad)
sar
frstor
adc
and
mov
push
popa
jmp
int
add
call
xchg
xor
call
lods
sbb
and
(bad)
popf
je
adc
fist
js
push
scas
add
dec
test
add
sub
sbb
or
leave
shl
xor
sti
and
sub
adc
add
rcl
add
adc
jg
cmp
scas
sbb
iret
pop
or
xchg
add
sub
mov
xor
addr16
call
fadd
fadd
sar
sbb
dec
rcl
adc
add
aas
and
shl
and
lock
sbb
mov
test
xor
push
jo
mov
or
pop
adc
xor
or
or
mov
test
or
xor
or
cs
ins
inc
adc
cmp
push
mov
clc
ins
stos
daa
inc
loope
es
or
add
inc
and
ja
add
inc
mov
int
add
or
lods
jp
or
and
and
xor
dec
xchg
pop
cmp
int3
shl
add
ret
add
sub
sub
xor
jmp
dec
inc
push
push
jno
fwait
or
repz
in
cs
lods
mov
or
ss
sub
ret
outs
xor
ins
test
sar
push
inc
hlt
sub
push
inc
add
xor
push
add
mov
(bad)
fs
pop
adc
dec
cmp
push
clc
push
rcr
ins
dec
dec
inc
pop
cs
shr
pop
pop
sbb
add
mov
jg
add
shl
cmp
or
sbb
or
push
add
mov
dec
jne
or
xchg
add
sbb
cmp
nop
out
jno
xchg
mov
mov
mov
jb
pop
mov
out
mov
pop
xchg
pop
cmp
inc
addr16
test
mov
fwait
lods
adc
ds
push
jp
popa
sbb
adc
inc
add
inc
cmp
sbb
pusha
add
lahf
push
cmp
adc
lea
push
pop
ret
inc
sar
cmp
add
mov
loope
nop
mov
aaa
popa
pusha
mov
sbb
inc
test
jns
loopne
imul
inc
les
rol
inc
hlt
and
mov
ja
inc
data16
or
shl
xor
and
sbb
out
adc
adc
leave
sbb
add
jmp
push
ror
xor
add
call
cmp
sub
xchg
xchg
mov
scas
sbb
add
lock
fadd
out
add
adc
add
clc
sbb
cmp
xor
adc
add
push
lea
mov
rcr
xchg
push
bound
and
inc
mov
push
or
fldenv
pop
mov
movs
out
push
fmul
and
mov
lea
cs
mov
push
stos
and
or
loopne
dec
and
cmp
jg
lods
loop
dec
mov
add
xchg
push
sub
lock
test
sbb
adc
adc
jl
jp
jb
mov
jb
pop
fs
sub
cmp
imul
mov
or
shl
and
mov
sbb
lods
in
sbb
xchg
and
adc
xor
or
push
mov
dec
or
push
ins
add
or
jne
dec
(bad)
jns
test
lea
sub
add
push
sti
je
inc
or
jl
rol
fistp
popf
pop
sub
in
ss
dec
mov
pop
sbb
push
stos
das
movs
cmovb
js
mov
jns
popa
das
jne
pop
and
lea
test
dec
jae
inc
test
jo
ins
sub
sbb
enter
bound
push
adc
lahf
aad
xchg
pop
clc
popf
adc
xchg
xor
xchg
pop
sbb
xor
rol
push
clc
inc
inc
popa
jg
push
adc
add
rcl
je
push
xor
adc
dec
jp
xor
adc
test
cmp
adc
or
add
jg
mov
sbb
pop
push
dec
ins
mov
test
xor
pop
loopne
and
fs
nop
fcomp
xchg
jno
or
xchg
mov
add
out
push
nop
ret
cmp
adc
xor
lods
mov
push
inc
scas
shl
imul
inc
mov
cmp
cwde
dec
sbb
sbb
push
or
or
scas
clc
hlt
add
mov
inc
sub
addr16
inc
retf
add
cmps
mov
imul
cmp
xchg
pop
pop
clc
or
xor
fidiv
dec
adc
push
shl
or
dec
aam
aam
and
sbb
inc
sbb
push
gs
outs
add
popa
pop
jnp
inc
add
and
jo
pop
ja
add
test
mov
push
cmp
retf
push
enter
pop
and
or
sbb
lds
in
cli
inc
sub
or
xchg
fsubr
or
cmp
add
call
mov
gs
or
icebp
je
sbb
sbb
add
sub
xor
or
arpl
mov
inc
pop
shr
(bad)
fist
xlat
inc
(bad)
adc
adc
rol
inc
xchg
push
lods
clc
inc
jmp
lea
hlt
ss
jo
int3
dec
dec
stos
icebp
and
xor
pop
push
add
inc
in
cmp
fisubr
daa
mov
and
adc
add
mov
jmp
(bad)
sbb
add
cmps
fidivr
fnstsw
push
adc
leave
das
mov
sqrtps
or
xor
adc
rol
xchg
or
pop
xchg
xchg
and
cld
push
ret
adc
nop
jmp
aam
lock
add
push
adc
cmp
aas
loop
xor
push
es
test
adc
inc
and
or
xor
rcr
lea
or
pusha
es
mov
and
pop
ror
mov
movs
shl
std
xor
or
and
xchg
(bad)
in
add
add
shl
aaa
add
les
pop
and
inc
lahf
in
dec
sbb
jl
sub
jo
hlt
jno
xchg
sub
cmp
sbb
retf
or
push
mov
sub
lock
in
imul
inc
repnz
call
lds
fild
pop
cmp
movs
bound
fistp
aas
add
cmp
add
sbb
sqrtps
and
loopne
pushf
sub
pop
xor
cmp
mov
and
inc
test
xchg
add
outs
add
mov
and
imul
mov
xlat
lfs
and
mov
push
xor
lods
push
or
fist
inc
ja
push
imul
mov
pop
push
mov
in
pop
inc
daa
cmp
sbb
sbb
add
adc
fbld
call
fcomp
rcl
test
or
or
mov
fwait
push
mov
or
sbb
mov
xchg
or
or
clc
jnp
cwde
cli
adc
or
and
push
fstp
cmp
jbe
add
sbb
jae
es
movs
rcl
cmp
fcom
add
sbb
adc
push
and
rcl
mov
cmp
ror
je
dec
movs
call
mov
xor
(bad)
sub
sub
sbb
test
or
jns
lods
shl
push
fsub
add
sub
xchg
fadd
fistp
dec
out
cmp
shl
clc
sub
fwait
add
and
test
cld
mov
mov
aas
adc
xor
std
push
lock
add
pusha
mov
inc
add
scas
push
sub
scas
or
and
mov
aaa
(bad)
aas
inc
enter
outs
jl
aam
inc
cdq
inc
shl
mov
test
push
mov
xchg
cdq
int3
inc
cld
inc
inc
dec
push
repnz
int3
pushf
inc
push
mov
adc
shl
nop
pop
sub
and
loopne
jae
push
pop
add
add
cli
sub
pop
ret
lahf
ss
add
and
jnp
leave
add
pop
call
cmp
adc
mov
jno
jg
push
or
mov
or
sbb
and
add
and
mov
sub
and
shl
xchg
(bad)
fcmovb
loopne
inc
jo
outs
cmp
hlt
(bad)
jnp
or
aam
popa
stos
rcl
and
and
loope
ret
add
and
mov
push
rcl
dec
mov
or
fild
or
lock
adc
frstor
fimul
aad
pop
push
or
jae
loopne
sub
movs
movs
sub
mov
push
adc
sbb
shl
and
outs
rol
mov
jnp
mov
movs
pusha
mov
rcl
movsx
mov
xchg
int
sub
mov
mov
out
push
xor
mov
xchg
sahf
stos
lds
or
jl
add
inc
hlt
pop
and
retf
cmps
or
add
ins
pop
or
lock
pop
div
inc
or
xor
mov
cmp
mov
pop
push
cld
pop
cmps
fld
fistp
xchg
sbb
xchg
or
dec
sbb
sub
mov
jb
sbb
sbb
nop
adc
cmp
in
cmp
popa
mov
jge
sti
or
jne
pop
mov
int
mov
pop
fldz
mov
rol
adc
(bad)
adc
int
push
and
es
in
ins
fadd
cmp
ret
aaa
adc
add
cmp
fs
pop
je
sti
or
cmps
in
fld
fld
fild
ret
mov
(bad)
idiv
jmp
and
and
sub
mov
dec
call
sub
inc
pop
and
aad
fdivr
test
jo
pop
leave
pop
sbb
cwde
lahf
xor
in
rcl
sbb
sbb
xchg
mov
xchg
jns
in
sub
mov
cs
lds
add
mov
add
xchg
mov
fdiv
int3
(bad)
das
fadd
inc
mov
lock
pop
mov
ins
jmp
imul
ror
imul
enter
pop
mov
mov
xor
pop
les
sub
sub
jge
inc
and
push
inc
jmp
and
cmps
fcom
shl
ss
enter
cwde
hlt
aam
cdq
in
adc
or
pop
cld
pop
mov
lods
mov
add
sub
popa
mov
adc
push
sub
inc
add
shr
lods
add
adc
push
lods
mov
push
das
adc
xor
add
ins
lea
ins
push
mov
jns
or
mov
jmp
add
or
jl
pop
pusha
test
fnsave
in
les
push
sub
mov
sbb
add
shr
pop
jg
dec
and
movs
pop
or
sbb
retf
hlt
cmp
dec
out
adc
test
mov
ret
cmp
mov
es
loope
je
add
cmp
mov
les
cmp
bswap
pop
mov
adc
repz
add
xor
ficomp
das
dec
sbb
imul
inc
and
aad
adc
dec
mov
sysexit
or
jnp
sub
ret
sbb
and
leave
mov
mov
xchg
shr
ss
cmp
rcr
push
or
xchg
cmp
push
inc
adc
add
pop
pop
(bad)
adc
cmc
ja
stc
add
xchg
push
sbb
shl
add
js
icebp
mov
test
test
pop
aaa
mov
jnp
test
pop
dec
add
(bad)
test
shl
jbe
xchg
and
iret
add
les
push
jmp
or
xor
fcomp
or
cmp
xor
or
jbe
sbb
aam
or
add
pop
scas
inc
inc
adc
hlt
xchg
es
sbb
mov
fcomp
pusha
adc
pusha
xchg
add
pop
(bad)
loop
lods
test
push
and
sbb
push
ss
dec
xor
jp
aas
pusha
test
and
ins
mov
xchg
xlat
add
js
inc
cld
adc
cli
add
jmp
fadd
adc
test
sbb
mov
nop
xchg
push
or
nop
inc
add
add
rcl
jecxz
aad
arpl
aad
push
sbb
test
add
or
sub
in
dec
jmp
or
sbb
and
ror
lock
enter
in
scas
cmps
adc
je
jmp
lods
xchg
test
adc
cmp
push
jg
add
inc
iret
mov
jmp
daa
add
push
popa
or
or
jg
and
pop
fisttp
ret
test
int
sub
mov
data16
xchg
and
xor
sbb
scas
inc
fst
ins
and
and
jmp
jno
shr
call
or
pop
dec
and
icebp
sub
ret
add
fcomp
mov
stc
xchg
aam
divps
imul
or
inc
enter
cdq
sbb
enter
adc
sbb
mov
inc
push
dec
add
dec
add
es
fld
sbb
inc
adc
pop
mov
jg
call
adc
gs
jg
adc
test
dec
adc
pop
sbb
mov
xchg
push
or
mov
mov
mov
or
cmp
ret
and
inc
dec
inc
push
mov
xchg
or
loopne
and
inc
pop
xchg
sub
movs
jo
push
and
inc
shl
sbb
adc
add
into
aad
and
mov
push
std
rcl
sub
ds
or
adc
mov
in
add
popa
cld
add
js
clc
(bad)
or
(bad)
mov
jp
(bad)
jmp
dec
repnz
push
lds
inc
sub
mov
xor
mov
bound
inc
add
and
sbb
mov
push
stos
pop
mov
bound
and
jno
mov
mov
mov
mov
sub
imul
fdivr
adc
jge
xchg
sub
clc
out
aad
adc
aad
sub
pop
or
sbb
and
retf
or
dec
add
ret
shr
push
pop
retf
push
mov
lea
or
xchg
sbb
xor
sbb
les
or
jne
jmp
jmp
call
jmp
imul
jecxz
iret
mov
mov
rol
pop
into
cmp
jmp
daa
jne
or
rol
push
inc
test
add
loopne
inc
test
adc
lock
push
jge
sbb
mov
jne
cmps
adc
fsubr
adc
call
dec
mov
pop
jmp
pop
push
push
dec
arpl
xor
ins
loopne
inc
in
pop
add
inc
and
mov
add
mov
pop
push
jmp
xor
and
or
sbb
js
loopne
test
add
or
push
add
sbb
xchg
stos
xor
dec
add
pop
push
mov
lahf
jg
inc
hlt
pop
adc
repz
pop
test
call
ret
adc
cmps
jb
je
xchg
push
fmul
add
add
call
pusha
(bad)
js
dec
or
adc
pop
jne
sub
or
(bad)
jne
js
jmp
out
repnz
mov
or
mov
or
gs
out
xchg
mov
cdq
(bad)
mov
add
or
cld
push
push
cmp
mov
(bad)
call
call
and
or
cwde
mov
add
pusha
push
and
das
add
mov
popf
call
(bad)
xor
lahf
nop
dec
add
mov
push
pop
inc
pop
add
jae
inc
push
jne
cmp
call
jns
inc
lds
and
or
sub
fcmovnb
fmul
imul
enter
pop
jmp
inc
rdmsr
lea
mov
ffree
aam
es
cmp
add
dec
loopne
jne
jne
iret
adc
adc
or
movs
adc
push
pop
(bad)
push
lahf
shl
push
mov
and
add
loope
loope
sbb
or
pushf
mov
mov
sub
in
push
mov
inc
fbstp
mov
mov
add
daa
aaa
push
mov
pop
jnp
mov
xor
or
js
int3
in
inc
and
and
sbb
jg
rcl
rol
pop
fcom
and
aaa
fldcw
jne
inc
cmps
cs
test
dec
or
cmp
push
and
cmp
or
push
add
inc
dec
or
or
and
add
add
xchg
int3
adc
ja
or
enter
push
or
(bad)
or
ror
cli
cmp
sbb
add
test
lods
mov
add
push
outs
add
jge
mov
sar
stc
mov
icebp
push
mov
jge
test
inc
cmp
icebp
inc
ror
popa
js
icebp
and
xlat
jmp
cmp
and
pop
xchg
fmul
xor
fcomp
cmp
mov
inc
(bad)
push
add
xchg
jmp
rcr
call
xor
sbb
adc
jmp
inc
push
lea
add
push
shl
add
cs
lahf
sbb
dec
mov
push
mov
aam
dec
les
push
sbb
inc
rol
xchg
(bad)
jmp
adc
adc
dec
ins
adc
out
mov
sub
push
inc
in
xchg
outs
icebp
aam
and
outs
test
sar
xchg
or
jg
bound
les
fdivr
dec
mov
dec
jno
add
cdq
nop
mov
jne
fwait
aam
movs
xchg
cs
les
loopne
aas
fdiv
sbb
mov
mov
or
addr16
dec
mov
test
mov
xchg
fwait
cmp
movs
mov
inc
es
in
cmps
xor
sbb
jne
cs
mov
xchg
dec
push
inc
in
rcl
adc
xchg
sbb
cld
adc
sbb
ret
retf
pop
pop
or
(bad)
les
(bad)
retw
out
test
sar
xor
inc
pop
mov
dec
test
and
(bad)
push
jmp
loop
dec
cmp
lahf
test
aas
stos
xchg
dec
pop
cmp
or
outs
sub
xor
mov
or
lahf
leave
add
or
repz
pop
scas
clc
mov
dec
imul
jmp
imul
(bad)
ror
ror
jb
mov
shl
icebp
test
jmp
inc
dec
test
aad
adc
jmp
xchg
inc
movsx
ret
pushf
xchg
push
js
mov
popf
jbe
xchg
ins
add
jo
icebp
subps
ins
sbb
jl
jp
or
sbb
jg
mov
mov
sub
mov
add
popa
sbb
adc
xor
loopne
mov
sub
add
adc
mov
inc
fstp
jo
and
or
jmp
dec
cmp
cmp
add
xlat
or
loopne
adc
sbb
push
cmp
or
prefetchwt1
or
add
in
dec
mov
cmp
inc
xor
sub
mov
das
das
add
mov
push
dec
cmp
in
dec
push
daa
inc
in
pushf
jecxz
test
dec
call
dec
in
test
dec
nop
push
and
test
leave
jmp
lock
jl
int
nop
xchg
pusha
sti
stos
xchg
push
mov
leave
adc
and
aam
inc
lidtd
push
xchg
and
or
mov
and
push
andnps
jno
adc
pop
mov
mov
adc
ret
add
or
and
nop
retf
cwde
cwde
shl
mov
sub
mov
in
sub
and
and
rcl
sbb
cmps
dec
push
test
or
xchg
xchg
js
adc
or
sbb
loopne
and
mov
sbb
xor
inc
scas
and
dec
call
adc
arpl
or
and
or
dec
add
repz
mov
adc
inc
nop
push
mov
fisttp
sub
fmul
cmp
and
js
cwde
fwait
push
mov
xor
adc
fistp
(bad)
and
mov
mov
and
or
dec
or
loopne
push
add
push
nop
retf
add
cmp
test
shl
inc
rcl
cmps
xchg
inc
jb
dec
rol
mov
and
add
add
js
jg
dec
int3
js
mov
mov
or
cwde
sbb
adc
push
loopne
pop
test
or
sbb
and
ret
rcl
dec
cli
(bad)
fiadd
adc
mov
(bad)
out
mov
dec
dec
inc
adc
xlat
adc
retf
ins
loope
jne
add
out
add
xchg
in
pop
js
inc
inc
inc
dec
adc
add
cmp
movs
sbb
mov
out
or
jmp
pop
ins
or
push
mov
xchg
jb
dec
adc
inc
fcomp
inc
aam
rcr
xlat
mov
inc
lahf
add
sub
or
pop
push
jo
or
add
sbb
cmp
inc
inc
fdivr
or
sbb
cmp
sbb
cmp
pop
ins
pushf
es
(bad)
outs
add
test
xchg
in
mov
in
cmp
sub
inc
inc
fcomi
pop
(bad)
popa
sub
pop
movs
inc
clc
and
push
and
push
test
in
pop
cmp
sub
or
inc
jmp
push
and
inc
vpunpckhdq
push
inc
arpl
sub
xor
adc
sbb
mov
and
adc
push
test
test
stos
shl
das
adc
and
leave
sbb
ret
sbb
pop
cmp
or
xlat
pop
fistp
addr16
rol
xchg
and
sub
div
push
adc
sbb
mov
dec
(bad)
or
ss
jmp
pushf
jo
cmp
mov
call
mov
jno
xchg
jmp
ffreep
add
out
mov
popf
sbb
push
(bad)
xor
test
push
es
mov
add
test
mov
fwait
int
fsub
mov
ficom
mov
ins
ss
xchg
push
ds
push
push
(bad)
jns
int
push
je
lds
pop
mov
addr16
in
aaa
push
dec
xchg
push
push
lock
add
mov
(bad)
push
adc
mov
pop
add
add
pop
add
adc
fsubrp
add
or
adc
es
dec
mov
sub
ja
adc
add
adc
lds
or
or
inc
inc
adc
cmp
gs
rcr
dec
or
push
dec
mov
frstor
push
jmp
pop
ret
jg
pusha
hlt
and
push
push
gs
jge
popa
std
add
cmp
jae
inc
adc
cmp
add
or
sbb
sub
mov
xor
cmps
add
xchg
and
hlt
and
shl
fbstp
push
adc
push
nop
js
icebp
cld
mov
in
lods
inc
nop
xor
mov
or
add
inc
push
ins
pop
imul
fdivr
fwait
lea
mov
xor
sbb
jb
rol
push
sub
add
push
mov
dec
clc
call
nop
xor
sbb
mov
inc
cmp
fs
test
inc
into
mov
push
inc
aas
push
inc
sldt
sub
dec
mov
add
add
add
mov
ror
data16
(bad)
ja
or
xchg
fimul
sub
scas
sub
add
fiadd
call
loop
cmovnp
pop
inc
aas
pop
ror
shl
leave
fstp
xchg
shr
arpl
fbstp
xchg
and
add
pop
add
push
mov
sbb
stos
push
rcl
jnp
popf
sub
push
sub
add
jbe
scas
dec
ins
mov
add
sub
add
sub
clc
sub
pcmpgtd
dec
or
pop
(bad)
retf
add
xchg
push
inc
cmps
mov
xor
test
xor
aaa
cmp
adc
sbb
cmps
ret
scas
in
les
pop
adc
xor
std
mov
mov
ja
ss
inc
es
and
sbb
mov
mov
pop
xchg
or
es
sar
or
or
(bad)
jmp
inc
and
gs
jne
adc
and
lahf
call
jne
and
in
inc
out
add
mov
pop
out
or
dec
jb
add
jle
test
push
inc
dec
xchg
jl
cmp
inc
inc
mov
jl
movs
cmp
lods
or
xlat
sahf
dec
mov
mov
pop
push
dec
test
nop
mov
xor
neg
add
pop
jmp
xchg
add
add
inc
or
or
or
test
jp
out
pop
clc
inc
lds
and
sbb
sahf
cdq
push
or
xchg
lock
push
mov
jg
inc
mov
fs
cmp
jne
jnp
and
and
adc
imul
mov
xchg
dec
sub
loope
ja
les
aaa
movs
shl
test
mov
arpl
mov
shl
jb
loopne
mov
mov
fiadd
jno
adc
clc
sahf
daa
jne
xchg
sbb
ret
sti
pop
or
inc
cmps
hlt
dec
in
push
xor
ret
push
test
xor
xor
sub
mov
jle
adc
push
mov
aad
push
xor
inc
or
pop
push
cdq
push
loop
add
pop
imul
arpl
xchg
sub
(bad)
jmp
adc
es
pusha
out
sbb
add
jmp
xor
fwait
addr16
adc
fs
(bad)
retf
mov
fcom
cmp
and
fcomp
pop
push
repnz
add
or
(bad)
or
aas
add
add
repz
pop
or
or
int
and
cmp
or
mov
cmp
dec
sub
adc
lea
pop
or
fist
push
popa
or
gs
and
xor
jne
inc
fnstcw
sub
in
mov
movs
pop
dec
adc
add
or
inc
cmp
lahf
push
push
(bad)
jno
adc
cmp
mov
pop
inc
sub
inc
pop
push
loop
lock
xor
push
push
mov
cld
pushf
dec
icebp
repnz
mov
fmul
cld
jl
add
test
mov
iret
jg
jl
push
pop
sti
push
inc
jae
xchg
pop
cmp
xchg
sbb
jl
mov
dec
aam
cmp
outs
inc
xchg
jbe
adc
xchg
adc
dec
pop
loope
(bad)
fldcw
xchg
jns
xor
dec
push
mov
lea
sti
adc
inc
loop
xor
push
sub
mov
add
shl
hlt
add
test
clc
add
cdq
stos
xor
jne
push
inc
add
jne
mov
sub
retf
xor
pop
ins
in
inc
in
lar
scas
fisttp
int3
sub
aas
aas
ret
xchg
daa
or
scas
xchg
mov
ret
dec
in
and
arpl
bound
sub
cmps
daa
dec
add
pop
push
add
push
cmp
sbb
add
push
fisub
packssdw
cmp
adc
adc
rol
jmp
xor
call
pop
dec
fld
pop
mov
stos
cmp
pop
adc
xor
movs
or
dec
jge
push
mov
and
push
retf
and
stos
in
int
sbb
xchg
xchg
repz
int
inc
mov
or
sbb
xchg
pop
xor
call
mov
cmp
or
jne
sbb
fstp
xchg
cdq
adc
ret
retf
push
rcpps
(bad)
pop
push
jl
call
inc
or
call
ins
pop
cmps
xchg
mov
icebp
jg
fadd
daa
or
dec
lds
rcl
ss
xchg
mov
test
push
add
popa
add
mov
pop
mov
rcr
data16
xor
mov
adc
or
ror
pop
cmp
call
push
or
ficomp
pop
fld
shl
pop
gs
leave
cwde
dec
add
pop
gs
paddsw
mov
inc
or
pop
push
or
jns
add
fcmovnb
and
add
and
push
mov
inc
mov
sti
fsub
push
or
sbb
scas
xchg
and
jecxz
outs
xor
inc
mov
or
outs
std
jmp
shl
cmps
cs
int3
lahf
pop
repnz
cmp
jb
inc
sbb
inc
aaa
mov
jno
les
in
sti
and
js
jne
cmps
imul
jb
pop
enter
js
enter
pop
xlat
pop
aam
adc
test
push
cmp
dec
fmul
sbb
jae
push
cmp
xchg
pop
mov
cmp
rcl
stos
adc
inc
adc
xchg
stos
xor
cmp
mov
ficom
stos
adc
rol
inc
out
sub
mov
sub
pop
or
(bad)
xchg
ror
stos
frstor
fnsave
add
call
add
(bad)
and
add
xor
pop
dec
add
or
mov
adc
sbb
pop
or
int
and
mov
inc
fstp
mov
lock
dec
inc
(bad)
or
dec
call
adc
dec
jmp
ret
adc
nop
sbb
adc
dec
sbb
and
fxch
or
daa
sub
das
jns
sbb
or
imul
jbe
jae
ret
jmp
stos
mov
dec
loopne
pop
fs
xchg
loopne
add
or
jecxz
ficomp
add
cmp
loop
or
pop
adc
jo
loop
pusha
push
(bad)
arpl
add
cwde
add
test
ret
pop
sub
cwde
cs
adc
or
dec
movs
mov
or
lods
push
aas
enter
pusha
aas
inc
fcom
inc
mov
sub
xchg
add
fcomp
rol
enter
rol
fcmovnb
js
loope
stc
mov
and
fdivr
or
xchg
cmp
mov
mov
inc
and
mov
mov
arpl
sbb
inc
rcl
mov
inc
test
sbb
loopne
push
cwde
xchg
xor
pop
xor
in
(bad)
movs
mov
or
inc
std
aaa
and
inc
jmp
fistp
mov
test
adc
add
jmp
fst
push
push
les
nop
retf
cmp
or
jne
lahf
xor
sbb
adc
xor
fs
inc
call
arpl
test
inc
clc
aas
inc
jecxz
inc
or
adc
pop
aad
and
or
xor
add
clc
xchg
sub
repnz
das
hlt
hlt
repnz
add
xor
inc
jge
das
hlt
rol
add
push
in
adc
call
mov
xchg
ins
or
push
or
add
test
jp
and
int
push
and
and
aaa
inc
sbb
add
(bad)
fdiv
cdq
or
add
dec
(bad)
mov
fisttp
loop
jne
jae
pop
and
cmps
xor
or
jnp
std
mov
sbb
shl
(bad)
push
push
dec
jmp
daa
call
and
sub
rcr
stos
imul
pop
push
mov
in
sub
push
or
push
inc
cld
sbb
push
in
jp
jae
add
mov
or
loope
add
inc
and
mov
sub
mov
add
inc
sbb
movnti
pop
xlat
push
inc
inc
popf
scas
aad
mov
push
pusha
sbb
lahf
mov
mov
xor
cmp
add
jmp
jno
mov
sbb
xor
(bad)
push
push
es
sbb
xor
add
mov
mov
test
or
and
adc
pop
push
push
dec
pop
or
(bad)
jns
sub
or
cmp
xchg
sbb
xor
ror
adc
arpl
xor
add
loop
mov
js
sub
or
push
and
out
mov
adc
aad
aad
push
rol
jmp
lock
add
cmp
push
mov
js
sub
imul
xor
push
fld
adc
jne
dec
mov
or
inc
adc
push
dec
es
test
xor
mov
ror
retf
or
je
iret
in
jns
retfw
sbb
lock
mov
ret
(bad)
jmp
mov
cmp
jns
ret
push
sbb
bound
dec
push
push
je
add
push
cld
adc
add
sbb
mov
mov
mov
aam
jno
test
dec
push
cmp
mov
sub
jmp
daa
add
cmp
sub
sbb
and
test
popa
movs
mov
or
jg
in
and
push
call
jg
push
rcl
inc
or
adc
inc
fistp
add
add
ror
add
mov
mov
add
fwait
pop
sbb
cwde
inc
cmps
mov
fwait
gs
and
or
sbb
add
loopne
xchg
(bad)
xor
or
inc
pop
sbb
inc
lahf
jnp
adc
or
pop
call
inc
test
pop
lea
hlt
xor
std
int
and
ss
and
and
xor
xor
dec
push
sub
fcos
xor
les
add
mov
xor
cmp
inc
and
push
int
shr
sbb
and
(bad)
adc
aaa
mov
fucomp
adc
and
popa
mov
retf
lea
adc
sbb
sub
mov
xchg
aas
push
and
xor
in
pop
imul
add
push
test
inc
scas
jnp
pop
out
or
xor
adc
ins
and
add
mov
or
add
add
add
dec
xor
mov
loop
inc
ret
cmp
sub
ds
push
inc
pop
or
xor
jne
mov
add
adc
xchg
xor
push
mov
xor
add
pop
mov
or
jae
js
cdq
adc
xor
test
je
xchg
mov
fcom
ret
adc
or
mov
push
add
push
xchg
lock
iret
xor
jmp
loope
popa
jne
and
push
adc
pop
test
jne
pop
pop
pop
in
nop
inc
cld
cmp
je
inc
shl
or
out
cmp
je
cmp
push
and
fdiv
clc
repz
aam
xchg
pop
mov
outs
mov
fwait
test
shr
or
test
inc
inc
pusha
fcomp
ret
inc
ret
push
dec
add
dec
sbb
ret
cmp
adc
push
or
jns
inc
inc
jbe
cli
enter
imul
clc
popa
or
pop
pop
cld
pop
or
add
in
and
ja
add
jmp
nop
adc
push
add
xor
dec
and
imul
mov
push
scas
gs
adc
xor
dec
push
push
rol
imul
fcom
aaa
pop
lahf
cmp
pop
rol
pop
arpl
sub
push
or
jmp
jl
or
push
cmp
test
in
ret
adc
int3
mov
mov
sbb
loope
dec
pop
je
push
push
inc
push
dec
pushf
sbb
mov
les
js
pop
add
arpl
test
ds
fld
cmp
cmp
cdq
jnp
call
loope
lock
call
sbb
xor
add
add
dec
inc
add
call
and
cdq
add
dec
ins
div
cmp
sbb
sti
xchg
sbb
cmp
or
push
pop
pusha
push
fmul
adc
and
pop
mov
pop
inc
imul
and
fcom
lods
les
adc
and
sub
push
movs
or
jne
add
mov
add
rcr
movs
mov
lock
enter
nop
mov
push
push
push
push
mov
inc
xchg
push
xchg
push
cwde
jne
sbb
mov
push
ins
inc
dec
push
mov
jmp
push
cwde
call
sub
and
sbb
rcr
xchg
ror
mov
xor
xor
mov
push
cmp
in
adc
cmp
jo
sbb
shr
or
and
adc
dec
mov
pop
or
dec
mov
ret
adc
or
sbb
jne
add
push
clc
adc
mov
add
mov
shl
xor
jo
call
push
loopne
inc
js
lock
dec
icebp
cs
les
inc
hlt
gs
cdq
add
push
adc
inc
inc
inc
aaa
imul
movs
int3
dec
and
icebp
and
int3
dec
repz
mov
rol
imul
shl
dec
hlt
inc
xchg
clc
sub
arpl
sub
sbb
out
push
add
cwde
leave
sbb
fisub
fs
mov
dec
pop
mov
sub
or
sbb
sub
jg
ret
jle
jge
jmp
add
dec
data16
xor
cmp
ja
fs
das
adc
(bad)
cmp
adc
xchg
or
push
mov
xchg
push
adc
xchg
dec
movs
mov
fist
adc
xchg
nop
ds
adc
pop
and
add
lock
cmps
push
loopne
push
xor
sbb
or
or
data16
aas
nop
adc
pop
cwde
inc
dec
lock
inc
mov
jb
mov
(bad)
mov
add
in
adc
cmp
in
in
add
out
in
sbb
in
sbb
test
and
or
push
or
cmp
push
lahf
pop
jg
shl
inc
es
jmp
xor
pop
xchg
dec
pop
sbb
dec
rol
or
and
sbb
out
ins
xor
mov
pop
cmp
movs
inc
add
(bad)
jae
push
shl
bound
sub
shr
xchg
int3
dec
and
xchg
xchg
shl
std
and
pop
xor
xchg
xlat
in
ss
xor
fsub
or
add
mov
clc
call
or
mov
xor
and
xor
jmp
sub
arpl
add
js
lods
(bad)
sub
add
push
xchg
adc
mov
adc
sub
leave
or
push
sub
mov
or
dec
sbb
outs
lods
sbb
sbb
jno
fist
stos
add
aas
push
cmp
push
or
xchg
scas
dec
inc
aas
setae
mov
sub
dec
sub
cmp
cmp
dec
ret
cmp
and
inc
nop
push
or
adc
mov
movsx
aaa
mov
push
mov
iret
push
ret
cmp
test
mov
or
push
and
sbb
xor
push
outs
xchg
addr16
adc
nop
add
mov
fist
cmps
adc
inc
inc
mov
out
ret
push
sbb
rcl
(bad)
lahf
and
adc
add
dec
in
sbb
sbb
je
mov
xchg
pop
xlat
add
call
inc
pop
add
mov
dec
jge
inc
rsqrtps
dec
in
add
pop
popa
adc
xor
inc
sub
hlt
fnstenv
add
push
pop
aam
xchg
mov
adc
inc
adc
push
pusha
jge
and
call
mul
inc
stc
mov
or
dec
pushf
aam
push
mov
sub
shl
test
ret
adc
and
add
lock
nop
pop
jo
push
jbe
jl
add
xchg
or
adc
add
test
jle
(bad)
iret
mov
jle
sbb
jmp
mov
sub
mov
jo
add
xchg
add
ins
or
movs
jnp
imul
jne
pop
popa
mov
or
adc
jnp
shl
mov
arpl
xor
and
push
adc
loope
dec
mov
adc
jl
xchg
addr16
lock
jle
ret
popa
jl
xor
js
imul
xor
or
sbb
xor
test
aaa
out
sub
push
jmp
or
pop
fwait
or
or
rcr
jne
lock
iret
adc
bound
xor
pop
rcl
jnp
or
das
jnp
cmp
inc
sbb
or
jmp
call
dec
push
test
cmp
inc
outs
dec
retf
dec
or
daa
xchg
add
push
add
cmp
xor
jne
and
add
adc
pop
bound
xchg
jns
inc
inc
mov
mov
jg
jae
rcl
lds
shl
rcr
mov
inc
mov
imul
add
push
sbb
push
in
loop
jp
pop
cmp
loopne
mov
xlat
or
mov
and
dec
loop
mov
add
push
inc
mov
adc
push
ins
jb
sub
clc
ins
sub
pop
push
xchg
lock
push
pop
jmp
loop
inc
cld
or
rcr
ja
lea
mov
cdq
xor
ror
outs
inc
ret
push
push
lods
xchg
ins
cmp
add
out
pusha
and
pop
push
fwait
or
or
ins
inc
jb
in
imul
adc
dec
sbb
sbb
xor
pop
rcr
push
mov
pop
pop
adc
xchg
xchg
sbb
or
prefetch
pusha
pop
and
add
add
push
adc
and
fcomp
or
or
and
lahf
push
popa
or
stc
test
inc
add
push
mov
cs
mov
mov
cmp
ins
retf
mov
jg
int
clc
inc
jb
and
jbe
push
ret
xor
jns
pop
mov
daa
test
mov
sbb
and
and
add
pop
jge
adc
push
or
sub
add
cli
mov
and
add
sbb
cmp
jg
sub
enter
pop
or
sub
dec
mov
out
push
or
inc
xor
mov
inc
sbb
mov
add
dec
out
inc
push
xor
pusha
cdq
mov
(bad)
adc
jmp
ds
sbb
enter
mov
or
inc
pop
jo
push
mov
jne
sub
xor
je
cs
dec
inc
cmp
rcl
mov
mov
ds
mov
rcr
out
and
nop
out
jnp
clc
gs
inc
out
fnstsw
add
jne
push
int
push
ins
cdq
test
push
adc
xor
inc
push
jo
test
aas
js
cli
shl
lds
dec
push
dec
jecxz
ret
or
das
fisub
or
push
dec
cmp
and
dec
pushf
pop
cmp
dec
in
mov
or
ret
pop
sbb
mov
jl
fimul
dec
fist
test
push
fimul
or
aam
push
dec
add
inc
mov
pop
fist
sti
push
or
rol
fistp
sbb
jne
popa
cmp
fiadd
mov
rol
xchg
cs
jnp
pop
movd
(bad)
or
neg
jo
pop
gs
mov
mov
fbld
pushf
rcr
mov
jl
jb
jmp
stos
sbb
test
inc
ror
jge
lods
cs
inc
xchg
adc
adc
dec
les
cld
cmp
je
hlt
(bad)
imul
and
iret
xor
push
and
std
add
je
iret
jns
shl
sbb
mov
xor
xchg
lock
add
xor
and
mov
ss
cmp
push
(bad)
cmp
dec
cmp
cwde
stc
and
sbb
call
(bad)
inc
inc
shl
xchg
sbb
test
loope
cmc
or
dec
cdq
push
or
lods
xchg
dec
add
inc
mov
xchg
aas
sub
dec
ret
add
add
loope
adc
push
xor
enter
sbb
dec
pop
cmps
sub
add
jbe
or
rol
jne
jp
out
sbb
nop
sbb
shl
fcmovb
xchg
push
sub
(bad)
sbb
out
dec
jnp
jp
repnz
mov
outs
cmp
jmp
into
sub
mov
add
xor
(bad)
call
or
jae
shrd
sar
ret
mov
sar
and
sar
ret
adc
add
(bad)
adc
sub
mul
je
jne
test
mov
cmp
fs
and
int3
rcl
loope
rcr
adc
jne
movs
je
push
pop
jmp
or
enter
jno
rcr
mov
aas
sub
dec
or
jl
jmp
aam
shr
push
push
dec
dec
es
and
cmp
outs
dec
jmp
nop
fist
push
int
ins
loop
push
or
jmp
std
add
int
add
xchg
(bad)
sbb
cmp
sub
pop
mov
fisubr
jmp
in
mov
aas
lds
xor
div
fist
idiv
ffree
jo
sbb
ret
(bad)
push
sbb
js
or
movq
xor
sbb
dec
int
(bad)
mov
stc
pop
xor
pop
js
daa
rol
jg
push
mov
outs
les
in
adc
movs
stos
jmp
adc
cmps
or
push
or
pop
jo
add
xor
mov
sbb
jo
aad
(bad)
pop
rcr
mov
neg
jae
movs
mov
adc
sbb
adc
ret
fldenv
or
movs
and
mov
jle
sbb
pop
add
xchg
fs
pop
aam
xor
iret
dec
in
jge
test
or
sahf
jle
rol
lea
jecxz
sbb
or
sbb
push
cmp
pop
mov
mov
push
xor
inc
add
push
shr
mov
or
jns
fsub
push
xor
ror
js
cmp
mov
fisubr
and
sbb
test
jo
push
mov
add
push
shr
and
out
adc
sbb
cmp
ds
lahf
pop
loopne
pop
sub
jo
lahf
cmp
sub
ins
jns
xchg
push
mov
jnp
lock
mov
fcmovne
aas
int3
and
adc
sar
and
fdivr
inc
es
push
enter
or
xlat
or
mov
xchg
sbb
ins
arpl
jo
jne
jbe
adc
(bad)
dec
stos
adc
inc
inc
push
mov
mov
mov
cmp
daa
aaa
adc
add
nop
or
les
cmp
push
cmc
xor
inc
add
sbb
popa
retf
ja
cld
inc
adc
jno
loope
mov
push
jae
mov
sar
dec
pop
and
cld
xor
mov
fucomp
lahf
out
add
or
cmp
push
add
test
or
pop
mov
cld
jns
add
test
or
cmps
stos
out
test
cmp
inc
loope
jne
pop
loopne
fwait
xor
xchg
(bad)
mov
cdq
je
mov
fs
js
adc
inc
sbb
fdivr
ret
inc
pushf
movzx
dec
or
test
sbb
push
fsubr
inc
jmp
and
dec
mov
sub
or
adc
dec
dec
aam
adc
test
ins
loop
hlt
add
sbb
push
push
fadd
add
sbb
or
ss
out
mov
push
pusha
pop
ret
dec
aas
sub
lock
(bad)
imul
dec
enter
xchg
stos
cdq
add
mov
xor
sbb
add
xchg
std
in
sbb
scas
sub
xchg
pop
mov
inc
mov
and
lock
nop
push
repnz
es
mov
mov
xchg
mov
ja
or
xchg
pop
and
outs
inc
xchg
retf
jmp
xor
out
test
adc
adc
add
push
pop
pop
ins
loop
dec
sbb
movzx
(bad)
adc
fild
add
les
mov
loopne
retf
outs
and
pop
test
pop
or
or
push
mov
push
inc
rol
aad
pushf
sbb
xchg
ds
movs
mov
mov
aaa
or
or
inc
push
or
xor
cmp
and
dec
fcmovnbe
nop
inc
lods
in
sbb
nop
pop
mov
cwde
add
jg
adc
add
sub
mov
int
rcl
mov
aam
retf
jb
jb
or
or
and
pop
out
jle
ror
retf
or
mov
or
add
or
sub
retf
sbb
add
xchg
cmp
mov
or
pop
sbb
adc
int3
mov
lock
int
add
pushf
mov
pop
adc
test
les
mov
jg
or
adc
adc
sub
jg
and
adc
adc
dec
lods
mov
cmp
mov
sub
adc
scas
push
add
add
dec
es
stos
add
ja
pusha
test
int
mov
les
add
mov
dec
and
call
sbb
xchg
movs
push
jmp
push
call
add
ret
aas
ins
mov
or
ror
neg
jecxz
adc
or
adc
or
cmp
jo
dec
pop
jp
push
or
mov
xchg
aaa
test
pop
test
mov
fistp
add
inc
loop
enter
xchg
cmp
sbb
inc
in
pop
nop
pop
jne
addr16
pop
enter
add
add
nop
sbb
xlat
or
adc
push
jb
aam
or
and
test
and
add
or
loopne
inc
push
popa
popf
dec
mov
enter
mov
inc
adc
sub
popf
mov
(bad)
ja
arpl
cmp
pop
or
popa
popf
dec
mov
sbb
jbe
test
jns
xor
loopne
mov
int
pop
add
xchg
adc
xchg
or
fadd
mov
hlt
or
push
push
(bad)
jmp
adc
adc
xchg
btr
mov
icebp
jb
push
add
push
ret
cmc
jbe
lahf
test
sbb
mov
enter
arpl
rcr
loopne
pusha
dec
add
dec
rol
push
mov
mov
fwait
add
sbb
or
push
lock
jg
lods
sub
xchg
(bad)
dec
ja
mov
jo
and
or
or
jge
inc
add
stos
push
popf
aas
cwde
xor
jg
adc
call
push
or
aam
mov
add
xor
(bad)
and
sbb
mov
push
int3
shr
xor
jmp
xor
rcr
daa
sbb
bound
xchg
xor
sbb
sub
dec
loop
mov
inc
xor
dec
xchg
(bad)
and
xchg
adc
fldcw
add
and
or
idiv
mov
xor
shl
cld
push
arpl
adc
sub
pop
aas
movhps
fdivr
movs
xchg
ret
adc
into
dec
jb
adc
ins
rol
leave
ret
inc
ftst
cmp
cs
lock
push
mov
xor
scas
ss
shl
adc
adc
test
jmp
inc
sbb
les
add
or
nop
movs
pop
and
xor
adc
sub
xchg
inc
ja
ror
cmc
or
jg
aaa
mov
or
fistp
push
bsf
dec
push
nop
fstp
adc
and
xadd
mov
add
push
mov
out
cmp
popa
adc
or
mov
add
inc
xchg
fwait
push
mov
xchg
das
leave
push
lods
pop
cmp
xor
inc
test
add
sub
push
fwait
popa
add
test
jp
sub
sub
movs
push
clc
push
rcr
xchg
inc
adc
cmp
inc
rcl
inc
out
ret
ins
imul
cli
xchg
loopne
xchg
fdiv
xor
inc
pop
adc
add
cld
push
sbb
or
dec
pop
mov
adc
inc
and
aam
adc
jmp
pop
adc
rcr
cli
mov
sbb
pusha
aas
hlt
jmp
pop
ds
sub
adc
inc
ror
fistp
in
jmp
pop
aaa
ss
xchg
mov
(bad)
xor
ins
in
or
aaa
shl
nop
add
ret
xchg
fimul
(bad)
mov
lea
xchg
mov
pop
cmp
or
ins
iret
mov
mov
fsubr
or
inc
cmp
cdq
push
mov
inc
cmp
in
mov
out
ins
sub
mov
sub
and
pop
xchg
test
xchg
fistp
push
push
pop
(bad)
lock
adc
popa
add
inc
mov
jne
ss
xchg
gs
call
push
cdq
jmp
loopne
xchg
xchg
pop
cwde
lea
add
pop
push
mov
in
push
adc
dec
iret
inc
or
jae
mov
call
sub
cmp
push
por
push
mov
ret
add
adc
movs
ret
mov
ror
loop
and
mov
mov
aas
sahf
shl
popf
cdq
jmp
pop
and
push
test
inc
xchg
cmp
aaa
test
shl
fidiv
xor
mov
sbb
ja
neg
movs
dec
and
jg
sbb
xchg
div
loope
push
shr
inc
mov
idiv
into
jl
push
daa
shr
rcr
shr
rcr
or
jne
xchg
cwde
test
sub
movs
out
shl
cmp
or
cmp
add
cwde
popa
and
fcom
es
rcr
add
pop
imul
mov
pop
mov
ins
add
sbb
or
sbb
and
pop
mov
pop
call
inc
les
push
jae
pop
dec
or
movs
dec
push
les
cwde
dec
mov
retf
pushf
ror
cmp
jmp
sub
(bad)
fistp
es
ja
addr16
pop
fwait
ss
fbld
cmp
add
retf
inc
or
mov
je
dec
and
(bad)
mov
mov
sbb
pop
push
jmp
inc
and
adc
sub
test
fld
ret
pop
fwait
or
jg
retf
rcl
mov
lds
xor
(bad)
vmwrite
lods
adc
xchg
les
mov
fcom
xchg
jge
jbe
sar
or
ret
fisttp
mov
adc
adc
ins
es
add
push
mov
push
adc
cli
xchg
mov
popa
lods
dec
call
dec
pop
outs
and
out
popa
pop
cmps
inc
js
or
test
nop
pop
lea
adc
jmp
adc
les
fld
in
ret
arpl
jmp
imul
(bad)
push
mov
and
mov
pop
test
inc
call
xchg
mov
sub
sub
mov
inc
(bad)
mov
or
dec
pop
inc
jge
adc
cmp
or
add
mov
call
outs
xlat
mov
inc
mov
push
and
cmovae
clc
xor
and
inc
inc
cmp
or
iret
mov
push
or
pop
loope
push
mov
inc
push
sbb
push
out
adc
outs
and
adc
(bad)
cmps
btr
mov
cli
shl
out
(bad)
push
jmp
push
or
push
dec
adc
sub
sbb
mov
sbb
inc
sub
pop
inc
cmp
cmps
lock
in
mov
mov
mov
add
(bad)
fwait
or
mov
push
mov
sbb
pop
call
sub
int3
sbb
dec
or
mov
test
test
mov
mov
or
cmp
(bad)
add
mov
mov
sbb
push
or
add
or
cmp
dec
mov
jnp
add
(bad)
push
arpl
test
mov
xchg
sub
ror
or
add
xchg
lods
or
pop
inc
(bad)
add
jne
imul
cdq
adc
ret
(bad)
cld
test
sub
(bad)
push
push
or
or
inc
pop
push
sbb
or
cmc
sbb
or
hlt
sbb
adc
xor
push
dec
pop
cmc
sub
sub
cmps
enter
or
lahf
mov
add
mov
or
push
sbb
and
inc
repnz
mov
jo
and
sbb
cmp
dec
mov
push
push
fild
push
fild
imul
push
popf
mov
ret
fnsave
icebp
jne
pop
(bad)
jne
inc
inc
loope
mov
popf
xchg
sub
and
jae
bound
mov
add
pop
sub
xchg
pop
pop
or
fwait
mov
dec
xor
push
prefetcht1
pop
test
xor
cmps
fcmovnb
adc
cmp
clc
inc
jb
sbb
cmp
push
sub
add
mov
dec
aas
xchg
inc
rol
cmp
add
mov
sbb
rol
push
or
sbb
loope
ins
cdq
retf
adc
nop
out
push
inc
pop
sub
sbb
mov
jge
fstp
inc
jmp
and
jne
pop
fistp
sbb
shl
add
neg
fild
and
sub
out
adc
lahf
cdq
add
or
mov
mov
jecxz
add
ins
inc
and
ret
pop
add
icebp
fcom
dec
add
mov
ret
shl
lock
or
or
scas
jmp
or
retf
rol
outs
cmc
(bad)
fld
adc
mov
in
sub
fadd
sub
sub
icebp
inc
mov
sbb
sub
rcl
loopne
push
add
push
mov
push
ins
adc
dec
cs
jmp
mov
sbb
mov
loopne
inc
or
(bad)
sbb
mov
hlt
popf
cmp
shl
or
je
sbb
add
jg
int
test
xchg
or
test
gs
add
arpl
sbb
push
inc
mov
cmp
cmp
add
mov
mov
or
xor
fs
mov
inc
xchg
cwde
mov
sbb
xchg
imul
cmps
das
sub
or
lea
pop
and
cmc
mov
cwde
call
mov
mov
cmps
add
xor
dec
cdq
enter
add
fs
test
mov
add
adc
fstp
lea
add
(bad)
aas
aad
jge
popa
je
or
or
or
adc
jmp
(bad)
adc
jno
or
inc
xor
(bad)
mov
aam
mov
xchg
adc
dec
imul
dec
imul
in
mov
add
loope
or
and
adc
dec
dec
clc
(bad)
inc
test
adc
jb
loope
push
ja
fmulp
rol
shr
or
mov
dec
outs
or
adc
js
jp
mov
pop
fild
loopne
sub
aam
pop
xor
mov
jne
jge
add
dec
test
add
loopne
ja
adc
cmps
mov
ret
sub
sbb
out
dec
call
sub
sti
or
push
xchg
nop
(bad)
sbb
and
dec
gs
mov
pop
pusha
sub
adc
inc
(bad)
or
mov
add
xor
mov
cmp
shr
lea
test
rol
add
push
lods
arpl
fwait
out
not
sbb
ss
add
add
and
mov
gs
or
mov
or
pop
adc
jb
add
inc
jo
sbb
inc
xchg
and
loop
pop
gs
aas
mov
rol
or
icebp
and
gs
pop
push
or
fwait
xchg
(bad)
stos
xchg
add
gs
push
xchg
adc
gs
jns
xor
ds
mov
dec
mov
jne
test
rcr
out
stos
pusha
js
movs
(bad)
loop
and
mov
and
xor
add
cmps
outs
icebp
add
mov
(bad)
fwait
jo
sbb
mov
js
fdivr
adc
adc
add
cmp
ins
popa
test
stos
push
or
push
retf
push
or
popf
rol
(bad)
fdiv
jnp
ret
test
push
jmp
xor
and
pop
mov
loop
add
(bad)
dec
enter
mov
mov
inc
loopne
sub
sahf
add
adc
fistp
leave
cmp
sub
pushf
and
ret
gs
dec
ret
sub
div
add
sbb
push
dec
(bad)
mov
add
adc
pop
jg
test
test
aad
fwait
add
push
xchg
lods
stos
scas
push
or
cdq
fimul
adc
inc
xor
shr
loope
rcr
in
inc
mov
and
je
xchg
dec
xchg
jmp
lock
cdq
sub
test
pop
stos
loopne
std
ins
mov
scas
pushf
test
pushf
fidivr
xor
inc
or
add
and
gs
ss
push
pop
lds
pop
push
rcl
or
jmp
outs
pop
addr16
adc
leave
adc
cmp
gs
shl
cmp
dec
imul
and
mov
retf
cmp
jbe
inc
adc
add
call
add
and
cmp
cmp
call
xor
dec
inc
shr
xor
rcl
inc
in
sar
adc
mov
lock
es
or
xor
sub
aam
div
add
inc
push
imul
and
or
pop
lea
add
mov
pop
xchg
adc
popa
loopne
pop
and
push
mov
xlat
ret
adc
imul
je
push
ins
(bad)
aaa
jmp
lods
add
fisttp
aaa
sub
sbb
test
outs
shl
hlt
aaa
cmp
jns
xor
pop
adc
fdivr
jne
push
adc
xor
sbb
xor
sbb
mov
shr
outs
dec
mov
dec
pop
jg
push
push
mov
es
in
add
and
or
add
inc
push
add
pusha
and
add
pop
sub
fxch
retf
and
loopne
inc
into
push
stos
(bad)
pop
ja
(bad)
scas
add
xchg
add
scas
jno
loopne
cmp
jl
in
push
dec
sbb
sub
rol
les
outs
add
add
sbb
adc
outs
ror
sub
sbb
push
mov
in
inc
in
leave
dec
dec
cmp
sub
in
es
ja
lock
inc
cmp
test
jae
std
or
dec
push
das
xor
and
jo
stos
add
ins
xor
push
mov
or
scas
jg
dec
fdivr
pop
push
or
ror
jle
and
xchg
or
std
jae
push
push
pop
enter
stos
adc
leave
xor
or
shr
adc
inc
cwde
pop
adc
sub
pop
int3
push
xor
aas
push
mov
and
adc
push
leave
pop
jo
adc
shr
pushf
sub
les
mov
add
add
adc
push
outs
imul
pusha
adc
cmp
jns
add
ffree
and
rcr
pop
adc
and
xor
inc
icebp
test
inc
xor
or
push
ret
shr
inc
mov
mov
cmp
mov
pusha
pop
ins
xchg
inc
add
iret
outs
popaw
sbb
adc
xor
ss
shr
push
mov
cmp
sub
push
inc
lock
mov
push
loope
rcl
mov
arpl
call
mov
xor
jne
adc
sahf
xor
sub
cli
add
and
cmova
in
inc
sub
mov
gs
cmovge
in
lods
call
cmp
push
test
pop
or
or
jmp
mov
movs
pop
mov
rcr
in
fbstp
in
sub
and
test
nop
sub
nop
fbstp
lahf
jecxz
add
mov
ret
mov
sub
movs
cdq
xor
jno
jecxz
loop
sti
sub
test
jb
cmp
ds
and
push
loope
pop
in
adc
inc
pop
add
pop
ja
test
jmp
pusha
cmp
loope
or
sub
jne
lea
jo
mov
pop
add
in
es
xor
imul
add
inc
shr
jl
sbb
popf
in
jmp
ds
clc
pop
or
dec
add
test
inc
daa
pop
pop
loopne
push
leave
or
sub
xchg
shr
ds
shr
xchg
add
iret
loopne
loope
ja
in
xchg
(bad)
ror
addr16
pop
lock
mov
push
jnp
loopne
nop
jnp
ret
(bad)
lfs
rcr
jecxz
add
cmp
dec
mov
xchg
or
dec
gs
sub
fsub
cmp
pop
addr16
out
xor
adc
enter
jl
xchg
push
test
push
stc
test
cmp
pop
push
sar
push
add
pop
in
in
inc
enter
or
dec
mov
jae
not
pop
nop
inc
pop
dec
sbb
jae
jmp
pop
es
cmp
jb
mov
scas
push
push
push
mov
adc
jnp
or
(bad)
inc
sti
push
adc
mov
outs
outs
pop
jo
cmp
ret
or
mov
shr
jno
mov
xor
jb
jg
fistp
popf
cmp
mov
ror
cmc
and
sub
in
(bad)
cs
and
or
ja
jle
or
push
push
test
jnp
push
add
clc
pusha
ret
xchg
aad
add
or
cmp
in
sub
fs
ret
out
das
sub
push
movs
(bad)
ror
shr
push
cmp
(bad)
(bad)
mov
lea
adc
(bad)
sub
lea
jo
adc
mov
mov
sub
mov
(bad)
or
jmp
add
ins
inc
test
test
mov
rol
jecxz
pop
js
test
inc
push
test
pop
icebp
clc
adc
xor
mov
lods
test
mov
add
add
xor
dec
push
add
mov
adc
dec
pop
inc
pop
add
push
pop
fs
mov
dec
call
push
pop
mov
jg
jle
mul
jnp
xchg
mov
push
or
and
push
sbb
push
add
shr
xchg
ror
jno
push
out
mov
cmp
mov
add
pusha
daa
clc
fcomp
mov
rcl
push
scas
and
add
inc
mov
jns
add
inc
test
aaa
pop
sbb
lea
mov
and
xor
retf
pushf
enter
mov
or
adc
xor
pop
and
aas
push
cmps
dec
bound
dec
imul
or
icebp
data16
mov
je
mov
push
xchg
or
xchg
push
inc
pop
inc
inc
pop
retf
add
xchg
push
mov
xchg
in
inc
xchg
fild
push
push
cld
ror
add
les
ret
adc
imul
movs
in
addr16
leave
cmp
add
push
inc
add
test
pop
clc
mov
shl
cmps
and
or
mov
aas
mov
sub
ret
fild
pusha
mov
adc
or
add
rol
xor
jne
add
sub
mov
leave
sbb
mov
sub
mov
inc
rol
mov
and
xor
adc
daa
icebp
xor
push
add
xchg
cmp
xchg
ds
add
sbb
inc
mov
je
xor
(bad)
je
pop
push
pop
mov
add
or
dec
or
imul
(bad)
sbb
adc
mov
pop
push
int3
or
and
jg
mov
mov
pusha
or
and
cmp
(bad)
inc
dec
leave
or
jmp
add
aas
adc
and
jb
leave
mov
or
or
movs
or
aas
adc
loopne
jae
jg
(bad)
std
mov
push
arpl
aas
and
es
jl
cmps
or
pop
enter
pop
movs
xor
sti
inc
add
or
pushf
push
inc
movs
pop
push
or
mov
pusha
in
and
scas
cmp
xchg
das
adc
xor
mov
jne
xchg
sbb
or
xlat
ins
bt
or
ret
mov
or
push
push
mov
push
xor
mov
or
ins
test
jae
mov
ror
cmp
or
les
sub
rcl
and
jo
push
shl
repnz
and
(bad)
xor
fdiv
dec
aam
je
inc
aam
aaa
jl
mov
int
sub
loopne
and
call
mov
xchg
xchg
scas
ss
cmp
retf
push
mov
pop
in
jl
or
arpl
mov
push
push
ins
sub
in
sbb
daa
pop
sub
adc
mov
popa
push
inc
mov
mov
pop
push
add
pop
daa
jbe
retf
inc
popf
test
inc
rcr
inc
push
cmp
loopne
xchg
adc
daa
jo
xor
stc
jp
add
imul
imul
inc
xlat
add
jmp
pusha
pop
ss
aaa
mov
mov
dec
cs
push
mov
ins
mov
test
pop
sbb
pop
add
popa
push
pop
push
cmp
and
pop
and
loop
push
add
lea
add
ret
adc
inc
push
mov
in
jmp
ret
rcl
ror
cmp
rol
add
ret
rol
shr
add
movs
push
ret
shl
mov
or
and
jmp
pop
(bad)
leave
retf
sub
ins
lods
lea
adc
imul
xor
ins
into
clc
mov
mov
ins
jnp
lods
adc
add
push
(bad)
data16
push
cmovb
inc
jg
pop
xor
sub
es
popf
cmc
pushf
lahf
xor
and
fwait
idiv
test
sbb
inc
mov
adc
pop
jo
das
data16
xchg
mov
or
inc
jae
sbb
and
dec
inc
jo
dec
aas
jecxz
dec
fs
push
push
mov
test
and
dec
add
mul
cmp
pop
mov
sbb
push
add
cmp
dec
add
or
mov
arpl
(bad)
movs
cmp
call
push
mov
fnstsw
test
push
repnz
and
pop
fst
ret
push
or
add
pop
mov
add
jg
xor
cmp
sub
xlat
cld
repnz
pop
xchg
push
enter
call
lea
nop
pop
fs
or
mov
imul
sbb
jb
add
(bad)
ja
leave
adc
or
daa
pop
dec
mov
js
jae
gs
cld
add
cmc
add
inc
pop
clc
add
dec
idiv
sub
inc
mov
inc
mov
add
sub
cmc
inc
loopne
and
push
sub
sbb
test
sbb
xchg
mov
aas
mov
jle
push
push
xor
xor
adc
ss
pusha
pop
and
hlt
push
add
pop
xor
movs
adc
dec
int
sub
add
cmc
and
add
adc
jp
or
stos
xchg
inc
xor
or
jne
pop
jnp
test
jmp
dec
sbb
les
or
inc
jne
adc
and
inc
cmp
jno
or
gs
jne
popf
ins
push
xor
pop
cld
cld
mov
jne
pop
dec
ror
loope
popa
or
movs
mov
fistp
pop
mov
or
mov
push
adc
add
mov
push
cmps
arpl
out
retf
in
or
aad
inc
sbb
ins
push
aas
mov
sbb
push
pop
popa
popa
daa
add
or
inc
or
loopne
cld
sar
jmp
sbb
(bad)
mov
mov
jmp
ror
pop
loopne
pop
and
adc
add
add
add
and
xlat
imul
mov
xchg
mov
xchg
idiv
cmp
test
pop
add
rcr
dec
xchg
int
lods
fcom
add
cmps
sar
call
mov
inc
es
test
(bad)
add
mov
loopne
dec
outs
sub
xchg
pop
xchg
push
adc
xor
jno
cld
inc
or
dec
add
cld
or
dec
jne
jl
add
inc
jne
fcomp
hlt
add
sub
pop
jmp
xchg
sub
pand
jns
mov
adc
popf
test
outs
sbb
(bad)
hlt
sbb
or
push
ds
aaa
jecxz
jae
push
and
inc
pop
repz
fadd
inc
xlat
or
push
dec
add
or
dec
mov
mov
jo
mov
das
or
mov
cmp
mov
jno
aas
call
mov
pop
push
fisttp
push
push
sub
cdq
and
sbb
cmp
and
cmp
cmps
scas
popa
or
call
ja
or
fs
add
js
outs
jge
fidivr
mov
fs
lods
dec
cmp
jmp
mov
mov
adc
push
mov
or
rol
mov
inc
sbb
sbb
jp
mov
inc
adc
push
cmps
inc
or
add
adc
pusha
std
call
sbb
mov
dec
xchg
outs
out
sbb
push
arpl
or
mov
nop
jge
adc
add
inc
inc
or
jmp
and
cwde
add
xor
out
dec
adc
movs
dec
ret
pop
adc
add
aaa
lds
cmp
popa
dec
mov
push
add
mov
cwde
and
fadd
jg
inc
mov
dec
adc
fld
or
imul
cmp
movs
or
inc
sub
xchg
test
jecxz
inc
pop
leave
sub
or
leave
add
mov
mov
fld
mov
ins
xor
or
adc
push
stc
dec
movs
add
nop
test
jae
xchg
push
and
add
mov
xchg
xor
inc
mov
or
pop
popf
cmps
add
jp
add
ret
add
or
out
or
sub
mov
cwde
pusha
sbb
or
or
mov
inc
test
and
mov
jo
and
enter
adc
arpl
cli
mov
add
mov
adc
(bad)
cld
add
sbb
retf
mov
cmp
xor
cmp
or
mov
fidivr
and
icebp
pusha
ja
xchg
cmp
xor
jg
pusha
inc
or
movs
xchg
pushf
add
pusha
xchg
imul
push
inc
cmp
push
and
enter
ja
mov
mov
inc
adc
push
ret
call
push
test
add
xchg
adc
jo
or
jmp
in
jne
push
adc
or
lea
call
mov
adc
mov
mov
mov
xchg
add
add
push
or
push
in
daa
fcomp
les
aad
shr
dec
mov
and
jno
sbb
sbb
mov
inc
adc
mov
clc
jns
outs
sbb
jge
add
mov
loopne
test
inc
or
rol
cmp
jmp
test
push
add
and
add
jmp
mov
push
dec
nop
mov
xlat
nop
jne
add
cmp
les
push
xchg
imul
add
push
add
xor
push
push
mov
push
xor
mov
pop
and
dec
mov
ja
mov
and
inc
dec
inc
mov
les
fild
in
or
and
js
dec
sub
loope
cmp
push
mov
(bad)
retf
adc
or
push
xchg
inc
movs
push
icebp
ins
or
pusha
rol
mov
push
adc
ins
(bad)
adc
pusha
adc
loope
add
imul
dec
mov
inc
aaa
pusha
or
repz
lock
(bad)
(bad)
cs
(bad)
mov
pop
aaa
or
stos
jnp
jmp
inc
inc
mov
inc
dec
jb
inc
test
xor
rol
cmp
stos
adc
add
or
in
push
push
cdq
leave
cwde
mov
retf
adc
pusha
int
or
add
cmp
xchg
fs
(bad)
dec
cmc
rol
ja
lods
push
or
xchg
sub
mov
add
add
fidivr
dec
ja
push
enter
cwde
mov
xchg
and
aaa
add
call
cld
jmp
or
adc
fcomip
or
pop
lock
adc
dec
(bad)
(bad)
dec
cmp
inc
inc
and
fwait
sar
jne
dec
and
jnp
pop
dec
cmp
or
xor
jge
add
imul
xchg
adc
sub
sub
inc
inc
add
inc
or
add
enter
adc
jnp
xor
sbb
movs
das
xor
inc
hlt
push
test
pusha
pusha
das
jmp
cmps
nop
cmps
adc
and
fnstsw
inc
push
cmc
push
cmps
or
adc
inc
xchg
(bad)
nop
mov
dec
xor
or
mov
adc
xchg
jns
xor
dec
loope
loopne
fist
loope
mov
mov
cmp
fstp
jnp
inc
jl
rcl
data16
outs
inc
lods
xor
inc
mov
inc
cwde
lea
inc
mov
loope
mov
inc
lock
mov
in
or
push
movs
sub
sbb
sbb
sub
rcl
mov
xchg
lods
pop
add
jmp
ret
and
lahf
nop
add
mov
nop
mov
sub
pop
cs
xchg
shl
xchg
cmps
je
xchg
(bad)
pop
rcr
test
jno
push
add
imul
or
lea
fwait
movs
lods
add
push
mov
sbb
cmp
add
sbb
dec
dec
mov
inc
push
push
adc
adc
rol
inc
jno
or
jle
jae
push
adc
xor
xchg
sbb
popf
inc
inc
rcr
pushf
push
js
addr16
mov
pop
bts
jae
dec
lock
cmp
jne
add
fisubr
xor
xor
je
sub
add
sbb
adc
cmp
stc
test
cs
add
push
pop
repnz
cmps
pop
neg
adc
adc
add
mov
add
push
addr16
inc
pushf
rcl
and
cmps
or
sub
adc
xchg
add
imul
add
push
popa
call
or
dec
add
inc
add
pop
push
es
xchg
add
jmp
mov
cmovno
push
sub
pop
dec
adc
sub
mov
jne
sub
add
jle
or
and
dec
pusha
movs
jg
sbb
(bad)
xor
mov
loopne
sbb
add
jne
cwde
push
lods
in
mov
adc
int3
adc
adc
sbb
inc
mov
jns
mov
sub
adc
add
mov
add
fbstp
pop
push
mov
push
outs
jl
or
push
cmp
pop
out
xor
and
push
and
or
mov
cs
ja
mov
std
or
inc
mov
out
or
int
stos
arpl
and
movs
retf
lea
mov
and
or
mov
or
mov
adc
stc
div
arpl
and
aaa
pop
(bad)
hlt
sub
inc
jae
add
and
cmp
dec
add
sar
add
inc
int
add
dec
ror
jnp
add
lods
sbb
aam
add
ror
popa
fadd
or
out
push
movs
gs
dec
inc
clc
ror
inc
or
test
std
mov
test
aam
add
ror
push
jmp
arpl
lock
enter
popa
push
or
add
push
in
retf
jp
push
sbb
or
or
test
jl
add
and
xor
cmp
shr
xchg
inc
sub
cmp
jmp
adc
xchg
dec
or
ins
and
fs
pusha
repz
pop
add
or
pop
push
push
rol
ins
pusha
sbb
sbb
xchg
mov
push
jmp
inc
pusha
or
sub
ins
jmp
and
pusha
sbb
sti
subps
jmp
dec
out
shr
test
pop
loopne
sub
(bad)
push
loopne
sub
push
adc
xor
inc
cli
fsubr
add
adc
xor
sbb
enter
sub
add
loope
rol
sub
rcr
jg
or
xchg
sahf
add
mov
push
test
daa
sub
cmp
xlat
adc
xchg
pop
les
scas
mov
pop
ja
loope
pop
shr
sub
push
test
int3
push
xor
jl
push
shr
add
imul
shl
and
ins
push
hlt
mov
enter
pop
mov
or
mov
cmp
(bad)
and
clc
mov
mov
jmp
cmp
mov
jge
ins
pop
es
jo
shr
pop
enter
push
or
add
loop
rcl
shr
cmp
push
je
imul
and
dec
pop
add
lods
cmps
cmp
shr
sbb
xor
call
jmp
mov
clc
movs
movs
int3
mov
pop
hlt
push
add
cmp
iret
enter
test
fst
and
and
push
sbb
imul
inc
cmp
jnp
gs
inc
jg
mov
sbb
xchg
add
inc
add
add
mov
xor
jl
inc
dec
add
call
lea
not
sub
mov
popa
shl
inc
sar
pop
xchg
add
dec
dec
icebp
int3
or
xor
pop
enter
enter
or
das
fs
(bad)
sar
inc
inc
pop
mov
test
push
sub
rol
pop
imul
mov
outs
and
adc
push
inc
fdivr
int3
push
adc
test
cmp
es
inc
and
mov
clc
or
shl
inc
lds
sub
shl
mov
pop
enter
sbb
sub
sbb
adc
and
ss
cmp
cmps
adc
or
push
cmp
inc
jo
movs
rcl
mov
or
sub
mov
and
xor
mov
fnsave
sbb
popa
jmp
sbb
mov
mov
sbb
add
adc
pop
lock
inc
mov
enter
and
test
lods
add
mov
inc
fbld
add
adc
mov
mov
pusha
inc
pop
jg
add
shl
cmp
sahf
call
jb
cmp
not
mov
mov
and
test
mov
je
out
mov
mov
and
mov
or
adc
mov
xchg
mov
push
sbb
inc
imul
and
cmc
mov
fld
sbb
and
cmp
adc
jb
push
sub
inc
jbe
sbb
bound
cld
and
lock
mov
add
jns
mov
and
push
or
les
inc
rol
jo
push
sbb
mov
jle
inc
add
pop
jno
mov
jg
sbb
adc
daa
or
xor
daa
ret
(bad)
jl
or
mov
mov
test
lods
push
or
push
add
dec
inc
xchg
dec
add
jnp
fmul
cmps
cmp
(bad)
and
sbb
add
test
and
add
mov
push
retf
inc
push
inc
popf
xor
sbb
sub
add
add
inc
in
repnz
syscall
das
js
cmp
xor
sub
jne
or
and
sub
adc
xor
fsub
pop
push
mov
add
mov
lods
inc
sub
or
xchg
mov
je
cmovae
test
mov
xchg
shl
jb
data16
lea
mov
ret
ffreep
or
outs
pop
cmp
or
mov
rol
inc
mov
rcl
add
jae
dec
sbb
adc
jbe
xchg
fiadd
cmp
loopne
push
call
jmp
sbb
xor
lock
test
in
jae
pop
and
inc
pop
add
adc
mov
or
lea
fnstsw
inc
in
and
add
xor
mov
sbb
adc
mov
icebp
fadd
jle
int
mov
addr16
push
xchg
mov
pop
pop
loopne
daa
pop
sub
fsub
ret
sub
pusha
push
sbb
jmp
sub
xor
adc
scas
test
and
int3
sub
cli
or
mov
adc
mov
sar
mov
nop
mov
push
sbb
mov
in
or
and
xor
fwait
lods
nop
test
push
int3
int
shl
mov
in
or
push
adc
mov
pop
ret
rol
mov
inc
adc
sub
shl
inc
jmp
sbb
ret
jno
or
jne
int
xchg
outs
inc
les
and
inc
jns
jne
or
sar
cmps
inc
or
mov
sub
sub
mov
or
sub
aas
sbb
push
add
dec
dec
or
pop
add
pop
enter
mov
dec
aad
pop
icebp
push
invd
ds
ret
out
sub
cmp
dec
inc
loopne
sub
dec
jne
fs
add
jg
add
popa
mov
mov
jmp
push
sbb
ret
add
adc
add
scas
adc
cld
sub
ret
js
jo
jg
or
mov
mov
dec
fsubr
mov
inc
retf
sbb
inc
pop
push
and
out
dec
aas
inc
add
adc
push
jmp
add
push
mov
add
cld
cmp
lock
xchg
push
add
jo
call
hlt
or
shl
dec
xchg
mov
ss
mov
ret
movs
adc
adc
loope
xchg
(bad)
pusha
cmp
shr
and
and
mov
sbb
ins
and
inc
or
add
pop
inc
bound
jle
pop
push
inc
or
stos
nop
and
jecxz
lock
jno
clc
mov
sti
hlt
mov
xor
and
ins
or
push
shl
jg
ret
inc
add
adc
sbb
je
or
repnz
inc
sbb
inc
sub
sub
mov
add
sub
int
stc
jl
loopne
adc
mov
(bad)
jle
add
push
sub
inc
sbb
sbb
mov
xor
or
or
inc
stos
sub
icebp
cdq
mov
sub
pop
clc
enter
add
rcr
mov
inc
mov
fcomp
pop
pop
sbb
push
xor
or
pop
in
sub
cmp
mov
movs
mov
add
adc
adc
aas
mov
addr16
or
mov
pop
nop
push
mov
adc
xor
xor
pop
mov
xchg
bound
or
add
add
push
sbb
inc
loopne
inc
lods
mov
test
call
sub
lods
sbb
xchg
dec
adc
mov
xor
int3
mov
addr16
cwde
mov
inc
pop
je
fwait
lock
or
adc
push
jns
enter
retf
enter
dec
sbb
call
add
pop
inc
xor
inc
pop
test
(bad)
adc
jnp
sub
mov
stc
es
lea
push
adc
add
hlt
ret
xor
cmp
mov
adc
jbe
dec
fisub
xchg
ror
and
out
or
cmp
les
sbb
imul
or
xchg
das
mov
push
jle
and
jg
loopne
xor
mov
cmp
pop
and
push
mul
sbb
test
adc
mov
xchg
clc
adc
inc
sub
cld
sub
sub
sub
sti
fwait
mov
sbb
int3
push
leave
leave
xor
mov
add
add
popa
pop
or
fdiv
js
(bad)
dec
mov
mov
add
movs
add
push
movs
sub
jl
mov
cld
cmp
cld
cmp
add
jmp
or
add
sub
xor
or
push
xor
and
xchg
sbb
dec
je
adc
nop
sbb
pop
xchg
adc
js
sahf
(bad)
and
cld
add
shl
dec
je
loopne
adc
or
push
jo
sub
aas
rol
shld
mov
daa
jge
rcr
jle
xchg
(bad)
imul
loopne
or
sbb
add
push
or
and
xchg
mov
xchg
add
aad
jno
xchg
leave
nop
out
inc
add
jl
add
and
dec
xchg
or
rcl
add
add
sub
loopne
je
add
nop
and
ds
fwait
gs
push
pop
add
xchg
and
retf
jmp
mov
ins
cmp
jp
shl
push
sar
sub
push
or
rcl
jne
fist
ja
mov
loope
push
scas
adc
sti
inc
dec
sbb
adc
mov
or
int3
cmp
scas
addr16
js
push
or
jmp
inc
xchg
xchg
jge
sar
push
xchg
pop
push
push
inc
mov
pop
sbb
popa
pop
(bad)
add
movs
lea
push
nop
mov
imul
adc
sbb
push
gs
test
aam
rcr
scas
ror
add
xchg
jp
dec
or
mov
pushf
mov
imul
test
lds
mov
mov
es
dec
mov
xor
pop
mov
push
ret
lods
aaa
and
ror
loope
adc
adc
ins
rcr
ins
or
les
lea
jge
data16
sahf
out
xchg
hlt
test
ret
xchg
push
lods
icebp
add
lods
xor
sub
sub
ror
cmps
lock
sbb
xchg
cmp
ret
and
int3
jmp
and
movs
push
adc
inc
or
push
mov
add
adc
adc
loopne
pop
mov
jns
dec
add
lds
sub
xor
fisttp
push
daa
addr16
jecxz
xchg
xor
add
int
add
retf
push
or
xchg
enter
add
and
xchg
add
and
inc
cmp
xor
jmp
mov
inc
push
xchg
pop
and
push
das
je
and
mov
add
lods
cmps
or
call
push
data16
mov
or
sar
pop
stos
push
mov
or
or
mov
jne
or
push
mov
mov
add
repnz
iret
inc
pop
movzx
sub
sub
loop
add
mov
mov
loope
push
mov
adc
sub
adc
rcr
lock
xor
mov
ss
jne
push
xchg
sub
clc
pop
cmc
cld
mov
stos
sub
add
or
adc
adc
fisttp
mov
inc
cmp
mov
adc
sub
cmp
(bad)
sub
pop
push
xchg
push
jle
xlat
inc
pop
mov
jmp
movzx
jmp
sti
mov
pusha
cmp
add
and
mov
daa
adc
add
mov
retf
push
imul
push
pop
inc
(bad)
adc
add
jecxz
pusha
sub
or
pop
jecxz
lea
rcr
or
push
sub
sub
add
jmp
and
dec
cmps
jp
movs
cmp
shl
mov
push
data16
adc
mov
popf
xchg
test
add
and
xor
ins
mov
mov
adc
sub
push
aaa
push
and
adc
in
outs
aad
adc
or
inc
loopne
je
lea
inc
xchg
outs
mov
in
jmp
je
pop
shr
jmp
cmc
mov
add
adc
inc
(bad)
adc
test
add
or
rol
xchg
mov
sbb
mov
(bad)
call
jp
xchg
sub
inc
jns
inc
cmps
push
test
aam
dec
sbb
out
lea
repnz
add
add
inc
outs
xor
or
push
add
sbb
mov
add
add
je
sub
out
adc
and
adc
dec
pop
jmp
adc
add
shl
imul
out
xchg
mov
sar
enter
cmps
add
xchg
scas
imul
push
sub
mov
pop
push
and
pop
pop
or
inc
mov
cmps
mov
repnz
cwde
data16
cmp
stos
int
fld
leave
dec
imul
aad
push
enter
or
(bad)
xor
and
rol
lods
pop
pop
sbb
inc
imul
fcmovnu
sbb
dec
add
xchg
imul
leave
inc
imul
add
mov
xor
mov
xor
sub
add
or
adc
jmp
frstor
mov
inc
sub
add
(bad)
in
loop
lea
xor
dec
adc
int3
push
dec
sbb
adc
push
pop
out
sub
mov
or
cs
cmc
fist
imul
mov
inc
push
xor
xor
or
jmp
push
add
xor
pop
retf
in
test
dec
dec
sbb
or
xchg
inc
aas
sbb
das
add
pop
jo
sbb
mov
inc
and
cdq
out
mov
pop
je
ret
jmp
xor
adc
inc
sub
mov
lods
pop
lods
adc
(bad)
add
and
ins
pop
ret
mov
outs
scas
adc
adc
sbb
mov
aas
lahf
mov
repnz
inc
dec
aaa
jns
or
sbb
in
adc
mov
ret
lods
and
imul
das
cmp
adc
in
or
push
sub
xor
fwait
shr
add
cld
sub
xchg
xor
neg
or
sbb
mov
outs
es
push
nop
ret
push
test
adc
rol
bound
mov
mov
clc
xchg
mov
in
xor
mov
inc
mov
xor
ss
cld
push
repz
dec
xor
mov
shl
xrelease
imul
cmp
jb
xor
mov
jle
dec
aam
sub
mov
or
movs
mov
xor
add
aam
nop
test
or
push
mov
xchg
movs
iret
pop
nop
pop
or
sbb
sbb
or
int3
sub
pop
aam
in
and
and
dec
adc
inc
lea
inc
lea
jp
adc
mov
adc
outs
inc
imul
sbb
or
xchg
push
push
or
sbb
jmp
ror
aaa
add
xor
cmp
loop
movs
jns
call
mov
push
fstp
jae
mov
xchg
adc
jae
jb
inc
sub
xor
cmp
cmps
mov
jae
add
or
loope
cs
dec
adc
mov
dec
jmp
dec
(bad)
test
jne
outs
add
hlt
cwde
nop
fisttp
imul
lea
push
or
xchg
jmp
in
lds
add
push
test
es
jne
es
jb
movs
add
adc
sub
jecxz
pop
push
stos
inc
jl
mov
pop
rcr
mov
xchg
cmps
mov
mov
push
or
adc
loope
adc
or
dec
mov
pop
das
pop
setne
or
cmc
ret
mov
sbb
add
imul
push
add
ret
fdivr
mov
into
in
je
adc
popa
cmc
and
push
loopne
xor
jne
add
nop
and
outs
out
add
add
xchg
mov
dec
stos
in
sbb
inc
jge
fnstcw
push
das
add
ret
shl
out
imul
popa
sbb
rcl
ret
adc
sbb
jne
fiadd
adc
popa
addr16
add
xchg
mov
icebp
movs
arpl
xor
dec
aas
adc
daa
mov
jecxz
add
mov
lahf
dec
adc
or
pop
sub
dec
adc
jecxz
les
cwde
or
lea
loopne
adc
push
push
cmps
mov
rcl
inc
inc
xor
push
or
gs
add
lea
add
and
popa
mov
cwde
sbb
mov
or
lods
fcomp
add
push
lds
add
mov
dec
cmps
pushf
dec
sbb
inc
gs
push
cmp
ins
in
dec
mov
jne
setnp
imul
nop
dec
inc
cmp
mov
in
mov
jg
dec
shl
sar
rol
pop
add
int
ror
movs
in
mov
or
outs
and
lahf
imul
mov
jl
xor
out
in
push
pop
popa
adc
dec
dec
cmp
pop
fisttp
stos
mov
sub
xor
int3
and
jmp
mov
sbb
in
rcr
inc
add
imul
enter
xor
popf
loopne
dec
(bad)
ret
add
xchg
inc
popa
test
ud2
pop
xchg
sub
out
push
add
sub
mov
lods
mov
push
dec
cmp
enter
aas
push
cld
test
mov
movs
aam
shl
and
ret
push
lods
or
jle
cmp
clc
adc
or
fwait
push
repnz
xchg
ret
fwait
dec
and
dec
sub
sub
movs
jbe
(bad)
adc
pop
shl
stc
rcl
adc
pop
into
shl
bound
rcl
and
lds
jb
xchg
push
sbb
cld
aas
jno
fldl2e
mov
pop
daa
cmp
xor
inc
adc
ins
(bad)
dec
sbb
in
push
js
mov
sbb
daa
push
dec
dec
imul
imul
out
or
rcl
and
das
out
mov
sub
jle
sub
or
sbb
push
inc
(bad)
and
call
add
adc
lea
(bad)
icebp
pop
push
jbe
mov
rol
iret
mov
and
adc
dec
add
add
push
in
fcom
mov
retf
jl
les
fdivr
or
movs
gs
cmc
pop
jg
inc
fisubr
mov
mov
cmc
in
xchg
cmp
mov
icebp
fstp
or
rol
xor
in
mov
outs
lea
mov
cmp
in
sbb
jnp
push
test
ret
sub
or
gs
jmp
call
call
or
or
push
imul
jns
push
fnsave
and
fisttp
movs
inc
dec
scas
push
xor
pop
sbb
push
fcomp
and
fcomp
pop
add
add
cmp
in
push
add
add
push
fsubr
loopne
add
add
in
jno
xchg
inc
scas
xchg
inc
in
dec
cmp
pop
dec
aam
and
rcr
test
inc
xor
add
and
and
adc
xor
sub
pop
sub
add
xchg
cmp
adc
xor
xchg
adc
inc
xchg
xor
or
pop
adc
fist
movs
repz
sbb
pop
test
mov
movs
(bad)
mov
cmp
xor
dec
jnp
pop
test
mov
cmp
push
ins
sub
aam
sbb
mov
loop
add
jmp
popa
xchg
xchg
(bad)
clc
inc
shl
jb
clc
fdivr
mov
or
dec
(bad)
ror
jmp
cdq
add
xor
sub
loope
xchg
mov
add
xor
stc
in
mov
loop
dec
push
pop
xchg
shr
rcl
add
inc
push
es
into
fst
pop
mov
or
sbb
dec
pop
imul
imul
pop
cwde
shl
pop
adc
pop
mov
jnp
adc
out
push
pusha
fisttp
adc
add
and
mov
daa
pop
add
push
xor
repnz
lods
cmp
imul
or
in
popa
or
sbb
cdq
jmp
lods
push
mov
xchg
cmp
lods
dec
and
and
add
js
and
push
(bad)
jmp
push
add
jmp
inc
xchg
jbe
dec
add
xor
xor
add
lea
mov
inc
mov
call
dec
add
add
mov
dec
sbb
xchg
test
mov
je
add
jbe
movs
sar
and
addr16
push
or
scas
push
out
cmps
push
add
adc
test
push
jg
int3
lock
(bad)
ds
add
and
inc
in
cmc
inc
inc
inc
add
cld
inc
fsubr
stos
push
lock
xor
pop
xor
mov
hlt
sbb
sub
shl
xor
pop
inc
(bad)
cdq
or
or
inc
test
push
inc
add
cwde
nop
stos
adc
add
sbb
sti
ficomp
mov
adc
pop
cld
add
jmp
adc
sub
pusha
add
xchg
inc
in
inc
cmp
inc
sbb
shl
in
call
ins
sub
push
sub
in
or
mov
xor
push
and
inc
out
push
dec
lock
fstp
push
or
add
inc
mov
(bad)
and
test
ja
inc
fisub
imul
cdq
popa
ror
push
sbb
ins
and
stos
adc
jge
jl
sahf
or
dec
xor
outs
mov
sub
ins
xchg
hlt
jns
and
cmps
xor
sub
or
mov
dec
and
pop
rol
push
pop
popa
and
xor
pop
ret
aas
jmp
cmp
jl
out
mov
aad
inc
dec
in
mov
out
not
mov
inc
add
xor
ret
in
ror
or
pop
xor
mov
cwde
ret
or
dec
sbb
sub
sbb
(bad)
mov
xchg
dec
adc
pop
push
cwde
add
adc
cli
ds
and
pop
push
shl
das
ds
call
fistp
and
ret
frstor
test
cmp
jge
pop
or
ret
gs
cld
(bad)
fdivr
push
cmp
adc
fild
lea
dec
fst
sbb
pusha
rdpmc
mov
mov
inc
inc
sub
dec
pop
pop
into
and
dec
mov
or
nop
jno
adc
jge
inc
cmps
gs
pop
shl
shr
fs
cld
xchg
dec
popf
add
fcomp
mov
adc
mov
ja
sub
xlat
mov
sub
ja
xlat
jge
test
sub
sub
pop
mov
mov
push
fs
xchg
mov
xchg
jmp
xor
loopne
xor
or
aas
or
pop
push
jg
jo
add
movzx
cmp
(bad)
into
or
or
cmp
es
and
fnstcw
and
je
and
add
dec
pop
push
add
mov
and
mov
adc
and
imul
ror
or
dec
pop
ret
out
test
add
push
mov
mov
test
push
aas
and
adc
sbb
jmp
cmp
les
ret
mov
jmp
xor
imul
add
inc
clc
add
leave
pusha
pusha
lods
popa
shl
push
out
pop
or
ins
sbb
push
push
or
xor
addr16
sar
stc
sbb
and
in
fs
jmp
adc
jecxz
sar
ror
mov
mov
sbb
mov
cmp
pop
or
mov
add
inc
dec
movs
adc
add
int3
fbld
xchg
and
adc
imul
lock
movs
imul
adc
loope
int
pop
popf
xor
arpl
dec
cmp
and
stos
inc
push
pop
inc
fidiv
jo
inc
loop
push
call
sar
mov
jns
and
or
sub
inc
rcl
lea
inc
xor
inc
in
mov
add
jmp
ss
xchg
mov
imul
cmp
push
test
push
jae
xchg
mov
xor
push
push
or
adc
sub
adc
adc
or
popf
add
mov
pusha
dec
in
movs
popa
fwait
cmp
and
cmc
and
lock
mov
sbb
mov
(bad)
or
jne
repz
jne
jmp
repz
add
frstor
jns
push
sub
xchg
ret
fild
pop
or
sub
repz
inc
sub
add
jno
pop
cmps
mov
jne
push
or
jmp
jge
shl
cmp
and
mov
xchg
add
adc
jne
pop
fmul
mov
call
xchg
rcr
mov
mov
and
adc
shl
cmps
push
shr
jmp
add
test
mov
ins
test
add
sub
jmp
sbb
and
imul
je
xor
(bad)
fist
dec
add
xchg
rcl
add
ret
outs
dec
cmp
xchg
lods
or
mov
xor
push
or
add
adc
jno
adc
cmps
mov
xchg
or
clc
sub
stos
nop
pushf
mov
add
mov
push
mov
(bad)
push
test
and
nop
inc
pop
push
shl
sbb
push
data16
mov
adc
xor
shl
or
push
adc
test
push
test
or
popa
cmp
mov
scas
xchg
xchg
popa
sub
mov
sar
push
clc
jp
movs
sbb
sbb
xor
fcmovnbe
ins
or
mov
inc
test
pop
add
push
inc
push
test
mov
dec
test
test
and
and
jle
in
mov
sbb
inc
and
cmc
sbb
cs
jmp
in
xchg
jo
sub
xor
shl
test
mov
aas
sub
cmp
add
push
nop
or
bound
add
and
jmp
clc
pop
mov
pushf
jns
push
nop
adc
rcl
rol
mov
inc
loop
stos
aam
sbb
shr
pusha
inc
ret
dec
bound
jb
mov
js
pop
or
add
add
and
add
add
jo
pop
icebp
lahf
sbb
and
nop
and
cmp
mov
cmp
nop
hlt
movs
add
inc
cmp
mov
mov
dec
cmps
xor
sbb
adc
cmp
pop
test
sti
xchg
xor
xchg
sub
inc
add
cmp
mov
push
rcl
mov
das
(bad)
jmp
inc
test
ret
mov
push
adc
inc
add
add
jmp
inc
jmp
push
or
inc
ret
ins
mov
test
xchg
push
xchg
jecxz
lods
xchg
cmc
mov
dec
leave
mov
or
adc
xor
mov
pusha
adc
adc
in
cwde
add
js
sbb
inc
cwde
xor
jbe
jne
test
enter
push
nop
nop
adc
push
outs
or
lods
repnz
je
mov
pop
adc
xor
aaa
or
add
push
aaa
add
xchg
pop
push
adc
rcl
or
(bad)
retf
push
and
fcom
sub
or
and
(bad)
test
ds
jl
mov
mov
cmp
loopne
xor
jno
push
aam
xchg
and
dec
leave
enter
inc
inc
add
adc
add
into
dec
push
push
cmp
in
lea
push
push
inc
sub
pushf
and
xchg
dec
lar
xchg
or
dec
mov
and
adc
ja
add
add
arpl
lea
dec
sbb
imul
sbb
in
add
mov
ss
ins
jmp
movs
lods
inc
mov
inc
inc
adc
fist
sub
or
push
add
jmp
push
push
adc
add
xchg
pusha
mov
lods
xor
adc
jne
cmp
in
test
movs
push
mov
jg
mov
pop
pop
adc
cmp
xor
xchg
add
mov
or
jne
inc
mov
jo
push
lds
cld
daa
add
push
jo
push
mov
jmp
popf
and
ins
ja
ins
or
dec
test
mov
fcom
adc
test
jb
or
aaa
and
sub
push
mov
sbb
mov
mov
dec
test
imul
inc
or
or
mov
or
adc
inc
mov
add
adc
adc
sbb
xor
shr
inc
xor
push
push
xor
pop
jmp
arpl
push
aam
cmp
(bad)
jno
mov
push
push
xchg
cmps
mov
test
xchg
sub
push
mov
pop
xchg
aaa
add
clc
mov
jmp
add
mov
(bad)
or
add
aas
lahf
shr
jge
ret
pop
lds
adc
sub
lea
mov
gs
pop
jecxz
add
push
inc
mov
cmp
jge
ror
imul
mov
rcl
cld
sbb
fdiv
adc
mov
aas
add
or
mov
jmp
inc
sbb
dec
mov
add
call
ins
jnp
retf
cmp
xor
inc
or
call
stos
mov
push
lahf
push
adc
test
movs
pop
pop
jg
add
jno
add
dec
xchg
hlt
mov
je
and
aad
push
int
lods
inc
add
or
sbb
jge
push
add
xor
adc
xchg
cwde
sub
mov
aas
or
push
cmp
pop
or
mov
and
cld
aas
add
adc
or
adc
fild
ret
lods
xlat
xchg
fiadd
ror
add
xor
test
sub
xor
and
xor
cmp
and
xor
test
dec
shl
cmp
lea
pop
popa
xchg
mov
and
mov
les
mov
pop
and
sub
and
adc
scas
fsub
or
outs
xor
or
and
pusha
in
sbb
jne
bound
or
fcom
fnsave
dec
aas
or
cs
pop
js
sub
push
dec
xor
or
push
test
or
push
dec
sbb
push
jo
shr
mov
fild
lahf
jo
push
xchg
shr
or
inc
invd
and
dec
movs
fwait
sub
sub
lds
push
ins
add
stos
jne
icebp
hlt
sub
add
mov
dec
or
lods
adc
mov
movs
sbb
xor
sbb
push
pop
scas
pop
adc
jnp
or
mov
sbb
adc
pop
jae
sub
into
pusha
add
ret
jbe
jae
int3
adc
xor
arpl
mov
les
clc
call
stos
add
push
xchg
mov
adc
or
fbstp
arpl
push
(bad)
ficomp
xchg
xor
push
add
daa
or
and
ss
push
jo
push
sbb
pop
mov
adc
adc
mov
imul
or
aad
call
mov
add
xchg
push
sbb
mov
push
sub
xor
test
cmp
pusha
jl
and
pop
daa
popf
push
cmp
push
xchg
xchg
pop
xchg
lock
xor
mov
jmp
push
sbb
inc
rcl
xor
push
add
in
jnp
push
pop
hlt
mov
dec
xor
mov
imul
pop
fs
ja
adc
xchg
mov
ror
inc
dec
pop
and
push
push
mov
cld
push
dec
ins
cld
ins
test
mov
xor
push
jmp
mov
movs
jecxz
add
xchg
nop
lock
pop
pop
leave
mov
jp
in
adc
adc
test
mov
fadd
pop
add
test
pop
mov
jmp
dec
and
sbb
adc
icebp
jl
cld
call
iret
aam
ins
push
add
push
jo
mov
and
cdq
imul
mov
add
jle
xlat
clc
mov
xor
push
sub
push
sub
cld
or
xor
data16
dec
or
imul
adc
sti
imul
test
cmps
(bad)
lods
sbb
push
cmp
mov
push
inc
mov
jp
add
mov
test
lea
mov
fcom
sub
in
dec
mov
cmp
push
sub
lea
adc
sti
ins
js
add
sub
mov
jo
loope
pop
fwait
cmp
cmp
test
push
and
push
je
cmp
in
and
pop
nop
cmp
cmps
add
push
and
pop
cld
dec
arpl
inc
sbb
adc
xor
and
clc
aad
push
inc
mul
pop
adc
(bad)
and
pop
jmp
mov
adc
or
adc
int3
inc
xor
adc
sbb
sub
and
xor
xchg
nop
jg
test
ret
popa
add
or
push
(bad)
xor
cdq
mov
push
pusha
or
stc
pop
xchg
cmp
hlt
mov
mov
add
push
enter
sbb
and
or
xor
lea
mov
ret
dec
sub
cmps
and
pop
sbb
adc
or
sub
and
pop
sbb
mov
cmp
add
adc
in
xchg
pop
dec
dec
jne
bound
mov
xor
aas
adc
inc
mov
xor
jg
jne
pop
and
pop
(bad)
out
cmp
sub
adc
or
cmps
adc
ret
mov
xor
push
add
sbb
sbb
adc
test
(bad)
jmp
mov
rcr
mov
shr
or
add
inc
loop
and
sub
and
xchg
adc
rol
ror
fsubr
or
mov
add
add
nop
les
loopne
enter
call
xchg
loope
sub
outs
xrelease
test
sbb
xor
imul
mov
add
loop
adc
sbb
or
and
xchg
jecxz
movs
add
inc
inc
fiadd
mov
popa
in
or
(bad)
or
inc
dec
jp
add
sub
pusha
xchg
or
jo
daa
dec
shl
dec
inc
movs
icebp
xor
je
or
dec
cmp
pop
and
cmc
add
push
jl
dec
or
mov
loope
jne
movs
loopne
mov
shr
or
movs
rol
cmps
jb
jmp
ss
or
mov
and
(bad)
or
fiadd
xchg
add
lock
fidivr
or
mov
jmp
test
dec
pushf
push
xchg
ss
inc
or
add
pop
fwait
cmp
xchg
add
sub
dec
jo
push
add
dec
sbb
mov
ror
pop
fwait
add
push
sbb
popf
pop
pop
adc
aas
cmp
add
pop
xchg
sbb
fadd
inc
xchg
vpshufhw
push
cmp
mov
or
xchg
adc
jecxz
sar
or
imul
cmp
push
cmp
mov
push
pusha
imul
inc
in
cmp
mov
es
push
inc
mov
fdivr
inc
add
(bad)
push
and
sbb
rcr
adc
popa
shl
outs
fdiv
xor
in
mov
or
and
arpl
ins
pop
or
call
mov
loop
jne
pop
sub
pop
add
inc
inc
rcl
adc
jmp
(bad)
js
add
xchg
cs
push
xchg
add
sub
aam
loopne
and
and
aaa
and
cs
pop
cmp
call
enter
popf
or
sub
scas
pop
mov
push
les
pop
pop
pop
or
add
sub
dec
in
cdq
or
sti
adc
mov
mov
sbb
xor
test
mov
add
cwde
push
and
adc
cwde
cwde
add
popf
sbb
adc
jmp
xchg
inc
test
aaa
and
pop
(bad)
stc
adc
push
push
movs
add
mov
sbb
add
movs
mov
adc
push
sahf
and
dec
or
dec
and
dec
jns
push
ret
call
sub
lods
adc
or
add
or
imul
jmp
aas
aam
ins
call
clc
dec
add
adc
(bad)
pop
add
je
jmp
sub
or
mov
jge
sbb
lods
loop
jb
mov
add
xor
sub
out
sbb
mov
lods
pop
(bad)
test
and
in
mov
sub
sbb
adc
adc
dec
jne
sbb
pop
sbb
push
inc
shl
stc
test
mov
arpl
inc
inc
cmp
popf
inc
and
std
inc
or
add
ret
push
aam
push
inc
rcr
cmp
push
fwait
xor
mov
in
adc
hlt
mov
aam
shl
imul
out
push
lock
sub
ja
or
cvtdq2ps
sub
movs
adc
pop
ins
adc
cmp
jmp
xchg
jmp
sub
cwde
add
push
js
inc
mov
dec
fcmovb
sub
vmfunc
test
jmp
add
in
add
inc
sub
repnz
pop
ret
cmps
adc
jno
adc
mov
dec
test
and
pop
dec
pusha
inc
adc
lea
jno
add
add
sahf
les
mov
fsub
aad
or
jns
push
adc
popa
and
call
popf
pop
or
xor
cwde
sets
pop
nop
and
or
xchg
inc
inc
adc
fisttp
push
push
cmp
test
aaa
mov
add
movzx
adc
aaa
inc
inc
adc
shl
xor
add
popa
push
add
data16
xchg
xchg
xor
mov
test
cmpps
retf
lock
and
repz
rcl
xor
movs
addr16
push
clc
cmp
xchg
xor
mov
pop
ja
sbb
dec
push
lods
sub
or
arpl
or
or
aaa
xor
inc
push
pushf
call
push
das
(bad)
icebp
xchg
mov
add
pop
and
scas
scas
xor
or
xchg
fdiv
adc
mov
add
sbb
xchg
sub
jmp
imul
xchg
icebp
popa
je
lock
lock
pusha
sub
mov
outs
dec
jnp
shr
call
adc
jnp
mov
jge
pop
xchg
cmp
call
push
push
loopne
sub
ror
pop
lods
popf
xor
es
inc
ins
mov
xor
leave
xchg
pop
out
not
sub
imul
pop
push
xchg
retf
shl
sub
dec
mov
jne
mov
mov
je
add
sub
aaa
sbb
enter
ins
aas
test
shl
fist
add
add
xor
adc
dec
pop
sub
aas
or
adc
xor
sbb
sub
or
fistp
xor
xor
test
imul
pop
fs
xchg
je
inc
outs
je
inc
jne
int3
fist
push
and
rcr
fwait
dec
int
pop
ret
and
ret
jne
scas
xor
lea
mov
inc
mov
mov
mov
xchg
sbb
popf
call
inc
scas
loope
or
call
aaa
pop
add
pop
fadd
dec
lock
and
and
xchg
rcr
push
leave
add
and
or
lea
add
or
lahf
or
out
pcmpeqw
mov
into
and
xchg
mov
daa
aam
call
or
movs
shl
rcl
pop
lea
xor
sar
pop
fild
jmp
loope
add
xchg
es
cmp
lea
push
jo
add
sub
rcl
pusha
sub
pusha
test
mov
add
retf
mov
scas
fcmovnb
xchg
mov
dec
scas
add
ror
aaa
pop
cld
repz
xchg
mov
cmp
dec
ret
nop
jo
mov
mov
xchg
sbb
jge
inc
movs
aas
inc
jmp
adc
mov
loopne
push
jnp
enter
adc
mov
cmps
icebp
add
jmp
ror
add
or
mov
mov
xlat
les
add
fld
leave
cmp
fsubr
adc
and
ret
cmp
movs
sti
je
sbb
cwde
cs
jecxz
xchg
xchg
sbb
cmp
sbb
pop
xchg
push
sbb
adc
xchg
push
sahf
jo
cdq
jb
xchg
mov
push
jo
jo
enter
pusha
and
and
mov
and
pop
test
shl
xor
fadd
mov
leave
call
jne
and
or
popa
addr16
fucom
stc
adc
cld
inc
popf
add
shl
jle
push
pop
retf
cmp
xchg
push
movs
bound
dec
mov
lods
xchg
iret
leave
jge
push
aad
rol
sbb
add
inc
mov
sub
mov
inc
cmc
mov
ret
aad
xor
lea
mov
sbb
inc
push
sbb
lock
int3
dec
pop
mov
add
or
sub
or
pop
add
shr
jo
ins
inc
imul
jmp
add
push
sub
ret
mov
lahf
or
shl
sub
lahf
jo
or
rol
aas
add
pop
daa
leave
adc
sbb
mov
or
add
in
mov
call
and
sbb
dec
sbb
xor
mov
add
cmp
cli
or
xor
push
adc
dec
inc
cmc
scas
mov
jmp
je
or
cwde
cdq
pop
jmp
push
fcmovnb
pop
xor
es
nop
sbb
or
aaa
ja
adc
js
sbb
jg
in
sbb
cmp
jae
mov
or
ret
in
(bad)
pop
inc
mov
mov
retf
push
jmp
push
cmp
xchg
adc
call
sub
ins
out
test
add
ds
xchg
sbb
xchg
cwde
cmp
xchg
cmps
test
outs
sbb
mov
rcl
cmp
js
or
test
push
mov
add
clc
mov
fwait
xchg
sbb
add
inc
addr16
pop
push
mov
add
push
test
jnp
dec
cmp
add
add
movs
shl
jp
adc
xchg
or
dec
shr
(bad)
inc
jecxz
push
pop
outs
leave
ret
fdivr
push
pop
jg
je
sbb
fldenv
mov
mov
loop
and
std
dec
ficom
lock
mov
ds
in
sub
adc
mov
dec
jecxz
sbb
push
and
mov
dec
xor
ret
mov
push
dec
or
sbb
xchg
pop
outs
or
mov
sbb
adc
shl
in
pop
(bad)
pusha
xor
retf
sbb
fbstp
add
mov
cwde
mov
mov
mov
pop
loope
mov
sub
dec
xor
lea
xchg
xor
xor
mov
cs
gs
or
push
outs
pushf
add
jmp
stc
test
mov
xchg
add
cmp
jle
fwait
in
jmp
or
xor
inc
bound
mov
add
sbb
mov
push
js
mov
mov
adc
js
movs
xchg
cmp
sub
add
ins
pop
repz
pop
pop
rol
clc
nop
sub
iret
repz
xchg
js
repz
push
jp
test
xchg
pushf
add
and
out
jns
ja
add
xchg
stos
pop
push
jp
push
jae
dec
and
dec
es
add
jnp
in
outs
mov
xchg
sti
xchg
dec
gs
leave
mov
pop
jno
out
xchg
cmp
cwde
inc
push
test
mul
push
pop
cwde
or
call
push
add
add
add
or
push
add
pop
bound
push
mov
mov
or
bound
mov
adc
or
or
lods
cli
xor
adc
xor
rcr
aas
mov
sbb
lds
adc
and
fisub
adc
sbb
inc
nop
enter
nop
arpl
and
retf
sbb
ss
lahf
adc
enter
adc
cmp
(bad)
(bad)
push
pop
sbb
inc
inc
call
cmp
cmc
das
jae
cmp
jne
test
push
and
sahf
add
jl
dec
loope
stc
mov
jbe
mov
pop
ror
cmc
mov
add
in
clc
add
lahf
mov
lahf
fmul
repnz
jne
jo
lahf
fadd
push
and
adc
push
sub
mov
nop
sub
sub
or
cmp
add
and
or
call
and
adc
fucom
pop
dec
adc
ret
loopne
pushf
adc
fistp
add
fild
pusha
lahf
cwde
sbb
cmp
lds
mov
and
and
add
and
sub
test
cmc
pop
lods
cmpxchg
pop
test
mov
mov
add
inc
mov
scas
cmps
test
and
lds
sbb
scas
pop
mov
sbb
pop
adc
in
jge
push
leave
adc
or
mov
push
inc
movs
adc
adc
lds
mov
(bad)
mov
test
nop
xchg
jne
in
nop
lods
lods
pop
push
xor
shl
mov
cmp
jge
xor
mov
pop
test
dec
adc
jge
add
sub
pop
adc
stos
jge
xor
mov
(bad)
leave
add
rcr
mov
and
jmp
mov
stos
rol
xchg
adc
jmp
les
add
nop
pop
leave
adc
fcomp
fwait
xor
sbb
add
add
adc
lods
push
repnz
stos
hlt
stos
hlt
and
scas
lods
mov
or
dec
or
adc
rcr
popa
mov
leave
inc
loope
test
ins
cmc
or
push
inc
dec
adc
or
cmp
mov
jmp
mov
pop
sar
pop
or
mov
nop
repz
out
mov
mov
out
int
movs
aaa
push
cmp
inc
and
xor
jns
pop
iret
movs
imul
push
xor
mov
fisub
push
cmps
mov
mov
mov
push
test
fwait
push
cmps
cli
stos
add
jne
out
push
mov
int
pop
stos
push
lods
mov
mov
pop
iret
cmp
adc
jge
mov
mov
adc
lss
push
mov
push
push
js
add
sbb
shl
pop
pop
mov
xchg
sti
push
call
loopne
ror
rol
sar
fdivr
call
push
sbb
pop
mov
mov
sub
pop
push
movs
inc
mov
push
mov
push
push
mov
enter
pop
pop
xor
adc
scas
div
or
push
sahf
out
sahf
pop
fs
je
test
push
sbb
pop
repz
mov
mov
rcr
mov
mov
rol
sbb
and
iret
mov
push
sti
add
inc
and
je
loopne
xchg
add
adc
xchg
mov
sti
fdiv
fmul
ins
sbb
fld1
fmul
and
stos
cmp
mov
mov
add
mov
xchg
or
cmps
or
iret
adc
add
inc
fs
aaa
mov
pop
pusha
push
ss
cmp
cmc
sub
or
sub
arpl
je
jmp
fist
jne
and
pop
js
fs
or
or
es
jns
or
cdq
or
cmps
push
popa
sbb
mov
push
xchg
dec
xor
add
and
inc
inc
std
add
jb
pop
and
loopne
rcl
rol
es
inc
xchg
aaa
push
cmp
sub
xlat
iret
int3
dec
adc
jmp
or
add
fist
out
and
loopne
pop
push
pop
lea
aad
and
mov
fcom
cwde
xor
xor
daa
add
lock
and
jnp
add
sub
sti
add
pop
xchg
add
leave
pop
add
sub
xchg
and
or
jg
and
dec
mov
sub
or
pop
and
or
jmp
inc
hlt
or
and
mov
sahf
cmp
mov
ins
push
push
push
adc
mov
jmp
fidiv
mov
add
adc
push
(bad)
sub
(bad)
mov
aad
mov
pop
sbb
pop
fsub
sub
dec
xchg
hlt
add
mov
jnp
popa
xor
iret
mov
in
sbb
rcl
sub
xchg
adc
call
retf
add
inc
adc
ret
and
mov
ror
retf
sub
and
mov
leave
aam
out
or
add
push
movs
ss
pop
push
push
out
add
and
sbb
sub
icebp
push
sbb
loope
pop
adc
jae
cld
lahf
pusha
cmp
or
mov
inc
ins
and
xor
push
or
iret
and
sbb
arpl
test
sbb
adc
dec
and
xor
jmp
movs
and
dec
sbb
lods
addr16
inc
sahf
mov
ret
push
test
aam
fs
add
aam
and
cdq
and
fcmovbe
jmp
popf
and
mov
mov
add
pop
pusha
ins
ins
cmp
xchg
dec
int
sar
add
cmp
jne
shr
retf
adc
mov
sub
jecxz
addr16
repz
mov
out
jnp
adc
cmp
or
xchg
ror
cmp
rcl
shl
fs
sar
and
mov
push
leave
sbb
sub
jmp
push
pop
imul
dec
add
inc
mov
mov
ret
(bad)
sbb
clc
jns
sub
ss
das
std
clc
fs
sub
pop
inc
dec
add
add
xor
fsubr
or
push
clc
addr16
es
pop
mov
loopne
call
jle
add
jmp
aas
iret
mov
jl
push
sub
pop
lods
pop
nop
add
loope
or
or
ins
mov
call
mov
ror
mov
adc
and
xchg
and
mov
sbb
or
pop
imul
add
xchg
gs
jg
pop
rol
add
sbb
mov
pop
dec
jne
cmc
xchg
pop
rol
daa
or
adc
lock
ins
mov
daa
jmp
and
inc
pop
sub
sbb
cwde
and
(bad)
lds
std
mov
test
sbb
sar
das
std
mov
cmp
push
aam
add
add
in
and
mov
loop
xchg
mov
cmp
inc
test
adc
sbb
dec
test
rol
cmp
test
popa
fst
fadd
ret
xor
cwde
pop
jo
push
add
dec
loope
comiss
pop
add
xchg
sbb
and
add
loope
cmp
lock
jecxz
mov
push
sbb
rol
pop
cmps
shl
add
mov
retf
and
les
aas
shl
dec
add
cmp
and
adc
je
fwait
ret
xor
lock
cmp
das
sub
leave
not
sbb
pop
push
or
inc
bound
and
test
sub
ins
jo
rcl
aam
das
adc
stc
rol
lods
mov
or
xchg
xor
dec
enter
js
or
adc
or
adc
mov
inc
cmp
outs
movs
str
fs
or
add
xor
retf
ret
mov
dec
fcomp
cmp
fadd
xor
add
jge
leave
mov
add
and
add
sbb
jecxz
add
cmp
or
mov
and
sub
add
jmp
mov
or
jmp
adc
adc
fmul
rol
or
jl
repnz
adc
and
fwait
xchg
arpl
add
xchg
jp
test
fsubr
inc
jne
cmp
dec
aaa
inc
pop
dec
loopne
mov
das
call
mov
in
mov
jmp
test
pop
pop
int
fmul
xchg
add
jmp
fwait
test
test
xchg
adc
and
(bad)
push
xor
or
mov
push
sbb
and
add
pushf
sbb
xor
hlt
jecxz
jb
shr
xor
xchg
loopne
fimul
jmp
cmp
mov
loopne
call
and
loopne
add
(bad)
sub
in
or
add
dec
nop
sbb
push
sub
mov
xchg
pop
aas
dec
fs
fistp
add
test
adc
or
lahf
inc
sbb
sub
neg
bound
enter
or
mov
pop
xchg
mov
loopne
and
or
adc
call
ja
add
adc
xor
adc
or
mov
pop
cmp
sbb
add
dec
fimul
pop
enter
add
pop
sbb
push
push
movs
push
jge
add
out
fld
fsubr
jp
and
push
pushf
xor
(bad)
cmp
test
add
fild
mov
add
adc
enter
or
lds
dec
in
xor
sbb
dec
xchg
mov
fdivr
je
sbb
or
pop
lods
push
iret
aaa
pop
jmp
loopne
mov
inc
mov
and
mov
sbb
ror
cmp
rol
adc
les
(bad)
xchg
mov
pop
loop
xor
pusha
ret
loope
sub
adc
or
inc
and
mov
jae
call
push
sbb
test
xor
push
or
push
and
inc
mov
lahf
shl
push
js
push
add
enter
push
add
mov
or
adc
popf
jge
jp
mov
loopne
daa
mov
popf
adc
es
test
cmp
test
jmp
sub
and
pusha
push
mov
or
mov
xor
mov
push
pop
js
popa
xor
jo
jno
rcl
cmp
loopne
nop
loop
and
les
icebp
push
jecxz
push
xor
jecxz
xchg
pop
pop
add
lds
iret
mov
cmp
in
sub
sahf
pop
aad
jmp
fldln2
jge
add
mov
jmp
out
inc
lods
cmp
dec
xor
imul
movs
mov
jecxz
xor
fmul
lea
movs
fmul
arpl
and
or
outs
xchg
cld
mov
mov
sbb
push
sub
ja
clc
js
fisubr
iret
and
cmp
inc
or
test
sbb
movs
nop
add
adc
xchg
test
inc
jne
push
imul
sti
cmp
jnp
dec
jecxz
icebp
data16
repz
(bad)
cmps
dec
add
popa
scas
inc
jbe
mov
cdq
popa
mov
jo
ret
sub
mov
ret
xor
mov
sbb
xchg
or
inc
sub
pop
and
push
or
jg
mov
adc
jae
inc
and
add
cmp
dec
ins
adc
jmp
and
mov
sbb
fdivp
cmp
sub
push
loopne
loop
mov
and
out
pop
aaa
push
in
out
call
jmp
add
ds
push
in
push
out
add
repz
lock
repnz
cmp
repz
jns
neg
scas
mov
cmc
div
mov
stc
cli
mov
shl
xchg
ins
jecxz
rcl
push
cmp
(bad)
pop
sub
push
rol
rcr
fdivr
sbb
fidiv
ror
sbb
push
mov
adc
and
not
into
dec
sbb
call
ja
loopne
add
adc
sub
jecxz
sbb
in
dec
sub
and
add
xor
add
pop
mov
add
and
stos
push
sar
xchg
movs
in
add
and
push
fdiv
or
sbb
xchg
cmp
in
dec
aam
inc
add
fstp
dec
or
and
out
ds
xchg
push
cmps
inc
adc
mov
cdq
ret
mov
jo
nop
dec
ja
iret
jne
mov
enter
add
dec
xchg
or
sbb
je
adc
xchg
and
xchg
jo
mov
and
push
mov
(bad)
test
adc
fld1
fstp
inc
ins
jne
add
push
add
jne
ins
push
sub
stos
push
add
cmp
test
jno
push
jecxz
fcomp
xlat
test
je
push
mov
xchg
sbb
sub
mov
push
shl
lahf
jo
push
les
dec
daa
inc
inc
enter
and
jo
dec
xor
add
mov
push
inc
out
xor
jmp
sub
dec
in
xchg
xor
stos
sub
mov
mov
sub
ins
sahf
rcl
pop
test
cmp
out
out
mov
aad
and
lea
repnz
mov
add
add
vmrun
imul
xchg
(bad)
sub
or
mov
int
fwait
out
push
aam
test
aad
cdq
push
pushf
addr16
inc
lea
call
pop
dec
or
pushf
mov
add
jb
lea
loopne
mov
js
and
jl
and
or
or
inc
add
es
clc
xor
push
mov
cmp
in
add
inc
(bad)
sar
fiadd
jmp
xor
fisub
mov
mov
adc
dec
movs
in
add
aaa
jl
(bad)
imul
lahf
sub
push
push
pop
ins
test
or
add
je
movlps
aaa
ins
cmp
adc
dec
repz
pop
sti
out
add
fs
mov
inc
lea
inc
xor
ficomp
std
std
std
xor
dec
movs
sbb
std
in
dec
popa
loope
and
xor
push
mul
retf
adc
fld
inc
je
adc
add
(bad)
bound
adc
enter
scas
pusha
dec
push
cmp
js
retf
imul
test
push
add
clc
add
add
inc
outs
cmps
or
or
mov
sub
(bad)
std
dec
inc
nop
dec
std
push
and
xchg
add
dec
push
nop
sub
jb
test
and
loopne
sub
repnz
std
or
in
movs
sbb
jbe
and
stos
jnp
std
je
mov
push
lea
pop
jbe
or
adc
popa
movs
std
or
jnp
push
mov
mov
jl
popa
xchg
js
mov
movs
mov
lods
cmp
(bad)
or
packsswb
test
inc
gs
cli
popf
sbb
(bad)
mov
adc
sub
xchg
or
lea
mov
ja
cmp
movzx
movs
mov
xchg
mov
mov
psrad
in
sub
stc
sbb
xchg
or
mov
das
pushf
(bad)
jge
add
inc
jno
xchg
cdq
or
leave
xchg
nop
and
mov
movzx
push
jbe
pop
or
jmp
icebp
inc
lea
sub
pop
popa
fs
mov
inc
push
adc
or
ja
mov
and
aaa
mov
dec
xor
xchg
or
and
dec
inc
sub
addr16
inc
or
push
pusha
dec
push
cmp
(bad)
and
pop
add
test
sbb
sqrtps
add
cmp
iret
mov
shr
jmp
sub
and
out
xchg
mov
je
out
push
ror
(bad)
shl
ins
sbb
mov
jecxz
sahf
adc
clc
sub
ins
mov
je
or
(bad)
loopne
jne
shl
or
xchg
mov
loope
leave
xchg
add
mov
gs
jne
inc
ja
add
cmp
ins
popa
enter
mov
jne
xor
pop
sbb
sbb
push
mov
xchg
pop
lock
or
test
inc
sub
pop
(bad)
dec
ds
fidiv
jmp
push
jmp
or
pop
icebp
jmp
cmp
int
jge
mov
mov
mov
outs
out
sbb
lea
hlt
outs
mov
fbld
pop
sbb
push
mov
retf
test
mov
or
add
mov
test
retf
dec
pop
fist
cwde
xchg
fsubr
loope
mov
es
cwde
or
mov
sub
push
sbb
std
(bad)
jmp
or
scas
jl
ror
std
jl
mov
jl
jecxz
aaa
xchg
pop
pop
jecxz
and
nop
sub
imul
in
jmp
adc
std
jp
jmp
cli
mov
mov
lock
xor
dec
leave
mov
xchg
adc
cmp
push
adc
ret
rcl
adc
mov
leave
cmp
push
fisttp
sbb
out
lea
lahf
mov
leave
cmp
mov
mov
lahf
sbb
dec
arpl
sbb
fwait
aaa
in
cld
js
mov
in
jo
pop
jl
push
and
xchg
pop
push
sbb
xor
jmp
imul
cmp
add
outs
pop
xchg
mov
add
or
fwait
scas
push
loope
aaa
shl
add
push
jge
test
stos
xor
pop
inc
rol
fistp
cdq
adc
mov
adc
(bad)
sbb
mov
cs
jae
push
or
cmp
xchg
sbb
xchg
xor
mov
push
pop
xchg
(bad)
nop
jnp
pop
leave
push
sbb
es
in
xchg
je
rcl
adc
jnp
mov
xchg
shl
xor
retf
cmp
pop
mov
pop
pop
and
or
adc
enter
std
std
mov
je
and
mov
aam
fisttp
xchg
ror
push
pop
call
fcom
mov
mov
xchg
cmp
inc
xchg
repnz
push
std
and
inc
push
push
std
push
std
push
std
adc
sbb
dec
lahf
dec
inc
adc
xchg
push
push
push
test
test
adc
hlt
dec
std
xchg
dec
and
dec
jo
loope
adc
addr16
xchg
pop
sbb
inc
mov
push
lods
sbb
hlt
mov
push
jb
mov
std
cmp
stc
cmp
mov
jg
enter
pop
std
jmp
or
xor
and
or
jo
cmp
ja
sub
aaa
hlt
in
sbb
addr16
sub
addr16
adc
pop
inc
addr16
int3
std
mov
repnz
adc
cmp
outs
inc
or
xor
into
les
mov
inc
std
cmp
imul
jo
sbb
adc
pop
aam
aaa
test
pop
mov
adc
or
mov
adc
inc
push
cdq
pop
xchg
and
fs
test
sti
adc
adc
inc
popf
icebp
and
das
inc
mov
aas
push
mov
int3
jmp
cmp
les
sbb
inc
pusha
outs
call
iret
or
and
fnstcw
fnsave
scas
or
lea
addr16
inc
fidiv
fbstp
arpl
mov
and
es
jns
out
mov
repz
push
loopne
xchg
push
mov
mov
stos
inc
in
mov
in
push
jecxz
out
loop
es
fidivr
in
push
add
out
in
cs
push
add
mov
es
push
sbb
jmp
popa
lods
pop
or
pop
dec
and
rol
in
or
dec
lea
mov
imul
sbb
popf
movsx
jmp
daa
sbb
fucomip
or
mov
hlt
adc
or
push
mov
mov
adc
les
jg
cdq
mov
xor
sub
dec
dec
sbb
inc
mov
mov
add
mov
add
dec
push
jge
or
(bad)
rep
mov
neg
add
loopne
adc
lock
xor
xor
out
jnp
mov
lahf
mov
cmp
dec
jmp
loopne
pxor
jmp
inc
nop
push
sub
scas
sbb
jg
adc
and
inc
push
mov
jo
mov
mov
jne
mov
add
js
fdivr
les
movs
xchg
shl
inc
jl
and
out
ins
inc
les
jle
sbb
xor
enter
xor
mov
adc
fcmovu
jo
aam
(bad)
fbld
icebp
push
and
out
xor
mov
inc
and
cmp
push
call
mov
test
test
cmc
ss
mov
jg
jns
sbb
ja
jne
inc
and
xchg
les
push
shl
sub
xor
(bad)
mov
pop
and
cwde
dec
fwait
mov
or
jno
push
test
js
mov
mov
lock
scas
popa
push
jg
adc
dec
(bad)
les
repz
pusha
adc
sub
cmps
push
push
mov
pop
call
jne
adc
add
push
lock
xchg
mov
ins
in
pop
enter
or
and
setne
inc
or
sbb
push
cli
or
adc
test
push
test
jmp
out
mov
pop
cwde
mov
xor
add
icebp
jge
inc
fsubr
loopne
hlt
xchg
mov
push
pushf
or
arpl
fdivr
xchg
xchg
(bad)
repz
or
sbb
dec
loopne
cmp
jb
scas
mov
das
ins
jae
jne
add
mul
push
shl
mov
cmp
push
add
test
xchg
adc
aam
and
and
movs
ret
imul
xchg
ds
fild
ins
sub
xchg
retf
jns
sbb
push
mov
add
loope
inc
jmp
push
cs
ficomp
jmp
dec
add
inc
xor
les
push
js
loope
fimul
pop
inc
sub
js
pop
jge
mov
push
inc
sbb
xor
test
fcmovb
jns
push
mov
cs
loopne
pop
mov
loope
mov
rol
movs
mov
and
sbb
inc
push
(bad)
hlt
cmp
cwde
nop
mov
dec
and
js
adc
inc
loopne
mov
push
rcl
adc
inc
dec
pop
add
(bad)
or
pop
xor
fmul
ficom
push
pop
add
mov
pop
or
sub
xlat
loopne
jge
arpl
add
pop
jle
adc
fdiv
xor
cld
jne
inc
imul
and
or
aam
sbb
mov
rcr
hlt
or
fucomip
push
dec
test
xchg
xchg
out
dec
bound
jns
stc
xor
xor
add
cmp
arpl
pop
add
or
sub
dec
ror
add
or
or
es
dec
push
loop
and
loopne
jae
mov
jo
xor
icebp
fsubr
jmp
imul
dec
cmp
sub
inc
test
jl
sbb
sbb
call
and
adc
add
outs
sbb
lock
retf
aam
cwde
adc
adc
sbb
or
xor
and
or
mov
jae
sbb
sbb
test
mov
mov
jmp
mov
lods
jmp
test
inc
out
into
call
add
movs
jo
add
and
add
dec
and
std
jo
dec
shl
jmp
mov
mov
xchg
fidiv
in
or
mov
inc
mov
xor
aam
xchg
xchg
or
pop
inc
ror
inc
ror
(bad)
shr
test
sub
add
dec
sub
inc
sbb
add
mov
mov
mov
(bad)
or
adc
adc
xchg
fwait
xor
lahf
sub
mov
push
inc
or
adc
or
sbb
add
add
cmc
adc
or
jmp
(bad)
add
je
xor
add
mov
stc
mov
ins
add
shl
cmp
or
inc
add
pop
adc
inc
push
mov
mov
jg
xchg
xchg
fwait
add
test
cmc
add
lahf
mov
mov
loop
dec
xchg
mov
or
mov
cmp
xchg
mov
xor
xlat
adc
sar
shl
call
and
rcl
mov
pop
mov
movs
mov
jmp
nop
pop
add
push
popa
imul
cmps
imul
fisub
pop
sub
in
out
hlt
mov
mov
aad
ror
mov
cli
inc
adc
test
and
imul
mov
and
iret
inc
aaa
or
inc
aas
and
adc
test
mov
mov
jnp
stos
ins
sub
shl
xor
or
jo
inc
add
mov
movs
or
mov
mov
jmp
mov
fwait
push
loopne
add
push
push
pop
ss
sub
pop
and
mov
xor
mov
adc
pop
xlat
cwde
xchg
xlat
pop
mov
dec
add
jns
out
loope
and
test
ins
mov
mov
cmp
cdq
in
mov
add
mov
add
inc
jb
adc
ss
adc
pop
loopne
mov
push
pop
mov
ret
sbb
fwait
sbb
popa
(bad)
jp
cwde
pusha
and
and
jmp
fisttp
and
aam
jl
xor
std
jmp
add
add
ror
sub
imul
jp
popa
push
add
outs
add
popa
jg
loopne
mov
add
or
or
ja
lock
mov
ror
mov
mov
or
pusha
inc
loopne
inc
pop
call
push
loope
pop
add
sub
movs
push
retf
jmp
aaa
xchg
aaa
mov
mov
dec
pop
pop
sub
adc
mov
popa
mov
adc
std
rol
add
or
adc
sub
jg
add
jmp
jo
test
mov
xor
ins
fwait
adc
xchg
inc
xchg
jge
dec
push
rol
lock
pop
inc
push
mov
add
lea
stos
fs
mov
pusha
adc
mul
xor
jns
pop
xchg
mov
adc
push
mov
jbe
das
sub
adc
mov
lods
popa
popf
xor
or
cmp
icebp
lods
retf
adc
add
mov
cmc
push
pop
shl
adc
jp
mov
mov
xchg
add
adc
bound
dec
movs
sub
adc
sub
jae
add
scas
gs
lds
and
push
fsubr
pop
pusha
inc
jge
xor
cmp
inc
ja
add
add
(bad)
orps
jl
rcr
jmp
movs
xor
adc
mov
aam
add
xor
mov
cwde
xlat
or
inc
sbb
xor
or
add
add
fwait
(bad)
cmp
pop
fild
das
rcl
inc
dec
xchg
shrd
retf
mov
ins
loop
xchg
push
cmp
sub
sbb
loopne
cwde
adc
push
or
adc
adc
mov
add
or
movs
or
mov
sbb
jmp
adc
call
adc
aam
cmp
jp
sbb
xchg
or
cmps
(bad)
push
push
add
adc
xchg
out
mov
add
out
jmp
movs
inc
or
cdq
mov
and
inc
and
das
cmp
cwde
test
jne
and
push
sbb
lock
call
inc
xor
cdq
sbb
sar
xchg
xchg
xchg
ror
dec
imul
add
add
movs
fidiv
xor
xor
pusha
or
or
add
jmp
xchg
cmp
sub
in
hlt
std
pusha
push
outs
cmp
sbb
cmp
les
aaa
in
in
push
and
and
fild
mov
jmp
ja
jmp
popa
rol
ret
rcr
xchg
leave
inc
xor
add
sub
mov
or
push
fcmovnb
push
aas
inc
mov
not
pop
fcmovnb
test
xor
mov
aad
sbb
mov
or
lds
add
jg
add
call
imul
and
pop
inc
pop
dec
push
ins
cmp
sub
aad
sbb
ret
inc
mov
ins
pop
push
mov
jecxz
mov
pop
(bad)
cdq
sbb
aaa
pop
inc
and
sub
imul
lods
inc
das
das
or
xor
sub
pop
neg
les
enter
lock
int3
adc
sbb
sub
and
rcl
cdq
mov
inc
and
adc
jae
fld
pop
and
add
mov
jae
or
test
dec
jg
xchg
pop
push
jnp
xchg
dec
jnp
jmp
and
shl
or
js
and
or
jge
dec
jne
scas
and
je
push
shl
nop
pop
aam
movs
lock
sub
xchg
mov
aaa
sbb
dec
(bad)
xchg
loope
rcr
xor
lea
inc
add
or
xchg
lock
jno
dec
mov
push
loopne
imul
xchg
lss
lds
mov
mov
dec
and
ins
ror
sar
add
aas
dec
adc
and
dec
jmp
clc
imul
cmp
and
mov
not
xchg
fnstcw
arpl
push
add
test
add
js
inc
lods
xchg
add
lods
and
add
add
adc
lock
cmp
add
sbb
ret
xchg
lds
xchg
jle
cmp
mov
ins
jb
xchg
xchg
movs
push
and
mov
jns
adc
sbb
add
dec
int3
xchg
sar
mov
or
inc
jmp
jmp
and
in
add
adc
jge
popa
mov
stc
add
jbe
inc
lahf
xor
inc
mov
ret
pop
cwde
ret
retf
add
ret
cwde
out
aad
in
pop
xchg
mov
in
(bad)
and
adc
retf
clc
test
pop
jle
add
jmp
dec
add
dec
mov
xchg
repnz
jmp
popa
rcl
test
rcl
rcl
repz
inc
and
hlt
sbb
add
jmp
mov
inc
xchg
pushf
inc
or
retf
cmps
sar
test
mov
mov
jns
dec
fcom
add
mov
fild
mov
idiv
inc
jns
mov
enter
inc
mov
sub
add
enter
inc
jo
sbb
adc
xchg
mul
jmp
sub
xor
adc
xor
(bad)
shl
push
add
or
(bad)
cmps
jmp
mov
fsub
js
(bad)
mov
(bad)
mov
jne
xor
cmp
pop
mov
iret
adc
shl
pop
mov
jbe
sub
pop
xchg
push
shl
rcl
cwde
sub
dec
or
adc
sbb
std
jnp
inc
adc
test
lods
xor
inc
ins
and
ret
sbb
xchg
gs
(bad)
popa
and
aaa
sub
mov
test
push
and
mov
nop
xchg
or
lds
add
pop
or
retf
or
mov
ja
cmc
lods
fdiv
adc
or
mov
jbe
sbb
mov
sub
loopne
and
and
dec
fistp
push
add
add
retf
xchg
push
sbb
sub
cmp
nop
cmp
and
ss
scas
or
enter
dec
xor
jmp
jns
cld
call
shr
add
jae
popa
outs
loopne
cmp
and
add
mov
or
mov
mov
push
in
and
pop
mov
add
popf
inc
enter
push
fsubr
dec
shl
cmp
push
in
adc
adc
mov
push
mov
jns
loop
jne
push
cwde
ret
push
xchg
js
fadd
mov
loopne
fadd
sub
rol
adc
ror
push
cmp
lock
in
xchg
shl
jl
mov
jg
je
jnp
nop
test
rcr
lahf
or
fdiv
push
ret
pop
jno
movs
fld
dec
nop
inc
sbb
into
jne
test
jmp
ja
fcomp
dec
push
pop
or
mov
mov
mov
xor
sbb
jge
pop
mov
or
inc
retf
sub
test
mov
inc
xor
push
imul
arpl
test
add
xchg
add
fadd
push
int3
mov
dec
int3
pop
mov
popa
or
in
sbb
xchg
jmp
fcomp
mov
lds
xchg
int
stos
rol
and
in
pop
ds
test
loope
sbb
movs
dec
or
and
cmp
pop
psubusb
dec
add
imul
cld
inc
push
lock
cmp
add
das
jo
rcl
lock
or
and
or
push
in
rcl
arpl
pushf
ja
cmp
xor
xor
fadd
or
imul
(bad)
mov
and
lea
aam
enter
adc
shl
ret
cld
cmp
test
dec
mov
and
icebp
sbb
sbb
xchg
pop
jge
jne
pop
sub
call
adc
pop
jg
pop
loopne
cmp
jne
pop
in
inc
xchg
rcl
fs
imul
test
lds
push
sub
mov
je
adc
inc
or
add
mov
push
mov
imul
outs
ins
xor
stos
and
daa
and
popa
mov
add
xchg
adc
dec
mov
mov
and
adc
js
lods
ret
ror
imul
xchg
lods
xchg
push
push
lahf
fnstsw
dec
fisub
jne
sbb
jge
mov
push
(bad)
shl
push
test
out
fsubr
imul
scas
adc
not
hlt
add
and
mov
inc
add
dec
mov
paddw
xor
mov
loopne
add
hlt
movs
mov
cmp
ret
call
add
and
in
adc
cli
or
ins
shl
push
sti
int3
ja
or
mov
clc
outs
xchg
cmp
inc
add
inc
imul
mov
jns
sub
sbb
(bad)
movhps
daa
jno
loope
push
jp
in
call
repz
add
cmps
dec
es
add
sbb
cmp
pop
pop
test
cmp
or
sbb
nop
inc
ja
test
movs
fldcw
loop
add
add
push
mov
rcl
xlat
jae
add
cdq
sbb
fadd
add
sub
ror
or
fisub
mov
sub
test
les
mov
push
xor
pop
mov
outs
int
push
ret
arpl
push
nop
xchg
cmp
mov
fdivr
sub
fdivr
push
jle
xor
mov
clc
xchg
mov
clc
cmp
setne
sbb
adc
lock
add
cmp
dec
add
jge
clc
add
add
mov
call
clc
cmc
rcr
loopne
lahf
shl
add
and
aaa
xchg
xchg
outs
cmc
test
xchg
xor
nop
test
lea
fdiv
mov
mov
inc
dec
mov
repnz
jbe
call
xor
push
call
mov
sub
mov
test
fld
push
cdq
sbb
inc
cmp
push
fprem
xor
mov
or
jmp
lods
or
xchg
xor
pop
fs
mov
or
sbb
hlt
add
mov
lock
movs
lock
cmp
xchg
push
in
cld
les
dec
xor
fwait
gs
lea
addr16
mov
ret
xchg
sbb
in
pavgb
mov
mov
adc
aam
ins
movs
dec
(bad)
fsub
xor
icebp
sbb
lds
int
cmc
nop
push
push
xor
(bad)
add
inc
repnz
dec
ret
mov
arpl
int
mov
jbe
mov
add
cdq
lock
push
add
or
mov
mov
pop
dec
xor
es
aam
aam
sub
sbb
push
test
inc
and
add
mov
rol
and
xchg
aam
aam
int
ror
inc
xlat
jo
xor
xchg
lock
add
ret
and
and
cld
jg
js
jge
in
ins
leave
sbb
add
adc
icebp
and
das
adc
add
or
add
ror
sub
jmp
xchg
xor
fwait
mov
xchg
inc
jno
ja
outs
cld
test
std
mov
sub
xchg
ds
popa
test
xor
mov
nop
push
pop
sbb
add
aam
jmp
cwde
dec
dec
cmps
or
xchg
sbb
adc
test
xchg
mov
aad
(bad)
adc
add
pop
add
or
mov
in
sbb
shl
(bad)
push
xlat
icebp
mov
or
jge
dec
add
dec
lea
add
mov
add
push
ror
cdq
add
mov
cmp
mov
mov
shl
pop
dec
inc
ret
add
add
fadd
rol
pusha
stc
outs
(bad)
push
retf
xor
arpl
lea
cld
nop
add
add
test
(bad)
mov
icebp
rol
mov
lea
mov
repnz
scas
pcmpeqw
aam
psubw
jo
mov
scas
cmp
jp
xchg
push
or
sub
imul
sar
fadd
push
test
in
dec
pop
retf
inc
xchg
neg
inc
add
arpl
cmp
pushf
inc
inc
into
mov
jecxz
fcom
fbstp
test
inc
shr
dec
cmp
inc
and
sub
or
dec
inc
shl
neg
clc
pop
sbb
shr
imul
adc
or
fiadd
loope
clc
(bad)
adc
pop
fistp
aam
fidiv
loopne
cmc
cwde
or
add
test
jle
mov
pushf
ret
push
sub
data16
repz
or
fild
jecxz
mov
and
jne
shr
add
sti
and
mov
adc
retf
jmp
sbb
fxch
add
sbb
pop
mov
add
add
cli
shl
cmp
sar
mov
scas
ror
or
cmp
adc
cmp
sbb
js
jecxz
or
jmp
add
mov
pop
dec
sbb
loopne
dec
mov
(bad)
int3
cmp
dec
test
mov
sbb
inc
ret
stos
enter
fmul
and
pop
inc
inc
inc
xor
jge
jne
pop
or
pop
push
int
cmp
sub
std
and
mov
or
push
mov
lods
into
ds
xlat
rcl
adc
icebp
push
push
ins
and
les
call
adc
sahf
sbb
shl
mov
mov
in
add
sub
(bad)
nop
hlt
add
fidivr
rep
das
dec
inc
xor
iret
jne
neg
and
jo
push
or
adc
and
shl
ss
cmp
sahf
fs
ins
and
add
sub
stos
loopne
jo
lock
add
not
mov
mov
cld
fidivr
adc
add
mov
push
dec
adc
push
and
jle
xor
lds
pop
and
inc
mov
outs
push
jbe
jle
xor
or
rol
jl
pusha
jg
lea
mov
dec
jmp
add
mov
or
or
and
mov
dec
jmp
mov
sub
or
fst
cld
add
cld
cmps
add
in
push
push
xchg
pop
cmp
es
or
unpcklps
inc
dec
add
jb
lsl
mov
inc
mov
cdq
pmaddwd
jge
lock
pop
imul
cmp
cmp
gs
or
cmp
mov
mov
gs
add
mov
cmps
or
cmps
mov
shl
call
std
dec
daa
mov
je
dec
dec
dec
xor
test
or
add
inc
daa
adc
popa
movs
outs
adc
or
jecxz
movs
jle
mov
push
add
or
popf
push
cmp
cmp
mov
pop
jmp
and
inc
mov
aam
or
xchg
and
xor
enter
mov
push
repnz
adc
in
ret
mov
jne
retf
mov
movs
jle
mov
aam
or
sar
cmp
cmp
push
mov
xor
lds
dec
sub
js
js
lahf
push
push
pop
mov
sub
add
push
mov
or
in
xchg
popf
jge
add
cmp
mov
arpl
pushf
push
addr16
jo
mov
je
movs
sub
arpl
push
les
mov
dec
arpl
mov
or
fs
or
or
mov
xchg
push
xor
fs
xchg
mov
test
add
dec
jmp
popf
push
mov
movs
mov
pushf
mov
call
cdq
xchg
mov
mov
dec
inc
and
mov
cmps
cmp
(bad)
aad
inc
pop
pusha
mov
adc
push
push
cmp
inc
pop
jb
nop
inc
inc
inc
push
inc
xchg
retf
and
inc
stc
dec
jmp
xor
push
push
adc
outs
cmp
sbb
jb
cmp
cwde
pop
jb
cmp
ret
and
sbb
mov
jb
shr
xor
jo
es
aam
cmp
adc
mov
or
adc
inc
jp
daa
es
pop
xchg
sub
enter
int3
or
xor
(bad)
int3
cmp
ret
and
inc
repnz
pop
and
inc
adc
add
add
and
xor
add
std
aaa
add
rep
aas
nop
add
sub
sub
mov
nop
shr
push
adc
sbb
jmp
sub
xor
idiv
add
sub
push
repz
jle
mov
adc
sahf
outs
dec
neg
fld
mov
imul
es
popa
push
out
mov
cmps
push
lods
push
fs
mov
inc
inc
adc
xor
push
jne
and
adc
daa
push
fucomi
ret
or
sti
mov
call
cmps
test
daa
dec
push
xor
sti
in
sub
mov
test
bound
iret
inc
or
jne
adc
imul
inc
mov
push
dec
lahf
or
push
add
or
cmp
rcl
mov
call
add
fcomip
or
jb
ret
push
xchg
call
je
push
daa
nop
rol
test
or
sbb
push
std
aas
sub
push
add
pop
sub
mov
mov
in
adc
test
jne
jmp
xor
or
push
sbb
or
or
inc
and
or
jg
dec
or
inc
fnsave
adc
sbb
in
cs
dec
cmp
mov
mov
push
clc
inc
xchg
or
xchg
bound
dec
push
add
or
pop
add
in
ret
inc
sbb
cmp
mov
push
nop
test
adc
pop
dec
add
add
out
xlat
movs
fcmovu
into
or
jl
fld
push
popf
inc
dec
push
dec
or
(bad)
inc
push
push
or
popa
enter
sbb
adc
nop
dec
rcl
or
shr
lds
outs
aas
mov
loopne
sbb
push
ins
adc
adc
(bad)
hlt
jnp
clc
sar
and
ret
sti
sub
mov
lea
lock
push
lock
mov
adc
ror
ins
inc
add
jbe
jae
sbb
push
call
ret
add
mov
push
les
ror
push
shr
ins
pusha
mov
push
xlat
fcmovnb
push
add
dec
adc
mov
arpl
mov
pop
and
or
shr
or
scas
adc
xchg
movs
lock
inc
pop
adc
loopne
push
lahf
or
cmps
or
mov
cmp
mov
rcl
lea
inc
adc
cmps
adc
add
push
inc
call
dec
(bad)
cmps
hlt
fisttp
cmp
cmps
adc
push
mov
loope
mov
pop
jne
mov
push
dec
xor
test
ins
sub
cmps
sbb
inc
add
or
loopne
sub
pop
sub
adc
imul
(bad)
rcl
xor
loopne
or
mov
addr16
popf
xor
fisttp
add
jne
add
adc
or
mov
nop
push
cmps
(bad)
ds
adc
push
js
push
(bad)
xor
xlat
or
mov
jb
or
pop
fisub
imul
mov
xor
cmp
cli
stos
bound
mov
mov
sub
jne
mov
xor
or
call
pop
imul
pushf
adc
pop
out
out
pop
inc
mov
push
test
add
lods
xor
lea
sub
enter
not
sbb
add
in
in
fiadd
or
ds
loop
and
fs
lahf
or
mov
fcomp
fld
mov
mov
add
add
std
or
mov
jge
fs
mov
sbb
aas
sbb
fldcw
out
and
cld
or
or
test
mov
dec
fsub
data16
pop
cmp
or
gs
cmc
test
lea
in
dec
adc
and
xchg
nop
mov
and
test
inc
mov
lock
xchg
icebp
jns
jl
push
pop
push
add
xor
add
je
adc
fild
pop
push
xchg
mov
xor
nop
and
stc
jbe
lea
rcl
mov
dec
cdq
and
sbb
lahf
stos
and
push
cmp
cmps
mov
adc
test
pop
xor
dec
xor
fist
xchg
mov
mov
out
add
aaa
ret
cmp
clc
and
ins
pop
dec
or
xor
pop
or
pop
mov
mov
loopne
xor
cmp
hlt
dec
push
xor
and
or
push
sbb
dec
enter
pusha
or
xlat
mov
cwde
imul
ror
adc
cmp
or
aad
inc
dec
scas
imul
aam
inc
ret
or
mov
push
push
sub
popa
gs
inc
jge
sub
jmp
outs
shr
bound
add
mov
lods
(bad)
loop
int3
jmp
inc
ss
xor
inc
jecxz
test
or
mov
push
pop
enter
shl
jns
add
lods
adc
stos
pusha
lahf
call
or
lds
and
test
xlat
inc
fsubr
adc
fst
and
imul
xlat
push
inc
mov
std
add
popa
fwait
dec
or
jne
xchg
sahf
lock
inc
inc
dec
jmp
in
lahf
pusha
fdiv
sbb
ins
mov
inc
inc
mov
mov
test
call
stos
xchg
sub
cld
jmp
xor
sbb
movs
lods
lds
mov
xchg
and
in
cmp
cmps
cmp
jmp
(bad)
mov
aas
shr
xchg
pop
push
jo
or
imul
(bad)
sbb
lahf
push
mov
sub
stc
mov
ret
div
jmp
add
dec
mov
or
mov
lea
mov
or
push
inc
mov
aas
push
setge
aas
pushf
push
xor
rcr
pop
push
pop
ret
pop
push
adc
sbb
adc
aam
cdq
shl
add
les
push
xchg
xor
loopne
adc
xor
aam
inc
add
sbb
sub
and
sub
(bad)
mov
xor
dec
pop
mov
adc
push
or
cmp
mov
pop
or
xor
loope
jle
sub
xchg
cli
adc
bnd
lea
xor
lods
test
jnp
rol
inc
int3
lods
inc
clc
(bad)
inc
test
inc
mov
jmp
pop
int
sub
dec
inc
add
imul
xor
shr
xchg
sbb
call
add
sbb
fcmovu
add
and
mov
and
push
push
jno
push
add
js
push
loop
mov
jne
mov
shl
div
fcomp
mov
imul
push
adc
jge
inc
cmp
ds
add
dec
fs
or
scas
fldcw
adc
ins
push
movs
mov
dec
je
adc
(bad)
mov
adc
or
fist
or
xor
push
add
repz
sub
dec
pop
lock
mov
jmp
les
add
push
add
mov
ds
jne
push
or
xor
cld
push
or
mov
mov
mov
loope
sub
xor
or
add
dec
test
ret
fs
stos
into
mov
pop
push
mov
leave
fisttp
test
rcr
sub
jo
mov
in
xchg
mov
sub
loopne
inc
pusha
sbb
jne
ret
addr16
xor
pop
cmp
je
bswap
sub
inc
inc
cs
in
aaa
pop
sub
push
dec
adc
adc
xchg
inc
adc
add
mov
push
mov
pop
stos
sbb
test
mov
enter
fisttp
je
jo
rcl
cs
imul
(bad)
gs
or
add
jne
xchg
add
pop
push
mov
or
push
cmps
push
pusha
movs
movs
aad
inc
and
sub
xor
cs
jno
into
inc
push
or
cmp
ror
mov
adc
or
cwde
call
and
cld
push
mov
dec
inc
sub
cmp
imul
mov
jmp
cld
imul
dec
or
or
bound
ret
xor
cmp
aaa
xchg
aam
cs
je
cmp
imul
(bad)
or
or
sub
xor
repz
cld
mov
sub
pusha
or
cmp
jge
lahf
xchg
add
cmp
sub
add
cmp
inc
jne
mov
je
sbb
or
mov
call
imul
sbb
lock
sub
or
add
daa
sub
cmp
call
aaa
push
loopne
aam
push
adc
jg
or
inc
add
jg
jg
pop
adc
or
sbb
cld
mov
in
loope
mov
jb
fstp
shr
mov
mov
pop
ins
jo
sbb
xor
or
jmp
fadd
leave
pop
push
add
bound
pop
push
mov
or
jno
jg
iret
cmp
mov
enter
popa
out
dec
inc
nop
lahf
dec
or
or
icebp
push
shl
test
adc
add
pop
outs
or
aaa
or
inc
xor
cmps
arpl
cmp
pop
test
xchg
mov
inc
sub
lea
nop
add
jmp
add
jmp
xchg
adc
(bad)
pop
inc
and
call
cmps
(bad)
adc
add
and
push
mov
sub
movaps
aaa
jbe
loopne
pop
rol
sar
or
cmp
cmp
dec
ret
sgdtd
jae
fcmovnb
add
aam
inc
jb
adc
cmp
sbb
lods
aam
adc
jmp
xchg
pushf
or
xor
adc
mov
push
or
inc
and
shr
xchg
dec
movs
xchg
add
xchg
mov
test
into
out
out
ret
dec
mov
mov
adc
cmps
nop
dec
cs
test
add
dec
mov
mov
(bad)
inc
shl
mov
fiadd
add
test
or
add
sahf
(bad)
cs
mov
test
lods
add
dec
or
pop
add
shl
iret
scas
sub
dec
mov
sub
cld
xor
mov
lock
adc
rol
rcl
push
adc
movs
sbb
dec
or
loope
adc
mov
fadd
int3
dec
xor
jge
loopne
pop
dec
cs
mov
sub
push
je
es
mov
sub
int3
and
inc
push
pop
jmp
aam
add
mov
adc
xchg
jbe
jne
inc
mov
add
pop
dec
jne
ja
inc
mov
adc
inc
jge
jmp
push
ins
jne
fist
rcr
sbb
adc
jno
shl
mov
push
dec
sahf
cld
jmp
add
xor
inc
dec
push
xor
cmp
pop
push
push
sbb
add
adc
jmp
add
sub
xchg
inc
add
cmps
cmp
mov
pop
rcr
clc
jae
and
sbb
movs
add
push
loopne
add
fwait
enter
add
sahf
and
add
xlat
mov
cmc
mov
pusha
mov
or
xor
mov
xchg
sub
dec
popa
int
push
push
sub
sbb
dec
hlt
les
mov
xor
mov
hlt
xchg
sahf
inc
(bad)
push
stos
add
add
sub
and
mov
push
repz
sbb
add
xor
or
pusha
push
push
xchg
arpl
inc
loopne
jmp
ins
shl
dec
je
mov
dec
repz
adc
sub
mov
mov
adc
add
sub
sub
stos
inc
jl
or
push
sub
jmp
jmp
jmp
push
popf
xor
jecxz
or
adc
sub
sete
lods
int3
add
cli
jae
test
mov
or
push
loope
in
jno
lods
inc
push
mov
lock
inc
loope
retf
(bad)
test
add
bound
movs
add
sbb
in
lock
jnp
jmp
and
(bad)
jp
push
aas
pop
scas
push
fdivr
jg
dec
fisttp
push
cmp
retf
movs
mov
fisttp
pop
adc
repz
fmul
add
rol
stos
and
mov
jne
ins
inc
sub
sbb
lods
ret
fsub
cmp
pop
mov
shl
pop
xchg
inc
inc
or
cld
shr
xchg
xor
cmp
jmp
or
or
fadd
sub
sbb
xor
or
lods
xor
mov
xor
mov
lock
adc
add
arpl
add
xor
inc
jmp
cmp
jno
mov
loopne
dec
bound
inc
inc
int3
adc
setle
stc
das
sbb
cmp
push
dec
push
pusha
mov
inc
and
les
loopne
xor
adc
je
rcl
or
mov
push
clc
fisub
mov
jo
dec
adc
loopne
and
pop
inc
fcmovnbe
or
and
and
inc
cs
enter
int3
pop
push
xchg
fist
data16
loopne
loopne
fadd
add
mov
or
and
add
or
mov
or
nop
xchg
push
popf
stos
ror
in
push
arpl
inc
mov
or
jmp
lea
sbb
pushf
xor
pushf
mov
and
pop
add
push
lock
pop
dec
xor
mov
gs
sbb
or
pop
sub
adc
inc
lock
cmps
xchg
aam
sbb
jg
addr16
or
ins
xor
dec
dec
adc
xchg
mov
ins
adc
rcr
add
or
jne
add
push
mov
imul
dec
nop
adc
add
fadd
(bad)
in
popa
cld
loope
adc
test
sub
in
push
xchg
loope
sti
or
stos
pop
xor
push
add
dec
xor
adc
lods
mov
movs
cbw
ror
lea
pushw
mov
in
ins
test
inc
fistp
mov
pop
pop
mov
test
inc
add
and
cmp
out
or
pop
fisttp
(bad)
adc
sbb
jmp
adc
dec
mov
mov
jecxz
push
scas
and
jne
fwait
sub
add
inc
inc
push
add
pop
les
cmp
inc
sbb
je
jmp
loope
inc
add
(bad)
add
sub
mov
adc
test
dec
fs
ret
sub
cmc
xor
cli
sbb
in
jmp
inc
jmp
or
arpl
cdq
scas
and
push
or
loope
mov
add
fld
aas
push
stc
aaa
add
rcr
sub
mov
inc
push
inc
add
repnz
xchg
test
adc
and
push
ins
inc
mov
dec
push
je
add
mov
sub
enter
(bad)
movs
hlt
sub
jo
mul
js
fst
ss
rol
jg
and
jnp
push
mov
dec
push
inc
sbb
push
outs
test
adc
inc
std
aas
(bad)
or
out
or
dec
push
in
adc
lods
add
sbb
and
pop
pop
xor
adc
rcr
fcmove
and
inc
in
retf
sub
or
adc
xor
inc
jge
inc
or
sbb
adc
inc
leave
add
ret
push
sbb
pop
ja
or
xor
je
adc
xor
add
leave
mov
cwde
sbb
scas
sbb
add
lahf
push
xchg
jmp
sbb
mov
ds
or
test
xchg
jge
nop
pop
jecxz
gs
inc
mov
(bad)
push
aad
add
sub
adc
pusha
call
test
mov
inc
xchg
scas
and
jmp
push
xchg
int
jno
cmp
cmp
mov
xchg
sar
sbb
imul
pop
clc
dec
jb
add
add
nop
retf
lds
xor
push
pop
ret
inc
addr16
mov
mov
jl
popf
push
aam
add
add
pop
scas
and
push
push
xchg
add
add
jne
enter
adc
or
ss
ror
or
pop
and
mov
jbe
adc
add
mov
lea
int3
or
pop
add
lock
ror
or
xor
mov
xchg
mov
and
add
push
call
nop
adc
sbb
pusha
lahf
xchg
ss
mov
push
fisubr
sbb
sar
out
lods
cmc
pop
pusha
xchg
stc
fsubr
cmp
pop
add
add
or
add
add
add
outs
fiadd
or
or
dec
les
or
jno
add
dec
and
adc
jl
les
ret
cdq
adc
test
pop
fld
xor
in
pop
add
fwait
jne
and
jle
in
jge
and
push
jge
adc
das
push
outs
mov
mov
test
das
lods
or
stc
push
fwait
or
cmps
mov
sub
pop
nop
in
ins
pop
popa
or
scas
xor
pop
sub
push
ret
sub
add
or
dec
jb
push
and
imul
push
cmp
pop
inc
xchg
daa
xor
sbb
mov
inc
pop
je
xor
xchg
loopne
sub
sar
imul
add
or
add
loopne
loopne
loopne
xor
cmp
(bad)
mov
outs
or
mov
push
les
pop
scas
xor
mov
pop
mov
mov
xor
xchg
ret
adc
xchg
add
or
xlat
jb
aad
add
sub
and
fadd
add
mov
or
dec
ja
add
jns
test
pop
(bad)
xor
pop
mov
test
jb
fdivr
aas
pusha
add
jmp
inc
adc
add
jl
mov
cdq
cmc
or
jno
push
adc
adc
add
mov
add
xor
adc
xchg
or
inc
mov
mov
or
add
cdq
jno
in
xlat
(bad)
xor
(bad)
jmp
push
push
cwde
mov
inc
add
xchg
inc
xor
inc
aad
jmp
dec
movs
adc
xchg
call
mov
push
les
cs
or
mov
mov
sbb
xor
cmp
xchg
add
and
xchg
fcom
add
cmp
leave
xchg
pop
mov
mov
adc
cmp
lods
je
or
je
xor
or
add
inc
inc
mov
cmc
fld
sub
add
mov
xchg
push
inc
mov
pop
(bad)
xor
mov
adc
scas
xor
or
inc
aas
add
mov
call
call
or
gs
movs
cmc
into
fistp
or
mov
cmp
jecxz
pop
(bad)
push
shl
inc
mov
and
mov
xor
rcl
push
adc
sbb
adc
or
push
(bad)
inc
(bad)
or
mov
cmp
push
pop
inc
inc
loop
je
loopne
les
push
add
inc
rol
imul
jbe
mov
jbe
aam
add
add
jmp
push
dec
and
adc
add
int
sub
dec
les
fmul
or
in
add
adc
add
inc
sub
add
popa
xor
jns
shr
pause
cmp
inc
mov
adc
mov
mov
or
(bad)
jmp
sub
mov
xor
xchg
jne
add
mov
xchg
lea
add
lds
pop
inc
add
ja
cmp
mov
sbb
push
sbb
and
mov
stos
or
dec
lods
or
or
int3
pop
dec
mov
loopne
xor
push
popa
xchg
or
cmp
pushf
cmp
or
fisttp
sub
fbstp
xchg
add
std
mov
std
add
or
adc
fwait
adc
sbb
cmp
std
aas
dec
sbb
xor
inc
add
lock
rcr
(bad)
push
loope
xchg
cli
push
das
cmps
add
hlt
div
rcl
movs
adc
int
in
or
das
mul
or
jmp
repnz
jae
or
pushf
pushf
fsubr
inc
stos
jae
mov
fist
inc
mov
xchg
bound
mov
dec
scas
pusha
mov
mov
(bad)
jns
rcr
xchg
test
adc
inc
pop
and
in
repnz
popa
cmc
imul
add
in
add
jecxz
add
and
or
jno
sbb
and
dec
adc
add
pop
jge
sbb
int
cmp
add
aaa
jle
sbb
inc
jle
mov
mov
jmp
pop
sbb
sar
imul
(bad)
mov
jle
addr16
dec
cmp
bound
pop
inc
add
retf
vmread
popa
add
imul
add
mov
dec
xchg
or
push
jmp
clc
pop
fiadd
and
push
jge
ror
or
in
fs
aaa
mov
adc
push
and
push
dec
aaa
and
nop
adc
popf
cwde
lock
test
sbb
pop
pop
inc
imul
inc
test
ins
push
dec
mov
daa
std
fnstsw
mov
and
in
shr
add
push
pop
outs
xor
aas
push
push
sbb
add
push
pop
into
sbb
mul
xchg
mov
pop
mov
shl
sbb
xor
jge
imul
add
ret
xchg
sub
loopne
jne
xor
add
xchg
add
adc
iret
pusha
arpl
push
sub
jb
mov
pop
jmp
mov
adc
lds
call
mov
xchg
icebp
repz
cmp
clc
jmp
sub
or
rol
xor
sbb
push
jge
addr16
and
adc
xchg
in
mov
dec
cwde
push
mov
(bad)
xlat
popf
jb
mov
ja
push
mov
or
pop
pop
es
into
std
cmp
cmp
int
sub
rol
push
add
test
pop
fbld
mov
mov
push
and
adc
sub
adc
dec
pop
cmp
in
add
in
push
test
fbstp
sub
add
ret
(bad)
cmp
and
ja
xchg
sub
mov
mov
adc
add
mov
enter
mov
push
clc
arpl
or
push
sbb
clc
mov
mov
aas
ret
cld
mov
cmp
mov
ret
pop
or
or
test
push
clc
xor
xor
fwait
sub
adc
popf
push
and
jg
loopne
xchg
(bad)
xor
aas
bound
sub
bound
adc
mov
outs
dec
clc
adc
mov
inc
arpl
in
mov
aas
arpl
and
jmp
dec
mov
pop
mov
popf
jge
imul
mov
fcmovnb
nop
stos
lds
mov
jne
fcom
push
les
inc
xor
sbb
sbb
xchg
imul
dec
xchg
fmul
movs
outs
sbb
cmp
mov
push
mov
or
inc
sub
push
cmp
or
xchg
add
call
or
xchg
push
dec
pop
xchg
mov
dec
mov
push
into
pop
pop
and
sub
push
stos
movs
push
imul
inc
cmps
test
and
es
add
sbb
dec
pop
add
or
lahf
mov
rcr
adc
inc
or
popa
and
fs
popa
cld
adc
test
lahf
test
inc
xor
popf
clc
sub
test
mov
sbb
mov
mov
pushf
popa
cwde
popa
jge
cmp
adc
or
pop
push
jle
test
jno
enter
adc
sti
pop
cmps
loope
dec
xchg
icebp
add
lea
aaa
xor
js
mov
sbb
inc
dec
pop
jecxz
jbe
(bad)
lahf
fldenv
jb
inc
shl
add
mov
xchg
cdq
adc
cdq
dec
ins
movs
adc
push
mov
or
xor
shl
rol
test
pop
jmp
ja
xor
add
call
cmp
jo
add
outs
test
or
or
cmp
mov
fdiv
fild
mov
imul
ins
mov
and
shl
addr16
mov
and
xor
cmp
mov
sbb
inc
ins
and
inc
sbb
xchg
xchg
push
and
clc
push
add
mov
or
outs
mov
das
mov
mov
inc
pop
add
stc
add
ror
shr
dec
push
sub
les
shl
inc
or
cmp
push
xor
aad
ficom
shl
(bad)
shl
out
enter
jmp
aaa
add
jne
jne
pop
dec
cdq
sub
jp
cli
je
xor
ins
rcl
(bad)
and
mov
rol
hlt
ss
les
pop
dec
or
dec
les
iret
or
aaa
icebp
inc
inc
daa
ret
popa
data16
mov
fwait
int3
and
and
inc
js
or
add
ins
mov
sbb
mov
mov
outs
push
mov
jecxz
jnp
push
mov
retf
adc
pop
(bad)
sbb
cmp
jne
inc
movs
mov
xchg
pop
ins
inc
and
pop
fidiv
out
push
xchg
jne
les
sub
pusha
ins
xor
hlt
fidiv
lods
fistp
fst
xor
popf
inc
pusha
sub
mov
test
jb
imul
sub
cmp
mov
jge
data16
lea
loop
sar
gs
nop
ret
jae
mov
or
popa
aaa
cmp
ins
sub
es
dec
clc
and
mov
add
mov
(bad)
mov
cmp
add
out
jg
dec
lock
push
rol
add
sbb
or
aad
sub
call
sahf
dec
jecxz
adc
mov
aad
or
mov
iret
dec
push
test
inc
inc
movs
xlat
mov
sbb
pusha
push
add
or
retf
enter
add
loope
mov
sbb
mov
add
outs
and
inc
adc
es
ret
js
es
rcl
out
push
adc
icebp
std
mov
cmp
ins
dec
cmp
adc
test
jnp
lahf
or
or
xchg
lea
lahf
pusha
inc
retf
add
call
mov
push
push
rcr
and
mov
or
adc
ret
mov
imul
jne
lea
cs
aam
add
nop
rcr
jo
gs
adc
lea
js
jecxz
ins
mov
mov
out
out
jnp
aad
das
mov
cmp
lea
push
mov
inc
and
xor
push
xchg
and
cmp
and
popa
lea
(bad)
cmp
jne
sub
xchg
dec
or
or
add
test
not
cli
outs
mov
xchg
sub
cmp
add
jae
adc
adc
adc
add
shl
xor
sar
adc
popf
xor
fsub
arpl
and
dec
and
arpl
cmp
retf
stc
sbb
cld
lods
test
rol
std
sub
add
mov
lea
mov
ffree
add
sub
adc
sub
(bad)
sbb
and
stos
gs
jae
hlt
inc
cmp
or
pop
xchg
cs
sbb
jno
enter
test
fdiv
scas
mov
test
aad
jmp
sbb
xrelease
retf
push
cld
mov
add
add
mov
mov
push
mov
or
inc
popa
sar
xor
mov
inc
sbb
jp
xor
or
add
adc
jae
inc
sbb
xchg
jp
pusha
mov
dec
adc
pop
das
test
adc
add
outs
leave
ret
or
shr
or
inc
fist
outs
push
std
fsub
jo
jo
(bad)
xchg
scas
push
(bad)
xor
push
cwde
and
xchg
push
sbb
shl
jne
inc
jbe
ins
ror
fistp
lock
scas
push
dec
call
pop
jne
pop
xchg
mov
lods
call
lods
jl
push
dec
aaa
nop
lods
test
add
add
jmp
mov
adc
adc
(bad)
or
sbb
sub
dec
or
push
adc
ins
inc
xor
inc
mov
jo
rol
pusha
or
mov
outs
test
jae
xor
sbb
les
pop
sbb
cmps
xor
ins
movs
cwde
add
add
xor
jmp
xor
inc
cdq
leave
xchg
jb
and
test
mov
sbb
test
or
add
aam
or
or
dec
adc
dec
push
and
xchg
ja
jo
add
mov
add
js
add
stos
add
or
lahf
lock
add
xchg
add
jne
cli
test
xchg
or
push
push
sbb
or
js
das
(bad)
sub
mov
xchg
rcr
dec
and
fld
sbb
add
clc
movs
push
or
pop
or
add
jne
adc
or
movs
push
jo
mov
pusha
add
inc
mov
or
ret
push
xchg
shl
fld
daa
sub
add
add
sbb
imul
fnstcw
jns
adc
out
call
loope
test
sub
push
mov
or
jb
add
add
sub
sbb
call
adc
cmp
pop
add
xchg
sub
cmps
loopne
fld1
push
and
ins
mov
mov
movs
cmps
hlt
add
or
add
pop
fwait
mov
add
or
ror
mov
in
call
mov
mov
loop
cmp
in
xor
or
or
and
or
das
sub
dec
lock
add
ficomp
fcom
push
rcr
stos
test
loopne
or
push
jg
jo
loope
cmp
cwde
lahf
das
dec
sbb
adc
xchg
pop
loop
test
inc
pop
mov
sbb
sbb
or
sub
adc
inc
pop
repz
add
pop
aam
adc
outs
adc
popf
nop
push
or
add
or
lahf
dec
and
pop
aam
or
dec
movs
add
dec
xlat
cld
push
jmp
or
xor
add
mov
pop
add
or
dec
clc
iret
adc
push
adc
lahf
adc
call
and
mov
sbb
sub
or
push
mov
inc
pop
mov
loop
sbb
arpl
mov
mov
adc
arpl
ss
inc
sbb
arpl
mov
xor
jnp
mov
sbb
icebp
add
add
inc
stos
mov
call
jmp
add
lahf
pop
loopne
mov
or
add
imul
add
int
cmp
test
push
adc
test
push
xchg
lods
push
shr
add
push
mov
ror
pop
pop
cld
mov
adc
push
mov
pusha
jg
ins
cmp
shl
xchg
mov
dec
push
add
sub
pop
jecxz
mov
xor
int3
push
inc
aad
xchg
adc
ins
int
mov
test
sbb
push
pusha
cmp
ds
mov
dec
or
rcr
inc
stos
ins
test
sbb
xchg
inc
pop
inc
shr
mov
dec
cld
add
rol
push
(bad)
bound
cmp
jne
inc
fcomp
and
or
add
loopne
mov
sub
adc
mov
sub
add
cmp
add
mov
sub
adc
push
or
push
lock
push
pusha
push
fiadd
xchg
or
pop
test
lods
pop
or
mov
jg
in
or
dec
stc
loopne
push
push
or
test
and
add
add
add
mov
push
push
adc
lahf
or
lds
sbb
mov
xchg
sub
and
mov
or
push
ret
push
je
inc
or
push
xchg
aam
push
inc
adc
push
jg
fwait
arpl
or
cwde
xchg
cmps
xor
dec
ss
push
lods
lods
mov
mov
push
loope
repnz
nop
xor
adc
cmp
dec
cmpxchg
add
inc
pusha
xchg
adc
fcmovu
ins
mov
mov
add
inc
pusha
mov
mov
add
mov
mov
adc
rol
dec
cmp
xchg
es
leave
mov
mov
sbb
loopne
and
or
movs
mov
dec
addr16
cmp
sub
push
sti
xor
sub
mov
pop
adc
mov
or
mov
arpl
xchg
adc
mov
xchg
or
add
mov
fadd
jnp
xchg
ins
sbb
or
jg
adc
add
fsubr
dec
inc
or
inc
leavew
rol
retf
out
clc
adc
retf
mov
ins
sbb
or
or
loope
arpl
adc
test
xor
fwait
arpl
xor
pop
or
xor
jae
push
clc
jle
and
jmp
mov
mov
popa
jmp
jae
sbb
mov
and
cmp
shl
add
dec
mov
push
mov
das
pop
inc
mov
cmp
and
das
inc
and
sub
daa
push
xchg
dec
adc
jne
pop
add
xor
jmp
jae
xor
dec
cli
xor
das
daa
rcl
dec
leave
inc
jmp
out
cs
dec
clc
push
inc
sub
jmp
jmp
add
jecxz
jmp
sub
adc
sbb
mul
sbb
mov
inc
ja
inc
adc
or
pusha
fcmove
pop
std
jecxz
mov
adc
gs
pop
add
pop
add
fdiv
sub
push
pop
mov
pop
adc
sbb
or
inc
nop
and
dec
xor
xor
inc
mov
aas
or
movs
mov
pop
inc
pusha
jno
and
xor
adc
xor
mov
jne
xchg
and
lea
jle
mov
mov
and
sub
mov
inc
xchg
mov
pop
xor
movs
xor
jns
pop
pop
test
adc
ficomp
popa
inc
movs
leave
push
sub
cmp
cmp
mov
popf
sub
imul
and
or
das
rol
xchg
mov
pop
jbe
call
push
aam
lods
movs
add
mov
or
dec
pushf
sbb
sbb
gs
call
mov
adc
pushf
xchg
inc
xor
xchg
push
push
jge
call
clc
mov
js
pushf
icebp
push
add
jp
rcr
stc
mov
adc
adc
add
dec
bound
or
sub
lds
fcomp
inc
add
jl
xor
fwait
mov
mov
or
pop
in
push
mov
call
pop
lahf
and
in
call
call
and
das
fsubr
push
test
lock
int
mov
fdiv
adc
add
daa
and
sbb
in
daa
add
cmc
or
scas
call
fcomp
or
ret
inc
or
xor
cmp
sbb
push
lahf
pop
aad
dec
outs
rep
mov
mov
fidiv
movs
inc
dec
scas
push
pushf
or
iret
movs
shl
fisub
add
ds
inc
adc
std
push
sbb
xchg
add
add
jmp
aad
(bad)
sti
push
repnz
inc
inc
sub
or
push
mov
push
mov
stos
xchg
add
or
inc
fld
or
inc
fcmovne
fisub
nop
jo
lea
sbb
cmp
inc
inc
push
aad
inc
sub
sbb
stos
add
or
mov
jecxz
les
mov
loope
and
shr
in
std
pop
sub
jbe
or
aas
jnp
(bad)
jmp
xor
test
sub
mov
pop
arpl
or
sbb
fsubr
mov
jl
aaa
mov
add
pop
shl
sar
mov
out
and
pop
inc
sbb
adc
add
pop
jnp
dec
pop
push
push
cli
aaa
jge
inc
clc
mov
or
adc
(bad)
std
mov
jno
in
dec
sub
mov
fidivr
jg
mov
add
inc
movs
dec
sbb
pop
dec
adc
inc
mov
adc
push
pop
sbb
pop
fs
xchg
or
loope
mov
loop
jecxz
mov
jg
pop
fst
rol
sar
movs
dec
or
add
dec
retf
or
movs
jmp
and
inc
add
shl
pop
add
and
sbb
push
cmps
mov
xchg
ins
jecxz
lea
aaa
mov
mov
pusha
retf
xlat
das
sub
jle
inc
mov
mov
and
stos
ins
(bad)
cli
push
ret
inc
hlt
fdivr
sbb
ret
push
cmps
fs
scas
ret
or
fnstenv
xchg
push
sbb
lods
pushf
inc
mov
mov
loop
ss
imul
fsub
int3
loop
gs
push
stos
jp
pop
mov
sbb
test
cmp
pop
inc
les
fsubr
and
xchg
int3
test
mov
jmp
or
xchg
sbb
cmp
ret
jmp
xchg
test
cli
fdiv
not
mov
dec
(bad)
fadd
jb
pop
and
xchg
daa
and
or
inc
mov
xor
mov
pop
pop
outs
fcomp
add
push
imul
jne
mov
cmp
xor
mov
shr
add
pop
mov
jno
ror
adc
shl
fimul
and
ror
loopne
sub
mov
int
sub
in
or
inc
or
add
xchg
xor
pop
push
movs
adc
sbb
in
xchg
mov
or
stos
mov
sub
cmp
adc
(bad)
push
shl
rcr
sbb
push
cld
rcr
aas
and
out
xor
inc
mov
xchg
inc
(bad)
imul
xchg
add
stos
dec
adc
call
ret
mov
dec
or
push
push
jb
pushf
sar
and
add
dec
leave
and
mov
mov
inc
stc
pop
inc
push
cmp
mov
lahf
mov
xchg
add
adc
mov
push
mov
div
xchg
repz
dec
add
and
cwde
mov
shl
jp
mov
inc
jb
adc
dec
test
loope
xchg
and
pop
and
xchg
and
mov
jnp
mov
jg
jo
sub
push
dec
inc
and
pusha
in
adc
ret
mov
dec
mov
adc
shl
xchg
and
jp
sub
inc
movs
sub
or
jae
push
xchg
loopne
nop
add
inc
mov
sub
sub
(bad)
push
test
adc
cwde
cwde
or
xor
cmp
jl
add
mov
test
and
sub
add
pop
xor
aam
xor
test
aaa
and
xchg
sbb
adc
push
mov
adc
mov
sub
mov
pop
adc
jb
cmp
sub
mov
inc
repnz
test
gs
inc
cmps
sub
aas
stos
scas
pop
sbb
or
jmp
stc
inc
rcl
jmp
inc
dec
(bad)
xor
inc
adc
add
mov
test
mov
mov
ss
repz
mov
jnp
mov
xor
mov
cmp
push
movs
sahf
div
inc
mov
xchg
push
mov
mov
loope
add
mov
mov
pop
cli
or
cmp
xchg
sub
and
dec
rcl
(bad)
retf
adc
xchg
or
add
outs
cmp
sub
cdq
not
cmp
lock
in
adc
lea
pop
xor
or
(bad)
pop
adc
xchg
dec
out
data16
jns
dec
jnp
or
das
leave
mov
lock
out
data16
or
jo
mov
wrmsr
ins
dec
es
pop
or
pop
leave
inc
(bad)
or
imul
jnp
jb
pop
push
pop
xchg
cmp
push
push
push
(bad)
push
rcl
mov
(bad)
jae
mulps
(bad)
(bad)
xlat
sbb
and
inc
fsub
outs
mov
jne
pop
dec
mov
mov
jnp
sbb
outs
sbb
sub
jmp
sbb
inc
shl
inc
jmp
dec
test
sub
mov
pop
ins
popa
xchg
or
and
cmps
movs
out
or
dec
mov
and
xlat
pop
push
adc
dec
add
or
or
sar
mov
and
mov
mov
add
push
(bad)
outs
inc
inc
fsub
jecxz
inc
xor
jl
loopne
push
push
mov
into
test
inc
adc
mov
aaa
push
mov
jp
cld
cdq
ror
pop
sub
daa
jbe
mov
sbb
push
add
xor
pop
pop
hlt
and
(bad)
jne
lea
mov
mov
ja
add
les
mov
push
mov
loope
ss
je
jmp
xor
ins
mov
clc
out
pop
and
loop
inc
call
ret
mov
pop
pop
pop
daa
add
test
nop
or
imul
mov
jmp
add
inc
ficomp
out
dec
aam
lods
adc
xchg
xchg
xchg
adc
adc
adc
or
mov
sub
dec
pop
dec
mov
adc
push
sbb
mov
cmps
or
and
adc
adc
mov
les
cmp
mov
jg
adc
adc
sbb
rcr
dec
mov
mov
jg
lea
sbb
pop
push
es
jg
cwde
pusha
fldcw
jg
adc
es
jg
ret
jmp
jg
or
cmp
jg
adc
cwde
adc
and
mov
xor
and
sbb
jo
aas
push
xchg
aas
push
sbb
ror
inc
and
je
daa
jno
dec
fild
sbb
(bad)
cwde
sub
push
add
mov
sub
mov
test
sar
or
or
mov
sbb
into
dec
pop
lahf
dec
aas
inc
imul
stc
lahf
nop
test
lea
inc
mov
and
icebp
and
icebp
popa
lods
add
xor
fnstcw
sub
rol
dec
push
mov
xchg
pop
dec
mov
mov
jne
hlt
inc
inc
add
xor
or
mov
lods
es
ror
xchg
pop
dec
sbb
sub
or
and
xchg
in
inc
and
fwait
imul
mov
ss
mov
(bad)
push
in
nop
push
cmc
iret
popa
loopne
add
sub
inc
clts
cmp
push
int
je
or
out
jl
iret
sub
or
and
stos
pop
xlat
cmps
inc
mov
adc
cwde
sub
and
adc
jl
call
daa
stos
ror
arpl
shl
ror
add
push
add
inc
arpl
xchg
cmp
sub
sub
rcr
add
das
push
cmp
clc
out
aad
(bad)
adc
or
push
and
and
mov
es
pop
ror
clc
test
dec
or
add
ret
dec
or
push
xor
cld
xor
imul
hlt
loopne
or
call
sub
pop
add
clc
jg
push
cld
or
lahf
fadd
or
add
clc
xor
cmc
loopne
nop
push
pop
enter
les
leave
jge
cmp
mov
shl
es
or
pop
shr
fcom
sub
and
aaa
add
adc
lods
or
adc
or
sbb
or
and
or
lds
std
push
or
add
leave
cmp
nop
stos
adc
add
jl
test
add
je
fadd
inc
sub
add
lock
cmp
arpl
loopne
test
fxch
clc
mov
inc
xchg
mov
mov
outs
add
and
nop
mov
push
lea
and
outs
xor
or
add
ins
dec
addr16
add
dec
sbb
fstp
cmp
nop
sbb
cld
push
xchg
push
pop
test
xor
fnstenv
mov
adc
enter
xchg
mov
pusha
dec
sub
dec
push
jg
add
or
add
add
fisub
sub
xchg
inc
mov
add
js
lods
mov
xchg
xor
cwde
inc
js
adc
hlt
mov
xchg
jns
rcl
das
arpl
and
fidiv
inc
or
imul
adc
lods
nop
out
sbb
and
lods
cmp
jge
inc
sub
xchg
out
sub
sub
xchg
out
sub
xor
xor
out
imul
imul
imul
inc
inc
xchg
add
and
inc
ror
inc
dec
dec
rcr
int
dec
push
dec
sbb
int
pop
dec
pop
and
inc
ror
dec
int
rcr
dec
push
and
cmp
sbb
int
cmp
and
inc
js
jl
adc
ds
test
push
xchg
retf
inc
mov
in
nop
pop
inc
nop
inc
sbb
xchg
adc
sub
mov
movs
cmps
xor
and
nop
lock
push
dec
fs
retf
adc
or
lods
dec
or
outs
lods
loopne
dec
sbb
mov
xlat
shl
add
xor
shr
inc
or
daa
bound
cmp
or
gs
ficom
and
xor
sbb
gs
inc
xor
xor
cmp
xor
inc
xor
xor
inc
xor
push
push
pop
and
xor
pusha
xor
xor
inc
xor
jo
js
xor
repz
add
test
sbb
mov
jne
imul
nop
xchg
sub
nop
sub
add
or
outs
add
hlt
(bad)
nop
ror
mov
and
xchg
or
jne
jmp
scas
lods
lahf
rol
add
mov
pop
daa
mov
sub
inc
repz
fimul
imul
push
movs
adc
ret
and
sbb
loopne
shl
in
clc
xor
das
lods
aad
push
push
xchg
popf
es
jo
xchg
push
cmc
mov
mov
pop
add
and
xchg
fnsave
add
jne
push
ret
call
das
xchg
push
inc
or
jg
sub
pusha
inc
je
mov
out
dec
or
arpl
and
fstp
sbb
or
push
add
sub
bound
jo
aam
test
ror
cmp
lods
jns
xor
ins
sbb
retf
add
inc
xchg
dec
nop
or
fs
or
or
or
add
mov
inc
mov
mov
inc
sub
push
mov
(bad)
enter
test
imul
xor
rcl
xor
push
xor
push
cwde
ffree
jecxz
movs
je
rol
pop
jle
adc
add
xchg
loopne
pop
inc
sub
add
add
shl
lahf
in
jb
push
add
clc
xchg
sbb
or
mov
xor
and
xchg
fnstcw
call
imul
fadd
mov
push
movs
cmps
jne
add
jno
xchg
shl
push
jno
ret
arpl
test
int
or
adc
xchg
inc
adc
and
inc
cmp
dec
call
call
sbb
mov
sub
sbb
int
sub
int
rcl
push
int
rcr
rcr
das
push
and
mov
jns
jmp
or
xchg
mov
mov
fidiv
dec
mov
lea
jecxz
mov
test
and
and
test
lea
pop
out
add
rcl
jmp
fsub
es
jb
sbb
mov
xchg
mov
in
in
mov
dec
in
lock
mov
adc
fild
sub
jl
cmp
adc
popf
push
imul
xor
inc
cmp
mov
icebp
cmp
in
cdq
jp
inc
outs
add
out
(bad)
sub
and
ret
fidiv
inc
retf
xor
mov
adc
and
enter
mov
lods
cmpps
sbb
nop
retf
test
and
xchg
and
and
test
loope
adc
push
test
or
jmp
adc
cdq
ret
xor
mov
sub
imul
pop
adc
cwde
sub
xor
mov
lods
push
stos
xchg
adc
mov
bound
(bad)
or
pop
adc
xchg
lods
push
or
inc
lods
xor
cmps
or
mov
or
daa
fadd
add
fnstcw
test
movs
adc
cmp
rcl
push
(bad)
sub
push
mov
xor
xchg
sub
or
push
xor
lods
mov
nop
pop
push
arpl
add
cmp
sub
push
es
icebp
lea
sub
inc
xor
or
sub
and
fwait
inc
sub
mov
pavgb
jb
std
ss
mov
rol
add
sub
cdq
mov
loope
or
mov
pop
repz
popa
or
(bad)
sbb
push
mov
pop
mov
and
cld
sub
pop
ror
hlt
test
shl
add
adc
popa
shl
mov
mov
jge
add
adc
rol
xor
sbb
sbb
add
stos
and
adc
cmp
movs
add
pop
mov
pop
adc
adc
mov
test
add
or
inc
or
in
test
inc
imul
push
xor
lds
fadd
sbb
ja
js
and
pop
bound
sbb
sub
je
dec
add
cmp
or
mov
rcl
in
sub
xchg
cli
inc
pop
loop
xlat
nop
lea
popa
adc
jne
jecxz
ins
and
add
lods
push
and
rcl
in
adc
dec
stos
xor
mov
xchg
xchg
test
or
pop
enter
pop
dec
sbb
inc
fbld
pop
clc
xchg
push
int
sbb
sub
jmp
cmp
mov
mov
test
jp
fadd
mov
pop
mov
fmul
push
add
or
push
push
jo
mov
mov
movs
adc
jae
and
or
cld
movs
mov
add
pushf
test
mov
sub
xor
sbb
mov
das
popf
adc
and
adc
add
scas
dec
rcl
shr
sahf
pop
add
bnd
stc
je
xchg
test
pushf
ret
add
inc
imul
cmp
(bad)
arpl
adc
jp
popa
loopne
clc
mov
mov
add
es
dec
mov
inc
mov
test
jo
ret
imul
add
push
das
sbb
bound
mov
sbb
adc
sbb
(bad)
out
adc
rol
sub
sbb
sub
or
clc
jmp
test
xchg
rcl
or
cmc
dec
xchg
or
sbb
int3
jb
inc
xchg
cmp
adc
adc
sbb
inc
jge
cld
add
jmp
inc
mov
adc
movs
aad
xchg
test
add
dec
push
rcr
pop
jne
sub
and
xchg
fistp
mov
xchg
rcl
mov
push
out
sub
fs
cmp
xchg
pop
rcl
and
adc
sub
sub
push
fst
retf
int
push
cmps
inc
sub
cmc
fidivr
cmp
lods
outs
popa
adc
aam
mov
js
adc
add
push
fst
retf
lea
in
add
push
adc
or
jne
add
cmc
and
or
and
inc
or
out
sbb
sbb
popf
xchg
mov
rol
xchg
test
in
or
push
cmc
adc
push
loope
jns
rol
adc
sti
aam
push
inc
or
andnps
sbb
pusha
inc
rdpmc
aaa
xor
and
inc
retf
or
lods
push
or
and
mov
sbb
sbb
dec
mul
shl
xor
test
(bad)
ins
add
or
adc
add
xchg
test
sub
push
icebp
imul
out
cmovnp
icebp
loopne
stos
dec
arpl
push
aas
pop
outs
pop
lds
xchg
inc
or
or
(bad)
in
test
xor
jmp
dec
popa
adc
in
xor
popf
movs
test
and
or
add
outs
xor
adc
push
inc
mov
dec
inc
pop
or
gs
or
sub
add
mov
sub
mov
movs
sbb
mov
xor
pop
jg
inc
sub
lds
push
lods
add
scas
pop
rol
and
add
mov
gs
call
jne
inc
inc
add
mov
and
mov
xor
push
(bad)
sub
leave
add
sub
xor
icebp
dec
add
adc
in
xor
inc
cwde
arpl
lds
pop
adc
jmp
js
test
jne
fist
sbb
mov
pop
enter
add
push
imul
xchg
push
xchg
jmp
movs
and
jne
mov
(bad)
dec
fild
nop
and
pop
arpl
adc
dec
mov
add
push
inc
bound
mov
push
xchg
ret
lods
add
jo
jne
xchg
jmp
test
push
test
in
enter
lods
adc
cmp
test
movs
fiadd
clc
(bad)
and
add
mov
inc
cwde
pop
ret
rol
lods
inc
or
pop
jmp
inc
add
xchg
push
add
add
enter
lds
sbb
int
mov
and
fsubr
dec
les
cmp
adc
cdq
push
add
cmps
shl
loope
test
mov
mov
dec
and
push
test
data16
repnz
sti
or
daa
mov
jmp
cmp
adc
jg
pop
xchg
mov
xor
mov
call
loop
inc
or
add
sub
lods
loopne
jle
adc
sar
ror
ret
rcr
and
popf
loope
dec
loopne
rol
inc
test
cdq
jmp
aad
fadd
aam
pop
inc
int3
lahf
mov
loope
call
or
movs
xor
vmovdqa
inc
aam
je
lods
mov
(bad)
and
xchg
add
xor
ja
xchg
test
sbb
and
sub
arpl
cmc
movs
repnz
dec
adc
mov
lock
mov
push
lock
loop
pop
sahf
fwait
jo
or
pop
lock
rcl
nop
sub
mov
add
mov
test
add
inc
loope
(bad)
aad
lea
je
jecxz
sti
ret
mov
adc
or
push
mov
xor
ret
mov
push
jne
popf
inc
cwde
and
xor
aas
inc
pusha
aaa
or
adc
jae
in
test
xchg
cmps
add
add
adc
add
std
ins
dec
and
jmp
and
daa
cmc
not
sete
sub
std
jbe
es
gs
leave
(bad)
call
cld
dec
adc
stos
push
or
popa
inc
mov
xor
cs
sub
ret
fwait
test
adc
jle
add
push
inc
add
and
or
test
mov
xchg
shl
test
daa
push
lock
mov
and
or
push
and
pop
lods
mov
in
mov
aam
rcl
xlat
jo
mov
rol
and
retf
mov
ror
out
outs
pop
imul
push
push
jmp
pusha
adc
outs
or
mov
stos
pop
nop
or
ror
(bad)
les
test
outs
shl
jnp
inc
cmp
or
sbb
dec
sbb
push
sub
sub
loopne
add
inc
les
mov
xor
loopne
pop
adc
or
es
add
and
stc
add
add
fimul
sbb
and
enter
out
pop
dec
enter
pop
add
jmp
add
add
add
pusha
xchg
dec
xor
mov
sbb
int
cmp
loopne
lods
retf
cmp
push
lahf
jmp
js
adc
loope
xchg
push
pop
cmp
or
in
xor
adc
addr16
and
dec
add
adc
push
scas
or
aam
sbb
mov
jg
enter
lds
mov
sti
popa
add
(bad)
in
or
sbb
and
cs
ror
clc
rol
add
xor
add
cs
add
cdq
sar
add
inc
arpl
and
les
adc
adc
js
xchg
lahf
fdiv
mov
adc
adc
sbb
cmp
fwait
xchg
retf
push
inc
ret
jno
fmul
jns
icebp
dec
hlt
mov
jno
mov
sbb
dec
icebp
ja
pop
shr
adc
and
(bad)
jmp
jns
or
into
into
or
sub
and
or
sbb
adc
sbb
adc
adc
inc
lods
add
inc
outs
mov
mov
gs
adc
adc
and
pop
push
cdq
rol
sti
or
sbb
inc
fist
add
cmp
shl
rol
push
js
cmp
daa
dec
adc
mov
inc
in
sub
push
inc
pop
xchg
dec
loopne
rcl
inc
sub
lock
mov
mov
sbb
and
out
imul
fild
loope
push
in
add
adc
in
imul
mov
and
jecxz
int3
test
pop
push
sbb
daa
mov
sub
(bad)
inc
push
bound
jb
adc
retf
dec
push
mov
push
adc
add
les
nop
test
leave
and
adc
call
call
mov
(bad)
sbb
ss
inc
inc
sub
fs
por
adc
push
or
imul
test
test
jns
push
test
pop
dec
inc
ins
push
or
inc
inc
dec
or
sbb
dec
loop
or
stc
adc
popa
xor
push
or
test
add
add
jno
popa
inc
or
ss
inc
inc
inc
and
and
and
test
inc
or
test
add
fs
clc
add
int3
inc
inc
or
add
nop
push
xlat
and
inc
and
inc
test
jae
mov
addr16
loope
inc
or
or
add
and
pop
adc
push
jmp
push
adc
and
push
inc
adc
jne
add
mov
pushf
inc
and
out
xchg
jnp
(bad)
cmp
push
mov
and
jnp
ss
push
fisttp
cli
dec
and
jo
lock
sbb
ret
mov
adc
cmp
mov
push
jo
mov
pop
pop
dec
mov
pop
jmp
mov
leave
or
lock
mov
popa
stos
dec
mov
(bad)
fcom
and
xlat
gs
or
test
or
adc
cld
adc
dec
jmp
enter
pop
pop
and
mov
sub
dec
cld
out
push
push
or
imul
xchg
xchg
fs
sbb
leave
call
sbb
push
push
leave
push
movs
lods
arpl
xchg
arpl
movs
lods
adc
xchg
inc
and
cmp
je
jbe
push
mov
leave
jp
or
mov
xchg
popa
je
jl
mov
mov
jg
mov
cmp
dec
adc
adc
dec
and
jp
es
jp
and
push
or
lock
adc
pop
dec
push
mov
dec
mov
add
mov
or
push
push
pop
pop
rcr
call
ret
daa
and
aas
sub
scas
push
push
and
or
pop
lea
or
adc
xor
mov
into
outs
adc
bound
mov
or
or
bound
push
or
adc
and
dec
adc
or
pcmpgtb
cld
pop
inc
adc
scas
and
inc
pusha
mov
inc
jnp
mov
addr16
push
sbb
pop
pop
mov
and
(bad)
scas
add
arpl
mov
mov
xchg
sbb
cmp
or
pushf
(bad)
pop
sbb
push
das
fld
pop
xchg
jno
mov
or
push
inc
cmp
mov
xchg
add
inc
enter
inc
push
nop
clc
mov
cmp
mov
xchg
int
nop
dec
lahf
test
pop
inc
pop
adc
mov
xchg
sub
aaa
inc
and
icebp
sub
or
sub
xor
iret
popa
in
fild
cmp
xchg
out
fadd
leave
inc
out
mov
mov
sbb
push
pop
arpl
or
pop
sub
div
call
mov
xor
aas
sub
jo
push
rcl
xor
je
and
or
iret
clc
addr16
sub
or
add
push
inc
das
pop
mov
or
adc
mov
sub
pop
mov
aaa
adc
mov
jno
add
lods
pop
in
inc
dec
xchg
scas
clc
mov
in
inc
mov
loopne
add
lock
sub
cmc
aam
les
fwait
mov
xchg
xchg
jmp
push
push
jge
(bad)
fimul
push
and
cmp
(bad)
adc
add
les
mov
jmp
and
jo
mov
mov
pop
inc
cmp
and
sti
adc
pusha
pop
xchg
pop
dec
push
or
add
rcl
pop
push
or
stos
pop
push
mov
adc
push
inc
inc
lock
in
fdivr
ret
lock
and
and
lods
pop
add
rol
cmp
pop
in
or
out
rcl
inc
xchg
xor
pop
js
xor
inc
shl
test
rcr
ds
xor
cld
shl
inc
inc
xchg
xchg
jno
push
jns
add
sbb
sbb
sub
cmp
push
push
call
dec
fmul
idiv
les
xor
xor
or
das
in
cmc
lea
xor
xor
sub
js
jge
ins
xor
inc
mov
jp
and
mov
inc
or
push
retf
outs
push
or
neg
pop
adc
dec
mov
sar
out
add
add
push
ret
pop
mov
pop
leave
mov
add
or
xor
push
aas
fwait
shr
dec
push
hlt
enter
adc
sar
push
popf
pushf
pop
sub
je
push
popf
ins
mov
bound
inc
rcr
and
dec
add
inc
and
clc
pop
inc
call
loopne
mov
adc
popf
xchg
sbb
jp
and
mov
imul
ret
inc
fwait
jmp
sti
ret
mov
div
je
adc
test
call
add
imul
shr
loopne
data16
push
add
(bad)
mov
icebp
and
fldz
jecxz
mov
fcom
arpl
jmp
jmp
or
lea
in
fisttp
mov
mov
lods
add
push
mov
movs
dec
push
push
or
adc
aad
sbb
jb
xchg
sar
mov
(bad)
lea
inc
dec
or
and
xchg
in
adc
es
xor
imul
push
xchg
stos
ds
fisub
mov
inc
sbb
adc
addr16
and
and
sub
dec
iret
inc
and
or
dec
and
jmp
sbb
call
cld
popa
outs
sbb
fs
retf
sbb
push
mov
xchg
xor
add
xchg
ret
cmp
in
mov
or
mov
pop
jmp
add
cmp
jge
or
nop
mov
mov
pusha
or
ss
lods
xchg
adc
scas
out
or
xor
loop
stos
jo
inc
or
add
xchg
test
add
push
loope
fwait
mov
dec
mov
xor
rep
or
dec
repnz
and
jecxz
shl
dec
jb
ret
loope
and
mov
aaa
leave
xchg
or
clc
mov
or
adc
sub
mov
ss
les
or
push
push
adc
stc
xchg
test
adc
add
xchg
dec
and
das
inc
or
lods
lea
imul
gs
adc
dec
sbb
xor
jmp
adc
test
mov
jns
xor
enter
jecxz
pop
and
enter
xor
xor
cmc
xor
jne
fdiv
and
ret
je
lock
or
sbb
xor
jecxz
or
popf
and
movs
and
pop
or
rcl
mov
sbb
popf
mov
cmp
cwde
pop
adc
push
xchg
mov
cmp
loope
dec
and
push
sbb
adc
popf
pusha
sbb
loope
dec
sbb
add
pop
push
jmp
mov
stos
and
shl
adc
mov
fstp
loope
jmp
(bad)
adc
xchg
pop
imul
xor
xchg
dec
adc
call
inc
ror
mov
jmp
inc
outs
sbb
adc
loope
jns
mov
add
mov
add
out
cdq
(bad)
add
xchg
add
add
add
adc
add
hlt
repz
sub
or
mov
push
inc
das
or
pop
xor
test
in
mov
dec
jge
jecxz
jecxz
js
je
sbb
push
or
xor
xchg
pop
jnp
retf
jnp
and
add
mov
xor
pop
das
and
cld
dec
lods
ins
cmp
inc
push
push
hlt
adc
cmps
ret
lods
sbb
sub
iret
repz
in
mov
aaa
lods
sar
push
movs
inc
repnz
in
inc
fwait
add
sub
sbb
aaa
and
adc
mov
adc
add
sti
and
(bad)
in
fsubr
inc
push
adc
or
push
pop
xor
sbb
adc
sbb
add
movs
sbb
pop
push
add
sbb
add
sbb
add
jl
and
xchg
mov
ins
fsubr
adc
inc
mov
fstp
popa
inc
sbb
add
mov
int
fcmovb
pusha
rcr
pop
mov
sbb
retf
mov
inc
mov
add
mov
out
sub
lods
dec
add
rcr
pop
sbb
fstp
push
inc
add
push
or
add
arpl
iret
es
mov
add
or
inc
add
call
jl
rcr
add
adc
dec
adc
clc
inc
call
pop
nop
inc
test
or
fldz
cmc
inc
shr
and
ret
sbb
and
out
mov
mov
xor
test
call
cmp
adc
(bad)
and
jmp
loope
or
sbb
and
pop
and
jmp
shl
or
inc
popa
call
call
nop
inc
aad
js
or
std
or
mov
push
inc
out
rcr
mov
pop
and
adc
jne
jmp
test
adc
lods
sbb
dec
adc
daa
cdq
and
test
test
retf
adc
add
jo
mov
gs
and
cmps
adc
mov
inc
and
dec
ret
mov
out
sti
mov
inc
jle
jmp
jo
call
and
pusha
call
mov
and
ret
push
aam
rcr
add
jbe
mov
or
mov
xor
inc
es
sub
mov
rcr
add
lea
rcr
mov
pop
iret
inc
call
push
mov
mov
pop
add
mov
or
cmps
fld
cli
jne
inc
jg
jl
jg
mov
fnstcw
xchg
add
dec
scas
adc
inc
aam
and
add
loopne
pop
mov
cmp
and
sbb
in
or
aas
pop
test
aam
inc
ffreep
or
adc
ja
dec
out
push
aas
add
scas
rol
loope
shl
push
hlt
xlat
call
scas
push
loope
jmp
adc
adc
nop
into
or
loope
or
add
cdq
les
or
loope
inc
and
mov
sbb
push
out
popf
sbb
leave
pop
push
push
(bad)
cmp
jmp
das
sbb
xchg
sahf
push
push
mov
lods
ins
pop
out
test
push
lahf
fisttp
cld
movsx
adc
fistp
loop
mov
dec
fxam
and
cwde
xchg
sbb
mov
or
retf
clc
fldcw
jne
inc
or
mov
sub
hlt
fwait
test
xor
adc
sbb
retf
xchg
adc
sub
nop
bound
pop
or
fldpi
cmp
mov
loopne
aas
xchg
or
xchg
jns
call
jo
mov
pop
cmp
in
jne
mov
or
inc
imul
xor
mov
pop
add
and
pop
cmp
movs
or
sub
mov
les
shl
inc
and
and
sbb
(bad)
stos
ret
cdq
ret
mov
popf
enter
jo
mov
mov
call
lods
test
stos
add
add
ror
add
jns
push
rol
imul
sbb
add
clc
lea
outs
lods
clc
clc
mov
cmp
sub
adc
xchg
fnstcw
cmps
call
adc
or
adc
and
lea
jmp
outs
sar
mov
sbb
inc
(bad)
test
cmp
adc
jg
call
lahf
sbb
das
outs
fmul
(bad)
popa
pop
shl
push
pop
jnp
test
hlt
and
(bad)
movs
les
xchg
gs
sub
or
add
jmp
jb
or
or
dec
adc
les
xor
xor
jmp
xchg
mov
mov
or
push
test
push
mov
cdq
fisttp
jecxz
push
add
and
jmp
popa
mov
xchg
inc
add
push
lods
and
(bad)
and
leave
test
inc
push
adc
mov
dec
cmp
sub
xchg
and
inc
in
mov
push
xchg
aam
pop
imul
pusha
adc
mov
aam
call
jmp
retf
pop
ret
scas
imul
imul
icebp
sqrtps
or
jnp
and
mov
sbb
lock
(bad)
and
mov
dec
(bad)
jmp
push
nop
cmp
or
push
adc
adc
mov
aam
jo
jno
jmp
inc
pop
and
test
sub
leave
adc
adc
aad
lock
xor
pop
popa
add
jmp
push
popa
jnp
je
add
push
nop
sub
xchg
cmc
mov
sub
loopne
mov
inc
ret
and
add
mov
test
push
or
int3
sbb
adc
dec
jge
jo
pop
and
mov
ss
sub
bound
push
pop
(bad)
pushf
test
cmp
and
add
test
dec
or
dec
dec
cmp
rcl
fild
inc
jb
xor
in
add
pop
sub
dec
fidivr
adc
and
add
add
adc
test
xchg
jp
mov
xchg
jmp
fs
adc
jmp
fidivr
test
fwait
mov
xchg
cmc
out
mov
pop
sbb
add
sbb
ins
adc
xor
add
inc
or
clc
addr16
arpl
push
les
ss
cmps
fstp
loop
mov
pusha
dec
mov
rcr
aas
add
aam
pop
in
pop
and
inc
clc
xchg
adc
inc
mov
dec
xchg
cli
call
cmp
mov
aam
aam
aam
not
nop
dec
mov
xchg
cmps
add
mov
fwait
call
mov
ret
jne
arpl
jl
add
ret
js
jmp
loope
cdq
jae
xchg
rol
pop
imul
lods
push
xor
mov
or
or
rcr
inc
or
or
pusha
push
push
je
jg
scas
dec
rcr
pop
rol
mov
sub
popa
inc
pop
ins
add
bound
push
add
ins
and
icebp
lock
pop
jmp
fimul
arpl
rcl
add
test
push
pop
sbb
cmp
scas
xchg
or
adc
pop
cmp
inc
mov
ins
sbb
add
outs
xchg
mov
iret
or
bound
movs
dec
cmp
pop
movs
mov
enter
movnti
add
aaa
dec
jmp
ins
loopne
inc
test
stc
sub
push
loope
add
inc
jo
sub
lea
mov
rol
jo
test
popa
cmp
jae
stos
add
sbb
or
ficomp
div
loope
cmp
sbb
jge
lock
and
data16
push
lahf
push
jmp
test
ss
es
xchg
dec
pop
push
adc
inc
adc
arpl
push
sbb
mov
inc
out
cmp
and
add
test
adc
mov
dec
test
enter
adc
dec
xchg
pop
pop
sub
dec
pop
sub
sub
stc
xor
(bad)
mov
cmp
aaa
pop
jg
pop
je
add
add
das
std
ret
push
cmp
push
cs
push
sub
test
bound
dec
hlt
cld
mov
(bad)
jmp
pop
rol
and
add
or
sub
jmp
or
mov
xor
and
bound
cwde
lods
dec
or
pop
cmp
add
pusha
xlat
retf
add
or
pusha
fadd
nop
(bad)
cmp
xor
pop
push
add
fwait
xor
arpl
loopne
sub
adc
jecxz
pop
xor
and
inc
or
mov
mov
inc
or
loope
inc
push
sbb
je
ins
and
nop
dec
push
jae
xchg
mov
and
test
jmp
cmp
xor
movs
ja
adc
ja
jbe
enter
pusha
mov
mov
pop
out
dec
adc
or
je
ja
ret
adc
sub
cld
cmc
and
cmps
pop
mov
mov
loop
inc
add
mov
add
push
and
or
jle
pop
hlt
or
mov
int
add
hlt
int3
and
adc
je
or
pushf
mov
je
xor
cmp
xor
cmp
dec
nop
pusha
addr16
pop
jae
dec
cdq
scas
into
nop
cmp
pop
and
rol
mov
mov
or
lds
dec
call
xor
ret
sbb
test
and
nop
scas
cmp
xor
or
dec
adc
xchg
inc
sbb
pop
mov
mov
nop
ins
add
add
inc
or
je
adc
pop
jne
fadd
jnp
mov
loop
add
mov
push
sbb
aam
fwait
mov
xchg
or
pusha
xor
test
adc
pushf
add
and
sub
jmp
pop
xor
push
hlt
out
and
mov
rol
and
or
or
add
sub
aas
les
add
loopne
mov
loope
or
out
inc
xchg
sar
and
dec
jne
out
inc
repnz
je
inc
cmp
cli
adc
xlat
adc
xlat
sar
adc
aad
add
inc
sbb
mov
inc
jecxz
pop
sub
sbb
dec
mov
inc
movs
(bad)
xor
or
lea
add
mov
adc
jg
mov
mov
add
cmps
inc
fld
pop
dec
push
mov
in
mov
pop
xor
cdq
(bad)
leave
push
fistp
cmp
push
adc
jo
shl
push
inc
jmp
and
imul
pop
rcl
xor
cmp
iret
cmp
cwde
cmp
add
mov
aas
outs
and
add
(bad)
cdq
and
aam
jne
stos
adc
push
or
test
mov
in
pusha
and
test
aam
mov
dec
sbb
inc
in
push
or
lods
mov
inc
push
pop
shl
fcmovnb
inc
(bad)
and
jp
test
mov
lods
mov
jo
lock
out
or
push
push
or
mov
mov
inc
inc
push
lock
push
mov
adc
aas
pop
bound
xchg
xor
add
clc
adc
adc
jne
mov
popa
adc
sub
cwde
int
fcom
mov
ss
das
test
inc
(bad)
cmp
jl
sub
dec
push
mov
ret
nop
aam
add
jle
hlt
add
add
or
mov
jl
mov
jb
sbb
hlt
nop
push
cld
jmp
ret
xor
test
test
sbb
lds
or
jno
or
or
mov
ror
inc
jl
or
fistp
(bad)
pop
or
or
ins
xor
pop
or
or
jecxz
cmc
mov
jmp
or
or
iret
fdiv
xor
clc
adc
xor
adc
sbb
pop
scas
inc
inc
clc
adc
jmp
arpl
xchg
xchg
cmp
ficom
mov
or
mov
cdq
popa
and
mov
(bad)
mov
icebp
(bad)
sar
and
and
test
pusha
ins
adc
xor
dec
or
gs
xchg
inc
jmp
cmp
dec
push
fdivr
sub
les
cwde
and
cld
aas
add
xchg
mov
adc
xchg
ret
adc
pop
and
add
pop
push
add
pop
sbb
xor
and
in
push
pushf
push
pusha
inc
in
lods
inc
jb
rol
adc
adc
aaa
jge
enter
(bad)
add
xor
sbb
shl
xor
ret
pop
pop
pop
mov
mov
jno
or
clc
adc
add
les
dec
iret
adc
aas
retf
and
cmps
(bad)
mov
xchg
or
mov
ret
and
lahf
and
sbb
ror
add
jne
dec
and
fiadd
cmp
xor
(bad)
(bad)
cmp
xchg
or
fdiv
adc
test
mov
jle
mov
sub
or
nop
jno
jecxz
jo
daa
mov
add
cmp
inc
add
rcl
cmp
sub
pop
and
mov
add
ds
mov
jle
add
clc
jecxz
push
movs
add
xchg
sbb
pop
cmp
pushf
cmp
xor
(bad)
cld
lahf
ret
xchg
aad
retf
sbb
add
cld
es
ret
jmp
mov
mov
adc
inc
shl
loope
mov
inc
xchg
inc
sbb
cmp
jne
aam
add
jne
nop
sbb
clc
adc
jmp
icebp
sbb
adc
fs
mov
xor
add
mov
pop
popa
mov
pop
push
mov
push
out
jmp
sub
cmp
dec
pop
mov
add
and
stc
clc
pop
je
inc
inc
pop
and
(bad)
shl
clc
stc
in
or
and
or
push
xchg
mov
inc
or
sbb
icebp
add
pop
ds
and
sbb
push
jno
sub
dec
(bad)
nop
(bad)
pushf
dec
or
inc
aam
add
lea
pop
bound
inc
or
push
mov
lahf
adc
adc
adc
adc
cmp
mov
imul
add
ret
ret
mov
push
imul
je
add
mov
pop
mov
inc
int3
push
dec
pop
xor
inc
inc
mov
stos
imul
ss
ins
loopne
loope
adc
and
rcl
hlt
sub
and
fisub
mov
jmp
jmp
adc
cmp
cdq
sub
cmp
ins
retf
fsub
or
push
dec
adc
mov
and
retf
cdq
pop
mov
adc
loopne
adc
add
add
fcomp
cdq
retf
sub
add
nop
and
push
add
imul
popa
cmp
fcomp
inc
jne
or
add
pusha
in
fld
clc
mov
jne
and
push
sub
pop
sbb
xor
push
inc
sub
pushf
(bad)
ja
xchg
inc
sbb
scas
or
add
icebp
mov
pop
inc
push
push
fucom
shl
sti
adc
add
push
aaa
popa
loop
xor
ja
adc
push
adc
fmul
fimul
add
ds
test
and
adc
les
inc
hlt
jmp
test
jnp
cmp
loop
(bad)
js
mov
fild
push
and
inc
jbe
inc
mov
push
jg
hlt
adc
mov
adc
inc
ret
or
jl
add
or
add
aaa
jae
sub
aaa
sbb
pop
lock
lock
dec
aaa
or
pusha
and
popf
and
cmp
xor
out
sub
test
mov
push
sub
xor
aas
or
fstp
or
push
movups
movs
imul
pusha
xchg
jmp
mov
sbb
mov
fwait
cs
add
jg
test
dec
inc
cmps
or
xor
mov
shl
adc
hlt
inc
rcl
mov
fsubr
les
daa
sbb
xor
sbb
mov
mov
aaa
or
sbb
push
movs
pop
leave
pop
pop
ret
mov
cmc
jl
mov
fstp
imul
or
adc
ret
pop
fist
add
pop
sahf
push
fist
lods
mov
clc
mov
sub
dec
dec
adc
and
jns
les
data16
shr
lock
xchg
leave
inc
or
and
and
xchg
pop
and
adc
daa
push
sbb
movs
mov
jge
popa
pop
mov
lahf
gs
inc
xchg
and
xor
pop
jns
call
sub
jmp
lahf
cmp
or
pop
xor
loope
popf
aaa
mov
dec
sub
jl
jne
and
or
mov
mov
push
xor
xchg
rcl
mov
repz
jecxz
and
sbb
xor
or
add
push
fcomp
inc
mov
je
(bad)
in
rcr
imul
inc
add
addr16
and
lds
jg
inc
mov
fwait
xchg
hlt
or
add
mov
and
pop
sbb
lods
aam
test
jne
aas
mov
cld
mov
fcomp
mov
mov
lahf
sub
xchg
es
adc
iret
shl
push
rol
les
sbb
repz
push
sub
ds
enter
retf
aas
imul
retf
in
or
gs
adc
sbb
mov
adc
adc
sbb
jmp
sbb
inc
add
fcom
inc
add
and
push
popa
mov
inc
adc
jo
lods
addr16
push
outs
push
xchg
movs
xor
push
movs
jo
mov
js
push
rol
add
xor
dec
adc
dec
push
cmc
stc
jne
(bad)
sub
cmps
adc
test
adc
addr16
xchg
inc
or
push
add
and
call
add
lock
xchg
or
cli
out
add
xor
dec
add
add
je
int
push
sbb
mov
nop
mov
and
enter
ins
inc
xchg
mov
lods
inc
or
outs
adc
clc
lods
dec
sbb
int3
popa
inc
(bad)
imul
(bad)
mov
push
rol
adc
add
dec
push
xchg
mov
mov
call
add
sbb
ds
mov
scas
imul
push
sbb
(bad)
jnp
enter
xchg
mov
loopne
mov
movs
mov
mov
dec
je
jg
mov
and
inc
stos
outs
cmp
dec
add
mov
dec
loopne
add
mov
push
les
or
sbb
and
and
frstor
leave
sbb
dec
pop
add
nop
mov
retf
and
inc
mov
jp
mov
xor
lahf
and
mov
jp
bound
xchg
add
xor
sahf
mov
adc
ret
sub
(bad)
aas
jne
xchg
sub
mov
add
rol
push
dec
mov
mov
pop
mov
mov
push
mov
test
mov
lods
dec
mov
add
popa
cmp
xchg
or
das
jmp
es
lods
mov
arpl
pop
mul
test
dec
dec
test
pop
add
sub
push
push
inc
mov
inc
mov
inc
mov
xbegin
sbb
nop
fcom
jecxz
and
dec
ret
mov
cs
pusha
pop
movs
call
xchg
clc
jb
add
push
sbb
mov
loope
inc
sbb
sub
mov
mov
ins
ins
cmp
sbb
mov
(bad)
jns
or
dec
sbb
dec
lock
jne
add
int
or
dec
fld
mov
cli
mov
lock
adc
add
push
aas
inc
add
and
data16
stos
push
cmp
jmp
push
or
jmp
mov
jmp
sbb
loopne
and
jmp
jle
fsub
fdivr
fdivr
push
cmp
psubusb
in
adc
nop
movs
mov
lods
add
jmp
cdq
dec
sbb
(bad)
repz
lds
mov
cmp
push
inc
or
add
test
fwait
(bad)
xchg
ror
push
mov
rol
adc
popa
(bad)
xchg
mov
ins
and
cld
sbb
pop
test
pop
or
sbb
xchg
scas
dec
imul
xor
and
adc
lea
dec
test
jae
movs
fdivr
xchg
and
test
push
test
loopne
mov
fdivr
cs
mov
repz
mov
xor
mov
pop
push
repnz
or
xor
je
xor
xchg
add
xor
inc
enter
mov
popa
add
mov
xchg
lahf
push
lahf
cmp
fs
in
fcmovne
pop
fs
push
push
bound
pop
mov
jb
pop
ins
jns
xchg
pop
xchg
lahf
push
mov
cmp
or
xor
push
inc
pop
pop
pop
pop
mov
vmwrite
pop
pop
push
or
or
bound
sub
lahf
(bad)
or
add
xchg
ret
xchg
sub
add
(bad)
inc
adc
ss
and
lahf
xor
or
add
pop
mov
pop
add
cmp
arpl
push
add
mov
xchg
mov
mov
pop
rol
jge
xor
enter
cmc
cmp
std
movs
inc
enter
adc
dec
enter
addr16
or
aaa
and
mov
enter
addr16
dec
xor
dec
xor
or
and
xchg
xchg
and
lahf
ror
js
push
adc
enter
xor
mov
jecxz
pop
fs
test
push
push
xchg
mov
jne
test
pop
and
add
lahf
sbb
push
or
adc
xor
sub
or
test
cmps
enter
test
adc
push
cdq
and
mov
(bad)
dec
test
repnz
mov
test
mov
outs
sub
inc
lahf
(bad)
fisubr
leave
stc
fs
adc
xor
mov
lea
lahf
dec
dec
xchg
popa
mov
mov
sbb
dec
jle
lahf
push
out
mov
or
inc
lahf
dec
mov
add
lea
adc
and
lahf
ror
add
or
popa
fs
xlat
mov
and
test
sub
add
loope
adc
and
rcl
loopne
adc
aam
das
mov
xor
and
and
fdiv
adc
fucom
push
xor
or
fistp
int
and
bound
repz
xchg
xor
(bad)
enter
inc
pop
xor
pop
les
push
sahf
out
jnp
push
dec
push
pop
addr16
push
enter
pop
jecxz
test
gs
pusha
scas
pop
and
add
jecxz
lahf
push
cmp
rcl
add
push
loopne
and
or
test
xchg
(bad)
mov
or
or
pop
repz
loop
mov
mov
popf
mov
or
dec
es
cdq
dec
dec
dec
int
add
(bad)
add
fcomp
fdivr
add
aam
push
aam
mov
mov
mov
stos
frstor
imul
or
aaa
inc
fidivr
or
inc
add
push
mov
xchg
test
xor
dec
pop
hlt
aas
and
nop
and
sbb
aas
(bad)
dec
popa
vmwrite
and
adc
lock
and
or
mov
sbb
test
outs
inc
mov
or
outs
and
fs
add
enter
dec
sbb
xchg
add
sbb
xchg
pushf
or
pop
sbb
xchg
sbb
cmp
dec
in
and
push
call
ret
gs
or
in
jp
mov
sbb
sub
inc
call
dec
xor
pop
xor
pop
and
mov
and
arpl
xlat
loopne
int3
jno
test
cmp
or
xor
aam
fldenv
pop
dec
sbb
adc
push
xor
cld
jne
or
add
fisttp
clc
add
and
add
add
fcomp
stc
cmp
pop
cmps
ds
push
lds
cwde
scas
mov
add
imul
adc
dec
mov
pop
or
clc
outs
les
push
mov
push
pop
fild
jmp
sbb
push
and
test
xor
(bad)
cmp
mov
inc
push
xor
fldcw
sbb
imul
pop
fucomp
push
fdivr
mov
add
push
push
adc
ficom
ds
sbb
push
xlat
dec
and
mov
cmp
or
or
mov
and
popf
(bad)
in
inc
out
shl
mov
add
adc
inc
add
ret
sub
mov
mov
lahf
mov
(bad)
and
ret
clc
dec
lock
lods
xchg
ins
les
xor
pusha
cmp
fdiv
ss
dec
pop
mov
loopne
call
sub
imul
adc
cmp
sti
pop
mov
in
dec
mov
mov
loopne
das
adc
pop
push
push
push
sub
loope
call
mov
push
cmc
push
and
dec
or
int
aas
mov
dec
nop
add
nop
add
(bad)
pop
lea
or
call
cmp
in
popf
xchg
xor
and
xor
pop
imul
jl
or
clc
movs
mov
mov
inc
lock
push
inc
dec
out
adc
shl
sub
or
sub
jnp
cld
daa
popa
pushf
cmp
push
mov
scas
lock
ror
and
inc
test
data16
ja
lea
mov
inc
and
add
mov
add
mov
mov
push
xchg
fdiv
ja
adc
pop
ror
sub
push
mov
imul
mov
dec
push
push
push
pop
pop
pop
inc
inc
adc
loopne
and
test
add
fs
(bad)
loop
es
fcom
pop
sbb
test
and
dec
fstp
mov
or
scas
or
shl
sbb
xchg
push
or
jl
or
scas
(bad)
jmp
and
or
lock
adc
scas
rcl
fs
push
mov
clc
pop
call
push
and
push
fs
xchg
adc
inc
mov
xchg
add
nop
nop
lock
mov
push
xlat
test
sub
adc
push
imul
push
jb
sub
pop
adc
sbb
push
loopne
mov
add
stc
data16
mov
pop
and
dec
pop
rcl
lods
aas
add
xor
mov
imul
inc
jmp
cmp
movs
and
jns
xor
xor
add
adc
add
aam
(bad)
pop
dec
adc
pop
push
fs
adc
push
adc
ret
cmp
or
cmp
push
sub
mov
mov
push
rcl
or
out
add
push
pop
prefetcht0
ffree
mov
adc
rol
dec
jmp
mov
jg
push
push
jne
mov
mov
mov
mov
mov
and
push
push
xchg
mov
add
xor
and
or
add
pop
adc
add
jge
fcomp
sub
add
fs
xor
clc
push
and
add
aam
clc
gs
push
loopne
xchg
inc
mov
cdq
jp
push
and
dec
retf
add
inc
cs
pop
cld
pop
or
pop
dec
jae
leave
pop
add
fstp
repz
xchg
rcr
je
test
adc
jo
pause
xor
cmp
ins
jmp
add
fisttp
dec
fdiv
inc
dec
cld
jg
and
add
shl
sbb
xor
or
or
call
outs
ret
and
or
popf
les
cwde
or
enter
jb
add
mov
and
and
sbb
rcl
es
add
jmp
adc
lea
sar
daa
popa
rcr
movzx
cmp
sbb
sbb
mov
push
add
das
xor
adc
adc
jbe
lock
gs
add
add
push
jae
inc
sbb
movs
sbb
add
inc
ss
daa
dec
stmxcsr
xor
ss
adc
and
sahf
push
inc
mov
mov
loop
sbb
sub
cwde
cmp
test
out
jne
add
push
cmp
xor
cmc
call
je
add
call
(bad)
dec
and
sub
and
add
add
fadd
imul
inc
push
cmp
add
add
sub
pop
jae
cmp
inc
(bad)
xchg
dec
cmps
inc
jno
pusha
add
fwait
ret
lock
je
adc
out
outs
add
adc
pop
cmps
pop
pop
push
cld
lds
add
and
pop
pop
and
xor
add
or
add
mov
pop
add
add
ficom
and
xor
call
or
add
add
aaa
and
and
add
or
pusha
pusha
add
xchg
sbb
jmp
add
sbb
rcl
add
(bad)
xchg
adc
inc
lahf
add
add
and
push
imul
(bad)
and
fcomp
and
mov
and
shl
mov
mov
xor
adc
xchg
aam
inc
xor
push
and
(bad)
es
jl
pop
xchg
cmps
jl
dec
sbb
xchg
add
add
inc
ja
add
pop
in
and
mov
or
add
js
cmp
jns
mov
sub
call
sub
mov
call
mov
ffreep
sbb
inc
rol
pop
enter
sbb
dec
sub
adc
push
xor
mov
cdq
out
jmp
pop
xor
test
into
jo
call
dec
sbb
mov
cmp
(bad)
mov
mov
jnp
jle
push
adc
jae
cmc
aaa
adc
movs
jmp
mov
dec
push
dec
cld
jge
pop
ins
sbb
jecxz
dec
and
das
or
inc
pop
inc
cld
xchg
and
nop
or
or
in
mov
mov
pop
and
nop
pxor
mov
sbb
jmp
xor
pop
popa
pusha
rol
pop
das
cmp
repz
or
dec
out
dec
xor
hlt
out
and
and
inc
sbb
add
sbb
clc
lods
jnp
das
sub
ja
add
or
cmp
xor
jg
test
or
or
pop
xor
inc
dec
or
outs
and
leave
retf
shr
inc
sub
and
inc
mov
or
pop
and
jne
add
cdq
pop
xchg
jmp
pop
adc
add
pop
pusha
inc
pop
pop
jne
out
add
pop
or
int
add
mov
mov
push
cmp
loopne
cmp
rol
fistp
dec
scas
sbb
test
inc
nop
scas
sbb
movs
xor
shl
fisttp
sbb
adc
dec
pushf
add
aad
fneni(8087
sub
push
mov
push
or
jecxz
dec
iret
in
in
xor
inc
jmp
cmc
loopne
mov
push
fiadd
in
ret
push
pusha
dec
in
in
cmp
add
loopne
loopne
inc
sub
in
sub
dec
loopne
in
sbb
inc
xchg
in
push
add
or
inc
call
arpl
inc
xchg
bound
int3
sbb
ins
xchg
or
outs
jge
cmc
(bad)
or
stos
xlat
inc
or
movs
mov
inc
shl
fucomip
clc
or
jmp
imul
cmp
xchg
rol
fistp
add
or
call
xchg
mov
push
ins
push
fadd
(bad)
stos
mov
mov
(bad)
lods
dec
lods
adc
jae
cwde
es
add
or
inc
and
clc
push
fimul
push
cmps
add
(bad)
xchg
lods
inc
adc
daa
sbb
addr16
cmps
test
sbb
adc
test
cmp
ret
dec
adc
jo
cmp
(bad)
movs
lahf
aam
sbb
dec
inc
and
mov
je
mov
packsswb
or
push
adc
and
add
adc
es
mov
lahf
adc
xchg
lods
or
je
xchg
and
pop
mov
inc
mov
mov
cs
sub
or
mov
je
adc
jns
outs
xor
out
push
cmp
ja
add
cmp
adc
lahf
xor
hlt
(bad)
cmp
or
pop
adc
or
push
aam
mov
mov
pop
push
mov
fimul
xchg
sbb
adc
push
or
mov
xchg
(bad)
dec
push
mov
sub
lods
imul
add
rcl
pop
and
lea
mov
clc
cmp
jne
push
and
inc
sub
add
das
mov
lds
push
or
clc
stos
adc
sbb
repnz
xor
pop
or
dec
dec
sbb
sub
cmp
jb
pop
inc
les
inc
push
cmp
jb
push
je
inc
cs
and
mov
mov
adc
mov
and
add
aas
ins
mov
push
xor
idiv
(bad)
je
adc
fwait
and
mov
push
int3
or
call
dec
inc
push
mov
or
fwait
lock
ins
popa
xchg
cmps
outs
jne
je
pop
xor
xor
fidiv
sti
sub
sbb
ret
imul
ror
dec
mov
fld
pop
push
and
sti
push
push
call
xor
xor
fs
mov
mov
xor
into
adc
test
xchg
movs
adc
cli
sbb
dec
imul
test
addr16
in
cmp
fadd
xlat
nop
lock
cmp
ja
add
cmp
call
cld
lahf
jne
in
sub
add
jl
cmp
sub
hlt
lea
loopne
mov
mov
pop
sub
or
ins
push
test
and
push
push
loop
push
add
in
ds
mov
sti
cmp
jbe
cmp
jb
rol
in
ins
mov
cmps
push
and
push
push
jo
mov
lahf
fwait
dec
les
xor
dec
push
push
mov
test
sub
shl
add
mov
push
cwde
add
add
sub
mov
add
gs
stos
out
mov
sar
test
sbb
jne
pop
jns
icebp
cmp
push
adc
stos
rcr
sahf
out
bound
lock
push
push
inc
cwde
mov
add
or
xchg
pusha
fidivr
test
xchg
xor
pushf
xchg
adc
loope
push
nop
cmp
sbb
pop
test
inc
bound
in
dec
fcom
outs
pop
inc
push
sahf
dec
mov
xchg
jne
adc
add
jb
cmp
mov
sbb
push
mov
inc
xor
mov
push
fist
shl
loopne
pop
add
mov
cmp
add
ret
loope
sbb
xor
inc
xchg
jl
pop
imul
inc
and
or
hlt
xor
add
xlat
cdq
pop
dec
call
pop
xor
inc
pop
mov
or
dec
sub
mov
out
mov
pushf
xchg
sub
pop
dec
pop
ror
aaa
rcr
inc
jecxz
loop
ins
aad
sar
mov
jns
xchg
adc
mov
loop
pop
loop
or
in
stos
jg
in
add
sub
jg
jg
pusha
cmp
loopne
cmp
and
js
add
mov
popa
loope
(bad)
sub
les
dec
ins
xchg
mov
push
and
adc
mov
push
inc
adc
pop
xor
cdq
(bad)
enter
cdq
shl
push
sub
push
xchg
or
add
dec
in
adc
in
popf
or
cs
push
or
cmp
out
xchg
jmp
push
add
into
ins
jmp
xor
xor
mov
inc
pop
sti
jg
inc
jmp
loopne
and
xor
cmp
sbb
pop
mov
push
jne
aam
fwait
cmp
ficomp
mov
pop
sbb
rcl
sbb
ret
mov
sub
xor
mov
mov
xor
and
add
dec
cli
call
sub
jne
lds
(bad)
xor
les
push
inc
and
adc
ins
jmp
add
sbb
mov
adc
aad
mov
sbb
push
stos
push
pop
ss
pop
popa
adc
arpl
sar
mov
add
popf
imul
stos
push
adc
adc
inc
xchg
(bad)
add
push
xchg
pop
aas
jae
push
push
or
and
(bad)
jge
stos
mov
mov
mov
inc
(bad)
add
movs
nop
mov
movs
cmp
cmp
test
fisttp
mov
jl
mov
gs
push
loopne
push
ja
add
nop
sbb
cmp
clc
mov
test
mov
push
adc
lock
pop
into
or
add
test
mov
nop
lods
fwait
sub
stos
js
and
dec
add
sub
dec
xor
popf
lea
add
movs
mov
in
rcl
dec
sbb
retf
rcr
gs
loope
jg
inc
sub
call
or
xchg
stos
popf
pop
xchg
cmp
sub
ja
ret
push
xchg
out
add
jmp
(bad)
loopne
and
mov
push
adc
mov
sub
pop
and
or
fild
pop
xor
das
sbb
mov
add
scas
test
(bad)
leave
imul
or
dec
adc
sbb
outs
sbb
cmp
dec
push
or
xchg
icebp
rol
push
push
xchg
inc
dec
sbb
inc
aaa
push
push
lods
jnp
xchg
or
mov
push
mov
xchg
push
xchg
inc
adc
add
dec
aaa
cmc
lea
fisttp
fisttp
sbb
push
or
ret
lahf
push
mov
pop
test
push
in
sbb
inc
cmp
movs
xor
pop
cmp
nop
or
dec
push
or
les
jge
and
pop
inc
addr16
inc
inc
pusha
iret
inc
clc
loopne
mov
and
nop
xchg
xor
add
rcr
dec
hlt
xor
imul
(bad)
test
dec
fwait
das
fldenv
or
mov
sub
fcomp
jge
or
fwait
pop
jmp
mov
dec
dec
mov
or
fucom
or
mov
and
movs
or
jmp
or
add
popa
mov
imul
sbb
int
nop
outs
cmp
(bad)
jo
test
cli
jb
adc
jl
pop
mov
fisttp
or
ja
ds
test
sub
xchg
push
aam
and
sbb
int
bound
or
(bad)
fistp
pop
pop
lea
mov
sbb
xor
aam
push
std
pop
clc
jg
(bad)
lock
and
ins
ins
outs
arpl
popa
sbb
push
mov
jae
add
xchg
dec
add
xor
add
adc
mov
enter
mov
cmp
sbb
add
rcl
lahf
rol
fwait
adc
pusha
xlat
add
ins
sti
push
int3
call
push
(bad)
imul
mov
push
inc
mov
arpl
fwait
cmp
and
sbb
ins
sub
jmp
retf
mov
pop
mov
loopne
(bad)
hlt
push
jmp
bound
add
popf
and
push
xchg
dec
sbb
mov
push
ja
mov
shr
in
jno
adc
push
mov
sbb
mov
add
push
jbe
and
mov
xchg
dec
out
call
stos
xor
adc
cmp
out
out
xchg
sub
or
mov
mov
or
push
sbb
pushf
or
jo
fucomi
mov
pop
jmp
inc
or
adc
lea
jg
daa
add
(bad)
push
adc
dec
and
xor
and
adc
and
adc
aas
and
popa
sahf
pop
adc
or
cmp
dec
or
sub
mov
neg
(bad)
data16
or
lock
imul
or
les
inc
ret
int3
xchg
xchg
retf
xlat
jae
or
rol
ror
xchg
clc
hlt
lahf
xor
or
imul
add
retf
mov
sub
pop
and
test
xchg
sub
or
call
cdq
and
adc
jmp
dec
sbb
mov
fwait
clc
dec
add
add
add
mov
mov
adc
dec
popa
int3
xor
rol
and
imul
loopne
adc
cmc
cmp
add
cmp
imul
xor
inc
fwait
add
cmp
shr
daa
sar
lods
sbb
imul
xor
mov
mov
dec
mov
jmp
and
mov
mov
pop
push
mov
add
ret
sbb
mov
xor
lods
mov
mov
test
arpl
sub
sar
sub
pop
jne
ret
inc
add
and
jns
rol
fcom
pop
xor
push
mov
ss
call
je
(bad)
mov
xchg
add
xor
mov
dec
add
stos
and
sahf
xor
fadd
nop
add
jb
cmp
push
mov
add
fistp
cmp
(bad)
mov
push
(bad)
movs
inc
movs
inc
mov
adc
mov
dec
cmp
fldenv
add
dec
ins
mov
loope
pop
dec
inc
add
cmp
dec
ficomp
and
sub
(bad)
(bad)
push
push
push
icebp
test
clc
push
dec
cmp
jne
cmp
scas
or
add
out
jne
sbb
add
push
jbe
(bad)
xchg
lods
outs
push
jns
or
or
aaa
jbe
dec
mov
push
jg
ror
pushf
xor
das
mov
xchg
pop
ret
lods
movs
jne
fmul
ins
cmp
adc
scas
xor
push
cwde
cmp
or
mov
cmps
sub
xchg
popa
pop
lock
test
push
jne
mov
fmul
pop
xchg
dec
mov
mov
add
cmp
adc
sbb
inc
fcomp
leave
gs
pop
fwait
add
push
lods
jnp
jno
(bad)
xor
and
mov
mov
jae
jo
xchg
clc
cmp
(bad)
fild
lods
leave
sub
in
fsubr
pop
popa
cmp
out
cmp
loopne
lahf
pop
aam
and
or
or
cmp
call
fsubr
xchg
(bad)
cmp
inc
adc
(bad)
mov
dec
aam
cmovge
pop
fcomp
and
mov
shl
inc
iret
je
push
inc
scas
ds
mov
ficom
lock
mov
jecxz
popa
dec
in
in
mov
and
ret
mov
xor
or
add
mov
fild
pop
cmp
sub
shl
nop
adc
fild
loope
push
adc
stos
pop
inc
mov
inc
sbb
mov
je
leave
inc
jb
inc
and
retf
pop
aam
ror
push
sbb
les
inc
sub
scas
and
xor
inc
add
and
jnp
inc
stos
ss
cs
xor
rol
inc
jl
adc
add
lods
stos
shld
mov
or
adc
enter
and
or
pusha
sbb
or
or
pop
mov
psubsb
cs
fmul
paddusb
pop
add
inc
movs
push
sbb
cwde
jg
xor
push
test
paddb
adc
sbb
mov
ins
sti
add
addr16
jne
sbb
pop
add
or
mov
cld
jns
push
cwde
repnz
arpl
dec
je
inc
adc
(bad)
fisttp
inc
mov
or
cmc
cld
fild
lea
jae
adc
outs
mov
out
dec
mov
retf
jno
fwait
mov
cld
mov
add
and
and
in
hlt
dec
or
xor
dec
in
mov
test
(bad)
pop
pushf
mov
push
adc
movs
jmp
cmp
or
adc
xchg
mov
inc
test
mov
adc
add
fistp
push
dec
scas
pusha
cdq
inc
nop
aas
add
cmp
sbb
add
or
lods
add
bnd
push
pop
js
pop
mov
shr
ret
inc
inc
jo
push
movs
jmp
jbe
pop
inc
pop
ficom
mov
push
adc
and
loope
scas
loope
outs
xchg
lea
(bad)
das
sar
jns
ror
cmp
in
pop
push
fadd
add
ror
dec
dec
pop
dec
dec
in
jmp
dec
out
lea
lahf
mov
mov
cmps
dec
dec
add
jg
inc
sub
pop
mov
inc
jo
mov
ror
mov
sbb
iret
mov
call
xchg
dec
outs
pop
paddusb
push
mov
dec
shl
test
jg
dec
sub
inc
cmp
xlat
jbe
ins
and
dec
dec
les
cdq
fsubr
in
mov
adc
shl
add
dec
out
xchg
cs
movq
mov
or
dec
jmp
ret
or
pop
dec
sub
sbb
dec
add
fwait
mov
xchg
inc
sbb
sar
fwait
nop
mov
pop
ss
inc
add
shl
cmp
call
push
cmps
jne
jno
jp
(bad)
adc
dec
adc
adc
ins
jae
mov
jmp
sub
scas
fsubr
inc
call
jb
xor
stos
imul
call
mov
push
mov
mov
jg
dec
rcl
jg
dec
in
outs
pop
js
in
in
adc
dec
adc
and
call
cs
pushf
fs
dec
jo
adc
push
lahf
das
dec
lock
or
lock
inc
adc
aas
sbb
or
aam
sub
lea
or
pop
paddq
push
pop
sbb
inc
les
les
sub
dec
call
adc
loopne
in
ret
add
dec
mov
lods
fistp
push
aaa
ret
dec
call
add
sbb
adc
pop
or
mov
movups
jmp
and
xchg
mov
aam
mov
mov
or
sub
inc
(bad)
pushf
add
dec
adc
lock
add
hlt
pop
movs
lahf
adc
xchg
add
push
push
shr
call
(bad)
or
push
push
aas
push
sbb
push
movs
adc
jl
xor
jbe
or
mov
leave
and
dec
mov
or
mov
popa
test
(bad)
jecxz
pop
xor
sbb
dec
nop
fmul
push
sbb
aas
inc
in
(bad)
in
add
sbb
mov
iret
push
mov
jg
in
lods
sub
pop
pop
lds
and
jg
and
add
ins
sbb
xor
in
jg
mov
dec
scas
in
push
pop
mov
or
lahf
push
pop
sbb
inc
jge
aas
cli
arpl
lfs
jle
pop
daa
push
dec
in
test
aam
cmp
dec
pop
out
inc
cmp
test
sbb
jmp
add
xor
jb
ror
pop
push
rcr
mov
push
jge
mov
sub
cmps
sbb
call
pop
in
push
jo
xor
movs
inc
pop
pusha
and
in
inc
jno
add
push
lock
mov
out
rol
ror
lea
dec
push
rol
adc
(bad)
aaa
and
popf
mov
xor
dec
dec
call
jo
pop
test
mov
mov
dec
pop
or
loopne
mov
lods
popa
out
mov
leave
mov
dec
cmp
pop
fcomp
and
inc
dec
inc
pop
adc
push
fistp
pop
add
add
mov
dec
dec
fisttp
test
jo
rcr
das
je
lds
add
fsubr
mov
rcr
imul
pop
ret
loopne
xor
push
mov
push
lods
or
or
mov
push
and
pop
hlt
mov
pop
dec
pop
cmp
cmps
aam
mov
stos
scas
add
add
outs
int3
lea
mov
outs
ror
push
mov
and
mov
cs
or
pop
loopne
add
ret
mov
pop
test
mov
aas
mov
and
imul
sub
add
fist
xor
pop
sub
pusha
or
adc
sbb
push
add
cwde
movs
pop
pusha
pop
and
add
mov
jne
cli
add
add
cmp
pop
pushf
mov
(bad)
jo
cmp
nop
xchg
pushf
fmul
les
sbb
and
dec
lea
scas
or
mov
rcr
iret
les
(bad)
loopne
sbb
(bad)
out
js
and
enter
inc
in
ret
adc
sub
movs
sub
mov
adc
std
fnstsw
or
inc
pop
pop
test
std
xchg
mov
or
or
rcl
icebp
and
cmp
and
lea
sbb
fdivr
jnp
dec
pop
pop
fdivr
(bad)
push
mov
push
sbb
add
mov
movs
shl
dec
mov
imul
scas
mov
push
pushf
ret
xchg
mov
jb
jnp
mov
test
xor
jo
pop
shl
dec
mov
in
aad
push
test
xor
mov
inc
pusha
sbb
shr
test
jmp
dec
sbb
std
jg
adc
call
add
add
leave
fdivr
push
rcl
xchg
int3
and
and
jo
pop
add
nop
push
push
call
push
mov
mov
add
aas
test
add
add
mov
lahf
push
pop
jno
pop
scas
or
pop
fwait
mov
mov
sub
aam
add
jbe
test
cmp
sub
(bad)
push
shl
pusha
and
(bad)
sub
inc
das
sbb
int3
ret
dec
js
ror
aad
mov
fs
add
pop
push
dec
and
ret
push
push
mov
adc
aas
enter
xchg
mov
and
leave
xor
dec
fdivr
jae
shl
push
jg
and
and
pop
fidivr
inc
dec
outs
and
dec
sbb
mov
xchg
rol
mov
xchg
mov
fstp
loopne
add
retf
adc
enter
add
inc
into
mov
xor
dec
int3
ins
pusha
sbb
xchg
pop
in
xor
shl
push
or
xor
sub
cmp
sbb
lock
sbb
adc
or
adc
adc
dec
or
(bad)
shl
(bad)
out
and
scas
bnd
fnstsw
adc
mov
mov
dec
jbe
mov
pusha
add
pcmpeqw
add
jg
mov
add
fsub
jecxz
mov
(bad)
jmp
inc
dec
push
and
aas
jns
push
js
sbb
adc
push
imul
mov
mov
xchg
out
or
or
loope
or
jg
mov
loope
jg
mov
and
cmp
or
cdq
fs
xchg
nop
mov
aaa
xor
addr16
lea
pop
inc
mov
add
add
dec
push
cmp
pop
mov
(bad)
mov
ins
mov
dec
and
or
add
lods
(bad)
in
adc
outs
pop
add
or
lahf
outs
aam
jo
add
outs
push
pop
add
push
in
add
fwait
outs
mov
mov
pop
add
fbld
iret
mov
inc
das
test
or
xor
or
test
in
mov
pop
or
es
jo
jg
and
test
loop
jo
add
or
lahf
test
add
sub
lds
jno
test
sbb
iret
out
mov
call
push
mov
inc
ror
xchg
mov
fdivr
pop
pop
inc
pop
shl
out
(bad)
or
or
or
in
sub
jo
pusha
mov
out
mov
pop
inc
ins
jae
fisttp
cmc
adc
pop
or
mov
imul
pop
movs
and
int3
(bad)
sbb
push
movs
adc
mov
jo
loopne
push
lods
pop
je
ret
mov
mov
mov
or
mov
retf
push
lods
scas
inc
test
mov
and
push
and
and
mov
jbe
lahf
fbstp
add
pop
mov
ret
or
outs
aas
xchg
add
stos
adc
add
icebp
out
dec
mov
call
cmps
movs
inc
jecxz
ror
nop
gs
or
les
jns
jl
ror
push
jns
jns
lahf
inc
inc
push
adc
mov
mov
mov
xchg
ffree
cmps
add
or
cmp
lods
xchg
jp
sbb
enter
dec
xor
std
and
in
movs
xor
mov
jnp
lahf
sub
popa
jno
and
scas
mov
xor
inc
stos
rcl
pushf
pop
inc
pop
rcr
(bad)
jo
xlat
cmps
pushf
jnp
inc
push
adc
pop
inc
cmp
pop
nop
lahf
add
and
movs
add
test
jbe
rol
mov
jno
and
pop
dec
jge
stos
adc
cwde
aas
loop
pop
mov
add
jge
jg
mov
sbb
pop
enter
pop
ins
les
sbb
inc
pop
push
push
xchg
mov
or
in
mov
mov
lahf
pop
inc
fsubr
lods
in
popa
jle
cs
inc
sub
mov
jg
js
loopne
push
fdiv
pushf
pop
movs
pop
test
mov
add
add
cld
gs
jg
icebp
and
loop
jg
mov
repnz
pop
push
pop
scas
sbb
cld
pop
or
inc
sbb
jne
jo
scas
or
or
add
dec
imul
adc
and
test
push
(bad)
call
loope
popa
loopne
fcom
aam
in
add
fisttp
add
mov
mov
cmp
stos
or
add
dec
loopne
subps
loopne
movs
mov
int
sbb
dec
xor
int
or
aaa
cmp
dec
push
or
and
fwait
pushf
cwde
mov
dec
call
movs
rol
push
and
test
in
cwde
sbb
dec
xor
xor
and
lahf
in
push
cmps
arpl
enter
(bad)
or
cmp
loopne
sub
std
adc
std
std
xor
and
adc
shl
sub
lods
std
aas
add
imul
sbb
fdivr
inc
push
sbb
aas
adc
cwde
mov
fmul
cs
fisttp
cmovp
xchg
movs
xchg
dec
cmps
enter
or
or
cmp
jo
aam
dec
mov
pop
dec
push
or
lea
je
xor
and
ins
push
fs
and
adc
in
and
push
jge
bound
test
add
out
test
sbb
or
push
and
or
add
sub
add
jno
sub
and
inc
ror
mov
xchg
(bad)
xchg
jg
push
xlat
mov
pop
mov
test
in
stos
test
or
imul
add
inc
sbb
fucomip
(bad)
xor
xor
pop
scas
cwde
xchg
mov
cmc
adc
lods
push
(bad)
cmp
dec
(bad)
lock
fs
pusha
pop
pop
cmp
dec
xor
and
dec
adc
scas
inc
stos
icebp
outs
inc
outs
inc
sbb
and
and
fiadd
imul
xor
sub
xchg
sub
inc
cmp
sbb
inc
loopne
das
dec
cmp
mov
je
push
add
add
sti
push
loop
mov
mov
aas
hlt
mov
dec
cmp
mov
test
jo
pop
xchg
mov
sub
and
test
inc
test
mov
jg
inc
mov
mov
or
mov
push
and
pop
adc
sbb
sub
loope
xor
add
ja
adc
xor
sub
fwait
jbe
enter
fcmovnu
hlt
or
dec
cmp
and
sub
adc
sbb
mov
imul
pop
pop
lahf
jae
adc
stos
out
xchg
jo
hlt
push
and
or
and
xor
pop
mov
dec
iret
sbb
pmulhuw
sti
enter
dec
js
mov
test
test
and
push
aaa
pop
lea
cmp
cdq
xchg
inc
fwait
les
mov
adc
mov
mov
in
add
and
adc
test
inc
sbb
test
cli
cli
lea
fwait
mov
lea
vpshuflw
mov
pop
sub
cmp
popf
mov
outs
pushf
pop
inc
lock
ds
icebp
sbb
or
lea
scas
aam
mov
xchg
mov
add
fs
mov
dec
scas
jg
sub
lods
mov
inc
adc
rcl
fbld
out
lea
adc
lds
jmp
mov
adc
push
jmp
push
cmc
mov
sbb
adc
(bad)
mov
mov
mov
add
call
and
icebp
out
out
or
loopne
(bad)
and
rol
push
cmps
sbb
std
out
xor
std
aas
pop
or
out
pop
fist
jno
dec
rol
push
pop
xlat
sub
call
shr
punpcklbw
and
adc
and
pop
push
sub
call
in
add
sub
dec
fs
iret
mov
push
mov
outs
in
hlt
test
mov
fild
cmp
dec
xor
and
adc
and
mov
or
mov
xchg
mov
add
leave
or
add
add
mov
or
fild
xchg
and
xor
mov
test
fild
aas
pop
sbb
pop
sbb
gs
xchg
je
mov
add
push
or
jo
rcr
add
cmps
outs
dec
and
dec
sbb
push
movs
nop
sbb
mov
data16
rcr
inc
xchg
jne
fcom
mov
es
add
aam
xchg
inc
pop
push
adc
adc
push
loop
xchg
je
outs
pop
(bad)
mov
imul
pop
cmps
push
lahf
push
xchg
fstp
add
cwde
pop
int3
jb
mov
iret
cwde
jl
lahf
adc
inc
popf
mov
in
pop
or
xchg
inc
fistp
cmps
ja
aaa
iret
or
mov
in
jbe
fmul
fcom
sbb
adc
mov
icebp
fs
add
sbb
jmp
rcr
fistp
jmp
pop
mov
add
add
inc
je
setns
add
pop
lahf
pop
cmp
dec
test
inc
and
shl
sete
dec
stos
daa
or
cdq
test
or
inc
loopne
outs
(bad)
lea
cmp
or
outs
call
clc
add
pop
jo
inc
mov
sti
call
jmp
mov
sbb
and
pop
xlat
push
cmps
push
aas
(bad)
int3
in
ficomp
jo
(bad)
add
pop
add
in
das
or
sbb
mov
outs
and
(bad)
in
lahf
inc
loop
inc
shr
sbb
add
mov
cmp
dec
dec
xor
pop
pop
leave
push
or
lea
das
lahf
mov
add
sbb
add
jbe
or
or
mov
loope
in
test
sub
out
in
out
dec
add
mov
std
js
push
dec
call
pop
dec
fmul
fmul
push
shl
adc
iret
mov
rol
stos
test
pusha
dec
sbb
sahf
xor
pop
dec
mov
ror
loopne
fsubr
inc
add
mov
push
lahf
push
fistp
scas
rcr
add
enter
mov
pop
jb
popa
stos
test
xchg
mov
xor
mov
or
or
add
(bad)
ins
in
enter
add
cwde
ret
cmp
xlat
adc
dec
mov
mov
jg
mov
adc
mov
or
lahf
lock
sbb
mov
lea
comiss
mov
lahf
mov
lahf
cs
cs
mov
add
lahf
in
loopne
push
mov
and
aas
pop
push
test
xor
push
stos
jg
rol
in
out
pop
push
add
clc
pop
in
push
inc
movq
push
int3
pop
ror
pop
mov
js
cmp
push
jg
pop
dec
push
popf
dec
iret
ret
add
adc
hlt
mov
xor
lods
push
sub
pop
aas
push
pop
aad
mov
lahf
dec
add
sbb
in
movs
pop
push
xchg
loopne
lahf
(bad)
lods
mov
movs
loopne
call
cs
or
add
popw
pop
mov
movs
cmp
inc
call
mov
fs
push
mov
popa
pop
stos
xor
adc
loope
ins
movs
adc
pusha
and
add
cld
sbb
fbld
test
mov
icebp
adc
or
lds
cmps
pop
mov
mov
mov
dec
aas
lods
outs
pushf
inc
(bad)
stos
dec
outs
cmps
in
call
mov
adc
mov
jecxz
inc
fdiv
aam
and
pusha
aam
fucomip
mov
lock
lds
pop
and
fs
sbb
inc
cmp
ja
pop
mov
cwde
gs
jno
mov
mov
mov
mov
test
js
js
fld
or
in
add
test
jg
or
test
mov
jmp
adc
add
out
pop
aam
add
mov
cmp
test
mov
pop
aas
inc
sub
sub
add
das
pop
test
enter
fmul
mov
xor
sub
xor
outs
pop
scas
or
js
pop
cmps
mov
cmps
add
mov
inc
lods
pop
stos
hlt
pop
fdivr
adc
pop
dec
lea
bound
add
stos
dec
movs
mov
scas
sbb
jo
shl
mov
mov
rol
stos
aam
cwde
inc
dec
fwait
mov
inc
pop
push
or
push
dec
sar
mov
bswap
je
bound
enter
in
inc
lods
mov
or
pop
outs
lods
pusha
(bad)
jg
or
mov
aam
pushf
lahf
aas
or
mov
popa
sar
dec
les
shl
inc
aas
jo
lods
adc
adc
sar
outs
xlat
mov
(bad)
jg
(bad)
dec
rcl
pop
xchg
pop
sbb
ins
add
xor
or
ffreep
sub
dec
scas
xor
pop
mov
add
imul
lfs
sbb
jg
ss
jns
mov
mov
jmp
jno
mov
sub
sbb
call
cmp
lahf
test
mov
adc
add
push
sbb
call
push
xchg
(bad)
jg
lds
mov
jg
(bad)
inc
push
push
mov
shr
pop
mov
push
pop
or
lock
push
lahf
dec
les
rcr
add
mov
push
add
dec
rcr
fbstp
das
mov
aas
lods
push
inc
or
mov
add
call
sar
adc
cmp
xlat
push
mov
pop
cmps
icebp
xchg
push
xor
cdq
jle
dec
and
dec
jnp
jnp
dec
xchg
inc
adc
dec
mov
xor
push
pop
adc
in
jl
push
inc
xchg
pop
iret
leave
and
push
mov
adc
dec
xor
xor
je
and
inc
sub
lea
sub
jg
or
mov
sbb
inc
les
fist
add
push
push
pop
mov
jg
adc
cmp
and
add
lahf
xor
or
xor
outs
sbb
xchg
or
mov
xor
jg
pushf
mov
or
and
lea
adc
xchg
imul
dec
adc
bound
mov
or
scas
cdq
mov
xchg
les
mov
or
inc
cmp
push
shl
test
add
xor
(bad)
loopne
(bad)
sub
sbb
out
(bad)
loop
adc
cmp
inc
aad
mov
cmp
adc
adc
call
bswap
mov
pop
cmps
stc
mov
shl
ins
and
adc
aaa
data16
mov
(bad)
out
pushf
fsubr
pmulhuw
inc
and
pop
xlat
cmp
std
adc
lods
daa
add
ret
mov
sar
(bad)
push
inc
lahf
xor
ins
push
or
xor
js
sub
retf
lea
sub
xor
xchg
sub
and
cmp
test
les
inc
inc
mov
shr
and
mov
or
fsub
arpl
scas
(bad)
fstp
inc
loopne
add
sets
inc
or
adc
pop
jne
xchg
lea
push
fistp
leave
shl
je
mov
fistp
test
xchg
or
inc
call
bound
push
out
iret
cmp
and
xchg
imul
xor
mov
sbb
mov
pop
inc
jmp
nop
add
or
add
push
add
jg
and
hlt
shr
fsubr
xchg
pop
xor
pop
aad
dec
out
sar
pop
or
out
jg
inc
mov
xchg
mov
dec
or
loop
lahf
(bad)
pop
or
push
aas
(bad)
lds
sbb
iret
adc
xor
shl
sub
add
inc
add
js
cmp
jg
add
sbb
jno
lds
call
adc
add
sub
fmul
aas
mov
adc
xchg
nop
mov
clc
daa
xor
dec
mov
sub
lahf
sub
jg
adc
push
or
movs
or
jmp
ret
or
aam
mov
mov
aad
(bad)
clc
pop
pop
add
mov
add
jg
jo
shr
mov
sub
lods
scas
das
xchg
dec
rcl
lea
xor
fistp
and
(bad)
rol
add
or
inc
xor
push
mov
inc
mov
adc
sbb
lea
cmps
(bad)
add
(bad)
aam
mov
sbb
push
nop
stos
cmp
cmp
mov
inc
xchg
add
xor
and
inc
scas
mov
pop
or
push
adc
sbb
adc
fisttp
xchg
mov
daa
dec
mov
mov
lods
ror
inc
mov
inc
loop
(bad)
mov
pop
test
popa
retf
mov
pop
lahf
iret
retf
dec
arpl
dec
jmp
or
add
iret
mov
or
je
cdq
pusha
lea
(bad)
jmp
sar
or
xchg
pop
int3
mov
stc
jg
mov
inc
popf
inc
mov
div
and
cmp
fdiv
data16
jnp
(bad)
sbb
ror
enter
xor
or
sub
aas
into
dec
add
pushf
jg
or
mov
mov
jb
add
loopne
test
pusha
es
fcomp
pop
mov
shr
jo
or
add
jg
xor
into
hlt
jmp
pusha
add
push
sub
nop
adc
pop
xchg
pop
mov
iret
call
inc
ret
inc
iret
adc
and
jge
add
add
aas
adc
nop
shr
pop
pop
inc
and
outs
call
adc
pop
mov
lods
mov
mov
and
mov
cdq
nop
pushf
cwde
xor
dec
add
or
inc
dec
jo
mov
bound
pop
push
(bad)
jns
(bad)
sbb
int3
dec
adc
daa
cmps
pop
rol
fistp
add
xor
rcr
jno
and
adc
aas
add
mov
pop
add
popa
add
push
cmp
pop
add
pop
inc
cmps
or
call
dec
not
shr
add
jbe
scas
das
(bad)
aam
loopne
(bad)
loopne
fs
mov
jno
imul
adc
shl
outs
movlps
ror
sti
clc
int3
daa
or
pop
fmul
aam
adc
les
sar
mov
fisttp
xchg
dec
xor
push
adc
aad
pop
dec
inc
sub
dec
sub
fnstenv
(bad)
call
leave
in
mov
loopne
sbb
jmp
cmp
(bad)
dec
mov
adc
add
pusha
add
stos
push
xor
cmps
cmp
(bad)
lahf
jecxz
xor
adc
gs
shl
add
and
mov
cwde
test
call
imul
and
jne
shr
test
mov
and
dec
(bad)
xchg
popf
dec
pop
and
xchg
jmp
mov
mov
aam
pop
jns
push
dec
pop
jmp
lock
adc
push
mov
movs
cmp
enter
add
loopne
cmp
xchg
movs
pop
xchg
aam
not
lea
xchg
sub
xchg
mov
add
adc
inc
nop
push
adc
push
push
jmp
dec
xor
lea
pop
lds
push
jo
xor
mov
scas
sbb
stos
mov
or
ins
fwait
sub
cdq
dec
or
shl
add
mov
or
dec
cld
or
adc
hlt
or
sub
inc
mov
jmp
in
scas
call
push
xchg
loopne
sub
mov
cdq
aam
rcl
add
int3
std
ror
add
cld
icebp
movs
rol
(bad)
pop
and
inc
pop
jg
lea
inc
mov
imul
add
fimul
lea
imul
sbb
mov
mov
cdq
rcl
jnp
cwde
cdq
xchg
adc
mov
scas
mov
jne
cmp
std
std
popa
xor
cmps
cmp
test
call
ins
push
jl
xchg
imul
xor
push
imul
cs
pop
lahf
push
adc
xchg
dec
retf
cld
cli
es
add
xchg
mov
imul
rol
and
pop
inc
adc
pop
out
mov
test
je
xchg
pop
mov
aad
std
sti
movs
std
adc
mov
pop
hlt
sub
adc
or
push
mov
add
add
or
cmps
jne
xor
add
fild
pusha
dec
push
push
test
in
cmp
or
mov
pop
sbb
pop
sar
loopne
cmp
add
mov
les
call
dec
push
lods
aas
push
mov
adc
cdq
adc
xchg
iret
add
xor
(bad)
jge
jo
inc
fild
push
and
adc
add
(bad)
add
and
mov
dec
fldcw
shl
cwde
jnp
or
xchg
imul
adc
stos
ja
(bad)
push
movs
pop
fdiv
and
mov
xor
stos
lods
mov
push
aad
mov
adc
jl
add
rol
and
dec
rcl
and
loope
lahf
push
pusha
ror
pop
lea
aam
mov
dec
mov
int3
aam
jl
fild
mov
adc
and
jl
lea
pusha
mov
jo
xchg
enter
pop
cwde
mov
mov
mov
pop
xchg
loopne
bound
je
sub
sbb
xor
pavgw
enter
in
dec
mov
and
aas
and
xchg
lahf
mov
xchg
sub
xor
lea
nop
cwde
cmps
mov
and
adc
lods
sub
mov
imul
or
test
in
mov
std
out
mov
movs
cmp
lods
pop
out
call
inc
push
outs
shl
in
out
jg
(bad)
or
out
mov
mov
or
sub
pop
aas
fild
mov
mov
in
mov
aas
sub
pushf
jg
sub
call
inc
ret
dec
test
mov
pop
dec
test
loop
and
aas
jo
and
fmul
xchg
cdq
fdiv
pop
fsubr
cs
push
jg
sub
add
dec
pop
jmp
dec
cmp
pushf
lea
add
push
add
push
mov
cmc
lea
out
test
pusha
xor
ret
dec
lods
dec
add
aaa
adc
pop
push
jmp
test
add
xchg
add
call
mov
jl
test
jg
sbb
iret
mov
inc
add
sbb
cmp
sbb
mov
or
add
test
(bad)
repnz
std
daa
mov
aam
adc
test
fild
mov
jle
mov
fcomp
les
stos
xchg
dec
pop
xadd
cmps
mov
pop
and
sar
iret
scas
iret
cwde
mov
jnp
outs
add
cli
sbb
sbb
adc
inc
jo
icebp
int
icebp
shl
inc
icebp
inc
cli
inc
cli
dec
test
sahf
pusha
sbb
icebp
xchg
cmps
mov
imul
stc
or
test
push
inc
loopne
or
sub
pop
inc
sar
fidiv
and
icebp
clc
dec
cmps
and
add
in
and
cmp
ret
sub
dec
inc
push
xor
loope
not
or
cmc
stc
cmc
imul
in
cmp
hlt
xor
and
pop
cmc
hlt
hlt
leave
and
dec
hlt
hlt
hlt
arpl
hlt
scas
dec
es
repnz
jb
mov
push
xor
mov
movs
and
inc
repnz
sbb
loop
out
repz
loopne
sub
add
lea
(bad)
iret
lods
lahf
das
mov
cmp
scas
add
xchg
loopne
lods
stc
push
in
test
dec
mov
dec
fwait
sbb
adc
cmp
adc
or
sbb
das
jl
xchg
push
inc
lds
lods
push
sbb
or
jo
adc
jmp
pop
daa
push
and
icebp
out
sbb
dec
sbb
mov
push
icebp
and
mov
test
stos
mov
in
or
adc
das
or
sub
xchg
repnz
les
mov
sbb
popf
repnz
lock
jp
lea
les
mov
(bad)
xchg
or
js
inc
or
xchg
imul
ins
ins
sbb
cdq
push
fst
das
dec
cmps
fisttp
inc
test
cdq
not
xor
sar
mov
in
imul
(bad)
xor
sub
sub
xchg
rcl
and
adc
es
jbe
cmp
jbe
sbb
sbb
nop
add
xchg
test
add
or
inc
add
arpl
fisttp
cmps
inc
movs
les
jae
cmps
pop
and
mov
xor
out
adc
and
ins
dec
sub
adc
dec
es
push
scas
std
std
push
nop
fs
std
std
leave
and
sub
xchg
dec
xor
cld
cld
xchg
dec
xor
cld
cld
cld
sti
dec
xor
and
sti
sti
xor
and
sti
sti
sti
push
pop
push
dec
adc
dec
es
mov
test
jmp
mov
test
mov
aas
hlt
sub
mov
lea
lea
or
xchg
int3
add
in
pop
ins
(bad)
ins
inc
jecxz
inc
mov
jo
or
adc
(bad)
(bad)
and
mul
iret
(bad)
push
mov
in
or
aas
ret
movs
add
jns
adc
adc
cmps
push
or
sbb
cmps
inc
inc
pushf
div
pop
mov
aaa
inc
mov
push
dec
leave
mov
test
ret
jg
mov
add
mov
or
test
cmp
imul
rol
sbb
stc
dec
mov
dec
push
fist
adc
(bad)
(bad)
pop
push
push
cmp
mov
or
daa
cli
add
pop
push
sub
fcmovbe
jnp
ffreep
mov
cmp
fdivr
pop
sti
and
sub
test
fild
adc
scas
test
(bad)
jo
pop
cld
sbb
lahf
cmps
ins
lods
cmps
fxch
dec
xor
or
cld
inc
jg
adc
int
mov
popa
test
sbb
sbb
dec
aad
outs
xor
lea
rol
das
or
jg
add
cmp
mov
adc
lea
sub
dec
das
test
std
fdivr
add
adc
movs
es
das
bound
movs
inc
jo
adc
and
add
fs
pusha
and
(bad)
test
dec
lock
add
adc
call
push
ins
pushf
push
push
loopne
ret
jo
lahf
sbb
mov
in
inc
popa
pop
fwait
mov
mov
add
xor
sbb
mov
push
outs
mov
add
and
mov
(bad)
fcomp
enter
adc
hlt
imul
lods
aas
cmp
ds
mov
cwde
mov
add
aas
rol
inc
add
dec
mov
leave
xchg
mov
clc
cwde
add
jg
pop
in
inc
add
aas
enter
mov
inc
pop
sub
or
or
dec
mov
push
adc
scas
sbb
push
daa
push
sar
cmp
dec
in
scas
and
and
rol
xor
dec
fcom
cmp
or
lahf
call
pop
dec
sbb
inc
and
xor
xchg
test
ret
in
adc
inc
jecxz
add
lahf
sbb
in
add
dec
int3
leave
loope
push
test
pop
or
fcomip
adc
xor
sbb
add
iret
ret
bound
nop
mov
add
ror
adc
pop
and
call
pop
xchg
inc
les
cmps
test
push
inc
jno
pop
sub
inc
pop
cmps
jge
in
imul
and
test
pop
out
sar
add
lea
add
shr
sbb
in
cwde
xor
adc
add
or
popa
dec
mov
or
pop
mov
adc
mov
xor
les
and
ret
cmp
add
call
rol
add
pop
add
and
dec
fadd
(bad)
adc
ror
mov
xor
pop
das
cwde
punpcklwd
call
adc
add
inc
add
add
or
ins
dec
jbe
int
mov
pusha
in
mov
and
or
adc
in
(bad)
shr
push
sbb
add
xchg
or
js
push
lds
es
pusha
jo
retf
cmp
cmp
fcomp
cwde
sub
cli
sar
pop
prefetchwt1
or
inc
aas
dec
les
push
pop
jg
push
add
jmp
shr
jbe
(bad)
push
jmp
inc
push
xchg
dec
fwait
adc
adc
test
test
adc
enter
sbb
leave
mov
inc
xor
mov
jmp
inc
or
(bad)
aam
sbb
xchg
push
cld
pop
push
jmp
pop
(bad)
and
stos
jg
mov
leave
adc
mov
data16
nop
mov
push
adc
das
mov
and
jno
(bad)
(bad)
adc
xchg
rcr
ret
adc
adc
push
xchg
outs
or
movs
fadd
cmp
mov
dec
ret
sub
imul
sub
jg
dec
add
sbb
test
dec
pop
les
pop
sbb
sbb
and
jne
dec
in
(bad)
adc
(bad)
call
push
inc
(bad)
in
xchg
adc
wrmsr
add
mov
add
adc
test
movs
jmp
jle
jl
adc
sub
call
mov
fstp
pop
loopne
xor
add
or
mov
cwde
or
sbb
lea
lock
test
push
adc
les
xor
pop
aam
push
or
(bad)
jl
dec
(bad)
sub
mov
jg
dec
test
scas
push
dec
loope
iret
inc
aam
aam
dec
xor
cmps
mov
(bad)
aad
add
mov
in
mov
adc
ins
mov
xor
bound
repnz
lahf
pop
(bad)
mov
or
loopne
test
inc
mov
mov
sub
pop
and
pop
inc
or
pop
sub
or
lahf
pushf
mov
sbb
dec
pop
add
mov
sbb
and
mov
bswap
push
scas
sbb
pushf
xchg
add
aas
pop
jne
sub
fbld
rol
add
ror
or
and
rol
rcr
add
sbb
adc
aas
xchg
(bad)
push
mov
xchg
das
or
jbe
inc
mov
adc
pop
or
call
mov
pop
push
adc
push
int3
mov
fist
xchg
sbb
xor
and
inc
sbb
mov
push
(bad)
mov
fistp
lods
xor
push
fadd
xchg
dec
lds
int3
lea
jno
xor
xchg
inc
or
cmc
rol
add
adc
ret
test
cld
inc
js
adc
sti
inc
adc
pop
sub
ins
ret
inc
inc
inc
loop
addr16
mov
mov
sbb
dec
mov
jg
cwde
dec
or
jno
js
sbb
mov
push
push
call
lea
pop
mov
pop
les
mov
add
lahf
inc
mov
adc
mov
jo
frstor
mov
fisttp
stos
xchg
dec
test
popa
or
scas
mov
xor
jge
hlt
add
adc
mov
test
and
imul
add
mov
(bad)
dec
in
(bad)
imul
dec
xor
int3
inc
dec
or
inc
sub
add
cdq
dec
pop
and
jo
(bad)
cmp
add
lds
adc
sbb
sahf
lea
call
loopne
scas
adc
(bad)
cwde
cwde
test
jno
add
je
sbb
sbb
sub
mov
sbb
jg
sbb
xor
test
push
xor
int3
inc
xchg
push
adc
or
mov
and
sub
lea
repz
pop
jp
adc
ror
cwde
sub
adc
add
mov
adc
add
mov
mov
mov
stos
js
push
pop
fldenv
in
movs
(bad)
popf
or
lods
add
int3
ret
call
or
adc
aas
jmp
and
inc
loope
shr
xor
pop
inc
adc
xor
adc
pop
sbb
and
or
lahf
xchg
jg
push
xor
lods
xor
movs
adc
and
outs
cld
test
sbb
mov
mov
add
push
inc
xchg
adc
int3
(bad)
sub
rol
cmp
popf
ins
push
lea
int
sbb
mov
dec
bound
push
adc
aaa
pusha
mov
shr
and
adc
clc
inc
scas
and
xor
mov
dec
stos
aas
ret
add
cmc
xchg
in
shl
lahf
loop
or
or
pop
sti
push
dec
fistp
dec
loop
lds
daa
dec
and
lds
loop
mov
xor
dec
or
and
ret
add
test
add
jne
pusha
loop
popa
mov
mov
test
or
sub
or
jmp
test
push
push
fisttp
and
fisubr
das
dec
cmp
pop
cmp
sub
pop
mov
aam
loopne
sub
les
push
or
push
sbb
push
cmps
lock
sub
dec
push
loope
mov
cdq
sub
shl
or
mov
fisttp
push
outs
sub
push
test
or
or
adc
or
dec
shl
sar
inc
bound
mov
inc
inc
add
and
sub
xor
ror
mov
dec
dec
test
add
push
cmp
lea
xchg
mov
cmp
mov
mov
in
std
pop
cmps
test
je
pop
pop
mov
sub
push
push
adc
sbb
sub
add
fucomip
pop
mov
test
sub
pop
xchg
mov
xor
xchg
sub
or
mov
ret
std
sub
cmp
sub
inc
and
aas
(bad)
push
adc
mov
add
dec
mov
iret
shr
out
sbb
fcomp
or
or
shl
inc
js
sar
int3
adc
sub
inc
fisttp
and
lahf
pop
sub
adc
or
imul
cs
les
mov
in
mov
adc
jb
cmp
jg
mov
shl
jg
shl
or
pushf
leave
das
js
dec
adc
lahf
adc
paddb
movs
call
inc
xor
loope
xor
imul
adc
nop
les
fs
shl
clc
pop
es
retf
ss
or
xor
jg
imul
loopne
jl
push
lds
mov
imul
das
les
pusha
mov
imul
les
out
ins
cld
lods
mov
(bad)
fcom
lods
cmc
add
ins
pop
xor
or
movs
lock
xor
push
push
inc
mov
pop
nop
das
(bad)
call
mov
mov
cmp
mov
lods
sbb
mov
jg
push
or
(bad)
jmp
push
icebp
sub
aad
out
xchg
inc
jg
aas
jnp
or
mov
pusha
pop
xchg
mov
(bad)
imul
and
cmp
xchg
mov
ret
mov
or
clc
aas
fcomp
xor
daa
ss
ss
inc
cmp
aas
aaa
pop
mov
int
rcl
or
jno
adc
aaa
sbb
int3
std
cmps
sbb
sub
cmp
ret
fild
or
test
dec
and
mov
lods
adc
and
push
sbb
daa
nop
imul
xor
inc
es
mov
cmps
(bad)
mov
dec
or
aaa
movs
nop
mov
fsin
lds
push
adc
sbb
test
or
add
pop
cmp
test
(bad)
(bad)
jmp
cmp
xchg
(bad)
add
gs
sub
retf
call
dec
cmps
adc
leave
and
dec
fmul
mov
lods
pushf
mov
or
leave
jl
mov
sbb
aas
mov
ret
lods
cmp
push
xchg
pop
aas
push
pop
loopne
fadd
icebp
and
sbb
aas
fadd
dec
xor
int3
(bad)
cmp
aas
add
inc
push
mov
xchg
call
bound
lahf
sbb
or
loopne
inc
jecxz
lahf
pop
jmp
cmp
jno
lods
cmp
sub
adc
ins
add
or
aaa
test
xor
sbb
sti
enter
add
stos
or
jns
mov
push
sbb
mov
push
adc
add
pop
inc
js
aam
movs
icebp
mov
arpl
test
in
test
(bad)
stos
cmps
(bad)
aas
adc
dec
pop
sar
sub
cdq
or
add
sub
call
aas
ror
add
shl
inc
call
and
fwait
cwde
lahf
fdiv
pop
mov
pop
aas
rcr
xchg
jo
inc
pop
inc
cld
pushf
add
sub
sbb
dec
rcr
sahf
mov
fisttp
cmp
sub
rcr
lds
dec
jmp
mov
nop
sub
pinsrw
jl
xor
icebp
or
fadd
inc
fbstp
(bad)
aam
lods
mov
bound
xchg
pop
sbb
jns
or
dec
jp
cmps
inc
clc
lahf
and
dec
mov
(bad)
(bad)
dec
pusha
mov
rcr
icebp
or
pop
adc
(bad)
aam
and
and
movs
and
es
mov
sub
sub
mov
pop
nop
inc
adc
mov
and
adc
loopne
lahf
adc
mov
pop
xchg
cmp
add
adc
fs
rol
push
add
push
imul
data16
fnstsw
push
and
je
xchg
mov
adc
ss
cmp
(bad)
mov
push
sub
pushf
inc
xor
test
push
in
mov
adc
(bad)
xlat
cs
cmc
inc
nop
pop
ror
push
lock
fild
or
or
sbb
push
or
push
or
outs
push
cdq
fs
imul
or
mov
or
inc
nop
mov
rcl
mov
in
das
xchg
pushf
push
and
pop
jb
fdivr
in
sub
and
mov
dec
test
in
in
jbe
adc
fistp
add
or
mov
sbb
xor
inc
mov
ins
mov
add
mov
sub
or
dec
aad
adc
mov
or
add
es
fsubr
mov
lahf
xor
pop
adc
(bad)
ins
aam
and
or
add
dec
dec
push
dec
(bad)
inc
test
cwde
adc
stos
sbb
dec
sub
pop
adc
fsub
xor
lods
jne
or
pusha
sub
scas
or
adc
aam
dec
mov
lea
cli
bound
mov
cmp
mov
or
in
mov
dec
mov
mov
inc
push
mov
sti
or
dec
xor
adc
dec
xchg
dec
pop
dec
pop
cmp
movs
jo
les
inc
pop
or
add
xor
mov
cmp
xchg
jl
lock
dec
enter
add
pop
mov
ror
and
(bad)
fadd
mov
fwait
in
les
inc
popa
fisttp
xor
pop
jg
push
jno
inc
and
xor
cli
lea
inc
mov
or
stos
ins
pop
sub
mov
or
ins
mov
and
adc
inc
pusha
(bad)
dec
mov
or
test
push
adc
hlt
push
and
mov
push
fild
pop
add
leave
mov
and
sub
daa
in
jb
push
sub
sbb
in
dec
pop
rol
adc
pop
shl
ret
mov
fst
mov
mov
mov
add
jecxz
and
jge
xor
fbstp
fs
xor
jmp
add
add
cmp
or
add
xchg
sbb
mov
dec
pop
or
dec
or
adc
and
or
or
cwde
sbb
add
aas
xchg
add
or
arpl
xchg
aad
adc
mov
mov
adc
out
xor
pop
daa
and
pop
mov
ret
pop
sub
retf
in
fild
jo
arpl
push
pusha
(bad)
call
mov
cmp
push
pop
jg
add
adc
jmp
js
lea
push
mov
sar
sbb
int3
cmp
xchg
loopne
add
sub
fsub
inc
inc
mov
or
inc
adc
push
and
cmp
and
inc
or
pop
and
push
inc
int3
aas
rcl
push
ret
pop
jmp
cmp
pop
cwde
pop
inc
add
push
adc
call
mov
xchg
pop
add
pop
aad
lea
xchg
xor
pusha
mov
cli
dec
gs
aas
pop
mov
and
movs
add
add
fistp
jo
jno
mov
push
adc
adc
sbb
pusha
pop
pop
mov
add
call
lahf
sbb
dec
mov
and
pop
or
cdq
add
sub
pop
sub
ffreep
fistp
sub
mov
pop
or
add
shr
xchg
mov
add
out
pop
retf
rcr
sbb
or
in
mov
jae
mov
add
mov
mov
sbb
push
adc
pop
cs
adc
loopne
add
mov
mov
fmul
cmp
mov
pop
sub
sbb
pop
movs
add
mov
pop
xchg
les
scas
or
inc
sbb
loopne
pop
cmp
dec
adc
jnp
les
mov
fs
nop
nop
or
comiss
(bad)
and
sub
sbb
aam
add
add
mov
and
ret
inc
mov
jg
pop
adc
xchg
mov
repnz
cmp
add
push
or
jo
scas
pop
fist
popf
add
rcl
arpl
mov
mov
pop
adc
test
fisttp
mov
add
lahf
pop
push
les
loopne
and
aam
les
ins
fist
sbb
outs
xchg
(bad)
cmp
lods
add
sbb
neg
aas
fisubr
inc
lods
rcl
lds
jmp
ins
pop
adc
pusha
sbb
lods
add
mov
add
rol
xor
rcr
sbb
je
jmp
push
cmp
and
retf
aas
push
sbb
xchg
pusha
movs
sti
sub
repnz
jo
in
add
mov
in
and
add
mov
sbb
sar
ror
pushf
mov
loopne
mov
aad
adc
inc
adc
cld
add
xchg
inc
imul
or
lods
adc
iret
adc
sbb
in
mov
dec
in
xor
scas
inc
inc
xor
and
adc
fist
pusha
inc
pusha
add
mov
mov
cmp
lahf
jecxz
add
cdq
mov
add
pop
push
and
test
mov
and
pop
sbb
jo
dec
pop
mov
pop
js
sbb
mov
adc
xor
xor
mov
xchg
dec
cdq
xchg
push
stos
std
cli
lods
pop
ret
mov
fnstsw
pop
ret
pop
test
nop
sbb
sbb
cmp
mov
(bad)
(bad)
sbb
in
add
aas
sbb
arpl
add
pop
out
pop
mov
push
nop
shl
aas
call
cld
aas
lock
sbb
pusha
xchg
scas
add
aas
adc
and
xor
xor
mov
add
int3
xchg
adc
stc
push
scas
pusha
fisttp
cmp
pop
out
lahf
lahf
out
inc
push
nop
arpl
add
inc
push
nop
nop
sub
pop
adc
aaa
aad
lock
pop
pop
ret
aas
ins
mov
scas
jg
mov
jg
aas
sar
inc
push
cmp
push
lock
add
xchg
nop
adc
xchg
and
sbb
xchg
add
sbb
test
mov
lock
shl
mov
pop
inc
push
xor
and
mov
ficom
(bad)
push
xor
push
sub
cmp
leave
add
fist
sbb
xchg
sbb
bound
popf
or
(bad)
jb
call
aas
mov
or
mov
or
mov
sbb
js
cvtpi2ps
lea
dec
imul
aas
fdiv
(bad)
call
xor
push
test
mov
add
jg
ret
inc
sar
and
add
test
out
bound
mov
push
xchg
adc
rcr
sub
loopne
mov
aas
dec
inc
or
(bad)
test
addr16
and
mov
mov
push
xchg
jno
inc
fadd
sbb
sbb
inc
mov
rcr
mov
cmp
xchg
add
les
and
pop
push
dec
gs
add
aas
(bad)
or
and
inc
sub
add
xor
adc
cdq
inc
cmp
push
cmps
nop
retf
pop
enter
test
cmp
mov
inc
shl
or
aas
aas
pop
xor
enter
movs
sub
sbb
xor
mov
loope
test
mov
xchg
or
test
sub
push
add
or
pop
or
std
add
inc
loopne
push
adc
cmp
jg
out
adc
or
mov
mov
or
push
aad
mov
inc
add
sbb
mov
pop
int
aas
enter
jb
aam
xchg
sbb
cmp
mov
push
xchg
aad
jge
push
sub
cld
push
and
into
or
push
in
movs
jnp
add
inc
int3
pop
inc
inc
mov
and
and
sub
jns
pusha
(bad)
or
enter
shl
add
mov
pushf
pop
mov
push
cld
dec
pop
aas
push
sbb
sar
push
inc
ins
sub
jmp
imul
ins
jne
push
pop
in
(bad)
ds
adc
cdq
inc
dec
push
push
cmps
nop
retf
push
test
dec
and
pop
sub
or
aas
enter
push
cdq
fdiv
push
cmps
nop
js
jl
sub
jp
adc
adc
xor
xor
dec
mov
sub
aas
fs
or
inc
sub
pushf
xchg
nop
retf
mov
push
cmps
mov
les
xchg
sub
test
adc
jns
(bad)
mov
outs
or
mov
call
mov
fsub
pusha
cld
mov
pop
mov
out
jnp
pop
pop
hlt
dec
jo
arpl
outs
lds
xor
jb
pusha
mov
rol
jge
push
sbb
mov
lahf
sbb
fld
nop
sub
dec
mov
dec
ret
dec
add
adc
jge
xchg
int3
stos
or
sbb
lahf
pop
jg
or
lahf
and
inc
jg
mov
push
pop
mov
aas
dec
mov
xor
in
pop
push
add
je
call
rcr
add
movs
fadd
dec
add
in
pop
mov
cs
mov
pop
mov
pop
rcr
mov
cmp
push
sub
sbb
fs
in
jg
jb
push
or
adc
mov
cmp
sbb
out
pop
or
pop
xor
cld
aas
or
mov
lock
xor
pop
in
bound
add
hlt
aas
and
jb
adc
and
and
jb
sub
mov
(bad)
(bad)
js
mov
nop
or
mov
jl
add
test
cmp
cs
xchg
(bad)
adc
aas
inc
test
xor
pop
bound
and
std
lods
aas
dec
mov
xor
je
aas
fsub
and
xchg
add
mov
inc
ror
aas
loop
xchg
push
push
lahf
sbb
sub
mov
and
aas
ret
xchg
adc
(bad)
(bad)
mov
mov
xor
push
or
aas
pop
or
cmps
fadd
or
pop
loop
call
add
pop
test
and
jle
lds
xlat
or
sub
jg
cwde
pop
pop
pop
mov
mov
das
movs
fcomp
(bad)
or
push
bound
xor
aas
mov
mov
adc
mov
mov
push
ins
test
ins
xlat
add
stos
stos
and
cmp
mov
mov
mov
ror
sahf
out
fisub
nop
shl
sti
out
aam
test
push
xchg
repz
mov
mov
mov
mov
sahf
mov
movs
iret
jae
jnp
test
test
pop
ds
out
out
cmp
test
out
sahf
test
stos
jns
out
stos
stos
stos
stos
stos
repz
out
stos
pop
ds
stos
mov
(bad)
lods
push
lods
add
xchg
push
xchg
mov
xchg
mov
loopne
cwde
iret
repz
cwde
inc
push
pusha
and
pop
cdq
ds
cdq
pop
out
jns
cdq
cdq
cdq
cdq
into
cdq
push
call
out
call
ss
out
push
fwait
(bad)
fwait
fwait
fwait
fwait
mov
cmp
aaa
ficomp
iret
repz
pushf
pushf
xchg
pushf
cmp
loopne
popf
push
popf
xchg
popf
ds
popf
sahf
out
cmp
popf
pop
popf
jle
sahf
sahf
cmp
cmp
xchg
sahf
sahf
ds
sahf
repz
repz
lahf
lahf
lahf
lahf
cmp
jo
lahf
lahf
mov
push
push
jo
cmp
pause
mov
mov
inc
inc
mov
movs
cmp
repz
xor
nop
mov
cmp
movs
movs
jns
sbb
cmps
data16
cmps
out
xor
data16
lods
mov
repnz
push
aam
fstp
add
adc
adc
adc
dec
fisttp
popa
nop
dec
psubw
adc
push
icebp
push
mov
mov
ins
push
je
dec
add
push
push
ins
pop
sti
ja
push
jbe
inc
push
jb
arpl
xor
imul
inc
pop
dec
push
push
bound
and
je
outs
outs
outs
repz
inc
retf
jle
mov
mov
fs
inc
or
add
jnp
fisttp
push
add
inc
push
dec
ss
es
fstp
push
sbb
inc
and
push
add
out
and
cmp
pop
es
or
add
dec
pop
jb
mov
mov
add
add
dec
dec
cs
lock
data16
ds
sbb
cmps
and
je
fs
sbb
add
idiv
outs
push
into
pop
outs
jp
aas
gs
mov
je
imul
fistp
popa
ss
mov
ret
out
mov
cmp
inc
jo
je
jp
fsubrp
add
pop
bound
fs
(bad)
inc
inc
cmp
outs
addr16
ins
and
ins
gs
sub
sub
int
cld
mov
sub
data16
push
imul
jne
and
(bad)
sub
cmp
xor
pop
loopne
ins
data16
arpl
sbb
gs
gs
cs
div
fidivr
shl
and
or
xchg
push
and
xlat
mov
fdiv
push
and
add
pusha
sar
arpl
cmp
and
jae
imul
mov
fstp
ds
or
push
jmp
inc
and
in
mov
mov
ins
shl
cmp
and
pop
or
xlat
push
push
sub
jmp
iret
fimul
gs
cmp
jne
jo
jge
imul
fmul
cmp
ins
jbe
xchg
adc
stos
fisub
imul
sub
mov
sub
aaa
popa
jnp
add
pop
jae
mov
sub
outs
xchg
bound
leave
shl
imul
loope
jo
retf
sub
fistp
or
and
mov
jg
mov
movd
gs
mov
add
xlat
loope
sti
inc
jbe
imul
mov
test
mov
mov
push
xlat
scas
add
add
cmp
pop
sbb
fild
js
fld
and
out
jb
jmp
cmp
push
cmp
pop
je
add
pop
and
push
mov
sahf
jg
add
push
mov
dec
jo
sub
dec
xor
popa
div
sub
retf
xlat
inc
shr
cmp
ins
add
je
sub
sub
sub
dec
ret
and
inc
push
(bad)
bound
inc
inc
push
cmp
xchg
jmp
punpcklwd
pop
sbb
cmp
jbe
sti
push
and
or
and
sub
jmp
sbb
pusha
push
or
mov
jmp
add
add
sbb
adc
arpl
je
mov
dec
add
push
mov
push
dec
sub
mov
and
jne
push
or
imul
push
dec
retf
dec
add
push
sub
outs
xor
push
fcomi
aaa
inc
cmps
popa
add
dec
dec
inc
cmp
push
sbb
pop
sbb
pop
add
jb
cmps
lahf
mov
inc
or
add
mov
mov
daa
jae
xlat
adc
ret
inc
jae
mov
ja
xchg
mov
fsubr
jl
pop
pop
adc
or
cmps
adc
or
scas
scas
xor
inc
pop
fild
jae
add
imul
sub
fistp
mov
fisttp
inc
dec
sahf
mov
sbb
and
dec
or
pop
pop
adc
xchg
arpl
sbb
shr
lahf
or
or
add
push
pop
add
inc
lea
mov
mov
push
and
call
je
inc
aad
push
mov
add
jb
jns
test
stos
jno
pop
aas
push
jl
mov
imul
ja
jne
jo
jb
jae
popa
arpl
jne
arpl
ficom
imul
fcomp
push
out
pop
adc
arpl
mul
popa
outs
imul
add
mov
inc
popa
movd
scas
fild
xchg
inc
ss
or
add
test
aam
inc
jne
adc
add
add
sub
mov
mov
(bad)
pop
add
test
xlat
das
mov
pop
fwait
das
cwde
mov
das
add
(bad)
adc
pop
out
(bad)
call
xor
or
jmp
loop
(bad)
outs
outs
je
inc
dec
dec
push
xor
inc
dec
inc
inc
push
and
and
dec
dec
and
xor
pop
inc
dec
dec
push
adc
sbb
cld
dec
inc
push
inc
and
jne
fidiv
mov
mov
mul
dec
dec
dec
and
and
daa
sub
ja
dec
es
out
pop
push
js
pop
cmp
inc
dec
pop
cmp
arpl
test
mov
jg
gs
jne
or
imul
paddw
lock
dec
ja
scas
xchg
push
inc
push
clc
test
gs
pop
push
jns
je
mov
sub
or
popf
aas
imul
addr16
push
dec
inc
inc
dec
inc
push
bound
or
push
ins
out
fld
pop
inc
jne
adc
fsub
pop
inc
shl
dec
outs
xor
les
jnp
fldcw
and
fs
out
imul
mov
push
push
mov
mov
in
sub
jl
ins
push
jl
cmp
shl
xor
inc
jnp
fidiv
sub
xchg
outs
gs
add
fs
ins
add
jmp
inc
fs
push
jbe
mov
add
jle
outs
outs
add
xorps
out
idiv
dec
inc
dec
push
push
pop
jae
ins
pop
fs
enter
push
outs
push
xor
addr16
lds
dec
dec
push
pop
dec
mov
sahf
inc
dec
jne
pop
add
dec
push
push
push
xchg
test
mov
push
lods
(bad)
bound
push
cmp
xchg
popf
ja
gs
test
mov
mov
dec
ins
sbb
ins
nop
push
cmp
add
jae
adc
dec
cs
and
xchg
shl
test
scas
scas
loopne
mov
popa
(bad)
or
mov
inc
mov
dec
jns
mov
dec
dec
inc
inc
pop
xlat
dec
push
pop
out
dec
dec
cwde
xor
popw
inc
and
push
fbstp
in
inc
jp
jae
retf
sbb
call
xor
push
cmp
jo
pop
arpl
mov
outs
push
inc
jbe
jns
data16
pop
inc
push
dec
inc
push
mov
xor
add
pop
gs
loope
adc
inc
add
pop
movlps
inc
minps
add
(bad)
sbb
bound
add
or
push
cmps
repz
js
bound
pop
test
jg
cld
xchg
adc
jmp
lods
xchg
jo
xchg
sbb
xchg
out
fist
enter
fcom
pop
jnp
inc
push
in
outs
cwde
sub
adc
mov
push
nop
nop
push
and
mov
sub
mov
mov
ss
aas
mov
mov
in
test
pusha
fst
aaa
xor
add
inc
fcomip
or
push
fcom
or
and
jb
mov
call
add
inc
lds
sub
popa
ja
sub
cmp
jle
data16
add
cmp
or
add
add
scas
pop
or
sahf
gs
data16
add
ficomp
shr
ficomp
cmp
bound
adc
das
popaw
mov
sub
lods
add
(bad)
jbe
jo
mov
data16
pop
dec
add
jbe
arpl
add
mov
out
sahf
retf
out
faddp
nop
push
pusha
enter
push
(bad)
ins
fmulp
add
leave
xor
jne
iret
div
(bad)
mov
aas
add
lea
ins
dec
pusha
lea
push
cmp
cmps
push
mov
ja
outs
push
jae
jbe
je
ds
daa
jo
add
and
daa
loopne
push
out
mov
sub
adc
(bad)
and
outs
daa
pop
test
(bad)
xor
bound
pop
shl
jmp
pop
jae
mov
mov
scas
mov
popa
pop
jae
mov
sbb
pop
imul
inc
mov
jg
add
adc
jae
and
jo
(bad)
and
test
add
push
add
pushf
cmp
ins
scas
aas
add
ins
push
loopne
int3
mov
dec
jae
ins
outs
outs
dec
neg
sub
and
outs
jb
inc
call
inc
clc
outs
stos
xor
stos
int3
inc
outs
ins
jo
push
mov
adc
pop
ins
and
jge
pop
shl
push
pop
dec
ja
lods
std
mul
inc
inc
gs
push
mov
jns
sub
pop
jnp
popf
(bad)
bnd
and
and
push
fisttp
cwde
outs
outs
ins
jae
push
in
aaa
xlat
add
ins
push
and
imul
or
and
outs
mov
sub
sahf
repnz
and
rcr
push
inc
call
add
pop
push
push
inc
push
pop
push
inc
push
dec
mov
gs
push
dec
pop
push
dec
dec
pop
cli
add
call
sbb
mov
pop
ret
stc
daa
xchg
mov
inc
pop
pop
pop
xor
in
jae
pop
xor
xchg
push
mov
imul
cmp
arpl
js
pop
inc
or
cmovno
inc
or
aad
adc
dec
adc
ss
aam
imul
das
push
dec
fistp
push
cmp
ss
add
mov
inc
adc
ss
lahf
mov
sti
push
xor
push
pop
(bad)
sbb
mov
pop
push
mov
leave
adc
outs
xor
mov
jne
jo
outs
aam
stos
jnp
add
das
add
pusha
aad
(bad)
outs
add
push
pop
out
test
outs
(bad)
pop
push
or
inc
sub
mov
and
ret
addr16
loope
scas
outs
push
scas
push
inc
outs
aas
pop
cmp
jecxz
gs
adc
or
test
jb
dec
cmp
add
daa
mov
pop
add
inc
xchg
or
push
outs
dec
repz
loopne
arpl
dec
iret
outs
aas
out
sbb
inc
pop
jp
pop
pop
sbb
fiadd
data16
nop
sub
xor
xor
push
lods
(bad)
dec
sti
inc
out
lds
or
push
jmp
xchg
jo
inc
mov
or
test
aas
or
push
cmp
jmp
add
pop
stos
aaa
shr
push
or
imul
aaa
ficom
test
ja
xor
and
push
add
sti
outs
jbe
sub
arpl
(bad)
(bad)
(bad)
jl
jnp
imul
add
(bad)
xlat
stos
jbe
or
cli
pop
inc
lock
aam
scas
pushf
movs
jb
mov
(bad)
(bad)
(bad)
std
xchg
es
test
jno
xor
sbb
and
daa
mov
jg
dec
jo
sbb
outs
pop
mov
sub
das
test
(bad)
(bad)
call
add
and
mov
push
mov
iret
shr
stos
sti
inc
dec
xor
push
cmp
test
(bad)
(bad)
(bad)
jmp
cmp
mov
push
ror
or
in
pop
xchg
inc
pop
les
sbb
(bad)
(bad)
(bad)
inc
nop
mov
mov
fneni(8087
xor
or
and
ret
bound
clc
(bad)
(bad)
dec
aaa
ins
(bad)
aad
test
gs
or
cmps
mov
call
mov
pop
ds
dec
add
push
popa
xor
sbb
adc
(bad)
(bad)
jmp
mov
push
sub
mov
inc
push
mov
mov
aad
(bad)
(bad)
push
movs
cmp
repz
sti
jl
cmp
xor
inc
inc
(bad)
fsubrp
retf
push
jnp
xor
(bad)
(bad)
jmp
dec
xchg
or
ret
dec
or
mov
mov
pop
mov
and
(bad)
(bad)
(bad)
inc
movs
pop
int3
pop
gs
ins
jo
push
std
in
mov
push
cmps
lea
add
(bad)
(bad)
dec
pop
add
shr
(bad)
add
scas
mov
imul
adc
(bad)
(bad)
dec
fsubr
xchg
repnz
into
lock
jae
lods
je
out
xor
call
inc
icebp
sbb
(bad)
(bad)
call
mov
push
stos
sbb
dec
(bad)
sar
call
hlt
pop
(bad)
dec
adc
pop
daa
adc
dec
or
xchg
leave
pushf
push
(bad)
out
mov
mov
jmp
cmp
push
cdq
inc
lods
(bad)
jmp
sub
mov
imul
(bad)
push
jl
jnp
mov
push
outs
lds
ja
pop
out
dec
mov
push
stos
repz
xor
cli
push
pop
cmps
push
sahf
out
sahf
lock
aam
scas
pushf
jns
out
movs
jb
mov
out
sahf
out
es
neg
xor
in
jno
mov
adc
sahf
out
and
sbb
sbb
lock
loop
jmp
mov
mov
or
sahf
out
packuswb
pop
push
mov
out
(bad)
mov
jecxz
mov
(bad)
xchg
in
cmp
fwait
add
push
cmp
cmp
cmp
sti
inc
mov
push
shr
stos
mov
jg
xor
test
idiv
cmp
repz
push
cmp
test
iret
repz
mov
cmp
repz
mov
add
add
repz
rcr
outs
es
in
jae
sbb
sbb
push
les
imul
iret
xchg
(bad)
repz
fadd
sbb
iret
imul
push
nop
mov
repz
add
push
mov
cmp
repz
loopne
cmp
push
sub
repz
shr
push
xchg
xchg
in
sub
cmp
out
aaa
mov
int
dec
call
int
pop
fimul
hlt
push
jmp
scas
inc
mov
xchg
add
cs
sbb
repz
cmps
mov
call
repz
dec
mov
inc
pop
add
push
mov
retf
js
add
add
neg
pop
rol
jg
aam
nop
pop
and
sahf
out
sahf
rcr
out
push
js
pop
add
fld
mov
push
xchg
into
out
ja
push
dec
add
fild
mov
mov
adc
inc
aas
aam
sbb
and
sub
aad
out
mov
stos
dec
inc
push
mov
push
xor
movs
jecxz
cmp
cmp
jno
pop
jl
cmp
or
mov
popa
xor
outs
mov
les
jmp
mov
loope
jmp
fwait
out
fldz
pop
xchg
popa
inc
xchg
scas
mov
imul
shl
mov
ins
jno
loope
mov
div
ror
pop
pop
sbb
xor
xor
or
mov
cmps
inc
pop
pop
loopne
popf
jns
cdq
stos
adc
popa
rcr
not
pop
rol
or
loopne
or
jno
stc
retf
pop
xor
popa
shr
push
loopne
mov
add
mov
cmp
jo
dec
mov
sbb
pop
xchg
and
icebp
push
pop
jne
lock
stc
xchg
xor
rcl
loope
jns
fdiv
aaa
xchg
sbb
cwde
add
pusha
(bad)
inc
test
adc
sbb
aaa
int
outs
inc
bound
cwde
sar
loopne
pop
xor
test
es
shl
add
jne
and
mov
cwde
loope
popa
mov
pop
jns
test
enter
add
jmp
sbb
jno
popa
xchg
push
int3
sub
pushf
jmp
xor
jmp
xor
mov
scas
cmp
cdq
mov
sub
push
cwde
add
xchg
(bad)
dec
test
adc
push
pop
push
popa
push
or
add
stos
and
push
(bad)
(bad)
jmp
clc
jl
test
ja
cdq
idiv
(bad)
push
repnz
cld
jmp
fisubr
mov
vandpd
xor
(bad)
(bad)
(bad)
jg
into
addr16
out
(bad)
sbb
stos
stos
out
jbe
call
(bad)
(bad)
(bad)
inc
inc
cli
jge
xchg
cli
cli
adc
mov
leave
sti
lock
lods
in
mov
(bad)
(bad)
(bad)
call
addr16
mov
scas
jmp
movs
mul
jb
xchg
fwait
rol
jne
mov
loope
(bad)
(bad)
(bad)
(bad)
std
sbb
xchg
xchg
scas
dec
es
ss
jle
aas
inc
cmc
div
add
xor
pop
push
movs
(bad)
(bad)
(bad)
jmp
xor
icebp
icebp
or
jno
xchg
stos
fcomp
jae
xor
push
sub
add
xchg
(bad)
(bad)
(bad)
(bad)
inc
push
inc
and
gs
ret
ret
pop
xor
sbb
aaa
xchg
xchg
mov
das
call
and
(bad)
(bad)
(bad)
call
sbb
loop
int
jmp
dec
daa
daa
imul
jne
adc
or
sbb
inc
je
sbb
cs
sbb
mov
pop
out
pop
mov
push
idiv
(bad)
(bad)
push
cmp
(bad)
(bad)
popa
jge
mov
push
sub
jnp
jecxz
ds
das
das
jno
test
(bad)
jg
loop
rcl
mov
inc
and
pusha
jecxz
cld
pop
jns
mov
(bad)
(bad)
dec
mov
pop
in
aam
push
(bad)
retf
retf
inc
addr16
cmp
dec
dec
ficomp
pop
pop
(bad)
(bad)
(bad)
(bad)
call
mov
out
out
sub
stos
in
sti
sti
push
xchg
lds
xor
or
icebp
call
test
iret
jmp
(bad)
mov
jg
and
lahf
lahf
mov
mov
mov
(bad)
inc
(bad)
(bad)
xchg
lods
and
cmp
cmc
cmc
add
mov
mov
dec
(bad)
jmp
and
arpl
adc
xor
(bad)
(bad)
call
std
repz
mov
int
dec
sbb
adc
adc
xor
mov
(bad)
(bad)
(bad)
call
inc
int3
cs
pop
cmp
cmps
cmps
repnz
jle
cmp
inc
enter
mov
pop
pop
out
sbb
sub
jae
xchg
shl
sbb
dec
shl
and
push
(bad)
(bad)
(bad)
jmp
sub
nop
nop
stos
or
inc
retf
out
sub
mov
cmp
(bad)
jns
(bad)
(bad)
(bad)
call
loop
or
sbb
fneni(8087
loopne
xor
push
je
cmp
or
push
xchg
dec
dec
fisttp
(bad)
(bad)
inc
push
or
and
mov
ret
mov
lods
lods
out
les
cmps
cmp
das
clc
call
in
bnd
mov
out
mov
enter
aaa
pop
fisubr
mov
pop
add
mov
dec
dec
ror
mov
loopne
ins
ins
mov
push
push
cli
repz
hlt
pop
iret
jmp
hlt
jp
cmp
mov
jmp
outs
mov
mov
and
jb
sbb
and
(bad)
(bad)
call
cmps
icebp
jae
mov
xchg
mov
retf
call
fnstsw
je
ds
pop
and
(bad)
(bad)
jmp
mov
xchg
mov
nop
jl
ds
jno
mov
int3
data16
nop
dec
dec
fdivr
(bad)
(bad)
inc
add
add
sbb
push
adc
popa
popa
mov
scas
push
push
stc
imul
mov
cdq
rol
cmp
mov
jmp
clc
adc
cwde
cwde
mov
adc
mov
imul
xor
cmps
sub
push
push
and
jmp
into
dec
stos
push
push
call
sub
(bad)
(bad)
(bad)
(bad)
(bad)
jp
mov
or
or
fcmovbe
out
xor
push
mov
sub
sub
adc
mov
test
push
cld
ins
mov
push
repz
xlat
cmp
or
mov
test
jge
(bad)
out
repz
repz
popf
inc
xchg
jmp
or
addr16
cmp
repz
mov
cmp
repz
push
iret
repz
inc
add
hlt
xor
iret
repz
xchg
jae
aas
repz
repz
gs
sub
repz
mov
fwait
cmp
repz
es
repz
repz
mov
sti
test
iret
repz
jnp
jno
jb
into
repz
push
stc
add
enter
jns
out
(bad)
aam
out
sahf
call
push
jns
out
vandnps
adc
xor
sahf
mov
mov
out
lods
mov
jns
out
jne
xor
sahf
out
sahf
push
ins
dec
adc
das
jns
out
loope
int3
cmp
jns
out
add
sahf
out
sahf
sub
jns
out
data16
or
jns
out
sar
loop
out
sahf
sbb
push
jns
out
fisttp
ins
in
out
sahf
out
out
cmps
test
sahf
out
sahf
aaa
mov
inc
pop
mov
dec
xchg
js
enter
out
shl
mov
pop
sahf
out
sahf
and
aad
sahf
out
mov
and
out
sahf
out
push
and
out
sahf
and
fadd
out
inc
les
sahf
out
adc
jns
rcl
jns
out
adc
jns
out
cmps
mov
xchg
sahf
out
sahf
and
js
(bad)
jns
out
clc
adc
xor
jns
out
mov
out
sahf
adc
cld
(bad)
cmp
sahf
out
jl
jnp
imul
sahf
out
lds
add
out
sahf
sub
xlat
stos
jbe
jns
out
or
cli
pop
out
sahf
out
lock
aam
sahf
out
sahf
scas
pushf
movs
jb
mov
sahf
out
std
xchg
es
out
sahf
out
int3
xor
in
out
sahf
icebp
jno
xor
jns
and
sbb
add
sahf
out
sahf
loop
daa
mov
or
out
sub
outs
out
sahf
out
mov
out
sahf
mov
jecxz
test
(bad)
sar
add
cmp
repz
mov
push
repz
repz
iret
repz
iret
shr
stos
sti
inc
cmp
repz
xor
iret
repz
cmp
iret
repz
test
mov
iret
repz
cmp
mov
repz
adc
repz
repz
ror
or
in
pop
cmp
repz
inc
pop
les
jle
fs
sbb
repz
jae
or
cmp
nop
mov
repz
repz
iret
repz
fneni(8087
xor
or
iret
repz
and
ret
cmp
rep
bound
cmp
jns
enter
cmp
repz
dec
test
iret
repz
jmp
iret
or
cmp
repz
mov
call
repz
dec
mov
iret
mov
mov
dec
cmp
repz
test
xor
push
mov
repz
sahf
loope
cwde
adc
iret
repz
mov
repz
into
push
sub
repz
fisttp
iret
repz
inc
push
iret
repz
iret
repz
push
arpl
repnz
repz
outs
lds
add
cmp
repz
xlat
stos
iret
repz
jbe
or
cli
cmp
repz
inc
lock
aam
cmp
repz
iret
repz
shl
iret
repz
test
iret
repz
jno
xor
repz
adc
sbb
repz
add
cmp
repz
daa
mov
repz
jne
sub
cmp
repz
pop
mov
iret
repz
mov
jecxz
jmp
cmp
test
jmp
jns
out
and
mov
push
out
sahf
retf
mov
jns
out
iret
shr
stos
sti
out
sahf
out
dec
xor
sahf
stc
add
cmp
jns
out
test
mov
sahf
out
popf
cmp
mov
mov
and
push
jns
out
ror
or
in
out
sahf
out
xchg
inc
pop
les
jle
fs
sbb
out
jae
or
and
nop
mov
out
sahf
out
mov
jns
out
fneni(8087
xor
or
jns
out
push
and
ret
jns
shr
sahf
out
jns
enter
jns
out
aad
test
sahf
push
hlt
jmp
jns
mov
jns
out
cmps
mov
call
fnsave
mov
jns
jo
mov
out
sahf
out
add
push
popa
sahf
out
sahf
xor
sbb
sahf
loope
cwde
adc
jns
out
(bad)
jns
push
xchg
into
push
sub
out
fisttp
sahf
out
out
push
sahf
cdq
sub
(bad)
(bad)
(bad)
jns
push
hlt
cmps
push
jle
gs
sbb
movs
ret
cmp
pop
xchg
cmp
(bad)
(bad)
(bad)
inc
lods
cli
pop
stos
dec
jecxz
xchg
and
cli
push
lods
jbe
test
dec
and
lds
(bad)
(bad)
mov
inc
xor
pop
dec
and
jmp
ret
call
pop
mov
lea
mov
add
(bad)
(bad)
dec
pushf
xchg
mov
push
pop
fcmovbe
mov
and
dec
loopne
sub
(bad)
(bad)
(bad)
inc
mov
mov
cdq
pop
imul
jno
mov
mov
data16
cmp
fisttp
in
xor
bound
inc
mov
ja
mov
and
(bad)
dec
pop
pop
sbb
clc
mov
jae
and
add
jecxz
(bad)
push
push
stos
sub
jmp
pop
das
mov
add
aaa
or
and
push
in
push
sbb
(bad)
dec
sbb
cmps
jns
xchg
repz
repnz
imul
int
add
bound
les
or
jmp
push
popf
mov
mov
xor
(bad)
jg
cmp
out
stos
pop
jno
push
mov
and
fld
cmp
(bad)
(bad)
(bad)
dec
mov
mov
les
add
aam
pusha
push
adc
and
mov
inc
int3
and
fstp
mov
out
pop
cmp
out
(bad)
xor
test
add
add
xor
in
dec
push
and
dec
std
push
push
shl
mov
scas
aad
ss
(bad)
dec
psubusw
cmps
and
ss
addr16
push
out
mov
xchg
rcr
fwait
xchg
sahf
(bad)
(bad)
(bad)
inc
fsub
mov
sbb
sbb
loop
mov
in
and
inc
adc
pop
sbb
push
dec
or
mov
lods
sub
push
test
test
cdq
frstor
jmp
jg
std
test
cmc
mov
pop
sti
call
sub
and
fdiv
icebp
arpl
xor
retf
(bad)
(bad)
(bad)
inc
inc
test
adc
test
jge
mov
xor
(bad)
sub
dec
fdiv
xor
or
shl
sub
mov
cli
inc
jmp
mov
mov
(bad)
aas
sbb
sub
and
nop
out
xchg
(bad)
fnstcw
rol
mov
mov
cmps
cmc
or
(bad)
(bad)
fisubr
fidiv
mov
in
js
or
push
jle
(bad)
test
fdivr
pop
add
cmc
lahf
pop
cmp
(bad)
(bad)
mov
outs
aad
test
enter
adc
jge
call
cmp
aaa
fild
hlt
in
call
(bad)
jmp
xchg
outs
gs
jmp
jle
mov
call
(bad)
ss
jmp
(bad)
dec
add
push
movs
mov
sub
and
(bad)
movs
xchg
xor
push
mov
cmps
loopne
shl
icebp
add
dec
inc
in
(bad)
jg
push
push
pop
(bad)
(bad)
(bad)
call
(bad)
lea
mov
int3
stos
dec
push
in
add
sahf
shl
sbb
sub
mov
jmp
jg
pop
jmp
xchg
or
mov
sbb
push
jmp
(bad)
(bad)
(bad)
call
inc
adc
mov
adc
jmp
cmp
into
test
leave
xor
jp
(bad)
(bad)
inc
cmp
rcr
pop
push
bnd
sbb
jns
(bad)
aaa
mov
pop
std
stos
pop
fistp
(bad)
(bad)
inc
retf
cmp
mov
ret
jb
loop
or
cmp
mov
sar
(bad)
dec
add
or
(bad)
mov
pushf
fs
rcl
xor
jg
pop
je
mov
push
ret
xchg
out
sahf
out
icebp
stos
xchg
push
sahf
out
sahf
not
jns
out
vpshab
out
sahf
out
adc
jns
xchg
jmp
sub
out
inc
push
imul
jns
out
pop
data16
sahf
out
sahf
and
test
sahf
out
xchg
pop
sbb
out
loop
sub
sahf
out
sahf
add
jns
out
pop
sub
sahf
out
aad
mov
mov
push
jns
out
push
stc
cmp
sahf
out
add
out
sahf
xchg
int3
ja
mov
jne
out
fild
leave
sahf
out
push
add
lods
dec
sti
jns
out
push
push
daa
fs
jns
out
cmp
jns
sahf
dec
mov
sahf
out
in
sbb
sahf
out
enter
sahf
out
sahf
std
lahf
mov
sahf
out
fsubr
retf
jns
out
and
adc
dec
repz
shr
out
cdq
cli
and
sbb
jns
out
out
mov
sahf
ss
sub
movs
in
sahf
out
or
out
sahf
out
cmc
mov
jns
mov
cmps
outs
jnp
jns
out
hlt
add
sahf
out
out
into
aam
out
sahf
(bad)
scas
xor
shl
sahf
out
cmps
mov
dec
mul
jns
out
das
lea
sahf
out
sahf
(bad)
sbb
out
pop
jae
pop
push
out
sahf
out
adc
sahf
mov
xor
sahf
out
aas
jns
jmp
xchg
jns
pop
jb
mov
jns
out
ficomp
sahf
out
inc
cmps
movs
sahf
out
sahf
pop
imul
cli
jns
out
ins
jbe
xlat
retf
out
sahf
out
mov
out
sahf
shl
stc
pop
jns
out
pushf
jp
and
jns
out
enter
sahf
out
sahf
jno
lods
lods
cmp
sahf
out
xor
jg
scas
out
sahf
out
sub
ins
sahf
out
sahf
clc
rol
(bad)
stos
sub
out
ret
xchg
push
sbb
repnz
out
sahf
loop
mov
sahf
out
push
loope
in
out
out
sahf
out
adc
jns
mov
sti
jns
out
jmp
out
sahf
out
out
or
push
jns
scas
push
inc
out
sahf
out
cmp
cmp
sahf
out
sahf
cmps
push
cs
jns
out
xchg
lds
dec
sbb
jns
out
sub
pop
or
(bad)
test
sbb
fnstsw
out
pusha
es
cmp
jns
out
(bad)
cld
icebp
fcomp
and
and
xor
out
mov
out
sahf
out
mov
out
sahf
aas
sub
dec
shl
or
jns
out
xchg
int3
inc
adc
imul
sahf
out
adc
jns
out
sbb
jns
out
call
sahf
out
jl
and
mov
sahf
out
sahf
ficom
(bad)
mov
jns
out
add
mov
push
out
sahf
out
xor
out
sahf
rcl
popa
or
jns
out
cmp
leave
in
out
sahf
out
jae
aaa
int
out
sahf
stos
outs
fcomi
les
sahf
out
inc
ret
and
sahf
out
mov
rol
push
hlt
inc
pop
jns
out
daa
stos
popf
cli
jecxz
jns
out
jbe
add
sahf
out
sahf
sub
jns
out
(bad)
das
dec
inc
shl
jns
out
xchg
ins
push
mov
je
leave
ret
jns
out
mov
out
sahf
out
sbb
fs
out
sahf
imul
sahf
out
jnp
dec
pop
push
out
sahf
out
mov
aaa
sub
add
iret
jns
jns
out
imul
jns
out
repz
sbb
outs
and
ds
out
out
les
push
out
sahf
out
mov
out
sahf
mov
enter
imul
call
call
fwait
and
imul
imul
imul
cmps
imul
inc
pop
mov
mov
cmps
imul
cmps
imul
cmps
imul
imul
cmps
imul
cmps
imul
imul
cmps
imul
imul
imul
cmps
imul
imul
imul
cmps
imul
imul
imul
cmps
imul
cmps
imul
imul
cmps
imul
sub
cmp
fadd
jnp
dec
shr
mov
push
mov
mov
xchg
dec
cmp
mov
mov
movs
push
(bad)
outs
jp
mov
call
jbe
movs
xchg
fidivr
into
fiadd
ss
es
pop
push
cmp
test
pop
imul
mov
jbe
xchg
push
pop
out
xchg
push
inc
sbb
mov
imul
pop
dec
jbe
xchg
jle
mul
out
ss
cmp
into
mov
pop
dec
jmp
imul
sbb
scas
outs
test
push
dec
push
cmp
movs
not
pop
call
imul
fisubr
xchg
pop
sbb
fimul
mov
cs
xchg
movs
mov
test
mov
test
mov
xchg
imul
pop
imul
out
push
jmp
mov
pop
out
movs
inc
sbb
push
xchg
cmps
xchg
test
jmp
movs
xchg
dec
push
push
pop
test
ds
xchg
cmps
fidivr
xchg
sbb
test
mov
jp
movs
movs
push
cs
movs
xchg
mov
inc
jp
out
mul
push
(bad)
jbe
jp
test
jmp
movs
xchg
push
cs
out
movs
xchg
pop
cmp
mov
dec
scas
inc
inc
xchg
push
(bad)
cs
test
jmp
push
movs
mov
push
mov
mov
inc
(bad)
jp
test
jmp
push
jmp
xchg
dec
(bad)
pop
scas
test
sahf
sbb
jle
mov
jmp
jmp
movs
mov
inc
test
push
lods
xchg
mov
push
scas
ficom
push
test
jmp
dec
mov
cmp
test
pop
mov
mov
push
lods
cmps
pop
jp
out
mov
cs
jle
pop
imul
lods
xchg
jbe
jbe
lods
mov
test
mov
pop
inc
push
mov
jmp
inc
jmp
jp
mov
jmp
mov
movs
xchg
pop
cmp
jp
(bad)
outs
scas
push
push
cmp
mov
jecxz
add
push
jbe
mov
es
pop
inc
pop
push
pop
call
pop
imul
cs
mov
push
es
push
sbb
(bad)
cmps
out
sbb
movs
into
pop
dec
jp
mov
jmp
mov
ss
xchg
call
inc
sbb
movs
dec
mov
dec
pop
test
scas
inc
mov
imul
sahf
mov
push
dec
mul
out
mov
sbb
cs
(bad)
pop
imul
outs
fimul
mov
xchg
mov
mov
ds
mov
movs
push
push
jle
imul
xchg
movs
mov
mov
push
mov
mov
jmp
movs
xchg
out
push
mov
cmps
jbe
push
sbb
mov
outs
push
push
cmp
jle
push
sbb
test
pop
outs
ds
movs
mov
push
xchg
xchg
pop
push
mov
inc
cmp
movs
jbe
push
sbb
test
jmp
xchg
push
test
jbe
cmps
sahf
cmp
(bad)
(bad)
test
pop
jmp
jp
test
out
inc
(bad)
imul
cmp
(bad)
movs
dec
sbb
cs
ds
cmp
movs
outs
pop
push
cmp
movs
xchg
xchg
push
jle
test
inc
out
pop
sbb
cmps
test
(bad)
pop
jp
lods
mov
test
pop
jle
es
xchg
out
into
jp
pop
mov
(bad)
pop
jmp
test
push
push
scas
jmp
push
push
lods
mov
dec
mov
(bad)
pop
mov
xchg
push
jp
movs
movs
push
push
out
jmp
lods
movs
mov
jle
mov
sbb
cmps
jbe
mov
jmp
jbe
(bad)
cmp
mov
pop
pop
push
mov
xchg
jp
jmp
push
ds
jp
lea
movs
or
ds
(bad)
outs
mov
push
mov
inc
scas
dec
sbb
(bad)
into
fidiv
push
es
pop
(bad)
mov
pop
not
push
jbe
push
pop
imul
sahf
push
push
into
(bad)
test
push
cmp
pop
push
xchg
movs
fdivp
xchg
push
xchg
xchg
jmp
mov
pop
dec
mov
out
scas
inc
xchg
push
cmp
pop
ss
jp
movs
scas
outs
sahf
pop
push
dec
push
push
out
test
xchg
inc
cmp
(bad)
ficomp
jp
movs
outs
outs
fidivr
movs
mov
push
mov
test
ds
test
xchg
xchg
push
xchg
xchg
pop
push
dec
sbb
movs
fiadd
xchg
imul
movs
xchg
xchg
xchg
mov
cmp
push
dec
push
pop
push
pop
push
xchg
xchg
cmps
imul
pop
outs
push
jle
pop
pop
jmp
xchg
sbb
ds
jp
test
fidivr
push
xchg
mov
mov
test
pop
pop
push
cs
push
sbb
mov
ss
sbb
out
not
push
(bad)
jbe
test
xchg
ds
(bad)
movs
mov
push
mov
scas
out
inc
dec
jp
movs
(bad)
mov
mov
test
xchg
(bad)
cs
xchg
cmp
outs
xchg
dec
pop
jmp
jmp
movs
mov
cs
imul
test
(bad)
pop
scas
pop
mov
test
jmp
test
pop
test
inc
sahf
sbb
push
push
push
into
jp
test
fiadd
pop
imul
dec
mov
test
mov
mov
jmp
push
push
push
into
jp
movs
out
mov
xchg
jle
jle
test
xchg
inc
cmps
lods
cmps
(bad)
jp
sahf
jbe
into
cmp
(bad)
pop
mov
jmp
pop
inc
push
mov
out
adc
out
sbb
sahf
out
inc
pop
push
ins
sahf
out
sahf
gs
nop
cdq
cmp
jns
mov
cmps
scas
out
sahf
out
ror
ret
cld
sahf
out
sahf
cmc
out
out
xor
jns
out
and
push
or
out
jp
push
sahf
pop
inc
dec
stos
mov
jns
pop
sahf
out
jmp
sahf
into
aad
jbe
ror
jne
mov
sub
inc
cmp
mov
inc
dec
not
aam
sub
dec
cs
mov
xor
fisubr
or
push
mov
hlt
ror
cs
xor
inc
mov
inc
push
mov
lods
push
push
jle
das
lods
mov
pop
fisubr
popf
je
xchg
imul
mov
xor
dec
sub
mov
cmp
dec
sbb
and
xchg
cmp
jbe
jne
dec
inc
outs
push
ror
sub
inc
sbb
inc
mov
fidivr
je
dec
jle
mov
rcl
mov
ror
mov
and
and
push
(bad)
cmp
ds
cmc
aam
inc
(bad)
test
dec
sub
das
sbb
daa
or
scas
inc
sbb
(bad)
cs
dec
inc
ss
rcl
mov
inc
popf
je
xchg
push
jle
cs
out
hlt
ror
test
(bad)
pop
dec
dec
lea
pop
push
inc
sbb
es
sub
out
jne
pop
dec
pop
mov
aam
dec
popf
inc
mov
dec
inc
or
sub
push
neg
dec
mov
dec
dec
(bad)
pop
mov
xchg
push
push
das
mov
dec
mov
jle
lods
mov
push
jle
cs
jbe
(bad)
push
arpl
inc
lods
jne
pop
pop
xor
jne
inc
push
inc
add
xor
and
or
shl
jmp
fs
and
xor
xor
cmc
aas
sbb
inc
inc
ja
aaa
arpl
bound
xor
gs
cmp
xor
data16
xor
xor
in
xor
add
cmp
fs
ss
data16
xor
push
in
xor
xor
arpl
cmp
sbb
loopne
retf
xor
xor
or
in
jb
mov
or
adc
rcl
bound
lds
cmp
add
nop
(bad)
jg
inc
inc
inc
push
add
imul
xor
cmp
inc
dec
pop
arpl
ja
sub
cmp
dec
outs
fnstsw
pop
arpl
and
popa
add
je
and
xor
dec
push
bound
js
xor
cmp
pop
dec
jns
(bad)
call
sbb
dec
dec
push
pop
imul
push
pop
push
ds
(bad)
inc
dec
pop
push
jae
daa
cmp
dec
push
arpl
jns
xor
pop
pop
mov
outs
cli
pop
ins
ja
sub
push
pop
pusha
outs
je
es
push
lods
adc
push
pop
data16
das
nop
(bad)
jg
or
dec
push
cmp
lods
cmp
pop
pop
pusha
ins
jnp
cs
lock
inc
push
arpl
and
sub
aas
inc
jbe
pop
imul
sbb
call
or
sar
cmp
je
jnp
mov
cmp
in
imul
sub
pop
loopne
gs
push
pop
bound
ds
and
push
push
fs
scas
loopne
(bad)
jns
sub
inc
dec
push
push
push
jb
cmp
push
out
pop
inc
ror
pop
add
imul
mov
shl
mov
dec
inc
fs
out
cmp
mov
ds
daa
das
mov
addr16
outs
push
xor
pop
pop
push
xor
mov
lods
js
sub
cmp
push
push
inc
test
add
and
xor
inc
dec
dec
idiv
xlat
push
pop
push
push
inc
push
push
push
pusha
fs
das
cmp
loop
fstp
gs
and
cmp
dec
cmp
pop
icebp
fwait
xor
inc
inc
push
push
pop
add
and
aaa
cmp
fxsave
iret
push
je
cs
xor
inc
loopne
test
dec
pop
push
cld
daa
sub
xor
cmp
push
pop
shr
out
pop
pop
add
inc
mov
xor
push
push
mov
es
ds
in
xchg
xchg
inc
mov
jle
daa
pop
mov
outs
mov
jns
mov
jo
jp
and
out
test
inc
push
pop
gs
daa
xor
cmp
mov
dec
add
push
jne
jl
das
add
push
pop
bound
xor
inc
push
push
pop
pop
shl
sub
mov
xchg
outs
ja
push
push
add
outs
call
cmp
dec
xor
mov
lock
pop
outs
dec
and
inc
mov
inc
fcomp
fdiv
add
ins
add
jl
xor
inc
sub
imul
mul
mov
dec
aad
pusha
data16
sub
in
inc
xchg
jle
arpl
xor
ss
push
fdiv
add
push
aam
mov
(bad)
inc
dec
dec
push
add
outs
jne
xor
les
sub
imul
dec
pop
pop
arpl
jge
das
pop
push
add
cmp
or
lods
inc
dec
push
fs
sbb
dec
es
dec
xor
mov
push
aaa
test
call
ja
ins
jbe
sub
push
jl
sub
aaa
inc
inc
mov
pusha
cwde
gs
js
test
lea
inc
adc
fiadd
data16
jbe
xor
xor
bound
sub
inc
inc
dec
jle
dec
adc
sub
inc
sbb
ja
clc
es
aad
nop
cmp
daa
sub
mov
dec
push
pop
bound
and
aam
mov
jae
das
das
jae
ins
cmps
ins
gs
jns
adc
cs
call
ins
arpl
push
push
pop
gs
sub
test
jl
sub
xor
popa
mov
sub
pop
ds
xchg
sar
adc
dec
push
push
add
add
mov
push
xchg
sub
push
data16
mov
push
pop
pusha
popa
ja
lds
pop
pop
scas
push
aaa
inc
scas
prefetch
or
xchg
data16
cmp
cmp
test
inc
dec
mov
push
data16
pop
pop
mov
jl
sub
xor
div
xor
lods
fisttp
outs
jns
add
inc
dec
ss
sbb
cmp
cs
ret
jmp
and
push
call
pop
or
xor
pop
fdivr
call
enter
inc
inc
dec
addr16
jae
and
xchg
jl
ins
outs
push
in
add
cmp
push
mov
loope
imul
add
daa
daa
mov
sbb
pop
and
and
xor
sbb
jno
cli
call
mov
js
call
inc
push
js
mov
pop
xchg
push
aaa
hlt
push
add
mov
dec
daa
arpl
and
xor
push
ins
jbe
stos
add
adc
loopne
aam
shr
es
rcr
dec
push
push
(bad)
mov
in
jge
mov
mov
dec
mov
sar
dec
call
cwde
movs
jae
push
jp
dec
mov
cbw
fist
add
jno
xor
inc
adc
aam
xchg
int3
cli
mov
movs
xor
push
retf
pop
fs
lea
enter
ror
push
push
and
sub
cs
popa
imul
call
imul
xchg
xor
xor
xor
pop
loope
push
push
xlat
in
js
fnsave
xor
sub
and
scas
pop
pop
sub
addr16
sub
cmp
cwde
or
pop
stos
outs
jo
xor
ret
inc
jp
lahf
xor
(bad)
dec
inc
pop
fst
aaa
inc
add
ins
addr16
push
rcl
mov
and
mov
push
outs
imul
outs
and
lahf
inc
or
js
mov
je
je
inc
adc
jne
(bad)
out
outs
pop
ror
mov
add
adc
push
xchg
ret
pop
lds
add
and
ds
xchg
jl
xor
cmp
mov
push
aas
js
imul
push
cmp
inc
inc
dec
dec
sbb
and
sbb
mov
(bad)
push
pop
push
dec
dec
push
outs
pop
lock
jbe
daa
(bad)
cmp
pop
fs
mov
xor
ins
cs
outs
js
and
push
cmp
mov
mov
xor
mov
jae
and
xor
movs
dec
push
mov
dec
dec
add
push
and
outs
xor
pop
dec
sbb
cmp
int
test
push
sbb
pop
mov
xchg
pop
pop
jbe
sub
or
mov
sub
ss
push
(bad)
lock
cdq
pop
mov
add
inc
push
push
push
outs
outs
sub
in
dec
mov
and
clc
fld
add
cmp
ds
jmp
pop
mov
add
adc
in
call
je
and
sub
xor
push
sbb
push
xchg
out
and
add
imul
sub
ss
inc
cli
pop
ins
outs
mov
xlat
ret
sub
pop
imul
mov
pop
and
and
cmp
sbb
fs
cwde
inc
or
lock
mov
jbe
jnp
movs
sbb
inc
adc
mov
ret
pop
test
add
pop
add
push
test
sub
sub
pop
inc
ret
xchg
ficom
lock
sub
pop
add
cmps
(bad)
popa
ret
sub
xchg
sbb
push
lock
pop
sub
cmp
and
sub
lock
push
fbld
inc
test
lock
xchg
imul
test
mov
xor
call
or
jge
and
or
dec
sub
and
js
cmp
sbb
lods
inc
dec
pop
adc
das
jg
jne
and
pop
jge
ret
in
retf
inc
dec
dec
dec
push
les
pop
dec
(bad)
(bad)
jp
lock
nop
pop
jae
and
xor
(bad)
pop
fbstp
dec
dec
dec
pop
addr16
and
xor
(bad)
xchg
mov
dec
fs
loope
and
je
movs
jp
shl
fs
les
and
jo
retf
mov
jae
and
enter
or
cmp
xor
push
dec
push
jo
sub
add
dec
push
push
pop
mov
sar
inc
mov
and
push
pusha
mov
data16
push
inc
add
and
mov
xor
jl
push
pop
push
imul
enter
pop
movd
inc
je
sub
outs
or
test
sub
jo
add
stos
out
inc
cmp
add
xor
dec
rol
or
into
jns
mul
inc
inc
dec
mov
mov
inc
mov
add
push
cwde
cmp
xor
js
pusha
push
xor
dec
dec
mov
xchg
outs
push
xor
in
aaa
fcom
pop
data16
jl
push
add
scas
ror
and
xchg
adc
cmp
and
aas
mov
test
cmp
pusha
cld
xor
xor
cli
outs
dec
out
mov
lds
cmp
inc
in
push
pop
imul
stos
sub
dec
pop
arpl
pop
dec
outs
sbb
add
inc
sub
cmp
cli
push
aaa
cmp
sbb
repnz
inc
add
in
in
arpl
jle
sub
push
push
push
jb
or
or
xor
push
sub
adc
outs
adc
aas
adc
adc
push
inc
call
mov
inc
inc
loope
outs
cmp
sbb
cmp
shr
add
dec
fidiv
dec
push
sub
stos
mul
sub
and
mov
test
dec
je
mov
scas
or
les
dec
aas
aaa
and
xchg
inc
add
sub
xchg
inc
mov
mov
sub
and
mov
outs
lods
or
add
test
and
xor
ja
ret
mov
adc
adc
mov
and
arpl
data16
xchg
lock
add
loopne
ins
sahf
int
and
push
push
add
mov
ins
fs
and
push
dec
jne
cld
mov
mov
xchg
stos
and
add
dec
(bad)
mov
mov
ss
xor
add
aas
and
mov
mov
mov
mov
ret
data16
test
pop
jae
je
jne
scas
cwde
inc
mov
inc
iret
loope
inc
or
push
mov
sbb
fild
aaa
imul
call
ret
cmps
pop
pop
ins
jo
sub
xor
inc
push
push
pop
arpl
mov
(bad)
(bad)
jnp
sub
inc
dec
push
push
gs
jne
sub
mov
inc
ins
ins
jae
xor
dec
dec
push
pop
pop
fs
and
dec
add
inc
(bad)
push
push
pop
imul
stos
sub
jmp
in
jnp
sub
dec
dec
pop
push
push
jl
xor
dec
push
push
data16
dec
clc
idiv
es
push
push
push
pop
popa
bound
sub
cmp
cmp
cwde
and
jbe
dec
push
push
fs
jno
add
mov
jnp
xor
sti
fld
pop
add
js
and
adc
cmp
jbe
sub
cmp
dec
dec
pop
bound
jns
sub
cmp
push
pusha
addr16
jnp
sub
ss
inc
inc
dec
and
add
cmp
mov
cmp
data16
or
push
add
jnp
or
int3
lock
push
push
fsubr
cmp
dec
dec
push
ins
std
scas
mov
outs
jge
sub
dec
outs
add
ja
std
or
jb
and
in
inc
push
shl
pop
data16
je
mov
inc
inc
xchg
push
test
pop
push
push
and
das
xor
add
jge
sub
jbe
cdq
add
loopne
daa
sub
jmp
outs
jae
sub
xor
push
lods
fs
sub
inc
inc
mov
cs
and
and
out
pop
pop
mov
sbb
sub
aaa
cmp
daa
push
lock
xor
and
inc
push
add
cld
cmp
pusha
push
aaa
loopne
mov
pop
push
pop
call
jo
and
daa
int
pop
bound
jns
pusha
add
push
pop
pushf
cld
mov
and
and
dec
push
push
gs
ja
jnp
sub
xor
sub
jo
or
jb
and
xor
cmp
pop
push
aaa
push
xor
outs
adc
out
sub
outs
jo
cmp
sub
cmp
push
daa
pushf
retf
ror
clc
ds
jb
jecxz
in
pop
pop
jnp
into
dec
push
pop
ds
sti
push
add
push
cs
pop
arpl
js
das
sub
push
shl
repnz
jbe
mov
and
loope
or
imul
xor
shr
sahf
cmp
mov
cmp
push
or
xor
xor
mov
pop
fsub
dec
adc
and
xor
push
ins
push
mov
ss
cwde
sbb
es
or
push
adc
ins
xor
cs
dec
add
call
es
dec
fild
or
js
xor
ret
arpl
sub
loopne
add
loopne
add
inc
jo
cmp
cmp
ret
shl
xor
push
adc
sbb
adc
cs
dec
push
je
(bad)
sub
iret
push
pop
addr16
jge
add
(bad)
test
jo
and
int3
cld
pop
bnd
jl
lods
jl
inc
out
dec
dec
or
mov
das
push
pop
data16
add
cmp
aas
mov
cmp
jns
not
call
lds
daa
mov
(bad)
mov
outs
cmp
(bad)
shl
and
movs
adc
outs
outs
ja
jle
add
mov
add
repz
push
add
jo
lahf
lock
adc
xchg
mov
cmp
push
mov
mov
pusha
rcl
add
loopne
imul
mov
pop
dec
inc
jae
mov
push
nop
jl
scas
shl
ficomp
xchg
sbb
loopne
xchg
repz
jmp
lahf
idiv
xlat
xlat
push
xlat
fcom
mov
jo
(bad)
fnstenv
push
fiadd
out
mov
(bad)
(bad)
rol
fcom
mov
rol
or
scas
or
or
out
mov
lea
mov
addr16
loopne
cs
mov
aas
jl
jmp
das
or
es
push
jmp
neg
push
repz
xchg
neg
jnp
push
push
cmps
pop
push
add
xchg
pop
push
xlat
push
jo
ja
(bad)
fist
scas
add
or
int
or
mov
mov
jbe
nop
inc
mov
cmp
adc
fsub
cmp
add
dec
mov
cwde
push
sar
pushf
push
mov
mov
mov
call
into
or
jg
mov
push
dec
lods
push
dec
push
push
(bad)
dec
jl
mov
mov
push
jo
scas
push
stos
lock
lock
stos
jbe
xor
dec
dec
pop
data16
ja
or
imul
out
dec
dec
cmp
imul
add
jb
and
inc
dec
mov
addr16
sub
cmp
ins
xor
and
mov
push
imul
and
stos
lock
data16
add
je
push
pusha
scas
push
call
and
sub
xor
inc
jl
jne
stos
call
adc
xchg
mov
inc
dec
pop
data16
fist
pusha
imul
xor
jl
aas
clc
add
xlat
dec
mov
das
ror
ins
add
add
push
add
outs
jb
jne
xor
arpl
add
loopne
imul
test
pusha
addr16
jp
daa
xor
mov
jb
ror
lods
in
and
aaa
adc
push
int3
add
pop
mov
push
and
cs
dec
dec
pop
cmpxchg
or
inc
icebp
pop
xor
aaa
push
push
aaa
fdivr
mov
xor
adc
js
and
push
gs
ds
xor
xor
push
sbb
jbe
and
fiadd
sub
xchg
xor
shl
cwde
sub
xor
aaa
or
je
push
pop
es
daa
sub
sar
or
cwde
cs
and
pop
mov
call
dec
pop
add
int3
inc
imul
sub
adc
fbld
pop
pusha
outs
add
jns
xor
add
stos
test
jb
data16
inc
inc
push
ss
cs
inc
dec
push
arpl
sub
inc
push
or
and
daa
xor
sub
fidiv
and
pop
ja
sbb
aaa
div
or
jl
and
push
mov
push
jns
and
push
push
push
rol
push
outs
mov
cmp
out
inc
ret
(bad)
or
lds
fcomp
push
das
or
repnz
scas
jmp
inc
cs
cmp
dec
push
pop
pop
fs
ja
jp
dec
pop
pop
and
cs
cmp
loopne
pop
add
dec
pushf
es
popa
jmp
adc
and
aaa
iret
dec
loop
add
aaa
sbb
inc
push
push
pop
pop
adc
push
call
xchg
xor
cmp
fild
inc
dec
movs
inc
mov
es
fsub
jp
add
push
out
fs
ss
mov
mov
pop
mov
inc
push
into
jbe
xor
adc
push
pop
popa
add
ss
xor
add
inc
sar
sub
cmp
push
pop
arpl
and
bound
rol
jnp
inc
mov
dec
pop
fs
in
xor
ds
dec
(bad)
cdq
(bad)
ins
ror
jno
enter
dec
push
pop
pusha
gs
adc
fwait
add
xor
push
mov
mov
fild
pop
pop
pop
data16
mov
sub
push
(bad)
addr16
jo
ss
aam
imul
inc
dec
mov
pop
mov
sbb
mov
imul
dec
jne
cmp
push
(bad)
movs
inc
cmp
adc
xchg
rol
adc
ret
cmp
popa
fisttp
push
or
or
pushf
sub
jp
push
sub
inc
fcomp
and
push
in
aaa
inc
dec
xor
pusha
pop
mov
add
fidiv
lods
add
cmp
xor
dec
push
push
add
pop
pop
rol
dec
into
pop
xor
jl
push
clc
jo
stos
pusha
and
ins
jl
add
push
outs
pop
cmp
call
es
daa
jbe
push
fs
xchg
dec
dec
jle
jb
inc
sub
xor
sub
mov
inc
mov
call
pop
push
sub
dec
stos
push
aad
push
pop
push
jns
sar
sub
or
enter
loopne
jo
jp
cmp
add
add
dec
or
and
bound
xor
and
pop
inc
dec
scas
stos
mov
sub
sub
inc
inc
dec
push
pop
xchg
push
fwait
inc
inc
add
push
pop
test
and
cs
mov
out
data16
cmps
das
sar
xor
ds
dec
push
inc
aad
mov
je
cmp
dec
inc
pop
push
in
cmp
mov
sahf
and
daa
xor
mov
rcl
push
cmp
loop
or
cmp
nop
pop
xor
ret
add
or
push
add
pop
test
imul
xchg
cmp
push
enter
push
xchg
retf
jb
es
inc
sbb
jb
sub
mov
or
and
xor
sub
mov
mov
and
cld
jne
and
sbb
sbb
ss
pop
iret
push
pop
pop
push
mov
retf
sub
sub
dec
dec
adc
mov
xchg
ret
sbb
pop
arpl
and
sub
dec
test
push
in
jmp
pop
push
adc
and
jae
inc
add
inc
xor
and
dec
fcom
ror
(bad)
hlt
push
push
pop
les
push
ss
call
inc
xor
cwde
or
adc
fisub
movs
shr
jo
inc
daa
ror
inc
inc
scas
add
jno
and
fdivr
dec
add
ret
add
cld
adc
les
arpl
jbe
xor
cmp
add
cmp
cli
xchg
or
sbb
add
das
das
cmp
mov
adc
ins
add
mov
dec
add
dec
out
outs
adc
sub
pop
inc
cmp
outs
fsub
xchg
stos
jo
ja
jne
add
rcr
and
js
push
sub
loopne
inc
inc
mov
xor
shl
inc
jo
inc
dec
fs
xchg
ins
inc
push
push
pop
arpl
sbb
xor
add
add
cmp
jbe
arpl
jbe
adc
scas
inc
inc
ja
inc
(bad)
jno
cmp
ss
pop
dec
or
les
pusha
cmp
inc
loopne
daa
inc
add
loope
ins
and
jmp
imul
cmp
cli
inc
fmul
xchg
dec
push
das
push
and
sub
test
cmp
inc
mov
inc
push
ins
and
push
pop
aam
and
addr16
mov
ds
push
enter
loopne
ins
sub
mov
push
pop
(bad)
icebp
add
xor
popa
cbw
add
in
adc
fisub
inc
inc
mov
pusha
add
pop
xor
push
adc
mov
mov
jg
mov
mov
das
xor
cmp
pop
adc
lock
test
inc
cs
push
mov
inc
dec
dec
push
add
mov
adc
push
adc
jnp
add
or
mov
dec
pop
test
mov
push
aad
push
jb
mov
jb
mov
push
pop
das
aaa
jl
or
jno
cmp
xor
dec
adc
cmp
pop
mov
push
lock
jno
jns
jle
fsub
inc
dec
push
mov
ins
jne
push
and
push
ins
dec
push
clc
stos
jb
and
loop
dec
in
lds
iret
dec
push
push
pop
shl
xor
xor
inc
stos
push
arpl
fs
inc
pop
push
mov
push
jp
iret
cs
add
(bad)
jno
push
sub
cld
test
push
pusha
inc
call
test
and
cmp
inc
sub
or
cmp
(bad)
ins
cmp
sbb
xor
lods
loop
and
sub
outs
cmp
push
sahf
and
rcl
les
mov
xchg
xchg
pop
push
add
aaa
xchg
pop
shr
dec
arpl
pushf
jge
call
scas
pop
pop
pop
add
or
dec
add
pusha
test
inc
push
rcl
mov
mov
or
xor
sub
inc
adc
cmp
addr16
push
call
push
rcr
(bad)
stos
pop
jl
nop
dec
pop
push
sub
and
inc
pop
and
arpl
dec
mov
cmp
inc
dec
aas
mov
or
pop
ins
jo
js
push
addps
arpl
cmp
pop
mov
inc
dec
pop
mov
xor
jo
jno
sbb
push
and
data16
xor
rol
add
inc
cli
test
and
pop
bound
jns
enter
add
cmps
dec
and
sub
js
jp
push
inc
xlat
test
pop
add
sub
push
mov
xchg
outs
pop
push
or
xor
dec
mov
inc
je
xor
sbb
ret
add
jno
sub
sbb
out
imul
repnz
push
mov
bound
outs
jae
sub
ret
lock
sbb
pop
xchg
push
inc
dec
arpl
sub
jo
inc
sbb
pop
pushf
mov
test
clc
add
cmp
pop
mov
stos
sbb
scas
mov
int
into
dec
dec
pop
out
outs
sub
mov
add
outs
inc
inc
or
cwde
add
lock
dec
push
fisubr
push
jmp
cwde
pop
inc
pushaw
inc
add
inc
push
xor
adc
adc
sub
outs
push
add
repnz
inc
stos
or
or
pop
lods
ja
and
push
jp
cwde
dec
adc
sar
inc
lods
xchg
jo
adc
sbb
sub
jbe
inc
mov
cs
sbb
addr16
mov
stos
push
mov
ret
jae
xor
jo
mov
ins
or
(bad)
arpl
int3
stos
adc
movs
daa
push
pop
add
jbe
and
inc
cwde
inc
neg
push
or
and
cmp
dec
xchg
sub
icebp
mov
inc
ret
jb
in
cmp
push
push
push
movs
sub
ds
dec
ficomp
mov
outs
pushf
cs
dec
inc
push
test
push
jne
ret
loope
push
cmps
dec
sub
test
inc
push
jb
movs
push
add
pusha
push
pop
mov
test
retf
pop
popa
mov
pop
sbb
bnd
test
aad
or
aaa
inc
or
(bad)
sub
fsubr
xor
popa
sbb
cli
push
xor
je
ror
push
push
in
push
or
push
mov
daa
push
push
dec
xor
cs
or
in
and
clc
mov
and
mov
inc
pusha
es
jb
(bad)
adc
js
jle
add
inc
jne
inc
es
in
jmp
aad
aaa
and
jb
sub
xor
xchg
push
sub
jmp
jecxz
jb
push
pop
mov
mov
pushf
je
cmp
mov
push
(bad)
call
add
ret
cmc
pop
and
add
adc
cmp
xor
jno
add
call
dec
inc
imul
jge
sub
(bad)
mov
jo
hlt
jne
iret
add
dec
jg
imul
cmp
pop
popa
add
or
add
sbb
je
ins
cmp
adc
inc
push
sub
mov
push
fs
mov
(bad)
sub
iret
jbe
or
cmp
ss
push
sbb
inc
mov
inc
or
push
adc
daa
cmp
xchg
cld
pop
arpl
and
cld
push
xor
push
icebp
test
pop
add
loope
cwde
dec
push
pop
jo
or
fadd
lea
push
pop
push
je
and
xor
mov
jo
jl
int3
test
daa
pop
pop
add
popa
es
jmp
mov
dec
sbb
jmp
add
cli
jp
das
dec
addr16
inc
sbb
lods
jbe
ds
add
fdivr
sbb
aam
adc
xchg
call
leave
pop
rcr
mov
sahf
(bad)
or
push
pop
xchg
loopne
xor
test
bound
ss
fwait
inc
fadd
dec
pop
adc
and
mov
jbe
xor
icebp
push
xchg
sbb
out
dec
sub
dec
ins
inc
or
inc
je
ss
mov
add
jbe
sub
shl
add
push
pop
test
xor
push
cs
inc
sahf
push
bound
cs
sbb
ds
fbld
jg
ins
push
sub
sbb
imul
dec
push
push
jno
add
jo
out
dec
pop
fs
jmp
cmp
into
arpl
and
or
jmp
cmc
mov
(bad)
pop
rcl
aas
pop
push
daa
dec
dec
sahf
mov
jne
cmp
dec
pop
jle
and
and
sbb
jp
add
or
hlt
push
or
push
pop
scas
pop
or
shl
aas
xor
imul
pop
adc
xor
inc
and
cmp
leave
(bad)
fnstcw
test
push
rep
(bad)
call
push
push
push
ins
and
mov
outs
push
cwde
inc
pop
clc
push
scas
cmc
push
inc
cmps
add
inc
adc
nop
pop
dec
mov
sub
ja
scas
fnstcw
and
fsubr
into
push
ds
ss
cmp
iret
jbe
sar
rcl
jo
jp
rol
rcl
add
aad
out
(bad)
dec
push
data16
mov
push
fsubr
mov
fisttp
sahf
fild
(bad)
fisttp
mov
or
jnp
test
adc
hlt
mov
fld
jl
push
jge
test
out
test
xchg
add
in
into
and
mov
xchg
test
test
xchg
xchg
adc
ja
loop
iret
pop
xchg
loopne
cwde
jo
sbb
call
(bad)
out
lods
inc
mov
test
out
and
jge
es
lods
pop
and
inc
inc
push
push
out
jp
aaa
inc
gs
fsub
jno
and
daa
loopne
xchg
leave
mov
adc
push
inc
pop
out
push
sub
push
fsub
xchg
and
push
push
jbe
ss
pop
sbb
jo
inc
stos
aaa
jge
dec
pop
pop
jp
cmp
adc
popa
adc
addr16
sbb
scas
add
hlt
js
daa
adc
dec
pop
push
sbb
xor
inc
or
neg
js
popa
popa
outs
jp
add
jecxz
pop
outs
outs
pop
gs
inc
mov
cwde
dec
dec
mov
test
(bad)
xchg
cdq
inc
and
inc
and
push
aad
js
xor
pop
inc
sub
clc
push
sub
inc
rcl
add
push
and
inc
inc
dec
dec
mov
sbb
ds
cmp
fcom
add
sub
scas
dec
scas
or
inc
cmp
outs
push
and
pop
jle
mov
push
xor
cmp
push
push
aas
jecxz
mov
push
pusha
imul
sbb
dec
push
pop
push
add
push
and
mov
das
jle
into
and
dec
add
mov
jo
mov
dec
push
pop
push
mov
pop
dec
mov
mov
sub
pop
(bad)
mov
scas
push
or
and
ss
test
stos
pop
ins
jns
sub
cmp
data16
sub
xor
test
push
sbb
test
add
add
cmp
push
sbb
(bad)
dec
imul
cwde
xor
ror
inc
sbb
add
jle
ja
das
dec
sbb
pop
and
into
push
mov
jnp
xor
ss
loopne
adc
xor
inc
xor
pop
int3
cmp
popf
sbb
push
sub
xor
ins
pop
gs
xlat
or
loope
hlt
outs
jae
das
push
jecxz
push
inc
int3
outs
ja
jl
xor
lock
pop
shr
data16
push
push
dec
icebp
pop
scas
imul
add
mov
shl
cmp
dec
pusha
pop
test
inc
push
pop
pop
imul
mov
add
stos
cmp
retf
jnp
es
pusha
ins
jae
stos
test
jmp
push
scas
xor
je
inc
mov
push
fs
and
scas
pop
push
lahf
push
dec
push
add
and
inc
sub
xor
dec
adc
daa
lock
pop
je
and
test
pop
bound
add
or
push
and
bound
mov
inc
inc
dec
les
bound
je
ds
mov
jmp
push
mov
inc
arpl
inc
adc
push
mov
and
cmp
adc
or
movs
outs
jae
xchg
loope
adc
imul
push
push
je
adc
in
ficom
or
test
js
sub
jl
int3
inc
js
shl
jp
movs
mov
push
jne
pop
mov
mov
(bad)
pushf
xor
inc
lahf
dec
push
push
and
inc
and
jmp
xor
add
cmp
ins
ins
sub
addr16
inc
mov
sbb
(bad)
aam
inc
push
pop
frstor
mov
push
test
fcmovu
dec
pop
test
inc
sbb
jle
sub
sub
sub
sub
adc
sub
sbb
cmp
dec
mov
push
popa
or
xchg
repnz
add
loope
iret
mov
and
mov
xchg
and
adc
stos
and
nop
dec
cli
mov
sbb
sub
cmp
test
mov
repnz
cmp
sub
inc
xchg
cmp
sbb
or
dec
rol
dec
pop
pop
pop
data16
jb
add
adc
ja
mov
push
add
test
inc
(bad)
aad
mov
scas
jo
sub
pop
mov
(bad)
dec
cmps
mov
movs
cmp
stos
xor
push
movs
ins
pop
stos
fnsave
int3
sub
and
add
test
xchg
add
jle
cmp
sub
mov
cmp
xchg
ins
mov
ins
push
arpl
outs
push
adc
and
and
sahf
inc
mov
cmp
popa
(bad)
push
cmp
mov
sub
pushf
fcmovu
or
inc
push
dec
sbb
scas
pop
aas
sub
xor
dec
dec
push
and
nop
pop
mov
adc
mov
mov
push
rcr
push
bound
mov
cs
and
mov
push
and
sbb
adc
cmp
arpl
mov
dec
cmp
adc
add
pop
add
loopne
sahf
mov
sbb
add
rcl
jnp
sbb
dec
sbb
sbb
push
sbb
and
ja
or
(bad)
push
sbb
jae
xchg
adc
add
pop
add
scas
add
rol
adc
add
aas
add
sbb
lahf
ins
dec
inc
nop
les
adc
dec
inc
lahf
and
js
add
inc
inc
dec
or
addr16
out
fs
inc
mov
sbb
mov
push
jo
xchg
and
ss
dec
nop
sti
ror
nop
xchg
pop
rol
sbb
aaa
dec
dec
pop
lock
add
dec
push
or
pusha
into
movs
or
push
xor
cmp
int3
mov
test
jnp
imul
adc
scas
or
add
jle
pop
and
inc
repnz
xor
pop
inc
sbb
pop
push
jo
sub
push
sbb
or
sbb
push
jb
adc
push
jge
pop
or
and
nop
mov
pop
or
ja
pop
sbb
or
xor
into
sub
nop
push
nop
nop
(bad)
bound
and
inc
mov
inc
scas
js
jns
scas
dec
sub
or
mov
js
and
push
adc
cmp
and
das
sub
add
lock
popa
stc
pop
cmp
push
mov
xor
adc
xlat
add
gs
inc
call
pushf
xor
xor
pop
pop
ins
add
aaa
cli
xor
jns
pusha
mov
inc
jl
cmp
nop
or
data16
sub
fwait
pusha
adc
retf
and
loopne
call
js
sub
xchg
scas
push
mov
inc
bound
xor
ins
loop
arpl
cs
or
fadd
add
xor
push
adc
das
push
outs
xor
clc
xor
jge
in
lock
sub
cmp
jo
lods
jecxz
into
loope
add
cmp
(bad)
adc
cmp
and
or
gs
push
adc
add
inc
dec
dec
adc
sar
jmp
bound
jnp
aaa
ds
dec
push
pusha
ins
test
dec
pop
fs
and
fild
and
xor
lea
inc
shl
fwait
loope
and
sub
push
mov
jne
ins
push
push
cmp
dec
push
push
inc
jge
dec
clc
pop
cs
je
mov
outs
nop
js
dec
push
push
pop
imul
ds
popa
arpl
jno
daa
nop
pop
scas
jbe
add
pop
inc
outs
mov
sub
and
xor
jnp
es
jnp
mov
dec
push
imul
jo
adc
cmp
push
and
xor
inc
and
popa
ret
out
cmp
and
xor
inc
into
imul
mov
inc
push
je
mov
or
sub
das
xor
(bad)
dec
dec
jg
imul
cs
inc
mov
ror
or
gs
imul
test
dec
out
dec
dec
add
push
mov
xor
push
rcl
sub
outs
jb
xor
or
xchg
push
retf
aaa
aas
add
nop
push
add
add
inc
sub
(bad)
and
das
ja
sub
push
mov
add
mov
fs
cs
or
push
dec
pusha
push
cmp
data16
cli
imul
inc
push
pop
ins
enter
xor
dec
push
bound
add
inc
adc
adc
ja
xor
repnz
push
fs
push
mov
xchg
inc
dec
pop
dec
je
sub
sbb
aaa
(bad)
adc
inc
mov
xor
xor
pop
pop
out
ins
add
and
movs
push
aam
out
cmp
aas
es
mov
in
dec
ss
cmp
cmp
push
xor
das
xor
xchg
inc
sbb
popa
mov
cmp
cmp
dec
push
mov
and
fild
and
imul
and
push
test
mov
pop
xchg
xor
pop
push
sub
inc
pop
pop
pop
pusha
xlat
and
pop
int3
(bad)
jne
pusha
ins
je
and
dec
xchg
jae
movs
adc
je
(bad)
movs
jb
fmul
pop
mov
inc
jle
jbe
cwde
inc
and
push
clc
in
data16
pop
and
mov
inc
dec
dec
scas
jge
leave
or
aam
in
(bad)
mov
mov
pop
out
mov
sbb
and
(bad)
pop
adc
or
out
pushf
fsubr
adc
inc
inc
push
inc
jb
js
pop
fs
push
cmp
sahf
push
jne
jge
add
and
aam
ins
nop
cs
cmp
dec
pop
gs
push
xchg
cmp
adc
inc
loop
pop
gs
inc
fisub
add
and
jbe
jp
dec
or
sub
cmp
xor
or
mov
jbe
dec
inc
pop
pop
push
aaa
mov
push
pop
pop
iret
inc
push
fadd
je
mov
adc
lods
inc
pop
xchg
add
pop
bound
in
push
cmp
test
push
add
add
jge
and
inc
dec
repnz
popa
(bad)
xor
add
pop
pop
les
arpl
push
mov
pop
outs
xchg
xor
mov
push
add
jmp
mov
bound
inc
cmps
push
js
test
jge
adc
lock
dec
push
pusha
mov
pop
outs
popa
js
rol
push
je
push
imul
inc
in
add
jne
call
push
pop
aas
jae
xor
les
adc
inc
nop
sar
pop
je
je
outs
leave
or
inc
dec
push
push
add
es
stos
rol
pop
fsub
fwait
dec
call
xchg
nop
mov
imul
cmps
cmp
loop
mov
mov
sbb
js
xor
jo
pushf
inc
mov
gs
pushf
push
stos
sbb
inc
mov
mov
or
pushf
jo
add
sub
sub
pusha
movs
ja
xor
mov
lahf
mov
jo
movs
movs
push
fdiv
xor
cmp
aaa
push
push
pop
sub
cmps
mov
xchg
jne
mov
jp
mov
rol
cld
and
inc
push
mov
jp
js
and
xchg
add
dec
push
add
inc
mov
nop
cwde
in
sub
in
outs
shr
arpl
xchg
add
fwait
add
jbe
add
call
jne
aam
pop
mov
cmps
es
retf
push
(bad)
outs
dec
jne
scas
pop
and
xor
dec
push
jmp
push
pushf
adc
sbb
push
test
dec
inc
pop
pop
or
mov
sbb
aas
inc
push
sub
inc
jne
inc
lock
push
and
xor
lods
rol
and
mul
add
xor
inc
jbe
or
fiadd
sub
xor
pop
cld
sahf
sbb
jo
push
inc
pop
cmp
out
inc
call
dec
mov
adc
inc
inc
adc
popf
outs
push
push
or
arpl
sbb
test
sbb
clc
shr
jne
sbb
push
mov
mov
sbb
add
mov
push
or
add
mov
aaa
shl
ins
push
xchg
fdivr
cmp
xchg
mov
ss
mov
loopne
jbe
pusha
outs
xchg
xor
adc
popf
and
bound
fs
and
push
loopne
xchg
pop
xchg
mov
xchg
add
stos
cmp
pop
stos
cmp
stos
add
pop
push
pop
gs
dec
pop
dec
and
add
push
add
pop
jo
mov
into
cmps
div
jbe
arpl
dec
dec
pop
bound
jp
xor
push
dec
sbb
adc
cmp
loope
ss
xor
dec
out
pop
imul
adc
xor
fdivr
and
xor
lock
shl
aam
sbb
cmp
adc
aaa
cdq
les
mov
fs
sbb
dec
push
loopne
dec
and
xor
cmp
inc
add
shl
inc
push
sub
jp
test
pop
imul
xor
or
add
dec
loop
paddd
and
daa
xor
push
pop
rol
ins
outs
and
dec
fidiv
and
cmp
jmp
outs
push
aas
arpl
loop
mov
dec
or
loope
xchg
xchg
inc
rcl
out
movs
mov
jmp
and
inc
(bad)
sbb
les
xchg
jecxz
rcl
adc
or
sub
cwde
pop
push
(bad)
cdq
rol
push
adc
push
aaa
hlt
push
sbb
sub
inc
retf
shr
xor
sbb
inc
dec
shl
add
nop
pop
aaa
outs
aaa
aad
sub
mov
inc
ror
jnp
xor
lock
add
push
mov
idiv
pop
push
or
inc
dec
xchg
cmp
push
mul
gs
mov
outs
aaa
xchg
test
and
popa
ins
jb
adc
(bad)
(bad)
call
pushf
add
jmp
sbb
pop
bound
mov
lock
sub
xor
(bad)
je
enter
or
sbb
sub
inc
scas
outs
sbb
sbb
xor
sbb
popa
jne
jbe
dec
jnp
stos
xor
adc
jmp
gs
dec
jg
loopne
cmp
ins
ins
jno
jp
sub
push
add
lods
mov
dec
and
lds
mov
das
cmp
jb
sbb
or
mov
jmp
push
xchg
jo
pop
xchg
sub
add
inc
rol
jp
push
dec
pop
mov
hlt
and
mov
je
mov
or
mov
or
mov
mov
ins
jae
aaa
dec
adc
push
adc
push
add
mov
xor
jmp
inc
push
xchg
lods
or
cmp
cmp
retf
sub
inc
xchg
inc
pop
cmp
sub
sub
sub
ficomp
cli
inc
inc
push
mov
and
ss
pop
adc
add
add
stos
push
xchg
jo
and
(bad)
dec
or
adc
xchg
inc
and
inc
ins
sbb
mov
inc
inc
call
jb
lods
sbb
dec
pushf
dec
cmp
push
or
mov
mov
loop
jp
inc
xor
aas
lahf
dec
dec
pop
je
push
lds
jge
rol
mov
dec
dec
push
arpl
mov
inc
jp
inc
sub
jl
push
and
push
dec
jecxz
mov
aas
rol
pop
xchg
ins
outs
rcl
popa
add
add
push
sar
inc
or
sub
xor
push
ins
jmp
stos
push
jl
pusha
sub
aam
mov
sub
and
dec
adc
or
pop
xor
test
xor
scas
dec
je
xor
mov
xor
xor
test
(bad)
les
ins
js
mul
push
mov
cwde
sbb
xchg
add
daa
xor
aaa
xchg
push
cmp
or
pop
pop
xor
pusha
sub
mov
mov
push
je
dec
jo
add
mov
rcl
mov
adc
or
push
push
xchg
pushf
in
or
add
adc
sbb
je
jbe
shl
cmc
sbb
push
push
ss
lods
sub
add
push
pusha
repnz
cdq
xor
mov
cmp
or
popf
(bad)
inc
push
ja
and
push
xchg
adc
or
xor
or
adc
fist
bound
sub
dec
jecxz
lods
das
fild
shl
cmps
cmp
imul
test
cmps
fsub
xchg
shl
fcom
dec
inc
xchg
mov
(bad)
and
pop
call
pop
test
dec
mov
xor
dec
retf
sub
js
sub
outs
xor
je
popa
ins
inc
ins
outs
sub
aam
fild
js
fild
push
cs
pop
jae
aaa
and
fsub
loope
or
aam
sbb
dec
addr16
inc
les
dec
pop
lock
sub
inc
ds
adc
(bad)
retf
xor
cmp
lock
pop
outs
ficom
test
and
and
sub
jecxz
inc
sub
pop
xor
jmp
jne
sti
or
addr16
and
fdivr
add
mov
inc
adc
adc
xchg
xchg
pop
outs
jno
cmp
ds
ss
jbe
adc
dec
or
test
add
mov
(bad)
push
lods
add
rcl
jne
mov
cmp
push
cmp
and
cmp
retf
bound
sub
dec
push
(bad)
mov
js
outs
adc
test
sbb
adc
pop
lods
cmp
inc
pop
data16
dec
dec
inc
push
into
stos
lods
outs
ret
jae
xor
pop
mov
ror
cs
aam
mov
inc
imul
xchg
push
sub
aad
add
nop
jne
pushf
imul
push
xor
push
outs
lods
dec
lods
fnstcw
cmp
dec
push
stos
or
jmp
xor
and
cmp
jo
cmp
sub
xchg
mov
ror
mov
push
cmp
test
clc
fsubr
jl
cmp
je
or
shl
xor
out
jle
outs
adc
push
xor
pop
mov
sub
shl
and
add
test
xchg
ds
xchg
sbb
fs
sbb
inc
or
ins
push
dec
mov
adc
inc
imul
sub
push
aam
data16
xchg
add
ins
push
jo
sub
xchg
fs
mov
or
(bad)
pop
call
inc
push
into
ds
retf
or
cld
imul
and
outs
mov
jp
xor
dec
dec
add
push
sbb
jle
ror
jo
int3
sbb
imul
and
cmp
unpckhps
mov
pop
fidiv
xor
and
adc
mov
or
call
add
xor
pop
cs
push
push
adc
add
xchg
sbb
sub
push
ret
jecxz
outs
popa
dec
adc
push
or
pusha
push
jp
test
scas
movs
arpl
xor
add
jmp
test
push
pop
xchg
repnz
ret
aaa
aad
and
sahf
pop
mov
jb
xor
mov
cmps
adc
inc
and
adc
xor
or
pop
je
inc
pop
loop
into
ror
dec
bound
ins
outs
inc
or
test
push
add
cmp
or
add
mov
(bad)
(bad)
sub
sub
xchg
es
jbe
xor
cmps
push
inc
jb
gs
enter
jne
dec
out
imul
fucomip
pop
addr16
nop
inc
bound
imul
arpl
push
jmp
mov
inc
push
ret
jb
ds
cmp
out
xchg
add
inc
ins
pushf
test
push
pop
out
aad
jne
xchg
pop
into
jns
cmps
add
sbb
push
and
cmp
add
fiadd
pop
test
popa
fnstcw
adc
push
and
lods
imul
sub
adc
fistp
pop
add
dec
dec
add
sub
push
mov
push
lods
sbb
pop
ss
rcr
shl
adc
fwait
add
sub
dec
dec
mov
or
sbb
mov
adc
mov
add
lods
div
imul
sub
sbb
cmps
pusha
jl
adc
mov
inc
push
hlt
test
dec
pop
mov
mov
xchg
fs
mov
cld
outs
push
out
pop
out
ds
xor
fisubr
cmp
fsub
les
sub
push
repnz
sbb
lods
fstp
and
sub
mov
and
sub
ins
mov
scas
rsm
pop
test
cmp
inc
rcl
outs
data16
push
jo
sbb
rcl
aam
iret
ins
jb
test
xchg
lock
call
mov
push
jbe
mov
jb
inc
cmps
push
push
sub
cmp
push
nop
imul
das
xor
inc
mov
pop
or
xchg
adc
ins
mov
inc
sub
sub
cli
data16
cmp
pushf
sub
pop
adc
xor
add
movs
push
stos
adc
push
pop
loope
pop
popa
data16
cmp
sub
pushf
dec
cld
daa
sub
test
call
and
shl
jl
je
add
dec
push
mov
dec
sub
dec
ins
lea
inc
imul
and
fiadd
push
jno
add
and
dec
nop
pop
dec
mov
xchg
js
daa
loopne
fisubr
data16
daa
pop
lods
or
dec
lock
jl
sub
loope
test
and
add
lds
add
push
dec
sbb
daa
scas
push
sub
popa
pop
adc
call
cmp
sub
sar
add
retf
push
lods
and
cmp
daa
mov
es
sub
test
sub
xchg
pusha
sub
mov
adc
jo
xor
shr
stos
push
push
bnd
add
and
sub
(bad)
dec
cli
pop
and
cwde
cmp
sub
push
(bad)
and
push
pop
and
jnp
sub
push
or
push
ret
pop
ins
test
sub
or
xchg
out
push
sbb
aad
inc
cmps
popa
jl
add
movs
and
or
mov
xor
add
retf
xor
or
push
sub
mov
stos
and
push
(bad)
outs
ins
cmp
xchg
push
adc
xchg
mov
jmp
ss
push
mov
es
push
loope
add
jp
adc
aam
call
out
fsub
and
jne
inc
dec
fs
pop
add
jbe
pop
and
jp
pop
add
sub
or
cmp
pop
mov
pop
inc
and
es
push
into
sbb
data16
lods
push
mov
xor
push
or
jl
xor
inc
hlt
call
sub
xor
sub
sahf
xor
pop
outs
imul
fist
push
dec
push
push
int3
pop
je
and
js
data16
or
test
jno
adc
inc
adc
inc
fsubr
push
adc
or
xchg
and
mov
and
push
test
or
push
add
cmp
dec
or
add
sub
push
mov
push
xchg
inc
sub
push
fs
lods
inc
and
out
push
adc
push
dec
mov
scas
sbb
sbb
ins
rcl
shl
inc
push
push
push
mov
dec
fsubr
jl
xor
pop
inc
or
sbb
sbb
aas
dec
and
push
scas
pop
ins
jmp
pop
data16
fdiv
dec
mov
xor
mov
mul
cmp
xchg
rcr
xor
mov
add
bound
adc
or
jb
es
sub
add
dec
xlat
loope
pop
xor
push
push
adc
fs
scas
in
add
lods
adc
jnp
inc
cmp
inc
or
addr16
xor
jmp
ror
pusha
jo
cs
add
jle
ret
enter
mov
cmps
jb
rcl
(bad)
movs
cs
jno
push
das
add
cmp
and
and
ss
xchg
inc
dec
inc
outs
push
icebp
pop
or
and
and
push
sub
push
and
mov
mov
test
push
sbb
mov
xor
dec
add
cwde
fidivr
add
add
or
fmul
fs
add
add
push
cwde
pop
push
push
sub
mov
xor
dec
cld
lea
sahf
mov
add
cmp
aam
imul
fs
and
mov
cli
xor
mov
jae
aas
fidivr
test
adc
and
cmp
inc
jae
cs
enter
add
ins
enter
lock
jp
add
bound
add
push
test
mov
sbb
cwde
js
int3
push
scas
and
retf
adc
adc
test
add
mov
rcl
mov
das
arpl
push
xor
pop
sub
fild
push
sub
inc
cmovae
fwait
imul
pop
and
inc
sub
shl
repz
ds
rcl
scas
push
jo
adc
stos
pop
pop
pop
mov
imul
test
mov
(bad)
jg
dec
sbb
ins
dec
das
and
and
inc
fnstcw
mov
add
and
pop
add
and
lds
add
mov
mov
jecxz
fisttp
aas
and
mov
ss
int
mov
add
jno
into
xchg
pop
or
(bad)
mov
xchg
pop
adc
jl
add
pop
fs
es
nop
inc
lods
out
and
cmp
(bad)
cmp
push
pusha
pop
inc
inc
inc
mov
pop
imul
mov
sub
mov
add
push
and
or
adc
and
add
fild
cmp
je
jl
adc
xor
mov
dec
pop
push
sbb
xor
add
mov
sub
rcl
inc
adc
push
bnd
xor
clc
dec
cmp
dec
add
enter
jp
loope
sbb
loop
aaa
retf
pop
sub
adc
and
scas
jg
jmp
or
sub
push
push
lock
js
es
jo
mov
das
xor
dec
mov
inc
cmp
les
jecxz
fisttp
and
test
jb
dec
add
add
and
add
mov
xchg
inc
jno
daa
sub
cmp
test
hlt
jno
cmp
xor
or
sbb
mov
xor
pop
push
imul
pop
aam
dec
push
call
sub
cmps
pop
mov
fs
imul
xor
adc
jb
add
add
je
dec
adc
mov
pushw
or
dec
adc
inc
pushf
movs
add
test
mov
mov
hlt
pop
fs
test
dec
adc
or
fdivr
sub
add
push
outs
dec
dec
and
push
xchg
inc
dec
sub
sub
test
fsubr
inc
add
sub
or
xor
mov
push
inc
ror
mov
dec
xchg
sub
js
fcom
fimul
pop
and
sub
xor
pop
pop
or
mov
add
je
mov
inc
push
daa
xor
clc
js
mov
cmp
add
int3
add
data16
retf
and
mov
dec
scas
test
fsubr
sub
xchg
and
retf
sub
and
mov
jmp
jl
inc
jnp
das
xchg
jbe
aaa
cmp
dec
pop
arpl
xchg
dec
jb
jmp
jb
es
push
popa
rcr
mov
outs
js
sub
loopne
adc
shl
sahf
add
xchg
lea
fdivr
xchg
push
cmp
shl
shl
dec
inc
or
xor
mov
rcr
mov
mov
gs
inc
xor
test
jb
test
data16
mov
push
mov
pop
loopne
inc
das
dec
rcl
jns
es
dec
dec
and
popa
ins
push
inc
adc
xor
inc
clc
and
push
es
xor
stos
movs
push
inc
xchg
sub
jne
adc
leave
dec
dec
add
sub
push
popa
mov
je
sbb
popa
gs
ss
rcl
movs
dec
sub
mov
or
dec
shr
and
sub
test
mov
add
add
pop
popf
test
xor
cmp
js
outs
pop
dec
dec
ffreep
jb
call
mov
or
cs
sub
inc
jl
xchg
inc
inc
inc
pusha
adc
retfw
sbb
jl
cmp
or
and
pop
and
pop
shl
xor
push
or
dec
popa
push
mov
cli
mov
pop
out
das
mov
movs
add
adc
mov
inc
mov
xchg
mov
pushw
or
ficom
data16
out
shl
cdq
or
push
add
shr
scas
imul
xor
or
xor
xor
adc
dec
rcl
add
rol
rcl
add
inc
cs
pop
pop
ins
movs
xor
mov
cmps
dec
fwait
mov
sar
aas
dec
fld
mov
retf
push
repnz
inc
inc
dec
cmps
push
mov
pop
imul
inc
fdivr
sub
cli
mov
mov
mov
pop
jno
pop
dec
xchg
pop
jne
and
jbe
clc
inc
ins
arpl
jp
or
and
fidiv
sbb
xor
dec
inc
inc
fs
mov
xor
dec
jl
add
push
inc
ins
test
xor
rol
add
add
pusha
adc
push
add
dec
fcom
push
fisub
push
mov
ret
sbb
inc
fsub
aaa
xchg
mov
push
inc
das
pop
lods
and
mov
xor
dec
cmps
ss
xchg
ret
cmp
repnz
out
enter
aam
cmp
inc
and
add
sub
mov
nop
dec
mov
or
cmp
push
jl
mov
ins
jae
adc
and
mov
dec
sub
dec
cli
and
xor
cs
call
xor
mov
pop
dec
and
enter
push
cwde
stos
add
inc
mov
mov
xor
outs
gs
and
cli
sub
push
inc
add
aam
adc
push
stos
cs
ins
adc
sub
and
xor
mov
call
(bad)
call
sbb
rol
xchg
inc
adc
dec
dec
data16
pusha
jb
add
inc
and
inc
xor
mov
mov
jp
sub
sbb
imul
and
ins
cmp
add
push
je
jp
pop
ins
je
mov
bound
push
cmp
dec
xor
pushf
inc
je
call
push
cs
inc
rol
add
js
inc
js
xchg
sbb
and
sub
add
inc
les
dec
add
aam
rcr
sahf
pop
ret
popa
fs
sub
and
or
xor
or
mov
add
sub
add
ss
cmp
dec
nop
stos
aam
xchg
jae
popa
shl
pop
inc
pop
shl
dec
aas
or
add
lods
sub
add
push
push
push
add
add
inc
add
aaa
ja
or
push
pop
call
in
push
xor
mov
sbb
or
jecxz
dec
pop
add
out
outs
push
and
call
movs
pop
pop
push
popa
movs
push
lea
jne
and
scas
mov
add
or
push
mov
scas
adc
pop
xor
ss
inc
add
call
fdiv
pusha
outs
jl
sub
or
cwde
clc
loopne
add
mov
dec
add
dec
sub
movs
jne
popf
loope
push
xor
mov
and
pop
mov
push
or
jo
push
adc
xor
ins
push
and
sub
add
and
dec
enter
enter
or
mov
test
and
jecxz
mov
adc
and
(bad)
outs
mov
add
add
sbb
jo
lock
sbb
xchg
add
mov
ins
js
and
xor
and
or
int3
add
stos
add
xchg
adc
xchg
dec
mov
test
push
addr16
sbb
push
add
inc
or
fs
xchg
lods
adc
pusha
pusha
push
xchg
retf
pop
add
cmp
pop
adc
stos
add
add
dec
lahf
pop
gs
sub
(bad)
xchg
adc
dec
cmp
jbe
inc
or
sub
or
into
dec
inc
fmul
sub
test
xor
xchg
xor
pushf
mov
leave
rcr
add
and
xchg
cs
mov
push
adc
xchg
mov
or
gs
mov
repnz
imul
inc
sub
into
sub
xchg
dec
nop
nop
push
mov
cwde
cs
push
ds
add
lea
jg
fwait
pop
ins
inc
in
mov
pop
dec
mov
and
sub
fnstenv
test
xchg
sub
mov
add
sub
and
cmps
push
lods
add
sar
fiadd
inc
or
push
adc
(bad)
pop
jo
pusha
cmp
pop
ss
inc
in
hlt
and
movs
pop
mov
xchg
les
pop
sub
mov
or
or
shl
inc
sti
int3
sub
jg
mov
pop
jmp
call
loope
push
fisub
push
pop
daa
daa
mov
or
cwde
adc
mov
and
cmp
push
adc
push
(bad)
hlt
mov
sbb
inc
dec
lods
push
sub
sbb
ret
xor
push
bound
popa
or
jmp
xchg
cmp
lods
dec
sub
jge
or
adc
pusha
sub
sub
jl
cmp
adc
and
mov
ins
push
mov
pop
rcl
dec
js
and
movs
or
push
dec
cmp
adc
leave
push
pushf
pop
xchg
ins
rol
add
xchg
push
dec
mov
dec
add
or
es
inc
sahf
call
jnp
mov
in
mov
test
push
mov
sub
add
push
mov
cmps
neg
in
pushf
jge
sub
rcl
ja
mul
dec
pushf
das
or
rol
push
stos
jo
jne
ss
fdivr
dec
or
sub
ret
pop
fs
mov
rol
fmul
inc
push
xchg
cmp
xor
push
pop
outs
adc
aaa
aas
dec
pop
ror
popa
int
and
imul
push
sbb
jnp
push
and
loop
pop
mov
inc
dec
push
push
bound
and
sub
fimul
mov
mov
push
push
dec
push
pusha
seta
loope
push
jbe
xor
test
outs
adc
jmp
sub
push
and
and
adc
inc
inc
push
push
mov
add
sahf
inc
dec
shr
sub
aam
ins
xor
jne
mov
and
adc
cmp
add
sbb
cld
pushf
pop
mov
mov
dec
push
pop
pop
mov
and
pop
jne
test
dec
xchg
push
retf
stos
and
jb
or
and
mov
pop
addr16
or
push
jo
popa
pop
jp
xchg
push
adc
inc
cmps
movs
retf
sbb
loopne
jle
js
xor
call
sbb
jae
mov
(bad)
fsubr
or
nop
mov
add
in
xchg
push
loopne
jno
xor
cs
mov
movs
sbb
ss
pusha
adc
test
ins
shr
jb
test
inc
test
and
push
mov
dec
xchg
or
mov
mov
mov
test
mov
test
or
les
pop
sbb
push
in
jmp
pusha
sbb
jb
push
dec
push
int
test
dec
inc
pop
and
jbe
ret
dec
dec
push
inc
sbb
shr
or
ror
and
xchg
mov
rol
push
mov
dec
and
cs
mov
ror
mov
out
enter
add
div
xchg
sbb
es
pop
loopne
pop
adc
push
bound
inc
add
ins
mov
pop
cmp
cmp
pop
mov
inc
test
rol
add
sub
cmp
ins
jne
test
add
mov
mov
xor
dec
lock
sub
adc
push
xchg
sbb
hlt
pop
add
(bad)
dec
inc
dec
dec
scas
lds
and
test
mov
mov
sbb
xchg
ror
xor
dec
pusha
add
and
sbb
push
mov
and
add
mov
dec
mov
jno
outs
sub
dec
and
sub
or
add
inc
sub
pop
bnd
mov
adc
xchg
ret
fisub
loopne
push
bound
xchg
fs
and
add
imul
push
lock
sbb
mov
sub
or
xor
jmp
aam
xor
inc
add
fisubr
add
cmp
adc
jbe
push
cli
std
push
cli
dec
mov
dec
push
and
fwait
lock
imul
mov
jno
add
or
addr16
xchg
inc
rcr
leave
inc
imul
dec
dec
imul
xchg
push
loop
fs
lock
nop
push
and
mov
mov
call
pop
jmp
pop
pop
pop
and
jns
push
and
jne
inc
dec
aam
and
push
dec
push
or
pop
xor
jo
push
push
sub
lods
xchg
cmp
dec
dec
outs
jb
fbstp
sub
add
push
jbe
push
pop
popa
outs
pushf
cmps
add
pop
adc
outs
test
ins
sbb
mov
inc
cs
dec
sbb
shr
sub
test
inc
dec
cmp
test
adc
mov
mov
mul
inc
add
push
mov
and
pop
cmps
and
js
test
adc
dec
pop
sbb
sbb
dec
call
mov
adc
fsub
jb
adc
pusha
sbb
xchg
jp
sbb
mov
inc
dec
or
es
and
sbb
daa
cs
fwait
jmp
or
push
mov
dec
jg
fwait
jo
add
aam
or
popa
fsubr
cwde
mov
outs
outs
sub
(bad)
sbb
or
mov
and
mov
cmp
add
push
add
and
xor
inc
dec
dec
dec
xchg
rol
push
jmp
test
pop
jl
lahf
lods
push
or
imul
push
pop
sbb
xchg
ds
mov
ret
add
pushf
push
add
in
lods
mov
dec
add
sub
add
adc
dec
mov
or
xchg
in
xor
hlt
ret
loop
mov
jbe
fs
adc
mov
(bad)
out
xchg
cmp
sbb
data16
out
dec
and
mov
mov
sbb
add
aad
jmp
cmp
inc
dec
push
popa
ins
ja
xor
pop
and
push
div
dec
js
stos
pop
adc
push
idiv
mov
addr16
add
mov
push
shl
movs
mov
outs
data16
sub
mov
sbb
push
shl
das
stos
push
add
sub
or
ret
mov
ins
ins
inc
and
dec
push
inc
fs
push
data16
bound
popa
outs
retf
inc
xor
bound
and
sub
or
dec
int3
mul
in
sub
add
pop
sahf
hlt
pop
sub
aam
mov
mov
or
ffreep
or
add
push
push
mov
sbb
cmp
lods
imul
xor
outs
enter
cs
mov
test
pop
popa
adc
stos
xlat
sub
adc
lock
jo
xor
add
push
sub
lock
cmp
aam
xchg
push
or
mov
pop
jo
xchg
cmp
push
js
lods
(bad)
inc
xor
mov
cmp
sbb
pop
inc
ss
outs
xor
sbb
dec
ins
in
and
push
pop
jo
sub
inc
xlat
das
pop
jp
test
xor
or
adc
call
movs
sahf
pop
aaa
cmp
aam
pop
add
(bad)
jbe
and
adc
data16
bound
jb
mov
mov
or
xchg
pushf
inc
sbb
retf
or
inc
push
sub
sub
test
and
pop
enter
call
ret
cmp
pop
and
stos
adc
xor
popa
or
or
xchg
adc
jl
or
shr
jl
and
and
pop
bound
(bad)
mov
push
adc
cmp
xor
and
cmp
add
je
cdq
cmc
or
hlt
xchg
sub
sahf
lock
rol
add
ja
mov
push
ins
aam
jle
arpl
pusha
add
ds
push
pop
jo
and
mov
scas
ins
jnp
inc
fs
cmp
adc
inc
loop
stos
sub
push
cs
xchg
sub
push
add
cld
stos
push
dec
sub
dec
les
bound
sbb
pop
jo
add
or
pop
or
ins
add
and
and
ret
test
call
adc
sub
lea
in
mov
mov
and
(bad)
bound
adc
xchg
sub
aas
push
inc
add
arpl
les
add
jbe
xor
or
js
push
xor
stos
scas
pop
and
cmp
aad
xor
jmp
xchg
xor
inc
ror
push
inc
inc
fsubr
jnp
xor
and
pop
mov
movs
xor
fld
adc
xor
push
test
jb
inc
test
test
and
push
pop
pop
pop
inc
js
inc
and
jo
xchg
jbe
jge
pusha
es
push
cwde
test
ss
lods
call
jns
mov
outs
push
test
mov
outs
ins
xor
ret
aaa
inc
cmp
ins
ins
jb
rol
inc
and
test
dec
lods
out
inc
or
push
inc
enter
adc
mov
scas
add
aaa
test
daa
sbb
inc
inc
xchg
pop
pop
xor
sbb
or
inc
sub
test
jae
dec
cmp
mov
and
add
jmp
push
inc
inc
dec
mov
or
(bad)
aaa
cmp
inc
pop
sbb
adc
and
pop
add
add
lods
push
sbb
jo
and
imul
xchg
xchg
shl
fcom
adc
inc
adc
jns
das
js
add
sub
fadd
add
pop
je
call
sbb
ror
mov
je
(bad)
dec
pop
dec
and
test
cwde
pop
push
inc
loop
and
and
xor
aam
fisub
or
cmp
sub
je
push
or
and
cmp
sub
sbb
jne
cmp
js
test
push
cmp
push
add
aam
popa
stos
mov
stos
fidiv
adc
push
xchg
add
js
add
sbb
adc
es
or
cmp
mov
inc
aas
pusha
push
push
add
and
dec
jb
cmp
rol
(bad)
push
pop
adc
dec
and
adc
jle
or
or
mov
mov
add
push
mov
or
push
and
xchg
and
sub
int3
cmp
xchg
and
xor
lea
mov
xor
add
in
dec
push
xor
add
cmp
push
outs
loopne
or
xor
pusha
ins
mov
push
and
add
inc
push
mov
popa
cmp
pop
rol
test
inc
adc
test
xchg
push
iret
(bad)
int
xor
scas
dec
add
rcl
inc
add
xlat
push
out
jae
push
jecxz
add
daa
adc
push
call
and
test
and
add
push
xor
add
sub
test
and
xor
and
add
pusha
sub
ror
lea
verw
and
cwde
mov
pop
outs
or
adc
sahf
test
data16
das
cmps
sbb
enter
jo
xchg
jnp
xor
dec
dec
call
jne
add
nop
rol
inc
dec
add
pop
dec
mov
cmp
popa
sub
push
push
inc
sub
ret
outs
out
lods
adc
jp
clc
dec
lods
push
xchg
sahf
push
push
cs
dec
cmp
adc
jle
push
push
pop
pusha
arpl
inc
add
clc
push
push
dec
adc
aas
cmp
dec
pop
mov
data16
add
loope
mov
cmp
or
(bad)
push
pop
add
dec
pusha
xor
xchg
mul
xor
xchg
xor
bound
dec
xor
mov
fld
xor
inc
ins
mov
cwde
retf
pop
push
adc
ret
add
add
das
mov
lods
mov
sub
cmp
inc
cmp
sbb
imul
adc
adc
xlat
ins
pop
pop
xchg
or
mov
cs
sub
or
mov
test
or
push
out
add
loopne
jp
(bad)
cmps
add
call
mov
inc
ins
retf
adc
jmp
aaa
outs
jge
add
sub
dec
dec
dec
mov
inc
sub
cmp
push
push
sbb
imul
sub
jp
push
out
jge
push
pop
mov
cmp
pop
fdiv
or
mov
call
dec
add
mov
sbb
push
inc
popa
loop
adc
ds
add
inc
es
ins
loopne
jnp
pop
mov
inc
adc
adc
mov
xor
cmp
push
push
aaa
add
gs
xchg
sbb
xchg
fsub
add
ja
lods
push
loop
and
lock
fiadd
stos
sbb
dec
mov
pop
inc
xchg
push
pusha
pop
add
and
push
add
loope
push
push
mov
cmp
and
sub
sbb
stos
jl
push
inc
retf
test
mov
inc
clc
xchg
sbb
ja
and
push
push
inc
mov
push
aas
test
ins
(bad)
pop
ins
retf
or
repnz
data16
push
outs
imul
cmp
adc
pop
or
inc
mov
ds
and
push
test
(bad)
aam
dec
push
mov
add
sbb
ins
mov
in
adc
call
(bad)
mov
and
stos
and
push
mov
and
js
pusha
fs
jno
xor
or
inc
push
bound
inc
mov
dec
push
sub
dec
xchg
(bad)
xor
dec
mov
sub
mov
or
push
nop
rcr
lods
push
xor
fild
inc
jge
mov
push
push
dec
inc
ins
je
sub
or
mov
jo
push
mov
or
enter
push
xchg
add
mov
and
push
cld
jae
fst
mov
and
push
fmul
xor
daa
mov
aaa
data16
cwde
sub
lock
xor
pop
(bad)
jmp
lods
inc
add
and
add
sbb
mov
dec
mov
xor
inc
and
popa
cli
add
ret
xor
push
nop
push
bound
and
cmps
add
xor
jb
and
and
mov
xchg
push
dec
push
or
or
sbb
dec
test
call
inc
cmp
stos
or
jge
cmp
ret
inc
outs
sbb
jp
or
mov
push
push
inc
(bad)
bound
adc
xor
dec
adc
sub
pop
mov
and
outs
push
push
aaa
nop
xor
adc
mov
and
push
call
push
jae
push
adc
pop
push
inc
add
push
ss
adc
push
jns
adc
xchg
call
push
das
pop
test
loopne
out
cmp
ror
mov
shl
adc
mov
or
lods
in
mov
arpl
adc
sub
and
sub
and
ret
and
loopne
inc
dec
sbb
and
arpl
jbe
shl
addr16
pop
push
push
das
mov
xchg
dec
cmps
jmp
jp
mov
enter
call
add
ret
bound
inc
jb
ins
jo
xchg
or
xor
aam
data16
das
daa
jmp
adc
push
inc
into
dec
dec
push
xchg
sbb
or
ficom
xor
ret
dec
mov
cmp
(bad)
int3
out
cmp
pushf
inc
pop
and
cmp
adc
lahf
and
and
add
and
aam
and
adc
enter
daa
add
inc
push
sub
ins
push
cld
sub
fld
dec
popa
test
xchg
jno
je
fidiv
inc
inc
fsub
js
pushf
movs
push
add
xor
and
fiadd
xchg
sub
cmp
mov
cmp
ror
dec
mov
push
adc
add
cli
inc
enter
pop
cmp
add
sbb
sbb
cli
mov
outs
or
jl
and
and
in
cmp
xor
and
mov
bound
inc
and
test
adc
mov
xor
mov
xchg
add
sbb
sub
dec
jle
jp
or
xchg
rol
inc
rol
mov
sahf
js
jl
inc
dec
mov
fwait
sub
mov
leave
add
das
enter
adc
inc
test
push
push
push
cld
ins
and
cmp
push
mov
mov
hlt
dec
inc
xchg
add
adc
sub
ins
inc
xchg
loope
add
mov
push
push
jbe
pop
(bad)
add
mov
les
mov
push
pushf
lds
inc
fild
pusha
or
xor
les
jl
mov
cmp
xor
adc
or
push
aam
xchg
mov
adc
ss
xchg
ds
popa
imul
dec
push
push
test
(bad)
add
sub
cmp
add
outs
jl
inc
inc
and
adc
leave
xchg
sub
pusha
or
shl
fsubr
dec
je
dec
push
jo
mov
sub
inc
mov
das
fadd
pop
repnz
xchg
add
or
sub
jmp
xchg
lock
and
push
add
pusha
sub
xor
dec
pop
mov
jbe
mov
ins
xor
rol
imul
pop
add
add
or
mov
or
adc
test
sub
jp
ret
inc
push
shr
test
mov
pusha
adc
aas
inc
pop
adc
jo
xor
mov
jo
out
adc
(bad)
mov
xchg
inc
adc
sub
xchg
clc
jbe
ret
or
adc
inc
or
push
(bad)
sbb
add
pop
and
adc
jne
and
pop
push
ror
push
daa
popa
inc
jb
jo
add
inc
inc
into
fsubr
imul
push
pop
fwait
pop
adc
and
push
ins
add
and
cmps
neg
add
jne
adc
sbb
sub
dec
retf
and
mov
cmp
or
movs
xchg
inc
pop
pop
adc
add
xchg
inc
ins
inc
add
inc
or
push
inc
cmp
stos
or
push
pop
outs
pop
mov
fst
or
in
pop
xor
jo
stos
pop
add
add
sub
mov
jle
xchg
fld
adc
pop
data16
loopne
add
add
cmps
push
dec
jne
pop
inc
mov
push
loopne
mov
add
add
aas
and
lea
mov
add
jle
pop
mov
cmp
add
pop
dec
xchg
dec
mov
add
push
add
jno
dec
mov
add
inc
test
cmp
lods
pop
scas
sub
add
stos
adc
jne
ss
clc
sub
fsubr
shl
xchg
loopne
add
add
mov
mov
or
inc
xor
push
dec
cs
sbb
es
xor
hlt
jne
xchg
imul
pusha
test
mov
jmp
sbb
jne
cs
cmp
data16
jb
dec
push
inc
add
test
loopne
mov
push
data16
ins
mov
xchg
jo
push
add
adc
mov
dec
and
(bad)
loopne
push
mov
add
jb
push
mov
xor
push
mov
add
fs
shl
clc
sbb
loopne
loope
es
or
outs
jo
jnp
inc
add
sub
inc
push
push
js
call
push
es
stos
and
mul
rol
sub
(bad)
mov
mov
push
pop
imul
test
mov
jp
popa
movs
push
push
sbb
lods
cmp
push
xor
js
dec
jb
add
push
cdq
fcmovb
pop
hlt
loopne
(bad)
leave
mov
push
jne
jo
add
data16
rol
dec
xchg
and
adc
mov
xchg
sahf
push
xor
hlt
sub
dec
je
jl
dec
push
sbb
add
shl
pusha
mov
add
mov
aaa
cmp
clc
dec
outs
enter
add
xchg
je
xchg
test
ins
cmp
pop
or
adc
or
(bad)
pop
jl
jl
push
adc
imul
or
push
add
sub
pop
adc
sbb
imul
out
add
push
adc
jp
and
adc
into
jecxz
xchg
ret
and
sub
xor
cmp
das
pop
add
add
xor
inc
arpl
add
and
les
and
jne
ret
inc
imul
ins
adc
cmp
add
and
push
push
push
aaa
pop
dec
mov
sub
call
stos
and
or
movs
push
sub
out
mov
add
push
(bad)
pop
bound
adc
enter
xchg
loope
mov
dec
adc
sub
push
adc
mov
pop
xlat
cs
pushf
pop
add
cmps
jo
adc
(bad)
cmp
and
xchg
daa
inc
mov
enter
inc
clc
xor
xor
fistp
mov
add
mov
rol
(bad)
outs
jl
add
or
inc
mov
in
les
sbb
fcmove
add
loopne
ins
je
movs
push
push
xlat
lea
xor
mov
mov
pop
push
xor
pop
sub
jnp
outs
inc
sbb
popf
add
out
pop
mov
and
push
jo
jbe
adc
fdivr
loop
inc
sub
sbb
scas
add
push
cwde
addr16
push
adc
outs
xchg
add
mov
cmp
mov
or
imul
and
jbe
add
ficomp
fadd
popa
imul
pop
pusha
imul
inc
xchg
jo
push
sbb
test
or
ss
(bad)
int
mov
inc
push
inc
or
movs
inc
inc
mov
add
adc
mov
push
add
cmp
push
jo
fs
or
push
xchg
and
into
cmp
dec
ins
bound
das
push
adc
mov
xor
xchg
add
sub
call
xchg
js
adc
inc
shl
and
push
in
retf
push
mov
push
pop
les
aam
xchg
and
and
push
adc
dec
xor
add
es
shl
mov
add
(bad)
dec
jp
xor
cmps
and
push
inc
inc
and
cld
out
aam
mov
mov
add
add
imul
pop
fisubr
sub
loope
jge
aaa
or
push
outs
push
adc
adc
dec
inc
mov
add
scas
gs
push
dec
or
ret
leave
add
adc
xchg
xchg
add
add
dec
or
test
sub
adc
or
outs
test
ret
inc
jmp
add
sbb
xor
xor
and
fdivr
or
inc
mul
sbb
test
jl
and
xor
ins
sbb
add
imul
sbb
xor
add
fs
xor
ret
cmp
cmp
test
adc
dec
push
push
test
mov
and
add
bound
add
add
or
or
nop
adc
xchg
push
aaa
test
add
or
pop
loope
dec
pop
retf
add
dec
outs
arpl
dec
inc
add
jle
inc
dec
fiadd
add
cmps
sub
inc
adc
sbb
jl
mov
mov
sahf
mov
rcr
and
mov
dec
inc
sub
push
sub
or
and
mov
pop
dec
sub
mov
loop
rcr
outs
mov
ss
inc
sub
clc
add
adc
shl
dec
cmp
adc
inc
and
sbb
xchg
cmp
nop
sub
add
js
sbb
bound
mov
add
pop
add
push
(bad)
adc
aam
dec
xchg
or
test
xchg
in
xchg
dec
loope
sbb
push
mov
es
push
xchg
add
nop
sbb
mov
adc
add
sbb
pop
and
jno
sbb
js
das
outs
jbe
into
jne
mov
xchg
push
add
push
adc
pop
xchg
inc
and
mov
sbb
mov
dec
fisttp
je
push
movs
and
fiadd
sbb
loope
push
pop
pop
test
sub
jns
cmp
mov
jnp
sbb
sub
sub
add
gs
xchg
add
add
inc
push
xor
dec
cmp
or
arpl
push
enter
movs
add
inc
imul
pop
ins
data16
mov
es
test
sbb
mov
push
addr16
aad
jle
pop
or
mov
movs
lock
pop
dec
inc
xor
sub
jl
shr
sbb
sub
inc
add
ins
ret
adc
sub
xchg
pop
mov
sub
outs
xchg
dec
push
mov
scas
mov
test
xor
aaa
test
and
shl
lods
push
call
xor
dec
data16
xchg
adc
adc
loop
call
arpl
xchg
adc
and
jno
dec
loope
scas
jnp
sub
dec
test
xchg
and
and
inc
mov
call
pushf
xchg
or
je
sub
ds
jb
inc
shl
pop
into
pop
pop
pop
inc
push
and
pop
sub
cmp
add
aam
sub
xor
inc
dec
push
and
js
adc
jo
mov
add
call
push
xor
inc
add
add
data16
cmp
fnsave
xchg
push
pushf
push
jle
cmp
gs
push
add
dec
cmp
jb
cmp
call
jne
retf
sbb
inc
inc
pop
rol
or
and
and
outs
mov
dec
push
cmp
add
dec
adc
or
fild
adc
sub
and
push
inc
shr
push
push
dec
mov
retf
xor
dec
stos
inc
mov
sbb
and
push
and
mov
add
cmp
pop
jae
add
or
push
inc
gs
inc
xor
ins
xor
push
jnp
xor
adc
and
ficom
cmp
bound
xor
push
xor
lahf
or
adc
mov
push
test
clc
inc
add
cmp
xchg
sbb
jbe
push
adc
add
xor
add
push
aad
push
xchg
je
xor
loopne
sbb
sub
in
push
inc
shl
xor
dec
adc
jo
or
pop
xchg
add
int3
push
scas
outs
add
add
xchg
outs
add
dec
sbb
add
mov
dec
push
cmp
cmp
outs
inc
jo
xor
lock
dec
in
push
cmps
(bad)
cld
popf
add
push
push
int3
outs
jbe
ins
rol
es
push
imul
jl
mov
sub
sub
call
js
inc
and
fcomp
inc
daa
sub
mov
and
cmp
cmp
pop
in
loopne
loopne
add
in
sub
xor
sub
mov
dec
dec
fs
fsubr
and
mov
not
xor
movs
loopne
xchg
sbb
xchg
pusha
bound
push
mov
inc
fbld
ins
das
jp
clc
xchg
adc
pop
pop
sahf
adc
movs
aad
fs
xlat
out
dec
push
cmps
sar
and
popa
ins
jb
sub
aad
adc
rcr
gs
ss
and
inc
cmp
push
inc
or
(bad)
and
pop
push
xor
popa
mul
xchg
push
or
xchg
sub
arpl
jae
and
inc
mov
jb
xor
and
push
pop
into
adc
push
adc
dec
stos
add
loopne
test
ror
lock
or
push
bound
sub
add
ins
pop
add
xchg
call
push
inc
and
sub
push
sbb
loopne
and
test
push
inc
sbb
xor
and
xor
push
or
xor
jb
inc
dec
test
mov
adc
dec
xchg
pop
add
mov
fs
jo
push
test
call
cmps
fsubrp
xor
and
ds
aam
and
hlt
dec
loopne
fsubr
cs
fs
and
add
or
mov
inc
fidiv
adc
je
inc
mov
adc
cmp
dec
jmp
ret
ds
shl
add
cld
inc
dec
push
shl
aas
push
mov
dec
add
xor
ins
push
xor
repz
pusha
adc
adc
nop
in
cmp
dec
sbb
inc
sbb
xchg
ins
clc
imul
xor
adc
pop
ja
push
xor
and
popa
shl
jmp
jle
push
clc
imul
xor
sbb
add
lahf
stos
mov
adc
xor
or
mov
and
ror
ss
lea
(bad)
hlt
dec
dec
sar
cmp
je
mov
ins
(bad)
jnp
push
dec
shl
mov
push
ror
inc
add
push
or
adc
ja
mov
push
scas
inc
test
je
dec
jg
cld
test
retf
dec
outs
add
xchg
jecxz
push
imul
je
sbb
push
push
dec
xor
add
sub
xor
and
and
cmp
stos
pop
and
(bad)
push
js
inc
stos
add
xor
inc
sub
xchg
add
je
pusha
sar
mov
mov
hlt
mov
gs
pop
xchg
add
xor
repnz
mov
xchg
int3
or
cmc
mov
jmp
cmp
mov
sbb
jo
pop
jbe
xor
fsubr
fwait
add
inc
dec
mov
push
add
inc
push
pop
loopne
or
pop
lods
and
retf
and
inc
sub
add
dec
jo
ror
or
pop
les
sub
mov
or
fs
add
mov
add
mov
jns
gs
add
or
lock
rcr
inc
push
cmp
inc
add
pop
push
adc
add
aam
push
inc
push
mov
inc
repnz
add
(bad)
ja
ss
add
mov
or
or
add
xchg
push
sahf
cmp
push
add
add
pop
not
cdq
shl
(bad)
fisub
inc
or
add
xchg
sar
sub
and
pusha
jmp
bound
sub
aaa
add
inc
test
aam
ds
inc
xor
pop
arpl
mov
push
mov
xor
and
pusha
adc
add
xor
add
scas
ror
imul
sbb
test
push
sub
mov
test
add
xor
or
pop
sbb
inc
test
ret
gs
ins
and
rol
shr
cmp
test
stos
ja
je
sub
inc
mov
add
xchg
jo
test
jo
es
pushf
and
mov
data16
sub
inc
push
xchg
pusha
jno
push
scas
sbb
xlat
pop
inc
and
fs
rol
je
adc
inc
aaa
adc
xor
pop
mov
int3
or
mov
sbb
cs
lock
push
fdiv
shl
sbb
pop
mov
imul
mov
test
aam
inc
pop
adc
inc
adc
and
add
and
cmp
ret
ins
inc
loop
enter
popf
bnd
dec
bound
push
shl
dec
mov
js
mov
inc
inc
inc
jnp
adc
outs
bound
loopne
(bad)
adc
adc
adc
sub
inc
mov
xor
sub
xchg
add
hlt
and
(bad)
test
stos
add
pop
sub
dec
dec
shl
sub
push
cli
pushf
xor
call
xor
je
and
add
or
jb
inc
xor
jnp
push
or
or
pop
pusha
push
mov
xchg
add
ds
pop
pop
sbb
ins
push
imul
outs
push
shl
dec
cs
cmp
adc
xchg
dec
push
xor
lds
dec
in
xor
pusha
sub
ror
sub
das
xor
jns
cmp
rol
call
push
sub
pop
mov
jne
das
(bad)
push
sbb
cmp
hlt
and
dec
es
push
inc
push
cs
push
cli
hlt
mov
adc
add
bound
mov
ret
rcr
jle
push
shl
aaa
inc
jb
shl
cmp
inc
or
sbb
pop
sub
sub
sub
lods
inc
mov
or
(bad)
cld
in
xchg
dec
loopne
pop
imul
xor
dec
int3
mov
push
inc
inc
dec
loope
sbb
cmp
fsub
inc
dec
push
aas
sub
add
hlt
mov
inc
push
loop
dec
cmp
adc
xor
mov
adc
dec
sbb
mov
mov
sub
jo
fdivr
or
inc
popa
cld
jbe
xor
ret
cmp
cli
ins
nop
jl
nop
xor
jbe
or
jge
mov
mov
rcr
fimul
xchg
add
mov
sbb
adc
loop
mov
add
xor
sub
cmp
pop
cld
sub
dec
pop
mov
adc
aam
sbb
dec
pop
pusha
sbb
and
jno
sbb
inc
jbe
xchg
xchg
fistp
ss
cmp
call
sub
cmp
pop
sahf
call
pop
push
xchg
pusha
add
or
mov
push
les
ror
call
xor
pop
ret
and
lock
inc
sbb
push
cs
(bad)
sub
outs
bound
ret
sahf
lods
xchg
ins
lock
adc
jmp
sub
xor
daa
test
pop
or
add
and
inc
mov
ret
cmp
sub
xor
rcr
add
call
xor
pop
or
add
popa
out
jno
jge
add
and
xor
imul
push
cmp
fcomp
dec
push
ss
ror
dec
aad
or
pop
pop
and
adc
add
xchg
xchg
aas
adc
cmp
push
clc
add
dec
pop
test
dec
jo
mov
or
loop
adc
and
mov
adc
loop
dec
mov
jb
iret
push
add
add
pusha
out
dec
popa
imul
data16
sbb
pop
and
or
sbb
add
add
and
xchg
and
stos
push
sbb
cs
sub
pushf
add
mov
dec
cmp
and
das
outs
les
inc
mov
fist
pop
sub
xchg
inc
adc
add
aaa
pop
xor
add
add
jo
inc
(bad)
jmp
(bad)
and
sub
aas
pop
pop
jl
sub
sti
inc
js
or
add
mov
jl
int
mov
and
xor
scas
jg
pusha
adc
push
or
movs
push
push
fbstp
jae
outs
and
js
add
rcl
test
mov
test
pop
clc
mov
sub
adc
or
add
or
add
and
je
push
test
sbb
inc
cmp
or
push
xor
push
and
adc
inc
mov
scas
cwde
fimul
cs
(bad)
pusha
pusha
cmps
(bad)
sub
jne
es
ss
mov
movs
xchg
cs
or
cmps
mov
mov
mov
mov
xor
popa
imul
lds
pop
into
cmp
out
outs
jbe
add
jo
loopne
test
fsubr
mov
sub
inc
add
add
mov
mov
mov
push
sbb
dec
(bad)
jmp
call
inc
inc
stos
(bad)
mov
test
stos
pop
xor
test
stos
sbb
push
cwde
push
pop
cmp
les
(bad)
xor
add
les
cs
mov
test
and
jo
cmp
and
enter
and
inc
dec
cmp
gs
pop
xor
pop
adc
jp
push
stos
or
dec
dec
jo
adc
leave
sbb
sbb
adc
or
inc
add
or
and
xor
add
out
xchg
or
sar
add
push
call
push
mov
and
andps
fdiv
adc
cmp
dec
jb
dec
pop
push
call
je
or
xor
fcom
pusha
push
fs
push
dec
dec
push
jmp
mov
sbb
adc
das
sbb
push
add
or
data16
jmp
or
test
arpl
cwde
les
inc
sbb
outs
cmp
jns
pop
and
iret
push
outs
jb
adc
into
adc
adc
push
outs
add
add
pop
call
mov
lods
jp
sbb
sbb
push
pop
cmc
xchg
es
inc
xchg
xor
dec
sbb
pop
xchg
pcmpeqb
jb
cmps
mov
push
add
and
and
push
sbb
test
jmp
ss
jp
retf
adc
sbb
data16
data16
xor
sub
dec
add
or
cwde
dec
push
inc
or
inc
lods
retf
mov
pop
push
ret
and
scas
cs
jo
adc
hlt
ss
js
mov
pop
scas
xchg
les
sub
jg
inc
mov
inc
and
scas
test
aam
in
in
push
inc
mov
stos
dec
pop
mov
push
scas
retf
test
and
data16
dec
pop
and
sbb
pusha
rol
inc
xor
jo
das
xor
pop
mov
lea
sahf
sub
hlt
call
call
mov
inc
pop
addr16
mov
xchg
ss
inc
cmp
add
in
xor
cmp
sub
lods
stos
gs
dec
push
pop
pop
out
adc
push
push
or
fimul
outs
or
or
xor
and
mov
fwait
pop
add
loop
push
test
mov
pop
and
add
mov
clc
into
imul
or
and
add
inc
pop
mov
jo
jne
and
jge
and
shl
pop
pop
jo
js
add
test
pop
and
or
(bad)
xor
scas
fcomp
mov
and
dec
cmp
add
cmps
jo
sbb
and
pop
pop
pop
sar
cs
xor
ins
out
inc
adc
and
and
or
and
and
stos
sub
ins
ss
(bad)
enter
and
in
pop
and
dec
mov
ret
dec
dec
popa
add
sbb
adc
jbe
rol
sub
aas
ret
and
test
add
add
or
sbb
xchg
cdq
add
adc
pusha
mov
sahf
ds
rcr
sub
push
cwde
(bad)
sub
mov
cmps
fsub
push
test
dec
or
push
and
loop
sub
je
push
pop
fsubr
dec
test
ret
sub
lea
mov
sbb
aas
or
dec
push
push
add
xor
ss
and
mov
inc
xchg
xor
nop
inc
ror
test
popa
fdiv
or
sub
add
mov
sbb
or
or
(bad)
mov
rol
jns
pop
mov
dec
add
mov
push
mov
and
loope
jle
inc
fucomp
or
or
jge
and
sbb
mov
and
xchg
and
dec
xchg
loopne
scas
xchg
jl
push
or
add
or
nop
xor
sub
jb
dec
mov
mov
and
pusha
fs
xor
rcr
es
sub
add
xchg
daa
or
add
and
inc
pop
call
dec
or
push
add
lock
loop
inc
mov
les
pop
scas
les
push
and
add
push
pop
push
add
and
push
sbb
sahf
test
xor
aad
and
dec
xor
push
adc
imul
xor
bound
inc
sub
add
dec
lea
push
adc
adc
fcomp
add
and
js
shl
add
and
cld
pop
pop
xor
call
pop
es
sub
loop
mul
sub
ins
inc
and
and
push
jo
test
jb
sub
sbb
out
push
mov
pop
add
cmp
mov
mov
cmp
xor
loopne
into
es
push
inc
or
xchg
or
shl
sub
ins
inc
add
adc
cmp
sbb
adc
mov
adc
push
push
xor
cmps
gs
or
(bad)
and
dec
loopne
inc
adc
or
push
es
adc
scas
movs
cs
pop
pop
adc
ret
ins
jne
cwde
dec
xor
xor
pop
shl
dec
sub
mov
add
sbb
fmul
xor
in
sbb
or
push
jl
xor
push
cdq
sbb
inc
dec
scas
div
rol
test
or
aaa
out
or
jbe
add
sub
not
adc
js
add
mov
cmp
call
dec
add
sub
cmp
aam
or
xchg
mov
addr16
xor
add
xor
pusha
xchg
or
mov
add
inc
into
mov
adc
push
or
adc
jo
mov
mov
xor
neg
add
ret
inc
pop
in
mov
sub
pop
rcr
push
pusha
sub
dec
ins
loopne
and
out
push
pusha
mov
jp
dec
push
fidivr
pop
xchg
mov
adc
sbb
fcom
les
mov
dec
adc
ss
push
pop
cmp
jmp
inc
sub
inc
push
add
inc
pop
cmp
push
add
sub
jne
pop
rcr
adc
dec
js
cs
add
adc
rol
add
xchg
cmp
mov
pop
imul
push
imul
dec
scas
aaa
cmp
sahf
xor
test
push
mov
pop
push
ds
push
cwde
(bad)
ins
adc
sub
or
xor
inc
inc
mov
jmp
add
push
jo
adc
push
mov
and
adc
dec
cmp
push
mov
add
add
and
imul
mov
mov
dec
xchg
ja
push
nop
push
adc
in
cmps
mov
and
in
cs
pop
or
adc
addr16
adc
sbb
mov
stos
add
pop
lahf
push
ins
mov
and
mov
add
mov
push
pusha
pusha
cmp
pop
xlat
add
pop
cmp
xor
add
mov
and
inc
and
jno
mov
loopne
dec
dec
jg
fld
je
cmp
sub
or
dec
dec
pop
mov
mov
mov
shl
and
ins
rcl
inc
dec
push
in
and
lods
or
push
inc
dec
and
push
adc
sub
mov
(bad)
pop
xlat
push
adc
mov
add
cmp
arpl
inc
dec
add
fiadd
push
pop
arpl
iret
or
and
add
pop
test
adc
and
or
imul
jg
jo
pop
adc
push
add
xchg
and
dec
cmp
jl
inc
push
sub
sahf
aas
cwde
push
test
lods
popa
push
sub
cmp
bound
jb
test
movs
sub
shr
mov
lock
push
inc
and
push
inc
pop
dec
sbb
(bad)
(bad)
sbb
imul
push
or
mov
sub
add
or
adc
(bad)
ds
(bad)
add
mov
stos
add
bound
push
and
add
cs
aam
test
popf
push
loop
into
inc
ror
add
or
and
dec
int3
and
or
push
add
pop
enter
mov
sub
inc
jae
cmps
sbb
push
xor
out
push
add
pop
cs
and
add
jbe
dec
adc
add
add
mov
cwde
ins
out
js
cwde
add
cmps
add
loope
mul
adc
aaa
mov
and
or
call
and
adc
adc
loopne
jo
and
jp
mov
adc
adc
inc
dec
push
cmp
sub
outs
push
sbb
sub
sub
pusha
mov
test
adc
mov
jo
lods
adc
add
jnp
inc
dec
mov
xor
xchg
mov
outs
jge
or
imul
xor
pop
gs
jecxz
add
mov
or
dec
and
dec
cmp
push
push
test
xor
hlt
inc
and
cmps
retf
inc
popa
loop
xchg
add
mov
add
dec
loopne
dec
sub
cs
mov
addr16
test
lock
xor
push
fadd
jb
adc
and
aaa
add
adc
or
or
xchg
cli
adc
ret
xor
shl
adc
dec
or
mov
fsubr
sub
dec
or
adc
ret
scas
bound
push
add
sub
dec
retf
mov
adc
dec
or
add
mov
jo
sbb
or
dec
dec
dec
mov
pusha
push
lahf
xchg
je
xor
and
push
jl
dec
mov
test
test
push
js
cdq
adc
and
xchg
call
jmp
jecxz
dec
dec
dec
dec
dec
add
sbb
xchg
bound
outs
mov
mov
retf
mov
ins
shl
sub
stos
inc
adc
inc
dec
fdiv
xor
ror
sub
or
in
jl
fwait
test
dec
push
mov
push
(bad)
out
jbe
sbb
add
pop
sub
fcmovu
cmp
(bad)
fidiv
push
or
or
nop
jl
jo
add
add
adc
add
adc
jbe
xchg
clc
and
sub
mov
movs
es
add
add
shl
add
cmp
and
xchg
xor
call
je
test
and
xchg
push
and
ror
pushf
jp
cmp
or
and
sbb
lods
inc
call
jb
cmc
adc
and
push
mov
cwde
jp
adc
or
push
addr16
push
fadd
lock
les
adc
and
push
push
jl
dec
xor
shl
push
test
fadd
ds
lds
xor
or
cmp
sbb
das
and
pop
push
mov
cmp
cs
inc
inc
rol
in
and
sub
mov
and
ret
(bad)
adc
dec
add
and
movs
xchg
mov
and
push
add
aam
sub
cmp
je
fcom
test
mov
pushf
xor
add
cmp
sbb
fcmovbe
push
dec
xor
pop
add
pop
enter
and
and
push
add
sub
pop
bound
movs
loop
and
jo
shl
cmp
xor
test
aas
pop
sub
test
das
or
adc
outs
jne
and
or
xor
push
dec
inc
xchg
pop
inc
sub
push
and
or
sbb
adc
and
xchg
add
sbb
push
inc
adc
repnz
inc
ror
push
daa
lock
jo
(bad)
xor
jge
pop
dec
sbb
ins
xchg
add
cmp
cmp
sub
dec
push
and
mov
inc
add
and
movs
mov
loope
and
sub
inc
and
inc
test
and
add
sub
or
adc
jnp
cdq
test
daa
iret
xchg
leave
js
sbb
push
int3
push
mov
and
add
inc
add
(bad)
loope
sbb
xor
js
cmp
movs
pop
pop
pop
push
push
stos
mov
ins
and
or
loopne
sub
shl
add
(bad)
ins
test
pusha
inc
inc
xor
push
or
sbb
stos
call
adc
pop
test
dec
sbb
cmp
lods
out
jle
inc
inc
pusha
ror
push
add
inc
bound
sbb
mov
(bad)
shr
push
sub
leave
ins
call
jo
mov
ins
or
xchg
cmp
cld
lods
adc
cmp
out
inc
cmp
and
xchg
aam
jp
add
ds
fs
sbb
cmps
pop
dec
bound
mov
sub
into
je
cmp
or
or
fdivr
push
add
add
call
jnp
(bad)
shl
sbb
sbb
lea
js
xchg
mov
adc
add
inc
pop
inc
aaa
into
add
mov
(bad)
push
sub
inc
pusha
icebp
push
sub
sub
shr
sub
sbb
aaa
and
mov
jns
dec
add
lahf
jle
or
push
and
dec
add
test
and
pop
or
dec
add
mov
cwde
sub
inc
sbb
or
adc
enter
ror
xor
push
or
adc
loop
test
sub
push
push
mov
xor
xchg
(bad)
stos
pop
bound
idiv
and
inc
pop
pop
add
jmp
mov
xor
add
mov
or
es
jo
in
adc
jb
test
jne
arpl
sub
inc
pop
xor
(bad)
dec
pop
jo
xor
mov
inc
(bad)
popa
xchg
enter
adc
dec
push
xchg
mov
xchg
add
inc
bound
add
loopne
pop
cmp
xor
dec
pop
sbb
sbb
aas
dec
pop
inc
mov
jno
sbb
push
(bad)
mov
ret
ins
push
or
inc
shl
and
or
dec
or
cmp
mov
(bad)
pushf
popa
call
jns
push
sub
inc
lods
or
xor
cli
push
pop
pop
das
pop
call
bound
es
add
sbb
add
pusha
inc
adc
loopne
push
inc
fs
sbb
pop
add
mov
aas
dec
shl
add
or
ss
adc
leave
or
xchg
js
loope
mov
push
lods
fild
lock
cmp
ret
loop
sub
inc
push
push
pop
sub
sub
cmp
stos
mov
mov
sub
push
pushf
adc
inc
and
dec
jp
rol
jno
jl
pop
mov
add
sbb
or
or
sub
cs
push
push
or
jb
into
adc
shl
mov
das
cmp
push
aaa
sbb
test
bound
loope
loope
das
addr16
inc
dec
shl
xor
push
add
rcl
sub
inc
hlt
and
add
xor
adc
adc
ins
jl
sbb
cmp
inc
jne
xchg
pop
xchg
cmps
mov
les
test
push
push
push
rcl
xor
cld
(bad)
fsub
mov
shr
add
mov
fmul
mov
ret
movs
and
add
mov
loopne
loop
or
fld
dec
xchg
jge
xor
fsubr
push
push
push
adc
fisubr
cmp
push
adc
test
add
and
in
and
sub
push
mov
bound
sar
pushf
cmp
push
pop
and
xor
add
pop
xor
pop
lahf
and
jbe
add
pop
pusha
fsub
add
dec
xchg
shr
and
pusha
and
sbb
xor
add
or
or
pusha
aaa
inc
mov
fwait
push
adc
mov
push
popa
dec
adc
sub
jo
call
jb
cmp
push
inc
into
and
sbb
mov
jns
or
ret
or
sbb
jecxz
or
(bad)
xor
push
push
popa
or
mov
inc
lock
or
cmp
mov
mov
sub
mov
add
adc
mov
add
or
push
ret
(bad)
xor
fadd
xor
mov
outs
pop
pop
data16
mov
push
aam
xor
add
call
push
sbb
push
imul
test
and
push
or
pusha
mov
sub
mov
inc
aad
jne
stos
and
outs
inc
push
add
sub
mov
jnp
(bad)
cmps
adc
rol
or
jno
xor
test
or
push
jle
sub
out
inc
adc
dec
call
mov
sub
dec
sub
inc
add
add
jl
je
inc
les
test
mov
mov
rol
pop
push
jae
mov
xor
loopne
jno
xor
and
sub
mov
push
push
push
pop
je
or
mov
or
loopne
push
or
loop
inc
pop
and
push
ins
adc
add
rcr
(bad)
enter
in
mov
jnp
xor
push
aas
push
daa
and
cmp
adc
sub
or
pop
dec
ss
xchg
push
dec
add
cmp
loope
sbb
stos
arpl
xchg
js
xchg
xchg
xor
mov
mov
daa
pop
sbb
adc
mov
sub
mov
aaa
sub
push
ds
or
in
imul
xor
inc
mov
jne
movs
jae
fimul
addr16
inc
aaa
mov
adc
test
fidiv
ja
push
jo
daa
pop
bound
jge
add
xor
and
pop
lock
inc
cmp
js
out
and
cmp
add
jae
out
mov
push
xchg
sub
inc
xor
sbb
mov
xlat
mov
mov
add
mov
pop
pop
mov
(bad)
les
mov
mov
(bad)
(bad)
cmps
rol
xlat
cmps
shr
lods
add
jo
loopne
xchg
loopne
scas
lahf
scas
jae
push
adc
inc
test
aam
and
lahf
jae
push
add
outs
adc
bound
sub
add
loopne
mov
add
ds
add
mov
mov
and
push
aaa
aas
dec
adc
cwde
xor
mov
xchg
and
aad
pop
or
icebp
gs
pop
and
xor
ret
pop
stc
in
mov
inc
in
push
jecxz
lock
or
mov
cwde
push
add
pusha
inc
sbb
and
out
arpl
jg
ret
add
sbb
mov
imul
cmc
scas
mov
and
add
mov
iret
test
sub
jnp
push
adc
add
add
adc
ds
pop
add
mov
iret
add
add
ror
or
pop
aas
dec
inc
inc
and
fwait
or
cmp
sbb
rol
ret
les
pop
inc
dec
call
shr
mov
lock
lahf
push
arpl
sub
add
or
mov
test
(bad)
in
mov
cmp
dec
(bad)
lods
add
ror
sub
loopne
pop
jg
add
mov
mov
dec
pop
je
add
(bad)
jo
cmp
and
inc
add
inc
pop
add
outs
ss
mov
dec
loopne
add
fld
dec
push
push
dec
cmp
adc
ret
push
inc
sti
and
sti
xor
push
rol
enter
bound
aad
mov
mov
and
push
jb
push
jns
ret
jp
mov
push
dec
xchg
inc
inc
test
pop
mov
adc
add
not
and
pop
iret
das
dec
les
cmps
test
mov
push
mov
test
xor
sar
shl
pop
adc
jmp
push
adc
popa
inc
jb
arpl
xchg
sub
cwde
and
jp
ror
inc
loopne
test
mov
push
dec
ret
push
pusha
dec
ret
mov
and
ins
or
xchg
lea
jb
push
int3
les
out
sub
in
dec
inc
or
jo
inc
sbb
loop
xor
cs
pop
or
dec
divps
(bad)
adc
outs
outs
js
sub
mov
xor
sub
sub
adc
ret
pop
push
xchg
adc
xchg
ret
call
shl
cmp
pop
out
adc
js
inc
loop
in
push
les
sub
js
add
sub
cmp
push
scas
es
jle
push
xor
xlat
inc
cld
xor
inc
xor
add
jnp
inc
jno
jnp
cmp
xchg
and
(bad)
adc
lds
sbb
jne
inc
add
gs
cwde
sbb
fiadd
inc
xchg
je
inc
inc
push
push
ins
popa
push
pop
cmp
and
mov
adc
and
fwait
popa
sbb
aam
dec
push
pop
popa
arpl
sbb
add
sbb
xor
(bad)
sub
cs
sub
lea
pop
mov
inc
mov
sub
lods
dec
push
and
xchg
sub
adc
js
ficom
sub
inc
call
sub
test
add
push
and
dec
test
mov
adc
es
fcomp
jo
adc
je
stos
test
mov
movs
inc
sbb
and
or
cmp
in
add
clc
mov
and
xor
pop
and
jecxz
not
or
xchg
sbb
pop
test
cmp
bound
push
xchg
movs
xchg
mov
cli
in
adc
jbe
mov
sub
inc
imul
scas
aaa
inc
dec
push
daa
xor
sbb
pop
or
add
int3
sbb
sbb
stos
sbb
pop
inc
es
dec
test
mov
ds
cwde
fs
in
ror
jne
icebp
cs
xchg
mov
inc
inc
inc
in
or
mov
push
adc
outs
or
cld
cld
and
inc
sar
inc
popa
pop
daa
aad
pop
iret
inc
leave
ins
pop
xchg
pop
aas
scas
pop
sbb
inc
and
test
pop
or
and
sub
cmp
jo
fs
mov
cmps
jg
lods
and
loopne
xor
cs
aaa
or
and
std
ins
mov
pusha
pop
outs
mov
push
and
movs
xor
mov
loop
arpl
add
pop
xor
mov
xchg
ja
inc
sbb
nop
test
movs
mov
les
sbb
xor
push
dec
fstp
jnp
sub
popa
mov
dec
mov
adc
dec
dec
add
dec
push
rcr
and
dec
clc
cli
bound
xor
add
or
aam
and
fimul
pop
and
scas
xchg
adc
retf
retf
push
popa
pushf
inc
and
sbb
dec
fsubrp
mov
ins
add
aam
cli
mov
jbe
add
xor
outs
pop
push
push
and
add
lods
mov
movs
push
mov
xor
or
add
add
ret
dec
xchg
pop
dec
mov
call
scas
sar
adc
scas
pusha
mov
fimul
test
bound
inc
inc
add
mov
sbb
mov
aaa
and
pop
xchg
mov
pop
cwde
jns
pusha
adc
sub
push
ins
sbb
xor
and
dec
test
test
mov
cmp
and
sub
cld
add
xor
aas
hlt
inc
data16
xor
inc
dec
fisttp
xchg
jo
pusha
and
mov
mov
inc
xchg
cs
add
dec
cmps
test
or
lods
das
cs
adc
cwde
retf
je
push
dec
enter
mov
or
push
inc
sub
bound
test
cmp
jmp
xor
cwde
mov
ss
adc
adc
pusha
xchg
nop
push
push
mov
inc
xchg
ret
sub
inc
pop
sbb
popa
mov
aam
rol
jl
dec
dec
inc
and
cmps
push
add
dec
xchg
shl
cmps
mov
add
or
push
les
in
inc
addr16
test
inc
xor
mov
movs
push
gs
pcmpeqw
dec
cld
je
rcr
xchg
aam
push
inc
fsub
inc
push
dec
dec
ins
ins
movs
push
and
sub
test
add
mov
adc
inc
add
sbb
cwde
je
push
cmps
jne
ja
push
daa
dec
dec
add
xchg
out
and
ins
jp
les
and
iret
xor
and
mov
xchg
repnz
xor
cmps
pusha
out
sub
in
fs
bound
or
push
add
and
sbb
scas
cli
movs
loopne
movs
retf
push
pusha
ficomp
xchg
shr
lods
mov
mov
bound
and
inc
add
jle
jo
aam
outs
popa
loopne
adc
sub
pushf
int3
test
cmp
(bad)
les
adc
mov
ins
adc
mov
push
inc
cmp
push
es
pusha
mov
shl
push
push
imul
inc
and
sbb
je
movs
push
popa
push
(bad)
xchg
mov
mov
adc
je
mov
or
cmp
loopne
xor
push
into
inc
add
rcr
(bad)
inc
mov
sbb
push
add
mov
cwde
mul
(bad)
mov
pop
addr16
loopne
add
ja
sub
and
pop
xchg
cs
or
mov
or
push
jg
add
pop
inc
data16
add
inc
popf
push
adc
int3
out
and
add
sbb
movs
push
sub
pop
mov
repnz
push
rol
and
adc
test
adc
sub
mov
scas
pop
bound
sbb
vpunpckldq
sub
add
ins
sub
lods
call
fild
ret
dec
nop
scas
add
add
cwde
test
jno
sbb
js
pusha
js
pop
ins
ins
dec
pop
les
das
add
push
test
sbb
and
test
cwde
enter
pop
sbb
push
jo
push
shr
inc
xchg
adc
or
add
sub
(bad)
jmp
inc
pop
enter
dec
push
push
dec
xchg
or
fcom
add
or
inc
xchg
jo
aam
dec
and
xor
adc
(bad)
fdiv
push
or
fdiv
or
push
xor
arpl
cmp
inc
add
add
fidivr
push
xchg
push
jo
sbb
push
out
nop
loopne
and
sub
push
push
and
into
inc
inc
mov
or
mov
jp
xchg
cli
pop
cwde
jne
jge
(bad)
or
ss
jmp
sbb
or
push
scas
xchg
fisub
push
push
cmps
pop
imul
add
jns
add
jbe
adc
in
and
xor
xor
dec
dec
test
aad
ret
xor
ficomp
dec
add
(bad)
test
adc
jl
aam
(bad)
push
fadd
dec
test
mov
add
push
pop
adc
add
movs
push
movs
and
(bad)
(bad)
mov
sub
inc
popa
shl
or
cmp
dec
jecxz
fwait
mov
pop
gs
test
cs
out
adc
rol
pop
push
pop
xor
adc
mov
and
adc
or
fcom
sbb
dec
jge
cmp
pop
pop
push
adc
por
test
fist
adc
xchg
sub
lods
ss
test
in
jl
retf
mov
dec
lahf
ror
dec
add
xchg
jo
jp
hlt
les
push
jns
push
xor
push
inc
or
inc
dec
dec
mov
fisubr
inc
je
xchg
and
pop
iret
add
cwde
push
call
xchg
push
inc
leave
inc
lods
pushf
cli
push
and
shl
xor
in
push
xor
pusha
cmp
and
sub
sub
push
jle
ret
jo
cmp
inc
xor
lods
lods
push
outs
dec
nop
cmp
xchg
dec
jbe
and
dec
inc
dec
push
xchg
pop
popa
test
jo
pop
or
sub
shl
sub
leave
push
mov
push
pop
nop
pop
xor
push
imul
push
push
loope
es
cdq
sub
inc
test
loop
ror
dec
aaa
aas
inc
dec
xchg
rol
mov
add
xor
mov
lahf
popa
add
jo
dec
pop
and
inc
inc
or
ret
inc
call
into
push
dec
jge
jo
cmp
inc
inc
dec
(bad)
aam
or
movs
mov
add
push
cmp
jo
push
dec
or
or
sub
je
adc
and
push
xchg
inc
les
ss
xchg
sub
ror
inc
pop
xlat
aam
inc
sub
adc
xor
je
ds
lds
dec
push
push
arpl
xchg
inc
xor
adc
in
scas
pop
dec
xchg
rol
es
popa
shr
test
mov
cs
dec
jb
loop
jecxz
pusha
loopne
xor
rcl
icebp
dec
shr
push
dec
and
aas
ret
bound
repnz
shr
rol
jb
inc
ror
inc
shr
loop
xor
push
dec
push
data16
gs
sbb
(bad)
stos
xor
mov
and
sub
mov
(bad)
bound
cld
js
add
movs
daa
les
add
add
add
mov
jbe
es
push
cmp
mov
pop
jle
(bad)
sub
sbb
or
push
add
loop
sub
ja
push
or
dec
hlt
xor
cdq
add
push
sub
fs
outs
add
loopne
pop
(bad)
aam
xchg
bound
(bad)
stos
daa
add
xchg
add
push
adc
jp
and
adc
(bad)
mov
and
ss
push
add
sbb
mov
lods
sar
xchg
cmp
or
add
pop
movs
or
xchg
cmp
(bad)
ins
dec
adc
mov
or
mov
scas
inc
scas
inc
bound
add
or
pop
xor
mov
out
and
inc
add
dec
pop
pop
push
or
int
mov
enter
push
pop
pop
inc
shr
and
fild
xchg
mov
mov
xor
mov
sbb
add
xor
les
outs
sbb
push
add
adc
popa
rcl
sub
in
inc
inc
or
xchg
mov
adc
bound
xchg
add
or
xchg
xchg
and
in
xor
inc
retf
and
scas
pop
pop
pop
inc
sbb
mov
push
sub
inc
and
xor
mov
mov
push
sbb
nop
push
and
inc
test
xor
pop
pop
xor
add
daa
add
in
push
popa
or
sub
movs
je
sbb
popa
add
gs
fs
or
add
nop
jp
adc
or
mov
jo
jp
js
hlt
push
inc
mov
xor
test
sub
daa
mov
mov
pop
cmp
fsub
es
nop
add
outs
or
push
rol
aam
xor
dec
aaa
and
gs
add
inc
or
jbe
mov
xchg
xchg
adc
rol
mov
xchg
mov
adc
sub
dec
cmp
adc
jle
adc
mov
xlat
test
ss
cwde
fsub
mov
fisubr
xor
mov
pushf
cwde
outs
aam
dec
lods
pop
inc
lods
(bad)
fs
push
push
div
sbb
stos
in
xchg
and
jecxz
xchg
inc
dec
add
sbb
add
retf
cwde
pop
push
jnp
pop
call
(bad)
nop
add
mov
shr
cli
rcl
dec
bound
pop
add
ss
dec
dec
daa
push
loopne
inc
retf
mov
popa
pusha
mov
add
ss
sub
push
mov
fsub
mov
mov
and
push
inc
add
xor
and
stos
sbb
leave
loop
int3
push
xchg
js
xor
rcr
shl
in
test
xchg
cmp
xor
dec
jb
add
add
cld
bound
cs
sub
mov
xor
xor
dec
pushaw
lods
adc
mov
loop
pop
ins
xor
call
mov
adc
aam
cmp
ja
ficomp
and
in
mov
mov
mov
mov
adc
add
js
test
ds
xchg
repnz
cmp
jo
and
fs
test
aam
retf
inc
xor
sbb
nop
add
xchg
fdiv
ret
ins
sbb
test
and
pop
push
retf
adc
push
out
jne
and
sub
push
bound
aam
loop
push
add
sub
and
pusha
xchg
cmp
push
call
pusha
imul
or
sbb
and
and
cmp
xchg
and
hlt
dec
pushf
xchg
fiadd
add
and
je
test
xor
inc
inc
add
jnp
cwde
ins
mov
add
inc
mov
adc
add
adc
and
scas
adc
or
or
sub
jo
dec
enter
or
adc
mov
cmp
push
pusha
into
ins
outs
push
inc
jg
and
cmp
sub
xchg
out
nop
push
mov
xor
sub
mov
clc
ins
sbb
sub
call
std
lock
js
cs
push
fucomip
bound
add
inc
outs
add
add
jbe
out
and
add
ror
jmp
mov
mov
ins
push
dec
inc
ret
dec
fcomp
sbb
daa
fcom
sub
push
shl
sub
mov
dec
mov
outs
xor
aam
xor
sub
pop
pushf
int3
add
jp
xchg
mov
dec
xor
mov
add
outs
xchg
test
aaa
and
xor
or
pop
add
inc
fimul
inc
ret
ins
inc
and
adc
add
popa
outs
jns
pop
daa
mov
pop
xor
sbb
sbb
mov
jp
push
push
sub
adc
jb
mov
shl
pop
push
or
xchg
dec
xor
inc
sbb
xchg
add
adc
add
cli
push
int3
sar
ror
cmp
add
retf
les
and
push
dec
js
push
and
out
sub
jo
or
enter
push
xchg
adc
or
add
fdivr
pop
stos
and
or
je
rol
adc
push
add
adc
and
mov
(bad)
and
and
lock
loop
mov
das
pop
push
(bad)
push
push
add
fs
sbb
pushf
add
ror
mov
mov
push
les
add
dec
xor
adc
pop
stos
mov
xor
call
dec
add
aam
ss
sub
sbb
fild
cmps
popa
and
(bad)
rol
mov
add
dec
in
jo
sub
and
jp
xor
ins
add
or
lock
or
push
push
push
and
push
push
sbb
sub
xor
pop
retf
and
push
cmp
movs
mov
dec
mov
jae
add
loopne
sub
nop
push
add
cwde
xor
je
popa
mov
push
adc
push
dec
mov
aas
mov
cld
shr
outs
push
clc
xor
jb
push
push
daa
adc
(bad)
push
push
push
pop
adc
inc
dec
sub
cmp
xor
jp
call
fstp
pop
xchg
add
retf
arpl
xor
call
sub
xor
dec
add
mov
je
pop
test
test
mov
imul
mov
outs
lock
xchg
retf
adc
imul
jae
jge
push
pop
adc
add
pushf
sahf
xchg
aaa
inc
enter
mov
cdq
push
inc
rol
out
and
lods
mov
ror
(bad)
enter
fdivr
enter
hlt
sbb
sub
pop
and
mov
dec
repnz
scas
adc
loope
mov
inc
loop
test
into
or
lods
stos
imul
sub
xchg
jae
adc
pop
js
push
(bad)
jns
div
or
and
imul
inc
inc
xchg
clc
pushf
push
es
cmp
mov
fiadd
ins
add
add
adc
pushf
popa
sub
dec
push
mov
rol
addr16
sbb
dec
dec
pushf
ins
mov
push
popa
jge
js
and
jne
jmp
xor
push
dec
add
or
cmp
out
add
sub
xchg
mov
lock
mov
add
and
dec
mov
sub
lds
adc
jo
push
ss
sub
sbb
cmp
pushw
add
dec
jb
cld
hlt
inc
add
add
pop
rcl
inc
data16
lds
push
(bad)
inc
inc
or
mov
dec
(bad)
pop
sbb
int
xor
add
add
outs
add
daa
jp
cmp
cwde
inc
jbe
push
or
push
jo
mov
sbb
adc
sub
add
inc
je
sbb
jne
or
add
sahf
ficom
push
push
dec
bound
xor
push
sbb
mov
mov
addr16
mov
cmp
mov
jp
or
popa
push
loop
imul
pop
mov
xchg
xor
sub
add
add
ret
sbb
mov
mov
inc
enter
add
xor
inc
sbb
mov
inc
pop
pop
or
push
nop
add
dec
nop
call
pop
push
into
adc
or
mov
add
mov
fadd
adc
inc
sub
xor
push
cmp
and
push
dec
mov
pop
(bad)
sbb
and
and
adc
add
fmul
cmp
call
sub
and
out
adc
or
push
cmps
add
or
enter
adc
fimul
dec
int3
push
sbb
mov
and
cs
imul
ins
daa
(bad)
call
push
xor
and
mov
sub
rol
jmp
mov
mov
jb
movs
xor
cmp
in
mov
and
test
loopne
test
jo
add
or
mov
fs
adc
mov
inc
lock
add
sub
cmp
adc
ins
(bad)
lock
fsubr
int3
dec
sub
and
iret
push
popa
lods
outs
loopne
jo
in
inc
and
or
adc
add
push
cmps
rol
int3
(bad)
sub
mov
xor
adc
call
mov
mov
les
inc
sub
out
(bad)
jbe
add
xchg
sbb
pusha
mov
sahf
not
sbb
add
pop
add
outs
imul
mov
jl
movs
inc
xor
adc
or
cli
inc
mov
xchg
mov
pop
jge
dec
rol
sbb
dec
add
into
enter
loopne
push
xlat
sbb
sub
inc
adc
xchg
sbb
push
xor
(bad)
add
fs
adc
xchg
xchg
xor
xor
xchg
xchg
stos
xor
repnz
add
sbb
add
aas
bound
clc
or
loopne
or
add
icebp
adc
add
call
in
cli
dec
adc
mov
addr16
inc
inc
popf
inc
stos
add
daa
sub
retf
sbb
je
sbb
add
pop
loop
or
enter
gs
push
push
pop
mov
cs
sbb
push
sbb
mov
or
dec
push
loopne
rol
or
inc
add
daa
adc
int3
inc
or
pop
add
pop
push
sub
adc
aam
adc
mov
and
inc
and
test
cmp
outs
xchg
inc
xchg
mov
jno
pop
or
into
inc
and
xor
scas
jp
or
inc
push
inc
(bad)
imul
mov
add
jp
sub
and
add
xchg
cs
call
pop
stos
dec
mov
xor
sbb
and
adc
xor
push
cmps
(bad)
mov
rol
jp
mov
movs
sbb
push
push
jl
pop
xchg
in
sub
arpl
add
nop
popa
or
add
jo
add
inc
inc
bound
mov
inc
cmps
test
popf
test
adc
sbb
xchg
add
push
shr
adc
lods
cmp
jb
fcom
adc
js
jne
and
cmp
ror
jns
jo
sub
fs
inc
dec
pop
mov
rcl
aaa
inc
inc
push
mov
xor
push
mov
adc
sub
popa
outs
and
int3
xchg
rcl
enter
push
or
jecxz
pop
sub
sub
pop
clc
in
xor
cmp
lods
leave
das
pushf
jo
test
add
cmp
adc
add
les
bound
cs
mov
(bad)
cli
mov
add
or
xor
stos
aam
mov
mov
daa
aaa
(bad)
pop
adc
cmp
inc
push
inc
aam
inc
adc
adc
sbb
and
sbb
arpl
mov
pop
nop
dec
add
ss
ins
pop
add
icebp
out
sbb
pop
fs
sbb
in
(bad)
hlt
cmp
fmul
cmp
sbb
cli
es
aas
dec
retf
pop
xchg
sbb
shr
arpl
adc
scas
mov
gs
ja
add
inc
inc
add
mov
dec
and
loop
dec
and
sar
xor
sbb
pop
or
jb
adc
shl
nop
push
adc
push
inc
dec
or
and
xor
popf
adc
test
cwde
test
cmp
push
xor
or
nop
aaa
scas
xor
sbb
retf
ret
into
inc
push
test
mov
dec
fadd
cs
loop
es
ds
inc
or
push
mov
pop
cmps
push
push
mov
ds
push
cmp
mov
jle
movs
mov
dec
mov
add
dec
outs
sub
jne
cmp
pop
or
and
dec
inc
or
xor
mov
xor
or
or
add
xor
xor
lock
add
add
or
sub
sub
movs
dec
ins
mov
pushf
inc
and
in
sbb
ins
in
mov
sub
or
mov
pusha
adc
cmp
xchg
mov
call
pop
sbb
das
xor
adc
add
lea
sbb
push
push
dec
nop
mov
push
or
push
sub
jnp
mov
dec
pop
into
sbb
xchg
add
pop
add
dec
push
push
xchg
push
movs
inc
and
push
pop
pop
movs
adc
mov
cmp
push
add
dec
adc
jmp
adc
dec
in
test
pop
mov
inc
movs
div
and
mov
or
dec
or
mov
daa
inc
scas
jbe
sub
xor
adc
and
inc
push
cmp
sbb
shl
mov
cli
cmp
mov
xor
or
dec
pop
bound
pop
sub
adc
sub
mov
mov
mov
add
add
push
push
and
push
mov
sbb
push
pop
adc
mov
nop
adc
fistp
inc
test
sahf
dec
sbb
push
inc
retfw
and
mov
xor
inc
ins
dec
inc
or
or
xchg
add
les
xor
mov
icebp
sub
pop
pushf
xor
push
xchg
mov
jle
add
into
sub
sub
sbb
inc
inc
imul
dec
mov
dec
retf
inc
daa
push
nop
pop
xor
sbb
pop
(bad)
retf
sub
je
sbb
pop
push
jmp
aad
jl
xor
sub
pop
daa
dec
ins
and
sbb
push
xor
sbb
dec
dec
xchg
inc
add
and
mov
dec
daa
ror
and
add
dec
pop
arpl
push
call
cmp
xor
bound
jno
dec
sbb
and
sub
sub
sub
sbb
or
inc
xchg
adc
clc
stos
imul
pop
sub
or
aam
test
es
cdq
inc
iret
inc
and
adc
les
push
cmp
add
and
call
imul
retf
fsubr
xor
popf
mov
push
and
add
push
inc
add
push
mov
add
push
push
clc
loopne
and
cmp
and
adc
pop
cmp
imul
ror
inc
push
movs
mov
into
stos
sub
sahf
mov
mov
mov
pusha
inc
aam
adc
sub
pop
outs
out
adc
inc
inc
sub
or
jmp
jae
push
popf
push
push
xor
push
and
and
sub
inc
adc
add
movs
and
mov
cmp
cmp
or
xor
and
cs
imul
or
mov
mov
or
pushf
add
sbb
or
cs
sub
enter
xor
push
add
inc
aam
ins
lea
xor
mov
mov
sbb
add
or
(bad)
sbb
mov
sbb
pusha
mov
jo
(bad)
out
mov
outs
xor
push
popf
jo
pushf
pop
mov
and
cmp
push
sbb
repnz
pop
test
imul
out
ss
add
neg
xchg
mov
out
xor
xchg
inc
les
dec
ins
pop
pop
scas
or
or
mov
push
push
sbb
fs
xchg
push
dec
dec
bound
cmp
inc
scas
push
sbb
xchg
push
sbb
in
cmp
js
ret
sub
inc
inc
inc
add
and
pusha
inc
add
cli
aas
inc
test
adc
push
clc
inc
sub
ins
ret
stos
mov
test
ror
sub
and
sub
jo
js
test
je
pop
xor
bound
sub
loope
sub
jp
push
jb
loop
sub
push
inc
mov
lock
push
add
call
add
(bad)
mov
inc
es
arpl
ret
mov
(bad)
out
inc
inc
and
pop
mov
shl
test
xchg
nop
imul
adc
pop
pop
fadd
push
and
mov
cwde
mov
push
push
dec
sbb
jl
push
jb
mov
dec
push
(bad)
or
and
sub
outs
(bad)
mov
addr16
sub
push
push
pusha
or
dec
adc
pop
nop
or
and
dec
jmp
(bad)
test
sar
xor
adc
push
push
push
adc
mov
loopne
cmp
push
inc
mov
pop
pop
mov
or
mov
inc
inc
inc
mov
mov
inc
int3
pop
jmp
sbb
xchg
xor
cmp
push
mov
pop
dec
inc
or
dec
push
inc
xchg
add
pop
ficomp
or
mov
sub
xor
dec
or
jecxz
data16
and
fdiv
jl
xor
adc
push
into
add
ret
cmp
or
push
jp
pusha
sub
xlat
ins
(bad)
sub
adc
add
xor
test
inc
and
push
fdiv
sub
dec
pop
xchg
rol
add
push
sub
mov
push
or
dec
pop
push
mov
sbb
cld
jnp
or
xchg
adc
data16
lods
add
outs
es
pop
aaa
call
out
pop
mov
daa
push
js
jl
rol
and
mov
(bad)
iret
add
rol
rcr
jo
fiadd
ins
push
out
popa
or
sbb
rcl
rcl
mov
(bad)
or
inc
push
cmps
jge
adc
jo
aaa
jbe
mov
cmp
or
imul
xchg
push
mov
cmp
sub
fs
sub
add
and
cmp
mov
xor
and
inc
or
shl
sbb
jbe
test
dec
xor
jno
add
inc
dec
sahf
adc
inc
dec
shl
mov
data16
dec
fsub
mov
es
push
movs
push
pop
and
add
or
add
push
cwde
jns
not
cdq
add
(bad)
mov
jp
push
mov
cmps
sbb
sub
xor
fwait
push
dec
mov
ja
jb
sar
dec
push
pop
add
bound
mov
sub
sbb
push
jb
shl
adc
dec
mov
push
es
adc
adc
lods
and
shr
jl
test
mov
add
pushf
inc
and
dec
jo
loopne
adc
xor
or
adc
ja
ins
retf
xor
adc
dec
pop
inc
push
dec
push
inc
inc
add
xor
ss
fst
mov
jg
lock
mov
ror
data16
add
loopne
adc
and
add
dec
jl
inc
add
outs
mov
lea
out
push
pop
jg
test
push
and
lods
movs
pop
push
push
enter
les
dec
adc
cs
(bad)
push
cld
pusha
movs
popa
test
js
add
nop
into
aam
retf
arpl
cli
and
popf
iret
adc
inc
int3
pop
push
or
or
sub
push
xchg
xchg
mov
or
push
jg
mov
xchg
dec
stos
pop
add
dec
call
stos
and
adc
fdiv
test
push
jg
sbb
ret
js
and
add
add
pop
or
or
push
pop
bound
xor
xchg
pusha
sbb
inc
pop
sub
scas
mov
retf
push
pusha
pusha
data16
xor
rcl
cmp
xor
nop
inc
scas
add
int
xor
jns
cs
add
or
ds
fadd
adc
rcr
pop
and
pop
or
popa
xor
sub
add
lock
push
loop
jg
and
and
jno
test
mov
dec
popf
or
jmp
outs
or
xor
add
mov
cwde
sub
add
or
daa
push
mov
pop
sar
dec
adc
popf
dec
xor
add
in
jle
retf
cli
shl
and
ss
scas
sbb
push
pop
ins
jl
test
sar
push
loope
or
and
sub
gs
and
cs
dec
dec
and
and
retf
xchg
fnstenv
ins
jp
xchg
mov
(bad)
cdq
inc
outs
pusha
dec
and
int3
sub
sahf
xor
or
xor
ins
loop
nop
mov
sub
add
test
and
or
les
mov
ficomp
push
and
lea
call
or
fwait
xchg
dec
nop
sub
ret
add
test
pop
out
ss
mov
stos
add
pop
pop
jmp
cmp
inc
dec
cmc
add
sub
inc
div
je
inc
push
jo
mov
or
and
test
mov
or
xor
js
mov
add
lea
stos
das
and
js
adc
pop
pop
push
adc
jl
js
jb
push
cmp
push
dec
xchg
pop
pop
fbld
inc
mov
pop
inc
dec
sub
pushf
rcl
mov
adc
cmp
add
inc
int3
inc
div
cmp
xor
or
aam
shr
mov
push
jecxz
js
push
jge
test
or
popa
sbb
sub
push
add
or
out
or
js
pushf
cmp
sbb
add
pop
gs
fild
ret
pop
xchg
add
mov
and
test
mov
dec
pop
push
mov
les
rol
sub
call
push
or
push
mov
addr16
sub
jo
pop
cs
xor
add
or
sbb
xchg
pusha
xchg
push
sub
mov
pop
int3
es
scas
pop
mov
test
add
or
(bad)
retf
mov
xor
dec
dec
fld
aas
bound
sbb
inc
dec
push
add
sub
inc
mov
(bad)
push
dec
jo
inc
jb
mov
adc
pusha
movs
shl
popa
sub
adc
pop
add
rcr
ret
bound
dec
jle
or
pop
add
jmp
dec
mov
xor
inc
push
sbb
loop
inc
or
add
in
sbb
mov
sbb
mov
adc
push
add
pop
sbb
xor
dec
add
cld
jl
mov
bnd
or
es
push
sbb
int3
xor
fcomp
xor
aas
adc
mov
xchg
push
add
js
fcom
dec
icebp
sbb
sub
dec
enter
mov
xor
cmp
inc
xor
sub
and
aam
cli
mov
inc
and
push
cld
push
lods
rcr
add
dec
stos
adc
and
mov
or
sbb
sar
and
dec
pop
push
scas
xlat
push
sahf
dec
add
sub
push
imul
dec
or
adc
rcr
inc
aam
xor
popa
push
nop
(bad)
adc
adc
or
xchg
inc
or
mov
adc
out
sub
jo
cmp
push
xor
(bad)
cld
jle
and
jp
cmp
and
dec
inc
popa
sbb
xchg
mov
leave
jo
mov
adc
pop
sub
cdq
shr
imul
dec
dec
dec
dec
add
mov
dec
mov
xchg
test
inc
cmp
push
xchg
loopne
daa
data16
add
jbe
adc
loope
inc
rol
add
xor
add
sub
mov
sub
and
mov
sub
sub
add
shr
xor
push
js
xor
sahf
sub
or
add
adc
or
fcom
xchg
adc
test
dec
inc
pusha
add
pop
hlt
mov
movs
add
nop
dec
pop
or
mov
in
or
adc
pop
pushf
xchg
xchg
test
dec
xor
enter
push
test
and
or
shl
jo
mov
fst
call
and
jl
daa
test
mov
push
mov
mov
add
push
inc
cmp
add
cmp
sahf
je
jge
mov
out
xchg
shl
mov
or
(bad)
mov
jmp
jbe
xor
call
jle
daa
mov
fs
aaa
clc
adc
inc
add
sbb
in
jp
jmp
xor
mov
inc
outs
dec
lock
pop
push
push
or
enter
add
xchg
sbb
xor
sbb
or
sbb
(bad)
(bad)
sbb
adc
call
je
cmp
dec
pop
ins
js
ret
mov
mov
(bad)
push
pop
ins
ins
jmp
or
cmp
or
inc
pop
mov
mov
(bad)
and
jle
dec
or
je
dec
pop
test
data16
or
ret
cmp
adc
ror
mov
ds
add
sub
pusha
je
cmps
add
loope
aam
outs
pop
and
lods
push
sbb
mov
adc
pop
clc
add
mov
ins
js
cmp
pop
jbe
jae
push
mov
les
dec
push
mov
jo
stos
add
push
bound
xor
add
sub
dec
dec
(bad)
stc
adc
xor
xor
arpl
xlat
and
test
or
aas
mov
ror
add
test
enter
sub
pusha
dec
dec
daa
sub
adc
gs
add
or
imul
xchg
xor
sub
fidivr
cld
pop
adc
adc
sub
outs
cwde
inc
or
mov
dec
push
loop
je
mov
cmp
inc
test
loop
dec
xchg
dec
nop
scas
jl
pusha
dec
or
push
cs
inc
or
rcr
fild
push
inc
hlt
and
js
push
shl
pop
pop
je
and
push
mov
add
inc
gs
or
push
clc
movs
outs
test
push
and
addr16
pop
sbb
dec
cli
xor
mov
inc
in
ds
add
or
sbb
mov
aam
test
jmp
or
add
dec
xchg
loopne
and
xchg
imul
pop
imul
jb
loopne
cs
dec
mov
cmps
jno
sub
adc
jb
dec
xor
mov
sbb
adc
sub
sbb
adc
pop
pop
push
shr
xor
cli
mov
or
mov
ins
into
adc
rcl
cs
and
add
and
sub
pop
push
sbb
mov
addr16
xor
jmp
add
in
jb
sbb
test
(bad)
pop
pop
std
or
sbb
mov
fadd
mov
push
inc
jge
xor
inc
push
inc
push
inc
push
aas
sar
xchg
or
ss
retf
inc
test
enter
inc
add
cmp
mov
popa
popa
or
push
loopne
inc
movups
call
data16
test
and
inc
popa
sub
push
ror
int3
cmp
add
mov
inc
pushf
ret
xor
cmps
and
and
add
pushf
add
fisub
movs
mov
add
sbb
movs
dec
jmp
push
cmps
cmp
jae
jmp
into
popa
rcr
and
add
inc
lock
push
pop
pusha
inc
sub
shl
and
xor
sub
add
push
repnz
sub
in
dec
loop
loope
sahf
pop
inc
les
test
push
lods
push
mov
loopne
pop
add
(bad)
pop
inc
mov
inc
lods
add
sbb
add
add
lods
sbb
jp
sub
add
mov
outs
push
dec
shl
mov
sub
inc
push
sbb
das
cmp
push
mov
push
es
mov
xor
and
push
pop
test
imul
jae
outs
inc
xchg
dec
into
add
xchg
xchg
adc
or
dec
pop
call
sub
push
out
inc
or
mov
call
pop
pusha
pusha
add
inc
loopne
add
or
and
xor
aaa
or
sbb
pop
addr16
imul
add
ins
shl
mov
les
cli
or
ja
and
pushf
pop
ds
xchg
sahf
add
sub
in
add
adc
cmps
xchg
int3
add
cmp
xchg
jl
or
nop
cwde
cld
inc
jp
adc
js
loopne
movs
nop
sbb
jo
jmp
push
mov
jo
xchg
lea
movs
sub
je
mov
outs
jnp
aaa
and
dec
pop
repnz
and
retf
inc
rol
popa
adc
es
sbb
pop
add
pushf
mov
push
jo
jo
jb
movs
adc
mov
daa
mov
sub
sbb
dec
add
xchg
cld
and
pusha
nop
mov
hlt
es
outs
clc
push
pop
imul
pop
add
mov
xchg
and
add
xor
xchg
inc
push
and
adc
popa
les
test
cwde
bound
cld
or
xor
mov
sub
and
adc
nop
push
push
dec
push
cmp
xchg
pop
jb
aam
cmp
js
inc
sbb
mov
mov
aas
sbb
mov
mov
js
aam
push
or
push
scas
and
aam
push
adc
and
add
mov
mov
inc
push
pop
int3
fdiv
jp
mov
stos
out
mov
test
nop
mov
outs
xchg
shl
add
xor
movs
inc
test
inc
mov
xchg
and
cmps
and
sub
mov
push
popa
mov
das
into
stos
sbb
or
jbe
push
cwde
imul
mov
pop
sbb
rol
je
(bad)
movs
adc
stos
sub
sahf
inc
inc
pusha
adc
or
ins
jmp
add
nop
ret
xor
and
nop
ret
test
mov
and
add
adc
arpl
ror
mov
jbe
xor
inc
push
ret
lods
dec
xchg
adc
pusha
popa
imul
adc
pop
test
and
adc
add
or
and
add
mov
test
(bad)
(bad)
cmp
fidiv
fs
popa
dec
cli
test
sbb
adc
xor
mov
call
push
ja
rol
push
sub
inc
push
and
data16
popa
add
pop
call
sub
pop
sbb
pop
or
sbb
push
mov
cmp
retf
mov
dec
call
push
push
add
or
jle
(bad)
mov
inc
pop
xchg
adc
pop
inc
or
add
add
and
xchg
sub
call
and
mov
test
cmp
dec
inc
add
sub
xchg
cmp
ds
add
es
add
sbb
pop
add
mov
sub
inc
sbb
dec
inc
adc
push
add
push
or
mov
lods
add
sbb
dec
add
cs
adc
add
cmp
dec
and
adc
jb
mov
or
retf
mov
inc
dec
push
add
dec
inc
enter
mov
fcom
dec
and
sar
js
jo
or
inc
arpl
mov
int3
rol
pop
mov
bound
and
jp
pop
add
adc
dec
add
and
and
push
inc
aaa
sbb
ss
fsub
mov
sub
adc
outs
sbb
bound
add
lods
cmps
clc
out
add
add
pop
and
and
dec
rcl
or
dec
push
loop
jp
xor
aam
(bad)
aas
inc
cs
nop
or
mov
jnp
sub
add
jmp
jno
sbb
inc
adc
sbb
rcl
push
mov
mov
pop
es
sub
inc
mov
pop
sbb
sub
and
push
cli
popa
jo
xor
and
and
jbe
pop
and
rol
dec
push
dec
jl
add
xor
add
pop
push
dec
pop
test
jo
pop
adc
sbb
je
add
adc
or
cmp
sbb
scas
inc
mov
pop
aas
pop
mov
and
and
xor
adc
int3
adc
pushf
xor
push
test
inc
pusha
inc
shr
mov
add
shr
adc
retf
leave
inc
movs
inc
dec
inc
inc
inc
push
inc
add
jo
shr
jns
xor
cmp
sub
jmp
cmp
shl
sub
sbb
sub
push
bnd
mov
inc
out
dec
das
push
mov
push
fiadd
test
push
ror
pop
mov
(bad)
ins
lock
imul
inc
ja
inc
sub
push
inc
adc
and
add
sbb
dec
es
gs
or
adc
pop
fdivr
sbb
aam
push
sub
cmp
sahf
push
pop
fisubr
add
mov
adc
mov
dec
cwde
loop
mov
sbb
xchg
loope
mov
call
jmp
inc
xchg
outs
dec
mov
es
push
stos
add
and
jb
movs
or
nop
and
dec
inc
and
inc
out
clc
data16
jb
push
and
ds
sbb
push
sub
sub
inc
xor
loopne
and
adc
xor
hlt
ja
inc
push
xor
js
sub
inc
dec
inc
sub
cdq
loop
sub
imul
dec
in
push
xchg
je
inc
and
add
lods
sbb
cmp
mov
adc
call
xchg
rcl
jbe
call
xchg
push
das
inc
and
adc
test
and
popa
scas
push
and
xchg
push
adc
cs
xchg
mov
lods
push
(bad)
(bad)
mov
(bad)
xor
mov
int3
sub
or
xor
out
pushf
jo
out
xor
pop
mov
js
and
push
sub
dec
cmp
push
sbb
jb
push
sbb
cmps
fimul
call
mov
add
add
ds
push
add
xor
and
add
xor
push
adc
pop
js
or
add
cmp
dec
mov
inc
xchg
fsubr
adc
cs
dec
inc
add
or
sbb
test
jnp
mov
inc
dec
or
xor
pop
xor
or
sbb
mov
xchg
daa
fcom
xchg
push
inc
pusha
(bad)
cmp
and
and
(bad)
sub
add
push
inc
lea
xor
jmp
nop
int3
xor
dec
outs
push
cmp
add
ds
adc
call
sub
popa
add
push
bound
add
xor
ja
cmp
jnp
and
(bad)
and
call
push
mov
ret
fsubr
cdq
sub
sahf
aas
aas
dec
mov
cld
and
test
xchg
pop
jp
mov
aaa
and
jp
inc
and
inc
mov
call
call
sub
or
pusha
test
or
and
jb
push
push
pop
jbe
xchg
pusha
xchg
push
push
pop
cs
inc
aaa
aam
pushf
gs
ins
and
and
or
into
es
outs
fmul
pop
cmp
and
add
sub
adc
or
pushf
or
fdiv
mov
or
test
xchg
xchg
dec
(bad)
push
mov
dec
pop
sub
add
xor
call
lds
or
jle
push
mov
and
jmp
les
mov
sbb
cmp
pusha
cs
gs
jle
and
sub
js
xchg
cdq
add
mov
and
pusha
ss
inc
pop
add
inc
sub
push
dec
jb
adc
push
mov
rol
push
push
adc
xchg
push
push
inc
inc
jo
sub
adc
push
xchg
retf
xchg
adc
mov
jge
mov
test
adc
stos
(bad)
jp
call
add
mov
data16
xor
xchg
xor
jnp
fadd
xor
daa
inc
cmps
pop
add
push
popa
push
test
or
loop
nop
dec
or
adc
xor
mov
retf
or
outs
pusha
push
imul
js
xor
sub
(bad)
nop
js
lds
adc
or
mov
xchg
or
or
pop
and
pop
fadd
or
leave
adc
mov
aam
or
mov
push
mov
cmp
or
sub
pop
js
mov
xchg
push
nop
clc
and
push
mov
push
inc
add
adc
or
or
in
cmp
inc
stos
sub
cmp
push
dec
adc
jmp
lods
mov
push
push
sub
add
dec
fmul
stos
nop
xor
jo
and
mov
cmp
je
retf
add
cld
sar
or
and
lahf
ja
dec
and
push
cmp
add
fcmove
popa
mov
push
pop
pusha
push
push
dec
cmp
xchg
dec
bound
push
adc
add
cs
test
ins
pushf
sar
mov
mov
sbb
adc
sbb
sub
or
lock
ss
pop
(bad)
fimul
or
add
mov
push
sub
sbb
fcomp
add
and
and
add
enter
add
xchg
lods
fdiv
dec
dec
add
push
fcomp
mov
pop
add
xor
das
lods
dec
ins
jecxz
sub
and
cli
movs
xchg
sbb
jl
jo
xlat
cmps
cwde
inc
push
pop
popa
push
mov
inc
add
push
mul
push
in
stos
ret
xchg
dec
inc
dec
mov
rcr
xchg
push
xor
pop
mov
sbb
or
pop
dec
or
(bad)
out
xchg
dec
cmp
jl
loopne
aad
fidivr
mov
adc
adc
pop
mov
pop
mov
movs
mov
mov
jns
scas
or
add
xor
movs
cwde
xor
sbb
jb
and
inc
inc
push
cdq
push
dec
jb
add
jo
adc
jns
sahf
or
inc
adc
bound
push
mov
dec
and
stos
sbb
xchg
sbb
push
xchg
jns
fs
xchg
movs
xor
mov
push
inc
fidivr
push
ret
pop
ds
js
xchg
and
dec
mov
push
or
add
adc
add
or
cwde
push
popa
imul
das
xor
pusha
or
lock
and
add
aad
sbb
pop
push
and
mov
cmps
out
aas
mov
out
sub
dec
sub
and
inc
and
or
push
xor
inc
sub
cmp
mov
adc
and
es
xchg
and
test
push
int3
xor
test
sbb
inc
pop
xor
and
and
jo
mov
imul
out
dec
bound
test
call
cmp
test
(bad)
(bad)
mov
fadd
(bad)
aas
dec
cld
dec
jge
add
and
fs
push
push
rol
dec
adc
push
push
(bad)
cmp
dec
mov
push
and
and
je
push
xchg
nop
pop
jbe
int
fidiv
dec
sbb
sub
push
aaa
movs
dec
fbstp
dec
mov
mov
inc
and
or
pusha
push
add
js
push
add
xchg
(bad)
push
loopne
ror
xor
and
inc
inc
dec
push
xor
mov
(bad)
jl
jo
enter
add
and
dec
dec
push
test
js
lock
int3
imul
and
lds
test
xchg
push
adc
stos
add
and
jp
idiv
push
pop
loope
pop
push
cmp
mov
test
push
push
pop
inc
jo
or
adc
adc
ins
adc
adc
add
lock
xor
test
or
mov
add
cwde
retf
and
inc
add
add
push
mov
xchg
ds
aam
cmp
sub
sub
ss
dec
ret
cs
xor
and
inc
dec
jb
arpl
inc
sbb
push
add
push
xchg
sbb
cmps
push
pop
mov
or
fimul
mov
or
mov
cmps
or
lock
adc
ss
fmul
les
outs
xchg
add
mov
loop
sbb
xchg
pop
xor
and
ret
inc
cmp
js
inc
or
cmp
or
push
jb
aam
xchg
adc
ins
shr
add
pop
(bad)
cmp
push
outs
ret
ins
inc
add
clc
fisub
jmp
sbb
cmps
push
push
popa
xchg
dec
mov
or
test
push
inc
dec
call
mov
jl
cmp
cmp
xor
inc
mov
imul
into
test
mov
sub
outs
or
leave
popa
in
mov
dec
outs
mov
nop
sahf
ror
or
sbb
add
push
xchg
or
cmp
mov
sub
sahf
and
es
cmps
test
and
sub
mov
add
pop
dec
sub
inc
cmp
jbe
add
sub
push
cld
push
cwde
jo
mov
nop
adc
xor
cmp
and
shl
pusha
gs
bound
out
lahf
and
sub
or
push
ss
int3
nop
test
sub
mov
je
aaa
inc
test
sbb
xor
xchg
push
pop
cmp
dec
dec
inc
stos
test
retf
pop
cmp
mov
adc
pop
mov
inc
inc
and
(bad)
cmp
inc
dec
pop
pop
(bad)
ret
jle
inc
retf
movs
xor
dec
sub
xchg
fdiv
ds
loopne
cmc
jl
and
mov
and
jae
adc
sbb
aaa
xor
add
cdq
(bad)
daa
sub
adc
dec
push
cmp
xor
push
mov
push
ret
sub
push
pop
pop
and
sbb
ror
fcomp
aaa
push
xchg
push
inc
push
push
or
and
daa
push
ret
and
outs
inc
data16
xchg
push
mov
jp
inc
fisttp
ins
jge
push
jge
inc
and
dec
jp
arpl
test
pop
mov
inc
mov
or
dec
or
push
push
mov
push
shl
cs
test
push
push
pop
data16
aas
pop
jo
pop
push
pop
test
jp
push
push
test
dec
mov
int3
push
dec
push
or
inc
lods
pop
inc
adc
out
nop
xchg
mov
and
adc
sub
dec
stos
jle
dec
mov
or
sbb
sub
or
push
jo
push
mov
test
xchg
scas
pusha
mov
add
int3
stos
sub
add
and
and
or
sbb
aas
sbb
and
pusha
xor
sub
or
adc
inc
xor
push
pushf
and
adc
data16
lods
inc
das
add
pop
repnz
dec
xchg
add
outs
ret
or
js
cmp
or
adc
add
mov
and
push
adc
push
daa
mov
mov
movs
adc
mov
cmp
sar
movs
lods
or
pop
ins
xchg
push
mov
adc
test
sub
cmp
mov
cwde
pop
or
inc
push
or
and
and
sbb
sahf
sub
cld
mov
sub
mov
je
sbb
popa
jbe
push
retf
xchg
jb
mov
sahf
pop
ja
cmp
add
pop
outs
daa
loopne
inc
cs
push
lock
push
xor
movs
dec
sbb
inc
mov
mov
add
adc
mov
iret
popa
(bad)
xor
and
xchg
or
jo
outs
fcomp
pushf
stos
add
fs
dec
push
dec
dec
dec
dec
ds
push
push
sub
and
sub
je
jmp
mov
aas
inc
iret
inc
popf
pusha
sub
xor
push
jmp
xor
test
or
push
mov
xchg
fisttp
(bad)
mov
xor
call
push
inc
addr16
out
or
es
add
es
sbb
test
sub
xchg
push
dec
(bad)
out
add
ret
rcl
xchg
or
retf
ret
cld
pop
test
les
push
xchg
and
sbb
sbb
ins
call
mov
dec
test
and
dec
sub
xor
xor
inc
pop
pop
rol
adc
outs
dec
push
mov
fcmovb
retf
or
and
out
outs
js
inc
mov
sub
(bad)
rol
inc
bound
xor
or
adc
add
cmp
bound
xchg
rcl
jmp
cmps
push
int
mov
mov
outs
sbb
sub
inc
mov
ja
push
xchg
hlt
cmp
push
push
popa
gs
test
cmp
ret
inc
adc
xchg
add
fisttp
inc
xchg
pop
imul
cmp
adc
sbb
add
add
xchg
adc
popa
sub
add
push
popa
mov
test
mov
or
or
sub
out
sub
loope
test
movs
push
push
xor
es
clc
cmp
mov
inc
sub
jl
xor
dec
adc
push
pop
adc
popa
(bad)
ja
popa
xor
mov
fs
cmp
mov
in
js
mov
dec
or
or
pop
loop
or
cmps
adc
cmp
dec
mov
sbb
inc
sbb
popf
push
cmps
mov
clc
xor
dec
xor
add
cli
cli
and
les
mov
pop
and
es
and
movs
fidiv
dec
enter
nop
mov
call
movs
push
xchg
inc
xchg
fnsetpm(287
test
dec
inc
or
add
inc
cs
test
cmp
and
dec
cmp
dec
pop
push
pop
ret
and
cmp
sbb
nop
mov
push
test
push
retf
dec
jp
shr
sub
fisubr
xor
inc
push
nop
data16
inc
xchg
rol
ins
enter
inc
push
add
mov
xchg
stos
lock
movs
sub
pop
mov
sub
xchg
sub
and
pusha
or
xchg
or
add
pop
dec
or
pusha
push
cmp
nop
enter
ins
nop
int3
aam
je
cs
out
lock
inc
push
lahf
fs
xchg
into
lods
xor
push
xor
add
(bad)
sub
loopne
sbb
mov
rcl
jo
pop
inc
cmp
cs
xor
cwde
jne
cmp
push
loop
dec
push
dec
pop
fwait
clc
push
call
lock
je
xchg
jno
sbb
clc
pop
push
test
pusha
fs
inc
or
or
push
sbb
fimul
add
xchg
dec
xchg
cmps
pop
popa
inc
dec
jmp
inc
dec
movs
push
inc
push
call
push
mov
pop
js
inc
pusha
stos
push
sbb
or
(bad)
or
jl
ins
call
push
pop
aam
mov
ss
dec
hlt
push
in
xor
sub
dec
inc
push
jp
inc
sub
push
and
push
nop
or
push
mov
adc
ss
fidiv
lock
and
xchg
dec
sub
lock
pusha
enter
and
or
sub
xor
dec
adc
xchg
xor
add
loope
hlt
rol
and
add
sbb
sub
sub
fsubr
fidivr
push
jmp
sub
mov
adc
jl
inc
call
sahf
clc
jl
data16
dec
add
imul
inc
inc
mov
and
sub
dec
shr
inc
push
aaa
pop
shr
test
test
xchg
ins
(bad)
aam
adc
cdq
sub
inc
mov
add
je
fstp
add
mov
cmp
jl
or
and
loopne
dec
jmp
or
push
mov
push
push
mul
xchg
xchg
dec
ds
add
push
test
and
xor
pop
add
add
ins
loop
or
add
movs
mov
push
add
pop
xor
dec
push
cmp
lock
add
stos
add
test
push
mov
sbb
xchg
push
test
add
sub
mov
mov
pop
inc
or
xchg
cmp
push
mov
inc
or
fmul
fstp
push
je
pushf
and
adc
or
out
inc
jmp
or
outs
loopne
and
jp
inc
pusha
sub
enter
inc
jb
jnp
cmp
inc
loopne
stos
sbb
idiv
dec
add
pop
inc
cli
mov
sub
inc
mov
adc
adc
adc
retf
nop
fs
mov
inc
xchg
mov
ret
jo
add
inc
push
add
jmp
pop
push
mov
daa
dec
sbb
and
daa
cmp
test
cdq
add
stos
and
inc
sub
sub
ins
push
adc
call
popa
retfw
pop
adc
cwde
popa
adc
out
imul
shl
sub
inc
outs
jge
das
nop
or
adc
mov
cmps
jbe
dec
ficom
sbb
lock
and
mov
inc
inc
sbb
pop
je
sbb
push
push
push
inc
or
and
or
sub
hlt
inc
mov
xor
lock
ins
jne
jb
sub
jb
or
mov
sbb
add
aam
aam
rcr
xchg
and
int3
and
push
push
xchg
ins
add
adc
pop
pop
ja
and
sbb
or
add
loopne
inc
sub
and
loopne
in
loope
ds
inc
mov
imul
pushf
jb
lock
xor
push
adc
test
and
push
test
sbb
xchg
push
jo
and
arpl
push
inc
not
rcl
ret
and
outs
adc
mov
add
adc
test
inc
jmp
inc
movlps
inc
sahf
enter
and
fs
int3
and
inc
and
call
stos
cli
sub
hlt
movs
adc
pop
in
add
test
dec
pop
and
inc
push
retf
sbb
push
add
inc
outs
push
dec
sub
mov
and
xchg
adc
jb
clc
inc
xchg
sbb
jl
and
dec
add
lahf
in
ror
in
inc
rol
mov
and
pusha
addr16
and
dec
dec
cwde
and
in
adc
add
mov
sub
jbe
push
push
dec
cmp
lods
jb
adc
and
mov
stos
ss
adc
dec
add
(bad)
sub
jne
or
pop
inc
mov
mov
cmp
xor
inc
call
mov
enter
enter
push
test
and
add
cli
push
test
(bad)
push
dec
bound
add
add
arpl
sbb
sbb
inc
xchg
add
les
sbb
movs
dec
es
pushf
mov
sub
and
xor
aam
adc
cmp
dec
and
pushf
leave
inc
cdq
sbb
or
add
sub
cwde
(bad)
(bad)
dec
inc
sbb
pop
arpl
lods
lea
pop
mov
ret
dec
xor
loop
dec
add
es
dec
pop
push
add
jbe
sub
or
add
sbb
inc
add
sub
push
dec
xchg
inc
adc
jmp
pop
and
ss
les
pop
push
jmp
mov
jne
das
dec
mov
outs
ja
dec
dec
imul
push
add
(bad)
leave
jb
popf
enter
push
mov
mov
mov
mov
push
push
cmps
add
add
inc
inc
dec
sub
aas
mov
call
mov
xor
xchg
add
inc
push
and
push
xchg
jmp
or
xchg
lahf
push
sub
inc
mov
push
push
ins
(bad)
aam
push
inc
inc
dec
push
jg
test
mov
add
cdq
adc
add
push
push
popa
loope
lods
mov
mov
mov
fadd
adc
loop
imul
mov
fistp
bound
test
or
je
pop
jo
mov
int3
sub
ret
xchg
iret
test
les
sub
mov
mov
mov
push
ds
xor
sar
dec
pop
pop
xlat
outs
nop
push
xor
es
mov
(bad)
mov
cwde
and
mov
mov
xor
xchg
add
dec
xchg
dec
not
and
xchg
add
cmp
or
scas
test
jl
sbb
rcl
adc
pop
and
pop
test
icebp
dec
pop
aaa
cld
pusha
dec
sbb
inc
jno
arpl
push
cdq
add
scas
push
add
test
nop
cmp
(bad)
xchg
repnz
bound
cmc
aad
call
adc
mov
xchg
xor
ror
mov
add
cwde
scas
inc
dec
add
(bad)
pop
add
(bad)
iret
push
loopne
mov
out
or
push
xor
and
iret
mov
xor
add
push
iret
add
jb
push
das
mov
nop
add
call
add
pop
das
push
adc
push
mov
loop
push
mov
mov
add
daa
pusha
xchg
in
out
dec
test
push
das
dec
ins
je
and
adc
sbb
push
sbb
push
inc
xchg
jle
fst
sar
xchg
aam
loop
push
int3
js
and
lods
jne
cmp
aam
aam
mov
xchg
xor
dec
inc
test
pop
mov
cmps
lds
push
jbe
add
imul
aaa
push
push
sub
mov
mov
lods
dec
test
clc
ret
cmp
jae
mov
inc
inc
dec
push
test
mov
out
outs
jge
inc
shl
ret
or
lods
call
outs
mov
cs
pusha
popa
or
loop
jno
imul
cmp
add
addr16
and
(bad)
inc
lock
sub
push
pusha
(bad)
cld
push
mov
jl
sbb
xchg
jle
push
in
test
push
mov
push
push
or
jo
popa
mov
push
push
add
test
aam
cmp
adc
int3
xchg
add
and
sub
outs
push
dec
dec
or
mov
cmp
mov
and
push
call
jge
or
push
ret
pop
mov
add
xchg
in
sub
sbb
push
inc
inc
push
and
pop
xchg
and
rol
pop
add
test
ficom
sub
icebp
ins
jnp
daa
dec
inc
movs
and
loopne
popa
cmp
sub
mov
mov
jl
pop
ret
mov
movs
inc
add
inc
cdq
aam
ss
xchg
loop
add
adc
ds
dec
pop
push
cwde
add
add
sub
jbe
pop
test
sub
inc
sbb
mov
xchg
inc
xchg
sbb
sub
inc
ret
push
enter
adc
ret
mov
or
shl
or
dec
add
dec
push
add
push
inc
add
ret
inc
ins
pushw
inc
js
lahf
dec
gs
mov
cwde
movs
adc
sub
adc
xor
or
adc
pop
push
test
sub
sbb
or
adc
cmp
push
xchg
add
into
inc
sub
sbb
dec
push
sbb
or
push
inc
or
sahf
jp
and
inc
or
xor
adc
loope
mov
push
in
add
or
mov
push
daa
xchg
mov
add
call
cmp
mov
test
movs
call
or
cmps
int3
xchg
and
xchg
mov
push
pop
pop
dec
mov
dec
pusha
jmp
push
mov
cmp
imul
inc
xchg
push
sub
and
nop
sbb
xor
ror
and
es
shr
dec
or
pusha
dec
(bad)
fmul
and
push
pop
(bad)
mov
sahf
bound
adc
mov
pusha
inc
and
fldcw
xor
sar
cmp
push
or
push
jo
push
xchg
cwde
lods
out
call
inc
pop
and
xchg
fcmovb
(bad)
xor
inc
dec
shl
dec
push
inc
add
adc
outs
adc
test
add
je
jmp
cmp
mov
aam
mov
adc
jo
sub
xchg
inc
inc
in
sbb
dec
push
push
cmp
or
xchg
addr16
push
sub
xor
jo
js
inc
inc
dec
dec
sbb
shr
or
(bad)
cmps
les
test
jo
lahf
add
push
inc
or
adc
xor
mov
js
js
and
cwde
dec
in
push
adc
add
jbe
mov
jp
and
sar
mov
xchg
test
jo
mov
or
movs
dec
lods
add
jb
cmp
xor
add
pop
(bad)
ror
pusha
xor
out
retf
mov
ds
aam
or
or
(bad)
add
loopne
(bad)
pushf
adc
adc
(bad)
mov
aad
xor
pop
bound
sub
sub
push
hlt
sub
cmp
inc
adc
push
hlt
imul
imul
or
shl
inc
push
pop
fidiv
push
mov
nop
sahf
stos
sbb
xchg
cmp
mov
jb
push
mov
out
or
sub
mov
adc
ja
dec
stos
inc
bound
mov
enter
clc
bound
add
ja
push
bound
popa
mov
fs
add
inc
mov
retf
pushf
xor
jo
pop
ret
jbe
adc
gs
inc
mov
mov
shl
outs
in
ins
dec
arpl
sub
xor
or
lock
or
dec
fs
sub
jbe
add
xor
mov
aaa
lea
mov
xchg
xor
sub
pop
sub
pop
int3
mov
xchg
pop
(bad)
bound
jno
cmp
adc
dec
push
ret
ret
iret
imul
dec
(bad)
cmp
cmp
xor
add
dec
call
out
inc
inc
popa
inc
and
popa
ror
into
push
mov
jne
push
inc
or
sbb
mov
xor
(bad)
loope
nop
xlat
push
mov
or
add
jb
aam
and
xchg
dec
in
in
cmp
adc
adc
or
and
and
jno
mov
enter
cld
mov
dec
inc
xchg
xor
mov
hlt
mov
test
out
inc
add
add
add
add
cmp
imul
loopne
(bad)
sbb
imul
xor
hlt
aam
cwde
fsubr
inc
inc
(bad)
ror
xor
mov
pop
dec
xor
stos
sub
jg
aaa
test
pop
fwait
cli
pop
imul
movs
inc
mov
mov
mov
loope
cmp
xor
add
mov
xor
aam
shl
adc
cmp
mov
jmp
sub
and
aam
xchg
ss
xor
mov
cwde
jmp
cwde
pop
fs
push
adc
cmp
into
nop
(bad)
into
inc
adc
push
add
dec
(bad)
idiv
arpl
(bad)
push
test
adc
int3
push
mov
xchg
ja
sbb
push
mov
xchg
call
stos
nop
and
lods
and
jp
aam
fs
mov
retf
fadd
cld
sar
inc
add
movs
sbb
aam
ret
inc
into
inc
and
movs
xor
lahf
add
xchg
jno
xchg
pop
jp
jo
adc
xchg
rol
lock
in
and
push
mov
inc
mov
retf
mov
dec
sbb
cmp
or
add
ss
adc
push
jl
push
test
xchg
push
mov
mov
sub
push
jl
in
sub
or
movs
xor
scas
jo
mov
call
push
add
cwde
sub
push
test
xor
lods
fcom
gs
data16
cmp
mov
xor
jo
sar
sub
add
je
or
sar
and
or
cs
inc
add
jo
or
cs
outs
inc
xor
mov
mov
(bad)
mov
bound
add
cmp
push
dec
inc
loopne
jmp
inc
adc
cmp
inc
push
mov
inc
popf
pusha
adc
rol
dec
inc
xchg
pop
jo
rcl
mov
sbb
or
loop
fld
mov
popa
add
xor
mov
mov
push
jns
mov
ret
sub
add
ins
mov
jmp
pop
pop
mov
push
or
and
pop
in
push
adc
jbe
sub
jl
outs
je
push
leave
add
jle
cmp
cmp
mov
sub
jo
jb
add
and
push
popf
add
ror
ss
mov
add
data16
xor
inc
xchg
push
inc
jmp
ins
jl
and
xchg
sahf
xor
inc
bound
call
arpl
add
lods
outs
pop
scas
dec
inc
mov
loopne
and
into
dec
bound
and
and
push
pop
pop
movs
sub
pop
dec
gs
ds
pop
xor
push
pop
or
xchg
add
cwde
adc
xchg
cmp
and
ror
inc
jo
or
loopne
ret
cdq
ds
ret
adc
jp
push
adc
or
ins
int3
or
or
pop
push
inc
adc
push
mov
mov
add
pop
or
jecxz
inc
xor
fiadd
aam
loop
and
and
mov
push
cmp
leave
or
add
fmul
rol
sub
cmp
dec
inc
sbb
call
push
and
inc
data16
push
ss
push
(bad)
mov
mov
cdq
jp
push
push
imul
sub
push
mov
les
xor
and
add
sub
imul
and
push
mov
inc
xor
pop
cmp
movs
xchg
retf
dec
xchg
adc
inc
xchg
add
add
add
les
or
jns
inc
xchg
add
fisub
mov
movs
inc
inc
adc
jns
pop
iret
mov
sbb
xor
xchg
and
mov
and
outs
test
cmp
or
outs
jbe
push
and
mov
dec
xchg
leave
or
add
cwde
pop
fs
xchg
add
sar
cmps
ins
sbb
cmp
adc
adc
inc
cs
mov
xchg
les
sbb
mov
sub
movs
pushf
jbe
or
add
push
fdivr
cmp
mov
add
mov
push
lods
mov
inc
adc
pop
in
sbb
inc
loop
xchg
sahf
add
add
inc
adc
add
daa
dec
dec
nop
fadd
xor
sbb
ins
xor
arpl
test
sbb
mov
or
dec
pop
popa
xor
pop
test
pop
sbb
inc
adc
mov
push
xor
scas
jno
inc
enter
mul
sbb
sbb
out
je
and
in
ins
ins
gs
push
inc
add
push
sub
dec
sub
cmc
add
enter
jl
push
add
test
out
in
pop
xchg
fsubr
or
cli
loop
enter
push
pop
fdiv
adc
ds
popa
pop
jno
mov
and
inc
fs
dec
pop
test
add
or
or
pop
pushw
cmp
loopne
adc
xchg
cmp
mov
add
(bad)
mov
xor
mov
cli
push
push
arpl
pushf
dec
dec
add
(bad)
xchg
mov
inc
add
dec
rol
push
adc
in
add
rcl
xor
and
add
hlt
ja
dec
dec
sbb
or
push
test
xor
or
and
and
pop
pop
ins
inc
jl
sub
xor
inc
push
jno
inc
sub
hlt
push
sbb
mov
inc
cmp
cmp
or
popa
test
fcom
pusha
es
add
in
in
lods
lock
sub
push
add
adc
inc
lea
lods
(bad)
mov
dec
push
fs
or
outs
cmp
test
adc
or
inc
push
inc
pusha
fsub
fcom
dec
mov
mov
push
popa
loop
aam
push
shr
push
xor
push
sub
es
jae
pop
push
add
sahf
call
xchg
xor
mov
mov
popa
adc
mov
add
call
add
cli
pop
out
xor
into
cmp
push
pop
inc
push
popa
xor
arpl
movs
es
outs
es
sub
and
test
inc
jle
xor
sbb
lods
sbb
sub
push
fmul
or
mov
sub
or
add
fidivr
dec
xor
inc
cdq
in
jle
je
push
or
inc
jo
jb
push
mov
(bad)
rol
mov
adc
push
ret
add
adc
rcr
daa
movs
in
and
retf
test
or
fadd
repnz
add
add
push
ror
adc
cmp
inc
outs
sbb
fiadd
shl
dec
push
or
arpl
mov
pop
pop
xor
ficomp
inc
or
adc
fcomp
sbb
rol
pop
fs
or
loopne
in
adc
enter
or
push
scas
sbb
push
sbb
lea
or
arpl
call
xor
popf
inc
cmp
sub
mov
inc
dec
jno
cmp
xor
mov
jb
add
repnz
xor
cmps
ror
xor
push
mov
dec
test
or
shl
adc
mov
inc
push
mov
sub
push
ret
dec
sub
ficom
rol
mov
test
lea
xor
and
or
xchg
pop
sub
pushf
fst
bound
or
test
sbb
aad
push
and
push
(bad)
dec
sbb
mov
add
adc
and
retf
lds
bound
or
pop
(bad)
or
inc
adc
call
mov
jb
or
add
sub
mov
ss
or
add
mov
push
adc
sbb
pushf
cwde
or
(bad)
ficom
inc
inc
sub
push
icebp
dec
call
scas
dec
sub
not
mov
test
xor
lock
mov
xor
rol
jp
cmp
pop
call
add
xor
sbb
test
je
and
inc
fdiv
or
and
call
or
inc
cmps
imul
sub
push
lahf
mov
add
data16
pop
sbb
xchg
cs
bound
cmp
adc
inc
inc
or
adc
jne
xor
fiadd
ror
xchg
cmc
xchg
in
xor
das
cmp
jp
test
fs
or
jb
xchg
adc
adc
aam
pop
es
dec
sub
test
jge
dec
push
mov
fisttp
in
daa
sub
(bad)
and
pusha
sub
adc
xchg
add
out
add
and
sub
test
adc
adc
add
pop
test
pop
fidiv
mov
xchg
adc
cld
mov
mov
and
push
xor
dec
push
sub
jo
cs
loop
push
push
out
mov
push
dec
and
or
adc
xchg
retf
push
add
and
sub
and
pop
stos
add
inc
push
sub
ds
push
imul
xor
retf
or
aam
rol
xchg
call
pop
xchg
retf
test
cmc
mov
xchg
je
pusha
sbb
jmp
add
ret
mov
sub
jecxz
dec
sbb
sub
js
lods
das
add
sub
and
add
inc
test
dec
dec
sar
adc
(bad)
pusha
inc
sbb
pop
push
or
into
hlt
push
rcl
mov
mov
adc
mov
imul
xchg
dec
pushf
inc
inc
pop
push
dec
and
and
(bad)
bound
adc
fisubr
and
dec
push
ficom
mov
ins
or
xor
lock
or
or
adc
loopne
sahf
pop
clc
xchg
or
sub
hlt
dec
fs
mov
and
or
and
mov
push
xchg
loopne
dec
xor
jecxz
push
lea
inc
or
bound
cdq
enter
dec
mov
and
es
cmp
and
icebp
mov
dec
dec
xor
dec
dec
push
push
xor
dec
ret
sub
dec
fisub
fadd
add
sub
test
add
imul
cwde
mov
xor
adc
adc
jbe
jne
loopne
aam
inc
dec
jmp
pop
adc
ficomp
rol
push
xor
pop
adc
cli
dec
and
shl
mov
adc
mov
nop
adc
push
xor
pop
inc
push
es
ficom
sbb
test
pusha
and
int3
mov
out
cmp
add
sub
dec
mov
inc
push
aaa
pop
retf
jb
enter
adc
cwde
cmp
add
movs
stos
add
popa
and
xchg
or
test
cs
and
inc
adc
dec
push
imul
sub
iret
adc
dec
jge
rol
pop
ins
pushf
ins
lods
adc
sahf
je
jl
inc
mov
mov
sub
call
out
add
xor
or
pop
pop
mov
dec
sbb
pop
dec
loopne
fwait
ret
push
add
cmp
dec
push
push
or
dec
ror
add
inc
loopne
push
add
nop
add
test
nop
dec
xor
inc
sbb
inc
ds
test
and
clc
movs
mov
aas
jb
add
aaa
pop
ret
adc
add
or
fcomp
fidiv
sub
push
push
mov
div
outs
(bad)
popa
inc
push
add
test
inc
dec
outs
sub
push
push
xor
jecxz
and
(bad)
jle
and
data16
cmps
pop
xor
xor
xor
cmp
pop
add
or
fadd
lock
dec
cmps
pop
aaa
and
(bad)
mov
xchg
dec
add
out
inc
inc
mov
xchg
retf
mov
sbb
mov
push
adc
inc
test
add
ins
outs
popa
fs
imul
adc
jo
cdq
add
das
add
popa
(bad)
shr
rol
xor
push
popa
jb
push
or
out
test
fidivr
ins
imul
bound
push
add
sti
jne
or
sti
add
add
mov
pop
dec
scas
jne
cs
jo
jge
sbb
cmp
mov
jge
sub
and
loope
or
jnp
clc
ja
adc
es
ja
and
push
sub
mov
fs
or
into
push
push
ja
popa
and
and
lods
mov
outs
je
imul
lods
mov
popa
adc
fprem
ds
lods
and
sub
jb
ins
fst
push
es
fild
dec
and
or
outs
je
and
pop
mov
pop
and
xor
(bad)
mov
test
popa
cmp
add
xlat
pop
jbe
jmp
ja
outs
(bad)
adc
and
shr
cs
bound
mov
add
push
dec
out
jg
or
sub
inc
scas
mov
inc
jg
or
push
stos
add
add
add
mov
or
push
loopne
add
xchg
inc
add
add
or
push
nop
push
adc
add
inc
imul
mov
inc
add
jmp
ds
dec
test
int
jbe
lods
dec
cwde
xor
outs
retf
sub
add
sbb
xor
inc
inc
dec
aas
inc
lds
add
pop
and
add
or
and
jb
cmps
push
or
ss
outs
or
sub
and
pop
push
ror
xchg
mov
inc
dec
dec
dec
scas
mov
cmp
adc
mov
loope
out
popa
mov
pushf
pop
gs
add
in
and
cld
cdq
movs
and
add
fs
push
loopne
inc
imul
add
mov
ss
int3
test
(bad)
(bad)
fsub
test
inc
fdivr
test
or
(bad)
xor
ins
into
add
fcomp
pop
adc
mov
popa
in
xchg
and
mov
inc
outs
push
outs
inc
push
mov
pop
add
add
xor
and
(bad)
popa
adc
xor
xor
cli
repnz
dec
daa
ror
sub
adc
sub
inc
mov
jb
ss
sbb
shr
dec
jmp
mov
and
daa
dec
xor
push
inc
ret
outs
lock
movs
add
and
xor
or
fs
pop
add
and
bound
inc
cmp
ins
and
into
dec
push
xchg
pushf
ror
repnz
xor
and
or
dec
shl
push
or
rol
ins
lods
sbb
push
cmps
dec
sub
aam
and
and
movs
dec
dec
and
add
aad
dec
pop
js
das
aaa
inc
cs
aad
cmps
mov
add
xchg
sbb
sbb
xor
push
jno
and
fsubr
cmp
or
popa
cmp
or
add
and
rol
push
or
push
imul
xor
push
pop
push
inc
sub
lods
outs
mov
inc
dec
push
pop
dec
add
imul
ror
jae
inc
repnz
push
add
sbb
inc
fs
xor
pop
repnz
push
sar
sahf
cld
dec
mov
adc
mov
add
not
call
xchg
lock
add
ret
inc
xor
inc
out
push
pop
mov
mov
dec
pusha
out
or
mov
es
ds
faddp
add
mov
dec
scas
pop
adc
comiss
push
add
add
into
nop
lock
aaa
inc
dec
inc
add
sbb
or
rol
mov
rcr
iret
cmp
add
imul
add
imul
inc
xchg
add
cmp
push
sub
ins
xchg
pop
daa
jg
sub
inc
js
push
dec
add
imul
mov
nop
or
push
dec
lahf
inc
jnp
outs
or
and
(bad)
pop
mov
out
xchg
jnp
cvttps2pi
cmps
dec
lock
(bad)
bound
and
xchg
jbe
add
arpl
sahf
dec
fisttp
push
aaa
and
add
add
fsubr
repz
fwait
mov
(bad)
int3
dec
addr16
inc
jb
dec
popa
inc
sub
popa
xor
js
loope
jmp
outs
push
jo
cmp
cmp
inc
je
jg
pop
outs
ins
inc
gs
xor
je
outs
arpl
imul
addr16
jbe
frstor
lock
add
cmpxchg
pop
aaa
js
add
mul
push
jl
cmp
adc
arpl
mov
and
loopne
add
xor
stos
test
or
add
ja
sub
and
aas
rol
fild
iret
dec
and
inc
stos
inc
sub
iret
mov
inc
outs
lahf
push
push
add
or
(bad)
arpl
xor
cs
and
add
jae
aas
pop
das
pop
pop
jae
or
xor
lahf
xor
gs
gs
xor
popa
popaw
(bad)
outs
cs
xor
xor
xor
cmp
xor
and
popa
arpl
data16
bound
inc
arpl
fdivr
add
push
call
add
and
jae
je
ret
cs
fwait
push
shl
sub
push
cwde
sbb
cmp
jnp
sub
ins
inc
bsf
scas
popa
sub
push
jg
pop
rol
movs
or
test
cmps
pop
ret
fld
mov
cmp
dec
mov
or
sub
inc
push
and
cmps
add
mov
add
mov
dec
icebp
and
jae
mov
dec
xor
fidiv
inc
and
cmp
and
(bad)
(bad)
fiadd
add
ins
sub
retf
sub
ins
js
gs
pop
mov
(bad)
adc
(bad)
imul
ss
and
movs
gs
fmulp
lods
inc
mov
adc
ret
xchg
xor
fs
mov
fld
pop
jge
ss
or
jns
sbb
jge
mov
jb
outs
ss
inc
arpl
sbb
and
(bad)
mov
xor
pop
das
push
scas
es
sub
xor
cmp
add
inc
add
adc
data16
or
and
dec
mov
push
add
test
pop
jo
push
mov
mov
sbb
jae
mov
loope
pop
aaa
push
outs
fs
or
add
fild
enter
iret
xchg
aaa
push
jbe
cmps
(bad)
movaps
sbb
aaa
sbb
outs
pusha
fidivr
sub
arpl
and
and
ins
mov
neg
cs
cmps
test
jb
pop
or
popf
inc
outs
jbe
add
iret
add
stos
inc
inc
js
or
push
(bad)
pop
dec
pop
jbe
addr16
gs
fst
ins
imul
bound
imul
or
adc
fadd
dec
or
dec
cmp
jge
add
push
pop
add
pop
push
xlat
ds
adc
dec
add
inc
add
push
or
test
lds
cmp
das
jo
sub
inc
ja
fs
shl
imul
pushf
add
add
inc
inc
div
mov
mov
jo
pop
sbb
push
pop
pop
jl
pop
jge
pop
adc
fcmovne
add
fst
adc
jo
outs
ins
pop
sub
sub
loopne
mov
sar
push
lock
inc
sub
daa
fild
inc
pop
pop
dec
inc
dec
dec
pop
dec
cs
sbb
pop
push
push
dec
inc
adc
mov
dec
inc
pop
inc
dec
inc
push
sub
in
loopne
stos
push
xchg
mov
mov
fmulp
add
sub
mov
xor
add
loope
sbb
jno
ret
inc
xor
iret
pop
adc
pavgb
xchg
and
or
pop
test
movs
xchg
add
mov
xchg
inc
jg
mov
imul
inc
xchg
clc
adc
rol
adc
lods
je
shr
inc
and
push
jne
dec
and
out
ins
test
and
imul
ret
or
sub
jae
(bad)
aaa
mov
int3
aaa
outs
in
gs
sub
inc
rcr
xor
add
iret
jnp
sub
sbb
clc
sahf
xlat
cmps
clc
push
call
mov
cmovg
in
push
nop
or
jns
out
stc
inc
push
add
nop
jns
aas
inc
jmp
jne
jp
loopne
push
push
xor
ror
sbb
imul
add
cmp
inc
mov
test
outs
or
ror
lods
dec
enter
inc
call
adc
das
or
jmp
jo
xor
daa
inc
test
icebp
push
or
pusha
mov
mov
or
add
jg
outs
mov
push
das
pop
nop/reserved
nop
cs
jbe
mov
(bad)
ror
fucomi
jbe
adc
push
pop
(bad)
mov
js
add
add
mov
push
mov
in
test
jmp
das
je
xor
enter
outs
dec
aas
test
mov
ins
fdivr
call
or
pop
nop
cwde
psrad
cmp
(bad)
aas
fcomp
in
jbe
aas
pop
das
ins
cvttps2pi
mov
mov
jl
add
push
movhlps
mov
mov
jg
dec
das
mov
in
jbe
mov
movs
pop
add
cmp
in
pop
das
pop
pcmpeqd
xchg
inc
jp
in
jbe
in
cmp
aam
adc
push
ins
mov
pop
aas
mov
(bad)
fisttp
hlt
inc
jbe
mov
or
outs
push
das
jbe
in
jbe
in
ss
dec
das
punpckhqdq
lods
pop
mov
mov
inc
aas
in
dec
das
pop
nop
pushf
jmp
jle
ds
jbe
pop
jo
call
das
outs
ucomiss
mov
fucomi
mov
dec
aas
cld
push
fsub
stos
add
push
aas
adc
xor
push
push
xor
outs
mov
inc
jmp
and
mov
popf
fmul
add
fucomi
pop
nop
xchg
(bad)
jns
mov
aas
sar
imul
sub
mov
mov
stos
fisttp
bnd
adc
das
outs
add
jne
mov
jg
jmp
and
jbe
pop
mov
mov
inc
jne
call
sbb
pop
push
(bad)
jge
cmp
fild
ins
cvtps2pi
mov
adc
lea
dec
aas
cli
call
pop
iret
adc
ret
inc
mov
jg
(bad)
fdiv
mov
pop
mov
or
aas
out
pop
in
mov
aas
xchg
(bad)
jnp
(bad)
stos
fstp
aas
(bad)
jmp
sub
xchg
aas
mov
aas
mov
dec
aad
mov
push
(bad)
call
add
into
inc
jbe
pop
addr16
aas
scas
pop
mov
xchg
inc
aas
out
call
mov
pop
nop
sahf
(bad)
jg
inc
jne
(bad)
aas
fdivrp
outs
pand
ins
mov
aas
mov
sbb
test
inc
leave
inc
xor
and
xchg
rol
xor
leave
leave
test
xchg
cdq
fst
inc
xor
and
leave
in
aad
inc
xor
leave
inc
int
inc
xor
and
leave
fnstsw
xchg
ret
mov
jecxz
inc
xor
leave
inc
leave
repz
stos
xor
and
leave
inc
fstp
sti
(bad)
adc
inc
xor
dec
and
mov
inc
leave
inc
test
scas
out
adc
inc
xor
dec
and
inc
aam
pandn
cmc
leave
int
mov
push
push
add
jg
pop
inc
jg
pop
pop
ror
add
push
add
cmp
add
add
xadd
pusha
jg
inc
sbb
pop
push
popa
mov
and
add
fs
xchg
add
xor
or
adc
(bad)
xor
(bad)
adc
cmp
das
or
dec
add
or
ins
jne
aaa
cmps
add
or
dec
dec
and
cmovbe
xor
add
cmc
xor
push
dec
and
jbe
std
inc
fs
gs
fild
scas
add
jbe
pop
or
or
cmovg
call
sbb
and
push
stos
xor
inc
add
push
out
ret
add
mov
add
add
add
add
pop
jb
pop
add
add
push
jb
add
seta
ud0
bound
add
add
pop
add
add
add
cmp
cmp
or
add
pop
and
sbb
add
iret
or
mov
inc
adc
ja
inc
sub
or
(bad)
(bad)
fild
xor
ja
popa
push
out
mov
les
(bad)
(bad)
(bad)
dec
movs
arpl
mov
mov
push
movs
mov
aad
mov
rcl
(bad)
(bad)
(bad)
(bad)
mov
sub
mov
sbb
dec
jno
repz
test
ficomp
shl
(bad)
(bad)
jmp
(bad)
mov
hlt
mov
pop
je
fs
(bad)
std
in
leave
mov
add
ins
push
arpl
psubd
or
(bad)
(bad)
jmp
outs
cmp
imul
addr16
add
aam
dec
std
test
movs
cli
(bad)
(bad)
(bad)
jmp
mov
(bad)
leave
mov
lods
jecxz
fdiv
jne
fild
or
shr
push
fldenv
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
mov
(bad)
mov
add
(bad)
and
or
adc
stos
sbb
data16
(bad)
(bad)
(bad)
inc
jbe
jno
add
aad
mov
mov
movs
in
lahf
xor
mov
sar
pop
js
stc
cmps
test
xchg
sbb
(bad)
(bad)
dec
ins
or
pop
arpl
hlt
push
imul
ins
sbb
xor
dec
add
in
(bad)
(bad)
(bad)
call
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
mov
(bad)
call
ficom
gs
aam
pop
popa
mov
into
pop
cmp
mov
loop
mov
dec
xlat
xchg
fadd
(bad)
shl
jmp
outs
xor
mov
sar
add
in
add
pop
dec
or
mov
push
stos
inc
add
(bad)
(bad)
dec
test
xchg
or
and
test
or
mov
popa
into
push
stc
ficomp
(bad)
(bad)
call
cwde
shl
pop
cmp
mov
cmp
lods
ins
mov
in
sar
push
loop
add
inc
aad
scas
ja
popf
adc
push
(bad)
fbld
or
or
test
fs
ds
or
lock
or
push
in
dec
xchg
daa
scas
sub
pop
jge
xchg
(bad)
shl
loop
call
inc
push
imul
xor
sbb
push
(bad)
(bad)
(bad)
(bad)
sbb
(bad)
loopne
ror
int3
dec
frstor
fistp
mov
mov
aad
(bad)
fisttp
pop
mov
shl
push
repnz
(bad)
(bad)
(bad)
fisttp
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
test
pusha
jp
(bad)
(bad)
inc
ret
out
pusha
fist
addr16
mov
jns
imul
and
shr
ss
(bad)
(bad)
jmp
xchg
ja
int3
add
mov
das
es
lds
or
sub
(bad)
(bad)
(bad)
push
ret
shl
sbb
ret
es
pushf
mov
dec
jmp
test
ss
jmp
addr16
jb
push
les
jp
loop
(bad)
(bad)
(bad)
jmp
mov
cmp
mov
fwait
mov
xchg
or
out
fdivr
fisttp
aam
rol
clc
mov
(bad)
push
ficomp
int
mov
mul
ja
outs
ja
mov
out
cli
inc
retf
pop
or
adc
(bad)
mov
(bad)
clc
sar
imul
push
js
or
push
add
(bad)
(bad)
inc
mov
cmp
cmps
not
pusha
ror
imul
push
scas
fcomp
fldenv
fild
(bad)
(bad)
push
cmp
aaa
push
scas
mov
fidivr
mov
jmp
repnz
retf
mov
(bad)
(bad)
(bad)
jmp
sar
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
icebp
(bad)
call
or
fild
sub
pop
fs
and
test
pop
pop
add
bound
mov
push
adc
js
je
cmp
clc
not
jo
mov
jbe
dec
shr
outs
jb
inc
popa
in
lahf
jae
ins
bound
jae
push
sub
sub
mov
imul
mov
jae
div
test
sub
dec
call
mov
std
jae
jb
dec
push
mov
mov
inc
mov
dec
bound
dec
mov
je
sub
push
pop
fist
popa
sub
ja
mov
jge
jg
mov
xchg
jb
arpl
or
add
jbe
shr
lock
pusha
and
cmp
enter
imul
push
or
adc
xchg
in
ins
cmp
push
out
adc
add
pop
das
pop
mov
(bad)
sahf
inc
and
(bad)
shr
movs
xor
push
ficom
xor
push
mov
test
sub
or
mov
push
aad
cmp
adc
out
or
and
retf
cs
add
push
pop
rol
aaa
into
fs
inc
sub
stos
(bad)
rcr
fiadd
push
pop
dec
out
sbb
xchg
mov
xchg
ret
sbb
and
test
sub
outs
loopne
sub
imul
mov
fild
lock
push
jp
pop
xor
sub
xchg
clc
int
repnz
in
(bad)
in
scas
pop
xor
inc
xor
inc
inc
sub
sub
adc
fld
aaa
inc
sub
ss
or
inc
dec
xor
ins
pop
mov
sub
cmp
outs
pop
mov
sub
arpl
xor
xor
xor
xor
(bad)
fldcw
data16
dec
xor
sub
out
xor
aaa
test
xor
xor
stc
xor
fnstsw
mov
push
cmp
cmp
inc
xor
sti
jl
inc
inc
inc
inc
cs
inc
inc
inc
inc
mov
data16
inc
inc
xor
dec
aaa
call
and
cmp
inc
cmp
aaa
inc
xor
jo
xchg
das
xor
cmp
xor
bound
add
pop
cmp
xor
or
push
xor
adc
mov
ins
bound
xor
out
xor
xor
mov
add
aas
dec
xor
lahf
fadd
add
inc
dec
cmp
aas
cld
adc
xor
call
jb
fdiv
xor
call
outs
mov
and
xor
pop
ins
dec
loopne
sub
fisttp
dec
add
adc
mov
aas
or
mov
inc
cmc
scas
pop
out
mov
add
imul
aad
jle
jbe
xor
sub
and
imul
ret
push
jae
add
popa
loopne
jmp
test
imul
fild
xchg
outs
popa
mov
adc
sub
push
and
or
or
add
sub
imul
push
arpl
jae
ja
pop
sbb
add
jno
pop
fistp
push
adc
xor
mov
ret
cs
ds
jnp
ins
jmp
and
scas
fld
aas
jb
xchg
ins
in
or
popa
add
sbb
popa
getsec
sbb
arpl
ins
add
jae
ja
jbe
fild
push
jmp
ss
sbb
cmp
data16
jbe
cmp
sbb
jbe
and
mov
sbb
shl
add
aaa
int
aaa
sbb
outs
push
outs
pop
pusha
imul
add
mov
mov
aaa
adc
ret
and
call
cmp
push
popa
fcomp
dec
popa
or
dec
stos
or
movs
(bad)
ins
sbb
imul
sub
push
outs
adc
popa
jb
inc
mov
jns
fwait
jge
call
imul
dec
mov
jae
sbb
mov
cs
scas
dec
inc
push
and
fimul
inc
imul
aad
int3
ja
push
add
aaa
add
data16
pop
cmc
jo
mov
je
outs
push
push
clc
cli
aas
dec
pop
sbb
xor
pop
dec
xchg
and
dec
dec
mov
xlat
push
adc
inc
jecxz
xchg
fbld
sub
xor
adc
mov
or
push
outs
aas
lock
sbb
gs
ins
imul
inc
aas
ja
imul
sqrtps
dec
mov
fisub
sub
inc
add
adc
shr
inc
fisubr
or
outs
sbb
jp
jo
ds
or
outs
push
aaa
pop
jo
rol
inc
adc
fistp
out
dec
popa
outs
addr16
or
loopne
ja
adc
and
pop
inc
sub
aas
test
pop
mov
pop
add
iret
jg
pop
dec
add
fld
addr16
inc
dec
mov
push
or
pop
dec
mov
gs
jg
pop
bound
push
imul
push
sbb
or
lahf
mov
in
cmps
test
fsub
add
clc
dec
dec
enter
adc
inc
scas
nop
lods
xchg
data16
test
arpl
pop
shl
aaa
mul
jae
rcl
bound
jb
ret
push
pushf
push
bndstx
ret
add
or
mov
fcmovu
mov
rcpps
outs
lock
pusha
mov
xchg
mov
jae
cmp
jno
sbb
adc
or
fadd
pmulhuw
in
retf
hlt
jno
xor
pop
rcr
cmp
and
xchg
and
js
mov
jb
out
loop
add
sub
add
xchg
and
cmp
push
inc
in
fldenv
daa
add
and
jne
test
dec
inc
pop
pop
jle
inc
mov
add
movs
xor
dec
cmp
push
enter
add
in
in
in
out
sub
push
das
sub
pop
sub
xchg
and
push
repnz
int3
sar
aam
and
dec
shl
inc
mov
shl
pop
ror
cmc
sub
inc
push
pcmpgtb
enter
pop
add
repz
nop
jb
sub
imul
dec
hlt
ins
lock
and
mov
mov
sar
in
(bad)
cld
push
lahf
sub
add
dec
add
sti
cmp
or
cli
pop
sub
ret
cvtps2pi
ret
mov
rcr
ror
xchg
les
push
ret
adc
or
push
xchg
and
das
adc
inc
or
jb
enter
adc
or
or
inc
mov
andps
loopne
xchg
or
push
xor
rdtsc
sub
es
push
inc
jle
int3
imul
xor
ins
cmp
enter
push
xchg
pop
mov
data16
xor
mov
ret
xchg
mov
jo
sets
mov
popf
sbb
loopne
xor
out
cmp
retf
xchg
and
out
out
jmp
div
xor
(bad)
xor
in
mov
out
(bad)
in
loopne
ss
in
and
in
jecxz
add
sbb
jb
jl
xchg
pop
enter
xchg
and
aaa
adc
cmp
pusha
add
jb
enter
or
and
jl
or
xor
push
add
xchg
add
and
cld
cmp
add
mov
in
xchg
push
mov
aam
cmp
push
push
dec
sbb
sub
adc
and
ja
je
add
in
cld
add
sub
push
pop
popf
mov
(bad)
sub
add
pop
or
mov
cmp
add
enter
or
(bad)
int3
or
adc
in
adc
sub
add
ja
in
int3
shrd
or
pop
push
cmp
aas
xor
jo
xchg
or
ror
xchg
das
inc
hlt
add
paddsb
mov
or
test
pop
push
xchg
(bad)
hlt
add
add
pop
push
sbb
push
aam
cmovb
sub
xchg
mov
xchg
add
pop
js
setl
cmp
in
enter
inc
sbb
or
inc
mov
and
pushf
sub
or
ucomiss
pusha
add
and
(bad)
jl
add
in
enter
pop
inc
add
inc
and
dec
add
pop
cmp
js
test
loopne
cld
sub
add
mov
aas
inc
and
js
mov
movs
stc
repnz
retf
dec
pushf
fadd
(bad)
mov
cmp
jnp
sub
nop
cmp
sub
cld
sbb
popf
popf
mov
mov
ins
sub
(bad)
popf
popf
das
les
pop
in
sbb
dec
sub
mov
mov
addr16
jl
das
movs
cs
sbb
push
rcl
sub
inc
iret
push
push
xchg
push
dec
mov
popa
lea
push
shl
(bad)
add
aaa
inc
mov
pop
daa
inc
or
inc
mov
add
sti
pop
in
pop
pop
add
push
dec
add
pop
enter
dec
push
mov
mov
add
enter
xor
xor
sub
shl
jge
add
or
add
inc
sysret
xor
push
cmp
adc
or
inc
sbb
xor
inc
repz
jecxz
scas
dec
and
ret
pop
push
jmp
mov
inc
mov
(bad)
std
outs
dec
ret
pop
dec
add
dec
dec
add
jae
in
and
add
adc
push
add
dec
push
and
pop
out
fidivr
add
inc
add
and
jnp
pusha
push
pop
inc
sbb
pop
sbb
lods
inc
out
push
mov
dec
ja
pop
cmp
dec
xchg
add
jbe
mov
push
jmp
push
push
push
sbb
sub
aaa
pop
call
inc
add
inc
jae
cmp
mov
push
outs
arpl
daa
inc
movs
pop
sbb
inc
add
cmp
retf
or
sti
int
mov
add
int
mov
pop
fistp
mul
pop
inc
pop
dec
push
pop
add
imul
jnp
push
add
inc
add
(bad)
adc
mov
pop
aas
test
aaa
push
daa
dec
pop
and
retf
inc
(bad)
daa
retf
xor
pop
dec
fild
and
aas
inc
scas
pop
ret
or
inc
(bad)
sub
add
daa
push
rol
xchg
mov
dec
retf
pop
pop
repz
add
mov
addr16
aas
inc
lahf
push
jo
inc
adc
inc
ss
pop
inc
fdiv
add
pop
dec
rol
dec
std
bound
push
push
add
mul
stos
push
dec
out
dec
mov
jne
push
lahf
dec
cmp
dec
or
das
pop
mov
push
mul
pop
call
mov
repz
ja
jo
lds
push
jecxz
and
add
push
ret
dec
ret
rcl
mov
aaa
stos
inc
cmps
jno
loopne
inc
jnp
cwde
mov
push
scas
pop
fild
cmp
inc
inc
xchg
loopne
fisub
rcl
sub
sbb
fsubr
sbb
bound
mov
and
pop
mov
ja
mov
inc
mov
imul
mov
xor
push
pop
push
mov
push
sbb
fadd
push
push
add
pop
ret
fwait
xchg
pop
push
push
dec
verr
ss
aas
xchg
push
adc
or
pop
add
shl
iret
dec
inc
xlat
add
ja
push
inc
das
xchg
add
inc
jno
mov
xchg
dec
add
repz
js
sbb
jg
mov
scas
inc
pop
push
pop
mov
add
add
and
push
lahf
xchg
retf
ja
test
push
xchg
dec
push
cmp
pop
dec
add
mov
push
iret
push
pop
inc
aam
pop
sub
cmps
loopne
scas
les
inc
jg
push
and
inc
dec
mov
aas
push
out
pop
inc
add
mov
daa
push
xchg
push
push
sahf
loopne
sti
rcl
inc
inc
(bad)
dec
push
add
adc
inc
push
add
jo
aaa
mov
dec
xchg
adc
in
stos
jmp
add
dec
stos
and
jg
xlat
aaa
and
inc
movs
popa
mov
mov
mov
dec
xchg
scas
repz
add
dec
xor
aas
icebp
sub
push
and
mov
aas
rcr
add
dec
pop
mov
mov
data16
or
retf
mov
bound
ja
stos
inc
or
pusha
(bad)
push
iret
cwde
sub
or
inc
push
ja
sub
pop
mov
adc
add
pop
add
dec
orps
cmp
jno
jg
in
inc
pusha
and
mov
es
xor
dec
inc
pop
outs
mov
dec
ja
dec
xchg
imul
push
xchg
push
sub
dec
sub
dec
inc
add
mov
sti
inc
mov
dec
mov
retf
lea
iret
sbb
ja
mov
ja
dec
pop
dec
arpl
ffreep
mov
inc
aaa
dec
adc
sub
mov
pop
pop
mov
rol
xlat
inc
ja
test
pop
mov
xchg
and
jnp
dec
ins
inc
test
lahf
add
push
ja
pop
ja
dec
or
xchg
mov
pop
push
fimul
out
leave
mov
lahf
inc
xchg
cmp
push
mov
dec
or
ret
mov
in
popa
push
push
add
add
aas
stos
pop
in
les
adc
scas
rol
nop
fimul
push
fisubr
(bad)
mov
and
push
pop
jmp
loop
(bad)
adc
dec
add
sub
sbb
addr16
iret
xchg
das
xchg
or
push
mov
or
xchg
pop
shr
test
push
iret
inc
(bad)
inc
sti
mov
inc
nop
and
xchg
iret
inc
sub
aas
daa
mov
mov
arpl
dec
or
jmp
add
aaa
add
cmp
dec
mov
xchg
aas
inc
mov
push
pop
pop
dec
movs
mov
push
push
inc
pop
and
cmps
add
aaa
out
mov
push
out
mov
pop
cmp
pop
xor
cmp
xchg
imul
adc
rol
adc
inc
add
test
test
sub
push
or
inc
xor
push
add
clc
mov
pop
xchg
not
inc
push
mov
test
dec
test
inc
inc
dec
add
outs
movs
js
mov
(bad)
mov
ja
rol
pop
(bad)
les
test
inc
dec
(bad)
sub
xor
and
pop
push
aas
inc
dec
or
add
pop
rol
loopne
pop
inc
cmp
mov
push
cmp
add
add
jo
pop
push
xchg
sub
fild
inc
ja
pop
pop
dec
push
pop
pop
(bad)
loop
inc
fwait
inc
mov
stos
loopne
add
inc
inc
add
fisttp
mov
xchg
mov
jg
pop
mov
xchg
add
dec
das
add
inc
lods
pop
pop
inc
mov
(bad)
cmpxchg
or
and
xor
pop
dec
ret
or
sub
addr16
ret
mov
pop
jae
dec
dec
add
adc
inc
pop
mov
push
xlat
scas
or
fwait
call
rcr
jmp
(bad)
loopne
pusha
das
push
out
dec
mov
ja
adc
movs
jg
in
sbb
rol
push
sub
add
addr16
push
pop
dec
add
sub
outs
addr16
push
pop
daa
mov
add
push
rol
cmp
add
pusha
das
inc
ja
add
ss
dec
pop
xor
mov
mov
add
adc
mov
cmp
pop
aas
sbb
ficomp
or
sub
cmps
outs
popa
sub
aaa
inc
dec
lods
shr
push
push
addr16
dec
mov
push
test
mov
add
inc
outs
ins
push
sbb
jmp
test
push
in
lds
or
ins
les
dec
xor
and
push
xchg
dec
bound
dec
movs
fdivr
xchg
and
mov
add
sbb
add
ror
(bad)
push
fisttp
out
xor
push
test
inc
dec
mov
imul
push
test
inc
or
fsub
mov
pop
addr16
add
sbb
das
aaa
pop
mov
or
add
push
or
aaa
dec
ins
aas
mov
dec
pop
dec
sub
jae
dec
mov
xchg
and
push
jecxz
adc
mov
dec
imul
test
pop
dec
push
mov
mov
inc
add
push
inc
mov
and
inc
sub
mov
ins
add
dec
push
add
or
push
aas
push
jo
js
pop
xlat
lahf
sub
push
or
xchg
das
sbb
pusha
les
ins
dec
push
jmp
jp
push
push
sbb
fbld
rcl
inc
dec
dec
loopne
inc
push
inc
mov
or
test
test
inc
push
jnp
xlat
sbb
ins
dec
dec
inc
ret
scas
adc
rcl
fwait
add
pusha
rol
sbb
adc
das
inc
dec
mov
sub
mov
push
xchg
aas
mov
dec
xchg
pop
mov
pop
sar
inc
jnp
dec
or
jno
dec
fild
mov
mov
dec
(bad)
mov
xor
clc
push
cmps
push
add
(bad)
add
cmp
rcl
mov
adc
add
and
inc
pop
das
jnp
aaa
cmp
and
out
test
movs
scas
outs
ss
and
dec
stos
das
mov
shr
(bad)
mov
mov
jg
mov
call
and
es
mov
pusha
push
add
mov
lahf
out
das
dec
adc
add
pusha
shl
fild
(bad)
popf
aaa
mov
add
clc
shl
das
dec
outs
idiv
fiadd
es
das
dec
nop
lock
fcom
add
dec
or
es
das
dec
cmp
es
addr16
in
popf
das
je
comiss
clc
mov
sahf
idiv
mov
add
js
jnp
out
in
es
das
mov
es
das
clc
and
das
das
in
jge
not
push
add
mov
es
das
jg
ja
int3
push
add
cld
and
das
push
sub
out
xor
jnp
(bad)
das
push
ins
push
inc
das
idiv
mov
push
push
pop
pop
sahf
loopne
out
push
adc
add
cmp
dec
popaw
test
mov
dec
das
(bad)
jmp
ret
ja
add
inc
push
lods
cs
ja
push
shl
dec
ins
inc
lock
pop
or
dec
rol
push
pop
mov
mov
inc
and
adc
push
dec
lahf
push
loopne
push
enter
mov
mov
push
push
push
push
ret
add
aam
dec
lahf
test
push
add
or
dec
dec
movs
mov
fstp
ffreep
cmp
push
leave
add
fild
and
xchg
add
pop
dec
mov
dec
ja
push
ror
test
adc
add
outs
push
adc
and
add
fisubr
jnp
stos
cdq
or
sbb
push
rol
mov
pop
inc
pop
and
push
ficomp
mov
out
lahf
or
sub
inc
jg
inc
leave
adc
jmp
out
or
bound
ja
fisub
sbb
mov
cmp
and
js
dec
sbb
fidiv
push
mov
sbb
bound
mov
pop
and
sub
dec
mov
ss
inc
aaa
dec
mov
movs
xchg
outs
ficomp
inc
aam
xchg
nop
iret
inc
sub
mov
push
lods
popf
xchg
push
xor
jge
push
addr16
aas
ret
movs
test
sti
mov
jae
push
pop
sbb
jmp
pusha
enter
sub
xchg
out
ret
aaa
push
adc
cmp
pop
(bad)
mov
add
lea
xchg
inc
and
mov
jae
or
push
fisubr
pusha
cmps
push
push
sahf
mov
mov
movs
xchg
add
(bad)
stos
and
sar
xor
push
outs
add
xchg
add
aaa
dec
bound
jae
shr
ins
jg
add
jecxz
adc
and
pop
pop
jp
adc
xor
and
push
fisttp
btr
and
or
outs
and
aam
les
mov
ret
push
mov
push
jno
mov
les
dec
js
jecxz
push
jle
sti
arpl
sub
test
pop
cmp
xlat
mov
push
pop
cmp
retf
test
out
adc
mov
shr
adc
ss
imul
ror
jl
push
jge
xor
je
dec
add
jb
add
ss
push
sahf
pop
push
pop
add
or
je
(bad)
push
popa
jb
sub
scas
jp
and
jnp
xchg
je
and
je
and
fwait
repnz
aaa
mov
xchg
bound
rcr
xchg
retf
inc
xchg
pop
mov
push
jne
dec
push
loopne
adc
and
and
outs
test
loope
lods
nop
ins
bound
sbb
and
or
add
test
and
or
jo
dec
pop
push
push
dec
push
cs
sub
pop
mov
mov
xchg
mov
push
xor
sub
test
out
test
push
add
push
test
test
and
test
xchg
rcl
(bad)
cdq
adc
xor
xor
inc
sbb
inc
mov
or
enter
sbb
or
outs
dec
jae
dec
popa
jae
cmp
pusha
push
mov
daa
sti
jbe
fldenv
shl
jae
or
or
out
mov
push
push
ins
lods
mov
ja
ins
add
in
out
dec
push
push
mov
or
popa
push
add
mov
push
ins
pop
mov
inc
inc
pop
mov
pop
push
sbb
mov
imul
jo
lea
inc
cmp
add
lahf
mov
mov
jbe
ja
push
pop
cmp
mov
movs
movs
lahf
pop
mov
into
scas
push
pop
add
add
outs
add
loope
cmp
dec
mov
add
adc
pop
inc
das
and
in
in
add
daa
pop
loope
or
ins
popf
lock
and
pop
adc
inc
rcpps
cmp
xor
je
data16
push
mov
adc
push
lods
cmps
mov
or
(bad)
xor
add
mov
mov
jle
push
outs
inc
xchg
xchg
inc
push
inc
je
daa
sub
(bad)
push
jbe
jae
add
inc
xchg
sbb
pop
inc
test
lds
add
das
lahf
or
xor
cmps
lea
call
stos
or
sti
cwde
and
mov
retf
push
inc
scas
jb
and
adc
ins
sbb
pop
clc
xchg
push
push
inc
and
push
pop
mov
popa
ret
push
add
lock
fmul
push
dec
outs
inc
fld
push
arpl
es
pop
add
pop
push
inc
les
dec
jg
ins
xchg
mov
xlat
das
add
es
xchg
ja
imul
fidiv
jnp
pop
rol
adc
test
repz
push
add
cmp
pop
inc
add
inc
sub
shl
xchg
aaa
outs
mov
xchg
sub
inc
mov
xchg
cmp
ds
(bad)
dec
or
sbb
out
stos
inc
mov
or
jg
pop
daa
test
lahf
sub
mov
cs
pop
or
dec
(bad)
inc
dec
pop
push
jnp
(bad)
fisubr
sub
dec
push
dec
dec
lahf
test
cmp
sbb
pop
cmp
call
lock
dec
jne
push
or
dec
push
mov
or
imul
stos
and
pop
and
adc
cmp
into
add
outs
scas
jae
push
mov
gs
push
push
jns
xchg
fs
jb
adc
add
inc
icebp
rol
es
popa
ins
and
push
clc
sub
fbstp
jo
mov
fbld
dec
popa
mov
ret
ins
dec
pop
loopne
sahf
je
cmps
cs
mov
ja
js
bound
inc
xchg
clc
mov
ins
fs
loopne
ins
cmp
out
pusha
and
inc
sbb
add
sub
outs
pop
cmp
mov
popa
fs
inc
mov
cmps
push
push
ret
gs
inc
mov
stos
aas
gs
or
popa
or
cmps
ss
inc
push
sub
xchg
aaa
ins
cwde
shl
dec
ds
inc
pop
ja
and
jnp
in
nop
pop
das
and
pop
fild
shl
(bad)
pop
jmp
jne
scas
or
pop
and
cwde
adc
inc
jbe
mov
and
mov
sbb
retf
vmaxss
adc
sub
jo
outs
and
or
pop
aas
and
cdq
add
xchg
jge
mov
xlat
jo
or
adc
xor
das
fneni(8087
das
push
and
add
or
adc
in
out
inc
mov
(bad)
loope
xchg
and
mov
jg
and
add
jecxz
xor
das
test
pop
in
in
adc
push
pop
cs
adc
and
pusha
aas
pusha
pop
shl
lsl
add
add
enter
pop
enter
jo
das
lock
loopne
cmp
adc
add
inc
das
inc
xchg
das
cmp
push
push
ret
pop
ficomp
pop
fsubr
pop
add
add
jnp
push
mov
pop
add
out
out
push
jnp
push
cld
sub
add
add
push
jnp
add
push
es
das
inc
clc
push
mov
out
loope
std
mov
or
std
test
inc
cli
inc
clc
mov
repnz
psubusb
or
out
call
sbb
nop
loope
mov
aam
data16
push
xchg
lock
add
or
in
rcl
mov
add
inc
cmp
xor
add
mov
lahf
dec
push
arpl
add
or
mov
fldenv
inc
push
outs
jb
movs
sub
ret
jg
fist
fwait
scas
push
arpl
or
add
push
inc
or
daa
add
outs
pop
stos
and
push
add
arpl
sti
pop
in
jo
outs
gs
lds
sub
cmp
inc
sub
nop
(bad)
push
add
arpl
inc
xlat
jecxz
clc
sbb
clc
jmp
outs
pop
daa
add
xchg
or
push
pop
outs
and
cmp
(bad)
out
aaa
mov
repz
adc
dec
jae
add
push
pop
inc
jg
outs
and
ins
jmp
adc
or
pop
or
and
push
jo
js
dec
add
arpl
jo
push
sub
stos
pop
imul
xchg
pop
add
shl
push
fmul
cmp
bound
sti
mov
and
jns
jne
gs
jmp
cld
dec
gs
mov
(bad)
sbb
pop
ja
pop
cmp
idiv
aaa
scas
push
or
shufps
jmp
push
push
and
sbb
add
pop
loope
xlat
sbb
and
pop
sbb
jp
ss
jg
pop
jecxz
shl
idiv
(bad)
daa
jmp
ja
sahf
inc
mov
ds
pop
push
xchg
(bad)
or
push
loopne
mov
es
inc
push
xor
loopne
push
loopne
out
(bad)
ins
cmp
jge
je
push
add
jo
xchg
mov
ins
ja
mov
inc
and
popa
xchg
test
clc
xchg
sub
jne
mov
cmp
pusha
sub
es
lea
jno
jnp
add
dec
jno
loopne
out
adc
and
push
pop
fcom
inc
mov
mov
jbe
inc
fsub
retf
mov
mov
(bad)
dec
leave
or
add
xor
pop
daa
mov
enter
inc
pop
sbb
mov
push
or
or
xadd
or
and
fbld
pop
add
(bad)
xor
adc
push
inc
xchg
fimul
(bad)
(bad)
in
rcl
inc
daa
push
jae
sbb
ss
mov
push
clc
pop
inc
outs
cmp
scas
adc
fcomp
add
xor
or
ins
or
inc
push
and
inc
lahf
arpl
je
out
dec
jbe
test
jg
stos
pusha
rol
xorps
push
pop
dec
or
arpl
cwde
imul
push
into
outs
ins
push
enter
imul
push
cmps
out
adc
add
cdq
call
jne
add
pop
add
ds
sahf
inc
add
jle
jbe
push
inc
and
push
cmovo
int
or
and
sub
shl
les
mov
jae
push
ds
jmp
popa
adc
sub
ja
icebp
add
ret
out
sbb
or
outs
ins
(bad)
ss
popa
xor
dec
scas
imul
dec
push
es
adc
jb
xchg
cmp
gs
jge
dec
inc
ins
(bad)
mov
outs
arpl
je
mov
in
add
sub
call
push
and
xor
or
arpl
sub
ss
inc
sub
out
imul
add
daa
inc
add
les
pop
(bad)
and
mov
dec
sbb
sbb
cmp
outs
add
xor
ins
push
and
xlat
je
or
xor
and
mov
cmps
fs
lods
add
push
xor
mov
mov
dec
mov
std
add
dec
lods
pop
ja
xor
add
add
cmp
xor
xor
lahf
iret
das
int3
popa
push
or
iret
dec
enter
dec
dec
add
inc
cmp
jo
xor
mov
dec
in
ret
out
xlat
inc
and
push
lahf
inc
adc
mov
jae
ins
rcr
xor
xor
xor
inc
push
js
lock
js
and
sbb
pop
ss
add
popf
jbe
adc
(bad)
bound
dec
push
pop
test
inc
scas
mov
and
test
or
adc
adc
pop
daa
inc
pusha
or
ret
mov
pop
inc
pop
mov
scas
adc
adc
bound
inc
pop
mov
ss
cs
nop
add
rcl
mov
mov
loop
iret
mov
jnp
mov
mov
mov
ret
les
div
push
fidivr
les
lds
data16
sahf
(bad)
mov
js
mov
dec
leave
ds
test
jle
cs
int
into
jge
iret
repz
iret
shr
sar
shl
out
push
rcr
shl
push
shr
adc
xor
aam
pop
jbe
imul
jne
rol
add
lea
sub
xchg
lock
data16
pop
and
pusha
mov
addr16
lahf
std
xor
lahf
pop
inc
data16
and
adc
xor
ss
pop
rcl
add
mov
imul
mov
cdq
cwde
jge
sbb
clc
push
jae
cmp
das
add
test
push
retf
stos
jns
mov
inc
repz
jle
push
add
sbb
lahf
outs
jg
and
add
dec
add
loope
test
ja
add
cmc
rol
addr16
ins
and
fs
bound
xchg
or
or
pop
jo
jnp
sbb
fwait
xchg
xchg
pop
arpl
jnp
cld
data16
and
popa
popa
arpl
inc
sbb
and
popa
outs
xchg
sub
xchg
loopne
mov
dec
push
loop
add
mov
shl
or
dec
jl
inc
ins
adc
jg
pop
pop
or
inc
inc
or
push
int3
inc
dec
movs
and
xchg
pop
imul
jl
outs
jmp
jb
sbb
jecxz
test
das
and
add
repz
mov
or
cmp
add
add
les
out
das
dec
fstp
mov
cwde
sub
jmp
inc
mov
and
push
dec
dec
mov
js
jne
inc
inc
pop
adc
mov
ds
add
repz
push
ret
idiv
mov
dec
je
ins
jp
(bad)
push
scas
push
cmp
fild
outs
cmp
add
add
adc
das
xor
xor
xor
add
add
das
cs
cmp
mov
sar
or
add
das
das
(bad)
repnz
xor
mov
adc
dec
loopne
das
or
adc
sbb
add
jbe
adc
lahf
pop
in
add
mov
sbb
sub
in
mov
sbb
sub
(bad)
pop
pusha
add
jne
fistp
add
das
mov
shl
pushf
xor
ins
and
jbe
mov
aaa
pop
loopne
(bad)
cli
dec
ins
jo
pause
cmp
mov
pop
dec
or
add
xchg
gs
inc
xor
ret
mov
xchg
and
or
loop
jb
outs
sub
jge
ins
outs
ja
adc
outs
add
add
inc
loope
lods
int3
sub
dec
push
popa
dec
add
jmp
dec
rol
inc
xor
mov
mov
and
(bad)
pop
rcl
(bad)
(bad)
das
jne
gs
xchg
movs
inc
mov
ret
(bad)
pushf
xor
aas
push
jmp
push
adc
pop
div
adc
and
imul
add
ja
(bad)
and
cmp
fisttp
add
jae
adc
scas
ja
and
ins
loop
dec
inc
jecxz
or
or
ja
aas
fisttp
aaa
add
imul
pop
add
xchg
cmp
movs
mov
mov
fwait
jno
or
pop
ret
mov
adc
retf
push
cmp
fisttp
loopne
and
(bad)
inc
cmp
cmc
js
icebp
popa
dec
and
adc
nop
adc
jns
or
cdq
(bad)
outs
and
push
jne
inc
add
gs
out
or
adc
lods
or
adc
in
mov
or
jbe
adc
or
pusha
fidiv
aad
push
mov
jo
mov
push
pop
js
clc
loopne
ins
push
add
out
ss
add
push
inc
add
mov
push
push
nop
lock
int
ins
sahf
push
mov
adc
std
iret
rep
sahf
xor
loopne
mov
ror
dec
push
(bad)
sub
push
pushf
(bad)
fadd
popa
pop
pop
ja
das
mov
inc
nop
pop
inc
das
adc
push
mov
andps
push
test
repnz
je
das
mov
cmps
jae
adc
dec
aaa
js
cld
(bad)
fild
jns
iret
popf
jge
mov
xor
ss
loope
or
adc
and
ret
ins
jb
inc
ret
cmps
dec
sbb
aaa
add
fiadd
inc
test
test
sub
aaa
fisttp
imul
cdq
mov
sar
test
add
sub
fist
pop
pop
rol
and
sbb
pop
add
fild
add
nop
push
lds
add
dec
xchg
push
icebp
xor
rcl
pop
mov
scas
push
jnp
pop
iret
inc
sbb
outs
sub
(bad)
adc
xor
add
push
scas
and
adc
mov
xor
popa
lahf
out
jnp
mov
aaa
push
call
pop
gs
push
dec
adc
fs
xor
mul
in
mov
add
int
dec
ret
dec
or
adc
sub
xor
ret
mov
sbb
adc
dec
test
pop
pop
sub
jmp
xchg
mov
add
add
outs
arpl
rcl
fs
xor
jno
stos
push
(bad)
icebp
pop
cmp
addr16
enter
sbb
shr
repnz
jmp
mov
call
jae
xor
mov
pusha
xchg
add
sbb
push
repz
fwait
out
in
aas
mov
in
adc
inc
pusha
fnstcw
and
push
pusha
repz
es
clc
pusha
inc
mov
iret
sbb
inc
(bad)
test
sbb
dec
stos
pop
inc
jb
movs
sbb
push
jl
js
daa
dec
and
ins
and
push
xor
or
xchg
lods
mov
adc
jb
adc
(bad)
shr
xchg
inc
dec
sbb
dec
ret
inc
jb
inc
(bad)
ins
ss
add
add
jl
mov
sar
xchg
fadd
popf
and
call
jae
sub
imul
cmc
pop
fs
inc
bound
mov
enter
pushf
xchg
fisub
jns
and
outs
gs
or
ins
gs
or
add
mov
inc
je
pop
sub
jae
and
ficom
and
ss
push
in
and
inc
jne
addr16
or
fadd
add
dec
add
cmp
jne
inc
sub
mov
inc
dec
pusha
dec
push
cmp
ret
and
cdq
pop
mov
jge
add
hlt
jo
pop
xchg
add
dec
jae
int
add
or
ds
mov
jb
aas
or
pop
ret
push
add
cmp
cmp
push
outs
sbb
mov
(bad)
into
rcr
dec
and
addr16
scas
dec
inc
jecxz
(bad)
sub
push
push
sub
mov
sub
jle
lods
out
ret
out
push
shl
mov
mov
sysret
fs
addr16
inc
pop
vmread
(bad)
int3
or
ins
dec
cmp
cmp
test
push
aam
daa
lock
or
invd
call
pop
adc
dec
cli
(bad)
test
rcl
xchg
call
not
dec
xchg
adc
std
daa
cmp
mov
cmp
iret
cmp
cmp
cmps
mov
(bad)
xor
inc
cmp
nop
mov
jge
and
ret
or
bound
cmp
jb
scas
or
add
out
or
pusha
push
out
popf
add
jnp
push
div
loopne
loope
loope
daa
jge
mov
push
push
loope
inc
loope
mov
or
pop
or
adc
in
mov
pusha
nop
das
in
in
out
fidivr
push
out
out
call
jmp
add
dec
in
outs
jmp
jmp
push
ja
cld
cmp
sbb
(bad)
out
out
ss
retf
mov
test
(bad)
mov
push
sbb
dec
push
icebp
push
icebp
icebp
and
mov
inc
icebp
jo
pushf
push
repnz
pop
dec
lock
pusha
aas
outs
cmc
jbe
adc
(bad)
test
outs
not
xchg
pop
push
cs
cmps
push
(bad)
push
jle
cld
push
jo
fld
or
push
mov
add
pop
not
test
rcl
cmps
pusha
mov
bound
or
push
xor
jo
add
outs
dec
mov
and
bound
pop
or
add
jae
and
cmp
add
pop
mov
and
loopne
mov
cmp
dec
jae
or
not
outs
popa
dec
xchg
add
push
loopne
add
dec
imul
inc
outs
xchg
(bad)
inc
cmp
and
add
add
mov
mov
xchg
sub
(bad)
sbb
jae
sbb
mov
jg
inc
sbb
jae
aas
test
sub
dec
aas
fst
out
xchg
push
jo
js
cld
outs
jne
push
and
bsf
bound
push
ds
xor
jle
add
aas
ds
push
inc
lock
jae
sbb
and
inc
ja
(bad)
and
bound
aam
hlt
cmovg
dec
sti
ja
dec
pop
in
push
int3
add
ss
dec
outs
ins
jo
sub
jle
repnz
add
sbb
and
pop
fisubr
and
pop
and
add
add
mov
pop
dec
das
push
call
outs
dec
cmp
or
sbb
and
inc
add
movs
pusha
dec
pushf
movs
dec
inc
in
fwait
lock
add
addr16
dec
xor
push
fld
sbb
dec
push
adc
outs
sbb
outs
sub
mov
jb
outs
outs
jb
sbb
xchg
and
mov
cmp
dec
fbstp
imul
sub
jae
mov
xor
js
shl
xchg
retf
and
add
fwait
ins
loop
shl
jg
inc
repz
sub
stos
ins
call
(bad)
mov
in
nop
outs
and
je
retf
pop
mov
cld
push
inc
dec
loopne
loope
adc
pushf
push
inc
dec
dec
inc
inc
and
(bad)
ins
test
or
xor
pop
push
dec
dec
push
das
(bad)
or
push
inc
and
aaa
fimul
push
dec
push
xor
cmpps
(bad)
retf
and
dec
bound
inc
bound
jae
add
call
xchg
sub
inc
call
and
add
sar
cmp
sbb
pop
imul
arpl
push
ins
das
adc
daa
inc
add
and
inc
sbb
xlat
inc
mov
and
retf
jle
xchg
(bad)
out
jo
mov
mov
jmp
jb
addr16
add
inc
jns
xor
fld
rol
cld
add
add
cwde
lock
push
jp
push
pop
push
inc
or
inc
dec
loope
adc
and
test
inc
inc
xor
inc
es
inc
sti
inc
xor
mov
jae
bound
jle
mov
jnp
addr16
imul
lds
je
jg
mov
xchg
add
mov
mov
rol
and
repz
inc
arpl
xor
sub
test
cmps
cmp
rol
pop
aas
adc
push
pop
add
cmp
pop
xor
cs
sbb
xor
pop
cmp
push
sbb
sub
adc
mov
sbb
loop
push
lahf
xchg
push
inc
and
scas
cmp
pop
test
fwait
inc
inc
daa
hlt
jnp
mov
add
add
shl
in
inc
ret
xchg
xor
add
pop
test
fld
and
or
loopne
xchg
push
adc
das
lea
xor
push
(bad)
and
loope
or
scas
inc
div
cmps
xor
sbb
cmp
jb
dec
or
xor
dec
push
outs
add
add
xchg
popa
movs
xchg
xor
jb
fadd
cmp
adc
add
jno
pop
or
cmp
cmp
or
dec
cmp
dec
pop
jb
jns
adc
mov
and
jbe
inc
pusha
ret
push
ins
ins
ja
or
mov
(bad)
jb
das
cmp
jle
in
mov
cli
outs
mov
test
dec
les
and
push
sub
rcl
pop
jbe
aad
fs
mov
cwde
out
and
daa
loop
mov
sbb
rcl
mov
xchg
cmps
inc
push
push
(bad)
add
outs
pop
jns
cmps
xchg
pusha
sbb
xor
(bad)
(bad)
aaa
outs
addr16
jmp
dec
mov
adc
sub
mov
jne
or
adc
rep
es
mov
xor
or
ret
fnsave
outs
cmp
je
inc
pop
jecxz
add
rol
test
out
mov
mov
mov
je
inc
sahf
ins
imul
outs
push
fst
dec
fwait
or
addr16
jg
cmp
jb
popa
je
mov
sub
daa
dec
sbb
add
test
shl
or
ins
jne
xor
gs
push
pop
xor
jmp
cmp
(bad)
outs
add
mov
ins
sbb
pop
mov
jbe
xchg
and
pop
and
adc
inc
jns
inc
push
pop
lods
or
cwde
mov
cmp
imul
pop
mov
mov
mov
push
loopne
xchg
push
mov
popa
adc
(bad)
fcom
jecxz
or
sbb
dec
nop
push
or
mov
pop
loopne
sub
addr16
test
or
rcl
icebp
or
fwait
pop
or
cmp
and
test
add
in
add
add
in
push
dec
imul
add
sub
sbb
pop
mov
das
sbb
push
and
and
jl
inc
and
pop
or
sbb
push
inc
jg
sahf
pop
sub
(bad)
popf
out
push
test
test
pop
push
js
push
stos
inc
stos
push
lods
lods
push
lods
add
fidivr
cmps
scas
mov
add
(bad)
mov
xor
int3
add
fisubr
mov
mov
mov
add
(bad)
test
loope
sbb
mov
mov
inc
lahf
lods
mov
add
mov
pop
(bad)
pop
sub
dec
lods
and
dec
aaa
retf
fs
daa
hlt
(bad)
outs
arpl
and
cmp
fs
mov
(bad)
mov
jb
out
push
push
adc
and
sahf
inc
cmps
mov
jmp
jle
out
sbb
push
out
daa
repnz
add
shr
jno
xor
daa
outs
outs
xchg
add
and
stos
push
and
and
lods
jg
ficom
mov
mov
pop
xor
xchg
push
not
pop
xchg
(bad)
aaa
or
jg
xchg
add
fistp
or
mul
ja
movs
push
cmp
mov
stos
sqrtps
jne
jns
shr
retf
sub
lods
lea
outs
jle
adc
mov
call
cs
dec
ret
int3
pusha
emms
and
test
das
sbb
jge
dec
or
cmovb
adc
pop
test
gs
pop
out
or
imul
xchg
push
xchg
sbb
pop
test
or
sub
loope
ins
and
lods
js
jnp
imul
jl
adc
or
inc
xchg
mov
test
lods
pop
adc
lods
les
cmps
nop
push
enter
xor
sbb
or
sub
fisubr
or
xchg
push
lahf
sub
or
ss
inc
push
push
sbb
and
inc
out
and
shl
push
fmulp
lock
or
aad
xor
xchg
or
xor
and
push
adc
fld
neg
jnp
lock
(bad)
fist
fmul
jbe
push
fcmovu
inc
push
fild
inc
ds
or
adc
into
inc
push
int
or
ds
dec
push
push
mov
jge
dec
push
ds
jb
add
and
sub
in
sbb
not
jmp
and
rol
jo
cmps
call
sar
dec
or
push
cmps
inc
sub
push
or
cs
loop
loop
adc
xchg
pushf
loopne
xchg
repnz
in
pmulhuw
hlt
cmps
inc
mov
sar
pop
cs
jb
jae
movs
pop
add
test
repnz
outs
out
add
(bad)
out
outs
sahf
sti
das
enter
ins
addr16
cs
outs
or
sbb
add
and
fs
cs
mov
ja
sub
push
pop
(bad)
adc
das
adc
mov
inc
inc
adc
inc
dec
and
pushf
xor
jnp
cmps
mov
neg
in
lods
jl
and
dec
inc
popa
arpl
adc
mov
ss
imul
das
push
xchg
imul
daa
push
jo
jbe
fsubr
imul
ins
hlt
sub
data16
gs
xor
movs
imul
push
fidiv
iret
shr
dec
je
mov
(bad)
arpl
push
outs
test
clc
cwde
pop
dec
jb
fnsave
rol
gs
xor
les
(bad)
sbb
dec
dec
push
sbb
bound
add
jae
test
daa
out
gs
(bad)
outs
neg
scas
dec
pop
sbb
inc
jns
daa
fstp
(bad)
leave
dec
dec
push
xor
pusha
and
xor
fisubr
cld
mov
xlat
or
and
lods
or
mov
outs
add
sbb
or
push
xchg
adc
stos
add
fwait
je
xchg
div
pop
inc
sbb
mov
pop
sbb
jae
push
inc
mov
inc
jb
jns
rcl
neg
lods
and
sbb
jo
jno
pushf
outs
jb
arpl
ss
shl
ins
pop
jae
adc
pop
nop
or
movups
(bad)
daa
jg
or
pop
aas
dec
jb
sub
xchg
or
lock
push
mov
das
adc
cmp
outs
push
add
(bad)
mov
(bad)
push
dec
inc
mov
jmp
sbb
mov
repnz
pushf
movs
mov
(bad)
jbe
push
and
das
ficom
addr16
mov
add
push
imul
inc
loopne
inc
call
pop
dec
imul
push
pushf
adc
push
and
dec
inc
xchg
fist
or
addr16
push
jecxz
add
bound
jb
je
out
push
mov
xor
push
push
inc
push
cmc
xor
sbb
jae
add
sbb
or
adc
sub
fs
movs
ror
or
push
or
push
aaa
inc
dec
inc
mov
ror
(bad)
dec
lea
gs
clc
test
push
push
gs
inc
inc
outs
jo
adc
pop
push
inc
dec
push
pop
pop
inc
mov
jo
adc
inc
pusha
das
or
aaa
sbb
popa
aaa
test
sbb
pop
and
add
out
ret
inc
push
push
hlt
jns
out
call
mov
adc
mov
dec
push
enter
xor
dec
push
enter
push
js
not
xchg
mov
mov
call
addr16
pop
movs
push
jmp
inc
sbb
es
jmp
mov
sar
or
in
or
pop
and
fld
and
data16
add
pop
push
mov
and
aaa
jb
and
outs
fidiv
out
retf
int
adc
or
push
adc
push
inc
and
popa
xor
jae
outs
imul
iret
call
nop
sub
inc
adc
add
jmp
sbb
mov
or
pop
sbb
shl
call
pop
xchg
add
(bad)
and
sub
sbb
retf
out
ret
movs
cmp
push
leave
mov
pusha
or
sub
arpl
adc
fs
cmp
enter
gs
sbb
add
add
(bad)
sbb
xchg
outs
mov
push
imul
jl
repz
push
(bad)
leave
add
mov
push
mov
(bad)
mov
pusha
push
es
jb
jne
push
add
loopne
jno
jmp
jl
push
movs
push
ja
jns
ja
add
movs
add
pop
fs
ret
mov
mov
add
add
push
sbb
cmp
cmp
add
or
mov
mov
cmps
cs
out
adc
push
or
xor
pop
adc
and
sbb
ss
adc
xor
add
test
mov
add
mov
dec
cmp
fstp
loopne
mov
nop
push
add
retf
and
addr16
cs
es
sahf
xchg
mov
add
or
mov
outs
call
test
push
inc
leave
add
sub
cmp
nop
das
test
pop
mov
(bad)
nop
das
mov
mov
sbb
add
dec
mov
sub
jbe
and
inc
dec
rcl
cmp
sbb
push
outs
xor
outs
outs
or
test
or
cs
sbb
push
(bad)
sub
xchg
xor
rcr
xor
cld
(bad)
(bad)
jo
ins
pop
stos
or
into
ja
sub
inc
inc
ds
and
inc
pop
inc
and
sub
shl
mov
fwait
xchg
push
add
xchg
mov
es
cmp
fisub
push
sahf
test
and
mov
push
pusha
add
or
push
jno
and
jns
cmps
push
inc
lahf
addr16
add
xchg
sbb
loopne
jne
loope
inc
sub
repz
xor
data16
sub
retf
test
aaa
jo
jae
jo
inc
or
push
sub
xor
pop
dec
ret
adc
ja
enter
cmps
push
pusha
or
jns
and
add
add
cmps
inc
push
data16
push
imul
dec
or
and
fsubr
ins
jb
and
jmp
mov
xchg
mov
jbe
or
xor
divps
mov
or
gs
and
iret
movs
inc
imul
les
inc
outs
jo
or
xchg
push
push
jns
pop
add
xchg
lea
mov
outs
jne
push
addr16
xor
out
dec
add
enter
repz
repz
test
iret
repz
push
dec
inc
xor
adc
dec
inc
cmp
clc
sbb
xor
or
test
add
xor
push
push
push
add
(bad)
sbb
sbb
mov
fld
and
and
sar
xlat
inc
inc
jge
cmp
sbb
cmp
adc
add
jb
nop
xor
pop
dec
add
xchg
inc
sub
inc
add
mov
inc
out
adc
pop
pop
inc
inc
dec
dec
inc
jae
mov
add
mov
sbb
dec
retf
pop
fld
inc
pop
popa
push
inc
dec
sbb
xchg
das
jg
cmp
sbb
xchg
je
call
pop
ret
push
add
pop
les
(bad)
out
xchg
outs
add
push
jmp
cmp
jne
fs
int
sub
mov
jo
mov
outs
je
sbb
lds
cmc
sub
push
ret
pusha
stos
inc
and
(bad)
shr
pop
test
cmp
add
mov
adc
mov
dec
sbb
das
fnstcw
add
jecxz
mov
add
cmovg
lahf
inc
aad
movs
xchg
aad
mov
cmp
fs
popa
pop
add
mov
mov
ja
mov
outs
mov
ins
jns
popa
fs
xchg
leave
nop
aas
push
test
js
adc
jns
pusha
pop
leave
dec
adc
adc
dec
pop
sub
shl
cmps
js
cmp
mov
inc
mov
sub
inc
jne
cmp
mov
inc
inc
push
inc
push
loopne
(bad)
aas
out
aam
gs
inc
push
dec
inc
sub
push
(bad)
(bad)
ret
daa
pop
dec
push
and
(bad)
pop
dec
push
dec
push
jbe
push
adc
not
inc
inc
repnz
push
daa
ss
inc
dec
mov
dec
mov
pop
jge
push
adc
pop
push
pop
dec
or
and
jnp
jl
push
pop
dec
xor
inc
add
dec
push
daa
mov
mov
out
inc
push
inc
ja
mov
push
cmp
das
fcomp
dec
lock
inc
outs
dec
inc
dec
push
iret
ret
or
test
js
add
add
push
push
xchg
xor
sahf
retf
cs
pop
data16
add
dec
call
jg
jmp
adc
and
push
dec
iret
mov
into
arpl
xor
inc
push
inc
dec
dec
bound
push
out
aaa
fadd
jo
inc
iret
aas
inc
fcom
dec
ins
and
imul
pop
je
clc
push
ins
popa
fcmovnu
push
inc
pop
pop
dec
inc
pop
loop
push
xchg
push
inc
pop
inc
inc
pop
and
dec
das
push
dec
mov
arpl
sbb
dec
xor
sbb
daa
pop
push
addr16
es
push
mul
in
cmovb
dec
(bad)
and
dec
inc
push
aas
aas
push
pop
mov
dec
mov
dec
jb
inc
jbe
pop
mov
call
cwde
xchg
jne
ja
dec
and
pop
inc
test
push
sbb
mov
aad
imul
mov
push
lahf
inc
push
ja
sbb
outs
dec
pop
ja
inc
imul
not
and
push
je
lods
inc
dec
lea
addr16
ret
pop
(bad)
cmovae
out
call
push
xchg
push
inc
pop
ins
sbb
rcl
pop
mov
mov
scas
push
jns
lock
push
adc
inc
pop
sub
rcr
fmul
pop
loop
xlat
jo
mov
outs
rol
push
movs
loop
or
not
je
adc
call
dec
inc
imul
mov
and
(bad)
push
addr16
push
pop
jb
pop
dec
dec
dec
inc
inc
push
jb
pop
adc
movs
xor
dec
mov
ficom
xchg
sbb
bsr
jmp
mov
push
fbld
out
and
and
jmp
jg
pop
push
lods
add
push
loopne
pop
xchg
adc
dec
(bad)
lods
or
push
dec
inc
push
push
outs
es
inc
imul
pop
push
push
push
pop
mov
dec
nop
std
xchg
imul
push
scas
jg
rcl
add
xchg
daa
fisubr
in
push
push
inc
lds
push
outs
mov
push
dec
sub
and
aas
push
fs
fisub
popf
push
pusha
mov
ret
rcr
int
pop
pop
clc
push
dec
pop
push
cmc
dec
xchg
push
push
mov
push
shl
sub
scas
mov
loopne
aaa
inc
dec
not
icebp
xchg
or
stos
jne
sar
ins
adc
inc
out
push
inc
pop
lea
test
push
and
push
ins
push
push
cmp
push
das
fldcw
xor
and
pop
add
dec
inc
div
pusha
adc
xchg
cmps
dec
dec
inc
dec
aaa
sub
dec
inc
addr16
sbb
daa
add
xchg
add
xor
(bad)
inc
dec
dec
daa
cmp
pop
icebp
push
adc
lds
pop
popf
inc
push
out
pop
and
pushf
or
add
loopne
dec
dec
loopne
pusha
call
dec
inc
add
daa
and
push
aaa
das
dec
pop
pusha
fadd
stc
inc
push
dec
dec
dec
call
inc
inc
dec
push
pop
or
add
out
xlat
adc
(bad)
mov
je
(bad)
dec
dec
pop
mov
push
cmp
into
inc
dec
das
dec
push
fadd
or
adc
fistp
push
dec
pop
inc
push
dec
daa
js
(bad)
(bad)
lahf
pop
cmps
test
pop
cmp
das
inc
inc
dec
aaa
dec
dec
loope
(bad)
jno
inc
mov
sbb
outs
cmovg
adc
xchg
or
aam
add
fdiv
enter
add
inc
mov
mov
movs
or
enter
or
mov
jb
adc
adc
adc
xchg
and
adc
adc
jns
in
sbb
xor
shl
xor
and
pushf
xor
enter
cmp
jg
cvttps2pi
sbb
jb
sbb
sbb
pop
xchg
and
fsub
enter
cmp
enter
and
daa
push
sbb
sub
sub
repnz
xchg
sub
sar
xor
sbb
in
xor
aaa
int3
cmp
lods
and
test
xchg
xchg
and
mov
sbb
repnz
mov
movs
fsub
les
cmp
in
add
add
add
inc
mov
add
add
in
xchg
pop
sub
sbb
or
inc
mov
adc
lock
adc
adc
int3
push
rcl
pop
pop
push
cmp
and
jo
enter
pusha
add
inc
add
in
add
add
pop
xchg
and
call
adc
jb
enter
and
mov
and
and
in
xchg
daa
cmp
sub
sbb
jg
mov
or
add
xchg
mov
add
int
add
loopne
aam
sbb
jb
int3
add
xchg
or
or
or
jb
enter
or
and
jl
hlt
adc
adc
loopne
jb
enter
loop
jecxz
in
mov
js
ins
out
out
call
das
push
xor
retf
das
inc
pop
and
adc
clc
popa
add
jb
enter
arpl
lods
gs
mov
data16
push
jg
dec
in
and
push
xor
ja
jbe
cmp
sub
das
sbb
invd
adc
jbe
div
retf
pop
retf
scas
retf
(bad)
sbb
jbe
jbe
mov
dec
movs
adc
xchg
adc
or
jle
ins
mov
or
adc
adc
push
scas
and
ja
xor
dec
enter
out
imul
or
sub
pop
add
inc
add
div
ret
aas
or
inc
xor
or
dec
inc
and
fild
loopne
pop
ins
add
mov
xchg
int3
pop
out
es
movs
adc
cmps
(bad)
and
cmp
scas
mov
rcl
dec
jne
jo
xor
mov
arpl
cmps
sbb
sbb
add
xor
mov
fwait
rcr
movs
sub
xchg
das
movs
smsw
or
or
test
outs
outs
ins
sbb
imul
push
addr16
xor
inc
fldenv
shr
cmp
mov
adc
js
inc
xchg
cmp
loopne
add
jnp
movups
and
push
add
pop
and
add
xchg
ret
sub
push
sbb
xor
or
add
adc
in
sub
cmp
lods
sub
in
pop
sub
xchg
lock
push
inc
sub
jge
pop
xchg
retf
dec
add
scas
jne
ins
psubsb
das
mov
(bad)
fld
js
add
xor
inc
jns
jno
mov
sbb
(bad)
mov
mov
sbb
push
push
int3
pop
push
jns
jne
inc
fwait
test
jae
jae
jns
adc
and
sahf
xchg
mov
mov
adc
jae
and
mov
in
test
inc
inc
sub
adc
(bad)
jg
add
cmovae
pop
mov
fs
xor
inc
jne
aas
mov
pop
jo
and
aaa
or
inc
xchg
pop
cmp
outs
jne
test
or
pop
or
ins
sahf
jmp
scas
mov
and
mov
or
mov
loopne
sar
push
(bad)
pusha
push
imul
(bad)
xor
or
js
jmp
pop
in
pop
push
imul
mov
nop
mov
je
mov
shr
bound
jecxz
addr16
ja
lea
or
outs
bound
dec
mov
ins
or
xor
add
and
xchg
movs
adc
test
mov
sbb
or
push
adc
mov
mov
repz
mov
adc
ja
and
lahf
mov
mov
inc
ret
pop
jo
sbb
cwde
mov
mov
jbe
outs
sbb
or
push
adc
pop
lock
xor
xor
das
push
cwde
mov
imul
fisub
push
and
mov
mov
inc
mov
mov
in
sub
mov
mov
sub
cs
mov
(bad)
mov
mov
cmp
aaa
xor
outs
loope
aaa
fidiv
sub
popa
jo
push
add
je
in
aaa
jno
pusha
jbe
test
aaa
and
or
test
dec
bound
(bad)
sahf
dec
mov
inc
and
dec
retf
push
or
mov
add
adc
sahf
push
ins
mov
js
dec
(bad)
push
xor
push
mov
push
sub
vmptrld
pop
ss
cmps
pop
push
pusha
adc
add
lock
push
sbb
xchg
push
fbld
and
ds
scas
or
inc
out
cs
aam
push
call
adc
test
or
pop
sub
xor
sub
repnz
cmp
inc
add
mov
inc
inc
addr16
cli
or
and
movs
dec
xchg
arpl
je
or
cmps
push
rcl
mov
sbb
cmps
outs
mov
sub
je
xadd
xchg
test
dec
xor
push
ins
add
inc
out
outs
lock
test
mov
inc
push
out
mov
jae
jbe
push
loopne
jne
sti
fidivr
inc
outs
push
outs
rcr
test
push
jo
push
inc
or
adc
cmp
call
pop
inc
push
push
imul
mov
add
out
inc
mov
jo
das
popa
adc
xchg
jno
sub
add
cmp
pop
addr16
add
mov
inc
mov
mov
stc
add
push
mul
(bad)
int3
lahf
or
cmps
mov
mov
adc
es
(bad)
dec
pop
into
add
and
daa
sti
jo
mov
adc
movs
test
scas
push
out
cmp
inc
loopne
mov
pop
sbb
stos
imul
push
xor
mov
adc
dec
cmp
or
ds
xor
dec
ins
adc
add
out
mov
pop
div
nop
js
pop
dec
aaa
jbe
mov
inc
sbb
test
push
jl
sbb
aaa
outs
sub
adc
adc
mov
add
bound
and
or
mov
call
cmps
pushf
nop
inc
or
pop
lahf
ds
test
daa
(bad)
or
(bad)
je
ins
(bad)
out
test
jmp
mov
shr
in
cwde
lds
cmp
pop
adc
and
fmul
test
jmp
movs
lock
mov
and
cmp
aaa
push
and
and
jge
pause
stos
push
lods
lods
mov
and
xchg
add
mov
mov
popa
je
ins
test
jbe
pop
add
inc
mov
outs
xchg
pop
sahf
and
mov
xchg
inc
add
and
out
sub
(bad)
or
scas
ret
out
lahf
cmp
fs
ret
or
cld
fidivr
ds
es
rol
pusha
loope
sub
cs
outs
mov
popa
and
mov
jg
add
sub
mov
sbb
push
lock
cmp
ret
xor
call
jg
gs
pop
mov
lock
pop
packssdw
cs
faddp
loopne
add
push
les
sbb
xor
in
sub
push
hlt
and
int
fcomp
cmps
(bad)
xor
(bad)
xor
aaa
jae
test
(bad)
cmp
pop
in
cmps
fsubr
sub
sahf
sbb
push
dec
stos
sahf
jne
push
es
mov
mov
push
sub
and
(bad)
movs
cmp
das
nop
and
cmp
or
xor
add
pop
add
pop
cmp
or
jo
mov
sub
lahf
mov
pop
xchg
add
sbb
fist
adc
das
out
xor
pop
es
sub
pop
aas
arpl
and
dec
fs
jecxz
inc
push
aas
pop
ins
fisttp
dec
nop
xchg
sar
sub
sub
xor
mov
dec
(bad)
ja
cmps
xchg
mov
add
pop
push
sbb
adc
sbb
and
imul
lock
sub
aaa
aas
dec
xlat
add
add
data16
mul
xor
cs
adc
arpl
mov
adc
aas
or
adc
inc
test
rcr
(bad)
mov
xlat
and
push
push
test
push
push
repnz
iret
out
push
sub
repz
fxtract
sbb
dec
and
sub
outs
sti
push
jbe
push
cmc
ins
outs
ds
fdiv
or
push
dec
xor
call
fsubp
mov
push
daa
hlt
call
ror
cmc
imul
or
iret
repz
pushf
push
test
int3
xor
in
dec
outs
dec
test
outs
jne
adc
lods
add
test
ins
gs
push
add
test
(bad)
or
pop
xchg
imul
or
in
add
outs
push
pusha
or
add
pop
add
ins
shl
add
sbb
sub
idiv
and
test
cmps
jmp
and
call
test
mov
jle
fist
rol
mov
pop
mov
or
jb
ret
push
pop
pop
pop
or
dec
add
mov
adc
add
fidiv
out
push
mov
add
push
or
fsub
push
mov
sub
lock
jae
data16
adc
or
push
and
out
add
mov
cmp
jmp
int
jbe
nop
push
loopne
cmps
jmp
div
outs
rol
lock
(bad)
push
and
xor
in
mov
push
stos
test
imul
(bad)
jae
push
push
ins
jns
push
xor
push
xchg
push
outs
ret
call
bound
cmp
fbld
push
jo
aaa
mov
mov
nop
adc
adc
adc
dec
xor
lea
outs
nop
push
outs
imul
adc
dec
push
and
push
push
or
pusha
shl
adc
push
sub
and
sysenter
sbb
mov
jb
mov
mov
xchg
arpl
shl
or
cdq
hlt
rol
lock
xchg
push
cmovs
loop
pop
xchg
sbb
ror
xchg
icebp
out
jo
lahf
add
push
std
jo
pop
inc
pcmpgtb
pusha
test
jl
js
jo
sub
xor
dec
mov
or
and
cmp
clc
and
out
cld
repnz
outs
sti
inc
mov
outs
push
cld
add
mov
jbe
and
pop
push
fistp
retf
imul
push
daa
pop
push
pop
outs
jp
out
sbb
jne
jo
dec
int3
pop
jg
popa
jo
add
pop
outs
jg
dec
mov
shr
dec
sub
and
fidiv
add
ret
dec
sub
dec
jl
push
pop
movs
std
and
xchg
pop
add
jo
neg
add
cmps
xor
sub
mov
mov
sbb
cmc
rcr
add
add
push
popf
(bad)
cmp
rcr
push
add
aaa
and
add
add
mov
fwait
lock
add
ins
adc
aaa
das
jo
ror
or
(bad)
pop
mov
fs
cmp
data16
xor
inc
adc
pop
inc
xchg
pop
dec
dec
add
mov
outs
jmp
cmp
sar
add
gs
addr16
pop
rol
xor
sub
or
push
(bad)
inc
xchg
inc
shl
jg
fwait
ins
xor
xor
or
rep
fisttp
sub
sub
push
and
mov
imul
xor
xor
sub
in
std
fsubrp
push
pushw
and
pop
ja
add
and
mov
dec
and
ss
(bad)
lahf
lock
rcr
push
test
mov
adc
and
inc
ss
rol
push
inc
add
ds
mov
adc
sub
test
xlat
push
je
mov
mov
inc
fild
xchg
pop
add
loope
cs
hlt
adc
dec
sbb
push
or
push
addr16
xor
sbb
arpl
mov
sbb
mov
lds
jg
inc
fwait
and
inc
ja
cmp
inc
and
sub
ja
pop
inc
popa
mov
or
sub
popa
xchg
cmp
popa
jb
ja
es
fucom
popa
das
bound
push
push
icebp
arpl
push
push
or
mov
ins
popa
or
imul
inc
add
jg
mov
add
xor
or
or
adc
pop
mov
inc
sub
sbb
pop
add
fisub
adc
adc
dec
cmps
dec
test
jl
fld
add
mov
add
inc
cs
or
or
push
in
pop
in
push
jg
adc
pop
add
jmp
shl
mov
mov
cmp
(bad)
retf
mov
sbb
mov
scas
sar
jg
push
mov
int
lods
dec
ds
mov
push
jmp
mov
ins
push
fild
pop
enter
sti
fwait
icebp
out
sbb
test
xor
pop
add
icebp
push
clc
push
push
mov
sub
retf
rcl
mov
adc
bound
mov
aas
inc
in
call
push
mov
ret
test
sahf
mov
jb
xchg
pushf
(bad)
pop
add
adc
(bad)
cmp
popf
jecxz
mov
fadd
aas
mov
add
dec
outs
jmp
in
mov
aaa
push
inc
pusha
dec
aad
pop
jle
sub
adc
loopne
mov
(bad)
fstp
mov
or
jnp
mov
ins
jmp
int3
push
and
pop
jle
enter
sub
mov
pushf
and
fidiv
fsub
adc
jg
in
push
iret
(bad)
bound
mov
ror
jl
fadd
jge
test
mov
cld
or
movs
xchg
or
mov
lahf
mov
mov
cwde
pop
pop
jb
pop
call
jg
jb
pop
fwait
ins
pop
or
and
pop
jb
mov
jb
pop
jb
daa
fs
jb
pop
adc
sbb
pop
push
jb
pop
jb
mov
jp
xchg
and
jb
test
and
jb
imul
int3
jl
dec
sbb
inc
lds
jbe
rcr
mov
test
test
pop
enter
stos
addr16
and
in
jne
in
cs
pusha
mov
mov
in
mov
in
mov
cs
cs
mov
inc
cs
mov
in
cs
mov
cs
in
ret
xor
bound
sbb
adc
test
adc
daa
in
pop
or
mov
(bad)
inc
xchg
mov
out
mov
adc
shl
xchg
movs
xor
xchg
cmp
xor
loop
or
push
dec
add
aaa
xchg
add
pop
imul
add
nop
out
cmp
in
cmps
pop
imul
dec
pop
inc
inc
adc
iret
leave
inc
es
test
daa
push
outs
popa
jb
inc
add
ins
mov
inc
xlat
mov
and
daa
daa
xor
inc
inc
mov
push
sti
and
ds
imul
or
pop
push
je
ins
and
or
pop
div
outs
arpl
dec
push
fdiv
dec
bound
pop
mov
or
std
test
jae
and
inc
clc
and
out
jmp
pop
sbb
dec
sahf
jo
loopne
or
and
mov
xchg
add
sbb
test
sbb
ins
lods
adc
iret
or
xchg
ss
(bad)
xor
pop
pop
or
imul
push
mov
lahf
popa
push
push
push
cmp
pop
mov
jnp
xchg
sbb
xchg
xor
push
mov
xchg
dec
sub
push
aaa
inc
cdq
dec
out
test
dec
mov
push
sub
jle
cs
mov
inc
pop
and
lahf
xchg
xor
mov
inc
mov
outs
aaa
mov
ret
dec
add
popa
mov
(bad)
jo
push
mov
adc
adc
push
pop
icebp
out
imul
cs
jae
push
push
je
(bad)
mov
(bad)
push
push
or
dec
aas
ret
aam
dec
sbb
mov
aam
je
adc
and
and
scas
jecxz
inc
inc
das
adc
mov
rcl
xchg
ja
push
clc
push
or
cmp
rcl
cmp
mov
cmps
add
sub
jecxz
jmp
pop
jae
bound
mov
outs
and
dec
add
sub
cdq
add
mov
shl
or
iret
sbb
ficom
and
inc
das
arpl
add
and
push
push
and
test
push
lahf
sub
and
add
test
aas
mov
dec
mov
inc
inc
and
arpl
add
adc
dec
pop
lock
jnp
xor
dec
and
inc
mov
sbb
fist
dec
or
neg
or
xor
sub
sub
cmc
or
ins
add
out
je
bound
or
xchg
movq
loope
or
xlat
add
imul
and
out
add
pop
jno
jae
nop
push
add
cmovbe
sbb
mov
not
pop
mov
pop
adc
add
xchg
aam
inc
data16
adc
bound
xchg
mov
push
xchg
and
or
popa
dec
mov
(bad)
add
mul
inc
dec
sbb
dec
scas
add
(bad)
jp
sub
jg
arpl
xchg
add
outs
or
cmp
cli
xlat
jnp
mov
(bad)
mov
push
add
add
add
and
mov
mov
sbb
sub
and
jl
mov
cmp
and
addr16
adc
dec
add
and
ds
jo
adc
adc
sub
mov
mov
cmps
sub
xor
cmp
ss
inc
add
or
sub
xor
and
add
mov
or
and
dec
outs
or
adc
and
pop
inc
sbb
push
mov
adc
popa
test
ins
mul
adc
add
or
add
xchg
pop
test
iret
(bad)
push
pop
sbb
inc
daa
pop
add
cmp
jo
and
xor
dec
sbb
jo
xchg
ss
xor
jns
mov
daa
fwait
and
jo
call
add
and
adc
in
add
xor
js
adc
or
sub
enter
xor
jae
mov
aas
or
mov
repz
mov
add
mov
mov
(bad)
sub
xor
mov
mov
pop
dec
dec
das
sub
pop
add
or
xor
sbb
jne
and
or
push
or
dec
retf
mov
call
adc
add
aad
pop
or
leave
add
ror
out
sub
add
mov
sbb
push
loopne
add
jnp
pusha
pop
sub
xor
push
or
das
aas
jl
pxor
ja
fwait
or
ror
inc
sub
es
ja
jnp
xor
inc
or
lea
dec
stos
les
test
push
mov
iret
jae
fsub
or
ja
pop
mov
loope
push
and
sahf
and
das
jae
pop
add
mov
outs
cmp
dec
cmp
inc
jns
(bad)
cmp
xchg
mov
mov
mov
mov
retf
(bad)
add
je
pusha
and
lea
sub
ret
retf
jnp
test
lock
sbb
aas
rdpmc
add
xor
jbe
call
push
hlt
sub
dec
adc
pop
shr
pusha
mov
imul
push
pop
fmul
mov
mov
ss
mov
sti
mov
and
cmp
fst
xchg
sub
(bad)
and
inc
hlt
aas
pop
out
xchg
ret
je
ret
sub
ss
mov
cwde
sti
sub
push
repz
out
outs
loope
cmp
dec
pop
popa
add
pop
aam
dec
je
inc
mov
mov
add
sbb
add
mov
and
popa
arpl
and
xchg
push
inc
ins
adc
cmp
inc
add
inc
ins
jne
gs
adc
cmps
into
adc
sbb
clc
(bad)
fs
pop
dec
adc
push
mov
fwait
inc
xor
xchg
push
movs
test
jmp
test
outs
xchg
pop
fld
add
inc
pop
jg
cdq
add
sti
das
push
inc
adc
mov
adc
dec
dec
xor
jo
inc
mov
ins
mov
sub
xor
sub
out
rol
and
add
lods
jbe
pop
aas
and
pusha
pop
fiadd
aaa
lahf
iret
adc
xchg
sub
sbb
xchg
push
jo
mov
and
or
dec
loopne
sbb
mov
or
popa
stos
jno
(bad)
pop
jecxz
inc
inc
inc
xor
adc
inc
push
sbb
scas
jno
jne
adc
jnp
arpl
adc
getsec
pop
add
mov
sub
jo
adc
sbb
inc
popa
je
retf
mov
sti
inc
fimul
adc
les
sub
pop
sub
fbstp
pop
sub
outs
mov
push
into
adc
sbb
or
or
inc
iret
pop
sub
sbb
mov
and
out
jae
shl
jp
xchg
ja
mov
retf
stos
cmp
addr16
fs
mov
add
jmp
daa
imul
rol
push
push
dec
mov
add
add
mov
cld
push
push
shr
inc
inc
inc
add
daa
mov
je
jb
cmp
sbb
mov
mov
je
movs
lock
(bad)
push
call
repnz
jp
jmp
stc
mov
pop
popa
in
mov
or
or
adc
sub
outs
arpl
add
jb
push
mov
pop
jb
addr16
pop
xor
add
or
imul
jno
jp
mov
loop
shr
mov
push
and
jb
gs
(bad)
loop
outs
push
stos
mov
sbb
mov
push
jo
jmp
add
fnstenv
inc
sbb
or
not
or
lds
inc
xor
pusha
push
inc
shl
pop
(bad)
stc
and
mov
or
fs
cdq
stos
fs
pusha
aad
syscall
sbb
inc
push
adc
fstp
arpl
pop
jne
mov
sub
sbb
adc
adc
or
in
push
dec
dec
dec
xlat
adc
fst
or
dec
xchg
xor
and
fcmovnu
add
lock
out
inc
add
inc
out
pusha
test
rcr
rcl
push
xchg
(bad)
and
fdecstp
out
js
add
jle
sub
dec
pop
adc
mov
outs
fld
movs
lahf
adc
inc
or
inc
add
jne
mov
push
test
or
xchg
daa
push
sbb
pop
mov
mov
mov
sub
pop
and
jmp
imul
mov
fist
add
adc
pand
rcl
sbb
or
and
add
add
push
cmp
pop
xor
js
pop
mov
and
test
add
jnp
jge
add
in
jp
popf
test
jl
ret
pop
add
sub
and
jl
or
jbe
add
jb
cmp
jae
mov
(bad)
sub
jae
outs
ror
xchg
jl
mov
xor
inc
pop
pop
push
pop
adc
imul
or
sub
mov
adc
fsubr
sub
mov
sbb
mov
add
pop
xlat
loopne
add
retf
or
adc
xor
and
bound
jo
test
mov
aaa
adc
xlat
imul
cmp
retf
and
mov
or
mov
or
mov
xor
cmp
das
shl
and
inc
and
aaa
iret
pop
adc
dec
aas
pop
inc
cwde
sbb
(bad)
jae
je
sub
out
lds
adc
pop
push
cmp
jg
imul
xchg
sbb
dec
push
ret
mov
test
daa
stos
or
cli
mov
scas
mov
push
adc
dec
and
add
pusha
imul
imul
scas
xor
add
comiss
sbb
bt
test
pop
jo
inc
inc
dec
test
fild
inc
and
lahf
lock
retf
inc
jg
test
movsx
and
pop
cmps
and
das
fild
push
loop
outs
pop
mov
sub
jae
sbb
pop
sub
add
fwait
sti
jmp
sbb
stos
mov
add
bound
xor
adc
sub
pop
test
and
movs
mov
jno
nop
or
test
or
pop
fwait
retf
out
and
mov
ror
mov
sub
cmp
add
je
inc
call
ins
pop
ja
pop
fwait
mov
and
sub
add
add
sub
xchg
mov
jnp
pop
jg
cmp
ret
ret
xor
popa
push
aas
add
inc
rcr
dec
daa
repz
ja
outs
add
add
mov
in
pop
ret
pop
push
mov
dec
scas
pop
or
dec
and
aas
adc
adc
mov
enter
push
cs
xlat
push
xor
dec
(bad)
adc
or
jg
ret
outs
mov
adc
popa
dec
or
jo
mov
pop
add
and
xchg
ret
xlat
dec
iret
and
out
daa
dec
sbb
and
adc
adc
pop
test
mov
sbb
mov
pop
popa
outs
sub
mov
sti
mov
inc
jmp
fwait
dec
dec
clc
inc
dec
aas
and
ins
or
imul
sbb
add
stos
push
sub
jg
adc
je
ja
pop
loope
mov
out
dec
dec
cmp
cmp
cld
jle
add
dec
and
jns
add
das
adc
push
inc
push
inc
(bad)
(bad)
ins
lods
scas
ins
bound
dec
outs
jbe
dec
adc
dec
sbb
mov
cmovno
jne
dec
jne
xchg
ja
jo
inc
and
or
out
in
jg
bound
popa
jb
popa
outs
adc
into
cmp
outs
jns
int3
cmp
xchg
addr16
mov
jb
popa
xchg
imul
aaa
cmps
mov
outs
sbb
mov
rol
push
jne
popa
pushf
jae
mov
dec
inc
aas
sbb
xor
sub
and
and
sbb
sbb
mov
mov
and
and
fwait
jecxz
inc
sbb
jecxz
pusha
les
add
inc
lods
mov
and
dec
inc
ins
test
(bad)
jmp
inc
mov
sub
adc
add
inc
(bad)
xor
movs
xchg
or
and
jae
and
mov
(bad)
out
inc
and
(bad)
add
add
and
ds
add
cmp
mov
sti
test
outs
add
xchg
push
imul
and
dec
xor
or
out
pop
sub
(bad)
out
imul
mov
mov
lods
jns
outs
div
sbb
push
dec
xor
mov
ret
and
out
xor
xor
iret
sbb
adc
mov
out
dec
push
test
outs
mov
mov
out
and
push
test
or
ja
ss
push
xor
sub
xor
scas
jmp
xchg
push
add
and
add
jp
ret
inc
cmp
add
ins
or
sub
add
inc
pop
jb
mov
je
adc
out
fdivr
pusha
inc
daa
inc
or
das
or
dec
add
es
add
inc
xor
addr16
cwde
jnp
pop
bound
imul
pop
js
(bad)
push
rcl
daa
mov
adc
je
xor
pop
push
push
jmp
dec
mov
gs
mov
ins
call
add
sub
movs
add
push
fiadd
int3
or
iret
arpl
and
mov
loope
outs
(bad)
jne
outs
arpl
mov
sub
(bad)
jmp
adc
xlat
mov
shl
(bad)
xchg
or
mov
pop
xchg
mov
push
or
inc
ret
cs
in
fdiv
jae
adc
pop
iret
test
cwde
arpl
fbld
sub
jae
add
and
inc
add
dec
or
or
sbb
stos
and
pop
pop
mov
mov
scas
data16
adc
lahf
mov
daa
inc
dec
and
adc
(bad)
maxps
pop
add
ins
cmp
je
imul
popa
inc
sbb
mov
dec
or
ja
and
ins
mov
ss
fistp
inc
and
mov
mov
je
inc
add
adc
add
and
(bad)
mov
loop
jecxz
arpl
ins
mov
lock
je
scas
pop
xchg
adc
out
adc
jmp
lock
sti
add
ins
inc
adc
retf
or
push
es
arpl
add
push
aad
inc
xor
or
bound
mov
mov
arpl
xchg
add
or
adc
sub
movsx
dec
pop
pop
xor
arpl
push
mov
push
xchg
mov
sbb
or
or
dec
fst
stos
push
mov
jmp
inc
pop
fs
sub
add
xor
and
(bad)
ret
ret
push
jg
add
add
add
cmp
mov
add
scas
fild
jp
imul
add
movs
mov
sub
das
js
je
pop
adc
jg
mov
pop
jg
xchg
fcmovu
add
cmp
ds
jae
inc
fiadd
cwde
lea
xchg
jbe
pop
push
push
inc
inc
imul
popa
mov
fwait
arpl
mov
rol
and
and
jb
pop
mov
repnz
bound
movs
cmp
push
pop
push
mov
mov
dec
dec
and
(bad)
dec
imul
mov
and
jl
iret
cmp
or
xchg
pusha
add
and
loopne
and
in
mov
and
push
scas
lahf
or
push
inc
pop
or
pmaxsw
dec
add
inc
sbb
push
jb
inc
mov
add
ret
cmp
xchg
add
popa
and
xchg
pop
(bad)
gs
data16
add
test
imul
sbb
ds
lea
pop
lds
sub
jg
(bad)
sub
jo
pop
mov
add
and
add
jnp
mov
movs
loopne
cmps
movs
data16
push
pop
(bad)
cmps
pop
das
call
out
test
jae
and
inc
adc
xchg
or
adc
adc
sub
test
jg
pop
add
sar
pop
mov
inc
inc
sub
cmp
mov
bound
scas
aam
movs
movs
mov
sub
mov
stos
pop
test
movs
mov
xchg
loop
pop
dec
pop
pop
es
popa
and
(bad)
fs
inc
and
mov
pop
add
movs
push
push
mov
arpl
loopne
jb
imul
pop
xchg
add
or
cmps
test
add
jnp
fild
ja
push
dec
(bad)
jmp
jne
mov
int
sbb
jecxz
add
push
mov
adc
inc
lods
pop
fwait
ja
xor
arpl
les
inc
sbb
pop
movs
arpl
pop
push
gs
cmps
lea
mov
dec
or
or
fadd
ins
mov
dec
sbb
push
inc
push
test
pop
call
pop
xchg
ja
pop
and
arpl
jnp
ret
movd
push
sub
adc
loopne
sti
das
pusha
mov
mov
cmp
and
push
inc
add
dec
fs
cmp
cmp
mov
or
mov
outs
xor
push
nop
and
in
nop
nop
and
rol
cmps
sbb
cmps
xor
inc
inc
adc
push
xchg
push
test
sub
cmps
mov
add
lods
dec
mov
cwde
sub
jae
mov
or
sub
or
add
or
cmp
jb
xor
push
add
pop
mov
rol
aas
jnp
pop
vmovdqu
mov
pusha
jg
and
cmp
aas
push
or
push
sti
or
pop
daa
cmp
scas
or
adc
sub
jbe
nop
cmps
and
xchg
addr16
add
jle
cmp
push
rol
mov
pop
iret
imul
sbb
adc
(bad)
xor
push
xlat
inc
add
sub
sbb
popa
and
dec
test
dec
test
arpl
mov
add
jg
cwde
mov
xor
mov
add
cmp
in
cs
lsl
outs
mov
mov
push
sub
call
inc
rol
addr16
mov
add
push
lahf
jb
and
mov
inc
add
or
inc
addr16
add
add
scas
adc
jo
dec
pop
(bad)
and
dec
(bad)
lahf
ficomp
xchg
(bad)
xchg
ret
rol
or
rcl
mul
pop
dec
add
inc
loopne
cmp
and
aas
ja
shr
aas
pop
or
dec
inc
nop
fdivr
(bad)
cmovle
mov
cmps
dec
inc
daa
dec
mov
inc
push
mov
pop
inc
xor
add
pop
and
inc
enter
shr
push
inc
dec
pushf
pop
jne
adc
shr
fcom
aad
pop
push
adc
adc
bnd
inc
adc
sar
rol
xor
push
ins
xchg
dec
lods
(bad)
not
pop
es
mov
sbb
addr16
(bad)
(bad)
aam
inc
inc
and
add
dec
add
dec
mov
inc
push
call
pop
or
je
pop
pusha
mov
or
and
xor
or
adc
rcl
movs
mov
xor
add
mov
outs
arpl
sbb
and
ja
sub
dec
aam
lods
mov
(bad)
movs
outs
pop
or
sar
and
inc
cmps
cmp
cmp
xor
arpl
add
inc
pop
dec
mov
push
and
dec
and
dec
mov
or
add
push
addr16
mov
jg
rep
sbb
inc
jae
sub
inc
add
adc
xor
mov
xchg
jae
loopne
js
xlat
movhps
xchg
or
or
push
or
push
cmp
mov
pop
or
jecxz
mov
fmul
mov
and
sub
mov
(bad)
push
arpl
and
cmp
and
add
mov
ss
or
adc
test
add
data16
adc
out
popa
ins
inc
jno
repz
dec
imul
xor
shl
push
push
sahf
and
sub
dec
add
and
sub
lahf
and
inc
add
sub
adc
pop
mov
das
sub
adc
xchg
mov
jl
add
sbb
sub
push
or
push
je
adc
fisub
stos
jnp
aas
movhps
shr
xor
jle
sub
mov
sti
call
jae
aaa
xor
scas
jmp
push
icebp
sub
add
sti
adc
mov
pop
and
and
outs
xor
add
lock
fwait
and
inc
xchg
imul
dec
mov
imul
rol
test
sbb
and
mov
sub
xor
sub
or
ins
jecxz
test
inc
ret
push
dec
mov
cmp
daa
dec
outs
or
add
stos
in
mov
xchg
and
add
test
and
add
sar
add
and
dec
sbb
add
add
add
mov
add
add
push
pop
add
fld
and
(bad)
(bad)
inc
add
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
popf
sahf
lahf
mov
movs
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
(bad)
(bad)
(bad)
(bad)
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
fdiv
sar
fstp
fnstsw
loope
jecxz
in
adc
jmp
sbb
(bad)
(bad)
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
add
mov
rcl
pusha
add
bound
rcl
pusha
aam
jo
aam
(bad)
xchg
mov
add
adc
(bad)
push
sbb
bound
call
pop
mov
or
sbb
sbb
clc
adc
push
ret
pop
inc
mov
and
xchg
mov
cli
or
sbb
movs
mov
aas
mov
sbb
data16
imul
sbb
mov
pop
stos
lods
push
sub
mov
push
xor
dec
test
iret
xor
and
or
stos
aaa
rol
adc
push
adc
les
cmp
or
inc
iret
jae
fmul
cs
xor
idiv
mov
daa
xor
push
sub
fs
add
mov
mov
cli
add
out
pop
inc
push
add
mov
pop
or
sbb
(bad)
movs
ins
add
cs
aaa
mov
xchg
das
sub
sbb
jbe
inc
stos
lods
jecxz
jo
and
jo
mov
cmp
push
push
call
adc
pop
and
out
pop
mov
addr16
outs
arpl
mov
scas
and
inc
ss
movs
test
jg
push
ss
sti
test
pusha
arpl
push
lahf
loopne
call
pushf
daa
add
inc
push
popf
push
xchg
dec
les
lods
and
jns
inc
adc
div
xchg
test
inc
sbb
imul
push
and
rcl
cs
int3
push
sbb
dec
inc
and
dec
ficom
or
sahf
xchg
adc
add
sbb
addr16
ins
popa
lea
outs
(bad)
mov
xchg
and
ins
adc
iret
add
push
sbb
loop
data16
or
mov
jne
scas
ficomp
jnp
popa
jns
test
ror
jae
adc
mov
jae
scas
imul
or
dec
dec
jne
ins
loopne
pop
fild
bound
mov
ins
lods
sbb
mov
cld
push
imul
pusha
sbb
pushf
push
imul
cmova
add
bound
sub
jo
imul
xchg
xchg
stos
scas
xor
sbb
cs
sub
sub
fcmovnbe
test
popa
leave
jns
(bad)
retf
or
dec
test
cdq
rol
add
test
lods
retf
sub
js
dec
je
push
je
imul
jb
retf
rcr
outs
data16
popa
outs
mov
nop
lea
das
nop
sub
xor
adc
dec
sub
repnz
sbb
dec
fld
sti
sbb
sbb
xor
or
ss
ror
repz
mov
rdtsc
jmp
inc
ss
pop
jmp
push
and
gs
aaa
xor
xor
aas
stos
dec
inc
in
cmp
mov
pop
dec
aaa
push
adc
or
and
adc
ins
outs
ss
push
ins
mov
xor
xchg
dec
adc
sub
or
mov
pop
scas
das
push
and
jmp
and
mov
cmp
or
sbb
push
and
push
cmp
lods
retf
pop
shr
inc
aaa
ins
in
imul
(bad)
pop
(bad)
xchg
bound
imul
pop
or
mov
add
je
inc
bound
das
gs
add
or
mov
inc
sbb
inc
loopne
sbb
jns
test
shl
loope
popa
ins
and
ret
jo
mov
div
cmp
add
les
stc
not
or
jl
mov
lahf
data16
add
imul
sub
inc
sub
pop
aaa
adc
xor
rol
pop
pop
das
aas
add
inc
mov
inc
xlat
jb
xchg
ins
xor
stos
js
dec
repz
jl
jg
les
xchg
cmp
pusha
dec
xchg
mov
add
xor
out
add
add
and
push
test
and
push
pop
daa
in
sub
adc
xchg
sbb
out
pop
mov
and
mov
or
loopne
add
mov
push
add
adc
add
mov
sbb
pop
xor
pop
sbb
xor
ins
bound
push
cwde
mov
mov
je
popa
adc
(bad)
bound
jae
xor
dec
inc
gs
push
icebp
push
push
sbb
loopne
sbb
fst
pop
or
or
pop
ins
jo
sub
mov
mov
push
(bad)
out
or
pusha
pop
dec
sbb
inc
pop
adc
add
add
loopne
outs
dec
mov
stos
jl
add
mul
add
test
add
shl
hlt
rol
aaa
adc
sahf
and
mov
adc
or
dec
add
mov
jle
fwait
jae
xchg
pop
push
(bad)
or
loopne
xchg
mov
add
mov
sub
cmp
mov
dec
pop
cmps
mov
mov
push
(bad)
stos
or
imul
sbb
dec
xchg
mov
adc
inc
inc
pop
ret
xor
mov
outs
jb
sbb
add
les
pop
aas
dec
pop
adc
add
mov
mov
test
fbstp
add
push
inc
or
xor
add
add
loop
jae
mov
dec
(bad)
scas
or
mov
ja
jle
push
mov
scas
inc
inc
dec
jae
mov
add
je
push
les
dec
inc
push
dec
inc
dec
xor
cmp
xor
adc
jg
outs
adc
pop
jle
aaa
sub
xor
mov
jnp
mov
lea
pop
lds
cmp
in
bound
stos
(bad)
mov
sub
inc
sub
mov
mov
xor
(bad)
ret
ror
mov
and
xor
push
ja
add
sub
xor
xor
out
sbb
pop
aad
adc
popa
pcmpgtd
sub
pop
dec
daa
or
imul
and
ud0
fst
ins
pop
pop
add
jge
or
sar
retf
jno
icebp
pusha
shl
lea
clc
ret
movs
add
xor
inc
cld
cmp
mov
cli
outs
dec
push
mov
add
iret
arpl
aaa
mov
js
xor
daa
cmp
popa
punpckhwd
js
and
cmp
sub
test
push
add
mov
push
push
pop
(bad)
scas
push
pop
inc
add
and
push
pop
pop
or
inc
mov
or
mov
or
add
push
js
or
pop
sub
fadd
sbb
sbb
mov
sub
rcl
inc
mov
sub
xor
xor
sbb
(bad)
dec
or
dec
add
call
add
mov
out
sub
movs
dec
out
inc
mov
push
add
pusha
pop
mov
adc
test
js
push
adc
or
inc
jmp
push
inc
pop
cmp
mov
sub
popa
pop
mov
add
push
(bad)
ds
add
pop
inc
add
arpl
movlps
cs
je
or
add
fs
ss
jno
jg
imul
pop
cmp
je
movs
add
cwde
add
jg
and
lock
jae
je
les
cs
retf
lea
and
mov
ins
cmps
cmp
adc
push
inc
inc
dec
dec
add
sub
loop
xor
sub
fwait
adc
retf
xlat
test
arpl
mov
imul
push
push
mov
or
adc
test
adc
pminsw
xor
enter
cs
add
add
dec
aaa
jns
and
aaa
lods
push
mov
daa
popa
add
sbb
inc
imul
xchg
or
pop
sbb
adc
adc
lar
mov
pop
xor
xor
outs
sar
fadd
jmp
add
mov
xor
add
adc
or
arpl
cs
or
ror
inc
mov
mov
adc
pusha
es
sbb
mov
xor
test
imul
mov
popa
rdtsc
ss
dec
dec
test
inc
jae
mov
mov
or
sbb
sbb
adc
loopne
add
rol
cmp
rol
pop
data16
rol
and
dec
xchg
and
and
dec
and
sub
dec
dec
jb
add
add
pop
dec
mov
test
inc
xchg
xchg
cmovg
ret
dec
bound
sub
sbb
fild
int
sahf
or
div
pop
arpl
fsubr
outs
mov
add
mov
je
jp
das
mov
stos
pop
push
lods
xchg
test
faddp
gs
sub
hlt
es
sub
dec
or
iret
call
jp
fst
ja
test
adc
(bad)
mov
lahf
jp
ror
inc
pop
add
xchg
inc
jnp
sbb
mov
push
dec
(bad)
adc
das
out
or
ins
stos
cmps
add
mov
pop
add
add
push
add
pushf
(bad)
pop
dec
sub
(bad)
cmp
mov
lea
xor
cmovs
repz
sbb
dec
adc
adc
jno
scas
iret
mov
sbb
rcl
das
mov
mov
outs
sub
xor
pop
add
inc
mov
cmp
and
pop
pop
inc
mov
pop
add
dec
pusha
inc
xor
aaa
adc
add
lock
out
inc
sahf
pusha
mov
loope
push
mov
pop
cmp
imul
bound
mov
outs
xor
add
xchg
adc
mov
jmp
mov
sbb
mov
ficom
pop
pop
or
ins
cmp
xor
(bad)
ffreep
pusha
xor
dec
mov
fisttp
add
add
imul
and
push
adc
pop
push
or
inc
or
add
pop
dec
pop
cmps
adc
dec
test
push
lock
outs
scas
dec
scas
ins
mov
add
jae
add
dec
inc
pop
jnp
jecxz
sbb
sub
outs
test
and
sub
fdivr
outs
(bad)
and
enter
into
popa
pop
xchg
inc
dec
and
aaa
and
les
sub
inc
jo
dec
push
scas
cwde
sub
and
aas
jo
and
add
or
retf
aam
push
xchg
hlt
xor
lods
and
lahf
jne
or
inc
cmp
arpl
jae
pusha
push
xor
or
jne
inc
clc
pusha
loopne
(bad)
push
jae
imul
push
rcl
mov
xlat
fisubr
mov
popa
scas
pop
ins
(bad)
daa
jne
mov
xor
lahf
and
inc
(bad)
pop
cmp
add
shl
popa
imul
jo
pop
outs
imul
pop
push
gs
pop
gs
outs
pop
mov
les
sub
scas
and
and
add
inc
adc
jbe
outs
jb
arpl
loopne
(bad)
sub
inc
jb
adc
dec
arpl
push
movs
movs
mov
xchg
daa
mov
fdivr
mov
mul
lds
inc
imul
mov
outs
je
inc
push
int3
or
cmp
fdivr
imul
out
sbb
and
push
jae
daa
mov
dec
mov
je
jge
lahf
inc
mov
ret
and
adc
sbb
jb
cmp
and
mov
push
lods
xor
push
mov
inc
fsubr
daa
data16
shr
mov
(bad)
pop
fiadd
nop
popa
fs
push
pop
sub
movhps
imul
sub
xor
jns
arpl
popa
mov
pop
push
test
mov
lods
sub
bound
popa
outs
ja
sbb
push
arpl
dec
pop
or
add
pop
cdq
xchg
pop
add
mov
or
test
test
pop
mov
gs
es
jo
lods
rcl
mov
stos
frstor
clts
call
jmp
push
or
pop
sbb
daa
and
inc
pop
aas
mov
cdq
or
repnz
push
fimul
or
je
inc
pshufw
or
xchg
cmps
ins
dec
fsubr
dec
scas
(bad)
das
cmp
sub
adc
cmp
sub
(bad)
(bad)
mov
into
mov
push
dec
enter
js
mov
jg
cwde
push
dec
out
push
retf
inc
dec
pop
push
mov
(bad)
mov
dec
cmovo
xor
and
push
(bad)
adc
scas
add
out
fnstsw
inc
push
jg
loopne
inc
(bad)
mov
jge
stc
repnz
inc
inc
cwde
(bad)
mov
cmp
(bad)
pop
jl
dec
push
punpckhbw
neg
cmp
push
inc
sub
dec
sbb
pop
or
lahf
mov
inc
push
imul
inc
mov
inc
mov
inc
push
dec
push
dec
pop
dec
inc
dec
push
pop
imul
push
pop
adc
stos
cld
rcl
cld
inc
push
push
in
sub
mov
retf
jbe
bswap
or
mov
pop
jg
cmp
mov
scas
mov
mov
inc
dec
out
mov
mov
vhaddpd
je
(bad)
mov
in
mov
loop
cmp
mov
scas
mov
xor
push
dec
sub
dec
setl
mov
sbb
inc
inc
adc
mov
fcmovnu
ror
pop
fistp
out
add
mov
or
adc
adc
add
or
sbb
pop
push
movs
ret
jo
push
or
push
cmps
adc
mov
sub
pop
and
add
das
ja
push
sub
es
and
jno
jb
jb
mov
mov
add
loope
sbb
add
dec
inc
inc
mov
cli
inc
push
xchg
fwait
pop
rcl
das
add
or
add
movs
mov
xlat
lahf
add
inc
loopne
div
xor
or
dec
stos
cmp
outs
pop
aas
cs
adc
add
gs
pop
or
pusha
mov
stos
xchg
mov
sub
xlat
xor
fcom
inc
add
mul
pop
sbb
scas
inc
cmp
loopne
cmp
add
and
pop
jnp
mov
xchg
add
add
add
loopne
daa
and
add
or
dec
ror
sar
cmc
daa
aaa
inc
dec
xchg
adc
xchg
jns
in
adc
and
ds
dec
inc
pop
bound
(bad)
xchg
in
ror
imul
pusha
inc
arpl
arpl
jge
fidiv
loopne
cmp
add
daa
and
push
jo
and
outs
xor
xchg
pusha
inc
jbe
pop
pop
mov
arpl
or
stos
mov
jbe
jge
gs
pushw
(bad)
arpl
cmp
or
mov
and
push
jno
and
pop
fs
inc
lahf
jo
xor
mov
cmc
fs
mov
or
add
aas
cmp
ss
pusha
ins
call
dec
cwde
out
add
push
das
rcr
mov
add
movs
movs
outs
or
xchg
inc
push
pop
outs
mov
inc
dec
push
jne
je
sbb
cmp
fild
gs
adc
jg
push
inc
adc
enter
fist
sub
jg
push
sbb
or
fs
jb
shl
pop
xor
pop
push
call
add
inc
aad
ss
jb
test
das
xchg
outs
xchg
xlat
bound
pop
popw
pop
dec
jl
mov
cmp
or
sub
cmp
push
das
push
sub
es
js
add
(bad)
lods
add
add
jecxz
lea
push
sub
jl
mov
adc
fdivr
or
pop
and
push
and
inc
and
jo
outs
addr16
inc
fcom
push
jb
mov
ja
imul
xor
xor
xor
pop
mov
int3
sbb
test
mov
dec
int
adc
xchg
out
mov
push
mov
jns
dec
int3
in
(bad)
les
lods
mov
outs
sub
pop
(bad)
dec
mov
fdivp
mov
js
push
jns
adc
test
push
push
out
pop
pop
dec
mov
pop
add
inc
push
es
test
or
push
cmp
repz
push
xor
xor
and
jnp
mov
push
and
sbb
mov
push
int3
daa
ss
repz
add
retf
cld
jns
out
clc
hlt
lock
call
(bad)
enter
out
sahf
cwde
test
mov
retf
(bad)
retf
add
out
cmp
repz
or
leave
jns
out
mov
mov
popf
out
inc
pop
enter
enter
divps
mov
cmp
adc
cmps
addr16
lds
pop
pop
outs
pop
(bad)
mov
loope
movs
je
xor
(bad)
iret
inc
sub
ret
aas
adc
(bad)
jle
outs
add
jbe
ret
and
das
sbb
and
push
movs
nop
adc
dec
and
inc
or
addr16
ins
adc
sbb
jo
or
or
sub
cmc
mov
daa
jns
push
xor
add
pop
pusha
cmp
clc
punpckhbw
outs
cmps
retf
mov
or
(bad)
sbb
jno
jb
jg
or
dec
ins
test
jae
outs
push
scas
xchg
push
dec
push
sbb
xchg
loopne
and
sub
xchg
rol
inc
sub
iret
and
inc
jae
adc
dec
and
mov
sub
sub
mov
ds
sub
mov
popa
add
out
sub
jmp
(bad)
daa
dec
push
std
ss
scas
and
pop
cmp
or
arpl
or
xor
(bad)
fld
xchg
push
dec
ins
add
jne
(bad)
push
xchg
(bad)
jg
pop
jo
push
arpl
movs
add
pop
pop
lods
or
push
sub
mov
fwait
pusha
xor
das
popa
xchg
xor
push
mov
inc
dec
aaa
jae
and
and
add
daa
jg
adc
(bad)
jno
dec
mov
cmp
push
add
sbb
xor
and
pop
xchg
test
jo
(bad)
pop
pop
mov
iret
mov
xor
sub
dec
add
das
jno
xor
mov
add
mov
xchg
adc
clc
mov
add
and
and
push
arpl
cld
retf
push
mov
add
push
dec
inc
dec
dec
adc
fucomip
dec
scas
xor
and
push
ret
mov
dec
ror
loop
lahf
mov
fwait
xchg
inc
or
bound
cmp
xlat
lahf
add
fbld
cmp
aas
jno
cmp
loop
ficom
out
mov
imul
inc
sbb
imul
mov
and
out
sub
add
dec
or
lahf
or
push
iret
mov
and
addr16
ror
repnz
jae
test
xchg
xor
rol
dec
pop
xchg
repz
gs
inc
and
data16
inc
jp
es
dec
dec
imul
(bad)
test
(bad)
inc
clc
inc
ret
jae
cmp
sub
or
pop
add
xor
(bad)
mov
mov
test
jmp
outs
shr
jns
ss
dec
mov
inc
fisub
jp
in
pusha
jmp
fcom
push
add
or
js
adc
mov
fdivr
sbb
popa
and
pop
mov
call
rol
xor
cmp
sub
inc
nop
mov
ret
and
jns
xor
pop
xchg
push
adc
cmp
jno
push
inc
xchg
jecxz
mov
dec
jno
fisttp
(bad)
cs
push
inc
add
cld
push
mov
fnstsw
adc
push
xchg
sbb
in
test
aam
mov
cmps
pop
popa
(bad)
and
xchg
shr
popa
jb
pop
arpl
outs
outs
gs
iret
arpl
test
mov
outs
push
pop
jns
sbb
je
lock
mov
fmulp
ss
fcmovb
push
mov
push
add
jb
xchg
sub
pop
lahf
mov
push
daa
rcr
sbb
cs
inc
aam
or
pop
jne
push
je
retf
and
imul
inc
adc
inc
popa
and
and
dec
dec
xchg
pop
daa
movs
push
sbb
inc
lods
adc
loope
pop
sub
or
scas
mov
stos
xchg
xchg
aad
and
fsubr
iret
or
dec
add
movs
pop
ret
and
test
mov
add
add
xchg
dec
cs
(bad)
sbb
cmp
adc
cdq
pop
mov
inc
jg
inc
nop
push
test
and
cdq
ss
jns
imul
xchg
fnsave
add
and
jo
xchg
shr
aas
or
fild
or
mov
add
adc
push
sbb
or
cmp
popa
mov
jns
gs
das
cmove
dec
push
jae
data16
cdq
ret
mov
or
push
lea
ret
mov
outs
xor
sub
int3
push
cli
cmp
adc
lea
push
push
inc
inc
cmp
push
xchg
pusha
dec
inc
imul
jo
push
mov
xlat
sub
js
add
imul
lea
pusha
sub
lods
arpl
push
nop
xor
std
jo
mov
inc
aas
imul
inc
or
inc
xchg
adc
or
inc
cmp
adc
adc
(bad)
and
or
xchg
add
or
es
cmp
xchg
xchg
add
dec
push
and
loope
push
mov
mov
test
movs
mov
dec
add
fs
daa
cmps
xor
or
outs
ret
mov
add
ret
(bad)
dec
pop
and
arpl
scas
inc
push
or
out
add
and
inc
pop
xchg
imul
pop
sbb
or
add
adc
imul
pusha
aam
scas
mov
scas
jo
cwde
ret
iret
add
(bad)
fwait
xor
add
push
ja
dec
add
push
xchg
leave
mov
lds
xor
aaa
imul
(bad)
(bad)
xchg
sar
rcl
lods
nop
movs
cs
jb
scas
sub
xor
scas
cmps
ins
inc
mov
and
mov
std
(bad)
inc
mov
inc
(bad)
jg
sti
jns
xor
into
pop
push
popf
jne
lods
inc
cld
call
sbb
mov
mov
cli
sbb
adc
dec
jno
hlt
dec
call
push
mov
xor
(bad)
mov
(bad)
xor
test
add
pop
pop
add
std
mov
push
mov
mov
jbe
lahf
mov
add
pop
mov
xor
inc
cmp
push
mov
jg
dec
addr16
out
push
lods
jno
(bad)
lahf
pop
sub
mov
gs
call
std
push
xchg
scas
ins
aaa
cs
mov
pop
(bad)
repnz
push
sahf
xchg
or
and
idiv
push
cmps
inc
pop
fwait
cmps
stc
sbb
rcl
mov
cmp
mov
dec
fild
adc
test
mov
nop
test
ficom
dec
cmc
xlat
push
dec
sub
cmp
jg
(bad)
push
mov
cli
sub
xchg
ss
add
add
add
loop
xor
das
mov
arpl
mov
push
pushf
push
cmp
or
fwait
mov
inc
push
mov
mov
add
scas
ja
rcr
hlt
cmps
add
sbb
or
fimul
scas
push
sub
ja
fld
fwait
inc
(bad)
daa
adc
(bad)
lahf
jmp
add
ja
or
lods
(bad)
and
jbe
jmp
add
fiadd
clc
mov
ins
in
popf
jmp
daa
xor
inc
(bad)
jmp
pusha
jl
dec
(bad)
daa
or
jbe
mov
call
jmp
pop
imul
push
call
fsubr
xor
push
daa
sti
or
sub
or
cmp
movs
and
iret
push
in
jns
sbb
xor
ins
pop
xchg
jbe
jbe
jmp
jnp
adc
fild
add
int3
pop
pop
add
push
lds
outs
pop
lds
ret
aaa
aaa
and
ss
shl
mov
cwde
push
lods
daa
bound
cmps
jg
ins
ins
sbb
daa
jbe
ret
and
dec
or
pop
les
in
sbb
enter
in
sub
xor
js
es
in
push
outs
ss
lea
lahf
jmp
push
daa
mov
in
in
in
inc
daa
jmp
in
clc
in
fimul
sbb
nop
or
fs
lahf
test
push
mov
sbb
mov
shl
fmul
cmp
xlat
out
fsubr
call
shl
cmps
and
daa
movs
ds
dec
ins
out
sub
out
cmp
inc
aas
js
jnp
pxor
lods
es
mul
push
out
sahf
out
xchg
push
mov
(bad)
jbe
les
cmp
dec
and
push
out
fsub
call
push
add
daa
lock
ja
or
xor
lock
push
dec
pop
pop
cmp
inc
aaa
lock
jnp
jl
mov
cwde
xchg
pop
push
push
jb
jl
lock
dec
lock
jns
ja
icebp
push
icebp
sbb
(bad)
repnz
and
push
or
aam
repz
fs
ss
jbe
rol
cmp
dec
xlat
mov
xchg
shl
jno
icebp
js
icebp
mov
popf
sbb
nop
add
in
outs
cmps
add
in
iret
add
cld
xlat
inc
or
inc
sbb
out
(bad)
lock
repnz
adc
push
sbb
ret
add
fnstsw
xor
mov
and
adc
les
nop
and
inc
(bad)
push
inc
das
out
jbe
mov
cmps
push
repz
aaa
ret
popf
repz
push
jo
les
(bad)
add
cmp
test
repz
adc
repz
lock
and
mov
out
or
out
sub
sbb
xor
and
jle
les
cmp
dec
and
hlt
js
fcomp
ds
movs
add
mov
cmps
pusha
mov
jbe
cmps
sbb
hlt
hlt
cmc
add
daa
xor
(bad)
cmp
and
cmc
xor
movs
loopne
push
inc
pusha
cmovle
or
jbe
ins
add
fmul
cmps
sub
mov
shr
xchg
pusha
ret
pop
xchg
cmc
hlt
outs
mov
fmul
aam
shl
mov
inc
test
imul
pop
add
or
xchg
loopne
xor
mov
mov
inc
das
clc
inc
mov
adc
aam
xlat
mov
bound
not
pusha
test
push
jg
js
cmp
add
sub
pop
mov
push
lock
neg
add
pop
ins
movs
iret
or
mov
cs
mov
in
daa
inc
pop
pop
cmp
add
jl
cdq
in
(bad)
clc
cmp
or
dec
push
push
aas
(bad)
fwait
addr16
(bad)
fsub
xor
nop
push
test
pop
add
mov
scas
cmp
outs
clc
fcom
popf
or
clc
call
in
add
fcom
data16
(bad)
stc
es
sar
stc
inc
push
pusha
lahf
dec
lahf
adc
jbe
jbe
je
add
mov
cmps
(bad)
outs
or
xchg
jns
rol
fdivr
inc
idiv
jl
shl
add
adc
ss
mov
and
(bad)
mov
push
daa
loopne
daa
sbb
daa
loopne
mov
xchg
stos
or
mov
mov
stos
or
sub
in
xchg
(bad)
jb
dec
(bad)
xchg
adc
dec
outs
cmp
and
fcom
cmp
mul
sti
test
cs
mov
pop
sub
rcl
cwde
xchg
scas
jge
fdivr
sbb
cld
xchg
cmp
inc
cld
sbb
in
mov
js
test
or
daa
mov
add
in
pop
les
rcl
sub
mov
std
add
std
adc
sbb
sub
pop
sub
std
add
and
ficomp
xchg
jo
mov
std
cwde
xchg
test
jb
dec
shl
add
jg
(bad)
adc
push
inc
and
or
ret
dec
mov
lahf
in
pop
xor
mov
(bad)
cmp
dec
adc
inc
pcmpgtb
ins
iret
inc
push
nop
iret
push
mov
(bad)
ins
cmps
test
shr
adc
cld
lahf
cmp
add
ss
sbb
sub
shrd
dec
mov
dec
add
ins
pop
push
mov
mov
cmps
jo
pushf
sbb
lods
push
(bad)
loopne
fld
xchg
add
lods
ss
cld
addr16
add
loop
mov
les
imul
xor
push
inc
add
add
imul
xlat
addr16
scas
fisubr
daa
lahf
push
inc
mov
test
add
daa
(bad)
scas
add
es
fadd
ins
in
pop
call
fadd
jo
push
cmps
and
add
push
cmp
pop
out
inc
push
add
jl
(bad)
mov
js
test
adc
xchg
or
push
es
push
in
inc
xchg
push
and
add
add
inc
lea
lahf
xlat
jne
mov
mov
lods
rcr
pop
scas
pop
or
mov
scas
jo
mov
cmp
push
add
lods
pop
dec
add
jo
mov
fmul
add
cmps
out
(bad)
fiadd
ss
pop
add
push
adc
or
pop
mov
ja
ja
outs
inc
xchg
push
push
pusha
xchg
sub
add
popf
add
or
movs
cwde
cmp
mov
mov
les
mov
sbb
movs
lahf
sub
idiv
test
call
add
push
sbb
sub
hlt
aad
(bad)
jle
cmps
pop
push
ins
cmps
mov
add
je
mov
cmps
lods
push
shl
pushf
cwde
es
ffree
xchg
add
add
pop
enter
jbe
lahf
sbb
mov
add
out
dec
scas
add
xlat
inc
xor
scas
nop
aas
jmp
mov
cld
mov
ja
out
or
adc
mov
jne
dec
cld
xor
mov
sbb
jo
test
(bad)
cmp
imul
mul
mov
aas
(bad)
jp
nop
or
mov
mov
pop
add
or
xchg
call
test
xchg
pop
inc
push
push
ja
nop
adc
test
out
xchg
xor
or
cmp
loopne
cmp
push
or
out
out
(bad)
and
fs
adc
or
inc
xchg
or
cmp
nop
outs
xor
or
iret
imul
(bad)
pop
ja
or
mov
jne
adc
or
sbb
inc
push
neg
or
outs
add
enter
add
or
nop
pusha
outs
sbb
outs
inc
lock
dec
or
(bad)
loop
inc
test
adc
xor
push
xchg
sub
mov
inc
scas
mov
xchg
in
popf
sbb
xchg
cmps
xchg
xchg
pushf
fild
inc
call
les
or
or
sub
or
add
add
or
ficom
adc
add
mov
daa
ins
sub
adc
mov
push
jbe
fdiv
call
lea
ja
ja
jge
cmp
or
adc
aad
or
push
cmps
call
nop
sub
or
and
enter
nop
push
pushf
xchg
mov
add
and
int3
ud2
fsub
nop
pop
jnp
in
lahf
and
int3
mov
inc
test
adc
(bad)
sub
cmp
cmp
sti
mov
sbb
or
lahf
jl
and
jnp
mov
fiadd
int3
push
fsub
pop
enter
mov
push
or
push
sub
inc
dec
and
jl
or
mov
lds
ins
push
js
es
xlat
xchg
nop
add
(bad)
out
movs
es
mov
pusha
(bad)
jg
movs
xchg
test
fimul
xchg
push
add
adc
and
call
mov
xchg
into
push
pop
push
js
mov
outs
sbb
cmp
(bad)
cmp
rcr
adc
xor
pushf
xchg
daa
in
lock
mov
mov
pop
adc
test
loop
mov
xor
cmove
push
jo
push
sbb
push
dec
dec
add
enter
cwde
add
setl
pop
dec
mov
push
loopne
mov
dec
push
mov
add
ins
jle
mov
in
adc
pop
adc
sub
adc
mov
fs
fadd
jg
add
and
adc
pusha
pop
int3
ja
mov
popa
mov
addr16
out
adc
pop
and
fisttp
cmp
mov
adc
js
or
movd
pusha
rol
push
xor
popf
and
lahf
idiv
lahf
rol
in
lahf
nop
out
add
add
dec
add
adc
scas
adc
cmps
and
or
and
cmp
loopne
lock
sahf
adc
mov
or
cmp
jnp
lds
lahf
dec
pop
adc
or
scas
lock
sets
pop
and
adc
movlps
loopne
(bad)
adc
push
dec
setl
sub
pusha
xor
adc
dec
pxor
inc
(bad)
in
add
adc
aam
add
and
add
push
mov
or
cmp
cmps
bswap
push
pop
and
mov
sbb
adc
push
dec
aas
out
test
rcl
cmps
loopne
daa
xor
pusha
dec
nop
out
adc
or
inc
jp
mov
mov
bound
adc
lahf
test
loopne
fimul
adc
add
pop
loop
pop
pop
add
jbe
ss
adc
inc
mov
push
mov
addr16
sbb
nop
ja
jnp
shl
mov
loopne
push
fdiv
fidiv
outs
and
add
inc
xor
cmp
ror
push
scas
mov
ins
adc
call
pop
outs
adc
ss
dec
adc
cmp
mov
mov
jbe
add
adc
mov
scas
mov
jns
mov
pop
sbb
xor
xchg
inc
scas
pop
mov
in
inc
xor
scas
ins
ror
add
or
pop
mov
(bad)
jnp
shl
xlat
scas
inc
es
push
mov
or
fadd
call
or
fmul
inc
lods
xchg
lahf
sbb
xchg
mov
test
sbb
mov
ja
ja
es
in
hlt
lahf
pop
enter
aam
fimul
lahf
sbb
inc
lahf
mov
sbb
es
je
sbb
inc
cmp
(bad)
daa
rcl
nop
rcl
mov
call
sbb
nop
adc
mov
xchg
and
or
adc
mov
sbb
js
shl
dec
sbb
jns
jnp
jo
test
mov
jb
in
jo
sub
mov
ss
adc
mov
pop
daa
mov
adc
push
push
fs
mov
sbb
es
lahf
sbb
fadd
mov
jo
ds
mov
shl
xchg
sub
jb
xor
call
dec
xchg
sub
aam
add
jmp
(bad)
ja
dec
nop
inc
out
sub
sbb
push
mov
sbb
or
mov
nop
cmp
mov
scas
sbb
scas
loopne
xchg
push
neg
mov
sbb
faddp
(bad)
ss
pop
push
mov
xchg
clc
lds
dec
add
sbb
popf
nop
or
clc
add
loop
hlt
daa
push
add
sbb
nop
or
add
sbb
hlt
fdivr
dec
scas
pop
push
je
test
sti
es
dec
call
sahf
push
rcl
add
call
pop
adc
inc
or
mov
adc
lock
nop
jbe
lahf
and
sahf
ja
push
pusha
jl
nop
cwde
inc
mov
jbe
mov
cwde
jno
jbe
out
test
inc
pop
mov
xor
aas
out
pop
fsubr
mov
inc
pop
pop
scas
jnp
fimul
push
je
and
pop
loopne
mov
sar
add
mov
cmp
and
and
pop
push
and
sar
scas
and
add
cmp
dec
fadd
dec
outs
pusha
pop
outs
in
jns
mov
enter
jl
enter
lods
add
push
add
and
xchg
and
lahf
lods
sub
add
mov
pop
daa
fmul
adc
je
pop
and
mov
ja
ja
dec
mov
pop
pop
push
and
mov
inc
ret
xchg
daa
shl
bound
and
and
and
mov
sar
sbb
scas
mov
push
xchg
je
or
mov
scas
mov
rcl
mov
jnp
push
jmp
(bad)
and
in
or
and
nop
rcr
lds
ret
xchg
sub
mov
out
(bad)
out
push
ja
dec
lods
mov
cs
imul
(bad)
fisubr
xchg
and
push
adc
out
inc
cs
ins
clc
test
inc
nop
imul
xchg
push
push
pusha
xchg
test
xor
daa
and
ret
mul
loopne
test
and
push
mov
cs
add
inc
lock
lock
cld
xchg
pop
in
add
ja
loopne
daa
dec
mov
and
jns
push
ins
test
mov
adc
push
aaa
jle
mov
inc
jmp
scas
addr16
mov
and
outs
ins
dec
cmp
aas
test
scas
out
fsubr
sbb
sub
ror
mov
fnstenv
cld
add
cmp
cmps
(bad)
movs
(bad)
out
ins
xchg
inc
daa
les
movs
xchg
dec
adc
les
push
loope
jbe
xchg
xor
inc
pop
adc
pop
xor
jl
inc
lahf
push
add
movs
jo
inc
faddp
dec
jo
daa
inc
lahf
mov
mov
les
lahf
nop
shl
push
mov
sub
push
sbb
cmp
rcr
popf
test
sub
sub
lds
add
lds
sbb
fidivr
test
lds
push
cwde
test
and
sub
push
loopne
and
lods
lea
mov
fist
jmp
jbe
inc
inc
sub
repnz
mov
cs
adc
jo
add
or
mov
jo
ret
sub
lods
es
inc
lock
sub
push
fdiv
lods
mov
pop
in
add
mov
test
sub
sub
das
sub
(bad)
pusha
mov
pop
xchg
push
mov
jg
sbb
fimul
movs
xchg
mov
rcr
and
add
test
in
adc
sbb
or
inc
inc
loopne
jmp
dec
sub
js
sbb
mov
out
inc
sub
mov
add
sub
test
or
jle
(bad)
and
cmp
push
jle
add
js
dec
lahf
(bad)
and
push
mov
movs
ja
out
movs
sahf
dec
(bad)
sub
push
push
lahf
(bad)
das
sub
lds
mov
lahf
enter
aas
sub
or
(bad)
cwde
mov
dec
daa
mov
cmp
or
dec
sub
sub
inc
rcl
out
lahf
fdivr
adc
sub
int
outs
inc
xchg
add
fidivr
int
(bad)
mov
lock
add
stos
push
jo
ltr
adc
dec
mov
push
adc
fld
pusha
cdq
jns
out
rcl
stos
xor
repz
out
sub
jns
iret
jmp
lods
dec
xchg
fild
lods
cs
inc
pusha
adc
sahf
out
sar
scas
mov
or
push
mov
cmp
out
jnp
and
loopne
fisttp
mov
call
jmp
or
jp
cmp
push
int
jns
pop
sub
(bad)
cmp
sub
fsub
mov
mov
lahf
mov
mov
jbe
loopne
sti
push
dec
mov
push
push
jns
jge
mov
sbb
mov
cdq
enter
push
iret
repz
xlat
sbb
push
mov
clc
xor
ds
push
push
fadd
cmps
ret
ds
out
push
pop
fbld
les
jns
cmps
stc
cmp
jns
sar
sbb
push
mov
(bad)
(bad)
cmp
xor
out
out
dec
enter
cmc
out
cmps
stc
test
ss
js
repz
lock
int
shr
repz
mov
clc
stos
iret
cs
dec
repz
rol
cmps
call
sti
cmp
ds
push
push
cmps
lock
out
ds
mov
push
rol
out
nop
fnstsw
repz
call
sub
or
push
out
mov
cmp
out
push
mov
sub
cwde
enter
clc
adc
fiadd
or
mov
stc
bswap
pop
jl
fsubr
push
sub
test
push
iret
pop
jl
(bad)
push
and
mov
ret
adc
and
fadd
into
sti
cmp
js
fmul
loope
loope
mov
repz
cwde
loopne
loop
push
mov
push
lahf
out
jmp
jecxz
push
js
fnstsw
loopne
in
out
push
add
(bad)
mov
mov
in
jmp
in
ja
sahf
mul
into
push
out
mov
push
sub
jg
ja
cmp
push
lock
inc
icebp
push
push
cmps
stc
push
lahf
shl
dec
push
and
ja
repz
lahf
shr
hlt
into
push
fstp
cmc
ja
jns
pop
sbb
test
not
push
iret
sbb
sti
ss
mov
mov
ds
sub
lock
iret
cmps
psubd
and
loope
cmp
jbe
js
fdiv
cld
popf
idiv
xchg
push
js
sub
push
std
shl
push
mov
imul
mov
push
push
cmp
stos
fld
dec
cmp
mov
lahf
ja
out
out
push
add
push
scas
inc
add
out
repz
mov
add
xchg
imul
sar
sub
xchg
repz
out
clc
sub
lods
fcomp
or
cmps
fmul
or
out
idiv
sbb
(bad)
push
jns
xor
jns
fsubr
or
or
add
repz
mov
push
push
push
repz
lahf
out
mov
(bad)
push
mov
jl
loopne
adc
push
mov
jl
out
adc
ds
ds
shl
adc
push
call
out
pusha
nop
ror
push
dec
ds
mov
call
shl
imul
pop
sbb
sbb
mov
sbb
ss
jo
push
jb
and
fistp
out
push
push
ds
push
and
push
lahf
ja
push
mov
inc
es
clc
outs
mov
daa
jno
xchg
push
sub
push
out
ds
sub
aaa
sub
shl
fiadd
sub
sub
fbstp
sub
jns
cwde
enter
mov
clc
cmp
sub
test
and
fisub
xor
(bad)
ja
ds
cmp
sub
outs
iret
sbb
clc
xor
push
push
leave
add
out
jge
cmp
pop
cmp
icebp
cmp
loop
sar
ss
pop
inc
push
add
sti
mov
push
call
enter
sti
and
js
inc
xchg
inc
aaa
js
dec
stc
retf
dec
(bad)
dec
mov
pop
jl
push
xchg
daa
dec
push
dec
push
aas
dec
clc
mov
rsqrtps
stc
xor
xor
aaa
inc
ror
push
push
xchg
out
ds
mov
and
push
mov
int
lahf
repnz
push
outs
push
xchg
push
jmp
out
jbe
sar
pop
sti
cmp
ror
mov
cmp
repz
mov
repz
ds
pop
jl
out
push
mov
or
push
jo
sbb
int
push
mov
pop
out
mov
mul
fsubp
rol
xchg
adc
push
jo
jl
dec
repz
int3
or
adc
repz
sbb
push
mov
jge
addr16
and
push
cwde
hlt
dec
repz
inc
imul
inc
push
cwde
enter
cmp
jns
enter
push
add
push
cmps
stc
cmp
jo
loopne
outs
addr16
out
sub
push
loope
jo
jno
pop
lahf
div
push
or
jae
ficom
out
push
jle
cli
imul
repz
push
push
mov
clc
xor
jl
out
inc
push
js
call
iret
shl
xor
cmp
push
mov
push
cmp
ds
into
clc
xor
inc
push
xchg
ret
jns
cmps
stc
add
xor
or
push
pusha
mov
cmp
repz
or
push
push
sahf
ja
sub
jmp
cmp
cmc
and
jmp
test
repz
mov
out
faddp
push
jo
mov
lock
cmp
scas
push
fwait
retf
cmp
jbe
mov
xchg
sub
cmp
push
cwde
enter
mov
mov
repz
lahf
out
stos
loopne
mov
test
call
js
imul
lea
jle
jl
out
push
mov
push
js
jecxz
(bad)
stc
cmp
sbb
push
test
loopne
nop
lock
cmps
arpl
cmps
stc
cmp
xchg
ret
sti
cmp
sahf
stos
jecxz
xchg
ss
js
sahf
mov
cmp
adc
push
push
jns
cmp
hlt
jns
sbb
iret
push
loopne
fcom
xchg
push
push
pusha
mov
rol
inc
imul
dec
push
push
fs
retf
sahf
out
ds
test
movs
enter
jl
call
repz
repz
out
push
push
out
ds
fiadd
shl
popf
jbe
iret
repz
call
out
es
jnp
call
iret
cmp
mov
out
push
sahf
push
push
cwde
shr
iret
mov
or
out
ds
mov
fcomp
push
push
int3
repz
cmps
jle
mov
fmul
cmps
cs
add
xchg
and
clc
pusha
mov
push
cmps
adc
dec
fsub
jb
loop
push
push
cdq
add
xchg
pop
je
fistp
enter
add
xor
das
mov
adc
es
pop
mov
cmp
pop
cmp
daa
sub
sub
cmp
int
loopne
or
outs
cmp
and
enter
das
dec
leave
ins
xchg
loopne
inc
adc
pop
or
outs
mov
aas
sar
jno
add
clc
addr16
mov
aad
test
sbb
fsubr
mov
mov
test
stos
cmps
pusha
cmps
pop
xlat
cmp
out
cwde
pop
pop
daa
cmps
sbb
cs
iret
cmp
mov
pushf
sbb
lahf
cmp
adc
and
iret
ins
outs
cmp
js
mov
adc
xchg
pop
call
mov
rcr
inc
pop
sbb
push
xor
lock
add
add
outs
pop
pop
in
adc
fwait
push
pop
ds
xlat
nop
daa
loopne
add
dec
xchg
mov
ds
shl
jb
jo
pop
loopne
or
sbb
or
aaa
pushf
sbb
aas
call
shr
fstp
xchg
add
inc
mov
rol
jg
push
aas
inc
add
pop
xchg
or
aas
cld
xchg
jo
jnp
fcmovu
test
addr16
or
xchg
daa
pusha
xchg
cmps
mov
mov
test
dec
inc
jo
out
mov
dec
scas
or
call
dec
dec
mov
scas
gs
inc
inc
pop
mov
inc
push
daa
daa
(bad)
scas
cwde
test
jb
pop
mov
scas
mov
jb
mov
adc
in
inc
dec
pop
daa
push
mov
mov
mov
shr
jb
inc
or
inc
sbb
push
loopne
daa
popf
lock
push
setl
call
inc
dec
inc
fimul
add
cmp
mov
add
mov
mov
pop
mov
dec
inc
enter
clc
ror
lahf
dec
inc
inc
or
dec
mov
inc
push
inc
ins
mov
daa
inc
lahf
cmp
dec
(bad)
push
cmps
or
enter
das
cmove
mov
xlat
sub
add
fisubr
inc
add
inc
cs
dec
dec
dec
cmp
mov
push
mov
pushf
loopne
lahf
mov
outs
scas
cwde
pop
clc
lahf
mov
mov
pop
inc
aam
mov
iret
inc
sbb
inc
and
pop
and
jo
stos
dec
dec
mov
addr16
xor
fmul
cmp
inc
fmul
aas
inc
and
inc
push
mov
add
mov
aaa
sub
fld
mov
out
inc
pop
xchg
pop
mov
mov
xor
jb
mov
push
movs
rol
push
cld
scas
add
fnstsw
aaa
and
or
cmp
mov
cmp
dec
das
sub
pop
xchg
leave
leave
inc
jb
nop
cwde
daa
mov
in
mov
mov
inc
cmp
dec
mov
movs
and
or
into
cmps
add
inc
out
adc
push
add
push
and
shl
dec
jo
ror
nop
scas
aam
outs
pop
and
push
enter
mov
xchg
out
movs
fsubr
in
adc
movs
jecxz
dec
sub
enter
movs
aas
push
adc
sbb
add
sub
and
dec
fs
mov
pop
cmp
mov
dec
addr16
test
dec
lock
mov
pop
mov
cwde
push
mov
pop
sar
shr
dec
and
dec
jnp
aaa
ret
(bad)
or
dec
(bad)
or
xchg
daa
pop
inc
adc
test
pop
push
clc
inc
adc
bnd
add
or
add
lahf
cmps
and
adc
xchg
cmps
xchg
push
pop
add
jnp
pusha
xchg
push
xlat
(bad)
in
in
sbb
pop
xcrypt-ctr
cmps
pop
(bad)
or
mov
mov
into
pop
(bad)
or
cmc
pop
cmps
adc
nop
fisub
pop
and
cmovae
bound
(bad)
adc
pop
dec
fild
inc
cmps
rcl
loop
popf
loopne
or
test
mov
lock
stos
sub
and
mov
imul
jno
mov
pop
push
pop
test
add
dec
mov
mov
dec
or
jbe
shr
mov
iret
ret
add
mov
add
in
out
push
addr16
inc
inc
cli
test
xor
test
dec
js
mov
dec
mov
popf
test
pop
test
and
adc
dec
dec
dec
and
dec
rcr
sbb
dec
loopne
lock
leave
leave
leave
fldcw
or
leave
leave
leave
leave
sbb
sub
fist
inc
dec
(bad)
add
xchg
fsubr
shl
stos
shr
in
aaa
nop
pushf
dec
ror
push
xor
stos
add
xchg
xor
and
sti
stos
xor
(bad)
inc
or
dec
or
les
cmp
daa
add
add
sbb
sub
fld
daa
mov
or
or
push
mov
leave
test
pop
(bad)
aas
rol
inc
ret
pop
pop
jg
push
inc
into
mov
div
lahf
lods
add
adc
and
mov
sub
and
mov
mov
aaa
add
pusha
adc
(bad)
cmp
test
hlt
pop
push
cmp
push
add
jbe
add
lods
ror
xor
lods
loopne
lods
add
jb
call
clc
rol
rsqrtps
lods
popf
loop
daa
out
lods
sub
lods
xor
mov
lods
pop
mov
jb
xchg
mov
nop
cwde
jb
jb
mov
dec
jo
jg
xlat
pop
psrad
es
dec
dec
repnz
scas
add
scas
xor
mov
xor
scas
not
push
jmp
(bad)
scas
mov
out
pop
scas
dec
fisubr
push
add
xchg
dec
cs
sub
pop
sub
test
adc
and
and
fadd
push
inc
je
add
push
add
ror
aaa
push
adc
pop
sub
and
addr16
jo
xlat
enter
add
mov
call
mov
mov
and
mov
mov
adc
jns
push
push
add
push
in
adc
dec
aaa
lock
mov
addr16
iret
jle
add
mov
dec
pop
push
loop
xor
jo
fidiv
out
ja
or
dec
ret
mov
push
mov
push
lods
imul
push
ror
xchg
mov
pop
mov
dec
outs
cmps
addr16
cmovno
arpl
mov
mov
in
push
int3
add
movs
out
push
mov
push
mov
daa
adc
cwde
mov
sbb
ins
das
mov
pop
in
add
xchg
xchg
add
inc
or
xchg
inc
aad
pop
xchg
(bad)
pop
inc
push
ret
mov
adc
(bad)
mov
pop
loopne
sub
int3
(bad)
mov
and
cmp
sbb
pop
ins
ss
dec
mov
mov
add
mov
neg
mov
add
jo
mov
sbb
je
mov
cvtdq2ps
fsubr
fisubr
out
pop
fdiv
push
dec
adc
adc
pop
mov
jns
mov
mov
sbb
in
in
mov
das
clc
add
mov
out
test
je
xchg
pop
lds
(bad)
lahf
shl
loopne
push
jb
scas
(bad)
in
sbb
sub
cmp
mov
add
sbb
pop
jo
arpl
test
pop
pushf
push
inc
dec
mov
pop
in
lods
out
xchg
pop
pusha
mov
mov
mov
mov
int
scas
push
dec
mov
pop
adc
pusha
scas
pop
add
add
cmp
pop
daa
sub
mov
and
mov
pop
leave
int3
xor
mov
and
pusha
pop
and
sbb
pop
push
cdq
xor
mov
es
xchg
mov
pop
pusha
add
inc
out
add
cmps
jno
sbb
push
rol
or
shl
outs
rsm
xchg
mov
xor
cwde
outs
pop
cmp
inc
pop
push
shr
mov
aas
js
mov
jmp
pop
test
fmul
inc
mov
and
mov
add
add
xchg
push
out
pop
stc
ud1
dec
or
jg
jecxz
mov
pop
push
daa
fist
(bad)
mov
add
mov
mov
xchg
shrd
mov
ucomiss
daa
jbe
mov
popa
pop
sti
test
cmp
cmc
jbe
pop
ja
cmps
clc
mov
pop
pusha
sysexit
pushf
scas
adc
and
jl
sbb
fbld
popa
(bad)
jo
mov
test
mov
jo
adc
add
fmul
xor
dec
lahf
and
mov
ds
andps
pop
in
xchg
daa
fs
or
in
ins
jl
xchg
setb
popf
adc
jb
ss
mov
btc
cmp
rcr
aas
out
repnz
fwait
xor
sbb
mov
fmul
xchg
and
pop
xor
cmp
pop
(bad)
mov
pop
pop
(bad)
cmp
sbb
pop
jb
jge
mov
add
sbb
sub
xor
adc
leave
inc
jb
inc
bound
mov
and
adc
ins
jbe
inc
nop
lahf
mov
mov
out
mov
add
outs
bswap
add
fadd
loopne
fisttp
cmps
ror
pop
add
js
mov
lods
adc
push
or
mov
adc
arpl
jg
push
daa
push
mov
mov
mov
das
imul
rcr
mov
call
js
mov
adc
inc
daa
mov
arpl
scas
mov
adc
test
iret
or
in
rol
iret
loopne
mov
pusha
push
dec
mov
push
adc
pop
rcl
adc
outs
(bad)
jmp
inc
pop
cmps
xchg
mov
addr16
loope
sbb
gs
(bad)
test
iret
lods
inc
pusha
cmp
xchg
test
gs
lock
mov
push
shl
xchg
loopne
push
or
data16
inc
ins
(bad)
pcmpgtd
dec
and
test
cmp
enter
cmovp
pop
add
add
jge
mov
or
lahf
pop
push
push
add
out
add
rcl
fdiv
sar
add
fbld
lahf
jb
xor
ror
push
inc
mov
shl
sar
daa
daa
mov
rcr
test
adc
cmp
xchg
pop
pop
add
mov
in
add
jns
push
mov
push
pop
add
prefetchnta
add
xchg
mov
lahf
sar
cmovo
sbb
call
jns
push
inc
push
or
inc
add
inc
cmps
inc
jmp
or
or
daa
rol
cwde
mov
je
daa
add
repz
dec
pop
imul
adc
outs
imul
inc
and
push
shl
mov
jb
loopne
pop
jle
in
call
in
mov
imul
push
daa
hlt
ja
cmp
mov
inc
test
pop
xor
addr16
cmp
aaa
push
push
daa
ins
mov
adc
ret
out
jnp
mov
daa
xchg
popf
in
jo
jecxz
push
imul
and
ret
mov
ret
call
in
stos
lahf
or
imul
adc
out
ret
popf
popf
dec
cwde
inc
iret
ret
and
ret
cs
mov
mov
inc
push
cmovl
xchg
mov
or
push
or
bound
ins
or
stos
adc
js
cmp
out
push
xor
test
ins
add
ins
dec
pop
pop
adc
daa
adc
mov
mov
pop
shl
push
bound
enter
ret
dec
in
or
add
sub
cmp
add
fsub
push
add
movs
iret
aad
or
xor
xchg
mov
cmp
sbb
and
sub
dec
jb
cmp
mov
mov
push
ja
push
(bad)
es
pop
pushf
les
pusha
push
dec
add
(bad)
ins
sub
xchg
shr
rol
xor
mov
test
in
sbb
outs
cmp
add
and
out
loopne
in
in
lock
inc
jge
dec
dec
or
clc
daa
dec
enter
ffreep
and
sbb
imul
push
ror
inc
sub
outs
and
xchg
xor
daa
inc
out
cmp
mov
js
mov
sbb
xlat
dec
xor
vxorps
dec
adc
test
jo
(bad)
daa
pop
pusha
dec
xchg
(bad)
shufps
daa
daa
mov
cmova
jbe
ins
daa
daa
jle
lahf
bound
inc
xor
or
(bad)
or
daa
pusha
shl
outs
xchg
add
xor
sbb
jo
(bad)
push
add
sub
aaa
push
and
mov
(bad)
jno
push
(bad)
or
daa
jnp
jg
and
xchg
jo
mov
fnstenv
pushf
mov
(bad)
add
xor
jg
outs
jno
daa
call
outs
enter
cmp
enter
and
rol
enter
pusha
cmp
adc
daa
cmp
daa
movs
jb
or
inc
enter
xchg
pop
jo
mov
push
ret
or
jae
loope
xchg
cmp
daa
dec
lahf
jb
adc
add
or
adc
addr16
sbb
add
jae
aaa
je
daa
mov
push
outs
mov
and
pop
jmp
push
in
sbb
or
shl
mov
nop
scas
outs
adc
pop
xchg
mov
mov
dec
dec
je
je
daa
xchg
fist
pop
jo
leave
lock
dec
in
pop
cwde
mov
out
mov
add
dec
push
or
inc
daa
mov
add
jne
xchg
xchg
pop
sub
retf
pop
push
cmp
inc
mov
sahf
dec
add
daa
and
retf
cmp
cmp
lods
test
pop
enter
ror
inc
mov
cmp
and
xchg
add
jbe
daa
and
inc
jo
aas
retf
xor
adc
dec
jo
cmp
retf
inc
pop
dec
aas
retf
and
enter
pop
retf
pusha
retf
dec
sahf
nop
xchg
push
sub
and
iret
or
push
es
mov
add
retf
mov
mov
es
jmp
inc
xchg
xchg
dec
ja
or
daa
mov
outs
daa
in
int3
and
sub
xor
cmp
or
inc
pop
dec
aas
int3
push
add
int3
pop
aas
int3
pusha
or
push
or
(bad)
push
add
js
cmps
call
js
js
daa
push
pop
lock
int3
call
enter
adc
cmp
aas
fwait
movs
add
js
and
jnp
iret
jns
daa
jns
aas
bound
mov
aam
cmp
aas
int
int
pushf
sbb
popf
xchg
cmp
enter
dec
or
rol
jb
int
int
and
daa
daa
int
int
jb
js
aad
jp
jp
inc
dec
adc
daa
xor
into
and
sub
into
(bad)
add
dec
dec
push
or
xchg
into
jo
mov
add
popf
dec
iret
or
iret
into
sbb
cmps
jp
ins
cmp
mov
jnp
mov
pop
iret
dec
paddsw
popa
add
jno
pop
in
xor
(bad)
(bad)
stos
dec
outs
pop
fsub
shl
call
hlt
mov
rcl
das
and
sbb
add
aad
mov
push
inc
js
add
xor
cmp
jo
out
mov
shl
pop
loopne
jge
and
pushf
dec
rol
cmp
pop
xor
pop
and
nop
nop
mov
aas
jle
out
out
or
jbe
mov
rcr
das
ror
adc
rcr
daa
or
xor
shl
jle
push
sbb
in
jb
loopne
rcl
pop
jb
pushf
jg
inc
dec
push
pop
jb
jo
pop
sar
dec
add
xchg
test
and
adc
xchg
mov
pop
adc
mov
mul
cmp
cmps
sub
movs
push
loope
sub
pop
sar
and
fs
push
rcl
mov
rcl
fistp
fisttp
pop
inc
cmp
or
mul
jb
enter
(bad)
or
adc
adc
jb
daa
xor
jb
pop
imul
xchg
mov
stos
mov
and
xchg
and
and
and
and
cli
es
pop
out
sub
or
sbb
pop
sbb
xchg
add
xor
sbb
push
sub
movs
mov
dec
js
or
push
xor
or
test
inc
aad
aad
enter
aad
iret
aad
aad
fld
dec
jno
imul
aas
fwait
pushf
fisttp
xchg
or
cmp
(bad)
push
cs
movsx
leave
nop
sbb
das
(bad)
aad
(bad)
fnstcw
or
aad
pop
(bad)
adc
or
enter
sub
xor
in
in
sub
sbb
cmp
cmova
repnz
sbb
inc
mov
jle
mov
xchg
and
and
fisttp
retf
psubusb
jecxz
out
sub
xchg
das
inc
stc
sub
das
jecxz
jbe
sbb
and
sub
fld
xchg
xchg
mov
mov
pop
call
pop
pop
iret
xlat
scas
xlat
push
(bad)
jo
js
xlat
or
cmp
mov
xchg
pop
call
mov
or
adc
or
and
jecxz
xor
loop
mov
movs
ins
add
test
syscall
daa
xor
(bad)
push
pop
pusha
(bad)
call
and
jg
fadd
invd
daa
daa
daa
daa
adc
xor
daa
daa
daa
cmp
push
pop
enter
push
enter
xchg
das
pushf
pop
pop
sbb
jb
mov
mov
sbb
inc
mov
sbb
sbb
stos
(bad)
das
add
pop
push
pop
mov
(bad)
xchg
test
or
ins
(bad)
test
pop
fnstcw
cmovo
test
jb
dec
add
pop
aas
inc
sahf
int3
fldenv
punpckhbw
jle
push
test
mov
mov
rcl
loope
xchg
not
jmp
shr
shr
pushf
cmps
fiadd
fimul
xchg
ficom
push
adc
daa
cmp
inc
xchg
cmp
movs
and
ja
fld
daa
adc
call
fisttp
ficom
fisub
mov
push
nop
pop
cwde
out
fisub
pop
test
fidiv
jb
jb
ror
add
ss
cmp
adc
pop
fist
(bad)
pop
jb
ins
div
adc
cld
pop
fild
push
movlps
inc
mov
sbb
sbb
mov
fstp
andps
jb
ss
mov
stos
and
mov
inc
mov
shl
and
and
sbb
dec
fdiv
mov
mov
das
fcom
mov
push
cmp
pop
and
push
(bad)
fmul
lock
push
xchg
inc
clc
aas
mov
fnsave
(bad)
aaa
adc
sub
jb
enter
push
jle
in
div
mov
jae
das
pop
sete
cmp
in
or
bnd
mov
ror
(bad)
adc
inc
mov
adc
adc
aas
loope
leave
in
pop
fsubr
pop
fiadd
adc
rcpps
pop
sbb
mov
jo
dec
xchg
fisttp
(bad)
fiadd
cmp
in
ficomp
mov
enter
movzx
ror
mov
fisttp
fbld
mov
rol
fisttp
add
mov
lahf
pop
(bad)
push
dec
ins
das
pop
mov
or
mov
xchg
hlt
add
aaa
mov
cs
shr
mov
add
hlt
loopne
scas
fcomip
outs
fisttp
loopne
movzx
jae
xlat
loopne
add
inc
das
dec
mov
pop
das
lea
xchg
inc
sahf
fcomp
loopne
jae
sbb
pop
lods
outs
cmps
ret
cmp
cmps
loope
ror
or
loope
pop
test
mov
jne
add
bound
inc
mov
pushf
pop
adc
pop
mov
add
loope
add
push
push
adc
jbe
mov
jbe
lahf
mov
push
lahf
or
sbb
mov
ret
xchg
loopne
or
adc
lahf
or
sub
movs
add
fucomi
js
aaa
mov
daa
(bad)
and
cwde
jo
adc
loop
jmp
jbe
cmp
out
xchg
setge
pop
xchg
fnclex
shl
adc
pop
jecxz
jecxz
fldln2
inc
cmp
addr16
pushf
mov
jecxz
mov
fisttp
dec
test
add
nop
sub
add
dec
nop
jo
dec
daa
in
dec
loopne
bound
or
mov
in
and
nop
loopne
inc
and
test
mov
in
push
add
in
in
daa
inc
dec
aas
in
mov
outs
cmps
jecxz
fist
daa
xor
sub
xorps
mov
xadd
push
outs
in
xchg
loope
mov
jmp
inc
push
int3
inc
sti
pop
push
out
inc
xchg
sbb
outs
addr16
stc
push
in
ja
cwde
push
xchg
and
test
add
in
rol
or
or
dec
mov
in
ror
jecxz
out
xlat
push
xchg
mov
mov
mov
fcomp
adc
aam
pushf
outs
dec
sbb
dec
out
out
(bad)
out
inc
sub
setno
daa
cmp
pusha
outs
out
out
cmp
(bad)
call
daa
xchg
ins
daa
xor
pushf
pushf
pop
jo
out
out
in
sahf
out
call
mov
in
daa
mov
out
mov
and
sub
xor
add
out
push
push
(bad)
js
jo
mov
mov
loopne
ja
jo
cmp
adc
add
add
call
add
dec
xchg
fadd
pushf
mov
out
or
cmp
sbb
pop
mov
int3
cwde
call
outs
addr16
xlat
call
mov
xchg
iret
mov
xchg
loopne
xchg
shl
in
jmp
push
pushf
loopne
inc
pop
addr16
pop
in
xchg
sub
fbstp
pop
xchg
mov
pop
rcr
daa
pop
mov
test
jmp
xchg
or
jmp
outs
mov
pop
pop
punpcklbw
add
cmp
inc
mov
jmp
mov
add
daa
jmp
jmp
dec
mov
dec
enter
xchg
and
xchg
in
push
fdivr
daa
pusha
cmp
mov
add
mov
lahf
pop
cwde
js
fs
xchg
pop
adc
rcl
in
sbb
mov
in
or
adc
cwde
loopne
mov
out
xchg
xchg
test
shr
adc
cmps
cdq
jl
in
loopne
cdq
int3
xlat
mov
das
in
mov
mov
scas
call
and
leave
or
dec
cdq
hlt
pop
rcl
loopne
xchg
push
call
scas
popa
xor
call
iret
in
test
mov
test
rcr
aaa
in
out
psubsb
call
fwait
push
iret
out
push
in
xchg
and
and
sub
xor
cmovb
jb
cmp
add
popf
fwait
lods
mov
cwde
adc
in
mov
daa
pop
in
fwait
clc
xchg
loopne
lock
and
clc
out
push
out
add
pop
out
lahf
pushf
fild
in
inc
out
pusha
push
push
cmp
je
nop
add
rcr
xchg
iret
imul
imul
std
das
fild
pop
lock
out
push
mov
dec
test
lock
lock
fcmove
and
lock
inc
adc
ja
mov
jne
popf
or
pop
icebp
inc
icebp
ffreep
or
icebp
or
icebp
adc
icebp
sbb
xchg
cmp
icebp
sub
pop
adc
or
jmp
push
pop
adc
dec
rcr
and
cwde
pushf
pushf
pop
jo
adc
outs
pop
icebp
icebp
cwde
pop
xchg
pop
add
sets
dec
or
test
ror
outs
pop
fsubr
ror
fcomp
loopne
push
add
xchg
call
adc
lahf
and
lahf
xor
inc
ficom
cmp
(bad)
out
adc
or
out
lahf
shl
push
repnz
mov
iret
repnz
repnz
jbe
add
pop
pop
add
cmp
adc
or
jo
cmp
jb
test
inc
xor
pop
repnz
je
pop
mov
call
pop
repz
xchg
call
sbb
xchg
push
repz
mov
in
enter
pop
xor
das
lahf
(bad)
mov
jmp
cmps
mov
rcr
cmp
call
sub
hlt
pop
hlt
or
movups
pushf
mov
hlt
and
sub
wrmsr
or
cmp
mov
addr16
dec
adc
hlt
mov
pusha
mov
push
ja
hlt
js
sub
push
add
dec
pop
mov
pop
mov
daa
dec
mul
push
inc
clc
rcr
mov
arpl
aas
hlt
lock
cmc
jo
enter
cmp
inc
cmc
dec
fisttp
fsub
cmc
jo
jb
xchg
xchg
js
mov
inc
mov
pop
or
in
push
aaa
mov
cmps
dec
inc
jmp
add
inc
cmps
imul
idiv
pop
aaa
mul
imul
neg
cmp
pop
das
pop
and
pop
and
pop
pop
shl
push
movs
dec
fbld
inc
nop
and
adc
setg
push
scas
movs
push
test
xlat
pop
mul
push
xor
adc
pop
imul
or
xlat
imul
mov
enter
js
sbb
jg
mov
or
fbld
or
push
clc
cmp
cmps
and
cmps
jo
jo
mov
clc
mov
fcmovb
fisubr
push
cwde
cmps
(bad)
enter
sbb
add
ror
es
(bad)
cmps
les
cmps
or
mov
lahf
cmps
xor
push
and
cmps
push
pop
cmp
add
xor
adc
ret
inc
sti
inc
test
lahf
ret
xchg
cli
pusha
jbe
lea
push
pop
sbb
jb
add
cwde
das
mov
jnp
or
test
mov
mov
dec
or
cmps
xchg
fild
adc
add
lds
test
sbb
push
test
daa
fadd
sti
mov
jmp
in
sti
mov
imul
fst
add
push
or
fadd
sbb
add
add
dec
push
cmp
pusha
pop
test
mov
stos
and
jle
add
push
adc
stos
push
dec
stos
pushf
daa
or
outs
fmul
out
cld
rcr
inc
lahf
cld
clc
aas
lock
std
and
sub
cs
dec
stos
sbb
mov
add
push
lahf
mov
dec
or
(bad)
std
mov
enter
fcomp
shr
std
fcomp
outs
(bad)
mov
stos
les
adc
daa
mov
imul
adc
dec
mov
xor
lods
loopne
dec
xor
(bad)
aaa
lods
pusha
dec
push
popf
and
push
lahf
lods
mov
jbe
xlat
lods
pushf
daa
lods
jg
mov
sbb
cmps
(bad)
xlat
test
fcom
loopne
das
outs
jae
(bad)
lock
jmp
mov
xor
xchg
dec
(bad)
call
dec
lods
das
test
jo
js
aas
mov
test
lea
add
pop
hlt
mov
scas
or
pop
mov
cmps
adc
cwde
out
pop
call
mov
or
fdivr
loopne
jg
pop
call
or
lock
(bad)
clc
ins
push
movs
push
out
adc
fnstsw
and
adc
aaa
sbb
cmp
ins
pop
push
cmps
adc
jo
xchg
pop
fidivr
add
add
push
or
stos
pop
into
dec
outs
and
add
sub
into
pop
or
adc
add
iret
add
inc
cmovnp
push
popf
pop
mov
scas
les
cs
xchg
cwde
pop
mov
pushf
push
push
mov
mov
and
bswap
or
or
or
adc
cmp
loopne
push
xor
adc
cmp
add
add
mov
pop
inc
add
push
pop
push
mov
in
enter
enter
sub
sub
sbb
mov
sbb
or
adc
sbb
cmp
mov
pop
pusha
add
jmp
push
cmps
call
mov
daa
loopne
loopne
mov
daa
movs
addr16
inc
or
cwde
jg
mov
jnp
add
mov
mov
pop
and
mov
add
pop
mov
and
test
mov
addr16
test
les
mov
(bad)
adc
or
add
addr16
cmps
cmp
add
pop
pusha
push
fbstp
loopne
mov
cmps
mov
mov
aaa
sub
outs
daa
and
inc
mov
add
fidiv
push
sbb
fistp
enter
cmps
push
dec
dec
add
fmul
jg
xor
les
add
adc
call
cmp
add
push
syscall
pop
popf
test
adc
add
mov
push
fmul
out
ror
jbe
mov
xchg
mov
push
movs
xor
mov
xor
add
mov
cmp
cs
out
mul
loope
mov
dec
out
popf
adc
cs
push
jo
push
outs
in
pop
test
setns
int3
ficomp
movs
pop
shrd
dec
retf
or
or
in
lock
push
adc
ins
in
adc
adc
daa
push
xchg
and
rdmsr
pop
cmp
inc
sbb
mov
push
dec
pop
sbb
popw
jno
(bad)
fst
int3
ficomp
xchg
setb
and
popa
in
fnstcw
and
or
scas
call
pop
test
cmps
jecxz
cs
mov
fistp
push
jecxz
cmps
sahf
pusha
iret
jno
xchg
xchg
push
mov
int3
pop
in
adc
adc
mov
scas
mov
daa
data16
test
lods
add
rol
scas
inc
test
ret
pop
out
mov
rcr
daa
enter
loop
cwde
fisttp
add
in
lods
add
adc
sbb
jb
ss
pop
xor
cmp
cmovno
mov
or
bound
dec
push
cmp
mov
push
or
sbb
cmp
adc
jne
jo
or
mov
retf
nop
cmps
add
jg
scas
mov
(bad)
sar
loop
and
inc
daa
mov
mov
or
bound
test
out
fsubr
(bad)
mov
push
xlat
mov
rcr
xorps
fimul
aas
or
or
setl
mov
pusha
add
push
iret
or
outs
mov
mov
aas
js
jb
enter
or
or
mov
cwde
add
adc
sbb
xchg
cmp
or
or
pop
paddsw
or
fidivr
add
mov
mov
xchg
(bad)
call
or
or
pushf
mov
and
or
ret
outs
mov
dec
xor
xor
xor
in
sbb
cmp
or
dec
dec
loop
push
fild
cmp
adc
push
loopne
mov
js
sbb
loopne
outs
xchg
(bad)
or
(bad)
push
cmps
pop
scas
jg
fimul
mov
iret
or
fimul
pop
test
inc
in
lock
jg
and
adc
or
(bad)
movups
inc
ror
inc
out
add
push
add
ins
mov
add
dec
push
push
setae
pop
sbb
add
push
jae
jnp
xchg
xchg
or
loop
je
pushf
or
xchg
mov
lahf
and
dec
jo
fimul
or
add
(bad)
out
inc
test
and
mov
mov
push
pop
or
aas
pop
or
fsubr
or
(bad)
rol
mov
jmp
movsx
je
aam
xchg
mov
mov
aam
adc
mov
mov
push
dec
(bad)
dec
daa
or
or
or
dec
or
jmp
sahf
dec
or
ret
cmps
or
clc
(bad)
dec
push
invd
imul
adc
adc
sbb
mov
fs
push
push
push
adc
mov
xor
in
(bad)
cwde
or
and
repnz
dec
shl
adc
dec
pop
mov
fsub
pop
lahf
dec
in
fcmovne
rcr
(bad)
add
add
sbb
jb
add
add
or
outs
and
or
das
cmp
push
inc
mov
push
push
cmp
mov
test
mov
sbb
fs
sub
or
pusha
out
(bad)
pfcmpgt
(bad)
(bad)
pcmpeqd
mov
enter
mov
out
sysret
dec
dec
or
dec
cmps
inc
adc
push
call
adc
(bad)
scas
xor
pop
push
add
mov
pop
pusha
not
push
in
adc
mov
inc
shr
rcr
add
(bad)
xchg
ror
hlt
scas
js
ror
xor
(bad)
adc
dec
or
outs
addr16
adc
pop
add
xchg
adc
jo
adc
dec
dec
adc
mov
xor
(bad)
mov
enter
mov
fmul
pavgw
out
or
cmp
in
or
add
prefetchwt1
lahf
jb
jb
fmul
outs
adc
adc
jb
mov
and
ret
push
daa
in
add
adc
sbb
jb
jo
js
sbb
and
adc
or
ret
mov
adc
stos
add
mov
bound
ret
enter
fcomp
les
daa
fdivr
add
pop
adc
adc
pushf
loop
cmp
push
add
es
adc
adc
xchg
adc
cmp
inc
das
or
inc
ret
rol
scas
les
test
ficomp
xor
jo
adc
js
mov
and
add
fmul
leave
add
lahf
mov
inc
scas
adc
aam
daa
inc
adc
add
sbb
inc
lds
xor
add
jg
or
cs
ins
daa
cmp
adc
scas
adc
jg
sub
mov
pop
lds
syscall
push
push
add
lahf
xor
dec
xlat
(bad)
(bad)
sbb
in
mov
add
adc
nop
in
pop
daa
xlat
adc
addr16
pushf
loope
out
mov
(bad)
add
daa
jns
aaa
(bad)
fs
lods
daa
je
or
sbb
xchg
adc
adc
adc
bswap
cli
mov
ja
adc
add
(bad)
cld
iret
(bad)
or
or
adc
rcl
inc
ficomp
fsub
push
jo
in
adc
jo
jb
or
add
(bad)
jp
xchg
lods
(bad)
hlt
pushf
pop
adc
daa
mov
into
sahf
pushf
rcr
add
loopne
call
and
push
sti
pop
push
add
push
jno
ins
or
pop
sti
pmulhuw
(bad)
or
and
sub
popf
fmul
int
sbb
sub
cmove
mov
mov
xor
sbb
inc
mov
test
add
add
add
push
xchg
pop
call
cmp
stos
not
mov
push
mov
cmp
or
ret
mov
test
adc
retf
fild
(bad)
push
pop
push
adc
pop
adc
nop
sbb
ins
or
iret
sbb
les
jb
dec
pop
push
and
loope
sbb
and
lods
pop
mov
cmps
sbb
dec
daa
lock
or
pop
nop
daa
mov
pop
xlat
pop
cwde
push
test
enter
mov
pop
shr
jb
enter
fsubr
pslld
in
sbb
or
sbb
cmp
jns
and
adc
cmp
or
inc
adc
sub
in
push
sbb
pop
sbb
(bad)
dec
jge
inc
add
sub
aam
and
jo
cmp
in
add
cwde
add
mov
inc
mov
movs
out
or
out
dec
add
pop
imul
lahf
or
aam
aaa
sbb
daa
push
dec
jno
inc
(bad)
out
ja
cld
fsubr
ret
sbb
pop
or
sahf
bound
xchg
sbb
xor
xor
loop
int3
jl
sbb
int3
les
mov
sbb
sbb
push
ins
inc
cmp
mov
xor
pop
adc
test
scas
xor
adc
int
daa
int
lock
call
sbb
pop
sbb
out
mov
aaa
ins
and
rol
ficomp
lahf
sbb
in
in
xchg
pop
call
sbb
prefetcht0
ins
fsubr
pop
cs
nop
cmove
jb
pusha
adc
jbe
dec
js
loop
leave
daa
int
out
jno
jo
into
and
in
iret
mov
daa
sbb
dec
pushf
mov
(bad)
iret
popa
ss
sbb
pop
paddusb
out
sbb
adc
scas
into
inc
fsub
pop
mov
daa
into
test
test
nop
xsavec
mov
pop
mov
xchg
ja
inc
add
pusha
(bad)
iret
sbb
cmp
and
out
iret
dec
scas
sbb
sbb
adc
jg
iret
jo
adc
loopne
aas
jbe
adc
mov
rol
sbb
daa
fwait
mov
sbb
das
fwait
add
xchg
push
or
fadd
mov
sbb
setg
fiadd
sar
nop
push
movs
mov
xchg
mov
ror
mov
xchg
lock
push
and
aam
cmp
sub
push
pop
leave
inc
cmp
nop
rol
cwde
mov
daa
push
pusha
mov
mov
cmps
arpl
adc
nop
shr
push
loopne
inc
mov
outs
vmwrite
sub
je
cmp
addr16
add
push
pop
pop
loope
inc
mov
pusha
add
out
bound
dec
xchg
je
lahf
sar
shr
ret
frstor
mov
pop
nop
(bad)
in
and
mov
pop
mov
fs
mov
add
(bad)
shr
fs
pop
adc
loopne
push
mov
lock
clc
add
and
and
and
and
adc
mov
fcomp
jb
mov
das
add
dec
and
and
or
jb
push
and
and
push
outs
mov
imul
jns
and
or
or
das
jno
add
(bad)
xchg
jl
les
mov
and
jg
lock
fisubr
scas
and
or
dec
push
sub
ins
sbb
mov
sub
xor
pushf
pop
call
pop
sbb
dec
add
and
and
add
rol
add
jno
das
aad
push
aad
daa
sub
call
xchg
and
ror
and
mov
test
out
jecxz
dec
out
pop
psubw
lods
enter
add
ja
in
lock
sub
(bad)
mov
pushf
test
daa
push
(bad)
and
and
or
aas
and
or
aas
and
push
push
jb
js
and
xchg
iret
push
daa
(bad)
in
shr
pop
es
xlat
xor
and
cmp
lock
clc
and
aas
jnp
xor
pop
and
dec
and
add
cmp
push
sub
or
or
enter
or
push
or
sbb
jb
or
jns
enter
adc
sbb
jb
cdq
adc
adc
xchg
and
mov
sbb
jb
enter
sbb
sbb
mov
add
inc
in
xchg
and
daa
jbe
iret
xlat
cmps
pop
mov
mov
pop
mov
hlt
add
sbb
mov
inc
(bad)
in
push
jp
test
dec
daa
cwde
idiv
lahf
xchg
mov
fs
dec
jno
iret
and
jg
push
fsubr
jnp
mov
mov
cdq
movs
or
cmps
jg
mov
pushf
loop
in
xlat
and
pop
in
jg
cmc
adc
inc
mov
adc
cmp
in
and
and
and
and
push
cmp
in
enter
addr16
jg
jge
inc
mov
fwait
and
cmps
and
(bad)
nop
jb
shl
(bad)
call
and
(bad)
sub
or
add
jb
enter
das
xor
mov
push
pop
popa
xor
ins
xor
ja
xor
cmp
ins
in
cwde
cmp
cmp
push
pop
jno
les
mov
fld
fiadd
in
lock
sti
inc
enter
daa
push
inc
adc
inc
jno
push
in
dec
push
mov
cmp
inc
(bad)
push
push
divps
pop
je
and
mov
mov
xchg
push
mov
push
stos
aas
mov
xadd
int3
pop
cwde
int3
fisub
xlat
pop
loop
paddsw
sahf
adc
add
push
pop
sbb
enter
popa
das
bound
arpl
in
ss
fs
jg
pcmpgtd
sbb
jb
push
xchg
imul
test
mov
mov
(bad)
aam
fbstp
repnz
jmp
or
pushf
mov
and
sub
getsec
jp
fld
inc
jnp
aas
pop
packsswb
inc
mov
jg
add
aas
call
cmp
sbb
(bad)
mov
ror
fmul
(bad)
jmp
and
sub
stos
dec
fld
xchg
mov
pop
cmps
add
pop
mov
xchg
fiadd
push
ss
sub
imul
cmps
sub
pusha
inc
faddp
pop
jo
das
add
mov
aaa
mov
sbb
in
daa
mov
test
fsubr
inc
iret
sub
call
adc
or
mov
fisttp
nop
daa
pop
mov
fadd
enter
sub
mov
inc
imul
add
push
dec
add
or
jb
hlt
xchg
(bad)
lds
nop
iret
push
add
mov
js
mul
pop
out
xor
pop
jno
xlat
push
xlat
fbstp
mov
lock
push
pop
xchg
push
sub
ror
dec
fild
(bad)
fist
icebp
or
or
add
or
or
or
sub
aaa
or
mov
xor
sub
adc
dec
cmp
sbb
push
inc
std
and
add
out
loope
xlat
loope
mov
adc
(bad)
ja
adc
push
loope
lahf
adc
scas
push
pop
in
mov
sub
adc
lods
pop
lahf
not
ret
cmps
sub
fmul
sub
mov
ror
ror
fdiv
loopne
hlt
scas
psraw
push
out
push
add
pop
ret
pop
push
push
adc
sbb
pop
push
add
add
inc
sub
xor
push
xchg
call
mov
cs
iret
or
outs
inc
cs
add
in
lods
add
sets
mov
fdivr
icebp
add
jecxz
add
or
test
bound
push
or
aas
mov
cmp
pop
test
sbb
xor
adc
ins
outs
inc
pop
das
adc
inc
out
call
mov
add
das
xor
cmp
xchg
daa
daa
push
pop
or
repnz
or
mov
mov
cpuid
aas
mov
das
adc
inc
xor
cmp
popf
cmp
mov
bsr
pop
xor
scas
push
jbe
push
(bad)
adc
outs
in
in
daa
movs
push
and
outs
mov
mov
or
adc
sbb
and
and
sub
push
cmp
or
dec
xor
dec
pop
jecxz
lock
out
outs
sbb
daa
cwde
sbb
aas
lds
sbb
les
es
cmps
in
add
xchg
or
(bad)
outs
pop
xlat
sub
xchg
mov
mov
test
mov
dec
aam
or
or
fs
out
or
or
sbb
jb
and
sub
pop
mov
cmp
cmovo
cmp
add
push
mov
(bad)
sbb
aaa
xchg
jb
fbld
stos
push
sbb
mul
xor
inc
into
push
xor
xlat
xor
les
push
retf
das
or
(bad)
mov
call
pushf
clc
aaa
xor
xor
add
jb
push
das
xor
daa
fisubr
out
inc
cmps
add
das
xor
dec
dec
outs
out
push
jecxz
cmps
call
dec
dec
dec
test
mov
dec
enter
fadd
pavgb
(bad)
xor
mov
inc
mov
sbb
and
sub
fistp
xor
inc
xor
cwde
mov
ins
nop
dec
adc
xchg
xchg
or
xor
xor
pop
push
xor
mov
icebp
sub
jmp
daa
movs
sbb
mov
xor
pushf
pop
fmul
xor
xchg
mov
inc
daa
jg
inc
or
xor
pminsw
xor
ret
imul
inc
mov
pop
pusha
rol
fldln2
in
cmp
das
pop
pmulhuw
leave
leave
retf
push
add
ror
jns
xor
or
daa
and
xor
cmp
ss
inc
cmps
xor
pop
xor
pusha
sbb
and
push
or
adc
xor
daa
daa
xor
push
mov
in
adc
outs
fist
(bad)
pop
jb
retf
fyl2x
adc
stc
adc
pop
mov
sbb
sbb
mov
pop
or
lahf
mov
dec
inc
and
das
push
mov
test
cmp
jo
lahf
loopne
shl
adc
ss
ror
adc
sub
fadd
(bad)
push
add
mov
cmp
sbb
aas
pop
in
add
call
pop
push
and
inc
pushf
push
xor
fucomi
aaa
inc
push
cmovle
js
aaa
adc
mov
cdq
lahf
aaa
movs
cmp
enter
mov
pop
ins
div
jnp
adc
out
icebp
adc
cld
pop
mov
pop
lahf
cmp
push
nop
sub
fldenv
cmps
lahf
cmp
cmp
sbb
dec
sbb
in
ins
in
sbb
pop
push
pcmpeqw
xchg
mov
fld
xchg
and
mov
mov
das
mov
cmpps
daa
psubusb
iret
outs
and
das
out
sub
stc
pop
cmp
inc
into
fisub
nop
cs
das
xor
xor
inc
pop
push
xor
pop
xor
fwait
mov
ss
pop
mov
pcmpgtd
xor
cmp
test
pop
mov
movsx
clc
shl
lahf
pusha
emms
aaa
sbb
test
in
add
push
xchg
mov
cmps
out
or
pop
cs
out
cld
mov
cmp
cmp
cmp
sbb
and
sbb
and
sub
addr16
les
cmp
or
cmp
inc
fcmovne
xchg
daa
dec
or
or
xchg
mov
(bad)
adc
das
(bad)
enter
setge
das
mov
setno
outs
mov
pop
leave
paddq
fistp
cmp
in
jmp
or
and
and
sub
enter
and
aaa
and
inc
and
and
ja
pop
arpl
cmp
enter
sub
mov
sub
jb
mov
aaa
lock
icebp
add
aam
je
lock
push
iret
or
jb
icebp
dec
cmp
cmp
sbb
(bad)
ins
addr16
iret
ins
mov
scas
icebp
mov
icebp
shl
push
xor
rol
cmp
aaa
pop
xor
mov
repnz
jo
inc
or
pusha
mov
push
repnz
dec
imul
imul
shl
(bad)
fisttp
loopne
out
sbb
jnp
pop
or
wbinvd
pop
or
pusha
push
cmp
add
cmps
dec
in
pop
repz
hlt
mov
inc
dec
ds
cmp
add
iret
cmp
pop
jbe
ins
idiv
je
pop
mov
or
mov
int3
fiadd
pop
fmul
movntq
or
and
and
pop
adc
sub
pop
inc
push
cmovnp
pop
xor
in
jne
jo
push
add
test
hlt
cmps
mov
xor
push
fadd
pop
mov
jecxz
out
add
add
pop
add
adc
xlat
push
inc
dec
and
movs
inc
cmp
pusha
in
xchg
and
push
shl
in
mov
pop
aas
scas
or
mov
inc
mov
or
or
in
xchg
paddb
inc
pop
adc
adc
sbb
sbb
adc
xchg
and
push
sbb
mov
jb
sbb
sbb
enter
xchg
push
mov
cmp
mov
ret
and
and
and
jecxz
out
es
daa
inc
leave
leave
leave
leave
add
and
leave
leave
and
and
leave
leave
leave
leave
push
sbb
leave
leave
sbb
sbb
leave
leave
leave
leave
push
adc
leave
leave
adc
adc
leave
leave
leave
leave
push
or
leave
leave
or
or
leave
leave
leave
leave
push
add
leave
leave
add
dec
or
loop
cmp
push
and
scas
call
repz
cmps
idiv
sub
(bad)
test
cmp
daa
mov
inc
mov
xchg
sahf
add
test
dec
fdiv
pop
out
aas
stc
pop
test
push
jecxz
add
clc
call
push
daa
inc
mov
push
addr16
pop
xchg
jnp
ret
inc
outs
(bad)
clc
je
leave
leave
leave
inc
loopne
enter
leave
rcr
pop
fcomp
and
out
clc
movs
aaa
push
popf
rol
mov
fcomp
xchg
addr16
and
call
dec
inc
das
inc
sbb
add
stc
ins
inc
mov
jbe
xchg
cwde
das
inc
test
popf
or
mov
pushf
mov
ficomp
dec
lds
pop
stc
loopne
mov
adc
add
stc
pushf
aaa
cmps
mov
and
mov
cmps
inc
inc
pop
cmp
jo
inc
cli
inc
cmove
adc
jb
je
cmps
fisubr
test
or
daa
enter
aaa
shr
dec
sti
mov
dec
daa
adc
rcr
inc
loopne
pusha
aam
mov
call
rol
inc
pop
sti
js
in
or
mov
inc
movs
in
(bad)
lods
scas
mov
sub
inc
jo
mov
push
xchg
pop
cld
add
in
mov
inc
sar
in
mov
inc
daa
sahf
mov
add
in
idiv
aam
pushf
fild
addr16
cmp
inc
inc
add
dec
add
push
pop
xchg
addr16
test
iret
inc
outs
or
jp
test
mov
push
cmc
std
xor
std
jl
inc
dec
jo
push
fld
inc
into
pop
das
loope
psubsw
test
std
mov
cld
daa
adc
or
inc
dec
inc
in
xchg
mov
inc
inc
dec
inc
and
in
inc
inc
jb
lds
xchg
jge
mov
(bad)
jmp
(bad)
pop
cmp
in
dec
sbb
inc
(bad)
cwde
addr16
leave
inc
pusha
push
shl
shr
scas
call
daa
and
in
pop
push
adc
mov
or
scas
push
daa
(bad)
clc
daa
jmp
or
push
addr16
call
(bad)
jg
sbb
push
ror
(bad)
sbb
and
or
pop
xor
inc
push
dec
add
push
mov
sbb
out
cs
pop
movs
mov
js
frstor
les
adc
dec
dec
mov
or
dec
jp
push
add
sub
sar
pop
pushf
push
daa
jl
sti
jne
pop
jb
mov
daa
aam
leave
test
add
mov
add
sub
std
xor
daa
test
(bad)
repnz
frstor
fsubr
popf
in
add
and
xor
xchg
stos
in
add
and
daa
mov
xchg
pop
(bad)
aam
in
dec
jb
cmp
adc
stos
in
frstor
cmp
sti
daa
(bad)
xchg
je
daa
xchg
scas
or
and
jb
cmp
scas
push
add
add
nop
jbe
push
jl
daa
pushf
scas
in
adc
das
scas
add
daa
dec
add
mov
push
xor
shr
push
inc
daa
push
scas
adc
mov
daa
lods
in
(bad)
dec
lock
in
adc
pop
and
pop
and
sbb
jl
pop
push
out
mov
push
inc
and
adc
dec
test
pop
sub
pop
movs
dec
mov
dec
pop
mov
les
mov
daa
or
mov
or
dec
cmps
mov
outs
pushf
mov
iret
dec
fwait
mov
push
lahf
test
pusha
mov
fnstsw
adc
clc
cmovge
add
add
dec
add
adc
add
xchg
inc
push
outs
pop
sbb
and
in
fisttp
mov
add
dec
dec
fist
pop
jo
lds
outs
nop
aas
test
ja
pop
xlat
aas
inc
and
nop
(bad)
and
adc
popw
fsub
mov
cs
inc
call
cmps
dec
lock
pushf
pushf
pushf
pushf
adc
xor
sahf
pushf
cmp
mov
and
adc
jl
xchg
enter
setb
xchg
fld
aas
mov
mov
enter
pop
cmc
cmovg
push
daa
lock
pop
adc
add
jo
mov
sbb
jns
inc
mov
pusha
into
add
dec
jnp
enter
dec
or
push
cdq
pop
sbb
cmp
or
and
cmp
inc
push
test
in
enter
push
and
sub
lea
jb
add
add
add
mov
or
imul
mov
jle
mov
add
or
daa
push
or
mov
into
lea
mov
imul
push
add
cs
push
push
pop
in
in
enter
imul
cmps
in
xchg
xchg
mov
ror
shl
stos
xchg
daa
fiadd
pop
push
and
fldenv
cmps
push
mov
inc
cmp
mov
push
loope
and
mov
iret
movs
and
or
iret
or
out
pop
pop
test
pop
(bad)
ins
ja
outs
adc
lods
cmp
push
or
jo
add
cmps
push
enter
xor
addr16
cmp
xchg
aaa
push
out
psubw
mov
sbb
and
popf
or
push
pop
inc
(bad)
sqrtps
popf
or
pop
adc
pusha
fcom
icebp
or
fdiv
rol
call
xchg
push
push
(bad)
push
stos
pushf
loope
or
pop
push
add
in
pop
(bad)
push
adc
pop
addr16
push
leave
xor
cmps
push
pop
pop
or
xor
dec
test
or
cmp
add
ja
inc
das
or
cmp
punpckhwd
pushf
cmp
jno
push
jns
jno
mov
daa
sbb
sub
pop
mov
or
call
mov
fist
loopne
leave
in
push
ror
fsub
call
mov
clc
push
add
lods
daa
in
or
add
sbb
adc
pop
daa
and
in
or
push
dec
push
push
ror
(bad)
fist
punpcklbw
in
add
jo
vmread
in
xor
or
mov
scas
mov
enter
mov
sar
rcr
fsub
in
and
call
in
jae
ja
data16
push
xchg
adc
test
jo
push
and
pop
adc
push
sub
push
mov
into
ds
movs
cmp
inc
push
cmovs
dec
add
inc
push
or
je
add
clc
adc
add
pop
shl
sub
add
pop
pushf
out
push
cwde
pop
enter
(bad)
scas
adc
jbe
loopne
leave
test
daa
mov
cmp
push
add
outs
(bad)
push
or
(bad)
or
sbb
inc
lock
in
leave
aaa
cmps
aam
loop
sub
adc
adc
mov
push
cmps
in
rcl
push
icebp
and
push
imul
jno
jns
jno
dec
add
xchg
aaa
jp
pop
loopne
xchg
push
adc
adc
in
sbb
pop
retf
or
push
pop
push
loopne
enter
psubsb
lock
clc
jo
imul
or
dec
pop
pop
adc
sbb
push
or
ja
mov
pop
dec
pop
mov
neg
pop
aaa
adc
test
push
cmp
shl
daa
daa
enter
in
cmp
pop
and
sub
sub
mov
cmp
mov
pop
iret
mov
and
(bad)
mov
fisub
daa
pop
test
ror
es
cmps
pop
and
jb
pop
jb
push
pusha
pop
jb
pop
jl
test
pop
jb
rcl
dec
dec
jb
sbb
pop
and
scas
dec
pop
sub
inc
dec
in
and
jg
sub
fild
push
je
(bad)
rcr
pop
ja
mov
push
jmp
ror
mov
in
sbb
pop
xor
xchg
clc
fstp
cmp
pop
das
pop
sbb
dec
add
mov
cmps
sbb
push
xchg
pcmpeqd
ror
fucomip
shufps
in
stc
pop
pop
xor
add
sub
cmp
pop
fcomp
mov
daa
in
adc
call
daa
cwde
xor
pusha
fistp
add
fistp
pop
iret
pop
fcom
in
je
sbb
jmp
lahf
and
js
mov
cmp
pop
inc
pop
pop
cwde
mov
push
add
pop
addr16
ins
pushf
pushf
pushf
dec
pop
or
pushf
cmps
mov
in
or
fld
call
mov
pop
sbb
push
xchg
add
enter
popa
mul
adc
xor
mov
pusha
or
sbb
out
inc
fwait
or
push
lea
mov
fld
mov
pusha
js
xchg
xchg
xchg
xchg
or
xchg
mov
xchg
xchg
xchg
ror
fcom
call
leave
leave
popa
or
sub
inc
dec
iret
popa
inc
stos
xlat
outs
sbb
mov
add
push
add
or
dec
sbb
arpl
popa
cmps
popa
xlat
in
mov
popa
enter
jmp
popa
icebp
popa
stc
pop
bound
pop
js
pop
cmp
int3
push
pop
or
push
cmp
push
and
pushf
and
bound
(bad)
rcl
(bad)
xlat
bound
popf
ret
das
bound
push
adc
adc
pop
pcmpgtd
mov
nop
pop
fwait
or
cmps
pop
mov
xchg
and
mov
das
(bad)
outs
and
call
packsswb
adc
adc
pop
cvtpi2ps
xor
pop
das
or
add
in
and
pop
pop
pop
mov
inc
jmp
not
or
add
mov
cmps
cmp
arpl
arpl
pop
dec
pusha
xor
lock
mov
adc
sbb
push
add
sub
test
sbb
clc
jb
push
mov
and
adc
sbb
inc
loopne
pop
add
dec
add
xor
ss
push
or
pop
(bad)
add
addr16
cmps
fs
(bad)
or
or
cmp
int3
lahf
sbb
adc
xchg
pusha
mov
pop
dec
cmps
(bad)
adc
enter
in
pop
aas
fistp
out
fs
pop
popf
push
pop
jo
jg
gs
xchg
adc
ss
ins
mul
push
cmovl
mov
popf
push
fisttp
mov
enter
add
jbe
fsubr
outs
and
cmp
daa
data16
pop
dec
adc
nop
popw
out
pop
fbld
dec
mov
popaw
outs
ja
pop
xor
cmp
cwde
(bad)
and
push
sbb
jbe
jbe
mov
daa
enter
and
pop
call
or
pop
addr16
shr
punpckhbw
movs
out
push
test
cmp
scas
mov
enter
jb
and
call
push
in
scas
or
and
inc
daa
mov
cs
push
arpl
xor
aas
and
dec
lods
test
xlat
mov
daa
les
inc
mov
imul
pop
jbe
cmp
(bad)
out
ja
sub
add
jo
rol
dec
and
pop
shl
and
xchg
adc
push
xchg
mov
in
xor
enter
push
addps
mov
(bad)
mov
call
mov
(bad)
dec
jb
or
enter
mov
push
xchg
loopne
xchg
test
mov
lahf
daa
or
shr
lds
lahf
daa
xor
pop
inc
mov
imul
ja
aaa
ret
lea
lahf
daa
test
daa
daa
pop
add
lock
mov
adc
lods
inc
shl
mov
das
sub
(bad)
jecxz
mov
sub
add
inc
addr16
mov
xchg
pop
cwde
fsubr
daa
das
sub
sub
enter
dec
or
mov
add
or
add
fimul
imul
fs
inc
enter
nop
arpl
push
adc
or
or
in
mov
add
xchg
add
sbb
jb
add
scas
popf
push
xlat
ins
and
push
sub
dec
push
jmp
ror
in
xchg
xlat
jbe
dec
lds
sub
push
in
clc
loopne
mov
ins
neg
idiv
sub
int3
std
xchg
or
outs
daa
jns
(bad)
sub
mov
or
ins
das
ins
cmp
pop
mov
ins
inc
add
adc
cmps
mov
or
lahf
enter
sub
sub
mov
ins
aas
pop
inc
add
enter
push
leave
imul
adc
mov
cmp
daa
sub
sub
test
adc
dec
jb
xor
inc
adc
xor
outs
outs
ret
pop
mov
cvtps2pi
mov
aas
sub
pop
and
cs
push
mov
sbb
clc
loope
int3
pop
cs
sbb
cmp
pop
xor
inc
jo
daa
mov
push
cld
or
neg
adc
loopne
sbb
das
xor
and
popf
push
das
jo
jo
inc
adc
iret
and
jle
add
cmp
pop
push
or
les
fsub
mov
or
or
ja
bound
out
call
cdq
xor
les
xchg
xor
das
pop
jno
adc
cmp
lahf
loopne
outs
(bad)
dec
push
cmp
cmp
aas
xor
adc
aas
xchg
dec
dec
xor
xor
daa
in
add
leave
or
xor
dec
adc
xor
or
push
mov
jg
cmps
loope
jno
psrad
xor
icebp
inc
lods
adc
jle
cmp
xor
das
xor
cwde
and
pop
sub
pushf
aam
(bad)
jb
inc
fbstp
js
pushf
xchg
mov
cmps
test
xor
or
scas
popf
xor
scas
call
cmps
popf
pop
lock
addr16
mov
ret
mov
xor
xor
es
jae
addr16
daa
jae
jae
add
pop
mov
dec
xor
cmps
leave
inc
jb
mov
fsub
pop
jb
cmp
stos
js
push
lahf
or
sahf
psubusb
xor
xor
daa
sub
sar
iret
sar
push
inc
xor
add
ss
aaa
mov
mov
cmps
es
cmp
vmptrld
inc
movs
adc
push
daa
cmps
aam
loopne
hlt
rol
aad
xlat
jne
lods
test
iret
pop
fmul
aas
daa
cmps
or
pushf
neg
xor
aaa
sub
in
and
cmp
dec
pop
xchg
addr16
aaa
movs
div
mov
jp
adc
jne
call
xor
cmp
xchg
mov
xchg
nop
inc
rcl
pcmpeqd
mov
xchg
cmp
mov
mov
mov
sbb
jmp
mov
arpl
cmp
adc
add
call
add
loope
rcr
stos
pusha
mov
mov
rol
xchg
jbe
ss
test
adc
sub
mov
or
aas
cmp
cmp
xor
mov
aad
adc
nop
out
dec
or
shl
div
and
emms
add
or
sbb
and
cs
inc
daa
daa
daa
daa
dec
pop
gs
daa
daa
daa
jnp
xchg
pushf
push
add
cmps
das
ja
ja
mov
sub
es
js
pop
and
adc
or
mov
cmp
cwde
daa
test
mov
pushf
gs
cmp
pop
adc
in
inc
ret
cmp
das
rcl
loope
mov
mov
pusha
mov
xchg
into
sub
adc
jns
jns
push
mov
adc
cmp
fcomp
mov
xchg
xchg
cmp
cs
dec
scas
mov
lods
xchg
out
inc
ret
mov
addr16
jns
addr16
(bad)
enter
fiadd
sbb
fcomp
mov
aas
loopne
call
adc
in
add
addps
sbb
push
jo
mov
adc
mov
ja
cmps
sub
inc
dec
aas
call
mov
in
aas
daa
jnp
add
mov
retf
push
shl
(bad)
hlt
sub
mov
das
je
adc
jnp
cmps
inc
or
test
or
cmp
inc
inc
inc
push
daa
fs
mov
scas
xchg
lock
lods
daa
mov
ja
inc
hlt
in
xor
mov
and
leave
and
and
mov
out
out
loopne
push
or
mov
dec
inc
and
inc
cmp
push
add
mov
out
mov
inc
jl
pop
in
xchg
or
call
in
lock
enter
cmp
jge
jge
jge
jge
stos
adc
dec
out
inc
lock
je
or
(bad)
loope
outs
(bad)
adc
sbb
inc
fs
sub
dec
or
mov
inc
xor
cs
in
sar
add
inc
ret
test
inc
movs
das
jb
pop
sar
inc
loopne
jo
mov
mov
dec
iret
jle
pusha
mov
jg
pop
mov
out
or
mov
or
jecxz
adc
lahf
xor
add
push
in
dec
cmovo
or
movzx
mov
lahf
mov
mov
inc
test
stos
add
push
fisttp
xchg
outs
cmps
rcr
daa
call
xlat
or
test
or
pop
addr16
adc
mov
xchg
push
mov
sub
scas
pop
les
aam
jbe
push
in
or
cmps
scas
inc
or
sbb
sub
add
and
push
pop
inc
pop
or
mov
cmp
push
jo
cmp
mov
mov
call
cmp
dec
mov
ficom
pop
in
push
sbb
addr16
outs
daa
pop
nop
cwde
fbld
int3
ja
inc
and
jae
dec
dec
cmp
mov
add
aaa
dec
push
pop
jo
movs
push
mov
shl
add
popa
inc
cld
mov
mov
xchg
lock
lods
enter
inc
pxor
xchg
cmc
div
mov
daa
xchg
cdq
cmovp
(bad)
cmp
imul
or
aas
push
out
push
dec
sbb
jl
shl
(bad)
ja
adc
cmp
in
jmp
mov
je
dec
das
dec
and
xor
push
rol
in
mov
push
call
or
jmp
ror
adc
adc
movlps
vsqrtps
dec
adc
dec
pop
mov
inc
xchg
dec
push
mov
mov
adc
ror
pop
dec
les
in
and
aam
iret
add
cmp
addr16
or
dec
dec
adc
daa
dec
pop
xchg
or
js
loopne
rcl
xor
adc
dec
xor
push
xchg
jb
addr16
push
mov
add
mov
scas
pusha
mov
les
dec
cs
mov
or
mov
push
dec
lahf
shl
cmp
push
pop
pop
jne
xchg
pushf
mov
test
in
mov
sbb
leave
xor
mov
cs
rcl
and
dec
sar
dec
lock
mov
and
push
in
pop
leave
cld
adc
cdq
adc
cmp
mov
dec
cwde
dec
mov
push
or
imul
xor
push
pop
dec
cs
pop
push
or
pusha
ins
push
ret
xchg
ja
jbe
bound
mov
add
push
aam
mov
inc
ret
sub
loopne
pop
push
lods
pop
dec
push
popf
push
pop
push
sbb
xor
pop
push
pop
aaa
call
call
in
mov
add
in
xchg
fsubr
daa
cld
mul
fiadd
or
xor
sub
dec
ja
inc
push
loope
lea
mov
test
stos
test
push
in
add
or
jb
andps
or
inc
mov
adc
push
mov
lods
and
pushf
sbb
push
mov
sbb
inc
addr16
punpcklbw
and
adc
dec
add
jo
pop
adc
dec
push
nop
push
jl
mov
and
imul
das
int3
dec
or
inc
in
jne
lahf
push
pop
sbb
ror
fnstcw
(bad)
in
dec
push
imul
inc
push
nop
test
or
mov
inc
pop
mov
in
test
int3
iret
pop
rol
fidiv
push
cdq
(bad)
mov
or
cmp
into
(bad)
pop
inc
xchg
cmp
xchg
jmp
iret
mov
add
pop
lods
push
cwde
mov
jmp
inc
pop
or
out
add
push
sbb
dec
(bad)
aas
hlt
bound
xor
mul
nop
in
mov
dec
jb
mov
adc
cs
dec
cs
xor
cwde
jb
jb
addr16
setb
mov
cvtdq2ps
mov
lahf
pop
adc
cs
push
or
mov
pop
mov
push
or
pop
clc
pop
sub
out
pop
outs
test
je
xchg
out
pop
jmp
xor
iret
pop
mov
mov
je
int
pop
xchg
push
js
xor
adc
shl
mov
in
fcom
lock
push
repnz
xchg
xchg
pop
sbb
xchg
xchg
xchg
xchg
xchg
or
in
shr
nop
loopne
cmp
sbb
xchg
cmp
jnp
add
xchg
pop
or
mov
xor
pop
call
push
push
mov
test
add
lods
(bad)
sbb
xor
iret
aam
es
xchg
xlat
xchg
sub
push
dec
cmp
rcr
pop
femms
jg
push
mov
rcl
js
out
sar
push
pop
pop
xchg
test
mov
dec
push
iret
jo
aam
pop
clc
push
iret
js
cmp
fdivr
fidiv
push
loopne
and
aas
loope
fbld
adc
or
daa
or
aas
jmp
adc
aas
push
ins
pusha
pswapd
pop
mov
mov
xor
aas
xor
jmp
fimul
add
inc
retf
dec
inc
jnp
aas
inc
aas
shr
outs
add
jb
cmp
jbe
push
jno
loop
xchg
aas
jg
inc
push
je
jo
sub
dec
arpl
jmp
setp
pusha
xchg
and
mov
jg
scas
xor
(bad)
movs
inc
push
dec
mov
cmps
and
add
btc
mov
aas
(bad)
push
popf
sub
lds
loope
js
sbb
dec
jnp
sbb
mov
sbb
ret
dec
shl
movs
dec
jl
xchg
sbb
jg
inc
jmp
fcomip
inc
add
js
psubw
cli
jb
(bad)
out
mov
jo
mov
jmp
cmp
outs
sbb
data16
jns
daa
int
or
mov
outs
pop
push
movups
mov
das
mov
dec
sub
movntps
pop
xor
xor
push
sbb
ins
(bad)
lock
and
rcl
les
fmulp
adc
jle
dec
loop
scas
jmp
pop
and
outs
adc
loope
adc
retf
aas
rcr
sar
adc
pop
add
fs
imul
add
adc
push
pop
cmps
(bad)
icebp
sbb
sub
xchg
lahf
adc
not
jnp
jle
fist
jg
push
gs
inc
test
mov
cmp
imul
ds
repnz
xchg
xor
imul
add
adc
inc
rol
scas
in
and
jl
or
adc
push
inc
sub
mov
mov
(bad)
jg
pop
push
popf
dec
dec
call
push
mov
dec
adc
arpl
mov
mov
gs
adc
mov
aas
daa
fimul
or
dec
and
out
adc
imul
adc
es
(bad)
sub
inc
add
adc
xchg
jg
adc
cmps
adc
jge
mov
xlat
mov
mov
aas
push
or
dec
mov
adc
push
pop
aas
ins
pushw
ins
lock
in
stos
pop
movs
aas
(bad)
rol
fdivr
push
sub
adc
add
xchg
daa
call
xchg
nop
add
in
dec
hlt
pop
fisttp
mov
add
add
push
push
dec
push
adc
push
cmp
(bad)
fisub
xor
cs
inc
push
xchg
inc
sub
sub
mul
push
dec
inc
aas
icebp
lds
mov
pop
outs
pop
jb
add
nop
xor
add
add
cwde
and
arpl
cmp
aas
gs
ja
pop
retf
jns
inc
popa
ins
aas
ds
fcom
or
bound
or
ret
mov
inc
aas
and
mov
dec
imul
jbe
or
pop
pop
je
imul
lahf
ins
add
pop
dec
movs
in
add
inc
dec
jae
add
and
test
mov
jge
jl
sub
pop
popa
dec
xor
lods
pusha
xor
mov
rcl
adc
add
outs
or
mov
or
push
and
and
js
inc
scas
adc
dec
xor
or
add
outs
and
dec
push
xor
aaa
mul
arpl
mov
out
inc
push
cmp
icebp
adc
add
clc
iret
repz
in
loopne
shr
xor
out
cmp
and
xchg
lock
in
iret
repz
mov
nop
test
cmp
pop
dec
fist
jb
les
add
lock
mov
or
dec
ret
sub
cmc
add
adc
test
lods
push
dec
test
mov
xor
sub
pop
inc
mov
adc
inc
inc
out
inc
add
inc
add
jo
adc
outs
lea
shl
add
add
xchg
sub
cdq
inc
inc
ja
inc
push
xor
int
and
cmps
pop
dec
fstp
stc
das
mov
pcmpeqd
stos
aaa
and
movs
pop
pusha
mov
push
outs
mov
test
push
aaa
and
jo
xor
or
sub
xchg
fisubr
ins
gs
aas
pop
inc
dec
mov
movs
or
mov
pop
std
inc
stos
pop
mov
cmps
pop
out
ins
mov
or
popa
outs
mov
addr16
dec
pop
push
popf
(bad)
jno
inc
pop
push
inc
add
sub
dec
adc
or
dec
or
cmps
add
fsubr
retf
cmps
add
push
mov
movs
cs
xor
inc
popa
jae
inc
inc
aas
inc
sbb
fs
or
dec
dec
mov
or
test
lods
or
imul
data16
fwait
pop
popa
add
mov
push
mov
cmp
adc
sub
add
inc
outs
aas
loopne
jnp
inc
loop
aaa
pop
dec
outs
mov
gs
pop
sub
outs
jne
push
jle
(bad)
push
and
rcr
mov
lds
int
loopne
inc
enter
add
mov
imul
jb
jo
inc
std
enter
aas
and
inc
inc
inc
xchg
adc
aad
inc
ret
fld
sub
stos
bnd
jne
mov
and
xor
or
repnz
xchg
gs
imul
push
rol
inc
sahf
imul
test
lahf
(bad)
das
mov
adc
add
dec
sbb
add
pop
lods
aas
push
cmp
inc
out
push
cmp
sub
sbb
and
xchg
sbb
xor
sbb
adc
ss
add
xor
rol
ss
pop
fdivr
not
push
cmp
popf
pop
add
sahf
mov
pop
xchg
fld
mov
gs
pusha
les
out
inc
inc
daa
fadd
push
fimul
fsub
add
test
push
pusha
dec
push
lahf
or
mov
inc
mov
fild
push
sub
das
inc
stos
add
mov
push
push
cmp
fild
jle
and
push
mov
les
add
call
cmp
xchg
cmp
push
push
(bad)
jae
adc
mov
adc
bound
cdq
push
push
push
test
data16
test
cld
das
dec
addr16
jbe
not
aaa
ja
cmp
pusha
jns
call
push
cmp
mov
out
dec
idiv
test
mov
and
pushf
bswap
add
or
and
adc
and
or
jl
add
xchg
mov
mov
fld
inc
push
adc
add
add
ss
dec
lahf
mov
js
adc
pop
xchg
fmul
inc
dec
inc
dec
mov
dec
jmp
aas
daa
aas
jg
push
enter
dec
mov
call
es
push
aaa
daa
rcr
xor
inc
out
ret
pop
pop
aas
adc
inc
test
pop
dec
push
dec
sar
lds
cmp
pop
cmp
mov
ja
jns
out
jbe
je
jb
out
sahf
jno
outs
outs
ins
ins
jns
out
imul
addr16
push
mov
data16
out
mov
repz
cld
test
inc
jns
out
push
fs
mov
int3
push
test
test
push
push
mov
addr16
push
and
add
fist
imul
pop
fiadd
mov
pushf
xor
mov
sahf
js
scas
pop
out
adc
ret
sar
mov
cwde
or
dec
xchg
dec
sub
movs
(bad)
fwait
mov
push
cmps
inc
aaa
push
xchg
call
mov
inc
sbb
bound
jp
adc
stos
cmp
aas
push
mov
push
jne
test
mov
addr16
adc
rol
jne
inc
lds
adc
jb
and
sbb
dec
addr16
fcom
mov
push
dec
dec
dec
pusha
add
test
xchg
xor
and
xor
push
mov
mov
push
cmps
push
in
(bad)
sbb
inc
lea
inc
dec
or
add
aas
inc
inc
daa
push
test
ret
pop
xchg
cmp
outs
inc
ins
bound
rol
xchg
and
fwait
push
mov
mov
push
sti
cmp
lock
pop
outs
imul
inc
pusha
les
add
lock
mov
das
inc
inc
pop
jae
pop
sub
lahf
pop
xchg
rcl
je
lahf
sub
push
lahf
(bad)
fidivr
adc
or
popf
cmp
inc
xchg
and
fsubp
inc
pop
lgdtd
push
mov
adc
jmp
and
pop
cmp
xchg
adc
fiadd
ret
addr16
and
inc
mov
push
pop
aaa
ret
in
scas
add
inc
adc
mov
dec
jb
push
test
pop
xchg
popa
add
adc
xchg
sub
inc
adc
or
mov
xchg
xchg
out
popa
imul
out
test
dec
add
inc
sti
sub
jecxz
fistp
push
dec
sub
cmp
mov
push
or
inc
inc
push
inc
fwait
add
ins
push
or
add
xchg
jo
inc
mov
dec
jae
add
xor
dec
popa
int3
add
mov
aam
xchg
add
add
cmp
mov
movs
mov
out
and
sbb
pop
daa
dec
and
mov
lea
fist
shl
aaa
ficom
jp
inc
mov
inc
cmp
xor
push
xor
push
aad
push
(bad)
fild
sub
pop
pop
mov
and
mov
push
inc
xchg
add
sub
dec
pop
pusha
push
lods
push
out
inc
and
mov
dec
iret
cmp
sbb
and
js
fs
inc
and
pop
push
sbb
push
fistp
and
pop
jae
ins
xor
and
mov
mov
inc
inc
dec
add
out
lods
xchg
mov
lea
mov
cmc
dec
and
popa
jo
test
mov
call
pushf
js
out
push
loopne
pop
shl
add
movups
and
pop
icebp
xchg
pushf
imul
outs
and
and
sbb
xchg
xchg
sbb
xchg
sub
arpl
loopne
aas
ins
xchg
arpl
test
das
fistp
jno
sub
adc
xor
out
sbb
inc
call
sub
div
out
outs
and
pushf
push
add
push
shr
and
xchg
shl
jo
(bad)
call
pop
sbb
mov
fimul
mov
scas
div
loop
sar
(bad)
jmp
mov
xor
inc
jmp
fist
xor
inc
mov
test
sub
push
inc
adc
mov
xchg
dec
fwait
xor
add
lea
stos
pop
mov
mov
aas
ja
rol
push
mov
fiadd
and
test
jecxz
daa
aas
test
push
das
push
inc
sbb
shl
xor
data16
rol
pop
pop
clc
das
sub
push
dec
dec
inc
inc
mov
xchg
test
es
pop
mov
movs
sub
dec
mov
push
inc
inc
aas
inc
mov
xor
ret
popa
add
mov
or
mov
loopne
ja
and
(bad)
aam
rol
push
loope
add
inc
push
rol
and
push
cwde
and
test
pop
dec
mov
pop
pop
aas
add
cmp
add
mov
or
(bad)
dec
lock
sbb
lahf
or
adc
les
mov
sub
pop
pusha
or
pop
mov
mov
daa
adc
push
les
mov
lea
ja
fcom
or
fisttp
add
pop
push
jnp
cmp
outs
jae
mov
cmp
js
push
fcmovb
mov
hlt
push
jle
add
repz
or
sbb
sub
shl
cmp
sub
mov
or
xchg
inc
sbb
arpl
or
push
xor
sar
call
fsub
sub
or
test
iret
inc
outs
imul
add
rol
mov
dec
push
and
sub
sub
shl
mov
xchg
ss
push
add
loopne
fdiv
push
rol
xor
add
dec
inc
paddw
(bad)
fst
mov
sbb
jg
dec
loopne
xchg
mov
sahf
test
push
mov
sahf
out
test
pushf
xchg
sahf
out
sahf
mov
jns
out
pop
push
push
dec
dec
out
sahf
out
inc
cmp
xor
out
sahf
xor
sbb
or
mul
jle
hlt
push
sahf
out
sahf
call
shl
jns
mov
sbb
push
ja
lock
push
add
or
les
scas
or
je
sbb
lea
daa
mov
wbinvd
or
or
xor
mov
daa
xchg
adc
in
jbe
and
mov
in
push
addr16
das
push
xorps
(bad)
ins
das
ins
push
and
cs
push
pop
and
cmp
add
sahf
sub
fbld
das
mov
into
aas
xlat
sbb
and
not
xor
aaa
pop
or
mov
or
sbb
push
add
lods
test
call
pop
adc
mov
lahf
scas
test
add
cs
mov
dec
pop
xchg
ret
xchg
mov
std
pop
adc
dec
stc
jb
ins
or
push
or
or
mov
adc
adc
xchg
in
in
xchg
sbb
inc
mov
sbb
in
push
int3
pop
push
and
and
js
sbb
jb
jns
jp
cld
test
add
mov
sub
push
das
aas
or
push
or
lahf
loope
jne
jg
mov
div
(bad)
adc
jo
aas
dec
adc
movs
nop
add
movs
or
mov
mov
aas
and
add
adc
inc
fld
add
rcl
stos
cmp
adc
push
add
in
mov
add
movs
jo
cmp
sub
scas
jl
mov
cld
inc
jle
test
push
push
cld
pop
shl
cmovo
sbb
pop
mov
mov
in
call
mov
rcl
jle
ficomp
out
push
xor
cmc
test
loopne
xor
out
and
and
pop
lods
inc
add
sbb
xchg
sub
sbb
mov
aas
shl
and
mov
xchg
jo
lock
in
inc
add
push
pop
push
inc
jg
add
inc
ret
adc
inc
cs
and
cmp
cmp
push
pop
iret
xchg
mov
sub
repz
mov
push
dec
jns
push
cmp
push
xchg
mov
shl
call
push
dec
ins
add
cs
or
push
lock
daa
and
push
xchg
es
ja
add
(bad)
sbb
retf
xchg
and
pop
shl
pushf
and
pop
setge
aas
mov
xor
and
pushf
cvttps2pi
sub
or
xchg
mov
adc
xor
je
(bad)
jb
enter
push
pop
pop
push
and
inc
mov
and
and
xchg
es
(bad)
movs
arpl
rcr
dec
or
inc
xchg
push
sub
shl
xor
shl
ja
fwait
cmc
xchg
cmps
add
mov
fs
jg
mov
xchg
(bad)
pop
enter
inc
pushf
or
(bad)
cmp
movhps
adc
push
pop
dec
pop
stc
and
sbb
into
sbb
ror
(bad)
(bad)
inc
lock
mov
sub
inc
rcr
and
sbb
add
xlat
xchg
inc
push
add
lea
scas
sahf
inc
stc
mov
adc
mov
dec
js
inc
outs
cld
(bad)
(bad)
inc
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
(bad)
out
push
add
jbe
int3
repnz
test
es
sub
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
ins
dec
(bad)
jmp
inc
or
add
inc
in
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
call
lock
inc
push
movs
mov
popa
sar
mov
fsub
stos
xchg
clc
repz
mov
sub
lahf
mov
and
and
int
add
aas
jno
loopne
jg
or
mov
pop
fs
dec
lea
aas
ret
shr
xchg
pop
mov
icebp
aas
ror
and
cmps
rol
(bad)
out
aas
inc
cmps
mov
ins
scas
add
(bad)
call
xchg
cmp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
(bad)
(bad)
dec
mov
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
(bad)
(bad)
(bad)
jmp
(bad)
loop
mov
jp
popa
push
pop
sar
jl
mov
das
lea
mov
(bad)
in
adc
movs
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
(bad)
(bad)
inc
int3
and
call
cmp
jp
and
cmp
mov
cmp
(bad)
out
(bad)
std
xlat
cmp
mov
sbb
add
mov
aaa
fld
cmp
(bad)
(bad)
(bad)
push
shl
(bad)
out
dec
nop
pop
cmp
fisub
xor
push
lahf
inc
pop
(bad)
(bad)
(bad)
push
in
ss
push
scas
into
imul
faddp
jge
call
mov
(bad)
in
(bad)
call
and
dec
dec
gs
std
or
pop
ficomp
frstor
loope
add
(bad)
and
lods
push
daa
pop
loope
inc
add
add
inc
add
sub
push
push
push
xchg
test
xchg
push
push
and
stos
stos
and
or
adc
dec
inc
push
mov
movs
or
sub
dec
xor
imul
fs
push
imul
mov
sub
jo
shl
(bad)
pop
add
(bad)
(bad)
call
sbb
aas
sahf
mov
std
cld
sub
call
sahf
sti
mov
(bad)
(bad)
(bad)
call
pop
xor
and
popf
cmp
pushf
stos
jecxz
fnstcw
cmp
jne
pop
mov
push
(bad)
(bad)
(bad)
call
fdiv
or
xchg
repnz
adc
int
pop
fsub
rol
mov
outs
retf
(bad)
push
(bad)
cld
xor
dec
mov
leave
imul
outs
push
movntq
out
add
inc
mov
(bad)
(bad)
(bad)
jmp
mov
loope
mov
hlt
add
inc
sahf
mov
aad
neg
iret
mov
ds
sbb
jmp
dec
or
test
dec
js
mov
mov
addr16
les
cmp
mov
sub
mov
(bad)
pop
in
mov
test
leave
sub
jmp
out
lock
lea
xlat
pop
xchg
pop
jp
push
daa
nop
imul
and
pop
(bad)
fwait
sub
ret
call
inc
ja
add
dec
mov
xchg
push
dec
add
ror
pop
cmp
(bad)
(bad)
push
dec
js
call
in
ret
arpl
push
jnp
(bad)
push
fnstenv
sti
(bad)
(bad)
(bad)
inc
ret
mov
pop
scas
cmc
sbb
sub
nop
mov
call
(bad)
mov
in
imul
inc
mov
add
bound
icebp
inc
sbb
(bad)
mov
inc
dec
push
add
test
fwait
int3
int
sub
(bad)
(bad)
jmp
leave
mov
cmc
lock
mov
aas
ret
and
adc
xor
(bad)
(bad)
(bad)
jmp
pop
xor
sub
cmps
mov
cmp
mov
daa
sbb
clc
add
inc
stos
push
add
(bad)
inc
rol
je
pushf
aam
push
adc
mov
mov
cmp
(bad)
(bad)
dec
test
mov
add
pop
fs
js
adc
sbb
mov
mov
rcl
sbb
inc
jns
rcr
inc
add
pop
inc
mov
fcomip
(bad)
mov
xor
fidiv
int3
pop
(bad)
out
pop
lock
mov
(bad)
push
addr16
sbb
mov
or
in
jp
scas
(bad)
(bad)
(bad)
push
js
lods
or
sub
aaa
mov
gs
xor
out
(bad)
jmp
jbe
jmp
(bad)
out
loope
adc
rol
xor
cdq
sti
fnstenv
ja
sbb
pop
or
mov
cli
call
jl
jle
xor
jo
cs
inc
ja
push
sub
sahf
repnz
(bad)
(bad)
(bad)
(bad)
push
xchg
stos
leave
xlat
arpl
mov
or
cmp
lds
jle
rol
push
hlt
lahf
sub
and
clc
jae
pop
dec
cmp
scas
jl
rol
shl
mov
loop
mov
loopne
icebp
(bad)
jmp
ins
mov
cmp
aad
fldenv
sbb
inc
mov
inc
push
(bad)
inc
nop
ret
mov
cmp
lods
push
mul
scas
stos
(bad)
(bad)
(bad)
call
jb
pop
adc
fiadd
cli
sbb
inc
int3
jae
jge
ror
adc
(bad)
(bad)
push
outs
sbb
cwde
sub
mov
pushf
and
aas
jl
rcl
(bad)
cmp
sar
int
fadd
(bad)
(bad)
popf
jb
cmp
add
test
les
(bad)
(bad)
(bad)
call
loope
jns
int
(bad)
or
dec
sub
xchg
xchg
ds
loop
retf
mov
mov
(bad)
(bad)
(bad)
(bad)
cmp
mov
repnz
mov
(bad)
cdq
fstp
push
jmp
clc
and
(bad)
jmp
(bad)
(bad)
ds
test
rcl
push
fiadd
and
(bad)
(bad)
(bad)
cmp
shr
data16
nop
xor
aad
pop
sub
or
(bad)
push
xchg
arpl
add
sbb
mov
pusha
xchg
fsubrp
cmc
(bad)
mov
mov
dec
mov
push
loopne
push
(bad)
(bad)
call
std
dec
popa
test
mov
mov
cmp
pop
jmp
sbb
(bad)
dec
cdq
xor
retf
scas
aaa
test
jle
inc
and
lock
sbb
test
(bad)
(bad)
push
mov
cmp
mov
xor
sbb
and
or
cmp
push
mov
js
into
xchg
lock
ins
js
adc
aaa
inc
call
inc
xor
int3
(bad)
(bad)
(bad)
push
jl
sahf
and
or
sbb
cmp
push
and
push
or
outs
movs
sub
dec
mov
fisttp
aas
jne
loop
outs
hlt
(bad)
(bad)
(bad)
call
sbb
and
mov
in
daa
inc
sbb
(bad)
out
lds
add
push
(bad)
cmps
clc
(bad)
(bad)
(bad)
call
hlt
mov
retf
add
stos
inc
(bad)
sub
jb
dec
or
mov
push
cmp
mov
cmp
arpl
dec
pop
inc
rcl
mov
mov
cld
xchg
push
shl
push
push
inc
(bad)
(bad)
(bad)
call
bound
push
sub
inc
dec
or
stos
mov
and
(bad)
inc
jl
push
paddw
(bad)
jnp
in
jecxz
das
retf
repnz
(bad)
(bad)
(bad)
jmp
dec
mov
loop
cwde
stos
dec
push
cmp
adc
data16
shl
mov
(bad)
(bad)
call
jae
out
add
cld
xor
clc
mov
mov
nop
sbb
sub
pushf
sar
(bad)
(bad)
call
adc
cmp
add
js
scas
nop
js
mov
mov
push
push
(bad)
mov
jmp
fisttp
mov
fdivr
(bad)
(bad)
inc
cwde
jae
sbb
mov
dec
sti
shr
pop
shl
xlat
pop
pop
bound
jmp
call
inc
dec
call
jns
sub
pop
es
nop
mov
pop
jnp
and
jmp
iret
jge
mov
(bad)
pop
lods
cmp
retf
add
jne
add
(bad)
(bad)
call
mov
sahf
xor
mov
in
pop
push
shr
push
data16
cmp
(bad)
jg
sbb
inc
movs
ins
xor
repz
mov
pop
lahf
(bad)
(bad)
mov
jge
dec
push
int
nop
out
das
jmp
and
mov
in
(bad)
fbstp
xchg
mov
stos
or
outs
xchg
sahf
xchg
inc
sbb
adc
(bad)
inc
xchg
sar
mov
mov
sbb
add
(bad)
(bad)
cmp
stos
mov
sub
test
cwde
call
das
or
add
pop
pop
cmp
frstor
lods
data16
cld
xor
inc
(bad)
(bad)
(bad)
call
sbb
xor
ds
jb
sahf
mov
sbb
xor
call
cdq
dec
push
xchg
lods
fisttp
fnstenv
(bad)
dec
inc
sub
shl
inc
stos
jle
sbb
mov
loopne
xor
xchg
pop
mov
mov
int
xchg
xchg
daa
pop
sbb
inc
(bad)
jmp
int
push
jg
push
mov
mov
push
inc
pop
cmp
sub
jg
sub
xor
add
fsubrp
icebp
jne
sbb
(bad)
(bad)
(bad)
inc
lods
adc
cmp
leave
movs
ret
neg
lods
call
mov
jl
das
sbb
cmp
(bad)
inc
jg
shl
(bad)
xchg
pop
xchg
mov
and
pop
cmp
jge
(bad)
xchg
or
(bad)
fsubr
mov
movs
enter
ret
shr
(bad)
(bad)
jmp
cmc
dec
add
loopne
cs
(bad)
out
push
je
pusha
bound
das
(bad)
(bad)
(bad)
dec
jo
mov
add
test
cli
add
dec
rol
or
push
movs
icebp
leave
fiadd
push
(bad)
dec
nop
clc
(bad)
jmp
aaa
add
cdq
or
mov
enter
js
pop
xor
(bad)
fild
std
out
or
popa
jmp
std
(bad)
call
add
cmp
stos
mov
scas
and
mov
adc
push
popf
cli
jo
dec
pop
mov
test
addr16
jne
jmp
sub
enter
(bad)
(bad)
jmp
add
push
fld
add
mov
lock
adc
dec
push
or
test
push
inc
clc
(bad)
jmp
out
rcr
mov
sbb
jnp
ret
(bad)
(bad)
jmp
adc
adc
out
repnz
cmps
jl
adc
cld
outs
ss
stos
fnstcw
push
(bad)
(bad)
push
jmp
inc
int
stos
and
movs
pop
jg
mov
ins
or
(bad)
(bad)
dec
jmp
popa
mov
xchg
mov
shl
mov
aaa
cmp
retf
(bad)
(bad)
(bad)
(bad)
fstp
enter
je
call
test
ss
pop
jge
sub
jmp
out
ins
mul
mov
pushf
aam
dec
xchg
xor
pop
dec
cwde
and
pop
cdq
jecxz
(bad)
jmp
stos
jl
xor
mov
jg
gs
jecxz
lock
dec
push
mov
mov
cmc
(bad)
mov
repz
add
test
in
xor
xor
repnz
push
inc
jle
clc
pop
push
iret
(bad)
mov
aas
or
(bad)
es
sahf
out
mov
push
ds
fcmovnb
ins
dec
push
call
(bad)
jmp
inc
xor
ins
shl
sbb
mov
push
loopne
cs
pop
jl
call
inc
or
ins
or
cmp
nop
push
jmp
ja
mov
(bad)
(bad)
(bad)
dec
or
cmps
push
out
neg
add
inc
pusha
lahf
test
adc
repz
lods
sub
inc
jl
lods
out
dec
mov
cmp
mov
push
pop
leave
imul
(bad)
(bad)
inc
inc
and
inc
jmp
or
or
jge
adc
pop
pusha
vmovsd
int3
mov
inc
dec
pop
or
cmp
retf
stos
adc
shl
add
sbb
add
mov
xchg
stos
xchg
imul
shl
scas
mov
(bad)
call
in
fsub
clc
xchg
fimul
and
sar
add
in
xlat
(bad)
(bad)
(bad)
(bad)
call
mov
jp
xor
pop
nop
out
mov
mov
mov
inc
push
(bad)
(bad)
(bad)
dec
into
out
lock
dec
inc
(bad)
(bad)
stos
fdivr
mov
mov
je
iret
(bad)
mov
hlt
call
scas
xor
scas
adc
mov
push
cmp
(bad)
(bad)
mov
test
sbb
or
xchg
pop
push
cwde
adc
lahf
(bad)
ret
in
mov
(bad)
(bad)
(bad)
fisubr
cmp
cmps
mov
jno
hlt
outs
(bad)
(bad)
ret
imul
xor
call
(bad)
in
mov
(bad)
or
aaa
shl
mov
shl
dec
rcr
je
repz
push
(bad)
(bad)
(bad)
push
mov
cli
sbb
add
mov
aas
pop
mov
retf
icebp
iret
mov
nop
lock
(bad)
in
popa
jle
cmps
mov
sbb
mov
cld
inc
jns
cmp
xlat
pop
add
jl
(bad)
lods
sub
(bad)
inc
cld
add
ss
ss
(bad)
dec
out
dec
mov
jmp
and
call
(bad)
jg
cld
dec
imul
clc
ret
sbb
jl
stc
(bad)
mov
lds
ss
leave
(bad)
(bad)
(bad)
(bad)
(bad)
sub
mov
fs
test
xchg
loop
sbb
push
jno
or
stos
inc
(bad)
call
cmp
mov
push
lea
(bad)
mov
and
leave
jns
inc
cmp
xor
aam
mov
pop
mov
(bad)
(bad)
fist
movs
addr16
jo
out
jecxz
enter
cmp
pop
pushf
jp
inc
mov
shl
mov
out
sar
test
sub
adc
test
stos
xchg
xchg
into
push
jnp
(bad)
(bad)
(bad)
push
mov
movs
mov
std
cmps
cwde
js
push
rcl
push
or
nop
mov
adc
push
fist
popa
cwde
xor
push
mov
arpl
adc
test
popa
inc
psllq
retf
loop
sbb
(bad)
(bad)
(bad)
mov
mov
adc
into
cmp
and
mov
sub
dec
sbb
jmp
bound
(bad)
addr16
icebp
cmp
jbe
in
sub
mov
dec
inc
jmp
xchg
push
scas
add
sti
in
pop
cmps
lock
(bad)
jmp
or
cmp
mov
add
xchg
xchg
pop
clc
(bad)
loopne
aam
mov
(bad)
(bad)
(bad)
fild
pop
inc
iret
inc
dec
bound
pushf
dec
inc
cmps
xchg
sub
(bad)
hlt
push
(bad)
pusha
ds
mov
mov
(bad)
cmps
dec
mov
shr
mov
(bad)
(bad)
(bad)
jmp
xchg
add
daa
addr16
(bad)
sahf
push
int
dec
rcr
(bad)
inc
jg
sbb
hlt
mov
cmp
test
dec
leave
pop
pop
shl
cmp
push
jne
ret
xchg
sar
call
inc
sbb
dec
mov
sti
xor
(bad)
call
retf
fcom
(bad)
jg
jo
cld
loop
push
cmc
or
dec
mov
pop
xchg
mov
or
inc
daa
push
(bad)
(bad)
inc
push
mov
dec
nop
pop
xor
jae
inc
int3
push
inc
(bad)
aaa
mov
(bad)
(bad)
dec
xchg
add
les
sub
dec
fild
fwait
in
out
test
jb
push
out
xchg
scas
mov
std
mov
adc
sub
cmc
xchg
(bad)
mov
in
xchg
jmp
rol
mov
add
pop
aam
jne
ins
sbb
stos
add
call
mov
jmp
cmp
xchg
jecxz
mov
cli
inc
pop
(bad)
(bad)
(bad)
call
leave
dec
mov
fidivr
es
(bad)
xchg
cwde
scas
mov
out
xchg
pop
ror
jmp
hlt
std
ret
into
rcr
daa
inc
mov
lods
adc
mov
dec
std
test
(bad)
(bad)
(bad)
inc
jbe
pop
xchg
outs
adc
push
push
movs
inc
loop
and
push
sti
(bad)
mov
xchg
push
(bad)
(bad)
(bad)
(bad)
mov
cwde
mov
and
mov
les
xor
mov
jmp
ins
test
pop
lock
in
cmp
int3
(bad)
xor
stos
jmp
(bad)
(bad)
(bad)
call
inc
stc
xor
push
das
mov
js
aaa
inc
mov
(bad)
stc
mov
div
push
and
xor
dec
loopne
jb
ins
ror
out
push
ss
(bad)
(bad)
(bad)
fistp
retf
(bad)
(bad)
stos
inc
sub
movs
jne
fstp
push
or
arpl
sub
push
xor
(bad)
(bad)
(bad)
dec
push
jbe
jecxz
ins
sbb
push
add
add
dec
add
es
adc
loopne
jmp
dec
clc
xor
push
in
mov
outs
xchg
and
dec
pushf
mov
call
dec
mov
clc
rcr
adc
dec
div
sub
imul
ror
(bad)
push
pop
sub
(bad)
mov
sbb
adc
ret
lds
call
push
or
gs
xchg
push
sbb
and
cmp
call
(bad)
outs
push
cmp
jmp
jmp
xchg
cmp
out
(bad)
(bad)
(bad)
push
push
add
pop
xlat
je
loope
pop
mov
push
inc
xlat
es
(bad)
(bad)
jge
push
mov
lahf
ins
mov
(bad)
(bad)
jb
adc
es
test
pop
imul
adc
mov
inc
or
cmc
(bad)
dec
push
inc
nop
pop
mov
or
daa
in
pop
xchg
not
push
push
push
or
test
inc
or
enter
fnstsw
repz
fld
sbb
(bad)
(bad)
inc
cmps
out
cli
int3
lods
nop
jg
dec
aas
sbb
dec
sbb
push
jge
jo
jg
add
fcmovne
adc
(bad)
cli
jle
bnd
or
mov
(bad)
sahf
lahf
test
push
jp
add
cmps
xchg
jge
sahf
push
test
retf
stos
cmp
xchg
xlat
ret
xchg
fisub
(bad)
(bad)
jmp
inc
push
mov
pop
(bad)
out
test
push
xchg
cmp
jmp
mov
loop
mov
mov
and
data16
call
ja
and
push
xlat
clc
cdq
mov
push
(bad)
(bad)
jmp
cdq
addr16
fnstcw
push
mov
jno
scas
mov
pop
loopne
out
inc
mov
add
mov
repnz
jge
sub
(bad)
(bad)
(bad)
push
faddp
xrelease
loopne
add
(bad)
gs
leave
sahf
cmp
or
(bad)
(bad)
(bad)
call
dec
mul
pop
out
fiadd
or
ins
pop
push
xchg
(bad)
(bad)
(bad)
jmp
sub
mov
imul
ds
fdiv
adc
push
adc
jne
sub
(bad)
inc
xor
push
mov
pop
mov
sbb
mov
cwde
mov
inc
movs
inc
add
cmp
outs
and
dec
cmp
mov
jle
shl
retf
cmc
aam
pop
jl
jmp
std
fs
adc
inc
mov
add
fwait
xor
int3
enter
dec
push
test
and
in
in
xor
ret
std
and
sbb
jmp
aam
cs
(bad)
jle
inc
ja
sar
(bad)
(bad)
(bad)
ja
lahf
xlat
inc
outs
inc
rcr
jns
adc
jg
jnp
mov
call
(bad)
call
jmp
push
fst
call
sbb
out
mov
icebp
push
out
stos
or
(bad)
(bad)
cmp
test
fisub
fist
dec
cmp
mov
pop
jl
test
icebp
jno
sti
xor
add
xchg
adc
ds
fiadd
in
mov
mov
fadd
dec
cmp
jg
sub
jno
jle
ds
dec
jmp
(bad)
(bad)
(bad)
jmp
popf
push
cmp
jae
mov
rcr
cmp
shr
ficom
mov
ds
jbe
lock
repnz
fdivp
(bad)
call
call
xchg
(bad)
retf
ja
jns
outs
retf
pop
mov
lock
in
xchg
jmp
add
retf
jmp
ret
cmps
inc
jns
and
ds
(bad)
sub
aas
enter
test
inc
movs
cmp
and
xchg
int3
and
outs
lds
je
cli
(bad)
jg
push
int3
or
dec
mov
push
lods
and
mov
inc
mov
mov
xchg
inc
loope
mov
sar
adc
xchg
(bad)
(bad)
jmp
xchg
jle
mov
pop
jecxz
mov
ins
leave
retf
mov
loopne
iret
loope
(bad)
jnp
mov
(bad)
pop
cmc
(bad)
push
pop
xchg
mov
jg
sbb
push
push
mov
mov
(bad)
(bad)
(bad)
mov
jecxz
loope
jnp
lahf
aaa
adc
push
les
fs
push
loopne
(bad)
jmp
mov
addr16
outs
ja
nop
out
pop
cli
xlat
inc
mov
cmp
mov
pop
loopne
mov
rcr
push
je
rcl
jne
push
(bad)
(bad)
call
call
add
fdiv
(bad)
aam
mov
(bad)
mov
call
mov
into
cmp
(bad)
and
and
(bad)
call
or
sbb
or
es
mov
(bad)
(bad)
inc
mov
mov
les
xor
adc
loop
out
mov
in
add
(bad)
call
ret
fistp
pop
add
aad
mov
or
pushf
(bad)
mov
(bad)
(bad)
mov
aas
pop
dec
repz
sar
fs
inc
jmp
sti
jb
cmp
sbb
or
jne
(bad)
(bad)
push
adc
test
lock
sub
jge
cs
jle
jbe
hlt
xchg
shr
(bad)
(bad)
(bad)
jmp
stos
test
icebp
xchg
mov
adc
adc
xor
jge
aas
fisttp
clc
ins
jge
inc
inc
les
(bad)
(bad)
inc
shr
mov
(bad)
lahf
sub
inc
jmp
(bad)
(bad)
push
(bad)
je
std
js
aaa
push
cmp
and
mov
(bad)
adc
adc
jle
push
xor
data16
scas
xchg
(bad)
(bad)
mov
clc
jmp
imul
retf
les
jbe
jne
mov
dec
out
mul
sbb
shr
out
pop
jmp
mov
add
xor
add
xchg
pop
rol
repnz
mov
xchg
(bad)
(bad)
mov
jecxz
pusha
scas
fdiv
popa
jno
lahf
call
xchg
stc
push
mov
xlat
pusha
js
das
(bad)
(bad)
(bad)
(bad)
jle
imul
or
aaa
enter
sbb
gs
skinit
mov
(bad)
(bad)
(bad)
push
shl
push
xor
loope
out
es
add
mov
and
mov
pop
inc
bound
sbb
mov
add
push
ret
jbe
or
mov
hlt
lock
dec
out
test
pop
cs
(bad)
call
cld
jmp
mov
outs
scas
xor
cmp
pop
clc
jmp
imul
(bad)
(bad)
jl
test
cli
shr
push
dec
mov
mov
push
mov
psadbw
add
add
test
mov
sub
iret
fs
xchg
cmp
pusha
jmp
call
sub
aaa
movs
and
pop
push
xlat
outs
fadd
or
les
(bad)
call
adc
inc
call
pop
or
std
int3
je
out
jp
pop
out
imul
(bad)
(bad)
(bad)
jmp
mov
xor
adc
loopne
mov
clc
dec
imul
add
jl
(bad)
(bad)
(bad)
call
pop
push
cmc
dec
pushf
test
lahf
jp
mov
loopne
push
push
mov
and
icebp
jmp
jb
xchg
sbb
jno
cli
jp
sbb
dec
jmp
pop
add
stos
aaa
aad
(bad)
push
std
adc
repnz
sub
stos
shl
mov
out
(bad)
(bad)
(bad)
call
stos
shl
or
xor
lods
addr16
pop
mov
xchg
mov
div
rcl
pop
lock
out
dec
pop
add
jne
sub
in
dec
jmp
jmp
lahf
in
cmps
fldcw
mov
popa
in
push
ret
and
or
and
(bad)
(bad)
(bad)
jmp
sub
push
sub
push
and
xchg
dec
jae
gs
loopne
xchg
(bad)
(bad)
(bad)
call
mov
inc
dec
cmp
pop
push
(bad)
scas
push
cmp
jno
movs
lahf
xchg
pop
(bad)
jg
inc
mov
(bad)
in
xor
ret
mov
inc
fsubr
sahf
push
push
cdq
(bad)
(bad)
(bad)
call
out
fsubr
push
fsubr
xchg
test
retf
lahf
push
pop
mov
jg
js
fcomp
cmp
cwde
mov
sbb
xchg
mov
inc
rcl
adc
bound
(bad)
(bad)
dec
sbb
jo
je
lahf
iret
je
(bad)
mov
(bad)
jl
jne
je
add
cli
push
stos
popf
adc
push
scas
push
arpl
xor
stos
outs
or
rcr
das
nop
or
dec
inc
jmp
and
cmp
push
out
out
lds
pop
(bad)
(bad)
dec
inc
push
xor
add
inc
sub
or
jecxz
out
xchg
aas
adc
or
push
pop
mov
xor
sbb
ja
out
pop
push
retf
in
test
jns
xor
ret
lea
fisttp
dec
scas
cmc
mov
neg
idiv
loopne
in
loope
nop
mov
push
or
out
mov
mov
push
dec
test
push
add
jecxz
xor
aad
(bad)
arpl
mov
(bad)
in
jmp
mov
stos
xor
sti
push
scas
cmp
jne
(bad)
(bad)
pop
fld
loopne
cmps
leave
sub
test
in
xchg
loopne
hlt
pusha
mov
(bad)
(bad)
call
jge
(bad)
sbb
mov
push
ja
ror
xchg
out
mov
dec
inc
iret
(bad)
(bad)
(bad)
inc
stos
jle
jb
cmps
iret
xchg
outs
loopne
fwait
add
mov
out
push
mov
adc
xor
into
loopne
(bad)
pop
push
rcr
dec
aam
(bad)
(bad)
jg
cmps
or
test
int3
mov
imul
sub
outs
sar
jns
xor
mov
lahf
lds
enter
xchg
jnp
xor
mov
push
pop
mov
pusha
mov
cmp
test
test
psllw
cmp
(bad)
jmp
jno
and
rcr
fmul
add
mov
jmp
aaa
mov
or
nop
or
mov
cmps
add
pop
xchg
push
mov
pop
xchg
loop
aam
les
clc
(bad)
(bad)
dec
push
jne
ins
sti
mov
and
push
mov
(bad)
in
les
xor
sbb
(bad)
inc
push
es
xchg
aas
xlat
rcl
das
inc
cmp
(bad)
jmp
clc
ror
sub
pop
stos
retf
shr
int
push
rcr
adc
icebp
ins
lods
mov
push
js
out
xchg
push
cmp
sbb
jo
push
iret
fnstenv
stos
lds
xchg
xchg
sbb
mov
lods
cmp
dec
fsubr
push
adc
mov
xor
(bad)
(bad)
(bad)
(bad)
cmp
mov
sub
pop
mov
les
push
push
inc
push
(bad)
pop
int3
(bad)
(bad)
(bad)
jmp
adc
xor
jmp
push
or
imul
dec
(bad)
(bad)
(bad)
(bad)
mov
dec
inc
mov
icebp
test
and
push
movs
xor
(bad)
(bad)
call
mov
(bad)
fwait
inc
iret
fwait
jo
fs
pop
leave
fidiv
add
retf
add
int
push
(bad)
(bad)
(bad)
inc
push
ret
jl
hlt
out
jmp
jbe
sub
xor
mov
in
inc
(bad)
(bad)
(bad)
call
ins
dec
leave
xlat
jmp
adc
push
cmp
mov
aam
pop
mov
sub
pop
in
(bad)
(bad)
(bad)
jmp
popf
(bad)
cmp
inc
mov
div
cmp
jne
sti
cmp
(bad)
xchg
fcos
(bad)
(bad)
jmp
loop
adc
(bad)
into
dec
push
dec
mov
icebp
shr
mov
imul
pop
inc
sbb
xor
jle
or
ins
jns
repnz
cmps
imul
add
jp
mov
cmp
adc
sbb
ficomp
(bad)
(bad)
jmp
es
int
sub
inc
and
adc
add
mov
(bad)
(bad)
(bad)
(bad)
fst
inc
mov
arpl
imul
enter
jo
pusha
rcl
pop
jmp
fdivrp
(bad)
(bad)
inc
adc
out
loop
cld
and
cmp
cs
cmps
call
mov
dec
xor
imul
(bad)
inc
dec
pushf
fmul
test
inc
daa
repnz
inc
lock
(bad)
xchg
out
cmp
dec
pop
xchg
or
add
dec
bound
(bad)
fdiv
jl
jge
adc
pop
adc
push
jb
sub
and
in
mov
push
sub
das
cli
inc
outs
cwde
jmp
lahf
shr
push
cmc
in
xor
inc
sub
(bad)
(bad)
call
aam
add
mov
call
int3
test
mov
out
jmp
inc
in
add
imul
sub
imul
mov
(bad)
(bad)
(bad)
jns
mov
or
call
mov
adc
jae
pop
mov
es
pop
shr
inc
lock
cmp
aaa
mov
mov
mov
or
adc
fwait
or
out
and
mov
adc
sub
(bad)
out
cli
(bad)
(bad)
jl
or
cli
test
cmp
(bad)
out
lds
push
nop
dec
adc
jno
lahf
mov
(bad)
(bad)
push
mov
jne
cmps
popa
movs
(bad)
xor
shl
shl
(bad)
sbb
out
fucomip
(bad)
(bad)
(bad)
cmp
es
push
(bad)
in
jge
pop
sbb
mov
stc
jb
loop
(bad)
(bad)
mov
or
mov
fsubrp
and
nop
or
and
int
(bad)
(bad)
call
adc
mov
adc
dec
(bad)
xor
lods
hlt
mov
xchg
or
or
icebp
xor
ss
(bad)
(bad)
push
adc
cmp
dec
sar
inc
ins
pop
dec
xchg
sub
sub
aam
scas
(bad)
(bad)
(bad)
jmp
nop
pusha
sahf
inc
mov
push
sub
arpl
test
mov
xchg
out
(bad)
mov
inc
pop
rol
adc
cmp
lock
test
mov
(bad)
(bad)
(bad)
(bad)
fst
adc
outs
push
popf
cmp
mov
(bad)
cmp
lds
mov
(bad)
(bad)
(bad)
(bad)
call
mov
dec
mov
dec
mov
mov
jo
into
pop
fisub
push
or
(bad)
jmp
addr16
repz
push
or
test
movnti
mov
xchg
(bad)
(bad)
(bad)
jg
add
(bad)
jns
outs
inc
xor
out
jmp
leave
xor
adc
dec
(bad)
(bad)
(bad)
jmp
inc
aam
loop
push
dec
repnz
dec
add
cmp
mov
(bad)
jg
jmp
or
push
and
and
inc
es
rcl
pop
(bad)
(bad)
(bad)
jmp
pop
jg
and
jne
xchg
aad
(bad)
das
icebp
or
mov
mov
lds
mov
xchg
inc
and
std
dec
cli
xor
or
push
lahf
rol
xchg
jno
and
pop
lock
adc
out
inc
xchg
sbb
mov
sub
sbb
mov
ret
push
nop
mov
int3
sub
(bad)
(bad)
(bad)
push
out
pop
push
scas
test
and
sbb
mov
xor
pop
cmc
(bad)
jmp
aaa
jl
jg
push
sti
sbb
push
inc
les
jbe
frstor
add
add
mov
jmp
jnp
pop
dec
cmp
(bad)
jp
dec
jecxz
push
mov
pop
mov
jle
(bad)
(bad)
(bad)
jmp
hlt
jg
mov
jae
add
jo
push
pop
out
xchg
add
jbe
(bad)
dec
lock
push
cmp
sahf
fwait
push
dec
mov
and
sbb
dec
xor
(bad)
(bad)
call
dec
scas
xchg
mov
(bad)
dec
push
fwait
jg
gs
test
xchg
and
pop
push
sbb
mov
aam
xchg
call
test
aaa
push
and
pusha
adc
fisubr
call
push
adc
outs
sar
out
push
dec
fwait
adc
ins
jmp
cwde
inc
jns
sub
psubusb
pop
cmp
adc
add
test
(bad)
(bad)
(bad)
push
test
inc
push
mov
nop
push
fs
pop
dec
cmp
ins
pop
and
and
push
jmp
dec
jg
ss
fist
gs
jae
in
mov
aam
pop
cmp
(bad)
(bad)
(bad)
(bad)
cmp
or
pop
ins
xor
push
jmp
shl
cmp
clc
(bad)
jmp
aas
dec
dec
pop
pop
pop
out
cmps
std
mov
shl
imul
xor
fnstenv
(bad)
mov
jmp
sub
push
ficom
ja
nop
out
cli
adc
xchg
cmp
mov
jnp
push
fsubr
mov
aad
cmp
int3
add
retf
out
mov
data16
jnp
pushf
xchg
aas
in
jp
dec
add
pop
adc
data16
bound
pop
(bad)
push
cmp
push
cld
call
pop
jo
mov
loope
xor
dec
pop
(bad)
(bad)
jg
push
and
rcr
pop
in
fdivr
aad
xcrypt-cbc
cmps
adc
pop
retf
(bad)
mov
fbld
aaa
adc
in
je
in
adc
mov
cdq
mov
xor
mov
xchg
aam
(bad)
jne
mov
add
(bad)
(bad)
mov
mov
fcmovnbe
ins
lds
bound
rol
loop
inc
mov
adc
call
fwait
test
jp
dec
das
dec
sbb
xor
fnstsw
and
xchg
ret
(bad)
(bad)
(bad)
call
popf
mov
xchg
cwde
mov
das
lock
lods
call
push
gs
ds
ja
call
sub
out
(bad)
rep
push
mov
and
cmp
icebp
and
das
cmps
jmp
rol
pushf
outs
jp
xlat
rcpps
loopne
(bad)
(bad)
(bad)
mov
retf
mov
inc
pusha
gs
idiv
std
jecxz
movs
dec
fmul
out
cmp
(bad)
(bad)
dec
or
cdq
fadd
dec
cmps
push
test
pop
cmps
pop
mov
(bad)
(bad)
call
stos
mov
dec
and
ins
stc
sbb
imul
adc
adc
outs
mov
aam
(bad)
inc
lods
xchg
call
shr
jns
gs
push
sbb
ficomp
ds
addr16
fs
in
rcl
cmp
cmp
mov
mov
jp
(bad)
jmp
mov
jg
ret
cmp
pop
xchg
or
ret
gs
mov
scas
(bad)
(bad)
(bad)
(bad)
out
popa
(bad)
mov
lahf
test
sbb
xor
fcmovne
adc
xchg
rcl
or
ror
lds
adc
data16
out
gs
jp
dec
out
mov
and
fcomp
mov
shl
sub
jl
push
sti
inc
rcr
push
mov
xchg
and
jno
fs
fild
jmp
fs
mov
inc
and
(bad)
fild
push
cmp
push
sar
mov
sub
outs
pop
ds
lahf
retf
ins
lds
or
or
ss
daa
aam
ror
aad
clc
and
mov
adc
mov
inc
cmp
mov
sbb
and
mov
or
(bad)
(bad)
jg
jo
xchg
sbb
in
mov
in
addr16
mov
hlt
mov
clc
ins
mov
pop
mov
cmp
sub
xor
and
add
in
sub
jnp
jmp
xlat
lahf
ins
icebp
(bad)
jg
sub
stc
cli
push
or
pop
xchg
fld
push
or
(bad)
(bad)
jmp
pop
dec
out
fsub
push
into
xchg
dec
dec
aad
es
ja
add
mov
(bad)
(bad)
push
repz
and
cmp
cdq
xor
rol
stos
sub
test
xchg
aas
in
pusha
fist
(bad)
(bad)
(bad)
jmp
dec
hlt
cdq
sbb
xchg
sahf
push
mov
sbb
pop
pop
out
call
adc
inc
in
cwde
xor
(bad)
(bad)
jmp
or
xchg
sbb
inc
sbb
bswap
sub
icebp
(bad)
(bad)
in
fidivr
nop
iret
imul
mov
imul
stos
imul
(bad)
fbstp
scas
(bad)
pop
adc
int3
adc
aam
das
xchg
addr16
(bad)
jmp
inc
mov
stos
outs
mov
sbb
adc
stc
pop
jg
sbb
sar
jmp
adc
and
jno
xor
mov
popa
leave
(bad)
jg
add
inc
pop
push
sub
mov
(bad)
(bad)
jmp
js
adc
loope
sub
add
fcomp
dec
sub
pop
pusha
mov
(bad)
(bad)
(bad)
jmp
sub
das
push
sti
pop
fstp
and
push
sbb
(bad)
(bad)
(bad)
jmp
lahf
mov
pop
imul
popf
(bad)
push
jae
call
cmp
push
fwait
and
push
out
out
mov
(bad)
push
repz
(bad)
sbb
outs
cmp
xchg
xor
test
dec
icebp
arpl
adc
and
sbb
push
sub
jmp
(bad)
in
pop
fwait
push
and
lea
sub
mov
xor
pop
jmp
(bad)
call
fcmove
pop
test
mov
xchg
jle
test
(bad)
(bad)
(bad)
dec
inc
scas
jo
test
int
mov
mov
sub
add
xor
das
cli
push
inc
in
dec
cmps
add
jle
and
rol
push
xchg
movs
add
mov
(bad)
call
mov
jns
xchg
popa
jmp
loope
inc
jno
imul
mov
shl
adc
jbe
fs
inc
jne
(bad)
movs
mov
sbb
and
call
pop
jecxz
jge
call
inc
ficom
lea
retf
push
repnz
(bad)
(bad)
(bad)
mov
cmp
in
ret
scas
dec
mov
test
stos
mov
aaa
(bad)
(bad)
(bad)
jmp
and
dec
push
adc
(bad)
call
cmps
test
loopne
xchg
enter
inc
stc
jmp
add
or
pop
and
and
(bad)
jmp
jne
aas
pop
ja
mov
mov
pushf
mov
push
data16
jae
add
(bad)
inc
mov
lock
int3
pop
ins
xchg
mov
cdq
cmp
mov
(bad)
push
sbb
pop
jmp
dec
imul
(bad)
(bad)
jmp
sbb
add
int3
dec
xchg
call
or
clc
dec
js
mov
adc
pushf
fsubr
add
ret
add
mov
imul
icebp
(bad)
call
repnz
sub
mov
adc
imul
(bad)
call
inc
inc
push
mov
in
dec
in
push
xor
pop
lods
and
inc
cmps
push
repnz
loope
(bad)
(bad)
mov
dec
pop
les
arpl
outs
xchg
(bad)
xchg
mov
cld
push
inc
push
(bad)
(bad)
call
push
xchg
comiss
jmp
loope
cmp
pop
fs
mov
popf
fsubr
jmp
add
arpl
mov
mov
or
push
jbe
outs
icebp
lods
vmovhps
(bad)
(bad)
call
mov
jne
fsubr
cs
imul
inc
add
(bad)
(bad)
(bad)
inc
imul
or
rcr
or
cmp
call
mov
inc
push
jae
dec
dec
mov
int
shl
lea
mov
lods
fnstsw
mov
(bad)
(bad)
jge
(bad)
(bad)
mov
push
mov
jne
xchg
jp
cwde
and
mov
(bad)
fisubr
sub
stos
(bad)
imul
jae
retf
das
pop
das
push
repnz
cmp
cmp
cdq
pop
out
stos
(bad)
call
jmp
arpl
fsub
(bad)
(bad)
mov
and
addr16
adc
outs
imul
push
mov
jb
or
jmp
shl
jnp
mov
iret
into
das
inc
call
(bad)
(bad)
(bad)
(bad)
(bad)
mov
xor
xchg
adc
movs
(bad)
test
stos
push
data16
(bad)
jmp
xor
add
pop
movs
xor
mov
mov
daa
ror
leave
xchg
test
jnp
int
(bad)
dec
out
pop
lods
(bad)
rcr
and
add
adc
inc
jecxz
shr
(bad)
(bad)
(bad)
jmp
iret
loop
push
push
test
in
push
sub
sub
stos
mov
sub
adc
fisub
jge
rcr
sahf
mov
jp
mov
fild
idiv
push
sbb
retf
push
loopne
jge
adc
and
mov
(bad)
js
jnp
call
sar
jmp
cld
out
add
cmp
xchg
add
cs
cwde
adc
ss
mov
(bad)
cmp
add
aad
push
pop
in
and
pop
cmp
(bad)
(bad)
call
ins
sub
or
(bad)
call
cmp
jge
das
adc
sub
sub
jmp
mov
movs
bound
call
pop
sub
cmp
or
(bad)
(bad)
jmp
add
xchg
enter
sub
xchg
sbb
mul
outs
call
stc
dec
fdiv
dec
pop
inc
sub
je
out
mov
fcomip
cmp
ja
push
scas
push
mov
pop
out
(bad)
(bad)
(bad)
mov
mov
cmp
jge
pushf
jnp
add
dec
shl
mov
popf
cmp
(bad)
(bad)
(bad)
(bad)
dec
js
shr
mov
or
into
repnz
loope
adc
stos
or
cmps
xor
popf
or
push
(bad)
addr16
jp
dec
mov
call
fwait
dec
gs
int
push
pop
inc
sub
jo
cmps
lods
les
js
inc
xor
aam
rol
pop
push
or
in
ins
and
adc
cld
(bad)
inc
sbb
mov
je
out
add
js
std
ins
mov
push
aas
push
std
(bad)
call
sub
xchg
int3
pop
xchg
cmp
dec
add
call
mov
push
xchg
lock
add
cmp
xor
aad
loope
mov
cld
pop
shr
in
mov
xchg
pop
mov
(bad)
jmp
loope
repz
xor
cwde
fcom
xor
mov
xchg
adc
jo
jl
add
xchg
jl
mov
int
xor
in
cli
push
ins
loop
sar
push
push
push
mov
cmp
pop
pop
ins
scas
mov
(bad)
(bad)
(bad)
inc
xor
xchg
popa
jae
jl
cmc
xchg
add
les
mov
mov
sbb
shl
xchg
or
aaa
sti
pop
shl
inc
retf
or
fdiv
popf
mov
aam
ficom
test
(bad)
(bad)
push
fs
lds
rcl
inc
push
cmps
pop
cwde
push
push
out
mov
xchg
jle
xlat
pusha
(bad)
(bad)
(bad)
call
and
add
clc
xchg
mov
inc
loop
inc
fdiv
(bad)
jnp
les
call
in
add
(bad)
mov
outs
les
mov
ffreep
push
clc
ss
cld
imul
pop
xchg
call
cld
jmp
pop
and
jmp
cmp
xor
(bad)
jp
and
pop
sahf
cmc
aad
sub
xchg
enter
and
pushf
xlat
or
lock
push
aas
jnp
out
mov
(bad)
in
aaa
xchg
out
pop
rol
in
mov
or
cmp
(bad)
jmp
fdivr
sbb
bound
out
dec
mov
push
cs
pusha
(bad)
(bad)
(bad)
jmp
dec
div
mov
jl
mov
rol
(bad)
inc
(bad)
jecxz
pop
jo
xchg
push
(bad)
(bad)
(bad)
inc
pop
inc
int3
jno
pop
xor
mov
outs
std
xchg
out
icebp
enter
pop
jbe
call
(bad)
call
imul
js
or
test
jbe
sub
and
inc
cmp
fcomp
gs
inc
add
jbe
jg
dec
iret
mov
rol
cmp
call
ja
or
hlt
outs
and
and
push
mov
int3
fwait
movs
out
(bad)
(bad)
(bad)
(bad)
js
push
sub
lods
pop
sub
inc
mov
xor
mov
shr
(bad)
in
mov
xor
cmps
in
jl
mov
lds
or
mov
jmp
or
dec
(bad)
mov
(bad)
(bad)
call
inc
lods
movs
and
pushf
not
in
mov
daa
sub
mov
add
jp
(bad)
(bad)
push
xchg
ins
lds
dec
cmp
and
xchg
stos
movs
mov
iret
(bad)
(bad)
(bad)
(bad)
aas
sbb
rcr
mov
(bad)
sbb
lock
mov
fiadd
mov
call
pop
xchg
in
xchg
dec
shl
cmp
jo
loop
xor
setb
(bad)
(bad)
inc
test
xchg
mov
adc
mov
fild
stos
fiadd
sub
mov
(bad)
(bad)
cld
leave
inc
add
imul
add
pop
outs
test
in
lock
cmp
jmp
mov
mov
call
cmp
cmp
(bad)
(bad)
(bad)
(bad)
ficom
mov
stc
jo
cmp
and
push
loope
neg
mov
daa
cmc
inc
pop
retf
scas
cli
(bad)
dec
fld
pop
and
jecxz
mov
or
jno
aam
clc
add
stos
jmp
sub
dec
in
lds
repz
fld
sub
(bad)
inc
mov
(bad)
ret
adc
sti
imul
mov
mov
(bad)
(bad)
jmp
pop
pop
xor
adc
or
pop
sbb
pop
xchg
retf
cmps
addr16
(bad)
(bad)
jmp
aas
in
(bad)
aas
fwait
leave
ret
retf
push
sub
das
add
dec
jg
fild
dec
addr16
jg
inc
push
sahf
pop
fidivr
test
pop
mov
cmp
xchg
adc
repz
jns
stos
scas
xor
mov
stos
pop
or
aad
les
rcl
mov
sbb
movs
add
(bad)
jmp
enter
sub
dec
add
xor
sbb
fdiv
scas
(bad)
cmp
pop
ror
add
loop
xchg
adc
mov
lock
repnz
and
add
ds
dec
ins
dec
lock
(bad)
(bad)
(bad)
jmp
dec
inc
xchg
sub
mov
inc
push
and
pushf
ror
mov
jge
dec
pop
(bad)
(bad)
(bad)
(bad)
mov
scas
mov
cmp
iret
xor
cmp
(bad)
mov
mov
jmp
jle
bound
pop
aad
jb
call
add
mov
jmp
daa
xchg
add
adc
push
push
sub
mov
jecxz
sbb
into
call
(bad)
pop
lods
out
pop
sbb
adc
out
xchg
dec
pop
cmc
(bad)
push
imul
jnp
mov
sbb
pavgw
sbb
aaa
cld
(bad)
in
pop
add
fwait
mov
aad
cmp
push
jns
int3
lods
mov
sub
(bad)
(bad)
(bad)
inc
loop
sti
cmp
push
cdq
sbb
shl
adc
arpl
xchg
dec
sub
mov
lds
dec
sub
fnstenv
imul
imul
jg
jg
sbb
dec
repz
inc
mov
pop
jns
cmp
(bad)
jmp
pop
jge
test
or
mov
pusha
popf
and
pop
call
pop
pop
dec
scas
test
stos
fwait
iret
out
call
sub
hlt
sbb
shl
push
call
and
(bad)
(bad)
inc
ror
or
pop
pop
mov
cmp
iret
mov
dec
sub
mov
arpl
lods
xchg
(bad)
(bad)
(bad)
push
loop
call
clc
arpl
jno
imul
fst
out
mov
cli
(bad)
mov
and
test
cmp
in
pop
and
dec
push
(bad)
inc
retf
in
sbb
(bad)
(bad)
jmp
push
add
aaa
or
jns
in
jmp
mov
lahf
or
fldenv
and
(bad)
(bad)
(bad)
mov
dec
in
dec
mov
out
pop
cmp
jne
fs
push
fdiv
(bad)
(bad)
(bad)
jmp
imul
les
jecxz
push
mov
mov
jecxz
imul
add
cli
push
cmp
dec
neg
(bad)
(bad)
dec
rcl
pop
ret
cmps
push
idiv
es
loopne
add
push
(bad)
(bad)
(bad)
mov
cmp
and
and
(bad)
inc
push
cld
dec
push
push
and
pop
cld
(bad)
jmp
mov
ja
ins
pop
fcom
popf
xor
lods
add
or
pop
rol
pop
ins
sbb
fdivr
jge
xor
and
(bad)
call
mov
test
add
push
lods
push
xchg
or
fmul
into
add
sub
(bad)
(bad)
(bad)
call
mov
mov
aas
shl
jecxz
sub
dec
jns
daa
sbb
aas
xor
sbb
outs
and
(bad)
(bad)
in
and
mov
and
or
add
data16
outs
mov
cmc
pop
push
and
mov
cdq
lea
(bad)
call
add
push
gs
pop
cmp
push
pop
fwait
in
adc
xor
push
mov
adc
(bad)
(bad)
(bad)
cmp
stos
sub
dec
clc
dec
xor
cs
inc
sub
adc
xor
mov
xchg
(bad)
(bad)
(bad)
call
push
call
pop
pop
inc
xchg
stos
push
or
(bad)
cmp
mov
or
inc
call
push
es
call
cmp
sub
sub
or
mov
pop
add
push
pop
in
bound
mov
sahf
in
pop
mov
mov
mov
(bad)
(bad)
jmp
mov
test
cmp
cmp
rcr
fldcw
cmps
jb
nop
inc
es
cmp
sahf
neg
sbb
call
repz
ret
dec
adc
hlt
mov
out
dec
sub
dec
retf
int3
cmp
mov
inc
cmp
pop
jns
lods
idiv
retf
stc
sti
(bad)
lock
(bad)
(bad)
out
mov
add
xchg
sub
cmp
sub
shl
call
push
adc
xor
pop
outs
cwde
popf
sbb
(bad)
(bad)
call
mov
test
xor
mov
push
cmp
enter
cli
pop
dec
mov
dec
sbb
ja
pusha
inc
ret
idiv
jnp
cmp
rcl
push
cmp
adc
xlat
in
(bad)
(bad)
(bad)
(bad)
inc
mov
scas
aaa
movs
xor
test
cli
inc
mov
add
movs
dec
mov
pop
hlt
(bad)
push
jl
out
je
sub
and
ins
or
adc
(bad)
(bad)
inc
das
lahf
mov
mov
inc
je
ss
xor
mov
outs
jecxz
jmp
inc
in
fisttp
loop
mov
jne
outs
call
(bad)
(bad)
(bad)
(bad)
mov
or
adc
das
mov
mov
jae
sub
in
out
sbb
or
mov
fwait
sub
aad
xchg
fnop
xchg
aam
(bad)
(bad)
jg
sub
adc
loop
adc
or
push
xchg
sbb
scas
imul
xchg
dec
loop
arpl
jo
xchg
aam
inc
icebp
sub
cmp
icebp
fisub
fdivr
xlat
cmp
adc
outs
inc
push
outs
ror
mov
(bad)
(bad)
(bad)
push
call
xchg
pop
push
inc
and
or
pop
pusha
mov
(bad)
(bad)
call
iret
fdivr
inc
lods
jae
jnp
push
inc
dec
fld
and
xchg
xor
xor
add
push
adc
out
sbb
movs
pop
aas
jns
nop
sar
inc
ret
inc
sbb
test
pusha
xor
or
loop
jecxz
jmp
(bad)
movs
mov
inc
out
in
data16
mov
es
imul
xlat
pop
cwde
dec
in
aaa
mov
(bad)
bound
pop
ficom
test
rol
sub
cmp
inc
or
(bad)
call
call
outs
sub
cmc
cli
neg
test
es
pop
pop
cmp
push
icebp
js
icebp
and
jmp
pusha
in
or
add
pop
sub
rol
inc
jmp
(bad)
(bad)
(bad)
jmp
loope
js
rcr
mov
inc
xchg
loop
pop
fs
push
lds
les
sub
xor
xchg
push
or
xchg
out
test
jmp
xchg
sti
les
(bad)
(bad)
jmp
inc
test
into
into
iret
popa
mov
xor
push
cmc
or
mov
xor
sahf
sbb
inc
lea
out
(bad)
(bad)
call
jmp
push
mov
dec
cmp
ja
cmps
add
jmp
sbb
pusha
jno
out
sub
inc
jecxz
ret
not
(bad)
(bad)
(bad)
call
fisttp
add
(bad)
sbb
lock
xor
push
test
ja
jbe
je
out
retf
jno
pop
lock
push
pop
adc
(bad)
(bad)
(bad)
aas
daa
cmp
xor
pop
push
loopne
cmps
jbe
aaa
sbb
(bad)
leave
push
pop
(bad)
(bad)
(bad)
dec
mov
test
sahf
imul
not
repz
ins
mov
pusha
das
jmp
imul
mov
inc
aad
push
imul
adc
loop
leave
push
cdq
and
(bad)
aam
iret
in
push
push
rep
push
cld
(bad)
jmp
pushf
inc
clc
ror
add
and
stos
scas
mov
inc
dec
xchg
or
inc
dec
push
(bad)
mov
sbb
out
dec
mov
ins
cmp
(bad)
cmp
(bad)
(bad)
jmp
stc
ja
stc
repnz
gs
pushf
ss
sbb
call
(bad)
(bad)
(bad)
call
sar
dec
cld
in
xchg
mov
inc
add
stc
not
cdq
les
jae
(bad)
mov
xlat
aas
ins
(bad)
(bad)
(bad)
call
xchg
push
popf
retf
add
pop
sbb
mov
out
gs
in
stc
pushf
out
add
mov
dec
inc
mov
ror
inc
pop
out
push
ds
push
(bad)
(bad)
(bad)
(bad)
cld
pop
cmp
fsubrp
rcr
ss
adc
mov
out
or
jns
mov
(bad)
(bad)
inc
sbb
ficomp
xor
dec
(bad)
mov
mov
outs
push
test
inc
pusha
mov
mov
push
push
push
std
push
aad
sub
bound
scas
mov
cmp
and
sahf
pop
pop
test
(bad)
(bad)
(bad)
jmp
sub
call
mov
and
out
in
mov
sub
(bad)
(bad)
call
cmp
outs
idiv
div
(bad)
not
push
cli
or
or
aas
mov
(bad)
(bad)
(bad)
cmp
outs
pop
mov
out
adc
int
pmaxsw
pushf
mov
jl
(bad)
and
clc
xor
inc
out
movs
fwait
sub
clc
jecxz
jg
(bad)
sub
(bad)
sahf
xor
mov
cmps
mov
sub
pop
ret
inc
jge
(bad)
cli
cmps
test
dec
pop
dec
(bad)
(bad)
(bad)
call
mov
test
pop
vpperm
test
stos
(bad)
mov
cmc
jnp
(bad)
(bad)
mov
xor
inc
mov
cmps
inc
mov
xor
dec
push
cdq
mov
and
xor
test
rol
in
cmp
sub
rcr
out
(bad)
(bad)
(bad)
(bad)
fistp
movs
cmp
icebp
adc
ret
mov
xchg
add
inc
enter
(bad)
(bad)
dec
(bad)
pop
fnsave
mov
mov
mov
sub
mov
int3
clc
jg
jmp
mov
stc
sbb
adc
movq
mov
outs
jp
jb
(bad)
(bad)
(bad)
out
int3
jne
mov
popf
pop
adc
cmps
adc
shl
jo
stc
cs
hlt
xchg
mov
(bad)
(bad)
(bad)
jl
jae
and
rol
int3
jl
xor
out
push
fadd
jbe
jb
mov
(bad)
(bad)
(bad)
(bad)
cmp
xchg
lea
xchg
push
mov
outs
lock
dec
and
add
(bad)
(bad)
call
or
loopne
xor
cmp
adc
icebp
scas
call
mov
faddp
jb
jo
and
mov
stos
ror
call
call
cld
jmp
fbstp
dec
invd
push
dec
cdq
(bad)
cmp
push
adc
cdq
push
add
dec
test
push
pop
jbe
ins
jmp
cli
in
jb
enter
lods
int3
xchg
pusha
add
neg
das
xchg
mov
dec
iret
add
cmp
inc
mov
(bad)
call
cld
or
and
xchg
nop
sbb
pop
or
repz
repnz
int3
dec
mov
push
mov
jle
ret
jno
rol
adc
(bad)
mov
mov
(bad)
(bad)
call
(bad)
fld1
pop
xchg
dec
bound
hlt
repz
sub
mov
xchg
into
loop
(bad)
call
leave
ins
or
mov
pop
(bad)
sub
mov
sub
dec
sub
push
lds
xchg
mov
ror
ret
(bad)
jg
add
dec
bound
mov
jp
test
push
retf
(bad)
lods
push
into
(bad)
(bad)
call
aad
pushf
or
loope
(bad)
pop
mov
sub
xchg
sbb
lds
push
dec
(bad)
jg
jmp
sub
(bad)
enter
dec
push
jo
fsubr
or
cmps
sar
(bad)
(bad)
jmp
xor
ins
xchg
(bad)
and
les
and
(bad)
mov
in
(bad)
dec
lock
jno
out
xor
cmps
stos
jp
jmp
sbb
dec
inc
aam
cld
(bad)
jmp
cs
js
mov
pop
lahf
sbb
add
sbb
and
dec
add
xchg
xchg
pop
mov
mov
fst
inc
(bad)
icebp
cmp
mov
push
mov
jmp
loopne
mov
es
scas
rol
in
stos
imul
aam
inc
aaa
push
mov
xchg
(bad)
(bad)
inc
rcl
imul
jb
push
rol
dec
ins
xchg
push
add
adc
(bad)
inc
stc
pop
jmp
test
data16
(bad)
call
mov
xor
xor
fcomp
or
and
(bad)
call
sbb
xchg
lods
and
dec
sub
repnz
jmp
and
cmp
and
push
(bad)
(bad)
(bad)
adc
and
adc
clc
cmc
ror
mov
xor
mov
(bad)
call
add
or
je
jbe
ds
std
xor
stos
shl
cmp
call
fcmove
lahf
dec
cmp
aam
lock
dec
xchg
(bad)
(bad)
jmp
addr16
mov
movs
rcl
pop
cdq
inc
jle
xor
fidivr
jmp
dec
add
jl
cwde
das
xor
mov
out
inc
jmp
iret
xchg
pop
not
repz
inc
jo
or
sbb
xchg
mov
mov
push
push
(bad)
jg
(bad)
adc
cmps
loop
stc
retf
lds
ret
xchg
test
outs
sub
sbb
ret
clc
pushf
gs
clc
dec
and
std
sahf
mov
mov
push
inc
in
xchg
cmps
(bad)
in
sub
icebp
leave
inc
push
mov
inc
jmp
mov
jle
xchg
cmp
(bad)
in
mov
ret
pop
or
xchg
ret
mov
les
into
popf
into
jge
push
mov
(bad)
(bad)
call
in
data16
popa
(bad)
in
adc
sbb
movs
xchg
aam
sahf
sub
or
push
dec
(bad)
(bad)
call
test
hlt
in
dec
in
shr
mov
div
sbb
pop
hlt
jmp
pop
xor
push
jne
lahf
lods
adc
pushf
inc
jb
(bad)
(bad)
call
mov
retf
lds
out
stos
inc
in
cmp
jge
arpl
push
xor
push
pusha
cmp
test
sbb
cmps
aam
push
ins
inc
jmp
or
sub
(bad)
(bad)
(bad)
jge
cld
inc
mov
inc
or
std
jae
xor
adc
ret
bound
xchg
xor
dec
call
call
shl
xchg
in
inc
mov
sbb
lock
sbb
stos
popa
(bad)
jmp
fwait
mov
mov
retf
ins
fisttp
mov
(bad)
jg
mov
scas
daa
adc
and
nop
in
dec
push
(bad)
ss
fcomip
jmp
jge
inc
jecxz
lods
std
test
jg
ds
movs
mov
sahf
retf
add
pop
retf
nop
mov
aam
pop
(bad)
(bad)
(bad)
push
stos
pop
push
inc
xchg
push
in
scas
mov
mov
fiadd
les
jbe
jmp
imul
scas
loop
enter
push
cli
(bad)
in
call
or
into
nop
dec
mov
fidivr
clc
push
adc
mov
add
out
clc
inc
cwde
lods
mov
movs
push
pop
(bad)
(bad)
(bad)
jns
pop
sar
rcl
or
ins
sbb
xchg
inc
pop
scas
dec
test
or
push
fidivr
cs
cmp
dec
sub
call
mov
fwait
cld
xor
jmp
or
arpl
fxch
jb
pop
(bad)
xor
cmps
(bad)
call
cmps
(bad)
(bad)
(bad)
jmp
or
pop
pusha
xor
out
mov
not
jbe
xor
jmp
bound
pop
int3
xor
cmp
out
mov
mov
lock
sbb
mov
in
inc
mov
repnz
lahf
pop
cmp
mov
shl
cmp
push
mov
inc
push
loope
adc
add
mov
jecxz
sbb
and
(bad)
call
cld
dec
lock
repnz
pop
sbb
in
or
mov
(bad)
(bad)
jg
add
pop
mov
adc
xchg
lods
push
jbe
mov
xor
and
(bad)
jmp
clc
sub
mov
xor
pop
push
mov
cmp
outs
clc
(bad)
(bad)
jg
or
stos
jmp
enter
and
mov
add
inc
push
push
mov
fld
pusha
fstp
in
mov
inc
mov
popf
xchg
aam
xchg
bound
popf
push
and
jge
jg
dec
loope
jb
sbb
add
(bad)
(bad)
jg
and
pop
loopne
stos
aad
sar
fdiv
or
mov
jmp
xor
or
mov
cs
mov
mov
jmp
cmp
rcl
dec
mov
sti
imul
jnp
ret
(bad)
(bad)
(bad)
inc
ss
sub
or
outs
xchg
sbb
add
mov
push
mov
inc
enter
(bad)
(bad)
(bad)
(bad)
cmps
lock
das
push
xchg
retf
push
add
jmp
jnp
add
add
pop
or
popf
fidivr
sahf
jmp
shl
sahf
mov
daa
int3
or
(bad)
sub
push
xor
scas
xchg
sbb
inc
in
ret
std
inc
and
cmp
push
xor
test
in
sbb
xchg
repnz
add
fwait
dec
mov
push
or
add
sub
push
arpl
(bad)
(bad)
dec
jp
shl
lock
add
gs
cmps
lods
in
adc
jmp
clc
push
(bad)
(bad)
(bad)
call
jg
sub
icebp
repnz
cld
cli
in
xchg
pushf
call
mov
dec
repnz
loop
(bad)
(bad)
(bad)
jmp
and
pop
push
addr16
pop
or
aaa
sub
xor
mov
add
xchg
sbb
cmp
(bad)
(bad)
inc
jge
pop
sub
mov
fmul
rcr
das
aas
fidivr
mov
sbb
aas
or
mov
inc
sbb
or
mov
jmp
inc
and
xchg
mov
imul
jmp
scas
iret
outs
ret
mov
ds
fdiv
in
jmp
pushf
fsubp
push
mov
loop
retf
jg
call
cld
sbb
and
sahf
sub
sbb
(bad)
(bad)
(bad)
inc
push
in
push
rcr
inc
daa
lods
stos
ds
jge
ss
mov
popf
scas
xchg
cmp
pop
push
mov
jmp
pop
inc
jg
fwait
call
jb
fwait
ins
addr16
dec
ins
popa
adc
add
(bad)
(bad)
push
sbb
mov
outs
ss
imul
sahf
xor
inc
xchg
hlt
(bad)
aas
push
inc
pop
jmp
out
out
iret
push
loope
lods
add
out
(bad)
(bad)
(bad)
call
xchg
gs
push
imul
sub
ficomp
adc
sar
call
adc
(bad)
(bad)
(bad)
jmp
adc
daa
sub
inc
test
in
mov
add
(bad)
(bad)
(bad)
dec
and
xchg
jbe
push
out
inc
and
icebp
mov
sub
(bad)
(bad)
(bad)
jmp
retf
adc
je
aas
jp
mov
iret
cmp
jnp
mov
jns
mov
jmp
inc
or
cmp
(bad)
and
(bad)
(bad)
call
loopne
loop
xchg
mov
cmc
(bad)
(bad)
(bad)
out
enter
jo
xor
jb
pop
jg
pop
pop
inc
or
fbld
cmp
adc
cmp
lods
(bad)
outs
push
shl
cli
cmps
(bad)
(bad)
cli
iret
retf
cmp
sahf
jae
xlat
cmps
xchg
(bad)
jle
movs
sub
inc
jb
cmp
and
or
sbb
fcomi
(bad)
(bad)
(bad)
call
adc
rcr
fs
cmp
fs
xchg
xor
sbb
pop
je
(bad)
(bad)
(bad)
call
test
sub
hlt
cmp
sar
xchg
cmps
ror
cmp
lock
jns
sbb
inc
mov
test
rol
mul
call
mov
movs
and
push
push
jp
pop
cdq
jbe
xor
mov
cmp
add
(bad)
cmc
(bad)
add
call
jle
bound
mov
retf
sub
jmp
mov
adc
xchg
(bad)
(bad)
in
xchg
inc
sub
jae
sahf
pop
push
pushf
jle
xor
ficomp
scas
(bad)
(bad)
cli
mov
mov
or
mov
cmp
mov
frstor
cmp
xlat
jmp
cli
(bad)
in
adc
test
lock
fwait
test
jmp
adc
mov
(bad)
mov
inc
ret
xor
jo
(bad)
bound
xor
shl
out
inc
into
fmul
mov
push
adc
fdiv
es
fstcw
mov
mov
xchg
aam
dec
jmp
das
add
cli
push
fwait
(bad)
(bad)
(bad)
leave
adc
dec
inc
retf
push
cld
call
xchg
cmps
jmp
daa
fld
dec
xor
and
mov
(bad)
jmp
sub
add
push
cwde
and
mov
push
out
ja
mov
ds
cmp
xor
dec
cld
les
inc
dec
(bad)
(bad)
(bad)
(bad)
fnstcw
push
jl
rcl
retf
ds
xlat
mov
pop
and
test
fadd
icebp
cli
jmp
push
inc
inc
add
aas
sbb
dec
push
and
inc
out
(bad)
(bad)
(bad)
call
movs
push
sub
xchg
jp
xor
mov
dec
(bad)
and
mov
out
fdiv
sub
fild
adc
dec
mov
dec
and
mov
ins
cmp
(bad)
jmp
les
cli
retf
dec
jbe
pop
sub
adc
add
ja
and
mov
lock
(bad)
ds
mul
mov
mov
sbb
pop
(bad)
dec
xchg
fistp
aam
pop
cmp
std
call
mov
std
sbb
adc
(bad)
jmp
out
js
add
fidivr
and
mov
bound
ja
or
popa
scas
data16
pop
inc
xchg
test
cdq
or
sti
or
cmp
mov
fs
out
leave
pop
aad
inc
jp
mov
ror
pop
fdiv
mov
adc
fidivr
adc
enter
fwait
mov
jp
dec
les
(bad)
mov
jmp
cmp
loop
out
pop
aas
push
mov
mov
ja
stos
dec
sbb
rol
(bad)
dec
cmp
mov
push
(bad)
sbb
mov
lds
xor
jl
adc
(bad)
(bad)
(bad)
(bad)
jmp
imul
mov
(bad)
repz
sbb
push
mov
jbe
cld
jmp
fcomp
fwait
xor
icebp
fwait
dec
xor
inc
jecxz
fiadd
(bad)
jg
add
sbb
push
js
jecxz
jg
arpl
outs
test
mov
add
shl
data16
cmps
or
mov
(bad)
dec
gs
test
out
or
nop
in
dec
jns
xor
push
cmp
sbb
xor
cld
(bad)
jmp
cld
out
xor
addr16
jmp
and
aam
out
addr16
(bad)
(bad)
inc
mov
fdivr
fs
dec
test
jo
fcomp
imul
iret
xor
(bad)
(bad)
(bad)
stc
xchg
nop
arpl
cmc
repnz
call
or
mov
(bad)
jg
or
pusha
inc
adc
frstor
nop
pop
(bad)
ds
fcomp
cmp
retf
inc
push
jge
shl
aaa
aas
retf
inc
fld
mov
test
cdq
dec
(bad)
(bad)
(bad)
inc
mov
jnp
js
dec
scas
pusha
add
jmp
jg
je
add
sub
pop
sbb
(bad)
(bad)
dec
fwait
or
bnd
fstp
js
cli
dec
popa
mov
test
sbb
(bad)
(bad)
call
pop
and
push
xchg
cmp
push
das
xchg
arpl
int
(bad)
clc
icebp
ret
(bad)
(bad)
(bad)
inc
or
push
cmp
xchg
push
stc
mov
sbb
or
mov
(bad)
(bad)
(bad)
dec
cmp
jp
xor
and
mov
mov
in
call
(bad)
call
loopne
(bad)
idiv
mov
xchg
mul
adc
loope
(bad)
(bad)
(bad)
mov
imul
jg
mov
sub
je
mov
jecxz
sti
(bad)
call
(bad)
cwde
ss
enter
sbb
lods
pop
ins
fwait
je
mov
dec
sub
mov
xor
scas
mov
pop
sbb
fstp
xlat
lods
mov
or
jmp
cli
adc
adc
push
mov
inc
pop
int
inc
mov
xchg
(bad)
mov
sti
inc
cdq
std
xchg
xchg
scas
fistp
(bad)
or
push
cld
repnz
add
test
sbb
xor
push
fidivr
stos
aad
fadd
(bad)
(bad)
inc
popa
sub
fiadd
stos
scas
xlat
fstp
hlt
sub
aas
push
inc
mov
movs
cmc
adc
mov
jns
(bad)
(bad)
(bad)
(bad)
jle
pop
cmps
push
stos
neg
shl
xchg
xchg
mov
cmp
retf
jbe
sbb
fmul
fcom
dec
nop
je
mov
div
mov
fsub
or
rcl
mov
mov
cdq
mov
ret
in
adc
test
sbb
cmps
mov
lock
(bad)
(bad)
inc
mov
pop
daa
dec
bound
shl
arpl
bound
mov
jg
mov
mov
pop
inc
in
push
(bad)
fist
adc
cmp
add
aaa
std
(bad)
inc
sar
jg
inc
cld
clc
cmp
mov
dec
xor
fsubr
jb
pop
sbb
push
sbb
stos
jbe
or
pop
inc
(bad)
icebp
(bad)
jmp
sbb
and
inc
xor
(bad)
jmp
out
and
ss
push
ret
pusha
pop
cwde
sbb
pop
mov
(bad)
(bad)
(bad)
cld
sub
jno
adc
ret
leave
stc
xchg
fiadd
adc
and
push
sbb
ja
(bad)
(bad)
push
imul
push
pop
stos
ss
xchg
retf
hlt
call
test
(bad)
mov
leave
and
sbb
pop
sbb
jnp
add
push
cmp
movs
out
add
pop
or
jge
(bad)
(bad)
mov
pop
test
dec
fs
cmp
int3
je
mov
mov
gs
adc
(bad)
(bad)
(bad)
jmp
mov
push
ret
push
lods
adc
fsubr
mov
bound
mov
pop
das
daa
movs
enter
mov
and
push
xchg
or
sub
(bad)
(bad)
jmp
fiadd
mov
retf
lock
xlat
ss
adc
imul
(bad)
call
stos
ret
aas
mov
jno
iret
rcl
cmps
loope
jp
lods
sti
and
jmp
dec
(bad)
dec
push
add
or
sub
dec
xchg
(bad)
jg
sub
mov
pop
or
inc
hlt
add
out
sub
add
pusha
shr
nop
pop
and
(bad)
(bad)
jmp
mov
mov
dec
sti
(bad)
popa
in
push
xor
jne
sti
int
das
xchg
mov
pop
(bad)
(bad)
(bad)
call
sti
xor
sti
out
mov
loope
repz
sub
mov
xlat
and
stos
ins
(bad)
(bad)
(bad)
jmp
and
add
popf
mov
add
adc
(bad)
push
(bad)
mov
adc
or
xchg
jmp
xchg
sahf
dec
out
xchg
dec
sbb
cmp
add
cmp
dec
dec
dec
xchg
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
aam
xchg
cwde
and
stos
test
xlat
fsub
and
aad
in
or
cmp
enter
pop
into
adc
mov
ficom
loopne
jg
(bad)
in
push
mov
in
(bad)
sbb
pop
es
mov
retf
shl
xchg
inc
inc
sar
(bad)
inc
in
shl
sbb
fdiv
xchg
ja
pop
(bad)
fadd
xchg
in
hlt
jle
jmp
adc
(bad)
(bad)
fisubr
xchg
rcr
clc
jns
push
xor
js
jb
ret
push
aas
or
and
fistp
xchg
mov
xchg
call
jns
xor
pop
mov
xchg
imul
jno
addr16
sub
xor
(bad)
jmp
add
mov
sti
mov
cmps
aas
cmp
(bad)
call
adc
xchg
add
loopne
inc
leave
dec
sti
je
imul
xchg
jns
call
sub
cs
fwait
(bad)
retf
ror
daa
dec
and
out
mov
xor
mov
stos
cwde
push
sbb
mov
push
adc
cmp
jnp
mov
stos
dec
inc
jp
xchg
dec
fstp
dec
or
inc
fnstenv
sub
cmps
xchg
scas
jmp
sub
mov
push
movs
test
push
push
repnz
xchg
or
(bad)
in
in
call
lods
pushf
retf
inc
mov
fidivr
nop
stos
mov
pop
jmp
adc
(bad)
mov
jns
sub
mov
mov
dec
jge
push
jle
call
mov
repz
xchg
cmps
mov
arpl
pop
sub
(bad)
jg
jmp
repnz
xchg
xor
push
dec
mov
jbe
(bad)
stos
push
xor
add
jp
mov
repz
xor
push
jge
popa
xlat
sti
pop
push
leave
push
fisttp
inc
jle
adc
(bad)
dec
bound
sbb
stos
cmps
mov
push
bound
stos
stos
test
movs
xlat
sbb
(bad)
(bad)
(bad)
call
(bad)
(bad)
cli
dec
ret
and
fstp
xchg
lods
ret
jmp
or
or
(bad)
(bad)
push
arpl
push
or
adc
push
(bad)
jp
cld
jne
leave
sub
or
adc
mov
inc
sub
cmc
outs
out
add
daa
or
pop
mov
pop
inc
dec
ret
add
pop
popa
sbb
(bad)
(bad)
(bad)
cmp
fcomp
hlt
sub
enter
mov
inc
sub
pop
in
movs
sbb
mov
or
mov
ret
or
xchg
lods
mov
xor
loop
ins
mov
gs
lock
test
mov
cld
inc
mov
jg
or
mov
xor
std
icebp
inc
bnd
mov
cmp
(bad)
(bad)
mov
out
stc
fld
push
cmps
hlt
out
and
(bad)
(bad)
jmp
imul
push
ret
xchg
and
lea
mov
fimul
adc
xchg
(bad)
(bad)
(bad)
call
jmp
inc
je
push
sbb
mov
pop
aaa
mov
jno
scas
pop
pop
arpl
cmp
jecxz
mov
(bad)
push
push
push
xchg
data16
mov
aaa
jb
or
dec
dec
inc
xchg
(bad)
cmps
cld
call
xchg
in
push
xor
call
and
mov
xchg
ss
(bad)
call
jmp
loopne
mov
mov
fcmovb
cmps
add
shr
in
cwde
clc
(bad)
(bad)
ds
pushf
mov
xor
push
aad
and
inc
repnz
xlat
jge
(bad)
fisttp
mov
es
and
mov
jmp
add
adc
jmp
ret
fwait
lea
imul
mov
adc
dec
mov
test
mov
dec
nop
das
cmps
mov
add
std
fldcw
in
cli
clc
lods
cmc
shl
xor
pop
push
dec
push
xchg
lock
push
cmp
mov
out
or
sbb
and
or
(bad)
(bad)
(bad)
dec
jecxz
adc
outs
mov
cmc
arpl
leave
mov
ins
enter
sbb
(bad)
(bad)
inc
cld
add
push
pop
and
jg
ror
dec
(bad)
(bad)
cmp
sbb
or
loop
ficom
scas
call
cmp
or
adc
xchg
retf
or
repz
jle
push
mov
(bad)
(bad)
(bad)
dec
fadd
dec
stos
pop
inc
mov
cmps
loopne
test
lea
or
and
(bad)
jmp
(bad)
aad
les
xor
or
mov
add
inc
rol
xchg
pushf
loopne
mov
(bad)
inc
dec
and
jnp
ror
pop
or
and
mov
dec
in
xor
or
add
jmp
sbb
mov
aad
(bad)
(bad)
(bad)
(bad)
cmp
clc
das
dec
jae
sbb
and
and
mov
sbb
call
test
shl
test
and
push
mov
test
call
push
call
loopne
test
call
push
mov
into
or
jg
out
int
push
mov
jecxz
push
sub
xchg
inc
(bad)
sbb
aaa
shl
jg
jmp
add
mov
xchg
jb
mov
sub
push
sub
call
fcom
fstp
dec
retf
jl
sbb
call
and
push
pop
ret
mov
dec
fcomp
fisubr
pop
adc
stos
mov
dec
ret
push
sub
outs
push
addr16
lds
rcl
outs
setne
out
jno
ss
sub
pop
xor
ins
jns
lods
cmp
(bad)
(bad)
call
(bad)
(bad)
jp
cmp
jbe
cmc
test
(bad)
mov
mov
(bad)
call
add
jbe
cmp
adc
test
inc
sub
sar
scas
(bad)
aad
(bad)
cmp
(bad)
(bad)
jmp
and
call
call
cmc
imul
xchg
je
les
and
test
cmp
jnp
mov
xlat
cs
mov
and
mov
jge
(bad)
(bad)
call
sahf
xor
movs
shl
lds
mov
sbb
movs
push
and
ss
(bad)
(bad)
dec
xchg
dec
fidivr
jne
jns
add
adc
adc
mov
sets
cmp
mov
pop
ja
cmp
add
popf
rcr
dec
(bad)
(bad)
(bad)
(bad)
js
imul
and
enter
ds
cmp
pop
call
(bad)
call
(bad)
mov
sbb
jmp
imul
add
(bad)
(bad)
(bad)
call
sbb
dec
jge
imul
dec
mov
cwde
jmp
inc
fisttp
pusha
mov
sbb
mov
hlt
(bad)
(bad)
jmp
pop
(bad)
push
mov
xor
inc
and
xchg
in
sub
mov
out
jns
xchg
and
mov
mov
jb
stos
(bad)
(bad)
call
aad
cwde
mov
jns
mov
jp
ja
pop
sbb
dec
push
jmp
(bad)
(bad)
(bad)
(bad)
jl
or
gs
cmp
or
xor
outs
(bad)
cmp
in
dec
scas
sub
adc
jae
inc
imul
stos
cmp
xchg
inc
aaa
in
pushf
inc
mov
aas
cmc
cmp
dec
outs
jmp
in
lds
add
into
or
xor
ss
shl
out
mov
(bad)
outs
cs
les
cs
daa
(bad)
(bad)
push
retf
or
sub
sub
pop
xchg
pop
int3
xlat
fidiv
clc
pop
std
(bad)
jmp
pop
fcomp
pop
js
dec
fmul
xor
sbb
mov
jg
and
loopne
test
inc
rcr
jae
cs
cmps
(bad)
jmp
or
inc
daa
pop
mov
in
xlat
sub
cmc
mov
adc
mov
cld
repnz
xor
(bad)
jmp
into
mov
dec
aas
sbb
push
movs
nop
les
lahf
jb
ja
mov
dec
or
fnstsw
enter
sub
(bad)
(bad)
jmp
xchg
pop
ss
scas
jnp
sbb
bound
scas
ss
mov
pop
jle
enter
test
pminsw
imul
sub
inc
fcmovb
pop
xchg
lds
imul
ret
sub
mov
mov
xor
(bad)
(bad)
jmp
les
push
fs
in
outs
cmps
ss
push
jle
push
repz
ss
xchg
es
sub
lock
(bad)
jmp
xchg
pop
inc
shl
mul
(bad)
ins
jb
ds
call
ja
ins
push
(bad)
(bad)
call
div
sub
imul
mov
jmp
jp
and
adc
xchg
add
mov
or
push
sbb
push
push
pop
outs
sbb
(bad)
(bad)
dec
xor
iret
push
cmps
les
jae
fcom
xchg
out
or
adc
popa
jmp
mov
dec
sub
sbb
sbb
cdq
xchg
jmp
lahf
test
or
dec
aas
clc
mov
bound
call
in
xchg
mov
ret
push
mov
cmp
loopne
daa
(bad)
(bad)
(bad)
mov
aam
sub
or
and
push
push
dec
cmp
addr16
mov
(bad)
(bad)
inc
cwde
mov
into
sahf
mov
pop
retf
adc
lock
stc
adc
jno
out
cmps
pusha
mov
leave
mov
mov
pop
(bad)
aad
pop
mov
dec
mov
(bad)
push
retf
pop
and
cli
cmp
mov
sub
adc
(bad)
(bad)
jg
leave
into
cmp
inc
out
cmp
pushf
rcl
cmp
mov
std
(bad)
(bad)
(bad)
jmp
push
xchg
imul
adc
ror
push
push
pop
outs
mov
jle
mov
(bad)
(bad)
(bad)
call
and
push
jp
aad
mov
push
dec
in
adc
scas
jae
add
out
dec
outs
cli
(bad)
call
div
lock
mov
mov
add
data16
test
(bad)
push
or
push
or
ret
jne
ror
ins
pop
push
xchg
cs
cld
push
aas
fs
(bad)
(bad)
(bad)
mov
xor
push
cmp
int
push
rcl
jnp
push
push
lock
cmp
call
aam
sbb
jb
jmp
mov
push
shr
xchg
xor
or
or
pop
cs
dec
(bad)
(bad)
jmp
cwde
fisub
xchg
sub
in
dec
sahf
jae
call
pop
ret
(bad)
(bad)
push
mov
call
fcom
jnp
aas
add
sbb
dec
add
add
xlat
cmps
scas
add
iret
out
mov
push
pop
mov
jmp
rcl
scas
ficom
jge
add
scas
loop
inc
fadd
and
out
shl
(bad)
inc
jne
stos
hlt
jp
imul
cmps
call
stos
sahf
ds
jl
scas
rcl
clc
cmp
xlat
addr16
jmp
adc
dec
dec
dec
jg
add
out
or
call
call
xchg
fxtract
scas
cmps
stos
or
(bad)
cmp
(bad)
mov
adc
mov
fmul
sub
cdq
mov
imul
call
loopne
jmp
inc
xchg
add
(bad)
push
push
xchg
cmp
add
pop
sahf
pop
enter
imul
mov
scas
push
jle
push
inc
out
bnd
fist
add
sub
pop
sbb
jge
scas
and
(bad)
jns
sti
test
push
and
les
retf
(bad)
out
clc
call
adc
push
pop
repnz
repnz
scas
xchg
xchg
outs
call
stos
and
aam
xor
dec
(bad)
lea
pop
addr16
pop
jo
test
(bad)
push
pop
mov
and
shr
mov
mov
into
aas
mov
push
(bad)
call
fadd
daa
imul
mov
dec
nop
sbb
(bad)
out
sbb
fwait
cld
cli
jp
dec
xchg
leave
mov
push
cs
(bad)
(bad)
(bad)
fistp
pop
and
mov
fwait
rcr
sbb
inc
inc
popa
add
(bad)
inc
jns
pop
clc
(bad)
sub
jno
ins
xchg
sbb
(bad)
mov
mov
cdq
mov
fwait
dec
lods
into
movs
mov
es
aam
(bad)
(bad)
dec
jp
pop
pop
not
bt
mov
mov
es
dec
mov
adc
sub
(bad)
mov
pop
cmc
fs
and
sub
call
and
cli
(bad)
(bad)
jmp
(bad)
adc
pop
pop
mov
xchg
je
repnz
adc
jb
(bad)
(bad)
jmp
and
fwait
and
out
mov
cwde
or
mov
push
les
cli
push
or
push
sti
or
push
dec
(bad)
(bad)
(bad)
inc
cmp
mov
aas
add
(bad)
ret
mov
enter
psubb
dec
pop
mov
(bad)
(bad)
(bad)
push
scas
pop
ficom
cmps
rol
xchg
sbb
cwde
cli
in
sti
mov
lds
cmp
(bad)
(bad)
fxch
inc
inc
in
int3
in
lea
rcl
(bad)
or
add
movs
mov
adc
and
mov
jmp
scas
(bad)
(bad)
mov
cli
jmp
dec
lock
out
(bad)
(bad)
(bad)
mov
mov
cs
sbb
cld
scas
retf
xchg
jno
inc
ret
fisttp
(bad)
(bad)
(bad)
(bad)
jge
xchg
cmp
in
inc
mov
rol
pop
xor
xor
iret
leave
ret
(bad)
(bad)
jmp
xchg
lods
mov
sbb
xchg
push
adc
in
(bad)
aam
pop
mov
call
pop
sub
mov
in
mov
xchg
jmp
mov
jmp
cld
adc
sbb
xor
test
xchg
(bad)
push
mov
xlat
(bad)
call
fcom
cwde
xchg
pop
xchg
inc
rol
enter
stos
xchg
lahf
(bad)
(bad)
(bad)
dec
(bad)
das
int3
dec
cwde
mov
mov
ds
lds
cmp
adc
dec
(bad)
dec
xchg
sar
(bad)
call
out
jns
enter
shl
inc
je
mov
jle
jg
mov
gs
jp
inc
add
jnp
jae
xor
shl
and
cwde
or
pop
sub
not
clc
lods
sub
sbb
xlat
outs
mov
push
scas
(bad)
(bad)
(bad)
jmp
sub
imul
mov
arpl
or
push
mov
or
test
(bad)
(bad)
inc
repz
sbb
xchg
xchg
cmps
inc
add
jge
out
jmp
push
mov
out
in
dec
stos
push
aaa
out
sub
(bad)
jp
je
xchg
pop
sub
mov
outs
xor
mov
ss
(bad)
pop
ins
lock
ficom
xchg
jno
pop
out
enter
sbb
dec
inc
rol
inc
inc
jl
xor
into
mov
mov
mov
pop
call
lds
adc
sub
add
movs
or
pop
add
inc
cld
mov
lds
cli
add
sub
mov
lods
clc
cmp
fidiv
jmp
jmp
inc
sar
and
(bad)
(bad)
(bad)
(bad)
jp
fcmovu
jbe
(bad)
stos
cmp
hlt
sub
inc
inc
jns
packssdw
jmp
pop
xor
(bad)
(bad)
call
sbb
loop
mov
sub
das
ss
mov
sbb
imul
mov
imul
mov
lods
mov
fnsave
mov
dec
or
cmp
nop
xor
(bad)
sbb
jmp
ins
or
or
(bad)
popa
xchg
(bad)
dec
xchg
push
push
ds
loopne
scas
je
movs
sub
aaa
push
in
fwait
out
clc
inc
out
fisub
inc
shl
jg
pop
and
xor
cmp
fcomp
pop
mov
mov
push
std
call
cmp
out
jmp
xlat
and
xor
cmp
gs
mov
pop
cli
imul
test
bound
fdivr
cmp
mov
ins
inc
push
xor
(bad)
call
neg
in
js
pop
sti
nop
jnp
mov
inc
cmp
jb
add
sbb
mov
enter
adc
ins
mov
or
pop
fadd
mov
or
bound
cld
ficomp
and
test
xlat
rcl
(bad)
js
pop
xchg
dec
test
das
sahf
and
(bad)
(bad)
push
pop
cwde
pop
pop
xchg
xchg
mov
sbb
scas
inc
pop
(bad)
(bad)
(bad)
fistp
jecxz
stos
and
or
or
inc
mov
stos
mov
sub
ss
(bad)
(bad)
inc
in
inc
sbb
sar
fbld
xchg
cmc
loope
test
mov
bnd
in
lock
popa
and
xor
(bad)
(bad)
push
scas
inc
jmp
adc
mov
rol
cli
stos
idiv
call
cs
in
(bad)
(bad)
(bad)
fist
adc
jecxz
test
lods
push
mov
addr16
mov
inc
popf
push
imul
(bad)
(bad)
jns
inc
outs
popf
jne
inc
mov
pop
mov
ror
add
cmp
(bad)
out
je
xor
pop
es
scas
xchg
movs
popa
inc
cld
(bad)
(bad)
(bad)
cmp
or
(bad)
in
std
lds
pop
inc
stos
xor
mov
fistp
or
popa
sub
in
add
dec
sar
cmp
or
add
aas
leave
not
dec
jo
(bad)
(bad)
jmp
mov
xlat
mov
jmp
stos
ror
inc
lock
lods
retf
and
loopne
(bad)
mov
pusha
out
sbb
(bad)
cld
dec
(bad)
(bad)
call
push
jecxz
push
jmp
add
stc
inc
out
in
and
repnz
pop
xor
push
jb
and
in
mov
dec
mov
inc
fldcw
xchg
sub
cwde
mov
std
(bad)
inc
ins
fadd
cmp
push
loope
push
(bad)
(bad)
call
mov
clc
shl
sti
adc
or
push
leave
inc
xor
xchg
sti
inc
stos
adc
enter
push
xchg
(bad)
mov
cmp
lock
call
add
adc
ds
sbb
js
(bad)
call
cmp
pop
push
or
shl
inc
stos
mov
and
(bad)
(bad)
(bad)
clc
(bad)
mov
je
jno
push
test
ss
jns
test
inc
sub
add
sub
xchg
daa
and
enter
or
(bad)
(bad)
(bad)
(bad)
call
je
xchg
arpl
cli
ret
das
clc
inc
cmp
mov
sub
dec
push
cmc
mov
es
pop
(bad)
(bad)
push
sti
and
call
sti
leave
and
cld
sub
fmul
(bad)
mov
push
adc
mov
adc
shl
(bad)
(bad)
(bad)
call
push
inc
test
xchg
cli
popa
sub
adc
mov
(bad)
cmp
pop
mov
mov
(bad)
(bad)
(bad)
jmp
mov
lods
aam
push
add
push
mov
sub
pop
xchg
loopne
popf
mov
cmp
xchg
es
imul
push
inc
ins
push
aas
ret
(bad)
jmp
or
(bad)
call
inc
mov
ds
cs
pushaw
cmp
(bad)
(bad)
mov
fmul
ins
out
das
lahf
aam
loope
xchg
call
jmp
jmp
cmp
mov
(bad)
(bad)
call
fcomp
test
pop
jb
rol
(bad)
call
pop
out
push
cmps
add
mov
mov
fs
jb
mov
sub
sub
jbe
out
jmp
(bad)
(bad)
fild
daa
mov
addr16
icebp
dec
adc
pop
jno
lods
sahf
ret
div
xchg
ins
(bad)
(bad)
(bad)
(bad)
dec
pop
movs
test
inc
add
xchg
xor
nop
jg
shr
sub
jno
loope
cmps
ss
push
mov
push
dec
adc
stos
jl
inc
mov
push
loopne
mov
es
and
call
xchg
jno
jle
(bad)
call
xchg
leave
push
push
adc
aaa
sbb
pusha
pop
mov
clc
(bad)
(bad)
(bad)
(bad)
mov
xor
rol
xor
js
(bad)
pop
xor
cmp
mov
(bad)
jmp
and
gs
push
jmp
adc
fdiv
mov
xor
(bad)
(bad)
dec
xchg
inc
pusha
add
sbb
fadd
adc
xlat
and
adc
sti
cwde
ret
adc
adc
inc
sbb
xor
jmp
(bad)
jmp
dec
ss
cmps
retf
cld
mov
push
gs
fdivr
(bad)
(bad)
dec
sti
push
mov
push
mov
aas
inc
(bad)
mov
inc
xor
out
into
icebp
leave
dec
adc
(bad)
(bad)
dec
xor
sbb
enter
xchg
sahf
pop
mov
ins
mov
mov
bound
(bad)
(bad)
mov
movs
daa
or
lods
pop
pop
cmp
xor
scas
std
jno
jmp
jmp
gs
push
outs
add
mov
in
or
scas
inc
cmc
movlhps
dec
(bad)
jmp
pushf
xchg
adc
repz
inc
jp
hlt
(bad)
jg
and
and
sub
or
repnz
fisttp
or
pop
and
(bad)
movups
sbb
(bad)
jg
mov
lds
cmp
or
es
inc
add
dec
lock
dec
pop
mov
dec
sahf
mov
cmps
jae
sar
(bad)
(bad)
push
idiv
cmp
pop
lahf
fisub
sbb
in
xchg
push
ins
(bad)
cmps
and
ins
dec
clc
(bad)
(bad)
call
in
jns
movs
push
(bad)
xor
xor
and
and
mov
ja
out
adc
mul
repnz
xor
xor
imul
into
adc
mov
mov
ret
aad
mov
jl
out
cmp
(bad)
(bad)
(bad)
inc
push
fst
mov
(bad)
sbb
lahf
push
pop
(bad)
jmp
fst
fmul
out
in
(bad)
(bad)
call
sub
(bad)
daa
xchg
dec
ins
mov
mov
scas
(bad)
mov
retfw
adc
(bad)
jae
dec
mov
(bad)
mov
inc
sbb
ds
pop
mov
push
adc
xchg
pop
lock
jmp
mov
push
jge
cmp
add
cdq
in
pop
lds
ins
in
pop
inc
aad
(bad)
(bad)
jmp
jle
fisub
sub
arpl
xor
jl
mov
jns
add
(bad)
loope
jns
or
or
inc
xor
cmc
mov
mov
(bad)
push
jg
dec
cld
rcr
sbb
hlt
xor
ins
push
sub
mov
push
lds
das
cli
push
std
in
loope
pop
imul
arpl
sub
je
cmp
(bad)
(bad)
(bad)
call
add
clc
ret
not
ins
sbb
ins
call
dec
stos
inc
popf
sbb
(bad)
(bad)
jge
and
and
mov
gs
xor
and
push
es
jecxz
jae
ds
call
(bad)
cli
adc
add
sbb
retf
or
ds
inc
mov
mov
ss
imul
sar
pop
push
or
ret
aas
add
cmp
rcl
int
(bad)
(bad)
(bad)
call
add
xchg
push
add
mov
ror
mov
mov
hlt
xchg
adc
test
(bad)
(bad)
inc
(bad)
pop
(bad)
dec
fimul
(bad)
fstp
xchg
inc
cwde
ds
mov
(bad)
(bad)
jmp
aas
scas
(bad)
jmp
dec
in
fisub
lea
hlt
mov
jmp
enter
mov
shl
fsub
fisubr
inc
cli
(bad)
(bad)
inc
fnsave
outs
or
or
ror
(bad)
out
das
adc
jp
leave
idiv
call
add
inc
jmp
or
inc
adc
xor
(bad)
(bad)
(bad)
jmp
outs
int
jp
pop
or
xchg
dec
or
test
sub
repnz
call
ss
test
sbb
jmp
rcl
push
push
mul
(bad)
jmp
mov
jns
js
sahf
add
add
or
call
dec
push
(bad)
xor
out
or
jo
push
lods
sub
inc
pop
data16
fisubr
clc
xchg
and
test
out
out
inc
inc
mov
ret
dec
or
(bad)
call
sub
pop
test
mov
inc
mov
fmul
jns
lock
jmp
push
adc
retf
test
stc
test
call
pop
test
or
aaa
cmp
cld
arpl
cs
(bad)
stos
sub
cmp
into
std
out
jg
(bad)
out
and
dec
cld
(bad)
inc
repnz
(bad)
sub
dec
dec
loop
stos
jnp
call
ds
push
dec
loopne
and
xor
push
out
jo
jmp
add
add
fimul
pop
popf
cs
popf
test
(bad)
(bad)
(bad)
push
stc
loop
push
jnp
mov
jne
lea
adc
pop
inc
xor
mov
xchg
jnp
aas
dec
ins
and
mov
xchg
push
add
cmps
aad
pop
push
or
cmp
(bad)
(bad)
(bad)
jmp
(bad)
fmul
jmp
push
or
mov
in
mov
mov
jae
mov
sahf
mov
and
out
or
jae
pop
sti
(bad)
(bad)
(bad)
inc
jp
add
movs
add
xor
in
js
mov
(bad)
scas
lock
(bad)
inc
test
mov
inc
mov
arpl
inc
jge
pop
call
pop
mov
cmp
(bad)
jmp
fisttp
and
inc
xor
cmp
stos
add
adc
lods
(bad)
mov
dec
movs
out
aaa
cmp
adc
kxorb
jmp
out
das
cdq
(bad)
xor
ds
shr
inc
pop
and
(bad)
(bad)
inc
jg
aaa
test
xlat
inc
xor
scas
xchg
mov
sbb
mov
test
retf
inc
jl
fisttp
inc
xor
arpl
jns
or
(bad)
(bad)
call
jmp
xchg
(bad)
int
fnstsw
push
pop
movs
dec
test
ror
fdiv
nop
sbb
inc
retf
jno
shr
movs
jae
lock
(bad)
(bad)
ds
imul
mov
mov
in
out
in
and
in
sub
scas
xchg
test
mov
adc
sub
dec
sbb
jg
adc
xlat
in
ficom
out
and
(bad)
(bad)
(bad)
dec
shl
xchg
xlat
fs
or
jp
aaa
push
pop
lods
call
ins
jmp
(bad)
(bad)
(bad)
jg
push
or
sub
out
xlat
call
jae
cmp
push
(bad)
push
mov
retf
dec
cmp
or
lds
enter
sbb
stos
(bad)
(bad)
(bad)
jmp
stos
cmp
add
mov
ret
mov
fidivr
jae
ror
enter
sbb
lds
fcom
dec
mov
push
sbb
cmp
gs
imul
jns
(bad)
(bad)
(bad)
dec
stos
sub
ja
lods
scas
cmp
outs
push
xlat
sbb
enter
enter
mov
jae
jecxz
sahf
push
stc
loope
stc
enter
push
cmc
pop
iret
jne
int3
jle
mov
lea
sar
(bad)
mov
(bad)
mov
bound
pop
pop
sub
ins
aas
pop
sti
es
(bad)
(bad)
call
xchg
sbb
icebp
addr16
mov
xchg
jno
mov
ja
pop
mov
scas
movs
lods
push
fsubr
movs
(bad)
xchg
shl
outs
mov
rcr
pop
rcr
mov
or
in
push
ret
(bad)
(bad)
(bad)
jmp
add
mov
sub
cmp
aad
iret
test
(bad)
dec
lock
and
push
sub
outs
(bad)
mov
dec
mov
(bad)
(bad)
inc
into
das
aas
ss
and
je
(bad)
sbb
jb
loop
jl
retf
lock
mov
lahf
jno
jo
mov
int3
(bad)
adc
mov
add
hlt
cmovl
ds
(bad)
call
xchg
ss
ja
cmp
jo
pop
test
adc
cmp
cmp
mov
inc
fstp
xchg
dec
or
dec
test
dec
dec
(bad)
outs
ud0
(bad)
dec
adc
in
imul
mov
dec
pop
sahf
shr
mov
or
push
add
repz
(bad)
(bad)
call
mov
hlt
mov
int3
add
mov
sbb
fsub
scas
fistp
mov
(bad)
fisttp
mov
push
sbb
clc
inc
or
inc
lahf
dec
pop
icebp
dec
jbe
int3
and
rol
fbstp
mov
jg
push
and
sahf
data16
dec
in
je
xor
rcl
lds
sbb
adc
loope
icebp
jmp
or
push
clc
inc
dec
(bad)
sbb
in
jmp
pusha
call
xchg
push
dec
push
aaa
or
popa
add
jp
xchg
shl
cs
adc
push
mov
mov
in
cwde
retf
or
pop
cmc
sbb
push
push
or
rcr
and
lea
or
push
inc
(bad)
(bad)
call
push
pop
add
ret
xchg
lock
xlat
mov
dec
sbb
cld
(bad)
(bad)
mov
cmp
fnstsw
jb
push
aas
(bad)
cmps
or
mov
inc
cs
push
nop
(bad)
out
nop
gs
lods
xchg
inc
movs
inc
add
push
jb
cli
(bad)
(bad)
push
jle
sbb
pop
and
ins
xchg
cld
xchg
dec
fst
test
les
pop
sub
inc
adc
das
cmp
iret
and
(bad)
mov
push
xchg
dec
sub
sub
retf
mov
stc
dec
and
loopne
push
ins
(bad)
(bad)
(bad)
call
or
fstp
je
mov
cmp
jg
pop
ds
repz
ds
and
imul
and
pushf
cmps
(bad)
(bad)
(bad)
jmp
stc
loop
push
outs
add
xor
mov
dec
arpl
cwde
mov
dec
ins
jbe
inc
cli
cs
in
jmp
and
inc
hlt
or
outs
pop
test
bound
push
lock
jno
cmps
dec
sbb
mov
pop
movs
(bad)
xchg
iret
(bad)
mov
test
arpl
xor
or
xchg
adc
dec
and
pop
lods
push
or
enter
popf
(bad)
rcl
inc
test
(bad)
(bad)
(bad)
call
sbb
inc
ret
push
inc
in
push
push
or
adc
dec
fwait
xchg
or
xor
(bad)
(bad)
push
jge
das
nop
sbb
lods
lds
pusha
outs
pop
inc
sub
jp
mov
sti
xlat
loopne
pop
hlt
mov
adc
outs
hlt
adc
scas
or
mov
fs
and
pop
mov
lock
pop
push
cli
mov
lods
stos
imul
push
imul
rcl
stc
push
lea
(bad)
pop
and
dec
mov
dec
lods
adc
xchg
(bad)
(bad)
inc
ss
icebp
xor
daa
fld
mov
or
aas
and
and
(bad)
(bad)
(bad)
(bad)
jmp
xchg
cli
xchg
out
add
and
and
or
and
rcr
icebp
xchg
add
cmp
call
out
imul
add
(bad)
(bad)
(bad)
(bad)
jmp
jg
test
or
rcr
jno
push
data16
add
sbb
(bad)
(bad)
jmp
jmp
dec
rol
sbb
test
inc
and
stc
adc
or
imul
aas
sbb
lahf
dec
mov
retf
fcom
mov
adc
sar
and
daa
repz
(bad)
inc
lds
aas
not
in
inc
or
icebp
xchg
mov
jecxz
cwde
mov
xlat
(bad)
(bad)
(bad)
(bad)
fstp
add
shl
push
xchg
addr16
push
or
leave
sbb
adc
fnstenv
or
popf
fwait
hlt
stos
(bad)
(bad)
(bad)
(bad)
mov
in
test
imul
xor
loope
pop
imul
outs
adc
clc
(bad)
inc
inc
xor
nop
arpl
sub
jp
xor
mov
dec
pop
cdq
bound
jecxz
xchg
and
ficomp
nop
add
cwde
or
jg
(bad)
dec
pop
(bad)
sub
adc
dec
cmp
push
inc
inc
out
daa
and
pusha
inc
call
test
and
nop
(bad)
(bad)
(bad)
call
adc
add
ror
push
and
mov
iret
pop
cmc
and
pop
retf
into
(bad)
(bad)
(bad)
inc
outs
not
rol
or
iret
sbb
test
movs
test
movs
dec
out
pop
loop
lods
ss
ss
(bad)
(bad)
inc
call
dec
es
mov
xor
jg
into
movs
and
xchg
inc
pop
es
or
jmp
(bad)
(bad)
(bad)
inc
inc
repnz
stos
dec
pop
js
test
push
aad
stc
iret
cmp
fs
cmp
jo
push
loop
int
ret
(bad)
(bad)
(bad)
jge
add
pop
fild
dec
(bad)
mov
sbb
inc
dec
call
(bad)
sbb
cmp
sub
mov
mov
sbb
scas
ficomp
xor
mov
aad
jmp
out
das
(bad)
(bad)
(bad)
out
add
mov
fwait
jne
sbb
cmp
(bad)
jno
ret
push
cmps
adc
retf
(bad)
(bad)
call
mov
ins
mov
cdq
jmp
cmps
test
pushf
(bad)
(bad)
(bad)
(bad)
mov
sbb
ss
or
or
or
stc
stos
push
xor
fsub
(bad)
(bad)
(bad)
dec
ficomp
inc
into
loop
ficom
mov
sbb
scas
cmp
daa
retf
cmp
mul
pop
or
or
inc
(bad)
(bad)
(bad)
jmp
cmc
xor
push
add
iret
cmp
js
lea
add
movs
mov
sar
jmp
(bad)
jp
jnp
inc
mov
sub
cmp
(bad)
(bad)
(bad)
call
cmp
pop
dec
es
cdq
sti
jmp
(bad)
cmp
add
pop
lods
aas
movs
lods
fist
(bad)
(bad)
(bad)
dec
shr
mul
add
stc
add
gs
(bad)
push
(bad)
sahf
loop
inc
adc
mov
aas
arpl
cmp
xlat
mov
retf
cli
lock
imul
(bad)
(bad)
call
fisubr
(bad)
and
aaa
cmp
pop
add
dec
sub
test
(bad)
(bad)
inc
ins
mov
test
mov
aas
into
icebp
lods
dec
movs
pusha
aad
or
mov
(bad)
(bad)
jmp
sbb
adc
imul
repz
sbb
dec
arpl
(bad)
clc
cmp
and
sbb
(bad)
jmp
xchg
retf
xchg
jp
mov
(bad)
call
sahf
and
mov
retf
fdiv
mov
adc
leave
fdivr
div
std
inc
pop
icebp
aad
out
mov
dec
sub
in
int
cmp
inc
sub
mov
push
xor
(bad)
xlat
movs
sbb
sbb
(bad)
(bad)
(bad)
shl
dec
scas
jl
outs
mov
mov
sub
or
jmp
movs
sar
xor
ret
in
pop
data16
(bad)
(bad)
(bad)
call
pop
aas
ins
sub
jbe
lods
push
scas
fnstcw
call
movs
jb
(bad)
(bad)
(bad)
fidiv
outs
pop
cmp
adc
shr
dec
fdiv
shl
ror
dec
push
rep
sbb
add
mov
(bad)
push
cmps
es
and
cmp
xchg
sub
cmp
scas
cli
clc
inc
retf
mov
mov
imul
xor
inc
push
mov
lock
outs
push
mov
(bad)
(bad)
(bad)
(bad)
fisttp
les
pop
jle
push
sbb
ins
xor
or
mov
(bad)
fcomip
dec
pop
fcomi
sub
mov
jp
(bad)
retf
sahf
js
pusha
lods
rcr
mov
push
retf
add
jb
(bad)
(bad)
(bad)
call
test
psrld
sbb
(bad)
in
and
dec
into
sub
aam
jg
mov
(bad)
(bad)
(bad)
std
into
sub
call
das
sub
sbb
adc
je
das
and
and
jmp
push
fisttp
(bad)
call
call
loopne
mov
leave
sbb
push
mov
(bad)
cli
(bad)
(bad)
call
cmp
js
cwde
repz
xor
xor
add
sbb
setne
ret
push
jmp
aam
out
(bad)
ja
ins
and
(bad)
(bad)
(bad)
jmp
mov
lock
fsub
or
retf
sub
int
rol
xor
jo
mov
repnz
cdq
outs
xor
(bad)
stc
jmp
hlt
sub
bound
outs
(bad)
(bad)
(bad)
jg
xchg
inc
xchg
mov
(bad)
jl
out
pop
jne
(bad)
std
sar
call
fisttp
mov
sahf
dec
(bad)
(bad)
(bad)
call
jl
mov
sub
cwde
ds
push
xchg
pop
in
push
retf
(bad)
mov
jo
mov
in
cli
stc
popf
or
or
jns
(bad)
(bad)
jmp
in
call
adc
int
xor
test
(bad)
mov
sub
popa
imul
cmp
mov
fidiv
lock
push
add
(bad)
(bad)
jmp
push
pusha
jle
push
lea
ret
sahf
pop
xor
cmp
pushf
jl
(bad)
(bad)
dec
call
arpl
cmps
movs
(bad)
xchg
mov
mov
(bad)
(bad)
(bad)
mov
push
ds
shl
pop
iret
cmp
mov
ret
sub
(bad)
call
xor
jnp
call
sbb
icebp
jb
jp
jp
pop
lea
popa
or
loop
stos
sbb
jmp
(bad)
call
lods
add
mov
test
push
cwde
cmps
lahf
mov
mov
fdivrp
(bad)
fcomip
sbb
pop
push
fcom
aam
ror
lods
popa
std
test
pop
test
inc
add
cmc
(bad)
(bad)
(bad)
cmp
pop
cmp
loopne
jecxz
adc
in
sbb
rcr
popf
pushf
mov
stos
ficom
fcmovnbe
(bad)
(bad)
(bad)
out
in
pop
or
sub
std
xor
xlat
test
out
sbb
jg
lods
(bad)
aaa
inc
pop
cli
or
scas
clc
(bad)
jmp
pop
hlt
enter
(bad)
jmp
mul
mov
mov
fdivr
cld
(bad)
(bad)
dec
mov
fisub
cmps
xor
ficom
dec
jmp
xchg
sbb
ja
mov
loop
mov
(bad)
(bad)
(bad)
(bad)
cmp
mov
and
mov
out
and
sub
push
mov
cmp
(bad)
(bad)
dec
retf
rcl
out
push
inc
xchg
adc
outs
mov
es
inc
xor
mov
cmps
xchg
in
(bad)
(bad)
inc
push
push
add
add
lods
dec
cmp
lods
xchg
and
in
push
pop
xchg
sub
enter
cld
(bad)
(bad)
mov
outs
enter
or
daa
jb
call
sbb
(bad)
es
xor
lds
add
inc
or
(bad)
mov
sbb
and
idiv
(bad)
sar
(bad)
(bad)
call
pop
dec
gs
rol
xchg
aam
mov
jns
jno
inc
and
push
dec
(bad)
xchg
add
call
push
mov
(bad)
jecxz
int3
dec
lock
sub
jmp
cli
or
sbb
pusha
loopne
push
cld
ss
add
add
fwait
pop
cmp
(bad)
cmp
mov
push
dec
adc
leave
push
std
loopne
or
addr16
jle
(bad)
call
aaa
imul
push
dec
iret
outs
push
adc
test
mov
icebp
out
pop
mov
inc
jmp
mov
cmp
test
sti
inc
mov
push
test
xor
and
jne
sub
movs
pop
inc
shl
push
stc
(bad)
dec
(bad)
repnz
out
pop
fsubr
dec
popf
push
(bad)
(bad)
push
mov
xchg
icebp
(bad)
push
adc
or
int3
add
mov
push
sbb
(bad)
mov
jno
jge
test
pushf
mov
jo
ret
ins
cdq
outs
fwait
add
(bad)
(bad)
jg
lock
stc
or
or
dec
neg
or
sbb
inc
lea
into
push
xchg
inc
pop
mov
jmp
or
(bad)
fbld
data16
sub
cmp
inc
add
movs
jae
push
or
(bad)
dec
mov
repnz
xor
jae
sti
push
movs
repnz
dec
adc
das
inc
dec
loopne
popa
mov
clc
aad
test
fcmove
es
inc
add
test
scas
fyl2xp1
and
cmp
xor
dec
call
dec
(bad)
(bad)
(bad)
(bad)
jp
mov
mov
and
outs
fiadd
cmp
int3
enter
pop
pusha
psubb
in
pop
mov
sar
repz
retf
mov
call
pop
mov
daa
jne
movs
out
or
inc
out
arpl
in
(bad)
call
fwait
jmp
fcomp
addr16
fdiv
(bad)
(bad)
jg
repnz
mov
jmp
push
cmp
jnp
pop
int
and
(bad)
(bad)
(bad)
call
sub
imul
mul
cmps
fs
(bad)
xor
mov
or
add
xchg
xchg
mov
int
add
xlat
mov
pop
jmp
(bad)
jmp
in
sti
fdiv
sbb
gs
sbb
xchg
ins
sahf
pop
mov
out
out
dec
pop
(bad)
mov
call
or
test
add
sub
mov
hlt
popa
lahf
imul
(bad)
(bad)
push
inc
outs
call
test
fst
inc
aam
mov
icebp
adc
(bad)
mov
mov
pushf
xchg
shl
movs
mov
(bad)
(bad)
(bad)
(bad)
jg
push
aam
push
mov
aam
or
mov
pop
fdivr
mov
jmp
loop
fwait
call
inc
mov
dec
(bad)
mov
jb
or
jle
in
(bad)
arpl
out
xor
test
movs
sbb
lahf
fisttp
movs
nop
xchg
or
pop
pop
xorps
push
xchg
out
jecxz
hlt
cld
(bad)
(bad)
mov
and
sub
fidivr
lea
ss
push
clc
and
(bad)
inc
xlat
call
pushf
push
inc
shl
rcl
and
hlt
(bad)
(bad)
(bad)
mov
jo
fs
pusha
xchg
and
push
mov
cld
pop
sbb
or
add
rcr
pop
xor
mov
(bad)
call
sub
mov
pop
test
ret
xor
xlat
push
call
mov
add
mov
(bad)
(bad)
(bad)
jg
xchg
add
test
outs
pop
loopne
scas
pop
leave
sahf
dec
sub
mov
pop
fcomip
(bad)
jmp
popa
pop
mov
jo
xchg
out
jge
xchg
call
mov
push
sbb
(bad)
(bad)
call
inc
dec
and
imul
jb
push
add
mov
(bad)
(bad)
jg
popf
mov
push
aas
adc
leave
cdq
jl
and
es
out
mov
add
(bad)
in
(bad)
std
and
dec
xor
sub
and
sbb
mov
popf
inc
or
jae
(bad)
(bad)
call
sar
mov
push
(bad)
shr
(bad)
sbb
or
dec
mov
mov
(bad)
(bad)
(bad)
(bad)
fnstcw
sbb
int
pushf
inc
dec
jle
add
adc
shl
stc
ret
leave
scas
pop
cmp
std
(bad)
jmp
sub
dec
fild
mov
in
mul
adc
shr
xor
jno
pop
icebp
inc
mov
adc
jmp
dec
mov
(bad)
das
(bad)
(bad)
(bad)
(bad)
cld
sub
inc
dec
ss
jbe
sub
xchg
sti
jl
call
xor
jg
aad
mov
lock
jmp
and
add
mov
add
lahf
not
mov
push
(bad)
(bad)
call
std
add
sub
jnp
or
int
jp
mov
ss
(bad)
inc
and
cmp
push
test
int
mov
mov
scas
push
(bad)
cwde
dec
xchg
stos
out
inc
jmp
mov
bound
out
and
pusha
(bad)
mov
clc
dec
add
dec
mov
mov
fimul
not
add
(bad)
call
outs
ss
jge
and
int3
jg
lea
jmp
inc
ins
scas
jne
jo
push
inc
fcomip
push
or
cli
dec
push
fst
dec
mov
push
mov
cmp
aad
cdq
push
(bad)
(bad)
call
pushf
retf
out
test
push
les
popf
lods
les
or
and
hlt
(bad)
(bad)
(bad)
(bad)
stc
lods
cmc
cmc
add
ror
mov
xchg
outs
shl
inc
mov
push
pop
ret
idiv
(bad)
jg
sbb
xchg
(bad)
push
idiv
push
jb
mov
or
or
(bad)
(bad)
(bad)
push
rcr
cdq
mov
dec
cmc
test
movs
sub
fwait
inc
sub
ror
add
je
ins
in
mov
push
jae
xchg
push
fimul
jecxz
aas
adc
icebp
fistp
jnp
mov
pop
cmp
cmp
sbb
cs
push
jl
loope
out
pop
jno
(bad)
(bad)
(bad)
fcomp
rol
jp
sub
jo
pop
inc
nop
xor
pop
xchg
stos
push
sahf
mov
loopne
dec
jns
xor
outs
es
or
push
or
stos
lock
(bad)
mov
push
das
std
dec
pop
leave
stos
fnsave
in
sub
jnp
sbb
adc
(bad)
call
pop
hlt
mov
test
xchg
(bad)
jbe
cld
jge
movs
mov
dec
adc
call
push
xlat
jbe
and
jp
push
mov
xchg
mov
nop
push
test
sar
jl
sbb
mov
leave
add
(bad)
mov
jg
sub
mov
cmp
push
add
inc
or
scas
popa
out
dec
dec
mov
sar
jmp
jbe
push
addr16
pop
mov
adc
push
sbb
mov
dec
aaa
sbb
out
movs
lods
mov
dec
push
inc
pop
xchg
sub
(bad)
nop
pop
shr
xor
test
pop
or
int
call
mov
(bad)
(bad)
call
outs
jno
les
(bad)
xor
cmp
jnp
xchg
(bad)
lods
dec
test
pushf
(bad)
(bad)
(bad)
jmp
mov
(bad)
loopne
mov
sbb
iret
add
jg
gs
mov
mov
jne
and
js
or
inc
loopne
xchg
dec
push
sbb
das
mov
sahf
sahf
(bad)
(bad)
(bad)
inc
cdq
stc
fbld
dec
pop
dec
pop
and
add
mov
std
push
retf
stos
shr
fbstp
outs
xor
cwde
push
jns
repnz
addr16
xchg
aad
fcomip
(bad)
inc
sub
addr16
add
sub
call
push
push
mov
pusha
daa
pop
enter
cmps
pop
lea
xlat
push
sub
arpl
mov
xchg
in
jnp
and
inc
sti
xor
mov
jg
jp
xchg
stos
iret
mov
xchg
xlat
(bad)
(bad)
(bad)
inc
hlt
cs
retf
ds
push
pop
push
mov
jge
mov
cdq
nop
mov
jmp
(bad)
pop
mov
dec
dec
fs
mov
and
push
test
or
data16
(bad)
(bad)
(bad)
(bad)
in
or
sbb
add
ret
scas
or
shl
mov
aas
(bad)
(bad)
(bad)
dec
ja
cli
mov
out
mov
loop
add
lods
or
fisttp
mov
test
(bad)
(bad)
jmp
lds
sub
cmp
imul
jae
sbb
(bad)
call
sahf
inc
test
and
sbb
scas
ficomp
fadd
inc
fist
cmp
and
(bad)
(bad)
(bad)
jmp
dec
ds
icebp
in
mov
cmp
cmp
in
jmp
fild
add
jmp
(bad)
mov
xchg
cld
jb
test
inc
xchg
in
test
inc
aam
sbb
jmp
int3
jecxz
cdq
shr
sbb
and
fiadd
(bad)
(bad)
dec
ficomp
mov
imul
mov
sub
or
out
repnz
out
(bad)
(bad)
(bad)
jmp
sbb
rcr
xchg
jecxz
dec
sub
xlat
pushf
mov
arpl
xchg
(bad)
(bad)
(bad)
inc
jns
mov
in
int
mov
dec
outs
mov
jbe
(bad)
(bad)
inc
out
clc
and
dec
or
out
mov
cwde
push
adc
enter
adc
(bad)
cld
leave
cmp
mov
xchg
add
push
cwde
mov
adc
retf
jno
std
iret
cmp
(bad)
(bad)
(bad)
jl
mov
push
and
cmp
jae
fld
popf
(bad)
ins
mov
pop
mov
inc
mov
repz
hlt
mov
das
into
aaa
repz
outs
or
jmp
dec
arpl
aas
stos
sbb
adc
scas
stos
mov
add
add
push
xchg
(bad)
es
(bad)
call
sbb
sbb
xor
cli
(bad)
inc
mov
daa
sub
jne
add
imul
call
adc
add
mov
call
xor
sbb
scas
or
push
xchg
xchg
cmp
adc
cli
(bad)
(bad)
jmp
push
xchg
adc
xchg
iret
scas
lea
(bad)
mov
arpl
cmp
(bad)
(bad)
(bad)
out
jmp
and
mov
imul
jle
cwde
fwait
jns
or
inc
mov
jno
(bad)
(bad)
(bad)
out
icebp
nop
iret
xor
mov
nop
fidivr
cmp
fs
stos
arpl
out
dec
add
or
(bad)
(bad)
(bad)
call
cmp
sbb
rcr
xor
lock
loope
cmp
inc
(bad)
jmp
(bad)
jmp
pop
and
sti
fsubr
imul
push
int
sti
test
cmp
(bad)
call
push
inc
mov
push
repnz
add
dec
add
(bad)
jmp
inc
(bad)
push
and
sub
mov
push
out
in
hlt
add
jg
jp
cmp
push
aas
jmp
sbb
cdq
add
loope
clc
mov
mov
push
cmp
mov
xor
loop
ret
(bad)
mov
inc
lea
xchg
imul
pop
xor
sbb
push
out
adc
cmp
in
xchg
inc
push
fdivr
mov
(bad)
mov
pop
sub
xchg
retf
mov
inc
cmps
inc
retf
xchg
dec
cdq
clc
(bad)
out
je
jg
xor
pop
cmp
hlt
sbb
call
shl
and
stc
pop
push
fst
sbb
mov
(bad)
jg
mov
cmp
aas
pop
mov
or
pusha
push
cmps
(bad)
(bad)
push
out
out
stos
out
sti
neg
retf
imul
nop
jmp
inc
(bad)
(bad)
(bad)
call
cmp
push
add
(bad)
(bad)
fldenv
inc
add
and
out
les
sbb
test
fwait
(bad)
inc
fstp
and
cli
and
mov
sti
std
or
push
shl
(bad)
call
mov
cmp
or
xchg
push
out
xor
cwde
add
cli
push
(bad)
ficomp
movs
(bad)
(bad)
(bad)
dec
push
jno
ret
push
inc
adc
and
loop
movs
and
std
les
pop
sbb
out
(bad)
(bad)
(bad)
jmp
lods
jno
mov
aaa
fwait
xor
pop
inc
icebp
in
jp
xchg
in
nop
mov
mov
std
movs
cli
mov
xchg
in
sub
jns
(bad)
(bad)
jmp
dec
sub
sahf
imul
mov
and
sti
(bad)
and
les
and
or
ud1
(bad)
add
cld
jne
(bad)
jg
call
inc
fcom
(bad)
jmp
adc
push
xor
sbb
ja
nop
loop
xlat
adc
mov
pop
jno
imul
jg
mov
ja
or
dec
jmp
cs
or
mov
(bad)
(bad)
(bad)
call
pop
xlat
jbe
out
xor
inc
aad
fstp
sub
or
out
fs
pushf
mov
(bad)
mov
ret
test
inc
aaa
fs
or
xchg
std
sbb
sub
fidiv
out
das
adc
sbb
adc
icebp
xchg
(bad)
push
call
call
mov
inc
rcr
loope
inc
dec
fdiv
and
fucompp
icebp
jle
retf
pop
pop
inc
mov
(bad)
(bad)
(bad)
inc
(bad)
daa
jb
add
jmp
add
cdq
xchg
adc
sbb
repnz
jae
bound
aaa
movs
(bad)
(bad)
dec
push
imul
push
cmp
jl
xchg
in
rcr
mov
(bad)
jmp
adc
and
hlt
(bad)
repz
and
pop
dec
dec
and
cli
adc
adc
lock
pop
in
mov
ins
ret
(bad)
dec
adc
cs
popa
(bad)
lods
mov
dec
jno
xlat
add
aaa
cdq
sar
jle
int3
fmul
stos
cs
jl
aaa
jmp
nop
lock
int3
mul
ins
pop
cmp
jmp
adc
(bad)
(bad)
(bad)
jl
adc
or
mov
mov
clc
aaa
mov
push
jnp
loope
cmp
inc
sbb
jo
or
int3
rcl
pop
add
enter
xchg
jg
mov
mov
inc
mov
mov
inc
ss
fadd
addr16
(bad)
(bad)
(bad)
mov
dec
push
dec
add
test
inc
fwait
adc
das
add
aaa
or
add
clc
pop
icebp
(bad)
xchg
test
pop
adc
add
xchg
fadd
les
jmp
imul
push
jnp
scas
rol
mov
xchg
inc
hlt
or
and
mov
fdivrp
(bad)
(bad)
jg
idiv
push
gs
pop
xor
jp
pop
hlt
dec
push
je
int3
sub
push
mov
rol
out
fidivr
outs
sbb
loopne
lahf
mov
lea
fld
mov
pop
cdq
test
dec
addr16
cmp
(bad)
(bad)
(bad)
(bad)
inc
into
(bad)
ss
jnp
mov
mov
pop
bound
hlt
daa
fs
(bad)
(bad)
jmp
fucom
idiv
pusha
adc
mov
out
stos
add
xor
sar
jl
call
cdq
xchg
adc
call
std
andps
mov
fbld
ins
sar
xchg
(bad)
stos
mov
(bad)
mov
sti
cmp
inc
in
stos
(bad)
(bad)
(bad)
mov
shl
cmp
sbb
fimul
mov
mov
xor
fidivr
ins
loop
xlat
and
adc
mov
(bad)
(bad)
dec
adc
cmp
and
or
xchg
mov
mov
pop
jmp
int3
sbb
xchg
mov
rol
inc
sub
test
popa
add
adc
das
mov
push
jae
(bad)
(bad)
dec
inc
fidiv
inc
jle
sbb
stc
and
aas
xlat
cli
ins
dec
retf
popa
(bad)
push
(bad)
dec
cmps
test
jno
sbb
mov
pop
(bad)
(bad)
(bad)
(bad)
cmp
push
inc
(bad)
into
inc
addr16
(bad)
in
inc
loop
xchg
mov
jmp
lods
lea
cmp
(bad)
(bad)
(bad)
(bad)
sti
fstp
fs
leave
in
inc
adc
sub
icebp
rcr
adc
mov
inc
sar
jmp
pop
and
xor
ja
lods
popf
add
(bad)
dec
mov
dec
jecxz
loope
mov
sub
cwde
xchg
stos
pop
xor
jecxz
retf
inc
lods
movs
fs
jno
das
cmp
icebp
and
(bad)
dec
add
xchg
mov
sbb
xchg
pop
ss
add
adc
(bad)
(bad)
(bad)
(bad)
jp
sub
shl
push
jne
lds
jle
aad
sahf
rol
out
test
xchg
xor
sbb
(bad)
mov
hlt
or
sbb
cmps
or
clc
cmp
jg
cmp
mov
in
outs
dec
out
lahf
xor
dec
ss
sar
lods
scas
cli
fadd
(bad)
jg
and
popf
inc
pop
lods
fwait
mov
ds
and
iret
add
ja
call
dec
ins
mov
pop
mov
xor
dec
cld
aad
adc
(bad)
(bad)
inc
or
or
or
mov
jns
pop
dec
add
mov
js
shl
clc
inc
xchg
mov
push
or
jne
push
std
das
cli
push
push
fild
cmps
sbb
fsubr
fsub
push
ins
test
dec
pop
sub
mov
mov
cmp
rcr
mov
mov
int3
loope
sub
call
leave
and
or
shr
add
xchg
shl
mov
adc
xor
rep
dec
pop
enter
mov
add
rcr
ja
(bad)
call
enter
and
cmp
and
not
xchg
mov
(bad)
(bad)
(bad)
fsubr
xor
in
jecxz
imul
push
(bad)
mov
minps
or
in
popf
xchg
(bad)
(bad)
(bad)
push
mov
sbb
setnp
pop
in
pop
sub
xchg
(bad)
nop
outs
mov
call
push
push
mov
and
in
jae
inc
and
jl
lock
in
xchg
pop
aad
ins
cmc
popa
fcos
(bad)
(bad)
call
retf
das
je
lahf
dec
fadd
ffreep
cmp
mov
test
dec
dec
pop
mov
je
jnp
lods
(bad)
(bad)
(bad)
call
cmc
mov
clc
mov
jno
jbe
dec
add
xor
inc
mov
stc
adc
(bad)
cmp
(bad)
jmp
test
pop
dec
dec
push
(bad)
fwait
push
inc
enter
cmp
cld
jp
out
jnp
cld
(bad)
xor
nop
sbb
sar
dec
cmp
fs
and
mov
pushf
jp
(bad)
out
sub
outs
rcr
mov
and
shl
add
adc
fwait
mov
mov
pushf
pop
jo
(bad)
cmp
stos
(bad)
jmp
lahf
sub
push
sbb
add
mov
neg
arpl
(bad)
(bad)
(bad)
(bad)
fcmovnu
dec
loopne
jge
push
jne
(bad)
in
shl
xchg
dec
pushf
retf
mov
retf
aaa
loope
int
(bad)
(bad)
push
ja
dec
inc
in
sub
mov
outs
cmps
push
or
ret
dec
fistp
push
dec
xchg
push
lock
cmp
stc
popf
(bad)
dec
in
or
in
mov
aam
ds
repnz
pop
idiv
(bad)
jmp
bound
ret
retf
adc
push
pop
loopne
cmp
mov
bndstx
(bad)
(bad)
(bad)
jmp
xchg
movs
mov
adc
icebp
pop
push
repnz
xchg
dec
enter
std
imul
dec
xchg
(bad)
(bad)
(bad)
(bad)
mov
inc
mov
loope
lods
imul
inc
int3
mov
mov
shl
daa
(bad)
aaa
std
jmp
push
(bad)
adc
leave
or
jo
push
shl
clc
sub
stos
pop
mov
mov
pop
es
mov
frstor
xchg
stos
(bad)
(bad)
(bad)
cmp
daa
and
or
dec
cmp
fucomi
cmp
and
push
mov
call
push
adc
and
mov
mov
bound
dec
stos
test
cli
(bad)
call
push
jge
rcr
or
ins
and
aam
inc
(bad)
(bad)
jmp
sub
xor
xchg
push
xor
lock
xor
inc
mov
fst
iret
cmp
mov
icebp
in
shr
push
int
leave
ss
xchg
fnstsw
cmp
(bad)
inc
push
fwait
and
test
sub
sub
shr
mov
lods
outs
(bad)
(bad)
(bad)
mov
or
scas
popf
jbe
in
sti
dec
outs
push
or
(bad)
inc
je
mov
into
cmps
mov
(bad)
jmp
jmp
mov
cmp
mul
push
outs
imul
ins
pop
(bad)
(bad)
(bad)
in
sub
cmc
test
fistp
xchg
jl
xchg
jp
fucomp
leave
addr16
(bad)
dec
and
jmp
jg
sar
push
and
dec
mov
ds
mov
and
cmp
inc
and
aaa
add
xlat
adc
ds
mov
(bad)
(bad)
dec
fstp
ret
loopne
adc
and
ins
mov
and
dec
out
jl
fcomip
(bad)
dec
adc
hlt
mov
pop
mov
cmp
cwde
imul
ss
xchg
jmp
loope
sar
cmp
dec
pop
fisubr
dec
mov
scas
movs
add
cmps
xchg
rcr
or
(bad)
dec
mov
hlt
ret
retf
mov
add
js
inc
adc
nop
adc
aaa
neg
call
mov
popa
ins
pop
mov
add
mov
push
(bad)
(bad)
(bad)
(bad)
mov
push
js
xchg
adc
or
imul
push
sub
mov
in
mov
(bad)
(bad)
push
(bad)
repz
shl
mov
xchg
outs
cmps
jno
sbb
das
pop
sbb
fild
adc
int3
inc
test
movs
icebp
retf
prefetchw
or
(bad)
(bad)
push
bound
push
lods
mov
inc
aam
je
sti
ficom
imul
leave
in
iret
sbb
inc
ds
sub
(bad)
(bad)
inc
push
cmps
cld
cmps
and
cld
popa
cli
adc
inc
ja
add
int3
pop
inc
sti
js
pop
imul
les
cmps
inc
(bad)
nop
imul
jp
mov
dec
pop
dec
push
out
pop
fwait
dec
add
mov
or
xor
add
imul
data16
mov
xchg
add
(bad)
jmp
lods
push
int3
test
rol
jae
ins
xchg
jbe
loope
cmps
(bad)
clc
call
mov
dec
iret
sub
mov
adc
mov
or
(bad)
xlat
lods
movs
scas
hlt
push
sbb
(bad)
(bad)
(bad)
call
mov
retf
fs
(bad)
or
and
jecxz
dec
or
and
dec
rol
out
mul
sub
ret
jle
clc
js
mov
dec
dec
cwde
xor
xchg
push
inc
in
inc
fucom
stos
leave
xchg
jmp
aas
(bad)
(bad)
push
and
push
addr16
mov
cmp
std
jbe
jbe
jmp
sub
xor
out
stos
loop
(bad)
fcomip
sub
jb
sub
(bad)
xchg
bound
sbb
mov
nop
adc
into
dec
clc
call
mov
shl
data16
(bad)
call
stos
cmp
mov
dec
std
mov
iret
jb
fdivr
movs
inc
repnz
dec
rcr
(bad)
(bad)
(bad)
call
mov
jl
ds
(bad)
mul
retf
mov
cs
sub
push
mov
add
out
je
ja
push
loop
xor
add
inc
stc
dec
test
jp
imul
(bad)
outs
cmp
pusha
sar
scas
cmp
push
mov
popa
pop
or
call
stc
(bad)
mov
out
dec
mov
js
mov
pusha
das
jb
cmps
ins
push
inc
(bad)
(bad)
dec
frstor
xchg
rol
jo
in
pusha
pop
xor
repnz
movs
sti
test
and
lods
popf
cli
(bad)
(bad)
jmp
push
pusha
jge
sbb
shr
fimul
aad
ficom
gs
add
outs
dec
mov
loope
cdq
cmp
add
(bad)
inc
push
or
gs
sub
arpl
jmp
pop
mul
and
rcl
adc
movs
inc
cmp
(bad)
(bad)
(bad)
cmp
jo
cmp
pop
and
dec
pop
fcomp
in
inc
fsubr
dec
in
rcl
mov
xlat
outs
pop
lods
or
mov
hlt
fs
sbb
inc
das
aad
add
outs
pop
(bad)
(bad)
call
ins
sbb
rep
push
xor
mov
sbb
imul
icebp
inc
cwde
shl
leave
add
(bad)
(bad)
(bad)
call
bnd
push
outs
xchg
lods
mov
inc
jbe
aaa
lea
mov
xchg
mov
jno
rcl
sub
mov
push
fsubr
out
mov
(bad)
(bad)
js
movs
push
add
mov
jb
leave
xchg
adc
test
inc
gs
stos
(bad)
(bad)
jge
sub
xchg
pop
aam
mov
imul
mov
test
sub
rol
(bad)
(bad)
call
and
pop
out
push
sub
call
add
imul
mov
in
jmp
push
mov
cmp
(bad)
int
mov
mov
inc
add
fnstenv
jo
fwait
hlt
adc
(bad)
(bad)
(bad)
inc
test
scas
cwde
in
ja
(bad)
sub
in
test
mov
fistp
and
fstp
dec
push
retf
dec
jge
inc
js
mov
fcomp
arpl
test
(bad)
mov
jo
repz
cdq
lods
jne
jg
outs
repnz
or
xchg
addr16
adc
fwait
mov
cmps
in
sbb
aaa
xchg
(bad)
(bad)
jg
dec
sahf
mov
dec
pop
add
ret
sub
stos
(bad)
popf
ja
out
and
int3
ret
(bad)
(bad)
(bad)
sti
lds
inc
clc
clc
cwde
xchg
nop
ss
outs
and
mov
dec
popf
or
(bad)
out
out
loopne
sub
frstor
(bad)
(bad)
fbld
dec
mov
or
or
mov
xchg
bound
jmp
in
stos
loope
stc
push
clc
sub
dec
std
jg
or
lock
pop
xchg
icebp
je
stc
xchg
call
loopne
push
dec
scas
sahf
out
add
xor
mov
das
test
aam
and
rcr
sbb
jmp
ins
(bad)
jo
nop
fwait
inc
fsub
sti
mov
stos
cmc
(bad)
(bad)
(bad)
(bad)
fisttp
and
cmp
or
cwde
mov
sub
call
or
in
loope
push
cld
call
into
adc
fidiv
fsubr
mov
jb
mov
ror
(bad)
mov
jmp
ror
jmp
in
imul
jmp
sub
mov
rcl
(bad)
push
into
jmp
jne
(bad)
jmp
data16
(bad)
jg
int
shl
pop
mov
mov
lods
neg
test
(bad)
call
adc
adc
xor
pop
xor
mov
jmp
add
xor
or
(bad)
stos
arpl
out
sub
ins
(bad)
(bad)
(bad)
push
outs
std
adc
sti
xor
cs
xchg
mov
lods
and
dec
inc
nop
fmul
(bad)
xchg
sbb
fild
dec
cmp
(bad)
repnz
jmp
fisub
jmp
clc
rol
and
adc
add
adc
outs
adc
retf
loopne
mov
fdivr
sahf
or
push
pop
mov
and
or
call
std
jno
leave
clc
jl
pop
scas
ins
out
dec
sbb
mov
ja
pop
popf
hlt
mul
sbb
(bad)
(bad)
mov
push
int
pop
lods
mov
jle
inc
or
mov
dec
add
leave
retf
(bad)
stos
cmp
add
out
pop
push
jno
mul
cmp
mov
push
(bad)
(bad)
(bad)
call
call
pop
lods
into
pop
(bad)
adc
clc
and
scas
cmp
test
push
ins
pop
sbb
add
cs
mov
inc
sar
push
cmp
(bad)
cld
outs
and
and
push
xchg
sub
xchg
push
xor
jg
out
jg
add
dec
rol
(bad)
push
pop
lods
add
sub
cmps
xor
add
mov
push
and
rcr
push
mov
stc
adc
or
pop
xchg
clc
push
or
scas
ins
stos
std
and
jmp
int
call
push
mov
aaa
cld
jg
mov
popf
push
retf
cmps
enter
sub
push
inc
jne
loopne
(bad)
call
lahf
aaa
mov
inc
aam
test
mov
rol
or
(bad)
(bad)
call
ds
or
mov
addr16
and
cmp
ret
loop
jns
dec
call
in
out
fucomp
cmc
inc
enter
adc
aaa
add
aam
repnz
into
or
push
aad
fadd
mov
xchg
leave
mov
inc
pop
fiadd
mov
inc
in
xchg
movs
arpl
pop
add
dec
test
add
repnz
jmp
mov
(bad)
int3
xor
bound
rol
shl
push
adc
pop
add
js
or
xor
adc
sbb
mov
(bad)
(bad)
call
inc
cld
mov
dec
mov
lahf
popa
popf
adc
outs
mov
xchg
dec
push
js
pop
icebp
(bad)
fldl2e
xchg
mov
push
mov
sub
push
push
jb
movs
cmp
xchg
test
add
aaa
andps
push
sub
mov
rcl
or
sub
adc
retf
cdq
das
cli
(bad)
(bad)
jmp
dec
xchg
fwait
sbb
lds
dec
test
inc
test
mov
test
(bad)
(bad)
push
inc
cli
fdivr
neg
xor
retf
and
movs
fwait
(bad)
mov
js
test
lock
push
pusha
pop
pop
push
cmp
call
call
rol
fist
mov
popa
stc
(bad)
enter
(bad)
push
inc
enter
xchg
mov
(bad)
retf
nop
retf
mov
aaa
and
pop
popa
loope
push
sub
sti
loope
sub
aam
xchg
call
push
and
xor
jno
pop
cmp
sub
inc
(bad)
jg
cmp
lds
mov
sub
pop
sbb
dec
(bad)
inc
cmp
rcr
push
in
mov
ss
pop
inc
add
leave
cmp
dec
or
pmaxub
enter
rol
mov
call
xchg
call
arpl
dec
xchg
out
xor
mov
push
sub
pusha
into
mov
and
pop
push
fnstsw
mov
jns
pop
stos
jbe
xchg
sahf
pusha
(bad)
cmp
(bad)
add
mov
pushf
fsubr
mul
sar
cmp
pop
(bad)
icebp
data16
call
test
bt
mov
ins
add
repnz
(bad)
(bad)
mov
adc
pop
push
stos
icebp
cld
clc
scas
scas
out
push
xor
mov
(bad)
(bad)
call
mov
mov
shl
cmp
mov
ret
or
adc
cs
inc
(bad)
(bad)
(bad)
call
(bad)
mov
mov
gs
sti
xchg
dec
push
xlat
adc
test
xor
(bad)
(bad)
(bad)
mov
mov
pusha
sbb
inc
in
iret
mov
sbb
or
dec
mov
jmp
or
fs
jle
fsub
push
push
retf
push
retf
push
mov
call
xor
cs
xchg
xor
add
mov
test
inc
neg
pushf
(bad)
retf
or
ret
xor
adc
ins
dec
(bad)
mov
and
jmp
adc
ins
fsub
(bad)
(bad)
jg
div
cs
aas
add
std
mov
out
and
movs
das
jmp
(bad)
(bad)
(bad)
(bad)
fld
ins
lods
cmp
inc
sbb
adc
ret
and
ja
(bad)
(bad)
(bad)
fist
push
and
adc
jl
pop
std
and
ret
daa
adc
mov
sbb
(bad)
mov
dec
loop
movs
add
mov
(bad)
jmp
mov
fstp
push
push
cmps
and
out
and
inc
cmp
push
or
(bad)
cmp
shr
sbb
jecxz
out
lods
(bad)
out
xchg
stos
addr16
fstp
rol
ds
sub
dec
xchg
add
push
fadd
inc
mov
neg
es
cdq
mov
push
jl
dec
(bad)
test
sbb
das
sar
mov
imul
mov
(bad)
(bad)
(bad)
jg
in
push
mov
inc
inc
sub
or
loope
out
mov
sub
and
jno
jnp
(bad)
(bad)
(bad)
jmp
repz
sbb
inc
enterw
in
loopne
dec
loop
outs
in
mov
std
inc
or
or
mov
inc
push
and
out
gs
test
(bad)
(bad)
clc
aas
and
fstp
daa
out
or
mov
push
rol
mov
(bad)
call
push
mov
push
iret
aas
xor
test
mov
dec
ins
pop
test
mov
push
aaa
add
jmp
retf
cmp
clc
sub
push
repnz
push
inc
test
in
call
loope
ja
(bad)
push
test
mov
(bad)
int
sbb
loope
adc
sahf
jo
inc
jg
gs
xchg
enter
in
xchg
push
pop
(bad)
(bad)
(bad)
call
xchg
pop
cmps
movs
sub
push
ins
or
mov
rcr
adc
retf
stos
and
dec
push
mov
fcom
lock
mov
je
and
xor
leave
hlt
sub
rcr
sahf
imul
js
aad
pushf
or
test
(bad)
mul
stc
xchg
aam
call
pop
in
mov
pop
cmp
add
add
out
inc
out
jmp
xlat
lods
jo
xor
xchg
enter
inc
cmp
and
(bad)
(bad)
call
pop
enter
adc
xchg
or
retf
push
add
std
cli
es
pop
jns
nop
shr
push
dec
mov
add
sbb
loop
test
cmp
(bad)
(bad)
(bad)
inc
jecxz
push
push
(bad)
sbb
sbb
sahf
retf
sub
sbb
stc
sub
jnp
pop
(bad)
call
std
lods
cmp
push
ds
test
jecxz
data16
into
retf
es
inc
enter
mov
mov
xchg
xor
xchg
or
xchg
popa
loopne
lock
cdq
dec
mov
pop
mov
not
jl
jno
pop
(bad)
(bad)
jg
stos
xchg
jmp
leave
dec
sub
mov
pop
mov
cmp
xor
sbb
(bad)
(bad)
(bad)
inc
fadd
into
xchg
not
add
pop
mov
scas
or
mov
loop
popf
(bad)
(bad)
(bad)
(bad)
mov
jnp
imul
outs
(bad)
js
stos
xor
pop
xlat
pop
cmp
and
sub
jno
pusha
inc
add
mov
sub
pop
aam
cmps
jbe
sbb
xchg
sub
pop
xchg
addr16
pop
lods
add
(bad)
(bad)
push
ret
and
xchg
inc
add
stos
jecxz
mov
call
loopne
test
movs
call
call
inc
mov
ret
sub
mov
popf
call
popf
mov
call
cmp
(bad)
mov
mov
clc
cmp
lahf
sbb
jg
xchg
idiv
(bad)
(bad)
call
lds
stc
int
retf
iret
sub
xlat
rol
pop
les
push
add
xor
test
push
push
fs
out
sbb
arpl
adc
mov
(bad)
jmp
mov
cdq
cmp
shr
das
ins
xor
repz
jp
mov
scas
push
pop
sar
or
cmp
sbb
xor
loopne
mov
inc
sbb
jmp
mov
inc
js
loope
jecxz
xchg
xchg
mov
xchg
outs
jecxz
std
add
push
icebp
das
cli
out
clc
ret
and
cli
mov
loope
popa
xchg
jb
(bad)
(bad)
(bad)
inc
and
dec
(bad)
leave
lea
in
outs
std
test
jbe
mov
lock
(bad)
(bad)
call
je
jnp
xlat
addr16
mov
pop
sub
pop
popa
js
cmps
xchg
push
push
jmp
(bad)
(bad)
jg
jecxz
dec
nop
sub
jae
jge
mov
push
xor
adc
fcomip
inc
add
add
rcl
add
test
fiadd
inc
pop
fst
ins
mov
cmp
nop
jge
dec
cdq
imul
mov
xor
aaa
and
cmps
pop
jnp
dec
add
mov
and
sbb
stos
xor
out
push
int3
(bad)
(bad)
(bad)
(bad)
jmp
fisttp
xchg
pop
add
cmp
fist
(bad)
xor
adc
add
push
adc
jmp
repnz
clc
pop
arpl
dec
enter
mov
or
sahf
sub
fmul
(bad)
(bad)
(bad)
call
cmps
loopne
mov
nop
sbb
sbb
push
mov
ror
stos
jecxz
lods
out
adc
icebp
ja
cmp
in
or
mov
out
cli
(bad)
(bad)
jmp
cdq
jno
cmp
into
dec
(bad)
aaa
outs
xchg
shl
inc
cmp
mov
(bad)
out
xchg
shl
cmp
sbb
(bad)
xor
mov
jnp
adc
div
xor
(bad)
(bad)
dec
les
(bad)
into
cwde
lods
mov
add
jns
xchg
movs
and
and
(bad)
aaa
jno
cmp
mov
(bad)
jmp
icebp
mov
int3
lea
add
inc
sub
jnp
mov
dec
neg
mov
(bad)
leave
cmc
add
xchg
dec
(bad)
(bad)
(bad)
inc
fcom
int
adc
js
push
xor
pop
fwait
dec
sbb
push
(bad)
mov
mov
pop
mov
in
sub
jg
in
push
mov
xchg
mov
ins
jmp
in
xor
mov
push
fistp
sub
xchg
clc
(bad)
(bad)
inc
shl
sub
ds
leave
adc
in
pop
dec
dec
or
(bad)
(bad)
xchg
fcomp
cwde
mov
cmc
push
aas
dec
xchg
and
mov
aam
(bad)
shr
sbb
add
pop
push
or
mov
(bad)
mov
jmp
popa
popa
in
mov
loopne
(bad)
(bad)
(bad)
(bad)
jmp
std
(bad)
arpl
mov
in
and
sbb
mov
pop
dec
daa
fsub
(bad)
(bad)
call
ss
out
xchg
xchg
leave
test
jg
sub
test
arpl
aas
cli
(bad)
(bad)
(bad)
jmp
int
push
push
pop
out
mov
xchg
adc
jl
cs
add
(bad)
(bad)
inc
mov
pop
loop
push
adc
in
pushf
mov
in
in
fs
ret
(bad)
(bad)
(bad)
jmp
mov
push
mov
and
out
jb
mov
addr16
mov
dec
mov
adc
push
xchg
push
pop
sbb
in
mov
(bad)
(bad)
call
lds
pop
add
inc
mov
(bad)
test
(bad)
stos
popf
fnstenv
mov
movs
int3
mov
(bad)
(bad)
mov
or
movs
jle
jne
push
ret
fsub
cmp
js
shr
movs
mov
out
add
push
mov
stos
int3
and
mov
(bad)
(bad)
jmp
jge
jbe
cld
push
movs
xchg
pop
mov
adc
outs
inc
and
add
ds
(bad)
(bad)
(bad)
(bad)
fidivr
dec
ficomp
repz
jl
int
pop
(bad)
xchg
pop
xor
cmc
and
pop
cmp
fucomip
sbb
nop
(bad)
(bad)
inc
xchg
cmps
dec
aad
arpl
xchg
ja
add
jbe
pop
ret
(bad)
(bad)
(bad)
call
sbb
add
aaa
ss
ss
dec
inc
and
(bad)
(bad)
(bad)
call
jb
and
test
sub
mov
das
jnp
lds
add
hlt
call
aaa
inc
mov
add
out
and
sahf
ja
pop
push
sbb
fadd
(bad)
mov
cmp
sub
(bad)
mov
out
inc
jmp
mov
mov
jo
stos
jp
lea
(bad)
(bad)
jle
clc
jge
fisubr
xchg
sahf
add
mov
adc
mov
sbb
mov
aaa
int
(bad)
(bad)
dec
pop
cmp
ror
mov
sbb
shl
std
enter
jge
(bad)
(bad)
(bad)
cmp
and
fsub
mov
xchg
and
xor
push
popf
sub
(bad)
(bad)
call
hlt
(bad)
cmp
mov
lahf
mov
mov
iret
bound
push
adc
(bad)
or
push
stc
ret
outs
jl
movs
(bad)
(bad)
jg
adc
inc
pop
mov
enter
dec
ds
and
out
xor
ja
in
jg
(bad)
(bad)
out
adc
inc
cmp
in
nop
and
push
bnd
add
out
shl
xor
(bad)
(bad)
(bad)
jmp
ja
mov
push
scas
movs
cmp
fcomip
(bad)
call
xchg
aad
sub
(bad)
(bad)
(bad)
push
shrd
jge
mov
aam
dec
clc
cmp
in
fisttp
jbe
jnp
pop
movs
fcomip
push
dec
imul
xchg
cmp
sbb
xor
(bad)
push
mov
mov
adc
mov
inc
pop
dec
push
xchg
adc
imul
xor
jecxz
dec
adc
out
add
aaa
push
int3
sbb
loop
mov
xchg
dec
mov
imul
add
jmp
(bad)
jmp
and
in
xor
mov
rcl
out
es
inc
(bad)
test
mov
and
(bad)
(bad)
jmp
inc
mov
inc
js
mov
(bad)
out
xor
xor
xchg
inc
jecxz
int
(bad)
(bad)
(bad)
call
arpl
pop
xor
or
loop
jae
mov
lods
push
leave
(bad)
add
mov
inc
je
dec
mov
xlat
(bad)
(bad)
(bad)
(bad)
jmp
scas
pusha
dec
pop
and
jmp
stc
and
jg
sar
cmp
(bad)
jmp
ds
lods
out
or
push
imul
jmp
mov
jmp
mov
out
cli
(bad)
(bad)
cmp
push
int
mov
fist
repz
jo
int
or
push
sbb
scas
(bad)
(bad)
(bad)
(bad)
js
aam
sub
push
rdmsr
sbb
add
cmps
sub
in
xor
bound
jge
jg
sub
dec
or
add
aam
cs
xchg
mov
test
std
jmp
adc
pop
mov
pop
imul
xor
adc
(bad)
(bad)
(bad)
call
pop
fcmove
adc
sbb
push
sbb
test
mov
adc
dec
sbb
xchg
cli
mov
sub
out
in
mov
in
xchg
ror
pop
popf
or
int3
scas
(bad)
(bad)
inc
mov
test
loopne
daa
mov
xchg
add
and
gs
(bad)
(bad)
call
hlt
mov
out
shl
jne
sar
inc
addr16
loopne
xor
and
inc
scas
sub
(bad)
push
sub
sbb
jns
mov
push
cmc
cs
push
inc
ficom
int
xchg
add
or
mov
outs
clc
les
dec
jecxz
mov
(bad)
(bad)
inc
sub
outs
push
data16
imul
jmp
inc
int
fcmovnu
xchg
sbb
dec
sub
(bad)
movs
in
je
(bad)
(bad)
push
cli
mov
(bad)
sbb
dec
mov
xor
pop
ja
adc
push
popf
ja
shr
cmps
mov
stos
and
push
call
adc
into
in
int
sub
lds
mov
pop
(bad)
jnp
fistp
cmc
mov
push
jecxz
int3
xor
push
fdivrp
(bad)
(bad)
jmp
pop
xlat
(bad)
fadd
or
std
and
mov
mov
cld
push
ficom
cmp
outs
ss
je
shl
and
jl
(bad)
(bad)
fcomip
or
loopne
jae
push
sbb
pop
sbb
sbb
cmp
xchg
or
(bad)
(bad)
dec
push
mov
dec
or
jbe
push
clc
xor
or
inc
adc
(bad)
call
xchg
add
sar
bound
xchg
repz
test
push
mov
ss
dec
add
or
fdiv
cwde
imul
(bad)
(bad)
(bad)
call
mov
mov
ss
das
shl
mov
lods
pop
xlat
push
das
test
sti
adc
jo
jg
fcomip
push
movs
fnstsw
push
in
ja
repz
lahf
mov
(bad)
(bad)
(bad)
call
test
(bad)
mov
mov
test
aaa
lds
retf
sbb
out
scas
xor
(bad)
(bad)
jmp
leave
mov
test
push
lea
xchg
ret
enter
movs
loope
pop
(bad)
(bad)
(bad)
(bad)
call
mov
in
or
and
ret
(bad)
fdiv
lock
outs
lock
jg
(bad)
(bad)
call
sub
movs
sbb
rol
jp
push
lock
xchg
inc
test
(bad)
(bad)
fbld
push
gs
or
xchg
imul
add
popa
stc
cmp
rol
jnp
pop
or
cmps
xchg
scas
push
xchg
bound
push
loope
ins
std
jmp
dec
retf
test
or
stos
xchg
fcmove
cmp
(bad)
(bad)
(bad)
jg
aas
pop
sbb
and
mov
or
mov
jno
push
cmps
mov
sub
sub
nop
jg
aaa
cdq
jp
xchg
lahf
push
imul
shr
jg
(bad)
(bad)
(bad)
jmp
pop
or
xor
sahf
in
mov
inc
icebp
mov
outs
cmp
or
ins
mov
(bad)
mov
mov
or
adc
or
repz
fnstenv
(bad)
(bad)
jmp
push
rcr
(bad)
clc
cmp
rcl
fsub
(bad)
mov
(bad)
(bad)
jmp
popf
in
jl
aam
int3
pop
scas
adc
mov
stos
inc
nop
lea
pop
xlat
lea
rcl
jl
std
(bad)
(bad)
jg
into
sub
pop
push
out
imul
stos
out
or
out
mov
icebp
mov
xor
adc
mov
push
mov
add
fsub
sub
and
pop
clc
xchg
mov
in
ffreep
push
loope
jmp
mov
inc
xor
imul
inc
inc
or
sub
iret
ud0
push
loop
jbe
pop
test
dec
push
(bad)
sub
(bad)
mov
or
jbe
and
jp
cdq
daa
(bad)
push
jmp
add
jne
mov
ins
inc
cld
(bad)
cld
inc
mov
stc
dec
rcl
dec
mov
cmp
rol
sti
sbb
sahf
(bad)
(bad)
(bad)
call
xor
popaw
jmp
fistp
stc
gs
jne
mov
loope
mov
(bad)
(bad)
jmp
adc
lods
mov
repnz
movs
lods
je
pop
clc
mov
push
dec
xchg
out
mov
fnstsw
fiadd
scas
mov
inc
imul
out
ficomp
call
std
adc
xchg
xor
(bad)
(bad)
call
cmp
retf
cmp
loopne
cmp
ret
push
jmp
iret
inc
or
dec
adc
adc
cmc
call
push
pusha
pop
(bad)
(bad)
(bad)
call
mov
push
adc
or
push
test
xor
mov
push
xor
int
jne
ror
sahf
mov
mov
in
and
scas
mov
push
call
outs
call
scas
push
inc
push
jmp
(bad)
inc
cld
scas
enter
mov
dec
pushf
push
mov
mov
stos
enter
call
clc
(bad)
jmp
clc
out
sub
loope
mov
jae
lahf
sbb
mov
call
pop
repnz
sbb
xchg
adc
mov
movs
out
jb
dec
mov
hlt
(bad)
(bad)
jmp
cmp
cmp
xor
neg
add
mov
lahf
ds
je
mov
(bad)
mov
or
lahf
pop
lods
cmp
shr
or
ret
repnz
into
sahf
add
mov
jnp
xlat
mov
xor
test
xor
sub
and
loop
push
dec
push
inc
pop
mov
fs
std
and
push
je
push
pop
jno
jp
(bad)
(bad)
push
and
call
std
rcr
and
je
add
mov
pop
push
js
or
outs
sub
loopne
mov
xchg
inc
mov
(bad)
(bad)
inc
cmp
fiadd
cs
push
and
icebp
inc
enter
std
push
add
jg
add
(bad)
mov
or
add
(bad)
jmp
loope
test
mov
jp
(bad)
repz
(bad)
jno
add
leave
bound
call
fadd
push
loop
or
inc
pushf
add
mul
push
leave
sbb
(bad)
(bad)
mov
mov
adc
sbb
sbb
imul
aaa
add
loope
outs
(bad)
(bad)
(bad)
dec
sub
sub
clc
js
mov
cmc
std
push
test
cmc
nop
(bad)
(bad)
(bad)
(bad)
inc
sbb
xor
mov
mov
add
cli
stos
inc
in
mov
test
mov
ret
out
mov
(bad)
(bad)
(bad)
push
rcl
add
int
call
pop
aam
ficom
icebp
mov
and
lock
sahf
dec
and
imul
ins
retf
fld
mov
retf
adc
sbb
mov
cli
(bad)
(bad)
push
jp
mov
fcom
pushf
add
cmps
push
ss
or
and
(bad)
push
rcr
sbb
xor
xchg
or
std
in
cmp
fdivrp
scas
add
pop
gs
std
outs
xchg
xlat
inc
adc
lock
mov
fiadd
out
cli
(bad)
push
jbe
(bad)
stos
mov
mov
addr16
out
jne
push
lods
mov
or
std
retf
in
mov
cdq
pop
lods
mov
faddp
lock
adc
fwait
add
mov
mov
in
dec
ins
repz
outs
cmc
aaa
or
test
dec
popf
pop
jmp
call
clc
shr
sbb
sbb
scas
mov
lds
(bad)
(bad)
(bad)
jg
nop
adc
mov
adc
leave
xor
cli
xlat
les
cmp
add
add
push
xlat
mov
jmp
xchg
xchg
loop
es
mov
jb
pop
sbb
push
(bad)
jle
sar
call
test
into
movs
xor
push
push
jp
loope
mov
add
jmp
das
adc
hlt
sbb
lock
pop
jb
sub
xlat
js
(bad)
push
add
push
push
adc
stc
push
xchg
dec
adc
push
mov
jmp
add
push
test
into
arpl
cwde
call
dec
dec
jecxz
mov
(bad)
cmp
rcr
loop
sahf
or
(bad)
das
xor
cli
test
sbb
sets
(bad)
(bad)
jg
sub
mov
mov
jg
xor
sbb
aad
pop
xchg
pop
jmp
dec
cld
loopne
sbb
pop
sub
xchg
cs
test
retf
out
(bad)
(bad)
jmp
int3
pop
out
(bad)
fcmovne
lock
xchg
dec
xor
in
mov
pop
cmp
ins
aas
push
(bad)
(bad)
(bad)
call
mov
sub
inc
lock
std
into
push
mov
xor
push
clc
inc
enter
(bad)
(bad)
(bad)
dec
add
push
test
pop
nop
scas
xor
repnz
ds
and
imul
sbb
call
in
cwde
lahf
mov
pop
(bad)
xlat
lock
imul
test
push
and
in
push
mov
ficom
dec
out
pop
(bad)
mov
(bad)
frstor
cmp
aad
sahf
pop
dec
mov
out
mov
lahf
jne
enter
push
or
jmp
call
loop
lahf
(bad)
stos
sbb
sub
in
bnd
cmp
xchg
mov
push
sti
fdiv
in
cmps
jmp
and
repz
loopne
rcr
dec
das
(bad)
(bad)
(bad)
inc
daa
cli
dec
test
or
fdivr
jo
leave
(bad)
xchg
inc
stos
mov
xor
dec
sub
aam
jg
dec
push
pop
push
add
push
inc
mul
hlt
push
adc
adc
retf
in
mov
(bad)
cmp
(bad)
or
ins
test
dec
mov
rcr
aaa
imul
(bad)
(bad)
inc
fisub
or
loop
add
push
mov
rol
jg
sub
jp
popf
xchg
sti
add
inc
gs
cmc
sub
jmp
add
sbb
mov
aad
mov
sbb
iret
adc
(bad)
call
retf
call
cdq
dec
div
loop
add
jne
xchg
stos
inc
adc
pop
jbe
test
mov
rol
dec
cwde
cmp
xor
leave
fwait
in
and
adc
std
repz
mov
inc
cmp
stos
or
push
xor
or
push
push
dec
push
(bad)
adc
or
jg
cmp
sbb
push
sub
scas
cmc
or
mov
(bad)
(bad)
(bad)
mov
xor
(bad)
sbb
sub
dec
mov
rol
std
jg
inc
loope
adc
mov
cld
xlat
xchg
sub
(bad)
(bad)
(bad)
jg
sti
lods
pop
cmp
faddp
test
loope
sub
inc
shl
or
xor
fdiv
cmp
add
lock
aas
add
adc
(bad)
fisttp
and
sbb
sbb
mov
(bad)
(bad)
fdivr
test
push
push
mov
mov
xsha1
cmps
mov
mov
sbb
push
and
(bad)
jmp
pop
push
and
cmc
xchg
jae
mov
mov
cli
out
popa
or
sbb
(bad)
xor
outs
mov
or
aas
repz
out
jge
(bad)
(bad)
push
push
rcr
in
xchg
mov
mov
and
mov
pop
dec
sar
leave
ins
(bad)
(bad)
jmp
inc
xchg
mov
sbb
fcom
pop
(bad)
(bad)
(bad)
(bad)
call
fwait
stc
inc
add
fcmovnbe
jns
push
call
adc
enter
call
adc
(bad)
(bad)
push
and
push
or
xchg
vpunpckhqdq
inc
mov
mov
mov
lods
(bad)
(bad)
(bad)
jmp
stos
(bad)
push
test
in
movs
cli
dec
jnp
mov
pop
call
xchg
jb
sbb
inc
or
std
aaa
mov
push
(bad)
(bad)
jmp
mov
and
adc
push
and
(bad)
push
xchg
jbe
push
mov
or
adc
mov
sti
inc
jo
pop
add
inc
test
lock
mov
or
(bad)
js
sub
scas
push
sbb
aad
mov
pop
aad
dec
sub
scas
stos
jg
jne
cmp
(bad)
(bad)
inc
mov
lods
pop
push
scas
ret
(bad)
cmp
repnz
sub
lods
(bad)
rcr
or
jbe
push
and
adc
(bad)
(bad)
dec
aas
fbld
bound
test
add
pop
dec
inc
sub
(bad)
(bad)
call
adc
cmp
jo
iret
fs
icebp
push
xchg
nop
scas
fsubr
movs
and
xor
or
(bad)
fcomip
jmp
inc
dec
or
ret
xchg
retf
(bad)
mov
push
daa
sub
(bad)
cmp
jle
xchg
ds
and
retf
push
js
scas
popf
mov
pop
lock
ins
fidivr
in
pop
cmps
mov
xchg
dec
push
or
inc
(bad)
ja
fcmovbe
inc
scas
pushf
jbe
xor
call
sub
mov
(bad)
cs
cmc
xchg
cmp
stc
pop
or
(bad)
(bad)
dec
jl
test
fnsave
cmp
stc
imul
hlt
movs
sahf
cmp
jp
inc
idiv
sbb
into
ret
mov
mov
push
mov
aad
(bad)
(bad)
(bad)
mov
mov
inc
sar
dec
mov
mov
or
sqrtps
call
(bad)
(bad)
(bad)
call
pop
push
jmp
mov
dec
cmp
lea
mov
leave
pop
sbb
(bad)
(bad)
inc
(bad)
jo
sub
scas
or
jo
xchg
xchg
mov
add
dec
sbb
retf
(bad)
call
cdq
in
int3
icebp
(bad)
xor
outs
push
nop
ret
inc
mov
cld
mov
sub
out
dec
jmp
ror
lea
cmp
mov
xlat
xor
addr16
js
inc
sbb
mov
shl
int3
lock
and
adc
call
add
inc
jmp
push
in
xchg
ficomp
mov
(bad)
int3
das
mov
lock
(bad)
call
mov
sub
or
cmp
mov
inc
ret
(bad)
popa
pop
or
sbb
(bad)
mov
mov
inc
mov
push
(bad)
(bad)
(bad)
jmp
or
ret
jmp
xchg
xlat
call
sbb
and
test
ins
jb
jns
cmp
adc
add
push
test
test
mov
out
rol
jmp
xor
mov
xor
test
dec
jo
xchg
retf
jg
jmp
dec
mov
mov
dec
imul
inc
sub
or
ficom
loope
xor
(bad)
(bad)
jmp
inc
jp
mov
movs
dec
(bad)
div
call
fsubr
or
imul
mov
jns
mov
sub
inc
scas
pop
mov
xchg
add
(bad)
jmp
jp
stos
xor
sbb
mov
sbb
int
sub
lahf
xlat
out
or
(bad)
cld
aam
arpl
test
push
push
int
out
mov
in
popa
push
(bad)
(bad)
jg
icebp
movs
test
mov
xor
outs
jmp
and
outs
sub
pop
out
mov
fstp
sar
out
xchg
sub
arpl
add
sbb
test
(bad)
jg
in
push
pop
or
xor
icebp
push
outs
cli
xchg
rol
sbb
push
aas
sbb
pop
call
fwait
(bad)
push
or
dec
ret
xchg
xchg
loope
std
gs
sahf
cmp
mov
mov
(bad)
(bad)
(bad)
dec
test
sbb
mov
sub
mov
and
inc
cs
sub
loope
lock
(bad)
call
jecxz
mov
fidiv
mov
fstp
add
fidivr
int3
stc
mov
test
shl
xor
repz
adc
(bad)
aas
xchg
dec
push
push
test
loope
int3
sbb
call
fs
cmp
jno
mov
xabort
and
call
sub
cmp
mov
push
push
mov
ds
test
popf
push
(bad)
(bad)
(bad)
jmp
add
jg
or
call
stc
inc
add
or
js
movs
hlt
adc
xlat
or
outs
mov
inc
and
loopne
dec
xor
lock
adc
fs
or
sbb
(bad)
(bad)
jg
mov
stos
add
add
cmp
loopne
sub
out
rol
push
(bad)
inc
sbb
jmp
bound
mov
mov
call
sub
test
and
xchg
and
and
aaa
repnz
call
dec
mov
adc
sub
pop
es
mov
outs
jno
adc
(bad)
(bad)
(bad)
push
cmps
and
sub
cli
ins
out
scas
mov
fwait
out
mov
popf
xchg
pushf
ret
jg
ffree
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jae
std
mov
mov
cmp
dec
push
mov
loope
xchg
and
(bad)
(bad)
jl
in
popf
xchg
enter
movs
in
fsubr
push
adc
out
push
jp
fptan
pop
cmps
dec
sub
clc
jmp
mov
mov
xor
dec
dec
lock
call
out
push
pop
add
mov
xchg
cmps
inc
adc
(bad)
(bad)
call
push
outs
shl
popa
push
sub
movs
bound
dec
lods
stos
jo
dec
push
jge
mov
pop
(bad)
inc
or
fbld
shr
outs
(bad)
cs
enter
pop
adc
retf
push
pop
mov
or
fwait
in
and
or
iret
cmp
(bad)
(bad)
out
mov
jmp
pop
test
arpl
fiadd
cs
push
jg
cli
xchg
ror
(bad)
(bad)
(bad)
push
ins
inc
add
add
lahf
mov
cmp
in
ds
(bad)
call
scas
icebp
popa
(bad)
bound
push
loop
xchg
add
shl
inc
and
ficom
(bad)
jg
(bad)
jmp
not
mov
out
push
sub
xchg
sub
mov
call
jmp
jge
xchg
retf
(bad)
rcl
xor
pop
int3
rcr
inc
jo
add
fcomip
mov
lea
or
cli
mov
mov
(bad)
repz
aas
adc
outs
push
(bad)
je
mov
add
(bad)
(bad)
call
xchg
repz
gs
into
sbb
add
xor
int
sub
(bad)
push
out
dec
aaa
xor
test
dec
add
stos
loope
add
push
ja
sbb
jmp
xor
std
fistp
(bad)
(bad)
(bad)
jg
dec
or
adc
icebp
(bad)
and
and
shr
fidivr
mov
retf
(bad)
(bad)
dec
cmp
and
je
xchg
push
fs
mov
adc
sbb
mov
(bad)
mov
dec
ret
and
sub
mov
test
add
(bad)
ins
scas
cli
(bad)
call
xchg
or
xor
fbld
dec
loope
aad
add
lods
mov
mov
(bad)
(bad)
jmp
adc
mov
mov
bound
inc
sbb
fwait
stc
fadd
dec
mov
icebp
jg
dec
add
jle
mov
(bad)
(bad)
(bad)
(bad)
mov
loopne
les
lds
and
enter
popf
stos
pop
es
jae
add
(bad)
(bad)
call
mov
dec
stos
and
mov
das
arpl
add
das
sbb
or
(bad)
(bad)
(bad)
dec
xor
sbb
push
pop
dec
pop
mov
and
mov
arpl
cmps
ja
or
pop
xchg
xor
jmp
push
repz
jo
(bad)
dec
je
into
(bad)
(bad)
(bad)
jg
repz
xchg
push
hlt
pushf
pop
pop
aam
jae
div
(bad)
fidiv
sbb
dec
mov
jno
and
(bad)
(bad)
jmp
inc
mov
movs
mov
cmps
stos
sub
lds
stc
pop
out
sub
nop
leave
fst
(bad)
(bad)
(bad)
call
movs
mov
lock
push
pushf
(bad)
or
mov
push
push
and
(bad)
xchg
mov
mov
(bad)
adc
xchg
push
(bad)
xchg
jae
scas
(bad)
mov
popa
inc
cmps
iret
test
push
cli
jae
cmp
pop
int
pop
int
(bad)
(bad)
push
retf
jo
xchg
cdq
push
test
lahf
sbb
ror
xchg
or
adc
xor
sub
sbb
mov
jge
(bad)
(bad)
(bad)
aas
in
test
jmp
hlt
cmps
jg
mov
not
and
cmp
mov
push
aas
fdivr
cmp
mov
sub
jnp
jnp
push
cmp
cmc
mov
xor
(bad)
stc
rcr
test
(bad)
(bad)
call
inc
adc
cld
daa
fcom
jmp
fs
sbb
pop
and
(bad)
jmp
fstp
fiadd
shl
push
xchg
or
imul
(bad)
(bad)
(bad)
jmp
test
jnp
rol
mov
scas
in
fsub
add
pop
ret
mov
pop
retf
inc
add
(bad)
(bad)
(bad)
dec
cmc
retf
cmps
or
push
rol
arpl
rol
pusha
mov
hlt
pusha
or
std
jns
(bad)
(bad)
(bad)
fdecstp
xor
iret
lea
or
add
les
aas
mov
xchg
aam
sbb
fmul
mov
(bad)
mov
je
xor
add
cld
(bad)
jmp
sbb
dec
fwait
sbb
pmulhuw
fcom
xchg
pop
sub
retf
nop
or
cli
aaa
dec
and
nop
sbb
xor
sbb
mov
push
(bad)
mov
das
xchg
mov
imul
inc
or
or
popf
xlat
test
pop
das
or
sbb
int
mov
jmp
bound
mov
jae
rcl
push
jbe
lea
(bad)
xor
dec
cld
stos
loopne
jno
pop
jge
adc
mov
loop
xor
jl
sbb
ss
inc
(bad)
push
int
inc
pop
and
fs
xchg
dec
out
sub
fst
push
int
mov
cmps
pop
xchg
push
pop
test
aad
cmc
jg
rcr
mov
mov
(bad)
(bad)
(bad)
call
dec
mov
mov
and
inc
rol
out
cmc
cwde
out
cdq
pop
jl
test
pop
mov
add
fwait
popa
sar
repnz
xchg
data16
in
and
jle
xchg
(bad)
(bad)
jmp
push
cld
cli
jle
ret
push
xor
jmp
test
and
(bad)
(bad)
(bad)
mov
movs
cmps
push
nop
out
xchg
mov
jl
das
add
in
sub
xor
(bad)
(bad)
call
into
ins
push
mov
imul
std
inc
xor
movs
lea
pop
inc
test
cmp
call
and
jns
pop
and
dec
aas
repnz
jge
lock
mov
sti
jbe
mov
mov
jg
cmp
jge
pushf
addr16
push
inc
dec
fsubr
aad
cmp
call
adc
out
repnz
and
and
add
jg
inc
xor
(bad)
(bad)
push
jne
adc
jg
test
or
iret
scas
or
dec
add
xor
or
(bad)
(bad)
inc
and
shl
and
add
das
iret
daa
xor
(bad)
js
(bad)
(bad)
push
addr16
dec
fdiv
inc
(bad)
mov
push
adc
pop
retf
push
retf
clc
stos
push
fsub
push
fsub
xchg
out
(bad)
fild
mov
fcomi
push
aaa
stos
cli
or
dec
pop
shl
seta
mov
in
scas
cmp
shr
push
in
sub
out
xchg
hlt
jge
mov
mov
aas
daa
sub
mov
sub
xchg
addr16
jg
and
in
sti
jns
(bad)
(bad)
inc
sahf
jl
lock
xor
add
or
pop
sub
aam
(bad)
aam
xchg
loopne
cmc
rol
(bad)
(bad)
inc
out
sahf
mov
mov
push
sub
mov
ja
dec
sub
(bad)
call
cmc
in
neg
ja
retf
cmp
(bad)
(bad)
(bad)
mov
sbb
sub
loop
cwde
mov
jmp
(bad)
in
jg
(bad)
pop
and
(bad)
mov
inc
fiadd
lahf
jmp
(bad)
cli
call
xchg
mov
(bad)
jmp
pop
mov
adc
dec
sbb
retf
aaa
hlt
push
inc
repz
pusha
(bad)
jmp
dec
xor
jno
cwde
push
xlat
xchg
outs
jo
sub
(bad)
mov
fcom
lods
or
push
sub
pop
std
sub
lock
rol
cmp
inc
pop
mov
mov
stos
add
pop
fistp
fisttp
sub
mov
pop
(bad)
(bad)
(bad)
call
jmp
xchg
jle
in
pop
or
xchg
mov
mov
add
(bad)
(bad)
(bad)
dec
gs
push
ror
sub
sub
mov
scas
cwde
cmp
mov
xchg
push
std
(bad)
fcmovu
(bad)
test
push
mov
gs
jmp
sbb
repnz
sbb
xchg
jo
mov
jle
shl
jle
loop
scas
shl
mov
cmp
mov
in
adc
cld
cli
sbb
(bad)
mov
(bad)
fbld
push
push
imul
sub
pusha
jne
add
cwde
aaa
mov
gs
mov
(bad)
(bad)
push
sub
add
sbb
xor
sbb
sub
mov
retf
pop
retf
push
rcl
xor
push
cmc
inc
repnz
sbb
mov
(bad)
(bad)
(bad)
cmp
mov
jo
push
jge
in
ret
jecxz
scas
movs
popa
stc
and
jg
sub
mov
sub
lock
jmp
(bad)
(bad)
(bad)
push
retf
cmps
into
fidivr
jae
sbb
mov
(bad)
add
popf
(bad)
inc
jp
or
cld
jmp
std
fstp
cmc
stos
pop
pop
pop
pop
call
stc
or
inc
or
std
add
cmp
xor
aad
jae
scas
xchg
jp
lods
push
enter
(bad)
mov
dec
(bad)
adc
sub
fist
les
rcr
cmps
daa
sahf
shl
sbb
ret
mov
(bad)
out
push
mov
popa
cmp
(bad)
jge
fs
mov
jg
icebp
push
push
loope
stos
and
(bad)
aaa
inc
(bad)
outs
(bad)
fs
stos
and
mov
call
pop
rcr
push
scas
in
cmc
out
inc
xchg
adc
call
push
xor
mov
and
ficom
sub
(bad)
mov
shr
stos
sbb
xor
xor
mov
(bad)
(bad)
dec
pop
idiv
cwde
xchg
jns
adc
leave
mov
mov
aaa
mov
shl
and
fisubr
(bad)
dec
cld
jg
cmp
pop
ja
mov
dec
push
int3
lahf
adc
inc
aad
lea
cs
(bad)
(bad)
jmp
or
pop
test
aas
ja
rcr
jns
es
call
(bad)
(bad)
call
pop
iret
ins
ins
gs
loopne
pushf
push
sbb
cld
xor
and
aas
iret
or
or
xor
sbb
mov
(bad)
(bad)
(bad)
fcmovnbe
in
ror
cmp
cmp
xchg
sub
rcr
lods
pop
addr16
sbb
or
sahf
call
(bad)
fild
ret
inc
adc
mov
cwde
int3
hlt
(bad)
(bad)
(bad)
(bad)
out
push
dec
out
adc
sbb
mov
retf
xchg
push
jle
jp
pop
dec
jo
and
enter
(bad)
(bad)
jmp
add
imul
rol
or
jl
xor
fnstcw
sub
mov
out
jg
xor
(bad)
call
aaa
(bad)
push
jmp
push
ins
call
(bad)
push
hlt
fidiv
xchg
push
adc
cmp
(bad)
(bad)
dec
repnz
adc
movs
call
xor
inc
dec
inc
test
shr
loope
pop
dec
adc
push
ins
add
pop
cld
(bad)
(bad)
std
imul
aaa
popf
mov
and
fldenv
and
test
(bad)
(bad)
(bad)
call
push
dec
jmp
test
push
lods
scas
or
inc
jecxz
xchg
or
adc
in
xor
(bad)
mov
call
dec
es
(bad)
or
sti
xchg
das
ret
outs
xchg
mov
add
xchg
imul
call
lods
adc
ins
test
jns
cli
sbb
mov
mov
bnd
(bad)
(bad)
(bad)
jmp
rcr
add
rol
add
add
pop
adc
pushf
push
jnp
mov
xor
adc
outs
mov
(bad)
ins
inc
rcr
jge
jmp
(bad)
outs
rcr
or
(bad)
aam
scas
fbstp
shr
sub
fcomip
mov
ret
xchg
jnp
rcr
inc
imul
and
clc
mov
sub
dec
sub
call
mov
push
call
inc
fdivr
add
test
add
jg
inc
push
jmp
adc
add
sub
call
sub
inc
mov
jbe
pusha
pusha
pop
outs
test
(bad)
call
add
push
xchg
add
xor
cli
pop
mov
out
mov
jne
in
outs
mov
into
ss
or
jmp
mov
jbe
(bad)
(bad)
(bad)
jp
aaa
shl
in
ret
out
add
out
ficomp
adc
sub
scas
jae
dec
(bad)
(bad)
(bad)
inc
out
cmps
mov
je
dec
jg
dec
nop
repnz
mov
loopne
(bad)
mov
mov
dec
push
(bad)
outs
pop
adc
mov
fwait
setg
ds
fist
add
(bad)
fistp
mov
mov
retf
inc
push
cmp
sbb
push
hlt
push
mov
fs
push
and
add
(bad)
(bad)
fcomip
mov
xchg
push
cmps
sub
xor
inc
sbb
sub
cmc
ror
cdq
pop
dec
mov
(bad)
loopne
and
jp
add
jmp
mov
mov
pop
xor
push
call
(bad)
dec
cmp
shr
pop
mov
mov
add
and
xchg
in
(bad)
(bad)
push
sub
stc
dec
add
enter
in
sub
cs
icebp
xor
into
xor
mov
(bad)
(bad)
fbld
mov
fwait
imul
adc
mov
sbb
stos
jle
scas
inc
std
(bad)
(bad)
call
or
mov
bound
sbb
push
imul
test
cmp
xchg
mov
or
mov
pushw
das
dec
mov
cmp
inc
push
mov
test
add
and
mov
jl
lods
js
(bad)
(bad)
dec
cmps
xlat
jnp
or
push
repnz
movs
into
push
push
ss
test
out
push
out
add
outs
adc
xchg
pop
mov
lahf
leave
int
dec
adc
or
mov
(bad)
(bad)
(bad)
inc
xor
arpl
or
loop
mov
pop
test
(bad)
inc
imul
sbb
xor
int
in
mov
enter
push
hlt
pop
fisttp
fcom
(bad)
(bad)
call
aad
out
das
(bad)
bound
iret
inc
dec
sbb
mov
in
leave
jmp
inc
mov
in
mov
xor
add
push
xchg
loop
ins
jmp
call
push
fstp
jno
push
adc
std
cwde
test
inc
sbb
shl
dec
lea
mov
xchg
imul
push
(bad)
call
cld
stc
(bad)
inc
and
arpl
dec
lock
sti
clc
and
sbb
outs
cmc
fnsave
add
call
mov
lahf
lds
scas
clc
jmp
sti
xchg
lock
adc
push
mov
xchg
mov
(bad)
(bad)
(bad)
call
dec
test
xchg
cmps
stc
mov
ror
mov
sub
not
bound
das
sub
(bad)
(bad)
(bad)
dec
mov
and
push
dec
ins
add
inc
cmc
outs
cld
cmp
mov
pop
sub
jecxz
(bad)
jmp
inc
push
jns
jbe
imul
push
inc
lods
cmc
ja
or
aam
out
out
icebp
(bad)
(bad)
(bad)
mov
jg
push
pop
push
adc
and
les
fdivr
retf
repz
dec
cld
or
pop
mov
es
xchg
cmps
sub
and
call
push
aas
cmp
fwait
in
(bad)
cdq
lods
cld
push
ja
jns
jo
(bad)
(bad)
inc
sbb
or
xchg
mov
sahf
add
scas
sbb
(bad)
(bad)
(bad)
(bad)
mov
pop
(bad)
pop
and
pop
xchg
pop
dec
lock
hlt
fsub
ins
add
cld
cwde
jp
(bad)
(bad)
(bad)
ficomp
sbb
jg
inc
imul
cmps
dec
xchg
pop
rcl
cmp
pop
and
mov
fnsave
data16
int
loop
inc
inc
fistp
int
mov
mov
idiv
mov
pop
(bad)
(bad)
inc
sbb
adc
xchg
or
sahf
mov
idiv
(bad)
(bad)
push
sbb
cmp
cmps
scas
add
cmp
lods
push
sbb
sub
xchg
mov
aam
cmc
pop
das
cmps
xchg
fdiv
scas
xlat
push
stos
rcr
dec
mov
dec
mov
outs
add
retf
add
neg
dec
pop
xor
lods
cmp
jp
out
js
(bad)
(bad)
push
xor
add
and
inc
popf
popf
jl
lock
mov
jno
jge
and
leave
cmp
loop
inc
cs
out
and
or
jnp
and
(bad)
(bad)
(bad)
mov
imul
in
pop
xchg
and
cmp
jp
aas
nop
mov
stos
ins
cli
mov
outs
out
mov
aaa
in
xor
ss
add
ss
ror
mov
mov
cmp
and
cld
les
fmul
(bad)
xchg
xor
add
jmp
(bad)
(bad)
(bad)
push
and
cmc
mov
jns
adc
inc
(bad)
out
or
int
xchg
cli
add
adc
pop
sbb
(bad)
(bad)
(bad)
mov
(bad)
int3
scas
or
mov
jge
jle
and
push
mov
jnp
(bad)
dec
jb
fcmovnu
mov
mov
ds
loop
or
lods
bound
rcr
loope
mov
mov
jg
jmp
cmps
cmp
ins
dec
cli
pusha
cwde
(bad)
mov
mov
sahf
lods
adc
push
mov
and
ret
hlt
add
je
ret
popf
out
nop
outs
fs
pop
mov
(bad)
(bad)
cmp
pop
sbb
jnp
jno
mov
or
and
dec
arpl
mov
fwait
inc
enter
xor
jle
mov
pop
inc
or
lods
jmp
push
cmp
pushf
push
sbb
in
dec
and
and
cmp
dec
jae
jmp
(bad)
dec
sbb
or
and
cmps
call
inc
cmp
inc
add
cmp
jg
lock
sbb
inc
shr
loop
jbe
lahf
arpl
(bad)
(bad)
call
(bad)
sar
test
or
lods
test
ja
test
sar
cs
call
fwait
mov
ja
inc
call
or
scas
adc
xor
sub
(bad)
inc
pop
sbb
inc
xor
out
ds
shl
push
xchg
or
add
(bad)
call
lods
push
or
push
push
inc
ja
repnz
inc
in
dec
inc
jns
add
pop
sbb
js
adc
inc
xor
push
mov
ins
nop
pop
jo
call
sahf
pop
sbb
inc
sbb
or
in
jecxz
xor
and
int3
inc
xor
scas
sub
(bad)
test
mov
adc
cmp
pop
daa
mov
test
mov
xor
mov
(bad)
jmp
cld
mov
into
mov
retf
icebp
mov
mov
out
stc
mov
pop
or
mov
test
xchg
stc
fstp
ja
sbb
out
mov
or
aad
(bad)
(bad)
ds
outs
add
cwde
sub
test
xor
xor
push
add
inc
cwde
sbb
jg
xor
int
cld
cmp
mov
jb
sub
jae
(bad)
mov
mov
xchg
std
lds
dec
(bad)
inc
xchg
lods
pop
cli
push
int3
gs
out
sbb
mov
(bad)
call
icebp
sar
sbb
and
in
cmps
xchg
mov
movs
call
retf
pop
dec
in
adc
(bad)
add
cmp
sar
mov
mov
fistp
icebp
pop
mov
(bad)
les
es
jmp
aad
or
xchg
mov
shl
jb
pop
and
(bad)
(bad)
jmp
pop
fdiv
push
es
mov
cmp
add
int3
mov
sbb
push
cmp
push
(bad)
(bad)
(bad)
call
shl
xlat
mov
mov
ins
(bad)
fst
push
test
mov
jl
sub
xchg
adc
mov
mov
add
mov
arpl
cmp
jb
mov
rcl
cdq
lahf
mov
jmp
xchg
(bad)
imul
jmp
gs
push
cmps
cs
(bad)
(bad)
mov
arpl
popa
jle
sbb
jno
jns
gs
(bad)
xchg
xor
(bad)
(bad)
clc
pop
inc
cmps
and
xchg
mov
enter
dec
dec
sbb
scas
pop
cmp
or
jae
xor
(bad)
jmp
test
sbb
cs
jns
stos
test
jp
fsubr
pop
mov
call
jmp
push
retf
(bad)
fwait
dec
jmp
push
ja
test
call
call
adc
xor
(bad)
inc
cld
iret
and
scas
dec
(bad)
jl
cld
dec
jecxz
cli
dec
mov
lock
mov
(bad)
fdiv
loopne
gs
mov
stos
jne
sub
(bad)
(bad)
inc
enter
fsubr
rcl
repnz
push
sar
fild
dec
add
ds
aam
stc
dec
mov
(bad)
(bad)
call
mov
jle
jne
nop
pusha
ss
cmps
adc
sbb
sbb
repnz
shr
scas
cmp
ror
mov
sahf
fild
push
xlat
sub
es
(bad)
(bad)
dec
xchg
jnp
jo
not
jmp
sub
push
mov
sub
(bad)
fiadd
sar
(bad)
(bad)
jmp
lods
mov
in
push
or
retf
int3
shr
xchg
in
push
adc
inc
lds
scas
out
and
aas
jp
clc
sbb
nop
int3
dec
mov
call
mov
jb
dec
sbb
pop
xchg
loope
dec
es
mov
add
gs
xchg
mov
cli
mov
xchg
push
(bad)
out
fs
(bad)
mov
(bad)
das
sbb
xchg
and
pop
jbe
fistp
fisubr
push
cmc
dec
pop
cmp
test
push
in
mov
sbb
xchg
mov
(bad)
(bad)
(bad)
call
ins
sbb
mov
cmp
jle
and
mov
loopne
aam
sar
jg
push
jg
jb
sbb
pop
jle
xor
add
pop
add
mov
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
xlat
jp
xchg
ret
aaa
dec
(bad)
mov
cmp
push
(bad)
jne
xor
(bad)
int
adc
adc
mov
das
int3
xchg
stos
(bad)
inc
sbb
dec
(bad)
or
stc
rol
daa
cs
call
retf
fbld
f2xm1
nop
or
cld
stos
xor
add
lock
(bad)
jmp
push
mov
mov
push
shl
dec
jp
cdq
jle
jnp
clc
(bad)
fbstp
and
into
inc
ffree
ret
aad
rol
sbb
push
aaa
les
push
stc
and
cwde
xchg
pop
sub
mov
sub
js
call
movs
ret
iret
dec
cld
(bad)
jmp
sbb
in
(bad)
pop
add
push
mov
mov
jmp
stos
repnz
out
(bad)
jmp
mov
inc
addr16
popf
cli
icebp
sbb
xchg
mov
hlt
push
call
shl
xchg
call
out
adc
and
fidivr
dec
cmp
add
inc
bound
cmp
or
dec
mov
imul
mov
(bad)
(bad)
push
stos
loope
mov
scas
or
into
pop
call
int
push
jmp
xchg
jns
jns
or
shr
repnz
cmps
pop
ret
xchg
jecxz
xchg
(bad)
(bad)
call
xchg
push
nop
dec
jg
dec
and
pop
ror
mov
shr
sahf
ja
fimul
mov
(bad)
(bad)
(bad)
call
les
cdq
inc
xor
retf
jns
fld
sub
inc
lods
ds
out
mov
jmp
in
movs
jl
fcomi
sahf
jl
and
jo
mov
adc
sbb
cli
cmps
xor
jmp
xchg
adc
(bad)
(bad)
(bad)
(bad)
mov
dec
test
sub
jmp
out
inc
mov
cli
xlat
movs
pop
popa
dec
data16
(bad)
(bad)
(bad)
ficom
and
xchg
and
scas
adc
idiv
pop
push
jns
hlt
call
ja
pusha
push
aam
pop
dec
adc
pop
jmp
sbb
(bad)
cmp
pop
mov
mov
xchg
cli
jecxz
push
push
sbb
aad
xchg
dec
and
scas
clc
inc
jne
add
mov
mov
(bad)
(bad)
call
cdq
xchg
add
mov
inc
sbb
sbb
das
xchg
sahf
jle
imul
(bad)
(bad)
inc
in
iret
push
sbb
sti
jbe
xchg
jo
inc
adc
je
add
jmp
(bad)
(bad)
(bad)
inc
inc
test
jne
daa
(bad)
jo
stos
mov
ins
aad
in
dec
mov
dec
inc
ror
cmp
jle
jne
nop
and
fwait
mov
mov
mov
in
add
mov
mov
sbb
inc
or
sub
pop
call
push
xchg
inc
push
rol
jmp
mov
(bad)
push
call
pushf
adc
add
outs
dec
dec
rcl
test
mov
jg
and
xchg
sub
pop
push
movs
fisttp
push
xchg
push
cld
(bad)
(bad)
(bad)
cmp
ins
retf
push
sti
xor
xchg
(bad)
sar
ss
xor
cmp
mov
push
or
leave
adc
push
gs
dec
xor
xchg
pop
daa
xchg
lds
(bad)
(bad)
(bad)
(bad)
mov
lods
adc
mov
aam
push
cmps
xchg
push
ja
fwait
xchg
ins
jno
mov
je
std
outs
std
(bad)
dec
push
inc
pop
xchg
and
nop
and
adc
push
cmps
out
(bad)
jg
pop
mov
xchg
mov
(bad)
out
sub
(bad)
(bad)
jmp
jecxz
and
fiadd
(bad)
sbb
pop
xor
inc
sub
mov
(bad)
(bad)
(bad)
(bad)
out
jmp
jae
mov
push
sbb
stc
pop
mov
push
js
ficomp
sub
push
mov
loopne
and
mov
lods
pop
push
(bad)
(bad)
jmp
inc
ss
mov
nop
jnp
push
out
mov
adc
push
inc
add
pop
lock
call
in
(bad)
mov
and
push
jo
sbb
jmp
in
adc
int3
pop
mov
mov
popa
mov
push
repz
inc
ret
rcr
scas
cmp
pusha
push
in
pop
adc
and
adc
ins
cmp
(bad)
mov
es
imul
sbb
aaa
jbe
jns
xchg
scas
push
dec
fld
in
sahf
(bad)
(bad)
(bad)
dec
int
cmp
fldcw
dec
jne
push
ins
mov
rol
inc
lds
(bad)
(bad)
(bad)
(bad)
push
fucomp
into
jmp
(bad)
fcom
mov
cmp
movs
jno
cmp
iret
(bad)
(bad)
(bad)
jmp
sub
jmp
mov
fwait
ret
or
outs
xchg
shl
sahf
(bad)
(bad)
(bad)
dec
sub
(bad)
and
xor
inc
in
outs
jmp
sbb
(bad)
(bad)
call
scas
je
out
loopne
and
xor
push
jp
sbb
leave
add
xchg
test
dec
push
mov
outs
sbb
xchg
jmp
sub
ror
jmp
int
xchg
mov
cdq
pop
pop
xor
add
loopne
(bad)
(bad)
(bad)
call
outs
popa
sub
in
retf
mov
xchg
mov
popa
adc
xchg
(bad)
aaa
sbb
mov
xchg
(bad)
(bad)
(bad)
call
ss
mov
mov
cwde
gs
cmp
push
pop
(bad)
(bad)
(bad)
call
adc
pop
ret
push
add
mov
sub
imul
jbe
pop
shl
(bad)
(bad)
inc
or
jb
push
add
pop
test
push
xchg
or
sbb
inc
and
xchg
xor
jecxz
repz
sub
cdq
mov
mov
adc
push
push
enter
popa
ss
test
stos
jmp
(bad)
(bad)
(bad)
jmp
jge
and
xchg
xchg
xchg
inc
gs
fmul
or
add
pop
adc
(bad)
call
and
out
adc
icebp
mov
push
add
and
cld
test
std
(bad)
(bad)
(bad)
inc
xchg
(bad)
std
fdivr
push
(bad)
inc
ficomp
jle
push
sbb
(bad)
call
mov
cmps
jge
sbb
gs
nop
inc
test
cmps
jb
add
adc
dec
lds
call
pusha
push
fld
loope
pop
lods
add
outs
arpl
add
adc
xor
jae
(bad)
(bad)
dec
loope
arpl
sar
ss
daa
and
call
cld
(bad)
(bad)
mov
sar
pop
fisttp
cmp
mov
sar
(bad)
(bad)
(bad)
(bad)
fisubr
xor
sub
xchg
cld
imul
fcom
jmp
add
xor
aaa
add
call
xor
push
jmp
pushf
sub
push
cmp
(bad)
jmp
int
mov
les
imul
pop
cmp
adc
les
pushf
inc
adc
xor
(bad)
call
cli
movs
mov
push
inc
cmp
shl
lahf
dec
fnstenv
sub
(bad)
(bad)
(bad)
cmp
push
or
cmp
in
loopne
xchg
xchg
fsub
sub
pop
mov
inc
and
(bad)
daa
or
shr
jge
add
int
shr
test
inc
xchg
jb
(bad)
fbld
dec
loope
test
mov
jg
xlat
xor
stos
cmps
and
and
and
sbb
leave
stos
es
aam
mov
jbe
lock
push
hlt
(bad)
aas
pop
scas
cmps
cwde
cmp
ror
rol
nop
ja
(bad)
mov
jbe
xor
adc
loope
cmp
int3
mov
inc
or
loop
(bad)
(bad)
(bad)
call
std
cmps
dec
loope
stos
popa
leave
xchg
inc
sbb
int3
push
mov
pop
xlat
inc
ins
sub
pop
fwait
or
jmp
inc
mov
push
sub
(bad)
jmp
dec
lds
cs
scas
js
xor
push
lock
jmp
cmp
xchg
aam
fdiv
mov
sbb
sbb
mov
add
mov
add
(bad)
imul
jmp
fs
lds
fisub
pop
inc
fistp
mov
(bad)
(bad)
jmp
retf
fsub
pop
lods
ins
retf
lea
push
test
out
mov
(bad)
adc
cld
jle
(bad)
(bad)
(bad)
(bad)
cld
loopne
scas
and
fisttp
mov
xchg
std
gs
dec
mov
fs
jg
cmp
mov
popa
cmps
bndldx
lahf
cmp
pop
and
cmp
(bad)
or
push
js
(bad)
call
push
push
daa
stos
fdiv
stos
pop
mov
in
adc
out
stc
xor
push
xchg
(bad)
(bad)
inc
dec
adc
inc
nop
les
dec
fidivr
xor
mov
cmp
retf
push
adc
mov
sbb
repnz
xor
cmp
and
cmp
pop
scas
adc
nop
cld
xor
or
(bad)
(bad)
jmp
sub
je
push
or
mov
loopne
adc
mov
push
out
test
(bad)
call
lds
sbb
in
loopne
retf
lea
pop
jge
(bad)
ja
push
pop
mov
call
js
loope
in
push
ins
push
int
xor
push
push
shl
ins
cs
ret
das
cmp
addr16
mov
pushf
out
ror
ja
mov
stos
dec
jle
lock
mov
clc
push
mov
call
add
add
sub
jmp
(bad)
(bad)
inc
fidiv
mov
push
nop
pop
xchg
push
sahf
add
inc
outs
or
lock
aam
push
js
mov
(bad)
(bad)
(bad)
(bad)
mov
into
add
mov
xor
test
push
adc
and
inc
cs
(bad)
(bad)
jmp
ins
popa
cwde
or
fisubr
pop
out
sar
mov
mov
enter
(bad)
inc
scas
cmp
stos
mov
lods
(bad)
mov
xor
pop
inc
cmp
cmps
mov
lods
add
scas
jl
setb
cmp
std
imul
and
(bad)
xor
dec
sub
stos
xchg
sbb
jo
fs
fldenv
pushf
ins
(bad)
jg
call
jp
push
in
das
fwait
cmp
pusha
sub
test
or
(bad)
(bad)
call
scas
cmp
xchg
cdq
add
pop
cmp
sbb
adc
xlat
xchg
jne
mov
inc
dec
and
cs
cwde
dec
fst
out
arpl
out
jb
adc
je
xlat
cmp
outs
add
lock
(bad)
mov
out
push
jnp
cmpxchg
mov
jmp
(bad)
dec
je
sub
jg
xlat
sti
adc
mov
mov
(bad)
cmps
dec
cmp
(bad)
(bad)
inc
(bad)
addr16
xchg
xor
shl
sbb
cmps
xor
push
inc
retf
test
(bad)
(bad)
(bad)
jmp
movs
mov
and
inc
pushf
mul
js
xchg
push
ja
mov
cmp
(bad)
(bad)
(bad)
jmp
inc
popf
xor
cmps
mov
mov
adc
fsubr
xor
ror
cmp
jl
call
(bad)
jmp
mov
dec
and
adc
mov
and
(bad)
(bad)
push
test
mov
pop
xor
mov
je
xchg
or
inc
mov
pop
(bad)
(bad)
(bad)
inc
dec
(bad)
push
sub
loop
dec
xchg
in
jns
nop
ficom
adc
xor
add
adc
ins
movs
and
pop
push
pop
sbb
fcom
mov
cmps
(bad)
and
add
xchg
xchg
lock
ins
adc
add
outs
xchg
add
lods
jmp
fdivrp
(bad)
fbld
js
xor
sub
or
pop
imul
icebp
(bad)
push
popa
fld
cmp
inc
test
xchg
pop
sahf
sbb
inc
(bad)
(bad)
jmp
neg
cs
ins
sbb
aad
pusha
test
add
jo
test
mov
fldenv
lock
dec
into
imul
lahf
jae
pushf
in
or
or
and
pop
cmp
push
jnp
(bad)
fisttp
inc
bnd
xchg
jl
call
int
(bad)
(bad)
(bad)
cmp
cmp
push
adc
mov
xor
xor
(bad)
mov
int3
dec
dec
outs
adc
dec
arpl
rol
push
xchg
aas
pop
lock
das
lahf
pop
(bad)
(bad)
(bad)
inc
test
cmp
or
add
push
sbb
in
and
(bad)
(bad)
push
enter
punpckldq
hlt
xor
idiv
pushf
pop
lahf
icebp
lods
(bad)
(bad)
(bad)
mov
xchg
retf
xor
sub
je
ret
inc
mov
mov
mov
mul
cli
(bad)
(bad)
push
stos
xor
jge
jp
test
pushf
sbb
sub
(bad)
mov
icebp
sub
push
adc
jns
dec
pop
test
mov
sar
(bad)
fidivr
imul
mov
fs
adc
xor
(bad)
sahf
call
in
test
mov
shl
movs
sbb
je
mov
(bad)
and
push
inc
mov
or
jle
push
popf
xchg
inc
mov
cmc
push
cmps
fs
push
mov
ins
scas
sar
add
int3
push
test
sbb
aaa
pop
iret
sub
pushw
pop
ud0
(bad)
(bad)
ds
arpl
push
into
pop
xor
adc
(bad)
test
std
jmp
push
and
(bad)
(bad)
jmp
add
das
std
in
add
push
xor
inc
aad
xor
add
mov
imul
fst
movs
fnstsw
push
jl
or
xchg
xor
dec
mov
xor
jno
pop
daa
adc
mov
inc
(bad)
adc
add
(bad)
(bad)
mov
add
call
test
adc
mov
(bad)
(bad)
(bad)
(bad)
push
fisttp
icebp
retf
pop
arpl
clc
int
aam
push
pop
mov
cld
jl
ss
rcr
clc
mov
pop
sbb
retf
adc
inc
inc
fmul
xlat
enter
xchg
mov
mov
movs
bound
stos
scas
shr
jg
sub
xor
add
sbb
(bad)
mov
shr
loopne
cs
(bad)
call
jnp
fcmovnu
in
mov
xchg
or
stc
repz
je
arpl
inc
(bad)
inc
push
mov
fwait
and
out
pop
or
dec
in
loopne
(bad)
dec
push
jecxz
sbb
loope
lahf
fld
fild
inc
jmp
pop
or
push
xchg
aam
jl
mov
popa
xchg
shl
enter
(bad)
jmp
sbb
enter
test
cmp
jge
pop
imul
in
adc
xchg
(bad)
(bad)
(bad)
jmp
mov
mov
mov
adc
scas
fwait
into
add
pop
out
jp
xor
out
inc
leave
cmp
ds
pop
(bad)
sub
mov
aaa
inc
jg
pop
test
add
fist
sbb
inc
push
mov
sahf
out
jmp
(bad)
fild
retf
loope
xrelease
mov
or
js
movs
ins
std
add
fnstsw
sbb
call
rol
(bad)
(bad)
(bad)
jg
js
mov
xor
cmp
pusha
sub
call
pushf
out
adc
das
or
adc
cmc
(bad)
call
sub
inc
mov
jns
outs
push
iret
popf
jl
jbe
lds
dec
(bad)
(bad)
std
jno
push
retf
inc
or
inc
in
je
es
mov
sahf
jl
das
sbb
add
cmp
mov
sub
(bad)
hlt
div
jg
jmp
mov
popa
icebp
push
rol
adc
xchg
pop
leave
loope
mov
(bad)
(bad)
cmp
mov
sub
repnz
nop
adc
jl
hlt
pushf
lock
jg
cs
daa
ins
and
xchg
mov
test
imul
inc
loopne
call
jo
cli
loope
aaa
jl
fnsetpm(287
jge
daa
in
ins
aaa
imul
daa
inc
not
jno
mov
movs
cdq
(bad)
xor
push
mov
jae
sbb
dec
push
fbld
in
sub
cmp
add
stos
imul
inc
call
cld
(bad)
fucomip
cmps
inc
xor
(bad)
jg
jmp
in
xchg
icebp
cld
int
mov
cli
xor
sbb
imul
cli
xchg
cmp
sti
jmp
cmp
cmp
and
mov
in
xor
jmp
or
ror
xor
dec
adc
rol
bound
xor
jo
nop
shl
sub
push
retf
(bad)
(bad)
jg
mov
add
mov
jmp
sti
adc
jg
call
sub
(bad)
cmp
movs
push
adc
mov
or
dec
inc
gs
dec
cdq
xchg
mov
sub
xchg
ins
inc
arpl
mov
add
jo
scas
fstp
ins
or
push
jo
stos
jl
int3
mov
cmp
(bad)
(bad)
(bad)
jmp
dec
mov
cs
fwait
mov
loop
cmp
xchg
add
or
xor
xchg
dec
adc
lock
cmp
cdq
add
test
dec
push
mov
sbb
movs
inc
pusha
xchg
push
dec
pop
dec
sbb
(bad)
(bad)
call
loope
stos
les
bound
test
mov
add
push
sub
js
gs
lods
jns
(bad)
(bad)
call
jnp
push
dec
jnp
(bad)
call
(bad)
outs
dec
sti
jmp
cld
inc
pop
(bad)
call
cld
mov
cli
xchg
jae
xchg
push
and
pop
pop
jne
fistp
aaa
(bad)
(bad)
dec
jne
out
jmp
xlat
cs
and
je
xor
pop
shl
add
xor
(bad)
(bad)
call
xchg
rol
push
addr16
add
(bad)
sbb
push
pop
mov
pop
jbe
pop
mov
xor
xlat
arpl
cmps
(bad)
inc
lods
cmp
cmps
scas
mov
sbb
push
mov
mov
or
std
sub
dec
jae
mov
inc
cdq
pop
push
stos
jnp
mov
das
and
das
test
les
xor
idiv
push
into
fisttp
cmp
imul
adc
hlt
or
pand
xchg
jb
test
rol
jmp
arpl
ret
mov
(bad)
(bad)
(bad)
jmp
ffree
xor
adc
xchg
pop
dec
add
xchg
test
cld
int3
ins
jbe
sub
(bad)
mov
fdivr
nop
jl
shr
dec
(bad)
repz
call
jae
add
in
bound
gs
inc
mov
xchg
xchg
sti
(bad)
std
push
pop
or
jecxz
and
(bad)
fbstp
cmp
ret
pusha
pop
dec
call
xor
(bad)
mov
test
iret
mov
daa
jmp
cli
mov
outs
test
jmp
mov
mov
or
in
dec
(bad)
dec
mov
lods
out
pop
jmp
movs
(bad)
sub
(bad)
(bad)
push
pop
cmp
xor
clc
adc
sub
je
xchg
icebp
pop
xlat
push
clc
std
jge
(bad)
(bad)
(bad)
call
imul
leave
jge
scas
lea
movsx
or
xchg
or
push
in
adc
push
cmc
sub
pop
push
pop
aad
push
jae
sbb
dec
add
gs
(bad)
(bad)
cli
mov
pop
cmc
cmp
shl
push
je
(bad)
(bad)
dec
pushf
xor
add
shr
lods
lea
les
inc
jmp
mov
sbb
dec
loop
imul
cmp
or
xor
sbb
mov
mov
ins
(bad)
call
and
and
jno
mov
(bad)
push
ds
or
test
push
or
int
stc
jns
sar
dec
adc
call
(bad)
(bad)
adc
mov
addr16
test
icebp
dec
mov
push
jb
(bad)
(bad)
(bad)
dec
js
sub
jae
popa
mov
inc
shl
pop
pop
mov
and
(bad)
(bad)
(bad)
call
pop
in
push
hlt
cwde
push
dec
loopne
clc
bound
add
xchg
mov
enter
mul
or
mov
in
push
ret
ficomp
fdivp
mov
adc
and
push
fsubr
call
push
and
or
push
or
mov
mov
scas
jg
xor
xor
mov
fld
out
pop
dec
push
inc
call
fimul
xor
pushf
push
inc
pushf
mov
cmp
bound
mov
retf
cmp
mov
mov
(bad)
inc
call
xchg
or
add
(bad)
push
cwde
js
add
dec
push
lea
sub
fisub
ins
mov
aad
dec
cmp
(bad)
(bad)
(bad)
call
pop
sub
xchg
cwde
cwde
mov
push
sar
push
fcos
(bad)
(bad)
cmp
ret
clc
out
hlt
lds
mov
pushf
lahf
add
inc
ins
arpl
fmul
aaa
test
(bad)
(bad)
push
ins
hlt
xor
enter
xlat
inc
push
aas
cli
loop
loope
add
mov
repz
call
setbe
mov
int
pop
ret
sub
imul
pop
inc
fnstsw
jnp
sub
or
not
sub
dec
lods
ss
lods
cmp
mov
ret
ret
fldenv
outs
in
(bad)
icebp
out
xor
jns
(bad)
(bad)
(bad)
dec
sub
jbe
jns
xlat
push
jl
mov
sub
cmp
cld
cdq
jnp
(bad)
outs
lea
ins
cld
sbb
fs
xor
mov
iret
(bad)
(bad)
jmp
aad
popa
push
outs
mov
out
adc
fxch
xchg
shl
(bad)
mov
cmp
mov
aam
mov
cmp
xor
adc
inc
cmp
inc
adc
pop
inc
iret
sahf
cmp
arpl
mov
aaa
and
mov
rcr
push
or
dec
shl
lock
retf
lds
icebp
mov
dec
mov
shl
dec
sahf
jecxz
movs
pop
scas
xchg
sub
jno
(bad)
(bad)
(bad)
dec
das
jle
(bad)
pop
int3
std
ds
out
loop
mov
jb
clc
cdq
stos
and
(bad)
(bad)
inc
out
leave
inc
and
cli
jge
pop
popf
add
dec
xor
loope
retf
fs
fs
popa
mov
jnp
out
out
xlat
(bad)
(bad)
(bad)
mov
dec
into
clc
push
int3
cmp
fcomp
cmp
call
rcl
xchg
les
(bad)
jmp
cli
sbb
adc
ins
sub
pop
jle
ja
retf
jge
or
xlat
call
int3
jecxz
inc
inc
push
sub
hlt
fistp
test
iret
xor
(bad)
(bad)
jmp
les
sub
pop
xor
add
(bad)
(bad)
call
adc
fwait
icebp
mov
in
xor
cmp
or
fbld
(bad)
(bad)
(bad)
cmp
push
adc
sbb
xchg
dec
loop
out
add
adc
mov
push
mov
sub
push
mov
pop
sub
pop
(bad)
dec
into
lods
and
mov
aas
pushf
sbb
fisttp
psrld
loop
frstor
(bad)
(bad)
jmp
and
cmp
(bad)
cmp
(bad)
or
cli
jmp
sbb
retf
cmps
(bad)
push
sub
(bad)
(bad)
(bad)
(bad)
cmp
cs
out
cdq
jbe
call
and
dec
jne
inc
aas
movs
fdivrp
(bad)
(bad)
(bad)
call
cmps
ss
or
jge
dec
jl
int
pop
jo
cmp
arpl
cmp
stos
sbb
leave
hlt
add
mov
test
mov
and
retf
ss
(bad)
jmp
mov
mov
xor
add
ss
mov
pop
inc
xchg
(bad)
(bad)
call
add
mov
jb
mov
(bad)
adc
push
adc
cmps
je
mov
xchg
jbe
xor
(bad)
(bad)
(bad)
jg
sar
bound
xchg
pusha
in
mov
lods
xchg
sub
repz
jge
sbb
jp
and
(bad)
(bad)
(bad)
dec
cmc
push
in
js
lahf
adc
push
mov
sbb
out
mov
test
lea
jmp
cmp
adc
mov
sub
adc
push
push
(bad)
jmp
aad
into
jo
pusha
js
outs
jnp
outs
call
add
push
js
out
mov
jmp
movs
hlt
jle
adc
sub
pop
xor
int3
xchg
aad
adc
out
aas
xor
daa
jl
(bad)
lds
mov
sub
xchg
stc
jp
or
(bad)
jg
aaa
in
sbb
popa
fisub
fadd
es
cs
and
(bad)
(bad)
(bad)
call
adc
fild
xchg
fs
ins
push
cmp
sar
push
xor
(bad)
call
loope
scas
out
retf
mov
out
mov
popf
xlat
fs
(bad)
(bad)
jmp
or
imul
(bad)
xchg
pusha
xchg
jl
sbb
in
faddp
jmp
repz
sbb
out
test
mov
pop
push
push
add
dec
out
imul
int3
xchg
push
and
pop
bound
pop
lahf
mov
mov
outs
es
or
rol
rcl
ja
or
jmp
das
pusha
jb
mov
(bad)
call
pop
pusha
test
bound
cwde
retf
push
mov
out
pop
or
aam
and
rol
jge
(bad)
(bad)
(bad)
call
adc
call
inc
sahf
push
popa
mov
dec
movs
push
retf
repz
inc
bound
call
mov
xchg
pop
stos
sub
rol
and
cwde
(bad)
(bad)
(bad)
jmp
jb
mov
cmc
je
inc
and
imul
xchg
adc
ds
xchg
dec
sub
cli
(bad)
sbb
outs
jp
(bad)
(bad)
cmp
jecxz
movs
xor
jbe
sbb
add
(bad)
fcmovnu
out
movs
inc
mov
out
push
icebp
sub
int3
repnz
push
sub
(bad)
dec
pop
or
sub
call
push
pop
xchg
pop
sub
cmp
(bad)
inc
lods
adc
mov
pop
out
push
mov
fadd
mov
ret
sub
jle
cmp
call
div
das
add
lds
jne
jbe
dec
(bad)
and
or
out
adc
jle
mov
int
lods
pop
push
jle
push
push
dec
and
sub
jecxz
and
pop
jg
xchg
int3
mov
mov
jb
(bad)
(bad)
jmp
das
fucomp
ja
add
xchg
rcl
adc
mov
cmp
(bad)
(bad)
(bad)
out
in
in
vmptrst
fld
mov
out
push
sub
push
ins
mov
pop
add
add
mov
jecxz
mov
cmp
int
and
mov
jg
arpl
stos
pop
adc
mov
push
hlt
xor
scas
repnz
inc
jmp
aaa
(bad)
(bad)
(bad)
jmp
sti
xchg
cmp
arpl
cs
xor
mov
pop
cmps
lds
(bad)
sub
pop
mov
and
cs
push
mov
mov
jg
fldenv
fcomp
lds
pop
int3
fstp
cmc
mov
push
call
mov
fmul
std
cmp
call
call
push
pop
cdq
repz
sub
or
mov
jmp
xchg
repz
test
jg
sub
mov
add
call
fs
(bad)
(bad)
inc
test
push
sub
xchg
cli
xchg
shl
nop
dec
repz
out
add
(bad)
sbb
in
adc
jle
std
jmp
clc
scas
xchg
pop
push
jmp
jnp
ds
pop
add
(bad)
(bad)
push
xchg
popf
xor
retf
ins
mov
adc
pop
push
or
pop
push
std
mov
mov
sub
cmps
iret
xor
or
mov
mov
xor
(bad)
xchg
(bad)
xor
enter
jle
xor
js
mov
cmp
aas
adc
(bad)
(bad)
jmp
scas
push
add
mov
jg
mov
xchg
dec
test
rcr
(bad)
(bad)
jmp
test
xchg
mov
mov
xchg
push
retf
fcmove
or
faddp
push
ja
clc
push
xor
pop
es
popa
pusha
lods
add
mov
lahf
addr16
(bad)
(bad)
call
mov
pop
daa
add
jecxz
fisttp
sbb
inc
daa
bound
sub
(bad)
(bad)
jmp
and
jp
in
push
pop
adc
mov
fsubr
and
das
jae
rcpps
sti
sbb
inc
dec
repnz
jo
mov
addr16
lahf
jmp
cwde
jmp
(bad)
inc
and
xor
movs
pusha
daa
sub
outs
pop
loope
mov
lods
cmps
mov
rol
clc
xor
adc
inc
(bad)
sti
test
test
data16
into
mov
test
mov
cmp
adc
adc
dec
sub
jmp
ret
out
retf
cmp
(bad)
(bad)
push
jl
push
jmp
and
dec
enter
jge
jg
sub
sbb
cwde
or
enter
and
xor
push
std
out
clc
(bad)
jmp
int3
dec
add
dec
jnp
xchg
inc
scas
inc
cs
dec
inc
dec
lds
xlat
cmp
xchg
adc
mov
push
or
rol
icebp
pusha
rol
nop
sbb
push
and
adc
dec
icebp
movs
or
fadd
pop
sti
sbb
cdq
sbb
retf
inc
pop
dec
sahf
cmps
not
imul
iret
inc
pop
sub
add
(bad)
call
push
pop
or
lock
test
out
dec
jle
adc
and
mov
cmp
loop
cmp
(bad)
(bad)
(bad)
inc
pop
mov
jge
mov
xor
mov
mov
dec
or
adc
sti
xor
mov
stos
inc
js
and
pushf
sub
out
or
cmp
mov
ret
(bad)
(bad)
(bad)
jmp
jg
test
dec
ja
es
sub
dec
sbb
inc
or
inc
(bad)
scas
(bad)
(bad)
(bad)
dec
push
fbld
fnstsw
push
out
vpunpckhqdq
jmp
push
fldcw
or
add
test
mov
jns
pop
jecxz
in
adc
call
adc
and
add
mov
clc
jmp
dec
mov
frstor
movs
sub
jp
or
(bad)
inc
clc
push
inc
mov
cmp
cmp
push
pushf
sub
ret
pushf
inc
lahf
fwait
pop
sub
dec
inc
dec
push
lahf
xchg
imul
cli
(bad)
(bad)
jmp
mov
repnz
and
test
xchg
(bad)
cli
sub
or
push
call
inc
push
cmp
(bad)
(bad)
(bad)
jmp
sub
ret
xchg
cmp
repz
les
pop
hlt
into
les
mov
(bad)
call
dec
pop
cmp
arpl
fisttp
hlt
mov
xor
das
pop
idiv
push
sub
(bad)
mov
repnz
and
stc
das
push
dec
pop
mov
loop
clc
(bad)
mov
fsubrp
data16
test
jae
mov
push
add
mov
adc
(bad)
jmp
pop
jo
ins
in
dec
and
dec
sub
pop
lea
(bad)
(bad)
dec
test
mov
pushf
sub
shl
push
sub
mov
or
cld
add
jge
jb
dec
loop
push
mov
clc
xchg
scas
cli
inc
imul
mov
je
xchg
xchg
ret
adc
(bad)
(bad)
(bad)
call
xchg
xchg
xor
iret
(bad)
ficom
adc
cmp
aaa
mov
out
ins
call
dec
pop
outs
repnz
into
pop
push
cmp
push
push
(bad)
(bad)
dec
fxch
adc
lock
in
rcr
lea
pop
mov
sahf
das
(bad)
(bad)
(bad)
call
or
bndldx
outs
(bad)
out
retf
(bad)
out
and
mov
cmc
jnp
mov
aad
cmp
sti
dec
retf
pop
push
stc
cwde
mul
retf
sub
ret
sbb
dec
push
ret
mov
and
cmps
or
adc
or
icebp
dec
cdq
inc
call
out
outs
fiadd
inc
inc
ret
retf
and
inc
imul
(bad)
(bad)
dec
aam
mov
xchg
aas
cli
cmp
dec
in
movs
leave
aas
cmc
aam
mov
jo
adc
sar
hlt
sahf
popf
(bad)
sbb
or
(bad)
call
jp
in
nop
mov
out
lods
lea
dec
inc
jb
jb
movs
xchg
(bad)
(bad)
jg
outs
outs
clc
xchg
js
dec
and
out
xchg
call
push
(bad)
xor
(bad)
(bad)
(bad)
inc
jmp
cmps
pop
and
sahf
mov
stos
and
scas
(bad)
(bad)
mov
enter
inc
in
or
popf
xor
push
add
mov
mov
test
out
aas
xchg
icebp
jno
add
jecxz
(bad)
call
je
fidiv
ss
mov
mov
sbb
pop
mov
(bad)
(bad)
mov
dec
iret
stos
pushf
dec
and
sbb
mov
lock
rcr
retf
(bad)
(bad)
(bad)
stc
aad
(bad)
repnz
jne
cdq
out
out
je
jae
imul
xlat
(bad)
jae
xor
(bad)
(bad)
cmp
es
mov
js
out
in
cmc
jne
sub
retf
sbb
(bad)
jg
xor
jmp
pop
cmp
mov
cmp
mov
cwde
jmp
divps
mov
cmp
(bad)
inc
fdivp
(bad)
xlat
shr
retf
push
xor
dec
adc
adc
test
push
cmp
cmc
inc
xchg
enter
cld
(bad)
(bad)
stc
ds
stos
ja
xor
xor
fcom
(bad)
(bad)
(bad)
push
cli
xchg
stos
test
mov
and
hlt
cmova
jb
(bad)
cmps
mov
xor
sub
and
dec
aaa
pop
inc
shr
push
mov
jmp
lea
lods
mov
enter
lods
dec
inc
sub
addr16
cld
test
scas
push
(bad)
(bad)
(bad)
call
test
popf
mov
clc
sub
sbb
hlt
sbb
xor
dec
aad
popf
jl
(bad)
mov
mov
out
jp
arpl
(bad)
jmp
(bad)
ja
dec
clc
pop
sub
mov
jmp
jle
pop
jo
sub
(bad)
mov
fisub
lea
ja
fs
aas
lea
(bad)
push
call
and
jg
add
xor
dec
pop
pop
inc
sbb
push
inc
scas
cli
(bad)
dec
(bad)
mov
in
lods
lods
cdq
cmp
push
mov
or
xor
push
call
test
push
add
scas
scas
popf
fs
int
mov
(bad)
inc
dec
iret
hlt
sbb
sub
inc
clc
xor
xor
and
pop
pop
(bad)
(bad)
push
and
test
(bad)
out
cmps
(bad)
mov
(bad)
movs
add
mov
xor
(bad)
jmp
xchg
lea
mov
xlat
or
adc
inc
data16
int
sub
lahf
adc
cs
jg
mov
or
and
mov
bound
rcr
and
(bad)
(bad)
call
(bad)
pop
and
mov
mov
sbb
xlat
clc
mov
push
xor
(bad)
(bad)
(bad)
jmp
xor
outs
bound
pop
pop
out
js
outs
jns
stos
or
ret
mov
pop
xchg
dec
(bad)
(bad)
(bad)
call
xchg
adc
push
sti
into
gs
or
cs
jb
cli
sbb
mov
loopne
xor
jmp
dec
add
bound
aam
mov
dec
cmp
jle
sahf
not
(bad)
mov
add
(bad)
out
clc
push
sbb
mov
xor
push
add
es
(bad)
jmp
mov
lahf
ins
dec
push
out
call
das
and
cmps
movs
jmp
xchg
inc
jl
fimul
jmp
(bad)
inc
mov
add
mov
xchg
test
jl
mov
sti
jbe
das
adc
cmps
out
jb
pop
cmp
jmp
scas
cmp
(bad)
arpl
lea
mov
mov
sub
(bad)
dec
and
jmp
or
pusha
stos
mov
cmp
xchg
and
fwait
popf
jg
dec
pop
hlt
ins
rcl
dec
je
jbe
push
std
jmp
jmp
mov
mov
sub
mov
std
xchg
push
mov
(bad)
in
and
pop
(bad)
and
pop
push
dec
cmp
push
(bad)
mov
(bad)
(bad)
inc
cmp
nop
xor
pusha
popf
int
cmp
fadd
xor
inc
push
mov
cld
xlat
int3
sub
(bad)
scas
test
data16
or
inc
mov
xchg
shl
and
in
jb
stos
sub
fstp
es
mov
sub
(bad)
jmp
mov
sbb
loopne
fwait
clc
xor
inc
rol
call
test
pop
sub
into
in
adc
mov
xchg
pop
out
cmps
cmp
(bad)
(bad)
(bad)
dec
push
repz
mov
jbe
sub
xchg
test
cli
or
fistp
outs
jbe
and
ss
xor
iret
test
aam
mov
mov
mov
loop
sub
or
in
or
fild
sub
repz
xor
push
dec
xor
sbb
push
sbb
mov
and
(bad)
(bad)
(bad)
dec
(bad)
sub
lahf
lea
loop
push
inc
push
dec
(bad)
sbb
pop
in
mov
gs
mov
adc
jns
enter
jmp
ret
ror
dec
cmps
add
add
mov
jnp
aad
call
mov
ds
(bad)
(bad)
dec
jae
dec
add
test
div
fisttp
push
daa
es
(bad)
(bad)
jg
repnz
fwait
xlat
xchg
scas
push
mov
clc
dec
mov
sbb
and
rcl
cmc
test
inc
pushf
dec
or
push
outs
pop
fnstcw
pop
mov
ds
sahf
xor
(bad)
(bad)
inc
ins
adc
shl
mov
dec
out
jae
add
dec
push
mov
adc
repz
out
mov
(bad)
jmp
cmp
dec
and
nop
inc
(bad)
adc
and
inc
cmp
pop
pusha
cmp
lds
(bad)
clc
sub
or
ror
sbb
or
imul
in
adc
xchg
(bad)
(bad)
(bad)
(bad)
cmp
jecxz
(bad)
in
mov
add
out
or
mov
push
or
out
mov
out
sub
call
mov
push
pop
pop
inc
xchg
jno
inc
cs
into
dec
inc
sbb
nop
(bad)
outs
cmp
lahf
nop
sub
add
ds
push
add
ficomp
dec
pop
push
fiadd
loopne
(bad)
(bad)
jg
pop
xchg
std
mov
jmp
mov
push
stc
mov
cld
xor
sub
adc
loopne
dec
push
popa
fdivr
lahf
fs
out
popf
call
jg
jle
xchg
stos
xlat
popf
cwde
xchg
lea
outs
fiadd
push
push
(bad)
(bad)
(bad)
jmp
xchg
jecxz
mov
mov
xor
push
push
int3
sti
mov
pop
test
nop
pop
cmp
aad
pushf
retf
xor
imul
enter
(bad)
call
and
xlat
pop
mov
icebp
dec
int3
or
mov
push
jbe
adc
push
xlat
mov
(bad)
add
stos
mov
sub
(bad)
(bad)
call
je
push
sub
mov
lods
mov
cdq
scas
jne
mov
sar
xor
sbb
scas
clc
(bad)
(bad)
jmp
or
fild
cdq
and
or
add
push
push
cmc
mov
(bad)
(bad)
jmp
mov
pop
push
xor
xchg
outs
je
ds
mov
retf
cdq
fsubp
pushf
out
dec
cli
jg
call
movs
mov
(bad)
ds
mov
jb
pop
(bad)
(bad)
jmp
inc
sub
test
sbb
adc
ret
rcl
cs
fwait
leave
aaa
push
gs
xchg
mov
aaa
jae
cmp
sar
jmp
clc
dec
call
cmp
(bad)
sbb
test
fwait
jle
imul
mov
(bad)
(bad)
(bad)
sti
cmp
int3
hlt
jne
dec
sub
popf
in
pop
cs
rcl
jne
mov
aad
fdivrp
cli
clc
mov
shl
pop
int
mov
adc
daa
pop
lea
add
call
mov
push
(bad)
(bad)
inc
js
mov
outs
nop
scas
loope
ins
call
adc
xchg
and
scas
adc
cli
(bad)
clc
scas
mov
aas
std
iret
stc
cld
shl
push
fisttp
push
mov
test
sar
popf
js
inc
sbb
jg
jecxz
neg
(bad)
(bad)
(bad)
fistp
xchg
ror
adc
popf
dec
movs
test
loop
mov
or
mov
popf
add
test
sub
in
dec
jno
mov
push
push
(bad)
(bad)
(bad)
in
call
mov
and
add
dec
mov
cmp
mov
xor
dec
xor
jg
add
mov
shr
(bad)
(bad)
inc
je
push
mov
dec
xchg
test
in
add
ds
out
aas
pop
ss
int3
inc
and
inc
(bad)
(bad)
(bad)
jmp
stc
sub
mov
pop
adc
(bad)
jb
push
jb
or
sub
(bad)
cmp
sbb
(bad)
inc
cmp
xor
inc
xlat
ret
(bad)
call
sub
pop
jp
pop
cdq
add
inc
push
or
clc
(bad)
jmp
sbb
mov
mov
lods
pusha
adc
push
push
cmp
daa
or
outs
pop
push
int3
stos
add
sbb
dec
fstp
in
pop
mov
or
addr16
adc
jle
and
jmp
push
bound
and
xor
in
(bad)
pop
std
jmp
sbb
inc
imul
gs
ret
clc
dec
(bad)
(bad)
(bad)
mov
fs
shr
es
jmp
jecxz
loopne
sub
jnp
ud0
mov
sbb
(bad)
in
in
imul
xlat
xchg
jns
sar
aas
lds
inc
imul
fistp
jle
mov
add
or
daa
ja
mov
(bad)
(bad)
(bad)
jmp
mov
xchg
dec
aad
adc
pop
cmps
push
pop
imul
jge
push
mov
(bad)
(bad)
(bad)
ds
dec
stos
mov
ret
jg
inc
pop
mov
loop
adc
mov
cli
ja
stos
lock
pop
xor
loopne
pop
out
clc
(bad)
ffreep
test
in
enter
sbb
push
mov
ror
mov
stc
push
(bad)
aam
add
call
test
mov
add
(bad)
(bad)
push
mov
rcl
mov
aam
ret
sub
add
jmp
rcr
fcomip
(bad)
call
arpl
lea
cli
mov
mov
push
mov
push
jmp
(bad)
push
xchg
hlt
(bad)
sar
ret
data16
jno
push
mov
adc
imul
inc
sub
stc
jno
out
fwait
sbb
test
or
(bad)
(bad)
jmp
cwde
jecxz
mov
and
jl
xor
add
adc
xor
sub
loopne
xor
outs
cs
call
or
pop
or
sub
xchg
pop
ficomp
pop
push
adc
cmps
sbb
ror
mov
add
push
out
cdq
dec
cmp
xchg
adc
pop
mov
and
(bad)
jl
jbe
int
fs
aad
scas
cmp
jbe
lock
movs
popf
cmp
(bad)
call
cwde
push
sbb
pop
not
iret
sub
int
adc
sub
inc
mov
mov
cmc
sub
cmp
mov
xchg
add
scas
cmp
mov
out
and
and
imul
dec
push
icebp
fld
aad
xchg
repz
(bad)
(bad)
out
les
mov
add
lods
into
(bad)
ss
rcl
push
cmp
lds
(bad)
push
call
sbb
adc
push
stos
lds
mov
cmps
lock
or
dec
push
mov
mov
xchg
mov
dec
cmp
ins
(bad)
(bad)
(bad)
inc
cmp
mov
pop
rcl
addr16
jno
jle
addr16
or
sahf
arpl
in
(bad)
(bad)
call
mov
test
fimul
lods
out
sub
addr16
mov
mov
(bad)
call
xor
push
test
daa
pusha
rol
add
pop
hlt
xchg
out
in
int
fcmove
pusha
sub
aaa
rcl
jmp
xchg
jmp
lea
(bad)
jg
sub
daa
add
mov
(bad)
(bad)
(bad)
jmp
jae
push
std
sub
icebp
fs
cmc
push
outs
jmp
push
leave
jne
cmp
ret
mov
shr
sar
call
and
mov
jmp
outs
(bad)
(bad)
jmp
mov
(bad)
mov
lea
cmps
add
not
pop
jae
pop
dec
cmp
dec
jne
ret
(bad)
call
mov
or
jmp
movs
cmc
rol
push
mov
sub
ins
vcvttss2si
arpl
clc
(bad)
(bad)
dec
pop
dec
shr
gs
jl
cmps
mov
bnd
dec
mov
jmp
gs
adc
pop
fiadd
cmp
shl
cmp
clc
icebp
fcomip
fbld
test
jl
sbb
xchg
fild
or
and
jp
cmps
jp
ins
rcl
push
push
and
hlt
push
dec
add
mov
(bad)
(bad)
inc
push
push
or
sub
fnstsw
iret
and
popa
ss
std
mov
ret
loop
out
(bad)
(bad)
(bad)
(bad)
inc
xor
daa
movs
jns
fstp
dec
adc
cmc
cmp
imul
push
and
pop
push
cs
(bad)
mov
shr
xchg
into
sbb
mov
(bad)
jmp
or
or
mov
ret
and
cli
addr16
aad
inc
cs
sub
out
jo
mov
jmp
push
adc
mov
cld
stos
test
and
out
stc
mov
and
sub
jg
std
xor
sub
in
in
outs
adc
and
or
(bad)
(bad)
call
mov
sbb
jb
fnstenv
sar
cld
jb
cmp
push
ja
mov
(bad)
call
in
bswap
rcr
(bad)
aaa
dec
aas
out
jae
add
outs
iret
adc
dec
push
retf
lock
(bad)
(bad)
call
inc
pushf
leave
xor
aaa
sub
xchg
aad
jmp
(bad)
out
or
or
(bad)
call
js
stc
dec
jp
mov
out
cmp
fs
js
push
push
enter
(bad)
(bad)
push
mov
or
aaa
scas
adc
jmp
fs
cld
sub
xor
clc
inc
mov
imul
std
movsx
push
lods
iret
in
cld
fldcw
(bad)
dec
xchg
sub
fimul
dec
cmp
es
cld
mov
shl
inc
(bad)
xchg
xchg
dec
call
(bad)
(bad)
(bad)
jns
call
xchg
or
sbb
inc
add
test
mov
imul
(bad)
(bad)
push
out
push
and
jl
add
arpl
ret
add
xlat
sahf
shl
or
mov
jmp
int
cmc
pop
(bad)
jmp
push
xor
mov
jne
(bad)
(bad)
inc
push
(bad)
bound
movs
lock
js
xchg
add
sahf
xchg
mov
or
repnz
(bad)
(bad)
(bad)
push
inc
ret
ja
and
sbb
and
sub
sahf
in
and
cmp
jmp
std
mov
lds
scas
dec
ins
not
(bad)
push
jge
repz
cmp
ss
jle
xor
mov
hlt
aaa
std
pop
add
faddp
jns
cli
push
cli
mov
cmp
or
inc
pop
xchg
push
and
or
test
mov
dec
and
pushf
inc
inc
or
add
xchg
aas
hlt
xor
repnz
(bad)
cli
pop
sub
(bad)
(bad)
push
xchg
stos
sub
lods
or
inc
outs
repnz
push
loopne
(bad)
mov
adc
cmc
mov
inc
out
aam
lahf
add
sbb
rcr
add
(bad)
call
jae
add
mov
sbb
pop
cld
pop
stos
pop
push
mov
xor
push
inc
mov
test
aam
test
enter
outs
data16
retf
inc
jb
neg
adc
push
xchg
ins
cwde
dec
add
aaa
in
(bad)
jmp
addr16
leave
jb
inc
bound
std
shl
enter
fist
lods
mov
int
mov
xchg
cmp
loop
ds
pop
pop
into
or
cmc
push
retf
push
sti
out
push
mov
(bad)
call
cmps
cmp
inc
lahf
add
jae
(bad)
(bad)
dec
jae
adc
fbld
lahf
push
inc
mov
adc
das
scas
jns
adc
pop
sub
lock
es
dec
shr
sub
cmp
jg
push
scas
call
cld
call
jl
mov
add
jmp
mov
call
mov
fs
mov
pop
sbb
cmc
pop
test
pushf
xor
sbb
push
push
mov
mov
xchg
pop
dec
xor
fisubr
(bad)
test
mov
add
push
std
test
ret
sti
sub
mov
push
pop
cwde
mov
cld
(bad)
jg
mov
mov
lahf
cmc
in
sub
shl
and
loopne
(bad)
push
cli
sbb
jmp
xchg
pop
repz
xchg
push
adc
call
xchg
stos
mov
(bad)
iret
fcmove
adc
les
jg
push
(bad)
(bad)
jmp
ret
jp
shl
xchg
push
ins
add
push
jb
iret
xchg
pop
fcomi
outs
(bad)
(bad)
(bad)
(bad)
mov
cmc
mov
add
fimul
dec
rol
lods
lahf
ins
clc
inc
jnp
add
xchg
(bad)
(bad)
(bad)
(bad)
in
mov
jnp
jecxz
and
or
das
std
mov
nop
stc
retf
fld
cmps
mov
inc
mov
push
cmc
adc
fstp
mov
push
jne
mov
sub
inc
fmulp
mov
repz
pop
dec
call
mov
(bad)
cmp
das
cdq
mov
(bad)
(bad)
jmp
lahf
arpl
loopne
mov
add
js
repz
cld
(bad)
(bad)
(bad)
dec
cld
or
in
push
movs
xchg
dec
mov
fistp
cmp
push
xlat
push
shr
cmps
push
add
mov
popf
ret
(bad)
mov
jg
pop
adc
shl
fcomp
mov
push
sbb
or
(bad)
(bad)
(bad)
cmp
and
(bad)
cdq
and
jp
leave
inc
sub
mov
push
repz
xor
sub
pop
or
(bad)
(bad)
dec
xchg
aaa
or
aaa
adc
(bad)
std
icebp
xor
jmp
push
mov
out
mov
test
test
and
jbe
jno
cmp
das
clc
jmp
mov
nop
nop
js
loopne
imul
xchg
imul
jb
int
mov
xchg
sbb
pushf
pop
mov
stos
jne
mov
sub
in
mov
(bad)
(bad)
(bad)
(bad)
jns
xchg
sub
cmp
retf
fst
lock
mov
frstor
xor
xchg
cmp
or
xor
cmp
call
cld
ret
push
int3
add
mov
mov
mov
ret
jmp
rcl
cwde
cwde
std
les
push
das
cli
cmc
test
xor
cmp
(bad)
sub
sbb
test
popa
xchg
(bad)
push
in
ret
and
cmps
dec
ret
rol
xchg
ret
sbb
retf
in
jno
pusha
(bad)
(bad)
(bad)
push
xor
dec
pop
(bad)
in
mov
pop
(bad)
shl
movs
sub
mov
in
pop
jne
add
jle
inc
mov
popa
rcl
(bad)
ds
mov
lods
pop
movs
adc
adc
neg
push
push
movs
mov
sti
idiv
fbld
pop
adc
cmp
lods
xchg
jns
xor
cmp
mov
movs
das
mov
or
outs
push
mov
pop
retf
rcl
xchg
(bad)
jmp
icebp
mov
xchg
fs
mov
ins
adc
push
(bad)
call
adc
cmp
or
test
jg
lock
dec
dec
xor
sub
pop
sar
test
lock
mov
cmp
mov
test
(bad)
call
xchg
rcr
popa
cld
popa
ficom
cld
add
les
ds
inc
sub
cld
(bad)
call
add
jmp
push
imul
jb
add
(bad)
mov
inc
test
jbe
(bad)
(bad)
jg
ja
and
jns
inc
mov
push
lods
jno
adc
call
arpl
xchg
cmp
loop
cmps
cwde
lahf
loop
mov
xor
cmp
xchg
add
push
or
pop
inc
cmp
cmp
stos
cmp
jmp
loope
std
push
sbb
add
popf
stos
test
repnz
add
pop
and
jno
cld
xchg
scas
jge
jg
jmp
adc
mov
pop
cmp
mov
fild
je
sub
(bad)
(bad)
(bad)
push
mov
loope
dec
popa
cmps
mov
mov
pop
or
mov
sub
scas
sbb
bound
scas
mov
jg
cvtps2pi
cs
cli
jecxz
dec
nop
pop
jg
inc
(bad)
(bad)
mov
xlat
jnp
inc
gs
in
add
cmp
cmp
(bad)
(bad)
(bad)
jmp
mov
dec
push
push
cmc
fwait
aad
js
imul
ss
jl
sub
(bad)
(bad)
call
mov
mov
enter
mov
out
cs
and
(bad)
aas
push
js
cmp
fsubr
cmc
neg
movs
sub
push
add
out
mov
(bad)
fisttp
xchg
ss
cmc
daa
pop
push
aas
gs
in
dec
jmp
add
icebp
push
xchg
hlt
xlat
pop
in
add
(bad)
(bad)
(bad)
inc
sbb
push
pop
(bad)
pop
xor
aas
cmp
movs
dec
(bad)
icebp
and
or
mov
int
xchg
(bad)
jg
mov
fldenv
je
imul
movs
jo
or
jb
(bad)
lock
(bad)
(bad)
call
popa
addr16
cli
push
pop
push
mov
movs
dec
sbb
mov
add
mov
sub
stos
mov
adc
(bad)
(bad)
call
scas
int
imul
movs
and
cmp
push
dec
mov
out
(bad)
jg
push
scas
or
enter
push
(bad)
push
mov
pop
in
cmp
sahf
in
and
(bad)
call
jmp
dec
in
data16
mov
pop
mov
aaa
not
mov
and
shr
movs
push
add
dec
mov
add
and
imul
push
popf
(bad)
call
pushf
adc
sub
xchg
and
loopne
dec
aas
(bad)
(bad)
(bad)
inc
(bad)
sub
jl
xchg
inc
pop
ins
xor
aaa
call
lock
movs
adc
and
cmp
(bad)
or
and
(bad)
adc
repz
inc
in
add
call
jge
adc
pop
in
pop
js
loop
pop
jo
fimul
into
pop
mov
(bad)
(bad)
(bad)
dec
test
aam
add
popa
scas
imul
loope
mov
dec
mov
(bad)
jmp
add
ror
fcomp
in
and
or
mov
jl
js
scas
in
fcom
stos
push
jae
test
add
mov
xlat
adc
xchg
push
test
jo
(bad)
(bad)
fcomip
stos
ficom
cmp
cmp
adc
pop
cmp
cdq
loop
aam
push
cmps
add
(bad)
(bad)
push
jecxz
(bad)
xor
push
cmps
add
pop
push
or
inc
lods
popa
fsub
(bad)
cmp
inc
jmp
out
in
pop
dec
test
push
adc
jmp
cld
cmp
scas
mov
pop
sub
push
aaa
fidivr
or
pop
jmp
mov
mov
mov
adc
and
mov
xlat
adc
(bad)
jg
sub
adc
jno
xchg
sti
inc
fsubr
retf
movs
adc
xchg
(bad)
push
pop
lods
(bad)
(bad)
(bad)
(bad)
jmp
mov
fistp
jmp
cmp
cmp
adc
repz
xchg
pop
call
or
or
(bad)
jmp
xchg
xchg
test
jne
ror
add
call
sbb
mov
mov
mov
in
(bad)
jmp
movs
rol
data16
cmc
cmp
cmp
in
mov
cmps
sub
(bad)
(bad)
dec
div
in
ss
repz
xchg
cli
scas
maxps
cdq
fwait
int3
(bad)
jmp
xor
push
(bad)
ins
daa
mov
mov
mov
sahf
scas
sub
add
inc
fnstenv
xor
imul
(bad)
(bad)
adc
fimul
(bad)
inc
scas
cmp
or
dec
fiadd
cmp
inc
rcl
or
dec
inc
scas
xor
fld
mov
rcr
jae
ins
adc
(bad)
cmp
and
mov
adc
call
mov
sbb
fldcw
(bad)
(bad)
call
fisttp
in
cmc
mov
xlat
dec
das
or
mov
lds
les
(bad)
(bad)
push
xlat
test
rcl
outs
jae
daa
add
sub
push
mov
sar
dec
jmp
aad
loop
enter
dec
shr
icebp
call
mov
jbe
inc
adc
nop
ret
addr16
(bad)
(bad)
jmp
movs
fiadd
cdq
jne
icebp
hlt
mov
fs
mov
(bad)
sti
push
jbe
dec
or
leave
dec
mov
fwait
in
std
aam
test
rcr
or
jnp
xchg
(bad)
(bad)
(bad)
dec
mov
push
jbe
mov
add
fnstcw
and
mov
idiv
mov
sub
push
mov
add
jp
xchg
xor
jmp
jge
mov
mov
mov
sub
clc
xor
lods
(bad)
(bad)
cmp
sar
es
add
pop
rol
dec
jns
call
mov
xchg
das
jno
push
imul
sbb
push
push
rcr
mov
sbb
xor
(bad)
xchg
aam
aad
push
dec
aas
dec
(bad)
(bad)
(bad)
(bad)
(bad)
jge
mov
fisubr
gs
pop
ret
xor
xchg
dec
movs
rcl
xlat
or
(bad)
(bad)
(bad)
dec
adc
inc
push
sbb
pop
cmp
mov
int3
aad
data16
dec
xchg
movs
(bad)
(bad)
(bad)
(bad)
jmp
mov
pop
fucomi
repnz
xchg
sahf
call
scas
mov
int
sahf
sbb
sub
xchg
(bad)
(bad)
(bad)
(bad)
mov
mov
arpl
mov
pushf
fdivr
popf
xchg
pushw
jbe
dec
cmp
(bad)
jmp
stos
jl
psubsw
test
aad
in
add
sbb
mov
push
out
in
aaa
lea
ins
pop
stc
add
inc
leave
mov
push
mov
cli
pop
popa
sbb
mov
enter
setb
shl
(bad)
jnp
mov
cwde
aas
mov
(bad)
fild
mov
imul
pop
les
pop
hlt
sbb
sbb
clc
mov
jae
xchg
jmp
fbld
(bad)
mov
push
mov
clc
push
mov
push
pop
dec
ds
sbb
dec
test
(bad)
jmp
cmp
ds
scas
call
call
push
(bad)
inc
add
add
(bad)
(bad)
mov
cmp
or
repz
add
cmp
(bad)
(bad)
call
test
inc
pop
xchg
imul
clc
xlat
push
xlat
cli
inc
dec
(bad)
(bad)
(bad)
call
push
jecxz
push
test
bsr
test
outs
or
adc
ror
pop
sub
(bad)
dec
loop
aad
inc
jp
cmp
sbb
call
repz
(bad)
(bad)
jg
std
jmp
and
dec
lods
adc
sub
sub
cwde
sub
mov
sbb
push
pop
xchg
test
inc
jmp
sahf
mov
jmp
jmp
jecxz
inc
adc
mov
sub
(bad)
push
mov
pop
sbb
and
into
es
in
das
retf
jmp
push
xor
(bad)
(bad)
jmp
push
cmp
fisub
es
test
iret
addr16
xor
pop
stos
mov
jmp
mov
jo
in
jae
cdq
cmp
mov
cmps
cld
mov
fcomp
mov
(bad)
(bad)
(bad)
(bad)
cli
inc
push
xor
inc
jmp
lea
stos
jg
loop
jge
ret
mov
es
bound
out
aad
sub
inc
cmp
psrad
(bad)
(bad)
mov
cmp
ror
test
arpl
lea
pop
inc
aam
push
test
int3
(bad)
(bad)
(bad)
call
push
fsub
mov
ret
jnp
sar
cmc
mov
push
std
xchg
(bad)
call
inc
outs
neg
push
loop
shl
orps
jp
jg
inc
call
aaa
loope
sub
(bad)
jmp
fidiv
out
cli
mov
imul
add
leave
sar
mov
(bad)
dec
jecxz
std
cmp
rcl
movd
cmps
les
or
loope
arpl
cmp
adc
stc
call
jmp
sti
push
adc
jg
jmp
mov
mov
int
push
fs
adc
add
(bad)
dec
push
inc
ins
movs
hlt
sub
or
mov
dec
sbb
call
cld
inc
pop
pop
jne
xchg
out
xchg
imul
idiv
(bad)
out
sbb
(bad)
(bad)
mov
cmp
js
mov
pop
sti
nop
(bad)
push
push
or
aam
sti
xor
clc
sbb
dec
cmp
xor
sub
(bad)
(bad)
cmp
inc
std
mov
lea
repz
stos
(bad)
mov
call
cmp
add
jae
out
adc
xor
mov
pop
sub
xchg
ja
(bad)
jmp
pop
xor
adc
mov
loop
or
mov
cdq
int3
clc
jg
and
cmp
jmp
xor
jbe
outs
dec
(bad)
mov
mov
fdivp
push
daa
mov
push
sub
dec
xchg
cs
or
push
jnp
mov
out
imul
ja
mov
jg
out
cli
stos
test
das
(bad)
call
push
or
jge
mov
call
jb
rcl
inc
push
cmps
outs
sbb
mov
dec
adc
(bad)
(bad)
(bad)
push
lods
scas
aam
and
aaa
dec
repz
cmp
or
(bad)
jmp
(bad)
(bad)
jmp
add
cmc
xor
fsub
ja
es
aaa
icebp
mov
push
test
(bad)
in
(bad)
mov
cmp
(bad)
inc
sti
je
inc
ins
sbb
fcom
(bad)
pushf
cdq
in
mov
mov
pop
call
std
(bad)
fcmovb
mov
fisub
nop
jge
adc
cdq
adc
mov
mov
xor
dec
cdq
or
fwait
and
jmp
mov
or
fwait
dec
mov
sub
ja
adc
outs
(bad)
(bad)
(bad)
jmp
fist
repz
pushf
xchg
sbb
icebp
adc
loop
sbb
shr
mov
fdivr
sti
sbb
dec
fisttp
add
mov
pop
inc
pop
ret
fdivrp
(bad)
(bad)
mov
stos
jno
jmp
jo
stos
push
ret
fmul
xchg
inc
int3
(bad)
cwde
xchg
sahf
sbb
push
fcomp
pop
mov
dec
call
aas
xchg
mov
test
rcl
jns
xor
fucomp
mov
out
mov
scas
(bad)
(bad)
jg
in
pusha
test
mov
inc
popf
jmp
and
lahf
inc
ret
fwait
ret
scas
test
test
dec
ret
push
ds
ret
stos
sti
xchg
ret
pop
leave
(bad)
fcmovnb
mov
js
jnp
xchg
add
sub
in
xlat
inc
(bad)
(bad)
int3
sbb
imul
dec
cs
(bad)
(bad)
(bad)
(bad)
mov
mov
mov
push
popf
je
inc
or
call
cli
shr
inc
test
icebp
loope
dec
sub
loop
xor
neg
lods
mov
bound
push
out
test
and
(bad)
jmp
inc
jmp
mov
dec
mov
push
dec
je
adc
jae
(bad)
(bad)
jmp
addr16
retf
psubw
mov
pop
lods
pop
jp
cwde
fcomp
(bad)
(bad)
(bad)
(bad)
jns
out
mov
cmps
mov
add
cmps
or
arpl
gs
shl
adc
inc
jno
aam
sbb
aam
mov
clc
pop
repnz
inc
sub
mov
sar
jmp
sub
pop
pusha
mov
test
cmp
sbb
xchg
inc
fidiv
(bad)
jg
jg
cmp
pop
ins
js
in
ins
jmp
xchg
cwde
mov
addr16
mov
sbb
xchg
stos
xor
jo
xchg
dec
or
mov
pop
(bad)
jecxz
daa
jmp
add
xchg
mov
iret
sbb
sbb
pushf
sbb
adc
fs
or
cli
jle
adc
dec
inc
push
test
(bad)
jg
xchg
fcomip
xor
lods
imul
inc
sbb
stos
push
scas
movs
push
(bad)
(bad)
mov
inc
add
pushf
dec
lock
pop
scas
xchg
mov
dec
adc
mov
pop
sbb
js
push
(bad)
(bad)
(bad)
inc
xor
rcr
mov
mov
scas
sahf
cdq
xor
aas
(bad)
(bad)
(bad)
(bad)
mov
retf
ss
or
mov
stc
mov
or
xlat
dec
cli
mov
std
push
pop
push
xor
(bad)
jmp
cmp
out
add
arpl
(bad)
jb
fs
add
or
add
call
je
mov
adc
jbe
add
(bad)
(bad)
push
ins
sti
jne
push
test
mov
clc
loope
mov
ror
dec
jg
lahf
fdiv
jnp
mov
push
pusha
jae
adc
jle
cld
(bad)
(bad)
call
shr
aas
sbb
outs
stos
js
mov
fwait
not
ds
jmp
or
adc
call
mov
dec
dec
loope
mov
sbb
fnstcw
ror
cmp
jg
jmp
mov
clc
lods
pop
pop
lea
cwde
pop
(bad)
add
out
mov
mov
jp
cmp
(bad)
(bad)
dec
inc
or
pop
mov
jge
jle
mov
pop
mov
cli
push
mov
mov
or
jns
mov
inc
sub
xor
sbb
jecxz
mov
mov
(bad)
(bad)
(bad)
cmp
or
inc
ja
cs
jno
outs
adc
dec
rcl
cwde
mov
aas
xor
dec
popa
inc
jb
addr16
or
mov
add
mov
call
xchg
cmc
sar
gs
jb
add
mov
(bad)
(bad)
(bad)
dec
sbb
fsub
push
int3
fiadd
push
adc
cmp
(bad)
int3
or
push
inc
ret
xchg
jp
xchg
add
pusha
lods
xchg
cs
add
mov
xor
or
jns
xor
loopne
adc
call
sub
pop
cld
shr
sahf
out
push
push
push
sbb
adc
enter
add
pop
pop
cmp
out
fiadd
push
push
push
dec
push
(bad)
rcr
jl
fwait
add
add
add
loopne
mov
jae
lock
add
add
dec
and
outs
ds
dec
sar
sar
xor
iret
pop
cmp
dec
xlat
add
sub
and
jns
add
and
retf
or
xchg
push
push
or
and
jnp
sbb
fs
loope
add
xor
add
fisub
nop
jl
outs
or
ffreep
push
clc
jg
out
idiv
test
add
lahf
fwait
xchg
pop
add
icebp
and
jmp
inc
iret
add
add
or
ficomp
pop
pop
add
mov
ins
mov
mul
or
cmp
and
ret
or
push
xor
fstp
pop
clc
jg
xor
add
add
clts
loopne
dec
add
jo
dec
push
addr16
movnti
add
add
push
push
push
push
daa
aaa
inc
push
shl
push
push
fldenv
ror
pop
add
xchg
ja
pop
sbb
sbb
daa
aaa
inc
push
cmps
neg
sti
dec
clc
pop
pop
(bad)
jg
sbb
bound
aaa
cmp
fst
add
ds
pcmpgtd
add
or
pop
xor
add
inc
inc
add
aam
xlat
cld
pop
fwait
out
loope
pcmpgtd
iret
mov
cld
cmova
addr16
les
shl
push
aas
ja
inc
add
and
xchg
(bad)
mov
adc
push
ret
fild
add
cmc
ja
inc
push
loopne
jae
into
int3
dec
or
lock
and
mov
clc
addr16
jg
pop
push
inc
cmc
or
adc
lock
shl
adc
and
ficomp
add
sbb
add
push
or
push
add
out
aas
cld
lods
aaa
rcl
adc
push
ret
div
cmp
push
and
inc
xchg
out
sahf
cld
clc
lock
and
mov
xor
inc
pop
push
and
push
out
push
and
and
(bad)
lock
push
mov
pop
and
xchg
sbb
mov
shl
out
push
pop
arpl
ret
pop
pop
rol
or
mov
cld
pop
cmp
jno
adc
fisttp
cmp
and
inc
pop
sbb
cmp
pavgb
clc
mov
cmp
add
rol
adc
or
jl
loop
add
cmps
adc
cmp
inc
adc
and
sbb
mov
mov
add
push
pusha
dec
add
add
iret
repz
mov
pop
jmp
adc
sub
jle
push
loopne
loop
lahf
xchg
xchg
cmp
mov
imul
pop
xor
jge
or
push
add
or
mov
mov
adc
adc
or
pop
xchg
inc
push
xor
addr16
jmp
stos
iret
repz
outs
mov
jg
aas
clc
push
jo
jae
std
pop
lock
pavgb
pop
pop
pop
daa
aaa
adc
addr16
rep
les
mov
pop
cmp
gs
(bad)
call
and
or
add
pop
jno
or
dec
rol
lock
packuswb
mov
inc
xchg
ret
mov
add
cmp
inc
or
inc
cmp
pushf
mov
pop
daa
aaa
inc
stos
xchg
push
jmp
data16
pop
aas
cld
cmp
jg
into
ds
ss
jl
cmp
sbb
pop
daa
push
add
pushf
aaa
inc
push
inc
adc
inc
scas
mov
retf
push
inc
push
jbe
test
scas
es
pop
pop
daa
out
div
addr16
inc
ja
sub
or
addr16
aad
add
mov
retf
into
es
pop
pop
add
mov
sbb
add
sbb
xchg
std
test
add
or
rol
ror
dec
stc
dec
jbe
sub
add
mov
repnz
gs
ud0
pop
pop
cmps
aam
ins
(bad)
sub
shl
or
fadd
xor
inc
mov
(bad)
jno
or
xchg
jb
xchg
lea
lock
data16
and
mov
and
js
ror
push
call
dec
push
out
js
mov
add
lock
xchg
pop
stos
and
push
push
push
adc
dec
inc
push
xchg
push
and
xchg
push
and
push
dec
push
adc
push
inc
push
xchg
test
nop
push
push
or
jno
add
aaa
cmc
outs
jg
dec
or
adc
xchg
add
aas
or
lods
(bad)
mov
push
std
sub
popa
inc
data16
add
inc
ret
push
adc
push
add
jnp
cmp
nop
hlt
cmp
cmp
xor
push
sbb
neg
dec
outs
xor
fucomp
std
fiadd
xor
inc
add
inc
inc
ss
add
jp
or
add
das
pop
sub
sbb
jmp
pusha
mov
outs
cmp
loopne
test
push
daa
push
pop
jp
aas
pop
nop
rol
push
jae
cwde
sbb
loope
add
scas
sbb
mov
ret
or
add
add
sub
out
(bad)
cmc
(bad)
mov
enter
xor
popa
add
add
sbb
add
add
dec
cmps
add
popf
sub
push
fwait
popa
add
push
cld
sub
inc
ja
and
sbb
and
fs
push
or
and
ja
add
dec
jnp
sub
cmp
push
push
jp
lods
loop
jnp
inc
pop
es
outs
pop
shl
jbe
inc
pminsw
dec
cmp
fisttp
cmps
jns
or
xor
push
jo
and
mov
sub
movs
dec
and
jnp
mov
ret
dec
loope
lods
add
cs
inc
ret
add
iret
inc
(bad)
ins
add
add
or
inc
xchg
sub
cs
or
push
xor
int3
xchg
xor
outs
movq
stos
inc
imul
inc
xor
mov
jmp
push
add
outs
movs
inc
adc
add
mov
and
(bad)
jmp
mov
add
and
mov
add
call
xor
outs
mov
fld
push
iret
and
pop
inc
shl
jb
nop
add
push
daa
ins
aas
mov
into
popa
add
mov
or
and
xor
daa
push
rcl
mov
push
add
outs
addr16
push
and
inc
add
rol
add
xor
jb
mov
or
xchg
movs
add
add
xchg
cmps
xchg
arpl
fadd
jo
add
cmps
(bad)
dec
dec
das
sbb
push
push
arpl
push
adc
aam
sub
pop
xor
and
add
mov
pop
imul
push
fst
push
lea
jp
add
movs
or
outs
or
sahf
xchg
aad
jecxz
push
inc
aaa
and
push
imul
add
add
mov
dec
movs
push
dec
rol
mov
mov
sub
dec
xchg
add
push
fcmovbe
sub
dec
aaa
adc
cmc
loopne
mul
push
or
or
fwait
add
and
movs
aas
call
aaa
ins
add
add
in
nop
test
mov
aas
dec
add
push
mov
aam
shr
add
push
ret
fild
sub
sub
inc
add
in
cwde
and
inc
pop
inc
jo
jg
inc
and
xchg
retf
daa
pop
lock
nop
sub
mov
movs
adc
pop
cwde
mov
jae
adc
xor
fdiv
mov
test
adc
sbb
xchg
mov
mov
inc
pop
sub
jae
pusha
stos
push
lods
and
and
pop
rcr
(bad)
cmp
mov
and
loopne
retf
add
cmp
test
xor
aas
mov
rcl
adc
inc
dec
push
imul
ins
cli
scas
gs
add
lock
push
test
mov
loop
sbb
nop
mov
xor
bound
xchg
iret
xchg
ja
aam
inc
stos
popa
ja
add
add
add
inc
pusha
movlps
adc
pop
pop
jecxz
push
imul
sbb
dec
adc
xchg
adc
pop
test
addr16
mov
in
cmp
adc
push
mov
or
jo
cmps
aaa
and
pop
dec
mov
adc
shl
add
pop
or
cmp
or
jae
add
pop
pop
repz
pop
push
sbb
or
fistp
sar
pop
sub
cmp
popa
jae
pop
les
push
sti
pop
mov
xchg
dec
imul
retf
push
adc
cmp
test
(bad)
sbb
retfw
add
mov
enter
(bad)
fbld
jae
lea
ja
dec
jnp
das
push
pop
sbb
fidivr
add
sub
add
rol
xor
loopne
test
jne
dec
mov
ins
cwde
mov
and
mov
xor
aas
mov
push
pop
aaa
sar
cmp
pop
jae
pop
dec
pop
sbb
and
add
add
pop
inc
dec
xchg
mov
ja
jno
inc
pop
xor
arpl
inc
mov
push
(bad)
scas
imul
and
arpl
adc
or
test
sbb
xor
mov
push
dec
sahf
ins
imul
inc
mov
or
(bad)
out
add
xor
push
or
adc
pop
stos
inc
inc
sub
inc
adc
popa
xor
add
(bad)
mov
mov
adc
fwait
mov
mov
loope
dec
jae
cmp
imul
push
dec
push
add
shr
inc
cmp
mov
and
fwait
pusha
mov
sub
sbb
and
inc
ja
je
adc
ret
xor
imul
pop
scas
dec
jmp
ret
test
imul
sub
and
(bad)
pop
add
adc
mov
(bad)
imul
xor
iret
add
xor
stos
jmp
adc
add
cmp
xor
sub
push
stos
mov
ja
dec
ss
fwait
and
out
fwait
xor
mov
inc
add
loopne
outs
pop
xchg
add
iret
cmp
pop
dec
xchg
sbb
adc
push
out
dec
add
and
pop
xchg
xchg
mov
or
sub
add
inc
add
pop
adc
dec
or
sbb
ret
xor
xchg
or
stos
les
mov
adc
push
aad
popa
add
test
add
and
imul
and
sbb
adc
pusha
mov
xor
add
mov
ja
add
xchg
rcr
add
adc
xor
inc
outs
out
sti
retf
and
mov
add
in
cmps
test
daa
add
scas
in
scas
push
or
dec
or
dec
scas
in
or
in
scas
push
movups
iret
mov
add
(bad)
pop
adc
jge
test
xor
mov
and
and
add
inc
xchg
push
push
mov
push
dec
test
stos
stos
and
or
adc
dec
inc
push
push
push
and
xchg
stos
and
push
push
push
adc
dec
inc
push
xchg
push
and
xchg
push
and
push
dec
push
adc
push
inc
push
xchg
test
xchg
push
push
push
push
dec
test
stos
stos
and
or
push
xchg
test
xchg
push
push
and
stos
stos
and
or
adc
dec
inc
push
push
push
and
xchg
stos
and
push
push
push
adc
dec
inc
push
xchg
push
and
xchg
push
and
push
dec
push
adc
push
inc
push
xchg
test
xchg
push
push
push
push
dec
test
stos
stos
and
or
push
xchg
test
xchg
push
push
and
add
loopne
push
adc
adc
xor
ja
add
add
sub
sub
dec
add
and
mov
push
jmp
cmp
jne
cmp
push
je
push
outs
cwde
push
xchg
cmps
push
sub
add
adc
ss
arpl
jmp
add
mov
push
mov
dec
and
test
je
dec
lods
add
test
cmps
sub
xlat
ins
adc
sahf
dec
or
push
rol
nop
mov
dec
adc
je
mov
add
mov
mov
mov
fistp
std
rcr
mov
push
adc
imul
dec
dec
push
cmp
pop
outs
inc
sbb
ret
inc
push
sti
ror
xor
xchg
mov
movs
ret
aaa
jae
das
and
xchg
mov
pop
push
push
xchg
and
mov
xchg
adc
push
push
jo
or
cmovg
adc
cmp
sbb
popa
addr16
or
xor
mov
add
stos
add
mov
push
sub
push
and
call
outs
gs
adc
sbb
sub
sub
bound
aad
popf
inc
daa
and
inc
ss
outs
and
pop
xchg
outs
adc
push
dec
inc
push
mov
inc
pop
adc
add
and
or
xor
jmp
xchg
ds
sbb
sub
jne
pop
rol
add
std
sbb
xchg
xchg
add
jo
sub
sub
push
pop
in
jo
addr16
jae
imul
adc
xor
nop
add
dec
jae
fcomp
fist
aad
or
ins
mov
mov
pusha
inc
adc
repz
mov
push
cli
jae
stos
inc
call
and
gs
add
xor
int
fsub
mov
sub
in
pop
push
and
test
or
cmp
push
mov
scas
sub
cdq
mov
inc
(bad)
or
or
or
inc
je
loope
sbb
add
inc
mov
lods
and
imul
or
sar
inc
and
dec
adc
loopne
add
adc
dec
aad
and
loope
ins
fs
inc
adc
jb
ins
mov
and
add
mov
pusha
push
aas
add
mov
sub
dec
add
je
add
sbb
jnp
dec
outs
aad
mov
jbe
dec
mov
pop
cmp
or
pop
fwait
(bad)
push
mov
outs
dec
push
movs
jo
cmp
sub
les
and
ja
inc
in
popa
jno
neg
(bad)
dec
add
rol
aas
sub
mov
xchg
daa
inc
fs
xor
sbb
out
arpl
adc
cwde
dec
mov
and
ret
cmp
adc
aam
lds
push
ret
push
inc
rol
lock
inc
imul
test
jae
add
jae
outs
xchg
mov
leave
mov
mov
push
mov
pop
(bad)
dec
test
or
or
jle
xchg
xor
sbb
and
loop
jbe
popa
ins
dec
push
jo
dec
mov
rep
sbb
xor
test
adc
inc
fwait
mov
ret
jmp
dec
sbb
add
inc
ins
scas
push
cmp
fstp
mov
sbb
cs
mov
sbb
xor
or
push
loope
imul
or
rcl
inc
adc
jl
dec
jo
mov
add
or
add
repnz
mov
cwde
inc
sbb
arpl
push
dec
in
add
jae
imul
jb
push
lds
in
mov
sti
inc
das
dec
or
adc
shl
sub
push
gs
push
pop
test
es
inc
xor
and
jg
push
cs
or
xchg
ret
ret
mov
ror
out
pop
gs
adc
jo
pop
push
leave
push
sbb
and
das
dec
sub
je
and
stos
cmps
jmp
(bad)
popw
ja
sub
ins
in
push
add
cmps
mov
or
push
xlat
aam
or
inc
push
inc
jg
add
inc
dec
push
xchg
ret
jo
sti
int
ficom
mov
fisttp
add
sbb
xchg
add
sar
push
lock
add
adc
add
mov
sub
push
rcr
sbb
pop
or
jbe
cmp
(bad)
xchg
push
xor
outs
pop
pop
xlat
pusha
rol
ds
arpl
mov
adc
sbb
popa
xchg
mov
cmp
mov
mov
cs
dec
adc
or
sahf
adc
adc
ss
rcl
ror
sub
inc
dec
adc
dec
pop
rol
mov
popa
and
adc
loope
push
mov
test
xchg
aas
lea
fnstsw
push
jmp
mov
xchg
mov
inc
pushf
ins
imul
pop
push
fadd
adc
mov
mov
xor
gs
mov
outs
arpl
adc
stc
adc
outs
adc
xor
test
outs
cwde
dec
outs
imul
or
retf
push
sbb
adc
test
inc
or
jb
lock
jns
in
push
mov
loope
fiadd
mov
push
jae
retf
arpl
adc
pusha
dec
sbb
mov
jp
cmp
jo
and
jl
popa
jbe
adc
fs
push
dec
jb
sub
jb
or
or
jae
push
ja
sub
daa
lahf
inc
mov
in
inc
and
xchg
inc
mov
or
cmp
mov
dec
add
xchg
inc
fs
inc
or
xor
and
movs
cmp
sub
mov
imul
ins
mov
and
sub
or
pop
ins
shl
dec
outs
dec
mov
adc
dec
scas
pop
or
add
mov
lds
int
clc
cwde
jb
pop
ja
add
call
jae
dec
push
push
adc
push
push
add
and
or
xor
and
add
test
sbb
cmc
adc
adc
add
shr
sub
inc
mov
mov
or
loope
add
fs
push
or
inc
adc
lea
cmp
imul
pop
push
cvtpi2ps
ret
dec
add
and
in
pop
add
mov
add
fdivp
ret
dec
jno
pop
shr
ret
outs
adc
pop
fnstsw
arpl
call
mov
fwait
cmp
(bad)
(bad)
pop
add
push
add
or
add
push
mov
inc
jo
aam
adc
or
sbb
dec
bnd
jl
jp
sub
push
not
dec
cs
sbb
add
mov
dec
not
mov
jne
pop
and
sbb
retf
xchg
mov
inc
jge
icebp
push
or
cwde
ss
push
into
and
pop
sub
add
push
sbb
jb
stos
(bad)
shr
push
pop
mov
sti
dec
arpl
cmps
add
push
hlt
or
ins
add
cmp
jg
jb
dec
adc
dec
cmp
and
push
jb
cmp
shl
sub
push
dec
inc
pop
lods
jo
lea
mov
mov
mov
adc
aaa
push
ficom
or
add
mov
nop
cmp
div
sbb
ret
push
xor
jmp
sar
sbb
and
or
push
mov
imul
inc
ins
mov
inc
adc
and
sbb
add
lock
scas
scas
inc
shr
in
push
xchg
and
arpl
fwait
mov
rcr
xchg
adc
add
je
mov
fimul
adc
add
xor
pop
cmp
adc
push
outs
xor
mov
add
mov
test
arpl
pop
mov
faddp
mov
xchg
ret
mov
not
jae
loope
pusha
adc
push
popa
inc
add
adc
jno
and
push
xchg
pop
pop
fsub
out
xchg
sub
test
add
ret
or
or
or
imul
adc
add
push
imul
je
adc
loop
or
inc
xor
inc
xlat
cmp
mov
inc
jo
mov
sahf
gs
mov
ins
popa
addr16
das
mov
fidiv
daa
fs
mov
or
ret
bound
add
popa
in
inc
mov
dec
inc
call
fild
xchg
movs
jmp
dec
xchg
adc
out
add
cmp
sbb
dec
sbb
sar
or
and
jbe
and
sub
pop
call
cmc
sub
inc
jno
popa
ins
push
outs
pop
push
inc
xor
adc
hlt
inc
jo
ins
and
aas
sbb
int3
adc
push
ins
jbe
jb
xchg
xlat
das
and
jmp
jae
pop
gs
inc
mov
mov
mov
fsub
(bad)
pop
mov
sub
adc
das
shld
push
or
out
data16
sub
push
lods
adc
jb
mov
add
jno
dec
jno
xor
(bad)
jno
push
or
jge
or
jns
fidiv
xchg
inc
sbb
inc
fist
int3
jo
stc
mov
lock
jae
jecxz
mov
imul
inc
sub
xchg
std
lahf
push
mov
inc
(bad)
inc
push
push
rcl
sbb
cmps
and
and
nop
cmp
pop
out
xchg
mov
pop
sysexit
push
xor
dec
outs
jbe
cmp
fild
ret
push
or
in
dec
jp
outs
pop
test
xor
pusha
xchg
fsub
scas
push
dec
test
add
ror
pop
sub
xor
adc
outs
jnp
popa
add
sbb
inc
add
adc
fcom
or
stc
outs
sub
pop
ins
test
sbb
(bad)
sbb
pop
push
sbb
cmp
cmp
push
sub
push
add
dec
jns
and
ret
(bad)
daa
mov
fwait
add
retf
add
cmp
pop
mov
std
test
jae
arpl
and
or
lahf
push
inc
push
popa
aam
sub
sub
test
and
loop
mov
dec
aad
mov
push
inc
fs
in
xchg
test
sbb
leave
push
stc
sbb
stos
push
inc
mov
add
lods
xor
div
mov
call
or
fcmovu
or
dec
sub
jae
pop
and
push
fsub
sub
test
inc
jle
popa
ins
or
mov
aaa
sub
adc
push
pusha
mov
cmps
push
and
das
iret
add
or
jmp
mov
add
cmp
mov
enter
mov
jge
int
add
sbb
jb
ror
pusha
or
mov
jg
out
add
(bad)
adc
push
rol
fistp
add
jnp
sti
inc
arpl
or
dec
adc
cs
or
or
(bad)
(bad)
jg
or
or
bound
add
add
jo
in
jbe
dec
sub
adc
pop
or
mov
mov
or
adc
dec
sbb
retf
clc
jge
in
lock
add
and
cmp
add
add
and
movhps
pop
add
add
invlpg
clc
dec
call
das
inc
adc
in
adc
push
and
add
in
das
mov
cmp
punpcklwd
adc
pusha
ret
es
sbb
adc
and
cs
jle
cmp
js
xor
cs
push
and
ret
push
call
sbb
adc
xor
mov
into
sbb
mov
add
divps
dec
lods
mov
or
xchg
sahf
loopne
push
in
out
(bad)
outs
adc
or
adc
and
adc
adc
and
adc
lock
cs
(bad)
jg
add
push
pop
outs
test
cmp
xor
adc
add
test
cwde
adc
xor
dec
das
and
inc
adc
add
dec
adc
sysret
sbb
sbb
and
sub
lahf
or
es
pcmpgtb
adc
sub
sub
mov
sbb
add
dec
lock
lahf
popa
ds
data16
sub
xor
pop
jp
add
stc
jg
cmovae
mov
sbb
and
pop
outs
scas
fcomp
sbb
lock
push
pop
and
lock
or
mov
push
push
lods
inc
retf
js
sub
push
push
and
paddsw
jg
and
add
dec
add
lock
cwde
pop
or
out
sub
add
es
pop
push
adc
lock
pusha
sbb
call
cmp
inc
xor
pop
sub
aam
fadd
dec
ins
or
lock
cmp
sub
inc
dec
prefetcht2
mov
lods
mov
add
ins
and
sub
sub
js
dec
mov
lock
nop
mov
push
lock
cwde
or
sbb
or
jmp
xchg
sbb
outs
int
repz
and
xor
xor
and
jbe
lea
add
shl
inc
dec
push
add
nop
jecxz
add
mov
add
sbb
arpl
imul
and
inc
or
adc
xor
inc
dec
sbb
inc
adc
cld
mov
xor
mov
pop
add
das
jae
nop
add
dec
cmp
data16
sar
jne
mov
jnp
das
add
scas
sbb
fstp
sbb
cli
test
and
out
add
lock
fisubr
mov
inc
add
repnz
cmp
pop
push
and
dec
ins
push
pop
push
sbb
add
pop
enter
pop
pop
out
mov
lock
add
pop
push
ret
mov
ds
add
dec
pop
or
adc
adc
push
and
lock
pop
or
dec
dec
or
hlt
push
inc
mov
stos
out
cmp
inc
or
cwde
add
sub
jne
push
push
jp
scas
sbb
sbb
add
mov
push
or
xor
jg
xchg
addps
xchg
movhps
nop
cpuid
daa
enter
pop
loope
and
sbb
add
jg
xchg
or
mov
pop
add
push
clc
jae
add
dec
aaa
and
mov
test
add
and
(bad)
cmp
push
shl
jmp
push
les
xor
push
pusha
mov
add
ja
or
call
push
pop
or
cld
aam
dec
scas
das
or
pop
mov
xor
jns
mov
fnstenv
dec
les
lods
nop
add
jle
push
mov
add
fxch
pop
fcmovnbe
push
adc
sub
dec
cmp
test
dec
mov
add
or
add
add
inc
adc
add
sub
jnp
add
adc
add
outs
add
mov
push
push
sbb
lock
movsx
xchg
shl
clc
adc
lock
ret
adc
add
sahf
sub
lods
ret
(bad)
add
cmp
rol
loop
jno
ret
cli
mov
shl
adc
rcl
cwde
adc
test
sbb
aaa
mov
dec
paddusw
aaa
or
add
outs
inc
push
add
cmp
adc
ja
push
ret
arpl
ins
lock
outs
adc
push
push
add
or
jle
or
inc
adc
lock
aas
stos
mov
adc
cmp
and
imul
adc
sub
dec
or
or
jg
scas
push
daa
pop
aas
sbb
sub
push
dec
outs
push
jge
inc
ja
loop
add
sbb
clc
inc
nop
(bad)
adc
push
inc
je
push
and
mov
sub
push
icebp
aaa
sar
mov
xor
adc
es
push
or
sub
cmp
adc
inc
jmp
fsubr
lock
xor
inc
pop
dec
js
sbb
xchg
or
mov
ins
jecxz
or
cmp
adc
sub
xchg
dec
(bad)
push
bound
(bad)
jae
dec
adc
aaa
ds
inc
and
mov
or
adc
adc
or
mov
clc
add
stos
or
sbb
popa
mov
stos
and
pop
adc
fmul
mov
sub
nop
out
aas
pusha
test
sbb
jle
sbb
xadd
mov
(bad)
sbb
push
add
adc
or
sub
idiv
mul
outs
push
or
push
cld
push
addr16
daa
and
and
stc
mov
outs
inc
push
and
xor
cmp
dec
sub
cmps
xor
adc
push
loope
in
aas
pop
or
sbb
push
adc
push
and
jb
or
rcr
or
cmp
outs
adc
movq
pop
push
xchg
or
sub
xor
push
push
sbb
cli
jne
popw
arpl
cmp
cmp
(bad)
cmp
sub
pop
sub
or
retf
dec
das
adc
adc
pop
jb
jne
outs
or
and
sbb
pop
xor
sbb
js
fisub
push
and
inc
jp
push
popa
mov
adc
add
lock
xor
lock
lock
add
jmp
push
lock
add
add
and
cdq
aaa
jo
gs
outs
cmp
lahf
cs
sub
pop
fild
sbb
cmp
push
int
jg
mov
(bad)
xor
ss
or
ror
push
jb
push
repnz
or
xor
jno
cmp
xor
pusha
push
and
mov
xor
mov
dec
and
inc
and
adc
loop
mov
or
push
or
adc
push
aaa
or
pop
adc
adc
lods
std
mov
push
adc
mov
dec
push
cs
xor
or
inc
aam
push
and
push
sti
lock
jne
aas
dec
adc
leave
inc
and
jl
add
inc
sbb
lock
mov
movs
sub
or
adc
pop
bound
bound
cmp
add
push
sbb
add
lock
fisub
pop
inc
or
and
lea
shr
sub
push
jo
mov
loope
arpl
mov
and
or
adc
push
inc
popf
sbb
or
cld
pop
lds
fcom
and
sub
inc
and
aaa
add
or
fdivp
fidivr
ret
sub
jne
lahf
jecxz
lock
add
mov
add
aas
xor
bound
and
or
ins
or
add
or
push
push
fstp
div
test
xor
dec
push
popa
push
add
add
nop
push
sub
(bad)
sbb
pop
cwde
outs
fild
push
stc
sbb
ins
push
jb
and
xchg
push
push
push
(bad)
dec
mov
push
sbb
push
aaa
push
inc
and
xchg
dec
adc
cmp
and
adc
adc
push
jne
sbb
pop
dec
adc
cmp
and
push
inc
rol
test
and
push
or
or
mov
rcl
push
sub
push
je
push
sub
jbe
lds
cmp
push
add
aaa
pop
mov
xor
add
and
adc
lock
push
or
push
cli
add
imul
adc
(bad)
and
pop
or
(bad)
fild
inc
sbb
pop
dec
cmp
and
push
cmc
jae
cmp
test
xor
adc
aas
add
add
pop
and
add
enter
sub
sbb
outs
les
das
lock
and
enter
and
sub
and
cmp
jne
inc
push
push
push
xor
sbb
jecxz
mov
loopne
paddusw
cmp
mov
outs
mov
push
lock
push
or
sbb
pop
mov
adc
sbb
int3
and
arpl
(bad)
(bad)
call
lock
adc
jp
call
scas
stos
dec
mov
sbb
fucomp
jmp
push
xor
adc
push
adc
adc
ret
push
and
push
adc
push
adc
and
pop
sbb
xchg
test
jne
dec
xchg
inc
dec
movq
shl
les
ins
pop
mov
nop
mov
sub
mov
or
daa
sbb
sar
add
popa
pop
inc
jb
adc
jne
and
in
jle
and
add
lock
jo
mov
xchg
jbe
add
lock
cmp
pop
aad
idiv
(bad)
push
sub
add
mov
cmc
add
add
push
add
adc
inc
ret
in
mov
(bad)
lock
add
mov
push
jle
pop
std
dec
lock
mov
add
(bad)
and
jnp
sbb
daa
dec
imul
add
pop
cmp
xlat
fs
(bad)
rcl
in
stc
loope
jo
xor
cli
pop
sub
push
enter
sub
dec
sub
or
add
jne
adc
xor
and
mov
pop
jo
add
stos
add
mov
push
shufps
pop
or
js
sub
pop
xor
mov
xchg
or
daa
dec
mov
in
inc
jge
les
mov
lock
jle
push
pop
mov
and
push
mov
mov
pop
addr16
xadd
loope
movs
cmp
popa
sbb
dec
inc
mov
cmps
add
add
loopne
rcr
movs
sbb
cmp
sar
cmp
lock
loope
ds
mov
retf
fs
jb
lock
add
and
add
xor
sbb
jbe
or
push
call
jg
inc
lds
inc
sub
cli
cmp
jne
inc
add
mov
add
jl
cmc
xchg
adc
sbb
pop
push
adc
or
pop
add
jmp
inc
add
and
mov
jno
ja
mov
je
cmp
mov
ins
cmp
sub
or
das
adc
jmp
xchg
ficom
dec
(bad)
jb
stos
mov
or
push
or
add
ret
neg
(bad)
jnp
mov
push
pop
jg
xor
ret
add
lock
add
lock
sbb
out
fs
cmp
push
and
and
je
fmulp
xchg
and
dec
adc
push
test
movs
mov
bound
pop
lds
(bad)
ficomp
(bad)
aam
pop
ss
bound
push
cmp
cmp
push
inc
inc
std
ret
inc
or
inc
test
or
retf
sub
sbb
mov
add
inc
jb
xor
in
(bad)
adc
xor
push
pop
add
or
les
xor
sbb
mov
arpl
push
mov
jmp
sbb
inc
and
sbb
cmp
push
or
mov
sbb
push
and
ja
cmp
pusha
and
movd
add
fsubrp
add
mov
sbb
sbb
fistp
das
pop
shl
dec
cmp
inc
push
aas
mov
jbe
xor
add
adc
push
xchg
adc
cmp
pop
mov
xchg
arpl
and
(bad)
push
les
imul
adc
lahf
pop
test
or
mov
mov
and
sbb
out
xlat
std
mov
xchg
lock
add
or
adc
scas
jae
adc
fadd
sbb
es
bswap
dec
sub
sub
in
fild
dec
push
and
je
cmp
adc
cld
sbb
cld
dec
outs
sub
adc
or
push
pop
jg
mov
adc
mov
inc
sub
lds
imul
es
popa
daa
push
dec
push
push
ins
add
push
inc
push
add
shr
push
js
dec
cs
fs
retf
or
inc
add
or
jle
data16
sub
push
push
push
or
ffree
call
sub
push
sbb
in
pop
adc
add
jl
inc
or
cmp
dec
sbb
push
pop
fs
cvtps2pi
push
sub
adc
mov
adc
push
les
adc
or
(bad)
rcl
mov
daa
mov
inc
aas
bound
xor
fwait
loope
pop
nop
push
add
adc
add
lahf
mov
cli
ficom
shl
mov
loopne
not
popa
cmp
adc
dec
mov
push
sbb
cmp
popf
int
outs
push
sub
xchg
pop
inc
or
or
es
add
shl
jle
ins
push
lock
push
ss
jbe
push
push
inc
add
sti
pop
xor
or
sbb
add
and
xchg
inc
mov
or
pop
jle
pop
hlt
and
call
cmp
(bad)
mov
ret
or
or
or
adc
lea
sbb
sbb
call
and
push
aas
and
dec
push
sub
fdivp
push
ins
jo
out
in
adc
cmp
mov
cmp
add
add
add
push
sbb
jns
add
push
cld
adc
add
packsswb
xor
sbb
(bad)
dec
rcpps
sub
mov
push
jle
cmp
push
xor
adc
(bad)
pop
inc
enter
xor
sbb
pusha
cvtpi2ps
pop
cld
sub
fsub
(bad)
sbb
dec
call
xor
pop
sbb
and
adc
mov
adc
xor
push
inc
adc
sub
lock
bound
lock
push
add
and
push
test
pop
push
ret
pop
or
or
and
dec
mov
(bad)
cmps
xor
push
outs
ficom
lods
shl
or
pop
push
sbb
sbb
sub
scas
jbe
imul
adc
or
push
sbb
push
push
push
lock
push
adc
popa
pcmpeqw
push
js
pop
adc
or
inc
test
shr
ins
popa
ud1
rcr
icebp
jbe
xor
pusha
cmp
ss
sub
test
pop
adc
xchg
sub
dec
sub
dec
pop
rol
xchg
fadd
jmp
mov
sbb
dec
push
nop
inc
sub
push
or
add
adc
add
dec
adc
sub
push
or
or
mov
pop
xchg
xor
sub
stos
xchg
push
sub
add
ret
les
test
dec
xlat
inc
mov
add
js
(bad)
mov
cmps
jo
pusha
xchg
pop
pop
inc
adc
adc
xlat
lock
mov
lock
xchg
jns
(bad)
push
(bad)
sbb
add
inc
aas
jnp
add
or
lock
or
adc
(bad)
jb
aaa
popa
xor
sub
adc
lods
mov
adc
xchg
sti
jo
daa
adc
xlat
popa
add
sbb
fcomp
add
add
stos
sbb
push
dec
in
js
imul
jo
push
xchg
push
or
dec
adc
dec
add
aam
mov
add
daa
aas
test
cli
push
rol
dec
scas
xor
push
lock
(bad)
daa
push
cld
xor
sub
daa
mov
sbb
or
push
jl
push
imul
dec
adc
xor
or
and
jle
adc
(bad)
jg
jo
or
add
and
sbb
ja
or
push
cmp
cmp
mov
lock
add
adc
das
cmps
and
or
mov
add
hlt
mov
push
push
fiadd
xchg
adc
add
neg
stos
sbb
cmp
sbb
test
mov
sbb
rol
fnsave
cmp
adc
sub
jmp
inc
sbb
mov
inc
nop
movs
mov
in
cmp
adc
adc
adc
xor
mov
xor
jb
adc
xchg
sbb
cwde
jp
jbe
sbb
adc
fcom
and
sub
popa
cmp
jl
mov
shl
jmp
call
mov
call
pop
lds
jns
add
jmp
enter
pop
cmp
int3
mov
adc
adc
add
push
inc
sysenter
es
test
sbb
mov
cmp
mov
aas
call
sub
arpl
mov
cmp
jge
icebp
mov
lock
enter
cmp
arpl
jmp
pop
add
cmp
mov
mov
lods
je
jmp
jmp
call
sub
jb
xchg
sub
retf
and
mov
dec
outs
imul
xor
mov
adc
pusha
jne
mov
dec
cmp
dec
adc
add
pop
sahf
or
xchg
inc
add
push
or
lods
and
pop
adc
loop
dec
xor
push
adc
adc
cmp
jg
ja
iret
sub
push
adc
jmp
retf
dec
adc
xchg
in
sbb
retf
adc
ins
outs
sub
xor
add
or
and
xchg
pushf
inc
or
cmps
(bad)
std
mov
xchg
and
sub
adc
lea
pop
ret
jne
inc
sub
lock
pop
lea
mov
jne
retf
cdq
pop
pusha
cmp
mov
inc
mov
orps
mov
or
pop
add
or
or
pop
add
arpl
(bad)
ror
or
lock
ins
add
jo
add
dec
outs
leavew
(bad)
repz
adc
mov
(bad)
jmp
(bad)
pop
add
jp
adc
add
or
mov
mov
(bad)
lock
push
xor
daa
or
test
mov
inc
popf
inc
jg
aas
lea
pop
sbb
in
mov
or
mov
dec
cmp
aaa
push
add
and
add
add
pusha
add
adc
mov
add
adc
add
add
stos
jo
ins
adc
and
cmp
loopne
push
mov
add
and
ss
repz
movs
not
add
fcom
data16
pushw
sbb
adc
pop
sbb
adc
pop
dec
pop
adc
pop
sbb
popa
add
addr16
add
add
jl
and
adc
gs
cld
adc
and
add
fistp
or
outs
sub
aas
xor
or
add
in
jp
sub
and
add
sub
inc
adc
rcr
inc
inc
dec
adc
ins
and
dec
data16
ffreep
dec
adc
push
mov
(bad)
jmp
(bad)
cmp
dec
adc
mov
cwde
rol
cmps
sbb
rol
lock
cmp
pop
sbb
push
push
cld
inc
and
or
cli
push
xchg
dec
js
jg
xor
(bad)
push
jmp
add
sbb
ds
xor
in
dec
adc
sub
sub
mov
or
lahf
lock
push
push
cmp
push
push
jle
xor
and
mov
cld
push
mov
rcl
jmp
or
arpl
(bad)
(bad)
jg
xor
push
sysret
or
push
or
or
and
mov
loopne
nop
xor
add
inc
mov
adc
push
sub
mov
push
adc
scas
xor
adc
mov
fstp
prefetcht2
pop
and
push
sub
mov
adc
pop
push
pop
push
jg
call
push
xor
mov
xor
jle
pop
mov
add
add
jp
int
and
adc
sbb
inc
cmps
xchg
dec
push
adc
adc
or
sub
int
mov
sub
ds
sbb
push
sbb
in
xor
push
or
push
or
sub
push
pop
ds
(bad)
(bad)
(bad)
jmp
and
and
sbb
sub
das
sub
daa
dec
inc
sub
adc
daa
lock
add
jno
adc
pop
adc
sub
sub
stos
or
mov
cli
push
pusha
mov
dec
push
pop
and
jb
or
mov
and
dec
add
pop
sub
not
xor
ds
lock
push
adc
sbb
and
push
push
sbb
ins
ror
pop
adc
inc
lock
dec
daa
mov
xchg
ss
scas
mov
cld
ja
pusha
push
adc
or
stos
cmp
cmp
xor
push
push
pop
adc
adc
inc
and
sbb
dec
pop
push
es
sbb
loop
dec
xor
xor
jae
dec
sahf
pop
xor
jae
mov
sar
cmp
sbb
jnp
(bad)
fbstp
cs
bound
out
call
jge
lock
add
gs
pop
cwde
add
addr16
cld
stos
fs
add
sbb
and
mov
and
fisubr
push
aam
push
pusha
add
scas
mov
outs
inc
inc
mov
push
sub
idiv
in
(bad)
iret
inc
or
psllq
add
ins
jns
push
jae
dec
mov
push
dec
aad
aaa
ds
inc
add
das
(bad)
jg
(bad)
into
adc
das
mov
mov
sbb
adc
aas
jp
sbb
xor
retf
add
ja
jbe
xchg
adc
and
push
and
adc
aaa
add
add
lock
mov
cmp
sub
sub
add
push
(bad)
jnp
aaa
in
clc
pop
into
mov
push
sub
mov
into
adc
js
sbb
loopne
jne
cs
and
dec
or
adc
sub
push
sub
pop
jg
outs
sti
add
dec
xchg
sub
js
add
push
outs
pop
aaa
mov
add
jmp
dec
gs
fisttp
inc
in
cmp
sbb
inc
sub
ror
xor
jne
dec
popf
ret
jle
idiv
inc
and
pusha
and
or
xor
sub
push
cmp
or
or
or
jg
cmp
push
sbb
and
xchg
(bad)
jmp
adc
fwait
push
sbb
and
pop
inc
dec
and
dec
and
fnsave
mov
adc
and
push
imul
fidiv
add
sbb
and
xor
xor
adc
adc
or
or
or
jg
xor
or
sub
inc
sbb
adc
push
(bad)
out
jp
and
inc
(bad)
fsub
sub
pop
fistp
lock
mov
ds
or
dec
(bad)
and
mov
addr16
sub
and
xor
adc
adc
(bad)
mov
and
adc
adc
and
adc
mov
es
cli
(bad)
adc
add
daa
pop
daa
mov
add
cs
inc
fild
cmp
inc
inc
inc
add
(bad)
sub
push
add
push
and
(bad)
mov
cli
sbb
sub
and
or
add
pop
and
and
push
adc
pop
hlt
cs
push
ss
imul
jb
add
inc
mov
push
jp
adc
jb
ja
sbb
cmp
js
outs
jb
sbb
adc
sbb
pop
cld
pop
pop
and
pop
sbb
cs
ret
add
inc
shr
mov
inc
add
iret
hlt
xor
outs
scas
in
push
rsqrtps
push
and
fwait
adc
cmp
rcl
gs
std
pop
inc
test
sbb
dec
pop
push
push
or
inc
and
cs
or
sub
sbb
(bad)
out
dec
push
cdq
add
call
sbb
inc
add
or
push
jg
stos
mov
mov
inc
jp
in
lock
or
cmp
or
lods
aaa
ds
sbb
mov
rol
adc
add
push
push
pusha
ja
mov
jo
nop
add
outs
(bad)
xor
pop
dec
push
sbb
push
push
sub
xchg
push
pop
cli
adc
push
jns
fsub
pop
and
xchg
sahf
cli
(bad)
jg
fadd
dec
push
push
je
pop
push
cmp
es
pop
mov
sbb
dec
std
out
xor
inc
and
and
sub
ss
inc
aaa
out
push
sub
mov
push
push
add
or
cmc
inc
scas
dec
push
jno
gs
jno
sbb
push
aad
or
pop
or
mov
or
or
cmc
mov
xchg
and
lock
cs
or
push
or
dec
(bad)
jg
or
sub
pabsb
rol
sbb
call
or
or
mov
inc
cmp
pop
push
push
sub
or
push
and
push
sbb
pop
push
and
push
pop
pusha
push
push
aaa
sub
pop
mov
and
and
add
clc
jge
sub
aaa
adc
and
push
sbb
stc
ds
or
shl
push
dec
and
and
add
and
sbb
sub
mov
sub
cmp
sbb
dec
jae
bound
xchg
lock
mov
push
pop
sbb
sbb
lock
fnsave
sub
add
mov
inc
cli
fmul
pop
pop
sbb
pop
sub
(bad)
das
shr
jp
and
sbb
cs
xor
(bad)
ds
pop
sub
or
add
pop
xor
mov
fld
and
aam
adc
sub
push
and
sub
inc
daa
or
dec
sub
push
ds
out
ds
xchg
loope
push
inc
sub
and
fdivr
jno
ins
sub
cmc
mov
jl
inc
mov
bound
sbb
xchg
adc
dec
cmp
sub
adc
pushf
call
cmps
or
pop
adc
cmp
add
scas
adc
inc
or
pop
sub
mov
adc
dec
sbb
adc
and
adc
(bad)
adc
mov
pop
or
or
jg
dec
fcmovb
nop
push
xchg
xchg
cs
add
jmp
xchg
pusha
push
loop
pop
inc
sbb
sbb
call
dec
jmp
bound
call
shl
jecxz
movs
push
neg
push
mov
shl
and
add
cdq
sbb
aas
pusha
adc
jo
mov
aaa
inc
cmp
ds
lock
sub
popa
jmp
test
adc
shr
xor
and
lock
sub
add
and
add
push
call
xor
push
xor
and
xor
push
jle
add
inc
popf
mov
sbb
leave
or
pop
enter
mov
addr16
std
lods
or
cmp
add
adc
sbb
adc
mov
xor
push
push
xor
(bad)
scas
cmp
and
das
daa
dec
inc
pop
xor
pop
daa
xor
fs
sbb
inc
xor
shl
aad
call
push
mov
jge
cmp
or
lods
fbstp
or
loopne
sbb
xor
jne
ins
dec
sbb
in
and
jbe
je
cmp
(bad)
aas
add
inc
push
das
xor
xor
mov
add
adc
sbb
jbe
mov
ds
aas
adc
or
add
cmp
sbb
das
sub
xor
arpl
xor
push
push
sbb
pushf
loope
adc
movaps
call
dec
add
push
and
dec
push
jl
mov
aam
ret
sbb
pop
or
nop
adc
or
add
mov
mov
sub
jnp
cld
add
and
and
mov
sbb
lahf
and
xor
fild
or
xor
inc
add
or
mov
cmp
cs
xor
adc
sbb
pop
mov
sub
loopne
pusha
jb
xchg
push
or
adc
sbb
mov
push
or
dec
or
or
or
sbb
jp
call
add
mov
adc
or
and
lds
jb
sbb
sub
pop
cmp
into
and
mov
mov
js
mov
or
pop
or
add
pushf
jg
add
xchg
inc
xor
and
pop
push
das
inc
sub
cld
mul
ss
mov
pop
lock
add
lock
inc
lock
add
fcomp
mov
adc
in
push
lock
mov
or
mov
inc
dec
pop
push
push
dec
js
xor
xor
cld
mov
inc
push
add
and
cmp
fdivr
mov
fcom
cld
test
mov
or
pop
call
and
outs
outs
clc
pop
push
pop
add
adc
fcom
push
pop
lock
cmp
call
(bad)
cmp
push
out
or
or
or
or
or
or
or
or
dec
mov
and
or
add
ss
lahf
xlat
outs
fistp
lock
loopne
or
jo
pusha
ins
or
xor
push
pop
pusha
out
mov
dec
cmp
ins
and
push
adc
mov
popa
or
adc
adc
adc
push
retf
pop
jnp
push
rcl
xor
add
inc
das
ret
and
aaa
dec
push
(bad)
(bad)
jg
inc
movups
ss
sub
inc
xor
cmp
hlt
aaa
(bad)
cmps
outs
lods
or
add
cmp
call
cdq
mov
and
and
fisttp
or
sbb
fisub
stos
pop
adc
jo
jl
mov
loopne
mov
es
call
das
out
mov
adc
rcr
cmp
mov
adc
xchg
add
pop
fbld
sbb
dec
jno
aam
mov
ins
jp
dec
pop
pop
pop
gs
mov
sbb
sahf
adc
dec
call
sbb
push
xor
adc
(bad)
dec
mov
adc
or
call
out
sbb
jno
cmp
adc
adc
pop
pop
dec
xor
icebp
sub
adc
and
xor
pop
sbb
dec
or
or
dec
adc
or
sub
cmp
sbb
idiv
adc
xor
cmp
fisttp
add
pop
das
pop
pop
or
test
jle
xor
cwde
ds
popa
ja
sbb
cmp
xor
sbb
sti
pop
adc
jp
inc
daa
push
cmp
xor
ss
mov
adc
sub
add
push
sub
aas
xlat
jle
imul
cmp
inc
push
in
or
cmp
cmp
cmp
mov
rcr
pusha
inc
imul
mov
adc
push
push
sub
std
inc
sti
push
push
push
adc
inc
cmp
mov
sbb
adc
fwait
mov
in
inc
push
sub
add
and
sbb
pop
and
sub
mov
and
or
and
ja
and
movhps
mov
pop
add
les
ret
jg
ret
sbb
cmp
sub
mov
pop
pushf
push
add
pop
test
push
sbb
ja
adc
adc
inc
inc
push
(bad)
loop
loope
and
jne
jle
cmp
inc
pop
addr16
xor
cmp
adc
dec
mov
jb
daa
adc
dec
adc
adc
sub
sbb
xlat
or
or
and
sbb
pop
mov
imul
pop
push
adc
cmp
mov
sar
pop
xor
xor
mov
std
(bad)
std
fdiv
add
inc
or
add
pop
ror
stos
ss
pushf
pop
rcl
sbb
adc
and
add
call
jge
inc
inc
movntps
or
pop
mov
out
inc
xor
es
and
daa
xor
enter
sub
rcl
pop
cmps
sub
and
sbb
aaa
mov
outs
add
adc
dec
mov
inc
dec
movs
xor
jl
ds
dec
mov
sub
adc
adc
sub
mov
outs
sbb
and
mov
xchg
sbb
pop
push
and
sub
fild
adc
add
sub
add
jp
sbb
jecxz
adc
imul
movaps
mov
cld
pop
mov
ja
push
mov
or
dec
jo
cmp
or
xor
sbb
cs
(bad)
fimul
daa
sub
adc
sbb
jge
stos
sbb
ins
data16
push
jbe
xchg
push
dec
mov
es
pop
inc
mov
adc
sub
sbb
dec
mov
inc
inc
push
rcr
xor
add
mov
adc
stos
inc
mov
shl
adc
adc
cmp
inc
sti
not
sub
sub
mov
push
cmp
and
xor
mov
cmp
mov
cmp
or
es
jl
sbb
xor
mov
sub
and
sbb
xor
or
sbb
jmp
mov
push
push
dec
bound
loopne
arpl
sbb
dec
retf
cmp
or
in
pop
cwde
add
sub
sti
or
sbb
and
or
es
pop
adc
fimul
cs
es
sub
in
aas
add
sar
push
sub
sbb
xor
and
adc
(bad)
mov
or
adc
sbb
dec
sub
and
adc
dec
dec
outs
std
sbb
sub
sahf
inc
fwait
xchg
xor
inc
pop
pusha
ror
lock
add
add
bound
fisub
adc
push
inc
ds
sbb
(bad)
jg
or
outs
sub
test
jno
call
pop
ret
adc
cmp
add
adc
outs
dec
dec
fimul
adc
push
sbb
jg
pop
jecxz
ret
das
cmp
jns
sub
or
fdivr
idiv
or
push
or
or
retf
adc
in
pusha
sbb
or
and
dec
ja
mov
sub
cld
inc
push
cmp
sub
inc
adc
sbb
cmp
inc
xlat
outs
(bad)
push
mov
xor
or
sub
xor
jne
sub
mov
cld
pop
jg
jnp
cmp
inc
adc
add
aas
adc
sub
and
jmp
imul
adc
and
add
xor
add
gs
dec
sbb
or
xor
mov
adc
lds
and
xor
or
sub
adc
push
cmc
(bad)
ja
sub
jmp
out
pop
lds
ds
aaa
aaa
jb
sub
sub
(bad)
or
cmp
data16
dec
and
jle
inc
or
adc
xor
pop
pushf
dec
adc
rcpps
(bad)
push
or
das
xchg
arpl
dec
lock
adc
push
ss
pop
mov
mov
or
or
push
pop
sbb
cld
jg
outs
wrmsr
aaa
xor
cmp
dec
sbb
js
ss
push
xchg
push
push
push
jnp
push
mov
mov
int
or
and
mov
xchg
jbe
(bad)
push
test
dec
xor
xor
adc
dec
es
jnp
sti
dec
or
repz
cmp
lods
mov
adc
or
inc
jbe
or
out
pop
imul
sbb
pop
in
or
test
xor
sbb
push
jmp
mov
inc
and
(bad)
mov
pop
dec
fs
pop
mov
call
sbb
ins
xor
push
push
dec
cmp
xor
jg
mov
cmp
add
push
int
inc
enter
dec
cwde
mov
ins
je
push
retf
pop
or
inc
push
jmp
(bad)
cs
push
cmp
popf
inc
mov
jg
adc
outs
or
inc
lods
sbb
lds
mov
or
and
adc
mov
retf
or
push
adc
push
or
jg
shr
jbe
adc
pop
sub
push
mov
push
xchg
pop
inc
fstp
dec
sbb
std
daa
push
jle
sub
sub
xor
sub
xchg
xor
mov
and
jp
dec
inc
sbb
lods
pop
mov
add
and
pop
stos
jmp
inc
ss
and
cmp
sub
lock
add
push
sub
adc
adc
or
sub
adc
jo
pop
cmp
test
push
mov
xchg
jmp
mov
ss
sbb
sbb
pop
and
repnz
mov
stos
cmc
outs
aam
adc
push
mov
push
push
or
jmp
pop
and
adc
or
call
or
jl
sbb
es
lock
add
movups
and
dec
dec
jl
fbld
and
push
sub
adc
sbb
add
jl
push
dec
adc
mov
cmp
lock
pop
sar
shl
or
in
sub
or
and
push
add
adc
hlt
lea
adc
ins
pop
and
and
cmps
(bad)
dec
sbb
jae
jne
sbb
and
bound
xor
outs
test
popa
inc
adc
ds
push
inc
xor
in
mov
pusha
sub
sub
adc
sbb
mov
es
pop
sbb
jg
xor
pop
lock
add
xor
add
adc
or
push
nop
outs
retf
push
cmp
mov
adc
cmp
adc
mov
js
retf
xor
mov
aaa
pop
xor
js
ins
pop
popf
push
adc
call
xchg
outs
and
call
fcom
sbb
loop
loop
dec
bound
inc
scas
inc
xor
idiv
outs
nop
cmp
push
jge
and
push
rcl
push
sbb
cmc
pushfw
gs
fs
add
(bad)
push
sub
sbb
mov
inc
and
push
adc
adc
jp
daa
ins
lahf
mov
or
sub
push
fidivr
neg
and
adc
mov
push
add
sbb
and
aaa
pop
dec
call
sub
push
xor
dec
cmc
cdq
aas
cld
jle
loopne
add
add
cmp
cmc
push
ins
inc
inc
push
or
add
inc
and
pop
push
mov
add
dec
sub
or
and
push
movlps
pop
mov
sub
adc
pop
push
sub
clc
sbb
sbb
inc
js
mov
(bad)
fidiv
imul
mov
sub
add
mov
mov
cwde
fadd
add
sbb
mov
es
je
out
cmp
push
add
or
pop
xchg
and
push
fwait
int
or
(bad)
push
pop
push
jecxz
jmp
lock
or
inc
jae
es
push
pop
retf
mov
xor
jle
lock
pop
inc
pop
mov
es
adc
cmp
sbb
jmp
add
jp
push
retf
pop
jbe
sub
or
mov
adc
pop
nop
mov
cmp
dec
add
cmp
mov
pushf
inc
push
or
psrld
add
sub
push
or
dec
dec
or
cmp
inc
dec
pop
or
add
repnz
push
mov
or
sub
sub
jmp
jl
or
mov
sub
push
cmp
or
dec
mov
mov
(bad)
adc
sub
or
adc
inc
inc
mov
and
mov
or
pop
add
or
dec
mov
lds
push
jl
ja
outs
sub
call
mov
jp
and
pop
or
or
or
xor
(bad)
adc
push
cs
(bad)
aas
xor
cmp
in
and
aas
sub
jne
or
jbe
jbe
or
xor
cmp
jbe
pop
out
pop
push
(bad)
or
or
pusha
sub
gs
or
or
rcl
push
sub
jae
push
cld
or
sub
or
ins
pop
sub
(bad)
aad
adc
lods
jne
mov
cmp
cmp
jp
push
mov
mov
fld
cmc
add
or
or
int3
ret
cmps
push
and
add
adc
add
or
ds
add
ss
inc
or
pop
jno
sub
pusha
loopne
push
aaa
sub
out
cmp
pop
or
sbb
or
loope
iret
fimul
sub
jo
or
sbb
add
or
push
inc
or
or
jmp
seto
sbb
sub
(bad)
pop
clc
add
adc
cmp
pop
push
or
or
inc
or
nop
outs
lds
push
mov
ja
outs
or
sbb
ret
es
and
add
(bad)
in
cs
das
es
das
cmp
and
das
push
into
inc
aaa
adc
mov
push
or
rol
or
xchg
(bad)
pop
sar
es
sbb
xor
adc
and
adc
ss
dec
or
cli
push
cli
fwait
sbb
jb
pop
push
inc
push
jg
dec
sub
jmp
xor
sub
pop
sub
fist
or
pop
sub
push
cmps
and
sub
mov
xchg
lock
or
mov
cmp
jo
sub
loop
ins
adc
xor
xor
mov
lock
pusha
or
mov
out
out
dec
inc
or
or
jp
cmovo
mov
fwait
add
pusha
popf
sub
or
sub
sbb
or
jb
cs
scas
sti
repz
mov
add
arpl
push
xor
sbb
pinsrw
aaa
pop
rcr
adc
add
cmps
cs
mov
add
adc
push
repnz
xchg
jb
rol
jo
mov
and
ds
je
mov
nop
or
pushw
dec
call
mov
add
leave
xchg
sbb
lods
aad
cmp
or
not
sub
in
fucomp
or
jb
cwde
adc
cmp
jge
loop
inc
mov
daa
and
or
or
sub
or
mov
and
or
ror
or
jl
pop
ror
gs
sub
xor
or
(bad)
mov
ins
sbb
or
stos
and
in
pop
pop
cmp
and
pop
test
mov
pop
xchg
cmp
jg
or
sbb
add
ret
mov
sub
test
cmp
xchg
stos
mov
jbe
inc
mov
fist
out
aas
dec
add
mov
(bad)
cmps
leave
jl
push
adc
sbb
shl
idiv
adc
lock
cmps
adc
or
push
jge
cdq
outs
or
push
xor
pop
test
aas
or
and
inc
add
shr
or
push
push
cmp
inc
adc
pop
mov
pop
push
push
push
push
popf
fdiv
inc
adc
cdq
or
dec
fiadd
mov
add
lods
pop
mov
push
xor
hlt
out
or
push
add
pop
sti
jno
scas
or
pusha
dec
out
sub
xor
mov
mov
fsubrp
cmp
push
xor
fidivr
sar
ja
mov
or
or
or
lock
adc
pop
xor
xchg
xchg
sub
jmp
sbb
sub
push
or
cmc
int
dec
mov
sbb
or
jno
or
mov
sbb
and
push
bound
fld
xor
nop
shr
mov
add
xlat
and
fnstsw
or
pop
mov
or
cmp
xor
sti
(bad)
rcr
out
sbb
or
lods
sar
xor
adc
mov
xchg
sub
es
push
adc
sbb
xlat
push
cmps
push
add
push
mov
mov
adc
sub
jo
lods
in
pop
xor
out
pop
adc
push
ja
and
adc
mov
xor
cmp
xor
sbb
mov
pop
ins
push
mov
fisub
es
sub
push
add
sub
push
repnz
and
rcl
xchg
mov
ds
dec
sub
mov
push
add
es
pop
adc
outs
jg
xor
lock
adc
inc
push
inc
push
outs
xchg
clc
(bad)
jp
xor
lock
dec
(bad)
xchg
push
inc
adc
or
dec
cmps
adc
or
sbb
mov
or
sbb
pusha
jo
push
fdivr
push
jb
sbb
data16
add
xor
add
push
or
cld
(bad)
cmp
mov
jl
push
sub
mov
das
push
push
sub
mov
sbb
pop
add
(bad)
mov
inc
add
and
or
pop
lock
es
push
ror
jmp
adc
xor
mov
ret
or
dec
mov
and
or
sbb
add
push
push
and
ror
push
pop
add
inc
ret
ror
and
mov
sub
pop
xchg
xchg
sbb
jbe
mov
pop
xchg
or
cwde
retf
(bad)
and
in
pop
or
xor
cli
push
add
ret
and
test
inc
pop
or
push
sub
or
inc
or
ret
(bad)
div
add
cmp
push
adc
cs
int
(bad)
adc
or
pop
test
push
and
sbb
sar
adc
adc
add
adc
and
push
add
or
fsubr
ds
or
aas
adc
adc
pushf
out
mov
and
or
add
push
push
adc
es
ficom
push
and
sub
pop
(bad)
push
out
or
adc
adc
or
inc
pop
or
sahf
fistp
ins
mov
xor
jo
pop
sbb
inc
xchg
push
sbb
push
(bad)
and
pop
adc
les
xlat
sub
test
or
fucomi
or
inc
pop
add
ror
xor
je
mov
mov
push
sbb
aaa
(bad)
pushf
inc
or
or
mov
push
daa
pop
adc
fisub
mov
sbb
adc
test
pop
inc
adc
dec
test
outs
push
pushf
sbb
or
add
adc
mov
or
cmp
dec
or
add
sub
or
imul
das
mov
jle
cmps
sub
xor
leave
xor
lock
mov
(bad)
es
mov
or
pusha
popf
adc
sbb
xor
hlt
add
inc
out
lock
out
lods
cmp
or
pop
or
xor
and
add
inc
(bad)
mov
addr16
dec
dec
mov
lock
(bad)
retf
lock
pop
pop
push
dec
movs
jge
in
add
push
adc
push
add
es
ret
push
pop
movq
mov
sbb
clc
adc
adc
movs
push
jno
stos
inc
neg
sbb
jae
retf
cmps
and
jb
je
jno
lock
inc
mov
push
mov
adc
sbb
or
push
sub
adc
jl
das
xor
xor
es
into
or
inc
test
cmps
inc
mov
sub
sbb
lock
push
dec
fbstp
pop
mov
and
inc
pop
sbb
sub
fdiv
sbb
xor
or
mov
adc
jbe
inc
retf
mov
pop
inc
pop
jb
sub
test
cmp
inc
jle
cmp
mov
or
jp
jmp
adc
dec
adc
sbb
add
mov
and
or
mov
lods
sbb
add
inc
sbb
daa
and
pop
sbb
adc
push
es
lock
xor
xor
or
dec
cdq
test
bound
pop
push
pop
dec
std
cmp
movs
sbb
or
pop
xchg
ins
adc
cmp
pop
fs
or
addr16
lock
into
cdq
pop
arpl
clts
cmp
xor
add
mov
push
inc
and
xor
popw
lods
add
clc
adc
pusha
call
dec
dec
mov
daa
or
sub
cmp
or
mov
add
jne
cwde
cmp
pop
ja
push
sbb
in
fcmovne
jo
push
loopne
jl
xor
cs
(bad)
cmp
mov
lock
ds
sub
mov
int3
or
xchg
scas
ins
dec
push
and
sbb
mov
int3
clc
mov
sbb
inc
mov
daa
outs
pusha
sub
push
push
das
inc
aas
pusha
push
pop
adc
adc
lods
xchg
test
arpl
sub
bound
sbb
push
push
xor
pushf
inc
or
lahf
and
lods
arpl
mov
clc
cwde
or
lods
adc
or
jo
fcom
or
sbb
gs
inc
cld
ss
cs
xor
(bad)
or
sbb
call
aam
cld
adc
or
jp
and
(bad)
(bad)
push
mov
or
sbb
test
add
ret
cmp
bound
fcomip
sti
push
arpl
or
push
outs
mov
and
push
cmp
std
dec
and
and
sbb
or
pop
fbstp
push
cmp
pop
pushf
or
jle
or
mov
cmp
ror
call
lods
hlt
les
outs
aaa
or
cmp
ins
or
adc
adc
jne
xchg
aam
test
push
pop
push
out
or
lods
jmp
add
add
pop
xchg
lock
push
repnz
arpl
fwait
mov
test
dec
stos
push
sub
aaa
pop
add
jecxz
inc
xchg
push
sub
or
pop
push
xor
xor
sbb
jg
pop
push
sub
mov
pop
jg
xchg
jp
pop
aas
or
outs
or
test
lea
or
sub
pushf
test
sbb
xor
dec
push
push
mov
xor
push
mov
push
pmaxsw
adc
and
inc
cmp
push
nop
xor
cmp
xchg
push
rcr
mov
aas
mov
jns
adc
mov
enter
push
retf
xchg
jbe
movs
jecxz
ret
add
pop
sub
gs
jbe
adc
cs
hlt
retf
sub
or
inc
cdq
cmp
push
and
dec
jb
add
shl
add
iret
icebp
xchg
pushf
xchg
pop
lock
xlat
aad
xchg
hlt
pop
sub
add
lock
xchg
and
bound
out
jg
sbb
xor
and
sub
cld
or
loope
xor
xchg
mov
mov
sub
pop
and
or
and
push
sbb
xchg
push
add
adc
sub
das
into
psrlq
cmp
dec
cmp
sar
xor
inc
pop
in
mov
and
or
sub
inc
enter
pop
sub
aaa
add
scas
icebp
pop
or
add
mov
xchg
jge
test
fnstcw
adc
or
pop
push
xor
push
stos
xchg
push
jge
sub
sub
xchg
push
retf
out
cmps
lock
aas
inc
pop
sbb
inc
xchg
(bad)
fmul
lods
clc
push
loope
sbb
test
or
xor
or
or
pop
retf
adc
xor
and
or
inc
lods
cdq
std
call
dec
xor
jbe
pop
and
sbb
sbb
adc
and
pop
push
fisttp
add
loopne
loope
enter
(bad)
mov
pop
xchg
test
push
rol
test
inc
or
pop
pop
adc
add
and
sbb
and
sub
push
or
push
xchg
(bad)
out
es
inc
adc
out
push
adc
adc
or
rcl
inc
xor
loopne
cmp
pop
adc
dec
mov
sub
mov
sahf
enter
fisubr
sbb
sub
cmp
mov
and
add
test
test
xor
cld
xchg
rcr
xor
imul
imul
ds
jg
cs
jno
pop
sub
cmp
inc
das
sub
sbb
cmp
call
inc
pop
push
daa
pusha
sub
pop
dec
xchg
addr16
mov
das
ss
ret
and
inc
push
inc
add
push
sub
fist
sub
dec
sub
inc
pop
outs
cmp
fiadd
dec
shr
add
(bad)
jg
and
cmp
sub
enter
xor
xor
inc
das
mov
(bad)
dec
adc
es
imul
xchg
bound
inc
add
mov
push
jno
sub
adc
or
call
sub
jle
adc
pop
jnp
jns
jp
xor
jl
das
add
ds
das
xor
dec
xor
add
das
fs
add
mov
ficom
push
call
daa
arpl
xor
push
dec
xchg
scas
gs
pusha
inc
dec
xor
push
js
xchg
inc
dec
push
xor
addr16
push
je
jle
inc
jae
adc
sbb
(bad)
mov
adc
and
xor
ss
dec
and
inc
cmp
and
lods
mov
inc
sub
ds
mov
sub
adc
notrack
sub
pop
xor
and
cmp
mov
inc
push
dec
adc
xor
jnp
xor
inc
inc
dec
clc
(bad)
(bad)
call
aam
aas
mov
inc
cmps
add
ins
pop
inc
addr16
lahf
jne
push
sub
js
(bad)
fld
fwait
inc
mov
loope
jmp
call
fnstcw
cmp
jnp
jmp
sbb
mov
das
cmp
aaa
xchg
rol
ja
sbb
inc
pusha
pusha
jb
cmp
aaa
cld
out
mov
lock
lock
add
and
pop
lock
add
xchg
lock
sub
pop
lock
push
ins
sahf
pop
cmps
push
dec
cmp
and
and
das
mov
add
sbb
sub
pop
push
dec
dec
idiv
adc
or
sub
in
das
mov
mov
inc
mov
imul
xor
ret
clc
and
push
xchg
imul
mov
mov
jo
xchg
aaa
xchg
xchg
mov
inc
pop
bound
adc
push
das
test
sbb
jbe
in
call
ficom
loop
cli
xor
sbb
and
xor
and
ins
ret
xor
xor
pop
adc
xor
shl
push
sbb
inc
and
das
sbb
sbb
sub
sbb
fsubr
xor
ins
xor
and
idiv
pusha
cmp
sbb
and
test
add
call
or
in
lds
and
sub
xlat
cmp
adc
cmp
in
mov
and
sbb
xor
xor
xor
inc
add
push
mov
adc
push
aaa
adc
es
sbb
add
fist
out
jp
and
push
push
and
mov
test
cmp
and
mov
daa
mov
sub
mov
jno
sub
lods
es
loop
cwde
pop
push
sub
push
mov
mov
or
add
or
or
cmp
fidiv
add
addps
cmp
or
or
sub
ficom
and
daa
cmps
daa
sub
mov
sbb
push
and
or
push
push
int3
ins
xor
mov
clc
sub
push
and
mov
aam
or
and
mov
inc
leave
add
adc
lock
les
out
lea
jbe
or
jne
dec
mov
add
or
jl
ja
add
push
or
shl
shl
or
or
or
sbb
cmp
das
cmp
mov
lock
subps
clc
adc
mov
sbb
pop
mov
adc
mov
add
sti
test
add
sub
mov
mov
push
push
and
add
sbb
or
or
repz
sbb
dec
inc
sbb
lock
ret
fwait
ins
sub
test
fs
xor
fcomi
mov
js
mov
inc
dec
mov
std
mov
pop
hlt
sbb
or
adc
jg
and
int3
sbb
or
in
or
loopne
jno
js
inc
sbb
pop
in
sbb
mov
jbe
lock
or
or
inc
sub
sub
bound
add
pushf
es
xchg
sub
test
nop
add
shl
and
dec
les
sub
add
add
xor
rol
sbb
push
xor
add
fiadd
dec
or
or
sbb
adc
dec
loope
cmp
add
jbe
add
cli
lock
add
mov
je
sbb
push
ret
mov
and
and
inc
lds
pusha
jns
call
add
dec
or
pop
adc
in
outs
test
mov
or
push
in
jl
jo
rol
sub
(bad)
push
jae
add
mov
cmp
fild
pop
and
sub
pushf
or
cmc
inc
or
in
adc
lock
jge
add
adc
adc
and
pusha
inc
adc
adc
jle
lods
adc
xor
inc
adc
aaa
sbb
cmp
or
lds
lock
adc
test
or
push
stc
mov
pusha
aas
xor
fcom
out
or
in
dec
or
mov
and
inc
or
xor
int
jne
stos
jmp
inc
pop
lods
adc
jle
cmp
xor
jge
aaa
or
or
add
add
dec
or
add
and
inc
adc
adc
dec
mov
out
add
xor
mov
xchg
lock
jl
ror
out
sti
push
jge
mov
push
adc
add
pop
lock
adc
or
adc
cwde
fisub
jo
aas
jecxz
mov
push
inc
lock
fsub
mov
fdivr
or
daa
addr16
addr16
or
adc
and
pop
pusha
popa
sbb
int
fdiv
sub
jbe
sub
fisttp
sbb
and
adc
imul
dec
add
pop
or
lods
mov
pop
adc
add
xchg
push
dec
add
or
sub
adc
cmps
sbb
mov
or
sub
test
or
test
pusha
sbb
mov
sbb
mov
mov
add
sbb
imul
add
push
ins
add
prefetch
cmp
push
or
jbe
sub
adc
mov
or
push
push
cmps
xlat
out
add
inc
inc
xor
popa
adc
sub
adc
add
sub
adc
add
shl
push
inc
repz
adc
mov
stos
push
wbinvd
or
inc
mov
and
mov
ins
and
or
add
or
(bad)
fstp
and
sahf
adc
in
ins
fucomi
or
adc
adc
sub
fwait
lock
and
xchg
jnp
or
out
std
sub
fs
and
aaa
and
mov
lea
stos
sbb
nop
ins
outs
retf
add
xor
xor
or
cs
adc
and
sbb
cmp
adc
adc
adc
fwait
ins
dec
pop
mov
rol
jne
movs
shl
dec
call
fst
or
sbb
and
pop
sbb
push
imul
xor
adc
sbb
xchg
sbb
mov
sub
stos
imul
popa
cmp
int3
lds
fxch
xor
pop
add
adc
adc
or
lahf
push
lock
push
lods
or
or
xlat
ret
(bad)
or
adc
mov
sub
lds
or
pop
push
popa
pop
add
or
sub
mov
and
adc
mov
sbb
or
pushf
and
fmul
add
sbb
xchg
imul
or
adc
xor
pop
cmp
add
sbb
mov
cmp
lahf
and
imul
fdiv
test
lea
sbb
adc
lods
sbb
xlat
mov
icebp
or
xor
mov
fild
xchg
pop
sbb
push
adc
adc
ret
mov
and
fild
push
or
adc
adc
inc
lock
das
in
shl
adc
ins
xlat
or
sbb
cdq
int
test
das
inc
or
add
and
add
add
add
and
cmps
adc
sbb
adc
imul
and
loopne
or
or
pop
and
mov
or
mov
imul
int
push
and
or
test
and
sbb
xor
fucom
stos
sub
retf
lea
add
test
out
adc
or
add
or
leave
inc
add
in
or
pop
pusha
das
and
jns
mov
dec
mov
jmp
cwde
pop
adc
icebp
xor
cmps
adc
adc
popa
shl
or
jmp
imul
add
inc
mov
add
mov
adc
bound
test
cwde
add
imul
adc
or
mov
scas
mov
ret
in
and
rol
inc
adc
adc
test
mov
dec
sbb
push
adc
xchg
adc
sub
or
inc
adc
bound
adc
rcr
loopne
xchg
test
mov
adc
jbe
sub
popa
les
or
jnp
pusha
pop
sub
sbb
inc
xor
or
sbb
or
jg
push
fsub
std
or
push
and
inc
cmp
or
cmp
pop
aad
jp
add
or
or
mov
sbb
in
mov
imul
adc
and
pop
or
adc
and
ror
and
inc
mov
adc
sbb
hlt
xor
rcl
jmp
mov
fldenv
fcom
dec
sbb
movs
dec
add
sbb
imul
ret
js
arpl
rol
and
fst
add
xor
sub
xchg
sbb
cmp
das
adc
adc
mov
adc
movs
xor
push
loopne
xchg
adc
or
push
adc
mov
and
sbb
arpl
sbb
(bad)
in
jno
and
(bad)
scas
nop
retf
mov
cmp
daa
fwait
xor
sub
sbb
ja
sub
xchg
cmps
dec
lea
retf
push
adc
mov
dec
or
aaa
test
inc
and
dec
or
jmp
retf
and
xchg
or
sbb
sub
ins
pop
test
push
xor
jge
inc
xchg
or
fnsave
or
or
push
test
and
pop
movs
push
imul
jae
xor
test
shl
fcom
and
inc
adc
add
imul
push
imul
loopne
jmp
sub
cmp
xchg
mov
or
or
sub
xor
and
cmp
pusha
or
loopne
add
adc
and
or
neg
and
or
sbb
or
nop
add
cmp
jbe
sbb
add
push
dec
mov
mov
sbb
adc
cmp
outs
xlat
add
and
cmp
dec
jge
xor
add
daa
fidiv
sbb
and
jnp
mov
daa
sbb
adc
push
movs
mov
and
and
sbb
cwde
dec
mov
push
cwde
sbb
add
daa
imul
cmps
push
pop
adc
ins
ret
mov
adc
xor
add
cmp
or
add
fsub
sahf
les
or
dec
mov
push
cs
dec
data16
inc
sub
js
add
fwait
inc
jnp
inc
and
sub
xor
xor
or
sbb
pop
or
mov
sbb
cmp
retf
loopne
stos
loopne
ins
jae
and
sub
popa
mov
(bad)
loopne
add
data16
fxch
cld
scas
scas
sub
or
sub
sbb
and
xor
fistp
inc
sbb
lods
dec
add
pusha
neg
addr16
adc
xor
sbb
sub
(bad)
out
bound
or
adc
xchg
push
cmp
or
cmp
xor
and
dec
or
sbb
lods
sbb
cmp
jo
push
int
fs
shl
fld
dec
dec
adc
xor
popf
fld
sub
or
lock
add
or
xchg
shr
pushf
inc
rcr
push
test
inc
fld
daa
dec
jbe
mov
push
add
add
cdq
adc
add
test
rol
mov
gs
out
daa
movs
push
pop
rol
or
add
mov
push
dec
sti
sti
outs
fwait
jle
push
cmp
adc
cmovle
add
movs
movs
inc
cdq
js
add
mov
sub
ins
add
jl
clc
pop
sbb
dec
in
pop
ror
or
and
or
sbb
jb
fild
addr16
fld
adc
add
out
inc
add
mov
imul
mov
mov
ins
add
mov
dec
rcr
add
xlat
les
push
rcr
lahf
jb
jge
fmul
das
test
add
add
push
call
inc
ss
pop
xchg
das
push
and
xlat
mov
add
push
dec
inc
add
add
push
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
pop
add
add
