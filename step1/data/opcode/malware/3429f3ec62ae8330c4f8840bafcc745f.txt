hlt
cmp
xchg
sbb
aaa
push
add
push
add
add
mov
add
inc
add
push
push
je
imul
sub
or
xor
add
mov
ss
and
fdiv
clc
adc
pop
inc
xchg
(bad)
inc
push
dec
bound
arpl
dec
rol
rol
mov
(bad)
cmp
fs
inc
xor
fs
inc
push
and
sbb
inc
push
sbb
pop
adc
push
sbb
or
sbb
add
cld
shl
daa
clc
shl
lock
inc
push
sbb
call
jb
shl
(bad)
ins
shl
xchg
daa
push
loope
or
je
push
add
mov
push
and
inc
and
add
mov
and
mov
sbb
nop
inc
mov
enter
cmp
(bad)
rol
sar
shl
cmp
jne
mov
iret
in
push
add
jne
xor
pop
mov
ja
mov
mov
ret
lea
mov
mov
mov
inc
cmp
jne
mov
mov
mov
sub
ret
push
mov
in
aas
fcomp
mov
dec
call
push
mov
mov
add
or
adc
add
mov
sbb
in
ins
mov
mov
adc
ret
imul
fild
push
push
mov
mov
mov
mov
add
imul
mov
rol
push
or
push
jne
adc
outs
int
ins
add
xchg
add
add
jmp
push
jmp
fnstenv
jne
sbb
mov
cmp
jne
mov
not
fisttp
lahf
add
pop
pop
pop
mov
mov
pop
lea
clc
mov
dec
fcmovnu
fstp
mov
add
call
ja
adc
ins
jae
sbb
sub
or
in
jg
ins
inc
fs
or
mov
add
std
mov
std
sub
jmp
adc
mov
sub
mov
in
fnstsw
mov
jmp
popf
ins
mov
sbb
sti
jne
or
mul
mov
cmp
mov
sub
in
(bad)
(bad)
js
out
dec
push
popa
push
mov
test
je
mov
mov
int3
inc
arpl
and
jecxz
add
outs
clc
mov
shl
arpl
fnstenv
add
(bad)
jle
push
dec
push
fwait
sbb
jne
js
and
nop
sub
test
push
mov
(bad)
loop
(bad)
mov
mov
mov
add
mov
inc
jecxz
adc
pop
jae
cmp
ja
mov
add
ja
cmp
mov
adc
jbe
add
aaa
pop
test
or
add
(bad)
mul
fild
mov
add
adc
in
fcmovnu
cmp
push
mov
xlat
jns
sub
and
adc
mov
test
mov
mov
and
or
ret
pop
loop
in
scas
(bad)
(bad)
cmp
or
lds
outs
(bad)
sbb
mov
jle
add
(bad)
cs
mov
cmp
mov
push
in
jl
push
push
adc
sti
push
push
sar
jmp
ss
mov
jecxz
cmp
mov
mov
and
(bad)
ins
xchg
or
enter
inc
test
not
jae
mov
out
jae
dec
cwde
ins
(bad)
sbb
inc
push
shl
add
mov
lock
out
sar
dec
xchg
outs
imul
dec
mov
push
xor
mov
jbe
push
mov
inc
ror
dec
ds
test
(bad)
add
cmp
scas
retf
ins
sub
adc
push
adc
popf
(bad)
cvtdq2ps
mov
ds
add
mov
push
jne
add
mov
jle
test
mov
inc
push
jg
sbb
xor
sti
xor
mov
(bad)
enter
mov
pusha
mov
ins
mov
in
imul
dec
lahf
inc
out
add
xor
test
dec
adc
clc
adc
dec
mov
cmc
test
dec
sbb
xlat
cmp
inc
js
(bad)
cmp
sub
inc
dec
mov
es
push
adc
dec
fdiv
inc
(bad)
jg
mov
xor
lea
clc
popf
mov
fidiv
mov
jae
ror
add
mov
fisttp
test
je
mov
mov
ficomp
mov
or
adc
cmp
cld
jmp
pop
lea
in
fwait
push
push
push
mov
push
mov
enter
lock
shl
mov
xchg
pusha
cmp
sbb
fsubrp
fs
sbb
std
fiadd
mov
xor
mov
ja
xlat
cmp
add
mov
ret
or
add
xor
neg
pop
mov
push
ret
scas
jge
aaa
fbld
fsubr
in
sub
or
test
imul
sub
(bad)
add
sbb
adc
add
rol
cmp
mov
sbb
xchg
and
adc
int
push
jne
fstp
sbb
loopne
pop
mov
push
cmp
adc
dec
mov
lods
jg
ins
pop
mov
push
pop
cmp
rol
stc
add
jnp
fstp
int3
mov
jmp
push
fst
adc
mov
mov
or
xor
dec
in
das
loope
js
jb
ss
retf
adc
jle
jne
test
(bad)
std
sub
retf
add
sbb
mov
jl
mov
mov
mov
add
or
sbb
add
inc
out
add
push
loop
jecxz
or
cli
fwait
jmp
adc
cmp
or
push
or
xchg
mov
sub
or
dec
or
rol
and
pop
inc
sbb
xor
jl
or
fistp
sub
xor
test
out
pop
add
inc
sbb
or
(bad)
cmp
sbb
iret
jnp
add
push
arpl
out
movs
add
test
pop
add
fist
push
addr16
arpl
dec
or
inc
cmp
in
ins
jmp
add
and
stos
cmc
cmps
and
aaa
xchg
(bad)
jg
clc
sub
sbb
fld
add
push
ror
call
dec
mov
test
fimul
pop
jb
bound
jne
mov
cmps
ret
lea
rcr
or
or
push
mov
xchg
add
pop
retf
out
mov
popa
push
add
sub
jo
(bad)
fs
test
arpl
cli
jb
jecxz
fs
hlt
rcl
or
pop
push
pop
sahf
sbb
cmp
inc
or
jo
ss
jl
fdivp
mul
or
test
pop
mov
scas
fld
sub
inc
sbb
push
data16
or
arpl
aaa
jle
mov
enter
mov
xor
push
test
iret
push
and
sbb
pusha
or
or
xor
sbb
or
scas
lock
push
mov
cmp
xor
inc
mov
or
add
dec
mov
push
sbb
jno
adc
add
jo
sub
mov
out
or
adc
aam
mov
dec
push
xor
mov
xchg
dec
xchg
shr
mov
dec
dec
pushf
inc
or
aad
imul
hlt
rcl
hlt
mov
pop
mov
adc
jne
arpl
jne
sar
ins
mov
cmps
push
add
jge
popa
mov
fidivr
or
pop
jg
pop
xor
adc
lods
pop
jmp
adc
or
dec
or
loopne
mov
cvtdq2ps
jne
movs
sub
pop
ret
jo
jge
mov
jp
inc
cmp
inc
add
lock
jp
and
dec
hlt
test
(bad)
scas
mov
xchg
push
rol
(bad)
xchg
mov
sbb
jne
cmp
lods
xor
dec
pop
or
jmp
int
(bad)
mov
xor
or
sbb
jmp
or
test
inc
loopne
xor
fld
inc
gs
add
mov
jg
sub
mov
xlat
push
xor
scas
inc
push
shl
sub
sub
adc
hlt
xchg
add
cmp
inc
(bad)
mov
dec
mov
or
enter
jmp
sbb
bound
sbb
sbb
pop
pop
pushf
xor
cdq
sbb
rcl
mov
xchg
jo
mov
and
mov
fimul
scas
(bad)
mov
xchg
call
test
xlat
cmp
cwde
adc
sub
test
in
cmp
or
pop
dec
sub
ret
mov
rcl
sbb
inc
mov
pop
or
cmp
cli
xchg
mul
jmp
or
add
ret
pop
push
xor
xor
sub
popa
loope
cmp
into
jp
push
push
pusha
sbb
mov
movs
xor
push
ret
sbb
lock
ret
jb
sti
or
or
jmp
mov
pop
das
inc
cmp
jl
or
or
xor
ror
dec
nop
sub
sbb
in
and
imul
mov
mov
sub
jge
test
jno
(bad)
cmp
comiss
arpl
fdiv
cmp
push
jb
add
mov
jb
imul
push
sub
lock
inc
push
test
inc
rol
dec
icebp
add
mov
inc
fild
popf
sub
push
int
cld
xor
test
aaa
push
sbb
adc
jbe
jl
loope
or
addr16
or
xor
add
add
sbb
lock
ins
pop
leave
sbb
mov
ja
sahf
shl
mov
mov
mov
ret
out
test
aas
pop
std
jp
(bad)
loop
cmp
or
sub
icebp
loope
jmp
jne
xchg
sbb
adc
iret
jns
fdivr
jbe
adc
sub
ret
jae
nop
sbb
pop
outs
adc
xchg
xor
adc
adc
cmp
push
aaa
add
imul
nop
sbb
pop
popa
sub
mov
sbb
adc
fsubr
add
retf
xchg
and
pop
cmp
cdq
jge
add
xchg
and
inc
xor
call
mov
jl
or
push
adc
xor
pop
xchg
inc
call
add
pop
bound
in
leave
je
mov
mov
neg
push
mov
daa
xor
or
sbb
in
neg
(bad)
sbb
jne
adc
add
adc
jns
mov
cdq
out
xchg
add
scas
sub
int3
outs
jg
cmp
pop
cmp
xor
stos
or
lahf
sbb
sbb
mov
mov
out
or
(bad)
fiadd
adc
loop
xor
mov
add
aad
dec
lds
out
push
or
nop
fist
fdivr
in
lahf
out
mov
mov
sar
test
cmp
div
je
dec
js
rep
mov
and
rep
push
adc
imul
je
cld
lea
sbb
std
sbb
add
pop
jne
outs
mov
or
les
mov
test
jbe
mov
lock
cmp
jg
jnp
add
out
aaa
(bad)
xor
mov
jmp
cmp
xor
xor
cmp
sub
call
push
sbb
pop
ja
jne
(bad)
jne
aad
xor
fisttp
push
aaa
cmp
std
daa
xchg
xor
mov
mov
inc
gs
fs
or
pusha
loope
sub
addr16
stos
(bad)
sub
std
(bad)
cmps
sub
test
jne
push
push
lods
fsub
push
loopne
enter
icebp
std
sub
hlt
stc
shl
push
dec
shl
push
xchg
add
jmp
push
or
cmp
inc
call
icebp
imul
add
repnz
xor
mov
pop
imul
jecxz
or
mov
paddsb
mov
fnstcw
fwait
or
ins
frndint
fldcw
cmps
inc
push
mov
inc
adc
movs
xor
lds
adc
mov
xchg
scas
push
cmp
pop
imul
ins
jne
sub
fist
(bad)
jae
jae
out
call
lock
inc
mov
inc
dec
shl
jne
rol
jnp
pop
dec
sete
fdiv
aad
xlat
cmp
sbb
jno
push
xchg
xor
inc
fadd
adc
sub
dec
je
sub
icebp
sbb
mov
mov
add
inc
sbb
sub
movs
xchg
inc
add
fwait
and
xor
cmp
fld
push
retf
ret
fild
push
push
lea
push
or
call
mov
add
xlat
jne
dec
add
jbe
in
ja
and
out
sub
mov
lods
fstp
lods
retf
pop
(bad)
fmul
xchg
ficom
out
(bad)
not
cmp
jae
cmp
push
sbb
jmp
push
dec
sub
ins
out
jg
cmp
jbe
cmp
or
pop
js
sbb
iret
xor
je
lods
ins
lds
push
adc
mov
xor
cmc
rol
fnstenv
and
adc
test
mov
test
pop
sbb
mov
or
shl
out
sub
mov
sbb
lea
lea
in
mov
mov
data16
pop
inc
sbb
fisub
xor
xor
dec
pop
loopne
(bad)
pop
mov
ja
lea
pop
or
mov
mov
dec
data16
jmp
sar
pop
mov
je
cmp
in
jne
loopne
pop
adc
or
leave
test
fld
sbb
sbb
or
sbb
icebp
mov
rol
fnstenv
and
inc
pop
xor
add
push
push
out
call
in
adc
rcl
div
fwait
jnp
jae
or
adc
or
jnp
lods
pop
stos
cld
sub
out
cld
je
push
gs
mov
or
lahf
movs
adc
ret
es
arpl
push
fs
fs
sbb
pusha
rcl
push
repnz
lock
(bad)
jb
add
push
or
add
ja
arpl
into
or
sbb
mov
sbb
scas
dec
xchg
adc
sbb
mov
(bad)
mov
shl
add
out
xor
rep
mov
stos
pop
(bad)
fld
adc
pop
cli
xchg
add
or
loop
aam
xor
aas
clc
cdq
sbb
sub
movs
arpl
lods
lea
or
data16
scas
aaa
int
jmp
xchg
es
pop
add
hlt
(bad)
or
inc
sbb
(bad)
mov
jnp
xor
mov
jo
xchg
mov
xchg
push
or
out
add
mov
aaa
adc
lods
cmps
aaa
inc
dec
or
pop
xor
cmp
inc
je
popf
(bad)
fmul
ins
cmp
imul
cli
and
jmp
mov
lock
mov
mov
jbe
mov
and
ret
out
or
in
xchg
or
push
jmp
push
mov
push
inc
sub
fistp
mov
sti
sub
je
and
mov
cld
js
pop
pop
je
xor
fst
dec
inc
test
sub
imul
clc
ja
lea
add
inc
mov
ja
sub
dec
sub
dec
push
neg
jle
js
pop
sub
jmp
inc
and
mov
pop
in
and
sub
lods
(bad)
in
jbe
jb
jmp
dec
xor
fadd
xchg
adc
or
sbb
aad
xor
mov
pop
rcl
jmp
sbb
lods
sbb
dec
ficom
push
xor
lea
in
jg
lea
fld
pop
call
setnp
in
je
pop
lds
add
pop
iret
adc
mov
dec
ret
inc
inc
in
xchg
out
xor
sbb
add
or
stos
test
xlat
fldz
shl
push
xor
aas
mov
repnz
repnz
or
or
ret
paddb
daa
mov
adc
mov
xchg
lahf
sub
sbb
add
mov
and
movs
aam
pusha
xor
xchg
sub
out
inc
sub
pop
jecxz
add
leave
sbb
inc
cs
jbe
imul
cmp
mov
(bad)
mov
jg
fwait
bound
cmp
xlat
fadd
lock
(bad)
lods
outs
xor
xchg
push
or
push
push
(bad)
(bad)
(bad)
dec
into
sbb
ror
mov
push
pop
test
enter
mov
inc
cmp
and
daa
(bad)
(bad)
(bad)
dec
test
xchg
clc
js
aas
sbb
pop
(bad)
mov
addr16
leave
repnz
(bad)
(bad)
dec
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
dec
js
(bad)
(bad)
mov
fwait
lds
stos
mov
cmp
or
mov
pop
out
sub
(bad)
call
inc
imul
(bad)
div
jl
xor
cmp
call
mov
lea
stos
push
inc
mov
push
sbb
sar
repnz
test
(bad)
call
or
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
(bad)
(bad)
(bad)
push
jmp
dec
jp
iret
inc
bound
ds
push
cmps
scas
mov
pop
or
add
in
xchg
cmp
xor
arpl
lds
mov
mov
mov
popa
mov
and
(bad)
(bad)
(bad)
jmp
repz
mov
sub
and
and
outs
bound
xor
test
enter
push
xchg
xor
and
add
and
iret
cmc
or
add
xchg
and
clc
or
jnp
xor
nop
shr
enter
pop
mov
or
push
mov
mov
loop
hlt
push
xor
add
inc
xor
add
mov
adc
mov
shr
data16
les
or
mov
(bad)
mov
push
inc
push
inc
pop
inc
outs
jb
popa
outs
fs
inc
gs
jo
pop
push
push
dec
cli
icebp
pop
cld
add
push
dec
popa
(bad)
push
popa
ins
jne
mov
jecxz
retf
hlt
sub
leave
xchg
jo
stc
mov
inc
rep
or
and
loope
sub
in
pop
sbb
sar
mov
and
test
sub
aad
rcl
and
call
pop
clc
(bad)
loopne
cmp
mov
cmp
bound
mov
inc
or
loop
pop
fsubr
into
pop
fcomp
add
sbb
in
cmp
je
outs
loop
jmp
adc
push
mov
xchg
out
in
mov
nop
sbb
jecxz
mov
outs
in
je
mov
mov
shl
xlat
les
mov
and
lock
aaa
push
rol
mov
or
push
out
push
popa
add
xchg
dec
inc
jle
hlt
or
jg
push
add
repnz
imul
fsubr
pop
xchg
sub
inc
or
stos
push
out
sub
inc
fmul
out
out
inc
jmp
out
cmp
add
xor
xlat
mov
mov
rol
xor
xor
sbb
cmp
loope
jl
call
pop
pop
loop
inc
jmp
mov
mov
mov
inc
add
arpl
inc
or
or
pop
lock
or
push
and
xor
aas
mov
push
pop
pop
jo
sbb
inc
test
dec
adc
push
clc
stos
or
fistp
fs
push
push
adc
pop
pop
ja
mov
int3
(bad)
mov
call
mov
push
xor
in
fisub
addr16
add
add
pop
cld
or
mov
ficomp
mov
cmp
add
add
jne
movsx
inc
inc
jmp
jb
popa
out
add
sbb
dec
into
ss
dec
jb
shl
cmp
int3
ficomp
pop
jb
or
inc
add
push
out
cs
ficom
fadd
neg
rcr
(bad)
adc
outs
mov
mov
push
or
and
mov
mov
mov
outs
test
cmp
aaa
pop
loope
lock
and
ja
push
loopne
add
push
shr
add
stos
xor
fs
sub
mov
push
lods
add
mov
fnsave
jo
popa
add
rcl
fistp
xchg
leave
push
fcomp
inc
inc
push
sti
ins
mov
pop
add
inc
add
sub
xchg
push
jmp
dec
arpl
adc
ret
or
and
mov
or
dec
lock
dec
inc
add
mov
push
xchg
dec
call
mov
jg
push
and
fsubr
pop
push
push
push
movs
loopne
push
push
push
inc
pop
jnp
push
enter
and
iret
sahf
int
mov
test
mov
call
mov
add
or
adc
dec
push
retf
cmp
fs
pop
or
jg
mov
loop
ins
rcr
test
leave
ret
sub
ret
jecxz
pop
add
cmp
cmp
push
sub
hlt
ret
sub
je
pusha
add
fbstp
jb
shr
cmp
cmp
outs
fld
and
add
cmp
cmp
test
jmp
mov
jmp
mov
es
jmp
mov
jmp
bndldx
cmc
lea
in
pop
test
fucom
mov
out
fpatan
mov
cmp
xor
enter
xchg
mov
sbb
(bad)
aas
je
in
xor
sub
xor
inc
jmp
adc
and
mov
cli
push
call
or
xchg
and
(bad)
jge
nop
mov
or
inc
sub
cwde
div
lds
xor
(bad)
push
xor
or
in
je
xor
mov
mov
or
sub
and
add
jns
in
pop
js
cmp
or
add
adc
xchg
sub
or
dec
rol
pop
and
stos
cmp
jle
dec
mov
inc
fiadd
les
and
dec
jmp
adc
pusha
idiv
shl
add
xor
xor
in
push
jl
mov
outs
js
or
outs
not
ds
jle
add
inc
mov
js
repnz
jg
mov
sbb
pop
or
dec
mov
sub
int3
std
jae
inc
sbb
add
push
test
mov
outs
dec
inc
test
mov
add
sbb
dec
pop
lods
cmp
or
jmp
pop
mov
daa
add
push
sbb
les
xchg
or
call
push
stos
pop
sbb
add
(bad)
idiv
add
enter
push
adc
sti
cmp
(bad)
fbld
mov
inc
push
fisttp
dec
cli
out
jp
es
add
fidivr
pop
sbb
push
add
daa
sub
or
leave
pop
push
inc
mov
push
pop
inc
lock
sbb
repnz
adc
cmp
sbb
or
ds
push
push
lds
les
adc
sbb
jl
scas
add
or
add
lods
pop
add
in
sbb
mov
inc
lock
sub
push
cmp
adc
push
ins
test
aad
jne
movs
adc
pop
rcr
data16
push
not
xor
add
(bad)
sub
adc
mov
xchg
inc
adc
inc
jmp
adc
clc
fistp
bound
push
mov
xor
jne
loop
pop
or
sub
js
and
push
mov
and
int3
rcl
dec
xor
or
sbb
pop
out
jmp
retf
lods
sub
dec
jl
inc
mov
jl
clc
iret
pop
xchg
mov
adc
sbb
add
xor
fs
or
cdq
dec
jne
mov
and
inc
jg
pop
mov
lock
inc
jo
js
pop
or
in
push
dec
bound
jmp
cmp
xchg
adc
inc
or
jle
retf
test
push
je
(bad)
ror
ins
loopne
push
mov
add
adc
pop
mov
jb
adc
sahf
rcl
sbb
xchg
stc
mov
dec
or
push
pushf
out
mov
ret
and
sub
lock
xor
(bad)
or
ins
mov
inc
jno
add
cld
ror
cmp
pop
loop
jnp
inc
jmp
lea
cmp
sub
inc
cmp
and
icebp
mov
into
(bad)
mov
aam
aam
mov
fisttp
shr
push
dec
xor
das
or
add
push
jl
mov
aam
fist
mov
dec
mov
out
xor
push
cmp
arpl
mov
lahf
add
je
add
std
in
ins
cmp
rcr
shr
cs
jne
sti
fsubr
sub
and
pop
fdecstp
xlat
fadd
xor
jmp
add
add
mov
cmp
lock
jmp
repnz
jne
not
sub
rcr
push
add
mov
outs
pusha
test
call
aas
(bad)
dec
into
std
hlt
test
inc
push
cld
add
fild
loopne
mov
adc
call
add
mov
adc
push
or
ins
(bad)
jno
sub
ror
popa
xor
add
sahf
mov
dec
mov
push
mov
in
rep
dec
clc
inc
jo
and
sti
mov
jmp
out
loopne
lods
or
call
cmp
sti
xor
or
inc
cld
cmp
adc
mov
push
in
(bad)
ins
aad
cmp
mov
jmp
mov
mov
push
cmps
inc
pushf
sbb
mov
push
into
or
(bad)
out
xor
pop
call
and
jmp
inc
add
lock
sbb
je
push
inc
outs
in
nop
ss
adc
pop
or
es
dec
cmp
push
pop
popf
jns
mov
jecxz
je
sub
mov
sbb
cmp
jge
sub
sar
into
clc
push
test
movs
adc
fnclex
and
nop
jmp
(bad)
adc
jmp
mov
fstp
add
cmp
sbb
push
mov
or
loopne
push
ins
pop
outs
popf
jo
(bad)
mov
sub
sub
adc
push
lods
add
icebp
(bad)
scas
push
adc
mov
into
cli
and
dec
(bad)
xor
call
ss
adc
adc
push
xchg
cmp
mov
test
retf
xchg
cmc
mov
stc
js
dec
cmp
call
(bad)
mov
mov
cmp
and
cmp
je
cmp
fld
jge
cwde
jbe
cvttps2pi
sub
mov
scas
inc
add
out
imul
adc
(bad)
std
add
ja
xor
ins
mov
outs
adc
mov
inc
ss
aad
or
imul
mov
pop
jmp
sbb
lea
mov
iret
pop
jnp
cmp
loopne
add
das
icebp
jmp
push
cs
sub
adc
push
fld
or
pop
mov
(bad)
mov
add
or
scas
sti
lea
jne
mov
jae
enter
pop
test
add
mov
push
cmp
mov
mov
shl
mov
cmp
ins
lods
fs
mov
test
leave
lods
or
das
or
int
mov
shl
rcl
inc
(bad)
mov
xlat
cmp
mov
jb
sub
sbb
inc
loop
add
mov
repz
dec
pop
add
stos
jne
xor
repnz
scas
sub
xor
inc
jnp
dec
daa
add
push
push
pushf
mov
xchg
mov
xchg
xor
jmp
push
mov
jne
(bad)
(bad)
push
movs
mov
push
xchg
les
fsubr
push
sbb
adc
pop
inc
test
loopne
cmps
ss
mov
add
add
xor
xor
push
sub
ret
jmp
sbb
pop
adc
mov
test
pop
sub
outs
push
clc
add
mov
add
and
pop
lea
dec
rdpmc
adc
mov
lods
cmps
sbb
cmp
call
data16
imul
mov
aad
mov
mov
jo
pop
js
pop
imul
ds
add
mov
idiv
inc
add
arpl
dec
je
xchg
div
(bad)
out
data16
fisubr
pop
cld
lea
pop
arpl
mov
pop
(bad)
sub
mov
(bad)
mov
cli
cmps
jg
xor
ss
ret
xor
mov
inc
fnstcw
in
add
jae
adc
add
pop
loop
(bad)
(bad)
fild
dec
lea
add
inc
cmp
test
pop
mov
push
sub
dec
push
sub
pop
fld
sbb
inc
pop
test
test
es
outs
or
hlt
pop
test
gs
gs
xor
cs
ins
lock
call
push
inc
gs
outs
outs
addr16
popa
je
dec
popa
ins
gs
adc
shl
loopne
mov
jecxz
jge
lock
retf
mov
fs
push
mov
inc
cmps
lods
nop
rcr
ins
and
test
mov
bound
popa
inc
rol
sti
cmps
cmc
test
sub
retf
out
mov
cld
fs
addr16
xor
add
sar
imul
clc
not
jecxz
push
push
fimul
or
adc
test
cmp
jge
je
add
out
ja
cmp
pop
or
add
cmp
push
imul
xchg
cmp
jne
or
sbb
xor
sub
push
ret
push
in
fst
add
xor
mov
js
fs
aaa
repz
and
or
add
cwde
push
ret
outs
mov
cli
je
popa
jb
sti
push
arpl
gs
inc
sub
sbb
and
adc
ins
shl
mov
inc
cmp
pop
dec
mov
mov
add
or
mov
ret
mov
xor
cmc
xor
mov
dec
cmp
or
push
mov
jb
add
cmp
cmp
pop
mov
mov
adc
push
cld
xchg
imul
add
adc
aaa
sbb
jmp
stc
and
lahf
add
gs
sbb
cmp
cs
push
mov
push
inc
ins
add
dec
cmp
or
push
xor
dec
xor
mov
bound
add
jns
or
lock
loopne
loopne
out
fld
cmp
or
inc
sub
add
movs
add
inc
lock
and
fmul
hlt
fs
push
lock
xlat
or
repnz
sbb
repz
add
sar
cmp
add
xor
pusha
daa
add
ror
sub
enter
inc
add
in
mov
and
dec
ss
test
loope
xor
cld
mov
push
mov
sub
hlt
inc
mov
ins
pop
bound
pop
mov
ret
fnstsw
cs
sub
add
ret
mov
or
fs
ret
mov
adc
aaa
int3
xchg
cmp
mov
mov
ds
sbb
push
mov
ds
or
cmp
and
iret
or
cs
stos
adc
pop
jnp
shl
push
cwde
aaa
jb
add
inc
sbb
inc
push
and
addr16
pop
sbb
pop
xchg
nop
or
cmp
and
add
cld
rcl
hlt
lock
push
sbb
in
sbb
(bad)
aam
fs
inc
ror
enter
push
(bad)
sar
mov
push
sbb
movs
or
enter
sbb
push
sub
out
xchg
dec
xchg
cmp
dec
and
enter
cmp
or
icebp
repnz
or
enter
div
enter
stc
cli
enter
sti
cld
std
and
loopne
or
enter
in
xor
and
out
xor
and
and
and
rol
rcl
aam
xor
and
(bad)
xlat
xor
and
and
and
rol
ret
les
enter
(bad)
xor
and
and
and
mov
or
enter
mov
xor
and
and
and
xchg
sbb
xor
xchg
and
dec
push
and
rol
adc
push
inc
jae
or
or
inc
add
fcom
xor
add
inc
push
arpl
je
ins
or
pop
and
scas
pop
adc
push
test
dec
gs
jo
push
sbb
dec
nop
fs
fs
or
dec
jne
dec
dec
gs
mov
jns
dec
mov
jbe
dec
pop
pop
or
outs
pop
inc
jb
pop
adc
push
push
sbb
push
or
pop
and
inc
xlat
jo
jo
xchg
stos
in
push
adc
xor
shl
prefetch
in
mov
push
test
sub
dec
inc
inc
imul
outs
nop
add
push
popa
outs
fsub
adc
xchg
push
fdiv
push
outs
jbe
jb
ins
outs
ja
push
arpl
push
and
xor
or
in
pop
add
mov
mov
push
bnd
mov
push
or
sub
sbb
imul
or
inc
and
mov
pop
gs
push
cmp
ss
pop
imul
or
sub
jmp
test
mov
pop
xchg
pop
sub
outs
imul
or
das
or
inc
nop
mov
je
movs
pop
movs
and
jmp
or
xlat
inc
pop
fs
push
retf
add
cmc
(bad)
scas
adc
arpl
ins
popa
repnz
hlt
lea
pusha
push
pusha
push
cs
js
push
jb
ins
gs
mov
push
mov
scas
push
je
arpl
nop
adc
inc
ret
and
inc
adc
outs
mov
push
inc
imul
inc
js
(bad)
push
popa
or
xor
enter
adc
les
fld
popa
outs
fs
sub
xchg
sub
(bad)
retf
fdiv
mov
nop
or
test
cmp
pop
loopne
enter
outs
push
popa
data16
push
mov
adc
xor
push
dec
mov
or
jae
and
sbb
and
and
xor
inc
pop
mov
mov
push
cwde
mov
mov
mov
or
adc
push
mov
aam
sbb
cli
add
mov
xor
shr
cwde
add
xor
sbb
in
or
sub
sqrtps
xchg
or
sub
cmp
dec
stos
pop
loop
(bad)
in
xor
icebp
inc
mov
outs
lock
retf
xor
call
mov
push
sbb
adc
les
out
xchg
and
les
and
shr
loop
mov
cld
aas
mov
test
jle
mov
loop
ds
push
lods
lds
xlat
shl
cmp
jne
dec
dec
daa
jg
mov
adc
pop
dec
dec
scas
push
lea
mov
pop
jg
shr
pop
cmp
shl
pop
push
mov
lock
add
mov
cld
push
push
mov
repz
add
inc
call
ins
sub
mov
inc
rcr
and
add
sar
cdq
xchg
lock
clc
loopne
push
pop
push
nop
nop
(bad)
xchg
push
add
mov
mov
fwait
mov
xchg
js
aam
sub
sahf
adc
daa
sti
das
add
add
retf
mov
mov
inc
ins
push
test
ds
test
push
pop
pop
pop
xor
mov
add
pop
xor
or
xor
jmp
das
mov
and
push
cmp
ja
sub
mov
cmp
or
add
je
inc
test
lahf
not
pop
mov
cmps
adc
psrld
mov
dec
and
fcom
jbe
mov
ins
scas
ror
xor
add
in
lahf
test
sub
add
sbb
pop
jmp
push
or
add
adc
push
mov
inc
dec
sub
pop
xor
mov
add
loope
mov
push
jo
mov
xor
pop
in
xor
fsubr
add
in
add
mov
jl
pop
or
jne
mov
inc
sti
rcr
clc
jge
adc
jmp
aaa
add
jg
mov
cmp
jne
adc
cmp
fstp
pop
hlt
adc
lods
jmp
or
mov
fidivr
adc
mov
push
push
lods
test
dec
pop
mov
arpl
or
jge
dec
or
retf
add
outs
movs
xchg
or
jle
and
stos
or
in
mov
lods
inc
dec
jo
pop
mov
jmp
movs
inc
cmp
je
cmp
jb
cmp
imul
call
ret
xchg
add
pop
imul
daa
mov
cmp
jle
mov
jl
and
je
leave
mov
and
and
mov
and
call
jne
lea
mov
dec
push
add
and
rcr
ins
mov
sbb
adc
div
dec
imul
jp
and
sbb
sub
arpl
jbe
push
jo
lock
outs
sti
dec
fsubr
shl
rol
inc
mov
adc
inc
je
add
stos
jg
retf
je
pop
jne
mov
inc
add
rcr
lahf
xor
and
neg
dec
imul
push
ret
mov
or
rcr
xor
xor
mov
pop
out
cs
mov
push
and
ja
shl
add
xchg
ror
sub
popf
fadd
jbe
cs
or
jbe
mov
popa
xchg
ret
cwde
adc
jmp
or
jns
neg
nop
cli
lahf
or
div
jg
and
nop
ins
data16
push
pop
sar
jecxz
pushf
cdq
add
les
cmp
jbe
mov
or
in
pop
push
pop
mov
leave
and
enter
jmp
mov
in
push
cmc
add
jne
pop
sub
push
jb
or
call
pop
cmp
mov
ins
adc
xchg
mov
fdiv
mov
enter
adc
jmpw
push
dec
mov
mov
cmp
sbb
mov
(bad)
fistp
std
mov
jmp
mov
ss
and
aas
mov
push
inc
je
mov
fucom
xchg
add
adc
dec
cmp
xor
add
adc
mov
fstp
jne
retf
(bad)
adc
pusha
mov
cmp
(bad)
ins
aaa
cmp
mov
and
ret
iret
mov
xchg
pop
mov
ins
pop
sbb
adc
pop
add
ins
sub
mov
lahf
stos
ds
(bad)
imul
dec
inc
test
or
aad
into
push
xlat
mov
ja
add
or
clc
idiv
inc
fwait
push
or
push
push
xchg
or
repnz
loopne
retf
xor
push
push
adc
mov
lahf
je
jle
jge
push
imul
cld
(bad)
in
add
clc
out
cmp
jae
or
or
es
jl
jmp
add
fwait
adc
mul
sub
rol
push
inc
cmp
test
sub
push
lea
fcom
mov
xor
stos
or
jecxz
sbb
or
jge
rcr
jg
(bad)
push
or
inc
mov
stos
xchg
fsub
(bad)
cmp
ret
jle
mov
inc
dec
mov
in
sub
jmp
cmp
jne
pop
pop
mul
cmp
mov
arpl
sub
mov
sub
hlt
mov
inc
repz
call
rol
add
in
jle
cmps
pop
xor
mov
sub
in
push
mov
push
aaa
xchg
jge
outs
aam
cld
pop
arpl
cmp
add
mov
fsub
loopne
jge
in
cwde
inc
jmp
sti
out
outs
ins
sbb
cmp
je
add
or
mov
ins
cmp
add
pop
cmp
shr
call
add
fucomp
xor
mov
fs
sbb
add
jp
dec
inc
dec
out
or
add
mov
(bad)
pop
cmp
or
dec
or
sbb
sbb
add
stos
push
and
mov
or
inc
mov
je
stos
loop
pop
adc
or
push
aad
(bad)
clc
daa
sahf
push
dec
pop
out
outs
test
sub
fimul
sbb
pop
dec
or
ins
add
add
mov
mov
mov
movs
ss
das
pop
ins
or
jb
mov
loope
cmps
add
(bad)
fldcw
mov
fwait
div
mov
inc
push
dec
je
dec
jne
mov
cli
aaa
in
stos
sbb
call
jnp
lahf
(bad)
stos
jecxz
cmp
je
inc
jne
adc
mov
test
clc
or
or
cmp
jbe
mov
pusha
xchg
xchg
test
cwde
pop
add
test
push
mov
imul
or
inc
mov
mov
inc
loop
out
test
inc
shr
imul
add
and
pop
or
and
idiv
mov
sbb
sub
jne
jnp
or
sub
idiv
xor
sbb
cmp
fwait
sub
sub
sub
or
add
sbb
out
imul
mov
stos
test
add
push
mov
jecxz
in
or
or
fistp
or
mov
cmp
test
mov
cmc
or
pop
aad
mov
inc
pop
ins
cld
add
cs
add
in
adc
clc
and
lods
mov
loope
int3
push
aam
frndint
(bad)
cmps
cmp
fld
fstsw
fwait
pop
inc
test
(bad)
in
jmp
popf
jmp
fbstp
lea
mov
ja
fwait
mov
dec
ins
add
lea
add
jmp
cli
xlat
clc
fld
or
push
jge
cmp
hlt
pop
cld
push
add
call
jae
sbb
add
inc
sub
les
inc
adc
inc
cmc
push
pop
in
jmp
adc
xor
pusha
out
jmp
mov
xor
push
jmp
in
scas
or
mov
push
add
dec
sbb
add
adc
mov
rcr
aad
call
rol
pop
aaa
sbb
test
or
jge
ret
mov
and
mov
or
jmp
loopne
jae
dec
add
inc
out
test
in
ins
add
push
sub
or
fidiv
adc
pop
fwait
loopne
mov
mov
sub
shl
jne
dec
sbb
push
(bad)
clc
jmp
mov
add
pop
adc
movs
mov
jmp
loope
mov
mov
cmp
idiv
pop
ror
fisttp
inc
or
or
or
pusha
inc
push
shr
into
jmp
add
mov
shl
or
cmp
(bad)
jnp
clc
adc
add
inc
add
loope
fild
stos
pusha
sbb
cld
xchg
push
mov
dec
xor
adc
in
or
sbb
mov
stos
scas
xor
push
sub
test
push
pop
add
add
ins
loopne
push
mov
add
and
inc
inc
dec
ret
pop
pusha
pop
mov
hlt
mov
and
pop
test
cmp
mov
inc
add
add
outs
out
sti
sti
or
int3
cs
jl
pusha
stc
mov
xor
push
in
mov
shl
in
and
and
or
call
or
fs
sub
xchg
bound
sub
push
xor
movs
adc
pop
je
or
popf
hlt
stos
add
add
ror
adc
push
dec
sbb
or
fcom
pop
gs
or
stc
dec
sub
clc
jmp
inc
mov
jae
pop
in
push
mov
push
or
mov
mov
(bad)
bound
pop
iret
ja
packssdw
mov
mov
and
mov
mov
pop
ins
xor
or
std
sar
sub
das
push
push
(bad)
jnp
mov
(bad)
adc
pop
fld
add
hlt
push
sub
push
xchg
xchg
add
pop
gs
adc
pusha
sbb
ins
or
and
ds
clc
or
mov
ins
leave
clc
ret
inc
adc
int
or
sbb
pop
shl
neg
jmp
sbb
je
push
fimul
push
cmp
mov
jo
fdivr
rcr
ins
pop
rcl
stos
or
mov
mov
cs
or
or
sbb
dec
std
ins
lock
cld
aas
les
xlat
(bad)
lea
cdq
mov
(bad)
mov
inc
push
sti
jmp
mov
popa
das
icebp
nop
sub
ret
popf
push
mov
xchg
sbb
xor
pop
je
jne
xchg
push
sbb
in
and
sbb
jle
call
xchg
ds
test
ret
repz
sti
(bad)
into
jne
jns
or
aas
add
adc
daa
test
cmp
push
retf
rol
sti
mov
fisubr
dec
sar
lahf
sti
inc
cwde
test
cs
mov
jo
aam
(bad)
ins
js
sbb
inc
pusha
jbe
neg
pushf
pop
dec
div
adc
mov
es
ins
jg
mov
loopne
mov
inc
psllq
cmp
add
outs
mov
adc
mov
mov
jnp
sbb
das
mov
jmp
aam
loopne
sub
out
(bad)
jmp
loopne
pop
cmp
pop
mov
sbb
mov
xor
nop
adc
xor
(bad)
mov
sbb
xor
xor
mov
pop
mov
inc
lea
jl
push
nop
pop
mov
mov
outs
add
push
dec
and
xor
jl
xor
mov
dec
inc
push
hlt
mov
dec
dec
or
scas
pop
cmp
out
in
cmp
sbb
adc
sub
in
add
adc
add
mov
cmp
xchg
nop
mov
pusha
test
inc
je
popa
mov
inc
add
push
xor
fdiv
dec
bndldx
pop
sti
repnz
dec
cmps
push
push
inc
or
cmp
push
rol
in
push
xor
jbe
mov
push
add
nop
lods
xor
fstp
xor
rcl
pop
arpl
enter
sbb
pop
or
mov
lahf
inc
add
lahf
call
inc
push
or
arpl
inc
mov
pushf
aas
xor
xchg
mov
out
jmp
cmp
push
out
dec
cld
jg
cmp
or
les
mov
pop
xchg
jmp
inc
stos
jb
mov
lock
test
jo
pop
and
lea
mov
or
or
sub
dec
mov
sub
mov
jmp
(bad)
loopne
ss
sub
inc
and
pop
(bad)
dec
xchg
imul
aaa
or
inc
data16
dec
je
jmp
pop
push
sbb
or
shl
push
hlt
bound
repnz
jmp
mov
mov
call
mov
mov
push
cdq
sbb
clc
(bad)
in
leave
xchg
xchg
dec
loopne
jl
enter
shl
(bad)
jb
or
iret
sub
sub
mov
int
add
sub
ja
add
xor
sti
addr16
out
xor
fcomp
xor
nop
xor
push
and
pop
cmp
je
jmp
xor
inc
int
iret
enter
jmp
and
(bad)
jmp
mov
ret
mov
add
xchg
gs
or
or
push
cmp
daa
bound
out
jg
adc
sub
mov
out
call
xchg
mov
mov
push
or
mov
ret
(bad)
dec
sbb
xchg
rol
daa
cmp
fs
popf
push
es
loopne
mov
push
rcl
xor
xchg
cmps
fwait
mov
fild
in
xchg
push
pop
add
xor
call
pop
mov
leave
add
mov
mov
xchg
int
or
bswap
int3
mov
rcl
arpl
js
std
pop
inc
lock
mov
xchg
in
aaa
mov
jmp
xchg
xchg
ds
mov
movs
mov
pushf
mov
push
jb
movs
nop
xchg
popa
inc
add
outs
jne
xchg
mov
pop
adc
cmps
fdivr
xor
sub
push
sbb
inc
test
xor
invd
xchg
cld
(bad)
rol
(bad)
jmp
or
mov
out
cmp
test
or
mov
push
jnp
push
arpl
add
jmp
jo
sub
push
push
sahf
xchg
inc
loope
cmp
push
ret
jmp
cmp
loopne
mov
les
push
mov
outs
push
dec
jmp
sti
aam
jmp
lock
jbe
fld
mov
and
jae
js
mov
cmp
pop
xor
cmp
nop
jmp
pop
mov
add
outs
fdiv
mov
xchg
int3
jge
and
mov
and
xor
dec
push
jb
pop
jmp
ins
jmp
mov
aaa
xchg
cmp
xor
int3
jo
add
shr
mov
in
mov
mov
push
fnstsw
mov
imul
lock
push
push
jmp
pop
adc
add
push
popa
inc
retf
sub
push
adc
pop
or
jb
mov
sub
adc
jns
dec
or
inc
sar
inc
jmp
add
dec
and
cmp
cmp
sbb
(bad)
stos
jbe
cmps
push
leave
sbb
or
fisub
fcomp
or
inc
sub
cs
mov
sbb
pop
(bad)
and
jmp
mov
jno
(bad)
lods
push
xor
xor
pop
push
dec
add
inc
adc
repnz
(bad)
jmp
sub
push
sbb
or
sub
jb
add
inc
call
jne
test
inc
fwait
hlt
hlt
loopne
jns
jmp
push
push
adc
pop
adc
addr16
mov
dec
arpl
pop
scas
fadd
sbb
add
hlt
pop
mov
outs
xor
(bad)
in
push
outs
cmp
adc
sub
jb
sti
dec
fdiv
inc
mov
mov
shr
push
dec
jne
adc
pop
adc
or
ret
mov
pushf
test
pusha
test
or
sbb
test
mov
in
add
scas
idiv
adc
mov
ret
sbb
data16
movzx
adc
fisttp
rol
or
gs
mov
or
cmp
mov
cmps
dec
imul
cmc
add
ja
fld
hlt
adc
inc
push
sbb
pop
mov
fistp
imul
stc
or
xor
not
inc
cmp
push
mov
adc
or
(bad)
sbb
test
push
call
ror
std
(bad)
lods
sub
jmp
hlt
dec
test
mov
imul
adc
push
add
sub
stc
push
rol
cs
aas
jle
(bad)
pop
pushf
and
pop
je
dec
push
adc
push
fisub
(bad)
in
mov
or
out
push
dec
mov
int
daa
stos
mov
inc
push
fs
repnz
mov
mov
push
enter
das
dec
in
and
sbb
xor
das
mov
xor
fsub
repnz
je
or
pop
and
mov
pop
aam
jo
aam
and
mov
fdivr
push
ins
js
xchg
add
aas
mov
fldcw
stc
inc
xor
mov
jmp
int3
mov
fld
and
enter
fsub
cli
mov
fs
ins
dec
lods
les
inc
mov
push
les
popa
shl
or
add
mov
clc
mov
imul
fmul
pop
jmp
xlat
mov
sbb
in
dec
xor
or
outs
add
lock
jle
sar
clc
mov
das
add
sti
push
ins
add
fs
pop
add
retf
cs
ins
or
push
and
push
push
and
outs
(bad)
femms
pop
mov
cmp
or
jae
loopne
call
loop
add
cmps
es
mov
push
jle
ja
inc
jg
jbe
(bad)
sbb
rcpps
in
add
xor
loope
aam
mov
jl
pop
(bad)
jmp
inc
imul
push
jo
arpl
js
cmp
call
out
adc
mov
xchg
mov
mov
jo
test
dec
shl
js
shl
xor
shl
inc
pop
lods
cmp
xor
shl
enter
shl
adc
shl
cld
loope
mov
call
in
dec
shl
aam
xchg
jmp
les
or
shl
mov
call
mov
mov
outs
jns
lods
jae
fisubr
lods
jmp
je
xor
pushf
or
nop
data16
jno
pop
xchg
cmp
outs
nop
outs
nop
or
xchg
data16
clc
push
imul
mov
das
js
je
sub
jnp
inc
jo
fcom
outs
nop
and
dec
fstp
in
ret
or
into
and
push
or
or
or
ror
enter
nop
data16
inc
mov
and
sahf
outs
nop
outs
cmp
aam
and
retf
xor
inc
and
mov
sub
xor
rcl
ror
adc
cmp
es
rol
add
adc
dec
mul
fs
outs
fs
call
cmp
mov
adc
dec
xor
sub
pop
xor
pusha
push
cmp
add
adc
not
and
pop
pxor
inc
ds
mov
not
add
fs
adc
enter
or
addr16
push
dec
xchg
dec
or
inc
cmp
cmp
and
fsub
enter
dec
xor
adc
test
test
jmp
xchg
mov
mov
mov
or
and
cmp
inc
test
cdq
cmp
cmps
sti
push
addr16
push
outs
imul
test
xor
das
lock
int3
inc
push
outs
and
inc
das
pop
out
jae
outs
ins
jns
jb
jo
sub
ins
and
gs
add
xor
jnp
popa
jb
ins
and
bound
and
imul
jns
jae
ins
or
pop
call
xor
adc
or
ficomp
pop
and
outs
and
addr16
jb
rcr
jnp
and
xor
imul
dec
and
sbb
ret
pop
outs
gs
dec
sbb
scas
inc
(bad)
dec
mov
jo
call
imul
daa
daa
push
gs
mov
jne
push
push
arpl
mov
xor
je
xchg
and
mov
adc
and
arpl
and
pop
test
nop
ss
outs
imul
popa
lods
inc
sti
in
and
push
in
mov
jmp
bound
out
mov
lods
mov
push
jne
jb
push
gs
and
rcr
(bad)
adc
push
dec
pop
mov
(bad)
push
jo
imul
ss
pop
xor
inc
push
and
pop
inc
jmp
xor
sub
xlat
shl
(bad)
inc
bound
mov
mov
imul
(bad)
bound
jns
or
jne
imul
fsubr
pop
dec
pushf
and
ins
ds
xor
fwait
dec
push
add
sub
sbb
adc
(bad)
lock
popa
sti
imul
loope
popf
je
sbb
(bad)
fiadd
leave
or
mov
pushf
je
popa
mov
je
fs
popa
or
outs
sub
push
gs
fisttp
or
push
sti
int3
popa
std
cmp
sahf
xor
sub
dec
dec
lods
shr
sub
dec
add
popa
out
int3
cmps
test
dec
fs
call
adc
sub
repnz
loope
outs
mov
je
add
ja
xor
adc
sub
mov
jb
es
mov
imul
cmp
jg
dec
push
fs
jae
mov
jecxz
pop
add
push
cmp
push
out
lods
out
xchg
cmp
xor
in
movs
ja
push
data16
dec
ja
mov
call
push
arpl
adc
cmp
test
jo
ds
aas
sbb
sub
bound
je
xor
cmp
lods
pusha
in
loop
ja
out
shl
jne
push
data16
jne
cmp
jne
pop
push
pop
mov
(bad)
call
pop
jae
pushf
push
fs
sub
sbb
rol
inc
aas
adc
push
or
sub
jmp
js
sbb
dec
and
push
sbb
data16
inc
and
inc
pop
sub
fiadd
inc
push
inc
pop
xchg
dec
inc
sbb
pop
sbb
push
and
adc
in
dec
sbb
xor
jbe
cmp
out
jb
cmp
pop
cmp
xor
inc
cmp
jo
pop
lods
pop
push
mov
or
popa
xor
fadd
pop
dec
mov
ins
fistp
jb
xor
adc
sub
sbb
fidiv
and
arpl
jnp
call
jbe
je
pop
adc
dec
xchg
pop
push
sbb
fiadd
cwde
fistp
dec
pop
sbb
mov
lods
test
cmp
cmp
popa
outs
aas
jne
adc
gs
movs
xchg
shl
arpl
mov
jmp
push
sub
movs
je
fcom
ss
cs
or
dec
push
fs
add
jnp
scas
scas
sbb
and
sub
jo
movs
fwait
xchg
das
popa
imul
inc
xlat
jb
sbb
ins
xor
lea
xor
jnp
arpl
xor
jae
xchg
test
inc
or
and
pop
or
push
inc
push
dec
dec
fcom
nop
pop
outs
xchg
push
cmps
push
xor
pusha
adc
xor
pop
sbb
inc
(bad)
iret
arpl
ss
popa
jmp
fistp
in
jmp
xor
inc
and
inc
outs
sti
imul
dec
pop
jae
bound
cmps
fs
addr16
sbb
dec
push
js
fmul
dec
push
fwait
push
outs
mov
(bad)
pop
pop
call
lock
adc
push
lods
add
pop
mov
mov
inc
adc
push
jg
dec
mov
jns
sbb
bound
das
cs
inc
ins
mov
dec
xor
pop
sbb
cdq
out
or
js
aas
inc
popa
xchg
inc
and
cs
xchg
data16
or
or
sub
aaa
mov
mov
push
adc
sub
mov
ret
aas
pop
or
xor
mov
aaa
mov
popa
ret
pxor
and
arpl
jo
adc
pushf
cmps
cmps
add
push
call
push
push
js
stos
dec
add
mov
js
add
push
inc
inc
lahf
pop
ins
mov
popa
pop
das
and
and
or
pop
(bad)
fstp
ins
xor
sub
lods
in
xor
jae
popa
mov
gs
dec
xchg
jo
and
and
lods
pop
xor
imul
mov
xor
xchg
inc
mov
jecxz
jl
sti
xor
mov
pop
push
xchg
xlat
or
add
fld
adc
inc
sbb
jae
or
imul
das
bound
pop
scas
fisttp
in
jb
imul
out
and
or
mov
ins
and
sub
lahf
pop
push
xchg
xor
mov
jbe
inc
adc
xor
sbb
and
outs
out
loope
cmp
sub
mov
jns
call
das
mov
jg
mov
xchg
mov
inc
and
rcr
outs
mov
xor
and
add
ret
mov
in
mov
mov
mov
jae
inc
xor
fs
inc
je
jns
or
cmp
xchg
cmp
(bad)
sahf
imul
ja
dec
dec
(bad)
push
add
ss
arpl
shl
mov
bound
or
jb
ins
jmp
jp
mov
push
lea
cmp
xor
ins
das
call
mov
ins
out
adc
pop
cmp
dec
outs
cmp
jb
or
jp
dec
ret
std
xchg
rcl
add
mov
xor
xchg
mov
sub
pop
into
jae
lea
bound
enter
int3
in
mov
fisubr
movs
ja
gs
popa
dec
nop
push
(bad)
es
xor
pop
xor
aam
sub
shr
dec
xor
dec
fadd
outs
jae
ret
bound
ror
into
or
ror
pop
xor
lods
xor
pop
sti
mov
inc
movs
pop
sbb
inc
ret
dec
sub
mov
jae
xsavec
dec
inc
dec
nop
inc
sbb
or
out
xchg
sbb
(bad)
addr16
cmp
test
xchg
sub
xchg
ret
or
in
mov
sub
jle
pop
mov
cmp
push
push
sub
fwait
ja
jo
arpl
dec
jo
mov
cs
cwde
dec
adc
ss
dec
cdq
inc
or
(bad)
cmp
out
rcl
fadd
out
pop
add
movs
popa
inc
inc
or
retf
leave
movs
test
xchg
xchg
aaa
push
sub
xchg
push
and
and
mov
ds
in
in
sub
mov
sub
jo
cs
jo
jae
call
push
sti
dec
outs
sub
ret
enter
test
mov
mov
jl
imul
stos
sbb
shl
mov
jb
add
jl
inc
es
xor
mul
adc
adc
movs
sub
cmps
callw
ds
pop
ins
xchg
push
scas
jmp
data16
test
push
add
popf
clc
and
cmp
fiadd
and
jns
movs
adc
jb
xor
xor
cmp
pop
or
(bad)
cmc
mov
xchg
inc
add
outs
imul
dec
jo
add
push
jb
mov
icebp
cmps
pop
inc
ins
imul
xor
jmp
bound
xchg
(bad)
rol
xchg
jl
popa
or
je
pop
xchg
retf
shl
addr16
js
push
jmp
jne
shl
pushf
push
add
inc
add
push
and
scas
popa
push
or
push
out
mov
xchg
data16
pop
xchg
movs
imul
out
loopne
jo
ins
mov
outs
aaa
and
sub
push
shl
test
lods
cmc
(bad)
adc
cmp
add
xchg
xor
sbb
sbb
inc
cwde
popf
gs
mov
imul
repz
sub
jo
add
ja
lahf
dec
in
xor
jmp
inc
jp
jae
jo
cmp
shl
and
ret
push
test
retf
shl
adc
pop
pushf
mov
shl
pusha
outs
fs
mov
lahf
fistp
leave
xor
subps
cmp
add
nop
sbb
fstp
push
(bad)
(bad)
ret
jae
ss
mov
fisttp
pop
and
gs
pusha
test
shl
dec
add
call
aaa
and
cmp
test
cmps
out
xor
jno
int
pop
outs
dec
sub
das
inc
sbb
and
jle
lea
adc
mov
jae
mov
sbb
push
cdq
mov
outs
bound
dec
xchg
or
sbb
cli
pushf
inc
ret
mov
jo
pop
dec
addr16
sahf
and
cmp
or
or
mov
or
pusha
mov
inc
stos
mov
mov
and
jg
xor
and
xor
int3
inc
and
cmp
pusha
ds
xchg
and
xor
jo
mov
sahf
call
nop
ins
and
xor
sbb
data16
test
ds
gs
xor
jae
push
and
add
test
mov
mov
outs
dec
ror
jb
outs
js
js
and
sub
sbb
dec
mov
lods
ss
call
and
je
ror
dec
sti
das
mov
mov
imul
enter
push
pop
icebp
and
inc
test
cs
xor
fstp
and
in
sub
cmp
loopne
bound
xor
and
adc
mov
or
js
and
ins
xor
xor
and
xchg
and
mov
xchg
sbb
xchg
js
push
mov
mov
mov
or
adc
cmp
loope
fwait
rol
popa
jecxz
fs
or
or
pusha
jns
dec
sub
jmp
arpl
jmp
mov
in
add
xor
inc
xchg
and
or
xor
(bad)
and
sub
mov
xor
pop
inc
dec
jp
xchg
mov
or
aad
leave
inc
dec
js
clc
outs
cmp
push
leave
bound
jo
loopne
ss
push
dec
pushf
push
jg
jmp
or
sti
and
pop
sub
popaw
fs
xor
inc
imul
sbb
call
pop
or
push
into
xchg
inc
push
xor
rcl
sbb
sbb
sub
je
nop
lods
or
inc
jns
mov
xchg
xlat
inc
and
cs
jg
aam
cmp
out
cld
add
mul
push
jle
mov
test
jne
jp
mov
aaa
shl
gs
xor
and
xchg
or
fdivr
pushf
leave
test
test
and
lds
loopne
cwde
adc
xor
(bad)
scas
cmp
ret
cmp
ds
aas
cmps
pusha
push
or
add
jne
xor
and
les
clc
jo
lods
arpl
mov
jnp
lea
mov
popa
scas
dec
bound
mov
shr
pop
jo
cwde
dec
cmp
call
push
mov
shr
imul
fild
and
xchg
pusha
bound
mov
(bad)
dec
or
adc
les
dec
dec
pushf
jns
jp
xchg
and
push
iret
push
push
mov
xor
push
movs
ss
shl
pusha
int
test
sbb
xchg
arpl
lods
cmp
xor
and
or
pop
call
push
jne
mov
xchg
test
push
add
push
add
sub
dec
fst
popa
repz
jns
popa
mov
sbb
mov
mov
sub
rol
mov
dec
popa
sbb
or
cmp
xchg
or
lods
pop
call
fnclex
adc
pop
jmp
xchg
pusha
sbb
fs
or
add
jne
mov
retf
sbb
ins
int
mov
lahf
add
mov
retf
xchg
push
jnp
ret
aaa
pop
sbb
dec
loopne
fidivr
xor
mov
enter
ss
and
ret
and
rcr
or
mov
or
mov
xchg
xor
adc
leave
jl
adc
in
ins
mov
adc
xor
jbe
cmps
sahf
or
shl
xor
and
inc
shl
arpl
cmp
jns
shr
inc
daa
fwait
test
push
xor
pop
test
mov
dec
les
jecxz
jmp
jnp
idiv
xor
or
pop
pop
xor
mul
xor
stos
or
aam
add
loopne
cmp
mov
push
cmp
test
cmp
or
out
mov
fwait
aaa
int3
xchg
mov
ins
add
push
push
ins
mov
shl
jns
(bad)
mov
adc
je
nop
rcr
xchg
xor
imul
js
push
lods
jnp
mov
fs
dec
je
pop
or
xchg
bound
loop
or
cmp
leave
jp
invd
and
loope
jno
mov
aam
mov
pop
bound
ret
iret
xor
adc
jnp
sahf
or
push
cmp
outs
stos
das
sbb
test
cmp
(bad)
push
jno
lds
pop
mov
inc
scas
cwde
call
pop
jo
xchg
xor
jge
xchg
xor
jnp
jp
fld
pop
and
arpl
xor
(bad)
dec
cmps
xchg
xor
sub
pusha
adc
es
loope
scas
dec
push
push
jns
mov
add
lock
push
movs
pop
or
rcl
jns
cdq
aaa
or
xchg
loopne
outs
add
arpl
push
jo
cld
(bad)
xor
push
xchg
add
cmp
imul
cmp
lods
adc
pop
cmp
test
retf
cwde
jae
mov
pop
lds
fs
shr
inc
imul
push
sub
mov
adc
jae
or
jns
cmp
mul
les
movs
push
push
xchg
retf
push
aad
add
inc
and
(bad)
mov
and
sbb
xor
js
mov
pop
or
pusha
xchg
or
ins
xchg
jne
adc
lods
mov
int3
bound
int3
cmp
add
outs
fisttp
jo
sbb
(bad)
mov
jb
jns
int3
lds
daa
ss
iret
cmps
sub
popa
cmc
(bad)
xor
add
cmps
jmp
jo
ja
jmp
sub
xchg
xchg
sub
jbe
xchg
pop
xor
cwde
imul
call
mov
sbb
stos
test
cmc
xchg
adc
dec
mov
and
sar
jae
mov
xor
adc
es
pushf
aad
mov
or
or
xor
fnstsw
add
enter
pop
lock
mov
loope
jl
sub
in
adc
xchg
xlat
xchg
push
inc
dec
push
sbb
adc
jne
and
ror
pusha
ss
pop
push
stos
or
fwait
and
add
sub
not
pushf
pop
and
sbb
push
push
xchg
ror
pop
or
pop
adc
jae
dec
popa
inc
pop
adc
cmps
mov
sbb
sub
xchg
adc
jo
mov
mov
aaa
or
out
mov
mov
dec
pop
aaa
pushf
rcl
imul
xor
pop
mov
(bad)
int
push
mov
jae
pop
pusha
daa
mov
in
mov
inc
movlps
and
jmp
cdq
jae
mov
mov
bound
dec
cdq
jmp
popf
mov
test
cmps
xchg
ror
es
add
add
gs
and
jae
nop
cwde
inc
dec
jle
mov
mov
arpl
(bad)
arpl
cmp
jb
adc
adc
fwait
pop
xor
xor
lds
inc
xor
sub
test
add
(bad)
test
or
dec
cwde
mov
xor
add
mov
ss
cmp
ins
mov
or
loopne
sbb
arpl
jo
or
ret
jo
sub
mov
inc
adc
ins
ins
cmp
aad
imul
in
mov
xor
cmp
jnp
rcr
sub
(bad)
sub
push
inc
push
push
pushf
ror
inc
sub
jp
loop
jnp
test
push
sub
adc
inc
and
jne
inc
dec
push
sub
ret
xor
dec
xor
pop
mov
xor
add
push
push
jmp
inc
mov
ror
pusha
xor
xor
pop
mov
mov
aaa
imul
jl
jae
fiadd
in
hlt
mov
and
dec
je
and
scas
lea
jae
call
adc
add
and
xor
mov
xchg
test
push
retf
mov
push
(bad)
xchg
and
jg
inc
or
cld
addr16
mov
xchg
or
push
push
push
jg
and
inc
call
stos
and
sub
lea
mov
enter
xor
dec
ret
outs
add
add
cmp
pop
fcmovbe
pop
dec
push
out
lods
push
push
rcl
xchg
leave
adc
push
pushf
mov
push
push
popf
(bad)
cli
ja
push
add
(bad)
nop
pop
fdiv
sbb
jmp
push
jg
or
fnstcw
and
jno
movntps
add
fnstenv
push
cmp
dec
js
lea
dec
pop
inc
inc
cs
jle
dec
out
inc
add
enter
sub
ins
pushf
jns
scas
adc
test
js
movs
pop
add
loop
dec
push
into
mov
popf
xchg
xchg
mov
adc
cs
or
dec
dec
rol
out
aad
mov
das
fs
loope
xor
cld
jnp
dec
pop
push
xchg
or
xchg
jo
aad
shl
jns
sub
add
shl
outs
mov
add
retf
pop
dec
mov
xchg
dec
push
lock
sbb
sub
fs
popa
out
and
lahf
sbb
sbb
retf
inc
push
push
jo
aaa
daa
les
or
mov
mov
add
stos
ja
gs
xchg
push
test
inc
adc
xchg
in
loopne
stos
je
pop
adc
cmp
dec
mov
test
and
or
cs
push
push
add
mov
imul
addr16
mov
bound
adc
add
adc
bound
sub
repz
add
mov
popf
fistp
or
and
cdq
cmp
cmps
adc
sbb
mov
xchg
gs
clc
sub
bnd
das
and
add
retf
pop
add
lods
fs
aas
imul
sub
ss
xchg
xor
fwait
mov
pop
push
ins
or
cs
mov
call
rol
je
or
je
aaa
rol
ret
and
sub
ja
push
inc
mov
mov
dec
cmp
ins
ins
sahf
push
mov
or
adc
movs
sub
jo
(bad)
jnp
dec
shl
adc
out
xor
cli
js
pop
sub
or
imul
push
out
cli
je
test
dec
mov
jbe
inc
mov
outs
inc
nop
nop
or
dec
jle
push
and
add
mov
pusha
pusha
inc
pop
pop
adc
sub
arpl
or
dec
lods
sbb
or
ins
add
push
and
iret
mov
xchg
icebp
mov
push
mov
pop
cs
popa
add
out
lods
add
or
scas
(bad)
mov
push
movs
outs
jbe
sub
fidivr
pop
dec
jno
pop
daa
jno
sub
lea
inc
mov
inc
cs
and
fist
fbld
mov
pusha
cmc
inc
pop
popa
push
and
push
jmp
xchg
fimul
icebp
loopne
shrd
cmp
fild
xchg
stos
jp
dec
add
call
sbb
retf
and
es
jns
js
and
push
jne
xor
test
mov
jo
dec
shr
mov
push
leave
arpl
repz
sub
and
das
inc
retf
sbb
mov
and
imul
mov
mov
arpl
ficomp
clc
pop
not
pop
addr16
jmp
movs
je
add
add
pop
jae
pop
inc
cwde
icebp
stc
pop
repz
les
sub
imul
sub
call
push
push
push
aam
dec
enter
mov
jns
cmps
or
xlat
popa
scas
adc
pop
popf
or
mov
adc
repz
push
ss
jl
hlt
push
icebp
xchg
popa
mov
sbb
test
test
add
push
xor
rcr
jae
dec
mov
pop
cmp
je
imul
mov
(bad)
mov
add
retf
and
and
mov
pop
rcl
leave
sar
mov
or
sbb
loope
mov
dec
sub
sub
and
(bad)
cmc
retf
or
inc
dec
test
call
dec
pop
and
lds
sbb
aas
mov
pop
sbb
sub
aam
shr
pop
push
adc
dec
push
mov
das
sub
imul
mov
aam
(bad)
daa
sub
adc
(bad)
ror
push
sbb
mov
popa
mov
test
outs
mov
adc
out
aaa
xor
add
and
adc
mov
inc
outs
rol
add
add
scas
popf
inc
(bad)
mov
ins
ins
data16
adc
xchg
xor
dec
adc
sub
sub
sbb
retf
xor
imul
loop
sub
repz
mov
adc
push
shr
and
test
scas
and
and
js
nop
cmp
xchg
outs
jae
cwde
stos
mov
ret
sub
add
(bad)
xchg
xor
push
inc
xchg
mov
pop
enter
mov
and
add
mov
and
and
popa
dec
repz
or
or
jns
inc
ret
call
push
jecxz
ror
pop
aaa
icebp
enter
sbb
stc
stos
add
xor
or
jno
sub
rcl
push
je
gs
scas
add
shl
pop
lea
lea
pop
pop
inc
mov
pop
unpckhps
sub
xor
ins
fs
retf
push
(bad)
adc
pop
cwde
aaa
cmc
pop
push
adc
stos
mov
push
scas
xor
test
push
jno
xchg
sti
into
(bad)
add
out
adc
inc
sub
es
and
push
mov
bound
les
mov
in
sub
adc
(bad)
xchg
ds
aad
pop
mov
pop
in
inc
jne
xchg
fist
cmp
push
and
adc
gs
inc
or
pop
or
shl
xor
pop
ins
rcl
jae
dec
pop
data16
inc
rol
push
out
mov
out
add
cmp
movs
xchg
push
jecxz
enter
mov
adc
mov
imul
dec
mov
ss
add
aaa
adc
dec
call
pop
nop
xor
sbb
cwde
(bad)
dec
sub
push
mov
xchg
je
mov
call
adc
pop
es
sub
stos
xchg
cmc
dec
pop
retf
jb
sub
jp
sbb
sub
push
or
mov
pop
aas
pop
cmp
popa
lods
in
xor
(bad)
push
(bad)
mov
or
sub
mov
popa
and
xor
and
mov
add
dec
pop
dec
push
mov
test
xor
pop
xchg
xor
syscall
adc
dec
jae
in
adc
gs
xor
retf
mov
sub
xchg
nop
xchg
sbb
dec
and
adc
inc
into
adc
and
(bad)
je
mov
ror
(bad)
or
imul
add
ror
mov
inc
xor
adc
push
aas
mov
sub
int3
rcl
push
xor
les
loop
xor
mov
push
int3
les
test
adc
cmps
pop
(bad)
and
and
sub
ror
dec
add
xor
jb
push
pop
cmp
push
jae
outs
push
icebp
mov
mov
ror
xor
pusha
pop
retf
shl
and
mov
or
sub
add
icebp
xchg
aam
inc
int3
or
adc
outs
add
ret
cmp
add
mov
lea
test
pusha
and
push
cmps
mov
and
mov
add
call
mov
adc
js
push
mov
js
fdiv
retf
push
mov
cmp
mov
jne
inc
popf
adc
and
xor
sbb
mov
xchg
fs
jne
sbb
out
pop
mov
data16
bound
jb
(bad)
sub
imul
int3
pusha
adc
cmp
cmp
mov
push
dec
sub
or
xor
sbb
fldcw
imul
aam
dec
sub
mov
push
idiv
rol
cmps
xor
cmp
mov
dec
mov
jb
dec
shl
xchg
fsub
add
dec
jp
cwde
pop
push
push
ror
mov
add
inc
jbe
js
or
int
inc
stc
fwait
rcl
imul
sar
push
or
sar
je
bound
push
push
push
jno
and
xchg
lsl
fwait
shl
jo
and
inc
push
and
sub
cmp
stos
pusha
pop
enter
adc
mov
xchg
mov
mov
and
pop
test
loope
ss
repz
mov
outs
xchg
(bad)
push
sub
mov
stos
pop
popa
sbb
sub
daa
and
and
cmp
js
data16
and
popa
inc
and
(bad)
adc
imul
pop
pop
pop
inc
repz
push
xchg
jo
pop
cmp
shl
jmp
mov
or
jns
adc
fwait
rcr
sbb
loopne
xlat
mov
sub
ins
dec
or
push
pcmpgtd
cdq
pop
and
pushf
dec
add
jmp
add
cmp
cmp
and
mov
mov
mov
mov
mov
fadd
lods
mov
das
jo
adc
jge
mov
add
or
jnp
loopne
(bad)
aaa
int
push
daa
cmp
cmp
punpckhdq
add
sti
fsubr
ins
push
jle
cld
mov
out
add
mov
adc
loop
ror
mov
pop
and
mov
push
push
sti
adc
lock
xlat
int3
daa
cmp
cmp
clc
jnp
ja
adc
cwde
mov
push
sbb
mov
xor
sbb
aaa
sti
bound
fs
and
ret
call
test
inc
mov
loop
aam
mov
xchg
sub
not
int3
or
test
ret
or
mov
add
int3
push
mov
gs
cld
repnz
sbb
mov
into
cmp
sbb
xchg
add
clc
adc
mov
sbb
push
sub
loopne
push
aam
xchg
adc
fimul
sbb
js
in
or
ja
cs
in
in
adc
lock
add
in
xor
fs
jl
pop
clc
ja
inc
add
adc
jg
jns
or
fild
mov
sbb
fcomp
sahf
enter
sub
inc
cld
ja
dec
push
adc
cmovp
add
mov
jg
movs
adc
mov
fdiv
jne
add
dec
mov
mov
adc
sub
xchg
dec
div
mov
or
mov
and
jmp
and
jns
push
xor
test
movs
call
or
gs
jo
sub
and
mov
push
aas
sbb
push
sbb
jp
popa
and
push
add
loopne
fs
or
push
lods
mov
pop
xchg
outs
push
or
add
out
xor
cmp
jb
cmp
add
or
mov
pop
inc
imul
dec
pop
push
sahf
stos
xor
jbe
adc
inc
fcom
int
imul
mov
aaa
xor
pop
cmp
pop
add
cs
adc
and
retf
int3
enter
enter
fmul
sar
fstp
mov
jecxz
in
das
add
inc
rcr
sar
push
call
add
mov
add
jg
pop
adc
inc
inc
inc
inc
inc
inc
inc
repz
into
push
inc
pop
fisttp
xchg
sub
int3
ins
aam
rcr
dec
add
add
call
and
xor
call
pop
cmps
imul
imul
cmps
imul
jg
dec
dec
push
or
add
arpl
add
add
gs
or
sbb
push
push
jb
nop
in
push
xchg
dec
push
in
daa
dec
add
adc
mov
push
ins
pop
enter
pop
jo
test
dec
addr16
jl
push
pop
and
inc
add
xor
adc
retf
cmps
imul
mov
int3
call
imul
mov
fcom
popf
add
test
add
cmps
imul
mov
in
add
arpl
dec
jo
ins
call
xor
xor
dec
test
imul
xor
dec
outs
and
cmp
popf
(bad)
mov
shl
(bad)
in
(bad)
and
cmps
imul
call
nop
call
pop
and
ins
or
mov
jmp
xchg
jnp
jo
call
adc
pop
test
ss
mov
adc
push
xchg
fcomp
pop
add
shr
cmps
mov
mov
add
ja
mov
adc
je
mov
cdq
outs
call
les
fwait
out
add
imul
cmps
jae
call
test
add
cmp
mov
fwait
cmps
pop
ins
lods
lock
rol
or
dec
js
cmps
jmp
das
mov
mov
fsubr
xlat
add
fsub
and
jmp
pop
cmps
add
sbb
test
mov
call
push
pop
dec
out
pop
nop
add
sbb
xor
(bad)
inc
stos
xlat
add
cld
mov
lods
stos
jl
mov
pop
ss
out
add
shr
cmps
fs
sar
scas
jecxz
int
imul
mov
js
outs
shl
fcom
mov
add
xchg
dec
shl
cmps
jae
cmps
test
and
out
add
in
mov
mov
xchg
call
mov
add
int
imul
mov
lock
cmps
imul
shr
cld
xor
pusha
mov
call
sbb
dec
js
loopne
call
je
int3
xor
out
ins
add
mov
lock
add
sar
push
add
xor
out
sbb
retf
add
fldenvw
rcl
shl
dec
add
sar
ss
out
and
cmp
sub
sbb
ret
add
fst
cmp
movs
fdiv
lds
add
lds
mov
lods
fmul
imul
shl
test
adc
fild
mov
lock
mov
retf
push
retf
(bad)
loopne
int3
(bad)
shl
adc
fsub
movs
fsub
into
dec
sub
cmps
jmp
adc
push
out
dec
rol
dec
add
pushf
fcom
lahf
add
shl
aam
ror
dec
shl
mov
call
push
popf
(bad)
aad
add
shr
(bad)
pop
mov
shl
das
xlat
add
loopne
fsub
fwait
cmps
xchg
rcl
pop
pop
fnstcw
test
les
xchg
dec
je
imul
(bad)
or
in
fsubr
in
xlat
jne
je
int3
sbb
lods
adc
push
iret
bound
fdiv
add
adc
dec
lock
xlat
jne
mov
adc
movs
pop
cmp
popf
lds
cld
dec
sti
pushf
mov
rol
dec
mov
dec
dec
ret
out
xor
cmp
fnsave
fwait
aam
dec
mov
cmps
jmp
cmps
lods
and
or
mov
mov
inc
lock
mov
in
loopne
push
mov
cmp
cld
imul
mov
retf
seta
hlt
popf
out
push
aas
sub
dec
xchg
leave
test
rol
adc
inc
or
mov
adc
nop
push
add
add
or
or
adc
adc
nop
push
add
add
or
or
push
add
nop
inc
add
add
xchg
loopne
add
add
pop
inc
push
or
push
push
add
jg
mov
dec
add
add
dec
repz
inc
or
inc
dec
inc
ja
sar
add
dec
add
inc
add
or
add
mov
add
jb
inc
push
add
outs
pop
dec
add
mov
gs
add
out
jmp
jne
sub
je
aaa
popf
int
ja
or
fsub
inc
jae
or
adc
fldenv
or
adc
popa
outs
xchg
ins
pop
and
jnp
ss
inc
sub
jmp
scas
jo
dec
jmp
jbe
mov
popf
dec
dec
outs
sub
mov
inc
pop
bound
adc
test
jo
ins
and
fsub
mov
or
mov
iret
je
xor
and
(bad)
outs
invd
push
fnstenv
pop
jne
sti
or
cdq
imul
mov
outs
dec
or
js
push
imul
lea
jbe
jns
or
je
data16
sar
sbb
leave
pusha
lahf
imul
mov
and
je
fidiv
sbb
aas
out
mov
dec
mov
pop
inc
mov
gs
outs
aas
das
jge
gs
sbb
imul
rol
xchg
xchg
ins
or
pusha
outs
add
sbb
pop
sub
call
aaa
outs
and
lods
bound
jb
pop
inc
jg
mov
out
aas
sbb
jbe
(bad)
xchg
mov
add
leave
mov
sub
mov
sar
add
or
adc
add
add
and
popa
test
xor
mov
retf
jge
jo
jmp
push
popa
arpl
lods
je
xor
js
xchg
cmp
dec
pop
and
push
pop
je
fisttp
jbe
ins
or
or
sti
xlat
ja
(bad)
lock
push
setae
mov
xchg
lods
or
xor
xor
add
popf
fistp
fild
and
or
adc
adc
or
icebp
ds
xor
pop
ins
pop
das
popf
mov
and
xor
or
push
bound
add
sbb
mov
adc
ja
cmps
retf
into
push
sbb
arpl
and
pop
pop
sbb
fst
gs
sbb
movs
add
loope
stc
jae
sub
push
pop
inc
adc
dec
pop
sbb
scas
fwait
cmp
dec
addr16
lods
mov
add
add
dec
or
dec
mov
add
pop
das
pop
inc
or
xlat
mov
xchg
push
std
xchg
ret
fxch
mov
aas
fild
xchg
popa
adc
adc
outs
push
jns
xchg
outs
sub
ins
inc
sbb
sub
inc
mov
sbb
pop
bound
outs
test
sbb
rol
pop
lea
jne
arpl
inc
xchg
adc
ret
pop
arpl
jo
adc
jge
sbb
jp
arpl
out
das
xlat
adc
push
arpl
test
pop
ret
xchg
and
add
xchg
or
retf
mov
aas
or
push
mov
das
(bad)
mov
int
xor
dec
pop
fs
fld
add
(bad)
(bad)
(bad)
mov
inc
add
cmp
push
pop
mov
add
cld
or
and
push
push
adc
jb
addr16
ins
and
and
outs
sti
das
psubq
push
imul
aaa
inc
push
inc
dec
add
out
jg
pop
adc
sub
loopne
mov
retf
sahf
ins
je
sub
popf
push
add
add
dec
mov
out
adc
xlat
sub
push
sbb
adc
adc
je
(bad)
mov
add
or
lock
shl
sbb
inc
mov
fsub
dec
inc
inc
sbb
nop
jmp
and
or
inc
push
inc
or
sti
mov
or
aam
daa
faddp
inc
push
push
jbe
fs
in
push
add
out
icebp
imul
daa
ins
in
mov
xor
xchg
add
jbe
sbb
rcr
sub
inc
push
gs
outs
arpl
push
imul
daa
fwait
xor
cmp
xchg
daa
add
add
mul
push
add
ret
mov
push
sbb
pop
dec
dec
inc
sbb
inc
cmp
fs
inc
push
xor
sub
inc
push
sbb
and
inc
push
sbb
sbb
sbb
adc
or
fs
inc
or
fs
inc
push
jo
add
mov
sbb
inc
pop
enter
mov
push
sbb
in
sbb
call
jno
fadd
repnz
arpl
xchg
test
(bad)
dec
stc
push
enter
xchg
popf
(bad)
(bad)
dec
stc
cmp
int3
xchg
int3
xchg
xchg
pop
and
mov
(bad)
call
inc
and
push
(bad)
(bad)
push
and
or
(bad)
(bad)
call
std
(bad)
call
xchg
ins
(bad)
(bad)
jmp
inc
and
movs
std
(bad)
push
mov
mov
jbe
std
add
cmps
inc
arpl
xchg
out
fwait
pop
jb
cld
(bad)
jmp
rcl
rcl
es
(bad)
call
xchg
dec
cmp
rcl
dec
adc
arpl
xchg
stc
push
repnz
xchg
mov
cmp
cld
(bad)
jmp
adc
add
sti
(bad)
push
inc
leave
and
(bad)
stc
add
sub
(bad)
jmp
jle
pop
nop
add
add
test
(bad)
(bad)
(bad)
(bad)
call
std
(bad)
call
pushf
mov
mov
and
sbb
and
es
(bad)
(bad)
cmp
les
loopne
out
nop
sbb
cmp
or
jns
mov
mov
loopne
or
nop
and
dec
js
cmp
fwait
jg
clc
(bad)
jmp
or
lock
cld
xchg
test
mov
xchg
xchg
add
stos
jns
arpl
sbb
inc
push
inc
data16
pop
loopne
sbb
test
mov
inc
mov
out
mov
clc
jg
jne
nop
and
dec
mov
xchg
popf
ins
repz
push
jne
fld
sbb
sub
shl
xchg
and
int3
xchg
sbb
and
cld
xchg
cld
xchg
or
or
xchg
adc
lods
xchg
mov
add
add
xchg
xchg
repz
(bad)
call
xchg
lods
xchg
and
daa
pop
lods
xchg
mov
(bad)
dec
xchg
jl
(bad)
(bad)
call
pop
enter
(bad)
push
dec
and
popf
(bad)
(bad)
jmp
jns
repnz
(bad)
dec
xchg
or
jmp
xchg
daa
das
nop
xchg
add
jns
lods
xchg
add
cmp
std
(bad)
inc
add
mov
xchg
adc
(bad)
call
std
(bad)
push
std
(bad)
push
leave
por
(bad)
inc
add
inc
clc
(bad)
call
(bad)
dec
xor
jb
and
arpl
xchg
xchg
int
inc
cld
xchg
add
repnz
(bad)
(bad)
dec
out
repnz
add
add
add
in
dec
dec
pushf
xchg
mov
inc
push
leave
cmps
push
std
(bad)
dec
adc
arpl
xchg
sti
clc
(bad)
call
add
test
xchg
dec
lods
and
adc
adc
arpl
jb
in
xchg
or
or
sub
pop
or
sar
sbb
jnp
mov
pop
pop
or
inc
dec
sbb
push
push
mov
add
cld
jo
dec
push
xlat
push
and
lock
popa
jle
(bad)
adc
mov
test
xchg
test
idiv
inc
xchg
popa
cwde
repnz
xchg
in
add
lods
xchg
cmc
add
add
or
pushf
xchg
mov
xor
or
arpl
sahf
dec
enter
push
clc
(bad)
inc
xchg
add
add
out
xor
outs
call
jns
inc
inc
arpl
lods
xchg
enter
xor
icebp
mov
inc
movs
stc
and
and
inc
add
and
add
and
mov
sahf
mov
xor
add
mov
idiv
call
xchg
lods
cmp
push
or
cmp
arpl
add
wbinvd
jp
sbb
inc
sub
pop
adc
xor
inc
arpl
sub
std
dec
stc
pop
enter
sub
(bad)
(bad)
jns
cld
add
clc
(bad)
(bad)
(bad)
(bad)
dec
(bad)
(bad)
jmp
dec
outs
adc
div
sti
xchg
out
adc
inc
test
in
mov
(bad)
cld
fistp
dec
and
cli
(bad)
inc
stos
cmp
sti
jge
cwde
jl
leave
mov
in
mov
fs
add
mov
xor
nop
add
cdq
in
pushf
xor
add
adc
sbb
arpl
nop
ja
add
cmp
aas
lods
(bad)
(bad)
jmp
sbb
add
fsubrp
and
jmp
call
xor
or
push
xchg
icebp
xchg
repz
and
loope
inc
data16
int
jg
xchg
in
or
ror
je
pop
(bad)
mov
sar
cmp
jg
sub
inc
adc
sar
(bad)
mov
fbld
call
mov
jmp
mov
pop
clc
shr
mov
jg
jnp
sbb
jmp
aad
add
fmul
aam
cmp
lea
or
push
jmp
mov
or
not
aas
or
imul
adc
lods
mov
xor
push
push
xor
popa
mov
sbb
das
or
ret
dec
pop
in
and
adc
jmp
ret
(bad)
nop
or
add
dec
jmp
(bad)
push
call
es
cld
inc
sahf
mov
sub
add
call
xchg
(bad)
mov
sub
mov
(bad)
in
pusha
adc
add
lahf
jl
xor
add
pop
call
(bad)
call
sbb
cmps
push
mov
jns
fst
(bad)
push
ror
sbb
jle
repnz
jne
retf
and
mov
add
fldcw
mov
clc
mov
or
loop
mov
xlat
mov
imul
or
and
cmp
(bad)
call
out
add
iret
(bad)
call
(bad)
call
mov
aaa
pop
jo
add
sbb
cdq
xchg
add
sub
stc
inc
repnz
je
and
repz
(bad)
test
in
(bad)
sti
in
inc
and
dec
ret
push
in
call
sub
xchg
inc
in
dec
cmp
lahf
adc
(bad)
jmp
sub
in
in
enter
in
push
add
nop
pop
leave
add
adc
push
add
popa
adc
add
pop
mov
and
or
dec
xor
sub
inc
mov
cdq
cmp
stc
(bad)
(bad)
jl
and
pop
stc
(bad)
jmp
dec
ds
mov
(bad)
(bad)
push
int
retf
clc
(bad)
(bad)
cmp
aas
jmp
cmp
add
mov
inc
inc
ret
add
mov
jae
into
push
jbe
loopne
push
and
dec
adc
inc
scas
leave
inc
push
pop
xchg
ja
push
(bad)
mov
push
sub
push
and
or
fwait
fs
or
adc
inc
repnz
scas
clc
(bad)
(bad)
mov
in
inc
sub
jb
or
(bad)
jmp
adc
and
int3
loope
inc
loop
or
add
out
cli
(bad)
(bad)
call
in
adc
add
cdq
xor
sbb
or
fstp
add
fstp
std
outs
aad
in
icebp
pop
rol
sbb
inc
mov
inc
mov
(bad)
dec
pushf
adc
stc
dec
jle
mov
pop
inc
add
mov
push
(bad)
inc
sbb
hlt
inc
dec
jne
pop
sbb
pop
mov
mov
call
adc
adc
sbb
pushf
lods
aaa
pop
and
in
pop
out
(bad)
(bad)
jmp
(bad)
(bad)
inc
cmp
add
jb
cmp
(bad)
call
sub
xor
jmp
add
add
add
push
add
adc
nop
xchg
push
mov
adc
add
pop
adc
pop
in
fdivr
(bad)
inc
iret
(bad)
(bad)
call
nop
in
push
jb
adc
(bad)
adc
mov
cmovo
(bad)
(bad)
inc
or
(bad)
inc
or
(bad)
call
xor
add
add
out
and
lock
dec
jecxz
and
test
mov
push
loopne
(bad)
dec
add
(bad)
call
daa
gs
gs
add
pop
cmps
pop
fst
dec
pop
add
jmp
mov
lock
push
mov
(bad)
call
or
mov
and
or
or
test
cld
(bad)
call
dec
add
add
nop
xchg
xchg
sbb
call
xor
cwde
push
inc
add
std
(bad)
and
adc
inc
dec
leave
sbb
sub
iret
rcr
daa
jbe
add
loop
pop
adc
inc
add
stc
ins
and
sub
inc
gs
mov
(bad)
and
out
adc
and
daa
add
sbb
cmp
stos
xor
or
fwait
and
and
pop
aad
fcom
in
sbb
push
and
adc
int
add
(bad)
call
out
mov
add
push
fisubr
xchg
xor
mov
push
repnz
or
add
and
inc
les
sub
dec
mov
nop
push
jo
adc
xor
ds
jbe
(bad)
inc
add
sub
and
sbb
(bad)
push
jmp
call
add
add
in
(bad)
(bad)
stc
add
daa
cmps
jmp
(bad)
jl
(bad)
(bad)
jle
repnz
(bad)
inc
(bad)
(bad)
(bad)
clc
cli
cmc
inc
dec
in
call
inc
int3
retf
adc
adc
stc
ret
(bad)
(bad)
dec
inc
and
add
add
pop
cld
adc
cmp
jl
outs
jne
test
or
icebp
in
(bad)
dec
xor
and
ret
xchg
cmp
pushf
(bad)
(bad)
stos
add
lods
and
call
jle
pop
jle
(bad)
(bad)
call
(bad)
(bad)
call
in
(bad)
dec
(bad)
(bad)
mov
(bad)
(bad)
jmp
push
dec
jecxz
fs
ret
frndint
dec
ds
(bad)
(bad)
inc
jmp
call
or
xchg
cmps
std
(bad)
call
pusha
fcomp
(bad)
mov
fucomip
ins
imul
ja
add
push
or
sub
pop
adc
jne
into
vaddss
adc
dec
add
sub
popf
loop
or
retf
not
add
aad
je
sub
inc
pop
cmp
fwait
push
(bad)
push
adc
(bad)
xor
and
sbb
mov
adc
or
jmp
or
add
aam
clc
inc
mov
dec
ja
cmp
std
(bad)
jmp
xchg
pop
mov
call
add
mov
(bad)
(bad)
std
(bad)
dec
pop
addr16
std
sti
(bad)
call
inc
lea
push
adc
mov
push
sbb
ret
or
push
and
mov
in
(bad)
push
cld
(bad)
jmp
fmul
mov
enter
mov
cld
and
inc
test
(bad)
dec
add
add
in
adc
mov
or
stos
mov
repnz
mov
xor
(bad)
push
(bad)
nop
add
(bad)
call
(bad)
(bad)
jle
pop
nop
call
add
jmp
add
in
jl
sti
out
(bad)
in
out
dec
xchg
iret
(bad)
in
(bad)
dec
mov
or
pop
ja
or
fwait
mov
xchg
repnz
(bad)
call
jo
cmp
mov
inc
dec
pop
or
inc
ror
or
sbb
fincstp
fild
adc
inc
mov
pop
pop
test
loope
push
add
mov
test
adc
mov
xchg
icebp
call
popa
adc
cmp
xchg
pop
xlat
aas
adc
(bad)
(bad)
call
and
cdq
inc
add
inc
je
(bad)
push
and
xchg
or
add
repnz
push
adc
inc
movs
xchg
in
push
stc
sar
dec
shr
xchg
or
lahf
(bad)
rcl
mov
loope
cmp
enter
movs
xchg
cmp
mov
out
jmp
mov
mov
dec
int3
add
push
add
in
rcl
or
xchg
psubq
rcl
movs
mov
rcr
lahf
out
fwait
and
pusha
daa
scas
mov
mov
loopne
(bad)
call
(bad)
(bad)
(bad)
clc
xchg
lds
inc
mov
(bad)
pop
jns
stc
outs
mov
(bad)
(bad)
clc
xchg
mov
movs
in
hlt
xchg
clc
xchg
pop
adc
shr
inc
mov
push
jle
or
push
add
fsubp
sahf
add
clc
xchg
sub
scas
sub
and
sub
mov
mov
mov
jns
outs
idiv
test
repz
test
xchg
loopne
add
stos
mov
lock
and
or
mov
enter
nop
rol
lods
test
movs
inc
push
sbb
cwde
or
enter
sbb
xor
and
xchg
or
mov
inc
push
sbb
in
push
sbb
in
fcomp
fs
inc
fcom
shl
push
int3
enter
push
sbb
mov
fs
mov
pop
or
enter
dec
xor
and
and
and
sub
stos
enter
call
adc
sbb
push
mov
push
push
pop
dec
jb
dec
arpl
nop
das
mov
leave
out
pop
adc
pop
jb
in
aaa
adc
and
pop
hlt
es
push
movs
and
mov
mov
pushf
cwde
xchg
enter
nop
mov
test
enter
ins
jb
enter
lods
inc
leave
out
pop
sbb
pusha
jb
jg
outs
scas
add
inc
push
push
add
xor
mov
mov
add
leave
xchg
scas
ins
inc
test
std
dec
cmc
mov
adc
enter
repz
mov
stos
jg
jbe
jle
mov
xor
mov
xor
outs
das
mov
mov
push
out
(bad)
ss
call
xor
mov
div
sbb
imul
or
scas
shr
jg
add
or
data16
pop
and
enter
sub
lods
push
jmp
ror
and
jge
xchg
pop
xlat
add
enter
push
pop
rcl
dec
sahf
jle
rcr
shr
in
mov
arpl
sbb
out
adc
(bad)
mov
mov
push
push
sbb
or
push
adc
sub
movs
adc
or
or
std
ficomp
test
push
push
inc
or
pop
sbb
mov
jnp
ficom
(bad)
enter
inc
dec
cmp
stc
fcomp
jbe
call
push
pop
sbb
call
call
xchg
cmp
cld
in
call
pop
outs
scas
mov
comiss
inc
inc
dec
popa
lock
shl
adc
push
xor
push
push
into
hlt
std
mov
cmp
adc
mov
nop
lahf
ret
xchg
dec
mov
sub
cmp
sub
movhps
push
adc
cld
psubsw
call
xor
xor
jp
sbb
and
inc
xchg
jns
pop
add
or
mov
call
clc
std
xlat
call
imul
es
cs
test
call
mov
out
(bad)
mov
int3
ja
sbb
fucomp
aas
mov
pop
mov
cmp
dec
sub
aas
push
fild
or
pop
dec
adc
cs
cmp
adc
repz
jmp
out
inc
cmp
push
dec
pushf
(bad)
xor
mov
test
cmps
or
dec
mov
push
sub
bound
dec
loope
mov
test
fadd
adc
fdivr
and
leave
in
cmps
cld
sbb
xor
scas
arpl
imul
repz
mov
or
dec
or
popa
mov
and
push
mov
or
icebp
mov
sub
mov
or
push
int
je
jb
sub
add
sub
ins
fwait
popf
xchg
loope
pop
push
push
mov
iret
(bad)
test
sti
push
pushf
mov
pop
cdq
cmovo
fcom
cmps
adc
mov
retf
xchg
popa
ret
sti
rcr
push
in
xchg
jmp
dec
fsubr
or
aas
jae
fwait
rcr
or
or
lods
mov
and
fsub
push
stos
mov
dec
repz
in
lods
call
js
aad
or
hlt
add
je
mov
dec
lods
push
pushf
test
pop
int
or
xor
add
push
jecxz
xor
jmp
sti
push
sbb
push
or
lods
cmc
je
add
daa
int
sahf
mov
lea
loopne
adc
fbstp
sbb
loopne
jmp
add
cmp
lds
mov
test
pop
nop
and
pop
and
cmp
daa
daa
or
ror
adc
lahf
jmp
out
ja
push
and
xchg
inc
test
mov
lods
mov
ja
loope
shr
mov
dec
(bad)
leave
xchg
cwde
leave
dec
and
clc
dec
mov
add
es
test
mov
outs
in
adc
(bad)
out
mov
ja
mov
loope
mul
out
out
cmp
scas
adc
ficom
out
xlat
not
(bad)
js
adc
xor
cmc
xchg
call
adc
adc
stc
ds
jnp
push
adc
(bad)
cmp
and
fcomp
mov
call
cmps
clc
into
mov
and
push
sub
pop
push
add
lods
push
out
popf
lods
iret
inc
sub
fidivr
fcmovnbe
cld
call
fld
idiv
cdq
test
lods
add
rol
ret
bound
pushf
jmp
sbb
ror
mov
ror
add
stc
jo
xor
push
fsubr
dec
mov
cld
mov
cmp
loop
sub
sub
and
jne
popa
pushf
aam
dec
dec
mov
call
push
call
xor
das
hlt
push
inc
push
mov
loopne
mov
xor
xchg
cmp
mov
adc
sbb
clc
adc
add
les
bound
mov
repz
int
test
in
push
pop
pop
imul
mov
gs
jp
mov
pushf
cmp
sahf
icebp
mul
test
fdecstp
popa
(bad)
out
mov
clc
pop
les
ret
push
movs
adc
enter
ud2
jne
or
int3
call
xchg
pushf
jo
js
inc
lock
cmp
push
call
adc
dec
mov
add
push
push
mov
pop
repz
cmp
xchg
pusha
mov
mov
pop
push
push
mov
adc
jmp
iret
push
jbe
pop
pop
retf
icebp
in
mov
(bad)
sub
inc
into
mov
cmp
pop
repnz
and
pop
nop
cdq
sbb
mov
bound
cmc
(bad)
xchg
cld
sbb
adc
imul
or
jle
lods
sub
or
test
add
push
(bad)
jmp
mov
dec
pop
push
int3
jl
into
mov
mov
dec
ss
adc
add
ret
add
and
sub
loopne
push
int
cmp
push
fcmove
pop
fcom
ror
or
sbb
pop
sbb
push
(bad)
daa
clc
pop
call
push
nop
out
xchg
in
scas
call
lea
mov
psubw
pop
sub
sbb
cmp
call
push
mov
jnp
sahf
pushf
xchg
pop
clc
add
adc
call
mov
je
jmp
daa
jl
call
sbb
inc
and
or
js
xchg
push
inc
das
push
adc
xor
lods
and
ds
hlt
adc
ins
stc
arpl
ja
repnz
adc
mov
sbb
test
fimul
(bad)
addr16
fsub
daa
or
pop
stos
test
jns
push
scas
mov
repz
call
dec
mov
lds
mov
sbb
pop
xchg
adc
out
mov
in
inc
daa
add
jns
add
and
push
inc
mov
bnd
pop
cld
std
loopne
cld
std
rcr
sbb
mov
or
inc
clc
cld
sbb
pushf
in
aad
in
ins
fisttp
cmp
xlat
fcomip
sub
imul
sbb
mul
iret
enter
(bad)
arpl
iret
add
in
push
xchg
out
out
jo
push
std
test
push
push
jnp
(bad)
sahf
in
test
inc
cmp
mov
lahf
mov
sbb
nop
popa
sbb
ss
sbb
fist
leave
icebp
mov
in
mov
call
adc
in
push
lods
out
sbb
imul
ss
push
inc
mov
rcr
fdiv
xor
jg
call
inc
jbe
pusha
jmp
jns
shl
inc
clc
cmp
mov
inc
jo
sub
popf
mov
or
or
push
in
jnp
out
cmps
xor
push
fisttp
add
mov
add
or
jae
mov
mul
cmp
add
ds
mov
jns
inc
je
add
je
push
adc
rep
fstp
loopne
scas
sti
lock
cdq
fs
shl
idiv
lock
in
mov
sbb
xor
lock
int3
and
enter
mov
push
les
enter
icebp
xor
inc
inc
lldt
or
test
sbb
repz
out
daa
les
repnz
shr
pop
pop
int3
and
pushf
sbb
mov
mov
mov
in
mov
sbb
cs
dec
dec
pop
repnz
mov
loopne
mov
xchg
out
out
loopne
fbld
mov
mov
loope
sti
push
gs
mov
loopne
adc
in
pop
sahf
cmc
jnp
cmp
mov
add
int
addr16
loopne
push
adc
jg
cmp
xor
xor
or
xor
je
adc
or
jnp
or
and
gs
xor
sub
jae
adc
cmp
or
or
bound
add
inc
add
push
in
sbb
cs
and
push
lahf
adc
or
pushf
leave
(bad)
jb
arpl
xchg
stos
add
jae
aas
push
jns
es
adc
sub
ffreep
sbb
or
push
pop
ret
jae
dec
js
inc
or
and
imul
xchg
push
inc
dec
sbb
or
dec
popa
cmp
adc
or
jo
inc
add
ins
hlt
jg
inc
jb
jbe
pusha
fbld
add
jg
gs
and
and
push
imul
dec
bound
and
adc
mov
shl
pop
adc
xor
mov
fld
fwait
in
mov
test
adc
mov
fisttp
sub
inc
mov
daa
xchg
adc
inc
shl
ret
pop
cld
shl
pushf
add
or
push
sbb
ins
or
inc
or
jnp
xchg
cmp
jl
and
sbb
sub
mov
fdivr
push
xor
lea
loopne
pop
out
in
ficom
test
xor
fst
call
push
add
jmp
outs
pop
pop
push
ins
xchg
pop
outs
loope
pop
in
or
mov
cmp
movs
or
out
hlt
pop
push
lahf
pop
push
sbb
(bad)
mov
mov
jo
mov
pop
inc
lds
add
xor
lock
outs
hlt
mov
jae
mov
or
clc
fcomp
dec
mov
out
fmulp
(bad)
in
scas
or
cmps
xlat
adc
jb
mov
bound
mov
dec
push
lock
and
ss
and
jge
movs
movs
cmp
dec
sti
les
fdivr
ins
neg
mov
fnstenv
rcl
adc
inc
inc
inc
inc
or
cmp
dec
sub
mov
add
add
or
int3
retf
pop
and
(bad)
into
cmps
(bad)
pop
aad
mov
leave
push
loop
test
jecxz
xor
neg
add
push
mov
pusha
out
clc
les
xor
mov
mov
add
xchg
daa
inc
addr16
jmp
jmp
cdq
pop
lods
es
out
movs
dec
mov
out
sbb
xor
(bad)
jmp
in
xchg
addr16
adc
cli
int
out
add
mov
icebp
fistp
iret
and
call
hlt
jg
sti
test
add
test
jns
or
pop
sub
int
out
jbe
sbb
mov
pop
repnz
cmp
and
sahf
inc
xchg
out
jae
add
cs
call
cld
push
dec
add
jns
add
aas
ds
mov
not
xchg
mov
in
sbb
add
add
or
xor
or
ss
add
or
cmp
fs
push
in
xor
or
xor
fs
push
xor
and
push
dec
arpl
ins
mov
es
adc
data16
mov
fiadd
mov
mul
adc
sbb
lds
mov
data16
mov
mov
adc
push
test
push
pop
cmp
cmp
repz
std
hlt
xchg
loope
call
pop
sbb
inc
fwait
jnp
icebp
push
adc
(bad)
jb
push
dec
movs
repnz
push
fsubr
aam
dec
adc
(bad)
cmp
cmp
push
movs
shr
out
out
int3
mov
push
fsubr
sbb
mov
push
out
cmps
mov
ret
sbb
(bad)
xchg
in
scas
sbb
mov
sahf
add
hlt
ss
in
hlt
jmp
and
push
xlat
push
fst
fwait
cmp
stos
fld
adc
daa
es
in
xchg
jno
mov
arpl
add
icebp
data16
push
pop
aad
adc
ret
jnp
ffreep
adc
inc
push
and
arpl
sub
or
mov
pop
fs
push
inc
inc
inc
xor
add
pop
inc
retf
and
push
push
das
stos
cwde
adc
push
stc
and
jae
sub
jae
sub
adc
fsubrp
outs
js
mov
cs
sbb
ja
sub
cld
mov
mov
or
and
sbb
xchg
mov
mov
mov
mov
xor
aam
jbe
or
add
add
out
xor
add
in
aad
xlat
pop
fisubr
mov
push
cld
cmp
out
mov
sub
(bad)
jo
fs
add
in
test
add
xchg
mov
push
push
jnp
icebp
loopne
cld
fidivr
cmp
cmp
add
(bad)
frstor
add
jb
xor
aad
sar
xor
int
add
sub
push
cmp
mov
sbb
xchg
mov
push
shl
cld
test
inc
mov
mov
ret
mov
fist
or
push
fidivr
cmp
test
nop
ret
cmp
jg
mov
mov
popf
or
fcmovu
push
xor
pushf
add
test
je
dec
test
(bad)
int3
jbe
arpl
jmp
mov
push
hlt
repz
inc
mov
in
jle
or
inc
add
push
inc
frstor
add
or
dec
add
popf
add
mov
into
into
sbb
pop
lock
jle
clc
fucomi
out
dec
je
jmp
iret
sbb
push
add
ss
loop
and
int
test
push
iret
or
push
add
loope
push
adc
mov
call
push
lods
mov
(bad)
adc
call
sbb
js
mov
repnz
shl
out
sbb
aam
stos
fild
iret
in
test
sbb
in
adc
fsubr
lea
ins
cmp
mov
rcl
sar
pop
shr
test
fisttp
das
in
in
push
xchg
push
(bad)
repz
pop
mov
pop
mov
inc
dec
sbb
dec
data16
mov
out
xor
pop
shl
push
push
dec
repz
in
adc
sbb
sbb
adc
call
add
pop
dec
pop
inc
dec
pop
pop
add
pop
jnp
fcom
cmc
cmp
call
mov
pop
out
test
pop
jnp
inc
cli
aam
int3
push
jl
pushf
out
sbb
ret
or
ins
data16
scas
(bad)
aaa
or
outs
mov
adc
inc
add
inc
or
enter
ror
cwde
rol
or
cdq
gs
aaa
fist
mov
sbb
mov
xchg
xchg
sbb
scas
cmc
pop
imul
rcr
cmp
neg
lds
hlt
inc
in
sti
sub
fld
call
and
cld
mov
sub
pop
jno
leave
lahf
xchg
xchg
shr
call
xor
sbb
jns
ds
mov
leave
pusha
jno
adc
out
add
nop
or
fidivr
inc
push
and
(bad)
mov
gs
mov
fistp
pop
inc
dec
add
pop
ja
push
xchg
and
xor
jmp
mov
mov
into
or
mov
xor
out
push
push
cmp
or
(bad)
adc
call
fdiv
ficom
iret
outs
adc
jnp
mov
lahf
jo
mul
call
inc
loopne
nop
dec
repnz
dec
iret
loopne
repnz
xlat
into
cdq
cmp
into
dec
in
pop
and
jnp
pushf
ja
adc
ret
pop
jb
das
or
xor
mov
nop
mov
ds
sbb
mov
push
mov
inc
xlat
repnz
fsubr
fsubr
or
(bad)
(bad)
add
adc
rcr
(bad)
mov
enter
jmp
daa
cmp
fwait
gs
xchg
jno
(bad)
cmc
fld1
cmp
add
dec
mov
jge
or
jbe
xor
fstp
cmp
js
pop
mov
sbb
cmp
xor
jecxz
call
or
call
jmp
mov
data16
cmp
repz
ds
cmp
test
xchg
test
jg
jb
mov
or
dec
je
jmp
sti
mov
(bad)
add
popa
mov
sub
mov
int3
sahf
ret
dec
mov
aam
out
jnp
adc
ret
and
cmp
fdiv
fs
or
jne
iret
jge
int3
jl
mov
rol
push
pop
aaa
push
pop
xchg
pushf
xor
aad
mov
mul
cmp
jmp
adc
and
or
inc
sbb
imul
aad
push
or
jecxz
xor
mov
mov
mov
addr16
xchg
sub
imul
out
enter
sub
pop
lds
xchg
push
jmp
xchg
mov
cli
rol
aaa
jecxz
dec
mov
enter
enter
xchg
sti
adc
mov
in
test
or
aam
retf
xchg
int
jb
retf
sbb
aam
push
leave
add
nop
pop
jb
mov
xchg
iret
xchg
xchg
pop
aad
ror
xchg
cmp
sub
push
les
leave
lahf
xlat
(bad)
call
and
into
sar
in
sar
mov
shl
ret
xlat
ins
scas
xor
(bad)
adc
push
mov
add
aam
adc
pushf
push
push
push
shl
push
push
xor
mov
dec
loopne
idiv
fs
lds
shl
or
dec
or
push
add
cdq
test
ror
mov
mov
and
push
push
sti
add
mov
pop
out
jo
pop
fcomp
iret
scas
mov
jl
jb
popf
mov
jne
add
inc
arpl
ret
lods
je
movs
jne
dec
call
fidiv
adc
dec
cmc
or
or
dec
push
in
fwait
int
inc
sub
jno
mov
shl
mov
dec
inc
push
dec
inc
dec
fdivr
dec
push
gs
and
xor
adc
imul
add
(bad)
adc
xor
inc
xor
dec
pusha
add
das
outs
xchg
les
push
rol
and
aaa
stos
in
scas
loop
pop
ins
pop
gs
daa
imul
jns
mov
add
imul
shr
mov
rcr
inc
add
and
stos
loopne
xchg
mov
mov
jecxz
and
add
push
fistp
fcmovbe
pop
dec
xchg
ja
fadd
dec
sub
or
mov
fmul
(bad)
mov
mov
adc
test
mov
mov
mov
movs
sbb
dec
call
sbb
arpl
and
or
push
pusha
gs
(bad)
fiadd
cmps
imul
cmps
imul
cmps
imul
adc
xor
shl
cs
pop
ins
dec
shl
mov
scas
cmp
xor
loopne
(bad)
cli
pop
or
xor
mov
pop
dec
addps
int
pop
xchg
mov
call
add
adc
mov
push
pop
add
xor
shl
movs
mov
fcmovbe
je
shl
add
dec
shl
xchg
stos
xor
xor
into
fsubrp
jne
dec
push
or
inc
shl
jbe
xchg
outs
shl
hlt
mov
cdq
mov
inc
push
pop
call
test
cmps
imul
call
adc
mov
pop
pop
mov
inc
or
gs
jb
daa
sbb
mov
arpl
push
xchg
jne
mov
outs
add
jbe
dec
outs
jae
xor
mov
adc
add
jp
push
retf
or
pop
jecxz
jmp
rol
xlat
imul
xchg
or
inc
cdq
xchg
and
push
push
fisttp
adc
dec
or
inc
sub
mov
push
jnp
outs
inc
adc
fs
leave
add
xchg
sub
dec
nop
das
pop
push
sub
mov
cmp
fs
add
in
dec
imul
mov
or
inc
js
rol
mov
or
outs
sbb
test
fs
add
rcl
les
and
mov
inc
sub
data16
jbe
ins
inc
ja
or
pop
test
popa
dec
gs
add
fs
imul
mov
jns
ins
push
push
or
jae
sbb
or
dec
adc
inc
test
mov
push
or
ja
sub
bound
cmp
popa
addr16
push
pop
in
inc
outs
js
jmp
gs
push
cmp
fadd
mov
jne
jns
inc
sub
cdq
fstp
push
adc
pop
div
outs
jnp
jne
aas
mov
test
addr16
push
push
ins
jae
pop
or
and
popa
add
mov
adc
xchg
mov
inc
push
fwait
dec
and
jne
(bad)
inc
mov
inc
imul
add
outs
jne
arpl
jne
xor
mov
ret
cmc
xlat
cmp
xadd
push
adc
stos
pop
loopne
xchg
sub
inc
cmps
movs
push
ror
outs
push
dec
inc
out
rcr
adc
pop
scas
adc
add
push
les
iret
and
adc
rol
lea
xchg
movs
mov
clc
js
das
vmwrite
mov
add
retf
rdmsr
movs
and
dec
leave
jo
jnp
push
jae
ret
lock
adc
inc
ret
dec
je
cld
adc
fdivr
xchg
inc
inc
cmp
jns
ret
in
test
push
jb
jae
loope
adc
jmp
add
pop
arpl
rcr
pcmpeqb
lock
popa
shl
jb
dec
jae
add
test
sbb
xor
mov
dec
fcomp
fsub
pusha
push
arpl
xchg
xor
fistp
lock
or
outs
jne
cmp
add
push
ret
and
add
pop
cmp
adc
cmp
imul
call
outs
add
dec
pusha
fadd
or
pop
adc
jns
arpl
arpl
jbe
xor
out
inc
out
or
bound
push
daa
outs
pushf
in
jnp
pop
jb
jbe
outs
push
jg
sub
jge
pop
sbb
outs
fs
cwde
popf
in
cmc
dec
bound
test
lods
cmp
push
or
out
jge
add
int3
pop
mov
push
fwait
in
rcr
add
mov
mov
pop
sbb
sub
mov
adc
ss
shl
pusha
(bad)
js
add
jnp
pop
nop
das
inc
pop
test
push
aad
sbb
das
add
fld
add
xchg
pop
nop
jle
add
push
add
and
add
test
add
dec
inc
dec
stos
mov
nop
pop
pop
push
adc
(bad)
cmp
aaa
mov
pop
fwait
cmp
sub
add
in
push
pop
mov
bound
sub
(bad)
push
das
imul
sti
inc
push
jp
or
adc
std
inc
lea
xchg
add
outs
popf
xchg
pop
gs
call
push
outs
lahf
xchg
sahf
pop
nop
xchg
aad
ins
adc
fwait
xchg
(bad)
aaa
push
imul
jg
add
cdq
aaa
sidtd
add
fsub
push
mov
jg
nop
inc
pop
and
add
enter
adc
cmp
fsubr
cmps
sub
push
cs
xchg
mov
cmps
pop
pop
push
or
pop
fist
inc
mov
or
bound
pop
jnp
pop
es
mov
push
outs
daa
shr
adc
or
mov
cmp
out
jle
adc
or
adc
ds
lock
jge
mov
inc
retf
jne
mov
add
movzx
mov
pop
sbb
xor
in
in
mov
push
push
push
push
mov
cmp
std
clc
inc
les
cmp
inc
jmp
push
(bad)
aas
adc
pop
mov
imul
dec
push
dec
and
cmp
jne
lea
dec
mov
test
pop
adc
(bad)
mov
retf
sub
mov
add
cmc
push
call
fsubr
pop
jge
mov
push
outs
sti
mov
jmp
js
push
xor
cmp
pop
jle
into
fcomp
fmul
xchg
mov
das
je
inc
and
jne
imul
adc
and
xor
mov
add
inc
push
cmp
mov
pop
(bad)
push
test
pop
leave
aaa
into
(bad)
jmp
inc
ret
or
push
push
pop
loop
adc
mov
call
add
in
add
mov
imul
adc
sahf
push
loopne
and
push
loop
call
aad
push
jl
push
cwde
sti
add
pop
stos
xor
push
or
sbb
ja
pop
jle
mov
cmp
mov
out
sub
shr
push
sub
cmp
lock
cmp
je
int
add
scas
stos
xchg
adc
jp
xchg
push
cmps
call
adc
call
outs
add
adc
push
btr
je
shufps
gs
adc
mov
dec
sub
mov
shl
xor
shr
lods
jne
ja
adc
xor
dec
sub
mov
add
sbb
pop
mov
jp
test
mov
pop
sub
mov
jo
ret
sbb
ffreep
or
jmp
mov
mov
push
movs
dec
inc
ret
int
jno
sub
jg
jle
add
jmp
pop
adc
fwait
fwait
int
adc
sub
daa
mov
mov
adc
pop
icebp
or
xchg
js
fld
aas
dec
adc
pop
je
xor
ja
call
cmp
inc
push
push
mov
sub
test
ja
aaa
mov
or
jmp
int
js
jge
mov
repnz
push
push
inc
psubsb
sub
loop
pop
dec
add
jnp
inc
mov
aam
jo
pop
cwde
push
push
adc
rcr
fldcw
jle
fist
pop
imul
sub
in
jne
pop
push
xchg
sbb
inc
push
inc
push
xor
cs
cmps
lods
jmp
fadd
push
xchg
adc
(bad)
lea
cmps
pop
outs
or
mov
pop
lea
jbe
retf
lea
mov
pop
or
dec
and
dec
mov
jl
std
dec
inc
ss
push
xchg
ins
cdq
movs
jb
push
pop
adc
stos
adc
xchg
mov
inc
add
inc
pop
inc
inc
pop
clc
mov
movs
or
push
ror
add
xchg
inc
pop
mov
fistp
(bad)
std
cdq
or
jns
iret
add
js
dec
xchg
xchg
xchg
or
sbb
cmp
adc
inc
or
push
sub
popf
cmp
adc
in
call
push
pop
jmp
xchg
mov
clc
lea
pop
scas
push
es
ins
add
push
push
cli
mov
jo
mov
mov
adc
scas
sbb
jae
js
jl
add
movs
rcr
or
jbe
call
(bad)
call
in
fs
sbb
shr
call
cmp
add
push
sbb
inc
adc
mov
fdiv
push
sbb
push
or
jns
pop
jns
pop
jo
cs
pop
arpl
push
loopne
popa
mov
sbb
pop
sbb
sahf
movs
aaa
scas
daa
push
jp
fdiv
jne
outs
popa
pop
out
sub
adc
mov
xlat
or
pop
push
or
sub
inc
aaa
loope
or
xchg
or
pop
mov
push
ins
ficom
cmp
push
mov
mov
cmps
neg
adc
(bad)
push
push
or
inc
or
pop
adc
outs
pop
add
scas
push
cmp
outs
jmp
mov
and
mov
push
shl
lds
or
push
pop
call
cmp
push
je
adc
arpl
fdivp
mov
repz
aas
fucom
repz
inc
cmp
sbb
pop
ror
sbb
sbb
jle
xlat
mov
ja
call
adc
sbb
cmps
ds
aad
jmp
pop
das
ins
mov
aas
sub
add
sbb
mov
pop
xor
pop
fmul
push
cmp
adc
fsub
mov
shl
pop
and
sub
out
pop
push
call
mov
mov
test
cmp
fcom
xchg
mov
jl
mov
pop
fidivr
shr
lahf
ins
mov
push
je
pop
(bad)
mov
dec
add
pop
les
dec
inc
mov
call
or
lock
pop
fwait
dec
dec
or
mov
retf
adc
mov
push
outs
push
lock
fstp
les
movsx
pop
push
cdq
gs
mov
je
enter
pop
push
push
mov
call
xchg
jo
fsub
dec
jne
call
xor
mov
popa
jmp
call
in
sub
in
lea
ds
push
mov
call
loopne
jge
dec
push
ret
push
pushf
cmc
js
and
adc
imul
inc
jbe
push
shl
or
aad
dec
cmp
mov
aam
push
mov
clc
aaa
mov
mov
pop
add
cmp
rcr
or
push
es
sub
or
ret
or
adc
push
in
jg
or
ins
inc
cmp
ret
add
add
gs
ja
mov
inc
xor
jmp
inc
inc
pop
outs
push
pcmpgtd
fxch
push
test
or
iret
ds
stc
pop
push
push
je
inc
data16
(bad)
pop
mov
jo
jge
push
add
push
jns
sub
sub
add
rcr
sti
add
jbe
repnz
push
cmp
ret
cmp
adc
call
xor
pop
add
mov
sbb
jg
or
in
adc
mul
imul
(bad)
sbb
sbb
cli
xor
imul
movs
add
sub
dec
call
int3
das
pop
jo
(bad)
sbb
jmp
std
cmp
jne
call
retf
int3
(bad)
sar
adc
or
ldmxcsr
cmp
gs
clc
xchg
in
jno
int3
data16
inc
je
push
in
jge
cs
inc
pop
out
out
leave
and
fcomp
inc
push
xchg
sub
stos
push
jmp
lock
loopne
sub
sbb
pop
cld
dec
adc
sar
xor
aas
jns
test
cmps
xchg
pop
mov
sbb
and
xor
ins
mov
push
adc
sbb
cmp
sub
sbb
repz
in
outs
iret
cmp
jmp
jo
pop
mov
les
cmp
sub
loopne
jge
js
jg
or
sbb
add
and
or
push
adc
clc
sub
(bad)
(bad)
xor
test
push
inc
repz
dec
sar
or
pcmpeqw
inc
xchg
sbb
push
jp
add
pop
push
push
cld
fmulp
arpl
mov
add
pop
sub
cmp
out
test
or
inc
inc
outs
xor
sbb
mov
rol
mov
gs
and
add
push
xchg
clc
cld
sbb
jo
pop
or
mov
adc
lea
xor
mov
sbb
arpl
dec
fsub
js
stc
sbb
push
xor
jp
sbb
add
jae
test
add
xchg
popf
add
addr16
ds
sbb
retf
lock
retf
sahf
pusha
sbb
popa
iret
and
hlt
aad
xor
pop
in
mov
cmc
adc
fstp
stos
hlt
jne
addr16
inc
in
stc
aas
pop
imul
jbe
out
sti
adc
push
out
repz
pushw
mov
ins
leave
fadd
fsub
push
es
inc
pop
(bad)
adc
xor
daa
in
or
gs
mov
sbb
imul
es
sti
rcl
dec
push
dec
pop
and
fiadd
jle
iret
ss
outs
popa
jo
int
pop
mov
mov
lock
cmp
mov
adc
fsubr
cmp
test
mov
dec
push
(bad)
mov
add
mov
in
push
in
add
push
call
push
push
loope
fsub
inc
inc
lea
xchg
sti
mov
inc
cmc
pop
sub
adc
sbb
sbb
fwait
int3
jmp
and
and
adc
or
and
and
add
cld
inc
inc
inc
sahf
jo
hlt
lock
jg
pusha
inc
call
or
loope
cli
lds
lods
push
inc
inc
retf
pop
or
(bad)
mov
int
xor
movs
mov
xor
int3
add
ins
inc
test
mov
xchg
inc
jnp
mov
jb
neg
mov
sub
add
cli
mov
jl
mov
dec
rol
retf
shl
mov
jmp
cmp
and
ins
lods
cmp
pop
jae
popf
inc
push
dec
outs
pop
or
test
or
cli
and
cmp
push
mov
stc
adc
stc
and
sbb
push
cmp
add
mov
or
xor
pop
cmp
cmp
mov
mov
retf
adc
xor
or
cwde
sbb
in
enter
(bad)
or
clc
push
or
mov
and
cmp
ja
and
xlat
leave
mov
out
push
cmp
dec
std
mov
fimul
mov
xor
sbb
sbb
and
push
add
xchg
sub
sbb
add
out
dec
inc
xor
jne
pop
jbe
inc
cmp
fist
and
test
cmp
jbe
pop
cmp
cld
jbe
test
popa
add
clc
mov
rep
jmp
fistp
std
sub
or
loopne
add
pop
test
fcomp
lea
pop
cld
and
mov
ror
test
ins
(bad)
in
add
in
and
lods
les
dec
sub
xor
cmps
bnd
xchg
nop
and
inc
aas
mov
jne
pop
push
dec
add
aad
shl
and
mov
xor
push
mov
in
dec
shl
hlt
clc
mov
shl
cld
cld
hlt
(bad)
neg
add
or
lock
pop
jp
mov
xchg
add
or
adc
or
shl
or
and
jbe
dec
or
add
adc
(bad)
stc
mov
or
nop
sbb
cmp
or
add
outs
add
outs
leave
xlat
pop
dec
push
mov
pop
enter
mov
sub
daa
and
mov
add
je
test
jg
add
int3
inc
fdiv
and
sbb
call
adc
imul
imul
adc
and
jae
mov
je
adc
scas
lea
movs
bound
inc
out
lea
cmps
and
mov
xchg
xchg
adc
jmp
sbb
cmp
je
add
adc
or
fcmovbe
mov
jecxz
or
(bad)
jle
loop
sub
mov
movs
mov
xor
and
add
xor
add
and
mov
je
pop
xor
cmp
je
std
out
cmp
je
test
je
shr
fimul
je
adc
xchg
sub
mov
(bad)
aaa
push
std
cld
ret
in
push
js
mov
jmp
sar
jne
sti
add
jp
cmp
mov
shr
push
ins
test
and
test
mov
push
push
test
int
jns
fimul
call
std
jmp
push
push
lods
pop
cld
pusha
or
sbb
das
mov
(bad)
out
pop
mov
mov
imul
fisttp
mov
imul
xor
div
push
rol
ficomp
adc
push
cmp
daa
(bad)
data16
ret
add
jnp
mov
mov
(bad)
adc
xchg
inc
add
rcr
adc
and
and
(bad)
std
shr
push
xor
push
push
mov
lods
loop
mov
(bad)
movzx
push
sti
loopne
mov
push
mov
xchg
ss
add
into
adc
inc
jmp
adc
aaa
jmp
je
push
sub
rdpmc
fcmovnu
mov
adc
add
mov
and
(bad)
std
add
lea
xor
iret
cmp
ret
xor
cmps
pop
mov
xchg
imul
shr
cmp
stos
push
xchg
in
sub
pop
inc
loope
push
add
add
not
jecxz
adc
enter
add
and
lock
ins
adc
std
test
xchg
fld
cmp
dec
jecxz
hlt
and
mov
mov
or
jno
stos
xor
push
pushf
popa
loop
(bad)
pop
xchg
xor
push
mov
push
mov
pop
(bad)
call
mov
fisttp
bound
mov
jae
sar
sub
imul
ins
aaa
enter
mov
ret
push
push
jne
ds
fwait
jmp
clc
icebp
sbb
push
gs
loope
jg
test
xor
(bad)
loopne
xchg
add
imul
mov
add
aad
inc
push
gs
test
into
aas
or
movs
pop
lock
inc
cld
dec
cmp
jb
push
movs
clc
jne
pop
inc
jns
xor
loop
inc
adc
inc
cmc
inc
fs
pop
rol
cld
imul
mov
daa
sbb
fld
push
inc
mov
cmp
xor
stos
(bad)
test
dec
push
push
shr
inc
fidivr
sbb
push
cmp
jl
add
jg
sbb
mov
jo
aaa
mov
dec
lods
in
sub
cmp
pop
ins
es
xlat
push
call
pop
and
mov
mov
mov
jae
sub
div
sub
ja
pop
and
mov
cmp
(bad)
mov
pop
hlt
outs
cmps
xor
pop
pop
cmp
pop
jge
cmp
dec
jle
in
call
ja
adc
cmc
shl
adc
mov
or
test
xor
cdq
and
imul
or
or
mov
adc
dec
cld
push
push
mov
push
mov
cwde
call
scas
nop
mov
push
inc
mov
add
(bad)
add
or
sahf
inc
inc
inc
aaa
and
push
aam
test
fneni(8087
inc
adc
dec
je
xor
loopne
or
inc
outs
cmp
dec
lock
xchg
imul
fisub
aam
test
push
jmp
ret
mov
sbb
inc
enter
idiv
mov
movs
mov
and
and
sbb
adc
dec
dec
repz
xchg
fstp
xor
mov
mov
sbb
mov
dec
push
fnstenv
jnp
retf
add
push
xchg
and
mov
sahf
sbb
mov
call
test
pop
fsub
or
cmp
push
push
push
js
push
test
aas
xor
lea
(bad)
lock
or
cmp
push
push
loope
mov
in
sbb
mov
call
dec
out
push
mov
(bad)
mov
adc
jnp
retf
stos
scas
stos
pusha
bnd
xchg
cmps
ds
sar
inc
data16
sbb
sub
or
jg
pop
sub
push
mov
test
jno
lods
jbe
shl
retf
pop
sbb
cs
mov
adc
xchg
(bad)
cli
sbb
or
jecxz
sub
fisub
or
outs
mov
mov
add
fwait
leave
fmul
cld
mov
add
cli
mov
fcom
sbb
retf
sbb
clc
std
cli
xor
pop
push
dec
sub
push
popa
daa
cs
mov
loopne
and
push
add
mov
les
js
hlt
(bad)
mov
xrelease
out
retf
and
iret
pop
and
jb
test
loopne
fidivr
sub
gs
jmp
mov
mov
dec
in
(bad)
sbb
adc
pop
fwait
xor
jae
sbb
adc
loopne
and
enter
cmp
cmp
lods
adc
xor
sbb
jno
push
adc
jge
dec
pop
pop
retf
std
pop
fld
xor
jb
mov
jmp
call
call
push
std
sbb
jnp
pusha
call
test
je
add
popf
js
ror
pop
fdiv
sbb
mov
int
mov
sbb
outs
mov
mov
shl
or
lds
or
cli
movs
jb
or
outs
mov
jmp
jmp
sub
mov
push
inc
pop
repnz
pop
cld
xor
movs
or
push
shr
pusha
jp
imul
lea
dec
aad
mov
inc
pop
push
add
pop
shl
or
mul
add
clc
jne
shr
aas
dec
pop
mov
dec
rcr
push
iret
jbe
sub
pop
call
or
or
and
mov
imul
jmp
call
and
dec
jne
jne
cmp
and
test
cmp
pusha
cs
adc
lods
pop
retf
add
movs
jl
or
mov
or
ror
aas
jnp
je
fild
xchg
in
inc
mov
inc
sub
adc
jmp
adc
retf
cmc
out
sbb
inc
ds
jbe
cli
mov
rcl
mov
push
mov
mov
ud2
push
mov
and
xchg
nop
xchg
dec
push
mov
mov
dec
or
adc
cmp
or
xor
mov
or
mov
sub
lods
ins
int
mov
push
add
in
xchg
dec
arpl
and
mov
jae
cmp
fld
mov
shr
jbe
sbb
lea
sbb
sub
lea
sbb
add
sub
pop
add
popf
test
or
mov
mov
popa
adc
adc
cmps
fisttp
(bad)
cmp
lsl
mov
sub
xor
fiadd
or
cmp
adc
paddd
or
adc
(bad)
adc
adc
ss
mov
mov
pop
adc
adc
push
and
push
repnz
sub
xchg
retf
enter
inc
aad
sub
adc
lea
gs
cmp
loop
jle
or
scas
mov
call
repz
lods
mov
inc
adc
das
sbb
lea
sub
dec
pop
jbe
add
cmp
dec
xor
push
mov
shr
push
lock
jmp
adc
sbb
not
call
pop
xchg
mov
cs
xchg
mov
cmp
sub
dec
iret
jle
imul
or
sbb
pop
jne
mov
cmp
outs
fwait
or
es
jne
outs
stos
mov
and
sar
or
test
jbe
jmp
es
je
out
push
call
mov
popf
sbb
mov
outs
mov
or
pop
adc
inc
test
(bad)
mov
unpcklps
fcmovbe
adc
push
cli
(bad)
dec
sub
xchg
mov
nop
inc
mov
mov
ret
mov
adc
push
push
gs
jle
inc
or
mov
jne
mov
cld
push
mov
and
or
je
sub
jecxz
data16
pop
pop
dec
jbe
sbb
into
jne
pushw
fs
mov
add
mov
push
stc
aam
mov
jg
jnp
inc
xor
outs
mov
pop
cmp
fwait
or
dec
and
and
adc
mov
test
pushf
shl
in
and
mov
cli
push
leave
jno
pcmpeqw
push
sub
or
xor
fadd
sub
fnsave
and
sub
cwde
sub
leave
cmp
test
or
jp
imul
inc
or
(bad)
fwait
xchg
mov
movs
retf
xor
push
inc
jge
les
ins
jae
bound
cmp
add
or
das
sub
jge
or
add
mov
cs
mov
movs
add
sbb
or
add
mov
mov
lock
and
adc
cld
pop
mov
push
and
sbb
sbb
xchg
mov
push
imul
push
pop
adc
cmp
add
push
push
push
push
jb
jmp
sbb
shl
pushf
clc
or
add
or
inc
pop
bound
loopne
inc
xor
or
xor
je
inc
mov
stos
ss
sbb
or
adc
adc
aam
dec
movs
inc
jl
and
xor
bound
adc
mov
sbb
mov
je
enter
pop
aaa
call
imul
sbb
xor
ret
add
add
dec
push
sti
test
inc
fld
mov
add
sbb
je
fidivr
ja
lea
dec
out
outs
and
or
push
mov
xor
out
jmp
call
lahf
adc
push
sub
xchg
jbe
aaa
push
outs
mov
jnp
or
clc
inc
pop
es
ficomp
lods
lea
or
inc
scas
sbb
jo
sahf
jecxz
inc
inc
mov
or
dec
or
mov
stos
adc
mov
jbe
dec
fadd
cdq
das
or
sub
jmp
shr
dec
lahf
xchg
dec
test
pop
pop
jecxz
pop
sub
cli
lds
pop
sbb
or
mov
add
cmp
inc
sbb
test
lock
lea
dec
pop
mov
pop
cmp
push
dec
repnz
cwde
clc
shl
pop
nop
sbb
pushf
nop
ds
xchg
or
or
inc
addr16
sub
add
ror
mov
inc
mov
popf
leave
inc
xor
or
mov
mov
retf
pop
aas
or
xchg
push
dec
inc
es
xchg
pop
pop
pop
adc
adc
mov
iret
adc
and
ret
rol
push
cmc
adc
imul
xchg
ficomp
rcl
pusha
inc
adc
jmp
sbb
push
jge
fstp
mov
movs
mov
retf
mov
jmp
idiv
(bad)
imul
mov
sbb
push
sbb
ror
pop
jae
mov
mov
add
je
jns
pop
sbb
leave
jne
and
push
pop
add
ja
mov
inc
sbb
or
add
loope
adc
add
sub
(bad)
ret
push
in
pop
dec
dec
mov
mov
punpcklwd
seta
retf
loop
cmp
cmp
jmp
pmulhw
push
mov
retf
fild
fstp
call
pop
fadd
cmp
or
call
sbb
lods
sub
je
cmp
cmp
jne
lods
push
xor
pop
shl
movs
inc
add
push
test
inc
into
adc
add
inc
add
xor
pop
xor
std
aas
ins
sbb
ins
add
adc
jmp
jne
add
nop
dec
mov
mov
mov
(bad)
push
outs
je
out
add
xchg
leave
leave
leave
sub
leave
cmp
leave
leave
inc
fs
cmp
jp
loopne
push
ja
loop
xchg
retf
(bad)
shr
xor
ins
(bad)
add
les
mov
push
mov
add
ja
lea
mov
inc
(bad)
sub
push
xchg
enter
(bad)
(bad)
fild
push
add
inc
mov
mov
push
jle
call
dec
or
adc
cmc
add
mov
dec
sbb
and
pop
push
inc
or
inc
or
sbb
inc
das
nop
pop
adc
enter
clc
rol
mul
sbb
aas
sti
scas
inc
hlt
sbb
add
loope
rcr
fs
sbb
xchg
sbb
cmp
jne
les
inc
push
push
or
mov
loope
frndint
sbb
aam
ins
and
jo
and
cmp
lds
jle
adc
cs
push
test
bound
lods
sbb
pop
mov
addr16
jmp
arpl
rol
mov
das
int3
fisub
jae
jne
neg
sbb
into
(bad)
(bad)
sub
mov
and
pushf
jb
mov
test
mov
sbb
(bad)
(bad)
adc
fdiv
jmp
ror
mov
fdiv
fsub
jmp
mov
push
hlt
dec
in
sbb
movs
cdq
and
adc
div
or
sbb
mov
or
aad
push
fidiv
aas
mov
bound
gs
adc
dec
mov
ss
fmul
xchg
fs
mov
jae
lods
jnp
je
push
fs
je
(bad)
mov
fucomi
jbe
add
jmp
mov
push
bound
cwde
mov
ret
xchg
fadd
mov
inc
inc
test
stc
dec
and
test
dec
mov
or
popa
add
outs
sub
add
adc
inc
add
test
inc
imul
(bad)
sbb
fsubrp
pop
add
data16
pop
mov
mov
(bad)
call
das
sbb
add
or
test
jae
or
lock
mov
pusha
push
mov
and
mov
(bad)
daa
or
push
je
inc
movs
ds
jae
or
push
pop
sbb
outs
gs
push
xor
pop
mov
jmp
sti
shl
sbb
mov
pop
mov
bound
rol
mov
or
es
inc
add
in
sub
cmps
sbb
mov
ss
pop
adc
or
fs
rol
les
retf
mov
and
psadbw
adc
ret
or
popa
add
mov
test
inc
test
adc
mov
hlt
push
adc
sti
xor
aaa
push
inc
rcl
cs
pop
frstor
fisubr
jl
add
jg
lea
cmp
(bad)
je
sub
sar
pop
mov
ja
(bad)
mov
mov
int3
add
loopne
cld
fdiv
mov
fsubr
js
dec
sub
cmp
je
pop
jo
push
jns
dec
dec
je
or
jl
xchg
jmp
inc
add
ds
ds
mov
sub
add
sub
sub
sub
mov
push
mov
jmp
adc
mov
push
mov
(bad)
in
inc
shr
jmp
add
cmp
rcr
mov
call
sbb
pop
pop
ficomp
dec
je
add
je
ins
je
ja
fdivr
hlt
pop
dec
std
mov
mov
movs
fbld
and
test
aas
ss
scas
popa
call
daa
xor
add
popf
sbb
adc
mov
sti
push
jo
popa
sub
cmp
xlat
jmp
xor
data16
mov
and
sbb
add
imul
gs
pop
adc
xchg
scas
inc
js
call
mov
or
adc
sub
cwde
inc
(bad)
out
or
ret
add
sbb
sbb
mov
addr16
inc
jae
adc
adc
into
xchg
fadd
(bad)
dec
mov
sub
pushf
or
aaa
cld
ins
outs
inc
inc
jmp
and
add
adc
mov
sahf
adc
dec
mov
push
ror
add
ja
cs
fisubr
and
xchg
and
sti
ins
dec
(bad)
hlt
cmp
pop
fsubr
sub
call
or
jl
jmp
mov
fsub
cmp
hlt
inc
adc
out
enter
add
push
pusha
and
sub
xor
xor
cs
call
mov
(bad)
sti
dec
gs
sbb
(bad)
or
imul
adc
and
je
inc
dec
int3
or
sbb
lock
dec
dec
mov
pop
push
mov
inc
cmp
pop
pop
shl
out
fsubr
loopne
mov
pop
pop
adc
pop
data16
test
js
or
cmps
cmp
mov
push
pop
popa
push
call
add
out
imul
xchg
and
enter
std
jnp
pop
ret
xor
and
lock
pop
aam
cmp
rcl
mov
adc
xchg
std
pushf
div
js
sub
jmp
mov
pop
cmp
mov
adc
pop
mov
mov
add
add
mov
jmp
dec
and
mov
mov
add
cdq
or
pushw
int
sub
sub
push
cmc
mov
popa
push
(bad)
and
or
mov
cmp
arpl
inc
ins
adc
and
(bad)
outs
je
pop
mov
mov
sub
fldpi
repnz
jp
loopne
lahf
lock
lock
push
sbb
jg
jl
jo
add
shr
inc
pop
imul
clc
jne
and
mov
or
sbb
mov
int
(bad)
jne
in
xchg
ret
mov
call
mov
(bad)
push
sbb
jl
mov
push
push
sub
or
call
adc
(bad)
int3
ret
xor
rcl
outs
push
jo
cld
mov
cmp
add
pop
aam
imul
sbb
mov
sub
jg
int
mov
cmp
outs
out
scas
jae
call
add
sbb
inc
ins
cwde
fdivr
hlt
cmp
shl
shl
test
push
mov
pop
(bad)
sub
or
je
sub
enter
in
loopne
iret
add
pop
lea
sbb
test
and
pop
mov
jge
mov
adc
jmp
xchg
adc
dec
xor
call
dec
sub
add
test
mov
js
fld
inc
inc
enter
clc
push
inc
call
sub
cmp
(bad)
mov
jo
cmp
xchg
push
(bad)
fld
push
sbb
cld
movs
jno
sbb
cwde
pop
sti
stc
jge
loop
sbb
adc
xor
jmp
inc
add
daa
inc
pop
daa
mov
data16
cs
xchg
shl
add
fcom
mov
cs
das
std
add
add
or
(bad)
pop
pop
sub
push
mov
out
mov
dec
mov
jle
fnstsw
inc
adc
lods
pop
mov
mov
in
jg
xchg
sbb
pop
xlat
mov
cmp
es
xor
push
inc
int
mov
sbb
jne
aas
ret
dec
loop
mov
mov
add
ss
or
or
pop
sar
sbb
add
push
imul
or
ja
ja
cmp
aad
dec
jno
pop
inc
fstp
data16
stos
ret
sub
xchg
mov
mov
or
and
push
pop
mov
sbb
outs
xor
inc
test
xlat
cmp
cmp
and
call
mov
test
in
and
sete
sub
or
jne
pusha
push
sub
mov
jb
fst
add
loop
cs
mov
cld
in
or
mov
and
mul
sar
lea
shl
mov
cmp
mov
dec
fs
and
cmp
mov
loop
adc
mov
xchg
ds
mov
psubw
in
or
xchg
lahf
inc
jle
test
cmp
call
cmp
aam
sub
hlt
pop
pop
pop
mov
push
push
stos
add
sahf
leave
push
mov
push
btr
imul
mov
sub
cmp
outs
cli
push
mov
ret
lea
add
add
aaa
pop
jmp
cmc
out
adc
cmp
or
or
inc
sar
mov
push
cmps
je
inc
xor
and
test
inc
mov
inc
fnsave
daa
jmp
pop
loopne
add
push
push
xor
add
and
shl
je
lea
fsubr
adc
out
mov
(bad)
mov
jl
mov
imul
sub
mov
inc
add
ret
jbe
xchg
adc
fs
add
push
pop
inc
push
hlt
daa
add
out
mov
xor
and
mov
retf
and
imul
out
push
inc
xor
pop
inc
xor
loop
mov
cwde
or
cld
gs
and
enter
adc
push
or
fbld
and
or
popa
inc
jbe
fidivr
inc
push
push
lea
test
pop
pop
pop
jb
aad
or
xor
and
out
or
add
push
or
or
stos
fimul
jne
add
push
or
or
sbb
mov
jmp
leave
int
push
lock
mov
aas
sahf
pop
push
xchg
push
lods
push
xchg
or
xlat
sub
add
pop
mov
sbb
inc
(bad)
mov
das
cmp
dec
into
mov
cmp
add
and
sbb
inc
mov
call
movs
add
and
jge
push
ret
add
imul
pusha
iret
loope
cmp
or
push
cmp
add
pop
dec
and
aam
cmp
mov
out
mov
xchg
fnstenv
add
pop
add
jne
pop
inc
mov
inc
sbb
shl
(bad)
or
push
mov
aaa
rcl
push
add
aad
push
mov
aaa
test
cmp
leave
outs
movs
test
or
gs
fwait
(bad)
clc
repnz
aam
aam
aad
add
mov
test
push
push
xor
and
pop
shl
nop
or
or
arpl
dec
sbb
sub
and
adc
pop
add
(bad)
mov
jmp
outs
aaa
fimul
cld
jg
repz
mov
inc
cmp
je
mov
push
and
sbb
mov
push
(bad)
mov
inc
inc
or
jmp
or
fsubr
sbb
ds
sbb
inc
push
dec
fidiv
inc
(bad)
sbb
mov
push
inc
and
or
jne
sbb
dec
sub
jmp
mov
dec
push
mov
sub
data16
pop
enter
adc
add
push
cwde
add
test
pop
mov
inc
mov
and
jnp
sbb
and
mov
arpl
jge
clc
in
cmp
or
sbb
xchg
ret
shr
mov
dec
outs
call
mov
inc
mov
jne
mov
mov
shl
jmp
test
aas
je
jg
sub
loop
ret
push
pop
sbb
cwde
(bad)
add
add
pop
inc
push
jnp
and
psubsw
push
mov
jp
jo
mov
sub
shl
xor
xor
inc
popa
or
dec
jnp
loope
push
and
mov
(bad)
data16
xchg
inc
mov
add
aas
daa
ret
push
mov
jnp
shr
sub
sbb
push
repnz
inc
sub
xchg
das
mov
xor
add
push
stos
pop
xor
cmp
nop
xor
in
sar
and
in
adc
ret
sbb
jle
into
lds
push
sahf
mov
jae
and
je
fcomip
and
or
jnp
add
inc
nop
outs
in
sub
inc
push
push
ror
stos
push
xchg
pop
mov
lahf
mov
(bad)
shl
mov
mov
mov
cmovs
add
mov
xor
dec
pop
lock
fisttp
mov
icebp
xchg
cmp
jae
cmp
and
pop
mov
mov
sar
and
pop
jmp
int3
rcr
lock
jae
lahf
lods
sbb
or
cmp
xchg
idiv
ins
add
push
clc
addr16
fbld
addr16
mov
fstp
cmp
xor
shr
sbb
pusha
or
mov
push
mul
rol
sahf
dec
jl
push
or
cdq
outs
adc
xor
lock
loop
or
cmp
sbb
adc
or
and
pushf
sbb
pop
or
pop
inc
aas
imul
inc
cmp
jl
pusha
pushf
and
cmp
pop
pop
stos
dec
dec
mov
scas
mov
push
pop
jmp
ret
dec
adc
fs
cmc
push
mov
xchg
xor
push
jo
scas
mov
in
mov
jmp
dec
add
call
add
add
jl
arpl
les
add
mov
adc
sub
test
jno
sbb
and
xor
mov
into
pop
adc
call
call
or
leave
mov
or
in
je
inc
cmp
shl
cmp
sbb
cmp
ret
jo
adc
pushf
cli
jne
inc
add
mov
pop
cwde
mov
mov
in
and
adc
xchg
cli
pop
loopne
xchg
mov
inc
inc
add
sbb
pop
fisubr
in
inc
or
clc
push
loopne
mov
pusha
cmp
inc
call
or
and
fs
sbb
ins
fcmove
ss
push
adc
push
mov
fsubr
pop
mov
xor
out
popf
adc
or
retf
push
loope
je
mov
mov
in
or
xchg
iret
adc
mov
dec
mov
jo
(bad)
clc
push
push
inc
push
cmp
aas
xor
xlat
or
aam
les
mov
lods
push
(bad)
or
push
lock
sbb
test
nop
xchg
push
inc
push
cwde
push
mov
nop
test
enter
inc
and
nop
frstor
nop
push
pop
inc
push
dec
xor
shl
pop
fs
je
add
fiadd
jne
pop
mov
push
push
or
and
enter
je
mov
lods
leave
imul
(bad)
cli
add
mov
jmp
adc
sbb
adc
push
sti
push
call
ja
iret
add
inc
fs
test
adc
mov
cmc
push
push
xor
lahf
data16
lea
adc
test
inc
and
sbb
push
je
mov
cmp
in
in
cs
inc
in
das
imul
enter
stos
cwde
xor
fld
fwait
sub
sbb
xchg
push
push
stos
xlat
mov
in
mov
push
or
and
xchg
add
push
loop
mov
cmp
or
je
sub
cmp
sbb
add
lods
mov
data16
ror
loopne
ret
or
add
inc
mov
(bad)
in
inc
jmp
add
call
ror
sub
add
mov
add
push
inc
jp
adc
push
xor
outs
test
fcom
jne
(bad)
jmp
mov
mov
xchg
jb
xor
pop
jnp
jmp
sbb
fisub
jo
mov
jo
and
loope
aad
fistp
adc
daa
fnstsw
out
ins
push
cli
sub
nop
xor
mov
xchg
cmp
add
sub
add
(bad)
cmp
sbb
mov
or
add
push
xor
imul
and
pop
jne
mov
test
orps
xchg
pop
adc
add
sti
inc
sar
pop
inc
bts
jmp
enter
inc
jecxz
or
adc
bt
aaa
jo
bndldx
dec
push
mov
jecxz
(bad)
push
test
fbld
data16
dec
(bad)
leave
fcmovnu
push
sar
clc
je
dec
not
cmp
mov
inc
loop
xchg
repz
mov
push
cmp
sub
or
jae
test
loop
rol
or
loope
inc
add
adc
inc
mov
movs
jae
inc
mov
inc
adc
test
xchg
or
sub
jge
std
add
(bad)
cmps
inc
(bad)
or
test
fs
mov
fld
inc
rcr
push
sub
cmps
cmp
sub
adc
imul
xchg
cmp
test
jae
sahf
into
and
test
push
test
mov
pop
or
cmp
or
(bad)
xchg
pushf
mov
ins
and
mov
lock
adc
inc
adc
sar
mov
sbb
jae
sub
add
push
ins
or
push
loope
add
push
(bad)
fistp
jnp
sbb
jb
xlat
xchg
and
add
in
sti
(bad)
sbb
jae
pop
sti
sub
or
lock
inc
mov
lea
loopne
retf
jl
mov
or
jle
push
or
outs
jno
xor
mov
or
je
rol
das
(bad)
mov
(bad)
jl
or
adc
(bad)
cmp
je
push
pop
cmp
or
les
stos
dec
js
mov
mov
jmp
mov
retf
add
add
push
push
cmps
fs
ret
shl
push
loope
pushf
push
enter
xchg
ret
clc
and
mov
sbb
iret
xor
shr
sbb
inc
add
inc
sbb
adc
xchg
sub
sbb
ins
jmp
in
scas
ret
inc
repz
or
mov
sub
adc
adc
fsubr
popa
add
add
scas
mov
pop
inc
scas
xor
push
xchg
sub
mov
out
shl
sub
or
push
pop
pop
clc
push
push
pop
jbe
jnp
cmp
jge
test
icebp
(bad)
sbb
stos
dec
jmp
repnz
and
mov
sbb
xor
mov
call
xchg
rcl
sub
add
sub
cmp
push
jl
sbb
adc
sub
out
sbb
sar
xor
cdq
add
sbb
or
jmp
mov
and
jo
jl
mov
or
push
retf
fidiv
pop
rcl
jmp
add
cmp
push
sub
clc
shr
imul
adc
mov
xchg
mov
push
sbb
fst
test
test
mov
call
mov
or
in
je
test
or
into
movs
and
sub
stos
sub
and
mov
jne
fwait
or
fcom
cmp
pop
sbb
jae
xchg
dec
xor
adc
lea
arpl
icebp
xor
mov
call
sub
inc
dec
pop
sbb
sbb
jb
xchg
adc
xor
dec
or
push
mov
addr16
call
jmp
rcr
or
jne
div
aaa
shl
and
add
and
out
jb
cmp
ja
pop
add
add
pusha
fldlg2
and
outs
push
sub
pop
add
call
outs
enter
xor
adc
jmp
or
sub
or
ror
clc
adc
call
and
xchg
test
sbb
mov
iret
or
fwait
jmp
enter
lea
test
cmp
je
cld
xor
cwde
mov
rol
pop
loopne
stos
in
xor
and
inc
and
mov
xor
stos
mov
arpl
cwde
jmp
mov
iret
lea
mov
test
fidiv
ja
jg
mov
push
jl
and
add
lea
jecxz
mov
lea
push
add
aaa
out
and
add
mov
in
and
nop
inc
inc
adc
inc
inc
cmp
aam
inc
add
mov
mov
adc
jecxz
enter
nop
push
mov
mov
cmp
push
sub
push
inc
jns
call
popf
mov
pop
mov
icebp
push
dec
pop
sub
pop
(bad)
push
jmp
pop
add
dec
stos
add
lds
aaa
dec
jae
psubsb
pop
xor
mov
call
adc
mov
dec
mov
sub
sbb
addr16
push
(bad)
pop
enter
jne
push
sar
sub
aad
add
or
pop
je
mov
mov
add
push
jno
add
sub
rcr
or
fistp
in
pop
pop
add
scas
push
sub
mov
in
or
mov
shl
pop
arpl
mov
mov
push
lea
push
stos
test
mov
sbb
fnstsw
or
out
loop
push
cld
inc
inc
mov
rcr
push
xlat
adc
lea
mov
jnp
push
push
dec
(bad)
mov
mov
push
push
dec
push
sti
ins
push
xor
(bad)
and
jno
pop
shl
mov
fidivr
cmp
jb
adc
ret
ror
lock
mov
xchg
mov
pusha
neg
add
inc
mov
jecxz
mov
pop
test
jo
jmp
adc
pop
mov
enter
mov
dec
pop
sbb
ja
jne
ficomp
dec
dec
mov
push
and
movs
push
adc
sbb
cld
cld
fsub
(bad)
sbb
inc
push
loope
sti
pusha
out
mov
mov
inc
ins
loope
(bad)
lock
jae
arpl
push
adc
mov
and
or
call
hlt
sahf
std
push
loopne
mov
adc
jae
and
add
call
jnp
add
outs
cmps
adc
xor
cs
repnz
cmp
sbb
and
cld
test
loopne
cmp
je
sbb
cmp
push
aas
or
mov
jg
push
sbb
or
adc
stos
rcr
push
nop
addr16
pop
or
pop
fdiv
ffreep
loopne
jnp
loopne
call
ret
je
rcr
ss
adc
mov
test
mov
pop
ins
adc
iret
jmp
rol
fidiv
push
dec
inc
mov
mov
daa
es
mov
je
jg
inc
lods
jmp
jb
cmp
ja
add
cmp
or
(bad)
not
bound
push
or
or
dec
fwait
mov
push
xchg
mov
sbb
in
sbb
sub
or
push
lods
ret
in
je
or
ins
ja
lock
ret
in
pop
or
mov
mov
fwait
mov
ins
or
add
push
pop
push
enter
push
in
xchg
push
cmp
adc
xor
push
pop
cs
dec
xchg
cmp
aaa
nop
je
test
pop
lahf
hlt
xor
imul
mov
cmc
jmp
rol
addr16
stos
or
cmp
mov
mov
mov
adc
pop
inc
mov
sbb
inc
pop
jbe
stos
repz
call
ret
(bad)
xchg
inc
push
cmp
mov
test
rol
mov
neg
repz
aaa
or
lea
stos
adc
js
inc
xor
mov
pop
shl
adc
sub
lea
mov
data16
call
add
mov
push
mov
imul
mov
or
cs
mov
stc
aas
push
adc
jg
inc
cmp
jl
sub
mov
jl
cmp
call
test
mov
push
add
pop
jl
pop
adc
sbb
ret
dec
sub
shl
and
inc
lods
ds
cmp
inc
stos
jmp
jbe
sub
add
push
imul
(bad)
sub
fadd
ret
icebp
jne
test
xor
adc
mov
cmp
stos
(bad)
jne
cs
dec
adc
pop
aaa
and
inc
and
sbb
adc
mov
pop
enter
cmp
push
inc
lds
xor
or
pop
ret
cmp
mov
sbb
mov
sbb
sub
add
ror
sbb
add
and
mov
add
test
jno
clc
xor
dec
clc
jae
(bad)
outs
dec
inc
cmp
mov
test
pop
and
mov
add
je
ins
push
call
adc
sub
fld
data16
pop
sbb
push
mov
xor
mov
or
mov
mov
add
and
push
mov
addr16
and
loopne
int
call
fs
push
lahf
dec
push
mov
xor
xchg
xor
ret
rol
addr16
dec
or
pop
pop
movaps
sub
pushf
add
push
push
or
adc
neg
adc
lds
mov
mov
mov
sub
(bad)
mov
or
or
fcomp
sbb
sub
or
sar
lods
int
ret
fwait
xchg
xchg
mov
sub
cmps
add
ret
sti
xchg
or
test
xchg
aaa
inc
lds
or
(bad)
pop
sbb
test
clc
pop
sbb
call
aaa
bound
movs
inc
and
ror
cmps
call
fistp
into
add
or
or
xchg
idiv
and
mov
add
mov
pusha
sub
data16
cwde
add
push
adc
jp
or
mov
test
pop
into
lods
add
jb
inc
(bad)
jns
fidivr
mov
lods
mov
xor
mov
cli
adc
inc
dec
shl
mov
mov
or
sbb
cmp
imul
sub
cmps
in
clc
or
sub
shl
mov
mov
sbb
xor
rol
sub
dec
push
imul
stos
add
adc
imul
imul
mov
or
add
outs
adc
comiss
inc
cs
aas
mov
push
pop
hlt
cmp
ds
mov
push
cmps
mov
fnstcw
jg
pop
push
add
add
add
(bad)
adc
and
cmp
scas
jne
mov
sub
mov
add
pusha
push
jo
or
adc
imul
add
test
add
jne
ins
or
lods
test
xchg
(bad)
fwait
std
or
dec
dec
push
push
adc
add
dec
inc
pop
(bad)
jle
add
inc
adc
push
xor
mov
xor
or
jmp
adc
push
sub
data16
daa
aaa
bnd
pop
gs
addr16
std
mov
shr
imul
xor
add
push
enter
fs
jo
jbe
(bad)
bound
xor
mov
jnp
sub
outs
push
enter
gs
das
pop
jbe
xlat
pop
push
fsub
pop
xor
neg
test
push
mov
fnsave
jae
pcmpgtb
sub
or
pop
cmp
inc
cmp
push
and
mov
cmps
lods
je
adc
scas
bswap
mov
ret
pop
xor
cmp
mov
inc
aam
and
repz
mov
das
xor
adc
inc
outs
enter
lea
sub
cmp
out
push
popa
jb
jne
jae
xor
inc
inc
mov
lods
jne
pusha
dec
cmp
fs
dec
push
push
les
(bad)
push
adc
inc
sub
and
push
nop
cmp
(bad)
dec
mov
dec
or
inc
and
in
or
add
cmp
cmp
or
pop
pop
ficom
add
adc
jo
data16
push
lods
adc
push
push
mov
and
mov
add
add
add
dec
and
jns
add
aam
int
push
dec
add
into
gs
bound
cmp
jbe
dec
push
hlt
or
adc
test
je
dec
sti
out
pop
pop
push
mov
outs
gs
shr
daa
pop
arpl
adc
ss
adc
dec
popa
outs
or
mov
push
push
dec
inc
fidivr
jnp
aaa
jns
aas
cmp
jnp
test
sbb
popa
mov
pop
or
jae
push
pushf
(bad)
fld
pop
jl
push
jne
dec
add
adc
pop
inc
cmp
mov
daa
and
add
lds
pop
es
into
or
cmp
cmp
mov
and
mov
repz
push
or
push
dec
inc
dec
aam
pop
sbb
add
and
je
ins
in
mov
ja
inc
sbb
jp
xor
jecxz
push
popa
jnp
cmp
bound
lahf
add
xor
cmp
fs
int3
sahf
add
push
mov
test
add
lods
add
call
and
mov
dec
outs
in
test
sub
dec
mov
push
scas
jae
fs
mov
push
aad
movs
add
adc
inc
mov
push
aam
and
addr16
pop
ins
dec
sub
js
data16
cli
fwait
or
mov
stos
add
call
mov
add
mov
test
cli
mov
std
and
cmp
sbb
add
test
jns
fidiv
or
and
sbb
dec
cld
sti
inc
mov
xorps
mov
mov
and
and
pop
fnstenv
sbb
lea
push
outs
or
mov
sbb
dec
push
pop
imul
jo
mov
dec
push
dec
xor
add
nop
test
push
add
mov
add
mov
pop
push
push
fimul
ffree
adc
mov
aad
aaa
imul
cmps
push
cmp
dec
inc
dec
sbb
add
popa
push
cmp
push
adc
sbb
iret
pop
inc
jne
data16
mov
adc
adc
in
or
xchg
sbb
int
mov
push
and
inc
xchg
fdiv
cwde
stos
and
fisttp
js
add
les
xchg
lods
nop
das
push
cmp
mov
cmp
ds
fsub
repnz
cmp
adc
pop
and
push
push
rep
outs
in
(bad)
and
and
sub
or
fidiv
xor
dec
test
fdiv
mov
pop
cmp
aas
inc
mov
push
test
inc
push
push
xchg
nop
mov
aaa
xor
xor
pop
outs
aad
pop
bound
adc
bound
jns
mov
and
xor
xor
adc
mov
cmc
pusha
xor
add
int
pop
sub
push
cmp
and
jo
inc
fbld
jo
fwait
xchg
je
jae
pop
mov
add
or
test
push
add
or
and
imul
imul
push
sbb
or
or
cmp
xorps
stc
xor
add
pop
and
push
xor
rol
push
xor
push
pop
rol
ins
push
pop
pop
jnp
pop
nop
cmps
imul
sti
pop
(bad)
das
xor
mov
pop
add
sub
nop
shr
lahf
into
pop
mov
adc
xlat
or
pop
add
xchg
outs
sub
icebp
jg
cmp
push
mov
pop
jns
xchg
add
and
out
add
and
inc
repnz
adc
add
adc
add
je
push
out
add
pop
cs
fsincos
add
add
adc
pop
lahf
(bad)
add
add
fs
out
add
lea
imul
inc
push
nop
xchg
xchg
mov
add
pop
les
imul
clc
sbb
sbb
jecxz
fnstenv
inc
push
adc
or
jae
imul
imul
mov
loopne
sbb
dec
rcr
dec
sbb
pop
js
mov
pop
jp
jno
xor
mov
in
(bad)
fadd
or
leave
adc
mov
jecxz
add
push
inc
cmp
and
add
in
pusha
fist
mov
cmp
pop
cmps
fild
cmp
jle
mov
cld
das
inc
jle
cld
test
and
shl
pop
xor
enter
inc
test
fisttp
in
sbb
in
call
sti
jl
mov
ficomp
pop
pop
fisubr
xor
fcomp
loopne
cmp
jle
mov
fnsave
iret
jbe
add
sub
xor
shr
and
sbb
cmps
imul
cmps
imul
cmps
imul
mov
imul
cmps
sbb
pop
cmps
imul
inc
fwait
and
jne
lea
fcom
mov
add
pop
das
inc
vcomisd
jo
gs
retf
push
push
pop
push
inc
aas
and
jbe
pushf
xchg
fmul
or
or
add
xchg
mov
xchg
dec
rcl
repz
xor
rcr
ins
add
cmp
pop
ja
xchg
dec
shl
shl
adc
das
inc
test
adc
repz
push
push
dec
inc
pop
pusha
sbb
(bad)
cwde
sub
adc
push
add
mov
dec
bound
xor
sub
sub
dec
cmp
add
cmc
pop
cmp
pop
es
add
or
cmp
adc
and
dec
add
dec
cs
les
jmp
vmwrite
pop
and
xchg
adc
in
pop
xchg
or
pop
adc
or
add
or
cmps
fwait
test
xchg
inc
sbb
push
daa
dec
cmp
push
aam
ins
jo
jmp
mov
js
popa
jae
mov
cmp
push
or
je
xlat
gs
add
push
or
adc
inc
adc
imul
add
dec
push
cld
lods
add
dec
push
cmp
sti
pusha
add
pop
adc
sub
mov
cmp
and
mov
inc
inc
inc
or
mov
inc
lea
xchg
add
cmp
inc
pop
inc
dec
dec
jmp
push
inc
inc
sub
js
in
mov
sub
movs
xor
inc
(bad)
icebp
in
fs
rdtsc
cmp
hlt
inc
pop
push
pop
cs
sub
in
mov
xor
xor
xor
cmp
(bad)
jle
pop
inc
dec
dec
inc
and
aaa
aaa
xor
dec
xor
inc
xor
inc
pop
dec
add
rol
sbb
xchg
adc
sbb
mov
ret
ror
sub
or
in
xchg
adc
or
cld
and
sub
xchg
xchg
mov
or
add
mov
push
and
shl
cmp
shl
jne
sub
add
push
call
nop
lods
sub
jno
test
mov
jecxz
mov
lahf
jp
push
call
jae
inc
pop
jne
sbb
inc
or
pop
(bad)
daa
pop
stos
push
and
fmul
pusha
mov
push
or
pop
rol
mov
mov
pop
adc
inc
mov
xor
ficom
push
call
sbb
sbb
jnp
rcr
sbb
repz
xor
xchg
xlat
add
mov
ret
std
mov
jecxz
test
adc
cmp
push
iret
mov
packsswb
pop
fild
lds
mov
or
xor
movs
adc
gs
mov
test
or
jne
add
or
jnp
mov
mov
fs
cli
and
call
add
imul
out
les
push
hlt
mov
add
clc
arpl
or
aaa
dec
jge
push
fwait
ins
mov
jns
pop
push
(bad)
imul
in
test
(bad)
mov
enter
cmps
add
jge
jmp
mov
mov
cmp
mov
mov
dec
jmp
adc
push
mov
push
adc
lods
or
xchg
push
xchg
outs
pop
pop
leave
sub
or
jae
ins
xchg
or
dec
loopne
in
xor
and
push
jnp
leave
clc
cli
cmp
pop
adc
pop
push
add
lock
pop
shr
pop
or
dec
arpl
push
add
jmp
xor
test
ja
outs
mov
repnz
push
pop
clc
adc
pop
xor
push
sbb
xchg
inc
push
pop
pop
lods
out
sahf
push
cmp
dec
and
cmp
dec
dec
dec
aam
adc
dec
jmp
jl
add
xor
or
aas
clc
jae
pop
mov
add
add
fidivr
inc
data16
idiv
add
mov
mov
pop
arpl
mov
in
leave
call
call
cmc
inc
xchg
sahf
mov
daa
lds
push
mov
fisubr
adc
imul
mov
or
add
jne
or
jnp
loope
enter
push
cvtdq2ps
or
xchg
or
ins
fwait
or
jns
pop
push
xchg
(bad)
inc
call
pop
pop
nop
(bad)
enter
cld
loopne
xchg
(bad)
dec
inc
jae
mov
mov
clc
dec
out
or
jl
and
dec
jo
mov
jnp
pop
mov
test
jne
cwde
pop
iret
inc
sbb
and
xor
ss
mov
add
mov
jge
adc
push
inc
xlat
sub
cwde
(bad)
jmp
pop
cmp
lea
fdivr
add
add
pop
fmul
out
push
mov
sbb
fistp
gs
call
scas
push
mov
mov
dec
dec
sbb
cmp
xor
adc
into
xchg
xchg
mov
mov
loope
pushf
in
mov
in
outs
and
stc
inc
push
ret
sub
xchg
and
aad
push
outs
xlat
ret
ficomp
rol
fadd
xor
mov
imul
inc
add
cmp
dec
sahf
std
add
sbb
call
inc
add
(bad)
in
call
clc
add
dec
mov
repnz
or
add
add
sbb
add
cmp
add
add
sahf
add
add
call
mov
add
leave
jae
add
add
inc
xor
leave
add
add
and
pop
xchg
add
fs
inc
push
adc
add
sahf
xchg
daa
push
add
jmp
popf
loopne
mov
retf
xor
arpl
add
ins
fisub
adc
sbb
int3
push
push
pop
add
popa
or
inc
into
push
(bad)
mov
mov
test
jmp
ins
int
lock
and
enter
int3
jl
stc
sub
add
sbb
cs
shr
fs
and
add
ret
push
ret
or
mov
push
mov
sub
jmp
mov
inc
cmps
and
(bad)
mov
xchg
cmp
lock
fmul
and
sbb
adc
test
scas
sbb
jne
ror
nop
push
push
data16
(bad)
or
adc
inc
fldenv
push
(bad)
adc
aaa
ffree
rcr
int
jl
jle
call
outs
xchg
mov
(bad)
ja
lods
add
sbb
sub
lods
push
sbb
mov
or
cmp
lods
and
or
arpl
call
dec
push
call
(bad)
out
sar
mov
nop
retf
or
je
sbb
test
sbb
add
nop
nop
xchg
cwde
sbb
movs
add
nop
add
nop
mov
rcr
add
(bad)
enter
nop
add
aam
add
nop
fsubr
in
sbb
clc
xchg
sbb
add
add
and
xor
or
and
xor
adc
add
and
sbb
and
dec
xor
sub
jle
mov
and
xor
das
jne
adc
or
pop
and
adc
add
repnz
jbe
inc
aas
xor
das
je
fadd
mov
sub
fs
outs
imul
push
imul
in
sub
ins
jns
jae
imul
sti
sub
xor
xor
or
or
ret
imul
inc
jne
inc
jb
and
(bad)
gs
adc
in
push
enter
aaa
bound
cmp
retf
ss
pop
cmp
xchg
data16
mov
xchg
jb
gs
and
leave
aaa
dec
inc
inc
xchg
mov
ret
and
sbb
inc
mov
aas
cmp
dec
test
add
jg
xor
jo
jb
add
loop
retf
xor
mov
(bad)
aam
outs
jne
mov
sub
lahf
jecxz
and
in
sbb
cdq
test
(bad)
sbb
push
push
in
sub
adc
push
add
shl
fild
popf
ret
ret
add
jne
or
cmc
add
push
sub
mov
push
push
arpl
sub
daa
ret
dec
inc
das
pop
sub
sub
inc
imul
and
cmp
popa
pop
cmp
ins
xchg
enter
add
lahf
cmp
sub
lds
xor
popa
sbb
or
and
mov
sbb
mov
push
jle
jae
xor
out
mov
mov
or
in
adc
ins
imul
dec
mov
outs
jbe
sub
ins
adc
push
inc
aad
or
cs
ins
or
pop
xor
and
cmp
ret
push
adc
and
addr16
pop
loop
push
movs
jg
add
es
sti
xor
xchg
jmp
dec
cmp
dec
push
sub
adc
lods
shr
ficomp
and
ja
and
sbb
jb
xor
data16
cld
ds
arpl
outs
data16
outs
and
xchg
push
gs
fs
jmp
mov
dec
dec
push
shr
cdq
mov
inc
mov
imul
mov
es
(bad)
xor
sub
mov
arpl
inc
jne
cdq
fidiv
cmp
fs
sub
jge
or
dec
dec
imul
xor
jmp
push
push
mov
push
lods
not
cmps
rcr
fs
xchg
push
add
push
pop
outs
call
cwde
test
imul
gs
cmps
in
hlt
add
or
and
ds
bound
xlat
je
and
stos
add
xor
retf
out
div
or
sub
mov
shl
cmp
cmp
sub
xor
aas
mov
xor
pop
pop
cmovbe
test
xor
std
jno
adc
push
je
add
pop
inc
sbb
jae
shl
pop
inc
inc
inc
add
pop
dec
movs
fnstenv
or
sub
inc
ins
scas
sub
xchg
lahf
fld
push
jae
adc
je
outs
mov
and
int
test
je
adc
movs
call
inc
mov
or
ror
push
mov
inc
pop
gs
ret
sbb
jbe
jne
inc
push
(bad)
add
fsub
push
loopne
or
mov
dec
or
(bad)
div
sub
data16
or
test
adc
stc
add
mov
in
fsub
or
add
jo
ffreep
popa
xor
gs
arpl
xor
and
add
aas
add
pop
int
outs
mov
add
outs
xor
loope
mov
or
pop
or
cmp
adc
dec
pop
push
movs
std
adc
out
and
adc
inc
push
push
and
sub
push
add
add
adc
add
xor
cmp
jo
add
dec
xor
push
sahf
jo
mov
or
aas
adc
push
gs
dec
adc
cmp
popa
or
adc
xor
shl
call
sub
rol
cmp
movs
loopne
pop
arpl
and
shl
adc
cmps
ins
shl
xchg
popf
pop
inc
pop
aad
loope
loope
sub
add
xor
mov
loop
mov
movs
rol
xchg
add
scas
sub
nop
ret
add
fadd
jns
mov
cmp
and
push
xchg
movs
sub
ds
imul
aaa
add
add
mov
in
xchg
adc
add
xor
sbb
xchg
jo
shr
add
pushf
add
dec
dec
push
sbb
jp
jbe
sbb
adc
jb
and
nop
aam
test
or
scas
add
ins
fmul
loopne
xchg
jl
and
or
and
add
int3
mov
mov
add
push
add
mov
add
rcl
xchg
add
fnstcw
sbb
xchg
push
add
ja
in
inc
or
or
pop
popa
sub
pusha
xor
movs
adc
jo
bound
xchg
or
and
popf
adc
mov
push
add
add
stos
mov
or
sbb
dec
add
or
adc
xchg
dec
inc
popa
and
xchg
mov
sub
pushf
popa
push
jno
cdq
nop
jne
fs
jno
jae
push
xor
jno
nop
popf
outs
pusha
pop
inc
fs
jae
outs
push
cmps
je
or
mov
pop
add
adc
mov
and
add
aas
nop
push
lds
push
push
sub
inc
pop
ds
inc
add
(bad)
xor
push
add
(bad)
mov
nop
pop
inc
push
shr
or
rol
add
push
popa
jecxz
add
adc
leave
pusha
iret
rcr
or
inc
mov
pusha
or
aam
enter
fiadd
add
lock
sbb
repz
add
mov
jne
sbb
add
les
mov
jecxz
ss
inc
mov
add
xor
and
xchg
pop
add
mov
add
inc
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
or
inc
add
inc
add
test
