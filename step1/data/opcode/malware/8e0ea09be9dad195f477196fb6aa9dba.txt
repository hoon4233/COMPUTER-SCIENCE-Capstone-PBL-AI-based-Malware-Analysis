pop
lods
fchs
bound
pushf
outs
push
in
movs
sub
jnp
outs
and
ins
cdq
test
cmp
loopne
dec
mov
inc
xchg
icebp
imul
cdq
psrlw
imul
std
loop
ins
cdq
imul
fisttp
out
arpl
xchg
in
dec
adc
jbe
pop
pop
out
fsub
and
call
pop
mov
jb
dec
jecxz
imul
cdq
call
jne
int3
loop
aas
iret
cmp
push
cdq
add
add
jnp
ins
pushw
test
xor
aaa
adc
cmps
mov
xchg
aas
iret
cmp
out
movs
sub
imul
outs
sub
push
imul
sbb
cs
cdq
loop
xchg
adc
ds
xchg
(bad)
cld
sub
cs
xchg
cmps
das
gs
pusha
adc
es
addr16
and
xor
ins
adc
pop
out
in
sub
js
adc
ds
xchg
pop
sub
cs
xchg
cs
loopne
push
cdq
cmp
cs
cdq
out
push
sub
cs
pop
sahf
cs
cwde
mov
movs
push
sahf
cs
loop
pop
sub
cs
push
outs
jae
adc
and
pop
push
adc
loopne
fs
xchg
xchg
lods
test
out
jl
cmp
scas
addr16
shr
pop
arpl
jecxz
sub
xchg
int
es
arpl
jecxz
or
xchg
pop
out
xchg
mov
aas
jno
rcl
repz
mov
ins
ins
xchg
imul
repz
(bad)
aas
in
cs
pop
arpl
lods
in
dec
inc
ins
pop
outs
ds
imul
cdq
imul
push
ins
cdq
call
pop
imul
cs
cdq
or
popa
xchg
pop
inc
leave
xchg
sbb
test
scas
es
lods
jnp
cs
sbb
cdq
imul
cdq
imul
xor
push
mov
ins
ins
cdq
push
sub
cwde
imul
jb
pop
sub
push
xchg
xchg
into
xor
push
ins
cdq
cmp
cmp
ins
cdq
cmps
mov
xchg
inc
jo
sub
add
jnp
ins
leave
xcrypt-ecb
cmps
dec
cdq
imul
sbb
cmps
or
not
or
sub
test
add
push
cdq
add
(bad)
imul
sub
add
fld
jle
ins
cdq
xchg
sbb
cs
lods
dec
sahf
cs
xchg
sbb
cs
jg
cs
sub
imul
aam
jle
adc
ins
push
test
iret
cdq
imul
pop
imul
sar
and
imul
iret
cmp
repnz
sbb
(bad)
in
add
push
cdq
add
add
imul
icebp
dec
mov
sbb
nop
rcr
popf
pop
out
xchg
loop
fwait
jle
stos
pushf
sub
cs
lahf
popf
xchg
cmp
aad
cs
xchg
popf
xchg
cmp
pop
sbb
ins
retf
sbb
push
cld
cmp
cs
pop
(bad)
fbld
jle
test
ins
sbb
cs
in
outs
pop
lods
fld
cs
outs
mov
xchg
adc
cwde
sub
out
xor
xor
scas
int3
loop
out
jne
js
es
ds
jmp
(bad)
ins
popa
loop
loope
xchg
jle
fcom
adc
inc
ins
repz
and
loopne
cs
jmp
outs
pop
sub
sub
jae
sbb
imul
mov
ins
cdq
loop
xchg
in
xchg
(bad)
sbb
imul
outs
pop
sub
xor
in
das
sbb
imul
adc
(bad)
pop
pop
out
sub
xor
retf
cmp
jmp
cmp
sub
inc
jne
imul
pusha
pushw
test
lods
daa
call
rcr
adc
jl
push
rol
lods
rcr
sub
cdq
imul
in
outs
pop
lods
jb
pop
lods
fld
(bad)
in
xor
movs
pop
cmps
mov
xchg
aas
iret
cmp
sbb
and
scas
data16
pop
fcomp
imul
popa
imul
sbb
shr
pop
mov
test
imul
xchg
lds
adc
(bad)
ins
popa
loopne
fs
aad
outs
xchg
aad
push
mov
cs
push
jmp
ins
cdq
push
xlat
push
fcom
(bad)
fdivr
sub
sub
fcom
(bad)
pop
sub
popf
sbb
das
ins
in
xchg
pop
stos
jmp
shr
popa
loopne
adc
scas
push
cwde
imul
cs
push
sbb
rcl
ret
cmp
mov
test
cmp
movs
xor
xchg
rol
cdq
push
sbb
sbb
rcl
pop
loop
nop
xchg
rcl
cdq
loopne
adc
scas
push
cwde
imul
lods
pop
gs
out
das
ins
xchg
xchg
loop
inc
imul
adc
or
xchg
imul
xchg
rcl
pop
loop
nop
xchg
shl
inc
inc
fisubr
xchg
cs
push
xchg
data16
aaa
push
test
in
cmp
into
loopne
pusha
daa
loope
or
loop
nop
adc
(bad)
daa
loope
cs
arpl
adc
sub
adc
in
or
mov
cs
popf
jae
xor
xor
scas
int3
loop
cmp
adc
and
inc
pop
xchg
ins
lds
fwait
cld
xchg
cmps
sub
imul
call
and
cmps
lods
outs
sub
jae
mov
in
out
pop
or
mov
mov
ins
ins
adc
es
popf
jae
out
xchg
cmps
scas
mov
cmps
cmp
jo
push
test
in
cmp
into
loopne
jl
cmp
pusha
xor
ins
cdq
xchg
sub
sub
xor
fsub
rcr
cdq
movs
and
push
(bad)
sbb
imul
xchg
cmps
scas
test
cmps
cmp
out
xor
xor
scas
int3
loop
cmp
xchg
aam
push
cwde
xchg
cmps
stos
data16
pop
fcomp
imul
xchg
add
fld
test
rcl
in
imul
cdq
cmp
sar
push
shr
into
cmp
shr
pop
dec
jno
push
test
in
cmp
adc
and
sbb
adc
rcr
xchg
add
imul
icebp
xchg
xor
js
in
arpl
imul
in
imul
popa
push
in
lods
sub
loop
xor
xor
int3
loop
cmp
adc
ror
ss
and
imul
in
xchg
cmps
stos
sbb
iret
fld
sbb
imul
xchg
jge
adc
movs
je
cmp
aam
outs
cs
outs
mov
out
xchg
sbb
adc
aaa
push
test
in
call
jns
in
arpl
in
outs
mov
ins
cdq
call
sub
(bad)
mov
imul
fcomp
ins
ins
jno
pop
ins
cdq
loop
aam
das
cs
outs
mov
pop
pop
(bad)
cmc
arpl
(bad)
out
sbb
cmp
cs
popf
add
loope
fwait
jle
pop
sbb
ins
adc
and
pop
loop
mov
fwait
lods
lods
popf
cmp
js
cs
xchg
sbb
mov
ins
adc
cs
test
daa
mov
imul
in
mov
lods
in
outs
pop
lods
fld
rcl
in
cs
test
jno
ret
cmp
mov
test
cs
retf
xlat
out
pusha
xor
mov
mov
test
push
in
ins
ins
xchg
cs
in
ins
lods
dec
loope
ins
ins
cdq
retf
fld
sub
imul
fsub
adc
sub
in
pushf
int
sbb
rcl
movs
test
cs
cmp
in
inc
mul
pop
call
cs
icebp
xchg
shr
stos
lea
sar
push
and
push
lahf
jns
cs
mov
xchg
cmp
add
shr
pop
adc
sbb
sub
ins
jo
das
ins
cdq
loop
ins
inc
loop
in
pop
xchg
add
imul
sub
cmp
push
sar
test
imul
out
add
adc
and
mov
push
(bad)
ins
sbb
fcomp
imul
cdq
imul
test
gs
imul
in
ins
ins
adc
ficom
pop
call
pop
call
sub
in
xchg
cmps
mov
mov
scas
repz
in
imul
adc
dec
stos
fmul
(bad)
in
or
fcomp
lods
or
cs
push
movs
adc
loopne
xchg
into
dec
cmps
sub
(bad)
imul
pop
push
jnp
add
stos
iret
cs
loopne
pushf
leave
loopne
xchg
lea
ins
cdq
imul
scas
jmp
sbb
rcl
cmp
cs
push
sar
or
shl
push
cmp
cdq
xchg
shr
imul
repnz
addr16
pop
sub
push
cmp
int
sbb
rcl
movs
test
cs
cmp
xchg
fcom
imul
lods
dec
add
loop
fwait
jp
stos
mov
pop
xor
aaa
push
test
in
call
jns
rcl
xchg
adc
xchg
mov
cmps
stos
sbb
shr
es
movs
pop
sub
loope
ins
cdq
(bad)
cmc
sbb
imul
adc
cmps
stos
jb
cmps
pushf
mov
out
popa
jnp
movlps
es
push
es
lods
pop
sub
cld
xchg
cs
arpl
add
leave
ins
ins
jno
pop
ins
cdq
call
and
imul
cmp
ins
ins
cdq
xor
xchg
daa
lods
in
popa
lods
or
cmps
xchg
mov
cmps
stos
sbb
shr
(bad)
cmp
sub
iret
std
fild
cmps
xchg
outs
mov
out
cld
xchg
cs
inc
xor
inc
pop
sub
push
sub
mov
imul
push
mov
push
sub
cld
xchg
cs
pop
(bad)
in
sub
adc
stos
push
xchg
shr
cld
xchg
cs
in
sbb
pop
mov
cdq
and
cdq
imul
adc
inc
ins
repz
inc
ins
icebp
imul
fld
repnz
aaa
imul
in
xchg
inc
outs
repz
pop
add
loop
out
push
xchg
outs
in
movs
push
sbb
in
push
cdq
out
cwde
enter
xchg
xchg
pop
xchg
jno
inc
ins
cdq
add
loope
lahf
jle
fwait
add
mov
imul
popa
or
add
test
xor
cmps
mov
ret
outs
cdq
or
imul
shl
js
scas
scas
dec
ucomiss
das
mov
test
jmp
cdq
add
mov
imul
cmc
imul
sbb
rcl
xchg
sar
jmp
xchg
out
sti
fs
imul
repz
call
add
ins
adc
loop
addr16
cmps
mov
mov
scas
data16
xchg
addr16
mov
xchg
leave
sub
xchg
lods
test
call
cs
in
mov
cs
adc
into
xchg
addr16
jle
add
loopne
xchg
into
and
sbb
jmp
sbb
rcl
js
cs
mov
xchg
cmp
ins
cdq
imul
fcom
adc
cmps
mov
mov
scas
adc
out
xchg
addr16
jle
add
loopne
xchg
into
adc
arpl
es
cdq
add
fsubr
fstp
rcl
callw
adc
xchg
data16
mov
int
ins
ins
sbb
mov
xchg
leave
retf
fld
out
xchg
jns
adc
shl
fs
rcr
(bad)
nop
xchg
addr16
arpl
jmp
xchg
xchg
shr
mov
imul
iret
cs
out
xchg
xchg
sar
jg
xchg
callw
adc
xchg
sar
add
adc
adc
fsubr
push
xchg
cs
xchg
out
sbb
imul
sbb
rcl
sbb
rcl
cmp
cs
sbb
ins
sbb
pushf
xchg
addr16
call
sub
sub
call
cs
xchg
out
call
mov
mov
scas
repz
mov
leave
retf
outs
ins
jno
fcom
movs
xchg
shr
or
cwde
add
mov
imul
into
sbb
xchg
lods
test
push
rcl
pop
out
call
imul
into
cs
add
fsubr
and
shr
pop
adc
sbb
mov
(bad)
rcl
test
rcl
xchg
cs
in
popa
jmp
xchg
cwde
imul
repz
sar
add
retf
outs
ins
jno
fcom
movs
xchg
shr
or
cwde
add
shl
xchg
into
add
xchg
lods
test
push
rcl
pop
out
call
imul
into
cs
add
fsubr
cmps
ins
xchg
shr
pop
adc
sbb
mov
(bad)
rcl
xor
rcl
xchg
cs
in
popa
jmp
xchg
cwde
imul
repz
clc
jns
cs
retf
outs
ins
jno
fist
movs
xchg
shr
and
sbb
rcl
cdq
sar
(bad)
adc
xchg
repz
out
jns
cs
retf
outs
ins
jno
fist
movs
xchg
shr
and
sbb
rcl
cdq
add
add
mov
cmp
cdq
xchg
lods
test
push
rcl
repz
aad
sub
loope
xchg
rcl
ins
xchg
shr
pop
adc
sbb
ins
ins
adc
rcl
ins
lahf
rcl
xchg
cs
in
popa
jmp
xchg
cwde
imul
sbb
call
lods
sub
out
rcl
pop
xchg
rcl
pushf
sbb
cmp
sub
iret
std
fild
test
pop
cdq
imul
fs
rcl
cdq
imul
sub
test
jmp
leave
loopne
mov
xchg
sar
push
sar
(bad)
nop
nop
stos
and
imul
xchg
addr16
jle
sbb
rcl
data16
in
xchg
cmps
mov
mov
scas
sbb
shr
nop
push
dec
xchg
rcl
inc
loop
out
cmp
rcl
and
retf
cs
jb
and
jmp
xchg
mov
jmp
cwde
imul
adc
mov
loope
retf
rcl
inc
xchg
rcl
iret
ja
xchg
cs
adc
cli
xchg
addr16
jle
or
mov
addr16
jle
mov
imul
adc
shl
fs
push
popf
imul
sbb
rcl
dec
xchg
rcl
push
mov
imul
imul
xchg
out
das
push
jno
rcl
xchg
sar
push
sar
mov
stos
pop
inc
jo
sub
test
sar
out
repnz
addr16
jle
mov
cs
inc
push
in
call
stos
mov
push
cmp
cdq
out
mov
sar
out
(bad)
xchg
addr16
jle
mov
shl
fs
add
imul
jb
and
mov
(bad)
xchg
addr16
inc
cmp
sub
loope
xchg
rcl
cmc
imul
pop
lods
leave
jne
rcl
cdq
imul
inc
ins
cdq
sar
pusha
cdq
imul
adc
mov
scas
data16
xchg
addr16
mov
xchg
leave
add
fld
jmp
leave
xor
lea
rcl
jne
rcl
addr16
mov
xchg
leave
out
cld
xchg
shr
jne
cmps
mov
outs
cs
cdq
cwde
mov
sub
rcl
adc
lahf
cmp
xchg
test
sar
adc
mov
imul
test
adc
and
out
imul
xchg
addr16
cs
(bad)
rcl
js
cs
iret
rcl
data16
ins
cdq
imul
fcom
cs
nop
stos
and
test
cs
adc
xchg
sbb
rcl
data16
in
xchg
cmps
mov
mov
scas
sbb
shr
shr
imul
cdq
or
cdq
imul
inc
ins
cdq
xor
ins
jmp
outs
cdq
loopne
fsub
shl
sbb
rcl
xchg
sar
ficomp
addr16
lods
or
cs
push
mov
xchg
sbb
sub
(bad)
adc
adc
xchg
jns
adc
shl
inc
pop
mul
pop
call
stos
add
jecxz
xchg
imul
leave
add
fld
jmp
leave
loopne
xchg
lea
ins
cdq
imul
sbb
das
ins
cdq
call
shr
and
imul
leave
add
xchg
sub
rcl
xchg
sar
push
sar
mov
mov
mov
test
adc
and
js
cs
(bad)
call
shl
std
ins
cdq
imul
cdq
fs
stos
cdq
imul
sbb
rcl
icebp
xchg
rcl
callw
adc
xchg
data16
fwait
jp
stos
xor
xchg
shl
pop
jmp
or
xchg
out
mov
jmp
cwde
imul
rep
rcr
sub
xchg
addr16
jle
les
rcl
sbb
cs
sbb
mul
pop
out
xchg
xchg
shr
push
xchg
outs
in
movs
push
sbb
stos
xchg
xchg
rcl
data16
or
adc
(bad)
xchg
addr16
mov
xchg
cmp
xchg
lock
pop
addr16
push
addr16
jle
ror
xchg
addr16
jle
mov
scas
ds
pop
mul
pop
call
shr
xchg
jl
imul
jp
stos
xor
shl
pop
loopne
call
adc
cmp
xchg
shl
sbb
rcl
xchg
shl
data16
xchg
sar
pop
sar
xchg
loopne
enter
cmp
pop
sar
xchg
jmp
sbb
rcl
xchg
rcl
xchg
xchg
data16
mov
xchg
shr
and
rcl
pop
out
rcl
sbb
rcl
cmp
and
rcl
adc
(bad)
xchg
addr16
jle
test
in
ins
cdq
pushf
int
sbb
rcl
and
rcl
adc
cli
xchg
addr16
jle
test
out
not
test
out
repnz
addr16
jle
test
test
js
imul
leave
loopne
xchg
iret
arpl
pop
outs
xchg
shl
(bad)
xor
scas
int3
loop
push
add
test
cs
cdq
cmp
mov
call
jns
cld
sub
jge
jb
loope
push
mov
xchg
das
xchg
adc
retf
xchg
cs
cdq
imul
imul
sti
add
ins
sbb
cs
outs
push
retf
mov
mov
fcom
sub
mov
rcl
mov
imul
adc
into
scas
adc
(bad)
stos
fdiv
scas
sbb
js
cdq
add
xchg
jno
ret
sub
lea
cs
push
test
les
repz
xchg
mov
cmps
stos
icebp
jmp
cs
add
push
cdq
add
dec
fldcw
ins
repz
cld
imul
pop
cmp
pop
std
imul
pop
cmps
mov
xchg
aas
iret
loopne
fs
ins
mov
rcl
or
adc
shl
pop
xchg
sub
sub
call
cs
sbb
lods
dec
xor
or
cs
sbb
cld
fldcw
stos
pushf
xchg
ins
cdq
loop
ins
push
loop
stos
pushf
das
mov
cdq
outs
cs
cdq
loop
sub
imul
outs
outs
cmc
fsubr
lods
xchg
out
outs
cdq
imul
cdq
imul
push
sbb
cdq
xchg
or
or
ins
ins
sbb
repz
test
imul
fcomp
imul
sbb
arpl
out
jns
outs
in
lahf
das
imul
jmp
je
sub
sub
ins
push
arpl
sub
cdq
popf
sub
sub
ins
in
pop
pushf
push
mov
cdq
sub
pushf
push
mov
cdq
loop
inc
push
loop
test
outs
push
repz
xchg
cwde
imul
pushf
pop
call
sub
jl
ins
pop
lods
jo
sub
pop
mov
jae
sub
add
cs
mov
outs
ins
jo
rcl
push
sub
push
jo
sub
jo
imul
adc
fsubp
pop
jmp
je
sub
push
popfw
sub
cs
ins
pop
lods
jo
sub
cdq
jmp
xchg
jae
sub
add
cs
fxch
outs
ins
jo
rcl
push
sub
ins
in
ins
pop
lods
jo
sub
cdq
loop
inc
push
loop
in
xchg
jae
sub
jne
outs
ins
fwait
imul
jo
rcl
push
sub
outs
in
ins
pop
lods
jo
sub
cdq
jmp
xchg
jae
sub
(bad)
outs
ins
fwait
imul
jo
rcl
sub
push
mov
cdq
jmp
xchg
jae
sub
cwde
imul
jne
outs
ins
cwde
outs
push
repz
movs
test
cmps
lods
sbb
repz
test
cs
cmp
out
outs
cwde
outs
push
repz
mov
(bad)
outs
ins
cwde
outs
es
fldcw
lods
cdq
imul
jne
outs
ins
cwde
outs
push
repz
fstp
pop
call
sub
outs
jo
cs
cdq
loop
pop
push
loop
out
pushf
push
mov
cdq
push
cs
pop
xor
cdq
imul
mov
imul
imul
cwde
imul
stos
push
cmp
xchg
and
jmp
movs
jmp
ins
cdq
pop
outs
push
push
imul
out
ror
stos
cwde
cs
jmp
je
sub
sub
push
shr
fild
pop
pop
pushf
push
mov
cdq
or
pushf
push
mov
cdq
jmp
xchg
jae
sub
test
(bad)
xor
pushf
iret
in
and
fld
imul
imul
imul
out
push
loop
arpl
outs
pop
int
imul
cdq
imul
fcomp
cs
call
fsub
fst
imul
xchg
out
test
cdq
imul
data16
es
fldcw
movs
outs
mov
arpl
fst
imul
in
pusha
(bad)
cs
pushf
arpl
sub
sub
outs
in
jle
adc
pop
and
push
fsubr
sub
outs
ins
fwait
adc
in
sub
mov
sub
in
adc
cmps
pushf
(bad)
cs
jge
outs
ins
xchg
(bad)
mov
cs
jns
cmps
sub
push
call
sbb
sub
push
fldcw
xchg
jle
cld
fldcw
ins
adc
push
add
cs
pushf
addr16
cld
fldcw
imul
jg
ins
sbb
cld
fldcw
xchg
jle
cld
fldcw
ins
adc
les
sub
xchg
pushf
addr16
repz
imul
fild
fwait
pop
mov
outs
mov
sub
addr16
(bad)
fild
fwait
js
imul
test
in
cmp
es
into
xchg
jmp
pushf
pop
call
imul
(bad)
imul
pop
add
test
cs
cmp
mov
cdq
loop
fwait
jle
imul
sub
cmp
jno
cdq
enter
imul
sub
cmp
jno
cdq
enter
imul
sub
cmp
jno
cdq
enter
imul
sub
cmp
jno
cdq
enter
imul
(bad)
xor
retf
out
jne
jge
into
rcr
pop
mov
scas
mov
cs
data16
pop
fcomp
imul
sub
loope
ret
jle
mov
mov
cdq
lods
imul
pop
mov
test
or
mov
pushf
pop
fisubr
imul
cld
xchg
cs
jb
das
ins
cdq
call
sub
sub
mov
and
dec
mov
cwde
imul
pop
cs
cdq
imul
pushf
pop
xchg
cs
loop
mov
pop
fcomp
imul
sub
ins
cdq
loop
pop
inc
loop
stos
(bad)
das
ins
cdq
imul
and
outs
cs
cdq
cwde
mov
fadd
sub
retf
jle
icebp
fsubr
mov
mov
scas
adc
mov
repz
repz
rcr
jge
ret
imul
cmp
add
test
cs
data16
pop
fcomp
imul
mov
cdq
add
push
popf
add
xchg
in
pop
cmps
clc
imul
jb
pop
ins
cdq
xchg
pop
mov
jo
cdq
xchg
sub
sub
cmp
(bad)
jns
imul
adc
retf
rol
(bad)
adc
mov
pop
xor
aaa
push
test
in
call
rol
aas
xor
fcom
cmps
cmp
imul
fsubp
aam
cmps
and
dec
cwde
cdq
pop
cld
in
xchg
push
cdq
add
loope
xchg
jle
fadd
inc
ins
adc
fidivr
xchg
rcr
xchg
xchg
cmp
cs
lahf
lds
cs
pop
inc
in
in
xchg
out
int3
loop
cmp
je
push
xchg
loop
pop
popa
loop
xchg
pushf
pop
call
xchg
sar
hlt
outs
ins
(bad)
ss
cmp
mov
cmp
push
es
shr
fild
xchg
and
popf
push
adc
lods
fs
sub
imul
mov
cwde
sub
imul
test
scas
push
sbb
outs
adc
sbb
loopne
jl
das
sub
in
push
call
fcmovu
xchg
and
popf
outs
dec
rcr
imul
lea
scas
xchg
out
mov
xchg
shl
(bad)
push
in
arpl
cs
cdq
loop
out
jae
and
lea
scas
in
adc
arpl
jg
push
pop
push
inc
in
call
sub
sub
cdq
push
jo
das
rol
pop
mov
cs
cmp
xlat
lds
arpl
rol
dec
jg
js
mov
jle
daa
aaa
cs
adc
(bad)
out
push
xchg
movs
cmp
push
out
jae
pop
mov
jno
cmps
sub
imul
imul
jg
ins
cdq
imul
mov
add
js
push
sub
in
fs
sub
(bad)
pop
xchg
rcl
cdq
jmp
push
popf
push
jp
popa
and
daa
adc
adc
push
outs
in
call
sub
pop
cmps
xchg
sbb
sub
pop
cmp
daa
imul
in
pusha
cmps
xchg
sbb
or
(bad)
loop
outs
fdivr
cmp
call
cmp
imul
movs
push
sub
cld
loop
and
push
sub
aaa
cmps
xchg
sbb
sub
enter
jno
scas
push
lahf
imul
popf
fs
push
cdq
imul
sub
cdq
push
add
push
xchg
movs
cmp
push
out
jae
pop
mov
popf
loop
xchg
adc
ds
push
(bad)
push
lea
ins
cdq
imul
adc
das
sbb
loop
out
jno
scas
push
lahf
push
push
adc
adc
push
sbb
push
movs
push
pop
bound
sub
imul
in
jae
addr16
out
jnp
cmp
sub
ins
cdq
imul
imul
cdq
lods
(bad)
xor
xor
scas
int3
loop
out
jne
jge
into
xchg
sub
sub
arpl
jo
xchg
lds
push
adc
imul
cdq
sbb
sub
sub
and
push
pop
mov
sub
cdq
call
pop
fcomp
imul
int3
jnp
mov
cli
outs
ins
test
cmps
xchg
cwde
mov
test
sub
sub
outs
xor
imul
in
dec
adc
mov
and
inc
push
sub
lea
sub
sub
fldcw
sub
mov
outs
xor
fnsave
cdq
loop
xchg
adc
cmps
xchg
cwde
mov
mov
fnsave
out
lahf
cmps
jl
jbe
cld
fldcw
xchg
pushf
sbb
sahf
cwde
mov
mov
cwde
mov
imul
xor
ds
in
xchg
sub
sub
xchg
pop
xchg
adc
xor
mov
imul
das
ins
cdq
imul
fnstsw
pop
mov
lods
jle
rcr
imul
gs
shr
pop
addr16
ret
cmp
mov
test
cmp
rcl
xchg
test
imul
sbb
sub
pushw
jmp
cdq
call
imul
int
xchg
sbb
test
xchg
sbb
or
sub
ins
in
jno
sar
rcl
das
out
fld
pushf
or
outs
jb
and
or
rcl
xchg
rol
push
mov
cs
cmp
addr16
imul
or
lock
data16
stc
leave
repnz
ins
xchg
fnstsw
pop
push
jne
pusha
xchg
mov
cs
cmp
mov
xchg
rcl
fsubr
sub
imul
or
lock
data16
jns
cli
outs
ins
sbb
fld
das
out
fld
xchg
adc
shr
fs
and
shr
imul
or
rcl
push
cmp
cs
xchg
out
mov
cdq
imul
or
rcl
jg
cmp
sub
in
mov
sub
sub
mov
xchg
imul
push
push
ins
jno
xlat
xchg
data16
mov
xchg
rcl
cdq
loopne
mov
dec
stos
lds
mov
in
outs
cs
fldcw
jmp
test
lds
imul
cdq
cmp
arpl
imul
pop
call
sub
sub
xchg
imul
cdq
push
mov
jbe
rcr
dec
out
call
jno
jbe
cdq
xchg
sub
sub
xchg
xchg
imul
cdq
imul
xchg
cs
data16
and
fld
rcl
callw
adc
shl
pop
dec
out
cmp
lock
imul
jb
pop
xchg
adc
int3
outs
call
mov
test
xchg
in
bound
imul
cdq
sbb
in
xchg
sub
in
outs
cs
imul
jb
scas
scas
cdq
jnp
ins
sbb
pop
fisub
rol
jmp
cdq
push
out
out
xchg
inc
rcl
jne
rcl
xchg
shr
fild
fdivp
mov
xchg
(bad)
test
push
mov
lods
jnp
movs
js
dec
mov
cwde
jbe
shr
cmp
rcl
test
xchg
pop
mov
pop
mov
aam
movs
pusha
mov
mov
xchg
adc
fiadd
fwait
loop
lods
jo
out
lea
mov
stos
cwde
jbe
shr
and
rcl
sbb
cs
jmp
pop
shr
inc
xor
test
out
mov
call
in
div
xchg
callw
call
xchg
adc
mov
add
xor
loop
clc
inc
xchg
shl
sbb
lock
data16
clc
inc
xchg
shr
loop
cld
inc
xchg
shl
sbb
icebp
xchg
data16
mov
sbb
icebp
xchg
add
loope
shl
xchg
cmp
fld
rcl
cdq
loopne
mov
sbb
icebp
xchg
pushw
ins
out
scas
icebp
xchg
data16
fadd
shr
mov
xchg
data16
pop
shr
inc
ins
cdq
ins
push
push
cdq
loopne
fadd
shr
or
icebp
xchg
data16
les
add
ins
cwde
imul
xor
lock
fild
fnstsw
lods
jnp
movs
loope
mov
xchg
mov
cli
mov
xchg
cmps
pusha
mov
sub
fs
stc
push
rcl
lea
std
fldcw
stc
ins
test
xchg
icebp
imul
cdq
cmp
repz
imul
sbb
icebp
xchg
data16
out
arpl
das
ins
cdq
jmp
fs
fs
push
cwde
imul
sbb
rcl
sub
cdq
pop
and
in
das
arpl
xor
ins
test
xchg
adc
ins
cdq
imul
jae
mov
jmp
pop
out
lea
xor
icebp
xchg
data16
movs
fnstcw
rcl
mov
fwait
lods
test
jne
pushf
sbb
pop
js
fwait
lods
test
popa
cmps
pushf
sbb
pop
xlat
and
pushf
pop
call
mov
xchg
pop
mov
xchg
scas
jmp
cwde
fs
push
sub
cdq
push
cmp
popf
pop
das
ins
cdq
imul
popf
loop
mov
rol
xchg
loopne
cwde
jbe
shr
inc
fsubp
mov
sub
xchg
pop
test
(bad)
lea
das
dec
mov
mov
xchg
pop
ins
cs
movs
push
das
ins
cdq
imul
mov
adc
imul
cdq
push
xor
movs
push
sub
sbb
imul
cdq
push
and
movs
push
sub
sbb
(bad)
gs
adc
in
in
das
sbb
test
xchg
leave
xchg
fwait
mov
xchg
rcl
sbb
xchg
lods
test
jmp
pop
shr
lods
leave
ins
test
xchg
cdq
loopne
cwde
jbe
shr
pop
sub
loopne
jns
mov
xchg
adc
xchg
sbb
rcl
xchg
shr
cs
dec
xchg
sub
sub
xchg
rcl
xchg
das
arpl
out
fld
xchg
adc
shr
fs
inc
bound
scas
int3
loop
out
jne
jge
into
loopne
fs
cs
stos
test
daa
push
cdq
imul
pushw
adc
sbb
and
cs
imul
push
scas
add
add
cdq
out
mov
fld
arpl
out
mov
fld
imul
adc
in
fcom
scas
sub
call
jp
push
adc
mov
shr
popa
scas
sub
scas
adc
pop
mov
inc
ss
cdq
pushf
dec
xchg
adc
out
fcom
(bad)
iret
cdq
imul
call
jns
fs
jecxz
imul
fcom
push
pop
imul
in
movs
sub
in
ins
pop
loop
xchg
xchg
(bad)
mov
call
scas
sub
and
fisubr
scas
sbb
pop
data16
(bad)
sub
outs
scas
sub
and
fisubr
das
cwde
stos
pop
pusha
sbb
pop
push
xchg
(bad)
mov
push
scas
ins
cdq
imul
shr
cs
in
inc
in
in
xchg
and
call
outs
sub
push
in
outs
scas
sub
scas
sub
scas
adc
and
retf
xchg
pop
fld
movs
outs
xchg
fnstsw
mov
ins
scas
sub
lds
fld
push
fld
(bad)
movs
sub
in
ins
pop
loop
xchg
xchg
(bad)
ins
in
outs
scas
sub
and
fcom
cmp
mov
retf
out
arpl
aam
push
cs
outs
mov
add
imul
iret
add
test
cmp
ins
adc
scas
push
cwde
imul
lods
lds
push
adc
in
ins
call
xchg
adc
in
pushf
int
fcom
jne
pop
cmps
mov
outs
push
ins
cdq
adc
imul
push
push
rol
imul
mov
cs
outs
mov
xchg
adc
sbb
xchg
sar
add
cdq
out
ins
jns
sar
fs
cdq
call
cmps
xchg
mov
cmps
stos
(bad)
xor
retf
cmp
cdq
pop
pop
mov
(bad)
call
xchg
in
arpl
call
int3
loop
out
jne
jge
into
aam
jns
sbb
cs
repz
imul
call
ins
cdq
jmp
sbb
imul
sub
pusha
cdq
pop
sub
fsub
dec
cdq
pop
out
xchg
loop
fwait
jle
imul
xor
imul
repz
jnp
imul
fcom
cs
jle
imul
push
and
movs
sub
ins
mov
pushf
pushw
fidivr
pushw
sar
jno
jl
cdq
cmp
cs
xchg
lds
test
add
ret
cmp
mov
cmp
jmp
popa
loop
push
cdq
add
push
icebp
imul
pop
xchg
pop
fs
jg
cdq
loop
out
addr16
pop
push
and
and
leave
in
xchg
cmps
stos
repz
cmp
ins
adc
and
pop
call
adc
push
xlat
in
add
loope
xchg
jl
pushw
and
jno
jl
cdq
add
loope
xchg
jle
fwait
add
mov
imul
cmp
ins
iret
xor
outs
mov
cwde
adc
xor
xor
scas
int3
loop
cmp
das
jg
push
adc
inc
ins
icebp
jmp
ins
cdq
add
push
cdq
add
add
imul
pushw
test
lods
lods
xchg
pushw
sub
adc
popa
pushf
leave
in
xchg
cmps
stos
repz
cmp
ins
repz
mov
cmp
mov
stos
outs
xchg
loop
xor
mov
jg
iret
cmp
sbb
or
inc
sbb
rcl
cwde
imul
inc
loop
xchg
push
sub
loopne
nop
adc
sar
pushw
and
mov
fidivr
cdq
add
(bad)
retf
out
pop
jnp
mov
js
ficomp
mov
(bad)
jge
cdq
call
jae
in
pop
xchg
jb
scas
push
cmps
imul
outs
adc
push
push
pusha
in
movs
sub
in
ins
pop
loop
nop
iret
add
mov
imul
retf
out
pop
arpl
ret
cmp
mov
iret
cmp
xor
rol
fcom
inc
push
jns
test
pop
rol
mov
sub
test
scas
sub
dec
into
cs
cmp
cdq
imul
xchg
cmps
scas
mov
cmps
cmp
jo
push
test
in
call
jns
push
adc
jle
mov
mov
test
stos
fmul
ret
push
(bad)
ins
sbb
retf
push
fsub
lods
lock
cs
shr
leave
adc
scas
adc
lods
imul
fs
sub
jecxz
xchg
jb
xchg
fdivp
imul
jp
imul
xchg
and
(bad)
out
pop
jne
sub
push
xchg
fwait
push
sub
hlt
xchg
cdq
jmp
xchg
cwde
jmp
xchg
cdq
push
in
fsub
fcmovnu
imul
ins
cdq
fs
sub
cwde
sub
imul
lods
add
scas
add
scas
adc
pop
mov
adc
cdq
ins
adc
arpl
jns
mov
cdq
imul
int3
mov
ret
pop
push
mov
es
in
inc
imul
mov
mov
and
sub
out
arpl
fcmovne
ins
pop
mov
xchg
(bad)
in
ins
fmul
cs
adc
and
sub
out
arpl
fcmovne
arpl
mov
fmul
in
or
sti
mov
jl
imul
or
sbb
mov
cld
or
add
or
mov
cld
or
mov
sub
sti
mov
cld
or
mov
cld
or
cld
or
mov
cld
or
cs
imul
or
les
pop
mov
cld
or
xor
or
mov
cld
or
out
push
inc
sti
mov
cld
or
mov
cld
or
in
xchg
shr
or
dec
test
sti
mov
xchg
movs
sub
cld
mov
adc
sti
movs
je
sti
mov
cld
or
movs
cmp
sti
mov
cld
or
lods
scas
popf
sti
mov
cld
or
push
or
mov
cld
or
lods
push
cdq
sti
mov
cld
or
dec
cld
or
mov
jge
xchg
cs
imul
imul
gs
(bad)
imul
fld
jg
pop
in
or
sti
mov
jl
imul
or
cld
or
mov
cld
or
jl
or
mov
ins
or
idiv
or
mov
cld
or
cld
or
mov
cld
or
out
or
mov
cld
or
mov
xor
sti
mov
sbb
mov
cld
or
cld
or
mov
cld
or
cs
imul
or
jl
or
mov
ins
or
idiv
or
mov
cld
or
cld
or
mov
cld
or
out
or
mov
cld
or
mov
xor
sti
mov
jg
pop
mov
cld
or
cld
or
mov
cld
or
mov
or
aas
xchg
data16
cmp
mov
cmp
ss
addr16
in
addr16
ins
(bad)
loopne
nop
adc
ret
sbb
jne
imul
loop
mov
cs
cld
mov
nop
jmp
mov
cmp
ins
outs
push
shl
fdivr
imul
cmp
add
adc
push
xchg
cdq
push
sub
mov
scas
and
rcl
adc
imul
das
ds
pusha
inc
push
outs
xchg
cmps
lods
adc
(bad)
cmc
outs
xchg
cmps
scas
adc
aam
popf
jne
sbb
jg
adc
jnp
mov
fwait
outs
arpl
jnp
fcmovbe
xchg
pop
cmps
adc
ficomp
imul
mov
imul
sub
fimul
inc
in
mov
imul
rol
xchg
add
sub
(bad)
mov
imul
das
cs
adc
imul
mov
cs
rep
mov
mov
fwait
jle
sub
or
(bad)
dec
cs
outs
push
shl
fsub
call
pushf
xchg
fsubr
rcl
arpl
rcl
push
test
in
call
jns
or
adc
(bad)
repz
imul
xchg
imul
jae
in
arpl
xchg
xchg
in
xor
out
movs
scas
xchg
cs
imul
stos
(bad)
pop
fwait
imul
fmul
(bad)
cmc
popa
xchg
shr
pop
arpl
call
xchg
fst
pop
mov
lea
rcr
imul
cdq
loop
and
push
(bad)
cmp
mov
lods
push
xchg
fld
mov
push
jmp
es
repz
ins
adc
ins
ins
call
ins
cdq
call
xchg
cs
loop
nop
jb
scas
stos
movs
and
ins
adc
cmp
call
out
fld
imul
rcr
inc
retf
fld
sub
aas
in
push
repnz
imul
sbb
(bad)
push
cdq
push
cs
fcom
arpl
imul
loopne
mov
(bad)
in
fs
mov
dec
loop
mov
pop
es
adc
test
mul
xchg
cmps
scas
xchg
fdivr
lods
jnp
daa
mov
fld
and
cs
repz
and
cs
push
cs
jbe
ins
cdq
call
xchg
cs
loop
cwde
jb
scas
stos
or
ins
adc
cmp
call
out
fld
imul
ficomp
inc
retf
fld
sub
cmp
imul
outs
fcomp
ins
ins
test
lods
sub
(bad)
mov
pushf
mov
cs
push
imul
jmp
test
mov
jg
mov
cs
mov
and
mov
push
pop
(bad)
ins
ins
xchg
fnstsw
dec
mov
cs
loopne
mov
sub
in
push
scas
adc
pop
push
adc
cli
in
fs
sub
cmps
mov
outs
jmp
xchg
rcl
cdq
add
push
fwait
add
push
cdq
add
ins
cdq
sub
sbb
imul
fadd
jge
in
pop
fcmovnbe
imul
imul
test
and
ins
retf
and
imul
fnstenv
aaa
push
test
in
jmp
iret
cmp
sbb
imul
in
pushf
pop
call
out
xchg
inc
sub
aam
push
cs
outs
lea
xchg
adc
cs
dec
es
jl
loop
fwait
jae
aam
pop
xchg
xor
loop
xor
fsub
aam
or
rcl
cmps
imul
fcom
daa
cdq
imul
in
xchg
mov
adc
sub
adc
in
or
addr16
shr
fcom
fs
mov
rcl
cdq
imul
xchg
lods
stos
imul
sub
sbb
rcl
cmp
cs
mov
ins
adc
aad
xchg
jle
mul
cs
adc
inc
ins
repz
inc
ins
icebp
imul
(bad)
stos
xchg
fs
sar
outs
data16
cdq
loop
cwde
fs
shl
imul
fs
in
cdq
cmp
pop
shr
push
cdq
out
pushf
fs
sar
push
ins
cdq
add
rcr
imul
ins
xchg
rcl
cdq
xchg
fwait
cwde
fs
rol
outs
pop
fcomp
imul
mov
ins
adc
rcl
imul
ins
sbb
mov
xchg
leave
add
mov
imul
leave
add
ins
cdq
jmp
push
cdq
imul
pushf
pop
call
imul
sub
loope
xchg
rcl
cdq
imul
retf
mov
imul
sub
add
imul
jno
cs
cdq
call
jne
pop
cmps
mov
cmp
into
loopne
js
dec
fs
(bad)
pop
popa
loop
xchg
pushf
pop
call
imul
cld
xchg
cs
xchg
jle
fcom
adc
inc
ins
repz
and
shr
in
call
adc
push
xlat
in
xchg
cmps
xchg
cwde
xchg
cmps
stos
pushw
(bad)
cmp
push
ins
pushw
ds
in
xchg
mov
imul
in
xchg
(bad)
das
shr
xor
xor
scas
int3
loop
cmp
pop
sbb
in
(bad)
ins
popa
loop
xchg
in
jg
aas
fisubr
push
cwde
cmp
sbb
push
and
cdq
imul
pop
jae
xor
cmps
mov
aam
and
sbb
stos
rep
inc
push
pushw
ds
in
rcr
xchg
sub
cdq
imul
int3
loop
cmp
mov
jnp
pop
mov
imul
cs
imul
imul
rcr
xchg
xchg
pop
fs
data16
cdq
(bad)
out
sbb
xchg
pop
je
push
cmp
pushw
ds
in
xchg
(bad)
fcmovnbe
imul
pop
pop
and
shr
pop
pop
cmp
jbe
arpl
pop
nop
jno
data16
cdq
pop
out
sub
mov
lods
or
movs
sub
aam
sub
or
ins
and
ins
cdq
pushf
leave
in
fwait
cmps
stos
pop
ins
cs
xchg
jle
sub
repz
xchg
xchg
pop
fs
data16
cdq
(bad)
out
sbb
out
je
cmp
rcr
mov
ins
cdq
(bad)
out
sbb
outs
data16
cdq
pop
out
xchg
imul
adc
ret
xchg
pop
nop
jno
imul
jo
pop
cmps
mov
cmp
es
and
(bad)
(bad)
inc
popa
loop
out
movs
xchg
sti
cs
imul
es
cdq
cmp
mov
imul
fcom
cs
fcom
das
xchg
adc
push
cdq
add
ins
cdq
imul
inc
ins
icebp
or
cs
or
dec
sub
gs
push
sub
cmp
popa
push
in
xchg
sbb
pop
sub
shl
(bad)
mov
in
adc
movs
sub
mov
ins
adc
es
int3
loop
cmp
adc
es
addr16
mov
test
shl
inc
sbb
movs
push
and
mov
(bad)
inc
inc
cmp
xchg
in
jnp
retf
fisubr
out
pop
cmps
xchg
mov
movs
cmp
jmp
adc
pop
sub
push
adc
daa
mov
inc
scas
push
cmps
imul
xchg
data16
movs
ins
and
and
jl
imul
push
jge
ins
outs
push
shl
fcom
imul
push
cmps
pushf
cwde
mov
test
cs
adc
ins
cdq
(bad)
sbb
rcr
mov
movs
sub
in
pop
pop
loop
nop
adc
pop
lods
jb
scas
sub
inc
ins
cdq
xor
aaa
push
test
in
call
jns
les
mov
inc
sbb
imul
(bad)
(bad)
in
xchg
cmps
stos
dec
mov
sub
stos
ins
ins
cdq
loop
cwde
sbb
pop
call
lods
pushf
call
fs
push
adc
sub
or
cs
fs
adc
cwde
push
mov
imul
add
or
sub
and
test
pushf
int3
lods
jae
cmps
cmp
stc
out
pop
or
in
jns
ret
mov
ins
into
adc
lea
cdq
sub
imul
jo
push
test
in
shl
fwait
imul
fsubr
aas
iret
cmp
push
loopne
or
outs
ficomp
ins
cdq
call
shr
ret
xchg
cs
inc
fsubp
pop
out
xchg
xchg
sar
push
and
scas
es
(bad)
cmc
sbb
pusha
cs
sbb
(bad)
xchg
addr16
sbb
cs
pop
or
cdq
imul
lea
cmps
jmp
and
ins
cdq
pushf
mov
mov
xchg
mov
xchg
rol
and
rcl
dec
xchg
rcl
popf
imul
repz
(bad)
fld
in
xchg
rcl
cdq
imul
adc
(bad)
xchg
fs
cmps
stos
pushw
es
push
ins
jno
outs
ins
cdq
loop
ins
imul
cmps
jmp
adc
scas
push
cwde
imul
lods
inc
fs
loop
fs
das
xchg
retf
adc
xchg
lods
test
add
fld
sbb
imul
fld
fldenv
rcl
cdq
call
imul
ins
cdq
imul
in
inc
pushf
jns
cs
sub
rcl
cdq
imul
cdq
imul
outs
xchg
lods
xchg
pushf
push
or
ins
and
cs
cdq
repnz
xchg
sar
icebp
push
icebp
cs
cmp
pop
fsubr
out
pop
jnp
jb
imul
jg
stos
movs
xchg
shl
pop
sub
cdq
imul
outs
xchg
lods
xchg
pushf
push
cmp
ins
data16
xchg
addr16
(bad)
dec
fsubr
out
pop
arpl
inc
sub
xchg
sub
rcl
cdq
imul
cdq
imul
outs
xchg
lods
xchg
pushf
push
cmp
ins
data16
xchg
addr16
mov
arpl
jmp
adc
cs
imul
add
dec
jno
push
cdq
ror
cdq
imul
gs
rcl
fld
test
das
cs
sbb
inc
jle
sub
out
xchg
rcl
inc
sub
cmp
add
cdq
call
push
cdq
shl
cdq
imul
in
inc
pushf
jns
cs
sub
rcl
cdq
imul
fld
fldenv
rcl
cdq
call
pop
pushf
adc
cs
imul
add
jg
fwait
into
cs
xchg
fwait
nop
xchg
rol
scas
es
mov
ins
data16
xchg
addr16
(bad)
jnp
imul
pop
arpl
mov
xchg
imul
add
dec
jno
ins
ins
cdq
ror
cdq
imul
gs
rcl
fld
test
sub
ins
sbb
add
mov
cdq
imul
outs
xchg
jl
fs
ins
adc
lock
fs
jns
movaps
ins
adc
lock
fs
jle
in
jnp
jmp
leave
add
mov
imul
sub
ins
sbb
cs
and
ins
cdq
repnz
mov
imul
outs
xchg
jl
and
rcl
inc
sub
cmp
ins
ins
cdq
call
ins
ins
cdq
shl
cdq
imul
in
inc
pushf
jns
cs
sub
rcl
cdq
imul
(bad)
imul
arpl
cs
and
ins
cdq
repnz
mov
in
fld
fldenv
rcl
cdq
call
ins
ins
cdq
shl
cdq
imul
in
inc
pushf
jns
cs
sub
rcl
cdq
imul
fld
sbb
xchg
sar
icebp
lock
cmp
(bad)
imul
pop
jg
(bad)
fld
aad
imul
add
jg
mov
fwait
nop
xchg
rol
scas
es
aaa
cs
outs
lea
xchg
adc
cs
imul
add
jg
fwait
into
cs
xchg
fwait
nop
xchg
rol
scas
test
popa
cs
cdq
repnz
mov
imul
outs
xchg
jl
and
rcl
inc
sub
cmp
ins
ins
cdq
call
push
ins
xchg
out
pop
ins
cdq
imul
cdq
sub
imul
cdq
imul
cdq
jmp
cmp
rcl
adc
xchg
xchg
fs
sub
xchg
mov
xchg
pop
push
adc
xchg
xchg
fs
sub
xchg
xchg
fst
push
adc
cs
outs
xchg
lods
scas
clc
cmp
ins
cdq
shl
pop
and
sub
xchg
data16
out
pop
or
and
cs
data16
ss
sub
loope
imul
data16
jecxz
imul
pop
jg
pushf
mov
cmps
stos
data16
xchg
xchg
fs
scas
shl
xchg
rcl
xchg
jmp
rcr
ins
xchg
rcl
sbb
cs
cmp
xchg
leave
add
fld
test
sub
ins
sbb
cs
and
ins
cdq
repnz
mov
jae
fld
fldenv
rcl
cdq
call
pop
pushf
adc
cs
imul
add
jg
mov
fwait
nop
xchg
rol
scas
test
cs
and
ins
cdq
repnz
mov
fimul
xchg
rcl
cdq
call
xchg
xchg
fs
scas
ins
cdq
imul
ins
xchg
rcl
addr16
pop
jmp
xchg
jmp
cmps
jmp
adc
(bad)
out
imul
fdiv
jmp
jo
das
ins
cdq
jmp
ins
cdq
xchg
shr
gs
cdq
imul
adc
xor
mov
(bad)
xchg
addr16
and
int3
push
ins
adc
(bad)
xchg
addr16
cmps
jmp
pushw
cmp
mov
ins
adc
ficom
xlat
sub
ins
sbb
rcl
fldpi
adc
push
xlat
in
or
rcl
cdq
imul
leave
fs
jmp
adc
sub
jno
adc
cwde
xchg
sar
ret
callw
adc
ficom
ins
xchg
rcl
sub
rcl
xchg
sar
(bad)
cs
cmp
mov
imul
pop
jae
mov
imul
jg
stos
aam
xchg
shl
sbb
rcl
aas
push
cs
and
ins
cdq
repnz
mov
jae
fld
fldenv
rcl
cdq
call
adc
and
cdq
imul
in
inc
cmps
inc
sub
xchg
sub
rcl
cdq
imul
cdq
imul
outs
xchg
lods
xchg
pushf
push
cmp
ins
data16
xchg
addr16
(bad)
pop
cmps
imul
pop
arpl
fldcw
rcl
cdq
jmp
sbb
rcl
cdq
xchg
sar
(bad)
xchg
addr16
jge
cdq
pushf
rcl
sbb
rcl
sbb
rcl
fld
fldenv
rcl
cdq
call
adc
and
cdq
imul
in
inc
xor
cs
sub
rcl
cdq
imul
cdq
imul
outs
xchg
lods
xchg
pushf
push
cmp
ins
data16
xchg
addr16
(bad)
(bad)
cmps
imul
pop
arpl
stos
jno
adc
and
cdq
imul
in
inc
pushf
jns
cs
sub
rcl
cdq
imul
fld
fldenv
rcl
cdq
call
adc
and
cdq
imul
in
(bad)
and
imul
add
xchg
addr16
jns
cmps
mov
ins
into
and
imul
cdq
imul
outs
xchg
lods
xchg
pushf
push
cmp
ins
data16
xchg
addr16
(bad)
daa
cmps
imul
pop
arpl
ins
jno
adc
and
cdq
imul
in
inc
cmps
inc
sub
xchg
sub
rcl
cdq
imul
cdq
imul
outs
xchg
lods
xchg
pushf
push
cmp
ins
data16
xchg
addr16
(bad)
xchg
movs
imul
pop
arpl
(bad)
cs
add
dec
jno
adc
dec
ins
cdq
imul
gs
rcl
fld
test
push
cs
sbb
ins
ins
data16
xchg
addr16
(bad)
fbld
cmps
pushf
outs
lea
xchg
adc
cs
imul
add
jg
fwait
into
cs
xchg
fwait
nop
xchg
rol
scas
es
mov
ins
data16
xchg
addr16
mov
imul
pop
arpl
inc
movs
imul
xchg
imul
add
jg
fwait
into
cs
xchg
fwait
nop
xchg
rol
scas
es
mov
ins
data16
xchg
addr16
(bad)
pop
movs
imul
pop
arpl
stos
jno
adc
and
cdq
imul
in
inc
pushf
jns
cs
sub
rcl
cdq
imul
xchg
sar
out
rcl
fwait
mov
ins
leave
and
cdq
imul
cdq
imul
outs
xchg
lods
xchg
pushf
push
cmp
ins
data16
xchg
addr16
(bad)
cmps
movs
imul
pop
arpl
stos
icebp
imul
cdq
xchg
fwait
nop
xchg
rol
scas
es
push
cs
and
ins
cdq
repnz
mov
fimul
xchg
rcl
cdq
call
adc
(bad)
outs
cdq
imul
pop
jnp
ins
cdq
cmp
shl
rcl
fld
test
scas
test
popa
cs
cdq
repnz
mov
fimul
xchg
rcl
cdq
call
repz
xchg
fwait
nop
xchg
rol
scas
es
inc
fsubp
pop
or
cdq
imul
outs
xchg
lods
xchg
pushf
push
cmp
ins
data16
xchg
addr16
(bad)
xchg
mov
arpl
xlat
mov
imul
add
dec
jno
adc
ins
cdq
imul
gs
rcl
fld
test
push
cs
sbb
ins
ins
data16
xchg
addr16
(bad)
(bad)
arpl
imul
inc
ins
icebp
imul
fst
ins
cdq
loop
test
shr
pop
pop
sub
cdq
xchg
fwait
nop
xchg
rol
imul
into
cmp
fldenv
rcl
fs
(bad)
jecxz
imul
sub
rcl
cdq
imul
gs
rcl
cdq
loop
fwait
jg
stos
aam
xchg
shl
pop
cmp
shr
xchg
xchg
data16
aaa
push
test
in
jmp
es
loop
pop
popa
loop
stos
fcom
shl
imul
das
sar
loopne
cs
out
xchg
addr16
sar
mov
ins
cdq
add
add
mov
ins
adc
rcl
cwde
imul
jno
ficom
sbb
shr
rcl
sbb
mov
imul
sub
add
imul
jno
ficom
fld
mov
sub
add
mov
ins
icebp
push
pop
pushf
xchg
lods
test
loop
pop
popa
loop
xor
jnp
jl
ret
imul
iret
cmp
in
mov
aam
jp
ins
outs
mov
xchg
adc
xchg
cdq
loopne
sbb
arpl
loop
cld
fs
shl
fsub
push
cdq
loop
loopne
xchg
shl
popa
inc
(bad)
in
pop
cmc
out
arpl
cmp
sbb
jnp
adc
sub
fnclex
mov
cmp
sbb
stos
adc
xchg
rcl
and
imul
fs
shl
int
sub
int
das
cs
mov
xchg
cmps
xchg
mov
cmps
stos
iret
add
cdq
imul
data16
jnp
imul
sbb
rcl
fs
rol
ds
pop
rcl
pushf
loopne
sbb
xchg
shl
int
das
loope
imul
xchg
xchg
inc
ins
dec
sub
test
cs
adc
mov
jl
imul
leave
sbb
cdq
imul
jno
sbb
mov
imul
popf
push
ins
adc
call
mov
ins
icebp
fcomip
cs
add
cdq
jmp
xchg
jbe
shr
pop
dec
daa
lods
in
data16
dec
pop
cs
test
mov
mov
das
ins
cdq
out
nop
addr16
sar
out
call
pop
cs
data16
(bad)
xchg
rcl
xchg
rcr
adc
mov
xchg
rcr
cmp
stos
fsub
cmp
push
fcom
adc
mov
xchg
daa
lods
in
data16
repz
cs
test
(bad)
outs
fwait
imul
cmp
rcl
dec
push
cs
adc
mov
xchg
leave
out
nop
addr16
sar
(bad)
push
ins
cdq
cmp
xchg
cmps
jmp
sbb
sub
imul
leave
adc
cdq
imul
addr16
shr
cdq
imul
idiv
cs
outs
mov
xchg
adc
xchg
cwde
imul
jmp
ins
cdq
call
shr
dec
stos
sbb
rcl
jbe
inc
ins
cdq
out
aam
xchg
sar
mov
xchg
data16
xchg
leave
out
aam
xchg
sar
imul
inc
ins
repz
rcl
cdq
cmp
cdq
imul
xchg
out
shr
fnstenv
xchg
rcl
cdq
jmp
sub
rcl
fld
adc
cs
xchg
rcl
scas
imul
pop
jnp
jmp
cdq
add
popa
inc
(bad)
in
out
nop
addr16
sar
push
repnz
sub
imul
icebp
sub
cdq
imul
cwde
loope
pop
fs
rcl
sbb
gs
pop
inc
add
adc
ins
jno
sbb
xchg
cld
fs
shr
inc
ins
imul
ins
and
cdq
pushf
leave
in
psrlq
popf
push
ins
adc
rcl
jno
sbb
das
add
mov
ins
adc
rcl
lock
rcl
xchg
cs
in
dec
lods
leave
add
loop
ins
popa
loop
xchg
xchg
shr
jno
cdq
imul
sbb
mov
xchg
cs
(bad)
xchg
cmp
pop
lods
imul
jbe
jo
cdq
cmp
cs
cdq
xchg
fwait
enter
test
cs
data16
xlat
stos
imul
sbb
rcl
popa
pop
(bad)
in
xor
aaa
push
test
retf
out
jne
jge
into
loopne
js
dec
sub
jle
imul
rcr
xchg
add
cdq
imul
pushw
and
test
rcr
mov
cmps
scas
jmp
jnp
retf
pop
cdq
imul
sbb
fcmovnu
xchg
and
int3
xchg
das
mov
cwde
mov
mov
push
cdq
cmp
cdq
imul
test
clc
pop
loop
adc
cmps
xchg
test
cmps
stos
rep
mov
pushf
fnstcw
(bad)
mov
pop
rcr
xchg
loop
out
pop
outs
jle
retf
pop
cs
pushw
and
cs
(bad)
sub
sub
imul
mov
addr16
push
fs
cmp
push
fwait
cmp
dec
test
cs
push
in
cmp
fcmovnu
xchg
mov
fcmovne
xchg
das
mov
adc
outs
leave
sub
cdq
imul
iret
add
ins
repz
stos
imul
pop
loop
pop
popa
loop
push
cmp
stos
imul
fcom
pop
ins
cdq
cmp
cs
xchg
jno
ret
cmp
mov
test
pop
cs
retf
out
arpl
in
push
in
lods
stos
sar
shr
imul
outs
cld
push
ins
cdq
out
sar
sar
out
out
mov
jle
push
add
call
cmc
cdq
imul
popa
pop
(bad)
in
cmp
fstp
rcl
cdq
call
pop
dec
data16
mov
rcr
xchg
cmp
imul
jle
stos
aam
xchg
shl
pop
pop
out
sub
xor
rcl
adc
xchg
mov
jle
sbb
into
xchg
cmp
pop
inc
cs
nop
stos
pop
push
sbb
xchg
sub
into
xchg
cmp
imul
xchg
xchg
in
addr16
lahf
mov
cs
pushf
leave
in
ror
xchg
data16
pop
pop
sub
push
(bad)
xor
cmps
mov
ja
ins
cdq
add
into
loopne
fs
sub
das
mov
imul
adc
fidiv
mov
cmps
stos
retf
ins
cdq
imul
test
call
adc
push
xlat
in
add
in
push
ds
xchg
xchg
callw
icebp
ds
cs
cmp
cmp
arpl
fwait
jg
stos
pushf
inc
xchg
shl
sbb
icebp
xchg
data16
in
pop
fsubp
pop
add
fld
jmp
leave
sub
cdq
imul
cdq
imul
outs
xchg
lods
xchg
pushf
push
cmp
mov
out
mov
jle
fwait
pop
cs
sbb
push
ins
cdq
adc
cdq
imul
outs
xchg
lods
xchg
pushf
push
pop
test
pop
cs
and
cs
cdq
repnz
jns
sar
icebp
xor
cs
out
ins
jns
sar
jno
sbb
jl
push
sbb
ins
cdq
imul
in
inc
pushf
jns
cs
imul
cmp
imul
arpl
inc
sub
loope
imul
cmp
jmp
imul
pop
arpl
jmp
adc
cs
imul
add
js
fwait
into
cs
out
ins
jns
sar
ds
fs
sbb
ins
cdq
imul
in
(bad)
xchg
stos
imul
cli
imul
add
mov
jns
shl
mov
jns
outs
pop
cs
sbb
inc
jle
sub
loope
imul
cmp
inc
sub
loope
imul
cmp
mov
pop
jg
fild
imul
add
js
fwait
into
cs
out
ins
jns
sar
mov
jmp
out
ins
jns
sar
(bad)
sbb
cdq
call
cs
imul
stos
imul
xchg
imul
add
js
fwait
into
cs
out
ins
jns
sar
cli
sbb
cdq
call
icebp
cs
out
ins
jns
sar
push
sbb
cdq
call
sbb
cdq
shl
cdq
imul
in
(bad)
dec
stos
imul
cli
imul
add
mov
jns
shl
mov
jns
xchg
ins
sbb
ins
ins
adc
mov
jle
mov
cs
sbb
cs
and
ins
cdq
repnz
lea
fimul
mov
xchg
leave
and
cdq
imul
imul
ins
ins
adc
mov
jle
ja
cs
sbb
cs
and
ins
cdq
repnz
lea
fimul
mov
xchg
leave
and
cdq
imul
fld
jmp
leave
sbb
xchg
sbb
imul
outs
xchg
lods
xchg
pushf
push
cmp
mov
out
mov
jle
pop
pop
cs
sbb
cmp
pop
pusha
adc
mov
jle
mov
ins
ins
adc
mov
jle
fistp
ins
sbb
cs
and
ins
cdq
repnz
lea
fimul
mov
xchg
leave
sub
imul
fld
jmp
leave
sbb
cdq
imul
cdq
imul
adc
(bad)
mov
xchg
cmps
stos
jno
push
ins
cdq
shl
cdq
imul
in
inc
pushf
jns
cs
imul
cmp
xchg
test
arpl
fld
push
xlat
in
jmp
adc
mov
jns
(bad)
mov
ins
adc
mov
jns
aas
pop
cs
sbb
cs
and
ins
cdq
repnz
lea
fimul
mov
xchg
leave
or
xchg
add
mov
imul
leave
cmp
xchg
jmp
fistp
ins
and
ins
cdq
repnz
lea
fimul
mov
xchg
leave
or
imul
cdq
imul
outs
xchg
lods
xchg
pushf
push
pop
test
or
ins
cdq
repnz
jns
sar
icebp
xor
cs
out
ins
jns
sar
jno
push
ins
cdq
call
repz
out
ins
jns
sar
jle
ins
cdq
call
inc
ins
repz
imul
cli
add
stos
nop
inc
xchg
shr
pop
sub
ins
cdq
out
ins
jns
sar
jle
ins
cdq
add
loope
xchg
icebp
xchg
data16
loope
imul
data16
fldenv
rcl
cdq
xchg
fwait
nop
inc
xchg
rol
stos
outs
xchg
loop
mov
shl
pop
xor
aaa
push
test
in
jmp
iret
cmp
daa
into
hlt
and
popa
inc
(bad)
in
call
shr
scas
fwait
add
ss
jno
add
jnp
adc
sub
adc
mov
xor
loop
call
pop
cmp
imul
inc
cs
jno
ficom
fld
out
mov
cs
retf
rcl
cdq
out
enter
cmp
cmps
add
sub
imul
leave
add
fadd
cs
imul
jno
retf
xchg
callw
nop
stos
and
and
cs
icebp
outs
das
ins
cdq
out
nop
addr16
sar
out
call
inc
cs
and
ins
cdq
pushf
leave
in
jmp
xchg
data16
xchg
sub
rcl
sub
cmp
xchg
(bad)
out
arpl
add
jmp
leave
add
sub
out
nop
addr16
sar
repnz
popf
mov
cmps
jmp
adc
inc
sub
imul
leave
xor
cdq
imul
popa
loop
stos
sbb
rcl
cdq
lods
stos
mov
shr
imul
and
rcl
jmp
ins
cdq
loop
ins
popa
loop
loope
rcl
xchg
cmp
mov
adc
mov
sbb
rcl
repz
inc
ins
repz
leave
add
test
stos
and
or
ins
data16
scas
mov
cs
push
cs
outs
mov
xchg
adc
xchg
icebp
jns
cs
add
fld
jmp
leave
add
mov
shr
scas
stos
xchg
adc
ins
adc
rcl
in
mov
ins
jno
add
gs
push
xor
ins
jno
add
cdq
jmp
adc
shr
out
push
xchg
xchg
adc
mov
and
imul
imul
rol
ins
icebp
outs
das
ins
cdq
out
cld
gs
sar
and
cdq
imul
repz
push
inc
sub
loope
sti
rcl
sub
xchg
imul
sbb
out
loopne
xchg
sar
cmp
xchg
(bad)
out
arpl
add
xchg
sub
rcl
bound
ins
cdq
out
lock
sar
fidivr
xchg
dec
xchg
shl
pop
jmp
sub
rcl
cdq
imul
sub
test
add
test
cs
sbb
pop
add
mov
ins
jno
pop
ins
cdq
loopne
lock
shr
jb
jge
pop
push
aas
data16
popf
dec
xchg
shr
pop
lds
out
mov
xchg
lods
test
call
xchg
cmp
xchg
lods
test
loop
fwait
jle
stos
sbb
shl
pop
cmp
cs
sbb
rcl
cdq
out
fsub
cmp
(bad)
pop
ins
cdq
add
xchg
sub
rcl
cdq
imul
data16
jg
imul
sbb
rcl
push
test
retf
out
jne
jge
into
loopne
fs
adc
loop
xchg
adc
ins
adc
ficom
mov
cs
lahf
mov
push
fld
cmps
stos
retf
jae
imul
push
xor
ins
outs
mov
aas
jno
pop
ins
cdq
xchg
pop
pusha
adc
sub
sub
cdq
imul
dec
cs
adc
sar
imul
xor
inc
ins
jno
pop
ins
cdq
loop
in
pop
(bad)
in
add
cmp
push
ins
cdq
out
nop
leave
cmp
cmp
or
imul
xchg
cmps
stos
(bad)
xor
cmps
mov
outs
ds
cdq
and
es
sub
sar
mov
out
rol
rep
rcr
xchg
add
cdq
imul
adc
lods
jb
inc
xchg
xchg
imul
sbb
ficom
dec
inc
cs
repz
sbb
xchg
sar
and
pusha
movs
xchg
shr
sub
imul
sub
jno
push
ins
cdq
loop
xchg
xor
movs
pop
cmps
mov
xchg
cmp
outs
push
sbb
or
shr
add
push
in
fs
sub
inc
push
sub
loope
lahf
jle
das
inc
cs
adc
fidivr
imul
imul
lods
jmp
cs
cmp
cdq
imul
fcom
inc
xchg
inc
sub
loope
lahf
jle
adc
ins
sbb
jle
cdq
add
cdq
imul
mov
outs
ins
jno
push
ins
cdq
jmp
data16
cs
popa
push
jecxz
mov
call
xchg
mov
cmps
stos
repz
inc
ins
rep
inc
ins
repz
inc
cld
cwde
imul
cdq
add
push
lahf
add
test
lods
inc
ins
iret
add
xchg
lods
out
(bad)
cs
and
or
cs
repz
push
test
sub
test
inc
cs
repz
push
test
sub
test
inc
cs
repz
push
test
sub
test
inc
cs
repz
push
test
sub
test
inc
cs
adc
inc
ins
iret
add
xchg
lods
inc
mov
cdq
sbb
cdq
imul
push
xchg
lods
dec
mov
cdq
or
cdq
imul
push
xchg
lods
sti
lea
cdq
cmp
cdq
imul
push
xchg
lods
pop
(bad)
cs
sub
cdq
imul
repz
push
test
sub
test
cs
repz
push
test
sub
test
cs
repz
push
test
sub
test
cs
repz
push
test
sub
test
dec
cs
adc
jno
pop
cmps
mov
cmp
mov
les
in
pushf
leave
in
xchg
cmps
stos
repz
rcr
imul
jno
or
push
stc
fldcw
mov
sub
push
gs
sbb
dec
cs
repz
rcr
retf
jno
or
adc
fsubr
mov
sub
push
gs
sbb
cmp
test
xchg
pop
xchg
adc
repz
cmp
outs
ins
icebp
mov
sub
add
xchg
lods
inc
mov
cdq
or
cdq
imul
xor
fldcw
cmps
mov
sti
outs
ins
icebp
mov
sub
add
xchg
lods
ja
sub
sub
cdq
imul
push
repz
retf
mov
retf
icebp
mov
sub
add
xchg
lods
inc
mov
cdq
xor
pop
push
repz
out
mov
repnz
ins
icebp
mov
sub
add
xchg
lods
dec
mov
cdq
adc
imul
repz
rcr
retf
jno
or
xor
fsubr
mov
sub
push
gs
sbb
cmp
cs
dec
cs
(bad)
mov
lods
or
cmps
or
lods
les
imul
sub
xchg
in
arpl
(bad)
gs
shl
pop
add
mov
imul
xchg
rcl
xchg
hlt
outs
ins
sbb
ins
leave
add
imul
sti
dec
cs
adc
inc
ins
pop
sbb
fsubr
ins
iret
loopne
nop
mov
fidivr
cs
inc
fcomp
cs
imul
cdq
add
mov
imul
imul
mov
cs
cmp
mov
lods
pop
mov
cdq
add
cmp
push
movs
sub
imul
inc
js
imul
leave
add
mov
imul
sub
push
cdq
adc
cdq
imul
cdq
xchg
sbb
sub
push
cdq
xchg
sbb
cmp
cs
push
ins
adc
(bad)
inc
fcomp
inc
cmp
cdq
jmp
add
mov
ins
icebp
mov
cs
add
test
dec
cs
cmp
mov
cdq
add
push
fwait
add
push
cdq
add
push
cwde
add
push
cdq
add
add
imul
ins
repz
xchg
or
call
ins
cdq
add
cmp
pop
rcr
hlt
outs
ins
jno
or
cs
lods
pop
mov
cdq
add
xchg
lods
das
mov
scas
imul
inc
icebp
imul
leave
add
fld
mov
sub
push
cdq
and
imul
cdq
xchg
sbb
sub
push
cdq
xchg
sbb
cmp
cs
mov
or
adc
inc
inc
ins
cdq
imul
mov
ins
icebp
mov
cs
add
test
retf
lea
cdq
add
xchg
lods
pop
mov
cdq
add
xchg
lods
das
mov
dec
push
ins
icebp
retf
cs
cdq
add
add
imul
icebp
movs
hlt
cs
add
mov
imul
or
and
fsubr
sub
rcr
hlt
outs
ins
repz
(bad)
outs
ins
repz
adc
imul
daa
imul
repz
inc
ins
cdq
imul
mov
ins
icebp
mov
cs
add
test
dec
cs
cmp
sub
lods
pop
mov
cdq
add
xchg
lods
or
push
std
add
icebp
push
repnz
imul
sub
push
cdq
or
imul
jecxz
ins
ins
repz
imul
jno
or
pop
mov
imul
das
ins
cdq
xchg
sbb
dec
cs
repz
lods
hlt
outs
ins
repz
stc
retf
ins
ins
icebp
inc
das
ins
cdq
add
xor
ins
repz
cdq
jmp
add
mov
ins
icebp
out
hlt
cs
add
test
jmp
cs
loop
ins
popa
loop
push
cdq
xchg
sbb
sub
push
cdq
xchg
sbb
sub
add
push
ins
repz
inc
(bad)
cdq
imul
aaa
imul
icebp
push
repnz
imul
sub
push
cdq
sub
cdq
imul
lods
xchg
rcl
lods
hlt
outs
ins
repz
(bad)
outs
ins
repz
push
icebp
lea
ins
cdq
add
cdq
imul
imul
mov
ins
icebp
mov
cs
add
test
dec
cs
cmp
lea
cdq
jmp
cdq
xchg
sbb
sub
push
cdq
xchg
sbb
cmp
cs
mov
scas
ins
cdq
imul
imul
lea
ins
icebp
imul
leave
add
fld
mov
sub
push
cdq
sub
imul
cdq
xchg
sbb
sub
push
cdq
xchg
sbb
cmp
cs
mov
dec
add
push
ins
icebp
test
ins
cdq
add
ins
cdq
cmp
inc
sub
add
mov
ins
repz
mov
repnz
ins
repz
lods
hlt
outs
ins
repz
(bad)
outs
ins
repz
xchg
cdq
imul
test
cs
repz
jle
mov
cmc
cs
add
test
cs
cmp
(bad)
ins
popa
loop
push
cdq
xchg
sbb
sub
push
cdq
xchg
sbb
cmp
cs
mov
js
shr
ins
icebp
retf
cs
cdq
add
ins
cdq
cmp
inc
sub
add
mov
ins
repz
mov
enter
imul
lods
hlt
outs
ins
repz
stc
retf
ins
ins
repz
inc
cwde
imul
or
ins
repz
ins
cdq
jmp
add
mov
ins
icebp
push
cs
add
outs
cdq
imul
mov
retf
repz
lods
hlt
outs
ins
repz
stc
retf
ins
ins
repz
out
cdq
imul
pop
imul
repz
ins
cdq
jmp
add
leave
ins
ins
icebp
push
cs
add
outs
cdq
imul
mov
(bad)
outs
ins
adc
inc
ins
pop
sbb
fsubr
ins
pop
dec
int3
fld
je
inc
inc
mov
imul
lea
cs
sbb
inc
mov
sub
add
mov
ins
icebp
imul
xor
cdq
imul
cdq
xchg
sbb
sub
push
cdq
xchg
sbb
sub
push
add
cs
repz
ins
cdq
jmp
add
mov
ins
icebp
push
cs
add
outs
cdq
imul
mov
hlt
outs
ins
repz
lods
hlt
outs
ins
repz
(bad)
outs
ins
repz
neg
push
ins
repz
ins
cdq
jmp
add
mov
ins
icebp
xchg
imul
cdq
add
test
dec
cs
cmp
lea
cdq
add
xchg
xchg
jmp
jle
imul
xchg
shl
(bad)
mov
lods
or
jmp
imul
sub
xchg
in
arpl
dec
outs
xchg
shl
pop
add
mov
imul
pushf
rcl
xchg
hlt
outs
ins
adc
inc
ins
pop
repz
lahf
mov
fwait
jle
jno
xor
sar
xchg
sbb
sub
push
cdq
cmp
imul
fidivr
imul
cs
leave
add
mov
imul
sub
add
imul
ins
cdq
enter
imul
sbb
fsubr
ins
leave
add
out
xchg
add
or
add
push
lea
cs
sbb
inc
movs
inc
sub
add
mov
ins
repz
mov
hlt
outs
ins
sbb
ins
pop
sbb
fsubr
ins
pop
push
fsubr
inc
cwde
imul
fcom
(bad)
or
add
lea
daa
ins
sbb
inc
mov
sub
add
mov
ins
repz
mov
retf
ins
ins
repz
inc
ins
rep
inc
ins
repz
inc
rcr
add
push
xchg
add
test
dec
cs
adc
push
xchg
lods
outs
mov
cdq
or
cdq
imul
sbb
fsubr
ins
pop
dec
int3
fld
or
cmove
jg
outs
cdq
jmp
add
mov
ins
icebp
out
hlt
cs
add
test
cs
cmp
(bad)
pop
popa
loop
add
mov
ins
repz
imul
lods
xor
cdq
imul
sub
push
cdq
add
cdq
imul
jno
outs
ins
jno
xor
adc
cmp
cs
in
jge
ins
repz
and
xor
cdq
imul
repz
das
ins
cdq
xchg
sbb
je
ins
repz
lods
hlt
outs
ins
repz
stc
retf
ins
ins
icebp
inc
das
ins
cdq
add
lea
push
add
imul
cdq
add
ins
jno
xor
scas
int
imul
repz
lods
hlt
outs
ins
repz
stc
retf
ins
ins
icebp
inc
das
ins
cdq
add
push
lea
sub
outs
cdq
jmp
add
mov
ins
icebp
out
hlt
cs
add
test
cs
cmp
sub
xchg
inc
ins
pop
sbb
fsubr
ins
pop
push
fsubr
jl
jmp
lea
ins
icebp
imul
leave
add
fld
mov
sub
push
cdq
adc
cmp
cs
pop
(bad)
in
add
xchg
lods
pop
mov
cdq
add
xchg
lods
das
mov
inc
test
scas
cdq
imul
cdq
imul
icebp
sub
cs
add
mov
imul
xor
push
cmc
fsubr
ins
pop
sbb
fsubr
ins
pop
push
fsubr
jl
xchg
cs
cdq
add
or
imul
leave
add
mov
sub
push
cdq
sub
imul
cdq
xchg
sbb
sub
push
cdq
xchg
sbb
cmp
cs
mov
js
and
ins
icebp
retf
cs
cdq
add
ins
cdq
cmp
inc
sub
add
mov
ins
repz
xchg
iret
or
imul
lods
hlt
outs
ins
repz
(bad)
outs
ins
repz
mov
imul
repz
ins
cdq
imul
mov
ins
icebp
mov
cs
add
test
cs
cmp
(bad)
cs
add
xchg
lods
pop
mov
cdq
add
xchg
lods
das
mov
imul
icebp
xchg
cs
cdq
add
add
imul
icebp
cmp
cs
add
mov
imul
xor
mov
fld
ins
pop
sbb
fsubr
ins
pop
dec
int3
fld
je
jmp
add
lea
cs
sbb
inc
cld
cmp
cs
mov
ins
icebp
imul
or
imul
pop
xchg
cmp
cs
lods
pop
mov
cdq
add
xchg
lods
or
push
mov
push
ins
sbb
inc
mov
sub
add
mov
ins
icebp
imul
or
cdq
imul
cdq
xchg
sbb
sub
push
cdq
xchg
sbb
sub
push
add
cmp
imul
cdq
add
mov
imul
imul
ja
cs
cmp
sub
lods
pop
mov
cdq
add
xchg
lods
das
mov
add
ins
icebp
sub
ins
cdq
add
add
imul
cdq
add
mov
imul
xor
mov
fld
aam
xchg
shl
popa
inc
(bad)
in
and
xchg
jno
push
test
in
call
jns
jnp
add
lods
sbb
ins
icebp
jmp
ins
cdq
add
add
imul
pushw
test
jno
ins
adc
stos
clc
cdq
imul
cdq
cmp
cs
loop
ins
popa
loop
cmp
aaa
ins
cdq
call
imul
fidivr
fidivr
sar
push
ds
fild
push
ins
sbb
lods
test
push
jae
jmp
add
mov
ins
icebp
aas
imul
cdq
xchg
pop
pusha
pushw
test
(bad)
rcl
fcom
inc
push
popa
cmp
sbb
imul
imul
sbb
cs
outs
mov
xor
xor
scas
int3
loop
in
jne
das
ins
cdq
cmp
xchg
je
jb
lods
xchg
imul
sub
loope
imul
cmp
aas
sub
in
add
cdq
imul
outs
xchg
cmps
mov
in
das
sbb
imul
leave
or
cdq
imul
icebp
mov
cs
out
ins
xchg
sar
data16
cdq
jmp
xchg
call
ins
adc
cs
xchg
jle
outs
jl
ins
sbb
scas
adc
pop
jge
jg
cs
out
ins
xchg
sar
mov
ins
cdq
jmp
xchg
pushf
push
aas
add
fisubr
out
cs
xchg
jle
pop
jl
ins
sbb
shr
jp
daa
sub
cs
imul
cmp
(bad)
mov
in
in
sub
mov
dec
fstp
imul
leave
cmp
outs
lea
xchg
adc
pop
jge
call
stos
ins
xchg
sar
sbb
ins
cdq
jmp
xchg
nop
push
aas
add
fisubr
out
cs
xchg
jle
ret
jl
ins
sbb
shl
jp
mov
sub
loope
imul
cmp
das
mov
in
in
and
(bad)
imul
leave
add
cdq
imul
sbb
shl
jp
dec
sub
cs
imul
cmp
arpl
xchg
and
mov
pop
(bad)
imul
leave
adc
cdq
imul
icebp
ds
cs
out
ins
xchg
sar
mov
ins
cdq
add
push
cdq
add
imul
sub
loope
imul
cmp
pop
sub
test
rcl
cdq
add
sub
sub
test
xchg
rcl
cdq
or
cdq
imul
jg
stos
xchg
addr16
shl
pop
add
xchg
jo
push
test
retf
aas
iret
cmp
sbb
and
stos
adc
ins
adc
sub
cmp
ins
jbe
shr
pop
arpl
lods
in
arpl
and
imul
ss
push
sbb
jge
into
aad
das
sbb
pop
ins
cdq
pushf
enter
fst
jmp
ins
ins
adc
ret
fwait
xchg
jle
(bad)
jge
ins
jno
xor
cdq
shl
ins
cdq
imul
popa
xchg
shr
and
(bad)
xchg
pushw
jge
(bad)
pushf
cs
out
sub
cmp
xchg
lahf
popa
xchg
shr
jp
stos
sub
cs
xchg
xchg
cmp
mov
imul
lahf
popa
xchg
shr
jp
mov
sub
loope
xchg
xchg
cmp
ret
mov
in
and
(bad)
xchg
outs
pop
jge
push
cs
out
sub
cmp
xchg
lahf
popa
xchg
shr
jp
jne
sub
loope
xchg
xchg
cmp
pop
mov
in
ja
adc
cdq
jmp
lahf
popa
xchg
shr
jp
pop
sub
cs
xchg
xchg
cmp
aaa
mov
in
and
(bad)
xchg
data16
pop
jge
and
cs
out
sub
cmp
xchg
lahf
popa
xchg
shl
inc
add
sub
loope
xchg
xchg
cmp
dec
mov
in
push
in
jmp
lahf
popa
xchg
shl
jp
out
sub
loope
xchg
xchg
cmp
imul
xchg
popaw
pop
jge
rcr
outs
xchg
sar
xchg
ins
cdq
jmp
lahf
popa
xchg
shl
jp
movs
sub
cs
xchg
xchg
cmp
mov
imul
in
and
(bad)
xchg
addr16
jge
sbb
outs
xchg
sar
(bad)
cmp
xchg
lahf
popa
xchg
shl
jp
outs
sub
xchg
xchg
cmp
dec
cwde
(bad)
xchg
gs
jge
dec
call
xchg
sar
adc
ins
cdq
add
fld
jmp
leave
sub
xchg
cmps
pushf
outs
lea
xchg
adc
cs
fldcw
add
callw
adc
(bad)
fwait
xchg
scas
shr
rcl
and
fst
lods
push
pop
pushf
adc
cs
test
inc
ins
icebp
sbb
scas
xchg
lods
test
loop
and
gs
fs
mov
imul
popf
push
rcl
sbb
jmp
nop
gs
rcl
out
push
ins
cdq
imul
mov
imul
sbb
rcl
popa
xchg
rcl
fld
jmp
leave
and
xchg
rcl
mov
out
neg
sbb
(bad)
xchg
xchg
sbb
imul
stos
fld
pusha
je
cmps
adc
adc
xchg
xchg
in
popa
outs
cdq
imul
fwait
push
sbb
retf
icebp
inc
imul
cdq
out
nop
addr16
sar
data16
cdq
jmp
or
ins
ins
icebp
je
cs
out
nop
popa
xchg
sar
call
jb
inc
ins
popf
imul
sbb
(bad)
xchg
cmp
ja
imul
imul
loope
xchg
(bad)
xchg
cmp
inc
sub
loope
xchg
rcl
mov
add
mov
ins
adc
rcl
jl
ins
sbb
rcl
mov
loope
xchg
rcl
leave
out
nop
popa
xchg
sar
xchg
imul
cdq
out
nop
popa
xchg
sar
push
cmp
jmp
xchg
rcl
cdq
imul
imul
cdq
out
nop
gs
sar
out
xchg
callw
nop
stos
and
lock
ins
adc
rcl
pushf
cmp
mov
adc
(bad)
xchg
xchg
xchg
out
imul
jg
stos
mov
pop
call
shl
in
sbb
imul
popa
xchg
rcl
cdq
add
mov
imul
leave
adc
cdq
imul
fld
jmp
leave
add
cdq
imul
leave
add
cdq
imul
jb
movs
jmp
sbb
sub
in
jnp
jmp
pop
out
sub
jb
shl
inc
pushf
rcl
xchg
sub
fst
xchg
(bad)
xchg
data16
nop
addr16
sar
mov
stos
nop
addr16
sar
push
cmp
jmp
xchg
jle
pop
js
ins
adc
(bad)
fwait
xchg
mov
xchg
into
sbb
dec
pushf
rcl
into
add
inc
jns
ins
adc
ficom
imul
jg
stos
mov
pop
out
nop
popa
xchg
sar
(bad)
xchg
xchg
mov
imul
sbb
(bad)
xchg
cmp
pop
mov
loope
xchg
rcl
ins
xchg
rcl
into
and
imul
leave
add
xchg
sub
(bad)
xchg
add
ins
repz
mov
cmp
mov
stos
nop
gs
sar
xchg
fwait
and
test
cmps
rcl
pop
(bad)
out
arpl
rcl
popa
xchg
rol
lods
dec
cmp
jo
test
add
ret
push
and
cmp
jl
imul
rcr
xchg
call
add
imul
jno
cmp
cdq
loop
enter
gs
pop
cmp
cs
ins
cdq
add
test
cs
shl
inc
inc
loop
out
arpl
stos
pushf
cmp
ins
cdq
jmp
leave
imul
jno
aas
ins
cdq
add
ins
cdq
imul
sub
test
pop
aas
ins
cdq
cmp
ja
imul
inc
pop
mul
pop
add
ins
cdq
imul
leave
xchg
pop
fs
ds
cdq
add
add
retf
adc
lahf
and
test
ds
xchg
cs
xchg
out
xor
imul
xchg
mov
cs
pushf
pop
call
imul
pop
jg
ins
and
cmps
lods
outs
sub
jae
mov
jmp
xchg
adc
mov
cs
xchg
cwde
sbb
idiv
ins
xchg
fst
(bad)
dec
es
jl
loop
fwait
jae
aam
pop
xchg
xor
loop
xor
clc
loop
in
push
mov
cs
xchg
cwde
loope
(bad)
push
xchg
sbb
es
cdq
lods
stos
ret
je
shr
cmp
in
call
add
(bad)
pop
mov
xchg
leave
add
mov
sbb
ret
cmp
imul
stos
iret
jne
sar
out
lahf
and
test
jnp
ins
adc
lea
(bad)
scas
rcl
cdq
imul
leave
sub
add
ret
cmp
xchg
mov
in
push
in
add
test
(bad)
imul
cdq
add
stos
inc
sub
add
hlt
outs
ins
jno
cmp
pop
inc
loop
loope
or
xchg
data16
push
mov
or
ins
ins
icebp
sti
(bad)
cs
add
mov
imul
sub
test
js
ins
adc
push
and
pop
fistp
cs
cdq
cwde
dec
leave
icebp
shl
cdq
add
stos
inc
sub
add
sti
outs
ins
jno
cmp
pop
inc
loop
loope
mov
xchg
data16
in
dec
sub
aad
imul
push
mov
mov
ins
icebp
sti
(bad)
cs
add
mov
imul
sub
test
scas
outs
loope
aad
xchg
data16
stos
dec
sub
aad
imul
push
cmps
mov
mov
scas
repz
inc
ins
repz
imul
cmc
outs
ins
jno
and
imul
imul
fs
pop
cs
xchg
xchg
imul
(bad)
jle
sbb
rcl
imul
adc
rcl
jmp
ins
cdq
push
xlat
push
cdq
out
aam
cmp
xchg
into
xchg
pop
fdiv
and
cs
sar
fwait
add
mov
imul
sub
imul
and
aam
out
fnstenv
sar
push
aas
ins
cdq
out
fnstenv
shr
push
xchg
outs
in
movs
push
sbb
cs
sar
adc
fwait
and
xchg
in
ffreep
adc
out
aam
add
imul
cs
and
int
sbb
ret
xchg
data16
fdiv
in
xchg
pop
fdiv
and
sub
fmul
cmps
scas
cmp
sub
adc
fist
fldcw
sub
adc
fisub
ins
cdq
loop
mov
adc
cs
cdq
add
dec
lods
imul
imul
mov
in
mov
cld
lods
imul
jp
stos
fdiv
out
fcmovnb
xchg
data16
stos
(bad)
sub
sub
cs
cdq
lods
imul
das
mov
test
sub
imul
cdq
xchg
sbb
sub
push
cdq
add
push
cdq
add
push
cdq
add
add
imul
icebp
mov
cs
add
mov
imul
and
repz
scas
or
cs
icebp
call
push
cdq
xor
cdq
imul
popf
xchg
callw
jno
and
cs
cdq
jmp
inc
icebp
(bad)
imul
cdq
sbb
cdq
imul
sub
cmp
push
ins
cdq
loop
shl
pop
sbb
xor
leave
xchg
mov
stos
sbb
rcl
loop
inc
inc
loop
loope
rol
xchg
cmp
xchg
leave
add
fld
adc
leave
fild
push
ins
sbb
lods
test
(bad)
out
sbb
sub
ins
pop
outs
inc
fcomp
imul
cdq
imul
xor
ins
cdq
out
les
sar
imul
pop
sub
add
push
cdq
add
cdq
imul
cs
adc
xchg
cdq
add
add
sbb
repz
and
(bad)
das
xchg
imul
cdq
add
ins
cdq
imul
repz
pop
xchg
imul
and
mov
mov
mov
scas
adc
retf
cli
and
cs
cdq
add
loope
(bad)
jle
mov
cs
nop
stos
pop
mov
pop
jnp
cmp
mov
ins
retf
rcr
(bad)
cmp
aaa
inc
ins
cdq
pushf
leave
in
xchg
cmps
stos
adc
and
popa
jnp
call
out
lods
xchg
fwait
fs
push
cwde
imul
add
jp
ins
cdq
fs
or
push
ins
in
jo
jge
imul
adc
push
push
ins
cdq
imul
sbb
ins
jo
es
cdq
call
cs
xchg
out
cli
ins
cdq
imul
sub
xchg
lods
add
mov
cmps
jmp
adc
inc
add
xchg
sub
rcl
xchg
lods
test
loop
mov
loope
mov
rcr
jge
rcl
cdq
(bad)
out
arpl
out
test
xchg
sar
pop
push
fsubr
cmps
xchg
imul
pop
pop
inc
out
mov
xchg
inc
stos
mov
jno
movs
stc
push
xchg
rcl
xchg
pop
mov
jns
rcl
xchg
lods
test
xchg
rol
mov
(bad)
sbb
mov
xchg
inc
stos
mov
xchg
sar
out
repnz
xchg
add
xchg
leave
add
push
cdq
xchg
sbb
cmp
cs
data16
adc
lods
push
std
fild
fs
(bad)
sahf
imul
std
fild
add
pop
popa
loop
out
mov
imul
cdq
push
and
cdq
or
xchg
ja
movs
sbb
jmp
pop
inc
fcomp
imul
jg
shl
cdq
loop
inc
popa
loop
int
hlt
outs
ins
mov
pop
sub
test
cs
jo
sub
repz
sub
arpl
(bad)
xchg
imul
popa
pushf
leave
in
adc
data16
test
cmp
sbb
rcl
mov
cs
pushf
sti
lea
cdq
pop
push
pushf
pop
(bad)
cs
pop
adc
pop
mov
cdq
pop
sbb
fwait
mov
cdq
pop
add
dec
push
pushf
pop
(bad)
cs
pop
xor
retf
lea
cdq
pop
cmp
addr16
cdq
pop
and
jg
sub
lahf
imul
cdq
xchg
pop
jl
fisub
ins
cdq
loopne
cwde
addr16
rcl
pop
(bad)
cs
pop
ds
pushf
retf
lea
cdq
pop
es
pushf
pop
mov
cdq
push
and
jnp
ins
pushw
test
cs
icebp
xchg
rcl
jno
and
jmp
out
cmp
rcl
inc
xchg
rcl
fs
sar
add
ins
cdq
loop
mov
test
pop
xchg
adc
loope
xchg
rcl
jno
outs
ins
jno
and
cdq
jmp
xchg
addr16
shr
inc
ins
repz
sub
push
cdq
adc
cdq
imul
jno
outs
ins
jno
and
cdq
xor
cdq
imul
out
fist
imul
sbb
sub
ins
xchg
out
mov
cdq
imul
imul
sbb
rcl
sbb
push
and
cdq
out
xchg
addr16
shr
push
xchg
outs
in
movs
push
sbb
(bad)
imul
xor
mov
addr16
sar
jno
mov
pusha
movs
xchg
shr
push
push
cdq
add
add
mov
ins
repz
xchg
imul
lods
out
(bad)
cs
xor
imul
pushf
imul
loop
cs
outs
mov
xchg
adc
xchg
leave
out
popf
fs
sar
inc
imul
cdq
out
popf
fs
sar
add
ins
cdq
call
cs
cdq
out
xchg
addr16
sar
pop
xor
fldcw
mov
and
rcl
repz
imul
cdq
add
test
pop
xor
fldcw
xchg
outs
cs
adc
rcl
sub
xchg
sbb
cs
cdq
add
mov
jno
and
cdq
xchg
sbb
sub
test
bound
ins
jo
sub
stos
nop
addr16
shr
and
sbb
rcl
fs
rcl
movs
push
push
dec
repz
stc
cs
add
test
cs
pop
xor
fldcw
sbb
outs
cs
sbb
rcl
sbb
rcl
and
fldenv
sbb
rcl
push
add
mov
imul
leave
adc
imul
cdq
imul
leave
xchg
sbb
cmp
test
cs
sbb
rcl
mov
add
mov
jno
daa
ins
cdq
xchg
sbb
cmp
test
cs
jo
sub
xchg
addr16
sar
out
fist
mov
ins
ins
adc
fist
and
sbb
cs
adc
rcl
lods
inc
mov
cdq
sub
fs
rcl
cdq
add
add
mov
mov
inc
mov
cdq
xor
call
ins
cdq
out
xchg
addr16
sar
out
fist
cmp
xchg
xchg
jle
sub
ins
sbb
cs
adc
rcl
lods
inc
mov
cdq
xor
cdq
imul
cdq
push
push
push
cdq
add
add
mov
(bad)
jmp
imul
lods
inc
mov
cdq
sbb
cdq
imul
call
xchg
callw
fldpi
adc
push
xlat
out
popa
push
inc
ins
icebp
inc
stc
cs
add
test
arpl
ins
pop
push
repz
xchg
sahf
imul
popa
imul
xchg
xchg
xchg
rcl
addr16
rcl
pop
sub
adc
cs
mov
(bad)
jg
imul
lods
inc
mov
cdq
sub
cdq
imul
fwait
imul
sbb
rcl
bound
pop
aad
lods
xlat
inc
cdq
imul
leave
out
popf
fs
sar
inc
imul
cdq
out
popf
fs
sar
scas
daa
ins
cdq
call
cs
cdq
out
xchg
addr16
sar
pop
push
repz
inc
sahf
imul
and
rcl
repz
stc
cs
add
test
ins
cs
pop
push
repz
sub
imul
xchg
xchg
xchg
rcl
addr16
rcl
pop
sub
adc
cs
mov
(bad)
aaa
sahf
imul
lods
dec
mov
cdq
and
cdq
imul
fwait
imul
sbb
rcl
fs
rcl
sbb
ins
in
xchg
and
or
rcl
xor
rcr
rcl
push
add
mov
imul
leave
adc
cdq
imul
cdq
imul
adc
retf
xchg
movs
jmp
adc
push
icebp
imul
fld
outs
repz
out
pushf
imul
sbb
rcl
cdq
add
xchg
sub
rcl
cdq
imul
cdq
push
imul
cdq
call
adc
push
xlat
in
add
loope
xchg
xchg
cmp
test
(bad)
xchg
xchg
(bad)
stos
pushf
imul
cdq
out
and
repz
sub
rcl
cdq
imul
sbb
das
ins
in
xchg
inc
ins
adc
ret
xchg
jl
adc
fist
sub
rcl
cdq
imul
ret
xchg
jle
fwait
add
mov
imul
imul
fwait
pushf
addr16
rol
pop
push
fsubr
(bad)
lahf
imul
cdq
add
push
popf
add
push
cdq
add
ins
cdq
sub
or
test
outs
cs
adc
ficom
test
cmps
stos
repz
xchg
rcl
cdq
out
cld
cmp
cs
push
xchg
outs
in
movs
push
sbb
in
push
cdq
out
and
retf
into
fld
fldcw
rcl
cdq
add
loope
xchg
xchg
cmp
xchg
cs
xchg
fwait
pushf
addr16
rol
xchg
pop
xchg
adc
xchg
jno
sub
add
imul
popf
add
add
fild
adc
cs
add
fld
ins
cdq
imul
sbb
sbb
test
cs
adc
lds
push
cmp
xchg
xchg
pop
fs
sub
jo
push
test
retf
out
jne
jge
into
loopne
fs
inc
movs
retf
loop
ins
popa
loop
out
adc
imul
sbb
cs
cdq
call
stos
stos
cdq
imul
lods
out
(bad)
cs
push
and
sub
cdq
imul
mov
imul
pop
scas
int
imul
popf
imul
lods
jmp
cs
push
and
sub
cdq
imul
in
pusha
rcr
(bad)
outs
ins
jno
sub
sbb
sub
sbb
sub
test
outs
cs
adc
(bad)
in
push
sbb
sbb
sub
test
pop
push
repz
js
push
pop
fcomp
imul
xchg
xchg
sbb
outs
cs
mov
imul
push
pop
fcomp
imul
adc
arpl
ins
jb
xchg
fst
loop
cwde
adc
icebp
fsubr
push
jbe
stc
fldcw
pop
sbb
ins
ins
in
ins
movs
jno
hlt
outs
ins
adc
adc
ins
in
ins
movs
jno
hlt
outs
ins
mov
imul
jbe
cld
fldcw
pop
mov
outs
ins
in
ins
movs
jno
retf
mov
imul
jbe
cmc
fldcw
pop
sbb
ins
movs
jno
hlt
outs
ins
nop
mov
jle
push
cmp
xchg
cmp
cs
jb
cmps
xchg
mov
cmps
stos
(bad)
xor
cs
cdq
imul
xchg
cwde
ins
ins
or
cs
cdq
imul
xchg
cwde
ins
ins
or
cs
cdq
imul
mov
cs
cdq
imul
lea
cs
cdq
imul
mov
sti
cs
cdq
imul
mov
ins
ins
or
cs
cdq
imul
test
sti
cs
cdq
imul
lods
cwde
ins
ins
or
cs
cdq
imul
cmp
daa
imul
adc
push
mov
cmp
imul
nop
stos
pop
inc
adc
push
mov
sub
rcr
call
lds
fs
imul
push
sbb
test
cs
repz
push
cdq
cmp
sub
shl
push
test
in
jne
ds
cdq
inc
cs
imul
cdq
imul
scas
stos
push
cdq
imul
and
sahf
aaa
pushf
mul
rcl
out
dec
sub
adc
or
arpl
ins
cdq
imul
fstp
cs
cdq
imul
fstp
cs
cdq
imul
rcr
cs
cdq
imul
aad
ins
ins
or
cs
cdq
imul
leave
cwde
ins
ins
or
cs
cdq
imul
int
ins
ins
or
cs
cdq
imul
rcr
ins
cdq
imul
lds
cs
cdq
imul
stc
cwde
ins
ins
or
cs
cdq
imul
std
cwde
ins
ins
or
cs
cdq
imul
icebp
cwde
ins
ins
or
cs
cdq
imul
cmc
cwde
ins
ins
or
cs
cdq
imul
jmp
sti
cs
cdq
imul
in
cwde
ins
ins
or
cs
cdq
imul
loope
ins
ins
or
cs
cdq
imul
in
ins
ins
or
cs
cdq
imul
sbb
cs
cdq
imul
sbb
sti
cs
cdq
imul
adc
cs
cdq
imul
adc
sti
cs
cdq
imul
or
cs
cdq
imul
or
sti
cs
cdq
imul
add
cs
cdq
imul
add
sti
cs
cdq
imul
cmp
cs
cdq
imul
cmp
sti
cs
cdq
imul
xor
cs
cdq
imul
xor
sti
cs
cdq
imul
sub
cs
cdq
imul
sub
sti
cs
cdq
imul
and
cs
cdq
imul
and
sti
cs
cdq
imul
pop
cwde
ins
ins
or
cs
cdq
imul
pop
cwde
ins
ins
or
cs
cdq
imul
push
cwde
ins
ins
or
cs
cdq
imul
push
cwde
ins
ins
or
cs
cdq
imul
dec
cwde
ins
ins
or
cs
cdq
imul
dec
cwde
ins
ins
or
cs
cdq
imul
inc
cwde
ins
ins
or
cs
cdq
imul
inc
cwde
ins
ins
or
cs
cdq
imul
jns
ins
ins
or
cs
cdq
imul
jge
ins
ins
or
cs
cdq
imul
jno
ins
ins
or
cs
cdq
imul
jne
ins
ins
or
cs
cdq
imul
popa
cwde
ins
ins
or
cs
cdq
imul
gs
ins
ins
or
cs
cdq
imul
cdq
lahf
ins
ins
or
cs
cdq
imul
popf
lahf
ins
ins
or
cs
cdq
imul
xchg
lahf
ins
ins
or
cs
cdq
imul
xchg
lahf
ins
ins
or
cs
cdq
imul
mov
cs
cdq
imul
lea
cs
cdq
imul
sbb
ror
lahf
ins
ins
or
cs
cdq
imul
mov
sti
cs
cdq
imul
mov
sti
cs
cdq
imul
mov
ins
ins
or
cs
cdq
imul
mov
ins
ins
or
cs
cdq
imul
test
sti
cs
cdq
imul
lods
lahf
ins
ins
or
cs
cdq
imul
mov
sti
cs
cdq
imul
movs
lahf
ins
ins
or
cs
cdq
imul
fstp
cs
cdq
imul
fstp
cs
cdq
imul
rcr
cs
cdq
imul
aad
ins
ins
or
cs
cdq
imul
leave
lahf
ins
ins
or
cs
cdq
imul
int
ins
ins
or
cs
cdq
imul
rcr
ins
cdq
imul
lds
cs
cdq
imul
stc
lahf
ins
ins
or
cs
cdq
imul
std
lahf
ins
ins
or
cs
cdq
imul
jmp
sti
cs
cdq
imul
in
lahf
ins
ins
or
cs
cdq
imul
loope
ins
ins
or
cs
cdq
imul
in
ins
ins
or
cs
cdq
imul
sbb
cs
cdq
imul
adc
sti
cs
cdq
imul
or
cs
cdq
imul
or
sti
cs
cdq
imul
add
cs
cdq
imul
add
sti
cs
cdq
imul
cmp
cs
cdq
imul
cmp
sti
cs
cdq
imul
xor
cs
cdq
imul
xor
sti
cs
cdq
imul
and
cs
cdq
imul
and
sti
cs
cdq
imul
pop
lahf
ins
ins
or
cs
cdq
imul
pop
lahf
ins
ins
or
cs
cdq
imul
push
lahf
ins
ins
or
cs
cdq
imul
push
lahf
ins
ins
or
cs
cdq
imul
dec
lahf
ins
ins
or
cs
cdq
imul
dec
lahf
ins
ins
or
cs
cdq
imul
inc
lahf
ins
ins
or
cs
cdq
imul
inc
lahf
ins
ins
or
cs
cdq
imul
jns
ins
ins
or
cs
cdq
imul
jge
ins
ins
or
cs
cdq
imul
jno
ins
ins
or
cs
cdq
imul
jne
ins
ins
or
cs
cdq
imul
imul
ror
lahf
ins
ins
or
cs
cdq
imul
popa
lahf
ins
ins
or
cs
cdq
imul
gs
ins
ins
or
cs
cdq
.byte
