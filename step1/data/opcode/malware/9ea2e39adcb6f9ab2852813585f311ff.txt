repnz
ret
jne
retf
adc
ret
push
div
dec
adc
cmps
sub
push
cmp
ret
push
cmp
pop
aad
xchg
ins
test
adc
cmp
push
out
out
cmp
(bad)
sbb
fcmovu
xor
and
sbb
and
invd
mov
mov
dec
sbb
cmp
xchg
jo
imul
ret
push
cmp
xchg
xlat
mov
add
imul
adc
push
jge
retf
mov
fbld
or
rcr
mov
ror
add
imul
mov
dec
dec
adc
push
cmp
pop
add
xor
fadd
shl
jle
fadd
les
jle
mov
or
sar
aad
cmp
push
wrmsr
mov
(bad)
mov
push
test
xorps
fcmovb
ror
or
popa
xor
fcmovbe
ror
and
jae
xor
adc
sub
push
xor
fidiv
iret
data16
mov
xor
or
bound
or
pop
inc
dec
jmp
mov
mov
scas
jge
inc
xchg
xchg
sub
inc
xor
pop
hlt
mov
fimul
jg
scas
(bad)
mov
(bad)
xor
pop
hlt
mov
fisubr
cmp
jge
add
xchg
push
cmp
push
cmp
pop
call
mov
push
call
cmp
rol
retf
sbb
shl
sar
cmp
push
mov
pop
mov
mov
cmp
in
jp
mov
rol
test
ret
mov
add
retf
scas
mov
jae
adc
sub
xchg
push
fsub
mov
scas
mov
jmp
imul
ret
cmp
cmp
adc
and
push
sub
call
jle
cmp
sub
push
rcr
je
cmp
push
add
rol
aam
dec
xor
ins
sbb
pop
inc
pop
cmps
cmp
mov
push
ret
cmp
cmp
jne
jle
cmp
jns
push
add
jns
jle
scas
mov
jae
add
jno
jle
fsub
aam
daa
cmp
call
mov
dec
jmp
push
inc
cmp
fsub
fistp
hlt
cmp
add
imul
mov
jp
and
pop
int3
jo
jge
add
adc
adc
push
cmp
nop
inc
ret
push
or
jnp
mov
mov
mov
inc
mov
repnz
imul
jl
xchg
cmp
mov
xchg
add
mov
cmp
add
mov
or
repz
mov
jo
jge
sub
cmp
rol
(bad)
scas
jge
ret
and
imul
sub
mov
mov
dec
xchg
mov
ret
mov
mov
pushf
psubusw
add
fst
mov
ins
pop
movs
push
xor
lods
rcl
cmp
cmp
push
call
ret
mov
push
mov
rol
in
xor
mov
jge
xlat
scas
mul
test
scas
test
ret
fadd
lods
push
mov
and
xchg
mov
(bad)
jmp
imul
or
cmc
add
fld
mov
out
jns
outs
sub
or
fadd
les
vmwrite
add
and
ret
scas
div
cmp
mov
xchg
sub
retf
mov
sub
dec
fld
sahf
push
ret
scas
imul
and
aam
sub
dec
aas
mov
mov
mov
mov
sub
cld
cmp
mov
movs
or
pushf
cmovnp
xchg
fsub
das
inc
shr
(bad)
xor
jp
aam
xchg
mov
test
or
scas
xchg
adc
mov
scas
pusha
pop
mov
test
or
scas
xchg
adc
mov
lods
add
add
xor
xor
inc
mov
jg
mov
add
ret
(bad)
imul
adc
mov
inc
mov
mov
lods
imul
ret
cmps
out
dec
adc
mov
test
dec
ret
adc
cmp
add
cs
xchg
inc
mov
call
dec
cmp
ror
stc
ret
cmp
cmp
cmp
and
dec
call
push
cmp
idiv
add
imul
mov
inc
inc
mov
mul
inc
dec
aam
ret
cmp
xchg
or
cmp
test
fadd
or
or
inc
dec
retf
cmp
sub
or
sub
(bad)
jmp
push
dec
lds
jnp
mov
(bad)
dec
aam
ret
cmp
scas
jl
dec
aam
ret
cmp
scas
jl
dec
aam
ret
cmp
scas
jl
dec
mov
cmp
dec
aam
cmp
scas
frstor
cwde
inc
imul
aam
dec
or
sti
xchg
cmp
out
or
lods
or
fadd
shl
imul
ret
(bad)
xor
or
rol
or
xor
inc
mov
jnp
jmp
mov
hlt
pop
mov
jns
xchg
xchg
fcmovb
ror
mov
mov
(bad)
ror
jle
popf
or
xchg
fsub
xchg
add
imul
sti
xchg
or
fadd
add
xlat
shl
imul
ret
(bad)
xor
or
rol
or
xor
inc
mov
jnp
jmp
mov
hlt
pop
mov
in
push
or
lods
or
fadd
sar
mov
xchg
xchg
push
fsub
xchg
xlat
mov
add
push
(bad)
sub
or
sti
xchg
or
fadd
add
xlat
sar
mov
dec
or
pop
cmp
sti
fdivr
xor
iret
xor
out
xchg
sub
repnz
ret
push
mov
push
aas
test
cmp
pusha
inc
arpl
fsub
xchg
add
imul
adc
adc
mov
dec
xchg
jge
mov
sar
mov
sar
or
fcmovu
xor
adc
ret
cmp
or
adc
push
mov
ret
cmp
inc
sbb
pop
or
xor
or
fadd
popf
or
xchg
fsub
xchg
add
imul
or
jl
fucomi
cmp
cmps
gs
lods
or
cmp
mov
out
and
call
ret
fcom
outs
xchg
scas
div
push
call
cmp
jmp
jne
dec
adc
mov
xchg
xchg
ret
fdiv
popf
or
xchg
fsub
nop
pop
aad
mov
cmp
mov
ret
sar
cmp
pop
and
dec
dec
jge
retf
fcmovb
cmp
xchg
dec
push
jge
dec
dec
jge
retf
fdivr
and
mov
mov
and
dec
call
dec
shr
(bad)
xor
adc
(bad)
loop
jp
cmp
inc
mov
(bad)
push
call
cmp
fadd
int3
xchg
cmp
mov
push
xor
fadd
add
xor
or
pop
inc
dec
xchg
pop
jmp
cmp
aam
and
cld
retf
mov
retf
cmovp
jmp
scas
mov
shr
cmp
add
mov
cmp
mov
int3
int
mov
mov
cld
mov
mov
cmp
mov
pop
push
cmp
jge
repnz
frstor
cwde
inc
imul
adc
and
xchg
and
dec
mov
add
scas
cmp
add
mov
lock
mov
pop
push
hlt
ret
mov
pop
and
cmp
sar
cmp
dec
and
dec
popa
jge
retf
shr
xchg
push
cmp
push
jmp
mov
ret
jge
iret
mov
call
jle
fadd
fnstsw
jge
sub
ret
cmp
inc
xor
scas
jge
ret
and
mov
ret
push
imul
cmp
shl
nop
push
xor
pop
or
or
push
sahf
mov
lods
add
push
lea
inc
sub
cmp
aam
cmp
cmp
add
scas
cmp
or
xor
or
dec
xchg
jge
mov
adc
add
ret
daa
test
ret
push
and
adc
inc
aas
cmp
push
mov
and
mov
dec
xchg
in
xchg
jp
xchg
xor
mov
rcl
fsub
(bad)
push
cmp
or
(bad)
cmp
or
fcomp
and
pop
in
scas
jge
add
inc
ret
and
push
pop
repnz
arpl
fcmovb
int3
xchg
fidivr
cmp
push
or
pop
inc
dec
hlt
fcomp
sbb
inc
mov
lea
cmp
and
dec
imul
dec
adc
xor
(bad)
sub
jge
ret
fcmovb
xor
aam
ret
cmp
mov
add
pop
repnz
mov
xchg
fidiv
jns
fcmovb
enter
xor
jge
cmp
cmps
mov
jnp
mov
cmps
popa
mov
test
cmp
inc
arpl
fsub
das
inc
shr
out
dec
jne
bound
shl
sub
or
inc
cmps
mov
pop
aas
push
or
sar
lods
ret
push
xor
lods
cmp
or
dec
test
jp
add
cli
mov
js
je
test
(bad)
xor
adc
div
idiv
inc
xor
cmp
adc
mov
push
sub
jle
mov
add
retf
fdivr
and
mov
arpl
sar
in
retf
cmp
mov
mov
add
push
add
push
imul
add
out
adc
les
add
push
mov
dec
test
jp
add
sahf
xor
xor
xlat
rcr
(bad)
xor
push
mov
cli
xchg
repz
mov
cmp
mov
pop
or
sar
(bad)
scas
jge
cmps
lods
cmp
scas
div
popa
sbb
push
push
ret
push
imul
push
call
cmp
push
cmp
and
push
xor
push
call
push
ret
push
or
fadd
or
or
inc
push
ret
fmul
enter
dec
retf
scas
test
ret
cmp
push
sar
fadd
mov
or
xor
or
fcmovb
int3
dec
xchg
jge
cmp
frstor
cwde
inc
imul
adc
cmp
cmp
pop
aad
movs
sub
ret
cmps
popa
mov
in
ret
inc
mov
ret
xchg
pop
sar
cmp
mov
jle
mov
or
dec
aam
ret
cmp
stos
jge
call
cmp
fcomp
sbb
inc
push
ret
mov
push
lods
push
xor
fcomp
sbb
inc
ret
jbe
jge
cmp
pop
clc
cmp
jge
sub
inc
xor
push
lahf
adc
cmp
push
jne
dec
aam
ret
cmp
aam
ret
cmp
repnz
mov
jns
pop
inc
dec
popa
fcomp
and
pop
nop
cmp
jge
add
pop
loopne
scas
jge
stos
xor
ret
fiadd
fdivr
jge
dec
imul
ret
fadd
ror
lea
inc
xchg
sub
push
ud1
scas
jl
xchg
lock
lahf
adc
inc
dec
adc
xor
retf
push
adc
cmp
in
ret
cmp
scas
jge
pop
pop
or
test
aas
les
jge
inc
popf
jge
cmp
(bad)
pushf
adc
dec
cmp
cmp
repnz
mov
jns
pop
inc
xor
test
aaa
add
ret
pop
push
mov
push
cmp
lea
test
adc
ret
push
xor
pop
or
movs
fdivr
call
mov
mov
(bad)
scas
jge
ret
pop
push
add
je
and
cmp
aam
ret
cmp
icebp
ret
cmp
stos
in
cmp
rol
int3
out
call
rcr
stc
jge
cmp
add
scas
in
cmp
pop
pop
inc
push
cmp
cmp
cmp
add
jge
mov
add
iret
ins
jge
ret
push
neg
test
adc
ret
push
xor
pop
mov
dec
leave
xchg
pop
xchg
cmp
jge
ret
push
adc
inc
fadd
adc
ret
inc
xchg
mov
cmp
cmp
call
jle
fdivr
sar
imul
ja
cmp
inc
xor
scas
jge
ret
and
jge
cmp
cmp
adc
cmp
add
jge
mov
add
iret
ins
jge
ret
push
neg
test
adc
ret
push
ss
jge
pop
pop
mov
dec
leave
xchg
pop
xchg
cmp
jge
ret
push
adc
and
adc
aam
movs
jge
inc
xchg
mov
cmp
cmp
call
jle
fdivr
sar
imul
ja
cmp
inc
xor
scas
jge
ret
and
jge
cmp
cmp
pop
retf
and
pop
pushf
cmp
jge
add
adc
cmp
add
jge
mov
add
iret
ins
jge
ret
push
div
add
sub
cmp
push
call
jle
cmp
pushf
adc
aaa
scas
jge
pop
pop
mov
dec
leave
xchg
pop
xchg
cmp
jge
ret
push
adc
cli
fadd
adc
ret
inc
xchg
mov
cmp
cmp
call
jle
fdivr
sar
imul
jbe
cmp
inc
xor
scas
jge
ret
and
push
ret
fadd
scas
jl
xchg
mov
add
iret
ins
jge
ret
push
div
add
sub
cmp
push
add
(bad)
pop
cmp
sub
cmp
xchg
xchg
cmp
jg
cmp
stos
jge
call
jle
push
and
adc
cmp
mov
mov
ret
mov
add
xchg
cmp
aam
ret
cmp
lea
cmp
or
push
fidiv
int3
aam
cmp
push
ud1
jl
xchg
fiadd
in
scas
jge
dec
imul
dec
mov
inc
aas
push
lea
inc
hlt
push
ret
cmp
sti
retf
shl
in
cmp
jge
inc
in
cmp
cmp
in
cmp
rol
mov
aam
ret
cmp
aam
ret
cmp
push
ud1
jl
xchg
fadd
movs
cmp
jge
dec
aam
ret
cmp
scas
aam
dec
mov
dec
aam
ret
cmp
aam
ret
cmp
mov
cmp
aam
ret
cmp
scas
xchg
add
push
cmp
jle
add
add
push
xor
add
mov
xchg
fidivr
cmp
fadd
ror
in
xchg
add
push
lea
dec
aam
ret
cmp
cmp
cmp
mov
cld
int3
aam
aas
ret
push
add
das
bound
mov
xchg
fiadd
loopne
scas
jge
dec
imul
jnp
loopne
ret
cmps
popa
mov
stc
jge
cmp
inc
mov
inc
xchg
cmp
scas
jge
dec
aam
ret
cmp
scas
aad
dec
adc
mov
pusha
pop
mov
sar
rol
pop
pop
rcl
sub
out
ret
shl
int3
cmp
jge
cmp
jp
cmp
adc
ret
push
scas
push
cmp
scas
jl
ret
mov
call
cmp
shl
xchg
ret
jbe
jge
cmp
pop
sar
ins
stos
xor
jle
fadd
sar
ins
sub
cmp
rol
dec
mov
sti
inc
fnstcw
cmp
xor
fadd
lods
cmp
jge
inc
int
ret
jns
inc
mov
xchg
push
jno
dec
in
ret
cmp
fsub
(bad)
push
cmp
or
xchg
fidivr
jns
pop
inc
xor
cmp
daa
cwde
cmp
jge
inc
xchg
jl
ret
push
ud1
jl
xchg
cmp
fld
scas
jl
xchg
fidivr
cmp
push
or
pop
inc
xor
cmp
jno
call
ret
or
xchg
fidivr
jns
pop
inc
xor
cmp
daa
xchg
cmp
jge
sub
adc
cmp
or
add
bnd
cmp
aam
ret
cmp
scas
jl
dec
aam
ret
cmp
and
cmp
outs
sub
mov
cmp
push
or
fdiv
dec
cmp
jge
das
inc
or
jp
cmp
daa
mov
cmc
jge
cmp
or
cmp
div
xchg
push
or
fadd
pusha
cmp
jge
add
inc
ret
pop
pop
pop
ret
mov
cmp
ud1
jl
xchg
cmp
fld
scas
jl
xchg
fidivr
cmp
push
or
pop
inc
xor
cmp
aas
mov
int3
aad
cmp
mov
cmp
ret
pop
mov
dec
imul
dec
mov
inc
aas
push
lea
movs
sar
pop
cmp
jge
int3
aam
cmp
push
add
ret
pop
push
cld
ret
push
xor
add
stos
scas
jl
sub
jno
cmp
inc
xor
xchg
lds
cmp
inc
call
jge
cmp
lea
add
jb
cmp
push
call
ret
cmp
scas
jl
xchg
cmp
fadd
scas
jl
xchg
mov
add
xlat
fmul
sar
mov
call
dec
cmp
pop
les
jge
sub
cmp
scas
aaa
fs
jge
inc
or
sar
mov
dec
aad
sar
ins
sub
jmp
ret
rol
test
scas
jl
xchg
cmp
fadd
scas
jl
xchg
mov
add
rcl
jno
xchg
mov
cmp
idiv
aam
ret
cmp
scas
aam
dec
mov
dec
aam
ret
cmp
aam
ret
cmp
scas
jl
cli
aam
ret
cmp
scas
jge
dec
aam
ret
cmp
scas
aam
dec
aam
ret
cmp
scas
aam
cmp
outs
ret
cmp
scas
jl
cli
aam
ret
cmp
lods
jge
inc
in
jb
cmp
xchg
pop
sar
cmp
je
cmp
cmps
popa
mov
stc
jge
cmp
inc
mov
mov
or
pop
mov
cmp
div
dec
aam
ret
cmp
scas
aam
inc
in
push
ret
cmp
fiadd
call
dec
popa
jge
retf
fiadd
in
scas
jge
dec
popa
jge
retf
fiadd
loopne
scas
jge
dec
popa
jge
retf
fcomp
sbb
inc
mov
mov
ret
or
pop
mov
in
jge
pushf
psubusw
add
fldcw
adc
cmp
lock
rcr
je
cmp
push
add
xlat
add
imul
sti
xchg
add
dec
cmp
xchg
mov
inc
adc
hlt
out
adc
cmp
pop
jmp
and
sar
cmp
(bad)
adc
ret
cmp
jge
jmp
(bad)
fadd
push
cmp
(bad)
dec
push
xchg
or
fdivr
fdiv
loopne
jecxz
jns
scas
jge
cmp
fsub
fcmovb
int3
cmps
repnz
adc
add
imul
in
xchg
fdivr
and
mov
ja
adc
adc
cmp
push
call
cmp
fadd
sub
dec
call
inc
shr
or
cmp
or
xchg
jge
mov
sar
add
mov
jb
xor
inc
mov
ret
push
add
sti
into
ret
cmp
shl
cmp
push
outs
mov
ret
push
inc
cmp
push
cmp
ret
mov
repz
push
lea
ret
pop
inc
xor
cmp
jge
ret
push
lea
cmp
pop
lods
ja
cmp
imul
ret
(bad)
and
inc
mov
add
add
(bad)
adc
jns
push
xchg
adc
cmp
pop
call
imul
movs
adc
into
lock
mov
sti
into
ret
cmp
push
jge
sti
into
ret
cmp
mov
jbe
add
push
jge
sti
into
ret
cmp
stos
cmp
xchg
adc
jge
inc
idiv
repnz
imul
push
cmp
ror
sub
adc
jge
repz
lods
adc
cmp
jge
(bad)
dec
sbb
cmp
xchg
imul
push
cmp
ror
cmp
pop
jge
cmp
xchg
adc
cld
sub
inc
pop
mov
dec
sbb
jl
adc
cmp
mov
ret
cmp
xchg
adc
cld
sub
cmp
jb
xor
inc
mov
ret
push
inc
cmp
int3
ret
cmp
push
cmp
jl
cmp
xchg
adc
cld
sub
cmp
ins
xor
push
cmp
inc
cmp
push
cmp
jl
cmp
xchg
adc
jge
fdiv
xor
inc
mov
ret
adc
ret
popf
das
int3
ret
cmp
push
mov
and
fadd
int3
dec
xchg
add
fcmovne
ret
cmp
mov
and
pop
adc
cmp
into
ret
cmp
lahf
cmp
(bad)
movs
adc
retf
rol
sub
cmp
outs
mov
sti
into
ret
cmp
inc
dec
ja
cmp
push
imul
js
mov
rol
aas
sub
cmp
inc
aad
push
cmp
call
sbb
dec
push
and
xor
push
rcr
add
test
out
adc
push
add
dec
cmp
push
std
push
cmp
pop
cld
jne
cmp
imul
adc
jge
push
xchg
adc
add
adc
mov
ror
jl
pop
mov
sub
cmp
je
mov
ret
(bad)
and
xchg
adc
cmp
push
or
sbb
sahf
mov
sar
stos
int3
dec
xchg
lea
ret
je
cmp
push
or
pop
xor
mov
sar
test
stos
mov
xor
cmp
inc
and
(bad)
pop
adc
ins
and
adc
add
cmp
and
adc
jl
sar
ds
add
push
imul
sub
cmp
rol
sar
dec
out
(bad)
and
adc
int3
dec
xchg
or
sbb
sahf
daa
int3
ret
cmp
out
fcomp
cmp
sar
mov
(bad)
mov
(bad)
rol
cmp
stos
int3
dec
xchg
add
iret
rol
ret
mov
or
iret
rol
dec
push
or
(bad)
imul
xor
sbb
push
mov
mov
add
iret
rol
ret
mov
or
iret
rol
dec
push
or
(bad)
stc
and
scas
xchg
push
adc
cmp
push
mov
push
test
mov
cmp
or
xchg
xlat
mov
add
push
out
int
cmp
cmp
xchg
retf
and
xchg
jge
mov
sar
cmp
mov
or
stos
inc
cmp
push
push
pushf
push
sbb
jns
jle
push
push
pushf
push
sbb
adc
mov
test
cmp
push
push
pushf
push
sbb
sbb
jle
push
push
pushf
push
sbb
(bad)
ret
push
push
pushf
push
sbb
cmovnp
xchg
fsub
das
and
push
jmp
ret
(bad)
cmp
test
adc
ret
(bad)
or
(bad)
aam
push
cmp
and
xchg
add
push
vmwrite
(bad)
int3
add
jbe
ret
push
cmp
shl
(bad)
rol
xchg
adc
mov
pusha
pop
mov
shl
call
ret
cmp
adc
cmp
movs
jbe
cmp
mov
jns
fadd
(bad)
and
(bad)
fdivr
test
push
cmp
jmp
fisttp
push
mov
xchg
(bad)
mov
push
cmp
cmp
sub
mov
cmp
iret
data16
aam
cmp
jns
add
aaa
int3
ret
cmp
mov
jns
add
cmp
adc
ins
test
push
call
aam
xor
ins
cmp
es
loope
push
ret
pop
ret
push
jge
mov
sar
jge
arpl
adc
xchg
scas
neg
sub
jecxz
ret
jmp
jne
dec
adc
mov
scas
neg
sub
xchg
adc
ret
mov
vmwrite
add
aaa
int3
ret
cmp
adc
xlat
(bad)
cwde
out
and
dec
call
jne
jns
je
jp
fcmovb
ror
mov
mov
pop
daa
fadd
loopne
adc
mov
pop
or
fcmove
sub
sbb
mov
adc
xlat
ror
push
(bad)
cmp
les
scas
test
aaa
add
ret
cmp
mov
(bad)
popa
sbb
enter
push
aas
inc
ret
cwde
inc
imul
jecxz
(bad)
jp
cmp
inc
ret
(bad)
and
div
scas
jge
ror
ret
cmp
mov
cmp
cmps
gs
lods
or
pushf
cwde
inc
imul
aam
dec
and
mov
pop
jge
mov
sar
lea
ret
push
or
xor
hlt
push
mov
dec
jmp
xor
hlt
push
mov
dec
fistp
js
push
mov
dec
rcr
js
push
mov
xor
cmp
(bad)
sub
adc
mov
jns
push
lea
(bad)
push
loopne
adc
dec
aam
cmp
push
or
mov
sub
push
cmp
js
sub
mov
inc
mov
mov
xor
xchg
add
cmp
push
int3
out
cmp
mov
fdiv
jne
jge
add
cmp
cmp
jle
add
lahf
push
xor
add
push
adc
sub
cmp
ret
add
aam
or
jp
or
(bad)
das
(bad)
push
js
sub
in
rcl
sub
jns
fcmovb
sub
adc
add
(bad)
fcmovbe
enter
cmp
jecxz
xor
cmp
inc
sub
xchg
jg
cmp
add
push
imul
scas
jge
(bad)
and
mov
mov
sbb
add
push
div
test
mov
mov
shr
inc
ins
test
mov
or
inc
mov
test
stos
and
cmp
or
inc
mov
cmps
dec
aad
pop
aas
xchg
push
(bad)
rol
dec
push
xchg
cmp
jmp
dec
cmps
fdivr
inc
ins
test
mov
or
inc
mov
or
jp
sub
add
push
idiv
test
xor
lds
ret
push
idiv
(bad)
mov
lods
mov
rcr
(bad)
das
(bad)
push
js
sub
in
ret
aam
fadd
les
xchg
mov
push
xchg
dec
add
mov
push
cmp
add
std
push
imul
test
or
jp
sub
add
push
test
rcl
cmp
and
mov
shr
int3
out
cmp
ins
div
(bad)
scas
cmp
test
cmp
cmp
push
cdq
push
xor
push
add
mov
cmp
lds
ret
pop
add
popf
or
xchg
fsub
das
pop
shr
scas
xchg
adc
and
scas
imul
mov
lds
ret
daa
jae
cmp
cmp
adc
adc
push
cmp
hlt
in
mov
inc
ss
test
inc
inc
faddp
fidivr
cmp
mov
(bad)
aam
cmps
jge
call
xor
popf
add
push
cmp
mov
dec
jecxz
out
ret
mov
mov
xlat
push
jge
aas
lock
and
in
xchg
dec
push
pushf
mov
dec
xor
mov
or
ret
in
dec
adc
mov
dec
xor
dec
xchg
and
mov
ret
in
dec
stos
and
add
les
adc
jp
shr
cmp
add
add
(bad)
fadd
les
ins
cmp
shr
out
sub
mov
ret
test
aas
scas
jge
pop
pop
frstor
cwde
inc
imul
adc
or
aam
test
ret
add
scas
adc
or
cmp
and
ret
cmp
inc
mov
ret
rol
cmp
popa
jecxz
scas
or
xor
xor
xchg
cmp
mov
ret
and
jno
cmp
add
(bad)
xor
jle
push
idiv
sub
lea
cmp
pop
xchg
sbb
pop
wrmsr
into
imul
xchg
call
ret
cmp
xchg
int3
out
iret
sub
jge
or
xor
(bad)
cmp
add
rcr
cwde
sbb
inc
shl
fwait
push
xor
fadd
cmp
aam
sar
xor
aam
sar
jmp
cmp
pop
pop
jno
scas
jge
inc
mov
lea
cmp
pusha
ds
ins
xchg
sbb
adc
cmp
push
lea
cmp
pusha
ds
inc
xchg
ins
pop
adc
ret
cmp
xchg
adc
ret
cmp
lea
sub
ret
cmp
pop
in
scas
jge
(bad)
and
pop
call
adc
xchg
mov
push
cmp
or
repnz
imul
fwait
push
xor
mov
mov
in
jp
cmp
lds
ret
push
enter
dec
adc
pop
mov
sub
fidivr
scas
xchg
adc
ret
cmp
imul
scas
cmp
outs
sar
jge
sbb
js
cmp
inc
xor
jle
add
pop
ret
cmp
or
sub
mov
dec
mov
rcl
mov
jmp
fcmovb
push
cmp
pop
lds
ret
and
cmp
cmp
push
sub
or
sub
add
ret
inc
cmp
or
push
hlt
mov
jle
enter
call
cmp
push
xor
jl
ret
ret
push
mov
ret
int3
xlat
ffreep
cmp
jge
mov
sar
pop
jecxz
scas
push
xchg
push
adc
push
cmp
pop
iret
sub
jge
and
sub
jno
jl
fcom
enter
mov
cmp
or
add
imul
mov
aas
mov
push
sub
mov
dec
les
cmp
inc
faddp
fcomp
sub
ffree
push
iret
rol
add
shr
mov
cmp
xchg
and
jle
sar
fistp
jge
mov
jmp
pop
cmp
and
cmp
or
rol
ret
push
xor
rol
rcl
pop
(bad)
jge
dec
aam
loop
scas
or
inc
xchg
sahf
aas
rcr
test
scas
jge
inc
icebp
pop
ret
cmp
pop
test
scas
jge
rcr
lods
sbb
std
pop
ret
cmp
pop
call
inc
lea
cmp
sahf
mov
jmp
jge
pop
mov
sub
aad
ret
fiadd
call
inc
in
pop
ret
cmp
shl
fadd
mov
jge
inc
lea
cmp
aas
fistp
jge
mov
jmp
ficom
mov
jge
sub
mov
jmp
push
cmp
push
jge
outs
mov
sub
jge
mov
sar
pop
iret
sub
jge
and
mov
mov
call
scas
or
(bad)
popa
pop
jl
pop
xor
xor
xor
push
or
stos
push
xchg
cmp
add
xchg
push
xor
pop
inc
xor
cmp
push
pop
push
push
ret
mov
movs
ins
ret
cmp
xor
(bad)
mov
lea
ins
cmp
cdq
cmp
aaa
mov
xchg
sub
or
add
scas
cmp
push
or
dec
mov
not
mov
mov
int3
inc
mov
imul
dec
mov
mov
int3
inc
mov
div
(bad)
and
xor
pusha
(bad)
jge
add
es
scas
add
ret
cmp
mov
xchg
mov
cmp
add
cmp
(bad)
or
fadd
fcomp
jge
inc
fdiv
int3
fiadd
enter
cmp
aam
xchg
jnp
in
data16
scas
lock
cld
and
cmp
xor
les
loop
scas
inc
faddp
fidivr
sub
jge
add
ins
cmp
or
mov
cmp
and
mov
ret
push
or
mov
cmp
and
mov
ret
push
or
imul
sbb
cs
mov
fistp
mov
xchg
scas
aaa
loopne
scas
jge
jbe
pop
ret
cmp
hlt
lds
add
iret
sar
fistp
jge
mov
add
ret
ficom
enter
std
and
in
mov
xor
mov
dec
push
xchg
ret
inc
movs
ins
ret
cmp
aas
enter
cmp
push
or
xchg
adc
ret
inc
aam
sar
xor
aam
sar
jmp
cmp
pop
pop
adc
scas
jge
popf
or
xchg
fsub
das
ins
shr
fcmovu
xor
adc
ret
mov
pop
ret
push
inc
jns
push
cmovno
mov
jle
add
cmc
or
fadd
lock
adc
retf
cmps
popf
or
fadd
les
pop
mov
aam
jle
call
jno
dec
sub
mov
lds
jle
call
jno
inc
cmp
and
push
cmp
mov
dec
xchg
cmp
add
cli
xchg
xor
xchg
(bad)
ret
(bad)
mov
cmp
mov
ret
push
or
int3
out
sar
xchg
in
aam
cmp
push
add
xlat
ret
rol
ret
ret
jg
ins
inc
cmp
push
call
out
cmp
ret
sar
mov
add
push
lea
inc
mov
mov
inc
stos
xchg
sar
mov
push
lea
ret
xor
test
inc
adc
aas
dec
adc
mov
js
mov
test
cmps
cld
ret
push
add
push
cmp
add
push
lea
ret
push
div
xor
push
add
push
add
push
add
pop
lea
add
inc
or
int3
out
sar
xchg
in
mov
add
push
imul
inc
sub
cmp
sti
(bad)
cmp
pop
xor
(bad)
rol
mov
jne
jge
popf
or
xchg
fsub
xchg
push
or
jmp
xchg
cmp
scas
cmp
call
cmp
fdiv
or
or
inc
xlat
int
mov
cli
xchg
cmp
push
int
cmp
std
ror
mov
dec
xchg
frstor
or
imul
adc
add
test
cmps
gs
lods
pop
ret
cmp
inc
adc
mov
aam
mov
ud1
mov
ret
xchg
mov
ud1
mov
ret
xchg
mov
add
rcr
jp
cmp
inc
or
add
fst
add
pop
pop
cmp
call
push
ret
mov
frstor
add
fld
mov
push
cmp
mov
ret
cmp
cmp
push
call
cmp
push
add
mov
push
xchg
push
xor
dec
add
push
idiv
dec
adc
mov
xor
or
fadd
add
push
xchg
push
xor
cmp
aam
add
mov
ret
cmp
dec
retf
fcmovb
xor
jbe
(bad)
les
jbe
mov
rol
mov
aam
or
cmp
or
mov
jp
add
fsub
xchg
xlat
mov
add
push
out
mov
jmp
test
jmp
cmp
cmp
xchg
jge
retf
mov
or
inc
xchg
retf
xor
push
add
cmp
xchg
sar
push
ret
pop
push
xchg
push
xor
cdq
jge
inc
ins
cmp
or
test
add
ret
mov
aam
sldt
jns
add
ds
mov
push
xchg
push
cmp
pop
push
xchg
push
add
fprem1
add
fld
mov
out
xor
addr16
cmp
test
retf
and
mov
stos
rol
push
ret
cmp
cld
cmp
mov
and
cmp
or
xor
or
fadd
cmp
xchg
imul
test
add
jns
add
shr
mov
(bad)
jmp
jae
push
mov
or
cmc
add
fst
and
sti
xchg
add
fisub
sbb
test
jne
mov
inc
iret
sub
mov
sar
sar
shl
shr
cmp
push
jle
mov
add
shl
xlat
rcr
cmp
add
or
adc
cmp
xchg
mov
or
inc
sub
xlat
enter
ret
and
cli
(bad)
outs
lods
jnp
sub
inc
xor
jmp
add
mov
lods
or
ret
imul
xchg
xlat
mov
add
push
fcmovu
xor
and
sti
xchg
add
xchg
movs
cmp
cmp
leave
xchg
push
and
imul
xchg
cmp
fst
pop
lds
in
sar
sar
or
jns
fadd
add
xlat
rcr
fld
scas
outs
xchg
push
cmp
push
pop
mov
aaa
inc
jns
push
cmp
mov
xor
in
sar
cmp
daa
test
cmp
or
fadd
mov
aaa
inc
jns
dec
xor
push
or
mov
cmp
or
fadd
jne
jge
jne
xchg
inc
xchg
pushf
cmp
cmp
idiv
inc
cmp
ds
mov
add
push
add
push
div
dec
adc
xor
mov
scas
imul
ret
push
lea
xchg
add
jns
sar
ret
xchg
scas
scas
cmp
pop
retf
and
(bad)
in
xchg
or
pop
xor
xor
in
stos
xchg
out
cmp
xchg
mov
xchg
add
fmul
and
xchg
or
fmul
xchg
jne
dec
adc
cmp
iret
pop
xor
xor
out
cmp
or
fmul
mov
je
mov
xchg
pop
stos
in
ret
mov
mov
cmp
and
xchg
frstor
cwde
inc
pop
push
rcl
push
jmp
adc
push
call
adc
push
and
adc
push
adc
lods
push
rcl
push
rcl
push
adc
lods
push
rcl
push
rcl
push
push
adc
rcl
push
jmp
adc
push
call
adc
push
and
adc
push
rol
push
rcl
sbb
adc
rcl
push
rcl
push
imul
rcl
push
shl
ret
push
cmp
adc
adc
jl
ror
push
rcl
dec
sbb
ins
retf
rcl
repnz
adc
rcl
cli
call
push
rcl
inc
xchg
mov
rcl
mov
adc
rcl
movs
mov
sub
push
mov
push
cli
and
or
mov
push
lds
add
inc
pop
push
rcl
push
jmp
adc
rcl
push
push
adc
push
adc
rcl
inc
ffreep
cmp
fcomp
push
rcl
add
adc
rcl
push
rcl
push
fmul
push
rcl
xor
adc
rcl
push
rcl
push
out
cli
and
or
or
push
push
jp
push
rcl
xor
adc
push
adc
push
and
adc
push
fcomp
push
rcl
add
adc
rcl
push
rcl
push
fmul
push
rcl
xor
adc
rcl
push
rcl
push
out
lds
add
adc
push
push
jp
push
rcl
xor
adc
rcl
sub
sar
imul
aam
dec
or
mov
pop
in
xchg
jns
mov
mov
dec
add
or
xor
aad
push
cmp
or
mov
(bad)
inc
sub
cmp
push
inc
jns
push
imul
ret
fadd
sar
std
cmp
out
test
push
lea
jmp
mov
mov
inc
mov
stos
cmp
test
retf
cmps
lods
or
fadd
ror
add
es
mov
push
jb
int3
out
xor
js
or
xchg
xor
pushf
add
push
cmp
or
ret
xor
lea
dec
inc
add
loopne
cmp
cmp
cmp
adc
ins
sub
int3
cmp
pop
xor
cmp
or
ret
mov
mov
sub
mov
call
ins
dec
mov
jb
push
add
out
inc
cmp
jle
sti
push
sbb
jb
je
mov
lea
pushf
psubusw
add
fld
scas
outs
xchg
push
cmp
aad
cdq
mov
ret
mov
cmp
ret
push
inc
ins
dec
nop
jne
ret
(bad)
into
nop
jnp
jmp
mov
mov
sar
test
ret
push
vmwrite
add
retf
mov
add
retf
fadd
pop
push
pop
rcl
jne
ins
std
and
or
(bad)
std
aas
jle
jp
add
sar
int
mov
sub
std
and
jge
(bad)
stc
aas
jle
fdiv
(bad)
xchg
aas
jle
push
push
mov
push
iret
cmp
clc
jle
cmp
mov
cmp
call
adc
xlat
aam
inc
push
mov
xor
inc
push
add
cdq
aas
jle
push
xchg
jle
add
test
jle
fadd
les
dec
cmp
nop
push
or
fadd
loopne
xchg
or
rcl
(bad)
lea
jle
pusha
xchg
mov
pop
in
sar
pop
add
sbb
cmp
adc
aam
sbb
cmp
sub
xor
dec
out
std
and
jmp
ins
push
add
adc
cmp
fadd
in
push
cmp
(bad)
in
out
mov
pop
xor
xor
jle
adc
cmp
rcl
push
rcl
and
mov
dec
adc
xlat
aam
imul
xor
enter
add
cdq
aas
jle
push
xchg
jle
add
test
jle
fadd
int3
sub
int3
rcl
(bad)
lea
jle
pusha
xchg
mov
pop
in
sar
pop
add
push
mov
xor
ins
in
and
xchg
test
dec
pop
push
add
xchg
aas
jle
pop
xor
sub
pusha
mov
les
adc
cmp
pop
mov
cmp
sar
rol
and
mov
je
push
dec
mov
sar
das
sar
clc
retf
cmp
push
ret
cmp
jl
and
aam
sbb
mov
ret
cmp
ret
mov
aam
mov
push
mov
ret
mov
push
mov
push
xchg
retf
pusha
inc
jl
pop
cmp
push
or
fadd
call
cwde
cwde
inc
imul
cmp
aad
sbb
out
sti
cmp
cmps
fs
mov
inc
mov
ret
sti
cmp
lahf
ret
sbb
xor
mov
cmp
mov
xchg
ins
dec
nop
jne
add
stos
test
mov
rol
dec
stos
or
add
jg
lods
mov
xor
jge
adc
sub
fadd
sub
popf
adc
dec
xchg
add
mov
scas
jge
inc
adc
cmp
retf
daa
dec
cli
inc
push
jge
cmp
push
mov
mov
cmps
inc
cmp
(bad)
scas
jge
lock
pop
cmp
jge
inc
cmps
pushf
gs
push
ud1
jge
xchg
cmp
popf
adc
mov
stos
jg
cmp
push
mov
push
ret
cmp
push
ret
cmp
mov
xchg
mov
or
cmp
mov
mov
call
sar
push
ret
cmp
test
aaa
enter
aam
sbb
int3
dec
xchg
jge
aaa
lods
jge
sub
xchg
adc
jle
fadd
ret
cmp
out
enter
pop
(bad)
ds
jge
stos
lea
ret
fadd
ret
cmp
push
cmp
sar
push
cmp
and
scas
jge
add
adc
cmp
pushf
pop
jle
fadd
ret
cmp
push
cmp
mov
push
scas
mov
cmp
sub
jle
cmp
xor
push
cmp
sub
fprem1
add
fld
mov
push
or
out
mov
pop
jge
(bad)
jmp
mov
mov
jns
fadd
cmps
lods
xor
lods
rcl
cmp
cmp
push
call
ret
mov
push
mov
mov
ror
adc
cmp
xchg
call
dec
shr
retf
cmp
shr
cli
push
add
lods
push
mov
arpl
fsub
jl
test
sub
mov
push
test
push
ret
dec
xlat
scas
imul
and
ret
mov
push
ret
push
cmp
add
fst
bound
mov
lods
or
test
adc
ins
cmp
xchg
ret
mov
jge
retf
mov
add
fisttp
dec
call
push
cmp
mov
pusha
jp
add
mov
xchg
cmp
cmp
push
call
dec
iret
scas
div
or
cmp
pop
inc
dec
(bad)
pusha
inc
xlat
hlt
scas
mul
and
ret
mov
call
ret
mov
push
mov
xor
mov
push
mov
or
cmp
mov
scas
test
ret
pusha
inc
jl
cwde
inc
imul
aad
mov
or
aaa
or
out
cmp
ja
retf
pushf
pop
cmp
jp
add
mov
rcl
cmp
mov
mov
push
test
xor
add
shr
push
call
ret
mov
push
test
xor
mov
push
test
or
mov
push
test
xor
xlat
iret
jmp
jne
dec
adc
mov
push
fdiv
add
fst
mul
pop
fcmovnbe
inc
jp
push
cmp
push
neg
sub
cmp
add
test
mov
test
or
bound
mov
cmp
cmp
push
call
cmp
xor
ret
mov
and
push
adc
cmp
pop
inc
dec
(bad)
pusha
inc
xlat
aad
mov
push
adc
cmp
adc
xlat
(bad)
fcmovnu
push
and
inc
test
cdq
stos
hlt
dec
nop
or
push
movaps
add
ins
nop
pop
aad
mov
or
xchg
mov
dec
adc
mov
js
mov
lods
or
sub
std
pop
not
dec
test
jb
sbb
jge
sar
add
iret
fdivr
sbb
xlat
sub
push
cmp
add
sar
sub
push
lds
pop
pop
dec
loop
mov
mov
sbb
add
pop
imul
dec
adc
cli
ret
push
add
aam
cmp
fcomp
sub
int3
ret
aam
adc
add
shl
cmp
pop
jge
(bad)
jb
sbb
jge
sar
or
fadd
add
xlat
ror
les
push
mov
pushf
psubusw
add
fld
xchg
outs
xchg
push
or
xchg
(bad)
int3
daa
jno
cmp
jb
lock
sub
(bad)
cmp
fadd
les
push
fild
mov
adc
adc
xchg
lea
mov
inc
dec
leave
pop
xor
lock
dec
push
mov
clc
and
dec
es
int3
jecxz
cmp
imul
mov
es
push
and
xchg
jecxz
dec
test
add
mov
(bad)
rcr
ror
add
mov
push
jmp
sub
cmp
rol
movs
scas
mov
clc
adc
dec
ins
fcmovb
enter
cmc
add
fnstcw
cmp
mov
shr
out
into
jg
imul
shl
enter
cmp
hlt
outs
ret
ds
xor
add
iret
mov
add
retf
fadd
xor
mov
pop
pop
dec
les
aad
pop
cmp
jp
cmp
add
adc
aaa
ret
push
jge
xlat
mov
or
jnp
cmp
daa
les
jge
inc
test
cmp
aas
in
lods
jge
jle
jge
cmp
or
dec
in
mov
imul
xor
rol
push
add
pop
jmp
adc
int3
dec
xchg
or
fadd
in
cmp
jge
add
dec
ret
adc
cmp
add
mov
cmp
js
sub
dec
ret
cmp
inc
xor
add
jle
scas
div
faddp
cmp
rol
stos
pop
pop
jle
scas
aaa
sar
aam
adc
cmp
xchg
mov
sti
adc
cmp
pop
cmp
jne
inc
stos
xchg
cmp
adc
ret
sub
(bad)
cmp
rol
dec
mov
push
xchg
test
push
cmp
jnp
cmp
sub
loope
ret
push
sbb
cmp
or
xchg
cmp
cmp
xchg
aam
adc
cmp
jne
inc
stos
xchg
cmp
adc
ret
sub
inc
xor
pop
jle
scas
aaa
sar
aam
adc
mov
arpl
cmp
jne
inc
stos
xchg
cmp
adc
ret
sub
(bad)
cmp
rol
sub
(bad)
cmp
call
sbb
cmp
js
mov
push
add
cmps
jnp
dec
in
jle
cmp
mov
cmp
mov
add
shr
pop
jle
fiadd
sar
ins
stos
jo
jle
add
xchg
mov
push
or
cmp
call
sbb
cmp
js
mov
adc
ret
sar
add
retf
cmp
mov
scas
jl
sub
cmp
rol
sub
mov
push
sbb
cmp
js
mov
adc
ret
mov
push
add
retf
cmp
mov
scas
jl
sub
inc
xor
loop
cmp
call
sbb
cmp
js
mov
push
add
cmps
jnp
dec
in
jle
cmp
mov
cmp
mov
add
shr
not
push
jne
dec
aam
ret
ds
or
sub
sar
push
ret
push
sbb
cmp
jmp
(bad)
jge
cmp
push
adc
inc
(bad)
jge
cmp
jge
rcr
pop
sar
ins
stos
sbb
push
cmp
push
add
cmps
jnp
cmp
sub
cmp
call
sbb
cmp
or
xchg
cmp
fist
cmp
xchg
mov
cmps
fs
cdq
jge
cmp
inc
aam
adc
cmp
enter
stos
xchg
cmp
adc
ret
sub
cmp
rol
sub
mov
push
sbb
cmp
js
mov
adc
ret
push
clc
retf
mov
cmp
ret
push
and
sub
push
xor
jle
cmp
push
cmp
mov
pop
jle
scas
imul
dec
aam
ret
cmp
pop
cmp
mov
add
xlat
mov
cmp
ret
push
and
sub
push
or
jle
cmp
push
cmp
push
add
cmps
jnp
cmp
stos
mov
aaa
sar
aam
adc
aam
adc
cmp
enter
stos
xchg
mov
cmp
push
and
lods
jge
cmp
jmp
scas
ret
cmp
rol
inc
sub
cmp
aad
cmp
pop
scas
jg
ret
mov
inc
mov
ret
shr
push
cmp
push
imul
scas
cmp
cmp
in
inc
ret
ds
add
dec
test
and
add
les
cmp
int
pop
pop
jne
add
jge
cmp
push
mov
jle
add
push
jmp
push
add
push
push
adc
pop
inc
cmp
push
or
fadd
test
jge
add
lods
jge
jle
jge
cmp
cmp
add
scas
jge
jbe
jge
cmp
mul
aam
cmp
scas
shl
cmp
jmp
dec
ret
cmp
rol
sub
mov
push
sbb
cmp
js
mov
adc
ret
pushf
jge
push
add
retf
mov
cmp
ret
push
and
sub
push
or
jle
cmp
push
cmp
mov
ret
call
sbb
cmp
js
mov
adc
ret
dec
jl
push
add
retf
rol
clc
cmp
jge
ret
push
add
movs
jge
cmp
pop
les
jge
inc
xchg
jge
cmp
add
inc
mov
jb
and
lods
jge
add
push
or
fadd
les
jge
mov
cmp
in
cmp
xor
ins
cmp
jb
xor
inc
mov
dec
xchg
push
add
pop
add
push
xor
fadd
sar
jge
mov
jmp
movs
jge
cmp
push
adc
pop
pop
cmpxchg
scas
jg
inc
cdq
jge
inc
ins
cmp
or
movs
fdivr
cli
cmp
jge
xor
mov
fadd
cmp
scas
jge
int3
out
cli
cmp
jge
inc
push
jbe
ds
rcl
out
cmp
jbe
ds
rcl
jb
jge
inc
xchg
xchg
cmp
aaa
enter
ret
mov
jge
xor
jle
cmp
pop
cmp
mov
add
fstp
cmp
ret
push
and
sub
push
sahf
pop
cmp
in
ret
cmp
push
cmp
mov
mov
cmp
push
sbb
cmp
js
mov
adc
ret
clc
add
push
add
retf
mov
cmp
ret
push
and
sub
push
xor
jle
cmp
push
cmp
scas
jg
sub
inc
jge
push
add
movs
jge
cmp
pop
cmp
scas
jge
cmp
jp
cmp
cmps
jge
inc
xchg
mov
cmp
inc
xor
jl
cmp
mov
mov
scas
jl
sub
cmp
rol
sub
mov
push
sbb
cmp
js
mov
adc
ret
pusha
add
push
add
retf
mov
cmp
ret
push
and
sub
push
or
jle
cmp
push
cmp
mov
mov
dec
xchg
push
std
push
add
cmps
jnp
cmp
stos
mov
aaa
sar
aam
outs
cmp
mov
sar
jle
cmp
push
cmp
push
add
cmps
jnp
cmp
sub
cmp
call
sbb
cmp
or
xchg
cmp
jecxz
cmp
xchg
aam
outs
cmp
cmp
jne
inc
stos
xchg
cmp
loop
push
jge
aas
scas
jl
sub
cmp
rol
inc
cmps
cdq
push
ret
push
push
(bad)
push
add
cmps
jnp
cmp
stos
call
cmp
jge
aaa
ins
cmp
mov
jae
cmp
cmp
jne
inc
stos
xchg
cmp
adc
ret
sub
inc
xor
fidivr
cmp
push
sbb
cmp
js
mov
push
add
cmps
jnp
dec
in
jle
cmp
mov
cmp
mov
add
sar
stos
loop
push
jge
aas
scas
jl
sub
mov
xor
mov
push
(bad)
push
add
cmps
jnp
cmp
stos
mov
aaa
sar
aam
ins
cmp
mov
sar
jle
cmp
push
cmp
push
add
cmps
jnp
cmp
stos
mov
aaa
sar
aam
ins
cmp
mov
sar
jle
cmp
push
cmp
inc
cmp
mov
cmp
push
sbb
cmp
js
mov
adc
ret
fs
push
add
retf
fadd
loop
lods
jge
dec
aam
ret
cmp
pop
cmp
mov
add
sar
cmp
ret
push
and
sub
push
xor
jle
cmp
push
cmp
adc
ret
adc
ret
push
add
retf
mov
cmp
ret
push
and
sub
push
xor
jle
cmp
push
cmp
push
or
fadd
cld
cmp
jge
add
push
cmp
rcl
xor
or
inc
xchg
xchg
sbb
push
aad
jle
jge
cmp
jmp
pop
mov
sub
mov
mov
push
sbb
cmp
js
mov
adc
ret
mov
ret
push
add
retf
cmp
push
jge
aas
scas
jl
sub
inc
xor
out
cmp
call
sbb
cmp
js
mov
adc
ret
push
pop
ret
push
add
retf
shl
push
adc
push
cmp
pop
cmp
jne
inc
stos
xchg
mov
cmp
push
and
lods
jge
cmp
jmp
es
sub
sbb
cmp
jge
dec
push
cmp
xchg
mov
cmp
push
ret
cmp
dec
retf
mov
or
inc
xchg
sbb
push
jge
aas
scas
jl
sub
mov
mov
movs
jge
cmp
rol
jbe
jge
cmp
aaa
aam
lods
jge
mov
in
ret
ds
push
cmc
push
add
lods
jge
cmp
and
ret
push
or
ret
cli
nop
mov
or
pushf
psubusw
add
fld
mov
mov
aaa
dec
test
jp
cmp
or
add
push
mov
mov
cmp
aam
ret
rcl
ja
cmp
mov
dec
xchg
call
jle
fadd
ret
cmp
push
cmp
jne
cmp
add
(bad)
mov
call
test
adc
cmp
push
cmp
push
int3
cmp
jmp
(bad)
sar
pop
jle
cmp
mov
scas
jge
pop
jno
rcr
cwde
inc
imul
cmp
aad
push
test
add
ret
fcmovb
xor
imul
lods
ds
jge
xchg
cmp
push
cmp
pop
mov
scas
jge
cmp
mov
pusha
pop
mov
pop
or
inc
xchg
xchg
sbb
xor
add
pop
pushf
ds
jge
sub
cmp
fadd
inc
ds
jge
jbe
jg
cmp
movs
or
push
or
fimul
inc
ds
jge
xchg
pop
xchg
dec
les
sar
(bad)
sti
xchg
mov
or
cmp
and
cmp
push
cmc
push
xor
scas
aaa
movs
ds
jge
and
cmp
add
mov
sub
cmp
(bad)
ss
fimul
dec
ds
jge
xchg
pop
xor
les
sar
retf
cmps
arpl
jle
mov
or
inc
cmps
outs
xor
push
call
mov
xchg
mov
push
not
ins
sub
cmp
cmp
mov
xchg
cmp
mov
adc
mov
cmp
inc
sbb
xchg
div
xchg
mov
mov
sub
cmp
(bad)
ret
jmp
lods
jl
cmp
ud1
jge
xchg
mov
jge
push
lods
jge
cmp
adc
cmp
jge
dec
lods
jge
cmp
or
cmp
jge
pop
lods
jge
cmp
and
cmp
aam
inc
in
ret
cmp
push
xor
or
retf
xor
push
mov
sub
and
adc
ret
xchg
mov
or
jmp
sar
mov
lods
jl
cmp
push
sti
push
adc
mov
push
sar
js
push
ud1
jge
xchg
mov
add
(bad)
jp
cmp
inc
sti
inc
jmp
cmp
pop
fdivr
push
sbb
push
cmp
cmp
push
sar
dec
fbstp
inc
mov
ret
sti
fcom
cmp
cmp
cmp
rcl
shl
pop
cwde
ds
jge
dec
aam
ret
rcl
cmp
push
ret
cmp
ret
cmp
call
cmp
pop
inc
xor
cmp
aaa
xchg
ds
jge
jnp
cmp
stos
les
jge
push
lods
jge
stos
inc
pop
jle
cmp
loopne
push
ud1
scas
jge
xchg
mov
add
rcl
jge
sub
retf
enter
dec
aam
ret
rcl
sar
mov
ret
fadd
add
push
sub
cmp
cmp
dec
ds
jge
dec
aam
sar
cmp
add
cmp
push
adc
cmp
adc
cmp
or
or
push
push
not
push
(bad)
push
cmp
jle
cmp
shr
out
cmp
cmp
cmp
aam
ret
rcl
xchg
jge
inc
xchg
mov
cmp
cmp
add
ret
mov
jg
cmp
add
fdiv
cmp
add
ret
rol
repz
xor
add
not
test
cmp
mov
mov
dec
xchg
aam
mov
cmp
jge
lods
jge
sub
aaa
cwde
ds
jge
arpl
aam
sar
xor
mov
cmps
gs
cmp
inc
arpl
push
xlat
mov
shr
nop
pop
aad
sahf
inc
cmp
mov
pusha
jp
add
div
sahf
mov
ret
fadd
dec
add
mov
pusha
jp
add
div
sub
mov
ret
fadd
dec
add
ret
mov
push
lock
xor
add
lock
xor
pop
xor
imul
add
cmp
aaa
fadd
sub
add
cmp
jmp
sub
int3
cmp
pusha
inc
mov
push
xchg
or
fld
xchg
fdiv
xchg
mov
add
iret
scas
div
mov
push
repnz
add
pop
lea
lds
sub
cmp
fdivr
cmp
inc
ret
mov
lea
lds
xchg
lods
vmread
push
rcl
retf
pusha
cmp
xor
cmp
pop
xor
xor
mov
inc
sub
mov
stos
mov
jl
cmp
push
ret
push
or
inc
mov
call
push
ret
push
vmwrite
add
aam
pusha
cmp
or
push
fsub
xchg
xlat
mov
jmp
push
repz
sub
or
out
data16
ss
jmp
cmp
cmps
gs
jmp
inc
sti
inc
in
(bad)
cmp
fadd
and
jge
dec
aam
fdivr
rcl
sar
lods
cmp
fadd
pop
push
lods
ret
push
cmp
add
pop
mov
ret
sub
mov
ret
rol
retf
and
dec
fdivr
jge
iret
mov
or
xor
or
dec
xchg
mov
cmp
ret
cmp
popf
cmp
fadd
and
jge
dec
aam
fdivr
shr
lods
cmp
pop
inc
dec
neg
jp
cmp
inc
outs
cmp
inc
fdivr
push
not
mov
mov
jge
or
mov
pop
jle
cmp
xchg
ret
shr
mov
xlat
imul
call
jno
cmp
ret
ret
add
imul
sub
gs
xchg
mov
int3
ret
cli
nop
cmp
gs
xor
sar
mov
cmp
outs
sub
ret
cmp
inc
xor
add
jle
add
not
mov
push
cmp
int3
dec
xchg
jmp
push
(bad)
cmp
pop
pop
push
lock
add
cmps
jnp
cmp
stos
mov
pop
cmp
scas
jge
sub
inc
xor
jmp
ret
push
sbb
cmp
js
mov
push
add
cmps
jnp
dec
in
sbb
scas
aad
fwait
(bad)
sar
sbb
scas
aad
arpl
cmp
xchg
xchg
aam
bound
cmp
enter
stos
xchg
cmp
adc
ret
xchg
mov
add
retf
fdiv
xor
inc
push
hlt
mov
cmp
aam
fdivr
rcl
inc
bound
aam
bound
cmp
enter
stos
xchg
cmp
adc
ret
xchg
mov
add
retf
mov
cmp
ret
push
and
sub
aam
bound
cmp
enter
fdivr
cmp
scas
jge
stos
or
ret
fdivr
cmp
scas
jge
sub
inc
sub
and
push
ror
sbb
scas
rcl
sar
sbb
scas
rcl
pop
arpl
mov
cmps
fs
movs
pop
ret
cmp
inc
aam
arpl
cmp
enter
stos
xchg
cmp
adc
ret
xchg
mov
add
retf
cmp
mov
xchg
mov
add
retf
mov
cmp
ret
push
and
sub
push
xor
sbb
scas
rcl
push
arpl
push
ror
fdivr
rcl
inc
arpl
mov
cmps
fs
mov
inc
aam
arpl
cmp
enter
stos
xchg
mov
cmp
push
and
push
(bad)
fs
adc
ret
cmp
push
icebp
push
cmp
adc
ret
cmp
push
icebp
push
cmp
push
add
cmps
jnp
cmp
stos
mov
pop
cmp
scas
jge
sub
inc
xor
sbb
ret
fadd
cmp
scas
jge
sub
inc
xor
mov
push
repnz
add
cmps
jnp
cmp
stos
mov
pop
cmp
scas
jge
sub
mov
ret
rol
stos
dec
pop
jle
fadd
cmp
scas
jge
sub
mov
ret
rol
sub
mov
ret
call
sbb
cmp
js
mov
adc
ret
cmp
push
repnz
cmp
jge
cmp
and
mov
push
(bad)
adc
adc
ret
cmp
push
repnz
cmp
push
add
cmps
jnp
cmp
stos
mov
pop
cmp
scas
jge
sub
cmp
rol
stos
push
pop
jle
fadd
cmp
scas
jge
sub
cmp
rol
sub
mov
push
sbb
cmp
js
mov
adc
ret
cmp
push
repnz
cmp
push
or
fadd
rcr
jge
add
push
cmp
rcl
xor
or
inc
xchg
xchg
sbb
push
aad
jle
(bad)
sub
adc
ret
cmp
push
repz
cmp
push
add
cmps
jnp
cmp
stos
mov
pop
cmp
scas
jge
sub
mov
ret
rol
stos
(bad)
pop
jle
fadd
cmp
scas
jge
sub
mov
ret
rol
inc
mov
push
repz
add
cmps
jnp
cmp
stos
mov
pop
cmp
scas
jge
sub
mov
ret
rol
sub
cmp
call
sbb
cmp
js
mov
push
add
cmps
jnp
dec
in
sbb
scas
aad
fwait
(bad)
sar
sbb
scas
aad
aas
jle
cmp
xchg
xchg
push
adc
fdivr
rcl
iret
popa
cmp
mov
cmp
push
ret
cmp
aam
jge
cmp
aam
jecxz
scas
add
or
cmp
aam
fdivr
rcl
iret
jl
cmp
push
jno
xchg
add
add
scas
aaa
rcr
aam
jge
cmp
in
jecxz
scas
push
call
adc
dec
mov
frstor
cwde
inc
imul
cmp
aad
sub
test
push
(bad)
cmp
or
inc
hlt
push
sar
or
mov
xor
jge
cmp
add
mov
push
xor
fdivr
and
pop
mov
add
enter
rcl
idiv
cmp
imul
not
push
ret
xchg
cmp
es
pushf
ds
jge
sar
xor
add
in
push
adc
cmp
aam
sar
push
ins
(bad)
sar
pop
jle
cmp
fsub
scas
jge
pop
jne
cld
int3
aad
ds
push
jmp
lods
jl
cmp
ud1
jge
xchg
mov
or
ret
sti
cmp
and
cmp
shl
cmp
push
cmp
mov
int3
aad
ds
push
jmp
lods
jl
cmp
push
in
push
xor
add
mov
xchg
mov
push
es
jge
inc
leave
jg
cmp
jp
cmp
inc
push
xchg
xor
add
in
push
cmp
push
cmp
cmp
cmp
(bad)
cmp
push
inc
mov
ret
cmp
in
sbb
cmp
or
inc
mov
ret
sti
mov
cmp
cmp
cmp
rcl
fdiv
pop
cwde
ds
jge
dec
aam
ret
rcl
cmp
push
ret
cmp
ret
cmp
call
cmp
pop
inc
xor
cmp
aaa
xchg
ds
jge
add
cmp
test
jge
arpl
jle
cmp
loopne
push
ud1
scas
jge
xchg
mov
add
rcl
jge
sub
sti
mov
cmp
jle
cmp
rcl
sar
test
xor
sub
cmp
and
inc
cmp
std
(bad)
cmp
mov
retf
mov
xor
aam
jnp
cmp
test
jmp
sar
add
aam
jnp
cmp
push
jmp
sar
add
jo
jge
pop
pop
mov
xor
cmp
pop
mov
scas
jge
nop
mov
add
retf
pop
inc
xor
cmp
add
lds
cmp
pop
mov
scas
jge
sub
stos
cmp
shl
test
xor
add
push
lods
jge
sub
inc
ret
jbe
jg
cmp
enter
jmp
jnp
cmp
cmp
aam
jge
cmp
xchg
xchg
xor
enter
sub
pop
mov
sub
mov
push
jno
cmp
push
sar
or
scas
jge
pop
pop
imul
cmp
add
lock
ret
jbe
jg
cmp
cdq
in
scas
add
iret
shr
test
sub
stos
cmp
xchg
pop
mov
ret
push
xor
add
jmp
mov
cmp
ret
cmp
mov
mov
jge
sub
cmp
fiadd
mov
(bad)
xor
or
(bad)
push
xlat
mov
shr
nop
pop
aad
sahf
pop
cmp
mov
ret
add
jmp
dec
iret
mov
or
(bad)
rol
call
cmp
fadd
mov
cmp
lea
retf
and
(bad)
enter
aam
js
cmp
and
mov
push
sub
movs
cmp
add
in
xor
pop
jmp
cmp
cmp
xchg
call
adc
push
or
xor
or
fadd
xchg
movs
cmp
pop
push
in
xor
cwde
inc
imul
adc
ja
cmp
push
cmp
mov
ret
cmp
shr
xor
fadd
xor
mov
cmp
or
scas
shr
mov
cmp
cmp
mov
xchg
mov
add
iret
ins
jge
ret
push
idiv
dec
mov
pushf
pop
ret
push
call
adc
push
or
sub
frstor
xchg
xlat
mov
shr
xchg
out
sar
add
push
xchg
mov
int3
out
ret
test
adc
in
jmp
jg
cmp
fadd
enter
push
adc
cmp
add
jmp
mov
cmp
sar
jbe
sub
test
ret
rol
dec
adc
ins
test
push
add
jge
jge
mov
in
xchg
add
into
sub
xlat
mov
shr
xchg
push
cmp
clc
dec
jmp
mov
jns
fadd
cmp
push
(bad)
cmp
push
ret
cmp
cmp
test
inc
push
jmp
ss
push
jne
dec
adc
mov
cmp
or
sar
stos
cmp
cmp
or
int3
ret
cmp
cs
cmp
cmp
or
sar
stos
cmp
cmp
or
into
ret
cmp
push
stos
cmp
cmp
or
(bad)
push
stos
cmp
shr
push
adc
call
mov
jmp
adc
call
mov
jmp
adc
call
lahf
adc
push
ret
or
neg
jmp
xor
cmp
or
enter
mov
sub
jge
xor
ret
cmp
mov
cmp
cmp
or
sar
movs
cmp
cmp
or
sar
movs
cmp
jmp
jne
dec
adc
mov
push
fdiv
add
cmp
mov
ret
cmp
idiv
les
ret
push
and
adc
cmp
lods
jge
sub
ret
cmp
push
cmp
cmp
not
and
mov
and
pop
adc
cmp
lods
jge
inc
lock
movs
cmp
shl
retf
push
adc
mov
pop
adc
cmp
jne
jge
cmp
sar
mov
in
adc
mov
push
adc
cmp
push
adc
xchg
mov
cmp
sahf
test
in
adc
mov
pop
adc
cmp
sub
jle
cmp
sar
mov
in
adc
mov
pop
adc
cmp
jge
jl
cmp
sar
mov
in
xor
cmp
not
and
mov
and
pop
adc
cmp
lods
jge
inc
lock
movs
cmp
push
inc
imul
aad
aaa
sub
pop
ret
push
jmp
pop
push
aas
scas
jge
add
push
aam
inc
lods
jge
inc
xchg
xchg
lahf
retf
into
ret
cmp
push
rcl
mov
cmps
(bad)
and
push
vmwrite
add
aam
je
cmp
push
jge
test
aam
xchg
or
jp
int3
xchg
cmp
cmp
add
loopne
adc
cmp
push
cmp
mov
js
adc
or
push
ret
add
add
jp
xchg
call
cmp
rcl
push
pop
mov
cmp
mov
ret
cmp
cmp
push
sbb
adc
ret
scas
mov
pop
adc
js
adc
cmp
adc
pop
xchg
call
xor
pop
mov
cmp
mov
ret
cmp
cmp
xor
jle
cmp
push
ret
cmp
push
ret
cmp
cmp
push
call
sub
push
movs
cmp
fadd
pop
call
mov
out
adc
mov
pop
adc
js
adc
ds
push
call
cmp
push
rcl
sar
pop
jle
cmp
cmp
sub
jne
mov
adc
mov
pop
adc
js
adc
ds
push
call
cmp
push
rcl
sar
pop
jle
cmp
cmp
icebp
and
cmp
jge
cmp
jge
cmp
cmp
icebp
cmp
stos
push
ret
push
sub
jle
cmp
adc
cmp
repnz
cmp
mov
adc
cmp
(bad)
pushf
adc
stos
sub
cmp
push
call
cmp
cmp
adc
push
ret
mov
and
pop
adc
or
push
ret
scas
mov
arpl
adc
out
imul
aas
ret
rcl
push
pop
mov
cmp
aam
jle
cmp
cmp
mov
inc
mov
push
adc
cmp
push
jmp
bound
out
push
call
cmp
scas
mov
pop
adc
cmp
push
jge
test
jge
mov
jge
cmp
cmp
cmp
sub
aas
ret
rcl
push
pop
mov
cmp
aam
jle
cmp
cmp
shl
jle
rol
test
push
ret
scas
mov
pop
adc
pop
arpl
adc
cmp
ins
jmp
push
cmp
cmp
jmp
mov
and
pop
adc
ret
test
into
ret
cmp
push
jge
xchg
ret
cmp
inc
call
cmp
cmp
cmp
ret
push
rcl
sar
pop
jle
cmp
cmp
shl
ret
fdivr
and
(bad)
ror
call
mov
cmp
(bad)
pushf
adc
stos
rol
cmp
push
jmp
push
sub
jle
cmp
adc
cmp
repnz
cmp
mov
adc
cmp
(bad)
pushf
adc
test
push
adc
cmp
push
cmp
shl
push
jmp
mov
and
adc
or
push
ret
scas
mov
arpl
adc
jg
ret
push
jmp
cmp
das
sbb
adc
cmp
push
push
loope
sbb
push
jge
test
jge
xchg
ret
cmp
inc
call
cmp
cmp
cmp
push
jmp
mov
cmp
mov
ret
cmp
cmp
lds
jle
cmp
jge
cmp
jle
cmp
cmp
rol
ret
push
add
pop
jle
cmp
cmp
push
adc
jae
cmp
aad
jle
cmp
jge
cmp
jle
cmp
cmp
xchg
cmp
xchg
push
ret
push
add
and
cmp
cmp
push
adc
jae
cmp
dec
pop
jl
fdivr
cmp
inc
push
ret
scas
mov
pop
adc
pop
arpl
adc
stos
push
pop
push
cmp
jmp
mov
cmp
push
pop
jle
cmp
(bad)
push
sbb
push
jge
test
jge
mov
dec
call
cmp
cmp
ins
stos
lea
ret
cmp
cmp
push
adc
jo
cmp
jno
jge
cmp
jge
cmp
jge
cmp
cmp
clc
cmp
pushf
push
ret
push
add
pop
jle
cmp
adc
cmp
repnz
cmp
jp
add
add
bound
xchg
xlat
mov
shr
xchg
push
cmp
mov
pusha
jp
add
ja
adc
retf
cmp
or
stos
mov
push
xor
jge
pop
inc
and
adc
mov
cmp
jge
mov
vmwrite
add
aam
jno
cmp
push
jge
test
aam
xchg
or
jp
int3
xchg
cmp
cmp
add
loopne
adc
cmp
push
cmp
push
sbb
push
and
adc
or
push
ret
add
add
jp
xchg
call
cmp
rcl
push
or
pop
jle
cmp
cmp
push
sbb
push
xchg
push
ret
scas
mov
pop
adc
js
adc
cmp
adc
pop
xchg
call
xor
pop
mov
cmp
mov
ret
cmp
cmp
xor
jle
cmp
push
ret
cmp
push
ret
cmp
cmp
push
call
sub
retf
ret
fadd
pop
call
mov
fcom
push
ret
scas
mov
pop
adc
pop
arpl
adc
out
xlat
cmp
ins
stos
lea
ret
cmp
out
push
call
cmp
repnz
adc
fiadd
cmp
sub
ret
cmp
cmp
mov
jmp
cmp
cmp
sub
ret
cmp
(bad)
popf
cmp
sar
or
push
jmp
mov
clc
and
push
imul
stos
pop
cmp
mov
pop
adc
cmp
push
jge
test
jge
mov
jge
cmp
cmp
push
rcl
stos
lea
ret
cmp
out
push
call
cmp
repnz
ret
sti
test
into
ret
cmp
push
jge
mov
jge
cmp
cmp
cmp
push
jmp
mov
cmp
aam
jle
cmp
cmp
jge
jge
mov
call
mov
cmp
(bad)
pushf
adc
stos
rol
push
xlat
push
cmp
cmp
shl
adc
push
ret
mov
and
adc
or
push
ret
scas
mov
arpl
adc
in
inc
push
cmp
cmp
cmp
jmp
mov
cmp
push
push
fst
lahf
repz
mov
gs
mov
jge
test
jge
xchg
ret
cmp
inc
jmp
push
cmp
jmp
mov
cmp
mov
ret
cmp
cmp
mov
add
gs
ret
not
xchg
push
xchg
cmp
cmp
push
jmp
push
sub
jle
cmp
adc
cmp
repnz
lahf
adc
mov
cmp
(bad)
pushf
adc
stos
mov
cmp
cmp
push
call
cmp
cmp
in
push
jmp
mov
and
adc
or
push
ret
scas
mov
arpl
adc
jg
ret
push
jmp
cmp
imul
adc
cmp
push
push
ficom
lahf
arpl
sar
jge
test
jge
mov
dec
jmp
cmp
ins
stos
shl
ret
cmp
cmp
push
adc
dec
cmp
pop
jl
shl
mov
scas
mov
pop
adc
pop
arpl
adc
stos
push
test
xchg
push
ret
push
add
pop
jle
cmp
cmp
push
adc
dec
cmp
sbb
ret
mul
jge
cmp
jle
cmp
push
xlat
cmp
loopne
adc
cmp
push
cmp
test
ret
push
and
adc
or
push
ret
scas
mov
arpl
adc
sbb
push
jmp
cmp
fistp
adc
cmp
push
push
fist
lahf
pop
repnz
jno
cmp
pop
outs
ret
push
jne
dec
adc
mov
mov
frstor
xchg
xlat
mov
shr
nop
pop
aad
loope
cmp
dec
test
outs
mov
cmp
cmp
push
call
cmp
push
add
mov
push
fst
mov
sar
aad
cmp
push
call
and
xchg
mov
add
push
inc
jns
push
cmp
jp
and
(bad)
aam
xchg
vmwrite
add
jns
add
jns
add
sar
mov
cmp
mov
jge
inc
xchg
call
push
jge
aas
cmp
in
push
jmp
pop
jge
retf
mov
add
fcmovnu
mov
test
adc
ins
cmp
xchg
push
(bad)
in
cmp
push
cmp
std
sahf
cmp
add
fcmovnu
jp
cmp
inc
arpl
fsub
das
pop
cmp
aam
je
pushf
pop
dec
mov
add
jo
cmp
xor
fadd
cmp
scas
jge
sub
call
push
cmp
ret
push
and
or
mov
sar
aas
mov
scas
jge
xchg
mov
or
jmp
ds
jmp
push
jge
cmp
push
fist
mov
sar
ja
adc
ret
xchg
mov
add
push
imul
ret
fadd
cmp
scas
jge
sub
jb
xor
inc
mov
sar
mov
adc
ret
xchg
mov
add
push
imul
ret
fadd
cmp
scas
jge
sub
xchg
cmp
sar
ret
les
push
cmps
loopne
cmp
aam
ret
cmp
rcl
arpl
cmp
sub
xor
inc
jmp
push
jge
cmp
push
aam
xor
sar
ret
retf
push
popa
loopne
cmp
aam
ret
cmp
rcl
scas
inc
cmp
jge
mov
jmp
push
jge
cmp
push
aam
cmp
or
scas
jge
xchg
mov
add
pop
imul
ret
fadd
cmp
scas
jge
sub
cmp
sar
ret
into
and
push
cli
jecxz
cmp
aam
ret
cmp
rcl
rol
cmp
mov
jle
cmp
or
inc
sub
xor
adc
ret
cmp
push
aad
adc
adc
cmp
sbb
ret
fadd
cmp
scas
jge
stos
push
sbb
ret
mov
jmp
loopne
cmp
adc
sar
cld
in
adc
dec
cmp
stos
mov
cmps
fs
test
inc
aad
scas
jge
popf
or
(bad)
push
xlat
mov
add
imul
and
les
or
xchg
mov
punpcklbw
push
aad
sub
ret
cmp
inc
xor
xchg
div
push
aad
xchg
dec
cmp
fldenv
push
sub
add
sti
pop
cmp
aad
lds
add
not
push
add
loopne
cmp
xor
fadd
shl
jge
sub
cmp
mov
cmp
ret
push
and
test
jno
cmp
or
mov
cmps
jge
xchg
mov
add
shl
add
aam
retf
cmp
rcl
daa
inc
cmp
jno
cmp
or
push
ud1
cmps
jge
xchg
mov
cmp
and
scas
jge
add
scas
jge
mov
jmp
mov
push
(bad)
push
cmp
imul
ret
fadd
shl
jge
sub
xchg
cmp
sar
iret
cmp
jmp
mov
push
(bad)
push
cmp
imul
ret
fadd
shl
jge
sub
xchg
cmp
fdiv
xor
inc
mov
cmp
imul
ret
fadd
shl
jge
sub
cmp
sar
iret
cmp
jmp
mov
push
(bad)
push
cmp
imul
ret
fadd
shl
jge
sub
aas
iret
cmp
jmp
mov
push
xlat
push
xor
mov
ret
cmp
inc
mov
cmp
imul
ret
fadd
shl
jge
sub
xchg
cmp
sar
iret
cmp
jmp
mov
push
xlat
push
cmp
imul
ret
fadd
shl
jge
sub
xchg
cmp
cmp
pushf
adc
ret
xchg
mov
or
xor
or
dec
xchg
jmp
jecxz
cmp
test
ret
cmp
inc
sub
aam
retf
cmp
add
icebp
and
jne
cmp
lea
inc
mov
or
xor
or
dec
xchg
stos
int3
dec
xchg
mov
test
adc
ret
inc
xchg
mov
cmp
inc
xor
cmp
cmp
push
add
ret
pop
push
cmc
rcl
jle
jle
cmp
lea
inc
in
jge
cmp
mov
cmp
xchg
pop
ret
aas
scas
jge
jnp
mov
ret
cmps
fs
test
cmp
inc
mov
test
jmp
lods
jle
cmp
push
fist
mov
cmp
stos
aam
dec
cmp
adc
std
xor
inc
mov
jnp
jmp
jnp
in
jp
cmp
lea
inc
ins
loop
adc
hlt
cmp
popf
adc
mov
lods
jl
cmp
push
fist
mov
js
mov
cmp
popf
adc
mov
lods
jp
cmp
push
aam
cmp
push
xchg
fadd
sar
jge
sub
cmp
jmp
jne
dec
aam
retf
cmp
or
dec
aam
les
rcl
sar
jle
cmp
rcl
jg
cmp
pop
jle
fadd
sar
jge
sub
inc
sub
jle
cmp
rcl
xlat
inc
cmp
jle
cmp
add
mov
jge
xchg
cmp
adc
ret
xchg
mov
add
sar
xor
add
xlat
push
adc
jbe
adc
ret
xchg
mov
add
iret
pop
inc
xor
cmp
pop
sar
jge
add
pop
inc
cmp
pop
les
scas
jge
xor
jne
cmp
inc
mov
cmp
lea
cmp
jp
cmp
jmp
mov
cmp
aam
les
rcl
ret
inc
cmp
xchg
push
dec
jecxz
cmp
aam
ret
rcl
test
ret
rcl
test
retf
cmp
imul
cmp
add
cmp
imul
aam
retf
cmp
inc
mov
cmp
imul
cmp
add
shl
mov
cmps
fs
popf
jne
cmp
inc
ret
jbe
jp
cmp
pop
sar
pop
jle
fadd
sar
xchg
cmp
rol
dec
aam
les
rcl
pop
inc
cmp
dec
retf
cmp
jno
xchg
mov
or
dec
sub
ret
inc
cmp
jbe
cmp
add
push
aam
les
rol
jbe
jp
cmp
hlt
sub
aas
test
hlt
das
ret
push
jno
xchg
fidivr
enter
mov
push
sub
xchg
cmp
fadd
les
scas
jge
test
test
lock
cmp
das
ret
push
rcl
pop
inc
cmp
jle
cmp
shr
in
les
push
push
scas
jge
pop
pop
or
retf
mov
cmp
outs
les
push
rcl
mov
ret
cmp
dec
fcom
or
push
and
js
cmp
fsub
xchg
xchg
fsub
cmps
inc
cmp
xchg
cmp
add
imul
shl
pop
or
push
loope
cmp
push
jmp
inc
cmp
sar
mov
mov
rcl
xchg
inc
cmp
push
(bad)
push
and
sbb
ret
push
or
repnz
adc
xchg
int3
ret
cmp
push
cmp
jne
dec
aam
sar
or
stos
add
jge
mov
jmp
lock
xchg
cmp
mov
rcl
jecxz
cmp
inc
sbb
push
jmp
loopne
ret
cmp
jge
retf
mov
call
jle
fadd
lea
pop
sbb
cmp
inc
sub
scas
jge
ret
pop
pop
and
push
cmp
pop
push
sbb
push
test
dec
cmp
xchg
cmp
jmp
jno
inc
shl
cmp
(bad)
dec
mov
or
sti
inc
xchg
ret
mov
fst
lahf
cs
jge
inc
loop
ret
cmp
imul
ret
pop
xor
jo
jge
jns
iret
pop
rol
or
xor
inc
mov
jnp
jmp
mov
dec
lds
mov
cmp
or
call
cld
inc
xchg
dec
push
inc
mov
ret
mov
or
xor
xchg
pop
xchg
cs
jge
add
scas
mov
inc
repnz
ret
cmp
jmp
mov
cmp
aam
sar
rcl
iret
inc
cmp
les
ret
push
call
sar
shl
cmp
push
rcl
mov
into
outs
ret
cmp
push
push
scas
jge
inc
repnz
ret
cmp
push
add
jge
pop
dec
call
sar
rcl
mov
or
push
cmp
cmp
in
push
jmp
mov
cmp
adc
das
ret
push
jno
dec
fs
adc
iret
movs
hlt
jmp
lock
pop
jle
cmp
pushf
adc
mov
js
mov
fdivr
adc
scas
jge
not
push
jle
call
jno
cmp
in
push
jmp
mov
cmp
jno
jl
mov
jno
dec
fs
adc
iret
movs
hlt
jmp
lock
pop
jle
cmp
sub
push
cmp
mov
inc
jmp
or
fcomp
sbb
inc
push
ret
cmp
push
ret
cmp
cmp
adc
cmp
adc
push
sar
push
ret
add
int3
push
cmp
jmp
vmwrite
ud1
jge
xchg
mov
cmpxchg
jge
inc
cdq
jge
inc
ins
cmp
call
push
fdivr
mov
jge
cmp
ss
pop
cmp
vmwrite
call
jle
scas
test
test
sti
xchg
jge
ret
push
vmwrite
ud1
jge
xchg
mov
cmpxchg
jge
inc
cdq
jge
inc
ins
cmp
call
push
fdivr
mov
jge
cmp
ss
pop
cmp
vmwrite
call
jle
scas
test
sub
cmp
jmp
jne
dec
aam
sar
or
dec
xchg
(bad)
and
bound
dec
adc
mov
stos
(bad)
jl
fadd
cld
stos
push
std
cmp
cmp
cmp
adc
push
shr
cmp
push
push
int3
push
xor
push
cmp
pop
cmp
push
adc
adc
push
or
xchg
mov
dec
xchg
inc
jns
push
cmp
(bad)
hlt
ret
push
cmp
ds
sub
lea
cmp
jge
cmp
push
ret
cmp
cmp
push
jmp
mov
cmp
push
push
rcl
lahf
ret
into
ret
cmp
lds
jle
cmp
xor
push
call
ret
cmp
inc
cmp
and
cmp
shl
adc
mov
jmp
jbe
cmp
fadd
nop
cs
jge
sub
xchg
cmp
mov
call
nop
cs
jge
inc
std
ins
ret
cmp
cmp
pop
adc
inc
jmp
ud1
jge
xchg
cmp
mov
adc
cmp
push
cmp
or
clc
fistp
dec
(bad)
shl
cmp
push
out
mov
push
push
imul
mov
fadd
xchg
sub
push
call
jl
cmp
xor
push
rcl
dec
pop
cmp
sub
cmp
rcl
cmp
cmp
push
call
cmp
add
iret
push
adc
jbe
ret
push
call
mov
int
adc
fadd
fcom
push
add
(bad)
ins
cmp
data16
sub
mov
cmp
mov
mov
aam
pop
cmp
imul
pushf
psubusw
add
imul
cmp
aad
fld
pop
inc
xchg
out
ret
push
or
sar
int3
aad
cmp
inc
test
cmp
dec
xor
push
mov
xor
cmp
xchg
cmp
inc
cmp
pop
push
xchg
retf
push
add
push
cmp
cld
cmp
retf
push
cmp
push
lea
stos
movs
pop
jle
scas
mov
ja
adc
mov
ret
dec
aam
sar
(bad)
sti
stos
mov
aaa
sar
scas
jge
loopne
jge
inc
xchg
xchg
mov
mov
pop
in
scas
jge
cmp
push
cmp
push
into
push
xor
push
xor
add
xchg
ret
cmp
cmps
mov
pop
inc
dec
lods
fiadd
fdivr
scas
jge
inc
mov
cmp
push
dec
les
cmp
test
ret
cli
xor
sar
mov
inc
mov
jg
cmp
pop
lock
jge
adc
pop
fdivr
scas
jge
inc
lea
cmp
or
call
scas
rcl
cmp
jge
mov
add
out
pop
cmp
out
adc
cmp
lock
adc
mov
ret
shl
cmp
ins
repnz
add
sub
repnz
fld
push
ja
adc
mov
ret
call
(bad)
sti
bound
jge
push
in
ret
push
call
cmp
mov
and
adc
xor
and
aam
pop
cmp
scas
cmp
cmps
gs
mov
inc
aad
push
cmp
xchg
mov
test
jne
jmp
shl
ret
and
and
and
sbb
and
pop
jge
and
and
and
and
and
and
and
sbb
pop
mov
ret
pop
pop
out
push
adc
imul
mov
cmp
fiadd
les
sub
xchg
pop
(bad)
icebp
and
and
sbb
and
push
jae
xchg
cmp
and
aam
pop
cmp
jge
ret
scas
imul
into
mov
jmp
jne
dec
aam
sar
sti
inc
hlt
pop
sar
mov
cmp
ud1
lods
jge
xchg
mov
or
inc
xchg
push
es
push
imul
xor
cmp
ret
push
ud1
scas
jge
xchg
scas
mov
pop
adc
cmp
in
add
scas
or
adc
shl
adc
cmp
scas
mov
pop
adc
cmp
cmps
xchg
fdivr
cmp
inc
mov
push
jge
cmp
pop
leave
ds
jge
inc
cmps
jg
cmp
add
mov
sar
pop
cmps
ret
push
adc
cmp
aam
ret
cmp
rol
not
and
mov
cmpxchg
scas
jge
inc
cdq
jge
inc
ins
cmp
add
(bad)
and
fld
scas
jge
nop
mov
add
iret
ins
jge
ret
push
neg
push
call
jle
cmp
cmp
fs
popf
adc
aad
push
cmp
mov
mov
mov
inc
mov
push
jge
cmp
ud1
lods
jge
xchg
cmp
mov
xchg
mov
add
sar
jge
ret
push
ud1
scas
jge
xchg
scas
mov
push
adc
cmp
in
add
scas
or
adc
mov
adc
cmp
scas
mov
push
adc
cmp
cmps
xchg
fmul
cmp
or
or
jp
mov
call
fist
adc
mov
or
(bad)
sahf
mov
mov
inc
mov
ret
mov
add
scas
or
cmp
mov
(bad)
ins
mov
push
ret
cmp
adc
cmp
scas
mov
push
adc
cmp
rol
cmp
scas
jge
dec
aam
ret
cmp
mov
(bad)
jmp
ret
cmp
shl
cmp
jmp
movs
jg
cmp
push
enter
pop
inc
jmp
push
jge
cmp
jge
inc
lock
mov
sar
cmp
mov
call
sti
adc
adc
call
or
sar
mov
mov
add
retf
cmp
ret
cmp
shl
cmp
jmp
movs
jg
cmp
push
enter
pop
inc
jmp
push
jge
cmp
jge
out
into
ret
cmp
(bad)
mov
sar
cmp
mov
call
xchg
adc
adc
xor
into
ret
cmp
dec
aas
ret
push
or
repnz
add
scas
shl
cmp
jmp
movs
jg
cmp
push
leave
push
cmp
push
xor
add
jmp
ret
cmp
jle
cmp
sar
cmp
mov
call
push
adc
adc
sbb
push
jge
jmp
ret
cmp
push
mov
mov
cmpxchg
scas
jge
inc
cdq
jge
inc
ins
cmp
add
shl
push
out
xchg
cmp
push
push
retf
push
add
jns
jge
mov
imul
push
cmp
scas
jl
cmp
imul
cmp
push
add
scas
mov
add
test
adc
xor
push
jge
jmp
ret
cmp
add
ret
push
add
ret
ret
cmp
and
mov
js
mov
fadd
cmp
dec
aam
sar
push
out
mov
cmp
aam
sar
aam
pop
cmp
xchg
push
cmp
cmp
add
scas
rol
div
jge
mov
add
ret
and
push
ret
cmp
cmp
push
push
les
ret
div
jge
mov
imul
cmp
scas
jl
cmp
imul
cmp
push
add
scas
mov
add
test
adc
cmp
push
jge
jecxz
ret
cmp
dec
test
mov
add
ret
cmp
or
or
xor
cmp
xchg
lock
dec
test
ud1
scas
jge
xchg
fadd
leave
ds
jge
stos
jl
jle
fadd
leave
ds
jge
sub
cmp
rol
jnp
fidivr
cmps
gs
mov
pop
aam
scas
jge
add
adc
xchg
cmp
jl
adc
cmp
push
or
test
push
jge
aaa
scas
jge
sub
xchg
sar
cmp
push
rdtsc
repz
cdq
jge
inc
ins
cmp
or
test
lods
jge
xchg
add
or
adc
ret
cmp
pop
cmp
push
call
sar
push
sar
fadd
scas
jge
sub
xchg
fmul
leave
ds
jge
or
or
xor
add
mov
movs
jg
cmp
jge
aaa
scas
jge
sub
xchg
cmp
ret
cmp
call
jle
scas
aaa
enter
aam
push
cmp
jbe
cmp
push
(bad)
push
add
adc
cmp
ret
push
call
cmp
push
cmp
mov
test
push
xor
fdivr
and
pop
fdivr
scas
jge
inc
mov
ret
cmp
inc
push
sar
push
ret
scas
aaa
enter
aam
push
cmp
adc
cmp
add
ret
lds
call
sar
outs
stos
shl
ret
scas
aaa
enter
aam
push
cmp
ud1
lods
jge
xchg
cmp
cmp
in
ret
push
(bad)
push
add
movs
jl
cmp
lock
ret
push
inc
cmp
push
cmp
stos
les
call
push
ja
adc
cmp
add
jle
cmp
mov
pop
dec
call
mov
(bad)
push
add
or
dec
xchg
imul
iret
scas
div
mov
cmp
push
fsub
xchg
xchg
cmp
fsub
das
inc
shr
(bad)
xor
xor
cmp
xchg
cmp
push
xor
add
retf
sti
ret
push
add
aad
jle
and
ret
idiv
sbb
ret
push
or
xor
or
fadd
idiv
mov
not
and
mov
mov
cmp
pop
jge
out
into
ret
cmp
xchg
push
adc
dec
enter
push
adc
cmp
test
jbe
add
mov
push
adc
adc
adc
cmp
fs
mov
cmp
mov
adc
push
add
jno
jge
and
mov
ret
push
div
cmp
push
adc
(bad)
push
add
jno
jge
and
mov
ret
push
imul
cmp
push
popf
adc
xlat
retf
retf
and
(bad)
int3
dec
xchg
mov
clc
fs
adc
dec
dec
mov
or
sar
or
dec
ret
cmp
fs
mov
dec
dec
cmps
mov
push
dec
cmp
sahf
test
dec
dec
sub
ret
cmp
push
or
mov
mov
cmp
scas
movs
adc
inc
lock
or
(bad)
ret
cmp
mov
cs
xchg
ret
mov
jge
iret
pop
rcl
mov
cmp
add
lds
cmp
psubusw
add
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
fsub
xchg
mov
or
inc
outs
mov
mov
adc
aam
push
cmp
mov
mov
or
test
mov
jnp
out
test
cmp
iret
sub
xor
mov
mov
add
jecxz
jno
ret
mov
call
ins
sub
ret
cmp
dec
call
push
adc
inc
cmp
cmps
add
inc
cmp
stos
clc
inc
push
cmps
ret
and
cmp
add
cmp
cmp
jge
cmp
retf
ret
dec
adc
(bad)
sbb
mov
or
push
inc
xor
push
cmp
ret
push
adc
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
iret
adc
cmp
je
enter
lods
ret
push
cmp
xchg
adc
cmp
je
enter
lods
ret
push
cmp
mov
adc
cmp
je
enter
lods
ret
push
cmp
xchg
enter
lods
ret
push
cmp
call
push
cmp
sahf
enter
lods
ret
push
cmp
mov
lods
ret
push
cmp
cmps
enter
lods
ret
push
cmp
stos
enter
lods
ret
push
cmp
scas
enter
lods
ret
push
cmp
mov
adc
cmp
je
enter
lods
ret
push
cmp
mov
lods
ret
push
cmp
mov
lods
ret
push
cmp
ret
push
adc
je
enter
lods
ret
push
cmp
retf
push
adc
je
enter
lods
ret
push
cmp
ror
adc
cmp
je
enter
lods
ret
push
cmp
fcmove
adc
cmp
je
enter
lods
ret
push
cmp
loop
adc
cmp
je
enter
lods
ret
push
cmp
repnz
lods
ret
push
cmp
test
push
adc
je
enter
lods
ret
push
cmp
dec
adc
cmp
je
enter
lods
ret
push
cmp
push
enter
lods
ret
push
cmp
adc
adc
cmp
je
enter
lods
ret
push
cmp
sbb
adc
cmp
je
enter
lods
ret
push
cmp
and
adc
cmp
je
enter
lods
ret
push
cmp
sub
adc
cmp
je
enter
lods
ret
push
cmp
cmp
adc
cmp
je
enter
lods
ret
push
cmp
inc
enter
lods
ret
push
cmp
inc
enter
lods
ret
push
cmp
dec
enter
lods
ret
push
cmp
dec
enter
lods
ret
push
cmp
push
enter
lods
ret
push
cmp
push
enter
lods
ret
push
cmp
pop
enter
lods
ret
push
cmp
pop
enter
lods
ret
push
cmp
(bad)
enter
lods
ret
push
cmp
enterw
lods
ret
push
cmp
push
adc
cmp
je
enter
lods
ret
push
cmp
jb
adc
cmp
je
enter
lods
ret
push
cmp
jp
adc
cmp
je
enter
lods
ret
push
.byte
.byte
